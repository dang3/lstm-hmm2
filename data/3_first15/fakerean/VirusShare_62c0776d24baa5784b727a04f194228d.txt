sbb
add
mov
addr16
and
cmpsb
movsb
sahf
out
and
or
jbe
insb
out
mov
icebp
push
outsb
ficoms
or
orb
inc
add
push
push
es
dec
adc
jo
inc
lods
inc
pop
push
or
mov
or
out
shlb
lods
mov
mov
inc
jo
ljmp
lds
loop
ficomps
das
add
cli
or
xchg
adc
jmp
into
insb
cmp
int3
or
xchg
scas
mov
into
adc
dec
jns
mov
rorb
or
mov
lahf
notl
and
popa
or
sbb
and
push
sbb
cmp
xlat
mov
jb
jne
movb
subl
jl
xchg
aam
xchg
movsl
insb
jno,pt
adc
jg
add
notb
sarb
test
xchg
iret
cmp
push
push
insl
push
scas
test
mov
out
repnz
scas
dec
js
dec
mov
jb
jbe
dec
cs
fnstcw
dec
xor
cld
push
lea
hlt
popa
jl
sarb
lods
or
mov
in
mov
xor
pop
outsb
andb
jae
xchg
xchg
loopne
fistpll
mov
dec
xchg
insb
aas
sub
dec
xor
aaa
in
xchg
fidivrs
outsl
push
xor
jg
les
stos
push
and
arpl
mov
mov
pop
aaa
fildl
xlat
test
icebp
add
inc
xchg
mov
push
inc
xchg
repnz
cltd
inc
test
lcall
mov
movb
jo,pn
inc
adc
lcall
push
das
jns
sub
loopne
shlb
push
jecxz
pushf
std
dec
clc
in
ja
and
pop
cs
lret
push
jle
sar
std
cli
or
call
daa
mov
pushf
call
xchg
mov
mov
inc
add
cmpsb
jae
mov
lods
push
jae
jmp
in
es
test
dec
inc
cmc
xchg
aam
roll
out
sbb
inc
lahf
leave
inc
fwait
push
lds
cmpsb
adc
sbb
and
push
mov
xor
fdivrl
ja
add
xor
xor
sub
popf
cmpsl
ljmp
adc
aam
les
test
push
adc
idivl
loopne
addr16
lods
sbb
loopne
xchg
mov
je
sbb
mov
push
cmp
add
aas
loop
stos
and
lahf
stc
add
dec
pop
xor
ret
nop
shrb
cmp
fxch
test
mov
push
mov
fistpl
pop
dec
xchg
adc
loopne
mov
test
enter
mov
or
cwtl
jo
sbb
mov
test
add
mov
out
xor
xor
jecxz
pop
ret
js
pushf
das
leave
sub
cwtl
ds
mov
mov
rcll
outsl
out
lea
mov
xor
add
addb
addr16
push
cmpb
into
add
xchg
adc
out
xchg
lcall
testb
fnstsw
cmovb
inc
xchg
cmp
clc
sub
adc
outsl
dec
sub
je
dec
mov
add
sbb
jns
std
and
pop
and
sub
jbe
mov
xor
lock
movsb
push
enter
adc
sub
shlb
jecxz
fnstcw
jne
mov
mov
stc
or
pop
dec
jl
orb
mul
lret
std
xchg
jo
ret
xor
fs
movsb
jp
test
mov
insb
mov
mov
stc
push
or
jp
mov
addb
fwait
adc
adc
dec
loopne
dec
rclb
data16
and
xchg
mov
cmc
data16
and
subb
lods
in
push
mov
out
pop
insb
push
test
roll
enter
xchg
mov
inc
popa
xor
cmp
pop
int
mov
hlt
test
xchg
sbb
cmp
mov
push
sub
cmpsb
push
jecxz
cwtl
into
pop
out
test
push
popf
sarl
in
push
fsubrl
ret
enter
stc
mov
dec
xor
cmp
ret
dec
pop
aam
inc
jo
dec
andb
dec
xchg
loop
outsb
mov
fwait
and
lahf
dec
std
dec
and
repnz
lods
mov
cmpsl
inc
int3
js
sti
das
je
mov
gs
jne
addr16
fcomps
shl
lock
stos
leave
fisttpl
jle
lock
shl
mov
mov
mov
fstp
xchg
or
std
xor
sbb
push
mov
sub
jb
jmp
adc
arpl
xchg
push
xchg
sbb
sbb
push
push
push
out
dec
push
inc
icebp
ret
cmp
int
dec
rcll
jecxz
xor
mov
test
jl
movsl
xchg
cli
push
cltd
cld
jnp
divb
iret
add
sbb
adc
lahf
adc
xor
sub
shll
lret
and
aas
dec
pop
mov
test
stos
rol
insl
push
cmpsl
pop
push
popa
lea
push
ss
dec
xchg
leave
xor
dec
popl
xchg
sbb
lods
imul
aam
mov
jns
imul
add
test
pop
mov
stos
sub
fnsave
push
gs
pop
subl
call
and
jp
jl
imul
repz
lret
movsl
mov
es
cmp
mov
sub
push
jg
int3
fwait
sti
bound
rcll
ljmp
jae
fcomps
and
scas
movsl
clc
and
into
outsb
mov
icebp
add
mov
gs
mov
aaa
adc
push
jge
jl
xor
out
add
in
jae
fcompl
jecxz
movsl
lea
xor
add
adc
push
add
dec
jge
in
lods
mov
pushf
or
imul
scas
and
adc
leave
into
ret
add
subb
pop
inc
add
out
mov
shlb
call
enter
addb
mov
mov
or
movsb
sbb
sub
mov
pop
popa
mov
cli
adc
cwtl
inc
xchg
dec
ljmp
cmp
jl
adc
and
ljmp
fisttpll
jmp
test
mov
dec
fs
xor
jge
repnz
out
test
push
test
out
popa
sub
fwait
push
xchg
pop
and
mov
push
rol
mov
rclb
popf
xor
jne
shr
mov
in
cmp
sub
insl
cmc
inc
dec
inc
dec
pop
jnp
add
cli
mov
popf
mov
rcrl
lret
add
mov
fbstp
in
jo
or
mov
jg
push
aam
cmp
lahf
mov
push
jmp
cltd
sub
in
pop
mov
gs
add
mov
fcmovnbe
cmp
adc
mov
push
jle
rolb
insb
mov
xor
outsl
adc
ss
fidivrl
or
sbbl
cmpsl
test
pop
test
pusha
xor
scas
xor
pop
aam
adc
incb
or
jno
adc
inc
push
push
test
xchg
sahf
adc
jecxz
mov
sahf
imul
mov
push
mov
mov
dec
dec
fwait
cmp
xchg
xor
aam
ret
into
jo
repz
add
popf
sub
imul
xor
ficompl
mov
xchg
out
add
call
scas
dec
inc
inc
aam
loope
insb
test
jp
push
cmp
xchg
aas
arpl
mov
enter
sub
cmp
or
cmpsl
mov
shll
adc
dec
sti
bswap
jecxz
jae
lret
jns
imul
aad
push
xor
pop
in
inc
std
add
dec
and
xor
push
ret
mov
xor
jle
addb
negb
les
stos
sbb
mov
mov
aad
cmp
sbbb
das
jb
adc
or
mov
mov
and
mov
jno
fnsave
nop
pop
or
cmc
rcr
add
adc
push
sub
and
pop
cmp
in
lea
fcompl
scas
push
mov
and
cltd
pop
inc
iret
push
fisttpl
jno
mov
jmp
jns
stos
dec
fs
loopne
jge
sub
xor
mov
push
pop
mov
and
inc
test
mov
fs
jo
push
ret
mov
pop
lods
fstpl
lcall
pushf
mov
movsl
daa
gs
pop
out
xchg
pop
in
aad
push
fisttpl
and
lods
inc
sbb
icebp
shrb
mov
push
pop
inc
sbb
pop
pop
and
insl
mov
and
mov
stos
push
and
pop
pop
leave
mov
leave
jo
data16
xor
inc
aam
cltd
jle
lods
push
cmp
xor
add
scas
dec
data16
sbb
adc
lds
mov
mov
and
out
insl
in
xchg
cmc
std
and
pop
ds
pop
inc
pop
lock
ret
xor
xor
sub
arpl
jl
out
movsb
xor
push
cwtl
and
call
fisubl
sahf
mov
adc
les
pop
mov
xorl
fisttpll
clc
and
insl
jbe
mov
loop
pop
xchg
mov
xchg
cmp
lods
push
xchg
add
adc
int
pop
lahf
and
push
sub
cmpl
int3
xor
je
mov
add
jge
adc
cmp
lock
fwait
add
sub
insb
out
jns
jae
fidivrl
cltd
adc
add
mov
daa
sub
jle
cmp
cmp
addl
pop
jmp
xlat
push
sahf
mov
pop
xor
mov
or
and
bound
outsb
int3
outsb
mov
or
and
inc
sub
test
pop
dec
or
outsb
push
js
test
xor
sbb
loop
adc
sub
loope
jge
dec
sub
sub
setnp
test
in
mov
xchg
sbb
jmp
xchg
daa
pop
stos
dec
aam
lock
inc
pop
negl
dec
cmp
test
mov
or
test
sbb
jmp
hlt
sbb
mov
test
shrb
pop
repz
call
call
ret
xchg
sbb
hlt
sbb
sbb
out
gs
out
neg
insl
addr16
mov
ficoms
aam
and
add
inc
sbb
mov
aaa
sarl
xchg
int
mov
lahf
in
les
jl
xchg
jmp
ficoms
sbb
out
push
jnp
fs
or
fwait
sub
xchg
adc
ljmp
mov
mov
scas
xor
push
xor
pop
imull
sub
fcomps
sub
cmp
dec
mov
stos
test
xchg
stos
sbb
cmp
enter
xor
iret
pop
test
or
sbb
xchg
push
iret
iret
adc
je
jg
sbb
adcl
mov
leave
jle
pushl
mov
dec
cmpsl
pop
or
insl
out
inc
cld
in
xchg
icebp
mov
lahf
push
pop
mov
xchg
dec
adc
subb
sarl
cwtl
mov
inc
ja
fistpl
xchg
hlt
add
inc
cld
shlb
push
ffree
jge
loope
sub
cmp
inc
mov
mov
mov
imul
mov
sub
lret
jg
dec
add
es
xor
cmpsl
xchg
jns
push
mov
inc
xchg
xlat
bound
mov
add
in
pop
cwtl
pushf
outsb
stos
sti
dec
mov
lcall
mov
sub
xchg
loopne
xchg
fldl
xchg
xchg
jmp
ljmp
dec
or
fistpl
lahf
and
dec
add
ss
cmp
adc
cmpsl
adc
outsb
jo
inc
clc
ds
je
mov
pusha
jp
cmp
pop
scas
sbb
adc
out
orl
or
or
and
nop
les
add
and
and
cwtl
push
dec
cmpsl
pop
inc
or
repnz
push
push
inc
ljmp
xchg
inc
cld
fisubrl
mov
je
ret
add
loope
data16
fildl
jbe
inc
in
pop
daa
jns
mov
adc
push
inc
lods
add
loope
daa
in
mov
push
sub
aaa
mov
mov
cmpsl
fcomps
mov
cltd
xchg
ret
lds
fstpl
xchg
mov
movsl
scas
and
jle
jg
fidivs
adc
aam
adc
fisubrl
lock
icebp
out
pop
inc
mov
push
add
dec
aam
into
imul
je
adc
xchg
inc
cmp
xor
les
dec
lods
inc
icebp
xor
sarb
jl
or
sbb
scas
jge
aam
mov
cwtl
test
xchg
insl
xor
stos
push
std
and
jmp
es
add
and
add
mov
xchg
leave
xchg
cmp
faddp
das
sti
lahf
cmp
insb
decl
pop
add
sub
xchg
andb
shr
mov
jbe
mov
mov
in
lock
cmp
lret
daa
fiaddl
sar
sub
pop
imul
fmul
je
sub
push
jb
mov
jne
frstor
sti
repz
dec
ss
mov
cs
jmp
or
fst
arpl
xchg
fidivs
pop
in
and
fiaddl
push
movsb
lds
mov
lcall
int
in
xor
repnz
cwtl
or
mov
sbb
xor
inc
xchg
nop
xchg
cmc
sbb
cmp
push
pop
push
mov
ret
std
out
xor
mov
push
push
jae
les
push
daa
dec
jae
push
jmp
fists
push
xor
loopne
idiv
test
inc
add
mov
or
inc
pop
xchg
push
mov
add
loopne
rorb
inc
stc
mov
xor
sti
adc
mov
jecxz
hlt
dec
pop
not
xchg
cld
test
inc
mov
aad
pop
sbb
mov
rorb
or
and
xor
gs
sahf
sbb
xchg
xor
cmp
add
outsl
jecxz
insl
inc
adc
xchg
adc
ret
fdivl
add
mov
inc
out
pop
int3
adc
jae
push
pop
loopne
xchg
sbb
push
sbb
mov
mov
cmpsl
ljmp
dec
insb
and
or
xchg
icebp
popf
fcomps
or
mov
jnp
mov
test
jp
pop
aaa
addb
pop
jae
aaa
mov
scas
adc
sbb
test
orb
aam
rolb
call
adc
or
dec
mov
dec
sahf
xchg
in
jge
shll
bnd
mov
mov
sbb
stos
xchg
jno
xchg
sub
jo
fbld
sahf
cmp
mov
les
pop
xor
out
xchg
addr16
mov
mov
mov
cmpsb
imull
inc
shlb
add
repnz
pusha
cmp
cs
jle
push
jl
fnstsw
adc
jge
xor
lods
adc
mov
repnz
sub
aaa
push
pop
mov
jns
jl
dec
xor
into
push
popf
stc
les
adc
lock
lcall
dec
push
xchg
inc
icebp
js
sbb
jg
rcr
adc
ljmp
inc
mov
add
rcrl
mov
icebp
dec
cmp
mov
sbbl
jmp
ja
sti
dec
cmp
rorb
mov
orb
jmp
icebp
adc
dec
push
sti
roll
cli
aas
in
mov
add
cmc
jae
arpl
loop
ja
xorb
push
sti
cli
push
ret
out
ret
out
xorb
adc
shl
mov
adc
cmp
jle
jge
pop
clc
loope
mov
and
notb
aaa
mov
sub
cmp
or
lahf
test
fldt
or
sub
pop
mov
mov
push
addr16
xchg
adc
stos
inc
shll
add
test
in
add
sbb
xchg
hlt
lods
mov
xchg
inc
enter
mov
cmp
mov
test
ss
or
xor
aad
shrl
jae
mov
jbe
inc
int3
sbb
cwtl
test
adc
aas
insb
test
dec
jg
fcmovnb
inc
jmp
into
sub
test
faddl
mov
push
jp
inc
push
xchg
mov
loopne
out
mov
mov
imul
pop
dec
mov
xchg
outsb
or
sub
cmp
and
lds
movsb
adc
add
sub
mov
push
jmp
xlat
sbb
mov
or
stos
mov
in
test
test
std
push
andb
xchg
test
lahf
push
jae
add
movsb
shll
sbb
or
in
mov
xchg
or
aaa
into
lds
aam
sbb
sub
int
outsb
add
in
or
cwtl
jno
inc
xchg
out
popf
loop
pop
add
pop
sbb
hlt
or
or
andl
ret
or
fiadds
notl
mov
xchg
lret
cmp
daa
pop
stc
dec
cmp
cs
imul
test
fcomp
aas
lret
daa
testl
cmc
mov
shl
pop
pop
xor
lock
add
bound
pusha
xor
jnp
dec
cmp
and
inc
out
inc
mov
cmp
pop
out
out
mov
xchg
movups
push
sub
jp
inc
xor
jl
gs
xor
fsub
push
mov
inc
adc
hlt
lds
insb
sbb
lods
jno
dec
xchg
ret
mov
in
mov
mov
cmp
xor
outsb
mov
cmp
dec
mov
addr16
ljmp
rcll
push
add
addb
insl
jecxz
mov
ror
pop
loop
lcall
jo
cwtl
pusha
mov
or
scas
stc
sub
shll
push
ljmp
repz
call
cmpsb
cmpsb
gs
add
arpl
test
cmc
mov
dec
inc
inc
pop
add
mov
inc
lds
aam
mov
enter
fs
lcall
pop
rcl
daa
mov
inc
adc
mov
icebp
scas
jb
mov
arpl
test
mov
push
sbb
xchg
xor
cmp
jle
bound
xor
pop
pusha
dec
repnz
xchg
mov
mov
jp
xor
aas
rorl
fmull
iret
in
sub
sbb
cmp
and
push
xor
test
push
or
in
add
js
mov
xchg
cmp
stos
pushf
mov
std
mov
sub
lds
lock
imul
or
xchg
xchg
sbb
inc
jb
sbb
dec
in
mov
mov
add
adc
test
stos
jg
subb
mov
mov
mov
leave
imul
sbb
jb
xchg
repz
inc
les
das
cmpsb
sbb
and
push
xchg
adcb
lods
fsts
or
leave
cmp
dec
and
mov
cmp
int3
hlt
test
sbb
ds
jmp
adc
imul
push
pop
mov
mov
je
cwtl
enter
mov
sbb
mov
call
push
sub
jecxz
imul
mov
stos
mov
cmp
pop
mov
int
int
in
push
xor
cmpl
std
dec
nop
jmp
mov
sub
cltd
ds
sub
pop
ret
lcall
iret
push
jmp
xchg
lahf
cmp
mov
faddl
insb
das
mov
decb
es
in
jle
or
fstpt
bound
outsb
sub
adcl
add
das
push
or
mov
lret
add
inc
push
sbb
mov
hlt
in
stos
clc
jmp
pop
or
test
or
imul
or
out
sbb
mov
int
shld
mov
jg
loope
fst
sub
jb
stos
fistpl
pop
push
xchg
xchg
push
jl
loopne
or
pop
stos
or
lahf
and
and
enter
movb
and
icebp
bound
push
pop
mov
js
and
mov
ret
hlt
out
xor
xor
pop
push
fmuls
mov
push
add
fcom
push
jmp
outsl
movd
mov
xadd
sbb
inc
sbb
ficoms
int
scas
push
cltd
lret
xchg
repz
repz
xchg
fistl
cmp
rcrl
xchg
pop
jno
cltd
test
data16
lcall
lods
stc
movsb
idivl
shlb
xor
or
and
add
inc
clc
cltd
mov
cmp
cmp
jns
mov
mov
insb
pop
int3
imul
and
xor
mov
jo
in
mov
xchg
outsb
mov
xchg
in
or
push
inc
mov
aas
test
insl
sub
aas
mov
xor
and
repz
lea
loop
ficomps
scas
xchg
and
xor
ljmp
jmp
pop
addl
shrl
pop
sbb
aad
cltd
loopne
mov
mov
sub
scas
xchg
pop
push
lods
sbb
jle
cli
pop
mov
mov
mov
mov
and
xchg
sub
hlt
adc
jno
adc
iret
sbb
test
stos
jno
lods
add
cmpsl
stos
inc
sarl
pop
mov
aad
out
cmpsb
jl
fistpll
faddp
cmp
in
or
lds
push
cs
mov
dec
js
xchg
sahf
cmp
es
mov
adc
lods
sahf
repnz
rcrl
push
rcrl
js
push
lds
lods
cmp
push
inc
push
test
jnp
negb
stos
xchg
pop
fwait
popf
xchg
ljmp
and
add
mov
iret
inc
int3
jg
scas
ja
inc
jge
repz
mov
adc
pop
pushf
cwtl
mov
dec
cmp
mov
insb
stos
lahf
das
xchg
roll
dec
lds
cmp
push
lds
popa
fucomp
jge
das
into
lds
mov
push
sub
add
ret
jno
mov
cs
fucom
push
cli
mov
inc
sub
das
pop
ret
stos
addr16
loopne
xor
loopne
xchg
ficoms
push
ja
cli
mov
rorl
movsl
mov
mov
xor
jb
sti
mov
mov
addb
or
push
scas
pop
in
lret
outsb
inc
pop
dec
dec
xchg
and
int3
mov
scas
jmp
add
movsl
xor
ret
stos
sbb
cmp
xor
ret
inc
fucomi
dec
mov
push
cmpsl
cmpsb
cmp
push
outsl
push
mov
xlat
jo
fistl
jecxz
scas
sbb
and
ss
cld
cmp
sbb
push
hlt
fisubs
mov
scas
fisubl
sbb
sbb
dec
insb
jl
call
leave
push
mov
pop
xor
xlat
push
test
ret
mov
js
and
aas
stc
xchg
repz
pop
fdivl
sahf
adc
leave
push
jno
xlat
in
sbb
shll
mov
xchg
sub
push
jne
movsb
repz
in
sbb
imul
push
jne
nop
mov
xchg
cld
nop
cmp
jmp
adc
ja
xchg
loop
and
mov
outsb
xor
xor
jmp
test
xor
mulps
mov
xchg
into
stos
popf
ds
sbb
pop
mov
sbb
mov
loop
xchg
out
addb
or
push
or
add
jne
loopne
loopne
ljmp
mov
sbb
push
adc
dec
dec
jb
and
pop
es
xchg
mov
dec
cwtl
ss
addr16
jmp
call
fwait
int3
stos
bnd
ss
jo
dec
cli
imul
push
adc
push
fldenv
iret
jge
dec
mov
rclb
sbb
or
jle
sbb
sub
ja
mov
stc
inc
and
dec
xchg
dec
shrl
dec
and
push
inc
ret
pop
and
and
xor
mov
in
inc
into
or
inc
or
mov
je
cmp
jo
stc
in
inc
ja
jmp
sbb
xor
inc
call
and
rolb
arpl
sbbb
in
ret
fnstsw
push
arpl
stos
inc
xor
mov
icebp
mov
xor
push
enter
ja
repz
xor
rolb
add
mov
imulb
pop
push
push
dec
enter
fdivl
add
popaw
cmp
icebp
dec
inc
push
and
lea
into
push
mov
mov
xor
movsb
jmp
inc
inc
xor
jno
push
add
loope
sbb
mov
jecxz
pop
or
push
int
fbld
dec
hlt
icebp
fists
mov
lret
mov
mov
cwtl
fimuls
sbb
out
repz
addb
out
cltd
int3
cmp
sbb
inc
or
pop
ljmp
sti
xchg
mov
dec
int3
fs
pop
sbb
pop
or
fs
pop
add
stc
fidivrl
jbe
sar
fnstsw
rorl
lock
xlat
xor
jno
cmp
daa
fs
adc
mov
dec
or
cmp
mov
sti
push
clc
mov
in
insl
out
gs
jne
loopne
sbb
pop
arpl
fwait
or
mov
leave
sub
sbb
push
mov
sbb
fsubrs
cmp
pusha
sbb
add
xchg
xor
dec
ljmp
pop
jl
sbb
setge
add
mov
ss
pop
jns
fadd
cmp
cmp
ret
jbe
push
push
pusha
push
hlt
int3
stc
arpl
ficoml
out
aaa
imull
js
fistl
je
jne
sub
xchg
cmc
jmp
scas
jecxz
rol
lret
out
adc
arpl
stos
test
adc
data16
xchg
aam
cltd
mov
inc
movsb
sub
jae
rcrl
push
iret
inc
add
add
cltd
pop
cltd
mov
mov
es
iret
std
fucomp
mov
sbb
and
or
in
jg
and
scas
sbb
cmp
gs
cli
add
sub
mov
popa
lahf
loop
popf
sub
or
fstpt
scas
fstl
ret
cs
adc
mov
mov
int
add
add
imul
ret
inc
mov
or
or
lret
mov
cmpsl
daa
cltd
or
add
and
xlat
sbb
inc
mov
and
mov
push
dec
lcall
jo
dec
sbb
cmpl
out
les
jne
out
fstps
sub
js
jbe
stc
xor
cltd
jle
lea
repz
and
xor
aas
push
movsl
std
stos
roll
sub
popf
aaa
add
std
inc
lods
adc
sbb
sbb
adc
jbe
jecxz
mov
adc
sti
in
push
mov
sbb
or
shl
xchg
jbe
sub
mov
xchg
push
adc
cltd
push
push
sub
fildl
out
or
mov
mull
dec
pop
bound
outsl
sub
or
push
les
cmp
pop
call
sub
sbb
cmp
mov
stos
mov
pop
sbb
adc
xor
into
xchg
xor
das
fcmovb
sub
adc
imul
es
aaa
push
jmp
arpl
pop
pusha
cmpsb
pop
push
inc
mov
dec
notb
lret
mov
jo
lods
jne
cmp
nop
es
addl
sub
call
xor
sbb
jle
movsb
push
inc
shlb
cmp
cwtl
pop
out
arpl
mov
pop
sub
insb
lea
cmp
mov
jmp
push
mov
cli
jne
ficoml
cmp
cli
push
jge
and
jns
inc
add
movsl
popf
dec
das
aam
aad
shlb
ds
lods
aam
or
or
pop
ljmp
inc
out
mov
int
xchg
jmp
sarb
mov
sbb
movsb
mov
jmp
xor
es
mov
or
stos
or
sub
cmp
mov
jmp
xchg
and
pushf
ss
cmc
add
fistpl
sbb
shll
insb
outsl
jo
inc
xchg
cli
out
jp
xchg
sub
xor
xchg
inc
xor
xchg
dec
sbbb
ss
xchg
cltd
scas
fwait
mov
mov
mov
fsubs
cld
imul
mov
mov
sbb
loop
fdivr
fistpll
mov
or
test
js
xor
cmc
mov
sbb
test
push
mov
mov
cwtl
jo
cmp
cmc
mov
dec
fwait
stos
or
inc
sahf
in
pop
jl
cli
jbe
lea
sub
inc
add
outsl
cmpsb
pop
rclb
mov
jne
sbb
mov
mov
mov
les
hlt
daa
add
xchg
outsl
jge
ja
xlat
insl
mov
movsl
xlat
cli
push
cmpl
test
cld
sub
and
sub
iret
je
pop
sub
imul
mov
rcr
and
mov
push
sbb
jge
es
and
xchg
hlt
mov
push
mov
fimull
divb
mov
sbb
shl
fwait
test
or
push
sbb
or
or
aad
fwait
mov
mov
vmovntps
movsl
dec
xor
push
insb
jo
lret
lock
lds
cs
mov
test
in
out
mov
mov
cmc
ja
inc
inc
addr16
cmc
push
test
test
pop
test
pop
sar
orl
pop
sbb
and
sub
sbb
mov
add
push
adc
sar
sub
xor
std
xor
mov
imull
or
push
adc
stos
fists
pusha
xor
or
jg
stos
push
mov
scas
inc
lea
push
xor
cmc
and
icebp
or
out
inc
adc
pop
xor
imul
aad
idiv
xchg
xchg
sbb
sub
sbb
sbbl
dec
adc
cmp
or
cwtl
repnz
ret
stc
sti
mov
mov
add
rorb
dec
pushf
pop
int3
xchg
xlat
push
cmp
cmp
and
out
sub
push
pushf
js
xchg
cmc
or
pop
xor
pop
or
jno
lahf
xor
cltd
movsl
push
inc
mov
sbb
pop
pop
int
jne
or
mov
adc
arpl
inc
mov
adc
loopne
xor
lcall
inc
popf
outsl
fstpl
push
aas
push
mov
mov
mov
adc
jae
test
xlat
insl
jp
mov
mov
pop
aad
sbb
es
lahf
cmp
push
sti
inc
pop
sbb
jo
std
je
jecxz
lret
or
lahf
sbb
xchg
add
bound
pushf
insb
mov
sahf
xor
xor
add
pusha
ret
fidivs
das
ja
in
push
mov
inc
iret
push
jp
movsl
arpl
fistps
fisubl
stos
cmp
mov
xlat
call
xor
lock
je
pop
push
fistl
cld
fnstsw
rcr
jb
pushf
dec
lea
lret
aad
mov
jns
add
mov
shrw
adc
std
push
lcall
lcall
fwait
add
mulb
mov
ja
push
das
xchg
push
mov
cli
in
leave
fs
mov
incb
push
xchg
incl
cmp
push
cli
pushf
pop
test
mov
xchg
testb
outsb
sbb
adc
push
mov
ja
push
test
or
jbe
pop
mov
dec
out
stos
int3
add
adc
cltd
pop
test
cmp
dec
mov
int
fsubrl
push
dec
xor
push
dec
jl
jae
adc
mov
std
loop
fistpll
xor
mov
add
jbe
test
pop
xor
mov
sbbl
not
push
dec
jnp
inc
rol
dec
mov
icebp
mov
sub
push
test
das
out
sbbb
outsb
sbb
aaa
and
mov
xchg
sub
mov
pop
jns
mov
jmp
pushf
xor
or
fstpt
adc
fisubs
xor
outsb
mov
inc
call
test
sahf
stos
sub
out
add
jae
outsb
cli
ja
call
inc
jp
shll
sbb
push
hlt
insl
lret
cmp
pop
stos
and
xchg
xor
cmp
or
jmpw
jp
inc
insl
pminsw
pop
cli
push
std
fdivr
pop
adc
xchg
call
adc
lods
mov
and
push
sti
call
mov
nop
jp
jge
add
data16
lods
or
loope
xor
addl
adc
mov
mov
xor
in
inc
ja
in
outsb
pop
and
aam
hlt
jb
mov
stos
adc
std
sub
popfw
dec
ficoms
mov
ret
or
sub
cmp
sbb
ss
or
movsl
push
and
enter
lods
push
sbb
mov
mov
push
dec
in
bound
test
push
adc
jg
sbb
jg
push
cmp
pop
mov
gs
int3
emms
adcl
inc
adc
adc
ret
inc
adcb
xor
aas
insl
jl
test
mov
jb
cmc
xlat
jne
fcoms
mov
sub
push
cmp
lahf
mov
aam
jp
fldl
aam
repz
mov
arpl
in
repnz
pop
and
push
movsb
jnp
loop
fs
fdivl
pop
mov
scas
mov
jo
add
mov
inc
and
jo
out
xchg
cltd
fnsave
pop
out
xchg
jbe
pusha
repnz
dec
test
push
jl
and
jns
movsl
pop
add
test
sbb
out
testb
addr16
add
cmp
jnp
push
pop
add
dec
mov
xchg
call
stos
movb
mov
icebp
das
or
movsl
xor
mov
add
leave
jp
inc
test
nop
xchg
push
lock
dec
push
xchg
scas
inc
aad
push
add
sub
jg
into
iret
push
fisttps
jg
pop
scas
and
sbb
in
out
dec
mov
cmp
xlat
outsl
fildl
rcll
hlt
jmp
push
shlb
mov
insb
bound
ds
lods
xor
in
insl
popf
repz
xchg
outsl
xchg
mov
lret
inc
pop
mov
adc
mov
cli
orb
scas
repz
xchg
ret
xchg
scas
sub
fists
jl
mov
sahf
and
add
xor
jecxz
test
pop
pop
cmp
popa
cltd
dec
push
pop
mov
int
mov
std
and
xlat
test
lcall
push
adc
cmp
sbb
mov
fisubl
jb
inc
xor
lahf
fs
dec
jmp
test
sub
inc
iret
push
lret
mov
xchg
or
std
lods
adc
jne
push
repz
inc
cmp
xor
pop
cmc
pop
jno
adc
shl
pop
inc
pop
inc
fst
adcl
into
inc
push
jle
mov
dec
dec
sahf
jae
pop
jb
fcompl
adc
xchg
adc
stc
adc
mov
repz
xchg
cmpsb
lock
mov
rolb
es
sbb
repnz
and
sahf
mov
rcr
jb
pop
push
sbb
xor
fistl
sbb
push
shr
xchg
mov
ret
mov
mov
rcr
mov
inc
sti
push
jbe
jne
mov
test
and
xchg
lock
sub
and
mov
jno
xor
xor
int3
movsl
out
lahf
xor
sbb
mov
lea
jb
pop
dec
mov
jbe
test
inc
pop
cmp
pop
xor
xchg
add
mov
dec
and
xchg
push
or
xchg
or
mov
loopne
pop
mov
js
or
jo
sbb
aaa
mov
mov
adc
xor
mov
out
xor
stos
mov
xor
sub
pop
push
mov
push
sub
push
int
aas
fwait
leave
std
movlps
fisubl
mov
jl
mov
sahf
add
push
mov
outsl
scas
and
cltd
sbb
bnd
jb
mov
xchg
sub
or
lods
jbe
shlb
sub
scas
jge
ret
jo
and
test
jae
push
ficompl
icebp
cld
and
out
dec
ret
mov
sub
mov
arpl
push
sub
adc
pop
inc
jns
sub
and
push
das
push
scas
hlt
cmpsl
outsl
das
insb
insb
cwtl
cltd
out
cs
push
adc
mov
add
fildll
pop
out
adc
push
dec
call
fbld
lods
std
scas
adc
sbb
dec
aad
or
sub
imul
scas
lcall
cmp
mov
inc
lahf
pushf
into
adcb
nop
bound
rcll
add
popf
pop
push
into
push
push
or
fwait
mov
xor
jbe
cmpsl
mov
rorl
cs
arpl
lods
inc
ffree
rol
icebp
call
out
mov
adc
rclb
cld
aam
pop
xchg
and
dec
inc
lahf
sbb
test
in
in
jmp
adc
scas
ret
in
xor
js
jnp
and
jae
mov
inc
insl
pop
pop
jecxz
xchg
int
pop
push
icebp
das
mov
add
mov
mov
add
inc
xor
lret
adc
test
mov
imulb
and
dec
lds
divb
dec
mov
adc
lcall
repz
pop
push
mov
test
je
mov
sbb
jmp
pop
aas
je
add
fadd
cmp
xor
incb
dec
dec
adcb
mov
lahf
xchg
imul
and
pop
test
aad
or
cli
lods
pushf
add
cmp
dec
sbb
pop
fldt
pop
push
pop
mov
push
push
fdivp
xchg
xchg
in
arpl
ja
fcomps
in
pop
xchg
out
mov
in
popa
int
or
lds
movsl
dec
sbb
aad
outsb
pop
xchg
ljmp
aam
jnp
adc
ret
xor
repnz
mov
movsb
pop
aad
in
push
sbb
pusha
xchg
aam
test
mov
sbb
insl
push
mov
cs
add
cmc
ror
scas
mov
cmpsl
pop
test
nop
mov
push
loope
rcrl
mov
xor
out
xor
jbe
les
fisubl
movsl
lock
jae
jmp
adc
in
movsl
enter
xchg
push
push
dec
stos
jno
add
mov
andl
shll
adcl
std
std
sub
and
aad
into
test
mov
xchg
arpl
fisubrl
test
popa
adc
insb
xchg
popf
sub
roll
call
cmp
push
xor
ret
daa
mov
pop
aam
cwtl
xor
sub
push
sbb
ss
xchg
sti
ja
es
insb
and
daa
js
add
cmp
dec
js
jne
hlt
repnz
repnz
push
and
and
fsts
fldenv
ljmp
leave
mov
fdivrl
mov
xchg
cmp
adc
outsb
dec
or
pop
fnsave
mov
sbb
pop
xchg
jae
addb
cltd
scas
cwtl
xchg
pop
jp
jne
cmp
or
push
dec
jecxz
pop
clc
inc
jns
mov
or
jno
jge
sub
call
cld
fcom
xchg
jbe
mov
inc
or
or
stc
sti
aad
loopne
cwtl
inc
and
popa
pop
cmp
enter
push
mov
sti
jbe
mov
mov
cmp
lods
shll
or
and
jb
call
xlat
pop
push
add
dec
jmp
add
setbe
aam
and
mov
cmpl
adc
mov
sarl
xchg
jbe
mov
lahf
dec
mov
mov
les
cmp
mov
fsubrl
cld
mov
jbe
pop
cmpsl
add
movsl
cmp
sti
mov
fildl
xchg
cmp
pop
xchg
xchg
and
sarb
scas
aam
inc
xchg
sub
sbb
mov
lret
ja
xor
mov
jl
cwtl
mov
scas
dec
or
stc
sub
mov
sarb
stos
int3
cltd
pop
or
fdivr
out
lock
les
sbb
call
xchg
in
popa
mov
jge
lret
push
mov
or
gs
cld
adc
lea
adc
and
fwait
out
xchg
cmp
clc
xor
es
rcrl
adc
adc
jmp
das
icebp
adc
out
xchg
shl
and
fcmovnu
xchg
cmp
jmp
jl
inc
push
push
xchg
cmp
sub
pop
add
aas
push
cmpsl
sbb
xchg
cmp
aam
fst
mov
in
sbb
dec
into
mov
xchg
mov
ljmp
cli
dec
pop
push
mov
inc
adc
stc
mov
xchg
push
data16
jbe
cmpsb
aas
pop
insl
cwtl
or
xlat
push
sub
mov
cmpsl
rorl
pop
cltd
rclb
add
push
push
jge
mov
xchg
push
add
and
mov
and
or
aaa
mov
icebp
pop
sbb
ret
pop
cmp
jl
pop
fcmove
rorb
and
into
outsl
int
add
sub
mov
lahf
lret
mov
add
das
enter
inc
mov
cmpsl
mov
jl
jb
fildl
aaa
inc
mov
push
sarb
jo
dec
inc
aas
and
stos
dec
mov
xchg
mov
lds
mov
mov
xchg
shl
clc
xlat
mov
aad
les
and
outsb
test
mov
pop
cmp
and
nop
shr
mov
pop
push
adc
jb
addr16
jge
xchg
mov
push
enter
rcl
adc
vpandn
es
popf
in
mov
sti
std
mov
mov
cmp
sahf
mov
mov
dec
rcrb
lods
mov
fnstcw
cmp
jl
pusha
mov
dec
lahf
out
inc
in
dec
mov
cld
add
pop
lods
sbb
push
fcmovne
sbb
out
nopl
dec
int
and
sub
bound
and
mov
popa
rcr
les
les
ror
test
and
or
inc
popa
pop
mov
mov
fsubr
mov
out
push
scas
cmp
fisubrs
popf
js
jmp
mov
xor
mov
les
dec
mov
cltd
jbe
mov
pop
add
pushf
lds
psubb
jb
mov
lea
andb
sbb
out
push
mov
or
outsl
jmp
pop
push
jle
rcl
cld
popf
aam
in
add
mov
dec
leave
dec
add
dec
rolb
out
cmp
movsb
add
or
in
scas
dec
bound
adc
or
sub
test
mov
and
push
fstps
outsl
xlat
cmp
mov
mov
testl
xor
sbb
es
dec
fwait
sub
push
inc
push
stos
adc
in
cli
or
add
cltd
test
shlb
imul
jmp
scas
test
out
hlt
test
hlt
pushf
mov
mov
inc
xchg
jg
xchg
dec
cs
or
iret
push
dec
push
pop
push
dec
mov
lahf
sub
jp
fstpl
fidivrl
mov
xlat
enter
mov
jecxz
imulb
xor
add
test
repnz
xor
add
ret
sub
add
cmp
sbbb
xchg
or
popa
and
push
mov
gs
mov
scas
loope
sbb
mov
ja
adc
mov
sbb
xchg
popf
mov
aad
lcall
jnp
mov
adc
enter
popf
hlt
cld
hlt
scas
cmp
inc
mov
ss
shlb
sub
ret
xchg
push
dec
insl
inc
popa
gs
movsl
mov
jb
rorl
jge
jnp
jg
cltd
in
outsl
les
cmp
and
sar
push
or
sbb
add
ss
mov
xor
in
gs
mov
pminub
popa
mov
and
pusha
and
ficomps
mov
jno
sbbl
ss
mov
cmpsl
shrl
lock
add
jo
shl
sbb
mov
aad
enter
push
push
sbb
dec
or
cmpb
add
es
lea
mov
mov
aaa
xor
lea
sbb
sbb
sub
out
jle
xchg
aas
dec
dec
fwait
imul
add
call
pop
cmp
fcomps
cmp
pop
pop
mov
sub
lret
push
sbb
cmp
clc
es
cmp
imul
push
or
stos
cmpsb
push
popf
in
dec
xchg
pop
repnz
mov
and
adc
fisubrs
mov
imulb
imul
push
lahf
subl
and
mov
push
fmull
xchg
jns
dec
or
das
pop
mov
push
je
sahf
cmpsl
sbb
adc
sub
pop
loop
xor
les
xor
fs
xor
std
movsb
push
stos
jo
movsl
jge
xchg
repz
lods
ds
xchg
leave
cmp
dec
rolb
jg
test
mov
pop
loopne
mov
sbb
seta
js
pusha
sub
fwait
pop
fmul
test
mov
mov
jno
jb
jp
pop
ret
adc
xlat
mov
cmp
notb
je
add
xor
push
mov
inc
call
int3
mov
inc
pop
arpl
jns
dec
test
movsl
adc
ja
pushf
adc
xor
int3
mov
movb
jp
leave
add
call
ljmp
iret
add
popl
add
insb
cmp
test
add
les
adc
aam
out
cltd
cmp
cmp
inc
sub
xchg
fadds
stc
rol
scas
jg
and
ret
dec
or
sti
movsb
cs
cltd
mov
xor
in
loope
test
fcoms
mov
inc
xchg
jecxz
cltd
and
inc
hlt
jbe
sub
repz
xor
pop
cmp
push
jne
test
test
mov
xor
dec
sarl
pop
pop
aad
or
xchg
xor
push
mull
dec
pop
lods
cmpsb
mov
mov
es
je
mov
fiadds
addr16
in
shrb
jb
repz
sub
mov
test
in
sahf
cmpsb
sbb
mov
and
icebp
cmc
or
jno
mov
je
mov
dec
lds
jg
sahf
addr16
imul
push
mov
or
push
insb
cmpsb
rcll
mov
adc
ret
or
sub
jae
pop
movb
lods
outsb
daa
mov
clc
out
sbb
xchg
aas
xorb
add
push
leave
scas
pop
push
and
inc
lea
add
stos
bound
mov
test
fildl
mov
popa
les
sub
fcmove
mov
dec
mov
push
push
fwait
xor
inc
loop
xchg
leave
sti
dec
pop
sahf
and
cmpsb
push
pushf
and
add
sub
cmpsl
in
xchg
sub
jns
sbbb
lret
mov
daa
ds
jl
push
jns
sbb
jo
push
cli
lret
lds
adc
push
stos
xchg
sbb
fsts
sbb
movsl
cmpsl
push
popa
lcall
jb
dec
mov
scas
std
sub
leave
cmp
sahf
out
fcmovnb
inc
jo
push
or
pop
sarb
pop
cmp
iret
xchg
mov
test
inc
adc
xlat
sbb
ja
daa
cmp
ficoml
loopne
xchg
mov
add
rol
add
push
cmp
adc
xchg
imul
lcall
sub
xchg
pop
pop
or
inc
call
insb
cmc
cmp
sub
jmp
iret
or
jne
pmulhw
adc
lock
insl
das
cwtl
or
cmpsb
jmp
leave
and
imul
in
push
jg
imul
sbb
jg
cmp
icebp
jle
dec
push
jge
imul
data16
and
call
adc
gs
mov
sti
sbb
jp
sub
leave
mov
in
sbb
mov
pushf
std
fwait
out
sub
cmp
mov
je
fldt
xor
addr16
loop
bound
repz
bound
add
sbb
cmp
or
dec
fnsave
mov
jb
sbbb
xor
jle
cmc
mov
and
push
dec
ja
fistpll
mov
ja
leave
imul
jl
stos
jge
pop
js
int
out
add
dec
loope
aaa
movsb
push
out
mov
pop
push
push
fucom
arpl
stos
lock
mov
in
sbb
mov
sbb
jecxz
sar
pop
cmovl
lds
fucompp
sub
mov
adc
xchg
fcomps
int3
div
cmp
inc
nop
xor
xor
ja
aam
add
jge
add
fistps
push
fwait
mov
fs
aad
cli
int
mov
ffreep
jnp
mov
out
jns
mov
out
imull
push
or
jo
xchg
lcall
scas
aas
aas
xor
mov
imul
and
inc
fstpt
nop
mov
sbb
xor
imul
mov
movsb
xor
mov
and
mov
sbb
adc
xchg
std
mov
imul
loop
out
jecxz
mov
enter
adc
jmp
or
lret
aaa
xor
test
loopne
daa
repz
sub
sub
aas
add
xchg
mov
in
fchs
cmpsb
sub
in
movsl
sbb
cmp
cwtl
add
cmpsl
xchg
enter
or
arpl
dec
xchg
lods
push
jno
ret
lods
das
aaa
sti
negl
pop
push
mov
xor
dec
loope
mov
add
fwait
sbb
inc
dec
inc
shrl
and
mov
lea
sub
lret
jg
push
mov
pop
scas
sub
fldl
popa
out
aas
hlt
sbb
imul
inc
jecxz
nop
outsl
outsb
jl
jns
push
xchg
add
in
push
test
or
inc
fcompl
jg
dec
sbb
insb
mov
inc
xchg
mov
push
inc
sbb
out
dec
inc
pop
pop
mov
daa
mov
lcall
insl
and
pop
xor
cmpl
leave
loop
lcall
jmp
test
cmp
gs
jo
sbb
aas
xchg
in
jmp
jle
daa
outsb
cltd
cmp
lahf
push
jno
inc
lock
shlb
fcmovnb
sti
adc
sub
xchg
push
call
nop
mov
jbe
divb
call
pop
add
inc
rolb
incb
adc
push
rcll
sbb
in
sahf
and
jl
pop
jne
sbb
adc
arpl
and
or
xlat
orb
into
loopne
push
lods
mov
mov
xor
sub
xchg
in
test
mov
pop
xchg
mov
fidivs
lahf
cmp
jb
testb
xchg
push
int3
shll
adc
cmp
in
ret
insb
adc
push
push
lahf
pop
push
pop
cmp
stos
xchg
xchg
xchg
jle
cmpl
and
ljmp
mov
inc
sbb
pusha
fs
dec
popf
cmpsl
mov
repz
bound
xchg
mov
jp
insb
lea
jge
mov
or
loope
add
and
add
pop
stos
js
ret
pop
cmpsl
mov
sbb
xchg
imul
jb
ljmp
cmpsl
mov
enter
xchg
sbb
add
sbbl
mov
xor
push
nop
xchg
dec
lock
and
mov
push
pop
scas
in
insb
test
dec
rep
or
push
xor
mov
scas
fwait
ret
mov
out
mov
aad
sbb
add
xchg
andb
outsb
ret
jle
lahf
add
data16
pop
and
loope
rcll
xchg
cld
or
movsl
mov
sbb
lds
and
xchg
sbb
inc
lcall
adc
mov
lret
jg
sub
stos
xchg
xor
xlat
sub
nop
pop
sahf
push
sbb
mov
lock
sub
leave
mov
push
push
ret
xchg
shlb
dec
and
scas
loop
mov
jge
out
add
lahf
sbb
aad
loopne
pop
or
inc
sub
sbb
outsl
mov
lcall
dec
push
cmp
fdiv
push
xchg
cmp
or
xor
sub
movsb
or
jge
daa
jnp
aas
jl
push
dec
bound
lods
adc
add
lcall
test
sbb
xor
or
pop
ret
dec
imul
popa
cmp
iret
inc
movsb
sub
sbb
jnp
test
xlat
test
cmpsl
iret
xor
aam
add
jl
adc
or
std
inc
dec
movsl
pop
sub
xchg
cltd
in
ljmp
subl
inc
dec
mov
dec
sub
xchg
jns
das
xchg
jmp
outsb
out
movsb
push
cmp
lds
lea
aam
popa
ret
adc
jb
daa
mov
popa
outsl
nop
out
ja
push
mov
mov
aad
inc
clc
fdivs
xchg
pop
aam
test
punpcklwd
js
lahf
dec
sbb
gs
xchg
and
jae
leave
xchg
icebp
mov
cltd
mov
cwtl
repz
insl
call
or
cltd
sub
sub
mov
pop
adc
add
ja
dec
jmp
cmc
repnz
xor
leave
stos
and
and
andl
insb
jno
in
push
inc
push
pop
jo
popa
pop
xor
fs
insl
aam
mov
mov
xchg
cmp
cltd
push
outsl
or
add
ss
aad
xchg
call
adcl
xor
lret
mov
lods
fiadds
xchg
inc
inc
mov
sbb
scas
mov
xor
mov
push
jle
pop
cmpsl
ss
out
pushf
lret
mov
sti
addr16
xchg
dec
pop
xor
movsl
loop
or
jnp
pop
pop
add
pop
or
sub
ret
sub
cwtl
mov
pop
js
cmp
out
inc
jns
inc
stc
push
loop
stos
and
mov
push
add
or
xchg
pop
and
fbld
adc
pop
lret
inc
mov
sub
testl
xchg
sbb
mov
lret
dec
jmp
mov
out
xor
insb
loope
mov
mov
sahf
xchg
cld
pop
adc
mov
scas
push
fwait
call
push
and
sarl
bound
rsqrtps
fcmove
mov
mov
iret
xchg
shlb
or
lea
out
in
pop
fs
dec
jecxz
mov
mov
arpl
mov
push
jae
addr16
mov
dec
jmp
cmp
inc
cmp
jbe
lcall
movsb
clc
xor
and
mov
popa
sbb
imul
cmpsb
mov
jecxz
aad
jo
sub
xchg
ja
pusha
mov
jle
xor
in
add
in
dec
push
popf
cmp
ret
sahf
std
in
dec
push
adc
mov
std
cmp
stc
lds
mov
mov
imulb
das
sub
adc
adc
cmp
sub
adc
sub
daa
pop
pop
out
imul
es
cs
outsb
fsubrs
sbb
and
push
lret
add
mov
pop
ss
iret
clc
and
outsl
lock
mov
inc
outsl
or
lock
lcall
sub
jnp
inc
out
test
adc
pop
push
push
aad
ljmp
pop
fcomps
fcom
in
mov
fisubs
sti
fisubrs
std
inc
sbb
xchg
push
and
jb
and
pop
dec
add
add
mov
hlt
in
shll
in
xchg
adc
sbbb
dec
stos
jb
ret
xor
gs
sub
mov
pop
dec
xchg
mov
fnstcw
mov
shlb
add
sbb
adc
push
mov
push
ds
sbb
inc
movl
inc
cmp
xchg
sub
mov
mov
shl
jno
lds
pop
mov
mov
jno
cmp
push
mov
pop
mov
sub
push
scas
jno
ret
xchg
fsubs
mov
fmuls
mov
dec
cld
xchg
fstps
add
repz
mov
repnz
jmp
xchg
xchg
insl
sarl
roll
inc
int3
jbe
cltd
outsb
dec
mov
inc
pop
stc
jecxz
out
pop
or
sub
popa
arpl
iret
lds
or
jne
pop
popf
xor
mov
dec
call
jmp
pop
les
mov
cli
push
jne
sub
jge
cmpsl
dec
inc
bnd
and
mov
sbb
fmul
shl
mov
xor
jno
fldl
ret
jne
out
inc
gs
jne
and
sbb
shlb
mov
scas
mov
movsb
sub
ret
stos
fisttpll
cmp
mov
bound
fld
iret
js
mov
adc
sahf
das
cli
jo
add
dec
xchg
cli
rorb
call
insb
je
mov
data16
sub
out
ljmp
fisubs
push
mov
pop
pushf
cmp
test
xor
and
fsubr
js
xor
in
cmp
stos
add
push
shl
and
ficompl
in
stos
push
pusha
dec
fistpll
loope
call
imul
mov
xor
pop
mov
mov
push
cmpsb
or
ret
in
add
adc
daa
mov
or
fimull
add
and
popa
or
jo
adc
xor
sub
xor
aas
pop
push
cltd
adc
test
jecxz
repz
loope
cwtl
dec
andl
cmc
xchg
push
add
cs
mov
dec
jle
cwtl
hlt
mov
push
push
js
rcl
stos
push
push
int
in
xchg
push
mov
cmp
xor
sbb
pushf
lret
xchg
cltd
scas
inc
and
pop
push
add
out
ja
cld
sub
xchg
in
inc
jmp
adc
xor
sbb
mov
js
negb
mov
lods
or
jp
not
testb
loopne
mov
movsb
adc
mov
adc
mov
gs
mov
cmpsl
mov
fidivs
lea
jo
mov
mov
xor
mov
sub
adc
pop
mov
negb
cmpsb
ret
shrl
js
call
mov
mov
xchg
subl
and
sbb
mov
and
jo
rcrb
insl
xchg
mov
mov
xchg
ficoms
sbb
push
xchg
inc
sub
insb
mov
cli
out
in
sahf
and
pop
inc
lret
jp
xor
pop
mov
dec
mov
sahf
nop
jbe
xor
rcll
jns
ror
leave
xlat
rcrb
mov
cmp
cmp
jns
out
sbb
jae
lcall
jg
into
ficomps
pop
push
and
enter
xchg
add
lds
sahf
lea
in
ja
in
sub
loope
cmp
dec
jecxz
outsb
notb
mov
mov
inc
cmp
adc
push
dec
push
sub
flds
repnz
push
push
push
inc
xchg
into
sbb
push
repz
jge
mov
cmp
push
xchg
sub
xchg
inc
mov
cmp
repnz
testb
test
dec
pop
add
add
sbb
pop
pop
out
xor
push
cld
arpl
subl
movsb
cmp
sbbl
lock
mov
mov
and
mov
or
xchg
stc
or
flds
xor
or
mov
dec
sbb
xor
in
jmp
mov
test
cltd
dec
repnz
add
addr16
mov
bound
insb
and
xor
loopne
sbb
cmp
aas
xor
mov
sti
outsb
cmc
sbb
dec
test
and
push
pusha
seto
pop
into
das
mov
mov
mov
dec
fstpt
sub
adc
je
inc
fwait
adc
or
add
xor
subl
push
add
aam
jns
test
pop
adc
sbb
shlb
add
mov
repz
pop
pop
test
jl
cwtl
pop
lods
shll
add
fcompl
fcomps
inc
fcmovu
lock
out
js
jp
or
pushf
stc
xor
lods
jns
jg
out
adc
insl
add
xor
sub
outsb
mov
or
bound
test
nop
loopne
mov
cmpsb
lods
jb
hlt
loopne
iret
adc
rorb
scas
pop
and
out
insb
movsb
je
sbb
xor
pop
xor
popf
ljmp
lret
pop
or
add
jmp
mov
mov
repz
adc
mov
test
mov
pushl
and
test
pusha
leave
rcll
addl
cmp
sub
lcall
arpl
mov
dec
and
out
xor
dec
loope
or
jb
push
push
cmp
pop
pushf
movsb
repz
mov
mov
aaa
adc
sub
cmp
xchg
jle
or
dec
cmp
adc
jmp
push
ja
test
mov
xchg
test
mov
aas
jo
dec
cmpb
fwait
pop
es
adc
jle
lea
lcall
scas
ret
jne
sub
jb
stos
jl
gs
daa
xor
movsb
into
in
xchg
push
xchg
hlt
xchg
mov
cmpsl
jb
and
mov
ret
lret
xchg
fsubl
adc
addb
lods
sub
add
inc
loope
sbb
test
ret
cmp
mov
mov
ret
pushl
stc
notl
mov
sbb
jo
jno
movsl
cltd
ja
sub
outsl
stc
cmp
cmpb
ljmp
popf
sahf
loopne
stos
lret
add
repnz
out
sbb
cmp
fists
loopne
fs
stos
xorl
lea
les
test
or
dec
mov
mov
cmp
shll
jmp
pop
out
ret
dec
jo
fcmove
jbe
stos
mov
mov
push
xchg
xlat
fcoms
leave
js
xor
lret
in
mov
scas
imul
in
insb
push
mov
lret
sbb
cmp
xchg
sti
cmp
sbb
dec
lods
shlb
jno
xchg
daa
mov
adc
inc
data16
dec
inc
push
nop
adcb
aaa
xor
stos
sbb
adc
pop
xchg
loop
inc
out
test
ret
push
or
mov
mov
outsl
xchg
sbb
addr16
cmp
xchg
adc
das
dec
lock
and
adc
inc
lahf
add
fdivs
and
jno,pn
xor
adc
fldl2e
fldl
aam
shl
push
xchg
cwtl
out
data16
xchg
call
xchg
ja
push
jno
stos
mov
push
loope
addr16
std
jne
push
mov
or
mov
cmp
mov
and
shlb
outsb
push
outsb
xchg
lock
mov
push
push
sub
jmp
outsb
loopne
into
cmpsb
mov
sub
outsl
imul
js
push
movsl
inc
das
pop
push
dec
jno
inc
insl
std
enter
inc
out
adc
sti
jo
xchg
scas
add
repz
mov
scas
scas
push
mov
adc
jmp
and
das
pop
pop
inc
outsl
inc
jecxz
mov
pusha
or
jnp
mov
pop
divl
jne
xchg
mov
popa
dec
add
je
je,pn
jns
movsl
push
mov
mov
nop
stos
out
pop
int3
inc
mulb
pop
cmp
test
fbstp
lods
mov
or
mov
mov
sub
sub
popf
push
jo
xchg
test
dec
adc
add
dec
jns
inc
jae
js
mov
fisubs
push
mov
mov
cmp
leave
add
xchg
dec
sbb
lret
or
int
dec
lcall
aas
jp
pop
ret
lock
jge
push
andb
clc
negl
leave
dec
jmp
iret
jns
push
dec
ret
mov
pop
mov
jle
jb
jnp
jbe
sti
stos
cmp
movsl
divl
pushfw
xchg
dec
out
fnstcw
jmp
cs
cmp
shrb
lds
enter
rorb
fcoml
and
sbb
inc
std
scas
adc
repnz
stos
fcmovu
out
push
sbb
lock
mov
jge
or
dec
add
dec
push
cmp
push
insl
push
daa
cmp
inc
pop
jns
jne
xchg
psraw
in
inc
das
push
adc
es
xor
lahf
adcb
aas
mov
int
and
cli
dec
popa
xor
cmpsb
mov
xor
mov
mov
call
loope
jb
mov
jl
pop
shll
insl
xor
mov
es
repnz
xor
dec
fidivl
jg
and
pop
jecxz
pushf
cmp
mov
pop
inc
adc
scas
scas
cmp
or
in
mov
testl
xor
mov
cld
jl
dec
or
lds
sub
loop
in
cmp
fsubr
bound
sti
loop
push
sti
stos
add
scas
mov
sub
cltd
push
mov
inc
fimuls
fstps
mull
imulb
out
loop
push
loopne
xor
and
xchg
jo
cmp
and
pushf
adc
cwtl
push
and
int
je
shll
add
fsubrs
mov
add
outsl
mov
and
hlt
lods
lret
ds
fwait
test
int3
ja
cmovl
sahf
sub
pusha
clc
dec
ljmp
cs
cmp
scas
push
adc
pop
scas
adc
std
fdivrs
pop
adc
loop
sub
jae
nop
dec
sbb
inc
test
test
jb
sub
push
icebp
sub
pop
pop
inc
mov
mov
cmp
mov
adc
and
push
test
cmp
popa
test
jbe
pop
dec
fs
out
lcall
js
push
cmp
addb
leave
jle
push
lods
fs
cmpps
pop
scas
stos
shlb
sarl
dec
mov
dec
shr
push
jmp
into
and
in
mov
or
push
pop
push
in
dec
pop
xchg
sbb
stc
adc
jne
lds
and
adc
insl
xor
sbb
push
int
leave
sbb
aad
ffree
jmp
sub
pop
in
cmp
out
sti
mov
pop
into
aam
movsb
sub
adc
enter
enter
mov
les
sub
movsl
or
test
stos
cmp
sbb
mov
aaa
ret
into
ljmp
fcomip
stos
daa
lock
jns
jge
lods
xor
xchg
mov
pop
add
mov
loop
aad
jns
jae
mov
adc
adc
andb
daa
inc
icebp
mov
jb
aam
add
push
std
and
mov
lods
lcall
cmpl
push
cli
push
mov
sub
cli
movsb
out
jo
jne
mov
shrl
lds
imul
cmp
nop
push
adc
popa
and
xor
ret
icebp
lea
call
imul
adc
sahf
xor
out
ficoml
xchg
jae
in
xchg
sub
sbb
aaa
dec
cmpsb
pop
and
popa
dec
jns
sbb
add
in
xchg
daa
stos
inc
inc
or
adc
xchg
mov
xchg
or
pop
pop
push
mov
ljmp
xor
cwtl
xchg
xor
mov
or
sar
sub
divl
and
movsb
stos
int3
add
dec
add
cmp
cld
jne
cmovb
pop
adc
sub
add
lcall
dec
dec
bound
mov
mov
stc
push
mov
imul
and
xchg
out
cmp
cmp
xchg
stc
shrl
lret
cmpsb
xor
sub
scas
fdivp
cwtl
adc
cmp
jns
mov
aas
fsubrs
dec
jge
mov
outsl
xchg
shl
loopne
mov
inc
jl
outsl
xchg
pushf
insb
bound
mov
jge
out
pop
stc
or
lcall
add
mov
scas
imul
jb
leave
rcrl
jnp
shlb
xorb
jnp
mov
mov
sbb
adcl
loopne
testb
push
scas
into
and
ljmp
mov
mov
mov
inc
mov
in
cli
out
inc
andl
and
xchg
arpl
jmp
mov
ss
mov
cwtl
push
pop
mov
sub
sbb
fwait
fs
lret
ss
int
stc
inc
dec
push
push
leave
clc
int
imul
rol
leave
xlat
iret
pop
lcall
jb
sub
add
xor
pop
sbb
push
in
cmp
mov
loopne
adc
mov
ds
xor
xlat
lahf
loop
dec
shrb
or
shrl
pop
rclb
push
sbbl
sbb
and
mov
fldl
cmp
jns
pop
add
push
mov
sbb
inc
inc
sub
inc
xor
shlb
cmc
test
fsts
pop
push
fisubl
mov
mov
rep
jo
int3
xor
repnz
pop
jmp
in
or
xchg
ror
pop
pusha
ds
sub
mov
out
mov
fcomps
sbb
add
and
fmul
mov
pusha
mov
add
pop
in
or
mov
ja
out
push
inc
mov
icebp
mov
xor
repz
or
sbb
or
fdivrs
movsl
mov
xchg
cmc
fcmovu
pop
sbb
out
xchg
inc
and
movsb
push
cmp
cltd
mov
std
ud1
xor
push
xor
adc
mov
hlt
data16
movsb
push
cmpl
xchg
call
sbb
xchg
and
mov
lahf
mov
dec
push
aas
push
cltd
xchg
mov
loope
cmp
sti
push
push
mov
cmp
leave
ds
shrl
push
pop
xor
adc
fisttps
dec
stc
mov
add
push
inc
mov
sti
push
jmp
scas
movsb
movsb
inc
mov
and
in
out
repz
enter
test
aas
jg
rcrl
pop
jno
sub
add
push
mov
push
xchg
adc
in
cmp
xor
jno
shll
xor
and
adc
or
pop
jle
maxps
push
and
lret
out
inc
enter
fisttpll
mov
cmp
ror
sub
leave
add
aas
xor
sbb
fiadds
fcompl
int3
jmp
mov
ljmp
mov
xchg
addl
xchg
mov
jmp
sbb
outsl
or
pop
lods
adc
leave
testb
push
rclb
or
in
das
cmp
imul
inc
sub
dec
aas
cs
jae
xchg
adc
pop
test
clc
aas
jmp
pop
addb
sub
cmpl
inc
sub
sub
negb
jp
js
jp
ljmp
adc
and
jae
jp
movb
sti
sub
test
stos
sub
xor
rorb
jbe
adc
mov
mov
jp
pop
push
push
xor
pop
subl
insl
icebp
cmp
cmp
lds
adc
into
adc
jno
das
mov
adc
sti
jg
cli
dec
mov
mov
adc
xor
fbstp
inc
sub
jle
imul
and
rcrl
jmp
xchg
rcr
loope
cli
shll
add
mov
xchg
pop
xor
mov
mov
push
push
cmp
sbb
cmp
in
add
xchg
fs
lods
mov
rcll
repz
mov
hlt
out
loop
inc
mov
add
xchg
andl
dec
fcmove
push
mov
push
and
int
ret
inc
and
adcb
sub
push
popf
cmc
imul
adc
scas
jo
je
imul
fiaddl
out
jge
out
pop
xlat
mov
mov
push
repz
cmc
adc
dec
xor
mov
mov
aaa
cmpsb
inc
adc
lods
mov
sbb
add
shll
iret
in
sub
mov
sub
xor
in
mov
nop
hlt
es
jnp
fstpl
fwait
stos
lea
les
jge
lcall
mov
ja
hlt
in
negb
out
inc
popa
outsl
aad
inc
jno
mov
lods
sahf
mov
movsl
mov
sbb
cwtl
dec
test
xchg
mov
fldenv
mov
std
outsb
dec
mov
or
or
mov
pop
popf
sub
out
jne
xchg
fsubl
out
and
xor
pop
in
fucom
pop
xchg
cmp
fisubs
inc
add
lcall
pop
adc
jl
test
jno
cld
out
jb
adc
or
divl
push
movsl
adc
out
and
mov
out
adc
iret
fnsave
out
adc
mov
arpl
ss
push
dec
or
xor
invd
inc
pop
es
adc
xchg
cli
sub
ret
mov
sub
arpl
jge
sub
jecxz
xchg
sub
adcb
pop
call
mov
push
fsubr
sti
addr16
ret
dec
xor
es
aaa
xlat
xchg
xor
fsubrs
loopne
mov
call
stos
cld
repnz
int3
dec
push
hlt
std
js
out
dec
mov
xchg
xchg
xor
cmp
inc
nop
inc
adc
je
lds
mov
ljmp
xchg
push
nop
inc
push
sub
ds
movsb
popa
cmp
nop
mov
scas
push
push
test
jle
in
jmp
pop
jecxz
outsl
sub
ret
mov
adc
jno
xor
xchg
pop
adc
dec
lcall
push
bnd
jno
int
mov
dec
xor
lret
cwtl
scas
cmp
aad
push
dec
mov
sbb
sub
sahf
arpl
and
js
jmp
mov
rol
push
sub
int
adc
fcoml
dec
addb
cmp
shrb
push
pushl
xor
pop
sbb
in
xlat
fdivs
inc
mov
mov
pop
xchg
add
jl
testb
cmpsb
adc
inc
jmp
push
mov
in
xor
loopne
mov
xorl
mov
icebp
ja
in
fistpl
push
aad
gs
mov
add
jge
jbe
test
push
mov
sbbb
sti
cmp
and
faddl
loop
mov
push
clc
andb
stos
out
sub
fstpt
cld
dec
cmpsb
daa
fwait
loopne
xchg
jno
scas
shrl
pop
jmp
repnz
shll
mov
pop
cmp
fs
out
and
sub
jne
push
lds
jo
push
ret
and
aam
jge
or
aad
pop
stos
and
pushf
adc
fdivrl
ja
jno
lahf
inc
pusha
lret
mov
sub
rorl
xchg
inc
dec
inc
mov
imul
pop
push
shlb
scas
sahf
adc
adc
cmp
mov
pusha
insl
jnp
sbb
outsl
mov
or
lds
mov
and
push
ret
in
mov
xor
divl
sbb
rcl
fwait
loope
or
mov
lret
adc
mov
mov
pop
movsb
push
mov
jno
sarl
mov
cs
jmp
dec
icebp
bound
pusha
pop
cmp
pop
dec
and
rcll
sub
fs
cltd
or
push
push
lret
add
sbb
in
cmp
jmp
or
xchg
sahf
adc
in
sub
cmpl
movsb
jp
sbbb
pop
ret
lret
or
pop
cmp
lea
loop
mov
sub
sahf
cwtl
arpl
inc
scas
mov
fs
sub
fstpt
sub
xchg
xchg
dec
mov
jmp
mov
pop
pop
out
pop
flds
sub
pop
adc
xor
les
das
lods
lcall
clc
loop
mov
repnz
movsl
in
roll
std
pop
dec
ret
fdivl
adc
arpl
sar
add
jns
mov
int3
ret
rcrb
push
add
adc
push
stc
mov
jecxz
test
fdivs
bound
out
iret
lock
push
sbb
or
int3
rorb
push
push
mov
outsl
out
jmp
fwait
insl
xorl
adc
inc
les
cli
sbb
arpl
jge
lods
dec
mov
and
cmc
pop
out
cli
int3
insl
lret
lods
ficompl
cmp
shl
xor
xchg
sbb
mov
push
imul
mov
popl
dec
pop
sbb
cltd
mov
and
cmovo
lea
hlt
xchg
in
roll
mov
mov
ss
pop
xchg
dec
cmpsb
sub
sbb
std
pop
daa
xlat
sub
mov
jbe
sbb
arpl
mov
mov
push
stc
cmc
lock
fisttpl
inc
mov
xchg
pop
xor
sti
popa
xor
inc
popf
lahf
sbb
pop
adc
out
lret
hlt
out
sub
adc
adc
mov
or
mov
xchg
mov
and
mov
mov
mov
xor
push
scas
xchg
scas
or
add
dec
xchg
mov
test
in
push
push
xor
aad
xchg
je
sti
mov
sbb
in
mov
lods
jne
push
int3
push
pop
cmp
in
xchg
adc
add
mov
pusha
cmp
aas
roll
cli
push
jp
cltd
add
mov
aad
repz
mov
je
dec
pop
or
cmpsb
imul
mov
hlt
jbe
sub
push
fsubs
inc
in
push
dec
mov
cli
cmpsl
in
loopne
fcoml
xor
out
mov
aam
xchg
dec
mov
lock
and
mov
jb
cmp
sbb
jl
dec
movsl
mov
and
mov
xor
lods
mov
pop
mov
shl
jnp
push
jge
mov
mov
dec
aam
and
lods
in
pop
cmpl
adc
andl
inc
fldt
xchg
fs
inc
stos
lods
insl
xchg
fdivrl
shll
shlb
cmp
movsl
inc
test
fmull
lcall
pop
sbb
into
push
inc
sbb
lock
inc
push
loop
mov
mov
outsb
subps
mov
mov
or
ss
nop
xchg
leave
adc
into
movsb
aas
cmp
mov
cmp
mov
dec
jl
ret
arpl
mov
jl
cmpsb
mov
pop
lret
aas
clc
mov
je
cmp
cmp
rorl
pop
notb
adc
and
dec
sbb
dec
test
iret
divb
jae
into
and
and
dec
pop
dec
pop
mov
leave
bound
pop
int3
pop
sub
jne
adc
in
mov
ljmp
sahf
xor
jnp
ret
data16
inc
fdiv
jne
rclb
pop
xchg
nop
ret
das
adc
sub
or
rcll
sub
leave
cwtl
adc
push
mov
mov
das
fld
sub
sub
scas
nop
mov
mov
loope
outsb
ds
int
xchg
gs
add
rol
push
dec
fsubr
fiaddl
jecxz
or
jne
ja
adc
faddp
or
cmc
std
jns
sub
push
dec
outsb
sbb
and
test
aam
xor
sahf
add
sub
loope
add
cs
lcall
xchg
add
sub
push
pop
adc
dec
dec
ss
cwtl
cli
jns
pusha
pop
sub
aaa
je
cmp
inc
mov
xchg
out
ds
adc
mov
mov
mov
xchg
int3
mov
cmp
jnp
pop
jnp
jmp
cld
subl
mov
mov
mov
jge
push
cs
mov
test
mov
rcll
je
call
add
rclb
mov
orl
jne
inc
push
fistpll
add
outsl
aad
scas
inc
add
orl
xchg
test
xchg
repnz
push
xchg
rcll
cmp
pop
out
scas
shll
mov
stc
sub
xchg
jg
insl
scas
pop
movsl
cmp
mov
cmpl
jns
test
add
pop
or
int3
cmp
test
push
xchg
and
inc
fs
adc
and
and
sbb
ds
lret
adc
mov
add
xlat
sub
loope
xlat
popa
scas
leave
in
xchg
cs
lahf
lret
xchg
mov
lods
addb
and
push
sub
dec
push
js
repz
in
xchg
or
sub
arpl
jg
mov
daa
ror
dec
cmp
mov
pop
sbb
insl
subl
popa
cmp
enter
test
jmp
cmc
sbb
push
das
lods
mov
add
pop
cmpb
push
mov
or
mov
popf
mov
push
sbb
rcl
dec
xor
popa
jmp
push
mov
push
and
sub
lea
sti
push
imul
mov
bound
jp
ror
lcall
mov
jae
scas
and
js
cmp
mov
pop
or
aad
cs
inc
jno
add
pop
mov
mov
mov
enter
cwtl
and
mov
pushf
sub
rolb
jecxz
xchg
mov
daa
xchg
movsl
push
push
jmp
cltd
popf
jl
loopne
jmp
call
lds
lods
jle
shrb
mov
sub
push
inc
in
or
loop
xchg
fnsave
pop
dec
xorb
pop
xor
jle
or
leave
inc
pop
iret
jl
xchg
fs
mov
add
sbb
xorl
lcall
lcall
cmpsb
jo
iret
push
daa
cmpsl
xchg
mov
test
pop
gs
in
dec
addl
roll
test
negl
or
arpl
push
adc
mov
jl
or
std
test
mov
jmp
adc
enter
xchg
mov
fnsave
push
stos
xchg
mov
add
xor
bnd
mov
xchg
or
sub
inc
mov
jmp
sub
fistl
mov
lea
jle
xchg
fbld
test
xchg
ret
enter
shll
loopne
jmp
daa
jne
xchg
jnp
out
mov
int
jg
adc
and
and
pop
mov
sahf
or
xor
into
ds
lret
add
push
mov
rcll
ret
divb
cmp
aas
insb
aas
cltd
hlt
aam
ljmp
pop
pop
inc
aad
mov
jno
inc
scas
lcall
add
je
adc
stc
adc
pusha
sub
mov
das
add
dec
neg
mov
imulb
fucom
lcall
lds
pop
adc
outsb
cmp
xchg
sti
js
and
inc
adc
mov
dec
xchg
scas
xchg
dec
lahf
adc
into
push
and
push
jnp
xor
sbb
rol
lds
lds
loope
ja
je
pop
pop
push
ret
movsb
mov
mov
sbb
adc
ret
mov
fs
test
dec
jle
ljmp
aaa
test
ret
inc
push
int
mull
mov
xor
jl
push
mov
imul
xchg
dec
rorb
shll
inc
mov
jle
mov
mov
popa
sarb
cmpsb
loope
stos
clc
loope
out
pusha
std
gs
jle
push
call
pop
sbb
jmp
lcall
push
jl
or
out
and
mov
popa
mov
and
ds
dec
jnp
mov
xchg
dec
outsl
add
jl
push
mov
and
jg
arpl
push
pop
xchg
or
in
loopne
mov
rcr
imul
fldcw
jecxz
lret
dec
stos
jnp
and
in
pop
cmp
jae
jnp
sti
push
push
call
jmp
imulb
sbb
xchg
packuswb
fcmovnb
jbe
jecxz
pushf
sub
sub
jno
int3
add
xchg
mov
xorl
cwtl
cmp
fs
add
sbb
mov
shl
sub
out
push
jecxz
dec
fistl
jae
add
imul
push
push
out
icebp
addr16
stos
test
test
sub
adc
cli
out
xor
out
jmp
mov
iret
mov
cmc
test
jle
mov
mov
sub
jns
sub
mov
inc
je
push
pop
sbb
mov
or
cmp
or
jmp
int3
dec
fwait
std
popa
xchg
mov
pop
mov
mov
and
and
adc
push
adc
sub
push
rcll
add
stos
sub
xor
inc
mov
xchg
cmpsl
fs
loopne
aaa
mov
sub
inc
sbb
pop
dec
jl
subl
popa
gs
scas
adc
and
and
adc
mov
bound
mov
test
ljmp
push
mov
xor
out
das
sub
adc
pop
cmp
cmpb
and
test
xchg
mov
dec
mov
inc
mov
xor
sbb
in
adc
ret
and
out
cmp
xor
mov
out
fisubs
and
sub
pop
stos
xchg
push
push
cs
dec
push
sar
sub
int
pop
cmpsb
cmp
rorb
push
imul
out
paddsb
xor
dec
push
arpl
push
cli
add
lock
pop
jb
dec
mov
pop
insb
push
pushf
int3
pop
das
or
jecxz
addr16
jecxz
xor
cmp
test
sub
cmp
jae
adc
xchg
icebp
and
cltd
xchg
lcall
jno
xor
lock
pushf
mov
or
pop
xchg
inc
das
dec
insl
das
test
sub
lea
xor
xor
xor
js
jmp
mov
or
cmp
mov
fisubrl
lcall
push
mov
cmp
xchg
gs
sysexit
sbb
inc
stos
add
xchg
aas
jne
add
fdivs
adc
in
cmpl
imul
add
ss
pop
fldl
cmp
xor
or
out
lock
cmp
push
ret
mov
add
xchg
aad
xchg
ret
dec
cmp
out
push
xlat
dec
cmp
push
cmp
cmp
mov
mov
ret
sar
aaa
push
add
inc
add
arpl
aaa
xchg
jno
jl
loope
imul
repnz
jmp
push
mov
or
std
in
sbb
sbb
icebp
lods
ret
sarl
mov
fwait
sbb
cmp
ss
bound
adc
fcoms
rcll
mov
lock
pop
pop
aam
dec
push
pop
and
das
mov
adc
inc
insb
frstor
dec
es
es
dec
int3
adc
clc
and
inc
cmp
out
and
sub
or
addl
hlt
add
cli
lret
pop
enter
jae
xor
outsb
xchg
mov
mov
mov
fsubrl
add
stos
cltd
mov
mov
aam
pop
cmp
mov
je
sub
lret
scas
add
push
jbe
add
sub
out
sub
das
and
sbb
or
xor
dec
out
pmulhw
mov
sar
lea
pop
adc
push
add
pop
lcall
outsb
ds
stos
mov
sub
loopne
lret
and
jb
clc
or
inc
xchg
aas
push
xor
cmp
sub
ljmp
cs
iret
adc
mov
dec
push
xor
mov
mov
mov
bound
sub
mov
jle
xlat
xchg
jp
and
insl
cmp
gs
mov
lods
out
sbb
scas
movsb
ret
inc
jbe
mov
xor
push
out
aam
movsb
cmp
cmp
jmp
cmp
cmp
push
je
xchg
mov
outsl
jno
adc
cmp
cmpsb
scas
pop
jg
push
icebp
shr
or
aam
mull
scas
insb
rcrl
fdivrl
inc
xchg
mov
mov
xchg
in
and
jg
lods
or
dec
push
and
dec
dec
dec
dec
loop
pop
fisttpl
fsub
push
notl
and
aad
add
mov
in
pushf
push
sbb
fmull
xorl
cmp
ret
xor
jne
add
je
jl
adc
cmc
lcall
inc
imul
add
lods
push
outsb
dec
pop
push
xchg
inc
pop
rclb
inc
out
ret
aaa
cmp
mov
sarl
sahf
das
test
iret
sub
dec
inc
xor
out
ss
divb
and
dec
adc
xlat
push
sub
lods
push
sarl
add
dec
clc
mov
sub
dec
dec
cmp
pop
pop
xchg
pop
movsb
sub
dec
mov
std
sarl
dec
iret
push
xor
add
stos
stos
ret
pop
mov
dec
cmpsb
mov
mov
cmp
daa
aam
and
lea
xchg
push
mov
fstl
mov
test
sub
dec
fdivr
lds
mov
dec
mov
fucomip
mov
inc
out
xorl
ret
jle
xor
mov
mov
add
cwtl
popa
jne
aaa
inc
inc
cltd
fstl
mov
sub
fsubrl
popf
imul
push
sahf
adc
sub
inc
mov
mov
mov
daa
mov
cmpsl
std
loopne
push
xchg
les
add
adc
aad
dec
pop
sbbb
frstor
data16
jecxz
mov
inc
stc
test
xchg
mov
sub
jmp
add
or
mov
xchg
xlat
out
adc
mov
xor
mov
sub
add
inc
les
xchg
gs
xchg
and
xchg
stos
jnp
push
inc
fistps
add
jle
cmp
mov
sbb
shlb
lcall
pop
mov
ljmp
inc
jecxz
pop
pusha
loope
aas
aad
popa
ret
enter
xor
fidivl
arpl
sahf
fs
mov
lret
dec
pop
fstl
sbb
xchg
mov
in
or
arpl
in
arpl
imul
popa
pop
addr16
popf
fsubs
and
notl
mov
lods
mov
mov
popa
ss
repnz
jo
jg
jmp
stc
inc
mov
outsl
mov
mov
pushf
pop
and
loopne
jno
xchg
push
pop
loope
fnsave
cmp
jp
xor
jne
dec
or
sbb
jmp
mov
je
inc
stc
pusha
pop
enter
call
test
mov
mov
cli
cmp
add
push
hlt
mov
pop
inc
mov
sub
add
cmp
inc
mov
or
rep
lcall
lea
ja
std
dec
and
movsl
add
xchg
mov
and
pop
leave
mov
rcrl
pop
mov
jb
xor
push
dec
aam
xchg
insl
lods
dec
dec
dec
stos
cli
out
fiaddl
ljmp
and
cwtl
sbb
out
pushf
imul
and
mov
or
je
pop
lods
inc
and
sub
jle
inc
pusha
fdivr
frstor
jnp
jge
cwtl
addr16
out
mov
xchg
jo
push
stos
scas
or
xor
jge
add
aas
fdivp
add
jmp
inc
loop
adc
loope
sub
xor
mov
or
test
lret
lods
jae
bound
in
das
loopne
popf
add
mov
sub
hlt
fcom
fisttpll
in
push
or
adc
push
lock
sub
sbb
imul
cmpl
dec
inc
lods
int3
in
mov
mov
mov
mov
testl
mov
out
fildl
rol
in
inc
xchg
pop
in
mov
daa
mov
pop
xchg
sub
repz
and
repz
cmp
in
ds
fisubrs
in
stc
ror
and
push
mov
aaa
push
test
push
jle
shrl
into
js
fwait
xor
mov
bound
jne
int
cmp
pop
push
cwtl
add
cs
pop
mov
cmp
adc
jno
in
add
sub
xor
inc
enter
add
aad
test
push
or
jb
cmpsl
jae
cmpb
inc
mov
inc
int3
cwtl
mov
daa
js
andb
cwtl
mov
fbstp
lcall
cli
mov
sub
pop
xchg
adc
ja
leave
mov
daa
aaa
ja
mov
or
jge
decl
pop
cmp
movsb
xor
rcrl
dec
push
mov
jns
icebp
jge
inc
mov
loopne
in
repnz
data16
mov
out
stos
or
and
sub
and
js
aas
push
jne
test
fnstcw
ss
repnz
mov
xor
lret
insl
in
cwtl
stos
cmp
mov
sbb
cmpsl
push
xchg
sbb
and
popf
dec
xor
push
push
push
pop
call
test
push
xchg
or
imul
fsubrl
lahf
lret
cmp
repnz
mov
or
stc
ret
sub
int
iret
or
xchg
nop
mov
add
ret
xor
icebp
cld
inc
xchg
push
xchg
jbe
mov
je
in
pop
ss
fimull
lahf
pushf
pop
xor
sbb
int
ljmp
test
add
loopne
mov
mov
inc
xor
adc
icebp
mov
sbb
loop
mov
sub
add
popf
sub
adc
jl
sub
push
jle
hlt
sbbl
addr16
repnz
into
sub
and
cmp
mov
nop
mov
pop
mov
and
daa
ds
jg
test
push
sbb
shlb
arpl
pop
sub
shrb
add
cmc
add
out
inc
cmp
out
pop
sbb
int3
les
mov
push
pushf
cmc
mull
sub
cwtl
pop
cwtl
rcrb
out
out
jle
inc
fcoml
out
arpl
adc
sbb
sbb
push
loopne
push
jo
adc
shll
fsubrp
xchg
movsl
out
mov
in
cmp
push
loope
push
push
inc
xchg
sbb
add
jns
out
in
jp
ret
mov
pop
lock
cmpsl
cmp
push
mov
sbb
les
mov
pop
inc
push
movsl
scas
ss
jnp
dec
mov
jo
lret
xchg
daa
mov
je
add
sbbb
leave
push
ret
sub
mov
loope
les
fsts
std
adc
out
mov
xor
loope
push
mov
xchg
mov
std
inc
mov
nop
and
add
push
xchg
xchg
pop
movsb
mov
mov
cld
mov
adc
lods
sub
ret
lea
cmc
jb
rclb
adc
repz
ss
js
mov
pop
and
mov
enter
loop
movsl
mov
inc
adc
rcrb
fistps
push
jp
sbb
cld
fdivl
fimull
mov
repz
adc
mov
les
pusha
std
bound
add
std
xor
out
pop
lret
pop
pop
cmc
lret
and
mov
xchg
lea
jl
mov
outsl
test
mov
mov
mov
ret
mov
ja
dec
sbbl
jnp
jns
ss
adc
inc
xor
jns
jb
out
mov
add
mov
xchg
mov
fwait
lock
xor
mov
xor
sub
rolb
xchg
mov
lret
inc
mov
adc
mov
popa
add
or
mov
mov
jmp
cmp
imul
arpl
add
cmpsb
fdivl
lods
cmp
xor
add
sbb
inc
dec
push
dec
in
and
and
dec
pop
fcmovb
mov
rcrl
imul
adc
in
mov
loopne
call
rclb
out
inc
or
and
mov
pushf
aaa
adc
addr16
jbe,pt
in
in
cmc
inc
outsl
flds
outsb
movsl
or
push
enter
fsubl
pop
iret
dec
cwtl
jo
fnsave
push
inc
mov
add
scas
imul
lret
and
cmpsb
ret
jge
mov
or
push
mov
call
adcb
xor
dec
iret
pop
sbb
push
popf
cmc
sbb
ss
or
mov
loop
mov
cmp
je
sbb
jb
inc
lods
outsl
lea
gs
xor
mov
xchg
dec
or
inc
out
sub
rclb
add
add
add
cmc
imul
pop
test
pop
movsb
sbb
adc
add
aad
punpcklbw
iret
cmp
int3
sub
cmp
test
adc
lods
stc
lea
lcall
adc
push
jmp
cmpsl
clc
inc
mov
decl
test
lahf
sub
xchg
cmp
cmp
rcrl
cmp
cmp
movsb
enter
lds
pop
xor
push
push
pop
adc
push
mov
or
das
xorl
into
jmp
mov
hlt
into
stos
fdiv
xchg
or
pop
xor
call
push
push
jb
das
cltd
bound
js
sub
daa
fdivrp
icebp
nop
jle
pusha
in
add
jns
ficoml
mov
add
dec
mov
add
fiaddl
ucomiss
pop
in
sbb
push
stc
test
or
mov
add
cmpsl
add
mov
cmp
xorb
imul
xor
push
xchg
imul
sub
inc
icebp
sub
adc
sub
mov
mov
jb
out
insl
nop
adc
mov
sar
loopne
stos
mov
push
hlt
nop
sbb
insb
stos
sbb
sti
add
mov
jmp
mov
xor
rolb
add
and
pop
jae
mul
addb
fwait
jg
jae
jge
loope
xchg
in
mov
mov
fmuls
sarb
ret
or
or
pop
rorl
push
je
scas
stos
cmp
ljmp
xchg
pop
sbb
shrl
pop
stos
xchg
dec
stos
jnp
jo
mov
iret
cs
icebp
adc
mov
mull
inc
std
and
sub
lret
stos
sbb
sub
mov
xlat
pop
dec
out
or
pop
sub
sbb
jmp
inc
or
lods
sub
jmp
xchg
scas
daa
dec
outsl
hlt
cld
push
pop
mov
cld
mov
lds
inc
and
push
mov
outsb
cmc
cmpsb
sbb
sbb
inc
ss
mov
lcall
sbb
ljmp
fidivs
jbe
pop
pop
out
daa
insb
push
xorl
sbb
nop
mov
jmp
jnp
push
mov
mov
mov
cwtl
loopne
outsb
push
sarb
lahf
mulb
test
add
lods
test
rorb
icebp
idivl
cli
negb
lcall
sbb
lea
lds
xor
aas
and
ljmp
pop
add
adc
sbbl
movsb
arpl
and
leave
inc
and
repnz
xchg
add
outsl
inc
cmpsl
pushf
es
fldcw
dec
mov
cltd
cli
les
outsl
sbb
int
pushf
mov
sbb
scas
xor
jge
pop
jge
pop
cmp
fisttps
mov
push
push
ljmp
mov
xchg
mov
jnp
jp
cmc
mov
push
daa
aad
cs
push
stc
int3
cld
out
lds
pop
mov
pop
xchg
hlt
and
outsb
and
mov
je
push
mov
loopne
arpl
fcoms
mov
cmp
mov
mov
daa
adc
in
mov
or
or
inc
sub
inc
xchg
jmp
inc
iret
mov
xor
pop
das
xchg
cli
imul
xor
adc
or
dec
cmp
mov
dec
out
clc
jg
xor
movsl
lret
and
xor
imul
in
push
jae
shl
push
cmp
mov
mov
xor
fdivrs
sahf
dec
push
or
int
cmp
call
insl
movsb
add
xchg
push
enter
jbe
pop
mov
mov
test
test
and
fistps
out
out
rcrl
push
adc
mov
fldpi
or
pop
mov
jg
adc
in
jmp
jnp
nop
ret
mov
test
dec
xor
jns
xlat
orl
stc
ljmp
cmp
xor
dec
es
sub
pop
push
or
adc
push
or
stc
ds
mov
test
push
sti
push
xchg
test
addr16
test
or
push
test
gs
and
int3
out
xor
xlat
sub
repz
lock
xchg
cmpsl
bound
mov
mov
mov
clc
mov
shll
int3
sub
loopne
sub
in
inc
inc
dec
ficompl
add
pop
push
cmp
mov
mov
or
std
out
lds
adc
xor
mov
inc
jae
jbe
addb
aaa
lcall
aaa
loopne
icebp
scas
mov
fldenv
je
pop
imul
movhps
pop
push
dec
sti
jge
popa
sahf
xor
into
push
dec
andb
inc
in
add
sub
les
cmpsl
push
push
stc
pop
call
fdivs
sbb
push
inc
sub
xchg
xchg
dec
aad
arpl
xlat
cld
jno
mov
dec
mov
push
cld
mov
loopne
mov
popl
mov
or
int3
cmp
mov
std
ret
lret
pop
lahf
fs
add
inc
outsb
inc
ret
lods
int3
mov
in
clc
push
pop
push
push
xchg
shll
dec
pop
sbb
sahf
icebp
mov
fsubrl
adc
pop
cmp
jecxz
mov
sub
fst
jg
inc
outsb
cmp
lea
xlat
shl
xor
jge
add
cmp
sub
push
push
mov
insl
negl
aad
push
aas
les
leave
int
push
sub
mov
imul
icebp
les
sidtl
loopne
ss
or
jmp
imul
xor
addb
lds
aad
or
call
test
hlt
fdivl
dec
adc
inc
dec
test
sub
pop
cwtl
mov
lret
pop
mov
inc
rorb
mov
out
xchg
add
pop
addb
or
xor
ja
pop
pop
mov
adc
sub
or
mov
push
push
xchg
rcr
test
mov
sbb
mov
push
fldenv
into
pop
sbb
xchg
dec
arpl
push
mov
mov
iret
bound
es
inc
cmpsl
scas
jmp
ljmp
mov
inc
dec
add
sub
adc
in
fcompl
mov
adc
sbb
ret
in
dec
movsl
out
sbb
lahf
test
xchg
or
bound
ljmp
xchg
xchg
push
adc
mov
mov
push
xor
fsub
sbb
lahf
pop
adc
cmp
cltd
jl
jnp
js
cmp
orb
adc
pop
push
sub
dec
and
cmp
inc
stos
shr
sub
data16
fcmove
mov
cmp
sbb
and
sbb
jg
js
mov
push
in
jmp
in
movsl
ja
div
push
mov
movsl
inc
gs
add
and
pop
leave
cmpsl
sbb
in
popf
pop
ret
mov
lret
sub
pusha
clc
mov
rcr
scas
out
popf
pop
sub
xchg
cli
sub
aaa
repnz
in
mov
xchg
or
push
xor
add
imul
sahf
jnp
adc
rcr
popf
mov
les
sbb
mov
sbbl
and
add
imul
shll
cmc
jne
insl
jg
jecxz
aaa
pushf
mov
xchg
push
mov
je
sub
add
mov
popf
xchg
sbb
out
inc
mov
inc
sub
push
insb
and
adc
or
mov
popa
sub
inc
and
sub
mov
add
add
sbb
mov
nop
loop
add
pop
jnp
and
or
movsb
loopne
int3
push
shlb
inc
addr16
rclb
mov
xor
dec
and
lock
dec
ja
lahf
sub
aad
rolb
xchg
popa
jecxz
push
xor
add
pusha
add
into
out
mov
in
push
jg
mov
in
lods
adcl
dec
ljmp
cmpsl
jle
mov
in
lods
sub
mov
daa
push
add
push
push
mov
add
sub
push
fmull
outsb
or
in
imul
scas
mov
orl
pop
mov
jns
jg
jbe
notl
shlb
dec
in
mov
mov
push
add
aaa
jns
enter
fistpl
xor
into
nop
pop
fsts
filds
push
pop
daa
cmp
clc
pop
mov
or
jle
fildll
dec
loopne
popf
inc
xorb
inc
sbb
or
mov
stc
roll
dec
xor
cli
sarb
in
ja
xchg
cwtl
jns
adc
and
mov
adc
test
iret
adc
xchg
mov
std
js
daa
and
cmp
scas
mov
in
add
cli
jecxz
mov
icebp
sahf
and
xorb
ds
notb
xchg
jecxz
mov
push
lret
mov
xlat
loope
or
cmpsl
push
in
mov
adc
cmpsl
push
inc
push
idiv
pusha
push
push
cs
inc
push
mov
jge
data16
push
jae
out
add
mov
add
hlt
testl
divb
xchg
dec
pushf
mov
xor
bound
or
dec
roll
lds
daa
inc
mov
subl
loope
sub
or
xor
mov
xchg
xchg
test
add
adc
shrl
ljmp
inc
and
sub
es
mov
fs
arpl
mov
xor
cltd
inc
xchg
mov
cmc
mov
lret
mov
xor
jmp
leave
jae
test
cwtl
cmpxchg
mov
cwtl
lret
int
push
xor
sbb
mov
insl
inc
leave
adc
inc
pop
jbe
imul
outsb
mov
sarl
test
std
xchg
mov
into
fdivrs
sub
or
outsl
mov
push
mov
aaa
pushf
bound
and
or
test
in
xchg
in
movsb
inc
lds
arpl
mov
call
push
ljmp
cwtl
xchg
pushf
mov
nop
adc
mov
rep
std
das
xchg
adc
cwtl
pusha
jmp
notl
inc
pop
sub
popa
xchg
test
stos
sbb
add
adc
popa
jp
push
adc
pusha
mov
pop
push
dec
aad
aas
lret
push
or
in
out
lods
fcomps
and
cmp
fsubrp
out
inc
jmp
pop
fwait
or
push
mov
out
xchg
sbb
or
fucomi
jle
push
sbb
fdivs
xor
sbb
test
movsb
pop
lcall
jne
cmpsb
test
pop
ret
fsubrs
adcb
hlt
xchg
sbbl
pop
pop
lea
xchg
cmp
xchg
or
or
push
xchg
mov
jbe
ss
lahf
les
add
mov
xor
ss
jno
movsl
xchg
cmp
dec
and
les
sbb
mov
sbb
jae
sub
stos
pop
pop
vmovddup
outsb
xlat
xchg
push
clc
int
lret
dec
pusha
fmuls
jae
jle
or
pop
cli
xor
mov
push
jns
sbb
lret
rcrl
mov
sbb
dec
add
fs
and
xor
scas
mov
rol
shlb
pop
icebp
cmp
ljmp
push
ret
xchg
jae
jno
dec
xor
ret
cmpsb
adc
or
popf
sahf
ds
test
insb
shll
test
lods
repz
repnz
sub
ljmp
scas
lock
sti
les
dec
push
inc
ljmp
cmp
das
arpl
mov
aam
jl
mov
pop
jne
cmp
icebp
pop
ret
adc
test
jnp
cmp
je
mov
in
lahf
cmp
pop
outsb
aam
out
mov
shll
int3
push
or
mov
sbb
fbstp
adc
cwtl
shl
xchg
ja
sub
lea
sbb
shlb
pop
les
mov
pop
mov
jp
sub
cmp
repz
add
jo
jno
pushf
aas
lret
es
xchg
fists
addl
jle
rclb
bound
xchg
xchg
sbb
mov
mov
dec
xor
cmc
sti
stos
test
movsb
rclb
aas
stc
mov
stc
cs
icebp
shlb
lods
sar
push
jns
repnz
mov
in
or
ret
data16
mov
shll
or
repnz
push
sub
adc
mov
int3
inc
and
pop
in
jo
cmp
jnp
pop
jne
addr16
xor
cltd
dec
sub
cmp
outsb
shufps
xchg
add
fsubrs
xchg
ljmp
push
pop
or
imul
cmpb
insb
sub
adc
pop
jnp
mov
pop
out
shll
cmpsb
mov
xchg
in
cmpsb
inc
mov
jne
loop
arpl
or
jmp
enter
cmpl
adc
insb
mulb
repz
out
rcrl
xchg
adc
stos
es
jge
cmc
les
mov
dec
lret
push
xor
adc
enter
inc
add
xchg
test
jno
mul
pop
pop
adc
orb
jb
add
es
repnz
pop
inc
sti
fistps
sbb
lret
dec
push
lock
pop
inc
sbb
or
adc
jno
xchg
cmp
test
mov
or
adc
sub
mov
adc
rolb
mov
lods
mov
dec
fistps
rclb
je
lret
pusha
fwait
ret
scas
ds
test
xor
mov
xchg
cmpsl
push
test
or
cwtl
into
cmc
es
shll
ret
insb
pop
and
jmp
sbb
adc
rolb
mov
xor
andl
push
fdivs
loop
enter
or
subb
push
mov
pop
cld
fistl
cmp
insb
xor
call
and
movsl
rcll
jge
mov
shrl
repz
mov
and
xor
in
je
outsb
ret
loopne
scas
mov
jg
shll
pop
fistl
shrb
roll
pop
xchg
inc
arpl
inc
mov
push
mov
xor
stos
pop
mov
jmp
mov
push
lods
les
xchg
lea
push
test
sub
inc
inc
jl
cmpsb
scas
jno
int
mov
cmp
xchg
push
dec
shll
das
shll
gs
cmp
shlb
cltd
push
push
xor
adc
sub
jecxz
adc
inc
fiadds
mov
jge
data16
sti
int3
aas
pop
cmp
leave
push
inc
push
leave
lds
dec
scas
je
jmp
xchg
inc
jb
fsubrs
loopne
lret
adc
jge
mov
mov
jle
jle
pop
es
imul
mov
les
mov
out
nop
pop
xorl
inc
pusha
aam
or
iret
adc
adc
inc
xchg
adc
fcom
mov
mov
sbb
xchg
mov
shll
mov
push
lret
pop
daa
dec
nop
or
arpl
data16
jb
test
int
fistpll
cmc
test
loop
mov
mov
add
cs
mov
fmull
sahf
lea
and
rolb
adc
mov
cmp
hlt
adc
lcall
aas
cmpsl
cmp
pushf
pushf
lods
mov
test
ret
pop
mov
cmp
add
push
mov
jns
out
mov
push
dec
cmp
icebp
in
cmp
scas
pop
dec
inc
mov
push
inc
jnp
gs
lahf
xor
jge
mov
xchg
jb
jns
mov
xchg
push
xorl
lock
sub
fs
sahf
fildl
push
arpl
test
and
and
leave
scas
int3
ficoms
adc
cld
adc
lcall
mov
or
test
pop
mov
cmp
sti
add
add
dec
jnp
les
pushf
mov
ljmp
xor
ficompl
fldt
cmc
cmc
mov
mov
sbb
in
out
incl
das
add
mulb
orl
call
inc
insb
adc
jnp
inc
js
lods
imul
jmp
jae
pop
ss
popf
mov
xchg
lahf
loope
insb
scas
loopne
xchg
ss
xor
push
stos
test
mov
sbb
cmp
mov
add
push
pop
cmp
push
fcompl
jp
mov
loop
and
ds
out
gs
jne
loopne
imulb
lahf
mov
loopne
decb
pop
sub
sub
in
je
popa
popa
dec
dec
fs
or
xor
div
lret
push
enter
lret
sub
mov
das
fdivp
add
push
in
sahf
enter
bound
mov
jns
sbb
insl
loopne
inc
sbb
cmp
mov
adc
dec
and
inc
scas
pop
jmp
jle
xor
or
sbbl
inc
xor
sbb
ret
lret
sub
pushl
sbb
fwait
ljmp
dec
jle
cltd
or
cs
cmp
jne
aaa
popf
jnp
xlat
or
mov
mov
ret
je
pop
jl
adc
xor
stos
add
in
jae
push
lret
cmp
ljmp
mov
xchg
ja
or
aaa
xchg
xchg
cltd
cld
stos
fistpl
mov
add
push
shlb
adc
mov
lea
fdivl
fisttpl
test
mull
movsl
enter
push
pop
cmpl
insl
mov
add
cmp
push
cmp
imul
pop
aad
loop
out
mov
xchg
mov
xchg
shr
fidivrs
sti
mov
mov
xor
mov
jecxz
leave
stos
jne
mov
outsb
inc
negb
pop
push
dec
loopne
outsb
xchg
inc
cmp
inc
cmc
lods
fistl
in
inc
sub
add
mov
insb
sbb
push
pop
sar
pushf
inc
stc
je
jbe
inc
dec
inc
mov
lret
mov
insl
dec
xchg
jns
mov
inc
loopne,pn
adc
shrl
mov
ret
pop
iret
add
sbb
jmp
mov
ja
mov
sbbb
mov
loop
add
pop
shll
cli
sbb
xor
xor
int
jl
sub
xor
inc
mov
out
push
mov
scas
mov
pop
inc
imul
addr16
dec
xchg
stc
sar
in
jle
in
imul
mov
ds
lret
lds
or
lods
xor
out
pushf
outsl
pushf
out
xor
cmp
mov
cmpsl
mov
popf
fwait
or
je
add
jp
dec
cmpsb
xchg
pusha
cmp
pop
xlat
movl
xor
imul
cmp
inc
xchg
sub
jne
jecxz
stos
and
sbb
or
jno
xchg
movsb
mov
insl
fistpl
adc
xlat
outsb
gs
fmull
pop
mov
rorb
sti
sub
jnp
sbb
pop
stos
push
adc
lahf
mov
loope
out
inc
pop
mov
xor
push
mov
insb
rolb
jb
fstp
cld
xchg
xchg
out
mov
xchg
and
pop
mov
outsl
mov
push
cmp
lret
xor
add
dec
xchg
je
push
test
popa
fxch
inc
push
fimuls
and
mov
push
shll
aam
pop
fistpll
rep
rol
mov
dec
movsb
or
mov
cmp
icebp
pushl
jb
lcall
aad
outsb
push
pop
lods
stos
stc
stc
xor
pop
cli
xor
pop
dec
sub
out
pusha
data16
test
mov
lahf
popl
mov
cs
movsb
ds
jmp
out
xchg
or
dec
arpl
mov
mov
lock
cli
push
xabort
jecxz
sbb
ud1
out
clc
repnz
or
push
jbe
int3
jle
lret
pop
xchg
inc
stos
lret
push
jge
jge
and
xchg
xchg
ret
or
xor
add
mov
hlt
andb
movsl
xor
or
dec
sbb
push
sub
xor
popf
notl
and
mov
sbb
fildl
adc
xlat
cmp
push
mov
xchg
push
jl
mov
dec
mov
daa
pop
cmc
movsb
push
mov
inc
sub
adc
int
pop
aad
out
jb
push
jg
rolb
pop
mov
pushf
jg
shll
adc
cmp
lods
push
adc
mov
cmpsl
push
push
jmp
push
add
scas
lcall
jmp
xchg
mov
sbb
jge
inc
mov
sahf
test
inc
icebp
mov
mov
pop
push
shl
test
cmp
adc
cld
fldcw
rcrl
outsl
jne
cmp
xor
jnp
push
mov
pushf
lock
pop
cmpsl
incl
divl
xor
jg
dec
dec
cmp
in
sub
test
mov
cs
stc
leave
jae
iret
loop
mov
stos
addr16
dec
lret
out
mov
js
adc
mov
pop
pop
adc
mov
lds
pop
inc
push
in
lock
cmp
mov
pop
add
out
fldt
sub
mov
pushf
inc
jno
data16
or
hlt
pop
sbb
std
xor
xchg
cli
add
ljmp
fstpt
dec
xchg
shlb
inc
rclb
mov
stos
fwait
mov
push
mov
and
ss
sub
adc
sbb
push
or
push
lret
inc
popf
testl
or
scas
cwtl
xchg
push
push
pop
repz
cmpsb
cmp
lcall
orb
jl
icebp
jae
hlt
shlb
rcll
xchg
inc
pop
shrl
lods
nop
push
dec
fdivl
pop
pusha
test
aaa
cmp
lahf
test
xor
push
adc
fstpl
add
insl
mov
addr16
pusha
sti
mov
jecxz
sahf
das
jb
loop
pop
mov
or
xchg
outsb
lea
es
lret
fucomip
cltd
rcll
jne
popa
mov
adc
push
xrelease
xchg
cmp
jno
lcall
adc
inc
mov
add
psubq
outsl
ljmp
lahf
lea
xor
hlt
sub
jecxz
xor
adc
cmp
clc
lea
movsb
nop
dec
pop
cmp
stc
jl
cmp
iret
and
sbb
cli
dec
push
lods
lods
inc
orl
daa
jge
cmp
mov
dec
ljmp
cmp
mov
dec
jmp
and
sub
aas
inc
cmpsb
pop
mov
gs
ret
rorl
in
fistl
dec
xchg
das
and
jl
movsb
outsl
gs
mov
addr16
dec
ret
pushf
and
je
xchg
pop
jb,pn
scas
scas
mov
or
testb
lock
imul
xor
fiadds
fnstenv
xor
xchg
add
in
hlt
jmp
mov
xchg
imul
push
loopne
in
inc
push
cwtl
push
sbb
jo
cmpsl
xchg
adc
repnz
mov
repz
mov
aaa
pop
out
jmp
icebp
ficoml
inc
xchg
jg
push
lods
xchg
xor
test
sbb
icebp
in
test
fs
xchg
jnp
bound
add
xchg
dec
shrl
movsl
and
add
scas
jg
pop
insb
fmull
jmp
roll
dec
add
or
ja
sbb
arpl
popa
jno
push
mov
add
add
fbstp
lods
mov
cli
imul
xlat
inc
ret
leave
dec
cmpb
jo
or
jns
test
ljmp
movsl
jp
cmpsl
outsw
xchg
in
cs
scas
ss
xchg
jmp
mov
sbbb
scas
sbb
push
lcall
in
or
fnsetpm(287
push
xlat
pop
push
in
fisubl
push
mov
daa
mov
cmp
jnp
xchg
push
cwtl
fldenv
add
es
pop
sub
fdivrs
fdivl
xor
and
sub
inc
xor
or
fcompl
bound
mov
loope
outsb
xor
mov
fisttpl
fsub
lock
pop
mov
lds
inc
mov
mov
orb
dec
mov
popf
orb
stos
fnstenv
mov
cs
jmp
jmp
sti
push
hlt
fnstcw
inc
hlt
aad
shll
jecxz
dec
adc
decb
or
push
push
lcall
outsl
insb
push
inc
xor
test
and
xchg
mov
mov
fisubrs
push
push
jnp
ss
imul
mov
pop
mov
cwtl
dec
sahf
ror
das
ficoms
roll
sbb
inc
mov
outsb
mov
cmp
stos
mov
jnp
pop
int3
das
jns
je
fcompl
add
dec
push
dec
mov
rclb
in
xchg
add
in
dec
sbbb
subl
jbe
stc
and
sub
movsb
and
add
sbb
cmpl
adc
jle
popf
mov
mov
lcall
pop
cmpsb
mov
out
mov
lods
in
int
jp
mov
pop
push
push
clc
in
mov
rorl
pop
insl
cwtl
mov
incl
jbe
push
pop
cmp
mov
addb
repz
jne
dec
pop
bound
lahf
out
jp
inc
insb
cltd
cmp
loop
jl
ret
and
cmp
cmp
cli
in
sahf
call
stos
xor
shrl
and
stos
or
insb
push
pop
jge
adc
aaa
pop
popa
popf
ret
roll
xchg
push
mov
loop
mov
stos
mov
pop
xorb
mov
in
clc
sub
mov
pop
scas
and
cli
je
mov
and
dec
call
nop
pop
lock
mov
test
jge
sub
dec
std
dec
pop
cwtl
test
pop
aas
add
popa
rcll
out
sbb
sub
sub
add
push
cmpsb
insb
imul
lahf
mov
mov
sti
leave
cmp
shl
ljmp
xchg
and
fisubrs
xchg
push
loope
mov
push
mov
mov
pop
outsl
cmp
into
outsb
lret
xor
lock
in
mov
push
jmp
test
jg
xor
das
and
int3
repz
sbb
movsl
notl
or
push
test
in
pop
pop
test
popa
enter
mov
iret
jo
xchg
push
push
ss
out
cmpsb
inc
mov
inc
fwait
iret
mov
aaa
out
mov
out
cmc
pop
in
cmp
jae
cli
add
xchg
lea
inc
mov
movsl
adc
push
movsb
or
xor
repnz
out
push
jae
push
int
mov
test
dec
cwtl
test
cld
or
xchg
dec
fs
ja
insb
sbb
pop
addr16
adcb
popa
call
lret
pusha
inc
imul
mov
sbb
push
es
xchg
out
lahf
data16
mov
rcl
fistl
fcmovnb
sahf
cs
sub
int3
adc
adc
mov
dec
push
in
pop
les
divl
cmp
insl
mov
add
xor
ljmp
dec
dec
xor
or
in
scas
pop
add
adcb
rclb
call
jno
inc
xchg
cs
fstpt
mov
pop
push
push
fwait
mov
out
push
mov
adc
jno
pop
xchg
pop
mov
loopne
sbb
aad
xlat
test
shll
imul
and
dec
push
lock
inc
push
push
bound
pop
inc
dec
xchg
cmp
jle
lahf
xor
and
fdivr
imul
jb
fcoml
sub
scas
xchg
rcrl
shll
arpl
or
mov
adc
test
sbb
ss
mul
or
xchg
inc
cli
jp
mov
adc
ficomps
rorb
iret
mov
hlt
int3
scas
adc
or
xlat
pop
sahf
xor
mov
mov
sahf
scas
js
inc
push
clc
je
jle
pop
out
ret
push
push
xor
rclb
movl
sbb
gs
dec
jecxz
mov
push
dec
add
adcl
lret
pop
dec
dec
fnstsw
pop
mov
cmc
jns
jo
in
mov
inc
xchg
push
imul
mov
lea
xor
fildl
in
adc
sub
into
fs
push
sarb
inc
adc
rorb
repnz
aaa
aam
subl
xor
or
gs
mov
mov
gs
inc
pushf
xor
ja
lcall
or
jg
jo
in
xchg
ss
aas
test
adc
mov
movsb
xchg
jecxz
bound
out
dec
call
movb
jmp
cmp
push
sbb
fbstp
ljmp
jmp
jecxz
insl
fcom
push
rcrb
negl
pop
test
imul
add
call
or
xor
and
sbb
and
test
ret
pop
mov
jne
adc
out
mov
push
add
push
mov
sbb
int
aas
lcall
mov
adc
lods
es
and
sub
pop
xor
mov
clc
or
jbe
xchg
or
mov
clc
pushf
jle
fs
dec
mov
push
adc
xchg
inc
xchg
cli
add
pop
and
jecxz
in
mov
pop
cld
xchg
mov
enter
xor
sub
lods
pop
jno
or
push
cs
inc
or
add
lret
or
adc
jb
mov
movsl
xorb
fwait
inc
mov
incb
clc
adc
mov
jecxz
lods
imul
inc
inc
sbb
mov
in
sti
in
stos
sub
mov
sub
fucom
mov
int3
pop
jb
jnp
pusha
mov
sar
lock
mov
adc
ret
popl
arpl
in
es
cmp
jecxz
and
jb
test
repz
sub
jmp
push
movsl
test
jne
mov
lea
or
sub
sbb
lods
push
iret
mov
enter
add
mov
andb
xchg
push
dec
jecxz
jbe
cld
mov
or
fdivl
outsb
jle
adc
lods
xchg
int3
je
icebp
inc
pusha
xchg
imul
add
add
adc
jge
in
cmc
cltd
rclb
inc
add
les
xchg
nop
sbb
inc
xlat
sub
and
jne
aad
rorl
mov
or
push
lret
and
loope
cmpsl
or
ficomps
cli
idivb
mov
inc
in
mov
push
sahf
fcmovb
nop
mov
push
add
into
sbb
insl
or
inc
mov
mov
das
stc
xchg
sub
xor
adc
push
imul
lea
ja
cmp
test
and
push
into
mov
cmp
mov
or
cld
mov
mov
cltd
xchg
or
das
jnp,pt
arpl
enter
es
das
xor
add
outsl
in
jg
inc
test
add
hlt
jge
mov
test
shll
mov
addl
rcr
or
jecxz
sbb
jecxz
stc
xor
lods
es
insb
cmp
pushf
sub
jmp
pop
adc
and
mov
mov
lds
sub
pop
leave
xchg
je
push
xor
push
push
stos
inc
das
adc
mov
imull
fistps
dec
pop
iret
loopne
incb
orb
negb
adc
lea
and
imul
pop
jl
inc
cld
por
shlb
or
mov
mov
add
loopne
scas
dec
mov
mov
movsb
in
aam
lods
pushf
dec
jmp
fsts
aaa
test
inc
ss
sub
cmp
pop
rcll
addr16
in
cmp
je
and
call
xor
push
mov
or
mov
lahf
mov
sbb
shrb
xor
push
add
lret
and
pop
adc
inc
mov
mov
or
aad
push
mov
mov
shll
ljmp
icebp
jnp
xchg
jns
out
into
iret
xchg
mov
das
sti
scas
enter
ja
mov
imul
pop
imul
lret
stos
add
mov
and
sarl
test
pop
int3
sbb
lcall
dec
cwtl
xchg
lock
ret
imul
push
popf
xor
cltd
data16
inc
pusha
cmp
insl
sub
arpl
push
mov
mov
sub
std
sub
mov
lcall
rcrb
enter
mov
and
pop
push
adc
sarb
cmp
ss
mov
dec
cmp
repnz
lret
dec
inc
mov
mov
and
fadd
data16
inc
pop
aad
cmc
push
roll
in
or
int
fs
jmp
negl
push
je
xor
pop
fldcw
sub
sbbb
pop
inc
nop
cmc
sub
popf
aam
fdivrs
iret
sbb
aam
out
mov
scas
dec
movsl
xor
shr
xchg
sahf
mov
sbb
dec
or
mov
sub
mov
pushf
les
adc
cmp
rcr
les
loop
cwtl
fs
and
and
dec
adc
inc
sub
and
insb
daa
pop
fnstsw
xchg
sbb
lea
jne
inc
push
mov
mov
xor
xlat
sbb
or
fidivl
xlat
xlat
insb
mov
inc
sti
ret
in
movsl
dec
scas
mov
imul
push
dec
ljmp
add
mov
ret
std
enter
mov
jmp
sbb
jo
loope
lret
mov
push
push
fnstsw
xlat
dec
ljmp
in
out
sbb
testb
mov
movsl
pop
std
es
cmpsl
xchg
sbb
add
hlt
ds
negl
mov
enter
dec
pop
imull
xchg
jb
ds
jo
xorl
lods
adc
xor
je
mov
inc
sbb
out
push
cmp
jle
cwtl
adc
lods
cmpsb
cltd
jno
add
incl
push
je
jne
aam
loopne
or
sub
lea
and
enter
inc
mov
sub
test
daa
pop
dec
fidivs
pop
lds
into
out
call
xor
rclb
sbb
push
scas
orb
cmp
dec
hlt
sbb
insl
xlat
xchg
xchg
jno
mov
shrl
insl
jae
not
and
out
push
sub
pop
adc
jne
and
or
ffreep
adc
idivb
sti
mov
adc
jae
xchg
stos
fs
xchg
cld
icebp
sbb
mov
rep
push
mov
ja
leave
movsl
push
jp
daa
lret
xor
dec
adc
sbbl
insb
pop
or
mov
loop
push
fistpll
inc
mov
adcb
dec
mov
mov
lahf
add
adc
pop
sub
mov
cs
ss
in
add
dec
jp
mov
jno
insb
push
std
call
mov
out
test
add
mov
xchg
pop
ds
unpcklps
in
xchg
mov
movb
sbb
mov
repz
push
aas
sub
mov
scas
pop
xor
cmp
or
je
movnti
xor
std
enter
mov
push
mov
test
jno
fistpl
sub
inc
shlb
fimull
out
sbb
add
cmp
int
jmp
xor
adc
jmp
mov
jmp
scas
sub
dec
cmp
jmp
les
repnz
fisubs
out
mov
shlb
sbb
mov
scas
fisubrl
jb
sbb
sahf
mov
xchg
mov
pop
xchg
push
pop
add
cltd
faddl
ret
mov
mov
popl
jmp
fistl
inc
or
mov
inc
adc
js
or
mov
es
movsb
lahf
or
add
xchg
popf
shll
movsl
hlt
or
daa
xor
jp
jne
out
arpl
sbb
add
in
xchg
mov
push
dec
test
mov
inc
jo
ret
data16
imul
insb
push
in
mov
add
loope
hlt
inc
arpl
or
push
mov
or
add
mov
lcall
mov
pusha
inc
shr
outsl
and
push
das
das
imul
test
inc
pop
out
adc
into
dec
xchg
add
dec
push
add
push
add
jns
sbb
les
pusha
jbe
data16
inc
or
inc
sbb
or
cmp
xchg
jle
add
xor
or
add
add
cld
aaa
push
or
outsb
xlat
loop
outsl
sub
xchg
adc
push
cld
push
pop
clc
xchg
push
dec
pop
out
inc
cmp
lds
or
movsl
jmp
xor
dec
pusha
mov
xchg
fadds
in
clc
and
add
sbb
subl
insb
in
jecxz
iret
fwait
xchg
cltd
aas
sbb
inc
ss
ret
or
rol
pusha
jns
adc
loop
scas
mov
in
aas
imull
cmpsb
xchg
pop
mov
outsl
xchg
es
add
andb
dec
btc
dec
repz
inc
dec
cmpsl
je
popa
or
pop
rcrb
xorb
movsl
outsb
fsubrl
ret
jge
lods
int3
or
mov
inc
je
ja
sbb
cmp
std
mov
hlt
jmp
hlt
mul
enter
insb
mov
repnz
fldt
stos
outsb
scas
xchg
shr
jecxz
mov
mov
and
jae
push
shll
imul
bound
cmp
enter
rolb
dec
or
stos
xchg
pop
or
adc
nop
roll
mov
jb
jbe
fninit
int
call
movsb
pop
test
fcoml
mov
and
add
xchg
jl
iret
inc
and
fimull
pop
jo
lock
sahf
sub
je
jge
push
sbb
insl
lea
mov
mov
jns
mov
mov
sahf
js
aad
fcmovbe
mov
mov
push
repnz
jmp
jecxz
scas
xchg
out
into
adc
or
xor
int
inc
lea
add
inc
jb
in
lcall
loopne
adc
adc
psrld
enter
imul
sub
notb
jecxz
mov
cmp
fisubs
mov
cld
xchg
fistpl
sub
pop
pop
insl
out
mov
shlb
pop
ja
outsb
ljmp
imul
push
lea
or
mov
xchg
aas
cld
mov
push
ret
pop
mov
data16
pop
shll
adc
add
gs
mov
xor
into
adc
sub
dec
outsb
in
adc
cltd
push
stos
lret
and
mov
fists
lahf
in
loope
xchg
jge
push
add
mov
aaa
push
imul
dec
scas
jb,pn
ret
ret
rcrb
movsb
test
add
or
and
not
mov
dec
jb
push
jns
fcoms
mov
scas
cmp
mov
aam
add
mov
aaa
add
pop
add
or
ret
mov
xor
dec
dec
fsubrs
sbb
cmpsl
or
xchg
jp
dec
repnz
mov
and
mov
mov
in
das
ljmp
gs
imul
push
pop
jge
adcb
and
add
mov
imul
sub
sub
movsl
lds
or
in
pop
jnp
inc
hlt
fcomp
cmp
cmp
xchg
loop
or
add
scas
jmp
mov
jns
scas
sti
xchg
fs
movsl
shrb
push
or
decl
rcrb
clc
jge
xchg
mov
icebp
xchg
lods
sub
fdivrs
repnz
mov
adc
mov
outsb
mull
les
sub
dec
shrb
fstpt
xchg
lcall
fldl
test
mov
add
mov
xchg
roll
sub
jl
pop
cltd
fisttps
adc
mov
xor
loopne
dec
sub
or
stos
cmp
enter
int3
bnd
mov
fs
or
pusha
fwait
xlat
cltd
pop
add
int3
shll
loope
sti
imul
aam
xor
clc
in
fmul
adc
dec
lahf
leave
movsl
bound
mov
mov
xchg
enter
add
out
push
xor
jecxz
rcrl
fucomip
sbb
adc
push
and
cmp
xor
mov
xchg
adc
mov
out
adc
dec
loope
xchg
repnz
mov
sbb
cmp
roll
shl
sbb
inc
inc
insb
xchg
mov
enter
lcall
jecxz
inc
mov
stos
pusha
insl
jl
push
shrl
sbb
xor
inc
out
insl
xchg
mov
bound
adc
and
std
hlt
cwtl
mull
out
imul
das
aaa
clc
loopne
int3
xchg
cmp
push
dec
add
inc
dec
push
and
inc
mov
xor
jns
test
cmpsl
cmp
add
aad
mov
aaa
xor
push
cli
lds
xchg
push
xchg
dec
das
out
mov
and
aas
xor
push
pop
mov
aaa
push
les
out
dec
icebp
adc
xor
mov
xchg
or
or
add
jle
outsl
shrb
add
aam
pop
daa
mov
sub
imul
or
add
xor
je
outsl
in
addl
es
rcrl
jge
fstpt
or
dec
push
cld
sub
repz
test
xchg
pushf
xor
stos
lret
loope
and
pop
cwtl
mov
cmp
cmp
aam
inc
sbb
xchg
out
imul
dec
stos
xlat
mov
lret
sbb
xor
sti
lds
push
icebp
cmpsb
lret
lock
outsl
test
ss
mov
pop
les
dec
cld
insl
enter
nop
test
idiv
lods
in
rcll
pusha
mov
cmpsl
movsl
movsb
sbb
inc
testb
fidivl
mov
push
test
xchg
jge
outsb
aas
mov
sbb
cld
jo
jnp
lock
sub
into
sbb
fwait
jae
shrl
dec
xchg
mov
cltd
dec
in
stc
mov
pop
std
clc
mov
ljmp
pop
ljmp
fisubl
loope
mov
adc
cmc
rorb
out
in
add
sub
xchg
pop
sbb
or
dec
inc
dec
dec
mov
pop
lret
cmpsb
inc
sbb
fcoms
fmul
xor
adc
gs
outsb
pop
fisubs
and
mov
mov
les
adc
mov
adcl
xchg
insb
loope
mov
jbe
sti
into
daa
popf
outsl
std
aas
sbb
jb
mov
and
sub
sbb
add
stos
mov
xor
push
fwait
mov
xlat
push
dec
xchg
and
pop
mov
stc
or
add
daa
sar
mov
adc
jle
adc
pop
xchg
leave
xchg
cmc
addl
xor
push
cwtl
mov
gs
dec
push
lret
stos
insl
pop
push
adc
movsl
out
aad
or
fnstenv
out
push
cmpsb
out
cmp
clc
call
inc
stos
repz
arpl
repz
mov
push
dec
fmuls
ds
cwtl
fists
pop
mov
out
test
lahf
stos
lods
cmp
in
mov
rcll
push
jne
xchg
or
xchg
inc
inc
pop
sti
lcall
pop
xchg
mov
sub
sbb
mov
in
mov
jmp
pop
daa
add
sti
repz
mov
sbb
mov
cmpsb
push
addr16
sub
adc
xchg
xchg
enter
xchg
pop
cwtl
mov
js
lcall
cmc
mov
dec
popa
mov
mov
fsub
pop
addr16
add
arpl
fs
xchg
add
mov
pop
pusha
cmc
and
push
xchg
stos
test
and
daa
cmp
out
sbb
hlt
inc
into
insl
inc
cmpsl
fnstenv
data16
pop
adc
jb
out
ror
jl
out
sbb
std
push
xchg
pop
lock
mov
add
pop
xchg
bound
add
enter
inc
jns
and
sbb
cmpl
push
nop
adc
mov
mov
and
push
push
sbb
and
cmp
sarl
push
icebp
lret
daa
fadd
push
mov
jae
mov
aaa
xlat
imul
or
les
sbb
arpl
ja
add
clc
jl
dec
in
xchg
clc
enter
jle
and
movsb
imul
add
pop
jl
push
sbb
mov
sub
int3
cmp
bound
fnstsw
xchg
cli
fnstcw
mov
bswap
push
in
pop
arpl
fidivrl
stos
stc
add
mov
jnp
jnp
inc
fnstcw
hlt
dec
push
inc
cmp
push
loop
xor
push
js
xchg
in
push
add
arpl
adc
xchg
push
jge
cmp
ja
lret
mov
inc
jae
pop
insl
test
cli
test
or
sbb
cmc
xchg
push
outsl
out
push
dec
lods
lret
dec
or
xor
inc
jmp
sti
cmp
add
pop
test
scas
loopne
mov
xchg
imul
xor
push
pop
icebp
jle
les
add
ds
fs
decb
sbb
fistl
jge
xor
test
pop
jnp
mov
pop
imul
mov
inc
lret
insl
push
mov
sub
dec
int
mov
lods
and
rcrl
jecxz
adc
cmp
xor
xchg
ja
xor
dec
sbb
enter
mov
aam
ds
mov
aaa
nop
inc
lcall
xchg
pop
into
leave
psubw
push
testl
pop
lods
jmp
bnd
or
lds
push
pushf
fmuls
adc
sub
xor
and
push
mov
outsl
lcall
scas
aas
js
adc
add
enter
jnp
testb
jbe
push
sub
cmc
loop
dec
jp
test
lock
xchg
or
or
or
cmp
or
or
inc
dec
jb
and
jmp
mov
pop
inc
dec
dec
icebp
fdivrl
sbb
sub
jno
sub
mov
or
mov
mov
test
test
aam
or
mov
mov
xor
mov
pop
and
sbbb
xor
sub
das
or
out
dec
js
mov
iret
jl
dec
in
dec
xchg
sahf
sub
adc
dec
add
dec
fisubrl
out
cld
enter
jl
test
pop
jb
roll
mov
lods
push
mov
cli
scas
in
out
fmul
and
mov
mov
mov
push
in
or
add
push
and
ret
xor
fimull
pop
mov
pop
push
fstpt
outsl
pop
out
xchg
and
xor
jne
add
outsb
and
test
cltd
gs
imul
das
in
cmp
fdivs
pop
mov
rcr
or
fisttpll
enter
jle
mov
push
mov
stos
bswap
cs
add
stos
xchg
push
cmp
inc
into
mov
mov
or
inc
outsl
scas
iret
outsb
stc
or
lret
lods
imul
test
add
inc
insb
mov
lds
jnp,pn
mov
lret
mov
jbe
hlt
mov
stos
jg
test
dec
xor
inc
ja
adc
pop
xchg
mov
sub
sub
dec
popf
mov
dec
insb
stc
inc
sahf
push
pusha
mov
adc
mov
add
inc
je
push
jb
fsubrl
mulb
mov
mov
and
dec
xchg
mov
adc
cltd
jmp
pushf
test
and
jp
out
lods
jmp
ljmp
xchg
xchg
add
push
xchg
dec
mov
mov
inc
ljmp
mov
in
int3
or
sbb
lret
or
or
or
sbb
pop
clc
jne
dec
mov
imul
in
cmc
outsb
or
insb
or
sub
add
pop
loope
pushl
xchg
push
fsubrl
imul
cmpsb
pop
mov
lcall
int
or
stos
stos
mov
aad
and
xchg
int3
mov
out
push
cmp
sahf
lea
xor
push
fiaddl
sti
jae
ret
xchg
xchg
xchg
push
lock
test
jae
adc
gs
mov
pop
push
rcr
pop
pushf
and
cmpsb
pop
cmp
mov
cmpsb
dec
push
jae
pop
dec
add
cli
aas
mov
hlt
sub
jnp
les
dec
stos
or
sbb
push
aas
mov
std
push
cmp
fxch
mov
cmpsb
pusha
rcrl
insb
call
das
cmc
and
fwait
cltd
or
sbb
mov
jg
test
out
loope
aad
ret
dec
or
sbb
mov
sub
dec
sbb
mov
mov
dec
clc
fldenv
popa
adc
outsb
cmpsb
pop
xchg
das
ror
xor
call
push
add
out
fidivrs
dec
ds
pop
pop
pop
jns
popf
mov
push
faddl
lods
cmpsl
stos
into
loope
ret
xor
jg
cli
mov
xor
mov
sub
icebp
dec
mov
lods
cmc
es
or
shrb
mov
mov
out
hlt
movsb
iret
filds
ret
xor
fimull
inc
adc
in
inc
mov
cmp
fists
sub
fiadds
inc
dec
cmp
adc
lock
std
test
mov
push
dec
cmpsl
testb
xlat
jnp
movlps
xor
into
sub
stos
inc
test
adc
pop
cmpsl
xchg
jle
repnz
js
inc
aaa
ljmp
std
jbe
outsb
mov
aas
xchg
test
mov
xchg
adc
push
into
rorb
cmpl
repnz
shrl
xchg
mov
mov
lods
push
stc
mov
jns
aad
fs
jne
negl
sbb
leave
push
jmp
push
and
repz
cltd
in
and
fcomps
sbb
test
rol
mov
shl
pop
scas
stos
in
push
pop
mov
out
xchg
daa
sub
mov
push
xlat
aam
test
pop
es
cmp
fsubs
mov
in
in
sbb
pop
adc
and
test
scas
push
jae
iret
fcom
adc
adc
inc
inc
jnp
pop
loopne
mov
shll
xor
shll
push
and
aas
cmp
iret
cli
cld
xchg
add
outsl
aaa
enter
shrl
xchg
fisttps
mov
pop
pop
mul
mov
mov
sub
stc
mov
adc
add
leave
enter
insb
cmp
fimull
and
add
sub
pusha
test
push
pop
inc
fwait
pop
aad
push
inc
les
add
aad
cmp
movsl
push
lods
adc
push
das
push
out
in
push
mov
dec
xchg
mov
add
sti
cltd
jle
repz
xchg
mov
lcall
mov
ja
dec
test
and
lcall
test
shll
movsl
xor
push
pop
xor
je
dec
cs
fcompl
call
lods
push
addr16
jmp
pop
test
je
sti
pop
xchg
inc
pusha
sbb
and
sub
mov
jl
fmuls
jns
vminps
gs
shlb
jg
bound
lret
or
roll
jecxz
pop
test
loop
xchg
adc
dec
aad
sbb
iret
cmpsl
punpckhwd
dec
mov
cpuid
cs
lods
xchg
sub
mov
and
stos
xchg
cmp
aas
jp,pn
jno
mov
add
push
repz
orb
jmp
and
in
dec
jp
push
data16
and
insl
inc
out
jle
popa
cmpb
pusha
das
nop
xor
cli
sbb
push
and
jbe
add
pop
popa
mov
or
cld
jnp
cmp
or
lock
les
push
popf
jbe
test
stos
jle
out
lret
mov
push
std
int3
aam
movsb
movups
decl
xor
push
xor
jae
sbb
daa
imul
sub
xchg
pop
add
in
pop
fsubl
adc
add
mov
cli
dec
cltd
sub
add
cltd
xlat
add
xchg
test
lret
in
gs
fstl
pop
ds
push
pusha
push
or
push
jae
jb
adc
cmpsb
lock
pop
in
cmp
shlb
mov
mov
mov
sbb
mov
outsb
push
jo
movsl
xor
inc
ret
pop
fcmove
in
out
pop
jo
sub
xor
data16
rorb
jae
stos
lods
pop
add
adc
xor
out
icebp
adc
test
pop
and
lds
dec
pslld
in
inc
stc
inc
pop
jp
cmp
cmpsl
cmp
cmp
push
adc
jp
pop
pop
scas
shlb
inc
jecxz
xor
movsl
sbb
jle
dec
or
and
out
fildl
adc
xor
xor
jle
notl
push
imul
shlb
fldl
push
inc
subl
dec
and
incl
cwtl
test
int3
jb
sub
push
xchg
test
adc
adc
je
int
push
faddl
mov
data16
or
xchg
in
outsb
sub
cmp
sbb
mov
into
sti
ds
dec
mov
pop
or
imul
mov
xchg
sbb
pop
clc
inc
mov
jae
mov
insl
out
and
loopne
sub
outsl
or
ja
jecxz
dec
jae
insl
sub
shl
sbb
lods
cs
cwtl
sub
dec
outsl
ficoml
out
or
ret
movsb
in
in
mov
push
insb
sbb
and
mov
xchg
jl
sti
xchg
add
xchg
icebp
pop
cwtl
int3
push
pop
fstl
adc
cmpsl
push
xor
ss
push
je
jne
cmp
xor
pop
sub
cmp
fnstenv
mov
xchg
rcrl
lcall
ss
sub
popf
mov
lods
gs
into
leave
jmp
icebp
jge
js
sti
divl
mov
lahf
repnz
jl
mov
cli
loope
mov
sub
add
rcll
jo
xchg
stc
lods
ds
stos
cli
push
mov
aaa
adc
adc
divb
mulb
cld
jl
hlt
dec
jp
ja
jmp
in
stos
loope
sub
add
neg
mov
aas
es
lea
into
shr
shl
loope
mov
andb
mov
mov
mov
sbb
into
lahf
std
sub
iret
arpl
jmp
mov
or
mov
jge
aas
mov
push
cmc
dec
pop
adc
fs
push
add
xchg
popa
sbb
int
ficompl
lcall
lds
mov
jge
sti
insl
test
dec
imulb
xchg
test
int3
xor
pop
adc
mov
push
dec
mov
inc
cmp
add
ljmp
add
pop
leave
and
stos
xchg
sbb
push
pop
idiv
mov
ljmp
xchg
pop
stc
scas
mov
push
lahf
pop
or
popf
inc
xor
das
rcrb
imul
xlat
pop
and
dec
call
and
sbb
in
icebp
pop
repz
and
or
aas
cmp
das
gs
fists
nop
pop
in
imul
lods
insl
dec
and
xchg
mov
imul
imul
out
xor
popf
or
mov
cmc
push
sub
in
and
jb
rcrb
cmp
mov
jl
ss
out
mov
adc
pop
xorl
mov
jg
xchg
das
pop
out
jp
mov
shrl
inc
sbb
lret
dec
inc
adc
cmp
fildll
xchg
or
dec
or
cwtl
js
sub
outsb
test
jnp
jg
pop
loopne
int
dec
and
scas
stc
sbb
cmp
xchg
test
test
mov
pushf
mov
mov
cmc
adc
and
sbb
ja
jb
cmovp
mov
adc
dec
lret
ljmp
cmp
or
mov
mov
xor
clc
aas
test
inc
lea
icebp
es
aas
cld
lcall
cld
add
lahf
cmpsb
pop
mov
fistpll
dec
fsqrt
aad
decb
mov
sbb
cmp
mov
lahf
je
xchg
cmp
es
insl
pop
lea
mov
int3
ljmp
mov
sbb
or
iretw
cmpsl
movb
out
ret
xor
xor
out
mov
cmp
cmp
lret
fnstsw
jbe
pop
lods
lods
adc
std
cmp
add
pop
ljmp
pop
mov
shll
lods
add
lea
ja
xchg
pushf
jne
jno
arpl
and
sti
insl
add
fistpll
inc
scas
scas
pop
lock
jo
jl
ss
scas
jle
int
scas
mov
notl
lret
fcoms
push
push
stos
rcrl
or
mov
or
repnz
cmp
add
inc
imull
bound
int3
jle
mov
fldcw
xor
shr
jns
sbb
jecxz,pn
or
das
int
add
cltd
or
xchg
pop
test
pop
iret
sbb
push
addr16
out
dec
push
push
cmpsl
cmp
daa
mov
fwait
inc
bound
fisubrs
mov
mov
pusha
fistpl
mov
xor
mov
mov
cltd
mov
cmp
push
and
cmp
push
cmp
lds
lock
sbb
lret
in
in
sbb
mov
mov
imul
shrb
test
mul
shll
adc
push
fs
imul
mov
mov
xchg
in
xchg
lcall
ja
add
mov
xchg
mov
insl
inc
sbb
mov
push
popf
jo
xchg
and
mov
jae
and
inc
cwtl
push
mov
movsl
sbb
mov
mov
xor
cwtl
flds
outsl
add
imul
hlt
mov
xchg
movsl
pop
pop
pop
cwtl
call
jo
daa
xor
pop
cmc
push
pop
or
push
cwtl
std
lods
pop
lock
loope
cmp
xor
testl
xchg
testl
stos
aad
mov
dec
shll
push
das
cmp
insb
lods
adc
subb
clc
sbb
jmp
push
mov
adc
adc
sahf
sub
jae
test
mov
ret
in
xchg
mov
lea
jmp
out
add
cmpsb
bound
add
fwait
add
xchg
xor
mov
lock
repnz
dec
imul
jl
stos
adc
add
adc
cmc
shll
mov
pop
pop
out
pop
call
push
rol
mov
sbb
mov
stc
outsl
test
xor
mov
cmp
xchg
aam
clc
fisttpll
out
mov
inc
lock
or
out
or
inc
into
mov
xor
pushf
int3
and
add
aad
test
xor
cmp
dec
jecxz
bound
into
lods
pop
xchg
in
pop
out
mov
jb
mov
or
rcrb
cmpsl
movsb
imul
add
out
popf
les
movsl
idivl
cmp
mov
dec
pop
gs
leave
inc
out
pusha
loop
out
xchg
add
sahf
push
sti
sbb
dec
dec
loop
ud2
daa
cs
pop
and
clc
aas
xchg
inc
call
jge
cmp
lods
es
ficoms
mov
outsb
test
stos
dec
mov
lea
adc
rorb
aas
mov
adc
fbld
inc
sbb
bound
pop
dec
pop
pop
cmp
rclb
rorb
mov
aam
leave
jb
stos
or
inc
and
inc
bnd
sub
jp
push
js
adc
aam
mov
outsb
fidivl
sbb
in
mov
xchg
or
push
pop
pop
andl
hlt
test
push
xlat
xor
jo
jae
sbb
addr16
not
hlt
pushl
cmp
xor
jne
aam
test
dec
pop
lcall
inc
cmp
mov
xchg
shll
enter
mov
ja
jns
addr16
in
pushf
push
cmp
push
data16
jb
dec
mov
dec
or
rcll
mov
pop
inc
xchg
mov
xor
cmp
icebp
pusha
lods
mov
ret
lds
dec
pop
shrb
imul
pop
adc
and
mov
fimull
mov
stos
xchg
jns
div
fistps
jbe
enter
or
stc
in
popf
fs
sbbl
lea
repnz
arpl
cwtl
mov
pop
inc
fldt
rorl
scas
leave
adc
jns
and
shr
adc
add
aad
xchg
out
out
push
xor
mov
lretw
inc
inc
push
cmpsb
mov
xchg
add
les
adc
pop
and
in
js
inc
lods
rclb
pop
js
fistpl
dec
pop
fmul
scas
cli
inc
int
pop
roll
enter
adc
sbb
xor
xor
and
test
or
push
das
mov
loop
sub
adc
data16
add
arpl
xchg
pusha
dec
push
jns
mov
sar
and
cmpb
orb
fstpt
in
sub
xor
add
push
ss
dec
mov
push
loopne
mov
xorl
pop
sbb
xchg
push
xchg
push
sbb
pop
lods
ror
pop
dec
cmpsb
dec
mov
testl
pop
push
call
stos
jg
fnstsw
ret
outsb
sub
push
jle
dec
mov
shl
or
stos
jno
faddl
aad
repz
add
xor
jmp
out
push
pusha
icebp
arpl
int
arpl
jge
ds
dec
mov
inc
and
les
cmp
sub
push
cwtl
js
out
imul
and
pop
mov
or
gs
mov
inc
mov
mov
lret
outsb
sbb
dec
iret
fwait
cmc
sub
pop
daa
jl
mov
mov
push
js
enter
in
jnp
xor
jns
stos
cwtl
out
aad
adc
data16
cwtl
mov
jmp
stc
pushw
mov
xchg
mov
int3
nop
inc
inc
mov
outsb
nop
in
push
mov
daa
sti
sub
mov
inc
xchg
out
inc
popf
mov
sub
mov
or
mov
mov
ljmp
push
insb
stos
push
mov
aam
in
inc
push
sahf
dec
mov
jne
push
jge
stos
fiaddl
jne
inc
js
pop
insl
pop
lock
ss
imul
jp
icebp
sub
xor
inc
adcb
andb
jno
mov
fadds
inc
push
xchg
jne
inc
hlt
jp
push
rcrl
push
xchg
pop
stos
cmc
xor
into
xchg
movsl
addr16
js
test
lcall
push
data16
mov
push
test
aaa
xlat
cs
adc
push
sahf
sbb
aas
xchg
push
dec
bound
scas
mov
mov
xchg
in
cmc
cmp
and
stc
mov
mov
xor
in
aaa
mov
lea
pop
pop
out
test
ss
shlb
mov
pushf
insb
push
stos
das
out
ret
jecxz
push
incb
mov
and
inc
push
dec
lret
enter
insb
orb
lahf
mov
sub
int3
push
ret
scas
test
inc
dec
daa
dec
rcl
jmp
pop
scas
fistpl
fisubs
cmc
movsl
inc
xor
and
out
fcomps
or
mov
jmp
shl
sbb
mov
sbb
add
aaa
adcb
mov
sar
or
sbb
gs
cmp
pop
mov
rorl
daa
mov
pop
pushf
cmp
sti
jp
clc
adc
or
adc
adc
mov
push
jle
outsb
adc
inc
fildl
in
dec
xchg
loope
pop
add
or
test
inc
in
je
rcrl
and
int3
jae
jnp
in
xor
loope
sub
andb
mov
jo
arpl
sti
add
popl
fmuls
out
mov
mov
xchg
sbb
push
sbb
and
sub
jmp
sqrtps
inc
xor
xchg
mov
push
imul
xchg
or
das
leave
mov
or
enter
mov
repnz
test
jbe
cld
inc
sbb
mov
psraw
push
movb
loop
pop
adc
push
je
test
mov
in
test
jb
es
in
xorb
ja
push
xchg
les
call
bound
rorl
sti
add
clc
push
xchg
pop
fsubs
lret
cs
aas
fs
in
subb
xor
notb
mov
lret
andl
and
mov
mov
jecxz
inc
cmp
mov
mov
jno
dec
fisubl
ss
mov
or
movsl
mov
add
leave
filds
mov
rcrb
inc
dec
sub
add
jo
mov
jo
shlb
jle
pop
stc
jno
mov
fsubrl
negl
push
xlat
sbb
stos
lock
pop
stos
xchg
xchg
in
lds
cmp
or
call
xor
cmp
cmp
mov
pop
add
lcall
push
movsb
and
push
in
xor
out
cmp
cmp
add
mov
sbb
mov
test
adc
dec
mov
and
xchg
jne
int
int
cmpsb
lods
push
repz
sub
mov
xlat
adc
lret
insb
lret
out
mov
shlb
pusha
mov
ret
jge
push
sbb
pop
in
sbb
movb
push
in
rcrb
leave
test
or
inc
les
fistps
fs
jmp
xchg
sbb
sub
popf
rclb
rcrb
jo
mov
mov
movsb
mov
and
adc
outsl
push
sbb
adc
ret
shlb
movsb
or
adc
add
mov
sbb
push
jno
inc
test
dec
pop
aaa
js
sbb
imul
adc
arpl
enter
xchg
sub
ja
test
rsqrtps
xor
int3
and
push
dec
iret
out
fstpt
or
push
and
cmpsl
cmp
jge
rolb
int
xor
jle
pop
mov
outsl
lret
imul
mov
mov
daa
inc
mov
push
sub
mov
and
mov
out
adc
nop
add
adc
fiaddl
xor
mov
mov
fdivrs
movsl
cmc
movsb
mov
mov
bound
lret
sbb
mov
xor
pop
aam
icebp
sbb
add
incb
jb
jnp
clc
add
adc
pop
and
inc
daa
aaa
repnz
sbb
cmp
nop
xchg
push
pop
fldcw
xor
inc
add
cmc
push
hlt
addr16
push
jbe
mov
inc
add
jae
fs
call
ja
cmc
jmp
out
cld
fisttpl
rcll
and
mov
jecxz
fsubr
jno
xor
xor
push
int3
push
inc
pop
cmp
push
mov
imul
call
pop
mov
mov
add
clc
mov
mov
lods
sub
call
push
cltd
push
rorb
xchg
je
inc
lea
xchg
mov
inc
leave
test
dec
jnp
mov
jp
fisubrl
scas
into
jns
out
and
and
xorb
insb
jne
mov
clc
push
test
lcall
add
push
xchg
scas
pushf
push
pusha
daa
mov
adc
fsubr
xchg
in
adc
arpl
ljmp
filds
cmpsb
sbb
sahf
ret
aad
scas
arpl
les
cltd
cmp
inc
mov
inc
adc
inc
je
stc
lods
pop
ret
stos
loope
mov
cmp
sti
push
fistl
cmp
cmpsb
or
clc
in
push
sbb
pop
mov
pop
jb
pmuludq
scas
pop
mov
inc
mov
mov
jb
adc
push
lock
jp
std
mov
data16
repnz
sbb
ficoms
adc
pause
xor
mov
jno
loopne
push
adc
sbb
sbb
xor
sub
or
inc
push
inc
roll
in
icebp
adc
or
pop
repnz
xor
jl
lock
xchg
mov
stc
and
inc
pop
mov
pop
fdivrs
cmpl
pop
mov
adc
loope
popa
sbb
out
and
pop
sahf
sbb
jl
add
push
lods
js
dec
subl
ss
cmp
ret
sbb
mov
mov
int3
inc
pop
or
and
imul
push
fadds
repnz
in
pop
cmp
mov
mov
fcom
mov
jmp
inc
jo
inc
push
and
mov
stos
icebp
xchg
and
jno
mov
pushf
stos
push
pushf
push
bound
and
add
cmp
jns
shl
and
pop
data16
cld
pop
out
mov
xchg
les
or
out
rcll
stc
movsl
ljmp
cmpb
jp
mov
out
xor
pusha
pusha
push
stc
and
mov
add
pushf
jno
ret
cmp
repz
xor
xchg
imul
or
or
sbb
inc
inc
jge
mov
adc
fiadds
fistpl
mov
adc
cmc
sub
pop
add
jae
cmp
imul
and
push
pop
sbb
push
in
inc
or
mov
dec
das
and
notb
sbb
jg
xor
ja
icebp
adc
aas
fnsave
xchg
movsl
jge
pop
lea
clc
adc
popa
orb
xchg
stos
rcll
cmpb
add
das
das
inc
xchg
cmp
int3
or
test
add
mov
and
aas
mov
mov
pop
xchg
adc
insl
mov
xchg
pop
push
fsts
xlat
xchg
or
pop
test
sbb
push
mov
pop
test
push
repz
insl
mov
sbb
xchg
push
dec
or
ljmp
pop
push
sub
lock
sti
fists
fbld
push
jb
jle
imul
adcb
scas
pusha
push
loope
push
adc
sbb
pop
inc
mov
nop
outsb
fs
leave
mov
fsubs
fnstcw
push
jns
sub
or
pop
inc
scas
xchg
adc
xchg
icebp
out
mov
aam
sub
cld
cmpsb
es
push
push
lcall
push
daa
or
mov
daa
push
jne
sub
test
ss
clc
fcmovbe
xchg
add
out
pop
gs
sbb
in
imul
andl
pushl
test
inc
out
inc
xchg
xchg
pop
pop
outsl
mov
out
loop
cltd
test
inc
lods
lret
adc
mov
and
xchg
gs
popa
shlb
fwait
aam
pop
mov
aaa
or
inc
push
mov
xor
push
and
rcrl
inc
add
mov
pop
xchg
sub
push
sub
cmp
hlt
repz
cli
and
mov
mov
aad
jno
loopne
scas
outsb
stos
jns
ljmp
pop
cmp
hlt
das
popa
jbe
cltd
adc
cmpsl
add
cli
or
movsb
ret
xchg
lods
jmp
sub
mov
stc
stos
lods
xor
in
fwait
cwtl
add
ja
dec
push
gs
lahf
pop
jecxz
daa
mov
int
pop
es
in
cmp
mov
push
xchg
cmp
xchg
and
push
ret
cmp
loop
cmp
or
xor
fisubrl
fsubrl
xchg
cmpsb
fnstcw
inc
adc
dec
inc
sbb
js
outsl
mov
lahf
xchg
xor
cmp
adc
xor
add
je
clc
aas
sbb
out
rorl
outsb
jge
das
pop
mov
mov
lock
pop
cmp
imul
push
jg
clc
mov
and
out
mov
jge
aas
push
inc
shrl
mov
pop
add
mov
xor
lds
decl
lods
push
ret
cmp
jne
xchg
jp
outsl
xor
shrb
jae
pop
push
jne
mov
add
call
mov
sub
in
xchg
push
jb
stos
scas
cmc
into
mov
ds
cs
mov
clc
fs
inc
jl
into
sub
lahf
fwait
sub
popf
or
imul
movb
jecxz
jmp
jp
sub
push
mov
adc
mov
ret
or
or
mov
pop
pop
xor
pop
push
sub
and
adc
jns
and
push
fiadds
inc
pop
xlat
lret
mulb
adcb
insb
pushf
add
movsl
pop
mov
daa
and
je
dec
xor
pusha
fsubs
or
mov
rcl
push
lods
pop
loopne
jle
lods
jae
aaa
ds
cmpsl
sub
adc
adcb
repz
rorb
ss
popa
jl
test
xchg
sub
pop
cmp
lcall
push
fwait
ret
test
fistpl
xchg
xchg
push
sub
insl
adc
push
jle
aad
xchg
pushf
aaa
cwtl
inc
inc
or
lea
fwait
or
push
aam
stos
fmul
mov
mov
pop
cmp
cmpsb
sub
in
push
out
xor
xchg
mov
or
lock
cmp
or
dec
adc
sub
popa
lods
cwtl
push
rorb
icebp
je
sub
lea
mov
mov
xor
mov
leave
sub
push
leave
int
inc
das
cmc
xchg
jmp
cltd
mov
xchg
pop
push
cmovbe
repnz
adc
out
mov
mov
pop
cmp
pop
push
xchg
add
jae
or
lock
push
mulb
mov
xor
and
into
or
gs
xchg
subl
add
pop
push
shrl
pop
cmpb
mov
cltd
xchg
push
pop
add
les
data16
adc
lahf
outsb
xchg
cmpsl
inc
pop
out
jns
adc
fistpl
insl
shrb
fs
insb
inc
ficoms
sbb
nop
lcall
xor
adc
xor
lods
imul
inc
mov
ds
rcrl
push
test
and
xor
and
mov
mov
nop
cmp
xchg
aas
fistps
cs
jae
jns
add
pop
jno
aas
xor
jnp
xchg
inc
add
and
rclb
popf
mov
sahf
clc
inc
das
xchg
add
stos
rclb
and
leave
cmpl
inc
adc
and
test
or
dec
push
mov
lods
adc
xchg
xchg
and
mov
sarl
inc
mov
pop
sub
lret
add
mov
rolb
xchg
or
popa
notl
pop
and
mov
mov
shll
hlt
pop
ret
xchg
or
sar
pop
ds
mov
lea
in
add
sub
cmp
fsubrs
sub
jnp
mov
stos
insb
jo
sbb
cmp
jnp
mov
and
test
mov
xor
push
dec
pop
aas
movsl
pusha
dec
repz
and
mov
xor
jae
push
mull
cmp
push
arpl
or
dec
loope
rcrl
push
jns
dec
mov
shr
or
add
je
sub
cmp
xchg
inc
pushf
aas
filds
loopne
aaa
cmpsb
shlb
inc
repnz
xchg
push
sbb
imul
sub
lret
push
push
pop
or
jle
add
arpl
xchg
movsb
cltd
mov
int
sbb
xor
cltd
sahf
ret
xchg
jl
jne
mov
in
mov
jge
addb
les
dec
rcr
cwtl
lret
push
push
loopne
mov
lock
stc
xlat
and
xchg
int
jmp
fsubl
pop
out
mov
sbb
cmp
xchg
jae
xor
jp
insb
dec
xor
pop
jnp
imul
pop
inc
mov
jo
arpl
fsubrs
sti
lods
push
mov
xchg
ja
dec
sbb
cld
sbb
dec
inc
sbb
or
out
push
imul
std
dec
cmpsb
sub
aad
jp
out
lock
xchg
push
mov
cli
sub
insl
mov
mov
cltd
mov
sub
idivl
xchg
cmp
add
fisttpll
mov
popaw
jecxz
addr16
jne
inc
xchg
out
xchg
add
xor
dec
sub
stos
nop
das
repnz
pop
cmp
mov
loopne
xchg
or
ss
in
cli
xchg
mov
fs
push
repz
leave
jmp
cmc
add
push
sbb
aam
cmp
jns
mov
or
nop
sub
or
leave
stc
outsb
pop
ficoml
pop
fldt
xchg
ljmp
in
nop
ds
outsb
and
add
shrl
icebp
jno
sahf
or
loope
loopne
xor
loope
cli
add
mov
adc
sti
sbb
lods
fwait
clc
xchg
mov
jg
jl
push
cld
call
fidivrl
mov
rcrb
push
aad
mov
shll
dec
cli
xor
push
addb
inc
sarb
push
jmp
sub
inc
call
jb
push
mov
fidivrs
insb
js,pn
lea
pushf
addr16
fwait
and
sub
xchg
pop
adc
shrb
aaa
push
mov
or
mov
pushf
sub
aad
push
std
mov
or
add
call
out
sub
fldcw
inc
imul
popl
push
out
xchg
into
mov
mov
and
mov
ds
js
icebp
jnp
arpl
lods
sar
and
xor
add
sahf
lahf
and
jae
xor
shll
pop
inc
sub
jae
sub
mov
mov
stos
mov
mov
in
sbb
or
jle
fmuls
aam
xchg
cmp
ljmp
neg
rcrb
and
fwait
sub
js
cmp
fdivr
xchg
aad
lcall
movsb
sub
xchg
mov
sub
mov
in
pop
test
movsb
jo
test
pushf
imul
out
pop
int
jno
sti
rorb
xchg
ljmp
adc
and
repz
xchg
mov
or
cmp
insl
xchg
out
or
push
enter
cmp
pusha
cmpsl
or
mov
ret
fildll
pop
es
jle
arpl
lcall
es
mov
jecxz
mov
dec
std
mov
loopne
xchg
jns
inc
stos
push
loope
incb
dec
out
in
mov
xchg
in
lock
pop
add
adc
cmovp
sub
inc
stc
nop
fs
push
aad
mov
sub
cli
fidivrs
loope
lods
jl
movsb
add
pop
cld
hlt
and
and
inc
fisttpll
jl
imul
and
arpl
aaa
jno
xchg
dec
xchg
clc
inc
mov
ret
test
fsub
jae
fcoml
jbe
mov
xchg
mov
jb
cmp
stos
adc
inc
jae
punpckhbw
fnstsw
outsb
std
rcll
pusha
sbb
xlat
adcb
mov
sub
fldl
sbb
mov
faddp
loopne
bound
mov
leave
mov
into
xor
sub
and
imul
adc
imul
pop
sub
mov
dec
sti
jns
sub
add
or
rcr
cld
and
sbb
out
das
mov
cs
cmp
cmc
xchg
mov
inc
lods
push
jle
ret
outsb
pusha
xchg
or
bound
xor
push
xchg
cwtl
into
cmp
mov
pop
in
cmpsb
pop
xchg
xchg
outsb
dec
mov
stos
in
add
inc
cmp
loop
shll
dec
cmp
sbb
inc
xchg
repnz
adc
jl
ss
mov
imul
mov
imul
in
std
test
arpl
or
lods
xorb
xchg
sbb
xor
dec
xchg
and
sbb
lret
aad
shrb
das
adcb
inc
sub
bound
call
shr
stos
dec
cli
les
addb
dec
stos
add
push
or
stos
push
cltd
mov
push
ja
je
loope
test
mov
ja
cmp
inc
jg
cmp
mov
add
inc
pop
nop
sbb
xchg
adc
lahf
push
pushf
xchg
stos
lret
push
or
and
push
les
fcmovbe
dec
in
sbb
xor
cmp
in
fbstp
aaa
xchg
jb
or
imul
jne
mov
sub
push
jae
mov
cs
mov
mov
out
clc
inc
push
in
cmp
aaa
mov
stos
push
roll
pop
loope
imul
sbb
mov
das
mov
movsl
jb
pop
dec
int3
and
mov
pop
and
pop
cs
mov
xor
sbb
aaa
mov
out
dec
mov
mov
cmp
psubq
pop
rcrb
outsl
in
add
jg
jmp
cmc
addr16
rclb
repnz
mov
pop
in
push
rclb
cmp
and
popa
int
cmpl
gs
pop
sahf
push
and
nop
shrb
cmp
mov
dec
fcomps
pusha
sub
roll
xchg
and
scas
or
mov
mov
mov
fmul
adc
push
stc
add
fimuls
or
xchg
and
fistps
xor
incb
dec
pushf
ja
dec
rorb
pop
jmp
outsl
adc
lods
jo
jb
ret
fsubl
outsb
std
or
pop
jbe
xchg
mov
enter
push
sbb
cs
mov
jl
fs
pop
mov
lret
fidivrl
pop
pop
jp
incb
push
bound
pusha
popa
in
mov
mov
pop
lret
out
push
shrb
pusha
jbe
pop
mov
xlat
cmp
pop
pop
fdivrl
xchg
xchg
inc
and
loopne
test
xchg
xor
das
mov
lahf
cli
out
or
jnp
scas
jns
xchg
push
mov
pop
dec
adc
adc
in
in
mov
data16
or
dec
pop
mov
gs
fsubrs
fidivl
ljmp
mov
and
mov
xor
cmp
jmp
dec
xchg
leave
xor
fs
sti
push
cltd
adc
loopew
fisubrl
subl
cld
loop
mov
insl
adc
adc
sub
leave
push
sub
push
push
data16
data16
enter
movsb
jecxz
cmp
fdivs
lds
xlat
int
aaa
loop
jg
adc
out
dec
xchg
mov
fidivrl
push
jne
inc
sbb
cmpsb
mov
mov
jbe
sbb
push
popf
sarb
jp
or
ss
lahf
sbb
fdivs
cli
fdivl
mov
jbe
xor
stos
push
xchg
pop
shrb
sub
sub
mov
xorl
arpl
inc
sub
push
sbb
fisubs
stc
into
out
outsb
iret
inc
ret
sub
repz
dec
pop
mov
in
xchg
add
sub
jno
inc
ret
loope
pop
fisubrs
sub
psrad
icebp
test
mov
xchg
xchg
mov
dec
loopne
in
and
or
or
pushl
aaa
insl
std
inc
xor
pop
outsl
in
adc
cmp
xchg
mov
sbb
inc
fcmovb
mov
inc
fdivrl
je
les
rsm
add
dec
xor
xchg
fwait
and
xchg
repz
adc
xchg
aas
and
add
push
mov
inc
in
push
sbb
mov
inc
add
dec
mov
cmpsb
fcoml
mov
js
loope
jle
add
dec
test
clc
sbb
cmp
xchg
or
mov
push
adc
das
inc
dec
leave
test
cmp
jecxz
pop
mov
es
shlb
lret
sbb
pop
push
xor
call
insl
ret
push
sti
int
mov
or
inc
dec
aas
inc
cmp
mov
adc
rcll
xor
nop
in
daa
adc
mov
roll
adc
mov
mov
and
xlat
mov
out
cmpsb
std
or
pop
pop
dec
and
sbb
fildll
push
stc
pop
dec
mov
sbb
push
adc
insb
loopne
rolb
pop
cmp
xchg
popa
lcall
js
push
stos
pop
sbb
lods
divb
push
imul
xchg
push
lea
roll
add
pop
jg
outsb
xor
cwtl
mov
jns
movsl
jne
arpl
lahf
std
fistpll
sbb
repz
outsl
popf
xor
adc
cwtl
mov
xor
repz
aad
add
test
sti
insb
adc
push
pop
sbb
sbb
out
sub
mov
add
gs
xrelease
pop
push
testl
jo
mov
subl
roll
dec
cmp
ds
sub
fnstsw
mov
mov
ljmp
push
movsl
es
pop
pop
pop
pop
cmpsl
mov
out
in
xchg
or
push
xor
push
cs
int
inc
scas
cmc
and
push
pop
cli
loope
hlt
jp
daa
mov
mov
arpl
pop
mov
mov
mov
lcall
sub
loop
lret
lahf
cmp
adc
cmp
and
in
js
mov
fldl
mov
push
jns
push
push
push
or
or
sahf
das
dec
jns
jns
push
mov
xor
add
dec
inc
ja
into
mov
sti
fildll
mov
mov
enter
pusha
rcrl
out
in
aas
sub
sub
pop
test
repz
imul
fldenv
cmp
add
cmp
jns
adc
aam
adc
insb
rcrb
mov
or
pushl
cmp
push
mov
stos
rolb
cltd
sub
mov
inc
sub
out
std
xor
mov
inc
mov
sub
push
sbb
aas
mov
dec
aaa
mov
ret
cmp
lret
fsubrs
adc
enter
xchg
pop
fldenv
out
jo
adc
sub
es
into
xchg
mov
add
test
xorb
into
cmp
ror
push
leave
sbb
jl
into
xor
mov
and
out
aaa
out
xchg
lods
mulps
icebp
fsubr
mov
ficompl
movsb
std
or
inc
push
mov
inc
xor
pop
cltd
aad
push
js
aas
dec
into
push
imul
call
decb
sbb
sti
lods
ret
cli
test
cmpsl
mov
xchg
iret
and
loopne
out
rcll
adc
mov
inc
xor
mov
bound
push
adc
into
pop
cmp
js
cmp
in
je
mov
pop
jecxz
jmp
out
aaa
je
push
lret
repnz
mov
sub
or
pusha
lahf
jno
jl
and
dec
in
jno
leave
ror
loope
test
mov
stos
loop
adc
jp
popf
fs
push
cmp
pop
cvtps2pd
pop
adc
hlt
mov
mov
mov
push
insb
mov
out
xorl
jle
outsb
cvtdq2ps
in
pop
xchg
pop
push
ds
daa
adc
out
lds
jge
movhps
fs
add
or
fimull
mov
int
jmp
lcall
adc
xchg
and
mov
insl
sbb
push
lea
out
lods
test
sub
or
jl
stc
jno
es
mov
push
shll
or
shl
ret
mov
add
jmp
xor
jae
pop
in
dec
adc
xor
jbe
rcrl
inc
jmp
movsl
mov
shrl
sarl
dec
inc
inc
pushf
stos
int3
xor
inc
arpl
fs
mov
scas
pop
jp
fisttpll
xor
dec
push
adc
add
push
jmp
jbe
ja
or
or
dec
pushf
cli
repnz
and
push
sbb
test
out
call
cwtl
fucomi
out
out
popf
fcompl
daa
mov
mov
sti
enter
cmp
shlb
lcall
push
jle
inc
pop
xor
aam
leave
mov
sbb
lock
cmpsb
xlat
jle
gs
stos
movsl
adc
mov
cmp
cmpsl
xlat
mov
sub
or
mov
mov
andl
xchg
or
pop
mov
ja
jb
in
jl
xchg
pop
lahf
xchg
icebp
add
pop
xor
out
mov
imul
in
inc
repnz
cmp
adc
add
dec
adc
movsb
cmp
pop
mov
adc
jo
test
sub
mov
jmp
cmp
push
jg
es
inc
arpl
stc
or
mov
jb
xchg
sub
inc
adc
sti
jl
dec
fisubrl
add
shll
xor
aaa
jl
lock
and
push
jo
mov
ja
push
movsl
xchg
xchg
add
shrb
ja
mov
xchg
cmpsl
inc
insl
cmpsb
stos
pop
add
out
inc
lods
out
jmp
xor
or
fisttpll
mov
sub
into
addr16
xlat
sbb
fisttps
loop
mov
jmp
xchg
cli
jne
frstor
pop
insb
xchg
and
cvtps2pi
mov
popa
pop
in
rolb
iret
dec
mov
insl
push
xorl
push
cmp
lret
sub
cmpsl
stos
les
sbb
mov
loope,pn
dec
jbe
popf
mov
dec
and
loope
push
enter
outsb
mov
push
mov
mov
loope
sub
lea
lock
push
dec
lret
cmp
push
jae
fcoms
ret
lret
xchg
pop
and
sarl
pop
cs
pusha
xchg
cmpsb
mov
xchg
cmp
dec
in
jg
ds
push
fcoms
push
shll
les
lret
push
mov
mov
ljmp
mov
pop
adc
jp
or
daa
leave
pushf
push
ret
or
sbb
js
pop
and
rorl
inc
xor
jg
fists
in
into
xor
or
loop
xor
lahf
arpl
jge
dec
cmp
inc
out
ffreep
dec
inc
inc
pop
int3
mov
mov
lcall
pop
mov
adcb
shll
jb
sbb
dec
xor
xchg
xchg
adc
aas
push
inc
fwait
es
ss
mov
sub
mov
mov
inc
adc
jl
dec
lea
lahf
imul
pop
mov
push
mov
mov
out
jno
cmp
jg
and
psubsw
mov
and
cmp
dec
jg
int3
jbe
icebp
popa
in
subb
cmp
ds
insb
ficomps
xor
and
mov
js
cmp
mov
popf
insl
or
and
popa
clc
fisubl
sahf
lahf
insb
inc
imul
stc
into
das
xor
mov
loope
popf
lods
shll
daa
cmp
cli
pop
xor
cmp
jns
sarb
into
xor
out
icebp
and
mov
adc
mov
data16
hlt
inc
and
repnz
jnp
mov
into
lock
imul
ret
pop
repnz
in
fadds
xor
push
pop
loope
inc
xor
pop
dec
add
mov
addr16
jp
call
push
aam
ror
add
inc
data16
jl
pop
mov
adc
enter
sub
or
call
adc
mov
jle
gs
insb
xchg
xchg
lock
test
push
iret
roll
test
bswap
xchg
and
es
or
cmp
and
jne
dec
push
xchg
add
je
jnp
in
inc
movsl
sub
sti
aas
cmp
jo
jbe
in
mov
jb
dec
xor
jmp
jge
cmpsl
push
push
mov
cld
pushf
mov
mov
cltd
fdivr
cwtl
push
pop
es
push
gs
mov
xchg
jbe
add
pushl
daa
ljmp
rcl
shl
cmp
dec
pusha
sub
push
outsb
inc
mov
and
andb
test
icebp
imul
or
fsubrs
dec
xor
jle
pop
shlb
mov
movsb
lahf
or
mov
inc
xchg
push
hlt
cld
repnz
push
add
and
and
jnp
rol
push
pop
sbbb
or
dec
jle
jae
ret
pop
ds
leave
std
subb
ds
mov
imul
mov
das
fildll
in
in
push
gs
adc
mov
movsl
cltd
sub
jnp
sub
mov
add
fisttpl
cwtl
int
repz
stc
and
aaa
mov
mov
sahf
das
adc
push
cmpsb
int
adc
cs
jge
mov
sti
ljmp
push
icebp
or
std
repnz
aas
or
inc
ljmp
mov
or
test
cmpsb
sbb
movsl
fdivr
xchg
sub
pop
jmp
lods
jge
mov
adc
into
out
jle
sub
pushf
fs
xor
loop
cmc
mov
mov
mov
mov
push
adc
sub
push
or
aaa
and
mov
xor
nop
pop
adc
mov
pop
mov
or
push
addr16
in
mov
sbbl
scas
pop
dec
or
add
shll
push
rcll
mov
mov
push
push
es
das
xor
xor
aad
roll
sub
les
insl
jne
stc
push
xchg
es
dec
jmp
mov
mov
xchg
mov
pushf
icebp
mov
repnz
adc
fs
nop
int3
sti
pushf
orb
out
loop
inc
cmp
bound
mov
pcmpeqw
imul
mov
fdiv
mov
ret
mov
popf
jo
mov
pop
in
add
xchg
jns
cmp
ret
out
xor
dec
fistpl
jns
movsl
cmp
xchg
mov
xchg
ljmp
scas
movsl
fnsave
mov
inc
push
scas
sti
add
clc
mov
rclb
mov
jle
data16
mov
addl
sahf
mov
and
mov
push
fists
ljmp
pop
cmpsb
mov
pop
push
mov
rolb
lds
mov
icebp
scas
out
mov
aas
or
mov
fstl
bound
xchg
test
push
fdivrs
or
inc
mov
and
push
ljmp
and
sub
mov
sub
ffree
xchg
in
ja
gs
cmpsb
hlt
xchg
dec
and
arpl
adc
hlt
leave
sbb
call
xor
pop
ret
cmpsb
adc
fsubl
arpl
dec
popf
and
ror
dec
inc
iret
push
sub
push
aas
and
pushf
int3
enter
inc
and
cmp
and
fsts
xchg
adc
int3
push
xor
dec
and
mov
int3
pop
xor
fcomp
inc
pop
pop
push
dec
pop
test
in
pop
sub
cli
pop
adc
xchg
loope
or
sti
lea
inc
dec
inc
rcl
lock
ret
pop
fistpl
jno
dec
jp
loopne
cmp
into
xchg
call
clc
mov
mov
add
pop
mov
mov
cli
sbb
imul
mov
mov
or
js
cmp
in
pusha
pop
push
mov
jmp
add
fimuls
cmp
sub
sarl
and
out
cmpsb
out
mov
xchg
lret
test
jp
or
jge
or
outsl
adc
repz
stc
scas
mov
ja
lret
pop
int
je
hlt
and
scas
call
pop
xchg
mov
push
jns
leave
lret
cwtl
xchg
mov
fwait
sbb
data16
adcb
shl
pop
pop
repnz
ret
rorb
popf
divb
cmpsb
sbb
arpl
out
jl
pushf
inc
sbb
push
negb
out
data16
lcall
xchg
std
and
inc
jecxz
popa
mov
dec
call
js
xchg
xchg
fsub
xlat
int
icebp
mov
cmp
out
fldcw
inc
mov
or
in
add
jge
rcl
jl
adc
push
sub
xchg
std
jns
int
and
lds
or
andb
jbe
repz
sub
cli
mov
loop
icebp
mov
and
movsl
aaa
test
xlat
aam
dec
pushf
dec
sub
xchg
lock
mov
fldcw
xlat
imul
pusha
pop
test
jp
mov
adc
fwait
ss
jbe
sub
mov
pop
sti
movsb
clc
mov
fcmovne
jb
jmp
xchg
pusha
pop
lds
push
out
stc
fcmovbe
cwtl
jmp
dec
or
and
ss
xchg
push
push
xlat
fisttpll
repnz
or
stc
dec
adc
pop
jecxz
ss
imul
push
les
push
xor
fisubrl
pop
sbb
data16
push
das
aam
lods
mov
cmpsl
outsb
hlt
mov
inc
shll
shrb
pusha
mov
lea
sub
sub
pop
xrelease
cld
cltd
xchg
push
jo
mov
lods
mov
pop
xlat
sub
push
scas
and
xlat
xchg
aad
ds
inc
push
pop
dec
mov
inc
sbb
fsubr
aaa
add
aas
pop
bound
dec
mov
push
fdivr
clc
mov
pop
int
int3
loop
cwtl
xor
jae
mov
ret
or
sbb
cld
jae
and
cmp
notl
mov
mov
and
xor
leave
inc
jo
adc
aas
dec
mov
jns
add
or
mov
bound
repnz
push
jmp
adc
and
lods
popa
in
stos
xchg
mov
xor
sub
stos
stos
out
lcall
dec
or
dec
sub
jnp
inc
jg
jmp
jns
stos
or
dec
or
push
xchg
pusha
push
in
mov
daa
clc
rclb
cwtl
xlat
mov
or
das
inc
test
pop
test
sub
or
lahf
jno
push
add
cld
mov
jg
int3
aam
sub
aad
sub
add
inc
pop
nop
push
inc
add
xor
mov
pop
in
ret
aam
repz
mov
adc
cmp
mov
je
sub
push
clc
movsb
mov
pop
xchg
in
mov
cltd
or
jecxz
adc
repz
inc
jmp
out
in
hlt
pop
loope
repnz
shrl
cmp
insl
lock
mov
fbld
movsb
enter
hlt
mov
xchg
aas
and
mov
and
hlt
js
adc
imul
mov
stos
ret
cld
xchg
mov
sahf
loop
dec
mov
out
and
push
aad
xor
push
cmp
mov
dec
mov
lcall
scas
imulb
pop
sbb
jle
loopne
lods
mov
sbb
dec
lods
xchg
repz
lock
jmp
xlat
test
repnz
push
pop
jnp
mov
and
adc
dec
jbe
cmp
mov
adc
cwtl
mov
push
les
hlt
add
das
in
lds
push
jecxz
xor
sub
dec
aas
and
and
sub
loop
addl
or
mov
jne
jbe
dec
inc
out
outsl
insl
or
test
jmp
loope
popa
jns
inc
jp
mov
sub
mov
cmp
sub
push
shll
fstpl
add
pop
dec
lahf
iret
fisttpll
test
xor
pop
shrl
cmp
xchg
cmp
scas
popf
mov
loop
test
mov
push
adc
and
in
mov
jae
jnp
repz
rcl
cmp
adc
jnp
test
jno
scas
nop
fcompl
cmovg
lret
mov
sbb
mov
sub
jp
sbb
xchg
sub
in
outsl
loop
jae
dec
loope
arpl
nop
imul
add
adc
iret
add
icebp
dec
pop
mov
loopne
out
sbb
neg
jbe
mov
xchg
daa
gs
dec
mov
jg
sub
rorb
xchg
inc
add
insl
jge
scas
inc
xor
test
push
pop
inc
dec
movsb
inc
pop
mov
sbb
dec
nop
sub
pusha
loopne
fsubrs
aad
dec
adcl
push
mov
cmpb
inc
push
aad
fwait
or
pop
imul
iret
dec
and
sbb
arpl
cmp
push
jno
adc
mov
xchg
pop
lods
shrl
addl
dec
cltd
cmc
push
das
add
ret
pop
scas
cmpb
xchg
mov
outsl
adcb
in
inc
adc
jno
pop
pop
fsubrs
and
jmp
push
push
fistps
or
test
loope
jecxz
add
loop
movsb
sbb
push
in
add
mov
push
cmpsl
xorb
jmp
cld
jl
addr16
mov
hlt
mov
enter
js
shl
test
mov
rorb
xchg
mov
sti
aam
mov
xor
in
xchg
xor
pop
out
aam
mov
sub
popf
adc
xor
jne
call
sub
sub
mov
dec
jle
jae
inc
push
or
mov
loop
out
and
out
cmc
push
mov
scas
std
clc
mov
adc
push
and
and
xchg
push
xchg
pop
sub
mov
sub
lods
mov
dec
adc
ljmp
ja
jg
lret
mov
out
xchg
into
in
sbb
push
mov
push
insb
push
in
sahf
jae
shrb
dec
sbb
rclb
mov
push
data16
rcl
bound
fsts
push
je
lahf
add
dec
divb
fistps
adc
sti
cld
and
call
mov
fiaddl
add
stos
test
scas
cs
mov
sub
add
ja
xor
lds
sar
pusha
testl
xor
dec
mov
ds
scas
adc
fnsave
daa
push
sbb
fcomp
mov
cmp
and
xor
mov
shll
mov
in
out
fldl
mov
hlt
pop
pop
sbb
enter
outsl
rorl
dec
add
mov
sub
xor
stos
pop
and
mov
std
or
inc
cmpsl
sub
mov
in
int
inc
loope
xor
mov
out
int3
dec
cmpxchg
lods
sub
lods
addr16
mov
icebp
sub
sub
pop
dec
sub
jns
loopne
xlat
cmp
adc
cs
pop
cs
or
mov
cmp
call
push
adcb
jnp
arpl
jo
push
out
and
mov
fs
xor
xchg
rolb
dec
sub
int
mov
sub
xchg
lods
pop
xor
ja
data16
pop
into
add
push
rol
mov
inc
jnp
jg
sub
daa
xchg
jae
xor
mov
lds
and
mov
rcrl
xor
movsb
cmp
jl
mov
sub
insl
movsb
mov
mov
or
shll
repz
push
mulb
xlat
jns
test
insl
push
je
out
and
es
mov
xor
movsl
fnstcw
je
cmpsb
mov
push
dec
adc
stos
clc
pop
jmp
pop
dec
jno
out
lret
cmp
xor
out
fsubrl
sbb
mov
loope
xor
jle
ds
mov
test
dec
sub
or
dec
mov
mov
sub
aam
push
lret
mov
jne
dec
popf
or
xchg
loopne
push
lock
push
pop
mov
aas
test
push
and
fimull
add
jns
cltd
ret
jecxz
lock
bound
addr16
and
cmp
cmpl
inc
loope
mov
fdivrp
and
mov
fmuls
icebp
out
and
xchg
dec
movsb
pop
xchg
in
add
outsb
bound
fcomps
adc
rolb
inc
mov
pop
das
and
daa
int
mov
inc
pushf
pop
shrl
clc
fs
sbb
dec
xchg
jae
sub
pop
sarl
aas
rclb
push
ss
xor
mov
xor
hlt
cmp
pop
jge
sbb
xor
xchg
dec
pusha
jmp
mov
mov
ljmp
leave
es
adc
movsb
mov
test
data16
jl
into
fcmovnu
xchg
xchg
push
jmp
mov
in
aas
push
lret
dec
push
xchg
xor
or
inc
adc
in
mov
ds
int3
cmp
out
arpl
fidivs
insl
fdiv
mov
sti
out
mov
je
add
lret
lret
jne
cld
push
ja
scas
sbb
jns
ljmp
loopne
arpl
in
fsubrs
ss
scas
xor
mov
sbb
andb
fistps
test
ret
push
ljmp
jnp
dec
mov
orl
mov
cltd
jge
sub
out
jne
and
cltd
push
jle
add
lcall
cmp
mov
movsb
in
push
jnp
mov
repz
jg
mov
pop
push
test
and
jle
js
pop
sahf
or
lds
bound
pop
and
enter
fnstenv
ja
sahf
nop
lcall
ds
mov
sub
pusha
cmpb
pop
insb
movl
movb
jp
mov
mov
movsb
cmovno
fisttps
and
sysenter
ret
pop
dec
mov
cltd
cmpsb
pushf
stos
push
adc
or
fdivrp
decb
stos
add
dec
test
or
xchg
cmc
mov
clc
inc
decl
inc
inc
in
les
repz
addb
stos
mov
call
mov
es
xor
outsb
out
aaa
adc
in
stc
mov
mov
cmpsl
inc
inc
gs
imul
ror
jbe
or
sahf
mov
test
loopne
adcb
jno
cmp
jmp
repz
lods
pop
cmpsl
mov
sbb
insl
ret
push
lods
cld
pop
and
sub
aas
mov
inc
insl
insl
add
inc
sbb
cli
out
dec
aaa
pop
pop
fwait
pusha
movsl
ret
mov
inc
scas
je
sub
fisttpll
add
xor
dec
js
mov
jns
aam
mov
dec
dec
xlat
lods
les
mov
mov
add
pusha
push
jge
dec
pextrw
xchg
in
xchg
mov
subl
xor
lock
pop
shl
nop
jns
das
clc
insb
push
sub
xlat
movsl
bnd
jae
popf
push
jp
pushf
je
mov
mov
jp
and
dec
sub
movsl
xor
fistpll
popa
lock
sarl
test
jp
aad
stos
adc
mov
test
sub
jbe
sbb
mov
dec
lcall
cmp
dec
daa
inc
sub
adc
mov
mov
xchg
leave
nop
sti
pop
nop
in
clc
fwait
adc
sub
cld
cld
sub
pop
test
outsl
jle
in
adc
cmc
add
icebp
aad
inc
in
jl
inc
cmp
mov
cld
bound
and
and
mov
and
adc
hlt
pop
test
insl
dec
popf
dec
loope
mov
xchg
cltd
add
push
push
xor
test
gs
inc
sbb
push
fmul
and
fistpll
mov
sub
andb
sub
sbb
push
xchg
xchg
loope
popa
outsl
int
xor
cmpsl
dec
stos
jb
push
pop
or
in
mov
push
jae
cmp
cmp
inc
pushf
inc
pushf
rorb
jnp
cmp
je
fldcw
inc
rcll
mov
test
lret
mov
mov
in
cmp
mov
loope
push
push
scas
jo
test
fisubl
dec
stc
lods
lds
insb
clc
sbb
ret
jge
xchg
jbe
dec
mov
adc
hlt
stc
xor
testb
jae
add
add
mov
arpl
arpl
inc
jmp
lret
inc
sub
push
in
mov
fildll
add
repz
aam
mov
add
jno
inc
add
mov
add
jbe
sbb
lcall
xchg
adc
fisttpl
pop
repz
ror
outsl
mov
pop
mov
lods
and
pusha
loope
cltd
jae
outsl
adc
cmpsb
jns
mov
sti
js
dec
xor
jns
push
jb
imul
push
cmp
fsubs
mov
dec
je
imul
dec
or
sub
sub
xor
std
push
repnz
adc
imul
in
push
xchg
test
jo
leave
and
xchg
pop
sti
in
leave
add
inc
sub
in
xchg
ljmp
fistps
icebp
inc
mov
add
mov
popf
jge
andl
pop
stc
add
push
dec
dec
push
mov
push
arpl
test
loop
cmp
or
loopne
sbb
or
call
add
push
adc
add
daa
movsb
cmpsb
push
loope
jbe
in
xchg
xor
dec
pop
mov
fsub
test
shlb
mov
icebp
pop
xor
movb
imul
add
jle
sbb
push
xor
jmp
xor
mov
cmp
pop
mov
cmp
mov
les
imul
sub
mov
xchg
aam
jno
dec
pushf
rorl
mov
add
inc
sub
jmp
movsl
rcr
and
cli
mov
test
inc
mov
rcr
or
xchg
cmp
jae
fimull
or
cmp
je
mov
inc
je
sbb
and
push
cmpl
fldcw
inc
arpl
jno
fsubrs
lock
and
shlb
or
jae
lock
ret
in
or
in
nop
scas
popf
xchg
ds
jo
out
mov
add
pop
jmp
jb
movsl
cmovae
out
scas
int3
adc
and
arpl
shlb
pop
insl
das
cmc
sarl
xchg
cmp
dec
mov
mov
data16
loope
cmpsb
and
ja
sbb
mov
into
push
aam
adc
pop
fadds
fwait
shl
shrl
push
mov
ss
das
addr16
das
je
add
mov
pop
and
idiv
fimull
push
cli
shrl
jecxz
pop
addr16
push
pop
stos
ja
xor
negl
or
inc
cmpsb
mov
ss
and
cmp
xchg
xor
cmp
hlt
cmp
out
or
fwait
ret
adc
push
adcb
inc
popa
es
in
fists
sub
out
inc
stc
dec
sar
fstpt
scas
inc
jmp
test
scas
movsl
jae
cmc
pop
ret
xlat
push
dec
mov
pop
dec
cmp
or
mov
mov
sbb
shll
ljmp
ja
xor
les
daa
je
push
ss
popa
cltd
sbb
ret
stc
inc
cmpsl
add
jle
cwtl
inc
or
je
cmc
ret
lret
cmc
daa
shr
xor
or
dec
cli
addl
push
in
test
fstpl
movsl
aas
pop
add
imull
xchg
mov
or
aad
or
jle
sarl
xchg
cwtl
arpl
stos
fisubl
mov
loop
push
mov
ljmp
add
push
add
add
test
iret
and
cltd
jge
arpl
or
cmp
addr16
outsb
cltd
cmp
jae
enter
lret
nop
jg
xor
cld
mov
and
ds
test
xor
fnstenv
aaa
outsl
insb
test
dec
lock
jb
or
mov
out
rcll
cmpsl
pushf
loop
leave
pusha
mov
push
daa
cmp
fmull
inc
gs
ret
out
add
cmp
or
fnstenv
aad
out
mov
es
fldcw
pop
mov
popa
clc
scas
repnz
in
xchg
xchg
out
js
sahf
je
xor
sub
cmc
xlat
push
test
fisttps
push
fwait
or
jne
jmp
lea
loope
leave
xchg
cltd
or
fdivr
mov
cltd
push
mov
call
cmpsb
stos
test
icebp
push
enter
push
clc
enter
push
das
or
imul
mov
sbb
insl
movsl
adc
loopne
icebp
add
mov
ret
insb
xor
lds
loop
sub
push
roll
sahf
jbe
mov
xor
jp
jbe
fldl
cld
movsb
outsl
sbb
mov
enter
cmpsl
gs
jge
roll
ret
aaa
cmpsl
jge
mov
jnp
repz
jbe
lock
out
pop
adc
jno
mov
pop
mov
and
imul
or
push
gs
jo
andl
sbb
add
cld
mov
ficoms
pushf
loopne
ja
adc
lcall
stc
sub
mov
mov
jle
sbb
lahf
sbb
pushw
test
addr16
ficomps
jns
or
testb
aas
mov
repz
jb
mov
push
ljmp
or
lret
in
lea
mov
add
scas
xchg
mov
repz
xchg
test
repz
ss
lods
js
xlat
daa
data16
movsl
test
sti
subl
sub
add
rol
add
iret
pop
pop
mov
cltd
flds
pop
fsts
lea
adc
in
cltd
icebp
mov
imul
fcoms
cmpsb
mov
dec
cmpsl
add
fs
mov
push
add
int3
pop
lahf
inc
sti
movsb
mov
bound
cmp
jl
ror
cmp
int
outsb
nop
neg
add
aaa
sbb
fcmovbe
dec
jo
loope
aam
xor
mov
sub
sbb
add
lods
and
inc
push
add
cli
loopne
gs
pop
rorl
mov
cmp
mov
or
cmp
jne
fwait
sbb
addr16
mov
xchg
mov
sub
or
notb
inc
bound
sbb
xor
mov
aas
jb
jl
lahf
dec
arpl
xor
mov
pop
sbbb
add
add
dec
dec
sbb
test
xchg
jne
pop
and
adc
push
mov
jge
loope
and
and
dec
and
push
movsb
call
and
sbb
nop
jmp
pop
stc
jge
push
loopne
xchg
shl
or
sub
daa
std
pop
movsb
dec
pop
loope
mov
xor
pop
loope
rorb
loop
inc
in
inc
int
sub
or
mov
sub
push
pop
mov
push
sub
out
mov
xchg
push
dec
add
and
jns
adc
fdivs
ret
mov
sub
push
adc
out
int3
fldenv
rcrl
iret
in
shl
outsb
mov
mov
mov
cmp
pop
push
lods
pushf
ret
push
jp
clc
pop
inc
repz
inc
xor
push
cld
push
mov
aas
imul
inc
in
outsl
mov
loope
add
and
mov
jae
pop
add
push
js
pop
scas
pop
mov
fidivl
gs
pop
popa
dec
cmc
push
jge
add
push
mov
dec
mov
push
loope
adc
or
inc
fstpl
pop
xor
mov
pop
mov
mov
bound
and
mov
flds
sub
popa
insl
xchg
imul
sub
pop
sahf
mov
mov
mov
mov
inc
clc
mov
dec
sbb
xor
sbb
adc
ljmp
loope
jbe
or
rolb
push
loope
rorb
ljmp
inc
sub
sbb
shlb
jo
dec
lcall
insl
bound
into
jp
add
popf
lahf
and
mov
outsb
bnd
or
push
icebp
dec
enter
dec
pop
leave
sub
add
repnz
sbbl
mov
repz
mov
clc
imul
mov
xor
mov
in
inc
jns
dec
add
jecxz
out
adcb
cmpsl
xor
cltd
mov
push
out
dec
add
dec
insl
loopne
push
stos
pushf
pop
add
nop
xor
xor
sti
push
pop
fnsave
jl
cld
mov
sub
adc
or
or
mov
mov
add
sbb
mov
jbe
mov
ficoms
and
jae
es
sub
cmp
repnz
push
pushf
xchg
daa
cltd
repz
xor
mov
js
xlat
cmp
hlt
cmp
cmp
insl
out
sbb
andb
leave
dec
xor
xsha1
cmpsb
dec
inc
hlt
inc
push
loop
mov
lea
js
pop
pop
mov
xlat
inc
ret
and
lahf
xchg
bound
in
dec
in
or
pop
scas
xchg
mov
insb
cwtl
xchg
sub
push
test
jl
push
mov
push
xor
pop
out
cwtl
jmp
stos
adcb
push
pusha
imul
lock
fmull
mulb
push
mov
jae
inc
jnp
xchg
ffreep
test
cmp
mov
mov
dec
loop
mov
sbb
fsubl
repz
sets
cmpsb
fwait
stos
jne
push
imul
js
sub
mov
push
orb
cld
lahf
add
repz
jno
movsl
mov
pop
push
pop
out
jle
sbb
mov
pop
push
repz
sub
repz
or
fwait
xor
add
and
fs
inc
mov
sub
and
add
pop
lea
sbb
hlt
icebp
push
fldenv
test
mov
lods
inc
inc
int3
mov
clc
loopne
jne
popa
daa
pop
ffree
cmp
aaa
mov
cmpsl
pop
adc
mov
mov
push
inc
mov
add
mov
jb
lock
iret
dec
nop
hlt
adc
dec
insl
and
loope
jl
sub
xor
push
dec
push
dec
jle
fwait
andb
sub
mov
sub
unpcklps
inc
or
cmp
jmp
mov
inc
push
test
mov
out
fcom
leave
out
mov
inc
outsb
push
sub
fiaddl
jnp
sbb
dec
insl
aad
sbb
dec
popf
into
add
pop
ja
data16
stos
jb
mov
sbb
and
ret
sbb
lock
sub
jne
in
sub
fbstp
push
pop
ds
fistps
xchg
repz
pop
push
jge
jmp
mov
gs
enter
pop
lret
in
sbbl
pop
pop
add
ds
inc
dec
subl
mov
jne
and
in
insl
ja
xchg
or
push
inc
add
outsb
mov
or
sub
or
dec
outsl
cld
cmp
in
dec
lcall
mov
insb
push
xchg
adc
std
aaa
pop
mov
repnz
xor
xor
sub
sub
xchg
mov
les
dec
pusha
movsb
out
mov
jmp
push
fnstenv
iret
adcl
cmc
in
sub
cmp
ror
cmp
movsl
add
fimull
lds
sub
fwait
repnz
sbb
scas
push
push
add
push
cs
or
sub
cmp
out
xchg
fisttpll
add
scas
test
popa
add
sahf
cmp
fdivrl
cltd
insb
lret
pop
xor
cwtl
lock
enter
and
sti
out
cmp
cmp
adc
addr16
xchg
xchg
push
sbb
ja
das
scas
call
enter
adc
sarl
movsb
sub
or
push
mov
pop
test
push
aaa
dec
jnp
push
mov
fucomi
push
sub
fcomps
fistl
stos
mov
test
push
insb
pop
push
pushf
stos
xchg
mov
gs
ss
jns
movsb
mov
mov
push
aas
dec
add
lcall
adc
pushf
mov
jecxz
dec
leave
rol
addl
cmc
repnz
pop
xchg
push
adc
cmc
inc
std
pop
mov
mov
lret
test
mov
data16
dec
mov
push
sub
adc
pop
and
or
lods
pop
movsb
add
add
in
arpl
popa
sub
arpl
fdivr
fcomps
adc
movsl
mov
cltd
jecxz
shrl
inc
pop
push
cmp
mov
mov
mov
popa
xor
mov
jecxz
dec
daa
adc
mov
aam
rcr
inc
inc
jne
arpl
fstl
mov
cli
leave
cmp
in
loop
and
inc
push
push
and
int3
push
loop
cmp
pop
xchg
aad
out
cmp
nop
mov
mov
sbb
or
xchg
ret
inc
sbb
mov
push
les
cld
dec
and
iret
movsb
out
inc
xchg
push
cltd
fucomi
das
push
xchg
ror
add
lods
fstpt
xchg
mov
decl
cmp
sbb
xchg
das
mov
aaa
cltd
aam
mov
cmp
dec
cmp
inc
jo
lret
or
sub
add
mov
xor
fwait
or
adcl
mov
in
pop
mov
mov
jae
ret
jecxz
add
gs
dec
ljmp
mov
es
pop
sbb
loop
pusha
call
mov
push
sub
pop
adc
dec
in
daa
sbb
adc
dec
dec
pop
sbb
icebp
repz
repz
jbe
lods
ret
out
push
notb
push
add
js
aam
sbb
cmpsb
repz
hlt
adc
cli
add
or
les
add
in
test
push
mov
mov
bound
lcall
scas
push
or
ret
clc
fsubrs
jno
clc
dec
adc
xchg
cmp
lock
lods
fnstsw
arpl
arpl
les
mov
push
pop
xchg
mov
xor
stc
mov
lock
mov
xor
mov
xlat
cmp
loop
and
jmp
mov
mov
jge
cmpsl
adc
scas
push
add
ja
and
pop
sbb
paddsb
mulb
mov
adc
jecxz
cli
mov
cmp
cmp
dec
out
repnz
xchg
fstps
mov
popf
cs
mov
inc
test
lea
lea
mov
inc
or
jmp
inc
aas
push
in
add
insl
cli
sbb
out
xor
in
in
xor
pop
mov
add
xlat
dec
pusha
call
sub
test
fisubl
push
aas
lea
cmp
jge
push
scas
push
cmc
mov
cs
enter
push
js
jbe
mov
and
fidivrs
arpl
jge
jge
add
cmp
ja
inc
clc
cltd
orb
jo
mov
cmp
stos
insb
or
loop
cmp
xor
sub
cmp
sarl
xor
movb
insl
scas
push
pop
add
fldenv
test
mov
sbb
cld
pop
cmp
les
gs
sbb
jecxz
lahf
or
jbe
jns
mov
sbb
xor
imul
xchg
add
clc
insb
jne
xor
mov
jmp
jge
mov
adc
pop
nop
mov
nop
cmp
lea
das
fstps
fistpl
cli
sbb
inc
jp
jp
xchg
and
or
repnz
mov
int3
ret
rcrb
lcall
aas
lods
cmc
sti
repz
mov
jae
sub
popf
arpl
psubw
jns
daa
dec
sub
jns
jno
cli
fcoms
cmpsl
xor
ret
jb
into
fwait
sbb
adc
test
jl
xchg
or
cmp
pop
movsl
mov
push
pop
mov
pop
jp
cltd
enter
sub
cmp
cmpsl
or
rcll
ss
adc
aaa
popf
int3
rcrb
and
xchg
aaa
jmp
insb
test
xchg
push
sub
mov
pop
pop
mov
mov
arpl
insb
dec
popa
jp
lret
mov
stos
and
and
sbb
rorl
add
cmovge
dec
loop
inc
out
orl
xchg
dec
add
push
data16
ret
in
sub
cmc
roll
je
stc
add
icebp
mov
sbb
icebp
sti
xchg
jle
lret
mov
lahf
addb
lds
push
or
insl
sub
xor
call
xchg
add
pop
xor
mov
push
push
and
add
or
adc
dec
ret
mov
jo,pn
jl
repnz
rcr
mov
bound
fldl2t
in
push
out
push
insl
fwait
in
push
mov
mov
xor
pop
pop
ds
popa
or
sbb
stc
jnp
fwait
cltd
pop
int
cmp
lds
movsl
jge
sbb
gs
push
fs
lods
jg
mov
in
push
jle
es
jbe
aas
mov
stos
push
imul
add
or
lods
lcall
pop
inc
xlat
orl
mov
jg
or
addr16
push
jp
iret
repnz
ror
cmp
mov
sub
xchg
jne
or
in
enter
lahf
into
cwtl
jns
push
mov
push
jle
push
or
xor
cmp
push
xor
lcall
iret
and
mov
cld
fisttpll
xchg
push
cmpsl
rclb
pop
add
lods
ljmp
insl
test
mov
dec
adc
or
jg
in
ret
sbb
sub
pop
sbb
lea
add
testl
test
pop
push
cltd
insl
aad
xlat
or
dec
xor
ficoms
jbe
stos
xchg
push
mov
lods
mov
movsl
cmp
push
or
lahf
sbb
enter
mov
and
lret
pop
gs
jg
push
lcall
sbb
cltd
aaa
mov
movsl
test
dec
mov
adc
sub
inc
shlb
or
call
iret
popf
clc
sbb
das
stos
pop
loopne
nop
sub
jmp
movsl
stos
movsl
cli
aaa
lods
pop
adc
je
dec
xor
lea
or
adc
pop
add
fucom
pop
movsb
int3
cmp
ja
popf
or
shrb
cmp
jp,pt
in
cmpsb
test
adc
push
js
pop
xor
adc
add
jne
xchg
mov
aam
jae
adc
sarb
shrb
les
pop
xchg
lahf
cld
stc
jp
lods
ja
sub
sbb
gs
pop
adc
fsubs
mov
gs
das
lahf
push
insb
xor
push
inc
xchg
sub
scas
cld
jmp
and
dec
icebp
sub
jmp
mov
daa
sub
fisttpl
loop
mov
xor
cmc
lret
inc
mov
ljmp
int3
test
aaa
gs
imul
pushf
addr16
stc
adc
imul
shrb
mov
inc
mov
adc
inc
icebp
cs
out
lea
shrl
mov
ljmp
pop
sbb
or
pop
sub
test
jno
aaa
add
test
jae
pusha
xchg
inc
add
or
rorl
pop
out
sub
inc
mov
sbb
cmpb
jp
sub
fwait
add
sar
add
push
add
iret
sbbb
cmc
repz
cmpsb
and
dec
and
aam
outsb
mov
cwtl
xor
pop
aaa
jmp
push
xchg
cmp
adc
mov
out
clc
xor
pop
mov
rep
cmp
mov
inc
test
ss
loope
loop
jbe
push
enter
jne
adc
dec
xor
add
sti
push
in
arpl
and
filds
mov
dec
fsts
lcall
sbb
push
lret
mov
cli
pushf
mov
mov
push
mov
xlat
fwait
out
testb
push
mov
loop
push
les
cmc
fwait
sbb
dec
in
test
or
out
or
cmp
test
movsb
and
jbe
xchg
adc
mov
or
push
adc
push
shl
mov
int3
test
push
dec
mov
cmp
or
inc
xchg
xchg
xchg
jno
sbb
xchg
into
inc
scas
loope
hlt
pop
or
cmc
mov
mov
in
les
xchg
and
jl
scas
aad
adc
fmull
lods
mov
xchg
sti
jge
negb
daa
cs
jb
insl
imul
mov
inc
xlat
ret
mov
jnp
shll
or
lock
bound
mov
repz
mov
xlat
mov
ficoml
sti
sub
jb
cltd
mov
imul
mov
mov
hlt
adc
dec
leave
mov
push
inc
cmp
inc
nop
mov
jp
sub
fdivrs
push
scas
and
jmp
xor
mov
xor
notb
leave
mov
xor
xlat
inc
cmp
jmp
pushl
jbe
out
mov
rclb
ror
xchg
inc
jns
inc
shl
sbb
mov
or
out
lds
pop
shr
daa
mov
incl
clc
pop
lds
std
mov
inc
jg
lds
mov
mov
pop
fisubl
push
sbb
sbb
push
cmp
idivb
inc
and
out
pop
push
and
mov
not
mov
gs
sti
jmp
push
mov
mov
xor
shll
push
popa
faddl
mov
hlt
sbb
shrl
pop
push
data16
lret
mov
sahf
mov
or
daa
pop
fsubrs
lods
stos
paddsw
in
leave
mov
or
adc
jle
pop
dec
jne
sahf
test
mov
mov
inc
aas
mov
adc
xchg
or
sub
loope
xchg
movsl
mov
movsl
jb
ljmp
or
popf
into
out
mov
out
push
adc
dec
fiadds
xor
adc
pusha
and
icebp
nop
adc
fs
sbbl
fbld
call
es
stos
loop
pop
nop
rcrl
aam
xor
sbb
cmp
fldl
mov
lods
cmc
add
imul
push
mov
push
cld
sahf
push
xor
push
hlt
jl
sbb
lods
sub
stc
lock
mov
inc
mov
cmp
lret
xchg
push
pop
fdivrl
xchg
insb
xchg
cld
mov
and
pop
mov
pop
insb
xchg
fs
movsb
xlat
mov
lret
adc
fisubs
push
push
into
or
cmp
jnp
jle
lahf
add
mov
or
mov
mov
cmp
mov
mov
mov
test
js
mov
scas
xor
sbb
sarb
add
dec
xlat
scas
push
test
sub
push
sbb
movsl
sub
mov
mov
or
insl
lds
popa
mov
pop
leave
fs
mov
jmp
aaa
loope
sbb
ljmp
xor
adc
fdiv
ds
and
mov
mov
dec
pop
cwtl
inc
cmc
fucomip
mov
mov
imul
xchg
mov
sbb
mov
and
mov
idivb
rclb
xor
cltd
sbb
clc
sub
xor
add
jmp
pop
adc
jg
stc
sbb
cmc
in
nop
mov
lfs
sbb
pushf
jge
mov
shrb
or
xchg
inc
outsl
mov
adc
xchg
pop
jne
push
gs
xlat
dec
je
clc
leave
aad
jne
mov
sarl
push
test
cmpsl
movsb
mov
outsl
nop
or
jecxz
and
aad
ljmp
cmp
pop
xchg
fs
sub
insb
adc
push
sbb
lret
xchg
xor
push
std
arpl
inc
aad
or
push
std
popf
imulb
cs
adc
ret
sbb
push
std
inc
lods
and
lods
xor
arpl
cli
out
fs
sub
ror
shrb
cmpsl
sahf
test
xor
adc
loope
decl
in
add
je
sti
lahf
xchg
xor
outsl
movsl
fnstcw
into
rcr
mov
pop
jmp
add
gs
jae
repnz
mov
aad
outsb
inc
dec
push
dec
jge
mov
fdivrs
xorb
dec
mov
mov
mov
jns
leave
rcrb
loop
mov
test
cld
pcmpgtw
xlat
in
jnp
mov
nop
mov
xchg
mov
push
xchg
out
aaa
push
cmp
subl
lods
test
pop
repz
cmp
fcmovu
insl
pop
mov
xor
out
icebp
sahf
out
pop
aam
outsl
imul
xchg
and
inc
xor
loop
inc
outsl
jmp
shrb
mov
movsl
adc
ret
mov
roll
out
out
mov
and
sbb
or
out
aas
mov
cwtl
and
pop
push
pushf
xchg
or
jbe
mov
lret
mov
fsubl
xchg
adc
mov
mov
scas
mov
inc
fucomi
xchg
fisubs
repz
cmc
push
pop
or
pop
loopne
into
mov
lods
mov
inc
mov
mov
mov
or
mov
pop
add
iret
xlat
out
jb
jae
sub
mov
fisubrl
je
xchg
cmc
push
js
fistps
mov
scas
mov
jnp
push
xchg
and
fnstcw
scas
push
es
mov
xchg
into
scas
sub
mov
xchg
jbe
pushf
fsubr
xchg
xor
movl
pop
sbb
cmp
jo
test
add
or
sbb
cltd
jbe
cltd
inc
mov
xchg
jp
out
cmpsl
sub
push
mov
das
xchg
pop
test
imul
faddp
inc
and
gs
jge
in
incb
rol
xchg
cmpl
hlt
sub
outsb
scas
addr16
orb
call
mov
adc
inc
mov
push
test
decb
je
mov
fisttpl
outsw
das
es
imul
and
push
cmp
jns
dec
test
mov
lret
lods
push
int3
ds
jae
out
out
mov
jns
imul
scas
sub
in
pop
pop
xchg
sub
mov
and
xor
ss
lds
xlat
aaa
in
mov
xchg
lods
pop
push
mov
loop
push
js
iret
sbb
push
clc
push
mov
sub
xor
and
mov
pushl
inc
xor
or
or
mov
in
inc
xlat
mov
push
cmp
dec
lea
xor
mov
cmp
clc
inc
repnz
cmpb
adc
into
sbbl
inc
push
dec
pop
inc
sub
and
jle
icebp
pop
aas
arpl
roll
out
or
insb
shrb
cmp
cmp
inc
stos
mov
jge
inc
pop
mov
je
test
rcr
enter
and
mov
xchg
pop
pop
push
into
mov
std
xchg
jmp
jg
popf
push
inc
outsb
lds
mov
mov
shlb
jns
mov
pop
mov
inc
sahf
or
cmp
cld
dec
gs
mov
dec
or
sub
xchg
jl
sbb
test
stos
or
out
fcompp
sti
or
jecxz
pop
dec
fs
mov
jecxz
adc
gs
test
jg
imulb
push
fsubrs
mov
cmove
sarb
cmp
stc
pop
fs
mov
sub
lods
repnz
fists
xor
in
or
jl
jns
and
mov
rol
daa
cs
mov
push
std
or
adc
jg
imul
rorb
mov
int3
cmp
cltd
mov
pop
bound
mov
mov
lret
es
test
stos
test
lods
lods
pop
inc
mov
test
icebp
pop
ficompl
sti
fisubl
in
cld
push
cmpsb
icebp
das
shlb
insl
jle,pt
mov
inc
xor
jne
enter
popa
cmpsb
lods
or
mov
and
or
gs
mov
jmp
in
or
cmp
aad
stos
rcll
xchg
sbb
dec
sti
in
movsb
cmp
aam
jle
xchg
mov
cmc
aad
xchg
mov
jle
mov
xchg
notl
dec
jae
mov
adc
test
test
jnp
mov
mov
xor
and
cmc
ss
push
dec
add
or
notb
sti
shl
lock
adc
ficompl
pop
mov
aas
inc
sub
fstp
sub
mov
repz
push
stc
jmp
fs
ret
jecxz
add
mulb
jl
jmp
hlt
imul
ret
or
enter
fldt
dec
xor
das
int
sub
enter
sub
outsb
mov
xlat
inc
mov
jge
sarb
lret
popa
call
popa
pop
xchg
xchg
mov
push
jp
dec
mov
or
fxtract
lods
sbb
lds
outsl
pop
cmp
xchg
cmp
jp
test
jge
ret
aam
aaa
jge
or
push
daa
push
cmp
andl
ret
adc
aas
pop
lret
xchg
sahf
pusha
dec
std
push
pop
call
daa
push
imul
mov
dec
jno
pop
inc
cltd
jae
es
in
lock
clc
shrl
push
and
orb
fstpl
jle
dec
xor
jp
jae
cmp
daa
fucomi
mov
jns
sarb
and
test
pop
jmp
ljmp
add
pop
or
and
aam
sub
and
pop
adc
inc
arpl
lds
mov
xchg
jo
xor
pop
dec
push
add
in
lcall
and
test
insl
xchg
jmp
int3
xchg
or
cmc
sahf
or
imul
cld
out
hlt
xchg
cltd
mov
jo
dec
or
and
aas
inc
aad
sbb
mov
leave
out
scas
mov
lahf
inc
sbb
fsts
jmp
or
sub
adc
xor
sbb
lret
mov
and
pushf
psubsb
fidivl
jmp
cmp
out
lcall
sti
in
mov
push
jne
fcmovnb
into
leave
insl
pusha
hlt
sub
jecxz
push
mov
jbe
sbb
adc
jl
xchg
sub
or
xor
sbb
loopne
push
aaa
out
ret
insb
and
popf
cmp
lods
sbb
pop
idivl
es
mov
stos
mov
mov
adcb
into
pop
pop
mov
cmpsb
push
das
pop
sti
mov
ds
or
ror
jmp
cld
push
lock
add
xchg
test
mov
shl
push
ffreep
dec
movsb
icebp
push
pop
test
popf
std
and
fidivs
fwait
inc
mov
leave
inc
dec
loope
cmpsb
pop
test
mov
jbe
nop
pop
dec
sub
flds
cmp
into
rol
sahf
mov
and
lock
mov
sbb
mov
lea
xor
xchg
negb
push
leave
inc
out
jmp
sub
add
ja
inc
mov
inc
lods
jmp
and
subb
mov
popa
fisttpll
in
push
lret
mov
xlat
jl
sub
push
into
adc
std
xchg
loop
jno
inc
jmp
popa
xchg
test
pop
scas
cmpsl
ret
add
lret
loopne
add
ss
lock
fnstenv
pop
dec
scas
or
mov
fs
data16
repz
int
jg
sbb
pop
lea
cmp
imul
lret
inc
pop
and
xor
pop
and
int3
sub
jl
sbb
int
dec
out
popf
data16
sub
push
jbe
je
out
jle
mov
movsb
addl
inc
pop
inc
movsb
xchg
pop
add
out
das
ds
nop
test
xchg
inc
xor
popa
aam
bt
push
out
dec
xor
in
xchg
rorb
sub
clc
repz
inc
fldcw
enter
add
aad
out
loope
push
adc
pop
aaa
adc
push
fcompl
add
sbb
aas
sahf
push
mov
js
sbb
mov
ss
cmp
daa
icebp
inc
xchg
push
fidivrs
rcl
cltd
loop
cmc
jge
cmpsb
jb
add
xchg
inc
nop
out
jbe
shlb
les
pop
pushf
int
cmp
pusha
push
insb
adcl
jns
mov
xchg
adc
fs
add
cmpsb
cmp
add
lea
lret
xchg
pop
aaa
shrb
lahf
mov
aaa
lods
mov
inc
mov
fwait
data16
stc
jg
or
stos
adc
fcmovb
out
xor
lcall
fadds
mov
jecxz
inc
cvtps2pd
pop
ficoms
push
xchg
sbb
mov
aas
fldt
scas
inc
es
mov
sub
out
pusha
push
mov
out
leave
cmc
sbb
mov
bound
adc
sbb
loopne
add
dec
mov
and
mov
cwtl
pop
inc
mov
int3
cs
ret
outsb
scas
gs
in
push
mov
addl
std
fidivs
ljmp
shl
inc
rorb
sub
mov
lds
mov
or
cmpsl
dec
lds
scas
enter
fldcw
fscale
push
inc
fsub
dec
ret
out
xor
mov
imul
int
pop
pop
xor
push
jmp
je
inc
fs
cmpsb
hlt
lods
cmc
enter
xlat
out
adc
loope
xor
xchg
data16
pop
mov
addr16
sbb
fwait
je
push
pop
push
mov
jbe
fadd
lret
mov
xchg
into
or
fsubrs
jp
inc
push
push
aaa
xor
cld
pop
jl
sub
mov
data16
and
inc
mov
mov
mov
and
xchg
dec
cmpsb
sbb
ficoms
shrl
add
addr16
xor
loopne
jle
repnz
sbb
aad
stos
xor
push
out
jmp
icebp
pop
stc
into
xlat
ret
andl
push
clc
sub
mov
or
xlat
push
rorb
add
rol
or
popf
and
and
push
sbb
clc
leave
outsl
addr16
mov
push
or
lahf
cmpb
push
sarb
ret
jno
inc
jp
scas
mov
xchg
sti
jl
fwait
inc
fisubs
js
push
pop
ss
xor
inc
imul
or
xorb
movsb
shlb
shlb
stos
sbb
pop
cmp
cmp
xor
push
imul
stc
dec
pop
jbe
lahf
test
in
or
nop
xchg
hlt
mov
stos
icebp
les
pop
mov
cmpsl
hlt
aad
cmp
pop
mov
jmp
lcall
cmpsl
xor
icebp
out
or
and
repz
iret
in
ficoml
mov
adc
add
and
xor
lret
lahf
cli
call
sbb
sbb
or
stos
xor
in
or
int
add
sub
dec
mov
or
add
pop
xor
orb
lea
sbb
mov
cmp
aas
out
mov
fdiv
andl
sbb
fistpl
ret
mov
push
add
and
cmpb
jb
scas
hlt
pop
cmp
fwait
loope
in
fisubrs
pop
in
inc
lods
out
jp
bound
imul
fucom
xor
dec
imul
inc
push
sti
daa
imul
sub
adc
cli
xchg
ror
popf
push
add
cld
jp
jl
cmc
inc
inc
inc
ret
out
mov
xchg
fistpl
test
addr16
gs
fildl
cmp
inc
inc
push
jmp
push
cwtl
jno
test
subb
add
xchg
sub
jl
fistpl
mov
popf
jg
dec
adc
and
xchg
cmp
add
mov
jo
lock
inc
and
jecxz
fwait
mov
mov
movmskps
add
test
mov
lock
dec
dec
mov
inc
jne
add
out
int3
push
cmp
sub
in
sahf
rorb
cmp
enter
mov
dec
ds
lretw
in
lcall
jne
pop
mull
leave
bound
mov
mov
lahf
imul
pop
jae
or
ljmp
insl
adcl
xchg
jl
xor
sbbb
push
iret
outsl
movb
popf
mov
mov
imul
dec
mov
and
adc
push
pop
sbb
dec
sub
movsb
sahf
mov
push
pusha
in
push
mov
outsb
pop
push
inc
gs
notb
fistpll
jns
sub
xlat
stc
push
int3
jo
stc
jl
icebp
inc
mov
jle
xor
inc
pop
or
call
inc
in
negl
aas
mov
sahf
dec
and
xchg
mov
push
sub
mov
daa
xor
jnp
mov
lret
mov
int
push
push
cmp
cmp
push
cmpsl
loopne
xorl
fldt
xor
pop
clc
popf
add
fcmovnb
mov
das
aas
sub
xchg
dec
push
pop
pop
and
dec
cmpsl
jb
cmpb
and
aad
sbb
inc
add
mov
dec
inc
les
je
sbb
sbb
lock
pop
neg
cmp
cmc
mov
jecxz
addr16
subb
xlat
xor
fidivs
out
add
cmc
sbb
or
or
in
mov
pop
push
mov
mov
pop
jnp
outsl
sub
and
dec
or
sub
mov
rol
ret
bound
mov
ret
fsubs
push
sti
mov
cmc
jge
fistps
loop
sarl
pushf
repz
cli
or
jns
int
addr16
push
cmpsl
mov
out
cld
lret
mov
mov
ficomps
push
test
mov
jns
sbb
addr16
in
test
cli
clc
or
mov
push
add
inc
cmp
popf
cld
popa
imul
int3
jae
pop
xchg
and
xchg
or
out
nop
sbb
lods
enter
mov
nop
xchg
shl
pusha
setg
sbbb
or
dec
dec
cld
jb
ss
xor
push
fisubl
das
mov
push
mov
sub
aaa
mov
pop
xlat
sarl
test
and
lcall
cmp
rcll
sub
in
pop
repz
jbe
mov
mov
addr16
mov
and
jmp
push
sahf
add
xor
cmc
data16
xchg
push
push
or
jecxz
je
div
add
sbb
insl
xor
decl
xchg
and
addl
add
imul
cmp
in
xor
test
mov
xor
test
mov
or
mov
cmp
jl
fiaddl
and
test
in
jle
loop
lret
push
popf
negl
mov
push
popa
imul
dec
sbb
sbb
cwtl
mov
sar
jbe
push
popa
icebp
adc
push
inc
loop
ljmp
insb
or
iret
ds
adc
mov
rcll
add
or
insl
xchg
cmpsl
ret
mov
into
sub
mov
mov
mov
jmp
rclb
in
push
cltd
cld
inc
mov
fsubrs
into
inc
int3
in
mov
test
mov
push
insl
es
jne
jbe
jnp
gs
pop
mov
dec
jl
sub
enter
repz
or
mov
jb
xchg
pop
push
push
pushf
jae
push
pop
pushf
rclb
sbb
outsb
push
ljmp
jecxz
mulb
popa
sbb
iret
scas
lret
mov
mov
test
lods
mov
lret
sub
dec
push
mov
sahf
push
mov
sbb
int
mov
sub
lret
dec
xor
test
cmp
dec
mov
pop
aas
stos
inc
xchg
adc
pcmpgtb
and
jb
cmpsl
rcrl
pop
test
push
mov
cltd
dec
dec
data16
aad
sarl
add
mov
cmpsl
xor
sub
mov
mov
jb
out
mov
int3
into
mov
addr16
inc
push
insl
movsl
adc
pop
jo
xchg
cmpsl
sub
xchg
dec
inc
push
dec
gs
xor
jle
aaa
sub
xor
sub
fistl
push
inc
pop
xchg
xchg
in
aad
repz
adc
push
mov
sarl
and
xor
pop
pop
pop
sbb
sbb
cmc
lahf
jb
aam
mov
mov
xor
push
jle
pcmpeqd
rcrb
test
jnp
sbb
outsl
inc
call
inc
fwait
ss
stos
push
inc
xchg
mov
add
dec
stos
roll
ds
pusha
push
pop
shrl
ret
into
popf
mov
addr16
push
es
and
xchg
xchg
inc
mov
dec
mov
es
sub
adc
daa
ror
cli
aas
jecxz
cmpsl
sbb
xchg
jg
int
data16
rclb
nop
divl
and
sbb
loop
jno
pop
data16
mov
out
push
or
dec
jp
arpl
lods
lahf
mov
sub
daa
pop
push
dec
push
hlt
pop
jmp
nop
inc
mov
lods
ljmp
push
pop
or
or
lret
sbb
lods
sarb
inc
xor
sbb
xchg
sbbb
fxch
test
into
fiadds
mov
ja
pop
aaa
mov
sbb
je
repnz
xchg
lcall
leave
jecxz
stc
lock
or
stos
in
mov
jb
xor
lret
mov
sub
xor
loop
jp
push
outsl
jne
lretw
rcr
and
fs
in
inc
mov
sbb
mov
mov
xchg
jge
mov
movsb
repnz
je
cmp
out
dec
loopne
sbbl
cmpsb
shrl
xchg
cmc
test
inc
pop
inc
push
pop
pop
enter
out
jl
sbb
cmpsb
adc
into
dec
adc
mov
repnz
xor
cmp
js
sahf
pop
mov
xchg
sbb
mov
cmp
mov
xchg
adc
inc
adc
lods
pop
rcr
push
out
adc
and
or
in
movsl
repz
add
push
fidivrs
mov
xchg
pop
stos
test
les
add
movsb
jge
sub
icebp
push
push
pop
scas
push
add
pop
das
repz
add
test
and
popa
lock
push
inc
sbb
cmc
jno
sbb
iret
lds
shrb
bound
mov
mov
fwait
xchg
sub
xchg
movsl
je
cltd
push
lock
insl
ds
test
cmp
ret
cltd
mov
mov
in
mull
xchg
push
aad
test
mov
out
outsl
or
outsb
cwtl
mov
pop
jbe
inc
mov
lret
iret
subb
test
daa
shrl
imul
jbe
sbb
push
mov
in
negb
and
rol
loope
and
or
lahf
in
cwtl
fs
rep
sahf
ss
sbb
jae
sarb
push
aas
pop
and
mov
mov
stos
aaa
ret
jae
inc
popf
js
cmp
js
push
frstor
and
dec
sti
lods
mov
mov
call
shl
mov
push
outsl
test
lea
mov
rcrl
cwtl
out
mov
pop
cli
pop
dec
dec
pop
enter
add
leave
sarl
mov
fsubrs
test
fdivrs
es
aam
push
xchg
mov
lret
fistl
add
adc
lret
xlat
ds
test
int3
adc
and
push
cmpsb
jns
or
andb
inc
jmp
sub
mov
adc
cltd
sub
mov
es
loop
cmp
sti
in
xchg
loope
mov
lret
loopne
push
push
jmp
mov
imul
js
jb
push
cwtl
leave
sub
inc
add
mov
sti
adc
testl
or
es
fmull
pop
or
add
call
icebp
pop
lahf
ror
lods
loopne
jl
or
movsb
sbb
ret
or
test
xor
ret
clc
cmc
cmc
jae
std
in
or
push
ret
test
es
sbb
add
popf
pop
jmp
iret
div
test
add
dec
jne
dec
daa
aaa
lods
pop
cli
mov
sub
fldenv
mov
push
bound
int
pop
ds
add
outsl
dec
ja
or
sub
dec
push
mov
inc
leave
dec
sbbl
es
cmpsl
sub
hlt
test
jge
adcb
aad
pop
cmp
out
repnz
adc
dec
in
nop
cltd
das
lcall
mov
sub
aad
mov
jecxz
stc
mov
xchg
fstpl
mov
mov
aas
jo
icebp
loopne
mov
mov
loope
inc
pop
sahf
ret
in
jg
nop
sbb
mov
dec
imul
adc
sub
push
shrb
call
add
push
popa
cli
repz
push
test
sahf
addr16
scas
mov
rolb
pop
xchg
jge
xor
push
leave
stos
fadds
sbb
outsb
mov
out
jno
pause
popf
push
aas
shr
imul
ds
rol
fld
shlb
sbb
cmp
imul
test
insl
mov
jb
popa
or
mov
push
aaa
data16
and
sbb
fwait
or
popa
daa
adc
enter
rorb
add
mov
in
mov
dec
insb
rclb
test
pop
mov
aaa
mov
icebp
jo
mov
sub
jl
mov
out
outsl
mov
fidivrs
xchg
mov
pusha
outsb
or
cwtl
adc
fnstcw
jnp
cwtl
mov
jns
mov
or
ror
stos
add
jl
les
test
jmp
push
push
loop
xchg
arpl
pop
mov
out
call
jo
xor
dec
nop
mov
push
fwait
add
add
mov
loopne
xchg
gs
push
xor
std
mov
in
sbb
mov
push
and
sbb
adc
in
push
xor
sub
jmp
test
lods
sti
add
jg
pop
inc
cmp
add
adcl
fadd
or
imul
inc
loope
test
sbb
pop
and
jae
jbe
daa
dec
push
lds
pushf
mov
enter
xchg
clc
dec
je
fstp
imul
lock
ds
xchg
icebp
daa
mov
clc
roll
pop
dec
cmp
arpl
pop
pop
movsl
insb
xchg
movsl
xor
repnz
mov
lea
test
popa
ss
mov
stc
std
push
scas
call
vsubsd
test
mov
xchg
push
adc
iret
sbb
lcall
imul
or
xchg
pushf
jg
lret
push
adc
mov
jl
ljmp
mov
fldt
inc
aas
imul
sbb
loop
repz
dec
sub
xor
sub
imul
adc
mov
adc
stc
fwait
outsb
mov
xchg
std
xor
sbb
xor
push
ss
pop
pop
adc
sbb
cmc
cmpsb
and
pop
bound
mov
mov
jne
mov
jl
aaa
mov
mov
sub
ret
insl
clc
mov
mov
jge
dec
sbb
fadds
jl
lds
mov
push
int
loopne
sahf
imul
pop
mov
aam
andl
lods
scas
jp
repz
lret
out
dec
outsl
push
adc
mov
lea
mov
scas
lcall
jl
cmp
je
cmpl
fistpl
sub
mov
aas
sub
inc
xchg
pop
push
aad
push
cmc
mov
inc
insb
not
dec
loopne
fyl2xp1
dec
add
cmpsb
subl
sub
cmc
mov
icebp
in
lea
jae
push
iret
int
or
push
push
mov
push
test
mov
push
iret
scas
adc
jecxz
stc
divl
and
push
or
xchg
shl
ljmp
xlat
add
jl
outsl
es
xor
aam
inc
out
dec
adc
shlb
or
loop
or
push
and
popa
mov
pop
jno
cmp
cmp
dec
cmp
addr16
cmc
loop
dec
cwtl
pop
movzwl
mov
pop
and
sbb
push
loop
adc
shl
fcompl
popf
sar
imul
sbb
decl
lret
jg
fiaddl
scas
push
dec
jle
loope
jmp
sbb
aam
adcl
xchg
push
stc
inc
xchg
ljmp
pop
fsubs
loop
aam
mov
stc
pusha
fdivl
mov
cli
sbb
int
movsb
shlb
inc
das
pop
incb
inc
jae
xchg
rcl
mov
push
mov
cmp
jle
popa
andl
and
jbe
mov
bndldx
divl
or
das
mov
filds
mov
xor
add
hlt
lret
mov
lods
fiadds
fcomi
dec
add
fwait
pop
sbb
inc
lods
loopne
aas
jl
push
dec
mov
ret
lret
popf
jecxz
pop
jecxz
inc
ret
stos
lea
out
ds
pop
fstpl
sub
aad
pop
ljmp
movups
pop
xorb
cmp
fisubrs
cmp
call
adc
gs
cmp
mov
xchg
fsts
test
adc
ljmp
jno
and
fs
jge
xor
jne
jnp
insb
outsl
popf
cmp
adc
xchg
pusha
bound
pop
adc
jnp
sarl
add
cmpsl
ficompl
mov
nop
in
stc
mov
cmp
dec
dec
cmpsl
shlb
or
data16
cmpsl
cvtps2pi
rcrb
sub
push
dec
sub
jae
jmp
and
mov
imul
cs
xor
repnz
sbb
lahf
xchg
push
adc
lea
imul
sbb
out
fwait
shll
rolb
test
loopne
in
js
out
inc
daa
xchg
incl
sbb
mulb
cmovg
push
jne
fwait
xchg
xor
mov
aad
in
xchg
mov
outsl
mov
jmp
cs
add
mov
cli
arpl
adc
dec
test
push
test
adc
or
push
mov
dec
inc
cmovae
or
rolb
jo
mov
sub
pop
dec
sbb
bound
dec
les
sub
sti
mov
cli
movsl
xor
push
jns
filds
hlt
sbb
mov
add
jp
hlt
fdivl
lcall
push
sub
adc
ret
xor
scas
or
pop
add
jle
inc
or
push
mov
xor
and
pop
or
cmpsb
test
pop
icebp
jno
or
add
out
cmc
lods
stos
push
mov
jae
adc
scas
pop
movsl
rclb
xchg
aas
scas
ss
jne
jb
mov
or
in
jns
cmp
push
mov
das
mov
or
mov
sbb
mov
mov
mov
test
test
and
push
dec
mov
shrb
aad
je
adc
cmp
ss
xor
sarl
lret
jmp
sub
xchg
lret
out
fmul
movsb
loop
lret
adc
insl
mov
push
pop
push
icebp
inc
mov
dec
shl
dec
cmp
loope
mov
pop
mov
clc
loop
stos
scas
das
movsl
out
shll
test
pop
push
rcrl
in
int
hlt
mov
int3
xor
ja
inc
decb
idivb
in
insb
movsl
aad
pop
fadd
mov
dec
or
imul
or
cmp
rorl
out
sub
or
lahf
rcrl
push
jmp
mov
or
pop
out
sub
pop
push
dec
clc
in
stc
sub
cmp
je
outsb
sub
dec
add
sub
outsl
mov
pop
popa
jb
mov
mov
nop
cmpl
test
scas
call
shlb
test
cltd
test
mov
cmpsl
jnp
adc
jmp
and
lcall
and
ficoms
xchg
js
jmp
inc
mov
inc
sub
cmp
ret
pop
aam
xlat
pushl
jmp
clc
mov
mov
leave
fdivrl
xor
push
push
xchg
les
jns
push
adc
ret
mov
lcall
loopne
or
push
pop
jo
test
ret
loopne
push
cli
dec
mov
inc
cld
loopne
stos
xor
mov
arpl
das
insb
cmp
and
xor
pop
adc
add
cmp
in
out
ret
fildll
push
ret
imul
add
dec
inc
call
jne
mov
aas
pop
out
mov
sub
adc
fdivrp
lods
dec
lret
mov
sub
dec
jb
dec
and
mov
dec
out
mov
push
icebp
std
js
xlat
ret
loope
adc
sti
inc
xchg
jg
popa
das
jnp
js
sahf
adcb
std
lea
push
inc
jl
sahf
jno
roll
add
add
add
sbb
xor
cmp
pop
int
enter
sub
inc
push
sub
jle
mov
or
xchg
jg
js
scas
push
add
or
jl
popa
js
add
push
mov
adc
das
xchg
push
mov
sahf
es
cld
sbb
lahf
sub
sbb
inc
jno
adc
adcb
mov
and
ljmp
cltd
add
jle
out
pop
mov
push
push
mov
pop
lret
add
and
jl
adc
jl
mov
hlt
das
mov
xchg
mov
mov
lods
fiadds
mov
imull
or
or
lods
jecxz
ljmp
dec
dec
repnz
lea
loope
icebp
testb
aam
adc
mov
rep
daa
push
int3
sbb
fcoms
pushf
popf
pop
inc
int3
pop
and
pop
fistps
xor
orb
repnz
stos
adc
pushl
popf
shlb
test
lahf
and
call
xor
test
mov
lahf
pusha
push
cmpsl
xchg
pop
lods
mov
outsl
lret
inc
sbb
mov
push
mov
aad
xchg
ret
popf
in
faddl
js
mov
or
push
adc
imul
das
frstor
jge
aas
movsb
inc
sub
inc
mov
jmp
pushf
leave
sbb
cltd
call
out
clc
dec
add
cmpsl
lock
jge
scas
xlat
pop
lret
sub
or
int
pop
jle
fwait
or
jbe
arpl
rolb
cwtl
hlt
inc
push
jecxz
ljmp
loop
aad
fisttpll
pop
lcall
test
jne
test
xchg
jge
jge
xor
lock
hlt
or
jns
mov
scas
push
pop
sti
pushf
test
lea
cmp
and
daa
pop
dec
addl
xchg
xchg
loopne
mov
xlat
add
mov
push
xor
scas
mov
mov
or
lahf
push
pop
lock
test
fwait
xchg
rcll
sub
movsl
clc
jp
xorb
push
or
shl
ljmp
pop
xchg
xchg
repnz
or
jle
dec
sbb
jns
arpl
pop
xchg
fcmovb
mov
or
test
icebp
push
les
add
adc
inc
test
inc
pop
sbb
mov
cmpsl
mov
mov
test
xchg
sarl
fcmovnbe
or
aaa
lods
movsl
popa
add
ret
ret
lods
add
pop
int3
jmp
or
fnstsw
add
sub
pop
int
and
xor
pop
xor
sub
dec
shlb
add
dec
int3
dec
rcrb
out
sahf
jbe
add
mov
adc
loope
test
loop
out
ja
fistpl
test
fistps
in
sahf
mov
dec
xchg
inc
popa
jp
sbb
ret
inc
lahf
mov
jmp
lods
arpl
test
mov
lahf
mov
mov
or
arpl
int
mov
xor
cld
or
fsts
cmpb
xchg
sub
jnp
adc
add
fadds
inc
out
push
push
or
sub
cmp
and
lahf
sbbl
mov
jb
inc
mov
cs
out
loop
fs
sbb
push
push
aam
out
pop
mov
jmp
push
rclb
test
into
mov
dec
xchg
push
mov
adc
push
lea
add
xchg
sub
cmp
mov
cmpb
inc
xor
rclb
push
and
popf
mov
push
in
pop
cmpsl
pusha
inc
pusha
sub
push
js
jecxz
cmpsl
dec
add
int3
push
mov
mov
mov
insb
sbb
jno
aad
ret
sub
adc
xchg
aas
mov
adc
pop
divps
es
mov
xor
shll
dec
jne
xor
es
inc
sub
vpcmpeqw
lcall
scas
mov
stos
daa
scas
mov
rcrb
lods
fsubr
and
fucom
cmpsl
dec
lahf
sub
repz
xchg
or
fildll
inc
lock
inc
dec
dec
insb
movsb
mov
ds
inc
pop
lret
bound
int3
sub
add
mov
cmp
std
dec
push
outsl
mov
in
sub
pusha
es
pop
addr16
push
cmpsl
jo
jmp
call
loope
int
adc
ret
xor
adcb
into
ret
aam
cmp
sub
mov
and
int3
daa
adc
into
stc
mov
mov
pop
es
call
mov
push
popf
push
push
test
int3
jp
add
bound
call
xchg
mov
and
pop
test
adc
aaa
popf
push
mov
addb
movsb
js
jo
sub
sub
hlt
pusha
xlat
mov
adc
push
outsl
cltd
hlt
mov
xor
and
aad
or
movb
mov
fdiv
mov
clts
pcmpeqd
out
outsb
and
adc
mov
mov
imul
je
test
lods
xchg
les
je
pusha
cmp
rcll
lret
mov
push
xchg
xchg
dec
add
and
dec
sbb
aas
jnp
mov
mov
jg
inc
dec
mulps
xchg
lcall
dec
insb
or
inc
or
push
and
and
test
sub
xor
lea
sbb
mov
xchg
xchg
and
push
lods
fnstsw
mov
pushf
pop
mov
cmpsl
in
adc
orl
dec
mov
mov
hlt
jo
mov
in
aad
inc
inc
sub
sub
sti
addr16
adc
adc
push
ret
mov
jne
pop
ret
std
int
mov
call
and
mov
cmp
movsl
fwait
or
loope
mov
je
dec
loopne
into
out
stos
jb
call
in
sub
mov
rcr
lret
pop
lahf
cmp
in
or
mov
and
scas
pushf
incl
xchg
lock
pop
inc
or
sub
pop
sbb
push
lock
sahf
cmp
fmul
jmp
decb
in
push
fwait
push
fistps
pop
popf
mov
xchg
in
in
adc
pusha
xlat
pop
mov
and
inc
jl
inc
testl
repz
shlb
jb
fnsave
mov
mov
lea
jle
es
mov
daa
jo
xor
cmp
sahf
lock
stos
ljmp
push
stos
inc
dec
lock
movsb
bound
popf
xor
add
aam
fstps
mov
les
int3
jge
push
xchg
jb
xor
stc
mov
jmp
test
inc
lcall
sbb
dec
push
jne
fcmovbe
or
ljmp
sub
or
pop
test
and
js
cmc
gs
test
pop
mov
ret
sbb
sub
rcll
nop
jae
dec
dec
cmp
fcomi
dec
mov
cmp
pop
push
rcl
fnclex
cmpl
in
into
shlb
or
xchg
dec
iret
stc
into
leave
mov
xor
or
adc
leave
movups
daa
aad
adc
dec
push
enter
cmp
sbb
sti
add
mov
pop
jl
pop
mov
mov
inc
cs
outsl
xchg
jmp
jecxz
mov
inc
cmp
adc
sbb
lret
sub
xchg
jle
or
mov
insl
movsb
jge
out
neg
and
xchg
leave
dec
sbb
and
add
dec
or
or
sbb
loop
loop
aad
jo
cli
test
jge
mov
push
pushf
lea
test
jge
mov
mov
inc
adc
fsubs
sub
popf
mov
mov
popa
jle
sub
repz
mov
mov
jns
jb
pop
mov
iret
ds
pop
inc
push
cmp
sub
add
pop
xchg
lcall
push
fsubrl
out
cmp
insl
cmp
adc
mov
push
push
push
pop
cmp
push
pop
std
sbb
mov
jno
add
les
mov
add
lea
inc
inc
mov
cmp
insl
mov
mov
jns
push
dec
test
ret
jbe
or
movsl
cli
dec
xor
mov
fwait
jnp
jle
jecxz
shrb
sbb
xor
ljmp
push
pop
mov
pusha
js
dec
sub
lds
cmp
repz
addl
adc
lret
mov
gs
pop
cltd
fstpl
xchg
out
lret
mov
fcmove
jne
push
jne
inc
clc
add
sahf
jb
fs
cmp
popf
push
lcall
daa
lcall
ja
jb
sar
test
loopne
cmp
pusha
inc
fdiv
rclb
fadd
fdivrs
add
inc
outsb
imul
sub
sub
jno
pop
pop
adc
fs
cmc
fs
outsb
xchg
lret
lods
dec
cmp
adc
enter
popa
sbb
lods
int3
push
push
push
mov
notl
lcall
jae
mov
das
xchg
gs
daa
fcmovbe
stos
cwtl
ds
pop
fstpt
test
push
xchg
push
ss
inc
cmp
mov
and
mov
shlb
in
jae
adc
sbb
mov
pusha
dec
mov
ss
icebp
cmp
jne
add
cmp
add
negb
add
sub
push
imul
or
sbb
gs
cmc
adc
stc
nop
in
stc
sbb
sub
subb
flds
sti
fildl
inc
mov
pop
or
mov
adc
pop
xchg
repnz
inc
in
fs
jnp
xchg
loope
int3
inc
inc
adc
cmp
pop
in
or
adc
mov
xchg
loope
dec
mov
imul
jmp
fnstenv
inc
addr16
sbb
push
in
mov
in
mov
add
inc
cld
jmp
inc
adc
mov
mov
aaa
scas
jb
lea
loop
test
sub
fisttps
adc
push
sub
repz
xor
scas
cmp
aad
loope
je
popa
dec
pusha
pop
mov
repz
test
mov
movsl
inc
mov
add
ret
insl
popf
mov
rorl
xor
insl
pusha
lret
sbb
push
mov
cmp
sub
add
mov
loope
mov
xchg
cmpsb
std
cmp
loopne
dec
or
or
out
pop
pop
pop
shll
fcomps
fists
inc
ljmp
out
cmp
fistpl
mov
std
outsl
movsl
aaa
mov
ret
cmp
mov
test
inc
je
push
adc
dec
jnp
mov
push
xor
and
xchg
in
or
addl
scas
sub
stc
jle
mov
xchg
and
test
adc
and
in
pushf
or
mov
in
push
rol
push
mov
mov
sbb
xchg
jbe
pop
push
lahf
and
cmp
xchg
add
iret
fcmovu
into
cli
cld
dec
push
mov
adc
mov
popf
repz
adc
jp
mov
mov
scas
sbb
xchg
pop
stos
out
jle
pop
and
pusha
cmp
inc
imul
scas
mov
dec
cwtl
clc
das
pusha
mov
push
dec
inc
stc
cltd
lret
enter
movsl
push
scas
jne
xchg
popa
fistpll
pop
mov
scas
lods
jecxz
ficoms
mov
mov
pop
xlat
jne
xor
mov
inc
repnz
and
inc
inc
mov
imul
pop
je
push
xorb
imul
divb
and
in
add
loope
add
cmp
mov
fistps
xor
inc
mov
jbe
out
ja
push
out
mov
ret
popa
xchg
fmul
fmul
lret
mov
fbstp
jp
fwait
mov
rclb
test
mov
mov
sbb
test
icebp
mov
push
push
adc
dec
inc
out
in
jmp
cmp
fld
sbb
sub
xor
pop
addb
jo
stos
push
push
addr16
cmp
inc
sti
lcall
push
imul
sub
imul
ja
mov
mov
sub
dec
mov
inc
sub
mov
rorl
in
push
ret
leave
adc
test
xor
cmp
ret
xlat
mov
int3
adcb
cld
shlb
call
lahf
je
cmp
mov
sub
idivb
mov
jmp
push
push
js
shll
inc
inc
pop
popa
out
loope
lds
clc
mov
cwtl
imul
or
jbe
rclb
cmpsb
adc
pop
jb
iret
push
in
dec
and
mov
sub
imul
xor
mov
imul
xchg
inc
fidivl
in
into
pop
movsb
inc
dec
sahf
cmc
je
sbb
push
adc
fcmovnb
gs
in
int3
imul
fcmovb
testl
push
aaa
popa
jge
pop
insb
cmp
mov
call
cli
loope
and
lahf
xor
push
mov
xor
and
mov
lcall
xlat
nop
loope
sub
sar
ja
mov
shlb
test
dec
push
sti
push
add
mov
jl
loop
inc
sub
lods
inc
fs
notl
cmpl
push
mov
sbb
ret
adc
mov
push
push
repz
ret
xchg
ds
aaa
mov
mov
xchg
mov
adc
sbb
lret
icebp
sub
cmp
mov
imul
je
es
arpl
xor
shlb
dec
es
into
daa
mov
and
xchg
sar
lret
xchg
ror
and
sbb
das
imul
mov
data16
sbb
and
orl
scas
pop
lea
and
mov
cmpsl
addr16
fdivrs
mov
mov
add
pop
cs
xlat
rorl
xchg
cld
jnp
or
adc
popf
pop
xchg
movsb
cwtl
stos
mov
in
sub
jnp
mov
mov
movsb
mov
and
mov
mov
mov
cmpsl
dec
adcb
mov
das
aas
inc
mov
dec
add
leave
inc
pop
or
or
jns
repnz
test
sarb
fxch
ret
sbb
adc
movsb
or
adc
lods
ret
inc
iret
cmp
push
xor
dec
add
and
out
pushf
scas
mov
lea
mov
jno
fs
stos
out
std
leave
sbb
dec
imul
sub
stos
or
mov
ja
jmp
xchg
push
mov
lds
xchg
push
push
mov
divb
add
mov
dec
add
arpl
sbb
jb
das
pop
adc
mov
scas
push
test
sub
or
cmpsb
popa
cmc
call
imul
jecxz
fimull
xor
and
insb
ret
push
mov
lea
daa
xchg
movsl
cmpsl
cmpsb
mov
xor
add
fmuls
shrl
sbb
sbb
adc
leave
testl
cmp
ja
cmp
sbb
jmp
push
cld
fistl
add
imul
cmp
sub
mov
mov
das
imul
ja
or
out
aas
lods
pop
movb
sbb
or
xlat
les
orb
iret
add
mov
or
test
movsl
sbb
test
xor
mov
bound
cmp
mov
pop
push
xor
outsl
push
inc
xor
nop
and
and
adc
push
cmpsb
cmp
lods
or
test
add
inc
xorb
bound
xor
cmp
mov
jg
jmp
in
out
xor
mov
cltd
push
push
add
xor
pop
cmc
mov
xor
add
test
jno
stos
mov
mov
sbb
popf
mov
mov
cli
and
push
sbb
and
cmpsl
xlat
data16
popa
cmpsb
xchg
pop
int3
sub
fwait
andb
aas
mov
inc
icebp
add
add
xor
add
ds
data16
es
push
hlt
pop
jnp
and
cli
in
jno
in
fisubrs
mov
sbb
and
xchg
inc
push
in
xor
push
mov
movsb
pop
test
out
ret
xchg
scas
sub
xor
jo
push
dec
mov
cmp
repz
pop
shl
mov
nop
push
rorb
mov
or
into
lock
sbb
mov
mov
mov
js
xchg
pop
jno
icebp
lods
ds
xor
nop
ror
xchg
test
or
out
sub
sub
mov
xorl
pop
int
rol
inc
jae
sbb
xchg
mov
sbb
iret
dec
jmp
pop
shll
rcrl
jno
sbb
cs
rclb
jmp
fisubrl
sub
push
adc
fiadds
push
ljmp
lahf
jl
sub
loopne
decb
xor
sbb
cwtl
stos
dec
mul
mov
dec
and
sub
loope
mov
lcall
cli
repz
loopne
je
repnz
and
add
and
mov
mov
popf
mov
dec
cli
xor
sub
andl
or
ss
push
adc
or
mov
call
popa
cmpsl
sbb
xchg
xchg
outsl
ror
lret
mov
add
mov
or
mov
mov
scas
push
lret
lea
aaa
mov
pop
push
in
xor
adc
aad
mov
xor
ret
cmp
cmp
or
sbb
jle
shlb
pop
sbb
push
adc
adc
xor
cmp
jge
int
pop
mov
dec
test
jl
shrb
push
movsb
scas
scas
call
pop
cs
mov
adc
pop
xchg
outsl
add
outsl
pop
adc
inc
shrl
dec
movsb
mov
sub
movsl
lret
outsb
adc
in
and
xchg
mov
rcll
out
fwait
mov
cmp
xor
mov
or
xlat
jmp
loope
mov
sbb
test
inc
jbe
and
loop
jg
inc
subl
pop
mov
out
fistpl
dec
xchg
subl
fdivr
out
ljmp
cwtl
arpl
dec
int3
fsubrs
mov
xchg
scas
testb
push
pop
or
cmpsl
push
pop
mov
fcomps
mov
lods
dec
test
data16
sbb
dec
cmp
xor
cld
push
rorb
xor
mov
xor
add
fcomps
sub
mov
pop
add
add
xchg
mov
insl
and
test
sub
inc
inc
add
push
repz
mov
popf
push
dec
andb
mov
arpl
movsb
outsb
test
cmp
and
inc
xchg
adc
add
das
pop
mov
loop
in
stos
int
fs
mov
mov
sbb
call
outsb
sub
jecxz
adc
je
xchg
pop
imul
xchg
leave
dec
jbe
icebp
inc
jecxz
mov
je
jl
jg
mov
mov
mov
xorb
addr16
cmp
and
jp
pop
sub
pop
adc
lcall
jle
pushf
scas
jp
pop
fiaddl
fsubrp
xchg
sbb
jo
push
out
loopne
sbb
loop
inc
xor
mov
inc
and
int
cld
jne
mov
push
cmp
adc
test
nop
cs
adc
inc
xor
test
aas
popf
push
insb
pop
mov
dec
in
adc
in
jl
xorl
rolb
push
pop
inc
loope
mov
shll
sbb
fistps
lock
fnstcw
mov
arpl
test
or
xchg
popa
adc
mov
add
test
push
testl
inc
fcmovnu
pop
push
mov
sbb
dec
inc
jnp
cmp
push
push
cmc
mov
jg
out
dec
push
outsb
mov
pop
jp
mov
add
jae
pop
out
pusha
cmp
cmp
pop
pop
stc
bound
jecxz
mov
dec
idivl
adc
sub
notl
outsl
test
jmp
jl
stc
jbe
sti
mov
call
popa
repnz
inc
lock
lock
ja
adc
push
dec
pop
jp
cmc
cmpsl
clc
mov
aaa
push
shlb
pop
mov
add
jmp
cltd
xor
sub
fs
cmp
sbb
cltd
cmp
stos
std
cli
jp
and
mov
pusha
add
mov
rclb
sarl
push
or
dec
shl
outsl
repnz
pop
cld
cmp
cmp
jecxz
pop
call
pop
fistl
vmovddup
popf
cmp
add
cwtl
push
rol
push
xor
inc
xor
xchg
push
mov
sub
lret
xor
pop
sub
roll
dec
stos
sbbl
leave
jno
filds
adc
cmp
push
shufps
lods
arpl
negl
insl
out
mov
dec
mov
add
das
outsb
insb
ja
in
iret
jmp
rorb
iret
lock
dec
push
data16
cmp
imul
cmpsl
or
mov
pop
inc
aas
ficomps
sbb
jp
xchg
scas
insb
pusha
add
mov
sub
jbe
lret
popf
sbb
divl
repz
push
jle
sub
dec
daa
test
rep
sarb
mov
into
jno
insb
outsl
mov
mov
mov
fmull
inc
jbe
push
clc
into
cli
mov
lock
sub
cmpsl
jp
js
jmp
adc
in
jmp
daa
sbb
movsl
push
mov
in
pop
cmp
or
pop
jae
ret
aad
xor
sbb
movsb
cmpsb
popa
fstps
xchg
mov
sahf
push
mov
sbb
pop
movsb
inc
xor
cmp
insl
and
popa
pop
sbb
or
sub
rolb
in
rcl
dec
lea
rcrl
call
push
out
int3
or
mul
mov
inc
mov
rcr
xchg
filds
inc
cmp
jg
andl
je
test
and
rclb
stos
ret
outsb
jl
xor
pop
shl
hlt
mov
cmpsb
xlat
in
xor
enter
mov
div
vdivsd
roll
pop
xchg
lret
add
mov
pop
pop
add
fwait
push
lahf
lods
into
add
or
xor
lods
lods
inc
cli
push
dec
fwait
rcr
xchg
xor
icebp
test
add
pop
icebp
xchg
mov
sbbb
stos
jp
cltd
lfs
jl
jae
push
and
cwtl
inc
cmpsl
loop
push
mov
and
inc
xchg
xor
sahf
mov
or
or
and
mov
lods
mov
lret
jb
dec
loope
lret
shrb
mov
dec
xchg
push
mov
mov
pop
int3
push
pop
adc
mov
adc
insl
cwtl
push
pop
xchg
std
imul
mov
lcall
cmpsb
or
adc
ja
cltd
loopne
daa
daa
fcomps
das
pop
jl
cmpsb
scas
xorb
and
jae
pushf
xlat
pop
add
add
andb
cwtl
dec
pushf
jge
negb
cwtl
fs
and
dec
push
mov
lahf
or
xor
add
sub
mov
loope
lcall
dec
ja
aam
jecxz
pop
xor
test
popa
jg
fs
das
dec
mov
mov
cli
sbb
ds
cltd
mov
add
rcrl
pop
imull
and
sub
mov
inc
add
movsb
add
data16
dec
les
dec
sbb
jne
jecxz
cmc
cwtl
or
test
sbb
cmp
aad
add
mov
jae
jecxz
jns
add
add
mov
pop
div
out
push
xor
xor
fnstenv
pop
mov
cmpsb
lret
ficoml
pop
pop
cmc
dec
add
inc
stos
in
dec
scas
popa
mov
nop
cmp
sub
push
stc
loopne
mov
popf
xor
into
dec
in
stos
cltd
cli
in
sbb
aad
mov
std
mov
gs
mov
push
fisubs
leave
or
aas
cli
mov
jbe
outsl
in
mov
pop
loopne
imulb
es
push
push
sub
addr16
cli
or
jp
outsb
dec
sub
clc
shlb
inc
mov
in
roll
mov
fwait
add
ljmp
jo
movsb
fbld
dec
sahf
std
jbe
cmpl
push
xor
aad
sbb
add
cwtl
jecxz
and
fwait
shll
pop
xchg
popa
movsb
lret
xor
adc
sbb
inc
push
gs
or
jg
leave
test
push
mov
sahf
shlb
pop
data16
stos
stc
pusha
pop
and
push
add
call
xlat
fwait
or
xor
adc
hlt
stos
jo
icebp
mov
sub
in
shrl
jmp
cltd
or
xor
fs
push
lret
pop
mov
jecxz
push
js
push
dec
repnz
repz
lret
mov
or
xor
cmp
mov
sub
shl
adc
or
jo
dec
movsl
add
iret
daa
shl
nop
inc
inc
pushf
cli
jnp
adc
stos
mov
shrl
cmp
gs
mov
bound
push
xchg
or
popf
xor
mov
int
sub
ds
cmp
inc
test
shlb
mov
xor
and
add
fs
sbb
mov
stc
cli
dec
xchg
pop
or
mov
dec
xchg
cmp
fldenv
inc
fstps
mov
or
mov
adc
int
popf
cmp
js
scas
std
scas
xchg
sahf
xor
test
mov
std
mov
jo
repnz
or
mov
mov
sti
sbb
notl
lcall
incl
mov
in
aaa
cmpb
mov
mov
jae
xor
add
in
fadd
enter
xcrypt-ecb
cmpsl
or
loope
fiadds
orl
xchg
pop
push
add
add
sbb
rcl
fucomip
mov
sahf
out
orb
cmpsl
push
and
test
mov
pusha
cmp
pop
xchg
or
test
jae
mov
push
out
jno
mov
cmp
popa
push
jg
xor
push
xchg
mov
out
xor
dec
or
inc
in
in
cmp
scas
mov
or
mov
mov
imul
into
jo
and
inc
lea
pop
adc
in
test
add
push
out
in
cwtl
lret
add
in
pop
sub
call
cmp
mov
mov
cmpsb
jmp
adc
shl
or
insb
dec
lock
aad
out
mov
fdivp
dec
sbb
movb
xor
cmp
jle
dec
ret
and
sbb
pop
xchg
js
push
cltd
pop
je
stos
outsb
dec
cmpsb
cmp
sub
mov
out
int
or
mov
dec
mov
dec
out
sbb
hlt
sbb
push
cmpsl
xchg
mov
test
fucom
dec
xchg
outsb
fstpt
ss
xor
jo
push
jl
in
sub
jp
push
int3
mov
xor
xchg
add
std
jo
bound
jecxz
ficoms
jnp
add
jbe
ja
lods
jno
call
and
pop
stos
cli
ret
das
mov
and
dec
ljmp
call
leave
mov
out
and
test
cli
sub
mov
sbb
aad
les
daa
mov
or
xor
rcl
mov
ds
insb
leave
in
out
sub
out
or
lret
lods
mov
std
xchg
push
mov
adc
jmp
imul
push
jnp
js
stos
stc
xchg
cwtl
jo
enter
pusha
inc
dec
mov
test
ror
subb
mov
push
jmp
stc
rcll
jne
ss
push
sub
int
xor
arpl
or
jmp
clc
dec
insl
ds
insl
and
movsb
lea
lea
sub
rcrb
scas
jb
lods
mov
imul
push
mov
test
or
or
add
icebp
sub
outsb
nop
adc
push
aad
popf
sub
mov
jno
daa
in
outsb
sub
mov
arpl
aaa
lods
mov
pop
jl
mov
pop
inc
and
je
mov
fwait
inc
and
es
sarl
outsl
push
or
lods
jmp
mov
ja
movsl
mov
fwait
test
or
push
pop
cmp
subb
sar
pop
pop
pop
jns
jmp
stos
notl
dec
movsb
roll
pop
or
clc
sbb
out
mov
scas
pop
pop
testb
aas
jne
cli
add
sbb
xor
xchg
pop
jp
or
push
sahf
pop
orb
daa
nop
dec
les
lret
adc
xchg
xor
addl
pop
mov
lea
arpl
js
mov
sar
adc
adc
cmp
xchg
dec
push
outsb
ja
push
xchg
hlt
xchg
loop
cmp
test
cmp
push
push
mov
sbb
jbe
loopne
or
jns
je
rcll
adc
loop
push
adc
adc
jb
push
add
inc
nop
adc
xchg
inc
mov
es
mov
pop
aad
add
jno
push
sub
mov
cmp
das
inc
pop
pop
ja
push
sub
movb
inc
xor
push
mov
arpl
fwait
js
xchg
popa
sbb
aaa
xor
mov
test
daa
insb
and
popa
xchg
shr
pop
lret
lret
jp
ud1
sar
andb
lea
test
sub
sbb
in
pop
testb
daa
lret
sbb
dec
outsb
cmpsl
push
xchg
mov
lds
or
xchg
pop
imul
push
fwait
inc
incb
mov
xchg
pop
xor
dec
repnz
pop
xor
stc
or
insb
daa
jg
and
pop
xor
sahf
inc
mov
jmp
inc
xor
dec
and
scas
cmp
jnp
test
xchg
add
and
sarl
stc
out
push
imul
das
scas
into
repz
adcb
lahf
inc
inc
lods
insb
nop
cmpsb
cmpxchg
test
mov
push
aad
inc
pop
pushw
js
sub
pop
xor
aaa
xor
imul
mov
mov
sar
movl
xchg
movsl
mov
xchg
push
mov
sub
mov
out
cmpsl
pusha
cli
mov
hlt
push
stc
ret
nop
lods
inc
imul
inc
cli
fidivrs
push
push
js
rcrl
cltd
pusha
cli
rcr
mov
cmpsb
push
inc
pop
xchg
aas
xchg
pop
cmpsb
push
ret
adc
popa
fcomp
xor
loopne
jb
leave
aam
insl
dec
out
nop
incl
or
push
leave
xchg
int3
roll
inc
push
sbb
push
mov
pushf
dec
mov
sbb
outsl
jp
dec
add
sub
mov
rorl
addr16
dec
mov
dec
cld
loopne
lret
aam
jbe
add
aam
mov
test
in
and
movsb
mov
mov
cmp
loope
mov
sbb
out
or
lret
ja
fildll
push
fisttpl
pop
pusha
lret
cmpsl
xchg
push
add
cld
push
clc
iret
mov
xor
mov
add
lods
push
fcmovbe
out
pusha
xor
and
rorb
scas
repnz
ret
lds
adcb
sti
clc
fildll
daa
clc
inc
mov
jge
repnz
add
or
add
jnp
bound
sarl
push
sbb
add
and
dec
repnz
out
jle
insb
mov
notl
pop
jns
inc
jns
flds
cmp
mov
pushw
popa
pop
sti
fsts
pop
dec
insb
add
push
sub
shll
ss
mov
in
add
ja
or
in
in
stos
jle
je
popf
adcb
mov
stc
fisttps
pop
push
cmpb
xor
stc
outsb
sub
and
mov
adc
add
outsl
lock
rcl
mov
sbb
orl
cld
jae
adc
adc
xchg
and
int3
adcb
and
dec
dec
and
fadds
std
ret
popa
fldt
mov
dec
jo
daa
jnp
aad
lock
pop
inc
orl
fdivrl
data16
dec
mov
rcl
add
in
loop
dec
push
lret
xchg
mov
bound
mov
cmc
mov
pusha
xchg
xchg
dec
in
cs
popa
jge
sub
shlb
outsl
mov
ja
mov
sub
pusha
adc
mov
jbe
popa
sbb
rorb
push
xacquire
daa
nop
mov
repnz
jg
shl
aas
cmp
inc
ljmp
ljmp
cmp
imul
rorl
mov
and
push
mov
lods
pop
cmp
jnp
shlb
push
or
js
out
dec
into
stos
dec
mov
lods
mov
xchg
cmp
mov
mov
fisubl
insl
adc
push
aam
jmp
cmp
mov
cmp
bound
in
jl
fwait
sub
or
jb
icebp
pop
or
mov
push
jae
sbb
cmp
sbb
add
icebp
mov
mov
popf
sub
cmp
inc
mov
icebp
dec
outsl
roll
ficomps
pop
jae
sarl
andb
mov
shrl
sahf
sbb
test
fwait
leave
push
or
imul
push
rcr
punpcklwd
jg
sbb
ds
mov
pushf
pop
adc
or
shl
and
xor
hlt
inc
outsl
pop
and
jne
sbb
adc
mov
mov
pop
mov
xchg
push
push
sbb
xor
bnd
leave
sbb
movsb
mov
insb
add
loopne
fstps
jp
icebp
bound
js
sub
adc
das
inc
push
enter
mov
jns
xor
mov
push
add
push
pop
mov
push
es
push
and
xor
jnp
sub
pop
dec
jae
out
lock
sbb
mov
shll
mov
xchg
sub
adc
enter
scas
and
jmp
rcrl
popa
sub
xor
push
mov
pop
pop
and
adc
lahf
sbb
push
out
jne
lds
or
sahf
add
cmp
inc
pusha
xchg
loopne
and
mov
mov
bound
popa
leave
xchg
pop
stos
adc
mov
sbb
pop
pop
ja
or
loope
mov
mov
mov
imul
in
fmull
cmpsb
push
mov
lret
lret
and
js
pushf
cmp
outsb
adc
out
xlat
fsubrs
movsl
out
adc
mov
jl
mov
sti
lds
sub
jle
pushf
adc
fmul
fwait
xchg
xor
hlt
and
cs
addr16
movsb
loop
ds
pop
cmc
sbb
add
push
loopne
inc
adc
or
icebp
cmp
lds
pop
cltd
fs
adc
iret
jb
ret
sbb
push
pop
mov
or
int
mov
dec
mov
jge
xlat
or
push
sub
arpl
rep
and
lock
sbb
daa
iret
jg
cmc
adc
out
aad
add
clc
xchg
sbb
call
xor
ds
cmpsb
jb
or
int
jbe
mov
popaw
xor
push
mov
xor
bound
out
jo
gs
aas
pop
or
dec
cmpsb
aad
repz
mov
pop
outsl
mov
ss
or
jne
adc
std
cmpsb
mov
popa
fnstcw
sbb
shrl
cmp
mov
shll
inc
xor
pop
pop
loope
pop
jle
stc
push
add
adc
std
mov
ljmp
in
insb
ficompl
sbb
dec
inc
out
push
pusha
push
les
jg
push
je
xor
cmp
cmpb
jae
jle
aas
push
push
mov
pop
add
mov
adc
sbb
aad
mov
pop
jbe
shlb
dec
fwait
cwtl
iret
cmp
mov
and
jmp
cli
mov
xchg
repz
pop
imul
stos
dec
jg
adc
sbb
jg
cmp
xor
nop
or
adc
std
jae
fdivr
or
and
sti
mov
pop
cmc
or
mov
sub
jmp
stos
mov
ja
mov
daa
rcr
out
js
or
cmp
pop
idiv
mov
jp
cmpsl
pop
imul
adc
jns
or
arpl
cmp
jmp
push
imul
test
mov
shlb
push
cld
ret
jnp
imul
sarb
scas
cs
push
ret
mov
push
xchg
das
ret
sub
bnd
jg
lret
jecxz
inc
lret
pop
loope
int
jbe
lea
mov
mov
rcrb
iret
shrl
rcr
fucomi
adc
sahf
stos
cmp
jp
push
pop
jb
push
ret
sahf
outsl
sbbb
lcall
test
ljmp
sahf
sarl
cs
ror
or
sub
push
sbb
es
leave
movsb
xor
mov
adc
cmp
and
dec
test
adc
inc
cltd
cmp
rcrl
nop
popf
imul
jns
jo
addr16
lods
adc
sub
inc
clc
stos
mull
popa
outsb
pusha
or
shll
mov
push
fs
jecxz
and
fsubl
fildll
jg
jo
pop
bound
sbb
dec
negl
ss
sub
push
outsl
stc
icebp
sub
mov
jecxz
and
sti
ds
and
ret
mov
sbb
arpl
test
xor
add
adc
cmpsb
xchg
cs
fbld
mov
loopne
fldcw
pusha
outsb
or
lahf
xchg
call
sti
add
sbb
inc
orb
inc
add
cmp
pop
cwtl
xor
mov
fiaddl
sub
repnz
xchg
addr16
daa
xor
inc
inc
scas
subl
rolb
cli
stc
leave
jnp
inc
popf
mov
mov
cmc
or
push
std
xor
jnp
lods
or
fcomp
in
cmpsl
cmc
push
ror
sub
mov
addl
xchg
adc
adc
scas
pop
mov
fidivrs
xorb
and
sbb
negl
ss
dec
and
mov
push
inc
mov
mov
dec
ljmp
lods
or
test
scas
je
jle
stc
mov
jae
adc
loopne
and
mov
jp
loop
xor
test
insl
mov
cmp
sbb
hlt
fs
jae
cmpsb
fldl
xchg
jo
mov
adc
jo
out
sbb
shlb
inc
pop
xchg
pop
sub
add
sub
cmp
lods
mov
inc
push
mov
stos
roll
std
and
lds
xchg
mov
gs
ret
xlat
and
push
xchg
cld
cs
push
mov
out
jmp
adc
jl
mov
push
loopne
sti
ret
clc
xchg
add
sbb
push
aas
in
inc
lea
mov
add
gs
pop
bound
jl
repz
xchg
inc
and
addr16
es
loope
push
inc
cmpsb
or
xchg
testl
and
dec
cli
push
insb
cld
dec
negl
lods
and
sbb
loopne
push
xor
mov
imul
adc
cmc
mov
fwait
jb
out
pop
mov
adc
mov
aad
sub
sbb
popl
xor
and
mov
fisubs
cli
aam
test
cmp
push
xchg
enter
mov
mov
in
rclb
inc
repnz
sbb
jmp
in
shll
data16
arpl
sahf
enter
push
sbb
outsb
xchg
lock
aas
insb
add
mov
enter
jbe
sbb
push
or
decl
fldt
mov
pop
push
test
jb
or
lret
sbb
sbb
sub
add
aad
inc
pop
pop
inc
jg
fwait
icebp
mov
lods
addr16
cwtl
xchg
outsb
shrb
sub
and
xchg
xchg
nop
add
jno
add
push
xor
push
and
sarb
dec
xchg
enter
fwait
int
test
aaa
and
add
cmp
xor
push
hlt
lods
in
sub
cmpsl
nop
sbb
push
rol
sub
rorl
cld
xor
shlb
mov
pop
daa
into
mov
inc
fwait
xor
inc
lods
dec
sub
out
test
outsl
in
es
xlat
sbb
cmp
faddl
ret
loope
push
and
aam
xchg
insl
inc
push
in
fdivr
adcb
adc
and
xchg
adc
xchg
imul
aaa
fcomi
mov
or
faddl
sub
in
mov
in
jecxz
jmp
jle
lcall
aad
stc
add
test
xchg
push
or
sbbb
rorl
mov
adc
fldl
push
jl
rorb
jo
mov
xor
fcoml
jge
in
jno
cmpsl
cmpsb
mov
jae
pop
std
jo
add
out
jmp
sbb
aam
mov
xor
jnp
dec
inc
stc
mov
jbe
jp
jl
loope
daa
pop
test
mov
das
fs
jmp
add
cmp
js
ja
inc
out
mov
sbb
jl
and
mov
cs
xor
into
dec
movsb
popf
rcr
add
mov
insb
mov
sbb
cmp
mov
pop
mov
test
hlt
sbb
addl
push
push
sub
cmp
dec
repz
mov
stc
push
inc
add
insb
mov
iret
pop
test
lods
sub
xor
lock
sbb
pop
mov
jb
loopne
outsl
dec
xchg
cmp
xchg
ds
imul
out
jp
push
fwait
pop
stos
scas
popa
mov
sbb
push
ljmp
fimuls
sbb
xor
test
orl
xor
imul
imul
cmc
cli
xlat
jne
pusha
and
jnp
in
popf
es
loop
ret
in
jge
popa
and
and
and
sbb
mov
jge
dec
dec
sbb
sbb
stos
sub
scas
jno
or
jo
mov
mov
test
dec
mov
repz
sub
cmpsb
pop
adc
shll
test
inc
push
ficoms
dec
sti
shl
gs
xchg
cmp
cmp
ljmp
sub
mov
or
xlat
add
fwait
dec
lods
pop
into
out
lock
cmp
aas
fnstsw
adc
jecxz
xor
pop
ds
cmp
lret
xlat
sbb
das
ja
mov
jne
sub
jne
push
outsl
pop
jnp
and
add
aaa
adc
and
push
ss
cmp
pop
outsl
inc
loope
or
xchg
popf
mov
cltd
cmp
pop
push
dec
pop
icebp
xor
pushf
mov
arpl
pop
pushf
dec
fistl
xchg
inc
cmp
xor
iret
orb
pusha
idivb
lahf
jle
cli
mov
leave
imul
sbb
and
inc
pushf
lock
jns
test
mov
lock
push
or
sbb
jle
test
mov
xor
pop
and
inc
fadds
imul
dec
inc
arpl
data16
pop
adc
hlt
or
push
cmc
push
bound
imul
arpl
loopne
or
jp
adc
add
or
sbb
shll
push
dec
ds
arpl
and
lods
mov
je
jp
mov
decb
jmp
sbb
ss
xchg
push
in
fisttpll
stos
jg
xlat
lret
pop
adc
push
ret
pop
js
jns
nop
ret
xlat
inc
inc
inc
adc
sub
repnz
out
in
mov
jb
jo
lret
fwait
inc
sub
or
mov
push
jmp
xlat
repnz
loope
cmp
inc
sarb
out
cmpsl
pop
idiv
jno
cs
sub
or
in
push
lahf
test
mov
mov
push
ror
in
mov
cmp
push
cmp
sub
pop
iret
btr
pop
sbb
dec
add
es
pop
popf
stc
loope
add
repz
mulb
fildl
imul
xor
pop
adc
jmp
imul
push
xor
adc
jns
mov
sub
mov
leave
insb
or
xchg
outsb
push
cmp
cltd
xchg
and
or
sbb
xchg
mov
je
in
hlt
ja
rcrl
test
aaa
cwtl
adc
mov
xlat
cld
aas
jno
lock
into
adc
mov
movsb
out
inc
pop
rcrb
inc
adc
dec
and
jmp
adcl
and
sbb
test
repz
test
push
loop
aam
in
insl
xor
push
jge
add
cmp
add
xchg
mov
lods
roll
test
fstl
fs
xor
lods
bound
dec
mov
push
push
into
jp
xchg
gs
pop
jno
adc
sub
push
icebp
out
in
outsl
or
jne
inc
sbb
jns
sbb
iret
jmp
pop
sub
cmc
adc
sbb
divps
jnp
push
out
push
pusha
lret
add
xor
cwtl
mov
jae
add
sbb
in
in
cmp
sar
arpl
bound
push
and
icebp
in
sub
in
pop
jno
cmp
shl
lea
fscale
cmp
sub
inc
dec
popf
ret
push
sbb
mov
cmp
std
jns
mov
rep
shl
push
xorl
pop
mov
test
enter
stc
add
and
mov
sbb
xor
leave
aam
lods
cmp
push
test
mov
pop
lret
xchg
dec
repz
rcl
xchg
sbb
repnz
es
xor
jl
and
pop
into
sbb
cmpsb
or
jne
lea
and
mov
cmp
outsb
dec
in
or
push
xchg
xchg
cwtl
pop
xchg
std
mov
or
cwtl
orl
cmp
into
sub
pop
loopne
xchg
cmp
xorb
push
mov
loope
xchg
inc
and
adc
enter
das
out
mov
out
sahf
fdivrs
mov
lods
test
mov
repz
inc
mov
cmpsl
cwtl
pop
jbe
and
cld
sub
push
enter
and
out
loop
cmpl
ja
cmpsl
mov
jmp
xchg
and
add
pop
es
popf
or
dec
sub
mov
js
stos
adc
pop
outsl
or
dec
lock
aaa
pushf
pop
dec
lods
fcomps
jmp
and
clc
sub
push
sub
addr16
pop
cwtl
cmp
sbb
cmp
add
add
stos
pop
push
loop
in
loopne
sub
adc
daa
mov
popf
push
daa
mov
hlt
mov
push
push
std
sub
cmpsb
std
jle
movsl
sbb
or
jle
or
pop
mov
push
and
cmp
sbb
push
xlat
jne
lods
add
cld
sbb
movsl
outsl
insl
pop
popa
xchg
pop
jnp
pusha
ja
sub
int
int3
dec
leave
bound
mov
imul
jge
jb
out
or
mov
lods
pop
add
aad
lret
call
out
fsub
stos
adc
push
cmpsb
out
cmpsl
lcall
fadd
pop
xor
lret
in
jmp
scas
test
push
shl
pop
lods
jo
arpl
int3
push
popa
sahf
pop
sub
mov
pop
int3
jmp
lret
notl
popf
adc
sub
stos
test
mov
dec
or
jo
lahf
add
outsl
jecxz
or
and
loopne
cmp
mov
fs
inc
xlat
push
lock
jns
pop
cmp
ret
xchg
add
xor
jle
pop
movsl
orb
mov
in
incl
mov
addb
inc
pop
das
add
sub
jecxz
sub
ret
cmc
aam
jmp
mov
cmp
sbbb
cmpb
inc
mov
test
lcall
mov
out
ds
pop
adc
cmp
cmp
xor
cmpsb
sbb
roll
jp
ret
stos
push
ljmp
pop
mov
and
pusha
mov
test
push
sahf
or
fcmove
shll
addr16
dec
xor
xor
xlat
and
popf
and
pushf
sub
xchg
out
jns
stc
jg
mov
adc
pop
pop
jb
and
jns
dec
xchg
subl
sub
xchg
jl
xor
gs
cmp
mov
in
sbb
decb
push
in
jbe
mov
mov
enter
pop
mov
lods
or
out
dec
cmc
popf
jbe
std
std
push
scas
arpl
out
sbb
addr16
call
jb
xor
sub
jge
adc
mov
mov
dec
movsb
xor
out
push
jmp
pop
je
int
fsts
into
cli
mov
xor
mov
pop
inc
popf
fwait
jecxz
mov
sub
push
pop
push
aad
xchg
push
push
ja
mov
addr16
popf
add
pop
and
clc
inc
sbb
sbb
jb
ja
inc
mov
mov
call
lods
out
shl
xor
xchg
pop
mov
add
inc
pop
in
or
xor
adc
out
mov
decl
rol
ljmp
sub
mov
addb
cmp
test
mov
movsl
imul
mov
mov
pop
daa
pop
imulb
dec
or
inc
mov
vucomiss
pop
dec
xchg
jge
xchg
push
sbb
bnd
hlt
adc
popa
xchg
dec
movsl
push
stc
xchg
push
jecxz
andl
and
repnz
mov
test
pop
movsb
adc
outsb
shll
call
test
sub
leave
cmp
cmp
ret
iret
loop
nop
gs
test
icebp
mov
add
dec
inc
das
fistl
lock
decl
lods
cli
sub
sub
cmp
mov
int
push
lea
mov
pop
sub
jge
adc
xlat
stos
out
push
fisttps
hlt
pop
and
js
pop
into
sub
int3
rcrb
rolb
into
inc
or
mov
insb
cmpb
jl
data16
fimuls
mov
shlb
daa
jb
inc
mov
add
adc
cmp
aaa
and
out
xor
adc
fldt
sub
sub
dec
int3
aam
sbb
inc
mov
mov
adc
jbe
bound
gs
jge
push
js
sahf
pop
sbb
mov
lock
mov
mov
enter
rolb
fstpl
addl
pop
daa
sbb
iret
cli
out
inc
jmp
jne
dec
scas
sub
jmp
lods
fsubl
outsl
mov
addr16
addr16
pushw
mov
cmpsb
cmp
cmp
mov
loopne
aaa
cmp
aas
fwait
jb
dec
mov
fwait
mov
aas
cli
pop
scas
data16
mov
cmc
mov
and
or
loope
xchg
cmp
jg
sarl
jnp
fsubl
pop
test
xor
mov
push
fucom
fdivp
mov
jae
test
push
cmpb
lods
fwait
jnp
jmp
addr16
lahf
leave
mov
or
mov
pusha
int
or
pop
andl
inc
xorl
cmpsb
mov
mov
sbb
mov
xchg
std
push
mov
xchg
sub
push
cwtl
and
stos
push
mov
push
xor
add
cmpsl
jmp
iret
shlb
mov
inc
mov
mov
jmp
outsb
fstpt
lret
mov
arpl
aad
popa
aas
fidivs
add
or
xchg
xor
stos
mov
fldl
fsubr
or
cmpsl
mov
mov
arpl
add
pop
push
push
dec
mov
aas
lock
std
and
and
mov
cli
and
iret
incl
jmp
scas
sub
in
adc
mov
pop
pop
mov
repnz
xor
xchg
call
test
xchg
mul
xchg
js
cmc
mov
xlat
xlat
and
jl
inc
adc
daa
pop
lock
popf
clc
mov
shlb
jp
pushf
test
cmp
jmpw
push
push
es
rep
pop
or
inc
mov
rcr
out
sahf
repz
cs
shl
adc
loop
fldl
sbb
incl
xchg
out
pop
leave
out
adc
data16
ljmp
pop
xchg
push
jg
push
dec
maxps
pop
rol
fs
sub
decb
cmp
gs
push
push
outsl
inc
pop
loopne
inc
inc
sub
pop
out
into
xor
xchg
jg
mov
xchg
jns
cmp
jecxz
push
push
sbb
sbb
jns
adc
inc
stos
addl
mov
pusha
int3
sbb
mov
in
add
fisubrs
inc
int3
sti
es
loop
movsb
in
daa
lock
push
aaa
push
adc
xchg
jbe
add
lods
fsub
dec
inc
sub
mov
aam
je
mov
mov
push
movsl
ret
cwtl
mov
stos
outsl
push
push
pop
jge
cmp
cmp
out
xlat
ds
fnstsw
pop
fisubrl
scas
add
shlb
fdivrl
push
and
add
xlat
outsl
out
dec
cmp
xchg
mov
mov
fstpl
and
je
in
call
add
add
add
mov
dec
ss
enter
cmp
decl
push
ret
ljmp
add
in
jb
iret
and
pushf
and
cmp
inc
rcrl
or
xchg
pushf
fdivs
loopne
push
jl
jl
push
scas
push
mov
popa
pop
push
add
shlb
adc
loope
xor
sub
cmp
xor
cld
dec
popf
xlat
stos
pusha
add
stos
xchg
daa
xchg
jmp
rep
dec
push
cmp
loop
adc
sbb
add
shlb
jbe
fwait
shrl
pop
jg
adc
stos
nop
sbb
sub
push
pop
pop
and
inc
rolb
iret
les
jg
inc
or
and
imul
sub
mov
jmp
sub
mov
inc
testb
in
mov
lahf
push
hlt
mov
jbe
aaa
add
mov
cmp
adc
mov
ficoms
pop
dec
xor
mov
ja
shl
dec
ljmp
sahf
jmp
and
adcb
loopne
enter
in
rolb
sbb
xchg
dec
lods
or
dec
pop
dec
test
inc
cmp
les
aas
test
mov
mov
hlt
mov
jno
mov
test
pop
movsl
cmp
pop
inc
leave
jno
je
inc
jno
mov
xchg
mov
sbb
dec
loop
scas
sub
dec
in
adc
ds
adc
and
ds
scas
sub
lods
das
sub
scas
pop
mov
ret
sub
es
mov
psubusw
faddp
in
xchg
dec
xor
xchg
lods
add
xchg
lret
add
cmp
and
push
cmpsb
out
fsubrs
sahf
cmp
aaa
push
loopne
jge
loop
movsb
mov
pop
lds
ret
pusha
push
ds
fsubp
rorb
pop
mov
fdivr
mov
cmp
fdivl
mov
adc
movsb
int3
hlt
lods
cs
or
push
dec
rclb
cmp
das
xchg
pusha
popf
stc
cld
iret
lahf
sbb
outsl
in
aad
pop
xor
std
cmpsl
out
sbb
imul
adc
jns
leave
sbb
jp
xor
cmp
inc
cltd
out
repnz
dec
inc
loope
call
shlb
std
mov
pop
xchg
rcl
sbb
xor
push
xchg
xchg
and
lret
out
adc
sbb
or
xor
adc
cs
dec
lcall
or
push
add
xchg
sbb
cltd
sbb
out
add
in
and
mov
stos
popa
push
fistpll
ljmp
sar
cmpsb
out
out
fs
jecxz
daa
cmp
push
movsl
fwait
sti
jl
dec
mov
shr
push
cmc
and
add
sti
ljmp
jb
call
jmp
lcall
mov
push
lret
xor
jge
clc
or
mov
shlb
lds
mov
rep
into
mov
lods
test
xchg
push
clc
pop
jg
shll
xchg
mov
xchg
cmc
push
pop
outsl
mov
test
or
frstor
clc
mov
mov
negb
jb
adc
fcoms
and
idivl
cmp
scas
out
es
mov
xchg
cmp
ss
mov
adc
ret
mov
lcall
dec
imul
xchg
mov
push
lret
inc
scas
imul
sub
es
jmp
inc
xchg
ret
dec
aad
pop
insb
in
flds
pop
push
xor
shll
dec
and
adc
inc
mov
mov
add
sbb
stos
scas
xchg
lods
mov
mov
es
addl
loop
leave
ret
mov
mov
mov
pop
test
xchg
mov
sbb
mov
iret
sbb
stc
das
adc
shr
cmc
out
cwtl
sbb
xlat
je
fstl
push
subl
fldl
aaa
subb
ret
xchg
sbb
das
xlat
jae
fnsave
hlt
or
push
fildll
xor
jl
call
aad
subb
fs
jbe
jne
cmpsb
nop
add
inc
test
add
test
insb
xchg
rcrl
popf
jle
out
and
jg
fwait
mov
xchg
dec
jge
jne
sub
insl
icebp
mov
test
sub
lcall
xchg
inc
mov
js
stos
fcmovb
daa
and
cmp
ds
movl
mov
mov
xor
inc
xchg
lret
repz
or
popf
insb
sbb
sub
mov
cmp
sbb
mov
int
inc
dec
mov
das
rcll
or
mov
xor
loop
or
cwtl
inc
jmp
push
notl
or
popa
jle
adc
inc
in
call
sub
dec
and
in
lret
rorl
and
call
jg
lock
lea
xor
aas
stos
xchg
jns
lcall
push
add
mov
ret
testb
push
and
pusha
sub
sub
mov
scas
lods
fcomip
outsb
and
dec
xchg
inc
add
sbb
out
cmp
add
pop
mov
fcomps
push
rolb
iret
pop
lods
insb
xor
inc
mov
aam
in
scas
jno
mov
cmc
icebp
mov
inc
mov
inc
mov
jns
iret
pop
outsb
daa
clc
sahf
mov
sub
xor
decb
dec
cli
push
pop
icebp
jmp
imul
xchg
shll
push
insb
mov
and
mov
mov
hlt
scas
inc
push
cwtl
sbb
imul
out
fstl
xchg
xor
fs
jmp
dec
pop
push
xchg
roll
jno
push
cltd
sbb
scas
jae
and
sub
and
push
gs
lret
cmc
pop
inc
aam
xor
cwtl
push
int3
push
dec
aad
adc
fisubrs
jmp
inc
push
xchg
test
lods
cmpsl
dec
pushf
in
lods
test
xor
push
pop
xchg
sub
lea
pop
pop
and
lret
mov
pop
and
adc
mov
int
cmpsl
mov
popa
incb
jb
cltd
inc
sbb
fwait
mov
cld
xlat
lock
pop
and
pop
xchg
push
adc
jo
add
js
push
and
xor
xchg
pushf
cmc
loopne
add
push
lahf
fcomps
mov
movsl
mov
into
xor
or
addl
shrl
xor
mov
jl
cmp
loop
loopne
jo
rorl
and
rorl
or
sbb
jbe
fnstsw
call
mov
sub
cmpsl
inc
and
mov
pop
push
fimull
dec
in
sub
les
adc
ficoml
fisttpll
push
stos
inc
int3
dec
mov
ss
mov
enter
jle
sub
add
or
mov
push
int
xchg
sti
jns
push
fdivrl
dec
pop
fldenv
shl
shll
scas
add
adc
adc
insb
sti
test
sub
aaa
std
fsubrs
jo
imul
fidivrl
paddd
cmpsb
inc
cmpsb
xchg
test
push
in
mov
repnz
inc
popf
xchg
mov
jge
mov
int3
aas
cli
ja
mov
subl
gs
cld
mov
loopne
jae
int
loope
pop
fdivrs
mov
jno
les
inc
pushf
js
daa
repnz
jno
mov
cmc
push
push
jb
ss
aas
and
mov
mov
pop
pop
es
sbb
cltd
add
out
inc
mov
xchg
lret
adc
jl
inc
sbb
mov
sub
mov
adc
jbe
data16
mov
sti
out
xor
int
and
scas
and
push
dec
add
add
adc
mov
add
xorl
bound
fldenv
hlt
jp
xchg
into
mov
mov
icebp
jnp
dec
popf
xor
nop
jns
bound
jbe
jmp
mov
pop
dec
mov
sarl
inc
shl
push
aad
dec
popl
fdivr
imul
iret
jle
mov
dec
enter
shll
xchg
dec
xor
mov
inc
inc
xchg
cmpsb
jp
mov
jecxz
push
mov
mov
xchg
out
ret
repnz
sbb
roll
mov
pop
stc
popa
mov
jne
add
int3
add
es
sbb
bound
mov
xor
jns
add
icebp
push
mov
inc
jae
adc
in
jmp
pop
and
sti
fistpll
sti
dec
aad
lea
fwait
daa
lods
lods
std
fimull
jno
mov
mov
pop
das
jne,pt
cmp
dec
sub
sub
mov
jbe
rcl
mov
movsb
jae
xor
inc
int
jp
xor
cmp
pop
icebp
clc
in
jnp
sbb
xchg
test
push
icebp
jns
sub
das
push
sub
xor
cmp
mov
jbe
stos
cmc
out
lock
add
data16
ficoml
xchg
dec
jmp
mov
push
push
ja
ret
pop
mov
or
or
sbb
xchg
icebp
or
dec
mov
jne
ja
dec
add
leave
xchg
repz
int3
movsb
mov
fidivrs
sub
push
inc
pop
pop
rcr
push
icebp
dec
push
repz
add
push
push
jne
fmuls
sub
shlb
test
adc
sub
jbe
jmp
add
aad
jg
movsl
adc
xor
lcall
adc
push
xor
xchg
or
orb
scas
mov
add
xchg
mov
lods
lods
int
push
sahf
jo
dec
data16
testl
lock
icebp
jmp
pop
cmp
fnstcw
fisttpl
cmp
clc
je
sbb
dec
pushf
testb
sbb
loop
mov
aas
xchg
cli
les
outsb
loope
and
mov
pop
fdivs
sub
jnp
adc
test
lcall
hlt
scas
adc
dec
mov
scas
xor
inc
repnz
repz
sub
sub
xor
out
shlb
pop
dec
xor
jnp
les
fs
rcll
adc
adc
and
dec
sub
push
in
add
sbb
pop
outsb
cmp
mov
adc
pop
push
das
fldl
push
xchg
int3
mov
push
andb
xlat
mov
pop
js
mov
sar
test
bound
into
ja
jl
mov
dec
sbb
ss
rdmsr
aad
iret
add
mov
out
pop
addr16
mov
daa
and
aam
ljmp
dec
imul
push
clc
pop
faddp
aas
aas
sbb
ljmp
mov
mov
outsl
xor
cmc
inc
push
sub
cld
out
cmp
movsb
mov
insb
insl
ss
sub
popa
lock
popf
pusha
cmc
movsl
push
or
subb
sarl
cmp
mov
fmuls
dec
adc
push
jl
loope
mov
out
dec
popf
and
clc
rcr
in
icebp
ja
xor
mov
or
push
push
iret
repz
stos
lret
aad
fdivrs
pop
lret
cld
and
fldcw
cmpl
fnop
jle
push
pop
pop
fstps
xchg
lds
lcall
les
or
push
push
jge
cmp
pushf
data16
loope
mov
cmpsb
mov
xchg
dec
das
mov
jecxz
cli
pop
ror
jge
loopne
pop
cwtl
sbb
sti
jae
cmc
or
test
mov
jl
jp
sar
push
jnp
arpl
mov
cli
add
mov
pop
adc
popa
lock
push
jp
adc
lds
stos
insl
xor
pop
lret
dec
stc
push
ljmp
mov
in
outsl
ja
popa
xchg
xchg
pop
lods
inc
clc
jl
dec
nop
dec
lahf
std
pop
movsb
mov
lcall
or
push
pop
pop
lcall
jl
cmc
dec
dec
dec
jle
imul
imul
push
cmpsl
dec
ret
insl
test
insl
xchg
adc
xchg
xlat
mov
outsb
aad
push
loop
and
negl
nop
lods
imul
jle
or
pop
in
jb
insb
push
mov
or
ljmp
loope
mov
push
mov
add
cmp
dec
jmp
int
sbbb
data16
xor
sbb
jns
and
xor
mov
mov
mov
mov
pushf
aas
mov
mov
pushl
dec
addr16
addl
leave
int
cmp
out
add
jno
cld
xor
inc
fistpl
mov
cmp
dec
sbb
in
call
iret
pop
imul
and
pop
outsb
mov
js
enter
lret
in
pop
call
inc
jb
lds
mov
lea
lret
sbb
or
shl
mov
aam
fwait
test
mov
dec
mulb
or
in
adcb
pop
scas
nop
xor
out
sahf
or
fldl
pop
popa
arpl
inc
aas
sub
lods
sbb
es
mov
scas
or
shrl
mov
xor
mov
cwtl
jge
dec
fmul
call
mov
movsb
sbb
mov
sub
decl
outsl
mov
pop
sbb
call
jle
test
push
sbb
fsts
and
mov
fdivrl
rol
adc
stc
mov
in
popl
push
jmp
adc
ret
jmp
lea
ret
xchg
and
fs
stos
cmp
iret
mov
xchg
and
jo
jge
jo
fcomi
cli
cmpsl
adc
fsubrp
cmc
push
adc
jmp
jbe
outsl
pop
inc
pop
xor
lret
sahf
pcmpeqd
std
das
cmp
adc
ljmp
cli
lret
negl
popf
outsb
mov
pushl
add
and
jo
push
icebp
pop
rcr
nop
and
subl
clc
loop
sub
inc
jo
stc
jg
and
ffreep
jg
in
inc
and
jne
cwtl
cmp
daa
test
mov
stos
inc
gs
pop
out
inc
xchg
or
or
push
sbb
in
movsb
cli
xchg
je
hlt
fstps
push
fidivs
pop
pop
fs
pop
mov
jle
shrl
ja
movsb
xchg
mov
inc
jl
das
test
push
pop
cmp
repz
lret
push
stos
xchg
jg
loop
mov
jno
sarl
dec
inc
lea
pop
pop
ret
xchg
xchg
sub
cmp
negl
jmp
fmuls
or
and
sti
sub
mov
outsl
ljmp
loopne
iret
dec
fistps
push
out
sbb
inc
int3
jmp
pop
jo
sahf
sub
mov
mov
cmp
inc
xchg
mov
inc
arpl
adc
js
xor
repz
out
cs
pop
dec
inc
xchg
push
sbb
stos
jmp
sbb
xor
sub
xchg
aas
sub
add
jno
ljmp
in
or
negl
mov
pop
lock
sbb
lds
scas
cmc
filds
sub
and
orb
xchg
cmpsb
add
test
push
pop
loope
fsubrl
scas
not
mov
mov
lcall
adc
fdivl
ss
js
inc
jne
sub
lea
loopne
ja
sbb
nop
pop
aaa
prefetch
push
into
pop
ficomps
lods
push
pop
mov
outsl
and
mov
mov
adc
loopne
push
imul
leave
das
mov
push
fcoml
dec
lret
sub
sbb
stos
mov
imul
xchg
inc
rcll
je
sbbb
xchg
cmp
or
jg
dec
jne
out
push
addr16
call
dec
imul
and
into
pop
xchg
and
pop
pop
popf
xchg
dec
icebp
sbb
call
fnstenv
mov
rcr
addb
orl
iret
stos
shr
mov
shlb
pop
and
dec
push
xor
add
stos
fmul
cld
mov
cmpsl
ljmp
les
push
ljmp
testl
xor
mov
xchg
pop
lods
xchg
cmp
adc
dec
or
testb
pop
loop
iret
sub
add
jns
stc
sbb
xor
inc
int3
into
sub
and
aad
or
push
aam
mov
xor
cltd
cli
loop
ljmp
pop
and
lea
sar
cmp
aas
outsl
repz
xchg
pusha
xchg
or
or
in
mov
cmp
jp
and
or
sahf
icebp
add
in
and
mov
sbb
jecxz
mov
test
inc
movsb
push
jmp
dec
mov
imul
dec
insb
pop
mov
xlat
pop
sahf
repnz
push
mov
add
subb
shr
dec
sbb
hlt
jg
sbb
mov
mov
jle
push
adc
movsl
sbb
out
loop
insb
aam
mov
cmpsl
nop
mov
jbe
insb
xchg
cwtl
xlat
add
cld
add
ljmp
push
aaa
push
push
push
sbb
in
mov
insb
sbbl
xor
ret
xchg
xor
popf
in
xchg
mov
rorl
sbbl
bound
popf
data16
mov
pop
inc
int3
push
test
mov
mov
jle
lahf
or
pop
xlat
decb
add
cld
pusha
mov
jno
add
fcmovu
dec
popa
inc
mov
insl
cmp
fcoml
xchg
adc
push
lea
jecxz
mov
fsubrs
pop
arpl
add
mov
sbb
outsl
ljmp
add
xchg
mov
aad
ss
lcall
call
jno
inc
jge
jmp
fstpt
ret
out
stos
xchg
sbb
adc
ret
iret
loope
or
mov
sub
push
mov
and
jo
adc
rcrl
jo
out
add
xor
inc
ljmp
lea
pop
je
ss
add
mov
in
cld
bound
orb
dec
cmp
cmovae
es
movsl
mov
mov
mov
cld
jmp
sub
push
rorb
mov
push
jecxz
pusha
mov
cmp
in
mov
lods
loope
es
and
sub
inc
jno
out
fucom
int
andl
or
sub
adc
iret
adc
mov
addr16
jae
aas
andb
dec
pusha
pop
mov
xchg
loope
orl
push
stos
inc
rorl
fwait
mov
xchg
add
sbb
xchg
sbb
push
lahf
cmp
add
sbb
and
cmp
sub
cmpsl
loope
aas
fists
int3
icebp
jle
pop
push
sub
jle
lock
test
jb
mov
lock
or
xor
dec
xor
js
fiaddl
repnz
push
je
add
ret
in
inc
xor
lock
sub
daa
ficomps
jnp
xor
test
lds
mov
scas
sub
mov
mov
and
mov
iret
jno
pop
in
in
xchg
mov
inc
mov
mov
bound
idivb
sub
mov
dec
inc
stos
rol
imul
inc
mov
jmp
jae
ljmp
sub
pop
movsl
lahf
movaps
add
jecxz
sbb
mov
adc
xchg
jmp
addb
push
sub
jle
pop
int3
pop
push
cmc
fcomp
xchg
jmp
ror
push
push
cmovb
cld
mov
cmc
xorl
cmpsb
xor
icebp
and
push
fildll
push
add
pusha
push
pop
mov
mov
xor
outsl
xchg
mov
testl
pop
mov
push
ret
fidivl
movsl
call
mov
xchg
mov
sbb
inc
lock
cmp
popa
push
xor
pusha
jecxz
push
outsl
jo
add
xor
push
and
dec
les
std
sbb
xor
xor
rcr
ret
rorl
enter
inc
cmp
je
lods
adcl
lret
add
loopne
adc
out
fcompl
vpsrldq
add
arpl
jns
jmp
ret
cmp
call
cmp
mulps
mov
mov
cmp
or
imul
pop
sub
sbb
inc
fadds
xor
cmp
shrl
jo
and
push
mov
mov
enter
mov
jns
repz
cmp
xchg
iret
pop
jns
das
daa
mov
ljmp
inc
adc
xchg
mov
lods
filds
xchg
popf
into
pop
mov
pushf
cmp
fmuls
jne
pop
test
lahf
lahf
loope
jmp
sbb
mov
inc
pop
jbe
jmp
sub
sbb
fstps
dec
ss
xor
or
leave
clc
jmp
pop
and
xchg
xlat
ss
daa
lods
cmp
add
jae
int3
mov
dec
lods
enter
into
ret
hlt
pop
add
pop
imul
sbb
jg
ret
into
xor
mov
test
add
mov
mov
pop
ret
adc
push
pop
cmp
js
pop
jo
lods
push
stos
test
in
les
mov
loop
and
mov
inc
mov
add
rcll
adc
scas
in
inc
adc
xor
push
pusha
and
jne
xor
jg
lahf
fdivr
aaa
insb
pop
pop
inc
add
stc
cmpl
stos
xlat
mov
mov
push
sub
lret
cmp
jge
cmp
xor
test
stos
xor
and
adc
xchg
test
pop
int3
adc
jne
cli
inc
inc
mov
arpl
and
int
and
add
jecxz
imul
pop
call
fdivr
or
push
xor
int
repz
lock
cmc
xor
cmpsl
push
sub
fucomip
xchg
daa
fidivs
push
arpl
nop
inc
xor
je
jmp
js
stos
jne
hlt
icebp
jp
lcall
ss
pop
iret
call
in
inc
lods
sub
sbb
xchg
mov
mov
divl
scas
push
loopne
add
lahf
push
mov
pop
dec
aas
jne
stos
pop
ja
xchg
pop
inc
sub
push
sbb
pusha
idiv
sub
lock
rorb
repz
xlat
xchg
mov
imull
add
ds
cmp
out
es
into
inc
scas
addr16
fsin
mov
inc
out
icebp
xchg
jo
pop
cli
nop
inc
cltd
push
inc
or
fcoms
add
dec
scas
out
lea
mov
out
pop
fcoms
loop
adc
daa
aad
or
push
or
lcall
jb
xchg
fisubrl
mov
test
in
push
loopne
les
clc
mov
push
gs
test
push
mov
inc
push
clc
add
pop
arpl
mov
int3
jg
insl
ss
dec
and
inc
popf
add
and
inc
pushf
xor
pop
lds
pop
jno
lods
add
ss
push
and
and
aas
arpl
add
test
push
pop
jge
sbbl
imul
jb
into
loop
lock
rorb
repnz
pop
pop
addr16
call
cmp
jmp
xor
dec
sbbb
bound
jne
or
add
lcall
mov
dec
test
insl
cwtl
fsubl
push
sbb
cli
sbb
or
pop
sub
push
ret
pop
movsl
ret
imul
pop
aam
aas
xchg
pop
leave
fsubs
imul
sub
nop
sub
and
inc
xchg
or
out
bt
xor
jmp
lock
mov
jns
mov
into
pop
sbb
out
sub
test
pop
clc
or
xlat
and
adcb
mov
rcll
jo
xchg
push
std
and
fcmovbe
sbb
dec
xchg
daa
sar
adc
pop
mov
sub
dec
mov
xor
test
cld
push
stos
push
sahf
stos
fmuls
mov
lods
xor
adc
pop
inc
push
pop
inc
xor
mov
adc
dec
rorb
arpl
sbb
out
dec
les
add
mov
and
xlat
jns
jp
push
or
test
mov
add
std
out
jne
add
cmp
pop
popa
xchg
inc
sbb
or
cld
push
mov
mov
in
and
aaa
cwtl
imul
push
je
lea
popa
pop
in
and
ret
inc
xchg
adc
pop
out
and
xchg
jne
add
add
call
and
addl
adc
jae
dec
pop
shr
lret
pop
lret
mov
mov
mov
cmp
inc
xchg
js
lods
push
jle
fidivs
xor
out
sub
flds
gs
lea
xor
mov
sub
adc
push
cmp
cmc
pop
sbb
mov
sbb
outsl
cmc
loop
in
popa
pop
push
xor
jg
cli
push
xor
xchg
mov
push
push
fstl
mov
mov
xor
jge
not
mov
outsl
out
arpl
mov
je
lods
jmp
inc
fisubs
dec
inc
jg
push
je
push
xor
cmp
data16
sub
and
int3
fildll
pop
stos
scas
cmc
and
mov
test
jo
jnp
roll
pop
mov
std
mov
or
push
xchg
dec
dec
or
stos
out
dec
in
insl
xor
adc
adc
rorb
rcrb
dec
rorl
push
jnp
out
and
sbb
test
mov
push
cmp
inc
aam
jne
inc
pop
xchg
test
in
xchg
push
xchg
ja
jmp
mov
ljmp
add
mov
sbb
mov
pushf
loop
push
subb
or
adc
mov
subl
dec
mov
push
or
mov
jae
js
mov
lahf
push
jmp
test
ficomps
iret
cwtl
aam
pop
or
stos
inc
inc
hlt
sbb
lcall
pop
push
hlt
inc
cmp
cmp
adc
in
pushf
ja
sbb
dec
inc
fmul
sbb
or
out
push
push
cli
add
std
ds
pop
dec
cmp
or
jp
mov
add
and
inc
sbb
cltd
dec
inc
rcrl
orb
rorl
dec
mov
fldcw
sub
and
cwtl
xor
cmp
jne
dec
scas
rcr
mov
fs
outsl
xchg
push
nop
js
int3
stos
bnd
pusha
repnz
cmp
js
leave
ret
dec
xchg
push
aam
stos
pop
cli
aaa
jno
xor
lods
xchg
leave
scas
out
out
cwtl
inc
inc
cmp
dec
sarl
in
jb
lds
mov
or
ja
insb
loopne
std
lret
pop
les
into
mov
js
push
movsb
fisubl
mov
sub
or
xchg
jae
mov
fsub
call
pushf
cmp
mov
iret
lods
jecxz
mov
out
mov
inc
sbb
push
mov
inc
ljmp
test
adcb
xchg
pop
mov
decb
iret
sub
adc
sbb
out
fnstsw
rep
out
adc
mov
aad
or
cmpsl
ret
negl
sub
js
popa
int
push
xchg
test
xchg
adc
push
push
jle
xchg
pop
inc
je
xchg
dec
mov
outsb
pop
mov
push
adc
iret
add
lods
outsl
sbb
jle
ss
int
jns,pt
add
lret
push
jl
cltd
fnstenv
add
sbb
sbb
movsb
cmp
cmp
pusha
xor
and
pop
aaa
aaa
das
add
fst
mov
adc
fisubrl
in
inc
dec
repz
mov
adc
iret
bound
xlat
pop
cmp
lock
sbb
mov
subl
inc
nop
std
adc
dec
pop
data16
dec
stos
je
xchg
push
dec
sbb
mov
dec
push
xchg
or
add
push
cld
pusha
loope
outsb
movsb
pop
lds
fldt
inc
std
sub
cmpl
movsl
dec
fmuls
outsb
or
cs
dec
xor
cmp
or
dec
fildl
push
pop
jecxz
inc
in
iret
pop
pop
mov
mov
popa
lret
loop
pop
aas
xchg
insl
shlb
push
mov
out
sbb
push
imul
aas
pop
jnp
and
sbbl
sti
leave
pop
mov
testl
mov
cmpsl
mov
sbb
out
cmpsl
popf
mov
jmp
mov
shll
sahf
ljmp
icebp
inc
ret
sbb
pusha
outsl
rcrb
test
sbb
cmpsl
jge
push
mov
ret
pop
push
icebp
movsl
clc
sbb
ja
dec
sbb
idivl
jae
out
data16
xor
mov
jle
popa
push
mov
out
push
inc
jbe
mov
add
dec
test
clc
jp
pop
sbb
inc
jns
jbe
cld
and
jbe
xor
ret
cwtl
outsb
outsl
push
add
pop
aam
and
xor
scas
ljmp
decl
mov
in
leave
sahf
out
sahf
or
icebp
aas
jl
xchg
dec
inc
ficomps
mov
inc
bound
andl
and
test
imul
lahf
dec
pushf
jb
call
pop
lahf
add
jg
sub
xchg
pushf
add
push
jae
mov
and
imul
add
dec
xor
sbb
clc
mov
adc
mov
arpl
les
sbb
lds
repz
ret
scas
stc
repnz
fwait
in
mov
jns
ret
aam
or
dec
out
push
mov
mov
loop
xchg
inc
sub
rorl
sbb
mov
imul
and
sbb
mov
movsl
ja
sbb
pop
adc
idiv
push
adc
mov
popa
icebp
or
mov
push
fldenv
sti
aam
lahf
into
push
pop
mov
mov
push
ds
into
js
dec
int3
cmpsl
and
loopne
sbb
mov
jg
mov
orb
fimuls
rclb
or
rcrb
sahf
add
bswap
cs
rolb
push
jmp
int
xor
push
push
inc
add
les
xchg
xchg
mov
gs
out
call
movsl
and
push
in
nop
dec
xor
cmp
lods
or
test
inc
and
sbb
xchg
out
jmp
loop
icebp
sti
in
pop
inc
loopne
push
push
mov
and
inc
push
jl
lea
clc
or
push
sbb
xor
bound
vpcomb
pusha
ror
push
xor
imul
cmpsl
xchg
leave
push
shll
sbb
jp
xchg
or
outsl
mov
mov
fldt
imul
mov
mov
xchg
mov
mov
mov
jb
jge
mov
ds
shlb
mov
jbe
push
jae
loopne
mov
add
inc
fldenv
xlat
fadds
push
das
jge
mov
push
push
sbb
popf
icebp
dec
movsb
adc
pop
cmpb
outsb
mov
in
mov
rcrl
or
mov
cmp
pop
inc
das
sub
dec
sti
push
stos
insb
push
lahf
das
lahf
push
enter
and
jmp
cmpsb
ljmp
xor
insb
lret
leave
hlt
jb
clc
ja
ds
push
fisttpl
loope
and
add
mov
or
mov
mov
add
inc
pop
in
in
push
adc
mov
pop
cmp
out
pop
mov
add
call
movsb
inc
or
call
rcll
arpl
mov
mov
mov
xor
loop
je
xchg
cli
cli
in
push
push
clc
add
je
or
or
pop
fbld
loopne
sbb
jp
lods
pop
scas
pop
lods
or
mov
lret
filds
and
test
int
lret
lea
shl
imul
cli
lahf
repnz
inc
lock
pop
push
push
cmc
das
aas
push
cli
mov
mov
and
test
lods
xor
xor
mov
out
dec
mov
jb
or
inc
adc
pop
inc
mov
lcall
lock
or
enter
int3
dec
in
mov
xor
xorl
inc
xchg
fadds
xor
jp
rorb
xchg
adc
xchg
xor
sbb
stos
inc
or
or
jno
imul
push
xchg
in
sub
ds
arpl
aad
cld
jl
jb
call
cmpsb
inc
cld
dec
movsl
test
shl
or
inc
or
dec
sarb
into
imul
shll
rclb
xchg
sbb
jns
shrb
dec
jl
dec
push
test
stc
xor
rcrl
xor
xor
les
aaa
shl
test
mov
dec
aad
ss
inc
call
xor
ret
and
mov
cwtl
push
adc
push
ja
lret
mov
jl
pop
inc
arpl
push
push
xor
dec
mov
aas
mov
jae
mov
adc
hlt
faddl
daa
xor
mov
sub
push
fadd
push
cmpsl
aas
or
mov
xor
push
ret
pop
mov
pop
push
scas
mov
xlat
mov
push
in
jns
movsb
add
and
leave
dec
adc
insl
mov
jb
cmp
negl
scas
ret
lahf
loopne
stos
scas
and
inc
sbb
adc
jecxz
sbb
in
jle
xor
gs
push
mov
data16
ret
int3
int
mov
stos
xlat
in
pop
adc
fidivrs
push
pop
push
pop
lods
ljmp
dec
add
or
mov
inc
add
cmpsl
jnp
pop
adc
js
stc
outsb
jae
xchg
pop
pop
xor
jp
mov
nop
pop
and
lods
jbe
addb
cmp
mov
xchg
xchg
loopne
cmc
test
jmp
xor
repnz
inc
push
fs
lea
pop
pop
in
inc
fcompl
cmpsl
xor
pop
popf
in
or
leave
jle
or
mov
enter
imul
dec
loopne
xor
js
pop
das
lock
shll
ds
sbbl
xor
cmc
not
or
sbb
repnz
stos
mov
movsb
ljmp
jnp
popa
jmp
xchg
popa
std
sarb
imul
pusha
jmp
insb
lods
orb
rclb
lret
cld
enter
cmp
ja
inc
es
or
loop
nop
call
aam
cli
push
mov
test
jle
pop
mov
out
mov
sbb
sbb
lds
or
xchg
mov
fdivl
or
icebp
pop
xchg
cmp
stos
pop
pop
jge
mov
xor
sbb
xchg
sbb
mov
ja
mov
lret
sarl
in
pop
iret
mov
xor
aam
xlat
xor
inc
addr16
mov
jle
pushf
pop
jl
mov
loope
sbb
das
insb
dec
and
add
mov
adc
ja
je
sub
adc
inc
push
or
shrl
xchg
in
mov
dec
mov
dec
jo
cmc
inc
xchg
lods
jbe
loope
icebp
xchg
and
dec
fldt
mov
or
jmp
pop
scas
cmp
cmp
xchg
push
lods
out
adc
negl
sub
in
xchg
mov
lret
cmpsl
add
pusha
repz
cmp
jl
pop
pop
movsb
xorl
xor
mov
xchg
push
mov
xchg
out
push
loop
fmul
insb
sbb
mov
scas
inc
xchg
pop
arpl
outsb
data16
jp
sub
popa
mov
nop
int
mov
adc
je
sub
into
xchg
mov
stos
push
filds
insl
mov
lcall
push
lahf
sbb
imul
xor
test
cmc
jg
adc
loopne
xor
pop
in
xchg
sbb
arpl
jge
or
cltd
stos
xchg
out
int3
add
mov
adc
dec
mov
adc
movb
das
cs
popa
push
hlt
roll
adc
adc
out
outsl
pop
and
movsb
dec
push
jbe
call
daa
iret
jmp
int
jns
push
mov
push
mov
ja
mov
repz
mov
mov
je
pop
and
std
mov
movsl
mov
fcmovnbe
pop
push
test
xor
push
xchg
pop
mov
int3
iret
ds
xchg
lock
aaa
aaa
in
jns
popa
xor
pop
pop
add
add
add
mov
std
push
inc
inc
outsb
push
dec
dec
fiadds
and
stc
mov
push
dec
mov
cmp
add
pop
fadd
mov
xlat
xchg
push
lods
in
lret
add
push
xchg
push
lods
outsl
jnp,pn
jno
es
stc
push
stc
xchg
jg
jb
sbb
push
xor
imul
mov
jle
mov
mov
mov
lahf
repnz
gs
lret
stc
cmp
mov
scas
push
mov
inc
lahf
xor
push
pop
pusha
dec
test
das
xlat
pop
sbb
xor
lock
jecxz
divb
cmp
fsubr
cmp
mov
fisttpl
scas
push
sub
sub
gs
adc
xchg
pusha
mov
jne
out
mov
sub
inc
fbld
inc
jmp
sbb
int
mov
into
jg
push
aad
xchg
fsts
lea
xchg
mov
inc
adc
fnstsw
sub
jg
jbe
xchg
adc
push
repz
in
sbb
cmc
cmpsl
mov
sub
cltd
sbb
shll
rorb
dec
cmp
mov
dec
mov
dec
lea
push
push
das
andl
push
sti
es
push
cmp
cmp
mov
cmp
mov
mov
and
inc
ljmp
ficoml
mov
out
scas
hlt
int3
pusha
fmul
jbe
mov
sub
jb
sbb
int
fdivs
fisubs
push
pop
xchg
lods
jne
jne
cmp
pusha
je
mov
cmp
aas
jns
fnsave
imull
adc
adc
sbb
jno
jb
stos
gs
lahf
in
lret
mov
inc
jbe
add
and
pushf
or
fwait
rorb
xchg
xchg
inc
cmc
cld
call
stc
pop
imul
imul
fdiv
adcb
lcall
loope
dec
arpl
adc
adcb
pop
pop
dec
push
ljmp
jbe
jns
push
les
mov
rolb
movntq
cmc
insb
scas
cli
adc
mov
pop
jecxz
bnd
fwait
xchg
mov
inc
jge
add
cwtl
jle
xchg
fs
test
mov
repnz
ret
pushf
fcmovnb
push
sub
adc
cmp
dec
adc
shll
xchg
data16
push
adc
jg
sarl
inc
adc
mov
jno
call
cmp
and
add
cltd
std
gs
hlt
in
lahf
insl
sbb
fwait
int
js
xor
iret
jl
pusha
add
cmovle
lock
fisubrl
dec
adc
rcrl
mov
hlt
push
lea
stc
inc
or
mov
dec
fs
mov
inc
popf
imul
mov
sub
jns
mov
cmpsb
push
sub
ja
fnstcw
inc
or
pop
cmpsl
fs
or
jecxz
gs
in
addl
aaa
inc
xor
fwait
push
test
mov
adc
sub
mov
mov
fcomp
clc
scas
mov
jp
jecxz
push
and
je
aas
jmp
clc
into
push
sub
adc
mov
rcll
inc
negb
fs
sbb
pop
into
fisubrs
stos
xchg
fsubr
les
or
dec
sbb
cmp
sahf
popf
insb
mov
test
dec
das
and
inc
aas
and
mov
fstpl
in
add
cltd
scas
lods
adc
lock
adc
mov
or
mov
xor
leave
dec
sti
dec
data16
leave
sti
andl
fiaddl
ljmp
xor
enter
push
ret
ja
mov
sub
leave
and
inc
adc
or
mov
push
and
test
and
cmp
lahf
ds
cli
in
lock
or
push
push
rorl
xchg
add
ret
add
xchg
mov
jmp
push
dec
mov
aaa
nop
fcmovb
insl
mov
jg
xchg
popf
xchg
xor
fwait
pop
adc
adc
mov
adc
andb
xor
add
xchg
mov
fwait
add
ret
mov
sbb
add
mov
push
xor
adc
fnstsw
fildl
pop
lret
pusha
mov
in
ror
adc
repnz
clc
cltd
and
xchg
ret
aad
cmp
cwtl
xchg
mov
jnp
xchg
jbe
pop
dec
popf
push
sbb
lea
lcall
push
mov
aas
sub
pop
mov
flds
xchg
je
jp
icebp
fwait
sti
jne
iret
cli
clc
push
loope
gs
ds
insb
rolb
inc
pop
and
fdiv
stos
sbb
or
ret
push
lret
in
sti
lods
and
xchg
ss
xor
aaa
adcb
repnz
xor
mov
and
jmp
pop
xor
movsl
xor
mov
or
fucom
adc
xchg
xor
xor
jge
testb
jno
pusha
cmp
decl
addr16
mov
add
aam
ljmp
xor
aam
push
mov
sbb
sbb
sub
paddq
add
pushf
inc
jnp
movsl
cld
inc
and
shrb
sbb
add
ja
and
std
fidivs
cmp
adc
cmp
xchg
jae
mov
push
bound
adc
cmpsl
or
das
adc
insl
xchg
add
and
cwtl
mov
lahf
frstor
fcmove
dec
cmp
movsb
sub
jno
or
inc
ret
sbb
cmpsb
mov
push
stc
xchg
aaa
jns
test
aas
sbb
jp
mov
addr16
adcb
add
push
cmpsl
sub
out
popf
push
adcb
mov
or
test
dec
imul
lret
ret
mov
lods
or
mov
push
lahf
aaa
add
jle
and
pop
jmp
push
xlat
cld
sbbl
popa
mov
pusha
aaa
jae
outsl
fstl
lods
sti
jmp
and
imul
mov
mov
cmp
xchg
xchg
or
lea
aaa
and
fnsave
xor
sarl
repz
ret
mov
inc
shll
adc
cmp
adc
movsl
out
out
lock
jp
and
sub
inc
loop
in
mov
addr16
je
out
inc
lods
mov
inc
popf
push
daa
scas
addr16
push
aam
inc
stos
and
arpl
ror
sbb
pop
rol
mov
xchg
mov
add
jp
mov
mov
cltd
movsb
push
dec
jbe
andl
pushf
fwait
push
jmp
xlat
dec
inc
mov
lock
pop
xor
mov
cltd
lea
shrb
cmp
cmp
add
lret
xor
je
fcmovnbe
inc
insb
mov
mov
icebp
cmc
cld
xchg
mov
sbb
cmp
into
xlat
and
xor
das
test
pop
push
vpshad
mov
fiaddl
imul
out
jecxz
mov
imul
outsb
jg
sub
stos
sub
adc
push
lods
mov
rcrl
and
jmp
sbb
insb
xor
jle
btr
nop
or
lods
adc
clc
jae
out
push
jg
and
push
movsl
mov
std
pop
xor
mov
in
mov
lods
dec
dec
ficoml
adc
stos
jmp
mov
lret
hlt
mov
test
and
ficoml
loope
adc
addr16
jl
mov
xlat
or
hlt
inc
push
adc
sub
iret
popf
lds
jl
cli
mov
jae
and
mov
adc
fstps
fst
aas
cmp
mov
sbb
add
or
cli
push
pop
dec
test
pop
test
jp
sarb
minps
in
nop
dec
xchg
mov
fucom
mov
jmp
mov
mov
jnp
xchg
dec
sbb
nop
hlt
mov
aam
iret
cs
lods
jnp
mov
mov
ljmp
out
dec
adc
push
inc
imul
pusha
divl
int
ficoms
rcrl
dec
add
cmp
jns
popf
int3
mov
je
and
iret
fxch
test
dec
cmp
pop
cld
mov
movsb
cmpsb
and
mov
mov
lea
fnstsw
dec
mov
xchg
add
les
and
cmp
movsl
addr16
enter
ja
push
daa
sub
cmp
cmp
dec
pushf
xchg
dec
cmp
push
mov
sub
mov
xchg
xchg
jge
imul
jg
mov
xor
enter
inc
xlat
mov
imul
lea
outsl
xchg
ljmp
das
in
in
ss
fwait
push
fs
dec
inc
les
xchg
sbb
stos
lret
inc
mov
lods
gs
dec
icebp
out
cltd
jmp
hlt
add
in
in
in
mov
pop
enter
inc
stos
dec
ret
lods
lea
or
ja
jbe
sbb
in
out
adc
fstp
cmp
mov
ret
inc
lahf
and
and
inc
cli
rolb
stos
xor
sarl
cld
out
push
xor
iret
and
and
xor
movsb
mov
nop
int
dec
out
loope
inc
cmp
scas
and
fdivrs
hlt
pop
add
push
push
fidivs
jns
outsb
add
push
mov
jge
fs
mov
lea
jle
add
inc
sub
ficomps
and
mov
mov
pop
mov
pop
loop
pop
push
lods
push
scas
xor
add
jl
test
stos
movsl
enter
lods
mov
mov
shlb
sub
inc
xchg
cmp
cld
push
pop
jae
xchg
adc
sub
sub
mov
sub
pop
test
pusha
int
adc
adc
sub
fstpt
mov
imul
mov
add
xchg
inc
stos
pop
mov
iret
test
mov
aas
fdivrs
cmp
adc
adc
push
testl
ret
mov
mov
mov
movsl
jmp
or
out
lcall
lret
ret
inc
jge
addr16
ss
ret
arpl
movsl
cmp
or
mov
xor
popa
ficoml
idivb
dec
stos
cmp
lret
lock
cs
pushf
std
pop
aas
test
scas
xchg
jno
cmp
cmp
cmp
lret
nop
out
inc
adc
mov
pushf
jns
pop
scas
and
shrl
mov
add
out
push
nop
iret
push
clc
roll
mov
pop
std
xchg
xchg
hlt
ja
dec
mov
lock
inc
cmpsb
xor
pusha
xchg
test
inc
mov
pushf
jno
mov
nop
add
dec
xlat
in
enter
push
test
sub
jmp
add
aaa
pop
popa
jg
je
aad
xchg
or
sub
in
fisubrs
shll
inc
or
ja
push
mov
in
cltd
jle
jo
movsl
sbb
test
add
pop
lods
inc
testl
cld
jmp
pop
dec
cmc
xchg
addr16
call
dec
mov
ret
mov
sahf
push
pop
std
push
stc
fsubl
sub
pop
lret
loope
and
loopne
mov
sbb
cwtl
adc
or
jge
cld
mov
divl
cmp
xlat
mov
xchg
xchg
push
add
adc
pop
pushf
out
add
push
roll
add
push
fs
cld
push
lahf
testb
cmp
repz
dec
add
iret
adc
add
stc
loopne
or
ds
clc
cmc
gs
scas
xchg
lods
stc
ja
je
adc
inc
mov
jne
and
call
fnstenv
into
shrl
jne
push
mov
pop
int
movsb
insl
push
adc
or
ret
call
sahf
lds
xlat
cld
jmp
iret
push
bound
lods
jg
add
lcall
sarb
cmc
insl
xchg
adc
int3
cmc
fdiv
js
mov
sub
inc
in
xchg
inc
test
pop
addr16
inc
lret
mov
push
scas
in
stc
nop
lods
mov
adc
add
popa
test
sub
inc
js
out
sub
pop
ficoml
xchg
sti
int3
or
out
sbb
pop
pop
add
jp
mov
xchg
outsl
adc
push
cmp
and
add
insb
fs
adc
and
popa
hlt
fdivs
xchg
inc
lahf
xchg
enter
cwtl
test
insb
daa
adc
dec
cmc
add
mov
mov
or
in
cli
std
insl
mov
mov
rol
jne
adc
xor
jnp
xchg
adc
cmp
lods
xchg
int
bound
repnz
fwait
push
cmp
or
adc
dec
cs
mov
sub
ds
sbb
into
arpl
jnp
dec
cmp
cmpsb
inc
jb
inc
pop
mov
mov
loope
inc
subl
nop
mov
mov
inc
shlb
jmp
insb
orl
mov
loope
mov
fsubs
mov
sbb
scas
inc
cmp
movsb
aas
adc
add
cli
mov
scas
mov
mov
sub
out
pop
aad
sbb
push
mov
ret
jecxz
or
mov
test
xchg
sub
sub
xlat
outsl
in
decl
popa
jo
xchg
int
mov
sti
jmp
or
sti
jne
test
rcl
sbb
mov
aad
add
daa
outsb
xorb
push
cmp
push
dec
pop
and
ret
scas
pusha
in
mov
push
fwait
daa
adc
pop
cmpsb
inc
sub
sub
xchg
test
das
pop
addb
andb
mov
inc
sbb
scas
adc
inc
inc
mov
int
js
into
in
mov
dec
add
stos
pop
pop
or
ret
popf
push
iret
pop
push
or
or
int
mov
out
mov
adc
or
jmp
mov
xchg
inc
mov
mov
ret
sbb
jae
cmp
pop
fs
push
aas
push
cli
or
xchg
call
push
cmp
mov
mov
or
mov
sub
mov
xor
xlat
mov
shl
pop
shlb
pop
jo
jmp
and
negb
pop
and
jb
or
and
push
add
loop
xor
add
add
add
loope
ja
xchg
sahf
sbb
les
repz
mov
popf
xor
in
pop
add
jo
test
sbb
bound
mov
stos
push
dec
sub
test
or
xchg
jl
dec
sbb
ja
xchg
cli
jp
lods
notb
mov
std
push
pop
jmp
push
mov
ficoms
push
loopne
xchg
push
ficoms
dec
imul
sub
jecxz
loope
gs
push
xchg
fs
das
pop
push
add
mov
lods
fadds
je
cld
jmp
mov
push
cmp
lcall
loop
notl
fnstcw
adc
dec
jg
ret
repnz
pop
stc
sub
inc
pop
icebp
call
jp
sub
cmp
leave
jg
sub
mov
stos
jnp
jae
out
jae
lea
pop
jno
jmp
or
jae
xchg
push
jecxz
adc
ret
push
mov
dec
inc
cs
daa
push
loope
into
pop
popf
sbb
ljmp
jne
sbb
or
mov
sub
mov
jns
lds
sub
mov
aam
xchg
mov
lds
shrb
push
cmp
jne
popa
stos
jb
test
or
es
in
pop
insl
ds
insb
out
jle
mov
add
fdiv
iret
stos
adcb
movsl
dec
movsl
push
inc
xor
ret
aam
inc
dec
insb
movsl
sbb
leave
dec
adc
sub
outsl
mov
pusha
jecxz
mov
or
xlat
in
mov
cmpl
std
xor
sub
sbb
jnp
adc
out
adc
mov
aas
lahf
mov
xchg
add
fidivs
js
jl
ffree
sbb
mov
mov
adcb
push
mov
cltd
inc
cmp
mov
pop
xor
insl
sub
daa
mov
sarl
adc
pop
and
out
cmc
sub
fstpl
cli
sub
xchg
stos
jl
pop
fwait
adc
push
fsubrl
jb
js
loope
jge
popf
jp
movsb
mov
xchg
sti
mov
out
dec
pop
push
ret
int3
mov
lods
gs
and
jmp
cmp
sbb
mov
cld
cmp
lock
sbbb
cli
xchg
outsl
es
ljmp
into
mov
sahf
cmc
jge
into
shl
idivb
subl
and
or
lcall
mov
xor
mov
addl
daa
mov
fcmovu
xchg
in
dec
mov
jl
xchg
es
dec
inc
mov
xchg
jbe
test
cli
jmp
jne
cld
cmp
mov
mov
xchg
sub
in
xchg
pop
mov
pop
add
mov
jns
in
add
xchg
lea
in
mov
xchg
cli
shr
jle
pop
cmp
sub
rcrb
xchg
insl
mov
or
loope
pop
xor
fxch
mov
adc
fldenv
mov
addb
push
push
adc
inc
call
pop
pop
xchg
xchg
mov
pop
lds
insl
mov
mov
dec
in
or
scas
cmp
or
jbe
sbb
jnp
cmp
pop
fsubp
mov
insl
in
cmp
pop
arpl
insb
js
and
out
inc
mov
sbb
xchg
setb
int
add
inc
in
inc
mov
arpl
adc
xchg
add
mov
lea
adc
mov
incl
push
or
mov
loopne
adc
scas
pop
daa
pmovmskb
std
ss
lahf
mov
popf
in
or
pop
lret
leave
inc
je
push
cltd
or
cmc
and
cltd
push
cltd
stos
js
stc
das
push
out
mov
cs
add
push
add
iret
xlat
push
and
imul
sahf
aas
mov
mov
dec
divl
pop
data16
push
repz
mov
cmpsl
fs
lods
inc
pop
andb
mov
sahf
dec
mov
fldcw
ret
cmp
jmp
cmp
adc
xor
xchg
lcall
aad
dec
dec
nop
clc
push
push
fidivl
shll
dec
daa
cmp
mov
lcall
and
mov
mov
shl
fdiv
idivl
adc
repz
les
mov
fwait
sahf
lods
aam
adc
jo
push
mov
xchg
cmpsl
repz
inc
imul
xor
pop
push
lock
xor
cltd
pop
add
push
mov
movsl
les
cmp
inc
mov
sub
out
adc
mov
bound
rcll
ljmp
test
or
cmpb
mov
js
or
xchg
sub
cmpsb
jb
cli
mov
adc
add
xor
shlb
or
jbe
push
add
ss
xchg
loope
addb
outsb
cmp
jne
mov
je
mov
or
adc
sub
mov
faddl
xor
jg
mov
pop
aam
lahf
pop
dec
push
cli
sbb
xchg
or
xchg
lods
mov
fnstenv
mov
xchg
mov
jno
fwait
dec
lret
jp
mov
dec
je
sbb
imulb
adc
push
jecxz
loop
call
or
call
rcrb
rclb
outsl
icebp
in
cli
lock
mov
movsb
idivl
adc
and
arpl
enter
cltd
add
test
xchg
shr
or
jl
clc
xchg
sbb
inc
add
xor
daa
rorb
gs
mov
or
fmull
jecxz
dec
ljmp
nop
push
lahf
jbe
jecxz
stos
push
sub
xadd
sarb
daa
mov
mov
shll
scas
inc
shrl
imul
or
lods
dec
jnp
cwtl
pop
out
pop
repz
inc
or
xchg
cmp
repz
xlat
sub
imul
incl
mov
and
xor
mov
ficompl
add
cmc
popf
fisubrl
xchg
lea
out
out
and
jae
jne
shll
or
pushf
dec
sbb
test
mov
push
lahf
leave
or
add
mov
bound
mov
sbb
gs
lock
mov
scas
or
loopne
cltd
mov
push
lock
xor
nop
addb
pop
icebp
xorb
and
push
pop
lea
mov
lcall
rclb
orl
iretw
aas
loopne
ret
or
movsb
xchg
rorl
repnz
enter
push
push
push
ffreep
sarb
add
aaa
loop
push
and
repnz
fcomps
mov
das
loop
repz
sub
push
daa
xchg
sub
inc
pusha
xor
push
ret
cmp
mov
in
jbe
inc
mov
mov
sbb
cmc
or
sub
jno
enter
mov
test
pop
adcl
or
dec
pop
dec
test
sbb
mov
imul
add
pop
sbb
hlt
repnz
add
leave
inc
lret
xchg
sti
out
mov
std
scas
sub
mov
cltd
or
xchg
in
add
lcall
cltd
inc
mov
jecxz
stos
xchg
neg
mov
mov
add
xchg
mov
inc
jno
jle
movsl
das
fwait
arpl
in
movsl
out
xchg
pop
inc
movsb
leave
pop
pop
fsubl
into
stos
mov
out
push
mov
push
ss
add
lds
sub
lret
xor
aam
test
notb
adc
test
jp
sbb
mov
cmp
mov
push
lahf
dec
arpl
fsubrs
mov
outsl
push
xchg
mov
sub
repnz
push
inc
mov
pop
sub
cltd
rcll
bound
and
sbb
jge
or
dec
aad
lods
push
lret
mov
push
fsubl
jge
rolb
adc
popf
bound
inc
ss
push
sbb
or
mov
pop
insb
cmp
jmp
andb
sub
xorb
and
xchg
inc
xchg
xchg
int3
imul
fwait
lcall
xorl
movsb
ds
dec
push
stc
dec
and
xchg
xchg
mov
scas
shrl
fcoml
stos
xlat
scas
in
pop
and
xchg
dec
stos
xor
xchg
or
mov
rorb
stos
and
mov
add
stos
divl
inc
xchg
pushf
or
clc
movsb
mov
mov
sti
dec
mov
mov
out
js
mov
mov
out
shll
or
inc
call
xor
std
aad
outsl
push
orb
sbb
jp
jge
repnz
dec
pop
sbb
jno
repnz
xor
xor
cli
push
add
mov
enter
push
jg
xchg
iret
in
loop
pop
pop
jae
dec
stc
fmull
adc
xor
inc
sahf
xor
and
mov
into
jbe
cmp
mov
or
sub
popf
push
dec
lahf
insb
push
cs
mov
mov
iret
ljmp
or
test
cmpsb
mov
lods
leave
pushf
out
repnz
ret
test
adc
pop
xchg
sub
sub
sub
stos
insb
push
inc
sub
and
andb
or
pop
js
outsb
add
cltd
push
std
xlat
out
push
arpl
pop
stos
and
shrl
sti
call
push
add
aam
cwtl
out
add
add
test
pop
jle
push
int3
jg
push
mull
adc
out
dec
pop
add
orl
mov
cmc
arpl
adc
sub
aad
repz
stos
push
outsb
jp
sub
fs
cmc
pop
sbb
andl
incl
sub
cmp
sbbl
movsl
mov
xor
repz
dec
or
in
daa
addr16
hlt
sub
icebp
scas
mov
jmp
call
push
jle
push
mov
outsb
popa
mov
pop
ret
icebp
and
xchg
shrl
or
sti
mov
pop
aad
sar
lods
mov
push
insb
and
sub
dec
fmuls
push
lret
push
cs
cmp
test
jle
mov
das
cli
xor
mov
mov
aad
mov
lds
xor
pop
jno
movnti
add
jne
push
fldt
push
loope
xchg
sbb
imul
repz
or
dec
sahf
xor
fwait
dec
leave
leave
daa
mov
jbe
out
pushl
dec
mov
or
into
ror
scas
data16
test
test
mov
sti
pop
push
jbe
mov
les
fs
mov
and
adc
cmp
pop
scas
jo
mov
outsb
js
dec
xor
popa
test
std
fistps
frstor
das
mov
sbb
or
data16
jmp
push
jmp
mov
jno
bound
fstpt
sbb
repnz
jle
test
popa
adc
cld
push
std
jno
jle
ret
icebp
out
into
fiadds
mov
test
adc
dec
xchg
add
push
in
nop
mov
popf
push
fldt
pop
mov
inc
out
out
add
aaa
sub
xor
push
popf
cmc
push
pop
sub
movsb
outsl
mov
bound
roll
xchg
xor
outsb
stos
mov
dec
pop
push
inc
orl
mov
gs
test
inc
dec
out
fcoms
hlt
mov
mov
jmp
lret
inc
je
pop
lock
stc
pop
xchg
mov
dec
int3
data16
sti
scas
data16
aam
mov
adc
jae
mov
adc
gs
or
mov
cmp
aas
inc
xchg
inc
iret
xor
das
insb
adc
stos
pushf
or
ja
jne
sbb
out
mov
sub
xchg
jne
mov
js
and
xchg
test
mov
ds
lahf
xchg
mov
and
jns
jp
fnsave
mov
sahf
xchg
repnz
sbb
mov
mov
sub
mov
add
scas
fsts
shr
and
popa
push
push
iret
xlat
sbb
push
dec
aam
fcoml
sub
daa
int
sbbb
neg
lcall
push
xchg
push
lret
xor
push
mov
shrb
dec
ljmp
fisubl
aam
or
mov
cld
adc
rolb
dec
pusha
mov
icebp
jg
pop
mov
mov
lock
sti
jl
add
add
out
jecxz
jle
push
xchg
jl
scas
mov
xchg
sub
dec
test
sub
sbb
xchg
fstpt
pop
and
push
mov
rcl
mov
cmpsl
hlt
jae
xchg
add
jae
movsl
test
xchg
push
frstor
test
jo
or
in
vpaddusb
shlb
popa
fs
push
mov
and
adc
ret
push
sbb
push
aas
data16
jg
mov
dec
inc
test
out
mov
clc
fs
mov
inc
mov
test
sbb
cmp
cmpsb
cs
adc
insb
or
mov
pop
xor
addr16
movsb
popa
lds
in
iret
adc
jg
in
xor
mov
sub
and
in
dec
es
filds
lock
gs
ficoms
pop
and
sbb
xor
mov
cmp
cltd
xchg
jae
pop
cmp
lds
mov
push
pop
or
and
push
flds
inc
pop
cltd
lods
fbld
stos
xor
pop
ss
push
add
xchg
xor
and
pop
scas
cmpsb
sub
jl
hlt
shrb
mov
mulb
lds
push
cmpl
cmc
push
push
js
xchg
gs
daa
sub
inc
jns
adc
shrb
fidivs
sbb
jns
hlt
push
std
stos
or
push
inc
cmc
jno
push
jns
clc
ja
test
gs
sub
dec
ficomps
scas
imul
sub
in
xor
fldl
aad
add
subl
outsb
cmp
test
pop
loopne
jmp
pop
fcmovnb
pop
mov
cwtl
jle
lock
daa
inc
mov
inc
pop
and
sbb
jns
dec
cmp
sti
in
mov
es
sub
jne
or
notl
cltd
pop
cmpsb
or
fimull
xchg
cltd
sti
repnz
mov
pushf
push
mov
push
test
jmp
inc
shll
lcall
ss
dec
pop
mov
xor
sahf
in
sub
dec
push
movsb
in
fisttpl
inc
lcall
mov
push
pop
ret
or
mov
xchg
loopne
out
cmp
dec
lods
in
sub
xchg
cmp
add
repz
test
scas
test
shlb
inc
jnp
icebp
imul
add
mov
or
loop
jns
xor
adc
or
cli
mov
bound
out
aam
ficoml
dec
notb
insl
fcompl
dec
pop
jns
jmp
scas
cli
insb
fs
push
cmp
fisubrs
aam
subl
xchg
mov
daa
je
movsb
pop
cli
in
sbb
mov
inc
push
hlt
jge
fdiv
pop
pop
aaa
lds
push
ljmp
outsb
cmpb
fmuls
negb
pop
nop
test
xchg
or
movsl
les
arpl
aam
cmpsb
mov
pushf
sbb
test
mov
repz
int3
aam
jo
sbb
xchg
jle
or
dec
das
mov
and
xchg
addb
rcl
in
in
mov
mov
and
mov
bound
and
outsb
add
push
ret
jl
mov
xchg
mov
rcl
xor
xchg
popf
adc
adc
and
sub
enter
in
dec
push
scas
xor
mov
cmp
adc
and
cli
push
sbb
lret
jns
out
mov
mov
les
dec
call
repz
pusha
out
rol
imul
in
ja
sbb
or
imul
mov
mov
jno
xor
cmpsb
mov
stc
cs
cmpsb
dec
loopne
xlat
add
sahf
hlt
mov
popa
sbb
cld
sbb
repnz
nop
imul
add
sbb
sbb
pushf
pop
sti
div
mov
sub
xor
mov
jae
rorb
xor
xor
inc
mov
scas
xchg
in
jl
repnz
sbb
and
sub
jns
hlt
fbstp
fidivrs
or
mov
jge
pop
cmc
outsb
xlat
out
mov
pop
dec
xor
fwait
cmp
test
and
cmp
repz
mov
adcl
stos
cltd
fadd
jp
and
xor
xchg
adc
or
ret
jnp
inc
idivl
inc
cwtl
xchg
dec
repz
fimuls
push
lahf
into
pop
xor
mov
fidivl
imul
or
jmp
cwtl
jno
mov
iret
pop
dec
jg
and
dec
jp
ret
mov
mov
mov
lea
dec
inc
xor
sti
mov
jge
sbb
adc
cmp
dec
or
lret
jae
ss
aam
fiadds
push
cli
mov
jecxz
mov
lahf
call
cmp
adc
cmp
mov
sbb
push
xor
pop
pushf
fists
adc
ljmp
dec
stos
mov
icebp
inc
inc
fstpl
es
fwait
jle
mov
xor
inc
movsl
mov
jle
dec
jg
add
xchg
jmp
xor
sbb
fisubrs
pop
lret
out
cltd
mov
mov
lcall
lcall
out
add
es
jb
mov
stos
push
push
out
popf
fisubrl
int3
add
lds
js
xchg
xor
cli
mov
push
and
fiadds
mov
repnz
xchg
aas
into
push
stos
andl
xorb
ret
movsb
inc
lcall
loope
sbb
sbb
decl
xor
test
sub
push
das
add
pop
test
mov
shl
cmp
xchg
stos
sub
push
or
adc
lock
mov
xor
stos
arpl
or
sbb
pop
xchg
cmp
ljmp
out
xor
sbb
popf
mov
movlps
movsb
or
daa
mov
and
add
mov
mov
adc
mov
gs
mov
pop
loope
lock
dec
jb
in
add
mov
lcall
dec
jecxz
ja
cmp
cs
jle
pop
ja
gs
and
fsts
mov
lret
es
and
xchg
mov
int
in
mov
addl
pop
scas
inc
stos
mov
clc
fmul
inc
aas
cmp
stos
clc
aam
sub
daa
imul
loop
push
cmp
pop
fs
adcl
add
push
mov
fistpll
sbb
jbe
inc
adc
outsb
sub
loop
jns
inc
mov
push
dec
push
push
outsl
sbbl
adc
in
jb
xchg
sub
dec
fdiv
and
int3
test
dec
int
test
fists
or
mov
xchg
ss
fisttpll
sub
mov
mov
sbb
in
push
repnz
hlt
jecxz
stc
push
push
xchg
loopne
scas
fwait
aam
add
jo
add
pop
nop
sarb
jge
je
sti
fidivrl
sbb
aad
aam
test
ja
inc
adc
inc
daa
cwtl
imul
inc
ljmp
jno
and
or
mov
jns
pop
cmpsl
lods
mov
pop
shll
fldenv
jecxz
sbb
in
pop
xchg
sub
ljmp
mov
adc
xor
int
scas
mov
enter
std
cmp
clc
cmc
push
sbb
popf
dec
cld
in
xor
adc
mov
xlat
sbb
jg
jl
xchg
cltd
mov
jmp
dec
dec
popf
sbb
sbb
sub
mov
pop
mov
lret
lock
sahf
inc
mov
mov
mov
aaa
pop
in
iret
inc
std
icebp
or
pop
pop
add
xchg
jb
xchg
cmpsb
int3
add
pop
rcr
xor
cmpsl
and
mov
mov
cmp
enter
jg
sbb
out
into
pop
xor
stc
in
jp
shlb
movsb
in
xchg
sbb
in
xlat
push
es
fwait
loopne
dec
call
or
popf
scas
lcall
pusha
or
movsl
fstpl
dec
lds
lock
jp
sub
nop
or
inc
test
jno
outsl
mov
push
pop
scas
and
inc
scas
mov
sub
and
lock
mov
lods
inc
fs
adc
mov
sub
stos
ljmp
push
rorb
push
into
mov
push
mov
repz
ret
add
test
rcr
pop
int3
jae
mov
pusha
push
ret
dec
pop
and
xlat
push
xlat
xor
push
cmp
mov
cli
repnz
or
dec
cmc
push
jno
add
test
xchg
dec
rcrl
xchg
inc
sahf
sbb
xchg
pop
std
mov
push
push
cmp
fwait
or
cmp
pop
sub
shl
into
fsubl
popf
xchg
or
stos
fisttps
add
pop
fnstsw
mov
sbb
jmp
adc
scas
es
adc
lods
sbb
andb
shrb
push
outsl
aas
xchg
test
and
dec
xor
mov
xlat
test
xor
ljmp
loope
test
iret
lcall
bound
dec
adc
ret
mov
xchg
pop
inc
add
std
cmp
cmp
jmp
dec
cmp
lret
aas
xchg
pop
jno
add
xor
std
xor
lods
and
imull
ds
sahf
inc
test
out
xchg
stos
push
jnp
push
sub
dec
movsb
lahf
add
fstl
rcl
shll
rorb
push
mov
adc
mov
pop
sbb
xlat
outsb
loope
xor
push
and
mov
les
inc
aad
and
data16
in
nop
xchg
cwtl
jmp
mov
dec
adc
sub
xor
xchg
dec
popa
push
ds
mov
jge
jbe
sbb
mov
insb
aam
and
or
cmc
arpl
jmp
push
mov
mov
pop
jge
or
cltd
orb
imull
jns
mov
adc
and
into
or
add
out
cmp
sti
cltd
out
out
jecxz
jp
daa
and
fstpl
rclb
test
xchg
jle
rorl
fiadds
jnp
inc
and
daa
gs
lock
arpl
sahf
adc
fstl
push
pop
lods
mov
push
jne
fs
inc
inc
inc
cmc
loope
loop
aaa
movsb
hlt
or
mov
add
mov
dec
int
lods
sub
mov
dec
lea
in
xor
cwtl
movntps
es
push
rorb
sbb
add
push
jp
fnstcw
inc
inc
xor
lods
sbb
jl
mov
js
aaa
push
aas
mov
outsl
incb
loope
imul
outsb
jl
inc
out
and
sbb
xor
inc
and
lds
pop
xor
repz
popa
push
jle
sub
into
shrb
aas
sub
jl
lret
das
xchg
mov
enter
loope
xorl
mov
std
insb
scas
sbb
jbe
aam
fs
push
pop
push
pop
out
js
push
cmpsl
cmp
in
inc
data16
xchg
add
ficomps
pop
lock
jbe
dec
shll
lods
jmp
mov
in
cli
ja
insb
jmp
xor
repz
mov
and
sub
pop
mov
or
lret
cmc
daa
cmpsl
dec
movsb
mov
sbb
and
and
jbe
bound
mov
pushl
push
mull
rorb
fistps
jne
mov
xor
shl
gs
mov
aad
pushf
cwtl
mov
sbb
pop
xrelease
add
cmpsl
xchg
sub
mov
push
sub
iret
add
xchg
and
ja
leave
mov
mov
movsb
rolb
push
jns
test
mov
dec
push
ror
jl
sbbl
push
lds
jp
cld
add
ja
add
pop
cmc
cmpsb
shlb
lcall
dec
or
xor
cmpsb
rorl
test
ja
and
aaa
dec
inc
cmp
dec
inc
add
dec
inc
fcoml
loope
inc
or
xchg
rcr
xchg
xor
or
inc
mov
test
subb
and
stc
xchg
mov
xchg
not
loope
sub
dec
jmp
loopne
aaa
test
jle
daa
push
xchg
jne
int
hlt
out
xchg
dec
xchg
adc
jge
fbld
mov
adc
rcll
mov
mov
cld
push
jne
ret
pop
inc
and
lret
push
fdivs
jecxz
push
sub
lods
cwtl
dec
push
mov
pop
jecxz
fistpl
pop
in
jne
imul
mov
aaa
repnz
enter
shrl
pop
push
jnp
pushf
push
dec
jae
cmp
lods
push
loopne
dec
out
sti
jbe
jg
sub
jp
addr16
or
sbb
push
mov
nop
dec
les
cmp
sbb
inc
cmpsb
fs
adc
aam
push
cmp
mov
xchg
pop
sub
arpl
mov
decl
dec
adc
pop
pop
jns
xchg
jg
pop
pushf
xor
imul
mov
xchg
stos
xchg
jbe
movsl
dec
movsb
fnsave
movsl
and
cwtl
pusha
add
and
push
or
andb
leave
popf
and
out
in
shrl
inc
mov
push
sub
mov
ret
into
push
xchg
jnp
cmp
lret
sub
sbb
testb
add
fcomps
mov
ds
cmpb
jb
clc
xor
xchg
adc
mov
mov
sub
dec
clc
in
fs
dec
mov
push
popf
iret
pop
divb
xor
push
and
sbb
pop
jno
mov
fwait
inc
pop
jae
shr
outsb
aam
xor
leave
popl
sbb
in
fcmovnbe
dec
sub
pop
cmp
push
aas
mov
popa
ret
rcrl
cltd
mov
add
inc
add
push
mov
fiadds
adc
push
cmc
xchg
test
enter
jb
pop
mov
mov
push
jbe
and
rolb
loope
jmp
daa
js
out
cltd
dec
sbb
or
inc
sbb
pop
add
jnp
in
and
push
loopne
in
testl
ljmp
push
xor
out
mov
jo
mov
mov
sbb
or
in
cmpsl
pusha
nop
or
es
xchg
outsb
mov
testb
mov
push
xchg
push
sarl
or
scas
scas
dec
push
lds
fldcw
dec
jb
das
xor
xchg
push
xor
xchg
xorb
pop
inc
and
repz
dec
mov
push
icebp
pop
and
int
ljmp
icebp
lret
sub
pop
inc
fistpll
stos
in
imul
cmp
adc
inc
clc
ret
dec
insl
add
arpl
and
dec
gs
outsl
aaa
jno
stos
out
imul
ucomiss
mov
xchg
imul
mov
fdivs
sbbl
lods
sub
cmc
fucomp
cmp
int3
cs
or
popa
sub
bound
call
add
xor
mov
pop
dec
sub
adc
xchg
cltd
xor
loope
pop
nop
adc
fs
inc
lret
mov
cmc
cli
shlb
push
or
xchg
lock
mov
mov
mov
cmp
nop
test
pushf
loope
out
lret
aaa
aam
sub
sbb
insl
imul
std
aam
fwait
cmp
dec
ss
shlb
repnz
mov
pusha
or
jmp
xor
and
dec
inc
and
in
lods
aam
xchg
imul
sbb
jmp
pop
das
sti
sbb
adc
cmp
daa
fnstenv
movb
aas
jno
outsl
pop
sbb
jno
cwtl
lods
nop
adc
and
popa
shlb
icebp
sti
and
fucomp
test
lret
mov
outsb
idivl
fs
sbb
jle
cmp
ret
out
fildll
mov
pop
xchg
fiaddl
push
mov
clc
mov
addr16
push
test
mov
aaa
xor
jnp
jb
inc
je
shll
in
mov
les
mov
lret
adc
push
xchg
mov
stos
adc
dec
jne
bound
pop
fincstp
inc
jns
push
mov
inc
stc
outsb
mov
adc
movsb
ret
and
leave
std
imul
repnz
movb
idivb
test
pop
sub
in
jge
push
inc
arpl
sbb
roll
sbb
pop
jmp
ret
sbb
scas
sbb
inc
fisttps
jg
or
add
mov
mov
add
outsl
and
xchg
adc
cmp
sbb
imul
cld
xorb
pop
imul
mov
cmp
adc
and
xchg
int
pop
fs
leave
pop
jge
dec
orb
push
mulb
std
pop
out
jae
mov
pop
dec
push
arpl
mov
mov
inc
nop
mov
mov
inc
and
mov
fisubl
scas
push
lret
cmp
std
push
cmp
sbb
fcoml
lret
sbb
js
lds
mov
mov
nop
xor
fucomi
mov
je
inc
loopne
cmpsb
jb
jmp
repz
sub
dec
or
mov
adc
std
aaa
aam
mov
cmp
es
lea
test
push
sarl
ss
aam
or
pushf
sub
enter
std
sbb
pop
pushf
test
sahf
inc
rcrb
adc
subb
cld
stos
or
pushf
mov
lret
std
xor
clc
dec
sbb
add
in
int3
xchg
fbstp
and
or
inc
lea
xchg
out
mov
jl
dec
push
fadd
xchg
out
mov
lret
cltd
inc
push
cli
mov
xor
ret
leave
and
mov
mov
addb
in
sub
mov
fucomi
xor
iret
mov
sub
std
or
adc
mov
mov
imul
xchg
nop
and
mov
loope
inc
jb
add
push
cmpsl
aas
lock
js
movsl
stc
mov
ret
add
je
mov
push
pop
js
stos
or
lock
and
popa
mov
lea
mov
cmp
or
stos
test
jo
in
aaa
imul
or
adc
adc
ret
sub
aaa
cmpsl
insb
dec
pusha
jnp
lods
popa
lcall
sub
pop
sbb
divb
sub
xchg
in
imul
and
movsl
xor
enter
pop
dec
jns
es
jae
in
adc
fwait
bound
adc
addr16
popa
shrb
mov
jns
jo
cmpsb
cmc
or
jns
add
and
rorl
jmp
cltd
rcl
push
mov
cwtl
jo
jo
dec
pop
arpl
jbe
scas
dec
lds
and
repz
test
add
sbb
cltd
xchg
cli
loopne
daa
call
out
push
mov
mov
pop
je
add
outsb
addl
xchg
mov
mov
cld
rolb
push
mov
movsb
sub
jnp
outsl
cwtl
imulb
xchg
out
dec
inc
negl
jae
test
adc
jle
jecxz
ret
jp
add
jns
mov
das
inc
leave
gs
mov
pop
push
xchg
das
cli
pop
lret
outsl
push
std
xor
pop
pop
push
lret
pop
and
fxch
push
mov
xchg
and
test
cmp
push
das
out
loopne
cmp
leave
nop
xor
mov
ljmp
test
dec
push
lret
xchg
xchg
aas
cmp
add
pop
aaa
jle
mov
lahf
mov
stos
sbb
fcoml
sbb
inc
lret
mov
mov
sub
xchg
je
push
jmp
mov
cli
adc
and
lods
and
push
sbb
stos
pop
xor
pop
xchg
pop
and
cmpsb
sub
pop
cmp
adc
jno
test
orb
mov
fidivrs
ja
dec
cmp
dec
imul
lahf
and
fsubs
in
loop
fists
dec
ffreep
in
xchg
adc
std
test
lods
hlt
jle
push
stc
dec
xchg
lea
and
adc
fisttpl
clc
addr16
push
fcomps
pop
in
jmp
hlt
mov
jbe
sarb
lahf
adc
outsb
fldt
sbb
pop
outsb
fildl
cmp
and
jecxz
mov
popf
clc
insl
fnstenv
mov
stos
jnp
mov
movsl
mov
jl
jmp
xor
bound
sbb
mov
in
psraw
iret
lret
mov
inc
inc
dec
mov
dec
xor
lds
add
lds
cwtl
out
out
js
jne
out
xchg
dec
sub
cmp
lds
jno
mov
or
pop
dec
mov
inc
nop
fidivl
insl
dec
cld
mov
cli
decb
movsl
and
jns
test
push
out
aad
sub
ret
pop
xor
fimull
andb
or
jne
cmp
mov
seta
jns
push
push
movsl
inc
out
into
mov
div
cmc
or
pop
fs
inc
mov
add
mov
jecxz
int3
aas
cmpsb
xchg
jns
pop
push
lcall
adc
and
jo
in
mov
push
rcr
inc
xchg
mov
cmp
mov
pop
clc
push
pop
push
jo
push
or
and
lcall
sub
mov
ror
pusha
or
cmc
outsl
adc
jge
into
sti
xchg
mov
mov
into
push
xchg
jno
daa
int
sbb
sbb
cmp
adc
icebp
leave
pusha
fwait
or
jmp
pop
dec
dec
cmc
xchg
xlat
aas
dec
dec
test
mov
cmp
dec
mov
sbb
pusha
push
and
pop
fiaddl
xchg
lcall
inc
cltd
data16
mov
fstpl
inc
aam
xor
outsl
pop
stos
push
lods
cmpsl
add
mov
pop
ds
cmp
pop
jbe
and
xchg
scas
gs
inc
fildl
arpl
cmove
sarb
dec
pop
sahf
repnz
xchg
icebp
pop
sbbl
mov
pushf
jbe
insb
cmp
aaa
ss
adc
or
and
fwait
push
mov
push
pop
cmc
mov
fisubrs
and
testb
mov
cmp
adc
adc
dec
scas
in
push
sub
mov
ret
pop
call
test
mov
test
xchg
add
pusha
xchg
cltd
outsl
xor
push
movsb
icebp
pop
cmp
stos
xchg
pushf
andl
out
dec
mov
aad
mov
sbb
jmp
roll
andl
cmpsb
jbe
dec
push
xor
or
repz
testb
mull
jo
mov
bound
push
cmpsb
cmp
inc
out
push
mov
fdivr
out
mov
pop
mov
or
stc
sub
ds
pop
inc
popa
out
or
js
mov
aaa
test
loope
cmp
jno
icebp
xchg
adc
dec
jge
pop
xor
shrb
sub
sbb
sbb
call
push
cmp
dec
outsb
ds
adc
push
cwtl
outsb
int
popa
stos
testl
xchg
aad
lahf
sbb
jmp
in
or
scas
pushf
sub
mov
sbb
jns
loopne
shr
dec
push
sub
add
ja
sub
adc
cs
lods
fstpl
pop
cs
jnp
mov
pop
orb
xor
hlt
adc
pop
scas
in
push
inc
pop
cmpsl
sub
mov
ss
orps
insl
out
js
push
insl
cmp
pop
xchg
sbb
out
xor
sahf
cmp
sub
cld
addps
push
mov
insl
outsl
out
push
lret
vpaddd
scas
pop
das
cmp
sbb
sti
add
daa
and
idivb
gs
xchg
add
in
sbb
and
cmp
mov
mov
imul
jl
adc
in
or
int3
adc
cmpsl
xor
pop
mov
aam
xchg
xor
push
jns
or
or
mov
mov
xchg
mov
out
inc
jbe
out
dec
ljmp
fs
add
add
jns
sbb
test
mov
adc
arpl
sbb
pusha
add
mov
lods
bound
mov
repnz
das
add
icebp
addr16
ja
adc
jp
test
xchg
xchg
inc
fidivrs
mov
loope
push
jns
lret
fistpll
andb
das
lret
push
mov
lds
push
and
lret
jmp
jl
cmpsb
sti
sub
xor
test
mov
mov
test
mov
mov
sub
sahf
mov
mov
mov
test
sbb
repnz
mov
je
sub
mov
add
pop
push
lret
fnstenv
jo
and
pop
je
jl
pusha
test
loope
bound
sbb
test
test
and
inc
icebp
inc
mov
mov
ds
dec
ret
cmp
jns
into
jp
fcom
jae
js
decb
nop
add
shl
push
inc
jle
rcll
jb
test
pop
mov
and
jno
mov
cmp
mul
mov
lahf
imul
loop
push
pop
inc
mov
int
dec
mov
jne
fwait
adc
xor
adc
lods
push
loopne
lods
add
loop
fiaddl
clc
push
stc
cmp
jle
loopne
daa
jno
lds
in
dec
inc
test
mov
jne
icebp
mov
or
push
sub
push
mov
ss
mov
jnp
lea
pop
xor
daa
mull
or
mov
insl
lcall
adc
call
cmp
push
jae
fnstsw
pusha
in
xlat
inc
push
and
in
mov
xchg
dec
inc
mov
push
sarb
loop
push
test
adc
jge
cli
jo
sub
adc
repz
dec
mov
inc
mov
outsl
dec
dec
rolb
xchg
decb
jae
decl
sub
ds
cmp
idivl
ja
or
int
or
shl
mov
lea
xchg
pop
xchg
sub
cmp
or
push
in
ja
adc
clc
dec
lret
int
jb
adc
inc
arpl
sbbl
and
and
mov
int
or
xchg
xor
repnz
cmp
sbb
dec
xchg
sub
ret
das
or
dec
sub
test
pop
idivb
mov
mov
pop
fidivrl
cmp
sub
loop
out
sub
fnstenv
xchg
enter
push
sbb
test
ss
xchg
imul
adc
push
repnz
rcrw
jb
imul
jb
shll
pop
mov
fwait
jno
test
out
pop
xchg
stc
sub
jbe
inc
adc
add
mov
outsb
mov
cld
shlb
rol
mov
push
cmp
adc
daa
sub
out
jns
adc
or
add
pop
push
cmpsl
push
daa
les
fisttpl
cli
sti
mov
or
insb
mov
jnp
and
insb
inc
data16
mov
pop
push
bound
pop
push
sbbb
fucomip
out
xchg
lret
nop
cs
sub
loope
in
aam
jmp
lret
imul
stc
xor
add
pop
shll
mov
cli
and
jb
mov
fs
lea
mov
mov
lods
lahf
sbbl
imul
imul
ss
and
into
rcll
pop
sub
ds
jno
pop
and
jo
fs
mov
cmp
cmp
xchg
sbb
inc
lcall
inc
hlt
popf
fnsave
xchg
pop
xor
outsl
shl
cmpsb
ljmp
jl
adcl
and
ds
push
dec
push
cmpsb
sbb
push
outsb
iret
pop
shl
and
dec
rorb
mov
or
jg
mov
or
push
lods
push
dec
cmp
mov
inc
jg
aas
rclb
jno
adc
or
fstps
dec
and
inc
movb
bound
clc
test
push
mov
push
in
dec
add
push
mov
cmp
rol
xor
jo
ret
push
cmp
xchg
mov
jp
int3
rclb
js
and
aas
gs
loop
repnz
push
jmp
outsb
inc
and
cmc
sub
sbb
call
sbb
fnsave
adc
call
imul
and
lods
cmpsb
or
inc
xchg
lahf
xchg
lock
neg
ja
shl
mov
sub
addr16
mov
pop
aad
cld
adc
cs
arpl
and
push
scas
jno,pt
mov
or
fs
jmp
mov
mov
sub
mov
out
push
xchg
bound
lcall
mov
js
xor
mov
jl
adc
mov
pop
add
push
or
test
mov
jno
inc
xchg
cmp
leave
and
mov
dec
cmp
pop
or
mul
scas
jle
fdiv
mov
sub
xor
pop
sbbl
lret
add
test
or
dec
rcpps
mov
sub
sbbb
stc
mov
test
xor
sub
or
inc
sub
cmp
cltd
insl
pop
dec
sbb
push
icebp
lahf
dec
dec
xchg
mov
mov
js
cmp
pop
or
sbb
sub
les
push
test
fnstcw
sti
test
aad
or
or
mov
jno
pop
sub
xchg
fwait
mov
mov
lods
xchg
bound
aam
aam
fiadds
ret
jl
jmp
lock
pushl
adc
stos
ja
lea
rcll
out
xchg
ljmp
aas
ret
arpl
sub
mov
das
lcall
fmull
ljmp
inc
mov
push
fmuls
sub
push
bnd
out
gs
stos
adc
pusha
outsb
mov
mov
xor
sbb
icebp
stos
popf
and
sub
xchg
int
xlat
mov
call
mov
clc
addr16
adc
hlt
mov
shrb
xchg
jb
cmpsb
xor
test
xchg
ss
stos
push
adc
mov
jnp
push
xor
and
mov
cmpb
insl
xor
mov
push
sub
or
xchg
push
pop
dec
mov
mov
jecxz
mov
mov
je
ja
cmc
aas
push
cwtl
push
push
adc
and
mov
add
out
test
gs
cmp
clc
pop
adc
ljmp
mov
inc
sub
inc
aam
inc
in
scas
lret
movsb
in
mov
imul
ja
mov
cmc
aaa
pop
mov
xor
xchg
lret
inc
or
mov
gs
test
fs
cmp
mov
inc
sub
inc
data16
jno
adc
mov
in
les
iret
jb
out
cmp
aaa
cmp
loope
mov
ret
int3
xor
jg
jno
test
xchg
ffree
aad
in
int3
in
inc
cmpsl
stos
lock
xchg
jmp
js
daa
add
mov
cmp
outsl
or
xchg
pop
lahf
aad
fbstp
sub
sbb
xor
xchg
sub
fsubrs
imul
aas
das
sti
push
and
sub
jg
fmul
aas
jle
and
sbb
imul
sbb
fisubrs
sarl
les
mov
mov
mov
pop
cmp
pushf
pop
push
or
dec
icebp
nop
push
out
es
aad
push
xchg
leave
pop
cmp
add
cmp
filds
pop
or
jno
shrl
pop
push
nop
daa
pop
and
daa
mov
aaa
mov
and
leave
push
test
jecxz
and
push
test
shl
iret
mov
xchg
mov
pop
lret
jae
xor
xchg
jo
test
imul
add
rcrb
xchg
dec
mov
push
dec
enter
insb
mov
fnstcw
fists
mov
cmp
mov
pop
cmp
dec
sub
enter
adc
inc
xchg
sbb
fld
jp
orb
repz
cmp
push
shl
cmpsb
mov
out
leave
jecxz
xchg
jbe
mov
cmpsb
add
ljmp
es
fistpl
jmp
pop
push
cs
in
inc
imul
clc
lods
dec
dec
xor
push
test
divl
mov
add
and
jbe
jae
jg
push
mov
lret
scas
aas
mov
push
into
inc
push
inc
mov
xchg
test
fsubrl
pop
frstor
icebp
push
xor
jle
arpl
xor
dec
and
leave
cmp
outsl
cwtl
dec
jg
gs
jmp
pop
cmp
xor
mov
dec
sti
iret
mov
pop
cld
or
jnp
mov
pop
adc
sbbb
data16
add
testl
repnz
and
lret
std
imul
repnz
pop
jmp
stos
aaa
xchg
repz
and
dec
sti
fwait
add
mov
js
pop
inc
add
cmp
mov
fbstp
pop
dec
sbb
mov
imul
fdivl
mov
dec
jecxz
insb
adc
loope
adc
fs
pop
dec
cmp
outsb
cmc
push
leave
in
adc
scas
xchg
loop
cld
outsl
jp
mov
fwait
enter
hlt
pop
xor
cmp
xor
adc
test
cmc
or
mov
adc
sub
mov
xchg
nop
aam
cmpb
scas
cmp
add
mov
dec
pop
aad
lahf
ror
jge
cmpsb
xchg
jg
daa
sub
aad
sbb
fbld
lods
sbb
ret
mov
pcmpeqb
push
in
enter
test
xchg
mov
rcll
int
and
add
mov
cmp
int
adc
insb
dec
add
dec
pusha
rcr
test
jb
in
les
out
fcompl
gs
or
xchg
add
out
push
ficoms
mov
xlat
int
out
push
call
lods
xchg
mov
lret
xchg
test
sub
nop
dec
pop
dec
mov
imul
pop
fiadds
cld
sbb
jg
jo
or
push
fidivs
mov
add
in
loop
aad
in
inc
cmp
popa
sbb
popa
mov
int3
mov
jecxz
add
mov
ret
ret
push
jno
addr16
xor
mov
cmpsl
sti
int3
jg
pop
ja
aam
pusha
cmp
or
pop
xchg
jnp
dec
cwtl
jbe
mov
loopne
dec
xlat
pop
mov
out
test
sub
das
out
aam
lret
mov
gs
pusha
in
push
mov
arpl
sti
add
subl
fldt
or
mov
push
roll
adc
dec
mov
mov
sbb
mov
addb
test
repnz
mov
rolb
lods
adc
or
dec
adc
shlb
dec
scas
push
jmp
mov
add
dec
inc
xchg
in
inc
daa
cld
insb
pop
jmp
pop
div
mov
sub
pop
mov
aas
xor
loope
int3
test
ret
xchg
jae
loop
mov
jnp
mov
mov
pop
sbb
mov
pop
icebp
sub
ds
clc
dec
ret
into
pushf
and
jmp
das
mov
cmp
sub
sub
xchg
fstl
adc
cmc
pop
xchg
inc
pop
sbb
jbe
insb
cmc
sbb
pushf
fidivl
ljmp
and
xchg
fdivrs
in
divl
jb
push
mov
scas
and
push
lds
negb
pop
adc
lds
rcrb
push
sub
test
in
mov
and
pop
sarb
jge
std
lods
dec
cmp
in
cld
ljmp
mov
jle
daa
sti
jmp
test
sbbb
test
ret
xor
stos
fsubrs
mov
scas
andl
jno
and
pop
adc
xchg
test
push
aas
xchg
sub
push
push
mulb
mov
notb
stc
mov
cld
xor
push
cmp
mov
test
jae
popl
mov
mov
stos
iret
pop
adc
je
inc
std
mov
mov
mov
into
jl
scas
mov
ss
xchg
faddl
lock
into
cli
leave
scas
mov
js
mov
scas
xchg
lods
sub
cmp
fidivrs
cmp
outsl
test
repnz
mov
scas
ror
pop
cmp
int3
cwtl
xchg
sbb
sbb
sbbb
or
rcll
pop
into
push
pop
adc
mov
inc
int3
lahf
mov
fsubl
or
xchg
outsl
and
jne
testl
stc
push
ret
mov
adc
stos
lods
push
mov
loope
push
push
into
popa
scas
add
mov
in
lods
adc
ficoml
and
mov
sub
ja
sub
addr16
xor
jecxz
popf
aaa
repnz
cmpsb
hlt
dec
and
lahf
jb
punpckhbw
cwtl
inc
or
adc
fadd
mov
popl
test
fidivl
js
inc
adc
aaa
sub
fnsave
loop
leave
cmpsl
sahf
xlat
fdivrl
insb
xchg
push
clc
fiadds
ltr
mov
adc
paddsb
lret
mov
fwait
cmpl
sahf
mov
lret
push
mulb
mov
out
mov
adcb
arpl
shll
sbb
mov
xchg
clc
sub
scas
orl
push
pop
jmp
arpl
imul
pop
sbb
add
lock
cmc
sub
fwait
js
addr16
jge
les
inc
push
ss
sahf
push
sub
add
or
jmp
and
sub
std
push
outsl
dec
mov
push
pop
fisttpll
push
and
loopne
inc
insb
sub
cli
push
and
adc
pop
lret
call
fsubrp
dec
inc
in
out
dec
adc
cld
cmpb
jge
fstps
stos
daa
jle
add
pop
dec
xor
scas
fcmovnu
add
lahf
inc
push
divl
fmul
rorb
pop
adc
flds
bound
sbb
insl
cmp
subl
insl
adc
mov
push
pop
iret
and
xor
popa
mov
cmp
repz
jmp
xchg
adc
or
adc
cmp
lret
mov
sub
daa
ja
fsubl
inc
jp
sbbb
aaa
sub
push
fildl
mov
lret
ds
mov
adc
dec
xchg
loopne
pop
inc
and
inc
lret
lods
push
js
sub
imul
aaa
jo
add
test
cmpsl
sub
cld
push
filds
mov
push
in
mov
imull
push
cmpsl
fbstp
insb
push
mov
dec
jo
es
push
inc
add
xchg
mov
scas
outsl
test
fs
mov
lahf
lret
test
and
and
pushf
inc
mov
adc
cmp
std
lods
sub
aam
add
add
lds
movl
cmp
ret
jae
cmpsb
add
mov
mov
out
test
jae
pop
aaa
out
dec
movsb
lods
cmpsl
lret
xchg
out
pop
int
rol
out
mov
sbb
push
pop
in
js
ja
shl
and
or
popa
or
sub
sti
hlt
or
cmpl
add
adc
sti
adc
adc
vmovsldup
push
fnop
cli
loope
adc
lcall
loopne
dec
repnz
into
daa
loopne
das
int3
repnz
aad
xchg
inc
xor
xor
fucomip
out
mov
or
inc
int3
inc
add
dec
mov
movsb
test
fs
lahf
out
jp
imul
jbe
test
or
lret
mov
sbb
xchg
int3
and
int3
popf
lock
ret
rclb
xchg
ja
add
loope
insl
jns
mov
aaa
sbb
inc
push
in
js
in
inc
out
adc
leave
arpl
es
dec
leave
shl
repnz
mov
pop
jmp
cmc
xor
pop
and
sbb
pop
push
add
mov
mov
xchg
stos
mov
ss
or
mov
movsl
xor
popf
shll
setne
sbb
add
aad
popf
xor
je
and
cwtl
jb
mov
psubsb
pop
sahf
ljmp
xchg
aaa
pop
adcl
nop
cmp
shll
popf
rorb
mov
adc
pmullw
lret
jp
jnp
stos
cltd
mov
sub
pusha
xchg
lret
push
xchg
adc
mov
mov
sti
add
negb
xchg
shlb
sbb
mov
cltd
scas
inc
jno
enter
aad
out
in
ja
sub
insb
dec
inc
push
cli
jmp
stos
pop
fisubrl
frstor
repz
add
pop
bound
call
jbe
dec
mov
out
jle
mov
loop
frstpm(287
cmpsl
mov
xchg
cld
popa
nop
popa
flds
repnz
fstps
jle
imul
xchg
ljmp
cmp
lcall
mov
xor
setb
sti
in
scas
jno
sbb
jno
jg
mov
xor
and
pop
pop
in
fsubrl
mov
jecxz
xor
sbb
test
scas
aad
xlat
rorb
dec
inc
addb
je
and
mov
outsb
lcall
sub
cmpps
cmp
add
pushaw
jg
push
adc
loop
cld
gs
sti
std
xlat
xchg
int
sub
pop
dec
rol
mov
mov
sbb
fmul
mov
jbe
in
in
sarb
gs
mov
mov
dec
lods
mov
bnd
ret
in
andl
push
ja
adc
js
inc
dec
and
mov
dec
add
mov
add
add
mov
cmp
mov
add
ret
add
jmp
imul
add
jo
outsl
sarl
xchg
push
and
inc
cwtl
inc
in
sbb
lea
faddl
cltd
cwtl
js
or
xchg
je
in
jne
mov
xchg
insl
stos
icebp
cs
push
sub
cmpsl
cmc
mov
add
xchg
sbb
in
scas
xor
hlt
outsl
or
add
cwtl
mov
sbb
mov
cld
mov
push
inc
stos
or
iret
and
push
pop
adc
adc
push
jbe
or
shlb
dec
inc
repnz
pop
repnz
mov
test
pop
sbb
hlt
out
adc
dec
mov
insl
inc
mov
in
clc
imul
and
pop
sarb
adc
cmp
js
xchg
jmp
or
stc
cmp
push
dec
adc
fistpl
leave
adc
adc
out
fimuls
jbe
icebp
sub
xchg
sbb
in
loopne
sbbl
and
bound
shrb
call
push
arpl
aas
je
sti
lods
arpl
jl
popa
xchg
dec
mov
int3
mov
mov
movsb
cmpsl
and
stos
cld
push
sub
xchg
inc
sbbl
stc
out
daa
push
pushf
sbb
xchg
sbb
mov
mov
std
mov
leave
xchg
fstps
rorl
inc
push
fnstcw
mov
in
inc
inc
nop
or
pop
inc
lea
mov
xor
pop
icebp
dec
test
and
push
leave
xchg
sub
dec
sub
gs
xchg
dec
jecxz
mov
xchg
push
stos
popa
shrl
mov
data16
cmc
or
dec
sti
inc
movups
xor
loop
sub
call
push
inc
xor
push
pop
xor
int3
xor
xchg
push
pop
mov
mov
xchg
loop
inc
leave
cmpl
or
sub
ret
lds
sbb
sbb
sbb
cmpsb
pop
cmp
scas
enter
fists
loope
stos
sbb
in
test
out
loopne
and
xchg
add
xlat
sbbb
mov
pop
pop
push
mov
jg
fucomip
std
add
aas
jmp
iret
not
jmp
cmpsb
cmp
gs
icebp
adc
out
aad
jns
addr16
lock
push
movzbl
pop
jmp
mov
sbb
lea
and
out
inc
out
mov
pop
mov
mov
jns
push
loop
mov
sub
dec
pop
gs
mov
rorl
mov
faddl
jge
out
cmp
mov
xchg
add
les
lcall
loopne
pop
sub
sti
inc
add
pop
cwtl
lods
inc
mov
addb
add
or
insb
xchg
cltd
inc
testb
dec
add
sub
lock
xchg
xchg
inc
xor
into
pop
mov
pop
xchg
push
and
testb
adc
xor
mov
rol
bound
mov
sbbl
js
sti
xchg
or
xorl
movsb
add
in
adc
lea
push
es
mov
mov
xchg
mov
jno
xchg
fwait
movsl
mov
pushf
cltd
jo
or
hlt
pushf
jge
popf
mov
insb
jne
movsl
add
push
andb
xchg
push
mov
mov
xor
adc
aas
lahf
xor
loop
push
xor
jle
outsb
lods
popf
in
fwait
add
mov
or
and
call
mov
mov
stos
sbb
mov
jge
dec
pop
inc
mov
pop
pushf
or
push
in
sub
in
ret
or
out
mov
mov
out
iret
mov
push
test
shll
or
pop
aas
lcall
sub
jno
insl
clc
repnz
sbb
fs
cmp
clc
xchg
or
pusha
in
cmp
loop
jno
mov
rdtsc
push
mov
jno
cmp
cltd
in
xor
lea
mov
inc
pop
bound
in
and
stc
mov
loopne
cmc
cmp
test
inc
imul
pop
nop
jno
cltd
testl
es
rcrb
adc
mov
bound
test
test
mov
add
xchg
sbb
lods
mov
test
mov
or
sbb
cmp
mov
mov
fldl
cmc
push
imul
sahf
adcl
or
popl
in
adc
sub
push
pop
jae
mov
sahf
adc
lcall
cmpsb
mov
xor
cmp
mov
cs
lea
pop
ljmp
mov
cmp
fidivl
dec
adc
jp
jmp
call
or
iret
and
pop
cmp
sbb
dec
mov
pop
jmp
and
fs
stos
add
cwtl
stc
sti
movsl
out
xchg
mov
adc
filds
push
xor
cmpsb
mul
inc
pop
xor
fisubs
test
outsb
sti
dec
lods
mov
ja
sbb
cli
jae
jmp
mov
adc
cmp
std
loope
sbb
xor
rsqrtps
xchg
cmpsl
clc
xchg
movsl
push
cmp
mov
sub
adcl
push
test
and
fidivl
pop
sbbb
mov
lcall
cmpsl
pushf
push
push
icebp
jg
push
and
lods
sub
push
fdivrs
push
pop
xchg
mov
pop
xor
cwtl
mov
add
rorl
mov
enter
imul
and
xchg
dec
lahf
jge
jne
out
mov
mov
lcall
imul
or
push
mov
and
pop
add
jmp
lock
cmpsb
add
fisubrs
in
dec
jns
out
sbb
mov
jno
mov
movsl
test
sub
pusha
lret
adc
pusha
orl
jmp
push
or
dec
fstpt
daa
cmp
das
cld
cmp
mov
ljmp
bound
lea
jle
cmp
lock
sub
add
push
mov
in
add
lcall
pop
jbe
xchg
xor
inc
push
jb
xor
aaa
test
pusha
hlt
push
subl
enter
cmc
cwtl
sbb
or
mov
ss
cli
add
adc
push
push
mov
and
sub
and
jno
sbb
pushw
inc
stc
test
add
fs
insb
mov
incb
pushl
call
inc
rcl
cmpsl
jo
call
mov
pushl
and
jno
cmp
test
ffreep
mov
nop
pop
push
mov
cmp
and
mov
mov
dec
mov
mov
mov
idiv
fs
hlt
jbe
sar
sub
in
sbb
xor
popa
jecxz
pop
sbb
in
mov
rcl
xor
or
je
or
jb
addr16
cmp
shrb
push
popa
ds
inc
xchg
sub
sbb
ss
fldz
xchg
lds
jecxz
scas
arpl
arpl
adc
pop
jg
mov
xlat
push
mov
leave
mov
lret
das
into
jl
cmp
mov
adc
jne
aam
add
es
push
push
jb
icebp
pop
dec
fcomps
dec
inc
xlat
mov
test
scas
jne
xor
popf
ljmp
sbb
sbb
add
push
jecxz
xchg
add
xchg
adc
iret
dec
test
mov
pusha
in
mov
fcmovbe
test
pushf
mov
clc
test
xchg
cmp
loopne
out
in
movsb
push
clc
push
jne
sarb
push
cmp
jle
pushw
adc
incl
clc
addr16
aaa
sbb
sbb
rcr
xor
jl
adc
daa
mov
std
cwtl
mov
adc
jne
dec
outsl
mov
lahf
push
fsubp
insl
gs
dec
xor
mov
addr16
cmp
sub
or
mov
mov
and
adc
scas
shrl
mov
mov
add
sbb
jns
test
dec
and
pop
mov
mov
shlb
mov
push
push
sbb
sbb
xor
or
pop
mov
cmpsl
iret
pop
nop
dec
sahf
data16
sub
or
inc
daa
jo
xchg
in
mov
rol
cmp
scas
in
add
fsubs
dec
dec
adc
adc
insl
dec
and
test
lods
jno
lods
pop
cld
add
cmp
jecxz
cmp
mov
push
sbb
jl
mov
cld
outsb
push
dec
jae
jmp
xor
mov
push
insb
sub
int3
sbb
jo
and
cltd
rorl
sub
sbb
lock
pop
pop
xor
data16
ds
xchg
rcll
out
das
hlt
jecxz
cmp
xchg
cmpb
mov
adc
data16
sub
adc
mov
and
add
fsub
push
outsb
cmpsl
stos
mov
xchg
mov
cmp
adc
or
int
mov
dec
outsb
adc
add
in
psubsb
push
out
clc
and
incb
daa
pushf
in
scas
roll
dec
fldt
or
lods
mov
pop
ja
jmp
rcr
mov
pop
in
or
xchg
mov
push
adc
aas
mov
pop
leave
cmpsl
pop
inc
cmp
jnp
mov
popf
sbbl
adc
icebp
popa
int3
imul
xlat
iret
stc
jmp
imul
ss
inc
aam
xor
add
hlt
jg
stos
sbb
pushf
and
popf
scas
cmc
gs
cmp
sbb
inc
stc
mov
loopne
cmp
push
inc
pop
fidivrl
subb
mov
not
es
jg
mov
mov
push
pop
in
xchg
sarl
xor
add
repz
xchg
nop
add
inc
xchg
sti
je
dec
sbb
xorb
ret
test
and
aad
jge
inc
cmpl
nop
shrl
mov
test
bound
adc
in
loop
push
test
cmp
sar
dec
push
nop
outsb
insb
mov
xchg
mov
fdivp
jg
mov
daa
adc
mov
ljmp
mov
mov
ret
lods
int
pop
dec
inc
dec
jge
adc
stos
or
and
xor
fsub
jp
or
pushf
push
fdivrs
mov
and
repnz
test
jns
jle
lret
int
push
out
popa
es
out
jbe
or
pushf
fs
cmp
jb
sti
das
pop
dec
shrl
push
inc
fiaddl
xchg
sti
nop
lret
add
inc
mov
and
xorl
adc
push
sti
jae
sub
lea
ss
icebp
jle
add
in
arpl
ss
mov
lcall
cmpsl
fdivr
xchg
mov
cmc
pop
imul
mov
imul
xchg
inc
rcr
pop
loopne
in
outsb
rcl
mov
xor
dec
cmp
pop
repz
cmp
jbe
insl
cwtl
addr16
and
sbb
not
cs
mov
in
scas
outsl
out
xchg
sub
pop
mov
mov
push
push
add
mov
test
out
adc
test
sub
sub
sub
sub
ret
pop
jg
xor
cmp
push
mov
pop
push
xchg
adc
xchg
jno
testb
mov
jg
gs
xor
ljmp
pop
cmp
mov
pop
ja
pop
mov
lods
lcall
mov
fcompl
xor
mov
stc
push
mov
inc
cmp
inc
fcomp
inc
sbb
in
jle
sahf
and
imul
inc
outsb
das
mov
xchg
insl
ja
mov
imul
shl
add
out
pushf
pop
mov
testl
std
jp
mov
leave
in
cmc
idivl
test
jno
add
ja
mov
stos
sti
xor
sarl
iret
lret
repnz
sti
cmp
loopne
mov
test
in
pop
xor
out
aas
sub
loope
xchg
mul
add
push
orb
xor
or
mov
pop
mov
mov
cli
test
inc
jmp
imul
test
or
or
mov
and
jnp
inc
sub
mov
ror
inc
mov
sbb
std
dec
dec
cmp
push
and
in
mov
fsubrl
cli
inc
xchg
xchg
xchg
pop
ds
fnsave
inc
pop
adc
dec
jg
cmp
outsl
mov
sub
mov
int
aam
fmull
incl
lret
or
inc
ret
loopne
mov
aam
sub
push
call
push
mov
out
in
dec
fisubrs
and
movsl
loopne
movsb
les
inc
nop
faddp
insl
das
push
fwait
fwait
fwait
ljmp
leave
movsl
add
sbb
outsb
aad
mov
lcall
aad
xchg
scas
xchg
iret
imul
xlat
rcl
xchg
and
stos
movsb
aaa
push
push
imul
repz
dec
lods
popa
jbe
ret
into
and
jnp
and
adc
push
pslld
mov
xchg
lods
inc
xchg
iret
nop
fnstcw
in
pusha
imul
imull
lret
je
icebp
mov
inc
xor
jno
add
xor
sub
jo
addb
cs
xor
xor
and
jecxz
icebp
inc
ljmp
pop
inc
pop
lock
jmp
adc
mov
ds
lock
inc
ds
or
fs
lahf
mov
mov
scas
xor
xor
xor
loopne
aad
sbb
sbb
mov
mov
mov
adc
jnp
enter
jle
movb
es
repz
frstpm(287
dec
decl
xor
adc
adc
pop
mov
cltd
mov
shll
lret
mov
insb
sub
add
xchg
xchg
dec
aaa
and
mov
mov
mov
test
mov
or
or
lea
or
sub
sbb
pushf
or
add
mov
hlt
ret
not
out
sysexit
sbb
jb
out
fsubs
or
out
int3
cmp
dec
mov
test
sub
add
pop
mov
mov
pop
aaa
mov
add
adc
dec
sahf
movsb
mov
rcrb
outsb
out
fldenv
mov
push
mov
mov
pop
in
lods
inc
xchg
aad
jl
mov
inc
aad
pop
in
fwait
cmpsb
ja
fsin
push
fistpl
pop
roll
popl
in
aam
gs
xchg
test
xchg
repnz
pushf
insb
sbb
insb
dec
roll
pop
shlb
aam
pop
jle
add
mov
jecxz
pop
cld
pushf
mov
test
cmp
mov
sub
and
mov
xchg
sti
dec
icebp
loop
adc
std
iret
imull
and
xchg
mov
test
mov
daa
jle
mull
repz
pop
xor
xchg
mov
les
pushl
jp
pop
lock
pop
mov
mov
jne
and
in
movsb
shlb
mov
lcall
iret
loopne
mov
or
or
rorl
stos
bound
test
cmpsl
pop
aaa
or
call
imul
bound
pop
xchg
shlb
cmp
xchg
ret
mov
fs
fbstp
bound
jns
mov
pop
push
repnz
adc
call
sub
jp
addl
bound
jbe
in
and
ljmp
leave
shrl
mov
xchg
mov
jge
xor
dec
jmp
and
lock
scas
xor
add
sub
adc
imul
push
jbe
mov
fmulp
mov
push
mov
xchg
ja
roll
cmp
push
imul
and
in
jecxz
push
das
fadds
imull
dec
pop
fwait
cmpsl
push
xchg
adc
mov
xor
adc
xor
push
xchg
sti
xchg
push
push
adc
mov
adc
push
mov
subb
fs
mov
xchg
pusha
hlt
mov
mov
sbb
xchg
cltd
jle
add
sub
jbe
test
cmp
add
insb
mov
pop
push
push
shll
jne
xchg
mov
pop
call
xlat
dec
cli
mov
fildll
bound
and
adc
add
into
cmpsb
ret
cld
xchg
cmpsl
sbb
and
cwtl
dec
push
inc
das
icebp
test
scas
sti
std
into
xchg
push
cli
xor
pushf
mov
add
mov
cwtl
xchg
dec
jl
sbb
push
and
nop
cld
sbb
fsubp
xor
xchg
daa
pusha
arpl
icebp
ss
ljmp
mov
lea
adc
into
lret
xorl
aas
jmp
sahf
frstor
scas
popf
or
outsb
in
xor
adc
dec
aam
int
push
cli
jno
fstpt
or
inc
fcmovnbe
in
mov
movsb
cmp
cmp
push
test
fcomps
call
add
fsubp
or
jge
in
add
imul
movsl
aam
sub
lahf
mov
cmp
jne
cmpsl
push
xchg
mov
dec
mov
cmp
push
cmp
daa
addr16
jl
icebp
imul
subps
jb
add
pop
xor
fldz
fs
loop
add
dec
mov
loope
jns
pop
mov
xchg
and
sti
sub
jmp
lods
shrb
iret
adc
dec
and
insl
pop
xchg
ficompl
inc
rclb
test
movsl
jne
jnp
push
cmp
insb
fcmovnu
jmp
nop
add
testb
sbb
xor
cmp
xor
adc
or
xor
imul
and
das
mov
lock
int3
shlb
cmp
popa
cmp
clc
int3
cmpsb
sbb
push
in
fnstsw
popa
imul
stos
jns
xor
jecxz
and
or
clc
aaa
inc
call
add
scas
rolb
or
cmpb
cli
cmp
push
ret
jl
inc
mov
xor
repz
cmc
ret
cmpsb
test
lock
inc
push
xor
or
lds
mov
xchg
test
inc
cmp
sbb
cmpsb
subb
cld
mov
sub
push
mov
push
mov
or
cmp
incb
or
or
xchg
or
push
adc
pop
data16
jne
inc
test
repnz
cmpsb
loop
and
inc
or
pop
ja
push
fisubrl
fstps
pop
out
or
xchg
dec
inc
mov
mov
test
xchg
pop
orb
inc
jmp
imul
pop
mov
add
jmp
push
add
or
jae
fstpt
pop
xor
loop
or
fsubr
adc
mov
lods
inc
pop
xlat
ljmp
ss
lahf
mov
sub
aam
lods
push
sahf
sbb
or
mov
fst
fnsave
arpl
sbb
out
les
cmp
pushf
xor
pop
adcl
xchg
lret
dec
insb
icebp
sbb
inc
push
mov
fistps
mov
sub
cmp
push
xchg
aam
sub
dec
pop
inc
add
fildl
jmp
sub
lea
mov
std
jmp
faddl
ds
test
inc
pop
cld
mov
in
int3
leave
xchg
cmp
cmp
push
jge
dec
or
scas
dec
mov
pusha
jno
cmp
xchg
subb
mov
xor
es
sbb
fnstcw
lahf
enter
dec
and
xor
imul
adc
sub
add
mov
test
js
pop
mov
cmp
sbb
cmp
outsb
clc
inc
mov
mov
test
dec
lret
mov
inc
movsb
popf
xchg
in
dec
aas
inc
or
sub
pop
cltd
aam
mov
jg
jle
repnz
lock
clc
dec
mov
loope
inc
mov
das
mov
hlt
sbb
cmp
addb
push
sbb
insb
mov
or
vpsubsb
mov
and
push
cmpsb
mov
out
lret
sbb
jle
jge
or
jmp
and
imul
cld
jns
jno
in
and
push
pop
in
arpl
cs
fists
mov
into
rcrb
inc
jg
jae
lret
rclb
add
test
pop
imul
scas
jl
enter
insb
sbb
mov
repnz
push
xchg
mov
mov
in
lret
mov
pop
dec
push
rclb
scas
or
cs
xor
divb
into
cmp
into
aad
or
ficoml
cmp
arpl
testb
andl
add
loop
stos
inc
xchg
ret
fwait
or
outsb
inc
popa
inc
andb
clc
aam
xchg
jge
mov
rcrl
mov
fstps
sub
lret
shl
xchg
stc
test
or
in
pushf
or
vmwrite
lods
xor
sbb
mov
push
mov
add
test
cld
or
xchg
and
mov
and
lea
and
xchg
mov
arpl
or
rcll
into
mov
lret
fmul
cld
imul
das
jge
ljmp
mov
les
pop
mov
insl
test
stos
lcall
xor
sbb
inc
js
push
xchg
adc
jnp
add
fmul
jo
jbe
mov
jns
mov
divl
inc
rorb
repz
cmp
mov
pop
iret
jnp
ljmp
ror
sbb
adc
js
sub
pop
add
ljmp
gs
data16
aad
enter
shll
sbb
loop
daa
mov
ljmp
jg
mov
and
fiadds
test
outsb
aam
pop
ss
jge
cmpsb
decb
rcrl
jnp
sbb
inc
or
lcall
popa
add
add
pop
sbb
sbb
mov
jecxz
mov
out
push
xchg
lock
mov
pushf
push
enter
cwtl
mov
out
jg
mov
sarw
cld
adc
arpl
push
imul
ljmp
adc
std
jl
loop
jmp
cmp
add
test
ret
inc
jo
mov
lock
ret
testl
inc
test
movsb
adc
dec
pop
and
mov
xor
dec
pop
mov
lahf
mov
movsb
xor
sbb
xchg
lahf
idivb
outsl
movsb
jle
test
jne
aaa
pshufw
lods
sbb
jmp
xchg
dec
dec
add
out
xor
pop
fisttpll
inc
test
push
inc
test
adc
jl
push
sti
mov
popf
dec
lods
out
pop
fwait
jo
and
mov
add
addl
sub
xor
adcl
addb
ror
addr16
lea
xchg
mov
push
mov
add
dec
leave
rolb
movsl
mov
lea
xchg
jp
outsl
sub
push
mov
imul
jne
test
ljmp
adc
xchg
xchg
imul
jle
cmpsl
jecxz
insb
movsb
pop
mov
or
loope
add
pop
loop
cmc
mov
outsl
push
xchg
fnsave
sbb
inc
mov
shr
jge
xchg
inc
push
sub
jno
sbb
jge
int
or
fldenv
push
cs
insb
cltd
fcoms
enter
dec
pusha
ss
aas
mov
sahf
jmp
jle
into
test
xor
mov
subb
fmul
xor
xor
dec
stos
sub
mov
mov
fucomi
cmc
adc
jl
int
adc
jno
jbe
sbb
scas
dec
cmpl
mov
nop
orl
xchg
rcll
mov
daa
jne
push
xchg
sub
xor
push
xchg
std
pop
adc
shrb
xchg
cwtl
js
mov
inc
out
into
jp
pusha
ret
hlt
sbbb
inc
pusha
cli
cmp
cmp
xorb
mov
addr16
orb
jb
and
mov
lea
sub
mov
imul
and
or
jmp
subb
pop
iret
lea
inc
sbb
pop
sbb
mov
cmp
in
mov
cmp
aad
movsl
jecxz
cwtl
inc
jb
mov
mov
xor
rcl
mov
loopnew
push
inc
ret
popf
dec
xchg
adc
data16
mov
ret
es
stc
inc
hlt
out
jo
int3
ds
and
pop
popf
and
sbb
push
stos
mov
jbe
pop
movsb
in
js
pop
cmp
xchg
test
xchg
fcoms
daa
les
sbb
insl
xor
rcrb
mov
jne
cmc
mov
mov
cltd
pop
fcoml
add
inc
jo
jae
add
das
xchg
out
ror
or
mov
xchg
scas
sbb
sub
daa
cmpsl
push
jp
pop
or
das
push
cmp
dec
mov
test
andb
aam
xchg
add
insl
sub
or
imul
xor
sub
cmp
rolb
stos
mov
and
pop
mov
test
and
insb
mov
test
and
add
test
mov
loopne
push
sbb
out
pop
mov
jo
sbb
jl
or
nop
mov
or
out
or
mov
out
xchg
mov
xchg
loope
in
adc
les
jecxz
cmp
pop
scas
clc
scas
and
test
rcr
stos
mov
mul
add
in
aas
loopne
outsb
xchg
addl
cmp
ljmp
adcb
pop
in
movsl
push
andl
cltd
dec
outsl
repnz
add
xchg
pop
cmpsl
jns
pop
and
insb
xchg
pop
loope
outsb
push
imul
cmp
or
outsl
nop
jbe
lods
pop
insb
out
loope
je
jecxz
sub
sbb
into
in
or
loop
movsl
sahf
push
imul
pushf
cmpsl
shrb
popf
add
dec
xor
xor
lret
addr16
cmpsb
add
imul
inc
in
popf
jge
pop
pop
inc
inc
adc
aas
pop
or
dec
fcmove
jge
and
jg
lahf
xlat
xor
ss
pop
lret
int
cmpsb
rcrl
xchg
pop
or
adc
push
xor
adc
jl
daa
arpl
roll
test
cld
fnstcw
sarl
push
jo
fdivl
in
pushw
int3
cld
loop
mov
sbbl
xchg
mov
test
xor
and
xorl
sbb
inc
stos
pop
cmp
shlb
fsubl
mov
push
out
xchg
push
inc
mov
cmp
das
xor
xlat
and
cwtl
cmpsb
cmc
cmp
sub
lret
imul
jo
push
push
mov
rclb
xor
sbb
adc
jno
out
sbb
inc
out
ss
xchg
sub
leave
fcoml
cmpb
and
mov
adc
fs
mov
nop
adcb
add
xor
mov
imul
cmpsl
jle
inc
lret
or
sbb
pop
repnz
pop
ret
je
push
nop
push
ja
sub
ret
fmull
pusha
in
add
jnp
mov
jg
cmp
dec
test
jle
icebp
adc
fs
mov
rorb
gs
inc
imul
aam
cmp
insl
popa
sahf
xchg
push
xchg
inc
and
lea
xchg
sbb
lahf
mov
scas
xor
add
out
insl
cmpsl
inc
push
jo
push
jno
nop
faddl
jecxz
js
shlb
inc
push
into
mov
std
fmulp
mov
out
imul
rolb
mov
shlb
aaa
sahf
sub
mov
or
stos
mov
pop
enter
mov
inc
mov
sub
jns
cmp
fisubs
aam
pushf
enter
cltd
pop
incl
push
mov
xchg
call
and
sbb
jno
push
jl
bound
ss
xchg
pandn
fstps
add
aam
adc
test
mov
sbb
outsl
jae
addb
xchg
shlb
lret
push
cs
test
pop
outsl
faddl
mov
ret
insl
pop
jecxz
cmp
xchg
inc
orb
sub
inc
das
shl
adc
nop
sub
shlb
cmp
jbe
lods
aam
sbb
ftst
jo
cld
in
popf
push
lret
rdpmc
sarb
push
cmp
scas
adc
cs
lods
mov
push
and
icebp
aaa
push
cltd
icebp
mov
jbe
xor
pop
test
aam
hlt
das
inc
negb
cmp
inc
cmp
repnz
int
pop
ja
loop
xorb
out
arpl
fdivl
dec
movsl
xor
inc
test
xor
fstl
xor
lods
aam
jmp
mov
jmp
cmp
xchg
in
adc
add
insl
xchg
mov
mov
js
je
repz
fmul
and
gs
flds
loopne
cmp
repz
and
adc
jnp
lret
adc
out
mov
test
mov
sbb
jae
mov
inc
sub
jnp
int
cltd
pop
fists
cmpsb
nop
jl
lods
out
mov
jp
jmp
fistps
sbb
test
pushw
adc
xchg
loopne
adc
adc
dec
test
insb
add
push
push
inc
fiaddl
push
dec
cmpsb
aad
out
subl
cmp
xor
add
jb
fistpll
call
cwtl
sbb
in
xchg
push
loopne
sub
sar
arpl
mov
jne
popa
sub
out
xchg
adc
mov
mov
jae
shll
push
loop
dec
mov
xlat
daa
sbb
icebp
adc
daa
in
or
xor
push
push
addl
push
std
inc
test
int
adc
int3
dec
add
cmp
in
sub
insl
int3
jg
out
inc
jno
mov
mov
push
sbb
pop
and
add
ret
test
mov
sub
pusha
xor
adc
mov
xchg
sub
pop
lea
inc
inc
lea
decb
cli
jb
inc
movsl
mov
jnp
arpl
repnz
sub
leave
push
jmp
sti
insb
push
and
aad
shrb
push
xor
pop
dec
jbe
icebp
rolb
sub
in
cld
push
punpckhdq
test
jno
movsb
adc
test
jns
pop
out
push
add
inc
sbb
mov
les
es
and
scas
lds
sub
inc
jg
dec
fwait
push
xlat
fistl
adc
movsb
mov
inc
pushf
cli
jne
ja
push
jmp
movsl
mov
sbb
pop
call
mov
lea
pop
inc
subb
cmpl
in
mov
or
js
and
cltd
mov
push
rcrb
imul
cmc
int3
inc
cmp
outsl
pxor
mov
mov
cmc
xor
xchg
imul
mov
pop
aam
test
push
jl
cmc
xor
insl
xchg
in
add
hlt
push
loopne
arpl
mov
aad
dec
xchg
xor
andb
je
addr16
and
xor
dec
inc
dec
mov
push
call
repz
out
orb
fmull
mov
jp
adc
sub
mov
cmpsb
push
ljmp
sbb
cli
jnp
idivb
outsl
popa
cmp
pop
or
popa
mov
negl
sbb
xor
or
call
or
scas
dec
sub
in
rcll
mov
pop
js
inc
loop
mov
adc
jecxz
mov
adc
aam
das
jecxz
or
pop
push
xchg
jb
or
mov
lahf
add
push
into
out
mov
add
and
cli
mov
sub
and
fiadds
ljmp
outsb
inc
daa
or
fiaddl
sbb
ffreep
xchg
pop
mov
test
lock
mov
sub
movsb
sbb
movsb
enter
inc
jno
jecxz
cmpsb
dec
test
sbb
loop
mov
mov
cmp
and
adc
test
add
pop
not
push
testb
movsl
ljmp
cltd
mov
in
sarl
pop
adc
mov
and
insb
sub
clc
inc
dec
mov
dec
adc
cmpsb
mov
inc
sbb
mov
loopne
addr16
and
sub
adcl
xor
mov
loope
inc
fwait
sub
mov
pop
mov
out
les
jno
movsb
and
dec
push
ja
pop
cmp
cmpsl
cmc
xchg
cld
gs
in
je
stos
cmp
popa
fimuls
sub
cltd
out
mov
sbb
inc
insl
adc
inc
xchg
jae
pop
adc
adcl
mov
mov
inc
mov
xchg
and
cmp
xchg
jl
sarb
loopne
sbb
xlat
pushf
rorb
sub
ret
rcrb
pushf
rcr
leave
push
mov
lea
and
stc
or
stos
loop
jbe
jle
pop
test
inc
ret
stos
mov
and
in
testb
scas
mov
repz
sahf
cli
aas
mov
arpl
addr16
nop
stc
mov
push
mov
mov
or
stos
ds
arpl
insb
add
pop
or
mov
insl
mov
andb
shll
pop
or
sub
test
loop
sub
mov
cmp
mov
sahf
notl
scas
xor
adc
adc
ss
xor
xchg
cs
lods
test
or
les
in
mov
push
pop
psrld
add
mov
xchg
mov
ret
or
in
ss
test
sub
mov
neg
add
dec
icebp
shlb
xor
mov
pop
mov
int3
xchg
and
and
lods
xchg
and
enter
data16
add
js
push
or
popf
pop
jge
pushf
aaa
add
mov
sbb
xor
inc
test
adc
rorb
sub
jge
mov
xlat
xor
cld
sub
cli
or
cmpsl
aam
mov
sub
loop
xchg
adc
icebp
movsl
mov
adc
mov
and
outsl
or
ret
sbb
or
out
jne
stos
pusha
repnz
jecxz
nop
int3
imul
ds
jp
outsl
mov
ror
inc
inc
mov
or
xchg
sbb
and
lret
andl
ja
dec
xchg
sbb
xor
push
pop
ss
jge
aam
xchg
xchg
mov
push
enter
sbb
mov
shll
mov
inc
cmp
cmp
enter
into
leave
mov
lahf
sub
pop
mov
mov
loopne
orl
aad
je
sbb
add
rolb
scas
pop
and
les
mov
cwtl
jecxz
movsl
or
add
out
test
mov
cmpsl
in
test
cmp
out
shl
shrb
das
mov
scas
pusha
imul
ja
sub
add
fwait
and
movsb
nop
jae
loopne
adc
add
mov
cs
xor
hlt
ffree
ret
and
mov
sbb
and
xchg
cmp
pop
push
ret
iret
jge
rcrb
push
lahf
xchg
not
scas
rolb
divb
sub
popa
or
jns
mov
cld
jl
outsb
andl
popa
and
jecxz
xlat
xchg
div
mov
pop
mov
mov
adc
mov
iret
sbb
inc
mov
sub
jbe
rcrb
lds
clc
imul
xor
adc
sub
roll
xor
adc
mov
mov
add
dec
das
das
dec
jnp
pop
push
pop
jne
jmp
daa
add
stc
xchg
outsb
loop
inc
loope
fcmovnb
inc
jns
or
pop
sub
pop
testb
scas
or
fildl
adc
js,pt
sarb
adc
popf
xchg
divb
mov
test
add
inc
dec
mov
pop
xlat
xchg
xchg
cmp
addb
scas
shll
rorb
test
xor
jp
outsb
popaw
loope
or
shrl
push
mov
jp
and
cltd
jbe
mov
stc
jecxz
inc
add
shl
mov
inc
stc
cmp
jg
sbb
push
ds
fisttpl
inc
clc
mov
outsl
insl
scas
mov
dec
or
jb
lcall
or
andl
push
xchg
mov
mov
sub
sbb
pusha
push
add
inc
xchg
js
lock
sub
aas
inc
adc
test
ds
imul
mov
andb
scas
sbb
int3
ret
dec
loope
mov
cld
mov
dec
xor
add
push
shrl
in
sbb
sar
inc
jne
stos
nop
pop
pop
xor
aaa
dec
daa
or
js
outsb
cli
sbb
and
or
add
jge
mov
lods
js
cmp
or
das
jbe
fistps
mov
insl
mov
inc
push
and
sub
jp
pop
leave
jnp
mov
jne
mov
push
and
mov
lock
sti
fdivr
pushf
jno
movsl
and
je
cmpsl
xchg
addr16
rorl
xchg
pop
and
ret
push
mov
jmp
movsb
mov
lahf
iret
loope
sub
dec
mov
sub
xchg
test
pop
lods
and
lods
sub
inc
pop
fcoms
lret
mov
jbe
mov
rcrl
xchg
add
mov
fldcw
into
cmp
pop
cmp
sub
inc
cmpsb
lods
add
insb
or
pop
mov
add
sahf
mov
add
mov
stos
push
mov
adc
adc
push
push
mov
or
fldenv
in
pop
mov
push
cmp
mov
rolb
add
xlat
sbb
or
or
notb
movsb
fidivrl
leave
pop
scas
nop
or
mov
cmp
lods
xchg
nop
xor
fwait
pusha
push
stos
mov
fidivrs
push
out
aad
incb
cli
and
mov
xchg
aas
mov
push
pushf
mov
cwtl
ss
jmp
mov
mov
in
movsb
popa
sub
dec
mov
js
mov
or
fsts
adc
or
add
sub
push
mov
xchg
test
in
idivb
jns
es
and
jg
pop
mov
and
jo
dec
fistl
out
packuswb
cld
out
daa
loope
push
cmp
lahf
xor
rolb
inc
daa
fisubrs
in
popf
dec
inc
incb
les
out
or
pusha
loop
adc
or
xchg
jno
mov
gs
movsl
mov
gs
inc
mov
mov
jne
and
call
jae
cwtl
jne
movsl
ret
pop
sbb
jb
hlt
shlb
jo
in
es
xor
xor
insb
stos
test
push
dec
js
call
jne
movzbl
int
scas
or
jge
inc
psrad
aas
mov
inc
sbb
or
int
mov
bound
inc
ds
and
push
mov
repz
mov
mov
imul
imul
lods
sub
and
and
pop
xchg
imul
enter
dec
push
jnp
ficomps
jge
push
jg
insb
aam
jl
pusha
lret
test
ja
inc
loop
xchg
mov
cwtl
jbe
mov
lret
sbb
lahf
and
ss
testb
adc
sarb
mov
cwtl
mov
cmp
ret
fldcw
inc
je
or
cltd
and
pop
cmpsb
push
xchg
jp
or
loope
aaa
inc
test
cmp
jle
xchg
cwtl
cmpsl
or
fsubrs
in
data16
or
inc
cmc
adc
mov
movsb
adc
and
and
sti
test
ljmp
std
sub
jge
jge
mov
test
andl
and
push
mov
inc
sub
sub
mov
pop
push
add
jnp
pop
jecxz
and
jb
lret
xchg
mov
and
mov
mov
xchg
inc
mov
or
ljmp
dec
or
mov
and
scas
je
nop
sbb
mov
out
cmp
inc
dec
xor
xchg
mov
popf
js
push
in
out
inc
xchg
orb
or
insb
arpl
loope
ret
cmp
fidivrl
sbb
push
cmp
jle
add
out
mov
mov
push
xorl
pop
mov
insl
mov
inc
cmpsb
push
outsb
aaa
negb
push
inc
mov
jne
push
jle
xor
or
xchg
fisubrs
pop
pop
lret
pop
sub
sbb
adc
adcl
jle
xor
mov
movsl
and
adc
call
or
enter
lea
and
hlt
push
stos
mov
fmull
add
pusha
testl
add
jne
adc
mov
add
fwait
stos
mov
shl
test
jle
sahf
cld
and
aaa
dec
pop
mov
inc
pop
icebp
ss
xchg
les
pop
push
jmp
jnp
sbb
mov
cmc
xacquire
lds
lods
add
adc
ss
inc
and
rcrl
jo
add
aaa
insl
fcoms
jae
dec
push
aad
sbb
outsb
out
int3
fwait
sbb
in
xor
pop
push
adc
mov
sbbb
sbb
xor
xlat
mov
cmp
sbb
lods
jmp
mov
dec
into
nop
mov
inc
test
push
into
xor
xlat
cltd
lret
and
int3
aam
testb
mov
dec
xchg
mov
pop
sahf
adc
adc
adc
and
fbld
pop
das
in
into
dec
mov
iret
pop
loop
cld
loop
mov
xor
mov
cmpsl
popf
bound
nop
daa
das
cs
dec
xchg
popa
xchg
cmp
xchg
cmc
ljmp
jo
sbb
fnstcw
int3
int
pop
insb
jmp
xchg
in
adc
push
jae
adc
jae
repz
mul
push
int3
arpl
or
jl
data16
adc
imull
pop
mov
xor
rorb
daa
les
rcrb
ljmp
jp
rcr
dec
or
inc
nop
divl
xlat
push
aad
mov
in
cmpb
add
cmp
rorb
testb
in
ljmp
add
mov
out
mov
push
cltd
or
mov
sbb
jno
jo
loopne
pop
push
xchg
pop
mov
push
or
nop
cli
repnz
lds
push
xchg
subl
and
leave
imul
call
cltd
and
mov
inc
movsb
xor
and
shl
aaa
int
popa
gs
int3
mov
jecxz
hlt
cld
adc
add
ja
cli
inc
sub
jmp
sbb
lods
cltd
and
les
lock
mov
pop
cmp
pop
mov
in
jmp
pop
push
pop
lds
iret
into
add
sub
mov
mov
fsubrp
add
fldcw
dec
pop
pop
push
mov
stc
mov
ret
mov
scas
pop
xchg
cmpsb
mov
call
mov
pop
cmp
mov
ret
lods
sub
hlt
movsb
lar
clc
ficompl
stc
add
lahf
add
aad
and
xor
or
sbb
dec
push
std
fisttpl
ljmp
xor
lea
jne
mov
lcall
pop
imul
inc
negl
inc
and
adc
mov
rcll
lds
mov
lea
mov
outsb
in
add
call
or
stos
xchg
push
in
fsts
jb
addr16
xchg
outsb
cld
mov
dec
add
mov
add
out
imull
xchg
arpl
sbb
sbb
aad
push
and
mov
cmp
xor
pop
mov
ret
out
cmpsl
loopne
dec
adc
sub
test
pop
fisubl
idivb
je
adc
subl
ret
sub
pusha
daa
and
leave
rorb
push
pop
dec
int3
inc
sbb
sub
push
popa
iret
and
cmc
and
call
sbb
add
mov
sbb
add
mov
push
inc
repz
imul
xlat
xchg
out
push
idivl
mov
sti
cs
insb
adc
imul
das
mov
out
mov
ja
add
add
outsl
imull
mov
add
out
mov
rclb
adc
insl
sub
xchg
enter
mov
mov
lret
cmp
mov
fs
or
xchg
sub
les
add
call
sarl
js
testl
int3
pop
jns
inc
mov
fimuls
cmp
in
std
imul
stc
rorl
dec
push
scas
shlb
fmull
cmc
push
jmp
filds
pop
jecxz
out
in
loopne
mov
inc
dec
out
and
push
sti
cmpsb
js
leave
xchg
fcmovnb
xlat
adc
push
dec
ret
aas
push
in
shrb
daa
rcrb
jmp
in
jb
stc
pop
jbe
jecxz
jmp
cmp
movsb
mov
adc
mov
jecxz
repnz
mov
sbb
xchg
mov
arpl
adc
or
ja
in
sub
sarb
push
scas
sbb
add
out
sbb
or
xchg
iret
add
jmp
dec
cwtl
push
pop
testl
leave
jo
stos
xchg
and
cmp
cld
and
dec
test
lcall
cmp
cmc
les
sub
sub
push
out
xlat
mov
inc
xchg
lea
cwtl
lcall
sbb
push
xchg
push
es
lea
push
repnz
and
pop
pop
pop
xchg
mov
outsb
outsb
cwtl
add
out
jno
xlat
test
mov
adc
loopne
incl
or
mov
jbe
pop
imul
insb
out
push
test
popf
dec
cli
mov
sbb
cmpl
dec
addr16
lahf
mov
mov
xor
rcr
and
push
adc
push
add
ret
cmp
xchg
dec
cmp
into
notb
push
fldcw
rcl
setge
xchg
jno
imul
in
push
arpl
or
mov
ss
jg
mov
adc
cmpsl
mov
mov
push
jne
jo
cmp
adc
pop
popa
mov
fsts
mov
adc
ret
cwtl
inc
sbb
test
das
out
push
cltd
dec
rorb
pop
cli
aad
ds
add
and
loop
xor
loopne
adc
push
mulb
jno
xchg
gs
pop
jo
subb
push
test
or
loope
push
stos
dec
mov
lcall
adc
loope
dec
dec
jmp
shlb
and
imul
xchg
in
sbb
jns
test
stos
nop
out
or
hlt
jmp
dec
or
rorl
mov
clc
lock
inc
bound
mov
push
mov
cltd
es
lcall
shl
in
sbb
sub
fstps
rcr
adc
jbe
push
movsb
inc
or
or
sti
jbe
iret
imul
shl
pop
xchg
aas
loope
inc
retw
aad
xlat
cmp
cmp
mov
fisubl
cmp
jbe
inc
std
lds
inc
cs
xchg
mov
pop
sub
divb
pop
push
int
les
xor
jge
sbb
jae
icebp
cmp
addr16
mov
fcmovb
pop
mov
inc
cmp
add
pop
xchg
mov
mov
pop
jb
adc
dec
cmc
jne
xchg
into
xchg
mov
xchg
in
ret
xchg
or
arpl
xchg
das
mov
or
dec
and
push
cmpsb
mov
mov
cmp
loopne
inc
lret
rcll
sbbl
pop
jne
push
clc
mov
mov
mov
sub
mov
mov
inc
test
lret
popf
push
adc
ficoml
movsb
in
ret
push
jmp
rclb
cmp
jne
mov
xchg
adc
or
leave
xchg
lds
aad
and
jae
fists
out
lret
inc
jae
shrd
sub
ljmp
mov
mov
insb
xchg
mov
xchg
push
add
inc
or
js
rcrl
pop
data16
mov
jg
mov
pop
fnsave
mov
push
xor
mov
pop
xchg
cmp
mov
ja
out
cld
pushfw
jb
cmp
pop
sbb
clc
insb
adcb
adc
jb
or
aam
cld
sub
cmp
inc
push
mov
push
mov
je
ljmp
push
or
sbb
pop
sub
rorl
pop
rcrl
in
mov
inc
mov
xchg
add
test
or
push
imul
adc
imull
and
mov
lock
jmp
icebp
das
dec
test
xorl
lret
test
imul
fistpl
xchg
daa
xlat
or
or
xchg
ret
mov
pop
stos
pop
xchg
or
mov
stc
pop
in
ficoml
xchg
cmovns
aas
incl
xchg
xchg
fdivrl
or
lret
mov
ret
adc
popf
dec
push
imul
or
xchg
loopne
jns
mov
jecxz
sbb
inc
shlb
cmp
inc
lret
add
or
xor
lahf
and
imul
sbbl
push
inc
add
push
loopne
xchg
push
jmp
sbb
shrl
scas
mov
sub
out
push
xor
movsb
add
pop
push
jl
xchg
mov
ficoml
push
mov
add
mov
aam
leave
cld
mov
dec
or
data16
sahf
pop
xor
cmp
jnp
cmp
in
mov
insl
inc
sbb
out
out
mov
xchg
push
xor
add
mov
xlat
xor
pusha
pop
imul
nop
xchg
fcomps
lods
enter
shlb
or
mov
jl
pop
negl
hlt
xchg
pushf
lret
subl
stc
pop
andnps
out
mov
jl
andl
maxps
adc
test
out
fs
mov
mov
jmp
mov
movsl
sbb
adc
xchg
push
add
jne
in
mov
cltd
pusha
out
dec
dec
jmp
xor
push
and
dec
stos
lds
loopne
jmp
js
out
rclb
add
adc
pop
jbe
pop
ret
push
inc
mov
jo
sbb
xchg
mov
xor
loopne
mov
mov
mov
cmp
frstor
xor
cmp
int3
pop
add
and
push
gs
inc
arpl
mov
mov
jmp
push
dec
mov
cmp
xchg
fwait
or
call
ret
xchg
out
insb
push
dec
or
push
fsts
inc
movsl
fstpl
xchg
fmull
inc
or
dec
fstl
data16
inc
jb
daa
inc
sbb
mov
dec
popa
sub
imul
leave
aad
mov
loop
je
stc
mov
mov
pusha
dec
in
xchg
fs
mov
dec
jno
mov
nop
cmpsl
ficoms
fstps
jo
pop
or
and
mov
xor
pop
xor
pop
mov
shr
call
andb
and
sbb
mov
icebp
shrl
hlt
out
into
and
mov
jne
cmpsb
or
cmp
movsl
and
sbb
inc
or
pop
jmp
mov
aad
rclb
push
dec
inc
sub
pop
aaa
repnz
jp
adc
mov
movsb
push
xchg
jecxz
dec
mov
nop
int3
mov
push
into
outsb
hlt
mov
push
movsb
jo
jb
xchg
inc
mov
in
cld
fwait
lret
and
leave
out
xchg
inc
cmp
jg
cwtl
clc
loop
movsb
lret
pop
divb
xchg
sbb
icebp
sbb
mov
push
das
pop
out
cmpsb
repz
mov
imul
divb
sub
incb
ljmp
or
scas
mov
out
cwtl
popa
shrb
push
xchg
jne
sub
mov
push
xchg
cwtl
jmp
enter
lods
mov
or
add
pop
shr
andb
mov
or
xchg
jbe
fiaddl
jbe,pn
imul
rclb
ds
and
mov
fs
sub
adc
add
push
inc
sahf
inc
pinsrw
xor
dec
or
mov
mov
std
lds
out
mov
pop
fwait
jnp
das
pop
cmpsb
cmp
sub
cld
cmp
push
aas
adc
std
cwtl
dec
mov
and
cmp
mov
arpl
cmp
dec
aas
in
sbb
cmp
jnp
xor
dec
inc
ja
add
push
repz
or
stc
inc
xchg
cli
loopne
pusha
xor
ja
mov
mov
mov
push
gs
hlt
scas
nop
dec
push
rcll
mov
inc
push
push
push
cmp
fldt
adc
test
out
aas
pop
adc
mov
inc
sbb
shlb
sbb
pop
das
dec
sbb
cmpsb
sahf
or
hlt
aam
xor
arpl
loop
addr16
imul
push
pop
mov
adcb
out
outsl
loope
or
dec
adc
push
cld
aam
jle
pop
js
cmc
cmp
into
jo
aas
test
cmpsb
mov
xor
xchg
movb
outsl
xor
leave
xor
sti
inc
push
inc
xor
fdiv
dec
add
stos
movsb
arpl
andb
inc
push
pop
or
in
xchg
imul
cmp
mov
sbb
push
test
mov
inc
mov
mov
fdivr
cmp
lahf
mov
cmp
inc
jne
jo
adc
xchg
add
pop
mov
sarb
jl
fstl
js
xchg
inc
int3
and
or
jb
and
dec
pusha
jns
mov
hlt
sub
dec
jno
mov
fidivl
inc
insl
fnstsw
lods
ljmp
in
sbb
sub
jns
dec
xor
cmp
movsb
cmp
mov
dec
les
push
or
pop
mov
pop
mov
adc
test
std
cmc
push
jbe
cmp
push
mov
loop
push
es
and
xchg
mov
ja
in
js
xor
sahf
hlt
sbb
add
xchg
or
gs
and
fcomi
pop
outsl
sbb
fmuls
jne
jl
dec
lret
setns
jle
aad
sbb
popf
fildl
ds
adc
mov
adc
cs
aad
sbb
mov
leave
fisubrs
call
and
sub
sbb
adc
sbb
lahf
sub
xor
dec
popa
inc
dec
in
out
jno
mov
loop
insl
je
add
insl
daa
cmc
ret
jecxz
mov
fildll
mov
push
int
pop
dec
into
mov
imul
mov
cwtl
rcr
mov
js
inc
xor
fbstp
out
rclb
inc
mov
outsb
inc
fsub
rclb
or
or
dec
jns
sbb
lock
dec
nop
stos
inc
fsub
lret
out
sahf
inc
es
data16
add
xor
mov
mov
sbb
int
dec
cld
mov
shll
les
jns
jnp
dec
and
les
ret
sti
xchg
inc
cwtl
jbe
lock
clc
mov
push
test
pop
cmp
push
mov
repz
testb
int
sbb
xor
ficoms
aas
movsb
add
subl
fdivl
mov
sbb
push
stc
sub
cmpsl
sub
gs
mov
push
leave
cmpsl
or
jp
shlb
icebp
sbbb
inc
dec
mov
bound
clc
pop
sbb
mov
test
jecxz
mov
xor
or
adc
pop
ss
sbb
sbb
adc
cli
cwtl
int3
mov
push
inc
cmc
sahf
movsl
lret
std
xor
mov
cmpsl
fsubrl
push
aas
push
mov
mov
and
scas
lods
xor
ja
sti
xchg
xor
mov
pop
mov
lods
pop
push
mov
lds
imul
clc
xor
outsl
or
dec
data16
iret
push
lahf
mov
push
rolb
sub
stos
lret
mov
fsubs
mov
leave
xchg
ss
cs
pop
lret
mov
mov
push
jl
and
out
rol
jbe
ret
xlat
aas
std
jge
add
mov
and
push
lcall
fdivr
or
dec
fsubp
push
movsb
push
cmp
mov
ja
push
jnp
mov
ljmp
cmp
and
jg
insb
mov
shll
mov
lods
sub
pop
jmp
mov
ja
ds
sbb
or
test
ficoml
inc
pop
stos
out
scas
mov
or
add
shll
in
push
fwait
rcrl
insb
xor
sub
lds
mov
push
mov
clc
aad
mov
mov
loop
and
movl
or
movsb
mov
mov
and
adc
outsb
xor
fs
faddp
sub
push
repnz
mov
xchg
cmpsb
and
mov
or
xchg
mov
shrb
loopne
popf
dec
inc
fstps
inc
pop
shrl
shll
enter
hlt
pop
pop
mov
mov
das
sub
das
xchg
jp
aam
jne
test
push
pop
jo
push
daa
fstpl
enter
xor
repz
jg
dec
jl
idiv
int
fsubrl
and
add
test
inc
pop
test
stos
xor
and
fistpl
or
mov
xchg
push
mov
xlat
add
imul
mov
das
test
js
push
push
mov
sub
mov
mov
jmp
imul
lods
push
lods
mov
lret
fwait
cli
dec
fwait
ja
jo
add
jb
clc
aam
loope
inc
int3
insb
pop
and
inc
push
int
ret
ret
out
loop
pop
sti
decl
idivl
xchg
push
mov
and
lea
add
sub
out
inc
enter
and
xchg
xchg
and
inc
xchg
mov
pushf
xor
jge
sarb
movsl
pop
xor
xor
mov
es
ficomps
pop
aaa
dec
sbb
inc
push
imul
push
sub
sbb
hlt
andl
jmp
fcompl
cmp
stos
sti
pop
add
inc
mov
cltd
and
fwait
jo
inc
iret
out
lds
cli
sbb
imul
aaa
icebp
bound
imul
sti
jbe
push
add
cmp
fidivl
dec
cs
dec
imul
popa
int
dec
cmp
mov
ret
mov
cmp
jecxz
xchg
pop
or
xor
cmpsb
scas
lcall
sbb
dec
test
outsl
subl
add
aam
lret
pop
repnz
leave
nop
loopnew
or
pushf
adc
call
mov
dec
adc
mov
scas
mov
xor
outsl
sbbb
int3
std
popa
pop
mov
enter
pop
fwait
lret
pop
sbb
js
adc
arpl
rolb
adc
leave
cmp
mov
xchg
andl
out
repz
stos
mov
ljmp
mov
popa
inc
sbbl
jns
fistpl
inc
xchg
sti
notb
xchg
rolb
mov
mov
xor
xchg
push
adc
and
pop
pushl
sbb
movsb
fs
std
mov
xor
test
add
lods
fisubl
fwait
ja
addl
or
sbb
or
xor
daa
out
pop
aaa
ss
sahf
dec
push
es
aam
in
mov
mov
mov
mov
imul
sahf
add
inc
subl
sub
pop
cmp
mov
pop
movsl
push
sub
jp
out
push
test
test
mov
or
push
xchg
cmp
sub
les
dec
repnz
mov
ret
hlt
imul
adc
adc
push
sbb
insb
jg
pop
repz
dec
xor
ret
pop
sub
jbe
std
cmp
pop
icebp
insl
lods
imul
dec
mov
jb
rcrb
shl
cld
and
ljmp
enter
pop
jg
push
pop
sub
nop
cs
cmpsb
and
fstl
dec
mov
push
scas
addb
jp
pop
fiadds
and
jno
adc
and
lds
lea
push
adc
int
cmpsb
push
add
cwtl
sub
dec
stos
leave
ret
loopne
mov
or
mov
stos
pop
cmc
lea
faddl
nop
popa
mov
push
arpl
push
imul
enter
inc
inc
stc
cmc
stos
clc
arpl
int3
mov
pop
sahf
fxam
jge
insl
ror
dec
cmp
fmuls
xor
enter
and
popf
in
jl
test
push
cmp
and
lods
sub
pop
dec
and
and
bound
pop
mov
dec
and
arpl
rolb
lcall
xchg
addb
inc
ss
fisttpll
adc
xchg
and
leave
movsb
or
add
outsb
in
xor
dec
mov
in
sub
jp
lret
pop
movsl
fcoms
push
dec
rcll
sarb
out
fcoml
pushf
shll
sbb
mov
out
outsb
push
ret
mov
sub
push
jne
repz
inc
aas
aas
repnz
iret
ret
aaa
js
xchg
cmpb
push
scas
comiss
div
jb
mov
or
dec
jg
lea
mov
push
adc
dec
cmp
xor
cmp
ficoml
push
cmp
xor
dec
and
fildll
jge
xchg
repnz
iret
inc
stos
lahf
jnp
stos
inc
mov
cmc
inc
loop
mov
adc
or
push
or
das
pop
test
xchg
push
and
pop
mov
aas
push
sub
gs
fucomi
shll
ljmp
mov
sbb
sti
jae
fisubs
adc
cmp
and
adc
add
jg
sbb
cli
xchg
dec
xor
lahf
cli
orl
xchg
in
out
jecxz
mov
dec
jne
imul
outsb
pushf
push
fldl
mov
loop
aam
pop
sbb
and
dec
mov
loopne
adc
je
jmp
inc
add
push
jbe
aaa
sbb
and
add
sub
mov
pop
clc
lret
fcomps
push
inc
dec
mov
and
lods
or
push
xor
rcr
daa
mov
xchg
and
sbb
cld
loopne
stos
in
mov
inc
xor
mov
pusha
sarl
pop
bound
pop
rol
mov
sarb
sbb
ljmp
adc
xchg
cs
jae
outsb
ss
dec
lods
imul
jecxz
xor
nop
imul
cmp
test
hlt
pushf
add
ficomps
enter
xchg
add
rcll
cwtl
xor
jl
nop
data16
lret
lock
push
add
addr16
and
int
push
pop
mov
mov
gs
pop
fcmovnb
stos
xor
pop
mov
and
xchg
ret
cmp
sub
test
cmp
lods
cmp
jae
cmpsb
inc
jge
cmp
mov
push
or
repnz
inc
loope
or
out
into
sub
clc
adc
loope
adc
loopnew
pop
lea
mov
test
cli
lahf
aas
leave
notb
and
jbe
stos
jecxz
nop
mov
orl
push
pop
xor
and
cmp
les
cmpsb
out
fisttps
sbb
or
sbb
mov
cmpsl
bound
add
aad
dec
xor
leave
pop
addb
ss
iret
out
popa
inc
fildll
jnp
sub
mov
and
stc
fdivs
lret
loope
cwtl
pop
cld
sbb
jbe
jg
test
lret
and
in
divl
hlt
leave
mov
fstpt
icebp
int3
jge
sbb
push
mov
out
dec
out
inc
sbb
dec
les
dec
int
bound
adcb
shl
inc
inc
xchg
lods
lds
cld
les
dec
sbb
into
mov
fwait
push
mov
xchg
jmp
out
xchg
cmp
xorl
dec
mov
stc
icebp
push
inc
int
sbb
ja
xor
add
fisttpl
mov
add
pop
push
shr
test
pop
scas
cld
pop
jg
push
xor
sti
cmp
push
pushf
imul
ficoms
repz
and
inc
cmp
add
fwait
in
aas
fwait
cmp
jnp
mov
je
and
movl
divl
mov
add
ss
cvttps2pi
in
pop
mov
cmpsb
or
ljmp
das
mov
rcrb
mov
xchg
xor
cld
push
pop
and
test
iret
xor
or
pop
dec
sti
sub
das
sti
cli
pop
cmp
orl
test
ljmp
and
lods
jne
imul
mov
fmulp
into
mov
mov
pop
out
popf
push
popf
push
xchg
cmp
mov
out
sbb
cmp
sbb
loope
xchg
sbb
addr16
push
adc
insl
pop
iret
and
in
jmp
sbb
loop
ret
pushf
pop
or
loop
inc
mov
add
mov
jmp
xor
xchg
mov
scas
xor
cmp
lcall
pop
jle
loope
pop
push
cmp
enter
jnp
mov
mov
push
ljmp
repnz
shlb
adc
pop
sbb
adc
clc
mov
or
insl
lcall
xchg
xor
out
pop
add
ss
mov
loope
pop
addl
cs
inc
loopne
out
mov
mov
xchg
jno
fimuls
push
mov
lods
mov
pop
inc
add
and
hlt
push
mov
push
enter
inc
adc
mov
xor
lock
shll
add
in
push
and
inc
sbb
dec
insb
rolb
leave
mov
fsub
push
and
add
mov
pusha
in
xor
test
adc
out
dec
cmpl
daa
and
push
dec
lahf
popf
xor
push
pushf
push
fwait
insb
dec
jo
ret
hlt
dec
or
mov
out
fstpl
mov
xor
sub
aaa
cwtl
cmp
xchg
jp
jl
cmp
fimull
xor
ja
cmpb
sub
dec
adc
adc
cmpsl
and
sbbl
sarb
test
out
cmp
es
push
pop
inc
pop
mov
fmuls
pop
cmp
inc
add
iret
inc
test
adc
xor
inc
mov
out
ja
adc
nop
in
dec
fidivs
and
stc
pop
mov
jbe
and
dec
dec
gs
movsb
out
in
mov
fstpl
jge
mov
or
in
out
call
xchg
jmp
adc
inc
cltd
clc
mov
sbb
jne
jbe
jmp
xchg
cmp
test
int
or
pop
das
popf
mov
push
or
sub
fstpt
dec
iret
xor
icebp
frstor
mov
mov
les
arpl
xchg
shlb
enter
imul
jbe
imul
or
repnz
clc
je
push
cmc
inc
stos
outsb
leave
mov
dec
aaa
dec
dec
mov
cmovo
push
test
insl
pusha
add
sub
adc
fimull
icebp
insb
subl
loope
jmp
inc
jno
out
aad
pop
call
sub
out
sbb
add
rolb
das
mov
jbe
push
xor
lret
push
xor
into
sbb
lret
sbb
jge
pop
add
shr
pause
mov
mov
popa
test
or
nop
shrb
fisubrs
sbb
sbb
adc
jb
jne
jge
int
iret
fimull
add
adc
out
insb
int3
or
add
notl
sub
lcall
adc
daa
jno
add
or
adc
imul
es
outsl
cmpl
xchg
mov
cli
inc
shrb
test
or
cmpsl
mov
lcall
xchg
mov
or
push
movsl
andl
adc
adc
add
loop
in
xor
sbb
inc
sbb
push
sbb
cmp
and
sbb
aam
jno
push
movsl
fcoml
das
in
pop
inc
sbb
test
push
and
dec
fcmove
out
sbb
add
js
addr16
sub
pop
push
push
dec
in
in
scas
pop
mov
rcl
imul
mov
xlat
mov
insb
setns
adc
lock
sub
aad
popf
daa
add
test
sbb
and
dec
inc
cmp
lods
data16
mov
nop
faddp
imul
inc
mov
ja
dec
mov
imul
inc
dec
push
dec
push
sbb
shrb
pusha
popa
arpl
inc
sub
pop
cmp
rcrb
inc
xor
sbb
jmp
mov
xor
nop
dec
arpl
pop
cmp
and
int
dec
pop
iret
ja
sti
mov
outsl
int
cld
loope
movsl
ds
outsb
imul
pop
add
mov
push
out
nop
in
adc
insl
jge
add
mov
mov
jl
jecxz
xor
sbb
je
lcall
sub
mov
lcall
sub
sub
mull
pop
sub
dec
jo
mov
lds
jb
push
sub
ds
sahf
mov
jno
cmpsb
cmp
es
aas
inc
xchg
stos
inc
imul
ret
into
pop
inc
pop
cmp
inc
leave
imul
adc
out
stos
mov
sub
mov
push
mov
lret
and
and
pop
fidivrs
sar
pop
lret
or
pop
cmp
jmp
ret
xor
adc
push
xchg
and
add
scas
adc
mov
lret
popa
pushf
fisttpl
mov
bound
sbb
ret
mov
xor
add
je
inc
imul
movsb
mov
inc
scas
popf
jle
and
stos
pushf
add
cmp
in
dec
push
push
popa
fsub
cltd
cmp
ds
popa
ret
adc
xchg
ljmp
popf
add
or
jo
cmpl
mov
shll
shl
push
add
dec
popa
and
xor
std
movsl
cmp
mov
xor
lods
leave
xor
push
or
arpl
pop
sub
aam
aas
int
mov
stc
cmp
fildll
xlat
or
sbb
ds
notb
loop
push
inc
cmp
sub
leave
jns
sbb
repnz
mov
decl
mov
mov
mov
or
adc
imul
push
andl
ret
mov
daa
pusha
sti
adc
xlat
jne
mov
pop
filds
and
and
aam
arpl
test
jno
mov
xor
inc
push
pop
jp
bound
push
mov
xor
pop
fcmovb
jmp
lret
xlat
addl
add
or
call
mov
add
xor
sbb
xchg
mov
jl
fucomp
lea
data16
leave
jnp
cwtl
jne
aas
push
out
dec
dec
into
dec
mov
or
lock
daa
adcb
add
xchg
jne
jecxz
and
jle
mov
xchg
xchg
mov
pop
mov
ficoms
dec
ds
mov
push
cmp
mov
int3
aaa
add
sbb
push
bound
repz
sbb
push
or
js
cmp
push
dec
cmp
test
repnz
aad
or
adc
test
push
push
test
cli
inc
lods
jmp
stc
mov
scas
adc
mov
jb
stos
xchg
jle
push
adc
cmc
mov
loopne
adc
mov
pushf
shlb
testl
xor
sbb
jb
mov
xchg
dec
mov
leave
jne
jmp
or
rcll
ds
and
int3
inc
pop
add
lea
mov
sub
mov
cwtl
popa
out
dec
or
xor
fcoml
cmp
xchg
mov
jmp
pop
add
movsl
push
mov
mov
mov
pop
adc
pop
xchg
or
sarl
or
std
sbb
insl
inc
pop
loopne
out
lret
loop
adc
cli
sub
cmc
or
pop
adc
stc
sbb
aad
mov
insb
leave
push
aas
xchg
or
add
mov
add
mov
mov
pushl
mov
scas
repnz
inc
sbb
inc
or
clc
cmp
xchg
jle
push
push
mov
fbld
lahf
adc
mov
lahf
pop
lods
inc
push
cmp
hlt
jmp
repz
dec
in
sbb
push
mov
cld
cmpsl
xor
add
insl
imul
cmp
les
sbb
adc
mov
adc
xor
shl
je
inc
out
in
or
dec
leave
out
int3
mov
sub
je
clc
cmc
inc
out
jmp
adc
or
lock
frstor
sbb
out
int
addr16
mov
fisubrl
cmp
jbe
pop
add
push
sti
cmpsb
sub
add
ret
or
jae
xchg
xchg
leave
js
cmp
lcall
pop
cmp
gs
ret
pop
jne
scas
lods
jb
pop
movsb
lods
fst
inc
mov
cmp
pop
push
dec
bound
pop
or
in
inc
pushf
and
shrl
sarb
mov
sub
push
and
xor
inc
ss
mov
leave
push
movsl
test
push
gs
sub
jg
add
mov
addb
dec
dec
mov
cs
out
jl
sub
outsb
dec
mov
scas
inc
xor
outsl
jns
xor
mov
sub
cli
mov
incb
jge
pop
cmp
insb
clc
dec
icebp
lods
insl
ja
negb
lods
pop
push
fiadds
cmp
add
into
jp
sbb
jle
xchg
cmp
jo
enter
scas
inc
cli
add
push
shlb
inc
push
dec
and
add
les
clc
adc
sbb
je
mov
jne
dec
ljmp
pop
jl
mov
cld
cmpl
mov
mov
add
jbe
sbb
das
sbb
ljmp
or
fadds
idiv
leave
aaa
push
lahf
dec
adc
mov
scas
sbb
sub
mov
or
mov
jb
jnp
xchg
and
sbb
jle
insb
pop
inc
ss
fwait
mov
mov
rep
xchg
dec
test
xchg
je
jg
xor
nop
fcomip
mov
lret
mov
push
movsl
xor
push
insb
and
and
and
arpl
test
and
mov
and
mull
test
push
insb
mov
mov
push
jmp
cmp
jb
out
jecxz
sbb
xor
push
out
xor
push
inc
or
int3
xor
stos
or
pop
std
xchg
sbb
xchg
or
scas
cltd
jne
mov
add
daa
iret
pop
lock
cmpsb
xchg
adc
sbb
mov
clc
add
mov
adc
out
push
pop
das
lds
sbb
dec
add
mov
fucomp
cld
mov
mov
xorl
bound
jmp
xchg
xchg
shr
and
out
sub
popw
xchg
sarl
xor
pop
jmp
adc
call
andl
lret
add
leave
mov
notl
aam
test
mov
ja
lcall
movsb
fstpt
xlat
xchg
ret
jge
stos
aad
rorl
ss
jge
fbstp
rcrl
push
jo
adc
jle
pushf
out
popa
cmpsb
push
and
fiaddl
cs
icebp
mov
and
sub
mov
clc
int3
dec
mov
pop
add
hlt
je
les
dec
jmp
enter
push
iret
in
cmp
mov
xorb
ficomps
jge
cmc
sarb
and
lock
inc
into
mov
push
out
pushf
and
aas
gs
xchg
mov
bsf
mov
and
sub
incl
sub
in
mov
fldt
add
lds
and
adc
leave
mov
sbb
pop
mov
or
add
cmp
dec
cmp
aas
jp
pushf
in
mov
jnp
sub
inc
dec
arpl
mov
mov
jle
cmpsb
nop
xchg
je
jne
xor
in
mov
cs
fistl
dec
lds
cmpsl
xor
cltd
daa
mov
imul
mov
pop
dec
pop
test
xchg
jecxz
lods
cmp
outsl
leave
fsubl
xchg
sub
sbb
or
notb
pop
pop
cmpl
fwait
adc
popf
insb
xchg
xor
jb
jle
sub
push
mov
push
pop
ljmp
push
lods
aaa
sub
pop
or
xchg
sbb
inc
mov
sub
repz
add
lret
stos
fucom
out
pop
fsubrp
push
cmc
dec
movsl
mov
mov
jl
ljmp
mov
shl
ret
add
sahf
push
cmp
sbb
je
mov
data16
lock
mov
test
lahf
outsb
scas
dec
data16
mov
mov
dec
insl
cld
ja
mov
cmp
dec
test
fxch
ds
xchg
roll
and
xlat
loopne
adc
stos
dec
je
lret
mov
jp
sbb
pop
scas
les
subl
xchg
and
gs
jle
insl
mov
roll
je
dec
or
sarl
inc
cmc
jl
lds
pop
or
and
jb
pop
pop
mov
bound
std
nop
test
add
cmp
aaa
stos
out
jle
iret
in
stos
fs
push
mov
test
lods
rorl
xorl
les
mov
adc
jecxz
adc
popf
bound
or
pop
jns
sub
leave
xchg
mov
jmp
lock
inc
and
jnp
je
adc
or
lods
insb
add
inc
cmc
fwait
xor
and
and
cld
in
push
mov
add
fimull
inc
scas
or
inc
lock
test
test
mov
into
stos
xlat
iret
jl
pusha
inc
loope
dec
xchg
outsl
rcrl
push
sub
xor
bound
push
jle
jmp
xor
or
in
pop
inc
xor
addr16
pop
insl
cmp
mov
jo
test
add
mov
je
outsb
js
pusha
cld
xor
ljmp
mov
mov
fisttps
mov
sahf
jmp
adc
adc
xchg
or
out
mov
adc
stc
icebp
or
testl
cmp
gs
xor
push
dec
adc
mov
or
cmpl
lret
inc
add
leave
add
xor
cmp
mov
loopne
pop
rcll
xor
sub
and
imul
out
mov
jo
leave
in
ljmp
test
cmpsl
sub
or
add
pop
scas
cmc
cwtl
fistpll
call
sbb
les
push
adc
lods
fistpll
je
mov
insb
sbb
repnz
arpl
mov
stos
inc
aas
and
pop
push
addr16
in
push
push
aas
call
lret
ret
test
fs
cmp
inc
test
cwtl
xchg
mov
jae
lcall
out
in
jmp
mov
sub
mov
addr16
inc
out
fimull
jl
or
xor
mov
or
mov
inc
xchg
ret
popa
adc
imul
cmpsb
cmpsl
inc
add
adc
jae
lret
cmpsl
mov
sti
sub
inc
cs
sbb
xor
xchg
push
iret
cmc
ss
mov
mov
or
lods
ja
outsb
adc
pop
pop
add
enter
xor
outsl
jmp
cld
adc
mov
pop
pop
mov
sub
jnp
mov
ret
cmpsl
cs
fildl
ljmp
aad
sub
pop
in
add
js
jno
mov
sarb
sbb
mov
std
imul
mov
cmp
push
dec
fadd
test
int
rcrb
mov
jl
cmp
ljmp
mov
in
mov
int3
pop
neg
cmp
rcl
push
jb
and
leave
sub
xor
iret
pop
adc
jb
clc
cmpb
fs
icebp
push
mov
sub
aad
jno
cmp
rcrl
push
les
fldt
mov
and
xor
std
xchg
mov
outsl
push
push
call
icebp
repnz
sbb
or
xchg
adc
mov
or
add
sbb
mov
leave
movsb
sbb
out
test
ret
sbb
dec
mov
sub
mov
cs
lds
mov
and
xchg
dec
jge
into
push
add
cs
lret
mov
xchg
pop
lds
movsl
lret
fnstsw
lock
pop
or
leave
out
cltd
roll
loope
jle
sub
mov
push
mov
and
mov
add
movsb
into
shlb
es
outsl
popa
cmp
xchg
cmpsl
cmp
daa
sbb
pop
outsb
das
aas
sarb
xor
and
push
push
sub
sub
sub
jge
and
ret
lahf
mov
add
cmp
rcrb
jecxz
loopne
cmp
stc
imul
pushf
jg
sub
mov
outsl
adc
imul
mov
insl
sub
xchg
popa
gs
outsb
push
inc
cs
punpckhwd
mov
xor
jg
andl
nop
xor
inc
mov
add
sbb
lahf
jbe
sub
imul
test
repz
dec
and
loop
mov
mov
xchg
add
and
arpl
mov
cmp
adc
mov
in
sbb
nopl
nop
std
push
cltd
adc
add
rcrb
in
insl
sbb
aam
xchg
push
lea
cmp
cmc
or
xlat
jl
lahf
fldenv
mov
add
sub
jle
icebp
xor
xor
xor
push
ret
inc
inc
sahf
jne
insb
sub
flds
pop
data16
push
dec
xchg
data16
or
test
mov
pop
push
push
repnz
push
inc
fcmovbe
add
sti
dec
repnz
xchg
addr16
fwait
xlat
sbb
and
cmp
popa
push
test
lret
sbb
out
sbb
in
ret
push
add
jg
xor
push
xchg
sahf
les
jne
movsb
jb
mov
loop
hlt
jp
sub
iret
lcall
ret
mov
leave
dec
cmp
mov
sub
push
xchg
insl
test
add
xchg
ja
cmp
cmpsb
sub
jbe
fwait
out
fsubs
mov
push
cmp
scas
aam
test
fistps
xchg
fstp
mov
jne
and
in
out
dec
mov
inc
mov
out
lsl
jp
add
lret
fdivl
jl
xchg
call
pop
push
cltd
ret
push
mov
xchg
jmp
fimull
push
xchg
jne
outsb
or
cmpb
mov
ffree
and
out
mov
aas
or
lds
pop
or
fidivs
adc
pusha
bound
lods
dec
mov
lret
push
jmp
xchg
clc
mov
sbb
stc
sbb
insb
jo
subl
divb
out
add
nop
sub
pop
int
stos
push
lods
fisttps
fstps
push
call
sub
shrb
dec
ror
bound
jo
lods
mov
stos
adc
je
add
sahf
dec
push
mov
xor
lret
mov
dec
dec
add
add
xchg
stos
addr16
sbb
push
or
mov
sub
fbld
xchg
outsl
cltd
bnd
mov
dec
test
scas
sbb
jle
pushl
ficompl
sar
mov
aas
stos
inc
mov
xchg
mov
mov
stc
add
xor
add
jno
arpl
sbb
dec
push
mov
mov
dec
fucomip
jle
mov
iret
lds
test
cwtl
and
mov
hlt
std
pop
adc
push
xlat
fildll
or
das
lods
adc
cmc
pop
hlt
sub
xchg
ljmp
cmpl
das
mov
push
xor
xchg
jle
aas
sbb
xor
lcall
push
jmp
mov
lea
fcoms
gs
das
scas
or
sbb
scas
shr
xor
inc
mov
fwait
sbb
lret
test
or
mov
leave
je
cmpsl
push
sti
sbbb
mov
in
and
or
mov
jae
or
xchg
push
popa
icebp
pop
outsb
push
imul
mov
aas
and
or
mov
mov
sbb
sub
pop
and
mov
push
sbb
xchg
adc
test
test
fwait
or
cmp
jp
mov
int3
cmc
scas
movsb
xor
sti
out
mov
inc
mulb
xlat
push
adc
sahf
and
mov
jno
add
xchg
pop
aas
lret
popf
mov
clc
outsl
daa
pop
pop
mov
lods
stos
ss
ret
jg
loope
outsl
cmpsb
data16
inc
push
and
pop
arpl
js
lahf
imul
ljmp
movsl
xor
add
xlat
rolb
loop
sbbl
dec
xor
cmp
subb
sbb
xor
ds
mov
xchg
cs
cmc
in
enter
mov
fidivrl
aaa
inc
fstpt
rorl
ret
push
cwtl
mov
mov
lock
cmpsl
mull
mov
mov
sbb
jbe
xchg
mov
dec
les
pop
shll
pop
lods
fs
les
sti
jo
dec
in
jno
into
popf
pushaw
push
pop
out
and
std
mov
cmc
dec
add
adc
mov
push
cmp
mov
dec
mov
stos
pop
lods
mov
test
imul
stos
sbb
icebp
jno
testl
mull
and
sub
sub
pushf
sub
push
jp
sbb
call
shll
or
sbb
xlat
jo
out
loopne
xchg
jne
lods
xor
dec
inc
add
into
mov
push
jecxz
cltd
movsl
inc
xlat
add
jle
sub
movsl
xor
dec
test
and
lods
std
mov
xlat
xor
out
jge
push
js
xchg
push
les
out
jmp
adcb
jo
in
fiadds
addl
cmp
test
dec
fistl
fwait
push
mov
push
push
push
mov
cwtl
mov
out
jbe
call
or
iret
pusha
pop
dec
pop
hlt
iret
jae
leave
xor
jns
xor
fsubr
mov
mov
jbe
dec
iret
mov
mov
jle
jne
test
into
cli
cmpxchg
and
aaa
popa
mov
xchg
adcl
push
pop
sahf
jbe
inc
and
out
xor
jmp
and
mov
aas
xchg
xchg
jge
imull
adc
inc
or
pop
clc
ss
xlat
pusha
test
pop
movsl
test
jmp
popf
leave
cld
or
lods
rol
sbb
cmpsl
jnp
fidivrs
icebp
imul
insl
popa
mov
jge
pop
js
pop
fs
jle
inc
cs
add
fisttpl
addr16
adc
xchg
test
mov
push
aaa
jne
mov
scas
xor
xchg
nop
or
out
mov
push
cmp
xchg
ret
in
push
jbe
js
sub
mov
loop
jle
roll
movsl
mov
mov
aas
push
cmp
inc
roll
push
inc
sub
mov
and
testl
push
or
lret
mov
cld
orb
push
lcall
call
les
pop
ss
lcall
and
and
push
pop
adc
not
ja
pop
lret
or
xchg
scas
loop
loope
cmp
inc
insl
mov
push
aaa
clc
lods
das
nop
and
ds
mov
insl
in
or
or
cmc
and
jae
jmp
dec
jecxz
fs
mov
jle
or
mov
jns
xchg
jg
cs
push
dec
dec
int3
cwtl
ss
sbb
popa
mov
xchg
mov
stos
pop
out
lds
cmpl
out
mov
add
hlt
lods
pop
add
nop
mov
iret
movsw
dec
and
jno
ret
fldenv
lret
inc
and
fiadds
mov
cmpsb
lcall
pop
lock
sti
iret
sub
pusha
jnp
xchg
int
add
sub
cmpsl
lods
hlt
jne
xlat
ljmp
or
hlt
cltd
clc
sub
repz
ljmp
push
daa
xlat
lret
in
jmp
comiss
movsb
push
outsb
movsb
and
cwtl
jl
mov
add
mov
pusha
cmpsl
and
sbb
xchg
sub
cmp
jne
push
jno
mov
cmpsl
fidivrs
out
dec
jg
push
pop
movsb
arpl
popa
mov
mov
fcom
movsl
mov
cmp
push
pushf
xor
add
pop
pop
jb
scas
leave
pop
pop
xor
mov
push
xchg
push
scas
mov
fs
or
fdivrs
and
sbb
test
xchg
adc
arpl
and
jmp
jecxz
xor
sub
mov
fst
outsl
jnp
push
adc
in
jmp
push
idivl
mov
stc
ficomps
mov
adc
pop
cld
push
xor
sbb
loope
and
std
popa
leave
insl
inc
and
into
rep
xchg
or
add
aaa
push
xor
adc
mov
idiv
mov
fidivs
cmp
fwait
mov
dec
ror
out
xchg
or
jns
push
push
loop
jae
and
mov
jecxz
out
xor
fdivs
in
xor
fsubrs
cmpsb
cmc
add
fisttpl
fisubrs
js
into
inc
out
pusha
pop
mov
jmp
inc
push
jae
mov
addr16
add
sbb
dec
outsl
out
pop
push
mov
testl
mov
push
cmpb
and
mov
imul
dec
inc
vrsqrt14pd
es
or
mov
outsl
xlat
mov
pop
sub
push
mov
mov
movsb
mov
cltd
dec
testb
and
hlt
lods
cmp
xchg
mov
mov
push
test
popf
pop
fldcw
fwait
xor
pop
jmp
test
xchg
setbe
or
mov
std
jmp
xchg
loopne
push
test
mov
inc
dec
jmp
enter
fwait
das
lods
movsb
outsb
rcrb
mov
in
pop
mov
insl
cmpsl
gs
or
push
jle
inc
test
js
add
inc
or
mov
jecxz
mov
call
int
jle
jg
and
cmp
cwtd
dec
aas
sahf
sub
cmpsb
xor
mov
xchg
popf
jg
movsl
popf
iret
dec
add
cmp
xchg
and
cmpsl
sub
jae
cs
pop
lcall
rol
sbb
iret
sahf
push
ss
sub
sub
scas
and
es
imul
xchg
inc
imul
inc
outsl
xchg
pushl
push
and
push
inc
jnp
and
pop
adc
lcall
xor
xchg
repz
push
mov
icebp
xorl
aad
mov
imul
lock
jb
jo
cmpl
jnp
cmp
subl
xchg
mov
loop
fstpl
sbbb
mov
jl
or
inc
sub
adc
gs
xchg
inc
stos
fisubrs
arpl
and
rcrw
dec
outsb
cmpsb
or
aas
addl
add
fyl2xp1
flds
and
or
xor
pop
sbb
jae
add
mov
lods
testl
inc
or
sbb
inc
sbb
ror
inc
adc
xchg
mov
xor
sbb
push
sbb
adc
dec
out
aas
jmp
jmp
popa
out
inc
pop
mov
fiadds
fcoms
and
xor
divb
mov
lock
mov
xorb
mov
fwait
mov
add
pop
mov
xor
nop
mov
pop
imul
daa
xchg
fmul
push
xor
adc
jg
test
pushf
aaa
stc
hlt
outsl
clc
enter
mov
fldl
mov
sub
jo
mov
outsb
jp
dec
push
mov
cmp
imulb
sbb
popa
es
xor
mov
sarl
ds
mov
and
testl
push
inc
shlb
or
in
mov
sets
xchg
jno
dec
cli
shl
sub
out
jle
lods
clc
mov
test
gs
sbb
out
pop
mov
in
loopne
ret
push
addr16
fiadds
adc
lea
pop
fnstcw
mov
mov
js
adc
enter
xchg
sbb
les
fcmovb
mov
xor
adc
repz
pop
xor
sbb
in
mov
cmp
mov
jnp
pop
outsb
cld
or
xchg
lret
pop
sysret
rol
push
jle
mov
fistps
cmp
out
and
inc
xchg
daa
jg
push
into
and
pop
shll
mov
icebp
cmp
outsb
mov
sbb
les
jae
fsubrp
push
mov
push
movsl
dec
arpl
pop
inc
jae
mov
mov
in
xor
push
dec
and
mov
add
mov
jo
mov
or
insb
out
aaa
mov
sbb
jb
xchg
test
jp
mov
xchg
cmp
jle
or
lods
add
loop
stos
repz
push
inc
sbb
push
push
cld
push
sbb
mov
dec
xchg
mov
jle
aas
cmp
in
fidivs
arpl
inc
icebp
aaa
into
int
sbb
arpl
fs
add
xlat
or
aad
mov
jbe
jo
push
mov
std
loop
cmp
xchg
lods
inc
push
jbe
arpl
sti
scas
fdiv
cmp
rorb
shrb
pop
cmpsl
dec
jne
popf
mov
mov
cmp
mov
and
cmp
mov
scas
or
or
mov
hlt
xchg
fsub
sub
pop
mov
dec
mov
and
adc
or
fcmovu
pop
push
ljmp
dec
out
pop
xchg
movsb
mov
jge
dec
and
lret
fxch
aaa
ljmp
pop
pop
imul
es
fiaddl
add
test
add
cwtl
or
scas
add
or
imul
jmp
xchg
push
mov
imul
iret
lds
fsubrp
jnp
mov
mov
cmpsb
inc
sub
fs
xor
jl
inc
push
stos
jno
movb
mov
push
mov
fs
mov
decb
fst
sti
push
pop
in
dec
test
scas
xchg
inc
sahf
push
fwait
xchg
sub
outsb
cmp
imul
jmp
push
dec
ds
cli
jbe
adc
mov
jo
bound
xor
fs
jg
lock
mov
jecxz
lcall
xchg
rclb
into
or
fbld
fwait
mov
pop
jg
jnp
pop
mov
addr16
mov
daa
xchg
cwtl
jbe
pop
jmp
int
add
leave
jmp
inc
js
cmp
mov
dec
ss
enter
sbb
sarb
rcll
adc
jbe
adc
mov
pop
into
pusha
cli
adc
movsb
lret
pop
test
cmp
fdivs
out
pop
sbb
xchg
xchg
ret
in
xchg
sub
cmp
xchg
aam
cmp
mov
sar
jns
sbbl
jbe
xchg
lcall
push
sbbl
and
nop
call
jg
fildl
mov
data16
xchg
mov
shl
or
dec
sub
mov
jle
fdivr
sub
add
cmp
pop
movsl
clc
ja
push
outsl
cs
icebp
pop
sarl
repnz
test
jne
adc
imull
pop
in
out
cmp
push
sbb
pop
inc
jl
cmpsl
jne
push
ficoms
mov
mov
sub
aaa
adc
je
andl
movsb
inc
jmp
or
xchg
lods
outsl
insb
sbb
ror
mov
es
push
cmp
in
xor
inc
and
jno
inc
fwait
loopne
jnp
xor
pop
add
roll
jbe
js
sbb
lret
fiadds
lret
les
shll
sbb
movsl
out
pop
in
mov
xchg
stos
lea
inc
pop
fwait
arpl
lea
xchg
dec
jge
xor
jbe
aaa
add
mov
jne
jge
mov
push
jmp
push
sahf
stc
fstpt
or
cwtl
pop
xlat
push
in
sub
rcr
mov
mov
imul
mov
sarl
cmp
cwtl
test
imul
int3
push
push
insb
jl
in
cmp
into
sub
testb
sbb
xor
xchg
mov
pusha
les
lods
adc
ss
les
addr16
cld
mov
shll
dec
cmp
out
loopne
popf
mov
xor
clc
or
into
mov
xor
add
cli
into
mov
out
xchg
jp
jae
mov
push
lock
adc
insb
fs
into
mov
addr16
mov
hlt
inc
mov
jmp
adc
iret
inc
mov
jno
xor
mov
loop
or
push
sahf
pop
clc
mov
ss
sub
fisubl
mov
xor
mov
pop
in
add
ja
out
pop
jp
insb
mov
cmp
mov
insb
mov
mov
js
jae
mov
sbb
cmc
aad
add
xchg
mov
cmc
push
mov
dec
out
shl
test
out
xchg
jno
dec
pushf
sub
leave
adc
loop
mov
shrd
adc
and
cwtl
mov
aam
pop
outsl
xlat
dec
cmp
roll
out
out
sbb
repz
mov
add
pop
sub
rcrl
xchg
pop
mov
mov
sub
add
mov
mov
xchg
imul
or
xchg
inc
je
movsl
in
or
cmp
push
lss
cmp
insl
clc
mov
in
ret
push
mov
pop
bound
cmp
nop
jno
and
mov
lcall
cmp
nop
mov
sbb
in
call
out
shl
or
jp
loop
mov
stos
mov
rol
imul
int
cmpsl
dec
xchg
sbb
pop
and
shl
add
popf
test
sub
cmp
outsb
loop
sti
aam
push
pop
jae
adc
or
pop
inc
dec
add
insl
sar
lcall
sahf
pop
ljmp
adc
cmpsb
rcrb
jae
pop
jg
inc
push
cld
xchg
pop
jae
mov
cmp
pop
lret
or
mov
mov
loopne
mov
jnp
fcmovnb
adc
push
jmp
mov
cmpsl
pop
cwtl
adcb
pop
inc
dec
aad
aaa
int
sub
sub
inc
mov
xor
pop
scas
into
jp
pop
shll
add
cs
sbb
lea
loopne
xchg
fisubrs
push
mov
mov
xor
add
lods
jge
mov
fcompl
mov
adc
orps
jmp
in
mov
push
jbe
xor
daa
gs
sbb
mov
xchg
xor
data16
xchg
mov
jl
fwait
or
or
xchg
sbb
psubd
mov
sub
in
pop
movb
movl
movsb
inc
push
push
xor
je
cmp
icebp
test
adc
push
jo
mov
in
outsl
inc
or
std
mov
or
inc
mov
sub
je
cmpsb
repz
mov
jbe
pop
inc
popf
cmp
cli
nop
rorb
call
sub
pusha
imulb
addr16
jnp
stc
cld
pop
jp
pop
jmp
insl
jg
cmc
arpl
add
adc
cmp
rcrb
into
or
pop
jno
and
and
loop
push
inc
nop
adc
into
jecxz
mov
lods
or
dec
sti
cmc
cmpl
mov
dec
xchg
xchg
xor
dec
in
push
and
fldcw
das
xorl
mov
jl
add
mov
lock
aad
rcll
inc
outsl
cmpsb
jno
push
dec
inc
int3
and
xchg
and
dec
sub
stos
cmpsb
hlt
addl
jo
loope
orl
shlb
cmpsl
or
fisubs
xchg
out
mov
lods
into
ret
cmp
inc
insl
insb
dec
fnstcw
mov
pushw
cmc
or
mov
mov
imul
and
aas
or
scas
enter
insb
std
jg
dec
leave
stos
dec
lret
or
push
or
subl
lds
sbb
sbb
adc
sbb
mov
jp
gs
in
push
test
pop
sti
cmpsl
pop
add
and
jb
in
lods
and
jbe
mov
add
out
mov
mov
or
mov
inc
xor
adc
lret
sbb
nop
fs
lcall
jle
call
mov
inc
jb
add
dec
stos
ret
jbe
shlb
push
jle
stc
jg
scas
push
imul
sahf
inc
mov
lahf
adc
xchg
and
cmp
xchg
inc
mov
add
js
mov
jo
pop
ja
fsubrp
aas
dec
fimuls
add
inc
sub
and
pusha
ret
ret
popf
push
iret
outsb
rorb
out
test
jmp
mulb
mov
mov
cmp
ljmp
xor
scas
jae
pop
or
sub
jb
lret
clc
cmp
xor
sbb
mov
sti
mov
mov
add
fsubrs
push
adc
adc
daa
cmp
lods
dec
ja
scas
xorb
inc
loop
push
xchg
inc
push
popa
stos
gs
push
pop
adc
xchg
inc
aaa
xor
mov
jle
fs
xor
rorl
sbb
cltd
jle
and
cmc
jns
scas
ja
fs
inc
test
arpl
pop
in
pop
xchg
mov
test
pop
fxch
shlb
xchg
xchg
and
jo
and
stos
jp
in
xor
dec
inc
pop
stc
dec
int
or
mov
dec
jl
cltd
mov
insl
pop
pop
test
sbb
pushf
imul
shll
mov
mov
mov
roll
incb
sub
out
cmp
xchg
push
hlt
or
addr16
push
add
pop
insl
dec
pop
adc
rorl
and
gs
jbe
shlb
xchg
jne
mov
or
lcall
popf
es
jge
out
hlt
mov
cmpl
push
adc
lcall
popf
add
clc
lds
mov
std
into
lods
xorb
push
sbb
and
jmp
icebp
inc
imul
xchg
xchg
ficoms
add
jmp
jmp
or
cmpsb
hlt
call
pop
jmp
and
into
mov
and
dec
add
dec
in
or
lahf
call
pop
or
adc
movsl
cmp
jecxz
pop
jae
test
shll
and
push
adc
out
loopne
clc
lret
lret
cwtl
aas
mov
mov
jge
out
jl
push
dec
movsb
lods
sub
popa
mov
and
or
out
adcb
push
adc
lcall
and
push
call
mov
pop
lods
sub
mulb
int3
pop
xor
xchg
sti
xchg
adc
xlat
scas
jle
pop
repnz
shll
pop
imul
jmp
popa
and
popa
mov
xchg
arpl
cmp
lcall
adc
rclb
and
mov
adc
call
cmpsl
adc
das
xchg
xor
nop
adcb
test
cmp
ret
jnp
sbb
pop
dec
enter
sub
mov
movb
in
outsl
jbe
mov
push
rol
in
xor
or
and
push
jle
test
xor
fdivs
dec
or
add
jmp
add
or
inc
pop
dec
lods
dec
int3
into
pop
aam
test
add
and
scas
shlb
fwait
iret
push
cmp
mov
dec
jle
cmp
clc
in
shl
bnd
add
cmpsb
nop
push
mov
add
gs
pop
test
std
fsub
push
shrb
mov
fimull
fwait
stc
pop
test
xlat
shrl
fsubr
les
or
inc
inc
mov
mov
mov
stos
or
mov
ja
sti
push
pop
mov
test
push
push
imul
dec
daa
icebp
xor
in
pusha
mov
jmp
lahf
mov
jns
sbb
mov
dec
leave
mov
mov
xor
push
stc
xchg
ljmp
mov
jb
cltd
mov
test
jns
cmp
mov
and
stc
pop
aad
cli
sbb
cmpsl
out
and
mov
dec
pop
dec
inc
inc
into
cmp
inc
add
cs
mov
fdivs
xor
test
aas
filds
jmp
ret
and
push
jp
push
cmpsb
test
insb
inc
popa
shlb
test
sub
cli
les
add
das
fs
jne
cmp
cwtl
xchg
adc
mov
inc
mov
stos
dec
mov
pop
fdivs
aad
jnp
out
inc
loop
jb
or
fwait
insb
nop
xchg
outsb
mov
pop
push
xchg
jmp
lret
testb
test
test
sahf
dec
add
sahf
mov
bound
xor
xchg
xor
sub
dec
out
int3
jle
xchg
inc
loopne
test
add
push
push
out
imul
mov
xor
or
pop
push
test
jne
fsubl
imul
scas
das
out
test
sbb
sub
sbbl
jns
cli
jge
push
stc
stos
or
jecxz
push
mov
movl
jge
jp
xchg
pop
dec
adc
mov
jecxz
xchg
cld
sbb
je
push
imul
out
cwtd
std
pop
in
add
pop
repz
lods
loopne
jmp
add
ret
mov
test
shll
test
lret
sbb
fidivs
ret
in
in
jl
jae
jg
or
jne
pop
pop
or
pop
dec
pusha
push
cld
mov
jo
push
pop
push
mov
add
shll
cmpsb
js
aad
mov
lret
mov
adcl
mov
jl
pusha
pop
repz
xor
cs
enter
mov
lods
sbb
sbb
adc
add
cmp
aaa
js
scas
and
adc
xchg
push
aaa
testl
pop
mov
mov
inc
ret
sub
imul
es
sti
mov
in
or
lret
mov
mov
jl
jmp
sbbl
fstpt
popa
xchg
push
sub
and
outsb
imul
mov
jl
or
jne
shlb
shlb
das
cli
cltd
cli
insb
dec
subb
fimuls
lods
sub
fstsw
sbbl
pop
mov
add
imul
sub
sbb
inc
mov
sub
xchg
jbe
inc
je
inc
pop
nop
lret
push
xchg
add
fisubl
sub
sub
push
mov
and
fimuls
loop
cmpsb
data16
mov
inc
test
lret
scas
add
sbb
inc
lods
sbbb
outsb
mov
jo
cmpsl
movsl
jo
mov
sbb
push
sbb
addr16
adc
adc
shll
iret
ljmp
arpl
rcll
stos
jg
mov
aad
popf
mov
test
sahf
ret
or
jnp
mov
dec
out
xor
lds
cmp
arpl
fs
clc
dec
dec
xor
cli
lods
scas
lods
pop
jnp
and
aam
add
xchg
xlat
out
scas
jecxz
jbe
or
std
xchg
pop
lea
push
call
push
in
lock
scas
adc
push
cmp
pop
pop
outsb
sbb
dec
incl
js
xchg
jg
jmp
and
add
jmp
rcrb
mov
adc
cmp
fs
cs
adc
cmp
mov
into
orl
repnz
pop
inc
outsl
cltd
ljmp
jnp
sbb
js
movsb
out
js
jl
cmp
dec
mov
pop
daa
lahf
gs
rclb
sbb
loopne
sarl
pop
dec
stos
call
test
iret
aaa
mov
push
pop
adcb
fucom
mov
ja
xlat
imulb
test
jb
addr16
scas
in
lahf
push
push
rorb
xchg
in
jl
cmp
mov
sahf
das
mov
adc
mov
sbb
inc
movsb
adc
sbb
insl
lret
iret
xchg
pop
and
xchg
xchg
pop
es
mov
lcall
mov
push
fldcw
in
jns
int
cmpsl
in
not
dec
mov
orb
or
fs
mov
ret
clc
mov
cmpb
dec
inc
and
stos
jecxz
divb
lods
sbbl
outsb
imul
stc
jmp
decl
outsl
or
lret
jg
and
and
shll
xchg
and
testb
mov
xlat
jg
jb
cmp
xor
scas
mov
push
es
jge
xchg
cmp
daa
popa
daa
pusha
lea
mov
push
add
stc
xor
je
sbbb
push
and
jns
or
dec
lds
pop
sbb
scas
mov
fcoms
mov
nop
lret
cs
fstps
das
sub
frstor
ret
addr16
loopne
or
add
insl
lahf
jno
sbb
push
mov
xor
adc
fstpt
add
push
pusha
xchg
dec
xchg
pusha
shrl
out
mov
xchg
int3
out
nop
xchg
out
mov
xor
sub
cli
xor
push
lret
jp
fidivl
push
fistps
pushf
cltd
out
lcall
aas
cs
subb
sub
xchg
mov
inc
fwait
outsl
ffreep
test
push
push
scas
lret
inc
clc
xor
out
gs
cmp
push
dec
lret
add
mov
or
cmp
ret
mov
jg
xlat
cwtl
jo
call
cmc
add
jle
lds
or
mov
fiadds
prefetch
or
xchg
lds
stos
adc
fimuls
aad
pop
std
addb
lcall
imul
add
aad
sbb
or
lods
lea
ljmp
cmp
int3
mov
fldenv
mov
and
in
ficomps
outsb
aas
roll
outsb
ja
fdivp
into
and
ljmp
mov
pop
jecxz
add
push
push
sbb
outsl
insb
out
lock
mov
pop
jg
xchg
add
imul
adc
pop
inc
push
mov
mov
imul
lcall
bound
jecxz
mov
or
cld
lock
sbb
dec
mov
ret
xchg
scas
bound
xlat
push
adc
das
push
adc
dec
ja
aaa
mov
mov
mov
loopne
mov
std
call
js
test
dec
push
adc
xchg
pop
jg
fsubp
aaa
or
leave
pop
pop
mov
std
stc
jecxz
sbb
cmp
test
mov
test
enter
popf
not
clc
sbb
sub
je
jb
dec
xor
pop
shrl
dec
inc
fsubp
cmp
mov
sbb
adc
js
sbb
add
adc
jp
insl
xchg
ja
hlt
push
cmp
cmpsl
and
jle
sbb
dec
mov
roll
popa
sub
sub
dec
repz
and
aam
fsubs
push
xchg
in
scas
push
ss
dec
inc
arpl
mov
cmp
mov
cmp
inc
pop
orl
jp
jns
rcll
and
mov
xor
in
pop
enter
dec
sti
sti
mov
cmc
jbe
ret
mov
inc
fistl
or
insl
test
data16
dec
lret
pop
mov
dec
and
and
add
testl
sti
lods
ja
iret
mov
xor
fimull
ja
aad
mov
xchg
mov
mov
add
or
jae
aam
stos
rorl
repnz
push
lock
in
fistpll
divb
cmp
adc
dec
les
pop
fsubl
insb
popa
loope
adc
pushl
or
stos
mov
inc
stos
int
or
adc
and
pminub
push
insl
outsb
outsl
jmp
push
jmp
inc
std
nop
push
fdivs
adc
int
loopne
adc
test
mov
dec
add
mov
sub
repnz
movsb
push
rolb
dec
sbb
sub
sbb
and
stos
ret
add
clc
add
sbb
jg
mov
mov
jbe
pop
push
fsubrs
sub
insl
xchg
pusha
jns
stos
out
sub
mov
rcrb
repz
movb
test
adc
cmpsl
int
add
jmp
inc
inc
cmp
shlb
je
mov
or
stos
sahf
jp
inc
ljmp
cld
pop
add
jl
adc
cmpsl
add
add
call
pop
xor
xchg
mov
add
mov
mov
add
or
shlb
lahf
add
push
or
pop
mov
or
stos
dec
loope
inc
sbbl
adc
cmpsb
xchg
mov
inc
inc
daa
aaa
mov
xchg
add
lret
and
or
jne
popa
and
or
cmp
sub
mov
and
int
out
call
mov
mov
cwtl
std
out
ss
lcall
aad
mov
shr
test
outsb
aad
ss
hlt
cmc
xor
or
jmp
ds
add
sub
popf
add
sbbb
lods
and
cs
adc
add
loopne
ja
nop
mov
and
sbb
cmp
lods
loopne
adc
cmpsb
mov
call
sub
mov
test
lock
fmuls
cld
or
sub
rcll
adc
repnz
iret
pop
mov
mov
sarl
and
inc
loopne
fadds
xlat
pop
hlt
loopne
nop
dec
pop
inc
jecxz
pop
jle
inc
dec
inc
jo
sbb
dec
sub
push
leave
pop
ss
jnp
xor
and
pusha
and
ja
lea
movsb
imul
push
xchg
mov
mov
insb
ss
jl
push
cmp
ret
ljmp
lret
imul
pushf
or
fwait
xchg
jae
test
or
xor
adc
fcmovu
orb
and
test
sbb
out
popa
pop
loop
aad
aam
ja
xchg
add
pop
insl
pop
repnz
loope
imul
leave
shll
sub
clc
cmc
enter
mov
sarl
sarb
addr16
jno
mov
push
push
shlb
pushf
icebp
aad
fwait
xor
js
xor
pop
mov
mov
push
inc
bound
and
sbbl
push
ljmp
mov
jbe
lods
or
fimuls
dec
jbe
je
insb
dec
sbb
in
insl
xchg
pushf
and
dec
xchg
pop
fisubrl
mov
cmpsl
xor
and
out
ficompl
lods
cmpsl
andb
int
cmp
and
xchg
lahf
jns
fsubr
and
test
xorl
dec
xor
inc
mov
push
insl
xchg
lds
mov
stos
shlb
js
mov
push
imul
jae
leave
pop
add
sar
into
push
pop
fbld
sub
ret
inc
rcr
push
xchg
arpl
push
mov
push
sbb
push
dec
aam
ret
xchg
ds
sbb
lret
mov
pop
icebp
dec
lret
xor
sahf
fcomps
addr16
mov
jecxz
sub
add
sub
cltd
std
mov
dec
mov
fs
lahf
cmpsl
out
mov
mov
sahf
push
aas
inc
cmp
das
adc
jg
xor
out
mov
xorb
or
xchg
aad
js
jb
andb
int
and
mov
test
dec
push
jp
arpl
push
xchg
push
sub
adc
popf
push
xlat
ficompl
ficoms
popf
bound
add
pop
pop
popf
push
rolb
cltd
add
lds
dec
push
insl
mov
nop
mov
aaa
jmp
pushf
popa
add
sub
scas
test
in
dec
xlat
push
js
pop
fdivl
add
and
je
lods
mov
and
jnp
sbb
sar
cmp
scas
pop
mov
jns
mov
in
or
dec
push
push
push
add
cmp
enter
dec
roll
test
fwait
out
es
inc
inc
dec
mov
push
in
shrl
clc
jae
xchg
xchg
jbe
mov
fdivl
push
cmpb
sbb
cmp
xor
jae
fadds
pop
stos
clc
push
push
pop
dec
inc
lahf
inc
inc
and
pop
inc
test
clc
xlat
dec
mov
mov
push
push
pushf
inc
pop
orb
dec
dec
xchg
outsl
xor
cmpsl
xor
add
add
xor
xor
incl
jae
lds
sub
adc
xchg
xor
jbe
and
in
jp
push
pop
outsb
inc
cltd
jle
lea
adcl
rclb
adcl
dec
mov
inc
mov
jne
xchg
cmp
xchg
mov
fcompl
cmpsb
push
addl
sti
cs
xchg
in
mov
mov
push
mulb
hlt
loope
loopne
push
das
bound
or
mov
jg
out
dec
aaa
lds
mov
sub
add
pop
aas
mov
ret
outsl
xchg
cmp
cmp
fabs
xchg
pop
or
push
popf
push
cli
shlb
lcall
and
roll
push
push
jne
xchg
fstpl
orl
arpl
leave
addr16
insl
jb
negl
sub
je
gs
fxtract
pop
xchg
ss
cmpsl
int3
aas
mov
jge
pop
lods
ret
addl
subb
jg
mov
jge
jo
cli
xor
fsubp
in
sbbb
test
pop
test
mov
xor
pushf
loope
clc
subl
mov
xchg
call
jg
mov
nop
push
das
push
cmpsl
out
adc
mov
mov
inc
hlt
aad
jns
jns
mov
jbe
or
fsubs
insl
jnp
fdivrs
sbb
pushf
or
fsubl
aad
and
leave
insb
cmp
ja
ljmp
shlb
insb
iret
lsl
pop
insw
xor
rorl
or
negl
sbb
jno
mov
jecxz
pop
aam
xor
movsl
outsl
mov
xchg
push
and
cmp
xlat
sbb
inc
push
push
movsl
push
shl
sahf
sub
stc
push
inc
xchg
xor
lods
das
jge
mov
sti
or
aam
xchg
jns
shll
rcrb
cwtl
ss
fdivs
cmpb
add
push
divl
xor
sub
pop
lods
nop
mov
cltd
popf
scas
jb
jno
cld
cli
insl
loopne
sub
push
loop
call
pop
int3
cli
pop
movsb
fs
cmovg
mov
sub
mov
aad
or
call
icebp
adc
lcall
int
adc
shl
mov
dec
scas
insl
xlat
pop
daa
insl
xor
cmp
jbe
mov
xchg
mov
cmp
sub
scas
mov
daa
xchg
push
inc
popf
and
xchg
mov
lcall
adc
add
push
sbb
test
lahf
dec
mov
push
aam
loop
cwtl
cmc
add
push
or
mov
dec
movsb
shl
cwtl
sub
adc
shr
lcall
add
insb
test
adc
ss
test
lret
scas
sbb
jne
sub
stc
push
adc
inc
repnz
lods
xlat
jbe
xor
cld
adc
push
and
sti
cmp
in
fldl
push
xchg
rcll
fisubs
rcrb
jp
mov
push
mov
pushf
cmp
mov
add
or
icebp
cltd
jb
subl
inc
adc
mov
jae
and
jnp
add
fwait
addr16
ja
push
movsb
sti
jnp
dec
sbbl
mov
pop
dec
daa
dec
sbb
mov
test
repnz
in
fnstcw
dec
pop
xor
jb
mov
sub
sbb
loop
movsb
mov
fimull
call
inc
mov
and
int3
xor
call
xchg
stos
jb
lahf
pop
aam
pop
out
outsl
inc
adc
std
xchg
pop
mov
jnp
mov
mov
fistps
adc
jno
popa
push
xor
inc
lock
xlat
jae
in
int
out
push
cmpsl
cltd
xor
sub
mov
mov
daa
loope
cmp
and
aaa
data16
mov
adc
lods
jo
jno
clc
cli
mov
mov
nop
stos
imul
and
xchg
dec
mov
cmp
out
les
testb
pop
loop
jle
push
lahf
xor
push
cmp
add
pushf
jmp
movsb
add
xchg
jbe
out
pop
mov
ret
orl
push
fwait
roll
jp
sbb
movb
pop
sbb
test
test
cmp
adc
pop
cmpsb
mov
lods
dec
mov
push
adc
or
pop
sub
inc
aas
pop
outsb
add
pop
lods
xchg
adc
inc
repnz
jne
int3
jle
sbb
ret
test
jne
subl
adc
xchg
add
insl
sbb
enter
rcll
jne
xchg
push
dec
xor
lret
push
sub
push
xor
add
das
cmp
sahf
push
mov
outsl
mov
lret
stc
or
mov
xor
mov
mov
push
sti
xchg
fists
mov
mov
enter
rol
sbb
movsl
sub
push
push
stos
daa
gs
test
dec
cmc
xchg
jle
repz
and
pop
sbb
mov
push
mov
mov
mov
jbe
push
int
xchg
idivb
mov
dec
inc
fsub
es
xlat
pop
cwtl
int3
stos
fisttpll
lret
daa
adc
int
inc
rol
cmc
daa
cltd
mov
in
mov
cmc
int
jg
mov
iret
mov
andb
or
repnz
test
aaa
arpl
mov
or
mov
pop
sbb
movsb
jb
mov
scas
int
xor
cmp
adc
pop
cmp
leave
call
sar
rorl
mov
or
cmc
into
jb
mov
mov
and
xor
mov
mov
insl
push
fnclex
sbb
inc
cmp
lds
ret
mov
inc
inc
inc
lcall
jle
fs
lret
lcall
jne
cmp
lret
out
bound
ret
cli
negb
out
fmuls
aaa
rolb
dec
sbb
popa
push
fdivr
xchg
sub
mov
xchg
jbe
movl
mov
shrl
scas
das
xor
jne
inc
test
xor
ss
pop
cmp
test
rorl
push
loop
into
push
mov
jg
or
jno
pop
aas
add
stc
xor
push
bound
inc
lds
xchg
int
add
mov
ret
dec
cwtl
sbb
jae
mov
scas
mov
mov
push
adc
inc
xchg
insl
inc
es
setne
adc
or
xor
sti
xchg
lcall
mov
iret
push
lret
mov
dec
repz
inc
adc
mov
mov
mov
dec
fsubs
and
mov
shll
pop
cmpsl
push
stos
mov
xor
and
arpl
out
inc
adc
into
nop
test
jne
arpl
mov
dec
test
ret
pop
cmp
inc
push
or
adc
mov
cs
sub
jg
cmp
mul
jae
lret
adc
cmp
xor
lret
mov
fsub
cmc
mov
mov
and
cmc
idivl
testb
dec
add
jmp
adc
mov
out
je
jge
data16
addl
clc
jg
cli
dec
fsubl
pusha
xchg
and
scas
movsb
push
aaa
adc
xor
out
pusha
dec
adc
mov
sub
cwtl
movb
inc
in
frstor
adc
ja
rclb
and
ficompl
xor
lret
rclb
adc
sti
pusha
imul
push
inc
cmp
icebp
jns
or
adc
fidivrs
mov
mov
popf
xchg
test
imul
faddl
roll
adc
jbe
add
outsl
xchg
dec
mov
jl
xchg
xchg
add
add
imul
in
add
in
cmpsb
in
sbb
addb
sub
je
and
jp
xor
aaa
dec
push
nop
cltd
loope
pop
sarl
xchg
xlat
sub
cpuid
popf
ljmp
xchg
sti
out
aas
test
mov
xchg
das
cmp
xor
lret
hlt
pop
xchg
adc
dec
inc
gs
jecxz
roll
stc
test
push
push
mov
jno
dec
mov
fwait
iret
int3
mov
adc
cmp
jns
pop
dec
mov
mov
xor
mov
and
dec
cmp
cli
pop
aad
inc
in
dec
jecxz
insb
sub
jo
push
pop
push
push
xor
mov
push
dec
sbb
inc
push
sub
test
mov
sub
pushf
push
push
pop
cmpsl
jae
lods
jne
or
mov
clc
jecxz
sub
adc
es
inc
mov
cmpsb
dec
jecxz
xor
cmp
inc
xorb
addl
xor
adc
adc
mull
and
sub
or
jmp
mov
jg
mov
sub
adc
js
inc
or
stc
sub
xlat
push
push
stos
and
cmp
sti
mov
jns
movsl
in
inc
enter
sbb
and
lcall
jl
lea
sbb
mov
int
call
xchg
xor
js
xchg
outsl
int
and
mov
std
jne
xor
idiv
add
inc
xchg
and
inc
sub
jnp
out
xchg
call
cli
dec
out
jae
mov
fcmovu
repz
xor
cmp
mov
stos
aas
in
mov
lods
lock
mov
popa
cltd
jmp
test
inc
jecxz
sub
mov
sbb
rclb
ss
xchg
aam
sub
dec
mov
das
push
stos
adc
mov
hlt
stos
jae
lret
xor
push
in
xchg
mov
push
dec
fiadds
jbe
adc
cltd
mov
insl
popf
les
jnp
cmp
lods
iret
out
imul
adcb
add
add
popf
and
or
mov
xor
adc
in
aaa
ficomps
mov
repnz
aad
push
push
lods
dec
mov
adc
scas
pop
nop
jmp
adc
mov
in
mov
pop
adc
pop
fwait
jmp
pop
loop
jg
pop
mov
mov
mov
fnsave
js
enter
and
pop
out
jns
or
lods
pop
ds
push
sbb
or
test
jno
mov
lret
movsb
sti
in
inc
jno
push
and
movsb
sbb
aam
add
and
mov
hlt
mov
push
jp
outsl
push
aad
mov
sub
mov
mov
xor
add
in
jmp
xor
dec
mov
andl
mov
subb
adc
cmc
cmp
inc
dec
add
dec
leave
inc
test
jecxz
push
xchg
push
jo
nop
pop
scas
or
fsubr
in
mov
daa
movsl
sbb
sarb
outsl
push
adc
mov
test
lods
or
cld
adc
mov
sub
sbb
jge
pushf
push
push
jl
arpl
pop
inc
orl
test
pop
lods
std
mov
adc
pop
xchg
jg
dec
not
jge
mov
adcb
mov
movsl
inc
repz
inc
test
bound
out
popf
lock
mov
jg
dec
fadd
jne
clc
out
fwait
cmp
shlb
sub
ret
dec
pop
jecxz
nop
shrl
xchg
out
jp
mov
pop
and
insl
es
mov
cmp
clc
movb
outsl
cmc
pop
jns
xor
inc
roll
mov
cmp
jl
jo
in
add
inc
repnz
test
cmc
cmp
sub
adc
movsl
lea
jnp
jecxz
pushf
arpl
and
sbb
je
dec
or
add
jbe
aad
xchg
outsl
cmp
outsb
fisttpl
push
xlat
pop
cmpsl
mov
sub
shll
lahf
fsubr
fwait
pushf
mov
fnsave
stc
test
adc
push
shlb
mov
jmp
fstps
je
stos
insb
cmc
jo
sbb
es
les
sti
bound
incb
adc
subl
sahf
sbb
es
inc
sbb
xchg
fimuls
imul
jle
and
adc
loopne
sar
loop
or
pop
fs
push
jp
jbe
fstl
fwait
repz
adc
je
mov
mov
mov
sub
das
sub
dec
es
push
testb
cmc
mov
pop
xor
adc
cmpl
lret
imul
enter
lea
lret
cld
pop
sub
subb
mov
xchg
add
inc
lahf
and
xor
stc
push
mov
out
cmpsl
icebp
pop
fadd
and
inc
xor
adc
out
stos
sub
dec
mov
inc
jp
xor
dec
sbb
ret
fisubl
push
popa
in
push
dec
repz
sub
adc
inc
xchg
xchg
daa
popf
icebp
dec
hlt
inc
paddsb
sti
scas
cwtl
dec
in
pop
into
push
cmp
cmp
add
int
sbb
fwait
inc
jl
leave
cmp
pop
xchg
pop
mov
jge
push
or
jnp
out
mov
lods
mov
dec
adc
aad
and
cli
mov
ret
lahf
insb
ret
fistl
pop
mov
daa
imul
mov
xchg
adc
add
push
das
mov
jb
cmpsb
xor
fsub
cld
out
lods
fisttps
aas
or
lds
lahf
ds
fimuls
dec
push
adc
daa
inc
pop
dec
imul
jmp
add
and
out
in
xchg
cmc
mov
int3
push
cmp
sub
or
lods
adc
cli
rcrb
mov
add
jne
jne
in
data16
les
comiss
jp
push
jbe
lods
movsb
divl
pop
leave
cmp
adc
mov
cs
mov
cmp
lcall
ds
xchg
adc
sbb
fisubrs
je
and
xor
aad
jmp
adcb
divl
insl
ss
pusha
cmp
int
xchg
adc
push
or
stos
mov
and
stos
aaa
cmpsl
jl
jno
jno
fisubs
clc
cltd
or
cmpsb
out
and
xor
push
add
rolb
std
adc
mov
pop
xchg
pop
out
lahf
cmpsl
imul
push
stc
cmpsl
ja
rcl
rcll
mov
shrl
mov
incl
jo
loopne
imul
sbb
shrb
aad
dec
cld
pushf
sub
xchg
out
inc
push
arpl
push
call
cltd
movsl
addl
call
xchg
shrl
movl
js
ret
inc
negl
inc
cmc
cmp
lret
nop
inc
xchg
fwait
fs
fs
test
fs
add
push
xor
jne
dec
cmc
lock
test
xor
mov
pop
rcr
ds
push
mov
or
mov
pop
pusha
sahf
stos
movsl
xor
xchg
mov
loopnew
jmp
hlt
push
sbb
jo
cmp
add
or
cmc
or
int
addr16
xlat
lods
into
sub
push
test
rolb
loopne
mov
pop
aam
pop
cmp
push
imulb
test
loopne
or
iret
cs
push
xor
cmp
jg
mov
mov
push
fisubrl
shrb
pusha
enter
xchg
mov
mov
mov
or
push
fcoml
test
and
movsb
mov
mov
test
mov
das
loope
push
jmp
in
data16
mov
dec
orb
sbb
aam
movsl
mov
inc
cld
jle
add
into
pop
push
cmc
imulb
jno
inc
jmp
ds
jae
mov
push
dec
mov
loop
jno
bound
cmpb
test
mov
movsl
lcall
and
addl
xor
push
pop
jae
xor
addl
or
movq
sbb
pop
dec
xor
cmpsb
mov
pop
mov
pop
mov
and
lock
sub
dec
fiadds
adc
sub
pop
jno
push
iret
repz
pop
repz
sub
negl
push
outsb
mov
notb
pop
loopne
shll
insl
cli
pushf
jno
aas
fistpl
rorb
sbb
movsb
mov
dec
imul
lcall
frstor
out
jecxz
and
sbbb
dec
fwait
clc
pop
xor
cmp
sub
cmp
mov
push
jns
cltd
jl
cmp
push
movsl
xchg
fdivs
les
ljmp
addr16
dec
cmp
add
ds
loope
lods
stc
and
popa
mov
xchg
test
push
and
sti
shlb
xor
jge
js
fnsave
stos
cmp
xchg
adcb
cmpl
add
out
fdivl
push
int
je
rcll
mov
lret
loope
sbb
sti
mov
sub
adc
out
arpl
adc
pushf
dec
stos
lea
mov
adc
mov
in
mov
cmpsl
dec
jae
jo
push
add
addr16
and
icebp
fbld
pop
xchg
into
cmp
xor
or
iret
and
int3
mov
xor
push
mov
cmpsl
mov
xchg
push
lret
sub
push
ret
push
push
fisubrl
mov
pusha
push
sbb
adc
andl
mov
sub
mov
not
cmp
or
imul
mov
fwait
dec
inc
push
fistl
sbb
lret
cmp
pop
dec
shrb
mov
fmull
add
fsubr
sahf
inc
mov
repnz
in
adc
jmp
mov
leave
bound
div
xor
mov
xchg
pop
xorl
mov
test
cmp
jb
cli
lahf
stos
cmp
daa
lods
xchg
jb
jo
pop
xchg
out
mov
push
dec
pop
addl
out
je
call
clc
mov
inc
rcrl
popf
pushf
sub
mov
mov
inc
aad
add
in
out
mov
frndint
jb
add
int
jne
fwait
je
js
jg
xor
enter
adc
es
ljmp
lods
xchg
and
jge
pop
jo
jmp
mov
cmp
jge
or
pusha
and
mov
dec
ljmp
xchg
dec
ja
out
push
fdivl
xor
gs
mov
rolb
push
or
ss
addr16
dec
jp
dec
ret
mov
test
pusha
jno
es
mov
loopne
push
lret
loop
dec
inc
sbb
jnp
lods
loope
pop
in
mov
sbb
dec
sbb
mov
call
ret
and
cli
cmp
inc
cmp
arpl
mov
cs
cmp
xor
lods
pop
pop
pop
mov
adc
out
mov
lods
call
cwtl
outsb
out
fwait
inc
gs
add
jno
popa
fsts
pop
sbb
icebp
mov
mov
and
cmp
adc
mov
ret
push
in
ljmp
lcall
push
mov
js
jl
loopne
adc
nop
mov
sahf
test
stos
add
ret
and
jae
mov
out
or
jb
inc
loopne
sub
repz
jp
shll
dec
icebp
mov
cltd
adc
inc
pop
int3
aas
pop
test
push
add
jecxz
xchg
cmp
out
xchg
pop
mov
push
sbb
xor
adc
ret
rorl
mov
imul
adc
or
mov
popf
pushf
jecxz
ss
movsb
xor
loopne
not
jmp
push
xchg
adc
xlat
jne
xchg
xchg
ficoms
into
dec
lods
jbe
sti
mov
pop
xchg
cltd
jne
insb
inc
sbb
push
or
lods
or
mov
or
lahf
pop
sub
push
xchg
mov
popf
out
es
sbbl
jmp
movsl
cmp
push
mov
jne
fwait
mov
push
inc
cli
xchg
pusha
fildl
pop
sub
stos
jg
into
fidivs
sbb
mov
xor
dec
iret
popf
cmp
xchg
call
or
or
mov
ja
mov
test
fisttps
cwtl
and
lcall
and
or
outsl
xor
or
sbb
pusha
outsl
lret
mov
adc
cmp
dec
dec
jne
cmc
and
scas
mov
cmpsb
ficoms
mov
sbb
pushf
inc
inc
xchg
in
dec
leave
lods
je
adc
adc
fistps
dec
mov
test
mov
adc
cmp
rorb
les
daa
outsb
mov
mov
xor
xchg
xlat
inc
sbbl
push
cmp
mov
ljmp
imul
push
cwtl
out
shrb
lret
push
repz
hlt
pop
shl
shll
xchg
popa
lods
jne
mov
je
in
mov
xlat
jecxz
insl
bound
ret
mov
out
out
gs
call
inc
inc
dec
dec
es
lcall
or
xor
scas
aaa
add
or
lahf
inc
or
sbb
test
outsb
loope
mov
pop
lahf
jne
add
dec
loope
mov
sbb
out
sbb
add
aaa
mov
js
sbb
loope
scas
leave
inc
inc
lret
inc
out
add
mov
pushf
inc
sub
mov
int3
das
cwtl
dec
sub
lods
in
dec
pop
movb
cs
dec
lret
mov
sub
rolb
out
lret
jg
repz
lcall
loopne
dec
mov
push
ljmp
push
mov
mov
cltd
lcall
daa
mov
adc
xchg
fimuls
cmpl
das
mov
popa
push
push
push
inc
inc
dec
jns
sbb
mov
dec
in
notl
adc
and
xchg
xor
jl
xchg
sbb
mov
imull
es
cmc
roll
insl
bound
cmpsl
pushf
mov
pop
mov
es
jo
xor
adc
xchg
in
inc
fwait
test
aas
and
aaa
cmp
add
mov
test
ficoms
jne
hlt
in
jl
adc
aas
sub
fmul
es
and
mov
jae
lea
inc
loop
mov
test
aaa
repz
out
pop
mov
pop
std
pop
imul
cs
cld
insb
leave
push
cmpsb
jecxz
cmp
inc
and
mov
mov
testb
xor
vpsadbw
pop
pop
xchg
push
xchg
out
adc
loop
sub
inc
aad
ljmp
xchg
sbb
popa
mov
adc
loop
icebp
jbe
fnstcw
rolb
or
and
lds
xchg
hlt
das
out
mov
cmp
add
push
jmp
orb
icebp
push
fstl
gs
dec
pop
mov
cmp
int3
movl
push
popf
add
pop
js
jle
imul
psadbw
ljmp
adc
bound
push
insb
cltd
les
lods
aaa
addr16
sub
outsl
jmp
jg
pop
pop
xchg
cmova
out
xor
xchg
push
das
fstl
xor
adc
inc
sarl
xchg
dec
push
dec
ljmp
xchg
popa
loope
scas
leave
xchg
and
popf
fstpt
das
xor
cmp
sahf
daa
pop
orl
lock
imul
xchg
stos
shrl
pusha
shll
xor
aad
xchg
jbe
sub
and
push
fimuls
sub
xor
movsb
mov
xchg
stos
cmp
xor
insb
mov
cli
push
out
les
dec
xor
lods
jnp
test
fwait
repz
scas
jnp
scas
lcall
gs
inc
into
or
or
xor
cmp
and
shrl
repnz
mov
das
push
sub
into
in
mov
sbb
mov
add
fwait
adc
out
fwait
repnz
stos
push
add
call
stos
je
packssdw
xor
push
movsb
pop
in
jb
fidivs
cmp
push
xor
pop
pushw
repz
arpl
push
mov
adc
dec
mov
int
xor
sub
mov
push
jno
insb
or
lock
xchg
pop
mov
mov
sbb
xor
mov
sub
andl
xchg
int3
sub
out
xchg
add
or
cld
test
and
jb
ret
out
in
mov
ja
movsb
mov
in
mov
push
in
fs
sub
hlt
jo
or
jbe
loope
lods
lods
or
aas
daa
push
int3
xchg
and
cs
rcrl
mov
and
dec
cmc
mov
xchg
in
mov
test
mov
fwait
or
cmp
lods
add
add
sbb
push
stos
es
cld
jb
repz
inc
mov
pop
mov
repz
and
clc
mov
sub
jo
pusha
hlt
push
xchg
mov
cld
add
sahf
push
cmpb
add
inc
cwtl
sub
popa
xor
push
mov
shlb
test
pushf
adc
shll
cs
or
rcrb
test
xorl
sub
into
das
and
xchg
sub
dec
in
mov
add
or
xor
cmp
lcall
mov
stos
lock
inc
mull
fnstsw
sub
mov
es
out
hlt
xchg
mov
add
clc
filds
cld
mov
mov
inc
dec
lret
mov
hlt
test
arpl
lret
xor
mov
jae
sbb
leave
push
dec
or
and
sbb
pop
mov
into
xor
in
mov
dec
ljmp
mov
iret
std
xchg
mov
adcb
inc
add
jns
imul
aad
push
test
dec
and
into
pop
push
imul
es
cld
cmp
test
ja
loop
sub
inc
ja
mov
push
push
cmp
push
dec
inc
pop
sarl
or
cli
inc
lods
cmp
mov
pop
pop
mov
mov
mov
loop
push
xchg
and
mov
jo
xor
out
dec
cmpsl
inc
dec
jmp
cmpl
add
xlat
push
pop
cmc
insb
out
push
dec
call
or
hlt
call
cmp
sarb
xor
push
jbe
clc
cltd
fcoms
or
popf
leave
mov
lcall
lret
cwtl
lret
jb
fadds
das
mov
movsb
cmp
jp
sub
jg
ret
push
ficompl
or
sub
mov
jae
jo
arpl
xchg
inc
and
xchg
lcall
mov
cmpl
repnz
dec
inc
fadd
scas
dec
sti
push
pushl
stc
in
mov
mov
mov
cmp
aas
pop
imul
je
sbb
mov
in
sti
push
test
add
icebp
sub
rcr
pop
sbb
lea
jmp
enter
or
sub
and
xlat
stos
repnz
lods
repnz
jecxz
lcall
lea
xchg
ficoms
push
popf
out
sti
pop
add
outsl
or
arpl
mov
int
int3
and
pop
pop
int3
icebp
nop
gs
mov
mov
out
push
or
jae
cmpsl
adc
push
xor
xor
sub
in
std
outsw
push
cmp
xchg
xchg
sbbb
mov
xor
adc
fldt
dec
leave
add
aas
mov
lahf
xor
jmp
test
and
sub
pop
repz
inc
lcall
inc
addr16
mov
add
mov
pop
lea
add
pushf
sbb
ja
mov
xchg
inc
jle
gs
jno
push
ret
rcrl
mov
or
jae
and
lahf
inc
outsl
sub
scas
or
bound
xor
push
mov
test
mov
cwtl
xchg
ret
fists
clc
cmpb
aaa
push
int
mov
jp
sub
xlat
adc
scas
dec
rorb
push
inc
xchg
mov
and
mov
xchg
insb
divl
fimull
inc
push
stc
inc
cmp
push
sub
mov
mov
leave
fimull
add
xchg
popf
jno
popa
mov
loope
insb
xchg
and
leave
cmp
or
fmull
test
iret
leave
and
pop
add
imul
mov
popa
jl
hlt
movsb
and
dec
and
push
push
icebp
sbb
jge
adc
push
iret
mov
and
jne
imul
frstor
mov
add
mov
test
dec
jns
or
clc
ss
and
inc
dec
insl
inc
jo
sub
jo
sub
fs
enter
jmp
int
jbe
test
icebp
mov
mov
push
inc
outsb
movsl
or
mov
sub
aaa
add
movsl
jp
enter
add
push
dec
test
adc
push
mov
ret
call
in
std
inc
mov
hlt
jmp
cli
inc
jp
inc
mov
inc
xchg
scas
or
cmc
adc
add
outsl
loope
mov
clc
xlat
mov
ficomps
hlt
push
sbb
ficoms
ds
mov
push
ret
stc
mov
test
cwtl
sub
push
mov
into
sbb
xchg
stos
lea
mov
jmp
das
pop
sahf
stos
jl
adc
xor
scas
sbb
mov
ret
jnp
and
dec
lret
pop
jmp
pop
sbb
repnz
test
inc
xchg
jnp
mov
mov
scas
add
out
arpl
dec
lcall
add
push
dec
mov
dec
sub
xchg
xchg
inc
cmpb
jbe
mov
pop
add
imul
in
pop
das
loope
dec
pop
jg
daa
popf
mov
fisttpl
arpl
daa
pop
fidivrs
ret
sub
in
mov
jbe
movsb
daa
adc
sbb
xor
int3
mulb
and
cltd
mov
je
iret
out
mov
lea
pop
adcb
lods
inc
and
push
jecxz
cmpsl
outsl
cwtl
cld
out
pop
jne
push
mov
pop
in
in
xchg
call
push
jmp
in
mov
push
ss
xchg
mov
cmp
popa
or
pop
dec
jmp
jmp
popf
dec
outsb
std
pushf
add
cli
cmc
fildll
pop
fbstp
push
adc
mov
adc
int3
adc
pop
sub
sti
jbe
jp
insl
clc
aas
dec
aaa
std
repnz
push
test
xchg
outsb
dec
iret
jno
push
or
inc
cltd
mov
stos
and
mov
xor
fisttps
jne
test
leave
incb
dec
in
cltd
test
cs
add
repz
xchg
pop
ljmp
or
lea
push
pusha
xchg
xchg
mov
aam
inc
sahf
jp
or
outsl
mov
lods
jg
rorb
out
cmp
adcb
push
mov
add
xor
pop
cmp
mov
push
cmpsb
mov
fdiv
arpl
mov
jp
int3
mov
jecxz
repz
ficomps
movsl
push
pop
addr16
sbb
mov
mov
adc
cmp
repnz
outsl
xor
jns
and
ds
cld
imul
jecxz
inc
fs
sbb
mov
bound
push
gs
mov
inc
push
inc
sbb
add
mov
pop
stos
sbb
cmp
dec
stc
icebp
xor
iret
push
cmp
rcrl
ljmp
and
mov
inc
lret
pop
lcall
pop
mov
mov
inc
test
cmpsb
roll
add
xlat
scas
fldt
push
repnz
mov
adc
jecxz
dec
insb
cltd
adc
imul
jmp
fcomip
and
sbb
and
into
imulb
scas
dec
into
cmp
adc
test
mov
mov
sbb
jnp
out
cmp
or
sarl
dec
jno
adcl
sbb
test
shll
les
mov
fsub
mov
jb
jl
dec
push
les
aaa
scas
je
dec
inc
jge
cs
call
mov
test
xchg
jne
sti
ss
mov
inc
xchg
rorb
mov
test
ret
jb
incb
sbb
cmp
xchg
pop
xchg
stos
cmp
inc
sub
push
mov
sbb
gs
loop
mov
ds
xor
or
aaa
sbb
cmpsb
push
std
mov
inc
sub
pop
sub
mov
test
or
test
in
sti
lcall
sbb
popa
iret
push
cmp
je
pop
shlb
loopne
add
imul
scas
pop
cli
inc
mov
or
and
cmpsb
in
repnz
test
mov
clc
bound
add
mov
xchg
movsb
sti
sbb
mov
outsb
repnz
mov
adc
out
mov
das
sbb
jnp
andb
imulb
loope
sbb
adc
add
mov
mov
sti
inc
cltd
push
xorl
inc
push
jnp
dec
dec
jp
dec
mov
inc
in
push
ret
xchg
mov
mov
arpl
jmp
outsb
cmp
pop
clc
insl
imul
orl
push
loope
mov
adc
push
mov
cmpl
je
aas
test
sub
icebp
jo
mov
or
or
mov
jae
xchg
and
mov
faddp
inc
hlt
mov
cmp
dec
jg
push
and
pop
rcll
sbb
in
xchg
sub
jno
fdivrl
hlt
pop
shl
nop
sub
push
repz
ds
jb
pusha
add
fwait
loop
inc
inc
jmp
push
pop
jne
xor
pusha
sahf
test
call
push
pop
pop
ret
jle
xchg
push
out
mov
dec
xchg
test
das
jns
fisttpll
test
sub
lds
mov
push
fs
pop
push
jmp
sbb
push
cmp
test
mov
fdivrs
fldl
fwait
push
addl
inc
nop
xor
xor
mov
les
repnz
jnp
sbb
mov
add
push
jp
fdiv
xchg
jbe
out
xorb
push
lret
inc
fs
cwtl
xchg
out
inc
or
movl
cmp
xchg
push
push
add
and
outsb
pop
mov
mov
jb
and
jo
shll
sub
loope
dec
add
js
add
push
mov
int3
repz
or
out
inc
xor
les
scas
shll
mov
mov
mov
pop
insl
lock
leave
aam
in
fidivl
sub
pop
push
or
pushf
int3
or
mov
adc
daa
insl
bound
pop
addl
lock
shlb
mov
mov
push
leave
push
les
call
xor
sti
mov
lock
addr16
int3
push
adcl
and
lds
scas
in
or
and
pop
push
and
lar
xorl
sub
dec
fdivrp
popa
lods
jnp
jg
stc
jne
sub
inc
push
sub
pop
out
adc
mov
scas
xlat
add
out
dec
out
addr16
lahf
test
push
repz
enter
mov
inc
push
cmpsb
and
aam
idivl
mov
jecxz
xor
push
dec
les
jb
fadd
aas
je
lock
lock
xchg
mov
aad
xor
stc
dec
ret
scas
jmp
icebp
pop
mov
mulb
das
lock
inc
mov
xor
sahf
push
imul
jne
ljmp
in
mov
out
xor
fisubl
lret
xor
xor
xlat
xchg
lahf
sub
xchg
lods
shl
xor
pop
dec
and
mov
mov
add
fcmovnbe
int3
movsl
ds
mov
shl
mov
push
cmp
fsubl
and
lods
xor
mov
mov
mov
xor
pusha
stos
cld
mov
adc
jbe
cli
mov
mov
mov
mov
mov
mov
or
mov
std
cmc
or
fs
fcom
add
xchg
mov
cwtl
jne
pop
fcomps
cld
push
push
jg,pn
fsubs
popa
add
xor
mov
sahf
mov
jl
addr16
adc
sbb
aaa
xor
test
jne
mov
inc
mov
push
lahf
dec
sub
jle
push
mov
stc
sarb
test
push
in
mov
mov
leave
mov
shl
xor
xchg
lods
xchg
mov
jge
mov
push
cwtl
arpl
rolb
pusha
mov
js
push
xchg
mov
xchg
nop
push
sub
insl
mov
mov
loope
push
xor
sbb
mov
mov
loopne
cmp
mov
xor
sbb
scas
test
push
and
addr16
sbb
fwait
mov
imul
inc
xchg
mov
mov
lret
sahf
push
insl
ficoml
icebp
push
push
jmp
bswap
lahf
or
dec
xor
mov
gs
push
rclb
imul
add
or
es
mov
adc
inc
adc
adc
push
jo
not
sbb
scas
cltd
sbb
andb
xchg
push
pusha
cmp
imul
cmp
push
jbe
sbb
pop
loope
aaa
addr16
es
mov
jns
fadds
lret
mov
mov
pop
push
cwtl
in
lret
mov
dec
lahf
mov
or
fwait
xor
sub
adc
sub
push
nop
fsts
pushf
bound
cmp
jp
in
xchg
add
scas
inc
jl
inc
xor
cmp
loop
xchg
mov
pop
ret
call
lods
adc
mov
mov
aas
adc
ja
cli
lods
jmp
mov
int
movsl
negl
movsb
es
movsb
pop
mov
and
in
pop
repz
cmp
and
adc
rcrb
dec
popl
test
aas
cmpl
sbb
gs
inc
mov
test
push
dec
insb
cltd
and
movsl
sahf
rorb
jmp
pop
push
jmp
xorb
faddp
or
test
cmp
xchg
clc
or
adc
sub
sbb
push
cmpsl
aas
cld
mov
xchg
inc
sbb
jge
mov
imul
inc
test
jno
jae
cmc
adc
ror
lret
pop
push
scas
scas
test
push
aas
shll
mov
push
test
loop
sbb
sbb
mov
mov
push
scas
cltd
cmp
mov
xor
mov
repnz
inc
rcll
repz
xor
push
jno
xlat
xchg
sbb
dec
or
dec
fwait
sbb
ffree
sbb
movsl
hlt
inc
push
or
and
pushf
xlat
std
adc
jmp
or
aaa
sub
or
jo
pop
test
imul
test
xchg
bnd
mov
sbb
sbb
std
mov
in
mov
clc
add
rol
sub
push
fildl
shl
loop
popa
in
repnz
jle
and
pushf
mov
hlt
aad
out
das
ljmp
inc
lea
clc
mov
leave
cmp
jge
popf
mov
insb
xlat
jb
loopne
xchg
push
mov
lock
and
dec
lods
testb
jge
std
movsl
push
daa
sbb
xlat
push
bound
sbb
push
or
or
repz
imul
or
sub
jecxz,pt
push
int3
ret
js
pop
out
cwtl
cmp
sbb
push
cmovns
sub
push
xlat
ljmp
cmpsl
jp
ret
test
jns
movsb
movsb
imul
pop
sbb
lea
jecxz
dec
mov
mov
cmp
add
iret
cmp
add
lret
data16
jo
sub
fcoms
test
or
cwtl
test
sbb
rcrl
movsl
xchg
or
add
bound
mov
daa
jp
push
insb
js
xchg
fmull
push
cltd
in
mov
jp
mov
pop
push
scas
dec
dec
jecxz
jl
cmp
mov
cmp
jb
test
lods
sbb
pop
cmp
and
sub
jae
push
sub
adc
shl
jmp
pop
stos
push
add
lahf
mov
daa
add
fs
sub
testl
out
imul
js
pop
std
movsb
mov
xor
ljmp
sbb
std
cmp
pop
fimull
dec
shr
out
fiaddl
adc
js
pop
inc
jecxz
add
mov
call
mov
clc
push
insl
adc
push
sbb
aad
push
fimuls
fisttpll
dec
lock
push
xchg
push
or
dec
and
outsl
ss
mov
dec
scas
xchg
add
inc
pop
ret
arpl
push
push
jnp
cmpsb
adcl
and
lret
or
inc
xchg
subb
pop
sub
mov
mov
loope
mov
jnp
inc
sub
sahf
test
rcl
pop
test
arpl
shrl
mov
and
aad
inc
into
pop
mov
je
cmpsl
jbe
and
scas
xor
js
dec
push
adc
add
sbb
and
outsb
xchg
into
or
stc
imul
insb
dec
push
testb
in
popf
dec
xor
cmc
in
cwtl
xlat
movsl
mov
outsl
es
mov
jnp
stc
inc
out
mov
aas
push
mov
xchg
std
cmc
test
ds
xchg
repz
sbb
sub
push
pop
and
addr16
outsb
sub
sub
xorb
and
outsb
inc
imul
inc
sbb
lods
add
jno
mov
pop
stc
mov
fmul
push
mov
data16
jp
pop
std
out
shll
gs
sti
aas
pop
push
xchg
jle
test
pop
mov
mov
inc
add
xlat
ss
out
pusha
mov
cs
jecxz,pn
mov
adc
aas
inc
xchg
das
adc
inc
jno
push
jl
xchg
push
out
add
adc
xor
fsubl
jmp
iret
inc
inc
out
cmpsl
imul
out
sbb
and
sbb
dec
andl
movsl
or
xchg
jmp
dec
pop
cld
xor
pop
hlt
adc
push
xor
pop
lods
shrb
pop
mov
dec
cmp
pushf
or
push
test
and
mov
xchg
dec
and
adc
inc
adc
mov
leave
dec
mov
sbb
in
xchg
sti
std
inc
mov
ret
imul
sbb
xor
sub
shl
icebp
jne
shr
mov
out
sub
add
and
sqrtps
out
and
adc
repz
into
inc
jno
mov
fbld
ja
jl
pop
push
inc
xor
push
adc
jnp
lret
adc
sahf
mov
add
stos
repnz
push
mov
out
jle
outsl
test
dec
arpl
mov
fdiv
or
pop
mov
mov
arpl
mov
jg
adc
leave
clc
test
sti
inc
mov
sub
ljmp
pop
int3
mov
hlt
leave
scas
movsl
pop
popa
lds
pop
sahf
mov
pop
jno
jecxz
add
or
bound
adc
fs
mov
iret
mov
pop
push
pop
sub
lds
add
inc
test
pop
xchg
cmp
iret
in
loop
das
data16
outsl
inc
cld
mov
dec
push
lret
cmc
fdivr
repnz
dec
out
and
js
das
clc
jl
push
and
cwtl
gs
xlat
push
out
or
push
and
pop
mov
mov
mov
loop
ds
jmp
std
push
push
push
mov
add
call
or
outsl
pop
jo
into
sarb
gs
mov
shld
adc
jns
pop
jo
add
jge
testb
sub
dec
or
cmp
sbb
jo
leave
data16
ret
xchg
call
push
shr
loopne
lret
sbb
add
or
nop
mov
dec
pop
jns
jl
movsl
jl
jecxz
or
out
orl
lds
xchg
push
aaa
icebp
es
mov
pop
loope
sbb
push
pop
mov
rclb
insl
xchg
pop
or
aaa
jns
push
out
pop
push
pusha
ss
sbb
add
insb
movsb
addr16
inc
jns
leave
dec
ret
idivl
and
lods
add
jae
int3
testl
mov
movsl
arpl
fmull
pop
mov
loope
je
out
push
xrelease
mov
lret
cmp
xlat
inc
arpl
xor
lret
mov
xor
sbb
and
cmp
pop
cmpsl
dec
icebp
sub
mov
jmp
xchg
mov
jo
inc
testl
mov
cmc
add
scas
inc
xlat
jb
xor
cltd
jp
dec
outsb
ret
sbb
clc
adc
out
adc
cld
enter
out
mov
repz
jp
into
sets
out
inc
rclb
push
aam
and
cmp
mov
fistpl
stc
dec
insb
cmp
mov
shl
push
mov
addb
sbb
xchg
mov
movsl
out
sbb
cmp
pop
cs
and
push
aas
mov
nop
add
mov
scas
scas
lret
or
movsl
adcl
push
std
dec
jnp
shll
fwait
jo
aad
fdivp
adc
jbe
in
push
stos
pop
and
mov
dec
push
repz
xchg
dec
cmp
in
pop
push
mov
test
add
popa
inc
movsb
sub
cltd
repz
and
xchg
popf
test
push
xor
sbb
lods
or
jecxz
movsb
cmp
ret
and
scas
lods
cli
jge
out
shll
cmp
jo
js
push
jl
fs
or
sub
cmp
and
and
test
hlt
out
inc
sahf
push
add
mov
cmp
mov
in
mov
sbb
lret
dec
fwait
insl
daa
sbb
adc
jp
push
pop
bound
testl
mov
cmpsb
xchg
mov
jne
mov
mov
inc
movsb
push
mov
icebp
pop
dec
jns
test
jp
mov
ljmp
daa
push
into
cli
div
xor
inc
sub
in
sub
gs
lret
mov
or
jns
sub
cld
scas
xchg
das
hlt
lock
xchg
out
nop
lods
pusha
mov
pop
xchg
jno
mov
icebp
cmp
pop
pop
imul
repz
cmp
sub
jmp
je
inc
cmp
repz
sbb
sub
or
jnp
test
das
fld
add
or
jnp
pushf
mov
repnz
and
cltd
push
push
jmp
dec
mov
dec
jmp
mov
or
movsl
iret
rolb
jnp
repnz
inc
out
jecxz
mov
pop
inc
das
mov
mov
mov
aas
push
arpl
cmp
lock
push
jmp
pop
dec
add
mov
and
in
js
inc
push
pusha
jnp
mov
cmp
sbb
push
pushf
mov
jns
mov
cmc
pusha
jl
jg
cmp
sbb
xchg
data16
and
inc
sbb
fcompl
repz
cli
enter
ss
fwait
mov
or
in
sbb
jp
loop
xor
cld
push
ja
adcl
sti
cmp
shrb
jae
mov
mov
loop
cmpsl
es
dec
movsl
int
outsb
les
bound
adc
sbb
inc
inc
dec
jecxz
enter
cmp
in
cld
mov
rcl
sub
xchg
popa
test
daa
dec
add
subb
out
pop
int3
or
push
movsb
cmp
jmp
push
push
adc
cwtl
push
mov
bound
cmp
loop
xlat
pop
adc
sahf
mov
add
and
sub
stc
fldenv
lock
or
mov
jbe
out
push
jg
pop
add
hlt
jne
mov
push
xor
stos
pop
out
sbb
into
dec
jne
int
loope
push
cmp
add
sub
js
xor
cmpl
adc
imul
pop
jb
jecxz
imul
pop
rcrl
loop
not
das
mov
mov
mov
in
dec
xor
test
clc
push
mov
pusha
cltd
adc
push
stos
mov
xchg
mov
dec
mov
sub
das
repnz
dec
xchg
enter
mov
jmp
call
pop
xor
sub
mov
inc
adc
xlat
xchg
sahf
xor
repz
xchg
mov
jmp
mov
xchg
push
push
pop
into
lret
les
in
lods
mov
fdivr
push
sbb
xchg
xor
sub
test
icebp
lea
orb
ds
das
in
mov
xchg
dec
or
daa
stos
mov
add
or
adc
xchg
dec
fbld
shl
cltd
jp
fwait
jl
cmp
mov
dec
dec
inc
add
pop
or
imul
sbbb
xchg
mov
add
pop
aas
sahf
mov
sbb
test
cmp
mov
and
jae
cli
lret
out
mov
lods
lea
imul
popf
addb
dec
dec
movsb
in
xchg
cmp
jecxz
pop
dec
enter
lcall
xchg
xor
xor
push
sbb
dec
ja
aam
mov
cmpsb
xchg
lahf
pop
xchg
mov
and
cmpsb
repnz
loop
mov
fnstenv
iret
cmpb
push
stos
cmp
clc
repz
cmp
dec
pop
in
sub
add
mov
cltd
push
xor
ret
mov
jmp
into
push
jo
adc
mov
fidivs
insl
push
addr16
mov
inc
jmp
pop
dec
add
cli
sbb
mov
arpl
xor
pop
pushf
fcomps
sub
adc
or
xchg
negb
js
xor
push
pop
sub
sub
dec
das
dec
jno
lret
gs
mov
pusha
jo
push
sub
std
add
inc
out
mov
dec
cmpsl
push
movsb
lcall
imul
xor
mov
and
lahf
mov
sub
jae
fisttps
dec
push
or
lds
adc
mov
je
inc
cmpb
mov
inc
xchg
data16
mov
or
sbb
mov
xchg
xor
clc
addr16
pop
aam
sahf
and
decb
cmpsl
rcrb
clc
push
test
jo
lret
mov
in
xchg
gs
lea
lahf
mov
xchg
xchg
movsl
movsl
adc
mov
sahf
pop
inc
mov
scas
push
test
or
mov
ret
mov
in
cmpsb
dec
testl
ss
mov
xchg
cmp
mov
and
sub
jge
jb
lea
jle
push
mov
pop
and
lea
push
imul
mov
push
adc
movsl
shl
cmp
xchg
in
add
mov
aad
subb
cmp
push
add
rcl
pop
cwtl
jae
pushl
jnp
dec
loopne
push
jns
outsb
fisubl
hlt
sbb
rcll
xor
ja
jp
testl
cmovne
pusha
in
jne
sub
mov
data16
imul
sub
pop
sbb
xor
cmp
fldl
push
dec
insl
or
aam
scas
out
int3
cli
push
xchg
jp
and
or
or
pop
dec
mov
insl
scas
adc
and
cmc
rcrl
adc
mov
mov
xor
or
jp
mov
aaa
rcrl
adc
add
aam
notb
xchg
pop
or
popa
das
sub
jae
test
or
add
jno
mov
ret
push
push
push
fsub
into
outsl
xchg
and
aas
xor
repnz
and
int
test
inc
hlt
pop
dec
or
dec
fidivs
nop
dec
aam
test
pop
add
cmp
call
inc
pop
or
fdivl
pop
ret
sti
out
xchg
cmpsb
ljmp
fs
lods
mov
dec
test
push
jo
sbb
mov
push
ds
mov
xor
sub
jge
rorb
popf
or
mov
in
push
add
or
mov
pop
cli
push
outsb
and
dec
ljmp
icebp
repnz
push
and
mov
xchg
dec
mov
outsl
and
pop
repz
je
pop
fwait
outsb
shr
push
mov
fimuls
addr16
adc
lods
imul
jle
mul
jg
jg
aaa
fidivrl
xchg
in
add
stc
mov
les
jecxz
ja
loope
jae
dec
jae
aad
push
sti
popf
cmp
adc
scas
cmp
cmp
inc
gs
and
mov
sub
lock
add
inc
leave
outsl
iret
adcb
imul
jns
clc
cld
mov
mov
cmp
dec
shrl
mov
push
sbb
pop
mov
fldenv
int3
ret
ret
hlt
sbb
rol
fidivrs
into
jne
adc
jl
xchg
sub
cmp
dec
jns
sub
gs
cmp
inc
mov
mov
or
lods
mov
out
mov
or
mov
xor
cmpsb
lock
or
in
sbbl
push
fnstcw
loopne
or
movsl
sbb
call
sub
or
fwait
orl
sbb
in
mov
insl
push
scas
dec
std
and
dec
inc
lods
push
dec
test
rcll
mov
mov
add
fcoms
sub
or
and
mov
xor
push
dec
jmp
push
ds
daa
jae
cltd
xchg
out
xor
jae
jecxz
cli
les
fwait
mov
sbb
roll
cltd
xchg
push
shll
add
mov
test
mov
and
mov
cmc
xor
js
mov
cmpsl
jle
aas
popa
jb
fnsave
je
cmp
rorb
test
mov
sbb
xor
sub
cld
fisttpl
outsl
mov
xchg
jae
std
aam
rcr
lock
in
into
imul
iret
std
fxch
loopne
lcall
fwait
sbb
inc
or
cltd
fimull
xchg
xor
stos
sbb
jnp
xchg
sbb
ret
add
cmp
fwait
cmpsb
push
sub
cmp
call
jge
imul
insl
aad
fistpll
xchg
pop
pop
pop
aaa
std
stc
or
stos
jns
ds
and
sbb
les
jg
dec
outsl
cli
jle,pt
xchg
inc
cmp
and
xchg
loopne
andb
and
rcll
std
pop
push
addb
cmc
lcall
rolb
dec
lcall
pop
sahf
xchg
cld
les
icebp
mov
lea
movsb
adc
adc
cli
mov
cmp
loop
or
xchg
sahf
inc
ljmp
fs
xor
mov
xor
fcompl
cmp
testl
sub
xor
dec
push
test
or
std
cmc
dec
mov
cmpsl
jecxz
adc
sbb
mov
cmp
inc
rcrl
cltd
imul
adc
dec
adc
adc
or
pusha
jns
imul
cmp
xor
scas
lock
into
fldenv
addr16
push
cmp
repz
mov
dec
xchg
mov
in
mov
in
push
xor
sub
sahf
scas
insb
xor
sarb
push
daa
push
or
jne
mov
mov
rcrl
push
ret
fimuls
out
add
or
or
xchg
aam
mov
jno
cmpsl
jb
roll
mov
mov
sbb
mov
cltd
mov
das
iret
and
jge
mov
add
aaa
sbb
out
jno
cmpsl
mov
push
cmc
xchg
fisubs
lea
xchg
or
shrb
and
fwait
nop
dec
xadd
cld
lret
scas
mov
mov
mov
xchg
xchg
sbbl
adc
dec
mov
xchg
jae
mov
and
jg
jae
inc
push
add
adc
sub
pop
mov
into
cmpl
negb
and
test
les
push
int
lret
mov
mov
ficomps
add
rcr
in
aaa
sub
vpmuludq
lret
cmp
out
adc
cmc
ret
scas
sti
test
out
in
test
push
sbb
shlb
addb
inc
ret
cmp
aaa
pushf
pop
jg
out
aam
inc
dec
imul
push
scas
lds
stc
andl
cmp
mov
data16
or
stc
cmc
and
sub
xchg
jnp
push
repz
xchg
mov
push
fs
jmp
lret
in
sahf
or
cmc
sub
or
stos
or
subb
adc
add
loopne
mov
std
cmp
loop
ds
or
sahf
mov
adc
pop
or
adc
sub
pop
adc
out
jp
mov
xor
lods
dec
and
inc
lcall
adc
adc
xor
int
insb
stos
adc
xchg
popa
out
shrb
mov
stc
xchg
aas
push
and
dec
int3
lahf
insl
mov
insb
iret
inc
ficoml
mov
push
sbbl
sub
adc
pop
shl
cmpsl
xor
inc
mov
xor
sub
mov
mov
in
and
cmp
xor
cmp
daa
fisttpll
mov
ljmp
mov
jmp
add
or
cmp
xor
add
mov
outsl
add
inc
jne
in
shl
sub
push
push
push
pop
mov
lods
stc
sti
mov
pop
or
movsb
clc
ret
leave
pop
sbbl
pop
lods
mov
call
xadd
fiadds
inc
ret
das
fsubrp
std
inc
shlb
movsl
push
add
outsl
jg
int3
cld
xorl
and
push
lcall
sub
xchg
mov
push
nop
or
and
subl
sahf
adc
push
movsb
inc
inc
adc
dec
das
test
dec
mov
and
jle
jno
pop
mov
xchg
lahf
pop
stos
mov
dec
int3
sbb
dec
jne
pop
movntps
xor
in
out
int3
daa
jle
adc
or
std
fsts
leave
adc
cmp
imul
fmuls
inc
add
icebp
fimuls
faddl
dec
sub
inc
mov
cmovl
or
out
mov
sar
fisubs
mov
fldt
mov
loopne
push
shll
xor
icebp
pop
and
lds
decl
roll
or
shr
mov
xchg
test
negb
xor
out
inc
or
sahf
jbe
inc
js
pop
mov
xchg
xchg
cmpl
inc
push
out
push
mov
xor
aad
mov
lret
repz
cli
shlb
push
sarl
inc
or
inc
mov
leave
in
out
movsl
mov
add
xchg
lahf
lods
cmovge
dec
les
mov
jmp
fcoms
xchg
cmpsb
push
jbe
mov
sub
sbb
cmp
into
in
sbb
jecxz
mov
or
test
sbb
pop
add
push
into
xor
mov
shrl
stc
mov
ds
sahf
cmc
jne
loopne
sbb
xorb
push
push
movsl
popa
jl
or
inc
lock
push
test
cmp
testb
ret
stc
psadbw
mov
lret
pop
lret
sbbl
repz
pop
inc
roll
sti
add
call
fdivrl
pop
dec
pop
sbb
imul
inc
outsl
in
xchg
sbb
and
stc
mov
mov
push
add
fwait
xor
cwtl
or
test
loopne
mov
mov
fistl
mov
and
out
jle
movsl
pop
xor
imulb
imul
mov
movsb
movsl
mov
out
dec
std
add
icebp
pop
push
inc
shlb
test
cmp
daa
adc
cmp
dec
mov
xchg
cld
and
jmp
aas
lock
mov
jb
adc
xor
ja
pop
jge
dec
in
xchg
dec
jmp
insb
inc
cmp
pop
ficompl
out
xchg
dec
rorb
fiaddl
mov
pop
jle
lea
cmc
xchg
int3
jmp
mov
test
mov
jbe
sub
aam
xlat
mov
xchg
xchg
scas
inc
push
jbe
enter
pop
fwait
mov
add
jb
test
add
and
jp
movsb
dec
es
hlt
ror
add
fwait
dec
pop
xchg
mov
push
xchg
test
in
push
imul
rorb
popf
ds
fwait
comiss
lods
xor
mov
fsts
jg
fldenv
popa
or
mov
mov
inc
je
jno
sbb
inc
testl
add
mov
dec
mov
jbe
inc
mov
mov
fnstsw
and
mov
or
and
xchg
int
lret
daa
aas
clc
in
dec
aas
call
cli
push
test
pop
cmp
push
orl
arpl
dec
push
andl
lcall
pop
push
or
ret
jne
bound
pop
into
scas
pushf
lret
and
xchg
fnstsw
aaa
gs
push
insl
cmp
push
mov
push
dec
add
adc
daa
push
sbb
mov
arpl
fmull
sub
daa
insl
cltd
cld
mov
clc
loope
ljmp
pop
mov
je
xchg
adc
ljmp
push
out
cmp
rcll
or
mov
stos
or
out
das
xor
lret
ds
rcrb
iret
jae
stos
subl
fs
fistpl
xchg
fimuls
das
lock
clc
push
push
sub
lock
fnsave
das
adcb
lea
das
dec
pop
sbb
sbb
mov
arpl
adc
mov
pusha
aam
test
out
mov
les
out
jae
inc
inc
adcb
mov
xchg
mov
fwait
mov
mov
std
sub
dec
dec
lcall
jnp
cmp
xor
daa
jno
mov
inc
sub
jb
and
xchg
into
decl
lret
data16
xchg
into
pop
shrl
sub
scas
out
fmull
popf
mov
sbb
mov
jns
push
js
jge
outsl
rcrb
mov
leave
movsb
ret
cmp
adc
out
ffree
push
adc
adc
push
rol
mov
hlt
ds
out
lods
sti
push
push
fucomip
lock
inc
popf
push
stos
rcl
lock
sub
mov
xchg
ret
daa
dec
test
loope
inc
mov
adc
cmpsl
maxps
sbb
push
icebp
jno
mov
mov
test
repnz
cli
rorb
xchg
or
enter
xorl
jmp
or
mov
cltd
sub
aad
and
test
xchg
std
mov
sub
fisubs
jno
popa
sarl
cmc
fsubrs
repnz
push
cmpsl
xchg
ds
cmpsb
adc
mov
rcr
jnp
push
push
sub
cltd
sub
jne
aad
aad
into
fldl
cmp
jl
sbb
pop
movw
fs
cmc
daa
scas
jl
sti
xchg
push
jbe
or
mov
add
test
sarl
push
dec
sub
fistpl
pushf
or
int3
fwait
pushl
repz
inc
mov
pushf
xchg
xor
and
lret
lahf
push
pop
sub
mov
imul
adc
add
lea
mov
sahf
push
mov
mov
pop
test
and
add
fbstp
cmp
jns
pop
add
pop
fs
pop
aaa
and
adc
mov
sbb
cmpsl
jmp
cmpsb
inc
rcll
and
imul
or
popa
pop
aaa
clc
lods
jo
pop
fsubs
mov
pop
jmp
ss
pop
addl
inc
in
test
lcall
fcmovb
lods
xchg
or
test
adc
pop
mov
xor
add
cmp
scas
lods
xchg
je
sub
mov
outsl
scas
jp
jns
int3
mov
add
lahf
leave
jg
scas
mov
popa
popf
rcll
jb
pusha
mov
sahf
mov
pop
mov
arpl
stos
cmp
mov
mov
orb
int
xchg
mov
shll
stos
add
push
or
aaa
icebp
inc
popf
and
push
fisubs
xchg
jne
inc
insl
popa
adc
data16
jns,pt
mov
adc
lret
push
xchg
sub
jns
cld
add
adc
in
inc
in
cmpb
into
inc
adc
jl
pop
out
adc
mov
inc
lahf
dec
fcom
pop
rcl
pop
das
and
jo
popa
imul
arpl
adcb
add
fbld
adc
lods
inc
xchg
out
lret
imul
repnz
mov
mov
lods
call
cltd
mov
jl
loop
mov
xchg
mov
jne
pop
int3
adc
or
aaa
sti
les
inc
or
aam
insl
in
sub
jns
in
or
fsubl
fldcw
or
adc
add
dec
ss
pop
or
nop
aad
mov
cmpsb
and
rclb
out
sub
cmp
pop
fisubrl
cmp
es
lods
pushf
mov
sub
cmp
pop
fidivrs
pop
and
pop
clc
add
enter
add
mov
mov
xor
clc
push
xor
add
pop
inc
sahf
add
testl
adc
das
sub
mov
pusha
loop
adc
push
das
push
adc
aaa
mov
jno
xor
pop
incl
jmp
bound
mov
pop
sbb
les
jno
cs
popa
aas
and
push
stc
cld
xor
pop
enter
mov
pop
dec
ds
test
xchg
rcrb
je
xchg
cmp
mov
jmp
pop
int3
rclb
dec
push
ljmp
test
fnstsw
dec
rcrl
test
ja
push
xor
mov
push
add
inc
leave
pop
sbbb
hlt
stc
scas
lret
add
push
orb
fldcw
xor
mov
aaa
pop
add
and
test
sbb
ss
imul
test
adc
push
and
mov
cmp
loop
out
inc
jmp
jbe
mov
in
je
roll
xchg
test
inc
mov
mov
xchg
dec
cmpsb
sub
sub
cmpsb
cmp
push
xchg
nop
lock
or
fcomps
sbb
mov
lahf
mov
or
sbb
out
jge
cmp
lahf
sub
push
les
inc
xchg
shlb
fstl
decb
add
sti
xlat
repz
xchg
add
cltd
pop
mov
in
rol
aam
shr
repz
int3
mov
and
xor
aam
in
movl
sti
fcompl
or
lahf
vmwrite
ds
xchg
movl
inc
add
lret
push
inc
mov
jle
adc
xchg
repnz
cld
sub
sub
stos
sbb
movsb
dec
out
pop
shl
dec
ljmp
pop
push
push
pop
add
pop
or
add
xor
cmpsb
sbb
xor
cmp
outsl
and
out
popf
adc
and
push
ss
ret
adc
add
fs
fwait
and
xchg
adc
cmp
repnz
data16
iret
jo
push
les
and
xlat
movsb
push
xchg
dec
or
adc
lds
pop
or
dec
into
pop
mov
bound
sti
cmp
mov
in
es
xor
pushaw
es
leave
int
clc
inc
dec
sahf
inc
movsb
xchg
adc
mov
inc
xor
mov
sub
ficomps
push
outsb
dec
push
dec
into
inc
jmp
add
pop
pop
loop
cld
sbb
xchg
inc
stos
jns,pt
inc
jmp
push
add
mov
int3
pop
pop
sub
cmc
xchg
dec
and
xlat
cltd
push
inc
fidivrl
addr16
lds
mov
adc
test
pop
clc
addb
push
call
andb
add
nop
adc
mov
decl
repnz
fmull
sbb
shl
jae
push
lea
aam
nop
shr
inc
sbb
mov
jns
xor
pop
shll
push
push
add
xchg
xchg
pop
cld
jnp
test
mov
sbb
push
stos
fistpll
rclb
mov
xchg
call
rol
inc
xchg
out
icebp
enter
lds
mov
push
or
adcl
push
mov
jmp
jp
mov
sub
sub
xor
ret
fdivs
cmp
dec
testl
add
pushf
pop
dec
sub
ljmp
push
inc
and
xor
sbb
icebp
lods
dec
fcmovnbe
push
hlt
ljmp
xor
movsl
push
pop
jge
or
inc
jne
ret
fwait
push
clc
push
sub
sub
xchg
inc
xlat
aas
sahf
jns
jecxz
add
das
pop
mov
jno
add
pop
fistpl
lahf
mov
and
inc
pop
and
jns
xchg
add
jne
adc
push
or
mov
xchg
iret
push
inc
stos
mov
bound
loop,pt
in
sub
out
mov
and
adc
addl
sahf
sub
daa
cmpsb
jae
add
jns
lods
daa
rcr
jmp
fcom
pop
ficomps
jmp
lods
push
lahf
or
aam
pop
scas
xor
inc
testl
out
cli
stos
in
mov
mov
mov
lahf
daa
subl
mov
call
insb
mov
dec
notl
cmc
adc
cmp
adc
push
jae
cwtl
shl
jmp
repz
cmp
aad
or
mov
movsb
xor
add
pop
ds
adc
mov
sub
or
sub
and
adc
inc
test
inc
jmp
push
lea
push
cli
ds
push
sbbl
pop
negb
cld
js
mov
push
int3
cmp
mov
ret
arpl
js
idivb
sbb
sub
gs
in
lods
mov
push
cmpsb
mov
fcomps
les
inc
divl
jae
shr
add
push
jo
jecxz
xlat
or
test
fisubrs
sbb
sbb
jmp
and
and
lock
ja
stos
or
mov
pop
divb
stos
mov
xchg
cs
dec
xchg
pop
xchg
cmpsb
rclb
pop
lock
lahf
pop
sbb
xor
mov
inc
sub
or
scas
or
pandn
jge
stc
adc
scas
sar
out
pop
fwait
lret
mull
es
mov
lahf
xchg
xchg
lahf
std
dec
xchg
repnz
sub
adc
repz
sbb
aam
lds
sbb
mov
and
sub
dec
hlt
aas
dec
in
pusha
cwtl
stos
mov
lea
sbbl
stc
mov
sarl
and
jne
and
dec
aad
mov
imul
fwait
sarb
mov
lret
push
mulb
jne
xchg
inc
jg
test
sti
bound
jmp
push
dec
andb
repnz
ljmp
add
outsl
fucomi
rcll
cmc
es
aaa
scas
fdivl
pop
nop
pushf
stos
fwait
xor
mov
lcall
xchg
xor
xchg
scas
test
aam
sti
adc
es
mulb
mov
jno
loopne
pop
push
xor
jno
jge
dec
out
xchg
movsb
das
add
pop
mov
mov
mov
sbb
out
aas
cmpl
sbb
sbb
push
ja
movsb
sbb
loopne
mov
mov
and
or
dec
cmp
in
mov
xor
mov
shll
jbe
sbb
int
mov
inc
pop
int3
mov
testl
cld
inc
adc
shll
pop
int
jo
sbb
pop
xor
int
jo
in
int
mov
sbb
mov
in
mov
xchg
out
mov
scas
aas
lods
xchg
sbb
out
cmp
jge
leave
test
int
pop
ret
test
xchg
add
xchg
imul
insb
fsubrp
dec
pop
jb
xchg
mulb
or
sti
and
out
sub
xor
adc
adc
mov
adc
jmp
out
je
je
out
add
out
cltd
jbe
in
in
or
push
xchg
jmp
fistpl
js
pop
arpl
dec
push
into
dec
jge
cmp
movsl
adc
loop
or
xor
jb
loope
push
cmp
or
bound
sahf
ret
mov
jmp
adc
lcall
xlat
cmp
std
add
lcall
iret
jle
dec
sub
cltd
cmp
jae
dec
les
xchg
pop
jno
add
enter
jmp
lea
cmp
repnz
fnstsw
cmp
sub
fs
pop
jge
mov
test
shrb
fldenv
je
gs
imul
cltd
rcll
js,pn
push
inc
shlb
sbb
pop
cwtl
scas
mov
xor
clc
and
vphsubd
lds
pushf
xor
fimull
or
decl
jp
out
fs
push
push
std
and
movsb
ljmp
in
ds
push
mov
popf
add
adc
xchg
test
add
mov
in
insl
scas
inc
gs
inc
sbb
add
cmp
lods
sbb
jb
sub
aad
jle
popf
lea
xor
push
or
push
push
adc
scas
mov
out
imul
and
pop
dec
jmp
mov
mov
jp
inc
je
dec
and
sbb
push
into
mov
insb
movb
push
je
ds
sbb
decb
daa
pushf
cmpsl
push
aas
out
data16
leave
lea
in
out
adc
push
sub
sarb
lods
xor
xchg
dec
xchg
in
pop
pop
cld
negb
fsubs
cmp
and
mov
ss
icebp
push
push
fsub
dec
lds
int
pop
xchg
push
fs
mov
cmp
scas
stos
scas
or
inc
jle
aas
shrb
cmp
arpl
or
mov
loopne
data16
xor
fnstsw
in
inc
mov
sbb
ljmp
je
cltd
adc
fwait
stc
aaa
pop
inc
jmp
mov
xorl
push
push
insb
clc
xor
dec
rcrl
xchg
sbb
leave
arpl
filds
lahf
lds
pusha
lock
jne
cmp
adc
arpl
scas
out
es
sub
aaa
mov
les
stc
lods
or
pop
ror
push
out
sub
jnp
sbb
outsl
add
mov
outsb
mov
mov
xchg
mov
addr16
jle
sbb
and
test
pop
loopne
loop
pop
lret
in
add
add
repz
mov
cmpsb
mov
rclb
mov
inc
jle
pop
movsb
sub
push
xchg
pusha
js
iret
decl
in
fistps
hlt
mov
stc
adc
sub
inc
in
dec
dec
mov
insb
xor
decb
mov
push
mov
cmp
ret
push
repz
xor
clc
pop
int
icebp
imul
test
jno
das
mov
jne
push
jg
int3
or
jo
dec
fisttpll
std
xor
push
xchg
cld
cwtl
push
sar
sub
fnstcw
mov
lea
push
inc
mov
daa
iret
orl
pop
insl
inc
or
jbe
pushl
jns
daa
repnz
sub
inc
mov
xlat
int
pusha
in
fldl
iret
push
xchg
adc
fwait
inc
lock
mov
cmp
stos
adc
sub
movsb
movsl
movsb
cmp
pushf
inc
cmpsb
mov
ss
sub
iret
loopne
insl
mov
mov
mov
lods
pop
ffree
test
mov
int
es
lods
lgdtl
fs
rep
xor
jns
and
sub
mov
out
test
mov
lds
pop
repz
shl
test
jo
add
mov
adc
stc
ljmp
mov
insb
push
gs
add
cmp
xor
mov
jns
cmp
xchg
push
jb
dec
pop
and
fnstsw
jmp
mov
mov
sti
fldt
and
adc
inc
cmp
inc
cmp
mov
mov
inc
stos
addr16
push
inc
or
sbb
clc
jo
test
sbb
scas
mov
mov
mov
mov
sbb
std
adc
mov
fucomi
xor
mov
jle
rclb
cmp
lcall
inc
mov
lcall
gs
popa
cmc
scas
pop
mov
ss
pop
sbb
fstps
xchg
add
inc
pop
int3
bnd
mov
scas
push
fildl
adc
test
lds
lcall
mov
les
push
dec
mov
lret
in
nop
xchg
xchg
push
or
ficoms
xor
lea
rcr
sub
pop
add
loopne
or
fldt
into
arpl
jb
inc
mov
fildll
push
lods
test
leave
out
movsl
out
fcoms
or
mov
hlt
scas
cmc
push
dec
lods
fwait
xchg
xor
int
push
or
stc
xor
lock
jnp
sbb
or
sahf
je
adc
call
frstor
xchg
out
arpl
dec
test
adc
push
mov
mov
sbbb
jne
cmp
adc
jmp
scas
and
add
add
stos
mov
es
push
cmp
xchg
xlat
mov
mov
filds
cmp
mov
push
imul
ss
jp
fwait
push
sti
xlat
sbb
inc
rcr
jmp
mov
and
loop
and
inc
mov
mov
mull
xchg
pop
push
in
divl
and
pushf
jns
lret
fprem1
test
and
mov
loope
fwait
jbe
xchg
inc
mov
or
xor
and
pop
xchg
fidivs
movsl
inc
push
adc
icebp
dec
inc
into
jo,pt
xchg
push
xor
mov
hlt
repnz
insl
enter
insb
xchg
xchg
dec
stos
mov
mov
popf
mov
lcall
inc
push
les
mov
inc
ret
ljmp
sbb
mov
clc
add
jo
ljmp
dec
jle
push
jg
push
loop
das
jae
data16
mov
imul
aad
out
loope
xchg
js
int3
lea
out
push
rcrb
mov
inc
lea
scas
jge
mov
and
in
mov
clc
and
repnz
pop
icebp
roll
adc
xchg
and
push
push
inc
movsl
dec
sbb
or
test
gs
outsl
jmp
and
test
fsts
mov
movsb
mov
lds
xor
xor
mov
xchg
and
mov
cmp
mov
loope
mov
rcrl
dec
lock
push
pop
pop
mov
cmc
sub
or
test
push
xchg
sbb
in
push
or
mov
scas
orl
push
in
add
push
js
fsubrs
ror
dec
dec
in
and
mov
mov
sub
and
cmp
fdivrs
or
adc
les
xor
and
or
cmp
xor
xor
sub
js
push
xor
shrl
mov
addr16
sbb
rclb
push
imulb
scas
arpl
add
push
inc
xchg
xor
loope
adc
inc
lcall
fistl
sub
shll
aad
stc
mov
test
test
xchg
movsl
push
cwtl
dec
cmp
call
dec
out
movsl
mov
movsb
les
push
notb
out
inc
lcall
aas
push
mov
sbb
hlt
scas
leave
pusha
sub
jne
data16
add
stos
fldl
fwait
rorl
cmp
jo
lret
adc
jl
mov
dec
xor
jl
dec
hlt
cmp
cmc
lahf
add
mov
bound
stc
je
mov
sub
xor
add
add
jne
and
jecxz
xlat
imul
mov
or
subb
rolb
sti
in
jo
jg
pop
cltd
shrb
scas
push
mov
shrb
imul
push
lods
or
lcall
out
lods
jl
and
clc
jmp
or
imull
cmp
lea
mov
xchg
push
inc
xchg
push
mov
push
sti
add
pop
rcrl
mov
leave
cmp
pop
lahf
or
cmp
add
lea
jo
test
dec
loope
data16
sbb
sbb
test
dec
insb
and
lea
fldcw
lret
push
sbb
mov
xlat
dec
iret
cltd
or
xchg
jg
mov
and
sbb
inc
in
or
js
jmp
clc
dec
sbb
das
out
dec
cmp
push
data16
stos
xor
fiadds
mov
xchg
lods
pop
sub
sti
lret
and
push
cmc
andl
mov
int
push
sbb
andb
enter
mov
add
pop
push
fisubrl
or
jne
divb
xchg
xor
jg
idiv
test
push
jmp
add
jge
adcl
popf
sub
mov
mov
jns
enter
adc
xchg
cmp
js
jecxz
inc
ja
leave
jmp
data16
mov
test
adc
sub
imul
out
xor
cwtl
lret
scas
pop
repnz
lea
sbb
sbb
push
jne
xor
call
mov
push
dec
mov
subl
lods
in
popl
ss
movsb
and
jae
mov
je
xchg
cwtl
sub
pop
in
sahf
xchg
dec
sbb
ljmp
pop
into
out
lret
pop
aaa
addr16
ja
sub
nop
stos
and
mov
insb
jae
loopne
js
or
hlt
adc
rorb
mov
jo
in
mov
dec
adc
lods
jbe
in
or
mov
rolb
or
int3
jge
popa
ret
mov
jb
sub
pop
shr
xchg
shrl
mov
mov
std
lahf
xor
ja
and
push
cmpsl
and
mov
cmpsb
fistl
push
jge
lcall
sbb
into
cmp
daa
xchg
div
dec
lods
test
js
outsb
imul
and
cs
xchg
pusha
xchg
sub
cmc
inc
and
pop
repz
into
fsts
dec
xor
loopne
xor
mov
je
shlb
shrl
insl
add
out
dec
jecxz
jno
daa
sti
xor
ret
mov
pop
xchg
xor
loope
mov
mov
insb
dec
in
push
scas
je
test
outsb
pop
jae
add
lock
lds
je
sbb
inc
out
inc
mov
imul
shll
lahf
push
cmp
cmp
mov
out
dec
cltd
movsl
dec
dec
mov
pusha
adc
je
cmp
push
scas
and
jnp
pop
out
jmp
insl
call
scas
mov
insb
push
rorl
lret
nop
push
hlt
mov
orb
pop
pop
mov
mov
jno
pop
pop
fisubrs
loopne
notl
xor
out
rcll
rolb
adc
imul
inc
xchg
sub
icebp
inc
mov
xor
mov
insl
aaa
mov
adc
test
xchg
mov
out
push
repz
jb
insb
je
inc
es
mov
push
lahf
or
testb
dec
gs
mov
xchg
xchg
clc
adc
jb
xchg
xchg
cli
outsb
push
sahf
push
js
cmpsb
es
cmp
mul
inc
pop
push
lds
cmp
sbb
roll
mov
jne
js
ljmp
inc
adc
fsubs
lea
fsubl
stos
xchg
ds
dec
xor
insb
inc
jbe
adc
jno
mov
scas
or
mov
dec
in
and
fldcw
xchg
pop
dec
repnz
mull
ja
push
leave
sti
loope
xorb
movsl
stos
cmpsl
ror
ret
jnp
int3
dec
sbb
pushf
sub
hlt
xchg
cmp
fldcw
xchg
or
lahf
xchg
dec
mov
sbb
and
push
push
mov
cmpl
aad
sub
mov
jle
jg
les
ds
cmp
out
or
sbb
outsl
lcall
loopne
insb
fsubs
lahf
add
mov
sbb
jg
xchg
jp
insb
mov
sbbl
es
jns
cwtl
xchg
out
xor
fs
daa
ret
and
pop
adc
rcll
lret
xchg
fwait
or
stos
fsubs
insl
movsl
clc
mov
insl
xchg
adc
ret
testl
add
fsts
mov
fsts
mov
sbbl
or
imul
xchg
leave
stc
sbb
ljmp
push
lret
inc
or
dec
pop
pop
or
imul
add
nop
mov
mov
pop
dec
pop
sbb
dec
popa
stos
fcom
xorl
xlat
mov
jno
inc
xor
push
clc
out
rcl
mov
push
and
jns
stos
mov
rcll
and
sbb
outsb
daa
stc
mov
addb
scas
fists
sub
clc
and
lret
aad
sub
ja
and
ret
push
sbb
and
sub
lcall
sbb
loopne
xchg
mov
js
iret
movaps
lock
es
in
xor
sarl
js
loope
xor
xor
mov
mov
mov
sub
dec
lahf
inc
xchg
ret
shrl
cmpsl
movsb
adc
add
mov
outsl
or
jbe
incb
sbb
cmpsl
pushf
or
repnz
and
cwtl
les
fadds
sahf
rcrl
mov
mov
and
ja
adc
or
push
mov
cmpsb
outsl
dec
outsl
into
jb
cs
add
scas
lods
push
sbb
add
ret
pop
adc
movsl
sub
xchg
sub
les
aaa
push
popa
push
adc
dec
jp
adc
inc
dec
daa
fs
add
pop
daa
cli
mov
addl
inc
push
ljmp
pop
stc
pop
lahf
bound
push
iret
cmpsb
scas
dec
movsb
stc
and
adc
call
cwtl
mov
lcall
add
inc
enter
sbb
mov
push
adc
adc
push
push
pop
mov
xor
adc
cli
popa
scas
mov
int3
movsl
sbb
inc
mov
dec
xchg
mov
outsl
lret
fistps
xchg
pop
xor
push
pop
cld
lods
push
jp
lods
xor
ss
mov
push
lea
test
ficoms
xor
test
aam
and
jecxz
add
lahf
xor
xchg
xor
push
call
movsb
jmp
pushf
mov
mov
sbb
shld
push
loopne
adc
push
xor
aam
jecxz
iret
inc
xor
jnp
sub
push
xor
addr16
mov
lods
lret
dec
iretw
dec
shll
scas
cmpsl
repz
shrb
xlat
repz
movsl
rcll
stos
dec
pop
mov
je
mov
mov
jge
sarb
inc
cli
and
cwtl
inc
adc
popf
je
sti
dec
or
add
aaa
mov
test
loopne
lock
out
fimull
repnz
pop
cmpsb
xchg
loop
data16
out
arpl
mov
mov
ds
mov
leave
xor
stos
inc
sbb
scas
push
pop
fisttpll
pop
fdivs
mov
or
rorb
out
cltd
popa
pusha
hlt
dec
lret
adc
or
push
xor
and
jmp
incb
jg
mulb
mov
adc
mov
sub
or
or
or
cmp
xlat
cltd
mov
mov
adc
cmpsb
mov
jle
maxps
loop
sub
push
or
push
jl
clc
arpl
in
sub
fisubrl
fwait
lods
rolb
xor
xchg
ficompl
mov
mov
pushf
dec
xor
gs
xchg
fdivr
sub
push
std
ret
incl
dec
xchg
add
je
pop
test
or
add
cmpsl
out
stos
inc
and
adc
jbe
mov
or
cld
cmpl
lods
clc
rcrl
xor
xchg
mov
xlat
fisubrl
int3
xchg
jne
and
xor
arpl
mov
sub
js
mov
jnp
scas
sbb
stos
mov
aam
sbb
jecxz
insb
push
xor
mov
xchg
in
addr16
or
mov
popf
mov
pushf
sahf
push
pop
mov
mov
pop
sbb
jg
imul
adcl
arpl
rcrl
shll
xchg
push
jle
mov
mov
fs
aaa
jnp
lahf
add
jnp
jecxz
or
loop
pop
hlt
sbb
sarl
arpl
xchg
sbb
jns
filds
sahf
pop
imul
das
sub
mov
inc
repnz
push
xor
ds
lea
push
fcomps
stos
mov
nop
shrl
dec
fsubl
sbb
das
jp
cmp
adc
mov
xchg
loope
sbb
dec
ds
sub
cwtl
pop
and
pop
in
push
arpl
sbb
add
mov
mov
into
mov
jmp
sub
cmp
push
decb
lods
jne
lds
cmp
xor
or
into
cli
jbe
jbe
mov
fs
rcr
sub
ret
ds
imul
lds
popf
add
pop
push
shlb
cmc
pop
add
sub
adc
mov
pop
pop
pop
les
push
insl
mov
or
loop
and
push
pop
adc
jle
jnp
lea
int
fcmovu
mov
test
or
dec
jbe
insb
adc
cmp
pop
ds
scas
sti
outsl
pusha
cmp
or
xor
push
outsl
cmp
leave
pop
cmp
js
notb
mov
mov
add
jmp
jne
je
loope
cs
fucomp
pop
jns
dec
lcall
data16
insl
cmp
fiaddl
or
cmp
lret
xor
es
sub
sahf
outsl
cmp
mov
cmp
mov
cmp
push
enter
dec
dec
mov
inc
xor
subl
mov
mov
out
add
adc
jg
call
or
xor
mov
cwtl
lds
and
nop
and
pop
jge
jge
and
mov
call
push
sbb
imul
jge
lock
sub
repnz
insb
lcall
inc
sbb
daa
sub
ja
inc
pop
out
xor
pop
sbb
xchg
inc
loope
mov
mov
movsw
jno
sbb
lcall
stc
in
outsl
and
mov
out
add
push
mov
clc
inc
inc
xor
out
sar
mov
jecxz
stc
std
std
and
and
sbbl
jge
inc
pop
sbb
adc
xor
dec
add
mov
jns
jp
xchg
sub
outsl
lret
mov
xchg
ret
out
and
mov
test
pop
inc
fistl
popl
fs
cmp
xor
gs
scas
and
inc
mov
jp
or
into
outsl
jae
int
xchg
stos
dec
push
imul
ja
push
pop
push
pushf
loope
mov
stos
dec
imul
sbb
lock
xor
mov
fstps
leave
daa
mov
and
scas
mov
hlt
dec
mov
cmp
push
push
xchg
pusha
xchg
adc
test
cmpsb
loope
inc
loop
and
jl
insl
cwtl
cmp
push
xchg
stc
aas
xchg
sub
push
data16
jno
testb
sub
ror
lock
or
jb
pop
loop
dec
sub
adc
mov
arpl
lret
arpl
mov
ds
sbb
sti
and
push
out
mov
rcr
sub
test
push
pop
mov
add
cs
hlt
adc
lret
push
sub
jle
push
cwtl
jle
fsts
test
addl
dec
push
push
or
mov
mov
jg
out
faddl
xor
jb
ftst
test
shl
scas
cs
aam
sbb
lods
loop
jno
cmp
orl
cli
adc
loopne
mov
fsubl
sub
repz
insl
gs
js
mov
in
push
pop
sbb
inc
add
dec
pop
inc
lods
push
cltd
repnz
or
iret
push
fs
or
insl
leave
enter
lret
and
jge
into
ljmp
outsb
cmp
rorb
lret
dec
fbld
add
cmp
inc
sub
pop
je
testb
ljmp
movsb
adc
les
fs
xor
test
jl
les
sub
adc
sbb
mov
push
fwait
mov
jae
adc
sbb
into
sbb
nop
mov
fwait
pushf
sarl
push
rcr
or
test
inc
inc
inc
test
outsl
arpl
in
mov
cltd
rcrb
lock
inc
jbe
sbb
clc
sbb
iret
cmp
lds
xchg
sbb
sbbb
jb
push
loopne
dec
cwtl
fwait
out
cwtl
out
cmpsl
decb
mov
shrb
mov
push
lods
cli
jns
inc
loope
mov
in
jno
aad
sub
mov
cltd
movsl
cmpsb
dec
cmp
sub
pop
xchg
insl
sub
out
mov
push
sub
mov
pushf
scas
xchg
inc
jp
outsb
mulps
push
arpl
outsl
dec
cmpsl
test
js
jb
mov
lods
jne
cs
jnp
push
iret
mov
mov
jae
xchg
hlt
inc
insb
addr16
sub
mul
push
repnz
pop
lds
cmp
dec
and
push
and
call
int
aas
jp
fistpll
aas
jb
add
aas
pop
push
sub
and
xchg
inc
sbb
movsb
sarb
out
add
sub
aam
lret
jg
mov
adc
and
adc
cli
mov
rolb
mov
mov
cltd
jno
das
mov
jb
mov
fimull
je
xor
dec
xchg
or
in
mov
push
xchg
in
adc
popa
push
imul
lret
mov
add
pop
mov
mov
cmp
xchg
shll
pop
dec
fs
mov
add
repnz
stos
test
jbe
sbb
jns
cmp
icebp
lods
xchg
ficompl
and
add
das
dec
sub
sub
push
addr16
push
bound
or
add
mov
aaa
jne
push
sub
sub
mov
sub
inc
sbb
push
dec
test
inc
adc
gs
sahf
lea
repnz
inc
xor
mov
mov
mov
outsl
lods
mov
lret
popf
inc
arpl
jle
pop
flds
adc
aad
loope
sub
push
fs
pop
pop
push
popa
mov
push
mov
sub
cmp
clc
mov
adc
pusha
jns
adc
and
daa
jo
in
leave
fsub
shll
jno
dec
or
sub
inc
adc
out
movsb
jg
dec
mov
push
mov
loop
clc
movsl
xchg
mov
add
out
xchg
scas
dec
pop
and
push
loop
bound
stos
cmpxchg
aaa
clc
mov
cmp
out
ret
sahf
insb
jg
movsb
jp
dec
jno
out
out
cmp
jne
xchg
je
out
jl
or
scas
ret
mov
jp
daa
mov
mov
pop
and
xchg
aas
iret
xchg
in
xor
test
adc
icebp
movsl
mov
rcrb
mov
fstpt
pop
fisubl
jb
in
cmpsl
jnp
xor
add
mov
scas
sbb
std
inc
xchg
pushf
es
cmpsl
repnz
outsb
xor
or
stos
mov
adc
aad
in
cs
scas
aad
lea
in
iret
xchg
jo
push
cmovl
aas
test
les
jp
jnp
fwait
add
pop
mov
jmp
pop
push
je
cwtl
inc
negl
and
aam
iret
scas
adc
mov
and
icebp
xor
push
sub
and
cltd
iret
adc
lods
mov
ja
and
nop
sub
imul
push
or
loope
dec
mov
pop
xor
mov
je
arpl
adcl
fnstcw
popa
cmp
push
les
xor
test
or
and
xchg
adc
mov
dec
xor
mov
xchg
and
pusha
inc
and
xchg
mov
sbb
icebp
fmuls
rcr
pusha
aad
dec
xlat
stos
jmp
fs
clc
pushf
sti
mov
dec
fs
imul
and
notb
cmp
jae
enter
sub
add
data16
ljmp
popa
addr16
xchg
clc
mov
loope
sbb
push
fadds
sti
push
mov
cmpsb
cs
dec
inc
cli
int3
xchg
outsl
cmp
jne
sbb
daa
pop
sub
es
into
sbb
adc
lcall
xchg
push
imul
sbb
sub
pop
fwait
mov
addl
inc
inc
scas
xor
push
scas
jmp
and
loop
fcomip
jp
movl
inc
jne
sbbl
pop
sbb
out
xchg
cmp
push
sbb
inc
inc
mov
js
into
xor
xor
pop
add
cmp
adc
testl
inc
inc
ret
icebp
pop
mov
or
pop
push
sub
rol
lret
and
sub
jg
and
test
movsl
leave
adc
sub
int
fdivrs
ret
mov
xlat
cmc
pop
ss
hlt
les
dec
insl
adc
mov
push
bound
imul
outsb
inc
sbb
jnp
jo
out
pop
in
or
inc
loope
jo
and
shll
jo
sti
fs
or
test
hlt
mov
filds
or
loop
cmc
or
sbb
cmc
mov
add
lcall
out
pop
cld
or
add
cmpsl
xchg
or
movsb
out
jne
leave
lahf
iret
cmpsl
jno
std
lss
jmp
jp
js
ror
ds
test
arpl
xlat
mov
jnp
and
pop
fs
pop
shrd
dec
add
aad
dec
outsl
cltd
sbb
les
dec
loopne
iret
test
mov
mov
fisttps
aam
int
add
outsb
inc
lods
sbb
lret
jnp
jo
xchg
out
cmpsb
mov
in
mov
cmpsb
mov
jle
jge
and
inc
mov
scas
test
arpl
add
push
lahf
mov
or
pop
pop
xor
inc
ret
das
cmp
jae
ret
xchg
mov
sub
leave
int
inc
pop
push
add
sahf
cmp
xchg
call
cli
xor
push
hlt
pop
sbb
xchg
repnz
push
outsb
pop
xchg
mulb
jge
mov
vpsrld
in
jno
hlt
outsb
mov
jle
lods
adc
add
and
in
xchg
xchg
cmp
xorb
jp
push
mov
mov
jge
pop
xorb
das
pop
mov
sbb
jo
and
stc
sbb
aam
add
sub
jae
sbb
cmpsb
jp
mov
inc
lea
push
aaa
dec
sub
and
pop
cmp
mov
mov
shll
popa
cmp
or
test
adc
mov
push
icebp
jb
enter
addr16
jb
int3
xchg
pop
outsl
test
cld
inc
lcall
push
dec
adc
cmp
mov
push
daa
in
sbb
incb
aas
or
cmp
lcall
inc
pushf
mov
lds
xchg
inc
xchg
sub
jnp
mov
mov
mov
jp
js
xchg
add
inc
adc
dec
cmpsl
adc
jbe
mov
sbb
cld
call
scas
sahf
mov
xor
movsl
push
jbe
mov
insb
les
push
adc
bound
clc
xchg
push
pop
jo
out
nop
dec
test
xor
in
mov
pop
pushf
inc
dec
daa
out
icebp
je
pop
add
sub
ret
or
fdivp
or
not
outsl
inc
shlb
das
pop
inc
push
ljmp
mov
mov
sub
mov
icebp
jae
cmp
and
and
mov
mov
cmpsb
les
pop
cs
lcall
out
cld
dec
xor
dec
mov
jns
fs
mov
add
ffreep
ret
dec
cwtl
adc
stc
dec
faddp
dec
jmp
ja
test
add
pop
and
inc
xchg
or
sub
lahf
add
mov
aam
pushf
xor
dec
jnp
dec
jae
inc
call
sub
mov
and
iret
cmp
cmc
cwtl
repz
popf
cmp
outsb
cli
daa
add
xchg
jns
sub
xchg
test
int3
mov
mov
movsb
and
lahf
fnsave
mov
aaa
cwtl
in
fiadds
xchg
fwait
push
and
cmp
lods
inc
loope
jge
xchg
and
cmp
add
sbb
ljmp
test
pop
xchg
fdivs
dec
ret
dec
rclb
imul
mov
sub
aaa
sub
loopne
push
jne
cmp
lea
pop
sbb
test
ret
mov
push
inc
js
and
outsb
xchg
push
jae
dec
in
adc
in
fisubl
repz
jbe
mov
test
iret
mov
lahf
jbe
stos
insb
rorl
mov
push
fldenv
mov
aad
repz
inc
scas
nop
lret
mov
dec
xchg
sub
leave
cmpsb
js
mov
jl
popf
ror
lds
sub
jo
das
and
pushf
push
int
mov
sub
nop
test
out
loop
xchg
pop
sbb
cltd
add
cmp
sub
or
in
subb
inc
aaa
out
xchg
mov
movsl
lcall
inc
lahf
cli
test
lods
mov
movl
sbb
xor
push
push
add
mov
xor
in
xchg
aas
into
xchg
popf
adc
adc
mov
and
sbb
cli
push
aas
or
add
xor
xchg
mov
pop
aaa
pop
pop
add
mov
fcmovne
adc
dec
mov
cld
pop
sbb
scas
repnz
xor
xor
loop
and
jnp
dec
stos
or
adc
jnp
aam
stc
jl
xorb
je
ja
imul
xor
out
and
xchg
jg
rolb
ds
mov
fldenv
add
and
mov
rcl
addl
fimuls
loop
movsl
hlt
push
mov
mov
cmp
add
js
mov
pop
daa
fistps
ljmp
mov
pop
add
psubw
jmp
out
pop
shrb
or
pop
xor
insl
jne
ds
stc
mov
imul
lcall
pop
pushf
sub
adc
lods
hlt
jb
ret
or
jnp
leave
aad
outsl
dec
mov
mov
push
cmc
dec
stos
mov
jle
addr16
mov
inc
dec
adc
jmp
daa
mov
ja
xor
xor
stc
scas
aad
pop
cmc
test
mov
popa
mov
fstpl
jne
jbe
add
mov
pop
dec
xchg
mov
sti
or
jmp
jl
add
push
push
pop
into
inc
pusha
fs
fsub
aaa
cmpl
pop
push
les
and
mov
push
shr
cmc
stos
jne
notb
push
sub
repnz
xor
cmc
cs
lds
adc
into
data16
jecxz
out
aaa
hlt
popf
clc
adc
sahf
mov
das
fisubrs
push
add
xor
xor
xchg
xchg
ja
fcompl
incl
inc
mov
sbb
and
or
insb
pop
stc
cmp
xor
xor
mov
stc
mov
rcll
jno
dec
inc
fidivrl
sbb
dec
lods
inc
jmp
jle
pop
mov
dec
int3
or
sti
xor
mov
addr16
fs
insl
aam
int3
lahf
xchg
jl
aas
inc
jbe
mov
fwait
or
ret
leave
adc
and
aaa
mov
fdiv
jmp
sbb
pop
rorl
mov
inc
fld
es
into
loope
cld
scas
cmp
fnstsw
cmp
dec
rorb
xchg
lock
loop
jl
imul
ljmp
in
pop
push
dec
inc
push
dec
or
stos
out
jae
fldenv
mov
jmp
cmpsb
jecxz
dec
add
jmp
std
idivb
and
pop
mov
mov
fadds
in
imul
mov
and
mov
cmp
and
xor
or
xchg
xchg
jp
pop
mov
insb
insl
sbb
dec
std
loope
pop
aad
push
and
mov
fwait
pop
aaa
popl
or
push
sbb
in
xor
xlat
pop
fcoml
rcrb
and
xor
inc
cmpl
mov
cmp
js
lea
mul
mov
loopne
gs
pop
adc
push
data16
les
cld
inc
push
or
inc
xor
dec
xor
addr16
and
sarl
imul
add
jecxz
sbb
xor
ss
mov
sbb
jo
add
cmp
das
sbb
fisubl
xor
mov
sbb
iret
in
out
push
mov
or
adc
scas
ret
cltd
mov
int
inc
push
cmpsl
inc
mov
rep
cmp
push
in
inc
sahf
push
mov
cmp
cmp
inc
fcmovnu
stc
shl
jecxz
ljmp
sub
pop
sbbl
jbe
add
lea
mov
out
movl
and
lret
jl
mov
orb
or
mov
mov
cmc
push
pop
fisubl
mov
mov
inc
insl
inc
cmp
cmp
test
ror
lds
inc
add
lods
adc
int
mov
mov
idivl
aam
add
or
outsl
xchg
and
xchg
jbe
adc
ss
rcrb
outsl
inc
inc
xchg
loopne
pop
and
pop
int3
add
mov
adc
mov
iret
and
and
cmp
adc
inc
and
insb
xchg
in
neg
adc
idivb
xchg
cmp
cmp
imul
insb
push
jle
stos
xchg
fdivrp
fidivs
fdivrs
push
fadds
stos
inc
addr16
fldcw
rcll
outsb
pop
xlat
xlat
cmpsl
shlb
fistpll
sbb
lret
push
lret
lahf
or
frstor
sbb
mov
and
sub
mov
mov
daa
call
mov
pop
jg
xor
lea
imul
rcll
jbe
sbb
mov
hlt
add
xchg
bound
inc
cmp
cmp
movsb
or
mov
sahf
inc
fnstcw
out
sub
push
jmp
jg
jg
adc
lods
mov
out
lods
scas
lcall
mov
and
sahf
adc
jae
cmp
fadds
cltd
mov
xchg
adc
rcrl
inc
sbb
adc
loope
xorb
adc
xchg
and
adc
icebp
or
and
movsl
fisubl
aas
sbb
iret
std
pop
inc
scas
addr16
inc
hlt
dec
push
lcall
jbe
mov
sahf
imul
lods
inc
sub
je
test
daa
cmp
repz
push
xlat
jns
jl
ret
loope
or
mov
pop
data16
sbb
sbb
sbb
mov
rcl
cmp
cwtl
bound
fcompl
mov
lods
call
mov
cmpsl
xor
sti
test
clc
ja
imul
push
hlt
or
adcb
das
mov
outsb
jbe
adc
add
mov
lods
leave
mov
cmp
in
or
daa
pusha
mov
imul
mov
insb
adc
xor
nop
stc
xor
pop
out
xor
lds
in
imul
fsqrt
mov
mov
cmp
inc
mov
mov
dec
inc
xchg
inc
rcrl
xlat
ljmp
iret
inc
stos
test
sbb
and
xchg
fsubrl
mov
mov
lcall
aaa
mov
inc
shll
sub
hlt
pop
dec
sahf
pop
repnz
mov
mov
fwait
mov
pop
jne
pop
aaa
inc
mov
inc
cmp
jo
loope
aas
sub
imul
add
mov
push
call
loopne
xor
popf
and
xchg
inc
push
jmp
pop
popa
dec
and
mov
out
rcrl
sbb
rcll
xor
mov
jo
xchg
sbb
and
shlb
faddp
fnstcw
orl
xchg
sarl
push
test
jbe
mov
out
xchg
push
les
lahf
and
lods
or
popf
orb
adc
and
xchg
mov
in
sbb
mov
mov
lret
xchg
push
sti
pop
into
xchg
mov
cltd
dec
lods
push
lret
xor
or
arpl
ss
stc
mov
jl
repz
mov
fs
pop
add
jo
ljmp
jmp
in
jmp
mov
std
sarb
cmp
arpl
push
dec
inc
fidivrl
mov
xchg
cli
lock
je
sbb
mulb
daa
ret
lcall
and
push
sbb
pop
stc
or
test
or
repnz
sub
in
mov
mov
rclb
dec
xchg
push
or
dec
jge
inc
mov
and
shr
lcall
iret
sbb
mov
sub
xchg
ffree
sbb
xchg
push
xchg
xchg
or
dec
jne
sbb
cs
add
adc
dec
jns
mov
pop
or
add
ss
sahf
bound
and
inc
cmp
or
sti
xor
xchg
inc
enter
sbb
sti
dec
roll
int
ja
mov
nop
add
mov
inc
push
lret
cltd
push
imul
daa
jo
daa
pop
sbb
cli
loope
sub
xchg
cld
lahf
mov
mov
cmp
cmp
adc
movl
xlat
mov
or
adc
or
insl
fdivl
sub
fcmovu
testb
jne
push
xchg
ljmp
shll
adcb
jno
or
inc
fstl
fmuls
outsl
dec
xor
xor
cmp
mov
mov
mov
pop
inc
popf
ljmp
lods
bndstx
cmp
mov
mov
jns
mov
sub
clc
stos
cmpsl
and
sub
inc
mov
imul
imul
out
mov
dec
jno
and
cmp
jmp
sbb
stos
mov
loopne
jmp
mov
ja
adc
lea
scas
dec
sahf
and
inc
sub
out
andl
andl
mov
add
pop
es
cld
xchg
loope
stos
cmp
and
mov
gs
pushf
enter
shr
mov
lret
lods
push
insb
mov
mov
std
and
add
int
fisttpll
orl
mov
scas
nop
call
test
ret
loope
es
push
jle
imul
sbb
add
xor
jmp
call
cmp
cmp
fwait
dec
push
dec
dec
gs
lea
xchg
and
pop
test
pop
add
or
hlt
mov
xlat
and
in
movsb
movsl
es
insb
inc
mov
jecxz
mov
adc
pop
sbb
out
push
jle
or
cmpsl
insl
mov
scas
adc
pop
out
and
jne
cmp
outsb
dec
jb
int3
mov
and
mov
fwait
sub
push
inc
cld
dec
popa
sbb
sbb
loope
inc
cs
jne
lods
cwtl
pop
sbb
inc
xchg
iret
xor
xchg
mov
inc
push
imul
adc
jge
aaa
sub
lods
int
int3
movsl
fwait
add
jmp
inc
mov
cmp
ss
movsb
inc
ret
cmc
add
jne
outsl
lret
push
push
daa
orl
adc
lods
aas
jp
cwtl
push
cmp
or
mov
mov
fcmovbe
fsubr
mov
into
jo
xchg
mov
pop
mov
notb
or
rcrb
aaa
jl
mov
ret
popf
xor
jbe
fiadds
enter
or
mov
mov
sbb
jp
ljmp
push
stc
jo
or
jp
cld
jae
test
jmp
test
or
pop
xor
aaa
cmp
sub
in
test
inc
test
repz
push
cld
or
push
adc
out
mov
sub
and
jnp
cmp
jbe
jb
cmp
sub
iret
adc
mov
icebp
or
jmp
push
mov
pusha
mov
xchg
or
dec
fwait
es
mov
lret
cmp
xor
mov
xchg
sbb
adc
xchg
jae
je
js
int3
out
xor
andl
pop
cmpsb
movsb
jge
out
push
push
jle
xchg
es
xchg
or
mov
dec
add
scas
insl
stos
mov
cmpsb
push
dec
jge
and
push
jl
adc
test
adc
das
dec
ja
scas
xor
mov
mov
outsl
lods
dec
pop
push
bound
jl
mov
jge
iret
ret
icebp
aad
cmp
push
push
lret
inc
mov
dec
push
sub
out
cmp
sub
jo
xchg
jae
stc
pop
mov
sub
inc
fwait
jbe
int3
sub
mov
sbb
mov
lcall
mov
dec
cltd
xchg
js
mov
cwtd
fcomps
xchg
loop
jo
test
sub
adc
xchg
test
je
test
jbe
fnstenv
repz
cmpsb
test
fxtract
sbb
dec
loopne
fs
repnz
fwait
mov
stos
sub
pusha
outsl
scas
in
mov
xchg
sbb
cltd
leave
mov
inc
and
hlt
rcr
push
popf
stos
sbb
pop
inc
arpl
mov
outsl
pusha
push
sub
fistps
push
xchg
xor
aad
cmp
out
adc
clc
lcall
in
mov
daa
xor
mov
jo
cli
and
mov
push
stos
pop
into
cmpb
jno
fwait
mov
scas
and
add
jns
mov
jl
push
les
pop
popa
cs
dec
loopne
xor
push
cmp
repnz
cmp
adc
movsb
push
or
das
lahf
cs
dec
aad
push
xchg
mov
sbb
mov
dec
into
movsb
cs
loope
xor
pop
cld
mov
loopne
cmp
js
dec
data16
push
pop
icebp
xor
pop
scas
xchg
popa
loopne
cmp
mov
xchg
iret
dec
mov
jmp
inc
sahf
lret
andb
jp
jae
movsl
push
shll
aas
fistl
add
mov
sub
jmp
jecxz
ss
xchg
sub
pop
push
scas
adc
sbb
test
ret
push
lahf
insb
adc
outsl
fdivrs
jnp
inc
mov
inc
push
and
repnz
inc
pop
xlat
mov
push
aaa
aam
push
loop
ret
popf
adc
and
cs
jecxz
rcll
inc
xchg
sti
out
xchg
popf
push
loope,pt
mov
push
call
add
mov
into
bound
lret
mov
aas
lcall
movsb
aam
pop
test
xor
jo
std
xchg
fmulp
jb
xchg
or
and
xor
dec
jg
stos
or
cld
and
mov
arpl
ret
jns
adc
std
sti
rclb
andl
push
dec
addl
cs
ret
add
jns
cld
repz
ja
out
popf
dec
jmp
arpl
mov
xchg
mov
mov
mov
add
push
arpl
cli
jns
imulb
mov
add
dec
and
inc
pop
mov
mov
pushf
sti
add
jo
and
test
and
adc
pop
pop
inc
popw
es
imul
ljmp
sbbl
aaa
push
adc
or
push
pop
ljmp
add
sub
add
ja
stos
test
xchg
stos
rcrl
scas
insl
push
lret
xlat
daa
test
cmp
or
sub
push
adc
out
shll
jnp
mov
add
pop
adc
mov
into
adc
jne
popf
xor
add
mov
and
imul
jnp
and
xchg
or
imulb
inc
inc
imul
add
push
sub
dec
mov
dec
call
jbe
sbb
pusha
add
pop
mov
add
pop
mov
mov
push
xchg
lret
jl
xchg
cmp
inc
shrl
repz
dec
mov
adc
popa
xchg
pop
lahf
sub
ret
mov
push
rorl
rcrb
jb
mov
clc
je
inc
xchg
fs
shlb
mov
xchg
ret
xchg
sbb
mov
and
adc
sub
loopne
test
push
in
pop
dec
out
adc
sti
xchg
add
mov
xor
out
mov
aaa
jo
fldenv
movsl
stos
ds
push
das
adcb
shll
popa
je
mov
movsl
outsb
lods
mov
dec
movsl
sbb
and
dec
push
test
mov
xchg
adc
test
cs
sub
mov
mov
call
sub
cmp
dec
cmpsb
sahf
xchg
insl
div
shll
repz
mov
xchg
incb
movsb
jg
rcrl
inc
xor
std
rorb
cmp
movsb
add
cmpb
or
sbb
xor
jge
mov
xchg
ds
mov
scas
add
jmp
and
stos
mov
mov
fsubrl
cli
stos
clc
jae
inc
int3
in
push
icebp
inc
test
out
xchg
cmc
push
aaa
inc
pop
icebp
pop
cs
movsb
bound
js
jbe
push
lahf
push
or
rcll
data16
cmp
xor
incl
ret
jp
inc
and
arpl
mov
pop
cmpsl
or
je
fistpll
push
sub
sub
jle
xchg
jecxz
js
test
into
idivl
imul
leave
in
xor
sbb
outsl
out
inc
mov
jbe
out
cmp
jbe
mov
pop
rcl
fstps
in
ds
loope,pt
jo
fdivrl
in
cld
movsl
push
jo
lods
ja
repnz
out
cmp
or
cmpsl
cltd
inc
stos
int
fs
fs
fdiv
imul
jp
jmp
mov
mov
mov
jns
push
sbb
ja
dec
jae
mov
pop
pop
movsl
mov
jl
jecxz
sbbb
pop
das
push
push
mov
xlat
ffreep
rolb
xor
push
and
cmp
inc
cmp
punpckhbw
lahf
in
xor
mov
scas
shrl
jp
inc
dec
subl
fidivrs
jecxz
pop
jl
xchg
pop
shr
push
ljmp
fisubrs
or
bound
push
cmp
aad
mov
in
stos
inc
decl
jno
shll
jbe
push
push
es
sub
sub
mov
incb
ret
repnz
mov
in
jns
test
jae
ficompl
movsl
sub
test
or
in
mov
in
inc
pusha
dec
fisttpll
pop
fstps
or
push
push
loopne
repnz
mov
loop
push
daa
mov
xchg
lret
leave
loopne
or
lock
jmp
pop
test
ret
mov
aas
ret
jmp
dec
lcall
jg
notb
loopne
push
cmp
jae
jg
push
jo
rorl
jp
jns
dec
mov
insb
dec
sub
xchg
mov
testl
sbb
lcall
jecxz
dec
jg
scas
pop
sub
popf
or
fs
insl
and
scas
stc
xor
movb
dec
inc
add
add
mov
fstl
push
enter
fcoml
nop
push
test
sub
cld
inc
fcoms
gs
aad
jmp
pop
test
mov
dec
xchg
mov
flds
cmpb
addr16
jp,pn
sub
and
adc
sub
xchg
idivl
ret
sub
lods
aas
xor
jge
dec
stos
sbb
fs
mov
inc
aas
mov
fnstsw
jno
xor
add
add
mov
ds
sub
fpatan
and
pop
push
pop
enter
or
test
xchg
loopne
mov
cs
loop
dec
shll
outsb
jp,pn
and
mov
setno
dec
lret
stos
push
mov
ret
xchg
ja
adc
nop
sahf
fldl
or
mov
and
add
push
xchg
xchg
ret
adc
xor
mov
inc
orb
jne
mov
iret
in
hlt
push
xor
mov
xchg
mov
pop
adc
jmp
cld
cmp
xchg
adc
jns
mov
xchg
dec
lcall
mov
mov
push
xchg
imul
aaa
jo
or
mov
mov
mov
ror
inc
inc
and
inc
dec
and
mov
flds
imul
inc
add
pushaw
sub
aaa
xchg
sbb
dec
mov
and
stos
sub
pop
movsb
das
push
movsb
stos
movsl
mov
xchg
idivl
adc
sub
or
push
sbb
mov
inc
lock
icebp
dec
push
mov
loop
arpl
fst
adc
fidivl
rcrb
adc
sbb
cs
in
and
mov
je
lds
mov
jge
pop
inc
push
and
js
notb
inc
fbld
ret
cmc
and
or
mov
mov
push
mov
clc
adc
in
out
test
sbb
sub
xlat
xchg
mov
aam
add
lahf
sbb
in
cmp
pop
push
xchg
movsb
xchg
imul
lea
fwait
out
pop
mov
jne
push
call
sub
clc
adc
mov
movsl
pop
jae
in
ljmp
aad
xchg
push
imul
inc
inc
sti
pop
jecxz
hlt
les
xchg
lock
int3
sub
inc
xchg
xchg
mov
mov
mov
jmp
jb
inc
mov
divb
sbb
shll
sub
pusha
insb
cmpsb
icebp
sbb
or
adc
or
mov
and
sbb
push
adc
cwtl
xor
mov
adc
mov
out
std
pop
sub
leave
mov
inc
xchg
mov
daa
mov
icebp
fs
rcrb
imul
das
push
rclb
inc
add
neg
jecxz
seta
or
adc
xor
dec
in
fists
aaa
js
fisttpl
shll
fisubl
je
lea
in
jp
sub
and
call
lods
xor
sbb
mov
push
outsl
push
sarl
fstpt
inc
dec
xchg
repnz
pop
stc
out
std
call
mov
sbb
das
push
adc
jns
arpl
mov
push
mov
xor
dec
out
cmp
sub
test
mov
push
pop
jnp
xlat
push
mov
jge
adc
call
mov
push
jl
out
dec
jecxz
pusha
sub
imull
aaa
std
les
cmp
mov
ss
dec
scas
sti
xor
test
jecxz
hlt
sub
xor
dec
pop
fs
lds
leave
sub
fsubrl
jl
idiv
jmp
sub
or
mov
add
iret
or
xlat
adc
mov
hlt
mov
ret
rolb
inc
movsb
sahf
call
das
popa
insb
sbb
adc
push
xchg
pop
mov
pop
fcompl
loop
scas
fdivp
xchg
popf
add
mov
inc
gs
fnsave
push
lds
dec
xchg
in
iret
jns
adc
lds
ss
or
cld
sbb
push
mov
add
sub
sub
mov
adc
push
push
mov
push
inc
cmp
rcll
sub
sbb
testb
ret
call
xchg
or
outsb
xchg
jb
imul
cmp
jno
cli
xchg
adc
ss
sub
fdivrs
mov
xchg
call
inc
cmc
lcall
jg
frstor
and
add
test
test
lret
es
ret
outsb
outsb
jo
outsb
outsl
push
sahf
dec
push
mov
mov
lea
fsubrs
daa
dec
push
loopne
xchg
aad
or
lcall
outsb
cmp
xchg
mov
sbb
xchg
insb
jns
ds
pushf
outsl
lea
xchg
pop
ljmp
mov
jb
adcl
and
cmp
mov
mov
xor
mov
inc
sbb
mov
mov
imul
pop
push
mov
popa
cmc
sbb
xchg
cmp
mov
sub
sbb
fdiv
movsb
stc
pop
lods
pop
inc
mov
jno
rclb
xchg
mov
test
ja
les
jmp
or
je
pop
andb
xlat
push
push
test
lahf
xorb
andl
mov
adc
fnsave
dec
nop
jge
sahf
je
mov
addr16
pop
push
lret
jmp
xor
imul
ljmp
push
push
inc
and
push
mov
stos
mov
mov
call
adc
mov
data16
cs
mov
mov
out
aaa
insl
jg
inc
imul
jecxz
sar
mov
lret
dec
sub
or
inc
inc
inc
dec
div
sub
inc
sbb
xchg
cmp
fcomi
dec
loope
cmp
push
dec
mov
xlat
dec
or
addr16
lcall
jb
dec
jle
mov
lods
std
andps
aas
jae
pop
sub
add
aaa
rcll
cmpsb
adc
ljmp
pop
nop
pop
dec
ficompl
mov
or
mov
push
int
mov
ret
leave
add
daa
sub
sbb
cmp
and
xor
bound
sbb
or
mov
rcrb
inc
mov
jle
push
pop
adc
push
rorb
mov
aam
xchg
and
mov
enterw
mov
xor
or
into
jae
pop
pop
shll
scas
ret
jnp
xchg
sub
outsb
jg
fstl
fnsave
ds
inc
clc
push
shl
jg
iret
push
push
push
scas
push
jnp
and
sub
push
cmp
pop
cli
sbbl
rclb
pop
pop
imul
xor
std
sbb
and
mov
mov
push
clc
insb
pop
stc
shr
inc
ljmp
das
cmp
scas
jbe
out
jp
sbb
in
dec
scas
inc
sbb
ret
mov
out
das
add
shrb
not
stos
inc
push
push
es
xor
pop
xchg
hlt
jno
repz
fmull
cs
lods
test
out
in
jno
mov
pop
xor
jbe
cmp
xchg
sbb
fs
scas
cld
data16
out
fisubrl
mov
add
das
js
mov
mov
andb
add
xor
jg
out
test
mov
fsubrl
mov
mov
adc
out
cmp
repz
cs
cld
sbb
xchg
das
pushf
jecxz
scas
stos
out
pop
lret
push
xchg
movsl
daa
and
jecxz
lock
jg
lcall
cmp
mov
mov
lret
aam
into
sbb
daa
xchg
pop
sub
mov
cmpsb
jmp
push
dec
push
pop
adc
mov
xchg
push
arpl
in
lcall
add
addb
or
jo
jnp
gs
or
loopne
out
mov
test
movzbl
arpl
mov
mov
test
fdiv
and
mov
loope
in
mov
push
mov
xchg
xchg
and
lods
inc
add
cwtl
sub
xor
push
fmull
sbb
aas
scas
adc
xchg
hlt
mov
push
icebp
pop
fsts
cli
add
cld
jg
jnp
repz
or
pop
imul
adc
push
xor
sbb
rcrb
mov
dec
movsb
jp
aas
adc
cmp
arpl
imul
mov
lods
sahf
lock
mov
enter
jae
ss
push
lcall
stos
pusha
jge
cmpsb
pop
ret
jo
fiadds
addr16
jno
push
loopne
sbb
pop
repnz
dec
sub
stos
pushf
scas
test
mov
cmc
add
add
aad
test
movsl
pushf
xor
fidivrl
jnp
sbb
push
movsb
push
les
xor
adc
mov
rclb
inc
pop
orl
incl
lock
imul
in
icebp
rolb
mov
push
jae
jns
in
fstl
or
enter
out
inc
cmpsb
jno
jl
sbb
mov
sbb
sbb
fcmove
mov
xchg
sub
inc
xchg
xchg
es
push
lock
pop
fists
inc
push
add
sbb
ret
sbb
popa
xor
in
add
mov
inc
cli
shr
add
insl
add
movl
cmp
outsl
pop
mov
mov
popa
repnz
or
xchg
mov
fucomi
shll
sub
sub
cmp
mov
sti
pop
aad
sbb
loopne
cwtl
andb
inc
push
sub
in
stos
add
rep
sub
cmp
rcrl
out
jge
cmp
sub
movl
pop
xchg
scas
in
or
in
add
mov
cmp
cwtl
aam
test
ss
push
fwait
cmp
lret
xor
pop
movsl
cli
and
int
jo
xor
mov
or
cmp
inc
mov
lock
movsl
imul
in
dec
sub
inc
pop
aaa
push
dec
in
pushf
sbb
into
push
movsl
aas
gs
insb
or
bound
push
adc
ds
cmp
xor
cld
sbb
push
and
lahf
or
xchg
frstor
sub
pop
movsb
jne
mov
cmp
pop
in
ds
jmp
mov
int3
out
inc
js
in
mov
mov
call
jns
adc
cmp
adc
cmc
or
and
rcr
movsl
mov
outsb
mov
mov
rorb
lea
xlat
jnp
and
cwtl
shlb
sbb
push
push
pop
mov
in
jmp
push
movsl
into
sbb
cld
sub
and
out
lods
into
insb
inc
mov
addr16
addr16
jns
fdivs
lahf
and
imul
mov
lcall
inc
inc
and
aam
jnp
lea
stc
push
adc
mov
or
inc
dec
dec
and
pcmpgtd
add
aaa
call
decb
aam
push
fnstsw
stc
pusha
adc
mov
push
mov
aad
and
int
ja
push
jnp
push
jg
aaa
or
mov
or
sbb
mov
dec
pop
sbb
jno
stos
adc
outsl
insb
ljmp
xlat
mov
push
imul
out
pop
pop
sub
shr
dec
add
jg
arpl
lret
pop
das
cld
lods
ljmp
xor
push
pop
test
add
popa
push
in
mov
sbb
rolb
and
xor
xchg
jmp
and
in
fs
ret
add
mov
sbb
cmpsl
leave
daa
pop
and
inc
repnz
dec
and
adc
push
dec
fwait
pop
xchg
lods
ss
aaa
mov
lods
cmp
jge
or
mov
xlat
and
dec
mov
adc
stos
jbe
and
fisubl
into
mov
cmp
aad
es
inc
and
sub
aam
push
and
mov
rolb
sbb
jns
imul
test
dec
movsl
out
in
je
fcmovb
in
out
adcb
mov
inc
movb
mov
pop
pop
jbe
jmp
out
xor
xor
lods
add
pop
sbb
mov
xlat
mov
jmp
cwtl
bound
push
cltd
lods
mov
sub
ret
out
cmp
fs
popf
cld
rcll
scas
js
push
or
int3
fldz
pop
mov
mov
xor
rcr
lods
dec
add
or
mov
xor
paddusw
or
inc
jnp
push
jg
sti
testb
push
xlat
icebp
loopne
and
inc
out
iret
fiadds
pop
sbb
cmpsb
jbe
sarl
stc
inc
dec
and
xchg
push
xchg
jg
xlat
cli
cmp
pop
les
mov
insl
add
add
mov
imul
les
xor
jnp
stos
add
mov
jae
and
mov
and
addb
aam
push
or
outsl
mov
imul
adc
mov
lret
std
adc
jge
push
leave
aaa
inc
scas
jo
or
pop
sbb
insb
jecxz
inc
sub
mov
cmp
jb
cmpl
sti
inc
or
jbe
stc
cwtl
mov
loopne
lock
insb
test
mov
inc
js
pop
adc
mov
add
xchg
int
and
cmp
push
lock
daa
push
stos
mov
pushf
add
push
in
xor
xchg
push
jno
mov
mov
addb
sbb
sbb
mov
arpl
dec
mov
xor
or
and
mov
inc
js,pn
enter
cmpsl
add
cmp
mov
lods
push
pop
sbb
stc
and
xor
loop
outsb
movsl
push
inc
xor
xor
jno
mov
pop
lahf
adc
lret
pop
setg
andb
test
fdivrl
aaa
stos
xchg
pop
push
mov
mov
dec
lods
fdivrs
mov
pop
sbb
std
stos
sbb
out
arpl
push
imul
loop
stc
aam
push
shll
mov
mov
decl
dec
sub
loopne
inc
iret
cli
push
inc
lea
out
dec
call
sarb
ljmp
xchg
sub
icebp
call
out
cmp
cltd
sbb
jns
xchg
mov
enter
rorb
adc
cltd
pop
mov
rorb
mov
popa
pop
cs
push
xor
cmp
mov
pop
add
popf
inc
dec
leave
sub
mov
iret
fisttps
in
jg
and
aam
and
repnz
jne
ret
stos
sub
or
rorl
or
adc
iret
enter
adc
ss
rcrb
mov
jno
orl
push
and
mov
jne
mov
nop
decb
mov
push
xor
cmpl
push
jmp
xor
ret
adc
fadd
ljmp
push
mov
loope
cld
pop
mov
cwtl
in
jg
push
adc
fwait
dec
mov
mov
mov
sbb
xor
push
into
movsl
jecxz
mov
and
addl
or
sbb
scas
psubsw
push
pusha
dec
fs
xchg
lret
adcl
add
sti
sub
mov
jecxz
mov
add
xor
mov
push
xchg
push
inc
mov
sbbl
or
adc
insl
pop
xchg
movsb
enter
sub
jne
std
sbb
or
inc
xor
insb
cmpsb
rep
dec
adc
ss
les
sub
inc
pop
or
push
repnz
data16
dec
ss
aas
insb
cmpsl
or
push
push
mov
dec
cmp
ljmp
mov
mov
fs
xchg
iret
push
cmpsb
and
lock
xor
sbb
jo
pop
aaa
or
out
push
lods
adc
nop
mov
imulb
idivl
and
adc
xchg
jae
add
stc
jnp
cmpsb
in
fsubrl
movsl
out
sub
xor
mov
dec
imul
jbe
rorb
iret
dec
pop
and
test
dec
and
pushf
test
cmc
ror
fildl
jl
pop
jp
cmp
pop
aaa
sar
insb
out
sub
cmp
and
pop
pop
gs
arpl
pop
ja
out
and
cs
in
sub
and
jle
ficoml
js
cmovp
fsubp
test
inc
adc
fcom
lea
push
out
stos
mov
sub
push
xchg
ror
inc
test
or
clc
adc
pop
mov
mov
xchg
xor
jne
cmp
mov
out
in
lods
and
cwtl
jl
fcmove
insl
pushf
out
sti
movsl
cltd
stc
jge,pt
jg
arpl
sbb
adc
push
mov
scas
cmpsl
insb
xchg
xor
cli
push
leave
mov
fmull
sahf
leave
mov
cs
push
pop
sub
int
aas
sarl
ret
lret
jge
push
xor
cmpsl
xorb
mov
xchg
hlt
cld
jle,pn
or
jno
nop
mov
daa
shll
stos
jae
jno
cmpsb
lahf
and
fwait
jno
gs
pop
jns
test
jns
imul
mov
xor
clc
mov
repz
test
rolb
imul
push
jae
jns
scas
xor
push
dec
xor
pop
adc
inc
mov
push
cs
mov
push
test
outsl
insl
or
hlt
pushl
divb
push
xor
jo
sbb
sbb
sbb
push
dec
xor
das
jno
and
and
adc
jae
xchg
pop
add
lahf
add
ja
stos
shlb
or
adc
push
mov
dec
daa
cmc
sbb
jns
adc
cli
add
fmuls
fiadds
mov
push
negl
das
mov
mov
std
sbb
push
pop
int
enter
jae
cmp
inc
fildl
dec
xor
out
pop
jno
mov
jno
jne
testb
dec
inc
push
adc
stos
in
dec
ret
pop
mov
cltd
mov
inc
ss
sbb
mov
test
jnp,pn
loopne
cmpsl
out
shll
imul
int3
lcall
cmpsl
or
mov
push
push
and
push
xor
popf
or
sub
mov
add
sahf
mov
in
stos
mov
or
loop
xchg
lcall
dec
xchg
push
sbb
pop
lret
dec
jbe
jecxz
push
push
lcall
dec
mov
xchg
int3
jecxz
out
jmp
mov
roll
and
sub
push
and
xor
jne
es
outsl
fs
shll
shll
xchg
dec
cmp
push
cmp
push
mov
out
push
out
insl
fistl
arpl
push
adc
mov
sar
out
pop
addl
xor
fisttps
loop
jb
in
in
test
call
rcll
arpl
pop
xor
daa
test
jmp
dec
enter
mov
jbe
xor
xchg
negb
xor
dec
xor
ljmp
push
pop
jae
xchg
jnp
fdecstp
push
stos
mov
mov
jmp
sbb
and
jecxz
ss
xchg
or
mov
sbb
mov
and
call
mov
into
gs
sbb
xchg
outsb
daa
iret
pop
cs
adc
inc
mov
cmpsl
aam
ds
loopne
sbb
ret
in
call
sbb
jne
and
push
into
outsb
add
pop
inc
enter
pop
addr16
or
cli
js
push
push
dec
call
sti
mov
repnz
fbld
jle
or
jo
jns
sahf
rcll
xlat
pop
sarb
movl
push
or
fs
stos
std
mov
pushl
push
inc
cmpsb
testl
cs
aas
test
mov
cmp
imul
gs
push
cmp
fisttps
sbb
cmpsl
inc
incl
sbb
push
xchg
pop
rcrb
mov
sub
test
mov
and
push
pop
cld
sarl
ds
test
pop
xchg
filds
sahf
or
fadds
dec
es
pop
in
push
ficomps
inc
sub
shl
iret
mov
cltd
adc
xchg
pop
mov
jg
decb
add
pop
stos
and
xor
andb
test
lcall
push
loop
xor
sarl
jl
jg
mov
sub
mov
dec
xchg
cmp
int3
mov
jb
jle
inc
insl
xchg
pop
dec
xor
sbb
inc
pop
in
shrl
cld
call
fsubp
aas
ret
pop
xchg
into
dec
fdivrs
jae
xchg
insl
mov
test
lahf
xor
lahf
into
ss
shlb
xchg
leave
pop
push
push
ds
stc
mov
cltd
lret
jg
jb
icebp
sbb
mov
cwtl
xorl
outsb
lahf
add
xor
cmpsl
popa
int
inc
cmp
add
jmp
push
adc
push
jmp
push
aaa
loope
xor
and
stos
sub
movsb
adc
shll
mov
fcompl
dec
jbe
xchg
sub
fnstenv
and
jge
fadd
les
out
in
xchg
repz
jecxz
jecxz
mov
push
stc
and
js
cli
hlt
xor
inc
xor
inc
jns
jns
mov
fiadds
shrb
jnp
mov
xchg
push
dec
push
and
lahf
sub
fisttpll
dec
clc
adc
jp
jns
mov
lret
push
xchg
in
pop
mov
fbld
insl
adc
jg
lret
pop
jne
mov
or
sbb
les
pop
push
push
fcomp
andl
inc
fisubl
loopne
jne
and
je
orb
clc
cltd
jae
mov
jnp
shr
pop
mov
or
lods
clc
scas
add
push
add
popf
mov
dec
cmpsl
cmp
out
popa
nop
lock
fimull
xor
or
in
jmp
cmpsl
negl
mov
sbb
mov
or
sbb
cmp
sti
jnp
or
lea
sub
dec
cmp
std
icebp
ds
pop
mov
daa
and
aad
mov
cmp
fs
dec
push
rorl
and
adc
pop
cmp
cs
mov
clc
xlat
cld
inc
or
in
jge
or
mov
daa
mov
inc
jmp
lcall
js
test
ss
sarl
jno
xlat
orb
add
cmc
cmp
adc
mov
xchg
pop
out
scas
repnz
sbb
insl
or
fstpt
mov
loope
jmp
stos
sub
ja
fisubrs
test
mov
fwait
mov
pop
and
xchg
lret
cmp
mov
ret
fwait
inc
test
xchg
adcl
aaa
mov
mov
lret
inc
fwait
lds
imul
sub
std
mov
std
adc
jae
dec
cwtl
adc
xchg
addb
mov
jne
insl
enter
cmpb
cltd
sbb
push
add
dec
cmpsb
cmp
xor
test
mov
leave
in
in
adc
in
mov
sbb
addr16
notb
mov
and
push
rol
es
xor
jne
jge
mov
les
jge
and
stc
dec
cmpsb
and
dec
adc
cmp
mov
pop
mov
jbe
dec
inc
xor
dec
fsubs
aas
cli
mov
cmp
xor
cltd
pop
pop
fidivrl
sbb
ficoms
shll
sti
les
mov
jp
ret
sti
mov
push
push
sbb
xor
mov
aam
xor
pop
pop
das
nop
xorl
push
mov
and
push
int3
mov
jne
cld
lods
mov
shrb
rolb
scas
lret
xchg
shl
imul
and
add
add
xor
mov
dec
inc
movsl
push
jbe
jbe
in
ret
les
pop
jg
in
jo
xor
fldenv
push
mov
pushw
arpl
lods
sub
int
shrl
popf
push
sub
mov
movsb
out
fldt
repz
testb
repz
cmpl
dec
ret
mov
mov
hlt
xacquire
sub
fwait
sbb
mov
sti
rolb
dec
sbb
scas
inc
jnp
leave
push
sbb
scas
insb
pushf
pop
out
addr16
das
push
mov
lret
pop
fbstp
mov
test
rol
add
stos
enter
adc
cmp
mov
push
sub
or
cmp
dec
pop
outsb
in
rorl
in
popa
mov
or
fldenv
scas
push
inc
inc
jmp
arpl
int
add
push
dec
pop
repnz
mov
lods
andl
int3
movsl
ss
test
bound
sbb
sbb
cmp
fiadds
mov
loopne
adc
mov
pop
std
cmc
fimuls
scas
pop
fbld
dec
call
push
mov
pop
pop
jl
push
test
inc
or
ss
mov
pop
lods
cmpsb
test
call
xchg
dec
push
aaa
adc
xchg
or
jle
test
adc
call
sub
mov
mov
std
sub
pop
int
shlb
and
push
sub
sbb
ret
dec
dec
xchg
arpl
pop
shr
or
rcr
mov
test
xchg
pop
cmp
sbb
mov
and
xchg
lret
jp
and
mov
out
mov
in
loopne
cld
mov
sbb
jecxz
dec
xor
and
repz
lock
sub
pop
dec
test
mov
adc
dec
sub
jl
xchg
out
mov
jo
mov
sbb
negl
inc
mov
add
movsb
cmp
dec
mov
fidivrl
lea
daa
hlt
add
test
shlb
or
sub
jp
int3
or
scas
popa
adc
inc
push
je
in
inc
aam
pop
mov
mov
push
aad
xor
mov
aam
outsl
push
in
sahf
insl
jge
lret
xchg
mov
fsubrs
rcr
cwtl
sar
adc
cmp
mov
pop
xor
lock
test
arpl
fdivrs
std
push
xchg
jns
jmp
imul
or
lcall
cltd
dec
mov
hlt
repnz
pop
cmp
dec
filds
lds
test
dec
sbb
cmp
jae
ljmp
jno
ret
xor
or
xlat
mov
mov
std
xor
add
add
xor
push
xchg
xchg
push
jle
inc
cmp
out
xchg
push
nop
push
aaa
and
js
pop
ret
dec
lea
push
and
xor
xorb
adc
dec
nop
adc
lret
stos
inc
mov
loope
shl
outsl
sbb
pop
in
pop
mov
mov
pop
jo
or
jbe
jbe
das
pop
mov
orl
imul
cltd
pop
cltd
mov
inc
inc
and
jp
mov
out
xor
sub
jbe
lods
in
lock
and
jae
stos
or
xchg
add
test
xchg
pop
fcomi
int
sub
js
mov
cli
jnp
push
xor
mul
outsb
mov
jle
cmpsl
mov
test
clc
in
cltd
ds
cltd
inc
fs
jnp
aas
mov
push
xchg
pop
test
repnz
xchg
xor
andl
std
andl
shll
negl
push
std
inc
adc
adc
lods
or
pop
sbb
push
mov
mov
jbe
idivb
mov
xchg
xchg
push
sub
push
in
pop
sti
fcompl
jle
clc
pop
icebp
pop
adc
push
jns
mov
push
mov
xchg
pop
iret
jnp
sub
and
negl
gs
cmp
push
jnp
les
int
imul
sbb
ja
popa
xor
aas
push
sub
aaa
push
sti
jl
inc
jbe
adc
pusha
or
jle
mov
orl
loop
stos
faddl
push
xchg
mov
les
mov
test
inc
cmpsb
xor
push
cli
push
outsb
repz
std
cmpsb
jecxz
sub
aas
imul
std
jg
out
or
sbb
or
ja
xchg
add
je
into
xchg
pop
fmull
jp
adc
jbe
sbbl
rcrb
sub
cmp
adc
sub
pop
mov
cmpb
mov
push
mov
mov
data16
cmp
pop
fs
mov
xchg
xchg
or
pop
dec
push
rclb
in
pop
mov
cld
adcb
mov
adc
jae
push
sbb
sti
sti
sub
addb
lea
cld
add
test
sbb
and
das
loopne
rorl
cmpsl
in
sbb
js
pop
pop
jns
sbb
lret
cli
mov
and
into
fdivrp
sub
and
cmp
shll
clc
mov
sbb
les
sub
aas
or
mov
je
andb
and
pop
inc
lock
call
in
mov
lods
shll
xchg
test
ss
sbb
loopne
aas
jle
add
or
xchg
jo
in
gs
lcall
jge
loopne
or
iret
xchg
xchg
cltd
mov
adc
stos
sub
outsl
lcall
clc
fcompl
mov
test
outsl
test
mov
jno
fbld
shrb
cmp
shl
outsb
dec
jmp
xchg
shlb
xchg
jecxz
insb
sub
cmp
jne
pop
pop
and
xor
in
into
push
addl
xor
xor
js
mov
push
mov
das
scas
stos
dec
push
fxch
enter
sbb
dec
orl
xor
push
and
ja
pop
mov
inc
and
adc
push
faddl
push
inc
dec
ja
daa
push
and
int3
rclb
cmp
push
shlb
jle
fnsave
jl
scas
sub
ljmp
sub
sub
jecxz
arpl
das
mov
pop
inc
add
dec
fiaddl
xor
in
in
sub
sub
ss
mov
inc
xor
xor
cmp
adc
cmova
mov
xchg
sbb
mov
mov
sbb
sbbl
ja
in
lea
or
call
adc
out
icebp
repz
sub
mov
xor
repnz
fildll
sbb
neg
cmp
lods
test
movsb
jle
test
jle
pop
adc
dec
lods
dec
lahf
push
addr16
daa
dec
cmp
inc
pop
mov
popa
pushf
mov
cmp
stos
inc
inc
lret
insl
xchg
call
pop
mov
icebp
jmp
in
js
mov
nop
insb
fdivrl
lret
jne
pushf
sub
mov
or
xor
xor
cmp
sub
imul
pop
pushf
cmp
mov
scas
loope
insl
mov
xchg
mov
test
insl
test
daa
loope
and
inc
addl
shrl
sub
xor
inc
mov
or
popa
into
roll
out
dec
jp
adc
orb
sub
insl
sbb
leave
jge
sbb
push
in
outsl
mov
std
and
xchg
sub
mov
sub
mov
sbb
fnstenv
fs
mov
pushf
push
test
sbb
mov
fcompl
lds
idivl
xlat
add
stos
cs
adc
dec
pop
aas
jmp
inc
jae
xchg
lea
ds
cmc
mov
cld
loopne
jle
into
in
js
sbb
clc
fisubl
mov
jbe
adc
inc
pop
sub
loop
clc
cld
jecxz
call
andl
mov
mov
jne
scas
xor
movsb
adc
xchg
pop
jmp
add
lods
sbb
enter
addr16
out
cmp
mov
sbb
add
jae
sbb
lcall
add
lret
and
daa
sbb
adc
loop
pop
ljmp
mov
std
cmp
mov
loope
mov
in
dec
xchg
sti
scas
inc
pop
test
push
lcall
loopne
dec
loop
mov
mov
jle
stos
mov
into
inc
cwtl
cld
arpl
jnp
push
mov
dec
mov
mov
icebp
mul
mov
std
jecxz
dec
push
rcll
inc
lret
dec
jae
mov
mov
push
xchg
ror
dec
mov
ss
negb
dec
ds
out
test
cmp
js
sbb
inc
repz
mov
cmp
cmpsl
lods
cmc
mov
fstps
pop
pop
jb
or
sub
daa
out
or
test
xchg
dec
sub
and
inc
outsl
cmpsb
ret
stos
pusha
icebp
nop
inc
je
push
jb
xor
lahf
test
clc
movsb
mov
jne
xlat
iret
pop
sub
shlb
sub
andl
jecxz
dec
popf
sub
push
gs
addb
push
out
mov
test
clc
jno
add
icebp
mov
or
lods
iret
ljmp
ret
cmpsb
lods
sub
ja
add
into
xlat
inc
fistps
jns
inc
sarb
jns
sub
ret
add
cmp
gs
xor
mov
stc
jnp
mov
cmp
out
hlt
out
in
popa
xchg
jb
scas
xor
pushf
mov
push
xchg
lret
sub
adc
sub
sbb
fcompl
xchg
inc
aam
insb
adc
out
push
shl
aad
push
aas
xor
cli
jmp
outsl
lcall
mov
inc
sbb
mov
shrb
mov
das
pop
mov
jecxz
or
jl
shrb
and
js
rcll
addr16
out
nop
and
sbb
iret
jbe
outsb
movsl
push
enter
push
jge
movhps
mov
mov
and
adc
testb
rclb
or
cmp
xchg
fwait
jge
in
and
int3
mov
inc
out
cltd
cmpsl
xchg
mov
lea
leave
jo
stc
xchg
dec
aam
mov
fdivrp
andb
pusha
push
cmp
jns
cmp
stc
pop
sbb
leave
shlb
push
mov
insb
mov
into
add
jge
jno
in
xchg
mov
xchg
leave
stos
es
or
das
xchg
call
popa
stos
and
lahf
sub
lahf
xchg
jle
push
mov
xor
mov
aaa
push
shlb
shll
ficomps
mov
pop
jo
xchg
push
pushf
and
aas
sbb
jne
popf
daa
adc
cmp
xchg
cmpsl
push
cld
sti
mov
in
adc
in
pop
in
push
pop
inc
sti
sbbb
cli
addr16
cmc
push
dec
les
stc
bound
pop
and
and
lea
mov
dec
cwtl
je
push
jp
mov
iret
inc
sar
stos
or
loop
mov
repz
push
jg
ja
add
lahf
jno
or
or
inc
aaa
sbb
mov
shl
cs
pop
adc
sub
loop
inc
cld
loope
dec
pop
and
push
fmul
jl
jae
sbb
pop
insl
mov
roll
pop
pop
in
push
cmp
psubq
out
jb
mov
ret
pop
in
shll
paddb
inc
jl
mov
scas
dec
and
dec
ja
bound
adcb
aas
ret
enter
cmc
mov
pop
aaa
adc
push
cmp
aad
jo
pop
or
insl
fisubrs
mov
jno
sbb
test
loop
repz
push
mov
adc
fldt
sbb
into
pop
mov
movsb
jne
pop
mov
cli
mov
pop
xorl
cmp
clc
and
adcb
ror
push
add
fbstp
orb
mov
sbb
dec
addb
add
mov
ljmp
sub
loope
repnz
pop
or
inc
fistl
sub
sbb
mov
lret
adc
rcll
mov
cmp
cmp
rclb
out
flds
aas
andb
mov
cmc
push
mov
les
mov
int3
jno
data16
out
sub
push
push
aaa
xlat
ficoms
xchg
dec
imul
aad
add
jo
fyl2x
adc
jne
jo
rclb
sub
mov
mov
test
sbb
adc
lahf
sub
jbe
insb
insl
sbb
shll
jle
sarb
sti
adc
and
aam
es
push
lret
jno
test
sbb
jle
shl
das
hlt
add
mov
aad
sub
arpl
in
fiadds
rclb
pop
push
out
or
adc
inc
or
pop
sbb
repz
fistpll
inc
inc
aam
push
push
jle
sub
mov
repz
inc
cltd
mov
sub
movsl
push
cmp
mul
lcall
daa
pop
jg
rclb
sub
xchg
xchg
adc
mov
mov
inc
push
js
enter
mov
jmp
fiaddl
mov
dec
inc
jle
jl
fs
sbbl
dec
sbb
and
pop
cmp
es
outsb
fstl
dec
add
insb
dec
outsl
mov
xor
enter
bound
daa
pushw
and
and
out
lods
mov
pop
or
dec
lahf
mov
mov
into
shlb
add
or
xchg
es
cmc
repnz
ljmp
leave
and
push
cltd
pop
cmovg
mov
jne
push
ret
sbb
cmpsb
into
mov
adcb
adc
pop
mov
aam
push
and
out
mov
loopne
scas
jbe
push
jns
out
mov
lea
cmp
into
sbb
cwtl
popf
pop
dec
xor
xchg
mov
dec
test
and
das
jl
lret
aas
lods
popf
cmc
stos
push
clc
lret
dec
dec
jl
sbb
xchg
mov
jg
inc
out
xchg
ljmp
lcall
and
adc
fsub
jns
push
or
xor
mov
les
xor
jge
jb
rcll
test
xchg
ds
not
ja
mov
sub
dec
mov
aam
or
cmp
ds
adc
jge
mov
jno
push
push
test
push
outsl
mov
xor
test
jb
xchg
lds
xor
js
and
push
adc
pop
out
mov
gs
mov
aam
pop
in
mov
inc
pushf
dec
adc
or
pop
test
jp
rcr
mov
xchg
rcll
scas
xchg
lret
arpl
add
adc
push
notb
pop
mov
jne
bound
mov
shlb
lcall
hlt
lods
push
pushf
xchg
rolb
mov
mov
cmp
cmp
jo
pop
fmulp
jge
mov
push
fmuls
mov
sbb
xor
rcll
and
jmp
xchg
icebp
sub
jne
xchg
faddl
clc
xchg
jno
rcrb
mov
mov
sbb
loopne
lret
js
mov
dec
xchg
mov
add
enter
fdivl
adc
inc
dec
dec
addr16
outsb
xchg
cmpsb
out
loop
pop
loope
push
cmp
jo
in
sbb
out
in
push
aaa
mov
je
lods
pop
sbb
cmpl
jo
test
pop
dec
push
cwtl
into
sub
mov
adc
jno
push
mov
jge
mov
jl
mov
jle
cwtl
sahf
arpl
mov
fnstsw
and
imul
daa
add
xchg
je
vpsubd
pop
mov
push
pop
sbb
adc
dec
jns
dec
dec
lret
inc
ljmp
jae
and
ds
daa
insb
popa
lds
cmp
and
mov
mov
add
jne
in
movsl
jno
orb
inc
je
push
add
mov
insb
adc
pop
push
sub
vmovshdup
ds
mov
es
push
sbb
pop
mov
jmp
and
out
cld
xchg
push
add
repz
push
rorl
aas
aaa
push
data16
repz
pushf
lods
xchg
loopne
jns
xchg
xchg
arpl
clc
scas
and
gs
mov
and
xchg
pop
dec
pop
sub
aaa
idivl
movsl
fiadds
dec
cmp
inc
lahf
mov
loopne
ret
pushf
js
rclb
xchg
jle
popf
inc
dec
adc
jle
fmuls
aam
pop
ss
cwtl
mov
rorb
pushf
sbb
mov
fcmovbe
popf
pop
cmpsl
pop
in
loop,pt
ret
lcall
xchg
add
clc
int3
sahf
outsb
inc
in
repnz
scas
fucompp
mov
dec
lock
daa
pushf
popa
and
ret
dec
mov
sarb
cmp
idivl
clc
cmp
push
lods
and
lea
fcmovnbe
dec
sbb
ret
pop
push
jle
stos
loop
mov
arpl
add
xlat
jns
adc
mov
mov
push
insl
cmp
dec
notl
xor
mov
les
push
inc
xor
inc
js
shrl
aas
pusha
jle
pop
mov
ret
add
mov
lret
lods
push
aam
or
dec
mov
lcall
xor
je
inc
inc
or
jbe
fldt
or
loop
in
mov
mov
push
out
or
ret
inc
stos
sbb
pop
scas
ja
cmp
rcll
das
aaa
test
mov
dec
ficompl
je
bound
inc
mov
shll
mov
and
cld
add
cmc
mov
xchg
dec
or
test
test
mov
ds
inc
cwtl
sub
jbe
mov
and
test
andb
loope
inc
mov
mov
cmp
rcll
rcll
adc
roll
jno
fs
notb
dec
pop
xlat
stos
scas
and
into
or
stos
lahf
inc
inc
pushf
inc
repnz
push
lds
xchg
add
pop
movsb
cmc
cmc
test
xlat
cmp
fs
xor
in
jbe
and
ja
mov
mov
xchg
push
dec
ret
ret
lahf
inc
sahf
stos
call
adc
push
cmc
inc
or
enter
dec
subl
das
les
scas
int
sub
test
pop
test
jecxz
inc
xchg
ja
lock
mov
inc
shrb
or
cmp
pop
push
loopne
jns
jne
pop
cmp
or
mov
dec
inc
dec
xchg
xchg
add
jns
shll
lret
popa
rolb
mov
in
sbb
and
sbb
leave
add
ret
add
rcll
cmp
add
sbb
dec
or
lock
stos
jnp
jne
lcall
mov
and
cmpsb
sub
jmp
adc
sbb
fisttpll
ss
dec
lcall
dec
inc
aam
cmc
sahf
sub
or
mov
data16
testl
inc
mov
or
rorb
cwtl
into
dec
aaa
stc
and
cs
xchg
clc
adc
add
aas
mov
fsts
ret
adc
mov
fists
cmp
pop
push
push
ss
cmpsl
lock
or
dec
clc
adc
stc
loop
xchg
or
je
stos
and
add
jae
jp
les
movsb
outsl
dec
xchg
sahf
movsb
mov
mov
mov
out
jle
mov
out
xor
in
rcrl
mov
mov
pop
imul
sub
sti
in
iret
xchg
xchg
popl
loop
mov
inc
nop
shlb
test
js
mov
scas
push
jg
nop
addr16
loopne
mov
cmp
xor
push
mov
pop
push
xchg
or
in
ja
jg
testl
ja
sbb
shr
mov
mov
aas
add
mov
stc
xor
jns
pop
sbb
inc
daa
fisttpll
call
pusha
mov
shlb
fistpl
mov
lret
shlb
and
cli
stc
sub
outsl
imul
mov
hlt
int
mov
outsb
sub
test
arpl
mov
cmp
stos
push
inc
jo
xchg
stos
mov
mov
inc
gs
mov
cltd
imull
call
adcb
adc
add
push
sub
and
cmp
lret
js
stos
popl
pop
out
decb
mov
sbb
fisubrl
lcall
adc
jae
repnz
mov
xchg
mov
enter
sub
add
sbb
ret
sub
shrb
and
pop
inc
push
stos
jmp
dec
fsubl
ss
mov
mov
cltd
scas
outsb
and
sub
ret
lods
in
outsl
icebp
aad
lcall
xchg
and
dec
pop
insl
arpl
bound
sub
out
mov
cmp
sub
mov
int
clc
in
fwait
imul
xor
rcrb
addr16
cmp
aad
sbb
fdivs
shll
xorb
cld
pop
shl
not
out
adc
fsubs
mov
cmp
popf
pushf
jl
aad
push
and
lahf
xor
pop
and
test
cmp
lock
xor
push
jecxz
dec
push
jp
repnz
cmc
pop
dec
and
sub
xlat
push
inc
push
lds
push
sbb
movsb
dec
and
xchg
pop
dec
mov
lds
lods
iret
jne
scas
loope
push
jmp
or
adc
roll
mov
mov
in
sbb
jp
dec
mov
inc
mov
lock
sbb
movzww
scas
iret
ret
and
out
add
adc
pop
aaa
fnstcw
jnp
xchg
push
call
faddl
std
test
pop
push
and
les
xchg
push
mov
push
or
icebp
test
aad
push
cmp
movsl
mov
sub
sti
xor
shlb
adc
loope
in
repz
movsl
xchg
inc
push
xor
adc
sub
pop
xchg
outsl
jno
push
inc
jecxz
scas
lret
or
sub
dec
and
cmpl
es
es
test
fistps
inc
roll
outsl
repz
call
mov
pop
xchg
push
add
and
test
movsb
stc
push
aad
jecxz
mov
pop
xor
addr16
iret
add
gs
and
stos
jno
and
mov
sbb
xchg
xchg
or
out
cld
push
mov
jl
mov
in
jle
xor
push
std
pop
imul
adc
jge
leave
push
and
push
mov
jp
mov
add
leave
xchg
dec
roll
push
pusha
sub
xchg
incl
lcall
aam
mov
mov
push
or
adc
adc
int
shr
add
mov
dec
cmc
or
jb
push
and
out
mov
push
fmul
psrlq
test
cmp
out
pop
mov
inc
cmpsb
int3
lock
mov
mov
pop
push
xor
sahf
sub
fmuls
sbb
xchg
jbe
xchg
ja
inc
shlb
mov
fiadds
mov
or
out
cmc
test
sbb
mov
fnstsw
adc
call
les
hlt
out
pusha
cltd
int
add
fcmove
in
dec
dec
sub
mov
dec
mov
xchg
inc
daa
mov
jae
movsb
andl
imul
std
pop
in
mov
adc
xchg
aas
orl
cwtl
sbb
xor
je
pop
js
xchg
mov
xlat
dec
adc
sub
push
aad
out
lahf
lcall
stos
pop
sub
push
inc
mov
and
dec
xor
lods
mov
lea
xchg
lea
cmc
add
adc
leave
fstps
mov
fidivl
mov
mov
xor
subl
cmp
push
bound
lds
push
in
dec
add
pop
dec
sub
mov
popf
lret
mov
inc
imul
cmpsl
sti
ss
dec
pop
mov
pop
xchg
loopne
and
mov
add
shll
ds
std
das
aas
mov
sub
cld
push
add
mov
rcrb
ljmp
dec
ja,pn
xlat
sahf
mov
pusha
cmovbe
data16
xchg
fldenv
in
fimuls
bound
mov
shr
inc
mov
cmp
add
loopne
sub
pop
or
shll
mov
mov
pop
fnstenv
psadbw
push
cmpl
push
mov
mov
jle
push
push
xor
mov
dec
outsl
adc
mov
mov
sbb
pushf
dec
enter
cltd
pop
lea
dec
rolb
cmpsb
inc
mov
rorl
fsubrl
loope
cmpsl
jne
hlt
sub
add
adc
movsb
adc
mov
iret
push
test
adc
dec
sar
lock
and
jnp
outsb
rcrb
jns
lods
stos
adc
inc
out
add
sbb
sahf
mov
pushf
mov
lock
shr
or
stc
dec
sub
shlb
and
cli
fcoml
lods
xor
sbb
adc
stos
std
cmp
mov
dec
movsb
ds
movsl
scas
mov
sahf
jl
mov
repz
cwtl
fbld
enter
arpl
scas
lods
gs
fildl
jge
imul
and
xor
int3
xchg
xchg
mov
add
pop
aas
sub
repnz
mov
push
push
xor
dec
sub
leave
scas
xlat
cmc
fiadds
ficoml
cmp
pop
add
sbb
jge
das
outsb
mov
in
jmp
insb
inc
mov
dec
test
jl
nop
fildll
les
bound
popa
fdivr
movsb
sub
or
xchg
push
jmp
xor
xlat
lret
mov
inc
imul
stos
pop
loop
sti
push
addl
cmc
ret
aas
lcall
cmc
loope
sbb
out
and
xlat
push
hlt
sub
gs
test
pop
jne
xor
mov
mov
and
cmp
cmp
sub
aas
sub
pop
push
into
pop
and
mov
mov
xor
arpl
sbb
fistl
icebp
vaddsubpd
outsb
mov
mull
ljmp
subb
int
inc
sbb
and
cmc
jnp
pop
es
sbb
lds
fsubrl
mov
daa
lret
js
pop
lret
ret
cmp
fimuls
cld
pop
or
sbb
lock
popf
mov
pop
ja
cmc
lcall
std
xor
pop
adc
adc
mov
adc
movsb
ss
cwtl
int
and
mov
imull
pop
xchg
mov
mov
in
scas
jno
sbb
and
jp
sub
xor
push
test
loopw
scas
jae
sbbl
xor
dec
mov
out
dec
insb
enter
cltd
fildl
imul
popa
les
enter
stc
or
lahf
outsb
mov
mov
pushl
and
mov
sub
stc
loopne
mov
aad
adc
lahf
sbb
rcr
je
into
cmp
sbb
cmp
push
les
cli
fldl
movaps
shll
scas
add
add
lcall
cwtl
rorb
dec
insb
enter
test
ret
into
mov
mov
adc
push
aad
cwtl
adc
shll
xchg
push
or
scas
xchg
xlat
dec
sbb
xchg
gs
lret
shrb
xor
jns
cmp
pop
pop
cld
xor
mov
pop
enter
int3
mov
leave
loopne
push
dec
mov
outsb
test
arpl
data16
rolb
flds
in
loop
xchg
mov
aam
jmp
and
mov
jne
imul
xor
out
adc
das
mov
dec
inc
push
lcall
and
and
icebp
sub
sbb
lret
mov
inc
xchg
call
lea
test
mov
xor
out
insl
adc
cmp
inc
push
hlt
mov
add
mov
or
ja
movsl
int3
ds
shlb
xchg
add
sub
pop
sub
inc
ror
mov
mov
insb
pop
jo
lret
lret
mov
rclb
jecxz
and
out
outsb
fdivs
stc
scas
dec
jmp
into
rcll
mov
adc
add
lods
aam
mov
and
es
in
cltd
stc
cmp
fildll
and
fidivl
pop
das
out
mov
push
lods
sub
clc
push
inc
fstpt
cmp
es
pop
ret
sbb
insl
xchg
and
jp
ret
daa
hlt
pop
mov
cmp
push
adc
push
mov
or
clc
jnp
add
idivb
jne
push
loopne
dec
jae
dec
repnz
lret
mov
int
push
shl
ljmp
out
and
jg
mov
ds
cmc
push
mov
adc
lds
test
repz
sti
inc
dec
mov
js,pt
adc
arpl
mov
xchg
push
fcoms
cmp
push
sub
xchg
add
xor
movsl
pop
cmp
mov
scas
and
aad
mov
aaa
xchg
xchg
dec
mov
stc
and
add
insb
push
mov
iret
out
sahf
gs
js
popa
xchg
cltd
mov
stos
lods
sub
xchg
insb
lret
dec
mov
adc
rcll
jae
or
mov
push
pusha
pop
arpl
sahf
loopne
cld
mov
pushf
pop
xor
add
loopne
aad
mov
push
cmp
je
icebp
sbb
pop
adc
das
sub
push
ret
xlat
jns
fwait
pop
bound
bound
xchg
mov
es
cmpl
loopne
or
shr
pop
or
pop
sbb
cmp
adc
jns
adc
ljmp
leave
mov
push
in
iret
xchg
ds
mov
cmpsb
inc
fmuls
outsb
loopne
mov
addb
or
mov
out
pop
les
shlb
sub
out
enter
mov
jmp
repz
mov
mov
xor
jge
push
je
orl
or
in
sub
scas
lock
mov
in
int3
popf
cmpb
adc
xorb
mov
jle
nop
dec
xchg
adc
test
push
lcall
xchg
inc
cmp
call
push
xor
out
fisttpl
je
insl
jmp
xor
xor
mov
push
and
xchg
push
jg
dec
cmp
jo
stos
jo
cmp
adc
cmp
int3
jae
sbb
adc
leave
fs
sti
daa
mov
add
add
std
sahf
jns
fdivl
jecxz
pop
subb
xor
fs
jp
jnp
flds
stc
push
sbb
dec
inc
out
or
fstpt
lods
mov
sahf
inc
mov
data16
ret
cmp
mov
mov
addr16
dec
ror
out
xlat
lret
loop
or
jbe
or
lds
and
cmp
shrb
cmp
push
xchg
jns
xchg
hlt
rcl
fists
cli
sub
adc
shl
and
test
hlt
aam
ror
imul
scas
fsin
cmpsb
jle
fiadds
cmp
jle
sub
mov
or
jns
js
popf
push
jmp
and
pop
cmc
jns
inc
mov
mov
push
into
push
sbb
mov
adc
sub
mov
jno
xor
xchg
adc
push
mov
dec
jb
repz
xchg
adc
jno
das
fldl
js
bnd
add
loopne
daa
test
inc
mov
jg
push
lcall
out
push
scas
pop
adc
in
inc
jnp
sbb
aas
sbb
add
mov
out
lret
push
xchg
mov
jp
add
mov
test
lret
loop
aaa
and
test
ja
rcll
xlat
mov
cs
ficomps
fst
rorb
jmp
push
cmove
jp
mov
adc
mov
xchg
jo
xor
dec
popf
mov
vmwrite
adc
push
xor
ret
movsb
adc
cmp
stc
lds
mov
push
sbb
jns
push
ret
and
mov
sbb
popa
movl
int
out
lock
inc
push
fwait
adc
adc
nop
pop
rclb
jbe
jle
xchg
in
pop
dec
or
fildl
pop
scas
jb
je
pop
push
loop
pusha
incb
mov
mov
lcall
sbb
and
sub
aaa
jb
inc
mov
out
dec
lahf
push
dec
mov
dec
mov
pusha
insl
data16
jmp
inc
dec
stos
mov
leave
clc
mov
cmp
push
and
sub
mov
clc
dec
add
in
out
add
sub
mov
or
fisttpl
fs
push
insb
inc
popa
lods
mov
addb
sbbb
xchg
adc
mov
int3
pop
jnp
fidivrl
mov
inc
jae
push
sbb
adc
js
shlb
mov
pop
jle
cli
mov
lock
mov
add
fwait
mov
fistps
into
pop
push
add
gs
loop
and
incb
fidivl
inc
jb
pop
iret
dec
push
sbb
inc
scas
jge,pn
lds
into
mov
pop
dec
in
add
repz
sbb
jp
inc
imul
dec
les
pop
or
ret
jnp
push
push
sahf
icebp
adc
mov
insl
push
push
jb
das
mov
das
out
leave
xchg
push
insb
repnz
pop
out
mul
test
mov
loop
xchg
jl
clc
repz
jne
inc
mov
mov
or
movsb
mov
mov
inc
insb
sarl
repnz
and
ror
and
loope
aaa
mov
scas
sahf
pop
hlt
mov
mov
inc
jmp
roll
adc
push
pusha
mov
xchg
add
repz
sbb
sub
inc
fisttps
push
lds
jg
mov
cmp
cs
and
loopne
jno
pop
adc
aam
add
sub
dec
test
add
jmp
ds
test
mov
in
bound
xchg
in
aam
out
xchg
sbb
inc
xor
xchg
jno
or
test
ja
jno
mulb
fmul
add
js
cmp
add
cmp
fnstcw
aaa
or
xchg
mov
xchg
lods
push
jns
pop
icebp
addr16
jl,pn
lock
jo
fcomps
mov
or
inc
hlt
mov
pop
test
mov
or
scas
scas
push
notl
pushf
jge
imul
adc
das
push
rcrb
clc
daa
adc
data16
daa
xchg
imul
fisubrs
jae
xchg
enter
stos
incb
or
rol
clc
call
or
and
xor
push
insl
or
dec
jmp
and
and
sbb
push
pusha
mov
mov
rcl
stos
stos
jge
stos
lods
int3
cmp
cwtl
cmp
rolb
rcr
adc
cmc
pop
mov
jmp
add
push
sub
ja
jmp
jnp
or
pop
push
loop
in
hlt
pop
mov
jb
pushf
aam
mov
sub
ja
lock
popf
out
mov
imul
dec
push
sbb
aad
icebp
xor
mov
cmpsl
jg
dec
cli
push
sub
jno
mov
inc
jge
rcl
out
sbb
xchg
ret
and
jmp
ret
mov
rorb
cwtl
lock
leave
adcl
insl
ljmp
sbb
cmpsl
jecxz
test
dec
cmp
inc
push
mov
cmc
stos
pop
les
jbe
pop
jp
divl
dec
mov
add
or
dec
lea
cmc
jle
and
xchg
sub
inc
mov
dec
inc
mov
cmp
push
in
sub
jg
lods
cmp
cmp
sub
add
movsl
ficoml
cwtl
iret
frstor
repz
dec
stos
lods
add
fisubs
aas
adc
mov
movsb
dec
fistl
ret
jecxz
sub
pushf
push
lret
xorl
test
notb
sbb
frstor
popa
mov
add
mov
adc
add
mov
pop
jmp
push
pusha
enter
aam
pop
xchg
pop
shlb
out
inc
fsubs
dec
enter
mov
hlt
lret
sbb
pop
and
xor
xor
push
pop
cmpsl
sub
movb
or
daa
das
mov
lds
orb
fsubl
gs
jmp
mov
add
mov
js
outsl
cmp
mov
repz
clc
loop
out
xor
leave
pushf
jg
leave
sbb
js
sub
arpl
mov
adc
sub
dec
lret
sbbb
mov
jmp
leave
shlb
mov
fisttps
jg
pop
cmpsb
in
add
jl
ret
test
into
push
pop
rorl
mov
jae
cmp
xor
lcall
aas
jecxz
push
xor
nop
mov
mov
fs
fidivrl
mov
inc
mov
loope
orl
mov
mov
popa
clc
icebp
dec
scas
mov
lock
outsl
iret
loopne
and
cmc
push
icebp
pop
pusha
lret
bound
and
dec
lahf
or
mov
xchg
adc
inc
push
pushf
xchg
das
inc
pop
and
cli
cmpsb
adc
pop
imul
pop
jl
pop
add
mov
popa
inc
enter
testl
cmp
out
push
inc
aad
jb
fstpt
out
nop
pop
je
mov
shrl
shrl
mov
cmpsb
mov
mov
add
aas
jp
push
mov
pop
je
imul
fisttpl
xchg
inc
pop
insb
ret
pop
ret
mov
push
mov
out
js
imul
sbb
mov
jns
lods
out
pop
aam
shrb
jmp
and
out
test
out
add
inc
and
and
sti
push
sub
clc
addr16
jno
nop
orl
cwtl
pusha
pushf
push
push
insb
adc
sub
push
lret
sbb
push
in
mov
sahf
test
cli
jns
or
bound
flds
adc
sub
cmp
out
sar
xchg
push
add
lahf
lea
in
sbb
test
lods
shl
lea
sbb
aas
out
mov
pop
sarb
cmp
dec
xchg
je
add
std
jbe
jp
cmp
fstpt
cltd
dec
cmp
jbe
hlt
andl
cmpsb
add
xchg
sub
test
in
jecxz
decl
push
fildll
addb
sub
pushw
es
aam
mov
mov
push
andl
cmpsb
jl
dec
lods
and
push
paddsw
lret
jmp
mov
and
test
mov
push
cmp
test
sub
sub
sbb
jmp
sub
pushf
mov
and
adc
in
xor
cmc
jl
xor
mov
std
rclb
dec
add
testl
hlt
ja
dec
mov
popf
pop
mov
add
jle
mov
dec
xor
idivb
inc
xchg
ljmp
mov
jnp
xor
lcall
jge
cmp
pop
cmp
fst
mov
imull
in
jle
outsb
rcll
sub
push
mov
test
aam
test
sbb
popa
pop
jp
lret
pop
addr16
inc
sbb
add
jo
shlb
mov
xchg
movsl
push
jl
mov
dec
jae
test
aad
xor
sub
aam
pop
cmpsb
add
ficoms
or
call
mov
lahf
insb
xor
sbb
idivl
and
cld
fistl
push
xor
dec
test
pop
in
jge
je
pop
mov
push
sbb
pop
xor
das
testl
into
icebp
jb
outsb
pop
fnstsw
add
repnz
cmpsb
ljmp
cmp
arpl
scas
in
inc
mov
fwait
test
fldcw
lods
or
aas
loopne
mov
popa
inc
ss
frstor
sbb
push
sbb
adc
mov
push
xor
lcall
pop
sub
divb
mov
repnz
dec
dec
xor
cmp
and
popf
adc
push
cmp
add
jmp
cmpsl
fidivrs
jle
sbb
pop
mov
pop
lcall
and
xchg
aad
mov
scas
les
sub
enter
test
roll
inc
data16
out
mov
mov
das
xchg
cmc
xchg
sub
lret
pusha
jecxz
pop
push
jae
jmp
lea
push
test
bound
xor
or
in
mov
stos
sarb
je
mov
jb
sub
push
mov
mov
sbb
cmp
cli
imul
ss
lock
add
out
stc
popf
lock
and
test
mov
sbb
xor
popa
push
push
cmp
mov
mov
ss
notb
dec
mov
aam
mov
or
xchg
push
sub
add
or
fs
sub
cli
stos
les
sub
das
popa
in
test
adc
jbe
mov
loope
addr16
dec
sbb
pop
popa
fimull
and
xchg
and
xor
icebp
push
pop
dec
nop
cmpsl
arpl
adc
mov
int
push
or
fisttps
sbb
sbb
add
xor
cmp
insl
and
pop
dec
pop
or
imul
dec
int3
movsl
mov
enter
pop
xchg
rolb
addl
cs
push
mov
aaa
int3
outsb
outsb
testl
xchg
stc
mov
xchg
and
es
out
pop
mov
xor
stos
mov
insl
push
jo
and
add
jmp
xchg
push
nop
sti
ficoml
push
add
incb
mov
call
cmp
xchg
push
inc
loopne
pop
adc
mov
test
stos
pop
pop
jmp
scas
cmp
add
sub
subb
push
cmovae
pop
sbb
xchg
daa
pop
enter
iret
jle
fisttpl
out
cli
xor
push
fwait
leave
fwait
imulb
sub
push
loope
shll
daa
imul
movsl
subl
pop
jno
int3
and
stos
adc
cmp
arpl
andl
inc
inc
mov
fprem1
jne
mov
dec
mov
repnz
inc
rol
or
scas
inc
xor
insl
inc
sarl
lods
out
or
out
fdecstp
fimull
enter
add
adc
scas
mov
fsubrp
cmpsb
push
xor
in
cmpxchg
jne
inc
lods
cwtl
test
mov
daa
inc
inc
loopne
stos
cmp
pop
or
lret
sub
xor
hlt
test
pop
sbb
stos
push
cli
arpl
fwait
mov
inc
inc
push
xor
repnz
sbb
mov
leave
rcll
imull
pop
sub
jp
ljmp
sub
jmp
or
mov
lock
pop
movsb
mov
adc
push
popa
ret
iret
push
dec
sub
ret
mov
mov
movsl
push
mov
cli
out
repnz
stos
inc
jbe
or
inc
or
fmulp
clc
and
out
sbb
into
mov
jbe
xchg
xchg
out
pop
mov
mov
sub
jae
jle
cli
movsl
fidivrs
adc
je
xchg
xchg
fcmovbe
scas
jle
stc
xchg
xchg
xor
and
add
jp
or
test
lods
sbb
xchg
dec
xchg
adc
xor
paddw
inc
xlat
ret
cmp
add
pop
mov
out
jl
enter
lds
sbb
std
jmp
fs
push
jmp
ffree
leave
jle
add
mov
dec
aam
cmp
mov
mov
xchg
test
test
in
sub
push
loope
mov
jo
adc
aad
stos
mov
mov
mov
or
arpl
bsf
dec
aad
je
jl
ds
jno
sarl
stos
or
pop
push
dec
xlat
cvtdq2ps
or
lcall
testb
cltd
pop
or
and
mov
rcll
aam
cmp
mov
cmp
insl
sarb
pop
hlt
js
sub
cmc
dec
jno
fdivs
add
mov
popa
adcl
ss
push
xor
push
sub
repnz
push
and
out
pop
mov
pop
or
ljmp
inc
loope
leave
mov
fs
jmp
pop
xchg
jae
jno
inc
mov
and
nop
pop
lods
cltd
xor
or
scas
cld
test
push
sbb
into
sbb
and
mov
cs
or
imul
ret
ret
pushl
mov
xor
or
xchg
in
jmp
data16
in
jg
imul
pop
dec
test
inc
aam
lret
sbb
scas
mov
bound
xchg
mov
add
fmull
mov
lds
sub
imul
incl
loope
sbb
jg
add
stos
adc
scas
mov
lret
fs
sbb
out
lods
mov
push
std
loope
adc
clc
mov
mov
cltd
outsl
mov
sub
insl
daa
ljmp
mov
les
xchg
push
jo
imul
lret
lea
lret
mov
enter
cld
jg
pusha
or
mov
mov
jns
rcrb
pop
sub
jmp
mov
cmp
fiaddl
fistl
mov
cltd
fcompl
mov
and
lret
stos
sub
push
xchg
add
aas
mul
push
cltd
ficoml
int3
iret
fldenv
mov
push
sbb
fwait
test
ret
testb
inc
cmovno
out
pop
or
aad
pop
ret
cmpsb
push
insb
xchg
popf
pushf
dec
testb
push
push
cmpsl
and
popf
pop
xlat
sbb
lods
mul
ret
push
pop
nop
shrb
cmp
xchg
les
jo
stc
sbb
hlt
lret
mov
loope
pop
insb
cltd
lahf
bnd
cli
in
sub
fs
lcall
add
add
adc
push
sbb
mov
clc
push
mov
adc
mov
cmc
cmp
jb
fisubs
in
jae
add
or
adc
fiaddl
lds
fcomip
std
or
lahf
push
sub
stc
sub
add
int3
jl
sbb
push
and
cmp
mov
push
add
mov
push
jne
jg
stos
lds
lds
sub
aad
sbb
les
idivl
inc
mov
dec
sarb
pop
mov
adc
outsb
imul
pop
pop
mov
sbb
push
leave
iret
xchg
ds
pop
test
push
ret
loope
lret
pop
nop
sub
dec
cmp
lahf
dec
inc
sub
roll
stc
dec
push
ljmp
and
xchg
dec
or
xchg
lcall
mov
mov
enter
fisttpl
movsb
and
xchg
mov
ja
fisubrl
mov
pop
mov
popa
xor
jne
mov
cmpsl
xor
iret
incb
outsl
jecxz
insb
cmp
fistpll
loope
in
jecxz
pop
int
or
cmp
orb
cli
cmp
adc
mov
int3
cmp
or
and
cmp
sbb
cmp
loop
sub
fisubs
sub
shll
xchg
out
popf
cmpsb
mov
push
das
rorb
mov
loope
dec
xchg
mov
adc
sbb
and
xchg
sbb
scas
sbb
push
pop
pusha
dec
outsl
leave
movsl
mov
mov
outsl
push
fucomi
add
stos
inc
int
gs
dec
stos
scas
or
lcall
fdivs
mov
adc
imul
enter
divl
and
inc
mov
stc
xor
mov
xor
out
repnz
push
cmp
inc
int
sub
push
loop
into
dec
in
push
fmuls
lahf
pop
xchg
adc
movsl
mov
mov
dec
sub
dec
mov
in
xchg
mov
sbb
add
add
pop
aad
mov
mov
add
test
and
mov
daa
sti
leave
mov
repz
jmp
push
xchg
mov
sbb
rolb
out
sbb
sti
mov
sbb
fwait
out
inc
jle
lods
adc
xchg
mov
outsl
pusha
cmpsl
cs
int
and
test
popa
js
inc
push
and
add
jno
xchg
push
stos
pop
mov
je
mov
in
loope
fwait
lret
inc
cmpsl
cmp
mov
cwtl
inc
dec
fdiv
xchg
add
enter
adc
pop
cltd
cld
fbstp
jae
sarb
rorb
add
js
jl
mov
mov
insb
shlb
fcompl
shrl
imul
orb
cmpl
mov
or
push
mov
gs
je
or
cmp
push
into
push
mov
pop
fs
jp
leave
into
and
jmp
pop
jmp
jbe
test
orb
out
ds
sbb
xchg
sub
cmpsl
stos
push
or
cld
dec
xchg
pop
loop
or
mov
pop
mov
or
mov
aam
lock
push
movsb
lea
add
ret
xchg
xchg
push
add
dec
mov
or
push
pop
fcom
or
push
jecxz
xchg
xchg
and
fcompl
xor
jp
mov
add
push
sub
mov
cmp
xchg
xchg
shll
mov
sbb
jecxz
pop
cmp
push
out
jge
enter
or
pop
push
int
mov
sti
dec
mov
mov
cmc
in
push
sub
push
mov
dec
push
fs
inc
cmp
adc
push
out
daa
mov
jns
cli
dec
sub
outsb
outsl
aad
imul
and
out
movsl
popa
sbb
pushf
cmc
shrb
inc
call
lock
pop
inc
mov
or
cmp
pusha
cld
int
adc
xchg
xor
mov
pop
pop
mov
out
je
cmp
aaa
or
testb
xchg
fisubl
ret
push
jne
fs
and
jecxz
pop
mov
ds
inc
push
dec
gs
xchg
hlt
movsl
lret
jb
pop
icebp
sti
imul
jbe
mov
cmp
enter
les
jns
gs
add
movsb
mov
pop
sub
xchg
scas
jo
out
adcl
jnp
movsb
cmp
and
enter
fadd
rorb
roll
test
arpl
or
or
and
mov
out
mull
scas
mov
dec
pop
sub
mov
fadds
lahf
outsl
mov
sbb
fmulp
jl
mov
mov
jae
dec
test
nop
aam
sti
cmp
fnstsw
pop
xchg
cwtl
inc
xor
dec
jae
imul
jne
mov
loope
subl
xor
xlat
aam
std
sbb
test
add
cmpsb
insl
mov
in
adc
neg
outsl
jb
popf
and
sub
fidivs
jmp
lods
ds
jno
adc
sbb
pusha
xchg
es
out
jge
repnz
addb
in
lods
imul
popf
lock
xor
cmpb
nop
xchg
rolb
movsb
jge
add
mov
into
sbb
jle
bound
cmpsb
lcall
mov
ja
sahf
xchg
cmp
repnz
div
leave
jo
jb
xor
aam
ror
adc
test
push
or
out
mov
arpl
jb
xchg
mov
jmp
pop
gs
fildl
mov
jmp
mov
es
xor
push
test
mov
hlt
or
add
fdivrl
jns
jg
mov
rcrl
or
jae
mov
outsl
and
rorl
jne
aaa
pop
push
adc
ret
movsb
cmpsl
ficoml
sbb
cmp
or
out
mov
push
xchg
test
cmpsb
test
push
adc
sub
push
xchg
push
xchg
lock
mov
jno
or
out
mov
sub
inc
mov
cs
sbb
add
pop
pusha
rclb
and
lret
cwtl
sub
enter
cmpsb
test
lods
and
test
mov
adc
inc
cmp
ror
pop
push
pop
insl
out
lcall
rorb
sarb
or
or
xor
jle
xchg
scas
dec
jne
mov
cli
or
insb
push
shl
sahf
std
sbb
sbb
add
jnp
mov
fs
push
ljmp
mov
lcall
sub
in
mov
enter
mov
repnz
mov
and
stos
xlat
data16
ja
or
scas
sub
sbb
xor
lock
popf
cmp
xchg
imul
dec
out
lods
test
jae
leave
push
dec
inc
cltd
mov
or
pop
iret
shlb
mov
iret
and
shrb
dec
jl
pop
add
enter
daa
clc
dec
std
xor
push
sub
adc
scas
mov
mov
test
int
pop
dec
jnp
sub
mov
push
mov
xchg
aad
xor
mov
popf
mov
aad
test
add
div
aas
dec
and
pusha
enter
pop
sub
add
xchg
test
icebp
int3
mov
mov
add
bound
outsl
shll
xlat
out
mov
fidivrs
out
dec
cld
gs
cmp
adc
test
mov
das
ja
jge
adc
pop
pusha
adc
add
xor
int3
testb
xchg
sub
aam
fists
fimuls
mov
nop
mov
mov
mov
les
aam
mov
mov
test
mov
stos
int
mov
push
test
shlb
cwtl
and
push
frndint
dec
dec
mov
push
mov
xchg
mulb
push
les
mov
xor
xchg
mov
loopne
xchg
jno
rorl
lret
rcll
stos
jp
pop
cltd
nop
inc
mov
push
mov
pop
inc
cmpl
cs
nop
sub
cmp
xchg
test
xchg
add
leave
out
push
call
mov
jae
sub
xchg
cmpsl
sub
sahf
mov
jae
popa
mov
movsb
outsb
enter
aaa
inc
jl
mov
jl
shl
xor
adc
bound
mov
in
push
adc
testb
jmp
jl
mov
sahf
movsl
das
out
inc
addr16
mov
outsb
cmp
loop
pop
add
popa
and
out
das
cmp
ret
outsb
lret
jmp
or
pop
push
imul
aas
jle
lea
outsl
xchg
jge
inc
pop
fmuls
adc
push
mov
cmpsl
dec
repz
int
add
xor
dec
jle
in
bound
addr16
or
pop
std
int
xchg
in
xor
pop
decl
dec
or
lods
cmc
xchg
mov
jge
stc
sub
mov
loope
fmul
jmp
imul
mov
lret
lret
add
scas
leave
insb
sbb
lods
stos
jae
inc
mov
insl
int
inc
pushf
pop
dec
xor
fidivl
testb
push
pop
jno
int3
cmc
stos
mov
fcoml
std
push
scas
add
jnp
inc
xchg
xchg
dec
cld
std
stc
mov
arpl
fists
sub
imul
scas
adc
xchg
rcrb
sub
pop
outsl
fstpt
sbb
call
jg
mov
rorb
dec
mov
adc
in
rcl
pop
imul
add
aas
adc
scas
cmpsb
xor
cwtl
call
cmp
ds
daa
push
stos
cmc
loop
lahf
movsb
movsb
lock
xor
stos
idivl
inc
addr16
dec
sarl
push
stc
repnz
fsin
sub
sbb
adcl
xchg
or
arpl
or
add
inc
sbb
jp
in
jo
arpl
mov
and
cld
add
or
addb
cmp
mov
pop
popa
sbb
jne
cmp
fmull
aam
outsb
jecxz
int
and
mov
mov
out
jmp
das
jecxz
jecxz
push
jnp
jne
push
popl
mov
icebp
xchg
dec
je
xchg
mov
pop
jno
aam
push
je
jne
test
pop
nop
xchg
push
mov
mov
rclb
xor
imul
clc
inc
mov
cmp
fnstsw
lods
jo
xlat
xlat
xchg
mov
lds
cli
aad
sub
repz
repz
iret
repz
mov
jmp
jl
pop
xchg
jmp
lret
cmp
cmp
inc
fnstsw
aaa
pusha
rolb
fcmovbe
inc
cld
fwait
aam
add
negb
jle
daa
int3
inc
out
loop
outsb
cld
jmp
lods
les
mov
or
vmptrld
cwtl
bound
fimuls
cmp
pop
mov
sub
fcomip
jl
ret
loopne
out
dec
ret
prefetch
jle
in
sub
or
sti
xor
xor
lea
and
int3
push
shrl
jb
jbe
mov
xchg
mov
bound
enter
test
push
test
or
aas
lea
aam
adc
fcoml
les
fisubrl
fnstsw
sub
popa
pop
out
aam
cwtl
scas
test
js
sub
pop
sub
xchg
ficompl
dec
xchg
insb
jmp
pop
mov
mov
idiv
adc
stos
sbb
cltd
int
shll
jecxz
inc
cmpsl
pop
xchg
imul
jmp
xchg
dec
lahf
mov
js
xchg
mov
lock
sbb
int
add
andl
add
sbb
xlat
add
popa
pop
mov
pop
cmpsl
xchg
pop
add
mov
mov
js
cmp
inc
lods
fnstsw
or
mov
insb
sbb
dec
mov
mov
pushf
shrl
out
xchg
mov
jmp
lret
faddl
xor
or
fcom
sbb
and
push
mov
shl
outsl
lcall
jle
jmp
and
out
jl
stos
lea
xlat
insl
pop
in
mov
inc
mov
and
push
outsl
cli
cmp
push
orl
xchg
sbb
xchg
cs
sti
nop
push
test
or
scas
xchg
xchg
js
xchg
push
lea
mov
jbe
fwait
and
loopne
xchg
cmpsb
aaa
add
sahf
cmp
insb
mov
jg
in
test
lcall
testl
cmp
rorl
mov
fs
mov
mov
cmp
shll
inc
pop
pop
jno
ljmp
adc
in
loop
xor
aad
xchg
call
insb
cmp
push
sub
sbb
pushf
shl
dec
cmp
mov
test
mov
adc
dec
and
push
sbb
sbb
ret
mov
or
jp
xor
sbb
sbb
adc
movsb
sbb
outsb
pop
sbb
fcoms
mov
mov
psllq
inc
imul
cmp
gs
dec
push
out
jo
sti
in
push
test
inc
popa
xor
fldenv
dec
popa
fdivrs
call
lds
sbb
out
jmp
jae
inc
xor
dec
adc
mov
enter
jecxz
push
lcall
mov
test
cmp
into
cmp
inc
lahf
cltd
outsl
dec
lock
lods
pop
outsb
sbb
lret
or
xchg
test
arpl
mov
ss
pushf
adc
xlat
aas
mov
and
push
sub
cmp
aad
sbb
loop
and
or
les
add
call
inc
cmc
mov
sbb
fsts
adc
mov
mov
jecxz
inc
sub
cmc
adc
dec
js
outsl
clc
and
je
ret
out
pop
or
out
jle
jg
jp
fcmovnbe
mov
adc
sbb
mov
push
outsb
cli
mov
call
adc
out
jns
mov
push
mov
andl
fdivrl
lret
mov
sub
push
cmp
adc
stos
fs
cli
ss
adc
push
ret
mov
mov
inc
mov
in
sbb
add
fcmovu
pop
stos
lret
mov
mov
stc
mov
ret
ds
aas
cs
mov
mov
mov
pusha
jae
cmp
inc
in
pop
cmp
push
dec
cmc
jmp
mov
cmp
inc
inc
xchg
cmp
push
fildl
sub
aam
ljmp
jae
or
mov
movsb
pop
cmp
add
test
rclb
xor
jne
sbb
fists
xor
fdivl
mov
loopne
dec
icebp
jg
dec
or
mov
outsl
dec
clc
xlat
push
jno
jle
xlat
pusha
ficompl
orl
fimull
add
pop
pop
aam
sbb
add
nop
sbb
xchg
cmp
fstpl
shrl
mov
or
push
cmp
rclb
xor
loop
xor
push
xor
or
push
mov
lods
jp
push
into
loopne
cmc
in
jo
or
push
xorl
repnz
mov
stos
or
sub
pushf
inc
mov
mov
loope
xor
in
rolb
pushf
cmpsl
mov
push
xor
push
shlb
lcall
fistpll
and
cmpsb
js
shl
out
outsb
mov
push
pop
loop
pop
jmp
xchg
mov
mov
and
push
mov
sbb
test
pop
adc
outsl
fdivl
popa
je
adc
pushf
jbe
pop
cmp
jp
add
mov
dec
jge
add
movsl
xchg
and
dec
xor
test
cmp
mov
std
push
stc
dec
divl
inc
push
cs
iret
pop
mov
test
pop
fldcw
ret
int3
fildll
or
push
xor
mov
rolb
mov
shr
mov
mov
add
test
xor
add
or
cmpsl
sub
jle
or
push
cmp
fldcw
out
inc
repnz
jl
add
inc
gs
orb
test
inc
pop
adc
enter
xchg
cltd
jmp
sti
inc
popa
pop
mov
jp
mov
fxch
inc
leave
cmc
mov
aas
jbe
shll
pop
std
sbb
cmp
inc
stos
cmc
sti
subb
fnstenv
stos
jb
xchg
cmpsb
mov
add
jge
sarl
aad
sahf
sbb
push
xchg
loop
std
pop
out
push
lret
inc
movl
outsb
pushl
mov
mov
mov
cmpsl
mov
call
xchg
mov
xor
jae
nop
addr16
int
fnstenv
xor
cmp
mov
push
mov
movsl
popa
lods
loopne
add
nop
xchg
rep
cmp
xchg
adcb
mov
in
jp
stos
xor
test
sub
insl
loope
ret
int
jg
dec
and
or
out
ljmp
lahf
sbb
clc
adc
dec
xorb
dec
xor
hlt
dec
or
int3
cmp
arpl
or
js
mov
arpl
jg
ss
cmp
and
adc
addr16
mov
pop
sub
sbb
adc
and
sub
add
mov
and
andb
sahf
int
icebp
out
xchg
call
push
mov
flds
add
imul
mov
aaa
adcl
push
sub
and
cltd
add
mov
mov
fcmovnu
lret
push
leave
mov
in
movsl
pop
into
or
sahf
ds
dec
incb
insb
mov
in
fisubs
les
pop
lahf
call
xor
sbb
inc
xchg
stos
sub
jbe
aad
mov
int
cmp
xor
mov
adc
movb
and
mov
jge
cltd
in
or
pop
and
push
dec
jle
inc
jb
mov
sbb
nop
sbbl
addr16
insb
mov
fistps
pop
cs
mov
cwtl
call
and
mulb
sub
movsb
cmpsl
jle
adc
mov
js
and
xchg
xchg
into
cmp
sub
adc
push
jge
lret
vpor
insl
arpl
mov
adc
pop
sar
jg
dec
pop
sbb
iret
adc
cmp
psrlq
outsl
sbb
nop
fisubrs
push
shl
jle
loope
ss
sbb
lret
es
sbb
les
cltd
cmpl
cmc
sahf
push
jmp
cs
inc
fstl
lea
mov
inc
sub
add
and
daa
or
adc
pop
int3
mov
push
mov
stos
lahf
inc
push
imul
jbe
push
and
popa
dec
sub
js
in
push
out
in
loope
out
mov
mov
add
push
lds
mov
sbb
or
jne
sbb
mov
jns
dec
sti
mov
or
bnd
mov
push
xor
call
or
into
aam
sarb
loopne
xchg
in
mov
mov
adc
addb
xchg
pop
dec
xchg
mov
test
js
adcl
addr16
mov
sub
mov
les
add
dec
inc
out
push
and
pushf
dec
stos
sarl
jns
push
mov
fcomps
divl
insb
out
lock
arpl
xchg
mov
fwait
lea
jbe
outsb
mov
or
cmpsl
cld
cmpsb
mov
pop
xor
vmwrite
insb
xor
test
dec
or
fsubrp
cmpsl
xchg
into
xchg
lcall
clc
icebp
push
inc
jl
jl
xchg
div
leave
mov
leave
or
lret
dec
leave
pop
test
popa
aad
or
adc
pop
loope
outsb
fisubl
xchg
push
adc
out
aad
xorb
into
jne
pop
jl
xor
int3
cmp
dec
sbb
xchg
dec
jecxz
mov
jle,pt
dec
scas
notl
jmp
cmc
lds
mov
push
adc
pop
mov
cld
mov
icebp
mov
jmp
lahf
sbb
lea
bnd
xor
test
push
pop
testb
add
push
ljmp
std
sbb
stc
sub
adc
push
or
movsb
mov
jecxz
inc
outsl
cmp
jnp
push
fsubrp
idivb
pop
add
testl
enter
adc
shll
addb
add
lret
dec
shlb
or
xor
mov
rcr
addb
fcomip
push
sti
sub
push
jmp
push
fisubl
cmp
adc
cmp
orb
mov
subl
mov
imul
lods
arpl
jp
sti
mov
insl
adc
jmp
adc
inc
and
sub
push
pop
mov
xchg
ret
stos
in
test
out
js
or
gs
cmc
jae
mov
xchg
lret
fstps
jmp
mov
dec
and
sub
jne
lds
in
cs
sub
in
inc
stos
hlt
jbe
jmp
iret
loope
loope,pn
push
push
sbb
inc
mov
sub
adc
scas
mov
dec
cmp
inc
cmp
cmp
divl
cmp
jg
cltd
mov
aaa
cli
and
fcompl
add
repnz
xchg
ret
dec
fs
leave
or
mov
dec
sbb
cmp
shlb
rep
lret
cmp
dec
sbb
shl
mov
shlb
repz
jl
mov
mov
leave
in
xlat
inc
push
cld
mov
mov
lds
jle
and
mov
mov
daa
push
mov
out
jno
cltd
jo
inc
fs
xorl
adc
aas
or
adc
or
inc
lods
add
adc
jns
scas
sahf
int
shlb
sti
cmpsb
jae
aas
push
es
cmp
add
push
xchg
lret
clc
mov
mov
pop
repnz
push
adc
and
adc
aam
push
sti
or
sbb
mov
xor
mov
sti
cmpb
sarb
jg
mov
inc
sub
xchg
add
imul
test
arpl
push
sub
fstpl
pushf
mov
aam
imul
add
psllw
mov
push
sbb
lret
cmpsl
jge
mov
push
cmp
hlt
lock
lods
popl
js
cmc
mov
aam
sbb
add
mov
mov
lea
jae
outsl
xor
mov
ljmp
dec
sbb
sub
push
out
jecxz
out
test
andl
je
out
movsb
pop
lret
pop
cs
push
jge
fdiv
lcall
sub
xchg
add
outsb
shlb
push
xchg
lret
push
inc
mov
ljmp
cmp
in
aaa
outsb
jno
jp
push
arpl
mov
xorl
or
push
xlat
push
or
into
inc
pushf
scas
mov
xor
dec
insl
add
and
jo
test
mov
and
and
lahf
les
into
call
inc
mov
ljmp
add
add
cmp
bswap
jo
mov
idivb
push
mov
daa
fs
dec
sbb
xchg
pop
dec
jecxz
or
cmpsl
mov
xor
lods
or
pop
inc
sahf
sub
add
inc
jne
xchg
cs
push
lcall
movsb
sbb
out
add
inc
enter
mov
or
sbb
or
je
or
add
xchg
xchg
mov
ret
lods
out
cmp
jg
fdivr
pop
sub
jns
push
inc
push
dec
movsl
imulb
lods
fstpt
add
call
and
xchg
bound
jl
xor
mov
mov
jle
inc
or
cmp
jge
xchg
into
xchg
movl
cmpsb
or
popa
loope
je
push
cmp
test
push
lock
mov
jnp
or
inc
mov
pop
mov
roll
mov
add
clc
ljmp
or
inc
pushf
lahf
inc
nop
inc
mov
xchg
xchg
push
std
aad
les
jae
lahf
pop
outsb
das
mov
inc
jae
push
or
inc
mov
or
out
outsb
loopne
dec
xchg
pop
or
or
movb
dec
mov
arpl
jle
cltd
jns
inc
or
and
jp
jmp
repz
pusha
xor
jb
lds
shl
stc
sub
daa
jge
repnz
into
cli
ficomps
scas
gs
enter
loop
jmp
jge
sub
sub
imul
aaa
stos
pop
mov
jne
push
sbb
repnz
push
xchg
fcmovne
cmpsb
sub
clc
test
inc
hlt
pop
and
push
push
les
loopne
pushf
rorl
ss
adc
pop
js
insl
jmp
sbb
xor
std
and
cmp
int
xor
sub
jle
jbe
adc
test
pop
mov
sub
cmpsb
dec
sbb
push
inc
arpl
les
je
pop
in
ret
mov
cmp
clc
fnsave
push
imul
cmp
in
jmp
push
inc
out
sahf
divl
stos
dec
mov
xchg
jg
iret
ret
outsb
aam
mov
das
mov
sub
aaa
pop
hlt
scas
or
outsl
insb
shrb
inc
push
push
and
out
popf
in
mov
decb
jecxz
sub
jns
mul
sub
add
loope
adc
add
jle
pop
enter
std
pop
cltd
add
jecxz
call
nop
add
imulb
insl
push
jle
outsb
mov
ret
adc
sbb
faddl
js
aam
mov
jne
mov
lods
stc
and
mov
pusha
and
dec
and
mov
test
mov
pop
out
or
mov
fiaddl
xchg
not
mov
cmp
or
pop
fists
ja
jb
adc
dec
cmp
jecxz
mov
or
mov
push
dec
mov
fstpt
and
jno
fsts
repz
pop
mov
aas
dec
xor
pop
inc
stos
sbb
jne
daa
xchg
and
dec
loope
push
or
fstpl
or
enter
sub
and
sbb
adc
lea
inc
mov
mov
xor
pop
ficomps
or
out
sti
inc
mov
lahf
xchg
jne
xchg
push
adcl
aaa
mulb
jae
add
inc
sub
das
xor
xor
xor
stos
add
inc
mov
adc
cmp
mov
cmp
sbb
cmp
dec
es
pop
inc
xor
outsb
cli
cmp
adc
sub
ljmp
andl
cmp
adc
outsl
shrb
and
pop
mov
add
dec
lret
js
mov
fbld
pop
push
imul
mov
imul
mov
cmpb
shrl
outsl
jg
jg
jmp
lahf
cmpl
fmuls
jmp
adc
mov
dec
push
jl
inc
inc
pop
jnp
mov
inc
sarl
lahf
adc
fs
push
roll
and
test
jo
iret
dec
lcall
hlt
fwait
mov
outsl
pushf
jge
inc
sahf
insl
adc
fwait
xchg
adc
decb
jns
cmp
inc
pop
fs
dec
loope
add
inc
cmc
loopne
inc
jbe
add
loop
popf
cld
divl
mov
cli
pusha
ljmp
int
lret
adc
dec
mov
inc
push
imul
jl
adc
ficompl
roll
or
push
mov
fnstenv
sub
jo
in
outsl
lock
dec
push
jb
inc
addr16
dec
push
xor
rcrb
sbb
bound
inc
sub
inc
je
push
data16
dec
adc
or
movsl
test
add
jb
jecxz
fildll
mov
mov
sbb
jae
test
popfw
adc
or
xor
es
call
arpl
pop
push
mov
dec
fs
fwait
cmp
jg
sub
aas
scas
xchg
jb
lret
cli
ljmp
mov
add
mov
int
rol
loop
xchg
mov
inc
in
xorl
mov
scas
mov
jo
xchg
ret
jns
xor
fdivs
push
leave
mov
jns
repz
inc
fisubrs
negl
and
in
mov
jo
lea
jmp
movsb
cmp
xchg
test
or
jne
loope
cli
test
stos
pop
gs
xor
test
rolb
fs
sbb
lret
jbe
or
jecxz
rorl
adc
xlat
push
and
das
fstl
push
pop
bound
mov
sbb
hlt
dec
imull
mov
jle
push
sbb
scas
xchg
pushf
xchg
push
sbb
push
pop
sbb
dec
add
lods
pop
mov
push
fwait
shrl
jae
pop
sti
jns
xlat
mov
inc
imull
xchg
xchg
into
cwtl
addr16
jno
fwait
xchg
mov
xlat
xchg
mov
mov
mov
jne
mov
jmp
mov
int3
lods
push
adc
cmp
sbb
xlat
mov
xchg
adc
mov
mov
jl
mov
dec
cmpl
push
mov
cmp
jne
fdivl
loope
mov
leave
inc
ss
dec
in
jae
mov
fistpl
xchg
dec
popf
daa
xchg
push
xchg
push
mov
mov
ds
jg
or
mov
mov
push
mov
xor
popa
xchg
sbb
je
loopne
inc
dec
mov
das
lock
or
lds
sub
sub
bound
and
mov
lds
inc
test
inc
xchg
mov
xor
in
lds
dec
ss
movsl
inc
adc
in
fisubs
jnp
mov
aam
sub
testb
stc
repnz
imul
mov
cld
int
enter
pop
test
mov
data16
mov
xor
fwait
loop
add
xchg
mov
push
cmp
loope
sbb
and
fisubs
shrb
add
or
imul
dec
aas
int
lds
push
stc
popa
outsb
pop
inc
test
inc
push
xor
arpl
cmc
bound
dec
or
mov
xchg
test
vandnps
dec
mov
adc
inc
cwtl
lahf
ja
es
inc
and
push
push
adc
lret
test
mov
gs
inc
imul
mov
fcmovu
inc
scas
inc
mov
cs
mov
pushf
sbb
cs
and
sbb
lret
call
xchg
ret
jg
or
mov
sub
dec
mov
mov
push
xchg
mov
xchg
mov
cmpsl
add
pushf
test
mov
aaa
repnz
mov
out
insb
rcll
in
mov
mov
or
xchg
mov
dec
lcall
push
or
xor
xchg
jbe
pusha
das
jno
dec
jp
lods
jecxz
jae
xor
out
xor
movsl
out
mov
pop
add
cmpsl
hlt
push
mov
mov
cli
bound
xchg
xchg
jge
repnz
sbb
xchg
mov
gs
xor
pop
loopne
add
fsts
cmp
loope
es
adc
fisubrs
in
inc
adc
push
mov
jge
hlt
mov
mov
das
mov
ror
jae
sub
jl
dec
das
and
cmp
dec
cld
fstps
sub
mov
cs
hlt
subb
jo
mov
gs
mov
mov
cmp
cltd
test
sub
js
mov
jecxz
sub
sbbb
cli
mov
fcompl
shl
jne
stos
bound
jo
insb
mov
xor
ja
cli
or
push
rorl
movsb
adc
sub
inc
jge
gs
out
or
imulb
push
sub
mov
inc
xchg
mov
mov
stos
cmpsl
outsl
jge
add
jo
in
outsb
ja
inc
leave
movsl
cs
mov
ljmp
pop
fbld
cmp
push
add
shlb
out
xchg
and
mov
gs
mov
ss
mov
mov
xchg
cmpl
adc
testb
sbb
sbb
xchg
add
mov
sbb
lahf
jno
push
out
cmp
adc
out
loope
ss
imul
das
lock
mov
outsb
jmp
mov
adc
je
jbe
mov
jo
mov
pop
pop
xor
repnz
dec
dec
mov
xchg
and
or
out
and
sbb
push
xchg
cmp
scas
aad
and
and
lock
pushf
daa
dec
dec
inc
mov
loope
outsb
lods
es
incb
lret
and
sti
mov
mov
pop
fnstsw
leave
shufps
aad
sub
adc
sub
test
dec
sub
or
sbb
and
or
sti
pop
loope
cmp
push
xchg
in
cli
movsb
ds
or
pop
inc
pop
insl
ret
mov
cmp
mov
cs
add
mov
fnstenv
insl
cmpsl
mov
xchg
mov
cmp
cmpsl
pop
jb
xor
and
add
roll
or
aad
faddp
loope
insl
icebp
jmp
mov
loop
mov
scas
sbb
sub
fdiv
dec
nop
gs
insl
bound
popf
test
mov
xchg
dec
sti
js
fidivs
cmp
mov
out
xchg
outsb
sub
popa
jp
mov
repnz
insb
ljmp
ja
pop
jns
insl
decb
gs
lods
ss
mov
ret
sub
nop
fdivr
in
pop
dec
add
push
hlt
rcrb
inc
jne
lds
jecxz
fstp
insb
cli
cmp
ja
xor
pop
and
lcall
sbb
jmp
and
mov
mov
mov
dec
or
mov
pop
jbe
or
scas
add
mov
jecxz
ret
xor
inc
inc
pop
icebp
push
adc
sub
sti
lods
daa
jecxz
xor
pop
jl
out
nop
mov
pushw
cli
mov
xchg
jmp
mov
adc
or
stos
imul
lcall
repz
aas
mov
out
fcmovb
mov
push
pop
or
fwait
sbb
daa
mov
or
loope
ror
pop
xlat
mov
lods
lret
mov
pop
and
cltd
outsb
and
and
es
loope
pop
imul
xlat
cs
push
fxch
sahf
enter
orb
sbb
sub
cmc
xchg
lcall
push
ret
test
addb
xor
xlat
jg
dec
pop
roll
inc
fistpl
test
stos
jg
mov
jp
mov
int3
shll
jne
pop
test
push
or
call
push
js
pushl
aas
mov
lret
cld
jne
push
push
cld
test
lods
mov
jmp
fisubs
inc
imull
and
cwtl
push
lea
push
sbb
fwait
jb
or
movsl
int3
xchg
cmpsl
daa
aaa
fldcw
sahf
inc
mov
pop
jns
push
sbb
insl
and
fisttps
jb
lcall
mov
sub
pop
adc
fcmovne
lret
mov
insl
popf
dec
xor
sub
in
push
jae
cwtl
inc
xorl
xor
sub
inc
movsl
pop
call
jnp
pop
sub
add
inc
fisubl
and
sbb
divl
xchg
cli
sub
je
sub
das
cmp
pushf
std
xchg
fstpl
jno
leave
rorb
imul
out
ret
leave
mov
xchg
or
sbb
or
movsl
sbb
pop
je
mov
addr16
dec
inc
or
in
sbb
mov
fadds
cmpl
add
sbb
pushf
xor
lahf
add
or
test
or
fs
mov
orb
adc
dec
cltd
push
xchg
mov
test
mov
das
ja
dec
lahf
sarl
cld
cltd
xor
stos
push
add
mov
push
aas
pop
adc
leave
lock
add
pushf
jecxz
ret
xchg
adc
mov
adc
sbb
mov
xchg
sub
inc
lds
add
es
mov
mov
into
and
mov
pop
ret
xchg
dec
loopne
in
icebp
dec
out
rorb
push
add
cmpsb
and
sub
push
scas
les
out
aad
sbb
or
dec
sbb
inc
add
cld
mov
test
ficoms
dec
mov
movsl
and
les
das
cld
leave
loope
add
xor
divb
sbb
gs
stc
mov
cmp
out
sub
lcall
xchg
outsl
xor
lret
dec
add
rcrl
inc
std
out
xor
je
pushf
dec
mov
shr
adc
adc
loope
fdivrs
dec
xchg
inc
inc
mov
pushf
lock
ret
push
pop
sbb
cltd
mov
lods
push
and
xchg
inc
pop
adc
cltd
inc
fiadds
push
addr16
xchg
pop
or
push
dec
and
mov
ret
jne
lds
and
push
jecxz
push
lcall
push
or
jo
push
das
arpl
xor
sub
rorl
lcall
or
bound
cmp
incl
movsb
imul
pop
lock
es
add
inc
lds
and
push
cli
push
jae
arpl
push
jno
inc
adc
leave
pop
mov
adc
xlat
fiaddl
jg
jg
sbb
or
add
mov
popf
nop
add
bound
scas
sbb
mov
mov
xchg
xchg
test
inc
inc
xchg
cmp
jne
js
add
or
sbb
add
les
xchg
or
daa
sti
inc
leave
popa
fdivs
lods
enter
fwait
leave
data16
or
mov
and
lahf
lods
sbb
testl
xor
jle
mov
xor
das
xor
inc
mov
jp
mov
pop
inc
jmp
mov
repz
pop
pushl
pusha
into
pop
imul
jnp
lret
xor
enter
push
enter
cwtl
add
adc
adc
add
loope
cs
push
sbb
in
std
jbe
sub
gs
sbb
push
je
pop
sbb
inc
mov
dec
fwait
setnp
outsl
jbe
jle
and
add
aaa
push
mov
fisubrl
notl
out
test
push
or
scas
mov
jb
call
jmp
sbb
cmova
enter
iret
lock
xchg
pusha
mov
mov
aam
in
mov
jge
pop
orb
call
pop
xchg
inc
dec
shr
mov
cld
jae
aad
bound
sbb
dec
push
addr16
pop
outsb
jns
std
xchg
pop
addr16
xchg
sar
es
jnp
dec
pop
mov
shlb
inc
lret
loopne
in
inc
mov
shll
test
rcrl
fcompl
xchg
cmp
out
jecxz
adc
rcll
inc
and
adc
xchg
enter
pushf
dec
add
jo
popl
push
push
iret
jnp
and
dec
mov
subb
out
push
pusha
pop
jnp
add
ja
xchg
dec
xchg
in
clc
xor
data16
ss
cmp
xor
xchg
sub
jno
mov
ja,pt
or
out
jo
jnp
int3
push
sbbl
lcall
scas
jp
fiadds
aam
int3
xchg
je
adc
movsl
int3
cmc
mov
sbb
add
sbb
add
sub
cmpsb
sti
sbb
mov
jb
ds
sti
and
outsl
push
loopne
adc
lret
ds
mul
int
lock
sub
cwtl
mov
sbb
jo
add
xchg
movsb
ficomps
pop
mov
cli
into
and
mov
dec
push
jb
fs
mov
aaa
hlt
insl
push
jns
arpl
xor
jle
xorl
push
imul
mov
mov
js
add
mov
cmpsb
aaa
adc
xorl
cltd
push
jb
push
push
add
mov
add
es
test
aad
inc
xchg
out
stos
inc
aad
ja
mov
shll
jmp
lret
sub
fiaddl
ror
shll
arpl
test
hlt
or
scas
std
shrb
iret
add
add
insb
xchg
outsb
jmp
mov
dec
fidivrs
push
jbe
test
mov
and
mov
mov
aad
xchg
push
test
xor
cmp
dec
sub
lods
pop
data16
daa
loopne
add
cmpl
es
pop
rcrl
or
aaa
pop
stos
push
and
aad
in
shlb
lods
in
xchg
mov
add
data16
add
jle
cmc
cwtl
call
sbb
push
jne
sub
fs
jns
sbb
stos
test
scas
fcoml
adc
nop
js
sbb
int
pop
and
and
dec
adc
and
push
subl
sahf
mov
mov
adc
adc
and
mov
das
jae
cmp
mov
mov
js
xor
fimull
xchg
sub
out
inc
out
or
dec
into
data16
pop
push
push
sahf
adc
aam
cs
mov
subl
dec
bswap
ds
adc
xchg
add
test
stos
xchg
mov
lahf
xchg
jl
mov
cld
xlat
adc
in
pop
mov
cmc
aaa
int
pop
jmp
lret
enter
xchg
dec
push
and
stos
imul
mov
xlat
sbb
or
adc
mov
sarb
inc
test
jp
jle
dec
inc
roll
into
fcoms
dec
sbb
addr16
lds
imul
shl
test
xor
scas
inc
push
pushf
das
pop
push
sti
lods
xor
leave
stos
call
das
add
fcmovnb
xorl
mov
pop
int3
cmp
or
aaa
cmp
sbb
sbb
inc
xor
cs
stc
mov
imul
add
cmp
js
jle
leave
test
pop
cmpsl
jl
pusha
imul
sti
sbbb
ret
and
push
iret
mov
not
xchg
mov
pop
jo
and
pop
fstpt
gs
add
adc
cmp
les
enter
in
divl
int3
addl
xchg
outsb
sbb
pushf
or
es
adc
ds
cmp
add
mov
outsb
and
mov
and
popf
cmp
lds
orl
push
xor
jecxz
hlt
fldl2e
mov
stos
mov
pusha
dec
mov
scas
lock
dec
xor
fiadds
jbe
fists
push
mov
adc
sub
mov
pop
idivl
fldl
stos
ljmp
inc
xlat
mov
pushf
in
sub
sub
nop
out
rclb
addr16
std
xchg
or
in
inc
cmp
addb
movl
lock
push
aad
mov
jp
stc
insb
addr16
ja
insl
inc
mov
pop
int3
cli
mov
mov
sbb
sbb
mov
daa
push
aad
jmp
jbe
out
stos
mov
xchg
sbb
aam
push
out
adc
mov
sbb
mov
inc
inc
subb
xor
fistpll
repnz
aad
xchg
sub
dec
lock
mov
inc
fiaddl
xor
mov
jle
rolb
mov
pop
mov
sahf
pusha
dec
dec
decb
cmp
pop
pop
das
inc
loope
inc
in
cltd
xchg
pop
cmp
xor
fadd
movsb
fcoml
lcall
add
push
cmpb
dec
mov
fbld
mov
jne
adc
jnp
sub
test
aaa
ja
aad
rorl
imul
adc
inc
out
test
xchg
xchg
fldcw
push
mov
shll
mov
dec
push
pop
lods
mov
xor
test
rorb
int
imul
dec
cltd
inc
pop
movsb
adcl
xchg
inc
mov
dec
fsubs
pusha
push
repnz
and
daa
adc
das
aad
xlat
jae
or
ljmp
mov
fwait
aam
or
adc
btl
repnz
enter
xchg
stos
cli
rorl
out
imul
adc
sbb
cwtl
jl
cmp
popa
loope
jg
lds
mov
sbb
inc
push
icebp
out
jecxz
or
jmp
jmp
lret
xchg
popa
lret
punpckldq
nop
push
data16
scas
or
test
popa
cli
sbb
push
add
inc
xchg
lock
daa
data16
fildl
fadd
cmc
les
xchg
fcoms
push
mov
shlb
sub
or
mov
xor
ficompl
xchg
mov
addr16
es
mov
addr16
repz
jbe
sub
fdiv
xor
and
call
insb
mov
xlat
mov
or
icebp
xor
mov
pshufw
adc
xchg
inc
and
sbb
or
mov
sub
mov
sub
fdivs
lret
inc
dec
out
iret
insl
std
cmpsb
jmp
push
stos
aaa
sti
push
add
push
xchg
push
ja
mov
leave
jecxz
sub
testb
fsubr
ficoms
xorb
jg
push
sbb
jle
lret
mov
mov
jge
or
scas
dec
inc
fs
test
cmc
inc
dec
mov
pop
aas
jmp
stos
sub
sub
dec
or
insl
inc
cmp
addr16
aas
inc
outsb
inc
inc
sbb
mov
mov
push
push
jne
dec
or
mov
ret
sarb
inc
xchg
adcb
nop
scas
pop
shlb
xchg
lahf
jne
fldcw
and
mov
shlb
bound
dec
or
mov
pusha
orb
popa
lods
mov
pop
cmp
int
jns
lea
data16
fwait
mull
inc
out
sub
sub
shl
movsb
mov
outsb
pop
lahf
mov
out
fidivrl
lods
cs
xchg
push
adc
pop
aam
iret
ds
jge
push
sahf
mov
and
aas
fsubr
test
mov
push
imul
pop
xchg
xor
jl
ret
rcr
cs
sbb
arpl
iret
fadds
mov
test
imul
mov
and
fnsave
scas
mov
and
fs
int
hlt
jno
mull
iret
mov
cmpsb
fcomps
pop
xor
ljmp
fiadds
mov
mov
cmp
jo
inc
pushf
arpl
cwtl
mov
jmp
and
sub
sub
sbb
push
jecxz
push
test
mov
hlt
sbb
dec
leave
idivl
jmp
test
cli
mov
outsb
mov
int3
push
cmp
aaa
push
and
fstpl
mov
lods
adc
cs
loopne
pop
out
dec
js
inc
inc
fcomps
adc
jge
lds
stos
ret
cmp
jmp
inc
mov
in
insb
aaa
sbb
int3
push
adc
sbb
push
out
and
cmp
clc
jnp
mov
lea
sar
mov
xlat
mov
sbb
ds
pushf
dec
cli
jge
mov
aas
cmp
out
mov
into
jns
divl
inc
pusha
cmc
mov
sub
xchg
lea
cmp
jge
inc
cld
xchg
lods
int3
fmull
mov
ljmp
stc
inc
popf
testb
movsl
out
adc
pop
adc
jnp
mov
mov
adc
aad
rorb
adc
jecxz
push
xchg
adc
or
lods
clc
push
xchg
mov
testb
ja
sti
fnstsw
mov
jbe
rolb
add
sbb
jmp
std
shrb
and
cmp
push
or
dec
int3
add
push
add
adc
into
xor
call
ljmp
loope
push
mov
out
mov
xor
sbb
or
addr16
add
mov
mov
mov
xchg
aas
js
sub
sahf
ds
or
adc
mov
cltd
push
nop
fs
mov
scas
movsb
sub
in
xor
push
mov
lahf
ret
mov
cmpsb
divl
push
cwtl
outsb
aaa
xchg
stos
or
cmp
and
fcompl
daa
arpl
bsr
jnp
icebp
movsb
mov
outsb
ds
and
movsb
xchg
ja
test
mov
pusha
dec
mov
push
or
jnp
inc
neg
dec
scas
ljmp
nop
es
xchg
mov
xor
mov
cmc
cs
ss
lds
adc
jl
pushf
sarb
dec
inc
outsl
or
cmp
or
adc
jl
pop
lea
shll
cld
clc
jecxz
add
mov
dec
dec
lret
ret
addb
stos
ret
sbb
mov
sub
inc
cmc
dec
in
mov
sets
pop
shlb
lods
add
and
push
mov
adc
aaa
lods
inc
dec
dec
pushf
inc
das
xor
mov
mov
and
outsb
pop
pop
jns
sub
jl
les
aam
push
xchg
gs
lret
push
cmpsb
int3
cltd
sub
jmp
lret
loop
add
sub
hlt
push
pop
jbe
xchg
divl
roll
out
xchg
jg
dec
push
mov
adc
jns
mov
int
out
ret
stos
addb
imull
jle
dec
and
mov
pop
sub
mov
push
adc
or
test
or
je
jbe
loopne
push
mov
mov
ret
jbe
adc
adc
into
push
lds
imul
in
mov
add
cmp
or
inc
sub
roll
loopne
adc
icebp
pop
xchg
scas
xor
cmp
out
orb
inc
xchg
push
cmpsb
jmp
sti
icebp
stc
xchg
mov
cltd
shr
fidivrs
sub
push
lret
test
arpl
popf
mov
negl
lcall
faddp
push
push
sub
cld
daa
add
inc
in
pop
ss
adc
fcoml
in
test
cmp
sahf
arpl
mov
sti
xchg
cmpsb
xlat
dec
insb
xor
xor
cmp
out
cmp
ja
ret
xor
pop
addr16
stos
adc
cs
test
andb
pusha
push
xchg
sbb
aas
xor
or
gs
aas
outsl
push
insb
test
mulb
pop
push
inc
jg
cwtl
pop
push
push
cmp
and
outsl
or
pop
cltd
mov
movsl
mov
cli
insb
add
and
mov
sti
scas
lods
jg
jle
dec
ret
and
sbb
xor
or
jecxz
pop
test
jmp
add
pop
push
push
inc
sub
or
and
test
xchg
push
imul
cmp
mov
mov
sbb
or
cmp
rcr
mov
xor
xlat
in
adc
ljmp
jle
jp
jg
iret
ret
fistpll
cld
push
test
push
add
fstps
push
lods
push
pmaxub
xchg
push
lret
in
adc
sub
adc
push
dec
push
out
mov
adc
sbb
iret
sub
cmp
shlb
gs
rol
loope
movsb
stos
cld
out
ficoml
cmpsb
xchg
gs
loopne
aad
movsl
push
push
movsb
in
leave
call
lcall
xchg
mov
pop
and
xlat
dec
push
pop
jb
arpl
mov
fdivrs
push
ficomps
jmp
fadd
orb
out
cmp
insb
sbb
and
daa
or
not
cmp
into
mov
je,pt
repz
jmp
add
cmp
call
mov
rclb
test
call
test
sbb
ret
cltd
in
sbb
ret
das
inc
pop
xchg
push
adc
lret
pop
lret
aad
notb
mov
iret
adc
data16
popa
mov
jae
sarb
addr16
rcrl
mov
dec
xchg
lret
icebp
xor
sbb
cwtl
jle
sti
xor
in
sub
adc
mov
lret
add
cmpsb
push
mov
cli
hlt
and
fst
adcb
fnstsw
das
sti
push
cs
inc
fdiv
sub
insb
pop
test
ljmp
inc
jg
or
mov
loopne
inc
add
iret
mov
adc
lcall
ja
test
in
cmp
cmp
mov
sti
cmp
pop
hlt
sbb
lahf
or
ja
cltd
mov
lret
mov
lea
adc
aaa
lret
mov
pop
fxch
mov
sbb
mov
lock
lahf
xchg
sbb
dec
decb
rcrl
jae
mov
or
inc
rorb
popa
cmp
enter
ljmp
jle
test
pusha
dec
cmpsl
dec
xor
xor
push
push
push
cmpsb
mov
cltd
stos
push
push
and
test
pop
leave
and
ja
sub
daa
mov
mov
cmpsl
or
xchg
outsb
mov
scas
in
cmp
popf
mov
testb
or
imul
jmp
fsubp
movsb
or
sub
inc
hlt
aaa
mov
mov
mov
dec
roll
pop
gs
out
aad
and
dec
jecxz
jmp
push
lock
pop
cs
xorl
jmp
adc
scas
xchg
out
xchg
xor
leave
outsl
dec
shll
data16
jbe
jnp
movb
addl
cmp
movsb
adc
in
in
pop
fwait
test
sub
enter
sbb
dec
sub
fldl
movsb
mov
mov
mov
jb
xchg
dec
mov
and
out
and
scas
mov
xchg
push
mov
stc
sbb
or
mov
lock
inc
add
add
ret
sbb
mov
mov
fnstsw
pop
pop
repnz
mov
insb
stos
aad
cmp
dec
pop
push
and
xor
add
push
mov
cmp
adc
imul
movsb
cmp
adc
pop
or
inc
movsl
fld
push
xor
hlt
pusha
push
int3
xor
ljmp
and
sbb
insb
push
cmpsl
xor
push
hlt
push
push
decb
out
jae
jge
cmpsb
popl
lock
popa
and
inc
ror
inc
mov
stos
std
push
aas
lret
and
mov
cmp
sbb
call
es
dec
dec
addr16
xorb
adc
in
in
sarb
jnp
xor
xchg
push
add
js
inc
scas
mov
das
dec
cld
mov
fldcw
cmpsl
jmp
push
out
nop
out
mov
cmpsb
adc
cmp
jmp
add
push
cltd
xor
imul
sbb
iret
sti
lcall
pushf
or
fs
bound
jl
fmulp
lea
sbb
ss
arpl
sub
xor
jge
fwait
pop
push
pop
ds
xchg
out
decb
pop
movsb
push
fisubrl
js
popf
inc
movsl
popf
jle
adc
loopne
jne
out
clc
loope
in
push
dec
stos
push
icebp
loopne
pop
push
xchg
and
pusha
inc
outsb
aas
xchg
gs
scas
dec
pop
dec
fsubl
les
out
jno
dec
xchg
dec
inc
jecxz
iret
pushl
shr
and
jb
test
cmpsl
addb
sahf
pop
cmpsl
mov
dec
cltd
mov
jle
movsb
dec
call
xlat
dec
mov
dec
add
mov
sbb
enter
stc
or
xchg
aaa
aas
cmp
aam
rorl
sub
or
mov
ret
std
pop
or
popa
ds
pop
push
adc
push
and
xor
repnz
pop
popl
stc
into
mov
bnd
xchg
cmp
lds
je
xchg
lcall
rolb
ret
testl
loop
sub
std
aam
mov
mov
xor
mov
pop
jmp
repnz
mov
lcall
jo
adc
pop
cwtl
fsubr
push
mov
lods
lret
and
xchg
lcall
iret
scas
inc
jp
rorl
adc
mov
scas
fimull
enter
int3
call
cmp
jns
sub
mov
inc
xor
int
xchg
stos
orb
jecxz
mov
jb
ds
mov
mov
fwait
dec
repnz
test
mov
dec
add
jmp
dec
cmp
dec
pop
and
inc
push
mov
loope
shll
lret
jmp
jnp
mov
das
inc
pop
mov
push
stos
or
pushf
pushf
add
inc
push
lods
adc
data16
rcll
enter
stos
lods
je
sahf
aam
fistpll
fxch
sahf
add
mul
iret
sub
and
scas
mov
xchg
cmp
sbb
cmp
mov
adc
roll
sub
pop
aad
nop
or
jno
cwtl
std
push
mov
js
mov
scas
clc
incb
or
aad
jbe
xor
out
mov
test
xchg
xchg
mov
xlat
mov
jle
push
fwait
sbb
in
lret
mov
iret
nop
xchg
rcrb
aad
in
mov
flds
in
pusha
out
in
sbb
add
add
sahf
cmp
hlt
mov
ja
and
fs
mov
mov
shrb
sbb
dec
pop
dec
cmc
int
pusha
sbb
addr16
sbb
add
ss
clc
movsb
sti
xchg
test
pop
sbb
sbb
arpl
push
mov
cmp
mov
lcall
mov
inc
lock
scas
aaa
fisubrl
jp
xor
cmp
mov
lds
mov
or
mov
lock
rcl
push
mov
push
cmp
inc
ss
shll
das
in
imul
mov
cld
pop
jg
dec
int
stc
inc
jmp
int3
mov
push
mov
xchg
sbb
dec
push
arpl
adc
in
push
adc
loop
insb
mov
jne
cmpsb
xchg
or
mov
out
push
pushf
xor
insl
xchg
sbb
divb
fdivr
out
je
test
arpl
test
dec
sub
dec
jb
dec
rol
adc
test
dec
inc
xor
imul
xchg
notl
and
popf
cmp
shll
imul
nop
dec
or
test
scas
inc
cmc
dec
test
das
or
cmc
adc
inc
testb
data16
fs
push
ljmp
sbb
and
addr16
ret
jmp
dec
stos
movsb
fidivl
sbb
xchg
add
jg
and
mov
shrb
jle
xorb
lret
cmp
and
sub
add
ret
ljmp
aad
xchg
xchg
aaa
add
cwtl
into
mov
mov
mov
dec
add
loopne
mov
adc
mov
popl
movsl
shl
xor
mov
cmp
das
sub
test
dec
inc
or
out
incl
add
test
add
fnsave
std
jp
sbb
sbb
subl
ret
data16
lcall
es
adc
push
pop
xor
xchg
scas
sahf
frstor
adc
dec
dec
cmpsb
sub
lcall
push
sub
imul
adc
inc
daa
int3
imulb
and
je
dec
jnp
xchg
nop
lahf
lods
cmova
in
jae
fnstenv
mov
in
loop
lods
mov
sbb
mov
popf
jle
sub
inc
mov
mov
xchg
xlat
aad
ljmp
inc
cwtl
push
inc
imul
adc
orl
fimull
cmp
popa
pop
dec
aam
dec
add
jno
ret
lea
mov
loope
repnz
das
mov
mov
push
cmp
lea
cmp
pop
cli
adc
clc
mov
rclb
repnz
fstpl
aas
push
sbb
pop
int3
iret
jnp
or
add
xor
mov
push
aaa
and
pushl
jp
mov
jbe
les
add
mov
aam
ljmp
xor
mov
and
xchg
mov
lcall
pusha
loopne
insl
xchg
mov
cmc
inc
and
mov
fisubrs
popf
adc
pop
addr16
adc
sub
and
adc
ficomps
inc
roll
rcrb
repnz
mov
push
ja
xchg
inc
into
popf
push
cmp
test
call
mov
xchg
sbb
add
inc
out
sbb
mov
shrl
jnp
jecxz
pop
push
aam
jb
xchg
add
imul
inc
lods
xchg
xor
xlat
xchg
dec
clc
inc
jns
push
hlt
and
mov
xchg
insb
adc
mov
ret
iret
sbb
lock
pop
dec
aam
inc
lea
shrb
lods
cmp
mov
cmpsl
cld
lret
adc
decl
js
out
enter
jmp
jns
mov
inc
push
sub
cld
push
bound
fldl
cld
cwtl
js
cmpsb
sub
or
mov
shlb
pop
push
inc
jle
pop
popf
pop
subb
ret
push
idivb
cli
xorl
ret
es
out
adc
cmp
cmp
pop
sub
ret
stc
iret
neg
aad
cs
and
sub
mov
mov
imul
fnstcw
ss
cmp
mov
les
sarl
js
sub
loope
jne
mov
jge
cs
dec
and
push
stc
in
xor
mov
outsb
xchg
js
add
scas
fidivrl
aaa
imul
out
add
int
or
iret
inc
out
addr16
push
addl
dec
cltd
mov
out
push
sti
cmpsl
adc
fldt
shrb
lahf
push
mov
in
sti
xor
xor
push
test
xlat
fidivrl
jnp
jg
and
call
arpl
sbb
ret
cli
stos
test
jecxz
xchg
bound
push
xor
xor
sub
jb
insb
lret
insl
xor
or
add
mov
lock
bound
outsb
insl
std
xor
leave
nop
add
mov
aaa
leave
cmp
pop
xchg
or
leave
fsubs
jno
orb
xlat
repz
push
loope
mov
add
fistpl
cmp
out
das
mov
and
cwtl
ljmp
pop
dec
in
add
push
pushl
shrb
scas
and
daa
aam
lods
int3
sbb
sub
les
aas
sbb
push
movsl
push
adc
icebp
in
dec
xchg
dec
or
insl
add
lahf
push
lret
nop
popf
out
push
cmp
xor
fimuls
xchg
xchg
jns
inc
jmp
pop
cli
shrb
push
inc
xlat
ss
scas
or
and
jno
push
fcoms
outsb
lret
mov
sub
xchg
stc
stos
movsb
shrl
sub
push
pop
pop
jb
sub
xchg
jl
dec
pop
pop
scas
lcall
xchg
daa
pop
pop
and
inc
mov
jo
xlat
dec
loopne
dec
lods
mov
sub
ret
cmc
sarb
mov
xor
jae
pop
clc
and
sbb
dec
mov
repz
add
outsb
repz
inc
out
lret
jno
jae
sub
jl
jnp
cmp
outsl
mov
aas
hlt
mov
mov
dec
inc
add
cltd
sub
push
jno
cmp
movsb
nop
in
sbb
mov
cli
fisubs
mov
cmp
lock
mov
jno
in
or
jle
and
ret
pop
mov
or
mov
xor
outsl
out
lea
and
fisubrl
adc
jnp
add
inc
mov
adc
xor
fwait
xchg
mov
jo
inc
inc
cli
jne
push
xor
pushf
cld
loope
mov
clc
xchg
aaa
push
loope
ret
xchg
jb
aad
stos
push
lea
sub
stos
xor
mov
divb
and
push
jp
loop
xorl
push
adc
push
fcoms
out
mov
cmp
fnstsw
dec
std
push
mov
aad
mov
mov
sbb
out
pop
cli
icebp
stos
inc
mov
adc
push
adc
lcall
popf
lcall
insl
js
dec
push
jb
inc
xlat
jno
testl
in
pop
cltd
out
adc
adc
loop
imul
cs
es
stos
jae
dec
ss
jb
repz
xchg
pop
repz
ss
inc
arpl
xchg
jl
mov
js
sub
mov
dec
sbb
xor
sbb
pop
int3
xorl
lods
jo
orb
push
mov
jbe
lcall
hlt
xchg
mov
shlb
cltd
outsl
mov
mov
cmp
mov
jnp
sbb
pop
scas
or
pop
lea
cwtl
icebp
pop
ljmp
jnp
adcl
iret
xor
aaa
scas
sub
push
jae
dec
popa
shl
sahf
sub
xchg
movsb
pop
add
cmpsl
addr16
mov
out
aaa
push
cs
xchg
mov
xchg
sar
adcl
xchg
push
aam
das
jmp
push
mov
cmp
daa
jmp
ficompl
aam
inc
push
adc
add
pop
mov
nop
jle
push
insb
out
jle
cmp
loop
sub
aaa
in
les
inc
sti
mov
lds
dec
nop
rol
jnp
mov
jbe
or
mov
insb
cltd
imul
xlat
sbb
or
adc
inc
fldenv
mov
mov
jp
mov
mov
data16
lods
pusha
dec
mov
out
mov
and
fcom
add
and
cld
fdivs
aas
test
daa
or
push
cs
fsts
add
pop
adc
or
push
mov
outsl
imul
stos
aaa
es
push
fnstcw
scas
pop
pop
lea
and
mov
sub
cmp
scas
cmp
fs
xor
test
mov
mov
mov
inc
mov
add
pop
adc
in
push
xchg
jno
outsb
sbb
adc
stos
lahf
gs
xchg
mov
xlat
mov
mov
xor
not
jmp
cmp
xor
adc
add
cmp
test
cmpsl
push
imul
jbe
or
cld
fs
test
jmp
pop
je
add
pop
pop
and
mov
xlat
movb
push
inc
mov
lods
inc
mov
lret
sub
pop
push
add
mov
pop
int3
inc
and
es
cmc
push
inc
fsubs
xlat
adc
scas
sub
dec
int3
aas
jle
leave
mov
adc
cltd
call
loope
push
popf
js
out
push
outsl
or
adc
sub
xor
subl
les
mov
push
jno
stc
pusha
jb
shl
mov
je
sub
mov
inc
sahf
and
sarl
cwtl
xchg
pop
mov
adc
pop
fsub
sub
xor
jge
and
sub
inc
xor
movsb
cli
adc
ljmp
push
mov
inc
sbb
mov
shrb
into
inc
cltd
push
loopew
add
xchg
xorl
daa
mov
fadds
out
xchg
sbb
adcl
popf
jno
addl
sub
es
addl
lret
inc
popf
mov
leave
icebp
xchg
mov
push
push
cmp
sbb
inc
jns
sti
jae
daa
dec
and
jbe
mov
loopne
in
sbb
push
sub
cmpsl
hlt
pop
mov
dec
gs
push
or
mov
pop
or
test
repnz
push
cmpsb
stos
jge
push
and
fwait
dec
push
xchg
iret
std
dec
addr16
adc
fs
pop
mov
stos
dec
xchg
push
adc
push
xor
push
repz
aaa
ss
icebp
lcall
jo
int3
xor
jnp
push
push
jmp
pushf
push
and
push
mov
stos
ret
cld
loope
or
faddl
call
mov
stos
outsl
roll
icebp
mov
in
jb
xor
mov
jae
inc
test
or
roll
test
addr16
mov
js
pop
dec
mov
mov
push
outsl
repnz
sub
dec
sbb
pop
int3
dec
in
push
dec
pop
xchg
fcmovne
and
nopl
adc
mov
movsb
arpl
mov
mov
daa
negl
cmp
mov
sbb
inc
lock
dec
and
lret
mov
mov
mov
shll
add
push
mov
decb
std
sbb
shlb
push
mov
lods
lret
mov
in
pop
pop
push
push
push
iret
mov
xchg
pop
leave
push
jae
cwtl
iret
push
cld
shrl
mov
cmpsb
xor
mov
aaa
outsl
xchg
icebp
adc
sbb
lahf
pusha
jnp
cli
enter
mov
add
xchg
xchg
incl
sti
pop
mov
push
jb
lods
dec
sub
pusha
cmp
lret
lods
dec
mov
in
xor
lea
jae
mov
push
sub
sbb
fisubl
ss
adc
insb
mov
test
daa
les
add
cmpsb
out
pop
cmp
lock
shll
adc
push
int
bound
xor
jg
inc
rcll
jae
cmp
push
push
jae
imul
add
enter
fdivrp
je
add
xchg
aad
pop
mov
mov
scas
push
push
test
mov
sti
in
stc
sbb
call
cmc
into
loope
hlt
imul
inc
aad
insl
mov
pop
sahf
add
xchg
add
in
sbb
out
sbb
test
int3
mov
lds
shll
inc
jmp
or
xor
push
addb
cmp
add
add
loope
cmc
mov
sub
movsb
lods
loop
adc
xor
enter
outsb
push
dec
icebp
mov
negl
hlt
pop
adc
test
or
ds
cmc
js
xchg
lret
xchg
sub
sub
sahf
rolb
jle
mov
ss
xchg
cmc
xchg
adcb
push
push
pop
push
mov
sbb
inc
jno
ja
ret
icebp
andl
add
js
mov
pop
jmp
cmc
es
out
rorb
or
aas
jg
out
xor
mov
mov
or
push
addr16
dec
push
addl
push
data16
xchg
xchg
daa
cltd
int3
pop
mov
jmp
mov
sub
sbb
stc
or
dec
daa
push
jge
icebp
inc
xchg
push
jl
sub
pop
test
or
ds
das
mull
jne
fs
dec
push
mov
lock
or
ja
orl
lcall
into
cs
sbb
cmp
imul
xorl
xchg
shll
movsl
pop
call
rcrl
mov
pop
add
cmp
je
movb
cmpsl
or
movsb
shlb
pop
lret
ret
arpl
loope
inc
mov
fsub
outsb
cmp
cmpsl
inc
and
add
ss
fcoml
insb
cmp
shlb
test
add
dec
mov
outsb
fstl
mov
fs
sbb
data16
pop
scas
mov
ja
xor
rcrb
push
nop
push
dec
fsubl
enter
fs
sbb
xor
or
aas
add
mov
sar
lds
andb
aam
mov
inc
cltd
adc
daa
pop
fldln2
aam
loop
dec
push
out
push
cs
daa
push
inc
mov
jecxz
or
add
mov
xchg
fiadds
and
int
sbb
lods
subl
pop
pop
fsubrs
cmp
and
inc
mov
pop
or
leave
pusha
dec
out
mov
das
int3
bound
mov
mov
xor
movsl
and
leave
xchg
jle
sub
clc
cmp
in
push
or
push
stos
lret
lcall
clc
iret
adc
imul
test
repz
stos
adc
rcl
test
mov
jl
mov
xchg
and
adc
idivl
sbb
or
shrb
rcr
es
cmp
int
dec
test
test
or
push
aas
lds
pop
mov
cmpsb
mov
dec
mov
pop
stos
insl
jecxz
loopne
inc
movsb
insb
fisttpl
xor
lret
outsl
add
aas
mov
pop
mov
fwait
cmp
movsl
mov
mov
leave
fcmovne
dec
roll
lods
enter
jb
insb
fcoms
cli
in
call
add
or
fldl
or
test
lock
pop
sbbb
or
nop
push
iret
jns
test
jp
dec
scas
and
cmp
bound
cwtl
nop
jmp
adc
in
dec
adc
in
dec
push
push
mov
or
mov
adc
fnstcw
xchg
cli
fs
je
pop
scas
pop
sbb
testl
mov
jmp
lock
in
xchg
mov
mov
sbb
or
push
pusha
pop
arpl
mov
loope
jp
mov
les
cld
fs
mov
mov
pop
jns
leave
jne
cmp
out
cmp
inc
inc
lea
add
inc
sbb
sbb
into
pushf
pop
inc
in
nop
pop
sub
inc
ret
mov
cmp
jle
repnz
btc
add
sti
repnz
lods
ds
into
mov
adc
pop
mov
test
faddl
jbe
sbb
add
fistps
mov
push
xchg
cmc
movsb
lds
push
jge
xlat
mov
pop
les
call
sbb
xor
repz
push
pop
xchg
loop
cmp
dec
out
mov
jae
fwait
cs
js
push
nop
inc
or
xchg
lret
pop
xor
aaa
cmp
pushf
push
ret
xchg
dec
xor
jo
pop
sbb
xor
iret
mov
pop
inc
pushf
mov
sub
pop
and
mov
ja
in
mov
push
xor
jle
cmp
loope
repz
ljmp
outsl
lods
add
dec
int
movsb
mov
shll
or
push
into
iret
aas
into
mov
mov
cmp
mov
or
cmpsl
and
xor
pushf
cmc
push
mov
lahf
mov
mov
mov
stc
lret
pop
add
mov
cmp
cmp
xchg
arpl
lods
fisttpl
iret
add
mov
in
jg
fsubl
and
pop
fistpl
sahf
lock
fstpt
push
dec
orb
xchg
es
push
sbb
bound
xchg
dec
dec
cld
imul
out
add
cltd
mov
cltd
push
xchg
or
popf
dec
sub
pop
mov
xchg
mov
lahf
jmp
mov
pop
inc
jp
or
push
das
dec
fdivs
inc
sub
sub
repz
jne
lahf
cmpsb
and
int
jp
dec
lret
sbb
ret
sti
lds
jbe
xchg
mov
mov
add
fadds
pop
and
add
cli
es
mov
mov
mov
mov
insb
cmp
sub
adcb
push
arpl
or
aam
in
xor
mov
aam
inc
insb
in
xor
fs
add
movsl
test
ss
rcrl
jno
icebp
inc
iret
xchg
fstps
push
cmp
and
icebp
xor
sub
into
sbb
test
in
mov
test
pop
in
mov
xor
out
leave
insl
or
and
into
das
leave
das
mov
jbe
adc
cwtl
enter
sub
das
mov
mov
je
sbb
add
aad
imul
xchg
jmp
dec
xor
jle
xlat
xchg
jae
data16
out
add
inc
fmuls
aas
imul
pop
les
lock
aaa
cltd
add
repz
mov
push
lds
xor
mov
pop
rcrb
mov
inc
mov
jl
js
pop
xchg
inc
cmp
jns
push
lods
inc
fstpl
call
fmull
or
inc
into
xor
inc
pop
sti
repz
bnd
mov
push
insb
mov
insl
int3
outsl
mov
in
or
dec
inc
pop
dec
cmp
jge
push
movsl
popa
ret
sub
aam
mov
test
pop
xor
push
sbb
sub
push
cli
imul
push
mov
and
xchg
imul
les
adc
mov
cmp
ret
lret
cmp
mov
xorl
insb
in
pop
inc
popf
dec
cli
cmp
inc
lds
mov
or
mov
push
test
fnsave
jl
inc
sub
addr16
fisttpl
out
filds
mov
adc
insb
push
sub
push
fstpt
lret
cli
sbb
adc
mov
fimull
and
es
xor
mov
mov
sahf
inc
xchg
push
sub
mov
mov
add
pop
xor
pop
or
ds
jle
adc
jge
jg
iret
dec
ficompl
inc
sbb
xor
out
push
push
pop
test
test
jmp
aaa
out
add
lret
cmp
inc
call
iret
jge
push
sub
cmp
cli
dec
xor
sub
sub
jge
into
jge
xchg
jae
dec
mov
sub
jp
push
adc
mov
scas
push
inc
div
shll
pusha
fidivrs
dec
lods
push
std
daa
xchg
dec
sbbl
pop
fsts
addr16
movsl
jne
mov
inc
mov
insl
cmp
sbbb
dec
mov
aas
arpl
or
mov
jge
pop
pop
inc
push
mov
ret
xchg
inc
and
push
stos
ret
cli
test
fistpll
cld
pop
and
sarb
insl
or
adc
negb
mov
xchg
sub
xor
xor
mov
add
push
fldcw
push
icebp
dec
mov
mov
dec
xor
inc
sbb
dec
xchg
fmull
rcr
ljmp
ror
sub
mov
es
mov
jl
call
mov
enter
push
outsb
or
movsb
ja
lods
mov
xor
jmp
mov
mov
iret
jns
and
jge
imul
push
dec
xchg
xchg
jo
pushf
popa
icebp
pop
fwait
imul
mov
out
pop
push
jns
out
and
cmp
popf
xchg
jo
cld
mov
or
jne
lds
test
ficomps
mov
pop
jae
xchg
or
and
movsl
jg
xor
mov
int3
xor
mov
outsl
hlt
jmp
lods
adc
andb
push
shr
push
lret
ret
movsb
pop
push
pop
cmp
rcr
je
mov
pusha
inc
xchg
mov
sbb
xor
dec
int
dec
es
or
call
adc
shl
jno
pushf
mov
adc
loope
insb
xchg
shlb
mov
push
pop
mov
les
xor
insb
sub
loopne
mov
sbb
or
fnstenv
xchg
xor
int3
cltd
xor
xchg
fs
daa
fisubl
lret
and
hlt
js
pop
inc
notb
mov
mov
and
push
or
pop
mov
mov
loope
jmp
and
dec
imul
daa
sarl
add
inc
sahf
daa
insl
loopne
aad
insb
sub
hlt
and
xor
fldenv
test
dec
daa
nop
xchg
add
xor
int3
imul
jns
fwait
cmp
xchg
imul
and
push
add
cmp
inc
inc
adc
dec
rcrb
pop
scas
adc
gs
mov
cmp
addr16
sbb
push
pusha
fists
jne
dec
adc
mov
fadds
imul
daa
sbb
rcll
shll
push
sub
push
push
dec
lcall
shl
dec
ret
jp
out
lcall
shrl
push
jne
sbb
dec
push
iret
mov
fsubrs
inc
xchg
mov
fistps
xchg
cli
mov
dec
or
stos
jg
addr16
ret
out
adc
repnz
xchg
pop
pop
outsl
pop
push
fs
pop
adc
dec
inc
mov
loop
xor
dec
mov
incl
bound
sbb
mov
adc
and
xchg
jp
xchg
js
cmpsb
lret
push
hlt
out
mov
push
loope
or
or
add
mov
mov
ret
mov
shlb
or
pushf
int3
jo
arpl
cli
push
aam
lds
addb
call
dec
add
dec
rclb
jge
scas
movsb
aam
aaa
lock
or
data16
icebp
test
jo
jo
push
add
push
cmp
sbb
adc
mov
jle
clc
stos
push
and
or
push
cli
and
mov
pop
int
outsb
xchg
and
out
cmp
fcompl
and
es
int
bound
or
xchg
shlb
mov
cmpsb
jmp
jmp
ret
sub
push
pop
test
out
lea
in
and
jg
lret
jg
cmp
and
out
enter
push
adc
cmp
inc
popa
pop
xchg
add
jg
in
sub
or
xchg
xchg
adc
addb
xor
shrl
das
roll
add
inc
mov
dec
adc
mov
jge
jnp
fidivl
push
out
and
cmp
in
daa
mov
in
cli
bnd
push
pusha
xor
je
pop
stc
inc
not
cmp
mov
loop
ret
pop
dec
cltd
loopne
out
aas
sbb
movsl
cmpsl
fiaddl
cmp
jmp
fimull
test
xchg
mov
sarb
xchg
fmuls
fcoml
push
sbb
sbb
lock
idivl
daa
mov
leave
into
out
add
xor
popa
shl
pop
cmc
fstps
mov
insl
shll
jo
cmp
sub
lahf
cmp
cmpsl
mov
or
fnsave
push
jnp
adc
mov
out
jp
sbb
call
push
xor
cli
adc
xor
xor
mov
xor
mov
sub
jbe
outsb
push
imul
out
imul
push
pop
dec
sbb
ficomps
movsl
cmc
xchg
fwait
and
not
std
in
clc
dec
lret
and
jns
cmp
icebp
mov
stos
out
sub
std
xchg
mov
xor
ss
cltd
or
idiv
add
inc
jmp
fisttpll
icebp
loope
jb
adc
in
fs
insb
sub
adc
jle
int
sbb
cmc
es
inc
xor
adc
mov
xor
dec
pop
mov
lcall
incb
cmpsb
pop
mov
push
idivl
jge
sbb
jb
xchg
vmwrite
scas
sbb
in
ds
cld
ja
adc
in
ja
aas
dec
adc
lds
out
mov
cmp
sahf
pop
lret
and
jae
xchg
mov
loopne
lret
in
jmp
test
push
xor
js,pn
jbe
xchg
adc
push
and
jmp
and
or
push
dec
sbb
jae
out
sbb
mov
jmp
sub
lcall
loopne
cmp
out
js
adc
orb
and
jp
cmp
popa
sbb
ret
jb
xor
stos
dec
push
xchg
mov
int3
push
es
xor
lea
jb
jmp
iret
sub
mov
sbb
scas
mov
stc
push
pop
inc
push
nop
inc
scas
sub
hlt
fidivs
les
pop
out
adc
dec
outsl
lahf
mov
mov
mov
or
push
or
push
push
sbb
add
xchg
add
xor
push
add
xchg
mov
inc
jecxz
imul
jmp
lods
push
mov
inc
js
gs
clc
lcall
inc
pop
idivb
test
or
dec
or
add
in
fildl
push
cli
xor
and
mov
imul
lock
inc
mov
xchg
sub
imul
cmp
xchg
enter
dec
cltd
dec
xlat
mov
icebp
add
imul
fmul
outsl
pop
add
cmp
pop
jp
cld
aaa
sbb
mov
loope
int3
hlt
or
mov
inc
pop
test
hlt
push
bound
fcompl
adc
call
inc
jns
xchg
std
ljmp
mov
dec
movsl
in
push
jbe
jbe
data16
mov
push
cmp
or
xor
loopne
into
jnp
jecxz
fmulp
fdivl
mov
jmp
lods
pop
push
addr16
lock
aad
cmpl
mov
jl
sub
imul
insb
and
leave
dec
add
rorb
sahf
in
mov
arpl
lret
repnz
mov
pop
stc
push
inc
pusha
add
inc
cmp
jmp
aad
jmp
add
stc
inc
out
inc
clc
xchg
fsubrs
jecxz
lds
movsl
daa
push
pop
sti
enter
mov
adc
jo
sub
daa
and
inc
dec
popf
xchg
and
mov
hlt
ja
scas
cltd
adc
cmpsl
stos
jmp
aam
jb
mov
inc
xchg
add
hlt
cmpsb
inc
jo
lret
mov
ja
jp
bound
jns
mov
sub
flds
int
rclb
pop
out
cltd
arpl
test
mov
loopne
jp
jne
add
pusha
push
fwait
in
in
movsb
nop
shl
ss
dec
xor
mov
movsb
push
fmuls
mov
xchg
pusha
pop
inc
je
stos
push
xor
outsl
loope
jge
enter
inc
xchg
fdivrs
mov
in
mov
imul
cmc
addr16
or
loopne
sub
cmp
push
jge
mov
mov
sti
shr
inc
sbb
aas
in
lcall
dec
ja
mov
cmpsl
fdivl
xlat
leave
or
out
mov
jbe
push
imul
insb
xor
jo
in
and
add
dec
cmp
int3
stos
movsb
cmc
or
cmpl
fisubrl
jbe
data16
adc
xchg
mov
cmpsb
std
out
inc
jne
jecxz
inc
add
jp
repnz
imul
sahf
mov
push
clc
arpl
aas
lods
add
sbb
ds
aas
push
sahf
movhps
sbb
test
mov
add
repnz
dec
enter
push
mov
sbb
push
add
mov
and
jmp
cmpsl
fs
sub
mov
and
mov
lods
pop
aas
and
mov
xor
cltd
mov
mov
lods
add
loop
xor
pop
xor
xorb
xchg
mov
es
mulb
mov
clc
xor
pop
pop
inc
ret
pop
inc
pop
push
cmpsl
inc
mov
dec
mov
stos
aam
and
inc
pop
xchg
loope
out
inc
sbb
cwtl
mov
cmp
fildl
lahf
sub
daa
out
add
loopne
call
js
add
cmc
inc
loopne
jnp
loop
icebp
mov
lods
pusha
sahf
ljmp
pop
into
xlat
add
sbb
push
mov
push
ss
mov
cld
rclb
sub
test
leave
jnp
jbe
jns
repnz
andl
mov
cli
mov
inc
sub
push
sti
cmpb
lods
add
cmpsb
adc
push
int3
out
ljmp
jo
cmp
mov
test
lret
stos
xchg
push
xor
jae
add
adc
in
lcall
aas
insl
xchg
fdivrl
not
xlat
scas
data16
fucom
inc
rcll
push
or
pop
inc
mov
cli
inc
hlt
and
les
add
xor
das
inc
ret
insb
enter
or
dec
push
in
mov
jbe
xor
loope
test
or
mov
push
or
dec
addr16
inc
ret
iret
scas
sub
sub
fdivrp
cmp
iret
push
nop
or
cmp
xor
or
imul
pop
mov
in
int
repz
js
jge
call
pop
and
sub
cltd
aas
rcrb
and
inc
pop
cmp
dec
imul
pop
ja
xchg
das
mov
test
add
inc
ret
cltd
and
add
dec
repnz
xor
dec
mov
test
imul
pop
inc
jbe
enter
addb
xlat
pop
stos
in
dec
adc
mov
jp
testb
mov
pop
adc
mov
xor
imul
ret
bound
stos
in
sbb
jle
arpl
dec
ljmp
xor
testl
xorl
mov
mov
loopne
or
push
xor
insl
addb
push
test
inc
addr16
fmull
xchg
add
dec
out
sbb
jle
mov
jge
jecxz
fwait
adc
cli
adc
fistpl
jl
and
jae
stos
ja
sbb
sbb
mov
xor
leave
out
mov
xchg
dec
sub
inc
mov
pop
fsubl
xchg
aaa
icebp
cmp
test
jmp
out
addr16
inc
mov
mov
out
pop
pop
push
mov
xchg
dec
xor
iret
sub
dec
jl
inc
cmpsl
inc
insb
dec
and
divb
data16
mov
jnp
sbb
mov
xor
lock
cltd
aam
in
mov
jecxz
add
data16
xor
push
icebp
sbb
addl
repnz
adc
dec
test
mov
xor
dec
dec
test
or
sub
test
test
or
cmc
adc
fcomi
ss
out
adc
push
js
xor
fidivrs
or
sahf
test
adc
fistps
loope
shrb
jne
mov
pop
std
lret
cmp
fisubs
mov
pop
inc
adcb
jl
cmp
iret
aas
stos
push
je
push
fmuls
imul
pop
loope
and
in
lcall
in
mov
or
aad
or
and
test
xchg
popa
mov
pop
xchg
enter
sar
jno
pop
push
pop
fwait
in
iret
xor
out
jne
sbb
mov
push
lods
push
sbb
push
nop
push
cmp
fwait
mov
int3
les
pop
lds
movsl
mov
loop
pop
jle
test
nop
fwait
cmc
std
in
dec
push
and
xor
jae
dec
aaa
gs
inc
jb
leave
aas
sti
movsb
cmp
test
dec
aad
mov
imul
arpl
gs
pop
sbb
iret
add
clc
mov
or
mov
inc
dec
shll
pop
into
sbb
mov
shll
jl
jge
inc
xchg
push
sub
sbb
mov
inc
loopne
push
xchg
sar
cmp
pop
push
pop
jle
mov
sub
xchg
clc
or
rol
divb
cltd
insl
test
and
sbb
adc
pushf
mov
and
mov
xor
xchg
mulb
ret
and
out
mov
cmp
lds
xorl
xor
xchg
add
mov
icebp
inc
adc
or
mov
data16
mov
hlt
sub
mov
psubusw
cld
xor
idiv
aas
test
inc
pop
in
add
incb
fadds
push
mov
pop
shl
cltd
jmp
rcll
in
iret
stos
xchg
mov
sub
cs
iret
leave
mov
fistpl
mov
cmp
or
call
icebp
push
mov
stos
xor
sbb
push
cli
jns
pop
and
adc
fistpl
push
loop
faddl
dec
cli
ret
test
jmp
pop
mov
xor
lods
int3
jl
dec
xchg
and
cmp
lock
loope
push
jno
popf
rcll
push
push
gs
cmp
fs
in
dec
gs
and
in
sti
dec
and
leave
lea
pop
xor
pusha
dec
insb
es
outsb
inc
loopne
jge
test
insl
ret
dec
pusha
adc
test
cmpsb
push
cmp
jns
inc
cli
mov
nop
pusha
and
ds
and
mov
push
inc
adc
sub
sbbl
jns
inc
mov
cmp
ss
adc
leave
mov
push
lret
sbb
sub
cmpsl
in
mov
lahf
shlb
repnz
or
push
pop
jae
jnp
hlt
inc
in
and
and
pop
cmpsb
fsubl
fistl
adc
pop
mov
loop
in
push
sti
cmp
xchg
bound
sub
js
imul
sub
int3
lret
xorl
mov
mov
les
xchg
test
cmp
inc
mov
sbb
mov
addr16
push
mov
push
inc
aad
sub
xchg
cmp
sub
sub
insl
pop
push
dec
stos
outsb
or
imul
jnp
ljmp
dec
fs
or
push
xchg
imul
stos
inc
pop
out
push
loope
jmp
cmp
divb
repz
jp
sub
mov
stos
jb
cmpsb
ss
push
xchg
inc
xor
shr
clc
jbe
cmp
adc
lods
leave
pop
mov
movsl
xchg
xbegin
jo
shl
mov
sbbb
rcrl
shrl
dec
xor
lahf
dec
cmp
mov
fimull
lea
repz
sub
xor
loope
movsl
pop
pop
sahf
add
push
ja
xlat
lds
sub
sar
mov
jle
cmp
sub
stos
cld
popf
xchg
push
ja
cmc
in
add
push
outsb
fwait
in
cmc
ljmp
in
jb
les
or
adc
clc
xchg
adc
lea
sub
pop
jno
enter
dec
shll
daa
add
cmpsb
subb
mov
inc
movsb
dec
leave
arpl
add
test
cltd
and
push
adc
bound
push
into
and
cmp
mov
clc
sbb
addr16
mov
aam
push
loop
and
and
fisubrs
xor
and
xor
in
cmp
adc
aam
pop
scas
pushf
xor
inc
repz
ret
inc
pop
adc
jb
aam
icebp
mov
add
or
sbb
xchg
addl
ss
adc
stc
jno
mov
inc
sub
xchg
sub
mov
outsl
adc
insl
shlb
aad
push
ja
push
jp
mov
pushf
enter
subb
jecxz
mov
push
nop
fidivrs
arpl
push
and
jecxz
mov
mov
into
inc
js
mov
gs
imul
scas
xor
add
pop
cmpsb
cmp
mov
mov
mov
fsubl
mov
icebp
mov
sub
inc
cwtl
sbb
jb
jne
leave
ret
mov
xor
mov
imul
mov
and
push
shrl
mov
ss
or
call
aad
imul
pop
mov
call
es
pushf
aaa
mov
jecxz
cmpsl
add
ret
je
adc
add
int
jle
add
cli
push
pop
cwtl
dec
lods
imul
aaa
jb
movsb
pushl
mov
pop
push
lahf
add
inc
adc
add
mov
jo
push
das
cmpl
out
inc
inc
shrl
movntq
push
enter
cmp
sub
xchg
jg
rol
mov
mov
fadds
push
cli
shrl
pop
loope
dec
fs
push
aaa
not
mov
std
cmpl
mov
cs
sub
test
pop
adc
inc
jnp
cmp
aas
xor
adc
test
out
aad
fiadds
dec
dec
push
or
or
pop
aas
test
mov
iret
cs
xor
aas
xor
dec
fdecstp
jno
loope
daa
ljmp
out
and
lods
and
and
xor
push
adc
sti
leave
sarb
add
les
cli
push
loopne
add
rorb
push
inc
add
jecxz
adc
or
mov
inc
mov
call
or
sub
ret
fnstcw
jb
cmp
sub
test
std
add
and
cwtl
andb
ds
fucomp
sbb
mov
test
test
lds
daa
roll
jl
mov
dec
aaa
mov
mov
jae
push
fs
icebp
and
pop
fstpt
add
adc
ja
push
inc
sbb
pop
push
push
lahf
adc
push
jmp
mov
add
jmp
cs
inc
push
dec
arpl
jne
js
mov
lcall
mov
pusha
inc
rol
xchg
out
sbb
iret
aaa
pop
or
cmp
addr16
repz
xor
in
dec
push
in
jg
mov
mov
cltd
pusha
mov
scas
jae
out
adc
mov
inc
mov
loope
insl
mov
bound
jp
decl
lret
sub
jnp
in
mov
sub
repnz
add
mov
cmpsl
xchg
add
dec
jns
test
and
jo
mov
divb
jle
xchg
sub
in
cld
ljmp
loope
cs
mov
xor
cmpsb
outsl
into
mov
cli
mulb
add
xchg
jp
pop
sub
cwtl
xchg
shrl
or
xchg
jg
mov
pop
mov
nop
ficompl
and
fwait
int3
lret
lds
jno
roll
sarl
pop
or
cld
mov
xor
dec
and
jg
xor
jb
cmp
mov
subl
jno
aas
sub
ss
jb
lods
xchg
out
cmp
lahf
test
loop
inc
fs
enter
jmp
xchg
fwait
push
into
in
fcoml
jnp
xor
jl
sbb
mov
xor
mov
inc
loope
addr16
cmpsb
xor
sub
out
xor
xlat
xor
cwtl
pop
mov
cmp
mov
and
sbb
scas
add
stc
sbb
rcrb
cwtl
imul
push
and
jge
inc
xchg
arpl
fisttps
cli
xchg
scas
popa
test
pushf
dec
lcall
lret
repz
lods
repnz
int
test
add
insb
std
int3
out
pop
push
pop
and
iret
push
pop
icebp
ja,pt
mov
inc
pop
sub
clc
dec
and
cmpsl
daa
ljmp
adc
add
mov
ficompl
add
push
xor
std
mov
and
cld
push
inc
adc
mov
pop
out
or
push
mov
call
jmp
and
inc
xlat
ficompl
aaa
cmpb
inc
pop
test
bound
aas
or
gs
bound
adc
mov
jbe
fisubs
xor
push
jns
inc
and
adc
pop
xlat
in
push
out
in
jmp
xchg
and
xchg
cwtl
xchg
popf
je
idiv
shufps
pop
ds
push
add
int3
inc
push
mov
repz
xchg
mov
and
shr
xchg
cmp
fmull
adc
jmp
into
aam
mov
cmp
movsb
xor
outsl
outsl
mov
xor
push
add
sub
inc
jo
pop
push
jb
cmp
popf
sub
test
cmp
fs
lds
imul
enter
incb
dec
push
into
out
pop
call
cmp
add
cmp
stos
push
clc
mov
in
arpl
mov
popa
pop
out
or
cmp
push
push
repnz
mov
inc
jns
shrl
add
test
sub
movsl
imul
rcrl
jp
imul
jno
jmp
arpl
loopw
fcmovu
fcmovbe
jp
adc
xchg
jbe
addr16
push
lea
and
xchg
add
in
add
adc
push
lods
lods
std
inc
out
iret
jmp
xor
sbb
out
xchg
std
data16
pop
inc
push
lahf
shrb
insl
cmpsb
int
sub
sub
je
sub
aam
out
pop
sub
inc
lea
lock
std
adcb
jle
cmpsl
outsb
push
jb
xor
add
cli
cli
pop
adc
pop
pusha
ljmp
in
sub
jb
test
mov
or
rol
xchg
adc
popf
repz
inc
cmp
std
and
xor
aas
and
lret
addr16
jne
int3
cmp
fs
or
test
test
test
cmovo
pop
movsb
fucomp
aam
imul
sti
jno
pusha
xchg
pop
test
mov
scas
jge
cmp
movsl
cmp
and
add
sub
push
fs
pop
mov
cmp
ljmp
sbb
adcl
sti
pop
jmp
lds
bnd
arpl
mov
push
push
sub
fcompl
jmp
loopne
mov
sub
aam
mov
and
xor
pop
mov
adc
ja
sti
stos
push
loope
push
out
xchg
int
loope
push
inc
icebp
test
mov
push
roll
mov
roll
dec
iret
cltd
in
push
mov
push
mov
cmpsl
mov
addr16
pop
mov
out
xor
das
cmp
into
or
repz
clc
cli
addl
into
les
test
stos
inc
sbbb
test
subb
pop
ret
mov
iret
test
xor
icebp
pop
mov
into
into
adc
mov
dec
cmpsb
shlb
into
sbb
dec
inc
call
sub
mov
in
xchg
iret
ficompl
cmpsl
ja
ss
inc
mov
cmc
jno
jl
adc
jb
dec
cmp
test
cmp
xor
sub
inc
and
sbb
or
cwtl
add
test
fcompl
and
stos
cmc
lea
sbb
jne
lret
adc
mov
xchg
jne
loop
mov
jns
cwtl
mov
add
push
push
jl
mov
gs
pop
sub
nop
sbb
add
add
imul
cmpsl
adc
adc
pop
inc
pop
enter
push
std
mov
and
xor
mov
xor
ja
mov
in
xchg
mov
int3
int
sbb
inc
jp
in
jae
int
mov
sub
jge
jmp
iret
xor
adc
imul
cwtl
mov
int
das
test
push
scas
mov
cltd
or
push
fidivl
movsb
dec
cwtl
out
stos
stc
lcall
sub
mov
adc
test
push
mov
mov
outsl
sbb
inc
sbb
shll
jle
jmp
jno
inc
loope
pop
les
iret
bound
and
addl
inc
addr16
mov
sbb
dec
inc
mov
test
sub
add
pop
mov
divl
lcall
mov
xor
adc
xchg
cmp
cmpsb
mov
push
rorl
push
es
mov
mov
xor
shl
sub
adc
lahf
pushf
pop
push
scas
into
imul
inc
mov
lods
xchg
out
jnp
rcrl
scas
xchg
mov
dec
clc
mov
insl
xchg
push
xor
lea
cmp
inc
or
and
out
fdivrs
pmulhw
cwtl
or
pop
push
clc
ljmp
xlat
jne
inc
jecxz
xchg
out
ret
adc
mov
sarb
stc
xor
loopne
in
mov
shlb
push
push
int3
xchg
or
fwait
mov
sub
scas
push
sub
xchg
or
add
push
mov
icebp
int3
push
icebp
adc
aas
mov
insl
adc
mov
or
add
mov
mov
dec
faddl
adc
push
jle
mov
jmp
cs
dec
mov
sub
sti
xchg
sub
xor
repz
mov
setbe
sub
mov
xchg
or
dec
mov
dec
hlt
xor
xchg
jmp
lods
push
cmp
in
jg
push
clc
js
enter
fwait
xchg
lock
jbe
cmc
cwtl
sub
rcll
jmp
lcall
push
popl
orl
scas
adc
loop
mov
outsl
ret
pop
push
adc
mov
mov
fcmovb
call
movsb
jns
cmp
out
mov
outsb
fstps
andb
mov
and
adc
je
or
add
sub
lcall
fwait
iret
pop
mov
imul
sbb
xor
fdivrl
xor
nop
jp
repnz
leave
aam
in
jg
aam
test
add
lods
lock
pop
and
mov
mov
inc
sbb
mov
out
mov
icebp
cmp
cmpsl
imul
mov
push
iret
lret
mov
roll
sbb
lahf
cmp
sub
ret
xchg
adc
repnz
dec
je
ds
inc
inc
cmpsb
daa
movsl
dec
outsl
sahf
dec
les
mov
jne
lea
xor
xchg
add
in
js
or
xor
aaa
mov
xchg
cmp
imul
xchg
fidivrl
cmpsb
sbbl
push
sub
ja
fsubrs
enter
ss
in
sub
es
fisubs
jg
repz
js
sbb
lock
icebp
mov
sti
jo
stos
push
xchg
or
nop
rorl
movb
mov
mov
sarb
cmp
leave
iret
jae
jnp
pusha
stc
xlat
fldenv
mov
jae
nop
jmp
sub
in
cmp
cli
add
xor
lods
incb
push
pop
insb
add
add
mov
or
fmuls
mov
inc
xor
bound
imull
sbb
and
xor
dec
add
sbb
mov
xchg
sbb
add
sti
or
inc
or
add
les
dec
pop
gs
xor
dec
inc
dec
test
mov
mov
xchg
jne
mov
inc
xchg
test
in
cmp
addr16
popf
xor
jno
adc
outsl
call
jae
mov
sub
adc
aad
aam
sbb
cmp
xchg
cmp
jmp
scas
mov
adc
lods
ret
xchg
sub
or
jle
lods
call
fwait
sub
in
rorb
mov
lods
pop
cmp
or
cmp
in
adcb
push
rcrb
clc
push
imul
loop
and
cmpsl
int3
or
mov
add
push
orb
imul
xchg
xor
mov
pop
mov
int3
fistps
pop
scas
int3
lds
lret
and
push
mov
push
pop
scas
insb
fsts
scas
pushf
xchg
mov
imul
jns
jnp
cmp
push
pop
jp
add
in
fidivs
cs
add
sub
movsb
jns
xlat
out
xchg
iret
mov
rolb
in
push
inc
and
dec
or
popf
cmp
and
xchg
adc
aaa
and
xor
hlt
xor
insb
dec
aaa
sysenter
pop
int
cld
stos
fs
clc
clc
inc
mov
mov
popf
xchg
mov
sub
out
or
xor
fwait
ja
push
shrl
iret
ja
push
xor
loope
nop
in
inc
mov
sub
and
jae
xor
sahf
add
fistl
test
add
nop
mov
mov
cmp
sti
mov
mov
daa
cwtl
mov
mov
add
pop
daa
xor
iret
jbe
lret
mov
push
cmp
mov
js
dec
cld
xor
repnz
pop
ds
gs
jno
in
add
add
jns
mov
pop
fimull
mov
mov
ret
movb
lret
jge
fs
nop
cld
fimuls
lret
js
mov
popa
lret
push
push
les
pop
mov
arpl
mov
je
sub
mov
fbstp
ljmp
pop
cli
mov
mov
inc
sub
mov
sbb
inc
mov
faddl
jmp
cltd
std
jbe
push
in
mov
sub
das
pop
out
and
add
mov
dec
out
or
add
and
shrb
add
loop
dec
in
and
loopne
xor
push
rolb
pop
adc
adc
shll
shll
mov
push
adc
out
adc
push
mov
cmp
xor
jge
adc
jns
popl
stos
cmp
xor
fbstp
mov
movsl
add
loope
push
xchg
aaa
jnp
cltd
int3
and
xchg
cmp
test
fsts
sbb
aas
fldl
js
or
pushf
icebp
jp
scas
lods
add
inc
enter
int
data16
data16
test
iret
mov
add
int3
jo
jbe
jge
out
lock
in
jae
mov
jbe
jg
ret
mov
out
jge
jecxz
cmp
popa
mov
test
mov
outsl
mov
sti
nop
or
cmp
lock
adc
arpl
ret
push
cmp
xchg
pushf
lret
rclb
out
and
test
xchg
cltd
mov
mov
mov
push
addb
sub
sahf
hlt
push
repz
pop
mov
inc
and
je
dec
stos
pop
loope
xchg
repnz
dec
cmpsl
and
mov
cmc
std
or
fs
dec
mov
adc
push
push
jne
outsb
xor
inc
jnp
mov
negb
mov
js
and
iret
inc
dec
lock
xchg
xor
movsl
mov
iret
cld
lret
push
scas
adc
or
dec
xchg
scas
jb
pop
repnz
and
push
fwait
pop
mov
fwait
outsl
mov
mov
push
test
stos
ss
fwait
notl
cs
imull
inc
lods
mov
add
jo
jmp
lods
pop
push
inc
mov
push
mov
adc
add
jge
pop
dec
jns
mov
dec
js,pt
movsb
add
rcrl
repz
dec
sahf
aaa
insl
or
dec
mov
push
mov
mov
inc
mov
push
cmp
adc
or
adc
popa
lea
fwait
aas
das
xchg
add
dec
jno
inc
test
or
inc
adc
and
cmpsb
movsb
out
mov
jbe
xlat
hlt
mov
imul
xchg
jge
icebp
insl
and
imul
repnz
jp
fadd
addr16
xor
out
pop
in
xlat
movntq
or
jmp
je
dec
cwtl
xor
pusha
xor
js
pop
outsb
nop
adc
arpl
fsubr
sbb
and
rorb
sub
ret
sbb
jg
popa
and
add
sub
cmp
leave
shlb
int
enter
and
and
mov
fwait
stos
pushf
into
inc
jo
cmp
or
inc
xchg
daa
add
add
popa
not
cmp
iret
int3
or
stos
imul
leave
test
pusha
or
rcrb
inc
mov
xchg
push
mov
lods
shl
pushf
cltd
je
jno
ja
cld
cltd
push
popa
mov
or
cmp
andb
outsl
outsb
ds
xor
jb
and
mov
xor
repz
loop
push
mov
scas
mov
enter
cmp
pop
xor
dec
iret
in
xor
and
daa
ret
test
and
outsl
call
iret
adc
orl
pop
aas
dec
pop
jmp
adc
ds
push
nop
sbb
pusha
pop
je
inc
scas
jb
mov
or
sbb
std
push
in
cmc
stos
sub
jne
ss
cli
sbb
cwtl
loop
xlat
cmpsb
or
inc
cmc
jb
pop
xchg
jbe
out
pop
inc
hlt
shll
daa
test
test
push
subb
cmp
or
ja
mov
testl
je
daa
dec
fsub
adc
sbb
fnsave
rcrb
flds
xchg
jb
add
pop
jns
mov
rcr
jno
rcrl
sub
and
ja
or
push
pop
and
xchg
lea
orb
lret
and
scas
subl
or
and
or
or
pop
mov
cli
stc
or
xchg
daa
cmp
addb
push
xchg
mull
aas
jbe
das
push
ss
xchg
inc
xchg
icebp
jns
test
dec
mov
push
cmp
ljmp
lahf
jmp
cwtl
sahf
or
aaa
pop
popf
dec
cmpsb
adc
lahf
push
pop
pop
lods
shlb
push
data16
adc
xchg
sarb
enter
pop
out
leave
xchg
cli
pop
push
or
rclb
pop
lret
fdivr
xor
and
xchg
aam
js
int3
lds
inc
or
mov
jge
js
xchg
call
lea
lock
shl
xchg
sbbb
xor
aad
stc
enter
cld
cmp
cmp
add
mov
imul
push
lret
pushf
dec
dec
scas
mov
push
push
js
cmc
mov
scas
jnp
sub
xchg
cmc
sub
cli
push
and
test
movsb
ja
mov
addl
pop
mov
shll
inc
adcb
jle
jnp
and
iret
loop
icebp
sub
jo
and
fwait
stc
xchg
out
test
adc
int
ficoms
add
into
call
sub
movl
xor
ficoms
pop
imul
ja
cmc
inc
pop
ds
fwait
mov
in
sbb
rep
mov
fldl
fdiv
lret
and
inc
pop
jge
test
xchg
in
push
cmpsb
push
pusha
repnz
fs
add
jb
imul
mov
and
mov
gs
push
leave
fildl
mov
nop
loop
subb
inc
lahf
inc
ja
movsb
andb
push
scas
cmp
cli
clc
outsb
int
push
addr16
sarb
popf
shlb
hlt
les
sbb
mov
imul
dec
iret
add
pop
jb
xor
stos
fcomps
andb
mov
es
and
or
mov
add
dec
sub
gs
cmp
ss
pop
inc
mov
jmp
mov
outsl
shrl
movb
jb
add
xor
add
lods
shlb
repz
add
arpl
repz
and
mov
jno
fadds
outsb
fwait
mov
fwait
and
xlat
jbe
xchg
fisubrs
les
fwait
xchg
adc
lcall
push
les
ret
fisubrs
jnp
dec
push
mov
add
adc
adc
xor
and
cmp
adc
fsubs
and
pop
lea
add
cmp
neg
cmpl
fs
push
push
out
arpl
sahf
adc
mov
push
mov
aam
xchg
and
aam
das
aaa
jns
xor
fisttpl
insb
and
lret
pop
push
push
cwtl
jbe
loope
jbe
inc
sbb
shrl
rcll
es
pushf
lea
push
ds
mov
scas
fld
add
out
stos
xlat
pop
mov
stc
cld
mov
fisubl
insb
push
pop
push
pusha
cmpb
mov
jae
test
test
inc
sbb
jge
or
lods
es
aas
lock
fstpt
mov
fsubs
cmc
or
push
repnz
xor
scas
mov
push
xchg
outsl
mov
ds
insb
push
test
push
mov
or
outsb
js
lcall
lahf
or
es
xchg
cld
in
push
mov
and
or
imul
dec
adc
les
mov
adc
xchg
lcall
and
add
cmp
and
and
push
mov
sbb
ret
out
frstor
cmpsl
mov
in
pushf
imul
int3
dec
inc
add
data16
inc
loopne
pop
inc
lea
movsl
lock
jecxz
lock
scas
xchg
fdiv
push
or
test
pop
fistps
cmpb
mov
xchg
out
daa
sahf
testb
jl
mov
lret
sbb
jb
jae
or
fs
or
mov
iret
push
mov
add
nop
stos
sbb
sub
inc
push
dec
mov
mov
push
or
push
cmpsb
jle
add
inc
jge
fdivrl
shll
fnstcw
xor
lahf
rolb
xchg
add
jge
push
jbe
scas
add
lods
cltd
loop
in
mov
xor
mov
cwtl
scas
push
lock
sahf
cmp
stos
je
aas
and
subl
aad
loopne
sti
xor
popa
xor
sbb
sarb
iret
cli
lock
jb
scas
and
ret
xor
push
or
jl
jge
sbb
mov
jnp
dec
call
mov
xor
mov
stc
mov
inc
or
pop
scas
xchg
sarb
jmp
sbb
inc
mov
adc
push
adc
call
mov
lret
loopne
stc
fbld
imul
lea
sahf
inc
push
arpl
mov
shlb
aaa
ljmp
xchg
push
jmp
dec
add
repnz
lods
and
ret
add
or
sbb
push
mov
mov
fidivrl
ja
das
js
and
mov
xor
sbb
and
rep
push
adc
xor
std
xor
shr
icebp
jne
pop
sbb
mov
int
mov
jno
mov
ret
mov
mov
xchg
push
stos
lea
add
lahf
aam
add
mov
in
mov
or
mov
ds
cmp
je
fmull
aas
cli
adc
insb
add
enter
out
test
mov
inc
sbb
lea
and
jnp
decl
cmp
mov
imul
ja
push
or
and
xor
xor
movsl
repnz
xor
cmp
jp
ss
xchg
jae
xor
inc
mov
insb
push
push
fisubl
jae
mov
adc
outsl
pop
cld
aad
arpl
push
push
xchg
lcall
sub
ret
sub
sub
inc
sbb
jg
out
cmp
cld
lods
add
push
das
mov
cmpsb
jecxz
mov
xor
add
shr
jb
add
fdivr
and
loop
inc
stos
inc
andl
sub
add
jae
xor
xor
negl
mov
push
incl
mov
repz
sbb
in
in
inc
xchg
scas
add
or
insb
inc
sub
lds
fs
cs
les
and
xor
lahf
or
iret
mov
sub
sub
adc
or
inc
mov
mov
xchg
fcmovne
mov
lods
lahf
rcll
sub
das
and
mov
stos
pop
pop
dec
sub
out
call
imul
fisttps
addl
jns
push
lods
pop
mov
jmp
lock
xchg
movsl
jne
xor
mov
mov
idiv
adcl
cltd
adc
or
ja
fwait
sarb
sbb
or
test
xchg
push
aaa
loop
sub
shll
cs
mov
jmp
mov
xchg
jecxz
lahf
ret
out
jp
inc
and
insb
xor
cmp
sub
mov
sbb
xchg
icebp
repnz
mov
xchg
add
xchg
lret
lods
repnz
add
adcl
out
cmp
test
div
out
push
xor
jecxz
inc
dec
sbb
pop
mov
or
mov
clc
pop
repnz
dec
test
push
out
dec
aad
ret
mov
xchg
adc
lds
jno
and
ja
sarb
outsb
movb
adc
push
mov
loope
pop
cmp
fs
addb
adc
out
data16
addb
clc
movsl
adc
shll
cmpsl
in
sbb
and
testb
push
sahf
xor
loop
addr16
mov
sahf
push
out
popf
pop
jno
mov
pop
sbb
jae
xor
hlt
icebp
int
loope
and
fwait
cmpsb
mov
push
mov
mov
popf
divl
pusha
leave
lahf
jae
and
lret
xor
aad
jne
stos
cmp
mov
aaa
jo
and
aas
in
mov
es
inc
mov
add
outsb
sbb
or
insb
sbb
iret
test
lret
jae
les
cli
arpl
xor
push
test
xchg
in
xlat
jmp
mov
mov
adc
out
jb
jmp
lods
mov
xchg
aam
mov
jno
cs
xchg
testl
xor
out
lret
call
bound
stos
mov
cmp
push
cmpsl
int
or
and
dec
push
push
pop
cs
nop
call
insb
adc
cs
push
hlt
repnz
mov
and
pop
xor
add
xchg
leave
lret
dec
iret
les
movsb
cmp
xchg
cltd
sub
mov
les
test
or
push
ds
aam
movsb
dec
and
jmp
outsl
daa
lods
das
dec
daa
sahf
mov
push
sbb
sbb
fs
push
adc
mov
test
push
mov
imul
out
inc
repz
or
sbb
fistpl
adc
cld
lock
movsb
loopne
cmp
lods
or
inc
out
stos
loopne
sub
inc
mov
insb
ljmp
adcl
stos
test
adc
fsts
aam
push
sbb
sub
jmp
cmp
dec
int
ljmp
jno
jae
fisubs
sbb
fnstcw
mov
pop
addb
add
and
enter
std
xor
add
lcall
adcb
shr
ss
out
sti
dec
iret
sub
cmpsb
sub
test
push
xchg
sub
mov
inc
push
sub
adc
test
ret
jecxz
fwait
in
fimull
lahf
xchg
mov
mov
jg
dec
rcr
mov
mov
xchg
push
scas
rcl
js
cmpsb
std
mov
movsb
mov
mov
lret
das
push
orl
or
in
xchg
jmp
cwtl
js
jl
dec
rcrb
mov
sub
mov
jl
xchg
jg
popa
mov
leave
jmp
or
add
cmp
xorl
sub
das
aam
loop
and
sbb
rcrl
enter
aas
in
shrl
mov
setb
sahf
jmp
imul
scas
punpcklwd
adc
loop
popf
ret
rolb
insl
push
aam
jo
mov
in
lahf
mov
shrl
test
repz
aas
roll
cs
es
in
sarb
repz
jns
dec
mov
ficoml
fistps
pop
sbb
mov
sbb
aas
out
es
xchg
int3
iret
dec
xchg
xor
cmc
ret
adc
jno
cltd
insl
cmp
adc
adc
mov
cs
jp
adc
jnp
in
int3
cmp
lcall
fs
lds
test
in
push
fwait
cmpsb
inc
mov
push
shll
jb
dec
mov
mov
in
rcr
adc
idivb
mov
cmp
mov
test
pusha
loopne
jno
repz
pop
insb
cmpl
ss
aad
pop
popl
rol
in
push
stos
xchg
clc
mov
inc
add
xor
je
sbb
insl
cmp
leave
repnz
out
pusha
in
outsb
lret
loop
in
jo
push
jno
repz
movsl
nop
pop
adc
popa
std
jno
pop
cmp
out
add
js
aaa
ret
stos
adc
mov
mov
pmuludq
aam
adc
shl
cltd
or
lods
test
arpl
cmp
cltd
js
xchg
jne
mov
jmp
sub
cmp
xorb
jo
push
dec
and
in
mov
loop
adcl
lret
scas
in
addl
mov
sub
mov
aaa
jae
mov
inc
into
mov
and
jne
sti
scas
loopne
jnp
icebp
pop
sbb
dec
lret
push
inc
xchg
cmp
sub
xchg
jb
push
xor
xchg
jl
test
jle
inc
mov
in
aaa
inc
cmp
adc
bound
mov
push
cmp
xchg
loopne
ret
imul
cmp
mov
es
push
sub
xor
addr16
pop
ficoml
lfs
inc
dec
mov
rcr
dec
cmp
dec
xlat
stos
xor
xchg
mov
xor
ljmp
adc
movsl
or
bound
cltd
je
out
mov
fwait
dec
adc
inc
adc
aaa
sub
popl
push
jp
and
dec
iret
xchg
mov
mov
and
pop
insb
push
mov
push
xchg
adc
ret
rorl
test
imull
cmp
push
mov
loopne
push
mov
xor
xor
outsl
pop
pop
out
or
cmpsb
fs
mov
xchg
ja
mov
cmp
push
in
js
jb
jno
lret
mov
mov
cmp
push
mov
hlt
jmp
xchg
stc
mov
and
adc
in
and
xchg
cmc
roll
fs
cmp
out
xor
mul
fcoms
fwait
push
ds
in
icebp
je
ret
cmp
mov
subb
mov
fs
jo
or
pop
iret
pusha
inc
mov
scas
out
or
in
popa
adc
fnstsw
cli
sub
xchg
clc
pop
mul
dec
int3
add
add
out
ret
push
mov
orl
fisubrl
das
gs
push
pop
cmp
sub
add
or
inc
pop
rcl
cli
filds
jg
out
xorb
mov
dec
pop
ss
xchg
jno
int
jle
test
lret
adc
pushf
mov
ret
inc
pop
dec
xor
inc
cmpsb
test
test
insl
cmpsb
jae
std
outsb
sahf
jo
adc
add
xor
adcb
or
pop
pop
cmp
add
sbb
cmpsb
sti
xor
out
mov
xchg
push
inc
sub
stc
aam
fisubs
jg
add
aas
test
sub
or
mov
outsb
mov
xor
pop
cmp
popa
adc
or
push
loop
iret
cmp
add
into
cmp
dec
inc
mov
call
leave
add
push
std
lock
fmuls
icebp
push
lods
sbbl
inc
imul
pop
push
xchg
and
lods
pop
sbb
lret
jnp
movsl
out
mov
loopne
into
push
sti
arpl
fimull
sub
mov
lock
dec
sub
xor
mov
pop
xor
aam
loop
and
into
push
mov
mov
hlt
test
xor
aad
mov
movsb
mov
adc
daa
das
sbb
idivl
icebp
outsl
ljmp
dec
xlat
hlt
lahf
xlat
es
mov
inc
xchg
cmp
lea
cmp
addr16
and
in
addr16
cmp
sbb
sub
out
test
xor
loope
sub
jge
adc
clc
ja
andl
mov
clc
push
xor
popaw
in
into
psrlq
imul
xor
std
sbb
dec
push
adc
je
inc
xor
mov
fldcw
sbb
pushl
cld
call
nop
or
push
lods
fistl
and
mov
add
bound
test
xor
cmp
out
std
sub
cmp
inc
movsl
jge
cmpsl
incb
sbb
sahf
mov
out
ret
lcall
stos
int3
orb
insl
inc
dec
pushf
jmp
addb
into
das
pop
dec
cmp
add
pop
loope
ljmp
xchg
lock
mov
test
jo
es
xchg
popf
shlb
dec
xchg
pop
ret
out
imul
lods
mov
sbb
cmp
push
mov
sar
mov
shrb
cmpsl
push
xchg
add
cs
cmp
fistpll
push
push
xor
or
cmc
mov
dec
xchg
jl
mov
or
fdivrs
lahf
aas
js
lods
icebp
imul
daa
sti
roll
aam
fbstp
fucomip
fisubl
sbbb
add
mov
stos
dec
push
rorl
adc
test
in
inc
mov
lods
loope
insb
jbe
mov
cmp
imul
pop
inc
cli
fdivs
dec
mov
mov
notl
pop
jmp
cmp
jae
jb
daa
jnp
pop
in
pop
leave
push
fldlg2
popa
cmpsb
lret
or
lock
add
add
push
iret
pop
jb
mov
mov
lret
jle
jne
repnz
in
adc
cld
jl
cmc
pusha
mov
repnz
arpl
andb
xchg
scas
out
loop
or
lea
fdivrs
or
sbb
test
dec
mov
leave
push
push
mov
mov
adc
mov
jecxz
xchg
jle
ficoml
pop
out
rclb
testl
pop
xchg
jno
lods
jg
pop
stos
call
ds
and
jb
add
sbb
add
rcrl
mov
add
shl
jecxz
mov
insb
sbb
aaa
push
jae
lret
dec
adc
mov
cmp
dec
andl
xor
mov
stos
dec
repz
add
sub
inc
inc
sub
adc
mov
rcrl
push
imul
dec
and
push
imul
filds
insl
arpl
test
scas
jle
cmp
lods
and
or
hlt
jne
dec
jl
in
mov
inc
fwait
jp
cli
popf
add
mov
jns
inc
cmp
pop
mov
mov
and
call
xchg
jge
xchg
or
cmp
sbb
adc
out
and
aam
inc
or
add
sub
and
dec
xor
cli
jne
enter
les
mov
sub
lods
jne
xchg
xor
jno
daa
pop
pop
xchg
or
cmp
repz
imul
repz
add
jle
jge
lret
shl
push
outsb
push
push
stc
in
idivb
out
push
out
or
sti
out
pop
test
mov
addr16
push
dec
or
cltd
mov
push
sbb
mov
pop
cmp
pop
inc
mov
nop
dec
loopne
je
pop
push
add
shl
psrad
fstpl
sub
mov
cs
sub
adc
bound
sub
scas
cmpl
push
scas
mov
and
ret
gs
jmp
bound
and
aas
insl
je
cmp
xchg
fcoms
insl
mov
es
leave
dec
adc
mov
lds
jmp
and
adc
dec
jp
shr
or
push
shlb
icebp
add
fnstcw
mov
cld
pop
cltd
mov
daa
shr
adc
jno
int3
inc
movsb
arpl
mov
jl
mov
dec
and
push
xor
stos
mov
notl
inc
int
push
cmpsl
mov
in
mov
dec
mov
fiadds
loope
sti
imul
xchg
ret
scas
add
jbe
call
stc
test
cmc
xor
jl
jae
mov
mov
fs
loop
xorl
lock
repnz
xchg
std
insl
pop
xlat
sbb
dec
jns
jecxz
adc
cmp
jle
adc
test
imul
out
lods
jmp
jb
jno
loop
outsl
imul
xchg
rorl
pop
pop
insl
lret
daa
or
cmp
xor
outsl
jb
sub
les
pushf
les
hlt
cs
mov
subl
flds
jb
and
lret
mov
shll
push
lods
outsl
dec
mov
xor
cmp
xchg
push
add
jns
jns
mov
mov
or
sti
popf
sbbb
mov
xchg
out
fdivl
cwtl
imul
jmp
fldt
rcrb
rolb
popf
cmp
sbb
addr16
jno
pusha
adc
les
in
inc
in
popa
sahf
jp
dec
sub
mov
cwtl
sub
cmpsb
mov
pop
scas
mov
je
sbb
or
push
popa
sub
cmp
jle
jle,pn
xchg
out
push
outsl
dec
std
and
xlat
test
mov
push
mov
and
push
xchg
cmp
adc
rol
xchg
sub
push
jae
sti
or
pop
mov
mov
jns
scas
sub
jae
cmp
cmp
mov
les
jne
xchg
test
adcb
xor
rorl
jmp
out
data16
imul
inc
pusha
fildl
add
cmp
es
sbb
mov
cmp
lahf
and
lds
popf
or
pop
inc
push
inc
cmp
sahf
and
stc
pop
or
imul
hlt
gs
mov
mov
call
fldenv
cwtl
das
push
sub
add
push
sub
or
jnp
sbb
lret
xchg
repz
js
push
dec
in
sub
test
outsb
sub
jp
or
xchg
data16
mov
adc
mov
jle
and
cmc
sbb
mov
ja
xlat
push
lahf
cld
and
mov
lods
leave
div
pusha
cmp
js
push
inc
pop
cmp
stc
xor
std
jae
pop
push
push
cli
cmpsb
loope
sbb
lock
movsl
mov
and
ret
jp
rcr
stos
aam
insl
push
mov
enter
xchg
nop/reserved
insl
lcall
cwtl
out
insl
or
addr16
stc
loopne
gs
adc
jmp
add
addr16
outsb
aad
xchg
les
test
jecxz
jge
inc
ss
imul
push
sbb
jmp
int
jnp,pn
nop
push
push
inc
popf
cmp
sub
xchg
mov
aaa
adc
and
sbb
int3
mov
sbb
sub
add
pushf
or
testl
inc
dec
std
mov
mov
test
test
push
cmp
es
lcall
iret
add
sbb
and
cli
mov
fisubrl
insl
and
in
dec
popf
push
xchg
dec
filds
push
repnz
dec
inc
pop
mov
push
sbb
scas
jmp
subb
sbb
xor
and
dec
mov
inc
cmp
and
cli
add
dec
add
sbb
ficoml
test
cmc
aas
std
idivb
mov
pop
stc
mov
pop
pop
jle
cmp
mov
cltd
dec
test
or
or
aaa
lods
jne
sub
dec
push
mov
enter
jne
bnd
jl
into
push
xor
orb
inc
or
xor
cmp
xorb
fcmovnbe
lock
xchg
push
pop
pop
mov
lds
or
cmp
cld
pop
jne
sub
into
notb
int3
sub
aaa
sub
lods
out
fs
outsl
or
and
push
cmp
shll
shrl
es
pop
mov
int3
push
push
jne
mov
cmp
xchg
adc
add
mov
and
popf
pop
jns
in
dec
jo
cmpsb
xchg
mov
xchg
dec
fimull
mov
insb
popa
jmp
cvtss2sd
xlat
arpl
enter
das
sub
test
xchg
xchg
xchg
cld
push
jg
in
and
shl
imul
das
pop
inc
lret
fstps
cmc
scas
xor
les
mov
xchg
push
xchg
arpl
and
les
idivb
inc
pop
xor
mov
mov
xchg
jmp
stos
jp
xor
and
fsubs
add
dec
test
mov
cld
mov
loopne
pop
sbb
mov
mov
or
or
aaa
xchg
jl
iret
and
rcr
negb
xchg
mov
inc
les
xchg
xor
sbb
mov
xchg
push
sti
icebp
cmp
cmp
cmp
lods
inc
mov
ret
mov
dec
rorb
mov
gs
lahf
adc
adc
fidivl
fistpll
sbb
sub
cmp
push
jge
cmp
out
insb
sbb
aas
fdiv
inc
js
xchg
push
or
les
add
adc
xor
movsb
dec
aad
cmp
lcall
ljmp
push
xor
dec
mov
cltd
popw
or
sti
ret
jge
pop
lods
mov
ret
int3
inc
inc
ds
flds
adc
in
and
xchg
popa
das
jno
mov
imul
arpl
add
inc
xchg
and
inc
ljmp
clc
cmp
sub
int
clc
mov
jnp
cmp
outsb
add
add
inc
in
inc
pushf
jecxz
popa
inc
rcrb
mov
subl
xor
jo
xchg
inc
lods
cld
nop
repnz
mov
xchg
cmp
sbb
ljmp
jb
fstps
push
mov
into
movsl
icebp
fwait
pop
mov
test
jno
das
nop
dec
push
outsl
or
and
dec
pop
movb
cmp
lret
jl
jl
push
mov
stos
jl
sub
push
adc
or
adc
enter
cmp
les
stc
js
add
cmc
ret
sub
aaa
pop
iret
adc
cmp
jmp
mov
dec
fistl
mov
sbb
and
imul
jmp
sbbl
es
sbb
add
fs
xor
mov
and
scas
sub
mov
pop
xor
push
adc
insl
dec
repz
mov
rcrb
shll
leave
scas
pop
outsb
dec
test
xor
in
sbb
pop
cmp
cs
jl
sub
pop
cmp
or
add
in
js
sub
push
push
sub
jae
lea
xchg
pop
stos
test
jb
dec
add
jne
xchg
cmpsb
mov
stos
cmpsb
scas
and
into
pop
mov
or
mov
mov
fimull
push
repz
ret
or
mov
xchg
adc
xchg
sbb
sahf
es
aas
enter
stos
mov
jne
mov
jmp
subl
mov
das
sbb
js
add
jb
fcomps
cmp
enter
fmull
push
cwtl
pop
cmp
loopne
inc
sbb
mov
sarb
lcall
add
cmp
jl
sub
call
rorl
rcll
push
ret
les
xor
outsb
jge
aad
mov
push
call
repnz
int3
jle
jne
mov
mov
add
mov
out
and
jmp
ret
gs
dec
test
stc
cmp
scas
fistpll
iret
arpl
sbb
jnp
ds
pop
cmp
into
mov
aas
and
sub
sti
mov
rorb
cmp
fwait
mov
sub
movsl
push
dec
es
push
test
test
cmpsl
xchg
inc
std
pop
mov
push
out
pop
cmpb
f2xm1
icebp
jl
stos
inc
jge
mov
mov
inc
mov
sub
pop
scas
sahf
lcall
mov
push
dec
out
or
inc
push
clc
xorl
inc
mov
enter
out
dec
or
push
jo
ret
sub
xor
shll
mov
call
xlat
inc
sub
mov
or
enter
and
and
xor
xchg
cmp
pop
jp
mov
xchg
fldl
sub
aaa
dec
bound
aam
xchg
setl
hlt
arpl
int3
decb
inc
outsb
mov
add
jae
data16
cltd
aad
ja
popa
shll
inc
shlb
or
cmc
dec
inc
outsl
sbb
pop
sbbb
dec
inc
jnp
dec
sar
sub
sub
xchg
addr16
nop
lret
sbb
mov
arpl
mov
add
push
push
sbb
xchg
dec
mov
lret
add
push
cmc
addr16
bnd
pop
sbb
adc
scas
xlat
rorl
push
lock
mov
inc
fiadds
je
mov
rorb
sti
sbb
mov
cmc
out
call
pushf
push
and
loopne
shl
cli
adc
repnz
xor
and
mov
xor
xchg
pop
gs
sbb
ja
mov
nop
pop
pop
outsb
xor
jbe
out
push
add
pop
or
inc
fs
dec
in
ret
loop
add
jmp
arpl
ja
sub
enter
xchg
and
or
xchg
sbb
in
dec
icebp
ret
mov
outsl
in
xor
or
repnz
push
adc
or
mov
cwtl
dec
cmp
cmc
ljmp
and
in
cmpl
pop
cs
leave
adc
sub
lret
pop
icebp
inc
test
pop
inc
push
and
or
fildl
pushf
gs
mov
mov
xor
imul
cmp
adc
mov
inc
mov
mov
xor
popa
mov
push
icebp
xor
ja
push
dec
jae
sbb
push
add
push
cmc
push
in
into
fcom
pushf
sti
notb
xchg
into
scas
jae
sbb
mov
mov
or
ror
into
aad
sub
dec
ljmp
iret
pop
ss
leave
les
adc
or
add
adc
xor
xchg
js
sahf
fnsave
push
imull
mov
pop
scas
jge
lret
cmp
push
dec
les
fnsave
clc
cmp
push
fnstcw
xor
xchg
sbb
mov
mov
enter
movsl
cs
xlat
and
jecxz
aas
cmpsl
pop
xchg
jo
mov
fdivs
lcall
lods
cmp
or
xor
mov
es
out
cmp
js
rcr
ret
adc
ds
orb
jl
scas
roll
fcoml
add
cld
ljmp
sbb
sti
push
mov
sahf
imul
lret
mov
jne
std
ja
arpl
lahf
ljmp
mov
mov
xchg
hlt
imul
shll
aas
mulb
jnp
aam
xchg
repnz
cmp
jo
lods
push
add
xor
jl
data16
rcrb
and
sbb
mov
add
add
adc
repz
andb
lcall
jo
sbb
mov
dec
mov
xor
test
or
jo
mov
out
loope
in
or
add
aaa
es
push
jae
and
xchg
cltd
sahf
cwtl
repz
xchg
std
mov
cmovp
mov
cwtl
or
xor
jp
test
icebp
outsl
insb
adcb
mov
xchg
dec
or
popa
notb
mov
dec
scas
push
mov
dec
scas
mov
lock
pop
xor
movsb
xchg
shlb
outsb
and
outsb
cmp
jmp
int3
aad
mov
daa
add
push
xchg
out
sbb
and
sub
push
shrl
inc
inc
daa
inc
pop
mov
mov
push
xor
add
dec
pop
out
xchg
in
fsubrl
push
sti
mov
test
mov
div
mov
out
lret
dec
push
xor
xorb
iret
aam
adc
fnsave
lods
daa
xlat
xor
push
push
in
loopne
sti
movsl
mov
cltd
sbb
bound
inc
xchg
stc
sub
adc
shr
sbb
ud2
sub
jo
push
insb
push
or
js
xorl
fs
mov
test
inc
in
loopne
js
cmp
or
pop
pushf
sbb
sbbb
push
xor
pop
pop
in
aad
inc
notb
add
inc
loopne
out
lods
mulb
inc
ja
loope
mov
adc
mov
xchg
stos
imul
or
xlat
xor
cld
movsl
popf
mov
in
icebp
std
xchg
loope
aaa
incb
je
sub
mov
add
push
pop
jg
lcall
ds
iret
jo
div
mov
push
addr16
repz
aam
xchg
scas
pop
jecxz
sbb
popa
jo
push
hlt
pop
std
mov
pop
test
notl
add
shr
push
and
gs
xor
xor
lret
clc
imul
cmp
into
fildll
ja
mov
cmp
and
andl
sub
aam
fs
or
fisttpl
std
repz
popf
nop
mov
jecxz
test
in
inc
jle
mov
negl
enter
pop
push
fcomi
pop
xchg
mov
pop
sahf
sub
sub
and
sbb
dec
outsb
and
sbb
lret
shl
aas
xlat
add
subl
mov
in
sbbl
lret
jae
inc
and
mov
mov
in
jp
sub
and
jae
mov
sub
xchg
push
jne
scas
mov
test
adc
dec
pop
sti
lods
cmp
addl
and
jbe
mov
movsl
dec
add
rcrl
les
imul
sub
cmp
push
hlt
fs
mov
sbb
adc
cmp
aas
nop
dec
push
push
aad
in
sub
fwait
int
mov
dec
inc
mov
lret
mov
xor
jp
cmp
or
mov
mov
test
push
push
push
push
adc
jnp
add
arpl
enter
mov
js
shlb
sarb
xchg
push
imul
push
sahf
pop
xchg
push
push
cmovp
das
hlt
push
lds
icebp
mov
rcrl
cwtl
xor
lahf
add
rolb
fucomi
xchg
push
ljmp
call
dec
xchg
xor
cld
dec
jmp
outsb
mov
adc
insl
outsl
mov
mov
mov
idivl
pop
xor
fistpll
cli
insb
shrb
dec
testl
sub
les
rorb
cmp
xchg
fiadds
or
movsl
test
pop
mov
mov
outsb
push
push
push
mov
shrb
cltd
mov
jb
rcrl
frstor
dec
and
jmp
cmp
add
cmp
mov
mov
push
movsb
data16
popf
testb
dec
addr16
imul
adc
ss
or
js
in
xor
out
push
shr
cwtl
aaa
std
pusha
xchg
scas
adc
stc
sub
add
pop
fstpl
lds
ret
fs
scas
xor
lock
pushf
sub
aam
cmc
cmp
sbb
cs
inc
cmp
or
incl
popa
je
or
cli
int3
ds
les
xchg
loop
or
insl
xchg
aaa
fldcw
or
push
xchg
outsl
into
jo
inc
dec
mov
or
in
sbb
int
dec
push
popa
or
xor
or
in
sbb
neg
nop
mov
pop
aaa
push
insl
mov
pop
lods
push
mov
je
int
data16
mov
or
aas
mov
in
lds
xchg
lock
xor
mov
jbe
mov
adc
adc
in
xchg
sbb
adc
in
out
mov
leave
mov
addb
cs
jne
stc
jecxz
sub
int
test
mov
popa
fwait
lret
pop
icebp
pushf
fimull
into
jns
sahf
out
and
adc
sti
in
rcl
mov
inc
pop
test
div
aad
jmp
scas
add
xlat
rorl
test
dec
ret
bound
mov
add
inc
xchg
lcall
adc
jnp
mov
flds
mov
inc
stos
xor
ficoms
in
fistps
and
movzwl
adc
cltd
popf
into
pusha
jp
je
mov
dec
push
jp
sbb
fdivl
inc
jbe
jo
and
negl
jno
mov
dec
shrl
es
sbb
aas
addl
xchg
inc
cltd
dec
jle
inc
test
cmp
mov
int3
jnp
mov
push
stos
pop
or
xchg
sarl
fcmovbe
or
push
or
mulb
and
sub
xchg
or
adc
aam
addr16
jno
imulb
lods
rcrb
jmp
jmp
pushw
aad
mov
adc
jp
stos
lahf
pushf
ret
push
sub
test
aas
shlb
out
inc
mov
negb
bound
roll
mov
and
insl
mov
ret
scas
xor
mov
out
dec
or
or
xchg
aaa
movsl
repnz
stos
push
dec
sub
ss
fmull
mov
lock
mov
lock
jge
pop
jne
xor
inc
mov
push
popf
dec
push
jp
into
dec
cs
in
rep
lods
xor
decb
push
fisttpll
add
enter
xchg
mov
push
sub
mov
insl
or
aas
pop
and
xchg
jnp
stos
sbb
xchg
sub
cmpsl
mov
stos
int
insb
push
lcall
fld
gs
mov
es
xor
cltd
sub
into
std
push
das
push
sbb
pop
xchg
xor
sub
mov
sti
repnz
js
mov
mov
inc
mov
inc
or
push
adcb
bound
add
mov
loopne
aam
cmp
and
push
xlat
insb
mov
stc
pop
ljmp
roll
loopne
push
add
mov
lahf
mov
decl
cmpsb
sbb
outsb
insl
push
jmp
in
sub
xor
pushf
sarl
in
std
push
dec
xor
pop
fsubr
add
repnz
lahf
roll
lret
lea
cmp
mov
aaa
add
inc
outsb
loopne
gs
mov
lret
push
adc
mov
shlb
popf
repz
roll
cli
mov
loope
int
jl
js
dec
adc
inc
jmp
pop
mov
mov
push
sbb
or
push
sti
ret
stos
xor
inc
mov
jae
mov
sub
sarb
test
or
cltd
mov
push
jp
loop
jl
inc
loopne
shr
test
cmpsl
fisubrs
sbbl
scas
push
lea
ds
push
push
cmp
push
and
push
cmp
xlat
and
push
pop
xlat
ud2
dec
sahf
push
cltd
pop
cmp
inc
icebp
dec
lock
mov
test
mov
lds
insl
aaa
sub
pushl
in
fwait
pop
mov
fists
mov
rorb
pop
mov
mov
push
jle
jle
pop
std
push
sbb
mov
movsb
push
fnstenv
movsb
jp
lds
adc
sub
sbb
aam
nop
out
pop
mov
push
not
rcll
mov
pop
mov
push
xchg
pop
cli
mov
jle
or
loop
lea
imul
insb
cltd
scas
add
dec
xchg
dec
scas
aas
scas
fcmovb
or
lahf
fwait
xor
dec
pop
ds
stc
movsb
mov
jecxz
dec
jne
popf
cmpsl
xor
dec
out
mov
xor
aam
rcrl
xor
jge
test
insl
or
dec
lcall
cwtl
or
mov
add
sub
sub
flds
push
cmp
addr16
sbbl
adc
and
loopne
inc
xor
push
in
and
std
jne
mov
mov
ja
sub
jmp
mov
movsb
imul
dec
shr
shrl
fisttps
mov
ss
test
and
jnp
and
pmaxub
ss
dec
fistps
add
sub
negl
xchg
es
cmpsb
sti
lcall
je
sub
adc
popa
inc
loopne
fs
loop
or
outsb
sbb
mov
jb
aas
test
push
dec
fstpt
dec
cmp
mov
and
stos
div
mov
push
fisubrs
add
lcall
mov
leave
sbb
mov
mov
dec
lret
jb
mov
in
into
int
jl
push
fbstp
mov
adc
out
mov
or
nop
lods
pop
mov
in
jge
shlb
sahf
sbb
loop
fwait
leave
stc
adc
jg
jnp
xor
cltd
out
xlat
cmp
inc
cmp
mov
xor
pop
pop
jl
addr16
outsb
jle
and
add
jecxz
ja
push
insl
jo
push
sbb
in
jb
push
rorb
pop
and
insl
in
sbb
aad
lods
xchg
mov
xchg
jbe
jecxz
in
movsb
pop
clc
sti
outsl
sub
mov
dec
sbbl
test
daa
jnp
add
inc
fidivrl
dec
pop
or
sbb
xchg
sahf
xchg
push
sti
test
cs
xlat
mov
push
cmp
sbb
sarl
iret
inc
mov
orps
or
adc
ljmp
and
test
inc
add
imul
loopne
jns
xlat
int
fcomp
mov
inc
mov
movsb
stc
ljmp
cmp
mov
mov
in
jno
xor
pop
movsl
pop
test
insl
push
test
daa
ficompl
loope
xchg
dec
add
pusha
loope
ja
push
fdiv
xor
mov
jg
cmp
or
xor
cmp
aas
out
fsubrp
dec
sbb
je,pn
int3
je
push
pop
insl
sub
sbb
jecxz
pusha
das
push
in
push
loop
push
aas
cmp
or
jp
into
add
sahf
ja
cmp
add
mov
pop
and
dec
mov
and
inc
cltd
in
mov
pop
or
mov
out
notl
or
in
pusha
adc
push
xor
mov
insb
push
xchg
mov
cwtl
pop
lcall
int
dec
icebp
jns
jmp
shl
mov
insl
movsb
fsubl
cmp
mov
sub
sti
loope
xor
pop
fiaddl
loop
fildl
orl
xchg
or
test
mov
dec
jmp
inc
sarb
mov
out
clc
inc
xchg
push
cmp
in
dec
stos
mov
es
divb
sbb
adc
outsb
pop
pop
mov
sub
gs
stos
xchg
aam
es
cmp
loope
test
jo
lods
push
mov
adc
pavgw
and
dec
sub
cmc
jnp
sub
call
mov
or
sbb
mov
movsb
cmp
adc
xchg
fnstcw
fdivrl
cmp
cs
aad
mov
cmp
inc
out
fcmovnbe
pop
inc
ss
ret
pop
shlb
xchg
test
dec
mov
mov
ret
in
sbb
fwait
or
shll
jmp
stos
push
outsb
push
sub
test
mov
push
xor
pop
mov
or
cli
sbb
dec
outsl
push
roll
loop
and
repnz
movsl
add
lods
mov
andl
cmp
add
into
sub
je
dec
ret
push
lret
and
mov
jbe
mov
add
cmp
fsubl
mov
mov
into
jle
dec
jmp
adc
les
testb
lcall
mov
sbb
sahf
sbb
mov
stc
add
sbb
rol
aam
mov
xorb
jl
jl
mov
jg
add
imul
cltd
adc
ds
xchg
pop
shld
sbb
addb
call
addb
movsb
lret
ret
jne
jae
push
test
cmp
and
aas
rcll
idivl
out
lcall
and
nop
fcompl
cmp
cld
cmpsl
outsb
inc
lock
lahf
jne
jno
dec
stos
jno
dec
pop
mov
mov
sbb
aas
jg
jae
xchg
js
push
jno
mov
pop
movb
mov
std
xchg
push
pusha
push
pop
outsb
in
adc
and
repnz
loopne
push
push
adc
cwtl
push
mov
add
adc
pop
push
inc
nop
notl
lcall
pop
jp
ljmp
xorb
sbb
in
or
xchg
mov
push
xor
sub
pop
and
rcl
dec
cmpb
or
xchg
clc
add
and
not
repnz
sbb
iret
and
jns
inc
divl
rcrb
data16
andb
dec
fistpl
movsb
push
or
test
idiv
lahf
call
jmp
and
sub
and
mov
in
push
repz
popf
outsl
int3
xor
in
or
cmp
dec
scas
hlt
xor
pop
fdivs
or
test
cmp
rorl
ret
mov
and
xchg
incl
xor
idivl
cmp
pop
cli
jbe
push
mov
cmc
pusha
mov
cltd
sub
imul
ror
push
jle
rorl
xchg
ret
imul
repnz
inc
and
adc
bound
mov
sub
pop
sub
sbb
jo
jae
adc
dec
pop
inc
sub
mov
sbbl
out
pusha
or
mov
jne
mov
orb
mov
jns
mov
push
lret
xchg
mov
jnp
xor
mov
pop
adcl
gs
and
mov
push
movb
inc
add
cmpl
dec
push
pop
add
mov
fnsave
jne
mov
test
jmp
dec
lcall
mov
add
aad
ficompl
in
cmpsb
adc
scas
xchg
and
je
jmp
ret
mov
mov
jae
or
jmp
xchg
loop
pop
add
xchg
or
cmp
sub
sub
pop
int
pop
or
jo
cwtl
popa
inc
cmp
and
mov
cmp
pop
mov
and
aas
add
sub
push
add
or
int
push
sub
pop
pop
sbb
mov
test
test
movsl
add
pusha
fs
lods
xor
scas
push
xor
dec
xchg
jns
or
rcrb
leave
adc
jo
xor
repnz
cmpl
ljmp
jge
lret
lods
fldt
movsb
adc
aad
cmp
xor
stc
les
push
daa
icebp
mov
and
repz
and
xor
iret
dec
jge
cwtl
add
insb
sbb
jno
cwtl
scas
mov
dec
xor
xor
fdivrs
pop
imul
movsl
das
push
cmp
lea
sub
in
cmp
inc
mov
in
xchg
repnz
mov
mov
stos
xchg
outsb
jno
jbe
mov
in
and
cli
repz
stos
aad
cmp
aaa
aaa
movb
fwait
addb
lds
lds
in
jae
pop
push
lods
mov
cli
sbb
add
mov
in
pop
push
and
aas
jge
jle
sbb
popa
lods
or
arpl
pushf
sub
bound
aam
stc
repz
sti
mov
mov
daa
lea
sbb
pusha
push
push
jmp
fdivrs
pusha
sub
loope
imul
popa
clc
mov
fmul
fidivl
cltd
mov
mov
xchg
pop
cmc
mov
enter
ret
fsts
mov
fs
sub
xchg
out
dec
mov
outsl
mov
insl
mov
add
push
ud1
push
lret
ds
xlat
mov
sub
fadd
xchg
pop
mov
sub
mov
adc
push
add
mov
or
jl
push
das
in
jmp
addr16
aad
sahf
inc
xor
shrb
mov
add
mov
mov
ret
loopne
add
mov
imul
cmp
cs
cmp
test
push
aas
and
mov
adc
sbb
das
and
push
mov
sarb
in
pushf
loope
push
push
add
sub
mov
ror
inc
jns
mov
push
outsb
je
mov
sahf
jbe
and
inc
cmp
out
rorb
fdiv
into
xlat
aas
rol
lret
sbb
mov
xor
pop
push
inc
cmp
adc
dec
dec
in
insb
push
sti
call
add
mov
pop
stc
adc
xchg
mov
mov
lods
inc
or
push
in
imul
adc
pop
fwait
jge
js
ds
ret
out
push
icebp
xchg
popa
sbb
or
push
and
mov
lods
pop
hlt
mov
cld
fwait
ret
jb
inc
rcrb
fldcw
inc
dec
stos
arpl
sbb
cmp
into
repz
jmp
or
pop
icebp
push
lods
ja
mov
and
jl
cmpsl
sbb
mov
pop
push
jge
fistpl
repz
inc
mov
sub
cwtl
pusha
add
dec
jle
jbe
sub
push
mov
jbe
add
jg
sub
leave
cli
das
jno
leave
pop
push
or
sub
addr16
dec
cld
dec
jne
mov
aam
imul
and
fnsave
add
hlt
adc
outsl
fwait
xchg
out
pusha
out
adc
leave
lret
mov
mov
lret
frstor
mov
adc
aas
dec
mov
and
lock
movsb
out
int3
push
inc
ret
inc
mov
sub
movsb
jmp
ret
roll
xchg
jae
or
loope
fwait
test
ljmp
fstps
push
inc
and
scas
inc
outsb
or
aam
lds
adc
imul
add
rcr
iret
sbb
xchg
clc
repz
push
insl
in
pop
lds
sub
mov
and
xor
int3
ret
fbstp
out
xor
dec
fs
xchg
daa
xchg
sbb
and
dec
xchg
loopne
mov
xor
out
pushf
add
cwtl
leave
out
sti
mov
lret
cmp
pop
bound
add
leave
movsb
xchg
lods
jmp
adc
shrb
lock
shlb
pop
mov
ljmp
mov
pop
mov
out
cmp
xchg
pop
pop
push
add
lcall
push
and
hlt
sbb
or
jb
xchg
mov
pop
inc
pop
mov
loope
fwait
cmp
mov
out
cmpb
push
ja
and
mov
cbtw
xchg
inc
jbe
add
mov
andl
pop
pushf
imul
xchg
clc
jbe
sahf
insb
outsb
das
mov
rorb
mov
mov
jo
fsubrs
addr16
fisubrs
xor
mov
int
or
movsl
pop
aas
mov
push
ret
test
fwait
jl
push
add
loop
pushl
mov
stos
outsl
dec
aaa
inc
sub
test
addr16
sahf
dec
adc
in
ds
jbe
or
add
sub
dec
das
icebp
out
insl
js
mov
out
sbb
cmp
repnz
sbb
movsl
push
popa
int3
sti
sbb
mov
jmp
dec
int3
jno
aaa
mov
mov
push
mov
ret
mov
cmp
stc
nop
pop
push
push
es
cmp
test
and
outsb
clc
push
push
lret
or
js
ja
adc
mov
loope
push
lea
jnp
jo
jmp
addl
fsubrs
push
mov
xor
sub
add
stc
or
orb
jns
aas
jg
cmp
xchg
sbb
jmp
pop
ljmp
test
clc
popa
stos
iret
outsl
add
push
pop
adc
push
ds
xor
mov
shll
imul
sbb
flds
sbb
lret
mov
mov
cmp
hlt
int3
scas
xorl
push
adc
outsb
pop
popa
adc
les
repnz
dec
sbb
nop
popf
jno
fisubs
dec
push
xchg
subl
mov
dec
fcmovnbe
mov
gs
jge
lret
fldcw
push
add
aaa
mov
loope
or
sub
and
sbb
jb
stos
jge
fimull
inc
rcrb
subb
loopne
imul
mov
xchg
fmuls
and
lea
scas
jmp
outsb
lret
jecxz
es
in
jmp
and
scas
out
rorb
idivb
gs
dec
outsb
xchg
sbb
dec
jae
lock
out
jno
addr16
cld
cli
push
mov
add
ss
sti
roll
push
and
push
rcrb
out
stos
jmp
sub
mov
xchg
ja
mov
fs
adc
pop
pop
pop
mov
jle
ffree
das
inc
orb
insb
cmp
xor
mov
jbe
ljmp
jle
xlat
cwtl
pop
and
repz
addb
dec
fwait
scas
add
sub
pop
rorb
mov
jmp
mov
out
cmp
fisttps
push
rclb
push
inc
shrl
mov
andl
sbb
add
push
or
pop
xchg
jae
shll
dec
mov
sbb
sub
add
lods
ret
pop
cltd
cmpsl
imul
sbb
cld
mov
ds
cmp
jg
push
add
ja
pop
ret
mov
sbb
outsb
jo
jge
sbb
xchg
and
jp
add
jno
mov
push
mov
mov
mov
mov
xor
mov
cmp
sarl
xor
jne
sbb
imul
inc
jbe
stos
imul
iret
ljmp
adc
iret
mov
sbb
stc
adc
mov
adc
push
aas
inc
sub
pop
iret
dec
mov
ficomps
fists
mov
jne
lret
dec
nop
cmp
enter
add
data16
in
pusha
pop
and
dec
fsts
or
jecxz
dec
inc
scas
enter
xchg
or
loop
push
xchg
data16
lahf
adc
xor
nop
subl
dec
cmovs
stos
cmc
jp
sbb
adc
sub
outsb
cmpsb
dec
push
fildl
and
or
hlt
xchg
jle
je
cwtl
fadds
pushf
notb
and
and
hlt
shl
mov
call
ds
add
jl
push
inc
jp
mov
addr16
cmp
xor
xchg
mov
outsl
sbb
mov
and
mov
pop
or
jno
popa
pop
hlt
insb
fwait
cwtl
push
xchg
jl
mov
xchg
cli
icebp
mov
mov
in
int3
cli
scas
or
sarl
add
push
sbb
mov
ljmp
jae
out
cmpsb
fldenv
mov
xor
lea
mov
or
clc
jp
mov
aam
jge
inc
xchg
push
sahf
adc
pop
jb
inc
adc
mov
stos
mov
dec
xchg
and
mov
loopne
mov
add
xchg
not
loope
shr
and
lcall
lock
sbb
addl
or
pop
lods
movlhps
adc
xchg
stc
stos
std
mov
jbe
inc
jae
and
insb
sub
loopne
adc
mov
js
fs
stos
mov
es
sbb
add
and
pop
cmp
aam
push
and
ljmp
mov
xchg
sbb
push
push
inc
shl
and
fmul
pminub
rolb
adc
or
or
les
cmp
or
mov
adc
sbb
adc
add
rolb
int
jle
inc
outsb
enter
aam
add
lods
jno
xchg
jp
sub
jb
mov
and
push
pop
jp
clc
lods
xchg
pushf
cmp
adc
mov
addr16
jnp
cmp
hlt
pop
jae
or
js
push
inc
sub
pop
xchg
lret
mov
popa
mov
nop
aas
dec
fsts
sbb
mov
sub
mov
popf
cld
scas
push
aas
repnz
inc
incl
mov
inc
jmp
aad
pusha
adc
jmp
xchg
inc
ds
rcrl
pop
outsl
movsb
lea
cwtl
call
mov
scas
daa
inc
adc
fucom
cmp
sub
dec
dec
aam
popa
mov
call
sahf
dec
in
sti
lcall
negb
add
pop
push
pop
ja
divl
lea
call
loop
fcmovnu
hlt
adc
sub
in
ret
jnp
xchg
cmc
sbb
nop
ljmp
xchg
data16
mov
add
shl
ret
push
push
scas
adc
mov
xor
icebp
pop
inc
cmpl
cmpsb
or
call
or
dec
add
aad
mov
out
lea
xor
add
je
arpl
js
inc
jl
push
and
cld
fadds
push
or
je
addr16
fldenv
mov
and
jo
pusha
les
dec
inc
std
mov
hlt
mov
jle
data16
fbstp
xor
icebp
sub
adc
mov
pop
mov
and
icebp
adc
adc
aaa
pop
adcb
mov
fstl
int
mov
aas
movsb
aaa
push
or
shlb
inc
cli
pusha
out
fdivs
add
mov
leave
xchg
scas
cli
adc
inc
pop
mov
les
xchg
inc
mov
loopne
idivb
ss
pop
stos
mov
jb
jmp
pop
cmpsl
sbb
test
dec
incl
fmul
jecxz
mov
std
stc
imul
pop
sbb
push
jle
or
outsb
movsl
xor
loopne
mov
pop
push
mov
dec
mov
out
jecxz
cmp
gs
or
cmp
xor
test
clc
jle
sub
cmc
sub
and
stos
fcomip
mov
iret
clc
fisttpll
add
in
pmaxub
push
mov
mov
or
ficoms
js
push
fsubrs
pop
aaa
scas
into
or
or
cwtl
pop
add
jmp
ss
cwtl
mov
fdivrl
mov
arpl
mov
push
out
mov
push
movsl
out
aaa
pop
paddq
andb
lcall
push
sbb
mov
mov
in
mulb
inc
lds
pop
jae
dec
mov
je
dec
hlt
add
mov
mov
dec
in
cmc
mov
and
mov
lds
adc
mov
add
out
scas
mov
push
sbb
mov
jl
cmpsl
pusha
jge
push
test
xor
add
je
lcall
fcoms
stos
cmp
fcomps
xchg
orps
mov
aas
push
dec
xchg
out
into
fcomps
loope
outsl
fnstenv
adc
push
cmp
les
pop
jbe
lods
xchg
xor
insb
ss
scas
push
clc
imul
mov
cmc
add
mov
xor
and
pop
mov
or
mov
xor
les
mov
inc
mov
mov
xchg
add
adc
add
cmp
ds
lock
cmp
cmpsl
out
test
mov
shr
lcall
dec
and
sarl
jge
das
sub
hlt
mov
push
imul
mov
stc
xchg
fs
outsb
xor
mov
sub
test
or
push
xor
div
mov
jnp
imul
dec
pop
cmp
scas
scas
insl
lods
jl
push
push
leave
dec
scas
lock
call
inc
mov
call
scas
inc
fsubrs
pop
inc
xor
pop
sub
xor
or
in
lea
dec
and
jns
loop
dec
xchg
in
xchg
xlat
xchg
popa
push
xor
cld
fmull
cs
jo
fmuls
mov
push
mov
push
sub
test
mov
inc
mov
icebp
add
fs
movsl
adc
pop
xlat
add
mov
add
inc
mov
lods
jl
imul
push
jno
test
adc
popa
adc
mov
push
les
shll
add
and
lahf
out
and
cmpsb
popf
mov
aad
xor
push
cltd
sbb
sarl
fisttpl
mov
jle
sub
and
out
xor
mov
mov
push
jle
adc
pop
or
mov
or
movsb
es
jnp
addb
fistpl
out
xchg
cwtl
push
xchg
insl
fsubr
fxch
and
mov
jnp
add
ds
ljmp
xor
jne
nop
xlat
fstps
cmpsb
mov
push
push
push
add
inc
test
cmp
sub
pop
mov
adc
faddp
xorb
adc
jp
aad
popf
dec
lret
xchg
leave
pop
loope
push
push
xor
jl
stos
neg
pop
mov
push
ror
and
cld
inc
jp
data16
stos
fadd
les
jo,pt
fistpl
loopne
mov
cli
dec
push
fisubrl
jmp
popa
fiadds
push
test
xchg
jg
xor
fwait
scas
mov
inc
push
bound
xchg
jg
pop
mov
add
cmpsl
jno
mov
push
shrb
insl
test
sarl
iret
mov
mov
idivb
push
lods
adc
out
dec
push
pop
shrb
sbb
dec
imul
push
jl
les
cmpsb
loop
scas
mov
adc
fwait
lea
pop
pop
push
sub
lods
out
add
mov
and
xchg
xchg
mov
dec
add
cmc
inc
insb
mov
testb
mov
push
bound
lcall
fists
dec
cmpsb
inc
dec
test
push
scas
movsl
jmp
sahf
ja
and
xor
mov
push
mov
or
lea
call
int3
pop
sub
mov
movsl
stos
push
push
mov
es
jecxz
push
mov
push
mov
mov
mov
into
or
push
sbb
in
adc
jns
xor
shl
add
mov
dec
scas
mov
jecxz
mov
lahf
lret
pop
call
ret
cmp
mov
icebp
fisubrl
jnp
pop
call
loop
push
bound
mov
pushf
pop
ja
pop
bound
clc
or
sarb
and
cmpsb
popa
dec
or
enter
jmp
gs
push
jmp
int
popa
sti
jge
push
into
pushf
cwtl
mov
lcall
push
xor
add
test
incl
movsl
dec
push
cmp
xlat
out
push
cmp
cmc
popf
mov
enter
cmp
idivl
jmp
xchg
mov
lret
lcall
std
xor
popl
lret
std
add
jmp
lds
jbe
xchg
int3
add
and
push
ljmp
lcall
inc
sarb
sarl
and
adc
jle
pop
jae
test
enter
mov
repz
es
ret
test
stos
xchg
dec
cltd
pop
xchg
cmp
iret
mov
adc
mov
je
adc
mov
inc
push
and
sti
std
jb
popa
dec
jbe
mov
mov
sbb
mov
sbbb
mov
push
movsb
mov
inc
lcall
sub
call
popa
sarl
add
cmp
add
mov
dec
loopne
rcl
pop
je
adc
adc
in
add
lahf
xor
in
push
adc
add
fstl
jnp
adc
je
dec
jecxz
dec
inc
adc
imul
pop
js
stos
ret
mov
daa
inc
insb
cltd
mov
aam
xchg
enter
stc
lds
sarb
xchg
cwtl
out
pop
fs
cld
lret
sbb
clc
test
sub
xchg
rcll
inc
roll
inc
lret
roll
or
stc
inc
and
shl
mov
cmp
cmpsb
xor
xor
pop
pop
js
lds
mov
cli
mov
lds
xchg
mul
loopne
shll
adc
stos
mov
mov
sbb
jns
sub
and
xor
jmp
xor
clc
mov
rorb
jo
jl
add
pop
iret
mov
dec
mov
aaa
addr16
mov
dec
and
mov
icebp
movsb
aas
cwtl
push
iret
jnp
inc
test
lods
test
rcll
push
mov
and
jne
dec
cmpsl
ss
add
enter
mov
lods
outsl
stc
ficoml
cmc
mov
xor
lea
cmp
sti
add
repnz
jno
test
bound
mov
mov
xorl
int
stos
add
xchg
ret
iret
inc
decl
sub
std
enter
inc
fiadds
xchg
push
cwtl
mov
out
jmp
scas
imul
movsl
add
lahf
sbb
dec
mov
mov
xor
or
mulb
ret
aas
sbb
inc
out
jbe
and
xchg
ret
mov
cld
in
sbb
movsb
push
inc
mov
or
sub
inc
cmp
cltd
cmp
test
bound
int
adc
fisttpll
sub
mov
adc
fists
fs
ud2
add
sti
mov
arpl
pop
and
stc
dec
mov
popa
sub
mov
inc
add
jge
std
xchg
dec
inc
cmp
sti
icebp
popa
push
stc
inc
loopne
inc
mov
insl
mov
ljmp
push
test
cmp
adcb
mov
xor
loop
mov
sarb
jmp
out
mov
mov
cmp
xor
xor
dec
mov
pop
pop
mov
andl
les
or
dec
aas
dec
pop
std
fists
mov
aaa
xchg
xor
sbb
or
and
into
fcmovnu
mov
ret
xchg
dec
int
jle
test
enter
xchg
lret
xchg
adc
mul
fbstp
aam
cli
jnp
imul
xchg
jg
xor
jae
scas
fcmovne
cmp
push
inc
fnstenv
pop
jg
jge
push
aas
sbb
mov
push
sub
lods
push
mov
ljmp
rcrb
mov
and
imul
dec
js
aam
dec
sbb
dec
sub
mov
or
cs
loope
dec
pop
decb
xchg
cltd
xlat
clc
leave
out
jl
pop
adc
sbb
imul
loope
cmc
test
jle
test
stc
push
sub
mulb
xchg
in
div
mov
xor
xor
lods
mov
inc
test
mul
lret
mov
fcomps
or
and
ljmp
adc
xchg
movsb
mov
movsl
mov
and
mov
sti
icebp
popa
xchg
in
jb
sub
mov
incb
add
xor
bound
dec
mov
test
and
xlat
xchg
inc
jno
cmp
dec
lret
rol
stos
in
mov
add
test
push
imul
or
and
lahf
movsb
sub
mov
xchg
or
mov
jns
loopne
fbstp
sahf
pop
fs
ljmp
jo
pusha
push
flds
je
enter
fsubl
lret
in
xchg
pusha
test
mov
push
mov
cmc
int3
mov
xchg
enter
shll
popa
bound
repnz
cmp
and
cmp
or
enter
fwait
jecxz
dec
lods
cmp
dec
sbb
test
js
fstps
push
scas
stos
sbb
mov
xchg
xchg
das
in
dec
dec
dec
nop
mov
std
out
cld
xchg
mov
repnz
fidivrl
gs
dec
notb
js
daa
mov
cld
adc
lret
xlat
jp
test
cmp
ss
cmpsb
fucomp
mov
je
ss
test
adc
addr16
xchg
out
mov
xchg
jmp
jp
mov
loopne
in
and
xchg
icebp
xchg
xchg
xor
test
add
lods
sahf
or
aam
and
xchg
xor
out
jnp
push
repnz
dec
insb
add
addb
dec
cmc
push
jno
mov
fistpl
lods
leave
clc
mov
inc
je
and
leave
pushf
cmp
aaa
xor
or
jmp
bound
inc
or
push
xor
cld
inc
rcrb
icebp
rcll
jmp
std
repz
xlat
insb
orb
cmp
into
test
adc
xor
add
sbb
sub
pop
and
in
add
mov
and
pop
ret
pop
fadds
popa
ja
push
insl
daa
subb
pusha
mov
adc
or
xchg
fwait
mov
jne
sti
mov
aas
dec
in
add
pop
push
cs
add
mov
and
or
jo
icebp
jne
dec
xor
jp
pop
sbb
call
fdivs
add
push
scas
icebp
push
shr
test
or
aas
les
fstp
out
stc
je
lock
in
mov
sahf
mov
xchg
in
divb
in
rclb
stc
fiadds
fdivs
cmp
pop
sbb
addb
movsb
sbb
cmpsb
sub
push
add
je
lret
divb
cmp
gs
push
out
pop
adc
mov
pop
in
scas
dec
nop
out
into
mov
mov
in
inc
imul
xor
lods
fadds
mov
sub
pop
mov
push
int3
push
cld
outsb
lods
or
or
jne
lret
stos
push
push
mov
xor
call
data16
xchg
subb
mov
mov
add
adc
xchg
mov
and
add
xchg
lods
cmp
gs
lods
cmpsb
scas
cli
mov
test
outsl
pusha
je
int3
aad
lret
mov
ljmp
dec
pop
test
movsl
jle
loopne
rcll
jns
inc
mov
push
test
aaa
sub
outsl
outsl
fs
pop
and
in
mov
mov
movsb
or
call
fidivrs
shlb
data16
es
xor
push
fs
or
pop
pushf
or
mov
aaa
dec
std
les
pop
inc
cmp
outsb
xchg
mov
or
inc
negb
lcall
in
icebp
push
lea
fisubl
jmp
orl
or
add
dec
add
movq
cltd
inc
ror
xchg
out
iret
mov
push
sbb
mov
rorb
xor
add
inc
sahf
andb
inc
pop
aam
and
cmovne
sub
iret
je
mov
jbe
xlat
orl
inc
mov
xor
fsubr
jl
pop
xchg
inc
fcmovne
jns
adc
or
jbe
mov
repz
cmp
bound
out
inc
add
mov
cli
fdivrl
xchg
mov
stos
cmp
add
cmp
lods
lahf
jo
int3
pop
or
push
pop
loop
sub
push
popf
outsb
push
test
sbb
leave
imul
in
xor
sbbb
mov
push
js
push
inc
adc
mov
scas
xor
out
ret
push
loop
mov
inc
jnp
jne
mov
iret
imul
cli
repnz
adc
jb
xor
pop
xor
inc
aaa
ja
dec
push
push
inc
add
cld
shll
mov
pop
in
sub
jp
jge
adc
dec
adc
adc
hlt
cmpl
jae
insb
adc
jno
and
sbb
push
aam
mov
outsb
popa
xchg
sub
mov
hlt
js
fwait
adcb
pop
fildll
cmp
in
fs
jbe
mov
cmpsb
test
sbb
cs
nop
cmp
push
data16
and
push
movsb
push
mov
dec
movsb
cs
cmp
add
dec
aam
lahf
or
test
sbb
sahf
dec
sarl
dec
adc
xor
inc
jae
shlb
les
sbb
cwtl
sbb
xchg
dec
push
movsl
sbb
cmp
push
jle
mov
out
mov
mov
inc
jae
sahf
inc
into
adc
test
xlat
js
rcr
mov
jle
cmc
push
adc
xchg
mov
push
daa
or
cmp
adc
mov
dec
mov
jnp
data16
push
ja
sbb
inc
test
mov
push
outsl
mov
pop
out
sbb
jbe
outsl
in
xchg
mov
lcall
cmp
sbb
popf
inc
cmp
push
inc
sub
test
sar
cmpsl
sti
cltd
push
mov
mov
in
add
and
popf
test
mov
cltd
fsqrt
and
call
jne
idiv
testl
adc
cmc
mov
daa
icebp
push
inc
add
les
fmuls
sarb
dec
cld
fcmovne
stos
rclb
movsl
test
or
jl
jge
ret
lods
lods
aas
inc
xchg
dec
lahf
icebp
out
push
xlat
mov
imul
or
sti
cli
ljmp
xchg
aaa
xchg
insb
daa
mov
lcall
or
xchg
or
nop
movsb
adc
mov
sbb
add
mov
sub
rolb
dec
sub
lds
pop
fnstcw
ss
push
mov
adc
or
out
and
rorb
jae
sub
int
call
mov
scas
push
xor
int3
lock
jle
lods
add
loop
dec
xchg
pop
mov
jno
cmp
push
jno
pop
std
cmp
rcll
adc
clc
inc
nop
icebp
shr
cmp
jb
lea
rorl
or
xchg
enter
pusha
stos
sub
divl
xchg
lahf
push
fidivs
cmp
in
aaa
sub
cmp
test
mov
sahf
dec
dec
push
pop
add
push
int
mov
dec
ja
not
push
cmp
mov
xchg
cmp
lods
jle
mov
add
push
mov
or
pop
nop
and
xchg
std
xor
xor
dec
fstps
mov
sarl
sbb
dec
mov
or
or
addr16
ja
jno
subb
fldl
sahf
cmpsb
and
imul
lcall
clc
movsb
lea
inc
cli
cmp
sub
stos
imul
jns
in
mov
nop
xor
fdivs
scas
push
sbb
inc
cmp
jb
fimull
test
insl
jmp
and
jl
lock
lock
or
dec
jae
dec
mov
outsb
fdivl
aas
ja
adcb
popa
mov
in
sbb
xchg
fwait
outsb
dec
dec
shr
and
call
scas
lds
dec
notb
addb
popa
sbb
mov
mov
push
sub
push
sbb
mov
jle
je
push
aaa
fcmove
jbe
and
dec
clc
insl
adc
imul
or
pop
adc
or
jnp
mov
adc
mov
push
aas
add
out
jb
jg
mov
adc
cmpsb
mov
cmp
nop
push
scas
sub
push
std
xchg
xlat
ljmp
jg
test
mov
orb
mov
inc
fstl
pop
iret
sbb
pop
cmp
sbb
sub
xchg
enter
jns
pminsw
push
jmp
cmc
loope
cld
sub
push
fisttps
in
push
xchg
sar
xor
mov
dec
andb
dec
fst
pop
push
mov
sar
inc
cmpl
add
out
dec
pop
bound
repnz
cmp
or
fstps
xor
fwait
dec
lods
push
sub
mov
inc
cwtl
bound
xor
sub
mov
xchg
adc
mov
nop
adc
sbb
fisttpll
pop
es
pop
or
mov
test
inc
inc
sbb
ds
add
call
pop
or
popf
add
and
pop
outsb
addb
add
js
inc
lret
ss
std
xor
mov
mov
jecxz
int3
xchg
pushf
fs
cmp
ja
ds
test
sub
pushf
cs
cltd
stos
out
pop
int3
mov
lods
pop
leave
stos
sub
or
outsl
inc
jae
arpl
inc
sar
adc
fbstp
add
jl
fcoml
jl
push
mov
imul
test
test
mov
andb
push
mov
pop
mov
push
ficomps
sbb
pop
test
add
mov
inc
shl
cmp
inc
test
cmpsl
lret
inc
inc
je
aas
cmp
pop
or
aam
pop
mov
mov
jecxz
add
mov
dec
pop
fnstsw
iret
and
loopne
jae
shlb
adc
mov
into
and
sbb
pop
or
sarl
adc
pop
or
xor
dec
jecxz
mov
pop
adc
pop
add
lret
and
xor
mov
shll
jns
shl
data16
aad
call
test
nop
movl
dec
bound
stos
cmp
pop
jmp
int
divl
and
sub
jne
mov
outsb
adc
into
dec
cld
test
fdivr
jecxz
dec
in
int3
inc
mull
js
mov
test
xor
lret
clc
sub
adc
push
pop
ljmp
fnstenv
mov
call
mov
xchg
inc
ret
add
xor
fnstcw
inc
pop
lahf
repz
aad
add
sbb
jmp
push
ljmp
jmp
leave
push
pop
push
cmp
ljmp
xchg
lods
inc
adc
aaa
sub
jp
ljmp
sub
sbb
insl
int
loope
bound
jbe
mov
dec
mov
lcall
or
dec
and
and
jp
inc
adc
repnz
fstps
add
popf
cmp
cli
lds
into
imul
jo
xor
sbb
in
test
push
or
jns
stc
mov
fs
loopne
lock
pop
or
jbe
xor
sub
xchg
push
push
lret
pop
fildll
cmp
pop
fsubs
add
mov
mov
xlat
dec
ret
add
fcoml
clc
xor
mov
xchg
cmp
fisubs
outsw
xor
sbb
mov
jne
xchg
in
iret
leave
inc
insb
pop
or
mov
cmp
xor
aad
lahf
sub
inc
mov
dec
int3
minps
rcl
movsl
rolb
mov
add
jle
imul
xchg
dec
sub
lea
jb
movb
sbb
inc
leave
pop
cld
add
popa
bound
fimuls
jg
jl
fucomp
adc
push
push
dec
stos
push
fadd
mov
out
setle
divb
fdivrs
cmp
dec
xor
cwtl
sub
pop
sbb
test
push
test
push
pop
push
or
xchg
pop
in
loop
mov
pop
leave
push
mov
scas
mov
jne
sub
mov
mov
adc
jmp
imul
and
into
sbb
cs
jb
div
lret
sbb
imul
inc
call
adc
mov
cmc
pfadd
movsl
add
jecxz
cmp
cmpsl
cli
mov
jno
jecxz
ret
jle
lret
lret
adc
sbb
mov
sub
xchg
jb
imul
ret
movsl
aam
dec
sbb
xor
mov
jno
sbb
pop
or
fistps
repz
pop
pop
popa
dec
loope
or
push
sbb
jnp
rcrl
in
adc
push
scas
push
fcoml
mov
negb
jmp
sbb
jmp
push
cmpsb
shll
xor
jmp
pop
rolb
lods
fdivs
add
insb
push
mov
sub
jo
fs
cmp
fildl
test
sub
filds
out
push
fwait
mov
dec
pop
mov
test
xor
xor
aad
fimull
in
repz
inc
dec
mov
jo
mov
xchg
xchg
test
xor
cmp
jmp
add
cmp
out
xchg
push
fs
push
outsb
fcompl
mov
lea
push
push
inc
test
adc
xchg
rcll
push
cmp
arpl
sub
sbb
loope
sbb
add
cmc
sub
in
dec
mov
arpl
jp
aad
pop
call
setge
inc
push
jge
les
imul
inc
icebp
mov
fbld
cmp
add
je
jb
stos
push
dec
and
adc
adc
xor
das
hlt
sbb
add
push
sub
gs
addr16
jle
outsl
xchg
xor
cmpsl
adc
sub
push
mov
ss
mov
shll
jne
test
jmp
repnz
js
popf
fbld
mov
cli
shlb
inc
cmc
in
inc
inc
fldt
and
dec
fcomi
ds
fwait
mov
sub
test
sti
jl
dec
scas
xor
in
inc
mov
pop
cmc
ret
add
jl
popa
imulb
pop
punpcklwd
sub
pop
ss
ds
and
add
out
test
movsl
xor
mov
cmp
mov
roll
clc
jge
iret
pop
loope
and
std
cs
jmp
pop
and
mov
sarl
repz
lods
dec
bnd
or
ret
into
popf
jle
sbb
mov
and
add
shrb
and
sub
push
movsb
cmpsb
and
pop
inc
inc
cmpsb
cmpsb
fadd
shrb
cmp
stc
pop
adc
mov
jp
movsb
mov
add
data16
out
or
in
jo
out
inc
inc
or
mov
movsb
push
or
mov
mov
test
jnp
pusha
xchg
add
adc
jecxz,pn
icebp
test
out
mulb
jmp
rolb
lods
sub
push
xchg
repnz
sbb
repnz
loopne
lret
rcr
push
mov
repz
test
xlat
clc
mov
pop
dec
mov
inc
dec
fs
cmp
jecxz
add
pusha
jb
cli
mov
in
mov
push
fstpl
mov
mov
sbb
add
rcrb
xchg
add
dec
fdiv
ljmp
enter
loope
sbb
dec
imul
cwtl
addr16
nop
aas
inc
incb
mov
xchg
mov
js
shlb
jecxz
cmpsb
inc
xor
push
mov
mov
out
aad
sub
sub
xor
mov
adc
lret
test
cmpsl
cmpb
test
aaa
sarb
scas
xchg
mov
daa
push
cld
push
jmp
outsb
orl
ret
adc
gs
or
sub
mov
inc
mov
xor
jg
jmp
popa
mov
loop
push
in
add
fiaddl
data16
stos
inc
ss
leave
pop
mov
dec
fsubr
jno
out
adc
ret
inc
sarb
and
pop
imul
movsb
je
inc
xor
mov
sub
dec
movsb
mov
sbb
or
ja
mov
cli
addr16
dec
in
mov
jae
rorl
pop
aad
loope
cmp
sbb
mov
cmpsb
int3
cmp
jo
lahf
ret
xchg
leave
stos
call
jle
push
mov
in
outsb
inc
ficomps
stc
mov
fwait
sub
enter
js
pop
sub
jnp
inc
mov
sbb
xchg
push
shrb
adc
cmpb
cmpsl
sbb
popa
jmp
sub
testl
push
sbbb
fidivrs
lret
sub
jp
clc
pop
hlt
sti
pop
imul
popa
je
inc
jne
addr16
inc
push
lret
fwait
out
popa
lcall
loopne
inc
inc
cmp
je
fildl
mov
aaa
mov
mov
xchg
call
mov
cmpsb
cmp
inc
jno
clc
mov
pop
adc
imul
and
shlb
imul
fistps
fnstenv
sbb
rcrl
push
sub
sbb
sub
mov
icebp
js
cli
or
ja
js
or
inc
ljmp
jp
fidivl
mov
and
mov
popa
enter
push
aaa
nop
pop
lret
dec
aas
int
outsl
stc
jb
lds
jno
fdivs
inc
inc
add
sar
jns
cmp
jbe
mov
negb
insb
dec
pushf
inc
and
dec
dec
dec
mov
movsb
mov
leave
add
xor
lods
dec
lcall
lret
mov
outsb
sub
add
out
push
xor
inc
in
inc
and
mov
cltd
bnd
test
popa
cli
in
shrb
fmull
sbbl
mov
out
cmpsl
dec
push
into
cli
push
and
add
or
scas
jae
adcl
and
adc
test
imul
cs
lahf
cmp
cli
sub
lret
adc
sti
jnp
rorb
add
inc
dec
xchg
sahf
cmp
in
sti
lcall
cmp
pop
das
push
loope
mov
lea
add
push
and
leave
jl
out
lds
xchg
or
xor
shr
ret
and
and
gs
loop
dec
jbe
test
std
and
add
fldl
cmp
inc
or
fidivrs
jl
xchg
ljmp
jno
bound
cmp
gs
in
cmp
add
shll
push
pop
sub
mov
or
adc
daa
xchg
inc
aas
hlt
push
idiv
arpl
mov
sub
xchg
push
jmp
test
popa
pop
outsb
mov
stos
sbb
in
jmp
push
push
pusha
fs
dec
leave
cmp
and
movl
cmp
insl
sub
test
addr16
aam
sahf
cmc
xor
sti
dec
negl
mov
mov
xor
icebp
sub
jge
or
pop
xchg
test
dec
cli
jns
out
sbb
lret
lcall
or
mov
cltd
cmp
pop
not
daa
or
scas
lock
lds
add
or
pop
das
jae
sarl
scas
add
subb
cmp
jo
or
outsl
push
popa
nop
add
test
ja
mul
cmp
xchg
outsl
adc
push
ljmp
and
imul
push
icebp
ficomps
lea
stos
mov
xor
repnz
sbb
ss
andb
in
or
ficoml
sbb
cld
loop
pusha
pushl
out
jmp
std
add
lahf
shlb
jnp
mov
into
inc
in
ret
notb
pop
lret
pop
pop
push
cld
mov
push
cwtl
cmp
pop
sbb
mov
hlt
cltd
sbb
add
xlat
leave
push
xchg
sahf
add
push
repnz
arpl
insl
sub
sbb
lock
enter
jmp
ljmp
dec
insl
sbb
nop
or
outsl
ja
xchg
icebp
roll
bound
shll
pop
pusha
fistps
mov
stos
in
cmpsb
push
sub
shl
daa
sub
jb
push
bound
fidivrl
add
out
adc
shll
sbb
xchg
jp
mov
xchg
pop
xor
out
xor
ret
inc
or
in
in
sbb
cmpsb
stc
aad
xlat
inc
add
and
xor
pop
xor
xor
push
pop
lret
pop
xlat
mov
inc
rcl
jge
xlat
aam
mov
cmp
push
ret
xlat
cld
xor
addb
sti
std
dec
push
pop
popf
out
and
xor
push
mov
inc
lret
aaa
into
sbb
dec
add
fstcw
jmp
dec
mov
fnstsw
lcall
gs
fisubrl
scas
sbb
jb
inc
jecxz
xor
std
and
cmp
pop
lcall
call
or
icebp
jg
fbstp
bound
pop
inc
and
mov
aaa
cmc
arpl
mov
loop
les
dec
jecxz
mov
sarb
movsl
mov
out
int
mov
mov
jns
mov
out
pop
dec
push
inc
jae
push
inc
iret
xchg
jmp
add
outsb
jno
pop
xchg
push
jbe
sub
pop
in
mov
pusha
jno
ficoms
pop
daa
xchg
pushf
jb
stc
pop
jecxz
hlt
jno
mov
bound
out
add
in
out
out
or
inc
cmp
pop
cmp
xchg
push
inc
cmp
je
rorb
mov
inc
push
inc
xor
dec
xchg
lret
or
xor
push
fsubs
xor
stc
mov
or
jb
stos
mov
iret
icebp
adc
sbb
mov
call
xor
lahf
divl
mov
mov
scas
icebp
subb
jo
adc
jecxz
adc
add
mov
mov
inc
sub
aad
ljmp
movsb
ds
pop
adc
adc
fst
mov
ffreep
sub
add
outsb
jnp
and
cmpsl
js
adc
imul
icebp
mov
pop
dec
push
sub
lock
into
sbb
push
push
pop
ss
js
push
loopne
andb
js
mov
push
stc
sbb
cmp
xchg
mov
cld
loope
pusha
mov
out
and
add
out
movsb
lea
xchg
pop
xor
int3
mov
mov
mov
sub
jle
xchg
pop
test
repnz
faddl
scas
dec
iret
ss
and
pop
rclb
aaa
testb
add
inc
arpl
pop
fucompp
pop
pop
jo
dec
std
add
das
push
ret
jne
repnz
add
mov
or
mov
ret
das
flds
addl
addl
xchg
cld
pop
push
inc
or
dec
mov
clc
in
mov
cmp
ss
cmp
imul
push
mov
jns
pop
repz
xchg
dec
mov
ret
daa
cmp
dec
sub
push
rcll
or
out
je
lret
aaa
adc
xchg
sbb
iret
xchg
add
test
jns
in
dec
sub
cmp
mov
dec
xchg
push
test
xchg
cmp
sbb
sub
push
outsl
cmp
int
or
mov
adc
scas
cmp
hlt
loop
imul
pushw
mov
loope
ret
xchg
cmp
pop
inc
cmp
test
mov
sub
inc
push
loopne
inc
mov
lods
stos
xor
or
fnstsw
jl
add
mov
cwtl
icebp
cmp
lods
iret
jbe
repz
inc
xchg
jp
cwtl
pop
pushf
xchg
int3
clc
out
popa
xor
mov
inc
or
ja
or
cmpsl
popf
fmul
inc
pusha
stos
ss
sbb
sub
jns
repz
ficoml
lods
aaa
jmp
push
xchg
xor
rolb
repnz
in
jp
sbb
fldcw
cli
xchg
imul
push
push
cmpb
mov
mov
sub
fmul
pop
andl
ss
stc
ret
arpl
aad
cmc
adc
aad
decl
es
mov
test
pop
lret
lahf
add
icebp
and
xor
pushf
fdivrl
push
stos
sti
jbe
adc
mov
xchg
adc
push
js
outsb
add
movsb
loope
mov
push
ss
mov
xor
xor
fucomi
dec
movsl
mov
jnp
fisubrl
adc
adc
mov
aaa
mov
fisttpll
dec
aad
dec
jecxz
dec
or
fadds
xchg
mov
je
je
cmpl
sbb
jno
ja
pushf
imul
push
dec
sub
cwtl
jle
int3
lods
push
shrb
stos
mov
or
js
ljmp
or
roll
cmpsl
jbe
fimuls
xchg
jno
inc
mov
lods
mov
xor
fs
imul
ficoml
daa
loop
jl
lods
push
push
push
or
sub
cli
nop
xchg
cmc
lods
test
mov
cmp
lods
cmp
sti
popf
mov
fwait
lds
and
or
test
dec
popa
cmp
out
xchg
lcall
sti
push
xchg
loop
rolb
std
shr
repz
in
je
lret
adc
stos
out
mov
mov
popf
mov
pop
and
cmp
andb
adc
mov
mov
out
xchg
cmpsb
insb
or
cmp
lods
es
jg
push
mov
fmulp
mov
and
and
daa
movd
cmpsb
xor
loop
jnp
andb
cs
xor
imul
xor
xor
jge
movsb
sub
jnp
mov
sbbb
sub
cmp
in
push
out
inc
jns
mov
pop
int3
imul
inc
pop
out
sbb
cmp
cmp
mov
fadd
jb
xor
aas
aas
jl
inc
insl
cmp
sti
add
push
xchg
int3
inc
or
mov
test
enter
or
xchg
jbe
stc
leave
popa
insl
push
add
cmpsb
movsl
ror
sar
mov
enter
push
mov
push
lahf
xor
adc
mov
in
sbbb
push
sbb
cmpsl
loope
popf
and
or
xor
add
stos
or
sbb
sub
jp
ficompl
mov
pop
pop
mov
enter
mov
mov
bound
jno
mov
jge
pop
push
nop
les
neg
cmp
les
bound
stos
push
pop
xor
movsb
mov
mov
movsl
and
dec
jo
out
fisttpl
js
fstl
repnz
add
mov
pusha
insl
adc
ja
and
push
ss
xchg
inc
dec
arpl
stos
in
pop
push
mov
ret
and
cmp
add
std
jge
sar
fisubs
push
mov
fiaddl
or
iret
or
push
xlat
mov
mov
test
adc
inc
push
idivl
jge
mov
mov
rcr
fs
jb
cmp
cmp
mov
andb
and
js
mov
jnp
pop
and
adc
je
cmpsl
jnp
gs
mov
pop
adc
or
mov
mov
xchg
push
mov
lock
or
cmovnp
push
clc
rorl
jo
sbb
mov
pop
xchg
xchg
jbe
adc
sub
add
adc
pop
dec
or
shlb
dec
push
lds
dec
pushf
jne
stc
fucom
lret
popf
push
push
cmpsl
push
mov
push
repnz
xor
push
cs
cli
pushf
or
jne
jl
aaa
dec
and
and
cmp
into
sbb
rcr
je
mov
push
and
in
test
and
mov
pop
and
js
lahf
adc
loopne
not
call
push
xchg
sub
outsb
scas
stos
jmp
xchg
lret
movsl
or
jno
arpl
js
sbb
ds
inc
xchg
popf
mov
pushf
insb
inc
fwait
and
lret
repnz
lds
into
cmp
mov
arpl
mov
aad
or
mov
call
sbb
push
inc
or
mov
in
xor
jmp
test
pop
ljmp
lcall
roll
xchg
imul
faddl
test
and
cmc
mov
push
dec
mov
sbb
xchg
cmpsb
mov
je
xchg
out
lret
fldenv
and
movsb
pop
jmp
pop
and
ja
test
mov
cmp
xorl
int3
cld
ja
loop
imul
call
bnd
add
push
and
sub
cld
repz
pop
push
icebp
rorl
sbb
fistps
sbb
jnp
xchg
lods
fs
jno
xchg
pop
add
adc
jbe
push
sbb
adc
leave
jmp
push
push
ja
fsubs
jo
xchg
ds
push
imul
outsb
aad
add
mov
arpl
xchg
fistpl
lea
fstpl
aas
pusha
scas
jno
cmp
mull
or
rolb
mov
stos
popf
iret
sahf
fildll
jns
sub
sbb
push
jbe
add
insl
aas
das
dec
push
fisubrl
cmp
into
call
sbb
mov
stc
sub
mov
push
and
add
imul
leave
ret
adc
cld
mov
lahf
xchg
pop
sbb
jmp
xchg
jmp
sbb
pop
pusha
mov
push
cmp
fmul
jge
fldt
je
rcr
push
sbb
inc
or
or
pushf
movsb
icebp
add
xor
inc
push
pushl
lds
js
test
ficomps
pop
idivb
xchg
rcl
ror
or
add
adc
jns
es
bnd
loope
ds
loopne
mov
lret
inc
clc
std
cwtl
adc
pop
push
jae
movsb
mov
mov
movsb
adc
adc
stos
mov
mov
inc
add
xchg
daa
xor
adc
popa
insl
popa
cmp
sbb
and
lock
jp
cmc
mov
repnz
push
je
mov
out
mov
sbb
jp
adc
add
nop
inc
aas
or
test
icebp
mov
cmp
daa
outsl
shr
mov
cli
and
cmp
aas
int
or
std
pusha
aaa
mov
fnstcw
loopne
idivb
dec
mov
call
mov
fadds
jecxz
arpl
in
in
mov
xor
pop
nop
fwait
jnp
pop
sub
call
xor
sub
sbb
repz
rcrb
jno
in
out
cltd
mov
sarl
fxsave
and
cmp
lahf
stos
aad
fcmove
aam
mov
inc
xchg
cs
inc
or
call
out
jo
push
dec
sub
mov
sbb
outsl
call
mov
xchg
insb
adc
call
nop
pop
cmc
movl
je
inc
or
dec
inc
sbb
xor
aad
in
fbld
sti
enter
add
icebp
xlat
adc
testb
loopne
or
addb
insl
adc
bound
lret
leave
out
cmpsl
ss
jno
pop
dec
cmp
roll
jo
std
jecxz
push
adc
jg
cmp
gs
jp
int
inc
ret
xchg
mov
aad
adc
jg
push
push
outsb
mov
xchg
pop
pop
mov
push
cmpsb
jb
hlt
js
xchg
adc
pop
mov
std
fldl
xor
dec
clc
sbb
xor
push
dec
or
xor
insb
xor
subb
and
fimull
xor
xchg
pusha
data16
stos
mov
shlb
xorl
lock
add
add
fldenv
pop
fisubs
je
mov
shr
or
pusha
cs
push
in
movsb
lock
pop
stc
pop
hlt
insl
inc
sub
cmpsb
cmp
xchg
or
cmp
jge
cmp
repnz
std
jmp
lock
loope,pt
fldcw
sub
pop
ret
pop
cwtl
cmp
out
xor
pop
xlat
fdivp
and
pop
xlat
xor
push
push
sbb
sbb
mov
jge
imul
cmpb
cmpsb
and
jmp
dec
mov
xchg
sbb
aam
lods
mov
push
mov
mov
ja
std
push
xor
jno
stc
mov
push
jbe
xchg
enter
pop
sub
lahf
ljmp
adc
ds
mov
inc
mov
mov
dec
jmp
fmuls
xorb
mov
test
jecxz
jbe
out
mov
push
imul
xchg
arpl
pop
ret
pop
jb
testl
subl
fs
adc
hlt
lock
xchg
jne
add
mov
push
jmp
in
mov
out
jne
and
pop
xchg
out
dec
stos
stos
jnp
cmp
iret
faddl
mov
add
jo
rorb
sar
jno
mov
or
addr16
movsl
sbbb
sbb
lock
fcoml
stc
push
jg
adc
adcl
sbb
add
and
fdivrp
jl
xchg
sti
mov
bnd
nop
adc
fwait
insl
js
sbb
into
aam
cwtl
out
cmp
fdiv
sbb
adc
mov
popf
int3
cmp
jge
sbb
jne
pop
pop
lods
jmp
mov
push
mov
pop
fcompl
ret
test
nop
inc
rcrl
jnp
movsl
out
inc
cli
xor
inc
ret
dec
mov
jle
mov
icebp
data16
dec
ja
inc
xor
in
mov
jl
push
xchg
xchg
outsb
pop
xorl
scas
xchg
test
cmp
leave
cmp
outsl
call
add
cmp
xchg
mov
xchg
jns
mov
sbb
mov
jne
sub
call
repnz
aaa
dec
lahf
mov
adc
pop
push
icebp
pop
js
imul
push
jg
testl
mov
js
int
imul
fsubrl
jle
pusha
sti
cmp
test
sti
push
cmp
pop
ret
es
push
pop
hlt
test
cs
pop
add
sbbl
movsl
mov
dec
fstl
cmc
cs
es
mov
popa
push
push
cld
dec
xchg
sbb
shlb
cmp
test
add
int
mov
jecxz
insl
outsb
lea
dec
inc
frndint
js
add
popa
jbe
sbb
cltd
mov
xchg
xor
jne
and
clc
cmp
mov
push
or
ror
xor
aam
xor
cmovae
shl
dec
mov
mov
pop
cli
cmp
mov
mov
insl
icebp
mov
lret
sub
xchg
insl
and
dec
jne
or
mov
je
push
addr16
int
out
aam
sbb
mov
cmpsb
ja
lcall
loop
mov
xor
pusha
cmc
jnp
hlt
pop
push
mov
aam
mov
dec
jb
int3
jp
ret
xchg
stc
jbe
cmc
int3
cmp
imul
cltd
jg
cmpsb
sbb
enter
and
sub
out
pushf
data16
or
out
adc
pop
add
dec
out
xor
repnz
stos
pop
aam
cmp
adc
aam
aam
repz
popa
cmp
push
and
pop
lahf
inc
fs
lea
mov
rcl
std
cld
push
xor
pop
inc
mov
leave
ret
dec
aad
push
mov
sbb
mov
and
or
pushf
mov
dec
movsl
sub
ret
mov
aas
orl
cmp
or
push
shl
pop
ja
leave
lds
sub
jb
iret
inc
in
lock
jnp
push
test
lret
xchg
pop
sahf
push
out
jge
loop
ljmp
xchg
iret
fbld
mov
test
ljmp
sbb
jae
xchg
sub
jp
test
mov
xor
mov
pop
jle
addb
subb
loopne
sahf
fwait
mov
fwait
adc
cs
imul
out
mov
push
and
stos
pop
push
int
fisttpll
in
pop
popa
mov
out
inc
push
add
mov
xchg
addr16
fwait
push
nop
int
in
icebp
cmp
pop
xchg
add
or
test
dec
add
push
imul
push
mov
or
leave
push
in
ds
leave
fldt
gs
aad
xor
mov
cli
cmp
pusha
loop
jmp
dec
cli
ret
shll
pop
xchg
fadd
gs
call
js
fnstcw
add
popa
fsubl
cmp
and
loop
lock
pop
inc
jnp
loopne
jbe
mov
cmp
ds
mov
cmp
sub
push
mov
sbb
pop
in
gs
adc
test
mov
ds
decl
push
dec
add
cmp
orl
out
mov
fsubrs
sti
mov
xor
fcompl
jo
lods
repnz
push
mov
lods
hlt
sub
pusha
jne
xchg
sub
arpl
lea
leave
pop
push
subl
fidivs
adc
push
outsl
aam
mov
push
add
add
sub
sbb
inc
mov
repz
adc
fdivl
cmpsl
sbb
lea
xor
in
sub
out
cmp
pusha
stos
push
xchg
in
mov
mov
sbb
or
xor
jb
pop
cli
or
fdivl
jmp
add
ss
cli
mov
lret
lods
xchg
push
dec
ror
lahf
xchg
data16
jns
daa
add
push
mov
aam
aas
lcall
xchg
sbb
mov
sub
push
and
push
push
fisttpl
sbb
mov
mov
pop
mov
mov
lahf
dec
stc
stos
clc
or
decb
or
popf
loop
sub
lods
jp
sti
imul
gs
inc
mov
push
mov
or
cmp
add
mov
sbb
add
out
ret
xor
sub
fnsave
fwait
mov
ss
push
icebp
and
fwait
pop
ljmp
xor
dec
or
pop
lods
lock
push
je
clc
inc
sub
mov
cmc
push
mov
or
sub
inc
mov
test
or
mov
lcall
inc
cli
pop
push
insb
in
xchg
sbb
cmp
mov
dec
js,pn
push
xlat
push
rorl
cmp
sbb
push
fldcw
pusha
adc
pop
jg
xchg
mov
call
jo
lock
in
rclb
subl
jge
pop
mov
and
les
sub
imul
inc
int
repz
into
adc
cmp
xchg
sbb
inc
das
cs
aam
inc
push
jo
dec
repz
fmull
mov
dec
adc
insb
cmp
shlb
shrb
out
pusha
les
xor
aaa
pop
aad
pop
mov
shlb
pop
fwait
stc
inc
sbb
mov
stc
mov
xlat
or
adc
int
movsl
cld
hlt
out
bound
mov
push
adcb
mov
lret
inc
fimuls
call
nop
and
enter
pop
or
inc
je
push
lret
push
jbe
jnp
loopne
and
and
cmp
dec
xor
cmp
ret
push
mov
lret
rol
lock
scas
xor
mov
sub
pop
pop
jg
mov
inc
ljmp
inc
popf
push
aad
lea
jae
dec
pop
adc
sbb
add
int3
cmp
mov
push
mull
neg
sub
cmpsl
inc
pusha
fdivrs
cli
mov
pop
lret
idivb
cmp
push
into
lock
inc
dec
mov
mov
mov
mov
insb
movsb
std
mov
shlb
loop
icebp
pop
popf
ss
mov
xor
pop
lds
cs
inc
pop
mov
push
clc
addr16
out
fildll
pushf
dec
lahf
adc
mov
xchg
pop
add
mov
mov
inc
xor
scas
fdivs
cmpsl
dec
daa
bound
xchg
push
enter
pusha
jnp
pop
push
lahf
dec
je
lds
xchg
repz
or
shll
shll
cmp
xor
mov
pop
test
int
mov
or
sahf
stc
add
mov
dec
or
push
lock
daa
ret
adc
or
cmpsl
or
lods
lret
mov
add
test
push
lds
lcall
pusha
rcrb
lods
sub
cltd
mov
add
test
add
inc
cmc
test
xlat
push
and
in
daa
push
push
sub
push
mov
dec
push
jmp
adcb
test
mov
popa
xchg
sbb
daa
ds
lea
and
enter
sbb
sub
es
jle
inc
push
mov
mov
es
mov
mov
notw
icebp
iret
or
into
fs
pop
jb
adc
imul
sub
push
iret
fisttpll
pusha
and
xorl
fwait
push
cwtl
pusha
lock
mov
pusha
or
and
adc
dec
or
fcomp
adc
mov
in
imul
sbb
stos
xor
test
sti
xlat
cs
jg
inc
and
aad
stc
push
je
push
cmp
add
loope
loopne
insl
pop
imul
inc
ret
lods
push
lods
daa
adc
pop
jmp
cmp
shlb
int
pop
sub
out
jns
push
fwait
or
ret
dec
inc
mov
shr
fsubrs
xchg
test
les
mov
lods
mov
stc
add
aaa
jnp
xchg
sti
fisubrl
add
mov
dec
and
fcmovu
mov
es
lds
rorl
fistpll
xchg
cltd
popf
mov
nop
stos
push
mov
call
cs
cmp
lret
dec
add
add
loopne
std
push
sbb
jecxz
lahf
jp
mov
cmp
data16
sarl
fiadds
notl
lock
adc
out
inc
rcll
sbb
or
xchg
lods
lret
push
popa
icebp
int3
mov
mov
dec
in
aaa
test
fnstsw
es
aaa
inc
lret
mov
ds
in
outsl
xchg
loop
popf
gs
ds
cmp
and
lret
repz
xchg
mul
dec
ss
js
bound
jae
lea
and
lods
cmpsb
aas
bound
and
push
int3
rcl
lea
jo
xchg
adc
xor
add
les
fstps
cmpsl
mov
popf
mov
fs
or
or
inc
testb
adc
or
ret
cmp
push
sub
lret
mov
ljmp
repnz
adc
test
lods
popa
xchg
jecxz
cwtl
cmp
sbbl
adc
mov
mov
mov
lock
mov
aad
cmp
incl
push
outsb
pop
jp
cmpsl
xchg
or
test
xchg
dec
mov
jo
pop
shlb
push
inc
stos
into
sbb
xchg
adc
lods
push
out
xor
cmpb
ss
push
test
movsl
inc
pop
pusha
xchg
dec
pop
xchg
mov
hlt
out
nop
and
rolb
daa
mov
imul
shr
xor
jecxz
fcmovnu
shrb
cmp
out
pop
sbb
in
ds
rclb
fcomps
mov
ret
mov
int3
call
jnp
sbb
lods
jns
and
mov
inc
mov
add
faddl
idivb
cmp
dec
xor
test
push
and
fwait
cmp
jb
or
insl
dec
jne
into
adc
fistpl
fcmovnbe
mov
loopne
bound
cmp
scas
sbb
fsub
cwtl
ficomps
sbb
xor
pop
xchg
add
pop
mov
inc
nop
cmp
mov
mov
xchg
js
fimuls
std
sahf
scas
push
and
leave
shll
rcl
popf
mov
inc
inc
sti
push
xor
xor
int
movsl
shll
std
mov
adc
jnp
jnp
xchg
sti
dec
sub
imul
xchg
push
idivb
sub
xor
sub
cmp
jp
jo
mov
jmp
push
lods
enter
aaa
pop
nop
xor
std
ljmp
ss
je
add
fnstenv
add
bound
mov
sahf
rorb
sbb
cmp
push
jle
pop
or
addr16
cmp
or
push
fnstsw
lret
jbe
adc
sub
sarb
repnz
fisttps
addr16
sbb
inc
ss
rorb
xlat
shlb
sub
test
xchg
into
or
je
ds
mov
rcll
mov
adc
ljmp
lcall
push
mov
push
pusha
pminsw
xor
mov
sbb
mov
and
xor
cmp
push
mov
cmp
leave
mov
fstps
sub
ljmp
push
fs
scas
iret
fwait
insl
xchg
adcb
ja
xchg
cltd
pop
sub
outsl
aad
aad
sahf
fcoms
and
int3
or
mov
cli
dec
jg
stos
mov
dec
fucomi
pop
ljmp
mov
rcrb
adc
jmp
sub
adc
cmp
mov
mov
cmpb
negb
aas
in
inc
fwait
sbb
in
and
jp
popf
cmp
cmp
and
pop
ret
mov
mov
in
insb
cmp
aas
jmp
sbb
xchg
or
mov
jo
loope
pop
into
fwait
or
outsb
scas
jns
sbb
xlat
in
cmp
xchg
test
xchg
jp
dec
lods
or
sahf
out
cmp
pop
add
or
mov
ljmp
jae
push
sub
adc
cmp
xor
int
dec
shrb
pop
adc
mov
mov
inc
dec
cli
adc
push
sub
stos
sub
scas
out
popf
scas
cmp
arpl
scas
pop
push
stc
stos
add
xchg
mov
mov
jmp
cmp
fdivp
hlt
jle
ds
fcmovu
js
cli
scas
daa
mov
call
iret
xor
dec
push
mov
xchg
push
dec
fnstenv
adc
ljmp
pushf
cmp
aam
xchg
inc
add
sbb
or
adc
das
push
repz
xchg
and
inc
pop
in
out
xchg
shrl
or
mov
dec
loop
pop
adc
test
xor
lea
rcll
adc
call
mov
lea
fistl
fnclex
cmp
imul
dec
lret
ds
arpl
pop
and
sbb
fdivrs
xor
imul
jg
mov
mov
sbb
sbb
aaa
aaa
fstps
add
push
iret
sarb
cmp
sub
cmpb
notl
aam
out
addr16
mov
xor
xor
jb
mov
shlb
flds
je
pop
mov
pop
mov
scas
data16
push
sbb
mov
insb
and
in
bound
dec
imul
dec
push
fdiv
jp
mov
xchg
push
mov
repnz
push
xchg
mov
or
test
push
std
push
popa
pushf
std
pop
lock
je
pusha
cmp
cmp
mov
aad
iret
push
scas
add
ljmp
orb
jne
enter
mov
imul
insb
fs
lcall
cmp
shlb
testb
push
fimuls
mov
pusha
test
decb
mov
clc
rcrb
jno
cmpsl
pusha
add
int3
jp
inc
call
and
pop
mov
lea
adc
std
inc
test
aaa
pop
cmovns
bound
stos
out
cmp
mov
jmp
or
lcall
sbb
mov
ljmp
sbb
jg
fstps
arpl
mov
sbb
add
out
sub
pusha
jp
out
gs
bnd
lahf
xchg
jp
cmp
and
pushl
sbb
inc
in
adc
hlt
je
mov
je
subl
mov
dec
fst
sbb
fstpt
bound
sbb
imul
out
hlt
xchg
test
mov
mov
stos
mov
sbb
mov
xchg
sub
and
pusha
and
cmp
sbbl
mov
inc
js
add
sub
dec
insl
inc
xadd
cmp
addl
push
push
or
cmp
jae
enter
jns
xchg
jp
lods
nop
mov
jne
shrb
inc
pop
das
les
adc
in
mov
std
movsb
mov
or
stos
pop
les
pop
outsl
sub
popf
rorl
push
add
push
nop
and
scas
push
cmpsb
add
ds
ret
xchg
adc
fndisi(8087
jne
icebp
adc
aaa
test
out
addr16
cli
in
test
fisubl
gs
outsb
pusha
es
or
int3
imul
mov
shlb
ret
or
xchg
xchg
add
clc
mov
xlat
and
cmp
sahf
int3
push
jns
dec
dec
es
mov
sbb
inc
das
mov
and
not
sub
jmp
cs
xor
or
jns
cmpsb
shll
xor
clc
jg
mov
jg
fildl
dec
insb
ja
orl
sbb
and
push
in
stos
sbb
aas
out
cltd
xchg
call
cmp
out
sahf
int
fiadds
cmc
hlt
mov
adc
sbb
push
ficoml
xchg
adc
cwtl
in
cmp
mov
mov
loope
dec
or
into
ret
scas
add
adc
push
std
cmpsl
movsl
mov
arpl
in
xchg
loop
mov
pop
fistpl
sarb
inc
into
add
nopl
push
mov
inc
popf
cwtl
insw
cli
pop
xchg
in
jne
add
push
inc
jno
sub
inc
neg
cmp
lock
dec
add
outsl
insl
add
pop
lret
jnp
test
pop
sbbb
add
mov
shll
dec
fsubrl
dec
inc
cltd
add
loop
xchg
and
mov
xor
js
pusha
and
xor
adc
pop
xchg
rcrl
mov
cmc
pushf
int3
push
sbb
repnz
mov
jl
gs
xchg
in
inc
and
icebp
ret
sbb
adcl
mov
jb
adc
pop
stos
add
cs
stos
adc
ss
fnstcw
mov
in
sub
mov
shlb
imul
push
loope
dec
sub
and
dec
and
xchg
enter
inc
or
lcall
jne
ljmp
cltd
inc
jp
das
out
dec
jnp
mov
xor
aaa
cltd
fidivrs
jmp
lods
add
insb
cmp
mov
and
xchg
sub
xchg
daa
jmp
flds
int
jmp
add
push
mov
dec
lahf
sub
dec
add
pop
loop
in
in
frstor
into
hlt
dec
scas
movsb
popf
xor
mov
jne
sbb
and
adc
sub
cmp
fdivrl
mov
stos
imul
stos
mov
jno
mov
dec
lret
pop
pushf
push
add
mov
mov
jne
mov
adc
sub
fstl
push
xchg
dec
shrl
jae
dec
nop
addb
sar
repnz
mov
jecxz
pusha
scas
sub
cmp
popf
push
xlat
mov
lea
mov
or
jnp
push
test
xchg
imul
mov
mov
addr16
adc
dec
cli
mov
insb
mov
fadds
sarl
mov
cmpsb
and
adc
int
dec
or
pop
push
mov
cmp
test
pop
imul
dec
orb
dec
int3
cmp
out
xchg
push
jg
push
mov
cmp
cmp
int
imul
mov
frstor
lcall
lcall
inc
inc
push
push
popa
inc
dec
aaa
mov
sbb
dec
inc
and
clc
add
out
movsb
insb
lock
xchg
push
pop
les
push
rcrl
in
jl
jmp
stc
push
xchg
mov
sbb
inc
in
mov
fiaddl
or
push
mov
ss
int
adc
insl
inc
dec
inc
mov
jae
rorl
loopne
imul
lds
xchg
dec
or
dec
icebp
jae
push
imul
loopne
ljmp
inc
xlat
inc
push
inc
insl
int3
test
bound
cmp
cmp
lods
fs
movhps
in
add
fsubrp
jb
push
mov
es
inc
addr16
xor
lds
adc
aam
int3
test
push
pop
sbb
add
insl
aad
or
sub
sub
loope
adc
jl
mov
inc
jbe
jbe
mov
and
insb
divl
inc
lahf
or
ja
xchg
and
cli
icebp
mov
xchg
test
das
test
mov
lea
cld
jp
pop
test
in
dec
jb
jae
mov
xchg
xor
mov
pusha
push
popa
push
rcl
jae
outsb
push
or
inc
xlat
lea
inc
sbb
jle
cs
push
popa
incl
into
dec
mov
mov
rorb
adc
inc
mov
lret
lods
ljmp
add
popf
popf
dec
lret
mov
icebp
pushf
mov
jne
sbb
mov
pop
xor
inc
loopne
push
mov
mov
cmp
xlat
pop
add
pop
rcl
cmovae
push
inc
inc
imul
xor
repz
mov
mov
push
mov
pop
cmp
and
pop
add
xchg
es
popl
dec
stos
cmp
cwtl
adc
mov
inc
xchg
fiaddl
sbb
dec
fstl
mov
xor
mov
cltd
pop
jle
pop
popl
mov
xchg
out
andl
cmpsl
das
gs
and
ret
mov
add
ss
popf
rclb
addr16
rorl
aas
pop
add
inc
mov
adc
pop
mov
and
nop
adc
loope
xor
loopne
xchg
stc
push
cmp
pop
jmp
or
loopne
pop
hlt
movsl
inc
rcl
mov
shl
or
mov
dec
sbb
dec
int
dec
iret
mov
lcall
lds
jmp
aas
jecxz
push
insl
dec
fidivrs
xchg
mov
push
orl
mov
xchg
adc
loop
icebp
cmp
and
les
out
mov
or
mov
xor
addr16
sbb
xor
mov
sarl
mov
push
add
test
das
pusha
and
dec
push
sub
xchg
cmpsb
sbb
ficompl
fsubr
les
leave
adc
xlat
dec
add
int
outsb
pop
jnp
sub
push
push
enter
sub
jae
cmp
mov
dec
pop
cltd
out
sbb
mov
pop
je
shlb
or
push
cmpsl
int
jne
lds
fwait
mov
inc
mov
cs
mov
lods
pop
mov
loop
int
push
ja
sub
push
popa
dec
pop
imul
sbb
out
or
or
adc
xor
inc
cmp
ds
mov
arpl
fbstp
scas
mov
bound
insb
ss
jmp
aad
imul
ss
sub
cwtl
xor
lds
add
jo
or
pop
cltd
mov
pop
bound
jmp
pop
or
jg
es
test
inc
cli
sti
add
push
out
lcall
pop
sahf
enter
push
cmp
shrb
cmp
je
cmc
inc
jg
sbb
jle
out
and
jno
enter
movsl
dec
xor
pop
push
adc
fwait
pop
addb
jp
int3
lock
mov
js
lock
jecxz
movsl
cltd
push
jecxz
xchg
mov
pop
stos
jbe
mov
repnz
jp
jns
push
mov
jmp
je
cs
and
fsub
and
and
add
sub
mov
sub
xchg
icebp
testl
pop
fdivrs
cmp
in
adc
jecxz
scas
mov
jae
sub
pop
or
cmp
jnp
pop
xor
insl
push
mov
in
inc
negb
lods
addl
dec
push
scas
insb
xor
xchg
shrb
jg
int3
cmp
xor
push
xor
push
cld
bound
cmp
nop
adc
mov
push
dec
pop
shlb
mov
push
pop
or
mov
or
mov
mov
mov
xor
jge
js
mov
sbb
mov
mov
lret
push
cwtl
and
lods
dec
sbb
mov
mov
dec
dec
push
stos
adc
dec
mov
push
js
sbb
outsl
stc
std
scas
loop
mov
sub
mov
into
icebp
shlb
ljmp
enter
hlt
xor
and
movsb
lock
or
push
decb
jb
ficoms
push
shll
int3
jecxz
dec
fwait
jecxz
inc
leave
inc
in
pop
imull
mov
fdivl
inc
sub
mov
paddsw
jo
lahf
rcrb
fildl
inc
inc
aad
inc
mov
rclb
shlb
rep
sahf
cmc
fists
push
shrl
lods
das
sub
jg
out
enter
xchg
ss
mov
and
fdivs
or
xchg
ficoml
gs
lret
arpl
push
push
xchg
imul
jl
ljmp
mov
adc
ja
sub
dec
mov
push
dec
mov
inc
iret
nop
xor
test
pop
sahf
je
lods
int
cmpsb
push
inc
mov
inc
dec
add
or
cmpsb
adc
sarb
xor
sbb
gs
ffree
jp
shr
mov
loope
push
and
imul
push
icebp
out
clc
and
insb
push
mov
pop
fldenv
and
and
or
lds
add
xor
mov
adc
out
fwait
repz
pop
popf
xchg
sti
sbb
test
mov
pop
sub
and
pop
aam
in
push
cld
orl
iret
ljmp
shrb
push
cmp
pop
push
cmp
jmp
cmpsl
add
dec
sbb
sbb
xor
sub
adc
push
pushw
sbb
lods
add
mov
loopne
movntps
xor
addr16
pop
rol
sbb
add
stos
pop
jp
shl
aam
push
add
bound
ret
cmpsl
cltd
adc
jae
and
ret
imul
movsl
pop
cli
sub
leave
inc
adc
test
xor
es
lods
pop
clc
push
pushf
jp
ja
scas
ss
sub
cs
lea
inc
xchg
pop
or
nop
add
mov
dec
push
je
jle
stos
mov
pushf
mov
pop
insl
sahf
lretw
jle
add
push
cmp
sti
xor
movb
test
dec
mov
out
test
in
js
mov
movsb
xchg
clc
xchg
mov
dec
lcall
pop
pop
mov
adc
mov
cltd
cmc
negb
mov
ljmp
cs
inc
andb
stos
fsts
inc
iret
xor
sahf
inc
and
stos
jg
int3
repnz
xchg
scas
fdivrs
or
mov
in
filds
mov
fs
outsb
aam
in
cmc
push
dec
rorb
mov
dec
xor
jl
mov
aas
neg
sbb
dec
dec
pop
ss
adc
rorb
test
fildll
pop
or
clc
and
mov
inc
stos
add
pop
insl
inc
xlat
push
mov
mov
xchg
das
stc
mov
test
xchg
pop
adc
js
pop
in
mov
inc
jle
rclb
push
pop
lods
cmpsl
pop
sbb
sbb
mov
paddb
mov
inc
je
pop
push
mov
pop
sti
jno
and
je
cld
or
inc
pop
xchg
pop
sub
mov
daa
adc
mov
mov
dec
mov
arpl
lods
out
shrb
jle
xor
movsb
jp
mov
cltd
fsubrs
pusha
mov
pusha
fnsetpm(287
test
jg
out
pop
repnz
test
sub
jl
out
jg
adc
and
or
mov
mov
jb
adc
xor
inc
mov
sahf
pop
or
icebp
dec
and
and
roll
xchg
notb
adc
mov
sub
roll
jne
xchg
lret
dec
sub
ja
or
dec
mov
jbe
xchg
mov
fsubrl
or
outsb
les
repz
roll
lods
dec
notl
mov
dec
and
push
xor
nop
pop
mov
lea
fldt
jns
xchg
inc
dec
dec
leave
cli
xlat
out
adc
sbb
pop
rclb
xor
jo
rolb
or
add
fstl
lret
loopne
mov
sub
push
cmp
repz
bound
orl
ja
out
loop
xor
mov
loop
ret
jmp
push
das
imul
std
mov
shl
sbbl
sub
ret
push
jns,pt
mov
lret
or
xchg
bound
or
lret
dec
test
cmp
or
adc
xchg
and
cltd
inc
add
mov
jp
mov
movsb
pop
mov
stos
sub
mov
std
sub
mov
sub
xchg
or
sub
cmp
fwait
repz
int3
loop
pop
sub
sbb
fdivp
fnsave
aad
insb
clc
lods
das
fidivrl
xor
test
sbb
nop
fstp
dec
adc
mov
cld
out
popf
ds
fldl
popa
and
sub
outsl
faddl
in
pop
mov
scas
popl
test
jb
fwait
push
and
adcl
enter
lods
inc
fwait
jno
packuswb
xor
popa
or
cld
testl
outsl
adcl
imul
aaa
call
or
or
inc
mov
pop
jle
enter
push
mov
repnz
fbstp
pop
mov
mov
jge
cwtl
aad
pop
or
shll
cmp
pop
negl
outsl
dec
jl
aaa
das
bound
js
ljmp
nop
fcoms
jp
icebp
sub
pop
mov
and
and
or
cli
pushf
mov
mov
mov
aam
int3
xor
mov
lods
jmp
in
call
add
sub
fstps
leave
jbe
fcomp
fsts
or
data16
and
or
lea
bnd
adc
sub
pop
fcoml
adc
pushf
push
jb
dec
adc
pop
cmpsb
pusha
nop
mov
cmp
lret
mov
lahf
in
sbb
lret
xchg
jae
aad
mov
push
push
jne
cli
xchg
aam
and
mov
fdivrs
sbb
sub
in
dec
xchg
dec
xor
or
fcompl
imul
mov
setbe
cmpsb
out
sti
repz
lss
jnp
out
xor
lock
push
sbb
into
sub
mov
cmpsl
sbb
xchg
sahf
negl
cld
xchg
jecxz
aad
ret
mov
push
lods
mov
push
cmp
andl
inc
in
xchg
jp
or
adc
ret
test
mov
lahf
sahf
and
mov
ss
sahf
mov
xchg
inc
out
mov
xchg
je
push
shl
loope
mov
add
add
popf
xchg
bound
cmc
test
and
fldcw
pop
mov
adc
into
les
xor
and
jo
sub
and
ss
int
arpl
orb
mov
add
addb
and
jbe
nop
outsl
out
divb
sub
push
in
out
fdivr
push
cmp
fimuls
add
or
mov
fdivrp
lock
or
les
inc
sbb
les
outsl
xchg
xor
sub
push
xchg
mov
sbb
mov
ds
cmp
jl
in
mov
push
sub
mov
ss
test
or
xchg
jmp
adc
jecxz
jp
fcoml
xchg
mov
loop
or
or
mov
mov
imul
mov
jecxz
jnp
mov
les
scas
in
dec
pop
cs
lret
mov
or
dec
imul
dec
jmp
movsb
repnz
or
shrl
inc
stos
inc
xchg
pushf
push
les
xchg
lret
movsb
pusha
popf
push
into
add
pop
aad
dec
fdivp
lret
push
lret
pop
jne
test
fisubl
cmc
mov
dec
fbld
xchg
aad
or
cli
and
dec
scas
in
cmp
fwait
pop
mov
aam
inc
test
or
shrl
mov
jg
ret
mov
test
and
cmpl
loopne
arpl
idivl
shlb
lret
push
fs
adc
pop
and
inc
pop
adc
enter
sbbb
fsubrs
cli
inc
iret
push
imul
int3
xchg
dec
pop
mov
loop
xor
shlb
jg
in
lea
nop
inc
push
notl
nop
mov
repz
xor
aas
mov
lret
lods
into
aaa
inc
inc
pop
lret
jns
jnp
and
or
addb
cs
push
inc
jbe
and
es
jnp
popa
inc
call
mov
mov
pop
mov
jge
fwait
or
cwtl
lods
outsl
xchg
cmc
loopne
xchg
sbb
repnz
push
in
jno
push
lock
xchg
fcmovb
repz
cld
mov
sbb
sbb
dec
cmp
daa
pop
mov
cmc
xchg
imul
mov
xor
and
adc
imulb
loopne
repnz
negb
inc
or
xchg
pop
das
mov
insb
and
in
sub
inc
pop
dec
mov
subl
outsb
rcll
idivl
jns
test
mov
movsl
sub
movsl
movsl
lahf
lea
add
inc
xor
xchg
std
scas
mov
sub
ss
imul
lods
mov
adc
or
and
fisubrs
xlat
mov
push
pop
out
add
jp
loopne
mov
imulb
xor
and
int3
js
fldt
scas
into
mov
test
inc
gs
push
sbb
sub
push
ds
mov
fwait
enter
pushf
xor
jb
or
les
mov
dec
sub
lret
orl
xchg
pushf
sbb
subb
dec
xchg
xchg
lods
push
push
daa
xor
dec
xor
testl
inc
pop
es
inc
sti
push
jno
xor
imull
jp
jg
mov
jns
mov
inc
or
fildl
pop
sub
test
pop
sbb
jae
adc
jecxz,pn
sbb
scas
mov
mov
inc
pop
pushf
mov
mov
or
sbb
mov
fldcw
mov
js
pusha
adc
stc
daa
lret
jns
push
adc
jl
test
add
call
lock
xor
lds
pop
mov
and
in
test
aas
out
dec
lods
loop
mov
daa
mov
adc
fistl
xor
and
cmp
out
sbb
lods
push
inc
xchg
dec
sub
add
xor
adc
mov
aas
sub
stos
dec
push
pop
mov
push
xchg
dec
fwait
dec
sub
rol
jecxz
mov
xchg
mov
cmp
inc
xchg
add
mov
lret
les
aad
dec
ljmp
test
sub
mov
outsl
bound
inc
int
mov
clc
dec
pop
mov
js
ljmp
test
sbb
ljmp
mov
cld
and
jne
jmp
sahf
fidivrs
sarl
mov
lods
sub
xor
pop
repnz
out
in
lock
inc
mov
imul
cmp
dec
add
jo
rorl
add
push
xchg
jl
xor
xchg
iret
xchg
out
dec
clc
jbe
mov
cmp
ret
fists
sbb
out
pop
sbb
lret
cmpsb
loopne
rol
mov
add
mov
int3
scas
inc
cmp
fcomps
sbb
mov
adc
pop
cmpsl
mov
decl
push
fwait
sbb
xchg
sbb
pop
imul
shll
sarl
adc
fsubl
or
adc
adc
jg
fsubl
clc
sub
imul
mov
jns
js
loop
jecxz
es
and
stos
pop
stos
mov
movsb
leave
test
mov
in
sub
scas
xchg
imul
add
ja
xor
imul
pop
pusha
fildl
loope
std
aam
fwait
icebp
adc
and
xchg
pop
mov
insl
out
popf
popa
bound
movsl
and
jle
loope
or
push
jle
cmp
pushf
jnp
inc
sti
push
in
push
fisubrs
jne
pop
inc
xor
enter
ja
loope
int3
sbb
mov
cmp
jno
clc
xor
addr16
or
jmp
lret
xchg
add
fwait
xchg
jno
aam
imul
arpl
adc
pop
out
push
push
or
cmp
jmp
pushf
dec
lcall
filds
out
imul
out
repnz
leave
in
enter
insl
call
aas
iret
dec
sub
push
pushf
xor
jp
add
sbb
addr16
and
dec
inc
aam
call
loopne
jb
imul
jmp
movsb
xor
jno
ss
fistl
inc
and
sub
stc
popf
sbb
xchg
push
addr16
mov
lcall
mov
lahf
cmp
movsb
arpl
mov
sbb
mov
dec
sbb
lret
add
pop
sbb
inc
cld
idivl
dec
inc
push
in
add
push
jge
fdiv
mov
int
fbstp
dec
mov
daa
and
stos
sub
push
pop
fidivrl
les
ret
imul
pusha
movsb
iret
popf
mov
nop
das
ret
out
andb
dec
dec
shll
pop
sub
push
xchg
xchg
fs
xorl
dec
out
lret
inc
jno
mov
sarl
mov
in
stos
mov
push
xchg
cmpsl
jp,pn
dec
call
push
xchg
gs
cmp
adc
clc
mov
fsubrl
loop
jl
cli
dec
in
cwtl
loopne
fwait
stc
mov
test
cmpsb
popa
das
mov
mov
ror
mov
ljmp
out
jp
xchg
nop
mov
lods
jmp
mov
adc
cmp
fs
aam
adc
push
addr16
xchg
mov
aaa
xchg
les
cli
mov
or
aas
or
xor
jg
push
mov
adc
jns
xor
pop
negl
jmp
lret
cmp
inc
adc
pop
shrb
and
rcll
ds
sbb
call
dec
xor
btc
testb
movsb
inc
jns
jecxz
dec
cmp
sub
mov
xor
adc
test
femms
xorl
in
sti
ret
dec
pcmpeqw
icebp
dec
fcmove
loopne
pop
xchg
mov
fiadds
and
pop
data16
jp
cmpb
ss
ret
inc
sbb
insl
inc
push
mov
fwait
xchg
mov
notl
std
adc
enter
jns
and
movsl
xchg
inc
mov
mov
cmp
fadd
adc
std
adc
pop
fnstcw
scas
lods
push
shl
sbb
pop
jecxz
mov
outsl
std
xchg
mov
shl
and
sub
test
rol
add
nop
pushw
fisttps
pop
dec
in
dec
hlt
xor
fstpt
dec
xchg
popf
es
fistpll
mov
enter
repz
shlb
orb
sbb
in
xor
out
mov
aad
mov
fabs
push
pusha
dec
and
je
xchg
out
sbb
jo
dec
stos
ja
call
in
mov
pop
into
push
sti
adc
cld
cmp
into
ds
aas
mov
subl
popa
scas
mov
js
shrb
inc
outsl
data16
aaa
inc
stos
cmp
adc
fstps
or
push
gs
orl
les
pmaxub
mov
mov
push
popf
shlb
sbb
imul
add
sbb
daa
push
sub
add
add
icebp
sti
xchg
test
js
adcl
ja
jmp
mov
jl
push
dec
adc
mov
imul
add
leave
pop
mov
mov
sbb
xchg
insl
dec
cmp
dec
sub
dec
push
and
leave
ret
cli
pusha
dec
leave
data16
xor
out
xorb
add
pop
stos
insl
in
xchg
stos
xor
push
and
popa
cld
jg
jl
adc
ja
adc
stos
cli
dec
push
enter
pop
in
mov
lds
inc
cmpsl
xor
adc
mov
ja
xchg
cmp
movsb
add
ret
je
mov
sbb
mov
mov
jb
jae
cmp
mov
scas
cld
mov
pop
scas
call
push
repnz
ja
mov
sbb
pop
fnsave
scas
pop
inc
jg
stos
aas
inc
inc
jp
fstpt
mov
ds
out
sub
sbb
push
lods
sti
lods
rorl
and
push
int3
cs
cmp
xchg
mov
out
sti
xor
add
jp
sub
adc
cmc
add
push
inc
adc
aas
xchg
icebp
icebp
outsl
xlat
cli
jmp
rcrl
into
aaa
inc
ret
loope
icebp
cli
mov
mov
je
pop
js
jae
lds
les
cmp
call
add
or
stos
in
lock
fsubrl
daa
sbb
notb
sub
or
dec
cmc
lea
mov
insb
fucomip
cltd
mov
xchg
push
sarb
xor
out
mov
mov
cltd
lea
dec
iret
test
outsl
shl
fwait
in
mov
and
out
xchg
push
cmpsl
xchg
pop
sbb
mov
lock
dec
cld
loop
clc
pop
cmpb
push
imul
fwait
mov
aaa
inc
aam
shll
pop
les
cmc
cltd
jmp
or
iret
xchg
cmp
push
cmp
cmp
dec
rcll
pop
cmp
sbb
xchg
clc
mov
push
jg
stc
das
or
dec
pop
pop
mov
loop
or
aam
dec
or
or
mov
xor
inc
imul
push
setne
mov
mov
pop
dec
or
and
sub
loopne
adc
adc
jle
stos
lret
jno
add
or
pop
jb
incl
and
dec
ja
or
cmp
push
dec
dec
int
add
or
add
xor
lret
dec
ror
sbb
jb
xchg
add
jecxz
shrb
jne
lock
aam
rorb
dec
lcall
cmp
xor
jbe
or
ds
outsl
lock
mov
mov
and
ret
cltd
jae
fadd
cs
ss
jnp
fistpl
mov
aad
test
in
sbb
and
test
popf
sub
sub
xchg
stc
std
mov
mov
mov
jecxz
dec
sub
dec
add
mov
adc
ljmp
pop
out
push
push
aad
xchg
mov
aas
cmpsl
xchg
test
rclb
cmp
xchg
pop
icebp
stos
push
sub
ret
pop
enter
jp
lcall
aam
mov
lods
into
lods
mov
repz
or
hlt
pushf
outsb
xchg
loope
mov
xchg
insb
or
pop
adc
sbbl
jge
sbb
scas
xchg
fiadds
bound
shl
mov
push
mov
fsts
movsb
xor
loop
sbb
movsl
int
icebp
aas
es
jecxz
pop
pop
idivb
call
sub
aaa
insl
addr16
cmp
sub
lods
xchg
imul
mulb
jne
mov
and
or
in
sbb
cmp
pop
pop
mov
jno
mov
rclb
das
dec
mov
popa
enter
cmc
dec
insl
aam
mov
fcmove
jno
lods
clc
cs
shr
cmc
lods
cmp
cli
mov
das
test
movq
sahf
add
pop
jo
iret
inc
leave
inc
cs
sti
fistps
lock
pop
lods
dec
push
inc
repnz
mov
sbb
leave
cmp
out
gs
stc
daa
int
cs
out
in
std
lret
loop
jl
testl
cmc
xor
mov
sahf
in
bound
les
in
out
mov
lret
sub
out
sub
sbb
sub
jle
cmpsl
pop
adc
sbb
lret
je
lea
cmpsb
mov
xor
shr
int
add
repnz
call
inc
addr16
shlb
fisubrl
jbe
push
pop
jl
xchg
aas
ss
fcmovbe
orb
adc
sbb
adc
push
jge
and
push
into
add
movsb
push
fldl
and
in
incl
push
je
lcall
gs
cld
xor
fnsave
mov
mov
cmp
mov
lods
or
lret
std
movl
int3
subl
shlb
jbe
cmp
sahf
or
daa
sub
jo
leave
hlt
fldz
cs
ffreep
pop
in
dec
ljmp
push
dec
lahf
push
sub
cmp
push
loope
loopne
bound
sub
insl
ret
pop
ret
inc
mov
lret
push
pop
and
packuswb
call
and
xchg
mov
imul
and
mov
dec
and
jecxz
push
imull
fwait
jo
adc
fnstcw
je
sbb
xchg
add
lods
mov
xchg
out
mov
jno
jmp
push
push
in
mov
push
jbe
or
pop
jge
stc
mov
sbb
lret
sqrtps
pop
mov
imul
xor
jge
xchg
std
push
pop
jnp
mov
and
and
jge
mov
jge
fwait
ja
inc
cmp
pop
out
sub
sbb
mov
das
loopne
dec
pop
lret
gs
pop
push
ret
aas
push
je
xchg
xor
test
test
mov
push
mov
and
mov
cmp
push
push
jmp
not
jp
mov
jbe
xchg
or
les
pop
jo
pop
sub
pop
mov
xchg
xchg
pop
dec
pop
imul
je
ret
mulb
lods
outsb
pop
fstpt
movsl
pop
and
inc
cmp
mov
aas
xor
addr16
or
xchg
xchg
push
lods
scas
lahf
ror
push
dec
lahf
sbb
arpl
out
idivl
or
out
hlt
push
mov
stos
fdivr
adc
xor
lret
in
adc
fidivl
xchg
pop
insb
pop
sete
fistpll
pop
or
add
nop
shll
jnp
mov
enter
pop
and
lcall
sbb
stc
sbb
je
btc
hlt
cmpsb
pop
push
in
addb
adc
cli
cs
push
sti
test
sub
sarl
sub
ljmp
inc
lock
xchg
xchg
int
jnp
mov
sub
or
and
push
int3
scas
and
arpl
aam
inc
inc
lcall
cmp
adc
pop
mov
adcb
mov
pop
sbb
fbstp
sub
xchg
inc
andb
js
insl
inc
lock
dec
jbe
mov
mov
pop
loope
lcall
in
lock
cwtl
adc
popa
mov
inc
mov
fs
and
pop
subps
adc
dec
pushf
aaa
popf
inc
add
call
xchg
push
in
cmpl
cmpsb
inc
out
mov
fidivrl
sysenter
bound
fdiv
call
mov
mov
xchg
xchg
rcll
insb
mov
mov
adc
mov
push
stc
cli
mul
xchg
or
or
sahf
xchg
mov
push
dec
mov
mov
stc
jp
pop
jmp
adc
popf
adc
pop
stc
mov
push
shll
xchg
popf
sub
fisubs
push
lods
sahf
pop
cmp
jae
mov
pop
icebp
subb
pop
clc
ret
mov
jl
push
jnp
rcr
mov
jns
adc
jnp
and
or
outsl
adc
addl
popf
mov
add
daa
xor
in
pushf
mov
or
fdivp
jne
popa
sub
mov
pushf
add
fcmovnu
iret
clc
xchg
sub
in
mov
add
xorl
jno
rcrl
pop
in
cmp
aas
test
xchg
test
push
mov
cmp
nop
shll
repnz
push
fwait
mov
mov
mov
movl
out
lock
jae
icebp
insb
inc
sub
mov
pop
movsb
jl
aas
fists
ret
xor
iret
and
movsl
jns
and
bound
adc
mov
push
mov
cltd
mov
mov
cmp
pop
cs
leave
lock
insl
mov
or
adc
push
jno
test
dec
or
mov
lods
and
mov
xchg
loopne
mov
xchg
cmp
dec
pop
dec
std
nop
in
negl
xchg
pop
jne
mov
pop
subl
testb
and
pop
lret
bound
mov
inc
xchg
clc
adc
or
mov
loope
jnp
mov
fdivrl
dec
xchg
call
mov
std
mov
mov
subl
imul
aaa
fs
sbb
xor
lret
clc
add
inc
cmp
loop,pt
shl
test
into
xchg
jge
push
dec
pusha
mov
or
ret
mov
mov
dec
enter
xor
fbstp
lcall
inc
xchg
pop
aam
in
dec
mov
adc
fisubl
inc
dec
mov
inc
jne
aam
scas
push
es
cmp
lahf
in
pop
xchg
les
fucomi
push
push
mov
sti
push
lcall
cmpsl
pop
call
jecxz
add
jnp
jmp
mov
and
daa
jp
pop
jecxz
jno
mov
insl
aam
push
fwait
push
repz
push
in
cmp
and
inc
in
into
pusha
inc
lret
cwtd
call
call
outsl
aaa
pop
and
rcll
insb
jns
into
pop
mov
cld
dec
es
cld
sbb
fwait
inc
jg,pt
ljmp
ja
dec
sub
mov
push
add
pop
or
shll
andl
fstpt
jge
in
mov
xchg
das
jge
fisubl
mov
mov
cmp
cli
xlat
dec
or
pop
jp
movsb
mov
gs
and
test
cmpsb
or
sub
or
ljmp
inc
fwait
negb
stos
jmp
int3
imul
sar
scas
sub
les
add
es
mov
cmp
mov
clc
mov
je
pop
scas
push
cmc
xchg
inc
aam
push
ljmp
cmp
sbb
ss
adc
mov
add
outsb
sbb
jmp
in
sbb
mov
or
dec
adc
push
push
das
pop
addr16
lcall
sbb
cmp
insb
or
mov
pop
addr16
jp
sub
test
sbb
push
and
mov
cmp
mov
into
add
sub
lock
aaa
sbb
mov
xchg
jle
inc
nop
jno
or
fistl
and
gs
sbb
mov
movsb
mov
cmp
mov
dec
add
jp
adc
inc
pop
ficoms
int
daa
xchg
inc
mov
xchg
jecxz
lds
test
xchg
xor
cmp
mov
dec
xchg
mov
cltd
xchg
push
mov
addr16
stc
in
ja
out
add
pop
and
pop
cmp
and
mov
stc
js
mov
add
out
int3
fsub
mov
xorl
test
mov
pushf
lock
cmpsl
fistpll
fildll
and
cmp
insl
add
out
call
mov
and
ficoml
subl
cwtl
loop
xchg
pop
cmp
add
mov
and
pop
incb
je
stos
enter
mov
rorb
mov
add
loop
inc
xor
dec
popw
std
mov
stc
or
rcrl
mov
popf
pusha
les
hlt
sbb
testl
stos
xchg
insl
out
lods
out
mov
lock
push
xlat
sbb
or
inc
jecxz
shl
in
xor
nop
dec
jge
out
dec
mov
loope
test
push
loope
or
out
mov
mov
cmpsl
xchg
push
roll
sbb
cld
jg
cmpsb
push
je
shlb
lea
mov
push
mov
rcrb
or
mov
pop
dec
inc
lret
dec
mov
fsubl
sub
pop
aam
push
mov
ljmp
sbb
push
inc
cs
mov
lods
mov
ja
cwtl
mov
xchg
sub
pop
aas
imul
push
xorb
test
ss
mov
pop
push
leave
pop
or
mov
push
test
cli
aaa
int
push
dec
xchg
jle
mov
jbe
adc
dec
jl
rorl
dec
stos
jle
lahf
stc
stos
les
ljmp
jp
aas
sbb
inc
jle
inc
xorl
je
push
push
test
je
mov
mov
mov
and
imul
cmp
sub
inc
std
ret
dec
jne
lods
xchg
lds
sbb
pop
pop
and
mov
adc
iret
mov
sub
xor
mov
sbb
int
je
xor
fnstsw
arpl
sbb
dec
pop
fimull
popf
or
pushf
fsts
sub
movsb
mul
movsl
adc
mov
scas
push
inc
cmp
dec
mov
dec
pop
mov
push
mov
xchg
stos
pop
jb
call
mov
aam
inc
mov
inc
dec
popf
add
data16
test
int3
jno
ret
pop
dec
mov
push
outsl
xor
fdivrs
jecxz
push
jg
faddl
cmp
xor
cmp
inc
fs
loop
push
push
push
pushf
mov
lods
pop
clc
daa
xor
or
inc
pop
inc
in
jp
sbbb
xor
inc
mov
jg
std
pushf
xchg
int3
cmpsl
mov
sarb
sbb
xor
mov
jns
push
testb
xor
es
in
insb
sbb
add
add
bound
mov
fcmovnb
inc
fstps
xchg
mov
lret
aam
cmp
mov
push
mov
sarl
jmp
push
clc
notb
js
dec
xchg
jb
mov
mov
cs
xor
push
icebp
xchg
scas
mov
dec
ljmp
jb
sbb
test
je
data16
movsl
or
dec
sbb
fnstsw
xchg
pop
xchg
cld
inc
mov
and
sub
out
inc
test
int3
mov
lret
cli
pushf
add
add
icebp
pop
sbb
mov
or
xor
xor
lret
andl
popf
dec
add
fcomi
bound
add
cmp
lods
xchg
loop
pop
xchg
adc
adc
dec
dec
sbb
xchg
adcl
xor
sbb
sub
push
sbb
inc
xchg
sub
into
sub
fidivs
rcll
jne
xchg
icebp
mov
ret
dec
out
icebp
or
sub
xchg
dec
mov
xchg
cmpsb
in
sub
mov
test
sahf
lods
adc
aaa
adcb
push
lcall
fs
adc
mov
and
pushf
bound
jo
movsb
rcll
bnd
loope
repz
sub
xor
lret
repz
mov
scas
outsl
ficompl
ret
pop
sti
pop
int
adc
jle
loope
outsl
lods
cmp
pop
aaa
or
testl
or
loop
stos
rclb
cld
out
loopne
out
stos
push
or
push
inc
xlat
sbb
cmp
and
inc
fs
pop
push
loope
cmpsb
in
in
xor
inc
push
push
int3
mov
int
shrl
sub
add
inc
xchg
rcl
inc
inc
sub
sbb
sub
cmc
push
jecxz
inc
push
xchg
or
dec
fsts
cmp
pop
mov
cmpsb
sub
sub
inc
rorl
jmp
fs
ja
inc
scas
fs
push
adc
adc
xchg
mov
mov
dec
push
and
int
cmc
imul
cli
out
xorb
sti
iret
push
ja
adcl
aad
and
pop
ja
sbb
and
xor
ljmp
dec
add
shrb
test
gs
jns
and
mov
sub
sub
ljmp
out
and
int
mov
mov
rorl
add
dec
jp
ja
push
iret
and
fistl
inc
adc
xchg
or
or
mov
inc
inc
sbb
mov
sbb
shrb
jnp
or
jno
fldl
in
jb
xor
movsb
cmp
cmp
stos
aam
cmp
mov
lret
push
cmp
add
ret
iret
adc
adc
leave
fstpt
sub
dec
push
int
and
addr16
pop
xor
mov
lret
or
xchg
or
outsb
andl
push
adc
mov
push
add
adc
es
iret
scas
repz
scas
jnp
pop
dec
inc
sub
fisubs
ljmp
mov
cmp
stc
out
out
repnz
into
sbb
mov
fsubr
xorl
adc
lods
mov
imul
mov
add
dec
test
je
lds
bound
inc
insb
mov
movsl
lds
es
out
rcl
imul
or
mov
push
aas
nop
or
sbb
or
pop
and
pop
aad
mov
test
aas
bound
daa
and
dec
and
pop
push
push
xor
xchg
cltd
mov
popf
inc
mov
mov
push
cltd
jne
popf
out
mov
adc
xor
mov
mov
xlat
fistpl
xchg
mov
lds
jns
mov
xor
fwait
mov
ficoml
loopne
scas
jl
mov
add
and
pop
push
pop
out
fpatan
mov
mov
cli
pop
sbb
in
hlt
mov
nop
in
mov
ja
cmp
ficoml
out
xchg
dec
mov
aam
jp
pop
xchg
out
fisttpl
jb
mov
mov
sarb
mov
or
push
dec
notb
mov
out
and
ljmp
pop
inc
jmp
bound
and
std
fucom
jl
pop
jb
insb
cmp
adc
xor
jl
mov
ss
lods
lea
xchg
push
dec
mov
cmc
jbe
test
sbb
jmp
xor
add
cmc
dec
jbe
cmp
cmc
cmpsl
subl
clc
mov
mov
loop
mov
cld
dec
mov
push
xchg
or
push
mov
mov
daa
shr
enter
jmp
out
dec
jmp
mov
push
xor
xor
insl
iret
push
stos
lret
aas
jb
in
xchg
out
int3
lret
lods
clc
cld
jmp
xchg
xchg
das
cwtl
stc
push
adc
cmc
das
dec
pop
jne
in
mov
js
mov
mov
lds
fiaddl
sbb
stos
xor
pusha
jle
mov
xchg
movsb
enter
cmp
jl
stc
int
cmp
je
xor
fs
mov
jo
and
xchg
ljmp
ljmp
ja
pop
in
push
sbb
addr16
mov
loop
scas
xor
in
sahf
cmp
sub
rolb
imul
cli
stc
imul
mov
cli
xrelease
out
inc
je
arpl
xor
or
lcall
add
popa
add
mov
jb
sub
sar
push
mov
push
inc
sub
inc
mov
pop
cmpsb
repnz
xchg
dec
xchg
jb
sbb
push
xor
xor
pop
xchg
outsb
inc
push
jge
aaa
mov
int3
test
sub
jo
mov
or
jb
fadds
out
fldcw
xor
mov
inc
out
imull
xchg
orl
pop
test
jge
mov
xor
xchg
js
out
test
in
mov
in
cmp
pop
rolb
pop
mov
push
imul
jo
orb
test
dec
fxch
rcl
jecxz
or
int
mov
cmp
pop
and
mov
inc
leave
test
sti
cmp
loopne
lcall
cmp
cmp
jae
inc
sahf
idivb
cwtl
cmc
sbb
mov
mov
gs
les
xorl
mov
add
jbe
negb
sub
cwtl
jmp
xor
xor
in
sub
dec
jno
push
ret
mov
add
sbb
mov
cmpsb
adc
fcoml
sti
xor
test
icebp
cs
push
movsl
add
arpl
mov
dec
jno
jns
cwtl
or
movsb
push
xor
or
jno
mov
inc
test
jl
loop
xchg
bound
test
repz
jae
outsb
rolb
xchg
add
pop
dec
hlt
mov
in
and
addr16
mov
inc
cmpsl
and
push
dec
popa
fmull
xchg
test
jbe
inc
sub
add
mov
bound
aaa
sub
mov
sbb
decl
out
pop
test
cltd
inc
mov
dec
mov
ret
popf
adc
xchg
lods
xorb
sbb
lds
in
daa
cli
testb
push
in
cmpsl
int3
xor
aas
jne
test
mov
mov
std
dec
fbstp
push
cwtl
decl
jg
or
dec
rcr
adc
mov
enter
jp
imul
jle
xchg
adc
sbb
insl
cmp
mov
andl
shl
and
cli
fstpt
mov
fimull
xor
pop
loope
push
dec
lcall
add
add
lcall
jne
lods
in
stc
jns
mov
lock
and
and
dec
outsl
test
sub
mov
xlat
cld
imul
pop
pushf
pushf
xor
mov
xchg
jl
rcr
pop
add
mov
pop
out
mov
jo
inc
xor
or
dec
mov
cld
jle
out
cs
cmp
lods
clc
push
or
cwtl
clc
daa
scas
push
mov
nop
mov
mov
jno
dec
adc
jo
out
mov
push
mov
arpl
adc
stc
jno
mov
sahf
dec
push
pop
adc
outsl
mov
movsl
or
jns
adc
fsubrs
xor
aad
xchg
lcall
fbld
aas
jl
inc
ret
inc
je
rorb
ss
pop
adc
jle
xchg
movsl
mov
pop
scas
dec
pop
insb
cmc
fucom
and
mov
ret
and
nop
mov
pusha
aad
mov
int3
jbe
data16
jecxz
cli
inc
jae
dec
daa
xchg
daa
pop
or
inc
adc
es
mov
mov
push
out
push
xchg
add
or
xor
fists
sbb
cs
and
xchg
sub
pop
fs
push
mov
sub
pushf
pop
xor
push
ds
fs
rcrl
scas
cmpsl
adc
push
sbb
cltd
cs
add
rcl
mov
scas
push
fstpl
dec
fdivr
fisubl
out
jo
push
out
push
nop
das
mov
ss
dec
inc
movl
pop
sub
xchg
xor
sbb
std
in
fld
incl
adc
fwait
jno
add
jbe
je
jge
adcl
arpl
fnclex
out
gs
pop
fadds
incb
or
test
lahf
test
xchg
sbb
out
pop
and
mov
inc
jbe
push
je
sbb
rolb
mov
ret
jmp
or
push
testl
sbb
in
xorl
pop
and
mov
jp,pt
mov
sub
or
ja
outsl
inc
lret
stc
pop
pusha
push
stos
and
and
mov
bound
in
out
push
daa
ffreep
rcrl
scas
std
mov
mov
dec
mov
mov
push
xchg
xchg
fldt
xlat
sbb
icebp
jns
push
inc
adc
mov
setge
lea
mov
leave
popf
jg
leave
mov
mov
clc
cmp
fwait
push
fisttps
daa
sarl
pop
pushf
adc
sbb
test
sbb
cmp
adc
sub
test
xlat
and
xchg
in
mov
mov
pop
call
xlat
mov
adc
rcl
in
sub
push
call
or
pushf
jp
scas
mov
inc
push
xchg
hlt
cmp
lret
shll
pop
mov
popf
and
add
xor
aaa
sbb
movsb
fidivrs
or
xlat
or
mov
xor
lahf
push
inc
insb
cmp
popa
xlat
push
lahf
sbb
lock
add
xchg
adc
gs
ljmp
cmpl
out
call
rorl
and
insb
mov
xchg
pop
adc
unpckhps
and
mov
call
and
mov
pop
out
sbb
dec
in
sbb
xchg
xor
pop
mul
in
and
push
jecxz
mov
in
xchg
insl
push
xor
add
xlat
stc
das
mov
push
fsubrs
or
cmp
sub
dec
out
popl
sbb
roll
lahf
sub
inc
decl
aam
push
mov
fbstp
cld
icebp
movsb
cmp
mov
mov
sbb
mov
mov
mov
adcl
xor
loop
mov
arpl
add
lahf
out
or
push
cmc
pusha
dec
dec
mov
lods
out
jns
out
clc
filds
jae
adc
js
icebp
mov
mov
mov
mov
les
cmp
adc
sub
pop
and
xchg
sub
jno
rolb
dec
xchg
arpl
adc
and
fcomps
jne
into
jg
or
stos
stos
jle
test
dec
jmp
jp
add
inc
jp
cli
push
sbb
cmp
pop
std
xlat
adc
add
push
lret
pop
adc
and
dec
push
pop
inc
sahf
xchg
bound
pop
push
xchg
jns
xchg
push
and
mov
sbb
mov
aas
adc
mov
stc
mov
adc
mov
sub
sahf
mov
fwait
not
pop
data16
pop
mov
push
add
jmp
sbbb
cmpsb
data16
int3
mov
test
or
mov
add
mov
notl
lods
add
int3
xchg
sub
in
inc
movsb
in
adc
push
test
call
in
adc
or
enter
popa
test
shl
or
and
outsb
mov
mov
xchg
sub
inc
dec
mov
fnstsw
cwtl
dec
enter
and
clc
pop
cmp
and
daa
sbb
je
jl
sub
lcall
push
leave
rol
jle
xchg
cmp
fstps
sub
dec
les
outsl
push
jns
sarl
push
inc
or
add
insb
sub
xor
test
mov
ffreep
fisubl
testb
cmp
fs
arpl
ja
outsl
shrl
rcrl
dec
mov
add
insb
in
or
loop
mov
in
xchg
sbb
fs
push
loope
mov
jle
or
dec
aaa
xor
push
inc
cmpsl
test
ss
imul
imul
inc
dec
sbb
daa
pop
or
xchg
adc
adc
sbb
imul
push
sub
lods
js
mov
xchg
adc
mov
or
xchg
xor
xchg
ss
cmp
dec
inc
shlb
mov
lret
mov
and
add
lock
fimuls
mov
pop
cld
mov
cmp
fdivl
ficomps
rcll
ja
adc
lret
out
roll
daa
repnz
xor
scas
add
out
cltd
arpl
cmpsb
push
mov
lahf
ja
sub
jl
je
pusha
and
jbe
iret
xchg
cmpsl
xlat
outsb
in
call
iret
loope
daa
push
in
je
sar
fidivl
mov
push
je
pusha
data16
insb
inc
dec
ss
mov
push
sub
bound
aaa
mov
in
mov
sub
fwait
push
mov
sahf
daa
xlat
xchg
aam
mov
loopne
push
cmp
jae
cltd
xchg
incb
popf
pop
cmp
jmp
mov
movsl
cmpsb
mov
popa
sub
fsts
lahf
mov
lret
into
dec
fcoml
dec
cltd
jge
xlat
mov
std
dec
and
and
lcall
fcompl
sbb
add
or
sbb
inc
repz
cmp
push
rcll
pop
cmc
xchg
mov
es
popf
mov
or
outsl
test
sub
xchg
movsl
pop
xor
jbe
fnstenv
adc
imul
inc
lea
data16
push
lods
pop
push
ret
dec
test
adc
rolb
mov
mov
jno
pop
pop
inc
lret
jecxz
adc
inc
and
pop
dec
jo
adc
add
dec
mov
stc
cwtl
push
pop
lret
adc
inc
in
cltd
inc
lret
jl
test
insl
fidivrs
pop
stc
adc
aad
ds
jo
fisubrs
push
xor
out
les
push
push
ror
mov
xor
mov
cmpsb
xor
scas
xchg
outsl
xchg
xor
imul
gs
fdivr
insb
test
mov
data16
or
mov
mov
push
pop
cltd
or
fdivs
jle
mov
in
adc
outsl
and
pop
in
sub
adc
add
ficompl
lods
pop
pop
aas
dec
pop
xchg
lahf
notb
mov
outsb
aaa
inc
pop
popf
lcall
mov
add
inc
in
or
or
push
lock
mov
inc
sbbl
sbb
es
xor
push
sub
into
jae
xchg
xor
jl
dec
inc
push
arpl
arpl
or
and
fcmovu
pop
out
lcall
outsl
lds
add
insl
mov
daa
notl
shr
cltd
fdiv
and
jmp
hlt
cmp
push
mov
inc
fidivrl
out
inc
fisubs
outsb
fdivr
sbb
mov
aam
fadds
nop
adc
and
into
inc
mov
popa
mov
in
cmc
lea
mov
test
repz
inc
xchg
hlt
pop
adc
movl
test
movsl
dec
lea
test
pop
dec
push
andb
shr
int
sub
loope
xchg
sbb
sub
arpl
sub
xor
call
sbb
mov
mov
pop
xorb
push
sbb
jns
mov
sbb
xchg
cs
pop
push
push
mov
cmp
cmp
in
call
iret
push
pop
xchg
rcrl
fmuls
mov
in
ss
xchg
and
sbb
sahf
push
mov
xchg
imul
sub
fstpl
rcrl
shll
jns
ficoml
cld
sub
in
sarl
jb
pop
shrl
pushf
jae
aam
popa
xchg
imull
call
mov
jp
cmp
in
xlat
js
push
adc
mov
inc
shrb
sbb
int
pop
cmc
push
cmpsl
inc
imul
dec
jnp,pt
gs
cmpsb
xchg
sub
aas
jl
mov
ficoms
adcl
inc
mov
cmc
subb
push
inc
shlb
add
cmp
mov
orb
shll
xchg
scas
addl
shlb
out
push
aad
mov
pop
pop
int3
mov
enter
add
int3
inc
cmp
test
push
cld
filds
xchg
jmp
stc
imul
add
inc
and
jno
pop
sub
ror
and
pop
xchg
repz
xor
adc
lret
shrl
stos
adc
add
inc
sub
iret
aas
loopne
xchg
jae
push
nop
jns
mov
and
inc
mov
in
bnd
jp
lahf
cmp
and
jbe
add
dec
inc
xor
repnz
inc
sub
xor
cmp
repz
in
cltd
add
enter
cmp
shl
out
in
fnstsw
mov
sahf
cmp
pop
fadd
lcall
rcl
sarb
sti
dec
pushf
decl
aad
pop
sbb
push
cmp
lds
lcall
jbe
lea
fs
in
aas
aad
mov
mov
jbe
push
jbe
lret
mov
outsb
movsb
sbb
ljmp
repnz
daa
push
repnz
xlat
ja
xchg
rclb
dec
dec
dec
add
xchg
dec
imul
daa
inc
fistpll
mov
cmp
sti
xor
xor
cs
jo
pop
int
xchg
arpl
sub
jnp
les
iret
movsb
add
and
jg
test
jle
lods
ret
xchg
xchg
dec
mov
inc
leave
push
adc
shll
ds
xorl
pop
adc
lds
imul
idivl
subl
push
out
int
stc
push
iret
cmp
cmp
sbb
mov
loop
mov
sbb
fidivrs
stos
adc
mov
daa
lea
sbb
cmpsb
iret
dec
push
lods
pop
sub
cwtl
xchg
push
clc
repnz
idivb
mov
pusha
outsl
cmp
mov
and
mov
xor
std
stos
lods
add
xchg
cs
inc
xchg
cli
lret
add
and
mov
mov
divl
jns
mov
lods
push
or
insb
cmp
jecxz
cld
pop
movsb
mov
and
push
repz
xchg
push
scas
jge
push
push
ja
inc
popa
cmp
add
xchg
movsl
lea
pusha
sub
lods
inc
testb
scas
sti
inc
push
movsl
cmp
adc
dec
sbb
fsubrs
jo
mov
inc
cmp
ds
rcll
dec
pop
fcomps
dec
test
mov
ret
xlat
in
aas
and
jno,pn
or
sub
add
aaa
leave
icebp
mov
jnp
mov
lock
and
sub
out
inc
mov
xor
mov
lret
stos
xor
in
add
pop
clc
insb
dec
adc
shll
clc
inc
mov
inc
cmp
mov
add
xchg
mov
popa
std
and
lds
adc
cmp
inc
push
shrl
cmpb
repz
sub
movsb
jmp
sub
cmp
out
lret
sbb
popf
test
in
call
dec
adc
lds
dec
xchg
je
xor
pusha
sbb
mov
insb
sbb
push
cltd
cli
mov
rorl
sbb
iret
sub
or
lret
js
outsl
xchg
je
sbb
bound
ror
xchg
int
jae
add
xchg
adc
jecxz
jmp
lock
push
mov
rcr
roll
jno
and
adc
es
jmp
out
cmp
pop
adc
into
pop
stos
pop
ljmp
mov
jbe
ret
imul
adcb
or
movsl
adc
mov
out
mov
sbb
and
daa
and
inc
jge
std
or
enter
outsl
mov
push
inc
and
adc
mov
insb
cmp
add
lds
out
xchg
add
sub
jmp
xor
cwtl
xchg
xchg
fisttpll
push
insl
mov
out
xchg
rorl
mov
cmp
dec
icebp
push
mov
insb
mov
pop
test
mov
je
xor
stc
not
pop
stos
mov
push
cmpsb
fsincos
test
mov
dec
xor
in
ljmp
pusha
pusha
cmpsb
pop
cmpsb
rcl
sub
mov
pop
sub
ds
rorb
sub
cmp
xchg
das
mov
test
mov
call
xchg
cmpsl
mov
in
push
out
dec
fcmovnbe
mov
push
or
jmp
addl
addr16
pop
mov
mov
inc
ret
mov
sahf
inc
lock
cmp
int3
mov
mov
mov
ss
or
xchg
test
mov
mov
jecxz
sub
in
push
bound
int
inc
aas
mov
int
dec
in
jg
sbb
insb
pushf
pop
je
test
jle
cmp
in
and
sbb
call
clc
and
pusha
xchg
cmp
mov
mov
and
push
js
stc
pop
aad
pusha
call
push
loopne,pn
outsl
nop
jbe
pop
ljmp
js
xor
and
mov
inc
add
xor
jp
loope
xchg
cld
xchg
sbb
push
sub
adcl
add
push
mov
or
mov
out
test
fstpt
fistl
dec
pushf
mov
lea
daa
add
xor
jg
mov
sub
mov
jae
fimull
push
xchg
shl
pop
cmp
call
int3
bound
sahf
in
push
inc
add
jmp
stos
sbb
mov
and
jp
or
adc
mov
movsb
gs
imul
xchg
cmp
sbb
xor
aad
jg
mov
fs
mov
rolb
adc
inc
jnp
int
dec
jnp
aad
pop
mov
leave
gs
imul
aaa
jmp
aas
fnstenv
mov
or
mov
popa
inc
jae
sub
pushf
pop
sahf
stos
lds
mov
cmc
lret
daa
jb
shlb
mov
sbb
sub
sbb
test
inc
dec
jb
mov
movsl
gs
aad
gs
xor
mov
popa
pop
ret
add
dec
mov
xor
scas
popa
ds
lods
insl
outsb
sub
pop
repz
lcall
pop
cs
pushf
test
rclb
jbe
mov
jno
inc
mov
movsl
aaa
into
in
rcrb
lcall
pop
sahf
push
ja
jne
fildll
and
sub
sbb
sbb
pop
push
jns
leave
fmuls
xor
dec
ja
sub
nop
imul
xor
scas
ficoms
adcl
adc
mov
cmc
or
xor
cmp
mov
adc
cwtl
push
sub
sbb
push
xchg
lods
out
in
pusha
mov
mov
cmpsl
jne
sub
adc
jle
shrb
push
or
repz
jmp
xor
sbb
insl
add
repz
sbb
push
cs
or
scas
fucomip
mov
es
insl
cmp
fsubrp
das
jp
pop
sahf
xor
dec
call
int3
leave
adc
cmp
std
ficoml
adc
out
jl
gs
mov
dec
add
pop
loope
jmp
mov
into
cli
sbb
adc
mov
leave
dec
and
fsubrs
adc
sbb
jae
in
or
xor
push
xchg
mov
js
cli
jg
mov
push
das
adc
out
jge
mov
mov
dec
pop
inc
cmp
or
cwtl
out
shlb
add
aas
or
sub
sbb
xchg
imul
mov
add
mov
aaa
andl
cs
das
fs
jae
sub
ret
lods
sti
dec
out
icebp
nop
negb
mov
pop
enter
fdivrl
mov
push
xchg
cmpsl
jl
lcall
aaa
xchg
mov
scas
and
or
jns
insl
pop
and
mov
dec
adc
cmpsl
insl
adc
shl
pop
pop
or
sbb
mov
lea
push
mov
mov
pop
or
jge
mov
mov
loope
add
xchg
mov
loope
aam
fwait
add
in
aad
fcmovnb
out
mov
movsl
xchg
inc
pop
in
xchg
push
aaa
mov
ret
pop
cmp
cmp
aas
mov
cs
movsl
sub
inc
cmc
ja
adc
mov
push
pop
cmp
aam
imul
dec
aam
in
lret
jnp
lcall
dec
push
mov
jnp
mov
in
loop
jmp
push
mov
pop
xlat
push
xor
xchg
sub
mov
mov
in
mov
cmp
hlt
into
sub
popa
icebp
push
je
jb
jbe
aam
lds
jmp
dec
popa
subb
fwait
cmc
add
inc
scas
sbb
xor
cwtl
aaa
pop
sub
push
out
imul
imull
and
mov
roll
jmp
xchg
sub
das
insb
xchg
pop
stos
xor
rolb
enter
jp
out
stc
addr16
popf
jno
lret
mov
mov
and
cltd
sbb
stos
jbe
sbb
jno
shrl
adcl
int3
or
add
add
inc
fwait
sbb
data16
mov
jno
sub
sub
jmp
sbb
shll
loop
dec
insb
data16
es
in
or
cmp
sahf
mov
adc
or
cmp
imul
mov
xchg
sub
mov
jle
sarl
lret
mov
xchg
sub
dec
mov
out
sahf
dec
adc
jl
js
iret
jmp
mov
inc
adc
mov
fdivrl
inc
or
inc
pop
sub
fldcw
fucomi
pop
loope
jmp
mov
push
mov
cmpb
test
or
cmpsl
xchg
lret
xchg
nop
fmul
iret
push
test
movsb
and
xor
adc
xchg
out
sbb
adc
mov
call
hlt
adc
inc
mov
ret
cmp
repnz
sub
in
pop
inc
je
mov
mov
push
pop
outsb
fistpll
xchg
mov
or
hlt
stos
cwtl
and
out
jp
pusha
test
jnp
cmpsb
mov
notl
ja
movsb
dec
mov
jl
outsl
pop
jae
xor
outsl
adc
cli
pop
xchg
in
adc
dec
pop
mov
jo
out
add
pop
dec
popa
pop
aam
sbb
or
cld
icebp
mov
popf
mov
int
xor
lea
arpl
stos
cli
fsubs
scas
push
mov
data16
out
daa
and
cmp
adc
dec
pop
into
and
enter
sbb
push
in
iret
decl
sub
loopne
mov
in
js
popf
push
mov
mov
js
das
cmp
pop
cld
lock
jmp
stc
bound
nop
mov
fsub
dec
sub
imul
out
cwtl
fbstp
movsb
sub
jne
pop
mov
add
xchg
fcoml
cmp
mov
pop
and
out
mov
sbb
scas
xchg
xor
mov
les
jae
scas
popa
ret
rorb
mov
dec
rcr
popf
fsub
movsl
mov
cwtl
leave
inc
ret
clc
pop
aad
cmc
pop
data16
jmp
add
ret
stos
pop
aaa
ja
outsl
mov
adcb
imul
or
and
rdmsr
roll
dec
aam
add
shr
insl
int
stos
bound
addr16
and
mov
inc
adc
add
xor
jns
icebp
daa
pop
or
in
cmp
sub
jle
ja
xorb
cld
xor
mov
loop
sbb
add
sarb
inc
sbbb
mov
adc
inc
cs
inc
inc
cld
inc
int3
cli
shlb
adc
out
insb
fnsave
fwait
dec
or
pop
ror
ljmp
inc
mov
cmp
mov
pop
mov
push
push
sbb
mov
and
test
inc
xchg
adc
push
notl
movsl
int3
and
mov
mov
inc
imull
leave
and
mov
cli
arpl
and
cmp
mov
adc
mov
fisubs
xor
xor
pop
gs
mov
rcll
inc
aad
mov
xchg
jge
in
sub
loop
shlb
dec
pop
das
mov
adc
lret
enter
adc
rol
sub
mov
xchg
xor
cmp
or
push
push
pop
inc
fisubrs
xchg
or
dec
rcrb
and
xor
sahf
jle
pop
cmp
dec
sarl
movsl
dec
dec
mov
cmpsb
outsl
mov
hlt
mov
xor
outsb
push
mov
push
in
add
inc
push
xchg
adc
int3
insl
inc
cmp
fs
sahf
out
inc
mov
popa
dec
adc
jmp
daa
es
add
dec
and
test
arpl
hlt
push
int
iret
sbb
inc
and
xchg
in
mov
or
ss
out
mov
sbb
sarl
fbstp
sbb
mov
insl
lock
mov
mov
and
sti
sbb
adc
mov
sahf
fs
xor
addr16
imul
sti
and
lods
jmp
cmp
inc
scas
jbe
clc
pop
mov
xchg
push
push
xchg
lret
call
orl
enter
and
test
stos
sub
mov
xor
mov
stos
sbb
push
pop
mov
sahf
cltd
and
dec
pop
aas
xor
inc
cmpsl
fs
lret
addr16
push
outsb
ds
pop
sub
xchg
adc
adc
mov
mov
dec
xorb
das
add
xchg
pop
mov
inc
push
sahf
sub
push
push
sbb
adc
shrb
jl
xchg
mov
test
mov
int
clc
out
call
push
dec
push
adc
outsl
inc
inc
ja
pop
lds
cmp
xchg
pop
push
jge
mov
or
adc
mov
sbb
sahf
pop
xchg
fiadds
jo
into
int
jge
inc
outsl
xchg
repnz
jg
call
arpl
mov
stos
int3
push
and
decb
in
pop
push
fsubrl
jge
or
scas
or
jbe
and
dec
daa
cld
imul
inc
dec
mov
xor
movsb
cmp
push
push
cmc
add
stos
mov
ret
jle
ja
stos
and
xchg
les
pop
mov
xor
imul
pop
sarb
pushf
pop
cmp
mov
pusha
lds
shlb
int3
out
mov
pushf
lods
test
shrl
or
lret
pushf
enter
inc
inc
hlt
jecxz
in
loop
cmp
lret
rcll
add
decb
int
inc
pop
insl
xchg
addr16
cmc
fscale
lods
push
bound
in
fs
jg
mov
mov
mov
enter
lods
ffreep
std
lcall
out
imul
jp
rorl
test
lods
sub
mov
das
fbstp
inc
push
gs
sub
cmp
sub
sbb
cmp
or
ret
xchg
xchg
sti
xchg
pop
fidivs
xor
orl
and
xorb
sti
movsl
lret
addb
outsl
out
test
pop
daa
sbb
movsb
xchg
mov
gs
fadd
dec
loopne
adc
loop
ret
xchg
out
in
sub
jmp
xchg
sbbb
xlat
fiadds
adc
bnd
daa
cwtl
mov
adc
cmc
jne
cld
aam
test
addb
dec
sti
push
cmp
pop
dec
pop
push
jbe
fisubs
je
stos
out
add
inc
out
xor
scas
std
mov
stos
stos
mov
mov
cmp
jle
jge
rcl
inc
imul
shll
cmp
in
ret
cmc
sti
test
fisubl
dec
inc
fbld
imul
mov
adc
jle
imul
jno
mull
divb
in
xchg
push
ds
js
jo
lods
lds
adc
lret
pop
movsb
gs
dec
lahf
int3
sarl
and
jo
jne
in
mov
aad
adcl
daa
nop
jnp
test
pop
xor
add
repz
push
push
and
fisttpl
pop
xchg
mov
sub
hlt
xor
push
ja
adc
scas
push
pop
test
add
mov
leave
cs
xlat
xor
ror
je
inc
jecxz
jns
add
scas
push
cmp
lcall
daa
and
addr16
pop
out
and
mov
push
inc
add
fdivr
ja
int3
push
pop
mov
mov
repz
lahf
sub
ret
mov
cmp
dec
adc
xor
cmp
stos
aas
dec
push
lret
mov
rolb
mov
int3
cmp
pop
subb
daa
lcall
pop
push
test
jp
sbbl
pop
sbb
sub
ficoml
push
and
in
int3
cs
scas
insl
insb
xchg
repz
or
lds
lret
mov
cltd
xor
test
mov
fmuls
mov
cmp
xor
testl
fnsave
or
pop
shrb
adc
fbstp
into
dec
add
int
or
xor
or
daa
addb
aas
out
add
xorl
pop
jns
mov
imul
ds
sub
jmp
xchg
sbb
popf
inc
lea
mov
fiadds
cmp
push
jns
mov
mov
loopne
push
mov
fdivl
push
jge
jo
sahf
cmp
pushf
jle
mov
movl
jle
out
in
sbb
jl
xchg
or
lock
mov
cmp
cs
add
jo
xchg
or
aaa
ss
movsb
jmp
fcmovnb
loopne
movsb
rorb
insb
lcall
outsl
test
inc
dec
loope
push
xchg
std
and
mov
inc
mov
pop
and
enter
pop
add
push
xor
xor
xor
adc
inc
jbe
add
addr16
dec
subb
sbbb
imul
sub
in
jae
stc
insl
les
cmp
pop
sub
adc
dec
fwait
or
dec
xchg
xchg
adc
daa
and
andb
xor
sbb
mov
int3
jo
je
inc
push
fsts
enter
cwtl
movsb
xor
push
inc
xor
jne
mov
bound
sub
xor
or
pop
dec
xchg
scas
movsl
pop
and
insb
arpl
xor
mov
and
mov
andl
leave
out
dec
ds
dec
aad
push
jmp
jle
mov
jbe
xchg
ss
pushf
enter
jns
or
xorb
sub
notb
pop
pop
cmp
daa
jecxz
inc
clc
pushf
call
fmulp
rorl
nop
std
cwtl
fbstp
imul
mov
daa
pusha
js
mov
nop
mov
xor
stos
mov
mov
inc
cli
add
cmp
dec
dec
lods
loop
pminsw
into
icebp
jnp
mov
mov
inc
adc
std
xor
cmpsl
out
popf
cwtl
pop
cs
sbbb
negl
xor
xchg
pop
pop
bswap
dec
pop
test
mov
aas
mov
inc
out
test
negb
cmovns
pusha
or
movsb
into
dec
sbb
dec
cmpsl
es
aad
test
adc
push
mov
pop
ds
in
sbbb
test
mov
imul
popa
inc
xorb
xchg
jecxz
fcomps
jno
sahf
push
fimull
cmp
and
jecxz
fldcw
mov
daa
sahf
jo
fisttpl
cld
ja
sahf
repnz
es
dec
pop
pop
cs
cmp
imul
test
fistl
rcr
inc
test
pop
leave
mov
jno
frstor
sbb
inc
or
dec
jg
jno
leave
out
sahf
mov
lea
push
scas
ja
xchg
xorl
test
mov
shll
std
loope
push
lcall
inc
rorb
push
popa
test
and
mov
mov
mov
cmp
test
inc
out
pop
adc
aas
dec
lret
iret
cmp
cmpb
adc
mov
push
pop
jbe
je
aas
mov
fstpt
mov
rorl
mov
or
lea
insl
sub
or
or
ret
jmp
movsl
loopne
inc
call
leave
rcrl
les
push
xchg
xchg
push
add
shrl
insb
nop
lahf
out
shl
push
push
out
cld
dec
les
jge
lea
shl
mov
mov
in
in
pop
adc
ss
dec
xor
mov
scas
imul
xor
jbe
pop
lcall
sti
mov
test
xchg
es
xchg
dec
cmp
xor
xor
dec
xor
inc
or
mov
jecxz
dec
ss
adc
in
mov
aaa
or
pop
inc
test
dec
paddsw
cmp
das
int
aad
into
and
sbb
pop
jns
shlb
sbb
ja
ss
nop
cmp
and
mov
in
or
call
sbb
aas
sbb
mov
pop
out
add
cmp
shll
jo
push
cmpsl
gs
stc
inc
lds
in
ja
xlat
stos
dec
adc
jg
dec
mov
dec
jecxz
lahf
push
popf
adc
sbb
lods
add
sub
sbb
sbb
push
adc
fisubl
lret
loopne
or
fcompl
adc
jo
pop
insb
lahf
mov
xor
clc
hlt
add
fisttpl
adc
and
mov
jns,pt
xor
pop
loop
mov
xlat
sbb
and
jne
icebp
jmp
pop
lods
xchg
fwait
mov
xchg
imul
and
dec
test
stc
jb
popf
adc
jb
scas
xchg
jo
lods
das
std
add
jmp
daa
sub
xor
sbb
inc
fldcw
pop
je
std
xor
cmp
ljmp
rclb
imul
test
jl
jo
rcrl
enter
add
xor
mov
add
lock
lcall
ja
insl
ja
shr
push
jmp
lods
or
test
jb
es
adc
mov
or
mov
sti
add
push
mov
push
pop
clc
sub
insb
lret
jge
jmp
fisubl
sti
sbb
out
inc
xchg
add
imul
jb
das
sti
xor
fs
mov
leave
jne
repnz
jnp
or
sub
inc
ja
stc
xor
icebp
ror
js
clc
jecxz
addr16
xor
push
sti
in
add
movb
xchg
subb
jge
mov
sub
dec
mov
fwait
push
sbb
mov
push
ret
nop
mov
mov
repz
divl
or
and
sub
roll
fldenv
jnp
add
jge
aad
out
imul
sbb
outsl
push
repz
testl
push
mov
push
loopne
inc
aam
mov
sub
sub
imul
push
lock
dec
into
stos
lea
push
data16
or
cmp
inc
push
sub
and
xor
loopne
lcall
test
mov
flds
jne
rorb
rolb
jne
jo
add
call
adc
mov
test
fldenv
es
adc
mov
xor
cmp
les
in
pop
loopne
lods
leave
jp
enter
ja
loop
mov
inc
pop
xor
push
pop
in
lahf
pop
inc
jecxz
jge
pushf
mov
add
jnp
cmp
jae
mov
ljmp
xor
lods
mov
mov
sub
sbb
cmp
inc
fbld
or
cmpsl
push
ret
pusha
mov
push
lea
jnp
fists
jmp
dec
inc
pusha
gs
push
addl
sbb
fs
out
gs
movsb
mov
clc
shlb
pop
je
andl
xchg
int
daa
xchg
stc
adc
les
cmp
mov
movsl
mov
in
or
pop
out
pushf
mov
fsubs
dec
sti
adc
push
sbb
inc
mov
push
dec
popf
mov
stc
adc
mov
lcall
lret
mov
jg
stos
and
ljmp
std
or
pop
xor
sbb
jmp
clc
je,pn
and
push
cltd
ljmp
add
or
mov
mov
xor
sub
xchg
into
mov
xchg
fsts
mov
shrb
adc
pop
mov
arpl
jge
or
mov
stos
loopne
nop
data16
lcall
push
xchg
mov
fsts
gs
rclb
adc
and
icebp
push
test
push
add
add
subb
lock
adc
inc
mov
pop
pop
mov
sbb
outsb
xor
and
fmuls
inc
dec
and
jne
adc
jbe
bound
jo
adc
lcall
cltd
out
adc
imul
jmp
idivl
push
xor
aas
outsb
jle
test
xchg
xchg
fwait
int
cs
sbb
shlb
adc
lds
mov
shl
cmpsl
xchg
inc
jns
adc
jge
fs
arpl
mov
xchg
jne
mov
cmp
sbb
into
push
fsubs
repnz
ret
jno
jno
loop
jge
mov
pusha
add
lds
pop
daa
mov
lds
jmp
int
adc
dec
xchg
fisttpll
rol
cmp
mov
and
andb
push
add
in
sbb
lods
fsubs
stos
add
mov
fidivrs
push
and
jge
push
popf
mov
sub
das
shll
xchg
ja
scas
or
clc
aad
sbb
scas
js
mov
mov
adc
ret
outsb
jno
mov
sbb
aad
pusha
shrl
mov
mov
dec
sub
add
dec
jmp
clc
stos
xchg
aam
and
scas
mov
dec
ljmp
lahf
cmp
pop
push
jbe
pop
dec
dec
xchg
sahf
mov
xor
in
lods
xchg
mov
pop
je
mov
outsb
enter
adc
movsl
dec
jge
jle
jne
mov
in
fdivs
pop
lcall
jp
dec
shlb
xor
shll
and
mov
xor
xor
mov
sbb
push
push
paddsw
lea
xchg
test
pushf
sub
push
inc
test
aaa
aam
mov
in
sub
cld
adc
xor
add
add
and
pop
mov
ja
pop
push
out
nop
lret
add
shlb
or
or
or
les
and
mov
sbb
pop
mov
insl
insl
pusha
pusha
pop
cmp
sub
add
pop
lret
mov
push
add
cmp
aam
inc
or
loop
aad
adc
test
add
out
scas
mov
cmp
ljmp
mov
cltd
lret
dec
fwait
pop
adc
outsb
fs
ret
sub
mov
xchg
adc
nop
decb
ja
test
cmp
cmp
aam
xchg
loop
mov
aaa
das
fcmove
test
sub
outsb
add
dec
cwtl
adc
dec
xchg
sub
lds
popl
or
push
out
pop
sbb
inc
xor
lahf
or
xchg
xchg
out
dec
test
lret
mov
lret
pusha
mov
jb
orl
subb
cmpsl
fnstsw
and
jns
jmp
ss
repz
xor
pop
lcall
mov
sub
in
aad
add
int
adc
pop
sub
lds
jae
imulb
pop
out
sbb
repz
icebp
popa
jns
add
jb
pop
jl
xor
call
dec
ss
fsubs
mov
or
ss
scas
popa
into
sarb
das
loopne
adc
mov
rorl
add
js
imul
pop
js
scas
pop
cmc
or
mov
imul
mov
add
test
push
xor
insl
xchg
scas
xor
xor
push
negb
or
or
xor
mov
lods
adc
jns
dec
fs
or
mov
sub
xchg
cmpsb
or
xchg
and
sbb
ljmp
pop
je
add
sbb
xchg
or
jb
cmp
adc
push
xor
jne
fsubp
nop
pop
test
leave
xor
dec
aam
or
jbe
lock
push
cmc
loop
outsb
xor
cmpsl
aas
pop
xlat
sbbb
repz
in
mov
std
vhaddps
sbb
pop
xchg
sub
jmp
inc
push
out
aad
icebp
pop
lcall
xchg
jno
lds
lcall
dec
and
inc
mov
fsubrs
lret
out
std
out
out
sbb
scas
cmpsb
push
pop
ljmp
xchg
jns
es
jecxz
cmp
mov
cmp
add
push
xor
lods
push
movsb
jl
cmp
lods
lret
jo
cli
sbb
lahf
lock
cltd
push
fsub
push
xchg
loope
add
cmpsl
imul
fisttpll
or
ds
stos
jg
xor
adc
bnd
mov
xor
adc
inc
mov
sbb
pop
xor
push
divb
pop
adc
nop
xor
dec
lock
xchg
fxtract
into
push
daa
scas
jo
mov
idivl
and
cmp
sarl
icebp
andb
outsb
pop
push
imul
loope
xor
fnstenv
pushf
enter
ljmp
call
cmp
cs
mov
sub
fldcw
pop
sbb
nop
aas
rcr
idivb
incl
ret
fiaddl
daa
repz
xchg
add
cmpb
and
jecxz
xchg
inc
sub
repz
pop
add
into
pop
cmpsl
daa
mov
pop
into
xchg
sub
cmp
xorl
and
insl
mov
imul
adc
or
xchg
sahf
sahf
nop
mov
mov
mov
loop
cmp
rcr
daa
subb
and
mov
xchg
cwtl
mov
dec
repnz
and
std
test
inc
inc
gs
mov
inc
dec
outsb
aas
sub
popf
inc
push
loopne
mov
into
push
mov
xlat
inc
mov
mov
addr16
inc
nop
sbb
pop
cmpsb
out
push
mov
scas
addr16
cmp
hlt
insl
cmp
es
mov
notl
pop
sarl
push
or
inc
adc
mov
das
andb
jae
loope
ror
or
jno
xchg
push
push
sub
daa
jo
cld
cmpsb
jnp
je
jnp
cld
lea
outsl
or
sub
sub
push
stc
mov
xor
fists
xchg
cmc
cs
and
fs
into
dec
or
dec
imul
xor
lcall
loope
mov
rclb
mov
cmp
jne
mov
vscalefps
lcall
gs
hlt
fiadds
mov
lahf
jge
movsl
inc
mov
push
dec
popa
xchg
clc
lret
jp
or
sbb
dec
ficomps
fcoms
movsl
gs
scas
jne
adc
idiv
pop
cmp
xchg
mov
aam
dec
dec
xor
insb
push
dec
inc
fstl
add
inc
dec
dec
jl
arpl
mov
enter
add
decb
ljmp
jns
imul
mov
sbb
loopne
roll
xchg
inc
cs
leave
in
cmc
stc
in
js
or
jge
int
mov
jns
push
dec
loope
jns
js
jle
pop
add
jnp
and
jno
ret
in
inc
jecxz
and
fidivrs
dec
mov
in
xchg
inc
in
pusha
pop
xchg
sub
mov
lret
out
mov
xchg
leave
daa
cmpsl
or
ljmp
pop
or
xchg
mov
inc
pop
mov
adc
xorb
xor
push
xor
ret
test
sbb
mov
jge
mov
das
lea
jp
movsl
ds
outsb
fs
jmp
xchg
fwait
xchg
or
cli
jecxz
or
fisttpl
and
mov
mov
movsb
aam
testl
imul
cmc
jns
out
mov
outsl
dec
inc
insl
aad
and
xchg
bound
and
add
mov
cld
cmp
int
mull
es
insl
sbb
lock
xchg
xor
pop
jmp
out
pop
add
mov
scas
cltd
pop
adc
ljmp
es
inc
push
ja
push
mov
xor
mov
xchg
shll
cli
mov
mov
cmp
rclb
push
out
jmp
add
std
imul
loopne
dec
xor
mov
and
neg
xor
imul
xchg
mov
hlt
add
lret
xchg
adc
or
push
leave
clc
notb
outsb
imul
xchg
pop
push
ficoml
xchg
xor
shrl
imul
subl
loopne
test
cmpsb
sub
repnz
pop
dec
fdiv
outsl
jae
and
pop
call
mov
cld
in
mov
mov
cmp
inc
test
cwtl
out
pop
test
cmc
adc
int3
xor
popa
popf
mov
imul
icebp
mov
sub
sbb
cltd
push
dec
push
popa
scas
adc
pushw
lods
mov
jg
mov
fisubrs
mov
popa
gs
in
mov
push
mov
fsubrp
mov
aad
cmp
xor
fxtract
xchg
push
orl
sbb
jg
stos
mov
es
push
dec
and
pop
lock
inc
ljmp
xor
pop
jb
pop
push
arpl
imul
sti
pop
xchg
out
mov
mov
aam
and
sub
dec
xchg
xorb
or
mov
int3
mov
inc
xchg
mov
mov
les
push
fsubl
addl
cmp
mov
les
scas
negb
sbb
inc
js
out
jnp
and
ret
and
add
xor
mov
mov
xchg
movsl
je
dec
pop
xchg
pop
cwtl
or
das
jp
xor
sbb
or
rorl
lds
push
enter
dec
mov
push
test
xor
aaa
mov
mov
je
xor
xchg
rclb
pop
dec
icebp
mul
adc
imul
mov
out
dec
negl
arpl
and
fcmovnu
dec
mov
pop
in
mov
aas
test
into
inc
scas
lahf
adc
xchg
test
ret
jb
in
push
test
fadds
add
and
loopne
cmp
jo
leave
inc
sub
jnp
dec
jbe
add
imul
dec
add
and
jmp
xchg
lods
pop
orb
jmp
ret
and
jp
sti
xchg
jo
rorl
add
inc
in
mov
jo
stc
iret
jmp
cs
jo
cltd
test
push
mov
ret
insl
and
sti
fmuls
or
js
jg
movb
ss
subl
testl
xchg
cmc
lret
aaa
cld
pop
icebp
inc
inc
mov
imul
testl
pop
or
jl
adc
orb
sub
jne
pop
and
inc
dec
push
lds
cmc
iret
sbb
das
sbb
mov
mov
mov
jo
jne
movsl
mov
mov
sbbb
cmpsl
and
ret
adc
mov
popl
icebp
jo
jmp
adc
popa
jmp
das
ss
mov
inc
pop
pop
jl
pusha
xchg
push
mov
outsb
mov
fdivs
rcl
mov
arpl
lret
rcrb
cwtl
int3
dec
push
sbb
push
fdivrs
sub
pop
adc
pop
lock
aas
xor
push
loope
sub
mov
push
jnp
movsl
jne
into
push
rcrl
leave
sbb
jae
mov
cmp
pop
mov
aad
xor
push
sub
hlt
mov
popa
ret
xchg
ds
test
and
mov
jnp
sbb
jmp
nop
std
cmp
aad
mov
jo
mov
syscall
loop
hlt
jge
cli
test
data16
in
dec
pop
sub
xchg
jmp
sub
mov
inc
xchg
mov
inc
shr
clc
cmp
pop
push
push
flds
inc
lods
jg
or
rcrb
xlat
mov
movsl
mov
shlb
fdivrl
in
shl
adc
mov
jnp
mov
out
xchg
lds
dec
pop
sub
popf
loope
pop
popf
les
and
loope
repz
mov
mov
xorb
lods
jno
push
pop
jecxz
xor
add
and
mov
and
push
xchg
jge
gs
jo
jecxz
mov
lahf
fmull
mov
lods
pop
jg
fs
out
jae
bound
cmp
fwait
mov
adc
adc
push
daa
fsubrl
push
adc
std
inc
pop
icebp
mov
inc
cmp
inc
mov
enter
stc
dec
std
and
test
stos
add
mov
incl
xchg
mov
push
mov
xor
jle
adc
xchg
pop
mov
bound
jnp
out
add
iret
and
jmp
sbb
sub
and
cmpsl
mov
sub
sbb
das
cmp
out
inc
insb
jnp
in
cmp
mov
xor
lods
rorb
or
push
daa
xchg
cmp
and
and
jns
mov
mov
dec
ljmp
add
cmpl
insl
pop
or
mov
xor
stc
jnp
stos
pusha
inc
or
shlb
xchg
inc
jb
icebp
clc
mov
push
cmc
mov
std
jns
cli
loopne
mov
cmp
push
into
mov
add
dec
data16
mov
icebp
and
mov
inc
sarb
ljmp
dec
pop
add
jbe
nop
mov
mov
cmp
dec
in
aam
jp
pushf
xchg
int3
loopne
fsubl
add
cmp
xchg
xorl
dec
push
and
out
mov
add
push
in
cmp
das
push
cmpb
or
xor
mov
loope
out
cmp
mov
add
out
pop
jne
lret
aas
push
and
xchg
rcr
mov
mov
cmc
lahf
jbe
repz
push
jb
jmp
pop
push
dec
cmp
stc
ja
in
ja
or
imul
mov
mov
adc
push
fs
test
fadd
or
push
add
jno
inc
jecxz
fidivrs
stc
jge
xchg
insl
xchg
push
out
jae
sbb
stos
in
int
push
mov
and
sub
addl
popf
fnstenv
mov
lea
jecxz
cltd
sbb
fiadds
jb
jo
test
pop
int
adc
adc
add
jno
lahf
mov
xchg
adc
mov
or
stos
jp
cmp
or
ret
cli
mov
cmp
lahf
movsb
test
jl
cmp
fmuls
xchg
mov
add
mov
out
xchg
inc
shrb
or
fdivrs
add
jae,pn
xor
pop
xchg
mov
adc
xorl
mov
jbe
sarb
jmp
test
lock
sub
aas
mov
dec
and
cwtl
dec
inc
jno
push
movsl
inc
fstpt
mov
or
mov
das
shrb
es
daa
sub
xor
push
movsl
adc
add
mov
pop
and
nop
pop
sahf
pop
adc
sbb
aad
stc
in
add
dec
stos
lea
sarb
fsubs
loope
insl
or
in
pop
jns
mov
push
push
jo
lds
fidivrl
cmp
aaa
pop
push
sub
xchg
push
jg
lret
lock
das
stos
dec
mov
push
das
movsl
jb
fadds
test
aad
icebp
mov
push
ds
pushf
xchg
ret
xchg
loop
test
mov
rorl
mov
call
and
ret
xor
lahf
mov
sbb
fisttpll
pop
fildll
inc
cmp
andb
out
lret
cmp
cmp
lods
sub
hlt
push
fistps
andl
dec
xchg
dec
scas
jnp
aas
ror
cmp
les
stc
pop
in
clc
pop
es
stc
cwtl
jmp
xlat
stc
pop
imul
pushf
inc
loopne
dec
in
sub
xorl
and
loope
push
cwtl
dec
ljmp
daa
push
jno
in
mov
andb
push
stos
in
pop
cmovl
imulb
movsb
cmp
adc
es
lods
out
cmp
adc
pop
subl
jmp
mov
xchg
mov
lcall
je
stc
add
inc
sti
mov
js
loop
mov
scas
jbe
add
shrb
pop
mov
aaa
jmp
cmp
in
mov
add
in
lds
sbb
mov
out
fidivrl
loope
es
in
cwtl
bound
sub
or
jbe
into
dec
incb
push
fsubrl
insl
fnsave
je
adc
sbb
add
inc
nop
loope
inc
in
arpl
leave
ja
mov
hlt
cltd
fildll
add
fcmove
lret
loope
movsl
pop
fists
jae
rclb
sbb
std
adc
fidivrs
lods
xchg
dec
mov
or
dec
jnp
aad
adc
push
and
sbb
jmp
jmp
add
mov
xchg
ljmp
fimull
fsubs
fstps
sbb
and
divl
jo
xchg
mov
adc
enter
jle
pushf
out
mov
pop
add
dec
out
loopne
jo
xor
clc
sbb
mov
push
inc
sbb
mov
sbbl
repnz
and
add
mov
aad
into
ja
dec
and
aad
xchg
and
adc
pop
mov
dec
jbe
pop
mov
cmp
dec
cs
xchg
mov
inc
mov
cld
fbstp
push
fmull
push
mov
pop
sub
pop
lret
repnz
push
pushf
push
ret
mov
xor
cld
jae
insl
jp
cmp
inc
pusha
adc
sub
in
adc
mov
test
fcoml
popf
push
push
cmp
xor
dec
sti
enter
clc
mov
mov
xchg
stc
push
popa
stc
imul
leave
mov
dec
sub
cmp
ftst
sub
leave
pop
jns
ja
enter
inc
cld
add
je
addr16
add
mov
and
xorl
adcb
jg
jl
sub
insl
into
dec
or
sbb
cmp
ret
inc
push
pop
xor
outsb
fsubrs
dec
mov
inc
fistl
outsl
pusha
push
mov
xor
fs
aas
mov
test
push
jnp
faddl
fcmovnbe
add
insl
gs
xor
adc
into
xor
mov
hlt
ret
cmp
xchg
mov
pop
cli
mov
mov
pop
ficoms
fwait
inc
inc
js
insl
arpl
divb
iret
bound
out
mov
xor
sub
imul
stos
dec
dec
adc
in
enter
lret
lods
test
insb
test
dec
mov
data16
jb
mov
sub
insb
xchg
pushf
and
decl
mov
fcomps
ja
xor
xchg
add
sbb
fstl
cmp
cmp
std
addb
pusha
jnp
pushf
or
fwait
push
icebp
xchg
mov
stos
cmpsl
jb
testb
adc
inc
adc
outsb
push
xchg
ret
out
pushf
mov
mov
arpl
jnp
push
mov
push
dec
push
inc
aaa
pop
mov
and
jle
and
xor
pause
jnp
rcrl
jecxz
data16
ljmp
enter
jb
sti
gs
fisttps
repnz
xor
insl
cmp
fsubrp
inc
jg
push
movsl
push
adc
mov
test
fisubl
xlat
inc
arpl
sbb
inc
inc
loop
insl
daa
pop
push
insl
push
push
into
pushw
scas
inc
insl
sbb
je
or
in
add
das
and
cmp
pusha
and
xorb
and
push
mov
lea
loopne
sbb
clc
jmp
test
into
and
fwait
xor
dec
cmp
mov
jge
xlat
ffree
dec
dec
mov
dec
xor
repz
iret
enter
shrl
fbld
mov
stos
mov
enter
outsl
daa
xchg
mov
fildll
pop
and
movsl
bound
jnp
mov
dec
inc
push
cld
mov
ret
pop
inc
mov
sub
arpl
mov
call
cmp
out
ret
cmpsb
movsb
outsl
sub
push
pop
arpl
jl
jmp
mov
pop
mov
xchg
xor
stos
dec
fbstp
inc
or
loopne
stos
mov
xchg
push
out
mov
adc
roll
js
shl
nop
shrb
sbb
out
incb
in
pusha
cmp
int3
xor
mov
mov
pop
jmp
in
test
cltd
xor
adc
lea
xor
enter
inc
jne
aad
and
sti
sub
aam
leave
add
imul
scas
and
mov
mov
add
sahf
cmp
in
insb
fmul
push
mov
jns
shlb
jl
xor
cmpsl
push
add
in
inc
inc
or
jp
or
mov
or
xchg
push
mov
loopne
lods
addr16
mov
ljmp
fmul
pop
dec
stos
add
outsb
or
je
adc
mov
push
shl
xor
bound
pop
jae
mov
es
aaa
pop
cld
insb
fmul
pop
lods
cmp
cmp
add
out
xchg
or
cmp
rcll
and
mov
inc
arpl
or
adc
mov
cmp
sub
in
stos
push
pop
cli
dec
fs
roll
xor
sahf
xchg
jecxz
rcrl
in
cmp
sub
add
fcoml
push
fwait
xchg
and
fisttpll
nop
lea
test
in
or
shl
xchg
pop
lahf
into
int3
jle
imul
jge
imul
mov
or
pop
add
jmp
leave
outsl
aad
jmp
repnz
in
sub
xchg
sub
rorl
je
push
add
xchg
or
out
pop
test
leave
xor
orb
sub
fistl
fstps
xchg
out
jecxz
push
aad
mov
xrelease
fldl
or
mov
inc
fcomp
iret
sub
inc
outsb
stc
out
cmpsb
pop
sbb
mov
clc
jnp
xor
insb
sub
mov
js
mov
push
dec
int3
stc
mov
pop
inc
and
xor
rolb
add
lea
cmp
sbb
movsl
std
in
mov
clc
sbb
in
sub
pop
and
inc
mov
enter
cld
and
cmp
mov
adc
push
mov
loop
or
sti
or
sti
jnp
mov
cs
sbb
fwait
jg
es
mov
es
jle
dec
shll
push
out
sbb
int3
mov
movsl
adc
inc
jae
xor
test
bound
andl
je,pt
sahf
leave
shrb
push
loopne
mov
mov
stc
out
pushf
jp
mov
int3
lods
xchg
in
push
push
and
mov
lcall
mov
xchg
add
jp,pt
out
lock
pop
sbb
inc
ja
insb
in
mov
shrl
dec
sbb
add
pusha
aaa
and
cli
fmuls
cmp
leave
shrl
insl
pop
adc
dec
stos
cmp
or
stc
pop
push
iret
leave
sarb
mov
adc
inc
mov
inc
out
jns
or
dec
dec
movsb
ss
loop
pop
stos
mov
inc
dec
inc
rclb
jle
int
in
cmp
and
adc
push
stos
push
fdivl
fwait
sbb
sbb
gs
mov
adc
mov
xchg
sub
cmpsb
mov
adc
mov
jno
pop
or
adcb
sub
test
pop
or
jns
push
xchg
push
sbb
subb
mov
into
add
popl
sub
into
xor
push
test
jle
cmc
add
pop
ret
add
and
push
dec
sub
aad
jns
repz
movsw
or
popa
andl
mov
cmpsb
dec
ud1
xchg
std
inc
stos
unpcklps
sbb
push
pop
mov
push
stos
jecxz
cwtl
and
fwait
mov
bound
cwtl
movsl
fcompl
aad
push
push
bound
push
dec
fwait
or
xor
cmp
lcall
out
sub
jo
or
loopne
xchg
in
inc
jae
gs
ljmp
daa
ss
mov
hlt
sti
icebp
jo
pop
aaa
movsb
pop
lock
inc
out
outsb
test
cld
mov
insl
bound
ja
adc
int3
mov
cs
push
add
mov
mov
cmp
insb
mov
scas
adc
mov
jmp
mov
lcall
leave
add
dec
pop
stos
testb
je
inc
sar
insl
jae
push
jae
adc
mov
push
push
fisubl
fwait
add
inc
js
outsb
lea
jl
movsb
sahf
xlat
aas
xchg
lahf
inc
imul
add
mov
mov
test
jmp
mov
fimull
and
lcall
outsl
data16
dec
ret
and
pop
or
pop
pop
mov
not
mov
addl
dec
xor
cmpl
stos
jnp
stc
dec
stos
in
or
fildl
idivl
test
cli
call
fmull
fucomip
dec
jge
sbbl
movsb
xor
fldl2e
jne
jle
rorl
notl
fwait
stos
data16
movsl
rcr
pusha
out
stos
addr16
cltd
push
repz
frstor
data16
add
xchg
push
aam
rcl
push
arpl
xchg
cld
sbb
jp
mov
inc
mov
mov
mov
jb
hlt
xchg
mov
dec
cld
mov
mov
jb
xchg
or
push
sbb
and
mov
in
push
mov
loope
loopne
dec
mov
mov
repnz
shlb
cmp
sti
push
push
push
pop
inc
sub
push
fstpt
lods
dec
leave
adc
filds
hlt
cmpb
mov
insl
xor
xor
inc
frstor
sbb
mov
jbe
xor
loope
adc
inc
push
sbb
lods
pop
mov
mov
and
pushf
fs
jbe
push
stos
les
out
sbb
and
xor
enter
add
jnp
inc
mov
cltd
popf
xor
xchg
into
mov
loopne
iret
ret
xchg
cli
xchg
loop
pop
sub
sub
gs
ret
push
jne
stc
sub
enter
cmp
lea
jge
pop
push
push
aaa
loope
xchg
add
push
leave
nop
dec
pushf
test
mov
imul
daa
loope
insb
push
test
lock
adc
xchg
fidivrs
and
lcall
pop
ret
jl
cwtl
testb
and
cmc
cltd
xchg
cmp
xchg
fucomip
and
dec
inc
andb
xor
xor
fidivrs
add
jmp
call
mov
out
stos
mov
repz
pop
pop
inc
add
push
jo
xchg
xchg
movsl
into
outsl
std
xchg
aam
jne
mov
fidivrl
jp
sti
sbb
push
cmpl
push
clc
fnstenv
popf
mov
inc
mov
inc
jp
sub
jge
clc
dec
inc
dec
xor
outsb
mov
push
dec
push
cld
xchg
cmp
jecxz
in
jns
jle
movsb
jnp
mov
popa
mov
lock
inc
dec
jp
in
cwtl
notl
push
jp
sbb
jp
pop
lahf
popa
pop
jnp
test
sub
xorl
fmulp
mov
popa
sar
icebp
fsubs
gs
iret
xor
test
inc
inc
std
int3
movsb
negb
es
inc
pop
add
sbb
test
in
imul
xor
jecxz
mov
stos
js
xchg
movsb
fistpll
das
mov
mov
jns
pop
stc
cwtl
mov
insb
xchg
pop
lods
test
mov
jno
aas
into
adc
mov
pop
cmp
xchg
xchg
mov
xor
push
loop
je
lock
adc
sarl
je
xchg
aas
fs
cmp
push
sub
cmp
gs
xchg
or
js
adc
scas
enter
mov
or
decb
push
or
mov
call
jg
gs
add
ret
inc
jbe
cli
daa
jns
xor
cmc
dec
dec
sarb
pop
mov
les
rcrb
and
inc
push
jb
ljmp
lret
inc
addr16
shrl
jge
cmp
jns
cmc
ds
mul
and
push
jns
mov
fistpll
pop
pushf
or
out
sbb
add
dec
nop
lret
or
test
test
setae
pop
sbb
push
and
pop
inc
push
dec
pop
sbb
pop
daa
add
shll
xor
sti
ds
xor
lock
aaa
daa
decb
into
mov
mov
pushf
mov
lcall
hlt
lcall
notb
mov
mov
sbb
lds
jns
lret
cld
dec
xchg
jns
daa
inc
add
dec
mov
scas
pop
mov
mov
mov
adc
sub
daa
xor
mov
mov
mov
aam
icebp
aad
in
pop
jno
jecxz
and
les
mov
dec
stos
dec
test
xor
fbstp
jb
filds
fmul
inc
xchg
in
lock
lahf
pop
inc
sbb
and
loope
outsb
mov
mov
cmc
clc
jae
test
pop
mov
nop
pop
push
lds
fwait
xor
cli
xor
jb
fnstsw
bound
add
fnstsw
lock
test
push
loopne
repnz
pop
popf
sub
lea
sub
lods
imul
das
in
push
cmp
push
mov
movsl
lret
fldcw
pop
add
in
in
int3
adc
cmc
pop
xor
pop
ud1
push
xchg
pop
pop
outsb
inc
add
add
push
jp
mov
dec
outsb
xor
pop
mov
and
pop
mov
repz
jg
outsb
mov
stos
cmp
ja
mov
xor
movsb
adc
addr16
test
movsb
iret
sub
int
fbld
das
cmc
fsubl
push
popf
xorl
and
rclb
sbb
mov
ret
xchg
cltd
mov
frstor
sti
mov
mov
stc
xchg
xorl
je
push
repz
or
or
in
mov
dec
sbb
mov
mov
enter
mov
sbb
nop
pushf
test
push
sub
test
xchg
add
test
bsf
sub
fstpl
in
sti
cmp
mov
xor
dec
stos
dec
test
les
cmpsl
mov
xchg
nop
js
jp
js
fwait
and
sub
cmpsl
call
add
mov
ret
leave
xchg
and
nop
adcl
sub
jb
mov
in
cmp
lock
fs
cmpsl
clc
jg
lahf
xor
xor
fsub
lea
lods
sub
sbb
roll
jo
in
jno
and
xchg
rcr
sbb
add
je
cmp
mov
xor
pop
cmpsl
cmp
xchg
jmp
andb
mov
mov
sbb
cli
cmp
inc
adc
jle
das
or
xor
inc
ljmp
mov
or
negl
in
or
push
test
sub
cs
test
out
stc
sbb
mov
sub
dec
xchg
nop
cmp
mov
xchg
inc
lahf
push
out
sbbb
push
ljmp
mov
cwtl
cmpsb
add
data16
in
xor
mov
cmp
push
dec
inc
cmpsl
popl
data16
adc
add
or
iret
outsb
xor
jnp
in
cmpsb
jge
or
or
hlt
jae
push
stos
cmp
fwait
mov
mov
xor
insl
dec
sbb
cmp
jle
dec
add
add
int
mov
sbb
iret
outsl
into
mov
adcb
ss
sub
or
jae
and
cmp
xor
pushf
sbb
outsl
ss
xlat
and
mov
ficoml
ss
fstp
push
add
das
aam
sti
std
push
mov
jl
leave
jge
ds
dec
les
in
scas
mov
cmp
movsl
mov
jno
call
sub
ja
xchg
push
xchg
fldt
sbb
push
lods
inc
cltd
xchg
adc
jns
dec
sub
add
pop
sub
fldenv
push
leave
fs
incb
sbb
jbe
xchg
push
fcompl
mov
repnz
xor
enter
lods
cmp
aas
rcl
push
fcoms
sbb
push
lcall
xchg
std
dec
xor
loopne
ret
xchg
sub
out
cmpsb
sbb
and
push
push
mov
std
shl
push
ja
cwtl
mov
dec
rorb
mov
jp
and
inc
movsl
imul
mov
fldl
dec
push
xor
mov
mov
cmp
adc
ret
andl
iret
sbb
or
cmpsl
xchg
rcrb
les
hlt
imul
cmc
push
mov
jmp
ror
mov
dec
sbb
outsl
stos
push
mul
cmovl
int
lock
jnp
repz
clc
mov
push
sub
cmpsl
int3
into
sub
fnsave
push
testb
sub
test
repnz
mov
jge
scas
mul
push
cmc
daa
and
ret
jo
sub
out
add
cmp
adc
ret
push
xchg
mov
out
pop
sub
pop
ss
insb
or
nop
xor
out
mov
sub
sti
nop
mov
jge
pusha
inc
add
and
lea
cs
mov
ljmp
inc
lret
cmp
notb
fcompl
in
mov
adc
xor
in
test
inc
sbb
cmp
test
repnz
mov
outsl
in
lea
and
xchg
or
dec
ss
fisttpl
push
dec
out
flds
sub
push
ds
mov
push
mov
or
pop
lret
and
pop
int3
and
stc
lret
mov
mov
stc
mov
mov
test
call
mov
outsb
xchg
sub
jnp
es
int
movsb
inc
test
xchg
or
xor
hlt
out
addr16
sub
dec
pop
movsb
push
pop
adc
push
in
aad
jne
loope
or
or
add
inc
push
dec
inc
cltd
out
popa
ljmp
stos
mov
leave
nop
lods
cmp
jbe
mov
push
push
add
mov
testl
je
dec
mov
js
sbb
cmp
jbe
inc
out
inc
jne
outsl
dec
int3
push
xchg
stos
test
inc
push
or
or
cmpl
sub
xor
jmp
jecxz
cmp
sbb
insb
ror
dec
push
aaa
add
es
mov
jbe
popa
sbb
sub
jbe
xlat
sub
xchg
jnp
mov
hlt
pop
sub
xchg
mov
std
or
adc
mov
adc
enter
in
insl
js
bound
or
lods
mov
mov
outsb
fmull
cmp
movsb
dec
xchg
mov
aaa
mov
icebp
pop
pop
lods
or
in
push
mov
call
push
push
mov
in
sbbb
push
stos
aam
push
cmp
jb
adc
xchg
lods
aam
movsb
mov
xchg
mov
dec
sbb
in
ss
loope
inc
lods
idivl
adc
jg,pn
adc
sbb
rorb
mov
popa
jl
jns
jnp
stos
adc
xchg
xchg
int3
mov
arpl
test
adc
bound
lods
jno
adc
mov
sbb
orb
add
mov
lock
dec
xchg
jb
sub
mov
cmp
cld
inc
xor
fnstsw
and
push
mov
mov
push
sub
testl
mov
cmp
push
cmp
pop
push
les
orl
xor
in
fisubrl
push
into
dec
push
fdivr
int
push
lea
push
pop
inc
mov
lret
loopne
imul
sahf
jecxz
dec
jnp
pusha
jne
icebp
xchg
js
jmp
or
push
mov
cmpsl
fwait
ds
call
mov
jmp
out
adc
mov
mov
cmc
xchg
movsb
scas
add
test
sub
xor
mov
push
xor
aad
mov
arpl
sub
or
jno
xchg
dec
xchg
xchg
loop
mov
adc
fnstsw
test
pop
sbb
mov
xor
jg
push
sbbl
js
scas
insb
lahf
push
push
scas
lock
mov
inc
pop
repz
mov
sbb
inc
mov
and
and
mov
cmpsb
jmp
inc
adc
mov
inc
pop
movsl
mov
in
pop
mov
push
negl
push
jl
dec
jo
test
in
adc
and
push
sar
mov
xlat
negl
fldcw
outsl
movsl
dec
outsl
mov
clc
imul
add
mov
stc
insb
scas
iret
xchg
xchg
int3
aad
mov
add
or
cmp
inc
pop
leave
jl
cltd
std
xor
pop
or
pusha
mov
addb
dec
fnstcw
cmp
ds
pop
sahf
jge
ror
loope
cmp
lcall
add
push
sub
das
orb
cmp
out
jmp
aad
mov
enterw
cmp
mov
xchg
daa
fisubl
mov
cwtl
cmp
xchg
jmp
mov
and
xor
rcrl
das
lret
xor
mov
jb
push
jae
bound
xchg
push
sbb
sti
add
popf
adc
or
xor
jno
mov
gs
movsl
ja
or
arpl
pop
idivb
lock
mov
scas
aas
ret
add
dec
pop
cmc
fs
daa
and
inc
cmp
ret
or
aam
cltd
jmp
xor
scas
scas
mov
xor
or
cwtl
sbb
pop
dec
loope
mov
loope
cmp
movsl
arpl
mov
xchg
push
out
mov
push
movsl
stos
ret
lret
lret
sub
add
insl
movsl
mov
pop
loopne
das
or
dec
xchg
pop
inc
cmp
push
ljmp
xlat
push
outsl
sub
push
mov
mov
stos
push
xchg
test
dec
mov
pop
cmp
lahf
hlt
lcall
cmc
daa
inc
repnz
mov
push
or
js
frstor
inc
pop
lret
jbe
or
xchg
sbb
insb
aaa
sub
xchg
xchg
mov
popf
loop
xor
push
or
fldenv
pop
movsb
clc
outsb
int
lret
loopne
orl
inc
mov
add
mov
mov
push
int
sub
movsl
loope
xlat
jmp
clc
xchg
sub
xor
push
dec
xlat
sbb
in
out
movsb
out
bound
aad
icebp
imul
and
out
jecxz
cmp
mov
icebp
and
gs
out
addl
lahf
testl
jg
sbb
xor
adc
xchg
cmp
lods
arpl
pop
inc
and
sbb
pop
repz
loop
sbb
imul
jo
ja
loopne
loopne
dec
adc
lds
push
test
stos
add
popf
in
pop
int
push
and
jbe
mov
out
push
shl
fidivl
subb
push
test
lret
adc
xor
pop
and
sbb
out
add
repnz
jg
adc
fildl
adc
aad
ret
scas
sub
mov
xor
sbb
scas
outsl
mov
fnstcw
sbb
mov
aas
lret
xchg
inc
aad
call
call
add
inc
bound
or
and
xor
pop
imul
add
sub
mov
mov
sbb
xchg
sub
or
inc
mov
js
push
mov
lods
adc
stos
pusha
cmp
dec
in
push
insl
outsb
enter
leave
sbb
daa
adc
scas
push
clc
aaa
xor
cmc
scas
push
dec
xor
in
fs
aad
mov
iret
push
jmp
sahf
inc
out
adc
mov
cmpb
movsb
pop
rol
arpl
sub
cmp
or
and
jp
faddl
andl
sub
and
xchg
sarl
aas
cmp
pop
mov
iret
inc
movsl
test
out
loope
imul
fcoms
in
xchg
dec
sbbl
mov
mov
and
xchg
xor
xchg
cs
jp
push
and
test
cmc
sub
sbb
inc
jno
pop
adc
iret
sub
xor
adc
movsl
cmpsl
adc
lock
ror
js
into
cwtl
les
fimull
pop
adc
in
xchg
adc
mov
inc
jmp
push
sub
clc
fdivs
popf
xchg
aaa
mov
aad
aad
inc
mov
cmp
jne
sub
xchg
pusha
gs
mov
test
addl
push
jmp
mov
push
push
repnz
and
xor
or
sbb
popf
pop
xchg
adcb
adc
repz
daa
sub
aad
in
pop
xor
cmc
in
pop
jg
lock
mov
dec
cmp
pop
cs
fs
sub
or
cmp
ja
repnz
xchg
jge
inc
insb
sarl
add
divb
and
mov
dec
gs
lret
out
lock
or
jno
push
imul
xor
or
xchg
test
xchg
ret
iret
pushf
gs
mov
ret
mov
push
dec
ret
adc
test
or
adc
cmp
sub
rorl
sbb
add
popa
xor
push
mov
fsubrs
fstps
fs
dec
ret
notb
push
jg
lret
dec
dec
sti
inc
rep
mov
cmp
sbb
je
xor
mov
insb
dec
lret
adc
sbb
iret
std
sub
sbb
lods
push
in
sti
jmp
inc
out
cmc
js
jge
and
cmovp
ret
adc
mov
mov
pusha
addb
and
stos
inc
test
and
jns
adc
mov
outsb
pop
aas
sbb
add
pop
mov
jo
dec
fildl
pop
mov
rclb
repz
ficoml
jle
in
flds
or
mov
pop
add
scas
inc
cmc
dec
popa
adc
hlt
xchg
imul
xchg
and
xchg
je
sub
push
test
in
cmp
push
test
mov
out
fs
jl
mov
xchg
cmp
adcl
cmp
pop
jne
xor
fidivrs
push
movsb
aaa
add
inc
push
xor
xchg
xor
lret
pop
out
mov
ja
test
test
subl
imul
mov
jns
mov
aas
int
adc
sub
cmp
push
cmp
repnz
sti
mov
push
mov
xor
add
sub
mov
cmp
adcl
movsl
idivb
imul
jns
test
inc
and
addr16
mov
cmp
mov
mov
cmp
hlt
dec
xchg
das
loop
aas
or
jne
jl
sub
fcmovb
dec
cwtl
lods
test
int3
out
gs
out
lods
jle
push
lock
shll
dec
lret
fwait
out
dec
es
int
mov
or
and
mov
fidivs
fwait
add
fistpl
mov
add
ljmp
ss
dec
mov
js
cli
push
daa
lahf
shll
int
mov
adc
push
cmc
stos
and
shlb
mov
lock
pop
or
xchg
daa
les
and
and
sti
push
jne
mov
cltd
fcoml
jno
cmp
int3
and
mov
data16
push
lahf
div
mov
inc
mov
mulb
int3
fiadds
pop
mov
icebp
cmc
mov
idivb
ds
outsb
and
sub
insl
enter
pop
xor
arpl
mov
xor
push
jecxz
sbb
push
aad
push
xor
sub
loop
xchg
mov
nop
pop
pop
xchg
mov
aam
dec
mov
in
xor
cmp
mov
pop
or
cmc
pushf
pop
sub
fldenv
fstpl
aaa
sbb
icebp
cmc
jb
lods
xor
xchg
stc
movsb
push
mov
push
adc
adc
xchg
mov
loope
fdivl
fildl
xor
mov
leavew
rcll
test
dec
sub
cltd
xchg
rorb
icebp
das
cli
jecxz
xlat
sub
stc
popf
hlt
xchg
pushf
lahf
inc
stos
inc
gs
xor
roll
fimuls
adc
mov
clc
aaa
dec
ss
and
jbe
or
insl
js
jecxz
jne
notl
out
sar
shrl
inc
push
insl
test
cmpsl
pusha
jecxz
stc
sbb
xchg
or
and
into
imul
or
into
dec
int
sub
xor
int
bound
daa
outsl
dec
inc
add
and
adc
fnstsw
lods
ljmp
out
frstor
or
mov
jg
outsl
gs
inc
mov
mov
adc
int3
pop
or
sub
dec
leave
es
mov
jno
adc
push
sbb
push
or
jae
jle
in
outsl
test
imul
mov
shr
out
loopne
addb
mov
std
xlat
inc
arpl
pop
and
push
mov
icebp
jmp
dec
out
cmp
ffreep
pop
lea
dec
pop
sahf
cld
ret
out
jg
bound
sbb
jmp
push
mov
pop
fisttps
gs
shrl
jns
je
iret
cmpsl
mov
jge
adc
mov
int3
and
push
pusha
mov
pop
sarl
ret
js
cmp
push
jecxz
je
hlt
outsb
lcall
jecxz
pop
jmp
pop
cmp
xchg
shlb
sbb
mov
xor
in
cltd
or
in
fnstsw
daa
jp
jecxz
xchg
ljmp
push
xor
je
push
aas
sbb
inc
shrb
hlt
adc
ja
dec
add
adc
mov
add
pop
not
mov
insl
pop
xor
jle
mov
mov
push
add
cmp
int3
outsl
jmp
push
adc
xchg
sahf
shrb
pushf
xor
call
dec
int
mov
test
push
jp
xor
push
adc
pushfw
mov
in
cmp
push
cmp
fs
int
sub
pop
fistps
adc
xor
ss
push
mov
test
popa
test
pop
popf
mov
inc
pop
add
scas
mov
inc
daa
sub
inc
sub
mov
in
mov
fsts
jbe
push
fcomps
mov
cli
jge
cmp
mov
adc
fcmove
pop
sub
sub
out
es
pop
cmp
outsl
dec
jp
daa
mov
inc
movsb
movl
fmul
mov
pop
fnstsw
jb
xchg
push
add
mov
xlat
inc
or
push
xchg
inc
fsts
ss
mov
fisttps
ss
in
gs
jg
in
movsb
mov
add
dec
roll
ret
pop
or
or
or
mov
inc
rorb
outsl
add
fists
adc
adc
cmp
sbb
or
cli
push
mov
and
mov
test
xchg
loop
adc
cmpsl
int
imul
add
in
mov
mov
push
cmpb
xchg
test
add
mov
adc
ret
or
mov
data16
inc
nop
jne
ljmp
aam
lret
nop
sub
push
popf
push
in
pop
mov
cmp
and
mov
xchg
fmul
insb
sbb
xchg
loope
addb
sbb
call
add
js
sub
loopne
lcall
or
test
fidivrl
dec
ret
aas
in
add
dec
xor
xchg
enter
or
jl
mov
js
jge
cmp
outsb
cmp
jl
jbe
push
nop
int
out
cmp
out
ret
fcoms
pop
imul
jno
adc
dec
push
outsb
scas
aas
lock
push
std
in
mov
pop
push
rorb
xchg
arpl
cli
mov
sub
das
and
dec
das
mov
xchg
cmp
std
xor
pop
mov
shl
in
push
pop
mov
pop
sbb
cmc
or
loopne
mov
out
pushf
xchg
push
pop
pop
mov
imul
pop
xchg
pop
adc
xor
push
loop
sbbl
jge
stos
repz
ss
xchg
subl
scas
jnp
or
cld
xor
and
sub
mov
xchg
inc
inc
jp
addb
stc
bound
fcoml
pop
cwtl
lods
popa
dec
push
and
mov
popf
sub
pop
jae
and
cs
in
loopne
std
hlt
fistps
outsb
adc
add
leave
pop
mov
fcom
hlt
push
aad
sbb
sub
or
xchg
pop
sub
jp
sub
cmp
lea
outsl
lret
dec
lods
push
xchg
sub
sub
jnp
aaa
aam
sub
daa
sub
sub
and
xchg
and
add
subl
dec
in
xor
aaa
xbegin
or
jnp
bound
js
test
mov
mov
and
adc
and
mov
sbb
outsl
imul
in
popa
lcall
lock
pop
lahf
sbb
test
movsb
mov
and
cld
movsb
pop
adc
fs
mov
inc
adc
dec
xchg
sbb
adc
pop
lods
dec
sub
js
adc
and
call
adc
xchg
mov
clc
imul
add
pop
inc
push
cmp
push
testl
ffreep
add
or
add
xchg
inc
add
mov
dec
sbb
mov
mov
cli
ret
aaa
add
mov
and
movsl
add
jo
inc
mov
cwtl
outsl
push
shl
out
clc
test
movb
dec
mov
js
adc
cltd
sub
pop
mov
push
jne
lahf
lods
or
xor
adc
movsb
jb
dec
stos
mov
pop
pop
aaa
rcrl
out
fistps
jg
dec
mov
xchg
popf
mov
ret
out
mov
push
rorl
ret
add
or
xchg
jmp
mov
mov
xchg
sbb
stos
jae
ret
sbb
fs
cmp
daa
cs
jp
jp
xlat
xchg
mov
xorl
push
popa
pop
push
push
sub
dec
imul
or
aam
and
out
mov
je
xchg
cmpb
lods
daa
sbb
mov
in
mov
mov
clc
fidivrl
test
mov
mov
mov
mov
inc
adc
lea
std
or
or
popa
stos
cmpsw
cmp
fstpt
jmp
fsubl
mov
pop
vmovntps
pop
movsb
in
fistl
and
sbb
cmp
mov
xchg
or
xor
push
adc
cmpl
lea
mov
push
jb
subb
enter
or
cmp
cmp
fnstsw
and
adc
push
cmpsb
pushf
push
cmc
mov
xor
vpsadbw
adc
mov
aas
out
xor
in
out
iret
push
in
test
xchg
mov
mov
lea
pop
mov
mov
mov
xchg
cmc
jmp
lret
cltd
movsl
mov
ret
test
nop
sub
push
js
push
aaa
inc
jbe
xor
cmpsb
jg
xor
cmp
mov
or
mov
jns
add
jbe
sbb
rclb
in
ljmp
xchg
popa
test
sub
pushf
int
bound
inc
or
test
jp
cmpsb
mov
nop
add
outsl
dec
scas
add
test
cmp
inc
push
hlt
inc
std
sbb
jle
aad
cltd
dec
jno
mov
outsb
push
loopne
ror
adc
psubsw
push
xchg
jae
shlb
mov
push
or
sub
es
mov
loop
inc
pop
in
sbb
mov
int3
mov
shlb
or
out
ja
sub
scas
rcl
insb
jae
popl
mov
jl
gs
jmp
gs
cmc
cmp
pop
aam
mov
add
ret
cltd
sub
aam
pushf
pop
out
jbe
pop
cmp
daa
add
popa
insl
add
cmp
bound
mov
jno
sbb
inc
leave
stos
xor
lahf
push
cmp
loop
and
lcall
cmp
mov
pop
mov
fcmovne
cmp
jmp
lock
jns
xlat
inc
mov
rcl
mov
sbb
push
and
xlat
cmp
sbb
push
dec
loop
mov
pop
jno
les
mov
lock
add
fdivr
xchg
fcmovnb
xchg
insb
arpl
fnsave
mov
or
pop
adcl
pop
or
mov
jmp
jne
fiaddl
lret
mov
js
mov
in
pop
bnd
xchg
mov
mov
pop
xor
xlat
icebp
mov
lahf
rol
sub
xor
xor
cmp
push
das
test
outsb
je
in
inc
or
outsb
psllq
push
xchg
xchg
aam
cli
insl
jge,pt
cmp
xchg
cwtl
add
mov
jg
mov
pop
inc
stos
clc
jmp
sti
clc
push
test
dec
stos
int3
mov
xor
sbb
negb
sub
xor
mov
hlt
adcl
movsl
sti
pusha
dec
sbb
shr
ror
gs
jae
sub
out
mov
push
pop
enter
sbb
cmc
and
out
dec
cmp
xor
iret
fstpl
testb
cmp
mov
adc
jne
ret
ror
shlb
xchg
inc
cmpsl
inc
lods
mov
imul
or
repz
pop
mov
mov
xchg
subl
pop
sete
mov
repnz
mov
iret
xchg
outsb
xor
inc
dec
ljmp
pusha
sbb
adc
andl
subb
xchg
int
int3
jecxz
inc
je
mov
sbb
mov
mov
dec
cmc
sub
push
stos
pushf
leave
scas
les
aam
add
xchg
decb
add
push
and
aam
pushf
loop
mov
int
adc
pop
sub
test
mov
cmp
jecxz
insb
aad
int
jge
out
insb
add
add
into
test
push
cltd
pop
fldcw
adc
jp
movsl
mov
inc
popf
xchg
adc
out
push
dec
in
cmovns
mov
test
lock
ficoms
dec
dec
xchg
cmpsb
mov
out
test
xor
movsl
rorl
mov
xor
mov
imul
ljmp
adc
mov
pusha
test
scas
call
lcall
fucom
sub
pop
xchg
pop
mov
cli
inc
mov
lret
sbb
std
push
sbb
sbb
sub
in
test
fcmovbe
hlt
sbb
popa
rolb
adc
adc
sbb
and
lret
xor
jae
nop
shrb
mov
pop
out
xor
ds
or
int
pop
add
and
jbe
dec
sbb
lods
out
ficomps
inc
jnp
sbb
int3
cltd
jo
dec
fldcw
push
out
lret
cmp
mov
push
call
sub
mov
xchg
pop
push
gs
adc
lock
nop
lea
repnz
fbld
dec
xchg
cmpsl
mov
xor
add
dec
fsub
repnz
jp
or
loopne
push
imul
or
jns
pop
xor
cmp
scas
and
fildll
cli
and
jbe
cld
cmp
sbb
add
sbb
xor
addl
add
push
adc
fnstsw
fdivrp
jg
mov
or
mov
xchg
adc
add
das
push
adcl
xchg
and
clc
dec
int3
daa
xchg
lahf
pushf
aad
int
dec
in
push
repnz
jmp
jecxz
pop
mov
cmc
add
add
shr
movsl
and
xor
jae
xor
cmp
inc
push
loopne
mov
scas
adc
mov
int3
and
push
sbb
cmp
dec
in
add
push
inc
nop
pop
push
mov
xlat
je
fdivrp
adc
sbb
lds
dec
lea
gs
popf
sbb
push
cmp
mov
push
mov
inc
ret
cmp
int3
xor
mov
or
lahf
pop
jge
push
mov
sbb
sbb
pop
push
sbb
add
xchg
xchg
or
push
imulb
je
mov
les
repz
push
iret
mov
mov
add
add
xchg
lea
lods
aas
mov
std
push
inc
cltd
sbb
in
stos
xor
push
sub
fucomi
push
mov
lock
test
inc
fbld
xor
lahf
outsb
into
pop
out
push
dec
cli
and
or
dec
pop
push
out
push
in
mov
es
adc
in
addr16
int
xlat
sbb
jg
test
pushf
sahf
pop
cmp
push
pop
repnz
scas
sbb
aaa
mov
mov
cmpsb
pop
outsl
inc
jecxz
inc
xor
dec
and
pop
mov
mov
clc
subb
jns
xchg
xor
push
pop
push
push
mov
mov
lret
mov
iret
sub
ret
sub
jg
jae
jge
test
aad
bound
scas
add
lcall
insl
xchg
push
adc
addr16
and
mov
int
xor
pop
mov
cs
add
mov
mov
fsubrs
xchg
xor
imul
xor
mov
jmp
sub
cmc
mov
xchg
mov
mov
jl
outsb
movsl
dec
loope
xchg
xchg
mov
cld
sahf
test
scas
push
mov
pop
outsb
mov
sub
sbb
adc
pushf
lods
lods
pop
adc
ljmp
jno
jg
pop
xchg
mov
mov
fidivs
jp
jle
and
add
das
mov
pop
lock
aam
xchg
sbb
lds
rcll
push
pop
movsb
test
jae
jecxz
mov
loopne
mov
lret
jno
xchg
stc
sub
into
adc
jl
ja
test
in
mov
dec
mov
add
and
sbb
dec
test
adc
aas
fimull
sub
std
fdivrl
cmp
mov
jecxz
test
xchg
push
pop
jbe
push
ds
push
ficompl
cmp
jecxz
mov
xchg
lds
mov
lods
arpl
out
add
or
stc
out
icebp
xor
xchg
adc
dec
lea
inc
je
xchg
out
adc
out
out
xor
adc
and
fstps
xchg
ficoms
inc
out
dec
jne
and
inc
adc
push
bound
dec
ss
mov
jecxz
subb
cmp
insl
lret
mov
aam
adc
dec
mov
int3
inc
es
sbb
mov
pop
pop
jge
inc
mov
je
pop
dec
push
or
fnstcw
rorl
dec
lods
cmpsb
jp
in
mov
in
sbb
xor
dec
lea
fiaddl
push
add
xorl
fdiv
and
mov
fnstenv
mov
fcomps
sub
popa
xor
push
push
cmp
sarb
lds
lret
shll
jmp
jg
xchg
sub
repz
cmp
gs
lret
and
leave
add
scas
inc
adc
enter
ss
push
jecxz
xchg
mov
jbe
dec
pop
jle
call
cmc
dec
aad
outsb
inc
or
mov
dec
adc
ss
ret
and
add
lret
jno
loopne
out
cs
clc
loopne
les
out
xchg
in
loop
das
in
push
add
add
cwtl
pop
cmp
jne
jl
sahf
xchg
jmp
dec
iret
xchg
aaa
cld
insb
shll
and
mov
lcall
int3
repz
in
pop
enter
mov
notb
mov
arpl
les
mov
mov
sbb
dec
adc
dec
cs
pop
iret
mov
jl
out
fcompl
jb
add
fwait
xorb
and
rorb
pop
aad
xchg
mov
cmp
pushf
aad
std
lahf
push
loope
cmp
in
test
loopne
gs
xlat
test
mov
enter
pop
cld
xchg
mov
fcoms
cmpsl
push
push
test
push
int3
andb
mov
inc
sbb
jmp
hlt
repz
sbb
das
lret
repnz
clc
scas
jbe
scas
movsb
pop
inc
out
add
cmp
movsb
jmp
movsl
cwtl
inc
push
das
and
movsl
test
push
push
aam
mov
pop
das
scas
repnz
gs
imul
and
loope
mov
xchg
out
and
subb
pop
lret
jns
xor
xor
pop
fstl
cs
push
sub
mov
cltd
pop
or
push
inc
out
xchg
mov
push
jge
in
add
jnp
ljmp
loop
mov
fadds
pop
xchg
xor
mov
mov
loope
test
aad
sub
cmpsl
push
lods
scas
gs
cmc
gs
inc
fsubs
lret
js
jo
popf
mov
xchg
scas
or
daa
je
cmpsb
jmp
and
leave
jns
fmul
cmp
lock
pop
sub
or
mov
xchg
xor
push
cltd
pop
int3
fsubrp
mov
scas
adc
or
pop
xchg
sub
mov
push
mov
repnz
insb
loop
int3
pop
adc
push
mov
pop
pop
and
das
aam
fcmovu
or
test
xchg
cmp
mov
xchg
cmpsb
out
dec
xorl
sarb
scas
and
mov
jl
xor
jae
mov
std
ja
aaa
mov
jb
mov
jp
lret
inc
mov
mov
sbb
or
loope
repnz
fistps
int
cli
popf
sub
xchg
or
clc
clc
push
pop
cmpb
iret
pop
xchg
mov
pop
leavew
mov
shlb
push
into
out
xor
mov
adc
mov
movsl
jecxz
push
out
ret
cmpsb
add
and
cmp
cmp
adc
sti
push
loopne
rcrb
mov
iret
shrb
xchg
push
push
dec
addr16
inc
in
mov
aad
icebp
mov
aaa
cli
cld
inc
lods
add
mov
push
xor
xor
cmp
cmp
inc
inc
jmp
bound
mov
enter
fstl
lods
ds
fsubr
push
adc
in
stos
inc
pushl
pop
sbb
gs
daa
lret
rcrb
fisubs
mov
mov
mov
fucom
jg
mov
add
cmp
call
fbstp
ss
mov
cld
clc
leave
shrl
jle
jo
inc
shl
pusha
pop
sub
push
fdivrl
lea
std
sti
in
cmp
jg
pop
add
lods
cmp
mov
cmp
fisttpll
lahf
lock
call
loop
popa
ss
xlat
pop
mov
call
not
sbb
das
push
inc
rcrl
mov
rol
iretw
cmp
imul
mov
imul
xchg
addr16
pusha
cmp
rdtsc
int
int
or
jmp
call
jecxz
test
pop
ret
dec
push
pop
cmp
mov
jp
popa
popf
add
cmp
cmc
cmpsb
add
xchg
sub
das
scas
lea
cmpsb
xchg
in
popf
push
mov
xor
mov
and
aas
sbb
scas
sbb
repz
xor
mov
out
or
push
movsb
cmpsb
mov
sbb
cmp
or
inc
insb
jae
pop
add
jo
push
pop
pop
clc
das
ljmp
sahf
repz
mov
sbb
insb
push
mov
jle
repz
sbbb
pop
mov
fistl
inc
mov
pop
mov
shl
pop
cmc
push
lcall
shr
xchg
call
test
xchg
mov
jne
pop
push
fistpll
sbb
push
mulb
rorl
jo
or
sbb
mull
mov
out
clc
xor
stos
push
aad
push
fstps
inc
sbb
add
sub
mov
jmp
shr
adc
pop
adc
pop
aad
jecxz
xor
mov
xchg
inc
xchg
fsubr
shll
out
mov
ja
rcll
xchg
dec
mov
out
mull
mov
fidivrl
add
rcl
cmp
dec
mov
aaa
push
mov
inc
orb
int
int
mov
sbb
xor
sar
mov
out
and
mul
sahf
shl
xchg
push
scas
outsb
mov
mov
mov
ss
lds
mov
sbb
out
fisubrl
jg
add
movsl
ljmp
add
test
loopne
jne
loopne
sti
hlt
sbb
cmp
movsb
jae
nop
lcall
subl
test
xchg
ja
mov
cltd
sarl
mov
sbb
loopne
rcr
outsb
stc
stc
mov
cmc
dec
xchg
cmp
xchg
xchg
fdivrl
inc
cmc
into
mov
inc
sbb
adc
sbb
fdivrs
mov
jno
adcl
adc
xor
jmp
push
inc
mov
mov
outsb
fsubrs
sub
dec
je
jmp
aaa
rcr
cmp
rorl
stc
pop
adc
aad
notb
jmp
out
adcb
mov
or
loope
movsl
sbb
or
aas
sub
dec
pop
add
sar
nop
sahf
sub
icebp
lret
cwtl
fs
mov
pop
mov
inc
mov
sub
sti
lods
cmp
mov
das
aam
js
push
fwait
insl
xor
lret
sar
jmp
fldenv
xor
cmp
aas
insl
test
mov
loope
insl
mov
mov
lds
jg
cmpsb
mov
lods
cmc
mov
jb
in
dec
lret
and
out
mov
jl
mov
sub
nop
adc
jp
in
mov
sub
mov
ja
std
add
loopne
push
mov
push
lea
icebp
pop
jae
mov
loopne
stos
push
cld
and
out
into
xchg
sbb
mulb
int3
add
adc
es
ds
cltd
in
lds
or
adc
rcll
sbb
pop
adc
xchg
test
in
stc
insl
push
xchg
mov
testl
into
xor
sbb
into
mov
xchg
adc
push
push
fwait
xchg
sub
jnp
cmp
xor
push
lds
lea
xor
sub
ret
cli
dec
dec
inc
sub
je
imul
imul
sahf
pop
jns
bound
sbb
aas
push
jg
mov
push
fists
nop
bound
jnp
cs
lods
shl
jns
and
mov
adcl
jmp
popa
push
xlat
lcall
pop
addb
mov
pop
inc
or
aaa
divb
and
lcall
into
mov
and
repnz
or
bound
cmp
lcall
and
mov
add
inc
xlat
js
test
mov
stc
flds
icebp
dec
es
xchg
fnsave
xlat
js
jecxz
mov
ror
mov
in
mov
popf
sbb
pop
outsb
or
cmpsb
packsswb
cmp
inc
adc
and
inc
mov
pushf
jle
paddusb
cmp
faddl
lock
mov
out
pop
mov
sbb
mov
mov
inc
push
pushf
jle
cwtl
push
sub
mov
inc
mov
xor
daa
aam
add
fistpll
fstpl
fmull
jne
repz
dec
cmpb
sarl
dec
jnp
je
fstl
xor
cmp
cmp
and
ret
faddl
nop
lea
sti
fs
push
cmpl
mov
mov
add
ljmp
outsl
ljmp
sbb
add
xchg
mov
sub
das
loopne
cmp
mov
sbb
leave
xchg
adc
cs
adc
push
stos
jnp
jae
or
insb
xchg
pop
pop
outsb
add
push
arpl
cwtl
xlat
sbb
mov
aas
sbb
pop
mov
mov
jecxz
pushf
xchg
adc
daa
andb
dec
add
out
es
adc
mov
xor
jg
lret
push
jmp
aam
in
repz
loope
sub
mov
ja
inc
loop
cltd
xchg
mov
mov
cld
xor
dec
lods
stos
push
adc
mov
mov
xchg
fstpl
xchg
gs
ja
ja
mov
and
jmp
pop
cmp
adc
xor
dec
decl
aam
xor
dec
mov
push
push
xchg
int3
xlat
aad
movsl
mov
cmc
dec
int
sbb
jp
or
mov
leave
mov
in
mov
lock
add
popa
xor
push
push
btr
insb
cltd
arpl
inc
or
push
mov
jbe
mov
mov
or
loope
movsl
sub
arpl
and
imul
int
lahf
scas
dec
mov
ljmp
mov
es
mov
push
jg
sti
xlat
or
addr16
jne
stos
js
es
fwait
scas
outsl
dec
mov
das
mov
ljmp
pop
inc
call
rclb
ja
inc
hlt
adcb
mov
add
push
and
pushl
mov
pushf
les
jp
xchg
shrl
hlt
fdiv
mov
in
shr
loope
in
loope
inc
push
cmpb
adc
inc
pop
and
scas
fisttps
mov
test
mov
cmpsb
sahf
dec
adc
inc
sub
add
and
adc
push
fwait
sub
sub
pop
jmp
cmp
cli
pand
jmp
mov
in
push
loope
push
imulb
jp
arpl
test
bound
daa
lock
arpl
js
pop
outsb
cmp
in
xchg
movlps
lret
mov
xor
lahf
ds
iret
mov
adc
test
mov
sahf
push
popa
aaa
outsl
xor
xor
fsubr
notrack
ret
sub
ficoms
lret
sub
insl
loope
lcall
mov
stos
xorb
and
mov
add
incb
scas
clc
stos
push
dec
dec
inc
sbb
jge
xchg
mov
mov
sbb
xchg
loop
lods
fwait
out
cmpsl
stc
aaa
xchg
sub
xor
xor
jle
jb
ljmp
sbb
cmp
xor
cwtl
dec
lahf
imul
pushf
jbe
or
push
fdivrs
pop
or
jnp
push
cs
sbb
add
sub
xchg
fidivs
sti
popf
loope
ds
fsubr
add
shl
mov
clc
loop
out
jge
andb
sub
andb
stos
push
lret
iret
dec
loop
je
cmp
repnz
cmc
mov
loop
lods
cltd
popf
in
arpl
push
mov
test
insb
xchg
add
pop
sbb
sbbb
aad
fwait
push
sbb
gs
push
jecxz
sub
ret
int
call
xchg
psubw
ljmp
add
mov
sub
mov
xchg
add
loope
sbb
cmp
arpl
ja
stos
vcvtph2ps
out
ret
insl
add
js
rdtsc
ljmp
push
push
cmp
cmp
mov
jnp
repz
mov
sub
jecxz
jmp
jo
mov
arpl
sbb
inc
popa
ja
stos
lock
jg
pop
jne
add
cmp
sub
inc
aam
push
cwtl
out
mov
pop
in
mov
mov
xchg
push
cmp
lret
or
mov
fdivp
push
pop
pop
in
xor
cmc
cld
jbe
outsl
das
insb
insb
ret
outsb
adc
lret
jne
aas
push
adc
js
jl
test
stos
xor
shrb
shlb
loope
cmc
aam
push
jae
xorl
adc
fisubs
fistl
pop
jge
bound
push
test
scas
cmp
jle
jmp
into
loopne
fptan
jb
mov
cmp
rol
mov
jge
idiv
mov
dec
push
xor
push
cli
add
add
mov
aad
inc
sti
mov
repnz
or
xchg
dec
cmovg
mov
ret
es
shlb
in
jns
and
notl
xor
mov
cmpsb
mov
jle
dec
sub
adc
sub
pop
hlt
mov
mov
add
jbe
adcl
arpl
dec
rorl
xor
ss
add
mov
jge
xchg
add
pop
inc
sbb
mov
rcl
pop
push
sbb
rol
ficomps
pop
inc
ljmp
mov
push
pushf
mov
lret
mulb
in
mov
orb
rcl
imul
ja
add
out
cmp
insb
xchg
xchg
je
jbe
mov
dec
adc
xor
inc
in
imul
cld
and
insl
xor
test
sbb
dec
test
arpl
jne
fistpl
push
xor
int
add
mov
test
inc
lcall
out
dec
pop
cli
outsb
inc
cmp
in
jg
jmp
lret
mov
mov
xor
arpl
lret
orl
cmpb
jae
lahf
sbb
outsl
jle
imul
add
gs
pop
in
xchg
xor
mov
aas
idivl
cwtl
inc
mov
inc
nop
jne
loope
push
mov
or
push
adc
lcall
mov
imul
jbe
pushf
mov
and
sub
int
xchg
cmpsb
xchg
cltd
xchg
scas
test
xor
call
call
cmpsl
jge
push
les
insl
dec
icebp
push
cmp
lods
jp
xor
lods
rorb
addr16
xchg
das
xor
sub
out
or
fldcw
aad
lret
insl
dec
rclb
jo
stos
dec
test
sarl
jl
push
xor
stos
mov
rorb
stos
add
mov
xor
orb
add
je
mov
bound
je
adc
fisubrs
sbb
mov
fstps
and
mov
pop
test
imul
sbb
and
adc
pop
push
fcmovnu
cmp
jl
popa
insb
cmp
cmp
ds
jmp
push
dec
mov
dec
inc
dec
inc
daa
shll
cmc
lods
jns
sbb
jle
dec
add
insl
in
mov
aad
int
idivb
mov
int
mov
push
js
mov
jge
adc
inc
pusha
sbb
mov
popf
clc
xchg
adc
out
aaa
lret
sbbb
push
adc
out
or
stc
pushf
adc
je
fdivp
lret
jge
lret
sbb
imul
daa
aam
fbld
sub
std
xchg
repnz
clc
fisubrl
inc
lret
daa
xchg
sti
les
js
movsb
jge
lea
jnp
addl
pop
dec
add
jp
mov
xchg
lods
mov
xchg
addr16
mov
stos
push
pop
and
sbb
out
xor
fiadds
pop
idivl
cs
inc
outsl
xchg
lcall
push
stc
pop
and
mov
lds
in
xor
dec
mov
adc
push
fnstcw
or
ret
push
bound
ficompl
stc
pop
ja
repz
dec
outsb
fsubr
call
stos
or
arpl
lret
cs
push
xchg
pop
shlb
repz
test
popa
loopne
repz
adc
fimuls
dec
lock
mov
adc
and
push
cmp
cltd
inc
nop
orb
and
adc
fcmovnbe
xchg
clc
incl
nop
fildll
sub
nop
push
inc
sbb
mov
mov
pop
adc
hlt
gs
roll
psubsw
shll
dec
jmp
pop
in
pop
jnp
push
mov
pop
mov
aam
cmpsl
sub
xor
sbb
pop
mov
nop
data16
ljmp
imul
mov
das
push
xchg
mov
mov
add
andb
pop
inc
or
mov
pushf
and
enter
mov
arpl
test
sarb
fcomps
test
pop
aam
sub
dec
shrl
js
mov
xchg
dec
sbb
or
icebp
adcl
div
add
popf
and
xor
movsb
pop
leave
loope
cli
inc
fidivs
xchg
xchg
mov
mov
lods
mov
ds
or
mov
pusha
testb
or
xchg
fsubs
leave
inc
repnz
or
xchg
jl
pop
jnp
jecxz
imul
test
or
mov
lea
add
adc
and
sub
iret
int3
push
popa
jae
jns
popa
xchg
call
or
add
es
pop
and
js
add
rcl
push
test
inc
jns
gs
repz
pop
push
in
xchg
xor
or
jae
sbb
jp
sahf
or
fdivrl
dec
aaa
arpl
insb
insb
and
inc
iret
cmp
and
pop
stos
out
nop
into
or
jne
add
daa
pop
push
xor
incb
sub
mov
jle
dec
cltd
pop
je
push
lahf
lret
subl
xchg
mov
mov
mov
scas
cmc
imul
cld
mov
jecxz
ja
pop
cmp
cltd
addr16
js
push
js
cmpsl
push
mov
adc
mov
dec
rorl
sub
jne
and
enter
and
add
mov
cld
test
in
lods
roll
dec
loopne
je
popa
leave
gs
aaa
mov
iret
mov
in
jmp
icebp
mov
in
mov
jg
pushf
scas
pop
sub
fnstcw
call
jo
test
hlt
cmp
in
out
push
fistl
lds
or
pop
push
stos
mov
pop
mov
mov
push
mov
call
in
adc
loope
dec
in
notl
into
dec
mov
dec
fstps
outsl
xadd
pop
test
mov
add
divb
popf
mov
sub
shl
orb
mov
xor
iret
push
push
push
stc
imul
sti
mov
or
inc
push
mov
aam
sbb
jecxz
jnp
mov
aaa
jg
and
sub
loope
movsl
fnstenv
mov
movsl
mov
stc
adc
mov
scas
sti
in
enter
cmpsb
addr16
bound
add
cmpsb
mov
dec
into
stos
imul
dec
sti
adc
inc
lods
sub
jecxz
push
inc
mov
icebp
dec
and
lock
jge
mov
inc
add
out
mov
int3
jb
fwait
repz
cmp
pushf
shlb
call
pop
ret
std
sbb
mov
stc
push
mov
mov
subb
bound
push
sub
icebp
push
add
jae
push
inc
popa
movsb
in
js
jo
out
mov
lea
js
mov
or
pop
xor
add
aad
fcomip
lret
mov
fnstsw
mov
push
cmp
add
stc
mov
in
mov
ds
or
push
rcrb
cmpsb
dec
test
jp
insb
push
ss
std
adc
push
add
push
and
sub
loop
fcomi
test
cmp
xchg
mov
mov
adc
shrb
add
mov
sbb
inc
out
xchg
pop
sbb
mov
dec
and
lds
outsl
and
in
fsubr
stc
test
jnp
or
movsb
push
scas
les
outsl
sbb
xchg
data16
sub
mov
jmp
fistpll
pop
jb
mov
mov
xchg
cmp
mov
jno
ficoms
cmp
mov
add
jg
or
fs
out
mov
mov
and
mov
or
jb
jecxz
pushf
lahf
push
lret
push
xchg
fdivs
xor
mov
lcall
jno
outsl
xchg
cltd
lcall
fisubs
xchg
iret
shlb
sahf
cmpsl
out
sub
inc
xchg
stos
sbb
cmp
nop
bound
push
sbb
sbb
movl
sub
cwtl
pusha
imull
fisubs
cmpsb
mov
pop
fstl
mov
jnp
cld
jae
fs
xchg
add
outsb
stos
or
and
inc
push
pop
and
jnp
xchg
dec
add
lods
xor
fidivs
je
jle
hlt
icebp
and
repnz
mov
es
sbbl
pusha
sub
adc
jl
shrb
dec
into
jae
inc
in
fstpl
in
mov
std
mov
xor
loope
lahf
stos
dec
subl
xor
jl
lcall
enter
mov
xchg
es
mov
push
test
sbb
fprem
mov
aaa
push
xchg
movsl
push
fcompp
inc
in
ret
lret
add
xor
sbb
mov
lods
push
add
enter
addr16
jnp
mov
mov
jo
fwait
mov
stos
sbb
mov
and
cltd
cld
xchg
inc
mov
jg
fstps
mov
cmp
pop
repnz
enter
and
nop
dec
push
sbb
sub
bound
mov
jle
or
inc
jmp
ss
adc
je
mov
or
fsubr
dec
fsubrl
xor
mov
sbb
sbb
jecxz
fisttpl
loopne
push
sti
aaa
cs
adc
call
and
lods
push
scas
and
xchg
mov
loopne
jp
stos
add
lds
sarb
dec
or
test
add
clc
mov
andl
sub
test
dec
cltd
idivl
xor
mov
test
adc
int3
pusha
test
lret
rorb
lret
add
ljmp
rcrb
inc
inc
popa
out
pop
xchg
xchg
pop
jecxz
pop
fsubrl
test
cmp
fildl
push
inc
push
pop
mov
into
push
fisubrl
roll
loopne
movsl
pop
sbb
and
cmp
push
sbb
push
cmp
cmp
cwtl
not
sarb
and
into
xchg
xor
idivb
jb
jp
aas
out
iret
sti
pop
movsb
fisubrs
sub
jge
call
pop
dec
dec
pop
fldcw
cmpl
test
scas
roll
push
call
xchg
or
and
cmp
mov
pop
int3
lea
popf
push
in
sub
movsb
pop
push
xlat
inc
and
mov
cmpsb
mov
lea
mov
or
mov
xchg
cmp
lret
dec
stos
sub
mov
push
mov
loope
es
mov
pusha
lods
icebp
roll
pop
xor
movsb
scas
aas
dec
sub
dec
loopne
cld
stc
push
adc
mov
jne
iret
dec
icebp
xlat
gs
leave
sbb
jns
dec
fistpll
dec
mov
out
std
out
and
sbb
dec
xor
lret
xchg
cmc
adc
mov
cmp
and
inc
xor
and
add
addl
dec
inc
and
xchg
lds
pop
int
push
lock
mov
push
xor
xlat
push
pop
fistpl
fs
sahf
movsl
xchg
adcb
imul
dec
and
sbb
pop
nop
sub
push
xlat
xor
dec
mov
lods
push
mov
sbb
int
mov
or
xchg
lods
inc
mov
dec
stc
xchg
rcl
mov
out
adc
adc
jecxz
mov
insl
das
loopne
aad
jmp
jae
mov
sbb
shl
and
and
lods
les
dec
je
ja
push
mov
pop
jnp
test
daa
jbe
or
xor
loope
jb
pop
or
jp
mov
iret
daa
inc
lahf
popa
mov
add
out
aad
mov
popf
clc
mov
adc
sar
vpunpckhdq
movsb
jecxz
loope
mov
xchg
aas
ljmp
test
push
jg
add
inc
icebp
push
in
jg
int3
jg
addl
ficoms
dec
pop
cmpsb
repz
sub
add
imul
push
cmp
or
jecxz
and
iret
sbb
outsl
push
dec
aas
data16
ss
xchg
outsl
and
pushf
out
out
enter
dec
movsb
call
cs
xlat
adc
jo,pn
pop
xchg
test
xchg
js
and
pop
xchg
mov
mov
push
push
xor
les
mov
mov
das
pushl
inc
xchg
imulb
adc
adc
xchg
inc
js
mov
xor
inc
mov
xchg
cli
pop
or
aam
sub
push
pop
dec
pop
mov
je
leave
in
jl
fidivrl
jnp
xchg
sub
cmpsl
hlt
fldcw
out
pop
push
lods
or
mov
jnp
daa
and
jno
jp
xchg
push
add
mov
mov
or
sub
bound
xchg
xchg
mov
cltd
outsl
jg
or
fistps
scas
pop
xchg
fildl
data16
pop
add
mulb
lock
inc
pusha
jns
imul
mov
jb
push
clc
rclb
pushf
sahf
lods
xor
fisubl
stos
or
sar
lcall
and
xchg
sub
incl
fldenv
or
or
aam
jle
dec
mov
mov
or
mov
loope
ret
pop
push
add
movsb
pop
and
push
cld
outsb
jg
push
mov
sti
jae
ja
cs
gs
sahf
rorl
movsb
mov
add
sbb
iret
or
push
push
cmp
adc
dec
insb
mul
dec
sub
mov
mov
in
stc
stos
or
sbb
mov
sti
jmp
mov
lock
test
inc
imul
cmpsb
cmp
adc
push
in
jno
sarb
lcall
fmulp
pop
fsubl
rcrw
out
popa
dec
in
rcrb
ja
insb
xchg
cmp
mov
mov
lock
inc
jb
mov
cmp
push
or
jnp
or
sbb
mov
repnz
fiadds
mov
sub
aam
mov
shll
lds
inc
push
or
cli
or
clc
xor
in
aaa
lock
loop
lret
popa
pop
ja
jmp
xchg
pop
sbb
jecxz
and
or
cmp
adc
aam
imul
pop
sarl
mov
dec
and
or
test
mov
pusha
dec
mov
leave
sub
mov
fcom
inc
adc
popf
xchg
pop
cmp
mov
in
fcoms
jns
adc
and
jno
ss
inc
fcoms
fwait
or
pop
out
push
add
push
dec
add
and
subb
test
inc
pop
jno
int
and
into
mov
mov
repz
mov
jecxz
mov
lea
mov
das
test
sbb
cltd
mov
enter
dec
enter
movsb
mov
popf
out
jmp
rol
dec
pop
in
ret
pop
stc
or
jmp
pop
sarb
jae
jle
cld
or
mov
push
cltd
and
or
sbb
cmpsl
mov
shlb
pushf
fstpt
call
mov
dec
sub
sbb
xchg
dec
out
fmuls
pop
fldl
aam
and
push
pop
dec
sub
orb
gs
ds
sub
pop
sbb
lret
push
mov
stos
negb
inc
mov
fdivrl
test
aaa
mov
cmpsb
xchg
and
add
mov
mov
and
inc
push
mov
iret
push
cld
movsb
lahf
lock
call
mov
ja
in
aas
jecxz
jb
or
mov
jno
xchg
lods
test
xchg
movsl
xchg
adc
mov
cmpsl
mov
jno
outsb
sarb
sbb
rcl
xor
adcb
dec
frstor
movsb
pop
dec
xor
test
mov
sub
sbb
sti
les
add
cwtl
into
lods
dec
xor
incl
daa
leave
arpl
inc
addl
call
jecxz
mov
xchg
fwait
mov
in
sahf
mov
cmp
stos
sub
stos
bound
lret
bound
pop
jmp
inc
daa
popf
xor
pop
imul
add
pcmpgtw
addr16
daa
xchg
lods
add
push
add
inc
out
out
movsl
cmpsb
xor
dec
aas
mov
push
dec
movsl
notl
mov
fdivp
add
cld
jo
loope
and
das
lret
add
out
push
dec
rcrb
jle
call
icebp
xchg
pop
jnp
cmp
stos
js
jnp
push
and
incl
xor
add
inc
push
imul
je
mov
test
and
adcl
inc
hlt
lahf
sub
jo
sbb
lahf
test
xchg
test
jno
push
xchg
les
leave
adc
mov
bound
push
fiaddl
leave
pusha
ljmp
xchg
fwait
imul
insl
mov
sub
jge
mull
lcall
lods
mov
hlt
xchg
add
stos
pop
pop
loope
dec
xchg
enter
push
out
cld
push
and
loopne
adc
dec
fs
pop
sbb
or
push
jecxz
adc
xor
movl
mov
adc
push
sub
sbb
pop
rorl
outsl
ss
add
xchg
push
rcl
dec
movsb
adc
sbb
stos
inc
movsb
cmp
dec
jl
sub
idivb
push
mov
pushf
push
xor
lods
pop
fistl
das
cmc
pop
pop
fistpll
adc
xchg
push
bound
inc
sub
push
int3
dec
test
aad
mov
mov
and
push
adc
push
es
xor
loope
mov
mov
add
mov
mov
in
mov
out
fisttps
sub
sbbb
das
dec
pop
push
repnz
dec
fldenv
jmp
dec
push
jecxz
ss
push
pop
stc
fcomps
repnz
shlb
fcmovnu
ss
lds
mov
or
add
add
push
scas
and
and
mov
cmp
das
loopne
les
jbe
mov
int
nop
adc
inc
pushf
daa
imul
adc
push
sti
mov
imul
cmpsl
or
jne
fistps
cmp
je
xor
mov
cltd
pop
cmpsl
add
mov
pop
test
xchg
jmp
ret
or
mov
fcomip
mov
jp
lret
inc
rorb
jno
cmpsb
out
sub
popf
les
inc
lret
loopne
out
jp
andl
insl
and
mov
sub
negb
inc
ds
mov
jbe
lock
lds
dec
std
out
cmpl
sub
outsl
mov
leave
push
push
xor
jp
loope
mov
push
dec
repz
push
mov
push
call
add
test
mov
dec
enter
pushf
cmp
xchg
add
xor
sti
xchg
sbb
xchg
and
jb
pusha
test
adc
cwtl
out
mov
adc
xor
pop
cmp
mov
repz
sbb
dec
dec
lret
jl
push
sahf
int
inc
insl
sub
loopne
shll
and
jmp
jecxz
ret
jg
sbb
pushf
dec
clc
fwait
pop
shl
mov
dec
lock
dec
sbb
repz
loop
mov
loop
dec
push
test
inc
mov
or
xor
xchg
jmp
into
test
jge
xor
cld
mov
jl
xchg
mov
xchg
adc
dec
into
sub
mov
mov
aaa
xchg
push
push
inc
cmc
push
mov
mov
pushf
mov
push
les
pushf
mov
jo
jge
lods
rcll
mov
mov
mov
sbbb
gs
stc
cmpsb
or
inc
cmc
mov
sub
lods
adc
and
scas
xchg
push
out
scas
and
pusha
mov
addl
outsb
jnp
ja
cli
sub
std
dec
fpatan
bt
insl
cmp
test
aad
pop
adc
mov
jne
orl
out
xchg
jno
ret
jne
shr
lret
push
mov
push
cltd
neg
test
xchg
pop
add
or
jo
shlb
es
out
outsb
inc
shlb
mov
leave
imul
sbb
jl
dec
loopne
cli
fsubr
pop
outsl
sbb
inc
arpl
add
pop
aas
and
sub
push
add
cs
fwait
mov
vxorpd
dec
je
ret
insl
xchg
sarb
daa
add
outsb
mov
sub
lret
adc
sbb
lahf
fcompl
sbb
jbe
mov
rorl
xchg
add
mov
mov
add
idivb
in
fwait
jecxz
mov
fcmove
mov
outsl
outsl
push
cmp
xlat
adc
mov
jge
xor
aam
sbb
adc
and
dec
sbb
shll
xchg
sti
adc
test
out
fdivs
iret
js
pop
xchg
stos
jnp
push
add
cli
sub
call
dec
cwtl
push
cmpsl
xchg
jge
jp
jecxz
loopne
je
xlat
mov
and
jg
repz
clc
cmpsb
call
push
fbld
divb
jmp
pushf
loopne
sbb
fcoml
pop
add
mov
mov
dec
xor
ret
mov
inc
xchg
mov
sti
dec
mov
push
pop
stos
dec
jmp
add
sti
and
pop
pop
xor
add
andb
data16
pop
pop
and
mov
scas
cwtl
leave
ret
fwait
push
inc
push
cmp
xor
adc
push
cmpb
mov
sbb
add
cwtl
xchg
movsl
xchg
adc
cmp
and
cwtl
push
push
or
jne
ret
adc
out
nop
insb
pushl
lods
jb
test
jl
dec
inc
movsb
bound
es
movsl
cmp
dec
inc
enter
push
lods
jmp
cmp
adc
addl
sahf
inc
pop
or
fsubs
cmp
je
mov
mov
push
inc
cmpsb
and
outsl
push
jae
lds
adc
cmpsl
aam
loopne
mov
std
fsubrp
stos
cld
dec
mov
aaa
fs
jg
addr16
icebp
mov
xchg
sbb
or
cmp
in
sub
es
xor
lock
shll
and
jge
pop
xchg
sub
into
adcb
pusha
cmp
cld
cld
cmp
add
push
cmpsb
mov
scas
lea
and
pop
push
adc
sub
dec
movsb
xchg
fdiv
inc
fnstsw
psubsb
push
mov
scas
pushf
mov
scas
xor
out
pop
mov
xchg
lret
jb
movsl
pop
pop
imul
std
rcll
sub
out
outsl
in
and
hlt
push
jne
sub
mov
push
xchg
pusha
push
lods
pusha
lea
arpl
sub
testl
test
scas
cltd
repz
dec
cmp
sub
sbb
dec
inc
sub
addr16
mov
in
or
sub
int3
fs
rcrb
jb
sti
popa
mov
xlat
sub
sbb
aas
mov
add
repz
or
daa
dec
mov
adc
jae
lret
inc
loopne
or
stos
ret
lcall
cmp
shlb
xchg
ror
mov
pushf
inc
ret
mov
cltd
or
dec
xchg
push
adc
and
fcomps
inc
or
lcall
sub
addr16
out
or
push
dec
ja
ret
pushf
jecxz
xchg
jbe
ss
pop
push
ret
jno
mov
inc
lret
icebp
clc
sarb
stos
lods
divb
rol
icebp
push
xlat
stc
stos
lret
mov
and
jle
pop
out
push
cmp
cmp
push
lret
push
or
aam
adc
push
testl
in
mov
out
outsl
dec
cs
or
lods
int
shr
in
mov
leave
add
push
lcall
mov
aad
add
movb
aaa
mov
shlb
cmp
es
loope
mov
fadds
mov
mov
out
test
aam
cli
lret
fdivl
pop
imul
lahf
pop
mov
mov
mov
imulb
in
xchg
push
xor
jns
out
ret
imul
mov
dec
mov
jne
test
loope
push
sbb
dec
xlat
mov
pop
mov
cmpsl
mov
dec
mov
test
mov
mov
shl
ljmp
mov
push
les
mov
push
cmp
xchg
push
pop
je
mov
addb
gs
jp
adc
sti
mov
sarb
iret
jl
test
movsb
leave
adc
sub
push
pop
pop
icebp
push
or
mov
popf
loopne
mov
popw
ja
sub
mov
push
rolb
rcl
lcall
sti
lret
inc
sbb
inc
push
push
in
lret
aaa
jo
dec
loop
lea
dec
out
or
jge
xchg
bound
push
ds
addr16
inc
or
lock
xchg
rcll
lret
and
push
sub
pop
and
push
fsubs
in
pop
rcrl
scas
cmp
in
cwtl
mov
loope
mov
sbb
popf
and
xchg
jp
insb
popa
sahf
lret
hlt
ja
enter
jecxz
into
jo
xorb
inc
jl
out
lret
bound
test
fwait
jno
aaa
xlat
scas
fwait
je
daa
shll
adc
fsubl
add
insl
add
push
pop
imul
sub
pop
dec
icebp
jae
push
ret
mov
push
clc
push
sub
cmpsl
sub
or
xor
xchg
add
movsb
mov
pop
mov
sub
push
mov
enter
loope
sti
mov
mov
in
inc
clc
jb
test
stos
xchg
adc
push
and
test
cmp
sarb
xchg
mov
shll
imul
ret
jp
scas
stc
es
mov
push
mov
dec
mov
cmp
xchg
push
adc
stos
and
rorl
xor
mov
imul
scas
push
xchg
inc
sbb
in
cmp
movb
shl
movsl
call
mov
mov
push
outsl
loope
test
aad
and
lea
push
mov
cmp
jmp
xchg
dec
mov
or
push
push
shl
or
call
insl
lods
popa
repnz
inc
cld
push
push
mov
popa
dec
shlb
insb
fadds
xchg
sub
out
pop
and
xorb
in
jne
sbb
cmpsb
dec
mov
cltd
dec
pushf
fstps
xorb
cld
pop
ds
mov
cmpsl
push
sbb
add
push
cs
insb
and
mov
jg
add
jno
cld
outsb
or
mov
ss
js
nop
mov
test
pop
test
dec
clc
push
outsl
cmpsl
popa
xchg
sbb
pop
sbb
lea
mov
xlat
mov
and
jno
stc
dec
in
add
jo
test
pop
sub
xor
mov
xor
push
popa
xor
aas
ljmp
dec
test
cmpl
jge
jge
lock
les
lret
clc
or
pop
mov
pop
inc
mov
out
push
dec
pop
mov
gs
mov
lock
stos
fisttpl
and
cwtl
mov
or
inc
jne
imul
popf
and
loope
call
lret
or
push
and
int3
aas
mov
mov
aaa
mov
ss
adc
or
imul
jo
and
xchg
lret
aam
addr16
leave
pop
lds
ja
jae
movsl
mov
jns
aad
pop
fisubl
mov
mov
out
xchg
sbb
lret
jmp
subb
add
notb
mov
out
or
xor
jmp
orl
pop
lods
js
and
test
inc
cmpl
mov
movsb
cmpl
mov
or
xor
lcall
lods
test
stos
in
shl
in
cwtd
stc
out
jnp
pop
ret
insl
outsl
pusha
fcmovbe
dec
mov
pop
xor
add
jns
xchg
mov
mov
adc
jns
notl
out
push
and
je
or
mov
popf
pop
loopne
stos
aaa
adc
nop
ret
fiadds
fmulp
push
inc
mov
andb
call
xchg
cs
adc
rcrb
sub
push
in
repnz
cmp
mov
enter
fwait
movsl
icebp
or
mov
jnp
cmc
loopne
xorb
cmp
or
or
popa
mov
push
dec
ret
nop
mov
les
in
int3
inc
push
jns
aad
push
or
dec
add
iret
sub
pop
cmp
and
cli
out
xor
fbstp
cmpb
mov
gs
xchg
mov
adc
call
and
mov
pop
xor
je
or
xor
push
adc
jg
xchg
jbe
shll
stos
jnp
mov
push
lret
add
jge
mov
jle
movb
aam
ret
and
test
push
fsts
subl
lret
xor
testl
repz
mov
sub
lahf
insl
mov
js
mov
inc
push
xchg
stos
fucom
xor
arpl
ret
in
shlb
push
pop
mov
stos
cmp
dec
popf
jne
repnz
movsl
inc
jbe
cmp
cmpsl
sbb
mov
into
in
and
inc
sahf
mov
pushf
pop
lcall
adc
mov
mov
mov
outsb
out
out
fistpl
jbe
jne
and
fldz
xchg
outsb
test
sahf
and
movsl
in
aaa
sbb
clc
data16
jbe
push
mov
pop
or
cld
jecxz
dec
out
add
cmp
je
cwtl
test
scas
out
or
jnp
push
lret
mul
mov
sub
mov
xchg
out
mov
jecxz
ret
sub
add
mov
sub
mov
sbb
shrb
dec
sub
xor
jno
xchg
sub
aas
imul
lahf
lds
mov
negl
clc
imul
pop
fisubl
je
mov
lea
cwtl
ret
mov
ret
xchg
sbb
gs
inc
js
xor
and
fildll
cwtl
hlt
or
insl
sub
ss
inc
lret
dec
xchg
cld
pop
idiv
and
adc
push
cmpl
sbb
test
in
dec
push
fsubr
dec
xchg
rorb
sub
pop
adc
divb
push
mov
loopne
mov
mov
mov
pop
in
dec
jecxz
jl
and
loopne
mov
sub
xor
sahf
pop
inc
mov
pushf
or
push
cmpb
lods
jge
cmp
mov
pop
sbb
lods
rcr
pop
jg
int
jo
loop
push
shrb
cmp
mov
cmpsl
push
aas
inc
aaa
and
mov
push
cmpb
xchg
mov
mov
int3
test
push
mov
out
into
pop
jp
push
jnp
cs
addr16
xchg
stos
imul
jne
int3
out
sahf
bound
nop
loop
dec
mov
mov
and
fcmovu
mov
test
cs
sub
cmp
xor
mov
pop
xchg
inc
je
loopne
jne
jp
hlt
or
push
dec
sub
mov
push
add
cld
roll
test
mov
int3
sbb
cld
push
jl
pop
cmpb
cltd
fwait
movsb
loop
scas
cmp
gs
xor
sub
xchg
fsubs
std
cmp
call
dec
ja
test
je
ja
dec
les
fistps
popa
rorb
sub
pop
in
mov
lods
fistl
push
sbb
pop
pop
mov
jp
lcall
jecxz
cld
jbe
xchg
inc
cmpsb
push
pop
xchg
push
gs
dec
arpl
aas
jmp
mov
adc
mov
pop
xchg
inc
int
lds
in
loop
cmp
popa
pop
xor
pop
push
icebp
push
mov
jg
adc
jg
xor
test
jnp
sahf
pop
scas
imul
push
dec
out
jno
inc
test
je
insb
addl
push
shrl
leave
xchg
addr16
mov
ss
roll
sbb
mov
xchg
lds
shll
cmp
lods
aas
xorl
jmp
or
in
lods
fwait
inc
cs
aaa
bnd
mov
push
adcl
insl
sbb
mov
shlb
mov
jae
mov
rcrb
sub
sub
movsl
pop
cmp
sbb
mov
fdivrl
rolb
mov
pushf
ds
outsb
pop
jle
clc
cmp
adcl
sbb
sbb
int3
or
cli
packuswb
mov
mov
sub
or
rcrl
jno
jmp
popf
aaa
in
and
negl
int
out
and
jo
stc
int3
cmpsl
cmpsb
jns
pop
icebp
pop
jb
fadds
pop
mov
push
xorb
out
adc
adc
pop
push
mov
mov
pop
into
rolb
das
mov
loope
xor
push
mov
in
or
test
push
movsl
or
and
xor
or
test
push
xor
cmpsl
cmp
jmp
mov
jecxz
aaa
jae
pop
inc
lds
and
mov
mov
add
mul
ljmp
popf
mov
mov
xchg
arpl
hlt
gs
push
scas
aam
cmpsb
inc
add
sbb
xchg
inc
das
lret
mov
sub
loope
mov
and
jo
ds
push
mov
lock
subb
jne
lods
lret
lahf
pop
xchg
arpl
scas
dec
movsb
mov
int3
xchg
mov
in
push
jmp
aas
inc
jb
mov
imul
sub
lret
lods
adc
pop
mov
outsb
fdiv
iret
aad
xchg
das
jmp
sbb
mov
inc
cmpsb
lds
push
lods
mov
mov
and
jge
popa
xchg
inc
pop
and
nop
test
push
sub
cmp
arpl
ja
mov
data16
test
imul
mov
mov
adc
pop
fcmovnb
xchg
push
ss
rcrb
aaa
xchg
lods
push
frstor
and
js
iret
inc
jnp
or
aam
xor
insl
and
out
mov
add
scas
into
mov
adc
and
cmpsb
mov
js
flds
dec
cs
mov
data16
std
shr
test
fnstcw
mov
xchg
pushf
pushl
lods
inc
cmp
int
push
test
sub
mov
lret
rcrl
jno
add
lock
mov
jb
outsl
xchg
test
xor
movsb
shll
jo
xor
aam
jnp
and
in
jge
out
inc
mov
push
sub
stos
daa
sub
daa
pop
add
movswl
xor
push
stos
ja
xor
cmpsb
mov
lds
cmpsl
fisubs
lods
add
fadds
and
stos
mov
jmp
std
icebp
movsl
out
psrad
xchg
pop
fidivs
scas
clc
sbb
aas
push
insl
mov
repz
mov
test
cmp
rcr
nop
out
sbb
push
inc
mov
or
icebp
enter
ljmp
daa
movsb
fwait
outsb
mov
sub
ljmp
xor
mov
loop
mov
xchg
in
cmp
and
xchg
out
arpl
pop
iret
or
inc
xor
jecxz
cs
sub
jno
ret
pushl
and
jo
push
dec
in
fstpt
lea
in
sbb
sti
inc
sbb
push
cmp
push
pushf
cmp
cld
fnsave
fwait
jg
aas
lret
adc
popa
adc
and
or
adc
fsubs
inc
inc
loopne
test
aas
xchg
jno
out
lods
mov
sub
xchg
jg
adc
xorl
incl
or
outsl
call
jnp
add
xchg
mov
adc
jae
out
adcl
mov
inc
fucom
shll
or
sbb
xchg
lock
adc
daa
jae
xchg
mov
inc
adc
cli
lret
ljmp
insl
fiadds
in
mov
jge
dec
outsb
sbb
testb
sub
rcrb
push
adc
xor
fists
aam
mov
aad
sbb
dec
add
xchg
pop
jecxz
xchg
aaa
imul
scas
jno
stc
fstpt
lret
and
sbb
loop
sbb
rcrb
cmp
lods
lock
cld
in
mov
je
xchg
inc
pop
and
sbb
insb
lret
cli
inc
push
test
dec
stc
push
jne
mov
testb
pop
mov
dec
push
iret
mov
ss
inc
aam
fisubrl
sbb
lds
inc
roll
push
rolb
inc
pushf
fisubs
mov
call
xorb
addl
mov
and
int3
aam
xorb
xchg
dec
inc
sub
mov
sub
sti
cmp
ret
dec
out
xor
pop
rolb
xor
scas
popl
ja
add
out
ljmp
int3
mov
aas
call
mov
les
cmpsb
pushf
mov
sahf
movsb
cltd
jnp
outsb
xor
ficomps
and
push
xchg
xchg
adc
cmc
mov
inc
and
dec
lock
fldenv
or
lods
xor
sbb
dec
mov
aad
push
mov
ret
and
and
xor
xor
mov
or
xchg
and
stc
movsl
out
stc
mov
pop
xchg
ret
xchg
jge
addb
mov
gs
cmp
xchg
add
xchg
mov
adc
pop
lock
xor
mov
lods
pop
mov
nop
dec
add
mov
in
adc
dec
aas
fimuls
xchg
divl
cld
inc
mov
iret
sbb
insb
aad
sub
dec
sbb
hlt
insb
pop
insl
iret
repnz
cs
lret
and
sbb
xor
push
arpl
dec
das
mov
psraw
hlt
imul
and
or
in
imul
mov
or
cmc
fwait
jecxz
adc
pop
xchg
dec
cld
iret
sbb
push
xor
push
popf
test
cmovs
mov
mulb
out
xchg
push
pop
adc
mov
repz
push
mov
push
movsb
outsb
mov
xor
jno
add
mov
xor
pushf
fsubrp
sbb
lock
je
push
ret
mov
xchg
xor
push
sti
loop
jl
scas
add
mov
addl
jle
sti
mov
inc
pop
out
lds
out
inc
movsb
in
inc
sub
push
dec
daa
movsl
dec
xchg
push
je
mov
add
insb
xchg
insb
negb
scas
xchg
lods
inc
pop
dec
sbb
push
outsl
popa
add
and
sbb
dec
xlat
mov
out
xchg
dec
imul
cli
in
test
push
or
stc
push
jmp
sbb
hlt
inc
mov
filds
xor
push
dec
shrb
mov
aam
xor
hlt
mov
and
imul
xor
std
push
inc
lss
push
mov
inc
stos
pop
add
jne
lret
rolb
dec
test
ret
and
stos
hlt
ljmp
cli
mov
mov
dec
xchg
sub
jge
std
sbb
popf
sub
sub
xchg
sbb
adc
xchg
mov
sbb
into
je
sbb
test
mov
mov
mov
mov
push
xchg
mov
cmpb
pop
nop
rorb
or
roll
add
adc
es
jo
sti
xor
out
stc
scas
stos
test
shlb
xor
scas
in
popa
test
inc
add
mov
add
movsb
adc
mov
mov
mov
sbb
xor
pop
sti
fcmovu
popa
sbb
xor
xchg
enter
les
test
repz
sbb
in
stos
mov
insl
pop
add
stos
and
adcl
mov
mov
std
xor
test
sbb
sbb
mov
cmp
pushf
ffreep
push
jl
scas
scas
and
cmp
call
xchg
and
insb
cmp
sbb
jmp
lea
ret
test
in
cmp
sub
mov
dec
inc
and
cli
andb
jle
mov
inc
rcrl
stos
aam
jg
inc
jge
jge
xchg
xor
dec
push
push
jge
lods
push
repnz
adc
fiaddl
leave
lods
push
add
or
or
insl
dec
fisubs
cltd
ficompl
mov
and
inc
cmp
sti
jg
xor
test
stos
jnp
loopne
aam
lods
ss
mov
cmpsl
repnz
or
jb
add
push
fildl
addr16
rcl
and
in
mov
sbb
cs
daa
mov
icebp
xchg
mov
cmovbe
mov
out
push
sti
insl
aaa
add
int
xorl
cltd
cmp
lret
mov
lcall
clc
jns
jmp
mov
imul
hlt
shl
icebp
out
sbb
jge
cwtl
pop
addr16
lods
popa
daa
adc
pop
and
jnp
imul
adc
pop
lret
add
inc
fildll
insl
dec
popa
push
outsb
xchg
dec
sub
test
ficomps
sub
loopne
push
mov
std
mov
pop
fdiv
test
sub
xor
je
ljmp
sahf
aaa
ficomps
imul
aam
andb
movsl
mov
insb
pop
jnp
movsl
jns
adc
ja
hlt
pop
push
mov
clc
js
jo
jmp
cmp
scas
sub
test
cmc
mov
outsl
shr
and
xchg
cmc
mov
adc
xchg
imul
dec
les
popa
inc
mov
test
pop
inc
int
in
add
mulb
mov
lea
ror
jns
scas
jmp
dec
test
dec
inc
lods
in
and
mov
dec
shl
lret
aad
rolb
xchg
loop
imul
cmp
leave
daa
inc
ss
movsl
push
add
fs
mov
or
ljmp
iret
jg
pop
sbb
ss
hlt
outsl
pop
dec
lret
xor
sbb
jo
inc
std
jne
iret
push
xchg
fistps
and
mov
js
into
rorl
in
gs
and
sti
jecxz
jbe
cltd
cmpsb
cmp
inc
xchg
cmpsl
outsb
addr16
mov
jmp
mov
mov
lahf
add
addb
mov
cltd
lcall
int
std
jl
dec
xor
mov
sub
mov
adcl
sub
push
mov
cmp
in
mov
sbb
mov
sbb
and
jae
test
roll
dec
popf
in
pop
mov
aaa
out
push
push
pop
mov
mov
je
pushf
fdivrl
repz
inc
scas
stc
subb
xor
cmp
or
push
ljmp
xor
or
or
in
push
cmp
test
xchg
push
aas
or
mov
popa
push
addl
jl
gs
inc
sti
or
pop
rorl
or
test
andb
movsb
and
fimuls
adc
cmp
repz
jle
lret
out
xor
outsl
lock
inc
sub
jg
push
sbb
ljmp
mov
mov
mov
lcall
nop
pusha
jns
xor
push
cmpsl
sbb
dec
xchg
popa
sub
push
mov
mov
or
dec
sub
push
out
push
ss
loop
cmpsb
lds
xchg
mov
lret
shrl
into
sahf
gs
addr16
stos
or
inc
jle
aaa
mov
shl
pop
int3
fsubs
je
push
jp
dec
jle
sub
dec
adc
adc
dec
adc
cld
addr16
push
push
push
push
fstpt
xchg
inc
xchg
sbb
lds
les
jmp
mov
in
insb
jle
loopne
lods
cwtl
out
fsubs
cmp
mov
adc
shrl
lcall
adc
hlt
or
push
into
and
inc
jle
into
lcall
or
pop
lea
inc
lock
add
lret
cmp
sub
jb
pop
mov
inc
inc
push
psllq
dec
add
and
sbbl
push
scas
dec
or
mov
cmc
mov
jl
andb
adc
ljmp
jb
scas
jbe
cmp
mov
add
xacquire
sub
dec
pop
mov
cmpsl
sbb
xor
xor
jp
lock
mov
jmp
aad
mov
mov
enter
je
popa
and
fwait
adc
cmp
xlat
icebp
daa
adc
leave
cli
push
pop
mov
sahf
lods
and
jae
or
loope
mov
xchg
xchg
mov
mov
dec
iret
and
mov
or
inc
mov
inc
les
jge
lods
ja
xlat
scas
scas
adc
sahf
popa
adc
xchg
leave
dec
xchg
sub
xor
aam
xor
fcomps
xor
js
mov
outsb
sbb
dec
cmpsb
pusha
les
inc
adcl
pop
cmp
mov
and
and
repz
push
xchg
dec
push
fs
pop
mov
sub
jo
test
cltd
cmp
sub
in
jmp
xchg
push
xor
sbb
repnz
call
sti
mov
cmpsb
jmp
sbb
or
xchg
imul
ds
cmp
divl
cmpl
lret
in
clc
mov
xchg
insl
stc
mov
js
ljmp
sub
test
cwtl
inc
arpl
jmp
adc
rcl
and
or
add
adc
jmp
cmc
mov
sbb
sbb
inc
cmp
jo
divb
stos
and
scas
and
xlat
stos
xchg
jbe
fsubp
in
int3
mov
es
ja
mov
sbb
mov
mov
lcall
mov
in
insl
jmp
mov
rcr
int3
ret
push
pop
repz
icebp
xor
pop
fdivl
aad
dec
adc
int3
or
pop
movsb
es
in
out
inc
inc
xor
int
stos
sub
cmp
sahf
lods
into
and
sub
in
cmp
jnp
pop
stos
into
shl
sub
pop
lods
lods
mov
mov
cmp
lahf
je
sarb
push
test
and
aas
mov
jae
loop
int
adc
dec
shr
inc
in
lods
add
pop
shl
ljmp
pushf
sbb
push
ret
lods
out
inc
add
gs
inc
fisttpl
lret
jl
sbb
sub
adc
mov
inc
pop
repz
stos
daa
out
pushl
cli
mov
movsb
fidivs
pop
jl
push
mov
jns
adc
sub
cld
pop
dec
imul
outsl
adc
mov
es
push
mov
mov
jne
pop
xor
test
sbb
add
stos
add
sahf
or
or
and
lods
out
shlb
cmp
clc
inc
cmc
lods
cmp
xor
sbb
dec
gs
jno
mov
aas
mov
push
mov
push
push
cld
loope
sub
mov
mov
jl
inc
mov
sbb
or
mov
iret
stc
testl
mov
push
mov
cmpb
filds
ds
push
mov
stos
fdivrs
mov
shll
imul
sub
addl
aam
jbe
dec
pop
xchg
pusha
cli
fdivrs
outsl
ja
adc
out
call
cmpsl
out
inc
sbbl
ret
and
shr
das
sub
sbb
in
jae
pop
pop
clc
addl
push
jo
in
sbb
xchg
dec
inc
jbe
lea
outsl
out
inc
aas
sbb
jecxz
adc
imul
push
xchg
inc
add
or
mov
push
and
aaa
fs
lcall
nop
les
mov
xor
dec
pop
cmp
push
roll
jmp
loopne
xorl
jl
ja
xor
mov
cmp
jecxz
aad
push
jle
adc
test
scas
adc
add
inc
dec
es
fwait
insl
jbe
adc
or
mov
lahf
cmpsl
sub
add
jo
daa
movsb
shll
add
repnz
sub
gs
dec
es
xor
and
mov
jge
jae
add
jb
mov
jno
in
js
jle
xor
pushf
add
fcmovu
mov
pop
add
jle
push
cltd
leave
adc
xor
pusha
jbe
push
sub
cmp
and
popl
outsb
aaa
jmp
das
mov
call
fsubp
pushf
lock
inc
add
cli
or
mov
arpl
push
inc
ficoml
cltd
sub
adc
stos
mov
add
sub
lcall
jb
repz
loop
fistl
mov
xlat
sbb
xor
cmpsb
iret
mov
mov
scas
std
mov
add
pusha
dec
pop
jne
sbb
sti
pop
mov
fidivrl
mov
sbb
lcall
xchg
stos
outsb
cmp
xor
cmp
jl
xchg
rorb
cmc
imul
mov
mov
inc
push
add
cmpsb
jae
xchg
cltd
xor
aas
aam
jns
or
out
shll
xchg
fdivrl
jl
mov
les
insl
pcmpgtw
sar
pop
xlat
add
mov
add
loopne
sub
ret
ljmp
popf
cmp
fldl
mov
dec
aam
test
fistpl
jnp
pop
push
pusha
into
mov
adc
xor
insb
sbb
loope
stos
insb
call
test
pop
push
mov
jecxz
mov
in
ds
arpl
movsb
cmp
mov
mov
push
dec
hlt
pop
adc
jge
in
cli
mov
pushf
insb
cmpsb
enter
movsb
dec
mov
stos
stos
or
shr
adc
insl
imul
push
addr16
pop
mov
cmp
push
jo
daa
xor
clc
cmp
or
es
loopne
mov
cltd
test
pop
lcall
sahf
xor
call
adc
push
jg
or
sub
xor
in
cmp
movsl
sbb
das
jle
push
inc
pop
mov
out
clc
push
in
push
clc
aam
orb
loopne
stc
cmp
test
sub
imul
popf
scas
pop
clc
leave
mov
dec
cmp
lret
dec
sub
xchg
cmp
lock
add
jg
mov
hlt
or
adc
adc
jp
jne
sbb
jmp
mov
in
aam
insb
mov
inc
xlat
in
in
mov
cwtl
jp
dec
jg
ret
cltd
adcb
gs
insb
jmp
mov
clc
push
pop
fisubrl
paddusb
push
add
jb
push
in
out
loop
jnp
stos
xchg
mov
mov
inc
aad
std
loop
jne
xchg
xor
setnp
push
loop
inc
push
dec
mov
test
out
adc
shr
inc
add
mov
xor
mov
test
pop
inc
in
mov
or
test
orl
outsl
push
inc
add
xchg
adcl
loope
sbb
jecxz
push
into
stos
ds
arpl
add
shlb
add
js
push
jno
sub
pop
lods
fisubrl
stos
loop
pop
enter
mov
sub
scas
dec
lods
inc
rclb
test
sbb
add
aas
lcall
xchg
xchg
mov
pusha
ret
lret
jle
ja
sub
xchg
sub
mov
lods
push
push
stos
into
ss
lods
jl
sti
jno
mov
mov
ja
aad
push
mov
sar
sub
sub
notb
xor
outsb
sbb
xchg
mov
push
sub
fdivr
adc
mov
popa
pop
xlat
mov
sub
cmp
xchg
mov
sub
xor
sub
mov
scas
jge
in
popf
and
lret
imul
mov
sbbl
nop
hlt
or
inc
push
jmp
imul
or
mov
scas
pop
std
push
pop
jmp
idivb
cwtl
fwait
or
flds
cmp
das
rcrb
xor
jle
jmp
enter
incb
sbb
cs
ljmp
popf
or
push
push
call
test
ljmp
sub
jnp
and
xchg
cmc
cs
movsb
aad
jns
iret
mull
fnsave
out
mov
rcl
or
nop
lret
push
cwtl
jecxz
int
stc
xchg
sub
inc
mov
mov
js
mov
ja
ret
addr16
cli
xor
add
and
std
arpl
jo
inc
pushf
jle
call
mov
stos
inc
jmp
xor
sub
and
inc
clc
mov
and
imul
adc
pop
sub
lock
push
setp
sbb
mov
dec
pop
jl
icebp
js
xlat
and
dec
fmul
mov
inc
inc
or
fs
xor
and
pop
fwait
sub
aam
lahf
jmp
pop
fildll
stos
sbb
dec
inc
int
add
mov
inc
inc
into
addr16
out
into
outsl
lods
pop
movsb
push
pop
lahf
shlb
fnstsw
push
mov
add
int
xor
push
outsb
mov
dec
xchg
fs
out
shlb
sub
addb
stc
movsl
pop
push
aas
pop
inc
cmp
add
int3
aas
insl
aam
push
inc
outsl
jo
test
mov
stos
notb
and
incl
inc
cmp
jno
xor
add
testl
sbb
punpcklbw
jnp
push
and
cld
test
js
leave
mov
cwtl
loopne
fs
das
imul
lea
sub
mov
or
inc
lods
les
sbb
aad
inc
inc
push
dec
xchg
lds
xor
xchg
mov
pop
aam
mul
mov
pushl
test
dec
int
inc
adc
es
loop
test
push
jns
and
xor
pop
call
insb
mov
dec
lcall
cmp
xchg
popf
test
cmpsl
xchg
hlt
and
or
xchg
test
push
lret
push
out
pop
ss
icebp
pop
sbb
cli
int
pushf
mov
jns
mov
shlb
icebp
das
fbld
cmp
fistpll
sbb
xor
and
push
jp
jl
inc
adc
lret
mov
negb
inc
and
xchg
shlb
je
sub
out
sarl
popf
xchg
inc
scas
out
inc
xchg
out
cmp
pop
mov
and
cmp
xchg
loopne
sub
sbb
out
notl
pop
pop
mov
and
insl
out
fidivrl
enter
xlat
xlat
sub
ficoms
pop
cltd
bound
mov
daa
sbb
mov
mov
mov
inc
imul
adc
jne
rorb
imul
jg
stc
pusha
fbstp
mov
or
in
ret
sbb
sub
cmp
imul
in
xor
insb
mov
jle
inc
int
sub
outsl
les
add
add
sub
inc
mov
in
enter
aas
insl
cmp
js
jae
pop
movsl
cmp
imul
pop
mov
jle
fsubrl
add
push
imul
pop
mov
adc
dec
jb
xchg
int
mov
test
add
dec
adc
test
sar
push
in
call
scas
enter
fstps
xchg
push
aad
push
arpl
pop
dec
push
dec
and
pop
insl
aad
xor
pop
push
out
test
cmp
lret
int3
push
pop
out
cmp
xchg
sbb
sahf
push
cmp
inc
add
mov
inc
mov
icebp
fadds
cli
pushf
xor
pop
arpl
pusha
lahf
fsubrl
push
adc
nop
add
dec
pop
pop
dec
jl
sbb
cmpsb
sti
sub
ds
sbb
aaa
mov
push
push
jp
adc
push
push
testb
lods
lcall
pop
out
xchg
in
stos
mov
jmp
call
add
rorl
mov
sub
cmp
jb
sub
push
xchg
jle
fnclex
mov
pop
and
test
loop
fs
hlt
mov
or
enter
xchg
push
sbb
fsts
sbb
roll
cmp
dec
repz
sbbb
push
xor
movsb
bound
mov
inc
mov
outsl
rol
jl
or
cli
xor
repz
or
push
test
lock
sbb
xor
das
mov
cli
add
lahf
mov
popf
fldcw
jle
loopne
or
shrb
jne
and
and
fs
ret
xchg
fucomp
jecxz
pop
dec
xchg
lods
clc
add
sbb
and
test
xor
lds
sub
shl
jnp
sbb
jmp
lods
fldl
push
ss
test
mov
cmpb
pop
pop
jmp
inc
jae
insb
gs
clc
cli
mov
push
aad
xlat
cltd
aaa
jmp
cmp
mov
and
cmp
pop
mov
xchg
lret
sbb
mov
add
sub
pusha
mov
sub
mov
incl
push
mov
lods
inc
scas
push
sub
ret
shr
jp
mov
adc
sbb
ficompl
jp
and
xor
inc
sub
icebp
or
cmpsb
inc
incl
shll
mov
dec
add
sbb
xchg
mov
lahf
orb
xchg
dec
inc
fcomip
xlat
lcall
push
addr16
lock
sbb
mov
mov
aaa
cmp
cltd
insb
stc
mov
aaa
out
lods
je
hlt
cmpsl
push
ja
or
sbb
lret
hlt
inc
je
js
adc
leave
pop
mov
dec
ds
not
pop
push
and
mov
mov
das
xlat
mov
pop
mov
mov
push
icebp
inc
and
jl
xchg
pushf
mov
pop
lahf
imulb
mov
mov
mov
or
sbb
push
and
je
mov
xchg
push
scas
je
loopne
ret
adc
mov
mov
dec
xor
scas
add
add
outsb
leave
jle
call
adc
into
pop
mov
add
fadds
mov
mov
outsb
jnp
ljmp
cltd
add
stos
inc
cli
lret
jbe
and
sub
pop
pop
out
xor
aam
jo
outsb
cltd
daa
dec
lahf
mov
scas
popa
pop
in
aad
cli
or
adc
lods
sub
neg
push
fcoms
and
or
sub
push
repnz
jmp
push
int
dec
xor
mov
pop
add
mov
and
icebp
js
in
sub
mov
xchg
or
jbe
xorb
aas
addr16
xchg
and
movsl
jne
int3
push
xchg
loop
popa
fwait
and
xorl
pop
addr16
mov
pop
cmp
cmp
arpl
inc
mov
repnz
scas
mov
test
iret
jmp
pop
fisubrl
jge
rolb
popf
iret
pushf
or
cwtl
out
fdivs
icebp
sbb
imul
push
fcomp
out
pop
xchg
aam
mov
mov
sbb
sahf
popa
mov
xor
xor
push
sbb
mov
pop
dec
xor
and
dec
jb
in
ret
js,pt
sbb
outsl
test
inc
push
inc
xchg
sub
in
repz
mov
les
pop
lock
orb
adc
add
cmc
popa
mov
iret
test
inc
aas
jl
je
jmp
test
shr
movsb
les
cmp
xlat
call
lret
inc
enter
shlb
xchg
add
pop
sub
mov
mov
jp
add
mov
mov
mov
int
bound
test
ret
sbb
inc
inc
pop
jo
push
mov
mov
xchg
xchg
xchg
out
add
aas
fs
push
xor
mov
add
loopne
cmp
add
pop
add
leave
call
mov
and
push
loope
dec
fildll
add
fdivl
xchg
inc
in
jl
mov
add
pop
insl
pushl
inc
mov
lods
xchg
ja
fwait
push
jb
repz
adc
cmc
jle
sub
rcr
adc
jl
add
dec
mov
aam
mov
into
jb
mov
inc
jns
sub
jbe
loop
sarb
nop
cmp
ret
sub
sbb
gs
aad
dec
mov
adc
sti
stc
dec
push
mov
ret
sub
iret
ja
in
in
add
pop
scas
dec
outsb
xchg
int3
mov
inc
cmpsl
js
fldenv
out
mov
push
out
rclb
jns
inc
lahf
xchg
js
int3
inc
sbb
add
xor
add
xor
test
in
les
cmp
js
stos
call
lcall
nop
xchg
or
popl
mov
jge
adc
or
daa
stos
mov
pop
cmp
rclb
lods
jmp
push
pushf
push
les
mov
xchg
fldt
cmp
call
sub
sub
aaa
int
stos
adc
cmp
mov
push
test
pop
leave
push
ja
push
mov
lods
repz
pop
pop
dec
ja
imul
jb
inc
pop
push
push
not
add
loope
nop
or
or
inc
dec
sti
push
and
adc
xor
pop
movb
daa
paddusb
jns
inc
cmp
insl
inc
pop
mov
mov
imul
dec
cmp
in
dec
or
dec
inc
mov
stc
pusha
test
sub
ret
and
xor
sbb
pop
jae
mov
or
shll
addr16
mov
jge
push
mov
in
cmpsl
out
mov
stos
jl
clc
faddp
xchg
ret
push
cmp
mov
test
cbtw
or
gs
mov
dec
ret
fs
scas
in
jle
aam
loopne
mov
sub
adc
packssdw
movsb
and
insl
mov
lcall
and
stc
gs
sub
int3
sbb
cmp
pop
mov
in
xor
mov
imul
sbb
sub
xchg
sub
mov
jmp
and
mov
mov
sub
mov
repz
es
lcall
jbe
stc
std
jge
lret
mov
pop
fs
and
mov
je
push
inc
jne
stos
fstps
iret
mov
sahf
add
inc
sbb
mov
mov
lods
sbbl
cmp
mov
xchg
jae
stos
out
cmp
xor
mov
aaa
cmp
test
and
push
into
adc
pusha
fiadds
les
lock
repnz
scas
xor
inc
jb
adc
test
pop
mov
outsl
aam
lcall
movsb
cwtl
ja
arpl
sbb
jnp
pop
fcmovb
jne
dec
jo
jmp
xchg
mov
lahf
adc
adc
outsb
bound
sub
add
ror
lea
cmc
sbb
in
data16
pop
cmp
and
jnp
pop
decb
pop
mov
push
push
vmovlpd
sbb
gs
fildll
shll
add
out
mov
addr16
ror
cmc
mov
sbbl
mov
push
add
rolb
stos
jne
js
adc
fstl
stos
cmp
fdivrp
or
mov
bswap
xor
lret
lret
push
mov
orb
sbb
add
ds
and
andnps
enter
jecxz
scas
inc
mov
adc
into
mov
mov
cmc
add
emms
dec
es
pop
hlt
adc
imul
mov
scas
lds
mov
aam
ss
addl
mov
xchg
aaa
xor
rol
std
jae
adc
mov
scas
add
mov
add
pop
test
cld
sbb
push
inc
sbb
or
pop
cmp
or
scas
jmp
test
arpl
mov
dec
ret
add
push
mov
dec
sarb
out
pushf
push
ja
movsl
adcl
inc
mov
nop
aam
cmpsb
dec
in
mov
icebp
cltd
sub
imul
pop
mov
sarb
cmc
stos
mov
pop
sbb
dec
ljmp
add
mov
xchg
xchg
inc
test
adc
loop
jge
adc
outsl
test
les
jecxz
add
data16
pushl
xor
pop
push
add
mov
inc
ret
insb
insb
repz
adc
fwait
push
popf
xor
sti
pop
es
dec
sbb
push
cltd
pop
push
or
push
push
dec
xor
out
push
test
xlat
pop
js
adc
adc
push
xor
mov
dec
jg
icebp
adc
pop
mov
test
bound
shll
insl
fadd
test
decb
xor
dec
shl
loopne
shrl
cli
icebp
icebp
push
mov
decl
sbb
add
jmp
fsubrl
ss
pop
mov
ljmp
mov
sbb
and
add
push
and
push
shlb
subb
lock
add
adc
inc
sub
xchg
or
and
cld
jp
mov
mov
aas
dec
push
insl
and
insl
js
push
jnp
lods
inc
xor
sbb
jl
ja
popa
sbb
mov
mov
das
cmp
jo
stos
mov
loope
stc
call
mov
jecxz
push
push
jp
sarl
mov
pop
pusha
xor
shll
pushf
sbb
dec
cmpsb
pop
addb
push
mov
je
dec
les
jbe
dec
pop
rorl
inc
cmc
add
aam
popa
sub
or
add
dec
xchg
mov
cmp
lods
mov
daa
into
xchg
lret
sbb
jmp
jae
inc
je
and
pmovzxwq
js
jae
jb
jle
sbb
in
inc
adc
jae
in
mov
daa
lret
mov
repz
sbb
lds
jns
pusha
imul
lods
push
jg
jb
aas
inc
cmp
jg
sub
test
montmul
cmpsb
jmp
mov
daa
stos
sbbb
adc
dec
stos
mov
push
sti
pop
loop
test
cmp
sbb
cli
sub
outsl
jne
cmp
rcrl
pop
shll
loopne
bound
mov
mov
xor
mov
mov
sbb
filds
out
cwtl
insb
addr16
lahf
push
insl
fldt
lds
lock
mov
out
repnz
cmp
sub
fnstenv
inc
mov
repnz
add
or
and
mov
enter
aas
xchg
xor
or
jmp
scas
push
mov
lahf
pop
popf
push
jle
mov
pop
mov
mov
aas
out
adc
push
js
jecxz
in
je
or
sbb
fldcw
add
addr16
or
sar
pop
pop
icebp
repnz
dec
sub
jecxz
adc
jae
inc
pushf
fisttpll
subl
sub
fwait
add
lock
cmc
mov
add
adc
fwait
pop
mov
out
dec
lods
fcompl
pop
insl
lea
movsl
and
jnp
lret
jle
jbe
sti
inc
push
cmpl
xchg
mov
xor
xor
jl
test
fisttps
cmp
cmp
in
fisubl
lock
xchg
pop
sbb
dec
sti
hlt
iret
jo
in
sub
rorl
sbb
sub
clc
push
stos
xlat
add
mov
iret
or
scas
add
mov
xchg
xchg
aaa
add
fucom
test
lret
fcom
cmpsl
insl
aad
enter
leave
dec
in
jae
insl
cmp
data16
fcmovbe
mov
jle
out
push
lds
add
lret
shr
int3
pop
push
mov
pop
adc
jg
lock
jle
aas
mov
add
mov
and
adc
inc
fidivrl
adc
dec
movsl
jbe
pop
daa
icebp
xor
mov
add
xlat
in
inc
xor
mov
mov
fcoml
adc
jae
xor
mov
fwait
int
push
cld
fildll
dec
jge
add
pop
test
push
out
repnz
sub
pop
jno
orb
in
pop
or
mov
pushf
push
icebp
add
popa
xchg
dec
decl
xor
mov
sbbb
imul
xor
aaa
divb
inc
lcall
add
push
sub
out
and
push
and
xchg
insl
pop
orl
cmp
out
mov
ja
shl
xchg
pop
xchg
and
and
mov
dec
dec
mov
mov
mov
cltd
push
int
xor
aam
arpl
rol
adc
cmp
notl
and
mov
aas
xor
je
call
sub
stos
clc
xor
rcr
dec
es
imul
cli
and
sbb
pop
and
lahf
or
push
or
xor
shll
jnp
loopne
pop
enter
adc
mov
cli
push
in
dec
sbb
inc
mov
dec
mov
push
out
xchg
xor
ljmp
xchg
pop
mov
mov
das
in
orb
sub
mov
push
cmp
mov
xor
jecxz
ds
dec
addl
stc
leave
jecxz
movsb
cltd
mov
xor
inc
lret
bound
xchg
mov
and
mov
jg
mov
mov
dec
addr16
je
sub
clc
mov
jecxz
sbb
fcmove
nop
icebp
repnz
jne
xlat
imul
shl
xchg
add
into
mov
jmp
mov
dec
test
icebp
loope
fcomp
add
lcall
sub
add
and
jnp
into
adcl
lahf
xchg
lahf
push
xchg
mov
pusha
push
push
imul
xchg
gs
mov
or
mov
out
adc
jne
lcall
ja
in
fst
push
bound
jecxz
sbb
push
mov
movsl
sub
lea
mov
pop
cmp
jmp
lods
xchg
loope
cmpsl
enter
mov
and
ret
jbe
psadbw
outsl
mov
mov
xchg
mov
mov
cltd
in
repz
mov
sbb
inc
test
test
nop
jp
cld
mov
xchg
push
dec
js
mov
out
mov
pop
das
leave
mov
cwtl
mov
out
dec
adc
push
push
movsl
and
cmpsb
std
push
cwtl
lahf
and
rcr
scas
or
repnz
cmp
push
jae
punpcklbw
aaa
paddb
roll
sbb
and
jae
and
inc
sbb
push
das
orl
mov
push
roll
lds
lret
test
adc
lods
data16
negl
xchg
es
mov
or
ret
or
out
iret
dec
ljmp
std
adc
mov
ja
test
mov
inc
or
push
std
icebp
pop
iret
mov
or
sbb
dec
cli
adc
push
xchg
jge
scas
std
push
or
lahf
push
pop
sbb
xorb
test
mov
outsl
mov
pop
rclb
jl
cli
data16
push
cmp
jle
fnstenv
xor
add
or
cs
fisttps
int
push
mov
adc
je
icebp
andb
dec
imul
out
adc
xor
cltd
lahf
ljmp
xchg
shrl
aaa
and
mov
adc
jp
in
orb
mov
xorl
stos
and
popa
dec
xchg
and
jp
sub
cmp
mov
or
loop
sbb
push
les
mov
mov
jle
mov
mov
push
int3
xchg
testb
cmp
ja
leave
cmp
fstpt
outsl
and
sbb
insb
xor
std
lods
and
sub
xor
in
and
int3
mov
sub
js
cmpsl
or
imul
loopne
mov
push
in
in
xchg
fwait
in
shlb
les
cwtl
shl
add
out
and
pop
aam
inc
enter
mov
adc
mov
sbb
jle
push
int3
jns
enter
addr16
pushf
cltd
add
out
adc
adc
push
stos
js
push
loop
mov
shlb
push
or
push
insl
jp
stos
mov
nop
mov
xorl
mov
out
xlat
add
cmpsb
mov
outsb
out
repz
mov
lret
dec
xor
lock
lods
int
add
jge
aad
push
jno
push
pop
mov
ret
imul
test
inc
sbb
add
and
mov
jnp
cmp
mov
xchg
cmp
outsb
add
and
xchg
pop
loope
cmp
iret
inc
jae
fnstsw
mov
mov
and
push
xchg
jg
adc
mov
arpl
mov
rcll
add
cmc
lods
sub
pop
mov
imul
leave
cmc
xor
pop
xchg
dec
out
adc
inc
js
in
sub
push
cld
daa
or
jne
inc
pop
xchg
jno
inc
xor
jecxz
cs
adc
push
mov
cltd
push
lds
cmp
sub
xchg
xchg
pop
pop
scas
shlb
mov
adc
cmp
cwtl
dec
mov
scas
cmp
adc
ret
or
jmp
push
cltd
push
mov
and
push
jb
loop
aas
fs
out
push
arpl
je
addb
and
divl
mov
mov
movsl
test
xlat
add
push
aad
negb
or
and
data16
sbb
cs
jecxz
cltd
call
jae
push
mov
out
sub
pop
sbb
dec
lahf
sbb
adc
mov
lods
clc
loop
aas
pop
sbb
fwait
dec
adc
testb
inc
fdivs
mov
mov
lods
dec
sub
or
jne
int
add
dec
movsl
sbb
aad
jno
jae
lahf
fwait
pop
push
cmc
and
inc
cmp
repz
mov
insb
cmpsb
out
shll
xchg
popf
test
pusha
push
push
xor
lret
push
test
jl
mov
or
pop
mov
pusha
push
sub
mov
and
sbb
popa
cltd
in
mov
mov
mov
out
mov
jl
pop
out
lcall
cmp
loope
fadds
outsl
in
test
lret
mov
dec
and
cmp
dec
adc
xchg
push
push
outsl
call
jl
cmpb
outsl
push
or
mov
fiadds
out
and
fistpl
push
push
sub
jmp
mov
push
mov
incl
leave
inc
testb
pop
mov
push
movsb
repnz
cmp
push
or
addr16
cmp
jne
repnz
push
xor
gs
jne
dec
bound
dec
sbb
and
jl
adc
dec
out
fdiv
cmp
add
add
outsb
sbb
adc
mov
imul
jae
pop
pop
mov
pop
pop
jns
lret
fsubrs
xchg
add
out
sbb
fxch
test
cmp
mov
mov
popf
fs
dec
mov
jo
or
add
xchg
mov
jnp
adc
lds
repnz
push
xor
pop
outsb
testb
cmp
arpl
jne
dec
and
inc
sub
push
inc
sbb
or
inc
cwtl
push
loop
dec
loopne
inc
mov
jne
pop
call
pop
pusha
lret
in
mov
mov
push
or
and
push
add
scas
xchg
lock
ret
mov
cmp
mov
dec
stos
or
xchg
lcall
shll
cmp
push
mov
mov
inc
shll
cmp
dec
jp
int
or
cwtl
and
jmp
mov
xchg
bound
data16
das
mov
cmp
lock
out
dec
jbe
dec
sbb
cmp
ret
mov
sar
std
pop
add
sbb
or
push
lahf
cmp
and
mov
gs
mov
jecxz
test
jp
xchg
adc
popf
jl
mov
jmp
and
lret
das
add
push
cmp
lcall
and
outsb
pop
out
sahf
jo
adc
push
rcrl
xchg
mov
sahf
outsb
mov
xchg
sbb
push
rcrb
jge
xchg
pop
sbb
push
cmp
into
scas
test
popa
dec
sub
cmp
add
push
adc
and
mov
push
cmp
mov
inc
enter
daa
adc
addl
push
adc
xchg
dec
sub
pop
in
mov
cwtl
lahf
mov
dec
xor
sbb
and
mov
xchg
cli
push
cld
mov
in
or
dec
out
xor
popf
lahf
lds
enter
aam
xchg
push
push
pop
jb
jecxz
or
ljmp
pop
lods
data16
imul
out
test
or
dec
insl
sbb
xor
fidivrs
testb
mov
std
jecxz
jne
xchg
divb
push
lds
pop
rol
ret
hlt
leave
sub
cltd
repnz
lock
pop
adc
jg
or
imul
inc
jmp
arpl
js
loopne
mov
mov
fdivl
rclb
or
and
arpl
and
test
roll
adc
dec
xchg
xchg
sbb
gs
mov
pop
push
jne
and
pop
dec
sbb
mov
out
and
jae
push
aam
mov
push
in
out
adc
or
insl
push
xchg
test
pop
loope
or
mov
insb
sbb
ficompl
xchg
fucom
inc
inc
push
cmpb
push
test
imul
out
cmpl
sub
jl
pusha
xlat
jge
xchg
push
in
inc
cmp
pop
bound
jp
stos
data16
fsub
or
inc
cli
shl
xor
sbb
cwtl
repnz
call
ds
push
sarb
jle
mov
clc
hlt
loopne
mov
subb
lahf
cmp
cmc
xchg
xor
lret
pop
xchg
loop
or
jo
mov
jne
repnz
and
sub
adc
add
xor
int
lea
out
pusha
clc
dec
xchg
adc
xor
rdtsc
movsl
scas
sbb
mov
je
xor
fstps
cwtl
and
mov
mov
bound
test
in
xlat
hlt
scas
add
dec
test
mov
jp
add
add
cmp
sbb
mov
stc
mov
aam
and
pop
sub
jmp
cmp
int3
clc
push
pop
push
inc
jno
adc
repz
add
cmp
inc
out
subb
out
pop
mov
inc
jns
stos
testl
push
dec
int3
imul
jns
push
add
xchg
out
pop
mov
int3
cli
or
imul
add
iret
lea
pop
jle
shlb
popf
xchg
jp
pop
mov
inc
std
pop
push
test
stos
xchg
dec
xor
add
xor
mov
stos
jnp
das
cld
push
popa
adc
ret
pop
movups
dec
and
adc
lea
xchg
or
sbb
shll
aam
jns
mov
mov
aad
outsb
nop
sub
cmp
mov
xchg
mov
movsl
hlt
adcl
mov
data16
scas
cmpsb
jl
xor
insb
or
jmp
jg
dec
mov
call
adc
sub
insb
lahf
mov
jo
and
sbb
and
push
sub
xor
in
in
adc
mov
xor
cmp
mov
repnz
inc
xchg
jge
jecxz
lods
jo
sti
aas
inc
imul
test
inc
stos
jp
pop
out
inc
popf
pop
lcall
subb
sti
testl
repz
adc
sbb
pop
cvtdq2ps
std
mov
ret
mov
xor
or
in
mov
stc
push
daa
adc
jp
inc
mov
call
jl
pop
jle
pusha
and
jmp
sub
test
jb
lret
and
sub
gs
cmp
loop
add
xchg
or
in
adc
mov
lods
push
dec
jecxz
xchg
xchg
lods
mov
sarb
cs
push
rolb
fstps
and
pop
cwtl
dec
nop
jae
inc
in
and
dec
decl
loopne
lahf
and
xchg
sub
ja
push
cmp
mov
cmpsl
test
gs
lret
adc
mov
lods
filds
pop
xchg
dec
ret
sub
pop
stos
sti
sti
mov
dec
lret
jecxz
ja
vsubps
outsb
fs
dec
aam
lods
pop
xchg
mov
sbb
add
pushf
aad
dec
popf
fcmovnbe
mov
mov
outsb
xor
popf
mov
sub
push
cwtl
push
push
push
push
or
add
or
push
loop
js
test
aad
ficompl
pop
mov
mov
mov
push
mov
or
in
dec
movsl
sbb
pop
stc
xchg
xor
das
mov
ror
in
push
and
test
ret
fisttps
ds
pop
sub
and
je
test
orl
enter
dec
mov
xchg
mov
adc
and
jno
jge
jo
lock
add
std
stos
icebp
pop
iret
dec
mov
mov
lea
sbb
es
adc
dec
movsb
fcompl
mov
arpl
or
outsl
jne
stos
cmpsb
push
add
mov
sbb
in
dec
outsb
jae
adcb
stos
lods
cmpsb
adcl
icebp
leave
cmp
addr16
jbe
dec
lds
das
loopne
cli
and
cli
shll
rcrl
daa
outsb
sub
ss
idivl
cmp
dec
ss
sub
mov
fs
dec
scas
jns
and
out
es
jbe
das
mov
and
enter
pusha
sti
test
cld
je
cmc
or
push
bswap
push
inc
ja
adc
out
mov
pushf
or
mov
int3
mov
rorb
test
cmp
mov
je
or
add
sbb
bound
mov
enter
jecxz
hlt
repz
add
add
mov
xor
shl
and
adc
aad
pop
lods
sub
adc
inc
jne
sbb
adcl
out
mov
pop
pop
ds
dec
sbb
fldcw
in
jae
mov
fsubr
mov
pop
leave
outsb
shr
sub
lods
aaa
push
aam
movsl
mov
jecxz
aas
data16
pop
inc
mov
jno
adc
pop
imul
jno
sub
xor
mov
jle
cmp
dec
lds
cld
fldt
xchg
or
or
mov
in
mov
repz
loopne
in
xchg
mov
sub
imul
xor
pop
sub
lcall
add
mov
mov
bound
dec
pop
arpl
xor
xchg
sarl
mov
xchg
int3
push
adc
jno
add
xchg
pushf
insb
pop
mov
imul
jns
sub
nop
cli
scas
das
arpl
mov
dec
orb
loope
sbb
push
movb
inc
ds
stos
fs
push
add
loope
cmpl
inc
lds
add
xchg
adc
adc
aad
sbbl
mov
push
jne
stc
ret
sbb
adc
and
cld
and
xor
pop
les
xor
and
sub
mov
sar
imul
sbb
lods
lock
sbb
dec
jne
in
enter
xchg
xchg
jns
mov
and
fwait
js
xor
mov
in
test
push
icebp
inc
fwait
xchg
loope
scas
and
mov
loope
daa
repz
stos
ret
leave
dec
leave
jge
and
push
add
repz
popa
push
fistps
sarl
sbb
sahf
mov
loopne
dec
pop
cmp
movsl
lcall
cmpsl
sbb
sub
or
daa
inc
cwtl
add
popf
loopne
mov
hlt
loopne
sbb
in
scas
icebp
push
popf
sarl
mov
jnp
inc
adc
pop
sti
fistpl
mov
shrb
and
out
ljmp
cltd
mov
mov
jmp
int
idivl
loop
xchg
int
ljmp
and
xchg
je
dec
jbe
push
sbb
pop
lock
mov
push
ret
jo
push
dec
dec
sub
cs
movsb
je
rorl
dec
pop
insl
mov
inc
mov
les
or
shll
add
and
ret
lcall
aad
fldcw
flds
inc
fnstcw
inc
dec
ret
xchg
ret
loopne
jmp
push
aam
dec
jmp
daa
cmp
and
inc
dec
loope
dec
adc
fwait
sti
mov
push
aam
cmp
adc
out
xchg
xchg
int
push
sahf
pusha
xchg
pop
push
iret
jo
mov
cmpsb
sbb
and
add
arpl
hlt
scas
negb
into
sbb
int3
rcll
mov
lret
sub
mov
inc
add
cmpb
mov
hlt
mov
pop
ja
je
push
mov
sub
push
in
add
cs
mov
loope
add
add
jg
and
sti
cmpsb
push
push
insl
xchg
or
mov
out
hlt
push
shrb
cmp
ret
xor
xor
add
jmp
cmpsl
std
imul
and
xrelease
or
mov
mov
hlt
in
push
test
lds
ljmp
aas
shrb
cmp
int3
cs
fdivl
out
and
jae
imul
pop
lds
imull
push
andb
les
js
add
mov
test
sbb
inc
mov
int
lahf
lds
fcoml
lahf
xchg
xchg
fwait
dec
ja
lea
mov
and
add
push
mov
adc
into
dec
dec
xchg
lret
lods
add
pop
out
pop
dec
cmp
jl
pop
sbb
out
cld
movb
repz
out
jne
inc
sbb
mov
data16
pushf
xchg
or
lock
xchg
lea
mov
mov
or
mov
dec
movsl
stos
push
mov
mov
mov
clc
ret
jmp
sbb
jmp
sarl
cmpsl
or
cmp
sub
sbb
out
sub
mov
mov
and
adc
push
mov
cmp
int
push
out
and
sar
cltd
push
daa
add
inc
mov
mov
inc
cmpb
sbb
test
lret
nop
iret
stos
adc
ficomps
shll
mov
jnp
mov
mov
push
push
mov
inc
push
mov
pop
test
sub
in
push
jle
ret
dec
test
mov
das
stos
es
aaa
fildl
scas
ja
mov
sbb
mov
out
inc
repz
mov
and
cld
add
push
xchg
mov
xchg
pop
mov
adc
cmpsl
push
cmp
jg
jne
mov
adc
mov
mov
sti
push
jge
jo
dec
cltd
inc
je
pop
js
and
fidivrs
sarl
fsts
push
jo
add
loope
push
divl
enter
mov
aaa
das
sub
rcrb
fwait
aas
sar
dec
aas
out
xchg
mov
jmp
xchg
jnp
xchg
lret
hlt
jns
push
mov
mov
sbb
xchg
test
enter
arpl
jne
fiaddl
cmpsl
jle
into
xor
fstpl
add
jmp
add
out
in
in
shll
jns
cmp
xchg
out
inc
inc
or
pusha
test
push
xchg
add
ret
leave
int3
inc
mov
repz
and
pop
cmpsb
lods
dec
cli
daa
push
addr16
pop
cmp
push
sbb
mov
scas
icebp
nop
jno
loope
and
test
lods
inc
adc
ds
xchg
je
arpl
das
lret
out
push
mov
je
push
sub
movaps
pop
add
ds
hlt
fstps
or
and
pop
sahf
bound
adc
jnp
add
out
cli
jl
shl
or
out
popf
push
daa
inc
test
mov
pop
mov
lea
mov
mov
fidivrs
lcall
ss
inc
mov
xorb
mov
jnp
and
mov
les
mov
mov
cmpsb
stos
pop
mov
pop
cmp
sarl
jge
cmp
insb
stc
pop
mov
pushf
outsb
push
xlat
push
inc
push
sbb
pop
fsubl
adc
mov
xchg
mov
xor
std
cmpsl
adc
xlat
out
add
or
mov
lret
movb
cs
jp
or
lret
pusha
push
int3
jge
ret
push
sub
out
into
lcall
js
xchg
lds
dec
cmp
xchg
mov
popf
jbe
jbe
mov
insb
in
and
loope
aaa
pop
sub
popa
push
mov
stc
dec
and
inc
sbb
pop
mov
jge
add
fwait
repnz
ret
dec
stc
add
xor
pop
pop
cmp
lds
test
pop
and
sti
lods
lods
xor
dec
fwait
or
inc
sbb
adc
jo
jmp
pop
stc
lock
ja
xchg
push
ror
mov
sbb
dec
daa
mov
sti
and
inc
add
je
aas
or
sub
lods
ds
cmc
gs
addb
std
or
push
mov
and
rclb
cltd
sbb
stos
mov
js
jne
pop
mov
and
xor
dec
test
adc
call
inc
lock
dec
add
push
out
and
jmp
or
cmp
lds
cwtl
lock
push
fs
mov
inc
addr16
sub
lea
sub
rcrl
into
add
push
push
enter
add
into
inc
pop
pop
mov
jmp
mov
call
mov
lds
inc
cmc
popf
arpl
iret
add
scas
fmul
xor
loopne
cmpl
ds
jle
dec
pop
jge
cld
mov
ss
pop
jg
mov
sbb
cmpsb
ljmp
adc
pop
add
mov
out
mov
std
dec
jns
mov
inc
stc
mov
push
xchg
pop
in
divl
xchg
aam
test
test
mov
dec
aam
nop
popa
fstpl
sub
scas
sbb
and
loopne
cmp
popf
xchg
or
mov
mov
mov
mov
lret
imul
in
cmpsb
sbb
orb
loope
lock
adc
mov
aam
dec
in
loop
loop
inc
sub
sbb
xchg
int3
aas
ja
jno
or
in
addr16
ljmp
pop
sbb
cld
sbb
lods
sub
out
pop
sti
inc
mov
xlat
fldcw
scas
xor
inc
mov
rolb
test
or
lcall
lods
lea
xchg
into
jmp
sahf
aad
or
add
in
movsb
inc
out
push
lock
pop
pop
mov
sbb
xlat
pop
and
add
push
into
ret
icebp
scas
xchg
adc
pop
xchg
xchg
popf
sub
nop
mov
jecxz
add
pop
mov
sar
mov
test
dec
sub
jno
mov
int3
sbb
inc
inc
push
movsb
add
movsb
pusha
cmpsb
pop
jmp
fwait
mov
or
mov
icebp
add
push
jl
inc
pop
xlat
jp
pop
sbb
xchg
jecxz
push
iret
jb
inc
ficompl
pop
push
jbe
and
je
sbb
imul
insl
std
xchg
in
mov
sbb
add
dec
test
sub
or
outsl
mov
test
notl
push
push
jp
ja
scas
fsubs
or
cld
punpckhdq
xchg
xor
push
imul
int
add
mov
je
jns
sahf
in
jne
inc
inc
pusha
push
mov
paddq
addl
mov
out
mov
aam
inc
xchg
test
test
mov
sbb
xchg
xchg
cmp
js
cmc
lea
fisubl
fcoms
movsl
inc
fcmovbe
inc
fdivrl
sub
clc
dec
and
jno
inc
and
gs
int3
add
push
sbb
idivl
dec
dec
inc
pop
inc
icebp
out
jae
jne
lods
ljmp
mov
iret
add
test
imul
jmp
push
and
sbbl
call
out
pusha
aam
cltd
gs
movsl
adc
outsb
mov
nop
fmuls
sbb
xchg
js
je
or
int3
xchg
mov
pop
movsb
push
je
movsl
aad
cmpsb
or
inc
shll
xor
mov
mov
popf
popa
xchg
je
lcall
test
rorb
push
jno
in
xchg
mov
push
adc
inc
mov
outsb
jl
jl
cmp
repnz
inc
jns
xlat
and
outsb
sahf
and
xor
or
fnstenv
aas
sbb
ja
sbb
inc
dec
das
loope
popf
xlat
int3
mov
cld
mov
aas
jg
lcall
imul
add
xchg
push
sahf
xor
add
mov
fimull
push
and
movl
sub
sbb
xor
inc
lods
loopne
lahf
loopne
sarl
pop
dec
xlat
xor
mov
fs
push
sbb
andl
sub
sbb
dec
inc
inc
adc
divb
arpl
lock
lock
and
movsb
inc
adc
dec
leave
add
mov
sbb
gs
sbb
and
adc
rcrl
push
or
rorb
ds
pop
enter
into
pop
mull
insb
sub
mov
arpl
push
mov
lods
pop
mov
faddl
pop
push
lods
mov
xchg
lods
adc
pop
sub
mov
lcall
jb
sti
imul
and
bound
inc
pop
cvtdq2ps
push
inc
adc
addr16
addl
push
enter
ret
adc
mov
pop
push
fidivrl
dec
pop
xchg
jbe
pop
jle
jno
ret
mov
ficoms
mov
pop
mov
pop
mov
sar
xchg
push
rorl
and
mov
sahf
sub
pop
out
lret
cwtl
pop
push
rcll
mov
cmpsl
cli
cmp
insl
push
cmp
push
inc
popa
out
rol
pop
cmp
dec
icebp
test
xlat
jnp
adc
in
push
ss
out
jnp
sub
hlt
and
mov
mov
mov
sbb
insl
fildll
sub
xor
dec
and
sti
mov
stos
xor
pusha
cmpb
pop
adc
aam
push
cmp
std
mov
jp
jge
dec
cvtps2pi
fwait
js
and
cmp
mov
push
shrl
push
cmp
and
fbld
test
iret
sub
mov
icebp
fnstsw
pop
rorb
call
inc
sub
push
sbb
outsl
push
popa
jl
aaa
jo
cmp
sbb
sbb
pop
int
jp
jge
sbb
sahf
and
lret
cmpb
mov
xchg
fmuls
mov
cli
or
mov
lret
mov
mov
int
fcmovnbe
les
inc
std
xor
pushl
mov
push
stc
mov
cltd
mov
insb
lret
stc
loopne
icebp
nop
or
outsl
cmp
inc
adc
imul
rorb
mov
sbb
pop
sub
dec
fstp
mov
fsubrs
lahf
adc
jecxz
cmp
popf
out
push
repnz
mov
frstor
iret
and
xor
push
sub
ret
lret
jnp
sub
mov
cmp
jns
inc
dec
ja
scas
fs
mov
jle
imul
add
in
lock
push
lds
movl
aad
in
and
xorl
add
scas
cmp
inc
in
xor
sbb
imull
or
jo
not
mov
mov
pop
add
dec
inc
cmp
lret
mov
rorl
stos
mov
aam
add
mov
hlt
loop
imul
aaa
sbb
adc
cmpsl
jo
pop
adc
stos
mov
sbb
gs
mov
std
pop
loopne
addr16
or
loope
in
das
faddp
in
mov
popa
sbb
imul
popa
pop
lret
fwait
test
pop
shl
mov
push
cmp
pop
ljmp
icebp
pop
sbb
subl
and
push
jae
sbb
push
xchg
daa
mov
rcl
cwtl
inc
dec
fidivs
inc
orl
movsb
sbb
xor
rcr
adc
lock
push
clc
lods
xchg
jno
add
sub
mov
jno
cmp
xchg
aaa
movsb
icebp
jne
addr16
sub
pop
xchg
inc
pop
ja
loop
dec
mov
fwait
sub
test
xor
push
push
and
jg
scas
gs
push
les
fisttpll
sarl
dec
sahf
scas
mov
push
outsb
scas
leave
lret
pop
ds
jmp
dec
sbb
push
pop
aaa
jo
jg
jno
push
repnz
in
cwtl
sahf
fmull
push
sub
mov
cmp
cmp
pop
fneni(8087
nop
clc
or
pop
push
push
xor
jne
mov
in
inc
xor
sub
push
stos
jno
sub
test
pushf
xchg
fwait
mulb
xchg
push
fldcw
repz
ret
sub
jmp
mov
decb
or
iret
mov
jo
sbb
outsb
mov
imul
inc
enter
insb
inc
fs
mov
fldcw
ljmp
inc
mov
dec
sub
mov
jecxz
or
shrl
outsb
mov
xchg
icebp
dec
xor
aas
icebp
stos
adc
loopne
cmp
mov
lcall
and
fsubrl
jnp
mov
bound
add
xor
cmp
mov
mov
or
cmpsb
xchg
es
push
mov
fisttpll
or
pop
movsl
add
jmp
mov
sbb
cmpsb
sahf
mov
lret
jbe
aam
jno
in
repnz
push
ljmp
movsb
mov
rolb
outsl
cli
nop
xor
sbb
sub
add
stos
sbb
push
inc
pusha
lds
push
adc
scas
adc
ds
xchg
xlat
xor
in
ret
mov
imul
mov
fstpt
sbb
cmp
popa
adc
dec
mov
adc
mov
in
jnp
imul
push
or
es
sub
sbb
add
xchg
inc
hlt
scas
jno
pop
dec
pop
or
out
movsl
mov
jbe
leave
cmp
inc
xchg
insb
test
outsb
jns
jg
adc
repnz
or
es
movsl
hlt
or
sbb
data16
jle
xchg
xor
pop
in
mov
sbb
jmp
add
mov
mov
jge
xchg
ljmp
mov
rclb
adc
clc
xlat
jg
cmp
mov
adc
test
jecxz
pusha
sbb
mov
or
sub
mov
sub
in
test
sbb
cld
push
nop
inc
mov
mov
jae
fnstenv
xorl
xchg
xor
cli
jne
sbb
add
fmull
mov
ss
fwait
cmpl
ret
das
add
mov
push
js
icebp
loop
sub
push
jo
lock
push
std
pcmpeqd
insl
mov
imul
loope
pop
mov
rolb
dec
dec
sbb
xchg
and
aaa
lea
int3
insb
mov
icebp
jbe
dec
sahf
les
sub
jg
dec
inc
imul
pop
xorl
sahf
faddl
pop
pop
outsl
js
sbb
stos
and
or
sbb
daa
es
hlt
add
push
leave
mov
jo
cli
fistps
adc
shll
ret
test
fsts
sbb
inc
mov
js
jg
jo
iret
push
aam
jle
es
iret
push
jmp
mov
nop
imul
test
leave
inc
and
ret
repnz
aaa
or
notl
or
cmpl
aad
mov
pop
clc
mov
popf
push
js
jnp
jne
fsubrs
cli
aaa
shrl
and
or
sbb
xlat
fistpll
pop
fstps
mov
mov
mov
jbe
or
stc
cmpsl
cs
loope,pt
lret
mov
mov
aad
pop
xor
mov
push
scas
inc
mov
es
or
xchg
mov
pop
test
sub
xlat
lods
jno
push
std
in
or
mov
aaa
mov
fbld
mov
icebp
mov
enter
add
or
sub
mov
pushf
pop
xlat
aaa
xchg
inc
fsubr
repnz
xchg
push
lahf
mov
inc
sbb
pusha
out
icebp
inc
pusha
arpl
dec
cmpb
xor
push
pop
neg
add
aam
cmp
jo,pn
flds
push
lods
jle
add
cmp
mov
dec
pop
and
mov
pop
dec
les
popa
jle
pushf
push
sarl
call
aam
sti
add
idivb
sbb
mov
sbb
lret
mov
push
es
mov
xor
aas
jo
sbb
out
or
xchg
pop
dec
sub
in
jmp
inc
mov
shll
inc
jnp
mov
jns
dec
cltd
pop
jp
xlat
movsb
lods
xlat
jo
jle
jecxz
cwtl
mov
mov
inc
lods
in
lock
sub
jo
mov
test
jge
and
icebp
mov
inc
adc
jno
dec
adcb
jb
jle
hlt
xchg
insb
icebp
lock
stc
cmpsb
mov
dec
in
icebp
clc
sbb
leave
mov
mov
xor
in
xchg
mov
mov
test
mov
mov
adc
pop
sbb
popa
inc
mov
inc
inc
prefetcht1
rorb
aad
dec
mov
dec
mov
lods
pop
sti
xchg
scas
mov
push
adc
iret
push
mov
jp
jmp
into
xchg
fdivr
cli
or
mov
sbb
cmpsl
fadds
fists
loopne
aas
mov
dec
mov
or
scas
in
mov
adc
lret
add
inc
ss
xchg
or
outsl
lcall
pop
adc
mov
dec
aad
pop
mov
lcall
repz
add
fnstenv
in
in
das
jns
inc
push
pop
aam
push
xchg
mov
mov
call
push
pop
adc
jae
je
fwait
popa
mov
pop
push
inc
notl
jecxz
nop
adc
test
outsb
inc
xor
xchg
out
inc
and
mov
push
cmpb
adc
pop
xchg
pushf
xor
cmpsl
mov
out
rcr
push
ret
jb
iret
inc
hlt
stos
rclb
or
ljmp
dec
add
dec
test
cmp
pop
jae
inc
xchg
adc
and
jge
xchg
into
cltd
mov
push
test
imul
mov
aam
loopne
add
cmp
in
dec
mov
fimull
cwtl
adc
loop
jmp
imulb
cmp
sub
cmp
je
pop
sub
cltd
ljmp
push
rorl
in
stc
mov
sbbb
cld
addl
adc
loop
mov
mov
push
dec
roll
add
inc
loop
jecxz
adc
mov
inc
mov
push
outsl
lea
popa
push
into
ret
xchg
out
inc
jge
pop
lcall
ficompl
dec
pushf
rolb
stc
outsb
ror
test
xchg
mov
xor
pop
in
mov
sbb
inc
andl
in
adc
movsl
shl
lods
push
or
lds
jo
mov
call
lea
mov
add
lcall
shlb
xor
jl
mov
cmpsb
pop
mov
enter
add
insl
bnd
cmpsb
mov
mov
cmp
jg
fisubs
push
push
bound
fstpl
lret
lds
gs
repnz
enter
push
mov
pusha
pop
fcomps
pop
xchg
pusha
js
fsub
adc
pop
shlb
adc
push
mov
jne
cs
jmp
mov
out
punpcklwd
nop
ljmp
jb
dec
sbb
mov
or
and
pop
clc
test
push
lahf
scas
or
test
jbe
xor
movsl
push
jbe
mov
dec
loopne,pn
pop
movsl
and
xor
pushl
mov
mov
dec
mov
cmp
idivb
dec
dec
repz
mov
cmpsb
aam
shrl
mov
fdivrl
push
mov
mov
mov
cs
nop
jmp
clc
cli
mov
call
cs
xchg
cmpsl
popf
das
push
sarl
inc
inc
push
and
push
mov
out
xorl
mov
aad
dec
cltd
stos
xlat
add
gs
or
shll
adc
test
lds
mov
stos
mov
sahf
add
shll
mov
test
fwait
les
xchg
rclb
pop
and
popf
popf
mov
stc
or
or
loope
in
push
or
dec
fldt
lahf
adc
adc
xor
pusha
xlat
push
cmp
xchg
and
jo
es
leave
loop
cmp
leave
lods
mov
inc
adc
xor
imul
loop
adc
stc
jg
lods
sub
int
sbb
mov
rol
es
and
xor
jb
jbe
xor
idivl
int3
andb
scas
push
fcompl
mov
pop
mov
mov
lret
fidivl
lea
test
arpl
movsb
fninit
rol
xchg
jg
mov
mov
pop
test
mov
ret
jp
enter
mov
xchg
out
cmp
pop
lret
mov
sub
pop
push
ljmp
cmpsl
je
test
test
dec
xor
dec
lds
lock
xchg
jno
mov
mov
jmp
mov
sub
cltd
leave
jl
and
arpl
cld
pop
mov
sub
scas
mov
test
sti
add
jge
shlb
cmpsl
out
mov
data16
inc
jno
add
mov
out
push
aam
mov
es
adc
arpl
out
xchg
mov
mov
sub
addl
cld
pop
das
lahf
inc
cmp
outsl
jb
sbb
dec
or
div
inc
cmp
mov
adc
out
jno
dec
or
movsl
dec
mov
and
xlat
or
pop
pop
sub
mov
dec
mov
mov
jns
gs
mov
push
dec
lods
faddl
inc
movsl
scas
cmpsb
jo
cmp
sub
jb
fdiv
out
mov
dec
push
into
mov
clc
mov
das
sub
mov
add
push
jne
fdivl
inc
jmp
adc
out
jg
pushf
mov
lock
scas
iret
and
mov
data16
iret
movsb
out
in
jl
xor
push
add
pop
imul
inc
popf
stos
mov
and
push
call
dec
aam
xor
mov
lret
mov
cmpsl
jno
and
xlat
sub
clc
mov
insb
mov
out
es
push
lahf
faddl
in
bnd
fists
add
jb
jae
outsl
add
shlb
xchg
nop
loop
aam
roll
pop
xchg
fstl
sbb
xor
dec
inc
cld
push
xchg
sub
mov
lcall
xor
aad
xor
mulb
mov
popf
xor
cmp
repz
ds
or
mov
clc
int3
jns
jle
cmp
imul
cmc
movsb
jle
mov
xchg
sti
xor
xor
xor
mov
popf
test
insl
sbb
mov
popa
or
dec
ret
sub
sub
xchg
mov
out
pop
cld
push
pusha
xorl
push
ficoms
outsl
arpl
or
shll
mov
test
sbb
push
out
lods
mov
jbe
cmc
sbb
jns
gs
inc
dec
aam
xchg
sbb
dec
adc
xchg
test
movsl
lds
orl
fildll
pop
mov
std
leave
jl
add
mov
mov
test
inc
mov
or
jl
test
jecxz
lahf
fdivrl
push
js
in
xchg
sbb
repnz
push
aas
and
fisubrl
cmp
jae
jo
xlat
shl
filds
and
mov
nop
int3
int3
lret
mov
fiadds
cli
xchg
pop
in
mov
fsts
ret
push
fldt
insb
push
imul
popf
xchg
fidivrs
iret
push
push
push
lds
lods
and
stos
stos
sahf
aaa
dec
mov
aam
mov
loope
pop
mov
push
mov
in
push
xchg
jmp
mov
psubusb
insl
icebp
mov
jg
out
mov
cmp
dec
sub
mov
add
insb
dec
jne
cmpsl
jmp
add
es
negl
xchg
iret
pop
adc
out
dec
jecxz
mov
mov
sbb
dec
stos
jecxz
jmp
jbe
xor
dec
decb
push
pop
push
rorl
ret
addr16
dec
dec
cmp
fsts
mov
insb
out
loopne
nop
fdivrl
mov
cmp
dec
stos
cmp
shl
ret
in
lcall
shl
dec
mov
das
push
or
outsl
xor
lea
sahf
and
out
aam
or
pop
fisubrl
push
xorl
cmp
daa
fisttpl
and
test
xor
mov
in
ljmp
cmp
mov
nop
jg
testl
into
fisttps
and
negb
in
js
mov
std
jecxz
sub
stc
imul
inc
subb
mov
sahf
mov
outsb
in
pop
jg
mov
dec
add
mov
pop
in
js
outsb
jecxz
dec
xor
push
xchg
std
adc
sub
xor
sub
inc
xor
dec
xchg
or
mov
das
inc
popa
stos
shr
aaa
pushf
pop
jmp
lock
movsl
mov
xor
xchg
dec
jmp
adc
stos
adc
enter
cs
xchg
out
jge
or
add
in
cmpl
inc
cmp
shrb
mov
stc
pop
sahf
sbbb
jbe
and
cmp
add
repz
jl
dec
out
inc
jae
push
jl
inc
jmp
rcl
xchg
sub
inc
xchg
sbb
cli
movsl
sahf
test
xcrypt-ctr
cmpsl
pop
xor
int3
rorl
push
and
sarl
sub
sbb
movsb
fbld
xor
sti
lock
pop
cmpsb
or
inc
xchg
push
shll
cmp
xor
adc
sub
cmp
xchg
in
jl
dec
dec
imul
pop
jp
popf
outsl
push
jle
pusha
decl
test
repnz
inc
xchg
mov
das
cmp
pop
dec
lods
in
out
sbb
cmp
lret
stc
sub
cmpsb
clc
jae
adc
jmp
lret
inc
out
jmp
nop
cld
mov
cmp
adc
outsl
int
es
pop
inc
popf
sarl
jle
jecxz
jecxz
loope
repz
outsl
outsb
xor
lods
scas
hlt
lods
xchg
dec
jbe
stc
aaa
lret
adcl
into
or
adc
mov
inc
data16
add
xor
sub
pushf
xor
sbb
clc
fisubrl
scas
xchg
jl
lahf
icebp
xchg
addb
inc
aas
insl
mov
es
xchg
loope
jle
in
mov
test
pop
dec
dec
jp
test
fadds
insb
adc
cmp
aam
fwait
and
xchg
and
out
cmp
push
aaa
push
jecxz
stc
xchg
fldenv
out
mov
imul
jmp
cmp
fsubl
lahf
pusha
pop
addr16
xchg
add
gs
mov
ljmp
fs
or
xor
pop
mov
sbb
mov
mov
mov
fistpl
jnp
jno
add
sbb
jbe
xchg
std
data16
jle
or
sub
ds
loope
cltd
sbb
cld
xchg
je
jnp
jmp
data16
call
add
fcomps
inc
xchg
sub
mov
jg
rol
shlb
push
cmp
and
call
push
repnz
inc
pushf
nop
dec
push
lds
scas
fwait
cmp
inc
inc
mov
sti
sbb
adc
mov
scas
popf
jge
int
mov
dec
lods
adc
mov
out
adc
add
cs
xchg
int3
fisttpll
loop
sub
mov
fstpl
hlt
insl
jne
aam
dec
or
xor
sub
rorl
push
pop
test
lods
jno
rcl
sbb
stos
jno
out
into
outsb
mov
int
dec
aad
mov
in
jecxz
out
sti
pop
lret
dec
fbld
pop
xor
mov
push
adc
cwtl
out
xchg
or
aas
and
repnz
push
mov
fcoms
push
adc
mov
xchg
out
pop
outsb
lahf
imul
cmc
jmp
jne
inc
das
jne
push
lock
mov
adc
in
cmc
inc
cwtl
mov
js
outsb
ret
imul
imul
xor
scas
mov
dec
mov
pushf
pop
fsts
roll
xor
mov
call
push
xchg
les
stos
sub
int3
rcrl
loope
push
mov
aaa
ljmp
jne
mov
ja
jbe
pop
out
sbb
and
mov
jnp
push
sbb
push
add
pop
stos
xchg
pop
int
jecxz
lret
sarl
aas
adc
in
push
cmp
ss
scas
inc
idivb
loopne
xchg
mov
mov
and
or
or
pop
mov
mov
stos
out
int
stos
aaa
das
dec
sub
testl
aam
pop
sbb
aad
mov
sarb
dec
cmp
add
pop
sahf
adc
insl
and
insb
push
aad
adc
inc
dec
nop
rorb
xchg
xorl
inc
sub
xchg
push
inc
or
jmp
int
mov
jp
imul
in
jns
push
cltd
loopne
add
xchg
out
leave
mov
sbb
imul
das
loop
bound
or
out
imul
cmp
sbb
xchg
pop
shll
sub
jns
pop
lcall
fsubl
fs
dec
gs
xchg
mov
push
aam
insl
mov
outsl
pop
jno
cwtl
xor
sbb
mov
lea
sbb
cmp
popf
or
sbb
sarb
or
cmpsb
jne
addr16
cmpsl
inc
xor
out
out
aad
xchg
stos
pop
outsl
sbb
fdivrs
mov
or
pusha
sbb
adc
mov
push
fisttpll
dec
sahf
sub
xlat
xchg
out
sub
je
movsb
je
lea
sub
cmp
or
jge
test
lock
aaa
mulb
jle
or
test
pop
in
xor
inc
ss
push
mov
mov
cs
push
loope
jae
jecxz
call
push
mov
lret
cmp
arpl
pop
add
sub
sub
pop
dec
loopne
push
stos
sahf
sti
cmp
or
lahf
mov
jl
div
pop
lahf
dec
scas
into
pop
in
aas
push
pop
mov
adc
cmpsl
sub
les
mov
cs
js
jmp
xchg
or
test
mov
mov
and
mov
lahf
dec
adc
add
push
aam
mov
mov
mov
dec
push
movsb
jns
ror
fsubl
loope
push
sbb
outsb
gs
push
mov
cltd
sub
add
push
setb
insl
push
sbb
mov
push
out
add
vmovhpd
mov
aam
jmp
cwtl
mov
sbb
vmread
ss
out
ret
mov
gs
pop
push
mov
insb
pop
add
loope
sti
pop
xchg
stos
andb
add
push
jnp
mov
jge
das
inc
pop
and
jge
cmp
cld
adc
mov
xchg
rorb
insb
cmc
push
cli
fildl
arpl
xchg
nop
and
repnz
add
mov
cmp
cmc
call
gs
xchg
lock
xor
andl
mov
pop
mov
mov
mov
xchg
pop
xor
mov
int3
push
loopne
jecxz
cmp
sub
insl
arpl
sbb
pop
mov
mov
pop
out
sbb
add
ljmp
lret
lret
inc
pop
mov
and
aad
aaa
cmp
pop
fstl
mov
pop
mov
add
cmc
ja
inc
bound
addr16
sub
ss
and
insl
movnti
inc
mov
pop
sbb
call
dec
jns
push
js
sahf
adc
int
repz
or
mov
or
addr16
add
ret
pop
aaa
or
inc
mov
mov
call
cmc
and
stos
mov
fstpl
add
arpl
dec
sahf
icebp
xchg
ljmp
cmpsb
fs
repnz
push
arpl
cmp
inc
test
out
testb
xchg
xor
test
cli
dec
jne
notb
pop
pop
mov
add
test
lea
xchg
xchg
xchg
cs
dec
icebp
das
leave
negb
jp
mov
mov
ficomps
sub
dec
push
dec
out
add
test
pop
and
int
jmp
popa
xor
mov
and
jbe
mov
mov
out
add
or
mov
cmp
loopne
mov
jb
sbb
and
into
aad
sub
sub
in
nop
or
pop
sahf
cmp
rorb
mov
les
mov
and
scas
xchg
daa
inc
cwtl
xor
popa
shr
in
fsubrs
cmp
xchg
add
pop
xchg
out
cltd
pop
sahf
stos
cmp
and
nop
pop
sbb
repz
scas
cmpsl
jg
outsl
xchg
push
and
out
and
xorl
sbb
xchg
test
cwtl
add
push
pop
xor
mov
ret
lret
and
aaa
out
fdivrl
fisubrl
out
leave
jle
sub
outsl
popa
imul
and
cltd
or
movsb
scas
and
pop
cmp
mov
aaa
xor
dec
stos
mov
cli
sti
test
jb
sti
dec
sbb
mov
sub
adc
mov
test
or
scas
mov
adc
es
stos
cmpsl
rcr
pop
xlat
pop
jno
pop
fdivrl
lods
mov
int
das
retw
outsl
xor
or
in
push
mov
pusha
pushf
push
mov
sbbl
jne
outsb
fs
jmp
or
pop
popf
lock
scas
rcrb
cmpsl
out
push
repnz
in
and
test
cli
lcall
ljmp
hlt
adc
fidivs
leave
jne
push
jecxz
xchg
dec
xchg
mov
pop
push
lret
inc
xchg
pop
int
add
adc
adc
adc
ffree
push
xchg
aaa
lock
out
fwait
lock
shll
lds
scas
sti
cld
xchg
push
inc
cmp
pushf
xorl
jnp
pop
jg
movl
scas
inc
jmp
inc
jno
sahf
jo
popf
dec
lds
dec
jp
and
and
aaa
adc
adc
repnz
cmpsb
cmp
inc
shll
adc
sbb
push
inc
add
pop
data16
add
mov
xchg
push
ret
mov
test
pop
shll
repz
fildll
je
xor
pop
es
cmpsb
int
push
push
pop
xchg
insb
rclb
push
inc
ret
lcall
push
push
test
out
lods
arpl
adc
movsl
xchg
and
push
and
or
lahf
aam
cmp
cwtl
ss
mov
cmpsl
or
push
xchg
push
and
in
jbe
data16
fimuls
adc
push
cmpsl
inc
dec
cmp
push
lret
sbb
push
and
lea
addr16
test
cltd
flds
loopne
push
dec
stos
in
pop
rol
iret
adc
cmp
daa
jo
and
or
cmpb
xor
push
pop
adc
insb
out
add
addr16
es
or
mov
lods
test
lea
insl
push
in
jno
fsubr
int3
push
mov
ret
daa
data16
data16
push
lahf
mov
aam
adc
mov
arpl
mov
dec
out
popa
xchg
sbb
test
icebp
inc
mov
call
add
push
data16
add
mov
dec
in
xlat
dec
sub
test
aas
test
inc
inc
int
and
lods
or
cmc
inc
sub
rorl
xor
fsubs
int
mov
and
mov
fcompl
dec
fwait
push
dec
fbstp
push
xchg
push
fdivs
push
sbb
inc
shlb
pop
scas
push
mov
mov
in
push
mov
jge
jbe
add
or
and
dec
push
rcrb
lods
jnp
xchg
adc
add
shlb
push
cwtl
mov
mov
sub
int3
mov
pop
mov
inc
adcb
rorl
cmp
sub
xchg
lcall
rcrb
adc
mov
cmpsl
cmp
pop
fs
repnz
sbb
and
into
jb
loop
mov
test
enter
mov
xchg
mov
xor
movsb
inc
xor
negl
pop
enter
cwtl
fcmovnu
insl
xor
lret
test
or
lcall
cmp
mov
lret
sub
jg
call
outsb
mov
mov
incb
cmp
sbb
mov
mov
out
insl
clc
fs
test
dec
and
mov
jae
mov
ss
mov
outsb
jle
jbe
rorl
outsb
enter
xchg
jne
test
lock
loopne
push
lcall
sbb
cmpsl
sub
cmp
pushf
adc
xchg
sbb
daa
cwtl
andl
sub
decl
out
push
add
xchg
inc
push
pop
iret
xchg
push
roll
inc
sub
or
ret
divb
mov
mov
mov
iret
popa
hlt
lcall
and
in
aam
fbstp
pop
fldcw
stc
add
in
push
or
ret
pop
mov
gs
iret
mov
jmp
inc
movsl
adc
idivl
test
cltd
xlat
test
pop
daa
mov
mov
stos
mov
push
push
push
cmp
push
enter
scas
pop
sbb
dec
or
add
andl
daa
scas
push
popf
xchg
orl
das
shl
fst
dec
xchg
adc
xor
pop
mov
and
xor
pop
data16
push
mov
adc
dec
cld
mov
fs
mov
xor
pop
lods
mov
aaa
push
pusha
mov
sti
jae
lods
clc
add
fstl
mov
push
add
ljmp
push
fsubs
xlat
jbe
shlb
arpl
sbb
outsb
in
scas
les
jnp
and
add
ret
mov
sub
inc
jno
stos
shlb
sbb
add
xor
add
jb
div
fisubl
stos
inc
push
inc
jmp
inc
test
aaa
push
mov
push
pop
lretw
es
lret
std
mov
or
mov
int
scas
or
outsb
mov
sub
inc
xchg
mov
out
xor
xor
cmc
ss
jl
pop
inc
cltd
sub
push
stos
sbb
jge
cs
jns
in
out
jle
in
rcpps
cmp
mov
inc
jge
shll
dec
out
jp
jg
add
les
icebp
jb
mov
clc
out
fcmove
lret
mov
pop
pop
ja
or
mov
sub
push
and
xor
jmp
adc
bsr
cmpl
dec
push
push
testl
jp
popf
cmpsb
jle
sub
inc
lahf
imulb
xlat
adc
xlat
insl
and
sub
xchg
adc
int3
dec
stc
push
insb
and
testb
fstpl
js
pop
inc
cs
sbb
gs
jl
mov
push
xchg
pushl
call
aad
sbb
xchg
repz
and
sbb
xchg
arpl
ret
cmp
push
push
push
mov
aam
or
xchg
cmp
out
dec
sahf
das
ds
mov
jb
int
repz
sub
clc
nop
loope
insl
aad
jl
mov
xchg
cmp
jae
jge
inc
jle
stc
stos
sti
mov
jle
inc
int
pop
pusha
stc
int
ret
xchg
stos
lret
xchg
lret
jns
scas
movsl
xchg
jl
jge
hlt
cmp
add
or
xchg
jnp
fsubr
xor
sub
icebp
pop
mov
sbb
push
push
xor
push
inc
leave
jecxz
jne
fsubrl
mov
jne
jae
jmp
movsl
push
jg
jmp
jp
arpl
ret
xor
addr16
cmp
xchg
inc
add
lock
loop
jo
roll
movsb
adc
out
jmp
lcall
ret
jle
or
imul
push
add
add
add
std
push
cmc
les
push
adcb
push
add
sub
gs
jg
ljmp
xor
xchg
sbb
pop
jge
das
push
jmp
adc
aaa
sub
and
jb
pop
out
jmp
call
les
pop
repnz
std
add
mov
pop
jmp
xchg
jl
push
pop
mov
xchg
fcomps
mov
xchg
imul
cmp
adc
cs
lock
push
push
push
sahf
xor
iret
dec
add
sbb
or
enter
imul
mov
mov
mov
subb
pop
mov
add
pusha
jae
push
mov
inc
jecxz
mov
xchg
mov
inc
add
fistpll
dec
in
jl
shll
dec
sahf
xchg
or
nop
pop
and
mov
xchg
sub
nop
outsl
mov
pop
mov
addr16
and
popa
cmpsb
xlat
xorb
mov
das
rclb
mov
testb
pop
mov
inc
pop
adc
arpl
cs
ret
pop
out
andb
push
jno
fwait
adc
mov
lea
in
lock
stos
ljmp
iret
lcall
outsl
fwait
xchg
mov
cld
addr16
or
shlb
insb
int
pop
xor
dec
call
cmp
test
negl
aas
repz
push
test
inc
pop
inc
xchg
ficoml
push
rolb
xchg
cmp
inc
test
xor
add
sti
xchg
mov
popa
jo
loopne
into
sbb
or
aas
imul
jno
xor
or
test
or
enter
imul
dec
scas
sbb
mov
je
sbb
xchg
sub
sbb
xchg
push
and
cwtl
addr16
mov
out
nop
mov
xor
imul
and
pop
pop
enter
xchg
ja
xchg
aad
inc
scas
enter
xchg
into
and
mov
rcl
test
imul
test
repnz
icebp
ss
and
dec
or
mov
loopne
pop
or
loopne
test
adc
jmp
cmp
fcoms
cvttps2pi
jb
add
jg
arpl
icebp
iret
and
mov
mov
xchg
sub
ljmp
mov
sub
test
mov
xlat
sbb
test
in
xchg
ret
cmp
out
insl
pop
outsl
test
bound
jns
pop
sub
or
mov
xor
bound
icebp
in
lret
test
in
xchg
jo
pop
inc
outsl
pop
testb
inc
mov
sbb
out
pop
int3
push
inc
mov
repnz
push
mov
adc
or
lret
or
ror
xorb
shlb
mov
popf
testb
stos
mov
ror
cwtl
add
clc
inc
jmp
int
and
or
imul
movsb
jmp
cmc
movsb
lods
push
and
jge
inc
into
sub
shll
mov
mov
mov
scas
push
mov
cli
push
pusha
cwtl
ljmp
pushf
int3
popa
outsb
in
ljmp
dec
cmp
divl
lods
daa
ret
pop
and
stos
lret
dec
jbe
push
gs
or
ljmp
pusha
enter
lea
lea
sbb
in
jmp
sub
mov
mov
je
das
dec
push
jnp
out
push
inc
sbb
lock
ret
fisttps
jo
mov
loope
imul
xchg
out
pushf
cld
fbld
movsl
cmp
jbe
fisttps
sbb
xor
cmp
adc
inc
rorb
xchg
inc
add
xchg
push
cmp
out
cs
outsl
sub
xor
js
sub
jne
in
inc
fistps
in
push
ja
fcomps
sub
dec
dec
stos
movsl
outsb
insl
aam
das
addr16
out
cli
ja
popa
pop
inc
outsb
xchg
shll
lods
xor
sub
push
ja
and
cmp
add
pop
rcll
xchg
into
mov
test
sbb
scas
add
jbe
inc
mov
sahf
repz
add
mov
scas
inc
sbb
pop
fcoms
fldt
pop
cmp
sti
cmp
mov
dec
mov
adc
jns
adcb
in
aaa
ljmp
jl
push
nop
mov
push
or
test
fdivs
aam
jle
into
adc
sbb
dec
out
test
push
mov
inc
fmuls
pushf
nop
sbb
ljmp
in
mov
cmp
jbe
mov
roll
aad
fnsave
into
pop
aas
jecxz
mov
jne
in
dec
jp
inc
dec
mov
bound
pop
cmp
sub
xchg
xchg
loopne
mov
pop
xchg
inc
lods
decb
add
push
jmp
add
outsb
and
push
adc
adc
data16
jge
test
gs
bound
cmp
mov
das
jecxz
jmp
jmp
fwait
out
dec
or
mov
pop
mov
pop
loopne
fwait
dec
sti
in
and
aaa
loop
outsb
push
sbb
out
stos
xchg
sahf
pop
xchg
inc
gs
lods
jbe
mov
inc
dec
pop
sbbl
movl
int3
imul
lods
addr16
xlat
negl
add
jbe
loope
xchg
xor
gs
scas
add
cmp
sbb
les
cmp
jle
jo
shlb
jno
movsl
xchg
xchg
decl
pushf
sub
movsl
adc
jae
xchg
adcb
insl
jge
mov
fstpt
mov
or
jge
cli
xchg
sbb
cld
xor
push
sbb
inc
sbb
ret
mov
xlat
data16
xor
sub
xor
sbb
je
ja
outsb
push
int3
xor
je
push
fs
fisubl
mov
adc
sub
pop
clc
mov
pusha
shlb
add
pop
pop
xchg
sub
push
dec
push
fnstcw
pop
cmp
xchg
mov
xor
xor
and
std
mov
add
sbbb
push
inc
inc
mov
sbb
inc
mov
push
out
dec
and
lods
cmp
push
mov
fstps
add
fbld
cmpsb
jge
push
adc
popf
jne
jecxz
mov
popl
xchg
arpl
xor
int3
mov
hlt
jl
lods
push
pop
mov
mov
or
scas
repz
rcr
pop
out
jbe
sbb
cmp
sbb
push
push
push
xor
ret
push
cmp
test
fwait
cmp
insl
gs
mov
sbb
push
addl
jp
mov
dec
cmc
add
mov
xchg
mov
mov
in
mov
mov
mov
sbb
test
push
inc
popf
sub
fstps
cld
int
dec
in
add
add
gs
xor
lock
sti
ljmp
bnd
jl
aam
pop
scas
stos
and
or
cmp
test
push
sub
xor
jae
lahf
push
int
xchg
out
jno
cmp
fucomip
iret
movsb
adc
addr16
out
popa
dec
test
xchg
in
aam
and
xchg
scas
pop
add
inc
inc
jbe
pop
mov
xchg
scas
xor
mov
dec
mov
jbe
iret
popl
jns
jno
mov
ja
pop
hlt
mov
inc
dec
sti
cmp
add
into
mov
inc
incb
dec
mov
test
pop
jmp
es
ret
push
out
pop
jns
fstl
nop
std
mov
pop
aad
in
sub
mov
fldt
call
mov
sahf
test
pop
jo
mov
xor
dec
testb
lods
mov
xor
shl
in
dec
js
js
outsb
es
cwtl
hlt
jecxz
in
dec
xchg
cmp
push
notb
sbb
add
icebp
jno
lods
xchg
scas
push
lcall
das
pushf
xchg
add
xor
aam
xlat
sub
mov
mov
sbb
or
xchg
shr
leave
mov
adc
push
jo
pop
outsl
cmp
push
aad
mov
xchg
inc
pusha
cmp
std
cltd
mov
and
lret
jmp
addr16
cs
sbb
push
inc
jp
mov
push
es
or
mov
out
inc
ret
adc
xchg
test
fstps
push
imul
call
nop
movsb
lods
out
mov
test
dec
mov
cmp
sbb
mov
xor
mov
cmp
fists
xorb
dec
insl
adc
es
or
xchg
sub
call
xor
adc
mov
xchg
insl
orb
pop
les
std
mov
adc
xor
rorb
pushf
aad
adc
or
add
push
shlb
iret
mov
cli
cmp
or
dec
lds
mov
mov
xchg
dec
or
mov
sub
test
insl
inc
mov
xchg
dec
fcompl
aaa
stos
lret
test
dec
mov
xchg
into
lock
stos
dec
xchg
sub
int
mov
mov
jo
cmp
pop
xchg
lods
cmp
adc
icebp
mov
shl
push
mov
cmp
or
jp
pop
in
data16
push
pop
pop
pop
repz
fsubrl
push
push
lock
push
xor
mov
sbb
mov
xchg
mov
and
mov
xchg
jmpw
sbb
decl
cmp
fmulp
cld
push
jae
dec
jge
cmp
mov
movsb
shll
mov
scas
sbb
fiaddl
push
test
stc
mov
jg
or
jecxz
push
hlt
push
fadds
mov
insl
jno
push
repz
jno
mov
jnp
mov
arpl
idiv
sub
adc
adc
nop
add
xor
add
and
lods
inc
add
pop
lret
push
push
pusha
mov
sahf
lcall
faddl
add
loope
jg
xchg
jg
sbb
cmp
test
das
dec
mov
xchg
add
mov
mov
sub
xchg
sbb
in
clc
pop
call
fnstcw
push
mov
xchg
sub
push
test
inc
lods
lods
scas
xor
jmp
lcall
lahf
pop
jp
test
adc
outsl
or
lds
push
and
hlt
divl
pop
pop
fiadds
fcmovu
mov
out
or
scas
orb
inc
push
fisubrl
shrl
pop
int
mov
mov
aaa
xor
lret
jl,pt
repnz
mov
shll
lock
dec
shl
sbb
push
xchg
jle
inc
outsb
push
mov
cwtl
fiadds
add
fmull
ficompl
jg
push
in
dec
gs
ret
xor
aad
mov
ds
inc
push
xlat
test
mov
add
mov
dec
cmpsl
cs
cs
shll
pop
add
cmp
pop
addr16
not
xchg
mov
cmp
or
sti
pop
aad
fs
cmp
mov
stos
mov
xchg
inc
aam
add
fadds
sbb
xchg
sbb
aas
incb
mov
pop
and
add
dec
into
mov
mov
inc
ficoml
jbe
pop
fdiv
inc
stc
arpl
xchg
mov
in
mov
pop
jne
ret
sti
lea
or
dec
inc
sahf
or
adc
out
xor
xlat
lret
outsb
mov
adc
icebp
mov
in
cmpsl
inc
out
jne
or
sti
into
sbb
mov
pop
jnp
shlb
sbb
jg
lcall
fcoms
mov
int
xlat
sbb
jecxz
insl
cltd
loopne
mov
cmc
stos
fldl
sbb
and
out
push
fdivr
outsb
fnstcw
mov
adcl
adc
push
enter
lret
inc
mov
clc
cs
xchg
mov
xchg
je
sub
int3
xor
jb
push
loope
in
gs
lods
aam
pop
pop
loope
xlat
dec
add
dec
aam
and
pop
enter
bswap
jl
mul
test
xchg
inc
inc
lods
test
jno
adc
call
sub
pop
les
jl
stos
mov
mov
fimull
sbb
dec
jne
xchg
mov
out
popf
movsb
movb
push
sbb
sub
xchg
mov
or
push
and
mov
outsl
dec
mov
sub
inc
ficoms
ja
clc
rcll
adc
loope
jmp
pop
ret
aas
pop
hlt
jle
jecxz
mov
idiv
nop
push
mov
xor
or
idivl
pop
sbb
lret
out
sti
xchg
rclb
and
xor
in
out
xorb
inc
jbe
xchg
ja
add
out
push
ss
iret
inc
jl
xor
faddp
mov
pop
sbb
mov
mov
add
add
fstl
push
enter
jb
mov
punpckhbw
sub
andl
add
out
fidivs
xlat
loope
repz
clc
and
and
push
cmp
fcos
aad
sub
sbb
and
sub
movb
mov
les
push
xchg
cmp
jns
mov
cmpl
lds
and
pop
lcall
inc
fbstp
sahf
xchg
and
sub
dec
cli
lret
sbb
add
dec
mov
lahf
mov
fsubl
cmpsl
push
int3
iret
loopne
dec
ss
mov
cmpl
jne
inc
push
inc
movl
cmpsb
enter
mov
mov
pusha
shr
ds
sbb
clc
fmull
and
mov
jmp
outsl
mov
das
movsb
int
rcr
jg
dec
imul
or
fdivl
stos
sub
test
popa
add
mov
adc
addr16
mov
sub
cmc
xor
loop
push
leave
out
into
pop
push
xor
jg
xchg
clc
loop
and
aaa
dec
and
xor
mov
jnp
les
push
in
sbb
mov
test
out
jle
sub
push
mov
mov
adc
cmp
nopl
rolb
sbb
sub
sub
pop
add
xor
shl
imul
inc
push
lods
flds
mov
inc
jno
lods
std
xchg
mov
mov
mov
sub
pop
push
inc
add
pop
sbbb
xchg
scas
sbb
add
sbb
sub
pop
pop
call
addl
dec
jge
cmp
cmp
push
jnp
inc
lods
or
call
shll
sbbl
fisubrs
push
cmpl
and
mov
test
into
filds
sbb
sub
xchg
adc
push
mov
adc
mov
xor
dec
mov
xchg
or
xor
jae
sbb
lods
mov
rolb
sub
adc
int
pop
push
pop
jecxz
aaa
shrl
dec
enter
sub
std
jl
scas
das
mov
bound
cmp
lock
in
movsb
fadd
sub
out
lods
lock
push
icebp
or
xchg
and
stos
add
inc
or
jno
xchg
xorb
adc
dec
loop
fs
xchg
mov
test
movl
cmp
cld
es
in
push
das
dec
outsl
sti
ljmp
outsl
mov
and
jg
cmp
push
sbb
scas
adc
xor
jbe
or
pop
xchg
fs
stos
push
lahf
or
scas
stc
mov
aam
inc
sub
mov
add
jl
dec
push
insb
xor
push
xchg
xor
movsb
out
cmp
adc
inc
out
cmp
icebp
lea
div
add
push
js
aaa
push
sbb
or
cs
fs
add
dec
cmp
pop
or
sbb
leave
ss
cmpsb
fnstcw
addr16
test
sub
cmp
bound
rclb
jo
xor
push
lret
inc
loope
cmp
ret
and
insl
movsl
flds
shll
xchg
stc
pop
das
jae
sub
fistpl
clc
divb
hlt
adc
leave
fnstsw
hlt
cmp
shrl
insb
mov
jle
pop
or
sbb
lds
pop
cld
dec
and
imul
pop
or
loope
sub
or
aam
iret
out
push
inc
test
and
aad
std
jg
jle
jge
xor
add
dec
in
mov
stc
scas
mov
daa
inc
and
repz
cmp
lret
pushf
fsubrl
mov
bound
imul
jb
and
js
push
insl
mov
mov
fistpl
rcrl
xchg
add
jp
and
ja
adc
pop
dec
pop
dec
mov
mov
pushf
mov
cli
mov
or
in
jb
cmpsl
rorb
xchg
xchg
jp
cli
out
lds
mov
xor
int
daa
cmp
cmp
pop
jp
dec
into
mov
dec
adc
and
xchg
push
imul
add
xor
xor
bound
mov
adc
lods
adc
out
loop
notl
lds
inc
inc
dec
lds
int
mov
out
sub
push
push
cmp
shr
jae
mulb
cltd
ds
and
mov
rcrb
adc
mov
sub
mov
adc
imul
aas
subb
pusha
imul
and
out
call
flds
popf
ds
jno
in
fwait
loop
dec
aad
sub
popa
loopne
mov
sti
xor
mov
adc
mov
inc
fstl
fsubl
jle
inc
out
add
push
inc
jo
in
rorb
sub
mov
fwait
xor
mov
sbb
sub
mov
fbstp
adc
jmp
test
popf
testl
mov
cs
sbb
sbb
mov
add
mov
or
mov
sub
ja
jno
mov
testb
imul
adc
cmp
or
dec
cmp
cmp
push
fnstcw
fdivrl
xchg
fistps
pop
sub
xchg
mov
in
mov
enter
test
dec
lds
test
lret
cmp
jecxz
aaa
adc
sbb
lcall
mov
mov
decb
imul
inc
aam
xchg
mov
out
fistl
and
mov
ja
cmp
data16
into
sbb
sahf
cmp
dec
push
jge
pop
into
dec
mov
cmc
push
mov
sbb
imulb
mov
les
and
sub
or
dec
jns
push
fldl
sbb
test
mov
es
jg
mov
inc
add
cmpsb
pop
xor
les
mov
xor
test
jno
idivl
std
pop
leave
and
jecxz
adcb
aam
stos
xchg
or
jae
sub
fnstenv
xchg
inc
aam
xchg
adc
lcall
outsl
je
mov
in
dec
inc
xchg
dec
mov
inc
jle
pop
cmp
in
mov
stc
add
std
and
ficoml
push
popf
aaa
add
repz
or
cmp
sti
mov
mov
pop
mov
jg
jne
out
jns
fwait
dec
psraw
pop
sub
adc
fimuls
push
cmpb
iret
stos
stos
or
test
fildl
hlt
out
cmpsl
push
inc
or
nop
mov
jp
les
and
pushf
fldt
fildl
jp
inc
shll
push
jo
push
shll
sbb
xor
adc
lods
popa
and
test
aaa
in
imul
mov
push
shrl
push
mov
int3
mov
jle
fmuls
mov
scas
inc
push
adc
xchg
lods
scas
add
movsb
pop
xor
mov
insb
fadd
adc
lea
or
xlat
inc
fiaddl
movsb
inc
out
stc
mov
or
jbe
es
cmp
sarb
adc
push
in
jl
fsubr
lds
pop
mov
jecxz
xor
test
icebp
mov
imul
sbb
cmpsb
sbb
sbb
scas
mov
push
sbb
test
sub
and
das
jp
scas
and
ret
mov
cs
out
push
add
mov
and
jmp
negl
push
dec
movsl
mov
cmc
shlb
loopne
pop
inc
or
cmp
jl
addr16
fldl
into
ficoms
out
fistpll
xor
movb
mov
mov
push
ds
outsl
xchg
wrmsr
jge
imul
nop
addl
adc
enter
cli
les
adcb
jb
mov
in
mov
ret
loope
pusha
aaa
outsl
gs
rcl
and
adc
sub
rclb
inc
enter
int3
sub
mov
cmp
rcll
dec
mov
ret
out
cmp
add
std
and
cltd
dec
or
sahf
push
faddl
pop
add
sbb
aad
cmc
in
mov
or
std
stc
pop
push
adc
sahf
mov
xorb
leave
add
push
daa
cmp
subl
pop
pop
repnz
aaa
stc
mov
ss
push
adcb
xchg
outsl
mov
jg
movsl
sbb
outsb
pushf
xchg
inc
jmp
arpl
xchg
das
stos
out
testb
stos
fwait
push
add
cmp
fwait
jno
test
jno
inc
jle
cld
jnp
xchg
cmp
add
mov
xorb
adc
dec
or
add
mov
or
out
pop
faddp
ja
cmp
sbb
test
out
dec
es
adcl
push
cli
pop
rorb
and
hlt
hlt
or
push
mov
out
xchg
mov
and
mov
cmp
in
daa
xor
lret
push
or
or
scas
cmpsl
jmp
sub
sub
std
or
and
xchg
xor
jae
pop
repz
lcall
and
in
jns
xor
lret
popa
push
push
sbb
ss
loopne
mov
scas
push
int
shl
cmp
insl
arpl
cmpsl
lods
dec
imul
mov
sub
cmp
adc
insb
pop
add
sbb
mov
or
incl
pop
fnstenv
in
push
outsl
lock
dec
scas
lds
push
sub
mov
scas
lcall
rcrb
aas
dec
sbb
mov
adc
cmpsb
pop
test
cmc
std
cmp
xchg
inc
adc
mov
loop
test
cmp
daa
and
dec
add
mov
mov
lret
inc
in
icebp
pop
and
mov
jbe
and
push
jns
adc
cmpsl
ret
mov
pop
test
sub
into
test
xchg
cmc
and
dec
data16
pushf
pop
stos
addb
dec
lret
aam
or
cmpl
imul
sub
ss
and
cltd
ret
addl
sub
push
add
push
mov
add
mov
adc
loopne
scas
rorb
inc
lret
adc
adc
and
test
outsl
jno
push
das
jl
popf
stos
sbb
jecxz
xor
movsb
pop
popf
pop
mov
cmp
out
lods
pop
loop
call
dec
iret
stc
xchg
inc
loopne
xchg
sub
jbe
inc
adc
pop
xchg
adc
or
test
imul
mov
xchg
cmp
xchg
mov
pop
and
push
inc
fs
adc
inc
fsubrs
xlat
mov
into
ret
lahf
jecxz
jbe
cli
stos
cmp
push
sbb
out
fs
mov
repnz
jmp
jg
scas
xchg
inc
push
subb
arpl
adc
sbb
adc
nop
mov
push
int
popa
sbb
insl
iret
mov
movsl
shll
fwait
das
mov
out
lods
rorb
mov
repnz
fcomps
adc
pop
mov
lahf
test
mov
int3
mov
xchg
jecxz
or
mov
jg
stos
xchg
pushf
mov
ret
jb
add
sbb
iret
mov
inc
fwait
jle
dec
jne
pop
cmpsl
stos
dec
mov
mov
pop
mov
ficoms
pop
add
incb
xor
xchg
aam
mov
sub
push
dec
push
stc
pop
scas
rcrl
push
add
add
movsl
inc
stc
dec
jno
mov
jg
mov
int3
dec
adc
add
inc
inc
dec
fsub
arpl
fimull
les
daa
or
jecxz
xchg
movsl
out
mov
sahf
add
cltd
test
jno
jmp
inc
cmp
sub
xor
mov
iret
jmp
das
adc
adc
add
dec
ret
fiaddl
stos
test
sbb
fwait
pop
out
mov
add
xchg
lret
je
xlat
hlt
xor
nop
mov
out
push
addl
xchg
lret
dec
popa
push
pop
stos
or
sub
xor
dec
mov
popa
cmp
jae
jmp
xchg
xor
jns
mov
stos
xchg
js
inc
cltd
lods
scas
scas
outsl
jno
push
pushf
lret
mov
sub
fldl
shrl
sbb
pop
into
js
scas
add
out
xchg
ret
pop
rclb
cltd
cs
lret
push
pop
cltd
rcll
mov
psubw
pop
push
xor
mov
push
dec
iret
js
mov
adc
jbe
lea
xchg
add
lret
dec
inc
cmpsl
mov
fwait
pop
mov
adc
out
xor
cmp
out
sbb
pop
and
jns
mov
jae
cmp
add
call
dec
arpl
jge
adcb
dec
pop
out
pop
push
testl
popa
sub
in
rcl
icebp
cli
xchg
or
mov
ja
es
dec
or
cmpsl
jae
pop
popf
xchg
jno
movsl
xchg
es
rcl
icebp
fbld
ja
dec
inc
fwait
xchg
push
movsb
arpl
mov
in
outsb
mull
xchg
ljmp
jl
mov
loop
sbb
lods
sbb
mov
lret
mov
sbb
test
and
gs
sti
addr16
pop
repz
sbb
cmp
or
repz
test
loope
je
xchg
fidivl
fadds
inc
pop
ficoml
push
xor
xchg
cmp
test
outsb
pop
add
dec
mov
push
xchg
nop
test
inc
insl
pop
loope
lcall
out
xchg
xlat
or
out
fcmovbe
popa
pop
inc
push
cmp
idivb
inc
xor
rorl
cmp
orb
mov
cmp
add
cmp
sbb
nop
clc
in
lcall
mov
std
push
mov
mov
pop
mov
mov
push
mov
jae
xchg
pushf
cwtl
pop
icebp
test
fcompl
xor
jae
mov
aas
add
mov
fstps
aaa
mov
shrb
push
loop
cmp
sarb
addb
lret
push
mov
push
mov
fimuls
rol
mov
lea
notl
mov
push
adc
daa
sti
and
xlat
xchg
cmp
and
stos
ficompl
mov
jo
jnp
cld
jmp
and
push
les
into
pushf
mov
int3
mov
mov
popf
push
outsb
cmp
push
xor
es
ror
ljmp
and
adc
daa
pop
shrb
pop
rcrb
xor
shll
pop
aad
imul
int3
and
mov
sbb
lods
add
dec
or
dec
mov
stos
jg
lret
test
or
nop
jge
or
fdivs
sbb
mov
or
sbbb
fwait
jb
out
outsb
insb
dec
lds
mov
adc
jge
scas
cmpsl
cltd
mov
dec
popf
dec
fidivl
inc
and
fdiv
mov
shll
sbb
adc
lea
rcrl
call
add
inc
inc
scas
mov
or
rol
std
add
mov
xchg
loope
pop
dec
mov
pop
dec
jg
inc
int3
add
pop
fnstcw
sub
add
div
jno
icebp
add
arpl
xor
into
pop
fbld
cmp
out
loop
mov
mov
adc
je
pop
sub
xor
mov
cli
sub
mov
inc
lods
int
adc
cld
scas
daa
rcrl
xchg
mov
mov
push
arpl
inc
in
mov
ffree
fldlg2
sub
lea
into
cmp
mov
pop
xchg
ss
and
and
lds
in
push
push
ret
push
daa
mov
mov
fisubs
in
pop
rcl
pop
sub
or
xorb
pop
idiv
test
xor
mov
mov
dec
fwait
mov
jle
xchg
sbb
je
out
sub
sub
jno
pop
neg
call
popf
lret
pop
xchg
idiv
repnz
pop
pop
inc
jge
out
adc
sbbb
or
ja
loope
sub
sub
lahf
int
into
repz
insl
xchg
dec
stos
jg
aad
fstpt
dec
enter
enter
cmp
dec
popl
das
cmp
sbb
das
mov
ljmp
jecxz
mov
sarl
jge
inc
push
and
sub
dec
mov
pop
mov
push
push
cltd
jns
adc
cltd
or
jno
push
addb
dec
and
mov
cmp
dec
ret
sarb
daa
je
por
xor
insb
adc
push
cltd
out
mov
gs
pop
call
arpl
popf
aad
aad
pop
out
fidivl
jecxz
mov
daa
leavew
imull
pushf
sub
jg
and
mulb
outsl
xchg
cwtl
xchg
arpl
scas
dec
and
into
mov
jecxz
aaa
nop
mov
mov
push
cmc
mov
fldcw
fdivrs
cli
lods
push
sub
je
pop
xchg
fldt
fmuls
cltd
jbe
imul
and
mov
ds
mov
cmp
fs
sti
lret
inc
hlt
cld
call
repz
xchg
adc
cmp
or
ljmp
shrb
ljmp
stc
mov
add
mov
inc
cli
ljmp
xchg
icebp
push
xor
jge
push
out
sbb
inc
scas
std
mov
inc
cmp
cmp
adc
addr16
sahf
lahf
push
sub
add
lret
addl
das
loope
daa
sub
push
jl
std
jmp
sub
mov
jecxz
add
mov
jle
lock
add
lret
into
arpl
dec
mov
scas
add
xchg
jg
sbb
add
testb
jb
xor
loop
out
dec
scas
push
leave
mov
mov
adc
push
clc
mov
bound
pop
fbld
adc
jl
or
sahf
xor
lds
add
jns
imul
fmuls
pop
or
stos
and
xsha1
cmpsb
dec
cmp
or
and
jnp
and
add
mov
mov
fstps
add
add
call
sbb
daa
jl
cmp
xchg
xor
repnz
lods
cmpsb
lea
stos
pop
push
xorl
xor
pop
in
mov
test
xchg
adc
cli
mov
mov
sub
aaa
aas
negl
test
add
mov
sbb
jmp
mull
cmp
mov
sub
sub
mov
popf
sti
mov
in
adc
push
jae
mov
in
or
jmp
jmp
inc
hlt
jns
inc
pop
shlb
xchg
sbb
dec
call
xor
jmp
cmp
adc
add
int3
mull
mov
pop
or
xor
rolb
andl
loope
aam
mov
dec
mov
fwait
rorl
pop
lods
setle
imul
mov
sbb
lock
mov
stos
aaa
pop
sbb
inc
xchg
mov
gs
cmp
movsl
sub
cmpb
test
cmp
sbb
sarl
movb
mov
std
orb
inc
dec
mov
jmp
fwait
xor
mov
mov
pop
cmp
xchg
pop
and
mov
mov
rclb
dec
into
and
sbb
add
xor
outsl
cmc
and
pop
mov
pop
in
lea
dec
outsb
xor
or
ljmp
je
shrb
dec
mov
mov
outsb
inc
bound
pop
dec
pop
mov
out
add
mov
add
adc
jmp
nop
clc
push
ficoml
rcrl
sub
gs
xor
pop
xlat
pop
xchg
mov
mov
and
push
add
mov
cmp
sub
lock
or
arpl
arpl
stos
int3
testb
mov
adcb
mov
mov
js
sub
dec
and
imul
shr
mov
jmp
mov
movsl
filds
add
inc
insl
jge
mov
sub
push
idivb
pop
dec
jg
mov
lret
mov
cmpsl
sbb
xor
imul
ss
pop
call
test
imul
xchg
or
pop
sub
sbb
cltd
iret
pop
lods
scas
aad
insb
icebp
mov
mov
fildll
les
scas
in
mov
fnstcw
subl
int
nop
imul
shlb
mov
mov
outsl
mov
sub
sub
and
pusha
lea
into
jne
or
inc
stos
enter
pop
popa
mov
repz
jle
mov
pop
inc
mov
orl
sbb
jb
fxch
pop
nop
cmp
and
xchg
add
inc
bound
jge
lock
or
and
xchg
enter
and
xchg
jbe
inc
push
cld
icebp
popa
jp
ret
aam
test
xchg
in
adc
pop
add
pusha
cmpsb
xchg
push
xor
xor
sbb
outsb
mov
dec
adc
jae
repz
xchg
std
mov
jnp
lcall
jmp
sbb
mov
sbb
xchg
into
test
push
dec
sti
cmp
or
sbb
mov
pusha
bound
dec
icebp
push
mov
orb
lcall
sti
mov
mov
push
ja
mov
add
lock
lods
cmc
test
lret
nop
jmp
mov
movsl
sub
jmp
dec
lret
test
push
push
jecxz
jl
dec
outsb
leave
ret
int3
push
push
imul
mov
incl
repnz
mov
cmp
mov
and
xor
add
jbe
sub
aaa
cmp
xlat
fsub
add
cltd
mov
dec
sbb
jp
mov
lahf
xchg
out
sbb
ds
aad
bound
or
or
int3
ds
fadd
dec
sub
sahf
outsl
ds
and
in
adc
mov
pop
fucomip
cmp
push
sub
mov
lret
or
push
adc
xchg
cmc
ret
loope
and
jns
add
jp
mov
cmp
xchg
sbb
aam
xchg
pop
rolb
jb
insl
and
pop
dec
cmp
jmp
sahf
add
push
adcl
fcomi
lods
lret
frstor
add
cmpsl
sbbb
notl
imul
cmpsl
dec
out
jle
fsubr
jbe
aaa
ljmp
jl
dec
jno
or
sbb
mov
push
push
cmp
int
jl
push
scas
push
hlt
push
jp
adc
mov
addr16
xor
mov
bound
adc
inc
add
rcrl
xchg
mov
ret
sbb
repnz
jno
sub
adc
cld
jne
add
stos
and
call
sahf
lods
inc
mov
outsl
push
sub
sbb
push
jns
cmp
pop
mov
and
lcall
movsl
inc
daa
inc
jle
popa
cmpb
jg
pushf
aaa
xchg
cmc
out
fs
mov
shl
push
pushf
cmp
stos
dec
inc
adc
shrb
cmp
icebp
lods
dec
in
ja
sub
bound
testl
jne
je
jp
fdivl
mov
mov
scas
mov
jnp
push
in
scas
fidivrl
mov
add
lahf
push
sub
sbb
insl
xchg
cltd
mov
or
mov
cwtl
jp
xchg
inc
out
push
mov
or
imulb
jp
cmp
jmp
cltd
or
lret
xchg
in
mov
fsubrl
mov
pusha
pop
sub
sub
dec
call
jno
adc
pop
jl
xor
lods
or
jle
jne
sbb
int3
je
dec
add
adc
cmp
xor
rcll
pop
dec
cli
out
pop
push
insb
jecxz
mov
mov
ds
orb
inc
adc
int3
mov
dec
insl
jne
mov
movsl
cli
insb
push
out
loope
dec
ficompl
xchg
mov
into
inc
cmp
xchg
adc
lret
or
sub
and
mulb
jae
adc
lahf
data16
fidivrl
mov
cmp
cmc
sbb
loope
js
inc
outsb
dec
repz
mov
dec
jo
aam
xor
cli
fbld
pop
stc
dec
push
cld
cwtl
sbb
lret
mov
ljmp
jecxz
mov
xchg
imul
dec
pop
push
rcll
push
cwtl
xchg
xchg
sbb
fwait
inc
xor
lret
addr16
push
movsb
mov
imul
cmp
push
stos
stos
call
loop
rol
push
bound
mov
gs
aad
sbb
mov
mov
push
pop
rolb
cmpsb
pop
jl
mov
fs
mov
cmpsl
es
ja
sub
addr16
push
mov
push
test
inc
sub
ret
jbe
and
lds
test
push
add
clc
scas
dec
imul
or
lods
pop
int3
cli
ret
xchg
jo
or
jnp
add
mov
pop
daa
lods
jns
test
mov
jnp
adc
pop
mov
jge
jl
mov
xchg
sahf
dec
sbb
movsb
inc
decl
push
jns
mov
jecxz
aad
roll
pop
fnstcw
sarl
test
cs
daa
pusha
fucom
and
fs
rcrl
dec
cmpsl
jmp
mov
in
inc
insb
outsl
mov
xor
xor
dec
add
movsb
adc
push
in
inc
mov
cmp
push
std
outsl
rorb
test
dec
push
aam
loope
sub
pop
enter
adc
mov
es
cmpsl
lods
test
sbb
lock
xchg
or
xor
pop
dec
fstp
out
andb
movsb
sbbl
stos
mov
nop
cmc
cmc
add
xlat
jae
inc
insb
cmpsl
fcoml
insb
mov
jae
add
sahf
hlt
push
dec
and
cmp
mov
aam
fcoml
xor
cmp
mov
mov
inc
mov
pop
xchg
inc
or
xlat
cmpsl
xchg
inc
aaa
fwait
pop
das
jb
jp
lea
xor
sti
and
sbb
jnp
hlt
stc
sahf
iret
gs
cli
lock
addr16
outsl
outsl
push
sub
mov
pop
out
imul
cld
and
lods
outsl
fbstp
inc
xor
outsl
xor
sbb
inc
or
imul
jno
sti
cmc
lds
mov
imul
dec
cld
lods
scas
cmpsl
pop
dec
jp
int3
rcrb
out
js
lds
out
push
xchg
filds
scas
in
stos
xor
inc
adc
adc
fsubrl
fldt
ljmp
movsl
push
das
cmp
xchg
mov
loope
sub
inc
pop
mov
outsb
shr
shlb
add
es
stos
aam
fmuls
xchg
mov
mov
cld
adc
aaa
jno
ret
sahf
js
mov
xchg
dec
imul
into
scas
bound
notl
push
neg
mov
aam
pop
std
daa
addr16
or
mov
les
push
push
mov
rolb
inc
into
adc
enter
sbbb
mov
imul
sti
sub
mov
insl
push
mov
adc
movsb
ja
cld
ss
or
pop
fsubs
ret
xchg
xor
adc
cmp
repnz
fs
data16
cmpsl
push
mov
xchg
push
paddsw
push
leave
nop
cmp
or
mov
push
loope
sub
repnz
dec
bound
xchg
cmp
dec
cmp
and
test
xchg
aam
inc
imul
adc
in
fwait
aam
movsb
leave
xor
push
sub
pop
jno
pushl
and
aas
push
xchg
inc
inc
nop
push
ja
stos
mov
mov
mov
sub
lods
xchg
xor
xchg
mov
xor
mov
fwait
lahf
xchg
mov
clc
icebp
test
into
xor
loopne
aas
pop
lea
xchg
cs
push
pop
and
push
roll
push
sbb
mov
xchg
into
lret
add
xor
ljmp
aaa
xlat
xor
push
pop
adc
mov
insb
push
xlat
xor
add
lcall
cld
mov
ljmp
mov
mov
inc
popa
lock
loop
jecxz
test
notb
push
lcall
rorl
in
add
add
loop
cltd
adc
mov
insl
mov
pop
inc
rcll
test
mov
scas
call
rcll
sub
xor
push
lods
lods
ss
rorl
popa
inc
push
notb
pop
mov
push
out
in
leave
adc
cmpsl
mov
jns
popf
cli
movsl
sti
pop
daa
fs
mov
add
cmpsl
and
inc
jns
xor
jns
push
adc
js
mov
or
aaa
mov
push
xlat
cmp
sub
or
cmp
jne
mov
dec
fdiv
sbb
mov
inc
push
into
inc
aas
pop
xlat
mov
filds
sub
cli
add
or
pop
out
dec
jge
add
sub
fisubs
lret
repnz
xchg
jne
inc
stos
inc
pop
insl
int
jp
xchg
pop
inc
stos
mov
and
sbb
fstpt
sti
lods
pop
cs
dec
in
out
sti
inc
and
xchg
xchg
scas
es
negb
jg
pop
repz
es
or
pushf
clc
mov
mov
aad
mov
lahf
pop
xchg
pop
sub
loope
push
xlat
pop
add
out
je
icebp
es
pop
xchg
fstl
aaa
or
cmp
arpl
inc
mov
inc
sbb
pop
cwtl
xchg
xchg
xchg
dec
xchg
add
pop
mov
rorb
test
fisubrl
mov
or
aam
andb
js
orb
pusha
call
cmp
outsb
inc
add
movsl
jp
push
ljmp
scas
add
dec
xchg
sub
jecxz
dec
push
jo
ficoms
adc
dec
and
jecxz
lretw
cmp
psubw
frstor
adc
adc
outsb
adc
xchg
and
jge
stos
inc
inc
push
cmc
stos
push
push
mov
fidivrs
test
and
sub
hlt
cmpsb
fs
inc
fbstp
arpl
loope
sbb
mov
mov
es
in
pop
mov
scas
adc
xchg
movsl
pop
int
arpl
cltd
or
mov
xchg
or
xor
add
lcall
loopne
add
repnz
fucomi
scas
testb
call
test
push
sub
push
mov
ja
mov
adc
jle
xchg
inc
pminsw
mov
lds
and
pop
cmp
and
fdivr
outsl
fisttpl
add
add
movsb
mov
mov
dec
rclb
mov
or
cmp
cltd
orb
pusha
pop
or
leave
inc
add
mov
adc
sbbb
push
out
mov
push
xchg
inc
pushl
mov
xchg
sahf
sbb
sbb
adc
add
jle
arpl
clc
loop
mov
sbb
xor
mov
test
scas
call
jns
mov
or
inc
xchg
out
mov
pop
lods
outsl
int
loop
xorl
test
aas
jmp
sub
jo
sbb
fdivs
pop
add
xchg
xchg
fstpt
add
xchg
dec
mov
lahf
dec
les
aam
repz
mov
movsl
adc
addr16
mov
jg
jns
mov
pusha
pop
adc
mov
xor
push
jae
arpl
fs
jne
aas
es
or
in
lock
leave
xor
pop
je
mov
sbb
roll
clc
popf
mull
fs
add
sbb
xor
adc
cli
mov
leave
outsb
mov
mov
cmc
sbb
fisubl
sub
fmull
inc
hlt
std
pop
sbb
popf
mov
mov
popf
js
xchg
das
cwtl
xor
jno
push
adc
lds
repz
pusha
jne
cmp
cltd
inc
lret
adc
add
cmp
jecxz
inc
inc
scas
and
mov
mov
inc
xchg
pusha
push
adc
rolb
out
loop
ret
push
xchg
push
inc
xchg
adc
psubb
fdiv
or
mov
lahf
test
cmp
daa
push
cmp
jnp
lret
jge
scas
add
and
inc
cmp
adc
xor
rcr
repz
je
push
loop
push
pop
andl
sub
out
pop
mov
data16
lcall
icebp
push
mov
dec
sbb
rorb
cmc
xchg
adc
dec
sti
mov
mov
push
roll
pop
imul
xor
add
jbe
shl
or
sub
out
loop
adc
stos
into
pop
dec
or
jno
cltd
pop
xchg
icebp
scas
pop
fwait
popa
ss
sar
push
sbb
ja
imul
fwait
pop
scas
push
push
pop
jecxz
mov
shll
pushf
push
fisubs
call
leave
ja
mov
sub
stc
jbe
push
mov
mov
xorb
mov
cmc
inc
pop
rcrl
icebp
sub
cmp
loopne
sbb
add
imul
out
adc
cli
clc
mov
jge
ret
dec
inc
data16
push
and
gs
out
push
pop
arpl
jecxz
mov
iret
add
pop
bound
push
xor
fwait
movups
push
xchg
enter
sub
mov
les
fstl
adc
repz
loop
inc
std
push
push
shr
xchg
cmp
imulb
std
sti
add
sbb
out
push
add
dec
mov
xchg
hlt
ss
rclb
incb
lcall
mov
inc
addr16
aam
cwtl
and
push
movsl
dec
inc
sbb
add
mov
and
and
inc
lock
out
aad
aas
lods
stos
or
pop
and
mov
outsb
add
daa
outsl
imul
xorl
stc
jmp
jno
xchg
sub
movsl
cmp
dec
jl
fiadds
out
pusha
pop
roll
xor
pop
lock
and
add
adc
pop
pushf
inc
push
or
popa
pop
and
xor
std
jle
xor
insl
out
jne
call
ljmp
dec
xchg
jnp
pop
pop
pusha
ss
imul
push
outsl
pop
push
xchg
sbb
and
push
lea
loope
or
cmpsb
outsl
or
dec
xchg
loop
dec
les
movsb
into
lea
movsb
cmp
push
jb
mov
test
cmpsl
or
scas
adc
mov
pop
cmp
lock
adc
hlt
adc
repnz
out
test
pop
shll
or
sub
push
test
sub
loop
dec
lahf
add
cmp
stos
nop
push
lret
add
push
scas
cli
xor
jbe
pop
mov
xor
fcmove
repz
subb
int3
cmp
lcall
js
xchg
lods
int
cmpsl
mov
adc
mov
sbb
sbb
and
jne
adc
dec
sub
inc
cmp
mov
sbb
push
enter
and
mov
pop
push
and
xor
cmp
mov
xchg
push
daa
adc
xchg
insb
lret
sarb
cmp
inc
sbb
mov
inc
mov
jae
xchg
push
sbb
push
insb
addr16
add
outsl
inc
dec
push
inc
sbbl
inc
adc
jne
push
push
loopne
pop
xlat
loopne
pop
mov
inc
and
push
stos
outsl
jns
mov
dec
xchg
add
hlt
in
mov
ljmp
xor
mov
xor
clc
mov
notb
sub
rcll
in
test
sbb
lahf
mov
dec
sub
push
mov
outsb
in
xor
cmpsb
int
lds
dec
mov
arpl
and
jae
cmp
incl
jns,pn
loop
sub
mov
cmp
jge
aam
mov
add
bnd
jb
data16
subb
cld
outsb
data16
sahf
and
xchg
outsb
jb
aaa
mov
int
push
mov
sub
ret
out
lds
or
cmp
fsubs
cmp
push
xor
hlt
pop
repnz
outsb
std
outsb
mov
push
mov
jnp
xchg
insb
outsb
sti
and
jbe
mov
xchg
push
mov
stos
cmp
mov
lea
je
cmp
sub
cs
fsts
xor
out
mov
add
push
mov
push
adc
cltd
ljmp
sub
insl
mov
push
out
lret
and
out
xchg
loop
xor
jg
cmpl
lock
cmp
adc
xlat
add
mov
push
mov
dec
mov
ret
and
ja
out
cmp
inc
sbb
aaa
xor
push
hlt
std
push
pop
push
in
or
scas
rolb
idiv
push
imul
dec
sbbl
push
xchg
data16
mov
out
mov
jb
inc
or
arpl
cmc
mov
and
or
jb,pt
xlat
mov
sub
loopne
sbb
push
dec
es
push
movsb
aas
mov
outsb
clc
icebp
lods
int
xor
or
retw
lods
mov
and
hlt
jp
cmp
mov
fnop
cltd
insl
lods
int
mov
pop
shrl
xchg
insb
lods
cmc
sub
xor
mov
rorb
cmp
jmp
loop
mov
icebp
out
or
jne
ret
push
inc
push
aad
sbb
sbb
gs
push
dec
into
jmp
push
scas
dec
mov
lahf
mov
mov
mov
cmpsl
adc
sahf
cmovne
push
stos
inc
adc
xchg
movsl
push
push
jb
sti
sahf
inc
pop
inc
jge
sbb
mov
or
jge
or
adc
out
lds
or
out
jbe
out
or
jae
add
sahf
push
and
dec
jbe
addr16
jb
add
jno
inc
in
inc
xor
imul
pop
xchg
int3
cmc
std
arpl
sub
mov
lcall
inc
pusha
fildl
jbe
fs
xor
lahf
fcoml
jl
stc
das
cmp
js
pop
fimull
mov
ja
xor
jno
inc
scas
cmp
ret
sahf
add
dec
xorb
mov
sub
jge
mov
cmpsl
cmp
xor
push
pop
mov
cmp
dec
in
stos
stc
mov
loop
push
cmp
push
cltd
sub
cs
data16
repz
sbb
stos
scas
mov
and
jge
lods
outsl
testb
inc
repz
mov
lret
add
cmpsl
out
out
and
xor
jecxz
pushf
test
cmpsb
jmp
loope
or
into
mov
mov
leave
aaa
test
jp
ja
push
mov
pop
and
xchg
pop
loope
dec
dec
lret
aaa
inc
mov
push
scas
or
mov
dec
pop
lock
mov
fildll
lret
push
cmpsb
or
jae
sub
mov
xor
or
push
scas
push
mov
jne
cld
sub
jmp
mov
push
lods
mov
xlat
aad
mov
sbb
sbb
jg
xor
pop
jb
mov
icebp
mov
mov
or
pushf
push
push
add
jbe
pop
or
popa
sbb
stos
loope
mov
fs
sub
pop
daa
or
shr
enter
aad
jno
inc
mov
cmp
fdivl
test
loop
xor
cmpsl
movsl
sub
mov
scas
fs
dec
lret
jl
lock
dec
add
or
fwait
clc
dec
sbb
jle
pop
repz
mov
repz
ret
cmp
js
xor
and
pop
or
or
int
aam
pop
mov
insb
psllw
test
call
out
push
cmc
hlt
cld
in
cmp
inc
and
fsts
repnz
adc
pop
sbb
pop
out
mov
lahf
cli
xor
push
dec
int3
mov
sahf
mov
icebp
mov
cltd
repnz
cwtl
dec
lahf
xchg
xchg
imul
mov
in
pop
repnz
adc
push
dec
push
jno
jecxz
pop
xor
jae
xchg
out
mov
mov
cmp
aam
andl
and
adc
es
pop
nop
sub
or
inc
jbe
insl
loopne
loope
insl
sbb
fnstenv
push
dec
and
out
aas
sahf
mov
and
lcall
inc
loope
ja
or
push
cmc
into
addr16
adcb
sub
xor
stos
mov
cmc
mov
cmp
cs
mov
jmp
fisttpll
sub
stos
add
xorb
mov
xor
push
push
cmp
rcrl
ss
fwait
jo
outsl
and
add
sbb
mov
movsl
fsubrs
popa
pop
sahf
incl
repz
in
push
jne
ror
jle
jo
bound
dec
cltd
mov
jg
imul
jne
outsl
push
test
pop
insl
outsl
dec
push
and
enter
push
mov
sbb
test
aam
das
fisubrl
add
mov
cmpsb
insb
in
movaps
fsubp
jne
mov
add
dec
rorl
iret
pop
mov
subl
jo
cmp
lods
imulb
cmp
fs
xor
sub
sbb
pop
mov
jno
aam
sahf
mov
and
sub
dec
cwtl
and
mov
push
icebp
imul
fstl
pusha
xchg
imul
repz
or
lods
jecxz
in
jp
inc
in
xor
mov
mov
mov
xor
inc
xor
xor
mov
in
divb
addr16
ficomps
sub
mov
js
icebp
lea
inc
push
into
cs
loopne
cmp
bound
loope
add
daa
pusha
push
cli
mov
ds
call
testl
sti
inc
mov
jl
pop
leave
lahf
or
testb
pop
arpl
dec
out
mov
mov
xchg
jo
insl
push
inc
enter
inc
popa
mov
xchg
push
mov
cmp
sbb
daa
xchg
test
pop
mov
fmuls
nop
test
fldcw
stos
inc
iret
aas
and
cmp
roll
notb
xlat
xor
fucomi
push
fists
pop
daa
mov
mov
cmp
sbb
mov
std
push
jge
movsl
jns
lret
cmp
sbb
cmp
push
inc
xlat
mov
mov
sub
mov
xchg
outsl
jmp
push
mov
and
popa
clc
in
pusha
xor
sub
lods
stc
inc
lret
sub
dec
sub
test
cmpb
and
test
insl
sub
leave
pop
shll
inc
fdivl
jo
lahf
add
ljmp
imul
jb
repz
ljmp
cmp
push
xchg
push
mov
scas
dec
addl
gs
xor
insl
scas
fstl
sbb
jmp
jecxz
push
loope
jns
push
out
xchg
aas
das
jge
sub
pop
adc
dec
sub
jg
das
jo
cmp
std
shll
fisubrs
pusha
pop
mov
sub
out
lods
jecxz
mov
stos
inc
les
pop
imul
movsb
mov
mov
pop
pop
lahf
jecxz
icebp
cmpsl
xchg
cltd
lods
mov
xor
dec
cmp
dec
mov
fdivrl
mov
sahf
mov
xlat
lods
or
mov
mov
and
ret
icebp
icebp
jg
push
stc
cmp
stc
lret
mov
sbb
mov
inc
add
xchg
mov
push
int
sub
inc
xor
cmc
shrb
jl,pn
adcl
iret
das
mov
loope
movsl
inc
jg
clc
jns
leave
icebp
mov
cmp
mov
mov
bnd
imul
outsl
dec
lcall
pop
fwait
mov
sub
and
test
xchg
insl
cwtl
cmp
fsubl
lods
cmc
outsb
cmpsb
lret
mov
xchg
divl
cmp
sub
test
xor
jmp
pop
aas
insl
jbe
xor
test
mov
testb
outsb
and
adcl
fisubs
ss
inc
clc
pop
xchg
pop
mov
jnp
daa
or
xor
ret
and
mov
aam
daa
repz
inc
stos
aas
ja
adcl
sbb
insl
push
cmc
jle
iret
sub
loopne
sarb
mov
int3
jo
lret
jge
test
xchg
popa
repnz
dec
shll
mov
xor
outsb
or
fstps
push
jbe
stos
or
jp
iret
std
sbb
mov
scas
pop
jle
xchg
inc
cmc
das
stc
mov
jb
mov
jne
mov
lahf
movsb
das
pop
add
scas
enter
daa
or
mov
mov
xchg
or
push
sub
mov
fdivrp
rcrb
inc
jg
add
out
lea
mov
sub
jmp
sbb
outsb
adc
add
dec
sbbl
jb
xchg
sti
sub
inc
lcall
inc
je
pop
inc
in
mov
movsl
pop
or
sub
arpl
inc
mov
dec
pop
and
test
mov
xlat
ret
adc
xor
test
adc
push
xor
lock
sbb
xor
frstor
inc
dec
fldcw
psubq
inc
pop
imul
cwtl
push
fimuls
loope
int3
inc
xchg
and
or
hlt
ret
stos
lea
arpl
inc
adc
sub
inc
mov
rorb
sub
les
inc
out
repz
sarl
sbb
or
fucom
ja
sbb
cltd
xchg
aad
ss
mov
cwtl
negl
data16
das
push
inc
adc
dec
test
sub
sti
das
loope
loop
and
push
pop
cmp
cmp
jge
jo
popa
xchg
add
sbb
mov
jle
and
int3
xchg
movsl
xor
cmp
add
adcl
xor
aam
xchg
mov
sbb
out
sahf
ret
jecxz
mov
push
leave
push
xchg
outsb
add
dec
add
imul
sub
in
stc
hlt
mov
sbbb
test
dec
push
adc
rcll
mov
aad
movsl
mov
seto
push
sub
lahf
mov
adc
add
xchg
sbb
ss
loopne
in
repnz
or
loop
jge
xor
out
ret
lahf
mov
insl
gs
shlb
push
js
push
xchg
mov
mov
push
arpl
jae
and
daa
sbb
jp
aaa
pop
xchg
lcall
shr
xor
mov
add
cld
mov
mov
xchg
int3
aad
addr16
xor
xor
add
push
dec
sub
inc
and
test
jno
and
mov
pop
clc
push
sbb
std
in
xchg
test
xchg
jo
mov
fists
and
pop
ja
add
inc
mov
out
repz
in
add
push
inc
push
pop
mov
scas
adc
pop
addr16
dec
lods
jle
jbe
mov
inc
into
in
lods
mov
enter
jl
pop
jnp
test
arpl
and
cmp
mov
shl
pop
inc
lods
out
jge
imul
jmp
mull
xor
les
shll
jge
jl
shll
sbb
dec
mov
outsl
jp
outsl
cmp
jne
dec
int3
ret
inc
mov
mov
push
push
daa
sbbl
cmpsb
mov
or
xchg
fsubr
in
inc
adc
sub
mov
mov
mov
jmp
std
mov
cmp
mov
dec
rolb
push
rcr
test
push
sahf
mov
stc
xchg
push
add
sbb
dec
dec
mov
jno
dec
mov
mov
movsb
dec
mov
unpckhps
call
or
outsl
jecxz
mov
jae
mov
cmp
insb
pop
or
iret
adc
push
mov
jmp
adcb
in
fadds
call
imul
and
push
and
sti
outsb
inc
addr16
cmp
mov
cli
pop
and
test
sbb
cmc
pop
push
dec
loop
int
cmc
insl
cmp
add
mov
call
and
mov
lret
sub
imull
in
inc
mov
jnp
fwait
mov
pop
cmpsb
test
push
push
scas
mov
push
push
jle
mov
pop
pop
dec
aas
je
dec
mov
push
or
mov
inc
jbe
and
sbbl
and
inc
std
inc
adc
shl
dec
and
and
sub
stc
and
jae
inc
fstpt
push
push
scas
add
bound
mov
push
in
push
push
roll
loope
pop
fldl2e
mov
loope
and
call
or
scas
out
sahf
push
mov
add
jnp
sbb
scas
insl
es
cmp
fldcw
push
add
inc
add
cmp
pop
mov
pop
mov
ds
flds
dec
and
cmp
movsb
jne
xchg
push
loop
fdivrl
dec
pop
inc
adc
mov
sub
call
mov
test
icebp
sbb
inc
jl
out
jg
fsubrl
sarb
mov
mov
inc
in
clc
xchg
std
jp
mov
inc
mov
pushf
icebp
sub
mov
mov
ljmp
dec
xor
stos
gs
push
cwtl
and
cld
call
add
cmp
xchg
roll
add
mov
cmc
push
mov
fcompp
inc
add
xchg
adc
dec
mov
test
imul
hlt
or
push
decl
cmp
call
jnp
xor
dec
mov
or
push
add
mov
jg
pop
clc
jne
hlt
insb
mov
or
and
das
fs
ror
movb
pop
out
mov
arpl
cmp
mov
xor
cld
pusha
jp
adc
push
in
push
roll
cltd
mov
cmp
xchg
aad
push
jb
incl
or
cmp
xchg
cmp
lock
pusha
pushl
shlb
pop
enter
xor
ret
arpl
push
xlat
dec
pop
add
popf
addr16
adc
xor
jno
dec
js
fwait
sbb
scas
ss
fadds
jmp
mov
or
xor
sbb
popa
adc
jo
fnstcw
pop
cli
daa
sub
or
cmpsb
aam
ror
mov
mov
imul
lahf
aaa
cld
pop
lret
push
dec
push
add
adc
cmp
lret
inc
imul
and
das
loope
adc
ljmp
nop
cmpsb
fcoms
xchg
in
fld
imull
mov
jne
cmpsl
test
mov
pop
push
aaa
in
cmp
sub
sti
leave
jbe
es
mov
jecxz
cmp
aad
shlb
dec
xchg
jecxz
mov
pop
xchg
sub
and
jl
dec
or
push
add
inc
scas
dec
xchg
jl
sahf
ffree
pushf
into
mov
push
mov
repz
test
and
xor
aas
push
mov
sbb
sbb
leave
or
or
jb
pop
lahf
xor
fldcw
mov
jecxz
push
or
jle
leave
mov
aad
outsb
push
push
mov
dec
rcr
jns
xor
pushf
pop
sub
mov
sbb
cmp
cmpb
or
cmp
pop
imulb
inc
fnstcw
repnz
xor
fcomp
div
imul
vmovups
enter
inc
popa
add
clc
add
xchg
jl
jb
shrl
ret
fstl
cmc
les
out
push
fldl
rcll
test
bound
fsubrs
push
lret
push
ffreep
mov
lcall
lods
add
loope
sub
mov
pop
dec
es
sub
adc
or
fmul
xor
sbb
scas
call
pop
mov
in
xor
jb
mov
adc
adc
ds
mov
adc
and
rcrb
jo
push
not
mov
cs
test
ljmp
cli
pop
sahf
sbb
sbb
mov
mov
jns
insl
ret
add
xchg
cltd
jp
or
lods
hlt
cmp
and
ror
xor
mov
sbb
test
pushf
gs
pushf
inc
push
cmpsb
movl
mov
push
enter
frstor
sahf
aas
out
das
out
jno
adc
sbb
adc
pop
and
mov
pop
insl
sbb
mov
lock
add
jle
shlb
pushf
jge
pop
movsl
data16
aad
sti
push
push
mov
ret
and
ret
mov
dec
xchg
les
pop
mov
adc
call
sarb
adc
jmp
test
in
jl
sub
xchg
faddl
rcl
test
jns
pop
inc
es
xchg
or
xchg
ds
ficoms
imul
jl
xchg
sbb
mov
scas
popa
push
mov
insl
dec
lcall
rcrl
mov
inc
push
pop
mov
xor
sbb
adc
clc
mov
push
test
insl
jg
repz
fld
les
jmp
imul
dec
xchg
fwait
mov
adc
or
inc
lods
adc
or
push
aam
lret
enter
ret
push
add
push
rcrl
mov
xor
nop
loopne
push
dec
and
jl
adc
iret
pushf
lret
and
pop
sti
xlat
xor
movb
aad
test
jbe
vpunpckhwd
rol
adc
dec
or
fdivrl
ret
push
shlb
in
and
pop
sar
pop
adc
pop
mov
test
lods
xchg
mov
std
mov
xchg
push
push
sub
lods
packuswb
sub
jb
and
xor
enter
loopne
cltd
xor
dec
mov
pop
imul
jns
inc
jae
inc
mov
nop
and
inc
xchg
push
sbb
dec
nop
lret
movsb
daa
out
lret
mov
in
cmp
lock
je
insl
out
setne
dec
fimull
scas
fsubrl
ja
add
rcrb
dec
push
xchg
fsubrs
pop
mov
mov
aam
cli
cld
ret
loopne
or
popf
data16
pop
mov
shl
xor
mov
and
cmp
call
in
fwait
sbb
sbb
outsb
sbb
mov
ss
shll
fsubs
pop
ss
lods
call
inc
jae
scas
test
adc
mov
cmpsl
jl
sbb
mov
sub
inc
add
lock
push
ret
out
cmp
leave
mov
adc
movsl
sub
subl
jb
sahf
dec
dec
mov
push
loopne
push
mov
sbb
mov
adc
lcall
inc
ja
repnz
stc
out
int
pop
push
das
cmp
movsb
inc
outsl
aam
dec
popa
addb
jno
push
lds
push
in
cmp
int
xchg
cld
jl
fldcw
pop
pop
subb
push
lret
mov
push
gs
jmp
jns
gs
int
lods
or
mov
scas
jle
mov
andb
lret
mov
enter
push
jp
leave
xchg
push
shrb
ret
xchg
shlb
or
int3
sub
mov
mov
cwtl
sahf
mov
nop
add
pop
mov
sbb
das
ret
bound
in
mov
mov
in
xor
push
sub
xchg
inc
cltd
jle
dec
fldt
xor
and
cmp
stc
pop
lahf
jle
mov
cmp
push
mov
mov
cltd
in
push
jg
mov
adc
mov
nop
mov
xor
adc
jnp
jb
je
stos
rorb
stc
loope
mov
loopne
cmp
jb
fiaddl
ret
xlat
arpl
loope
add
jp
roll
xchg
cltd
mov
add
cmpsl
icebp
out
dec
xchg
xchg
rcrl
test
cmpsl
xchg
push
lcall
in
fbstp
insb
xchg
push
mov
scas
inc
sub
sub
imul
adc
mov
lods
and
add
push
pop
inc
mov
test
push
mov
daa
jo
or
push
xor
push
sbb
or
ljmp
push
dec
cld
mov
pop
in
aas
adc
popf
in
jl
loope
roll
out
mov
cmp
shlb
je
fnstcw
jns
adc
pop
inc
xchg
push
sub
test
mov
mov
adc
ja
fisubrs
out
or
cmp
adc
fiaddl
lea
lock
xor
aad
adc
cmp
xor
add
popa
add
ljmp
push
lock
xor
xor
push
jb
nop
sub
int
mov
and
dec
and
pop
add
xor
lret
repz
mov
mov
inc
popf
or
insb
xchg
ret
jae
mov
xchg
in
jns
mov
lds
sub
sti
in
jae
mov
xchg
sub
fidivs
dec
enter
int3
stos
xor
and
test
lock
mov
cmpsb
into
mov
cmp
xchg
sti
imul
mov
nop
js
bound
aam
movsb
shrl
pop
test
inc
stc
inc
mov
pusha
or
fnstenv
cli
rcrb
ds
loopne
bound
mov
mov
xor
in
out
bound
test
cmpl
push
inc
shrb
cmpsl
xchg
dec
add
sub
fldl
xchg
imul
jb
mov
les
jecxz
push
cmp
push
jb
xor
fcoml
in
sub
cs
inc
or
sbbb
test
div
js
pop
int3
push
fcomp
or
mov
sarb
adc
or
iret
call
adcb
enter
stos
dec
cmp
xchg
idivl
ds
jl
lods
leave
inc
sub
ffree
mov
popa
mov
mov
lock
fbld
add
inc
mov
xor
jmp
jg
arpl
xchg
fsubl
imul
mov
jl
into
lods
arpl
cmp
pop
mov
xchg
int3
push
es
leave
pop
xchg
jl
pop
or
mov
les
sbb
js
ret
movsl
or
pop
sub
shll
arpl
inc
repz
pop
mov
and
adc
cld
xor
mov
lods
sbb
pop
cmp
and
mov
fdivrl
push
orb
in
out
sti
sub
cvtps2pd
mov
sti
fwait
mov
mov
je
pop
adc
mov
dec
ds
and
repz
out
test
lods
mov
je
pop
fcom
sbb
mov
push
sub
lret
adc
cld
testl
mov
adc
dec
addb
stos
jns
cmp
inc
fists
lds
add
inc
aam
dec
mov
in
inc
push
lcall
in
in
adc
stc
std
sbb
cmp
scas
in
shlb
jno
sbb
lods
xchg
aas
pop
push
or
add
adc
adc
mov
pushf
shlb
push
mov
push
stos
repnz
jmp
push
xchg
add
and
pop
xor
cmp
aaa
insl
stc
and
popa
sub
cmp
ja
adc
mov
cli
sub
cmp
dec
mov
nop
dec
mov
add
sbbl
gs
or
inc
adc
fsubrs
add
add
lods
test
ret
add
pop
out
jbe
push
lods
sub
adc
jb
out
cmp
pop
fcoml
jp
push
mov
shlb
dec
insb
call
ljmp
cmpsb
and
clc
mov
and
inc
cmc
mov
add
testw
xchg
adc
pop
jl
jmp
ret
sub
das
je
insb
mov
xchg
xlat
movsb
sbb
sarl
sbb
mov
or
mov
loope
outsb
scas
add
jmp
mov
rcll
jne
idivb
out
in
out
xchg
nop
mov
cmpsl
mov
pusha
and
aas
add
rcr
or
in
adcl
or
outsb
xchg
ss
cmpsb
and
push
pop
jge
push
fwait
push
pop
pop
addr16
xchg
mov
std
jl
std
xor
push
addr16
jae
dec
cwtl
int
fs
jl
sar
aad
sub
je
xor
aam
shl
jo
jecxz
xor
and
jbe
pop
add
mov
jne
cltd
fistpl
mov
out
jne
push
inc
sub
cmc
inc
mov
add
jnp
outsl
mov
stos
sbb
add
push
lahf
in
popf
cmpl
fwait
add
and
and
cld
mov
scas
call
repnz
bound
cmp
lods
mov
dec
or
testb
rclb
shl
mov
push
add
notl
imul
aas
lods
stos
pushfw
inc
into
rcr
clc
dec
addr16
imul
xchg
mov
bound
inc
cmp
pop
cmp
addr16
push
dec
cmp
pushf
aas
iret
popa
mov
int3
aas
lea
mov
xchg
rol
mov
push
adc
or
push
pushf
jle
addr16
inc
dec
dec
insb
stos
movsb
outsl
cmp
imul
iret
xchg
push
bound
or
xor
cmpsl
test
jb
push
cmp
sbb
add
jno
enter
mov
cld
mov
cld
adc
xchg
mov
in
andl
addr16
out
mov
enter
sbbl
out
rcrl
pop
repz
mov
mov
adc
ret
push
pop
loopne
jbe
xor
and
mov
cmp
test
add
movb
push
xchg
adc
iret
cmp
inc
in
sub
divb
cmpsl
rol
fildll
mov
mov
add
shll
xor
lcall
pusha
pop
lea
push
loope
out
pushf
scas
int
scas
or
jg
enter
rcll
cli
lcall
popf
sub
ja
dec
mov
stc
xchg
es
lds
rcl
xor
dec
sahf
mov
sub
in
jecxz
bound
mov
adc
icebp
cmp
iret
xchg
xchg
or
xchg
pop
stos
xchg
adc
and
jo
push
in
inc
mov
and
mov
movsl
xchg
sub
sub
dec
add
or
push
mov
push
pop
add
pop
lods
inc
divb
aam
xchg
testb
xchg
adc
pop
jb
aad
jmp
jp
push
pop
xor
jg
sub
divl
jo
out
sbb
outsl
add
cmp
jo
xchg
loope
mov
icebp
std
jbe
loopne
xchg
sbb
dec
cmp
sbb
leave
inc
scas
mov
sbb
push
xchg
enter
jecxz
pop
cmp
jge
xor
rcr
sbb
movsl
fdivrl
loopne
mov
pop
outsl
or
es
pop
fcmovnu
mov
pop
inc
or
imull
jl
dec
jno
push
bnd
cwtl
add
sbb
iret
pop
inc
in
or
sub
outsb
mov
rclb
lret
sbb
fldenv
out
push
mov
sbb
das
out
inc
sbb
push
push
xchg
inc
xchg
and
jns
jp
xor
lcall
pop
xchg
inc
cmp
test
movl
xchg
sub
fstl
push
cwtl
pop
cmpsl
loop
adc
cmc
add
jno
adc
mov
sahf
mov
and
push
sahf
xchg
add
repz
insl
cmpsl
movsb
lahf
shlb
push
xlat
ret
cltd
push
lock
push
jecxz
mov
test
fmul
push
and
sti
fstps
ds
fxam
xor
adc
mov
jp
stc
dec
imul
mov
inc
lds
neg
out
and
mov
movsb
out
pop
push
mov
push
test
push
fwait
cwtl
ss
xchg
mov
loopne
mov
dec
lea
or
in
mov
imul
stos
dec
les
popa
shrb
dec
dec
stc
sbb
sub
dec
or
dec
jle
ja
jmp
add
jmp
ret
stos
sbbl
add
jecxz
outsb
dec
jo
mov
aas
shll
movsl
movl
sbb
dec
test
adc
scas
nop
sub
cmp
sti
or
fists
roll
cmp
pop
and
dec
cvtdq2ps
jb
sub
into
sub
xchg
into
popa
mov
out
pop
in
adc
lcall
pop
fnstenv
movsl
movsb
aas
std
sbb
sbb
cmp
push
xor
mov
cmp
fldcw
add
rclb
pushf
repz
jmp
add
xchg
addr16
fidivs
dec
int
mov
ljmp
in
icebp
or
lcall
cmp
pop
sarl
inc
add
push
and
and
push
push
outsb
xchg
fisttpll
stos
shlb
bound
jge
jae
rcrl
mov
outsb
dec
sbb
fadds
mov
pop
insl
fs
and
pop
add
insb
mov
jg
jg
sbb
arpl
movsb
ds
rorb
inc
or
push
add
ja
nop
je
xchg
ret
xchg
mov
mov
jae
jno
repz
and
push
adc
xchg
inc
imul
inc
or
sahf
pop
lock
stos
jge
xor
es
xchg
pop
xchg
inc
sbb
inc
int3
sarl
jnp
xchg
xor
popa
in
mov
andl
lods
loope
jle
pusha
movsb
xor
jns
xchg
mov
and
mov
jp
adc
lret
rcl
ror
sbb
sub
mov
aam
fsubrl
je
sub
outsb
shlb
insl
shll
mov
jmp
insl
mov
addr16
push
lcall
arpl
out
shrb
cmp
cmpsl
gs
test
push
push
ja
mov
xor
fdivs
pusha
add
lds
push
sub
or
push
mov
xchg
or
jecxz
movsl
xchg
in
or
push
cltd
push
sbb
jnp
pop
repz
ss
add
jns
enter
aas
mov
mov
sahf
inc
subb
jp
das
push
xchg
dec
mov
mov
negl
sahf
adc
rcrb
adcb
mov
dec
rolb
cltd
lods
outsl
or
ret
and
xchg
cmp
jns
inc
popa
divb
imul
inc
mull
cmp
push
mov
fdiv
pushf
xchg
divl
aam
aaa
scas
or
aad
mov
push
out
in
in
stos
cs
popa
ficoml
mov
shlb
xchg
sub
push
repnz
lret
inc
addb
mov
daa
into
push
xchg
sub
divl
jae
mov
outsl
adc
sahf
ret
xchg
mov
mov
adc
cs
push
pop
mov
pop
jnp
mov
mov
pop
mov
mov
jnp
cld
lds
push
xchg
adc
fwait
lods
mov
inc
cmpsl
rolb
mov
sbb
cmpsl
mov
pop
pushf
mov
push
das
mov
jae
jecxz
sbb
enter
inc
jl
fisubrl
xchg
mov
nop
aas
mov
mov
inc
and
or
test
xor
mov
scas
mov
mov
sbb
dec
dec
imul
lcall
adc
jmp
outsb
rcrl
mov
ds
xchg
pop
add
cmp
call
sub
in
js
stos
pop
popa
xor
repz
pop
in
dec
mov
push
arpl
bound
jge,pt
mov
mov
pop
shrl
xchg
imul
gs
dec
addb
xchg
outsb
jl
ret
and
push
or
imul
cli
inc
jp
dec
dec
jl
fcmove
and
jecxz
out
sbb
and
outsb
sbb
outsl
lret
sbb
mov
ss
outsl
mov
xchg
hlt
add
wrmsr
out
loope
out
push
dec
pop
inc
out
xchg
jp
adc
mov
xchg
cmp
push
xor
sub
fadd
out
addr16
pop
out
cmp
lods
add
imul
dec
out
ljmp
cwtl
je
lahf
mov
push
xor
outsb
dec
int
loope
and
jmp
inc
mov
addr16
adc
cmp
xchg
fisttpl
cmp
inc
push
arpl
cli
xorb
repz
lcall
push
pop
enter
or
adc
rcll
insb
into
nop
dec
adc
lcall
scas
pop
xlat
inc
or
ja
sub
dec
mov
out
out
inc
lahf
xor
ljmp
and
xchg
cltd
xchg
in
sbb
dec
stos
or
movsl
insb
stos
ror
sub
daa
add
test
inc
cmc
testb
dec
and
dec
out
repnz
fidivs
cld
push
xlat
xchg
xchg
fsubs
mov
xor
scas
sub
sbb
aas
movb
stos
clc
out
mov
push
scas
push
ror
or
xchg
push
call
mov
jg
icebp
js
popf
mov
lock
ret
jmp
mov
out
int
sbb
adc
ljmp
int3
jg
jg
shr
popf
inc
sti
push
mov
out
xchg
repnz
fsubr
imul
cwtl
ljmp
push
push
pop
sbb
dec
add
jg
dec
adc
xlat
js
xor
ret
cmpsl
mov
pop
xchg
into
sbb
loopne
stc
lea
lods
rorl
das
decb
ljmp
iret
jmp
ljmp
inc
idiv
sar
inc
add
mov
mov
arpl
cmp
mov
movsl
jb
dec
xchg
enter
inc
xor
inc
and
or
jne
outsl
mov
es
pop
lret
pop
cmc
lds
mov
jae
pop
ds
shlb
mov
adc
out
mov
in
shll
test
adc
inc
lds
xor
inc
and
movsb
int3
fmul
sbb
and
push
fidivrs
lea
jle
stos
mov
mov
icebp
push
stc
or
push
stos
jae
stc
adcl
ss
outsl
mov
andl
gs
or
dec
mov
vpxor
mov
or
cmp
aas
dec
dec
xlat
mov
std
xchg
rcrb
out
mov
sbb
xor
sbb
inc
xor
daa
int
int3
popf
rorl
sub
cli
adc
push
pop
in
lcall
iret
adc
mov
xor
push
ret
push
xchg
dec
sbb
xchg
gs
xchg
nop
mov
fsubrl
sbb
mov
jno
xchg
or
and
lahf
orb
sbb
fdivrl
sbb
stos
scas
sbb
jg
sub
xor
rcrl
sbb
out
mov
aad
inc
js
aas
into
popa
out
push
mov
jmp
shrb
pop
ds
dec
icebp
into
fsubrs
andb
pop
les
dec
leave
pop
lods
xor
mov
mov
enter
jge
outsb
push
repnz
stc
in
int
jno
pop
nop
lahf
xor
sarl
pop
xor
imul
cltd
mov
mov
jecxz
enter
and
cmpsb
adc
inc
andb
xlat
aam
gs
jl
mov
dec
movsl
adc
xlat
andl
jae
popa
inc
xor
inc
movntq
out
mov
sub
mov
lods
subl
jns
mov
test
pop
rcrl
cmp
insb
xchg
repnz
fwait
cmp
push
aad
mov
pop
xlat
inc
popa
shlb
scas
orl
xor
int
mov
cmp
jl
dec
stos
sub
add
dec
lret
rcr
jge
rorb
mov
push
and
pop
imul
jo
cld
icebp
mov
xchg
int
pop
mov
inc
xchg
xchg
mov
jae
dec
std
lahf
cmp
mov
and
dec
icebp
jne
fs
test
or
rcll
aad
outsb
xchg
fwait
push
inc
test
adc
loop
push
adc
pop
lock
sub
jmp
inc
mov
test
or
ret
or
sbb
inc
inc
pop
movsl
aam
ss
add
mov
mov
gs
arpl
and
shl
aaa
adcb
in
mov
jle
dec
addl
fld
or
cmpsl
es
les
add
sub
mov
xchg
xchg
int
sub
cmpb
movsb
push
push
fildll
jae
mov
dec
push
sub
cltd
ljmp
xor
pop
sub
xor
xchg
xor
mov
xchg
add
out
ja
adc
push
stos
push
jle
pop
test
xchg
lea
adc
lcall
or
add
out
out
fsts
loop
movsl
movsl
push
outsl
mov
lcall
ret
sbb
mov
je
xor
pushf
and
pusha
xchg
test
insb
cmp
iret
mov
xchg
push
sbb
fwait
mov
mov
mov
mov
jae
cmpsb
mov
mov
ret
loope
cld
sub
loopne
outsl
xchg
imul
xorb
andl
pop
movsl
jbe
lock
xchg
sub
mov
mov
fcomps
push
call
frstor
cli
cld
bound
cmpsb
adc
rcll
mov
or
and
fidivrl
mov
icebp
inc
and
cmpsl
and
jmp
and
fcomps
ja
xor
or
add
mov
ret
push
jge
les
repnz
push
lea
daa
xor
es
jl
pop
orb
dec
arpl
out
mov
dec
in
adcl
jmp
insb
dec
fmulp
lahf
ret
and
push
cmp
fmul
lds
jl
ret
and
dec
aas
mov
loop
add
pop
jne
mov
cs
sahf
dec
scas
add
movsb
testl
xchg
inc
xor
jg
aas
imul
imul
xchg
inc
add
rorl
inc
sbb
sbb
mov
sub
inc
sub
aad
xchg
movsb
jp
lods
stos
lret
movmskps
dec
leave
cmp
cmp
jno
or
pop
jno
xor
ljmp
mov
test
nop
cmp
sub
test
popf
loopne
enter
movsl
pop
roll
stc
out
xchg
dec
jns
jmp
jae
fdivrl
mov
fdivs
in
loope
addl
aaa
cli
std
sti
mov
into
nop
mov
sub
sbb
mov
mov
or
add
dec
lret
jns
in
rcrb
mov
mov
testb
movsb
mov
xor
test
xchg
repz
data16
stc
push
cld
jmp
inc
enter
in
and
inc
not
std
js
jmp
cmp
gs
int
push
jge
rcll
xor
xlat
push
arpl
jne
shrb
jnp
dec
xchg
dec
xchg
adc
cmc
pop
lret
fsubl
mov
jno
lahf
lahf
psrld
inc
push
and
inc
test
mov
push
sub
sbbb
mov
sbb
mov
mov
in
test
insl
outsb
ficoml
into
sub
push
bsf
mov
xchg
push
js
shl
or
lds
and
mov
and
add
repz
fisubs
cmc
ret
test
sbb
cs
sti
add
lea
fadd
stos
xchg
and
bound
cwtl
sbb
push
test
outsl
mov
lcall
jecxz
and
clc
pop
aad
mov
xchg
gs
dec
bound
in
fiadds
sbb
or
movsl
mov
mov
add
cltd
int3
push
push
mov
bound
xchg
pop
mov
cmp
lret
cmpsb
mov
and
mov
adc
xor
hlt
cmp
xor
lcall
adc
shr
out
shlb
aas
sub
das
aas
sub
cld
mov
pop
stos
mov
lret
and
dec
fstps
mov
repz
lea
aam
les
adc
add
fcoml
les
mov
dec
pop
fildl
mov
enter
xchg
mov
test
addr16
cltd
sbb
adc
push
js
xchg
inc
clc
pop
nop
out
adc
push
mov
jmp
outsl
fwait
test
sbb
ret
js
xchg
icebp
mov
fstl
jp
jl
je
out
mov
aaa
fsts
inc
dec
out
pop
lcall
dec
ds
and
pop
test
or
test
or
out
popa
das
xchg
xor
pop
adc
mov
mov
out
fstp
rorl
mov
les
cld
sti
int
bound
out
add
out
push
push
adc
adcl
aas
movsb
pop
dec
cld
fists
cmpsb
cmp
mov
andb
pusha
sbb
add
mov
mov
in
ret
pop
fmuls
pop
cmpsb
or
stc
xchg
mov
clc
jae
mov
mov
nop
adc
cmp
aam
data16
mov
iret
sbb
mov
and
sub
inc
fadd
pop
lds
cmc
insl
fmuls
and
xor
xchg
inc
sbb
and
dec
push
cmpsb
cmp
push
rcrb
sbb
mov
inc
add
mov
push
jg
cmp
and
push
cmp
sub
mov
fisubl
mov
pop
sub
ja
pop
and
or
out
addl
xlat
scas
mov
dec
xchg
adc
xchg
popa
les
xor
cmp
jno
dec
lea
cltd
cmc
in
jg
inc
pop
cmpsl
fisubrl
in
jecxz
xchg
inc
xor
icebp
and
inc
aad
in
adc
dec
cmp
jns
cltd
mov
arpl
mov
movsl
mov
frstor
or
ret
bound
inc
out
and
gs
xchg
je
inc
push
mov
out
jne
ljmp
adc
rorb
mov
xor
cmpsb
push
iret
cs
mov
inc
jae
pop
jb
xchg
sarl
xchg
movsb
adc
mov
xchg
popa
mov
mov
rcrl
out
inc
pop
push
dec
cmpsl
pop
out
add
sbb
mov
mov
cld
ljmp
xchg
leave
inc
jo
je
push
mov
es
jb
fidivrs
inc
push
das
addr16
pop
imul
or
mov
mov
shl
mov
dec
stos
add
rolb
sbb
pop
pop
scas
push
in
shrb
iret
xor
fiadds
flds
cmc
add
scas
adc
sbb
addr16
aad
movsb
add
xchg
seta
sub
in
sub
push
mov
imul
xchg
into
fsubrl
mov
or
out
mov
inc
imul
add
test
xlat
xchg
popa
add
sbb
out
mov
in
cli
xchg
add
inc
jbe
repnz
cmp
inc
push
arpl
aad
sti
adc
xor
into
inc
sub
leave
fmul
sub
aas
pop
inc
repnz
mov
jmp
cmpsl
hlt
xor
es
mov
iret
mov
gs
test
jle
es
push
subb
sbb
cmpsl
aaa
stos
fldl
jae
jl
push
loope
mov
bound
lret
in
std
ficompl
or
insb
xorb
cmp
scas
xor
sub
pop
inc
andb
and
outsb
cmc
std
push
iret
loope
testb
xchg
mov
sub
call
lock
sbb
enter
jmp
ret
in
add
mov
mov
inc
lret
fimull
adc
jb
dec
mov
pop
and
push
rolb
adcb
mov
jnp
jle
lods
sarb
cmp
inc
repz
pop
and
aad
aam
std
or
fnsave
fs
xchg
mov
sbb
mov
mov
faddl
mov
xor
cltd
pop
jp
push
insl
push
mov
shll
ss
popf
ror
in
jl
hlt
jbe
std
inc
dec
jno
add
xchg
mov
pop
adc
sbb
sbb
xor
out
mov
ficomps
cmp
int3
cmp
rcll
enter
adc
add
movsb
movsb
and
imul
pop
sbb
cmc
mov
jne
mov
xchg
shlb
aaa
push
bound
dec
add
mov
iret
lcall
ret
gs
psrld
stos
arpl
xchg
orb
pushf
mov
cltd
add
sub
push
pop
imul
fwait
insl
cwtl
push
and
dec
fwait
iret
inc
dec
in
shlb
fidivs
insl
push
gs
xchg
inc
dec
je
daa
add
push
lock
mov
lods
dec
jae
xor
inc
mov
repnz
adc
cmp
in
cmp
icebp
test
push
mov
dec
inc
dec
loop,pt
mov
int3
shlb
das
std
addb
cli
ficoml
jbe
or
push
dec
cmpsl
cmp
cld
aas
in
mov
cli
jne
sub
cmp
xchg
mov
mov
push
in
jmp
sub
dec
shrl
mov
ljmp
rorb
adc
cltd
xchg
lods
js
scas
mov
out
mov
les
mov
in
sbb
push
jnp
and
pop
sub
pop
daa
pop
push
jae
fdivp
popf
js
add
int3
subl
xchg
repnz
mov
inc
cmp
adc
lret
out
xchg
popa
sbb
in
inc
add
mov
mov
mov
roll
add
insl
es
ror
scas
loope
fisubs
stos
sbb
inc
inc
sub
cld
jmp
push
sahf
push
popf
mov
xor
or
or
movsl
je,pt
test
adc
xchg
aaa
ret
icebp
jbe
xchg
dec
shlb
mov
lret
xor
cmp
dec
sbbb
insl
pop
call
fwait
pop
jecxz
cmp
repz
adc
cli
loopne
jnp
cmp
ja
cmpl
lods
add
pop
lret
lea
push
imul
push
dec
push
fnstcw
dec
xchg
test
jp
xchg
xor
and
xorl
jle
sar
xchg
xlat
mov
push
or
mov
cmp
daa
rep
shr
pop
daa
mov
jo
push
push
dec
mov
addr16
push
gs
lahf
cmp
sub
sbb
or
cs
xor
out
cmp
stos
pop
cmp
mov
adc
mov
dec
fcomps
dec
push
jo
scas
ja
jecxz
lahf
jecxz
add
jge
jmp
cltd
int
cld
loopne
mov
inc
pusha
jns
xor
mov
popf
xor
pop
mov
out
dec
out
notb
cs
cli
outsl
repnz
mov
sub
push
test
imulb
push
mov
jge
jmp
and
xchg
addr16
adc
into
cli
out
out
pushl
insl
sbb
cmpl
ds
pop
lret
and
sub
cltd
pop
mov
std
sub
cmp
mov
cli
push
hlt
mov
adc
jnp
insb
cmp
fmull
andl
lahf
insb
sub
adc
add
arpl
mov
add
test
or
push
sbb
mov
jecxz
push
ficoml
xchg
in
jb
push
ds
movsl
int
movsl
ljmp
cmp
cmp
daa
lods
aaa
or
sub
jb
outsl
lret
cmp
hlt
xchg
mov
imul
adc
push
sbb
cmp
mov
push
cmp
test
cmp
xchg
cld
adc
sub
adc
xor
stos
outsb
adc
inc
push
inc
adc
add
sahf
adc
push
jge
adc
push
imul
pushf
lock
iret
fwait
jge
test
sbb
pop
cmp
pusha
call
push
mov
mov
lods
pop
mov
and
insl
push
rcll
xor
inc
jo
popa
fidivrl
mov
dec
mov
or
or
adc
inc
xchg
or
cwtl
push
mov
sub
in
add
mov
dec
stos
movsl
mov
push
mov
repnz
push
xchg
mov
pop
sahf
lahf
lds
or
ss
push
nop
cmp
sti
pop
mov
popf
push
and
es
sub
gs
adc
push
leave
pop
rorb
sbb
mov
add
jecxz
jecxz
repz
cmp
outsl
jecxz
into
gs
cmp
mov
cltd
scas
loope
mov
and
inc
pop
rolb
rorb
pop
pop
dec
xchg
cs
sbb
push
ss
sbb
dec
dec
loop
ret
pop
push
sub
mov
jecxz
xor
dec
jnp
sub
shlb
push
sahf
and
imul
cmp
cmpsl
sahf
fisubrs
sbb
and
aaa
or
cwtl
hlt
fs
lahf
cmpsb
aaa
cld
push
cmp
aaa
sti
mov
mov
fiaddl
int3
add
and
stos
popa
push
ds
inc
pop
popf
fcomps
pop
repnz
jb
imul
movsb
and
add
sub
mov
outsl
xor
sbb
js
dec
jae
out
repz
sarl
mov
fbstp
mov
loopne
rcr
mov
lods
cmp
adc
ds
xor
jne
jo
mov
add
bound
xor
xchg
divb
adc
pop
shl
xchg
nop
push
jne
pop
inc
mov
es
addr16
or
pop
adc
pop
aam
idivl
mov
pop
adc
jge
add
push
xchg
std
mov
jmp
enter
popa
inc
push
sbb
pop
imulb
cmp
ljmp
hlt
sbb
jo
scas
fists
into
jno
mov
icebp
xchg
or
aad
sbb
mov
mov
xchg
sbb
mov
clc
aam
sbb
mov
shrb
loop
pop
adc
aam
fcmovnbe
sub
clc
pop
and
pop
lods
jnp
sub
xchg
xchg
xor
push
call
mov
jecxz
lret
push
mov
jge
rolb
lret
in
les
lcall
fwait
lret
xchg
fldlg2
xor
push
insl
sbb
xchg
adc
scas
popa
fmuls
pop
push
adc
pop
lret
pop
fiadds
das
repnz
imul
dec
cmpsl
sub
lods
into
cmp
sub
add
in
sbb
cmpsb
adc
mov
pop
cmpsb
or
mov
xchg
leave
outsl
movsl
lods
ret
push
pop
test
jb
insb
jne
push
jmp
fidivs
rcll
pop
repnz
sub
cli
dec
ret
jns
mov
not
cmp
adc
fsubp
lea
icebp
adc
pop
push
stos
data16
ljmp
inc
test
lret
loop
adc
push
add
cbtw
fwait
pusha
lahf
test
xchg
pop
mov
aas
push
pushf
ja
sbb
test
cmc
adc
push
inc
mov
push
fisttpl
movb
ror
pop
imul
mov
or
ret
inc
int
sub
add
cltd
insl
lea
int3
mov
rcrl
pushf
scas
fistps
rcrb
push
test
sbb
mov
pop
insb
xlat
stos
jno
mov
in
es
clc
lods
or
jbe
xor
sarb
push
mov
sub
inc
push
test
mov
mov
cmp
mov
mov
pop
addr16
mov
aas
xor
sub
jno
jle
mov
jnp
pop
lcall
subb
jecxz
out
inc
adc
rcll
insb
sbb
insl
sub
cmp
insl
outsl
rorb
inc
xchg
cmp
scas
push
or
cmpsb
add
jae
xchg
pop
cld
push
addr16
or
inc
add
inc
imul
pop
xchg
cmp
hlt
cmpsl
pop
adc
int3
ds
roll
addb
add
pushf
ficoms
lds
fs
cmp
out
mov
ja
fadd
or
or
cs
rcll
dec
mov
and
pop
clc
dec
mov
shll
sarb
movsb
or
aam
aad
scas
sbb
aaa
xchg
jmp
mov
aam
cmp
clc
adc
scas
or
les
out
icebp
js
or
fildl
mov
jmp
mov
sbb
in
sub
sub
sbb
push
pop
add
scas
daa
cs
scas
insl
mov
jae
negl
jns
cmp
repnz
xchg
sbb
insl
ss
xor
and
out
into
mov
push
fcomps
pop
and
addr16
popa
in
pop
dec
mov
sub
popa
jge
test
bound
cmp
xor
jno
jnp
and
or
in
xor
scas
mov
repz
inc
iret
jne
push
jmp
push
js
lahf
push
sub
call
xchg
mov
jmp
sub
push
or
mov
sub
out
ret
push
push
aas
lcall
jp
adc
repz
stc
xor
xchg
sub
sbb
cmp
push
test
and
dec
cmp
adc
push
gs
xchg
in
insb
xchg
arpl
mov
cmpsl
cmp
mov
sub
popf
ret
cs
pop
es
loope
out
aas
mov
inc
inc
push
cmpsb
test
sub
dec
sub
sub
lock
mov
adc
add
scas
jg
jp
int3
pop
lds
rorl
cli
ds
mov
je
xor
xlat
pusha
lds
insb
or
xchg
pop
sbb
and
jmp
inc
add
jne
add
jae
jo
jp
out
lcall
dec
jecxz
mov
mov
mov
mov
rcrl
mov
in
sti
addb
push
xor
adc
or
iret
in
mov
scas
cmc
loop
imull
add
mov
jno
test
xor
cld
mov
cli
xor
mov
mov
push
jg
lock
and
pusha
mov
push
popf
clc
hlt
loope
cs
adc
sub
push
loopne
pop
cli
push
in
sysret
jo
mulb
nop
imul
aaa
cld
inc
mov
mov
lods
inc
ret
push
pusha
stos
pop
sub
jge
pop
fstpt
fld
daa
out
push
cmp
xchg
clc
pop
mov
xchg
leave
std
in
bswap
in
les
sti
dec
iret
imul
xchg
xchg
std
les
push
sbb
in
cmp
in
test
jl
mov
aad
push
rol
sub
dec
add
dec
push
dec
sti
out
ljmp
mov
sbb
call
xchg
int3
push
cmp
adc
mov
dec
movsb
adc
or
int3
inc
stos
mov
shrb
orb
out
mov
outsb
and
adc
out
es
or
fldl
enter
dec
xchg
repnz
ja
xchg
or
movb
aaa
fbld
xchg
dec
fisttps
cmc
insl
and
jbe
sti
xchg
ss
push
lods
std
repz
insb
arpl
adc
inc
loope
outsl
scas
jp
jp
mov
inc
and
clc
xor
cmp
jno
mov
pop
sbb
shlb
adc
or
lock
mov
cli
xchg
lods
xlat
into
and
insl
xor
jnp
mov
jo
pusha
cmpl
in
push
btr
hlt
btl
jecxz
mov
sub
push
mov
dec
cmc
mov
and
ficoml
pop
in
imul
and
jg
arpl
cltd
clc
or
push
push
and
jne
xchg
rcrl
call
dec
int
fimuls
mov
push
jbe
test
pop
lods
stos
cwtl
jp
jb
sub
push
rcrl
out
xchg
das
sub
js
fnstsw
xor
add
push
fmulp
mov
imul
push
imul
pop
mov
mov
inc
jnp
sub
in
ja
sbb
xorl
jecxz
xchg
mov
adc
adc
mov
mov
popf
cmc
push
cmp
mov
jp
add
scas
out
mov
xor
xlat
in
cwtl
lahf
push
scas
test
arpl
in
sub
mov
add
adc
mov
mov
adc
shrl
fisttpl
rclb
negl
shrl
cli
jl
cmc
and
clc
ret
fsubp
push
or
push
dec
das
fwait
jp
lea
test
xor
mov
sahf
or
leave
xchg
mov
push
xchg
clc
enter
dec
push
enter
dec
sub
push
lret
stc
jnp
js
cmp
and
ficompl
repnz
xlat
test
push
xor
mov
popa
mov
sub
not
es
push
aaa
sbb
sub
and
cmp
cmc
xchg
ljmp
and
add
mov
insb
xor
pop
sub
in
cmp
and
xor
je
xlat
xor
das
add
push
repnz
push
xchg
mov
xor
lahf
daa
pop
sbb
out
inc
mov
push
adc
pop
aas
bound
push
sbb
adc
imul
popa
xor
mov
pop
out
jmp
add
mov
orb
test
clc
mov
add
sub
daa
jbe
inc
test
xchg
stos
or
in
fisttps
sub
jbe
addr16
adc
adc
adc
ljmp
adc
addr16
fwait
sbb
imul
nop
movsl
dec
leave
int3
stc
addr16
cmpsl
or
jnp
sub
push
sbb
lahf
mov
fcomps
add
daa
into
into
fisubl
outsb
mov
jmp
cmp
push
das
into
or
mov
jecxz
push
dec
mov
insl
andb
mov
je
inc
and
enter
stc
mov
jl
add
lcall
sbb
xor
push
out
aas
ret
xchg
push
cmp
sbb
je
jg
out
shlb
leave
add
les
mov
flds
add
movsl
pop
sub
sbb
mov
cltd
cltd
cs
and
insb
xchg
pop
xchg
cmp
jecxz
repz
popa
rcrb
call
cmp
adc
adc
in
pop
mov
or
cmp
pop
and
mov
lcall
fcoml
sbb
mov
lds
aaa
jbe
inc
mov
xchg
into
jno
loop
in
stos
call
jecxz
scas
sbb
mov
lret
xchg
dec
jno
mov
jb
add
mov
cmp
sahf
fwait
out
mov
or
jnp
rcrl
aas
jmp
bound
or
mov
jg
adc
sub
add
addb
andb
jl
sbb
std
adc
fmuls
add
add
mov
rep
lcall
outsl
outsl
rcrb
lret
out
mov
push
movsb
mov
test
in
or
sti
icebp
ja
jbe
lods
push
cmpsl
mov
pop
or
fwait
ret
sbb
out
ljmp
xor
xchg
lret
and
pop
inc
icebp
arpl
jmp
jl
xchg
push
int
cmp
mov
aad
aam
and
sbb
ja
les
cmp
enter
dec
jge
sub
cld
jnp,pt
sub
adc
adc
xchg
mov
daa
xchg
bound
mov
fs
outsb
jp
pop
adc
int3
icebp
in
pop
or
lahf
lcall
outsl
ljmp
lds
add
ds
dec
pop
adc
pop
jo
jp
and
lea
fdivl
and
sbb
xchg
daa
cmpsl
sarb
lret
or
and
xor
mov
das
js
cmp
mov
cmp
dec
rcr
push
mov
xchg
cwtl
loope
lods
cmc
test
add
xchg
push
mov
sbb
js
xchg
vpaddsw
jmp
sub
dec
push
inc
mov
idivb
xchg
clc
std
jmp
orb
mov
loopne
sbb
data16
xchg
aad
push
hlt
nop
loopne
sbb
add
ds
mov
dec
inc
insl
and
daa
pusha
js
adc
lods
incb
push
sahf
cmpsl
mov
inc
and
dec
nop
add
cmp
js
addr16
pop
xor
fidivrl
in
push
imul
fs
out
fs
sub
sahf
jbe
test
push
movsl
adc
fimull
add
stos
jl
mov
sbb
sbb
mov
push
add
clc
jecxz
or
sbb
cmp
adc
imul
out
lret
mov
cmpsb
cwtl
pop
xchg
cmpl
mov
imul
push
add
inc
fildll
cwtl
jno
out
sbb
inc
inc
push
shrb
and
addl
aas
inc
fistps
andb
rorl
icebp
dec
in
jl
jbe
xchg
sahf
xchg
jg
dec
xor
xchg
fsubp
cmp
sbb
std
aaa
int
icebp
lcall
cmpsl
push
aas
mov
inc
xor
in
xor
xchg
adc
xlat
std
cltd
test
frstor
jbe
sbb
sbb
mov
jne
cmpsb
adc
and
or
fistpll
outsb
gs
xlat
outsl
dec
push
adc
or
fsin
aaa
and
fadds
jge
or
push
aaa
dec
xchg
cmp
lea
ljmp
jns
ljmp
inc
loopne
rolb
in
js
subb
andl
dec
aas
jb
add
imull
pop
pop
pop
arpl
std
loope
pop
inc
cmp
dec
or
mov
pop
adc
push
mov
lods
loopne
inc
jmp
ret
je
stos
nop
sub
adc
push
dec
mov
gs
jb
in
mov
loopne
lods
inc
pop
ficoml
decl
scas
ficoml
pop
stc
adc
js
inc
xor
dec
frstor
mov
lcall
fists
mov
adc
insl
push
insb
inc
pop
push
dec
sbb
mov
mov
or
sti
dec
int
mov
pushl
sbb
in
int3
nop
shll
loop
fimuls
stos
fsubrl
xor
in
and
lock
pop
jp
pop
add
push
mov
mov
xchg
pusha
mov
les
fsubr
jb
cmpb
push
lods
pop
or
les
cwtl
mov
arpl
inc
mov
out
push
insb
and
xlat
shlb
test
shll
shl
and
jb
push
shlb
pop
pop
jmp
xchg
repnz
mov
arpl
jne
xor
lahf
data16
push
ds
mov
xchg
call
xchg
pop
out
inc
ljmp
dec
andl
push
rorb
xchg
sub
jle
mov
jbe
jb
outsl
inc
cmp
and
and
inc
xchg
dec
mov
dec
xor
jo
add
and
out
xchg
sub
call
repz
cltd
das
mov
push
scas
into
pop
ljmp
fstps
xchg
pop
cmp
xor
jle
push
insl
adcb
dec
js
loop
pop
xor
mov
or
lahf
xor
xchg
and
mov
xchg
sbb
lods
mov
cmpl
cmp
jmp
inc
icebp
push
int3
lcall
into
mov
mov
sbb
adc
lea
fists
mov
ror
lods
ja
insl
je
cmp
insl
dec
cmp
jo
jmp
push
mov
mov
xchg
dec
xchg
aad
push
adc
icebp
mov
repnz
adc
lock
clc
jmp
test
dec
xor
dec
sbbl
arpl
dec
out
and
imul
in
add
mov
sti
xlat
mov
and
lods
push
xor
mov
xlat
scas
push
pop
lret
adc
push
push
test
jp
pop
push
lea
je
insb
xor
js
movsl
cmp
adc
add
or
jl
fistl
adc
lret
or
in
leave
mov
pop
jbe
inc
popf
sbb
cmp
mov
aas
fmuls
call
push
in
pop
jmp
cmpl
lods
mov
xor
cmpb
es
dec
in
add
scas
jae
outsl
hlt
js
and
gs
jne
dec
lea
xchg
ror
pusha
aas
adc
push
xlat
out
xchg
push
pop
mov
mov
push
cwtl
fwait
mov
ret
ficoml
jbe
test
addr16
and
pop
data16
and
inc
testl
cmp
pop
lret
jmp
ja
pushf
xchg
push
aad
pop
dec
xlat
notl
leave
mov
jle
lea
mov
mov
fdiv
xchg
inc
scas
lds
out
shlb
cmp
mov
or
test
mov
iret
pop
inc
mov
test
das
adc
adc
add
push
xor
cli
ss
and
mov
cs
addr16
sub
int3
add
cld
jo
mov
into
mov
dec
sub
mov
adc
cmp
addr16
mov
adc
mov
mov
pop
out
jae
stc
push
hlt
xchg
jp
dec
adc
imul
add
sub
xor
inc
xchg
in
mov
push
jle
mov
inc
inc
sub
inc
push
xchg
cmp
jecxz
jp
inc
push
mov
sbb
into
sbb
ss
inc
xor
push
pop
pop
jecxz
mov
cmp
cs
sub
inc
cs
sbb
sahf
add
xchg
cmp
pop
dec
pop
ja
test
pop
cwtl
and
fs
and
loop
mov
jne
hlt
sub
out
push
into
push
and
jmp
xchg
ret
sub
fldcw
xor
cmp
shl
jns
sbbl
std
and
add
lret
movsl
pushf
lds
fiaddl
pop
mov
xor
loop
ret
stc
jae
call
mov
mov
lock
cmpsb
push
or
in
or
xchg
pop
or
sub
das
insb
lds
fcompl
inc
inc
sbb
or
mov
out
xor
andl
mov
xchg
dec
aas
ss
or
daa
mov
leave
cld
in
jge
vmwrite
lret
hlt
push
mov
inc
add
stos
or
call
xlat
dec
or
xor
aaa
movsl
addr16
popa
ds
popa
pop
push
pop
fsubl
arpl
mov
mov
into
pop
aaa
test
pop
mov
dec
adc
mov
pusha
inc
and
dec
int
mov
mov
loopne
sub
leave
fbld
roll
stos
inc
mov
hlt
icebp
dec
fwait
jae
inc
imul
jle
stc
aas
pop
test
jns
xlat
lahf
mov
xor
sahf
sub
aas
mov
les
jbe
les
jg
sub
mov
loope
pusha
fst
or
in
sahf
mov
hlt
iret
jge
jp
lea
adcb
ljmp
and
cli
lcall
andb
out
loope
movsl
and
add
jbe
int
xor
xor
cli
jecxz
aas
mov
fnstenv
and
cmp
mov
setl
add
icebp
out
cwtl
mov
jg
fisttpl
ss
hlt
pop
bound
or
pop
pop
push
or
in
pop
jo
xchg
les
in
mov
adc
iret
jo
and
push
push
fistps
jge
cld
inc
hlt
or
adc
xor
mov
push
pop
arpl
xchg
push
or
pop
push
adc
repnz
es
xchg
leave
mov
jno
or
or
int
mov
inc
dec
in
idiv
or
or
push
mov
fs
insb
pop
icebp
add
shll
fs
ficompl
inc
nop
cli
xorb
xchg
xchg
shll
shrl
fldenv
out
mov
ror
sub
dec
gs
or
les
xchg
jle
imul
int3
jo
or
add
cmpsl
mov
inc
hlt
mov
pushf
jp
lods
popa
lret
adc
fadds
in
mov
lea
movaps
jle,pn
cs
shrb
inc
jl
shl
inc
inc
add
ficoml
aas
mov
lods
xor
cwtl
inc
in
out
int3
pop
mov
add
push
xor
aad
cwtl
std
sub
sbb
xor
xchg
out
mull
fs
lds
cmp
xor
dec
or
sbb
mov
addr16
mov
call
adc
pop
mov
pop
mov
xor
mov
fmull
rolb
fldenv
jle
pop
sbb
or
stos
loope
jbe
popa
lea
mov
lds
gs
cs
push
andb
into
sbb
pop
movsb
xor
ja
lcall
sub
dec
sub
mov
test
sub
icebp
pop
mov
add
push
pop
cmpsl
cmp
idivb
pop
adc
shr
pop
adc
nop
adc
ror
or
mov
pushf
sbb
or
jno
inc
in
loope
adc
adc
call
push
fwait
ja
mov
mov
movsl
pop
mov
cmp
popf
imul
les
dec
sbb
jg
enter
xchg
xchg
mov
sub
shll
inc
xor
test
mov
popa
setno
xchg
shrb
rcll
cli
shr
push
out
push
push
xchg
pop
dec
test
jp
movsb
inc
int
xchg
jle
pop
lea
xchg
dec
mov
sahf
add
cmp
mov
test
add
or
outsb
pusha
xchg
testl
jb
cwtl
imul
loopne
mov
adc
les
jp
cs
cmp
out
out
in
fcomi
icebp
xchg
pop
mov
or
inc
push
test
stc
scas
mov
mov
jmp
dec
mov
ljmp
sbb
sbb
cltd
jge
fwait
int3
sub
pop
adc
jbe
clc
imull
in
mov
nop
test
call
push
inc
stc
mov
pushf
rcll
pushf
into
popa
push
loope
lret
push
js
loope
cwtl
cmp
nop
mov
shl
scas
ret
pop
insl
and
ja
adc
jl
mov
jno
or
rorl
xchg
fwait
mov
jnp
mov
cwtl
mov
mov
ljmp
sub
ret
mov
popf
push
or
bound
dec
adc
sub
nop
lea
jmp
inc
and
lret
test
bnd
jae
jge
rcrl
mov
dec
xor
pop
and
std
mov
test
jo
cmpsb
dec
je
xor
loop
adc
mov
and
pop
jb
mov
cmp
jmp
bound
orb
mov
add
mov
mov
cmp
mov
bound
sub
xor
jp
aam
mov
cmp
xchg
mov
aad
adc
ret
inc
push
jns
adc
mov
jp
jg
sbb
adc
sbb
xchg
sub
adc
ret
inc
hlt
dec
shll
sbb
clc
popa
stos
fcomps
int3
loop
add
out
mov
xlat
insb
cmp
xchg
subb
sarb
and
adc
ljmp
inc
mov
xchg
pushf
call
jecxz
push
mov
dec
std
mov
xchg
mov
lods
arpl
jmp
xor
mov
insb
jmp
mov
data16
jmp
jbe
pop
inc
mov
jp
add
andb
pop
pusha
and
jecxz
mov
sbb
sbb
pop
cmp
mov
dec
mov
enter
lods
stc
adc
pusha
pop
mov
sahf
loop
loope
dec
jp
fdivrs
mov
data16
sbb
loope
cmp
stos
add
icebp
rcll
outsb
pop
dec
push
xor
jne
aas
test
nop
or
ret
gs
rclb
pop
mov
pop
xchg
test
repz
imul
cmp
push
andb
fwait
orb
aaa
or
bound
daa
stc
sub
jne
inc
sub
mov
add
mov
out
mov
mov
cmp
andl
sub
mov
in
bound
push
jmp
inc
dec
mov
dec
adc
cmp
mov
sbb
and
outsb
xchg
cmp
subl
ja
or
fdivs
lock
in
inc
jl
jno
xor
clc
adc
jp
mov
xor
adc
enter
sbb
sbb
mov
rorb
or
idivl
fisubrl
push
sub
lods
popf
aad
fsubs
imul
pop
faddl
cmp
mov
hlt
loopne
hlt
or
shl
imul
fisttps
adc
test
add
xchg
jecxz
cwtl
sub
mov
cmp
add
cmpsb
cli
lock
fadds
cmp
xor
cmp
or
insl
lock
cmp
xchg
mov
stos
lcall
sti
nop
dec
ss
lea
jge
push
pop
leave
aam
ror
int3
fstps
notl
xchg
jle
sbb
mov
add
icebp
in
xchg
iret
jb
adc
pushf
call
push
cwtl
daa
mov
pusha
mov
cltd
das
loopne
add
addr16
sarb
negb
cwtl
xchg
dec
enter
cli
outsl
test
bound
sbb
push
pop
int3
sbb
adc
jne
mov
dec
inc
dec
les
xchg
lret
fisubl
mov
outsl
mov
sub
cmpsb
sub
mov
xor
iret
ret
aaa
lds
inc
dec
jle
icebp
dec
fwait
pop
sbb
cmp
xor
lods
test
jl
sbb
xor
sti
imul
pusha
push
adc
mov
das
mov
in
leave
jl
xchg
repnz
dec
mov
or
ja
int
xchg
and
loope
lds
ss
stc
js
mov
push
mov
xchg
in
push
je
mov
lods
fidivrl
push
std
ljmp
inc
cmc
insb
adc
sub
addr16
out
std
fidivrs
jmp
int
push
jbe
sahf
mov
adc
cld
jns
push
imul
repz
test
shlb
pop
in
scas
clc
pusha
xor
sbb
sbb
push
leave
mov
jle
lea
repz
gs
dec
inc
fdivr
cmp
gs
add
pavgw
xor
repz
push
xchg
insl
es
mov
mov
cmp
adc
negl
jle
test
adc
shl
mov
pusha
jne
xor
sbb
bound
lahf
push
in
in
push
and
lds
out
xchg
xorb
mov
pop
xchg
sub
mov
sub
mov
pop
rclb
mov
inc
adc
test
loopne
sbb
sbb
in
cmpsb
test
ja
sarl
fdivs
mov
adc
inc
pop
jne
mov
mov
stc
pop
sbb
inc
add
fcmovu
push
mov
icebp
out
adc
sub
data16
and
push
sbb
xchg
je
pop
and
add
dec
pop
jecxz
mov
pop
les
jecxz
push
sahf
loop
mov
inc
push
dec
dec
movd
sub
push
mov
rorl
cmp
xor
add
sub
add
shl
mov
sub
or
inc
jp
rcrb
pop
mov
jl
lret
sahf
shrl
loop
pushf
jae
sub
int
mov
add
or
or
xor
mov
dec
fidivl
into
test
mul
sbb
cmp
int
cltd
dec
add
out
clc
adc
push
lcall
mov
mov
inc
mov
adc
outsb
jp
fdivrl
ror
and
inc
mov
sub
in
push
mov
push
mov
orb
pop
pop
imul
clc
test
jmp
jnp
insb
inc
out
test
inc
sbb
imul
mov
aam
or
mov
jmp
aad
call
lcall
xchg
dec
lea
xchg
xchg
inc
insb
xchg
xchg
insl
sub
jge
dec
movsl
jmp
movsl
push
insb
cmp
inc
and
jl
out
out
sub
push
lock
and
xchg
ficomps
out
test
push
frstor
add
or
push
mov
sub
or
cld
rolb
push
pop
iret
mov
stos
jle
lods
out
cltd
push
mov
mov
xchg
xchg
and
mov
jne
inc
inc
xor
push
mov
xchg
test
lods
xchg
pop
mov
daa
fisubs
andb
pop
mov
and
scas
sbb
add
fs
inc
mov
cmp
mov
cmp
outsl
mov
jge
stos
mov
std
or
add
mov
lret
je
test
pop
dec
dec
pop
cmp
adc
in
xchg
xchg
test
addr16
in
jge
inc
xchg
dec
mov
cltd
jae
sahf
and
add
cmpsb
and
popaw
repnz
jo
jnp
jno
loope
xchg
fwait
or
push
cmpsb
fidivrs
mov
lret
out
sub
loopne
rorb
repnz
jns
arpl
lock
sbb
shrl
inc
pop
jecxz
jns
pop
sbb
dec
mov
pop
jno
add
shlb
jne
xor
cltd
out
das
dec
inc
pop
je
int
mov
repz
lcall
cs
mov
jle
dec
popf
movsl
jmp
inc
leave
int
jmp
pusha
xor
xor
mov
sahf
add
cli
inc
xchg
shl
cmpps
dec
in
jp
int3
icebp
mov
adc
ret
test
test
ror
mov
xor
mov
xor
mov
into
sbb
mov
ret
and
ss
rorb
rorl
js
jl
test
adc
or
pushf
in
sub
adc
bound
jnp
mov
insl
or
out
mov
xor
push
sahf
and
fs
pop
repnz
scas
xor
pop
jo
fiadds
out
int
fistpll
push
jg
jns
test
and
stos
popf
dec
sbb
test
push
xor
icebp
xchg
adc
test
mov
add
sbbl
idiv
mov
or
frndint
imul
mov
xor
dec
je
sbb
xchg
xor
pusha
jns
mov
ljmp
stc
inc
dec
xchg
push
mov
mov
insl
inc
and
pop
mov
pushf
flds
add
in
ret
pop
sbb
outsl
adc
ja
mov
out
lods
aad
jns
js
outsb
push
push
popa
pop
sahf
iret
cmp
test
pop
sub
outsl
xchg
jge
sub
xchg
insl
and
ret
push
je
dec
fstpt
sub
jmp
sub
and
sbb
add
xchg
push
js
mov
lret
call
test
iret
inc
insb
jae
repnz
xchg
daa
fst
sub
mov
push
adc
xchg
fnstcw
dec
mov
stos
repz
data16
cmp
lret
mov
mov
adc
pop
nop
and
adc
cmc
loope
fildl
jno
dec
popa
sub
jl
frstor
lret
sub
shll
hlt
or
mov
faddl
pop
shr
out
insl
lahf
cmp
mov
xor
addl
xchg
sbb
enter
sbb
jo
mov
pop
xorb
or
jno
ds
ja
stc
shrb
fdiv
push
jp
out
push
imul
sbb
aaa
lcall
outsl
push
repz
pusha
fildl
outsl
and
mov
mov
scas
xor
sti
ret
rcr
add
fsubrp
stos
jge
in
xchg
faddl
scas
and
inc
test
sub
jno
sti
out
movsb
jbe
inc
insb
leave
les
cmpsl
outsl
jle
jne
loop
add
jmp
push
ds
push
or
dec
shrl
aam
xor
sbb
adc
imul
cli
dec
divl
jbe
mov
testb
test
or
bound
push
push
add
loop
pop
add
cld
pop
mov
push
push
mov
cmp
cld
sahf
addl
out
arpl
stos
ljmp
loopne
push
ljmp
and
mov
rorw
or
sub
sub
inc
rolb
jno
push
and
add
gs
or
sbb
ficoms
mov
and
jnp
pop
adc
bound
mov
cmp
scas
inc
arpl
fwait
stos
adc
push
and
xor
fisttpl
xchg
inc
jl
aas
cmpsb
xlat
push
mov
xchg
inc
xchg
je
cmc
outsl
add
and
lret
push
stc
lds
sub
xchg
add
clc
stos
push
sbb
sub
leave
stos
loopne
daa
fsts
outsl
mov
ja
and
mov
int
jne
in
push
sub
imul
cs
inc
xchg
and
pop
popa
leave
loope
data16
dec
aam
fistpll
xor
bound
sar
cmp
push
cltd
nop
add
xor
jae
data16
testb
dec
popa
je
sub
mov
loopne
push
enter
enter
jp
jecxz
fiadds
cwtl
dec
stc
repz
jbe
daa
lcall
sub
xchg
rcl
cmpsb
mov
popa
jno
xchg
daa
fisubs
adc
int
mov
pop
scas
inc
pop
hlt
add
jge
sti
test
xor
or
outsl
xchg
pusha
test
dec
xchg
out
fs
out
push
mov
cmp
and
fsubrs
xor
jp
inc
mov
xor
jnp
mov
jb
hlt
pop
loopne
fildl
int3
out
out
xchg
push
adc
or
insb
add
push
in
and
pop
mov
push
outsl
imul
loope
inc
lahf
cmc
dec
test
cs
jge
adc
xchg
jns
inc
scas
dec
add
test
lods
out
push
lds
cmpb
rol
and
add
push
pop
loope
dec
pop
movl
insl
dec
pop
insb
pop
mov
mov
add
mov
or
cmp
dec
in
sahf
test
xchg
lret
adcl
xor
aam
aas
sub
lock
andb
cld
xor
hlt
lds
and
mov
mov
lds
jl
adc
cmpsl
dec
adc
mov
int
mov
xchg
cmp
and
jl
sub
je
aaa
sub
add
and
pop
scas
jbe
push
sbbl
lds
aam
or
shll
or
pop
loopne
dec
cmpsl
add
repnz
nop
les
xchg
aaa
cmp
shl
and
pop
fcomps
cwtl
cmp
imul
mov
adc
mov
pushf
xor
jno
lds
mov
aaa
movb
or
pop
pusha
and
or
aam
xor
sub
pop
adc
sub
aad
dec
orb
addr16
sub
mov
mov
lret
adc
mov
aas
ljmp
ret
sbb
add
xchg
fdivl
or
in
lahf
cmpl
mov
iret
dec
imul
insl
or
arpl
fbld
enter
out
sub
jo
cmp
adc
jmp
aam
adcw
pop
fstpt
aaa
shlb
and
jo
fnsave
mov
adc
or
cmpsb
add
mov
test
push
mov
sub
movsl
sub
cmp
sbb
in
pop
xlat
xchg
mov
jne
stos
and
fsubs
fnsave
repnz
flds
loopne
xchg
pusha
mov
xchg
adc
pop
dec
mov
lret
lret
aam
push
pop
cltd
imul
add
pop
dec
popa
dec
xor
pop
xchg
xchg
stc
fs
stc
sti
adcl
sub
daa
mov
xor
pop
mov
bnd
push
in
jge
out
fsts
loop
xchg
jnp
xchg
add
insl
push
imul
xor
movsl
rcrb
push
xchg
stos
hlt
mov
movsb
and
xor
decb
shl
int3
pop
fstpt
sbb
mov
arpl
leave
pop
cmp
das
or
stos
scas
mov
out
adcl
bound
imul
aad
add
addr16
stos
sub
and
mov
pop
iret
add
daa
mov
sbb
mov
mov
sbb
rcll
push
fmul
fisubrs
orl
pop
push
cmpsl
stos
mov
es
dec
fidivrl
notb
cmp
cld
mov
push
jns
xor
aad
push
mov
xchg
add
push
push
popf
pop
sub
mov
mov
add
pop
fwait
lods
mov
jne
and
arpl
movsb
xor
xor
mov
cmp
mov
pop
xor
fs
test
lret
push
adc
pop
in
or
pushf
mov
test
popf
aam
cmp
testl
or
xchg
lahf
xchg
and
jnp
jb
push
cltd
jge
cmc
out
mov
and
arpl
adc
adc
jne
mov
add
sbb
outsb
push
dec
adc
in
inc
xlat
loope
push
test
xchg
hlt
inc
inc
mov
sti
pushf
data16
inc
ja
int3
or
or
dec
cmp
lahf
nop
loope
stos
inc
arpl
enter
pop
and
cmp
pop
int
inc
dec
fisubrs
imul
shll
daa
xchg
xchg
jo
lds
inc
gs
add
mov
imul
aaa
js
xchg
mov
outsb
cli
into
mov
mov
lea
dec
inc
hlt
scas
lds
lods
repnz
inc
leave
adc
cltd
xchg
testl
les
xor
or
fists
push
adc
inc
dec
push
aam
xchg
arpl
negl
lods
loop
mov
xchg
aam
stos
mov
cmp
jbe
shll
adc
xor
shrb
xor
clc
and
or
lods
cmp
sarl
mov
loopne
lods
sbb
jno
xchg
lcall
adc
jl
mov
cmc
inc
imul
pop
imul
cmp
mov
out
mov
das
idivl
push
nop
mov
insb
sbb
daa
or
iret
cmp
or
insl
nop
inc
jmp
jae
or
mov
cmc
push
inc
out
loopne
mov
jmp
push
jae
xor
push
dec
jae
mov
xorb
bound
pop
fwait
inc
por
mov
mov
and
inc
xchg
repz
data16
dec
adc
outsl
icebp
enter
push
repz
dec
addr16
add
in
into
mov
pusha
aam
sbb
dec
mov
pusha
jb
inc
outsl
dec
and
dec
jno
aaa
pop
cs
jbe
in
push
enter
std
mov
or
add
fimuls
in
push
ret
push
and
ss
fdivs
mov
xor
imul
sub
mov
movl
jge
repz
je
mov
ficompl
pop
dec
sbb
ss
mov
xor
data16
test
insl
pop
enter
nop
jns
mov
jo
jo
outsb
data16
je
lcall
push
pushf
stos
mov
sbb
je
dec
cmp
imul
cmp
and
nop
mov
adc
shlb
aas
movsb
incb
addr16
sti
ret
shll
xchg
pop
and
dec
es
fs
mov
out
jle
push
sub
or
addl
lock
arpl
cmpsl
pop
lret
lahf
decb
pop
sbb
adc
inc
dec
loop
andl
addl
or
iret
and
mov
lcall
pop
test
inc
add
and
in
cmp
subl
lock
ficoms
cli
push
lcall
pop
sub
jl
fidivl
ficoms
inc
lds
dec
cld
sbb
mov
sahf
jg
or
push
sub
xor
xchg
adc
mov
fisubrl
clc
jp
in
shl
sbb
or
in
push
pop
aas
out
gs
aas
push
pop
pushf
scas
cs
fwait
cmp
daa
dec
fldenv
imul
sub
idivl
sbb
adc
pop
stc
sub
out
xor
add
pop
and
dec
xlat
mov
mov
jg
or
in
into
imul
andb
sbb
not
or
mov
clc
mov
andl
mov
enter
pop
dec
jo
rcll
in
push
das
ja
cltd
mov
mov
lods
mov
cmp
rcrb
mov
push
fdivr
sub
push
inc
pop
mov
ljmp
cmp
imul
push
and
in
test
jne
pop
pop
sahf
out
iret
in
loopne
int3
int
sub
popf
jno
xor
xor
rcrb
and
jmp
xchg
xor
arpl
outsb
sbb
std
xor
mov
add
lds
xchg
lahf
insb
or
addr16
xchg
and
hlt
loop
cmp
jns
incl
cltd
mov
nop
xor
int
cs
jnp
popa
aas
test
pushf
add
movsb
fcompl
sbb
xor
mov
sub
cwtl
in
dec
ror
mov
and
test
popa
scas
xlat
scas
inc
pop
and
enter
insb
fldl
aam
or
jo
xlat
pop
lret
scas
cltd
lods
call
adc
std
adc
inc
popf
enter
dec
into
push
pusha
add
mov
jno
loop
inc
rcl
xchg
movsl
in
shrl
cmp
inc
movsl
ss
mov
fiaddl
cmp
in
pop
aaa
dec
out
enter
jmp
repnz
ret
out
sbb
add
pop
mov
lds
test
fadd
mov
jb
aam
test
xchg
fcomps
in
outsb
push
xlat
outsl
mov
in
stc
sarl
inc
testl
mov
cli
test
repz
jecxz
popl
addr16
jp
mov
inc
test
ss
or
sbb
ror
lea
stos
test
punpckldq
fsubr
push
es
push
imul
sarb
cwtl
adc
in
fcoml
inc
decb
fldcw
mov
test
cwtl
or
jo
xlat
ret
es
mov
add
sbb
inc
and
sti
inc
mov
add
jg
push
in
ja
int3
cmp
gs
insb
cmc
shlb
dec
mov
sub
aas
sub
pop
push
fadd
mov
xchg
mov
and
cltd
mov
imul
repnz
cmp
sbb
adc
or
sub
aas
in
sub
pop
mov
cmp
and
icebp
inc
cltd
cmpsb
loopne
jmp
sbb
mov
cmp
lea
push
xor
or
push
xchg
ljmp
jbe
mov
dec
push
jmp
xor
cmp
cmp
sbb
loop
into
add
loopne
shlb
pop
inc
lret
rcl
sbb
mov
cmp
sbb
xor
popa
imul
sahf
stos
ret
mov
lret
mov
in
jae
lret
adc
bswap
mov
test
push
nop
in
push
sub
lods
pop
adc
xchg
stos
mov
mov
pop
dec
lahf
ss
jae
jo
divb
int
xor
std
lds
inc
movsb
cs
fldl
es
dec
pop
ffreep
sbb
data16
aam
pop
jmp
xor
pop
jl
test
xor
push
sbb
sub
mov
cwtl
or
lcall
into
add
xchg
and
js
mov
inc
or
push
adc
cmp
push
sub
pop
sbb
sbb
mov
xlat
pop
fwait
pop
dec
daa
andl
adc
xchg
cltd
xchg
je
jns
adc
clc
jl
xchg
stos
lret
loop
sub
in
dec
gs
dec
ret
add
icebp
push
sub
data16
dec
adc
lcall
xlat
and
outsb
int
mov
mov
sub
rcrl
or
and
inc
or
mov
pop
iret
outsl
mov
mov
xchg
mov
call
adc
fistpll
pop
out
or
call
mov
mull
add
add
mov
pop
xchg
mov
pop
xor
out
xor
iret
jne
test
ljmp
push
pop
ja
insb
cwtl
out
sbb
iret
xchg
jno
pop
pop
daa
pop
pop
pop
adc
or
popa
add
lret
fsubl
inc
pop
cmc
jnp
and
xor
fs
jle
pop
push
roll
imul
insb
aad
lahf
push
les
scas
push
shrl
mov
lcall
inc
out
mov
pushf
add
cwtl
lcall
jecxz
mov
adc
data16
mov
cli
jmp
test
cmp
xor
pop
out
mov
out
cmp
pop
out
das
and
inc
fstl
lret
jle
cmpsl
insb
adc
add
and
sbb
mov
cmpsl
adc
sub
insb
rcrb
stos
loop
dec
sarb
imul
mov
repz
mov
mov
ficoms
push
iret
insl
in
pop
sbb
mov
das
dec
loope
xchg
xchg
fs
mov
into
or
jecxz
pop
std
outsb
sub
fwait
sbb
push
xorb
jle
sub
cmpsl
add
fucomi
movsb
sbb
jg
pop
imul
push
in
insl
push
in
mov
idivb
mov
xchg
push
xchg
fstpt
popf
xchg
pop
pop
test
std
jno
inc
mov
dec
les
mov
aad
push
sbb
lods
std
push
mov
jbe
movsl
loop
ljmp
ss
lods
gs
inc
cmp
xchg
hlt
push
mov
jno
les
jmp
test
jecxz
push
pop
xor
call
jnp
xchg
dec
stc
in
dec
aas
sbb
lret
jbe
jle
sub
mov
jmp
cltd
xchg
mov
cmp
sti
sub
cwtl
scas
or
pop
int3
pop
sub
or
adc
pushf
inc
fcmovbe
je
dec
fadds
std
jg
mov
mov
aas
xor
push
push
lret
xor
xchg
insb
addb
shlb
mov
cwtl
inc
xor
lcall
test
pop
push
data16
out
insb
das
mov
test
popl
and
imul
nop
arpl
mov
in
inc
out
test
lahf
sub
mov
cmp
inc
loope
push
add
lods
dec
adc
loopne
pop
xchg
mov
push
in
rcr
orl
mull
mov
subl
jg
icebp
mov
fwait
adcl
ljmp
jbe
pop
cmp
movb
xchg
inc
jle
push
sub
sub
push
loopne
add
jo
filds
outsl
cmp
xor
outsl
mov
ljmp
pop
aaa
cltd
mov
cmp
push
out
mov
fcom
shrl
subl
test
mov
push
fistpl
cmc
pop
adc
mov
mov
cmp
loop
roll
mov
mov
enter
ret
and
add
cmp
adc
js
sti
mov
je
mov
cltd
rolb
dec
rcl
dec
insb
andl
roll
mov
addr16
mov
mov
ljmp
out
cmpsb
inc
jmp
mov
xchg
data16
ja
in
dec
lods
inc
aam
pop
rolb
push
ljmp
filds
adc
adc
jl
arpl
adc
xchg
sub
mov
cmp
add
aas
cmp
bts
sti
bound
mov
ja
push
lea
lret
dec
fbld
inc
adc
pop
xlat
mov
pop
adc
arpl
call
and
lahf
mov
pop
imul
fcomp
call
jbe
sahf
repz
sbb
cs
loop
lods
es
or
jge
movsb
adc
icebp
fstp
and
js
pop
sbbl
iret
xor
xchg
xor
aad
mov
sbb
clc
or
jno
jno
fsts
daa
cmp
rep
roll
jge
decl
in
sbb
adc
in
mov
inc
push
test
push
pop
pop
imul
mov
iret
sbb
in
scas
mov
or
lods
data16
sti
pusha
insb
adc
push
jae
repnz
lcall
mov
mov
xor
mov
push
dec
xchg
and
sbbb
cmp
pusha
fcoms
xchg
dec
push
lcall
or
ret
std
out
ja
or
mov
dec
lret
inc
stos
and
dec
xor
aas
mov
bnd
pop
lcall
mov
outsb
or
das
fistl
add
rep
lea
mov
in
adc
fs
push
and
sub
mov
dec
sbb
adc
sub
lods
or
scas
outsl
fstpl
test
cmp
mov
push
push
and
cmpsb
and
je
shlb
xchg
cwtl
add
push
clc
fwait
fwait
adc
jecxz
xchg
outsb
jmp
in
add
and
inc
lea
js
pop
pop
and
sbb
xchg
movsl
mov
in
cmp
insb
enter
push
cmc
or
shlb
mov
inc
adc
pop
xor
push
scas
hlt
cmp
fcomps
in
cwtl
movl
or
jge
popf
push
lods
popa
jge
imul
test
mov
stc
faddp
xchg
popa
mov
shr
and
dec
mov
pusha
and
fstpt
pop
dec
cmp
xchg
pop
repz
outsl
jmp
pop
rcll
xchg
xchg
aam
add
lock
fwait
pushf
mov
jno
stos
xchg
and
ret
adcl
jo
popa
insl
cmp
in
adc
loop
cli
sbb
lods
and
dec
xchg
loop
xor
mov
dec
into
insl
stos
cmpsl
mov
pop
pop
lret
in
jns
ja
jns
push
out
mov
dec
in
inc
scas
adc
fistl
jns
daa
mov
jle
js
jp
std
pop
or
sbb
jne
and
jge
lods
or
add
imul
mov
add
mov
ret
out
cwtl
fldl
fadds
jo
xchg
movsb
lret
stos
xchg
out
push
push
mov
test
sub
outsl
xchg
adcb
xor
into
add
pop
movsb
nop
lea
insl
aaa
xchg
cs
ret
add
dec
and
mov
lods
ja
jmp
jne
sbb
mov
shl
jp
xchg
adc
jmp
test
das
push
jmp
scas
mov
arpl
push
shrl
outsl
fiaddl
jb
lods
aad
movsb
add
dec
xor
dec
sub
mov
inc
sub
sbb
cmp
bound
das
jge
mov
push
mov
bound
mov
or
sahf
sbb
jg
insb
push
push
insl
or
aam
stos
xlat
push
mov
std
dec
lods
or
and
jne
sti
push
xor
dec
dec
xchg
pop
adc
mov
push
hlt
mov
adc
sub
mov
sar
das
or
fldt
in
ss
mov
sub
pop
aaa
ret
fcomps
jno
push
stc
fdivl
xor
inc
sbb
cmp
fs
into
adc
xor
inc
sub
loopne
lcall
add
adc
lret
fimull
mov
movl
call
inc
popa
mov
imul
mov
jge
pushw
loopne
xchg
or
jle
in
scas
femms
pop
jnp
fwait
sub
mov
fisttpll
mov
jg
adc
or
pop
repnz
insl
dec
out
jno
arpl
cmp
push
pop
clc
jg
xchg
mov
or
xchg
jno
sarb
call
push
push
cli
gs
or
mov
in
out
push
xchg
dec
repz
outsl
add
xchg
inc
and
sbb
pop
xchg
das
jno
dec
lahf
nop
jo
jno
mov
es
mov
push
scas
fmull
iret
pop
inc
push
ss
or
aaa
sbbb
cli
inc
ret
sahf
xchg
pop
mov
sbb
imul
jbe
xchg
insb
mov
mov
xlat
pop
cmpsb
sbb
loopne
jbe
popf
xchg
cli
jne
xchg
push
das
cmp
lods
push
or
cmpb
inc
jb
popa
arpl
sub
shrl
add
rcrb
dec
sahf
fstp
jae
sbb
pop
sub
jbe
pop
ret
adc
jmp
push
orl
mov
jecxz
mov
sub
mov
shr
decb
orl
jl
loopne
push
push
pop
scas
mov
pop
cmp
fcompl
xchg
pop
cwtl
clc
mov
jl
mov
adc
push
sahf
and
fildll
or
fdivrs
xchg
lea
xor
jmp
repz
dec
popf
jns
pop
test
mov
sub
xchg
scas
pop
stos
sub
xor
ljmp
jge
jmp
das
lret
lahf
jae
push
scas
js,pt
loop
pcmpgtb
inc
popf
inc
gs
mov
or
xchg
pop
sarb
lcall
pop
add
ret
sbb
pop
add
add
and
mov
xchg
xor
jle
cmp
fdivrs
inc
push
sub
adc
andb
push
lods
lret
out
add
ss
std
int3
sbb
pop
push
dec
mov
jae
cli
shll
lods
mov
add
into
cltd
imull
cmp
mov
jne
imul
cmp
xchg
in
ljmp
xor
pop
inc
out
xchg
adc
fs
mov
insl
dec
loop
jge
rclb
cmp
xor
cmp
ret
sbb
aaa
push
arpl
add
add
rep
stos
scas
jp
jns
je
cmp
addr16
daa
cmpsl
in
in
xchg
cmp
cmp
and
pop
and
fmuls
cmp
adcb
mov
aam
lods
add
fidivs
insl
or
jbe
pop
inc
and
cwtl
stos
rcrl
jg
inc
and
mov
pop
int3
inc
fisubrs
ss
xor
mov
add
outsl
push
dec
sub
call
mov
shl
bound
orl
lods
movsb
mov
dec
dec
jo
scas
test
add
inc
cmpsl
mov
pop
cmp
in
inc
shll
loop
hlt
iret
xlat
push
mov
or
enter
ficompl
push
pop
add
hlt
inc
orl
repz
xchg
hlt
or
dec
cmc
movl
mov
stos
out
sbb
fcoms
mov
dec
sub
add
push
and
inc
mov
mov
inc
out
test
xor
jmp
xchg
iret
or
or
fs
adc
fwait
xchg
out
mov
shrl
nop
mov
mov
push
sbb
or
push
rcrl
mov
pop
mov
mov
xchg
test
mov
push
rorb
gs
adc
aam
pop
mov
push
addr16
push
fmulp
lods
mov
js
jnp
out
mov
fs
jo
sbb
sub
sti
mov
xchg
cmp
inc
icebp
xorb
in
lahf
arpl
in
movsl
xchg
out
inc
jae
xchg
loop
mov
and
jle
push
sbbl
mov
hlt
jp
or
les
aas
mov
es
out
negb
nop
pusha
inc
jne
std
mov
insb
loop
fcmovbe
fwait
pushf
inc
call
cmpsb
aam
dec
pusha
stc
shll
cmp
je
cld
xlat
test
jb
push
jg
pop
dec
lods
shrb
push
clc
sti
mov
inc
roll
cmp
mov
lock
dec
mov
aaa
push
inc
mov
pop
adc
clc
xor
pop
mov
test
xor
out
mov
cmp
xor
sti
je
mov
lcall
sbb
lds
fsubl
mov
or
loopne
lahf
imul
inc
lock
sub
lock
adc
sub
subb
jb
sarb
cwtl
push
popa
fiaddl
push
scas
sbb
lock
cmp
add
inc
ja
inc
mov
outsl
in
dec
mov
sbb
or
dec
pop
pop
lods
loopne
cmpsb
mov
out
int
mov
jmp
andb
cmpsb
imul
js
adc
mov
sbb
mov
and
popa
dec
adc
mov
adc
or
fcoms
imul
ljmp
es
popa
iret
insb
push
stc
dec
inc
stos
sbbb
push
pop
inc
cld
or
mov
lahf
sub
adc
lea
lret
cli
dec
rorl
loopne
jecxz
adc
lds
ret
dec
loop
push
pushf
incb
fiadds
xlat
fisttpll
jae
sti
and
add
ret
fcmovnbe
pop
shl
into
outsl
mov
cmp
sub
jbe
sbb
imul
xor
sti
add
inc
outsl
sub
and
lahf
pusha
arpl
and
jo
dec
mov
and
in
mov
or
clc
roll
xchg
add
mov
mov
cmp
or
pop
daa
dec
dec
dec
cmp
cwtl
jo
pushfw
push
iret
rep
xchg
mov
adc
dec
outsl
adc
push
pop
xor
or
int
rcrl
push
add
ficoml
btrl
jo
daa
je
mov
test
filds
fwait
sbb
or
or
xchg
fstps
jle
std
dec
sti
sub
mov
movsb
std
dec
into
cmp
mov
sub
stos
inc
pop
shlb
mov
mov
xor
mov
mov
xor
loope
vmread
fstpt
in
pop
popf
pop
pop
adc
xor
or
pop
mov
aam
sub
xorl
or
movsb
cmp
mov
sbb
decl
out
push
ljmp
out
rcrl
jae
mov
stc
cmp
mov
test
mov
jns
lods
cwtl
lods
cmp
cmp
mov
jmp
cmc
mov
xlat
xchg
aad
andl
cmc
fdivs
psubusb
jl
fchs
lock
arpl
mov
ret
sti
or
loopne
jg
cmp
mov
sub
jae
std
sbb
cld
dec
mov
movsl
pop
sub
fists
test
mov
lods
or
jae
aaa
ret
out
test
sti
ds
adc
test
push
push
into
stos
sub
and
out
sti
sub
push
out
inc
lahf
cld
test
sbb
sahf
mov
jno
mov
dec
test
mov
cs
aas
test
in
push
xor
or
mov
mov
test
insl
xchg
dec
or
push
and
lcall
enter
lds
jp
test
mov
pop
push
pmullw
xchg
mov
call
nop
adc
aad
je
xchg
jo
lods
adc
fmul
cmpsl
push
mov
lcall
iret
ja
fucomp
sub
addr16
cmc
dec
add
loope
out
nop
dec
jge
cmp
xlat
xchg
ret
and
lock
call
push
inc
pop
sahf
push
mov
mov
enter
sub
ss
and
mov
outsl
mov
cmp
pop
mov
iret
jg
loope
mov
ret
lret
dec
sti
ss
inc
dec
sti
loop
stos
pop
inc
icebp
push
mov
jns
mov
dec
or
leave
scas
out
mov
sti
lret
push
fcmovbe
pop
or
adc
call
push
mov
sub
mov
stos
popa
xchg
ss
xor
stc
mov
pop
add
mov
cmp
pop
pop
xchg
mov
dec
test
mov
adc
int
cmp
inc
das
addl
mov
mov
xchg
rcll
cld
mov
out
cmpsl
jl
inc
adcl
or
stos
scas
aas
out
and
mov
add
fsubl
xor
adc
rolb
sub
rcll
inc
cmp
les
enter
loopne
sbb
aaa
in
and
inc
cmc
int3
mov
jno
push
std
in
jo
sub
lods
sahf
mov
das
sbb
dec
mov
adc
pop
push
sub
rorb
lods
xor
ret
test
push
das
inc
lods
push
push
push
mov
test
imull
jp
mov
repnz
arpl
jge
inc
sbb
cmpb
sub
clc
lock
mov
add
mov
lds
mov
pop
push
mov
in
add
movsb
pop
pop
mov
pop
std
inc
bound
pop
jno
repnz
sbb
or
cwtl
xor
icebp
ret
ds
cmp
dec
pop
mov
mov
jge
je
lcall
xlat
jb
xchg
or
cld
gs
push
inc
fs
daa
inc
jbe
ljmp
fdivs
xlat
imul
sub
insb
ficompl
stc
dec
mov
sbb
ja
repz
mov
pop
dec
loop
and
fcom
stos
sarb
jle
jb
pop
pop
mov
mov
and
xor
jnp
mov
add
ds
cmp
pop
lods
loope
xor
ror
out
bound
mov
adc
addr16
int3
addl
cmpsl
adc
xorb
xor
scas
loope
mov
push
aas
pop
push
add
cmp
mov
std
mov
outsb
sub
xor
ret
jmp
ret
ficoml
pop
scas
add
and
dec
adc
aam
or
addb
insb
test
xor
xor
mov
fldt
or
adc
ss
pop
stos
jae
xchg
iret
cmpsl
mov
gs
test
scas
mov
mov
jge
enter
into
xor
mov
dec
xor
and
sub
jne
xchg
push
jae
or
test
jecxz
shlb
ja,pn
push
ds
mul
inc
repz
jge
int
push
and
jae
inc
pop
xchg
lret
int
jmp
mov
jmp
cmp
mov
xchg
sbb
push
daa
xor
fisttpll
sahf
ljmp
jg
or
popf
imul
mov
outsl
adc
dec
ficompl
out
jo
gs
dec
sbb
addr16
sbb
dec
pop
inc
mov
xchg
xchg
inc
inc
cmp
testb
xor
fbstp
adc
in
pop
jo
push
int3
jb
test
push
sbb
out
xchg
icebp
sbb
or
mov
mov
sub
mov
inc
inc
outsl
push
repnz
or
jo
repz
aad
mov
and
scas
data16
xchg
push
dec
jg
pop
inc
fidivl
push
pop
jecxz
je
into
fists
out
add
das
shll
sub
pop
xor
and
pushf
out
push
lods
sub
les
ret
mov
xchg
out
push
fndisi(8087
inc
jg
sub
and
fdivp
pop
adc
dec
xchg
push
sbb
adc
jmp
aad
or
out
mov
rolb
test
pusha
stc
dec
gs
lds
jno
push
xchg
pop
sbb
or
movsb
jmp
add
pusha
cld
movsl
test
adc
in
hlt
test
jge
jnp
inc
stos
sub
stc
sub
jecxz
call
xchg
or
subb
pop
pop
jae
leave
jne
jle
rcll
mov
mov
repnz
inc
ret
out
push
jne
push
mov
pop
cmpsl
out
stos
std
cmp
aam
out
sub
pushl
pop
xor
jo
jg
mov
aam
ret
shlb
fnstcw
sub
and
sub
adc
cwtl
jmp
stc
mov
enter
pop
push
mov
jge
fsubrs
push
cli
das
in
jg
mov
in
pop
out
movsb
add
mov
sub
xchg
inc
push
not
push
mov
dec
mov
aad
bound
dec
hlt
cmp
xor
outsb
aad
adc
das
imul
out
or
dec
lods
jmp
pushf
popf
leave
test
hlt
mov
dec
xchg
clc
sub
dec
xchg
pop
xchg
leave
cmp
fadds
enter
xchg
add
icebp
push
inc
out
jl
xorl
jnp
xchg
jbe
mov
dec
fwait
jae
rorl
test
jo
cmp
pop
fdivr
sub
loopne
aam
fcom
fwait
mov
cmp
shl
mov
xor
or
shr
or
push
or
mov
and
outsb
cmp
mov
sti
fstl
pop
shll
or
inc
cmp
jecxz
popf
roll
loope
bswap
jg
dec
xchg
inc
sub
push
jmp
test
mov
and
mov
mov
inc
in
pop
mov
pop
mov
testl
mov
ja
xor
mov
out
mov
add
xchg
sub
cmp
sbb
inc
cmpsb
push
add
mov
push
out
iret
jg
push
outsl
mov
out
gs
jmp
pop
xchg
daa
mov
adc
es
scas
int3
scas
aas
mov
push
rolb
scas
test
mov
jne
rcr
insb
shlb
scas
sub
sub
in
adc
sub
cmp
mov
inc
lds
je
sar
push
push
and
mov
push
jo
push
daa
jg
stc
mov
fbstp
or
sbb
popf
mov
jg
sub
repz
movsb
imul
cmp
inc
jb
iret
cmpsl
inc
push
fisubrs
in
mov
jne
fiadds
ret
fdivrs
push
iret
add
xchg
cli
das
mov
xor
inc
je
xlat
movsb
insl
clts
adc
andl
xor
mov
es
pop
inc
xchg
data16
clc
vmptrld
repnz
pushf
dec
sbb
stc
or
sti
cmp
or
clc
mov
inc
inc
bound
and
dec
mov
stos
rcl
add
inc
or
xchg
cmp
sbb
test
mov
xchg
cld
stos
pop
sar
mov
dec
outsl
mov
sbb
cmp
pop
inc
mov
or
inc
cmpl
push
xor
repnz
jg
out
or
scas
cmpl
mov
jnp
test
jp
lods
jp
movsl
xchg
add
push
dec
pop
popf
push
fwait
xor
xor
sbb
and
sub
or
repz
fdivrs
push
arpl
mov
pushf
imul
shrb
lods
jmp
pop
ficoml
push
divb
sub
push
sbb
cli
lcall
add
les
cmp
mov
out
jae
cltd
pop
and
cmp
sahf
jle
cmc
pop
or
in
repnz
pop
adc
push
pusha
in
sbb
pop
adc
jbe
out
std
mov
fwait
jae
in
stc
inc
fistpll
gs
jbe
test
mov
notb
cltd
pop
and
mov
faddl
jae
pusha
call
insl
lahf
les
mov
stos
shll
sti
mov
popf
push
xor
pop
push
stos
in
inc
enter
cld
ret
mov
imul
lahf
mov
mov
nop
in
or
repnz
pusha
pop
mov
xlat
fs
ss
mov
outsl
jg
sub
push
push
adc
push
idivl
sti
inc
sbb
add
in
test
or
and
pop
jge
xchg
aam
mov
cmp
loopne
sbb
scas
or
out
jl
std
pop
imul
lods
fidivrs
popf
call
xchg
adc
or
lcall
call
in
or
mov
std
aad
inc
or
add
push
fldenv
sub
inc
mov
jle
mov
add
arpl
cmpl
test
add
sub
mov
inc
xlat
je
jl
fiadds
pop
push
idivl
cmc
orb
adc
add
rorb
inc
fdivrl
push
jae
xor
inc
jg
in
sub
cmp
outsl
jl
xor
int3
mov
mov
or
jns
fwait
mov
and
mov
cli
cmp
pop
js
cmpsl
or
inc
jg
gs
xor
cmp
mov
outsb
push
push
jbe
jp
cmp
push
popl
cltd
jnp
mov
into
outsl
inc
cwtl
addr16
outsb
mov
pop
or
cs
out
cwtl
lret
lds
jbe
xchg
pop
fidivl
jnp
scas
out
jns
sbb
push
inc
and
aas
dec
or
cmpb
xor
xor
xchg
repz
inc
sub
mov
cwtl
adc
fwait
repz
clc
fistl
inc
loopne
cmp
xchg
sbb
sbb
jbe
and
scas
fs
test
sbb
lods
add
jo
ret
inc
ja
cmpb
cld
fistps
xchg
adc
mull
sub
data16
sub
adc
loopne
insw
outsb
stc
sbb
sub
movsb
xor
and
and
rclb
inc
cli
repnz
xchg
mov
mov
cwtl
int
inc
mov
fwait
lret
cmp
js
fidivl
icebp
push
mov
xor
stc
addr16
dec
lods
push
loopne
xorb
add
arpl
aaa
out
xchg
daa
test
mov
loop
loope
rorb
int
shlb
adc
andl
sub
dec
or
shr
pop
dec
push
in
xor
xchg
jecxz
xor
xchg
xchg
sub
sbb
cli
push
aaa
add
sub
scas
sbb
xchg
in
jno
mov
lcall
outsl
sub
cmp
out
pop
push
rcrl
pop
mov
je
mov
adc
jb
mov
arpl
lods
inc
test
sbb
xor
adc
dec
mov
scas
mov
cwtl
cltd
sub
fdivr
out
dec
scas
out
int
out
jmp
jb
jmp
repz
int3
push
pop
pop
in
loope
test
repz
lods
scas
testl
push
loopne
mov
pop
pop
sub
lock
cmpl
cld
sbb
mov
mov
mov
scas
adc
pop
std
mov
cli
cmc
mov
cmovl
jo
push
mov
or
jb
sub
pop
mov
jbe
sbb
fnstsw
mov
cmp
adc
mov
jo
and
xor
push
outsl
pusha
sahf
arpl
mov
push
cmpsl
cs
data16
push
imul
mov
test
out
inc
sub
jle
wrmsr
mov
mov
imul
out
dec
aaa
inc
jmp
push
push
pop
inc
mov
pop
xchg
jne
in
lds
or
mov
int3
sub
movsb
insb
int
imul
mov
aas
stc
dec
ror
and
out
mov
addr16
insl
frstor
test
pop
fiaddl
sti
test
push
lahf
sarl
imull
das
insl
mov
in
lods
in
popa
push
inc
mov
repz
fistps
int3
pop
sub
inc
cltd
sbb
stc
jnp
pop
mov
cmpsb
jo
xchg
shl
ret
push
adc
lods
out
movsl
mov
pusha
lcall
and
subl
movsl
adc
cmpsb
stos
fidivs
mov
inc
pmaxsw
std
cmp
cmpsl
mov
pop
cmp
out
sti
xchg
popf
pop
loopne
inc
hlt
adc
scas
movsb
jbe
dec
mov
mov
jnp
bound
dec
shr
testb
out
daa
pop
fst
rol
cmpsb
pop
rcr
rcr
adc
test
cltd
fwait
andl
and
sbb
data16
rclb
or
push
push
je
loop
sbb
xor
addr16
push
and
pop
jb
pop
int3
aaa
ds
iret
inc
add
enter
cs
jo
sti
cmp
mov
rolb
aas
mov
into
dec
aas
jb
inc
push
sub
aad
call
scas
mov
push
mov
lods
mov
fdivrs
mov
addr16
xchg
hlt
sub
dec
lcall
int3
test
cmp
mov
pop
push
or
or
sbb
insl
or
dec
xor
es
inc
push
lret
push
in
addr16
xchg
add
fbstp
mov
data16
insl
sbb
mov
adc
ds
xlat
jp
sbb
adc
or
mov
pushf
insb
icebp
sub
dec
loop
dec
mov
out
mov
pop
lret
faddl
fildl
or
push
inc
das
loope
jae
mov
scas
sub
mov
aad
pxor
ds
pop
adc
or
test
repz
lods
jo
aad
push
and
xor
push
stos
push
push
fstps
or
sub
stos
push
mov
or
out
movsb
lret
jo
ljmp
loop
ja
xchg
std
fwait
xchg
add
xlat
lahf
stc
cmp
push
std
addb
pop
jb
and
xor
push
outsb
xchg
add
clc
mov
push
jmp
stc
stc
cmp
jg
or
and
arpl
into
sub
scas
loopne
in
ret
cltd
mov
mov
in
jb
jae
and
mov
inc
fistl
pushf
pop
addl
call
addl
jo
lret
jle
sub
movsl
cmp
inc
jmp
push
repnz
cli
fidivrs
adc
xchg
pop
das
sbb
test
movsb
mov
repz
xor
cld
mov
lret
and
push
outsl
xchg
rorb
xor
mov
dec
xor
lahf
xchg
xor
mov
clc
adc
js
mov
ds
xchg
inc
cmp
mov
mov
movb
adc
or
mov
out
xchg
mov
lods
push
add
ret
sbb
and
fwait
test
popl
mov
insb
inc
les
push
rclb
cmpsb
xchg
mov
ja
push
faddp
bnd
adc
pushf
stos
pop
add
push
lahf
aaa
out
ds
sub
mov
lret
mov
adc
fsubrl
adc
mov
iret
pusha
icebp
mov
push
and
out
fwait
cmp
frstor
daa
or
and
arpl
inc
popf
ret
cmp
sub
out
mov
mov
shll
outsl
adc
dec
cli
jp
ljmp
add
lods
in
mov
inc
adc
sbb
lods
jge
add
jle
inc
cmc
fildl
cs
repnz
imul
insb
inc
popa
pop
push
sub
lods
xor
movsb
pop
mov
jno
jae
push
add
js
cmp
add
xchg
jl
mov
sub
sbb
jecxz
out
lret
jp
repz
fs
adc
hlt
scas
popl
sub
test
and
xorb
fisttps
sbb
mov
aam
mov
sbb
stc
fisubs
sub
xor
das
and
pop
ret
jne
fcompl
mov
shll
aad
shlb
cmp
scas
sbb
xor
xor
dec
popf
repz
inc
xor
and
hlt
xor
dec
ret
jge
cltd
adc
ret
inc
jae
iret
sbb
cmp
sbb
add
stos
and
bound
inc
mov
mov
mov
shlb
or
dec
pop
lds
addl
outsb
dec
lret
sbb
cld
mov
shll
pop
add
cli
loop
stos
fcmovb
xor
pusha
pop
xor
lock
mov
lds
rcll
testb
xlat
cmpsl
iret
sbb
or
or
inc
jb
sub
arpl
mov
ljmp
inc
or
out
leave
lds
inc
sub
mov
mov
fldt
in
ret
fmull
outsl
and
pop
js
mov
cmp
cmp
ret
dec
nop
cmp
out
pop
pusha
inc
ds
jnp
sbb
add
jl
or
pop
call
fisubrl
and
push
mov
mov
bound
cwtl
ret
jne
sar
mov
dec
fbld
push
dec
pusha
push
xor
imul
inc
or
pop
jle
xlat
pop
dec
push
pop
cmp
cwtl
cmp
pop
xor
push
shufps
jae
test
add
mov
xchg
into
outsl
cmpsl
adc
ljmpw
xchg
sbb
push
imul
fldt
sub
scas
or
popa
inc
jge
movsl
xor
xor
sbbl
roll
sbb
not
out
push
or
out
adc
loope
clc
jo
rcr
cmp
or
fs
sub
inc
inc
shlb
jnp
hlt
mov
xchg
arpl
dec
sub
sbb
cmpsl
outsb
lods
sub
das
push
xchg
add
xor
shr
sahf
lds
je
push
inc
mov
pop
sbb
pop
xor
jmp
lods
jecxz
enter
push
ljmp
stos
sub
xchg
cmpsb
rol
push
icebp
outsb
xor
pop
test
sub
cmc
iret
cmp
add
xchg
add
mov
add
popa
and
int
cmp
clc
add
fbld
jbe
movsb
fisubrl
shlb
push
nop
mov
bound
sub
loop
pop
in
test
js
sbb
xor
pop
lods
adc
mov
pushf
pop
push
popa
mov
sbb
xor
call
cmp
dec
xchg
push
not
pop
jge
push
cmp
loopne
jbe
out
push
and
stos
lret
fsts
mov
outsl
les
stos
sti
filds
or
push
adc
mov
repnz
sub
lds
push
jge
mov
imul
add
jmp
out
or
out
aaa
inc
or
jae
popa
test
or
sub
xchg
mov
sub
cmp
arpl
aas
push
cmpsl
sub
cmp
add
mov
sarb
call
test
mov
mov
add
enter
int
cmp
push
bound
and
add
in
or
gs
pop
shll
movsl
aas
rcrl
jo
aad
int
add
jge
xor
add
iret
jle
push
push
xor
sub
fnstenv
imul
xchg
ret
pop
sbb
and
cmp
out
bound
lock
mov
mov
add
popa
pushf
xchg
ds
aad
inc
iret
loope
inc
sub
push
inc
sbb
addr16
insl
lods
scas
lds
xorl
xchg
in
jmp
or
jno
push
mov
stc
pop
adc
sub
ret
hlt
js
loope
scas
and
mov
adc
jge
movb
stos
dec
mov
test
popf
cmp
xchg
push
das
enter
dec
das
xor
pop
sub
cwtl
jne
xor
adc
lea
leave
pop
cltd
add
lret
std
mov
mov
mov
push
sub
xlat
cwtl
mov
mov
or
dec
aas
arpl
mov
arpl
vmwrite
in
jle
test
jmp
pop
mov
divl
jmp
fstpt
xchg
aaa
mov
int3
sub
adc
testl
inc
fcomip
sbb
dec
mov
clc
iret
dec
add
popf
sbb
cmp
push
and
inc
jbe
idivb
cmpsb
xchg
aas
aad
fcmovnb
inc
push
std
movsl
jbe
lods
pop
push
repnz
cmc
dec
cltd
jmp
roll
or
test
jnp
lods
imul
je
int3
enter
loope
jl
mov
cmp
in
mov
lret
pop
xchg
div
iret
push
sub
loopne
dec
adc
stos
xchg
inc
fwait
adc
sub
xchg
cli
pop
sub
pop
enter
bswap
fdivrs
hlt
mov
jp
je
cmc
js
enter
lock
in
dec
hlt
sarl
loope
in
jl
xchg
push
pop
mov
das
mov
mov
xor
mov
fbld
outsb
mov
adc
or
xchg
pushf
das
mov
stc
jecxz
out
pusha
mov
inc
or
gs
popa
test
in
cmc
jp
lds
mov
mov
push
das
lods
in
jbe
icebp
inc
pop
dec
loope
fisubs
fwait
cs
adc
fcomps
xor
xchg
mov
mov
xchg
imul
je
push
leave
pop
jmp
mov
xchg
cs
ret
int
xlat
lahf
mov
in
mov
push
fs
jns
xchg
push
sub
sbb
aas
movsb
adc
shrl
push
push
sbb
mov
xor
mov
popa
test
mov
add
inc
jg
icebp
xchg
ffreep
xchg
jno
rorb
xor
push
mov
inc
fisttps
scas
ljmp
adc
push
out
cmc
push
and
pop
std
sub
shlb
ja
std
in
daa
adc
pop
mov
push
movsl
or
pop
mov
cld
or
jge
lret
daa
or
int3
ficompl
and
ror
jmp
or
xchg
jnp
mov
outsl
cmp
mov
xor
ficomps
sbb
mov
fcmovnu
sub
scas
in
aam
mov
push
adc
pop
jg
adc
cmp
fstps
jb
outsb
jb
inc
out
addr16
ret
lret
in
dec
pushf
mov
jo
bnd
repnz
jo
jo
sub
mov
cmpsl
ret
imul
cmp
push
lret
push
pop
fiadds
out
scas
mov
xor
add
sub
mov
mov
outsl
cmp
jo
mov
mov
sti
jnp
outsl
imulb
mov
dec
outsb
mov
cld
sbb
cmc
add
mov
in
shrl
cmpsl
cs
ret
shll
cmp
lock
xor
dec
icebp
mov
ret
flds
dec
jae
mov
aam
pop
mov
ds
lods
mov
bound
push
outsl
rolb
nop
stos
or
push
jae
cmp
rcr
push
into
and
and
jge
popl
add
mov
sbb
scas
xor
xor
or
inc
cmpsb
shrb
scas
mov
pop
fdivrs
das
in
cli
cld
je
repz
inc
rorb
imul
loopne
aaa
or
lock
xchg
xchg
bnd
push
call
sub
sbb
stc
jmp
sub
mov
mov
xchg
sbb
clc
adc
sahf
mov
bound
loop
push
push
test
push
rcll
inc
jl
mov
and
pop
imul
cld
leave
repnz
gs
rcrl
adc
adc
mov
xchg
mov
add
int3
or
jecxz
nop
xor
int
xlat
xchg
xchg
xchg
xor
xlat
mov
inc
in
std
lods
mov
add
adc
cmc
aam
arpl
xchg
xchg
inc
push
xchg
add
or
std
inc
sub
daa
xchg
pop
jb
rolb
fnstcw
jbe
pop
fstpt
cmp
negl
and
shl
aad
lods
dec
lahf
push
aaa
int3
push
sbb
cmpsl
mov
mov
or
in
sbb
lock
push
sub
arpl
cmp
jle
call
xor
mov
dec
clc
out
push
add
push
xchg
inc
xchg
lret
sub
aam
fsts
les
pop
xchg
and
xchg
ds
inc
jne
mov
rcll
jns
ret
inc
inc
scas
mov
test
and
es
sbb
jmp
dec
ds
mov
jl
fmull
mov
jbe
xchg
rcrl
mov
add
stc
inc
xchg
jb
aam
in
lods
lcall
in
faddl
cli
dec
push
and
or
aas
loope
lds
and
lret
out
or
mov
add
dec
jle
imul
cltd
push
push
xchg
loop
nop
mov
das
test
push
mov
xlat
std
aam
inc
mov
dec
xchg
and
cltd
mov
jae
xor
xor
insb
out
inc
mov
pop
add
ss
mov
sub
mov
lock
movb
or
loope
out
js
mov
es
out
cltd
push
mov
and
inc
ljmp
and
push
inc
sub
test
mov
shrb
fwait
mov
cli
push
jmp
orl
dec
insl
xchg
lret
cmp
mov
jae
mov
andl
in
xchg
add
fildll
ja
shrl
push
cs
inc
or
test
loope
add
dec
stc
cmp
push
jmp
es
inc
into
mov
inc
adc
inc
pop
cmpsb
and
out
test
dec
inc
scas
data16
inc
pop
jns
mov
mov
rcrb
call
js
in
mov
push
shl
addr16
sub
repz
flds
adc
add
and
aad
movsb
jne
adc
sbb
or
iret
idiv
scas
scas
pusha
mov
aaa
fcomps
or
pop
lret
xor
jg
push
ficompl
pop
int3
fwait
cli
pop
jecxz
jo
adc
and
jmp
jge
arpl
pop
sar
imul
mov
fs
cli
shll
js
cmp
fldenv
or
lret
jno
sbb
pop
push
fdivrs
xchg
mov
clc
ja
test
sahf
cmc
pop
outsb
int
cmpsb
push
push
idivb
ss
and
lds
js
dec
movsl
aam
arpl
imul
or
insb
mov
fidivrs
ret
push
aad
sub
xchg
push
stos
subl
popf
mov
pop
push
sbb
fucom
mov
repz
andb
pushf
or
push
jge
scas
pop
cwtl
movb
popa
add
mov
or
and
adc
and
in
push
out
adc
loopne
sbb
push
insl
pop
mov
push
mov
pop
inc
mov
and
testb
test
aaa
mov
bound
xor
mov
int
es
push
push
insl
inc
lods
lds
ss
loopne
inc
and
imul
jb
div
and
ds
ret
ret
sub
cmp
loopne
pop
push
scas
mov
sub
scas
cld
push
mov
mov
cmp
adc
inc
pop
rolb
pop
mov
pmuludq
ret
push
popa
loop
fimull
push
lods
jo
inc
loopne
xlat
out
jb
xchg
cs
or
test
inc
imul
scas
aaa
xchg
test
pop
pop
pop
mov
dec
sbb
pop
pop
in
or
push
cmpsl
loopne
lods
adc
fisttpll
sub
jl
lret
rcll
xchg
mov
pop
pop
adc
fcompl
mov
into
es
sbb
dec
xor
pop
fiaddl
dec
pushf
cmp
push
add
mov
rol
lcall
jo
lods
mov
add
cltd
stc
jle
aad
jp
sub
mov
stc
std
jge
mov
mov
out
xchg
fcomps
ficompl
sbb
out
popa
stos
add
fists
jl
stos
push
push
jle
cmpsb
aas
xor
mov
fidivrl
xor
jns
bound
and
mov
inc
outsl
cli
pop
jle
into
xchg
add
lcall
fstpt
ja
fsubrl
into
or
xor
lock
jg
call
mov
cmp
mov
sbb
fstl
pop
sti
and
jecxz
lods
movsl
jecxz
push
xchg
incl
repnz
es
add
notb
jl
sti
lahf
data16
fmulp
jne
sbb
mov
outsl
in
pushf
xchg
lods
push
fwait
imull
jecxz
pop
and
mov
mov
jge
push
push
pop
fs
xor
pushf
sbb
push
sub
push
mov
loopne
mov
loopne
cmp
inc
push
adc
pand
cli
and
rcl
lods
dec
sbb
cli
push
outsl
into
into
subl
out
and
inc
sub
add
push
pop
add
negl
pop
mov
or
jne
xchg
jne
mov
scas
arpl
daa
mov
popf
and
scas
les
jmp
push
fimuls
cmp
jns
into
push
mov
pop
mov
xchg
into
sbb
push
in
hlt
xor
and
sbb
inc
jb
pop
mov
cmp
sahf
scas
xor
and
jecxz
shlb
push
insb
out
lds
adc
sub
mov
stos
adc
inc
xorl
xor
cli
xchg
push
xor
in
decb
push
sbb
and
nop
mov
mov
mov
or
adc
push
push
add
adc
mov
loopne
mov
xchg
mov
cmp
loopne
sub
push
aam
gs
mov
outsl
repz
mov
and
sub
imul
cmp
adc
daa
lds
pop
sub
pusha
xor
ret
adcb
push
lcall
test
in
cli
xchg
xor
ret
outsb
dec
dec
in
int
ljmp
sbb
mov
addl
or
mov
nop
mov
mov
mov
out
loopne
xchg
xor
mov
aas
jle
out
lcall
movsl
es
arpl
ja
in
pop
add
sarb
sahf
jp
mov
inc
in
push
cmpsl
or
aad
insl
dec
jmp
shlb
cmp
gs
mov
cmp
mov
mov
aad
inc
dec
inc
sub
std
fxch
push
cmp
xchg
cwtl
or
loope
cmp
pushf
scas
call
jb
es
dec
loopne
pop
scas
inc
ret
xor
xor
xchg
faddl
hlt
push
rolb
sbb
int
test
out
les
xor
push
js
inc
mov
or
dec
adc
cmp
fdivrl
adc
mov
and
xor
in
xor
jmp
rdpmc
andl
das
lahf
imul
push
fsubs
jno
xchg
addr16
in
setae
mov
dec
push
sbbb
push
mov
es
pop
and
out
stos
es
mov
aam
jp
pop
push
xchg
push
mov
xchg
test
in
outsb
fnstcw
or
mov
jl
inc
push
scas
mov
mov
cwtl
rclb
outsl
add
cmpl
in
add
out
push
mov
int3
add
movsb
or
cmp
sbb
push
ljmp
daa
mov
aas
jo
imul
cmp
push
mov
jae
push
mov
xlat
xchg
mov
std
int3
inc
icebp
mov
imul
lret
sbb
mov
pop
in
pop
nop
inc
mov
cs
cwtl
shl
mov
sub
ret
push
sbb
loopne
test
mov
add
in
xor
push
or
pop
jle
dec
ret
repnz
int3
dec
push
inc
mov
cltd
add
push
repz
mov
ret
mov
push
lods
dec
fisttpll
adc
rol
mov
out
das
and
cli
ds
mov
rol
in
sub
in
cld
movb
jno
lods
adc
clc
aas
shrl
push
xorl
ds
mov
add
loope
adcl
dec
pop
pushf
xor
mov
lret
cmp
mov
test
in
jmp
push
push
clc
bound
insl
stc
jne
scas
mov
lods
mov
pop
push
xchg
lret
or
or
jbe
pop
cmc
push
and
cmp
mov
mov
loop
mov
aaa
lret
cld
push
andb
movsb
insl
adcb
pop
imul
test
mov
rcll
mov
pop
jo
add
cmpsb
aaa
shr
mov
stc
mov
rorl
lret
mov
and
push
pop
xor
or
mov
loope
or
pop
fistpl
cmc
sub
sti
adc
in
cmp
int
xchg
adc
jae
cmp
cmp
sahf
cmp
jge
mov
xor
repz
int3
dec
xchg
jbe
in
hlt
mov
jne
pop
ja
cmpsl
fidivl
mov
adc
or
jle
jne
xor
jno
stc
pop
std
nop
sbb
jmp
shr
push
dec
repnz
int3
lods
xor
adc
inc
popa
arpl
lods
push
enter
mov
aad
iret
sub
loope
pop
and
mov
cltd
in
add
sub
nop
test
add
add
push
outsl
call
das
cld
cld
cmpsb
xor
sti
fidivrs
cmp
test
xchg
fcomps
filds
dec
sub
imul
add
push
lea
arpl
jb
mov
inc
mov
cltd
int
xor
aam
or
negb
fs
jl
inc
sub
rorl
iret
mov
cltd
push
push
push
lods
adc
dec
imul
push
das
rclb
rcrl
subb
sbb
aaa
sbb
push
inc
dec
jns
jmp
xlat
mov
test
pop
mov
rolb
push
mov
lahf
enter
insl
lahf
cmp
mov
loopne
mov
adc
cmp
movsb
loope
rcll
xchg
push
orb
inc
mov
push
jge,pn
and
cli
push
mov
mov
pop
and
sub
adc
lock
fwait
insb
mov
enter
jno
scas
dec
and
stos
and
xor
stos
dec
cmp
pop
out
push
fnstenv
scas
in
add
mov
cmp
jmp
or
fcoml
push
sahf
or
jb
fistpl
mov
xor
xor
movsl
or
mov
das
xlat
in
lret
mov
xchg
out
movsl
std
xchg
jl
sub
xchg
mov
into
jmp
shr
lcall
sub
stos
jg
icebp
mov
cmp
popa
sub
xchg
subb
mov
jo
ret
cmp
jo
push
out
xchg
dec
add
dec
es
lock
xchg
adc
dec
mov
pop
jge
pop
dec
xor
faddl
add
mov
add
cmpsl
popa
jp
push
fst
test
lock
xor
mov
movsl
inc
xchg
and
mov
rcl
xchg
jnp
setb
aas
dec
mov
adc
xchg
nop
cs
inc
pop
int
cmp
cli
sub
xlat
in
sbb
daa
mov
or
iret
test
dec
inc
mov
mov
pop
mov
outsb
dec
push
adc
push
je
mov
cltd
iret
inc
adc
int
sub
cmp
sbb
sub
lock
push
add
pop
pushf
enter
sbb
mov
jb
mov
dec
mov
dec
mul
inc
sbb
outsl
arpl
lahf
test
rclb
push
mov
in
pop
and
jle
sbbl
sbb
add
dec
sarl
std
inc
stc
ja
lcall
mov
fmulp
xchg
inc
addr16
lcall
push
cmp
insl
and
in
pop
das
ret
mov
xchg
dec
push
adc
dec
mov
and
rclb
out
lahf
xchg
cmp
scas
fsubs
mov
mov
or
sbbl
sbb
adc
xor
inc
adc
xor
cmp
repnz
lret
arpl
push
sti
loope
out
dec
test
movsb
sub
and
jne
sub
pop
jmp
jge
or
lock
arpl
mov
and
sti
cltd
or
xchg
fsubs
test
xchg
sahf
imul
xchg
mov
dec
mov
xchg
dec
nop
outsl
sub
xchg
jecxz
out
xor
cmp
xor
ret
movsb
jge
inc
mov
movsl
ret
scas
cmpsb
icebp
sbbb
sub
pop
pop
in
lcall
jg
add
repnz
out
imul
sti
cltd
sub
pop
iret
enterw
out
mov
xchg
jp
add
out
adc
xor
aad
sub
push
dec
lret
dec
pop
add
mov
enter
jecxz
aas
jo
inc
divl
dec
add
popa
pop
fisttps
jle
jbe
loope
scas
mov
sub
arpl
fcmovb
sub
cs
mov
fldt
lret
push
mov
test
idivb
mov
test
jl
enter
outsl
outsb
lahf
ss
lods
dec
lock
rclb
inc
xlat
mov
test
push
lods
out
jne
jle
jmp
xor
cld
scas
xor
fndisi(8087
in
inc
outsl
pop
adc
jo
push
sahf
push
enter
or
mov
enter
nop
jge
outsb
fadd
sbbb
aam
out
xor
xor
cli
mov
ljmp
xchg
jp
cmpsl
pusha
lret
in
movsl
movsl
mov
cmpsl
cmp
adc
push
add
dec
cwtl
inc
fimuls
movsb
cwtl
pop
mov
jge
int
lea
mov
out
mov
fs
ret
test
sub
adc
clc
cwtl
jl
test
iret
pusha
add
add
filds
mov
test
and
sub
pop
sbb
lods
insb
ret
ret
dec
fiadds
sub
imul
push
jp
mov
push
andl
and
test
stos
lods
mov
push
pop
adc
or
add
fdivrl
xor
shl
mov
push
loop
dec
fwait
pop
cmpsl
sub
fildll
pusha
mov
pop
or
out
fs
ja
lahf
ss
push
mov
testb
aam
hlt
es
push
repz
fwait
out
outsb
adc
nop
inc
enter
push
xchg
or
mov
decl
sub
mov
xchg
test
jb
iret
xor
pop
ss
lret
xchg
ss
mov
cld
jb
cmp
push
ljmp
pop
jo
mov
fistpl
ror
mov
adc
movsb
mov
rorb
dec
lock
or
sub
lods
cmpsl
test
adc
sahf
mov
cmp
pop
int
xchg
out
jnp
fmull
xor
stc
shlb
adc
jno
hlt
popf
fstl
icebp
rclb
ftst
push
and
pop
xchg
nop
fs
fs
rclb
mov
adc
test
stos
daa
jb
sbb
inc
mov
gs
or
jp
aaa
daa
lods
testl
pop
ret
imul
mov
outsb
pusha
int3
dec
push
jo
or
push
aad
xchg
outsl
inc
mov
subb
imul
iret
inc
add
sahf
push
jmp
stos
aas
stc
in
jg
cmpl
stos
jmp
or
loopne
lcall
lcall
adc
repz
fiaddl
rcl
insb
fsubrl
jl
jne
in
shlb
dec
or
testb
xorb
push
ja
mov
in
jb
mov
lret
popf
int3
jg
out
pushf
je
cmp
and
rorl
fs
sub
dec
mov
in
mov
icebp
xchg
dec
pop
fwait
jbe
ljmp
subl
rcll
sub
push
push
scas
fistpll
push
jns
pop
mov
and
in
push
xlat
icebp
push
mov
lods
in
cmpsl
push
xor
stos
or
imul
in
les
adc
and
pushf
mov
inc
push
push
add
ror
push
xor
push
es
adc
sub
xchg
lret
mov
mov
lcall
cmp
mov
std
pop
mov
xchg
mov
stos
addr16
xchg
aad
jg
pop
xlat
ljmp
and
loop
pop
sub
lcall
sbb
loope
or
xchg
cwtl
dec
inc
cmp
dec
jp
and
inc
addr16
loope
push
inc
dec
dec
shrl
adc
out
ja
repz
mov
push
lock
sbb
gs
jns
mov
jbe
push
in
sub
cltd
addb
add
int3
scas
shlb
dec
aad
aas
loopne
stos
imul
pop
ss
insl
dec
mov
mov
scas
lods
xor
sahf
jle
xor
rorl
lahf
xor
adc
out
pop
fmul
inc
cmp
mov
not
test
outsl
std
aam
popa
aam
ret
sarl
sbb
lods
imul
or
and
push
adc
push
cltd
fnstenv
pop
add
jnp
scas
out
inc
xchg
test
pop
scas
jp
sub
scas
sub
mov
dec
aaa
lds
fbld
mov
out
lea
leave
dec
adc
mov
dec
add
or
sub
or
fidivs
lret
push
stc
roll
out
ss
mov
sbb
js
bnd
pop
test
sub
out
sub
inc
mov
sbb
add
mov
inc
add
dec
dec
sahf
cltd
dec
cmpsb
sub
jge
in
cmp
in
jo
mov
add
stos
pop
xor
and
xchg
nop
sbb
lods
cwtl
and
mov
xor
hlt
cmp
push
xor
or
aam
xor
inc
fs
mov
aad
mov
insb
repnz
cwtl
mov
adc
cld
lods
cwtl
inc
add
jp
jno
inc
aam
mov
outsb
or
daa
dec
decl
push
mov
ret
adc
mov
mov
ret
push
data16
cmp
mov
mov
popa
mov
std
into
popf
or
mov
add
jle
dec
or
test
stos
jecxz
dec
jp
push
dec
divb
incb
popl
mov
jns
xorb
jo
dec
ss
pop
int3
mov
pop
lods
pushf
fldenv
inc
cmpsb
or
inc
ficoms
sbb
fcoms
dec
mov
cmp
cmp
jl
lods
movsb
cmp
cmp
mov
fnsave
adc
lds
xor
mov
sub
jmp
sub
fcmovu
sbb
outsl
cmp
lcall
lods
push
mov
sbb
adc
jmp
pop
dec
pop
cmc
push
outsb
adc
sub
and
pop
and
and
sbb
decl
fsubrs
outsb
std
daa
ret
int
hlt
pop
jne
adc
outsb
test
mov
mov
jecxz
es
ss
popf
cmp
xchg
xor
ljmp
js
stos
xchg
jo
aad
mov
xchg
stos
dec
test
dec
inc
fsin
xchg
ljmp
push
int3
std
ror
iret
test
stos
fs
adc
data16
and
in
sbb
adc
in
insl
leave
mov
out
in
dec
test
jbe
xchg
stos
add
in
cmp
rclb
dec
int3
int3
mov
out
mov
jg
nop
leave
incb
mov
jo
lret
add
arpl
or
jbe
dec
lock
sbb
xchg
cmpsb
imul
ret
xor
arpl
sbb
ljmp
data16
movsl
mov
lods
mov
dec
xor
bound
adc
rorl
pop
add
pop
xchg
fwait
adcb
mov
pop
mov
push
mov
out
out
stos
aas
push
or
lahf
mov
dec
add
sti
sub
sub
fwait
jb
mov
sbb
xchg
or
sarb
test
into
push
outsb
sub
test
and
fs
xor
cmpsl
inc
pop
sbb
nop
pop
movsl
ret
lahf
fadds
ffree
adc
orl
jbe
aaa
cli
negb
push
or
fldt
jns
insb
push
js
xlat
stos
jl
shr
aas
stc
test
fdivl
xchg
mov
jno
movsb
jns
jno
add
and
xchg
adc
jb
mov
push
sti
popa
xor
mov
scas
dec
pop
sahf
lea
or
or
loopne
mov
pop
xor
orb
cmp
imul
shrl
jbe
fwait
hlt
jle
roll
xchg
sbb
and
push
xchg
scas
setp
pop
popa
sbb
add
insl
repnz
ret
cmp
js
subl
jnp
jne
nop
out
rorb
push
and
pop
out
sub
and
inc
push
jg
sub
jmp
mov
adc
fwait
jle
subb
pop
adc
mov
movsl
call
dec
cmpsl
add
add
out
add
dec
and
addr16
ss
cmp
xor
jle
jmp
pop
jb
xchg
mov
adc
divl
adc
iret
aad
pop
and
rolb
add
out
jmp
add
lods
jbe
inc
popf
mov
jp
mov
into
dec
xor
and
roll
test
mov
or
call
mov
mov
outsb
rcrb
cmp
sbb
push
xchg
pop
leave
fwait
imulb
dec
testb
mov
pop
std
gs
pop
cld
int3
jge
cs
push
sub
cli
jno
and
dec
mov
and
inc
xor
imul
sub
mov
dec
les
xchg
pop
mov
fisubrs
xor
mov
cmpsb
sbb
nop
dec
cld
lret
mov
mov
mov
jae
jb
test
ret
sbb
adc
and
jp
iret
cli
ret
stos
mov
mov
mov
iret
insb
or
mov
gs
ja
lret
sbb
mov
pop
les
sbb
ds
xor
andb
mov
adc
test
movsl
sub
movsb
jne
outsb
sub
jg
imul
adc
xchg
add
mov
scas
mov
mov
jecxz
orb
ljmp
cmpsb
out
ja
fimull
lods
fcom
cs
adcb
std
ljmp
lcall
mov
aam
push
sti
xor
loopne
sbb
les
nop
clc
dec
lock
cmpsl
fists
repz
out
mov
fldz
or
enter
sbb
lret
ss
enter
es
shr
push
mov
cmp
fs
test
inc
jnp
mov
push
mov
pop
stos
out
repnz
ja
dec
cmpsl
pop
stos
mov
jle
add
shlb
insb
jnp
shlb
ss
jle
cmp
jmp
cmpb
add
filds
pop
test
inc
add
pop
mov
pop
jle
add
std
mov
sbb
ja
xchg
push
inc
daa
mov
jnp
outsl
js
shl
mov
in
filds
cmp
push
mov
xor
loop
add
xor
loop
imul
in
jb
int3
sbb
das
lea
xchg
out
add
repz
adc
push
test
mov
xor
out
pop
adc
mov
sub
mov
roll
notl
dec
pop
and
adc
push
push
push
outsl
pop
xchg
mov
dec
pop
push
mov
add
xor
repz
ds
idivl
jg
xchg
xchg
shll
jge
pop
pop
popf
clc
adc
jp
mov
inc
repnz
mov
rcrb
and
bound
mov
dec
cli
mov
jo
jmp
push
adc
sahf
notb
arpl
lret
loopne
hlt
jnp
push
push
std
fdivrs
mov
mov
mov
and
mov
ja
dec
aas
sub
aaa
test
clc
and
sbb
dec
xorb
and
cmp
daa
loope
adcl
push
ffree
inc
or
test
addl
push
mov
clc
or
pop
pusha
clc
rcll
lret
ljmp
sub
xor
xchg
sub
cmp
push
mov
repz
outsb
stos
jo
cmp
mov
push
fisttpll
sbb
push
test
cli
fcoml
lods
jecxz
cmc
or
lods
cmp
addl
xchg
cli
fwait
mov
out
mov
outsl
popa
out
and
pop
mov
pop
fcomi
and
iret
dec
sub
and
loop
jge
subl
scas
mov
sub
pop
loop
inc
cmc
scas
mov
aas
int
mov
fidivrl
add
mov
into
es
out
es
arpl
or
xchg
xchg
mov
xchg
or
mov
add
std
in
and
sub
stc
mov
sahf
mov
push
push
cmp
jmp
cmpsb
sahf
ljmp
xchg
iret
out
jne
lahf
inc
cwtl
aaa
mov
arpl
das
push
inc
pop
pop
inc
test
lahf
ja
cmpsb
pop
in
sub
ja
dec
in
push
add
mov
es
fmull
jae
lcall
imul
xor
or
or
pop
leave
inc
pop
push
xchg
insl
hlt
sbbb
fisttpl
in
or
inc
xlat
mov
sarb
dec
cld
out
mov
mov
cmp
neg
in
cmp
or
pop
ss
xchg
push
xchg
pusha
cmp
jle
adc
daa
ret
movsb
push
jecxz
sahf
nop
mov
lcall
jp
and
push
add
add
scas
dec
or
in
fwait
push
leave
pusha
ret
imul
stos
inc
mov
sub
pop
pop
sub
idivl
fcoml
and
repz
sti
cmc
mov
mov
push
leave
pop
xchg
add
aas
int
jae
into
or
insb
dec
push
sub
cmp
push
xchg
inc
aam
and
js
lock
out
cld
add
jp
ficoms
fdivrl
shrb
push
adc
dec
sbb
scas
std
loopne
push
jb
out
pushf
mov
mov
ds
mov
ja
push
jecxz
dec
cmp
lcall
movsb
xor
push
je
scas
pushf
jle
or
push
inc
pushf
inc
jl
lret
std
ds
jnp
mov
sti
sbb
into
imul
ss
addr16
xor
push
mov
not
xchg
ja
pop
shrl
lret
pop
aas
and
xchg
add
push
cmp
and
mov
shll
shlb
mov
or
xlat
enter
pop
cmc
in
call
push
pop
ja
or
xchg
jmp
sub
sub
xchg
ror
mov
sahf
xor
scas
sbb
sarl
mov
push
nop
fsubrl
imul
jp
into
jo
mov
inc
fdivrs
insb
jmp
stos
sbb
loop
frstor
ret
mov
xor
or
inc
ss
sarb
cmp
mov
push
or
stc
test
jg
cmp
sti
sub
adc
mov
push
dec
aaa
mov
stos
dec
inc
and
into
dec
xchg
fstps
rcll
cmp
xor
pop
and
cmpsb
into
jno
je
adcb
ret
mov
dec
mov
adc
add
jp
jne
jnp
cwtl
cli
and
or
ret
xchg
or
loop
sbb
testb
push
sbb
sbb
repz
xchg
scas
sbb
call
mov
and
lcall
inc
subl
mov
outsb
lods
and
mov
shlb
movsb
and
push
jbe
not
fwait
jbe
sub
jp
jge
bound
jecxz
imul
dec
jmp
pop
mov
jge
push
cmp
mov
or
arpl
push
add
push
pop
movsl
and
stc
lock
test
push
daa
mov
ljmp
lds
movsl
or
lahf
mov
faddl
mov
mov
sub
add
cld
lret
adc
dec
lods
or
push
aam
mov
xchg
push
mov
pop
repnz
repz
pop
xor
xor
ficoml
or
ds
ja
aad
mov
inc
cmpsl
sub
sbb
out
and
leave
std
and
adc
sbb
adc
xor
mov
pop
inc
and
inc
ja
addr16
sub
and
push
and
call
or
add
arpl
mov
jmp
dec
fcoms
int
cmpsb
loopne
jle
cmp
clc
jns
push
adc
mov
sar
cmp
adc
faddl
mov
aas
cmc
gs
movsb
dec
push
rolb
mov
xchg
inc
pop
shll
jmp
shl
pop
cmpsl
inc
es
mov
xchg
dec
push
js
insb
repz
or
insl
imul
mov
lcall
adc
jbe,pn
xor
mov
imul
aam
cmpsb
cmpl
pushf
push
sub
fwait
pop
add
int3
cmp
outsb
mov
push
neg
cmp
pop
fnstcw
mulb
sbb
and
pusha
pop
sub
fildl
inc
mov
pop
sub
out
scas
lret
mov
stos
push
mov
orb
adcb
mov
adc
test
hlt
repz
outsb
and
mov
mov
add
fwait
in
add
loop
nop
fstpl
xchg
hlt
sub
in
int
jne
ja
pusha
lahf
dec
movsl
clc
loope
jmp
push
repz
cmc
icebp
int
sbb
ret
fsubrs
xchg
sbb
int
int
lock
js
sub
mov
andb
mov
loop
notb
cmp
xor
mov
cmp
jo
pop
xlat
xor
movsl
mov
cld
cld
inc
mov
cmp
mov
adc
add
push
mov
aad
rorl
es
cmc
or
and
loopne
push
ret
imul
mov
pop
js
sub
mov
iret
push
jo
push
bound
pop
sbb
mov
cmpsb
fisubl
pop
out
mov
int3
pop
dec
test
hlt
es
ljmp
movsl
adc
cmp
fwait
sahf
adc
loopne
lods
lret
xor
aad
int3
add
aam
das
loop
mov
out
ror
adc
pop
inc
cmc
mov
cmp
and
adcl
mov
xor
and
inc
aas
add
cs
push
push
lods
ret
xchg
mov
cwtl
mov
mov
add
sbb
push
test
mov
bound
inc
cmpsb
lahf
push
int3
pop
sar
movsl
stos
pop
mov
out
repz
dec
std
cld
mov
movsl
pop
int
adc
inc
sub
shlb
movsb
sub
push
fisttps
pop
xor
nop
xor
ret
loope
dec
pushf
xchg
cmp
es
pop
xlat
in
or
mov
test
mov
jmp
cmpl
lahf
fnstenv
sbb
add
cld
loop
cli
or
xchg
int
es
pop
and
push
dec
dec
scas
xchg
or
jnp
data16
inc
jno
add
and
stc
fadd
add
shll
xchg
adc
jnp,pn
mov
cmp
addb
ret
loop
scas
cmp
hlt
jo
or
das
jbe
push
xchg
pop
jle
ds
ret
pusha
stos
adc
scas
adc
fstps
pop
out
mov
mov
inc
sub
ss
aas
shlb
xor
mov
sub
mov
imul
mov
imul
or
xchg
in
and
inc
scas
adc
neg
paddusw
mov
adc
repz
sub
mov
dec
push
adc
repz
push
push
test
testb
and
out
les
mov
in
sahf
in
lods
out
in
xchg
mov
aam
inc
mov
push
add
xor
push
int
lods
sti
xchg
dec
push
sbb
jae
sbb
mov
psrld
cmp
lods
add
or
mov
cmc
je
pop
sub
rolb
test
add
stos
jmp
jecxz
cld
sub
mov
push
cld
int3
incl
std
jmp
push
lods
lock
xchg
xchg
mov
cld
mov
test
sbb
data16
shll
xchg
lret
mov
rcll
insl
icebp
out
mov
mov
or
mov
rcl
sbb
decb
shll
std
dec
mov
mov
and
roll
movsb
mov
cmpsb
pop
mov
flds
hlt
cmp
push
lods
loopne
in
movsb
test
inc
cmp
sbb
cwtl
and
sbb
frstor
jp
mov
pusha
fwait
push
push
sbb
pop
enter
je
lret
adc
jp
test
cmp
ficoml
cmp
sti
idivb
icebp
out
fnstenv
shlb
test
xchg
push
mov
cmp
mov
popa
inc
xchg
push
mov
jns
hlt
sub
push
sbb
xchg
rorb
test
dec
sub
and
fucomip
add
lods
popf
addr16
add
mov
add
cwtl
push
rclb
test
ret
cmp
stos
jg
dec
cli
push
lret
cli
adc
in
out
add
add
clc
lock
jmp
push
in
rorl
fildl
je
jge
and
repz
ja
xor
adc
mov
push
test
clc
popf
or
add
pusha
cltd
imul
loopne
mov
test
push
scas
pushf
in
shll
popa
inc
lds
xchg
xchg
stc
addr16
push
loopw
fimull
ja
xchg
jne
hlt
push
add
and
fstl
mov
shll
pop
stos
fistps
ljmp
mov
push
stc
call
aas
les
xchg
sbb
cmc
sub
decb
mov
mov
addr16
mov
pop
push
pop
mov
cld
mov
arpl
dec
fisubs
lahf
inc
aam
int
lret
ficoms
fisubrl
dec
popa
jp
negl
mov
push
mov
inc
mov
ss
pop
pop
push
vmread
js
out
js
test
pop
mov
add
dec
pushf
icebp
dec
test
cmp
inc
xchg
xor
shr
push
mov
push
inc
pusha
daa
leave
nop
aas
out
ret
adc
jmp
lcall
aas
lea
addr16
xchg
mov
mov
in
aam
outsb
pop
xchg
popf
insb
iret
icebp
mov
push
rol
push
or
jb
xor
cld
xor
mov
popf
cmpsb
xor
jl
stc
ds
push
std
push
aam
mov
loop
dec
jb
xchg
pop
sti
shr
push
mov
jns
rcrb
push
sub
or
xor
shl
dec
pop
xor
cmp
leave
popf
jb
xor
je
push
insb
and
xchg
sbb
mov
or
cwtl
fwait
addr16
cmp
pop
popaw
or
mov
jae
xlat
adc
push
popf
cmpsb
pop
adc
or
push
mov
out
fstps
adc
and
das
in
cwtl
roll
out
or
push
clc
sbb
sbbl
jne
add
testl
lods
js
repnz
mov
and
cld
inc
daa
notl
cmp
adc
push
cld
pop
bound
outsb
pop
add
mov
pop
jnp
add
scas
pop
stc
dec
dec
cmp
pop
pop
aad
aam
push
addb
inc
jmpw
pop
addr16
fcomi
out
and
mov
fcomps
mov
mov
cmc
adc
stos
mov
sti
dec
addl
adc
cmc
xor
in
dec
aas
mov
out
into
aam
xor
test
sub
mov
dec
ds
mov
rcr
xchg
or
sub
mov
fistps
mov
inc
add
test
stc
jl
scas
nop
subb
movsl
movsb
ljmp
hlt
push
pop
fs
sbb
jecxz
jb
lret
adc
sbb
jns
mov
jp
repz
inc
inc
dec
int3
pop
insb
dec
jb
push
xor
lods
mov
mov
clc
mov
push
daa
ret
push
mov
aas
rcrb
movsl
cmc
push
mov
sub
mov
jno
incb
or
fdivs
loope
ss
push
lahf
fisubrl
cltd
inc
cld
addr16
data16
mov
int3
es
dec
pop
popf
rorb
lret
das
jmp
xor
push
jecxz
inc
mov
dec
test
ds
test
out
push
and
rclb
jns
xchg
jb
ds
lea
cmpsb
lds
pop
mov
rcr
dec
test
mov
dec
mov
jmp
ja
cmp
sub
xchg
cmp
repnz
add
inc
test
lahf
jns
iret
dec
pop
sbb
stc
xor
sub
cltd
xor
stc
dec
cmpsl
mov
stc
jo
xchg
sbb
sbb
ljmp
mov
popf
daa
enter
dec
arpl
mov
mov
mov
push
push
fdivs
mov
xor
jg
outsl
xchg
and
xor
and
pusha
insb
xor
push
xor
cmc
cmpl
xor
push
jp
jb
inc
mov
jne
iret
mov
mov
add
addr16
push
into
rcrb
pop
jbe
xchg
cmp
sub
push
out
fs
movsl
mov
sahf
shl
xchg
adc
fdivs
movsl
mov
cmpsb
stc
mov
dec
adc
inc
lret
adc
sub
ret
adc
stos
pop
rcl
out
and
jnp
mov
mov
jnp
popf
mov
pop
std
pop
jge
xchg
jl
cmpl
mov
test
xor
gs
mov
and
mov
jp
aaa
xor
add
arpl
mov
inc
rolb
and
hlt
sbb
daa
loop
lahf
loopne
mov
lcall
sahf
and
pop
push
rorl
pop
es
ret
mov
mov
adcl
lock
gs
cmp
out
iret
mov
adc
mov
ret
inc
ljmp
jl
into
lret
mov
bound
or
mov
or
imul
ja
add
arpl
jl
cld
sub
test
jmp
mov
jno
leave
pusha
push
test
jg
xchg
movsb
ficoml
lods
adc
jnp
lock
inc
jns
mov
and
andl
sbb
push
mov
add
shr
mov
sub
addl
iret
nop
sbb
loopne
or
ljmp
mov
mov
adc
or
test
lret
xchg
mov
popf
cs
inc
jnp
and
ljmp
pop
gs
data16
stos
dec
lods
cld
test
mov
ja
out
in
dec
sar
push
mov
and
insl
int
inc
or
test
fmuls
adc
loopne
mov
aas
mov
dec
in
push
mulb
dec
aad
push
out
test
shl
js
roll
movsb
movsb
xorl
pop
mov
mov
mov
inc
std
ja
push
insl
xchg
push
xchg
in
adc
push
nop
cwtl
aaa
or
mov
clc
xchg
stos
lods
inc
jp
xor
mov
pop
pop
scas
icebp
lods
sub
movsb
scas
push
into
xchg
lods
movsl
mov
orb
popf
pusha
xor
sub
pop
ds
or
inc
outsb
outsb
jp
repnz
sti
flds
cmpb
and
aad
or
sbb
mov
fldcw
sbb
out
adc
adc
fiaddl
stos
shrb
push
jl
int
cmpsb
mov
dec
mov
xor
dec
icebp
xchg
mov
fucomp
dec
mov
leave
add
into
into
push
loop
out
cmpsl
cmpsb
sbb
mov
or
mov
negb
lea
test
sbb
dec
lea
call
add
lret
jmpw
aas
fiaddl
test
sti
dec
inc
scas
mov
bound
js
inc
leave
mov
jno
inc
addr16
inc
imul
pop
sar
addr16
aas
mov
cmp
hlt
int
pop
dec
das
pop
aad
shrb
and
sarl
orl
filds
rcrl
popf
ljmp
push
adc
stos
lds
cwtl
cmp
add
aam
cmc
scas
fmul
cmp
shll
imul
loopne
cmp
push
push
fisttps
clc
inc
mov
dec
gs
xchg
inc
jecxz
popf
shll
rolb
mov
inc
stc
xor
pushf
pop
mov
jo
sub
sub
push
cmpsl
cmc
int3
loopne
test
sub
dec
mov
outsb
jnp
fisttps
stc
mov
jge
add
hlt
mov
in
scas
jle
sub
lds
sub
sub
adc
test
into
in
sarb
push
test
out
ret
cmp
mov
insb
and
and
lock
mov
push
push
loope
cmp
xor
test
pop
mov
mov
pusha
adc
mov
aas
jmp
fistpll
cmpsb
sbb
sub
pusha
jnp
hlt
rcrl
mov
push
cmp
sub
movsb
sti
scas
cmp
mov
insl
ret
dec
inc
lods
xchg
adc
and
pop
loopne
pop
mov
mov
and
mov
push
pop
sub
arpl
mov
mov
cmp
into
leave
daa
dec
mov
test
push
adc
cmp
cmp
mov
cmc
or
pop
xchg
aam
loopne
fsubl
and
push
sub
lds
repnz
add
cmp
out
jp
jcxz
insb
nop
in
jg
pop
sub
or
popa
shll
inc
test
xchg
push
loopne
xlat
xor
push
sti
lahf
scas
daa
sbbl
in
cld
dec
test
cltd
mov
vpsubb
xchg
sbb
push
xchg
scas
adc
xchg
cmpsb
and
jl
or
fwait
pmullw
lret
hlt
sub
out
cmp
mov
callw
pusha
mov
push
aam
notl
fwait
xchg
sbb
mov
xor
aam
cs
sub
clc
mov
mov
clc
mul
je
rolb
negl
fwait
popf
sub
mov
in
xchg
or
jb
sti
les
sub
sahf
add
jbe
add
cwtl
sbb
aad
inc
add
jecxz
xchg
loopne
clc
mov
sahf
mov
push
push
pop
jbe
or
shll
xor
adc
dec
cmp
jmp
sbb
xchg
outsl
dec
mov
xchg
aam
jne
int3
pop
inc
mov
mov
dec
rclb
jmp
rorl
ljmp
pop
test
sbb
cmp
jg
inc
repnz
and
lods
sub
xchg
scas
lcall
or
icebp
and
sub
and
in
pop
xor
inc
xlat
pop
adc
ret
xchg
mov
jg
mov
adc
mov
push
scas
lds
arpl
das
or
or
and
inc
ds
cwtl
call
inc
mov
sbb
push
insl
inc
or
jle
lahf
adc
xor
xchg
xor
push
mov
aaa
mov
xchg
push
sub
push
sub
or
xchg
cltd
ss
mov
cmpl
or
int
loopne
xchg
sbb
dec
and
jg
pusha
pop
ffreep
daa
pushf
xor
rcrb
aaa
leave
cmc
out
cltd
lcall
sub
cmp
inc
call
or
push
jno
cmp
nop
cmc
xchg
in
jge
push
dec
mov
rcl
jecxz
pop
out
movsl
xor
rcrb
jnp
adc
ljmp
xor
push
cmp
rcrb
stc
mov
sbb
mov
push
push
and
adc
enter
or
fidivl
mov
adc
lret
fisttpll
test
mov
sub
push
gs
les
cmpsl
xchg
mov
test
fxam
rcrl
test
mov
sbb
cmp
mov
bound
lret
mov
fcomi
dec
pop
lds
repz
shlb
imul
inc
mov
mov
and
js
loop
xchg
popa
pop
xor
test
outsl
dec
dec
push
testl
inc
xchg
jp
notl
lods
adc
mov
shll
lock
loopne
push
and
mov
inc
aam
mov
cmpsb
pop
stc
push
jnp
call
push
sbb
test
push
aaa
or
out
or
stos
fcompl
test
pop
add
add
xchg
mov
add
out
push
shlb
lock
adc
ret
cmc
out
sub
push
je
sbb
pop
divl
jnp
insl
adcb
lock
lret
inc
push
mov
popa
inc
mov
xchg
lds
test
and
jnp
pop
jae
adc
xor
or
lock
inc
jne
sbb
cmpsl
xchg
test
and
sahf
idiv
je
jo
js
in
pop
xchg
cmp
scas
sbb
insb
inc
xchg
pop
adc
inc
lcall
jle
scas
bound
lds
xchg
ja
out
jno
test
cmp
mov
repz
inc
clc
icebp
iret
mov
loop
outsb
or
movsl
cs
adc
jne
xor
lock
iret
mulb
sub
xor
sahf
shl
and
shrb
push
jb
jmp
pushf
imull
sub
loop
push
jbe
mov
jae
cmp
pushf
cli
add
jl
lea
and
jnp
push
xchg
sbbb
ds
mov
sbb
xchg
subl
out
pop
push
cltd
mov
cmp
jno
ljmp
sub
cmp
or
inc
movsl
rclb
add
fsubrl
cmp
ds
fs
cld
mov
mov
sub
push
popa
xchg
cmp
xchg
xchg
std
dec
push
xchg
jne
mov
and
dec
cmp
jnp
repnz
std
add
addb
mov
adc
mov
insb
xor
test
mov
jb
add
rcll
ret
les
or
jo
hlt
test
lock
adc
push
dec
pop
imul
jns
jle
jmp
pop
push
scas
insb
sub
jnp
mov
mov
or
lcall
mov
push
clc
push
incb
add
out
decl
aas
inc
mov
icebp
out
out
add
sbb
dec
imul
dec
inc
movsb
cmpsl
cmc
out
and
lods
lock
inc
popa
sub
ja
ret
int3
std
les
in
sti
nop
push
jb
or
ja
lock
push
dec
dec
or
outsb
sub
dec
and
sbb
jo
adc
push
adc
imul
inc
mov
pushl
decb
jmp
pop
add
and
mov
cmc
or
data16
add
insl
inc
hlt
fwait
in
mov
mov
popf
dec
scas
mov
shlb
cs
sbb
add
adc
leave
shrl
je
sub
and
fwait
lods
jl
sbb
addr16
pop
jnp
fiadds
jge
icebp
adc
dec
lods
daa
cld
data16
sub
push
mov
pusha
pop
std
jmp
adc
pop
push
shl
cmc
inc
sub
leave
sub
jo
ja
or
xor
sahf
mov
sti
ret
mov
lds
mov
push
in
repz
loop
andb
jl
js
xchg
mov
les
push
or
divl
stc
xchg
shll
mov
push
jns
outsl
push
aas
and
int3
mov
leave
cmp
pinsrw
mov
imul
push
pop
jmp
data16
es
mov
jp
cmc
aad
cmpsb
cmpsb
cmp
fimull
inc
lcall
andb
or
adc
pop
call
push
or
inc
orl
int
cmp
test
sub
add
and
push
jmp
imul
out
movsb
idiv
out
inc
pushf
mov
xor
scas
outsb
in
loopne
mov
lret
fbstp
in
loop
arpl
and
sbb
adcl
mov
movsb
push
fisttps
dec
bound
dec
pop
jg
hlt
in
test
jns
ret
movsl
pusha
iret
imul
out
test
jmp
into
or
addl
popf
and
fsubp
fldenv
xchg
sbb
pusha
test
or
ret
dec
cmpsl
test
aaa
mov
xor
stos
mov
sbb
mov
push
cltd
ret
lods
inc
inc
and
push
es
int3
sub
incb
lea
cmp
je
ret
gs
mov
jmp
addr16
aas
sarb
push
aam
jbe
fmull
out
inc
sbb
cmp
or
push
or
adc
jp
cmp
cmp
sti
jle
and
sub
sub
sub
push
lret
adc
dec
outsl
out
inc
pop
out
mov
scas
sub
xchg
mov
mov
add
scas
repnz
popa
enter
iret
js
clc
movsl
testl
in
jle
loop
test
push
lret
push
fsubrs
test
pop
xor
lods
push
cmp
sbb
outsb
xchg
push
rcr
mov
repnz
lahf
inc
cmpsl
mov
cmc
sub
pop
fsts
jmp
das
push
jge
daa
mov
pop
mov
lods
pop
xchg
cmpsl
push
movsl
inc
push
mov
lds
stc
add
dec
dec
aaa
mov
std
fwait
loope
hlt
inc
out
nop
mov
loopne
adc
pusha
mov
mov
dec
inc
rclb
aaa
in
testb
icebp
jno
pop
xor
into
test
add
lcall
in
rolb
push
jbe
and
mov
jnp
jne
ds
addr16
out
xchg
mov
dec
out
jmp
in
sbb
push
mov
inc
jecxz
jmp
xchg
popf
inc
fucomp
aam
lock
mov
test
xchg
jg
cmp
ret
out
jl
std
ret
xor
mov
pop
cwtl
out
popa
ss
addl
shl
movsb
enter
dec
xchg
nop
fwait
sbb
mov
mov
adc
bound
push
jg
jmp
pop
mov
or
out
fwait
out
push
mov
pop
or
rol
out
pop
pop
ret
pop
pop
push
mov
roll
xchg
and
pop
and
out
cmp
fisttpll
mov
icebp
lods
popa
push
outsl
hlt
das
jno
out
xchg
aaa
add
pop
inc
sub
push
out
push
aas
jmp
push
lods
sti
addb
ficompl
insl
pop
fnsave
xchg
lret
sub
sub
mov
cmpsb
popa
notl
mov
jbe
rclb
sar
dec
mov
shl
mov
adc
cld
ss
je
mov
jo
hlt
scas
out
pushl
cli
sub
jecxz
jb
inc
jmp
test
sbb
mov
or
push
out
and
scas
dec
outsb
ja
xor
add
jl
or
mov
or
fdiv
cmc
imul
cli
adc
cmp
leave
pop
push
sbb
in
jle
in
call
outsb
adc
ss
outsb
push
pop
lret
sub
fxch
dec
pusha
subl
xchg
ret
fsts
xchg
pushf
cld
dec
jbe
loope
pushf
call
repnz
jge
mov
or
add
mov
inc
adc
repz
mov
lods
adc
push
call
nop
insb
add
and
mov
pop
jo
sub
sbb
lods
jnp
sub
mov
loopne
cli
inc
xor
sub
ret
out
mov
cltd
popa
cwtl
cs
lahf
je
shr
popa
dec
cmp
sbb
rcr
je
mov
pop
repz
cmp
ret
test
xor
jmp
out
dec
mov
fs
aaa
stos
mov
inc
mov
fadds
xlat
adc
pop
ret
pusha
jnp
inc
push
call
pop
cmp
jne
jle
mov
push
lret
add
mov
insl
push
in
loope
inc
cs
xchg
negl
aam
fiaddl
lahf
shlb
dec
sbb
insb
dec
test
fcmovbe
movsl
pop
xor
aam
jo
jne
add
xchg
lods
xchg
push
push
imul
fcmovnb
std
or
add
push
divl
cmp
mov
mov
mov
dec
ret
dec
sub
mov
add
sub
outsl
lret
sub
jmp
mov
xchg
mov
nop
and
cs
out
int3
mov
pop
pop
fildll
jmp
jl
cmpsb
lock
mov
cli
stos
xor
mov
je
in
out
andb
fsubrs
sbb
imul
shrl
sbbb
xor
mov
fstps
mov
push
into
dec
cmc
mov
inc
inc
push
inc
jge
fs
jno
or
sub
mov
test
scas
inc
incl
movsl
xchg
nop
adc
cld
into
inc
sti
inc
mov
repz
push
add
pop
and
mov
or
cmpsl
iret
inc
jg
push
mov
push
mov
mov
aam
mov
dec
insb
cli
dec
jno
in
lcall
mov
dec
mov
or
xchg
jecxz
jns
mov
xchg
xor
push
movsl
stos
add
dec
stos
sahf
sbb
cmp
push
rcrl
retw
mov
cmpsl
pop
pop
and
or
dec
jl
cs
cmc
add
mov
adc
adc
cwtl
repz
mov
mov
out
push
std
pop
inc
cwtl
mov
add
call
repz
and
aam
pusha
arpl
and
push
sub
iret
jbe
iret
or
gs
sahf
push
imul
int
cmpb
test
xchg
push
jmp
repz
mov
insl
jge
dec
pop
pop
ds
rcll
jecxz
data16
jo
dec
pop
lods
iret
inc
mov
xchg
jmp
jl
test
add
ds
adc
popf
or
push
lcall
or
mov
pop
gs
add
mov
rcrb
or
cld
xor
fimuls
push
movsb
inc
sub
ljmp
fsubrl
test
lds
or
push
push
je
dec
shrb
mov
mov
cmp
mov
lcall
test
jmp
aas
sbb
inc
mov
loop
dec
out
mov
push
addr16
and
cmp
pop
xchg
jae
jb,pn
add
fstpl
loop
lods
mov
jne
inc
leave
jno
xchg
fs
sub
push
push
in
je
sbb
push
mov
xchg
mov
xor
dec
cltd
mov
pop
pop
insb
pop
push
mov
pop
insb
inc
mov
mov
inc
cs
scas
hlt
test
outsb
push
ret
sub
ss
mov
xchg
dec
mov
adc
push
push
sbb
insb
sahf
sub
pop
inc
insl
sub
out
mull
adc
popa
sti
sub
cld
add
daa
mov
mov
sub
push
cmc
cmc
mov
bound
fbld
idivl
sbb
cltd
cmp
andl
rol
pop
push
call
xchg
or
loop
jne
repz
inc
outsl
mov
scas
ficoms
mov
mov
shr
adc
cmpsl
mov
inc
sbb
cwtl
push
lods
xor
punpcklwd
loopne
sbb
cwtl
in
push
aad
leave
sbb
mov
clc
jbe
inc
leave
push
push
fisttpll
xchg
cld
pop
ret
loopne
cli
add
push
ret
jp
fisubrl
repz
dec
push
xor
icebp
mov
out
push
sub
imul
and
inc
lcall
add
dec
or
loopne
or
cwtl
cwtl
adc
adc
cmp
xlat
and
jbe
int
xor
mov
sub
push
negl
fimuls
lahf
push
sahf
pop
jmp
push
pop
in
mov
div
pop
jbe
rcr
cmp
cmpsl
imul
sub
xlat
jne
out
dec
cmp
and
ret
fimuls
stos
cmp
movsb
seta
push
call
enter
cmp
cs
jno
test
outsl
xor
bound
mov
int3
pop
mov
or
xor
xchg
jae
hlt
adc
push
sub
push
jae
inc
mov
std
repz
mov
sbb
dec
in
ja
sbb
inc
sbb
bound
addr16
push
pop
mov
fstpt
mov
mov
clc
jb
sub
cltd
out
rcll
in
jge
mov
mov
out
repnz
movsl
add
std
in
dec
loope
xor
movsl
inc
mov
inc
cmp
arpl
mov
dec
sbb
shrb
lock
loopne
and
jb
jbe
jb
enter
daa
pop
jl
arpl
sbb
cwtl
mov
ja
xchg
or
js
hlt
scas
xchg
jnp
pop
and
shll
add
movsb
adc
lret
js
push
push
inc
cmpsb
xchg
iret
mov
loope
or
std
setne
orl
xlat
pop
jle
icebp
test
dec
imul
xchg
add
sbb
mov
jecxz
push
ds
ret
pushf
nop
aas
sub
xchg
hlt
pop
nop
lock
push
out
xchg
pop
jg
sbb
sbb
push
ds
fs
jle
or
xor
xchg
cli
insl
cmc
push
sbb
ror
jbe
jne
clc
imull
aam
nop
dec
mov
hlt
cmp
pop
ss
sub
gs
popf
imul
lock
inc
mov
push
mov
xorl
int
sub
add
cld
les
daa
test
xchg
insl
es
jp
mov
cmp
icebp
jbe
jne
push
adcl
sub
push
subl
call
pusha
adc
sbb
in
popf
mov
mov
in
cvtps2pi
jge
icebp
fstpt
push
movsl
xor
iret
mov
out
xchg
cltd
pusha
mov
fisttpll
fs
les
adc
pushf
icebp
lea
decl
adc
lock
pop
ss
mov
jae
mov
dec
test
call
lret
jo
pop
cmc
push
sub
imull
sub
and
test
xchg
push
adc
movsb
and
fldl
xchg
push
sub
cltd
pushf
xchg
mov
inc
nop
imul
add
stc
jbe
dec
mov
mov
popf
jl
mov
mov
push
lds
int
sbb
rolb
data16
push
into
andl
testl
lods
movsl
nop
or
or
adc
and
pop
mov
lret
aaa
pop
das
mov
pushf
insb
out
and
or
jbe
add
xlat
fs
dec
notl
and
jmp
dec
add
mov
ret
jb
mov
push
mov
cltd
pop
jb
and
pushf
data16
lods
inc
sahf
fs
sub
scas
cmpsb
cmp
jne
das
push
jmp
subl
jp
or
sub
pop
fwait
icebp
stos
loope
enter
jo
push
out
les
movsb
data16
or
lahf
repnz
lahf
jmp
dec
push
xchg
jnp
sub
and
jecxz,pt
jb
aam
mov
xchg
lods
repz
js
bound
sub
das
pop
push
jo
jmp
incl
push
gs
cmp
and
in
jmp
push
jnp
rorl
jmp
cli
int3
jg
movsl
ret
aad
mov
repnz
xchg
out
mov
sbb
add
in
stc
fisubs
cmc
xchg
ljmp
ljmp
das
sbb
mov
cltd
mov
jne
in
dec
mov
sarb
daa
rorb
push
sub
lcall
and
int3
mov
sub
lcall
mov
lds
jbe
lods
std
push
jb
stos
movsl
sub
out
sbb
pushf
or
out
mov
loope
imul
shrl
pop
clc
andb
xor
add
push
cmp
mov
popf
pusha
push
sub
and
dec
mov
pop
xchg
jecxz
jge
sti
cmc
mov
pop
mov
mov
movsb
push
enter
mov
rorl
je
sub
daa
pop
pop
push
add
cmp
sahf
lcall
and
jo
imul
jb
cld
imul
dec
loop
sub
sub
xlat
repz
fstl
push
inc
shld
adc
and
orl
ljmp
mov
jecxz
subl
jno
jge
in
iret
rorb
imul
repnz
push
aam
shr
jno
and
fildll
cmpsb
push
xchg
and
out
adc
mov
imul
pop
sbb
fsqrt
pop
inc
repnz
ret
clc
insb
jl
das
add
ja
pop
mov
scas
lcall
pop
loop
or
imulb
lcall
test
addr16
inc
pop
xchg
cmp
notl
or
and
leave
mov
mov
jge
repz
dec
inc
jo
bound
inc
jo
add
push
stos
fcoms
mov
loopne
pop
mov
jns
mov
popa
popa
fldz
jge
dec
aas
cwtl
adc
jecxz
adc
and
enter
pop
xchg
pop
adcl
les
mov
lcall
pushf
and
pop
cltd
in
cmpb
rcrb
inc
rcr
lret
loope
enter
mov
in
mov
in
gs
mov
iret
inc
scas
push
arpl
je
or
lea
lret
mov
mov
inc
cmpsl
out
testl
daa
or
push
sbb
and
adc
dec
sbb
mov
mov
and
pop
cmpsb
push
inc
dec
fists
add
sub
int
xchg
into
stos
div
mov
jle
xchg
xor
popf
daa
xor
in
fwait
jb
pop
cli
test
ror
outsb
jg
shll
das
mov
mov
or
xchg
lea
in
stc
push
mov
les
xchg
sbb
pop
dec
hlt
shrl
add
gs
leave
cmp
daa
and
lea
pop
cmp
xchg
mov
mov
push
cmp
cmp
jns
or
xlat
loopne
mov
inc
clc
sub
sbb
imul
fsubs
scas
or
jle
call
cli
mov
mov
and
mov
mov
mov
ds
outsb
push
push
fwait
mov
js
pop
imul
sahf
fimull
lcall
into
mov
stos
adc
xor
std
in
and
pop
sbb
jno
xor
dec
adc
sahf
call
jns
jbe
push
mov
mov
int
in
in
fidivs
dec
lods
push
or
cmc
mov
push
xchg
inc
add
mov
fcoml
jmp
push
in
test
lret
mov
scas
jge
push
or
add
dec
popf
loopne
ja
mov
inc
or
sbb
fistps
sub
aam
mov
or
push
cltd
mov
pop
push
std
loopne
sbb
lcall
push
filds
inc
push
and
jge
rcr
push
nop
insl
xchg
cmp
mov
xchg
pop
mov
js
fsubl
push
sbb
or
push
xchg
leave
or
movsb
cmpsl
pop
mov
cwtl
fcomps
sub
dec
adc
dec
cmp
push
sbb
xor
or
cmpb
mov
daa
xchg
repnz
fistpll
mov
push
mov
lock
scas
icebp
mov
pop
int3
pop
shl
lret
mov
jae
test
inc
ficompl
icebp
mov
xchg
scas
loop
push
mov
loopne
pop
movb
insb
xlat
adcl
insl
xor
testb
notl
mov
add
les
pusha
sbb
fcomip
nop
dec
test
pop
movsl
test
repz
fs
mov
inc
add
mov
mov
mov
pop
and
testb
xor
notl
push
stos
sub
adc
or
jmp
aas
addl
dec
cmpb
test
inc
dec
mov
enter
xchg
mov
push
sti
out
mov
jne
cmp
call
lret
loope
adc
cmp
fwait
adc
pushf
fcoms
outsl
or
sahf
xchg
std
mov
sbb
in
push
out
ret
movsb
sbb
mov
push
dec
mov
popa
fwait
sbb
fnstcw
mov
addr16
adc
sbb
js
sbb
and
ret
add
push
cmp
cmpsb
notl
hlt
repnz
mov
mov
mov
xorb
or
xchg
xchg
mov
push
shlb
or
addl
sub
mov
pop
add
sbb
fstps
lods
jle
cli
push
inc
ljmp
out
push
mov
aam
mov
enter
jno
cmp
sbb
gs
out
outsb
aam
jmp
sub
arpl
jecxz
pop
test
cltd
test
push
cmpsb
out
les
leave
xchg
jle
push
lock
inc
add
subb
ret
cmp
jo
int3
fstpt
or
pop
ficompl
movsb
xchg
mov
mov
addl
movsb
and
add
add
jo
cwtl
gs
jecxz
mov
add
loopne
mov
lods
das
pushf
adc
in
or
xor
mov
xchg
jno
push
mov
pop
test
jecxz
push
push
push
lds
neg
and
dec
stos
or
cmp
out
push
addr16
lds
dec
jecxz
xchg
jmp
lods
xchg
jo
jp
fnsave
inc
mov
jl
sub
or
lods
mov
test
add
add
mov
and
gs
mov
inc
pop
pop
push
adc
sti
mov
push
adc
pop
inc
roll
sub
outsb
lea
cmpsb
mov
dec
mov
sahf
outsb
jp
add
push
pop
or
sub
xchg
jg
clc
push
fdivrl
add
jge
sub
mov
insl
jg
jae
aam
cmpsb
sbb
rcrl
dec
inc
pushf
movsb
in
adc
scas
mov
fidivs
jmp
and
dec
lods
push
cmp
dec
call
mov
lea
jmp
push
es
xor
fcmovnu
sub
mov
cmp
jne
cmpsl
testb
cmp
sub
mov
iret
bound
popf
jl
push
leave
dec
cli
jnp
jle
dec
sub
jp
aas
push
cmp
mov
jbe
inc
jmp
inc
and
loop
mov
pop
mov
dec
das
inc
repnz
fwait
ljmp
adc
into
cmpsl
jae
stos
sub
das
cmp
add
inc
jecxz
adc
jecxz
or
imul
sbb
aaa
fwait
mov
ret
outsb
subb
xor
cmp
push
movsb
scas
cmp
stos
and
into
lds
ret
stc
push
mov
mov
and
xchg
xchg
mov
aad
sub
into
inc
loope
pusha
shrb
add
cmp
inc
cmc
push
sub
hlt
or
pop
mov
cmpsb
out
add
mov
pop
push
jno
jmp
fsts
rcr
and
and
arpl
xchg
pop
out
cltd
cmpsb
incb
repz
xchg
jb
or
mov
dec
jl
jno
shr
pop
imul
cld
push
iret
and
push
mov
mov
dec
shrb
mov
jmp
test
out
sbbb
pop
aas
pop
enter
cmc
popl
sbb
mov
out
call
mov
push
rorl
mov
jge
and
clc
push
cld
adc
or
inc
lods
mov
out
dec
mov
jge
daa
out
jae
out
xlat
push
fisubrs
inc
inc
adc
mov
push
mov
mov
jne
sub
aam
or
mov
mov
cmp
xchg
fistl
push
mov
rorl
cmp
dec
inc
adc
ret
or
xor
inc
out
xchg
lods
cltd
call
imul
mov
pop
insl
test
ss
sbb
pop
fisubrs
popa
or
mov
add
rorb
jo
dec
repnz
mov
loope
fwait
mov
filds
fsub
sbb
fldenv
fists
sbb
nop
push
xor
push
inc
fadd
sahf
xchg
outsb
aas
add
jae
sahf
xor
out
xchg
dec
cmp
mov
push
ja
dec
and
adc
aam
pop
repnz
movsl
or
push
push
add
lea
call
jbe
push
sbb
orl
loope
mov
cld
outsl
jns
js
sub
xor
arpl
lret
sub
stc
push
sbb
mov
sbb
mov
xor
inc
lret
subl
in
sbb
xor
rcrb
ljmp
ljmp
jl
sbbb
mov
inc
inc
jecxz
ljmp
out
sarl
pop
jae
cmp
xchg
inc
fstpt
mov
xchg
mov
pop
add
nop
xchg
add
jg
inc
dec
dec
gs
xor
mov
jb
dec
pop
adc
aad
je
sub
mov
and
test
pusha
lcall
sbb
inc
push
dec
dec
lods
nop
cltd
imul
push
xor
sbbl
pop
or
mov
sub
repnz
adc
std
push
loopne
fs
mov
scas
jmp
stos
add
push
sub
jne
add
inc
sub
cli
inc
outsb
out
push
sub
into
jl
loope
and
outsb
stos
stc
negl
mov
push
outsb
or
fbld
push
inc
nop
mov
sub
iret
aad
mov
mov
fsubr
xor
push
sub
mov
shlb
iret
xchg
out
std
adc
mov
inc
xchg
inc
ljmp
stos
dec
sbb
fdivr
cmp
sarl
leave
sbbl
or
mov
enter
fcompl
xchg
lds
cmc
aaa
out
fcmovnbe
jle
pusha
add
jb
out
testl
je
rolb
and
ds
in
sahf
adc
icebp
dec
mov
inc
dec
mov
mov
mov
lcall
mov
mov
fdivrl
insl
test
xchg
mov
xchg
cmp
jbe
movb
lret
or
sub
lret
lea
les
sti
pusha
int
out
mov
xchg
mov
mov
mov
mov
out
out
outsl
dec
lea
test
outsb
and
mov
push
addl
in
fisubrl
xchg
out
push
push
inc
cmp
loop
mov
sub
je
push
clc
inc
cmc
enter
addr16
lret
pop
int
mov
dec
mov
es
testb
rcll
lea
xchg
dec
ret
addr16
shl
fbld
and
push
mov
clc
mov
out
xchg
fwait
lret
dec
add
mov
cmp
dec
xchg
xchg
mov
sbb
mov
inc
sahf
arpl
inc
jae
loope
lret
iret
out
test
pop
int3
cmpsb
xor
cmp
movsb
jecxz
xchg
mov
inc
adc
lods
leave
ljmp
sbb
gs
stos
mov
mov
out
xor
mov
scas
dec
mov
test
pop
shrb
push
int
inc
mov
dec
leave
arpl
sbb
xlat
movsl
mov
jne
int3
pop
xchg
xor
mov
scas
cmpsl
dec
cmp
test
cltd
mov
repz
lcall
sub
jg
in
mov
or
insl
lcall
mov
push
aas
sahf
ret
cmp
jns
pop
lods
xor
pop
lds
inc
aad
popa
jg
jae
push
sub
pushf
mov
js
xor
dec
push
and
out
lea
test
jb
pop
jp
das
and
lods
outsl
adc
movsb
push
jo
xlat
add
scas
jno
pusha
jns
pop
test
icebp
or
jae
lock
push
sub
cmp
dec
mov
mov
push
pop
sub
outsl
sbb
mov
and
pusha
adc
fs
and
adcl
pop
insl
inc
out
mov
lods
push
inc
loope
dec
lcall
lea
pop
out
mov
das
pop
mov
lock
fs
fwait
mov
out
push
lea
mov
dec
in
lods
daa
aaa
cli
mov
setae
push
fwait
mov
push
xchg
fadd
call
ffreep
pop
push
js
mov
cltd
mov
loope
fistpl
pop
stos
lods
and
mov
in
mov
out
or
movsb
imul
ja
cwtl
fidivrs
not
adc
adc
jecxz
or
loopne
push
and
lods
jbe
imul
cltd
cmp
sub
cmp
cmc
insl
dec
gs
jb
mov
mov
cmpsb
into
inc
xchg
cmpsb
mov
addb
jl
inc
adc
inc
jge
movb
call
push
lahf
adc
cmp
aad
fldenv
les
iret
into
or
or
enter
lret
add
iret
dec
bound
xchg
inc
or
dec
test
test
dec
pusha
int3
push
inc
push
xchg
bound
clc
mov
pop
stos
jae
pop
xchg
mov
jp
stos
push
enter
roll
imul
inc
push
das
mov
xchg
fmul
lea
int
adc
in
out
pusha
shrb
testb
in
xchg
push
push
jg
hlt
mov
cltd
popa
ljmp
sub
mov
lds
push
les
lock
mov
pop
sub
xor
mov
outsb
push
nop
dec
movsl
ret
out
mov
sbb
es
iret
test
sub
lahf
imul
xchg
sbb
push
mov
adc
scas
movsl
rorb
and
inc
inc
iret
negb
in
push
inc
xacquire
movsl
scas
and
call
mov
sbb
test
js
pushl
dec
and
stc
cli
cmp
sti
push
cmp
je
inc
cmp
jmp
hlt
aad
add
pop
jb
je
jno
inc
cmp
sbb
mov
or
jnp
mov
jne
pop
mov
lahf
repnz
pop
dec
insb
cs
out
fsubl
cs
lods
pop
flds
pop
and
jno
mov
jg
cmp
lods
mov
jecxz
cli
pop
ret
dec
inc
xlat
test
sub
pusha
aas
aad
mov
mov
add
js
add
sbb
sbb
cmp
daa
or
pop
fxch
outsb
arpl
push
push
imull
add
in
xchg
leave
add
inc
lret
cltd
mov
mov
add
mov
mov
pop
mov
clc
xchg
mov
sbb
in
jge
in
pop
or
loopne
pop
movsb
outsb
test
xor
mov
nop
popf
mov
fstl
pop
or
mov
dec
fdiv
imul
jge
scas
fisttpl
inc
fisubrs
and
mov
mov
adc
aaa
divl
daa
xor
fiaddl
fcomps
movsb
xor
and
and
pop
pop
movsb
fimull
mov
jmp
adc
and
jns
insb
icebp
lcall
test
lds
in
in
je
out
add
inc
pop
ljmp
lods
xchg
daa
ror
ret
mov
mov
jmp
call
out
jo
inc
add
inc
and
cli
movsl
lods
sbb
xchg
or
push
inc
or
pop
jns
or
icebp
pop
sbb
xchg
mov
mov
addr16
movsl
shll
push
movsb
and
lret
jnp
mov
mov
stos
clc
pop
add
das
xor
mov
shr
xchg
cs
lahf
pop
arpl
ss
ss
icebp
mov
inc
mov
das
movsl
js
test
or
lret
outsl
lods
scas
adc
cltd
and
fstl
aam
rcrb
shr
dec
jge
movaps
mov
mov
cs
into
sub
mov
fst
das
enter
rcr
xchg
or
dec
adc
mov
lcall
stos
or
pop
fisubl
jne
push
loope,pn
int3
popa
ja
test
pop
call
and
cmc
push
xchg
inc
xchg
jns
pop
mov
add
dec
cmp
lods
insl
mov
call
stc
or
and
loope,pn
xchg
push
ret
dec
imul
sub
loop
fs
into
pop
loope
xchg
jbe
mov
and
push
adc
and
fistl
xchg
stos
out
xlat
push
sbb
out
lods
adc
dec
and
out
data16
call
nop
cli
fnstenv
imul
movsl
mov
pop
imul
pop
mov
aaa
or
mov
jp
and
mull
pop
sbb
cmp
and
or
aad
repz
mov
inc
cmp
xlat
in
cmp
mov
adcb
repz
roll
cmp
add
push
filds
xchg
mov
push
push
lock
add
repz
add
cmp
ja
xor
add
in
sub
and
cmp
ret
xchg
iret
in
insb
add
ljmp
sbb
dec
sbb
push
lahf
sbb
outsl
lret
adc
lahf
and
push
arpl
pop
aaa
push
jbe
xchg
or
jmp
push
jno
movsb
adc
rorb
cli
pop
mov
insl
mov
aam
dec
test
aaa
movsl
mov
insl
sbb
dec
cmp
jo
int
jne
test
aad
pop
mov
test
out
test
out
dec
divl
and
pop
outsl
fs
mov
mov
das
stc
dec
mov
stos
pop
loopne
mov
in
lret
leave
pop
xor
push
outsb
ficoml
and
orb
call
leave
int
out
xchg
daa
jno
mov
movsl
pop
xchg
sbb
dec
xorl
popf
jmp
lods
rep
xchg
enter
sub
in
hlt
int3
sub
dec
adc
fcomps
movsb
ds
inc
mov
mov
imul
ffree
stos
orl
lods
ficompl
int3
jno
push
and
or
dec
xlat
rorl
xorb
jmp
daa
lods
adcb
ror
lods
sub
fidivl
mov
loope
lcall
in
or
sub
mov
aaa
outsb
mov
sbb
push
dec
loope
cltd
add
ljmp
inc
inc
shll
jecxz
mov
pop
sbb
popf
add
or
add
out
out
push
add
dec
lds
pop
mov
std
sahf
xchg
lods
call
push
js
mov
cmp
mov
xor
lret
jne
movl
dec
jbe
rol
mov
cmpsb
in
fsubrl
adc
xchg
dec
pop
lcall
outsb
cmp
dec
loopne
icebp
fsubrs
int3
outsl
push
dec
or
push
aas
or
loope
dec
popa
xchg
lods
inc
cmp
cwtl
popa
pop
mov
insb
sbb
cmc
add
gs
mov
mov
add
mov
shrl
mov
push
outsl
mov
sub
and
orb
jle
lret
xchg
pop
cltd
mov
dec
mov
outsb
sub
daa
adc
sarl
sub
aas
and
adc
outsb
pop
inc
test
mov
sbb
ljmp
push
popf
xor
stos
je
inc
and
dec
or
pop
movlhps
mov
into
cmp
setno
adc
out
sbb
int
movsl
fwait
fs
push
adc
ss
flds
fstl
dec
enter
roll
adc
jae
lods
mov
sub
or
push
repz
repnz
pop
jg
mov
insb
sub
mov
inc
cmc
mov
jae
jns
cmpsb
xchg
adcb
sub
push
pushf
loop
mov
addr16
jnp
jp
ljmp
bound
or
xor
test
mov
adc
push
bound
push
push
xchg
int3
outsl
aam
push
lock
xlat
sarb
sbb
subb
bound
addb
pop
push
cs
aad
pop
cmp
outsb
sti
aad
cwtl
sbb
loop
mov
adc
cli
push
xchg
mov
inc
lahf
leave
lods
and
mov
in
fwait
in
fstps
cmp
xchg
jb
cld
cltd
adc
jmp
sbb
sti
pop
insb
adc
call
dec
cld
clc
dec
faddl
dec
push
sahf
jns
push
cli
mov
push
adc
mov
shrl
xchg
decl
pop
fs
mov
ficoms
push
mov
cwtl
cmp
addr16
dec
lods
movsb
icebp
and
push
sub
outsl
mov
fistps
popa
addr16
cmp
lea
fdivs
push
cmp
push
xor
in
or
jmp
and
xchg
lahf
faddp
fcoml
dec
divl
out
addr16
lods
push
mov
aas
dec
pop
cmp
adc
aas
cli
xchg
and
push
inc
jg
or
lcall
push
into
dec
std
mov
adc
cmp
insl
xchg
jmp
out
cmpsl
inc
push
hlt
aaa
mov
or
xchg
jmp
scas
add
nopl
mov
andb
mov
mov
aam
jbe
js
pop
xor
cmp
popa
add
lahf
repz
aam
ret
es
xchg
inc
mov
sbb
ret
faddl
in
dec
in
xchg
mov
cs
movsl
subb
or
sub
into
loopne
data16
gs
push
jmp
push
loopne
push
add
mov
sub
popa
and
arpl
jns
popa
lcall
inc
dec
sbb
pop
push
in
imul
inc
rcrb
shll
cmp
out
sbb
jbe
aad
inc
aad
rorl
jle
mov
inc
divl
xor
jmp
adc
jbe
rorl
push
in
mov
inc
mov
mov
xchg
filds
movsl
pop
inc
xor
cltd
adc
addr16
xorb
loope
mov
ret
dec
mov
lret
testb
cmc
mov
add
lods
mov
outsb
mov
outsb
insl
mov
sbb
call
adc
dec
in
mov
cwtl
jg
sarb
push
and
push
repz
sbb
mov
jle
loopne
out
outsl
dec
push
pop
cmpsb
rcrb
pop
inc
push
inc
jno
push
rcl
pop
out
call
popa
push
ja
lcall
test
pop
icebp
push
pop
je
mov
or
pop
xor
mov
in
fiadds
cwtl
or
fisttpl
pop
sbb
aaa
adc
int
adcb
stos
cld
outsl
sub
mov
pop
sarl
inc
adc
rol
mov
std
data16
jg
leave
movsl
sbb
mov
jle
stc
adc
dec
sbb
jmp
shl
xchg
mov
xchg
in
mov
mov
ljmp
jmp
pop
or
add
push
and
adc
adc
dec
mov
inc
fisubrs
shlb
inc
ds
mov
sbb
push
mov
or
xorl
test
lret
or
loope
mov
cwtl
bound
mov
clc
mov
push
and
pop
in
test
sub
pusha
jns
sub
insb
cs
in
push
je
loope
dec
nop
cs
cmp
mov
js
sub
adc
pop
cmp
xchg
in
xchg
fs
mov
pop
inc
stos
jg
cwtl
adc
fwait
and
cli
adc
insl
lods
adc
imul
out
mov
in
fldenv
xchg
xchg
dec
jecxz
loopne
dec
cltd
mov
and
lret
mov
push
sti
add
scas
mov
fmuls
daa
or
dec
mov
lds
mov
sahf
and
dec
fidivs
rorl
stos
dec
cmp
xor
movsl
push
xor
and
ljmp
ds
inc
inc
fcomi
ret
int3
lods
out
jb
lcall
add
sub
jns
pop
mov
sub
pop
xchg
adc
xor
loop
out
scas
push
and
mov
mov
insb
test
adc
cmp
in
insb
inc
popf
sti
jg
out
pop
dec
repnz
or
inc
cld
push
fsincos
pop
jnp
dec
fcomp
inc
shrl
lret
add
adc
rcrl
and
ret
mov
negl
dec
clc
cmp
and
or
inc
cmp
scas
loopne
jo
movsb
lea
pop
inc
inc
push
xor
pusha
or
dec
sub
aas
pop
mov
mov
cmp
cmp
mov
xor
outsb
cmc
mov
mov
sbb
xor
lret
dec
rclb
ja
popa
insb
mov
ja
stos
pop
nop
inc
in
imul
dec
inc
pop
cmp
mov
jmp
test
cmp
lods
push
jne
lahf
sti
ds
addr16
push
dec
int3
or
lret
pop
pusha
xor
dec
xchg
stc
dec
adc
stos
push
cmp
ret
sbb
fs
push
lods
xor
mov
jo
lahf
insb
cli
out
fwait
sbb
popl
je
sbb
mov
stc
shlb
jmp
xor
mov
fs
inc
add
add
cli
pushf
jno
nop
sub
adc
sbb
add
xchg
inc
pop
aaa
nop
pop
lahf
mov
mov
xchg
lret
adc
fsubl
mov
cmp
push
test
loopne
mov
mov
jmp
aad
and
aas
sbb
push
mov
xor
pop
push
hlt
or
sub
lods
lret
adc
sub
xor
and
sbb
mov
inc
dec
jae
jns
loope
mov
int
dec
out
mov
repz
hlt
aam
div
mov
in
lods
xor
int
sub
adc
jo
je
iret
dec
hlt
popa
mov
nop
push
arpl
daa
fnstsw
pop
arpl
sub
in
sbb
and
mov
pushf
ret
xor
or
fcomp
aaa
cmpsb
mov
add
shr
sbb
xchg
fcoms
js
test
cmpsl
aad
and
jle
sub
in
stc
inc
inc
inc
sbb
pop
fsubrl
in
ljmp
add
imul
push
push
pop
mov
scas
mov
pop
je
add
dec
imul
lret
sbb
jns
addl
mov
mov
lret
pusha
cwtl
push
out
outsl
adc
in
sbb
sub
or
sbb
sub
mov
mov
int
xchg
adc
xchg
sub
mov
iret
pop
clc
sub
jl
xor
inc
stos
inc
in
sub
push
cmp
push
lcall
sti
aas
and
repnz
arpl
or
mov
int3
loope
ror
cmp
inc
sbb
mov
and
js
ljmp
dec
clc
ds
loop
jle
daa
sbb
xchg
sbb
push
stos
inc
mov
out
pop
ret
push
lods
shrl
cmp
adc
lds
lcall
lods
or
cs
jp
push
dec
shlb
insb
mov
adc
add
out
stos
cmc
enter
insb
int3
pushf
xchg
in
dec
out
subb
pop
pop
mov
sub
fs
clc
dec
push
daa
call
xor
movsb
sub
push
bound
arpl
mov
lods
test
mov
shll
xchg
scas
xchg
pop
lahf
cld
jl
sub
mov
lret
push
fdivl
add
adc
cmc
aam
xchg
jmp
and
mov
sub
mov
xor
dec
jecxz
ljmp
lret
test
addr16
addl
pop
pop
xchg
push
iret
cmc
sub
icebp
in
cmp
jge
leave
std
or
cs
xor
lret
fcoms
xchg
outsb
pop
lods
pop
mov
pushf
adc
jp
pop
pop
aaa
push
popa
mov
inc
popf
xchg
push
and
imul
mov
arpl
mov
loope
in
add
lret
pop
fdivs
jnp
pop
arpl
push
test
fildl
daa
mov
inc
sub
imul
lret
vhaddps
addr16
nop
jnp
mov
xor
loope
notb
or
divb
and
cwtl
inc
loop
aaa
leave
cmp
mov
out
adc
add
aad
and
je
sbb
mov
pushf
in
pop
fcoml
jno
inc
outsl
cs
cld
ljmp
mov
add
add
add
adcb
dec
test
add
lods
int
scas
xor
stos
cltd
cld
popa
jb
inc
mov
mov
sub
push
lods
pushf
xchg
adc
mov
cmp
stos
fldcw
ldmxcsr
dec
fdivp
fmuls
xchg
mov
mov
idivl
pusha
push
xorb
pop
xchg
paddusw
dec
pop
sahf
mov
sarl
xlat
and
cmpsl
es
decl
pusha
imul
rcrb
scas
pop
iret
or
push
in
cld
cmp
cmpsl
xchg
inc
cmpsb
xor
imul
in
ds
xchg
stos
add
fs
push
xchg
movsl
push
bswap
and
pop
fs
xchg
je
xlat
mov
inc
jecxz
xlat
adc
jnp
int3
lods
ja
call
test
outsb
sbb
rorb
or
pop
shrb
jb
and
pop
sbb
sbb
jo
cwtl
fwait
push
js
inc
punpcklbw
dec
dec
xor
int
or
data16
test
sub
cmp
sti
mov
mov
pop
xor
lahf
push
xor
mov
cwtl
adc
mov
ljmp
test
dec
push
mov
xchg
js
inc
push
mov
gs
in
mov
sbb
or
arpl
sbb
xchg
daa
cmpsb
je
pop
repnz
repnz
dec
inc
movsl
ret
pop
enter
repnz
mov
and
lea
sbb
les
lahf
int3
jo
shrl
cmp
inc
and
jns
cmp
pop
outsb
test
sbb
into
dec
mov
mov
sbb
arpl
jno
popa
inc
mov
inc
push
pop
pop
or
dec
pop
mov
xchg
testb
pop
daa
inc
push
jg
pop
pop
xor
ja
dec
xor
push
rclb
or
push
and
dec
mov
and
sbb
imul
and
out
rcr
xchg
insl
scas
out
loop
jge
xchg
daa
push
nop
push
subb
sahf
jmp
jnp
mov
imul
call
popa
in
xor
xlat
push
arpl
shr
mov
pop
push
lret
jge
push
scas
pop
loopne
pop
pusha
insb
sbb
cmpsb
mov
jge
and
cmp
ljmp
jge
sbb
cmp
jl
int3
cmp
push
lret
pop
pop
push
pop
sub
dec
pop
mov
ss
push
call
cmp
int3
daa
lret
push
lods
dec
inc
mov
daa
sbb
jns
imull
daa
lahf
cld
rcl
cwtl
xorl
add
dec
aad
jg
mov
mov
mov
cmovns
or
jmp
mov
data16
popf
xor
sbb
mov
inc
mov
add
popfw
adc
push
fsub
xchg
dec
xchg
rorl
fcoml
dec
sub
mov
ljmp
inc
dec
stos
daa
lcall
scas
shrl
push
loop
mov
push
sbb
cltd
sbb
jg
movsl
loopne
push
xchg
lods
pop
data16
inc
sahf
mov
out
cmp
cmpsb
lcall
rcl
rcrb
sub
test
mov
cmp
ss
rcll
xchg
cmp
mov
leave
cli
and
or
sarb
hlt
enter
mov
loop
cwtl
or
arpl
in
iret
daa
and
jg
in
inc
push
scas
cmp
mov
sub
dec
jae
js
push
inc
xchg
cmc
scas
or
mov
fsubrs
mov
jp
imul
pop
pop
inc
mov
imull
adc
xor
inc
cmp
jae
test
xor
adc
adc
pop
mov
out
cmp
iret
mov
sbb
cmp
cmp
sahf
mov
mov
push
out
jae
adc
shrl
in
adc
addr16
xor
cmp
lods
stos
mov
cmc
nop
mov
pop
and
mov
sbb
inc
clc
sbb
inc
jmp
fldt
xchg
fldcw
jg
sub
sti
clc
shrb
adc
clc
mov
push
orl
adcl
jb
mov
mov
aad
jbe
or
xor
adcb
mov
mov
in
test
movsl
pop
pop
nop
push
popa
push
sbb
out
fwait
adc
sbb
fmuls
in
xchg
cmpsb
push
mov
scas
mov
out
iret
jmp
hlt
pop
pop
sub
stc
xor
dec
push
pusha
xchg
add
push
fwait
mov
js
mov
dec
fimuls
push
mov
lock
sbb
ja
cld
mov
jnp
jno
imul
jns
jno
and
push
adc
imul
ret
repnz
add
mov
and
clc
or
stc
adc
jb
push
push
mov
sbb
cmp
push
jno
cmpl
int
dec
or
mov
cmp
push
push
add
jnp
mov
or
insb
push
pop
xchg
dec
xchg
jp
mov
insb
sbb
arpl
mov
test
sbb
repnz
pop
mov
aam
sub
cmp
das
cmp
dec
or
inc
dec
add
xor
jg
ror
dec
lcall
cmc
xchg
xor
popa
pop
pop
inc
lods
mov
sti
xchg
lahf
dec
push
inc
in
push
xor
push
pop
rcrl
in
aam
in
shl
and
jne
xor
mov
cmp
pop
cltd
into
outsl
popf
inc
movsl
movsb
push
cli
or
int3
push
adc
dec
add
push
mov
jno
pop
cwtl
xchg
cmp
sbb
adc
inc
or
mov
xor
or
push
jb
add
xchg
mov
adc
and
sti
jg
test
push
sti
dec
dec
xlat
mov
and
push
ficomps
xor
int3
push
and
mov
push
jnp
cmp
xchg
lods
icebp
lea
mov
mov
and
cmp
jne
xor
je
add
push
dec
out
mov
xchg
cmp
sbb
lods
lock
mov
mov
out
loope
ljmp
dec
lahf
and
jecxz
jbe,pn
test
jns
xchg
lcall
in
jecxz
aas
lret
cmp
xchg
sub
rcrb
push
push
sub
mov
pop
cmp
aas
jne
adcl
push
sub
jbe
sti
stc
cli
into
xor
dec
ljmp
adc
sub
fmulp
and
fwait
xchg
lods
scas
sub
sbb
pop
xor
jo
into
mov
lret
and
call
aas
xchg
test
mov
dec
ficoms
or
lcall
ss
and
pop
loope
pop
lock
cmp
jnp
subb
movsb
andb
and
jae
clc
or
adc
jne
lds
sub
lock
pop
les
fwait
inc
mov
cmpl
sti
mov
mov
mov
mov
pop
rcrl
and
in
xchg
cwtl
sbb
scas
repz
in
xor
xchg
jle
dec
cmp
xor
xor
push
lds
es
daa
push
shlb
mov
andb
pop
ds
push
outsl
adc
int
insb
xorl
lret
mov
cld
shlb
orb
or
js
mov
jecxz
cwtl
sbb
int
push
push
jp
mov
push
xchg
cmp
dec
mov
out
xor
mov
and
loop
scas
xor
sahf
rolb
mov
jge
mov
mov
push
xorb
cli
out
sub
cli
out
fimuls
mov
fsts
sbb
addr16
jb
xchg
or
popl
leave
push
cs
lret
scas
pop
xchg
es
sub
in
lock
shr
mov
xchg
adc
lods
fisubrl
popa
lods
jns
jo
loopne
jle
and
xchg
mov
jno
sbb
jl
jg
js
dec
lods
adc
adc
mov
or
lret
call
cmp
sub
icebp
orl
pop
lock
sub
jns
rol
mov
cltd
cmpsb
int3
xor
adc
jo
out
loop
repnz
outsb
pop
adc
dec
push
sahf
popa
movsl
dec
sarl
adc
add
loope
adc
ret
sti
adc
xor
xchg
sub
xchg
pop
inc
jb
push
inc
mov
out
adc
pop
pop
ljmp
leave
xor
iret
js
and
int3
or
adc
adc
adc
sbb
out
mov
outsl
sbb
rol
dec
in
sub
inc
pop
int3
xchg
fsub
mov
icebp
loope
pushf
sbb
ja
sbbl
fstpt
ret
xchg
add
jns
lods
inc
pop
popa
sub
add
push
int3
mov
inc
or
sub
movb
xchg
add
js
mov
xor
push
dec
jns
sbb
push
loopne
xchg
mov
clc
out
xor
les
loope
add
sbb
shlb
int
sahf
das
pop
lcall
xor
cmp
jnp
insl
shrl
jne
add
fiaddl
mov
jmp
sub
call
fcomps
dec
add
test
rcrl
aad
stc
adcl
inc
into
mov
rcrb
cmp
aam
test
aam
mov
dec
imul
jnp
push
xchg
addl
inc
in
add
js
sbb
jo
data16
aam
test
push
pop
xchg
jg
xchg
jl
push
loopne
inc
inc
cmpsl
jno
adc
lahf
push
movsl
jp
shll
cmp
push
adc
insl
je
aaa
add
sub
dec
or
fidivrs
or
dec
push
add
roll
and
and
jl
xlat
loop
pop
adc
loopne
icebp
add
adc
jecxz
add
roll
or
mov
popa
fwait
cmp
and
ljmp
push
sbb
mov
aad
imul
sub
call
mov
mov
test
icebp
test
mov
sbb
hlt
inc
mov
aad
into
sub
mov
add
inc
and
xchg
popf
sar
lahf
push
mov
push
leave
repz
fsts
ljmp
xchg
sbb
jg
movsb
pusha
or
cmp
cmp
test
jne
and
cs
cmp
call
inc
mov
shll
fidivs
sub
mov
dec
jg
mov
out
es
xchg
adc
movsb
mov
popf
pop
xor
or
popf
add
add
pop
mov
movsl
lea
xchg
xchg
mov
pop
test
mov
pushf
mov
xchg
out
pop
mov
fistpl
xchg
inc
mov
outsb
shrb
cmpsl
lds
lret
add
in
jae
push
inc
jmp
lds
cmp
jle
dec
jns
cld
mov
test
push
leave
rcrb
add
sub
das
sbb
nop
inc
test
jle
pop
xor
jle
jb
pop
cmp
loopne
imulb
mov
scas
push
js
pop
push
xor
fdivl
pop
pop
fstpl
je
xor
dec
jns
insl
js
push
or
and
jno
mov
cld
mov
adc
test
jecxz
mov
repz
and
or
ficoms
add
js
sub
je
adc
jno
pop
and
mov
mov
lock
out
mov
paddusb
loope
mov
inc
xor
rol
rcrl
mov
jmp
push
enter
incb
xchg
sub
sub
xor
fwait
in
jns
jg
xorl
aam
mov
add
sbb
mov
mov
popf
call
inc
incl
ljmp
pop
jl
mov
mov
push
pop
fsubrl
lock
insl
sub
aas
xchg
cmpsb
imul
xor
lret
lea
sub
mov
loopne
xor
pusha
or
insb
mov
int
sbb
pop
xor
ds
fidivrs
inc
test
jne
xor
aam
popf
ret
fdivp
jg
movsl
cmpl
mov
cmp
out
es
inc
and
in
fcomip
lahf
add
inc
ljmp
push
je
sub
adc
push
into
flds
adc
jmp
out
enter
inc
or
enter
sub
out
or
dec
sub
xor
rsqrtps
push
or
rcrb
lods
push
cmc
xchg
lds
pop
jg
mov
scas
hlt
xchg
loopne
cli
lret
add
sar
idiv
inc
pop
dec
mov
sbb
xor
push
iret
fwait
jp
in
xchg
int
inc
mov
cli
push
fisubl
aam
sub
out
jl
dec
dec
xchg
pop
ja
test
mov
lds
dec
outsb
test
and
aas
int3
insl
outsl
cmp
push
divl
lods
popa
cmp
mov
xchg
pop
cld
adcb
cmp
out
mov
insb
ja
call
mov
aam
mov
sbb
popa
call
dec
pop
shrl
adc
adc
icebp
push
push
mov
test
shll
das
xor
insl
push
adc
pop
add
stos
xchg
cwtl
int
ljmp
xchg
add
dec
mov
cmp
ret
outsl
xor
pop
repnz
add
adc
cmp
inc
jnp
mov
mov
jmp
lds
lods
test
nop
sbb
lea
filds
adc
dec
cmp
or
mov
pop
xor
ror
pushf
inc
outsb
mov
out
mov
or
adc
mov
cmpsb
sti
in
mov
aas
adc
xchg
out
xor
std
in
imul
out
xor
jl
push
mov
jb
pop
icebp
xor
shll
sbb
pop
dec
dec
out
adc
imul
arpl
inc
mov
jbe
sti
adc
mov
insb
in
xlat
inc
sahf
xor
mov
xchg
or
scas
sbb
cmc
and
sub
pop
in
rcl
xchg
insb
mov
hlt
into
dec
jno
xor
fwait
mov
mov
imul
sub
pop
loop
or
out
xchg
cld
push
xor
fstpl
inc
call
mov
adc
or
jb
addb
repz
push
cwtl
adc
sbb
in
and
inc
jmp
fcmovnu
push
shll
mov
daa
shl
jne
adc
or
sahf
movsl
adc
or
inc
jp
insl
cmc
lcall
cmpsl
mov
mov
bound
add
mov
push
mov
cltd
daa
scas
mov
hlt
mov
mov
jbe
loopne
mov
nop
imul
mov
stos
push
in
mov
fdivl
jmp
ljmp
jne
and
notl
ret
and
push
inc
push
shl
jmp
mov
adc
sub
sbb
pop
add
adc
mov
pop
roll
jbe
cli
shll
movsb
out
xchg
lahf
lahf
xchg
inc
cwtl
mov
push
roll
lods
loop
jne
enter
decb
jo
push
pusha
push
xchg
das
inc
in
cwtl
jmp
inc
inc
mov
dec
mov
add
push
test
movsl
outsl
xchg
ret
sbb
push
aad
xor
cwtl
sbb
push
mov
push
sub
push
or
cmpsl
in
mov
push
add
loopne
enter
out
sbb
mov
sbb
or
add
pop
adc
mov
inc
loope
scas
xchg
nop
je
xchg
insb
ja
in
adc
fbstp
aam
les
outsb
add
mov
ljmp
mov
add
cmpsb
movhlps
inc
jle
or
repnz
enter
xchg
mov
mov
call
das
icebp
and
test
mov
in
insl
pop
fcompl
jne
and
cmpsl
in
push
inc
ss
les
or
pause
int
mov
adc
sub
inc
push
adc
mov
lcall
jnp
insl
push
or
adc
incb
ja
pop
arpl
adc
shrb
in
fidivrl
lods
icebp
lods
sub
fs
or
rorl
in
mov
jo
ss
lea
add
fistpll
mov
pop
iret
std
sbb
jne
push
shlb
in
rcrb
xchg
movsb
pop
fsubp
mov
ljmp
or
or
in
dec
xchg
popf
js
ja
and
out
ljmp
sub
int3
or
sub
int3
lret
fisttps
and
and
loope
xor
lods
lock
dec
pop
mov
mov
cmp
sbb
dec
inc
insl
jno
pop
sahf
jge
outsl
sbbb
add
repnz
in
repz
pop
in
rclb
lock
in
pop
clc
inc
aas
insb
and
push
sti
addb
xor
popf
stos
imul
test
js
or
sbbb
lods
pop
and
xor
rcr
jno
xor
cmp
pusha
and
cmp
push
mulps
leave
mov
icebp
lcall
mov
mov
in
frstor
jl
add
sub
fstpt
sti
data16
int3
lods
dec
dec
and
sahf
pop
add
lcall
adc
jns
sbb
movsb
std
pop
fisubrl
loope
iret
aad
pop
xchg
xchg
pop
in
aas
pusha
sbb
jmp
shr
xlat
jge
xor
imul
rcrb
fstpl
and
jno
and
daa
cmp
lret
lods
xchg
aas
xor
data16
xchg
add
iret
mov
imul
call
push
cld
mov
or
pushf
push
test
clc
std
scas
fstl
nop
enter
mov
push
jbe
bound
shrb
jo
mov
mov
push
es
jp
mov
add
mov
add
sub
cli
and
aad
cmp
sbbb
adc
imulb
pushf
int3
jle
mov
fiaddl
jle
je
outsb
je
dec
pop
mov
addb
fldt
mov
inc
mov
lahf
jecxz
insb
push
mov
xor
fs
jne
iret
xchg
xor
cmp
push
or
lock
aaa
fildl
pop
xchg
aad
fnsave
lods
stc
sub
loope
int
inc
and
sar
lret
in
int
aam
nop
xchg
adc
and
ds
pop
xchg
loop
scas
lret
repz
mov
arpl
int3
adc
or
cmp
xchg
jge
sahf
fnstenv
ss
dec
rclb
hlt
mov
pop
xor
es
outsl
fwait
jb
or
lods
pop
lds
aaa
negl
mov
cmp
repz
adc
loop
aas
jecxz
inc
movsl
or
dec
call
cmp
sub
cmp
push
dec
mov
mov
add
xchg
rclb
fs
cli
js
call
add
in
fiaddl
or
dec
xchg
ds
cld
jb
fildl
mov
add
gs
ljmp
dec
int
or
pop
loop
mov
enter
movsl
cld
push
loop
sbb
xor
mov
push
or
xor
sub
sbb
mov
ret
sub
mov
into
incl
mov
and
xorl
aas
scas
call
inc
ret
fiadds
sub
xchg
lahf
es
scas
scas
lods
stos
jbe
mov
sbb
pop
sbb
je
pop
fcomip
ret
hlt
xchg
xchg
loopne
dec
or
dec
mov
cmp
dec
mov
repz
leave
dec
movsl
scas
outsl
pop
popf
addl
test
jecxz
dec
push
pop
std
das
xor
cmp
mov
fs
gs
sbb
pop
jecxz
testb
out
jno
push
icebp
shlb
mov
xor
out
adc
mov
push
in
push
fwait
ja
inc
mov
test
jne
jne
mov
vandnps
push
imul
stos
in
and
je
fstpt
in
xor
pop
or
pop
fwait
mulb
pop
mov
jl
decl
sbb
shr
sti
repnz
jb
imul
popf
add
cmpb
xchg
sub
lret
ds
fs
out
outsl
sbb
fnstenv
int3
inc
xor
fsub
dec
dec
mov
loop
cmc
lret
stc
js
pushf
imul
and
and
and
mov
mov
fcoml
xor
in
aad
jbe
in
mov
xchg
lcall
je
out
mov
test
mov
mov
dec
mov
cmpsb
sti
jno
hlt
dec
jb
imul
fstps
lods
lea
push
lret
dec
mov
or
push
adc
ja
ret
add
jecxz
mov
lcall
jecxz
stc
clc
stos
pop
or
pop
mov
push
jg
mov
loop
and
push
sbb
sub
sbb
ret
lds
adc
lret
stos
push
or
sub
sub
lcall
push
pop
xor
imul
or
divb
xlat
push
sbb
sarl
or
mov
rcrb
mov
sbb
leave
cmp
mov
xor
sbb
andl
push
lcall
adc
push
and
lret
addr16
icebp
imul
jecxz
mov
xchg
daa
xor
cmp
iret
sub
into
cmpsb
lahf
les
sbb
cs
in
fistl
jge
int3
pop
loope
xlat
mov
sbb
rcr
sbb
pop
inc
jge
fdivs
les
mov
popa
cltd
adc
lret
xchg
dec
mov
cmpsl
ljmp
scas
jnp
sbb
scas
test
xchg
mov
push
jns
leave
incb
scas
insb
out
inc
imul
jge
lahf
pop
or
jle
adc
xchg
dec
fildll
ret
or
dec
in
xor
mov
lahf
xlat
mov
ret
adc
mov
push
jbe
movsb
ret
push
imul
push
cli
fsubrs
movntq
add
add
sbb
mov
repz
pushf
xor
shrl
inc
pop
dec
nop
jne
lret
clc
adc
cld
test
insb
clc
push
mov
fisttpll
mov
or
adc
mov
lock
lea
ss
xchg
fwait
sub
xchg
dec
inc
mov
cmpsb
out
gs
cmpsl
jne
cwtl
pop
sub
mov
pushf
sub
mov
xchg
sub
out
jns
pusha
stc
push
jb
ret
jg
add
mov
lock
cmc
pop
or
pop
cwtl
pop
sbb
mov
fs
mov
dec
and
fcompl
pop
dec
mov
shll
mov
mov
fwait
jp
addr16
aad
jno
and
lcall
pop
sub
mov
pushf
pop
rcrb
xchg
xchg
jb
sub
es
stos
out
aad
pop
mov
shlb
dec
fimuls
aam
push
mov
sbb
mov
mov
lea
jno
in
jae
push
pop
insb
dec
enter
sub
and
pop
test
in
mov
int
sub
lcall
inc
pushf
into
and
mov
mov
add
pop
out
stos
call
daa
jg
xor
rcrl
fidivs
push
iret
xlat
cs
pop
aaa
lret
xchg
inc
insb
cmpsb
sbb
mov
sbb
mov
cmp
gs
mov
xchg
pop
repz
cmp
movsb
or
int3
hlt
mov
pop
xorb
fninit
jo
imul
inc
lcall
addr16
push
mov
pop
mov
adc
lret
fisttpll
ret
mov
sbb
or
jmp
sahf
hlt
in
cmpsb
pop
leave
fildl
stc
loope
sub
jo
jmp
jb
mov
pop
hlt
mov
pop
pushf
outsl
push
ljmp
push
imul
mov
out
mov
push
sub
xchg
cmp
inc
dec
jae
jns
aas
shrb
shlb
xor
xor
jno
add
add
jnp
addl
mov
imul
pop
xchg
dec
fldcw
lret
and
rorl
fbstp
sbb
push
push
pop
pushf
add
xchg
test
jo
jl
mov
push
out
lret
arpl
pop
stos
cs
or
idivl
scas
xor
push
daa
dec
inc
in
xchg
mov
and
add
mov
jmp
movsb
dec
test
inc
sbb
sbbl
push
mov
repz
sub
sti
cmp
cmpl
xchg
sbb
mov
cmp
add
and
jne
mov
stos
cli
push
daa
lds
test
test
sub
int3
push
adc
sub
fldcw
fcomi
in
cmp
imulb
push
out
xor
cli
adc
inc
insl
fwait
pop
mov
insl
in
pop
das
call
fwait
gs
jle
test
xor
fdivrs
movsb
adc
pop
mov
stos
out
negb
xchg
loope
cmc
je
outsl
xchg
or
mov
xchg
xchg
and
cmp
inc
mov
xchg
or
imulb
mov
lret
mov
jae
mov
dec
add
xchg
or
xlat
inc
jno
sub
add
mov
pop
mov
addr16
pop
sarl
outsb
ret
mov
pop
lahf
scas
repz
mov
gs
push
out
enter
xor
mov
and
addr16
aaa
lods
lods
pop
addb
pop
mov
insl
fldl2e
mov
out
jnp
cltd
inc
cmp
test
cltd
inc
jl
pushf
pushf
bound
sub
dec
push
inc
imull
outsb
out
rcrl
movsb
add
mov
insb
push
test
jl
cmpsb
divb
les
cmp
push
cmp
imul
loope
mov
rcrb
xchg
imul
scas
push
inc
dec
or
nop
cmpsl
push
cld
fcoms
push
sub
dec
cmpsb
mov
mov
out
push
scas
ss
cmp
mov
pop
addr16
ret
fwait
xchg
dec
cld
mov
jno
fmul
icebp
mov
xor
cmp
jmp
lods
mov
adc
pop
sbb
mov
add
loope
push
stos
cmp
cli
scas
sti
adcl
lcall
leave
sbbb
repz
mov
addl
mov
ljmp
ret
mov
dec
xchg
ja
stos
mov
lods
gs
adcl
nop
std
xchg
cmpsb
sbb
cld
add
lods
push
add
cwtl
cmp
inc
inc
jo
std
rcl
mov
inc
dec
out
xchg
out
jge
cld
add
fnsave
mov
lock
xor
outsb
jmp
movsb
sbb
jecxz
jne
inc
or
movsl
or
aam
mov
mov
mov
bound
jb
mov
stos
mov
push
inc
stos
test
or
es
mov
pop
nop
xchg
sub
lock
insl
subl
jo
xlat
ds
and
je
mov
int
lahf
mov
loopne
mov
cmc
fildll
rcll
aad
std
outsb
mov
pop
out
shr
fs
adc
enter
lret
aad
or
jge
nop
cmp
lar
push
cs
adc
ret
sub
and
shrw
mov
pop
push
dec
lds
enter
addr16
jmp
das
pusha
shl
sbb
inc
int3
cmp
adc
test
jno
inc
enter
dec
jl
adc
lods
std
insb
bswap
or
xchg
sti
cmpsb
mov
and
sub
add
test
mov
addr16
jmp
fcoml
test
pop
ja
pop
jno
adc
mov
xchg
xor
mov
sub
fisttps
cld
addr16
inc
das
jae
nop
leave
jp
pop
dec
cmpsb
hlt
sbb
data16
add
cmpsl
fmulp
mov
pop
inc
add
mov
stc
sbb
jb
bound
pusha
or
imull
push
aad
add
aad
fidivs
inc
pop
sbb
fucomi
js
xchg
xchg
std
mov
movsl
shlb
je
subl
mov
inc
dec
sbb
test
in
xor
inc
jnp
or
pop
inc
mov
lret
ret
dec
and
sbb
stos
push
stos
faddl
shl
pop
mov
push
jo
cmp
dec
in
mov
shrb
sub
cmpsb
test
ss
ret
out
cmp
jecxz
repz
inc
out
adc
sub
cld
dec
cmp
pop
iret
pusha
jbe
insb
popa
loope
aas
cltd
mov
xchg
or
cmp
xchg
popa
or
pop
jo
movsl
bound
mov
jns
aas
pop
inc
aaa
in
or
cmpsl
jns
push
mov
mov
lret
es
sbb
fsubrs
test
aas
mov
orl
adcl
sub
push
sub
pop
fcmovne
clc
das
movsb
stos
in
popf
je
inc
add
sbb
sub
fldt
xor
mov
jbe
inc
pop
mov
inc
cmp
into
xor
and
push
push
and
out
pop
mov
fsubrl
test
les
push
cwtl
idiv
push
fcmovne
insl
ficompl
mov
cwtl
rclb
iret
pop
js
sub
ljmp
push
cmp
mov
divl
jg
xchg
jg
add
mov
push
sarb
and
aaa
hlt
cmp
outsl
out
lods
fcomps
adcb
fst
and
dec
or
pop
xchg
mov
sub
inc
sbb
cmpsb
daa
fists
roll
shll
cmc
test
mov
orb
and
cli
aaa
push
out
pop
cmpb
cmp
fs
clc
adc
popl
iret
insl
mov
mov
and
jecxz
adc
out
and
dec
jnp
mov
mov
sbb
int3
push
add
and
mov
push
mov
icebp
inc
push
dec
and
inc
ja
shll
lea
mov
arpl
je
imul
ja
dec
loop
pop
jb
rcrl
xor
adc
xor
outsb
jmp
push
out
mov
cli
in
cltd
in
or
cmp
mov
inc
out
mov
mov
cltd
mov
inc
cmpsb
pop
xor
sbb
clc
mov
cwtl
rcrb
insl
ja
mov
xchg
scas
pop
xor
and
repz
pop
adc
mov
xchg
mov
jae
adc
out
cmpsl
ja
aas
cmp
decb
or
arpl
push
inc
js
js
add
dec
sub
shlb
testl
jb
clc
out
adc
out
mov
inc
loope
cs
add
xchg
pop
mov
out
sbb
add
xchg
push
js
outsb
push
into
cmc
jp
xor
mov
mov
data16
cmp
popf
lret
jle
fmuls
ret
aas
repz
jo
sbb
mov
mov
xchg
or
sbb
arpl
xorl
pop
add
lods
jp
jecxz
mov
stos
sbb
xor
dec
cld
icebp
adc
gs
or
push
inc
out
int
push
sbb
cld
and
adc
push
ret
cmpsl
in
pop
sub
mov
mulb
jnp
jbe
adc
sbb
jb
rcrb
out
xor
sub
mov
aad
adc
in
dec
cwtl
in
mov
mov
add
orb
dec
push
add
and
daa
fneni(8087
push
icebp
scas
jno
jne
cltd
mov
add
cld
call
mov
mov
jae
in
imul
aad
je
and
jecxz
jp
adc
dec
mov
and
mov
repz
ret
and
insl
lret
int3
dec
ficoms
push
inc
je
aam
xchg
push
cmc
iret
in
outsb
bound
adcl
leave
xor
adc
cs
jmp
mov
popf
aas
adc
push
popf
fisubl
mov
sbb
test
jbe
loopne
fcompl
push
pop
xchg
ja
stc
arpl
mov
xor
rcl
ffree
inc
lahf
fisttpl
cmp
jno
cmp
dec
std
data16
setl
mov
cmp
adc
addl
in
popa
and
js
ret
pushf
test
cli
add
in
jle
mov
imul
mov
stos
or
aam
out
inc
sti
lods
mov
adcl
std
sarl
in
vpsllq
data16
inc
fnstsw
arpl
push
xor
jmp
mov
mov
sahf
lds
fistps
outsl
push
aaa
movsb
or
out
idivl
pop
leave
in
popf
mov
push
add
andl
push
mov
mov
fsubrp
int
xchg
jg
xchg
in
mov
sbb
push
inc
out
xchg
jb
addr16
add
mov
jge
xchg
decl
arpl
loope
das
das
dec
jg
insb
add
xor
dec
sub
jle
ficoml
out
cld
xor
into
jp
xlat
dec
jb
je
stos
inc
jl
adc
or
xchg
shll
xchg
data16
inc
daa
or
ljmp
outsb
pop
faddl
mov
or
add
out
sbb
inc
repnz
pop
xlat
pop
add
or
movsl
and
push
mul
sbb
add
mov
dec
or
push
in
sti
test
adc
xor
out
inc
leave
push
push
and
add
push
cmp
jb
pop
iret
add
jle
mov
in
pop
cmp
xchg
insb
cs
jnp
and
push
dec
in
dec
sbb
dec
pusha
test
mov
insl
jno
lds
scas
jp
cmpsl
mov
jmp
insl
insb
cwtl
in
dec
in
lods
dec
mov
cmp
jle
and
int3
icebp
mov
into
out
and
sub
cmp
gs
pop
cmp
das
pop
and
sbb
andb
dec
inc
arpl
in
fnstenv
mov
add
fistl
call
scas
sahf
push
mov
dec
jg
cmp
test
repnz
xor
mov
push
call
ja
jecxz
and
ficoms
aad
inc
push
add
fimuls
repz
repnz
jmp
pop
pop
testb
cwtl
mov
icebp
mov
clc
aam
fisttpll
scas
inc
sbb
xor
mov
pop
out
scas
add
xor
xchg
clc
cwtl
cmc
out
cmp
push
inc
stc
sbb
mov
shufps
enter
inc
shl
xchg
in
cmp
mov
adc
cmp
or
mov
jp
popa
in
xor
cmp
mov
pop
stos
dec
push
outsl
xor
and
loopne
sbb
in
aad
ja
repnz
push
ret
or
xchg
mov
stc
lds
push
sub
push
loopne
xchg
dec
xchg
adc
pavgb
sahf
xchg
insl
mov
addr16
rolb
cmpsb
lcall
jno
scas
frstor
test
ss
and
lods
outsb
subl
fstpl
cs
insl
test
or
loope
pop
xchg
cmp
sbb
loope
mov
outsl
xchg
xchg
jae
add
cld
out
aaa
test
int3
add
push
mov
mov
loop
out
push
inc
fimuls
adc
sbb
push
popf
cli
push
lods
pop
es
dec
arpl
sub
out
push
ret
jmp
cmp
test
mov
mov
pop
mov
jge
les
rcrb
rcll
test
data16
sahf
addb
mov
mov
xchg
std
jne
cmp
pop
ljmp
sbb
mov
ret
sbb
pop
dec
in
cmc
loopne
iret
xchg
sbb
mov
mov
mov
jg
and
aam
fs
pop
add
arpl
xorb
test
mov
adc
fidivl
shlb
scas
cmpsl
pop
fisubrl
dec
mov
pop
mov
mov
sub
in
pop
and
aad
cmp
mov
cmp
lea
nop
sbb
test
add
aad
jecxz
jmp
fimuls
sbb
inc
pop
mov
shl
or
mov
xchg
inc
jns
lds
dec
shrb
xor
out
add
rorl
ss
pop
or
ficomps
insb
inc
gs
sub
lahf
cmpsl
out
inc
add
push
jg
xor
data16
pusha
fiadds
jp
outsb
dec
popf
mov
ja
addr16
in
mov
sahf
cmp
push
mov
cmpsl
ds
sub
sbb
test
push
ret
cmp
iret
insl
and
xchg
add
push
mov
sub
pop
xchg
int
nop
incb
mov
inc
pop
jl
out
sbb
orl
pop
cmc
push
fnstcw
push
setp
add
sbb
roll
dec
jo
sub
ret
shr
daa
cmp
or
add
mov
test
inc
adc
mov
aaa
jecxz
js
mov
or
mov
mov
mov
mov
lret
pop
test
fldl
movsl
push
cwtl
orb
int
xlat
mov
cmpsb
daa
pop
and
mov
add
subb
in
repnz
jo
sbb
push
lods
or
insl
jg
imul
js
clc
cmpsl
rclb
mov
push
cs
jb
push
dec
pop
cwtl
cld
lods
popf
mov
shlb
fdiv
mulb
andb
lods
and
aas
lahf
mov
leave
sbb
inc
fwait
mul
pusha
pop
cmp
mov
cld
jle
aas
lock
hlt
sbb
rolb
fcmovnu
add
add
imul
jnp
ret
jp
add
jp
xchg
js
xor
xchg
adc
cmp
into
ss
jb
outsb
pusha
test
xchg
add
stc
push
es
mov
clc
jns
mov
jb
fimull
cmp
adc
inc
lahf
adc
dec
fstps
sub
cli
hlt
ljmp
add
mov
fdiv
in
pop
movsl
xchg
push
call
out
or
pop
rcll
std
pushf
add
xor
sub
push
mov
testb
test
or
adc
adc
sbb
mov
cmpsl
cwtl
and
inc
sub
sbb
adc
ja
inc
cmp
adc
or
jnp
notb
hlt
into
aaa
shlb
aam
xor
subb
jo
rclb
nop
mov
push
adc
cmpl
jp
std
pop
std
fistps
pop
mov
xlat
xchg
jl
sbb
aaa
addr16
push
pop
sub
jns
or
push
jle
pushf
lods
aas
xchg
or
push
push
ja
test
xchg
sub
mov
call
imul
push
shll
lock
out
out
jle
repnz
mov
jecxz
test
jbe
lret
lds
rcll
mov
inc
xchg
lods
iret
testb
push
jno
flds
mov
call
addr16
loop
fstl
loop
loop
gs
sub
xchg
cmp
mov
popa
adc
mov
or
loop
pop
inc
pop
push
push
loop
out
add
decl
cmp
mov
jp
add
jb
pop
pushf
sti
mov
fcmove
pop
cltd
mov
mov
mov
adc
xor
fs
loope
xor
adc
and
pop
pop
cmp
inc
ret
out
mov
ficoms
xchg
pop
insb
pop
jno
gs
rcrl
jo
lds
mov
aas
lcall
lods
jo
jbe
jno
lcall
xchg
movsb
ja
ret
sbb
rcll
pop
mov
jnp
sbb
push
cmp
cltd
or
and
dec
test
inc
pop
mov
int
and
aas
fnsave
xchg
sbb
cmp
lds
outsl
and
jp
mov
das
xor
in
leave
mov
xchg
jg
jne
clc
arpl
mov
scas
dec
inc
sbb
dec
lcall
jb
jmp
jl
inc
mov
sub
xchg
xchg
leave
int
sub
or
mov
add
and
add
mov
cmp
test
test
inc
in
xchg
scas
xchg
sub
sbb
xlat
cmp
dec
neg
sti
add
rolb
cmpsb
std
push
aas
inc
mov
pop
add
loopne
das
in
mov
sbb
iret
mov
mov
enter
movsl
mulb
push
test
lods
fcmovnb
pushf
loopne
call
jae
movsl
mov
cmp
mov
push
cld
leave
popf
mov
in
cli
mov
dec
into
dec
pop
inc
push
mov
pop
and
and
adc
in
in
inc
adc
push
les
push
sub
sub
xchg
mov
js
pop
push
xchg
scas
sub
or
jge
repnz
xor
shll
xor
jnp
pop
inc
dec
pop
sbb
outsl
xor
and
adc
mov
mov
sahf
in
inc
or
arpl
and
ja
inc
js
je
test
dec
ret
lods
arpl
adc
loope
cmp
fs
ds
scas
pop
out
pusha
stos
js
dec
pop
xlat
fmull
cltd
incl
fucomi
or
pop
hlt
and
jns
jbe
ja
add
cmc
jecxz
out
lods
push
sub
push
and
mov
jle
cld
lret
ss
sub
or
mov
or
and
addl
cli
nop
pop
or
xchg
dec
in
cli
mov
mov
nop
pop
pop
add
mov
imul
xchg
adc
push
mov
cltd
dec
scas
adc
mov
jbe
sahf
or
xor
add
cmp
mov
shl
arpl
inc
or
jl
or
pop
pop
stos
sti
adcb
lock
js
adc
jp
mov
ja
mov
das
inc
inc
xchg
adc
lret
sub
data16
jle
and
mov
daa
xchg
insl
jns
incl
arpl
push
sub
mov
int3
shlb
rcll
mov
mov
imul
cli
pop
jg
loop
jmp
push
in
pop
inc
dec
icebp
mov
dec
pop
mov
mov
or
or
je
andl
scas
shrb
adc
shll
mov
mov
repnz
pop
sbb
add
jo
cmp
in
jecxz
movsl
pop
stos
cwtl
mov
shlb
dec
sub
loope
pusha
mov
ret
popa
pop
adc
jge
lods
sub
mov
pop
push
out
inc
jge
outsb
daa
pop
jp
daa
out
sub
jmp
dec
dec
ret
addr16
pop
dec
test
icebp
jae
lret
pop
adc
scas
mov
not
pop
and
xchg
scas
xchg
hlt
aad
je
xchg
mov
jg
push
xchg
push
xor
test
mov
daa
rcr
dec
outsb
mov
mov
cld
icebp
xchg
lret
imul
stos
xchg
add
lock
sbb
in
mov
sbb
xchg
faddp
jp
push
stos
insl
push
cmpl
bound
enter
fcomps
cli
xor
pop
cmp
xchg
mov
mov
mov
lahf
adc
lods
sub
push
sub
adc
imul
test
mov
dec
ret
pop
stc
push
add
loope
push
loopne
sub
add
aam
aad
loop
leave
mov
loopne
xchg
lret
pop
addps
nop
iret
fs
mov
cmp
fidivl
push
add
inc
movsl
shl
jl
xchg
and
push
mov
xor
fists
pop
aam
xchg
jo
dec
or
out
negb
inc
cltd
jne
adc
jle
push
add
sub
xor
mov
or
sub
xor
sbb
lea
adc
stc
xchg
inc
or
les
mov
pop
and
jg
test
mov
rclb
or
mov
cs
aas
not
out
pop
shrl
nop
sub
add
cmp
shlb
jns
arpl
lret
loope
nop
pushf
xor
inc
sbb
lcall
je
mov
in
imul
rclb
inc
pusha
xorb
xchg
mov
adc
cmpsb
pushf
roll
mov
fisubrl
lods
xlat
sub
divps
jl
ljmp
and
mov
fs
pop
and
mov
adcb
mov
pop
jo
imul
stos
push
sbb
push
add
cld
movsb
out
ds
into
std
lret
jmp
clc
es
addr16
and
cld
shlb
push
incb
add
lret
lock
pop
xlat
and
adc
and
loopne
and
jge
ja
shll
mov
or
test
pop
subl
loop
ds
add
test
arpl
adc
lcall
and
sub
leave
jno
push
xor
jno
stc
or
scas
fstps
aam
test
mov
into
les
jp
cmpb
lock
pop
imul
rolb
stos
ror
xor
pop
add
mov
neg
and
lret
sbb
into
xchg
push
xor
nop
icebp
out
jbe
loope
add
lcall
add
rol
inc
xor
sub
adc
dec
pop
jb
jo
xor
xor
shll
add
pop
fnstsw
cmp
mov
lods
lret
sbbl
cmp
in
mov
popf
outsl
xor
mov
repz
xor
ljmp
sub
xchg
xchg
jp
or
test
sub
mov
jl
int3
lods
cmpsl
jmp
push
sub
xchg
movsl
xchg
out
cmp
es
sbb
aaa
add
mov
out
pop
jmp
jne
dec
pushf
dec
outsl
into
cmpsb
imul
aaa
in
mov
insl
xor
ja
mov
out
pop
fxch
cmpsl
ss
and
mov
out
sub
scas
dec
lfs
cmp
mov
test
mov
cmp
jp
sub
push
pop
fs
shr
ds
dec
outsb
scas
and
jg
filds
inc
roll
mov
pushf
push
mov
rcr
sbb
pushf
out
scas
adc
rcrb
jmp
int3
or
cli
adc
jo
jg
aas
loopne
add
cmc
jg
mov
jnp
jbe
or
push
xor
xchg
adc
into
test
enter
cli
inc
jae
xchg
xchg
es
in
ljmp
sbb
mov
jge
mov
insb
jne
mov
jg
mov
xor
mov
push
sbb
fs
lock
mov
outsl
add
and
inc
cmp
out
fcomip
and
xchg
xchg
bnd
cmpsl
push
jg
fistl
cmc
cmp
test
push
rcrb
mov
repnz
xchg
dec
pop
aad
push
adc
xor
xchg
pop
sbb
dec
es
loope
jge
loop
testl
push
ja
addr16
sub
les
int
popf
lcall
sub
xor
mov
fstpl
ds
xchg
divl
mov
cmp
test
into
shl
mov
fs
dec
adc
aam
insl
mov
popf
cmp
lods
ss
repz
enter
xor
out
repnz
mov
inc
push
sub
push
xorb
jbe
and
filds
rcrl
sarl
push
adc
jae
or
add
inc
pop
cmpsl
adc
es
inc
mov
out
adc
dec
or
pop
push
jno
pop
mov
push
xchg
in
cli
cmpsb
and
lret
daa
mov
xor
aaa
cmp
leave
fdivl
xor
clc
mov
mov
mov
push
test
popa
xor
pop
adc
jmp
xor
sbb
int3
mov
adcl
fcom
jl
stos
mov
push
nop
xchg
adc
and
andb
jg
dec
and
adc
mov
adc
jecxz
mov
pushf
dec
push
mull
push
cmp
or
mov
adc
mov
xchg
sub
pop
dec
fstps
lds
xchg
pop
jae
jnp
aad
fldenv
ljmp
inc
pop
pop
push
roll
pop
mov
or
jns
mov
aam
mov
iret
pop
mov
xchg
mov
decl
mov
movsl
das
fstpl
inc
push
int
inc
mov
lods
mov
cmp
cmc
cmp
add
xchg
mov
js
and
sub
cmpsb
pop
xchg
test
das
and
lahf
out
mov
sbb
jle
or
lcall
push
mov
rcr
pop
cld
mov
sbb
idivl
mov
je
es
jge
movl
sub
mov
push
call
push
sub
es
ljmp
and
hlt
cmp
jp
in
cli
jns
cmp
jmp
pop
inc
fstps
nop
jns
stc
add
dec
mov
into
mov
dec
frstor
add
xlat
cmpsl
arpl
jo
frstor
stos
add
mov
jle
push
scas
xchg
rcr
xchg
lock
mov
out
hlt
test
inc
sbb
hlt
lret
shlb
push
mov
dec
jmp
out
inc
fistps
cmc
jg
inc
and
jle
cltd
mov
repz
mov
out
jns
out
push
hlt
lret
cmp
xchg
aaa
and
shlb
ret
mov
arpl
inc
movsl
lods
stos
sub
xchg
sahf
in
and
imulb
arpl
test
jo
fmul
push
ret
or
repz
dec
add
subl
dec
sub
sub
jg
rorb
std
out
imul
rcl
sub
dec
mov
movsb
or
xor
movsl
jno
pop
lock
int
icebp
sub
dec
pop
nop
or
pop
or
push
sub
cmpsb
or
inc
icebp
jecxz
cwtl
lods
mov
sub
mov
jl
fisubrs
adc
ds
jge
sbb
add
into
call
push
js
push
push
push
movsl
jb
les
cmc
rorb
lods
jmp
rol
inc
popa
popf
mov
fld
or
fcomps
cmp
mov
jl
xchg
sbbl
pop
cmp
andl
aaa
ss
fisubs
enter
xor
push
ss
push
mov
adc
sub
mov
mov
enter
and
mov
xchg
mov
fldt
jle
dec
dec
in
stc
insl
xchg
push
rcll
mov
ffree
ljmp
jg
sti
shr
shrl
mov
test
inc
xor
jl
mov
inc
outsb
adc
gs
clc
jmp
sbb
fmull
call
insl
in
iret
jmp
dec
sti
xor
xchg
test
call
popf
call
cmpsl
idivl
cmp
xor
cltd
pop
cmpsl
repz
inc
push
pusha
and
xor
push
cwtl
mov
jp
mov
sub
sub
pusha
jno
clc
push
mov
push
mov
nop
cli
insl
mov
push
and
cmp
std
loopne
mov
push
repz
lock
push
pusha
xor
jae
dec
pop
xchg
xor
call
outsb
fsubrl
dec
andl
dec
pop
or
fs
jae
lahf
ljmp
out
fstps
inc
lret
flds
out
aas
sbb
ret
adcl
cli
or
xor
cmp
mov
sahf
push
dec
fnstenv
test
xchg
push
fsts
dec
push
out
and
lcall
scas
jbe
rorb
cmp
push
loopne
aaa
leave
movsl
fidivl
push
or
out
test
les
cmp
mov
imul
push
iret
push
jmp
cmpsl
add
sub
push
sbbb
xchg
aad
psadbw
xor
enter
inc
add
jns
outsl
push
xor
test
inc
dec
push
inc
inc
out
test
rcrl
dec
pop
xchg
in
in
pop
mov
sub
out
fwait
loop
lcall
gs
lret
jmp
mov
push
cmp
pop
adc
xchg
sub
movsb
insl
push
dec
test
flds
cmp
xchg
bound
out
filds
aad
shrl
fwait
pop
test
add
adc
shlb
mov
mov
jo
fldt
cmpsl
dec
add
addr16
test
push
jle
cmp
xorl
loope
test
mov
out
pop
pop
and
loope
mov
inc
sbb
push
repz
sbb
jne
enter
test
inc
movsb
jl
push
push
push
data16
arpl
in
das
mov
mov
ret
mov
dec
jecxz
cmp
cmpsb
push
lods
data16
repz
sbb
mov
xchg
fwait
inc
cmp
in
jmp
aad
lds
mov
stos
into
sbb
imul
pop
mov
insl
mov
fistps
fadds
mov
jns
and
das
in
push
xchg
rcr
jbe
fsubrs
sub
mov
cltd
movsl
cmp
jae
inc
std
jl
cltd
movsl
cmp
les
xchg
inc
mov
or
pop
test
mov
mov
xor
push
cs
jne
out
cli
push
mov
adc
test
xor
mov
lea
dec
ljmp
jne
mov
pop
jo
fsts
outsb
jge
push
mov
pop
pop
inc
ljmp
xchg
push
pusha
inc
push
jns
ss
test
xlat
jecxz
sbb
sbb
dec
bound
cwtl
ja
xchg
dec
ret
mov
aaa
jl
out
jo
inc
iret
add
es
lock
xlat
cmp
aas
gs
sub
push
jle
jae
jno
xor
outsb
and
jnp
push
add
xlat
push
bound
dec
ja
arpl
dec
pusha
cmp
mov
fldl
pusha
out
es
test
rcll
mov
dec
les
pop
push
sub
ljmp
mov
fwait
clc
ds
or
xchg
and
and
or
jmp
jbe
or
das
stc
mov
lret
push
sub
rcl
arpl
sbb
sarl
mov
iret
mov
fwait
mulb
lcall
ds
push
imul
xchg
sarb
mov
push
mov
int3
sbb
lcall
in
push
aas
sub
lods
mov
fdivs
enter
rolb
notl
cmpsb
xor
jmp
iret
sub
mov
cmp
mov
jne
fisttpll
loopne
pop
mov
adcl
pop
cltd
loop
sbb
dec
fs
mov
push
lret
stos
jne
int3
or
std
sahf
pusha
roll
or
stos
dec
ret
push
xchg
push
mov
mov
cli
js
test
mov
mov
rorl
clc
mov
dec
add
aas
pop
inc
clc
cmp
mov
cmp
sbb
shl
xchg
imul
rcr
ljmp
dec
testb
add
push
std
lock
push
mov
xchg
rolb
inc
push
movsb
sub
outsb
lock
and
lock
mov
and
push
insb
xchg
xchg
mov
push
sbb
xchg
pop
sbb
cwtl
push
lret
dec
leave
mov
or
stos
ljmp
jne,pn
iret
push
in
lret
fsubl
fwait
push
cmp
and
sub
in
push
inc
mov
mov
aad
out
xchg
inc
mov
roll
mov
mov
xor
iret
jbe
inc
fdivrs
outsl
add
sbb
ja
xor
mov
add
int
loope
les
stos
inc
in
xor
mov
neg
push
xor
divb
push
repnz
dec
rcrb
dec
mov
outsl
jmp
test
lcall
push
stos
dec
mov
push
out
cvttps2pi
repz
inc
lock
sbb
in
xor
pop
in
call
shr
push
test
lods
jl
pop
mov
in
notb
xor
ds
and
jbe
ja
test
bound
scas
xchg
sub
in
lret
loopne
in
ljmp
jne
insb
loopne
sbb
add
sti
mov
mov
enter
pop
ror
push
testb
or
and
add
adc
pop
jmp
stos
ds
xlat
pop
jle
xchg
pop
into
sub
push
push
lret
push
jl
lea
xor
or
dec
jecxz
pushf
rdpmc
xchg
outsl
push
cmp
xor
xchg
je
std
in
rcll
setb
dec
cmp
pushf
xchg
mov
mov
sub
sub
iret
pop
sbb
or
negb
dec
cld
imul
jmp
mov
sbb
jns
lds
jmp
xchg
movsl
rolb
mov
dec
aam
xor
cmpsb
jl
inc
xor
lock
pop
dec
iret
cmp
xlat
mov
add
clc
mov
shll
je
sub
flds
stos
mov
out
cltd
sbb
repnz
xchg
in
mov
arpl
call
cwtl
into
test
daa
dec
jb
lahf
aas
lock
mov
or
test
pusha
adc
jno
xchg
push
push
dec
call
mov
insl
jae
mov
sbb
jp
into
or
mov
jl
lods
or
jnp
mov
pop
pop
ljmp
bound
pop
iret
and
lds
ljmp
addr16
cltd
ljmp
jns
out
insl
in
inc
cli
mov
pop
pop
jns
movsl
sub
mov
popf
xor
mov
mov
jle
xchg
jb
xchg
and
loope
in
sub
push
pop
xor
xchg
stos
jp
push
fsubrs
or
fidivs
push
or
sub
das
nop
sub
mov
adc
pcmpeqw
pop
aas
mov
int3
jl
lods
pop
mov
or
adc
jmp
push
sub
xchg
mov
mov
cmp
hlt
imul
pop
push
fcoml
movss
mov
cmpsb
mov
sub
push
cld
adc
push
hlt
xchg
dec
dec
aad
jb
sub
adc
xor
jp
jle
fisttps
out
sub
pop
xor
or
xorb
fimuls
mov
dec
push
dec
in
rep
scas
adc
mov
test
or
dec
sub
data16
lock
fnstsw
test
fnstenv
std
jle
lcall
jmp
sub
out
pop
out
sbbl
cmpsb
out
inc
mov
fisubrl
leave
scas
sub
jns
pop
fstps
xchg
aas
xchg
bound
fmulp
jmp
stos
xchg
mov
push
ret
pop
pusha
jne
cmp
inc
outsl
dec
into
into
add
mov
fwait
shrl
mov
aad
gs
into
jge
lea
lods
pop
arpl
pusha
adc
adc
push
fs
cmp
push
enter
mov
push
aas
lret
xchg
scas
ret
adc
adc
stos
aaa
xchg
inc
sti
fsubrs
xlat
mov
xchg
out
push
jl
insl
fwait
loopne
aad
sbbb
and
sub
mov
cmp
cmpsb
pop
lret
outsl
lahf
rorl
aas
cmp
pop
pop
bound
pop
mov
rolb
cmp
sbb
and
and
pop
aam
sub
push
ret
dec
and
lock
test
xor
scas
loop
dec
insl
mov
xchg
movsb
repz
push
lahf
gs
movl
lods
mov
pushw
aad
pop
int
pop
adc
and
xor
bound
sub
cs
imul
jmp
jp
imul
dec
lret
ds
shlb
mov
repnz
movsb
inc
xor
mov
jp
enter
int
or
add
movsb
xchg
rcll
arpl
enter
xor
hlt
xlat
hlt
dec
mov
mov
nop
inc
out
pushf
push
xor
push
mov
scas
arpl
outsb
mov
or
pop
rol
dec
sub
pop
jo
pop
cmp
lcall
dec
push
aam
fsubrl
je
out
xchg
xor
lock
cmp
push
sub
stc
and
inc
jle
push
and
inc
xor
addr16
out
in
sub
adc
mov
and
addl
je
lods
and
adc
into
push
push
adc
in
adc
pop
aas
jne
sbb
aad
pop
dec
cmpsl
xchg
int
jecxz
iret
jae
test
ljmp
ljmp
pop
cli
dec
dec
mov
sbb
or
add
call
jg
out
push
jg
mov
out
fsubrs
repnz
gs
or
adc
xchg
div
int
dec
cmp
out
cli
icebp
je
fs
dec
xor
les
icebp
jl
adc
lcall
sbb
imul
adc
mov
ja
inc
std
shlb
and
call
and
jnp,pn
cs
sbb
out
stos
ja
push
and
jo
jge
popa
movsl
ret
or
add
adc
adc
out
push
pop
jns
das
dec
pop
sbbw
push
inc
inc
cmp
test
cmp
jbe
loope
add
enter
or
jl
imul
adc
xor
inc
out
push
cmc
sahf
js
jecxz
ret
push
out
jnp
mov
aam
jmp
fnstsw
data16
loop
fwait
cmp
loopne
fadd
int
and
or
sbb
cmp
out
cld
rorb
jmp
jmp
cmp
mov
stos
add
sub
jo
inc
push
and
mov
fsubrp
mov
sbb
setne
jno
fadd
mov
inc
push
imul
mov
cmc
pop
outsl
lea
jb
testb
mov
sub
movsl
aas
jo
mov
dec
lock
add
ret
outsl
adc
add
mov
es
push
rcr
dec
enter
xor
xor
xor
jb
pop
or
fcomps
call
and
sbb
add
mov
fwait
ljmp
push
cmpsb
subb
in
xchg
adc
jg
and
mov
mov
lcall
pushf
xchg
movsl
repz
cmp
ret
idivb
movsb
jns
mov
jbe
repz
in
cmp
xchg
fwait
add
jne
inc
mov
call
pop
and
mov
das
and
push
mov
out
js
jle
imul
sbb
jp
cmp
aad
iret
add
test
clc
push
je
xchg
movsb
lahf
roll
cmp
aaa
daa
push
pop
dec
call
pop
insb
sbb
cmpsb
mov
js
rclb
scas
loope
pop
cmp
mov
inc
and
sbb
mov
loop
pop
dec
test
aas
mov
xchg
and
mov
in
inc
pop
jl
mov
jp
popf
int
mov
dec
xor
es
outsl
repz
or
cmpsl
mov
das
test
pop
mov
std
aas
insl
stos
xor
push
sub
arpl
push
mov
scas
sbb
lcall
mov
sahf
inc
pop
jne
pop
inc
fists
les
jmp
jp
pop
movl
mov
in
sti
adc
addr16
scas
mov
xchg
ja
or
push
xchg
das
push
sub
nop
dec
in
fisubrs
fs
cmp
xchg
loop
jo
fiaddl
adc
push
popa
jge
int
push
inc
cmp
push
cmpsb
push
push
push
jmp
jno
cmp
cmp
pop
mov
add
test
push
aam
push
std
pop
jg
xchg
mov
xor
jl
xchg
shrb
out
pusha
pop
sub
xlat
pop
push
pop
aas
jecxz
xchg
stos
icebp
adc
clc
fisttpll
mov
test
mov
icebp
repnz
mov
mov
ja
xor
aam
les
xor
lcall
call
mov
push
mov
sarl
jbe
dec
mov
dec
mov
and
rcrl
ret
xor
adc
loop
push
xor
or
fimull
pop
mov
jns
mov
in
rcl
inc
test
dec
outsb
or
xor
xor
xor
shl
data16
cmp
repz
sub
sub
insb
jb
mov
out
ret
add
neg
or
sbb
lock
js
mov
test
mov
push
fldenv
imul
sbb
push
and
or
lahf
lock
out
sub
mov
scas
adc
insl
aas
dec
push
xor
jmp
and
cmpl
add
dec
cs
mov
jne
popa
pop
cmpsb
mov
shl
and
imul
aaa
fsubs
xchg
xchg
xchg
movsb
add
pop
mov
lret
xor
pop
dec
popf
adc
mov
rolb
rcr
mov
lcall
hlt
ss
jge
fwait
push
adc
sub
adc
jg
mov
jecxz
inc
lock
lds
adc
es
or
aas
sub
cltd
mov
or
and
outsb
adc
arpl
sbb
insl
aad
jmp
lds
cmp
bound
and
int
dec
jle
das
pop
cmp
push
push
pop
out
rclb
jp
jne
inc
loope
out
cmp
mov
imul
xor
addr16
sbb
sub
dec
loop
loope
xor
pop
jge
icebp
and
mov
mov
aaa
inc
dec
mov
sbb
pop
aam
lods
xchg
mov
daa
sbb
subb
ja
mov
sub
in
mov
xor
out
jmp
imul
call
jecxz
and
pop
test
add
mov
mov
dec
xchg
test
pusha
call
jmp
mov
pop
insb
xlat
xor
inc
in
xchg
pop
jae
jne
rorb
data16
xchg
ds
adcl
push
inc
scas
out
inc
dec
sbb
add
aas
idiv
data16
mov
popf
retw
ret
jae
pop
jp
setae
xor
or
ror
cltd
sarb
adc
push
or
add
dec
outsb
push
repnz
and
test
lret
repnz
mov
int
adc
or
aad
divl
mov
push
test
imul
aas
in
add
jae
inc
mov
add
push
jae
jp
icebp
cmp
sub
roll
cmp
push
je
jp
imul
xchg
xor
jnp
into
xchg
pop
pop
push
inc
ficoms
lret
pop
ljmp
dec
in
neg
jecxz
jl
cwtl
mov
jecxz
popa
dec
ds
inc
inc
sub
dec
rol
cld
cmc
insl
inc
negb
das
pop
call
aaa
pop
xchg
and
mov
jno
xor
fsubl
sub
adc
addr16
movzbl
push
mov
loope
test
sub
into
lret
push
sub
push
jg
ficomps
out
sub
pop
jae
sub
xchg
mov
jne
and
sahf
mov
dec
popf
pop
adc
sub
nop
dec
jne
mov
call
test
cmc
pop
mov
mov
dec
mov
sti
popa
push
push
rorb
test
aad
in
in
xor
gs
popa
out
and
repz
fwait
mov
and
add
movsl
push
xor
leave
sahf
add
xchg
inc
add
xchg
lret
jno
nop
in
mov
lds
pop
rcll
adc
cmp
imul
add
mov
push
loope
aaa
push
sbb
xchg
in
mov
xchg
frstor
and
pusha
dec
cmp
out
and
enter
scas
ljmp
repz
adcb
lods
leave
aam
adcl
rcrl
je
test
mov
jno
adc
jl
mov
sub
repnz
jmp
outsl
popf
push
stc
rorb
xchg
aad
cmp
xor
pusha
test
xchg
fcomi
xchg
pop
roll
loopne
ss
mov
test
mov
xchg
mov
sar
mov
dec
call
jne
add
aam
hlt
inc
pop
and
leave
mov
mov
sub
mov
aaa
dec
inc
int
mov
xchg
pop
inc
mov
aas
push
jo
shrb
jnp
clc
and
add
and
iret
insl
xlat
lret
out
jns
jmp
mov
adc
fstpt
enter
inc
mov
mov
sub
arpl
lock
fcmovbe
popf
fstps
pusha
fwait
out
add
cmpsl
imul
jecxz
repz
sbb
mov
stos
cmp
jg
xlat
scas
testb
inc
and
or
pop
sbb
push
daa
mov
mov
popf
xlat
push
pop
subb
fidivrs
xchg
cli
add
pop
sarb
sub
xchg
ja
les
insb
pushf
lds
in
rorb
fstl
xchg
adc
xlat
jbe
xchg
mov
mov
sub
pop
jb
inc
in
leave
ss
jmp
and
push
fisubrs
iret
in
or
cmpsb
sbb
aam
adc
lret
adc
lret
aaa
xchg
adcb
push
testl
repz
dec
pop
fisttpl
push
les
dec
jl
lret
test
ret
jno
fs
leave
and
jle
insl
dec
test
out
int3
push
pop
cmp
pop
js
sub
adc
jge
push
push
fs
in
mov
jae
jmp
cs
cmp
mov
add
and
lahf
add
xchg
xor
aas
dec
mov
sbb
rcrl
sbb
xchg
into
idivl
popl
nop
add
std
lahf
movsb
sub
loopne
xchg
push
mov
xorl
jge
and
cmp
aam
mov
fdivl
push
test
sub
push
or
or
mov
movsl
lock
sbb
scas
ljmp
or
inc
dec
int3
xor
mov
loop
or
jne
add
mov
sbb
dec
imul
lea
imul
mov
mov
mov
imul
jmp
ljmp
push
mov
xlat
adc
fisttpl
mov
push
outsb
add
adc
ret
fidivs
int3
inc
cmp
mov
mov
cmp
std
xchg
pop
sarb
jmp
xor
adc
pop
sbb
stc
mov
cmp
je
xchg
loop
lahf
add
insl
add
jno
enter
sbb
mov
adc
sbb
jmp
call
push
sub
in
cltd
int
cmpsb
and
push
adc
int3
call
mov
negb
xchg
and
push
xor
mov
dec
jo
xor
icebp
mov
or
out
xor
inc
mov
in
mov
data16
leave
aam
mov
jne
dec
imul
mov
imul
mov
mov
xchg
fimuls
mov
shl
cmpsl
cmc
inc
push
xchg
push
int
rolb
int
rcrl
mov
sub
jle
bound
subl
aad
loope
jle
dec
and
or
call
in
add
sub
add
adc
jp
xor
cmp
jae
das
outsb
sub
popa
call
dec
sahf
int
sbb
test
push
int3
push
cmc
cmp
lret
fisttps
pop
mov
imul
pusha
sub
cmp
xchg
fst
xchg
std
mov
scas
lret
jne
sub
pop
dec
jmp
rolb
packssdw
sub
lret
in
adc
popf
out
sub
dec
mov
fisubl
push
mov
jecxz
outsl
out
xor
add
aaa
fistpll
in
adc
and
in
jmp
inc
mov
das
push
cmpsb
loopne
xchg
mov
sub
shufps
stc
leave
mov
cmpb
scas
add
test
popf
add
lods
mov
gs
and
mov
xlat
pusha
push
cmpsl
and
jns
pop
ljmp
outsl
xor
mov
mov
cli
movl
or
inc
ss
testb
ss
adc
fcomi
hlt
adc
int3
mov
mov
add
aam
mov
push
dec
vmovntpd
mov
mov
ss
enter
cmc
fldt
xchg
and
outsl
cmc
aaa
mov
mov
jnp
xchg
mov
pop
pop
popf
fists
rcll
in
and
lret
call
out
push
dec
jns
es
add
push
mov
int3
in
ja
aaa
repz
cmp
adc
out
adcb
pop
ss
rclb
cmpsb
cmp
sbb
dec
es
xor
pushf
add
add
sbb
xor
out
xor
negl
jle
add
adcb
adc
push
and
sbb
movsl
lret
push
pop
in
sub
or
imul
push
cli
loope
stc
xchg
sub
mov
jnp
lret
ja
cmc
test
pop
dec
roll
ffreep
inc
inc
cmp
loopne
lahf
cmpsl
pusha
jns
shrl
fsubs
stos
mov
das
into
and
xchg
and
cmpsl
lds
inc
and
push
sbb
lock
jmp
daa
aam
int
shlb
pop
cld
push
or
xor
gs
sub
idiv
dec
int3
lock
push
decb
inc
mov
insb
mov
add
imul
mov
inc
in
test
in
enter
or
cmpl
mov
pop
ljmp
cs
pop
pop
loope
push
adc
pop
ficoms
inc
or
out
lcall
add
iret
cld
stos
jecxz
cmp
pop
rorb
xchg
orl
xlat
inc
mov
fwait
jno
in
xor
sbb
push
push
xorb
mov
and
or
or
mov
aad
movsb
jne
insl
push
xchg
jl
fucomip
dec
xor
outsb
cmp
ret
js
cmp
push
stc
lock
out
or
jbe
mov
xor
pop
sub
scas
mov
add
and
rol
push
mov
add
jns
das
mov
cltd
mov
xchg
jg
xchg
leave
mov
in
outsl
hlt
rclb
cmpsl
sti
xorl
jbe
insb
jmp
movsl
adc
fdivrs
push
repnz
pushf
jmp
push
sbb
out
and
jecxz
cltd
int3
lret
sub
arpl
cmp
jne
mov
lahf
sub
mov
pusha
jge
test
std
mov
jge
jnp
ficoml
lock
scas
dec
and
inc
leave
cmp
popa
inc
push
clc
and
mov
xchg
fists
mov
sub
mov
pop
mov
rolb
scas
mov
test
dec
xchg
mov
arpl
and
mov
sbb
aaa
sbb
repz
fiaddl
sar
arpl
mov
pop
call
add
rolb
xor
lods
and
jle
loop
adc
sahf
fwait
mov
ret
popf
sahf
in
xchg
mov
dec
stos
loopne
and
ds
scas
add
testb
adcl
dec
mov
inc
mov
add
add
xlat
loope
mov
or
into
xchg
mov
sbb
hlt
jno
adc
inc
push
mov
pop
aas
movsl
mov
imul
xchg
lock
jecxz
mov
sub
stos
ja
lea
pop
jo
sub
jo
xchg
movsl
sbb
push
jns
sbb
in
lea
jbe
sbb
sbb
dec
fildll
cli
adc
xor
inc
push
xchg
or
push
ja
jb
inc
and
in
rclb
or
lret
imul
sbb
mov
rolb
xchg
loope
jno
cmp
sub
cmc
or
add
cmp
mov
test
ficoms
pop
arpl
pop
cmp
pop
pop
shll
jecxz
lret
fists
pop
cwtl
jne
hlt
push
jl
push
dec
sbb
mov
out
getsec
icebp
mov
mull
sti
mov
mov
jge
xor
call
aad
fs
lahf
inc
cmpsl
sbb
ret
jnp
adc
xor
das
cmp
xchg
xchg
inc
lret
enter
adc
adc
movsb
scas
shlb
mov
pushf
call
mov
fdivl
sub
pop
mov
push
mov
mov
cwtl
out
and
out
push
xchg
pop
cmp
rolb
sub
pusha
inc
test
call
sub
rcrb
xchg
jne
mov
or
push
mov
xchg
subl
gs
pop
ret
lods
inc
mov
clc
push
rorb
roll
mov
and
rclb
in
mov
lcall
push
push
dec
sbb
cmp
fistps
pop
adc
cltd
dec
loopne
cwtl
dec
jns
in
sbb
shrb
or
xchg
out
outsb
dec
shlb
sti
lahf
leave
imul
out
jl
sub
mov
xor
mov
out
xchg
mov
sti
mov
fcomps
adc
add
es
clc
ror
mov
daa
push
push
aaa
ficoml
enter
mov
mov
mov
lret
push
push
sbb
xor
fs
scas
stos
inc
mov
pop
lock
jmp
imul
mov
rol
inc
in
xlat
mov
or
lods
loopne
sbb
adc
mov
movl
fwait
imul
fnsave
inc
jl
lock
push
sbb
rorl
pop
imul
mov
cmc
aaa
cmp
push
in
ja
imul
dec
data16
mov
pusha
sbb
push
scas
test
jno
in
ja
js
dec
jmp
sbb
sarb
or
pusha
in
pushf
call
ret
outsb
add
mov
inc
dec
xorl
pop
push
mov
mov
js
test
movsl
cli
inc
iret
push
sbb
movsb
mov
mov
sub
push
clc
stc
out
test
cmp
fscale
xor
imul
movsb
stc
push
loope
and
and
add
cs
jl
mov
test
sub
inc
in
imul
out
xchg
push
sub
das
mov
xchg
je
push
das
pop
add
mov
scas
in
imul
into
adc
cmp
les
mov
add
dec
in
xchg
sbb
xlat
testb
xchg
cwtl
and
fcompl
jle
test
mov
inc
and
add
pop
xor
jne
xchg
xchg
jne
hlt
inc
or
mov
adc
ret
js
add
shlb
fidivrs
add
jns
in
sbb
cmp
and
repz
hlt
dec
js
ret
jbe
add
iret
call
inc
push
and
adc
dec
fcmovbe
push
popa
js
cltd
inc
pop
dec
decl
adc
enter
repnz
or
or
mov
or
adc
cwtl
or
fnstcw
mov
xchg
fs
add
mov
pop
and
test
mov
inc
shrb
cmc
cli
push
jb
pushf
movsl
or
xchg
out
xorl
fucomp
jns
mov
inc
sub
std
inc
cmpsb
es
lret
add
inc
jne
xor
fwait
mov
dec
fnstenv
xor
sub
and
mov
mov
mov
inc
loop
pop
mov
xchg
in
xchg
mov
loope
dec
push
pop
inc
mov
mov
in
inc
shr
and
mull
imul
and
sbbl
inc
mov
aad
pop
aam
xor
insb
sub
and
and
push
lods
gs
ja
mov
mov
jecxz
mov
pop
or
in
fadds
shl
mov
push
xchg
or
jae
mov
scas
dec
dec
fucomp
mov
push
pop
ret
out
push
inc
push
rolb
bound
push
jbe
push
pop
pushw
adc
out
in
push
call
jge
insb
xor
sarb
and
xor
leave
mov
jp
and
test
fisttpl
pop
dec
jle
dec
xor
push
test
mov
lahf
pop
leave
push
cmp
xchg
sbb
lods
lods
jp
add
loopne
stc
sbb
std
out
push
int3
lret
test
push
jne
cld
add
mov
lods
push
test
inc
adc
lea
data16
stos
xor
jmp
sub
test
arpl
rcr
ss
cmp
mov
push
push
aas
daa
out
cmp
mov
push
sbb
jne
or
pop
sahf
mov
fstpl
sbb
cltd
jne
push
call
add
mov
cmp
mov
lcall
ret
mov
jmp
push
rolb
pusha
cwtl
test
shr
lea
cld
cmp
push
dec
cmc
sti
and
sarb
iret
jle
sbb
fdivl
xor
jo
push
hlt
lcall
int
xchg
addr16
in
imul
add
lds
and
mov
popf
sub
loopne
test
jg
sub
cli
shl
lahf
xchg
sti
pop
mov
cltd
xchg
lods
loope
or
mov
cmpsl
adc
and
mov
jge
icebp
pop
stc
pop
add
out
stc
fcoms
out
repz
shlb
shlb
cli
xchg
mov
jg
xchg
in
xchg
out
call
inc
inc
inc
iret
lret
fdivrl
ja
daa
sub
jmp
addr16
push
popa
fcmove
aaa
jle
clc
sbb
xor
stc
jne
xor
pop
xor
adc
jae
imul
aaa
out
sti
insl
push
and
leave
daa
jne
ret
add
insl
jg
ljmp
sub
sahf
push
int3
aaa
push
jge
xorb
or
and
mov
xchg
jle
mov
mov
inc
push
pop
sbb
cmp
jbe
jg
std
lods
test
jmp
or
push
push
jns
inc
xchg
jb
aaa
jbe
loop
jecxz
lcall
xor
add
movsb
and
pushf
test
fnstenv
outsl
inc
ret
pop
push
mov
cmpsl
pop
sbb
sub
dec
inc
imul
inc
adc
addb
mov
jne
xchg
icebp
ss
fstpl
decl
and
out
xchg
sbb
xchg
cs
add
icebp
jb
movsb
ljmp
xlat
mov
fwait
pop
pop
ret
js
ds
xchg
mov
jo
jo
dec
push
adc
cltd
pop
xchg
mov
xor
mov
cmp
and
adc
cmp
cltd
pop
repz
mov
je
xchg
xchg
dec
or
ja
into
cmp
fdivl
into
insb
xor
imul
and
xchg
pop
lcall
pop
and
stos
add
lds
bnd
adc
dec
pop
stc
dec
sahf
repz
stos
cld
add
call
mov
cmp
cmp
movsb
inc
addr16
sub
aas
adc
cli
out
cs
inc
fidivrs
mov
jmp
aad
in
iret
fdiv
push
pop
mov
mov
jne
mov
cs
cmp
inc
mov
xchg
rcrb
xchg
lret
jns
adc
mov
xchg
push
xchg
push
pop
rcrl
fsubs
mov
pop
insb
mov
dec
aam
std
inc
mov
daa
inc
ds
xchg
test
es
mov
cmp
xor
fwait
or
jb
xchg
pop
das
mov
sub
xorb
int3
outsb
add
pop
pop
bound
push
daa
mov
or
push
in
je
ja
aad
loopne
icebp
jg
cmp
push
xor
or
push
jno
adc
mov
or
push
push
test
jae
out
pop
push
add
nop
shll
fs
lahf
popf
repz
idiv
and
push
mov
xchg
nop
mov
rclb
lea
and
in
mov
pop
or
jl
js
out
js
in
dec
jge
shl
aad
icebp
xchg
idivl
ret
imull
ds
push
out
movsl
mov
mov
or
cmp
jbe
adc
adc
cwtl
sub
addb
dec
in
arpl
push
mov
mov
fsubrs
pushf
adc
jnp
xlat
es
lods
cltd
aad
stc
cmp
addr16
std
mov
add
les
jmp
cwtl
xor
inc
fcompl
popf
pop
lret
jmp
adc
stos
jge
stos
pop
imul
loope
rcr
gs
dec
jo
add
cs
in
or
and
mov
jg
repnz
pushl
xorb
inc
icebp
xlat
pusha
mov
insl
sti
pop
inc
xchg
and
jge
dec
mov
sbb
mov
cmp
mov
stos
jo
cmp
or
ja
cli
mov
xor
popf
mov
dec
or
repnz
cmp
xorb
mov
aas
fldl
loopne
lahf
pushf
pop
sbb
cmp
adc
or
inc
sub
dec
dec
mov
bound
repz
std
xchg
xchg
adc
and
movsb
cwtl
lahf
mov
pusha
inc
sti
loope
xchg
lods
mov
fildl
dec
lret
imul
jg
lds
push
mov
jecxz
pop
mov
mov
cli
mov
outsb
adc
adc
je
mov
jle
mov
or
dec
mov
or
fs
cli
imul
dec
push
je
push
sub
out
dec
jge
jl
popl
mov
enter
and
mov
jbe
aam
sbb
outsl
sahf
and
cmp
and
push
imul
out
jecxz
or
in
mov
jge
out
dec
sub
push
fisubrl
mov
mov
sbb
sbb
gs
and
aas
out
mov
cli
vpshufhw
in
ss
test
lahf
aaa
dec
xor
addl
push
enter
mov
xor
ja
lcall
loope
rorl
xchg
push
hlt
add
cwtl
cmc
mov
divb
in
mov
orl
call
aad
push
stos
cmpsl
push
clc
mov
mov
rorl
je
or
sub
leave
mov
enter
push
or
nop
out
adc
aas
out
movsl
push
movl
in
popa
push
hlt
pop
out
mov
insl
sub
mov
cltd
jbe
adc
mov
add
icebp
mov
js
stos
pop
divl
and
cs
arpl
ret
inc
mov
xchg
movsb
lret
movl
mov
shl
in
adc
pop
sysexit
mov
lret
sbb
dec
dec
cmpps
repz
stos
push
in
sbb
xor
fcoms
add
jae
add
push
popa
bound
xchg
and
mov
push
out
adc
sub
mov
xchg
imul
ss
and
adc
in
mov
fld
pop
sub
cmp
in
flds
ficomps
pop
sti
nop
ror
xor
popf
and
in
ds
mov
cs
xchg
in
push
sti
mov
in
inc
imul
mov
dec
jecxz
adc
xor
jns
jecxz
xor
cmp
or
incl
inc
xchg
jecxz
lcall
xchg
sub
inc
ret
lahf
movsb
jbe
inc
lcall
jl
and
xchg
shlb
je
mov
int
cld
call
icebp
push
stos
int
adc
sub
dec
gs
mov
jge
dec
out
push
xor
pop
int3
jl
inc
in
mov
pop
inc
in
jns
in
jmp
rol
out
sbb
push
add
jb
cmp
shlb
insl
jg
push
mov
sti
dec
or
mov
pop
lahf
iret
xchg
mov
inc
jo
scas
stos
xchg
mov
mov
cwtl
add
cld
sub
add
or
leave
je
xchg
inc
into
jb
xchg
push
mov
push
fwait
out
aas
popf
das
dec
leave
or
loop
sub
mov
xchg
mov
mov
in
xor
leave
mov
adc
jmp
int
xchg
sbb
mov
pop
mov
pop
and
mov
xchg
out
aam
cltd
sub
test
adc
sti
roll
lea
adc
loop
mov
pop
in
mov
sbb
and
add
das
sub
lods
lods
ljmp
cli
test
mov
stc
fistpl
xor
cmp
cmpsl
jmp
fisubs
sbb
outsb
xchg
mov
xor
gs
filds
in
addl
mov
fcoml
mov
xchg
push
cmp
daa
sub
in
mov
or
jge
cmp
cmc
dec
dec
mov
std
and
lods
clc
jne
iret
movd
imul
or
lods
stos
sbb
pop
data16
lods
jecxz
and
dec
cwtl
fnstenv
push
adc
dec
popa
sti
adc
adc
icebp
orl
fistl
into
ss
bound
or
xor
fsts
xor
test
push
sbb
outsb
fmul
and
and
test
arpl
loop
test
pop
xor
mov
push
sbb
cmp
dec
cwtl
testl
int3
divl
fistps
mov
jno
into
clc
adc
push
inc
enter
mov
pop
mov
bswap
or
int
cmp
cmpsl
dec
push
and
push
subl
xchg
jl
inc
fs
outsb
pop
pop
and
adc
or
cmp
and
xchg
push
or
dec
cmp
loop
out
jne
jecxz,pn
jge
out
push
dec
xor
cmp
jno
outsb
xchg
popa
or
pop
insb
cmp
cmp
xchg
push
jne
imul
lea
pop
push
icebp
mov
inc
addl
pop
mov
sub
xchg
es
in
ljmp
clc
xor
addr16
jnp
add
ss
jg
cmpsb
pop
xchg
sbb
cmp
pop
dec
ds
and
fbld
inc
in
pop
push
push
sarb
cld
xchg
fucomip
dec
adc
cmpb
jmp
inc
push
jl
fcoml
and
push
push
setl
cwtl
cmpsl
andb
popa
cmpsl
jbe
call
icebp
mov
popa
sub
xchg
stos
jne
or
sub
jns
pop
jne
sub
pop
js
inc
ljmp
adc
sub
lret
xor
push
push
mov
or
mov
inc
pop
scas
mov
ss
add
add
xchg
hlt
je
cli
idivb
inc
mov
sbb
xor
push
or
inc
jae
jp
add
test
call
sbb
fistl
mov
fisubrl
fwait
cld
xchg
push
jp
jb
cwtl
enter
orl
outsb
cs
nop
pop
fmull
sbb
divb
aam
mov
inc
pop
test
icebp
or
mov
or
icebp
adc
icebp
and
add
shrb
xchg
jbe
sub
mov
pop
bound
mov
stos
dec
mov
mov
or
pop
inc
shlb
cmpsb
in
and
push
mov
dec
sahf
pop
lcall
test
not
pop
dec
sub
ret
mov
outsb
or
cmpl
mov
cs
mov
xorb
aaa
call
jne
nop
cmp
xor
addl
adc
addl
fwait
cli
enter
pushf
mov
jl
jmp
push
lds
stos
jg
or
aam
push
mov
add
fcomps
out
je
mov
jmp
test
add
pop
rclb
add
lea
sti
into
pop
adc
mov
mov
add
push
mov
scas
jl
in
mov
shll
cmc
test
add
push
in
cmp
lret
cmp
aad
xchg
gs
push
stc
push
adcb
cwtl
fnstenv
jp
out
loop
andl
mov
adc
push
add
mov
mov
repz
out
scas
je
mov
push
sub
pop
xor
or
xchg
dec
cwtl
lea
jo
cmpsb
or
outsb
sbb
xlat
stos
xor
jne
insl
and
mov
push
mov
stos
adc
popf
sbb
hlt
imul
ja
sbb
repnz
cmpl
std
and
rclb
sub
and
adc
jnp
xor
fwait
in
int3
xchg
pop
inc
in
outsb
xchg
into
ss
idivl
xor
push
setg
fistl
xchg
jge
jmp
stos
int
icebp
cmpsl
adc
out
popa
push
push
xchg
ja
enter
in
imul
insl
mov
pop
hlt
repz
leave
mov
cmpsb
mov
push
out
cs
and
push
icebp
pusha
mov
xor
jns
fcomps
push
adc
add
cmpl
or
cmp
out
lret
sti
jae
jg
iret
test
test
insb
aad
and
rol
cwtl
iret
daa
or
xor
add
pusha
cmpsb
lcall
imulb
shlb
mov
js
xchg
mov
sbb
pop
or
mov
jae
mov
in
adc
fs
push
int
xchg
in
sti
ja
lock
ja
shlb
loope
jp
xchg
movsb
insb
mov
mov
in
hlt
mov
cmc
cmc
test
add
pop
xchg
pop
mov
js
dec
arpl
fdivrl
test
aad
jle
outsl
in
ja
cwtl
or
addb
cld
dec
jmp
push
xlat
movsl
jmp
or
out
lods
mov
popa
int
jmp
jns
jns
jp
pop
mov
icebp
es
xchg
lahf
aas
mov
ljmp
out
or
mov
inc
dec
xchg
pop
jne
lea
stc
ss
sahf
mov
xchg
incl
stc
ret
push
rol
cmp
inc
mov
or
leave
adc
adc
dec
mov
pop
mov
imul
fwait
ja
repz
call
dec
sahf
cli
aas
out
ss
shrl
ret
lret
pop
jecxz
je
push
fistpll
jae
aam
rcrl
mov
imul
jmp
out
push
es
cld
sub
sbb
pop
iret
mov
add
sub
loope
cmc
int3
aad
push
rclb
aam
loop
push
popa
and
or
adc
add
cmp
mov
and
adc
jecxz
imul
out
push
stos
jmp
sbb
les
loop
inc
push
ss
or
cld
out
addr16
push
lods
adc
aas
and
mov
in
ja
fstpl
cmpsl
jo
xchg
call
jnp
in
lods
bnd
xor
cmp
lods
pop
adc
aad
push
dec
xor
inc
add
and
push
dec
or
test
es
cltd
pop
data16
out
movsb
test
lret
sar
js
mov
cmp
ds
in
pop
in
cmp
mov
inc
and
adc
fs
adc
stos
xchg
xor
data16
xchg
mov
or
daa
mov
cld
and
iret
int
sub
adc
inc
in
push
push
push
pop
aam
xor
fcmovb
mov
in
fdivrs
mov
push
sbb
insb
iret
addb
aad
scas
inc
popa
insl
lret
insl
mov
xchg
mov
sbb
push
mov
pop
inc
repnz
jb
pop
jg
and
mov
rcl
push
xor
aam
les
in
or
dec
cltd
inc
pop
dec
mov
mov
xor
lock
mov
imul
inc
imul
rolb
sar
cmpsb
xchg
das
jg
xor
int
aam
dec
icebp
push
repnz
jns
insb
ds
mov
int
call
gs
pusha
inc
and
aas
popf
loope
push
xchg
cwtl
fdivrl
out
stos
punpckhdq
cmp
add
jnp
xchg
inc
loopne
lods
subl
jge
and
push
das
dec
insb
enter
pop
mov
mov
xorb
sti
inc
sbb
rolb
pop
mov
add
sbb
cs
mov
testl
inc
rorl
adc
std
jle
cmp
sahf
adc
inc
add
xor
jp
xchg
in
aas
addr16
cmp
mov
inc
inc
je
imul
movsb
mov
dec
bound
arpl
cld
inc
mov
cmp
sti
aaa
std
sbb
cmpsl
mov
sahf
fsubr
out
sbb
jo
in
pusha
loop
pushf
cmp
cmp
outsb
pop
fwait
jp
fadd
fists
push
and
icebp
sub
sbb
dec
movsl
adc
fadds
cwtl
inc
adc
mov
and
mov
mov
gs
hlt
push
rcrl
adc
out
adc
push
sahf
leave
adc
rcll
lock
jne
ret
imul
dec
imul
js
dec
jp
jnp
mov
imul
cmpsl
sub
outsb
pop
icebp
fisubrl
xor
xchg
mov
adc
or
aam
mulb
lahf
mov
into
and
movsb
fdivs
inc
lds
test
cld
adcl
push
into
cmc
fcmovu
mov
xor
cmp
test
cwtl
jnp
dec
inc
xor
push
sub
add
lock
aam
push
mov
cmpsb
pop
fwait
mov
or
lds
mov
dec
dec
mov
pop
loop
fcmovnu
out
xorl
popf
out
xor
and
in
dec
sbb
int
repnz
cmp
jbe
cmpsl
push
xor
xchg
inc
jecxz
jns
mov
inc
cld
lock
shr
add
ja
test
inc
mov
adc
mov
xor
sub
mov
or
popf
push
loopne
cmpsl
push
test
mov
adc
xchg
ret
add
lods
or
outsb
xorb
pop
lock
cmpsl
xor
dec
jl
sbb
lea
dec
outsl
jo
sub
in
mov
aas
xchg
xor
incl
ficoms
aaa
sub
dec
lods
adc
ja
xchg
leave
mov
dec
fwait
cmc
inc
cmp
repnz
push
test
ffreep
xor
add
inc
das
into
pop
jmp
sbb
insl
out
cmpsl
push
loope
and
add
mov
and
inc
cmpsb
enter
arpl
mov
fldl
and
mov
in
rcrb
movsl
fsts
cmpsb
int3
jmp
aas
out
xchg
clc
outsb
ljmp
addr16
test
pop
mov
fcmovnbe
dec
push
pushf
cwtl
xor
jg
xchg
cmp
sbb
or
or
cwtl
mov
pushf
repnz
inc
fnstenv
xlat
mov
outsl
inc
outsb
rcll
leave
movsb
mov
cs
push
ljmp
stos
and
cs
cli
fistl
sbb
adc
shl
push
push
mov
mov
rolb
inc
push
add
inc
mov
xor
mov
or
outsl
inc
les
xchg
scas
pusha
inc
scas
jecxz
insb
cmpb
mov
movsb
mov
lods
sbb
mov
mov
fdivrs
push
rclb
push
xor
dec
adc
lret
jl
lds
and
fistps
fs
pop
mov
clc
xchg
sbb
pop
jo
test
push
push
mov
dec
cld
push
dec
lds
dec
xor
or
insl
lret
inc
cmp
mov
adc
mov
jbe
shl
xchg
dec
outsl
xor
inc
enter
cwtl
shll
ds
out
out
cli
fstpl
sbb
idivl
sbb
jbe
xchg
cmp
sub
sub
aam
add
repnz
mov
arpl
in
aas
push
xor
cmp
bswap
dec
dec
aaa
add
sbb
push
addr16
pop
add
cmpsl
leave
stos
fcmovb
in
cmp
ljmp
stos
stc
jno
roll
enter
pop
fcompl
movsb
cmp
outsl
add
push
sti
mov
movb
imul
lret
and
xor
cltd
mov
cmp
mov
rcll
push
mov
cmp
jge
cmp
fs
jge
lret
sti
and
inc
pop
xor
or
fcmovne
dec
pop
mov
xchg
jo
adc
mov
and
jl
cld
sub
xor
in
push
push
mov
sbb
in
cmpsl
call
neg
stos
cmp
loop
cmp
sub
mov
popf
sti
fsubrs
lcall
out
mov
rcl
loop
out
mov
pop
cld
data16
mov
fcompl
daa
cmp
sti
push
lods
inc
mov
pop
sub
movsl
adc
enter
bnd
mov
add
inc
mov
cmc
dec
sbb
mov
jecxz
insl
push
mov
fisubrs
outsb
xchg
jns
push
divl
sbb
cmp
leave
sub
loopne
nopl
out
add
enter
lahf
data16
pop
lods
daa
icebp
jnp
mov
fwait
ss
rorb
jb
insl
dec
sub
arpl
jae
out
sti
int3
mov
inc
push
and
xlat
test
and
outsb
lcall
inc
and
jmp
mov
sub
mov
call
mov
out
sbb
or
add
jo
dec
sbb
xor
cmp
lds
std
xchg
xchg
fsub
xor
mov
pusha
jae
test
sub
jno
pop
xor
fiaddl
shll
push
lods
inc
fisubrl
and
pusha
inc
pop
ds
lds
dec
or
movsl
add
cmpsb
jl
mov
mov
lahf
and
cld
popa
leave
lcall
fwait
nop
movsb
push
cltd
out
sti
mov
mulb
pusha
adc
je
cmp
jnp
mov
adc
adc
lahf
push
leave
push
push
xlat
cmp
insb
cmpsl
orl
pop
pop
inc
daa
fidivrs
and
or
add
cmc
cmp
sub
lds
adc
fsts
shrl
sti
xor
add
inc
scas
lret
cmp
adc
outsl
inc
sub
jb
mov
xchg
xchg
mov
daa
mov
pop
jge
out
jne
mov
loope
loopne
enter
ret
out
ret
in
push
popf
jmp
out
lret
xor
xchg
or
in
pop
outsb
addl
sahf
jnp
xchg
arpl
inc
xchg
and
lcall
mov
xor
cld
out
push
lret
and
jecxz
stos
pop
jp
adc
cs
inc
add
int
gs
inc
mov
add
rcl
stos
push
pop
loop
dec
push
cwtl
xor
jb
sbb
in
in
pusha
popf
add
or
push
ss
arpl
fcmovu
loop
push
jb
in
scas
adc
adc
ja
jnp
fs
aad
popf
mov
sub
movsl
cmp
xor
ljmp
mov
add
jmp
or
test
call
out
mov
cmp
fsubrp
mov
mov
sub
mov
or
pop
lds
inc
jbe
add
mov
jg
nop
pop
mov
cmp
cmp
repz
lds
in
test
lods
sub
into
xor
mov
mov
nop
push
js
pusha
pop
lods
into
in
in
or
notb
add
mov
push
dec
das
push
push
mov
outsl
mov
push
test
iret
pop
dec
in
jle
push
pop
mov
mov
xor
iret
std
ret
dec
push
and
cwtl
cmp
out
xor
xor
hlt
mov
popf
cli
iret
sahf
icebp
cwtl
fldt
jp
pop
sahf
lea
jo
xchg
and
lods
pop
pop
sbb
and
mov
fistps
insb
inc
mov
adc
push
or
rcll
or
xor
push
jbe
cwtl
push
mov
lahf
repz
sbb
jne
jno
jnp
push
stc
jg
scas
lods
loop
sarb
arpl
sbb
and
push
xor
lret
roll
xchg
adc
add
adc
test
or
int
ss
or
lcall
push
sub
jno
and
mov
jns
jbe
add
dec
dec
sub
imul
fisttpll
js
xchg
push
ja
pop
inc
fsubr
fnstsw
cs
test
add
add
nop
jns
inc
adc
test
xlat
lcall
xchg
lock
inc
in
data16
add
push
or
jb
js
mov
or
add
xor
push
pop
jl
mov
outsb
inc
addr16
cmp
mov
mov
xor
aas
fstpt
pop
cmp
pop
int3
and
mov
pop
push
pshufw
jg
repnz
or
das
jae
lahf
stos
cmp
and
cld
sbb
mov
sbb
adc
push
cwtl
inc
and
je
and
mov
daa
mov
push
aam
lods
inc
xchg
lcall
pushf
imul
ret
arpl
dec
add
shll
call
xchg
fisttps
pop
add
divl
or
inc
xorl
adc
adc
cmpsb
sub
adc
jno
pop
je
mov
leave
sub
push
cld
out
cmpsb
leave
fdivrs
adcl
xchg
cmp
xor
xlat
repz
fadd
fimull
icebp
cmc
sbb
inc
loop
mov
jl
les
jg
ljmp
scas
jae
nopl
popf
incb
fdivrl
adc
xchg
mov
sub
sub
lret
cmp
fldl
insl
inc
and
or
das
cmp
fs
mov
enter
xchg
sar
cli
jp
mov
repz
pusha
test
jp
rcll
imulb
lods
imul
mov
mov
vucomisd
scas
adc
cwtl
pop
sub
add
aaa
inc
or
pop
xchg
adc
pop
out
in
xchg
xchg
adc
dec
cmpsb
pop
mov
stos
mov
aad
sub
test
jp
je
addr16
push
pop
mov
xchg
sahf
xor
shlb
jecxz
xchg
scas
cmpsl
int3
lcall
in
scas
mov
lahf
and
and
xchg
mov
xchg
cmp
mov
jg
mov
lea
iret
pop
xor
repnz
sub
mov
mov
xchg
xchg
add
cmp
outsl
out
adc
not
scas
in
push
xchg
cmp
iret
lret
fs
jmp
pusha
outsl
sbb
cmp
test
repz
jno
sub
adc
push
idiv
adcl
adc
sbb
jno
mov
jne
xchg
lahf
push
pop
bound
adc
sbb
jno
mov
movl
xchg
lock
jecxz
mov
mov
or
inc
aaa
or
dec
jecxz
pop
test
xchg
ja
insb
cmpsl
dec
add
sub
add
xchg
jbe
repnz
es
push
and
inc
inc
aad
pusha
scas
xchg
cmp
or
mov
jne
xor
clc
xchg
mov
roll
nop
and
jae
pop
add
mov
jae
stc
inc
sbb
xor
stos
arpl
sub
push
int
rorl
sbb
aam
jge
push
mov
ljmp
add
fldenv
sbb
test
addr16
loope
dec
sbb
aam
or
js
testb
in
fcomps
mov
popa
push
sbb
inc
sbb
xor
push
lret
push
test
cmpsb
pop
or
outsl
or
jae
push
js
sar
mov
inc
int
popa
push
clc
push
gs
aad
lods
out
jg
mov
test
gs
fs
fldl
clc
pop
imul
lea
stos
outsb
pop
pop
pop
lods
push
push
add
or
call
ret
add
std
das
inc
cwtl
adc
push
mov
cmp
sub
mov
imulb
ja
mov
mov
jbe
xchg
inc
hlt
pop
test
iret
out
fpatan
ror
daa
xor
scas
sarl
cwtl
sub
and
stos
sub
test
mov
jmp
pop
aam
dec
addr16
das
cmp
mov
sbb
js
push
push
push
pop
cmp
xchg
lock
out
or
les
sbb
fwait
push
popf
xor
push
push
dec
icebp
mov
movsl
mov
insb
jae
push
popf
out
aas
sbb
popa
cmp
pop
mov
mov
subb
test
jp
push
fwait
and
int
icebp
ja
or
push
add
lret
mov
aad
dec
sub
mov
pushf
mov
outsb
inc
hlt
cmp
sbb
filds
push
and
daa
adc
jl
add
sbb
dec
lea
jg
jno
in
fmuls
push
out
in
test
fldl
push
mov
pusha
mov
and
neg
sti
loop
xchg
xlat
sub
outsb
dec
and
inc
jnp
sub
rcrl
ja
inc
ds
sbb
pop
je
fbstp
out
rolb
dec
push
fstpl
mov
add
imul
in
adc
dec
cmp
cmp
push
divl
in
movsb
xor
mov
mov
sub
insl
mov
mov
jmp
dec
mov
hlt
lods
pop
mov
inc
cwtl
sbb
popa
pop
push
ret
test
icebp
ret
stc
push
icebp
dec
add
cmp
loop
out
lcall
cmp
test
mov
pop
lods
int3
mov
in
mov
or
xchg
sbb
and
loope
push
xchg
scas
lea
dec
pop
cld
pop
not
test
add
cmp
movsl
adc
addr16
andl
rorb
and
mov
ret
pusha
movl
cwtl
loope
data16
das
es
rclb
lds
xor
cmp
test
cltd
inc
jecxz
enter
inc
and
addr16
stos
pushf
rcll
inc
in
pushl
sarb
ficompl
cmp
xchg
fucom
add
jno
xor
jl
sbb
dec
jmp
jg
fidivs
in
pop
and
fidivrl
mov
nop
mov
push
and
xor
mov
xchg
adc
mov
dec
fildll
push
sbb
mov
dec
cmp
js
mov
sbb
cmp
pop
dec
jae
jecxz
and
pop
or
scas
or
mov
push
xor
data16
inc
sub
cmp
shll
rcrb
out
out
divl
sub
js
mov
enter
cmp
pop
push
stos
mov
pop
test
shrl
lods
orb
f2xm1
push
adc
mov
in
imul
push
addb
jmp
out
lret
or
jg
cmp
dec
push
inc
inc
je
adc
mov
pop
mov
nop
or
sbbb
std
mov
mov
adc
cmp
out
sub
into
imul
mov
mov
mov
xor
mov
mov
les
adc
add
es
test
or
pop
cmp
and
xchg
cld
movsl
sub
hlt
test
xchg
mov
add
out
arpl
push
les
push
test
mov
fisubrs
inc
imul
dec
sub
ud0
pop
xor
in
out
jno
stos
push
adc
push
inc
adc
mov
lods
lea
lods
ds
fidivrs
int3
mov
mov
xchg
dec
inc
mov
mov
mov
mov
jnp
jecxz
arpl
push
sub
rol
cmp
insl
arpl
dec
popa
fcoms
addr16
mov
mov
dec
in
sub
out
mov
lret
shll
mov
inc
mov
jecxz
xorb
and
scas
call
fs
dec
movsb
divb
jo,pn
cmpsl
shr
out
fistpll
lret
scas
pop
push
and
aaa
mov
mov
clc
jnp
fwait
out
or
push
sbb
mov
call
jmp
cmpsl
ret
call
in
pop
or
test
cltd
fsts
mov
push
aaa
sbb
scas
pop
outsl
inc
cmc
inc
cmpsb
shl
sahf
test
inc
scas
mov
fnstenv
xor
adc
cmovns
iret
add
sti
stos
data16
or
out
mov
js
rcrl
out
adc
pop
or
outsl
loop
out
jmp
sar
push
push
add
js
lcall
mov
pop
jl
pop
mov
jmp
jmp
iret
mov
fldenvs
lahf
insl
jnp
sub
ficompl
test
push
dec
mov
add
dec
pop
cltd
aas
fdivs
mov
push
jns
ja
jbe
add
mov
sbb
insl
cmp
ds
mov
std
jl
mov
mov
nop
push
xor
out
cmpsl
cmp
adcl
sub
pop
pop
sbb
push
push
mov
int3
mov
jecxz
pop
std
test
xor
pop
dec
cmp
std
cmp
lea
dec
mov
push
xchg
pop
cld
test
cltd
dec
push
out
enter
and
push
lods
adc
xchg
lods
sub
xlat
pusha
dec
outsl
xor
sub
pop
push
notb
ljmp
les
push
and
movsl
rcrl
xor
pop
sub
xchg
jnp
push
jbe
ror
dec
addl
icebp
lds
jns
lods
cltd
dec
aaa
xchg
jnp
jmp
mov
rcrb
sbb
mov
mov
popa
std
clc
and
xchg
int3
pop
adc
mov
adcb
test
jnp
jb
push
shlb
add
dec
xor
sbb
mov
icebp
mov
in
jmp
xor
cli
int3
in
imul
test
sbb
mov
pop
stc
mov
mov
xchg
and
out
jns
and
inc
mov
in
in
xor
adcb
add
test
and
les
arpl
sub
loop
mov
std
lcall
aas
xor
xor
orps
sub
mov
inc
outsl
xor
ss
or
js
xlat
loope
and
add
fldl
xchg
jbe
pop
imul
rolb
inc
out
push
pop
mov
jno
hlt
negb
xor
jmp
das
jl
xor
adc
fisttpl
lahf
pushf
std
dec
das
push
push
fdivr
jmp
sti
out
or
insl
sbb
xor
test
pop
mov
mov
or
inc
out
jno
adc
or
jo
pop
mov
divb
xchg
test
pop
pop
mov
bound
push
ficoml
push
cltd
js
dec
rcl
inc
jns
leave
fsts
xchg
das
mov
stos
lods
sbb
mov
push
pop
insl
js
and
xor
sahf
add
xor
jge
repnz
adc
push
movsl
fwait
add
xor
pop
adc
cmc
jl
fcompl
push
out
inc
es
cli
std
cld
xchg
lahf
lahf
stc
mov
imul
sub
inc
bound
and
aaa
sbb
xchg
dec
in
sahf
dec
mov
pop
int3
and
stc
scas
in
and
scas
or
xchg
ret
mov
aad
sbb
mov
push
lcall
cld
lahf
in
mov
insb
icebp
jbe
pop
ljmp
in
dec
and
mov
mov
mov
dec
mov
scas
popa
jge
pop
cmp
cmp
scas
jb
mov
fidivrl
mov
or
les
adcb
xchg
out
mov
cmpsl
enter
shl
mov
add
test
clc
rcll
fs
cmpsb
pop
sbbl
icebp
scas
js
mov
xchg
pop
xchg
mov
rorl
insl
xchg
pop
dec
stos
imul
lahf
inc
cmp
scas
scas
loope
clc
js
mov
pop
jne
and
jmp
cwtl
sbb
stos
push
cmc
mov
jbe
movsb
out
data16
movsb
fs
push
dec
or
cli
dec
aad
push
lock
jge
fimull
add
pop
adc
cwtl
pop
imul
aad
rcrl
inc
pop
dec
inc
ror
popf
aad
subl
mov
dec
xor
sbb
stos
jbe
pop
aas
ret
sub
adc
cmp
jno
test
mov
cmp
ljmp
adc
jge
test
inc
std
inc
fstl
pop
fidivrl
inc
xchg
sbb
scas
mov
mov
aam
lock
sub
mov
dec
leave
jecxz
fists
cmp
loopne
add
adc
jg
insl
push
sbb
rclb
call
or
push
sbb
mov
cltd
rorb
add
pop
xchg
testl
stos
inc
mov
dec
cltd
rorb
testl
push
mov
xchg
adc
out
jmp
xor
sbb
into
mov
pop
mov
out
jb
ja
mov
push
add
mov
sbb
sub
pop
mov
outsb
ret
out
rcll
pop
mov
in
loopne
pop
sub
inc
aam
stos
cs
mov
arpl
push
outsb
dec
jle
mov
mov
imul
icebp
es
or
or
aad
lods
outsl
jbe
push
push
call
imull
nop
jae
enter
mov
cmp
xchg
jmp
ds
or
popa
sbb
fsubrs
jnp
inc
inc
xlat
push
cmp
fs
mov
pop
xor
xor
adc
xchg
inc
iret
xorb
pop
pushf
movsb
push
bound
neg
inc
dec
push
mov
xchg
inc
ds
inc
ljmp
push
pop
push
enter
js
arpl
push
mov
jp
push
xchg
jnp
aam
dec
mov
push
pop
popa
inc
xlat
hlt
enter
or
xchg
test
in
insb
repnz
adc
rorb
loopne
mov
and
das
cs
arpl
or
inc
loopne
dec
es
xchg
stos
push
mov
mov
push
and
xchg
insl
sub
sbb
aam
sub
mov
lahf
or
and
adc
enter
or
pushf
pop
in
inc
xchg
clc
add
pop
ss
aaa
inc
call
imul
sti
je
pop
loopne
or
js
xchg
aad
dec
sub
fbstp
loopne
and
lahf
cld
sub
pushf
std
aam
sbb
push
movsl
test
mov
leave
xor
lea
sub
and
sbb
daa
adc
pop
cmpsl
mov
sub
nop
aam
cmp
or
mov
sub
push
cmpsb
xor
push
out
iret
or
daa
fisubl
and
sbb
andb
sahf
sub
pop
xchg
adc
add
xlat
pop
and
xchg
imul
pop
shr
add
pop
xchg
fsubrl
bound
lahf
repz
xchg
lret
sub
dec
push
arpl
lahf
pop
mov
push
dec
int
add
ret
push
xchg
push
les
cmp
add
xor
lret
jp
aas
repnz
hlt
mov
adcl
mov
sarl
stos
nop
imul
xor
nop
sub
sbb
sub
js
or
movsl
mov
imul
push
adc
xor
outsl
inc
or
lds
mov
push
mov
movsl
cmp
inc
jecxz
stos
mov
mull
es
xor
jg
jmp
or
in
imul
lahf
pop
xchg
or
orb
lods
push
ja
sahf
call
mov
nop
in
inc
test
loope
dec
lret
test
dec
dec
mov
pop
imul
add
mov
mov
adc
push
push
test
inc
jmp
mov
mov
rcrl
sti
push
xchg
sub
fsts
andb
jge
cld
push
out
inc
in
std
dec
and
xchg
stos
mov
and
or
adc
push
fwait
sbb
sbb
imul
xchg
cltd
popa
inc
out
and
pop
mov
jmp
add
xchg
and
dec
push
cwtl
fstpl
fadd
outsl
movsl
mov
xchg
test
cmc
dec
xlat
or
mov
push
out
in
mov
lock
xor
lods
jge
jmp
lods
push
cltd
xchg
pop
xor
pop
sub
adc
das
mov
jne
aaa
sbb
sbb
mov
jno
mov
adc
jmp
xchg
and
mov
mov
je
loop
or
sar
sbb
xor
xchg
push
sti
pop
cli
sti
xor
dec
mov
mov
sub
aad
push
das
shll
sub
pop
nop
xchg
aam
shl
enter
xchg
pop
aam
enter
push
dec
enter
test
and
pop
mov
or
xchg
loop
add
out
adc
out
pop
and
cmp
sbb
and
xchg
sub
cmpsb
addl
sti
scas
fcoms
pop
iret
pop
insb
dec
rclb
fs
mov
mov
sbb
bound
push
fst
out
dec
mov
mov
pop
pop
jb
jne
ljmp
in
sbb
jmp
repnz
push
je
mov
sub
pop
or
aam
in
or
cwtl
xor
mov
popa
rcrb
inc
pop
push
hlt
out
pop
insl
pop
add
ss
push
ljmp
out
movsb
dec
test
je
cmc
or
mov
push
rorl
repz
leave
sub
repnz
jmp
rorl
test
int
sti
lea
or
sbb
cmpsl
shll
jae
cltd
sbb
add
shr
cmp
push
in
or
ret
ret
fwait
mov
arpl
push
dec
lods
les
dec
jne
jl
jae
xlat
sub
mov
hlt
insl
dec
outsl
mov
fdivl
shrb
mov
xchg
xlat
xlat
fs
or
std
pop
popf
in
out
and
bound
out
das
iret
aam
sub
add
xabort
clc
pop
cmp
mov
inc
popa
adc
xor
cs
inc
test
jle
and
in
sbb
addl
mov
pusha
call
jnp
xchg
test
stos
aam
or
cwtl
pop
add
mov
movsb
xchg
mov
push
fdivs
sbb
mov
jae
cmpsl
inc
pushf
nop
mov
xor
push
cli
inc
jg
jbe
mov
test
int3
cmp
push
cmpsb
rcrb
mov
out
daa
shlb
loop,pt
loopne
fdivrl
lods
push
cmp
popa
leave
clc
jp
repnz
enter
cmp
sbb
jmp
cwtl
loopne
cli
ja
addb
xor
mov
clc
cwtl
push
add
hlt
sti
test
dec
cmpsl
dec
sbb
push
adc
movsl
jno
mov
movsl
mov
shlb
push
dec
hlt
cs
pushf
mov
xchg
fidivrs
aas
add
xchg
fstps
and
xor
mov
call
xlat
repnz
dec
test
lahf
xchg
adc
jnp
inc
arpl
sub
cld
push
pop
xchg
inc
cltd
lds
jmp
or
push
jbe
and
fsts
mov
mov
cld
addr16
xchg
adc
jno
hlt
sbb
std
fisubl
cmp
sub
je
insl
lret
out
call
lret
mov
mov
xchg
fdivrl
fnstcw
xchg
adc
push
data16
push
sub
push
test
xchg
movsl
stos
cli
fdivrp
fists
xchg
xchg
pop
mov
das
mov
inc
fisubs
stos
rcl
aad
stos
or
or
aas
out
lcall
adc
inc
ja
or
xchg
mov
or
adc
pop
adc
sbb
sti
jbe
pop
mov
cmp
jle
call
in
xchg
cmp
xlat
insl
push
xchg
and
inc
sbb
mov
sub
cmp
xor
aaa
and
jne
jmp
pop
in
push
and
subl
movsb
xor
cmp
out
shrl
lret
mov
movsl
push
sub
fucom
scas
pop
mov
adc
inc
pop
or
push
shlb
and
mov
and
dec
loop
cmc
dec
addb
int3
rolb
pop
cmp
jno
arpl
test
dec
adc
aaa
mov
insl
inc
sub
xchg
inc
stc
addr16
and
and
outsl
adc
adc
add
repz
push
pushl
mov
jb
mov
add
adcb
xor
fs
cld
test
push
pop
lock
push
mov
test
scas
and
xchg
cmp
or
cmp
test
jb
dec
jp
inc
jno
test
cmp
inc
clc
fldenv
in
pop
stc
daa
add
cwtl
jbe
cmp
mov
inc
inc
sbb
xlat
jg
mov
xor
add
nop
sbb
mov
add
mov
shlb
icebp
test
mov
in
dec
xorl
pop
jb
jb
push
movsl
cmpsl
and
xchg
cwtl
inc
inc
add
inc
mov
jae
jecxz
xor
mov
or
sub
repnz
stos
inc
pop
xlat
mov
add
int
cmp
adc
addr16
xor
sub
xor
fldl
shr
scas
ss
push
sbb
arpl
push
xor
rcrl
or
addb
push
hlt
insb
mov
and
es
ja
jbe
and
sbb
xchg
cmp
mov
out
jno
or
rep
movsb
sub
shl
outsb
stos
cmp
jns
pusha
frstor
mov
sub
xchg
xchg
push
mov
cmpsb
add
scas
jnp
outsb
adc
adc
gs
aad
scas
cli
xchg
jge
sub
and
imul
mov
adc
jae
and
shlb
pop
mov
enter
and
or
ja
push
sbb
fs
shll
adc
pop
pusha
or
in
in
and
movsb
adc
cwtl
push
jbe
dec
fcoml
pop
xchg
xlat
pop
out
fidivrl
mov
add
cmpsb
fnstsw
loop
scas
adc
sbb
lret
sti
mov
call
in
scas
cld
mov
scas
dec
enter
ss
xlat
mov
sti
aad
jne
adc
add
mov
add
sbb
jmp
inc
iret
adc
fsubp
ljmp
push
mov
or
ss
loope
test
pushf
test
das
iret
push
cwtl
add
ljmp
mov
xor
lahf
or
bnd
mov
shl
push
les
mov
out
pushl
inc
cmc
push
mov
and
in
fmull
jnp
popa
int
outsl
jo
xchg
add
int3
je
loope
pop
fwait
pusha
adc
and
sti
enter
inc
fisubl
sbb
add
xor
mov
pop
pushf
mov
push
mov
mov
scas
adc
call
or
push
pop
mov
mov
aam
mov
fcomps
inc
xchg
cmp
jo
xchg
lahf
sarb
cmc
in
sub
dec
cmp
push
dec
sub
sbbl
jne
cmp
sbb
adc
jmp
daa
lahf
xchg
jmp
jne
push
or
jne
lds
bound
add
pop
in
idiv
pushf
mov
sbb
mov
inc
addb
push
in
ds
inc
push
sub
fcompl
pop
xchg
repnz
cmpb
cmp
imul
jmp
loopne
dec
shrl
xchg
inc
ja
jp
jno
push
xlat
into
xchg
lahf
mov
push
ret
dec
cmp
and
enter
dec
cmp
inc
iret
mov
pop
inc
lret
insl
mov
iret
push
sbb
cmp
pop
roll
mov
xchg
aam
mov
rcl
jp
or
out
inc
ret
lea
lret
pop
cmp
int3
xchg
pop
cltd
inc
lds
adc
inc
aas
add
mov
rol
xor
push
add
sar
push
rcrb
push
inc
dec
out
loope
movsl
call
and
dec
inc
sbb
aad
lret
push
rcll
stos
imul
push
pop
in
stos
push
cmp
jg
pop
push
jne
gs
popf
ljmp
push
fwait
int3
mov
xchg
or
fimuls
jmp
in
pop
out
lcall
test
aas
fcmovu
ret
mov
shl
pop
sub
sbb
lea
in
das
sub
dec
add
lock
ljmp
and
fcomps
xor
loopne
ljmp
roll
jmp
scas
mov
sbb
insb
mov
lcall
jmp
mov
mov
inc
rorl
jl
adc
pop
ljmp
or
out
mov
out
sahf
mov
pop
cmp
jl
shrb
fidivl
jnp
js
jg
cmp
ret
icebp
sub
cmp
or
jb
out
xlat
cmp
xchg
and
call
push
sbb
mov
push
xchg
push
lods
fadd
cltd
or
fsub
dec
mov
cmp
or
scas
cmp
stc
aas
push
pop
and
mov
inc
leave
and
jg
add
jo
pop
shlb
or
pop
bnd
insb
cltd
inc
and
xchg
sahf
inc
lock
loope
shr
push
das
std
mov
int
mov
xchg
into
hlt
cmpsl
popf
xor
jnp
cwtl
sbbb
add
mov
sti
test
xchg
xchg
sub
rorl
mov
jns
inc
mov
jmp
mov
pop
xchg
dec
jle
xchg
add
mov
loopne
xor
xor
mov
cmc
insl
gs
push
mov
cli
dec
add
stos
mov
cmpsl
fdivrl
out
sbb
pop
adcb
push
cmpb
mov
cmp
dec
lods
dec
lcall
sub
lcall
inc
jp
pusha
bound
pop
push
sub
mulb
xchg
cmp
out
pop
testl
cmp
add
jge
lea
cltd
cmp
cs
xorl
xor
and
pop
loope
xchg
xor
push
mov
ror
andl
fisttpl
inc
out
pop
add
push
and
xorl
clc
jl
sbb
push
mov
int
mov
push
push
adc
push
add
fnsaves
shrb
push
std
cmpsl
pushfw
jg
pop
ds
cld
cmp
xor
push
adc
stos
cmp
mov
js
or
jl
fstps
daa
out
jl
mov
adc
jle
adc
out
dec
jns
push
dec
addr16
jb
in
insb
cwtl
jmp
lret
lock
adc
xchg
stos
xchg
push
nop
xor
clc
lcall
pop
mov
pushf
fnsave
mov
mov
xchg
ror
and
mov
push
adc
call
add
test
lret
fstl
dec
ljmp
movsl
jb
pop
lcall
arpl
imul
movb
jo
dec
xor
cld
cltd
aam
jno
cmp
daa
outsb
mov
inc
rcrl
pop
mov
in
dec
fimull
xor
call
xor
jno
xor
sbb
cmp
push
push
dec
leave
pop
stos
xorl
pop
xchg
mov
mov
fimull
add
out
add
pop
lcall
into
cmp
pop
or
mov
or
mov
addl
pop
sbb
insl
jbe
mov
jge
cltd
mov
and
lea
rorl
inc
mov
xor
outsl
xchg
pop
flds
mov
outsb
sub
mov
arpl
sbb
test
out
push
dec
aam
sub
mov
jae
mov
mov
adc
jns
push
pop
in
pusha
and
les
pop
xor
mov
fwait
divb
mov
imul
lcall
je
push
insb
aad
mov
std
addr16
cmpsl
xchg
jbe
std
pop
aad
or
testl
pushf
jg
sbb
popa
mov
sub
pop
movsb
dec
inc
jne
cwtl
and
add
scas
adc
int
sti
imul
push
add
in
outsb
mov
insl
in
test
push
stos
inc
mov
fs
dec
test
fisubs
mov
aas
mov
in
xchg
or
js
pop
icebp
mov
setge
fiaddl
incb
ret
int
ja
popa
push
jns
aaa
popa
lahf
sbb
dec
sar
cmp
daa
arpl
loop
mov
lcall
into
loopne
dec
pop
cld
jno
xchg
clc
pop
inc
pop
repnz
std
popa
int3
cwtl
movsb
mov
data16
or
int3
cmp
sahf
push
push
popf
lea
or
push
lods
push
mov
lock
out
shrl
roll
hlt
sub
sbb
insb
fistpll
xor
sub
mov
pop
out
push
xor
jmp
adc
lret
xchg
xor
adc
lret
rcll
dec
lret
xor
pusha
xchg
movsl
push
fsubrl
push
ss
fldl
shll
inc
insl
cld
pusha
out
sub
shr
and
pop
xor
mov
add
cmc
cmp
sub
xor
aad
lret
adc
xchg
pop
je
fisubs
cmp
lret
not
adc
pop
sbb
inc
xor
lods
decb
jne
fnstsw
jl
int3
pop
in
sub
mov
dec
loope
shll
inc
or
or
lahf
cmp
fs
sub
sbb
scas
and
loopne
sbb
mov
add
popa
pop
or
movsb
jge
dec
int3
cmpsl
dec
jmp
ret
mov
outsb
gs
int
dec
and
or
lods
lods
cs
push
jne
lock
jno
pop
scas
insb
out
dec
scas
xchg
aam
mov
mov
xor
cmp
test
xor
sub
xchg
pop
aas
out
dec
push
in
loop
mov
test
jno
das
insl
js
insb
negb
loopne
fmull
sub
bndstx
into
cwtl
and
push
xchg
aaa
test
inc
adc
stos
aas
int
pop
mov
sbb
lcall
cmp
lods
inc
mov
imul
daa
insl
imul
add
jne
sub
sub
cmp
xchg
cmc
cltd
and
scas
arpl
mov
and
jnp
jbe
loope
push
gs
movsl
inc
mov
mov
pop
add
in
inc
add
fdivl
mov
aad
addb
icebp
mov
fisttpl
xchg
sbb
lea
adc
xor
lret
out
insb
ja
fnsave
xlat
push
xchg
mov
lods
push
lea
mov
rcrl
int
mov
stos
mov
cmp
mov
loope
cmp
jecxz
add
push
popf
and
lcall
ret
imul
nop
mov
add
push
jl
xor
decl
lcall
jnp
dec
add
pop
xor
xchg
out
fimull
cmp
pop
repz
loope
incb
ret
adc
addr16
inc
in
pop
and
in
mov
mov
inc
or
cmp
enter
jmp
dec
stc
or
inc
or
frstor
cmc
cltd
xor
mov
pop
test
adc
inc
ja
cmp
mov
xor
xchg
dec
lahf
in
cmp
je
icebp
jg
pop
dec
inc
lret
lods
cld
sbb
pop
scas
fs
or
cmpsl
movsb
test
jbe
xchg
in
mov
add
jmp
outsl
xchg
imul
dec
lods
push
mov
inc
cmp
xchg
xchg
das
into
jnp
mov
jp
jmp
loop
xchg
and
mov
mov
jo
ds
push
inc
push
and
fildl
mov
mov
mov
push
mov
dec
sub
loopne
lods
xor
ret
push
mov
mov
mov
or
and
pop
loope
inc
imul
sub
inc
xchg
cmpsl
push
cmp
jl
and
pop
inc
cwtl
sbb
outsl
ss
pop
repnz
fwait
mul
movsb
and
shrl
add
push
xorb
test
push
mov
mov
sbb
inc
cmp
stos
stos
clc
add
inc
inc
enter
ficompl
push
lds
push
xchg
shl
jbe
jo
mov
fs
out
jg
push
pop
cmpsl
and
add
sub
mov
xchg
sbb
fcmovne
ficompl
and
shrl
rcl
fs
mov
xchg
adc
push
xchg
cld
int3
dec
xlat
push
push
mov
jp
sub
vzeroupper
lods
mov
enter
outsl
popa
cmpsb
cltd
mov
cmp
cmp
jmp
dec
rorb
inc
fs
scas
movsl
or
push
adc
mov
pushf
and
xor
int
mov
xchg
jae
rclb
dec
add
lods
loop
push
sar
cmpsl
or
pop
jecxz
inc
adc
leave
add
in
fld
sti
cmp
push
repnz
mov
sbb
mov
sbb
nop
jb
push
jbe
xchg
push
stc
sbb
add
push
mov
xor
in
inc
or
imul
xchg
xor
in
das
add
or
daa
call
xchg
mov
xchg
sub
fnstsw
or
pop
push
ret
test
and
pop
or
imul
fdivl
inc
nop
aas
mov
cli
adc
xchg
push
jae
adc
test
nop
fwait
stos
jle
mov
mov
push
addl
or
xchg
xor
repnz
add
test
pop
cs
xchg
movsl
ljmp
insl
push
pop
cltd
into
push
addr16
jecxz
sbb
aad
pushw
out
mov
gs
stos
divps
orl
out
xchg
jge
daa
cmp
imul
test
sbb
push
jl
call
sbb
mov
daa
jnp
fnstcw
inc
mov
repz
pop
sub
es
mov
mov
sti
jns
dec
add
int3
int3
mov
adc
lods
shlb
dec
sbb
fisttpll
add
fstps
and
and
dec
dec
cmp
lods
adc
fiadds
in
jp
fistps
jge
mov
push
dec
push
lea
imul
out
adc
push
add
mov
cmpsl
mov
rcrb
add
jo
jne
jmp
inc
lock
adc
test
inc
aas
mov
outsb
jne
mov
mov
movsb
insb
inc
rclb
cmpb
xchg
sub
sbbl
xchg
inc
mov
sbb
and
and
cltd
les
lods
ret
push
bound
into
xchg
dec
daa
or
jnp
mov
xlat
push
bound
fs
sbb
push
int3
or
cmpb
scas
sub
adc
mov
jl
adc
xlat
sahf
dec
fisttps
loopne
ja
iretw
loop
nop
or
aas
and
gs
or
cld
pop
lock
adc
dec
jmp
or
mov
test
stos
inc
test
ja
fcomi
push
and
scas
sub
mov
or
into
cmp
loop
mov
sub
adc
inc
jp
adc
bound
sbb
fistpll
jmp
aas
stos
inc
icebp
pop
mov
setl
aad
jno
or
mov
xor
sar
jp
mov
in
lds
test
ja
mov
pop
pop
pop
mov
andb
push
cli
iret
movsl
out
mov
or
mov
mov
gs
push
fistpll
test
dec
lcall
jbe
sbb
jno
dec
fstps
daa
dec
adc
inc
clc
mov
inc
xor
xor
dec
push
mov
dec
sarl
adc
nop
jge
js
out
cwtl
fcompl
jne
xchg
stc
mov
sub
cs
mov
mov
leave
insb
cmp
push
pushf
loopnew
jb
bound
out
out
movsl
int
scas
inc
xor
fildll
mov
fisttps
mov
cltd
dec
sbb
mov
mov
add
jmp
push
sbb
xor
rorl
test
leave
pop
cmp
inc
add
dec
jb
outsl
das
aad
nop
cmp
fwait
and
and
cld
jmp
jecxz
movsl
mov
insb
mov
imul
movsb
pop
dec
int
shl
repnz
and
in
push
ja
clc
daa
jnp
xchg
mov
jb
data16
pop
jg
mov
shl
mov
push
push
xor
push
dec
add
lods
idivb
mov
inc
clc
mov
lret
cmp
das
or
dec
push
xor
daa
mov
sub
dec
negl
scas
leave
xchg
cli
dec
and
cli
dec
out
and
dec
loopne
lret
fstps
cmc
pop
xchg
push
inc
scas
jno,pt
jmp
pop
inc
pmulhuw
or
pusha
fidivl
cwtl
loop
cld
mov
movsl
jecxz
test
clc
pop
mov
add
nop
out
ret
iret
or
xorl
lock
cli
jge
jae
xchg
mov
sbb
loope
push
jge
bound
mov
aaa
jbe
adc
cli
jmp
lret
pop
arpl
jge
pop
and
lahf
pusha
xchg
xchg
lea
aad
dec
mov
sbb
out
xor
out
adc
cmp
repnz
cltd
and
push
shll
clc
subl
je
ds
mov
mov
pop
pop
dec
dec
jp
mov
sub
pop
ja
jp
mov
mov
scas
mov
testb
xchg
adc
mov
test
shlb
leave
mov
mov
rolb
lds
adc
cmpsb
jne
mov
push
hlt
sub
push
dec
aas
into
scas
mov
cmp
push
shr
jle
frstor
adc
add
shll
jnp
mov
push
jge
jo
cmp
cltd
ljmp
jmp
sub
xor
mov
loope
cwtl
mov
pop
arpl
mov
cltd
xor
push
outsl
cmpl
sub
inc
negb
movl
loope
mov
incl
pop
ja
mov
add
jno
push
cmpsl
cmp
jns
lret
pop
rclb
js
push
or
enter
inc
lcall
pushf
pop
cwtl
lret
push
lds
cmpsl
insb
xchg
cltd
fldenv
push
xchg
jmp
adc
push
jmp
push
adc
std
dec
fcmovb
sbb
inc
pop
add
imul
mov
ja
mov
pusha
int
and
cmpsb
dec
mov
and
push
jb
gs
dec
ljmp
lret
pop
push
or
sbb
xor
push
ret
inc
fs
mov
rclb
pop
nop
lods
in
shll
jnp
inc
sub
pop
mov
int
xchg
mov
inc
xchg
dec
or
lods
dec
test
cld
push
jmp
call
lahf
sahf
mov
mov
stc
out
hlt
and
mov
xor
shll
add
sahf
es
mov
inc
inc
lcall
and
dec
test
das
and
jecxz
pop
pop
fldcw
cmp
pop
mov
jge
insl
out
insl
xor
sub
xchg
stos
aas
test
testl
rol
mov
adc
or
push
xchg
mov
jecxz
pop
mov
sbb
lea
repz
insl
sub
pop
adc
and
jmp
jl
enter
inc
ss
add
ds
xchg
xor
cld
mov
ja
inc
jo
sbb
out
aam
adc
dec
pop
rolb
addr16
xchg
cmc
mov
pusha
mov
cmp
and
les
fstpt
sti
or
push
les
add
sahf
push
int3
adc
dec
mov
push
inc
imul
cmp
push
cmc
cmp
sub
xchg
dec
pop
xchg
jno
pop
xlat
fs
sarl
mov
pop
jl
or
and
cmp
mov
cmp
xchg
push
flds
test
lahf
int3
loope
cltd
aam
adc
mov
in
enter
scas
jne
ds
iret
mov
enter
lahf
popl
mov
inc
test
mov
pop
outsb
xor
rcl
test
test
scas
bnd
cs
dec
push
movsl
inc
jge
push
jmp
inc
pop
add
je
add
sarb
mov
sbb
cmpsl
pop
pop
ljmp
cltd
pop
pushf
dec
lret
xchg
pop
sub
divb
mov
call
push
pop
insl
stos
rcl
orb
into
fisttpll
jne
repnz
or
push
pop
dec
test
into
pop
les
bound
mov
outsl
add
sbbl
dec
lds
jbe
cltd
add
lock
sbb
push
dec
push
mov
cmp
adc
lcall
push
enter
jl
insl
outsl
int
rorb
or
jnp
push
xchg
scas
ss
cmp
fldl2e
cmpsb
int3
cmpsb
dec
data16
imul
dec
mov
cld
mov
lcall
pop
and
jmp
jno
mov
out
add
jl
sbb
sub
lret
aas
mov
adc
pop
xlat
push
cmp
pushf
cmp
inc
dec
pop
or
sub
hlt
je
jne
mov
das
adc
push
imul
mov
mov
pop
lahf
mov
imul
fisubrl
or
push
dec
fisubs
movsb
icebp
arpl
scas
pop
fsubrs
push
sbb
imul
clc
nop
enter
cmp
push
cld
dec
mov
mov
ds
cmpsb
mov
fbstp
cmpsl
dec
xchg
int
push
sbb
bound
fisttpl
sbb
scas
lods
jbe
cwtl
ljmp
sub
insl
inc
les
push
xchg
mov
pop
aam
and
or
and
mov
add
add
sbb
push
sbb
push
dec
xchg
std
mov
int3
xor
cwtl
dec
pop
jl
ja
out
daa
dec
std
cmc
rcrl
mov
and
sbb
or
sub
sbb
xlat
repnz
pusha
adc
icebp
inc
push
roll
push
jle
iret
dec
lea
dec
mov
jns
aam
out
shrb
ret
bound
cwtl
push
cmp
cmpsl
loop
fistl
sbb
pop
sar
mov
fbld
js
add
mov
lds
cmp
fidivl
loopne
js
adc
stc
xor
movsl
mov
nop
add
loop
push
inc
ret
imul
pop
jno
imul
sub
or
mov
addr16
xchg
outsb
lcall
fistl
sub
out
jecxz
xor
fisttps
stc
push
pop
mov
adc
clc
jno
out
hlt
pop
or
lock
xchg
out
clc
jl
outsb
sti
mov
mov
lret
cwtl
insb
lea
pop
xchg
mov
add
jge
lcall
push
lock
js
push
sub
mov
jne
push
pop
arpl
in
out
shrl
cmp
push
ja
movsb
pop
add
cld
push
out
xlat
jae
mov
call
xchg
push
out
xor
lods
jns
repnz
repnz
lods
dec
cmp
loop
outsb
pop
mov
push
pop
inc
aad
xchg
mov
inc
stos
push
sub
mov
orb
mov
jnp
xchg
pusha
cmp
cltd
sbb
orb
or
sbb
cs
adc
fistpll
data16
cmp
add
mov
jmp
sti
mov
aas
inc
jge
jmp
movsl
xchg
ja
mov
imul
bound
sti
xor
testb
sub
or
jne
xchg
xchg
and
daa
xchg
leave
shrb
mov
scas
adc
icebp
xchg
aaa
adc
pop
or
mov
pop
pop
ljmp
xlat
and
mov
add
rol
lds
xor
add
cli
xor
mov
push
rclb
aas
and
pop
push
xor
and
jmp
movsl
out
adcl
sahf
jb
add
test
cmp
insl
fists
bound
in
mov
pop
lods
and
or
sahf
outsl
sub
add
mov
adc
and
outsl
cs
jo
xchg
lods
repz
sbb
jnp
mov
push
scas
or
adc
hlt
cmp
xchg
nop
fadds
jmp
add
and
aas
mov
daa
mov
inc
mul
sub
mov
mov
and
ds
or
mov
cld
aaa
pop
pop
ret
das
scas
dec
repz
aad
dec
mov
jge
jge
es
mov
adc
mov
sbb
pop
test
adc
pushf
dec
scas
es
mov
int
fldenv
daa
je
cld
and
xor
stos
fldenv
jbe
inc
lea
inc
mov
or
sahf
ror
fildl
xchg
xor
jb
mov
loopne
mov
bound
xchg
inc
outsb
xchg
inc
xor
popf
pop
and
xor
xor
xor
dec
clc
push
jmp
jg
xor
rorb
je
push
mov
and
leave
cmp
xchg
jle
test
mov
lock
pusha
inc
daa
nop
mov
and
fisttps
pop
mov
sub
sub
test
cmp
imul
sbb
dec
je
push
push
pushf
add
leave
into
fs
fidivrl
push
sbb
out
xchg
ret
sahf
push
xor
pop
insb
in
jb
loop
shlb
add
in
cmpsl
push
and
outsl
jne
repnz
push
inc
icebp
pop
mov
fsubrl
flds
movsb
add
add
adc
imul
and
sbb
and
or
mov
or
jae
or
es
lock
iret
or
pop
mov
inc
cli
dec
test
cmp
xor
test
lahf
jb
mov
mov
fwait
lds
imul
xchg
dec
mov
les
enter
dec
push
cmp
mov
sbb
shlb
ljmp
icebp
clc
std
popa
ljmp
negb
cmc
insl
mov
test
dec
loopne
dec
inc
xor
pop
clc
testl
lods
cmpsl
add
adc
sti
loop
xor
pop
mov
in
push
lock
add
cld
mov
les
mov
sbb
sub
pop
jb
adc
inc
hlt
mov
stos
std
jmp
lret
inc
mov
imull
aas
pop
push
inc
pop
push
loopne
punpckldq
adcb
and
push
pop
cmp
adc
fdivrs
fisttps
cli
xor
testl
sbb
adc
ss
sarl
lock
ficomps
sbb
push
je
add
inc
jae
dec
testb
add
rcll
pop
shrb
pop
popf
inc
xchg
mov
cli
sbb
adc
lods
inc
rcrb
aad
fidivl
mov
popa
iret
ss
testl
lods
push
xchg
inc
pop
loopne
push
sahf
jne
adc
xchg
add
in
ret
cmpsb
aam
and
mov
jbe
fcmovnu
xor
mov
mov
rclb
les
subb
not
adc
pop
addr16
push
shrl
and
add
ret
outsl
add
or
popf
xor
jb
mov
or
mov
mov
movsl
push
inc
imul
popf
xchg
jle
pop
add
loopne
out
test
cli
aad
das
cmp
jle
lahf
cmpsb
out
add
jg
int
enter
filds
jbe
jge
add
or
adc
aas
int
xlat
mov
cmp
in
out
aam
xchg
and
or
mov
pushf
push
sbb
push
sub
fcmovne
xor
iret
roll
xchg
inc
cmpsl
jl
out
pop
jae
dec
jmp
pop
push
jns
mov
lea
lcall
push
xor
ret
inc
cmpsl
mul
cwtl
idivl
mov
movsl
lret
test
enter
lods
jnp
int3
or
jnp
or
andl
aam
int3
mov
xchg
cmc
ljmp
xor
fildll
cmpsb
mov
mov
xor
test
fisubrl
mov
lahf
mov
mov
xchg
mov
push
pop
or
lahf
lds
push
aam
jl
mov
fstpl
lret
stc
pushl
dec
cmp
roll
dec
and
in
add
and
enter
sbb
out
add
inc
jnp
dec
bound
fcomps
inc
cltd
jnp
imul
adc
loope
aaa
sub
outsl
sbb
aas
jo
jnp
xchg
movsb
sti
mov
icebp
test
aaa
dec
pop
out
mov
mov
pop
lods
push
fwait
mulb
insl
imul
out
cmp
dec
insl
and
inc
xor
pop
les
popf
and
mov
lods
rcpps
sub
and
out
std
mov
fwait
shrl
in
sbb
cs
jmp
icebp
arpl
scas
mov
push
imul
xor
je
icebp
out
adc
fwait
sub
pop
test
pop
ja
lock
fucomip
sbb
hlt
lahf
dec
inc
adcb
outsb
fstpl
out
sbb
iret
sbbl
mov
push
sub
les
sbbb
insb
ds
sbb
icebp
orl
jecxz
pop
jno
xor
sbb
arpl
jno
cmc
mov
in
jp
inc
leave
fst
jge
notb
rcll
shl
pop
adc
sub
xor
inc
or
stc
push
sub
cmp
dec
jl
ds
aas
loop
mov
cmpsb
xchg
mov
les
push
ljmp
mov
xchg
mov
push
ret
jmp
testb
xlat
mov
push
bound
std
mov
mov
js
sti
pop
pop
into
push
mov
cmc
add
loope
ljmp
ljmp
in
cltd
mov
and
hlt
js
or
cmpsb
mov
jle
int
push
jge
in
jl
sub
xor
dec
mov
fcmovnbe
dec
dec
adc
fs
dec
js
or
in
jno
testb
pop
std
mov
xlat
and
daa
aas
loope
push
xchg
out
cmp
xchg
adc
and
pop
iret
mov
adc
push
shlb
sbb
test
pop
mov
loope
adc
mov
rcrb
leave
inc
cmp
lds
repnz
movsb
sahf
insl
popf
cmp
out
cltd
loop
gs
mov
sbb
fidivl
faddl
stos
pop
inc
mov
lret
jmp
sbb
or
mov
insb
stos
xor
pusha
nop
jbe
pop
test
or
and
pop
fnstsw
jge
jmp
lock
cli
inc
push
inc
cmpsl
mov
hlt
jb
test
stc
lahf
sbb
rol
mov
xor
lock
orb
aad
push
into
stos
pop
out
mov
push
jb
pop
mov
jbe
add
out
push
pop
cwtl
sub
loope
and
rcr
mov
push
je
xor
sub
stos
mov
mov
dec
daa
sti
inc
pop
int3
addl
sbb
mov
mov
dec
add
push
sbb
jge
popf
cmp
jecxz
fbld
cmp
dec
scas
jbe
es
adc
enter
popa
sti
pop
dec
mov
insl
and
int3
leave
xchg
mov
xor
dec
mov
into
cmp
fcomi
jle
in
sti
xor
fwait
jnp
dec
push
mov
xor
repz
xor
jp
and
push
rcll
daa
shll
or
fcomps
cmp
in
ss
mov
in
jle
scas
dec
dec
push
cmc
mov
popf
fmuls
sarl
shlb
scas
jns
jecxz
subb
ss
nop
pop
fdivl
fs
mov
mov
or
test
add
out
mov
stc
jl
or
imul
cmp
xor
cwtl
push
and
push
adc
cmpsb
cmp
jg
jns
in
xor
addb
clc
sbb
loopne
test
icebp
in
mov
and
shr
test
addr16
or
adc
rcrl
fdivl
jecxz
test
ret
sbb
mov
enter
cmp
lods
mov
push
mov
push
xacquire
aas
pop
inc
out
inc
scas
rol
test
enter
cmpsb
xor
sarl
out
int3
repnz
jae
popf
add
jp
hlt
idiv
pop
test
push
cmp
sbb
pop
dec
push
shl
test
pop
pushf
dec
insb
and
or
pop
jne
pop
icebp
scas
repnz
push
or
pop
push
pop
and
inc
dec
jg
pop
pop
clc
pop
xor
arpl
ja
jg
jo
sbb
or
mov
movsl
push
mov
rorl
dec
jmp
dec
outsb
jae
das
dec
jo
ret
ret
inc
and
faddp
dec
xchg
mov
inc
cwtl
or
adc
aad
in
inc
fnstenv
test
clc
popf
push
adc
inc
mov
mov
out
ret
test
push
fnstenv
in
xor
bound
imul
jb
ja
pop
jns
rol
dec
ficoms
cmpsb
xor
sub
lods
lret
shl
pop
dec
cmp
repz
fsubs
scas
notb
cmp
xchg
jnp
mov
xchg
fstps
test
out
mov
lock
inc
cmp
popf
sub
pop
stos
ja
loopne
dec
in
lcall
add
popf
sbb
test
or
add
push
sbb
insl
aad
aas
js
jae
sbb
sub
leave
mov
push
in
or
ja
xor
sub
push
testb
add
sub
rol
fwait
jge
sub
push
and
loope
pop
pop
ljmp
nop
in
fdivrl
cmc
cs
pop
in
pop
bound
dec
pushf
lds
adc
testl
pop
sarb
jo
dec
js
test
ja,pn
push
das
mov
punpckldq
mov
cmp
pop
scas
jecxz
lret
movsl
std
push
add
ret
repz
push
filds
and
jo
retw
push
xor
xor
add
adc
xlat
pop
fsts
cmp
jge
xchg
sub
mov
test
and
sub
or
sub
adc
sbb
leave
mov
outsb
pushw
pop
lods
xor
pop
movsb
or
sbbb
pusha
lds
lret
aaa
pop
and
sbb
pop
xchg
in
xor
mov
outsl
jno
push
in
stos
test
push
adc
dec
fmuls
sbb
xlat
sub
pop
add
imulb
mov
icebp
inc
mov
cmp
push
je
addb
out
xchg
push
lcall
push
call
std
flds
pop
inc
pop
jmp
push
pop
das
gs
sbb
sti
or
in
mov
add
std
js
and
lock
lods
cmpsb
sbb
dec
ret
leave
rorl
jb
lock
loop
js
dec
scas
jle
fs
push
rolb
or
add
cmp
mov
xor
sbb
mov
cmpsb
shrb
gs
mov
arpl
mov
xor
out
push
jl
or
scas
ret
pop
imul
jmp
inc
dec
or
pop
cli
jp
xchg
adc
add
dec
cmp
test
sbb
cmp
lock
xor
in
or
dec
ljmp
cmp
scas
loope
sarl
int3
adc
pop
outsb
xchg
push
and
movsl
fstl
ficomps
out
in
push
inc
cmp
testb
mov
scas
adc
mov
xorl
mov
inc
popf
mov
test
xchg
in
fnstenv
into
xor
mov
scas
jmp
push
insl
sti
adc
cmpsl
jmp
sub
clc
mov
sbb
jbe
xchg
sub
aad
mov
xchg
stos
add
ss
test
pop
lcall
mov
sbb
insb
inc
pop
cmp
sarl
pushf
pop
pop
jno
clc
div
mov
int
lock
lret
sahf
mov
hlt
mov
mov
sbb
rorl
mov
dec
sbb
mov
push
inc
push
xor
cli
insl
push
je,pn
and
aas
sub
mov
cmpsb
mov
lods
push
push
mov
bound
jae
mov
inc
mov
addb
add
std
push
orl
jmp
ja
call
addb
add
pop
fnstsw
dec
jae
into
xchg
cmp
test
or
xchg
mov
jecxz
xchg
ret
sbb
int3
mov
scas
lock
xor
adc
mov
xor
cli
adc
push
mov
int
inc
test
and
es
mov
mov
or
pop
mov
mov
mov
fists
imul
scas
jne
insl
adc
inc
cltd
pusha
cmp
xchg
mov
mov
and
and
std
cs
mov
movsl
pop
iret
lods
ljmp
xchg
cmpsl
sub
inc
or
aaa
out
pop
imul
xorl
sub
pop
fnstcw
fistps
and
fcompl
mov
or
aad
cmp
mov
fyl2x
and
and
hlt
mov
scas
scas
fistps
sbb
and
jle
mov
xchg
mov
hlt
imul
dec
push
pop
test
dec
test
vpshab
push
cmp
aas
xchg
add
mov
adc
inc
xor
push
stos
sub
scas
dec
negb
xor
inc
xlat
fs
sub
ret
adc
js
mov
mov
lret
outsb
xor
repnz
xor
clc
push
gs
adc
jge
xlat
or
jb
fsts
cmpsb
inc
xor
sub
xchg
fbld
mov
cmp
inc
gs
add
dec
push
or
dec
in
lret
xor
nop
cld
cmpsb
in
adc
or
lcall
mov
imul
cmpsl
adc
loop
std
mov
mov
push
inc
mov
mov
xor
mov
sarb
lcall
das
jle
ss
sub
icebp
int
cmpsl
fwait
std
jmp
fidivl
shrl
mov
sub
add
sbb
inc
mov
jl
sti
lds
pushf
jmp
pop
xchg
outsl
mov
push
aas
sub
shlb
fcomi
push
loop
xlat
sti
loopne
push
test
sbb
mul
pop
inc
mov
mov
popa
xor
xchg
lcall
mov
or
adc
or
adc
shl
jne
mov
mov
gs
add
pop
jne
pop
jl
pop
xor
shrl
push
mov
xor
imul
pop
xchg
loop
adc
mov
mov
orl
xchg
leave
push
clc
cld
outsl
push
dec
icebp
test
lock
bound
shl
or
and
popa
test
cmp
mov
daa
xor
cmp
sbb
lods
xchg
sbb
ret
xor
push
cli
daa
push
lock
xchg
and
xchg
rorl
cmpsl
and
sub
inc
fcomps
jge
enter
and
cmpsl
xchg
fidivrl
add
mov
shl
mov
in
sti
mov
movsb
push
and
aas
dec
fisubrl
inc
ret
call
ret
cmp
mov
jp
ds
mov
pusha
out
ret
jno
cmpsl
imulb
sarb
cli
xor
scas
sbb
pop
push
rcrb
fildl
xchg
int3
sbb
mul
inc
fsts
push
movsb
adc
and
mov
js
bound
call
mov
pop
test
xchg
add
cmpsb
stos
cmc
enter
stc
and
aaa
add
push
negb
mov
fs
test
rcrl
test
shll
jle
xor
nop
aas
popa
dec
or
mov
jmp
pop
ret
xor
jl
nop
push
pusha
andl
paddsb
jle
int3
data16
hlt
mov
lea
test
cmp
inc
jmp
insb
ss
aas
idivl
push
scas
add
xchg
int3
cmpsl
sbbb
xor
jb
jg
fs
push
ds
mov
add
sub
movsl
pop
es
xor
and
out
stc
xchg
mov
les
xchg
mov
inc
dec
mov
mov
adc
cs
mov
xor
cmpsb
fistps
inc
mov
mov
inc
jne
hlt
lea
bound
add
fidivs
mov
not
loope
imul
repz
dec
test
loopne
xchg
sub
jmp
es
sub
jmp
dec
dec
addr16
sti
or
push
inc
mov
dec
jnp
inc
inc
adc
aas
in
add
xchg
clc
test
mov
jbe
pop
and
sahf
lds
imul
imul
repnz
or
inc
push
in
cld
ds
jmp
outsl
lcall
mov
sbb
cmc
sub
mov
jbe
jb
sbb
mov
sub
jle
and
pusha
sbb
push
pop
aaa
adc
inc
insl
sub
cmp
inc
mov
mov
fdivl
lret
je
adc
adc
adc
xor
stos
jo
jnp
sub
jle
call
lcall
sub
aam
out
push
cmp
push
push
jp
jmp
jmp
inc
mov
inc
ss
mov
mov
gs
inc
pop
or
pushf
mov
aam
push
mov
mov
ds
jno
push
lret
arpl
lret
fldpi
add
mov
cli
test
cmpsb
pop
and
lahf
bound
inc
sbb
out
mov
div
sub
data16
es
in
and
mov
loopne
loope
jae
lds
rclb
ret
add
push
clc
jmp
mov
movsl
pop
mov
sub
punpckhbw
adc
pop
bound
cli
ja
ljmp
ljmp
mov
xchg
mov
adc
jg
lret
test
sub
push
data16
mov
loopne
repnz
pop
or
retw
mov
xchg
aaa
mov
iret
out
xchg
push
push
add
inc
or
test
push
idivb
cmp
outsl
ret
loop
mov
call
imul
int
cltd
or
sahf
pop
cmc
in
sub
add
pusha
popf
mov
cmp
iret
sub
dec
cld
inc
mov
fmuls
into
iret
lods
mov
cmc
in
fisubrl
stos
rcll
std
push
shll
jne
popf
mov
sti
ss
pop
push
gs
lret
push
lcall
and
sub
ss
mov
xor
xor
gs
int3
in
adc
aad
hlt
scas
pop
sub
pop
into
cs
insl
les
jge
xchg
hlt
fwait
imul
dec
loope
push
jge
sbb
xchg
nop
adcl
in
mov
mov
xor
mov
cli
xor
je
fdivrp
mov
jge
pop
out
add
and
or
std
int3
les
aad
or
sub
mov
pop
add
sahf
cmp
sarl
inc
adc
add
fmulp
and
pop
int
mov
xchg
lahf
xchg
std
push
mov
xchg
lret
xor
lret
cmpsb
mov
rorb
and
sti
test
rcrl
pop
std
xor
movsb
add
push
adc
xchg
xlat
jo
das
hlt
cmp
dec
push
ret
sub
rclb
inc
and
xchg
scas
adc
loop
push
adc
push
leave
aad
out
mov
inc
push
xchg
aas
pop
inc
int
fbld
push
adc
sbb
adc
addr16
xlat
andb
add
push
sub
lahf
fistps
test
gs
mov
stc
fidivl
stc
lret
sbb
cmp
outsb
xchg
out
stos
fcompl
aam
push
std
cli
stos
aaa
bound
mov
sbb
mov
pop
lods
jge
pop
lret
push
mov
push
adc
inc
sbb
jmp
or
pop
test
mov
mov
gs
or
sub
dec
mov
out
add
mov
std
into
aam
sbb
mov
outsl
push
push
sub
jae
sbb
push
add
fcoms
insl
js,pn
outsl
jo
call
lahf
push
iret
leave
out
out
cmp
testb
pop
cmpsb
cltd
adc
lcall
icebp
sti
sbb
push
sbb
in
stos
jns
popa
stc
add
and
mov
adc
xor
sub
sarl
lret
or
inc
inc
inc
testl
push
adc
cmp
repnz
fstl
sub
mov
aaa
adc
sbb
inc
test
add
aam
mov
mov
fdivs
add
jne
or
test
stos
je
adc
jno
jbe
dec
dec
push
sbb
mov
mov
xchg
cmc
jp
pop
push
das
mov
icebp
push
push
fwait
aaa
sub
inc
insl
aaa
sbb
push
nop
movsb
cmp
xchg
jge
lea
and
lret
or
sbbl
xchg
and
sub
mov
xor
aaa
fists
mov
push
or
mov
stos
mov
inc
ja
mull
int3
movsb
sar
and
push
add
cmpsl
pusha
test
cltd
pusha
xchg
xor
jmp
mov
rol
imulb
xchg
jg
xchg
popl
jbe
ret
mov
ficompl
add
push
pop
dec
push
or
shrl
fs
mov
mov
nop
fdivrl
cmp
pop
add
lods
mov
dec
in
sub
imul
and
ljmp
jbe
dec
xchg
loopne
popa
xchg
cmpsl
mov
cmpsb
cmp
sahf
xlat
jae
mov
scas
jb
mov
pop
clc
mov
mov
ret
sbb
hlt
mov
mov
loopne
mov
mov
push
sbb
sbb
mov
cmpsl
fmull
dec
and
push
imul
mov
adc
pushf
dec
jb
int
push
or
cmpsb
not
cld
cmp
inc
mov
cmpsl
movsb
enter
imull
jo
lods
cs
mov
stc
inc
jp
cmp
vmwrite
or
enter
test
pushf
pop
push
push
out
jo
fdivl
xor
adc
pop
iret
pop
pushf
loope
lods
ss
and
aaa
aaa
inc
mov
bound
cmp
add
or
push
lock
inc
mov
and
sub
or
pop
sub
cmp
sub
jge
addb
mov
stos
mov
dec
je
sub
aas
outsb
ret
icebp
loopne
les
sbb
adc
and
jnp
fdivr
mov
xor
cmpsl
mov
jmp
mov
repnz
mov
mov
pop
fistpl
sub
mov
inc
testl
lea
xor
cli
dec
stc
enter
int3
xchg
into
rcll
push
sbbl
mov
add
sub
jbe
xchg
aam
push
and
out
sbb
jbe
jne
int
in
decl
ljmp
testl
mov
mov
mov
stos
mov
cmp
stc
mov
pushf
adc
shrb
imul
pop
adc
leave
xor
jns
rcrl
or
setp
mov
sub
cmp
rol
lock
insl
add
leave
sub
mov
lds
lret
call
pop
outsl
jle
and
out
inc
dec
test
mov
push
dec
inc
ss
jns
push
sbb
fmul
xor
jecxz
pop
inc
jo
sti
ret
mov
mov
das
in
dec
imul
call
or
jecxz
jg
js
fcomps
gs
pop
jge
jle
jle
sti
sbb
shll
in
jne
push
sti
push
sub
mov
xchg
pop
mov
fstpl
das
sub
pop
pop
fnstenv
adc
cld
int3
cmp
cmpsb
repz
or
mov
cli
stos
jmp
xor
fdivrl
push
out
sti
mov
lods
loope
mov
dec
jo
imul
mov
fldl
mov
sbb
stos
aas
rcrb
iret
adc
cli
in
or
xchg
leave
fdivl
push
jle
mov
fcmovbe
decb
mov
in
mov
out
lcall
mov
cmpsb
outsb
das
rorl
ds
pop
push
ja
cmp
jo
adc
mov
xchg
mov
lret
imul
bound
scas
popa
int3
imul
js
mov
lods
mov
dec
jne
lahf
pop
push
or
das
jge
push
xor
jle
or
lcall
sbb
loopne
movsl
addl
sbb
xchg
in
cmpsb
sbb
sub
adc
das
mov
add
and
std
lock
icebp
pop
mov
dec
cmp
clc
sbb
rclb
pop
repz
clc
or
addr16
andb
adc
mov
popa
fwait
test
dec
push
and
mov
das
and
lds
mov
jb
icebp
jne
lret
pop
cld
inc
xor
shr
or
popf
cltd
cli
outsl
fistl
xchg
xor
repz
add
fcomp
xor
adc
push
adc
repz
sti
lahf
pusha
lods
repz
addl
or
sbb
fwait
or
int3
adc
add
mov
sahf
daa
cli
sahf
fwait
ret
stos
push
mov
inc
stos
inc
jb
add
fwait
daa
sbb
inc
mov
push
daa
push
jne
mov
mov
push
imull
xor
sub
xor
loope
inc
shll
out
aas
dec
xor
adc
cltd
pop
mov
insl
mov
mov
xchg
pop
xlat
jge
roll
push
mov
mov
stos
push
lret
aam
repz
inc
lahf
pop
xchg
nop
out
push
bound
mov
scas
loopne
adc
pop
mov
mov
pop
test
xlat
out
js
cmp
sbb
loopne
jle
jge
pusha
out
sub
add
and
movsl
pop
adcb
pop
ja
enter
insl
pusha
popf
loope
ret
jp
in
pusha
subl
push
or
push
pusha
std
inc
xchg
repz
andb
adc
jl
pop
inc
lea
add
dec
mov
add
pop
les
sbb
cmp
pop
pop
stos
call
addr16
xchg
les
aaa
cmp
pushf
jne
enter
sarb
sahf
push
cmpl
ja
jg
ficomps
mov
pushf
std
dec
add
adc
inc
lret
test
xlat
jp
xchg
or
xchg
inc
in
cmpl
mov
pop
adc
adc
or
mov
push
sbb
lret
ss
dec
fmuls
das
mov
pop
mov
dec
lret
cmp
add
xor
adc
pop
std
loopne
sbb
sbb
sub
arpl
fldl
mov
mov
cmp
in
jo
fcoml
mov
es
push
cmp
jp
imul
mov
push
aas
les
fs
mov
loope
xor
das
ret
addr16
xchg
cmpb
jecxz
daa
lock
sub
cmp
ja
ja
bswap
inc
sub
sbb
jne
rol
mov
xorb
and
adc
pop
decl
pop
push
and
cli
add
add
push
neg
add
mov
dec
fisubl
cmp
daa
sbb
and
ffree
ret
fs
or
or
dec
pop
shrb
sbb
ljmp
or
sub
dec
or
test
mov
jp
out
dec
push
jae
dec
lret
aad
fcompl
lret
popf
xchg
and
enter
or
jbe
jbe
cmp
mov
imul
xor
mov
ret
pop
mov
xchg
cltd
jge
jle
cwtl
dec
add
shl
jb
xor
and
out
imul
sbb
pusha
fwait
or
ret
and
rolb
mov
pusha
push
or
incb
outsb
stc
int
cltd
cmp
xchg
push
adc
inc
inc
xlat
cmc
adc
lock
stc
cmp
imul
mulps
dec
pop
xchg
sahf
push
or
insb
xor
or
scas
lret
xchg
stc
jnp
jecxz
add
sbb
jno
je
jmp
cwtl
dec
jb
cmp
inc
xor
outsb
or
mov
loop
js
cmpsb
imul
mov
lahf
shrl
fistl
sar
clc
xorl
aad
pop
arpl
and
fs
mov
sarb
shlb
adc
mov
imul
in
in
and
mov
push
les
pop
add
in
in
xor
adc
push
mov
xchg
sbb
call
test
out
push
and
pop
sub
jmp
inc
sub
inc
pop
dec
inc
jno
pop
lds
jno
xor
cli
push
adc
mov
loopne
std
outsl
mov
shl
inc
push
mov
push
aad
jb
popf
ret
push
push
enter
xor
sbb
cld
rcrl
mov
int
sub
test
mov
adc
test
jecxz
xor
fdivr
pop
push
test
or
inc
popa
mov
push
dec
mov
movsb
ljmp
mov
sbb
arpl
test
gs
dec
aam
movsl
push
popf
cmc
dec
cmpsb
jo
xorb
sub
and
imul
pop
pop
sbb
test
ja
dec
mov
mov
addr16
popl
mov
push
pop
arpl
ficomps
jecxz
scas
jmp
cli
ds
push
dec
xchg
call
xor
jno
lods
xchg
mov
sub
fildll
imul
mov
xchg
sbb
xchg
xlat
mov
lock
cmc
sbb
sub
pop
sub
mov
sub
mov
in
testl
inc
mov
and
fwait
or
sub
mov
fwait
ret
std
xor
or
xor
inc
and
test
fisubl
mov
or
add
inc
popf
mov
ds
repz
ds
sbb
push
hlt
add
mov
push
aam
fisubrl
jp
add
sbb
cmpsb
add
sub
icebp
aaa
aam
clc
es
movsb
fcmovu
into
pusha
movq
call
imul
push
cli
out
push
cmp
or
pop
sbb
jmp
cmpsb
push
fcmovnb
fcoml
sbb
repz
or
mov
out
pusha
pop
sbb
leave
ficompl
mov
cmp
je
leave
add
imul
sub
fcmovu
inc
test
xchg
adc
sub
es
dec
cmp
clc
pop
fldl
int
lcall
xor
or
cli
incl
cmpsl
into
hlt
lods
fld
xchg
push
stc
push
jbe
jae
xor
xor
lret
add
inc
pop
pop
aas
imul
lock
or
in
rorl
out
mov
test
adc
clc
loopne
out
inc
jb
cwtl
popa
out
jb
or
mov
ja
lds
lahf
inc
inc
cmp
jl
and
adc
sub
int3
dec
in
popa
or
xchg
int3
push
push
jo
pop
mov
fimuls
andb
notl
inc
arpl
enter
int
es
xchg
lret
pushf
xchg
xchg
fnstsw
pop
jle
test
test
jno
push
mov
mov
xchg
das
aam
xchg
pop
in
lret
js
xchg
insl
add
in
fiaddl
fldenv
stos
jnp
int3
mov
xchg
std
out
out
imul
call
fwait
or
decb
in
sub
xchg
mov
mov
xchg
lahf
mov
or
and
repnz
sbb
frstor
pop
xchg
xlat
into
xchg
ja
fwait
push
leave
sub
mov
mov
mov
int
xlat
dec
push
or
movsb
into
jg
andl
dec
outsl
adc
lret
fdivl
lcall
idivl
out
pop
lds
push
xor
cmp
cmpsl
cs
jae
dec
sbb
cmp
push
outsl
insl
push
dec
nop
jne
fidivl
pop
insb
dec
sbb
scas
mov
in
int3
fistpl
orl
and
popa
or
push
sub
rcrb
push
or
shl
pop
push
in
loopne
cmp
or
sbb
out
sti
repnz
fsubp
scas
inc
aad
shll
lds
push
cmp
shll
aas
add
sbb
xchg
pop
scas
lea
mov
cmp
mov
sbb
push
mov
lea
aad
and
gs
subb
mov
adc
js
xchg
adc
loope
scas
sti
mov
add
insb
or
mov
xchg
push
inc
cmpsb
hlt
sbb
jns
cld
sub
cld
repz
and
cs
into
jne
ja
xchg
xor
sbb
stc
test
cmp
push
sti
test
cmpsb
sub
sub
cwtl
fmul
rol
mov
jno
mov
ret
addr16
out
fsubs
dec
and
sarl
shlb
sbb
or
sub
shll
lods
lods
add
dec
dec
idivl
pusha
jle
cmp
aas
and
inc
xchg
scas
dec
or
ljmp
jnp
mov
nop
jp
push
or
pop
sbb
lret
in
dec
repnz
dec
mov
jno
xor
aas
fsubrs
push
lds
push
data16
lods
lret
das
sub
pop
sbbb
lods
loope
insb
dec
pop
scas
stos
push
in
leave
iret
mov
cmp
inc
mov
testb
andl
and
mov
mov
inc
cmp
pop
aaa
fsubrs
out
aas
jno
scas
push
dec
mov
mov
pop
add
jae
or
movsb
xor
pushf
push
xchg
sbb
push
sub
lods
mov
sbb
cltd
push
jae
sub
pop
cli
xchg
pop
sub
lret
cmc
mov
mov
xor
sbbb
mov
mov
add
inc
aaa
mov
xorl
xchg
add
cmpsb
mov
addl
push
jg
cli
fmuls
cmpsl
inc
adc
dec
xchg
xchg
fxch
aam
pop
push
adc
jp
in
call
sub
push
add
mov
lods
stc
andl
fsts
pop
addr16
mov
ss
mov
inc
push
test
mov
pop
xchg
sub
imul
rcr
and
push
or
mov
lcall
fimuls
adc
jnp
jns
and
xchg
inc
pushl
aas
push
jnp
jb
cld
xchg
add
pop
push
or
sarl
jo
jg
call
ljmp
lcall
xor
sarl
dec
test
lods
out
push
and
mov
mov
mov
dec
and
shl
push
cli
pop
and
movb
rorl
outsl
ds
cmp
cmp
pushl
xor
xchg
test
push
hlt
jp
mov
push
lret
fwait
cwtl
dec
vmovaps
test
outsl
lcall
or
test
lock
daa
sti
dec
std
add
xchg
adc
dec
pop
sbb
cmpsb
push
add
jb
dec
leave
arpl
popl
loope
xor
cmpsb
jecxz
push
mov
bound
mov
xchg
mov
sub
out
clc
imulb
xchg
aas
inc
pop
sbb
sbb
nop
push
cmpsb
cmp
adc
in
pusha
arpl
mov
ljmp
fs
jns
mov
xchg
ret
mov
dec
in
stc
push
stos
xchg
in
push
outsl
jp
ja
push
test
ss
in
rcrl
loopne
lea
das
jmp
aam
test
imul
mov
stos
adc
pop
xchg
dec
jae
add
mov
mov
out
outsb
out
cmove
or
xlat
mov
and
mov
jg
mov
popl
xchg
fdivs
lret
shrb
gs
aad
fstpl
xchg
enter
in
push
call
xor
fmul
jle
sbb
test
int
es
jbe
mov
push
or
call
pop
ja
gs
cmp
hlt
lds
loop
incl
or
divl
mov
xchg
test
sahf
fs
add
clc
sbb
pop
fildll
push
test
xor
push
out
dec
sbb
mov
or
mov
xchg
mov
xchg
imull
cmpsb
xchg
pop
push
xor
mov
mov
xchg
cmp
push
mov
in
pop
xor
jnp
cltd
int3
fisttps
adc
mov
neg
xchg
mov
test
mov
cli
rcl
mov
mov
stc
in
sbb
add
inc
mov
or
sbb
sahf
test
icebp
add
in
jae
pop
add
jbe
push
ljmp
cmp
ret
cmpsl
and
cmp
jp
andl
push
inc
pop
sub
mov
ss
dec
cmp
cmp
loopne
ja
adcb
pop
idivl
cwtl
push
inc
sbb
nop
dec
test
aad
data16
or
ja
cmp
or
fiadds
outsl
lods
aad
test
jne
jbe
mov
out
jg
jo
movsl
pop
into
clc
jne
pop
pop
orb
mov
and
loop
sub
hlt
jnp
adc
popa
cmp
xor
iret
xchg
mov
cmp
shr
jnp
dec
ljmp
xlat
mov
pop
lcall
leave
movsb
dec
inc
cmp
mov
or
dec
or
mov
shll
cmp
inc
adc
jne
adc
sub
lds
fdivrl
fdivrl
je
dec
pop
out
sbb
sbb
outsb
or
adc
sub
sbbb
iret
stos
je
sub
and
adc
rclb
lods
sbb
fs
das
xlat
or
fisttps
in
fistps
into
sub
adc
movsl
cmp
data16
push
stc
and
sbb
nop
daa
and
dec
std
mov
dec
mov
call
mov
cmc
push
imul
and
leave
jecxz
call
fs
adc
mov
and
nop
pop
xor
cmpsl
scas
clc
mov
out
pop
push
adc
push
xorl
shrb
aad
stc
xchg
dec
push
inc
ljmp
sub
lods
mov
in
mov
mov
jnp
cmpsl
fldt
xor
or
mov
or
fsubs
or
push
into
outsb
cmp
jge
aad
sub
mov
adc
adc
orl
xor
cs
pushf
scas
iret
ret
or
xor
rolb
flds
sub
cs
aam
aaa
fisubrs
lods
movsb
inc
sub
lahf
and
mov
mov
jb
sub
sub
popf
mov
add
push
xlat
notl
test
jns
out
pop
in
lods
test
test
cmpsb
fcompl
cmp
aas
test
adc
mov
arpl
lock
dec
int
pop
pop
mov
out
lods
int
lods
outsl
xor
xchg
inc
shr
push
fstl
stos
movd
aad
ja
mov
sbb
out
xchg
bound
movsb
roll
test
scas
outsb
aas
mov
mov
xchg
fs
pop
das
fyl2xp1
add
repz
xor
cmpsl
add
xor
jge
xlat
dec
xchg
ret
cmp
pop
out
pop
jge
and
outsl
stos
mov
cli
pop
fwait
in
push
mov
out
cmp
mov
inc
es
ss
push
mov
sub
test
and
mov
sub
mov
hlt
mov
adc
iret
or
push
add
icebp
sub
ds
add
fwait
out
sbb
mov
dec
mov
mov
enter
or
mov
and
notl
roll
mov
mov
pushl
xor
inc
adc
sti
jmp
jge
scas
fidivl
pusha
mov
mov
xor
cmp
pop
jge
dec
mov
leave
xchg
lret
ret
or
jmp
cmp
pop
inc
call
jns
and
xlat
bound
aad
scas
jae
in
insb
jmp
pop
mov
dec
ret
das
sub
inc
or
dec
outsl
sub
gs
scas
push
push
js
shr
lret
add
add
movsb
nop
loope
sbb
arpl
icebp
adc
clc
push
sar
out
pop
cld
lret
ljmp
inc
inc
fisubrl
or
mov
into
in
ljmp
mov
push
adc
xchg
push
or
aas
dec
stos
cmp
jns
dec
add
inc
cmp
int
sbb
xor
test
push
aaa
inc
sbb
xchg
aam
outsb
bnd
mov
mov
lea
int
cltd
xor
mov
repz
fiaddl
ret
nop
inc
jge
mov
je
fdivl
adc
inc
pop
negb
loope
lea
shrb
xor
inc
aas
pop
je
and
push
popf
mov
sbb
sub
lds
pusha
mov
fdivrs
cli
movsb
pop
arpl
cmp
mov
mov
jg
push
std
xor
cmpsb
ljmp
pop
andl
mov
icebp
movsl
lock
mov
loopne
fwait
cmpsb
clc
mov
dec
arpl
add
shlb
or
rcr
stos
cmp
shll
pop
loop
repnz
jne
pop
mov
jle
aaa
xchg
jl
jmp
outsb
adc
enter
jmp
mov
sahf
xchg
inc
loope,pt
fdivl
add
testl
mov
xlat
xchg
push
adc
lods
std
int3
mov
nop
int3
out
lahf
icebp
rcll
xor
lret
pop
dec
es
lcall
pop
add
cmp
jo
mov
inc
cmp
dec
imul
inc
pop
pop
fs
push
in
hlt
in
mov
rol
xor
push
js
push
mov
mov
fidivl
aad
dec
cmp
pop
xchg
movsb
test
ret
dec
shll
sbb
dec
xchg
jns
hlt
fidivl
jp
add
out
xchg
data16
das
add
fdivl
dec
cmp
push
jle
hlt
sbbb
mov
mov
inc
das
cli
add
inc
movsb
push
pop
and
shrl
xchg
arpl
out
xchg
mov
aam
pop
test
jg
dec
int3
or
adc
and
ss
shlb
enter
inc
pop
lcall
fldenv
cld
add
sbb
lahf
shll
inc
out
mov
xchg
scas
inc
dec
xorb
jne
in
inc
inc
out
inc
stos
mov
inc
sbb
cmpsl
arpl
mov
xlat
addr16
pushl
shr
push
cmp
fidivl
add
dec
add
cmpsl
xchg
dec
jl
es
sbb
int
outsl
and
and
jnp
je
jmp
pop
jbe
adc
xchg
repnz
cmp
xchg
sub
mov
push
add
insl
aas
and
lret
inc
jg
sub
lock
test
mov
sub
jecxz
in
inc
cmpsl
adc
leave
insb
sub
test
and
jecxz
psrlq
sub
cli
pop
insl
movsl
aaa
insl
outsl
jle
pushf
inc
test
or
push
lret
rol
nop
or
add
pop
mov
sbb
test
imul
cli
or
add
adc
jno
adcb
daa
cli
mov
jne
or
sti
fs
test
pushf
xchg
in
push
dec
adc
sbb
and
es
test
push
pop
rorb
jnp
mov
sbb
imul
lahf
or
push
and
popf
mov
add
mov
aaa
adc
xchg
and
lahf
mov
jb
xor
push
ds
imul
jne
les
xor
insb
repz
movsl
lret
das
sub
les
sbb
jge
call
add
xor
int3
sbb
cltd
nop
xor
pop
clc
and
and
mov
lret
sub
jno
ret
repnz
fistps
cltd
push
lods
xchg
sbb
sub
inc
repz
push
mov
pop
pushf
cmpsl
mov
pop
cmpsl
aam
adc
push
mov
inc
mov
mov
and
test
push
jmp
ljmp
mov
fsubs
ljmp
adc
adcb
addb
mov
push
ror
mov
bound
out
lea
adc
gs
pop
sahf
push
sbb
insl
cs
mov
xchg
xchg
into
lret
mov
popa
mov
sub
xor
push
add
mov
push
iret
stos
outsl
test
and
insl
gs
pop
jbe
push
call
sub
jg
jge
cmp
aad
adc
arpl
scas
aaa
stc
xor
and
sub
cmp
and
sbb
inc
adc
inc
and
fadd
bswap
cmc
mov
lods
aad
pop
orl
mov
outsb
push
inc
xchg
cmp
hlt
lds
sbb
int
into
cwtl
jmp
mov
repz
mov
cmp
in
dec
push
loop
stc
enter
pop
subb
fdivrl
inc
inc
fisttps
xor
pop
adc
push
cmpsb
es
je
test
and
pushf
or
ljmp
push
incb
dec
cmpsl
aas
orl
xchg
cwtl
pusha
inc
dec
scas
out
das
sub
add
pop
daa
aad
icebp
clc
push
and
mov
xor
gs
popf
ret
pushf
adc
aad
jno
out
aas
fwait
mov
adc
jno
imul
popf
out
push
mov
xchg
jmp
into
lods
push
arpl
test
fs
in
pop
mov
gs
aam
call
int3
xor
adc
add
add
not
adc
nop
push
xor
int
cmp
andb
jmp
aaa
inc
mov
dec
lcall
jne
popf
notb
les
lods
pop
xchg
push
dec
test
xchg
or
xor
sbb
cwtl
or
ret
mov
add
jle
and
cltd
jmp
or
iret
js
pop
jne
stos
pusha
xchg
xor
movsb
dec
mov
andl
pop
sub
int3
jle
scas
mov
cmpsl
sbb
add
xchg
xor
lcall
jb
mov
testb
test
mov
mov
jbe
mov
sub
insb
leave
mov
mov
scas
lds
cmp
fiaddl
lods
xchg
and
scas
mov
jns
mov
adc
daa
push
test
or
scas
bound
mov
pop
sub
gs
je
mov
and
jbe
stos
cmp
sbb
mov
and
cmpsb
push
lds
cmp
and
xchg
call
push
and
pushf
mov
pop
cmc
daa
test
fwait
mov
mov
push
inc
jmp
pop
scas
add
pop
jl
inc
mov
das
jne
jge
icebp
mov
fisttpll
shlb
dec
and
mov
adc
push
mov
sub
dec
sub
test
push
adc
adc
inc
adcl
sarb
mov
icebp
mov
pop
inc
push
adc
mov
outsl
mov
repz
dec
jae
adc
dec
std
jb
jo
or
addr16
rcr
add
push
mov
xchg
inc
xchg
sahf
push
jns
push
das
sub
mov
add
mov
inc
repz
cmp
cmp
scas
mov
xor
push
xorl
sbb
dec
repnz
popa
inc
mov
push
xor
int
sbb
push
cmp
hlt
push
and
jbe
sbb
sar
xlat
push
jl
imul
rorl
push
cmp
dec
and
aam
cmp
jmp
cmp
mov
push
add
rcll
lods
sbb
rcll
daa
cmp
jno
and
sbbb
mov
out
mov
popf
pushf
cmp
andl
dec
insl
cwtl
loop
cwtl
dec
mov
ficoml
jns
rolb
dec
push
hlt
sub
dec
add
test
and
fsubrl
mov
ret
lock
and
scas
inc
push
out
sbb
inc
test
call
push
pop
xchg
les
and
add
mov
repnz
jg
cmpsb
fstpt
fidivl
jle
xlat
adc
xor
inc
mov
jns
bound
sbb
shl
push
mov
push
pop
dec
inc
sub
cmp
mov
push
rorl
cmp
cmp
insb
stos
inc
les
daa
in
xor
jb
shrb
adc
fmull
adc
les
cmp
cld
stos
xchg
lret
xchg
out
push
pop
stos
mov
push
in
rclb
aas
dec
or
aaa
xchg
pop
out
test
mov
push
lods
mov
push
push
push
int3
xor
loopne
loope
out
jecxz
add
sub
push
lcall
jmp
cmp
lret
add
cmpsl
sbb
ss
pop
or
mov
mov
je
inc
frstor
aad
outsl
jne
mov
ret
mov
scas
add
mov
push
ds
adc
pop
jne
mov
push
push
inc
daa
shlb
sbb
inc
mov
popf
pop
and
or
mov
or
cmp
stc
nop
xchg
mov
les
rcll
mov
pop
les
dec
fs
in
fnstcw
leave
jne
adc
pop
add
sbb
mov
jp
je
adc
mov
rcrb
push
or
adc
cmp
cmpl
and
movsb
dec
test
sub
jae
xchg
cmc
gs
xor
or
mov
xchg
add
cmpsb
mov
push
mov
clc
push
mov
bound
mov
mov
ljmp
sti
ret
popf
std
push
into
ret
mov
andl
mov
lock
inc
cmp
jmp
add
pop
mov
jno
dec
ljmp
inc
jns
or
jl
cmpl
je
in
cli
lea
adc
push
idivl
incl
adc
and
loopne
shlb
aas
cmc
ja
dec
push
xchg
sbbb
fistpl
ja
std
dec
pop
sbb
sbb
mov
xor
mov
add
sub
test
cmpsb
out
pop
icebp
nop
dec
jo
pop
test
dec
mov
insb
xor
adc
mov
xlat
xchg
and
sub
mov
mov
mov
xor
sbb
test
pop
inc
cmpsl
daa
icebp
and
sub
rolb
sbb
popa
xchg
and
jns
int3
jge
pushf
daa
jo
xchg
insb
add
fistl
pop
daa
repnz
dec
hlt
cmpsb
pop
movntq
out
out
mov
mov
mov
xchg
cmp
cmp
sub
aas
stos
xchg
ljmp
call
test
and
sbb
jae
mov
getsec
scas
sbb
arpl
sti
xor
pop
jecxz
mov
sub
subl
cmc
and
sbb
gs
es
xchg
lcall
inc
sbb
dec
fs
cmp
movsb
pop
ja
pop
xor
mov
in
dec
fidivrl
lods
fstpl
lock
mov
insb
jg
and
je
and
jmp
cmp
fistl
ja
sub
sbb
cmp
gs
popf
mov
shrl
add
testl
jmp
mov
insl
sbb
popf
loop
dec
jge
xchg
xor
fwait
jnp
xchg
movb
adc
jl
das
out
lods
mov
inc
cmp
repz
call
pop
inc
mov
ss
ret
adc
dec
jno
mov
and
jb
dec
push
sub
mov
jecxz
xor
aad
push
sbb
mov
mov
adc
push
loop
ret
int3
test
add
subl
or
cmp
out
int
inc
mov
adc
and
clc
jb
jne
insb
jnp
loopne
out
cmpsb
into
cmp
push
mov
sub
shll
xchg
pop
push
in
and
lock
or
jo
xchg
stos
sbb
mov
in
push
and
cmp
arpl
jp
fcom
repnz
xor
pop
lock
loope
jge
jl
cmpsl
arpl
addr16
nop
cmp
jmp
sbb
lock
cmp
jecxz
push
rcrl
roll
push
addr16
out
clc
adc
adc
into
sbb
in
mov
push
xor
aaa
sbb
add
or
jno
jecxz
sub
mov
loopne
movsb
in
lret
xchg
es
xor
data16
imul
mov
into
pushf
test
pop
inc
jecxz
xchg
pop
rclb
cli
xor
int3
and
cmp
xchg
pop
dec
out
and
cld
test
or
jns
mov
dec
push
xchg
lock
pop
mov
and
insl
outsl
lea
and
pushf
ret
xchg
adc
push
jl
cmpsl
or
stc
dec
adc
mov
inc
hlt
arpl
fmulp
enter
jno
ret
pusha
sahf
ja
xor
xor
cmpl
add
jmp
rclb
out
add
lahf
sbb
cltd
loopne
out
bound
movsl
loopne
orb
and
stos
sbb
jmp
lahf
dec
stos
mov
sbb
aad
push
sub
enter
faddl
sbb
nop
pop
mov
lret
mov
add
in
adc
popf
sar
rcll
jb
mov
sub
stos
add
jp
lds
jp
flds
iret
dec
stos
mov
push
inc
aam
sti
xchg
push
xchg
add
ror
jmp
std
call
stos
add
xchg
sarb
lret
popf
pushf
xlat
into
push
mov
or
sub
lods
jp
dec
outsl
xchg
sub
clc
xlat
in
dec
xchg
bnd
push
mov
icebp
in
loope
jae
mov
adcb
or
jbe
mov
sbb
pop
imul
dec
adc
fsubrl
adc
adc
ss
outsb
jle
fdivr
push
jg
lret
cld
test
jb
push
pop
push
or
xchg
cmpsb
fucom
xor
xor
pushf
sahf
push
inc
pop
jge
pop
out
dec
or
adc
lds
mov
clc
mov
imulb
mov
sub
andl
mov
adc
adc
fsubs
cld
jle
enter
xor
pop
push
ret
dec
pop
into
push
jb
xchg
jno
enter
decb
cmp
cmp
push
movsl
cmp
enter
pushf
faddp
shr
shlb
shll
addr16
inc
xchg
inc
outsl
xchg
leave
scas
xor
rorb
aad
roll
aaa
into
repnz
in
sarl
pop
push
cltd
sti
out
add
dec
mov
mov
sbb
out
fdivr
popa
or
sbb
mov
lret
lahf
pop
rcrl
rcrl
dec
mov
test
sub
mov
inc
stc
mov
dec
jecxz
dec
lahf
lds
cmp
gs
ljmp
cwtl
jecxz
imul
std
xchg
xchg
adc
scas
rcll
push
jmp
bound
xchg
jb
fs
jle
rol
adc
test
sub
lret
nop
add
mov
pop
mov
adcb
mov
sub
and
dec
gs
sti
inc
cmp
aaa
jae
xchg
or
xor
mov
cmp
popa
in
cli
fstpl
mov
repnz
fdivrl
pop
dec
add
dec
lods
lods
popf
jnp
sub
mov
pop
cmp
sub
test
int
ret
test
inc
push
mov
jmp
outsl
into
jecxz
rcrb
out
inc
out
in
fwait
jl
mov
fcmove
lret
in
loopne
idivl
cmc
fsubrl
or
rcll
ss
inc
inc
arpl
inc
sbb
or
insb
sbb
pop
pop
adc
mov
or
mov
push
xchg
jmp
mov
cmpsl
and
dec
ss
jno
xor
cmp
mov
in
xchg
dec
jecxz
mov
insl
popa
movsb
push
pop
popf
sbb
imul
mov
cmpsb
js
pop
push
out
pop
sbb
rcr
aas
out
pop
cmp
in
pop
out
jbe
int3
jmp
iret
sub
adc
jle
or
dec
out
sub
xor
enter
add
push
cmc
adc
in
mov
xchg
fdivr
mov
repz
cmp
jns
orb
mov
inc
mov
add
out
jge
imul
or
cmp
stos
into
icebp
jp
fwait
mov
dec
lret
jae
icebp
xchg
adc
jmp
gs
jle
icebp
test
push
pop
sbbl
pop
rcrb
pop
fwait
sahf
insl
aas
sub
xchg
mov
call
jb
rcll
mov
xchg
inc
addr16
mov
sahf
add
stos
fbld
subb
rcrl
sub
mov
push
xor
sbbb
std
testl
cltd
jno
mov
out
jle
pop
je
popa
push
xchg
sbb
mov
pop
add
push
jg
or
hlt
lret
fcoms
xor
clc
aaa
push
mov
test
dec
push
iret
push
adc
out
cltd
dec
xor
pusha
push
and
stos
les
negb
das
dec
or
aas
and
cmp
inc
lahf
jmp
cwtl
jns
sbb
xorl
leave
add
stc
sti
stos
sbb
xlat
sti
jb
imul
push
adc
mov
js
pop
lods
pop
xchg
and
sbb
arpl
mov
rcll
mov
dec
fs
inc
mov
jle
aas
dec
and
inc
lret
mov
shlb
add
push
arpl
cmc
roll
mulb
in
fsubp
jecxz
cmc
lret
jae
es
jns
inc
push
ret
repz
xor
insl
call
repnz
rolb
loopne
lret
mov
and
push
xchg
lea
xchg
add
xor
or
xor
push
das
pop
mov
sahf
ret
out
setnp
fstpt
xor
jl
pushf
inc
aam
mov
xchg
sbb
cmp
scas
push
negb
and
dec
mov
xor
mov
push
sbb
dec
cmp
push
scas
shl
call
sub
sub
pop
inc
jo
out
push
mulb
jmp
push
jae
adc
pop
mov
fnstsw
jle
ss
fnstenv
arpl
pop
jp
aad
aaa
mov
repz
arpl
add
clc
mov
inc
push
mov
jae
sbb
out
pushf
pop
fsubrl
pop
mov
jbe
insl
and
adc
sbb
iret
jg
mov
mov
test
xchg
lods
gs
or
dec
mov
repz
fwait
fs
mov
imul
cmpl
in
mov
clc
jo
dec
xchg
dec
and
sub
xor
js
pop
pop
sbb
cltd
pop
stc
mov
idivl
fbld
cmp
lahf
cmc
ficomps
cmp
ja
je
cmp
dec
js
insl
xchg
mov
mov
aas
and
out
jg
mov
dec
cli
sub
push
xchg
mov
push
popf
sub
ss
adc
cmp
push
push
test
mul
sar
aaa
xchg
fsubrp
adc
shlb
xchg
jle
mov
mov
adc
or
add
mov
adc
addb
frstor
addr16
push
and
sub
inc
mov
pop
insl
lea
popf
push
fcompl
fcompl
addb
jo
aam
jmp
and
lcall
xor
std
pop
mov
push
and
pop
add
add
loope
pop
sub
scas
sbb
in
fs
dec
push
arpl
and
cwtl
jg
xorl
jmp
mov
jno
popa
dec
jmp
xor
outsl
test
loopne
imul
or
xorb
xor
sub
out
ds
and
daa
adc
int3
aaa
nop
lods
js
scas
push
and
roll
sub
mov
xchg
cltd
cli
ja
outsb
int3
jg
cltd
sub
sbb
shll
cmp
sbb
sti
mov
mov
inc
andl
xor
and
add
cmp
sub
popa
push
sbb
dec
fsts
adc
jbe
lock
push
push
sub
jne
ret
out
pop
icebp
mov
fdivl
fcmovnu
insb
loopne
mov
and
into
jge
movsl
sub
scas
and
ret
ret
in
in
inc
nop
mov
mov
jmp
fadd
sbb
loopne
inc
ss
jno
adc
push
leave
inc
stos
push
lahf
bound
cmc
std
scas
lods
lods
adc
mov
arpl
sub
inc
into
xor
insb
xchg
repz
jae
addr16
adc
inc
out
iret
popf
popa
add
dec
push
lea
push
jl
bound
idivb
jo
add
dec
inc
in
push
pop
popa
and
fdiv
add
inc
mov
jno
add
sub
xchg
mov
rcr
and
mov
inc
insl
idiv
mov
xor
push
shll
sarb
xlat
mov
out
hlt
inc
iret
into
in
repnz
xchg
aad
pusha
mov
pop
cmp
push
xchg
add
and
enter
and
insb
divb
fildll
loop
insl
aad
sahf
bnd
pop
bound
mov
dec
sbb
and
out
jmp
add
test
imul
lret
push
xchg
outsb
and
les
aam
mov
xlat
dec
inc
test
mov
push
jb
xchg
test
sub
add
dec
loop
stc
xlat
pushl
jmp
in
stos
pop
adc
and
in
xchg
mov
mov
loope
cli
jno
lahf
cmp
les
sub
xchg
mov
jp
sub
repnz
inc
push
aam
mov
cmp
movsl
mov
xchg
pop
lods
or
aas
mov
and
mov
adc
sub
jp
cs
call
dec
mov
and
fmul
fs
xchg
inc
xor
test
push
xlat
push
inc
push
dec
clc
aas
es
lcall
cltd
lods
testb
dec
pop
out
roll
lahf
pop
lock
js
pop
mov
clc
add
dec
pop
pop
pushf
or
test
lret
shr
cmpsl
mov
adc
outsb
ja
in
mov
xchg
lds
fwait
xchg
into
cmp
movsl
enter
dec
ret
ret
xchg
add
jo
xor
nop
loop
adc
sbb
shlb
sub
jnp
jnp
pop
push
sbb
dec
mov
mov
fldenv
clc
outsl
ljmp
add
scas
xor
icebp
addb
outsl
cmpsb
rcr
mov
or
fsubl
and
adc
es
stos
push
outsl
pcmpeqw
jnp
inc
out
fldenv
push
test
push
insb
test
adc
clc
lods
enter
cmp
mov
mov
mov
adc
std
pop
push
js
dec
xchg
and
mov
sbbl
sub
cltd
xchg
daa
stos
pop
mov
dec
adc
mov
popa
leave
std
cmp
data16
sbb
or
pop
adc
dec
sbb
xchg
rorb
test
xchg
dec
push
adc
and
sub
insb
fistpll
aad
decl
gs
call
dec
enter
mov
push
rol
adc
in
inc
push
nop
fnstcw
call
or
push
mov
ss
pop
adc
clc
mov
out
push
or
mov
xor
xchg
mov
add
stos
not
fldl
pop
jno
popa
dec
jg
push
mov
mov
test
pop
jno
fwait
push
in
lret
xchg
inc
test
xor
test
jecxz
pop
cmp
push
jp
divb
mov
xchg
stc
push
cmp
cli
xor
leave
jge
cltd
and
in
lret
loopne
out
sub
into
std
push
add
cmp
jbe
pop
in
push
outsb
jl
popf
popf
jns
dec
mulb
sbb
mov
enter
or
and
cmc
mov
push
arpl
out
dec
test
notl
mov
jle
ret
shrl
ja
cmc
and
shll
jo
add
out
mov
out
ja
dec
jns
je
or
jle
loop
repz
ret
repz
pop
dec
fwait
out
inc
xor
es
and
inc
inc
sub
stc
inc
enter
loope
js
rcrl
out
movl
icebp
out
ret
into
inc
outsl
sbb
jne
fsubrl
sbb
add
int3
lds
aad
mov
and
test
jl
out
fstpl
repz
inc
mov
mov
test
adc
mov
inc
cmp
pop
repz
push
jns
lret
dec
adc
paddq
jne
inc
testb
outsb
pop
pop
insl
dec
pop
arpl
mov
scas
into
mov
test
ret
ja
or
cltd
das
jle
lret
sbb
mov
jle
lret
jle
fcomps
js
inc
dec
in
test
orl
std
xchg
xchg
scas
mov
mov
mov
movsl
movsb
fisttps
sbb
lods
jge
xor
sub
jnp
push
xor
je
rep
jmp
clc
fnstcw
inc
ret
stos
int
add
arpl
mov
dec
pusha
pop
iret
dec
xchg
icebp
mov
loope
shrl
jle
mov
cmp
inc
test
bound
je
mov
jecxz
lods
inc
xchg
movsb
ror
outsl
adc
mov
cmpl
js
ja
in
xor
movsb
cld
shlb
popa
mov
or
pop
iret
and
or
cltd
mov
das
add
jmp
add
cmp
inc
aas
push
je
cmp
push
test
jl
dec
jbe
sbb
pop
pusha
xchg
xchg
pop
int
fdiv
dec
lret
shrb
xchg
cld
push
loop
push
arpl
fisubrs
push
in
js
xchg
mov
stc
in
and
lret
dec
jo
push
add
cmp
mulb
mov
cltd
popa
out
cwtl
fisttpl
mov
mov
fiaddl
adc
repnz
je
mov
lea
cmp
adc
add
mov
js
add
outsb
jne
sub
popa
xchg
ss
fdivrs
add
dec
xchg
xor
mov
dec
clc
jno
je
testb
or
mov
lea
sbb
push
lds
sub
push
sbb
ljmp
out
divl
lret
push
inc
lret
aaa
sbb
pop
test
imul
xchg
adc
popf
lods
in
ja
cwtl
inc
insl
lahf
mov
push
mov
outsb
mov
xor
imull
pop
fsts
rcrb
in
lock
je
mov
mov
pop
data16
ret
or
mov
jl
fwait
or
jmp
jge
sar
arpl
add
xchg
mov
or
repz
jbe
loop
insl
dec
xchg
sti
push
jl
sub
cmp
sbbl
lahf
cmp
mov
sahf
out
fidivrs
ljmp
pop
in
sbb
lahf
inc
add
pusha
sbbb
pop
jp
cs
dec
std
out
fs
sahf
lds
sub
outsl
jmp
xor
pop
mov
mov
test
nop
cmpsl
jg
adc
scas
sbb
aaa
int3
cwtl
jno
cld
xor
vphaddubw
inc
jecxz
jmp
imul
aas
or
sub
pop
sub
push
outsb
loopne
inc
xor
push
iret
jb
xor
push
loopne
cmpsl
xor
xor
je
les
fldenv
jl
mov
movsl
mov
out
ret
add
xchg
pop
stc
ret
xor
gs
jnp
pop
clc
jmp
pop
fwait
add
mov
nop
repz
jb
sub
and
push
shlb
mov
sub
sbb
add
and
push
sub
adc
and
arpl
sti
ficoml
dec
je
lock
aaa
and
hlt
sub
fnstsw
push
push
mov
inc
repz
test
ljmp
cmp
data16
aaa
popf
or
into
dec
dec
or
pop
fdivrs
in
vhaddpd
push
clc
std
sbb
test
icebp
cmc
add
lea
dec
bound
adc
stc
jmp
jp
loop
fildl
and
xchg
dec
loop
es
add
mov
lcall
cmc
stos
pop
lcall
repnz
sub
aad
lds
hlt
xor
pop
cmc
inc
loope
cli
into
fistpll
scas
mov
cwtl
stos
aad
sub
out
into
push
mov
and
xor
nop
dec
xchg
fistpll
sbb
ret
cs
std
addr16
jns
ja
vpminub
movaps
mov
cmpsb
cmpsb
dec
add
mov
pop
scas
idivb
pop
mull
adc
cmp
shlb
pop
imul
cltd
adc
and
push
dec
adc
in
cmp
jle
jmp
mov
mov
jmp
test
sub
xor
pusha
inc
rolb
pop
adc
aam
mov
jg
inc
ja
rcrb
cld
sub
int
pop
aad
aas
jb
shlb
xchg
movb
push
or
adc
jmp
mov
cwtl
lea
jmp
inc
clc
push
mov
fmull
sub
mov
dec
bound
jo
dec
and
xchg
lret
pop
in
pop
flds
mov
fldenv
arpl
push
popa
xor
ja
aad
adc
ret
insb
enter
mov
xor
les
dec
push
or
pop
hlt
incb
mov
fnsave
movsb
adc
push
adc
mov
or
fcoml
ds
in
push
das
push
loopne
sbb
add
mov
pop
addr16
jp
push
push
lock
adc
jno
adc
dec
js
shlb
shlb
fiadds
mov
lods
test
loope
fisttpl
aaa
adc
and
hlt
or
fidivrs
pop
movaps
jecxz
lret
sbbb
cmp
xchg
add
adc
and
pop
sbb
dec
mov
aas
mov
int3
add
sub
push
test
stos
mov
orl
jl
inc
inc
sub
fists
mov
scas
or
adc
fidivl
xor
xchg
jno
sub
cmp
scas
add
sub
les
lcall
cmpsb
sub
or
adcb
dec
fdivs
leave
aaa
pop
mov
insb
xchg
popf
cmpsb
into
xor
xchg
fs
mov
cs
adc
loop
pop
sub
inc
sbb
xor
mov
add
in
dec
mov
add
int3
and
xchg
pop
sub
pop
decl
xchg
je
cmpxchg8b
cwtl
int
pop
stos
push
inc
scas
ja
mov
movsb
or
fstpl
popa
popa
aas
jns
sub
scas
imulb
sahf
xor
lea
dec
pop
fistps
add
xchg
cmp
fistps
mov
outsb
or
std
cmpsb
lea
out
pop
mov
test
mov
mov
cmpsl
jne
in
mov
insl
popa
push
push
jg
cmp
jo
rclb
inc
data16
shr
gs
sub
loopne
pop
pop
mov
mov
outsl
lret
inc
adc
sarb
decl
xchg
pop
sub
mull
xor
das
pop
fldenv
ds
lahf
jecxz
imul
mov
pop
dec
jnp
xor
mov
and
pop
mov
cmp
dec
cmp
xchg
shl
mov
jmp
setge
xchg
in
mov
call
push
push
loop
sub
scas
call
cmp
sbbb
gs
aad
add
outsb
and
fdivrs
aad
xlat
sub
inc
push
das
mov
fwait
mov
inc
mov
mov
repz
jno
mov
or
fimuls
in
jecxz
out
xor
gs
dec
add
sbb
pop
pop
jae
cmpsb
inc
jno
mov
test
sbb
push
dec
cmpsb
aaa
fsubs
fsubrl
xchg
jo
fs
push
das
insl
mov
or
push
les
dec
ret
ret
pop
rcll
mov
xchg
jo
ss
fldenv
mov
add
pop
insl
movq
mov
lods
out
pop
movsw
mov
push
pop
cwtl
ficoms
jmp
jns
insb
out
mov
dec
js
test
add
cmp
jl
lret
inc
inc
cmp
and
dec
outsb
mov
push
push
popf
jle
movsl
xchg
arpl
jge
inc
sub
test
or
repz
scas
jge
daa
inc
imul
mov
outsb
dec
in
mov
sub
mov
psadbw
jl
pop
outsb
aam
and
cmp
lds
in
xor
mov
ficoml
into
clc
insb
pusha
scas
loope
subl
sti
cmp
adc
ret
aam
bound
jno
pop
mov
popa
lret
xchg
movsb
insl
scas
adc
mov
rolb
mov
inc
cltd
rol
sbb
jbe
sub
dec
push
ret
lock
divl
or
push
popa
mov
insl
in
push
jb
aam
or
test
inc
ss
adc
pause
sub
repz
inc
mov
mov
adc
lds
inc
sub
dec
sbb
ret
fsts
ja
mov
add
adc
pop
fstpt
mov
sub
ds
xor
popa
fnstenv
inc
or
or
add
jge
or
xchg
mov
fildll
push
add
lahf
inc
jo
dec
leave
and
cltd
push
int3
pop
push
sbb
and
jns
xor
push
and
addr16
loopne
cmp
inc
inc
add
xchg
fwait
aaa
imul
stc
jo
push
movsl
aad
cwtl
ds
sub
imul
push
out
jns
insb
sub
in
cld
push
mov
shl
leave
es
dec
pop
insb
jns
mov
aas
sub
pushf
sub
lea
scas
mov
sub
jp
inc
into
popf
lret
or
jnp
push
and
mov
rep
inc
adc
adc
or
jecxz
ljmp
repnz
jno
mov
push
push
dec
mov
mov
vpsrld
push
test
jb
xor
push
rol
out
lahf
jb
es
aad
mov
xchg
sbb
ljmp
ljmp
dec
test
add
mov
inc
lret
push
aas
adc
xchg
aas
dec
inc
das
jno
mov
jle
adc
sarb
xor
jmp
add
xor
dec
xchg
mov
and
xchg
fcomi
mov
test
bound
xchg
rorb
xor
mov
or
insl
or
insl
inc
pop
movsb
aad
xchg
imul
sub
fisubrl
sti
outsb
cmpsb
sbb
enter
pop
ficoml
mov
adc
mov
bnd
or
mov
rorl
cmp
sbb
out
and
push
insb
js
push
mov
ss
data16
dec
dec
js
dec
lock
dec
dec
inc
push
insl
andb
jne
inc
and
sbb
lock
in
mov
aam
xchg
jo
in
scas
fildl
inc
sub
rcrb
and
aad
push
aad
cltd
push
insl
fwait
cmp
imul
test
fmuls
out
xchg
das
nop
pop
xchg
call
aam
filds
movl
push
enter
sti
push
add
sub
dec
sti
adc
bound
fisttpl
mov
out
stos
or
sub
cmp
inc
xchg
sti
mov
add
pop
sub
and
mov
dec
add
sbb
inc
pop
jne
jecxz
xor
or
out
mov
gs
pop
inc
sbb
imul
xor
pop
lods
test
push
cmpsl
out
insl
dec
out
nop
xor
sti
pushf
in
repnz
inc
add
sub
sbb
adc
sub
shll
pop
rorl
call
mov
mov
mov
jg
or
mov
js
jbe
mov
mov
enter
or
mov
mov
jno
inc
jecxz
xchg
shlb
inc
orl
ret
fs
push
dec
jge
cwtl
adc
pop
cmpsl
daa
fisubs
inc
jo
sub
dec
jns
push
movsl
adc
xor
not
subb
iret
test
mov
in
loopne
popf
das
adc
iret
lds
xor
mov
gs
sub
outsl
sub
repz
xchg
gs
adc
inc
shll
push
xchg
xchg
das
mov
adc
mov
stos
fisubs
shl
ret
cmp
adc
icebp
test
popa
sub
std
sbb
xor
cmp
jb
cmc
xchg
pop
mov
push
inc
jp
push
mov
xor
or
mov
ljmp
xor
cmp
jp
xchg
xor
in
xor
aaa
shlb
leave
add
xchg
lea
cmp
cmp
and
fcoml
fs
xor
add
add
repnz
sub
push
inc
sub
push
idivb
jge
cmp
mov
outsb
sub
mov
je
leave
xlat
mov
pop
mov
mov
fnstenv
and
mov
in
lret
mov
xchg
es
fadds
inc
insl
popa
sbb
sub
aad
jge
pushf
mov
outsl
mov
cmp
int3
adc
cmpsb
mov
inc
out
push
inc
pop
lahf
mov
in
addl
fstl
mov
mov
idivb
ljmp
out
fistl
add
andl
inc
sbb
mov
ret
dec
nop
daa
pop
xor
test
and
fimuls
push
cli
mov
int3
push
fcoml
pusha
mov
sub
dec
mov
xor
in
repnz
inc
pusha
add
pop
fs
pop
or
es
pop
scas
cmpsl
cwtl
es
mov
sbb
mov
mov
ret
das
pop
adc
xchg
pop
lahf
pop
mov
sub
cmp
and
mov
sub
sbb
xor
fisttpl
or
mov
mov
popf
cmp
addr16
cmp
or
xchg
xchg
mov
gs
jmp
test
lret
or
sub
and
xchg
test
imul
lea
pop
aas
inc
fistpll
push
data16
fistl
leave
jno
pop
sahf
rorl
ds
inc
test
shr
xor
popf
xchg
mov
in
movsb
add
inc
mov
mov
adc
jno
sbb
push
push
push
sbb
adc
add
movsb
mov
inc
fnstsw
push
or
adc
push
jno
adc
rorb
call
mov
jae
add
sub
enter
add
shrb
daa
pop
mov
imul
sub
fwait
pop
lds
fdivl
addl
adc
jmp
mov
clc
and
push
mov
adc
inc
jecxz
xor
jno
sub
sbb
fidivl
lret
sub
ret
dec
jne
fsubs
add
cmc
cmp
mov
adc
ja
movsb
mov
mov
sahf
mov
mov
lret
xchg
sbb
imul
push
mov
call
mov
push
push
out
mov
jb
adc
pushf
xchg
outsb
inc
std
loope
jae
mov
stos
in
fdivrs
dec
mov
push
push
sbb
push
shlb
pop
fcom
and
and
movsb
fldenv
dec
jle
mov
mov
push
adc
sbb
add
pop
movsb
cmp
ds
mov
xchg
fnstenv
rorb
add
fidivrl
call
and
xchg
fsubrl
fstl
scas
cmpl
int3
mov
mov
cmpsb
std
sbb
loope
push
sahf
xchg
pop
jmp
jno
or
sub
nop
rolb
xor
cli
and
mov
xchg
rcll
dec
je
xor
mov
ljmp
mov
jmp
clc
xchg
mov
adc
add
and
mov
dec
mov
push
jmp
cmp
adc
mov
imulb
adc
jle
and
adc
ret
dec
lea
sub
rcrb
push
fdivr
enter
pop
and
mov
inc
hlt
cmp
mov
cmp
or
push
pusha
push
mov
lahf
xchg
fdivrp
sbb
fadds
pop
push
jl
cmp
xchg
mov
stos
out
mov
rcrb
ss
lock
cwtl
and
test
cmp
and
fists
jb
test
or
push
adc
jg
scas
setae
flds
ret
and
js
dec
fs
mov
adc
or
sbb
repnz
mov
sub
xor
rclb
sbbb
ss
push
into
xor
jno
fcomps
loop
and
rorb
cli
push
popa
ja
sbb
flds
or
xchg
mov
cmpsl
fbld
dec
arpl
mov
add
pop
mov
lcall
adc
fisttpll
xchg
fs
lahf
pop
in
dec
aas
or
add
lock
dec
push
xchg
add
cmc
mov
inc
or
iret
push
test
sbb
cmpl
idivb
inc
std
shlb
jae
sbb
fistl
xlat
cwtl
test
jl
add
js
ret
lahf
adc
add
mov
xchg
sbb
cmc
cwtl
jnp
loop
lret
popf
cwtl
pop
popa
mov
movsl
xor
inc
mov
cli
cli
jae
cmp
cwtl
sbb
sbb
rorl
pusha
dec
jnp
pop
pop
pslld
add
mov
nop
pop
cmp
or
mov
je
clc
push
xchg
add
cmp
mov
cmp
mov
push
insb
xchg
xchg
mov
inc
mov
js
subl
dec
outsl
sbb
jno
jns
dec
sti
push
adc
loope
dec
push
cs
xchg
push
inc
aaa
icebp
stos
enter
fdivl
mov
fwait
pop
fstp
cmpsb
clc
push
sub
jle
or
and
xorb
pop
adc
cmp
sbb
jo
and
orl
add
ret
stos
xchg
mov
adc
pop
sarl
push
pop
mov
arpl
iret
and
cli
sub
xchg
test
mov
sbb
icebp
adc
pop
inc
jecxz
aam
mov
movsb
lock
adc
sub
xchg
mov
jno,pn
popa
adc
xor
sti
das
xchg
add
test
shlb
mov
rclb
push
out
jb
or
dec
adc
sbb
mov
jno
lahf
std
add
push
xchg
sbb
in
out
add
xchg
mov
push
in
dec
pusha
int3
xchg
jg
adc
push
xor
add
mov
bound
adc
dec
add
or
adc
sbb
sahf
jmp
mov
jno
jecxz
adc
ljmp
ds
mov
scas
int3
insb
dec
inc
ficomps
flds
mov
adc
mov
int
ffree
dec
andl
clc
jge
cmc
sbbl
push
inc
ljmp
cmp
pop
aad
lods
mov
ficomps
ljmp
xor
inc
loop
mov
rcl
add
dec
sbb
sub
ror
cmp
adc
jb
lret
fsubrl
aam
adc
pop
les
enter
adc
mov
fisubrs
pop
imul
leave
insl
cld
dec
adc
nop
pop
cmc
test
in
mov
fnstenv
pop
stos
and
daa
nop
lods
pop
push
das
fidivs
in
lcall
sub
iret
mov
sarl
mov
dec
pushl
push
dec
fsubrs
xchg
ss
into
fimull
xchg
aad
xchg
je
add
mov
and
add
mov
push
sbb
das
out
and
jge
sbb
adc
jno
shll
mov
pop
xchg
lock
fdiv
shrl
adcl
ror
push
fmuls
out
leave
or
or
test
out
inc
data16
cmc
inc
pop
int3
int3
mov
push
fstpt
mov
fadds
mov
es
mov
sub
or
inc
jb
push
lock
rcll
test
icebp
cmp
fwait
loopne
fistl
jbe
lcall
jb
lds
insl
push
add
jae
shrd
push
call
fst
adc
scas
jle
imul
mov
enter
dec
sub
inc
add
lcall
je
dec
pop
xchg
insb
cltd
xchg
rorb
rorb
lea
and
fchs
inc
or
pop
pop
fcoms
jecxz
pop
and
or
fnclex
lahf
rorl
add
outsb
dec
std
ljmp
jmp
sbb
jno
das
cmp
in
out
cmp
pop
jno
in
stos
das
lahf
or
ficoms
mov
cld
mov
sbb
mov
and
xor
inc
hlt
lea
and
cld
or
or
sbb
xchg
dec
dec
jo
push
cmc
pop
jg
add
lret
xchg
stos
enter
int
scas
push
test
outsb
push
icebp
jns
repnz
jno
add
pop
test
mov
push
adc
pusha
mov
or
xchg
lahf
or
test
jmp
inc
mov
inc
cltd
js
call
sbb
ret
aam
pop
mov
roll
mov
out
or
incl
outsb
xchg
push
inc
xor
and
lahf
and
xchg
outsb
rcrl
cmp
push
inc
insl
inc
push
flds
and
pop
cli
mov
sub
je
xor
dec
dec
clc
movsb
mov
vmovdqu
das
rcrl
lret
xor
arpl
mov
sbb
ja
pusha
in
lcall
out
aaa
jecxz
sqrtps
mov
cmc
fdivrl
cmp
fbld
jp
mov
xor
adc
out
out
xchg
push
movsl
or
mov
xor
negl
inc
fisubrs
mov
sahf
hlt
adc
test
es
sub
and
lds
dec
adc
cmc
daa
imul
pushf
sahf
imul
add
xchg
imul
ja
loopne
cmp
hlt
fisubrs
inc
inc
sbb
xor
pop
out
int3
adc
sub
out
in
rorb
daa
push
xchg
cmp
or
fisubl
push
out
neg
ret
in
cmpsb
push
cld
push
push
jne
in
shlb
fstpt
push
inc
push
pop
fisubl
push
cmc
cmp
cmp
and
cmp
add
loopne
lea
fwait
mov
in
inc
sti
repz
or
lea
mov
sub
dec
push
movsl
ljmp
aas
dec
and
mov
pusha
je
mov
mov
or
xor
fisubrs
jbe
cmp
xchg
adc
scas
inc
cld
push
inc
mov
ja
in
insl
or
xor
xor
addb
dec
and
cmp
sub
clc
mulb
dec
lret
mov
xchg
cmc
adc
xor
xchg
sub
pop
insl
iret
ffree
jmp
hlt
push
arpl
mov
and
sbbb
adc
jmp
lahf
shl
dec
stc
and
adc
lods
pop
pop
cmpsb
fwait
cmp
mov
add
push
test
out
dec
aaa
xor
adc
push
outsb
test
outsl
cmp
lods
movsb
adc
xchg
stos
call
leave
rorl
add
push
adc
xchg
and
lea
or
rcr
dec
popa
fs
stc
xchg
inc
movsl
or
push
arpl
xchg
push
mov
cmp
push
iret
push
mov
xchg
cs
push
int
sub
add
in
pop
cmp
imul
sbb
xchg
sbb
mov
lods
and
mov
jmp
clc
lds
loope
out
fld
test
push
pop
sub
repnz
mov
stos
outsb
jno
cmp
hlt
test
fldcw
mov
inc
or
or
add
mov
in
jb
pop
or
incl
ja
es
cld
movsl
pop
xor
addr16
aas
and
shlb
lods
mov
hlt
pop
cmp
lock
insl
mov
in
pop
xchg
pop
jecxz
mov
or
mov
aaa
loopne
scas
lahf
push
sub
sbb
push
dec
icebp
lcall
insl
mov
pop
inc
mov
sbbb
imul
push
push
jmp
insb
add
xchg
sbb
lock
sub
loop
jb
dec
push
loope
push
cli
lock
cmovo
mov
xor
cmp
cmp
ja
and
pop
stos
bound
mov
lods
ret
push
or
push
mov
push
in
lods
je
and
mov
test
aas
in
in
push
jmp
or
dec
xor
movb
andl
adc
mov
or
adcl
rolb
ror
add
in
lret
push
lock
xor
push
sbb
add
dec
dec
imul
cmpsl
and
mov
fisubs
mov
cmp
jle
xchg
icebp
mov
je
mov
xchg
je
push
or
or
inc
add
es
add
in
push
pop
jno
mov
dec
aam
add
sbb
push
and
adc
push
pop
ss
or
xchg
imul
adc
cmpsb
dec
push
rclb
flds
jl
mov
cli
push
les
test
jns
push
insb
rol
jge
push
cmp
push
jnp
inc
jp
push
pop
mov
jae
push
mov
nop
sbb
adc
xor
test
test
mov
cwtl
stos
mulb
mov
clc
rorb
and
ja
xchg
jne
jp
scas
mov
mov
popa
outsl
jmp
cs
sbb
or
push
cmp
cmp
cmc
adc
sub
dec
movsl
mov
mov
sbb
sahf
add
mov
rol
and
xchg
in
sbb
js
mov
scas
pushf
jecxz
dec
andl
nop
stos
idivb
mov
pop
stos
mov
xchg
out
jb
aaa
cmp
add
xchg
ss
or
test
fsubl
mov
repnz
xlat
daa
jle
popa
and
int
xchg
outsl
lahf
cmp
sub
and
fnsave
loopne
xor
push
jmp
sbb
icebp
dec
push
xchg
adc
test
xchg
mov
push
mov
insb
out
adc
xchg
popf
sbb
lds
push
mov
mov
add
cmp
in
loop
pushf
test
rcr
dec
rcrl
mov
sbb
dec
mov
xchg
cmp
cltd
jns
aad
pushf
lods
mov
mov
test
jno
je
sti
fistpll
pop
lock
pop
in
iret
push
loopne
stos
inc
xchg
ficomps
cwtl
sub
lret
stc
dec
pop
out
sahf
scas
dec
movsl
adcb
add
iret
xchg
push
test
ljmp
mov
stc
testl
dec
or
repz
scas
cmp
jp
jb
and
jmp
nop
int
addr16
data16
ss
xchg
gs
arpl
dec
dec
sbb
mov
int3
dec
shll
mov
pop
push
xor
out
mov
das
lea
xchg
aaa
mov
push
jle
jae
and
ret
out
xor
out
jno
loope
pushw
cltd
cmp
or
and
mov
sub
dec
fmull
icebp
sub
lods
mov
pop
add
push
stos
loopne
mov
cld
mov
push
sub
dec
cmpl
and
xchg
out
adc
jmp
mov
fmul
das
decb
test
push
xchg
daa
mov
andl
push
ljmp
fcomps
cmp
add
testl
mov
sti
mov
push
pop
add
loope
jle
dec
imul
xor
sub
xchg
sarb
pop
and
stc
xor
sbb
xchg
push
stos
and
add
outsb
ret
pop
out
div
dec
xchg
xlat
and
mov
in
dec
or
mov
sub
dec
mov
pop
loop
shl
popf
push
inc
sub
leave
pusha
bound
xchg
cmp
or
jne
push
out
cmp
cmp
mov
cmc
mov
popf
mov
adc
adc
jb
xchg
pop
mov
fs
out
sub
cmp
and
jno
int3
xchg
inc
iret
jnp
mov
adc
adc
imull
out
int3
movsb
inc
mulb
cmp
jecxz
fisttpl
sub
daa
xchg
insb
push
mov
mov
inc
xchg
adc
ret
jmp
adc
in
mov
or
out
popa
in
push
pop
dec
lock
fisubs
xlat
out
mov
mov
pop
ljmp
vmread
arpl
jb
call
bound
dec
adc
aas
int3
sbb
inc
rcr
xor
sub
leave
inc
in
push
negb
or
icebp
jo
inc
jg
scas
cmc
xchg
popf
sbb
push
lcall
adc
mov
mov
mov
push
pop
jnp
scas
std
insl
xor
mov
scas
lds
lods
or
insb
mov
xchg
jecxz
adc
ret
movsb
pusha
pop
mov
jne
mov
emms
dec
and
rcl
inc
mov
xor
jno
pop
dec
aaa
cmp
sub
sbb
mov
inc
xor
add
adc
sub
cwtl
loop
shll
push
mov
sahf
pop
fwait
xor
cltd
mov
movsl
aam
fadd
inc
stc
inc
xor
bnd
inc
jge
nop
mov
jl
inc
pop
addb
sbb
cld
xchg
add
es
test
rcrb
repz
mov
jo
and
xor
pop
mov
mov
push
lret
pop
pushf
sbb
mov
sub
xor
add
stos
push
xchg
call
outsl
stc
aad
arpl
push
or
das
add
xchg
fnsave
xchg
xchg
jno
jmp
mov
pusha
mov
aas
mov
out
popa
clc
cwtl
out
clc
push
adc
xor
cmp
leave
sub
push
jo
jle
and
movsl
popa
sarl
test
mov
test
sbb
mov
popf
and
fmull
cmc
icebp
sbb
dec
aas
mov
add
fbstp
ret
test
int3
loopne
or
xchg
movsb
insb
shl
pop
push
xor
popa
and
fiadds
inc
hlt
sbb
std
add
sarl
loop
mov
addb
stc
cmp
cmpsl
test
or
leave
add
shl
sbb
jl
aas
sbb
cmpsl
mov
mov
outsb
addr16
mov
nop
mov
jp
jle
add
inc
xchg
stos
push
popa
jp
xchg
inc
sub
push
and
addr16
mov
in
add
sahf
sbb
pop
add
lock
repz
jmp
mov
insb
imul
pop
frstor
rcll
test
enter
in
int3
xor
mov
fldcw
add
enter
cmpsb
pushf
cli
cwtl
dec
mov
jle
enter
push
cmp
sbb
cmc
or
add
int3
mov
shlb
and
xor
sti
sbb
push
cmc
xorl
jbe
sbb
testl
leave
out
xchg
xorl
jns
pop
popa
movsl
cwtl
jo
inc
and
inc
sbb
daa
inc
insl
divb
jl
mov
lret
add
add
dec
ret
xlat
aad
test
add
mov
cltd
lods
xor
xchg
lods
add
jmp
in
pop
cmp
bound
push
scas
mov
addl
sub
jecxz
cltd
pop
popf
out
mov
sarb
int3
aas
rcll
push
sti
sbb
lea
lcall
out
push
push
mov
data16
push
xchg
mov
jle
ds
mov
jne
incl
and
repnz
shrb
cmpsl
test
divb
hlt
jecxz
loopne
push
dec
mov
adc
push
lea
dec
adc
or
mov
xor
in
mov
mov
dec
mov
push
aam
dec
iret
in
pushf
sub
sbb
inc
add
fcompl
lock
xlat
cmpsb
mov
adc
xor
mov
aaa
xor
cmp
iret
js
inc
rcrl
xchg
xor
jo
sbb
loop
or
lock
sub
je
and
icebp
in
jbe
js
hlt
fmulp
mov
mov
fcompl
mov
fnstcw
mov
wrmsr
aad
xchg
fnstcw
xchg
push
jbe
clc
enter
in
xor
in
cltd
add
add
in
aam
lahf
lahf
push
mov
add
xchg
cmp
or
adc
dec
in
cmpsb
jmp
popa
clc
movsb
loope
xor
xchg
fnstenv
pop
pop
push
dec
adc
cmp
call
xacquire
or
mov
cwtl
cmc
mov
mov
hlt
pop
push
enter
aam
imul
mov
dec
pop
lea
call
movsb
inc
gs
mov
out
inc
sbb
cmp
cmp
jns
adc
jp
lcall
je
sbb
gs
inc
xor
xor
dec
aaa
loopne
inc
aaa
test
mov
ss
jb
cld
leave
cmc
ljmp
pop
dec
push
jno
iret
dec
push
push
mov
into
test
fidivl
hlt
add
or
mov
jmp
std
pop
xchg
xchg
int
add
pop
pop
adc
cmp
jns
jnp
xor
cld
push
xor
arpl
sub
testb
fidivrs
popf
inc
or
pop
mov
sbbl
repz
cmp
xchg
pop
test
jbe
in
pop
out
rorb
leave
test
dec
test
xor
int3
sbbb
dec
dec
mov
test
or
inc
scas
pop
mov
rolb
mov
imul
dec
lods
inc
ja
ret
std
sbb
stos
cmc
mov
xorl
xchg
aad
ljmp
out
and
xlat
push
ds
jmp
sub
hlt
popf
stos
call
cmp
push
cmpsl
and
sub
pop
pop
std
xchg
insl
loopne
push
jmp
stc
add
jo
sbb
cltd
shrb
lods
je
js
cs
adc
lods
dec
mov
ret
movsl
ret
pop
into
aas
push
sub
and
adc
nop
mov
subl
call
test
sbb
mov
sbb
int
repnz
lret
adcb
xor
arpl
jnp
sbb
iret
sti
mov
mov
and
dec
xchg
rcrl
adc
lret
push
decl
mov
mov
scas
mov
cmp
pop
xor
inc
xchg
in
in
fstpl
inc
in
or
sub
push
xor
cltd
shrl
imul
mov
inc
in
mov
negl
scas
xlat
mov
and
xorb
jnp
push
ret
push
or
pop
jno
mov
cmp
xlat
inc
leave
or
mov
insb
cmpsl
aad
mov
or
xchg
ja
push
arpl
enter
dec
pusha
and
sub
arpl
jmp
mov
jle
bound
loop
cmp
js
mov
in
pop
les
add
lods
pop
mov
or
repnz
in
inc
lods
repnz
dec
call
sub
loopne
inc
dec
fidivl
mov
aaa
dec
mov
ja
adc
jae
sarb
sub
aad
aad
pop
fmull
jl
mov
pop
jmp
fldt
cmp
add
dec
les
testb
mov
jp
add
lock
jp
sub
daa
test
in
push
sub
sub
dec
lahf
cmp
stc
fs
insl
mov
sub
mov
xchg
sub
mov
leave
sub
mov
jnp
das
pop
jecxz
pop
sbb
mov
cld
ret
jge
sbb
mov
insb
fcomip
les
shll
sbb
xchg
clc
sbb
js
popf
shlb
test
adc
push
fidivs
mov
pushf
lea
jns
inc
orl
sub
loop
cmp
dec
data16
push
or
dec
or
js
push
jne
neg
lea
fs
push
pusha
xchg
loop
and
adc
aaa
daa
sub
out
xorl
and
mov
mov
jae
jecxz
daa
lahf
clc
out
ss
or
or
test
jecxz
add
xchg
lret
mov
add
sbb
or
add
sbb
movsl
fdivs
in
add
jmp
out
ret
lds
mov
cltd
call
mov
aaa
pop
mov
in
repnz
xchg
cmpsb
cmp
pop
xchg
aas
rorl
push
rorl
push
icebp
lds
out
add
aam
pop
call
xchg
loop
cwtl
cmp
push
loop,pn
xchg
or
sbb
xchg
mov
or
push
fsubp
push
in
add
cs
and
jnp
mov
bound
scas
scas
pop
or
aaa
mov
test
ss
xlat
jne
mov
fldl
stc
std
jae
dec
outsl
leave
les
mov
xor
repz
cltd
in
fstl
sahf
das
mov
sbb
out
arpl
cmpsb
sbb
mov
cmp
sub
inc
addl
pop
push
xchg
xor
scas
pop
sub
xor
cmp
xor
xchg
gs
xlat
lods
rorl
pop
cmpsb
mov
shl
xor
inc
mov
xchg
into
in
push
mov
and
push
mov
shlb
into
jo
fcmovnu
xchg
jnp
pop
ljmp
jl
lock
cmp
pop
add
lretw
xchg
adcb
cmc
call
lods
das
sti
and
xor
xor
push
add
into
and
sbb
outsb
enter
dec
xlat
inc
xchg
sbb
mov
in
add
scas
sub
pop
jp
jne
xchg
dec
jbe
push
leave
push
sub
outsl
and
gs
xchg
xor
flds
xor
hlt
mov
mov
jp
or
xchg
dec
sti
fcmovne
ret
add
xchg
int3
xchg
clc
inc
lea
cmp
dec
adc
aas
jo
mov
mull
xorb
mov
and
or
push
jne
jns
testb
notl
repz
mov
aam
lods
inc
jbe
das
arpl
adc
shl
test
movsl
xor
dec
jnp
mov
jno
push
insb
fwait
repz
dec
nop
adc
jl
sarb
pop
inc
sub
dec
mov
addl
mov
in
stos
lret
fcoms
es
aaa
jbe
cmpsb
pop
adc
jmp
pop
es
orb
clc
shlb
mov
ljmp
sub
ror
pop
jae
push
mov
add
xor
insb
insl
pop
xchg
dec
cmp
and
shl
mov
mov
lock
xchg
dec
cmc
mov
cmp
pop
into
ds
push
into
xchg
ja
inc
mov
iret
xor
jle
lahf
test
leave
aad
xchg
in
jecxz
inc
fdivrl
loop
xor
loop
test
mov
sbb
gs
mov
ret
dec
test
test
inc
inc
test
imul
pop
push
sahf
adc
notb
mov
das
ljmp
out
xchg
test
xchg
sahf
xor
movsl
pop
jmp
dec
mov
mov
xor
vpacksswb
xor
inc
es
add
addb
out
test
xlat
adc
mov
js
andb
mov
notl
sbb
test
mov
xor
mov
push
lret
sbb
xor
xchg
pop
push
insl
jge
shlb
inc
xchg
push
fcoml
rclb
jmp
fs
and
mov
jbe
or
mov
imul
adc
or
test
sbb
inc
sbb
lret
jl
insb
lcall
add
xchg
or
xor
adc
sbb
sub
xchg
sub
cwtl
addb
jg
add
xor
mov
sbb
add
jl
xor
int
cld
ret
mov
mov
pop
stos
addb
and
sbb
ret
icebp
mov
pop
sbb
loop
les
insb
mov
push
cmp
and
xchg
test
outsl
mov
dec
sub
sub
cmp
aas
adcl
mov
mov
cmpb
popa
push
jg
mov
xor
aad
leave
push
arpl
enter
enter
pusha
or
pop
test
push
sti
sahf
and
shrl
mov
stos
arpl
add
fadds
jns
mov
bound
sbbl
sub
mov
add
cltd
sub
mov
sub
fistpll
pop
dec
ret
lret
mov
repz
add
xchg
or
inc
push
mov
jmp
test
call
pop
dec
cmp
ret
lret
leave
push
or
mov
or
test
test
push
sbb
mov
push
icebp
dec
daa
mov
mov
jmp
movsl
mov
out
popf
lock
out
in
pop
ljmp
mov
leave
pusha
inc
and
int3
and
cmp
popf
and
mov
xchg
and
ret
xchg
jmp
or
mov
faddl
jae
cli
push
and
out
jl
jae
ljmp
cmpsb
or
roll
mov
push
imul
loop
repz
fs
fucomi
pop
xchg
fbld
in
lods
mov
xchg
and
jle
daa
in
aad
and
pusha
fistpll
stos
and
sbb
push
lahf
dec
adc
and
and
js
sub
data16
mov
dec
das
jae
push
push
push
xchg
fwait
sti
fstp
mov
not
rcrb
fldl
inc
jnp
mov
adc
mov
dec
push
pop
ret
shl
and
cmp
es
std
adc
add
push
dec
adc
push
cmpsb
scas
jmp
mov
mov
out
adc
into
ss
mov
push
out
and
iret
int
and
inc
push
sbb
bnd
pop
cli
pop
cli
jle,pn
fcmovu
in
sbb
lret
daa
cmp
add
jmp
cmp
inc
push
jae
or
push
mov
dec
aaa
daa
adc
outsb
shlb
in
std
jbe
ret
addr16
xchg
inc
jnp
sbb
mov
mov
rorl
loopne
insl
jmp
pushf
rolb
imul
push
fldt
sub
testl
stc
lea
dec
jbe
inc
fs
pop
orl
dec
je
popf
or
out
adc
sarb
cli
movsl
dec
push
mov
mov
out
mov
stos
xchg
push
push
movsb
outsb
jae
idivl
daa
mov
xchg
int3
pop
mov
loop
insb
clc
scas
cld
insb
iret
cmp
in
repnz
int
insb
iret
mov
arpl
mov
and
pop
lret
daa
hlt
xchg
inc
aas
xor
call
les
jbe
cli
xchg
xchg
jns
std
insl
mov
outsl
mov
mov
and
push
arpl
imul
test
adcb
fmuls
testb
mov
lret
notb
or
or
cmc
dec
in
mov
mov
scas
sbb
inc
jp
idivl
xchg
and
or
leave
aad
push
mov
dec
ficompl
loop
not
jb
daa
aam
fstpt
and
jecxz
inc
addr16
outsl
in
cmp
dec
xor
sbb
mov
pushf
or
icebp
sbb
daa
pop
cmp
nop
inc
mov
mov
enter
add
or
sarl
mov
mov
lds
inc
mov
and
popa
stos
hlt
mulb
cmp
and
adc
icebp
subl
std
jno
inc
inc
into
jecxz
hlt
add
mov
jp
popa
xor
fimuls
mov
aad
jb
das
dec
sbb
push
fiadds
mov
es
aas
xchg
adc
aad
push
xchg
jle
or
push
push
popf
mov
fimuls
mov
pop
dec
hlt
mov
inc
mov
cmp
jne
cltd
add
mov
insb
push
xlat
pop
leave
inc
addl
test
cmpsb
mov
xchg
sub
repnz
ss
jl
and
insl
stc
scas
cli
jae
call
fadds
xlat
push
mov
inc
in
jae
popa
fsub
stc
jecxz
rcrl
and
sbb
test
mov
lret
fidivrl
push
outsb
sbb
xor
adcb
loop
sub
clc
decl
cmp
cmc
sbb
and
loop
in
or
adc
add
jg
shrb
in
pop
mov
jp
jl
stos
adcb
jne
sub
jl
push
lods
mov
pop
test
pop
cmp
dec
pop
and
aam
loopne
mov
cmpsb
jmp
push
adc
rorl
add
adc
imull
lret
dec
or
push
lods
inc
jmp
inc
push
inc
adc
nop
jle
notb
jle
mov
pop
sbb
lods
outsb
push
and
fs
aad
clc
jbe
push
mov
push
add
jle
cld
in
cltd
mov
and
push
loopne
push
pop
in
hlt
mov
cmpsl
push
popf
je
fsubrs
push
push
call
test
or
xchg
shlb
and
sbb
sub
pop
cli
aas
shll
lcall
lods
xlat
test
enter
mov
iret
push
push
jmp
test
sbb
sti
in
cmc
leave
int
rorl
stc
pop
cmp
cmp
jge
pop
xchg
test
inc
mov
mov
jp
loop
push
add
mov
flds
sbb
cmpsl
mov
test
or
jb
icebp
mov
aad
mov
jbe
pop
in
fwait
mov
cmp
pop
repnz
and
das
cmp
adc
dec
xor
in
adc
lahf
inc
mov
aam
add
add
add
popa
cltd
dec
pop
pop
out
clc
mov
pop
inc
fisubl
push
aam
mov
arpl
sub
push
ljmp
xor
popa
mul
cmc
pop
repz
push
mov
cmp
or
mov
mov
adc
adc
dec
or
dec
inc
cmp
jmp
adc
xor
jl
pushf
ss
rcll
cmp
int
jns
int
dec
sarb
ds
jns
or
mov
adcb
mov
mov
xchg
es
je
scas
push
mov
sbb
and
in
sub
je
mov
ljmp
cmpsb
push
clc
ds
outsb
dec
pop
sarl
dec
roll
dec
xor
jg
push
mov
enter
lea
aad
dec
inc
xlat
roll
in
dec
jo
and
adc
aam
enter
pushf
mov
insb
mov
jnp
mov
fbld
xchg
push
shll
mov
or
cmc
dec
xchg
cwtl
push
in
sub
nop
inc
jg
in
add
xchg
loopne
add
mov
xchg
pop
pushf
in
push
daa
cmp
xchg
stos
adc
add
jae
leave
jmp
jbe
jl
lret
or
inc
inc
lea
inc
inc
inc
adc
sahf
call
test
mov
mov
push
or
in
rcl
arpl
mov
mov
mov
or
int3
push
in
push
jp
push
mov
and
or
mov
mov
mov
push
or
aam
mov
repz
les
jl
mov
fcomps
int
pusha
in
adc
std
mov
push
cmpb
movsl
test
pop
movsb
jno
push
pop
aas
imul
imul
negl
add
xlat
loopne
or
xor
pop
movsb
fildll
mov
loop
test
push
scas
daa
add
mov
jno
mov
push
push
mov
outsl
jo
xor
sub
pushf
ja
loope
xchg
test
rcr
movsb
xchg
andb
add
inc
dec
push
mov
int3
jno
push
xchg
jns
cld
fdivrl
insb
mov
sbb
push
imul
fisttpll
adc
cltd
lcall
inc
push
cli
int
rorl
gs
cmp
js
std
int
outsb
addr16
fisttps
aaa
inc
sub
adc
jns
and
leave
sbb
test
mov
and
iret
out
sbb
cwtl
mov
dec
rclb
call
jmp
sub
loope
mov
test
fsubrs
mov
sarl
in
andl
sbb
add
pop
lahf
pop
pop
jo
ret
mov
dec
or
jl
push
sub
adc
je
rclb
push
xor
xchg
xor
xchg
test
fs
call
in
enter
and
jmp
sub
lcall
xchg
in
cmc
pop
stos
jae
xchg
rol
mov
jo
lods
cli
jmp
xor
or
lea
mov
rcrl
or
test
jge
jle
fildll
cld
jg
xchg
repnz
pop
leave
clc
ror
addl
add
pop
popa
fldl
outsl
add
in
cmpsb
cmpsl
or
fbstp
das
adc
sbb
out
roll
pop
loope
jo
in
jg
or
mov
aas
mov
add
aas
or
sbb
jp
pop
loop
mov
add
add
push
loope
popl
push
and
es
cltd
adc
lds
adc
jle
pop
enter
and
sbb
mov
push
rcrb
popf
lret
in
xlat
cmp
je
pop
sub
jl
loopne
xchg
pop
fcmove
jmp
fadds
jle
popa
orl
rep
cmp
fildl
and
dec
or
insb
jl
daa
add
movsl
clc
pop
je
pop
stos
fs
adc
jge
cmp
repnz
cmp
imul
adc
test
mov
movsb
insb
adc
dec
hlt
xchg
mov
push
lcall
test
mov
movsb
in
fdivl
call
mov
dec
stos
mov
insl
loop
xchg
add
push
sarl
orb
and
mov
cmpsl
fs
jecxz
rcrb
mov
push
mul
call
pusha
sbb
xor
call
subl
and
loope
iret
adcl
movsl
mov
je
inc
jmp
or
push
push
xor
repz
mov
sub
ss
gs
repz
push
jno
cmp
cmp
cld
loope
loopne
and
xchg
nop
into
push
mov
std
sub
xchg
sub
lcall
push
xor
ljmp
sarl
gs
jae
lock
std
and
arpl
push
mov
rcll
mov
push
pop
bound
pushf
mov
lahf
repz
out
pop
xchg
aam
daa
pop
mov
stos
push
dec
push
clc
xlat
inc
adc
push
jo
pop
inc
imul
or
adc
dec
add
xchg
ja
leave
mov
sbb
int
adc
icebp
fwait
inc
loop
cmpsl
insl
add
push
int
out
mov
push
pandn
imul
outsb
mov
mov
push
xchg
fidivrs
lock
iret
mov
in
sarb
in
jmp
dec
cli
fists
xor
xor
shlb
ss
xor
arpl
xlat
inc
dec
pop
mov
xchg
aas
add
add
dec
scas
sbb
sbb
ljmp
mov
add
cltd
inc
lods
es
push
sbb
adcb
out
into
mov
or
cltd
lods
pusha
shr
xchg
add
jnp
add
sbb
add
cmp
scas
icebp
cmpsl
xor
adc
or
lock
dec
push
mov
nop
stos
enter
pop
mov
leave
in
in
add
cld
xor
lret
sti
inc
scas
sbb
xor
js
cmpsl
lret
push
repz
adc
fsubrp
inc
popa
xor
aad
dec
mov
or
and
lahf
outsb
mov
cmp
inc
push
push
popa
jge
out
or
ljmp
imul
mov
sub
lret
xchg
add
test
jbe
push
mov
aaa
adc
mov
leave
sub
cmpsl
rcll
jae
dec
push
inc
jae
xchg
adcl
dec
aam
mov
mov
mov
inc
and
jmp
sbb
mov
adc
jbe
inc
rcrb
mov
outsb
inc
ja
shr
cmp
ds
adc
sbb
push
test
lret
jmp
enter
int
xchg
xor
jo
jge
data16
and
cwtl
aas
inc
pushf
ret
push
jno
stos
hlt
movsb
movsl
icebp
or
jl
lret
clc
lret
sahf
cmp
popf
cmp
fmuls
ljmp
or
sub
pop
jle
mov
inc
adc
pushf
test
bound
ss
flds
or
call
inc
mov
sahf
mov
xchg
rorb
pusha
je
hlt
push
inc
cwtl
or
leave
mov
xor
mov
sbb
adc
mov
repnz
addb
out
xlat
mov
testl
dec
adc
xor
imul
xlat
mov
dec
in
outsb
out
or
clc
ja
nop
and
mov
pop
fmulp
stc
mov
in
pusha
aas
in
into
stos
add
loopne
and
ret
mov
push
or
push
fstl
mov
xor
push
cmp
les
sahf
inc
cmp
inc
push
out
mov
in
sub
rorb
dec
or
cmp
pop
xor
ret
cmpsb
cmp
shlb
mov
insb
subl
lret
or
popa
and
and
mov
pop
cmc
jmp
jb
jge
mov
xchg
push
enter
fmull
jmp
xor
leave
inc
pop
pop
notb
inc
xchg
scas
cmp
push
add
adc
movb
push
pushf
lret
andb
gs
add
inc
sbb
xor
xchg
cmp
xchg
jno
mov
inc
mov
mov
jp
mov
mov
fsub
aaa
sbb
inc
push
xlat
xlat
movsl
xchg
add
inc
fistpl
sbb
popf
mov
mov
sbb
outsl
imul
mov
xchg
jge
in
into
pop
push
in
imul
mov
fwait
mov
and
aam
add
cmpb
into
cmpsl
cs
xchg
mov
jbe
scas
hlt
and
sti
lret
sub
push
jns
jns
jp
cmpsl
in
push
or
cs
movsl
in
sbb
sub
push
pushf
subb
add
out
cld
ret
movsl
loope
xor
lea
mov
add
jb
inc
mov
pop
mov
int
and
pop
rcrl
hlt
xor
shll
mov
push
lahf
fdivrl
iret
lea
push
mov
mov
inc
adc
repz
push
push
sub
in
xor
rcrl
dec
fs
sbb
sbb
std
xor
xchg
push
scas
insl
or
out
mov
sarb
imul
mov
je
js
inc
clc
dec
push
ret
inc
push
les
std
das
xlat
or
shr
nop
push
or
add
lds
fidivl
sub
cmp
test
rcll
xchg
ljmp
mov
xchg
cmc
out
sbb
dec
filds
sub
sbb
test
push
leave
sub
gs
mov
pop
xor
and
inc
call
inc
fwait
dec
pop
push
sub
jge
lods
xchg
scas
xor
cmp
int
pusha
imul
mov
sbb
shrl
lods
pushw
xor
cmc
push
loope
mov
fisubrl
lods
outsl
pop
ficoms
call
in
les
mov
cmpb
scas
pop
cmpsl
lahf
push
fldl
xor
push
shlb
add
lahf
jnp
jbe
push
and
mov
cli
sbb
gs
sbb
shrl
sarl
aad
cld
outsb
adc
jnp
outsb
or
pusha
xchg
cli
mov
insl
push
mov
cli
aaa
in
cmpsl
dec
jns
dec
cmp
push
add
popa
xor
or
add
scas
lcall
loop
loope
xor
jecxz
xchg
mov
xor
cmp
cli
out
mov
cmp
rorl
jo
setl
fidivrs
fld
push
in
scas
fsubrs
pop
movb
ss
mov
das
in
sub
pop
xchg
adc
data16
fwait
inc
movsl
cmp
add
and
ss
negb
fs
cmp
mov
mov
aam
jmp
dec
stos
cli
pusha
mov
pusha
sub
push
adc
pop
inc
ds
mov
mov
jb
js
push
es
stos
sub
inc
minps
mov
fstpl
push
mov
lret
aam
xor
mov
and
jge
in
je
fldlg2
test
xchg
imul
push
fdivrl
sbb
mov
cmp
iret
pop
pop
pop
out
es
sub
in
lret
pop
lcall
add
rcll
jecxz
or
mov
fmul
sub
xorl
jecxz
inc
sub
lret
icebp
push
stos
push
fisubl
sbb
push
les
out
outsl
jp
pop
fstl
and
mov
pop
jg
fnstsw
sbb
jae
xchg
mov
imul
ret
pop
idivl
popf
aas
sbb
jae
in
pop
ljmp
xchg
sub
mov
out
sti
jo
mov
clc
mov
mov
and
jno
int
add
and
data16
adc
test
mov
inc
ret
and
jl
jae
stos
das
adc
es
inc
and
test
test
xchg
cmc
scas
cld
and
fs
fmulp
dec
xchg
push
jge
dec
fnstenv
jb
sbb
push
lcall
mov
testb
sbb
mov
cli
mulb
imul
in
movsb
mov
lods
push
sbb
inc
stos
out
call
push
call
cmp
aam
stc
sbb
mov
jbe
leave
mov
test
jns
mov
mov
imull
fistpll
pop
cmc
sahf
in
sbb
mov
pop
xor
idivb
into
cmp
sbb
mov
push
lds
mov
lods
xor
jge
jns
cmp
mov
pushf
jno
mov
xor
push
lods
mov
jns
pop
and
xchg
fistpll
cmp
mov
pcmpgtb
mov
dec
js
add
test
cld
jb
and
jne
pop
mov
cli
jge
add
addr16
rcr
das
shll
push
sub
xchg
xchg
adc
push
adc
sub
add
rolb
scas
mov
xchg
add
xchg
aad
in
es
dec
adc
or
mov
pop
add
mov
pop
jp
jnp
inc
or
mov
jnp
push
sbb
stos
pop
or
jmp
mov
and
sarb
lods
leave
dec
mov
fadds
mov
lea
and
or
inc
add
testl
fiaddl
scas
loope
std
xchg
xor
sub
push
ss
lahf
adc
mov
sub
cmpsb
pop
adc
xchg
and
arpl
in
shr
rcrl
jns
pop
gs
or
adc
or
mov
inc
dec
jb
shl
jne
je
push
mov
arpl
in
inc
imul
jl
mov
xchg
out
lds
ret
test
scas
rorb
cld
inc
xlat
adc
add
mov
movsb
dec
jbe
xor
fisubs
in
gs
cmp
xchg
iret
jmp
mov
dec
adc
sbb
je
add
and
or
adcb
jno
add
ret
adc
cld
jge
adc
inc
add
shll
adc
je
scas
push
mov
insb
div
popa
repnz
pushf
loopne
add
not
ljmp
mov
pop
cmp
jo
xchg
fcompl
pop
addr16
mov
dec
imul
xlat
mov
movsb
cli
rcr
adc
adc
push
cmp
out
sbb
xlat
ja
inc
xchg
cwtl
sbb
popf
sub
lret
dec
fwait
pop
int3
ret
stos
fdivr
pop
pop
dec
das
push
gs
leave
pop
lcall
aam
incb
ss
push
loop
add
test
mov
pop
sbb
insb
int
jge
or
insl
jmp
pop
adcl
sti
enter
and
das
mov
shrd
into
mov
int3
mov
xor
shrb
clc
ror
jg
lcall
xor
push
adc
bound
adc
mov
mov
xor
pop
fcoml
mov
lcall
lahf
in
fidivl
movsl
dec
das
test
sub
push
gs
js
xchg
mov
in
ds
icebp
add
mov
dec
sub
xor
sbb
nop
testl
mov
pop
je
adc
arpl
lea
pop
sub
mov
sub
push
ja
inc
xor
out
stos
lock
andb
adc
pop
adc
arpl
sahf
int3
adc
cmc
cmp
movsl
repnz
inc
fwait
std
test
icebp
pop
inc
mov
dec
jmp
bswap
dec
and
add
add
sti
sbbl
imul
mov
xchg
add
test
jb
aaa
jge
sbb
pop
cmp
icebp
xchg
cmp
add
stos
mov
js
stc
addr16
insl
jno
add
lods
into
sub
or
xchg
les
das
imul
cld
inc
or
sbb
loopne
or
int
mov
cwtl
aaa
and
bound
test
imul
adc
aad
popfw
out
in
mov
out
mov
push
pop
clc
and
adc
daa
pop
ficoml
add
fmul
jp
inc
inc
adc
push
stc
aaa
pop
push
push
and
sbb
bswap
pop
pop
fiadds
mul
mov
pop
into
divb
popf
repnz
test
inc
xor
call
or
test
ret
ret
cs
lds
stc
mov
push
bound
jno
cltd
or
int
lahf
fwait
push
sbb
cli
xchg
mov
mov
adc
jg
fcomps
je
lahf
add
push
and
adcl
popa
mov
or
jl
mov
and
icebp
jne
ret
and
cltd
pusha
mov
mul
jmp
inc
scas
lock
cmpsb
mov
leave
mov
pop
adc
adc
lds
ja
stc
add
push
dec
jl
bound
xor
outsb
inc
hlt
ja
repnz
pusha
loope
popa
cmc
cmp
pop
sbb
rcr
mov
cmp
mov
outsl
jbe
mov
sub
mov
adc
pop
xlat
sub
push
and
cltd
adc
repnz
cmp
sar
loopne
out
negb
cs
xchg
pushf
add
jnp
lret
stos
sbb
push
xchg
popfw
insb
in
push
sub
and
or
sub
xor
hlt
fdivrl
outsb
and
stc
pop
or
cmp
xchg
inc
mov
mov
fmulp
into
add
sbb
and
add
jbe
popa
dec
mov
push
cs
dec
and
ds
lret
pop
nop
lods
xchg
sub
les
icebp
in
icebp
shrb
mov
add
jecxz
sti
arpl
nop
jns
and
mov
fwait
add
repnz
aaa
jp
imul
pop
sbb
and
add
jmp
rcr
fisttpll
and
jp
shlb
sub
adc
mov
add
xor
icebp
mov
inc
sbb
cwtl
cmp
xor
int
jo,pt
dec
ret
int
push
test
adc
and
push
sbb
push
test
jmp
divl
out
mov
rolb
cmp
inc
repnz
out
lahf
mov
pop
adc
adc
mov
lret
adc
jae
iret
xchg
inc
xchg
dec
out
cmc
imul
iret
sub
xor
dec
pop
aas
push
pop
ja
pushf
lods
cmp
jns
dec
ljmp
cltd
sub
outsb
fwait
fwait
xchg
lahf
imul
fstpt
cmp
mov
jge
movsb
imul
sub
push
ror
es
enter
mov
mov
xchg
out
pop
ja
fmul
int3
ss
sahf
pop
jo
ljmp
jo
pop
leave
out
jno
adc
inc
cmp
enter
scas
sub
push
clc
cmp
aaa
mov
mov
gs
jp
fistl
sbb
cs
test
jp
addr16
rolb
sub
or
fs
call
movsb
mov
push
xor
scas
dec
jbe
pop
pop
ljmp
push
or
xchg
outsb
mov
xor
js
fsub
into
mov
rol
mov
xchg
push
shrb
push
int
xchg
inc
ficompl
adc
xchg
push
fstpl
pop
std
jnp
in
repnz
or
arpl
in
cmp
dec
aas
cmpl
dec
nop
jns
xor
mov
call
pop
bound
inc
pop
sbb
test
inc
sahf
jge
mov
loopew
lods
xchg
xchg
movq
lea
jb
dec
andb
dec
daa
call
xchg
js
dec
adc
push
and
aam
pusha
mov
or
movsl
cld
add
inc
sbb
cmc
stos
fs
add
fdivrs
lods
inc
jns
in
mov
push
push
cwtl
iret
inc
sarl
dec
subb
shlb
cltd
shrl
and
sbb
adc
xchg
in
pushf
or
inc
pop
movsl
xchg
hlt
adc
ret
sbb
decl
gs
mov
cmp
sub
jno
add
jmp
ljmp
xchg
jno
lea
jle
mov
test
aaa
xor
xor
lods
xchg
and
and
mov
mov
or
cmp
in
or
cmc
cmp
add
cld
shlb
repz
lahf
and
pop
adc
inc
fdiv
popf
pusha
and
or
jne
xor
lods
push
sti
dec
leave
lea
lret
push
fs
xchg
jg
pop
push
push
jg
mov
pop
mov
fdivl
or
insb
jg
scas
dec
aaa
cmpsl
and
out
push
sub
adc
xchg
cmp
mov
xor
mov
das
test
pushf
and
mov
scas
xchg
push
stos
and
sub
fwait
xchg
bound
in
loope
pop
mov
pop
pop
lds
jg
imul
fwait
adc
mov
mov
fdivl
push
jne
sbb
mov
mov
or
mov
and
clc
out
dec
adc
xchg
mov
rol
cmp
in
data16
xchg
lret
mov
ficoml
mov
or
test
es
out
hlt
lahf
repnz
pop
adcl
cmpl
lock
mov
pop
repz
es
cmp
and
dec
test
test
dec
dec
jo
in
test
out
mov
ja
and
mov
sbb
or
dec
sub
inc
cs
jmp
jmp
jl
call
cmpsl
out
aaa
cmp
mov
pop
cmp
rcrb
sub
adc
adc
les
sti
pop
es
sti
xchg
ljmp
xchg
pop
jo
repz
icebp
and
sbb
in
imul
bound
fisubrs
xchg
push
je
outsl
push
inc
movsb
cmp
adc
insb
add
iret
pusha
leave
add
xor
int3
gs
inc
sub
outsb
mov
push
jg
push
imul
sti
inc
or
cs
dec
dec
sbb
pop
or
xchg
in
mov
sbb
pop
lcall
push
in
jl
jno
movsl
hlt
roll
push
cs
cmp
and
lret
sbb
inc
pop
lods
xchg
adc
jbe
push
or
inc
sub
inc
cmp
sahf
scas
loope
lock
jecxz
sub
std
cmp
bound
add
cmp
adc
sbb
inc
jle
ret
outsl
aaa
xor
push
int3
fnstenv
jbe
and
sahf
daa
shlb
fcomp
fsts
mov
cmp
or
test
adc
das
add
stc
push
notb
push
je
push
repnz
push
test
dec
pop
fistpll
and
xor
outsb
jmp
inc
xchg
cmpsb
rorb
adc
data16
dec
roll
sub
shlb
in
inc
push
and
pop
pop
pop
mov
inc
shll
jne
popf
fucom
push
ds
and
gs
lcall
arpl
sbb
sbb
inc
js
negl
mov
jno
ret
push
dec
fstps
leave
and
cmpsl
in
int
shll
cmp
jo,pn
jg
jne
push
mov
sbb
stos
fistps
add
test
out
mov
sbb
mov
divb
je
sub
add
cli
enter
xor
jge
pusha
adc
loope
fwait
xor
xor
in
xchg
call
inc
mov
in
aad
ret
adc
les
cwtl
repnz
cli
sbb
mov
cmp
outsb
rolb
fistpl
js
fs
mov
sbb
jmp
js
mov
cmp
and
pop
sub
inc
test
xor
jge
mov
fldenv
push
cmp
add
pusha
std
in
addr16
int3
into
dec
add
imul
es
mov
into
push
xor
call
jge
ljmp
dec
push
and
lods
mov
aam
sbb
out
mov
xchg
jmp
push
out
cli
add
jns
je
mov
rclb
fnstsw
imul
pop
icebp
pcmpgtw
leave
pop
outsb
aad
out
je
insb
sti
inc
mov
cmp
sub
inc
insb
stc
sarb
adc
fistpl
mov
mov
pop
lret
fnsave
add
lahf
int3
pop
cli
jns
and
inc
into
xchg
cmpsl
sbb
in
mov
and
out
fsubs
in
mov
jb
daa
pop
or
xor
push
es
cltd
lret
adc
ljmp
mov
inc
out
xchg
jge
inc
cmpsl
lods
jp
mov
gs
sub
push
aad
lcall
sub
mov
pop
adc
push
pop
push
ret
hlt
and
mov
in
xor
xchg
fwait
shl
repnz
shrl
aam
mov
dec
inc
or
les
popa
push
es
sub
cmp
push
push
les
test
and
or
cmp
mov
sub
imul
subl
les
pushf
bound
push
mov
in
loop
inc
mov
sub
inc
sbbb
scas
jno
sub
in
cli
jecxz
adc
dec
inc
bound
mov
pop
jnp
ret
sub
cmp
xor
shlb
xchg
mov
xor
inc
add
sbb
test
ror
jle
adc
pop
cmp
popl
jo
fdivl
popa
sub
das
add
das
in
inc
sub
ds
mov
xchg
rolb
jmp
jmp
mov
dec
push
sbb
push
mov
pusha
jmp
and
inc
cs
adc
test
jno
addr16
cmp
sbb
add
xchg
decl
leave
lods
adc
xchg
jb
in
sbb
aad
pop
cmpsl
inc
jle
data16
push
loopne
pop
mov
xor
sbb
leave
rcrb
sub
roll
lahf
icebp
mov
leave
sub
sbb
lret
dec
cmp
out
cwtl
rol
sbb
pop
lods
dec
cmpl
and
mov
mov
cli
mulb
mov
addl
les
popa
rorb
test
inc
or
ret
or
xchg
arpl
addr16
sbbl
mov
dec
dec
pop
cmp
nop
cli
lods
jo
test
outsl
lahf
hlt
sbb
sbbb
popa
pusha
xchg
int3
repnz
adc
add
adc
xchg
add
cld
leave
mov
outsl
sub
fbstp
mov
aam
ja
and
movsl
cmp
ret
dec
mov
add
dec
lock
xchg
lea
aaa
pop
xchg
stos
jo
lcall
call
jb
into
push
js
mov
fnstsw
in
enter
mov
jl
mov
mov
shrb
scas
out
sub
cmp
popa
repnz
pop
push
push
shrl
imul
xor
jp
gs
or
in
insb
ss
cmp
cli
dec
nop
and
or
fdivr
or
mov
and
push
icebp
shlb
sarl
dec
mov
mov
icebp
ljmp
jno
fwait
loope
lahf
es
pop
dec
pop
adc
scas
jae
lcall
jp
sbb
out
repnz
push
bsr
or
and
xchg
mov
iret
icebp
movsb
lret
adc
push
xchg
mov
sarl
cmc
sub
rcr
or
pop
and
jb
cs
push
out
adc
cld
cmpsl
jle
int3
mov
loopne
ret
and
icebp
imulb
ror
pop
mov
out
sti
jl
push
int3
jno
icebp
mov
add
dec
or
inc
enter
movsb
jb
jo
inc
dec
insb
mov
jg
cmp
mov
sbb
dec
dec
push
mov
xchg
hlt
popa
aas
pop
sarb
push
mov
daa
dec
lods
jmp
nop
sub
lea
sub
push
loope
jnp
cmp
lahf
xchg
sbb
out
and
mov
ljmp
sbb
and
in
test
xchg
or
cltd
or
xlat
repnz
shlb
outsl
mov
mov
hlt
jb
arpl
cmpl
sub
and
push
push
ss
add
fmul
jne
xlat
and
xor
into
sub
repnz
lock
cmpb
mulb
popa
and
add
sub
adc
movsl
add
or
pop
scas
inc
dec
jnp
cmp
sbb
inc
insb
insb
mov
xchg
repnz
xor
dec
in
jo
inc
and
ret
cmc
out
mov
push
lods
dec
scas
icebp
ror
outsb
inc
adcl
mov
sub
scas
add
pop
cmc
xlat
mov
popf
and
popf
add
mov
sbb
mov
std
jns
std
popa
pushl
xor
sub
mov
fldt
jle
jg
out
cli
outsb
into
cmpsb
mov
jp
lea
scas
xor
lret
cmp
push
and
imul
push
mov
fsts
jg
das
imul
ja
aaa
in
out
dec
push
sbb
cmp
jnp
mov
lret
dec
js
mov
and
inc
xchg
pop
cltd
or
dec
cmp
lahf
sub
sub
das
push
push
mov
sub
mov
out
xchg
jnp
mov
add
and
mov
loopne
sub
aad
arpl
push
aaa
jg
fxch
or
push
inc
lcall
mov
les
pop
mulb
icebp
mov
jmp
das
imul
mov
pushf
xchg
mov
xor
add
sub
adc
stc
lods
outsl
jp
add
mov
add
adc
or
or
out
adc
aaa
inc
pop
gs
orl
and
or
imul
sbb
push
xchg
and
ja
mov
cmp
lds
inc
rcr
mov
xor
mov
and
xlat
mov
call
or
jne
mov
xor
fldenv
mov
insb
out
sub
bound
push
mov
xor
push
and
xchg
pusha
sub
and
or
adc
in
lahf
lods
mov
or
imul
mov
sbb
xchg
mov
xlat
jg
sbb
pop
lret
cmp
dec
test
adc
nop
xor
cwtl
jg
imul
jg
int3
and
pop
es
mov
or
shr
pushl
mov
jns
push
mov
jecxz
mov
sbb
pop
xlat
pushf
rclb
in
lds
out
sti
mov
test
pop
pop
dec
repnz
xchg
hlt
sahf
leave
lods
push
out
xor
inc
cmp
mov
cmc
imul
add
adc
and
cltd
adcl
jns
sbb
xor
xchg
inc
fstps
lahf
inc
sub
push
cmc
sarl
cld
push
outsb
loopne
js
adc
in
bound
leave
xor
and
xchg
out
stos
arpl
sub
jae
orb
push
inc
mov
push
or
insl
push
cmp
std
rolb
sbb
outsb
movsl
mov
mov
fs
push
mov
loopne
js
aam
cs
into
jnp
and
pop
fwait
call
scas
mov
in
rorb
jmp
cmp
rolb
clc
lock
add
mov
loope
clc
sbb
inc
loopne
mov
punpcklwd
por
sbb
je
loopne
jp
mov
dec
jg
outsb
adc
aaa
loop
call
pop
cltd
lahf
adc
jbe
aaa
add
bound
popa
inc
addr16
dec
test
pop
and
stc
outsl
inc
in
mov
sub
dec
dec
mov
jae
dec
or
fwait
out
into
cmc
and
inc
rorb
call
jbe
int3
and
add
jno
stos
pop
mov
mov
cltd
or
cmp
mov
and
pop
es
cmpsb
bound
popa
sbb
inc
jnp
pop
out
sbb
jne
mov
mov
xlat
pop
push
mov
icebp
and
add
les
out
push
addr16
aam
lds
xchg
xor
in
scas
popf
std
xchg
and
jno
leave
push
dec
leave
es
sub
xchg
mov
add
imulb
inc
into
dec
ss
xor
les
or
jl
es
dec
xchg
mov
cltd
mov
inc
pop
stc
push
out
jb
mov
bound
rolb
out
push
arpl
mov
faddl
inc
mov
lods
mov
mulb
sbb
popl
rclb
rcrl
repz
out
jp
lret
dec
jno
out
mov
lds
or
mov
out
pop
or
mov
mov
out
inc
jns
or
testl
sbb
adc
jno
mov
push
cwtl
cmp
test
jno
mov
test
inc
cmpsl
cmc
inc
outsb
or
fidivrl
jno
and
mov
add
scas
and
test
in
lahf
mov
sub
mov
or
xor
mov
dec
xor
jae
call
lcall
ret
loop
jge
scas
shrl
fs
scas
lret
or
jae
outsl
dec
ja
mov
mov
jp
dec
pop
dec
jg
shlb
xlat
cwtl
cmpsl
dec
adc
insb
sbbb
cmp
xor
mov
outsb
add
mov
xchg
push
je
fcoml
inc
or
call
add
pop
push
xchg
jbe
mov
jp
popf
ret
pop
xor
pop
int
cmpl
es
xor
adc
adc
lock
out
push
cmp
mov
enter
inc
mov
sub
cld
mov
adcb
ds
xchg
push
pusha
cmc
js
aam
jne
ret
add
test
jl
mov
sub
das
push
or
cmp
arpl
fiaddl
add
jp
in
jge
xchg
mov
sbb
mov
jae
inc
lea
icebp
enter
clc
dec
in
push
or
out
jbe
add
xor
clc
pop
enter
push
mov
call
test
sbb
loop
add
lds
mov
xchg
out
shl
jnp
lods
repnz
int3
push
xchg
mov
dec
out
push
ret
adc
ret
cmp
aad
outsl
jo
cmp
ret
and
jg
ds
pushf
pop
xchg
arpl
test
dec
sbb
jmp
sub
movsb
pop
movsb
je
add
pop
pop
pushf
xor
rol
mov
add
lods
ljmp
jp
mov
mov
jns,pt
loopne
mov
test
xchg
or
cmp
mov
les
inc
add
loopne
mov
mov
jbe
inc
test
es
jnp
or
mov
or
and
popa
and
clc
inc
push
dec
inc
dec
imull
and
imul
jg
sub
fwait
push
or
lods
dec
sub
xor
xor
icebp
mov
je
loop
jl
outsl
sub
rorl
pushf
fwait
lock
add
cmp
aas
push
add
popa
aas
imul
xchg
mov
cmp
das
cwtl
addr16
jno
push
sub
test
and
andb
lret
jp
push
shl
jns
xchg
test
inc
pushl
or
ljmp
jmp
data16
repnz
inc
or
aad
jnp
jo
sub
iret
xor
push
mov
jo
jge
sbbb
loopne
cmp
cmp
out
into
push
hlt
jbe
push
mov
pop
or
iret
mov
xor
mov
mov
test
pusha
xchg
dec
rclb
adc
sbb
stc
es
sbb
adc
sub
sbb
std
arpl
push
outsl
scas
adc
dec
fcoms
add
cs
push
sbb
dec
popa
cmp
js
pop
cmc
push
jbe
dec
movsb
pop
std
mov
pop
push
pop
mov
jne
pop
jno
in
ss
xchg
dec
fidivrl
dec
imul
fsubp
sub
jb
lods
repz
mov
in
add
and
imul
cmp
xchg
cmp
jmp
lock
ffreep
clc
push
pusha
mov
pop
dec
std
sbb
pop
enter
scas
cmp
add
std
dec
pop
int3
cmp
cmp
and
xchg
outsl
pop
test
pop
jno
xchg
mov
je
adc
sub
in
scas
ror
xchg
mov
dec
jno
sbb
insl
jns
pop
in
jge
jnp
sbb
mov
cld
rolb
loopne
out
push
movsb
mov
out
cmpl
mov
ror
mov
in
fcoml
sbb
mov
outsb
mov
xor
inc
jbe
test
fisubs
cmp
les
out
adc
mov
add
jae
jnp
divb
pop
test
sub
inc
push
idivl
jle
sbb
jge
cs
cmp
mov
or
push
aad
inc
movsl
sbb
clc
xchg
repz
lds
cmp
cmp
xchg
shlb
sahf
sbb
cmp
mov
aam
shlb
jbe
aam
ljmp
je
cmp
cmpsl
les
or
xor
in
mov
pusha
jmp
and
add
cwtl
mov
pushf
dec
arpl
push
xchg
xchg
popa
jo
sub
mov
movsl
into
pop
cltd
mov
dec
pop
xor
mov
dec
in
out
iret
repz
pop
insl
cmp
add
mov
aam
push
mov
imul
pushf
inc
jp
add
insl
mov
or
test
xchg
movsl
cmp
xlat
flds
int
outsb
push
mov
out
mov
lret
xor
leave
fisubrs
jbe
pop
xchg
aaa
rcrl
in
in
out
dec
in
xor
int
and
stos
repz
push
jg
rorb
xchg
pop
sti
dec
xor
int3
and
iret
ds
xor
jae
fcompl
stos
lcall
cwtl
mov
jae
divl
push
cli
sahf
mov
push
sahf
dec
mov
mov
stos
imul
outsl
push
add
es
insl
lret
std
shl
mov
jns
xor
sub
data16
mov
into
adc
ljmp
aam
sub
inc
test
lock
repnz
mov
sub
ds
pusha
es
xchg
inc
repnz
jne
out
addr16
push
jnp
push
test
sbb
pop
faddp
stos
xchg
xchg
je
call
imul
and
test
mov
subb
sbb
cltd
jg
gs
aad
inc
nop
push
mov
xor
mov
mov
arpl
xchg
lods
mov
loope
loop
jno
lahf
sbb
pop
sub
shr
mov
dec
orb
xchg
inc
nop
jne
adc
mov
adc
divb
or
enter
pop
clc
int3
dec
pusha
fdivrs
nop
add
or
in
xor
mov
lret
popa
jns
fisubrl
cltd
imul
xorl
mov
je
sbb
mov
sahf
xor
divl
xchg
stos
mov
lret
cltd
mov
mov
ljmp
and
cmp
xchg
sbb
fdivs
xor
inc
mov
xor
and
inc
push
cmp
aas
mov
adc
fwait
cmp
dec
aam
lret
enter
jecxz
pop
sbb
test
mov
jno
push
fucomp
les
cmp
xchg
push
dec
enter
xchg
orb
mov
dec
mov
or
mov
stos
adc
js
jno
or
pop
outsb
push
cltd
mov
sub
or
dec
xor
mov
mov
movsb
xchg
pop
xchg
int3
test
and
dec
stc
gs
sub
pop
fisubs
or
in
jbe
into
dec
lods
lea
es
jp
xchg
push
loopne
cmpsb
mov
pop
dec
iret
aas
mov
stos
push
and
pop
rcrl
lret
sub
dec
notl
pusha
repnz
scas
fisttps
das
repz
cltd
out
jge
not
aad
mov
mov
cmp
sbb
shlb
xor
mov
mov
inc
mov
push
push
jle
repnz
add
pop
and
add
mov
jmp
hlt
repz
sub
xchg
lods
outsb
push
lret
cmp
xchg
sub
and
sahf
out
sbb
pushf
mov
loope
xchg
pop
mov
lret
and
jg
jecxz
rcr
in
and
pushf
add
pop
in
or
sbb
cmp
adc
outsb
mov
cmpl
push
test
into
sahf
aaa
push
push
cmp
lret
push
add
les
cs
fmul
mov
cmp
repz
pop
mov
gs
pop
push
or
xor
sbb
addl
adc
add
adcl
mov
xchg
cmpsl
xor
iret
out
cmp
repz
dec
aas
inc
pop
insb
iret
mov
ficoml
rcl
mov
adc
cmp
pop
mov
inc
add
xor
ret
push
cmc
and
sub
sarl
js
jno
mov
mov
ds
leave
orb
cmpsb
aam
inc
sbb
rclb
sub
and
cmpsl
or
and
xchg
mov
and
mov
shl
loope
xor
mov
jl
cmp
cmpsb
add
xor
leave
adc
negl
stos
aam
loope
dec
jne
and
push
mov
jb
cmpsl
aas
mov
jg
jge
fimuls
or
inc
inc
add
dec
xor
icebp
pop
xchg
jne
stos
pop
and
outsl
adc
lahf
ja
enter
jg
jl
push
ret
xchg
and
sub
inc
cs
xchg
jb
movsb
pushf
or
push
sbb
lods
stos
cmpsl
dec
or
pop
mov
loopne
sub
out
jl
pop
loop
leave
aaa
daa
sbb
dec
arpl
cli
icebp
mov
mov
xchg
and
in
in
pop
cmpsl
cmpsl
jne
pop
inc
jg
out
push
fistps
test
in
in
or
and
enter
and
repz
adc
mov
cli
mov
je
cmp
mov
xchg
addb
cs
push
mov
push
call
nop
pusha
jo
imul
add
pop
addl
jg
insb
repnz
xor
and
rclb
pushf
cmp
jge
and
lret
dec
loop
mov
add
inc
fists
add
mov
and
mov
push
dec
mov
fcoms
fwait
addr16
push
pop
cs
cli
xchg
mov
int
jae
sbb
mov
pop
cli
or
push
sbb
int3
pusha
and
scas
mov
inc
rcr
xchg
or
lahf
rcrb
lods
lahf
aad
jg
cltd
cmp
rorl
dec
mov
test
xchg
sbb
adc
add
leave
gs
mov
cmp
add
fmuls
mov
and
imul
pop
sbb
sub
adc
insb
adc
test
cmp
mov
sar
push
lods
cltd
orb
imul
adc
jnp
stc
cmc
mov
mov
daa
aam
leave
call
loope
int
inc
bound
out
or
adc
lods
mov
shl
cmp
clc
or
xchg
scas
push
adcb
outsl
push
je
imul
adc
sub
enter
jecxz
mov
test
push
jno
in
lahf
push
insl
cmp
inc
cmp
and
xchg
add
xchg
out
bound
lods
in
fidivl
sbb
mov
jge
mov
sub
xchg
stc
sbb
aas
rorl
and
pop
adc
rorl
jbe
stc
insb
mov
push
inc
push
dec
jle
sbbl
shl
adc
fs
ret
ret
jns
into
push
mov
loop
int3
mov
pop
jae
mov
mov
mov
popa
inc
pop
jbe
mov
and
data16
cmp
and
shrl
xor
jecxz
adc
fnstcw
fsubs
dec
xorl
jo
jmp
dec
lcall
sub
test
mov
jg
ds
xor
fldt
les
popf
test
mov
mov
rcr
lcall
scas
loope
xchg
inc
fnsave
inc
insl
les
movsl
or
xchg
fucomi
push
popf
mov
sub
pop
mov
dec
mov
test
and
insl
repnz
dec
push
jmp
xor
mov
sahf
leave
push
aad
arpl
mov
or
int3
cmpsl
jp
push
sbb
xchg
aaa
sahf
pop
mov
nop
adc
sbb
cmp
add
inc
cmc
jae
mov
cltd
mov
sub
in
rsqrtps
xchg
hlt
dec
test
xor
pop
dec
fs
repz
mov
in
dec
push
test
xchg
adc
popa
mov
imul
push
pop
sbb
ljmp
pop
ss
dec
clc
dec
pop
sbb
mov
popf
cmc
jbe
dec
clc
fildl
mov
fstp
cmp
fadds
sub
iret
cwtl
cmpsb
flds
gs
inc
or
ror
fldt
call
int3
lods
or
lods
popa
js
jl
inc
push
push
sub
sbb
ja
xor
movsb
sub
mov
push
imul
mov
outsb
stc
add
aam
sub
daa
insb
pusha
sbb
and
pop
mov
mov
adc
lahf
rorb
cmp
adc
push
dec
dec
int3
aam
push
inc
xchg
repnz
mov
pop
repnz
inc
dec
scas
std
lock
daa
cmpsb
jns
fst
leave
in
mov
cltd
cmp
add
or
mov
clc
aaa
faddp
loopne
shl
popf
pop
mov
rorl
lahf
shll
rol
movsl
mov
dec
mov
pop
notl
stc
mov
dec
xor
mov
in
adcl
and
arpl
out
fldt
jp
fcoms
cs
movsb
mov
push
dec
dec
and
shll
pushf
pop
push
add
mov
cld
call
cmpl
xchg
lods
mov
mov
mov
sub
idivb
cs
lret
push
dec
cwtl
inc
je
mov
in
mov
aam
add
rcr
xchg
mov
cld
and
and
ret
sbbb
ja
aaa
sub
test
das
xlat
adc
lds
ret
pop
dec
test
mov
pop
dec
in
adc
call
mov
fucomip
add
fwait
arpl
xchg
rcrb
in
dec
jmp
mov
aas
in
adc
loope
js
jbe
dec
divl
bnd
mov
xchg
adc
mov
or
loope
xchg
sub
and
mov
insl
jne
stos
mov
adc
mov
mov
je
mov
jno
xlat
leave
push
cli
ljmp
mov
aam
hlt
sub
mov
mov
jbe
fcompl
inc
sub
push
jo
mov
sbb
bound
jmp
fildl
xchg
mov
repz
or
push
xchg
adc
stos
shlb
xor
push
mov
loop
sub
gs
in
ss
inc
aas
dec
inc
cmpsb
xor
cmc
mov
mov
inc
cmpl
sub
xchg
jne
pop
data16
dec
std
fs
std
shll
push
ffreep
xor
scas
xchg
lcall
push
clc
dec
test
xchg
jecxz
fldcw
dec
in
enter
lock
sbb
mov
add
inc
ds
xchg
repnz
imul
in
int3
jecxz
ficomps
xor
mov
jbe
insl
mov
fdivs
int3
jl
push
cmp
ficomps
fsubl
ret
cmp
xchg
mov
sbb
inc
mov
inc
outsb
sbb
push
push
mov
mov
das
pop
orb
push
sbb
xchg
dec
js
and
stos
movsl
leave
pop
pop
mov
test
movsb
adc
and
adc
aaa
push
call
inc
add
push
rcrl
mov
xor
mov
pop
inc
idivb
popa
cmp
nopl
add
cmc
push
fists
movsb
sub
adc
pop
xchg
sti
lds
sbb
cmp
push
mov
sub
iret
cmpsb
cmp
xchg
mov
scas
sbb
ds
mov
stc
jns
and
stc
lahf
cs
imul
pop
xor
leave
push
outsb
and
dec
lea
stc
push
mov
pop
add
jbe
mov
push
add
faddl
sbb
push
pop
or
adc
loopne
push
mov
mov
pop
das
dec
iret
bound
out
cld
mov
loope
inc
mov
lock
sahf
push
jl
call
popa
aas
cwtl
lahf
mov
xorb
mov
inc
sahf
adc
pop
in
add
adc
loopne
sub
outsl
and
daa
je
mov
adc
push
cmp
mov
mov
and
shrb
push
mov
sbbl
mov
arpl
sbb
adc
push
pop
clc
xchg
pop
iret
sub
mov
xor
xchg
mov
movsb
xchg
hlt
sub
pop
mov
pop
shll
filds
add
dec
in
adc
andl
arpl
in
ds
ljmp
push
xchg
lods
sbb
mov
jmp
cmp
std
push
movsb
xor
sbb
cld
cmpb
inc
xchg
mov
adc
scas
int3
jno
inc
inc
movsb
lahf
sub
mov
push
jbe
xchg
movsb
loop
out
mov
loope
add
sti
std
xchg
jmp
movl
sbb
loop
mov
inc
fisubs
daa
cmp
mov
dec
push
cwtl
inc
cmp
fdivl
lock
sbb
mov
pop
fs
push
cmp
cmp
js
sbb
dec
or
or
adc
into
sub
leave
jl
fwait
inc
mov
xlat
and
sbb
mov
mov
add
cmp
mov
lcall
jl
cmpsl
out
hlt
stos
xor
mov
sub
inc
push
scas
nop
mov
in
push
add
mov
mov
sti
pop
fldcw
les
jp
dec
pop
fcoml
inc
stos
sub
rol
pop
leave
mov
mov
inc
cmpb
cmpb
dec
inc
inc
repz
aad
pop
sbb
push
iret
test
repnz
cmp
xchg
daa
cli
shlb
xor
fs
and
mov
push
cmp
inc
mov
xchg
sub
stos
repnz
pop
vaddss
sbb
scas
mov
sar
clc
fdivrs
int
cltd
call
out
pushf
addr16
int3
out
cmpsb
or
ja
xor
pusha
js
imul
shrb
mov
sbb
jno
xchg
xchg
in
sub
lret
sbb
rol
adc
xchg
adc
push
xchg
sub
stc
lret
insl
sarb
mov
lret
in
lcall
sbb
out
add
outsb
push
daa
or
mov
or
inc
jbe
pop
test
add
adc
fwait
js
fcomip
testb
sbb
mov
mov
xchg
jne
imul
inc
jmp
adc
lods
movsl
mov
aas
pop
pop
out
loop
mov
xor
fcoms
or
repnz
sbb
stc
cli
inc
aad
mov
cwtl
mov
mov
sbb
lods
jno
jb
scas
nop
ret
jns
jne
cmp
lock
mov
jb
decb
ret
addb
aaa
test
xchg
xor
mov
stc
lret
aam
out
cmp
movsb
sbb
fcomps
js
mov
jae
push
rcl
insl
push
push
cmp
mov
xchg
sub
jmp
inc
adcl
pop
jge
xor
mov
stos
pop
pusha
in
repnz
jnp
ficoml
add
pop
mov
or
push
icebp
mov
ja
out
popa
mov
sahf
sbb
fiadds
mov
sbb
ljmp
and
int
inc
mov
jge
dec
lds
xor
and
jg
inc
movsl
inc
xchg
insl
jl
repz
or
js
jo
inc
ret
sbb
xchg
sti
mov
rcr
sbb
addr16
popf
in
adc
movsb
inc
subb
out
dec
scas
xchg
sbb
mov
mov
nop
shlb
xlat
ret
xchg
push
out
test
sub
daa
jp
sahf
insb
scas
cmc
push
jbe
or
test
pop
xor
aam
or
stc
xor
and
mov
fs
push
movsb
orl
into
mov
jnp
dec
mov
lcall
insb
shlb
leave
sub
hlt
loop
dec
ljmp
rcr
cmpsb
out
mov
mov
xor
aad
in
mov
inc
jae
movsb
leave
gs
xor
dec
shlb
xchg
xchg
jg
xor
xor
jecxz
dec
xor
out
shrb
int3
add
insb
xor
pop
push
cmp
adc
inc
mov
push
pop
inc
aas
mov
scas
clc
lock
imul
outsb
movsl
push
mov
mov
out
aas
and
sahf
insb
sub
cmpsl
call
leave
pop
repnz
adc
xchg
mov
rep
sub
xchg
movsl
inc
idivl
inc
sub
fistpl
repz
stc
mov
fmull
jecxz
push
loope
pop
lods
xor
ljmp
fisttpl
cli
rol
mov
fs
loope
cld
inc
sub
sarb
fmull
aas
shrl
filds
and
fisttps
push
ret
shlb
fcmovnu
sub
push
and
sub
das
xchg
mov
cmpsl
in
mov
xchg
movsl
mov
inc
lcall
adc
xchg
sbb
lds
lahf
push
xcrypt-cfb
cmpsl
loope
gs
ljmp
hlt
jge
nop
mov
pop
sub
mov
loope
mov
sub
sub
rorb
cmovnp
iret
lahf
push
icebp
sbb
cltd
mov
jmp
out
insb
jecxz
lcall
sbb
repz
cmpsl
js
pusha
push
fistpl
jne
std
aaa
mov
xchg
add
xchg
pusha
shlb
nop
loop
std
popf
and
cmp
test
mov
inc
gs
xchg
movb
mov
pop
inc
mov
hlt
into
scas
jbe
pop
sub
mov
repz
mov
pop
sbb
fs
mov
add
lcall
js
lret
roll
pop
fisubl
bound
int
sub
push
inc
mov
cmpsb
jne
jle
ret
aam
aaa
daa
jo
pop
aaa
or
xchg
adcb
inc
shll
or
es
daa
je
and
mov
jecxz
test
and
fimuls
xor
jmp
mov
adc
aad
bound
sub
pop
clc
cmpb
pop
in
loopne
mov
mov
mov
repz
sbb
sub
sti
das
loop
mov
jl
and
adc
mov
test
jae
test
mov
add
cli
cmc
xor
pop
ret
call
mov
and
lret
rol
sti
ret
and
cld
lret
fmuls
in
pop
mov
inc
jmp
add
mov
test
inc
push
xchg
cmp
es
inc
incb
or
sub
mov
mov
stos
inc
sub
mov
inc
add
leave
insl
lock
pop
inc
fwait
xchg
push
xchg
pop
inc
mov
xor
jb
sarl
jnp
jl
int
fistpl
cltd
mov
sbb
negl
mov
cmpsb
and
mov
and
pop
mov
mov
xor
dec
outsb
inc
aaa
add
in
pop
cs
fidivl
xchg
push
jno
adc
rcll
sbbb
movsl
adc
xlat
xorl
aas
test
jle
mov
and
popf
cwtl
dec
pop
pop
loopne
adc
sbb
sbb
dec
scas
jnp
mov
inc
dec
sub
push
adc
sbb
add
clc
outsl
sbb
sbb
mov
mov
sub
popa
mov
lret
das
mov
testb
sub
adc
cmp
mov
adc
pop
fisttps
dec
cld
scas
adc
nop
xor
fmull
mov
push
aam
cmpsl
jbe
lret
push
add
sub
orb
mov
xchg
mov
out
fs
pop
pop
add
add
scas
mov
test
cmp
lret
mov
push
fldl
out
mov
jmp
imul
call
shrb
inc
fsts
cmpsb
lock
or
xchg
pop
mov
dec
inc
je
and
mov
rorb
stos
out
arpl
sbb
je
jae
ret
insl
cmpsb
ss
push
add
mov
cmp
insl
lods
and
lock
push
pop
cmp
in
es
dec
cli
xlat
push
aaa
sbbb
inc
lods
ja
mov
bound
cmp
mov
push
andl
in
jb
ficoml
out
loope
mov
enter
rol
xchg
cmp
dec
add
xor
or
pop
sub
scas
scas
mov
test
fnstsw
fwait
sub
popa
ret
mov
push
test
sti
jg
push
and
mov
sbb
and
scas
sub
in
dec
loop
mov
mov
mov
jns
xchg
shrb
sub
sbb
arpl
rol
sbb
push
push
sub
add
jb
push
pop
stos
in
pusha
and
xchg
int
dec
or
pop
pop
cs
lock
mov
test
pop
ss
add
jns
adcb
jecxz
ja
cmp
mov
mov
pop
sbb
xor
mov
jb
mov
addl
jecxz
and
mov
cwtl
push
sbb
test
std
cmp
jnp
hlt
insl
inc
mov
adc
xor
inc
lret
movb
pop
or
xchg
cmpsl
push
xchg
divl
sbb
stos
sub
push
push
lret
push
orl
inc
inc
jo
mov
cmp
cs
mov
mov
adc
pop
add
pop
out
adc
pushf
add
pop
mov
push
out
dec
mov
incl
adc
sarl
sbbl
lods
shr
cmp
jmp
insb
test
sub
jb
and
xchg
push
push
mov
lods
or
lret
imul
adc
push
repnz
cmp
fstl
jbe
mov
clc
fsubr
inc
push
cli
inc
cld
aam
fisubrl
or
outsb
enter
xchg
popa
cmp
int
lds
ret
enter
stos
adc
jno
xchg
inc
out
mov
iret
xchg
mov
cwtl
mov
rolb
push
mov
clc
aaa
pop
shl
sub
xor
jp
dec
jne
arpl
nop
xor
lods
inc
dec
fadds
lds
xor
bound
aam
ret
aaa
sbb
movsb
mov
cmp
push
or
loope
xor
rcrl
das
mov
rorl
cwtl
and
test
dec
addr16
push
negb
icebp
mov
jmp
adc
addr16
dec
dec
das
popf
dec
xor
das
stc
stos
inc
pop
or
dec
pop
ljmp
pop
mov
adc
mov
dec
pop
xor
scas
push
in
dec
fsubs
pop
or
test
idivl
test
xor
stc
jmp
idivl
pop
jne
rorb
rclb
dec
jl
add
mov
add
mov
adc
mov
pop
mov
jge
fcoms
inc
lods
dec
inc
inc
sub
mov
lahf
in
int3
mov
and
push
and
dec
jno
fidivrs
mov
inc
insb
imul
sbb
sbb
out
sbb
out
addr16
add
add
dec
sub
inc
sbb
push
clc
cmp
push
pushf
xchg
test
cmp
push
int
shl
ljmp
mov
dec
sub
dec
cwtl
lret
push
into
push
and
int
mov
xchg
sahf
jbe
xlat
add
mov
push
ja
cmp
mov
leave
pop
es
or
ret
out
inc
jp
push
movsb
sub
stc
mov
sub
movsb
jmp
lahf
es
in
sbb
cmp
rol
sub
cmpl
clc
xchg
cmpsb
sbb
add
pop
test
sbb
cmp
dec
pop
or
pop
xchg
sub
xlat
cwtl
outsb
mov
pop
pop
mov
xchg
mov
pusha
shlb
aaa
pop
sub
xchg
test
jbe
xor
jnp
or
fidivs
popf
jne
push
jns
xor
xchg
mov
nop
sbb
inc
adc
inc
cmpsb
mov
push
pushf
or
cmp
stc
xor
adc
sub
dec
mov
sbb
sbbb
stos
call
jnp
jno
jecxz
lahf
xor
jg
sub
xor
stos
dec
or
xchg
pop
mov
jns
stos
inc
ss
xchg
inc
jno
scas
cld
mov
adc
mov
outsl
sub
dec
pop
add
cld
mov
ds
repnz
sbb
jb
or
imul
dec
test
outsb
jno
or
push
jg
jp
push
cld
fcmovne
sub
cmp
pop
cmc
leave
push
jmp
pop
mov
popa
imul
and
imul
in
xchg
fstps
xchg
cmpsl
les
jns
or
dec
fucom
sbb
in
mov
mov
in
out
jae
push
arpl
dec
hlt
fnstcw
movsl
aaa
movl
inc
or
lods
jbe
jbe
ret
sbb
scas
popa
test
ret
jae
cmc
xlat
clc
inc
cs
lret
mov
jmp
jbe
and
stc
mov
ja
loop
out
outsb
push
cmp
xchg
stos
jne
sbb
imul
inc
sahf
pop
sbb
mov
jnp
mov
dec
push
in
cwtl
cmpsl
imul
cltd
mov
les
loop
mov
add
ss
push
pop
inc
shrl
loopne
ret
nop
int3
cmp
stos
inc
adc
dec
cmp
es
push
imull
lret
out
cmc
aas
inc
ret
das
not
ficomps
pop
adc
jo
call
dec
hlt
test
pop
inc
push
int
inc
dec
stos
sub
dec
jecxz
invd
mov
xor
out
es
sub
mov
mov
sti
mov
mov
inc
and
ret
scas
fsubs
mov
lret
aad
adc
leave
ficomps
ficoms
je
lock
add
daa
mov
xchg
aaa
incb
cwtl
loope
jo
iret
ud2
iret
dec
adc
fldl
cwtl
pop
enter
aaa
fsubrl
imul
xchg
repnz
cwtl
leave
out
xchg
sbb
inc
outsl
sbb
mov
lret
pop
sub
adc
imulb
push
pop
xor
adc
fldcw
jb
mov
cld
mov
in
fwait
enter
mov
movsl
mov
cmpsb
in
fwait
aad
sbb
xchg
iret
adc
lds
out
insb
pop
or
lret
pop
movsb
out
push
mov
mov
sub
xchg
ret
gs
fldpi
movsl
sbb
and
dec
ret
xchg
pop
int3
stc
cmp
aaa
or
movsb
xchg
sbb
out
mov
or
xor
push
jo
xchg
dec
loop
pop
out
mov
jae
cmp
fisubrs
aam
fiadds
cli
in
insb
sbb
pop
fcoml
popa
jne
jmp
mov
fnstsw
jg
cmp
or
mov
ficompl
das
jb
div
cld
dec
fmull
cli
xchg
inc
pop
inc
call
mov
lods
and
push
ret
daa
rol
lcall
iret
mov
cmp
fldt
lods
lret
jbe
inc
les
push
movsb
je
lret
cmp
scas
arpl
paddq
inc
inc
mov
lods
mov
fisubs
xchg
jno
cwtl
mov
pop
lods
popf
cmpsb
sub
or
fsubl
fadd
pop
ljmp
daa
sub
push
cmpsl
out
mov
lds
cmpsl
sub
pop
xchg
js
das
outsl
rcrl
cmpsb
or
imul
aas
mov
mov
lahf
jmp
ficoml
gs
mov
fdivrs
enter
push
mov
loop
ror
scas
scas
or
or
mov
cmpxchg
fcmovu
movsl
aam
or
adc
lock
movsl
imul
and
fsubrl
mov
sub
hlt
cwtl
ss
xchg
fisubs
xchg
test
push
inc
lds
fwait
scas
add
push
jnp
inc
jge
lret
sub
in
lds
jae
jns
mov
aaa
add
int3
pop
mov
sbb
xor
je
pushf
sbb
insl
repnz
inc
inc
mov
inc
xor
xchg
je
lss
xchg
sub
xchg
sub
mov
mov
and
cltd
dec
repz
outsb
scas
pop
mov
jmp
les
std
iret
psubsb
cli
sub
cmp
in
cmp
lds
sti
adc
into
inc
pop
fsub
mov
pop
push
and
movl
adc
sub
inc
pop
mov
sti
popf
fdivr
mov
mov
and
and
push
fidivrl
fidivrl
push
mov
bound
pop
in
and
cmp
jnp
lods
fisttpl
xchg
adc
mov
negl
jg
fnstsw
aaa
add
mov
das
test
sbb
add
push
jns
in
jns
into
cmp
rorb
jle
js
xchg
mov
ja
js
jns
stc
adc
outsl
cmp
es
push
dec
lret
xchg
and
cmpl
mov
lods
pop
je
rclb
dec
pop
xchg
adc
clc
mov
xchg
sub
in
add
sub
push
mov
pop
adc
and
jno
test
int
push
in
mov
cmp
outsb
sub
dec
mov
lds
mov
cs
jp
mov
pop
fcomip
mov
and
adc
cmpsl
push
push
add
ja
xchg
and
dec
xchg
mov
mulb
bound
dec
je
jp
ret
xor
mov
mov
int3
stc
inc
adc
std
arpl
mov
adc
sti
jmp
clc
ja
and
pop
pushf
je
push
cmpsb
mov
cmp
mov
out
lods
adc
sub
add
outsb
loop
pusha
sub
mov
and
sub
or
or
test
and
daa
cmc
outsb
decl
nop
adcb
lods
sarl
in
mov
hlt
xchg
movsb
cmpb
int3
add
mov
shll
aaa
push
scas
sbb
push
sahf
mov
cmp
and
xlat
mov
test
cwtl
push
ret
andl
test
pop
adc
sub
adcl
aas
mov
dec
lret
sub
loope
cmp
cmpsl
hlt
add
mov
mov
aaa
in
imul
fdivs
std
or
adc
lahf
pop
imul
mov
mov
pop
loope
dec
sbb
jle
data16
mov
push
push
fiadds
push
pop
ljmp
mov
mov
xor
add
int3
or
outsb
add
scas
in
lock
jno
hlt
mov
dec
or
inc
adcl
repz
cmp
push
addl
popf
and
pop
add
or
adc
fs
jb
add
push
sub
pop
inc
stc
es
in
inc
ljmp
nop
clc
jge
out
inc
pop
adc
sub
xor
xor
push
mov
jle
lds
or
mov
cwtl
jmp
sbb
in
mov
pop
or
hlt
and
stos
and
popa
ffreep
mov
sarb
mov
lock
inc
or
adc
outsb
jns
adc
jne
pop
rorb
insb
repz
out
dec
sbb
sub
dec
or
jmp
addr16
sub
cmp
push
comiss
pusha
mov
xchg
xchg
sbb
and
out
ficoml
and
jb
and
sub
in
sub
dec
adcb
imul
xorl
loope
jmp
in
mov
mov
jg
xor
jb
leave
stc
ret
subb
jecxz
and
popf
xor
call
pop
sbb
inc
ficoms
add
bound
js
into
pop
mov
insb
inc
or
xor
xchg
and
cmp
in
or
mov
mov
jecxz
xchg
add
pop
fs
fldl
shrb
scas
rclb
mov
push
push
add
push
push
insb
or
fs
mov
popa
repnz
jae
orl
adc
pusha
adc
movsb
ja
jns
and
mov
lea
jno
xchg
sbb
lds
mov
mov
fildl
mov
cmc
das
xchg
loop
adc
clc
mov
xchg
frstor
add
sub
leave
stos
sarb
dec
and
mov
lret
int3
cmpl
sbb
xchg
sarb
push
test
push
mov
dec
xor
aaa
sub
dec
js
dec
in
dec
mov
sbb
repnz
add
and
lock
arpl
insb
fucomp
xchg
ljmp
hlt
fstps
adc
jns
mov
stos
pop
push
pop
mov
sub
mov
dec
push
add
or
mov
icebp
enter
cmc
mov
sub
inc
mov
fs
cmp
or
jmp
in
popa
aad
xor
xor
cld
sbb
lock
or
sub
jnp
bound
loopne
es
out
push
sti
stc
addl
aaa
mov
jns
out
xchg
mov
test
enter
pusha
jp
rcrb
test
and
adc
sub
sbb
js
call
lahf
imulb
scas
inc
adc
pushf
test
jno
std
jbe
add
xor
inc
ds
xchg
push
and
hlt
sti
push
aad
cwtl
xor
pop
call
nop
lret
mov
inc
addl
out
mov
outsb
jb
out
inc
aad
negl
daa
pop
add
fistps
mov
mov
call
xchg
loope
lods
xchg
sub
and
out
add
add
lret
jle
xchg
push
adc
call
jns
lods
adc
in
push
or
xor
stos
cmp
aaa
xor
mov
and
out
push
les
cltd
pusha
jnp
cmp
push
push
rcrb
mov
jmp
xchg
push
sbb
mov
pop
mov
xor
xlat
mov
lods
push
jecxz
das
pop
dec
push
lret
mov
scas
xor
pop
push
lret
inc
in
pop
adc
fs
nop
xchg
add
lea
sbb
add
fstpl
inc
add
xor
int
cmp
pop
mov
xor
push
and
insl
push
aad
bound
xor
sbb
cwtl
sbb
pop
dec
xor
lret
fmul
das
sub
push
mov
pop
jbe
cmp
dec
pop
test
xlat
and
stc
mov
xor
inc
sti
mov
fmull
insb
add
inc
mov
dec
shlb
xchg
or
lret
test
pop
icebp
ret
mov
mov
add
push
inc
add
dec
ret
adc
fdivl
push
sarl
test
aam
daa
xchg
movsl
test
es
pop
enter
and
stc
mov
push
pop
mov
jns
insl
int
mov
test
dec
sub
int3
cli
mov
bound
inc
fwait
cmpsl
sbb
aaa
aaa
fwait
and
jno
add
gs
pop
in
xor
jp
out
test
push
lret
imul
push
inc
mov
insl
xchg
xchg
xor
and
sbb
pop
push
aas
mov
movsb
lea
xchg
fisubrs
mov
or
test
pop
lcall
push
cmp
das
cmp
xchg
jecxz
cwtl
and
lret
and
arpl
movsl
adc
fildl
stos
loopne
and
push
mov
xor
inc
sbb
sbb
mov
dec
cmp
pushf
cltd
mov
or
pop
loopne
ret
dec
cmp
test
faddl
jo
icebp
dec
xchg
mov
rol
or
lahf
xchg
pop
xchg
je
inc
mov
out
nop
xchg
dec
aam
xchg
sbbb
xor
or
ror
jl
cmp
in
arpl
xchg
xchg
jle
sbb
icebp
lret
mov
push
add
mov
push
jb
leave
sub
in
iret
movsb
ja
daa
adc
fimull
or
jle
xor
add
push
iret
data16
ficomps
xchg
add
mov
adc
loop
mov
xor
cmp
mov
imul
cmp
mov
jecxz
dec
aad
cld
into
pop
out
cmp
pop
in
aad
add
or
sub
std
mov
cmp
mov
imulb
pop
arpl
ss
jl
std
and
call
icebp
scas
xor
inc
inc
sbb
mov
add
std
in
lods
push
sub
int
jecxz
dec
mov
jns
stos
sbb
sub
sbb
out
jno
movsl
xchg
or
arpl
inc
xchg
push
jg
imul
pop
push
mov
mov
pop
xchg
in
es
aam
in
cmp
shlb
pop
jb
outsl
pushl
lock
outsb
sarb
loopne
cmc
add
inc
int
cli
mov
fwait
stc
adc
cmpl
sti
or
add
mov
lahf
and
arpl
and
aam
jbe
xor
pop
movsl
aad
lods
dec
add
gs
adc
ret
xchg
out
mov
nop
dec
lcall
mov
int
leave
sbb
cmp
cmp
aaa
and
fs
fwait
dec
ds
pop
push
pop
int
sahf
mov
xor
cltd
sub
pop
mov
lahf
push
fdivrl
addl
pop
dec
pusha
fisttpl
sar
stc
lods
insl
stos
jl
mov
mov
mov
out
lea
xchg
mov
xor
inc
fimuls
xchg
xchg
lock
cmp
ficoms
sbb
jg
jle
mov
add
mov
inc
mov
sbb
dec
sub
and
sub
data16
ret
scas
insl
pop
or
iret
pushf
and
dec
test
pop
dec
add
mov
ret
cmp
in
cmpsl
xchg
out
fnstenv
jb
and
outsl
pop
push
lret
jp
in
sub
or
jae
xlat
insb
cmp
and
ret
dec
hlt
loopne
mov
pop
cmc
mov
xchg
out
ljmp
lock
xlat
repz
pop
and
push
add
stos
or
ret
adc
adc
call
and
mov
inc
push
push
into
cmp
dec
idivl
xor
dec
push
divb
xchg
ja
mov
pop
in
leave
mov
add
sub
test
in
in
dec
mov
mov
loop
ret
les
test
hlt
cmp
scas
jle
ret
push
jb
and
cmpsb
or
push
fcoms
out
add
aaa
push
or
push
push
inc
dec
mov
pop
ret
mov
inc
inc
mov
mov
mov
adc
insl
jmp
ret
daa
imul
mov
adc
les
jno
stos
push
push
mov
scas
fidivl
sub
arpl
dec
adc
sbb
mov
roll
imul
fdivs
mov
repnz
sbb
ret
rolb
or
and
imul
inc
shlb
jmp
cmp
arpl
aad
adc
cmp
das
cmp
mov
shlb
inc
test
insb
andl
add
mov
mov
xchg
mov
imul
rorb
jb
inc
es
imul
subl
scas
mov
mov
dec
xchg
push
inc
in
negb
jno
leave
mov
jmp
add
ficomps
call
mov
fnstcw
jb
int3
xor
cmp
push
faddp
xor
dec
adc
push
enter
scas
xlat
xor
cmpsl
inc
xor
js
enter
mov
rorb
mov
test
les
and
sbb
lret
add
xchg
ja
push
in
push
mov
int3
in
fwait
lret
xchg
push
jno
packssdw
cltd
movsb
pop
scas
sbb
jno
ds
push
cld
mov
ficomps
in
in
inc
lock
cwtl
mov
and
int
mov
cmp
dec
in
sarb
mov
mov
mov
adc
imul
insl
mov
mov
pop
pop
in
les
sahf
add
cmc
addr16
add
in
lods
out
popa
gs
xchg
fmull
xchg
ljmp
xor
shr
cmp
pop
mov
dec
xchg
in
into
sti
clc
jl
pop
cwtl
stos
cmp
push
add
dec
lahf
inc
cmp
hlt
cmpsl
mov
mov
xlat
iret
imul
rcr
adc
fs
adc
rol
sbb
or
frstor
orb
xor
mov
cwtl
inc
outsb
dec
xchg
mov
or
sub
mov
ljmp
mov
hlt
std
inc
mov
sub
es
les
adc
inc
mov
mov
push
fwait
mov
jb
jo
out
sub
mov
push
lahf
into
jecxz
xchg
in
je
lahf
push
add
hlt
in
jae
aad
js
stos
dec
sbbb
sarl
mov
loope
mov
sti
in
inc
xchg
and
push
fidivrs
xlat
lea
jmp
or
adc
sub
pop
pop
mov
fdivrs
xor
test
test
adc
pop
int3
xchg
lods
xorl
jle
xor
cmp
dec
ret
adc
lret
popa
inc
jbe
ss
in
sub
pop
sub
clc
xor
cmpb
jo
call
add
add
pop
mov
jle
jo
jb
pop
aad
bound
into
clc
scas
mov
add
sti
cmp
cmc
or
scas
xchg
lret
xor
sub
lods
rcpps
or
std
jmp
mov
mov
aas
cmp
add
jl
mov
cmp
pop
inc
andl
hlt
mov
jecxz
test
aas
xchg
fdivrl
dec
pop
stos
xchg
mov
jne
inc
sar
push
sub
ret
jne
adc
inc
in
pop
inc
ds
fldcw
adc
lods
jo
jg,pn
mov
sbb
test
xor
loope
and
push
mov
push
mov
or
icebp
and
push
jnp
fcompp
mov
mov
cmpsb
push
daa
push
ds
int
shll
jbe
xor
adc
cld
mov
and
mov
inc
sub
in
cmc
mov
push
les
xor
das
inc
aas
test
popa
mov
imul
fsubrs
dec
and
inc
loopne
loopne
push
add
rcl
add
stc
nop
movsl
push
sub
mov
std
cmpsl
push
dec
das
jno
std
es
fidivrl
fcomp
stc
sub
inc
xor
cltd
inc
or
ror
sub
orb
pushf
mov
sbb
pop
sbb
mov
push
jmp
and
pop
jns
jo
pop
xor
scas
ss
lcall
xor
jo
out
xor
push
or
fdivs
cmp
dec
orl
cwtl
dec
cmp
push
test
mov
div
dec
test
mov
inc
mov
movsl
sbb
enter
mov
popa
mov
bound
lret
mov
test
sahf
pop
push
mov
lea
aas
cmp
xorb
insb
call
movsb
cmp
mov
ret
stos
push
mov
ds
mov
fwait
inc
out
sarb
mov
testb
out
push
xchg
fistpl
ja
add
mov
fmulp
cmc
test
mov
dec
rcll
pop
sbb
push
addl
mov
mov
jl
cmp
add
and
inc
adc
pop
inc
insb
push
sbbl
add
jmp
push
fistps
mov
inc
xor
add
add
cltd
inc
ret
sbb
loopne
sarl
mov
fucom
les
xchg
pop
or
xchg
cwtl
int
loop
pushf
add
jno
push
hlt
push
out
div
dec
add
jns
sub
sbb
inc
inc
leave
shll
pusha
stos
shlb
jle
mov
push
push
inc
mov
enter
sub
sarl
dec
sbb
mov
pop
inc
pop
mov
fstps
jns
adc
jns
cmp
xchg
shlb
test
add
mov
movsb
ljmp
js
subl
scas
dec
das
rcrl
iret
cmc
mov
cli
mov
adc
pop
xchg
pop
xor
aas
xchg
imul
bound
mov
jge
mov
cli
lods
cmp
cld
or
lea
ljmp
int
adc
mov
pop
cmpsl
pop
data16
mov
lahf
mulb
add
cmp
mov
lods
push
test
movsl
pop
jo
and
js
mov
mov
cli
jbe
in
movsb
ret
dec
pusha
jbe
imul
adc
cmp
into
mov
add
ss
cmp
loopne
fcom
push
xchg
sbb
xchg
xchg
adc
movsb
xlat
xchg
mov
pusha
pop
mov
jno
dec
mov
or
inc
data16
insl
in
jge
xlat
mov
out
cmp
repnz
je
or
jg
scas
stos
push
scas
test
test
mov
hlt
pop
aaa
jg
hlt
in
pop
xor
loopne
fmul
dec
mov
sbb
cwtl
stos
mov
fnsave
fs
adc
xlat
enter
adc
cmc
dec
and
dec
cs
repnz
push
stc
cmpl
xchg
push
testl
sbb
cmp
clc
xchg
xchg
fiaddl
pop
iret
jnp
inc
sbb
ja
push
mov
hlt
xor
dec
sahf
mov
cltd
jno
pushf
sbb
out
btr
cwtl
in
cmp
bound
imul
xchg
jg
out
mov
pop
lds
leave
js
add
aaa
ja
popf
andl
push
idivl
fucom
adc
mov
rol
enter
stos
rcll
jno
or
mov
inc
xchg
push
and
cmp
mov
mov
jmp
pop
cmpb
out
je
loop
fdivrl
ds
enter
cmp
mov
cmp
and
loop
pop
popf
push
movl
mov
cli
jecxz
xchg
cmpsl
dec
and
xor
adc
and
movsl
push
xor
mov
cmpl
cmc
xchg
mov
push
xchg
xor
jmp
xchg
enter
add
inc
adc
call
fdivrs
aaa
popa
cmp
push
sahf
pusha
rep
notb
push
imul
or
and
inc
mov
ljmp
sahf
jp
adc
and
inc
ret
push
inc
and
dec
pop
lock
in
sbb
outsb
and
jns
or
lds
std
pushf
or
in
es
adc
cmpsl
sub
stc
mov
sbb
sbb
mov
fadds
data16
inc
daa
mov
ret
in
loope
out
inc
fwait
popf
add
mov
mov
popl
cmp
movsl
int3
xor
adc
loop
xchg
mov
lahf
mov
imull
clc
or
mov
lahf
mov
mov
mov
loop
and
inc
push
inc
cwtl
mov
cmp
sub
xor
scas
sbb
adc
icebp
pop
lret
das
xor
pusha
testb
sub
add
pop
enter
addb
mov
xchg
push
inc
das
push
fimuls
jg
adc
jmp
mov
mov
lret
or
mov
fldcw
je
out
xchg
rcrb
jne
and
cmp
clc
je
sbb
mov
dec
shl
test
lods
sub
jns
sub
push
hlt
xchg
repz
pop
jle
mov
dec
popa
sbb
sbb
out
push
leave
mov
push
std
cmpsl
pop
cltd
stos
scas
out
mov
push
or
mov
scas
repz
ja
push
das
xor
inc
pop
test
mov
or
roll
mov
push
xchg
and
int3
or
cmpsb
push
push
enter
jecxz
pop
xchg
shlb
pop
xchg
imul
loop
mov
push
fdiv
movb
out
pushl
sbb
in
ret
cltd
mov
pop
and
rcrl
test
nop
jle
mov
stos
fildl
mov
mov
loope
pop
jmp
dec
pop
jl
sar
push
pop
mov
mov
pop
or
sahf
or
mov
inc
mov
sarl
sub
mov
std
andb
cmpb
inc
popa
cmpsl
aad
pusha
hlt
inc
adc
inc
mov
addl
hlt
ljmp
int3
ds
xchg
mov
insb
mov
dec
xchg
push
stc
out
ja
in
call
shll
xchg
jge
pop
push
jecxz
bswap
insb
cwtl
aam
dec
mov
or
mov
adc
mov
cld
xchg
pop
xor
sbb
aaa
push
sbb
icebp
mov
sti
bound
in
or
mov
mov
icebp
lock
ss
cmp
sbb
dec
shll
call
mov
mov
adc
jae
mov
xchg
sti
arpl
pop
jecxz
shll
dec
mov
stos
idiv
test
lcall
jb
cs
dec
xchg
cmp
dec
in
cmpsb
inc
xchg
jbe
push
fs
call
lahf
mov
cmp
daa
adc
sbb
loope
push
enter
dec
push
sbb
call
sub
adc
push
jo
dec
cmp
and
int3
loopne
inc
mov
mov
sbb
icebp
ret
inc
icebp
stos
aam
adc
scas
dec
xchg
arpl
out
orl
fistpll
icebp
pop
loope
fnstsw
push
mov
rorb
xchg
ss
insl
icebp
dec
dec
adc
inc
lret
push
adc
cmp
push
inc
cli
out
mov
mov
dec
mov
mov
addb
jbe
push
mov
out
faddl
mov
add
push
sti
dec
xor
xchg
adc
jg
stc
fnstsw
movsb
les
push
or
andb
sub
into
ss
shlb
dec
xchg
out
mov
testb
call
push
adc
movsb
cmp
jns
lret
notl
mov
out
pusha
mov
movsl
add
mov
fcoms
xchg
js
bound
daa
mov
pop
sub
dec
mov
jle
cmp
rcrb
roll
out
cmp
sub
push
shl
sar
sub
mov
in
cmpsb
jne
or
roll
jnp
inc
scas
xor
or
dec
jge
sub
sub
push
out
jle
add
add
fimull
jo
push
cltd
dec
cmc
inc
xor
inc
das
inc
push
dec
lock
xor
pop
jbe
pop
lcall
movsb
xchg
jp
sub
cs
lea
push
insl
jg
in
jg
jo
xor
lods
xchg
sbb
ss
mov
mov
imul
addr16
adc
ret
repnz
fisubrs
pop
mov
shlb
and
fs
lahf
inc
push
rcrb
fnsave
nop
lds
jg
pop
push
sbb
xlat
fildll
jbe
fistpll
adc
decb
adc
stos
xchg
push
popa
mov
int
std
outsl
movsl
sub
dec
push
aas
ljmp
xchg
jne
in
sbb
or
orb
dec
sbb
mov
jmp
in
loop
lcall
fmull
push
inc
pop
inc
out
aas
leave
imul
mov
test
repz
adc
jg
inc
loope
pop
fcomps
push
inc
popa
sbb
sbb
ret
cmpsb
fldl
ss
out
inc
iret
pop
xor
ret
and
push
addr16
stos
push
imul
icebp
nop
dec
pop
pop
inc
cmpsl
ss
mov
mov
push
mov
jg
mov
pop
in
jnp
movl
sbb
mov
pushf
or
jns
ret
inc
mov
loop
mov
xchg
sub
dec
inc
push
subl
scas
mov
pop
ja
test
xlat
leave
mov
cmc
mov
in
in
mov
push
aas
jnp
push
roll
sbb
js
xor
cmp
cmp
test
arpl
mul
mov
shlb
test
shll
sub
mov
add
ret
faddl
xorl
movsb
mov
fildll
and
adc
or
push
xchg
and
nop
aam
enter
lahf
enter
jl
mov
push
mov
shl
add
mov
clc
xor
outsb
adc
movsl
cmp
mov
jb
test
ret
pushf
shll
aad
std
and
dec
jo
add
inc
or
cmp
mov
ja
nop
dec
shrl
mov
aas
pop
push
movsb
mov
es
pop
loope
sub
jp
imul
jbe
sti
mov
arpl
lock
xor
sbb
lds
xor
movhps
sbb
cmp
cmp
sbb
cmpsl
aad
int
fldcw
xchg
dec
push
inc
push
in
loope
cmp
xlat
pop
out
add
mov
jg
nop
mov
fsubs
dec
inc
xor
jne
mov
jle
or
pop
push
pop
shll
call
mov
lods
cwtl
in
mov
jne
xor
mov
cmp
add
lods
inc
pusha
xchg
mov
aad
lahf
movsl
sub
addr16
stos
sub
movb
inc
mov
mov
sub
adc
jno
pushf
call
gs
pop
shl
lret
lcall
into
aaa
scas
add
stos
xor
pop
nop
test
and
stos
lods
push
adcb
pusha
mov
mov
inc
xchg
xor
cmc
pop
and
ljmp
inc
lea
or
push
fs
popf
mov
lds
inc
in
mov
jecxz
ja
daa
ja
fsts
jno
xchg
jne
shll
dec
sub
pop
pop
push
std
leave
mov
clc
stos
dec
out
jmp
test
mov
dec
ja
mov
inc
fidivs
out
sbb
jbe
and
mov
dec
and
sub
cld
sub
fistps
into
in
or
clc
and
and
mov
add
popf
loopne
jb
mov
dec
xchg
mov
mov
pusha
mov
out
inc
mov
xor
inc
je
sbb
pop
cs
mov
or
js
push
sbb
push
rcrb
or
cmc
ljmp
sbb
je
xlat
add
out
mov
pop
cmp
mov
out
icebp
mov
mov
dec
mov
pop
out
icebp
ja
stc
aam
mov
les
movsl
inc
or
or
repnz
xchg
push
mov
sti
add
data16
arpl
mov
or
hlt
dec
mov
outsl
xchg
xor
xlat
sbb
sbb
inc
lcall
mov
das
push
inc
ja
add
mov
insl
push
ljmp
add
mov
outsb
xor
sbb
sbb
pop
lea
or
insb
and
mov
aaa
jo
rclb
pop
lds
stos
adc
add
mov
loope
call
cmpsb
dec
daa
pushf
mov
les
mov
jns
fiaddl
add
lock
lcall
jno
leave
push
aaa
jp
shl
xchg
inc
adc
add
pop
push
incb
lret
or
cwtl
cs
ja
leave
and
adc
in
dec
movsb
cli
pop
pop
pop
add
fwait
bound
mov
inc
pop
push
sub
push
mov
jne
sub
cmp
les
mov
fisttpll
mov
jmp
xchg
jnp
pop
out
loope
xor
movsl
movsl
push
leave
pop
notl
mov
adc
xor
outsl
pusha
arpl
pop
jecxz
push
dec
xchg
aas
pop
out
test
mov
mov
inc
mov
xlat
cmpb
hlt
fdivs
xchg
adc
pusha
mov
add
push
mov
shll
fucomi
jne
ds
push
leave
xchg
mov
push
enter
mov
cwtl
fwait
testb
cmp
cmc
xor
sub
cmp
fwait
gs
insl
sub
dec
popa
std
mov
inc
stos
xor
je
lock
mov
cmp
iret
fistps
push
data16
ds
mov
imul
pushf
ret
andb
aam
dec
xchg
inc
out
sahf
mov
push
push
lods
data16
clc
add
leave
in
mov
test
push
iret
or
rcrb
jmp
adc
push
or
cli
sbb
sarb
xchg
dec
outsl
fsubl
jge
push
jb
mov
leave
fsubs
lods
lods
add
out
jg
mov
jno
push
inc
lods
or
scas
cmp
mov
or
mov
add
fmull
xchg
sub
in
cmp
jae
in
dec
fsubrs
adc
and
lret
lahf
enter
pop
stos
jg
fcoms
imulb
popf
mov
pop
popa
pop
sub
imul
fs
orl
in
mov
xchg
testb
data16
enter
push
int
push
out
shlb
jl
jmp
negl
ret
mov
push
mov
jge
int
sbb
es
sbb
mov
ja
data16
out
mov
cmp
ret
xor
push
dec
and
call
int3
add
mov
push
sbb
dec
test
jg
xchg
xchg
push
cmp
aad
mov
sub
aas
xor
je
jp
dec
stos
repz
pop
out
pop
jnp
mov
es
inc
sbb
xchg
mov
idivb
clc
repz
cmp
mov
pop
mov
push
cmpsb
adc
mov
pushf
or
or
aam
adc
push
pop
sbb
and
inc
pusha
inc
push
push
mov
movb
jb
jmp
test
pop
in
add
and
es
jle
inc
mov
sbb
mov
negb
mov
mov
pop
out
lcall
fiaddl
mov
xlat
data16
sbb
sub
pushf
xchg
mov
lods
das
cmc
jge
dec
repnz
ret
sbb
inc
mov
stos
sub
mov
out
test
sbbb
loop
pop
test
sbb
mov
mov
shlb
jp
adc
pusha
in
pop
adc
leave
imul
add
jl
mov
movsl
int
cld
jle
jmp
sub
xor
lods
xchg
dec
sbb
lock
insl
test
jae
xchg
xchg
out
and
jl
je
mov
pop
mov
fsubs
push
fucom
sbb
jne
xor
or
sub
daa
dec
sbb
cld
cmp
push
fsubp
inc
pop
cmp
mov
mov
ficoml
cwtl
addb
andb
fisttpl
add
adc
imul
or
cmpl
mov
pop
mov
insb
loopne
add
shrb
xor
or
pop
or
fmull
outsl
push
js
mov
lods
xlat
pusha
and
cmc
push
cmp
pushf
aad
lret
push
mov
arpl
sub
nop
xchg
mov
leave
out
ds
sbb
imul
shlb
dec
or
xor
popf
cs
decl
mov
dec
mov
inc
ret
jnp
and
mov
sbbl
xchg
xchg
mov
push
out
or
xchg
adc
gs
add
jae
les
add
jns
test
adc
mov
cmpsb
dec
push
mov
fstps
sub
mov
mov
in
mov
leave
inc
xchg
xchg
xchg
xchg
jae
popf
str
mov
jbe
test
movsl
or
ja
psrlq
test
pop
and
stc
mov
pop
mov
jne
jp
add
ficomps
pop
shl
imul
push
addr16
in
icebp
sbb
cmc
pop
mov
fistps
dec
inc
arpl
jae
dec
sub
js
sub
or
pushf
mov
nop
test
call
sub
test
inc
enter
int3
out
fwait
lea
mov
das
push
dec
fbstp
pop
pop
and
stos
jmp
xchg
cmp
les
and
adc
stc
mov
or
ret
hlt
cmpsb
or
dec
lock
mov
mov
xlat
neg
test
add
xbegin
imul
pop
jae
add
fstpl
pop
shl
test
sub
add
adc
dec
lods
mov
test
adc
sbb
negb
imul
pop
xchg
int
and
pop
cwtl
push
ljmp
loopne
call
xor
cmpl
outsb
stos
rorb
cmc
mov
decl
mov
hlt
pop
or
add
jmp
rcrb
inc
shll
mov
inc
xor
mov
xchg
pop
or
sahf
adc
test
jl
pop
push
cli
adc
xchg
or
xchg
sbb
cmp
roll
add
push
xor
push
cli
sbb
jg
loop
mov
loop
stc
les
lret
inc
stos
adc
int3
add
jne
int
push
inc
jmp
push
push
daa
pop
sahf
fcmovu
pop
in
sub
mov
xchg
repnz
xlat
insl
arpl
in
or
jp
dec
fcmovbe
stos
insl
pop
inc
scas
popf
scas
ficompl
xchg
aad
pop
xchg
mov
lret
dec
shlb
dec
mov
adc
insb
push
jno
insl
cmp
jno
mov
and
fst
ds
das
aaa
dec
or
adc
je
push
into
cmp
aam
push
pop
inc
jne
sbb
in
scas
ret
push
xor
inc
shrl
pop
lods
std
mov
addr16
jmp
lea
in
sub
xor
xor
push
call
es
mov
push
call
sbb
mull
xor
stc
xchg
pop
jmp
mov
jl
push
int
cwtl
pop
push
lods
adcl
out
xorb
ret
into
sti
cmpsl
push
push
mov
mov
push
out
adc
int
mov
divb
inc
cmp
mov
adc
xchg
ss
stc
jle
add
fstp
lret
or
lods
jge
outsl
add
mov
js
sub
cmp
cmpsb
mov
fiaddl
loop
xor
inc
imul
cmp
mov
in
xor
rcl
jno
mov
in
mov
fnstcw
push
jmp
sub
pop
jno
or
fs
out
pop
mov
sti
shlb
int
push
lea
xor
and
sbb
or
fidivrs
les
lods
mov
add
fidivl
push
mov
add
in
xor
or
sbb
dec
fistpl
push
ja
in
xchg
cmc
stos
rcl
pop
lcall
cmp
aad
cwtl
cmpsb
adc
xchg
pop
pop
mov
orl
cmp
push
inc
ja
cmp
std
in
mov
jmp
or
dec
adc
mov
push
dec
roll
xchg
inc
repnz
std
popa
in
mov
jno
adc
xchg
mov
fs
fwait
outsl
or
stc
mov
cmc
mov
jmp
mov
sbb
daa
fidivrl
xchg
xor
inc
xchg
in
popf
sbb
xchg
aas
xchg
pop
pop
or
jp
or
loope
pop
add
sbbb
aaa
arpl
test
call
xor
test
jo
ljmp
ret
xor
es
shll
bnd
mov
xor
sahf
xlat
inc
mov
mov
es
lock
fsubs
sbb
mov
ret
cmp
out
push
das
int3
in
inc
rcll
mov
push
rcrl
push
inc
repz
test
out
or
or
je
pop
loope
into
sbb
scas
sub
jp
add
icebp
gs
test
shrl
adcl
dec
mov
lahf
xor
scas
cld
flds
jg
sti
into
popa
xchg
decb
xor
jmp
popl
mov
or
test
stc
ss
mov
ss
jp
add
mov
mov
mov
jmp
enter
mov
adc
icebp
in
outsl
jnp
cmp
loop
cmp
clc
cmp
popa
imul
mov
ljmp
or
sub
sub
pushf
out
mov
jno
pusha
push
mov
movsb
outsb
mov
faddl
cs
push
push
mov
mov
push
add
cmp
subb
xor
clc
rcll
jp
cmp
ret
adc
mov
sub
stc
add
repz
repz
icebp
jmp
pop
movsb
lock
inc
adc
fidivl
aam
movsb
cli
std
xorb
stos
xor
ss
into
lcall
leave
cld
rorl
inc
mov
push
mov
ljmp
push
push
repz
les
xchg
int
test
fstpt
xlat
push
dec
or
push
nop
push
dec
mov
adc
pushf
xchg
dec
fiadds
shrb
loop
xchg
mov
xor
xchg
xchg
dec
cmp
xor
cmp
cmp
sbb
pop
adc
int3
cs
mov
arpl
sbb
or
inc
pop
filds
and
sbb
mov
aas
mov
das
cmpsl
lret
xor
push
imul
adc
sub
inc
sub
mov
cld
fistpl
inc
or
loop
inc
fs
push
add
mov
cwtl
or
pop
pop
cmp
aad
stos
and
inc
and
jbe
lock
mov
aaa
push
ljmp
mov
cltd
mov
mov
fisttpl
fs
das
cmpl
je
and
lock
imul
mov
xchg
mov
lret
mov
mov
and
mov
jae
and
cmp
jno
nop
and
or
jle
cmp
xchg
cmp
sar
mov
mov
ljmp
fwait
movsb
rcr
out
add
ss
xchg
js
andb
add
inc
push
add
data16
push
pop
push
iret
loop
or
out
addr16
cmpsb
lcall
push
pusha
nop
xchg
int3
pop
movsl
setbe
and
jle
and
mov
lds
sbb
leave
push
int3
inc
out
jo
outsl
xor
mov
cmc
push
in
jl
or
fistl
js
pop
scas
pop
cmpsb
stos
and
push
pop
jns
call
mov
mov
cld
lock
es
sub
mov
lret
sbb
pop
in
adc
push
mov
cs
ljmp
enter
jmp
mov
popl
pop
push
jl
add
inc
push
dec
rcrl
sarl
ret
das
hlt
xor
push
jb
inc
xchg
push
dec
adc
xchg
pop
call
f2xm1
cmp
sub
xlat
hlt
jo
mov
cmp
sbb
adc
and
inc
fdivr
mov
add
flds
push
ds
call
addb
imul
sub
sahf
pushf
pop
jp
lods
lea
xor
mov
and
jae
push
or
mov
mov
leave
pushf
sub
jle
in
or
mov
inc
test
aad
enter
xor
jae
pop
xchg
orl
and
add
push
mov
jns
push
sbb
mov
mov
cmp
dec
mov
cmc
adc
and
inc
fwait
mov
mov
mov
dec
cwtl
push
xchg
aas
ljmp
shll
dec
dec
stos
cmp
mov
outsb
adc
jl
lahf
inc
lock
push
or
pop
adc
les
in
mov
sub
jo
mov
test
rclb
imul
cmp
push
out
xchg
jb
and
push
jo
jle
add
outsl
inc
repz
mov
jbe,pt
lea
in
loop
pop
inc
pop
ret
jl
jno
rorb
pop
stc
xchg
and
xor
adc
and
sar
movsl
push
mov
jecxz
rcpps
fdiv
outsb
push
sbb
test
fldl
add
lcall
jge
sbb
jnp
aad
data16
retw
push
insb
ret
filds
mov
pop
sbb
inc
jg
mov
nop
xchg
jae
pop
sbb
enter
xchg
mov
push
iret
gs
xchg
inc
aas
xchg
ror
pop
jo
call
mov
add
mov
dec
das
popf
adc
fidivl
mov
adc
or
sbb
mov
lahf
jg
jge
aaa
cwtl
adc
incl
filds
insl
and
xor
pushf
loopne
cltd
xlat
push
pop
pop
test
ljmp
movsl
or
js
xchg
pop
mov
mov
jmp
inc
lea
push
lret
outsl
jmp
iret
push
inc
xor
pop
add
clc
rcrb
aad
js
kandnb
ss
inc
jp
xchg
and
jb
int
sub
sub
aas
scas
js
insb
jno
cwtl
xchg
out
shl
push
cmpb
jb
mov
xor
stos
dec
call
lods
divb
jb
test
mov
lcall
mov
in
das
xchg
push
push
xor
lcall
movsb
fsubrs
adc
enter
add
or
jle
push
push
es
test
push
repnz
loop
jbe
sarl
bound
mov
dec
cs
pop
mov
mov
pop
add
in
mov
jecxz
mov
in
aam
and
mov
int3
pop
ss
iret
insl
sbb
cmc
add
sbb
push
je
xchg
popa
pop
out
fdivp
dec
pop
sub
inc
dec
imul
push
mov
sub
into
stos
cli
lock
or
das
mov
fbstp
inc
ret
fwait
lret
push
and
mov
mov
cmp
inc
ret
push
into
xchg
cmpsb
jp
and
or
sub
xchg
in
std
daa
fsubrs
sub
mov
pushf
ljmp
test
aas
and
adc
pop
loope
rcr
pusha
and
dec
xchg
jae
repnz
pop
pop
mov
fwait
or
cmp
aas
imul
mov
mov
add
ret
incb
test
dec
es
pop
mov
mov
aam
inc
enter
cli
sub
pop
push
or
adc
lds
iret
sub
in
jbe
cltd
lcall
pusha
in
jg
push
lret
push
outsl
sahf
adc
xchg
mov
xchg
cmp
divl
push
xchg
lods
sahf
xchg
mov
sarb
push
repz
shl
shlb
in
aas
movsb
cwtl
inc
adc
jnp
fnstcw
hlt
jl
and
call
and
xchg
cltd
add
lcall
push
insb
mov
hlt
mov
fcoms
mov
push
nop
in
push
imul
dec
xchg
xchg
rorl
cli
adc
outsb
pop
or
ds
dec
fldl
stos
sub
movsb
rol
lods
popf
push
rolb
xchg
stos
or
sub
ss
sbb
add
pop
pop
adcb
jne
sarb
fadd
mov
bound
cld
shlb
pop
adc
sbb
mov
dec
and
inc
loope
out
fbstp
add
mov
fwait
lahf
outsb
scas
cld
mov
iret
outsl
lods
clc
push
fdivs
test
mov
add
dec
add
sub
repnz
mov
into
fldenv
mov
aas
pop
cmp
test
pop
cmp
inc
jmp
jbe
push
inc
cmc
test
mov
sti
xor
scas
add
ja
frstor
xchg
jo
sbb
xor
adc
aam
sbb
paddq
xchg
lret
and
movsb
or
mov
in
je
daa
push
adc
add
lods
ffree
mov
cld
in
int3
loop
cmp
arpl
or
mov
dec
rcrl
sbb
mov
rclb
sti
xor
sub
sarl
add
pop
addr16
pop
mov
dec
ja
sbb
imul
push
mov
or
insl
adc
fucomi
and
jmp
push
mov
jp
pop
mov
inc
fidivrs
iret
out
pop
inc
mov
nop
lea
outsl
sub
in
xor
add
pop
sub
std
cwtl
pop
jl
inc
pop
mov
stos
or
sub
pop
mov
cmpsl
popf
lahf
into
hlt
xor
add
jg
popa
out
xor
shl
push
jbe
xchg
jmp
and
adc
pop
mov
ja
adc
mov
jb
cmp
in
adc
gs
xor
in
xchg
addr16
scas
clc
mov
aam
mov
or
cmc
xchg
test
call
cltd
add
fdivrp
cmpsl
daa
mov
mov
movb
pushf
stos
mov
xchg
xchg
ret
jle
pop
stos
add
rcl
mov
out
push
aaa
fiaddl
mov
sar
out
dec
push
bswap
into
in
inc
cltd
call
xchg
fldenv
jle
movsl
rcrl
jmp
xchg
lock
in
cmp
jge
mov
cli
sbb
loop
scas
ja
mov
xchg
setbe
cmpsl
pop
ror
negl
push
lock
jnp
mov
fucomip
push
adc
xor
sbb
je
icebp
mov
inc
add
inc
stc
adc
int
cmpsb
xchg
xor
dec
adc
mov
mov
cmc
jle
sbb
mov
fdivrl
stc
mov
pop
mov
lret
xorb
jl
xchg
mov
pop
fs
popa
cmp
xchg
push
outsb
cmpsb
cmpl
lds
cmpsl
aas
das
sub
and
and
lcall
mov
mov
adc
arpl
jns
mov
pop
xor
inc
cmpsb
test
sub
adc
imul
mov
ds
insb
adc
rcrl
fidivrs
stos
lods
mov
movsb
inc
std
or
mov
clc
pusha
mov
xlat
into
repz
repz
loop
mov
mov
in
add
mov
add
fnsave
ret
inc
rorb
test
cmp
enter
push
fsubs
mov
test
imul
xlat
dec
imul
push
adc
sub
cmp
dec
iret
in
and
cmp
xchg
inc
mull
lods
push
fs
cmp
test
mov
ss
adc
mov
rcrl
mov
add
and
mov
sahf
arpl
xor
in
mov
sub
dec
lds
mov
inc
das
jg
es
mov
mov
mov
lahf
sbb
loopne
mov
push
jbe
sbb
je
scas
xchg
stos
cmp
or
xlat
imul
out
mov
sbb
fisubs
mov
xor
sbb
mov
std
out
in
orl
das
lret
push
pop
jo
pop
add
sbb
aas
shrb
add
xchg
jg
adcl
call
shll
jo
fsts
cmp
cmpsl
ds
cld
adc
aas
ja
xchg
adc
test
mov
aaa
dec
cs
mov
dec
jb
sub
or
mov
scas
adc
in
mov
pusha
std
or
lock
or
cmp
cltd
repz
fisttpl
test
mov
pop
add
ret
cltd
test
icebp
into
outsl
or
clc
lea
xchg
loopne
or
sbb
mov
mov
jl
or
sub
pushf
sarl
stc
inc
or
cmpsl
xlat
ds
ljmp
mov
xchg
push
adc
filds
jmp
sub
repnz
fcompl
push
pop
jo
mov
add
cmc
inc
faddl
aas
js
mov
sbbb
sub
pushf
mov
or
shrl
rcrb
or
daa
xchg
data16
push
call
insb
push
inc
repnz
mov
fisubrs
xchg
dec
fists
jno
lea
inc
cmp
mov
fsub
repnz
mov
jmp
push
lahf
cmpsl
lcall
js
mov
fidivrs
test
pop
jle
xor
jns
cmp
mov
sti
jne
or
dec
ret
cli
dec
adc
and
dec
arpl
pop
pushf
mov
rolb
fmul
xchg
mov
adc
rorb
mov
cmc
mov
repz
out
outsl
dec
jns
ret
mov
sub
jae
call
mov
sti
aad
andl
aad
ret
xchg
rcrl
mov
aas
aaa
aaa
test
push
push
aam
push
scas
ret
cmp
stc
daa
push
test
push
and
dec
xchg
aad
movsb
push
test
xchg
xchg
into
jae
jl
ror
mov
iret
imul
insl
sub
add
xor
fisubl
or
and
xor
adc
xor
data16
mov
repnz
andb
sarl
pop
sub
in
fsubrl
ds
xlat
jnp
fcmovb
mov
mov
icebp
int3
out
insb
sbb
jne
shrl
jg
das
lret
pop
aad
push
int
cmp
loope
jb
sub
cmpsb
jle
pop
in
cmpsb
pop
aam
loope
jb
pop
dec
mov
lods
sub
ja
or
adc
push
cmp
inc
xor
fmuls
jecxz
lret
fcompl
les
stc
vpmacsdql
and
rol
int
addl
sbb
icebp
lods
or
mov
inc
xchg
clc
and
leave
out
ficoml
cmpsl
insb
dec
xchg
jg
mov
mov
into
inc
mov
jnp
and
add
into
in
dec
mov
jecxz
fisttps
inc
cld
lahf
scas
inc
mov
jno
insb
les
xor
or
sbb
inc
aam
jge
jno
inc
mov
test
aam
jne
in
test
pop
push
imul
fwait
enter
daa
xlat
xchg
push
cmp
rcl
stc
daa
mov
les
add
test
xor
pop
cmp
jle
inc
add
mov
xchg
cld
push
lods
push
inc
pop
decb
add
jle
and
aas
jo
sahf
xchg
popf
add
jle
dec
iret
int
xchg
mov
jns
mov
jp
lds
sbb
xor
out
in
out
pop
mov
mov
out
or
lods
aaa
aad
shrb
jae
xchg
sti
jae
and
cmp
jb
aad
cltd
or
das
fidivrs
bound
push
shl
sub
sbb
bt
or
inc
out
js
je
cmc
push
test
lret
pusha
inc
push
and
cmc
repnz
mov
xlat
pop
test
push
lods
arpl
mov
adcl
adc
xor
bound
pusha
jae
push
mov
stos
mov
mov
push
adc
sti
adc
xchg
mov
in
mov
pop
jge
sub
mov
pusha
adc
xchg
pop
or
xor
mov
loop
dec
pop
jo
mov
test
jns
dec
xchg
sbb
mov
loope
xchg
pop
scas
enter
out
fxch
ror
fcompl
push
dec
outsb
in
imul
xchg
pop
cmp
repnz
push
sub
fldenv
mov
xor
cs
loopne
mov
jb
out
push
jns
or
cld
pop
ja
xchg
aas
out
out
shll
mov
mov
ret
shlb
sub
cmc
icebp
pop
and
cmp
sub
jle
dec
out
sub
fs
add
and
popf
push
sub
dec
add
inc
mov
icebp
cmp
xchg
test
dec
inc
lds
dec
int
and
and
adc
xchg
popa
call
aaa
add
xor
and
leave
nop
adc
and
push
fnsave
mov
jmp
icebp
or
lock
shr
jnp
popf
insb
push
inc
inc
lds
mov
das
movsb
xchg
mov
sbb
lds
mov
es
repz
sub
pop
ss
sub
jae
js
sti
mov
sub
sti
repnz
add
inc
stos
pop
push
xor
lock
mov
adc
shll
sti
xchg
pop
xor
frstor
in
cwtl
jnp
mov
pop
mov
or
mov
jb
out
and
outsb
push
arpl
les
add
sbb
inc
inc
addl
add
sbb
fs
test
gs
dec
sub
adc
xchg
fstpt
xorb
imul
ja
cltd
cmpl
es
cltd
ds
fsubrl
push
ffreep
cmp
ss
stos
lahf
pop
cltd
or
adc
dec
icebp
cmp
mov
adc
repz
pop
in
in
mov
out
pushf
or
mov
shlb
loope
outsl
xor
mov
loop
fdiv
dec
push
and
inc
xchg
xchg
add
pop
cmp
lahf
out
xchg
xor
out
popa
sbb
scas
stos
push
or
sub
fbstp
push
add
stos
push
fidivrs
stc
push
cmc
fidivs
fwait
inc
adc
adc
rorl
inc
add
push
sbb
loop
push
add
shrl
xchg
int
jb
cld
daa
rorb
pop
mov
repnz
fadds
into
push
fcomps
gs
add
xchg
sbb
ja,pt
hlt
ss
test
xor
pop
push
bound
adc
out
push
push
mov
mov
push
cli
rcrb
push
ret
test
rcr
pop
call
and
ret
div
pop
mov
ret
and
xor
fistpl
mov
xchg
dec
pop
dec
add
iret
xchg
mov
sahf
push
adcl
push
fldl
mov
adc
and
frstor
mov
xchg
sub
loopne
mov
push
sbb
sbb
dec
fistpl
scas
fsubl
cmp
jae
dec
mov
clc
jle
in
or
adc
jl
cmp
loopne
je
adc
sub
addb
mov
lret
addr16
jle
xchg
dec
sahf
enter
das
jecxz
fcmovne
enter
mov
mov
insb
std
sahf
add
std
mov
pushf
iret
adc
dec
jge
push
push
scas
jge
mov
int3
call
andl
jnp
jno
lret
ljmp
jnp
jmp
out
inc
sbb
das
loope
jecxz
rorb
jp
in
mov
ret
xor
dec
shrl
dec
or
std
sub
outsl
outsl
jecxz
call
add
orl
test
clc
push
inc
pop
rol
pushw
stos
xor
pop
adc
or
adc
mov
push
lret
cmp
ret
std
xorb
test
inc
jae
das
push
cmp
push
inc
sub
adc
mov
cmc
aas
sub
inc
and
mov
mov
jo
jno
pusha
loopne
sub
or
adc
or
xchg
aas
rolb
jnp
or
xor
adcl
xchg
pop
or
lds
decb
cmpsl
inc
outsb
jns
xchg
arpl
cmp
in
mov
adc
adcl
int
xor
lret
mov
scas
rcrb
mov
xor
mov
dec
adcl
inc
cld
jg
sarb
inc
popa
push
push
xor
and
dec
dec
mov
fldl
scas
lret
lea
test
sub
cmp
push
push
add
iret
inc
sub
sbb
jnp
xchg
jle
shll
xchg
xor
rclb
xchg
adc
mov
addr16
mov
stc
inc
scas
lock
leave
jo
shlb
mov
sbb
jae
mov
sub
repnz
cmc
jge
fstl
jmp
jbe
add
aam
add
fnsave
outsb
in
fwait
xor
push
int3
icebp
xlat
mov
and
pop
les
and
sbb
and
aad
sub
out
add
dec
lea
push
sub
cli
mov
adc
std
imul
cli
jne
push
pop
or
les
and
adc
xchg
lcall
fisttpll
es
jmp
jns
in
push
and
rol
adc
lods
push
loopne
jmp
dec
lock
clc
mov
hlt
das
or
pop
add
inc
ljmp
bound
push
mov
loop
pop
adc
and
mov
test
lea
mov
arpl
int3
ljmp
ret
sbb
sbb
push
loopne
push
add
pop
sub
test
add
dec
shrb
push
push
fs
push
sbbl
push
out
jnp
inc
shlb
sbb
sub
jle
mov
faddl
jns
and
mov
addr16
adc
push
cmp
sub
push
or
and
mov
bound
sub
fidivl
and
jnp
push
adcb
push
add
lcall
jecxz
or
stc
aad
add
add
lds
jae
es
ds
cmpsb
jecxz
or
cmc
lcall
mov
pop
sub
lret
adc
push
push
lret
sbb
dec
fwait
inc
lret
push
xchg
mov
jecxz
inc
fs
movl
mov
imul
xchg
in
mov
sbb
inc
xor
stos
lret
mov
ffree
pop
push
in
lock
push
xor
int3
mov
and
pop
pop
adc
cmp
orl
test
mul
das
mov
loope
inc
and
mov
and
sub
movsl
pop
jg
sbb
ds
std
stos
xor
push
stos
dec
dec
fstl
xor
push
jecxz
mov
out
cli
xchg
dec
cwtl
xlat
dec
popa
cwtl
das
mov
jg
scas
pop
adc
pop
or
push
push
jmp
pop
lods
pop
xchg
test
das
ja
aaa
or
inc
mov
dec
in
xor
mov
push
cmp
dec
add
dec
scas
loopne
es
ret
mov
dec
cmp
es
cmpsl
imul
leave
jb
push
iret
and
or
mulb
divl
fstpl
sbb
add
jecxz
mov
rcll
adc
push
repnz
sbb
cwtl
fwait
or
ret
adc
lock
lahf
inc
ss
fisttps
xchg
and
dec
pop
xor
test
xchg
loope
fistps
cmp
lods
or
and
shlb
or
or
in
sarl
flds
xchg
mov
pop
lahf
mov
rorl
jl
pop
xchg
insb
or
shll
scas
sbbl
cmp
push
push
cmpsl
out
out
inc
and
popf
inc
es
iret
add
cltd
fiadds
push
ret
add
mov
pusha
cmpl
sbb
push
int
mul
adc
and
dec
pop
dec
jo
rol
ds
adc
xchg
xchg
in
stc
sbb
sub
sti
mov
cmpsl
pop
bound
add
jnp
fistpl
push
cmp
push
insl
push
mov
lahf
gs
inc
dec
push
cmpsb
sbb
loope
or
out
test
mov
aaa
push
lahf
add
mov
jg
dec
sub
jne
das
mov
xchg
scas
adc
mov
adc
xor
and
loopne
sub
sub
xlat
cmpb
fld
dec
stos
test
mov
andl
push
adc
cmpsb
pushf
je
call
jecxz
fildl
pop
xchg
adc
lahf
pop
cmpsb
cld
call
lret
fwait
mov
aas
jb
dec
shll
mov
mov
sub
or
test
sub
repnz
push
and
fnsave
xor
sub
lahf
xchg
xlat
das
in
xor
fcmovu
push
mov
pop
out
mov
mov
addr16
es
or
cmp
mov
sub
mov
or
mov
mov
cmp
sbb
xor
ret
cmp
test
sti
lahf
jp
push
mov
mov
scas
add
sahf
ljmp
sub
sarl
lock
aad
adc
cmp
lods
aam
cmp
push
add
mov
bound
imul
jmp
scas
mov
xor
fisubs
out
mov
adc
push
iret
pop
and
xor
jae
rolb
push
mov
cmp
pop
in
jns
lahf
ret
jo
jns
dec
cmp
lds
stc
adc
fidivrl
xor
mov
sub
popa
aad
mov
testb
cmpl
dec
pop
hlt
arpl
sbb
xor
cmp
ret
shrb
icebp
lods
add
push
push
or
out
sub
push
xor
test
push
push
and
frstors
rep
and
or
test
pop
negb
push
sub
add
pop
mov
mov
ja
je
in
mov
fwait
ljmp
jns
pop
int3
fnstenv
jmp
mov
in
lret
js
cmp
loope
jge
fistl
inc
add
jb
fistpll
add
sti
dec
add
iret
push
mov
pop
jae
add
cs
jg
insl
adc
es
xor
cmpsb
in
ret
or
xchg
dec
stos
pop
cmp
sahf
mov
mov
in
fstps
imul
mov
daa
mov
dec
and
std
and
mov
aas
fwait
jl
inc
push
cmp
dec
or
mov
dec
pcmpgtb
cmpsb
mov
mov
pop
push
aam
cwtl
jbe
and
push
test
inc
push
and
lahf
out
rcr
and
jmp
loopne
cld
addr16
pop
test
loop
jb
es
and
or
push
sahf
adc
pop
inc
jge
cmp
xchg
push
cmp
int
mov
stc
roll
lahf
mov
popf
jns
or
xchg
xchg
into
cs
movsl
fcompl
sub
cmp
lods
popa
pop
mov
gs
cmpsb
or
dec
cmp
insl
xchg
pop
sbb
xlat
fistps
mov
jl
outsl
int3
add
jg
dec
call
je
rorb
push
mov
jae
mov
mov
out
lahf
flds
popf
sbb
dec
pop
dec
fmul
pop
aas
outsl
bound
add
jo
movsl
xchg
mov
aad
pop
mov
ret
popa
stc
dec
or
or
and
imul
push
mov
adc
push
jp
sub
or
and
incl
add
inc
andl
shlb
scas
mov
arpl
test
xor
cmpsb
stc
mov
inc
fdivr
aam
jne
aas
push
inc
dec
xor
xchg
idivl
ja
enter
mov
xchg
shll
shlb
add
xchg
orb
push
cmc
jg
testb
mov
pop
mov
or
adc
les
sbb
sub
xchg
hlt
xchg
movsb
add
test
dec
rclb
mov
mov
mov
push
jae
sbb
aad
ljmp
scas
lock
or
inc
inc
dec
gs
pop
xor
push
add
divb
xchg
movsb
sti
je
pop
mov
iret
jo
cmpl
bound
pop
xor
pop
dec
das
xlat
das
push
xchg
pushf
sub
jp
or
popa
clc
and
add
repnz
insl
out
mov
jg
loop
mov
or
xor
loope
cmp
outsl
sbb
lret
imul
adc
cs
mov
icebp
aam
xor
sub
cmc
cmp
rorl
dec
or
adc
popa
xchg
cmp
aad
jae
and
mov
push
das
fisttpl
push
ljmp
jnp
pop
enter
xor
jns
or
xchg
and
lods
ljmp
mov
mov
ja
adc
jecxz
mov
add
popf
pop
aad
je
mov
jb
leave
lcall
mov
dec
arpl
adc
sbb
in
xor
filds
into
fisttpl
mov
dec
sbb
sub
adc
stc
add
stc
pop
inc
pusha
pop
lock
xor
sub
stos
sti
or
dec
sub
xchg
lret
ja
xor
cmpsl
movsl
lea
mov
xor
or
mov
push
wbinvd
push
or
inc
cmp
add
mov
inc
movsl
or
and
aam
mov
xor
add
or
xlat
ss
and
loopne
fldl
mov
sub
jmp
insl
insb
movsl
shll
mov
pop
rcl
and
xchg
cmpl
mov
add
pop
xor
ljmp
mov
mov
mov
cmp
mov
pop
cmp
and
or
fisttpl
or
adc
push
stos
cmc
dec
in
and
jg
xor
and
enter
ja
cmp
rcrl
pop
iret
add
cmp
and
push
fs
mov
pop
insl
test
jae
js
mov
sbb
jmp
ret
mov
cs
lahf
popa
pusha
fwait
cmp
push
lds
mov
out
cmp
out
gs
enter
enter
imul
mov
xchg
and
outsb
ret
jno
mov
xchg
or
ret
adc
cmp
lret
adc
push
xlat
push
iret
out
sbb
rcr
pop
sub
cmpsb
mul
cmc
out
mov
mull
outsl
shrb
mov
or
inc
in
mov
sbb
dec
xchg
sbb
push
aam
pushf
movsb
push
loop
xor
call
cmp
mov
xchg
cmpsb
or
in
test
add
cld
mul
jnp
sarl
sbb
shrl
add
and
test
out
jp
popf
jp
adc
lahf
sub
adc
xor
mov
push
addr16
ds
mov
pop
adc
mov
les
pusha
adc
lock
inc
pop
js
inc
add
cmpsl
xchg
scas
mov
mov
pop
mov
mov
mov
and
loope
mov
sub
repz
dec
adc
hlt
out
subb
cmp
push
push
fdivs
call
jb
sbb
push
or
pop
cmpsb
xchg
inc
incl
adc
fcompl
cmp
jg
ficomps
stos
or
pop
pop
cwtl
adcb
pop
jbe
add
and
repnz
jns
ljmp
pop
sarb
fiaddl
mov
int
xchg
stos
ljmp
pop
jg
sbb
and
movsl
add
inc
lret
push
stos
sub
xchg
sarl
push
inc
pushf
loopnew
lods
jbe
cmpsb
ljmp
jp
cmpsb
mov
or
push
inc
sub
dec
push
and
mov
jge
push
jg
mov
adc
or
dec
scas
cmp
mov
mov
mov
or
ret
lea
rorb
out
pop
cmp
sub
iret
add
mov
or
mov
pop
or
dec
cmpsb
rcrl
inc
in
les
pop
dec
jge
stc
xchg
cli
js
add
cmpsl
jo
mov
not
xor
dec
dec
out
push
aas
fmul
cmp
int3
fildl
xchg
inc
xchg
ljmp
jp
iret
rcrl
sbb
rorl
push
adc
test
cld
dec
adc
call
mov
faddp
out
les
mov
test
and
stos
enter
sbb
pop
pushf
pop
fs
sbb
mov
add
xchg
clc
adc
inc
clc
and
and
fs
xor
nop
ljmp
test
mov
bnd
xor
out
test
dec
xor
repnz
pop
inc
imul
push
cli
dec
adc
cmp
aad
xor
inc
xchg
xchg
jnp
out
mov
fistpll
in
xchg
mov
add
adc
test
cmp
js
mov
pop
ret
dec
xchg
lea
test
xchg
lods
jmp
ja
repz
sub
mov
mov
adc
adc
std
push
push
push
sbb
xor
addb
sub
sbb
movsl
dec
lret
or
push
dec
test
and
test
fldl
sbb
out
push
adc
sahf
xor
add
jmp
cmp
and
xchg
das
das
push
clc
js
or
adc
lret
mov
add
xor
xchg
dec
mov
in
mov
mov
addr16
inc
ficoml
mov
shlb
mov
mov
ss
xor
data16
les
fsts
add
stos
cs
xchg
andb
add
pop
mov
mov
cmp
mov
inc
clc
fldl
cli
lret
std
inc
lret
mov
inc
into
rclb
cmpsb
sub
xchg
mov
fiadds
lret
jp
pop
xchg
jle
pop
cmp
sbb
repz
in
fmull
xchg
out
mov
xchg
rcl
sub
data16
in
pushf
dec
or
mov
mov
mov
icebp
divb
push
or
ja
xchg
push
cmp
push
daa
scas
repz
std
xor
pop
test
jae
mov
out
sarb
cmp
pop
divl
outsl
xchg
sub
mov
or
mov
sbb
lret
dec
adc
cmp
dec
fistpll
sbb
add
cmp
sbb
mov
xlat
xor
dec
fdivrl
push
fwait
add
mov
outsb
fiadds
iret
push
push
aam
jp
cli
shrl
fdivrl
pushf
add
mov
xchg
xor
lret
ja
sbb
dec
or
adc
iret
dec
dec
bound
rolb
inc
add
and
fldcw
inc
inc
icebp
scas
cmc
addr16
scas
imul
or
cmp
or
test
psubsw
inc
test
in
mov
lahf
jbe
mov
or
int
jns
cmp
shll
sahf
pop
sub
dec
push
push
sbb
sahf
push
sub
mov
xor
je
sbbl
out
sarb
loopne
outsl
std
mov
jl
pop
push
push
xchg
loop
xchg
fsubs
jl
lar
sbb
cmp
inc
lret
dec
dec
pushf
jb
cmpl
mov
dec
scas
in
shll
dec
test
test
sti
std
icebp
out
imul
sti
lods
in
test
xchg
daa
pop
xchg
xor
sahf
out
stc
xor
mov
xor
jl
imul
lret
inc
push
inc
adc
push
test
sub
push
jecxz
push
mov
xor
ds
mov
fs
fsts
jp
adc
call
subb
adc
bound
arpl
fdiv
push
add
mov
testl
addr16
movsb
jnp
testb
lcall
inc
mov
dec
aaa
pop
pop
sbbb
mov
push
or
aad
mov
mov
pop
dec
inc
test
fisubl
push
lods
dec
repz
movsb
xor
das
test
xor
out
shrb
sub
sub
test
test
mov
xchg
aas
jb
pop
push
mov
repnz
jecxz
loopne
sub
jle
lahf
enter
scas
xchg
mov
dec
jg
xchg
cmp
insl
insb
fildll
mov
jne
xchg
sbb
lret
mov
icebp
mov
lock
int
jnp
jbe
xchg
mov
int3
sarl
scas
xorb
xchg
data16
adc
mov
ja
test
dec
fs
jl
stos
mov
leave
pop
jbe
dec
adc
push
test
je
rcl
in
adc
iret
and
push
test
or
jae
fcomi
cmpb
out
scas
sbb
jne
push
fwait
cmp
aas
and
rolb
mov
insl
mov
dec
jae
inc
add
ficompl
cmc
mov
in
sub
push
add
sbb
test
lods
iret
pop
in
je
cmp
xchg
lods
mov
mov
or
mov
divl
stos
lret
sar
or
shrb
mov
mov
inc
insb
sub
std
fstl
mov
lahf
insl
or
ret
scas
sub
das
push
testb
test
xor
or
jp
ficomps
push
cwtl
enter
in
fbld
stos
fbstp
clc
sbb
paddsw
cmp
outsb
jle
push
rorb
push
push
stc
pop
out
xorb
fcomps
out
sbb
add
fisttps
pop
insb
jno
xchg
pavgw
push
in
out
mov
enter
mov
sub
hlt
test
xorl
and
xchg
adc
xchg
inc
sub
cmpsl
dec
xor
pop
inc
and
dec
mov
data16
stc
xor
cmp
lea
mov
jo
sbb
cli
and
mov
mov
mov
test
sub
and
inc
xchg
or
jg
adc
mov
stos
addb
lods
test
xchg
dec
movsb
out
adc
mov
and
inc
or
xchg
loop
lods
xchg
inc
bound
lret
mov
cwtl
or
cmpsl
scas
mov
cmp
sti
outsl
out
cmp
ret
psrlq
in
sahf
add
mov
or
mov
or
push
das
mov
inc
icebp
mov
xchg
js
lahf
sub
roll
andb
sahf
adc
jae
inc
stos
imul
repnz
jmp
pop
fistl
ljmp
or
add
imul
scas
outsb
getsec
popf
push
gs
and
fimuls
mov
push
dec
gs
xor
pop
orl
out
push
aaa
sub
cmp
dec
sub
cmpb
sub
mov
or
pop
cwtl
test
call
push
jge
mov
insb
xorb
inc
cwtl
xchg
cmpsl
xchg
adc
push
jl
mov
stos
inc
mov
ds
mov
data16
push
loope
xchg
push
popa
cmp
aam
cmpsl
lahf
imul
cmp
outsl
adc
dec
mov
xchg
jl
xor
inc
daa
lret
inc
divb
mov
clc
imul
xchg
cmpsb
rclb
lea
sub
lods
pop
and
shll
je
les
in
pop
cld
xchg
xchg
shlb
mov
movsb
mov
repnz
push
push
mov
fidivrl
call
push
add
jb
xorl
hlt
pop
call
mov
mov
lahf
call
sti
mov
pop
mov
ds
push
sub
loop
int
push
jnp
std
adc
jbe
push
mov
in
jmp
enter
icebp
mov
cmc
inc
repnz
cmp
iret
es
pop
ficoml
dec
mov
or
push
and
xchg
mov
cmc
mov
nop
jne
incb
imul
loop
jl
mov
jne
dec
add
aad
mov
repnz
cmp
push
adc
pushf
mov
mov
js
cmpsb
faddl
sub
sub
pop
loopne
inc
test
sub
jnp
sbb
ljmp
jae
jl
jg
xor
addr16
repz
stos
in
mov
mov
lcall
mov
or
push
sub
inc
pop
jecxz
push
push
scas
fsts
pop
js
dec
cli
sbb
data16
ds
mov
jb
inc
aam
push
int3
aad
repnz
aaa
jns
sub
push
jnp
js
pop
dec
mov
xchg
sub
mov
xlat
jo
movsb
repz
aad
pop
inc
mov
cs
popa
xor
movsl
ljmp
data16
sub
adc
out
dec
cltd
mov
push
jbe
inc
inc
out
xor
sub
adc
jmp
in
je
and
sbb
mov
fwait
add
ficoml
stc
stos
fs
ds
xchg
mov
dec
sahf
leave
adc
mov
cmc
dec
mov
stc
sub
movsb
cs
test
mov
mov
test
leave
scas
inc
setno
loop
sub
push
or
sub
push
lret
sbb
cs
mov
adc
mov
imul
rcrb
sbbl
cs
dec
mov
leave
dec
ljmp
pop
mov
lds
ja
push
hlt
std
gs
or
sahf
cmc
xchg
jbe
fidivs
outsb
pusha
dec
ja
fidivl
mov
jb
out
cmpsb
xchg
ret
enter
lods
and
aaa
enter
test
mov
push
pushf
jo
out
add
stc
cmp
mov
js
pop
sbb
lahf
push
mov
nop
or
inc
subb
xchg
jne
inc
scas
jne
jb
rorl
or
pop
ret
addr16
js
lock
add
fs
sub
mov
ret
imul
cmc
loop
mov
mov
inc
es
jb
arpl
sub
pop
in
mov
cmp
add
pusha
xor
enter
jl
add
xchg
das
sub
je
xchg
cwtl
push
hlt
jmp
outsb
dec
xor
jo
jmp
dec
push
negb
rcrb
shrb
push
add
negl
mov
mov
mov
test
inc
dec
lock
and
nop
jne
out
inc
hlt
mov
dec
jne
movsl
inc
rorb
pop
jle
mov
lahf
xor
fcmovnu
mov
or
and
stos
test
sbb
out
jb
ds
sub
cmp
mov
into
xchg
sbb
pop
add
pop
or
lret
mov
inc
aad
pusha
push
in
or
push
ficoms
jnp,pn
test
cmp
leave
rol
pop
inc
push
cmc
cmp
cmp
dec
fwait
jp
pop
int3
adc
repz
pop
cmp
mov
out
or
add
lret
ret
ret
lret
cmp
roll
sbbl
xchg
jmp
mulb
ss
shrl
cmp
out
xchg
inc
fsubr
xchg
and
pop
cld
gs
mov
jg
jmp
jnp
sti
in
xor
mov
test
mov
and
sub
icebp
sub
js
pusha
push
adc
inc
fcmovu
sbb
or
jbe
or
loope
mov
bound
mov
add
inc
add
imul
xchg
xchg
imul
xor
les
outsb
jg
pop
cld
ljmp
dec
lock
out
rcll
xor
sub
iret
push
fstps
aas
sbb
xchg
cmp
sbb
je
imulb
imul
mov
sbb
fsubrs
push
xchg
iret
cmp
mov
aas
add
or
rclb
mov
std
pusha
addr16
sub
leave
sub
jns
stos
movsl
arpl
testl
jl
outsb
ljmp
pusha
xchg
aaa
clc
leave
je
cwtl
sbb
into
neg
xor
jmp
mov
in
mov
xchg
sub
mul
es
addr16
sbb
loope
test
dec
daa
pop
and
xchg
fwait
shlb
cmp
fisubrs
jge
testb
cld
mov
pop
scas
stos
push
sbb
dec
mov
inc
shll
mov
lcall
nop
xor
lea
cwtl
push
fidivl
add
lret
jecxz
stc
dec
outsl
pop
mov
pusha
test
dec
in
lea
cmp
shrb
xchg
das
sbb
push
sarl
clc
into
sub
pop
sti
cmp
out
les
adc
or
dec
popf
jl
mov
push
mov
adc
data16
push
sub
cmpsb
mov
sbb
sub
lods
insb
cmpsb
movsl
inc
rorl
insb
push
mov
mov
aad
lret
lcall
xchg
dec
or
pop
std
int3
or
fwait
stos
jp
inc
andb
movsl
jge
setnp
fdivl
movsl
outsl
cmp
pushf
sub
adc
enter
xor
xor
mov
iret
leave
xchg
das
jecxz
stos
ret
arpl
push
outsl
je
lahf
jg
nop
leave
outsb
sti
push
dec
insl
vcvtss2si
xchg
cs
and
inc
mov
mov
push
sub
add
mul
aam
mov
push
sub
out
adc
cmp
sub
mov
inc
data16
or
xchg
fucomi
jmp
xor
sarl
jle
cmpsl
push
xchg
adc
cli
call
std
mov
mov
and
sub
fsubl
or
popf
mov
or
add
mov
lahf
ja
pop
and
dec
sub
push
or
leave
inc
pusha
sbb
inc
lret
and
test
lret
cltd
test
or
inc
push
shr
or
pop
mov
push
xchg
dec
mov
cs
adc
test
jmp
sub
ds
nop
adcl
std
push
xchg
pushf
dec
adc
dec
inc
add
call
dec
push
sbbl
dec
mov
sub
sti
out
cmp
fistpll
push
js
scas
test
xor
jb
daa
fstpl
or
lea
mov
dec
pop
arpl
push
loope
xchg
shl
jge
jecxz
dec
cltd
mov
rcrb
bound
pop
popf
mov
mov
sarl
mov
mov
add
mov
push
loopne
xor
daa
sbb
in
enter
into
push
and
cmp
lods
xor
dec
loopne
jmp
add
add
das
into
aaa
adc
pop
xor
mov
sbb
js
dec
repz
xchg
nop
aam
leave
js
inc
sub
gs
mov
mov
fs
mov
rcr
or
inc
js
lods
out
dec
out
test
push
dec
pop
or
mov
flds
mov
mov
jbe
inc
add
cmpsl
inc
pop
adc
cmpsb
fildll
xor
push
sub
add
arpl
popa
dec
add
cmp
sti
std
sbb
jmp
out
xor
ficomps
fstpl
mov
mov
hlt
dec
push
gs
xchg
and
in
ds
int
mov
xchg
pop
mulb
fs
out
pop
cltd
mov
and
shll
fstl
xchg
and
test
fildl
mov
push
loope
sbb
insl
or
xchg
add
sbb
imul
repz
sbb
movsl
pushl
fdivrs
in
cmp
andl
shlb
mov
cmpxchg
cld
adc
test
pop
jnp
push
xchg
cmc
cld
mov
dec
lret
test
pusha
xor
sub
sbb
cmpb
mov
sti
pop
and
xchg
jl
add
push
xchg
pop
push
lret
in
mov
test
inc
add
ja
or
je
add
pop
adc
inc
xor
and
enter
stos
xchg
sub
mov
and
dec
test
and
pop
ret
int
lcall
and
cmp
out
push
stc
stc
fisttpl
arpl
mov
test
test
sti
sbb
mov
movsl
and
ja
xorl
jge,pn
lcall
out
push
xchg
addr16
dec
aad
mulb
shrl
jno
sbb
cmp
pop
ret
aaa
dec
mov
jns
mov
imul
mov
in
mov
xor
xchg
int3
cmpsl
mov
pushf
bswap
push
xchg
inc
xor
jmp
rcrb
dec
test
call
out
fistpl
sub
cmp
sbb
sbb
sub
scas
or
pop
inc
int
xchg
data16
add
icebp
lds
in
add
bound
mov
and
mov
or
jecxz
xchg
clc
dec
cltd
cmp
mov
mov
fisubl
push
repnz
test
mov
mov
out
stos
mov
jl
xchg
cmp
stos
xor
imul
push
xchg
pop
push
mov
imul
fsubr
pmulhuw
and
push
outsb
mov
ja
ret
rorl
xchg
lret
cld
fwait
lret
cs
lret
jb
outsb
loope
xor
or
xchg
xchg
addr16
push
fdivrs
loope
fmulp
rorb
mov
aas
clc
adc
sbb
das
adc
cwtl
add
pop
xor
leave
push
mov
push
mov
dec
repz
xchg
inc
mov
repz
or
stos
rclb
daa
inc
fsubrs
push
xadd
mov
sub
xchg
les
rclb
xchg
scas
test
push
ret
repnz
pop
push
int3
and
fisttpll
lcall
cld
mov
in
ret
fidivrl
pop
push
add
xor
stc
lds
mov
imul
fwait
jo
inc
adcb
lock
stos
xchg
shrb
jge
inc
cli
aas
mov
mov
imul
aaa
cli
ret
xchg
fsub
iret
cwtl
xor
sbb
sahf
outsb
push
xchg
pushf
insl
adc
call
in
bound
fisubl
and
xchg
cmp
sahf
jg
lock
fstpt
or
adc
ljmp
sub
mov
adc
ret
fdiv
into
in
out
addr16
gs
sub
dec
fisttpll
lods
mov
sub
push
sti
pop
ja
or
mov
push
sbb
xchg
ret
push
mov
mov
or
pop
adc
cmc
add
ja
hlt
lods
inc
stos
sti
jecxz,pn
sbb
cltd
or
enter
imul
icebp
dec
push
das
lods
es
in
add
adc
fisubrl
pusha
imull
daa
pop
lret
jl
imul
aad
push
sbb
test
push
xor
pop
adc
mov
and
stos
cli
pushf
and
jae
lahf
mov
in
push
mov
jecxz
pop
imul
and
sub
icebp
cmp
cmp
insb
adc
cli
test
notb
mov
push
sbb
out
adc
loop
cmp
rcrb
imul
jo
xchg
in
push
pop
mov
fs
clc
xor
mov
cltd
repz
adc
push
fimuls
je
js
and
ds
out
pop
or
jp
or
push
mov
mov
fwait
imul
sti
rolb
push
out
mov
pop
lods
pop
ficompl
mov
mov
aam
outsl
adc
sbb
mov
jno
dec
mov
cmp
sub
add
xchg
loopne
jns
pop
jnp
fiaddl
pop
cmp
push
jge
mov
out
daa
rep
movsb
pop
aam
jge
jns
mov
sub
cmp
xor
mov
xlat
dec
dec
pop
ljmp
loope
mov
pop
rorl
repnz
or
push
mov
andb
jmp
inc
mov
adc
jp
add
and
je
fnstenv
rol
scas
scas
movsbl
fbld
push
sahf
in
mov
in
and
shrl
icebp
pop
push
xor
shrl
or
and
pop
dec
nop
sbb
cmp
push
mov
push
orl
popf
lock
fdivrs
scas
test
sbb
xor
bound
and
popa
cmp
dec
mov
je
mov
icebp
arpl
push
or
stc
stos
lcall
sub
cmp
sub
inc
mov
dec
cmpsb
out
xchg
xlat
loopne
les
loop
dec
and
pop
sub
test
inc
repnz
imul
cmp
loope
push
mov
mov
mov
pop
sbb
add
push
test
leave
inc
in
std
fcomps
push
mov
jl
ljmp
lock
xchg
sbb
pop
mov
into
sbb
jle
and
lret
out
and
sub
scas
mov
adc
add
or
xor
sti
rorl
sub
push
negl
sbb
cmp
sub
ret
insb
sub
loope
ss
push
daa
xchg
jl
int
shlb
test
faddl
cli
adc
hlt
lcall
in
inc
mov
or
xchg
and
or
idiv
rorl
outsb
dec
aad
mov
arpl
jne
jge
aad
xlat
or
loope
das
xor
mov
outsl
leave
mov
test
jns
int
mov
ljmp
js
das
lds
cld
imul
pop
pop
aad
pop
pop
mov
dec
push
cmp
mov
shll
jp
mov
lcall
hlt
mov
ss
adc
mov
hlt
and
iret
js
xchg
xchg
lods
loope
push
dec
aad
cmp
dec
dec
cmpl
mov
lret
fistl
dec
pop
and
cmpsb
icebp
shrl
add
push
pop
aaa
mov
addl
pop
mov
pusha
ret
fistl
loop
fsubrl
sahf
mov
call
test
jecxz
aaa
into
mov
adcl
test
lret
sub
add
repnz
or
mov
pop
dec
aaa
ja
and
dec
int3
xor
mov
xchg
cltd
lahf
xchg
and
fwait
lahf
and
sbb
mov
in
cmpsb
call
cli
mov
push
aaa
daa
lret
in
stos
xchg
arpl
scas
out
icebp
xor
pop
jne
shl
fsubs
popf
cmpb
xor
jmp
sbb
repnz
not
stc
sub
jmp
cmp
push
int
ret
mov
nop
mov
adc
jae
test
sbb
jo
add
shll
xchg
sbb
lods
lahf
xchg
mov
sysexit
scas
pusha
pusha
mov
xchg
lret
jbe
mov
add
repz
or
sbb
pop
fbstp
dec
cmp
mov
xchg
xor
dec
cmpsb
out
cmp
xchg
sti
inc
push
adc
fs
cmp
inc
push
dec
push
adcl
cmc
cmp
cli
cmp
add
dec
inc
sub
or
addb
hlt
test
loop
pop
mov
lds
mov
and
bound
cmp
into
addl
adc
imulb
push
adc
mov
daa
xchg
movsl
repnz
enter
lods
xor
jo
cmpsb
fsubl
in
adc
mov
shrb
call
lock
enter
inc
pop
lcall
mov
loope
sarl
scas
lret
mov
push
mov
daa
sub
sub
test
cmp
sub
dec
repz
popf
xor
int
or
repz
hlt
mov
or
or
xor
add
add
test
cmp
in
cmpl
or
fmull
jne
mov
mov
bound
arpl
or
mov
and
sub
sbb
sub
cmp
lret
test
dec
or
daa
int
push
ret
xor
popa
and
mov
addb
jo
clc
pop
pop
bound
es
push
xchg
mov
aad
pop
hlt
pop
fwait
mov
jno
mov
push
jae
mov
aam
push
jp
adc
sub
xor
jecxz
jo
aad
fildl
stos
arpl
sub
pop
xchg
mov
xchg
imul
xorl
ds
push
jge
pop
xor
fisubs
jne
subb
jle
pop
dec
xorb
lods
ljmp
out
je
cmp
push
xlat
dec
cmpsb
jnp
mov
jbe
fldcw
test
cltd
jns
adc
xchg
fwait
lock
lahf
pop
sub
or
fbstp
lods
push
mov
in
lret
negl
cmp
mov
arpl
lcall
bt
mov
xchg
int
cwtl
add
dec
jno
xchg
sarb
add
push
xchg
imul
test
mov
aas
sbb
ja
cli
lahf
xchg
loop
ret
add
bound
or
and
sub
mov
inc
int3
push
jns
rorb
jae
mov
adc
in
leave
jmp
or
inc
mov
add
xchg
inc
sahf
loop
adc
scas
dec
add
mov
int
aas
and
ja
pop
nop
xchg
testl
xor
rcrb
and
shll
mov
movsb
dec
dec
repz
add
inc
popf
loopne
adc
rclb
mov
add
dec
cmp
or
add
popa
dec
ljmp
fs
les
xlat
xor
xor
bound
jmp
add
or
sub
ss
mov
stc
adc
xor
stc
iret
int
pop
repz
fdiv
hlt
adc
mov
or
es
aaa
cli
sbb
fwait
pop
or
mov
cmpsb
sarl
pop
mov
xor
filds
pop
mov
fstpt
sbb
add
dec
pop
jbe
aas
insl
xor
sbbb
pop
subl
aas
or
xorl
pop
jo
cs
in
jecxz
push
ds
out
add
stc
pop
inc
cmp
leave
es
les
cld
cmp
jno
mov
adc
js
mov
push
adc
icebp
mov
xlat
xor
push
inc
push
cwtl
in
xor
cs
rcr
lea
jmp
ret
mov
inc
out
out
or
xchg
jp
mov
dec
jb
pop
popf
fadd
sar
std
pop
xchg
pushf
cmp
imul
or
adc
cwtd
bswap
in
lds
lahf
pop
incb
sbb
int
stos
sahf
mov
jb
std
hlt
and
and
aas
sub
or
cld
clc
mov
sub
sbb
sahf
jl
aas
adc
nop
aam
andl
jp
rcll
repnz
or
jo
daa
sbb
aaa
and
ja
out
xor
pop
cwtl
test
movsl
xchg
scas
push
iret
sarl
dec
jb
popa
mov
xchg
fidivs
cmp
cmp
adc
push
sub
xchg
inc
ds
push
leave
and
ret
mov
jne
enter
pop
inc
mov
les
lahf
jne
lods
dec
iret
mov
cmp
addr16
popa
pop
stc
loope
mov
ja
test
aaa
add
ret
jg
mov
fsubrl
adc
dec
jns
imul
mov
adc
sbb
pop
sbb
ret
push
add
outsb
imul
xor
fcompl
jecxz
leave
and
jae
inc
pop
outsl
mov
xchg
outsb
xor
jg
adc
dec
xchg
sbb
pushf
es
adc
push
mov
ret
mov
scas
or
ja
sbb
mov
dec
cwtl
lcall
push
mov
in
lods
test
sti
lahf
out
in
test
and
sbb
aam
jae
inc
loop
adc
scas
sub
push
pusha
fisttpll
notb
scas
pop
aam
mov
add
repz
mov
jo
dec
sub
xchg
scas
loope
imul
cmp
bound
jmp
xor
push
pop
cmc
jae
ja
stc
dec
cmp
xor
adcl
or
xchg
mov
in
scas
lret
push
arpl
mov
pop
sub
dec
lods
adc
fbstp
imul
cmp
js
sbb
nop
cs
int3
rcll
lahf
sbb
adc
push
jne
mov
hlt
pop
inc
add
movb
pop
movsl
add
clc
bndstx
cld
xor
push
push
rcll
pop
mov
cwtl
scas
add
mov
mov
std
in
cmp
and
cmp
jns
rcr
icebp
cli
adc
aam
pop
lret
orb
sub
stos
jmp
adc
and
sbb
subl
and
xchg
popf
frstor
insl
hlt
cmp
cld
dec
test
dec
das
jge
imul
add
leave
pop
negl
outsb
pop
jns
mov
lds
mov
mov
lods
add
push
adc
fcmovnb
fsubrp
repnz
dec
fisubrl
out
ret
negl
hlt
dec
icebp
insl
xorb
repnz
cmpsl
dec
in
aas
cli
push
test
inc
out
xor
data16
dec
bound
pop
or
jbe
sti
scas
enter
insb
cmp
cli
or
pop
pop
lds
mov
cmpsl
and
imul
pop
mov
xchg
push
sbb
call
test
test
jbe
in
sbb
nop
clc
xchg
nop
repnz
dec
dec
bound
inc
xchg
push
les
mov
lahf
mov
sub
insl
imul
xchg
sarl
jle
ret
ss
dec
outsl
lods
lea
lahf
jle
or
lock
xchg
pop
push
pop
andl
test
rcrb
inc
push
jmp
pop
ret
leave
xchg
pop
add
aaa
test
neg
lods
jno
push
inc
sahf
inc
lcall
dec
jge
or
imul
aaa
jbe
cltd
call
bound
xor
decb
mov
add
fs
jae
jle
dec
push
arpl
dec
xchg
dec
jno
cmp
and
dec
mov
in
xchg
ret
popa
jp
pop
aaa
fs
loopne
cltd
and
ja
pop
rcr
nop
xchg
lret
jmp
pop
xchg
sbb
dec
flds
repnz
outsb
ljmp
push
xchg
sbb
inc
cld
gs
push
addb
push
movsl
mov
pop
add
shrb
dec
mov
stos
out
xlat
jecxz
jg
add
in
dec
daa
or
xor
pop
mov
lahf
jmp
fstps
js
push
xlat
popf
repnz
jmp
repnz
icebp
sbb
jmp
rolb
sub
xor
test
inc
sub
sub
jge
mov
jmp
mov
xchg
call
cld
pop
jmp
xchg
iret
xor
push
sbb
and
jb
or
insb
inc
testl
std
pop
out
sub
xor
jmp
das
xchg
mov
aas
jne
ret
cmc
pop
roll
lahf
js
gs
xorb
test
adcb
scas
loop
push
adc
cld
mov
dec
sub
sbb
test
out
push
sbb
cltd
jmp
push
call
pop
imul
sbb
and
movsl
loope
in
push
out
inc
push
dec
xor
cmpsb
mov
adc
push
xchg
insl
mov
call
pop
dec
inc
sbb
es
sysret
incb
dec
cli
jp
push
aad
pop
pop
mov
movb
adc
pop
cmp
nop
pop
sbb
dec
push
stos
hlt
add
lods
dec
mov
xchg
test
lret
xchg
xor
push
imul
mov
cmc
dec
nop
cwtl
mov
xchg
mov
pusha
pop
out
stos
call
jnp
test
fsubrl
js
xor
and
dec
sbb
lret
and
jbe
test
mov
sbb
scas
mov
ja
pop
in
hlt
movsb
dec
mov
stos
mov
ffreep
xchg
mov
pop
push
cld
div
jge
jns
ljmp
add
int3
pop
cmp
js
jne
mov
js
dec
fcomps
or
shlb
fdiv
or
movsb
adc
cmp
mov
mov
and
leave
cmpsl
lock
mov
push
and
or
loope
mov
adc
insl
ljmp
sbb
push
xchg
cmp
ss
xchg
mov
imul
jge
inc
jb
test
pop
xchg
push
pop
aas
addr16
lods
lahf
lock
mov
jnp
xchg
out
aaa
mov
dec
dec
lahf
and
cwtl
std
jle
jg
jecxz
dec
pop
rep
flds
cmpb
out
leave
dec
loopne
add
out
mov
jl
fldpi
shl
and
fadd
hlt
and
aaa
in
sahf
arpl
test
incl
mov
or
sub
inc
lods
stos
cmc
push
bound
filds
lcall
cmp
mov
fimull
sub
adc
push
mov
sub
mov
addr16
movsl
sub
out
xchg
mov
sbb
outsb
in
inc
mov
push
cmp
lock
dec
lods
ljmp
gs
mov
pop
adc
popf
push
mov
lahf
ss
in
call
xorb
jge
pop
lock
add
stos
pushf
sti
popa
push
hlt
dec
idivl
rolb
mov
scas
aam
popa
in
fmull
fs
sahf
mov
cmp
xor
stos
test
sbb
lret
add
out
fst
and
cmp
call
mov
cmpsl
shrl
push
or
sbb
inc
pop
fs
int
scas
arpl
jl
nop
adc
jb
add
cmpsl
add
xlat
and
and
dec
lods
adc
xor
mov
fs
mov
pop
cmpsl
fcoms
xor
inc
dec
fsubr
xor
in
push
test
cmp
aad
nop
xchg
test
inc
fmuls
shlb
sti
jmp
ljmp
mov
dec
popf
aam
pop
lods
push
ss
mov
lret
xor
mov
icebp
adc
imul
icebp
or
loop
ret
lahf
insl
cs
mov
xchg
inc
cmpsb
cmp
adc
xor
inc
mov
lret
fwait
outsl
clc
lcall
arpl
test
aas
inc
jecxz
mov
xor
es
dec
and
mov
fs
pop
mov
jo
push
call
fists
and
sub
mov
insb
fcomps
clc
gs
or
data16
imul
add
mov
out
rolb
aam
into
push
mov
push
mov
leave
popa
sbb
aas
scas
add
aas
lods
push
add
add
adc
or
adc
jnp
lods
popa
je
xchg
pop
lods
outsb
ljmp
mov
cwtl
xchg
cmpsb
mov
and
cli
lahf
int
lock
jno
addl
shl
aad
xchg
lret
sti
ja
movl
dec
mov
ret
push
pusha
lahf
push
in
jl
or
aaa
loopne
inc
je
cmp
xor
std
mov
pusha
cmc
xchg
icebp
jne
mov
push
inc
or
mov
insl
cmc
int
cmp
sti
adc
adc
or
inc
jmp
out
mov
mov
jecxz
inc
sub
jecxz
jl
jae
add
lahf
push
rcll
mov
fwait
movsb
inc
dec
sbb
add
out
ss
mov
jge
jg
xor
scas
push
add
mov
pop
push
cld
jns
lea
popa
rolb
mov
cmp
mov
jae
cli
adc
in
xor
test
mov
in
ficoms
cld
outsl
jb
xor
cltd
in
int
cmpsb
nop
xor
insl
sbb
mov
repnz
popa
out
fcmovbe
hlt
xchg
pop
xchg
cmp
js
add
je
outsb
out
mov
or
mov
daa
scas
dec
test
push
mov
jns
cli
or
xor
insl
sub
mov
int3
aam
andl
hlt
adc
pop
movsb
add
mov
frstor
mov
sbb
test
clc
in
faddl
or
mov
loop
xchg
ljmp
sbb
sub
push
roll
cmp
ret
mov
test
stos
or
sbb
xchg
shll
sub
aas
fsubrs
pop
dec
push
mov
shrl
and
sub
in
cltd
add
insl
jecxz
push
adc
jg
xchg
push
mov
sbb
xchg
je
pushf
test
pop
aam
cmp
inc
cmp
adc
insl
and
dec
jne
sbb
inc
pop
scas
add
in
test
iret
jmp
ja
scas
sbb
jo
sbb
cmpsl
lret
cmp
cwtl
mov
jnp
push
dec
add
adc
stos
mov
mov
xorl
cmp
xchg
stc
xlat
in
push
sub
nop
jno
negl
mov
scas
mov
adc
rcrl
loop
adc
outsb
test
test
or
mov
sbb
cmp
in
cs
and
cmp
lods
mov
dec
mov
shll
cmp
push
push
pusha
sbb
and
fcmovne
mov
stos
ret
lods
jg
push
movsl
test
rcr
mov
cmp
pop
arpl
cmp
dec
pushf
or
or
loop
js
push
movsl
shlb
pop
aaa
fs
add
xor
out
data16
push
push
cld
mov
sub
enter
stc
adc
scas
pop
cmc
icebp
outsb
cld
push
fs
xchg
aam
sub
addr16
mov
sbb
sub
xchg
mov
push
xchg
mov
scas
adc
jle
js
sub
push
xor
pop
cmp
in
idiv
sbb
imul
push
insl
dec
inc
shr
dec
push
jge
mov
xor
outsb
add
pop
loopne
dec
add
mov
xchg
pop
mov
xchg
imul
dec
or
ret
scas
push
cmp
pop
push
clc
pop
mov
aad
or
xchg
test
adc
enter
xor
shl
and
leave
fdiv
in
mov
xchg
xchg
ret
mov
out
rcrb
out
jmp
xchg
add
inc
fldt
fistl
or
and
adc
jns
push
cmpsl
inc
xlat
dec
movl
in
cmpsl
dec
divps
lret
in
scas
xchg
jae
sub
push
arpl
jnp
ss
or
and
popf
loop
mov
ret
stos
arpl
bound
cltd
push
shll
xor
das
addr16
jmp
lock
xor
rcll
jle
and
mov
rclb
adc
sti
je
lret
leave
in
lret
mov
xor
jge
dec
inc
mov
dec
loop
outsb
sub
ja
das
sbb
fsubs
jnp
fstpl
xor
outsl
mov
lock
imul
mov
aaa
orl
pop
push
mov
aam
adc
mov
jb
adc
imul
jp
popa
fwait
cmpsl
jl
mov
pop
mov
pop
jae
dec
inc
xchg
mov
ja
pop
movsl
cmpsb
mov
jb
das
insl
lahf
incl
mov
inc
out
cli
inc
jge
sbb
popf
xor
frstor
loope
push
mov
cli
pop
enter
das
lahf
cltd
outsb
fistpll
enter
adc
das
pop
loopne
cmp
xor
or
popf
testb
fsubrl
mov
lods
aas
sbb
push
sbb
and
push
xchg
cmp
mov
cli
dec
and
retw
sub
sarl
mov
add
rorl
jle
xchg
gs
mov
sti
mov
mov
es
push
aas
adc
mov
lcall
ljmp
push
inc
mov
pop
cli
pop
xchg
addb
mov
cmp
xchg
xor
fcmovbe
dec
push
gs
test
xchg
push
mov
mov
pop
xor
pusha
push
pop
lahf
out
rcrb
mov
xchg
sbb
mov
push
data16
dec
call
aaa
cmp
lcall
cmpsl
pop
cs
push
in
arpl
mov
mov
cwtl
sbb
cmpsb
xor
adc
sbb
sub
xorl
lods
jmp
pop
push
sbb
mov
rcrl
hlt
xorb
shll
cmp
jns
push
jbe
mov
jb
adc
or
out
mov
xor
push
add
mov
xor
test
or
push
add
inc
in
add
movsl
mov
add
mov
fstp
sbb
stc
mov
push
adc
or
adc
outsl
push
cmp
sub
adc
adc
jbe
gs
adc
add
jmp
push
inc
scas
enter
sub
mov
out
xchg
negl
movsl
and
rcll
adc
xchg
bound
dec
idivb
dec
or
test
mov
cs
xor
imul
aaa
lret
ljmp
in
or
test
fs
pop
pop
jp
add
pop
rcl
sub
pop
fcomps
push
int
adc
cli
lret
in
jns
stos
sbb
mov
xchg
push
jno
movsb
push
sbbl
int3
jle
hlt
sahf
int
jp
faddl
sti
into
call
dec
jno
mov
test
push
int3
lods
into
jnp
or
inc
cmpsb
imul
ficoms
xlat
push
cmp
movsl
cwtl
sub
insb
jmp
int
or
add
and
leave
add
sub
jle
mov
xor
inc
call
std
out
lret
or
stos
movb
stc
mov
mov
inc
test
fistps
je
mov
pop
fucom
adcl
push
es
daa
ret
pop
enter
xor
jp
js
out
mov
fsubrs
or
push
test
add
icebp
test
inc
orb
sub
sbb
sahf
mov
inc
sub
cli
iret
mov
dec
cmp
incb
inc
push
jle
insl
fnstcw
mov
aad
call
mov
sahf
jae
jb
xchg
repz
lea
push
mov
dec
inc
dec
sbbb
jl
repz
outsl
ret
scas
repz
jecxz
mov
test
stos
fcomps
rcl
cmp
pop
push
xchg
cmp
cmc
push
clc
cwtl
pusha
lea
cmp
jbe
inc
aas
lcall
cmp
xchg
mov
faddp
mov
inc
lret
aaa
dec
xor
cs
lret
jbe
dec
ret
aas
fistpll
mov
add
pop
or
or
repnz
fdivl
in
sub
lock
stos
pop
and
mov
js
addr16
sbb
xchg
push
jle
popf
cld
and
int3
fidivl
loopne
jbe
lods
xor
cmp
cli
cmp
outsb
and
sbb
xor
adc
movsb
imul
or
add
add
fdivs
test
and
jl
push
hlt
cmp
daa
iret
add
inc
sbb
push
mov
pop
je
inc
lret
sub
xor
das
lea
mov
inc
nop
or
aad
sbb
or
fstl
lret
stc
repz
mov
push
out
hlt
fs
sahf
and
add
hlt
sub
fsub
outsl
out
adc
lcall
jmp
mov
pop
leave
mov
xchg
lds
cmp
scas
sub
ljmp
neg
mov
imul
rcr
inc
aam
xchg
push
bound
test
les
lret
xchg
mov
pop
cmp
lret
push
psraw
out
lock
lds
hlt
mov
jbe
pusha
xor
mov
andb
or
sahf
jp
insl
mov
popa
mov
test
movsl
loope
movsl
sbb
stc
popa
mov
into
dec
adc
fwait
mov
push
jg
mov
push
je
dec
push
cmp
icebp
xlat
mulb
idivb
jge
fcmovu
xchg
mov
lret
pop
sar
cld
sub
mov
bound
mov
jnp
fwait
push
mov
pop
stc
cmpsb
jmp
in
daa
adc
dec
add
sbb
sbb
fprem
dec
cmp
mov
sar
sub
adc
pop
hlt
xchg
int3
mov
ja
jmp
mov
mov
jae
xadd
jecxz
adc
xor
cmpsb
nop
lret
and
add
xchg
jne
outsb
or
test
fadd
arpl
insb
cld
mov
mov
mov
in
shlb
mov
jge,pt
sar
movsb
insl
or
mov
hlt
stc
fwait
or
loope
pop
jmp
popf
mov
rorb
imul
les
cwtl
stos
lea
mov
fnsetpm(287
jecxz
xchg
add
add
std
call
or
push
roll
andb
aam
or
and
mov
cmp
ret
test
dec
outsb
or
repnz
mov
repz
out
add
cmp
ret
je
and
add
xor
inc
scas
jg
xchg
sub
insb
or
nop
mov
pop
push
jo
outsl
or
repz
imul
sub
xor
dec
roll
dec
movsb
mov
in
push
xchg
insl
xor
mov
pop
or
pop
jl
and
ror
xor
aad
cmp
cs
and
icebp
addr16
sbb
mov
sub
scas
mov
jnp
hlt
das
jo
mov
xor
pushf
jmp
jbe
loop
push
and
imul
push
jbe
dec
add
loope
xor
mov
xchg
lahf
nop
sub
repz
outsb
movsl
jecxz
bound
xchg
jo
or
fstpl
pop
adc
adc
ret
aas
test
xorb
repnz
xchg
leave
outsl
dec
call
dec
xor
jno
clc
mov
lods
jb
add
inc
xor
xlat
jge
stc
and
cmpsl
popa
iret
jns
add
or
out
or
out
aas
or
sarl
and
add
incb
sbb
pop
mov
mov
mull
pop
out
cld
jge
jae
or
sbb
dec
xor
cmpsb
mov
pop
mov
lret
mull
insl
mov
push
pusha
imul
cmp
pop
data16
xor
pop
or
jg
addl
popf
stos
or
enter
movsl
and
in
pushf
fists
roll
sbb
hlt
iret
add
lods
cld
fldl
lahf
loope
fisubl
add
cmp
jg
pushf
push
jp
mov
xchg
xchg
push
adc
cmp
mov
cmp
hlt
push
xchg
lahf
scas
pop
sub
iret
fstpt
sub
adc
mov
aaa
pop
pop
pop
sar
dec
push
cmpsb
mov
pusha
mov
idivb
jae
sbb
mov
push
rcrb
sbb
adc
loope
mov
adc
lock
out
cmp
push
stc
je
addr16
xlat
mov
ror
inc
push
or
pop
jl
sbb
cltd
inc
pop
out
dec
push
mov
imul
jno
insb
sub
jp
mov
mov
inc
mov
sarb
or
vmovsldup
push
mov
mov
dec
test
cmp
std
mov
or
jg
stc
or
lds
xlat
push
nop
clc
js
push
test
lea
movsb
and
enter
addl
mov
lods
xor
sub
or
cltd
and
adc
push
inc
or
in
scas
pushf
outsb
dec
roll
sub
adc
nop
in
fistpl
xor
xchg
into
in
push
lea
cmp
add
adc
xchg
stc
subb
xchg
mov
adc
push
adc
push
cltd
jl
rorb
aad
popa
sbb
xchg
push
insb
out
sbb
sbb
das
gs
outsb
pusha
xchg
imul
into
int
adc
dec
inc
leave
mov
in
movsb
push
out
pop
lcall
push
push
bound
xchg
jge
mov
cmpl
je
insl
lret
push
call
mov
fistps
xchg
mov
lds
or
mov
icebp
bnd
and
xor
popf
in
jno
mov
rcl
mov
scas
sahf
mov
mov
or
dec
loop
rcl
out
data16
in
insl
daa
loop
ret
mov
add
dec
sub
jnp
pusha
xor
icebp
cmp
inc
pop
jbe
dec
je
adc
mov
mov
mov
or
sarb
adc
sbb
enter
lds
and
lds
sbb
imul
mov
subl
push
scas
test
orb
jge
int
cmp
mov
push
push
divl
jmp
sub
dec
push
pop
add
movsl
insb
out
outsb
rorl
ss
nop
imul
insb
out
es
shrl
mov
mov
test
jp
xor
dec
mul
ljmp
xchg
pop
ds
fldcw
dec
addr16
sbb
cli
xorb
scas
stos
loope
ret
call
int3
cmp
mov
mov
popaw
mov
rclb
push
dec
inc
mov
mov
adc
dec
push
std
test
mov
cwtl
clc
mov
lret
repnz
add
shrl
adcb
int
fsts
xor
xchg
xchg
loope
pop
add
aas
imul
adc
inc
xor
in
pop
xchg
adc
xlat
mov
xchg
jns
shl
jne
pop
outsl
fdivrl
dec
sub
sub
pushf
jecxz
loope
jle
xor
push
les
loop
sbbl
jecxz
or
scas
rol
xchg
sbb
pop
sub
lahf
out
mov
jge
daa
xor
jb
imul
lods
ss
js
loope
add
xchg
jbe
les
mov
out
xchg
fcompl
cmpl
add
jo
ja
and
push
imull
dec
add
lds
push
dec
push
stos
int
jecxz
fidivrl
addl
lret
push
cmp
sbb
mov
xchg
mov
call
lcall
stc
vpavgb
ficomps
jb
out
mov
dec
movsl
jecxz
adc
sbb
push
sub
or
les
or
push
out
mov
sub
fsts
fcoms
jb
fs
sarb
arpl
cs
sarl
or
sarb
or
xor
pop
rcrl
in
daa
jmp
js
jmp
adc
inc
enter
test
aad
flds
insl
sti
push
xchg
sbbl
cmp
lret
mov
inc
cmp
mov
jge
cmp
add
std
cltd
int3
jmp
dec
enter
repnz
sbb
shl
sahf
iret
lods
imul
adc
ret
imulb
cmp
fcomps
or
cmp
xor
cmpsb
les
test
jle
and
daa
in
fsubrl
mov
jmp
dec
pop
sbb
inc
fbld
adc
xchg
xchg
std
jbe
divl
fstps
cld
das
xor
nop
int
lret
dec
in
out
pusha
ljmp
lods
hlt
xor
es
test
aas
mov
outsb
mov
or
pop
test
scas
pop
and
lret
pushf
sub
repz
mov
fscale
ret
or
jbe
insb
xchg
mov
imul
xchg
mov
xlat
sbbb
adc
adc
stc
adc
dec
cmp
sbb
cmp
add
sub
mov
lods
and
scas
mulb
outsb
les
or
in
jo
fwait
loopne
or
mov
gs
adc
inc
cli
clc
fisttps
dec
outsb
mov
loop
add
ss
ret
inc
add
sub
imul
mov
js
cmp
and
enter
gs
aas
fwait
xor
lods
mov
je
sti
fnstsw
pusha
cwtl
negl
mov
pop
mov
inc
mov
lods
adc
inc
sbb
icebp
cs
xor
pop
test
in
cli
sub
pop
push
or
xchg
xor
iret
call
sbb
and
shll
push
jno
sbb
mov
lods
mov
loope
sub
or
lahf
sub
xchg
out
mov
mov
stc
cs
pusha
pop
mov
aad
aad
test
jbe
push
jne
outsl
das
adc
sbb
push
sub
push
sub
in
lahf
sbb
popf
and
cwtl
addr16
and
movsb
or
std
stos
out
xchg
test
shrl
jle
xor
or
lcall
imul
mov
sub
pusha
cmp
push
gs
ljmp
fcmove
push
andb
mov
pop
cmp
sbb
push
not
outsl
push
pusha
in
dec
mov
push
mov
cwtl
or
cmpsl
jge
arpl
pop
mov
negb
adc
aaa
out
mov
repz
lcall
stos
lahf
pop
mov
xor
neg
push
daa
jnp
shr
nop
imul
pop
movsl
sbb
and
ja
pop
sti
or
jae
sbb
mov
jae
dec
std
popa
imul
inc
decb
scas
mov
cmp
xchg
out
jne
mov
or
adc
add
or
xchg
and
fucomp
dec
aam
out
les
das
loopne
ds
ds
es
sbb
jmp
xor
sub
ljmp
das
pop
fidivrl
cltd
xlat
sbb
dec
lcall
mov
inc
lock
cmp
mov
mov
mov
repnz
xchg
shlb
xor
lods
sub
sti
sahf
lahf
repz
mov
icebp
out
je
sub
mov
movb
mov
imul
negl
sbb
mov
jle
aas
outsl
cmp
lods
sbb
call
decb
inc
pop
cmp
stos
js
xchg
or
sub
js
stos
leave
loop
imul
inc
xor
les
rol
insb
mov
pop
sbb
xchg
arpl
loop
adc
ret
jo
loop
mov
mov
dec
and
dec
test
fs
aas
adc
add
inc
fldln2
rclb
cs
dec
aas
pop
das
jno
jge
pop
lds
nop
push
jle
cld
sahf
pushfw
addl
shr
test
mov
cmp
sub
cs
mov
xorb
and
push
jns
mov
int3
cmp
fistpl
imul
out
mov
xchg
mov
decl
aaa
fistpll
repz
jnp
xchg
stc
cmp
inc
jns
or
enter
mov
mov
enter
cmpsl
ret
mov
jmp
inc
mov
or
dec
jmp
je
and
inc
mov
out
iret
jo
aam
mov
xor
pop
data16
or
fmull
in
sub
mov
outsb
in
sbb
and
sbb
rclb
or
lcall
sub
lds
aad
push
push
les
in
push
mov
aas
push
mov
fimull
call
lcall
mov
pusha
lret
stos
mov
icebp
sub
cmpsb
xor
fsubrl
inc
push
sub
dec
jne
pushl
rolb
out
mov
addr16
dec
push
jne
adc
sub
jae
xlat
fnstsw
mov
adc
test
outsl
pop
stos
xchg
in
jmp
or
adc
add
xlat
shr
push
lock
xor
push
gs
lds
inc
jl
andb
sbb
xchg
mov
jle
mov
sub
lcall
clc
movsb
fwait
mov
ja
into
xchg
cmp
jg
xchg
adc
adc
aas
mov
inc
cmpsb
fildl
sahf
addr16
pushf
lcall
clc
test
jno
dec
and
pop
movsl
mov
movsb
out
fcomip
loopne
aam
cmpsb
xchg
mov
xchg
mov
aam
jp
push
fdivrs
enter
jle
adc
aaa
jnp
xchg
pop
jnp
cmc
icebp
mov
data16
pop
xor
imul
push
das
inc
mov
dec
stos
or
cmp
sbb
pop
mov
and
push
jecxz
sub
lahf
loop
inc
in
popf
mov
add
mov
wbinvd
cs
push
pop
fidivl
sahf
cmc
jmp
jp
repz
and
leave
out
cmpb
pop
inc
adc
cs
movsl
pop
lret
enter
push
imul
loop
xlat
xor
rcll
mov
xor
ds
sub
test
pop
or
xlat
divb
or
jbe
shr
sub
inc
dec
jb
xchg
lret
data16
or
mov
lret
fsub
ja
dec
jbe
outsb
test
scas
xchg
imul
or
aad
pop
cmpsb
outsb
test
xchg
notb
sub
int
or
or
pop
out
and
mov
aad
push
jecxz
push
mov
dec
push
adc
xlat
les
mov
sub
xor
pop
mov
dec
or
push
ret
int3
clc
fndisi(8087
aaa
mov
fldl
or
bound
pop
mov
lahf
clc
outsb
cld
arpl
lds
jl
sub
imul
dec
lods
xchg
arpl
test
mov
jecxz
mov
xchg
and
mov
cld
rcll
lods
popa
cld
out
das
scas
in
and
xor
jle
cltd
or
test
xor
icebp
and
cmp
push
or
dec
sub
pop
ljmp
in
mov
and
push
ret
scas
dec
shlb
push
or
mov
mov
leave
push
dec
push
add
mov
mov
js
arpl
addl
in
insl
incb
adc
pop
iret
xchg
pop
jecxz
add
sub
pop
lock
lret
xchg
inc
adc
push
in
jg
jo
movsl
ja
xchg
dec
fs
es
int
nop
xchg
xchg
jae
sar
int
cmp
incb
xor
call
mov
fstps
sbb
stos
les
add
xchg
fists
lock
incb
jl
sub
mov
icebp
inc
mov
ds
inc
and
pop
jno
jg
in
shll
mov
into
xor
clc
pop
or
aaa
mov
pop
into
push
cmpsb
rclb
inc
inc
shr
jecxz
loopne
adc
xchg
sbb
out
jb
sbb
fcmovnbe
je
jae
data16
dec
mov
cmp
pop
push
push
icebp
enter
loopne
mov
jne
int
mov
stos
add
sbb
mov
jecxz
xchg
aaa
mov
inc
push
mov
nop
jns
and
cmp
in
je
lods
add
sub
inc
nop
inc
js
jmp
sbb
jbe
mov
xor
lods
movsl
out
or
cmpsl
cmpl
cs
jae
push
or
xor
jp
xchg
xor
adcl
push
out
inc
mov
sub
xor
pop
jnp
jl
push
repz
dec
push
add
andl
and
mov
orb
outsl
out
adc
xor
xlat
ss
pop
dec
dec
cs
sti
into
popf
ja
cltd
cmp
xchg
ret
insl
jg
movsl
vpunpckhwd
adc
xchg
orb
mov
out
and
or
mov
jp
sbb
dec
je
daa
or
cmpsl
adc
and
subl
cmpsl
jmp
mov
lods
test
mov
loop
push
cmc
in
add
sbb
jecxz
addr16
sbb
int
sub
pop
mov
mov
in
dec
inc
ja
cwtl
push
or
mov
jno
adc
out
cmp
add
xchg
fadd
arpl
and
fisttpll
lahf
inc
aad
push
dec
mov
pusha
pop
xor
cltd
pusha
lahf
dec
push
gs
adcb
xor
popa
and
xchg
test
insl
mov
add
iret
cmp
dec
fcoml
inc
xchg
jo
mov
and
sahf
mov
sbb
dec
ficoml
mov
outsl
mov
xchg
adc
cmp
push
mov
xchg
add
cwtl
jns
mov
lods
aam
sub
xchg
test
out
mul
inc
popa
fwait
fs
push
and
inc
orl
ljmp
fcmove
mov
xchg
jmp
pop
cmp
or
adc
cmpsb
jge
mov
mov
push
and
dec
lret
mulb
pop
popa
lods
mov
out
inc
das
sub
insl
adc
adc
inc
insl
cmp
and
hlt
push
les
arpl
mov
sarb
jl
jge
sti
pop
popa
mull
jmp
sub
jae
ds
pop
hlt
adc
xchg
gs
call
inc
inc
pop
xchg
sbb
clc
hlt
fldcw
dec
or
adc
stos
xor
outsl
push
daa
popf
iret
push
mov
sbb
test
sbb
enter
fcmovnu
push
cmc
cmp
dec
pop
nop
std
divb
cli
lea
xor
and
arpl
mov
mov
daa
outsl
push
div
in
int3
pop
sub
and
mov
cmp
in
sbb
rcrb
push
inc
mov
and
sbb
test
mov
push
xchg
ja
or
mov
fisttps
jb
push
hlt
les
jnp
add
cmp
adc
ds
push
insb
iretw
xchg
enter
les
mov
mov
jle
popa
jmp
xchg
adc
cmp
ficomps
sbb
xchg
pop
pop
enter
sbb
push
aas
lock
inc
aam
andb
fsts
int3
mov
xchg
mov
or
imul
enter
xlat
test
je
add
push
lods
in
jbe
mov
and
sbb
scas
cmp
pushf
in
pop
sub
sar
cli
addr16
imul
xchg
out
ljmp
add
add
dec
popa
and
xchg
in
mov
pop
and
cs
add
cmc
mov
rorb
inc
inc
jmp
flds
fwait
test
test
push
popf
movsl
into
add
insl
adc
into
inc
pusha
mov
fsubrl
fnstcw
pop
mov
sbb
pop
aad
fbstp
inc
mov
jnp
pop
sub
in
sahf
inc
add
xor
rcll
insb
imul
cli
adc
lret
adc
jge
imull
cld
pop
addb
sti
pop
and
xor
jecxz
mov
repz
scas
sub
hlt
ljmp
daa
enter
sti
push
pop
push
divl
adc
push
mov
lahf
pop
lods
cmp
xorl
std
and
aas
ret
out
in
outsb
aas
mov
xchg
aam
shl
xor
aas
fistpll
mov
xchg
cmpb
dec
mov
in
rcll
and
pop
sti
inc
inc
daa
imul
loop
bnd
mov
imul
push
adc
fld
data16
aad
fisubrl
dec
dec
filds
mov
push
jle
in
scas
in
jg
das
mov
ret
inc
xchg
andb
mov
mov
adc
dec
ret
popa
out
cmp
fsubs
jae
dec
jb
inc
pop
mov
mov
jg
add
repnz
stc
test
xchg
mov
repnz
jae
inc
into
adc
fisubl
inc
lahf
jp
jle
or
hlt
nop
ds
dec
xchg
outsl
ret
cmc
xor
mov
insl
enter
int
cli
pop
adc
jne
pop
push
jbe
push
cld
out
cli
cwtl
mov
aad
repz
add
mov
push
xchg
sbb
jo
and
jle
or
test
pop
inc
in
sub
enter
loope
sub
jmp
shrl
int
mov
pop
loopne
inc
mov
inc
and
in
sbb
out
test
in
fldl
out
fldenv
jmp
in
data16
mov
cmp
popa
pop
pop
sub
outsl
fstl
fwait
test
dec
mov
sub
loopne
add
jge
nop
ret
mov
bound
jl
mov
cmp
sbb
cwtl
stos
lret
xlat
loopne
push
sti
push
jp
add
sub
pop
dec
pop
jbe
mov
outsl
mov
pusha
mov
shl
xor
xor
mov
pop
aam
into
dec
cmp
negl
and
mov
push
jmp
mov
adc
lahf
jno
adc
js
in
and
or
dec
xchg
out
rcll
sub
jnp
mov
inc
xor
push
fwait
out
int3
jl
lea
rclb
mov
lahf
mov
push
xchg
jb,pn
jae
mov
xchg
pop
dec
das
mov
fidivs
cmp
in
test
or
sub
xchg
imul
push
cmp
mov
xor
scas
in
fcoml
mov
cmp
sub
jge
in
loope
fiaddl
fmuls
push
xor
fists
fs
lahf
xor
shlb
icebp
les
adc
inc
rcl
or
sub
jbe
push
inc
xchg
xchg
imul
fisttpl
mov
jnp
push
sub
mov
enter
int3
jne
cli
cmp
insb
lahf
and
mov
ds
jge
pop
lret
insl
cmp
negl
xor
jmp
cmp
inc
clc
push
sub
and
xor
daa
hlt
mov
pop
out
xor
mov
adc
insb
daa
xchg
int
pop
int3
mov
xor
pop
mov
adc
decl
inc
xchg
movsl
cmp
addr16
aam
sub
sub
loope
cmp
push
adc
xchg
sbb
mov
stos
das
js
test
sbb
in
cmp
push
gs
and
int3
jp
cmp
xor
jno
xor
and
inc
add
xor
jnp
pop
push
into
es
fistpll
add
xor
scas
stc
fdivs
mov
outsl
mov
xor
pop
enter
or
jae
push
loope
push
or
jg
push
out
mov
and
cwtl
test
and
imull
daa
pop
mov
call
cs
icebp
sbb
dec
aaa
xchg
dec
test
enter
sub
lcall
shrl
mov
and
js
sbbl
or
repnz
or
and
jnp
in
ljmp
jmp
scas
push
imulb
xor
xor
add
dec
inc
scas
repnz
enter
cmp
push
sbb
add
mov
dec
les
and
lods
ret
testl
fwait
movsb
push
dec
pop
lret
adc
xchg
push
fs
pop
cltd
sbb
inc
ljmp
or
cmp
dec
inc
out
ss
ret
or
or
lods
out
cli
jmp
sarl
sub
push
scas
cmpsb
push
push
inc
xor
push
rolb
out
sub
repnz
icebp
rorl
or
adc
pop
roll
cmp
mov
es
mov
mov
std
adc
cmc
fs
adc
mov
lds
jge
negb
fidivrl
cmc
stc
pop
sub
or
insl
push
pop
pop
rolb
vpunpcklbw
mov
mov
cwtl
pop
inc
movb
out
xchg
add
push
sbb
fimuls
cltd
in
and
jne
pop
fists
insb
xorl
mov
je
xor
mov
mov
jae
jnp
jl
xor
sub
arpl
adc
das
xor
mov
daa
ds
push
int3
lods
sbb
pop
jns
inc
push
mov
sbb
add
bound
mov
adc
dec
mov
inc
adc
and
dec
das
push
mov
rclb
cmp
pop
mov
pushf
cmp
sbb
mov
icebp
mov
data16
stos
negb
dec
cs
stos
es
mov
lret
int
roll
les
cmp
gs
out
jno
jp
inc
mov
test
mov
rclb
sub
inc
bound
movsl
clc
xchg
test
xchg
push
cmp
imul
std
xor
pop
mov
adcl
xor
adc
sub
repz
jno
cmpsl
enter
jecxz
pusha
loop
fsubrs
push
jecxz
sbb
inc
jns
mov
cmp
loope
lods
addb
and
lahf
jmp
popa
jmp
xchg
mov
outsl
dec
ret
and
in
aaa
push
das
leave
push
mov
sub
and
lods
push
ret
add
ljmp
mov
popf
mov
jl
or
psubd
xchg
js
rcll
cld
add
xchg
sbbb
shr
cmp
test
push
dec
psubusw
pop
pop
xor
add
jae
sub
mov
jecxz
push
inc
mov
or
arpl
mov
inc
mov
cwtl
mov
stos
leave
repnz
dec
sbb
cmpsl
push
movsl
rorl
push
popa
xchg
jnp
fisubl
dec
push
adc
sub
push
icebp
add
in
jge
scas
add
and
fst
push
mov
inc
lods
clc
outsb
sti
mov
orb
loope
mov
xchg
sahf
mov
popf
iret
lods
enter
adc
aad
or
and
cmpsl
movsb
cmp
loope
scas
dec
lcall
test
mov
xor
xchg
inc
mov
push
repz
mov
stc
test
repnz
push
mov
cmp
xchg
ret
mov
shrl
add
mov
sti
lahf
lds
cmp
sbb
fcompl
and
fmull
mov
push
loopne
dec
fsubr
push
xor
lods
cmp
jnp
pop
fwait
arpl
ja
xchg
xchg
sub
push
leave
enterw
pop
ret
insb
popa
dec
push
mov
add
pushf
xchg
loope
dec
cwtl
or
mov
cmp
icebp
dec
jnp
sub
enter
pop
out
int3
out
mov
sub
mov
xor
dec
loopne
pusha
cli
inc
lahf
int3
jl
ds
mov
loop
dec
repz
sbbb
cmp
and
or
rcrb
jmp
sarb
jbe
pop
mov
ljmp
inc
adc
in
fistps
jnp
loopne
xchg
fsubs
or
lock
lods
mov
xacquire
push
mov
inc
mov
fldcw
xor
and
or
outsb
idivb
lods
pop
popf
es
sbb
mov
lea
in
pop
push
test
cwtl
out
enter
lods
into
les
sub
push
inc
xchg
push
imull
jmp
lock
adc
mov
push
mov
imul
rcr
aas
or
setge
xchg
or
jmp
nop
leave
pusha
add
cmp
inc
fisttpll
xor
adc
nop
mov
xor
lods
sbb
push
loopne
inc
enter
daa
cmp
mov
add
test
je
mov
test
jns
mov
mov
cld
mov
inc
xor
lea
jae
lock
ja
mov
jne
push
xchg
ss
push
test
int
out
push
add
mov
ficoms
xlat
out
pop
outsb
push
clc
xchg
insl
jp
pop
push
sbb
ret
cmp
sub
mov
loopne
clc
or
push
xchg
lock
mov
inc
mov
or
popf
cmp
out
cmp
fdivr
std
adc
loop
mov
dec
ljmp
enter
add
xchg
ljmp
pop
add
add
ss
and
test
xchg
insl
pop
loop
mov
in
fidivrl
inc
out
xchg
push
xor
cmp
insb
into
sub
cmpsl
pushf
jb
aad
xchg
mov
fbld
pusha
push
loopne
push
xor
add
pusha
inc
test
mov
sahf
or
inc
lret
push
pop
inc
data16
pop
iret
xor
aaa
lods
shlb
inc
fdivrs
out
dec
xor
add
fmul
dec
xchg
rorb
lods
std
inc
dec
pop
flds
pushf
push
test
push
cli
test
xchg
cmpsl
dec
add
in
dec
xchg
and
jmp
pusha
in
test
mov
aam
rdmsr
lock
mov
pushf
js
ret
call
aam
rcl
in
addl
push
inc
mov
sub
xor
pusha
add
jmp
mov
rorl
push
jp
out
jae
les
jecxz
enter
popa
pop
or
pop
cwtl
jecxz
nop
inc
ja
popa
inc
push
in
xchg
iret
mov
dec
add
jmp
pusha
lcall
push
push
add
into
fmull
xchg
je
or
call
lods
mov
popf
cmc
lcall
xchg
stc
fildl
pop
xchg
dec
lock
rorb
inc
test
jbe
cltd
dec
adc
and
and
pop
je
arpl
test
test
jns
or
jbe
cmp
adcl
test
xor
xor
std
aas
mov
jno
stc
jmp
xchg
pop
jge
dec
test
out
inc
sbb
inc
push
pop
xlat
mov
aaa
pop
test
ret
mov
or
push
cmp
sbb
lods
pop
rcrl
out
dec
mov
mov
inc
outsl
adc
mov
fs
pop
pop
jno
jle
std
push
dec
mov
scas
and
push
jp
cmp
ja
and
fcomps
clc
ljmp
loopne
pop
xchg
dec
xchg
fucomip
jge
xchg
popf
inc
inc
push
mov
sub
sub
rorl
dec
sub
and
popa
mov
xorb
inc
xchg
jbe
insl
or
ja
js
adcl
xorb
je
stc
pop
ja
incl
aaa
ss
mov
aas
fsubs
xchg
cmpsl
cs
jno
lods
aas
dec
stc
fs
xlat
sbb
in
mov
dec
lea
pop
and
sub
inc
gs
gs
in
jmp
ret
sbb
sub
fwait
push
xchg
lahf
cmp
sti
xor
lret
push
popa
test
frstor
ja
dec
inc
addr16
decb
loop
mov
and
fwait
repnz
mov
loop
fcomps
mov
jne
dec
push
adc
sar
pop
inc
jle
or
push
cmp
add
pop
inc
jl
inc
bound
mov
inc
or
ds
jns
mov
jecxz
add
sbb
sub
lea
insl
and
or
mov
mov
lock
pop
sub
add
lret
jecxz
push
dec
inc
pop
adc
fs
mov
xor
in
push
and
sbb
pop
xor
bound
mov
add
mov
cmp
cld
push
jmp
sub
idivb
inc
cmpsl
dec
loope
dec
cmp
cmp
popa
rcrl
into
stc
and
inc
cld
sub
mov
decl
sbb
push
pop
xchg
daa
push
call
cld
adc
addr16
cmpsb
fisttpll
sbb
pop
xchg
sbb
add
dec
sbb
test
pop
push
xor
idiv
mov
mov
and
xchg
lahf
loop
cwtl
js
cmp
mov
jno
test
shlb
mov
jnp
je
inc
out
pop
fmulp
mov
inc
pusha
sub
scas
adc
les
shll
ds
addl
push
pop
cwtl
lahf
cmp
dec
ret
jl
pop
lods
xchg
loopne
jb
mov
mov
int
jmp
xchg
or
cmc
int
testl
outsl
jecxz
push
jle
scas
inc
cmp
add
insl
sbb
adc
ljmp
pop
pop
rolb
mov
or
dec
fidivrs
loop
cmp
cmp
cwtl
daa
push
lods
lret
scas
jg
sub
movsb
cltd
icebp
jnp
pop
add
rcrl
test
fsts
pusha
mov
push
imul
shll
mov
pushw
cmp
arpl
mov
mov
inc
dec
mov
mov
xchg
nopl
pop
or
test
lods
aad
xchg
lret
xchg
cltd
mov
jg
dec
push
pop
insl
sbb
out
insb
adcb
out
mov
ret
pop
cli
push
in
mov
or
data16
lcall
adc
test
sub
push
or
ljmp
loopne
ror
gs
pop
fadds
test
loopne
ss
lea
inc
fcoml
inc
and
loop
pop
cwtl
inc
adc
jb
sbb
arpl
xor
xchg
dec
lea
sbb
xor
jmp
cmp
or
adc
out
aas
dec
movsb
fistpl
jp
inc
mov
or
and
repz
stos
fs
mov
cmp
sub
fisttpll
push
sbb
jbe
rorb
lods
inc
jg
cmp
out
dec
xchg
icebp
icebp
notb
cwtl
sahf
mov
ss
dec
scas
push
fisttps
adc
scas
lcall
fucomip
sbb
jo
test
push
dec
sbb
int
pop
fdivr
pop
loope
fucomip
and
pop
cmp
dec
mov
enter
jb
enter
inc
mov
fistpl
add
aam
mov
aam
xchg
mov
push
cld
test
sub
loop
lods
inc
jae
jno
push
in
jp
repnz
pop
les
mov
ret
hlt
inc
icebp
push
mov
and
insl
mov
enter
sbb
or
ficoml
notl
cmp
xchg
scas
test
adc
push
mov
mov
in
xchg
notb
sahf
xchg
mov
or
adc
lret
add
adc
or
test
jbe
cmp
aad
int3
mov
push
insb
into
mov
les
pusha
and
lock
push
and
mov
stc
out
fisttps
cli
sbb
ficoms
popf
xchg
mov
add
jbe
fsts
push
imul
mov
push
jl
dec
push
or
dec
inc
push
pop
cmp
lahf
icebp
cli
movsl
or
cmpsb
pop
mov
mov
shl
xchg
jbe
filds
addr16
jge
popa
push
mov
sub
jecxz
and
xor
lcall
add
out
push
gs
mov
es
and
xlat
pusha
inc
sbb
aas
cltd
daa
lock
in
or
test
lods
mov
jno
and
xchg
jb
add
xchg
mov
pushf
mov
aas
scas
aaa
ret
xlat
lea
loop
flds
leave
ja
lea
cmpsl
in
pop
scas
or
add
test
adc
movsl
aad
cwtl
or
in
push
xchg
mov
insl
push
mov
or
fnstsw
mov
push
sub
push
push
sar
mov
xchg
call
xchg
sub
call
es
movsb
sbb
xor
lcall
mov
in
lds
cmpsl
cs
or
stos
inc
xchg
sub
sub
mov
stos
mov
insl
jle
inc
fsubl
clc
adc
jecxz
ds
jno,pt
std
dec
and
push
cmpsb
cli
je
lahf
lahf
lock
popa
sti
push
sub
in
xorl
add
push
adc
imul
aam
aad
neg
insb
arpl
mov
inc
jno
imul
pop
inc
mov
jbe
popa
cs
cli
aaa
cmp
add
mov
fsts
loop
sbb
adc
jle
sbbl
xor
and
add
decb
cmpsb
add
dec
pop
mov
adc
in
mov
shrb
loop
ret
mov
push
jne
iret
or
mov
jmp
sar
fsubr
cmpsl
push
lock
lea
mov
jae
mov
add
ljmp
dec
andl
push
jno
xorb
fndisi(8087
jmp
cmp
out
push
lret
pop
cmpsb
and
rorb
in
test
cltd
out
sub
and
cmpsl
xor
daa
push
aaa
jnp
imul
cmpsb
dec
adc
lret
aaa
scas
idivl
xchg
push
adc
xchg
sub
sarl
mov
xorl
loopne
psubsb
cmp
dec
adc
std
sarb
pop
orl
mov
pop
adc
jns
sbb
insb
out
xor
stos
or
decb
and
fsts
pop
xor
jl
leave
lea
iret
push
xlat
sti
scas
cmp
xor
pop
lcall
push
push
fsub
inc
pushf
fbstp
fstps
xchg
xchg
xchg
dec
jno
divb
push
sbb
sbb
mov
clc
and
in
push
insl
add
outsb
fimuls
lahf
push
dec
push
pop
cmp
sbb
sub
push
fldcw
cwtl
add
add
jno
pop
pop
or
inc
mov
rcr
mov
mov
mov
jae
out
fs
xchg
insb
cwtl
outsb
cmp
cmp
jmp
mov
inc
stos
outsb
scas
test
push
push
sahf
jbe
dec
stos
test
in
pop
movsl
push
xchg
mov
stos
or
mov
and
aaa
xchg
movsb
xor
lods
inc
enter
jmp
pop
push
frstor
mov
nop
sbb
cs
lea
test
lret
jle
cltd
rolb
sbb
push
inc
xchg
fadds
and
add
xor
push
sbb
inc
and
push
jb
inc
daa
test
mov
add
icebp
xchg
xchg
sub
leave
xlat
cmpsb
sbb
jb
pop
and
stc
mov
pop
jg
addr16
jecxz
mov
out
or
mov
test
push
loope
and
adc
sbb
ret
dec
ds
adc
jg
cmp
xchg
xor
sbb
push
out
mov
shr
sti
xor
rorl
push
dec
add
push
sbb
mov
stc
out
inc
inc
or
xchg
dec
xchg
xchg
lret
or
and
or
scas
or
outsb
add
fcompl
add
int3
in
dec
cmp
stos
mov
jae
dec
pop
fsubl
jecxz
sub
pop
cmp
cmpsb
mov
icebp
jns
push
xchg
mov
push
mov
add
mov
icebp
mov
out
loop
out
jne
mov
dec
movsb
test
shlb
push
sarb
cmpsl
and
ljmp
push
add
add
mov
into
movsl
aam
out
fmuls
add
aas
sbb
push
lahf
bts
dec
notl
cmc
bound
loop
lods
mov
mov
outsl
sub
mov
sahf
test
mov
rcrl
adc
sbb
shlb
lcall
lcall
cli
test
push
sahf
mov
mov
sub
movsl
push
std
rcl
orb
jge,pt
mov
arpl
lea
pop
in
scas
xchg
scas
mov
inc
adcl
pop
jecxz
pop
lcall
cmp
and
cmp
popf
xor
cmp
lds
adc
adc
xchg
dec
ret
adc
addr16
das
push
cmpsl
mov
icebp
stos
adc
dec
fs
cmp
add
test
jle
out
movsb
jmp
inc
out
insl
fdivs
mov
loope
lods
ja
push
pop
mov
aam
xor
popf
dec
fwait
call
mov
cmc
push
jne
mov
sub
jne
test
jmp
fistl
sahf
popa
movl
fcoml
xor
clc
sbb
das
mov
clc
push
sbb
scas
mov
jae
movsl
call
rorl
and
ljmp
jmp
lds
mov
dec
out
and
fsubr
fldcw
ret
push
push
and
jns
icebp
movsl
pop
xor
mov
rclb
jmp
in
cwtl
les
push
loope
lret
cld
xchg
pusha
mov
loope
dec
imul
mov
mov
in
inc
push
stos
push
jo
jl
ficoms
orl
mov
inc
iret
int
test
mov
arpl
out
sti
push
std
popa
cmpsb
pop
mov
imul
or
mov
in
and
jne
mov
inc
and
mov
and
call
stc
fcmovne
sub
ds
xchg
out
mov
xchg
lret
shr
imul
gs
and
xchg
clc
xor
mov
mov
sbbb
out
mov
mov
das
mov
out
fwait
shll
adc
xchg
fcmovnb
jno
inc
call
loopne
pusha
lret
push
rorl
fldcw
adc
or
popl
dec
push
jmp
or
ret
std
mov
mov
mov
mov
mov
movsb
mov
and
xchg
fdivs
mov
arpl
pop
je
mov
mov
sub
mov
cmp
push
sahf
fbld
xadd
repz
stos
mov
mov
movsl
mov
int3
xchg
sbb
aas
push
push
fldenv
mov
test
aam
lods
mov
jns
push
mov
inc
inc
jns
stc
or
sbb
insl
pop
or
insl
add
fwait
sbb
or
push
notl
or
pop
repz
sahf
add
cltd
mov
xchg
jge
mov
test
aad
jecxz
dec
sbb
jmp
rcrl
jp
xor
int3
fmull
rcr
inc
lret
cmpsb
rcrl
aas
jg
sbb
les
icebp
mov
ljmp
add
jns
dec
sbb
dec
adc
test
mov
dec
inc
dec
sub
int
or
shlb
inc
lock
fs
ja
outsl
popa
imul
enter
cmpl
lods
or
ljmp
ret
mov
mov
aas
mov
or
call
pop
adc
lret
fptan
fildl
hlt
add
cld
mov
divb
pop
mov
jno
add
aad
cmp
gs
add
nop
pop
mov
push
in
in
dec
in
sbb
dec
pop
sub
sbb
insl
push
xor
adc
hlt
stc
sti
push
push
adc
rorl
pop
or
imul
pusha
clc
push
je
fwait
mov
sub
or
movsb
clc
jne
jno
mov
mov
pop
pop
repnz
mov
das
sahf
je
into
cmp
cli
mov
xor
jg
daa
and
rolb
pop
and
into
fs
jbe
repz
mov
dec
fsubs
pushf
xor
gs
in
lods
rorb
or
in
xchg
add
jmp
xchg
pop
jp
mov
aam
rcrb
popf
xchg
pop
xorl
mov
or
jg
dec
sahf
mov
stos
js
cltd
fucomp
xor
dec
push
jno
pop
or
nop
jp
icebp
imul
rolb
lods
addr16
roll
aaa
mov
inc
cmp
mov
divb
stc
test
jp
mov
sbb
xor
and
and
add
das
lcall
or
and
mov
mov
mov
mov
sub
fidivs
int3
pop
iret
xchg
add
sub
leave
sub
fdivrl
push
adc
push
js
aam
xchg
mov
addr16
movsl
push
inc
aaa
js
stos
adc
and
or
cmp
inc
mov
pusha
stos
mov
imul
scas
sub
pop
push
rdtsc
jne
cmpsl
xlat
and
and
xor
cmpsl
js
rolb
arpl
adc
aam
pop
dec
mov
xor
xorl
xor
and
mov
mov
dec
cmp
lcall
std
insl
jl
popa
adc
add
add
inc
mov
fcompl
add
push
push
enter
or
faddl
mov
xchg
xor
sbb
movsl
sub
add
icebp
popf
decl
scas
popl
mov
lret
mov
lcall
xchg
mov
fdivp
jmp
pop
mov
jns
inc
cmp
jmp
popf
pop
enter
ret
cli
xlat
out
mov
fcom
insb
jle
lret
fisttpl
insl
xlat
movsl
cmpsb
add
js
cld
mov
lret
cmp
movsl
sarb
add
lds
imul
xchg
mov
cli
jg
push
stc
cmp
insl
stos
sbb
xchg
jb
jmp
sbb
ss
ds
add
nop
mov
out
lock
mov
int
stc
push
push
pusha
insb
sub
and
sub
inc
rolb
inc
push
and
andb
test
loop
xchg
stc
sub
sbb
cmp
cmpsl
jg
loopne
mov
xchg
mov
xor
jb
dec
rcl
jmp
pushf
push
xor
leave
xor
push
push
dec
cld
cmp
cltd
fs
and
cmp
fnstenv
inc
scas
nopl
mov
add
iret
and
negl
push
add
mov
xorb
or
cld
xor
lock
pushaw
cmp
pop
xor
nop
mov
in
push
mov
add
out
hlt
sbb
das
xlat
pop
adc
dec
inc
push
jnp
repnz
mov
out
imul
xor
mov
jp
lods
out
and
pop
mov
lcall
stc
jp
cld
xchg
call
lock
xchg
mull
jl
popf
pushf
adc
rol
movsl
sbb
cmp
popa
sbb
xor
jp
imul
jne
test
shlb
jge
ds
lods
fwait
pop
jmp
loopne
inc
sbb
pop
fcoms
leave
outsl
mov
cmpb
data16
pusha
cmp
js
ja
movaps
fwait
pop
mov
sti
and
xchg
xchg
stos
xor
outsl
loope
jnp
into
or
test
loop
sbb
popa
ljmp
repnz
or
or
ljmp
push
insb
inc
in
pop
scas
pop
mov
pop
pushf
and
cmp
loope
push
xchg
cmpsl
sarl
push
jge
pop
lods
ds
pop
cmp
jmp
inc
pop
ja
lret
fsubl
jmp
push
xor
stos
adc
mov
pop
insl
cmpsl
in
mov
xor
psrlw
xor
add
mov
sahf
adc
dec
shrb
ds
fcmovnu
push
jne
scas
sub
mov
int
mov
orl
call
test
sbb
lea
mov
scas
inc
adc
scas
sbb
xchg
or
jle
push
add
add
mov
mov
cmp
insl
and
addl
scas
mov
or
push
pop
pop
fcmovnb
cld
fwait
sub
popa
and
outsb
xchg
rclb
pop
xchg
push
lahf
orb
cmc
cmpsl
inc
daa
mov
lret
jbe
hlt
cmp
insb
adc
push
shlb
mov
add
xchg
inc
nop
sbb
cmp
jle
dec
stos
jbe
in
dec
rol
fisubs
inc
mov
stos
inc
frstor
pop
inc
mov
fcoml
and
scas
adc
jle
dec
fs
cmp
jg
dec
sahf
push
sbb
and
mov
sar
push
xchg
sahf
xchg
mov
lahf
push
cmp
add
add
addr16
or
lds
flds
fs
aad
movb
les
push
xor
or
push
cmc
dec
adc
stos
pusha
push
stos
push
stos
imul
cmp
test
mov
fnsave
clc
lahf
push
iret
xor
cmpsb
and
jno
ret
sarb
dec
scas
cmp
rep
cmp
pop
pusha
push
and
push
mov
pop
rcrb
pop
xchg
and
or
sbb
ret
orl
or
dec
mov
or
inc
add
adc
aas
pop
pop
lcall
xlat
jnp
popa
scas
cmpsl
fcomip
cmpl
add
pop
push
add
lahf
test
xchg
in
sub
cmc
mov
adc
jg
add
jmp
xlat
cmp
xorb
lcall
lock
aad
ret
ds
dec
rcrb
sahf
pop
sub
inc
push
sub
cmp
repnz
loope
dec
jle
inc
jns
mulb
cs
icebp
pop
mov
sub
test
dec
fdiv
add
mov
pop
inc
xor
pop
inc
sub
push
add
dec
les
pushf
cmc
dec
pop
push
mov
sub
push
outsb
paddw
jb
rclb
inc
mov
rolb
aam
cmpsl
repz
sbbb
shl
fwait
dec
daa
ds
adc
sbb
sub
and
push
ficoms
xor
and
icebp
fldcw
cli
and
mov
imul
adc
xchg
das
sbb
icebp
jge
mov
shrl
pop
inc
sub
and
sarl
mov
jmp
in
shrb
out
mov
lods
ljmp
xchg
iret
lods
xor
jg
imul
adc
std
xchg
lods
jbe
inc
mov
mov
out
sub
and
add
int
ficomps
and
daa
mov
xor
mov
sub
movsb
mov
inc
loope
pop
in
lcall
mov
mov
cs
xchg
add
or
jb
out
xor
sub
in
mov
aaa
pop
out
rcl
lock
scas
mov
push
and
aam
ljmp
cmpsb
lcall
cmp
pop
push
pusha
inc
mov
dec
xchg
js
mov
cmp
sbb
mov
push
xchg
adcb
loop
rclb
ret
cmpsl
lods
popf
adc
ja
sbb
xor
mov
mov
movntq
test
cmp
mov
aaa
leave
stos
repnz
push
push
lcall
cmp
push
nop
pop
xchg
ret
mov
jns
xchg
pop
gs
fildl
push
lds
mov
cmc
int3
scas
loop
inc
and
mov
mov
mov
scas
xchg
mov
xchg
stc
cmp
dec
jle
jne
pop
mov
push
jge
dec
mov
nop
loopne
mov
adc
aad
addb
pop
xor
jno
gs
jnp
or
aad
push
and
mov
dec
sbb
ja
inc
mov
lods
daa
and
adc
push
mov
mov
push
inc
movsb
and
cmp
and
movsl
mov
push
inc
dec
push
xor
std
outsl
pop
ljmp
sub
in
popa
mov
das
dec
inc
test
mov
or
adc
or
dec
mov
lcall
bound
arpl
add
mov
aam
lret
ss
out
fldl
push
inc
and
sbb
xchg
mov
lret
arpl
cld
push
mov
std
push
scas
shrl
roll
insl
shl
sub
mov
arpl
aad
jno
repnz
inc
stos
scas
aaa
push
jno
inc
jg
xor
mov
push
aam
jnp
lods
out
shr
ffree
jbe
cmp
stos
pop
clc
or
xchg
jl
movsb
pop
lods
mov
adcl
mov
fsubrp
push
dec
aas
sbb
into
or
adc
and
add
and
scas
sub
inc
bound
xlat
mov
outsb
xchg
dec
outsl
rcr
in
jno
and
aad
xor
mov
outsl
bound
mov
and
and
leave
rorl
xchg
mov
in
pusha
push
push
adc
xchg
jecxz
xchg
inc
ja
and
sub
outsb
popf
mov
mov
dec
push
push
mov
ljmp
mov
jo
iret
loopne
ja
or
aaa
aad
mov
sub
cmp
mov
add
sub
or
fcmove
and
jmp
mov
jp
or
loop
paddusw
add
inc
xor
push
mov
pop
mov
jecxz
cmpsl
cwtl
les
pusha
mov
mov
jo
divl
mov
repz
add
leave
shlb
imul
add
mov
inc
sbb
loope
out
and
dec
out
push
inc
push
sub
mov
stos
enter
add
lcall
sub
cmpsl
adc
fmulp
pop
xor
es
jp
pop
dec
outsb
dec
or
mov
xchg
movsb
cmpsb
sub
loope
mov
popa
lea
lret
stos
sti
and
sub
lock
clc
mov
cmpsl
mov
dec
popa
mov
sbb
ret
daa
inc
sub
jae
aad
jno
mov
pushf
test
pop
and
cmp
call
push
sbb
adc
imul
xor
dec
rol
xchg
cltd
mul
xor
loop
mov
or
stc
int3
int
cwtl
repz
call
inc
mov
add
pop
mov
popf
dec
cmc
adc
xor
jo
in
dec
pop
loopne
lret
xchg
mov
out
jb
sbb
pop
inc
cmp
xchg
test
mov
pop
imul
pusha
test
xor
test
movsl
dec
jno
xor
dec
loop
lret
push
movsb
mov
sub
lcall
adc
pop
sti
rcll
out
sbbl
and
jg
mov
or
sbb
inc
push
cmp
pop
mov
pop
or
or
popf
out
call
pushf
fwait
push
sti
push
popa
lods
and
fdivrl
adc
retw
lahf
mov
push
outsl
sbb
hlt
or
add
inc
call
or
test
mov
xlat
call
bound
js
gs
push
pop
mov
leave
js
lock
fildll
fldt
mov
fs
cs
lahf
and
ss
pop
fnclex
cs
mov
imul
add
sub
outsb
xchg
adc
jns
jne
xor
inc
ds
jo
nop
mov
cmp
cld
out
push
jmp
jne
add
push
pop
lods
pushw
add
pop
sti
mov
mov
sbb
or
pop
negl
out
bound
sbb
mov
mov
dec
sarl
inc
icebp
pop
push
mov
stc
cwtl
insl
and
lret
jp
mov
add
shr
sub
sbb
fstl
aas
in
xchg
mov
dec
addr16
jg
push
sub
scas
sbb
andl
mov
loopne
das
nop
call
stos
lods
js
cmp
push
loope
scas
daa
stc
jge
lahf
push
mov
mov
rcrb
cmp
movsl
ret
pop
arpl
xchg
pop
js
pop
pop
aaa
lods
insl
shlb
cs
mov
cld
mov
mov
int3
addr16
push
fs
push
scas
icebp
inc
addl
aas
call
aam
xchg
cmp
jnp
xor
popf
jns
push
outsl
and
jno
push
jbe
mov
cld
mov
lods
sub
jmp
jbe
test
pop
push
inc
bound
call
sbb
sub
jae
lahf
and
shrb
sbb
ds
xchg
insl
into
cs
mov
dec
sbb
adc
aam
push
push
xor
mov
adcb
lds
popaw
inc
out
sub
push
popa
xchg
xchg
stos
jmp
into
andb
test
inc
imul
inc
sub
aas
lock
or
mov
popa
dec
xchg
xchg
imull
aaa
in
push
xor
je
mov
lret
mov
inc
insl
in
inc
cmpsb
or
xchg
and
push
inc
cmp
dec
ja
push
shl
and
mov
adc
cli
jp
mov
jno
or
dec
xor
or
in
adc
iret
lcall
imul
mov
out
inc
psadbw
test
and
aad
xor
push
lahf
or
add
ret
loopne
or
cltd
pop
je
insl
mov
dec
leave
xchg
or
stos
mov
ret
popa
lea
xchg
mov
inc
dec
js
lahf
xchg
xchg
popa
mov
adc
cltd
and
pop
pusha
in
mov
sti
nop
jae
pop
fdivrs
outsl
cmpsb
add
push
fucomi
repz
jp
jne
jp
ja
cli
lahf
mov
lahf
scas
xor
or
and
mov
arpl
call
sbb
dec
cmp
test
enter
xchg
or
jnp
lds
add
dec
mov
repz
add
push
sti
je
and
mov
cmp
jg
push
and
loopne
cld
mov
cmp
and
xchg
push
add
cmp
cmp
pop
scas
mov
scas
cmp
mov
fs
cs
mov
or
das
push
dec
push
sub
fwait
std
xorw
adc
fcmovne
mov
sbb
pop
push
js
lods
xchg
sbb
mov
or
movb
ljmp
jno
jns
cld
cmp
sahf
adc
mov
aaa
pop
sub
cmp
xchg
mov
das
add
ljmp
sub
sahf
hlt
pop
sub
mov
cmp
jno
add
cwtl
ja
inc
or
push
addr16
mov
xorl
jns
pop
movsb
addr16
rcl
imul
xor
mov
stos
cmp
or
dec
fs
iret
bound
lods
push
add
or
mov
daa
mov
gs
dec
inc
push
push
sbbb
and
adc
or
lods
in
imul
rcrl
inc
fucomp
mov
mov
lods
jmp
lock
add
xlat
push
jns
outsl
and
adc
out
xor
mov
movsb
jno
mov
xorb
popf
inc
jnp
out
jl
call
jmp
das
xor
cmpsb
sbb
mov
imul
inc
and
pop
jnp
jo
aam
cltd
test
fcmovb
pop
aas
int
pusha
xlat
mov
leave
sbb
pop
aas
shlb
and
cmp
andb
jbe
or
xor
stos
mov
jno
repnz
xchg
aam
or
inc
mov
mov
cltd
dec
sbb
jns
loope
lods
loop
sub
mov
call
pop
dec
std
lret
loope
mov
loope
add
sbb
dec
push
or
sub
jg
jg
scas
aaa
mov
push
xchg
mov
dec
dec
hlt
mov
inc
stos
jmp
arpl
arpl
xor
hlt
adc
repnz
mov
jns
mov
cmp
mov
cmpsl
jl
cltd
sbb
pop
lods
jle
sbb
js
addl
pushf
and
or
in
sub
and
ret
repnz
iret
mov
lds
nop
cmp
sahf
pop
mov
jb
cmp
jg
loopne
mov
test
mov
mov
and
or
jb
addl
lcall
mov
shlb
xchg
add
xchg
call
leave
xlat
or
test
xchg
cwtl
jp
test
stc
jecxz
lds
out
das
or
or
add
adc
and
daa
xor
sar
dec
insb
and
adc
mov
mov
mov
inc
lds
dec
arpl
popa
sub
or
not
jecxz
aam
loope
das
pop
or
cmp
lahf
mov
add
dec
stos
mov
popa
jmp
lods
or
pusha
loopne
mov
jl
inc
in
dec
ds
cmp
sbb
pop
add
aaa
pop
mov
fcomip
xor
mov
clc
daa
outsb
sahf
sarb
stos
imul
in
mov
or
inc
add
pop
mov
and
xchg
mov
imul
arpl
cmpsb
dec
adc
jg
inc
jmp
cmp
xchg
and
xor
rcr
sub
aas
cs
dec
add
push
inc
in
cltd
mov
push
imul
push
subb
fwait
and
test
cmp
leave
ljmp
sbb
jns
lahf
aad
out
in
das
xor
int3
inc
sti
loope
or
xor
cmp
in
iret
adc
mov
push
stos
push
enter
xchg
mov
cmpsl
xchg
out
sbb
cmp
int3
xlat
add
mov
jo
int3
jl
leave
test
adc
out
adc
aad
stos
pusha
add
mov
pop
lods
iret
mov
or
scas
sub
pop
inc
mov
je
fs
pop
xchg
jbe
push
push
mov
in
cmp
inc
mov
cmp
inc
js
test
lods
std
xlat
shlb
test
ss
lods
mov
outsb
push
cld
pop
out
cmp
cmp
add
xlat
or
in
lock
xlat
loopne
pop
add
push
loope
fldl
bound
adc
sub
pop
add
add
repz
add
dec
lahf
xlat
mov
lret
lcall
and
cmpb
in
int3
pusha
or
int
xchg
sbb
mov
push
shlb
rcrb
add
xor
jl
fisttpl
push
sub
xchg
pop
xor
jne
push
mov
imul
push
inc
push
outsb
add
pushf
clc
fisubs
mov
out
js
test
mov
add
jl
fsubrs
into
sbbl
sarb
gs
mov
mov
int3
adc
aaa
adc
push
shl
mov
or
in
out
push
mov
ljmp
adc
out
xor
sbb
ss
and
notb
lcall
xor
push
xor
inc
mov
mov
xlat
les
and
push
mov
mov
dec
or
add
in
mov
lods
ljmp
jae
and
mov
adc
imul
mov
dec
mov
jge
std
stc
mov
int3
mov
dec
imul
or
adc
mov
xor
cmpsl
ret
push
push
push
repnz
jo
fs
mov
pop
insb
push
mov
repnz
jecxz
je
add
and
inc
aam
das
shl
jns
inc
push
mov
rcrl
cli
les
clc
es
mov
inc
sbb
addr16
mov
jge
subl
ds
stc
out
imulb
das
pop
push
int
jmp
xor
dec
addb
and
sar
cmpsb
jl
pusha
out
cmpsb
and
aaa
push
xorb
loop
mov
lret
jno
mov
add
mov
inc
adc
push
pop
not
dec
repnz
aaa
icebp
outsl
mov
jb
stos
cld
imul
xchg
scas
ds
mov
mov
sub
adc
aam
mov
xchg
inc
and
cmc
jne
or
and
les
daa
push
sbb
mov
mov
cmpsl
bound
imul
inc
sub
pop
jo
push
aad
jns
mov
stos
pop
int
cmp
shlb
mov
inc
lods
or
loop
mov
int3
fdivs
into
dec
cld
add
jbe
movsb
fisubrs
sub
mov
and
mov
aam
push
mov
and
mov
js
xchg
sub
lods
jb
sbb
cmp
xchg
adc
loope
sbb
leave
jb
sub
cwtl
jae
mov
gs
nop
xor
nop
fsubr
xor
dec
mov
mov
mov
adc
dec
xchg
fstpt
cmpsb
les
insl
jne
or
insl
mov
mov
pop
inc
repnz
adc
mov
adc
xchg
insl
ja
cmp
fdivs
popa
jle
xchg
fdivrs
xorl
mov
jb
fsubl
mov
pop
adc
mov
daa
jno
add
push
cs
dec
mov
ds
add
dec
aas
mov
cmc
pop
pop
movsl
cli
push
int3
and
cmp
pop
add
sar
loopne
xchg
jle
pop
xchg
int
dec
das
bound
adc
imul
inc
xchg
mov
mov
in
jo
push
cwtl
stc
dec
sub
loopne
xchg
inc
mov
push
aad
jno
fildl
dec
or
mov
push
pop
jb
ja
jnp
enter
sub
pop
into
insb
rcrb
outsb
inc
out
out
rcrl
leave
dec
addr16
in
ja
imul
push
clc
mov
clc
fwait
or
xchg
xor
sbb
test
dec
movsb
testl
loop,pt
pop
mov
cmp
jle
cmp
incb
xchg
mov
je
fistpll
mov
das
insl
pop
push
insb
lret
addb
jl
popf
flds
daa
leave
loope
mov
test
and
outsb
lcall
loop
jg
mov
dec
xor
or
fidivrs
leave
or
add
adc
xor
inc
inc
xchg
daa
lods
push
cmpsb
jne
inc
gs
dec
push
and
lea
wbinvd
insb
fwait
jp
cmp
xor
add
lds
fs
enter
mov
call
in
sub
or
in
mov
and
rcll
outsl
lcall
call
je
out
rclb
lods
in
sub
xor
gs
fwait
push
cld
xor
mov
mov
outsb
xchg
divb
mov
pop
cmp
jmp
outsl
fadds
push
xchg
in
add
and
inc
mov
cwtl
xchg
rcl
cmpsl
imul
cmpsb
push
mov
mov
cmp
jle
sbbl
fsubrl
mov
shrb
mov
cs
out
pop
lock
mov
lahf
dec
int
orl
cmp
hlt
inc
and
and
dec
icebp
sub
sbb
xchg
jae
cmc
sti
ja
fistpl
adc
sub
ret
js
ss
pop
push
in
xlat
sub
rcrb
fcomip
lcall
out
xchg
sub
outsb
in
sub
lahf
cmp
sbb
cvttps2pi
lods
pop
mov
out
clc
sbb
lahf
xor
ja
movsb
andl
in
dec
and
sub
imul
mov
int
popa
movsl
jp
in
enter
int
adcb
das
jns
shlb
xchg
or
push
nopl
out
dec
outsb
sub
insb
pushf
insl
lds
xchg
test
xlat
adc
rep
or
fwait
push
push
sbb
add
adc
popl
cmp
dec
jbe
shll
and
outsb
mov
push
jo
pause
mov
popa
jae
ljmp
mov
push
dec
push
sti
ljmp
dec
xchg
adcl
inc
hlt
pop
xor
xchg
cs
jmp
xchg
pop
filds
and
sbb
xchg
lret
pop
and
movl
dec
sbb
jo
loope
dec
jno
xchg
sti
pop
xchg
push
xchg
add
sbb
in
iret
mov
js
xor
in
xchg
jp
mov
mov
fdivrs
push
jge
fmuls
add
mov
cmp
test
scas
push
jnp
jbe
add
andb
push
mov
pop
mov
xchg
mov
test
mov
aad
push
sub
fistpll
add
js
xchg
xor
faddl
out
repz
jo
cmp
jmp
cmp
jle
push
add
lods
sub
inc
xchg
jnp
cmp
mov
lcall
mov
push
mov
rcrb
js
mov
fwait
inc
js
stc
fwait
std
test
mov
cs
xchg
scas
mov
xor
aas
xchg
ljmp
aam
xchg
mov
dec
cmp
and
add
mov
mov
stos
add
pop
js
fbld
rcrl
mov
jne
sub
xor
fldcw
in
iret
sub
xchg
sub
mov
cwtl
dec
xor
dec
sub
sarb
push
jnp
mov
outsb
mov
sub
imul
cmpsl
lds
repnz
mov
sub
fwait
dec
inc
xchg
sub
lahf
pop
mov
les
test
mov
xchg
xchg
dec
add
xor
xchg
cltd
sar
dec
sub
pop
sbb
jns
dec
cli
jns
lds
ds
mov
adc
cmp
cld
icebp
std
les
es
push
nop
shlb
push
sub
dec
jns
daa
aaa
cmp
or
arpl
cwtl
pop
mov
mov
sbb
mov
shrl
imul
sub
icebp
bound
sbb
repz
push
jns
movsl
cs
cmp
adc
lods
lds
int
mov
pop
sti
mov
movsl
or
and
fst
push
fwait
xchg
fidivrs
lret
mov
loop
add
dec
mov
inc
ljmp
and
sub
bound
shrl
cli
sub
stos
dec
or
pop
jno
sub
sbb
add
jg
xlat
in
js
pop
aad
adc
ljmp
xor
lret
adcl
mov
xchg
jo
jns
xor
sbb
mov
js
dec
add
push
mov
jge
je
cmp
fsubrs
arpl
cltd
lahf
fwait
and
es
push
ret
sahf
pop
dec
daa
movups
sar
dec
mov
fcom
push
push
and
xor
lcall
push
sub
mov
shl
xor
push
lock
jae
mov
pop
mov
xacquire
ja
not
push
xor
push
mov
fcoms
outsl
inc
and
test
ret
and
mov
pop
or
xlat
in
mov
arpl
loopne
add
or
mov
movsl
and
xchg
cmp
push
movsl
jecxz
rcll
out
jp
xchg
call
mov
test
mov
std
add
xor
add
andl
xor
popa
adc
cmp
xchg
pop
decl
je
popa
imul
ret
jcxz
sbb
nop
push
and
inc
mov
test
jo
mov
mov
fcompl
loop
gs
jbe
outsl
adc
jnp
arpl
push
xor
cli
pop
or
cs
cltd
cmp
fisubrs
mov
mov
orl
lods
insb
jae
pop
mov
inc
pop
cmp
jae
outsb
aaa
mov
jmp
int
loope
les
sub
aad
pop
hlt
push
jns
inc
cmp
fistl
mov
mov
loope
dec
es
cmpsb
or
xchg
in
paddd
jmp
sbb
repnz
sub
push
add
jecxz
mov
cmp
add
push
mov
shll
pop
cmp
leave
jne
adc
or
inc
ja
push
dec
sub
scas
push
or
pop
xor
in
push
insl
mov
test
inc
idivb
mov
mov
add
dec
and
jno
repnz
cmp
imul
mov
dec
fiaddl
cwtl
les
cmc
cld
lahf
mov
jb
mov
mov
xor
sbb
sbb
in
in
dec
pop
jl
addr16
mov
xor
inc
pop
mov
mov
xor
fdivp
sub
mov
and
push
push
jb
subl
mov
or
push
cmp
icebp
pop
push
push
les
cli
cmp
arpl
dec
add
scas
in
rclb
test
cmp
push
jg
mov
cltd
mov
xor
add
xor
scas
and
cmp
test
cltd
mov
mov
jp
imul
mov
test
sarl
mov
fcoms
mov
divl
scas
ljmp
sub
mov
jle
jecxz
int
std
icebp
dec
scas
nop
int
jne
dec
inc
inc
in
jns
pop
icebp
add
dec
repnz
fcmove
sub
jne
mov
bound
jbe
cmp
cmp
fsubs
xchg
mov
ja
les
xchg
sub
jecxz,pt
cmp
sub
jnp
mov
std
jo
mov
enter
shl
arpl
popa
fidivrs
out
adcb
imul
insb
loope
dec
adc
push
push
or
xor
mov
icebp
testl
jne
jge
mov
gs
mov
and
adc
and
mov
js
lahf
push
insb
cmpsb
aaa
data16
loop
mov
sub
cmp
mov
sub
cmp
popf
rcll
jp
imul
push
adc
hlt
sub
mov
neg
outsb
xchg
pop
fcomi
push
add
xlat
sbb
movsl
js
mov
div
or
test
jge
sbb
insb
rcr
out
nop
stos
mov
stos
aas
outsb
mov
dec
ds
mov
inc
inc
ja
or
fdiv
popa
sub
dec
cmpsb
mulb
movsb
fmuls
dec
sub
mov
shll
cltd
lahf
adcl
and
cmc
aaa
xchg
orl
daa
sub
loope
or
push
mov
xchg
push
roll
dec
inc
pop
orl
mov
test
push
sbb
icebp
repnz
pop
mov
xor
enter
lcall
xchg
adc
add
lods
inc
fistpll
cltd
jno
jo
xor
pop
xor
xor
aaa
jno
arpl
sti
cmpsb
push
movsl
sbb
out
add
sub
mov
arpl
addl
scas
sahf
dec
in
mov
ret
mov
push
cld
test
add
pop
adc
out
mov
mov
outsb
fs
fcmovnb
cmp
addb
pop
popl
xor
fcoml
inc
jle
jmp
inc
mov
fdivrl
mov
sti
add
mov
fstpt
int
inc
scas
sub
mov
outsb
or
pop
les
div
loop
sbb
loop
or
add
ds
sbb
and
sub
mov
mov
dec
and
mov
mov
push
pushf
xor
sbb
inc
scas
jb
xchg
jb
test
mov
std
sbb
test
mov
sbb
andl
inc
adc
add
outsb
jl
and
out
iret
mov
mov
jns
cld
xor
jge
xor
sti
and
mov
lods
xchg
cmp
loop
cmpsl
pop
xor
push
mulb
arpl
ja
dec
lea
or
mov
jge
subl
mov
into
push
mov
mov
mov
pop
inc
jmp
xchg
pop
cmp
xorb
mov
mov
test
lock
add
lret
xchg
mov
iret
repnz
xchg
cmpsb
adc
mov
sub
aam
sub
sub
ds
pop
adc
pop
xchg
or
adc
push
popa
iret
xchg
mov
es
mov
jp
push
loopne
flds
ficoms
ret
xchg
imul
pop
xlat
sbb
in
loop
jnp
test
test
push
rcl
int3
imul
arpl
dec
nop
rcll
loope
dec
or
movsl
ret
and
dec
xchg
ljmp
dec
jmp
shlb
dec
mov
in
push
movsl
pop
xchg
lea
xor
push
add
inc
shll
push
mov
and
cmpb
in
int
jae
addb
mov
mov
xchg
imul
sar
xchg
add
shrb
shll
push
test
xor
xchg
dec
dec
iret
sarb
arpl
lods
cmc
add
test
fs
sub
xchg
xchg
jne
pop
or
lret
jnp
pop
cmp
int3
mov
and
sub
inc
shll
cmpsl
movsl
les
inc
sbb
dec
pushf
aaa
test
or
subb
add
or
les
cmpsb
fisttpll
mov
ds
cmp
mov
pop
sbb
stos
test
call
outsb
int3
outsb
pop
test
sahf
cmc
inc
scas
add
and
dec
out
aam
xchg
inc
sbb
adc
jnp
jbe
fldz
or
cmc
pop
stc
mov
ss
sub
ja
mov
in
and
xchg
push
sbbb
mov
xor
jb
jp
jle
test
mull
mov
stc
repnz
push
cmp
xor
add
lods
das
scas
pop
mov
mov
pusha
filds
nop
lret
sbb
sbb
mov
cld
push
adc
xchg
mov
xchg
push
xor
mov
mov
roll
mov
mov
stc
lods
inc
adc
and
ficomps
mov
xchg
outsb
inc
cli
or
inc
jnp
aad
shrb
pop
and
mov
daa
arpl
sti
adc
mov
outsb
lret
pop
imul
add
dec
mov
call
jbe
lea
xorb
jle
fidivrl
and
xchg
xchg
rcrl
xor
pusha
sbbl
pop
dec
xchg
xchg
pop
test
xor
cmpsl
bswap
or
mov
loop
jb
dec
dec
add
cli
mov
push
xor
in
ret
mov
mov
rcrl
negb
pushl
repnz
push
mov
mov
ljmp
cmp
jne
icebp
jae
inc
xor
pop
das
and
stc
or
aad
xor
inc
mov
orb
ja
and
test
leave
mov
add
jae
ss
pop
jo
ljmp
rcll
jno
rorl
int3
les
call
mov
movhps
enter
daa
jnp
xchg
clc
out
clc
adc
xchg
inc
rcll
cli
or
pusha
mov
push
mov
pushf
cmp
lds
mov
pop
mov
pusha
fcompl
test
jg
adcl
mov
and
enter
aad
xor
repnz
fwait
cmpsb
dec
adc
dec
shrb
outsl
pop
push
icebp
and
dec
jb
dec
arpl
inc
dec
js
aad
adc
mov
push
mov
inc
test
pop
imul
add
lds
sar
mov
xor
int
outsb
pop
mov
jno
add
mov
fdivrl
call
cmpsb
xor
push
icebp
sub
fisubs
mov
xor
das
jae
or
sti
jge
dec
gs
or
mov
test
push
pusha
lcall
push
add
fisttps
jbe
push
scas
shld
jp
or
add
xor
test
enter
push
jae
outsl
pop
pusha
lcall
jo
outsb
jbe
cli
sub
lahf
mov
imul
pop
mov
mov
inc
pop
jecxz
lods
cmp
sbb
stc
inc
scas
jo
jecxz
mov
jecxz
push
in
bound
leave
stos
mov
mov
loop
outsb
adc
xor
push
cmp
pop
mov
pop
jo
or
sahf
out
lods
in
or
mov
xor
xchg
outsb
bound
pop
out
pop
fs
push
sub
adc
push
mov
add
subl
hlt
mov
pop
std
jo
lret
mov
push
xchg
inc
rcrl
xchg
mov
stos
push
stc
std
pop
imul
es
fsubs
push
xchg
inc
pop
sub
jns
cmpsl
mov
das
pop
aaa
jp
xchg
push
xor
andb
in
jmp
push
xor
pop
mov
int3
pop
cmpsl
ss
negb
test
mov
and
cmp
sbb
xchg
xor
xorl
sub
inc
add
mov
adc
mov
insb
cmp
repz
jae
cmp
outsb
mov
inc
cmp
nop
in
aas
fldenv
jmp
insb
pop
or
mov
popa
jp
push
lret
push
negl
xchg
ja
loope
leave
xchg
dec
and
ret
pop
cmpsl
jo
inc
nop
jne
xchg
rcr
inc
imul
mov
lahf
and
add
div
or
inc
mov
or
cmp
xlat
mov
repnz
ds
enter
clc
pop
adc
inc
xor
mov
rcrb
cmp
adc
push
xor
loopne
mov
mov
xor
add
nop
fistps
adc
notb
mov
and
mov
or
leave
and
xchg
pusha
fnstsw
mov
aam
mov
xchg
dec
enter
test
xchg
sub
jb
shrb
xlat
mov
jl
and
jnp
cld
xor
sbb
push
jbe
sbb
movsl
jmp
inc
inc
sub
pop
les
or
cmpsl
push
movsl
out
scas
adc
fsubl
sbb
es
out
movsb
mov
mov
adc
sub
test
sbb
cmp
xorl
std
mov
sub
xchg
mov
out
arpl
push
lods
test
xchg
push
ljmp
sub
and
lods
int
ds
insb
add
dec
dec
xchg
scas
les
or
xor
mov
mov
mov
lods
lock
out
cmp
pop
xor
mov
repnz
mov
repz
mov
fstl
xchg
cmp
sahf
pop
mov
cmp
sbb
stc
push
adc
cmp
fistpl
mov
insb
push
scas
roll
das
test
pushw
xchg
movsl
aam
or
inc
mov
jae
pop
pop
sub
mov
mov
das
fs
cmp
push
lea
mov
pop
les
cmpb
cmp
jnp
scas
inc
pop
cmp
cmc
dec
mov
dec
push
daa
arpl
subl
ror
jge
xor
jmp
dec
jge
inc
dec
je
mov
sbb
imul
xor
jns
cmc
call
ret
sbb
pusha
push
or
call
scas
xchg
mov
rorb
into
ja
mov
les
mov
cmc
fadds
and
or
out
push
mov
mov
sbb
jecxz
jl
lods
cli
nop
iret
les
bound
subl
sub
loope
and
dec
push
mov
popf
out
popf
pop
aam
push
inc
test
cmp
sub
jb
jmp
lea
lea
xlat
xor
xchg
cmp
scas
xor
out
fwait
sub
js
jle
fwait
in
lods
sbb
sbb
sbb
or
or
idivb
rorl
adc
push
add
movsb
mov
lahf
outsl
aas
or
lods
nop
cmpsb
inc
addl
lea
cwtl
sbb
sub
pop
xchg
jmp
mov
sti
cwtl
insb
mov
insb
movsl
jnp
xchg
sbb
fiadds
pop
enter
popa
push
jbe
mov
push
cmp
xor
cmp
fdivrl
cmp
shrb
mov
sbb
adc
xor
push
int
xchg
mov
jns
mov
pop
gs
mov
push
inc
fists
and
jbe
scas
leave
sub
push
xchg
xchg
outsl
leave
xlat
adc
loopne
mov
push
pop
ret
loopne
rcr
outsb
stc
pop
das
inc
lcall
out
jg
pop
push
cs
xor
xor
sahf
out
inc
out
std
stc
out
sbbb
dec
aam
test
push
in
jle
inc
inc
imul
jbe
lret
repz
icebp
and
icebp
xchg
or
pop
sub
bound
cmp
push
dec
aaa
mov
pop
gs
sbbb
fisubl
pop
ss
xor
test
bound
cli
leave
pushf
pop
push
popa
xchg
adc
pop
jl
cmpsl
into
shlb
sbb
sub
sub
out
mov
or
test
outsb
fisttpl
gs
ss
inc
scas
sbb
xlat
mov
cmp
inc
fwait
jge
das
pusha
pop
arpl
cli
cmp
mov
mov
idivb
in
cmc
inc
div
sbb
addr16
pop
fidivs
enter
testb
pop
jo
cs
fsubs
xchg
xchg
sub
lods
stos
das
repnz
lcall
push
std
jmp
les
mov
imul
pop
xor
add
ror
test
in
add
or
xchg
or
xor
sub
rolb
sub
jecxz
pop
or
add
cld
inc
xlat
out
mov
jp
cltd
push
pop
subb
cmp
rclb
fisubl
das
and
jns
mov
outsb
pop
pop
ja
mov
mov
cmp
movsb
bound
rolb
data16
aas
in
sbb
xor
ficoml
cmp
outsl
cmpsb
inc
and
loopne
iret
ret
cwtl
subl
mov
mov
sbb
ja
rolb
adc
pop
outsl
or
xchg
adc
cmpsb
sub
and
push
cmc
mov
mov
cwtl
loopne
xchg
mov
mov
pop
adc
lcall
mov
aad
lcall
pop
sahf
jge
pop
jg
js
and
xchg
mov
lock
lds
int
push
mull
scas
ljmp
out
sub
adc
or
cwtl
movl
lods
mov
mov
xchg
fistpl
pop
clc
xchg
fldt
xchg
pushf
mov
xchg
and
ficompl
pop
jnp
or
in
dec
fimull
test
mov
xor
push
xlat
pop
icebp
test
sub
adc
test
cmp
push
sbb
dec
or
arpl
aas
fcom
daa
jo
cli
inc
lods
and
shlb
xor
cmp
imul
fs
call
popf
jg
inc
mov
ret
js
lcall
stos
std
jge
lock
shll
push
jbe
out
stc
inc
je
and
ss
mov
cmp
in
movsb
mov
lock
imul
jb
lods
sub
or
sti
adc
lret
sub
nop
fistpl
aad
fidivl
pop
arpl
shll
mov
inc
cmovae
daa
pushf
mov
bound
add
nop
sahf
jge
mov
scas
dec
push
or
aam
sahf
add
sub
inc
and
shrb
pop
adc
cmp
lods
imul
jbe
mov
or
mov
xchg
dec
jnp
sub
aam
push
pop
gs
aad
fwait
sbb
insl
idiv
mov
xchg
or
in
adc
cltd
and
sbb
pop
jne
pop
in
sbb
aam
dec
mov
fsts
push
jg
cmpb
inc
in
movsl
lret
test
mov
jg
xchg
adcb
imul
xchg
adc
push
lock
cmp
xor
and
sub
xor
lds
test
lcall
adc
jo
sahf
xchg
jb
divl
cmp
cmp
mov
ds
jnp
mov
mov
arpl
adc
mov
lahf
jmp
sub
jbe
dec
lret
mov
lret
mov
sub
push
rolb
loope
adc
fldl
addr16
pushl
inc
dec
or
mov
out
jne
cmpsl
stc
in
ljmp
sub
lea
stos
cmp
add
andl
mov
and
lcall
lret
sub
lds
mov
adc
mov
dec
popa
fs
inc
dec
mov
and
xchg
outsb
lret
inc
lcall
fstpl
fxch
or
test
stos
es
sbb
nop
inc
xor
fisttpll
pop
pop
xchg
jae
psubusb
jo
jbe
cs
dec
call
xor
sbb
popa
ljmp
xor
and
ficoml
dec
sub
adc
nop
inc
jmp
test
lock
adc
fistl
outsl
stos
shll
xchg
mov
xor
mov
mov
lods
pop
popa
mov
pop
lcall
sbb
pop
sbb
jmp
loop
sub
sub
jecxz
insb
loope
mov
pop
imul
mov
gs
cmp
imul
mov
mov
add
sbb
xchg
jl
push
mov
adc
inc
enter
and
sub
jne
lock
jb
cmpsl
and
xchg
cmp
and
mov
fsubr
cmpl
lahf
shll
xor
ret
ffree
xchg
ret
jnp
test
sbb
and
add
repnz
das
inc
hlt
inc
test
jge
push
js
shlb
pop
into
imul
in
xchg
jnp
jb
daa
push
push
movsb
js
ret
lcall
pop
push
mov
jl
iret
dec
or
xchg
pop
in
outsb
cmp
push
xchg
mov
pop
test
in
and
test
lods
loopne
dec
cli
mov
clc
push
gs
aaa
imul
cltd
xchg
loop
repz
mov
xchg
in
mov
int
push
shrl
orps
inc
sti
xchg
xchg
adc
xor
and
pop
fs
arpl
mov
push
xor
fwait
lahf
ficoml
push
call
mov
andl
xchg
iret
adc
push
pop
sbb
adc
mov
es
cmp
adc
data16
cmpsl
andb
call
mov
roll
lods
mov
xchg
sbb
scas
cli
rcrb
fwait
cmp
inc
fadd
mov
xlat
unpckhps
js
fcom
sbb
movsl
pop
cld
insl
jbe
insl
sub
xchg
inc
xor
icebp
inc
mov
dec
add
add
sahf
stc
fsubrs
mov
sahf
inc
das
std
and
or
mov
mov
pop
sub
js
scas
stos
out
rolb
xchg
dec
ret
and
into
push
dec
out
pop
repnz
and
fwait
pop
mov
in
jmp
mov
adc
adc
and
pop
notb
popa
mov
negb
test
hlt
xlat
pop
inc
push
xor
fucomi
shlb
dec
fisubrs
push
mov
test
insb
mov
sti
jecxz
mov
mov
out
mov
test
repnz
dec
das
sub
or
hlt
pop
and
aad
jl
push
js
sbb
add
pop
lea
mov
lahf
and
and
sbb
inc
mov
cmp
data16
push
repz
idiv
rclb
or
cmp
popf
mov
or
jne
mov
jo
push
cmp
jecxz
push
inc
leave
aaa
mov
xor
andb
push
lret
dec
pop
mov
mov
pushf
testl
notb
cli
inc
push
fnstsw
add
out
ja
ret
pop
imul
daa
add
test
dec
push
scas
and
mov
repnz
xchg
cmp
enter
mov
stos
jae
push
xor
xor
gs
jg
jg
scas
xor
add
mov
jo
dec
jge
ljmp
jns
inc
mov
data16
out
or
jl
fdivrs
test
in
push
loopne
mov
xchg
pop
je
xor
aas
loopne
sbb
iret
dec
lret
xor
or
xor
fldcw
sti
sbb
fmuls
test
jno
jae
daa
cmc
mov
or
mov
mov
lahf
xor
das
test
pop
push
add
pop
fldt
xorb
push
loop
xchg
xor
sahf
test
or
mov
xrelease
orl
je
test
add
filds
xor
cmpsb
js
gs
lahf
push
add
cmpsl
loop
ret
push
xchg
mulb
dec
sbb
imul
cmp
push
insb
xchg
push
mov
xor
add
test
lcall
mov
fld
xchg
popa
add
addb
stc
mov
jp
gs
sub
mov
lcall
popf
or
push
test
pop
cmpsb
fdivrs
int3
mov
movsb
pusha
or
nop
fcoml
sbb
xchg
shll
cmp
mov
pop
mov
push
mov
setns
sahf
cmc
mov
inc
cltd
pusha
sbb
cli
rclb
iret
cmp
loope
fcomps
sub
sbb
jle
xchg
dec
add
es
inc
and
jne
mov
lahf
clc
lret
decl
jae
inc
mov
xor
popa
call
cmp
sbb
inc
mov
loop
arpl
push
xchg
pushf
cmp
xor
into
stc
push
insb
in
sub
adc
popl
clc
aam
xlat
shr
add
or
or
pop
flds
mov
lret
cmpsb
xchg
mov
pop
and
cmp
mov
jo
cmp
xchg
pop
gs
sbb
adc
mov
push
fmull
test
popa
pop
cli
icebp
mov
add
jno
fcmove
cmp
xchg
cmp
mov
enter
test
pop
push
call
xchg
adc
shll
mov
and
pop
mov
cmp
pop
jno
pop
mov
jbe
xor
inc
push
or
lea
icebp
and
rcrb
notb
mov
push
out
imul
cwtl
sbb
jns
dec
cmp
or
cmp
inc
fistpll
inc
js
dec
mov
xchg
inc
movsb
jp
push
xor
or
jae
ds
popa
xor
xchg
mov
out
dec
and
sub
or
jecxz
ror
and
mov
insb
inc
cmc
mov
lret
xchg
xchg
jl
lods
adc
repz
and
mov
loop
cmp
mov
roll
mov
iret
mov
fmul
stc
xchg
mov
insl
inc
sub
std
aaa
xchg
rep
andl
pop
call
cmpsb
xor
xor
sub
mov
dec
aam
mov
shrl
mov
fwait
int
and
cli
stos
mov
mov
lret
push
lret
sub
add
pop
ss
push
xor
jnp
jns
out
cmp
adc
dec
neg
test
add
sub
in
shl
or
fsts
jbe
inc
sub
adc
test
sub
xchg
xchg
jb
in
and
xor
into
sti
mov
sar
das
jo
mov
ds
idiv
pushf
sbb
int
jns
rep
mov
jbe
dec
xchg
mov
shlb
mov
bswap
cs
notb
cmp
outsl
sahf
mov
inc
push
push
je
sub
gs
test
push
hlt
push
or
clc
pop
pop
dec
mov
lods
fs
in
shl
outsb
jmp
sbb
xchg
imul
lea
rorl
sbbb
loop
xchg
inc
aaa
mov
aaa
fdivs
adcb
clc
loopne
mov
icebp
cmp
sub
jg
scas
out
jmp
in
roll
arpl
inc
and
sub
adc
and
add
inc
pop
pop
adc
shlb
sub
les
lret
fisubrl
sbb
push
lods
jp
jl
mov
hlt
mov
dec
sbb
stos
ss
xchg
pop
jbe
cmp
mov
push
add
cld
fsub
inc
das
inc
aam
and
xor
je
xor
js
test
and
mov
addb
rcll
fwait
adc
mov
roll
and
leave
aad
fst
cmp
mov
imul
cmc
popf
pop
test
fildl
nop
in
andb
push
dec
repz
pop
scas
or
clc
sbb
fistpl
daa
ret
lods
out
xor
push
sbb
or
push
stos
and
imul
mov
out
mov
rep
cli
adc
mov
cmp
mov
mov
popa
inc
jo
mov
sub
xchg
negl
icebp
cmp
pop
jne
es
and
push
sub
es
lret
mov
pushf
push
push
cli
and
and
fnstsw
mov
and
xor
dec
adc
rol
aaa
addr16
mov
mov
enter
ja
or
loop
loopne
repz
aaa
and
mov
and
sbb
mov
inc
int3
addl
mov
pop
jmp
xor
aaa
xchg
icebp
lods
sbb
xor
nop
or
or
testb
lds
sbb
popf
pushf
movsb
dec
push
mov
xchg
aaa
imul
pop
fs
pushf
sbb
xor
pop
push
fdivrp
cmpsl
push
or
mov
arpl
inc
out
mov
loop
xchg
rolb
mov
adc
inc
xchg
lds
mov
dec
pop
adc
jae
in
dec
ret
pop
xor
int3
pop
xor
xchg
les
push
mov
iret
dec
mov
push
add
popf
mov
inc
push
cmc
add
das
cwtl
inc
cltd
cld
sub
testb
dec
arpl
pop
mov
int3
inc
add
ret
cmp
aam
mov
xor
fwait
cmp
les
pop
xor
out
mov
add
mov
cmp
mov
jno
pop
mov
jne
add
push
int3
loopne
push
into
lret
push
loop
clc
lds
cs
in
insb
dec
scas
push
adc
lret
movsb
imul
into
cmpsl
cli
cwtl
popf
js
and
lods
call
lods
or
cli
xchg
adc
addr16
cmp
stc
add
out
jg
jo
sbb
push
mov
cmpsl
mov
nop
addr16
mov
loope
add
jb
ret
push
xchg
cmp
xchg
pop
xor
outsl
in
inc
sarl
std
aam
jns
sub
fcompl
leave
insb
imull
dec
adc
int3
xchg
test
rorb
lahf
fstps
xor
push
rcrl
jge
aas
fists
adc
xchg
sub
iret
mov
push
jbe
lcall
call
call
push
arpl
test
fidivrs
test
ficoms
js
cmp
sub
aad
xor
pop
sahf
pop
fmuls
cli
push
cld
aaa
stos
adc
inc
add
dec
dec
xor
xchg
out
cmc
ss
add
arpl
jns
insl
push
in
mov
pop
test
or
test
lret
cmp
jecxz
movsl
push
rcll
and
mov
sub
into
pop
ror
insb
add
mov
iret
movsl
mov
insb
cli
sbb
pushf
inc
mov
popf
lcall
xor
cs
or
xor
cld
xor
dec
add
push
fnstenv
sub
add
call
fidivs
xchg
mov
popf
push
sub
sahf
sbb
sub
dec
nop
adc
jae
insb
push
fsubrp
loope
mov
and
cvttps2pi
dec
or
adc
push
push
jo
jg
and
test
aas
lahf
jno
push
mov
sub
xchg
mov
adc
mov
jo
mov
mov
sub
cmp
and
push
pop
ret
repz
cmpb
in
in
outsb
add
jmp
nopl
inc
les
mov
leave
pushf
and
inc
dec
sbb
sbb
and
insl
sub
aad
fsubl
shrb
xchg
mov
ss
pushf
cmp
aad
dec
lcall
shrb
ret
test
arpl
jecxz
lea
in
mov
cmpsb
das
xchg
fisubrl
out
xor
scas
mov
ret
icebp
in
or
mov
jl
leave
dec
rclb
or
adc
and
scas
xor
mov
dec
xchg
mov
out
inc
mov
mov
loop
jno
rol
lahf
mov
xchg
push
mov
mov
aas
pop
inc
pop
push
ret
pop
cli
pop
dec
adc
stos
and
push
inc
out
fnstsw
jecxz
xor
and
and
sbb
mov
out
test
test
cli
test
cmpsb
sub
jmp
aam
adc
std
pusha
add
std
out
movsl
popa
arpl
mov
outsl
shlb
sub
adc
scas
stos
push
mov
pushf
call
pop
insb
inc
gs
mov
pop
outsb
and
add
mov
inc
repz
int3
mov
mov
add
add
je
dec
gs
call
xlat
jle
decl
mov
ficompl
hlt
insl
icebp
fstl
aad
andb
cmp
les
mov
ds
xor
test
stos
add
jle
xchg
rclb
mov
int3
int
sbb
ds
dec
ret
mov
addr16
push
inc
outsb
mov
push
sti
sbb
lahf
loopne
adc
arpl
popa
push
add
jb
push
fildl
sbb
mulb
iret
js
pusha
dec
mov
or
out
xchg
mov
call
sahf
cmpl
pop
fcomps
mov
in
inc
popa
or
add
ret
mov
cmp
pop
jo
sub
cld
jmp
xchg
in
jnp
jl
jne
mov
adc
lahf
cmp
sub
dec
in
push
pop
dec
inc
adc
fnstcw
inc
in
jmp
jae
sahf
mov
fsubrs
push
nop
sub
iret
mov
pusha
notl
cli
jl
and
icebp
notb
out
out
xchg
mov
popf
xchg
jno
sbbl
mov
dec
lock
enter
outsl
cs
mov
fsts
out
addr16
not
add
mov
pop
add
lea
pop
sub
mov
mov
test
sub
cltd
dec
inc
gs
mov
mov
icebp
lar
push
cmpsb
or
fidivrl
and
scas
pop
xchg
push
or
inc
pop
pop
adc
mov
push
scas
mov
mov
into
sbb
mov
jb
push
in
mov
ret
sub
cmp
mov
push
sbb
add
or
out
ret
jnp
ja
mov
fcmovne
add
xor
stos
xchg
imul
mov
mov
nop
mov
divl
rcl
leave
cli
sub
mov
sub
jb
loopne
out
mov
stos
mov
lcall
stos
aam
push
pop
imul
jge
and
ss
adc
outsb
mov
pop
xchg
mov
inc
xor
imul
mov
stos
repnz
aaa
pop
testb
xor
add
sub
dec
jbe
jecxz
push
int3
mov
hlt
and
jne
lcall
jg
imul
and
pop
cwtl
add
mov
popf
sub
lds
insl
insb
push
xchg
repz
or
call
jg
sbb
f2xm1
cmp
imul
mov
aas
sub
cltd
sbb
or
pop
jle
insl
sahf
dec
jnp
adc
shlb
jbe
push
mov
push
vucomiss
pop
mov
in
je
cltd
insl
cmp
lret
inc
xor
les
fwait
popf
xor
insl
xor
testl
lret
push
mov
jle
and
lret
aas
and
sarb
roll
aad
mov
xor
xor
lock
loope
inc
addl
jnp
mov
dec
adc
add
inc
push
lea
xor
mov
cmc
jno
adc
daa
xor
aaa
outsl
je
sub
mov
jnp
or
stc
inc
outsb
loop
push
cmpsb
mov
popa
int
jb
dec
cmp
jle
push
mov
add
sub
std
or
into
jecxz
idivl
and
push
inc
fsts
daa
mov
es
cmpsl
mov
add
or
lea
mov
jae
je
inc
shl
insl
jl
je
sub
mov
rol
pusha
cltd
cmpsl
dec
lea
or
inc
in
aaa
lods
xlat
test
cmp
ficoms
gs
insb
dec
add
push
cs
dec
out
sbb
xchg
stc
jae
jno
aaa
cmp
mov
aaa
aad
and
hlt
xor
sub
xchg
fs
dec
mov
test
fidivrl
mov
xlat
mov
jo
mov
xor
insl
jp
pop
outsb
mov
sbb
stos
out
movsb
dec
or
insl
fisttps
imul
ret
fcmovnb
cmp
jno
lea
xchg
jmp
insb
stc
stos
insb
jne
xchg
sarb
lds
cmpsb
insb
dec
sub
loopne
push
test
jo
ljmp
enter
lahf
push
jns
or
es
stc
cmp
xor
adc
xor
js
pop
stos
add
jne
xchg
out
out
pop
add
mov
push
inc
ficompl
add
add
pop
cmpsb
adc
lods
les
cmp
nop
push
aam
dec
xchg
push
pop
cmp
negl
daa
inc
cmpl
iret
neg
test
adc
add
or
xchg
rcl
mov
std
scas
dec
cltd
je
mov
in
pop
cmc
mov
test
push
mov
fcompl
sub
int3
loope
mov
icebp
and
xor
pop
mov
or
and
push
sub
push
lea
xchg
push
add
das
dec
or
hlt
sub
inc
lahf
pop
push
hlt
rorb
and
mov
ds
mov
into
pop
jbe
bswap
scas
sub
mov
adc
pop
cmp
add
out
or
pop
stos
xor
mov
mov
jo
rolb
jns
in
stos
test
fistl
jmp
addb
pop
outsl
sub
sbb
or
gs
xchg
fucomp
nop
pop
inc
push
xor
mov
xchg
js
xchg
push
loop
pop
out
push
cmpsb
sbb
push
fstl
pushf
mov
imul
clc
out
cmp
sub
stos
ja
stc
loope
fbld
cli
jge
rcrb
out
shlb
xor
test
add
cmp
shl
jae
mov
out
sub
pushf
lcall
jmp
in
out
sub
loop
notb
outsl
subb
mov
enter
inc
mov
into
mov
push
inc
xchg
dec
arpl
inc
or
fs
rcrb
fs
or
add
push
xchg
jno
pop
pop
lea
insb
fidivrl
mov
test
shl
cmc
mov
adc
push
mov
lahf
lods
mov
cmp
mov
push
into
cmp
test
int
out
sub
lds
imul
sbb
sbb
mov
dec
pop
mov
mov
test
stc
lds
ret
sub
loopne
push
pushl
cmc
enter
adc
cwtl
sahf
insb
ficomps
sub
fisttpll
loope
mov
ret
mov
mov
or
cmpsb
in
lods
sub
sbbb
adc
adc
cmp
push
lods
sahf
test
cli
ljmp
xchg
inc
test
or
stc
dec
xor
aaa
push
dec
cld
adc
icebp
adc
sti
shll
hlt
and
and
push
aad
xor
xorb
sbb
adcl
out
ret
sbb
mov
jle
sub
sub
addr16
ret
lcall
test
cli
cs
mov
std
mov
popa
mov
lods
or
or
rorl
pop
inc
add
outsl
mov
adc
push
mov
add
in
mov
adc
ret
xchg
pop
pop
sub
cmp
and
into
imulb
push
test
jl
std
popa
popa
stos
pop
fwait
hlt
bnd
test
sub
add
cld
aaa
mov
push
push
imul
iret
sbb
or
xchg
shll
popf
fwait
mov
imul
adc
cmc
push
cmc
mov
aad
loope
push
leave
movsb
jbe
dec
jae
adc
mov
push
iret
aam
mov
ret
ljmp
cmp
cmp
pop
adc
or
shll
and
jbe
mov
or
pop
mov
inc
mov
sti
mov
orb
inc
insb
dec
lcall
adc
lods
rcl
xor
ss
aad
cli
mov
jns
adc
push
stc
out
xchg
in
xor
data16
hlt
or
pop
mov
and
push
sarl
adc
hlt
fcmovnb
sub
and
inc
xor
adc
pop
xor
mov
mov
pop
xlat
dec
mov
or
sbb
into
dec
jns
cli
dec
into
lret
lea
xor
mov
ja
sub
cltd
in
rorb
aad
or
jmp
pop
dec
mov
xchg
adc
sbb
mov
pop
cmp
pop
shl
in
dec
out
and
push
mov
mov
in
cmc
and
inc
xchg
adc
out
rcr
xor
hlt
mov
repnz
jecxz
lds
pop
pop
mov
loope
dec
and
faddp
sub
push
aaa
movsl
js
xor
sbb
arpl
test
sub
jp
mov
imul
cmp
sub
sahf
fs
adc
xchg
pop
repnz
ds
jno
shr
mov
dec
dec
ljmp
and
xor
jae
fwait
cmp
std
pusha
arpl
aaa
dec
sbb
inc
mov
pop
mov
sub
adc
xchg
adc
daa
push
adc
stc
into
xchg
loop
rol
fildll
ret
orl
repnz
in
pop
sbb
ret
and
out
out
jecxz
inc
xor
repnz
lock
pop
icebp
aad
int
push
push
mov
ficoms
mov
pop
xor
mov
adc
mov
mov
mov
inc
sbb
mov
xlat
orl
daa
push
jl
mov
xor
pop
mov
mov
dec
lret
jae
scas
in
mov
sbb
and
adc
jnp
lock
xor
mov
dec
push
fcmovnb
xchg
lock
adc
dec
test
std
lea
mov
notb
cmp
sub
sub
jns
push
mov
mov
std
ss
imul
repz
sbb
lea
cmpsb
cli
adc
sbb
sbb
cmp
cmp
lcall
xor
fdivrl
adc
push
jns
inc
in
or
faddp
orl
out
inc
imul
mov
scas
sbb
jo
mov
cmpsl
mov
sbb
xchg
pushf
mov
adc
into
arpl
daa
filds
sub
out
jns
gs
test
and
sbbl
push
lret
mov
and
or
jo
bound
mov
push
frstor
loopne
sub
dec
pop
enter
or
or
ret
or
pushf
ljmp
es
cld
repz
xchg
and
mov
push
lahf
sti
mov
fcmove
gs
and
addr16
shrb
loop
ret
ds
jmp
and
out
and
inc
scas
mov
or
dec
ror
nop
sbb
ljmp
jg
insb
out
loope
jmp
push
scas
repnz
sbb
outsl
mov
mov
sub
inc
test
shll
mov
out
rcr
lods
mov
sti
push
in
test
loopne
mov
lret
mov
mov
mov
lock
mov
push
fs
fucomi
test
pushf
cmpsb
mov
rep
nop
test
jbe
push
inc
outsl
xchg
shlb
mov
iret
pop
lahf
out
ja
es
sbb
add
icebp
and
adc
pop
add
and
andl
push
sbb
mov
stc
mov
cmp
mov
inc
xchg
mov
adc
jns
dec
pop
lea
cmp
push
aam
insb
sbb
dec
mov
mov
out
ret
mov
adc
inc
inc
mov
pop
imul
and
jmp
lcall
mov
mov
mov
es
je
or
subl
pop
xor
scas
cmp
xchg
pop
inc
sub
push
ds
cmp
mov
inc
sbb
jb
je
inc
pop
sub
add
cmp
sbb
test
std
push
sub
iret
jbe
xchg
clc
xchg
push
shl
cmp
push
mov
sbb
dec
mov
push
ret
shrb
std
out
cwtl
mov
adc
dec
xor
adc
pop
hlt
inc
dec
add
addr16
push
mov
repnz
aaa
jmp
ffree
rclb
outsl
out
enter
mov
sub
inc
fbld
sti
inc
dec
ds
mov
pop
xchg
dec
pop
subb
mov
enter
js
mov
dec
mov
iret
pop
pop
ret
idivb
fucomip
xchg
mov
xchg
test
mov
adc
sbbb
cmp
arpl
mov
inc
pop
xchg
xor
add
add
mov
stos
jge
aam
test
je
shr
adcb
jle
imulb
inc
daa
fs
pushf
pop
adc
xor
test
jge
cld
jo
sub
cmp
imul
sbb
mov
pop
xor
cmpsb
ficompl
lahf
xchg
sbb
out
fisttpll
mov
mov
stos
or
pop
push
mov
mov
push
mov
mov
mov
xchg
popf
aam
lods
cmp
add
dec
pop
outsb
xchg
out
repnz
sub
fiadds
xor
lock
cmp
jb
mov
clc
or
ja
jnp
cld
iret
fiaddl
std
in
mov
jnp
aad
dec
inc
push
and
repnz
mov
mov
sbb
jg
sub
mov
rcrb
pop
adc
test
clc
xor
out
cmpsl
pop
cmp
repnz
xor
in
push
or
push
push
rcrb
clc
js
adc
jge
mov
vmovdqa
push
add
aas
adc
mov
ds
clc
adc
dec
xchg
add
add
inc
and
or
fwait
cmp
fs
xor
sub
and
push
sbb
jbe
cld
in
test
in
mov
shld
mov
les
mov
mov
pusha
sbb
mov
jno
jl
int
out
pop
scas
pop
cld
or
test
roll
mov
sbb
cs
je
mov
adc
arpl
cmp
inc
pop
mov
or
pop
push
mov
jl
pop
add
mov
dec
rorb
loop
mov
jb
pop
shlb
outsl
and
or
movsb
push
out
cltd
arpl
ret
lahf
sub
imul
inc
idivb
adc
push
les
scas
repnz
push
mov
jmp
scas
es
in
jl
das
mov
add
gs
add
cld
add
inc
mov
and
test
or
mov
adc
addr16
xor
movl
cltd
cmp
mov
sbb
pushf
xabort
jnp
mov
pop
data16
jle
incl
jp
loopne
push
sbb
int3
lahf
sti
rolb
and
arpl
int
jb
test
out
sub
cmp
gs
ja
adc
sbb
lcall
cmp
arpl
and
ds
mov
sub
sbb
lret
jle
sarl
out
xchg
mov
dec
stos
adc
or
add
arpl
or
in
iret
adc
incb
xchg
jg
xchg
jmp
pushf
push
mov
adcb
fcoms
movsb
out
sti
add
cmp
mov
push
sub
outsl
cmp
scas
stc
jle
fidivs
lret
mov
pop
cmpsl
add
xor
cmc
jl
in
add
imul
mov
sbb
imul
dec
loope
daa
sbbb
fsubrl
add
add
imul
push
mov
subb
sbb
iret
pop
sub
pop
std
out
and
mov
lods
cs
lods
cmpsl
mov
sti
shr
test
cmp
enter
fs
leave
push
jp
into
cmp
test
loopne
mov
lock
ljmp
push
inc
pop
and
pop
cli
mov
mov
inc
call
lahf
lret
or
inc
inc
fmul
adc
scas
outsl
sub
xor
and
inc
scas
iret
pop
pusha
pusha
xor
shl
ret
inc
sbb
loopne
es
imul
or
pop
ja
push
push
pusha
add
fwait
and
dec
xchg
aaa
out
cvtdq2ps
dec
leave
sti
lock
mov
call
mov
leave
adc
sbb
and
push
inc
adc
xchg
shll
enter
clc
roll
data16
xor
and
loope
push
sysenter
fs
xchg
mov
leave
rorl
sub
and
xor
insl
xchg
xlat
test
jbe
rcrl
shrb
loopne
mull
pop
sarb
mov
pop
cld
clc
push
cmp
stc
gs
subb
subl
jle
cmpsl
jle
shr
popa
data16
xor
out
scas
lods
inc
xor
jbe
bswap
dec
inc
push
fcoms
mov
loopne
inc
cltd
mov
jg
mov
addr16
and
fucomp
test
mov
jns
int
sbb
movsb
enter
jp
pop
push
dec
js
push
cltd
xchg
adc
or
inc
mov
mov
xor
mov
js
adc
xor
or
and
std
fsubs
push
xorb
and
and
mov
iret
roll
cs
repnz
inc
cltd
sbb
mov
test
xlat
sti
cld
inc
xor
jl
adc
fcompl
push
jecxz
push
adc
je
dec
inc
mov
jp
mov
pop
jno
mov
nop
lea
mov
aas
fdivl
cwtl
rcrl
push
cmp
inc
add
fwait
aam
shl
mov
daa
cltd
pop
sbb
adc
std
cmp
insb
pushf
jns
xor
push
mov
sub
mov
cmp
mov
lea
dec
testl
insl
xchg
lea
jnp
outsb
pop
movsl
cmc
dec
xchg
rcr
dec
pop
push
push
aas
ret
or
xor
pop
ja
mov
mov
xchg
cmpsb
aaa
xchg
and
movsb
add
inc
jmp
push
sti
or
cld
dec
jnp
push
sbb
lret
mov
stos
loop
enter
add
push
mov
cmpsb
cmpsl
push
sbbw
cmp
push
and
leave
xor
xchg
fildl
xor
push
mov
loopne
xor
lock
and
mov
cmc
sti
xor
pop
xchg
push
xor
std
push
test
ret
popf
xchg
fidivrl
jg
lods
out
cs
rorl
and
das
mov
inc
ds
lahf
mov
call
cmpsl
cld
jmp
and
movsl
and
mov
add
adc
push
insb
out
arpl
out
inc
les
jge
or
mov
sbb
in
jge
orb
out
add
adc
adc
inc
int
cltd
cmp
test
mov
js
in
pop
adc
sub
stc
xchg
out
add
xor
cld
in
loop
inc
dec
push
push
ja
ss
lods
out
pop
pop
movsb
adc
flds
push
ljmp
pop
incl
stos
roll
insb
loope
jno
xlat
fiaddl
leave
je
cmp
and
xor
mov
shlb
pop
mov
std
mov
mov
lods
enter
pop
je
dec
mov
js
imul
insb
mov
adc
movsl
aad
movsb
mov
leave
rcll
mov
jg
aam
pushf
bound
or
push
dec
je
pop
cli
sar
repz
loop
jg
or
call
out
out
mov
std
jnp
xor
pushf
pop
aam
out
cmp
out
andb
inc
sbb
insl
fisubs
push
out
jae
cld
pop
lret
adc
jne
sti
cmpsb
bnd
inc
mov
push
test
int
lret
sub
mov
cmp
mov
pusha
push
test
xchg
xchg
mov
push
mov
inc
das
mov
scas
jae
int3
xor
mov
add
push
push
sti
int
pop
lock
mov
test
pop
fwait
in
push
ljmp
fnstsw
add
loop
clc
in
mov
cli
je
pop
insl
shl
cmp
pushl
mov
sbb
xchg
mov
fdivrs
add
xchg
cmp
mov
jno
push
pop
adc
mov
inc
cmp
inc
pop
fisttps
dec
add
nop
adc
idiv
bnd
fdivl
rclb
xchg
mov
and
mov
dec
hlt
mov
out
or
cmpsl
ret
xor
clc
clc
xor
imul
jnp
sub
stc
pop
push
scas
jmp
push
jp
add
je
in
in
in
mov
xorb
xchg
cmpsb
push
sub
add
inc
and
pop
mov
not
jge
xor
mov
add
mov
and
and
sbb
mov
add
dec
int
add
jmp
pop
dec
incb
lock
fs
mov
xor
scas
xchg
xor
mov
add
iret
movsl
jns
cmp
pop
clc
fidivs
loopne
pop
jbe
insl
icebp
mov
pop
movl
pushf
dec
sbb
sub
aaa
cmp
add
ret
cwtl
outsb
andl
sbb
pop
lods
push
xlat
adc
or
xchg
outsb
sbb
or
xchg
out
cmpb
aaa
inc
pop
pop
push
insl
pusha
in
mul
sub
icebp
push
sbb
jbe
sub
sti
xchg
ja
in
ds
xchg
cmpb
in
mov
mov
xchg
das
mov
push
hlt
bound
repnz
xchg
inc
sbb
sub
jp
add
in
jg
push
ja
add
iret
mov
xor
dec
pop
fmull
ss
adc
sahf
xchg
mov
icebp
xchg
insl
inc
and
ficoms
jne
lret
xchg
xlat
imul
push
ja
jmp
iret
daa
push
cmp
fldl
scas
pop
dec
mov
mov
sbbl
add
mov
loop
jmp
adc
jo
xchg
pop
das
aas
push
jo
testl
or
imul
jge
sub
xor
sti
adc
leave
cmpsb
stc
mov
adc
das
push
lock
cmp
or
popf
int
pop
test
push
fistps
sbb
sbb
mov
test
or
into
inc
fwait
inc
and
adc
gs
mov
xchg
sub
mov
hlt
jle
xor
notl
loopne
std
test
push
push
fnstenv
fidivrs
jae
imul
inc
push
hlt
adc
fs
jns
sbb
xor
adc
stos
and
sub
xchg
aam
notb
in
sub
push
xor
add
jg
and
push
mov
mov
mov
push
pop
jo
std
jg
in
cmp
lahf
add
icebp
repz
enter
jnp
push
lock
or
ficoml
dec
xchg
loop
ja
add
xor
shlb
cld
outsb
out
xchg
sahf
ss
fcomps
hlt
ffreep
loope
add
pop
adc
mov
movlps
mov
int3
dec
sub
jne
ficoms
stos
clc
cmc
pop
inc
fnstsw
xlat
incb
loope
and
and
rclb
pop
xchg
xchg
std
arpl
clc
jg
add
lods
movsb
cltd
lcall
dec
fistps
test
push
icebp
popf
xor
jo
cmp
cmp
cmpsb
adc
jne
jecxz
nop
jp
test
mov
cmp
jo
jmp
sbbl
mov
mov
clc
or
add
mov
or
ljmp
xor
adc
dec
inc
push
fsubrp
push
mov
and
dec
dec
pop
push
sbb
push
sbb
xor
lea
mov
jge
in
dec
cmpsl
stos
mov
push
pop
es
cwtl
movsl
icebp
mov
xor
shll
stc
jne
aam
and
lret
sub
add
adc
cmp
xchg
cmp
clc
sub
in
and
dec
push
jo
scas
jmp
pop
dec
mov
jo
icebp
rorl
test
fbstp
ja
adc
and
fwait
shlb
test
std
xor
add
push
int3
sub
pop
inc
jle
mov
pop
pop
lds
lds
jns
cmp
mov
cmc
sub
fbld
insl
mov
popa
out
jmp
outsl
fisubrs
out
subl
mov
sbb
push
inc
jecxz
adc
add
push
outsl
xor
xchg
mov
adc
les
jbe
mov
add
mov
test
cs
stos
ret
or
cmp
insb
or
mov
mov
push
and
ds
jns
inc
imul
sub
jp
jns
or
idivb
and
into
sti
jp
pop
adc
cmpl
cmpsb
mov
scas
add
jnp
sbb
sahf
sarl
sbbb
mov
mov
idivl
js
mov
movsl
fsubrl
fidivrl
mov
sbb
inc
sub
dec
fidivs
jecxz
movsl
dec
jmp
xlat
xor
xor
jl
add
fstps
inc
repz
loopne
push
add
xor
gs
push
stos
imulb
mov
or
pop
inc
adc
int3
cltd
in
mov
mov
loopne
mov
xor
pop
addr16
pop
xchg
xlat
jl
ds
stc
adc
lcall
or
xchg
cs
pop
fldt
out
nop
lods
std
mov
jge
jmp
push
jb
push
dec
cmp
testl
mov
inc
adc
rcrb
sbb
daa
adc
loope
mov
mov
pushfw
push
cs
in
mov
or
ds
mov
push
js
xlat
sub
incb
inc
lahf
vandnpd
inc
or
mov
dec
aas
cmp
jns
and
xor
in
cmp
xchg
shll
mov
dec
in
fstl
and
loopne
jl
mov
lcall
push
pop
fstpt
ljmp
ljmp
ds
xchg
inc
dec
ret
jbe
gs
sbb
push
or
sub
jge
jae
cltd
xchg
adc
mov
jnp
mov
repnz
xor
popl
push
mov
cmpsb
popf
mov
test
jbe
loope
mov
in
ljmp
and
test
push
ret
push
or
in
sarb
in
and
out
inc
mov
adc
add
jle
imul
lahf
cmp
add
jp
shll
in
cltd
xchg
add
add
fistps
mov
fldcw
xlat
in
xchg
mov
lret
mov
cli
xor
popa
jecxz
jmp
or
xor
imul
ljmp
jmp
clc
aad
fstpt
aaa
mov
in
and
cmp
dec
inc
shll
cmpsb
rclb
xor
inc
fidivs
cmc
or
lock
lods
nop
inc
xchg
ds
orb
pushf
xor
or
stos
out
inc
xor
test
dec
xor
add
mov
sahf
lods
or
arpl
scas
mov
rorl
xorb
cmp
call
in
xchg
dec
mov
sti
ss
daa
dec
lcall
mov
out
mov
xorb
or
imul
das
in
jns
pop
jae
sub
xor
push
aaa
inc
sub
cli
lods
and
arpl
mov
mov
cs
jge
jmp
push
in
pop
cltd
incl
lahf
cmp
xor
xor
jecxz
out
push
xchg
les
mov
aas
dec
pop
inc
jb
sbb
add
pop
inc
jae
pop
adc
sub
pop
cld
mov
mov
out
jg
fmull
adc
xor
push
sahf
arpl
mov
inc
cmp
push
sub
pop
mov
ljmp
add
dec
pushf
mov
mov
cmp
lcall
sar
stc
push
mov
xchg
dec
inc
testl
adc
mov
lods
js
pop
lock
pop
and
sti
jne
shlb
idivl
cmc
cmp
inc
jne
test
and
enter
loop
subl
movl
or
rorb
mov
or
xor
sbbb
or
adc
sub
mov
add
pop
fstps
pop
push
fldt
cmpsl
fisttpl
xor
fcomi
and
lahf
lret
out
mov
subb
mov
add
pop
notb
or
and
sub
xorl
test
int
ret
ss
adc
mov
les
mov
and
iret
push
mov
stc
or
or
adc
mov
cmp
inc
mov
es
lods
mov
into
cltd
mov
cli
lods
xchg
sbb
hlt
push
sub
jmp
out
fdiv
xor
stos
outsl
push
pop
cmp
scas
pushf
push
fucomip
out
mov
aam
pop
cmp
xchg
push
jge
aam
push
cmpsb
jno
lret
push
clc
adc
ds
xchg
cwtl
jb
mov
mov
inc
scas
mov
push
enter
filds
data16
test
xchg
and
shlb
fcoms
push
sub
mov
and
inc
daa
jnp
mov
inc
arpl
mov
add
call
inc
movsb
pusha
xchg
adc
in
dec
or
scas
push
cwtl
fdivrs
push
aam
fldl
jne
leave
mov
icebp
int
inc
fcmovnb
hlt
cmp
xchg
jbe
inc
push
fs
mov
adc
into
jne
xchg
rorb
jl
adcb
mov
in
sbb
cmc
fmuls
cmp
icebp
sti
push
inc
repz
mov
loope
cmpsb
lock
fwait
mov
dec
sub
outsb
jecxz
sub
push
and
mov
jge
mov
stos
or
out
push
test
adc
or
fs
dec
sbb
shrl
nop
pop
pop
pop
and
jnp
cwtl
xor
jmp
mov
sub
enter
add
lock
ret
popa
ret
adc
sub
xchg
idivb
sbb
jmp
out
aas
or
and
test
mov
addr16
and
hlt
cmp
mov
test
xor
adc
add
push
mov
sub
jbe
pop
xchg
mov
imul
les
out
add
imul
xchg
mov
push
fucomip
movsl
rcr
outsb
aas
std
std
add
or
and
adc
xchg
fmuls
clc
dec
sub
and
pushf
push
mov
or
loopne
pop
xchg
ja
popa
mov
ja
test
inc
rorb
cs
and
mov
movzbl
and
jl
fbstp
pop
inc
dec
mov
enter
ja
inc
fucomi
aas
pushf
jnp
inc
lea
lods
xor
sub
adc
test
mull
loope
subl
lret
cmp
inc
repz
test
dec
mov
mov
ret
outsl
jb
jle
call
outsl
xor
fimull
mov
jno
or
mov
push
loopne
lds
inc
inc
cltd
jo
in
jmp
stos
pop
xor
or
hlt
iret
in
scas
fwait
lret
in
jae
jae
and
pop
jnp
mul
cli
push
dec
push
int3
adc
jl
and
cmp
pop
dec
aad
push
mov
je
pop
jb
mov
jno
jns
lret
test
popf
inc
lret
inc
inc
cltd
sbb
mov
insl
xchg
outsb
sub
in
jne
and
xchg
adc
jl
jmp
xor
push
add
adc
or
cmp
add
mov
fbld
mov
jecxz
cld
jns
jl
fsub
mov
out
push
out
adc
or
add
xchg
add
push
mov
aad
stc
popf
in
jns
in
and
iret
and
inc
mov
xchg
loope
jo
xlat
nop
push
push
rcr
test
es
push
mov
sub
ja
aaa
adc
shrb
sbb
fildl
pop
outsb
shl
les
pop
or
pop
add
pushf
das
xor
mov
xchg
in
mov
lods
cmpsl
cmp
bound
xchg
fs
jle
cld
cmpsl
mov
outsb
sbb
hlt
lss
pop
pop
cmpl
dec
fisubs
cmpsb
inc
inc
xor
scas
cmpb
jg
sbb
in
loopne
sarb
leave
dec
insb
xor
cmpsl
or
addr16
out
mov
cli
xorl
popa
mov
mov
pop
xchg
push
lret
mov
mov
xor
push
and
dec
sbb
sbb
pop
in
cltd
rcrl
mov
scas
mov
ja
lods
jnp
fidivrs
bound
imul
mov
stos
mov
scas
in
push
into
iret
sbb
jne
cmp
stc
cmp
dec
shr
xchg
orb
mov
push
call
mov
sahf
bound
jns
insl
test
andb
mov
pop
xchg
and
jl
or
jecxz
dec
stos
pcmpeqb
pop
and
ds
pop
dec
flds
mov
pop
adcb
addl
fisubrl
mov
mov
sbb
daa
pop
jmp
xchg
shll
push
jg
cmpsl
and
sbb
leave
pop
inc
cwtl
xlat
inc
sub
mov
mov
outsl
xlat
add
sbb
inc
pop
idivl
mov
mov
aas
or
mov
fistpl
daa
pusha
pop
sbb
cltd
repz
push
push
shlb
fsubrs
mov
int
add
clc
sarl
jb
nop
das
notl
je
inc
or
push
jb
int
mov
xchg
jg
push
or
flds
out
xlat
arpl
js
loopne
mov
lret
int
sub
sub
outsl
ljmp
mov
or
sub
scas
imul
ret
cs
scas
addb
push
push
xchg
inc
pop
sbb
xchg
pop
xlat
lods
mov
or
pushf
jecxz
and
xor
dec
mov
pop
cmpsl
pop
mov
cmp
sbb
pop
in
jl
inc
sbb
sarl
leave
popf
jp
addr16
fisubrs
dec
inc
pushf
mov
jl
out
sbb
jecxz
enter
lock
test
xchg
lods
xor
nop
sbb
daa
cmpsb
aaa
in
push
xchg
fs
pop
inc
cld
stos
sub
out
hlt
jae
lock
lret
unpcklps
mov
imul
sbb
sub
jbe
cmp
push
sub
shll
mov
jno
or
movsb
xorb
jno
jmp
mov
mulb
mov
jecxz
ss
aad
sbb
mov
add
scas
jle
mov
ja
mov
sbb
lahf
outsb
mov
xchg
cmpb
sbb
mov
cld
sbb
cmp
test
int3
pop
or
fxch
loope
dec
fs
inc
mov
jmp
xchg
ret
ss
out
cmp
jnp
in
daa
xor
jbe
push
dec
jg
test
shr
or
add
sub
inc
lcall
loop
mulb
leave
sbb
mov
ret
nop
jno
adc
push
xor
and
push
mov
jbe
stos
sub
test
push
sbb
imul
xlat
test
mov
lret
sub
clc
add
pop
jae
or
icebp
push
push
adc
cmpsl
push
in
xchg
jmp
aas
xor
sbb
lods
inc
aad
loop
rorl
add
scas
jb
jge
enter
test
cs
dec
pop
ret
outsb
out
orl
dec
mov
stos
adc
xlat
leave
pushl
dec
fcmovb
push
sti
imul
dec
cli
outsl
out
mov
jb
cmp
scas
fistpll
in
mov
lcall
fsubrs
xlat
daa
pop
int
mov
add
inc
cltd
cwtl
push
adc
repz
jb
es
fwait
and
cmp
movsl
dec
lods
mov
out
or
int
add
adc
cli
arpl
ret
test
inc
aam
loope
jmp
cmp
pop
or
aas
mov
pushf
xor
jmp
pop
in
leave
cmc
xor
or
mov
mov
dec
xchg
dec
inc
aaa
pop
repz
mov
cs
stc
mov
mov
sub
jmp
push
enter
inc
cmpb
dec
fadds
mov
jg
ljmp
repz
outsb
fwait
lret
mov
aaa
data16
andl
imul
xor
movsl
cmp
mov
inc
inc
push
roll
arpl
push
das
fwait
ds
das
push
sub
pop
push
xor
push
test
mov
pop
inc
adc
sub
int3
movsb
cmp
movsl
scas
cli
mov
add
lea
jle
and
je
push
push
dec
outsl
cld
dec
mov
pop
adc
jmp
ja
es
into
repz
movsl
lock
mov
add
xchg
leave
and
xchg
cwtl
sbb
adc
ret
jo
outsb
ret
loopne
pop
mov
xchg
outsl
lock
aas
pop
and
cmp
call
scas
or
enter
inc
cwtl
cmp
pop
push
push
cmp
fndisi(8087
lods
fs
shlb
daa
addl
push
mov
cltd
stc
pusha
push
inc
jmp
test
mov
inc
enter
xchg
out
dec
inc
lods
cli
cli
mov
lret
test
in
mov
cmc
dec
push
inc
leave
in
popa
jmp
in
shlb
mov
sahf
mov
mov
fbld
cltd
dec
arpl
cmpsl
mov
xlat
jl
dec
mov
inc
sub
lods
pop
mov
stc
fldl
sub
cmp
pop
scas
fs
scas
enter
insl
push
inc
inc
and
push
mov
and
orb
cli
sbb
into
inc
dec
sub
inc
jb
pop
int3
mov
loope
cmpsb
push
fcompp
push
inc
or
mov
pop
fsubrl
cmp
sbb
icebp
insb
mov
xchg
popa
jne
outsl
lods
daa
sbb
adc
sbb
sub
stc
mov
sahf
icebp
adcl
mov
inc
imul
insl
adc
push
pop
push
jg
lds
lcall
mov
jns
inc
jbe
sub
jo
mov
imul
or
fisttpll
jl
lret
lods
cmc
test
sbb
pop
out
into
pop
mov
flds
dec
into
add
cmc
sub
pop
adc
jg
add
pop
out
pusha
or
push
or
enter
xchg
xlat
jb
arpl
push
adc
push
and
fmul
ja
roll
fisttpll
lahf
fwait
xchg
insb
sbb
lods
mov
mov
testl
sub
lock
sbb
aam
or
sub
je
nop
sub
daa
xor
add
and
push
lock
divb
negl
fdivrl
pop
das
stos
adc
push
jmp
in
dec
mov
fcmovbe
fsts
xor
or
xchg
sub
fwait
pop
adc
jbe
int3
xor
or
and
xchg
or
popa
std
push
xor
js
mov
mov
in
mov
pop
xchg
or
sbb
dec
push
xchg
sbb
xlat
inc
into
jmp
mov
dec
pushf
call
cmpb
jns
cld
imul
popf
push
mov
pop
clc
popa
jp
mov
imul
pop
loop
jns
mov
pop
inc
xchg
fbstp
cmp
jmp
rorb
lret
push
call
pop
and
daa
stos
jae
fisttpll
jae
or
sbb
jb
out
je
imul
popf
add
int3
ss
jbe
test
stc
cwtl
add
lcall
ljmp
jb
pop
fisttpll
pop
mulb
lods
xlat
or
popa
adc
out
std
cli
clc
enter
and
dec
out
roll
adc
mov
movsl
xchg
out
pop
int
clc
cmc
lret
push
inc
adc
adc
add
mov
cld
jg
addr16
xchg
sbb
stos
and
jbe
inc
and
pop
mov
xchg
pop
mov
out
jne
add
shl
inc
and
sub
inc
les
add
dec
mov
push
mov
and
adcb
mov
jae
pop
lcall
push
xchg
mov
test
cli
cwtl
loopne
dec
mov
dec
fidivrs
mov
je
sbb
xorl
stc
jb
or
jmp
imul
mov
int3
inc
xor
mov
dec
cmp
jb
in
dec
scas
repnz
cmp
push
adc
fstl
jp
mov
push
test
mov
xlat
or
cs
sub
je
xchg
ss
cwtl
mov
les
inc
cmc
addl
mov
fisttps
inc
daa
sbb
sub
pushf
push
mov
imul
mov
xor
enter
and
in
or
fs
subl
shlb
sbb
mulb
mov
inc
outsb
adc
add
add
aam
fistpll
dec
sub
in
aaa
loop
add
cmp
insl
es
cmc
inc
jbe
outsb
lahf
push
jmp
xchg
pusha
lods
mov
mov
int3
mov
mov
ret
fs
outsl
xchg
push
pop
imul
data16
lods
js
rcrl
push
nop
mov
xor
pushf
adc
mov
adc
pop
out
cmpb
pop
sbb
sbb
cmp
push
lahf
mov
cmpsl
ja
push
pushf
mov
inc
iret
cmp
xor
mov
sbb
test
aam
mov
and
jmp
sbb
gs
test
push
dec
sub
fcmovbe
rcll
loopne
popf
jno
sub
mov
push
test
mov
or
push
arpl
jge
into
mov
inc
ret
fcmovb
lods
push
inc
arpl
xor
dec
and
pop
es
loop
pop
je
das
or
adc
notl
adc
pop
mov
out
fistl
xlat
cs
cmp
inc
call
mov
xchg
jnp
js
push
add
push
dec
sub
jp
push
outsl
in
in
aaa
or
jnp
xlat
pop
aad
sbb
mov
cmpsl
ret
mov
pop
dec
and
ss
and
jmp
jg
repz
xchg
and
rcll
jl
pushf
mov
nop
fdivs
out
rcr
add
outsl
mov
xlat
in
pop
scas
cmpsb
out
iret
movl
insl
jne
test
adc
lcall
cmp
dec
aad
stos
cmpsb
fs
push
scas
out
rorl
sahf
lcall
cmp
fstpt
shll
add
stos
sub
adc
push
xchg
pop
push
ljmp
pop
adc
sbb
cmpsb
mov
pop
out
mov
lock
pop
and
push
add
and
out
jbe
sbb
jl
sub
or
dec
lock
cwtl
push
dec
outsl
inc
xor
mov
dec
aad
and
jo
xchg
scas
negl
sbb
adc
inc
in
icebp
xchg
ret
lds
dec
or
idivl
mov
shl
and
inc
or
pop
lods
std
xchg
nop
and
aas
push
xchg
in
jne
push
pop
in
sbb
xlat
xor
xor
inc
and
mov
mov
mov
repz
scas
insb
sub
rorb
lods
ret
std
xchg
mov
pop
lds
ucomiss
cmc
enter
mov
cld
mov
lds
xchg
clc
bound
imul
mov
stos
sti
or
enter
xor
filds
movsl
out
xlat
cmp
int3
dec
mov
test
cmpsl
lea
lods
test
repnz
jae
and
and
lds
ja
lea
push
cmc
fisubrs
and
xorl
cmpsb
repnz
adc
pop
out
outsb
xor
imul
addr16
leave
dec
adc
xchg
lahf
fadd
hlt
inc
scas
mov
fsubrl
add
xor
dec
add
mov
sub
add
push
movsb
push
decb
pusha
ret
stos
bound
mov
cmp
and
movsl
das
push
sbb
aaa
sbb
adc
xor
mov
sub
push
leave
loope
fs
push
jb
popl
mov
in
mov
jle
jmp
les
adc
jno
fildl
in
pop
adc
cmovbe
nop
in
xlat
dec
sbb
ret
push
insl
and
or
sub
test
fdivrl
outsl
push
not
jle
sub
and
insl
ret
xchg
mov
pop
xlat
jge
loope
cmp
pop
das
or
fcomps
jl
and
js
xchg
mov
jae
mov
push
dec
and
fstl
push
les
jb
loopne
mov
or
rorl
lret
cld
pop
orb
in
divl
cmp
or
clc
mov
loope
push
sbb
cmp
mov
pop
cmp
adc
popa
and
xor
shlb
jp
mov
outsl
scas
mov
adc
lahf
inc
out
lcall
jl
ljmp
add
push
outsl
addr16
mov
adc
push
shl
mov
jge
sub
ljmp
push
xchg
loop
fwait
mov
push
pusha
cmc
add
pop
push
sub
mov
sub
mov
nopl
test
cwtl
ds
sub
in
orb
scas
pop
mov
leave
pusha
jmp
push
rolb
loop
lret
mov
cmp
int
adc
mov
mov
jno
jmp
shl
sbb
roll
notl
outsl
in
mov
mov
pop
xlat
or
cmc
mov
fs
cmp
mov
ss
and
xor
add
mov
test
ljmp
ljmp
mov
dec
js
push
push
mov
dec
in
sarb
sti
dec
fsubs
mov
mov
xor
dec
or
sub
cld
loopne
lahf
loop
aaa
xor
sbb
icebp
jbe
int3
sub
mov
dec
inc
sti
rorl
cmp
data16
sub
adc
mov
inc
or
mov
push
icebp
jl
shlb
mov
lahf
mov
sbb
out
fisttpll
push
push
inc
clc
push
adc
cld
scas
pop
ds
bswap
sbb
pop
cltd
repnz
cli
push
cmp
test
mull
inc
ret
lea
or
or
call
sbb
arpl
leave
sub
adc
movsl
int
insl
sbb
out
mov
pop
arpl
out
rorb
push
les
outsb
in
push
add
or
std
fistpl
outsb
pop
negb
rcrb
cmp
sti
ficompl
pop
adc
ficompl
fld
js
cmp
test
pop
gs
fldenv
rcll
imul
aam
adcl
push
xchg
mov
pop
pop
jle
xchg
ds
ds
addr16
mov
movntq
cmp
cld
or
cmp
jp
xchg
xor
shl
push
push
push
sub
into
xor
mov
xorb
dec
leave
mov
jne
sub
and
repz
cwtl
out
cmp
and
inc
pop
push
jmp
jecxz
fcompl
jg
scas
mov
scas
adc
push
push
adc
loop
inc
sbb
cmp
cmpb
daa
fcomps
or
mov
mov
rcll
jo
rclb
mov
mov
jno
fs
shll
stc
and
mov
dec
push
cltd
mov
adc
pop
xchg
shll
sub
cltd
out
add
test
imul
jae
jo
jecxz
push
pop
leave
test
mov
popa
xorl
mov
adc
cli
mov
jo
xor
cltd
cli
aad
outsb
pushf
dec
or
std
adc
push
xor
mov
cs
jne
fdivs
ljmp
mov
fnsave
inc
dec
dec
imul
aam
mov
pop
aaa
inc
xor
jp
shrl
dec
pusha
loop
add
mov
cmc
mov
stc
call
sub
dec
fstpt
in
jecxz
in
pop
hlt
rcl
push
scas
popf
stc
add
pop
test
push
sbb
call
mov
jmp
xor
mov
sbb
mov
mov
mov
call
sub
leave
ss
dec
jmp
xchg
dec
push
push
sti
jp
pushf
popf
cmpsb
adc
jecxz
aam
loope
sar
or
and
mov
jecxz
mov
push
hlt
in
xabort
sti
js
das
decb
jp
lahf
inc
rcr
mov
das
mov
jae
fnstenv
and
lods
cltd
xor
mov
push
cmpsl
sub
lret
insl
das
or
adc
test
fs
mov
inc
invd
pop
sub
jmp
mov
icebp
and
popf
pop
and
mov
pop
dec
jmp
xor
dec
dec
dec
dec
int
adcb
int
mov
movb
mov
lret
dec
add
lret
aam
outsb
outsb
or
jge
test
sub
cld
xchg
fwait
repnz
test
jge
inc
sub
lods
mov
lahf
push
push
leave
pop
push
sbb
test
hlt
cmp
outsl
int3
and
lock
fidivl
lret
mov
or
add
pop
out
pop
mov
pushf
lds
idivb
faddp
mov
pusha
jbe
outsb
inc
mov
or
pop
movsl
sub
fdivrl
mov
push
jp
dec
fdivs
outsl
mov
xor
pop
stos
popa
icebp
mov
cmp
push
sarb
mov
mov
jnp
ret
in
pop
idivb
js
pop
jae
fisubl
sub
aam
arpl
mov
test
pushf
pop
xor
xor
jmp
pop
addr16
dec
jbe
pop
xlat
repnz
and
adc
movb
out
pop
mov
xor
push
cmpsb
inc
xchg
jno
mov
add
lds
lahf
stos
cmp
inc
pop
fisttps
mov
daa
aam
jnp
inc
sub
lahf
inc
xlat
sub
jae
pop
dec
jbe
ret
add
hlt
mov
scas
popa
xorb
sub
scas
mov
push
inc
clc
pushf
les
mov
lahf
dec
mov
pop
pop
push
mov
push
or
fidivrs
mov
je
ja
insl
mov
jle
cld
add
iret
nop
ss
cmc
in
xchg
lock
fsubp
add
jae
or
stos
jmp
push
or
adc
mov
je
ljmp
je
int
inc
insb
int3
mov
xor
bound
das
adc
pop
pop
test
inc
and
out
sbb
cwtl
adc
sbb
xchg
out
cmp
push
pop
pcmpgtw
aad
xchg
in
out
cs
pop
int3
call
inc
dec
sarb
fists
dec
mov
negl
orb
out
loop
je
jp
dec
sbb
mov
fadds
inc
jl
test
jg
mov
push
sub
je
ljmp
outsb
inc
das
pop
out
out
xor
xchg
clc
nop
orl
pop
push
push
idivl
repnz
inc
fisttps
mov
daa
or
imulb
adc
push
test
jns
test
sub
inc
movsl
leave
repnz
or
add
push
adc
cmpsb
xor
aaa
or
out
adcb
mov
aaa
ret
pushf
mov
xchg
daa
jl
add
jle
mov
mov
cli
mov
imul
shll
sbb
jg
inc
and
mov
sbb
ds
sbb
cmp
mov
out
jl
jns
mov
in
dec
mov
insb
repz
mov
inc
sbb
and
int3
inc
xchg
test
sub
hlt
ret
dec
jecxz
xor
jp
sbb
imul
sbb
and
jo
lret
mov
xchg
or
cli
mov
xchg
pop
hlt
ret
aam
pop
push
xchg
push
mov
pop
aad
stos
xchg
xchg
aad
adc
cmp
push
out
xchg
repnz
pop
fildll
or
mov
pop
movsl
xchg
jg
or
insl
push
movsb
dec
lods
dec
aam
inc
pop
shr
addl
xchg
xor
sub
push
push
mov
xchg
jmp
lock
dec
pop
pushf
pushf
xchg
lods
or
std
mov
loop
fsts
loopne
sub
xchg
jp
incl
lods
movsb
push
adc
enter
shll
mov
pop
or
lahf
aaa
clc
jbe
and
adc
push
fldl2t
cmp
sahf
jno
sub
ljmp
aad
or
mov
push
mov
enter
dec
mov
stos
popf
gs
dec
mov
mov
pop
repz
push
test
inc
dec
ret
sbb
xor
mov
in
jle
add
outsb
mov
inc
jmp
popa
adc
push
js
sub
cmp
cmpsb
lahf
std
adc
dec
iret
push
lock
out
mov
lock
jae
ret
pop
mov
and
mov
bound
scas
loop
mov
pop
js
fmuls
into
dec
mov
push
and
lock
into
inc
mov
xchg
push
mov
enter
ficompl
out
and
sbb
sbb
xchg
sub
call
mov
aaa
fisubrl
loop
mov
dec
out
lret
mov
or
inc
sti
cmp
aad
out
into
in
in
dec
loop
fsub
sub
test
std
jp
popf
sti
pop
mov
out
mov
jo
add
dec
stos
pop
xchg
je
mov
push
fwait
adc
sub
xlat
lcall
lods
inc
mov
jno
mov
inc
adc
xchg
ja
and
outsb
iret
push
add
imul
cwtl
mov
ret
push
les
pop
mov
pop
sub
cld
movl
outsb
jle
or
outsb
jbe
or
pop
imul
out
loop
in
xchg
jle
addr16
fistpll
cltd
adc
jp
fistpl
xchg
aad
xchg
pushf
push
xchg
ljmp
and
les
add
js
jne
cmp
sbb
icebp
sub
mov
lods
imul
jb
icebp
mov
pop
and
adc
cwtl
jl
lcall
push
pop
lret
clc
cmp
xchg
adcb
dec
inc
popa
daa
pop
dec
fadd
or
mov
ror
mov
or
and
dec
xchg
arpl
xchg
pop
xchg
out
sub
xor
push
outsb
inc
pop
cwtl
inc
add
arpl
mov
pushf
mov
mov
sbb
or
jl
mov
fldcw
test
cmp
pop
std
loopne
ficompl
fiadds
jecxz
outsl
ja
insl
and
push
addr16
pop
or
sbb
ja
leave
imul
cmp
fsubs
fiaddl
loopne
int3
dec
mov
sub
sti
pop
or
jae
cmpsl
test
int3
fldenv
icebp
lock
mov
out
je
lea
int
clc
rcrb
test
inc
jne
insl
xor
lds
or
gs
inc
shl
inc
push
insb
mov
addr16
mov
adc
jmp
sahf
pusha
xchg
xchg
mov
call
mov
lret
lods
int3
adc
mov
mov
inc
sub
lods
aam
jg
xor
dec
es
std
inc
shll
or
sub
dec
orl
sbb
cs
xor
out
insl
repnz
ficoml
shrl
xchg
lcall
sbb
and
cs
das
mov
mov
data16
cld
cltd
leave
jmp
cmp
cs
jae
or
adc
dec
mov
cltd
sub
addb
inc
clc
push
push
sub
addr16
cs
lahf
pop
mov
dec
cmp
stos
lahf
push
idivl
pop
scas
mov
ss
out
dec
fisttpll
mov
add
and
les
pop
pop
mov
mull
dec
jb
jp
xor
mov
ja
pusha
idiv
sbb
adc
lahf
and
jl
xchg
mov
cs
mov
out
lock
cmp
mov
lods
movsb
dec
stos
and
sub
leave
aam
adc
or
ss
lods
fnstenv
mov
jp
or
leave
push
test
jmp
test
xlat
inc
stos
out
mov
adc
jecxz
les
push
sarb
xchg
or
in
ret
test
push
mov
and
les
adc
add
push
in
jl
jo
pop
mov
pusha
jmp
cmc
adc
ficomps
out
insl
dec
das
stos
lods
sbb
push
xchg
xorl
and
sub
lea
imul
adc
sub
mov
in
mov
arpl
and
pop
push
mov
icebp
lock
sar
sub
sbb
mov
xchg
cmp
shlb
stc
outsb
push
andl
pop
add
cmp
mov
adc
jg
or
dec
xchg
addr16
push
add
add
xchg
mov
sbb
sub
aad
jge
mov
cld
cmpsl
cmpl
iret
inc
inc
adc
insb
inc
or
movsb
jo
mov
testb
mov
fldt
jl
in
fstpl
mov
ss
scas
push
pop
lcall
lcall
adc
bound
inc
je
repnz
ljmp
jle
add
fs
pushf
mov
fimull
out
add
push
nop
ss
arpl
inc
jmp
and
and
idivb
jg
lret
mov
mov
jp
mov
jae
jmp
lods
aas
inc
push
into
fldl
jmp
cwtl
sbb
pop
fsubl
or
mov
lahf
imul
mov
jo
ds
lea
lds
xor
mov
pop
push
les
ja
into
cmpl
scas
add
cmp
inc
out
mov
fstps
dec
test
pop
push
push
push
shl
enter
jecxz
push
shll
or
popf
fisubrs
dec
jo
mov
pop
inc
ljmp
mulb
jle
jnp
jmp
inc
xor
push
pop
push
addr16
rorb
pop
aas
dec
cmpsl
add
push
shrb
xchg
pop
add
sub
inc
rorl
mov
and
gs
rorl
divb
cmp
int3
adc
mov
adc
aad
and
inc
cmp
loope
or
in
rcrl
enter
mov
nop
std
in
lods
ror
je
repz
pop
mov
sub
fwait
sub
into
xchg
xchg
sarb
cmp
mov
in
push
push
shlw
lret
jmp
sub
add
dec
clc
icebp
push
mov
and
jns
test
fidivl
insb
adc
sub
push
daa
mov
movsl
jecxz
ss
rcrb
push
and
sbb
jae
xor
or
fstp
push
add
pop
mov
pop
pop
push
adc
sbb
and
adc
sub
or
inc
adc
inc
add
decl
dec
cmc
push
mov
cmp
pop
bound
int3
sbb
cmp
and
sub
or
outsb
lods
jnp
out
aas
int
int
imul
aaa
sbb
clc
enter
mov
xchg
fs
cltd
cld
dec
mov
pop
arpl
add
inc
push
push
repz
fstpt
mov
inc
push
mov
push
imul
icebp
insl
mov
fnstsw
incb
ss
rorb
pop
add
in
hlt
mull
cmp
jge
jle
jb
mov
in
out
ficoml
sbb
sti
dec
mov
dec
mov
sbb
lahf
imul
push
and
dec
and
aam
dec
rolb
mov
mov
lock
lahf
jmp
push
jmp
das
andb
test
push
adc
into
sbb
pop
icebp
dec
sub
add
adc
xor
pop
cld
mov
mov
cmp
aam
and
popf
or
or
in
dec
ja
je
addr16
push
insl
dec
pop
cmc
pop
lds
movsb
jle
mov
test
dec
enter
mov
js
test
out
sti
popa
aad
mov
shrl
into
lock
mov
push
sbb
push
orl
ljmp
je
fcoml
add
sbb
mov
mov
jo
or
sti
xchg
andl
dec
sbb
test
mov
in
pop
mov
or
mov
mov
xchg
and
push
ds
push
add
mov
mov
call
scas
mov
aad
sbbb
push
enter
jle
push
ss
movsb
mov
lcall
mov
xchg
xchg
sub
bswap
adc
fisubl
push
test
adc
in
cmpsb
les
adc
popw
js
fidivrs
pop
xor
imul
in
mulb
xchg
pop
lahf
jp
aaa
mov
aas
addr16
gs
ja
mov
xor
sbb
xchg
mov
lcall
adc
adc
cltd
and
jb
out
cmp
pop
xlat
and
out
or
xor
sbb
add
dec
call
out
or
cmp
fwait
fwait
xor
push
mov
pushf
lea
cmp
leave
adc
pop
fwait
sub
pop
js
or
xchg
mov
adc
clc
sub
shr
jb
lcall
inc
pushf
adc
insb
pop
fwait
rorb
dec
addr16
in
pop
ss
inc
or
or
dec
daa
sbb
xor
cmp
aam
test
out
cmp
cmp
cmpsb
mov
test
je
fistl
aas
subb
in
adc
xchg
or
es
loop
ret
push
sbb
repz
inc
aad
push
push
mov
mov
stos
mov
lods
adc
push
shlb
add
iret
fcomi
fmull
aad
cmp
aam
aam
test
mov
adc
xchg
mov
mov
ror
lret
or
and
idivl
dec
rorb
xor
insl
xor
add
inc
test
insb
mov
je
jns
aas
cld
sbb
inc
lcall
js
insb
clc
xor
dec
mov
mov
popf
mov
mov
out
add
rcrl
in
cmp
inc
jo
push
adc
pop
repnz
xchg
xchg
mov
pushl
aaa
mov
adc
mov
mov
xchg
outsb
aas
int3
mov
pop
movsl
nop
inc
pop
test
sbb
jae
and
mov
jecxz
aaa
outsb
fcos
enter
fwait
mov
mov
in
pop
and
mov
sub
mov
leavew
cmc
xchg
shr
and
mov
pop
jo
scas
and
push
add
movsl
xor
mov
mov
push
xorl
adc
pushf
sub
pop
fisubrl
es
test
testb
cmp
pop
mov
fstps
cmp
mov
iret
push
pop
das
imul
cmc
add
mov
cmp
sbb
sbb
sar
dec
repnz
jl
out
jnp
mov
inc
mov
xlat
adc
pop
push
push
shrl
mov
jecxz
stc
push
mov
pop
inc
sub
or
cmp
jae
repz
xchg
fwait
cmpsb
into
cmpsl
add
jne
jmp
add
mov
jmp
and
cmp
mov
jge
std
xchg
idivl
cli
inc
add
lods
inc
lret
fdivs
sarb
test
lods
pop
mov
sbb
adc
lahf
fsts
mov
in
xor
xchg
dec
adc
xchg
or
fstps
subb
adc
xchg
xchg
test
cltd
jl
lret
mov
insb
push
data16
repnz
mov
cld
jne
adc
inc
push
pop
push
xchg
dec
add
or
lods
jno
xor
cmpsl
mov
sbb
dec
addb
cmp
das
mov
icebp
add
jle
xchg
mov
push
movsl
das
pop
inc
sub
pusha
dec
idivl
sbb
sub
and
dec
xchg
ficoms
xchg
mov
bound
sahf
in
pop
dec
jb
daa
icebp
fs
icebp
and
xchg
push
xor
xchg
out
push
adcb
loop
dec
cmp
in
xchg
les
jl
adc
jge
sub
xchg
lcall
or
fcmove
push
addr16
sbb
nop
xor
enter
pop
scas
inc
adc
adc
pop
std
adc
pop
jbe
jmp
xchg
mov
mov
lea
inc
lock
outsl
clc
adc
dec
xchg
adc
and
je
into
cmp
addr16
jp
lret
repnz
jge
sub
cmp
mov
xchg
lods
dec
pop
jecxz
daa
mov
jmp
adc
jle
push
arpl
and
popa
ss
loopne
aam
stos
cmp
lods
fnstenv
xchg
out
pushf
sbb
pop
xchg
les
push
jb
cmpsl
inc
stc
pop
xlat
mov
insl
xchg
xchg
iret
aas
lahf
cld
sub
mov
ljmp
addl
movsb
shll
test
sbb
int
test
orb
hlt
ljmp
jl
xchg
mov
cmp
lock
fsubrp
aam
xor
decb
jne
insl
sbb
into
jmp
lods
in
fbstp
or
jnp
adc
mov
mov
je
jbe
mov
daa
push
ds
sub
hlt
adc
push
hlt
ret
xchg
icebp
popf
test
push
jb
rorb
pusha
xchg
and
mov
lock
cmp
enter
loop
xchg
sub
mov
pusha
push
and
scas
data16
inc
dec
clc
dec
lea
pop
jae
fnstenv
sarb
jle
mov
dec
add
mov
mov
repz
lahf
jne
or
inc
mov
dec
sub
loope
mov
mov
cmpsb
push
lret
inc
lock
dec
lods
pusha
dec
mov
xchg
adc
fcmovbe
rcrl
mov
es
stc
mov
cmp
or
test
ljmp
xlat
mov
add
cmp
aaa
mov
icebp
mov
sub
pop
ds
xor
enter
mov
in
mov
shlb
test
jl
mov
adc
shl
sub
call
xchg
cmp
xchg
loope
push
mov
push
xor
sbb
sti
mov
fidivs
xabort
popf
das
add
or
pop
aad
repnz
pushf
fnstsw
sub
inc
aaa
ja
jmp
addr16
stos
insl
jp
xchg
mov
lahf
cli
fcoms
cmc
inc
cmp
cmp
in
adc
add
add
scas
test
ret
or
push
ret
pop
and
aaa
lcallw
out
pop
sub
inc
push
xchg
movsl
cmp
push
xchg
fisttpl
testb
mov
sbb
dec
fsubrs
jle
or
mov
mov
lock
jp
or
into
pop
add
xor
rorb
adc
cltd
cmp
add
or
das
scas
sti
or
and
sub
xchg
cmp
sub
dec
adc
xchg
in
mov
lret
push
sub
xor
sbb
dec
push
std
jg
pusha
adc
mov
divl
mov
imul
pop
jnp
flds
cmc
sub
or
mov
and
in
inc
int
xor
pop
cmp
sbb
stos
jmp
pop
jmp
pop
ds
xchg
jae
mov
mov
repz
ja
sahf
popa
and
adc
pop
data16
xor
dec
pop
cmp
cmc
push
mov
add
sub
dec
jo
cli
xchg
xor
mov
in
sbb
movsl
or
dec
out
push
dec
mov
xchg
addr16
gs
lods
addr16
xor
jle
cmp
jb
jle
mov
add
or
and
andb
stos
adc
lea
pop
aad
fists
and
mov
mov
push
aad
cmc
es
dec
or
mov
inc
adcl
insb
pop
pop
scas
push
cmp
sbb
cld
mov
outsb
add
pop
xor
push
xchg
cmpsb
jbe
leave
jl
lea
sub
cmp
jno
xchg
or
xchg
mov
push
mov
inc
loope
xor
mov
push
dec
fucomp
and
shlb
and
dec
push
iret
xor
cmp
paddq
sbb
mov
subb
push
leave
dec
lods
std
or
xor
imul
test
aam
adc
sub
sti
xchg
inc
cmpsb
inc
out
bnd
push
xchg
xor
leave
addr16
dec
neg
clc
jbe
sarl
inc
out
push
out
sbb
in
inc
push
es
xor
jle
dec
out
add
iret
ja
inc
inc
dec
loope
cltd
push
inc
mov
lret
xchg
adc
iret
sub
inc
mov
dec
out
push
shr
and
shll
sahf
in
and
inc
mov
mov
cmp
test
shrl
roll
sub
out
es
in
test
cmp
and
mov
inc
mov
pop
sbb
movsl
daa
sbb
or
jl
mov
mov
add
cmpsl
orl
insl
pop
orl
aaa
sub
orl
stos
xor
mov
add
add
mov
adc
jns
add
outsb
inc
ss
sti
insb
inc
xchg
mov
jo
cmp
xor
cmpsl
shl
es
xchg
inc
mov
xchg
repnz
fxch
bound
bound
xor
dec
ja
mov
xor
sbb
imul
or
jne
mov
outsb
out
xchg
sbb
insl
sub
arpl
jge
fimull
cmc
adc
iret
inc
mov
leave
pop
inc
hlt
mov
push
push
inc
inc
sbb
sub
adc
or
xchg
mov
frstor
cwtl
movsl
arpl
in
fs
mul
push
adc
add
jbe
clc
cmpsl
and
arpl
shrb
scas
aaa
mov
mov
xor
pop
mov
and
pop
loope
cli
aam
mov
stos
jg
xchg
dec
add
mov
jg
sub
sbb
aad
test
pop
loopne
cmp
ljmp
mov
test
adcl
fidivrl
dec
mov
dec
dec
jp
int3
mov
insb
adc
data16
xor
push
inc
jnp
jb
push
cmp
dec
in
enter
icebp
fiadds
out
adc
jge
clc
adc
sub
push
jne
outsb
jne
sbb
mov
nop
call
inc
inc
adc
jae
xor
dec
adc
push
loop
int
jb
lahf
stos
movl
or
sbb
jae
mov
xor
ret
stc
cmp
inc
es
int
lock
into
sub
nop
mov
jnp
sbb
xor
cli
xor
stc
imul
jp
cltd
add
adcb
aam
adc
clc
sbb
pop
cwtl
jne
mov
lock
clc
test
add
cmp
pop
or
ud0
or
lcall
pop
adc
sbb
mov
jle
pushf
adcl
jae
inc
pop
arpl
jns
cltd
xchg
addr16
and
pushf
addl
adc
and
in
jmp
sub
sbb
sbb
inc
jnp
sbb
xor
pop
mov
sbb
test
lods
jmp
in
cmp
or
pop
jle
movsl
dec
or
popa
jmp
in
pushl
sbb
fiadds
mov
incl
mov
stos
leave
in
sbb
addr16
lods
lods
les
repnz
push
jg
push
pop
push
enter
out
sbb
ljmp
jmp
stos
pusha
jp
jmp
pop
pop
out
mov
inc
cmpl
cmp
mov
push
adc
xchg
add
nop
sbb
stc
rorl
xchg
insb
cmp
sbb
sbb
fcoml
int3
mov
inc
ret
push
lcall
mov
jge
rclb
scas
sbb
push
loop
stos
scas
les
icebp
mov
int3
mov
inc
arpl
ljmp
mov
dec
jno
xor
fmul
push
cs
dec
out
adc
push
fsub
jnp
add
and
int
lahf
enter
inc
ljmp
mov
xchg
sbb
shl
xor
pusha
adc
shrl
out
dec
mov
out
cmp
adc
mov
pop
sub
push
dec
jno
mul
ljmp
pop
mov
clc
and
cmpsb
inc
sub
mov
inc
mov
enter
fdivrs
pop
dec
cmpsb
push
bnd
xor
cmp
and
stos
leave
das
xchg
je
test
add
push
adc
and
mov
insb
jae
movsl
mov
dec
popa
jmp
test
fisubl
mov
lea
popf
adc
mov
mov
xchg
mov
ret
pop
sub
dec
push
push
popa
lret
call
sahf
cmpsl
dec
fisubs
fs
enter
push
test
cmp
pop
stos
cmp
in
popf
fildll
in
xor
stos
jg
jg
cmp
jbe
mov
outsb
xor
fs
out
outsl
jl
sar
inc
dec
stos
ret
cltd
rcll
inc
jns
jne
inc
ficoml
pusha
aam
jg
mov
cmp
out
ret
cmp
pop
mov
stc
sbb
rcrb
and
call
and
and
movsl
lea
pushf
mov
sti
lret
pop
inc
push
sub
xlat
and
addr16
fs
mov
or
jg
inc
or
xchg
cmovo
cltd
sti
jecxz
mov
shlb
leave
nop
aad
mov
nop
jnp
daa
ret
pop
sbb
inc
shl
dec
and
mov
mov
sbb
cmpsl
jae
sarb
or
into
ret
dec
mov
push
lock
or
lret
popa
xchg
or
inc
outsl
sbb
add
mov
dec
mov
jnp
ror
xor
mov
data16
test
sub
pop
cmp
stos
sub
sub
jns
sbb
filds
push
dec
xchg
jp
add
xchg
sub
pop
jb
rep
popf
in
inc
and
dec
insb
sti
mov
pusha
sbb
imul
dec
pop
addr16
xor
fstpl
std
cs
jecxz
mov
in
and
dec
jl
testb
je
ret
sub
jns
je
lods
pop
loope
loopne
xchg
ficomps
mov
sub
pop
mov
or
aad
enter
cli
insb
push
sti
jp
pop
mov
pop
data16
test
adc
or
mov
jno
imul
daa
out
fimull
adc
nop
scas
add
daa
cmc
fisttps
into
and
sbb
data16
adc
mov
shl
out
lcall
imul
rolb
or
in
lret
insb
push
xlat
arpl
add
leave
xchg
out
adc
cmp
insl
add
call
xchg
insl
aas
mov
xchg
imul
movsb
push
cmp
mov
iret
add
add
cmp
inc
clc
ficoms
push
pusha
mov
pop
sahf
pop
comiss
cltd
clc
int3
fmull
mov
xchg
dec
sub
jl
sub
dec
add
nop
gs
stos
fsubrs
add
fwait
ret
dec
cmc
pop
xor
insl
stos
cmp
sub
cmp
mov
sbb
pop
sub
mov
sub
sbb
xchg
gs
jg
dec
cli
pop
jno
test
lret
mov
pop
aad
sbb
lret
ja
sbb
cli
jmp
xor
rcl
cmp
mov
cmc
mov
shll
pop
ljmp
mov
adc
xlat
cmp
add
and
es
int3
jno
out
xor
cmp
inc
push
push
sbb
aad
inc
insb
fildll
adcl
or
jbe
mov
js
mov
and
hlt
push
imul
mov
hlt
test
jns
stc
hlt
fists
pop
popa
inc
push
sahf
insb
push
mov
mov
cmp
sahf
cmpsb
rcr
inc
lods
mov
push
sub
rcrb
stos
push
ret
pop
out
lea
jno
popa
or
aaa
jo
and
icebp
push
add
inc
jno
sub
jae
jne
jns
jmp
gs
or
test
or
loope
mov
mov
push
sub
jo
clc
inc
mov
daa
cmpsb
jge
clc
add
mov
xor
dec
mov
cmp
inc
cli
movsl
mov
add
inc
les
leave
call
mov
test
test
fnstsw
push
jecxz
fcoml
sub
mov
xor
jge
leave
push
aam
sub
mov
into
movsb
dec
and
enter
mov
inc
shlb
lcall
inc
shl
fdivr
mov
es
enter
jmp
daa
insl
hlt
pop
test
mov
inc
inc
arpl
jnp
stos
pop
fldcw
mov
or
daa
mov
mov
popa
sbb
sti
arpl
je
and
inc
cmp
inc
jp
sbb
mov
enter
idivl
or
cmp
scas
pushf
lods
mov
add
cs
arpl
fsubp
dec
test
push
inc
mov
scas
inc
loope
stos
xchg
outsb
xor
adc
jo
enter
push
lret
rol
js
sbb
or
cmp
xchg
cmpsb
mov
cmpb
ljmp
and
cmp
mov
loop
dec
jmp
dec
aas
inc
inc
or
int3
cmovne
gs
adc
setbe
shrb
mov
cmpsl
adc
movsb
mov
pop
mov
sbb
lods
pop
test
pusha
call
aaa
pop
cmp
divb
xlat
sbb
lret
cmp
ret
jb
xor
xor
mov
inc
mov
dec
lea
roll
mov
loop
mov
sbb
or
cmp
lea
lods
and
pop
push
in
dec
js
inc
adc
mov
and
subl
idivb
dec
pop
push
fsub
cmpsl
lea
xor
outsb
jg
gs
dec
movsb
jg
fidivrs
pop
movsl
cmpsl
push
sarl
sbbl
insb
xor
jbe,pn
lret
push
js
mov
pop
adc
xor
ret
and
sub
sbbb
mov
sub
add
xlat
cmpsl
ljmp
mov
shll
movsl
adc
iret
int3
sub
sub
lock
jg
outsl
lds
in
xchg
ja
dec
in
dec
jno
jge
inc
sub
pop
xchg
jb
mov
out
sbb
and
repnz
jne
xor
jmp
mov
jecxz
and
dec
in
stc
fisubs
gs
xchg
or
pop
ja
xor
jge
dec
mov
sbb
and
arpl
in
sbb
sbb
in
mov
push
adc
lcall
lcall
repnz
cmp
mov
mov
cmpsb
in
mov
repnz
out
div
adc
ret
xlat
insl
mov
add
test
or
xlat
push
call
or
push
nop
in
jbe
repnz
cmp
mov
cmpsb
aaa
dec
fldl
jnp
cmp
mov
test
dec
ss
shll
arpl
xchg
sub
push
mov
out
xlat
movsl
push
mov
addb
int3
sbb
and
cmp
mov
filds
lods
fwait
cli
and
pop
mov
jmp
andb
inc
into
jbe
pop
addr16
aas
xor
lods
jle
int
add
outsb
test
aaa
dec
add
adc
jp
push
sbb
loope
mov
xor
and
call
xlat
adc
stc
mov
outsl
hlt
sub
jns
add
push
jne
out
repnz
rorb
sarl
stos
sbb
inc
pop
pushf
stc
cli
popf
pushf
iret
call
movsl
dec
mov
mov
popa
xor
jl
dec
cmc
loope
add
int
mov
enter
sbb
cmpsb
inc
adc
lret
add
je
xor
mov
or
out
stos
and
stos
inc
lock
in
sub
mov
push
fdiv
cmc
daa
sbb
push
sub
daa
pop
inc
sub
xor
cmp
push
push
sbb
sub
mov
pop
aaa
push
fnstsw
mov
fstpl
cmp
sbb
fcmovne
jnp
jp
push
mov
push
lea
or
icebp
gs
mov
xchg
xorl
push
je
lret
dec
inc
arpl
mov
leave
repnz
xchg
ret
mov
mov
fwait
cmp
icebp
int
xor
sbbb
outsl
jmp
nop
jl
push
pop
imul
test
push
jp
ret
daa
jecxz
xchg
iret
shll
xor
xor
and
lods
mov
mov
dec
push
adc
xor
jge
push
mov
sti
lahf
frstor
add
les
pushf
pop
and
test
mov
arpl
xchg
loopne
pop
sub
sub
mov
aad
divl
nop
jns
js
dec
pop
bnd
xchg
mov
xor
push
push
hlt
push
cmpsl
fnsave
clc
xor
cwtl
lret
or
mov
pop
shrl
cmp
aad
fs
cmpsb
dec
fildl
cmp
inc
mov
lods
push
into
iret
fiadds
sbb
in
movsl
mov
push
or
xchg
stc
pop
add
fsts
xchg
cmpsl
lret
mov
jp
orb
in
push
pop
es
out
dec
das
mov
pop
cli
sub
xor
jb
mov
in
and
jnp
ret
bound
fwait
daa
mov
add
test
dec
shl
mov
jbe
dec
notl
and
xor
push
push
pmaxub
adc
inc
cmp
jmp
sub
cld
aas
nop
jne
int3
and
mov
fst
inc
mov
out
push
jno
lock
int
mov
sbb
scas
jmp
shlb
rcrb
mov
adc
insb
cmpsl
in
cmpl
xor
outsb
push
sbb
pop
call
popa
ret
andb
ljmp
and
imul
mov
pop
cwtl
scas
aam
sarl
pop
shl
inc
arpl
arpl
fbstp
aaa
sbb
and
xor
ss
popa
call
cwtl
fmuls
out
jae
je
xor
jbe
cmp
sbb
add
out
repnz
pop
add
mov
fdivl
pushf
or
mov
adc
les
mov
push
fiaddl
test
fmull
pop
and
enter
jecxz
out
jp
scas
or
test
jo
outsb
pop
jbe
aaa
inc
mov
add
mov
mov
and
call
or
int
sbb
fisttps
lcall
aam
adc
in
or
push
cmc
push
and
mov
in
push
loope
imul
out
cmpsl
orb
xchg
fidivrl
and
xor
mov
jns
mull
mov
loope
ja
xchg
jmp
test
jnp
iret
adc
adc
mov
and
pop
push
xor
mov
sub
xchg
xchg
lea
iret
adc
scas
outsb
aaa
adc
or
fs
hlt
outsl
cs
add
aad
imul
lods
inc
pusha
call
pop
push
fcmovu
and
aam
cli
mov
dec
insb
xor
aaa
fdivl
shrl
fsubrs
loope
push
fstl
cmp
push
sub
out
imul
mov
xchg
fs
je
sub
adc
add
lret
jnp
mov
rorl
std
push
adc
ja
aas
xor
push
sub
dec
adc
cld
sbb
bound
cmpb
push
xor
xor
enter
repz
cs
sbb
gs
cld
push
cmc
cmp
sub
jns
fdivl
test
test
xlat
aad
xor
mov
xchg
cmp
push
cmp
xor
sub
mov
mov
and
mov
cltd
and
pop
scas
push
lods
out
mov
fs
sub
in
sbb
fimull
in
adc
in
ret
repz
push
lret
into
mov
add
ror
fildl
push
xorl
adcl
fbld
and
jnp
popl
ljmp
cmp
sub
mov
in
rcrl
jns
pop
mov
lcall
push
cltd
loope
push
rol
insb
stos
add
sti
stc
rcrl
sub
int3
fsubp
xor
dec
inc
lahf
pop
fistps
jmp
mov
add
pop
inc
mov
pop
jb
jg
xacquire
js
aad
test
xchg
or
mov
into
or
pop
pop
and
inc
or
xor
jle
loop
push
inc
lret
mov
mov
push
testb
jae
andb
sbb
sahf
jno
cmp
or
mov
sub
mov
mov
int3
xor
test
lea
test
jmp
mov
add
and
jbe
lahf
test
inc
int3
ficompl
push
dec
neg
xchg
and
fldenv
shll
lea
push
push
adc
cwtl
inc
ficompl
repz
jle
shr
lods
mov
jecxz
add
enter
insl
jne
ficompl
icebp
push
and
push
out
fsts
pop
sbb
xor
cwtl
inc
jecxz
jnp
addr16
popf
mov
dec
imul
jns
pop
stos
loope
xchg
mov
mov
inc
sub
pop
jnp
jo
out
cmp
test
arpl
cmp
imul
mov
outsl
jnp
and
push
decb
xchg
push
dec
repz
dec
bswap
mov
in
data16
fnstcw
push
into
icebp
lcall
xchg
sub
xchg
jne
icebp
lea
inc
ffreep
mov
bound
xchg
aaa
cmpsl
loope
dec
cli
out
adc
xlat
and
xor
out
sahf
xchg
pushf
test
dec
adc
push
ja
mov
add
inc
sahf
repnz
leave
cmp
dec
pop
adc
inc
dec
xchg
dec
pop
ror
push
xchg
pop
aad
cmp
repnz
test
pushf
jo
mov
je
mov
mov
cld
mov
cmpsl
bound
and
mov
jmp
xor
inc
inc
int
sub
in
lret
mov
shl
xor
or
aam
push
pushf
lret
roll
loopne
das
adc
and
scas
inc
xor
cmp
mov
sub
fdivrl
pop
jge
lahf
insl
or
or
add
xorl
loope
dec
mov
adc
insl
xchg
xor
aas
pop
cs
jp
imul
push
jbe
xlat
ret
and
stos
inc
inc
xlat
bound
dec
aam
adc
fsubr
in
mov
push
aaa
into
test
dec
push
or
adc
lahf
pop
xchg
lcall
push
fdivs
insl
push
into
movsl
shrb
stos
and
emms
push
sbb
lods
mov
xchg
jmp
aaa
aam
mov
and
sbb
fisttpl
jecxz
mov
mov
movsb
pop
repz
test
jg
push
sub
sbb
add
repz
cmp
xchg
mov
and
push
adc
add
xor
or
stc
xchg
lcall
pusha
nop
ret
jecxz
push
cmpsb
mov
jecxz
xor
add
mov
fmuls
push
mov
xor
sub
sub
push
lods
mov
dec
jg
outsl
pop
dec
and
sti
es
and
mov
js
jecxz
mov
mov
push
cmp
sarl
mov
sub
lret
inc
fs
jg
mov
int
push
andb
cmp
sbb
mov
repz
inc
loope
mov
scas
adc
xor
jne
dec
imul
test
outsl
push
test
push
jbe
push
dec
in
in
sbb
in
loop
dec
hlt
xchg
pop
icebp
es
insl
stc
popf
nop
mov
fbstp
and
movsb
adc
shlb
dec
cwtl
sahf
inc
or
or
adc
xchg
mov
mov
cmpsb
xchg
adc
cmp
xor
arpl
stos
xchg
jecxz
loope
cmovg
add
jae
fidivs
inc
lods
stos
cwtl
add
jno
rorl
stos
xchg
icebp
xor
jnp
loopne
lret
fnsave
repnz
mov
std
dec
push
add
outsb
cs
out
xchg
bound
sahf
les
inc
or
mov
jecxz
push
and
sub
pop
imul
and
push
pop
jp
mov
sub
imul
mov
adc
insl
dec
rcr
jecxz
jmp
jge
xchg
jns
rcr
and
dec
inc
mov
icebp
cmp
xchg
sub
or
jle
rolb
push
or
scas
negl
xor
insl
sub
insl
ja
push
repz
cli
fisubrs
add
icebp
and
sub
cltd
es
adc
cmp
fsubl
mov
fdivrs
mov
lcall
inc
jge
xor
enter
ljmp
sub
repz
jle
outsl
stc
and
jp
add
loop
add
xorl
inc
sub
cmp
dec
pop
push
xchg
loop
dec
xchg
into
cwtl
pop
mov
aam
and
js
enter
cmpl
fimuls
scas
xor
pop
push
fs
mov
mov
cmpsl
fs
adc
push
xor
pop
addr16
pop
mov
and
mov
mov
fwait
icebp
mov
stos
jnp
int
mov
xchg
dec
ror
or
dec
cmp
test
push
pop
xchg
ja
or
inc
aaa
ja
and
add
jae
push
popf
push
aad
xor
adc
stc
mov
fidivs
les
lods
pop
push
scas
inc
int
ret
xlat
add
addl
mov
lea
test
decl
jp
and
mov
pop
pop
stos
into
mov
mov
scas
out
and
and
xlat
xor
push
sub
out
ficompl
rcl
push
adc
stos
rclb
fldcw
inc
cmp
pop
jbe
push
mov
pusha
imul
push
rorb
clc
enter
adc
cmp
xor
pop
neg
loope
add
push
out
out
into
xchg
lret
adc
faddp
jg
sub
lahf
jae
push
jne
mov
xor
xlat
in
add
mov
sarb
jo
cmpsl
pop
and
inc
jge
add
addr16
jns
fwait
add
mov
push
push
cmc
lods
or
enter
fnstsw
lock
mov
jno
fmul
fsts
pop
out
fs
orb
pop
jge
mov
fdivrl
inc
outsb
and
xchg
push
lret
rcrb
push
lahf
subl
dec
push
arpl
sbb
pop
sbb
or
cmpsl
adc
and
int
sub
push
push
dec
jne
test
add
mov
pop
in
mov
daa
je
test
inc
push
rolb
mov
xor
add
xchg
xchg
xchg
mov
scas
pop
int3
cmpb
shrb
pop
popf
shl
mov
enter
xor
xor
outsb
cltd
sti
ret
pop
bound
loopne
rcrb
je
pop
push
and
fldenv
mov
xchg
mov
or
imul
fildll
dec
cwtl
push
lea
sub
cld
lds
push
loopne
sbb
sub
inc
fldenv
sub
add
fmull
mov
cmp
iret
mov
and
adc
pop
orb
bound
loop
mov
js
push
xchg
aas
jno
jmp
cmp
jae
nop
leave
adc
mov
mov
mov
cli
add
mov
aaa
nop
ljmp
inc
mov
jae
ficomps
std
flds
lret
in
xchg
inc
aad
lahf
dec
cmp
jle
xor
jns
mov
addr16
jnp
mov
pop
cmc
mov
sahf
jg
or
lock
mov
movsl
lock
insb
lret
das
mov
orb
adc
inc
call
adc
mov
mov
cld
sbb
cmpsb
sub
dec
xchg
jl
cltd
gs
mov
adc
test
xor
cld
cwtl
bound
mov
sub
icebp
imul
push
test
xchg
out
mov
lret
sti
adc
incl
xchg
jl
cmc
xor
or
jo
into
push
sbb
mov
add
loope
in
sbbl
cli
and
lock
jae
dec
dec
inc
adc
dec
and
and
sbb
lods
pop
shlb
ficomps
fldl
push
jle
fimuls
push
daa
cmp
nop
aam
or
sub
inc
mov
xor
jnp
xlat
dec
dec
push
sbb
sbb
xor
jl
xchg
fbstp
fsts
enter
popf
into
or
cmpsl
xor
or
mov
cs
mov
xor
jno
shll
cmovp
cld
sbb
lahf
add
pavgb
ljmp
push
lods
pop
lcall
push
jecxz
popf
xchg
inc
mov
int
das
test
out
mov
inc
dec
insl
mov
dec
push
push
subl
nop
mov
popf
xor
xchg
push
pop
aaa
mov
cmp
add
adc
lea
hlt
pusha
cltd
dec
dec
jmp
sbb
test
cli
daa
scas
mov
dec
sbb
pop
xlat
jb
scas
inc
imul
dec
push
les
jo
dec
sti
xor
mov
pop
add
and
sub
dec
in
xor
stos
int3
mov
xchg
insb
lahf
test
sbb
adc
add
add
and
and
test
repz
fiadds
lds
xor
in
sub
pop
xor
push
rolb
pop
addb
add
mov
es
rcll
xchg
fildl
aas
imul
pop
mov
jbe
daa
adc
popf
ljmp
cmc
shlb
push
xchg
pop
push
sub
cwtl
dec
xor
inc
jp
rolb
mov
rcr
lret
xchg
imul
and
dec
into
or
ja
jnp
movsl
jg
movsl
int3
or
xor
xor
ds
jle
popf
mov
sub
loope
and
and
scas
push
push
lahf
push
pusha
popa
pop
dec
cmp
mov
fcomip
fnstsw
add
loope
bound
cmc
test
mov
xor
push
push
mov
inc
mov
jecxz
jmp
les
pop
jo
inc
cmpsl
mov
inc
push
cmp
xchg
xchg
inc
out
xchg
lea
pop
lods
loop
insb
mov
cs
ss
adc
xor
in
xchg
or
adc
xor
xor
mov
and
ficomps
jecxz,pt
jg
sti
sahf
push
sbb
movups
data16
jle
rol
movsl
or
test
mov
pop
mov
cmc
in
xchg
jne
mov
in
shr
add
jne
adc
add
jg
lahf
aad
out
xchg
cmp
call
int
repnz
push
lcall
cmpsl
mov
stos
sbb
shll
mov
rep
adc
and
adc
mov
or
lods
mov
lret
adcb
xchg
negb
push
inc
sbb
adc
cmp
ljmp
push
lcall
sbb
lock
pop
cmc
fsubl
pop
lods
inc
push
add
popa
aam
call
scas
mov
or
dec
xor
sbb
add
mov
xor
sarl
icebp
aaa
andl
mov
mov
sbb
sbbb
insl
fwait
mov
imul
or
test
lcall
jb
insb
into
xchg
xor
inc
add
cmp
push
lock
add
or
outsl
les
jge
xor
add
lods
dec
sbb
inc
jnp
fists
sub
loopne
inc
int
int3
jmp
test
xor
insl
dec
pop
sahf
lods
not
in
jne
mov
dec
lea
sub
and
and
mov
lret
xchg
mov
scas
inc
push
hlt
das
and
nop
cwtl
mov
inc
testb
inc
xor
test
shrl
cmp
test
jp
test
cmpsb
jne
sbb
or
cmp
inc
popf
pop
scas
or
xchg
jne
or
stos
out
xchg
jb
sub
mov
aad
sbb
dec
outsl
mov
lods
push
xchg
jl
dec
fucom
cwtl
jnp
icebp
mov
aaa
les
loopne
jns
cmp
ficoms
xor
clc
flds
jae
adc
push
dec
jo
lahf
shll
xor
int3
rcrb
movb
dec
push
aaa
push
cmp
int3
ljmp
out
shr
xor
xor
mov
add
imul
inc
jb
call
xor
loop
and
in
testb
lahf
mov
xchg
daa
addb
sub
in
xor
mov
xchg
sbb
jl
daa
mov
dec
aas
sbbl
mov
mov
imul
push
enter
jb
sbb
loope
scas
div
push
pop
pop
rclb
add
lret
stc
cmp
repnz
cmp
mov
orl
sub
cmc
or
popaw
bound
test
std
faddp
add
cmp
enter
popa
adc
rcll
mov
pop
pop
mull
lret
lea
sbb
jb
sbb
dec
ljmp
push
ljmp
mov
mov
mov
xor
mov
adcl
sahf
mov
insb
cs
dec
cltd
fcomip
xlat
insb
sub
test
add
mov
pop
ss
daa
stos
mov
pushf
or
xchg
sub
push
push
mov
adc
xchg
sbbb
push
cmpb
imul
mov
out
and
addr16
sbb
hlt
add
pop
cli
outsl
jno
sbb
pop
add
xchg
pop
push
fdivrp
mov
pop
inc
pop
dec
cwtl
ja
or
imul
dec
cltd
jecxz
push
test
dec
ss
mov
xor
ret
ljmp
in
in
inc
cmp
or
jg
add
and
sub
or
jl
push
sub
sbbl
in
popf
popf
and
mov
jg
pop
push
xchg
idiv
mov
add
xchg
mov
addl
pushf
ret
jp
stc
jnp
push
add
add
pop
outsl
out
fstl
pop
pop
sub
add
xor
shlb
jb
add
cmp
imul
jge
inc
outsl
scas
pop
dec
dec
or
pop
filds
jge
inc
stos
lock
inc
mov
mov
adc
arpl
ret
les
cmpsb
push
ret
loope
push
mov
xchg
ret
push
or
lret
shlb
xor
outsl
mov
jg
sbb
jecxz
hlt
add
mov
nop
and
movsb
movb
sub
rclb
and
rorl
decb
les
add
ret
xchg
xorl
mov
xor
adc
add
pop
pop
cmp
sub
xchg
icebp
and
mov
or
cmp
xchg
ret
mov
and
cli
pop
add
rol
push
movsb
imul
or
push
daa
les
hlt
inc
rclb
shrl
inc
inc
push
cmp
into
adcb
xor
pop
ja
test
int3
lea
xor
mov
pop
xor
sub
mov
cmp
jmp
mov
lods
movsl
int3
stos
or
jno
dec
pop
cli
pop
push
mov
divl
pop
adc
das
sbb
loope
mov
sub
out
dec
mov
push
testl
mov
loope
inc
fiaddl
lea
mov
sahf
mulb
stos
pop
fsubl
or
test
mov
jg
jg
add
icebp
std
pop
cmp
xor
inc
inc
ljmp
mov
cmp
lahf
sbb
inc
stos
xchg
cmc
das
or
aas
outsb
or
leave
pop
icebp
jnp
or
shrl
xor
jp
test
add
lds
and
pop
xor
cmp
leave
out
xchg
clc
insb
adc
int
dec
pop
mov
out
add
bound
push
aaa
sub
std
adc
adc
mov
push
pop
int3
mov
mov
cmc
sbb
mov
push
arpl
mov
mov
inc
enter
and
mov
rolb
sahf
push
gs
jo
mov
aam
push
jecxz
in
int3
jo
inc
cmpsl
push
inc
cmp
pusha
movsb
frstpm(287
std
mov
sbb
cmp
dec
xor
mov
out
imul
mov
or
dec
call
lods
clc
push
adc
pushf
data16
nop
enter
jmp
sub
dec
jae
les
negb
adc
and
testl
inc
push
mov
jne
xor
push
push
jge
xor
pop
push
sbb
inc
test
mov
ds
pushw
and
mov
fcoml
out
dec
fnstcw
test
or
jge
leave
xchg
mov
mov
dec
jle
mov
push
fistl
and
mov
pop
aad
sub
mov
cli
cmpsl
stos
arpl
inc
dec
jns
sbbl
adc
sbb
inc
pop
and
or
mov
xor
inc
jno
dec
cltd
mov
movsl
add
push
das
stc
dec
mov
push
rolb
or
shl
gs
std
icebp
sub
cmp
das
data16
scas
add
cmp
jne
rclb
lock
push
add
movntq
cmp
add
pop
sbb
into
inc
pushf
jno
mov
push
lcall
add
xor
mov
cli
sahf
adc
pop
xchg
into
ret
xchg
gs
xchg
fcomip
mov
call
daa
sbb
mov
push
lods
ret
pop
mov
shl
dec
outsb
lock
dec
adcb
or
xlat
cwtl
or
sbb
leave
xchg
dec
loope
jmp
dec
int3
insl
test
sahf
mov
iret
mov
aam
pcmpeqb
inc
aas
imul
inc
pop
lods
lods
sbb
push
imul
xor
push
outsl
cmp
push
xor
or
out
int
lret
sub
shrb
out
and
shll
and
popa
push
dec
lret
sbb
pop
mov
je
les
sti
inc
and
jo
push
jns
dec
pop
icebp
pop
lds
inc
inc
xor
mov
add
stos
test
dec
hlt
push
lcall
cwtl
dec
movl
pop
mov
cs
fnstenv
iret
sub
loopne
mov
dec
clc
pop
ljmp
dec
dec
cmpsl
fmuls
xor
sub
mov
lds
iret
filds
mov
decl
jns
cld
jns
mov
push
call
xchg
dec
cmp
loop
adc
push
loopne
xor
out
addl
dec
popf
cmp
lods
cmp
or
ljmp
loopne
fldcw
or
test
adc
scas
leave
ds
mov
dec
adc
xor
lods
or
pusha
cmpsb
pop
inc
dec
xchg
in
dec
cltd
cmpsb
dec
movsl
or
stc
hlt
icebp
cmp
and
inc
push
test
push
aad
sbb
addr16
in
lcall
mov
iret
lds
mov
imulb
pop
push
add
insb
je
adc
push
into
jmp
adc
sbbl
mov
lcall
dec
and
add
mov
aad
shlb
push
cmp
push
fmuls
out
andl
push
xorb
pop
in
sarl
bound
imul
aaa
les
jbe
js
add
adc
push
lods
sbb
jb
cli
out
pop
inc
call
je
add
cwtl
mov
loope
mov
insl
inc
cmc
push
pusha
cli
mov
loopne
or
repnz
cmp
arpl
cmp
int3
pop
xor
lret
loopne
subb
das
sbb
xchg
test
push
mulb
or
xor
jns
or
jl
lods
add
push
adc
push
aam
cld
fs
cmpsl
cmp
fsubs
mov
test
mov
out
pop
pop
cmp
fidivrs
add
pop
mov
inc
push
fcoml
sbb
jnp
rcrb
das
add
mov
mov
lods
vpcmpgtw
mov
jae
pusha
ficoml
out
xchg
dec
fstpl
xchg
jb
out
jno
call
add
andl
dec
pop
push
aaa
fistpl
add
xor
cmp
inc
adc
xchg
insl
stos
in
gs
xor
mov
jno
loopne
lea
outsb
xchg
dec
adc
and
scas
stos
movsl
out
fsubs
mov
push
and
sub
dec
push
mov
xchg
jns
out
hlt
ficoms
jl
sahf
outsb
pop
enter
xlat
mov
mov
int3
call
pop
push
mov
and
sbb
sub
push
adc
icebp
xchg
std
adc
jl,pn
inc
inc
pop
sbb
mov
mov
sub
add
pop
xor
mov
adc
je
mov
imul
popf
add
lret
mov
cltd
mov
dec
icebp
add
jmp
mov
xor
fiaddl
mov
dec
cs
and
inc
out
subb
jo
scas
push
fwait
dec
push
mov
ret
lods
in
orl
repnz
cmp
ret
mov
xchg
adc
mov
gs
fiaddl
xor
lds
ret
jno
jmp
mov
jl
push
ljmp
mov
push
jns
jne
leave
mov
mov
mov
inc
loopne
mov
lret
shl
dec
movsl
cld
lods
sub
leave
push
stc
icebp
sub
or
push
test
adcb
test
push
add
arpl
or
inc
pop
and
repnz
jbe
out
jne
push
test
ret
hlt
sub
rol
out
std
xor
fsubl
insb
jb,pt
jo
or
pop
adc
mov
pusha
jge
arpl
fldenv
cli
int3
or
sub
pusha
xchg
scas
mov
push
pop
popf
jbe
push
int
adcb
call
inc
lods
add
cli
outsl
rorb
bound
mov
call
cmp
mov
repnz
sub
ljmp
dec
dec
dec
addr16
scas
addr16
shll
movsb
mov
and
sbb
ss
outsb
push
push
sbb
mov
mov
jmp
push
or
loopne
push
ret
aam
add
sub
sub
imul
scas
mov
lods
or
fnsave
and
xorl
out
popa
push
insl
cli
sbb
inc
in
scas
arpl
cmp
fildll
mov
loopne
jge
add
or
cmp
pop
pop
dec
out
testb
fistl
xlat
push
adc
fistps
scas
cmp
push
out
ret
cwtl
cmp
call
mov
cmpb
xchg
mov
jno
push
data16
cmp
sub
jb
les
cmp
xorb
cmp
mov
jle
outsb
or
xchg
mov
jbe
addr16
xor
sbb
mov
mov
jb
inc
jecxz
push
out
loop
mov
xchg
mov
rolb
ds
xor
hlt
hlt
push
push
pop
jmp
aam
push
add
pop
das
mov
es
repnz
mov
inc
test
fisttps
push
pop
fs
cli
test
and
mov
push
test
xor
mov
arpl
adc
das
adc
sbb
xchg
pop
sarb
inc
ret
je
mov
negb
stos
sbb
push
xlat
sub
push
ret
test
pop
in
ret
cmp
jns
rolb
add
mov
addr16
stc
cmp
mov
xchg
test
or
pop
xchg
and
cmc
jne
push
cmpb
lods
lods
insl
subl
push
sbb
xor
aas
faddp
into
push
int3
jbe
out
or
test
fsubrs
aaa
dec
movsl
cmp
pop
or
jb
pop
call
stos
daa
in
fdivrs
test
dec
or
push
jno
cmp
mov
mov
cmpsb
jg
cmpl
mov
push
adc
aam
dec
out
sbb
jecxz
add
dec
xor
jmp
movsb
orb
push
outsb
or
xchg
mov
mov
mov
das
lods
leave
and
insb
gs
call
cmp
dec
fcompl
push
cmp
scas
out
addr16
dec
clc
xor
push
mov
stos
dec
jle
inc
pop
mov
push
loope
xlat
adc
adc
adc
xchg
lock
cmc
inc
arpl
inc
push
jne
aaa
je
ss
xchg
lods
inc
data16
inc
std
cwtl
jbe
jmp
sbb
push
xchg
sub
dec
shl
aad
mov
jmp
popf
cs
cmp
jns
lods
mov
lds
int3
leave
shll
or
or
xchg
fimuls
das
call
sub
xchg
arpl
add
add
js
pop
sbbl
andl
arpl
jno
pop
aaa
call
dec
push
xchg
add
sub
push
ss
fwait
stc
stc
lea
xor
sahf
das
sbb
xchg
fcomip
lods
and
xchg
test
or
pushf
pushf
cmp
icebp
xor
push
jne
cmp
xchg
gs
push
add
inc
cld
lods
addr16
mov
xchg
sub
and
xchg
mov
int
in
jge
xchg
cmp
cmpsl
cmpsl
and
jno
aad
adc
jle
mov
jns
fwait
les
ja
mov
or
push
cwtl
mov
dec
repz
notb
cmpb
mov
xor
pop
cltd
repz
fistps
sub
call
gs
subl
pop
xchg
pushw
test
stc
push
pop
pop
mov
xor
push
dec
scas
xchg
or
icebp
out
les
adc
sbb
xor
sub
out
mov
jg
call
inc
enter
mov
leave
aam
rorb
loope
into
add
adc
cmp
stos
fwait
mov
jne
mov
and
xor
xor
std
inc
sbb
and
xchg
pop
push
cmpsb
aaa
xchg
dec
jae
call
mov
xchg
movl
int3
imul
xchg
dec
mov
xor
fidivrs
cld
bound
and
cmc
and
or
stc
iret
fwait
mov
ljmp
adc
test
mov
push
insl
ficoms
test
pusha
push
jl
std
cs
aas
push
and
jnp
mov
sub
ljmp
xor
add
push
repnz
int3
lret
pop
adc
mov
mov
loop
sbb
movsb
testb
add
out
out
arpl
repnz
loope
jecxz
cmp
mov
push
outsl
mov
jo
leave
call
shll
push
movsb
cli
add
pop
and
jns
clc
mov
pusha
pusha
add
xor
lcall
leave
dec
dec
mov
dec
aas
xor
iret
adc
loopne
pop
sti
and
sti
inc
push
mov
ja
enter
ljmp
pop
popa
push
lods
arpl
pop
and
cmc
sbb
dec
test
outsl
xor
xbegin
dec
jo
sub
cli
lcall
ficompl
insl
cwtl
incl
ljmp
lret
pop
addb
cmp
mov
popf
aad
aas
test
xor
add
bound
sbb
arpl
push
ss
pop
jmp
mov
mov
mov
push
fucomi
sbb
fldcw
lea
mov
out
stc
inc
es
movsb
push
dec
incl
and
les
ds
lea
sbb
sub
ja
add
stos
fisttpl
mov
lods
xchg
outsb
mov
ret
mov
ds
jne
lcall
rcrl
dec
outsl
push
leave
loop
fdivs
mov
enter
negl
and
cltd
sbb
sub
mov
adc
into
sahf
loopne
sbb
xchg
loop
pop
mov
cmc
add
std
adc
sbb
in
hlt
out
fs
sub
dec
or
call
pushf
aam
cs
lock
int
sub
sub
arpl
aad
mov
insl
popa
inc
lret
or
jge
jb
cmp
mov
xor
in
cli
inc
mov
jbe
loop
add
stos
fs
push
roll
mov
inc
dec
jbe
sbb
cmp
stos
int3
ret
lock
push
cpuid
dec
sbb
lods
scas
lahf
jb
add
xchg
xor
mov
xor
test
or
jmp
aam
leave
ret
or
test
popf
addr16
push
cmpsl
inc
loopne
shlb
das
jle
add
push
push
push
aad
subb
mov
push
push
mov
mov
mul
mov
gs
stos
mov
xchg
push
bound
xorl
cmp
xor
fcmovb
push
jge
fninit
mov
into
fdivrl
sub
add
and
sbbb
jge
mov
dec
ret
mov
aas
imul
xor
ss
jnp
test
add
add
jbe
loopne
mov
fdivl
cld
pushf
add
js
xchg
lcall
inc
adc
not
jle
pop
push
and
sbb
and
mov
mov
sub
out
add
dec
lret
jo
pop
cmp
cmp
dec
seto
mov
aam
popa
jno
mov
add
xor
pop
push
push
lds
jae
movsb
jle
cmpsb
imul
sbb
hlt
ja
adc
popa
mov
push
or
mov
add
push
cmp
mov
add
inc
xchg
std
gs
lods
or
mov
gs
mov
cs
outsb
sti
imul
subb
xor
mov
sbb
and
arpl
decb
dec
loopne
test
mov
sahf
sbb
mov
out
inc
cmp
cltd
hlt
pop
cmp
imul
inc
push
adc
sub
mov
xchg
out
out
pop
jp
shl
cltd
hlt
negb
xchg
push
aas
ss
mov
out
pop
or
cmp
push
lods
push
push
inc
dec
and
in
and
in
cmp
or
in
pop
add
in
cli
push
mov
icebp
dec
orb
pushf
popf
xor
mov
stc
insb
in
lret
addr16
sbb
pop
mov
pop
or
lret
ljmp
push
sbbl
or
adc
mov
jo
clc
enter
fwait
cmp
cmp
cmp
jne
dec
push
cmc
out
xchg
cmpsl
add
das
stos
dec
pusha
dec
push
xchg
out
adc
es
daa
mov
mov
adc
ds
in
outsl
int3
mov
dec
mov
lods
das
and
mov
iret
popf
push
orb
sub
loop
enter
pusha
out
addr16
add
adc
mov
jl
xor
out
hlt
jg
add
pop
into
sbb
mov
xchg
jbe
movsl
ja
and
xor
fsubrl
aaa
sub
popf
js
addb
ss
push
adc
sarl
loope
test
jmp
inc
lret
sti
jmp
bound
pop
fstl
hlt
xor
frstor
fisubl
call
pop
sub
or
sub
xlat
lret
mov
clc
xchg
out
xor
movsl
or
movsb
int3
rolb
and
add
rclb
cmp
ja
in
xchg
fisttps
loop
mov
out
icebp
and
inc
adc
movsb
dec
dec
bound
rol
test
cld
mov
inc
insl
add
jnp
mov
in
into
xchg
test
dec
icebp
push
mov
shll
add
outsb
test
push
mov
cltd
pushf
cmpb
in
mov
cmpsl
or
cmp
cli
and
cld
jmp
push
and
jge
imul
xchg
and
dec
fimull
pop
sahf
xlat
stos
add
xchg
outsl
lds
add
sub
cli
les
jne
dec
popa
xchg
addr16
mov
lret
fadds
mov
xor
mov
mov
jno
dec
imull
hlt
push
push
add
add
inc
loopne
cmpsl
push
mov
dec
daa
lods
dec
inc
mov
mov
jo
pop
mov
mov
sbb
jnp
push
fsubrp
and
in
cmp
adc
imul
jge
lds
push
out
scas
cmp
push
lods
test
mov
push
mov
fdivs
pop
jb
aas
jno
lock
mov
mov
sbb
mov
bndstx
lret
fimull
outsb
bound
repnz
clc
pop
mov
insl
jg
sub
test
inc
test
mov
ret
roll
cmp
and
jo
mov
push
dec
hlt
mov
es
in
adc
push
and
aam
je
pop
aaa
dec
testl
test
inc
and
sub
test
push
sub
pop
out
jl
and
mov
cmp
mov
subb
out
nop
leave
inc
push
mov
mov
pop
mov
movsb
loopne
mov
mov
or
cmc
addr16
mull
cmp
testb
imul
sub
cmp
jns
cwtl
push
fwait
push
or
jo
stos
data16
loop
xor
cld
movsl
sub
call
in
popa
inc
sub
cmpsb
push
cld
cs
xor
test
cs
push
mov
insb
push
push
out
pop
sahf
stc
outsl
fcoml
psllw
mov
xchg
data16
jae
mov
mov
mov
push
imul
mov
adc
inc
adc
outsb
xchg
and
ja
insb
jecxz
clc
icebp
scas
dec
dec
xlat
fstp
loopne
clc
mov
and
pop
xchg
and
popf
mov
pop
sbb
fisubrs
bound
out
mov
sub
xor
cltd
fadds
icebp
test
imul
js
dec
enter
inc
jg
xor
mov
sbb
jnp
sbbl
xor
sub
jbe
mov
pop
add
jg
xor
stc
sub
mov
mov
ss
es
shll
cmp
dec
mov
push
sub
out
fs
mov
loope
pusha
repz
inc
arpl
out
and
in
or
int
add
jge
loop
scas
clc
dec
cwtl
add
imul
mov
int3
cltd
add
push
out
push
adc
mov
jmp
adc
add
fucomp
pop
out
xor
adc
mov
inc
cmp
test
in
movsb
xchg
hlt
loopne
aas
xchg
nop
push
loope
mov
mov
push
jb
sbb
ljmp
outsl
dec
in
mov
mov
dec
push
test
inc
pop
outsb
popa
clc
out
dec
and
jno
gs
out
ds
add
sub
xor
adc
pushf
movsb
xchg
lds
loope
pop
xor
int3
shrb
cltd
mov
adc
in
cwtl
pop
adc
sbbl
pushl
lock
jp
pop
mov
xor
cltd
out
mov
pop
out
adc
pop
pusha
cmp
and
or
popa
outsl
rorl
xchg
cmp
adcl
imul
insb
in
cmpl
leave
scas
lea
lock
mov
jmp
jl
cld
mov
xor
sub
into
mov
adc
dec
mov
cltd
sarb
outsb
in
inc
mov
jnp
cld
divl
std
fwait
or
jbe
and
rcll
cwtl
mov
fsubrl
sub
call
repnz
shlb
movsl
stos
lods
mov
jg
pop
fiadds
sbb
repnz
push
dec
divl
jb
fdivl
push
add
push
sahf
pop
pop
in
mov
push
in
jns
adc
inc
cld
in
sbb
pop
imul
inc
test
jecxz
fwait
sub
and
in
stos
loop
mov
cmp
fiaddl
jns
dec
and
ds
and
ja
loope
mov
mov
mov
add
xchg
or
jo
add
daa
call
xchg
imul
push
fimull
add
pop
cmpsb
pushf
imul
andb
push
and
mov
pop
into
out
inc
and
enter
add
add
fldl2t
in
stc
movsl
xchg
in
int3
fdivr
mov
pushf
push
enter
xor
push
inc
loope
test
add
push
jae
jb
and
dec
movsb
cmp
jge
cli
leave
enter
lods
test
sbb
dec
or
fsubrp
fsub
ja
dec
adc
test
mov
clc
or
in
stc
and
cmp
sub
xlat
loopne
push
mov
lock
inc
pop
xorl
imull
cmpb
dec
into
loopne
sbb
sti
xchg
sub
outsb
adc
sub
je
jmp
jmp
ss
and
lods
push
fidivl
andb
cmp
insb
or
bound
fcmovnb
test
sub
or
sbb
xor
cvtdq2ps
repz
mov
std
mov
push
xchg
into
mov
xor
lods
iret
out
mov
mov
fwait
xor
rcll
mov
sub
mov
ds
mov
cmp
mov
repnz
movsb
mov
mov
mov
mov
int
das
incl
jno
or
cmpb
add
fstpl
add
or
inc
test
adc
adc
sahf
rorl
ret
dec
mov
mov
mov
dec
sahf
mov
dec
jg
dec
jo
mov
rorb
and
mov
jae
xor
lret
mov
jg
mov
push
stos
mov
insl
inc
pop
cli
mov
mov
nop
mov
loope
pop
loop
sbb
add
ffreep
mov
sbb
das
and
dec
push
fnstenv
inc
ret
mov
jp
cld
xchg
adc
hlt
pop
sbb
pushf
dec
imul
comiss
and
xchg
inc
xchg
add
mov
add
xor
add
das
push
out
mov
mov
jae
shlb
xor
xchg
fldcw
imul
pop
jns
enter
insl
dec
push
pop
xchg
mov
in
mov
adc
lock
std
pusha
pop
in
push
fmul
and
or
in
nop
sarl
cwtl
pop
xchg
cltd
dec
or
jb
jge
lahf
push
mov
dec
inc
mov
xor
xor
sti
call
adc
mov
or
adc
insl
stos
cli
cmp
jnp
pop
cmp
push
mov
jmp
mov
mov
int
pop
movsl
inc
sbbb
lock
cmp
mov
mov
or
into
mov
add
xor
xor
push
std
jle
mov
imul
inc
jbe
mov
mov
push
jne
aas
cmpsl
lds
mov
lret
pop
mov
dec
int3
and
fisubrs
lds
fisubl
jb
aad
pop
pop
mov
arpl
mov
push
xlat
add
sub
inc
xchg
lods
fcomps
push
pop
pop
je
jmp
sahf
outsb
pop
jns
shr
mov
ret
test
jae
mov
test
mov
lods
popf
mov
loope
jb
cwtl
or
das
jmp
and
adc
scas
movsl
adc
push
pop
or
adc
sti
iret
dec
mov
xchg
or
push
xchg
sub
out
mov
cmp
test
sarl
cmp
push
dec
mov
iret
mov
rclb
lret
ucomiss
adc
aas
pop
pop
data16
mov
enter
xor
dec
bound
xchg
add
mov
pusha
lods
out
mov
imul
popf
fs
adc
jle
mov
sbb
cmp
xor
adc
pop
mov
dec
push
jmp
stos
push
int3
push
movsb
adc
inc
lods
and
lock
test
xchg
out
jmp
inc
leave
mov
fiaddl
popf
shrl
push
mov
pushf
cmc
in
fisubs
int
bound
sub
mov
stc
xor
popa
add
mov
inc
sar
jmp
je
aad
push
roll
pop
inc
fadds
push
pop
pop
and
in
icebp
popa
les
in
push
dec
dec
push
jno
inc
lcall
jp
popf
or
jl
mov
loope
xchg
test
lcall
test
inc
in
push
daa
push
cwtl
mov
out
inc
dec
test
push
jne
dec
cmpsb
ds
inc
btc
sbb
mov
inc
mov
out
pop
loopne
fwait
fs
shlb
clc
jnp
sbb
lcall
data16
inc
addr16
jle
sbb
je
dec
aam
jb
popf
bnd
push
into
roll
ret
rcrl
add
lahf
adc
mov
adc
sti
push
xchg
sbb
mov
mov
or
subl
cltd
popf
mov
xchg
jmp
mov
cmp
lock
in
push
mov
mov
loopne
in
jb
mov
daa
shll
jle
lds
enter
js
aam
sbb
inc
mov
pusha
andb
jae
mov
pushf
and
inc
inc
xchg
imul
pushf
sub
dec
popf
test
mov
mov
repnz
movsl
nop
mov
or
pusha
rcr
out
mov
mov
loope
stc
fimull
frstor
mov
adc
mov
adc
push
leave
test
ffreep
push
js
sub
aad
pop
not
sar
inc
and
push
mov
jae
orl
je
inc
dec
into
orl
rcll
xor
mov
bound
dec
dec
enter
das
push
gs
out
stc
mov
or
aad
mov
sub
push
cmp
stc
sub
sub
fs
out
lcall
ret
jns
rorl
or
mov
cli
ljmp
fists
mov
cmp
mov
inc
push
pop
push
xor
xchg
push
mov
sub
sub
sub
xchg
loopw
xor
add
loopne
lcall
add
lds
test
xchg
mov
pushl
das
stos
push
mov
cmp
shr
lret
and
jno
ss
imul
iret
out
fidivl
cmp
sbb
arpl
mov
ret
lds
jmp
adc
cmc
ljmpw
pop
mov
movsb
in
xchg
lods
jnp
pop
dec
enter
pop
jns
and
or
mov
repnz
xor
dec
mov
orl
fnstsw
loopne
repz
dec
jl
add
adc
and
sbb
loopne
jmp
pusha
clc
sub
add
xchg
addl
and
dec
in
sbb
jns
js
lock
xchg
xchg
dec
outsl
bnd
adc
sbb
stc
mov
cmc
mov
mov
jecxz
mov
int
dec
xor
sbb
loopne
sub
cmpsb
stc
std
adc
ss
mov
aas
jnp
faddl
cs
push
les
cli
inc
pusha
mov
cmovae
mov
xchg
sub
lock
outsl
jae
aad
xchg
cmc
fimuls
xor
xorb
mov
test
and
mov
jmp
mov
jg
bound
in
inc
or
and
cmpsl
dec
jbe
rcrl
pop
push
sti
adc
xchg
data16
pop
out
iret
mov
rclb
popf
aam
add
out
cwtl
insb
repnz
pop
je
sub
jae
push
xor
adc
push
mov
sub
adcb
dec
aad
or
int
and
sbb
sbb
out
sbb
ret
scas
sub
mov
fistl
outsb
inc
fprem1
lods
lock
cmp
pop
rolb
jo
shufps
lahf
jle
mov
sbbb
add
sub
into
out
and
rclb
and
xchg
ds
xorb
cmp
jo
call
xor
arpl
sbb
cld
imul
or
shll
xor
sbb
fistpll
js
lcall
or
jne
div
out
aas
jmp
daa
cmc
outsb
test
test
mov
ret
dec
mov
js
jle
push
aaa
lods
cli
cltd
cmp
fistpl
mov
cmpb
je
jg
sbb
loop
aad
pushf
jl
jno
adc
ficoms
loop
add
xchg
std
add
mov
xchg
and
mov
into
push
dec
mov
add
pop
xlat
icebp
xchg
fdivr
loop
xchg
push
adc
cmp
xor
jl
adc
leave
pop
repz
add
pushf
push
jns
dec
cmp
loopne
pop
or
faddl
xor
dec
mov
out
inc
jg
sti
in
or
mov
cmpsl
xchg
pop
test
rclb
test
cli
or
xchg
out
subb
mov
aam
push
pushf
pop
je
pop
lods
or
mov
mov
pop
xor
and
cmpsl
cli
jbe
test
push
fs
mov
fsubs
pop
shl
jbe
mov
scas
xchg
pop
jge
cmp
cli
enter
dec
jecxz
adc
pop
inc
enter
js
int
pop
popf
add
into
cmc
test
mov
mov
or
mov
cs
dec
insl
outsl
adc
inc
xor
inc
sbb
dec
in
mov
cltd
lahf
dec
lcall
ja
add
sbb
faddl
jns
sbb
ficomps
sub
xor
lret
or
lds
into
ret
dec
lret
push
cltd
mov
sbb
decb
push
sbb
mov
sub
ljmp
les
out
push
negl
insl
fnsave
cmp
add
arpl
in
sbbl
dec
out
push
leave
movsl
xor
push
jo
popf
push
add
push
insl
pop
cltd
enter
mov
iret
es
notb
mov
mov
sahf
aas
cltd
addr16
aas
dec
imul
mov
inc
imul
jno
mov
sub
and
xor
mov
testl
jp
mul
add
dec
jne
mov
popa
shr
inc
gs
sub
shll
out
bswap
popf
js
xchg
jl
mov
or
loop
xchg
cmpsl
loope
ljmp
dec
out
push
mov
adc
pop
push
ljmp
sbb
fcmovnb
nop
test
push
push
stos
push
add
mov
shll
mov
mov
jg
jge
out
stos
aam
xchg
gs
inc
hlt
sub
daa
ss
dec
mov
js
cmpsl
push
mov
dec
out
push
xor
scas
dec
sbb
stc
int
in
jns
lods
jl
repz
adc
aaa
lods
dec
jmp
subb
cs
lds
lea
mov
bound
repz
aad
pop
mov
lds
sbb
push
lods
ss
cwtl
mov
and
pop
sti
hlt
sti
jl
dec
ljmp
or
mov
and
lods
mov
insw
out
adc
push
popa
fcmovnbe
popf
and
insl
lea
testl
and
xchg
es
pop
cli
call
push
jmp
inc
and
cwtl
jmp
cmp
adc
scas
pop
outsl
fmull
scas
push
pop
push
imul
rcrl
sarb
mov
or
out
adc
dec
imul
xchg
ja
pop
hlt
mov
imul
repnz
or
test
xor
jbe
or
dec
shrb
outsl
sbb
push
imul
mov
loopne
icebp
in
popa
jns
xchg
dec
sarl
insl
adc
push
push
inc
inc
mov
sbb
lret
vunpckhps
add
jge
icebp
adc
sbb
insb
pop
or
cmpsb
pop
jae
inc
xchg
test
testb
repz
jp
mov
jl
or
aaa
lcall
int3
dec
mov
mov
add
xor
ljmp
js
pop
pop
sub
int
pop
or
ret
mov
mov
inc
dec
xchg
enter
sub
adc
cmp
sbb
cltd
loop
cmpl
popf
adc
dec
cmpb
xor
xchg
xor
ss
sbb
jmp
fisubrl
into
stos
xor
dec
test
insl
int3
adc
jmp
rol
shl
push
xor
mov
sub
jne
pop
in
or
js
jmp
xor
popa
add
adc
dec
cmp
sub
nop
loop
mov
lock
push
mov
arpl
mov
xchg
pop
lcall
leave
les
sub
out
mov
xlat
jne
push
or
inc
or
jbe
mov
fistps
in
cmpl
jae
jg
stc
jns
aaa
push
dec
sub
xchg
inc
jp
hlt
out
mov
lahf
cmpsb
mov
stos
icebp
test
enter
movsl
out
inc
test
cs
or
mov
mov
enter
test
sub
cld
popf
js
rcrl
dec
mov
std
xchg
or
dec
sti
pop
int
cmp
test
push
fs
mov
mov
or
mov
gs
cmp
outsb
or
inc
aam
inc
push
pushf
sub
bound
ret
js
sub
cmpb
insb
aas
push
ljmp
loop
lret
sahf
sub
testl
pop
and
loop
jge
sub
in
cmp
and
out
cld
mov
mov
rol
push
mov
call
push
and
icebp
jle
adc
dec
in
in
push
adc
jne
sar
push
insb
cmp
jecxz
shrb
inc
stos
cmp
jg
sahf
mov
nop
test
dec
mov
idivb
dec
hlt
sbb
and
ja
jge
sub
mov
sub
xchg
orb
push
hlt
and
ds
sub
es
add
arpl
iret
hlt
icebp
ja
jnp
fbld
mov
lahf
xor
aaa
std
daa
xor
stos
out
mov
sbb
and
les
mov
sub
movsbl
lcall
rorb
xchg
jns
insb
jo
cmp
cmp
js
loopne
lock
push
stos
jecxz
sahf
mov
or
sti
pop
and
mov
dec
fdiv
sahf
aas
cmpsb
jns
mov
hlt
or
mov
push
aaa
mov
fs
or
jmp
cmp
es
mov
dec
scas
icebp
add
jmp
jb
sbb
bnd
pop
jp
xor
inc
dec
hlt
es
inc
pop
pop
icebp
test
imul
aad
clc
cs
das
cmp
in
stc
lods
mov
sub
repz
cmp
push
movsb
xchg
ja
fstp
or
cmp
fisttps
fisttpl
fldln2
mov
call
cmpsl
hlt
mov
arpl
mov
push
std
mov
std
shlb
pop
rorl
mov
mov
push
pop
sub
and
sbb
pop
pop
ss
sub
out
pop
pop
mov
out
pop
sbb
les
sar
add
cmp
or
test
mov
sub
jne
pand
dec
xor
adc
ljmp
cmp
pop
incl
scas
pop
mov
out
popf
ret
aas
cltd
sub
iret
inc
ss
lods
jne
movsb
mov
mov
xchg
add
es
fisubrl
jne
iret
add
les
mov
add
fmulp
pop
or
repz
mov
rolb
push
inc
outsl
jg
adc
mov
mov
nop
cmp
out
cmp
lea
clc
scas
jecxz
mov
movsb
ljmp
aam
fwait
repz
inc
dec
mov
cltd
out
adc
je
dec
dec
adc
aad
pop
xchg
pop
push
jo
and
xor
push
inc
mov
in
or
test
xor
rcrw
adc
jmp
xor
cmpsb
jl
and
imul
and
pusha
and
inc
int3
inc
jo
push
or
mov
pop
mov
cmp
mov
mov
pop
scas
insl
fwait
int
jle
pop
mov
xor
xor
and
rclb
adc
pop
dec
clc
cld
outsb
repnz
pop
mov
xlat
testb
int
data16
addb
mov
adc
xor
adc
mov
push
inc
inc
sahf
push
dec
movsb
mov
push
lcall
int3
ljmp
fsubrs
xchg
dec
sbb
std
fsub
push
sub
push
add
and
roll
call
mov
mov
add
test
insl
mov
test
stos
xchg
stc
roll
xchg
flds
outsl
out
cltd
test
stos
dec
jno
fsubl
loop
and
loopne
jbe
in
in
and
ror
and
fidivrs
jnp
adc
jne
ljmp
pop
in
stos
loopne
add
outsl
and
fdivr
stos
test
cmp
xchg
mov
or
mov
mov
aam
cmc
push
ja
jo
subl
out
mov
xchg
fwait
xchg
cmp
inc
or
jb
sbb
inc
decb
out
adc
xor
and
icebp
sub
pushf
pop
jle
loop
dec
movsl
xchg
dec
outsl
mov
repnz
fwait
dec
cmp
ljmp
mov
idivb
inc
shll
outsl
push
push
scas
sub
push
sub
jecxz
cmpsb
cmp
cltd
incb
out
stc
sti
xor
cmp
add
push
sub
mov
xchg
out
adc
cltd
pop
lds
rclb
call
inc
jne
sbb
repz
into
repz
xchg
mov
fbld
imul
push
sbb
dec
lretw
jmp
jno
call
aad
and
jle
inc
pop
and
cmpsl
mov
mov
push
mov
fisubrs
adc
sub
mov
iret
mov
sti
adcl
mov
call
call
fwait
and
inc
jne
mov
dec
jno
xlat
je
jne
mov
test
xchg
adc
cli
mov
push
clc
xchg
fs
sbb
fdivrl
popa
stos
scas
cmp
add
ret
mov
bound
xchg
movsb
out
xchg
nop
fstpt
aad
arpl
roll
jg
cmc
lds
call
sub
sub
div
xor
jo
pop
xor
jmp
outsb
sbb
xchg
xchg
push
pusha
jmp
adc
sbb
sub
and
adc
int3
lock
dec
push
repnz
mov
test
mov
inc
les
dec
test
dec
dec
xchg
imul
jae
roll
and
movsb
xor
daa
inc
xor
shrl
cltd
roll
subl
mov
inc
push
pusha
lods
fidivs
fldt
cmp
stos
xchg
cmc
scas
push
dec
add
test
jnp
add
aas
jbe
cld
addl
stc
mov
pop
fisttpll
add
imul
loope
aas
xor
push
mov
movsb
lret
mov
mov
data16
ss
jg
sbb
pusha
xor
push
mov
mov
in
add
cwtl
dec
addl
mov
cmp
ds
int3
les
pop
int3
pop
daa
pop
ret
or
cmpl
arpl
dec
pop
mov
aam
pushf
je
mov
xchg
adc
rclb
pop
or
in
cli
call
inc
hlt
mov
push
int
daa
cmp
ja
lock
out
add
cltd
enter
sbb
dec
dec
ss
das
fsubrs
cwtl
lea
pop
mov
loopne
shrl
mov
dec
shlb
mov
mov
push
pop
sub
pop
mov
push
stos
jmp
sub
fdivr
ud1
mov
add
mov
push
out
insb
adc
and
clc
mov
and
dec
xor
sbb
sahf
adc
inc
inc
loope
negb
jnp
jmp
and
xchg
vorps
jge
jno
pop
xchg
cs
jecxz
loopne
rorl
xchg
push
pop
inc
fnstenv
sub
pop
addr16
int3
sbb
inc
xor
or
jb
aam
sbb
into
enter
adc
fcmovnbe
stos
out
repnz
das
jno
pop
mov
in
rcrl
fdivrl
cmp
shl
mov
stos
insl
jns
pop
leave
aaa
mov
jmp
push
dec
sbb
mov
dec
add
aas
add
lds
jge
and
cmp
test
adc
mov
lcall
outsb
pop
xchg
adc
cs
xchg
int
stos
jo
mov
mov
jg
js
sub
adcb
sahf
push
push
mov
and
daa
jno
push
mov
int3
shlb
pushf
push
mov
mov
lds
xchg
aad
sub
out
mov
sub
or
adc
and
sub
into
cmp
adc
jo
add
sbb
imul
adcb
mov
mov
push
ds
pop
add
fs
idivb
mov
jmp
jl
push
and
xlat
cmp
push
ss
lret
dec
mov
adc
jmp
pop
dec
mov
and
push
and
pop
jl
or
pushl
icebp
aaa
outsl
add
scas
insl
loop
mov
lcall
xchg
sti
icebp
cmp
sub
sub
or
lea
pop
xchg
out
pop
cmp
mov
push
xorb
push
gs
mov
cmc
xor
xchg
mov
imul
fsubl
stos
pop
stos
std
gs
cmp
jne
movsb
arpl
jmp
mov
mov
data16
int3
jb
and
adc
jle
in
shlb
pop
inc
dec
pop
das
clc
daa
push
incl
fs
mov
andb
and
cwtl
push
mov
xlat
xchg
xor
mov
mov
xor
push
test
xchg
repz
test
dec
mov
adc
int3
jne
cmp
add
scas
jns
subl
mov
subl
daa
cwtl
xor
std
fwait
push
adc
call
iret
dec
push
sub
andl
nop
inc
adc
xchg
aad
push
imul
popa
jmp
xchg
pop
inc
mov
dec
sbb
fimuls
loopne
inc
xchg
in
add
mov
inc
lods
xchg
das
into
push
enter
jb
fcoml
add
add
movsb
les
ja
and
ja
xor
sub
xor
push
dec
mov
dec
cmpsb
orl
enter
adc
and
fsubs
rorb
mov
inc
movsl
out
push
mov
mov
outsl
je
xlat
sub
add
pop
xchg
jne
and
imul
pop
aad
lret
leave
stc
in
cwtl
xor
xor
xchg
adc
jbe
fisttpl
sbb
push
push
push
add
add
cmpsl
xor
popf
ret
mov
out
jecxz
loop
mov
jno
lods
dec
fmul
loop
mov
xchg
in
jmp
scas
divb
add
xchg
pop
jmp
test
mov
outsb
sbb
xchg
dec
loopne
xchg
insl
into
or
pop
popa
jg
push
adc
ja
inc
jp
rorl
arpl
xor
jbe
jno
add
jnp
or
lcall
mul
push
movsl
fadd
dec
les
jmp
pop
pusha
aam
cmpsl
sbb
mov
xchg
movsl
jo
inc
xchg
mov
xor
adc
clc
aaa
and
inc
mov
cmc
shrb
lret
shll
subb
push
or
xorb
push
jb
xchg
and
adc
adc
loopne
hlt
fidivs
mov
pop
test
in
ret
mov
cli
daa
js
in
mov
out
stos
xor
mov
scas
inc
xchg
jo
mov
xorb
xlat
or
fldt
or
daa
popf
mov
andl
jp
xlat
imul
xor
mov
adc
cmc
cli
mov
dec
in
pop
cmc
aas
aam
addr16
lcall
cmp
fs
mov
add
fsubl
sbb
repnz
jmp
cmp
jnp
int3
popf
jle
aaa
or
pop
jnp
popf
dec
lock
in
cmp
popa
push
fisttpll
sub
or
push
fistpll
ss
jg
daa
push
mov
out
int3
mov
loopne
negb
adc
push
fisubl
and
jp
shr
mov
adc
nop
push
mov
pop
mov
fcompl
insb
pushf
add
lret
mov
push
inc
inc
adc
xchg
xchg
mov
loope
and
push
pop
testl
or
fcos
or
bound
pop
repnz
insl
aam
jg
xor
dec
stc
xchg
fidivrs
stos
insb
insb
dec
cmpl
adc
mov
inc
pushf
nop
int
rcrl
inc
lcall
lret
fnstenv
xchg
or
orb
lods
mov
clc
pop
pop
outsl
cli
sbb
outsb
mov
imul
jp
mov
test
ret
cmp
mov
mov
stos
call
insb
aam
mov
and
adc
repz
ret
fcomp
push
push
push
out
mov
sbb
rorl
stos
icebp
lea
jmp
call
rolb
iret
ret
inc
cmc
jbe
inc
imul
mov
add
xchg
nop
dec
imul
fisttpl
int
stos
in
in
imul
lds
mov
mov
shr
nop
push
out
into
push
push
outsl
xorl
insb
in
inc
and
push
mov
inc
fisubs
pop
iret
mov
sub
cmp
lahf
loopne
cmp
or
gs
out
pop
sahf
arpl
xchg
xchg
adc
mov
scas
sub
sti
aas
aaa
loope
cmp
cmpsl
jno
xor
and
push
in
xchg
ret
cltd
lcall
jl
int
stc
pop
pop
in
clc
cwtl
loop
pop
mov
rdpmc
jno
add
rorb
jnp
iret
xchg
cmc
mov
cmp
cmpsb
ffree
repnz
sub
movsl
pusha
sub
cmc
fwait
xor
iret
pop
loopne
addr16
add
adc
inc
dec
inc
xchg
lahf
in
fnstsw
lods
lods
xchg
test
imul
mov
jb
inc
mov
inc
das
mov
fidivrl
jmp
test
cmpsl
aam
test
dec
fs
lds
lcall
sbb
adc
pop
fnstcw
sahf
adc
addr16
push
mov
out
inc
aaa
add
cli
dec
scas
ja
and
cmp
mov
repz
test
bound
insb
fisubs
xchg
push
add
ss
mov
shll
into
stos
dec
lea
xchg
jl
mov
xchg
insl
and
imul
and
arpl
lds
add
inc
push
inc
jp
lret
mov
sub
cmp
pop
and
mov
clc
iret
sub
lds
sub
insl
out
ss
movsb
repz
jg
ss
je
ss
out
xor
shl
mov
int
incb
cmp
fcmovb
adc
pushf
lret
loope
mov
cmp
mov
fadds
mov
dec
aad
aad
cltd
inc
and
std
adcb
pop
jle
clc
clc
iret
int
lods
or
inc
cwtl
mov
filds
or
fldl
inc
jbe
jb
fidivrl
xor
dec
pusha
ret
sbb
add
sbb
clc
inc
outsb
mov
cmp
mov
fsubrp
aad
mov
adcb
push
sub
push
mov
fsubr
mov
ljmp
shrl
push
js
push
mov
mov
mov
and
pusha
cld
dec
call
bound
test
rcll
or
in
adcl
adc
dec
cltd
cltd
mov
cmc
push
add
ja
adc
adc
push
cs
mov
push
push
or
hlt
and
xor
loopne
scas
xlat
or
aad
ret
add
cld
pop
jns
add
dec
xchg
repnz
jle
pop
je
inc
ja
testb
adc
pop
fadds
leave
loop
sbb
cltd
mov
shl
add
fisubrs
xor
jmp
cmp
mov
test
add
leave
add
or
xchg
cwtl
xor
jle
popa
pop
cmp
sbb
mov
inc
jne
lcall
test
dec
or
xchg
and
cmp
or
sub
adc
sti
imull
aaa
push
outsl
mov
scas
jmp
mov
sub
lock
sub
push
and
mov
sti
dec
insl
cmp
mov
pop
mov
int3
lds
mov
pop
push
out
cld
mov
xlat
pop
jae
fdivrs
pop
adc
sbb
mov
rcll
push
push
inc
scas
push
lret
xor
jo
xlat
jle
int
outsl
outsb
mov
test
xor
filds
jnp
or
sbb
lods
push
dec
dec
cld
or
sub
insl
fadds
push
lret
mov
push
inc
cmp
mov
pop
cmp
aas
gs
std
jmp
ljmp
sbb
push
out
daa
and
lea
xor
rcrl
jecxz
pop
int3
test
sbb
lahf
adcl
in
fldt
lahf
push
test
push
mov
sahf
lea
cli
les
pop
js
loope
pop
xchg
insb
jno
push
out
pop
lret
nop
cmc
repnz
cld
loop
add
dec
fwait
repnz
adc
sub
adc
push
xorl
mov
jle
dec
jmp
test
cmp
jg
inc
mov
sub
ds
and
push
clc
and
mov
adc
and
popa
loop
push
push
adcl
lret
aad
mov
dec
push
lret
fdivl
leave
out
dec
cmp
jecxz
dec
mov
aam
rorb
sub
pop
dec
mov
jp
xor
addr16
mov
xor
rcll
fstpt
insl
adc
in
push
dec
inc
fisubrs
mov
rorl
pushf
mov
jg
int3
mov
lea
lret
mov
pop
in
inc
ljmp
rol
pop
pop
adc
mov
mov
popa
xor
stos
and
fnstsw
dec
or
fimull
push
test
idiv
inc
shrb
mov
cmp
or
inc
push
jecxz
adc
sub
or
or
ja
out
push
sti
sbb
push
fimuls
push
rclb
xlat
leave
jbe
sbb
and
mov
rcll
add
add
and
lret
lock
into
sub
add
sbb
inc
mov
adcb
pop
or
mov
aam
icebp
insb
jns
fsubrs
push
or
cmp
cltd
rcll
inc
lods
test
or
pusha
adc
ror
xchg
mov
push
popl
xor
mov
pop
lods
or
incb
push
das
leave
fistpl
inc
movsb
popa
call
push
mov
inc
xchg
nop
insb
add
sbb
mov
insl
xchg
adc
inc
xchg
sub
inc
xchg
addb
push
leave
mov
dec
fninit
iret
ret
arpl
xor
and
pop
rorb
mov
mov
lcall
rcl
inc
adc
add
cmp
jmp
push
in
cmp
sub
cmp
daa
fdivrl
push
xchg
pop
sub
push
pop
inc
out
out
pushf
shll
call
sub
je
andb
mov
stc
and
shlb
mov
call
aaa
mov
pusha
dec
mov
or
dec
cmpsb
push
insl
xor
out
je
add
call
mov
cmp
repnz
aam
test
shl
add
jmp
xchg
xor
inc
ja
ja
xor
sbb
pop
jae
adc
pop
pop
xchg
out
push
cmp
int
pop
aam
hlt
push
scas
push
addb
jbe
aaa
cmpsb
xor
cmp
shl
aad
pusha
and
in
jbe
push
ss
fsubrs
mov
and
or
fidivrl
cmp
call
jmp
mov
xor
insl
mov
adcl
xor
xor
ret
out
inc
decb
rep
into
and
shll
cmc
or
xchg
cmp
pop
mov
test
aas
xor
sbb
xor
arpl
pop
xchg
and
xchg
cmp
and
leave
push
add
sub
jo
outsb
scas
lret
mov
fs
mov
mov
fldl
or
lea
ja
jbe
or
pop
cmp
pop
mov
ja
adc
dec
hlt
out
add
in
mov
es
adc
adc
in
loop
lods
inc
jbe
out
cmpsl
mov
icebp
imul
dec
inc
xchg
pop
sub
cmp
xchg
repz
ret
aam
scas
shlb
dec
outsl
sbb
aam
sbb
pop
aam
out
mov
dec
cmp
outsb
cmp
js
inc
adcl
pop
rclb
mov
push
shrb
sti
jl
pop
mov
std
adc
dec
sahf
or
shl
jo
andb
adc
sub
pop
cmpsl
mov
push
lock
je
sbb
xor
rorb
adc
popf
push
lret
jno
arpl
movsb
xchg
out
clc
cmpsl
pusha
sub
adc
mov
or
js
repnz
lret
lahf
scas
test
in
jg
aas
lret
stos
lret
int
cmp
inc
sbb
cmp
jmp
std
jne
inc
andb
loop
lret
outsl
pop
sbb
jp
pop
mov
and
mov
cmp
xorl
popa
fsincos
xchg
sub
mov
adc
out
mov
out
repnz
les
lcall
cmp
stc
fiaddl
hlt
loope
mov
idivb
sbb
rclb
mul
cld
mov
push
inc
sahf
jge
loop
daa
xchg
inc
mov
outsb
or
emms
adc
sub
sbb
leave
jnp
roll
cmp
dec
sbb
push
jb
jg
cmc
or
mov
testl
je
adc
mov
mov
jmp
and
jbe
rorb
aad
pop
jecxz
callw
pop
lcall
add
and
ror
or
scas
push
addr16
scas
scas
sti
mov
sub
xchg
dec
add
jmp
sub
out
inc
fstpt
sbb
or
sub
dec
scas
out
hlt
mov
cli
sbb
movsb
cs
and
mov
mov
inc
push
push
sbb
xor
outsb
lds
test
jle
scas
js
push
seto
dec
mov
mov
movsl
flds
cs
in
std
jae
cwtl
xor
dec
adc
xor
and
and
stc
add
jg
adc
test
fstps
xchg
mov
jae
xchg
js
add
mov
fucom
out
push
test
cmp
add
iret
iret
mov
sbb
addr16
pop
mov
jl
inc
lcall
daa
imul
mov
adc
test
aas
mov
dec
jmp
das
add
nop
jge
add
js
adc
sbb
jg
icebp
shrl
or
pushf
test
lock
in
scas
mov
lods
insl
inc
repnz
cmc
loop
mov
stos
dec
insl
jo
xchg
rorb
dec
sub
sbb
cmpsl
icebp
inc
lea
mov
stc
jge
in
sbb
leave
je
or
enter
push
loope
lods
fbld
inc
nop
xor
repnz
in
add
mov
nop
fwait
cmp
lods
xor
insl
or
mov
daa
pop
cmpl
push
movsb
adc
mov
lods
movlps
int
pop
mov
jmp
lods
pop
mov
sbb
cmp
aad
mov
push
out
mov
xchg
jmp
inc
pop
sbb
clc
jecxz
dec
xlat
xchg
cmc
and
ds
inc
aam
sub
mov
imul
push
ja
movl
fsubrs
jmp
bound
je
out
mov
push
sahf
out
jb
in
inc
jnp
jno
xor
mov
mov
iret
addr16
mov
test
jbe
cld
sub
ret
or
mov
jno,pt
add
leave
xchg
mov
int3
stos
inc
xor
cmp
and
in
jl
pop
sbb
test
mov
mov
sbb
rclb
add
dec
xchg
fcomip
push
repz
addr16
dec
mov
test
xor
sub
bound
jae
popa
dec
push
mov
dec
or
aad
pop
loopne
sahf
pop
mov
jl
testl
and
in
and
mov
sbb
lahf
gs
je
das
jns
jp
fldcw
pop
push
push
jecxz
pushf
jae
jg
or
pop
mov
sti
jg
test
pop
out
das
sbb
or
lods
push
in
out
xchg
push
inc
imul
and
icebp
adc
test
bound
clc
enter
insl
sub
cld
sahf
jbe
out
cs
mov
and
xor
inc
lods
mov
stos
xor
inc
nop
movsl
lret
jnp
dec
lcall
xchg
pushf
cmp
or
sahf
push
mov
push
push
insl
scas
call
addr16
xchg
aam
lds
xchg
mov
push
aam
pop
pushf
sub
jb
sti
outsb
enter
pusha
movsl
fistpl
sbb
negl
lcall
enter
pop
insl
push
insl
sub
jg
add
lea
or
push
sbb
mov
test
mov
enter
jne
movsb
or
ja
lods
cmc
mov
xchg
test
add
sub
je
cmp
idiv
xchg
bound
jle
ss
push
aam
xor
xor
adc
adc
mov
xor
lods
sbb
sub
lcall
daa
jno
sub
or
mov
sbb
notl
outsl
sub
pushf
xor
sub
add
sub
lds
mov
repz
outsl
jne
jecxz
mov
loopne
fnsave
idivb
mov
xchg
jb
out
dec
lock
in
or
mov
add
lahf
or
aam
gs
jbe
scas
xchg
push
inc
mov
inc
xchg
sub
sub
push
daa
jno
mov
mov
add
xchg
inc
add
cmpl
sub
mov
pop
push
scas
dec
sub
int3
rolb
mov
sub
lret
aas
inc
lock
bound
sub
mov
add
pop
sub
hlt
xchg
mov
aas
hlt
or
test
xor
fistps
add
mov
je
or
cld
jmp
inc
movsl
push
sub
mov
dec
ja
jg
ljmp
sbb
and
pop
push
add
stc
into
push
xor
and
push
lcall
mov
dec
ljmp
mov
daa
cmp
outsb
push
mov
je
mov
lds
push
add
dec
rcrl
jg
mov
stos
cmp
sub
or
sub
mov
jecxz
mov
shll
outsb
imul
pop
es
and
jecxz
mov
ret
jmp
cwtl
mov
js
rclb
sbb
sbbl
adc
sub
stc
inc
mov
xor
loopne
mov
sahf
hlt
mov
cs
add
dec
ljmp
sub
inc
aas
in
scas
in
inc
inc
into
fwait
fs
hlt
adc
cs
mov
jmp
and
sub
popa
sbb
lret
sti
mov
inc
stos
iret
adc
dec
mov
fsubl
mov
fcomi
insb
push
jo
mov
out
popf
out
repnz
stos
dec
xchg
rcrl
jo
xchg
cmp
scas
sbb
push
xor
mov
cmp
lods
leave
push
sub
pop
das
lock
push
mov
jo
sti
test
xchg
jns
mov
div
lret
aaa
lcall
lret
orl
test
pop
sub
mov
sub
and
pusha
mov
add
or
popa
xchg
xchg
and
dec
xor
jae
fcmove
clc
push
js
push
push
addr16
cmp
pop
mov
ficompl
inc
loop
dec
xchg
mov
mov
push
lcall
jno
ffreep
push
repz
and
repz
mov
mov
mov
out
jnp
adc
mov
cmpsl
sbb
ljmp
xchg
add
sub
jnp
imull
add
mov
in
cmp
jle
js,pn
and
test
ja
imul
sbb
nop
dec
add
in
outsb
test
test
call
addr16
pop
hlt
bound
getsec
push
cs
inc
pop
lcall
sub
jno
sarb
in
in
pop
inc
adc
pop
mov
aam
daa
aas
pop
add
movsb
inc
mov
mov
outsl
cmp
xor
pop
xor
sbb
sbb
add
aas
mov
xor
fmul
test
mov
dec
inc
add
push
dec
mov
lods
sub
jnp
repz
dec
adc
xchg
iret
jo
shll
mov
push
push
into
insl
inc
scas
ficoms
add
sub
dec
mov
and
mov
dec
loopne
cmp
jle
mov
test
cmp
and
lods
stc
add
inc
mov
addb
aas
lea
std
aad
mov
xlat
ljmp
sbb
xchg
jb
cltd
xlat
mov
fidivrl
lcall
dec
xor
les
fcompl
shr
or
add
push
lret
cmc
pop
pop
xor
cmp
mov
sti
sub
daa
xchg
push
and
sbb
cmc
insb
shufps
ret
mov
popf
lret
jns
lahf
mov
xor
xlat
add
leave
js
mov
dec
fimull
xchg
jp
or
or
xchg
in
sub
cmpsl
pop
push
pop
jmp
or
test
and
hlt
cmp
xchg
xor
mov
mov
ret
cld
lahf
jns
mov
push
leave
dec
into
rcll
fucomip
pop
or
in
pop
push
sub
sbb
icebp
out
jbe
lods
sub
push
push
jg
popf
pop
mov
cld
and
mov
jle
xor
out
xor
mov
stos
out
mov
popf
mov
pop
inc
inc
mov
and
push
jb
lcall
adc
mov
sbb
push
mov
adc
fwait
mov
sub
int3
ret
mov
mov
ror
mov
lahf
jbe
mov
xchg
daa
push
lods
in
mov
pop
xchg
mov
cwtl
int3
fs
stos
add
sti
mov
pop
inc
addr16
test
add
fisttpll
pop
push
or
mov
imulb
or
xchg
sub
adc
in
adc
push
xchg
lea
or
mov
rcr
pop
xor
outsb
movsb
je
add
loopne
insl
out
cs
dec
in
test
mov
sbb
mov
xchg
cmpsb
sbb
inc
add
adc
into
pextrw
push
jno
je
aaa
add
and
sahf
add
ss
jne
xchg
sbb
xchg
test
mov
call
into
fwait
push
jbe
push
or
cltd
sbb
mov
fildll
call
fidivs
cmp
xchg
pop
mov
sub
push
cmc
or
pop
mov
in
movsb
int
stos
mov
cmpsb
cld
and
pop
les
mov
mov
mov
sub
xchg
xorl
fisubs
dec
fidivs
jmp
xchg
mov
mov
shlb
mov
sbb
enter
test
pop
jno
mov
daa
xchg
test
pop
mov
cmp
mov
mov
xchg
mov
sbb
dec
hlt
int
cmp
mov
ficomps
dec
sbb
adc
push
movsl
push
out
dec
aam
xor
or
xor
sti
adc
sti
inc
in
xor
pop
lods
or
cmpsl
jnp
inc
sub
inc
out
andb
sub
mov
in
popa
inc
ficoms
nop
jbe
roll
xchg
fs
xchg
and
lahf
cwtl
push
pop
and
adc
xor
and
xchg
fimull
out
xchg
xor
xor
push
mov
jle
stos
cwtl
cld
lods
in
mov
leave
push
ja
testb
xchg
inc
out
xor
mov
dec
inc
xor
jle
adc
cmc
pusha
xorl
dec
daa
shrb
add
loope
push
cltd
pop
jmp
ja
ds
fldenv
jecxz
arpl
mov
add
mov
push
lret
mov
mov
and
mov
scas
scas
mov
jecxz
push
scas
sub
push
jmp
cli
push
repnz
call
test
cmp
sti
fimuls
jae
data16
cwtl
mov
xchg
add
daa
push
jecxz
test
bnd
or
int
int
dec
mov
clc
cmp
xor
mov
js
out
push
push
mov
add
xchg
pop
add
and
sub
xor
into
cmp
shrd
test
inc
les
mov
push
mov
nop
fistl
xor
dec
pop
mov
sbb
fcoms
fwait
ja
cmp
or
mov
pushf
xor
mov
jmp
test
mov
cltd
lea
pop
mov
dec
pop
test
fdivrs
mov
jmp
cwtl
icebp
mov
imul
jne
adc
in
imul
aam
lods
ss
jl
push
sub
jecxz
sub
je
cmpsb
daa
pop
or
sar
es
cmc
push
push
hlt
icebp
xor
arpl
xor
xchg
aad
out
lcall
and
sbb
mov
pmaxub
inc
add
jns
aam
sti
paddd
inc
and
pop
aam
mov
mov
mov
push
fldcw
xchg
dec
jmp
dec
ss
adc
xchg
mov
aas
mov
lods
jo
clc
fstpt
or
js
movntps
gs
mov
fwait
xchg
and
push
pop
iret
cmpsl
test
inc
int3
dec
repz
sub
pop
jecxz
loopne
cmp
dec
sbb
jle
mov
xchg
mov
testl
shll
rcrl
fld
and
inc
test
imul
sbb
jb
pop
fcomps
adc
mov
inc
ja
iret
mov
push
lret
inc
inc
les
imul
sub
stos
hlt
or
cmp
nop
aas
pop
cmc
mov
push
pop
xchg
jae
xor
lret
pushf
mov
cmp
das
add
push
pop
loop
testl
jmp
adc
insb
xchg
mov
dec
stos
push
push
pop
cmp
sbb
sub
test
xchg
adc
cltd
imul
xor
jno
clc
hlt
daa
inc
mov
sub
xor
push
mov
inc
push
fisubs
push
or
sti
adc
ror
add
shrl
jno
imul
not
ret
jge
cmp
ljmp
adc
sub
sub
sub
sbb
stos
or
inc
and
call
clc
mov
xlat
aas
xor
loopne
cmp
inc
or
or
iret
imul
xor
adc
add
mov
movsb
cld
push
sbb
mov
gs
cmp
out
add
cmp
in
push
inc
push
mov
sti
stc
fsubp
pop
xor
cmovno
neg
ljmp
add
push
mov
jb
xchg
lock
call
fistps
js
rorl
and
ror
in
fcmovnb
sbb
das
xchg
cmp
nop
jle
adc
ret
mov
xor
icebp
sub
xor
or
pop
cmp
lret
cmp
bound
fldz
pop
orb
lret
movsl
pop
lods
aad
addr16
sub
insb
jl
xchg
xchg
sub
pop
sub
sbb
lret
mov
lea
jecxz
shr
aam
gs
sbb
mov
enter
shrb
stos
das
jge
add
jo
xchg
ja
stc
push
jle
push
xlat
inc
xor
pushf
dec
cli
inc
pop
jg
bound
dec
mov
hlt
adc
cmp
xor
mov
push
xorb
xchg
scas
arpl
ffreep
push
inc
jnp
and
iret
punpcklbw
jl
sbb
aam
inc
mov
ret
jg
inc
and
jns
xorl
outsb
or
lahf
hlt
dec
xorb
mov
testl
lods
pop
jbe
into
out
psllw
adc
adc
inc
loop
scas
ret
imul
push
and
fwait
push
dec
push
enter
cmp
mov
and
dec
in
mov
dec
or
adc
ret
repz
insb
mov
jle
mov
fistpll
and
adc
gs
pop
mov
andb
aam
mov
mov
lea
xchg
ret
test
inc
fwait
inc
out
push
out
mov
popf
imul
inc
stos
cwtl
pushf
daa
sarl
sbb
xchg
jmp
insb
incl
ds
mov
pop
mov
mov
push
incb
jb
and
add
and
test
les
push
out
mov
mov
movsb
inc
ret
fs
adc
xorb
ds
mov
pop
lcall
and
cmp
jb
sub
add
dec
jno
out
cltd
fdivl
push
pop
and
mov
xchg
in
outsb
cmpb
movsl
pop
push
cmc
dec
xor
mov
popf
xchg
push
mov
test
dec
and
xlat
jae
lret
add
lods
lcall
stc
cmpsl
and
jae
mov
add
cmpsb
out
jmp
jp
imulb
dec
jne
std
jns
or
pop
pop
lcall
insb
and
pop
sbb
jns
cld
aam
pop
push
lock
jno
into
xchg
jae
xchg
sbb
movups
pop
sub
enter
mov
cmovg
push
ds
xchg
lods
lcall
mov
lods
adc
lock
inc
lcall
arpl
movsb
adc
jbe
lahf
cmp
cli
mov
test
repnz
mov
fldcw
mov
or
flds
xchg
fptan
cmc
sbb
shlb
scas
or
or
xor
mov
mov
scas
mov
fwait
sahf
inc
inc
pop
bound
js
cli
dec
jae
mov
xor
lret
mov
out
lods
inc
ret
pop
mov
sbb
lds
dec
stos
mov
cltd
in
addb
arpl
mul
mov
add
inc
sbb
stos
mov
fcoms
test
mov
adc
rclb
pop
sub
popa
sub
notl
in
out
xchg
cltd
div
dec
dec
xchg
in
xchg
clc
ror
xchg
lock
push
cli
in
pop
or
outsb
xchg
or
or
fimuls
mov
pop
xchg
adc
cmp
sbb
aam
ss
cmp
xchg
js
addb
les
aad
pop
mov
cmpsb
fwait
notl
imul
shlb
cmp
fwait
cmpsb
jnp
inc
sub
popa
adc
test
sbb
js
push
pop
xor
xchg
xchg
lods
xor
lcall
adc
mov
enter
sarl
fxam
sbb
push
push
scas
out
xchg
popl
fdivrp
icebp
dec
in
sbb
cmpsb
pop
pop
xchg
push
push
stos
pop
pusha
movzbl
inc
bndldx
sbb
cmpsb
mov
jmp
mov
ja
pop
lcall
inc
mov
jmp
push
adc
pushf
das
lock
pop
and
cmp
jecxz
push
jo
mov
stc
hlt
stos
xor
add
into
sub
or
scas
mov
mov
cld
fs
cmc
das
ret
push
xchg
fidivrs
xchg
mov
insl
mov
lods
xchg
movsl
sbb
test
stc
jno
int
xchg
dec
push
dec
repnz
sahf
push
vsubsd
inc
pop
les
in
fbld
or
in
bound
dec
cmp
xchg
jg
push
repnz
inc
scas
dec
scas
pop
mov
inc
scas
and
mov
movsb
in
adc
hlt
inc
push
lcall
xor
and
and
int
push
lret
es
lods
paddsw
cmp
ret
test
cmpsb
jns
rolb
mov
add
push
fwait
jle
jno
or
ret
fdiv
sbb
aaa
int
lea
mov
mov
out
sub
push
rcrb
repnz
frstor
f2xm1
arpl
mov
push
fimuls
pop
push
and
lahf
push
std
aas
ds
jge
orb
adc
xchg
lods
cwtl
mov
xor
jge
iret
xor
lods
movsl
mov
and
aad
test
adc
mov
push
and
jp
jmp
adc
in
sbb
mov
push
mov
pop
lahf
dec
movsl
pop
dec
pop
arpl
and
and
jb
pop
mov
adc
outsl
mov
pusha
xor
gs
fwait
cld
pop
ljmp
xor
addr16
jge
je
fdivrs
push
mov
jae
adc
je
jno
mov
adcl
xchg
push
inc
sub
rcll
inc
mov
insl
mov
jbe
xchg
out
pop
out
sysexit
pop
pusha
movsb
xlat
lret
dec
lret
mov
repz
bound
cmpsl
dec
or
xlat
rcr
push
mov
cmp
sbb
imul
xchg
movsl
sbb
mov
js
gs
sbb
stc
icebp
mov
xchg
gs
push
push
int
mov
test
mov
jmp
cmp
test
insl
test
xor
mov
jae
icebp
add
aaa
and
xchg
push
mov
mov
push
sub
push
mov
out
cmpsb
jmp
push
jns
insb
fstpt
ss
and
in
ret
dec
dec
xchg
inc
sti
mov
stc
mov
or
mov
cld
into
sbb
test
fwait
out
push
mulb
stc
mov
ss
sub
pop
lahf
out
stc
pop
das
mov
rolb
imull
call
pop
aad
out
in
cmpb
add
jl
mov
push
arpl
shrl
scas
sbb
push
lods
fnsave
jg
sbb
xlat
fcmovbe
jnp
cmpsb
sbb
ficompl
pop
push
lods
fldcw
pop
pop
push
cmp
jnp
push
fimuls
inc
xorb
lock
adc
loope
dec
aaa
mov
xor
lea
cmp
push
mov
sbb
call
inc
xchg
jb
push
push
mov
cli
inc
mov
xor
lea
sbb
add
in
cltd
xchg
insl
xchg
addr16
mov
xchg
fstl
mov
inc
mov
mov
or
dec
leave
out
fs
lods
imul
sub
js
jge
inc
fldt
pop
push
mov
push
lods
out
lods
sub
popa
lret
mov
cmp
or
lahf
push
inc
cmp
pop
gs
jge
xor
dec
mov
or
call
dec
add
cs
scas
insb
pop
enter
out
or
movsb
xor
popf
or
test
out
xchg
idiv
or
fbstp
push
mov
and
loope
jae
cld
xchg
out
sub
pop
fnstcw
clc
jge
movsb
push
hlt
mov
pop
test
testb
xor
mov
aam
lret
out
shr
jno
sbb
pop
push
ss
lods
and
daa
test
push
xor
into
outsb
xchg
mov
jnp
inc
xor
les
insb
cltd
cmp
test
mov
hlt
sub
push
xchg
and
stos
cmp
repz
sub
and
hlt
ffree
jge
ss
mov
lds
in
xlat
dec
push
inc
dec
dec
pop
fisubrl
addr16
mov
popf
jmp
int3
mov
mov
aam
daa
faddp
lods
jo
mov
dec
in
pop
pop
and
sub
sub
pushf
adc
sbb
decl
pop
add
xchg
inc
testl
cmpsl
mov
rorl
std
xor
mov
mov
out
pop
inc
mov
sub
sbb
and
fmul
mov
xchg
fisubs
popa
rolb
cs
fcmovnu
jnp
xor
pop
daa
mov
mov
pop
xor
pop
addr16
div
lds
ret
sti
adc
imul
lahf
mov
daa
add
gs
loop
cli
xor
jmp
push
sahf
xor
dec
and
mov
addr16
test
jne
xor
inc
jg
sub
gs
mov
cmp
dec
add
mov
dec
jbe
mov
cmp
aad
imul
pusha
inc
mov
lret
push
scas
or
clc
push
push
jl
dec
int
xchg
ja
pop
dec
and
es
stc
sub
mov
mov
pcmpeqb
cmpsl
ljmp
mov
pushf
shl
sbb
mov
adc
out
cli
fsubrs
aaa
jmp
sti
fincstp
push
cmp
rolb
fadds
imul
jb
ret
mov
xchg
rcl
mov
stos
sti
mov
xchg
or
shl
pusha
negl
and
push
mov
mov
mov
cmp
pop
cmp
adcb
fcomi
pushf
push
adcb
js
addl
pop
fcomps
xor
cltd
adc
movsl
scas
rcrb
jl
jne
decl
call
fcomi
lds
cwtl
dec
or
outsb
imul
jle
mov
sub
xor
inc
dec
jns
add
push
data16
imul
pop
sub
push
jo
push
mov
sahf
adc
clc
xchg
js
dec
sbb
jle
nop
out
daa
mov
mov
lods
nop
shll
xlat
aas
adc
pushf
sub
pop
repz
inc
mov
xor
inc
adc
dec
out
mov
jmp
lds
adc
popa
pop
cmp
add
xor
iret
cmpsb
lods
cltd
test
icebp
mov
mov
je
mov
test
scas
xchg
ljmp
sub
in
mov
mov
popa
dec
shrb
fstps
movntq
or
dec
add
das
idivl
loopne
icebp
jg
fisubl
cmp
mov
add
fildll
repnz
adc
pusha
xchg
inc
jmp
mov
shrl
add
and
stc
scas
rclb
dec
in
mov
fldcw
mov
xchg
cmp
push
fisttpl
lcall
jo
push
into
push
cmpsl
mov
sahf
lret
ret
xor
popf
xor
lret
lret
sbb
xor
cltd
aam
xchg
dec
shlb
in
jbe
adc
adc
scas
push
cmp
in
imul
out
les
repz
push
ror
outsl
repnz
and
jmp
xchg
dec
inc
test
popa
mov
stos
dec
ret
out
pop
pop
xchg
and
pop
jecxz
hlt
sub
dec
mov
fs
pop
jnp
push
jb
sub
clc
or
sub
pop
cli
pop
popa
insb
movsl
jp
addr16
push
sbb
sub
xchg
jb
sbb
pop
mov
ror
xchg
xchg
or
inc
xchg
xor
adc
fwait
cmpb
jbe
lea
dec
mov
mov
mov
les
cltd
push
sub
popf
mov
push
mov
fstl
into
mov
dec
xlat
dec
jb
ds
xchg
adc
dec
or
lahf
out
in
xor
ret
insl
jg
jg
js
addl
repnz
outsb
lret
mov
enter
jmp
mov
cs
xor
adc
jb
loope
cli
push
lcall
bound
lcall
andl
sbb
add
mov
inc
push
pop
arpl
xorl
loope
mov
cs
push
imul
roll
lret
xchg
cltd
mov
faddl
lcall
jmp
int
inc
aas
movsb
or
sti
push
jmp
mov
leave
mov
sub
stc
out
add
adc
push
dec
fists
jnp
stos
lret
push
dec
xchg
jecxz
iret
jae
xchg
aas
mov
xchg
outsl
ficoms
push
xor
pop
stos
mov
subl
mov
sub
nop
xchg
ret
cmp
sub
or
dec
in
sbb
fstpl
push
jle
orb
push
mov
fwait
comiss
add
lock
fwait
in
outsb
push
fsubs
push
jae
push
mov
clc
idiv
fbld
in
lock
mulb
imul
ja
jge
into
adc
repz
xchg
int
pop
sbb
outsb
adc
sbb
push
sub
push
pop
pop
pop
je
adc
adcb
jb
lret
rol
hlt
jae
ja
in
push
es
lahf
mov
outsl
stos
popa
jo
pusha
and
inc
push
mov
cmpl
gs
cs
mov
mulb
imul
push
test
dec
pop
insb
out
ret
mov
rcrl
push
push
scas
dec
pop
sub
fs
sbb
pushf
adc
fldcw
jp
std
jmp
lods
pop
dec
ja
xchg
xchg
xchg
cmp
out
test
out
or
cmpsb
pushf
jl
mov
mov
fstl
adc
packsswb
pushf
pop
repnz
in
sub
mov
in
scas
and
cmp
xor
in
lahf
scas
dec
pminub
out
and
movsl
mov
loop
sub
lcall
lock
fidivrs
sbb
pop
sahf
addl
and
fcompl
xor
out
jmp
pop
add
jp
and
or
movsb
hlt
add
repnz
cmpsb
xchg
add
push
jp
cmp
mov
pop
pop
mov
ret
pop
fmull
cli
add
out
pop
adc
stos
jno
sub
add
rcrl
sub
aaa
push
test
ret
pop
adc
cld
shrl
scas
and
xor
stos
imul
out
pop
stos
and
add
bnd
sbbb
pop
rsqrtps
adc
or
ficoms
mov
popf
arpl
xor
pop
lea
aam
adc
jmp
sub
cmp
mov
mov
push
pop
sub
lcall
push
jae
nop
jg
into
xchg
and
in
nop
clc
sbbl
cwtl
outsb
prefetch
sbb
rcr
cmpb
test
fs
jl
adc
jno
ret
cmp
outsl
mov
jp
lea
sti
out
mov
aad
sub
rorb
fmuls
mov
pop
dec
dec
mov
mov
jge
jns
in
inc
fmuls
inc
push
mov
add
imul
les
out
sub
cli
jae
push
pop
pop
pop
notb
sub
mul
inc
cld
xchg
out
arpl
data16
aad
in
call
inc
icebp
lods
pushf
in
cmpsl
subb
out
popa
mov
fs
out
mov
mov
dec
shl
sahf
sahf
in
addl
add
fidivs
std
les
aaa
or
repz
lret
push
cmc
inc
mov
rolb
jp
adc
in
fsubl
adc
jcxz
dec
cltd
outsl
ljmp
cmp
jecxz
adc
dec
mov
or
and
jb
sub
fcmovb
fimuls
mov
dec
mov
daa
sub
pop
cltd
movsl
test
outsl
cli
ret
ret
ret
sbb
sub
pop
mov
pop
adc
pop
pop
fstps
into
jle
addl
xchg
rol
ret
jno
cmp
out
mov
add
jb
ljmp
mov
adc
sub
outsl
dec
out
jbe
push
mov
mov
inc
cmc
out
push
mov
jecxz
pop
add
test
sbb
icebp
lods
xor
in
or
jg
lods
mov
cmc
rolb
adc
sbb
movsl
imul
andb
sub
stos
clc
mov
dec
or
ror
nop
jge
imul
push
sahf
mov
movsb
insl
fmulp
addr16
dec
and
xchg
out
jns
jge
add
loopne
jnp
push
mov
adc
sub
xor
scas
ret
xchg
dec
rolb
mov
in
pusha
xlat
mov
jno
cmpb
pushf
fsubrl
mov
insl
sub
loop
cmp
lret
dec
sub
cmc
aad
mov
push
das
out
pop
mov
xchg
out
popa
es
imulb
cmp
ror
adc
mov
xchg
shlb
cmp
xchg
dec
pop
jns
ljmp
loopw
xor
inc
inc
shr
int
insl
test
stos
sub
dec
push
loope
xchg
sbb
sub
daa
or
fsub
adc
and
dec
mov
leave
dec
jg
test
dec
daa
jo
cli
lods
push
insl
mov
sbb
cli
or
les
fldl2e
pusha
inc
rorl
adc
mov
jle
int
les
arpl
add
shll
mov
js
icebp
cmpsl
fdivrl
and
popa
mov
xchg
cwtl
ret
popa
inc
stos
repnz
xor
xchg
jae
mov
xchg
pop
cmp
cmpsl
fimuls
mov
loopne
jno
and
ret
sar
pop
dec
xor
sub
cs
adc
cli
and
loop
mov
rclb
sbb
mov
push
jno
cmpsl
xor
aaa
pop
pop
add
rolb
add
jmp
adc
inc
insl
and
mov
adc
mov
ret
inc
mov
ss
lahf
add
push
imul
in
pusha
scas
add
mov
mov
dec
add
sbb
adc
out
cld
mov
add
mov
int3
mov
mov
shrb
pop
loope
int3
jmp
dec
pushf
jno
cs
and
xchg
pop
fstp
sub
pop
jmp
lods
dec
xchg
shl
cmp
push
adc
push
std
jl,pt
cmp
lea
xchg
mov
test
add
dec
sub
xchg
das
dec
test
idivb
mov
lahf
xor
xchg
lock
mov
mov
shll
push
fcmovnu
sbb
scas
dec
push
and
gs
aad
jle
add
pop
dec
and
jecxz
mov
or
push
add
fsubr
adc
adc
cmp
mov
ds
fimuls
fmull
mov
mov
stc
pop
push
pop
jnp
pop
mov
and
xlat
subps
fsts
jnp
xor
outsb
mov
sbb
push
fwait
jle
sbb
sub
icebp
push
xchg
push
inc
cmpsb
mov
inc
inc
mov
test
je
int3
and
add
dec
mov
out
test
add
mov
dec
cmp
or
push
mov
xchg
jmp
lock
test
lret
or
je
pop
cltd
aas
lods
pop
ja
loopne
nop
inc
fs
bound
mov
stos
sbb
sub
mov
in
dec
adc
xchg
xor
jmp
dec
xor
jae
in
aam
out
jbe
push
adc
daa
add
cmp
add
mov
les
pop
xor
jecxz
and
dec
pop
dec
jg
and
mov
inc
pop
dec
inc
insb
test
je
leave
jg
pop
push
aaa
insl
popa
mov
push
or
jb
fisttpl
fisttps
mov
in
cld
retw
cmp
scas
movmskps
mov
les
xlat
ss
cmp
stos
mov
int
mov
pop
int3
std
scas
or
jnp
inc
lret
in
int
mov
jnp
mov
xchg
cld
dec
jne
ds
push
dec
mov
push
jo
sti
lock
jo
iret
mov
out
je
mov
cltd
add
inc
mov
cmp
adc
jp
sub
push
lods
rcrb
adcl
outsl
out
inc
xor
xchg
jl
inc
clc
mov
cwtl
mov
popa
or
mov
loope
aad
adc
lds
dec
add
sbb
cwtl
rcr
sbb
inc
mov
lods
mov
mov
in
stc
loop
icebp
pop
xchg
sbb
cmp
testl
and
adc
negl
ret
xchg
xor
lcall
xchg
fnstenv
aam
push
or
cld
push
and
repz
out
ds
push
inc
lods
inc
and
loop
addl
fwait
push
in
mov
jecxz
dec
lods
xor
int
outsl
mov
xchg
xchg
xor
fcompl
daa
cmp
cmp
and
add
test
adc
outsb
out
mov
dec
xchg
pusha
std
xor
or
sqrtps
repz
mov
or
movnti
sub
mov
dec
arpl
dec
sub
mov
movsl
in
mov
mov
jl
and
fisubrl
sahf
push
dec
clc
fcoml
pop
rorb
mov
imulb
sarl
pop
push
fstl
mov
push
cmp
or
jnp
ret
fdivrs
xor
loopne
shl
sti
add
hlt
mov
fsubr
data16
push
andl
add
sbb
cmpl
inc
shlb
add
jnp
aad
adc
xorb
sub
je
push
cmp
push
push
icebp
pop
mov
mov
push
cmp
add
sbb
test
sbb
jl
addr16
mov
push
int3
frstor
sub
inc
popf
cmp
or
enter
push
xchg
mov
cmp
cld
mov
lock
rcrl
fdivrs
pop
pop
adc
cmc
mov
sub
cmp
imul
push
and
add
xchg
dec
bound
cmc
out
jno
adc
mov
jae
iret
adc
jbe
subl
cmp
iret
aaa
or
mov
out
sbb
ss
cmc
sbb
es
mull
es
sub
jae
jo
pop
inc
add
mov
pop
std
lock
pop
jge
stos
xor
shlb
inc
imulb
test
ss
push
cli
test
push
jmp
push
mov
add
sarl
sbb
fcmovnb
adc
pusha
push
adc
cmp
in
in
test
add
inc
inc
dec
push
shlb
mov
arpl
in
cmpsl
scas
repz
icebp
mov
adc
jl
add
sbb
and
int
push
xchg
fisubs
cltd
jne
mov
stos
cmp
mov
and
js
fldl
push
ljmp
loopne
cmp
push
insl
shrb
ds
hlt
test
sbb
mulps
scas
jle
mov
rcrb
shl
dec
scas
cmp
fcmovnbe
push
dec
mov
std
outsb
outsl
sub
das
sbb
xorb
je
sub
fs
outsl
out
mov
add
subl
mov
xor
or
inc
aad
out
inc
pusha
xor
ret
inc
push
xor
and
dec
dec
repz
loop
push
lea
adc
jle
cmpsl
ret
jns
and
fisttpll
mov
mov
loopne
xor
mov
fisttpl
sbb
aaa
pushf
rolb
ss
or
mov
add
cmp
pop
cmp
jnp
cmc
sbb
loope
and
stos
jecxz
xchg
or
or
xchg
cmp
or
sbb
repz
gs
hlt
js
imul
hlt
pop
fwait
jp
icebp
subl
inc
sub
ss
push
push
iret
das
mov
pop
stos
insl
add
fdivrs
sbb
sti
push
cmc
jae
repz
pop
icebp
sub
jecxz
shl
lcall
xorl
jecxz
in
fs
mov
dec
divb
and
mov
xor
outsl
and
stos
or
out
sbb
inc
inc
inc
or
push
pop
inc
or
mov
cmp
sub
jle
push
adc
jmp
push
test
imul
scas
or
outsb
and
push
mov
lret
clc
inc
pop
xor
in
xor
call
int3
pop
nop
cmpsb
lahf
addb
shll
nop
cs
lds
pop
dec
xchg
pop
mov
pushf
sbb
repz
xor
popl
test
mov
xchg
pop
pop
sub
sbb
pusha
sub
lahf
loope
and
jmp
cmpsb
push
push
adcb
out
daa
xor
aas
xor
push
add
push
ljmp
loop
xchg
faddp
lock
jge
scas
jge
popa
sub
push
or
aad
push
js
pop
sahf
xchg
leave
jl
adc
inc
pop
jnp
in
cmp
push
in
decb
sub
jbe
cmp
ss
cmp
orb
psraw
pusha
data16
icebp
add
fiaddl
popf
mov
xlat
in
addb
ljmp
sub
stos
push
or
mov
pop
dec
rcrl
sub
scas
sbb
dec
aaa
jmp
push
jecxz
xor
cmp
jns
adc
clc
mov
in
mov
pop
daa
outsl
xlat
add
imul
test
dec
sbb
or
adc
notl
and
movsl
mov
js
jge
ss
xchg
pop
jae
cmc
test
dec
test
cmpsl
push
test
cld
jns
sub
add
push
stos
dec
mov
flds
cmp
lahf
frstor
xchg
jge
xor
or
xchg
add
inc
movsl
je
or
sbb
inc
and
fstl
jl
data16
es
mov
lods
sahf
out
test
mov
mov
imul
and
mov
cmp
insb
aam
ljmp
lea
enter
lcall
cmp
lret
xor
out
pop
mov
lcall
punpcklbw
lock
loop
xchg
out
xchg
xchg
mov
mov
xlat
jmp
mov
scas
loop
or
cltd
gs
mov
outsb
cltd
and
rorb
lock
pop
jmp
inc
pop
out
jb
loopew
das
pop
add
jmp
rcll
popa
fisubs
test
cmp
mov
imul
arpl
repz
aam
xorb
ljmp
or
mov
test
pop
aam
shlb
pusha
and
jne
xchg
movsl
or
shrl
call
jl
cmp
dec
test
daa
sub
adc
jecxz
inc
fdivr
add
lret
jo
in
mov
push
push
daa
sbb
cmp
fnsave
cmp
and
rcl
sahf
xchg
and
into
cmc
js
xchg
and
stos
jae
fldt
mov
outsb
ret
aas
mov
cltd
aad
dec
pop
sub
insb
xorl
adc
dec
lods
xchg
mov
aaa
insl
enter
imul
cmc
cmp
repz
xchg
xchg
test
out
sbb
scas
adc
out
fwait
push
jl
sbb
pop
sti
mov
arpl
jle
push
lcall
xor
mov
movsb
mov
jb
push
out
add
popa
std
sub
mov
ja
cmp
adc
lods
sub
xor
dec
jns
xorl
mov
dec
std
cli
push
inc
popa
mov
mov
mov
hlt
test
enter
les
push
xor
add
ss
jge
push
mov
arpl
jecxz
mov
adc
out
cmp
sti
fucomi
mov
test
out
jp
and
loopne
inc
arpl
les
popf
jae
inc
insb
adc
mov
out
lret
cmpsl
outsl
roll
inc
adc
int
jo
lret
in
insb
and
fcoms
push
popf
mov
mov
adc
addr16
sub
pop
sbb
test
jecxz
dec
js
das
scas
scas
sbb
mov
mov
outsl
shrb
ret
jnp
jl
xor
mov
or
xor
subb
jne
data16
in
mov
fs
lock
in
aad
pop
mov
cwtl
ss
xor
xlat
mov
loopne
cli
lahf
mov
add
push
sub
iret
xchg
dec
incb
fs
push
sub
fcmovu
pop
push
inc
and
jns
into
xchg
test
and
mov
sarl
into
push
jno
cli
jo
jae
fsubrl
lret
popa
xchg
pushf
xchg
xchg
test
sbb
push
fistpll
mov
insb
mov
mov
push
mov
fidivl
jb
in
xor
std
jne,pt
pop
mov
xor
jo
mov
cmp
cmp
test
cld
inc
pop
scas
std
arpl
pusha
pushf
xchg
jp
test
pop
ja
xlat
addr16
test
cs
and
inc
inc
nop
mov
and
jo
mov
xchg
and
outsl
pop
das
test
aaa
inc
outsb
daa
jno
push
xchg
vshufps
ljmp
adc
ret
aas
dec
fisubs
sti
dec
mov
sub
pop
cltd
xchg
add
cmc
jo
push
popa
pop
ret
bound
hlt
sahf
pop
xor
cwtl
loope
lret
fidivs
mov
scas
in
push
jnp
andl
incl
add
and
cmpsl
outsl
enter
xchg
xor
lahf
dec
pop
sub
push
int
dec
idivl
mov
dec
cld
mov
enter
call
leave
rorb
xchg
add
or
lock
pop
std
inc
dec
adc
addr16
out
sbb
xchg
in
sbb
clc
jns
pop
cli
or
pushf
rcrl
sbb
add
add
out
sub
sub
lret
bound
push
push
leave
repz
mov
mov
dec
repz
je
mov
pop
das
mov
imul
dec
enter
sub
pop
adc
pop
loopne
sti
imul
xchg
or
adc
ss
adc
or
rorb
gs
jecxz
add
ret
testb
xchg
out
pop
jo
pop
xchg
dec
lcall
nop
repz
push
nop
mov
movsl
into
cwtl
fiadds
scas
dec
xlat
xchg
ret
jl
aas
mov
into
jb
xor
xchg
xor
pop
shr
fnstcw
pop
mov
cmc
or
je
add
and
and
xchg
mov
jmp
mov
xor
popa
repz
jl
and
or
lret
or
rorb
shrl
dec
loope
aaa
fwait
cmpsl
push
insl
push
movsl
jbe
mov
xchg
cmp
fistl
or
mov
mov
into
shlb
mov
inc
xor
imul
inc
js
sbb
jbe
fisubl
or
pop
enter
push
scas
mov
jne
mov
add
mov
mov
xor
push
inc
or
mov
mov
jo
cli
test
popa
shll
jle
pop
or
sub
push
or
jne
mov
cld
jno
das
into
rcr
push
faddl
push
pop
jge
retw
jecxz
aad
inc
ficomps
mov
push
movsb
adc
mov
cwtl
xor
les
push
jbe
cltd
adc
fnstcw
xor
cli
lret
sbb
call
fidivl
dec
xchg
cmp
fcomi
mov
or
dec
fisubrl
jbe
mov
outsl
cmpb
aam
jno
sti
inc
imul
jbe
mov
push
jae
ret
subl
loope
jg
inc
imul
je
imul
mov
jl
insb
and
mov
jecxz
inc
insb
ljmp
imul
xor
imul
push
mov
mov
push
inc
movb
cmpsl
std
adc
ja
frstor
push
xchg
outsb
fwait
pop
pop
sbb
cmp
imul
movsl
scas
mov
sbb
icebp
in
fisubs
mulb
sbb
mov
xor
pop
les
xorl
aaa
mov
or
shrl
add
enter
push
mov
and
jne
xchg
adc
push
sbb
sbb
rcrl
and
mov
jno
test
adc
xor
lock
fwait
dec
or
adc
mov
cmp
dec
call
dec
lret
or
fwait
and
addr16
mov
mov
xlat
sub
pusha
adc
mov
lea
lcall
add
jle
stos
pop
mov
lret
ljmp
scas
pop
xchg
cltd
cld
sbb
push
mov
mov
add
jbe
add
dec
inc
fdivrs
jecxz
add
xchg
cmc
cmovno
xor
jle
xor
stos
sub
sbb
jge
aad
cld
es
sahf
popf
jg
out
lret
inc
hlt
lret
or
xor
in
mov
sarb
lret
icebp
xor
test
xor
daa
sahf
xchg
lret
out
sub
jbe
data16
pop
fdiv
lods
sub
push
inc
lahf
pop
xor
or
out
jb
shlb
jbe
sbb
cmpsl
sbb
je
stos
pop
js
icebp
lcall
fstps
or
mov
pop
cmp
lds
inc
getsec
sbb
dec
lcall
movsb
jge
xchg
push
pop
aaa
xchg
loope
daa
js
lret
push
mov
and
in
cmp
jp
and
sarb
shll
jmp
sbb
cwtl
in
add
imul
stc
push
aas
mov
mov
adc
and
xor
pop
lock
repz
or
jmp
ficomps
clc
popf
sub
sub
cmpsl
or
leave
rorb
sub
mov
je
daa
pusha
jne
subl
cltd
jmp
ret
mov
std
add
imul
fiadds
in
mov
cmp
test
mov
imul
repz
pop
lret
insb
sti
adc
push
fstpt
rcl
push
cmpl
shlb
xchg
sbb
imul
mov
scas
shrb
insb
mov
mov
dec
mov
cmc
test
mov
jg
mov
sti
jns
sbb
idivl
mov
add
pop
addl
dec
std
push
adc
loop
adc
xor
sbb
mov
cmp
lahf
dec
cli
xchg
addr16
ret
or
lods
cs
popa
push
add
add
or
in
or
gs
mov
enter
ds
ret
xor
pop
sub
jge
push
mov
xor
sbb
sub
mov
mov
pop
in
imul
enter
ss
bound
xor
call
inc
pop
outsb
adc
jmp
mov
sar
cmc
xlat
in
push
adc
push
mov
shlb
or
jnp
mov
push
xorb
xrelease
mov
or
aaa
fsubs
inc
push
adc
fucomip
and
pop
or
jle
pop
xor
lods
and
xchg
inc
pop
fnstenv
lcall
and
movsb
inc
popa
adc
sub
mov
or
xor
in
mov
xchg
insl
sub
test
aas
push
aam
push
into
lods
imul
sbb
jp
cld
aaa
dec
push
and
inc
sbb
mov
out
bound
addb
push
ss
leave
test
or
movsb
inc
ds
mov
or
push
hlt
int3
sub
data16
mov
and
imul
mov
mov
push
add
ljmp
add
insb
in
add
popa
xchg
cmpl
pop
and
xlat
sub
adc
sahf
mov
dec
pushf
push
xchg
mov
cli
and
lds
xchg
fistps
mov
shll
and
inc
ljmp
lods
stos
cld
in
pop
mov
mov
into
pop
ret
daa
pop
sbb
jbe
push
out
enter
or
pop
push
mov
stos
fidivs
and
out
mov
lcall
pop
mov
mov
imul
push
cmp
add
les
pop
fmuls
cmp
lea
test
jecxz
ds
mov
sbb
jle
cmp
inc
sbb
jecxz
mov
insb
test
cmove
mov
and
xlat
pop
arpl
int
mov
jno
jp
repnz
pop
sub
pop
or
shll
std
and
mov
or
jns
ljmp
adc
push
iret
cmp
testb
aas
fldenv
in
add
or
hlt
adc
shl
sahf
jp
fldenv
incb
aas
and
jo
jbe
aad
cmp
mov
lock
pop
insl
dec
push
sbb
pop
xorl
pop
push
and
adc
imul
push
sub
sub
in
rclb
inc
adc
mov
mov
in
xor
xchg
test
lret
lcall
out
mov
mov
jg
popf
lods
andb
push
jns
stc
pop
icebp
ja
subb
icebp
mov
jno
and
fsubrs
xchg
aam
cmpsl
or
mov
mov
xor
jbe
cmp
shl
fnsave
adc
jb
mov
sbb
test
add
lret
cli
xor
data16
ja
jp
out
jmp
int3
push
fimull
cmc
lret
imul
ja
fdivrl
mov
or
dec
add
pop
sbb
data16
xchg
and
push
push
push
xchg
int3
sbb
imul
call
and
ret
add
mov
push
and
notl
xchg
pop
out
or
pusha
sub
inc
mov
icebp
ret
xchg
mov
or
lret
adc
add
jo
loopne
adc
in
jl
aas
jne
xor
pop
idivb
cmp
mov
sub
adc
sbb
lds
push
das
inc
shrl
add
test
push
in
pop
or
add
popf
xor
insb
pop
xchg
sbb
mov
repnz
sub
adc
cmpsl
cmp
sub
adc
sbb
push
test
orb
test
shll
inc
and
mov
call
insb
push
movsb
add
orl
inc
loopnew
mov
mov
fdivl
aaa
xor
add
push
push
testb
or
mov
xchg
aas
push
mov
nop
push
mul
or
or
xor
mov
int
subb
mov
cmp
xchg
adc
bound
sub
cmpsb
lret
outsl
mov
and
mov
mov
mov
dec
mov
int
jae
lcall
xchg
fisttpll
movsl
lods
lahf
adc
add
cmc
rcr
xor
jae
in
xchg
movsl
outsl
add
subb
sbbl
lods
iret
andl
rcll
and
scas
loope
mov
nop
sub
nop
shlb
sti
repz
in
mov
cltd
je
jo
mov
rcrb
in
in
idivb
mov
in
push
xchg
push
cmp
cmc
test
rolb
mov
sbb
cmc
je
mov
and
sub
jne
sbb
lret
push
add
pop
clc
pop
mov
cmp
pop
push
jne
inc
and
cltd
lods
adc
inc
sbb
in
inc
aam
and
insl
xlat
mov
jns
call
mov
popa
sub
dec
nop
test
lock
popa
ficoms
js
shlb
add
mov
adc
out
cmpsb
and
mov
aaa
jmp
push
cld
cmpsl
add
mov
iret
in
pushf
dec
aam
loopne
shrl
or
xchg
xor
jae
pop
out
hlt
lock
adc
les
cmp
and
int
jbe
sarl
sarl
mul
and
fdivrp
cmp
or
ss
mov
sub
testl
or
mov
xchg
shl
popf
repnz
hlt
sub
inc
lret
pushl
out
mov
or
test
in
test
dec
lods
shll
loope
dec
mov
jl
fwait
mov
arpl
xchg
mov
cmp
push
inc
leave
rorl
movnti
jae
imul
cmpsb
push
add
int3
negl
rol
out
dec
mov
bound
sbb
adc
lret
repnz
mov
pop
sub
popa
mov
xor
pop
push
xchg
pop
sti
rorb
repnz
pushf
fs
sbb
test
js
jb
inc
insb
dec
arpl
adcb
test
or
arpl
dec
popa
inc
adc
jbe
cmc
jbe
bound
out
inc
mov
daa
cmc
push
orl
call
sub
mov
or
stos
inc
cltd
aas
arpl
inc
push
data16
lret
es
mov
sbb
std
mov
roll
stc
and
mov
pushf
inc
push
cmpsb
test
jmp
pop
roll
and
mov
lock
pop
mov
shlb
movsl
push
in
test
shl
test
or
inc
shrb
mov
add
arpl
nop
outsl
cmp
mov
stc
inc
cld
addr16
lea
int3
xchg
int3
mov
out
negl
xchg
add
lods
inc
popa
jo
mov
dec
jnp
in
jg
aaa
xchg
dec
shl
cmpsb
pop
sti
loope
inc
or
ret
pop
ja
out
and
sbb
push
mov
les
jo
jb
into
js
mov
aad
sub
sub
xor
cmp
xor
pop
repz
stos
test
dec
adc
cmpsb
and
outsb
aaa
pop
pusha
scas
or
into
aaa
sbb
aam
mov
pop
jne
push
mov
adc
sarl
fldcw
xor
subl
cmp
loope
push
fwait
rcl
lcall
cmp
mov
rdpmc
outsb
movsl
cwtl
push
repnz
dec
add
fdivrp
adc
sub
popf
pusha
jnp
jge
add
outsl
jns
xchg
jle
icebp
das
scas
push
xor
out
jnp
push
push
pop
addr16
mov
hlt
cmc
sbb
jmp
rorb
neg
pop
xchg
sbb
ljmp
jae
fcompl
lcall
mov
je
cwtl
inc
mov
push
cmp
scas
shll
pop
jne
mov
mov
mov
call
movsl
dec
pop
mov
imul
adc
cwtl
add
int
mov
adc
xor
lea
sub
iret
ds
ljmp
lea
xchg
sbb
leave
xchg
mov
xchg
lea
stos
js
sub
sbb
call
ret
jmp
cmp
sub
xchg
pop
clc
loope
or
std
or
nop
out
hlt
mov
fistps
rorb
les
push
pop
pusha
inc
jmp
insb
insb
push
jmp
stos
daa
ss
ds
clc
repz
lock
xor
adc
sbb
loopne
inc
out
and
jecxz
and
push
pop
pusha
out
push
xor
loopne
inc
data16
mov
ret
lock
shll
push
inc
nop
sahf
cli
insl
adc
loop
inc
enter
sub
cli
xlat
arpl
jnp
fidivrl
and
fwait
call
cli
lods
pop
jno
idivl
lods
jae
imul
out
and
push
pop
mov
sahf
mov
out
ficoms
or
lea
cmp
sbb
arpl
nopl
jno
pop
sti
pop
aas
lods
mov
int3
jnp
popf
sub
sbb
in
sub
mov
pop
mov
nop
pop
mov
cmc
pop
fdivrl
sbbl
stos
add
je
test
push
jg
xchg
and
outsb
adc
mov
shl
aam
adc
cmc
fcom
xchg
test
inc
insl
test
xchg
adc
dec
mul
popf
jnp
dec
ljmp
xchg
sti
das
and
sti
xchg
fstps
xchg
das
into
cmp
xchg
pop
sarl
shrl
adc
xor
mov
fisubrs
pop
dec
sbb
shll
loope
inc
fwait
and
jb
sbb
repnz
adc
push
call
lcall
divl
and
or
jle
ds
lods
inc
jo
adc
mov
popf
pop
shll
inc
std
xor
cmpsb
dec
inc
pop
dec
aaa
outsl
imul
insb
das
xchg
negl
jbe
scas
sahf
or
out
pop
cmp
mov
mov
loope
inc
enter
or
fsubrs
pop
test
cmp
cmp
xor
xor
and
add
push
mov
fadd
popf
outsl
sub
pop
pop
rcrb
adc
sub
lret
dec
fcoml
addr16
inc
repz
cltd
jb
cwtl
cs
push
lods
add
mov
adc
and
mov
pop
xchg
push
pop
mov
add
movsb
mov
mov
mov
fs
jecxz
cmp
mov
stc
mov
ds
jbe
add
ret
in
pop
push
sbb
inc
addl
neg
dec
mov
xchg
add
fwait
pop
fwait
mov
pop
aad
out
push
sub
xchg
movsb
arpl
jecxz
jecxz
and
mov
pop
jle
push
inc
cmpsl
out
aaa
sbb
sbb
shll
mov
jno
outsl
dec
dec
mov
hlt
mov
sar
pop
testl
scas
sahf
inc
fcomp
sbb
mov
sbb
mov
cmp
data16
push
out
leave
imul
xchg
or
push
lods
fdiv
test
es
fists
sub
cmp
fdiv
xchg
mov
scas
fstpl
lret
add
mov
and
mov
repnz
into
notl
pop
orb
or
cmovno
add
push
fwait
roll
adc
sub
ret
jp
roll
mov
sbb
inc
jbe
or
cmp
sti
negb
repnz
call
movsl
je
mov
in
xor
fisubl
fsubr
dec
stc
cmp
sub
rcrl
movsl
xchg
arpl
pop
and
mov
insl
cltd
cmpsl
add
mov
ljmp
push
in
mov
xchg
and
and
inc
gs
adc
mov
and
loop
pusha
int3
xor
xor
fs
ds
loop
repz
clc
inc
jns
add
lahf
negb
dec
mov
sbb
mov
mov
out
arpl
xor
pop
loop
lret
mov
mull
sub
pusha
mov
dec
icebp
cmovo
out
xor
jae
pop
outsb
jb
imul
pop
jl
xchg
out
aaa
sahf
cmp
bound
les
out
cmpsb
andb
sar
fldcw
lahf
addr16
sub
adcl
lods
push
cmp
xchg
inc
call
ds
hlt
repnz
or
add
popf
imul
push
mov
cmpsl
cmc
add
inc
pop
mov
aaa
add
fwait
sub
cmp
insl
stos
lods
lds
sub
orb
mov
movsb
mov
add
mov
into
jbe
push
pop
lock
cmp
jne
xchg
lret
enter
scas
mov
adc
js
pop
mov
ja
pushf
pop
sub
hlt
cli
imul
mov
les
adc
jne
mov
ret
or
test
rcr
loopne
push
and
out
adc
je
nop
mov
sub
mov
mov
sbb
add
clc
pop
aad
sbb
mov
repnz
push
push
test
or
add
imul
int3
mov
and
mov
sub
test
fldenv
push
notb
popf
mov
cmp
dec
sub
ljmp
adc
ds
mov
icebp
push
and
mov
inc
cmovb
sbb
pop
mov
bound
mov
out
cmpsl
jae
fwait
mov
jb
xor
cmp
shr
cmp
ja
les
rol
outsb
subl
mov
mov
and
jge
pop
cmpsl
push
stos
adcl
ja
shlb
push
mov
add
inc
pop
jg
pop
out
fs
cmpsb
aaa
or
movsb
push
xor
sbb
jns
fstps
repnz
enter
in
or
xorb
enter
dec
pop
fisubl
subl
lret
jno
lock
add
pusha
shll
lret
xchg
je
cmpsl
pushf
push
rolb
in
sbb
loopne
xor
test
vcvtsd2si
and
add
adc
subb
push
mov
enter
sub
and
sub
jnp
pop
test
and
fsubrs
aad
adc
add
ja
mov
push
push
and
and
lds
in
pop
push
lcall
movsb
mov
jnp
mov
dec
add
jp
addr16
mov
or
cs
lahf
lahf
push
xchg
in
jns
lock
ret
xor
jb
or
int3
sub
sbb
fnstenv
enter
incl
jb
rcr
data16
mov
insb
mov
jle
ficoml
jae
stos
movsb
ss
addr16
in
or
push
or
data16
push
mov
dec
dec
mov
ljmp
movsl
fmuls
js
call
fwait
dec
sbb
pushf
cmp
add
ficoms
rcrb
or
sbb
or
insl
outsb
lods
pop
cwtl
and
sub
cmpsl
and
fs
lock
cltd
mov
mov
scas
xorb
fsubrs
out
adc
dec
cmp
inc
and
mov
sub
pop
sub
bound
mov
jb
popf
hlt
pop
in
mov
orb
fidivs
mov
mov
clc
push
add
outsl
cwtl
cmp
push
mov
jne
cltd
outsl
push
faddl
fstpt
push
mov
int3
fisubl
xor
cmp
aas
push
jnp
push
sahf
bound
cwtl
cmp
out
push
push
dec
sti
imul
in
add
pusha
push
hlt
push
mov
iret
fcoms
loop
inc
push
nop
leave
xor
or
mov
scas
add
pop
push
ljmp
test
shl
xor
dec
mov
sub
mov
and
xchg
dec
subl
cmpsl
push
jns
nop
stc
lods
aas
lret
dec
sbb
push
jo
push
in
flds
cmpsb
inc
lods
jnp
repnz
xor
xlat
das
ret
dec
push
pop
call
xchg
push
popf
inc
in
jg
cmp
lcall
or
testb
adc
xchg
lcall
sub
clc
fwait
lret
push
mov
xchg
cmp
or
mulb
es
mov
pushf
fistl
repz
push
shl
sahf
rcll
ja
mov
jge
call
dec
jnp
inc
js
mov
sub
stos
lcall
dec
out
mov
xchg
jne
mov
mov
cwtl
cmp
hlt
inc
stc
mov
adc
push
xchg
cmp
mov
andb
std
aad
or
mov
xor
xchg
out
orb
cmpsl
jmp
sub
push
aas
andl
xchg
or
loopne
mov
mov
add
ds
nop
shl
xor
decb
data16
outsl
xor
inc
test
pop
bound
cli
jp
jmp
test
mov
push
adc
mov
in
hlt
adc
xor
aad
sub
sub
mov
mov
push
push
adc
dec
ror
mov
pop
jge
jns
fstpl
faddl
push
xchg
sub
push
lcall
mov
xchg
adc
repz
add
shrb
xchg
adcb
fildll
in
dec
cmp
cmp
jp
or
sub
sbb
mov
gs
in
loope
gs
scas
dec
adc
loop
push
mov
xchg
mov
dec
jo
jle
adc
and
aas
repnz
inc
cmpsl
adc
cwtl
xrelease
cpuid
mov
out
hlt
inc
mov
data16
shll
mov
pop
fbstp
insb
lea
and
aam
jg
xor
int3
sub
gs
repnz
cmp
lahf
js
push
pop
inc
in
in
loopne
jl
shlb
icebp
and
mul
enter
add
testb
sbb
aaa
stc
adc
loopne
push
add
std
lret
pop
jae
daa
pop
and
add
jbe
out
gs
or
scas
pop
sub
enter
pop
lods
iret
jo
or
add
test
cld
scas
addb
in
push
data16
lods
dec
addr16
jecxz
ror
subb
call
jl
dec
sbb
call
jmp
pop
pop
fisttpll
fsubrl
adc
cmp
in
push
ud2
daa
ret
mov
cmp
and
xchg
sub
inc
js
jle
add
dec
insb
es
popf
mov
or
cli
push
es
rclb
xchg
into
mov
mov
int3
imul
and
push
movsb
ret
adc
mov
inc
and
xchg
pop
aas
mov
mov
js
mov
mov
sbb
push
sub
test
jbe
fdivrs
mov
fcmovbe
push
xchg
pop
jns
adc
pop
loop
ret
loop
mov
lods
js
es
sbb
sbbb
out
in
xchg
sbb
lahf
xor
xchg
fsubr
test
int3
xchg
sbb
cmp
lock
outsb
lahf
gs
shrb
mov
lea
rcrb
call
or
test
cmp
mov
xor
xchg
or
lea
cmp
repnz
and
rorb
sarb
sub
inc
insb
xchg
cmp
mov
sbb
das
mov
xchg
sbb
sub
negb
xchg
sub
testl
add
and
jl
or
aaa
repnz
add
pop
jle
or
insl
jnp
push
ja
fcomps
and
adc
or
cmpsb
popa
out
push
jne
into
dec
repz
push
dec
pop
in
cmp
test
lahf
or
mov
imul
adcb
dec
bound
jmp
mov
cwtl
aaa
add
mov
int3
jecxz
sub
push
cld
adc
scas
add
ret
cli
es
cmp
ljmp
pushf
int3
dec
cmpsb
xchg
pcmpeqb
shl
ficompl
jo
xor
ds
push
jo
stc
fstps
lea
dec
dec
sbb
mov
sbb
push
adc
imul
mov
xor
pop
leave
add
inc
aas
jne
loope
movsb
xchg
mov
mov
bound
pop
mov
lfs
or
mov
dec
xor
lret
in
aas
sub
test
ret
addr16
inc
jl
pop
dec
cmpsl
xchg
push
mov
or
xchg
imul
mov
sbb
cltd
in
xor
outsb
aad
sub
sub
xor
mov
pop
cmp
mov
or
mov
cwtl
das
inc
xlat
out
adc
loope
sti
cltd
lcall
test
ja
push
mov
rcl
adc
xor
mov
cld
jne
fmuls
add
les
mov
test
pop
add
fmulp
shll
lds
sbb
inc
xor
ds
dec
enter
xor
stos
imul
cs
in
fdivl
mov
push
pop
jecxz
push
inc
call
imul
pop
outsl
lods
les
xchg
enter
inc
addl
sub
setns
push
rolb
scas
outsl
in
push
repz
xorl
xchg
xchg
loopne
pop
ja
data16
ss
mov
icebp
shl
adc
dec
fisubs
loopne
js
daa
cmp
out
popf
imul
add
stos
nop
les
or
dec
adc
push
jp
push
cmp
push
out
dec
push
and
stc
and
cmp
dec
ret
stc
mov
pop
movsl
cli
and
push
orl
or
xor
jno
mov
andb
ja
out
inc
xchg
mov
xchg
jo
or
in
xchg
jno
insb
lahf
daa
mov
mov
sub
mov
pop
jg
into
es
sbb
fdiv
push
js
cmp
jo,pt
xor
inc
in
jmp
inc
sbb
inc
je
test
jbe
insb
pusha
xlat
jb
out
dec
mov
sti
add
dec
mov
xchg
mov
incb
fidivs
imul
rcl
insl
mov
icebp
das
repnz
push
and
and
add
or
xor
xchg
push
add
cmp
push
cmp
scas
xlat
push
fld
cs
push
jmp
pop
add
sbb
test
mov
sub
out
mov
into
ret
sub
jo
push
jnp
push
dec
jbe
in
scas
popf
sbb
fwait
and
cltd
fnstenv
dec
pushf
jmp
aad
arpl
jp
movb
and
shll
in
call
pop
xchg
add
mov
inc
call
cmpb
shl
movsl
outsl
fiadds
pop
jecxz
dec
lock
cld
jle
mov
sub
jmp
mov
jbe
jle
push
mov
lahf
sub
aam
cmp
orl
fmuls
cwtl
mov
mov
xchg
mov
lock
lock
ret
push
mov
andl
mov
cmp
sub
fcoml
div
clc
cmp
jecxz
xchg
addb
ficoml
mov
dec
dec
push
inc
jne
test
pushf
and
push
shlb
sti
shlb
js
inc
aad
pop
push
rorl
xor
pushf
imul
xchg
scas
sub
sarl
inc
loop
lcall
jl
cmpsl
add
push
out
stos
movsb
in
jge
mov
cmp
lods
aas
and
sbb
add
in
into
daa
mov
fdivs
out
mov
xlat
outsb
or
test
in
and
addb
aad
adc
jmp
add
lods
xlat
xchg
test
xchg
xor
mov
int3
punpcklbw
mov
arpl
push
ret
push
lods
cmp
inc
fwait
jb
ja
bound
loope
cmp
pop
jnp
stos
inc
pusha
stos
sahf
cmpsb
pop
test
adc
iret
lret
test
or
xchg
jp
hlt
dec
inc
hlt
cmp
cwtl
cmp
xchg
add
adc
inc
dec
cltd
sub
mov
xchg
and
push
mov
insb
adcb
sbb
das
cmp
mov
scas
loop
mov
leave
pusha
aas
fs
stos
scas
scas
aad
dec
mov
out
jno
add
inc
shll
and
je
scas
xchg
into
adc
or
mov
jno
cld
xchg
push
outsb
xor
shlb
pop
and
clc
or
dec
mov
addr16
je
js
pop
xchg
dec
pop
lahf
and
pop
dec
xchg
or
js
adc
test
clc
lock
jg
sub
jae
repz
or
pop
js
test
pop
mov
dec
jg
out
jl
sbb
jl
or
ret
push
ror
xor
jb
cltd
ljmp
pop
ret
lea
ds
imul
mov
std
or
das
inc
dec
lods
jl
repnz
pop
adc
pop
fwait
xor
arpl
out
in
stos
pop
cmp
cmpb
ljmp
jbe
xor
sbb
sbb
in
insb
dec
jle
jecxz
adcl
insl
and
std
xchg
data16
add
inc
gs
xor
inc
jno
aam
pop
clc
jge
sub
ret
in
push
shll
and
mov
jae
fs
pushf
cltd
or
jne
lret
clc
in
jp
xchg
sbb
in
sub
std
pop
fdivl
pop
xchg
fwait
loope
sub
xchg
xor
in
es
and
stos
or
nop
cld
push
inc
mov
jmp
movsl
aas
mov
pop
ja
or
shl
push
mov
jns
push
inc
popa
sbb
mov
sbb
dec
sub
add
mov
xchg
popa
in
mov
mov
andb
adc
mov
inc
dec
fucom
cltd
inc
cmp
scas
jbe
std
push
fisttps
shlb
call
jno
inc
pop
dec
sti
pop
push
xor
ret
xchg
daa
pop
push
mov
jnp
aam
cmpsb
mov
loop
ss
mov
mov
pop
adc
sahf
sbb
xor
add
arpl
hlt
icebp
jnp
orl
inc
mov
movsb
cli
jmp
stos
insl
mov
cmp
movsb
push
dec
add
mov
fmull
enter
mov
lret
cmpsb
adc
cmp
shlb
inc
jge
loopne
add
dec
sbb
add
push
in
nop
add
xor
jmp
pop
sbb
sbb
xor
dec
int3
adc
shlb
mov
les
mov
aad
xor
xchg
inc
loopne
sub
dec
lret
mov
loop
sbbb
test
xlat
arpl
scas
into
add
into
hlt
mov
sub
add
add
mull
ret
in
in
mov
xor
cltd
sub
xor
mov
fisubrl
mov
inc
ret
sbb
jge
mov
add
cmp
cmp
cmc
pop
lret
mov
scas
data16
nop
xor
adc
mov
inc
adc
inc
fdivl
adc
jbe
mov
jo
dec
xor
push
dec
pop
sbb
or
cs
inc
cld
jno
sbb
push
int3
add
sarl
jno
hlt
xor
out
data16
push
ss
xor
jo
negb
cmp
cmp
jae
aaa
subb
or
jle
push
xor
dec
stc
push
into
cmpsl
mull
sub
mov
sub
jbe
push
push
push
pcmpeqb
lcallw
sti
or
ret
sbb
rolb
mov
and
xchg
repz
inc
add
pop
xchg
rorl
add
dec
dec
jge
cltd
fwait
stos
ds
movsl
mov
mov
hlt
dec
sbb
sbbb
fiaddl
or
clc
jb
jo
xchg
jb
ret
xchg
leave
pusha
pop
fucomi
testl
cmc
push
rclb
pop
iret
xor
mov
daa
ds
cli
xchg
roll
in
cwtl
ret
jno
jae
mov
test
test
out
call
and
fstps
mov
jnp
roll
ljmp
pop
inc
push
push
aaa
lret
pop
cmp
mov
lret
sub
add
add
or
push
add
add
inc
cmc
cmpsb
mov
jp
hlt
cmp
pop
test
fwait
mov
mov
aam
jle
inc
cmp
enter
jbe
lcall
enter
jp
mov
das
add
lea
ret
fcomp
sub
jae
cmpsb
cmp
dec
sub
push
dec
out
aaa
jns
add
outsl
int
add
std
xchg
sbb
cmc
inc
mov
hlt
ja
cs
mov
pop
push
dec
and
or
push
mov
fxch
mov
fldt
scas
test
xchg
mov
or
sarl
shlb
mov
icebp
lea
int3
pop
rolb
and
mov
and
in
loop
xchg
cmpsl
sahf
or
sbb
and
xor
xchg
sub
es
mov
dec
bnd
leave
mov
cli
int
loopne
jnp
push
cmp
sahf
add
push
stos
fwait
out
out
pop
sbb
sti
je,pn
cmp
lods
pop
xor
mov
push
inc
in
jl
repnz
fildll
into
scas
xchg
jo
iret
jnp
inc
sahf
sahf
fs
push
or
xor
bound
fistpl
inc
inc
shl
jl
std
or
popf
repz
sbb
and
mov
dec
dec
inc
adcl
ret
jle
mov
outsl
fwait
sbb
idivl
movsb
mov
sbb
adc
push
jne
enter
nop
inc
sub
and
and
popf
mov
in
repnz
jge
inc
inc
xchg
ja
repz
and
mov
xchg
and
push
cmpsb
sub
lret
jo
adc
cwtl
daa
push
add
ret
pusha
cmpsl
push
rcll
aam
cwtl
rolb
into
ret
sti
xchg
jecxz
ljmp
or
je
add
ret
cmc
mov
sub
cmp
sti
ret
add
inc
adc
adc
push
das
cmc
push
sub
and
ja
addb
pop
jmp
inc
inc
rolb
shl
call
fcompl
sbb
fidivrs
rol
sbb
movsl
cltd
jae
sbb
pop
cwtl
lcall
into
and
inc
fwait
xchg
xchg
leave
add
aaa
sbb
pusha
rcrb
mov
dec
xchg
int
mov
dec
mov
lods
arpl
cmp
movsb
lcall
adc
mov
nop
xor
fistpl
xchg
pusha
rclb
and
out
lds
inc
push
ficoml
jns
mov
sbb
xchg
popf
inc
out
jnp
sbb
adc
pop
adc
jmp
lods
sahf
and
push
sub
in
lcall
mov
mov
xorb
rclb
mov
cmp
aad
ss
pop
xor
xor
mov
clc
or
mov
test
jb
adc
out
xchg
mov
mov
xchg
pusha
mov
insl
lds
xchg
push
sbb
dec
in
mov
xchg
or
cmc
ja
xor
jle
ficompl
xchg
xchg
lea
popa
mov
es
into
clc
mov
adc
gs
inc
aad
idiv
jp
je
wbinvd
in
mov
imul
and
push
adc
fucomi
outsb
sti
push
fimull
cmp
imul
inc
mov
jecxz
pop
or
sti
sbb
mov
push
jmp
mov
ss
push
xchg
mov
ds
mov
fcmovbe
adc
lock
push
add
shrb
sub
or
xchg
ret
dec
and
in
enter
cmp
cli
stc
dec
pop
sbb
jne
add
mov
arpl
inc
clc
and
ds
aaa
std
xchg
cmc
mov
sarl
out
jmp
sbb
hlt
ret
mov
arpl
cmp
lea
cld
stc
mov
xlat
inc
mov
fiadds
js
or
adc
mov
xor
stos
test
pop
jg
adc
adc
push
mov
enter
shl
mov
leave
testl
mov
inc
pop
jmp
dec
lea
xchg
pop
sbb
push
cmp
mov
imul
icebp
les
loop
out
pop
into
scas
or
int3
mov
in
loope
lea
test
lds
addr16
sarl
lds
outsl
inc
xlat
or
xchg
jb
scas
and
std
adc
jl
pushf
scas
inc
mov
jbe
popf
daa
mov
test
arpl
and
bound
mov
lock
test
idiv
xchg
pop
popa
imul
adc
mov
fcoml
jmp
pop
shll
jp
sub
adc
xlat
jbe
inc
xchg
xchg
fwait
pop
mov
add
jno
lods
stos
insb
sub
scas
fdivrs
out
dec
dec
popf
loope
push
push
rolb
pop
scas
ljmp
aam
sub
mov
in
push
mov
mov
cwtl
das
mov
ss
dec
hlt
addb
imul
imul
mov
push
and
lock
out
dec
aas
loope
imul
rclb
xor
mov
add
nop
std
push
in
pop
add
jp
cmp
mov
lods
sub
ret
dec
jb
dec
fptan
ds
dec
roll
push
lahf
lock
mov
xor
lock
jecxz
loopne
into
inc
sub
sahf
clc
sti
fwait
in
jp
in
adc
cmc
mov
adc
lds
dec
inc
pop
repnz
loop
xor
test
dec
adc
shl
mov
or
ja
sbb
notl
shl
add
clc
int3
in
pop
and
popl
movb
jae
idivl
cmpsb
sub
push
std
pop
push
adc
fists
sti
jl
inc
leave
cmpsl
push
jle
inc
add
bnd
in
test
inc
jnp
push
or
addr16
jg
insl
mov
rorl
add
aad
in
int
add
and
or
dec
pop
in
xchg
dec
es
jnp
repnz
mov
sub
mov
outsb
mov
fwait
jl
ss
push
sarb
adc
lods
xchg
cmp
rol
xchg
in
cld
cmp
es
xchg
arpl
int3
push
push
xor
roll
incl
mov
arpl
mov
mov
and
inc
jnp
ret
lea
mov
pop
arpl
push
and
mov
mov
call
out
adc
leave
test
jnp
push
or
xor
sbb
push
in
lret
shlb
repnz
and
push
adc
jl
or
inc
xchg
stos
adc
jbe
pop
shr
and
pop
add
movb
fistps
cmp
jecxz
pusha
out
jg
int3
jno
or
add
inc
adc
cli
ret
or
mov
pushf
rcrb
negb
shrl
inc
pop
sub
add
andb
outsb
mov
inc
cs
jns,pt
ljmp
xchg
cmp
pop
sti
jns
cmp
inc
call
mov
mov
pop
outsb
inc
lret
pmulhw
mov
aas
addr16
lock
sti
xor
aas
aaa
sbb
shl
inc
fcmovnu
adc
xchg
mov
imul
mulps
repz
cmp
push
cmp
xlat
pop
sbb
idivl
test
add
and
ja
xchg
mov
xor
ljmp
sbb
jg
movsb
sub
dec
cli
int3
cmc
or
dec
dec
into
pop
or
mov
mov
fstpl
shrb
and
ja
xchg
int
jmp
pop
jb
xchg
push
fwait
jae
out
lock
jnp
out
cmp
mov
pop
and
jnp
cmp
insl
jle
popa
cmpsl
or
push
out
cmpsl
dec
bound
in
out
ret
sbb
int3
rorl
xchg
mov
aaa
inc
in
setge
fcmovnb
out
jg
cmp
adc
jmp
loop
adc
mov
out
push
notl
cmp
pop
xchg
aad
subb
mov
sub
js
inc
inc
movl
jl
push
jnp
pop
jo
rcll
scas
out
and
or
dec
cmp
in
mov
icebp
xchg
imul
insl
popf
xor
pop
out
cmc
sub
dec
mov
xchg
sub
cld
aad
cltd
dec
xchg
not
imull
or
outsb
mov
mov
loope
mov
movb
sub
sbb
shll
lds
and
lahf
lods
ljmp
cmp
cmp
pop
sub
and
fdivrs
jp
inc
arpl
mov
mov
in
push
pop
int
popa
sbb
push
and
sub
add
mov
bswap
jp
cmpsb
push
add
cmc
je
push
mov
mov
mov
out
movsl
les
jp
add
out
das
xchg
lret
pop
nop
mov
cmc
addb
lcall
mov
push
lods
adc
cmp
cltd
sbbl
popl
xchg
movsl
in
outsl
mov
add
or
rcrl
mull
xor
sahf
push
fimuls
inc
cmp
fs
jp
call
aam
int3
push
gs
pusha
imul
leave
clc
and
mov
icebp
int3
ds
add
subl
fwait
push
inc
shl
pop
or
cmp
or
cmp
inc
xor
fwait
enterw
out
pushf
or
push
and
mov
xchg
mov
xchg
fldl
movsl
add
jbe
daa
jne
nop
or
jbe
mov
add
das
cmp
ret
jbe
sbb
or
push
sub
aaa
adc
push
and
call
sub
pop
sub
inc
push
xlat
ja
outsb
data16
scas
loope
mov
xor
xor
sbb
push
loopne
das
icebp
mov
jp
cmpsl
pop
add
not
lds
loop
jb
orb
sbb
lahf
pop
xchg
push
pop
jns
pop
cmpsl
jl
fdivl
inc
sbb
pop
mov
mov
or
cmp
cmpsb
and
dec
pusha
and
fs
loop
mov
outsl
mov
icebp
lods
fmull
scas
insb
dec
out
sbb
adc
imul
mov
mov
test
call
jne
push
lock
cli
test
ret
test
cwtl
test
pop
xchg
subl
inc
repnz
pop
xchg
test
or
dec
xchg
aad
loope
int3
and
and
jmp
mov
jmp
clc
xchg
test
scas
mov
jp
mov
ret
sbb
jmp
rcrb
iret
xchg
pop
push
xchg
add
enter
movsl
mov
pushf
int
sti
mov
stos
mov
jp
jle
adc
pop
outsl
stos
and
adc
dec
xchg
leave
adc
push
test
lret
sub
cmp
cmp
fdivl
mov
rolb
pop
sbb
xchg
mov
adc
lret
idivl
inc
vmovhps
and
ljmp
xchg
bound
cmpsl
inc
aam
jb
arpl
int
jbe
pop
and
jno
mov
xchg
fmuls
cmpsb
pop
adc
cltd
jb
fwait
lcall
lods
mov
pop
lret
mov
cld
xor
pop
cmpl
shll
adc
mov
pushf
cs
sti
xor
in
mov
or
jmp
jb
mov
fs
shrl
jp
pop
push
cmp
mov
jne
sahf
push
pop
jmp
out
cs
outsl
dec
sbb
in
add
jl
pushf
pop
sbb
test
cmpsb
fnstsw
add
test
jl
int3
mov
jo
ret
inc
add
stos
mov
shlb
xchg
pop
jbe
xchg
inc
addr16
xlat
xor
ret
pop
fists
sti
cli
decl
fwait
sbb
insb
out
imul
aaa
jmp
mov
lret
add
ds
inc
xor
push
xlat
cmp
ja
xor
rcl
bound
clc
std
stos
shrb
aas
sub
loopne
xor
shll
lret
mov
scas
sbb
xorl
int3
adc
sub
fldz
cltd
loope
xor
cmc
sub
es
jle
and
fbld
mov
push
jo
in
push
ret
fists
cmp
insb
xor
cltd
loope
dec
imul
push
mov
jmp
mov
ljmp
push
jns
pop
jl
pop
and
cwtl
mov
xchg
inc
dec
fisubs
fsubs
lods
fisubs
xor
mov
push
clc
pushf
cmp
int
mov
arpl
imul
loope
jne
pushl
xor
add
pop
adc
mov
mov
scas
dec
bound
cltd
push
bound
jp
fstl
mov
or
in
mov
and
arpl
push
lods
pop
sub
inc
out
pop
xor
pop
cld
cmc
cmp
cmpsb
sbb
push
call
pop
test
test
cmp
push
jge
fdivrl
rcll
lret
lret
xchg
enter
or
mov
dec
out
mov
pop
xor
test
add
xchg
push
xor
xchg
js
int3
jnp
es
mov
inc
cmp
scas
cld
sahf
adc
adc
jns
sub
inc
cmp
mov
jecxz
movsl
sub
inc
sub
xchg
push
imul
icebp
mov
mov
push
test
mov
roll
stos
mov
lock
and
jmp
sbb
pop
std
shll
or
mov
stos
mov
sub
mov
repz
xchg
jb
and
pop
push
stos
stos
mov
test
inc
sbb
std
mov
push
iret
shrb
sbb
cmp
xorl
imul
dec
fmulp
cli
adcl
sahf
xor
jle
mov
jmp
jb
call
mov
cmpsb
cmpsl
fs
arpl
cs
pop
push
fsubrl
leave
jns
sbb
movsl
fldt
push
cmp
outsb
cmpl
icebp
gs
jns
mov
sbb
lock
or
dec
pop
sbb
xlat
pusha
jns
cwtl
mov
pushf
adcb
mov
mov
jg
dec
xchg
pop
push
or
testb
cltd
cmovbe
push
data16
into
mov
insb
xor
stos
ficoml
jge
jb
sbb
out
add
mov
and
mov
rorl
push
pop
add
mov
jmp
mov
cli
inc
sub
push
mov
and
add
add
jp
iret
inc
dec
sahf
xchg
push
jp
aam
add
test
int3
bnd
rep
hlt
and
mov
push
cmpsl
scas
int
rolb
mov
rorl
dec
jnp
call
inc
dec
pop
xlat
cmp
pop
or
jne
pop
icebp
dec
cmc
stos
addr16
scas
ljmp
push
sbb
test
mov
mov
fidivrl
pusha
push
int3
xlat
or
cmp
cmp
xchg
pop
je
loop
jb
push
fs
xchg
push
fisubl
add
jnp
fnstenv
dec
shrl
stos
repnz
fnstcw
mov
popa
sub
mov
imul
loopne
xor
mov
rcll
or
js
pop
aaa
jmp
jns
stc
shl
test
and
pop
sub
and
lods
out
imul
dec
and
shll
in
mov
xchg
or
stc
dec
inc
dec
js
insl
push
mov
cs
mov
dec
sbb
mov
hlt
xor
pushf
call
icebp
icebp
loope
xor
inc
sbb
mov
ret
jmp
sbb
lods
sbb
mov
imul
jge
push
dec
sub
mov
js
inc
mov
add
xor
mov
or
into
aas
mov
pop
scas
sub
faddl
divl
cwtl
xor
xchg
or
test
xchg
pop
jae
rorb
dec
rolb
mov
scas
inc
cmpsb
xchg
repnz
fdivrs
in
rorl
sbb
repz
jmp
nop
dec
mov
gs
fbstp
popf
outsb
cmpsl
add
roll
sbb
clc
push
ss
addr16
jp
decl
ljmp
mov
in
jle
sbb
rolb
jl
repnz
add
sbb
test
push
dec
jo
jns
clc
jno
push
arpl
fists
adc
loope
mov
fsts
or
repnz
adc
push
add
add
or
push
mov
mov
mov
mov
int3
adc
cld
dec
leave
mov
xchg
dec
pop
ja
push
cltd
lret
pop
dec
cmp
push
icebp
aas
adc
in
sti
mov
inc
push
sub
mov
mov
or
pop
mov
mov
push
sub
scas
sub
inc
rclb
pop
add
pop
popf
repz
rcrb
out
cmpsb
test
int3
fcompl
dec
sti
xchg
dec
cmpsl
insb
jne
jmp
stc
int3
xchg
iret
sbb
mov
ljmp
jmp
outsl
lds
ret
pushf
mov
push
addl
xchg
xor
ljmp
jbe
xor
std
pop
incl
mov
fldlg2
adcb
loope
mov
mov
ficoml
mov
pop
shrb
mov
sbb
sub
sbb
loope
aas
mov
xor
in
xor
jae
push
push
lock
enter
dec
jnp
test
xor
leave
fld1
call
adc
clc
add
popa
xor
inc
cwtl
jne
je
cmp
cs
mov
xor
xchg
out
jnp
sahf
into
sub
push
sbb
das
sub
xor
sbb
xor
push
pop
xlat
xchg
lret
inc
arpl
push
push
xlat
xchg
adc
sbb
bound
ret
fcmovne
jmp
lahf
hlt
imul
int3
in
repz
loope
fsubl
mov
cmp
test
add
xor
aam
push
test
xor
mov
cmp
fcoms
ficomps
mov
sahf
repz
fs
dec
xor
imul
mov
mov
pop
daa
mov
divb
test
adc
adc
add
adcb
dec
jns
popf
mov
push
divl
je
outsb
aaa
in
fimuls
or
popa
mov
adc
leave
rolb
mov
xchg
icebp
cli
sti
push
aas
push
pop
and
test
ffree
fimuls
pushf
in
mov
fdivs
pusha
aaa
sbb
cmp
cmc
fisttps
mov
lar
jge,pn
and
xchg
dec
or
repz
lahf
dec
sub
mov
sbb
ficoms
xor
mov
int
nop
daa
enter
xchg
pop
push
xchg
clc
mov
adc
mov
or
ss
add
push
int
or
mov
shl
mov
fwait
pop
xchg
popa
loop
test
and
stos
out
bound
and
scas
sbb
pop
mov
add
sub
mov
push
in
xchg
push
fwait
mov
sub
dec
mov
cmp
jmp
mov
add
dec
out
mov
inc
xchg
or
xchg
dec
ljmp
xor
push
orl
fwait
sbbb
xchg
mov
mov
pop
dec
loopne
jne
jns
push
inc
pop
dec
aaa
scas
bound
mov
cmpsl
loopne
mov
pop
push
je
dec
mov
xchg
fildl
ljmp
call
add
sub
inc
mov
or
cmpsl
push
test
adc
sbb
cs
push
inc
in
loop
pop
adc
je
jae
test
jnp
test
sbb
and
xchg
mov
pop
and
pop
outsb
and
cmp
inc
push
test
fsubrl
ja
adc
lock
test
xchg
cmp
add
dec
jecxz
push
stos
sub
scas
shrd
lods
sbb
into
pushf
push
mov
cmp
loope
shlb
fldcw
push
push
idivb
mov
out
mov
ss
jns
xor
jecxz
into
and
pop
sarb
lcall
dec
daa
stos
ljmp
push
imul
fists
mov
push
repz
call
push
fwait
or
or
jbe
push
cmp
fsubl
inc
jecxz
sarb
xchg
fcompl
fs
xchg
cmpl
mov
push
mov
push
xchg
adc
mov
fstpt
sbb
shll
push
inc
mov
ret
lods
or
dec
push
test
ljmp
loopne,pn
add
int3
mov
mov
mov
add
outsb
jbe
aad
cwtl
lret
rcl
push
stos
shlb
pop
aas
mov
out
dec
adc
fldenv
mov
dec
adc
ja
push
xor
dec
gs
mov
ret
or
aas
add
jns
push
aam
jp
jl
jns
pop
cmp
popf
mov
mov
jae
loopne
fs
sub
addr16
sbb
sahf
sbbb
cmp
cs
popf
and
fwait
jae,pn
adc
cmp
popa
sbb
mov
pop
test
push
js
mov
push
lods
icebp
sub
mov
mov
xor
mov
imul
pop
fs
sub
pushf
in
lock
das
mov
je
fucomip
ds
cmpb
cli
fdivrs
test
adc
push
rorb
and
xchg
dec
or
enter
push
jns
and
mov
js
es
shll
hlt
imul
fidivrl
sbb
outsb
hlt
data16
aad
inc
cmc
pop
mov
cmpsl
sbb
mov
add
sub
fcmovnbe
pop
in
cmc
test
nop
in
jp
xchg
jnp
mov
push
add
mov
mov
insb
in
jp
arpl
dec
in
addr16
enter
repz
pop
mov
mov
adc
repz
ljmp
sub
push
lock
lds
cmpsb
int3
jmp
int
stos
push
cli
add
pop
cwtl
mov
call
sbb
add
mov
imul
shlb
movsl
sti
rorl
xchg
pushf
pop
daa
mov
cmp
push
xchg
loop
mov
fs
js
out
or
ret
adc
pop
cmp
testl
cmp
clc
das
bound
out
sub
sti
out
sbbl
inc
insl
sbb
xor
movsl
push
cli
push
sbb
jge
gs
insb
jmp
popf
imul
test
aad
cmp
into
shr
mov
nop
lds
xchg
ja
inc
and
mov
xchg
dec
repz
in
mov
jl
daa
push
mov
aaa
dec
popf
and
push
add
xchg
adc
and
cmc
xor
dec
pushf
cli
int3
cwtl
shrb
mov
repnz
mov
add
mov
sbb
and
movsl
inc
pusha
dec
int3
xor
gs
sarl
jmp
add
imul
lods
in
dec
das
fistl
bound
pop
in
xchg
test
bnd
das
int3
mov
push
pop
in
dec
idivl
mull
int3
and
rcrb
test
pop
sub
nop
jg
loope
jbe
and
hlt
imul
pop
ret
cmp
outsl
pop
push
xchg
cmp
jecxz
sahf
int3
enter
xor
call
lahf
out
cltd
stos
and
std
sub
movsl
inc
mov
enter
movsl
xchg
cwtl
jae
mov
rcl
inc
mov
nop
dec
fisttpll
jo
mov
notl
out
fcomps
dec
dec
dec
or
imul
mov
mov
daa
cmc
jg
adc
fdivp
and
mov
mov
out
jecxz
test
test
mov
mov
movb
daa
jns
outsl
rorl
mov
fdivp
mov
imul
pop
dec
cmpsb
int3
add
ljmp
and
and
or
stc
pop
mov
jbe
push
fs
aad
lds
sub
pop
and
repz
jp
popf
mov
mov
sbb
mov
repz
insl
cwtl
inc
pop
cmpsl
jge
cltd
aad
cmpsb
aas
or
sbb
fsubl
neg
movsb
ret
subb
loop
cmpsl
jmp
cli
rcrl
pop
stos
adc
icebp
adc
push
outsb
jns
mov
cltd
sbb
mov
scas
push
dec
cmp
sub
in
xchg
jns
xlat
mov
arpl
jecxz
ret
xchg
aas
out
insl
sub
arpl
dec
push
clc
adc
insb
xor
icebp
repnz
jnp
pop
lods
into
sub
mov
add
dec
xchg
inc
sbb
adc
sub
fmuls
adc
cli
mov
pusha
jecxz
dec
xor
push
insb
push
rcrb
push
jge
push
aam
dec
jae
sub
lahf
jnp
shrl
push
xor
inc
cld
ss
push
adc
adc
or
pop
push
or
out
mov
arpl
xchg
int3
movsl
sub
test
clc
movsb
adc
or
pushf
mov
cmp
mov
mov
dec
add
xchg
mov
leave
xchg
pop
jno
aas
hlt
insb
les
ret
adc
sub
or
pop
dec
xchg
sbb
mov
cmpsb
ds
int3
fwait
sub
sub
xchg
jp
and
inc
jmp
pop
sbb
xlat
mov
xchg
pushf
cmp
lods
shr
fdivs
shrb
adc
arpl
xlat
jmp
xchg
xchg
pop
faddp
mov
jae
pusha
incl
jmp
int
dec
dec
mov
mov
cli
pop
sbbl
imul
jno
pop
pop
lcall
divl
addr16
pushw
aad
adc
ds
pop
mov
pop
aad
gs
xchg
xchg
pop
dec
and
lret
sbb
cmp
rcrb
xchg
or
mov
mov
fucomip
bound
pop
sub
gs
mov
fmuls
notl
test
jbe
sub
adc
lea
call
ret
add
xor
cwtl
push
sub
rolb
cmp
adc
sbb
lock
cwtl
sub
decl
jnp
inc
data16
mov
cmpsb
cld
ja
arpl
mov
jl
push
test
repz
pop
mov
es
stos
scas
fcoms
ljmp
cmpl
test
adc
fisubl
arpl
dec
arpl
sub
jp
mov
subb
rclb
lahf
insl
push
iret
scas
les
mov
dec
arpl
test
in
xor
lods
cld
pusha
or
sbb
sub
pop
jp
mov
and
mov
mov
scas
adcb
subb
add
cmpsb
xchg
in
and
insl
ljmp
xchg
jo
imul
lea
rorb
adc
mov
pusha
xchg
sbb
jge
mov
clc
sbb
xor
jle
jns
aam
sahf
fcompl
test
push
fucomp
sub
cli
or
sub
inc
pop
pop
fisttps
or
popf
cmpl
mov
pop
mov
dec
push
imul
fcmovnu
sbb
pop
test
ss
fdivrl
in
leave
jbe
inc
idivb
lahf
push
test
pop
and
lea
ret
out
cmp
cmp
add
and
or
dec
out
mov
iret
mov
pop
or
xchg
cmp
mov
adc
test
add
sub
xor
loopne
cltd
les
cmpsl
sbb
aam
mov
pushf
popf
mov
sub
fmul
cmovl
test
pop
ret
fwait
rcll
iret
pushf
sub
fnstsw
jbe
test
out
aam
adc
adc
arpl
mov
ss
cmc
add
mov
orb
inc
in
lahf
scas
pop
mov
mov
pusha
loop
adc
scas
sti
cmp
out
sub
cmp
inc
cmpsl
pop
idivl
cwtl
rolb
shlb
aad
call
jns
xor
xchg
cmc
aam
cli
inc
cmp
divb
xor
leave
mov
ds
int
nop
bound
daa
sub
out
and
cmpb
dec
dec
stos
cmp
scas
pop
mov
shrl
inc
lcall
js
lret
pop
xchg
sub
pop
lds
sub
cmpb
jae
int3
lods
mov
sub
decb
call
pop
mov
xchg
imul
mov
out
roll
mov
mov
sbb
mov
xchg
outsb
rorb
sbb
lods
lock
xlat
int
xlat
les
test
adc
fistps
and
js
test
pop
jb
push
subl
fcoms
loope
jmp
xchg
fsubrs
outsb
cmpsb
rolb
int
push
js
push
xor
scas
xchg
jno
mov
mov
sbb
cmpsb
adc
or
or
stos
out
or
adc
or
or
dec
jg
fsubl
push
das
cltd
or
stos
cltd
inc
popf
out
ljmp
inc
adc
cmpsl
pop
sub
xchg
inc
sub
loopne
pop
inc
call
mov
jns
mov
pop
shll
bound
adc
inc
dec
lret
bound
push
mov
in
cmp
and
mov
test
mov
jno
cmp
jbe
jae
nop
sarb
adc
sub
xor
clc
sbb
xchg
sbb
stc
cmp
ficompl
call
lret
or
cmpsl
testb
jmp
out
lret
icebp
mov
push
aad
mov
and
sbb
xor
mov
stc
xlat
std
inc
jne
xchg
pop
nop
bnd
push
mov
inc
inc
and
testl
or
push
jb
or
dec
pop
xor
fidivrs
pop
out
out
sbb
ficompl
and
scas
js
jnp
lcall
lods
out
xchg
addr16
or
imul
sbb
cmc
inc
iret
add
xchg
fsubs
xorb
lea
adc
imul
cmpb
lahf
add
sbb
push
stos
xlat
pop
mov
push
in
loope
daa
mov
sub
test
mov
and
jl
sbb
imul
mov
icebp
into
jae
fsubrl
sub
popa
and
mov
xor
dec
jl
cli
mov
mov
out
sub
sub
daa
cltd
lds
popa
mov
out
sar
movsl
mov
or
aas
push
cltd
ss
idiv
in
adc
lock
subb
fldl
pop
xchg
test
shll
loop
xlat
xchg
fnsave
cli
das
outsl
int
or
xchg
jge
adc
xor
fimull
in
js
loopne
xlat
mov
es
xlat
in
dec
or
aam
and
outsb
or
pop
xor
jmp
mov
in
clc
ljmp
icebp
ficoml
inc
stos
mov
mov
daa
push
push
popf
test
daa
pop
std
fwait
sub
lods
int
rol
out
cld
fcoml
mov
pop
jge
dec
inc
movsb
mov
inc
push
jns
push
jb
dec
lods
push
jl
adc
pop
adc
sub
addl
mov
out
sbb
xchg
dec
repz
out
js
jbe
jb
pushl
ljmp
xchg
mov
inc
lock
jecxz
sbbl
aaa
aad
not
mov
xlat
cmpsb
gs
enter
dec
roll
mov
and
addr16
vmread
int3
loopne
shl
test
lods
push
fldenv
cmpsl
into
int3
jp
cmp
jle
es
inc
push
pop
mov
pop
jp
imul
sub
xor
arpl
mov
loop
xchg
movsb
pop
mov
fsubs
jo
not
sub
jecxz
hlt
pop
add
daa
mov
imul
dec
xor
add
cltd
fstpl
sahf
push
sarl
cwtl
shrb
dec
addr16
inc
push
sbb
sub
bound
xchg
add
pop
shrl
sub
dec
fsubrl
jl
sbb
bound
xchg
cmc
cmp
sub
xchg
test
int
dec
in
lea
mov
cmpsl
pop
lcall
stos
lea
jb
ret
xor
mov
push
cltd
and
icebp
in
mov
inc
add
out
insb
xchg
push
xchg
xchg
mov
jo
or
mov
into
push
mov
decb
lahf
idivb
jb
stos
push
xlat
cltd
in
mov
fiadds
inc
aaa
sub
mov
fisubs
iret
mov
mov
je
test
outsb
stos
xor
cmp
in
pop
xchg
xchg
xor
in
fdivs
lods
xchg
rclb
out
inc
sub
addr16
mov
cmp
push
mov
xor
out
imul
aas
sub
and
push
jg
push
fs
enter
mov
test
jmp
out
or
incb
je
xchg
es
nop
daa
xor
daa
mov
mov
por
push
mov
mov
push
mov
pop
fdivrl
sbb
clc
lods
popa
sbb
jne
pop
mov
sbb
das
mov
push
into
je
movsl
mov
bound
mov
sbb
ror
cmp
sbb
mov
daa
fs
add
in
mov
sub
pop
sub
dec
imul
aad
mov
aad
pop
inc
cmp
or
dec
xchg
adc
out
in
jl
mov
xor
xlat
pusha
push
xor
leave
cld
cltd
sub
out
xor
cmp
mov
xchg
out
call
dec
sbb
outsl
cmp
mov
pop
je
stos
out
mov
into
fsubl
inc
int
loope
out
dec
hlt
nop
scas
dec
std
pusha
push
add
scas
fnstsw
sub
iret
shl
push
loopew
sbb
adc
inc
js
adc
and
dec
push
pop
push
nop
push
fstpt
daa
aas
push
shr
xchg
nop
test
jecxz
sub
ret
cmp
sub
mov
enter
sub
sub
inc
pushf
inc
mov
cli
test
adc
mov
test
aam
pop
aad
sub
or
push
mov
cli
shl
dec
jbe
stc
jns
test
repz
loope
push
call
add
mov
cltd
nop
out
fldl
test
out
dec
pop
das
decl
test
das
and
call
dec
cltd
mov
test
mov
sbb
dec
loopne
scas
add
ja
xchg
mov
or
cmp
dec
xor
mov
std
out
jg
push
imul
add
add
in
fidivl
inc
in
pop
leave
jo
clc
in
aad
leave
movsl
mov
jmp
pop
sahf
fidivs
add
inc
or
rorl
mov
mov
mov
mov
scas
jp
add
loope
test
inc
sbbb
xchg
xchg
jp
xor
lcall
call
ja
call
cmp
adc
inc
dec
cmpl
xchg
xchg
add
add
push
xor
xchg
in
and
lcall
jp
setne
pop
and
pop
and
lcall
mov
sbb
cmp
addr16
jo
imul
jnp
ret
hlt
pop
and
imul
pop
push
jb
in
sub
out
push
imul
arpl
mov
or
pop
iret
xor
sub
add
xchg
mov
inc
out
rcrl
fnstcw
mov
pop
sub
sbb
pop
nop
ja
repz
push
call
push
popa
dec
lea
cli
lods
adc
xor
out
out
call
and
int
rcll
roll
pop
mov
sub
mov
loope
lock
pop
inc
or
into
push
adc
or
jg
add
mov
xchg
aam
mov
fbstp
ret
nop
xor
scas
and
sbb
enter
cs
mov
jnp
dec
xchg
push
inc
jecxz
add
and
fisttpl
mov
out
jo
addr16
jecxz
lds
mov
inc
cli
mov
addr16
ljmp
leave
test
sbb
push
push
aam
das
mov
in
in
inc
icebp
pop
pop
lcall
ret
and
insl
pop
dec
out
out
rcll
and
or
and
mov
popf
test
add
sbb
scas
push
pushl
jns
hlt
cmpl
adc
imul
aad
in
or
xor
xor
imul
xor
mov
or
leave
mov
mov
inc
mov
fucom
adc
add
sub
dec
xchg
add
inc
divl
dec
insb
xchg
clc
imul
in
aas
adc
pop
mov
leave
out
sbb
sub
cs
jns
add
jns
jge
test
fidivl
mov
jp
test
add
hlt
fcomi
cmpsl
add
loop
cwtl
pusha
cmp
hlt
fdivp
adc
loop
mov
inc
in
mov
add
jp
lods
jmp
sbb
cmp
test
pop
movsb
lock
dec
sbb
lret
imul
dec
mov
or
mov
cmp
xchg
push
mov
add
lret
dec
jmp
push
cwtl
mov
pop
xor
mov
dec
out
mov
fimuls
xorl
mov
ss
jns
adc
dec
scas
cs
push
ret
fcomp
repnz
int3
push
fiadds
push
and
les
jmp
cmp
adc
in
les
and
add
mov
push
add
cmp
enter
cltd
outsl
out
pop
enter
lock
xchg
and
sub
test
jmp
cmpsb
mov
js
insb
xor
notb
and
mov
cmc
mov
insb
sarl
mov
ds
popa
xchg
jl
or
fisubs
sub
aad
xor
adc
es
fimuls
movsl
push
cld
adc
lds
mov
and
pop
jl
add
xlat
push
jo
dec
addb
xor
lds
adc
out
shlb
lods
mov
dec
daa
lea
addl
mov
fsts
fs
mulb
cli
clc
adc
fs
and
mov
xchg
test
movb
shr
cmp
cmp
shlb
pop
pop
xlat
push
dec
cmpsl
inc
clc
push
sbb
imul
pusha
cmp
mov
push
sbb
pushf
addb
or
sbb
xchg
inc
cmp
fadd
mov
addr16
lods
xchg
sbb
lahf
ss
insb
mov
pop
icebp
ret
mov
mov
fstpt
inc
out
setbe
loopne
pop
push
shlb
adc
dec
mov
flds
inc
mov
in
js
xchg
stc
mov
adc
arpl
notb
dec
cmp
mov
adc
adc
sarb
cmp
push
push
out
or
mov
cltd
pop
pushf
lcall
xor
xor
loop
jecxz
mov
int3
xchg
std
xor
mov
mov
sbb
pop
test
aam
test
loope
aad
mov
mov
xchg
push
sahf
xor
cmp
or
inc
xchg
push
sbb
sbb
xchg
push
mov
ljmp
pop
inc
popf
jg
stc
add
popf
subl
sbbb
inc
push
mov
cmp
sub
mov
int3
mov
dec
inc
push
dec
mov
mov
test
cmp
sub
popa
aam
sub
test
pop
inc
add
dec
fisubl
pop
mov
sbb
sbb
push
dec
stos
mov
lds
pusha
add
jne
ficoml
mov
mov
pop
jb
bound
cmp
mov
enter
mov
cld
insb
ja
aad
or
int3
cmp
cmp
dec
mov
mov
or
sarl
jns
test
sarl
pop
pusha
roll
nop
fstp
sahf
dec
pop
push
ror
fprem1
repnz
icebp
nop
mov
sbb
jnp
cmp
fs
stc
dec
xor
inc
mov
sbb
popa
add
sub
fwait
out
stc
mov
jl
pop
push
xchg
xor
mov
aad
jne
mov
dec
mov
out
mov
int
stc
fidivrl
scas
mov
xor
push
add
xchg
xchg
outsb
dec
xchg
call
mov
out
sahf
xor
ljmp
sub
loopne
pop
lods
fwait
pop
enter
or
and
test
test
push
xchg
push
das
outsb
aaa
aas
cmovl
fcmovnu
in
ss
sub
jb
sub
cmp
cs
push
xor
xor
arpl
scas
cmp
mov
es
add
push
cli
sarl
jo
xchg
pop
pop
pop
shll
inc
ljmp
addr16
or
pop
jne
and
rcrb
inc
jno
lods
popf
xor
adc
jmp
lds
and
lock
pusha
clc
imul
bnd
inc
mov
dec
callw
mov
inc
jmp
inc
fisubs
push
xchg
rolb
addb
cmc
call
test
es
into
cmp
clc
lock
fadds
or
aas
dec
mov
imul
cmp
sub
in
adc
adc
sub
mov
pop
or
loope
cmc
das
loope
ja
inc
dec
jnp
xchg
mov
roll
sub
sbb
subb
dec
jae
int
mov
cmp
pop
ljmp
les
and
shlb
mov
sti
daa
loop
cmpsb
inc
xor
push
lds
scas
imul
sbb
iret
xchg
jns
fldt
ss
xchg
jl
jne
pop
pop
lods
mov
pop
pop
hlt
push
xor
jg
adc
les
stc
ret
mov
xchg
mov
push
jo
nop
gs
push
stc
ljmp
notb
and
js
icebp
shlb
add
sbb
lret
mov
sub
pop
stc
stos
jbe
sti
addr16
cltd
pop
mov
jp
fistpl
insb
cmp
stc
and
adc
lock
notl
xor
repnz
scas
inc
fidivs
arpl
mov
adc
xchg
pop
sbb
jbe
dec
cmp
popa
pusha
vhsubps
sbb
mov
lahf
pop
dec
mov
add
mov
or
into
mov
dec
mov
jbe
lcall
out
push
ss
aam
inc
cmp
popf
lahf
fwait
jno
ficoms
push
sbb
cmp
xor
push
loope
xor
test
push
and
mov
stc
adc
nop
daa
adc
mov
push
sub
push
pop
inc
sbb
insb
stos
dec
and
jl
push
or
inc
in
sub
addb
js
jmp
mov
push
fcomi
adc
loope
or
or
out
movsb
jbe
xor
push
popa
inc
es
inc
mov
popf
lret
scas
iret
push
sbbb
out
xorl
dec
xchg
sub
insl
adc
pop
das
incl
out
pop
mov
add
pop
xor
cli
rcrl
inc
jp
insb
jmp
cmp
stos
test
mov
cmp
ja
aam
scas
in
les
std
cmp
ffree
pop
cwtl
enter
or
idivb
hlt
jecxz
fs
sub
xor
int3
dec
jl
xorl
call
ss
xchg
cmp
rorb
push
pop
sub
pop
inc
add
jge
dec
add
insb
lret
adc
pop
int
aaa
insl
mov
push
mov
sti
pop
push
bound
push
in
dec
mov
fcoms
xchg
jge
imul
fmul
notb
out
clc
fdivl
xchg
das
std
inc
insb
push
push
add
pop
out
add
sbb
jno
mov
add
pop
push
pop
fwait
jmp
pop
aam
pop
cmp
stos
cmc
sub
cld
add
movsb
or
sub
fdivl
xor
inc
jp
or
jbe
pop
cmpl
jmp
xor
in
jle
pop
or
mov
andb
xor
xchg
inc
xor
lea
pop
stc
mov
test
mov
sahf
enter
int3
stos
mov
mov
ret
push
jbe
aas
lock
adc
test
aaa
mov
pushf
in
dec
mov
mov
js
popa
xchg
dec
out
imul
or
insl
mov
inc
cmc
jnp
jmp
sbb
lock
fistpll
inc
bound
xor
xchg
mov
imul
push
shrl
ret
hlt
jo
fdivl
rcr
ror
mov
cli
xor
add
xorb
push
stos
popa
pop
lcall
mov
nop
dec
popl
or
xorb
divb
dec
add
pop
xchg
or
xchg
jmp
pop
mov
push
dec
std
nopl
jae
or
stos
callw
jp
in
add
lea
xor
pop
and
out
ja
or
stos
stos
int3
jo
cld
rorl
dec
ret
sub
mov
sub
xchg
or
jo
fsubrp
lret
adcl
rclb
leave
add
jle
sti
fimull
inc
cmp
outsb
add
lods
ja
jmp
lahf
mov
and
mov
in
jb
xchg
aas
dec
pusha
adc
push
enter
push
mov
jecxz
shrb
lret
adc
dec
mov
push
in
cmpsb
insl
cld
pop
lea
or
into
data16
stc
or
out
outsb
roll
push
inc
jl
les
movq
mov
push
arpl
mov
adc
pop
mov
lods
sbb
inc
fs
sbb
jbe
cs
clc
es
inc
in
and
sbb
sti
pop
inc
or
push
jbe
out
int3
sub
push
cli
add
rcrb
outsl
xchg
dec
or
stos
inc
lcall
rcr
dec
mov
movsb
push
adc
loope
sub
imul
and
jbe
jg
scas
js
mov
in
addr16
jbe
hlt
sub
or
sub
or
xchg
ficomps
cmp
lcall
sahf
xchg
xchg
mov
xchg
fmuls
imul
sbb
inc
sbb
repz
popf
mov
mov
adc
push
inc
sub
es
ja
add
lock
daa
fs
push
out
repz
lds
inc
jno
ret
into
aas
fwait
cmp
push
xchg
jne
cmp
xor
lcall
fmuls
imul
leave
lock
pop
sbb
mov
jne
xor
aad
sub
test
movsl
jno
sub
cld
lahf
push
fs
es
in
lcall
je
fldt
mov
push
add
movsl
in
arpl
jg
fidivrs
jnp
adc
cmc
call
mov
shll
jg
mov
inc
ss
nop
insl
push
lock
mov
je
jge
push
inc
adc
lods
pushf
xchg
and
push
and
or
out
aaa
inc
lock
stc
xchg
mov
das
fwait
push
int3
mov
lea
adc
divb
jmp
aam
mov
cli
adc
adc
sbb
ss
mov
sub
adc
sub
adc
jb
test
stos
out
jl
xchg
pop
pop
mov
push
mov
xlat
lret
lods
fdivr
mov
and
sarb
cmp
js
std
mov
push
iret
jb
mov
fs
aad
pop
in
pop
xor
jecxz
adc
in
jno
add
jb
data16
jg
in
sub
jno
cltd
int
in
push
add
cmp
fisttpll
adc
sub
mov
dec
insb
fwait
dec
inc
outsl
cld
mov
inc
dec
aaa
insb
mov
ds
jl
loope
push
sbb
xor
jno
leave
dec
rorb
inc
pop
mov
or
stos
inc
rolb
loope
xchg
test
lahf
pop
jle
sti
cmp
dec
adc
fwait
je
and
and
test
adc
das
test
inc
xchg
xorb
int3
and
dec
sbb
jnp
stc
addr16
xchg
mov
pop
push
push
lcall
or
in
popf
std
inc
add
cmc
push
lods
int
aam
and
notb
mov
lods
dec
push
addr16
xor
out
cltd
mov
dec
push
enter
ja
decl
sub
pop
push
adc
sbb
or
jo
pop
mov
and
sti
dec
ret
xor
fwait
dec
movb
std
or
insl
jmp
jge
cli
push
add
imul
dec
cmp
scas
pop
jmp
aam
stc
mov
stos
subb
rorl
in
add
into
daa
sti
gs
mov
scas
sub
pop
aam
jg
sbb
xor
sti
lods
daa
jae
pop
inc
sub
insb
daa
in
sub
lods
xor
das
xchg
mov
or
notb
clc
notl
int3
mov
test
rcrl
sbb
jno
mov
cmp
pop
push
int3
pop
jmp
fstpl
push
aad
lods
mov
mov
imul
imul
repz
and
lds
aas
jp
sbb
inc
or
cmp
ja
lea
inc
shlb
outsl
adc
xor
pop
in
inc
sbb
dec
les
sbb
jmp
dec
cmpsb
in
or
pop
lcall
cmp
mov
mov
iret
cltd
icebp
or
lret
jnp
fcomip
xchg
ret
js
mov
punpcklbw
push
jle
add
add
push
and
inc
and
or
mov
mov
test
pushf
adc
xor
mov
sbb
fwait
jle
lock
aas
lcall
dec
rorl
aas
pop
cs
and
je
jno
sbb
cmp
inc
push
pop
sbb
pop
and
sub
adc
mov
popa
mov
adc
pushf
or
rorl
ficompl
mov
mov
ds
inc
into
and
ret
jp
les
dec
sub
lds
cmp
sub
mov
or
out
pop
push
dec
push
xchg
scas
xor
mov
fwait
sub
sub
repnz
inc
in
sbbb
pushf
push
ja
repz
sarl
out
cli
push
mov
and
mov
and
adc
lods
sbb
cmp
cmp
ret
test
mov
loop
pop
sbb
adc
or
addb
sbb
js
mov
imul
lods
add
js
xorb
push
adc
sub
cmpsl
cmc
pop
iret
inc
or
repnz
je
test
lods
cmp
pusha
add
scas
aam
nop
mov
xchg
rcll
int3
xchg
or
shl
sub
movsl
lret
lds
xor
jnp
mov
arpl
lea
or
mov
add
cwtl
or
mov
call
jne
nop
dec
jnp
add
mov
xor
inc
push
pop
insb
inc
daa
hlt
mov
jge
mov
mov
stc
insl
inc
in
icebp
jl
lds
pop
dec
pop
in
jbe
fwait
in
add
inc
shlb
or
fwait
scas
arpl
jne
push
mov
pop
das
into
sub
data16
inc
inc
sub
add
adc
push
addb
int
mov
loop
pop
add
pop
fmuls
cmpsb
inc
scas
adc
inc
fs
xchg
mov
fsubs
pop
ret
jmp
sub
lds
adc
inc
in
adc
cmp
cmp
clc
adc
shrb
add
cs
test
scas
pop
in
xchg
mov
xor
aas
pushf
xor
push
int
push
dec
insl
mov
mov
jecxz
jge
dec
sbb
idiv
adc
fsubrs
or
clc
cld
or
or
cld
xchg
sahf
call
stos
cmp
pop
pop
sub
loop
adc
adc
xor
cmc
dec
in
mov
insl
push
adc
cmp
cmp
pop
fidivl
addr16
movsl
orb
and
andb
gs
lods
inc
ss
cmp
ficoml
test
cli
inc
inc
icebp
or
push
aam
mov
mov
xchg
insl
rcrl
in
xchg
or
jns
into
bound
dec
rolb
or
psrlw
mov
test
xlat
adc
cmp
repnz
in
iret
fsubrs
repnz
xchg
push
push
outsb
iret
mov
in
scas
xchg
sub
imul
sub
ja
mov
mov
xlat
push
jmp
mov
pop
push
cld
loopne
int3
dec
aaa
dec
push
in
xor
fstpt
loop
test
and
pop
push
xchg
and
cmp
fdivr
pop
out
xor
pop
sub
lods
and
cmp
fcomip
std
hlt
add
fldt
push
aad
shll
mov
insl
sub
ret
loopne
shll
bound
negb
movsb
jne
dec
add
pop
and
xor
inc
cmp
mov
pop
mov
rep
cwtl
mov
jne
push
mov
mov
loopne
push
or
inc
xchg
mov
push
sbb
mov
jp
cli
adc
cmpsl
and
pop
xchg
or
mov
push
es
lret
cmp
or
out
ljmp
aas
pop
loopne
jp
movsb
dec
jnp
mov
popa
xor
push
add
sub
adc
lock
sbb
loop
jnp
in
jmp
dec
push
or
and
cmp
inc
jno
inc
sti
test
xchg
divl
fnstsw
in
dec
fimuls
lock
sub
cmpsl
enter
dec
out
dec
mov
xchg
inc
fadd
cmp
dec
lods
mov
test
pop
or
pop
mov
push
mov
mov
sbb
and
fwait
cld
lea
or
sub
ss
or
push
cld
lock
in
pushf
inc
dec
and
stc
pop
and
fldl
cli
mov
xchg
push
aas
sbb
int3
cmc
aas
bnd
pop
xchg
imul
inc
push
lret
push
fisttpll
dec
fcmovu
sbbb
dec
xor
les
cmpsb
xor
jbe
loope
mov
or
hlt
mov
xchg
pop
insb
jmp
leave
dec
jp
pop
mov
mov
imul
sub
or
adc
cmp
outsl
mov
jecxz
lcall
stos
movsb
mov
data16
mov
pop
jecxz
insb
adc
and
ljmp
loopne
jg
mov
je
call
jo
insl
je
scas
add
enter
cmp
push
icebp
into
jg
stos
ret
mov
or
jae
rcr
cmpb
jle
dec
pushf
stos
dec
andb
dec
mov
insl
dec
das
fdiv
shl
loope
sub
inc
pop
insl
in
cmpb
pop
fstp
cmp
mov
insb
mov
clc
nop
aaa
cmp
loope
jecxz
lahf
lock
or
pushl
sub
dec
pop
popa
pop
inc
call
mov
adc
les
out
dec
in
in
enter
sarl
jecxz
push
xchg
loope
repz
jle
jp
neg
xchg
mov
ret
jp
push
mov
pop
adc
daa
loop
push
inc
dec
sub
push
or
add
inc
outsl
orb
mov
push
mov
lods
jnp
lods
cmp
out
sub
jecxz
push
mov
repnz
sbb
lds
idivl
sub
es
inc
add
xor
dec
dec
xor
lretw
jg
pusha
lret
cmc
adc
jns
repnz
mov
cmp
cli
mov
xchg
ret
push
adc
js
dec
lods
lcall
test
push
inc
fdivr
and
lret
mov
mov
loop
jecxz
mov
cmpsl
decb
mov
test
subb
dec
sub
ja
fistpll
and
push
add
in
mov
push
adc
dec
in
mov
adc
sub
sbb
xchg
aaa
popa
imul
inc
scas
adc
mov
insb
xor
push
cmpb
mov
mull
icebp
xor
push
dec
xor
cwtl
repz
dec
lret
mov
cltd
iret
mov
in
movsl
sbb
mov
icebp
fwait
ljmp
dec
loope
or
lods
xchg
mov
pop
add
mov
and
repnz
pop
test
or
push
jmp
push
cs
or
ror
ja
sbb
and
jge
xchg
stos
inc
mov
fcoms
pusha
or
ret
mov
push
add
pop
rorl
loop
ret
mov
lcall
or
scas
pop
xor
ret
cmp
aas
ss
pushf
lret
rclb
enter
xor
xchg
mov
das
adc
leave
xchg
push
lret
xor
call
and
dec
daa
sub
cwtl
mov
mov
test
es
push
out
mov
mov
inc
mov
ret
pop
lcall
mov
in
mov
push
sub
xchg
push
sahf
divl
sbb
addr16
outsl
dec
clc
es
xor
int
in
lods
cmpsb
push
adc
out
insb
stc
sub
push
mov
loope
mov
dec
popa
lahf
cmp
adc
mov
fstpl
add
dec
lods
jg
outsl
popf
mov
mov
dec
bound
out
adc
les
das
add
imul
cwtl
lea
add
xchg
ja
add
and
pop
sti
and
jae
dec
arpl
mov
imul
fnsave
insb
das
testb
mov
xlat
rorb
lret
cmp
inc
icebp
ret
fwait
mov
push
pop
rcrl
adc
pop
lea
arpl
jnp,pn
adc
mov
sbb
mov
sbb
scas
lock
sub
adc
cmp
aas
jb
xchg
stc
push
leave
dec
test
pushf
popf
and
add
mov
pop
aas
nop
ret
test
or
call
ss
ja
add
mov
sbb
jle
cmp
int3
xchg
cmp
ror
sbb
mov
fmull
inc
cmpb
pop
cld
idivb
mov
rorb
push
mov
and
loope
cmovae
ficompl
in
outsl
into
data16
unpcklps
stos
dec
jecxz
adc
cmpsl
mov
add
movsb
sahf
nop
shll
pusha
data16
pop
mov
xor
push
das
mov
pushf
mov
add
xchg
xor
fldenv
fstps
jne
inc
push
sbb
mov
pop
scas
lods
pop
loopne
pop
inc
xchg
fcomps
adcb
mov
add
call
push
mov
cmp
sbb
jle
out
push
enter
orb
push
enter
ljmp
jb
dec
lods
pop
sarb
das
adc
push
ret
ljmp
fdiv
in
jle
adc
mov
add
sub
jno
jle
ja
int
pop
mov
xor
jecxz
mov
and
jns
push
pop
aaa
in
pop
push
mov
fwait
and
add
insl
inc
mov
fsubl
jno
mov
lcall
jl
pop
inc
add
imul
jnp
ret
pop
inc
cmp
rcr
shrl
shrb
jp
push
adc
into
dec
sub
loop
inc
sub
mov
mov
mov
mov
into
insl
inc
mov
cld
enter
int3
xlat
sbb
xor
jnp
push
jns
bnd
push
fdivrl
decb
mov
cwtl
std
lods
je
dec
pop
cmp
push
xor
jbe
fwait
insl
xsaveopt
dec
adc
scas
cwtd
xchg
rorb
push
and
aas
pop
push
pusha
push
roll
scas
push
xor
ljmp
cmpsb
add
add
sub
sub
cmp
and
in
nop
sub
or
push
xchg
divps
pop
push
push
testl
aad
jle
addl
pusha
xchg
lods
outsl
pop
cmp
push
jle
sbb
dec
sbb
pop
sub
cmp
shl
xlat
sti
and
jnp
mov
in
jbe
mov
mov
xor
mov
loopne
lods
push
lret
xor
in
mov
inc
add
xchg
repnz
ss
xorb
inc
aas
out
mov
cmp
xchg
enter
push
lods
or
gs
loopne
lds
ret
xchg
pop
and
mov
jg
adc
loopne
arpl
mov
push
repnz
or
xchg
jl
in
jp
mov
pop
pop
inc
scas
inc
or
pause
or
mov
add
dec
sub
mov
and
out
aas
aaa
jg
test
insl
jne
repnz
push
pop
fnstsw
dec
jno
mov
call
mov
test
xchg
stc
fwait
ret
push
int3
jle
addl
inc
push
inc
mov
jo
into
lret
movsl
mov
mov
dec
sbb
int
sbb
push
lret
xor
into
push
or
arpl
movsb
cld
out
push
ljmp
scas
popa
int3
pop
push
insb
icebp
shr
mov
xchg
lock
faddp
test
fldl
cmc
lret
push
and
pop
inc
insl
sbb
mov
loop
dec
sarl
xor
mov
cmp
mov
lds
mov
pop
xchg
ss
xorl
adc
or
sbb
mov
int
or
out
enter
mov
test
sub
mov
lods
jg
and
jle
or
jnp
mov
and
mov
xchg
ljmp
add
push
pusha
mov
dec
cmpsl
jno
test
shll
sbb
subl
mov
dec
andl
cmpsb
jb
aam
sub
xlat
sbb
adc
loope
dec
mov
mov
cmp
out
push
loopne
icebp
or
add
mov
arpl
pop
pop
je
sub
insl
push
xor
xor
xchg
xlat
cltd
out
add
inc
es
push
insb
and
cs
jp
sti
icebp
nop
push
mov
dec
mov
cmpsl
hlt
loope
int
repz
jae
xchg
add
mov
jno
enter
sub
jmp
mov
cmp
subl
add
clc
sub
jp
imul
xchg
mov
xchg
rclb
sarl
ret
sub
mov
cmp
mov
xchg
mov
in
jb
push
push
or
pusha
dec
lahf
adc
mov
lret
lock
movsb
movsl
pop
imul
xor
push
sub
out
mov
inc
scas
pextrw
test
mov
cs
sti
aaa
scas
sub
cmpsb
into
shlb
push
test
pop
movsb
sbb
popa
cwtl
and
stos
ret
aas
out
cmp
adc
pop
xor
sarl
dec
dec
jb
inc
out
xor
popa
loopne
jge
jnp
fisttpll
enter
sub
push
cmc
lock
shll
jmp
or
mov
test
cmp
pop
sub
or
push
mov
out
enter
arpl
addr16
sbb
inc
and
orb
outsl
and
gs
xchg
gs
jae
mov
leave
push
cmp
repz
mov
loop
insb
les
mov
out
pop
jl
insl
lock
xchg
pop
rcrb
addr16
loope
out
inc
jne
rorl
int3
sbb
adc
loope
rcll
push
je
jge
shll
cmp
leave
push
mov
and
enter
fdivl
pop
int
pop
stos
and
jnp
jl
jg
ret
icebp
jb
cwtl
and
out
push
sti
aam
cmpsb
outsl
and
push
mov
ds
cwtl
pop
push
mov
xor
nop
sub
push
push
jae
cmp
rcll
pop
setne
lods
jb
inc
add
or
adc
ja
mov
lock
aam
in
jl
dec
js
insb
adc
lea
push
cmpsb
mov
lahf
xor
push
or
stos
out
or
xor
or
int
out
iret
adc
inc
bound
xor
xchg
lods
lods
aas
es
aad
xor
lea
xchg
cmp
sub
aas
lahf
pop
or
daa
mov
sub
lcall
jnp
mov
xor
cmp
xchg
xchg
popa
pop
push
add
cmc
movsl
mov
and
cli
mov
sub
fisttpll
and
sti
sbbl
mov
mov
sub
out
xchg
sti
not
nop
mov
out
mov
aad
ss
adc
insl
cwtl
mov
fnsave
ret
sti
sbb
leave
ret
ljmp
popa
mov
movsb
mov
jae
imul
in
adc
stc
mov
adc
and
mov
xchg
roll
test
jbe
jl
mov
jp
and
lods
sub
pop
add
ret
cmpsb
lods
outsl
addb
cwtl
sbb
fcoms
daa
xchg
mov
push
sbb
cltd
aam
out
test
pop
pop
inc
jnp
imul
stos
pop
decb
xor
imul
fisubs
pushf
notl
insl
mov
cwtl
loop
mov
add
fdivr
cmpb
and
insl
dec
mov
es
push
push
sub
mov
or
or
sub
das
jecxz
mov
jb
in
cmp
push
fdiv
sahf
cltd
push
divl
scas
es
shrl
push
mov
jg
jne
rcl
sbb
jmp
and
lds
xchg
lds
stos
fnstenv
rolb
mov
jle
lcall
or
shll
mov
imul
addr16
daa
adc
insb
pop
cmp
leave
cmc
xor
fwait
pop
mov
and
pushf
loope
fmulp
jmp
out
add
dec
xchg
xor
lods
ja
dec
dec
cmp
mov
iret
cwtl
hlt
cs
mov
pop
data16
addb
mov
pop
add
add
jge
pop
sbb
fst
mov
test
and
imul
inc
daa
pusha
inc
lods
sahf
mov
out
in
cmpsl
shl
int3
pop
pop
adc
clc
sub
outsl
fists
inc
shlb
sub
jge
dec
jno
repz
mov
and
jg
push
mov
mov
pop
fnsave
je
mull
and
jge
sbb
test
stos
in
ret
push
cli
or
rcr
cmp
add
dec
inc
add
xor
lods
movsb
shr
testl
sbb
bound
and
inc
fistpl
sub
lods
mov
ja
test
mov
add
out
bound
adc
int3
rorb
aam
push
jns
cli
negb
pop
fidivs
loope
fs
int3
rcrl
std
out
add
lods
xchg
jbe
sahf
leave
jno
sub
or
stos
pop
fistpl
arpl
add
pop
pop
inc
jo
loop
aam
ss
jae
mov
mov
inc
sarl
cmp
push
call
push
jecxz
lods
aas
xor
jl
inc
js
popa
arpl
and
lea
xor
jno
in
scas
push
fiaddl
aam
movsl
in
sbb
and
jne
and
fadds
int
lock
sbb
lea
adc
shr
sub
pop
scas
cmpb
stc
fisubl
lock
sbb
lods
jbe
mov
jp
fwait
outsl
jmp
push
inc
adc
push
addr16
pop
lds
mov
ljmp
pop
js
loopne
jae
aad
adc
inc
lret
jno
adc
repz
mov
outsb
out
in
outsb
scas
push
lds
dec
adc
cmp
aaa
fsubp
fisttpll
mov
imul
inc
lret
mov
fwait
sbb
sub
push
nop
fistl
ss
out
insl
jmp
insb
mov
repz
or
pop
test
ss
insb
fisttps
out
cmp
add
inc
fwait
inc
ret
aam
das
sbb
push
pop
stos
pop
cmp
fs
imul
push
sbb
jb
inc
frstor
jmp
mov
in
sbb
cmp
mov
bound
xor
call
pop
fs
pop
enter
xchg
xor
cmp
and
std
test
pushf
sub
arpl
push
in
jg
adc
mov
sub
or
cmpb
test
mov
add
xor
lcall
inc
movsb
adc
inc
loope
sbb
jge
sub
imul
pop
insb
testb
mov
lds
in
xchg
mov
mov
adc
xchg
popa
xchg
cltd
rorl
sub
sbb
outsb
push
out
xor
out
dec
outsb
push
mov
popa
lahf
negl
mov
add
mov
pop
cli
inc
aad
bound
pop
inc
push
das
mov
cmpsl
ret
push
or
or
ret
sti
aas
mov
mov
jb
add
imul
and
cmc
jb
jae
push
sub
mov
movsl
cmp
sub
jmp
cmpsl
jecxz
imul
adc
adc
sahf
push
into
nop
scas
inc
pushf
ja
or
push
sub
cmpsb
push
popa
adc
ljmp
jns
lret
push
hlt
dec
dec
in
dec
pushf
sarb
fisubl
jns
and
dec
cmp
pop
movsb
int3
sbb
cwtl
push
pushf
nop
mov
clc
sub
fldenv
stos
bound
punpckldq
jbe
push
outsb
idivl
and
cmpsb
insb
pop
sbb
es
movsl
pop
mov
lods
and
xchg
pminub
dec
jns
dec
arpl
mov
cmpsl
movsb
add
xor
inc
movsl
mov
or
push
pop
cmp
test
loope
add
sbb
cwtl
cli
shll
push
das
inc
mov
mov
sbb
mov
andl
fdivrs
in
or
pop
testl
cmp
pop
lret
shll
xor
add
jb
test
push
add
incb
ja
add
divb
cwtl
pop
addr16
add
adcb
cmp
xor
mov
sub
dec
sbb
repnz
inc
es
jns
add
mov
pop
aas
jns
mov
xor
jo
imul
mov
push
xchg
and
lahf
mov
call
push
stos
jno
push
roll
sub
push
shlb
dec
mov
mov
inc
push
je
pop
andb
pop
mov
insb
dec
xchg
pop
into
sbb
mov
pop
xchg
dec
shr
dec
bound
arpl
mov
sbb
add
insb
popa
into
mov
jp,pn
loopne
ret
rcrb
mov
sbb
out
sahf
lahf
out
push
adc
in
xchg
push
dec
loope
icebp
add
pop
movsb
lret
fnstenv
sbb
aaa
movsb
aam
inc
add
std
push
test
addb
decb
adc
cmp
aad
popf
sbb
mov
add
dec
shlb
lcall
enter
je
sub
jns
cmp
aad
push
mov
dec
push
mov
repz
jp
jb
adc
fstl
roll
lods
or
jbe
jae,pt
add
xchg
push
sbb
jo
mov
xchg
add
pop
mov
stos
fsts
rorb
clc
xchg
xchg
aaa
pop
ret
mov
sahf
in
popf
jmp
mov
xchg
outsb
pop
lret
mov
jae
lea
jnp
jp
cltd
push
xchg
jbe
sbb
mov
push
or
test
cmp
call
mov
add
pop
stc
sbb
adc
xlat
mov
in
add
jle
int3
inc
xor
or
push
dec
loop
int
out
cld
lods
shrb
js
dec
mov
notb
stos
or
lahf
rolb
adc
cs
dec
mov
in
sbb
dec
rcr
lock
pop
add
inc
lds
cld
into
ret
inc
inc
repz
or
push
ret
push
xchg
inc
cmpsb
les
xchg
and
xor
jg
int3
xchg
fdivr
shll
adc
pop
movsl
dec
fwait
imul
lods
in
push
jmp
shll
jge
stc
loopne
and
cltd
fimuls
mov
cmpsb
int
inc
iret
inc
xchg
lds
jnp
inc
mov
data16
lahf
hlt
mov
mov
sub
aaa
and
insb
lock
cmpsb
mov
std
aam
sbb
jecxz
jmp
and
out
and
out
pusha
aaa
mov
mov
leave
add
jno
mov
dec
push
xchg
mov
jbe
sub
addr16
mov
je
out
idivl
inc
int3
imul
or
enter
imul
in
xchg
mov
inc
scas
vaddsubps
jno
xorl
lods
cmp
xor
dec
cs
inc
dec
mov
push
push
xlat
shrl
mov
dec
inc
add
rolb
sbb
pop
nop
mov
sub
rcrb
aaa
loop
mov
outsb
cmpsb
mov
adcl
jecxz
pop
or
sub
jno
or
jb
fidivs
and
or
mov
pop
and
mov
fcoml
pop
sub
dec
idiv
xchg
divb
in
fcomp
xchg
ljmp
fstpt
mov
add
rcrl
pushf
xchg
jmp
mov
mov
popa
inc
repz
adc
sub
inc
xlat
sbb
testb
aas
hlt
xor
cmp
mov
outsl
inc
xchg
imul
in
push
shlb
addl
fisubrl
icebp
mov
xor
idiv
shlb
cmp
jo
hlt
insb
xchg
xor
cmp
test
xor
xor
test
push
lcall
xchg
pop
mov
mov
dec
dec
mov
cmc
adc
mov
iret
inc
pop
stos
and
nop
jge
xchg
lret
push
mov
sub
jmp
mov
mov
orb
or
sbb
mov
mov
inc
clc
ss
mov
xor
add
shlb
or
in
push
in
iret
mov
add
movsl
das
jle
test
lret
cmp
leave
les
sub
jge
xchg
fsub
fs
cmp
aas
rorb
pop
mov
cli
popf
clc
out
xchg
popa
add
hlt
in
or
mov
jb
xchg
jnp
push
pop
sbb
out
xchg
ljmp
add
int3
loopne
mov
push
pusha
xor
ret
dec
pop
mov
push
mov
fsubrl
cmc
mov
jbe
push
mov
push
mov
loope
sub
and
aad
xor
daa
scas
xchg
xchg
sbb
cmp
add
and
add
pusha
or
pop
inc
call
mov
jge
psubw
outsb
test
pop
test
jbe
jp
les
mov
sar
push
dec
mov
push
lods
xchg
fnstcw
adc
daa
add
push
and
mov
xchg
dec
lahf
int
jo
sub
loope
roll
shl
out
mov
popf
push
xchg
add
sub
mov
test
fiaddl
in
out
lods
sahf
aam
jecxz
bound
push
xor
push
add
popa
sub
mov
pop
nop
sub
dec
cmpsb
adc
cmp
sbb
cmp
xchg
mov
outsb
into
add
cmc
xor
and
mov
mov
push
fstpl
ret
mov
add
mov
cs
push
adc
loop
add
out
sbb
jg
sbb
adc
scas
ret
mov
mov
mov
outsl
shrl
cld
and
dec
ja
shll
xorb
jle
xor
rorb
mov
xchg
sbb
stos
sub
sahf
dec
pushl
dec
and
in
test
add
stc
lcall
cli
push
jle
cltd
or
cli
jle
mov
add
adc
test
gs
jl
sub
cmp
push
call
or
or
insb
outsb
sub
lods
movsb
mov
xchg
sub
aam
arpl
cmp
movsb
inc
push
nop
repnz
push
and
loop
sbb
loop
mov
xor
cwtl
mov
popl
into
xor
or
loop
test
int3
std
std
xor
pop
adc
adc
testb
test
pop
xchg
mov
sbb
lret
test
enter
ficomps
call
inc
ja
xor
push
repnz
ja
pop
push
cmp
sbb
aas
jns
cs
int3
xchg
frstor
sub
sbb
filds
xor
add
mov
cmp
mov
pop
mov
sbb
xor
mov
and
fimull
icebp
xor
daa
push
insb
pusha
popf
mov
inc
in
shrb
and
mov
out
sets
pop
xchg
add
lret
rcll
push
xadd
push
fistl
mov
mov
shrb
sbb
call
cwtl
dec
cmp
call
outsb
inc
mov
data16
in
inc
inc
xor
arpl
mov
dec
out
mov
xlat
cltd
icebp
inc
fmuls
std
aad
scas
loop
cmp
mov
fcoms
outsl
mov
out
dec
fistps
adc
mov
xlat
les
popf
cmp
xchg
dec
or
fadds
push
dec
int3
in
mov
rcl
out
test
aaa
out
push
mov
prefetchw
cltd
scas
jmp
push
leave
jmp
mov
aad
adc
rolb
lea
dec
push
into
jbe
ret
iret
sbb
mov
movsl
mov
ja
fwait
dec
movb
push
sbb
xchg
push
dec
push
fstps
push
xchg
sub
mov
ds
repz
subl
jecxz
and
in
scas
mov
cmp
icebp
mov
shll
lods
fsubs
xor
xchg
sbb
addb
xlat
xchg
fs
mov
push
lret
pushf
cmp
and
xor
xchg
int
aas
add
cmp
xor
adc
test
lcall
gs
sbb
movl
rcll
adc
enter
xlat
and
pop
xchg
fs
shll
xchg
addb
in
sub
pop
jae
movl
mov
iret
or
push
nop
mov
pop
sbb
jo
xor
push
or
fs
scas
inc
fnsetpm(287
xchg
dec
mov
and
xchg
ds
add
ficoml
int
cmp
adc
jno
movsl
imul
out
mov
mov
int3
xchg
pop
xor
mov
mov
test
clc
shlb
mov
xchg
add
adc
imul
add
lock
roll
cwtl
inc
fnstcw
ljmp
and
mov
jns
mov
rolb
into
xor
lods
inc
insb
or
mov
sbb
insl
mov
pop
push
enter
and
ret
ret
sbb
insl
push
and
ljmp
xchg
scas
repz
dec
add
dec
push
popf
in
inc
mull
out
inc
dec
jmp
mov
ds
adc
push
xchg
cmp
cltd
xor
packuswb
mov
outsl
jmp
les
fldt
jg
sahf
inc
cmp
test
inc
outsl
sti
adc
jmp
ljmp
jp
in
mov
and
out
outsb
jb
imul
icebp
mov
dec
cmp
push
adc
xor
loop
jle
pop
test
push
subb
xchg
subl
add
fmuls
test
jp
sbb
dec
pop
in
fbld
ss
xchg
mov
arpl
dec
pop
pop
sbb
leave
xchg
adc
call
sub
daa
sbb
jl
fwait
out
sarb
adc
out
cld
addr16
hlt
sub
je
sub
std
cmpsb
outsb
pusha
scas
and
cwtl
add
iret
sbb
lcall
jle
jg
popa
bound
xchg
cmp
aad
mov
out
pop
into
mov
adc
cs
push
sub
and
cmp
sub
xchg
sti
sbb
stos
aam
inc
adc
xchg
jno
push
test
imul
push
pushf
fsubr
test
popf
in
out
pop
mov
inc
incb
add
aam
jge
or
data16
movsl
mov
xchg
dec
cmp
test
enter
jl
imul
or
arpl
test
lret
testl
fbstp
in
inc
mov
je
jae
jo
xlat
jb
jl
int
popf
dec
je
pop
mov
outsl
nop
sub
or
mov
shrl
int
mov
mov
cmc
ds
jle
sbb
mov
jno
add
cmpsb
mov
mov
mov
adc
lds
pshufw
jno
js
neg
int3
loop
in
repnz
bound
idivl
adc
sub
mov
cmp
inc
mov
repnz
ffree
aas
adc
mov
enter
pop
mov
icebp
daa
adcl
enter
mov
or
lods
sub
jg
jge
dec
aaa
inc
test
jne
push
mov
cmp
add
adc
adc
push
adc
push
dec
sahf
adc
in
into
sbb
mov
jmp
repz
dec
inc
jmp
fmull
jns
inc
xor
adcl
mov
sbb
arpl
pusha
jae
sub
pop
or
sub
testb
lret
or
sub
sbb
inc
js
fwait
sub
iret
je
push
cmp
in
pop
and
sub
ret
outsl
cmp
pop
fs
mov
aad
xor
dec
jg
jg
loop
and
sub
xchg
jg
push
rcrb
cli
ficomps
xchg
mov
push
inc
sbb
mov
mov
outsl
sub
xchg
dec
xchg
add
rcr
fsubl
jbe
leave
fiadds
shll
arpl
pop
and
push
icebp
adc
adc
mov
adc
xor
xor
fwait
loope
cmp
fstps
stos
sbbl
les
add
and
lods
out
cwtl
lret
and
fwait
arpl
push
orb
pop
out
push
pop
jns
test
mov
and
cmp
lea
and
pop
mov
jmp
mov
jle
jo
pop
loope
push
or
pop
inc
scas
or
rcr
or
mov
cltd
sub
je
add
in
fdivr
rcl
lcall
jo
das
mov
jecxz
jns
mov
imul
insb
int
test
adc
loopne
sub
hlt
cs
lods
dec
ret
or
mov
dec
xchg
jle
lahf
fnstcw
mov
shlb
mov
xchg
add
cmc
mov
push
loop
fdivs
cmp
test
repz
cmp
pop
repnz
ljmp
dec
adc
adc
push
ret
iret
xchg
pop
inc
cmp
loop
mov
mov
xchg
cmpsl
adc
and
sbb
cmp
frstor
inc
jmp
fsubr
push
dec
or
clc
cld
xchg
dec
push
popf
xchg
cltd
psllq
imul
xor
sbb
jne
rcll
jle
jo
cwtl
fwait
pop
mov
jg
inc
pop
mov
adc
aaa
sub
fsubs
cwtl
dec
psubsw
xchg
mov
pop
jae
mov
fcmovnbe
xchg
jg,pt
mov
mov
dec
and
out
mov
insl
and
gs
data16
outsl
adc
mov
mov
outsb
mov
mov
push
xor
lods
sub
sbb
popf
sub
push
out
orps
mov
addr16
dec
std
pop
push
dec
lods
out
pop
arpl
mov
cwtl
repnz
arpl
testl
mov
pop
pusha
sbb
out
mov
sub
push
mov
mov
jbe
add
das
push
outsb
repnz
nop
fwait
push
or
loope
sub
mov
pusha
cmp
add
incl
js
mov
sub
xchg
adc
notl
mov
sub
cld
test
out
stos
mov
or
cmpsb
push
cmp
jb
mov
pop
push
jo
pop
popf
or
xor
jmp
push
jnp
cli
out
add
stc
insb
lahf
fld
jno
js
xor
or
pusha
int3
cmpsb
nop
xchg
lea
in
shrb
sbb
aad
sub
xchg
mov
fbstp
daa
int
push
cmp
insb
cld
addr16
dec
xchg
sub
jg
scas
arpl
jbe
ja
call
lods
mov
test
or
fldl
lahf
mov
push
jge
inc
adc
data16
push
mov
push
push
push
and
call
daa
mov
push
mov
xchg
mov
jo
sbbb
ret
inc
popa
inc
xlat
int3
sub
fbstp
push
pop
popa
ds
adc
lret
aam
addr16
push
push
ds
arpl
lods
pop
sbb
xor
addb
push
add
sub
subl
xor
adc
inc
sub
and
rcpps
dec
inc
rolb
sub
mov
imul
cmp
lret
cmp
insb
test
mov
inc
mov
je
add
push
and
mov
call
jmp
and
push
push
loope
and
daa
popa
test
stc
sub
out
nop
es
mov
mov
idiv
cmp
add
inc
fadd
cmp
subb
test
out
lea
outsl
sbb
pushf
cld
loope
dec
adc
mov
sbb
cmp
dec
aad
sub
jbe
dec
push
jg
add
xchg
xchg
jp
shr
repnz
ret
add
imul
or
out
shlb
dec
mov
sub
daa
test
faddp
hlt
repz
popf
xlat
xchg
imul
dec
lret
pop
cmp
adc
mov
jmp
mov
mov
out
cmp
jno
pusha
cmpsb
cmp
adc
push
jl
inc
movsl
cli
test
mov
jne
mov
nop
dec
sub
push
dec
inc
pop
xlat
jl
imull
mov
xor
push
push
or
test
mov
jmp
jl
sub
push
or
subl
or
mov
pop
push
xchg
cmp
lcall
xor
or
xchg
stos
repz
mov
pop
dec
ror
out
cmp
sti
mov
lret
lcall
xchg
cmp
sbb
adc
call
inc
lcall
or
stos
es
mov
jmp
pop
cmp
or
jne
sub
push
sub
mov
push
inc
push
repz
cmp
dec
rcr
out
ds
inc
jge
mov
rcll
jl
outsb
add
sti
mov
lock
ret
pop
daa
iret
add
push
nop
loopne
repnz
push
dec
loope
xor
ja
lods
pop
push
jno
inc
lret
into
jne
adc
test
lret
movsl
push
imul
mov
dec
pop
mov
ret
pop
call
cli
leave
fwait
mov
cmpb
in
lock
xchg
inc
int
sti
push
xor
xor
mov
in
push
shll
inc
dec
pop
and
les
add
sti
push
adc
fldt
aam
and
cs
jae
xchg
inc
out
jmp
sbb
sarb
mov
movsl
adc
in
mov
daa
and
xor
sbb
inc
sbb
jb
adc
adc
pop
adc
pop
mov
adc
outsb
and
lds
mov
scas
and
in
aaa
ret
push
jg
lods
in
das
or
mov
push
mov
ficoms
jb
std
adc
fwait
mov
or
inc
mov
repz
fidivrs
xlat
sbb
xchg
or
xchg
stos
cmp
add
xor
and
push
aam
lret
xlat
jae
popa
fldenv
das
jg
adcl
or
ror
jmp
add
pushf
xchg
and
out
push
lahf
or
and
imul
sbb
add
dec
stos
shrl
f2xm1
das
shll
mov
dec
jp
ljmp
xchg
mov
mov
sub
or
jnp
jbe
jb
adc
inc
cmp
jno
mov
lds
xchg
adc
mov
mov
fidivrl
pop
aam
dec
test
andb
cmp
andb
mov
incb
and
mov
out
dec
or
adc
prefetcht0
push
test
std
push
fs
sbbl
test
ret
inc
mov
fildll
mov
cmp
sbb
fbstp
out
insb
push
cmp
cmp
pop
cs
pop
push
lcall
cli
movsl
dec
dec
das
iret
push
fadds
cmc
test
jg
add
clc
je
ficoms
or
adc
cmpsl
out
sub
test
or
jge
bnd
enter
adc
lcall
xor
sub
shl
sub
aam
popf
add
gs
xor
mov
add
pop
sub
pop
scas
fidivl
fmuls
adc
mov
lcall
jno
std
adc
adc
and
xor
lret
xchg
lock
xor
jge
mov
adc
xchg
mov
clc
sub
inc
add
mov
test
mov
gs
and
loopne
jnp
lea
cmc
xchg
test
cmp
rcr
cmpsl
test
mov
lock
pop
lret
jg
xor
inc
push
jmp
and
subb
jo
sbb
fldcw
enter
mov
das
pop
pop
insb
mov
xchg
cltd
shl
loop
rcrb
movsl
mov
mov
jno
jg
sbb
or
imul
scas
pop
je
subl
xchg
scas
adc
fildl
hlt
mov
insl
cltd
adc
xor
xchg
jb
mov
and
bound
mov
in
xchg
jecxz
je
enter
and
mov
popl
jae
jb
cmpsb
cs
mov
sbb
out
inc
xor
mov
dec
in
xchg
insb
mov
gs
mov
cwtl
cltd
int
call
stos
pop
jecxz
out
cwtl
add
insb
adc
pop
xchg
cmp
movsb
mov
sbb
dec
xlat
repz
hlt
subb
fmull
mov
ret
in
mov
sub
jle
dec
or
repz
aaa
loope
mov
lods
jg
fistpl
mov
inc
repz
out
test
lock
mov
fsubrl
sarl
leave
ss
mov
imul
outsl
cld
sub
das
out
push
addr16
aad
stc
jbe
in
and
mov
adc
lret
lods
mov
push
fcoms
lahf
mov
call
mov
mov
cmp
push
fimuls
loope
pop
ret
xchg
sahf
pop
lods
mov
jmp
leave
test
dec
cmp
xor
sub
fisubrs
inc
mov
xchg
sarb
and
inc
iret
adc
push
lret
sbb
sahf
mov
xlat
popf
sarb
ret
xchg
push
orl
dec
mov
add
shrl
sbb
dec
xchg
bound
int
in
cltd
shr
add
das
push
loopne
out
sbbb
iret
pusha
dec
jl
add
lods
mov
mov
popf
pop
les
ficompl
pop
jno
loope
mov
and
sahf
mov
and
testl
fsubrs
push
aam
xchg
and
jo
fwait
decb
mov
sbb
sti
jo
dec
das
not
es
xchg
pop
lea
daa
ss
add
imul
mov
into
push
mov
xchg
pop
ror
mov
xchg
mov
pop
pusha
int3
mov
jno
or
jns
scas
popf
test
ret
sub
mov
push
dec
insb
into
mov
dec
orb
cld
repnz
push
into
int3
rcrl
loop
ja
and
pop
xchg
and
dec
bsf
fisubl
jg
pop
jle
or
mov
das
stos
mov
xchg
daa
xchg
lahf
in
outsl
inc
pop
cmpsb
call
add
mov
xchg
frstpm(287
out
push
dec
arpl
cmpsl
lcall
shl
outsb
rcrl
scas
bound
cmpsl
xchg
push
hlt
shlb
dec
sub
mov
pop
jnp
inc
fsubr
xor
ret
inc
xchg
test
mov
mov
movsl
inc
jno
lea
call
push
mov
sub
jge
xchg
fmull
xchg
mov
and
lcall
sub
push
xchg
and
adc
mov
inc
icebp
cmp
mov
sarb
add
data16
outsl
outsb
cmp
les
cli
lock
mov
pop
mov
out
push
data16
mov
push
push
inc
dec
repnz
std
add
dec
ret
inc
scas
lods
jb
data16
outsb
pop
arpl
and
and
divl
out
mov
ret
sbb
push
or
inc
push
dec
fidivl
adc
and
push
xchg
aaa
mov
push
lcall
adc
dec
pop
dec
lea
aas
inc
jae
cs
enter
outsl
adc
in
xor
mov
sub
scas
hlt
fisttpll
xor
stc
fidivl
fisubs
daa
inc
mov
cs
dec
xchg
mov
sbb
arpl
sub
push
mov
ljmp
push
int
scas
aad
mov
cmpsb
mov
cmp
repnz
lds
fstpt
cltd
in
sub
enter
xorb
sarl
jmp
pop
cmp
mov
iret
adc
or
push
xchg
adc
sar
sbb
cmp
insl
popf
jne
aad
je
aaa
sbb
sub
and
xor
cmp
xorl
fsubl
pop
dec
pop
sbb
sbb
shl
fstps
push
les
cs
gs
divl
jbe
mov
jbe
je
mov
push
xorl
out
xchg
mov
sub
ficompl
out
inc
mov
mov
je
lods
mov
adc
fldenv
aad
divb
arpl
cmpsb
mov
icebp
push
cmp
gs
dec
or
sbb
sbb
inc
mov
add
lea
divb
mov
mov
mov
xchg
cmpsb
and
jg
imul
xchg
iret
xchg
sub
push
sahf
jp
int3
mov
pop
mov
lods
inc
cmp
sbb
shlb
loopne
pop
das
sbb
pop
std
push
addr16
sahf
in
pop
and
xor
push
test
or
push
test
dec
lcall
mov
jmp
adc
out
jo
jb
lock
arpl
mov
or
dec
sbb
mov
call
in
cmpsb
je
lds
popa
push
roll
jmp
aad
jno
int3
mov
and
pop
xlat
bound
adc
fsub
out
cmp
ret
sbb
sbb
ljmp
pop
mov
gs
xchg
stos
arpl
xor
push
insl
jae
adc
push
pop
stos
add
lret
outsl
scas
in
ja
rcl
loopne
pop
ds
scas
dec
jge
cld
xchg
and
test
cmpsl
xor
push
arpl
int
mov
xor
xchg
negl
cmc
imul
inc
fwait
pusha
mov
add
pusha
call
add
aaa
jmp
sub
cmp
jp
imul
sub
adcb
push
imulb
xor
imul
adc
in
jmp
mov
push
xor
inc
sub
sub
sbb
outsb
cmc
xchg
ficompl
lahf
aas
pop
jge
mov
in
ja,pn
xor
jae
leave
sub
sub
aas
push
dec
stc
hlt
mov
test
inc
mov
lock
movsb
fiaddl
out
test
mov
mov
adc
xor
jmp
test
xor
push
cmp
mov
pop
loop
and
push
xchg
xchg
cmpsb
xchg
or
pusha
lds
sub
xor
insl
imul
xor
jmp
and
adc
mov
cmpsl
pop
scas
cmp
add
push
mov
add
je
inc
pop
sbb
or
inc
lock
and
or
lret
lods
cmc
jge
nop
xor
mov
hlt
lods
dec
jecxz
xlat
sub
iret
inc
imull
dec
pop
in
or
and
xchg
push
adc
lea
cld
xchg
xor
mov
push
xchg
popf
cmp
jno
cmp
push
or
push
jp
mov
pop
imul
mov
inc
fdivrs
push
dec
push
pusha
mov
xor
mov
in
push
rcl
push
in
ret
mov
mov
out
in
into
jne
leave
push
xchg
repnz
cmp
ljmp
sub
repnz
inc
mov
hlt
ljmp
mov
in
adc
jp
dec
lods
aas
sbb
push
sbb
outsl
dec
xor
or
dec
xchg
sbb
aaa
add
cmp
lds
cmp
lea
movsl
cld
cmpsl
test
repnz
push
xor
jle
jmp
lods
aas
jl
fwait
cmp
fstpt
std
xor
xchg
add
mov
sub
loopne
mov
adc
mov
and
jns
inc
sbb
and
cmp
movsb
repnz
shrb
cmpsl
and
rorl
lock
out
xor
pop
and
clc
cmp
and
lods
cli
and
or
jb
adc
mov
sbb
and
movsb
mov
xor
mov
pop
dec
inc
cbtw
andb
fisubs
lret
je
imul
mov
or
jecxz
stos
cmp
jle
repz
mov
stos
push
pop
cmpsb
mov
jge
repnz
das
shl
xor
data16
inc
push
sub
jle
insb
mov
rcrb
scas
clc
push
mov
cmp
movsb
in
mov
rcll
mov
daa
test
xchg
lret
push
icebp
adc
jp
repnz
cld
inc
test
sub
je
mov
add
inc
xchg
jecxz
jmp
jg
jge
xchg
adc
lods
stos
insw
push
lds
ret
pop
mov
jle
xor
ficoml
mov
push
mov
push
mov
gs
push
push
popf
sub
cmp
insl
outsb
xor
outsl
xor
mov
or
stos
out
xchg
dec
push
insl
pop
stc
std
cwtl
lea
mov
mov
int3
sbbb
es
hlt
lods
and
arpl
lods
dec
sub
rcrl
mov
pop
cs
scas
and
adc
and
add
fwait
sub
aaa
hlt
stos
jecxz
mov
call
fsts
int
push
stos
cwtl
sti
movsb
lahf
pushf
inc
cwtl
pushf
and
addl
mov
xorl
sub
ret
movsb
sbb
pop
fistpll
ret
sbb
mov
add
sbb
pop
lcall
push
in
mov
mov
push
adc
ret
jg
adc
jmp
push
ret
loope
jns,pn
ret
xor
mov
push
cwtl
mov
ret
xchg
cmp
es
clc
dec
popf
cs
jle
adc
ret
movsl
sub
mov
jnp
jno
cld
jl
lahf
in
sbb
in
add
outsb
stc
mov
mov
cmp
mov
insl
movsb
inc
sbb
adc
lretw
mov
and
or
push
pop
adc
xor
adc
xorl
xor
mov
mov
adc
cmp
add
in
shll
std
xchg
in
and
cmp
rcrl
fsubrl
jg
sbb
test
xor
mov
adc
jecxz
andnps
and
movsl
push
test
xlat
xchg
xor
inc
xor
movl
add
scas
push
mov
bound
cmp
sub
cltd
mov
add
or
frstor
adc
xchg
in
fldcw
push
cmpsb
cmp
inc
popf
in
js
xlat
popf
das
shl
pop
mov
iret
cld
clc
jno
cmpsl
in
xchg
test
fildll
andl
sub
sbb
pop
cmp
mov
in
push
jmp
pop
loope
mov
jmp
xlat
mov
call
pop
sbb
cmp
lods
mov
sub
jne
js
movsb
pushf
lds
push
sub
adc
cmpsl
jg
out
inc
sbb
xorb
inc
je
mov
pop
mov
std
push
sub
sbb
iret
test
xchg
jmp
sbb
mov
int3
sbb
mov
cmp
lods
lea
cld
in
inc
mov
mov
xchg
xor
ds
call
les
aam
pop
imul
sbbl
andb
in
add
mov
rcrl
cmp
shr
push
dec
inc
cwtl
das
fmuls
dec
shr
pop
pop
pop
fstl
sbbb
pop
rorb
and
and
ja
popf
push
shrb
jne
adc
stc
clc
scas
outsl
repnz
add
pop
fs
jo
testl
push
popf
clc
lret
das
ficoms
push
cmp
sahf
scas
push
jne
push
in
and
in
std
in
pop
cmpsb
fsubr
sbb
push
fs
out
inc
rcr
leave
roll
sti
lahf
push
pusha
pushf
dec
in
cmc
js
cmp
pop
dec
push
cmpsb
lods
cmp
mov
imul
mov
pop
add
mov
mov
mov
shrl
jge
mov
pop
addb
and
sbb
jo
mov
imul
push
cmp
or
pop
fs
mov
imul
rclb
lahf
mov
adcl
mov
sub
sub
aad
stc
clc
lods
ret
jns
or
cli
jmp
shll
scas
push
fists
adc
push
sub
dec
add
aaa
jbe
xchg
mov
pop
push
rolb
clc
lret
mov
jp
fsubrs
jmp
xchg
ret
cmp
add
ljmp
xchg
out
loope
out
add
in
xor
clc
negl
mov
enter
mov
testb
popf
in
xchg
sahf
repnz
pop
jns
push
aas
cli
cltd
push
cmpsb
popf
ja
ficomps
jg
push
jg
adc
sub
jmp
push
dec
xchg
jle
mov
add
xchg
fsubrs
or
mov
and
push
cmp
pop
add
jmp
popf
addb
pushf
add
sbb
cs
incl
jmp
cmp
adc
jl
arpl
dec
nop
outsl
add
aam
loop
popa
xchg
bound
or
fistps
mov
mov
and
cltd
shl
insl
mov
test
push
cmp
and
xchg
dec
repnz
pop
mov
testb
mov
fldl
iret
dec
mov
test
bound
adc
rcrb
addr16
add
pop
mov
push
out
xor
andl
bound
addr16
dec
sub
inc
iret
imul
xchg
daa
or
loop
push
push
xchg
push
sbb
ljmp
aad
push
jb
shrl
xchg
sarl
pop
and
push
adc
sbb
mov
dec
je
loop
dec
dec
cmpsb
and
out
je
aad
cmp
daa
and
push
das
pushf
gs
cmp
scas
push
pop
fmuls
outsb
dec
cmp
mov
insb
adc
push
cltd
lret
test
sub
aaa
into
pop
sbb
stos
dec
mov
add
sub
les
lods
orb
and
jbe
mov
fildll
pop
mov
leave
push
imul
xorl
add
mov
fidivs
cmp
and
cmpsb
into
scas
sub
add
mov
push
cmp
pop
xor
data16
push
scas
sbb
or
or
mov
lret
insb
loope
fildll
push
mov
aaa
mov
fsubrl
sbb
and
stc
mov
or
repnz
bound
xor
mov
sub
xchg
inc
fidivl
sbb
sbb
aad
out
pop
push
cmp
aad
aaa
add
xchg
leave
xor
incl
jb
adcl
rolb
fs
pop
lods
lods
sub
sub
in
mov
push
pop
lea
mov
and
lock
aam
outsl
in
add
arpl
jns
or
sub
mov
lcall
and
je
int3
dec
imul
mov
fists
in
pop
and
pop
cmp
sbb
ja
add
push
aam
xchg
mov
mov
rcll
cs
fidivrs
xchg
lods
adc
aad
inc
mov
sbb
pop
xchg
pop
out
inc
or
test
inc
inc
ljmp
pop
xchg
xor
or
repz
or
push
sub
lods
ds
imul
cmp
aam
mov
adc
jb
popf
cs
inc
mov
outsb
mov
dec
adc
push
mov
sbb
cwtl
jmp
jmp
sbb
fcoml
and
push
xchg
inc
rcl
jge
fdivs
ljmp
outsb
ret
push
or
mov
cmp
add
xor
adc
repnz
sub
add
dec
test
ljmp
mov
das
insb
sarl
das
push
mov
sbb
xor
rcll
mov
int3
das
decl
mov
add
pop
push
jecxz
std
inc
sub
sub
inc
dec
stc
imulb
mov
in
dec
xchg
mov
jmp
stos
pop
repnz
into
mov
or
fwait
cld
stos
aaa
int
imul
mov
jbe
add
stos
jmp
orl
je
jne
pop
inc
insl
imul
arpl
cltd
sub
dec
punpckldq
gs
add
push
adc
pop
pop
mov
loopne
mov
sub
pop
ret
mov
in
pop
daa
paddusw
pushf
push
add
pop
addr16
loop
push
lret
in
cmp
test
xchg
hlt
std
jmp
outsb
leave
pushf
cmp
mov
and
mov
shlb
dec
push
adc
popa
sti
nop
cmp
das
movsb
daa
xchg
push
inc
xor
and
imull
out
arpl
push
xor
lods
lahf
mov
mov
xor
xchg
test
push
nop
das
adc
loop
push
aaa
lods
stc
mov
imul
loopne
test
pop
jp
sahf
in
mov
test
pusha
add
pop
inc
shrb
xor
lcall
aaa
mov
decb
sub
or
pop
mov
int
fdivrl
jecxz
xor
icebp
cs
push
in
push
mov
dec
add
push
adcb
and
pop
and
xchg
sbb
stos
cmp
aas
loope
in
add
movb
xchg
adc
adc
xor
mov
and
gs
inc
dec
ret
jo
pop
pop
call
fnstenv
sti
dec
xchg
shl
stos
mov
pop
pushf
hlt
or
ret
inc
pop
test
jne
and
mov
repnz
mov
jmp
push
mov
mov
or
flds
xchg
nop
cmp
adc
stos
ss
icebp
jle
mov
lock
pop
fidivrs
stos
pop
inc
xchg
mov
xchg
jge
add
clc
loop
movsl
mov
dec
arpl
std
jmp
mov
sbb
jns
in
sbb
sbb
std
dec
dec
xchg
scas
dec
imul
je
push
into
inc
push
orl
imul
sub
std
push
daa
aas
sub
push
fisubl
test
and
lret
push
xchg
or
adc
ret
fistpl
leave
std
pop
not
sbb
add
into
mov
cltd
fprem
lods
cltd
sbb
fistpll
fwait
mov
int3
jmp
mov
roll
sbb
xchg
push
cmp
xchg
out
pop
inc
add
test
insl
into
mov
push
insl
mov
in
xlat
push
push
sub
dec
and
mov
ffreep
imul
stos
jae
push
adc
xlat
in
clc
lds
rcrb
adc
push
xchg
pop
sub
mov
push
push
lahf
xor
push
mulb
and
cmpsb
add
add
xorb
movsb
sub
jae
pop
out
add
pop
adc
or
pop
push
test
cld
push
xor
cltd
inc
cmp
mov
dec
push
pusha
push
xor
mov
pushf
cli
inc
lea
repz
dec
cmpsb
xchg
nop
xor
mov
cmpsb
push
ret
dec
push
xor
xor
xchg
imul
sarl
jl
scas
adc
pop
jae
insl
cmpb
push
sti
cmp
xor
js
out
xchg
push
mov
mov
jl
frstor
or
aam
inc
push
and
std
das
mov
aaa
mov
loope
lret
mov
jg
add
and
push
orl
mov
pusha
inc
sbb
data16
mov
inc
je
sub
mov
mov
mov
stc
pop
shl
gs
stc
dec
jmp
repz
lods
dec
push
push
nop
jge
loopne
mov
hlt
push
ret
outsb
or
and
add
ljmp
cmp
out
sbb
ret
sbb
enter
les
dec
mov
es
pushf
mov
rcrb
dec
lret
inc
fsts
mov
loope
add
mov
and
mov
sub
xchg
mov
mov
lds
aad
out
cmp
lods
test
mov
mov
jnp
sub
mov
gs
scas
out
sub
cmp
insb
cwtl
adc
mov
push
jecxz
cmp
pop
and
mov
add
jge
repnz
and
mov
lcall
jo
push
call
fistpl
cmp
pop
inc
pop
fbld
sbb
mov
pop
test
pop
scas
cmc
xchg
pop
sbb
imul
dec
push
mov
jmp
sub
stos
incl
jnp
or
in
push
sarl
push
sbb
insb
pop
call
mov
into
mov
daa
das
adc
push
dec
mov
aaa
popa
fs
inc
pop
frstor
cmp
jg
xor
in
xchg
aaa
cmp
dec
mov
jbe
roll
leave
icebp
fsts
add
add
xor
or
sbb
fsts
pop
sbb
lret
adc
testl
add
mov
sub
subl
daa
mov
push
xchg
jge
xchg
ljmp
cmp
mov
hlt
and
add
inc
int
sbb
shll
shl
lds
push
lds
pop
pop
stos
adcl
psadbw
pop
sbb
insl
rolb
inc
pop
xchg
lds
fsub
jmp
dec
push
scas
loope
dec
ret
icebp
jge
jmp
stos
enter
xor
popf
cwtl
ss
popf
sbb
fnstcw
push
lea
pop
notl
cmp
push
fstps
test
js
push
jg
inc
xchg
inc
sub
pushf
mov
mov
movsl
push
sub
jo
repnz
push
add
sub
jg
jg
jle
mov
nop
lcall
xchg
adc
ds
and
jnp
inc
notl
jns
movsl
scas
mov
mov
cld
push
push
adc
stos
cmc
ret
sbb
ljmp
fists
in
rorl
inc
inc
fbstp
and
aad
lahf
je
push
fwait
in
push
dec
xlat
hlt
je
orl
mov
push
pop
ss
int
shlb
test
bound
add
xor
jbe
dec
sbb
cwtl
mov
mov
ficoms
pushf
ret
fistps
notl
adc
ds
inc
pop
sti
push
pushf
sub
xchg
adc
shll
enter
mov
and
cmp
inc
xor
or
nop
mov
leave
scas
sbb
cmp
ja
out
scas
in
push
pop
das
pop
out
mov
sbb
xchg
leave
lds
sbb
stc
mov
ret
int3
fmull
lahf
in
xor
cmp
dec
jmp
out
pop
stos
xor
or
dec
push
mov
cmp
ret
push
lods
pop
and
fnstsw
testl
push
fnstsw
cmp
insb
out
sub
jae
clc
cli
leave
ja
dec
push
rol
xchg
lock
lods
mov
aad
push
in
leave
cmp
aam
mov
fsqrt
pop
adc
xchg
pop
mov
inc
xor
mov
stos
fcmovnu
ficoms
popf
je
aam
adc
nop
mov
lret
lret
mov
or
stc
sbb
movsl
out
stos
push
lods
adc
daa
inc
into
sbbb
inc
cltd
adc
xor
xor
flds
fnstenv
dec
cs
mov
cmpsl
rorb
add
cmovns
mov
inc
in
mov
out
cmc
dec
das
pusha
and
andb
scas
stc
testl
adc
ljmp
das
test
shrl
clc
sbb
cltd
pop
jmp
lds
sar
loop
mov
pop
xchg
mov
pushf
loope
add
out
xor
xor
pop
addr16
add
pop
call
movntps
sub
mov
outsl
dec
lret
pop
xor
cwtl
sbb
imul
movsl
std
pop
gs
std
bound
shr
pop
mov
adc
mov
arpl
iret
roll
dec
loop
test
pop
fistpl
push
in
pop
fldcw
sub
loop
adc
or
out
in
inc
cltd
xchg
jge
inc
jge
ds
cmp
mov
mov
fdivrs
adc
ja
and
outsb
jecxz
cmp
scas
arpl
dec
mov
stc
mov
pop
pop
pop
fcomps
mov
movl
adc
ja
popl
js
aas
ret
test
or
rcll
dec
add
adc
int3
push
outsl
mov
sbb
cmp
xor
sbb
xor
adc
add
negb
stos
and
js
por
jge
dec
mov
sub
fnstcw
jb
roll
cmpsb
loop
hlt
dec
test
shl
push
test
in
dec
in
fcompl
pushf
arpl
sub
in
lods
fstpl
xor
push
pop
pop
jmp
cmp
popf
fisubl
inc
out
arpl
sub
addr16
mov
xchg
pop
repnz
and
shr
jecxz
xchg
xchg
fsubp
leave
dec
js
addr16
and
xor
jno
fiadds
mov
and
sahf
sbb
leave
mov
mov
mov
add
test
dec
inc
into
out
add
push
jl
sti
ja
push
dec
push
push
xchg
mov
gs
cmp
push
adc
into
adc
scas
fidivrl
lods
loopne
xchg
or
push
ss
cli
mov
dec
cli
xorl
sahf
and
sub
sub
sahf
push
push
fiaddl
arpl
xchg
push
add
in
dec
jmp
mov
lods
jns
jecxz
mov
cmp
popf
sti
jnp
inc
icebp
xor
punpckhwd
fsubrl
aas
sub
shlb
dec
repz
sahf
into
push
lret
xchg
imul
pusha
and
bound
xchg
dec
into
jno
cld
dec
enter
sahf
repnz
pop
adcl
fcmovnu
xchg
popf
lock
sbb
lods
loopne
xor
idivb
or
sbb
pop
pop
jae
dec
cli
or
push
clc
nop
xchg
xchg
incb
clc
mov
fs
into
mov
sub
sub
push
and
dec
dec
rorl
addr16
cmc
push
mov
test
les
mov
movsl
ret
rorb
cmp
xchg
mov
mov
mov
cmc
push
fisubrl
add
cmp
ror
int3
jg
sub
jb
cmp
cmp
mov
cwtl
mov
jle
loopne
inc
sbb
xchg
mov
pop
sbb
push
push
sub
jecxz
mov
and
das
xchg
sbb
dec
add
pop
in
pop
mov
in
idivl
mov
subl
fcoms
aad
fcomp
ffree
ret
lret
mov
call
jle
and
dec
sbb
and
push
pushf
mov
iret
adc
inc
inc
pushl
test
adc
or
push
push
pushf
add
movsb
les
mov
xchg
popa
sub
dec
sub
incb
or
xchg
mov
mov
xchg
fadds
leave
or
sub
loope
sbb
cmp
cmp
cmp
outsb
addb
leave
dec
lods
xor
arpl
pop
inc
rclb
sub
xor
lock
lret
ljmp
or
inc
pop
std
push
mov
in
xor
xor
jae
xlat
jo
add
inc
subb
xor
mov
mov
aad
cmp
jmp
xchg
jecxz
js
xor
fmuls
mov
in
test
push
or
ja
ljmp
xchg
adc
es
popf
xchg
cltd
bound
loopne
ds
mov
cltd
orb
jbe
mov
xchg
cmp
repz
sbb
sbb
mov
gs
sti
ficomps
dec
mov
std
jmp
pop
ret
xor
mov
sbb
or
xchg
adc
adc
lock
pop
inc
pop
xchg
icebp
lcall
insl
inc
ja
gs
cmp
jg
mov
lods
cmp
enter
movsb
mov
sub
jg
xchg
aam
ret
rclb
popa
cmp
mulb
add
test
xchg
pop
push
lcall
xlat
dec
and
ds
mov
test
sbb
push
pusha
pop
sbb
cld
jle
push
lds
or
inc
dec
rolb
mov
idiv
dec
inc
gs
std
mov
lret
mov
repz
sub
push
xor
imul
xor
aam
ja
sbb
ljmp
popf
lods
sarb
sub
aaa
movsl
or
mov
lcall
add
lea
sub
std
mov
sbb
inc
mov
inc
jnp
and
sbb
mov
int3
rclb
nop
sub
hlt
pop
push
sahf
jmp
sbb
fnstsw
popf
data16
leave
stos
popf
loope
sub
push
pop
ljmp
cmpsl
adc
sbb
jbe
sub
cmp
xor
scas
mov
and
xchg
xchg
enter
add
sub
cwtl
push
mov
lcall
nop
xchg
ja
adcb
or
ror
scas
aaa
into
and
loope
push
adc
mov
sub
pop
jg
and
mov
dec
mov
jns
mov
outsb
enter
mulb
lgs
out
add
or
inc
cmp
lods
loop
or
jb
fists
das
push
mov
popa
in
scas
bound
int
repz
jmp
xchg
lods
imul
xchg
repnz
fsubr
push
out
icebp
fnstenv
add
fdivrl
arpl
mov
bound
mov
in
push
fxam
mov
fcomps
loop
es
cwtl
add
pop
test
arpl
push
mov
or
sahf
adc
insb
loop
fldl
jg
cld
xchg
stos
das
or
or
leave
inc
cmpb
xchg
jne
adc
jle
push
bound
fsubrl
imul
sarb
mov
int
cmp
popa
outsl
fimull
lahf
xor
sub
je
movsb
mov
call
test
pusha
xor
sar
mov
push
orb
ljmp
arpl
push
or
out
loope
fsubl
shrb
ja
xchg
imul
lock
orb
out
mov
test
adc
pop
push
jbe
mov
or
outsl
push
xor
cmp
bound
js
xor
repnz
lea
in
sub
xchg
cltd
push
adc
mov
fidivl
mov
cmc
loop
xchg
push
jecxz
xchg
dec
inc
and
and
cld
dec
jb
cwtl
sti
mov
iret
stos
ds
ret
arpl
push
jb
stc
jne
in
adc
mov
push
imul
je
sub
xchg
mov
addb
mov
xor
mov
pop
pop
rcll
push
or
cmc
fsubrl
ficompl
ds
incb
jge
idiv
je
fistps
jns
imul
sub
adc
xor
mov
mov
or
pop
add
lcall
loopne
mov
shll
cwtl
and
pop
inc
xchg
jmp
mov
in
cmpsb
cmp
inc
rol
test
jae
pushf
sub
and
jl
jecxz
pop
mov
push
adc
xchg
out
ret
addl
shrb
jle
std
popf
mov
dec
push
cs
inc
test
arpl
mov
or
cli
pop
shll
cld
enter
inc
shl
ss
mov
xchg
or
cmp
cmc
xlat
inc
sbb
inc
pop
xchg
pop
pop
stos
mov
or
das
inc
sbb
sbb
into
xchg
inc
cmp
xchg
inc
push
stos
pushf
fildll
mov
in
pop
xor
ljmp
in
insl
sbb
mov
jno
sbb
and
xor
lret
iret
pop
inc
fcmovnbe
lods
push
push
fstpl
xchg
or
mov
push
pop
vphaddubw
mov
xchg
test
cmp
xor
fcompl
rcr
mov
and
push
jmp
xchg
shlb
push
xchg
sti
test
and
push
fucom
xchg
incb
jne
sub
xchg
adc
mov
jae
je
or
out
xchg
jb
outsl
pushf
pop
xchg
fidivs
pop
jmp
mov
cmp
loopne
repz
fcomps
imul
xchg
sub
lds
aam
das
jecxz
and
xor
sbb
mov
add
repz
pop
frstor
ror
lock
xlat
or
jecxz
xchg
or
movsl
push
adc
and
add
call
dec
xchg
dec
xor
xchg
cmp
push
out
inc
hlt
push
jle
sub
xchg
dec
ss
out
jge
sbb
in
aad
xor
mov
jno
pop
or
mov
xchg
jl
das
jne
inc
jp
pop
sub
pushf
push
mov
insb
insl
stos
pusha
and
cltd
call
scas
int
add
push
jbe
inc
push
mov
ret
cld
divb
jp
and
notl
sbb
and
pop
insb
cmp
jp
in
movsb
cmp
fadds
outsb
jne
xor
cwtl
mov
add
push
pop
clc
jns
adc
in
popa
pusha
gs
push
lds
and
mov
lods
je
ljmp
mov
xor
in
cwtl
subb
xchg
or
xchg
sbb
daa
popf
addr16
mov
jo
adc
fidivs
in
in
jg
arpl
xor
aas
mov
add
out
push
cmc
pop
pop
test
dec
sbb
popa
mov
mov
add
int3
call
out
push
bound
pop
xor
dec
aas
or
stos
xchg
pop
imul
xor
cs
mov
xchg
mov
mov
inc
add
out
xor
mov
out
in
push
pop
push
aaa
loope
fbstp
sub
mov
pop
mov
out
cmp
sub
hlt
pop
mov
pop
pop
mov
jp
out
and
shll
enter
inc
std
ja
loop
cli
mov
addl
loope
xor
loopne
jns
xchg
dec
and
inc
jo
sbb
push
mov
add
jmp
nop
loope
rorb
xchg
aam
imulb
mov
sbb
ffree
movsb
inc
je
push
lea
lea
fs
mov
repnz
jp
xor
mov
mov
jb
mov
mov
fsubl
add
iret
sahf
push
ss
mov
ja
nop
outsl
mov
pop
and
repz
jge
mov
rcrb
les
out
cmc
sbb
sub
jecxz
pop
test
lds
imul
mov
loop
insb
xchg
mov
mov
dec
clc
fldt
adc
es
stos
xchg
aaa
ret
inc
cmp
mov
lea
push
add
mov
cmp
sbb
push
popa
mov
out
pop
popf
arpl
popf
push
inc
das
nop
add
mov
adc
adc
pop
idivb
into
nopl
xor
cs
fadd
lcall
shll
movsb
arpl
stos
pop
scas
mov
xlat
sbbb
pushf
xor
and
lds
and
xchg
jno
mov
adc
inc
enter
add
mov
loope
push
je
pop
into
clc
lcall
aaa
je
popa
cmp
cmpsb
rorb
aad
inc
mov
out
lods
mov
and
jae
mov
mov
cmp
jle
sahf
push
mov
test
sbb
mov
int
adc
and
adc
popa
push
in
add
stc
mov
jne
aad
jp
shlb
sbb
adc
aad
in
xor
andb
mov
or
lock
cmp
lods
mov
cld
inc
cmp
hlt
aam
sbb
scas
ret
inc
aad
add
fimull
jo
jp
pop
outsl
jno
xlat
inc
mov
cmp
mov
bound
sahf
mov
mov
sbb
jg
loopne
mov
daa
add
xor
adc
add
decb
fldenv
in
arpl
fstpt
call
xlat
pushf
sbb
xlat
push
clc
mulb
sarl
jge
mov
mov
aas
je
push
dec
addl
pop
fs
les
mov
sti
and
dec
dec
mov
in
shll
inc
cmp
pop
xchg
adc
fwait
call
pop
pop
jle
jg
sub
push
stos
orl
repnz
std
scas
adc
jmp
pop
and
adc
cmpsl
push
cmp
andb
mov
xchg
das
mov
cli
movsb
call
repnz
sub
add
xchg
fldcw
imulb
out
and
pop
loope
jns
repz
jle
icebp
mov
mov
rol
dec
sar
lret
mov
int3
cltd
push
mov
xchg
mov
cmp
sub
leave
mov
in
xchg
mov
iret
nop
or
pusha
les
xor
cmpsb
mov
pusha
or
sbbb
push
mov
or
mov
stos
fstps
out
mov
dec
test
xchg
test
lds
xorb
push
jns
or
push
ja
sub
ljmp
push
fucomp
pop
test
cmpsl
mov
lock
push
movsb
std
aaa
adcl
fcoml
or
ja
cmp
shrb
enter
fimull
std
mov
lcall
inc
mov
lcall
add
or
faddl
cld
movsb
jae
in
shrb
mov
mov
int
add
test
std
inc
mov
mov
scas
in
out
scas
or
sbb
cmpsb
jns
out
je
dec
in
add
fmull
cld
push
mov
imul
add
mov
scas
lods
push
stos
in
push
fsubrl
sub
rol
mov
popa
push
decl
clc
data16
sub
and
add
shrb
or
daa
in
sub
inc
loop
pop
push
mov
mov
xchg
push
ret
stos
jge
cmp
ret
cmpsb
push
insl
mov
mov
mov
cmc
out
push
stc
push
and
lret
cmp
mov
inc
mov
scas
fdivrs
repz
arpl
frstor
js
ds
aaa
pop
orl
inc
pusha
mov
push
add
and
cmp
mov
pop
test
fldenv
ljmp
ljmp
dec
orb
adc
inc
pop
dec
mov
aas
pop
ret
or
and
push
sub
icebp
xor
in
inc
xchg
cld
dec
xchg
loope,pn
out
add
decl
xchg
cmp
adcb
fisttpl
jo
scas
testb
ds
adc
cltd
shr
fisubrs
push
in
dec
cmp
push
add
xor
xor
mov
hlt
or
lcall
cmp
ja
scas
push
mov
adc
jb
or
mov
or
mov
pop
insb
and
xchg
cmp
jmp
add
sub
fmuls
sbb
cmpsl
and
int
adc
stc
push
insl
hlt
fidivs
xchg
push
mov
and
mov
mov
nop
sbb
mov
rcl
sar
jae
cltd
fisttpll
sbb
inc
mov
mov
push
cmp
jp
dec
bound
mov
xchg
jbe
add
out
jl
pop
dec
sarl
ss
cltd
test
xchg
mov
adc
hlt
push
mov
daa
push
sbb
repz
stc
lcall
sar
inc
xor
out
sub
dec
add
hlt
lds
sbbl
jecxz
add
cmpsl
or
xchg
cmc
sub
and
push
ds
int3
in
test
fmuls
mov
insl
push
xchg
mov
mov
movsb
hlt
inc
xor
fidivrl
pop
dec
inc
repz
fnstsw
sbb
dec
pop
lret
pop
int3
fwait
and
push
sub
add
xchg
adc
mov
push
dec
xlat
fmuls
xor
shrb
cmp
imul
add
lods
mov
push
lcall
sub
orl
outsb
sub
imulb
sbb
xchg
popf
inc
pop
mov
sbb
cs
pop
shl
and
pop
cmc
push
sbb
pop
jg
mov
xor
dec
mov
out
and
adc
cmpsb
mov
xor
es
dec
sahf
das
filds
cmp
dec
mov
sub
test
xchg
int3
dec
cmp
in
push
inc
call
dec
and
sahf
or
call
dec
mov
movsl
add
inc
rorb
shlb
fldcw
jle
pop
jmp
fidivrs
cmp
inc
inc
jp
mov
dec
lret
es
addr16
aad
xchg
jne
clc
gs
add
sti
cmp
pop
arpl
and
mov
fsubl
aaa
loopne
pop
add
clc
push
jbe
pop
and
fsubr
pop
test
push
ret
fstp
dec
rcll
pop
jnp
arpl
jno
clc
adc
and
mov
ret
insl
aad
stc
jae
push
mov
mov
pop
dec
andl
jnp
test
inc
jae
mov
xlat
push
aas
jns
or
xlat
icebp
outsl
xchg
xlat
test
dec
imul
mov
mov
sbb
js
cs
mov
dec
push
push
dec
push
mov
sbb
movsl
data16
mov
sbb
orb
ja
xor
loop
jmp
test
sub
lahf
jecxz
and
mov
pushw
mov
test
fidivl
pop
popa
mov
sub
call
test
hlt
in
push
flds
xor
leave
sarb
cmp
lret
sti
xlat
push
mov
movsb
jle
shl
cltd
inc
mov
or
mov
aam
out
pop
aam
out
cmp
push
clc
data16
dec
mov
into
ja
int
mov
std
mov
cmpsl
mov
stos
lcall
cmc
push
rcl
mov
add
sbb
mov
xor
cmp
mov
dec
int3
pop
push
test
mov
jg
inc
nop
lret
mov
jg
lock
mov
orb
fstpl
das
jbe
dec
icebp
mov
pop
dec
lcall
cwtl
and
mov
test
insb
inc
int
or
aam
pop
insl
xchg
pop
in
mov
das
add
dec
sbb
pop
pop
into
pusha
mov
in
cmp
test
sbb
xchg
mov
and
inc
cmp
mov
sbb
aam
push
inc
adc
sub
and
imul
sub
cmp
mov
in
mov
loope
loop
mov
mov
mov
mov
sub
into
pop
sti
mov
push
fiaddl
cli
sarb
dec
pop
mov
les
es
dec
jg
cmp
sbb
stos
dec
cmc
orb
cltd
rcrl
pop
xchg
into
lcall
push
aam
inc
dec
adc
or
mov
adc
sbbl
mov
pop
xchg
or
out
cltd
popf
aad
or
sub
inc
ds
push
mov
js
xor
pop
fldcw
pop
je
sbb
insb
subl
sub
cmp
sub
pop
xor
cld
adc
jge
das
inc
in
mov
xchg
cmp
push
fsubrs
xor
outsl
inc
in
cmp
push
pop
jp
cmpsb
add
mov
out
inc
sti
xor
mov
mov
lods
and
aam
dec
shll
jae
or
aaa
push
testb
test
or
test
loopne
push
ljmp
std
mov
jo
insb
or
lods
jae
jmp
sbb
sti
xor
out
test
lret
cmp
xchg
ret
cltd
in
dec
stos
jnp
int
push
cmp
or
push
pop
cmp
jle
dec
icebp
xor
and
lods
dec
push
or
sahf
jge
inc
fdivs
sub
int
cmp
or
sub
std
shll
sbb
aaa
lock
sarb
mov
add
mov
mov
pop
mov
cld
shll
stc
or
jge
jae
lods
push
inc
cs
lods
cmp
test
mov
jle
in
in
imul
adc
jle
pushf
mov
lods
mov
cmp
adc
xor
js
std
fidivs
add
jo
sub
push
sbb
jecxz
clc
out
ds
xor
pushf
mov
and
in
jle
or
sbb
sub
add
or
sbbb
mov
in
orb
or
sti
pushf
cmp
inc
fcomi
or
fsqrt
dec
fwait
xchg
xchg
pop
xlat
popa
adc
mov
fwait
jl
stos
out
sahf
xchg
push
stos
adc
push
in
or
je
add
cs
dec
into
repz
xor
incb
shrd
xor
xor
fstpl
sub
pop
push
jge
and
test
inc
adcl
sub
mov
fimull
es
lret
in
dec
movsl
addr16
jne
rcrb
xor
movsb
mov
in
fs
popa
pusha
fisubl
cltd
aam
aad
pushf
das
div
xchg
aad
pop
sahf
inc
xor
int3
cmp
xchg
out
iret
sarb
push
into
fs
ss
jno
xor
xchg
popf
xor
and
das
pop
in
inc
sbb
or
lret
sub
into
arpl
and
cli
popf
inc
es
mov
arpl
dec
shr
or
and
sub
dec
pop
push
ficomps
das
mov
hlt
pop
sbb
push
bound
mov
pushf
mov
ret
mov
adc
mov
pop
pop
out
lahf
xor
mov
lahf
fidivl
out
into
fwait
ror
sahf
sbb
push
repnz
mov
pop
icebp
jno
xor
xchg
ja
shr
xorl
stc
xor
pushf
std
cmc
dec
insb
mov
jecxz
sub
int
push
cmp
push
jle
cld
stc
sahf
fildll
in
les
mov
and
es
mov
data16
imul
out
xchg
jae
js
pop
adc
std
dec
adc
pusha
sbb
ljmp
mov
test
ss
cld
and
push
incb
pushf
xor
pop
mov
xlat
push
insb
or
rclb
push
mov
cli
or
add
xor
in
lret
sti
ret
loope
mov
enter
mov
addr16
sub
jne
gs
test
jne
jnp
cmc
pop
mov
dec
mov
stc
dec
jo
push
fistl
add
adc
jne
jno
aaa
or
out
cmpsl
add
ss
aad
std
sub
in
fmuls
in
pop
leave
repz
das
pusha
mov
pop
dec
das
dec
or
sbbl
pop
inc
ret
shrb
stc
int
xchg
outsb
and
inc
call
mov
es
mov
outsl
dec
daa
xchg
lds
add
gs
lock
mov
popa
push
push
sub
jb
push
scas
add
dec
ds
jno
rorl
sub
inc
push
rcl
mov
rol
and
aaa
cmp
scas
pusha
dec
sbb
jb
int
push
pop
cs
cmp
mov
jb
popf
cli
into
jmp
sub
and
pusha
lods
sbb
and
lea
xchg
inc
loop
sti
xchg
les
sub
in
clc
pop
xchg
mov
sbb
repnz
xor
movsb
xor
xchg
test
stc
ret
mov
pop
dec
or
pop
xor
lds
jbe
jns
idiv
lahf
mov
ja
iret
test
xchg
dec
pusha
dec
clc
sbb
out
add
cli
add
xchg
outsl
les
mov
jne
add
addb
insb
fadds
inc
add
pop
xlat
mov
xchg
or
push
sahf
fcoms
dec
add
jp
inc
fidivl
sub
push
loopne
add
fsubrs
xlat
add
repz
idiv
mov
adc
scas
and
dec
cltd
jmp
iret
cmpsl
mov
push
in
sbbl
dec
nop
adc
add
mov
jno
adc
loope
in
shl
movsb
icebp
inc
mov
inc
push
rcrl
sub
cmpl
std
ds
push
xchg
jnp
xchg
mov
xchg
inc
pop
and
jg
add
xchg
pop
cs
jmp
mov
inc
out
cmp
in
popl
cmp
mov
fcoms
ljmp
mov
xchg
repnz
push
pop
mov
add
hlt
pushf
ds
mov
adc
and
or
dec
out
sub
testb
pusha
js
dec
inc
fwait
scas
shll
jnp
sbb
repz
or
rcrl
int
mov
jns
lcall
sub
mov
sbb
shrb
das
outsb
jo
jge
push
popf
or
stos
cltd
popa
in
and
mov
arpl
dec
cmc
lret
dec
inc
jmp
mov
adc
mov
push
clc
out
lea
ds
jmp
aad
ljmp
jmp
hlt
pmuludq
rsqrtps
fsubrs
sbb
sub
rcr
sub
pop
std
stos
xlat
lret
data16
xor
cmp
addr16
sahf
xor
dec
inc
mov
mov
lret
adc
and
data16
jb
rorl
jae
pop
mov
xchg
outsl
daa
xor
xor
lahf
xor
into
shl
aam
test
push
movl
sub
pushf
fisubrl
jo
mov
ss
out
fldenv
aas
add
andb
sbb
jg
dec
xor
loop
jle
and
dec
mov
aaa
enter
cli
sbb
xor
add
adc
pop
cmp
sub
mov
xchg
aad
mov
inc
adc
daa
sbb
sbb
scas
sarb
sbb
adc
mov
scas
jge
inc
dec
fdivrs
or
mov
pop
sub
jmp
push
inc
cmc
psadbw
and
movsb
pop
outsl
xor
out
ljmp
es
loopne
shrl
cld
xchg
arpl
xor
add
push
jp
adc
pop
iret
das
iret
xchg
push
scas
jmp
cmp
mov
idivb
negl
jns
pop
data16
icebp
mov
cmp
cwtl
jo
xchg
jnp
pushf
aas
add
dec
ret
jo
mov
and
int3
repnz
cmp
cltd
xor
popf
aad
sub
sbb
mov
andb
test
dec
cmp
jmp
lcall
mov
adc
jge
repnz
das
ljmp
sbb
test
sub
push
pop
pop
cli
and
call
lods
or
pushl
adc
dec
xchg
jb
xchg
pop
xor
cmpsl
test
mov
push
addb
jmp
stos
repnz
cmp
adc
inc
imul
adc
ss
push
xchg
mov
xor
int3
push
je
loope
sbb
daa
scas
pop
cltd
xchg
push
xor
dec
mov
and
outsl
or
xor
or
dec
jns
divb
inc
jl
or
xor
xchg
xchg
push
xor
mov
daa
dec
popa
outsl
fldcw
push
jo
out
lods
enter
xadd
jns
sbb
cld
pop
nop
in
push
dec
mov
insb
adc
dec
mov
sub
inc
mov
cmp
mov
fsubrl
inc
mov
add
mov
mov
inc
mov
aad
pop
add
ja
ja
or
out
out
jb
out
mov
rclb
adcl
sbb
loopne
and
cmp
neg
push
fiadds
cmp
es
mov
lret
mov
lock
gs
ljmp
int
push
and
sbb
in
rclb
dec
data16
andl
aaa
pushf
out
movsl
sbb
in
insl
add
js
daa
pop
test
mov
dec
in
inc
cmpsl
out
shl
loopne
mov
cmc
mov
fisubs
pop
jno
cmp
add
lea
xchg
and
imul
jp
ljmp
xor
cmp
dec
inc
stc
out
sub
push
jae
stos
jecxz
addl
lods
scas
iret
ret
mov
jnp
adc
push
pushf
and
inc
adc
adc
add
mov
push
sbb
adc
inc
push
pop
dec
and
inc
push
mov
outsb
ds
roll
aam
cwtl
adc
mov
int3
xor
fmulp
push
and
push
dec
notb
or
mov
daa
daa
sub
cli
xchg
inc
ret
and
xor
mov
ja
mov
cmp
mov
mov
xchg
adc
sbb
dec
mov
cmp
jle
cmpsb
mov
dec
adc
cmpl
cld
lock
cmp
cmp
mov
push
xor
adc
rorb
in
pop
outsb
iret
mov
or
push
pushf
mov
jae
fidivrl
cmp
jmp
lods
dec
pop
dec
sbb
jge
fsub
std
dec
clc
mov
sub
insl
scas
pop
cltd
xor
fwait
add
and
pop
jno
mov
adc
or
lea
shl
aaa
cmp
stc
sub
ja
leave
pop
mov
jns
sub
dec
adc
xchg
pusha
pop
out
push
add
pop
nop
or
xor
cmpsl
dec
jle
rcl
sti
cmc
gs
adc
ja
mov
xchg
idivl
mov
or
fwait
decl
sub
jns
aad
aas
lds
jg
pushf
xchg
xchg
adc
pop
arpl
ljmp
cwtl
xor
xlat
inc
ljmp
jg
cs
jbe
ljmp
faddp
adcl
inc
xchg
lret
mov
loope
outsb
mov
dec
push
hlt
dec
mov
jecxz
data16
dec
sbb
jle
leave
pop
sub
dec
cmp
pushf
dec
cmp
pop
ret
push
xorl
aam
repnz
adc
jne
sbb
mov
iret
push
xor
mov
lock
jg
dec
int
iret
push
sbb
mov
rolb
mov
fimull
les
testb
mov
pop
mov
push
nop
jmp
inc
mov
xchg
add
mov
sub
mov
push
pop
stc
int3
notl
jbe
xchg
xchg
jne
dec
test
jle
xchg
stc
mov
mov
fimuls
cltd
xor
ds
insl
xchg
push
in
sub
pop
and
push
je
pusha
add
or
pop
adc
sti
loopne
inc
data16
daa
push
lret
out
adc
sbb
pop
out
pusha
call
rol
popf
add
or
cli
addr16
fdivs
pop
and
push
lcall
cmpsb
jb
sbb
xor
inc
aaa
add
xchg
cmp
lds
adcl
push
pop
jg
sbb
lods
xchg
rcl
outsb
test
push
push
mov
inc
imul
stc
xchg
jp
inc
cs
mov
fldl
popa
cmp
les
roll
insb
xchg
jl
jnp
mov
lock
xorb
ljmp
push
mov
cmpsb
jo
dec
and
cli
or
fists
gs
inc
and
andb
push
xor
repnz
jae
dec
mov
push
lea
and
mov
outsl
add
into
jle
add
aad
sub
cmpsl
rcrb
shl
pusha
mov
std
popa
test
stos
loope
dec
push
std
jbe
push
out
mov
mov
mov
or
mov
daa
lock
sub
paddw
fwait
pop
mov
mov
mov
mov
clc
fstps
add
push
bound
lods
outsb
ja
or
dec
mov
maskmovq
idivl
in
add
push
xchg
sbb
xchg
enter
inc
sub
xchg
dec
mov
cltd
mov
mov
and
cs
lret
jae
xchg
pop
xchg
xchg
bound
fcoms
daa
out
outsw
arpl
add
mov
inc
or
or
jp
cmpsl
jno
imul
mov
aaa
insb
or
pushf
dec
insb
pop
sbb
repz
repz
lret
bound
stos
adc
pusha
ljmp
insl
test
jg
add
addb
sti
out
xor
in
flds
addb
pop
notb
dec
cwtl
ja
mov
mov
daa
jg
std
fwait
push
insb
mov
mov
pop
es
push
aaa
outsl
cs
dec
inc
jmp
xlat
data16
xchg
daa
ficoms
fnstcw
std
inc
pop
jae
jle
add
movsb
in
mov
lods
cwtl
adc
add
push
sbb
adc
mov
jb
xchg
testb
xlat
call
inc
xor
ss
pop
decl
or
jne
adc
negl
ss
test
cmpsl
adc
sub
enter
or
mov
icebp
sarb
es
imul
push
int3
push
into
mov
int3
xlat
repz
fnstenv
aas
idivb
and
out
aas
push
adcl
in
mov
cli
add
jle
cld
aad
nop
xor
adc
sub
adc
lds
inc
inc
orl
cmp
fstps
mov
adc
and
mov
sbb
inc
imul
push
nop
inc
mov
mov
shlb
push
push
xor
ljmp
lret
sub
ret
inc
in
mov
or
ret
and
pop
cltd
mov
pop
insl
lock
fs
sbb
jb
xor
sbb
les
inc
iret
fwait
int3
sti
jecxz
int
rcll
loopne
leave
pop
and
sbb
xor
cs
mov
mov
sti
cmp
adc
cmovs
insb
and
leave
adc
pop
mov
fwait
cwtl
stos
arpl
push
das
adc
stc
push
pop
pop
jns
ror
sbb
mov
inc
je
leave
lahf
push
pop
ja
fistpl
pop
xchg
adc
mov
jns
cmpsl
adc
sub
sub
inc
push
push
add
ljmp
inc
mov
loopne
sub
int3
rcrb
inc
adc
js
rol
jo
rcrb
mov
into
ds
enter
pop
pop
je
insl
das
xchg
add
inc
pushf
dec
mov
pop
lcall
mov
lods
pop
xorb
lea
xor
scas
mov
out
xor
and
adc
arpl
scas
mov
pop
lods
dec
lods
stos
repz
insb
pop
imul
pop
insl
pop
flds
movsl
sub
stc
mov
mov
pop
adc
and
in
out
mov
jno
sub
fdivs
cmp
mov
pop
sub
popa
fidivl
ror
dec
lahf
xor
aas
fld
sbb
in
mov
in
push
sub
int3
movsb
call
fwait
xor
jmp
and
pop
icebp
ret
outsl
dec
cmp
jb
popa
push
ret
out
pop
add
notb
push
cmp
mov
std
stos
imul
inc
pop
repnz
sbb
iret
push
dec
push
loope
cs
cmc
push
sbbl
cmp
lcall
in
test
cmp
fcmove
mov
incl
rolb
mov
xor
xor
test
xchg
push
aaa
or
sbb
sub
cmpsl
stos
mov
xor
movsl
das
add
rcrb
or
testb
pushf
xor
stos
fsubr
cs
mov
jecxz
push
and
sbb
xchg
popa
inc
pop
aaa
lahf
xchg
fbstp
pop
ljmp
mov
and
fisttps
push
repnz
je
insl
arpl
or
testl
add
ds
ss
fcompl
icebp
out
inc
sarl
and
insl
add
jae
pop
push
lret
stos
bound
loop
es
mov
jo
jb
popa
insb
mov
stos
dec
iret
repz
inc
mov
pop
mov
leave
insb
jnp
dec
dec
sub
aas
fs
fldenv
in
mov
xor
insb
or
aas
popf
sub
test
xor
cld
sahf
nop
mov
mov
inc
and
pop
mov
cmc
sbb
mull
stos
jae
jge
and
or
pop
jnp
loop
scas
sbb
rorl
cmp
movsb
add
cmp
mov
dec
jmp
nop
or
push
pop
ljmp
and
mov
inc
daa
cmpsb
jb
push
mov
enter
lea
pop
jns
ljmp
xor
shll
scas
mov
xor
or
push
popa
cld
fimull
mov
dec
outsb
xchg
or
sti
jp
scas
fldt
inc
push
adc
fidivl
push
pushf
sti
xchg
int
call
lcall
subl
loop
movsl
ljmp
lock
sbb
lods
push
jp
push
faddp
scas
insl
push
int
inc
call
mov
repnz
hlt
inc
lret
and
sti
xchg
jge
xchg
cli
push
or
out
jae
xchg
enter
mov
jmp
mov
cmp
rcrl
xchg
lock
int
movsb
fistl
xor
lret
outsb
add
sub
jmp
ljmp
mov
roll
sub
jl
insl
movsb
cltd
pop
out
xchg
push
fcmovu
push
in
pop
ss
sbb
lahf
insl
mov
mov
roll
popf
nop
stos
lret
dec
jg
jns
mov
pop
inc
push
enter
inc
sbb
iret
xchg
out
std
divl
add
out
lcall
lret
xchg
das
dec
sarl
mov
add
jns
mov
repnz
fwait
insl
cli
outsl
and
jbe
int
inc
mov
and
mov
adc
pusha
scas
out
or
mov
cmpxchg8b
push
xchg
pop
pop
lods
pop
shlb
in
inc
lahf
lret
jno
push
ljmp
push
mov
imul
cmp
mov
sbb
icebp
hlt
add
add
stc
int3
sbb
fistl
dec
cmp
jl
add
lahf
subl
andb
fsubrl
push
das
fistl
cli
and
loope
inc
andb
jae
je
xor
cmp
test
add
cmc
repz
cwtl
cs
xlat
mov
insb
xchg
inc
pusha
leave
xchg
popf
push
jle
fneni(8087
cs
imul
into
notb
loope
dec
cld
inc
adc
pop
jno
stc
xchg
sub
pusha
cmp
adc
mov
ret
aas
inc
call
mov
sub
shlb
adc
xchg
pop
outsl
mov
cmpsl
xor
pusha
clc
jmp
orb
pop
xor
cmp
xchg
mov
and
cmp
adc
dec
xchg
rorl
pop
inc
das
aaa
jo
fidivs
cmp
pop
mov
xor
insl
mov
rorb
mov
push
out
pop
lret
icebp
jnp
jmp
jo
xchg
dec
loope
ret
dec
imul
inc
pop
sub
mov
push
arpl
push
mov
popf
test
repnz
cmp
lock
mov
subb
and
xchg
sahf
adc
ss
int
lods
fiadds
test
es
sahf
add
nop
mov
xchg
pop
sbb
cmp
pop
outsl
mov
dec
mov
outsb
lea
clc
or
stos
or
fsubrl
or
inc
out
and
out
mov
xchg
or
mov
jecxz
js
in
cmp
sbb
pop
lcall
and
add
shll
mov
sbb
andb
fsubl
and
mov
add
xor
jp
xor
lea
mov
andb
push
cmp
js
jns
jae
filds
mov
add
ficoms
fs
sub
dec
lea
lcall
jge
out
adc
lcall
jle
adc
sbb
pop
faddp
jl
clc
addr16
cmpsb
inc
dec
lret
aas
jg
cld
lds
adc
movsb
mov
negb
sbb
cltd
push
inc
mov
or
sbb
iret
pop
std
or
sbbb
jmp
mov
jle
dec
pop
cs
andb
mov
xchg
fimull
jnp
loopne
inc
enter
jge
bnd
movsb
xchg
cmp
cmp
data16
pop
xor
stc
rclb
mov
jb
pop
push
pusha
daa
push
lret
pop
outsl
std
xor
push
pop
pop
pop
int3
mov
mov
xor
cmc
cld
adc
and
ficomps
and
lahf
cmp
push
adc
sub
repz
jp
mov
jo
adc
lret
pop
pop
or
nop
sub
hlt
mov
pop
push
jmp
lds
pop
xchg
pop
add
jle
cmpsl
icebp
in
call
xchg
jle
rcrb
jge
sbb
cmp
icebp
mov
jmp
das
jbe
sub
pusha
popa
sahf
enter
in
rolb
pusha
mov
das
xchg
pop
jl
jl
mov
out
test
sub
repz
xor
push
mov
int
jmp
xlat
mov
aaa
cmpb
bnd
aam
les
repnz
aam
cmpsb
fdivrl
pop
scas
pop
and
mov
push
shr
sub
lcall
jbe
decl
into
ds
fwait
test
pop
icebp
pop
call
test
mov
sub
inc
dec
pop
fidivrs
gs
and
cmp
mov
stc
lret
add
jmp
mov
punpckhwd
sbb
xchg
dec
xchg
test
pop
push
push
aad
test
inc
xchg
mov
out
repnz
sub
sub
or
leave
mov
mov
fsubs
or
rcl
jne
nop
xchg
mov
ljmp
push
popf
enter
test
add
xor
push
jne
fmull
or
cmpsl
mov
test
aad
mov
sub
dec
inc
jnp
push
stc
loope
hlt
or
sbbb
xor
push
and
pop
push
adc
lcall
dec
or
lret
add
jb
scas
jmp
icebp
sub
and
xchg
out
stc
and
xchg
xor
pusha
sbb
mov
xor
scas
xchg
add
das
icebp
int
fdivs
sub
mov
call
jne
or
push
jo
cmp
pop
mov
xchg
loop
or
adc
test
pop
push
movsb
mov
in
or
imul
popf
push
sub
push
fs
lret
stos
mov
cmp
mov
in
dec
mov
lods
jnp
mov
and
adc
scas
pusha
ds
push
xor
stc
rolb
push
fwait
cli
inc
sub
call
cmp
jl
sub
aad
loop
std
cmc
pop
cmp
arpl
loop
sub
notb
imul
rclb
ss
iret
inc
inc
dec
sub
enter
addr16
mov
mov
frstpm(287
lcall
cli
test
movsl
negb
in
inc
sbb
mov
pop
mov
jl
mov
push
lea
sub
enter
mov
int3
aam
aam
out
lahf
push
dec
cltd
mov
or
pop
cmp
std
mov
cmpsl
fnsave
or
pop
fdivr
not
mov
mov
sbb
or
push
push
xchg
mov
aad
mov
fldenv
push
xor
or
mov
xchg
aam
mov
cmova
in
icebp
adc
inc
pop
shrl
ret
pop
rcl
test
in
pop
jno
popf
stc
test
inc
push
jl
mov
mov
jp
outsl
sbb
pop
sbb
or
mov
push
jmp
cmp
movsb
ret
mov
xchg
sub
fnstcw
adc
adc
fimuls
pop
enter
sub
idivl
jle
pop
jns
inc
jno
into
subl
sbb
loop
in
push
add
or
cltd
enter
push
mov
cmpsl
sbb
cmp
mov
adc
movsb
pop
and
add
call
leave
popf
and
test
lret
lret
test
sti
jge
mov
mov
push
mov
jp
aam
jbe
mov
stc
pop
add
add
aam
stos
daa
adc
xchg
aas
inc
int3
push
adc
mull
mov
mov
mov
or
sbb
xchg
in
pop
mov
mov
xor
mov
push
jl
outsl
xor
lahf
pop
cwtl
pop
in
out
ds
stc
adc
adc
shrb
push
push
cmp
jns
addr16
stos
scas
xchg
jecxz
shlb
lahf
xchg
loop
mov
mov
enter
ds
into
lret
sub
int3
popa
dec
inc
xchg
imul
xchg
or
add
aam
sub
mov
aaa
out
lods
aaa
xchg
sbb
icebp
ret
xchg
sti
push
arpl
push
outsb
fs
mov
lret
xchg
pushf
cmpsb
sbb
repnz
addr16
mov
mov
pushf
add
loopne
mov
jmp
xchg
jl
test
lcall
mov
jbe
mov
cmp
xchg
push
mov
xchg
and
pop
jno
push
sub
inc
xchg
stos
inc
sbb
jnp
int
mov
ret
outsb
sbb
push
gs
add
cmpsl
xlat
pusha
aad
dec
hlt
jge
dec
and
add
xchg
and
insl
pop
add
push
ficompl
sub
sub
sahf
iret
in
or
inc
dec
ret
sbb
xchg
mov
push
cwtl
arpl
or
mov
movsl
and
add
inc
inc
mov
pop
jmp
mov
mov
hlt
sub
cld
imul
inc
mov
in
mov
lock
shl
test
or
inc
inc
mul
js
pandn
mov
pusha
xchg
jbe
bound
mov
sbb
mov
aam
lcall
mov
cmc
adc
jg
cwtl
shll
jb
sbbl
out
jno
pop
adc
stc
rol
sbb
dec
mov
int
loopne
leave
push
hlt
or
inc
int
sahf
mov
repz
mov
fildll
jb
lret
int3
sbb
pop
adc
mov
pop
cmp
jnp
mov
aas
jge
mov
popa
mov
arpl
shll
repnz
xor
addr16
pop
jecxz
dec
mov
gs
loope
out
ret
sbb
aad
stc
or
jae
aaa
pop
push
xchg
jmp
xchg
pop
enter
nop
push
sub
imul
mov
ds
mov
pop
or
and
cmp
sbb
popa
inc
add
mov
test
xchg
pop
mov
sbb
mov
sub
pop
dec
xor
jno
sti
shrb
test
mov
outsb
mov
insl
xor
popf
xor
loopne
mov
test
ret
and
pop
mov
cmpsl
repz
mov
sbb
xchg
or
mov
cmc
adc
int3
sbb
mov
mov
pop
xor
insl
negl
lods
cltd
mov
push
push
js
add
mov
sub
ret
add
mov
movsb
mov
outsl
leave
mov
incl
lahf
mov
cmpsb
es
jmp
shrl
and
add
mov
in
xor
mov
mov
pop
inc
push
mov
mov
ds
pusha
test
adc
fstpt
or
movsb
ss
mov
mov
lock
inc
and
pmullw
lods
fwait
arpl
bound
sub
movzbw
add
ds
scas
outsl
sbb
xor
sti
inc
sub
xchg
pop
xchg
mov
hlt
jle
sbb
popa
xor
orl
xorb
call
testb
rorb
and
outsl
cs
lret
scas
mov
adc
imul
mov
jmp
adcb
pop
cmp
xor
cmp
out
sub
in
jg
fstpl
pop
repnz
jge
push
xor
clc
ds
and
or
dec
or
or
lret
xchg
push
xor
jnp
xchg
add
or
fstpt
lret
int
hlt
addr16
sub
jg
stc
iret
mulb
test
enter
xchg
pop
jo
fcoml
cs
xchg
jne
cltd
clc
add
jne
and
pop
adc
jecxz
inc
loopne
ds
test
int
int3
inc
popa
stos
popf
in
stos
int
int
cmp
jle
insl
in
xchg
push
in
scas
gs
ret
int
pushf
stc
mov
pop
aas
adc
xor
les
scas
inc
push
sbbb
mov
push
xchg
in
outsb
push
leave
scas
mov
cld
dec
and
in
cmp
sbb
push
int
or
xchg
inc
movsl
push
adc
sbb
jmp
add
jg
pop
or
xor
cwtl
adc
and
sbb
xchg
mov
sti
or
add
sub
push
fbld
lcall
xor
pop
adc
pop
pop
xchg
adc
fbstp
mov
daa
imul
sbbl
jl
xchg
mov
push
and
decb
inc
jno
mov
hlt
outsl
les
adc
sbb
or
ror
pop
xor
insl
mov
sub
push
cld
hlt
mov
mov
into
mov
and
or
loope
stc
lret
shr
pop
outsl
js
adc
pop
adcb
popa
inc
pop
outsl
inc
dec
pushf
mov
iret
int3
cltd
repnz
out
xchg
mov
cwtl
mov
ret
fsubs
push
lock
pushl
mov
pop
sub
xor
cmp
lods
mov
mov
mov
out
mov
pop
sub
and
ss
and
adc
in
mov
mov
push
mov
adc
movsb
aad
mov
pop
lock
sbb
mov
cmp
sbb
fcompl
jg
pop
mov
sub
adc
mov
stos
in
mov
out
adc
repnz
int3
mov
addb
ja
push
sub
dec
mov
sbb
or
sahf
xor
jecxz
inc
fldl
mov
mov
push
xor
mov
jbe
and
hlt
fcmovu
mov
or
fidivl
lret
rol
das
in
xchg
outsl
int3
push
je
add
loopne
data16
mov
gs
jo
pop
shll
or
push
or
cmp
mov
js
mov
and
dec
xchg
jecxz
leave
adc
sbb
lret
test
test
sbb
and
sti
jbe
je
sub
mov
jnp
mov
xorl
cs
rcll
mov
dec
or
mov
es
cmpsl
and
push
lock
xor
pop
xor
sti
iret
or
testl
mov
mov
adc
popa
xchg
fwait
sahf
fninit
dec
lds
nop
frstor
decb
xor
fdivp
in
rolb
sbb
data16
sbbb
int
sub
xor
cmc
jmp
cwtl
aad
push
outsb
xchg
hlt
mov
movsb
mov
sbb
loopne
ret
jnp
lret
dec
clc
jns
xchg
mov
fisubs
arpl
fidivrl
adc
addr16
bound
dec
mov
rcr
mov
cmpsb
mov
push
or
push
clc
adc
xlat
int
fwait
or
into
frstor
movsb
test
push
mov
in
adcb
in
xor
dec
lds
ror
add
pop
ret
movsb
add
fdivr
mov
inc
rorb
push
xchg
loop
inc
add
jl
mov
mov
loope
cmpb
cli
cmpsl
clc
inc
pusha
and
add
or
xchg
cs
sub
ss
jnp
jno
and
push
outsl
mov
mov
ds
insl
das
int3
pop
nop
out
adc
shrb
xor
lahf
jae
push
js
ret
add
mov
sbb
mov
mov
cmp
dec
cmp
dec
subl
pop
daa
push
push
outsb
add
xor
cmp
sbb
or
push
xchg
add
int3
daa
jmp
push
or
push
das
xor
sbb
ret
cmc
sub
or
mov
test
sarl
imul
nop
fstps
test
mov
lret
adc
xchg
sub
shrl
sahf
sub
dec
add
push
jg
cltd
push
inc
aad
adcl
bound
add
int
icebp
lods
dec
sub
sub
negl
cli
dec
outsl
scas
pop
fsubrs
iret
jbe
testb
dec
cmp
add
push
movsl
jp
outsl
mov
cmp
jle
lods
add
pop
lahf
insl
out
sahf
hlt
popa
adc
xchg
movd
xchg
out
mov
mov
int
inc
lret
mov
in
call
sbb
insb
std
iret
mov
clc
mov
dec
push
icebp
scas
js
ror
cmp
jns
in
mul
xor
daa
jns
mov
data16
pop
dec
in
inc
xor
sub
adc
loopne
xchg
push
dec
test
stc
std
mov
cmpsb
adc
lret
sti
cwtl
or
scas
fucomi
pop
fdivrp
jmp
popa
dec
adc
push
xchg
jge
rolb
adc
mov
and
mov
sbb
fisttps
movsb
leave
ftst
pop
ret
faddl
sarb
pop
rorl
dec
jnp
sahf
aas
or
das
mov
or
mov
sub
sbb
and
into
dec
in
push
decb
pop
icebp
out
sahf
ror
push
sub
int
ss
pushf
lahf
std
adc
test
sbb
scas
mov
loope
xor
sbb
pop
out
test
dec
xchg
idivl
pop
xlat
out
mov
clc
push
xor
xor
sub
inc
push
or
or
xchg
push
push
inc
push
mov
das
adc
sub
movsb
hlt
fwait
aam
movsl
sahf
fisubl
xchg
xor
test
out
out
das
pusha
push
sub
cli
mov
or
gs
testb
mov
inc
stos
push
jmp
inc
and
imul
test
inc
das
adc
sub
dec
push
push
inc
repz
mov
pop
jnp
lods
mov
pop
imul
stos
clc
cmp
lret
and
mov
jo
test
bound
cmp
mov
mov
lods
arpl
icebp
mov
mov
mov
cmp
cltd
add
xchg
test
test
aad
lock
out
jl
and
mov
aas
stos
cs
stos
daa
sub
iret
stc
jg
ljmp
xor
sub
fcom
sbb
inc
cmpb
xor
mov
xchg
sub
and
adc
xchg
dec
sbb
add
dec
jmp
mov
sub
test
inc
adc
mov
out
es
inc
mov
nop
mov
push
jle
xor
mov
mov
cmp
fs
loopne
sbb
xchg
lea
or
jge
jne
and
xchg
ds
jae
out
jae
mov
sub
scas
adc
dec
mov
leave
popa
roll
cmpsb
jmp
ret
cmc
or
mov
fmuls
sub
addr16
add
sbb
mov
in
sbb
ds
or
ja
dec
jno
xor
pop
dec
data16
mov
es
into
pop
xor
pop
nop
fsts
les
pop
sti
push
cmpsl
mov
push
add
fidivs
sub
sub
pop
repz
stc
jne
or
adc
mov
test
pop
jo
inc
add
test
addr16
outsb
cld
adc
jo
xchg
jae
sahf
mov
inc
invd
pusha
push
and
mov
jbe
fwait
lret
test
in
sub
cli
test
and
sbb
add
dec
push
xchg
cmp
pushf
daa
xchg
mov
cli
dec
sub
jmp
movsl
and
mov
jno
push
cmc
xor
and
pushl
jb
jecxz
add
add
lcall
cmp
rcrl
push
mov
jmp
imulb
pop
or
mov
es
mov
imul
dec
aam
mov
jmp
xlat
cli
inc
fimull
jae
or
cmc
or
cmp
cltd
mov
push
gs
pop
pop
sbb
add
and
in
scas
arpl
pop
in
pop
jl
xchg
lahf
mov
jae
jne
rcl
inc
jns
and
cmpsb
mov
jo
mov
fdivrl
ja
inc
stc
jae
xor
push
inc
push
fadd
add
pop
call
sub
sub
outsl
sbb
imull
add
insb
into
aaa
push
fldz
cmpsb
add
mov
dec
pop
cmp
mov
cmp
aam
or
test
ja
push
xorb
leave
hlt
fidivrl
in
jae
add
and
daa
pusha
push
addb
or
xchg
jmp
mov
jae
mov
imul
push
jb
push
sahf
aam
stos
mov
popf
stos
mov
fisubl
pushf
dec
pop
pop
mov
icebp
mov
iret
push
mov
daa
hlt
mov
mov
mov
pop
mov
pop
iret
aad
mov
cmp
lock
dec
orl
inc
repz
jb
scas
addr16
mov
pop
push
movsb
hlt
mov
cmpsl
leave
mov
add
cltd
mov
xor
mov
xor
repz
ja
mov
pop
andl
repz
mov
sub
cmp
pop
dec
jo
in
push
add
pop
addr16
jo
cld
or
cmp
push
xchg
mov
push
in
xchg
dec
ret
adc
cld
lret
shlb
mov
aaa
sbb
mov
clc
stc
jnp
mov
pop
mov
cwtl
jns
mov
mov
add
jge
ja
or
hlt
out
jns
push
jg
loope
push
push
popa
popa
jo
insb
repz
xchg
mov
mov
xchg
popa
shl
push
cmc
insb
jle
shrb
inc
movsl
push
data16
sub
xchg
inc
xor
fcomp
andb
into
adcl
ret
loopne
cwtl
mov
push
data16
mov
dec
mov
out
sub
insl
cmp
push
jle
push
xchg
and
and
test
ds
pop
dec
movsb
fidivs
xor
data16
pop
xchg
push
or
mov
sbb
shr
jae
or
outsb
fwait
jle
jecxz
jle
popa
imul
inc
xchg
push
loopne
sahf
push
add
xlat
inc
lods
inc
imul
cmp
ret
jp
push
adc
addr16
mov
fcoml
popa
add
stos
inc
sub
jecxz
xor
add
push
insb
add
pop
cs
adc
and
or
mov
xchg
xchg
decb
imul
inc
addl
stc
inc
pop
cmp
cmp
lret
aad
dec
push
mov
movsl
fistpl
sub
pushf
jp
mov
lret
sbb
jp
int
call
mov
mov
mov
enter
shlb
push
or
iret
jnp
insl
jl
mov
cmp
push
clc
jg
imul
lea
sbb
xchg
arpl
xchg
in
mov
outsl
or
xchg
nop
pop
add
cs
cmc
mov
movsb
mov
popf
and
mov
les
mov
sbb
xor
fiadds
lock
aaa
out
sti
repnz
decl
push
test
add
rclb
call
push
pop
dec
testl
pop
gs
xchg
dec
ss
mov
pop
mov
fmul
mov
pop
pop
adc
add
or
mov
aas
mov
int3
xchg
push
rol
push
cmpb
cwtl
sub
fsubrs
pop
and
loope
jg
test
ret
lret
push
xchg
rcl
adc
fsubs
add
lock
insl
lea
xchg
add
aam
inc
aad
fistl
add
icebp
push
movsb
sbb
mov
cmpl
shlb
lock
loop
push
add
mov
push
cmpsb
cli
push
mov
scas
popa
out
xchg
cmp
push
push
jno
or
jnp
jnp
or
sbb
cmpb
flds
movsb
jp
dec
cmp
dec
xchg
sbb
pushf
lret
cmp
push
sarb
adc
xchg
addr16
int3
lds
into
scas
test
ss
data16
arpl
rolb
inc
out
mov
fcmovbe
pusha
lcall
adc
cmp
mov
sub
dec
lods
in
and
adc
shll
or
outsl
icebp
xlat
xchg
jmp
mov
push
xor
ja
sub
loop
xchg
mov
mov
ret
movsb
cmc
xchg
jno
repnz
test
dec
mov
jbe
adc
xor
pop
data16
lods
dec
xor
lock
loop
aam
in
mov
sub
mov
inc
adc
fldcw
lods
adc
jae
sbb
adc
mov
mov
es
ja
bnd
xchg
out
int3
scas
daa
or
shlb
xor
sbb
rorl
push
les
loop
mov
push
pop
mov
and
jmp
aaa
pop
mov
pusha
ret
or
cmp
dec
pop
repnz
jmp
or
add
lods
mov
loope
int
sub
sbb
inc
or
push
cmpsl
ljmp
movsb
iret
and
pop
repz
push
addr16
xor
mov
sbb
adc
mov
sbb
pop
repz
loope
fwait
mov
shlb
and
mov
lods
gs
ret
stos
mov
mov
xchg
jbe
imul
incb
mov
cwtl
sbb
fcmovnbe
push
dec
enter
ds
movupd
ss
je
fsubp
jae
add
mov
and
mov
cmp
push
lds
push
dec
fwait
mov
xchg
dec
mov
in
popa
loop
aam
sub
sub
test
pop
xchg
fisubrl
or
and
ret
addb
in
adc
cld
or
int
sti
sub
addr16
ds
jecxz
push
jbe
gs
inc
xchg
sub
daa
push
mov
lea
cmp
pop
pop
push
imul
sbbb
pop
push
in
loopne
movsb
pop
mov
or
ret
lahf
sub
in
aad
mov
sbb
mov
ljmp
jbe
leave
out
mov
les
sub
mov
adc
arpl
int3
ja
rep
dec
popa
dec
not
xchg
push
mov
dec
xchg
dec
or
test
loop
rorl
out
test
jnp
and
jl
pop
pusha
cmp
push
pusha
jle
push
inc
xor
fs
pusha
je
sbb
xchg
fs
out
jb
into
jno
sub
push
sub
fstl
xor
insl
ja
cmp
cmp
mov
adc
inc
inc
ja
dec
cmp
push
push
cs
fcoms
jp
stos
inc
shlb
dec
adc
sbb
fsubl
xchg
inc
jne
call
jp
cmp
mov
std
xchg
add
xchg
sbb
xchg
out
mov
jne
arpl
test
inc
and
psllq
jae
cld
sbb
sbb
inc
andb
add
sub
in
sub
xchg
lds
inc
or
fadd
lock
fdivr
pop
out
mov
xchg
nop
cmp
or
divb
clc
out
cmc
jmp
cmp
mov
lods
cwtl
push
sub
dec
rorl
in
insb
addb
data16
in
bound
cmp
adc
sub
fs
pop
fdivrs
mov
pop
adc
sbb
xchg
mov
add
add
add
mov
fst
or
in
jge
test
jle
jecxz
push
push
and
bound
xchg
fstpt
push
lret
add
mov
lds
inc
in
fstpt
jle
es
lds
cmp
lahf
test
bound
dec
pusha
cmp
jnp
xchg
add
fnstsw
ljmp
sar
mov
shl
mov
lods
nop
pop
mov
leave
jge
dec
daa
jle
dec
dec
mov
add
adc
gs
sarl
mov
je
push
or
add
fdivrl
xchg
inc
push
fidivl
inc
cmp
add
gs
sbb
pop
mov
mov
incb
inc
push
mov
stos
or
xchg
in
cmp
mov
push
clc
sub
push
cli
lock
lea
dec
out
aas
pop
pop
das
pop
mov
hlt
sbb
jge
mov
lret
sbb
mov
clc
shr
js
mov
jmp
out
gs
adc
push
sahf
cmpb
jp
mov
and
inc
add
icebp
sub
cwtl
test
jbe
and
shrb
mov
pop
xchg
cmp
fldcw
loop,pn
mov
pop
add
xor
psrlq
mov
xor
sub
mov
mov
sahf
sbb
fdivs
push
jno
and
jecxz
push
cmpb
jnp
bnd
mov
and
push
mov
bnd
loope
sbb
pop
inc
ret
sub
push
cmp
bound
pcmpeqw
pusha
lret
xor
adcb
xchg
pop
add
push
js
repz
nop
test
loopne
push
loopne
cmpsl
out
out
push
subl
jae
adc
mov
cmpsb
outsb
paddsb
xor
adc
jb
outsb
int3
add
pop
iret
or
stos
pop
or
sbb
dec
and
fsubs
mov
sub
and
dec
cltd
pop
adc
negb
jb
rorl
dec
sub
sub
or
ljmp
sahf
arpl
mov
imul
dec
xor
je
aad
push
iret
cmp
mov
xchg
addr16
jb
jl
and
repz
xchg
jecxz
in
outsl
aaa
mov
cmp
stc
cld
sbb
jl
out
sar
frstor
in
pop
fs
sti
push
sahf
mov
sahf
fldcw
cltd
or
mov
xchg
xlat
push
xchg
sbb
jle
cwtl
insb
adc
mov
subb
imul
hlt
lcall
cli
icebp
pushf
mov
sbb
push
cmpl
enter
push
les
push
sbb
sub
in
pop
xchg
xchg
gs
aam
or
or
shlb
sbb
mov
dec
jns
stc
jno
xchg
sti
in
sbb
pop
mov
int
daa
into
ffree
sub
pop
lahf
clc
insl
and
pop
cmpsb
std
mov
mov
mov
dec
inc
ret
mov
loopne
cmpl
jmpw
js
dec
push
iret
and
lods
lods
lods
inc
cs
mov
insl
inc
mov
inc
adc
ja
inc
xchg
cmpsb
xlat
mov
mov
ficompl
lds
imul
bound
cwtl
adc
out
push
es
cmp
ds
outsl
test
lea
inc
pop
scas
cmp
leave
inc
cmp
test
shll
je
mov
in
lds
mov
jnp
or
fdivl
xchg
inc
and
movsl
seta
nop
ljmp
pop
repnz
xchg
push
adc
adc
jg
xchg
sub
ja
fs
inc
popf
inc
dec
cmpsb
ret
cld
mov
lcall
incl
jns
aaa
sub
sbb
dec
mov
pop
mov
hlt
inc
sub
mov
lcall
and
dec
lcall
dec
int3
or
bound
ret
push
lahf
add
out
adc
mov
jl
sbb
addl
div
lcall
mov
dec
ss
popl
stos
push
dec
xchg
leave
adc
mov
fistl
push
into
daa
sbb
inc
stc
push
mov
dec
or
ja
outsl
dec
pop
ret
das
jp
jo
cmpsl
out
adc
insb
lcall
adc
adc
mov
mov
mov
roll
and
lcall
add
cli
push
jmp
pop
xchg
and
out
fpatan
cmc
stos
adc
jno
clc
imul
in
pop
mov
dec
fistpl
idivb
mov
ret
dec
dec
push
jmp
pop
mov
xor
jg
pop
sbb
jle
dec
xchg
xchg
dec
test
jb
or
xor
lret
sbb
in
cmp
ret
mov
rclb
pop
or
pop
adc
bnd
push
inc
test
test
mov
jecxz
filds
pop
cmp
sahf
aas
pop
mov
dec
aaa
dec
mov
xchg
jae
ds
jns
dec
and
les
xor
dec
into
cwtl
sub
dec
mov
fiadds
mov
jg
int
sub
lods
mov
enter
mov
lods
icebp
jl
cmpsl
fldt
into
pmaxsw
sbb
push
ljmp
out
mov
adc
lods
ficompl
mov
mov
mov
push
xchg
inc
cwtl
ljmp
dec
or
cmp
xchg
sbb
sbb
fcompl
jl
mov
jl
jo
bound
add
jns
dec
cmp
adc
addl
mov
or
stos
inc
and
xlat
insb
jae
pop
loop
jecxz
cmp
mov
lea
stos
loopne
loop
scas
loope
iret
ja
add
out
xchg
pop
and
mov
call
adc
icebp
xchg
cld
and
sahf
push
sub
daa
xor
sub
lods
enter
xor
inc
adc
mov
adc
pop
jb
jnp
xchg
dec
rcrb
scas
inc
dec
xor
imul
lret
inc
pop
repnz
rolb
int3
shll
or
lods
jle
sub
inc
sti
int3
ret
stos
int3
lds
scas
into
dec
inc
fimull
add
iret
in
mov
xor
rclb
popf
sub
sbb
jge
push
inc
cmp
cmc
push
and
arpl
pop
fs
push
rol
xchg
mov
mov
jmp
adc
addr16
xchg
divb
add
movsb
add
mov
fwait
mov
sub
out
push
jecxz
sbb
pop
jp
mov
mov
dec
cmpsl
mov
dec
push
sti
mov
insl
addl
inc
adc
push
repz
pop
cmp
add
or
cmpl
divb
icebp
dec
jbe
rep
and
or
push
in
pop
lods
jno
pop
or
sbb
xor
dec
mov
cld
data16
sbb
mov
cmpsb
nop
cwtl
pop
sti
dec
mov
jp
ret
push
add
sub
out
jecxz
mov
inc
nop
pop
addr16
cmpsl
je
mov
movb
or
push
bound
bound
movsb
cmp
cli
cmc
ret
rorl
dec
enter
pop
xchg
add
cmpsb
mov
push
jp
cmpsl
stos
xorl
lock
or
subl
inc
sbb
pop
jl
jmp
mov
subb
shl
or
lock
ljmp
mov
gs
fistl
xchg
rorl
subl
mov
rcll
pop
mov
sti
mov
les
test
dec
lret
loopne
pop
out
nop
jb
pop
dec
jne
fisttpl
push
cmp
imul
sbb
dec
ret
cltd
sahf
mov
test
adcl
int3
cmp
xchg
pushf
fmull
sti
cmpsb
sbb
je
repnz
movl
orb
mov
leave
sub
pop
jae
or
pop
xchg
or
sti
lods
out
mov
insl
insl
push
mov
push
push
mov
ljmp
dec
xor
rorl
ss
inc
popf
push
pop
or
dec
fistpl
sbb
lret
adc
sar
push
and
jno
aam
mov
cld
push
jmp
out
test
adc
rcrl
jno
xor
outsl
movsb
rorl
stc
or
jnp
aas
pop
cmp
xchg
and
pop
cmp
push
cmp
test
arpl
subl
movsb
std
sti
movsl
out
mov
mov
cmp
inc
dec
mov
orb
popa
add
int3
stos
adc
aaa
cwtl
sub
loop
mov
daa
fs
mulb
js
sahf
cs
mov
test
es
xchg
push
xchg
fistps
lea
cmpsb
inc
cmc
dec
icebp
cmp
adc
or
xor
ja
jmp
sbb
fs
shlb
das
sub
cmp
pop
rolb
dec
push
std
mov
pop
cmpsl
cwtl
jns
mov
push
lds
pop
out
and
and
or
lahf
imul
xchg
inc
add
jmp
dec
std
cwtl
mov
xor
es
jne
pop
mov
pop
jns
pop
addr16
push
loopne
imul
jmp
pop
and
popa
and
in
and
js
and
inc
mov
mov
xchg
pop
sub
mov
xor
rcrb
lea
sahf
mov
in
push
lret
rcll
fldcw
test
into
pop
es
loopne
push
lea
les
mov
dec
arpl
ss
stc
pop
daa
mov
cmpsb
in
loopne
jl
lcall
cltd
enter
fisttps
aaa
icebp
jmp
push
repz
cmp
or
fnstcw
nop
mov
sub
sub
popa
fisubrs
movups
sub
xchg
cmc
or
fisttpl
mov
jle
fucompp
cwtl
pop
fs
xchg
les
in
dec
adc
jle
inc
inc
movsb
sbb
jae
ss
add
sub
mov
pop
inc
test
cmp
mov
xor
test
sahf
dec
add
je
leave
sahf
jp
or
fucomip
pop
add
add
mov
stos
xchg
mov
pop
out
jle
push
jb
mov
ss
outsb
gs
sahf
xchg
pop
xchg
das
in
xchg
scas
mov
out
ret
int
daa
sub
nop
adc
pop
popf
bound
sbb
xchg
das
lcall
sahf
jl
jecxz
movsb
jb
out
sub
clc
test
push
xor
cwtl
pop
add
fiadds
cltd
enter
xchg
nop
xor
aad
pop
adc
stos
int
pop
sbb
pop
aas
push
addr16
ljmp
xchg
aad
cmpsl
mov
mov
jp
lds
xor
mov
aas
mov
sbb
xor
push
sbb
divb
xchg
shr
add
mov
jle
outsb
push
mov
dec
cmc
pop
dec
mov
xchg
adc
and
pushf
daa
dec
pop
inc
cmpsl
adc
mov
pop
movl
and
xchg
jns
sbb
out
lock
imul
loope
xor
inc
push
lcall
xchg
movsl
call
or
repnz
sub
out
mov
xlat
xor
xchg
jnp
jns
fcoms
xchg
push
mov
xor
repnz
push
fldenv
and
movsl
sbb
mov
xchg
shlb
and
mov
loop
push
pop
cmpsb
dec
imul
sbb
test
jle
push
aam
adc
je
ss
push
je
sub
mov
sub
das
inc
mov
mov
xchg
mov
pop
pop
push
dec
adc
adc
daa
outsb
fs
adc
sti
jo
sub
mov
cmp
gs
rorl
xchg
in
mov
xchg
std
jo
shlb
mov
inc
int
xchg
mov
lcall
inc
inc
jbe
or
les
decb
jb
sub
or
xchg
sbb
adc
arpl
out
addr16
inc
lock
sub
cmp
and
xchg
stos
pop
mov
test
fnstsw
sub
cli
cltd
stos
pop
fwait
xchg
mov
and
popl
pusha
add
lods
ljmp
cmp
and
in
inc
enter
cwtl
add
jne
test
in
in
xchg
rol
add
mov
loope
inc
jnp
mov
mov
repz
out
pusha
mov
dec
jo
jns
sbb
dec
shrl
negb
pop
xor
mov
cmpsb
dec
test
mov
dec
mov
inc
fldenv
fldl
into
jp
fs
lds
xlat
lret
das
daa
imul
int3
push
xchg
sub
sarb
sti
dec
enter
jnp
jne
adc
xchg
pop
fs
adc
jbe
pop
cmp
lahf
mov
jmp
sub
movsb
stos
jns
add
negb
inc
not
nop
add
push
rcrb
stos
adc
dec
test
adc
cmc
jo
ds
cmp
mov
cs
mov
add
xor
sbb
dec
repz
int3
popa
shlb
mov
in
ja
orl
lods
sbb
test
gs
push
fdivs
xchg
fildl
rclb
jae
mov
dec
ret
mov
cmc
fisttps
loop
dec
sar
dec
fidivl
outsl
xor
jle
xchg
outsb
xor
insb
pxor
inc
jb
iret
and
xchg
push
cmpsl
push
ret
jae
out
fnsave
repnz
and
or
ret
pop
jns
cmpl
pop
add
mov
dec
nop
out
push
fdivp
icebp
mov
cli
mov
sti
pop
mov
rclb
pop
gs
leave
xchg
cmpsl
adc
ljmp
sub
inc
cmp
xor
sub
or
lock
sub
add
xchg
dec
mov
dec
shrl
stc
imul
inc
and
subl
pushf
loopne
mov
mov
jg
movsb
sbb
mov
mov
decb
addr16
jge
loopne
jae
inc
fmuls
divl
movsb
test
xchg
cs
insl
imul
cmp
pop
or
int
pop
imul
iret
sbb
push
cmp
cmc
fistpl
jmp
or
add
fdivrl
pop
pop
je
pop
mov
ret
inc
out
jecxz
xor
jae
cmp
jnp
add
lds
inc
ja
push
and
icebp
fistpll
adc
mov
cmp
xchg
hlt
xchg
mov
mov
fldt
sub
xor
sub
cmp
fldcw
int
loopne
das
fiaddl
pop
or
mov
bound
jecxz
fsubrl
mov
leave
jo
insb
inc
pop
outsb
or
inc
or
push
sbb
inc
xchg
faddl
jg
js
lret
dec
cmpsl
pop
loop
jp
push
mov
add
pop
mov
dec
dec
or
sbb
loope
icebp
push
or
inc
or
fsubs
aam
pop
shlb
notb
cmp
lods
or
pop
add
and
data16
jno
cmpsl
sbb
in
fs
cltd
xchg
xchg
dec
cmp
mov
mov
movsb
adc
pop
lods
push
sbb
xor
ret
inc
bound
mov
cmpsl
das
jge
and
jmp
pop
nop
cmc
cmp
pop
gs
mov
fistl
inc
std
cli
xchg
jge
pop
add
jecxz
jmp
pop
add
inc
cwtl
cltd
jns
or
rolb
aam
es
mov
cmp
push
jo
out
daa
adc
push
les
test
pop
or
js
xchg
pshufw
cmp
xchg
lahf
in
jnp
mov
or
pop
imul
addr16
test
xor
movhps
adc
xchg
popa
icebp
dec
repz
push
xor
mov
or
xlat
sbb
idivl
es
cmc
leave
adc
push
dec
push
jo
lods
ja
imul
faddl
insb
scas
lods
adc
mov
js
pop
fbstp
dec
dec
xchg
cmpsb
cmpsb
mov
lods
jae
xor
pop
push
jg
pushl
aad
lods
mov
nop
lret
pop
inc
mov
jb
aad
std
sti
or
mov
and
push
xchg
orb
mov
cmp
push
es
rorb
pop
xchg
insb
adc
out
push
ficoml
imul
push
outsb
inc
mov
or
rorl
nop
imul
mov
add
rclb
in
je
mov
into
lods
jae
xchg
repz
add
mov
insb
in
in
jg
pushf
scas
in
ja
xorl
ss
mov
cmpsb
mov
xchg
test
adc
mov
orl
mov
pop
test
int3
sar
in
popf
ss
loop
mov
cmp
and
fwait
mov
pop
jp
mov
push
notl
ljmp
dec
adc
hlt
sti
stos
cbtw
xor
dec
test
inc
repz
and
lahf
mov
enter
daa
call
les
int
ret
popf
pop
jo
test
add
testl
sbb
push
inc
mov
or
sbb
data16
imul
into
jae
jae
jnp
iret
in
pop
mov
movsb
jl
sbb
xlat
stos
daa
cmp
andb
mov
adc
arpl
push
cmp
in
scas
out
mov
xor
fcoml
imull
fsubr
sahf
leave
fsubrl
mov
xor
push
push
call
int3
cmp
mov
cmp
out
dec
push
clc
popa
xchg
in
repz
mov
jle
mov
xor
adc
add
adcl
movsl
add
jmp
ss
arpl
daa
jae
cmpl
cltd
popf
cmp
aad
adc
mull
scas
push
dec
sbb
nop
cmp
cmp
in
xor
insb
and
mov
or
loopne
les
cmp
int
push
sbb
sub
pusha
jge
mov
mov
fwait
mov
dec
enter
xchg
jp
fildll
fbld
mov
adc
outsl
jns
or
cwtl
cmp
jbe
push
add
dec
mov
sub
ret
stos
lock
mov
imul
fs
or
mov
into
cld
cmc
inc
fwait
inc
jg
jns
rep
stos
push
jle,pt
push
adc
mov
fsubrl
arpl
in
xchg
addb
sub
fbld
jge
fildll
or
fwait
jmp
mov
loopne
icebp
cmp
addr16
mov
adcl
cmpsl
mov
adc
sbb
popa
addb
mov
dec
jnp
mov
mov
stos
and
rorb
push
and
pop
mov
xchg
ret
int3
hlt
insb
push
mov
enter
mov
scas
arpl
es
xchg
je
ss
cs
hlt
pop
adc
lret
mulb
xor
xchg
es
cmpb
pop
stos
mov
push
ds
add
ds
fs
int3
fidivrs
inc
outsl
movsl
xchg
pop
xchg
inc
mov
fucomip
movsl
adc
add
cmpsl
cmp
jne
mov
and
jp
outsb
push
pop
fdiv
jmp
cwtl
fs
ror
stos
mov
xor
mov
arpl
subl
insl
negl
jb
leave
aas
notb
pushf
mov
inc
loope
je
dec
mov
das
dec
pop
mov
and
fdivrl
and
pop
outsb
inc
fsubrl
jle
shll
outsl
aaa
lds
cs
daa
mov
lods
sahf
mov
adc
sub
outsl
rcll
adc
sub
mov
int
fdivr
xor
clc
inc
stc
aaa
cmp
dec
and
mov
lahf
jmp
cmp
jno
push
cmpsb
push
xchg
ret
mov
mov
inc
mov
out
cwtl
xor
pop
ljmp
test
divl
adc
insb
test
cmp
xchg
push
inc
mov
jae
addr16
test
pop
sarb
insl
mov
and
shll
cmp
cltd
stos
shlb
jl
pop
dec
adcl
movsl
inc
aas
into
cwtl
in
dec
mov
bound
movsb
test
sbb
inc
cmp
add
cmp
jns
mov
mov
scas
add
imul
cmp
pusha
push
inc
lods
cli
pop
insb
iret
mov
ret
push
ret
rorl
aad
pop
addb
inc
pop
mov
xchg
xchg
and
dec
mov
push
je
and
lock
lea
pop
jecxz
clc
jae
push
cmpsb
movsb
lods
stos
faddl
ss
loopne
dec
dec
fldcw
adc
stos
push
inc
jno
cs
icebp
std
sbb
jmp
cld
mov
or
lds
xchg
out
cli
cmp
fisttpll
sub
cli
loop
mov
das
leave
inc
pop
dec
and
cmp
insl
xor
aaa
pop
jnp
popf
pop
sub
push
js
mov
mov
jnp
hlt
sahf
sbbl
pushf
hlt
sbb
pop
aam
das
jecxz
fldt
not
ret
push
loop
xlat
std
mov
test
mov
test
adc
mov
pushf
sub
loopne
and
imul
cmpsb
inc
outsl
jno
jae
push
jno
xor
xor
sub
sub
ds
xchg
mov
imul
push
nop
mov
inc
sahf
or
mov
test
and
ficoms
scas
ret
push
mov
fnstsw
out
arpl
mov
sbb
push
pop
sub
pop
pop
out
xchg
inc
test
xor
pop
enter
xor
in
add
fildl
iret
shlb
int3
shlb
sahf
pop
or
daa
mov
push
mov
xor
int
pop
mov
jecxz
sbb
adc
mov
cmpsl
aam
sub
push
mov
pop
jecxz
xor
js
mov
sub
sahf
jb
popa
lret
mov
jo
cwtl
mov
mov
lods
and
test
inc
mov
mov
sarl
lret
lcall
pop
mov
xor
and
aad
and
mov
inc
mov
jbe
sbb
xchg
lret
jbe
pop
push
jo
std
cmpsl
cmpsb
add
jne
pop
rorb
rcll
xlat
in
scas
lret
stc
pop
mov
repnz
adc
push
mov
sub
pop
lods
xlat
lea
push
lret
mov
jb
xchg
insl
hlt
insb
or
mov
cmp
movsl
gs
or
cmpsl
jbe
addr16
jae
sahf
or
push
aam
cmc
cmp
jbe
xor
push
pop
jl
repnz
pushf
sbb
aad
imul
sbbl
lock
ja
popa
fisttpll
js
cld
jbe
dec
jnp
fdivl
fprem
add
ds
sub
dec
and
sbb
sbb
add
mov
sbb
push
std
fisttpll
ficomps
std
lds
push
mov
repz
lcall
mov
mov
fcmovb
cmc
mov
or
daa
inc
xchg
cmp
sbb
clc
jmp
les
pop
mov
repnz
cmp
or
popf
and
pop
cli
xor
jge,pt
pop
lahf
jge
dec
aam
pop
jge,pn
loop
mov
cmp
sbb
dec
sti
mov
jo
jp
jne
pop
inc
out
mov
mov
ds
sbb
ja
imul
pop
lret
mov
imul
mov
cmp
out
fistps
enter
pushf
dec
jns
mov
mov
jmp
call
rolb
inc
jge
mov
jne
add
or
sub
mov
cmpsb
and
mov
jg
xor
das
test
inc
test
push
punpckhwd
jge
push
cld
sbbb
lock
pushf
mov
cmp
movsl
jns
cmpsl
aam
push
shlb
in
pop
xor
lea
int
dec
aad
fsubs
icebp
out
aaa
popf
imul
sti
mov
jge
ret
dec
fstps
repz
cld
mov
sarb
sbbl
jne
jnp
js
sub
sbb
shrl
xchg
hlt
jne
push
stos
sub
mov
aaa
in
mov
into
out
adc
dec
add
bound
mov
cmpsb
loopne
cmp
dec
dec
cmp
mov
push
fs
mov
adc
lds
cmpsb
js
mov
mov
dec
lcall
popf
jl
popf
push
add
test
push
in
imul
pop
push
xlat
lret
mov
lret
adc
popf
test
xor
repz
rorb
jge
or
jno
call
adc
pop
mov
iret
sub
jle
shll
adc
adcb
nop
fwait
sub
mov
sbb
jae
or
dec
pop
dec
lock
int
popa
or
push
jmp
cmp
xchg
sub
sbb
aas
cmp
cltd
lahf
jle
sbb
jmp
mov
inc
call
pusha
jg
stos
jecxz
scas
pop
stc
div
add
lret
daa
arpl
pop
mov
icebp
ficompl
xchg
std
pop
dec
push
loopne
bound
sti
inc
mov
nop
leave
popf
scas
nop
sub
dec
push
adc
jo
ja
shrl
sbbb
aas
and
fdivl
cmpsl
mov
inc
fcoml
xor
rorb
leave
mov
lods
cld
jl
aas
dec
ret
jl
loopne
clc
mov
jmp
add
movsl
push
in
push
fs
mov
stc
adc
pushf
inc
arpl
shr
jne
and
pop
inc
lds
sahf
leave
mov
ds
inc
ja
xor
push
aad
pop
sbb
nop
cmp
pop
aam
jo
stos
js
and
pop
fsubrp
dec
iret
and
sub
clc
orl
add
mov
push
mov
push
fldenv
ret
xor
sub
lcall
and
int
subl
hlt
xchg
xchg
lcall
outsb
mov
icebp
push
cmp
sbb
fisubs
push
scas
push
mov
popa
ds
pop
fsubr
dec
and
sahf
ja
pop
push
dec
roll
mov
xchg
cmp
xchg
mov
in
shll
int3
cmp
ds
jnp
lret
test
daa
aaa
leave
push
shl
mov
shrl
or
xor
addr16
loopne
popa
sbb
cmpb
and
sbbb
mov
lcall
in
push
adc
int
and
mov
adc
pop
outsb
orl
pop
stos
ret
sub
addl
nop
lods
aam
std
push
jle
or
cmp
js
xor
aad
push
mov
jo
jns
pop
mov
mov
dec
sbb
jmp
pop
pushl
aad
sub
leave
and
fisubl
sub
mov
std
mov
adc
sub
in
inc
gs
jmp
test
push
out
imul
dec
std
jo
pop
or
loop
inc
xchg
lock
push
push
inc
xchg
xor
insl
pop
or
aad
or
sub
jae
test
mov
aad
je
out
and
cmp
lds
std
mov
xor
or
push
nop
sahf
mov
mov
dec
in
xchg
cli
lret
test
into
xor
or
ljmp
mov
cmpsl
adc
xorb
fmulp
fwait
and
jne
inc
sbb
scas
stos
inc
arpl
or
fdivrl
push
mov
push
mov
push
popf
cmp
xchg
rorb
jl
notb
loope
mov
pop
xor
inc
pop
sub
rcr
or
xchg
pushf
test
jl
scas
shlb
add
xor
pop
out
out
lods
push
out
mov
sbb
stos
insb
sbb
jmp
cmp
mov
dec
aas
aad
test
jmp
mov
jl
fidivrs
sbb
test
enter
int3
mov
int
fidivl
cmp
insl
push
and
xchg
nop
std
inc
movsl
mov
and
test
xchg
hlt
aas
lods
xchg
popa
sti
push
cmp
pushf
and
test
lock
call
jo
adc
dec
sbb
xchg
divb
push
mov
mov
mov
rcll
push
mov
push
add
jmp
test
fcomps
pop
push
test
dec
movsl
jl
jbe
mov
jecxz
clc
cwtl
movsb
inc
stc
aam
sbb
enter
mov
daa
pusha
dec
jg
sbb
cmp
pop
add
xlat
leave
xor
mov
shll
test
xor
ret
sbb
sti
mov
insl
push
cmp
and
and
add
test
mov
inc
cld
inc
cmpsl
adc
pop
je
push
scas
pusha
ret
jbe
arpl
adc
fisttpl
aaa
mov
pmuludq
sub
dec
cmpsb
and
shrl
xchg
push
lret
push
hlt
cli
stos
or
mov
test
xchg
scas
sub
and
std
notl
enter
fwait
lock
mov
iret
push
pop
mov
inc
cmpsl
ss
mov
or
xor
out
dec
adc
shlb
aad
xchg
sbb
mov
insb
movb
xchg
popa
mov
bound
cltd
xorl
cld
or
fdivs
pop
testl
xor
fcoms
push
dec
jae
push
mov
aam
inc
push
and
cmp
lods
dec
xorb
cmp
sub
out
or
inc
jp
cltd
loop
ret
out
sahf
sub
dec
mov
loop
ja
daa
int3
fnstcw
adc
in
pop
pop
inc
lahf
xor
add
push
lret
pop
scas
daa
ds
icebp
shlb
or
sti
push
pop
cltd
cmp
jmp
lret
add
les
mov
push
aam
sbb
lods
pop
sahf
jge
fstps
cmp
xchg
dec
jbe
stos
addr16
aad
adc
xchg
xor
dec
xchg
mov
imul
mov
sub
bound
lea
movsl
mov
out
jecxz
add
clc
xor
lret
lcall
pop
inc
in
push
imul
in
mov
dec
inc
cmp
nop
xchg
push
imul
aad
jns
xor
into
xor
pushf
imul
clc
outsl
push
and
fdivr
cs
xchg
sub
rcrb
cld
fildll
adc
or
das
jecxz
xlat
cmpsb
ds
push
hlt
lcall
pop
jmp
in
jg
mov
mov
cmpb
lods
cmp
push
or
in
mov
inc
mov
repz
mov
sbb
out
fisubrs
stc
mov
lock
pushf
unpckhps
sahf
in
mov
pop
adc
mov
rclb
lds
div
xor
fisubs
adc
adc
xorb
movsl
push
scas
and
aaa
sbb
dec
lods
jecxz
adc
mov
cmp
insl
lret
arpl
out
dec
mov
ss
xorl
ss
fnsave
scas
mov
lcall
mov
push
in
in
sbb
rorl
dec
mov
xor
xor
mov
sbb
sbb
mov
das
push
xor
lcall
pop
add
jb
cwtl
cmp
cmpsb
movl
out
inc
dec
mov
mov
mov
insl
xchg
aas
push
mov
sub
mov
push
std
jb
rclb
mov
mov
jle
cwtl
sbb
dec
in
rorb
mov
xor
cli
idiv
mov
fimuls
sub
mov
xor
push
or
ds
fimuls
pop
fiaddl
outsl
rcll
rcrl
lock
mov
ffree
test
mov
in
aaa
mov
test
clflush
or
xor
or
ret
insl
mov
movsl
cmpsb
clc
bound
ja
and
rcrl
aaa
test
pop
mov
jg
xchg
je
sarb
push
out
adc
mov
sahf
outsl
push
xchg
ja
pop
mov
adcb
je
inc
movaps
pop
fistps
sub
inc
dec
loope
in
sbb
sub
ds
pop
add
clc
mov
inc
or
push
sbb
shll
push
inc
arpl
lock
push
shll
ss
xchg
aad
mov
cmp
fwait
test
cmpsl
mov
jbe
or
mov
push
jg
adc
cmp
and
xchg
les
in
out
cmc
addl
pop
jl
arpl
add
leave
push
rcl
xlat
push
pop
push
mov
xor
faddl
push
fwait
mov
in
push
shr
xor
inc
les
fwait
jp
or
ja
int3
jmp
pop
jns
divl
adc
in
mov
ss
inc
jecxz
push
jl
icebp
add
push
ja
jnp
xlat
int
and
jp
push
dec
in
loope
imul
fcoml
mov
int3
ds
push
cmp
mov
shlb
cwtl
xchg
push
xchg
fnsave
std
fistpl
mov
out
inc
imul
inc
push
clc
push
or
sti
test
dec
repnz
ss
stos
push
lea
inc
in
lcall
or
mov
add
and
inc
dec
cmp
pop
sarl
loop
decl
loopne
loope
xchg
divl
xor
ja
cld
adc
out
scas
mov
loop
or
pop
and
lret
dec
roll
test
jmp
movsb
mov
lcall
out
add
inc
das
mov
ror
sub
sbb
loop
bound
xchg
nop
clc
sub
sbb
add
pushf
mov
dec
xor
out
fs
sbb
fwait
pop
pop
or
xchg
data16
cli
fldt
cmp
es
xor
fs
stos
dec
jge
or
mov
push
inc
lret
xchg
jmpw
shrb
and
and
pop
lds
cmp
jae
js
test
shrl
movsl
add
loop
mov
dec
sti
bswap
lods
add
outsb
jl
or
sarl
push
jp
rclb
fwait
movsl
lret
jb
outsb
sbb
outsb
dec
push
inc
jne
pusha
mov
fsubrs
enter
shr
cmp
outsl
xlat
push
mov
cmp
gs
shll
adc
xchg
mov
cwtl
enter
mov
or
xor
jmp
in
data16
xchg
in
mov
cld
loopne
shll
aas
insl
adc
mov
fisttps
jl
pop
repnz
pop
adc
add
ret
or
sbb
mov
push
int3
push
jp,pn
xor
imul
mov
addb
xor
pop
mov
sub
es
mov
push
and
imul
aaa
popa
aam
sbb
mov
mov
mov
or
divb
pop
sbb
inc
push
xor
mov
sub
out
mov
jp
aam
out
aad
int
arpl
shll
adc
test
jnp
in
adc
push
jno
and
xchg
ret
fwait
lods
cli
add
in
ret
xchg
test
or
fisubrs
or
xor
mov
jge
cltd
xchg
sub
cmpsb
sub
popf
mov
dec
into
adcb
loop
imul
cmp
push
mov
pop
aad
push
cmc
shrb
pop
aad
jl
mov
imul
add
test
arpl
pop
dec
cld
sbb
lds
mov
mov
loope,pt
in
ss
sahf
xchg
imul
jnp
lahf
sub
adcb
and
lds
cmp
call
fs
mov
jl
inc
ljmp
movsb
stos
fs
loop
jle
mov
xchg
negl
pop
sahf
in
dec
xor
je
loopne
aaa
and
xlat
cwtl
clc
jge
xchg
gs
ja
push
xchg
jmp
daa
mov
dec
add
fcoms
mov
mov
xor
jl
dec
int3
cmpsl
mov
hlt
sub
enter
xor
jg
jne
and
out
fs
ja
in
adc
jp
loope
ljmp
ja
shrb
mov
repz
jmp
addl
enter
popa
mov
mov
sbb
in
mov
icebp
sub
rclb
dec
and
faddl
jge
incl
xor
adc
jb
adc
mov
sbb
cmp
push
jns
leave
shl
xor
or
lea
cmc
out
ja
jg
xchg
adc
or
push
dec
iret
mov
fstpl
push
mov
stos
xchg
push
fs
fidivrs
sub
push
cmp
xor
sbb
xchg
mov
sub
das
add
testl
ds
cmp
imull
inc
mull
stc
inc
xchg
mov
imul
xor
lahf
data16
sbb
loopne
jbe
sbb
icebp
ror
xchg
ljmp
push
cmpb
movsl
inc
js
push
aam
call
rorl
fisubrl
stc
mov
sub
mov
hlt
sbb
mov
cmpsl
fs
inc
loope
loopne
jecxz
inc
insb
mov
or
adc
test
aaa
sub
and
dec
adc
jp
in
mov
mov
mov
stos
les
or
pop
out
arpl
mov
test
adc
imul
inc
push
jnp
push
inc
jmp
lock
addr16
sbb
jb
sub
jns
jge
loop
mov
loope
dec
cmp
sub
inc
cmpsb
bound
movsl
bound
inc
add
push
jge
lahf
dec
sbb
inc
adc
adc
lods
jbe
adc
dec
insl
fwait
push
jno
mov
lds
or
ja
pop
fisttpll
sahf
lods
xchg
jbe
shlb
or
rcrb
xor
movsb
jb
or
imul
scas
and
fwait
jbe
faddl
rolb
sarl
xor
mov
cmpsl
imul
mul
mov
push
pop
ds
sbb
mov
mov
adc
mov
arpl
xor
imul
in
xor
inc
out
lcall
stc
cmp
jne
or
pushf
pop
mov
fxch
pop
sar
arpl
and
sbb
jmp
mov
fstps
cmp
repnz
mov
scas
pushf
in
gs
sarb
nop
stc
lock
jl
into
sub
idiv
test
fsubl
or
movsb
add
dec
aad
stc
mov
test
jmp
loopne
daa
xor
icebp
mov
or
rorb
sahf
sub
cld
pushf
jo
pop
push
subl
or
shrb
loopne
mov
loopne
fwait
mov
xchg
jno
push
cwtl
adc
cmp
cmp
popf
int
and
ret
outsb
hlt
in
rcrl
cli
xchg
hlt
mov
inc
sub
cmp
push
mov
and
sti
shlb
ret
jo
es
std
cli
xlat
out
repnz
pop
jae
lret
je
push
scas
shl
divl
icebp
mov
xchg
mov
push
sub
or
imul
pop
aam
not
in
arpl
inc
sbb
gs
mov
sbb
cmpsb
mov
push
jp
mov
or
cmp
xor
adc
inc
imul
movsl
insl
bound
loopne
mov
jb
scas
fstl
in
stos
and
rcrl
out
xor
icebp
pop
outsb
out
sbb
push
fcmovnb
nop
xchg
je
lock
pop
adc
xchg
out
mov
adc
ljmp
inc
xchg
cmp
or
mov
push
dec
mov
nop
icebp
in
cwtl
arpl
push
jbe
mov
mov
sub
push
adc
inc
sbbl
imul
mov
xchg
pop
dec
adc
mov
in
sub
jmp
push
aad
loop
push
les
pop
push
in
popa
inc
aad
mov
ds
jno
and
outsb
jg
xlat
pop
movsb
mov
dec
adc
pop
pop
out
sub
mov
fs
test
inc
ret
gs
pusha
dec
inc
pop
mov
xchg
pusha
lods
rolb
cmpsl
icebp
mov
loope
pop
and
mov
jg
push
sbb
orb
jp
push
enter
outsl
add
sbb
mov
cmpsl
adc
xlat
and
imul
xlat
faddl
mov
test
pop
push
cmc
int3
mov
fdivrs
jle
cld
jns
mov
test
lcall
sbbl
dec
incb
lods
xchg
pop
inc
xchg
and
pop
pop
bswap
out
in
add
adc
dec
push
mov
fcompl
sahf
mov
fbstp
mov
mov
jns
dec
sarl
cli
jecxz
xchg
and
xor
call
lret
bound
lods
lods
repnz
call
adc
mov
jl
inc
scas
sub
add
test
sbb
into
sbb
in
roll
mov
mov
mov
sti
or
sub
test
and
imul
push
push
movsl
out
mov
xchg
push
mov
push
repnz
mov
test
ret
adc
mov
lahf
cmp
lret
and
mov
xchg
test
xor
xor
push
xchg
imul
leave
daa
inc
rolb
mov
dec
jo
push
dec
or
mov
into
shrb
lahf
inc
or
pop
mov
ret
sub
mov
cmp
fsubrs
cld
xor
out
dec
test
and
cmpsl
inc
loopne
rol
cli
push
test
loope
pop
pop
test
push
sub
dec
mov
mov
jnp
inc
rcrl
sahf
jecxz
add
jne
xchg
jle
addl
jle
in
push
mov
mov
xchg
pop
mov
lret
cld
movb
fstps
dec
leave
push
pop
stos
ja
push
xor
loopne
es
mov
loope
movsb
mov
push
jnp
test
clc
daa
dec
or
jae
xchg
jge
add
out
test
test
ljmp
sub
outsb
fidivs
sub
dec
jl
ret
or
les
pop
sbb
sub
addr16
mov
imull
lods
fsubrl
inc
mov
scas
stc
adc
iret
xchg
mov
dec
xchg
xchg
sbb
ds
ljmp
pop
mov
pop
mov
enter
in
xchg
lds
xchg
lods
ret
sub
mov
sbb
and
imull
ja
jno
sbbl
arpl
sbb
cmc
dec
int
pusha
dec
xchg
sub
adc
mov
push
inc
add
jg
ljmp
push
dec
push
jp
stos
daa
rcrl
or
out
stos
xlat
inc
push
mov
add
movsb
sti
cmp
pop
jnp
pop
sbb
std
jge
push
or
cmp
sbb
insb
scas
scas
js
test
pop
in
test
push
mov
xlat
out
push
xchg
movsb
pop
fwait
arpl
jp
cmc
out
jle
into
mov
mov
cmpsb
cmp
je
mov
jo
push
add
cmpsl
jle
enter
mov
vsqrtps
xchg
sub
or
jo
inc
inc
jb
lret
cmpsl
jne
sbb
lock
rol
mov
sti
inc
sub
xor
sbb
outsl
outsl
sub
adc
rorb
outsl
push
outsl
in
pop
aas
xchg
jle
clc
icebp
xor
add
xlat
outsl
std
push
test
imul
mov
mov
outsl
jmp
inc
mov
and
movsb
fdivrl
movsl
fnstenv
cmp
mov
cmp
cmovo
push
mov
mov
mov
js
jecxz
popf
lock
xor
add
push
sbb
push
jnp
push
dec
jmp
stc
jg
push
test
and
jo
outsb
aas
loop
sub
jo
pop
push
sbb
sti
rorl
lea
jnp
leave
mov
push
mov
mov
jmp
movsb
xor
pop
add
fsubrs
ss
pop
dec
test
mov
mov
adc
push
jo
sti
inc
loopne
push
in
inc
rcrb
les
shl
mov
dec
ljmp
or
loope
mov
aam
stos
or
repnz
insb
or
lods
xlat
imul
adc
dec
leavew
xchg
cmpsb
jl
xchg
cmpsb
idivl
in
jno
jns
cmc
pusha
fstl
shll
add
iret
les
fisubrs
cs
fdivp
dec
repz
js
sbb
cs
inc
add
sbb
leave
pop
nop
push
imul
adc
dec
enter
dec
push
mov
lcall
ret
vpmullw
cmp
jns
mov
out
int3
mov
mov
mov
sarb
int
stc
pop
loopne
pop
outsb
inc
arpl
or
in
fidivs
add
mov
imul
pop
imul
gs
loope
leave
jne
das
mov
and
and
mov
pop
ss
rcll
pop
xor
ja
and
lea
pop
cmpsb
lahf
add
xchg
fs
inc
and
pop
popf
aaa
test
aad
in
dec
cmc
cmp
insl
lods
int3
pushl
inc
lods
stos
stos
mov
in
in
lods
mov
xchg
jne
ror
xchg
loope
xchg
insb
test
loop
mov
stc
add
jae
add
mov
lods
out
rcl
pop
es
jmp
out
pop
push
add
ror
insl
and
adc
addl
xchg
and
push
scas
jg
sti
and
push
lods
push
jge
cltd
cltd
adc
mov
fwait
or
nop
cld
cmp
fs
sbb
inc
sbbb
push
sub
das
mov
push
mov
xchg
xlat
push
mov
bound
inc
xchg
inc
pop
ljmp
lahf
leave
sbb
inc
imul
mov
call
push
add
mov
adc
sub
inc
icebp
test
imul
mov
mov
arpl
xor
and
dec
sub
out
out
das
xor
imul
les
enter
subl
push
pushf
out
stc
jo
sti
mov
outsb
add
popa
xchg
lds
movsl
and
inc
adc
jae
sbb
mov
aad
hlt
pop
pop
or
adc
jle
mov
sbbb
lcall
dec
shrb
mov
ja
je
hlt
icebp
pop
inc
lsl
dec
and
jne
mov
jnp
mov
mov
das
es
ja
xor
leave
sub
or
push
mov
aam
push
inc
in
fstps
std
sar
clc
and
test
adcl
stc
mov
inc
outsl
xchg
test
xchg
mov
int
sub
push
lods
push
popf
insl
sub
stos
push
in
dec
sbb
lret
pop
add
test
xchg
xchg
lea
int3
scas
call
xor
rcrl
mov
out
mov
xchg
aas
jnp
mov
insl
fidivl
popa
ret
pop
mov
ljmp
aad
mov
xchg
cwtl
lcall
add
jecxz
mov
bswap
nop
out
xchg
jno
daa
test
sub
lret
fisttpll
sbbl
xor
mov
inc
jb
pop
jecxz
fs
enter
bound
or
pop
cmp
in
adc
stc
jmp
mov
shlb
ret
cmp
cs
setne
cs
adc
outsb
pop
jmp
mov
pop
rcrl
mov
jl
sub
push
cmp
je
sbb
jp
movsl
out
sub
cltd
jb
cmpsb
jnp
jmp
xor
xchg
cmp
loop
jns
push
mov
and
test
jle
sahf
sbb
xorb
pop
fidivs
pop
and
scas
pop
mov
mov
ljmp
popa
sub
lret
mov
jle
mov
enter
pop
mov
lea
push
mov
pop
xchg
jge
ret
sbb
orb
sar
lcall
mov
lcall
jp
enter
mov
fsub
push
ret
or
pop
add
pop
and
in
ds
sub
pop
and
cld
popa
test
xchg
xchg
in
jo
loop
lahf
pop
dec
xor
dec
pop
aam
or
mov
out
adcb
cltd
xor
mov
insl
and
das
cs
push
jo
xchg
cmpsb
push
jle
add
pop
ret
mov
sbb
mov
push
jo
or
and
fsubrl
cmpsb
in
cltd
add
bound
cmp
sub
cwtl
imul
sbb
xor
aam
popa
out
pop
inc
lods
jg
cmp
cmc
push
and
xor
pop
mov
push
adc
out
mov
push
ja
inc
jb
icebp
push
fcmovnb
mov
xchg
lcall
repnz
pusha
pusha
clc
insl
add
cltd
scas
mov
inc
adc
fstps
lock
les
cmp
adc
es
fwait
out
pop
out
inc
push
or
popa
das
push
cld
cmc
push
mov
xor
pop
cmp
fidivrl
pop
stos
scas
bound
stos
push
repz
adc
sbb
fisttpl
adc
mov
ljmp
push
fbstp
mov
cmp
inc
lret
lods
add
jge
mov
daa
inc
mov
jae
sub
mov
test
mov
fdivrs
fstps
or
jmp
fistps
pop
cmpsl
clc
adc
shl
add
sbb
push
leave
cmp
mov
jo
imul
inc
push
imul
insb
dec
xchg
stos
add
cmp
xchg
out
js
repnz
xlat
std
cli
sub
xor
jnp
cli
cmp
pop
adc
sbb
jmp
and
orb
jbe
mov
fs
and
sub
fwait
int
cmp
push
imul
stos
rorb
xor
rorl
subb
jno
in
dec
les
xor
mov
scas
test
data16
inc
jb
ret
mov
mov
aad
addb
sbb
sub
adc
ja
sub
sti
mov
xchg
jg
into
lock
insl
sti
or
pop
repnz
scas
xchg
pop
pushf
push
add
sub
add
jge
lock
testl
lods
out
dec
adc
sbb
outsl
and
inc
push
add
dec
pop
xchg
lcall
jnp
stos
nop
test
and
or
cmp
xor
cwtl
lret
popa
dec
fldl
std
dec
xchg
pop
xchg
xchg
cltd
jg
or
pop
outsl
push
jne
shrl
test
lock
sub
les
test
xchg
xchg
fadd
jecxz
add
fistpl
adc
bound
loop
int
jo
lods
stos
pop
add
push
push
std
pop
push
sbb
xchg
jbe
movsb
je
sarb
mov
xchg
lods
add
sbb
pop
fdivl
mov
pop
pop
pop
fidivl
scas
lods
stos
push
xor
insl
mov
jge
jecxz
xor
mov
std
inc
inc
pop
dec
jge
jmp
jecxz
xor
rcll
sbbb
dec
loope
dec
dec
loop
in
jmp
dec
jp
jnp
mov
out
int
xchg
lea
mov
bound
sub
push
mov
pop
icebp
sbb
test
sti
cmp
add
ficomps
sub
cltd
adc
push
jp
dec
mov
dec
adc
and
xchg
cmc
negb
jl
pushf
ret
adc
dec
mov
and
or
gs
ss
push
fwait
push
xchg
mov
cli
hlt
dec
dec
int3
push
add
inc
mov
dec
aas
in
nop
sub
dec
or
filds
fsubrl
mov
mov
aad
mov
xchg
cmp
inc
std
lret
jp
stos
ss
cmp
jno
push
mov
jl
sbb
decl
adc
mov
sub
cmpsb
insl
pusha
out
xor
and
test
push
ret
mov
or
mov
fld
leave
sbb
xlat
test
pop
inc
int
adc
pop
jb
push
sub
cmpl
xlat
mov
fs
neg
inc
aaa
aam
mov
mov
gs
mov
add
test
pop
in
movsb
pusha
mov
cmp
loopne
and
cmp
sub
mov
mov
adc
or
movl
sahf
sub
jo
insl
fmuls
cld
mov
lret
fs
sbb
cmp
or
out
xor
mov
cmp
les
sub
mov
cmpsb
mov
inc
test
xorl
or
sti
pop
push
xchg
aaa
outsl
push
es
adc
leave
nop
jb
mov
inc
jae
mov
add
movsl
fcmovnu
lods
dec
pushf
pusha
and
or
sub
in
adc
andl
pusha
inc
mov
fimuls
mov
jb
ljmp
xchg
mov
jecxz
movsb
cltd
xchg
insb
dec
jnp
dec
not
xor
sbbb
ljmp
shr
pop
jno
pop
filds
pushf
xor
mov
jmp
in
roll
icebp
add
in
xor
mov
add
and
mov
sbb
insb
sbb
icebp
xchg
push
ret
add
adc
cmpsl
fisttpll
inc
imull
addr16
dec
movsl
mov
fucom
mov
pushf
add
or
mov
dec
cwtl
sbb
jecxz
pop
in
and
dec
add
pop
sub
test
sbb
jp
sbb
incb
inc
ja
push
leave
enter
sbb
mov
daa
adc
pushf
mov
hlt
pop
mov
mov
enter
add
sarb
into
inc
stos
nop
in
xchg
mov
mov
push
loop
sbb
cmc
ss
pop
push
xor
xor
popa
sbb
dec
jp
out
and
faddl
rcr
mov
adc
xor
sub
adc
adc
cmp
add
sbb
and
push
jns
rcll
ljmp
data16
jae
in
in
or
les
lret
cmp
bnd
jbe
mov
mov
jbe
jb
iret
sbb
test
xor
ja
leave
add
mov
xchg
mov
or
mov
adc
popa
mov
loopne
cmpl
mov
xorl
sti
fdivs
fcmove
xchg
leave
cmp
ja
std
test
cmpsb
adc
adc
mov
negb
std
leave
pshufw
mov
mov
inc
lods
mov
xor
test
and
stos
mov
add
push
mov
push
pop
jmp
imull
into
pusha
test
es
fbstp
pop
sub
push
adc
in
popf
inc
mov
bound
pop
add
jp
out
mov
ja
mov
xchg
aaa
adc
cmpsb
clc
add
inc
mov
jmp
inc
in
cmp
inc
in
test
pop
mov
jge
shll
jmp
mov
fmuls
aaa
pinsrw
lods
loop
daa
pop
push
xchg
icebp
jecxz
in
adc
in
mov
dec
add
mov
call
mov
jo
xor
fwait
xchg
dec
movsl
sti
lret
insl
and
jne
add
repnz
mov
push
ja
jle
pop
adc
jmp
test
arpl
xorl
or
fstp
dec
lds
leave
test
adc
sbb
dec
dec
pop
cli
mov
mov
and
mov
rclb
call
dec
add
sbb
adc
fdivr
in
fsubl
pop
and
cld
and
add
push
fmull
mov
cld
fimuls
inc
ljmp
shr
cmpsl
push
fwait
das
cmpsl
shlb
add
xchg
int
loop
and
das
jo
xchg
jp
fs
les
lret
xor
testb
xchg
rorb
int3
loopne
xor
add
inc
clc
mov
pop
mov
cmpsl
xchg
xchg
push
cmpsb
sti
add
sbb
and
xor
daa
fs
push
addb
in
nop
xchg
fwait
mov
add
mov
jg
xor
or
fsubrs
out
mov
shrb
pop
or
push
push
jo
sub
popa
in
adc
or
shll
mov
inc
imul
adc
jmp
sub
mov
xlat
popa
int3
push
das
cmp
sub
insl
cmpb
or
jmp
mov
shll
inc
mov
ss
push
aaa
div
cmpl
movsl
cltd
or
add
mov
lahf
in
sbb
xchg
cs
xchg
adc
sbb
dec
fs
test
dec
lock
mov
out
jg
mov
test
lret
test
sub
in
out
mov
outsb
cmp
mov
push
in
push
lods
mov
imul
pop
sub
adc
lret
subb
insl
mov
adc
dec
jae
fldl
inc
sti
sub
xor
scas
in
movl
aam
cwtl
stos
movsl
les
lahf
scas
jl
jno
mov
lret
mov
and
mov
mov
sahf
das
push
call
mov
insl
mov
ret
lret
lret
adc
dec
sbb
cs
inc
or
pop
outsl
testl
pop
push
insl
add
xor
ficoml
enter
mov
mov
fimull
mov
cmpl
in
movsl
dec
sub
gs
add
fistpl
sub
jg
mov
push
mov
sbb
mov
ficompl
lock
cwtl
into
jge
faddl
sbbb
add
xchg
cmp
inc
xorb
fwait
xor
or
dec
cs
mov
test
inc
mov
ds
and
dec
enter
sub
es
inc
dec
pop
push
sub
cmpb
fldt
lock
es
mov
xchg
das
mov
push
daa
dec
loop
out
push
ret
mov
jp
jp
mov
and
mov
add
or
lahf
push
sbb
rol
adc
shlb
push
push
clc
pusha
popa
sbb
sbbb
or
jg
icebp
fdivp
in
xchg
jmp
add
adc
movsl
jnp
fisttpll
push
sti
pop
xchg
lds
lds
push
push
stc
mov
movsb
push
mov
mov
clc
movsb
pushf
jnp
pop
adc
push
into
lret
arpl
pop
loop
sub
cli
clc
aam
inc
call
pop
sbb
xor
cmpsl
or
lcall
inc
repz
stos
insl
push
fidivs
inc
js
aad
fsubl
lahf
sbb
cmp
push
pop
mov
arpl
push
insb
imul
mov
push
dec
jne
cmc
xchg
inc
pop
or
aam
mov
dec
popf
out
in
cmp
aas
xor
rorl
mov
sar
mov
sub
jmp
jle
mov
xchg
add
dec
jns
rcll
mov
jp
pop
pop
push
dec
aas
mov
shll
clc
mov
xorl
cmc
jns
sub
jg
repz
add
jbe
movsb
out
scas
dec
xor
xor
nop
inc
mov
mov
adc
sub
mov
pushf
dec
push
adc
outsb
mov
adc
sbbb
fisubs
mov
mov
daa
or
jbe
adc
popa
cmp
int3
mov
loop
loopne
int
xchg
mov
data16
cwtl
stos
daa
jno
fwait
out
xor
popf
shl
push
push
arpl
shll
dec
adc
das
out
jl
mov
mov
out
cmpsb
enter
dec
inc
stos
fucomp
jmp
xor
pop
fildl
cmp
adc
mov
cmp
jle
or
pop
sbb
push
pusha
jbe
subb
add
xlat
mov
sub
pop
jb
enter
add
arpl
push
cmp
fnstenv
cwtl
jne
scas
pop
mov
or
xor
push
or
int3
adc
and
or
dec
xchg
adc
jb
cmp
test
jle
test
jbe
ljmp
in
aam
xorb
inc
iret
adc
mov
xor
xor
arpl
gs
ret
mov
mov
cli
shll
lret
sbb
mov
sbb
scas
sti
pop
sub
movl
fdivs
jge
mov
pushf
inc
jmp
and
or
pop
xchg
push
in
jle
xchg
inc
repnz
or
jnp
mov
fisttpll
jae
scas
pop
lds
xchg
nop
mov
sub
mov
mov
xchg
mov
sbb
cmpsl
loope
popa
xlat
mov
fidivs
pop
add
outsl
sbb
inc
mov
mov
adc
mov
pop
mov
sbb
mov
lahf
xor
sbb
push
adc
cmp
mov
xchg
xor
inc
sahf
addl
imul
roll
clc
cmpsb
and
add
cmp
inc
push
push
lss
ja
dec
arpl
movsb
fdivs
loop
adc
or
xor
push
into
call
aas
andb
mov
les
or
xchg
mov
mov
outsl
out
lods
gs
imul
pop
lds
dec
repz
fnstcw
inc
aam
pop
cmc
insb
sbb
mov
adc
push
xchg
pop
stos
imull
test
mov
or
add
add
subb
rol
push
sbb
add
dec
loope
insb
pop
sbb
sub
or
mov
call
icebp
out
inc
pop
lods
inc
cld
scas
frstor
pop
add
adcb
shll
shll
jnp
mov
mov
pop
iret
movl
cmp
cmpsb
and
imul
jno
xchg
cmpb
cs
imul
dec
dec
sbb
lret
lea
movsl
xchg
and
mov
aad
in
cmovnp
xchg
dec
push
loop
popa
repnz
push
mov
xor
imul
lret
jno
fldcw
jne
xor
mov
sub
push
push
pushf
or
sbb
xor
push
dec
cli
ret
adc
addr16
scas
gs
movq
movl
xor
adc
xchg
mov
mov
mov
lahf
and
dec
sarb
ja
movsl
int3
cmp
lods
lcall
dec
pop
sbb
push
jg
pushf
rcl
out
xor
pushf
loopne
inc
jno
push
gs
repnz
pushf
xchg
xor
push
mov
fs
mov
std
sbb
mov
mov
mov
mov
rcr
ljmp
stos
mov
add
jg
push
mov
pushf
bound
leave
sub
pop
sbb
insl
cli
out
outsl
dec
in
jbe
inc
mov
pop
ljmp
ret
jne
or
aas
ficomps
or
xchg
cmpsb
popf
out
cli
cs
mov
movsl
in
jae
out
xchg
shrb
aaa
mov
add
cltd
sbb
stos
gs
jg
and
xor
add
stc
xchg
ds
pop
cltd
test
cmpl
jp
and
test
cmp
add
xor
mov
pop
adc
popf
adc
cmp
mov
scas
push
inc
sbb
jecxz
sbb
fsts
or
jle
iret
test
cmp
ret
in
ret
inc
fnstenv
scas
outsb
movsl
or
andb
stc
ja
sbb
icebp
enter
popa
mov
movsl
jo
loop
pminsw
pop
and
push
push
paddusb
dec
sub
mov
jno
aad
sbb
mov
xor
cmp
push
roll
rcrb
sahf
jnp
xchg
in
in
repnz
xor
ljmp
add
fs
lock
inc
push
test
das
xchg
xor
subl
mov
mov
xchg
int3
outsb
int3
mov
pop
cmc
addr16
add
in
pop
into
push
inc
or
lock
add
mov
and
insb
dec
nop
adcb
in
mov
cmc
and
pop
dec
push
add
nop
repnz
mov
jmp
movsl
repnz
repz
pop
mov
ret
cmp
mov
stos
add
jmp
je
imul
mov
gs
inc
or
fimull
bound
mov
xchg
or
shll
mov
or
lea
and
imul
shll
outsl
inc
mov
rorl
int3
add
fs
repnz
xchg
enter
mov
hlt
mov
adc
pxor
subl
jge
incl
add
push
pop
test
mov
mov
in
mov
test
mov
adc
jo
jne
xor
mov
std
aad
mov
outsb
ret
nop
push
inc
push
rorb
mov
mov
out
mov
ud2
fdivrs
add
cmp
cmp
mov
mov
push
out
sub
ljmp
pop
hlt
and
add
push
js
lods
test
sti
inc
out
insb
loope
ljmp
dec
adcl
test
pop
iret
sbb
push
and
jl
inc
arpl
push
addr16
lret
loope
pop
xor
fsubrl
movsb
lcall
in
rcl
fiaddl
pop
add
mov
gs
cmc
mov
pop
pop
lods
rorb
mov
jg
ror
inc
adc
xchg
movsb
insb
add
enter
cmc
sub
test
mov
movsl
sub
mov
push
mov
jae
rclb
or
dec
sub
add
or
mov
dec
xchg
push
xor
decb
mov
mov
in
cmp
xchg
jbe
xchg
repz
jl
push
out
repz
jg
add
jae
and
add
jne
cmp
mov
cmp
leave
clc
cltd
xchg
fisubrl
das
call
xor
insl
repnz
les
into
out
out
xor
mov
jge
xlat
xor
in
movsb
test
jmp
fs
sbb
mov
fwait
adc
and
cmpsb
lea
ljmp
or
sub
lahf
add
loope
add
movsb
inc
adc
in
cmpsb
xlat
adc
mov
and
mov
stos
push
or
sbb
add
cmpb
mov
loop
add
mov
sbb
pop
or
or
sub
add
inc
push
js,pn
std
adc
insl
in
test
pop
mov
adc
jbe
jno
cmp
js
mov
sbb
pop
sahf
out
push
outsb
icebp
hlt
mov
inc
dec
or
insb
repnz
ljmp
int
sub
xor
sbb
push
ja
xchg
xchg
rorb
into
js
sub
enter
inc
cmpsl
jg
addb
movsb
shlb
push
lret
mov
shll
dec
sti
cmp
jnp
repnz
subl
scas
call
xorl
movsb
inc
rcrb
fiadds
lcall
or
xchg
dec
and
fcoml
je
loopne
dec
jb
pop
cmp
pusha
inc
mov
cltd
jge
in
jo
lret
mov
push
jg
outsl
rcrb
pop
aad
loope
jno
xchg
sbb
xchg
lahf
insl
in
or
xor
pop
pop
mov
testl
push
leave
imul
push
push
into
adc
xlat
ljmp
ret
xchg
mov
leave
xchg
xchg
bound
xchg
aam
test
jno
mov
sbb
cmp
sub
nop
pop
ljmp
mov
mov
fnsave
shrb
lods
repnz
pop
cmc
in
cmp
adc
into
xchg
jne
mov
or
fstl
inc
mov
int3
cmp
lahf
pop
adc
jmp
sub
cld
jne
gs
mov
scas
cmc
xor
cmp
xor
pop
loopne
or
aad
int
in
mov
or
incl
mov
cmp
xchg
inc
outsl
xchg
lds
mov
icebp
sti
gs
inc
sbb
sub
mov
pop
insb
push
xlat
stos
push
jge
jno
mov
cmp
sbb
push
loop
cmp
xchg
test
mov
shlb
arpl
jno
rolb
cld
enter
pop
sbb
mov
cmp
or
loopne
xchg
inc
xchg
jbe
mov
adc
pop
and
cmp
shl
push
mov
jnp
mov
pushf
cltd
repnz
out
in
inc
mov
push
and
pop
clc
sbb
jmp
jle
add
add
and
roll
leave
xorl
pop
jno
fcmovnbe
pusha
js
jb
cmpsl
ret
mov
out
hlt
mov
cmp
pop
inc
mov
cmp
pushf
shrl
cli
push
or
in
jns
and
loop
dec
jb
lcall
cmp
push
jmp
jbe
xor
fisttpll
adc
pop
fdivl
ret
lods
lods
adc
addr16
cs
lret
les
or
jecxz
mov
xor
jge,pn
mov
xchg
inc
inc
sbb
or
push
inc
test
mov
sbb
inc
push
lea
cmpb
mov
or
gs
mov
cmpsl
in
adc
insb
xchg
lds
shlb
push
inc
rcrl
out
lods
sbbb
test
pop
dec
out
xchg
mov
imul
mov
pop
pushf
nop
iret
mov
cmpsb
out
js
dec
stc
fildl
and
pop
repz
int
repnz
fisubrs
cmp
and
sti
pop
mov
jnp
xchg
icebp
adc
jmp
push
cld
jns
movl
xor
insl
fstps
mov
jne
je
cmp
and
add
xor
cmc
cmp
clc
mov
pop
roll
inc
test
or
mov
cld
and
lcall
push
xor
lds
cmp
dec
fsqrt
fdivr
dec
lods
mov
clc
int3
fsubs
ja
adc
cmp
inc
lret
adc
nop
jne
and
push
mov
frstor
pop
and
cwtl
loope
adc
pusha
popf
sbb
xor
push
ret
mov
cmpsl
inc
xchg
pop
xchg
out
loopne
aam
nop
addr16
dec
mov
mov
dec
xor
out
lret
outsl
dec
jle
jg
rorl
stc
arpl
fbstp
lret
iret
cmc
loop
xchg
fwait
cltd
inc
loop
popf
hlt
xchg
cmp
mov
sbb
sarl
std
inc
sub
rep
data16
test
enter
mov
mov
add
push
arpl
outsl
mov
ja
loop
pop
pop
xchg
cmp
leave
xor
mov
out
mov
rorb
dec
addr16
mov
mov
xchg
add
sbb
outsl
xor
add
cmp
inc
push
es
inc
fs
loope
addr16
pop
sahf
jecxz
dec
outsb
test
std
push
or
or
push
mov
fmul
pop
pop
aad
mov
jp
ja
movsl
sbb
or
sbb
mov
jns
mov
cli
movsl
pusha
adc
fstpl
xor
mov
frstor
addr16
iret
inc
push
push
sbb
cltd
movsl
sahf
and
arpl
fidivrs
inc
scas
jbe
inc
fdivrp
push
fisubl
dec
add
out
jno
add
mov
adc
es
sub
adc
push
jge
jno
dec
mov
and
xor
insb
imul
add
imul
scas
inc
cs
aam
int3
clc
ss
and
dec
jno
lea
sub
xor
cmp
push
xor
jp
rolb
std
and
cmp
xor
mov
sub
xchg
inc
sub
js
inc
add
movsl
lods
loopne
jge
fstpl
sub
je
fs
in
sbb
shrl
pop
mov
scas
lock
mov
cld
add
cmp
lcall
pop
push
and
ret
lea
je
insl
jne
jmp
mov
add
push
dec
push
pop
imul
inc
sbb
jl
pop
inc
int3
cmp
arpl
add
mov
pop
inc
xor
ret
movsl
mov
ss
xchg
cmpsb
xchg
addr16
dec
or
cmovno
rorb
push
dec
fidivrs
adc
pop
ss
xchg
arpl
cmp
mov
mov
cmpsb
subl
push
jecxz
mov
inc
or
cltd
pop
pop
push
xchg
sbb
xor
push
cmpb
aad
call
mov
fimull
adc
out
or
xchg
mov
dec
out
jle
mov
stos
sbb
shl
mov
xchg
sub
dec
jp
mov
jge
and
cwtl
jmp
mov
mov
cmp
mov
fildl
lcall
push
jne
push
add
add
and
xor
push
shlb
adc
orb
xor
cs
test
aam
sub
mov
pop
pop
std
decl
push
rcll
sub
fdivl
or
mov
mov
and
add
add
jmp
xor
pushf
les
cmovl
and
add
sub
pop
imul
sbb
lods
cli
cli
jo
fsubs
jmp
repnz
xor
test
aaa
push
loope
mov
test
call
mov
dec
arpl
dec
test
mov
mov
rcr
pop
pop
lods
jo
sbb
dec
sub
fisttpl
mov
mov
hlt
mov
sub
inc
mov
pop
xchg
hlt
mov
inc
jb
adc
xor
rclb
out
addr16
outsb
cmp
sti
aaa
jmp
aas
cwtl
mov
call
mov
in
jmp
mov
or
mov
adc
xchg
adc
lea
push
inc
mov
jle
pop
xlat
ret
dec
sub
mov
dec
int
adcl
inc
int
bound
out
push
sbb
popa
loop
mov
jne
leave
and
cmpsb
in
enter
dec
adc
push
rcll
push
mov
dec
out
cmpsb
mov
or
sbb
fmuls
jbe
cmp
stos
cmpsl
rcr
xlat
mov
lret
jns
ret
push
loop
aaa
popf
sbb
sub
mov
or
and
inc
mov
out
enter
shrl
mov
jo
add
lretw
or
arpl
xchg
mov
hlt
jmp
fs
xor
add
mov
ficoms
dec
cwtl
repz
das
enter
mov
jbe
push
and
mov
out
mov
mov
js
divl
xor
mov
hlt
sub
adc
inc
push
imul
ret
mov
pop
sub
fisttps
call
sbb
mov
pop
mov
inc
fistl
lret
daa
jge
sub
cli
andb
in
sub
inc
xchg
cmpsl
stc
push
inc
push
pop
mov
mov
aaa
pop
adc
aam
fmuls
xor
mov
nop
pop
cmpl
ss
push
enter
dec
loopne
mov
fsqrt
add
dec
xor
xchg
std
dec
jmp
cmp
xor
out
push
test
mov
int3
mov
insl
movsl
jle
mov
push
data16
popa
lods
and
sbb
dec
lcall
inc
jg
test
add
push
andl
test
ja
dec
xor
les
xchg
pop
mov
jge
push
mov
dec
dec
in
rcll
add
sub
hlt
xchg
sbb
jne
xor
xchg
int
pop
mov
dec
movsb
pop
sbb
add
insl
xor
mov
xchg
jp
in
sub
pop
stos
enter
xchg
outsb
sarl
sub
mov
push
lret
mov
gs
andb
mov
bound
lods
stc
lret
stos
adc
cmp
rolb
xchg
inc
jp
lea
sahf
jl
mov
add
push
xor
in
cmpsl
add
movsb
sahf
ret
add
cmpsl
mov
cmp
and
mov
push
jo
push
mov
pop
pop
jns
cmp
jno
mov
dec
adc
dec
sub
sbb
rorl
add
stos
push
mov
add
test
or
mov
sub
int3
lret
stos
movsl
jge
loope
pop
jbe
cli
or
xchg
mov
sbb
call
jmp
repnz
leave
bound
outsb
arpl
xor
dec
mov
cmp
pop
inc
jecxz
xchg
inc
scas
mov
mov
add
cwtl
int3
lods
fwait
pop
cmp
lret
out
sub
cmpsl
jne
mov
jg
inc
leave
in
cli
sub
mov
inc
xchg
loopne
push
jno
mov
mov
call
dec
pop
outsb
outsb
shll
lods
xor
xor
add
pusha
int
xor
rorl
dec
jns
das
mov
or
mov
add
adc
xor
mov
cmp
jle
or
pusha
sbb
push
leave
insb
or
mov
or
lret
pushf
sti
pop
pop
mov
pop
addb
push
cmp
mov
adc
dec
jmp
outsl
pop
inc
mov
inc
pop
mov
jbe
out
shl
sbb
jp
and
cmp
jb
out
add
decb
xchg
sbb
inc
out
jecxz
sub
je
cmp
jb
sub
adc
pop
movsl
sahf
xorb
mov
and
sbb
adc
js
imul
test
test
fcomip
subl
out
inc
mov
scas
or
inc
pop
jp
repnz
push
or
lahf
sbb
lret
push
add
fists
mov
xchg
mov
clc
aas
push
les
jnp
adc
adc
jno
mov
add
jne
fstpt
inc
mov
cmp
ftst
mov
and
mov
ret
sbb
mov
mov
mov
fcoml
mov
fcoml
xlat
jg
inc
jl
dec
mov
mov
into
fwait
out
inc
mov
mov
out
cmc
dec
int3
push
ret
sub
or
pop
dec
test
or
fdivrs
stc
test
movsl
sub
xor
jb
sahf
int3
mov
dec
roll
test
mov
jmp
xor
daa
hlt
xchg
lcall
in
dec
push
int3
jge
ret
mov
sub
sbb
aam
cmp
shll
push
bound
fwait
xlat
xchg
mov
xchg
jecxz
xchg
cmp
loope
sub
push
mov
sub
hlt
add
loopne
aam
ret
xor
xchg
xchg
dec
sub
fsubrp
xor
xor
and
ds
and
or
lods
inc
fnsave
sti
int3
les
in
cltd
push
and
cmp
in
cltd
sbb
mov
xor
stos
test
dec
nop
pop
push
insb
sti
lock
stc
insb
xchg
dec
push
rcl
inc
repnz
mov
xor
sub
pop
lcall
dec
mov
and
push
or
test
dec
sbb
dec
dec
pop
std
adc
inc
push
das
mov
loopne
int
rclb
jb
js
movsl
jnp
mov
and
xor
push
push
mov
cmp
sbb
pop
nop
loop
lea
mov
add
mov
sbb
mov
adc
cmp
push
or
and
mov
inc
scas
inc
lret
pop
aas
fmull
fcoml
aaa
mov
in
fldt
jmp
js
int3
sbb
mov
cmpsb
add
fcoms
lock
stos
outsl
test
push
bound
xchg
push
rol
and
neg
xor
ljmp
mov
cmp
xor
cld
addb
scas
lahf
movsl
cmpl
or
push
xchg
imul
mov
leave
notl
sub
xor
inc
push
insb
push
xchg
cmp
fxch
nop
xchg
loopne
jno
ds
popa
push
test
addb
mov
inc
nop
int
push
arpl
jno
loopne
stos
jo
movsb
mov
and
push
dec
cmp
sahf
or
cmp
stc
push
mov
xchg
loop
movsb
sahf
mov
lock
in
push
push
rcr
stos
out
mov
push
or
cmp
loop
sahf
leave
sbb
dec
aaa
out
sti
cmpsl
cmpsl
orl
add
icebp
lock
shll
mov
sbb
in
sub
pop
adcb
xchg
jecxz
sbb
repz
lret
popa
mov
inc
dec
iret
add
js
mov
adc
dec
mov
pop
aas
pop
pop
call
test
xor
dec
dec
pop
pop
push
fwait
out
cmp
aaa
jp
jno
scas
into
inc
in
lods
test
data16
sbb
and
js
arpl
inc
mov
xor
fstpl
sub
adc
daa
and
push
stos
es
dec
int3
das
les
dec
addr16
out
scas
enter
rcrl
push
mov
sbb
repz
add
sub
xchg
fld
inc
ret
and
or
aas
sub
aaa
mov
das
call
fs
insl
push
inc
aad
lds
sahf
xchg
sub
push
mov
cmpsl
divb
adc
pusha
jne
mov
xchg
adc
push
cltd
jno
in
mov
enter
lcall
in
inc
add
add
or
icebp
mov
aaa
clc
dec
inc
mov
test
dec
and
xchg
rol
rolb
sub
aas
push
jns
inc
xor
add
nop
xchg
sub
push
or
divl
push
iret
hlt
pusha
push
outsb
ret
inc
pusha
test
xchg
pop
add
aad
enter
fwait
adc
mov
inc
je
mov
cmp
sbb
lock
adc
outsb
mov
imul
pop
loope
shlb
idivl
inc
rclb
mov
movsb
and
cmp
out
mov
or
aam
mov
cld
push
push
xlat
out
lds
mov
sub
sti
mov
push
mov
mov
jno
sbb
das
dec
out
into
mov
das
xor
fstl
shll
jmp
mov
dec
daa
mov
shlb
out
addr16
inc
mov
jecxz
ljmp
stos
roll
stc
into
imul
pop
cltd
rorl
sub
xchg
cmpsl
fsubs
in
clc
int
mov
add
insl
mov
add
cmp
enter
xchg
add
stc
cmp
mov
dec
repnz
push
sbb
sbb
xor
insb
dec
insl
inc
inc
or
mov
int3
mov
imul
popf
cmpsb
xor
pop
sub
adc
insb
cmc
cmp
dec
cli
lcall
shll
and
adc
ret
cmp
ret
outsb
out
testl
add
in
mov
ja
popa
test
rol
rcrl
mov
lock
out
sbb
dec
dec
imul
sti
jb
pushf
adc
push
add
lret
or
push
aas
mov
cmp
or
aam
or
and
sbb
sub
into
jp
popa
out
mov
fdivs
xorl
dec
out
out
xchg
dec
lsl
inc
mov
and
sbb
rclb
or
adc
popa
dec
fldl
int3
inc
adc
xchg
scas
push
xchg
out
xor
out
shrb
out
push
in
inc
push
inc
adc
jnp
int3
shll
mov
inc
pop
aam
mov
lret
rorl
mov
or
mov
jl
mov
pop
lret
add
iret
or
in
rorl
ficoml
fmulp
xlat
decl
cmpb
mov
out
mov
cmp
push
in
inc
jecxz
ret
add
push
hlt
lods
ds
push
gs
scas
add
fwait
scas
dec
clc
add
or
outsb
add
xor
movsb
adc
push
xor
xor
sar
jecxz
mov
pop
pop
push
imul
sbb
push
stos
out
adc
lret
add
push
or
or
inc
cs
fsts
mov
fsubrl
movsb
add
ja
add
stos
lahf
jno
stc
xchg
in
cmpsb
mov
pop
test
insl
mov
mov
notb
popf
jl
inc
iret
inc
push
rcrb
inc
push
nop
xchg
stc
mov
enter
ds
xor
jg
and
xor
roll
imul
mov
rcll
adc
das
in
xor
mul
sbb
pushf
cmpsb
ljmp
cmp
jl
cmp
xchg
xchg
mov
fcomip
mov
and
xchg
rcr
cltd
popa
mov
repz
adc
xor
cld
pop
leave
mov
jno
insl
faddl
pop
test
aad
ficoms
jne
cmp
mov
and
out
pop
dec
inc
cmp
add
mov
mov
outsb
pop
pop
pop
adc
sbb
lahf
push
sub
xor
std
jae
push
jl
push
movl
push
xchg
flds
xor
fstl
cwtl
movsb
and
jmp
dec
pop
inc
push
std
cmpsl
nop
cmp
mov
mov
pop
enter
sti
les
in
or
arpl
mov
xchg
rcr
inc
imul
je
pop
test
pop
ret
mov
lods
cmp
out
shlb
add
lret
jle
ret
loope
pushf
pushf
lea
rol
jg
ret
jbe
outsb
pop
lahf
push
inc
cmp
into
pop
jp
xor
rolb
xor
aas
push
out
jno
rcrl
out
aaa
pop
mov
pop
push
je
xchg
enter
test
in
xorl
andb
push
clc
ss
xorl
addb
rclb
dec
and
inc
jb
mov
insl
sbb
push
jo
cmp
mov
test
xchg
daa
mov
xlat
push
scas
shlb
jae
call
mov
push
inc
pop
xor
sub
adc
imul
mov
push
inc
lret
mov
sub
fdivrl
push
jl
shll
sub
dec
xchg
push
add
add
loope
dec
popa
aas
fsubl
in
mov
fs
imul
adc
aas
push
daa
mov
in
push
hlt
orl
add
hlt
xchg
mov
inc
cmp
scas
and
scas
xor
scas
push
inc
popa
mov
dec
sbb
or
push
adc
mov
aam
pop
mov
xor
inc
ja
mov
xchg
and
das
mov
dec
enter
pop
shlb
inc
or
ds
mov
sti
enter
js
cmp
xor
jecxz
push
sbbb
or
bound
sub
cltd
push
mov
mov
dec
movsl
rclb
pop
inc
in
fwait
jge
insb
xor
cld
sbb
pop
movsb
jno
pop
sbb
imul
loop
aas
add
push
les
shlb
fadds
pop
push
nop
and
loop
insb
ret
xchg
adc
adc
jne
mov
test
out
repnz
mov
movsb
xor
jl
jecxz
jecxz
jae
add
xor
pop
hlt
push
pusha
mov
xlat
dec
daa
mov
nop
mov
ljmp
scas
dec
mov
and
cmpsl
insb
fcmove
mov
xor
push
xchg
pop
jp
repz
inc
icebp
inc
cmp
push
sub
popa
repz
pop
icebp
shrb
icebp
cmpb
fs
xor
mov
push
inc
in
iret
shrb
push
lds
outsb
xor
jnp
out
popa
jmp
hlt
dec
jno
mov
xchg
cmpb
cmp
jge
stc
testb
rorl
xchg
jge
jl
adc
ss
imul
fwait
push
and
push
inc
ljmp
cmpsb
mov
adc
jno
xorb
in
ret
dec
int3
cs
sbb
rcll
test
and
sbb
ret
fcoms
cs
sbb
sar
popf
leave
inc
insb
mov
lock
cmp
mov
dec
jbe
cmp
pop
cmp
and
jno
xor
cmp
mull
shll
jbe
mov
out
ss
movsl
das
fs
mov
xchg
test
pusha
mov
jnp
hlt
es
cs
jae
mov
iret
aas
mov
sub
xor
int3
mov
insb
and
cmc
into
adc
fidivs
mov
mov
jge
stos
mov
cs
nop
cld
sbb
das
aas
fbstp
push
roll
lret
es
jp
xor
jg
in
cmpsl
test
loope
aaa
push
icebp
pop
push
jnp
cmp
aaa
test
adc
push
out
out
mov
loopne
push
and
add
cmp
or
mov
adc
xchg
or
sarb
loopne
sbb
mov
cmp
jmp
pop
sti
sti
mov
shll
imul
pop
test
push
mov
nop
pusha
mov
lods
test
adc
adc
xor
rorb
test
leave
fidivrl
aas
fisubl
mov
xor
pushf
adc
out
cmpsb
or
sub
push
bnd
fnsave
pusha
jae
les
cltd
add
fcoml
jge
out
mov
push
or
cmc
cmp
inc
cld
sahf
ss
imul
and
loope
push
sub
pop
dec
adc
fisubrs
cmpsb
xchg
mov
xorl
push
mov
pusha
mov
cmp
push
and
leave
bound
out
cli
push
xor
aam
mov
cmc
and
sti
int
push
and
mov
adc
test
sbb
dec
pop
cmc
xchg
fsubs
push
loopne
jp
sbb
test
xor
push
bswap
rolb
repz
in
mov
nop
jmp
les
aas
inc
mov
inc
repz
notl
or
xchg
loope
sbb
mov
sbb
mov
in
pop
js
add
aaa
inc
mov
imul
add
add
add
scas
pop
add
outsl
loope
pop
loopne
call
cmp
xchg
mov
movsb
jmp
lahf
pop
movsb
in
sub
movl
push
fs
sbb
les
gs
mov
test
mov
lahf
sarb
lret
mov
jg
xchg
adc
ja
cltd
cwtl
cmpsl
leave
sub
add
stos
out
xchg
xchg
and
ss
cmovno
popf
push
loop
je
mov
push
push
jne
pop
stc
fwait
cltd
test
sub
dec
loope
xchg
ljmp
xor
cmp
int
fistps
ss
sbb
aaa
add
cmp
sahf
mov
pop
mov
or
mov
out
inc
in
mov
or
pop
cmp
mov
in
call
gs
mov
add
sbb
dec
jp
xchg
xchg
jae
faddl
xchg
xchg
loopne
inc
xchg
es
xchg
add
add
ljmp
out
mov
push
lea
xor
sar
fimuls
shl
in
test
sub
pop
adc
pusha
js
iret
cmp
adc
mov
loope
adc
rcrl
idiv
iret
mov
sti
adc
addr16
lods
lahf
int
es
dec
enter
xchg
add
add
mov
xor
pop
call
mov
xor
out
or
in
fbld
ss
aas
cmp
adc
shlb
mov
jnp
push
add
mov
sbb
inc
adc
clc
xchg
rcr
add
insl
xor
scas
lds
push
daa
ja
divb
sbb
jecxz
outsb
mov
cmpsb
ja
aad
das
nop
aam
adc
sub
popa
add
mov
repz
pop
out
lods
pop
test
adc
inc
mov
mov
jbe
cmc
xlat
sub
adc
loop
adc
cmc
test
adc
outsb
aam
rcl
test
dec
cli
inc
xor
and
scas
shlb
ret
in
je
mov
mov
hlt
hlt
mov
bound
sub
aaa
pop
insl
mov
scas
popf
inc
rcrb
mov
lret
test
jnp
aad
aam
mov
imul
subb
pop
rcll
pusha
mov
mov
sbb
stos
ret
adc
or
sub
lret
mov
andb
jge
or
dec
rorb
add
stos
mov
mov
xlat
push
cwtl
pop
dec
sbb
mov
rorb
jno
push
or
add
sbb
cwtl
pop
jge
jns
sarl
enter
push
mov
sbb
pop
lods
push
xchg
outsb
and
iretw
jbe
lea
loop
and
ljmp
xchg
xchg
inc
orl
mov
mov
leave
negl
repz
xor
lods
dec
dec
jge
scas
mov
inc
movl
fsubl
inc
shlb
inc
subl
clc
push
or
jg
mov
cmpb
push
rolb
inc
and
scas
dec
std
lods
les
mov
xor
jg
dec
fcomp
sbb
push
adc
add
cwtl
lret
mov
add
clc
mov
divb
mov
inc
ja
sbb
std
jnp
fisubs
bnd
jg
sub
gs
mov
dec
daa
mov
imul
and
in
jg
cli
rorl
imull
inc
sbbb
repnz
sub
pusha
std
mov
cli
test
sub
inc
test
sbb
mov
or
fwait
inc
dec
sub
jle
rcrb
jnp
sarb
xor
ss
dec
mov
or
fbld
cwtl
cli
pusha
jge
fdiv
and
or
shlb
dec
lods
jae
sarl
sbb
mov
add
and
pop
jno
pop
lcall
loope
sub
and
scas
inc
movaps
mov
mov
xor
adc
or
or
xor
aam
out
dec
xor
mov
mov
push
cmp
push
loope
mov
out
and
roll
push
pushf
cmpsl
sbbb
je
shl
inc
push
je
inc
xor
mov
out
xor
fsubrl
dec
and
in
mov
idivl
add
daa
inc
out
xor
js
popf
jg,pn
mov
sbb
sub
rcr
add
sub
fs
sub
shll
pop
aam
add
sub
movsl
ret
jb
adc
xchg
and
insb
inc
out
stos
insl
loopne
mov
pushf
in
out
xor
pop
or
sub
mov
mov
xor
ds
adc
idivl
test
push
sub
sub
or
outsb
fsqrt
dec
clc
out
sti
push
aam
cld
nop
mov
mov
xor
sub
imul
jb
cmp
lds
add
int
scas
sub
push
add
in
push
fisubrs
inc
jb
or
dec
jnp
fwait
pop
call
testl
out
push
sub
cmp
sbb
xor
roll
sahf
pop
out
sbb
xor
xor
xchg
in
sub
or
mov
xchg
mov
les
pushw
xor
mov
or
das
adc
cmp
xchg
loopne
pop
cli
rclb
cmp
xchg
jge
mov
lcall
mov
add
jbe
int
pushf
and
pushf
add
popa
cwtl
inc
sbb
mov
pushf
lods
mov
mov
stos
lahf
out
mov
mov
and
notl
and
adc
mov
add
pop
ficomps
and
aaa
or
sbb
xchg
xchg
cmp
lret
dec
add
jl
sub
std
loop
shrb
imul
int3
push
es
jg
add
sub
jg
or
cmc
mov
out
sbb
add
adc
xchg
lods
pusha
orl
or
jle
xchg
cmpsl
dec
js
or
dec
jge
lret
jne
dec
mov
and
jp
ret
lahf
or
fs
in
sti
ljmp
pop
sbb
or
mov
jle
dec
cmc
rorl
dec
test
pop
jb
or
dec
sub
cmp
mov
sti
xchg
rol
sub
adc
jo
lea
adc
inc
shl
sub
xlat
outsl
and
or
pop
pop
nop
mov
inc
ljmp
mov
shll
jg
push
or
push
dec
lds
jae
movsb
cli
pop
aas
mov
fwait
adc
fldcw
pop
nop
sbb
std
add
mov
push
outsl
je
dec
add
bound
dec
or
lahf
add
or
test
cmp
lods
sbb
dec
add
dec
cs
test
stc
lahf
dec
inc
ds
mov
mov
mov
dec
insl
inc
adc
test
scas
push
je
mov
dec
inc
popa
or
xchg
pop
sbb
int3
dec
jmp
test
std
mov
dec
repnz
insl
into
xor
mov
cmp
cmp
das
cs
dec
clc
jbe
push
in
lock
sar
xchg
pop
add
nop
lds
jns
adc
loope
arpl
adcb
out
adc
jecxz
jp
fs
mov
add
sbb
cmp
pop
jge
lods
nop
or
sub
das
scas
clc
insl
cmpsb
in
and
lock
jo
jge
mov
fistps
mov
pop
test
dec
push
popf
dec
lods
cltd
add
mov
mov
fcmovnb
les
iret
sbb
rolb
and
inc
pushf
lret
into
add
sahf
pop
mov
sar
test
pop
jmp
hlt
out
loop
inc
insb
mov
mov
sub
cmpsb
or
mov
cmp
sbb
loope
daa
add
push
cli
imul
push
rorb
andb
aas
loope
adc
stos
mov
bound
sub
jl
movsl
cli
sbb
dec
mov
stc
imul
dec
push
inc
loop
push
xchg
jae
mov
mov
and
dec
inc
lahf
mov
push
sub
repz
int
sub
pusha
and
pop
call
or
cmp
inc
jnp
sub
xor
xor
jnp
out
and
movsb
cmp
xor
push
jae
add
sub
gs
xchg
xchg
mov
je
xchg
push
xchg
dec
sbb
sbb
add
pop
mov
cmp
fsubp
push
mov
jge
in
daa
fnsave
jae
scas
addl
lods
adc
jecxz
pop
rorl
lcall
movsl
mov
adcl
or
dec
iret
mov
shlb
mov
fs
fadds
fldcw
lds
cmp
in
cltd
jp
jecxz
cld
add
lret
aam
movsl
mov
cmp
mov
mov
mov
movsl
sub
ret
push
in
out
repz
rolb
pop
out
repz
std
std
push
sbbb
inc
mov
mov
daa
jno
pop
dec
sahf
scas
repz
or
jle
es
jno
add
dec
jb
add
jno
and
inc
loop
dec
stc
mov
mov
cld
jge
fisubrs
mov
xchg
xor
mov
jmp
testl
lods
orb
aam
add
orb
sub
or
ret
sbb
rcr
movsb
sarl
in
cmp
lret
leave
shll
adc
btc
nop
insb
or
scas
push
shll
jns
push
cmp
xor
add
stc
out
loope
pop
lds
movsb
ret
lahf
jle
sbb
sub
shlb
mov
xor
lds
cltd
out
cmp
sub
push
mov
adc
mov
mov
mov
cmpl
lods
mov
dec
xor
repnz
mov
sahf
push
mov
test
int
ljmp
insl
jae
dec
cmpsl
fnstsw
stos
repz
leave
daa
xchg
and
imul
adc
or
lods
mov
push
ljmp
sbb
pop
sub
mov
int3
xchg
jmp
enter
pushf
cwtl
adcb
mov
lret
sub
flds
out
movsl
enter
fcompl
das
cmpsb
sub
dec
fsubs
mov
leave
jmp
xchg
adc
repz
adc
mov
or
adc
test
xchg
push
inc
out
jl
lds
mov
xor
ficoml
cld
sbb
cli
in
fimull
testb
adcb
in
fistl
fucom
jge
loopne
movsb
out
sti
sub
mov
stos
repz
push
jmp
jecxz
mov
test
jmp
ljmp
in
stc
out
outsl
call
mov
ret
mov
sbb
fldenv
xor
mov
jbe
inc
mov
in
loop
push
rol
and
fstpt
adc
mov
rclb
jns
inc
and
into
cltd
add
cmp
fldcw
pushf
je
dec
sub
cld
pop
iret
mov
sub
popa
or
lds
jp
dec
ljmp
or
pop
out
mov
pushw
jle
outsl
movsl
dec
test
mov
add
loopne
mov
xchg
and
sbb
pushf
fnstsw
jg
inc
shl
push
test
repnz
test
mov
sbb
outsl
repnz
xor
sbb
mov
dec
ret
jge
es
sub
ss
mov
add
and
dec
ret
cmpsb
push
add
lds
sbb
mov
mov
mov
sub
cmp
xorb
and
and
in
add
jg
push
mov
sbb
fdivl
jmp
sub
dec
inc
lahf
inc
stos
jbe
leave
sbb
pop
cmpsb
pcmpgtw
cld
or
xorb
stc
inc
mov
mov
sub
mov
dec
mov
adc
cli
mov
ss
imul
push
xchg
shl
pop
daa
mov
and
xlat
inc
sarl
ret
xorb
shlb
push
inc
inc
sub
adcl
gs
and
mov
fldenv
rorb
xchg
mov
xchg
inc
pop
xchg
and
int3
icebp
ds
ret
outsb
in
jnp
xor
outsl
inc
dec
adc
clc
les
sbb
ja
sub
insb
aam
or
ds
sub
xchg
mov
jecxz
decb
cwtl
jnp
dec
dec
lods
lds
ljmp
int
or
jl
cmp
test
sahf
cli
or
cmp
stc
imul
add
mov
arpl
pop
jg
nop
pusha
xchg
sbb
dec
mov
cmp
xor
push
xlat
fidivl
hlt
or
xacquire
xlat
pop
call
mov
lds
jnp
xchg
xor
lret
scas
dec
movsb
add
test
cmp
sbb
or
in
test
fldl
sbb
cwtl
and
or
ret
outsl
inc
aas
fisubs
mov
push
sub
repz
outsb
and
pop
jecxz
cli
xchg
das
shll
test
in
cs
sub
cmp
leave
movsl
xor
mov
push
pusha
xchg
std
add
pop
mov
mov
cmpsl
add
sbb
sub
je
mov
fnsave
add
jne
sub
loop
es
out
mov
jp
test
loop
sbb
push
mov
inc
rclb
fiadds
jae
dec
call
jne
push
or
stos
jge
daa
popf
or
jmp
aam
pop
adc
popa
es
out
aad
arpl
leave
or
dec
daa
test
outsl
xor
jle
jnp
into
push
and
or
movsl
sbb
mov
lea
mov
mov
push
jo
outsb
add
and
test
scas
fsubr
repz
mov
jg
push
push
and
mov
aad
in
mov
lds
mov
mov
dec
aad
jae
cmp
cmpsb
xor
sbb
push
dec
ffreep
and
dec
sti
insl
sbb
sbb
jle
mov
inc
lea
xchg
sub
mov
jbe
dec
or
or
jno
xor
mov
bound
stos
fdivs
clc
lds
pop
xor
sub
pop
iret
jmp
jmp
pop
sub
mov
mov
mov
mov
mov
or
adc
andb
popf
add
out
arpl
mov
cli
aaa
test
lahf
or
xor
xchg
cmp
push
xor
jnp
icebp
sbb
and
sub
mov
lock
adc
cmp
xchg
mov
inc
mov
lcall
bound
sub
cmpl
in
ja
in
sub
add
mov
mov
cld
inc
call
dec
sub
xchg
rorb
add
jge
jo
push
mov
lock
out
jb
cs
lret
fimull
fwait
test
lret
outsl
dec
cmc
dec
inc
addr16
shl
sbb
repnz
or
mov
iret
jnp
popf
inc
push
jns
push
jge
jge
xchg
mov
sti
sub
add
dec
sub
and
call
aad
jae
inc
bnd
mov
jmp
scas
lret
std
outsb
loop
in
dec
dec
push
inc
insb
repz
or
jle
pop
aad
jle
inc
dec
shr
push
outsb
test
sub
rcll
js
leave
int3
out
push
hlt
pop
push
adc
mov
pop
jnp
and
push
scas
add
les
sahf
xor
mov
pop
dec
xchg
lods
or
pushf
inc
stos
sbb
lds
cmp
fmul
ja
out
insb
adc
sub
in
push
adc
xchg
jnp
lahf
inc
pop
mov
out
cmp
test
roll
in
adc
pop
add
and
mov
cwtl
pop
pause
mov
dec
popa
jl
jge
mov
push
push
loopne
xor
lahf
inc
fimull
and
xchg
and
sub
pushf
rorl
out
xchg
push
mov
dec
pop
out
add
cmp
push
mov
push
scas
iret
dec
or
or
inc
push
jno
sbb
fnsave
sbb
scas
jge
cmp
push
addl
adc
daa
mov
scas
jns
adc
cs
mov
add
pop
sub
sbb
jecxz
xor
add
aam
push
cmpsb
and
fidivs
lahf
cltd
scas
lret
push
out
pop
pop
inc
cli
int3
push
lret
lock
sarl
pop
and
xchg
mov
mov
pop
js
loop
push
ljmp
das
mov
xchg
mov
mov
xor
jae
lret
mov
cmp
jmp
lock
ret
dec
cli
lcall
cmp
dec
cltd
ds
xchg
test
mov
xchg
out
jmp
jecxz
cwtl
push
inc
cmp
lock
jo
and
stos
push
nop
aaa
xchg
addr16
outsb
sub
pop
fbld
faddl
add
data16
es
mov
add
jl
pusha
mov
mov
fsts
aam
cmp
add
jno
cmp
rcrl
cmp
or
or
add
cwtl
scas
cmp
add
outsl
imulb
enter
lods
rclb
aaa
xchg
sub
stos
sbb
dec
ret
jp
mov
aaa
mov
pop
adcl
adc
cmp
rorl
out
push
in
lahf
jns
sti
into
xor
lds
cmpl
mov
jne
adc
ljmp
cli
in
bound
jno
sbb
insl
into
xlat
cltd
scas
test
push
sbb
lcall
dec
push
je
sbb
mov
enter
jbe
ljmp
pop
popf
test
inc
mov
clc
fucomi
lods
int3
inc
mov
lret
sub
sbb
aaa
aas
in
mov
adc
ret
inc
repz
dec
ja
notb
iret
adc
xor
adc
and
out
push
hlt
pop
lcall
cmp
in
mov
test
data16
inc
inc
push
out
xlat
test
push
mov
pusha
adc
imul
iret
xchg
lcall
lock
sbb
jle
ja
xchg
pop
dec
js
add
mov
cmpsb
sub
mov
jbe
fwait
dec
or
jg
test
movsb
lcall
xor
jl
lret
pop
adc
test
inc
ds
mov
cwtl
fisubl
and
ljmpw
shrl
adc
jb
lret
mov
jle
scas
in
jp
mov
aas
push
sbbb
mov
icebp
movsb
pushf
sbb
hlt
ret
lret
lcall
sub
adc
adc
ret
clc
jp
in
sbb
cmp
aaa
cmp
fimuls
ret
sub
int3
scas
or
add
lcall
or
leave
mov
iret
cmp
sarb
add
in
inc
cmp
or
insb
movsb
leave
jmp
xchg
outsl
pop
jl
adcl
pop
xchg
cmp
inc
aam
clc
das
push
fimuls
jge
lea
adc
cli
dec
outsb
stc
dec
leave
sub
arpl
add
mov
push
mov
push
ret
and
mov
adc
cli
push
mov
sub
adc
test
mov
mov
in
xchg
jg
mov
fisubl
xor
shl
push
cmp
popa
dec
sub
iret
shlb
out
int3
test
jg
int
mov
imul
out
cmp
jl
int3
pop
mov
pushf
pop
mov
adc
pop
jl
int3
mov
sbb
push
movsb
jne
push
cmp
sub
arpl
sub
adc
or
pusha
imul
cli
prefetch
std
jmp
inc
je
rclb
stos
subl
inc
cltd
mov
pop
inc
loop
out
ss
out
add
push
aaa
je
fildl
arpl
dec
push
out
cli
sbb
mov
mov
mov
mov
push
test
xchg
inc
mov
popa
cs
test
push
mov
mov
mov
sahf
pop
jb
xorb
ret
push
ret
mov
insl
dec
addr16
icebp
dec
scas
cs
fs
xor
add
jno,pt
fistpl
sbb
jmp
jg
inc
stc
mov
inc
inc
lods
fiadds
pop
into
out
pop
xchg
push
ja
ret
sub
xlat
mov
fistpll
mov
lock
sub
pop
jae
fldln2
inc
lea
add
xchg
push
pop
jb
rorl
out
xor
jmp
or
addr16
adcb
sti
mov
dec
adc
push
mov
int3
out
outsl
je
pusha
incl
test
dec
pusha
test
movsbl
jg
fs
xchg
jno
nop
shll
aad
and
push
test
or
in
je
sub
jle
mov
mulb
mov
mov
pop
dec
test
jmp
fwait
mov
dec
cli
imul
daa
jl
or
aas
inc
arpl
movsb
jne
shrb
add
or
jo
xor
dec
popa
dec
jge
sbb
jb
add
je
int3
mov
cmp
mov
push
test
push
fidivrs
cwtl
pop
movsb
repnz
outsl
leave
mov
push
testb
je
xchg
mov
cmp
pop
inc
push
mov
add
xor
xlat
mov
pop
mov
xor
stc
ret
inc
sarl
lret
pop
inc
clc
lcall
fildll
adc
pop
jbe
add
sbb
inc
or
fidivs
push
lret
sub
out
push
sahf
mul
movsb
lahf
fcmovnb
mov
lock
lds
lahf
xchg
shlb
fistps
pop
lahf
push
jo
je
out
repz
and
in
sub
mov
in
lahf
je
iret
pop
fs
pop
pusha
scas
jo
adc
cmp
test
or
mov
es
int
push
dec
mov
pop
or
xchg
add
lea
test
jle
movb
xchg
mov
js
mov
daa
and
out
pop
inc
jle
push
loope
jae
sbb
inc
mov
cmp
stc
jns
popa
jnp
outsl
mov
add
test
mov
fcompl
cmp
loope
dec
sub
cmp
je
mov
or
mov
pop
shlb
lds
aam
sbb
les
arpl
or
lret
in
jg
jnp
xchg
icebp
mov
dec
movsl
imul
mov
adc
sahf
insb
repz
lret
adc
mov
iret
xor
push
mov
push
jne
xor
push
fiaddl
mov
dec
jne
mov
sti
fstpt
inc
cmp
sbb
lret
fs
jg
mov
inc
outsl
lcall
mov
scas
loopne
ficoml
push
loopne
xchg
or
pop
mov
popl
jb
inc
inc
or
jmp
pop
nop
mov
push
scas
test
inc
xchg
sbb
jo
jg
mov
push
out
jb
jnp
out
test
xor
adc
aaa
rcll
imul
xor
inc
lcall
inc
sbb
out
ss
mov
mov
cmp
addr16
xor
jnp
push
sbbb
mov
lods
and
arpl
rorl
and
imul
sub
fisubl
or
insl
fnstenv
xchg
in
clc
stos
adc
stos
mov
xchg
dec
dec
adc
xor
aam
fnstcw
dec
cmpsb
or
jnp
das
jae
ret
jns
lahf
cld
adc
or
mov
imul
mov
stos
scas
and
inc
mov
je
push
loope
xchg
sub
sub
adc
imul
rcrb
sarl
sbb
push
xchg
fists
scas
andl
nop
push
mov
add
notl
inc
mov
pop
cmc
xor
lods
jo
pop
xchg
idiv
cld
xor
fstpt
ss
lds
add
scas
daa
repz
ljmp
xchg
cmp
call
cmp
out
pop
int3
mov
sbb
push
pop
aas
or
xchg
inc
pop
in
rorb
cltd
adc
xor
fs
jb
cmp
sbb
or
pxor
add
ret
test
cmp
pop
jae
loope
mov
xchg
dec
cld
ja
jns
cmp
stos
push
jecxz
or
xchg
out
push
mov
add
idivl
fsubl
xor
mov
lods
out
and
jmp
shrl
scas
dec
rorb
sbb
test
leave
mov
nop
push
pop
sub
in
cmp
jno
in
divl
dec
mov
movsb
adc
aaa
cmpsl
xchg
xchg
addr16
hlt
xor
and
rorb
imul
daa
xchg
cltd
pop
lcall
pusha
mov
or
or
jae
data16
je
adc
and
fdivr
inc
out
or
fcomps
ror
mov
inc
mov
fsubl
xor
cmp
in
mov
push
sbbl
pop
mov
cwtl
outsl
sub
push
fldl
movsb
popf
jl
std
or
pushf
mov
cmc
lcall
inc
jl
sarl
mov
add
or
testl
jp
lret
pminub
dec
or
subl
xor
cs
sti
push
cs
ja
in
jns
mov
add
add
dec
add
sub
incl
loopne
inc
lret
stos
fwait
sbb
dec
movsb
mov
mov
pop
or
jnp
arpl
mov
std
sub
lahf
sbb
fscale
and
ljmp
roll
aam
cmc
xchg
sbb
stc
gs
fisttpl
jo
mov
mov
or
cmpsb
fs
fbld
jge
outsl
std
xor
call
sub
daa
rcrl
cli
in
ret
mov
cmpsb
fcoms
roll
push
jo
in
imulb
pop
jmp
sub
push
xchg
aad
lock
push
mov
mov
test
sub
into
xchg
or
leave
pushf
mov
adc
push
repnz
imul
in
out
cld
xchg
dec
jmp
in
push
push
xchg
movsl
je
jo
push
test
js
imul
loop
xchg
in
and
jae
mov
or
insb
scas
fwait
loope
or
push
cld
push
sahf
xchg
xchg
dec
popf
jne
jne
sub
mov
bound
sub
jmp
xchg
inc
dec
cs
shlb
xor
adc
daa
inc
inc
popf
or
push
and
add
cmp
std
rcrb
jg
dec
mov
push
dec
sub
cmpsl
inc
jle
jl
mulb
and
mov
inc
xchg
pusha
mov
sarl
sub
insl
sarl
jecxz
pop
out
lret
icebp
cmpsl
xlat
fwait
inc
in
jl
mov
xlat
dec
mov
jge
mov
mov
cmp
mov
add
sub
aaa
xchg
outsb
push
and
lea
rorb
jns
jbe
adc
pop
insb
mov
xchg
jno
mov
or
sbb
repz
cmp
outsl
pop
movsl
test
mov
testb
inc
testl
jbe
push
adc
leave
ljmp
push
ss
jbe
sub
adc
daa
pop
xor
cmp
mov
add
fld
cmp
sbb
pop
repz
sbb
mov
insl
cld
daa
push
jg
imul
addr16
xor
jmp
sbb
je
flds
mov
ds
or
or
stos
mov
dec
cmp
sahf
push
xchg
pop
dec
mov
xchg
in
aaa
mov
mov
or
add
lahf
sub
outsl
xor
fstpl
ss
loop
std
pop
stos
movsb
xchg
jo
test
mull
jg
rcrb
loope
jmp
push
mov
aaa
ljmp
ficoms
adc
or
aaa
out
les
sub
xchg
fimuls
xchg
push
jne
mov
mov
xchg
sub
xor
adc
adc
sub
std
test
jae
lahf
arpl
lods
dec
push
inc
cltd
mov
inc
fmull
lea
fldenv
pop
xchg
xor
fmulp
imul
push
dec
ret
nop
mov
das
sti
cmp
bound
cmp
cmp
lods
and
inc
fwait
test
push
ret
call
addr16
mov
xor
or
pop
or
scas
loop
inc
sub
jp
js
mov
shlb
insb
xchg
lock
out
nop
cli
ret
stos
aaa
jo
into
mov
add
adc
mov
sub
xchg
add
enter
scas
mov
rorb
xor
lcall
and
rcll
or
scas
cs
iret
in
push
jle
in
andl
stc
repnz
push
fadd
cli
int
inc
outsl
lods
sbb
insb
and
ljmp
xchg
flds
mov
lcall
sbb
push
ret
and
jle
jle
lret
mov
pop
int
cmp
sub
orl
mov
call
arpl
mov
fcoms
stos
xorl
lcall
add
dec
das
mov
push
cmp
loop
bound
inc
les
insb
dec
mov
loope
repnz
test
pop
je
popa
jns,pt
push
popa
add
push
repz
aam
aaa
push
dec
sub
pop
mov
rorl
andl
outsl
lret
out
inc
dec
fidivrs
pop
xchg
pop
ret
xor
ret
mov
rcll
stc
lret
sbb
inc
sub
ljmp
fdivs
repnz
repnz
jne
pop
testl
inc
push
xchg
dec
adc
es
mov
sahf
inc
imul
cmp
test
mov
pop
enter
pop
out
std
call
cmc
cmp
fimuls
pop
cltd
pusha
push
pop
notrack
and
sbb
cmc
sti
sub
xor
mov
rol
fsubrs
mov
pop
sbb
fs
pop
pop
shlb
xor
inc
pop
ja
sbb
jmp
ds
test
adc
xchg
cmpl
mov
xchg
mov
insl
jb
mov
dec
cmpsl
arpl
dec
adc
sub
sarb
lcall
xorl
ud2
rcll
push
or
ror
outsb
mov
mov
stc
aam
sub
lods
inc
into
ror
pop
inc
push
xchg
int
shll
lahf
mov
cmp
enter
sbb
add
imul
jne
dec
daa
test
stc
jns
xor
fpatan
mov
in
ret
cld
vpsrld
mov
cmc
mov
dec
js
aam
mov
rcl
push
mov
addr16
iret
xor
cltd
call
dec
jbe
out
les
lcall
stos
fcomi
sub
rol
push
push
or
sbb
cltd
sbb
ljmp
das
repnz
jb
cmpsl
aad
icebp
dec
iret
pop
andb
add
mov
gs
mov
lcall
pop
sbb
insb
jo
xchg
cltd
mov
or
das
add
push
je
ja
xchg
arpl
stos
cmp
inc
fldt
sub
loop
or
push
hlt
fs
outsb
mov
pop
mov
inc
adc
inc
aam
sbb
pusha
out
pop
ds
outsl
pop
or
movsl
cltd
or
adc
sbb
test
sub
daa
dec
cmp
cmp
daa
fstpt
cmp
fldl
xchg
cmp
loope
out
pop
mov
loop
xor
add
sub
dec
xchg
fmull
aaa
lahf
xor
mov
ret
fxch
sbb
adc
sahf
in
sti
or
sbb
xchg
inc
jbe
and
or
pop
sbb
jne
testb
add
shll
scas
sahf
pop
daa
ds
fs
xor
bound
inc
imul
jp
mov
xor
int3
sbb
nop
mov
mov
fsubl
je
scas
or
cwtl
mov
hlt
mov
xor
mov
push
lods
sub
jbe
cmp
repz
mov
pushf
in
and
cli
ror
xor
out
lock
sub
out
sbb
sbb
dec
jbe
das
jno
pushf
inc
fbstp
or
scas
out
movsl
insl
jo
push
clc
aad
cmp
adc
cmp
ds
jo
decb
mov
loope
mov
pop
pop
xor
ret
sbb
inc
xchg
sbb
and
add
pop
lods
sub
dec
flds
nop
sbb
daa
aas
mov
jo
ds
mov
inc
pop
jne
jge
addr16
insl
dec
pop
mov
stos
lret
stos
out
xchg
adc
int3
test
cmp
hlt
test
daa
pop
scas
cmp
add
adc
arpl
mov
stos
mov
stc
xchg
lret
shrl
sahf
scas
ds
rorb
in
xchg
movsb
mov
test
fdivrl
mov
inc
dec
popf
lods
jb
out
dec
mov
out
adc
push
mov
xlat
popa
imul
sbb
dec
push
fwait
mov
ss
pushf
dec
imulb
bound
mov
insb
sub
push
inc
sbb
insb
mov
jmp
ja
jb
pop
push
xor
add
mov
push
das
enter
fisttpl
or
push
sub
mov
cwtl
inc
es
bound
mul
mov
popa
cmpl
jmp
inc
addb
test
sbb
sub
into
pop
rorb
std
add
xchg
cmpb
jge
add
test
aaa
pop
scas
xor
ret
cmp
add
ds
sarb
mov
mov
test
fucomp
pushl
shl
mov
xchg
loopne
cmpb
bound
das
xchg
dec
lret
sbb
mov
dec
stos
cmp
rcrb
and
mov
sub
inc
push
mov
push
push
in
lods
pop
sub
push
repz
lahf
jg
pop
mov
pop
xchg
lods
repz
inc
add
les
cmp
loopne
hlt
xchg
jnp
mov
mov
mov
adc
fisttpl
jb
push
test
pop
push
gs
sbb
test
add
movsl
fwait
xchg
out
push
in
icebp
xor
int
xor
mov
outsb
push
jnp
mov
jnp
or
loope
push
or
gs
sbb
ja
das
dec
nop
jl
inc
jl
clc
lds
ss
mov
jg
add
enter
add
cld
jl
lahf
dec
pop
cmp
ret
movsb
cmp
hlt
mov
cmpsb
dec
jmp
mov
rclb
pop
mov
and
rcrl
dec
adc
inc
push
js
or
adc
loopne
pop
xor
adc
add
push
dec
dec
mov
lods
out
adc
push
mov
or
aas
mov
ss
pop
push
cmpb
and
stos
jo
aas
cmp
pop
outsb
dec
das
and
adc
js
aam
push
add
or
sahf
mov
push
imul
and
mov
js
sub
pop
mov
xor
mov
ret
or
fnstsw
mov
add
inc
hlt
mov
sbb
jecxz
fucomi
push
cmp
push
insl
xchg
stos
rorl
jecxz
gs
jne
and
into
push
jno
adcb
push
inc
add
mov
cwtl
jbe
mov
adc
adc
cmp
jp
cmp
push
fdivl
mov
pushf
rcr
push
xchg
cmc
pop
stos
push
cmp
pop
js
into
aaa
in
lcall
cmp
sub
ret
pop
ss
or
pusha
dec
mov
popl
push
sbb
fwait
pop
rcl
shll
lock
outsb
push
adc
dec
xor
sbb
adc
xor
das
int
mov
push
sahf
jl
jp
mov
fstpt
scas
in
cmpsl
mov
outsb
popa
xor
cwtl
sahf
imul
xor
popa
sub
repnz
sbb
mov
mov
xor
lock
cld
mov
lahf
xor
pop
loopne
push
adc
cmp
xlat
fcmovnb
pop
movsl
push
inc
cs
mov
sub
imul
enter
push
repz
mov
sub
mov
in
sub
and
xor
and
test
push
fisubrl
clc
jecxz
ss
ret
faddl
loop
add
add
lock
mov
dec
cvtpi2ps
or
and
lret
out
add
aam
mov
mov
inc
adc
pop
ss
movsl
dec
push
sbb
jmp
imul
je
adc
fucom
jge
lds
sarl
inc
or
popf
xor
push
stos
xor
pop
popf
mov
fildl
insb
xchg
mov
jns
and
sahf
testl
clc
pop
mov
or
sti
out
cmp
xchg
push
jae
notl
push
xchg
dec
add
ds
push
jns
clc
jb
outsl
xlat
sub
daa
rolb
test
cmp
pushf
out
or
dec
sub
ss
imul
push
push
xchg
cltd
mov
shlb
push
scas
sar
in
xchg
inc
pop
dec
add
test
subl
test
sbb
mov
test
add
lea
sub
or
movd
dec
lods
mov
cld
out
jmp
dec
cmpsb
sub
out
inc
stos
lods
dec
sub
shlb
cmp
fwait
mov
sbb
jecxz
ja
push
insl
loope
pop
mov
js
jp
std
sbb
push
xchg
add
adc
and
mov
js
shlw
aaa
sbb
stc
mov
test
idivl
sub
cld
sbb
and
jae
imul
cmp
and
scas
mov
dec
push
lret
test
repz
dec
mov
data16
push
dec
call
fsubl
std
dec
enter
nop
pop
loopne
xor
ds
ljmp
fldt
inc
cmp
cmp
mov
adc
nop
std
sub
ret
inc
sub
jae
jmp
add
fincstp
js
sub
call
loop
loopne
mov
in
nop
or
mov
fstpt
cmp
push
push
push
push
jns
jb
sub
mov
sti
lret
sub
pop
inc
clc
mov
cmp
imul
cmp
scas
cltd
loop
dec
shrl
out
or
testl
sub
add
movsb
adc
xchg
dec
nop
xor
stos
aas
inc
mov
sub
fwait
iret
pusha
push
sbb
jo
adc
shr
imul
xor
test
mov
lret
std
cmpsl
sbb
js
sub
pop
inc
scas
sbb
jb
std
cmpsb
inc
add
hlt
adc
sbb
mov
movsb
mov
push
pop
lcall
mov
aad
xor
push
push
mov
inc
mov
lds
fs
int
mov
lcall
jp
mov
xchg
inc
repz
xchg
lods
loopne
mov
movsl
and
mov
sub
hlt
sub
or
inc
cmp
jne
leave
mov
cmp
daa
enter
mov
mov
test
in
cmp
les
andb
ljmp
sbb
xchg
orb
dec
push
frstor
out
outsl
push
and
inc
xor
dec
ds
mov
dec
push
les
jle
mull
sbb
shrb
call
mov
mov
jo
sub
imul
fisubrl
clc
jne
push
mov
cli
mov
orl
add
popl
add
out
xor
dec
mov
mov
xor
imulb
lcall
js
lock
mov
inc
push
mov
cld
pop
test
es
add
stc
insl
aaa
repz
into
jns
push
jo
adc
lahf
stc
pop
jge
int3
cmp
mov
stc
lea
arpl
push
cmp
adc
nop
std
sbb
jno
cwtl
pop
mov
inc
ljmp
xor
add
mov
dec
sub
inc
lds
insl
cmp
rol
fsubrp
push
addr16
out
popf
add
fisttpll
pop
arpl
call
push
sbb
int3
int
frstor
lret
or
mov
in
lds
out
xchg
cmpsl
mov
sub
xor
lods
data16
mov
xor
xchg
lock
mulb
loop
or
xchg
mov
les
sub
in
mov
aas
lds
jl
fisubrl
out
popa
pop
incb
push
and
enter
sbb
push
std
or
jnp
cli
aam
add
sbb
nop
jbe
mov
enter
dec
jb
pusha
outsl
mov
addr16
movsb
or
jle
xor
mov
jne
repz
inc
call
and
inc
cltd
sbb
adc
add
sti
aas
inc
push
addr16
pushf
pushf
cmp
push
stos
push
pop
sbb
push
sbb
jecxz
sti
les
jge
or
and
shll
pop
add
jmp
add
fdiv
mov
sub
or
in
xchg
jmp
or
lret
pop
mov
in
pop
jns
lea
cmp
push
hlt
shrb
add
shll
and
xchg
leave
stos
xchg
cmp
cmpsb
fnstsw
in
mov
mov
mov
int
push
xor
jp
rcr
inc
jmp
aaa
repnz
push
lcall
or
sbb
data16
mov
test
outsb
sbb
mov
incl
shrl
cmp
dec
imul
inc
cmpsl
lcall
imul
std
xor
adc
shlb
in
jge
push
fldt
shl
scas
mov
or
push
lods
sub
cmpsb
popa
sbb
dec
jno
dec
std
in
pop
push
in
cmp
inc
in
es
mov
mov
and
lods
mov
sub
mov
roll
imul
push
insb
adc
orb
popa
out
stos
ljmp
jl
jnp
mov
cmc
andl
repnz
pop
mov
mov
xchg
in
movsb
dec
xor
fimuls
pop
mov
loop
mov
sub
cmpsl
fdivrl
sub
jb
ss
jecxz
xchg
pop
cs
sub
push
inc
lods
test
cmp
adc
loope
rcrb
inc
push
jl
fistpl
xor
and
insb
inc
sarl
xor
test
push
push
add
and
dec
jmp
rcrl
mov
movsb
movsl
adc
movsl
push
rorl
mul
test
icebp
aaa
das
xor
ficoml
mov
in
mov
cmpsl
inc
fwait
cwtl
mov
cmp
xor
dec
icebp
add
dec
in
adc
mov
into
icebp
scas
or
mov
insb
loop
movsb
mov
sub
sti
les
jmp
outsl
lods
in
bound
fdivl
pop
mov
test
jae
inc
mov
mov
pop
iret
ret
push
gs
pop
add
dec
dec
adc
mov
and
jle
jns
test
sub
pop
repz
std
mov
ds
shll
sbb
cmp
push
or
mov
nop
pop
inc
jecxz
lcall
pop
pop
adc
lods
pop
hlt
and
loop,pt
rorl
ja
or
aam
ja
push
int3
mov
cmp
scas
in
inc
sbb
xchg
pop
test
lret
idivl
mov
ljmp
stc
popf
push
dec
fs
orb
pop
pop
pop
inc
dec
addb
mov
into
push
xchg
mov
sarb
out
add
xchg
mov
push
repnz
testl
cmp
mov
into
notb
ja
jns
fwait
cltd
sub
mov
imul
pop
sub
mov
test
aaa
xchg
or
pop
lds
add
cld
jl
stc
ja
lds
lock
pfrsqit1
inc
ret
loopne
nop
inc
test
jne
daa
daa
and
xchg
lock
push
cmpsl
push
aaa
cltd
andl
cmc
sbb
das
arpl
jg
inc
adc
cltd
pop
mov
popa
into
inc
adc
lock
pop
jp
jae
nop/reserved
data16
fmull
out
loopne
in
cwtl
cmp
push
jg
dec
sub
pop
enter
dec
and
movsl
dec
testb
stc
pop
fsubrp
mov
and
call
inc
stc
mov
inc
iret
jns
xchg
pop
and
test
cmp
inc
ret
inc
adc
lcall
insl
sbb
and
cmp
mov
sub
cli
fidivs
out
repnz
outsb
push
and
add
xlat
xchg
lret
inc
pop
cmpsl
aas
pop
mov
push
out
xchg
mov
dec
or
mov
jmp
lret
and
sbb
cmp
xlat
push
and
data16
popf
dec
push
xor
adc
sahf
ret
ret
sbb
xchg
mov
and
repnz
movsl
adc
sub
or
es
sahf
adc
xchg
push
shl
and
aam
std
bound
js
mov
shll
imul
ds
ss
decl
and
mov
ljmp
mov
lock
xor
out
out
sbb
mov
rorl
mov
mov
xchg
mov
cmp
and
inc
cmp
or
pop
movsl
fdivrp
int3
adc
fs
lcall
inc
adc
iret
mov
imul
xchg
fcoms
sbb
and
aas
push
jecxz
js
fs
sbbb
push
sub
bound
or
scas
insb
or
and
test
jne
jg
pop
in
int3
dec
mov
xor
sbb
das
lock
push
aas
repnz
clc
lahf
cmpsb
ss
arpl
jne
out
addl
imull
sbb
divb
repnz
pusha
xchg
inc
insb
cmpsb
testb
mov
lock
rorb
jl
outsb
pushw
xor
out
ret
dec
sbb
ja
push
mov
aam
ret
push
pop
dec
fs
shlb
pop
mov
push
adc
or
idivl
outsb
mov
cmpsb
cmp
inc
cli
sub
pop
movsb
push
aam
jno
xchg
les
repnz
loopne
pop
mov
sbb
out
cmp
outsb
rcrb
pop
inc
or
fildll
fldenv
mov
add
pop
outsb
repnz
data16
in
nop
mulb
sti
imul
rolb
pop
and
fstpl
sbb
mov
cmp
iret
aaa
das
cmc
prefetch
or
test
pop
mov
addr16
sbb
ds
ds
test
rcr
fnstsw
xchg
xchg
scas
cmpsb
add
mov
stc
stos
push
in
cmp
xchg
mov
and
pop
xchg
in
cmp
out
icebp
ret
or
outsb
push
xor
aas
imul
scas
out
sbb
mov
cli
lds
mov
dec
andb
mov
mov
push
cmc
mov
xor
adc
push
mov
es
pop
lcall
sbb
outsl
mov
outsb
movsl
cmp
inc
add
fwait
mov
pop
std
cmp
lret
add
test
cmp
jae
clc
fildll
inc
and
lahf
int3
pop
inc
adc
mov
push
add
cmp
pop
pop
inc
inc
mov
js
add
inc
cmp
dec
xchg
lahf
ss
sbb
pop
js
mov
aad
dec
enter
stos
adc
push
dec
ljmp
fmuls
mov
cld
xor
sbb
adc
testl
insl
faddl
push
or
in
jl
call
insl
mov
out
pop
jl
push
push
lds
jmp
int3
push
xchg
inc
jmp
mov
lcall
dec
mov
call
and
mov
xorb
orb
sub
lret
push
push
jl
inc
sbb
fmul
fcompl
scas
jge
xchg
add
xchg
ficoml
frstor
mov
cmpsl
repnz
mov
mov
icebp
and
fwait
dec
sub
lret
mov
testb
cmc
cld
je
xchg
mov
inc
imul
int3
into
mov
sbb
inc
mov
cmp
mov
inc
or
sub
fiadds
pop
jae
adc
cmp
jge
xorl
pop
ds
sub
loopne
sub
mov
rorb
iret
les
mov
imul
aam
pop
lret
push
shlb
cmpsb
fst
push
pop
cmp
push
fwait
outsl
jl
std
jb
popa
popf
mov
jo
iret
mov
pusha
or
out
insb
inc
jecxz
mov
mov
fdivs
aas
aad
pusha
pop
je
xorb
not
push
adc
xchg
xchg
xor
cmp
repnz
out
push
inc
sahf
ss
mov
in
pop
xor
pusha
ja
mov
imul
stc
andl
aaa
loop
adc
arpl
mov
mov
push
out
popa
cmp
out
xor
call
movsb
jl
mov
scas
mov
or
xor
cs
test
cwtl
je
or
jae
int3
jge
bound
hlt
notl
mov
mov
sbb
add
popl
out
dec
jnp
mov
rsm
jbe
pop
subl
popa
in
push
sub
dec
loopne
sub
pop
addb
mov
jnp
mov
or
in
shrb
sti
mov
or
sub
or
repnz
fwait
lods
into
ret
jns
pop
inc
insb
push
aas
push
pop
jne
sahf
mov
fsubl
sub
call
pop
gs
clc
cli
popa
imul
jnp
mov
dec
hlt
out
sub
cmp
test
jg
mov
pop
insb
xorl
ret
dec
mov
mov
cwtl
xchg
mov
mov
movsl
mov
pop
aaa
pop
stos
test
imulb
push
jmp
popa
ret
aas
ja
lods
add
int3
icebp
pop
push
scas
pushf
add
jnp
xchg
cmp
lret
mov
sub
les
stos
mov
lock
mov
fs
lahf
int
fs
les
xor
shl
cmp
or
cli
insl
fsubs
movsl
or
std
sub
mov
adc
je
dec
arpl
push
movsl
xlat
xor
xor
scas
outsb
xchg
mov
inc
jno
add
sbb
inc
push
mov
fsubl
lret
mov
mov
jae
add
add
lods
pop
test
push
lret
xchg
outsl
out
xchg
pop
pop
insb
roll
jno
shlb
mov
xor
sarb
push
aam
shufps
ds
mov
adc
ret
sub
add
stc
arpl
imulb
xchg
pusha
int
icebp
jp
jnp
ljmp
jg
adc
sbb
gs
ds
fimull
daa
add
xchg
add
adc
divl
xorl
xorl
sub
aad
enter
dec
mov
mov
ljmp
push
ret
popa
sbb
sbbl
mov
or
jmp
mov
jno
scas
push
jp
xchg
icebp
mov
pop
icebp
leave
push
rolb
add
int3
xchg
popf
dec
mov
sub
call
pop
scas
loopne
xchg
insb
loop
les
je
rcrl
pop
in
cmc
daa
xor
dec
test
cmp
pusha
xlat
das
out
jmp
lds
pop
inc
mov
lods
sbb
fwait
mov
push
lea
nop
pushf
pusha
xchg
sti
outsb
loop
cmp
jg
cltd
push
inc
mov
jno
ficomps
jae
add
push
inc
aas
mov
test
xor
mov
push
out
aam
sbb
sub
cmp
xchg
dec
push
lea
mov
imul
cmpb
push
incb
add
xchg
adc
mov
mov
in
xchg
xlat
cmp
jmp
cld
sub
scas
cmp
sbb
int
push
in
and
outsl
shrl
pop
xor
xchg
inc
outsl
mov
inc
fcmovbe
lea
xchg
push
insl
imul
ret
sarl
jno
jl
or
rolb
pop
sbb
inc
jno
push
sbb
popa
push
adc
xor
addr16
sub
pop
mov
sbb
lret
sbb
std
int3
mov
dec
sub
notl
add
lcall
or
mov
mov
pop
insl
xor
pop
stos
in
mov
sbb
fs
cld
shrb
cmp
jmp
sti
pop
dec
hlt
pop
jge
fwait
mov
add
xor
cld
xor
nop
stos
xor
gs
or
push
cmp
mov
in
insl
icebp
dec
test
jecxz
addr16
add
cmp
aad
test
adc
sub
int
xchg
xor
push
insl
aas
sub
imul
lret
lods
push
fists
into
ds
pop
jb
jb
ljmp
add
inc
jbe
inc
push
aam
sub
push
dec
inc
cmp
lds
xchg
adc
cltd
mov
mov
repz
int
sbb
or
repnz
mov
pop
xchg
jmp
jl
sbb
test
dec
outsb
push
sbb
addr16
fsubrl
jp
icebp
shll
in
int3
dec
xorb
popf
dec
xchg
out
inc
mov
ret
aas
mov
ss
movsl
mov
sbb
out
push
mov
idivl
pop
mov
mov
dec
jne
jg,pn
adc
cmp
lods
nop
mov
loop
mov
aaa
lret
dec
fsubp
icebp
rorb
xchg
cli
mov
out
lret
test
rcrl
iret
mov
sti
mov
push
test
scas
jle
inc
stc
mov
xchg
aaa
sbb
xlat
mov
xchg
aaa
pop
out
popf
push
js
shrb
lods
mov
cs
sbbb
add
mov
mov
fwait
push
pop
scas
mov
push
adc
mov
xchg
addr16
test
add
das
fistpll
xchg
xchg
add
dec
loopne
xchg
mov
imul
or
mov
leave
ds
popa
cmp
lods
and
or
push
mov
push
inc
movsb
roll
mov
pop
test
ret
mov
adc
es
jmp
dec
out
push
jns
cmp
cmp
ror
xor
sbb
xor
into
mov
jne
cmp
std
fimull
jg
sahf
xchg
cmp
jp
push
jmp
imul
aas
ror
icebp
pop
add
dec
and
cmp
js
fiadds
sti
pushf
loopne
add
adc
pop
jle
and
xor
les
inc
push
test
jmp
shll
not
mov
dec
jne
xchg
dec
outsb
repnz
lds
jle
outsb
and
sub
test
and
or
xchg
dec
inc
pop
push
sbb
out
add
sbb
inc
jecxz
cld
pop
mov
inc
sar
sbb
inc
faddl
pop
xlat
cmp
dec
subb
mov
push
popf
shlb
push
dec
mov
daa
jle
mov
or
jae
cmpsb
or
in
data16
pop
push
dec
clc
sbb
and
out
ret
cmpl
dec
xor
call
daa
push
rolb
push
out
push
pop
mov
xor
inc
out
rorb
imull
outsl
lcall
jle
jp
sbb
test
rcrl
scas
jae
into
les
dec
imul
mov
mov
mov
dec
lcall
or
dec
ret
lret
popa
outsb
into
pop
pop
and
sub
sarb
iret
nop
scas
daa
lret
hlt
sti
mov
mov
or
pop
shr
mov
dec
pop
xchg
cmp
test
dec
jmp
popa
dec
xchg
jb
or
lock
aam
idivl
outsb
bound
icebp
push
clc
push
jge
test
mov
dec
ficompl
inc
cwtl
addr16
loopne
jbe
les
fsubrs
cmp
nop
jp
out
cmp
outsl
inc
and
leave
call
mov
out
xlat
jo
xchg
jmp
sbb
inc
lcall
or
mov
lds
mov
popa
hlt
hlt
xchg
push
push
cwtl
mov
cmovbe
jl
lcall
jg
pop
movsb
xor
mov
adc
fwait
xor
xchg
ljmp
test
adc
cmpsl
mov
dec
mov
movsl
inc
iret
mov
dec
out
jae
dec
fiadds
stos
in
sub
sub
lahf
mov
xchg
dec
inc
inc
enter
inc
popf
scas
jae
mov
sbb
mov
lds
add
mov
test
ret
inc
mov
jb
push
inc
push
fdivrs
outsb
add
sahf
lret
xchg
xchg
out
cmc
jae
mov
movsl
fbld
push
jbe
fnstcw
sub
jns
test
repz
mov
xor
pushl
pop
sub
mov
add
mov
les
jae
add
dec
test
subl
mov
popa
inc
adc
inc
pushf
or
hlt
aam
mov
sbb
stos
jo
xchg
xor
hlt
fidivrs
fs
jmp
mov
xor
in
pop
and
gs
cmp
out
mov
imul
mov
icebp
push
ret
xchg
loop
mov
jbe
insb
mov
pop
xchg
fcmove
js
fs
sub
xchg
mov
aam
outsb
out
xchg
rcrl
jne
or
scas
lcall
hlt
std
cmp
add
mov
out
movsb
inc
fnstcw
clc
nop
and
mov
in
mov
inc
mov
dec
stos
jmp
xor
cld
mov
lahf
pop
lock
scas
out
sub
jbe
and
ss
sbb
adc
test
outsb
adc
mov
fwait
cmpsl
loop
xchg
cmp
mov
inc
loop
jo
pop
adc
inc
std
jg
stc
sub
aaa
sarb
js
pop
movsb
push
loop
mov
xchg
loopne
mov
in
cmp
adc
or
or
fldcw
push
cltd
mov
pushf
dec
pop
loope
mov
jmp
ljmp
or
add
rclb
pop
or
rcrl
xchg
cmp
fdivl
dec
cmc
test
std
mov
jne
incl
loopne
movsb
lcall
pusha
in
test
mov
rcrl
xchg
or
ret
insl
daa
ret
cmp
cmp
mov
js
ret
addr16
sahf
insb
push
add
andnps
push
jmp
mov
push
cmpsl
xchg
mov
je
cmp
faddl
popf
adc
xchg
cmc
xchg
mov
hlt
movsb
and
mov
ds
or
ja
add
loopne
orb
dec
aam
inc
inc
ret
push
adc
inc
rcrb
aas
push
cs
sbb
sarl
and
lea
daa
insb
kmovb
mov
jecxz
push
scas
insb
shrb
test
push
mov
mov
mov
add
and
inc
cmpsl
or
mov
mov
shrb
or
popa
xor
adc
mov
jg
cmpsb
push
push
mov
xchg
loopne
orb
or
sub
test
sahf
test
and
cmp
aad
dec
stos
stos
mov
lret
push
test
sbb
mov
inc
rcrl
insl
or
or
xor
cmp
dec
aam
addr16
mov
arpl
mov
popf
in
idiv
jmp
push
and
bound
negb
and
push
cmc
in
or
cltd
arpl
push
test
stc
add
mov
pop
mov
ljmp
shll
out
jl
jl
into
jle
dec
sti
xchg
and
cwtl
jmp
lahf
xor
cs
ljmp
test
cmpsl
pop
lahf
in
mov
hlt
jge
pop
mov
inc
jge
mov
or
and
push
inc
jge
dec
pop
push
scas
in
repz
push
lea
mov
jmp
lret
cwtl
ftst
pop
mov
pop
adc
in
xchg
jo
es
mov
mov
jge
sbb
jmp
icebp
shll
jge
jle
in
xlat
jns
fimuls
sub
scas
into
jns
pop
hlt
pop
sbb
inc
arpl
fldenv
jo
lods
jae
xchg
dec
std
or
out
xchg
or
ljmpw
in
fsubr
mov
test
scas
or
jns
lods
push
mov
iret
popf
cmp
jo
mov
add
stos
fbstp
mov
push
push
movsl
mov
cld
push
adc
add
sti
stc
mov
arpl
and
inc
stos
pop
js
jle
inc
mov
movsb
sbb
mov
inc
mov
sub
add
sub
dec
ficoml
insb
loope
push
aaa
jg
loopne
or
inc
imul
pop
or
add
xchg
in
gs
fildll
push
and
sub
jle
cmp
stc
lea
mov
arpl
pop
pop
out
jecxz
lock
jns
scas
adc
inc
pop
cmp
jl
hlt
jl
mov
fisubrl
leave
inc
and
int
pop
sbb
mov
sbb
loope
call
cmpsb
dec
mov
rcr
repnz
scas
inc
dec
xor
adc
or
sbb
pop
and
rcrb
xchg
mov
sbb
in
enter
adc
fs
cmp
cmpsb
lods
decl
movsl
mov
mov
jp
adc
mov
dec
dec
mov
data16
adc
test
jo
jne
nop
sbb
lods
sbb
data16
enter
out
xlat
outsb
jmp
in
cld
lods
jb
cmpsl
test
popa
jbe
leave
out
ja
mov
movsb
or
aas
mov
pop
or
inc
in
fwait
stc
into
fisttpll
cmp
mov
push
add
mov
pop
scas
xor
sbb
iret
into
stos
mov
cld
adc
mov
jp
push
mov
aad
push
imul
push
sub
inc
sub
sbb
mov
ja
es
pushf
lahf
dec
cmpl
out
xchg
pop
push
xor
aam
mov
cld
inc
icebp
ret
mov
mov
shrl
idivl
or
xlat
push
gs
mov
shlb
shrb
mov
into
shrl
mov
cmp
lret
cmc
xchg
add
jl
xlat
push
sbb
aad
inc
adcl
pusha
mov
enter
xlat
lds
jge
ljmp
jmp
push
rorl
int
jae
fs
push
xadd
push
dec
jb
and
je
imul
out
add
movsl
test
rolb
jecxz
mov
add
lea
push
cmp
aaa
adc
lret
add
mov
aad
sbb
in
comiss
and
sbbb
jle
jge
ret
pop
mov
jmp
pop
inc
shll
sub
push
pop
sarl
pop
movsb
cmp
int
inc
push
dec
mov
or
jmp
vpunpckhbw
insb
xchg
bound
imul
and
arpl
into
jmp
jecxz
cltd
ret
outsb
sub
pushf
sarb
xor
add
jo
inc
mov
xchg
inc
sbb
push
xlat
xor
and
ja
jge
xchg
js
push
pop
movsb
xchg
jo
lcall
dec
push
jp
sbb
push
test
outsb
out
dec
sub
add
push
fldenv
xor
aaa
frstor
inc
dec
or
and
jo
push
imul
mov
fcoms
mov
mov
ja
inc
xchg
or
dec
add
xor
lea
sbb
mov
push
xchg
test
fs
loope
fs
loope
and
and
test
fcomi
sub
leave
xchg
jnp
imul
and
pop
push
insl
cmpsb
dec
scas
fsubrl
ja
cmpsl
cmpsl
push
stc
push
fstpl
add
stos
pop
das
push
lock
enter
into
inc
or
jnp
arpl
insb
sub
aad
xor
xor
rcrb
xor
push
mov
jno
outsb
aaa
jb
xor
push
dec
xlat
pop
mov
pop
fistl
test
cmp
xor
out
test
sbb
xchg
stos
or
cmpsb
arpl
jmp
shrb
xor
call
adc
andl
or
xchg
inc
lret
ret
push
ja
sub
dec
push
das
scas
sbb
repnz
mov
out
or
jmp
mov
js
push
movsb
pop
das
fadd
leave
adc
enter
imul
ds
mov
or
dec
sbb
sti
mov
repz
mov
mov
sbb
mov
xchg
aaa
das
test
fildl
dec
icebp
push
mov
push
inc
ret
cwtl
fdivs
shll
push
mov
shlb
iret
dec
out
insb
or
mov
jg
cmp
sbb
mov
adcl
xor
add
js
lods
subb
notl
mov
mov
sbb
jns
inc
lcall
ds
push
inc
pop
lods
jge
dec
popf
and
loopne
mov
pop
test
subl
ja
add
leave
push
push
jne
mov
ljmp
mov
sbb
lahf
jb
xchg
cli
ret
and
xor
push
sbb
xor
fldt
mov
in
sbb
test
outsb
sti
dec
mov
ja
cmpsl
scas
out
lret
pop
mov
movsb
pop
rcl
insb
xlat
pop
cwtl
out
sysexit
xchg
lods
mov
or
sub
imul
or
push
shrb
ret
jb
xchg
scas
out
xor
jb
in
mov
push
mov
push
lret
cmp
popf
fimuls
pop
roll
cmp
out
imul
cmp
mov
hlt
xchg
cmp
pushf
sub
in
cmpsb
mov
jae
sbb
sbb
repz
fidivl
add
adc
mov
mov
adc
fsubrs
xchg
mov
test
xor
cmp
inc
jb
in
mov
jno
inc
out
loope
sbb
aam
mov
mov
cld
leave
jle
push
mov
stos
in
repz
mov
dec
lds
dec
jecxz
dec
xchg
add
jmp
flds
dec
mov
imul
fxch
adcb
popa
jp
call
stos
mov
sub
sbb
push
aas
test
sub
arpl
mov
inc
fimull
pop
and
jl
leave
divl
pop
xor
call
xchg
shll
sub
lea
xlat
ret
bound
hlt
lcall
test
cmp
push
push
dec
hlt
hlt
adc
dec
lock
mov
push
mov
lret
xor
fsubl
cmp
js
out
sbb
fidivs
test
or
sub
add
pop
fimull
add
iret
adc
in
lock
out
pop
jne
rcrb
and
inc
xchg
nop
cltd
lods
lahf
cmp
mov
xor
sti
sub
enter
les
bound
lahf
mov
xor
addr16
popf
xchg
in
dec
roll
mov
xchg
into
jge
and
pop
rcll
popf
sbb
jle
adc
into
dec
aam
xor
enter
and
or
outsl
rcll
xor
jmp
sbb
xchg
xlat
rcl
jnp
dec
cmc
xor
test
or
add
dec
and
adc
inc
cld
sbb
call
call
or
dec
dec
jp
js
les
into
test
xchg
mov
push
in
pop
add
arpl
jg
sub
mov
jae
mov
cwtl
jmp
outsb
add
mov
push
jne
addb
or
ss
addr16
jge
insb
mov
mov
dec
sbb
test
mov
sub
adc
mov
or
sub
push
inc
addr16
test
paddw
lret
repz
xchg
icebp
mov
push
adc
push
mov
cmc
imul
xlat
adc
and
xor
insl
out
cmp
adc
jbe
hlt
test
movsb
idivl
outsl
push
and
jb
lahf
sbb
push
mov
jg
xchg
xchg
jg
pop
jno
xor
imul
fwait
cmp
mov
xchg
jae
xchg
sub
and
test
in
movsb
lahf
pushf
faddl
ret
rcl
pop
sbb
call
in
mov
mov
or
mov
and
pop
sahf
gs
mov
jae
cmp
push
ljmp
xchg
xor
and
fbstp
cmc
fbstp
pusha
es
imull
xchg
ficomps
call
cwtl
fwait
aas
sti
and
in
std
cmp
cmpb
scas
arpl
xchg
shl
lcall
mov
push
inc
xor
cmc
dec
sub
out
into
add
cld
test
mov
or
mov
rolb
jle
mov
ffree
dec
push
sbb
cmpsb
int
fisttps
sbb
cld
adc
sti
andl
mov
fs
dec
aas
shll
and
push
mov
and
cmpsl
movsb
adc
pushf
js
adc
xchg
xchg
mov
jae
mov
gs
repz
or
inc
std
push
mov
andl
ss
les
insb
repnz
lret
push
popa
cld
hlt
stc
into
push
mov
fucom
test
popa
inc
out
sbb
xor
nop
dec
scas
movsl
sbb
outsb
pop
add
rcrl
das
mov
push
sbb
inc
lcall
xchg
fmull
pop
adc
ss
mov
pop
in
mov
ffree
jns
jmp
andl
lret
pop
or
enter
leave
inc
push
xor
ja
shl
jg
shll
jb
add
adc
sbb
dec
ficomps
fldenv
jp
mov
push
adc
addb
leave
dec
mov
mull
push
and
stc
jae
jbe
mov
in
cmp
mov
adc
mov
loop
enter
mov
jnp
push
jb
in
mov
out
cltd
in
filds
mov
dec
fists
mov
or
popf
sbb
jmp
sbb
bound
int3
inc
scas
sub
xchg
loope
push
in
int
xchg
mov
frstor
xchg
fsubl
jge
aaa
cwtl
popf
adc
ficoml
inc
sarl
ret
sub
and
loope
cmp
sub
sbb
mov
packsswb
scas
adcl
repnz
and
push
jns
jno
insb
adc
xchg
cmp
xorl
data16
lock
mov
or
cmp
mov
push
hlt
and
xchg
sub
mov
pop
ficoms
dec
xchg
inc
data16
dec
add
mov
jns
lret
psraw
mov
adc
ret
test
mov
push
or
or
ja
push
dec
push
cltd
sub
clc
pop
mov
ljmp
push
cmpsl
sub
cmp
cld
push
or
std
sbb
repnz
movsb
incb
mov
lret
mov
pop
xchg
cld
repz
push
call
fiaddl
test
cmpb
mov
xor
sub
add
ljmp
jb
nop
and
cltd
jnp
mov
not
push
and
cmc
cmp
mov
fisttpl
notl
cmp
test
loopne
lcall
xchg
pop
popf
filds
mov
xchg
pop
add
xchg
addb
adc
enter
lret
icebp
add
scas
pop
in
inc
icebp
cmpsb
or
stc
movsl
repnz
addl
xor
pusha
sub
or
int3
je
shr
test
and
jecxz
repz
and
mov
push
inc
cmp
xchg
cmp
call
arpl
into
push
pop
movsb
sbb
mov
mov
pop
movsb
cmp
jg
fwait
ret
into
mov
in
push
out
mov
push
sarb
data16
dec
lock
fstps
inc
repnz
pop
xor
stos
xlat
loop
pop
gs
mov
push
jl
mov
pop
jns
mov
inc
fwait
adc
push
sbb
into
adc
mov
push
lret
mov
and
bound
pop
inc
aas
push
sub
repnz
jp
aad
mov
sti
adc
mov
push
cmp
mov
ret
mov
shll
or
xor
lds
jns
stos
out
push
jnp
or
pop
adc
movb
and
xor
int3
ja
aam
je
push
fstpt
jb
mov
xchg
std
fsubl
inc
add
jne
js
mov
mov
lcall
sarb
jge
shl
jne
lret
push
arpl
negb
add
inc
lret
ret
cs
pushf
test
mov
cmpsl
add
lock
mov
fisttps
andl
cs
mov
ja
jno
cmp
fcom
dec
loopne
pushf
mov
mov
xchg
or
shlb
sti
jo
leave
int
sub
nop
aaa
inc
cli
out
sub
adc
push
xchg
icebp
jno
aas
repnz
aad
orl
pushf
adc
test
cmp
pop
bnd
dec
xchg
clc
xchg
outsb
adc
add
movsl
sub
mov
shll
ja
lock
js
repnz
jg
imul
fnstsw
pop
pop
outsl
add
dec
sarl
push
das
fcomps
loope
push
hlt
sahf
scas
int3
sub
xor
xchg
movsl
xchg
jne
out
dec
daa
pushf
add
arpl
lock
test
push
push
push
mov
add
in
sbb
xlat
xlat
mov
mov
jbe
jb
cmp
xlat
xor
or
cmpb
jge
inc
and
mov
adc
loope
addr16
jmp
clc
mov
pushf
jae
xor
sarb
pop
mov
xor
lock
dec
pop
sub
repz
push
out
je
arpl
sti
mov
adcl
or
xchg
mov
or
lret
pop
push
lods
fsubs
sahf
or
sbb
enter
jmp
loopne
je
cli
lahf
mov
pop
adc
and
sahf
or
div
in
iret
inc
mov
hlt
push
mov
dec
add
pop
mov
rclb
cmp
and
xlat
cld
xlat
cmp
push
lret
push
pop
dec
fimull
pop
sbb
addl
pop
jne
test
mov
pop
mov
and
pop
lcall
cmpsb
mov
jo
insb
je
jl
jae
lods
sbb
cmp
mov
ficoml
mov
fists
dec
loopne
and
call
enter
mov
sbbb
xchg
lock
fwait
push
das
mov
inc
in
inc
int
mov
sbb
in
hlt
lret
and
arpl
or
nop
mov
dec
mov
lahf
subl
cmpsb
pop
xor
add
hlt
stc
mov
adc
pusha
xor
mov
push
insl
sub
inc
inc
loop
jbe
xchg
jne
aas
and
inc
xchg
les
xchg
std
jns
jge
sub
in
pop
mov
ljmp
repnz
xchg
cmp
xor
inc
dec
mov
hlt
cs
fldcw
cli
ja
cmp
mov
das
out
mov
arpl
sub
xchg
jne
pop
arpl
loope
fsubr
jno
insl
jmp
in
jp
mov
cmp
pop
fsubl
bound
xchg
adc
out
push
fiadds
les
out
and
push
and
jbe
jnp
xchg
shll
addl
fists
adc
jmp
roll
rcrb
fisttpl
div
in
lods
jle
inc
int3
mov
rclb
or
loope
out
cwtl
popf
cmpsb
xchg
push
and
movsl
mov
lcall
mov
mov
fdivrs
repz
sub
es
xor
xchg
jl
pop
push
adc
sti
jmp
push
sbb
jle
cli
cmp
lea
aam
es
repnz
hlt
fnstenv
ret
mov
mov
nop
fs
mov
add
enter
lds
in
mov
adcb
cwtl
inc
jno
jb
in
shlb
mov
sub
and
jo
ret
adc
aam
mov
daa
test
imul
int3
push
pop
inc
mov
cmp
jp
in
and
clc
xorl
xchg
hlt
jp
dec
jge
test
hlt
ror
popf
xor
mov
xor
add
jo
ja
xor
jae
push
cmc
jg
pop
xor
test
rcll
enter
mov
loopne
push
jle
xor
cwtl
xchg
or
and
test
loopne
lea
ficoml
out
test
jb
pop
cmc
test
pop
into
mov
mov
inc
mov
mov
push
fmull
loopne
xchg
int
jb
sub
pop
out
push
push
mov
pop
mov
iret
pop
mov
or
mov
in
push
jmp
cmp
pop
jmp
inc
rorb
and
in
push
inc
pop
inc
mov
pop
or
loopne
mov
pop
adc
xchg
aam
inc
js
insb
mov
cld
out
repnz
cmp
pop
cmpsb
dec
mov
ljmp
jo
jmp
stos
pop
push
cmp
mov
sub
cmp
xchg
jp
fnsave
adc
mov
push
fldl
pop
sub
fbstp
mov
aas
fsubs
pop
lcall
push
pop
mov
sub
push
ds
cwtl
movsl
sbb
push
inc
out
and
add
loop
xchg
fistpll
add
movsb
orl
mov
mov
add
xchg
insb
fs
out
or
sub
cltd
js
int
sub
mov
in
lcall
in
fcom
nop
and
sti
sub
inc
es
ss
adc
xchg
in
clc
push
sbb
nop
xor
xor
or
push
jg
push
iret
jge
adc
insl
mov
mov
outsb
jo
rcrl
xchg
lret
or
dec
sub
call
jle
pop
push
dec
pop
adc
add
out
sahf
and
mov
cwtl
xchg
cmp
mov
dec
insl
in
loope
adc
and
pop
loope
jge
ja
aam
mov
jecxz
les
jae
xchg
dec
pop
push
mov
cwtl
test
mov
repz
dec
jge
mov
mov
dec
inc
xchg
outsl
jb
jmp
mov
inc
xor
ficoms
mov
mov
ret
mov
bound
out
and
and
decb
in
jne
dec
sub
outsb
out
dec
call
imul
jge
inc
shll
xchg
insl
lea
addb
or
mov
test
stos
jno
test
and
test
or
mov
sbb
ss
in
out
jns
xor
pop
push
outsl
aam
outsl
mov
not
sbb
ss
xchg
shrl
inc
lahf
push
mov
push
test
cmp
mov
push
jl
cwtl
sbb
xchg
sub
push
add
pop
or
mov
jp
cltd
jmp
outsb
sub
cmpsb
and
mov
clc
push
cli
rclb
mov
jbe
stos
lds
xchg
inc
clc
js
xchg
xchg
adc
add
lret
pop
lea
or
xchg
aam
movsl
shll
popl
adc
fwait
ret
xchg
mov
or
push
inc
sbb
outsl
sahf
mov
lods
and
fmulp
into
mov
pusha
loopne
stc
cli
rorl
sarl
paddb
inc
loope
sbbl
jno
ljmp
test
imul
and
ds
adc
daa
or
add
dec
mov
mov
bound
cltd
pop
into
pushf
js,pt
or
mov
mov
aam
add
pop
pop
das
imul
cmpsl
fmuls
mov
inc
jnp
lock
mov
jge
ret
seta
mov
push
pop
and
lret
out
xor
jb
loop
repnz
lods
jb
add
add
dec
mov
push
roll
mov
mov
daa
inc
arpl
pop
adc
jns
rolb
inc
xchg
mov
cmpsb
and
sub
cmp
dec
out
sbb
or
adc
dec
adc
lea
xor
in
inc
lods
scas
or
leave
mov
mov
xchg
daa
cmc
das
jno
pop
or
sub
cld
mov
pop
pusha
cmp
inc
pop
out
mov
xchg
cmpsl
jae
mov
fcoms
adc
xchg
dec
push
inc
dec
lret
mov
jb
mov
and
mov
cmp
sti
mov
mov
sub
xor
sbb
lods
insl
stos
jmp
mov
fcomps
xlat
adc
jne
sub
cmp
xor
jg
cmpsb
adc
dec
pop
mov
aaa
mov
mov
xchg
loope
cmp
adc
mov
pop
push
sbb
add
mov
pop
in
outsb
je
fildl
cwtl
imul
in
or
push
xchg
imull
and
or
in
fcoms
sbb
jae
mov
or
push
arpl
out
out
lret
adc
xor
add
and
lods
mov
fwait
xchg
dec
cmp
mov
lea
mov
add
pop
popa
push
das
jg
aaa
aam
jge
out
or
lcall
popf
mov
or
dec
mov
cmp
rolb
xor
rcrb
pop
jp
push
add
les
sub
push
pop
xor
xchg
je
inc
push
jnp
addr16
xchg
imul
out
push
sub
mov
adc
sub
pop
js
xchg
or
addb
mov
inc
call
jmp
mov
jmp
int
pop
pop
cli
jge
dec
pop
adc
lds
fstl
stos
out
add
xchg
jp
and
push
leave
push
int
loop
pusha
popf
sub
jno
bound
sub
cmp
push
fstpt
xchg
pop
xchg
jnp
aad
inc
cmpsl
jbe
dec
mov
jl
je
test
xor
popa
cltd
jae
or
mov
inc
jmp
dec
lods
loopne
adc
hlt
test
jmp
jl
mov
scas
sbb
test
xor
cmpsl
jb
pop
push
data16
push
lea
lret
dec
jb
nop
nop
mov
or
cltd
ret
pop
js
cld
test
cld
nop
pandn
mov
dec
lret
imul
les
inc
movsb
mov
jmp
fimull
daa
fdivrp
icebp
lock
fidivrs
popf
fstp
dec
movsl
xor
push
dec
lahf
mov
rcl
cmp
out
mov
jl
mov
xor
or
icebp
ret
cmp
insb
pop
ret
push
hlt
pop
shl
dec
ds
adc
mov
aaa
lds
clc
data16
jb
fdivrs
bound
out
push
mov
push
sbb
movsb
mov
js
insb
inc
sub
pop
fisubrl
ret
js
xchg
mulb
xor
adc
int
mov
hlt
repz
ja
out
fwait
mov
xchg
fisttps
xchg
ret
jp
xlat
into
addl
adc
cli
dec
repz
or
dec
add
aas
fistl
push
mov
stos
fsubl
push
test
mov
mov
imul
mov
pusha
cwtl
or
lret
cmp
popl
add
lock
subl
stos
sbb
push
add
cmp
cmpsl
data16
icebp
push
sarl
sahf
fchs
dec
xlat
add
lret
dec
xchg
sbb
add
mov
jle
jno
daa
xchg
mov
adc
adc
push
leave
push
jmp
add
stc
cltd
or
rcll
cmp
call
inc
fwait
cmp
dec
bound
and
mov
ljmp
cmp
lret
data16
sarb
pop
pop
mov
xchg
ret
dec
lahf
pushw
jle
arpl
pop
inc
inc
out
pusha
into
data16
jle
sbb
divb
sbb
les
ss
ss
idivb
scas
xchg
inc
insb
jne
lds
arpl
sub
jmp
loope
fsts
sbb
iretw
popl
cmpsb
push
inc
ret
dec
aam
jle
jbe
movsl
inc
mov
addr16
cwtl
push
orl
int3
cmp
pop
lahf
test
and
jmp
das
and
mov
jno
in
adc
xor
inc
aaa
push
fnsave
cwtl
test
push
inc
jp
push
mov
movsb
jno
xor
std
popf
fstl
sub
fdivrl
inc
les
js
jns
xchg
sub
push
and
aaa
mov
insb
scas
insl
adc
xchg
ficompl
lods
xchg
mov
and
or
and
adc
in
aaa
xchg
mov
xor
dec
ja
repnz
cmp
dec
iret
pop
sbb
out
push
adc
ds
mov
and
loop
and
faddp
cmpsl
cmpsl
lds
cmp
addr16
repnz
sub
fcmove
jnp
push
or
xchg
aas
sub
push
sarl
out
sbb
out
dec
lods
ret
xor
lods
cld
in
test
xor
je
icebp
inc
dec
or
sub
outsb
and
jo
fidivrl
fnstenv
adc
push
xor
out
das
fdivrp
dec
and
xchg
imul
pop
xchg
or
mov
das
jg
mov
shl
fimuls
loope
fbstp
xchg
pusha
jbe
testb
pop
add
xchg
or
out
arpl
mov
xchg
imul
mov
pushf
mov
push
sti
outsb
xchg
mov
sbb
xchg
fsubrl
hlt
and
aad
aam
xchg
inc
cmp
sbb
mov
dec
shlb
dec
push
pop
mov
repnz
xor
out
sarl
jge
xchg
xor
cld
aaa
das
in
push
pop
sbb
adc
fists
lahf
in
test
add
dec
mov
push
jno
mov
mov
fdivr
sti
addr16
cmp
filds
push
bound
lods
cmp
shr
test
mov
mov
sub
mov
mov
mov
icebp
or
mov
cmp
xchg
mul
mov
sbb
xor
sbb
pop
mov
les
mov
cmpsb
xchg
inc
mov
push
roll
nop
dec
shll
inc
cli
rcll
jp
lods
and
mov
dec
sub
push
jl
inc
shrl
test
insb
stos
ja
pop
ficoms
mov
sbbl
pop
incl
mov
dec
dec
xor
in
cmpsb
lods
mov
mov
adc
jbe
shl
mov
pop
jne
les
dec
mov
and
dec
stc
cli
adcl
daa
mov
sub
adc
rolb
mov
xchg
add
dec
adc
mov
hlt
jge
roll
jb
loop
push
in
xor
cmp
push
sar
or
sbb
jge
adc
in
add
xlat
sbb
xor
adc
or
data16
xchg
jb
or
cmp
push
lods
inc
mov
pop
pop
lret
cmp
dec
mov
jl
lock
loop
sbb
mov
inc
stos
add
mov
mov
xor
in
push
xchg
jo
jno
cmp
fsts
dec
xchg
mov
jg
mov
addr16
repz
xchg
cmpsl
xchg
xchg
aam
xor
cmc
sbb
cmp
ds
sahf
or
or
cmpsl
jl
and
inc
inc
loop
jp
lret
jmp
pop
push
fldl
xchg
dec
dec
fwait
js
ja
jl
push
sbb
cwtl
push
movsb
lods
js
mov
inc
and
aad
lods
scas
jle
or
sub
loopne
push
pop
nop
fwait
pop
lock
ret
iret
pop
sbb
jp
ss
and
lods
in
cwtl
mov
push
mov
movsb
sbb
ret
ret
mov
jecxz
push
dec
mov
fnstenv
add
jae
dec
jo
repz
jae
out
into
mov
jp
lea
fsubrs
mov
sub
jmp
iret
sub
pop
sbb
leave
test
std
or
das
sub
repnz
sbbl
sbb
xlat
fildll
xchg
pop
outsb
scas
fwait
add
xchg
ror
sbb
inc
popf
xor
int3
repz
ja
cmovo
pop
adc
loope
or
mov
insl
xlat
pop
sti
stos
cmc
push
pop
outsl
sbb
push
or
or
shll
repz
sub
sbb
xor
and
xchg
movsl
jmp
insb
jnp
cmpsb
into
ds
test
sub
insb
inc
sbb
ss
lret
pop
fmul
fstl
xor
clc
fdivrl
mov
adc
dec
mov
rcll
mov
pop
cmp
cmovo
adc
rolb
dec
mov
es
xchg
js
cmp
fildl
and
not
das
jae
cmc
cmpsl
inc
cli
lods
jae
add
test
les
mov
inc
xor
int3
enter
fimull
xchg
cmp
jle
in
test
mov
xchg
into
cmp
dec
jnp
xchg
stos
mov
imul
stc
sti
iret
mov
xor
sbb
mov
push
imul
rcrb
mov
xchg
pop
dec
push
or
sub
inc
hlt
push
sbb
ret
adcl
cltd
or
das
jmp
into
and
push
inc
fadd
or
xor
pop
mov
mov
stc
or
adc
je
rorl
xor
scas
cmp
je
xchg
cs
xor
add
loope
es
addl
xchg
adc
pop
pop
fwait
xor
icebp
test
pushf
inc
sub
dec
push
addr16
and
pop
js
jo
fnstcw
push
sahf
nop
fs
cmpsl
jmp
in
cwtl
xor
xor
leave
adc
sbb
jge
sbb
jne
and
mov
jne
andb
mov
lea
push
scas
movsl
sub
mov
mov
pop
jecxz
push
jb
loopne
test
cmpsl
iret
pushf
insb
fst
or
out
leave
sahf
subb
mov
jl
xor
lods
xchg
mov
sbb
bound
hlt
stos
sub
ss
sub
in
decb
imul
inc
adc
pop
stc
xchg
jo
test
xchg
push
mov
sbb
jb
jb
fildl
cmpl
call
mov
jne
pop
cmp
pop
arpl
mov
inc
int3
mul
pop
xchg
and
into
adc
lods
and
push
push
pop
mov
cltd
lock
pop
popf
in
add
hlt
or
add
xchg
mov
cmp
stos
insl
data16
xlat
mov
mov
fs
mov
movsl
cmp
cmp
daa
fsin
rcrb
popa
lods
cmc
xor
bound
in
and
jecxz
orl
shlb
out
scas
mov
rcrl
lods
std
mov
pop
pop
xor
hlt
loop
sub
jecxz
mov
or
sbb
test
dec
int
cmp
or
and
xchg
mov
fdivl
inc
int3
cmp
add
pushf
cmpsb
fwait
test
lret
jb
nop
lahf
xlat
in
mov
adc
addr16
push
sbb
shr
cltd
dec
addr16
xor
mov
cmpsl
sbb
or
mov
int3
stos
test
add
mov
mov
lds
push
cmp
loope
cpuid
jecxz
add
inc
in
inc
cmpsb
outsb
push
out
and
push
divl
jle
or
push
test
pop
lcall
sub
js
imul
subb
int3
pop
push
loope
sbbl
test
mov
in
xchg
movsl
push
ljmp
cmpsb
ljmp
push
xchg
xchg
add
xchg
push
fwait
xchg
mov
jmp
cmp
outsl
insb
sahf
out
loope
mov
cmp
leave
icebp
lahf
daa
pop
out
xor
je
pop
adc
inc
xlat
mov
inc
xchg
xchg
sub
daa
inc
imul
mov
les
inc
and
test
pop
dec
mov
xlat
xchg
pop
or
int
scas
ljmp
aam
insl
movsl
into
sub
imul
and
aad
mov
mov
fists
push
cmp
shll
fisubl
fucom
hlt
ficomps
push
fildll
fcomp
pop
das
data16
imul
push
in
push
aam
xor
ret
and
out
orl
scas
lock
dec
lahf
sub
pushf
dec
repnz
repnz
decl
lods
cs
lret
add
push
xchg
push
sbb
mov
rcll
cmp
push
loop
or
pop
repz
and
sub
cs
inc
xchg
sbb
sub
pushl
push
or
fldenv
scas
pop
mov
mov
cmp
push
mov
ret
out
cwtl
imul
nop
add
and
mov
dec
push
push
fldt
jns
cmp
jnp
adcb
sub
mov
dec
aaa
xchg
inc
dec
lock
cs
bnd
mov
fimull
xchg
fnstenv
lcall
adc
adc
dec
ficompl
push
movsl
cs
das
fstpl
outsb
cmpsl
shrl
gs
push
sub
andl
stos
adc
mov
lret
inc
ret
adc
mov
cmp
or
jb
push
cmp
gs
mov
shr
pushf
sub
sub
dec
mov
pop
xor
push
cmp
lds
cmp
jecxz
push
repnz
fldt
andps
lds
stc
adc
repnz
jl
dec
mov
jo
inc
jge
sub
xchg
sbb
jge
stc
out
mov
fwait
push
inc
and
jle
int
rcrl
lea
xor
insb
ljmp
sub
push
mov
fstl
cmp
mov
test
lods
out
mov
mov
cmp
dec
push
fmull
pop
inc
cs
in
popf
jmp
xchg
add
pop
out
sbb
aam
mov
xor
mov
sbb
test
cmc
daa
test
pop
adc
cli
sbb
mov
cmpsb
in
fwait
or
add
lcall
push
and
jmp
js
inc
addb
mov
ljmp
pop
mov
ret
mov
insb
std
movsl
or
xor
fdivrl
mov
pop
push
out
out
sahf
push
push
daa
push
movsb
dec
outsb
push
pushf
xor
xor
inc
out
cmp
push
jecxz
mov
frstor
mov
outsl
adc
pushf
call
adc
fs
push
mov
adc
enter
addr16
repnz
mov
lret
push
jns
dec
pop
je
icebp
enter
mov
cmp
sbb
mov
xor
mov
addl
adc
ss
jmp
cli
test
call
mov
ja
adc
mov
push
mov
adc
mov
dec
push
rcl
pop
dec
xchg
outsb
pop
lret
in
mov
roll
add
mov
cmc
pop
loopne
mov
mov
sti
jecxz
xor
mov
daa
aam
jl
les
cmp
and
inc
mov
push
and
cs
push
repz
dec
loop
lcall
call
dec
loope
orb
dec
add
mov
fadds
out
jl
mov
add
popa
jp
or
leave
push
in
xlat
clc
mov
aas
pop
repz
xchg
cmp
pusha
add
repz
aad
daa
addr16
repz
adc
cwtl
cmp
int3
aam
in
ja
outsb
sbb
int
loope
and
repnz
pop
add
fwait
pop
jmp
mov
cmpsl
imull
cmp
mov
lock
mov
mov
clc
dec
lods
sbb
mov
jnp
inc
sub
fmulp
pop
outsl
iret
inc
mov
sub
outsl
adc
fstpl
jecxz
repnz
xchg
repnz
call
mov
test
mov
fiadds
mov
jle
xor
cld
mov
shl
dec
call
out
mov
pop
aad
xor
orl
aad
sub
inc
xlat
movb
rclb
lahf
je
bound
dec
and
push
imul
jo
ret
rcr
add
test
dec
mov
sarl
xchg
xchg
push
xchg
shl
lock
sti
out
pushf
xorb
lahf
pop
dec
sub
add
push
cld
cmp
mov
xchg
add
aad
mov
popf
mov
daa
lods
popa
das
int
aam
in
ret
push
xchg
packsswb
and
ljmp
sar
add
cmc
rolb
stos
and
and
repz
xchg
cmp
inc
mov
sbb
scas
mov
sbb
sbb
dec
popf
subl
std
inc
je
sysexit
addr16
stos
sar
out
xor
hlt
fistl
push
dec
dec
xor
cltd
push
mov
pop
mov
sbb
insl
daa
xchg
lds
mov
or
push
lock
lcall
mov
sub
mov
ror
push
xchg
push
addb
sbb
dec
adc
repz
jno
ror
xchg
inc
mov
push
add
neg
out
mov
pop
cld
pop
dec
roll
call
in
imul
hlt
xor
stc
add
jne
cld
cmp
push
movsb
jmp
add
lcall
test
mov
cmp
loop
lcall
sub
adc
cmp
xchg
movsl
jae
test
outsl
daa
outsb
push
int
insl
and
pop
pop
push
cwtl
adc
sbb
inc
sub
sbb
js
jae
push
dec
dec
scas
int
sub
and
adc
stos
ja
dec
shlb
addr16
sub
mov
fnstcw
sbb
push
xchg
mov
xor
cmp
outsl
out
adcb
xchg
jecxz
loop
outsb
adc
push
lret
sbb
frstor
test
pop
adc
jg
dec
test
xor
pop
filds
pushf
and
in
fdivrl
pop
xchg
ret
fs
pop
inc
cwtl
xchg
and
sti
sbb
jp
test
loop
sub
lods
fstl
sbb
cmp
push
sbb
jp
bound
mov
inc
jb
pop
jo
jmp
test
lcall
dec
stc
mov
in
jmp
xor
mov
out
push
or
rcl
adc
sbb
iret
in
cli
lret
movsb
adc
mov
xchg
sbb
xor
inc
lcall
push
sbb
ret
and
pop
lcall
out
ja
pop
rcrb
cmpsb
hlt
je
ret
test
nop
lahf
stos
out
jg
outsb
cs
xchg
cli
ss
adc
in
add
inc
push
gs
fcoms
repnz
xlat
jns
lock
cmp
addl
mov
xchg
xorb
xor
mov
int3
test
or
mov
hlt
cld
cwtl
or
mov
inc
out
push
xor
pushf
pushf
adcb
out
inc
ret
xlat
mov
pop
fcomps
mov
adc
sub
addr16
nop
fcomip
or
sbb
mov
dec
jo
or
mov
subl
mov
pop
dec
ja
ljmp
rcrb
lock
clc
mov
mov
push
outsl
and
inc
stc
or
dec
xchg
lcall
or
icebp
adc
jg
dec
aas
cs
pushf
inc
mov
shll
in
push
sbb
dec
and
jmp
fidivrl
cmp
mov
mov
jae
push
pop
xchg
pusha
inc
or
xor
mov
and
push
dec
loop
lret
test
sbb
sub
enter
scas
xchg
jge
data16
in
jo
push
ret
test
repnz
xor
xor
fbstp
inc
out
imul
shlb
icebp
jl
cmpsb
jp
leave
mov
ds
orl
add
and
loopne
sub
hlt
hlt
inc
imul
push
and
push
movhps
inc
push
mov
shrb
insb
mov
mov
pushf
or
pop
enter
out
cmp
mov
mov
jp
lods
rorl
fistl
iret
jo
js
insl
mov
repnz
mov
sti
je
aam
out
dec
jo
dec
ret
inc
pop
add
mov
enter
mov
sub
nop
pushf
je
cmc
ja
push
push
pop
jne
xchg
hlt
xchg
and
cltd
add
jb
fnstcw
jmp
iret
mull
jne
sub
andb
scas
aad
xchg
pop
lock
push
call
xchg
mov
push
clc
aam
lret
faddl
in
pop
add
test
insl
mov
outsb
sysenter
lcall
test
mov
in
clc
lahf
pop
shll
mov
in
xchg
shrl
mov
lods
pop
mov
sbb
xchg
adc
bound
imul
popf
jb
mov
cmp
lea
ja
dec
add
jno
xchg
mov
xchg
pop
int
mov
cmc
mov
aaa
enter
int
lock
or
xchg
cmp
imul
les
pop
das
inc
push
sti
jl
mov
outsb
dec
or
pop
test
cmp
out
rep
sub
sub
inc
bound
imul
daa
out
xchg
idivl
sbb
imul
ret
mov
mov
sarl
out
cmp
add
cmp
lds
mov
dec
xchg
sahf
push
xor
add
les
stc
dec
or
cmp
movsl
xchg
cmpsl
daa
mov
sub
insb
negb
xor
inc
popf
ja
sarb
in
cli
cmp
inc
add
div
lret
inc
sbb
test
shll
loopne
jne
and
sbb
lea
push
stos
xlat
adc
sub
bound
loope
or
mov
sub
addr16
xor
xor
call
jmp
mov
xor
std
and
cmpsl
loopne
dec
sub
enter
call
je
loope
lods
lock
ja
mov
inc
addr16
sbb
fdivrs
pushf
pop
fcom
sarb
xchg
jne
ljmp
outsl
outsb
cmovg
xchg
pop
inc
es
cwtl
xchg
sbb
out
push
adc
adc
lea
fadds
loopne
icebp
mov
jge
xchg
jae
mov
ud2
in
pop
divl
cmc
mov
imul
sbb
icebp
jnp
ss
add
and
out
pushf
mov
nop
xchg
data16
ds
mov
leave
in
ja
aam
arpl
lahf
mov
dec
mov
jge
clc
jne
stos
sub
inc
add
push
mov
testl
cmp
mov
fidivrl
fwait
outsl
and
cmp
hlt
lods
mov
pop
lods
push
jns
cmp
mov
add
jnp
adcl
pusha
add
lret
test
notb
push
mov
iret
mov
fnstcw
lds
stos
lea
sbb
cmp
loop
lret
xchg
mov
inc
out
pop
lcallw
adc
test
mov
int
adc
popf
cmp
in
movb
inc
mov
test
push
mov
or
aad
insb
vxorps
leave
popf
popl
and
negb
fdivrl
dec
lahf
mov
mov
lret
ucomiss
push
sub
sysret
and
push
fdivrs
dec
xor
pop
add
sbb
out
addr16
push
mov
popf
addr16
push
arpl
test
mov
mov
mov
mov
inc
fdivrs
cld
mov
pop
and
xlat
scas
mov
test
pushf
xor
repnz
cli
dec
iret
leave
mov
mov
sub
sbb
cli
fcmovbe
out
test
or
in
ret
les
jmp
insb
scas
movl
ja
xchg
or
jb
cmp
xor
adc
fildl
push
and
int3
in
add
cmpsb
bound
loop
xor
les
scas
push
jl
adc
or
xor
xchg
in
adc
fistl
scas
imul
fwait
aam
movsl
mov
les
incb
jo
add
push
inc
xchg
addr16
outsl
inc
xor
inc
inc
aam
or
or
hlt
xchg
rcl
imul
sbb
in
cmp
xor
xchg
lret
adc
rcrb
lahf
sti
sti
lea
icebp
in
cmp
rcrb
aad
mov
mov
xor
mov
push
cwtl
fidivrs
xchg
jo
lods
cmp
clc
pop
in
jnp
sbb
xchg
xor
arpl
sbb
mov
imul
hlt
daa
sbb
inc
xchg
and
push
fbld
test
mov
xchg
adc
mov
in
insb
dec
scas
mov
std
mov
xor
sbb
mov
xor
jnp
jno
mov
data16
xchg
leave
pop
mov
mov
lret
daa
cmpb
ljmp
insl
imul
jmp
xchg
inc
pop
or
mov
fisubl
push
dec
call
les
mov
in
lret
addb
xchg
outsb
inc
popf
iret
inc
call
loopne
xor
lea
notb
xor
into
mov
test
hlt
mov
xor
mov
sarb
fmul
lds
daa
add
pusha
push
leave
fwait
and
cmp
lock
stos
aaa
push
mov
int3
popa
clc
sbb
xchg
imul
xchg
inc
mov
bnd
inc
sbb
xchg
cmpsl
push
repz
mov
std
jg
imul
int3
push
xchg
outsl
shll
jbe
cmpsb
movl
out
and
cmp
fdivs
inc
push
movsl
jecxz
dec
sbb
sub
test
imul
arpl
leave
or
cmp
loop
jmp
test
loope,pt
xor
fisttpll
scas
cld
adc
inc
add
xchg
sbb
insb
pop
gs
ds
rorb
jmp
in
push
xlat
add
cld
jmp
adc
pop
scas
mov
sbb
adc
and
outsl
movsb
hlt
cmp
jge
sbb
pop
jae
lods
shrb
xchg
and
mov
mov
mov
mov
jmp
jmp
test
jbe
jo
js
add
sbb
insl
test
fistpl
ja
pop
inc
push
jo
cltd
xchg
jae
popf
movsb
push
mov
mov
xlat
movsb
sbb
jge
add
int3
or
dec
sbb
xlat
lock
and
hlt
sbb
je
imul
repnz
mov
leave
mov
inc
push
sbb
ret
xlat
fwait
mulb
insb
mov
inc
scas
into
pop
mov
xor
std
repnz
cmc
xor
mov
cmpsl
jge
push
mov
pop
inc
pop
pop
je
and
push
idiv
ret
jbe
cmc
data16
xchg
cs
in
adc
xchg
sbb
bound
push
jne
mov
pop
push
mov
icebp
jnp,pn
test
dec
lods
scas
and
inc
pop
and
add
fidivrl
mov
nop
fadds
insb
mov
or
test
xor
jno
lds
pop
dec
ljmp
push
xchg
nop
mov
xchg
sub
out
insl
push
add
insl
and
pop
mov
enterw
mov
mov
sub
cli
es
xlat
or
dec
and
inc
lcall
cltd
sahf
orl
cmp
sub
mov
xchg
inc
pop
ret
jp
and
lcall
fstpl
jae
ficoms
lods
sti
and
fwait
rcrb
movsl
sbb
inc
std
and
sub
adc
add
adc
lret
cmp
ds
mov
fnstcw
pop
and
dec
inc
rcrl
pop
mov
mov
add
cmp
sbb
std
xor
insb
jecxz
cmp
mov
dec
je
loop
loope
addr16
cmp
and
lods
mov
inc
push
mov
std
jp
lods
add
pop
mov
push
ret
jns
sub
sub
out
mov
or
inc
lods
lods
and
lea
mov
jo
into
stos
pop
bound
movsb
insb
bound
into
add
mov
xchg
enter
fcoml
int
mov
mov
cmp
daa
mov
mov
js
outsb
mov
xor
aam
pop
fcompl
add
or
xchg
test
jae
loop
xor
cmp
sarb
xchg
ljmp
fbstp
pop
icebp
nop
push
out
rcr
push
into
loope
mov
sbb
ret
xor
cmpsb
jno
push
lea
jne
das
jae
inc
pop
sbb
dec
xor
and
test
sti
pop
push
jb
cwtl
xor
xor
adcl
fcoms
pop
or
dec
and
lds
fstpt
lret
shlb
les
mov
loop
or
je
frstor
pop
js
ljmp
and
addr16
mov
rolb
sbb
test
dec
outsb
call
imul
adc
inc
hlt
nop
push
and
jge
xor
addb
mov
dec
arpl
or
shlb
adc
sahf
arpl
mov
std
lahf
cmp
push
fwait
ja
stos
pushf
stc
jae
cli
sbb
jmp
xor
rcr
mov
out
mov
nop
cld
test
push
xor
sbb
jo
xchg
jae
mov
mov
rcrl
or
insb
push
sub
xchg
sub
xchg
jmp
push
sbbb
add
xchg
pusha
fs
adc
sub
push
loop
ss
inc
iret
sub
jmp
icebp
push
inc
xor
adc
pop
out
sbb
add
std
outsb
push
daa
push
push
mov
dec
flds
lds
ret
sbb
mov
mov
mov
sbb
es
lock
pop
sbb
jmp
jmp
nop
sbb
push
jb
cmc
adc
lret
adc
lcall
jle
mov
int
popa
xlat
lods
push
sti
push
stos
jb
jge
cmpsl
lods
and
jle
adc
stos
jno
fdivs
pop
push
dec
xor
xor
dec
pop
push
add
inc
ja
inc
lret
cmc
xor
adc
int
out
xrelease
std
dec
stos
pop
in
xor
pop
imul
imull
nop
fisubs
push
aas
stos
mov
int
pop
mov
test
jmp
mov
mov
insb
push
push
int
and
push
enter
fxtract
gs
xor
mov
loope
pop
lahf
ja
xor
sbb
imul
addr16
pop
ret
jno
subb
push
mov
sub
iret
mov
cmp
pop
ret
jae
and
push
cmpsl
xlat
shlb
mov
sarl
ss
fistps
sahf
pop
add
pop
lock
out
shll
sarb
sub
push
stos
fldl
xchg
ljmp
mulb
movsl
mov
xor
sahf
mov
jge
cmp
outsb
sbb
cmp
mov
bound
nop
xor
or
push
adc
leave
inc
mov
jmp
mov
ret
push
shrl
aam
inc
jg
int
jle
xchg
cmp
sahf
dec
and
ja
rorb
mov
xchg
jne
jmp
jno
push
push
jecxz
lea
ficomps
push
and
push
sti
xorl
jmp
jns
cmc
or
js
shl
jbe
pusha
jmp
and
mov
sub
sahf
pop
test
mov
ret
orb
mov
dec
xor
sti
or
dec
jge
cmc
adc
movsl
rcl
jbe
pop
xor
and
jbe
or
sbb
pusha
jae,pn
add
ret
adc
or
add
and
shrb
pop
dec
cmp
clc
xor
xor
sub
inc
adc
jl
stos
in
adc
add
xlat
adc
loope
push
insb
and
sbb
stos
gs
scas
xor
loop
repz
mov
mov
lods
add
mov
dec
aad
sbb
int
insb
cmp
adc
loopne
sub
inc
inc
add
add
cmpsl
jnp
movsl
push
clc
ds
xchg
jmp
sbb
adc
xchg
pushf
cmp
test
dec
movsb
test
test
mov
push
lds
xchg
fucomp
jnp
sbb
nop
movsl
sbb
mov
sbb
out
mov
add
jb
adc
aas
lcall
mov
cld
push
sub
fmuls
addl
mov
adc
pop
ljmp
repnz
xor
in
rcrl
loopne
sahf
loopne
mov
cli
aad
daa
and
das
xor
mov
or
scas
shl
aam
xchg
roll
testl
or
clc
insl
aad
mov
out
pop
push
nopl
dec
mov
inc
repnz
in
addr16
imul
sbb
sub
sub
lahf
imul
xchg
pop
cmp
push
xor
pop
mov
mov
cmc
out
cmp
scas
xchg
fcompl
sub
sub
fs
daa
lret
mov
imul
sub
cmp
mov
push
pop
sbb
std
mov
shrl
xlat
mov
pop
gs
rcll
xlat
add
shrb
mov
mov
push
mov
js
cmp
mov
dec
int3
sbb
inc
cmp
data16
fidivl
adc
sbb
sarb
cld
mov
mov
and
fsub
or
out
lock
and
fildll
cs
pop
sub
mov
dec
ds
les
and
andb
insl
int3
mov
add
push
sub
push
out
mov
nop
int
mov
int3
sbb
pusha
mov
fnsave
cmp
mov
ljmp
in
incl
cld
inc
pop
dec
mov
repnz
loope
movsl
push
in
xor
roll
jmp
jae
inc
mov
dec
icebp
add
adc
ror
cwtl
pop
stos
inc
jle
pop
cmpsb
sbb
int
loopne
ficompl
mov
call
in
inc
mov
testl
aaa
aad
jle
inc
push
dec
fcomps
scas
xor
mov
jno
out
mov
ss
addl
mov
pop
inc
mov
push
pop
inc
es
leave
mov
call
dec
dec
push
stc
and
cld
mov
xchg
mov
add
cmp
or
mov
sbb
adc
rorb
mov
sahf
in
cmp
icebp
mov
subb
jg
fs
mov
dec
dec
mov
cwtl
decl
lods
adc
pop
cmp
adc
add
jns
push
fisubrl
jmp
push
cmp
repz
dec
xchg
out
add
test
ss
jae
ss
or
lds
popf
dec
ja
mov
mov
jge
int3
test
jo
arpl
add
lds
std
mov
call
leave
les
push
push
in
ss
dec
clc
push
mov
leave
pop
mov
daa
pushfw
xor
pop
cmp
sbb
insb
lock
mov
xchg
jne
pusha
jns
lret
addl
je
aaa
inc
push
insb
and
xor
stos
inc
inc
lea
fdivs
adc
outsb
js
rcr
fnstsw
rsm
addr16
ror
xor
jg
mov
jno
push
mov
and
cmp
or
sub
pause
loope
and
mov
subb
push
leave
pop
jecxz
jecxz
jns
sub
test
out
mov
mov
in
nop
and
mov
mov
and
inc
mov
sti
or
std
cwtl
sbb
cld
enter
rcrb
xor
push
jbe
hlt
pop
cmp
shl
outsl
mov
enter
out
pusha
mov
mov
aad
adc
sbb
je
rorl
push
push
enter
fsts
movsb
and
imul
sbb
mov
push
and
pop
negl
cmpsl
fstpt
popf
pop
mov
out
jmp
scas
pop
xchg
fsubrl
mov
inc
sahf
mov
fildl
mov
test
repz
add
xchg
xchg
data16
in
jne
adc
mov
add
or
add
movsl
dec
pusha
int
aaa
scas
adc
jge
lea
mov
xor
test
lcall
mov
pop
sub
cwtl
push
cmp
iret
xchg
lahf
jge
push
sbb
jne
repnz
out
hlt
in
arpl
fstpl
js
in
cmp
mulb
shll
dec
daa
data16
jne
mov
add
loop
ljmp
in
cmc
stos
fsub
cmpsb
jbe
enter
out
jns
test
aas
fwait
cld
outsb
mov
fwait
dec
add
int
cmp
sbb
mov
in
cmp
dec
andl
pop
int3
cmpsl
pop
push
inc
fists
cltd
imul
xlat
push
sbbl
inc
pop
test
ds
pop
lret
mov
inc
jle
and
jns
bound
cmc
pop
cmp
cmpl
fs
insl
repnz
fsubrs
aas
je
fs
pop
inc
fisubrl
adc
jmp
adc
das
outsl
xor
imul
dec
mul
daa
js
je
mov
leave
pop
xchg
dec
in
lahf
outsb
jle
sbb
addb
mov
je
push
xchg
xor
mov
mov
scas
mov
fisubs
xchg
scas
ja
scas
pop
push
cld
cmp
stos
shrb
bound
callw
je
jae
pop
popa
push
jns
xorb
mov
pop
rorb
fwait
cmp
lea
push
jecxz
push
popf
fidivrl
add
push
push
sub
sbb
into
mov
outsb
mov
ljmp
outsb
in
and
mov
mov
repz
shrl
jl
pushf
push
xchg
sub
fs
data16
mov
ljmp
and
add
xchg
add
adc
sbb
xor
xchg
mov
sti
mov
jecxz
fnsave
xor
jmp
and
testb
mov
mov
cmp
jg,pt
pop
sub
inc
push
test
cmp
mov
dec
inc
cmpsb
outsl
pop
mov
flds
stc
enter
pop
push
push
xchg
mov
sbb
sub
js
xor
xor
fwait
mov
mov
xchg
dec
pop
mov
rol
sub
arpl
adc
stos
and
jae
pushf
dec
roll
pop
or
dec
push
hlt
movsb
orl
pusha
aam
test
test
test
push
rol
lret
lods
dec
push
adc
pop
mov
mov
fadds
sbb
lods
mov
adcb
ja
adc
sub
leave
xchg
pushf
mov
add
test
lahf
lcall
lds
push
in
popf
cmp
lods
xor
sbb
fucomp
cmp
xorl
mov
ret
push
inc
cmp
mov
push
mov
dec
sarl
test
mov
push
xchg
shlb
mov
fistpll
push
movsl
lods
dec
dec
fcoml
rol
pop
jp
cli
adc
jnp
aam
push
cmpsb
je
loopne
push
mov
loop
fidivrs
pusha
and
inc
mov
inc
mov
scas
and
movsb
data16
jbe
loop
mov
movsb
movsb
xor
rolb
enter
ret
shll
shll
inc
movsb
sahf
lret
or
sbb
stos
stos
push
pop
fdivl
in
out
je
cli
adc
adc
push
or
sbb
in
add
pop
jne
xlat
inc
add
mov
and
loopne
ret
loop
jmp
dec
movsl
and
movsl
loop
jmp
and
xor
jge
cmp
inc
fs
fisubl
cmp
mov
sbb
add
pop
fdivs
test
jo
mov
std
xor
notl
sub
movsb
mov
sbb
add
mov
mov
test
mov
div
adc
pop
lahf
mov
int
push
add
push
xchg
loop
mov
lock
insb
mov
ds
or
scas
xchg
cmp
mov
xchg
dec
mov
inc
xchg
fdiv
out
mov
out
mov
or
or
fdivs
lret
adc
push
xor
push
and
dec
sbbb
adc
loopne
mov
adc
jl
push
cltd
pop
pop
jo
and
cmp
insl
dec
sub
scas
xor
sub
jmp
or
sub
xor
cmpsl
sbb
add
pop
push
loop
cmp
jl
mov
mov
shll
jmp
pop
and
ret
xor
and
mov
in
addr16
das
adc
jmp
cs
mov
fdivrs
ficoml
mov
mov
and
insb
xor
dec
and
orl
cltd
aaa
sbb
ljmp
mov
inc
mov
cmp
sbb
xor
push
push
cwtl
out
popa
or
in
hlt
mov
mov
mov
sti
iret
out
iret
cmp
mov
arpl
or
inc
lods
insl
dec
mov
adc
sahf
cmp
sub
push
jae
push
mov
cmc
fdivr
jns
dec
ds
mov
fwait
gs
dec
repnz
imul
pop
je
inc
jnp
fmuls
sub
xchg
adc
adc
adc
push
imul
jp
daa
and
mov
jns
cmpsl
shll
mov
xchg
jb
adc
cmp
cmp
dec
rol
lret
push
and
or
int3
or
daa
aad
ret
mov
and
jl
mov
testb
movsl
push
mov
scas
ds
mov
lods
test
push
lds
inc
mov
and
clc
in
insb
mov
fs
or
inc
inc
xchg
dec
xchg
rolb
insl
mov
es
cs
push
mov
stos
inc
ret
cmp
jnp
xchg
jle
or
xchg
cmp
lea
pop
popa
int3
sub
mov
aad
shlb
inc
mov
mov
or
xchg
pop
inc
lret
add
insb
cmp
stc
rcr
aad
mov
dec
mov
xor
rcll
fsubr
xor
dec
loop
inc
pop
jge
jnp
ret
cmc
notl
xor
mov
ds
cli
pop
cltd
mov
pop
flds
lock
xor
xadd
je
pusha
xor
cmc
sbb
test
xor
gs
sbb
mov
and
sub
cli
mov
es
mov
xlat
out
outsl
idivl
pushl
xchg
arpl
in
sbb
or
inc
je
outsb
add
arpl
pop
inc
insl
sbb
dec
mov
call
sbb
cmp
push
sub
inc
call
push
pushl
std
pop
out
or
sbb
xor
roll
mov
out
iret
push
pushf
sub
enter
stos
insb
pop
adc
test
pop
mov
cld
and
push
test
pop
sbb
mov
lock
xor
push
scas
and
xchg
les
adc
sub
add
sub
cli
ss
inc
xchg
into
enter
mov
push
push
nop
inc
mov
daa
cmp
adc
insl
sahf
mov
stc
inc
fs
xlat
in
xchg
jb
mov
jecxz
cmp
cmp
adc
mov
sbb
pop
aaa
sbb
fdivl
ficoms
add
sub
bound
mov
and
int
movsl
out
and
insl
mov
adc
mov
and
mov
push
add
out
lea
and
loop
dec
sarl
clc
cmp
pushf
push
scas
stos
inc
mov
mov
xor
inc
adc
xlat
shr
das
mov
sub
or
es
pop
xchg
xchg
sbb
clc
and
aam
lret
mov
test
sub
sbb
jo
or
push
ret
xchg
mov
mov
adc
lds
push
and
int3
jp
cli
pop
fdivs
and
je
sarb
xlat
push
dec
pop
out
cmpsl
je
adc
pop
dec
mov
cld
or
push
jmp
push
mov
movsl
inc
aas
inc
dec
dec
ss
dec
das
fcmovu
fcmovne
arpl
cwtl
loop
aam
push
pop
sub
mov
mov
jo
cld
fstps
pop
inc
pop
enter
jmp
xchg
out
outsb
sbbl
push
pmaddwd
imul
mov
mov
rolb
jge
aam
mov
test
jmp
jo
dec
jne
adc
xor
xor
sbbb
xor
pop
sub
scas
or
mov
mov
mov
pop
mov
ret
push
imul
jne
mov
sbb
addr16
cmpsl
outsb
jb
nop
sbb
les
mov
jb
int
lea
push
ret
lsl
xchg
pop
mov
inc
outsl
and
adc
mov
sbbl
fsubr
sbb
xorl
test
popa
stos
pushf
mov
mov
pop
push
jecxz
xor
jl
dec
push
rcl
lcall
add
pop
in
jp
ljmp
pushf
xchg
sub
or
pop
pop
in
pop
add
push
or
outsl
lea
loop
fst
jb
mov
mov
out
sahf
out
add
adc
add
cmp
adc
fdivl
xchg
fwait
les
push
ljmp
repnz
and
or
push
popa
pop
stos
loopne
or
mov
lret
push
out
in
std
sbb
bound
or
sahf
adc
cwtl
cmp
enter
dec
push
rol
aam
test
jae
xor
hlt
sbbb
test
inc
xor
inc
shr
movsb
movsb
je
jns
es
adc
sahf
jecxz
pop
lods
cmpsb
les
xchg
sub
push
sbbl
hlt
inc
dec
dec
clc
sbb
movsb
pcmpgtd
jmp
push
cmp
orb
sti
imulb
xchg
xchg
lret
int
imul
xor
mov
add
bound
xchg
rcl
shrl
or
mov
test
mov
and
sub
adc
mov
das
or
int
stos
fimull
cs
pushf
jnp
pushf
insl
or
and
add
xchg
jp
inc
rcll
xchg
xor
clc
jecxz
jl
cld
push
xlat
pop
mov
into
outsb
adc
or
or
in
lahf
je
outsb
addl
push
imul
cmpsb
mov
insl
clc
push
imul
repz
mov
mov
pslld
je
dec
out
sbb
rcrl
dec
sbb
mov
sub
loope
xchg
ret
adc
mov
outsl
dec
adc
add
addr16
sbb
mov
jge
addr16
fdivrs
fst
dec
scas
into
lret
js
xor
push
outsl
pop
ficomps
andb
cmp
out
leave
aas
in
out
adc
push
sub
pop
sub
loope
push
lock
or
in
popa
and
xchg
arpl
sbb
dec
leave
push
jl
inc
lea
add
movsl
xchg
cmp
insb
dec
outsl
lea
xlat
xlat
ja
or
jge
test
xor
pop
ds
xor
xchg
xor
fimull
fnsave
stos
ds
sbb
in
xchg
int
fcoml
inc
cmp
inc
js
lcall
fcmovnu
mov
xor
lods
pop
mov
push
add
mov
sbb
jns
pop
ja
push
inc
popa
dec
dec
push
scas
sbb
test
dec
mov
fdiv
lret
enter
and
nop
cs
sub
sub
das
inc
ljmp
mov
xor
inc
pshufw
and
add
push
pop
mov
sbb
repz
loope
outsb
cmpsl
loopne
pop
out
push
jae
pop
xlat
out
jne
shrb
ret
nop
add
mov
cli
push
mov
mov
gs
push
sarl
push
icebp
jge
pop
mov
adc
sbb
je
mov
sbb
pusha
or
out
sbb
fld
mov
ja
lea
xchg
outsl
dec
stos
jp
cmp
mov
and
ds
push
jae
pop
cmp
and
fdivrl
ljmp
mov
pusha
ljmp
movsl
js
push
clc
sbb
jo
push
test
cmp
fs
push
repz
ret
push
xor
clc
push
push
lret
loopne
fisubl
xor
pop
cmpsl
adc
jae
mov
push
fcomps
adc
mov
or
sub
pop
push
mov
jecxz
sbb
mov
and
insb
inc
mov
mov
and
pop
adc
sarl
add
fwait
dec
mov
add
scas
xchg
call
and
sub
cmpsl
insl
sub
fisubl
lea
frstor
pop
test
jg
mov
mov
int
or
fdivrl
inc
sub
les
int3
es
mov
add
lret
fadd
dec
pop
roll
dec
test
mov
aad
call
repz
mov
pop
pop
nop
mov
lods
jnp
cmpsl
or
inc
stos
lods
loop
rorl
lock
xchg
jbe
sub
mov
cmp
fists
mov
pop
ret
xchg
lods
add
cli
in
ljmp
int
push
cmp
movsb
mov
pusha
in
push
push
xor
call
xor
scas
jl
add
popa
mov
jo
jne
fldenv
xchg
insb
mov
mov
jmp
cmc
int3
adc
ds
mov
and
jge
test
sar
pop
add
aaa
hlt
data16
shlb
jo
popf
pop
xchg
ds
add
in
cs
outsb
add
sub
nop/reserved
and
inc
add
mov
mov
dec
aad
mov
test
pop
lds
xchg
dec
pop
aad
cs
pop
jbe
cltd
daa
movsb
aad
sbb
xor
jl
mov
sub
icebp
mov
es
out
movsl
aad
pop
sbb
and
push
fsubs
dec
pop
out
scas
lcall
aam
scas
add
mov
fwait
dec
mov
vcmpps
arpl
cmpsb
lods
js
notl
sbb
stos
fisttpl
cmp
dec
inc
mov
je
mov
pop
repnz
scas
add
xlat
cmp
xchg
and
shlb
imul
mov
dec
mov
mov
adc
fcmovu
mov
push
into
mov
lods
cmp
adc
mov
lcall
mov
lds
or
dec
sbb
iret
lock
enter
test
sub
pop
adc
mov
mov
sti
cs
dec
mov
lea
int3
lods
adc
sub
or
imulb
dec
or
icebp
sti
dec
mov
add
in
loop
sbb
shll
mov
pop
stos
ret
xchg
ret
mov
cmpsl
popf
bound
scas
fidivrs
push
adc
jle
dec
and
dec
imul
xchg
jbe
in
jo
wrmsr
aaa
sub
inc
mov
rclb
stc
jmp
push
or
adc
out
cvtps2pi
popf
adc
js
dec
or
xchg
mov
mov
je
jg
movsl
mov
enter
out
divl
xchg
sbb
sub
xchg
pop
jo
add
cmpsb
xchg
nop
xor
xchg
ja
lcall
es
fcmovnu
jbe
sahf
ret
sbb
dec
cmp
addr16
cmp
stos
mov
lret
jmp
mov
stos
in
aad
pop
adc
out
pop
mov
pushf
mov
insb
xor
cld
cmp
ja
cs
fs
sub
sti
fcoml
dec
insl
repz
push
mov
and
sbbb
push
out
mov
mov
push
mov
push
push
xchg
icebp
jae
or
fsub
gs
pop
adc
jp
jns
cmpsl
out
pusha
sbb
out
sub
jb,pt
andl
sbb
lods
icebp
lahf
mov
sbb
pop
ret
pop
stos
cmp
inc
insl
mov
adc
mov
inc
fs
loope
out
jmp
jecxz
shlb
sbb
hlt
pusha
mov
fistl
push
sub
stos
push
neg
js
das
xchg
lds
adc
push
stos
test
fdivrs
sub
jecxz
das
sub
cld
sub
and
lods
repnz
loope
out
mov
dec
rcrb
push
stc
mov
push
test
stc
xchg
mov
jae
push
das
data16
mov
xchg
adc
shrl
pop
inc
mov
test
mov
jno
fistpll
sub
sti
je
jl
insb
inc
sub
jbe
subl
dec
js
or
sbb
xchg
adc
sub
cmp
sbb
pop
jge
mov
sarl
mov
ret
add
loopne
in
sub
rcll
xchg
shlb
fwait
fwait
lods
add
adc
and
jmp
jo
xchg
push
sbbl
cmp
out
pop
or
lret
pop
pop
mov
push
xchg
jne
inc
mov
add
gs
mov
mov
inc
ja
jne
mov
and
addb
jne
test
mov
mov
ljmp
push
dec
cmp
in
in
jns
jae
shrb
and
std
jecxz
jae
xlat
push
pop
fidivrs
pop
pusha
ja
jo
in
dec
inc
adc
or
mov
push
enter
push
sbb
test
adc
loopne
jno
sbb
xchg
jle
je
push
add
jne
inc
aas
pop
je
mov
jle
aad
add
test
in
inc
jnp
mov
icebp
add
insb
dec
out
clc
pop
cmp
shrl
jmp
sbb
and
ds
push
insb
mov
mov
lret
sbb
test
imul
add
sub
repz
sbb
pushw
mov
call
gs
dec
sub
xchg
mov
jb
xchg
lods
cmp
jmp
dec
pop
jne
movsb
jnp
aas
mov
mov
pop
pop
add
xor
fs
stc
adcb
loop
loopne
push
dec
inc
loop
xchg
loope,pt
ror
push
repz
mov
mov
and
jp
push
shl
fldcw
loope
rcll
not
mov
mov
push
mov
mov
in
ljmp
stos
hlt
xchg
mov
jnp
fnstenv
out
cli
mov
cwtl
loop
xlat
test
mov
lds
xchg
and
frstor
xchg
inc
call
jp
mul
add
mov
arpl
add
mov
sub
js
repz
sub
das
nop
ret
in
cmp
push
pushf
hlt
fwait
mov
or
ljmp
and
mov
sub
push
push
mov
and
outsl
stos
scas
pop
mov
push
add
shrb
push
and
mov
cmpsb
and
ja
cmc
mov
cmpsl
adc
and
mov
lcall
jnp
lock
mov
loop
arpl
push
push
jns
sti
aaa
mov
xchg
mov
sub
pop
lret
cmp
sub
out
out
cwtl
inc
push
test
mov
or
int3
adc
adc
mov
xor
pop
xor
iret
sub
cmp
lods
movsl
lcall
outsb
and
in
lret
loope
adc
xor
mov
int
push
inc
insl
fucomip
push
in
inc
insb
pop
jle
mov
dec
pop
xchg
jp
sub
jl
popf
mov
loope
push
dec
push
out
pushf
das
fs
push
or
push
push
rcll
fwait
stos
in
cmpsb
sub
mov
stos
mov
sahf
jb
sub
and
dec
call
loope
inc
shl
cmpsb
out
dec
inc
in
xor
xor
push
lret
pop
scas
lods
iret
sbb
xor
xor
mov
inc
pop
cmc
jnp
in
cmpsl
aam
xor
sub
xchg
shlb
adc
vpunpckhqdq
data16
popa
mov
dec
jno
imul
push
mov
add
mov
icebp
mov
add
sub
mov
movsb
dec
fcomp
mov
mov
fs
into
sti
aaa
lea
mov
xchg
std
cwtl
lods
mov
mull
inc
inc
pop
push
xchg
in
push
cwtl
hlt
xlat
movsl
pop
cmp
sbb
in
fcmovnb
dec
adc
repz
fwait
insl
adc
popf
idivb
in
shrl
out
out
push
mov
push
in
add
push
push
imul
cmp
and
push
scas
out
aam
pop
mov
mov
ljmp
js
test
jmp
addr16
lods
jae
push
int3
mov
jne
ficomps
lock
xlat
test
lods
mov
mov
cmp
stos
xchg
adc
sbb
mov
shrl
cmc
dec
mov
xor
pusha
sbb
fsubs
addr16
ret
sbb
sub
pop
mov
loopne
sub
push
sub
sbb
mov
xlat
stc
add
push
dec
xchg
sti
es
loope
adc
in
dec
outsl
lea
ret
mov
jae
lock
fwait
adcb
mov
pop
movsb
mov
stos
jb
and
mov
mov
xor
mov
call
xchg
sbb
lock
adc
imull
lahf
adc
loop
mov
cmpsl
ds
xlat
dec
imul
mov
push
lret
add
sbb
adc
popa
das
aam
mov
into
add
mov
std
arpl
mov
push
cwtl
add
xchg
jnp
out
fcoms
mov
iret
add
addl
rclb
add
lret
push
push
dec
jge
add
rcr
cld
add
add
int
les
pop
pusha
mov
mov
test
inc
mov
lods
ret
lahf
add
addr16
aas
mov
add
mov
and
pop
jns
jb
mov
jnp
in
jnp
inc
or
mov
rcll
lret
sbb
dec
cmpsl
push
inc
aam
mov
lret
xchg
leave
cs
adc
das
jge
lods
or
add
inc
sbb
insb
push
leave
fsts
xor
mov
loop
outsb
pop
push
mov
aam
mov
jmp
mulb
xchg
xor
js
popa
mov
rclb
ror
inc
mov
jbe
fimuls
dec
ja
jg
jmp
lcall
cmc
mov
cld
into
icebp
push
mov
imul
lods
lods
lahf
xchg
adc
lock
mov
xchg
mov
mov
cmp
xor
mov
gs
mov
in
inc
sbb
jbe
jnp
leave
pop
notl
push
inc
aad
inc
sti
cmc
pop
push
pop
inc
popa
adc
sub
icebp
xchg
pushf
outsb
ret
movsb
jno
leave
xor
cmp
lods
pop
pop
dec
sbb
mov
dec
xor
sbb
sbb
pop
loop
xchg
imul
in
sbb
out
and
mov
cmpb
xchg
xchg
mov
mov
arpl
scas
bound
adc
inc
outsl
xor
jle
shll
vpmuludq
xor
adc
fsubrs
int
xor
movsb
jp
or
mov
mov
gs
fldl
cli
icebp
xchg
mov
xchg
mov
pusha
lret
in
pop
lds
xchg
mov
mov
jmp
mulb
jecxz
lret
test
out
js
stc
cld
mov
or
pop
mov
lods
ds
fisubl
inc
inc
and
inc
movsl
push
push
sbb
negl
xchg
dec
out
sbb
pushf
addr16
inc
inc
mov
dec
insb
leave
or
adc
les
sti
and
fistps
ret
mov
jo
lret
xor
mov
jb
add
leave
lea
rcl
jecxz
negb
rorl
popa
mov
jecxz
and
mov
shrl
push
test
pop
mov
das
fnstenv
pop
push
jae
mov
pop
bound
gs
rclb
ja
fistl
enter
scas
dec
xchg
mov
jae
fbld
xchg
aam
arpl
push
shll
loop
jbe
sahf
add
push
cmp
scas
mull
popa
pop
das
jecxz
and
push
push
add
leave
js
bswap
subl
sub
mov
test
inc
cmp
cmc
pavgw
dec
adc
xchg
pop
fnsave
nop
xchg
push
cs
dec
dec
dec
jnp
test
pop
sbb
mov
fst
pop
hlt
dec
xchg
fbstp
mov
mov
sti
mov
push
shlb
push
in
stos
clc
sti
inc
mov
lcall
leave
cmp
mov
enter
gs
add
cwtl
mov
les
inc
jnp
pop
pop
stos
repz
push
jne
int
rorb
pop
out
xchg
int
std
or
push
jns
mov
push
xchg
and
push
or
dec
mov
jno
jp
cltd
xchg
scas
in
push
fwait
test
mov
jbe
mov
ficoml
outsb
xchg
inc
outsl
mov
dec
insb
dec
in
imul
xchg
into
ret
stos
pusha
aad
sbb
shll
das
xchg
jo
xchg
xorl
stc
test
dec
add
xchg
mov
or
push
movups
popf
cltd
and
andb
mov
cmpsl
mov
add
pop
insl
cltd
add
adc
dec
inc
mov
fistl
stos
jmp
jl
int3
aam
loopne
and
xchg
insl
test
popf
dec
jmp
adc
sub
mov
inc
inc
mov
fwait
nop
or
lods
insb
insl
das
lods
mov
xor
iret
inc
sbb
das
insl
dec
sbb
jl
mov
pop
lcall
cmp
stos
xor
loope
add
xchg
pop
dec
lret
insb
movsb
adcl
add
adc
sti
sbb
fadds
sbb
xchg
and
js
rclb
push
xchg
inc
divb
int
sbb
cld
cmp
lods
mov
mov
out
fwait
xchg
mov
ljmp
mov
adcl
xor
dec
outsb
arpl
cltd
daa
xchg
mov
xor
imul
mov
ret
lcall
cmp
mov
xor
push
and
xor
jmp
mov
lcall
lret
cmpsb
sub
xchg
sbb
jno
push
adc
lret
in
xlat
pop
out
mov
pop
jae
fcmovnu
dec
cltd
cs
xchg
pop
xchg
out
pop
push
pop
js
adc
mov
inc
cmpsb
xor
push
insl
cmp
inc
repz
add
popa
lock
adc
mov
clc
loope
imul
clc
das
push
fwait
jo
in
inc
cmpsl
inc
sahf
orb
cli
fwait
push
popf
cmp
xchg
push
mov
enter
fcmovnb
fwait
cmp
adc
je
cmp
pop
xchg
or
and
jb
in
dec
add
dec
fimull
sti
mov
inc
pop
sub
cmpsl
xlat
roll
popa
push
and
inc
inc
nop
fiadds
mov
daa
dec
xor
dec
cld
jae
test
cmp
lret
mov
arpl
push
sbb
adc
rcl
in
pushf
dec
mov
sub
sub
std
push
and
xchg
mov
es
cmp
mov
aad
jae
negl
or
lds
gs
dec
mov
sub
mov
in
in
add
pop
mov
ds
inc
mov
or
ljmp
mov
adc
test
add
mov
das
fs
jmp
sub
js
sbb
fdivrp
scas
sti
sub
lahf
sub
dec
into
sub
repnz
mov
lods
les
sub
scas
pop
mov
cwtl
rcrb
xorl
aas
pop
test
jns
movl
fdivl
movsl
jno
testl
shrb
fidivl
add
push
cmp
xchg
inc
pusha
xor
pop
in
cmp
xor
push
stc
sub
insl
adc
aas
call
dec
push
add
aaa
bound
incl
in
int3
jp
rclb
std
dec
sub
dec
add
je
cmpsl
js
lea
por
cltd
iret
jnp
imul
lret
inc
ret
lahf
mov
push
filds
cmpsb
incb
jnp
mov
popa
lods
addr16
inc
push
ljmp
mov
imul
lods
push
push
movsl
repnz
xchg
loop
inc
popf
std
jb
inc
fisubrs
and
add
pusha
sahf
adc
lods
jae
cmpsb
mov
mov
jmp
das
push
nop
mov
adc
push
mov
ret
xor
std
or
ret
sub
push
repnz
mov
arpl
nop
fstpl
out
clc
and
or
movsb
xor
leave
lcall
push
dec
test
mov
ss
ss
repz
subb
cmp
mov
jo
dec
test
bound
cs
daa
enter
push
mov
sahf
cmp
call
test
in
hlt
inc
ljmp
rolb
mov
gs
adc
xchg
add
cmp
mov
popa
sbb
add
xchg
and
pop
jecxz
adc
movsb
push
pushf
or
inc
roll
inc
cmpb
les
or
sbb
mov
mov
lods
aad
es
xchg
loopne
clc
xchg
ret
push
or
xor
push
lahf
cmpb
xchg
mov
and
add
or
mov
and
outsb
clc
xchg
jbe
les
std
inc
push
stos
fldenv
mov
pop
cwtl
repnz
adc
shrb
sbb
adc
cmp
sbb
xchg
fidivrl
mov
arpl
rcl
pop
sbbl
dec
and
dec
push
pop
pop
mov
inc
and
mov
test
pop
repz
ja
adc
jbe
inc
and
repz
sub
add
and
lods
mov
nop
push
sub
ss
test
lret
clc
mov
pop
sub
repnz
sub
dec
rclb
cmp
popa
sbb
fnstenv
cwtl
clc
ljmp
or
cs
lods
mov
inc
das
or
fwait
xchg
cld
lods
je
cmp
loope
ret
inc
daa
fidivl
stc
inc
mov
pop
lods
pop
outsl
in
adcb
cli
outsb
mov
shlb
jae
insb
and
std
jae
call
movsl
mov
adc
insb
sub
push
mov
daa
jmp
shll
out
inc
or
inc
xor
and
add
jb
scas
fisubl
or
sub
hlt
hlt
inc
mov
dec
lea
dec
mov
repnz
xchg
mov
ror
rcl
std
jae
pop
or
in
nop
dec
shll
mov
fisubs
pop
mov
pushf
in
ficoml
or
out
cs
xlat
adcl
in
in
push
xchg
shlb
ret
xchg
bound
aam
add
or
cmp
xchg
cs
lods
dec
nop
dec
mov
aaa
int
call
leave
fsubr
jp
push
inc
stos
lods
cmpsb
inc
mov
jae
jbe
jp
clc
push
test
ljmp
jp
and
dec
pushf
jl
and
fcoms
js
stc
aaa
in
out
fmuls
filds
int
sbb
leave
movsl
outsl
call
xlat
in
ret
inc
pop
jmp
pop
int3
sub
sub
mov
xchg
fiaddl
lahf
mov
push
lds
fildll
pop
repz
and
adc
ffree
cmpb
movsl
mov
sub
sbb
movsl
push
jnp
xchg
sub
loop
jno
pop
jmp
or
xor
je
mov
add
shrb
pop
mov
push
insb
imul
and
movsl
ret
jno
pushf
std
add
mov
adc
lahf
out
mov
xor
call
leave
sbb
adc
mov
jno
popa
es
xchg
pop
cs
loope
rclb
inc
cmp
add
hlt
mov
or
push
movsb
push
dec
hlt
pushl
scas
in
out
push
adcl
push
ljmp
and
dec
mov
or
aad
cmp
call
dec
daa
andb
jbe
repz
pop
loopne
aas
cli
or
mov
mov
mov
mov
stos
gs
cmp
jmp
lea
or
xor
sbb
cld
jno
cwtl
ds
mov
sub
adc
fwait
cmp
mov
les
sbb
int
and
repnz
push
int
mov
repnz
inc
sbb
mov
dec
dec
and
mov
mov
xor
xchg
inc
mov
sub
push
and
outsb
xchg
or
pop
outsl
pop
movsl
cmp
dec
mul
sbb
lods
in
pop
mov
jg
jle
lret
pushf
cmp
nop
jnp
jl
int3
adc
xchg
dec
sub
jle
pop
sbb
dec
ja
stos
imul
cli
sub
arpl
jge
mov
cs
ret
lods
aad
sbb
or
pop
je
jb
lret
mov
add
enter
inc
fstl
pop
jo
enter
imul
inc
movsl
mov
pop
stos
xchg
repnz
push
jo
rcrb
push
out
in
sub
je
jb
mov
into
pushf
aam
pop
ljmp
ret
push
mov
sbb
sti
icebp
adc
add
repz
fdivrp
adc
jp
xlat
sbb
mov
cmp
mov
lcall
dec
mov
and
jmp
dec
dec
frstor
insb
fwait
outsl
dec
adc
and
fsub
mov
loop
repz
xchg
jne
hlt
and
mov
inc
mov
les
rcll
adcb
jb
and
ds
push
in
lods
nop
jge
push
lret
out
sti
sbb
inc
jle
subl
fsubrs
push
push
arpl
mov
ret
push
jge
mov
mov
adc
inc
xchg
mov
sbb
mov
in
cmp
daa
sbb
adc
xchg
cli
insb
jno
fldl
inc
push
sbb
mov
subl
dec
adc
decb
cwtl
mov
mov
jg
mov
and
inc
jl
mov
xor
loope
cli
loopne
or
mov
ss
pusha
pop
and
movsl
bound
xchg
sbb
xchg
sub
shlb
stos
xlat
adc
xchg
lret
out
outsl
xor
rorl
adc
test
inc
out
pop
dec
sti
add
cmpsl
bound
jmp
xor
fists
sub
sbb
aas
jl
and
outsb
mov
popa
int
cld
cmpsl
dec
sahf
pop
call
pop
mov
fdivs
popf
jmp
push
cmp
lret
adc
mov
repz
push
mov
js
fdivr
push
das
imul
int3
mov
fistps
mov
jb
push
mov
cmc
add
xor
fdivl
arpl
into
sbb
xchg
stc
jmp
mov
outsl
jo
jge
ss
mov
pop
cmpsl
cmc
or
mov
xlat
push
mov
imul
into
out
mov
inc
xchg
loopne
cmp
into
sar
repnz
xorl
push
sub
xchg
push
cli
xchg
inc
pop
les
push
dec
xlat
cwtl
scas
aaa
fs
or
out
lods
movsb
adc
push
mov
ficoms
negl
jg
lods
popf
pop
jno
mov
std
rclb
inc
dec
pop
addr16
pop
xor
xlat
outsl
ds
add
or
cmpsl
push
mov
or
cmp
pop
cmc
sbb
dec
push
js
dec
inc
sbb
mov
mov
mov
or
or
add
push
fs
bound
cwtl
jge
incl
addl
or
mov
jae
nop
xchg
add
push
pushf
pop
in
aad
and
sahf
repnz
mov
lret
push
inc
push
jge
sub
xor
scas
jnp
jmp
leave
push
shl
ja
and
aas
fstl
jmp
pop
std
mov
mov
add
cwtl
and
pop
out
test
neg
dec
test
cmpl
adc
push
cmpsb
stc
xor
mov
pop
lock
jno
mov
add
add
aam
stos
sub
mov
jo
inc
outsl
cmp
pop
aad
movsb
sbb
sbb
xchg
mov
sti
jae
out
rol
mov
rolb
dec
mov
adc
mov
aaa
filds
ret
nop
sub
rcrb
ja
sbb
inc
and
lret
pusha
mov
gs
outsl
mov
test
jns
sbb
jmp
mov
lock
lods
fsubrs
mov
and
mov
lea
mov
push
pop
mov
pop
cmpsb
pop
out
mov
mov
mov
test
or
cltd
ljmp
adc
cli
jp
cmp
mov
call
jmp
or
and
fiaddl
mul
dec
mov
arpl
and
add
inc
sbb
insl
ds
mov
sub
push
mov
orb
stos
mov
xor
cmp
xor
ja
push
ds
jmp
out
pop
cmp
aaa
pop
ds
cld
notb
inc
data16
cmp
xchg
sbb
inc
movsb
mov
push
mov
movsb
and
mov
xor
or
pop
or
mov
lcall
je
pop
xchg
sub
out
scas
or
fidivl
cwtl
pop
xor
dec
sarb
sub
dec
xchg
lea
mov
test
xchg
xor
enter
test
imul
pop
cltd
imul
sahf
pop
jmp
popa
inc
mov
scas
popa
and
mov
iret
sbb
ret
xchg
popa
push
dec
lods
es
xor
xchg
cmpsb
mov
cwtl
cmp
fldcw
pushf
dec
ds
adc
cmp
xchg
adc
jle
iret
mov
xchg
test
mov
cltd
jno
push
mov
in
sub
push
xchg
adc
adc
gs
cwtl
aam
inc
xchg
pop
push
push
ret
int3
mov
sub
mov
pop
push
clc
xor
inc
es
js
push
jnp
mov
shrl
jns
lods
jg
jle
decl
pop
test
adc
shr
pop
icebp
cwtl
into
add
jo
fwait
hlt
icebp
movsl
stc
movsl
dec
mov
jmp
loope
cs
and
clc
iret
aam
cmpb
mov
addl
add
mov
cmp
cmp
sbb
rep
mov
inc
add
fcoml
aam
es
or
movsb
je
cmp
and
push
mov
int
cmp
mov
mov
int3
push
mov
rcll
push
cmpsl
sub
sbb
push
jnp
neg
cmp
pop
stos
leave
dec
out
scas
cmp
idivl
cmp
scas
dec
push
nop
pop
movsb
pop
mov
test
inc
mov
inc
inc
xlat
in
test
je
cmp
cmp
cmp
inc
mov
adcl
lods
test
cmp
lea
mov
cmp
mov
push
mov
pop
jp
fdivrl
std
shll
cmc
pop
je
lods
mov
lahf
inc
mov
rcrl
nop
mov
retw
cmp
outsb
adc
cmp
rorl
mov
loopne
inc
xchg
out
rol
dec
adc
cmp
mov
sbb
andb
adc
jmp
mov
daa
data16
lret
mov
jae
nop
out
lcall
cwtl
mov
pop
push
xchg
call
jl
sub
cmp
inc
mov
push
sahf
cmp
or
in
fs
sbbb
xchg
fs
pushl
push
notb
mov
movsb
add
movsl
cld
cmc
mov
fwait
mov
sub
fnclex
jle
cwtl
cli
xor
sti
push
or
pop
dec
cs
xchg
pop
add
loopne
inc
out
pushf
fs
jp
mov
pop
push
push
enter
sbb
in
jbe
sub
add
pop
mov
adc
scas
shll
mov
push
dec
fwait
mov
popf
iret
ljmp
cmc
fdivl
push
sbbb
xchg
rcl
jnp
pop
inc
loop
clc
mov
xchg
and
mov
or
loop
fcoml
cmp
jnp
mov
stc
xlat
or
pop
mov
xor
subl
pop
pop
and
cs
ss
xchg
pusha
dec
cs
pop
fsubrl
fsubrp
adc
adc
lahf
jb
mov
sub
scas
lret
dec
add
fxch
push
mov
xor
lret
fisttps
scas
filds
adc
and
in
lahf
cltd
dec
ljmp
shr
insb
push
test
jl
pushf
adc
pushl
scas
jne
mov
cmp
shr
push
jb
add
popa
dec
and
addr16
inc
dec
shl
mov
xchg
dec
xlat
jo
adc
shrl
and
adc
xor
dec
cwtl
movsb
cmc
xorl
imul
adc
dec
ret
sbb
xchg
xchg
das
test
mov
testb
pushf
adc
mov
xchg
and
leave
fwait
aad
out
aas
je
movsl
dec
aas
cltd
push
out
call
das
dec
sbb
inc
int
jne
add
pop
mov
and
mov
out
and
stos
aaa
je
jecxz
test
or
loopne
subb
gs
imulb
inc
pushf
sahf
pop
es
cmp
push
fwait
and
dec
lods
mov
mov
xor
subb
push
fldl
es
orl
mov
hlt
mov
movsl
xrelease
sbb
jp
inc
mov
push
pop
adcb
loopne
cmpsb
aam
in
mov
pop
sub
into
pop
ja
push
lds
xor
inc
es
mov
mov
add
movsb
cmp
int
addl
mov
orl
sbb
in
addr16
xor
fmul
pop
sarb
imul
sub
mov
and
inc
dec
mov
nop
gs
cli
or
jg
cmp
inc
mov
scas
xorl
stc
jle
lret
pusha
xchg
mov
iret
mov
clc
bound
xorl
inc
ret
sbb
insb
dec
out
insl
cmp
imul
or
test
bound
mov
sarb
daa
cmp
dec
rcrb
push
and
imul
je
loopne
sbb
test
pop
push
and
scas
ljmp
and
adc
into
movsb
dec
unpckhps
adc
sub
cs
lret
push
fcoms
jmp
xlat
ljmp
sub
xlat
ret
jo
mov
push
aad
popa
out
jae
insl
and
cmpsb
add
jae
inc
arpl
sbb
sub
scas
dec
inc
add
cmp
pop
mov
cwtl
out
aas
adc
loope
aam
xchg
enter
xchg
and
jecxz
loopne
add
mov
mov
xchg
dec
sahf
inc
dec
sbb
push
inc
cmp
mov
sub
xor
gs
sahf
iret
bound
xor
sahf
les
fwait
andl
and
dec
push
into
mov
stc
addl
test
inc
cmpsl
inc
in
mov
jmp
aam
jecxz
shll
fmul
out
out
pushf
pop
mov
fidivl
pop
outsl
lods
mov
push
pop
adcl
mov
inc
lahf
fcomps
scas
into
movl
or
hlt
xor
loopne
stc
mov
lds
and
fidivs
add
pop
push
scas
sbb
dec
and
add
cmp
jnp
pop
dec
fdivr
out
sub
out
push
xlat
test
into
lods
fsts
jbe
outsl
sub
dec
or
aaa
mov
xor
es
add
push
out
subl
or
gs
jb
imul
or
cmp
xor
inc
pop
negb
mov
lahf
push
sahf
add
test
push
lcall
or
pop
int
lret
hlt
dec
repnz
aas
push
jp
adc
das
pop
xor
sub
adc
xchg
adc
imul
mov
sub
xchg
xchg
cs
mov
inc
addr16
cmp
fnsave
mov
mov
jo
ja
push
mov
stos
call
clc
enter
push
xchg
xchg
mov
mov
push
stc
leave
lods
inc
pushf
sub
pop
jecxz
lret
dec
ret
cmp
mov
pop
cmc
add
ret
pop
dec
jnp
cli
loop
push
rcr
mov
jecxz
adc
lcall
sub
imul
imul
out
out
push
imul
sbb
das
push
push
enter
imul
iret
popf
push
clc
dec
and
jno
adc
jno
mov
jo
testb
add
test
cmp
fisttpll
sbb
scas
scas
mov
fists
add
sbb
cmpsl
stc
arpl
mov
adc
jle
in
je
push
cwtl
mov
dec
add
jge
ds
ss
ja
mov
dec
and
sbb
lods
popa
cmp
cmpsl
hlt
xchg
sbb
cltd
out
out
push
jnp
cs
imul
out
fsts
nop
ljmp
pop
movsb
pop
clc
and
adc
pop
data16
xor
test
imul
jge
imul
es
sbb
es
mov
jg
lods
into
popf
inc
mov
xor
lods
icebp
shlb
arpl
std
jo
push
dec
enter
adc
mov
int
imul
ljmp
loopne
cli
out
pop
loope
mov
aam
pop
cwtl
cmp
imul
mov
push
ds
idivb
mov
mov
dec
insl
ljmp
jmp
ffree
leave
inc
clc
and
xchg
sub
pop
push
cmpb
leave
jle
rclb
scas
es
das
xchg
xlat
or
ds
andps
mov
and
bound
pop
ret
and
sahf
xorl
inc
mov
inc
push
mov
loop
mov
add
add
pusha
pop
mov
push
cld
jmp
push
xchg
roll
jge
das
xor
mov
insl
xchg
movsl
test
adc
sti
adc
out
push
shll
shl
xorb
into
add
push
or
enter
stos
push
shrl
pop
cmc
andl
outsl
jns
in
ficomps
fildll
ret
and
mov
mov
test
xchg
xor
mov
aas
xchg
mov
mov
popf
ss
cmp
xchg
lods
nop
fildll
jo
popa
ffree
sti
xchg
and
dec
push
dec
insl
xor
test
fildl
fcmovnu
shrb
insl
mov
decb
int
jle
push
das
jns
sarb
out
rorl
pop
pop
pop
test
cmpsb
and
or
or
xchg
loop
jl
mov
icebp
sbb
or
rcrl
cld
push
mov
aam
insb
add
or
mov
mov
and
push
sti
into
xchg
loop
stos
addr16
jl
iret
sub
inc
repz
sbb
out
mov
add
cmpsl
lcall
cmp
mov
out
aaa
cmp
cmp
ljmp
out
cli
sub
add
sbb
inc
xchg
push
pop
fidivs
push
mov
xor
mov
sub
scas
cmp
xchg
mov
adc
push
adc
test
sub
pop
mov
adc
sub
cmp
jbe
stos
ja
dec
inc
mov
mov
jnp
jle
shlb
push
ret
cmpsl
xor
es
add
xchg
sbb
lea
pop
pop
cmp
daa
je
es
pop
bound
lret
pop
cltd
lcall
or
scas
into
mov
hlt
sub
push
cmpsb
int3
fnstsw
js
ds
mov
xlat
pop
pop
outsb
adc
stos
jecxz
jne
xor
outsl
push
out
mov
xor
out
into
out
je
xchg
jne
xchg
cltd
cmp
repnz
and
es
lods
testb
inc
jecxz
sub
jnp
dec
push
mov
sbb
sub
push
dec
out
inc
bound
mov
jbe
aam
xlat
adcb
inc
sbb
shll
pop
cmp
xchg
out
dec
lods
dec
push
xchg
push
imul
fdivl
in
adcb
bound
cmp
shlb
add
dec
inc
popa
add
dec
ret
dec
rolb
aas
sub
lds
mov
adc
fs
loopne
in
cmpsl
inc
out
pusha
je
nop
push
add
inc
cmp
test
popa
mov
in
and
jae
and
test
leave
xor
sub
inc
enter
add
mov
punpckhbw
jecxz
fisubl
jns
mov
and
pusha
dec
test
fiaddl
cmp
iret
xchg
test
ljmp
sti
nop
fbld
ja
push
je
xchg
bound
inc
adc
sbb
sub
mov
sub
nop
ror
pusha
pop
adc
xchg
jne
out
stc
lods
repz
pop
repnz
mov
test
iret
aas
cmpl
sti
and
cmpsb
pop
fists
lcall
mov
sub
jmp
jns
jge
int3
xchg
jp
mov
pop
sti
mov
pop
lahf
outsl
sub
mov
xchg
lds
insb
jae
les
nop
sub
lret
xchg
pop
sbb
and
mov
in
fisttpl
add
xor
jecxz
cmp
mov
stos
add
or
sbb
cs
lahf
lock
fdivs
sar
stos
repz
mov
cmpsb
adc
cmc
adc
add
inc
test
imul
in
and
daa
push
sbb
in
mov
andl
ret
mov
stos
mov
and
xchg
mov
fildll
inc
andb
sbb
cmp
fildl
sbb
xor
pop
iret
mov
inc
jnp
and
into
jbe
stos
lret
and
cli
mov
mov
adc
sub
or
int3
xor
das
ljmp
hlt
pushf
jmp
xchg
repz
aas
aas
je
pushf
mov
ds
sbb
mov
jle
jnp
xor
push
ljmp
xchg
ret
or
and
rcrb
xchg
out
pop
test
xchg
cmp
fisubrl
jns
aad
mov
scas
ret
movsl
mov
push
lea
clc
int
hlt
out
cmc
ficoms
lahf
pop
stc
xchg
and
sbb
fidivs
aam
jne
and
loopne
notb
inc
dec
inc
pop
enter
push
test
rorb
repz
inc
mov
daa
lods
jne
mov
je
inc
jle
fwait
or
dec
enter
push
dec
mov
mov
imul
cs
ja
cmp
lret
bound
jne
mov
pop
push
aad
cmp
mov
cs
or
jno
pop
cmp
sub
stos
push
popa
fisubrs
outsl
mov
adc
jno
insb
fwait
imul
sub
dec
sbb
in
xor
je
cwtl
xchg
stc
mov
cmc
xor
pop
aam
cmp
data16
shrl
ja
mov
cmp
xchg
or
cmpsb
pushf
int
ret
mov
xor
xor
cmp
push
mov
cmp
cli
fbld
jl
aad
dec
push
jne
jmp
dec
daa
dec
jnp
dec
xchg
imul
outsb
js
mov
sbb
xchg
xchg
lods
lcall
xchg
loopne
imul
push
dec
xchg
lret
in
mov
fnsave
testl
push
shlb
iret
dec
sub
cmp
mov
fstpt
addr16
mull
gs
sbb
xor
xchg
push
pop
rorb
movsl
inc
mov
inc
pop
pop
dec
and
dec
cs
call
jbe
cmpsb
fwait
inc
jge
push
stos
jnp
stc
popf
test
jne
lods
in
cli
cltd
mov
xchg
inc
pop
jnp
dec
jae
mov
add
pusha
sub
mov
stos
ficoml
xchg
call
mov
arpl
sbb
pop
fists
xchg
idiv
lcall
es
sysret
xchg
dec
enter
movsl
push
insl
ret
lcall
repnz
xor
xor
push
xchg
and
and
cmp
xor
ss
or
fiaddl
jbe
lds
or
lea
jno
fimull
xchg
jge
jo
into
imul
daa
in
or
mov
es
fwait
xor
fnstenv
jecxz
fsts
popf
mov
sub
sub
mov
insb
xchg
mov
or
lock
dec
and
inc
orl
aaa
aas
pop
aam
lahf
pusha
sub
push
fists
mov
stos
test
ds
xchg
ret
mov
cmp
rorb
hlt
fbld
mov
in
int3
cmp
mov
das
push
movsb
sti
sub
notb
mov
test
push
sub
outsl
jmp
mov
aam
in
scas
cmp
fnstenv
decb
pop
nop
sbb
call
leave
pop
enter
adc
data16
jns
lret
cmpsb
out
inc
xor
out
and
xchg
mov
loop
push
test
ja
mov
push
push
adc
inc
and
fisttps
and
rcll
mov
out
cmpsb
mov
sub
lods
cmpsl
sti
mov
jne
ljmp
fistps
and
stos
testb
pop
fwait
orb
push
xchg
mov
js
pop
mov
cmp
cmp
es
xchg
sub
fmuls
lods
sbb
push
or
inc
mov
sti
xchg
in
mov
dec
out
lods
jnp
xor
xor
mov
push
out
out
in
jns
fs
out
xchg
mov
jns
in
pop
pop
mov
pusha
push
hlt
icebp
dec
fistpl
inc
or
mov
test
imul
push
adc
adc
push
inc
insl
cli
outsl
insb
test
rorl
inc
es
lcall
xchg
in
shlb
dec
xlat
int
repz
rorb
dec
push
xor
push
mov
nop
cmp
adc
lea
mov
cmp
inc
mov
sbb
fnstenv
in
dec
lahf
test
repz
or
jmp
or
sbb
lods
push
ffree
and
pop
scas
scas
add
mov
movsl
int
es
xor
cli
xorb
inc
out
xchg
mov
add
jl
mov
cs
inc
jmp
pop
or
xor
and
sub
ja
mov
dec
fistl
mov
icebp
jmp
or
js
outsl
out
imul
mov
jle
sub
xchg
rcll
fcomps
outsb
push
mov
dec
shrb
cmp
jle
fwait
lahf
lods
push
mov
adc
xor
push
ror
repz
fscale
lock
mov
cmpb
cmp
pop
sbb
mov
stos
adc
push
punpcklbw
fbld
pusha
mov
loop
mov
outsl
mov
and
cs
test
sub
clc
std
je
inc
push
adc
xchg
repnz
idiv
cmpsl
jbe
repz
jne
lods
push
in
das
call
jmp
stos
fmuls
push
sub
mov
fstps
mov
mov
mov
dec
lret
pushf
cmp
in
jns
push
cld
mov
ret
or
lret
rcll
inc
mov
out
mov
lcall
jno
je
push
in
mov
iret
rcr
movsb
stos
inc
test
add
lret
js
cmp
js
jo
dec
out
roll
sbbb
jge
nop
push
adc
jnp
subl
sti
sarl
adc
pop
mov
or
outsb
jo
pushf
jo
xchg
das
test
insl
cmpsl
pop
orb
cmp
sbb
push
insb
psubusb
fucom
sbb
out
hlt
push
mov
push
aas
sahf
lea
sub
fbld
xor
dec
inc
cltd
in
mov
scas
push
or
mov
sub
cs
xlat
inc
in
loop
pop
sahf
or
loope
adc
adc
ja
mov
pop
test
outsl
pop
mov
adc
ds
pop
cmpsl
or
pop
cmpsb
inc
mov
int
xchg
setae
or
loop
pop
push
mov
jge
addr16
add
loop
cmc
push
cmp
out
mov
aaa
push
cmp
push
lret
jo
int3
mov
jl
xorl
xchg
jg
mov
loope
mov
mov
dec
add
jbe
pop
sbbb
pop
out
movlps
adc
mov
jge
pop
mov
jmp
mov
jne
out
ja
cmp
fnstsw
pop
inc
or
les
in
cmp
and
xchg
xor
movsl
jnp
stc
into
mov
mov
fidivs
mov
dec
rcr
out
dec
imul
mov
jne
sub
cltd
inc
jno
mov
aam
adcb
adc
or
adc
add
leave
mov
mov
xchg
mov
dec
mov
xchg
lret
pop
pop
mov
jg
mov
call
roll
mov
in
int3
or
out
add
fwait
dec
sahf
clc
ljmp
adc
mov
out
in
xchg
mov
add
ds
sub
inc
mov
push
push
test
add
subl
je
jnp
paddw
imull
inc
push
icebp
js
cmp
push
adc
mov
and
pop
jmp
loop
je
sahf
mov
jne
lret
inc
xchg
inc
push
fdivr
mov
push
mov
sub
iret
dec
lret
outsl
inc
xchg
stos
jp
mov
scas
and
inc
xor
pop
or
and
jmp
out
test
sbb
pop
jno
pop
or
mov
jbe
adc
dec
out
int3
pop
jmp
das
pop
sub
xchg
fcomps
inc
pop
sub
lcall
adc
jns
xlat
stos
pop
repnz
gs
inc
lock
stc
pop
mov
pop
xor
lods
or
pop
shll
mov
inc
xchg
push
mov
leave
cmc
iret
cmp
ss
cmp
mov
mov
test
dec
xor
mov
and
pop
mov
dec
stc
subb
int3
fcomp
xchg
push
inc
dec
cmc
xchg
sbb
cltd
mov
rclb
jnp,pt
shlb
jns
das
xchg
arpl
mov
mov
hlt
imul
cmp
mov
jp
fdivp
inc
pusha
scas
cmpsb
xchg
adc
xchg
insl
mov
test
and
cmp
mov
push
outsb
jo
rorl
cmp
sbbl
std
leave
xchg
rolb
aam
inc
jge
pop
in
jle
and
or
mov
inc
lods
jnp
and
or
int3
and
daa
cmp
jl
push
call
and
hlt
pop
int3
add
lret
pusha
ret
xchg
stc
insb
cmpsb
call
mov
push
iret
fstpt
repnz
push
xor
fnstsw
jge
xorb
mov
xor
mov
call
xchg
js
pushf
out
fcmovnbe
fdivl
xor
jmp
jg
jp
cld
jno
add
fwait
bound
orb
icebp
push
fnstcw
loopne
push
das
mov
imul
fistps
cmp
ds
and
pop
aam
and
sahf
push
pop
jbe
and
sbb
sub
pop
cmc
jb
outsb
jmp
mov
cmp
and
pop
xchg
mov
fldl
movsb
cs
test
xlat
xchg
stos
dec
lret
out
test
jae
and
or
jg
pop
and
lcall
rcll
sbb
dec
ret
rcrl
int
mov
xor
cmpsl
scas
stos
out
dec
jno
push
repz
aas
fimuls
pop
mov
jg
rcr
stos
mov
imul
lods
push
adc
adc
push
inc
sbb
sbb
xor
lret
loop
adc
test
mov
cmpsb
sub
daa
dec
pop
daa
inc
lea
out
jae
popf
fwait
out
scas
xor
cmp
mov
cld
inc
xchg
and
mov
and
or
adc
jmp
outsl
or
outsb
addr16
daa
shlb
fdivrl
jae
out
fnop
lcall
test
xchg
cwtl
aaa
das
std
jg
jp
push
fsubrl
loope
and
mov
cltd
add
rcrl
repz
sahf
clc
sti
fs
jl
test
icebp
ret
orb
sub
jo
out
sub
lds
xchg
or
pop
or
jg
push
or
mov
cmp
loop
xor
ss
jns
mov
mov
mov
out
adc
push
dec
in
call
mov
stos
sti
lret
test
into
mov
nop
mov
xor
stos
mov
jmp
into
daa
or
cmc
pop
add
rcrl
pop
cltd
scas
filds
add
pop
pop
mov
lock
test
ret
loop
pop
jb
add
sub
pop
daa
cmp
lock
call
mov
aam
cmp
or
cmp
lahf
scas
sbb
fdivs
cmp
adc
mov
sbb
movsl
mov
push
aaa
xlat
iret
push
cmp
mov
sub
movsl
lds
mov
xchg
mov
and
jb
xchg
outsb
xchg
and
or
pop
pop
sbb
fmuls
stos
mov
ja
imul
mov
loope
and
and
and
into
add
cli
mov
mov
pop
mov
ss
shll
sbb
mov
push
xchg
jns
push
dec
call
and
inc
jo
int
xchg
push
or
test
dec
lock
xlat
cltd
gs
rcr
and
adc
jno
push
insl
scas
enter
adcl
dec
cs
mov
jp
xchg
cli
fs
repz
out
pop
js
mov
pop
mov
pop
std
fnsave
add
aad
sbb
pop
addl
xor
nop
scas
out
inc
xchg
cmc
adc
mov
mov
pop
daa
and
aas
and
inc
cld
cmp
mov
mov
xor
nop
jbe
jae
jmp
pop
jno
and
and
jae
mov
out
xor
insl
inc
sbb
int
mov
mov
cmp
mov
rcll
fmull
repz
hlt
fdivrs
dec
push
adcb
jae
push
fists
aaa
xchg
aaa
test
mov
inc
inc
jae
inc
stc
sbb
stos
dec
xchg
int3
addl
pop
push
lret
dec
add
in
jmp
push
dec
mov
fadd
dec
mov
cs
sahf
arpl
rorb
cmp
dec
push
and
xchg
jl
add
mov
mov
addb
jle
loopne
fnstsw
paddw
mov
ljmp
pop
cmp
fnsave
cmp
cmp
dec
test
push
push
cwtl
fsubrs
sub
push
mov
sarl
add
dec
inc
aas
mov
mov
adc
adc
sbb
pop
cmp
aam
mov
ljmp
xor
bound
xor
aas
fnsave
sti
push
jb
inc
push
and
adc
bound
and
inc
aaa
lret
stc
adc
cmpsb
or
in
pushf
imul
mov
jp
stos
inc
dec
test
inc
lret
xchg
das
add
aaa
int
cmp
adc
imul
add
xor
or
sbb
cli
xor
or
loop
stos
jbe
xchg
in
and
cmp
enter
cmpl
mov
mov
shl
and
inc
outsb
add
xchg
sbb
jno
adc
push
adc
jno
inc
arpl
rcrl
call
pop
pop
mov
pop
pop
push
mov
test
push
push
insl
fdivr
scas
das
fucomp
sub
xor
xor
iret
insl
xchg
mov
movsl
cmp
aad
lcall
xor
test
mov
insb
sbb
loop
test
enter
std
cmp
pop
push
mov
jl
fbld
dec
dec
ror
sub
jns
cld
mov
dec
mov
and
fiadds
xchg
popa
xchg
in
jne
jne
test
popf
mov
cltd
enter
adc
daa
jbe
inc
in
scas
pop
rcrl
mov
out
xor
jb
clc
jo
es
cmpsb
jo
test
mov
lahf
inc
nop
xchg
mov
and
clc
js
cmp
lret
sub
cld
test
shl
pop
mov
mov
int3
adc
pop
inc
jle
xchg
fiadds
sub
pop
fnstcw
xchg
mov
xchg
std
xor
dec
loop
or
jno
mov
push
cmp
jo
sahf
stos
mov
out
inc
dec
fcomi
adc
push
js
or
pusha
aaa
push
add
sub
ljmp
mov
jmp
stos
mov
ds
jge
add
push
enter
leave
mov
mov
rorl
or
lock
stos
adc
shll
push
sub
pusha
in
je
clc
lds
mov
shll
cltd
add
sbb
sahf
push
sarl
dec
dec
sahf
data16
adc
scas
lock
sbb
cmpsb
repz
orl
mov
std
lods
mov
shl
sbb
jge
mov
dec
cmp
sbb
fcomi
test
jne
sub
xor
imul
dec
add
mov
xchg
cltd
mov
cmp
inc
test
mov
sar
mov
or
fadds
sub
hlt
mov
add
ficomps
push
pop
pop
sub
pushf
sbb
cmp
cmpb
pavgb
lods
das
decl
fs
mov
sbb
jecxz
sbb
cmp
nop
data16
stc
sbb
rol
lods
and
xchg
fs
jmp
adc
dec
cmp
das
ds
push
xchg
adc
sar
pop
mov
sti
iret
iret
ror
jle
shl
xchg
lahf
icebp
loopne
mov
into
mov
lea
ljmp
mov
xor
sub
pop
push
xlat
ror
and
rcll
cltd
push
pusha
pop
out
adc
pop
dec
stos
loop
sti
xchg
movsb
cltd
mov
std
xor
and
xchg
bound
xor
cwtl
pop
pop
and
hlt
in
mov
cmp
jbe
mov
sub
popf
sub
push
sub
lods
lods
cmp
adc
mov
scas
jbe
clc
lcall
popw
or
pusha
int
and
test
inc
mov
sti
pop
xor
jmp
jp
mov
gs
push
test
push
clc
std
aam
repnz
imul
push
rcl
rorl
aad
stos
or
xchg
sbb
xchg
jl
dec
orb
mov
push
push
mov
jne
movhps
std
insb
add
or
and
mov
push
jmp
push
add
nop
scas
inc
je
stos
push
xor
and
dec
jmp
lds
sbb
pop
dec
outsb
out
les
push
add
and
in
out
inc
stos
pushf
mov
cltd
jo
and
cld
ds
mov
pushf
call
mov
xchg
rcrl
repnz
cltd
pop
push
dec
sub
and
insl
shrb
sbb
cli
hlt
not
imul
add
or
mov
outsb
inc
test
sar
cmc
dec
inc
inc
jecxz
jns
je
repnz
inc
ds
ljmp
jae
pop
cmpsb
mov
mov
in
dec
xorb
jmp
xor
icebp
mov
out
xor
fistpl
in
inc
lcall
test
mov
sahf
xchg
xchg
test
sti
iret
jg
pop
or
mov
test
fimuls
inc
pop
jp
imull
sub
and
push
ficoml
in
int
xor
pop
loope
fbstp
fistpll
or
xchg
push
dec
add
mov
pop
or
mov
add
push
sbb
mov
mov
xor
mov
ficomps
scas
aaa
cmp
pop
push
jb
inc
xchg
out
clc
cli
in
mov
call
xlat
or
ss
hlt
xchg
lea
loop
dec
push
lods
pop
sub
push
dec
fnstenv
jne
mov
mov
in
push
and
sbb
jb
mov
insl
push
sub
xor
ljmp
jne
cmpsb
icebp
push
adc
pop
sbb
pusha
push
in
adc
cmp
ds
sub
and
add
pusha
pop
sbb
movsb
cmpsb
pushf
es
adc
mov
popa
rorl
push
ljmp
cmpsl
int3
call
xchg
insb
push
ljmp
xlat
pop
inc
pop
dec
push
in
cs
loope
xchg
enter
dec
in
mov
fnsave
ficomps
xor
and
inc
dec
jae
fs
adc
add
sahf
push
ljmp
lcall
jge
aam
mov
lcall
icebp
movsl
pop
outsb
rolb
xor
or
cmp
jo
mov
idivb
lret
pop
ffree
fadd
in
cs
mov
mov
shl
lret
pop
and
or
jg
or
cli
mov
xor
push
xor
ja
push
negl
cmp
clc
pop
xchg
pop
mov
outsl
jnp
push
loope
mov
sbb
mov
insl
cmpsl
insl
mov
stos
data16
iret
aad
push
in
leave
add
out
add
sahf
pop
mov
sbb
xor
sahf
mov
je
xacquire
cmpsl
outsl
mov
jg
test
fbld
dec
je
mov
or
std
sete
cwtl
leave
mov
or
repz
push
or
pop
mov
pop
or
push
std
aaa
sbb
push
cmp
jbe
into
repnz
cmp
fsts
mov
sbb
lods
ljmp
call
push
jne
dec
sar
push
xorl
ret
add
jae
ja
add
jp
icebp
addr16
cli
and
stos
test
adc
mov
cld
xchg
mov
sbb
fwait
aam
addr16
xor
inc
aas
dec
arpl
xchg
jg
fstsw
pop
lock
adc
fidivs
mov
call
mov
sub
imul
mov
icebp
or
in
mov
popa
fldcw
sti
mov
pop
jae
stos
lock
sbb
and
jno
pop
sbb
leave
out
xor
xor
mov
movsl
repz
xchg
dec
xchg
pop
fcoms
push
inc
pop
and
das
int3
mov
movsb
imul
aas
out
dec
mov
hlt
in
scas
sar
sbb
popa
bound
icebp
mov
and
test
xchg
xchg
pop
ss
sub
xor
clc
adc
pop
lds
cli
lret
clc
push
mov
push
inc
push
test
int
loope
adc
or
xchg
mov
add
push
mov
jmp
ret
mov
inc
cmp
sarl
xchg
fistl
stc
jle
push
out
mov
in
daa
fsubrp
sub
js
popf
jns
xor
push
dec
adc
aas
xorl
movsb
fnstsw
divb
mov
jmp
sbb
mov
mov
jns
push
faddl
std
sti
in
movsb
lods
sbb
ljmp
or
loopne
cmc
xlat
xchg
xchg
dec
imul
add
xchg
xchg
in
loop
and
jae
stos
jl
shr
sbb
stos
cwtl
loope
lret
push
adc
mov
popf
xor
je
adc
je
jno
push
int3
sarb
into
pop
in
dec
xchg
xchg
and
mov
xlat
add
pop
mov
xchg
inc
shrl
out
outsl
xor
adc
and
add
push
jbe
jno
jno
mov
mov
pop
int
cmpsb
mov
xlat
dec
push
mov
sub
cli
insb
adc
xchg
sbb
ret
insb
and
jecxz
stos
mov
ficomps
mov
mov
mov
fwait
xchg
jne
inc
inc
stc
xchg
mov
xchg
jns
pushf
sbb
loope
ds
fisubs
pushf
cmp
nop
les
stc
fsubrl
and
inc
xchg
adc
mov
xlat
lcall
out
dec
pop
rclb
andb
cmp
and
and
add
shll
lock
adc
lods
xor
cld
pop
mov
inc
xor
jo
sub
rclb
insb
out
inc
into
or
outsl
xchg
jp
xlat
dec
bound
rorb
sbb
cmp
cmpsl
sbb
push
ja
jmp
jno
inc
mov
sub
insl
popa
adc
sub
loop
das
dec
jmp
push
xchg
xchg
push
sub
inc
inc
repz
mov
xlat
imul
pushl
stos
cwtl
and
daa
and
push
sbb
cmp
cmpsl
add
fmulp
rolb
mov
negb
mov
jne
pop
ss
lea
fiaddl
loopne
sbb
jne
int
pop
in
clc
xor
test
arpl
int3
xor
lods
stc
gs
gs
mov
cltd
dec
xchg
aad
inc
mov
xor
jo
lret
mov
pop
mov
call
mov
adc
mov
sbb
jae
push
xchg
popf
xorb
mov
scas
movsb
stos
inc
or
adcb
sbb
and
sub
addr16
or
sub
enter
clc
shlb
and
mov
adc
cli
shl
test
mov
mulb
fcoml
int3
outsb
shll
push
and
inc
sub
dec
mov
xchg
insb
cmpl
lret
mov
sahf
aaa
mov
cmpb
pop
or
jnp
loopne
mov
or
hlt
mov
in
int3
movsb
adc
out
push
jns
add
mov
loop
test
jae
mov
and
mov
xor
fisubs
mov
and
mov
dec
stos
idiv
es
mov
xor
aad
fistps
push
xor
into
add
inc
fwait
loope
dec
lods
adc
test
xor
lcall
or
pop
lahf
jno
cltd
or
jnp
add
add
mov
xchg
int
cmp
mov
out
fdivrl
call
push
test
ret
lods
jae
push
pop
popa
jmp
aaa
cld
xchg
push
addl
lea
dec
rorl
jmp
dec
mulb
mov
mov
icebp
xchg
cs
sub
adc
ja
lods
loopne
add
aaa
jle
sbb
jo
in
or
and
mov
int3
mov
jns
mov
lret
and
ficoml
add
mov
cmp
icebp
orl
roll
or
cmp
xchg
cltd
cmp
cmp
jne
stos
jno
dec
ljmp
cli
pop
movsl
popf
jae
mov
lret
jg
outsb
pop
jne
dec
jmp
jb
pushf
push
cmp
out
cmpsl
stc
sahf
mov
mov
jmp
sbb
push
jg
mov
dec
clc
outsb
ss
add
dec
dec
sbb
out
xor
imul
fnsave
push
or
enter
ret
lret
imul
in
xchg
jmp
and
mov
cmp
cmp
fldt
dec
divb
inc
mov
mov
fs
pop
cli
xor
jns
gs
lds
sbb
xchg
sbb
pop
or
push
shll
subb
dec
cmp
and
fadds
mov
xchg
mov
dec
push
mov
sahf
jl
enter
bound
test
bound
fs
sub
mov
or
push
add
push
mov
mov
enter
xor
push
jmp
leave
inc
jae
enter
lahf
add
lods
js
or
inc
pop
nop
lods
decl
xchg
cmpsb
repz
insl
or
pop
call
sbb
fwait
dec
dec
cmp
or
cmc
or
jne
pop
fdiv
mov
fldt
xchg
pushf
into
mov
inc
orl
cli
jnp
and
mov
adc
out
push
and
dec
and
lds
fucom
jge
jne
rolb
xchg
jg
lock
xchg
mov
mov
jo
adc
movsl
dec
shrb
mov
push
in
cwtl
mov
into
add
push
cltd
dec
sub
jnp
aas
or
leave
lds
jnp
or
mov
scas
arpl
xorl
jmp
lcall
inc
sub
nop
adc
call
ljmp
mov
cmp
sbb
out
adc
pop
int
mov
fcoms
leave
jbe
mov
stos
or
sub
or
mov
les
icebp
mov
dec
sbb
mov
dec
mov
add
mov
fiaddl
mov
popf
xor
rcr
xchg
stos
inc
pop
je
data16
iret
imul
push
bound
mov
imul
mov
sbb
jbe
cmpsl
pop
xchg
sbb
pop
daa
lods
pushf
inc
adc
jle
dec
adc
aaa
sub
cwtl
es
push
and
xchg
xchg
xchg
imul
sbb
pop
fs
dec
sbb
arpl
std
sbb
xchg
ss
or
xor
sbb
icebp
sub
sub
jnp
xor
push
ficoml
push
inc
sub
xchg
add
ficoml
jp
mov
lea
aad
xor
test
inc
stc
mov
or
xor
jnp
push
pop
or
add
sar
xchg
movsl
out
xchg
dec
icebp
fidivrs
sub
sarl
shl
jg
shr
cld
sbb
fnstsw
mov
mov
xchg
pop
and
jecxz
arpl
xchg
std
jp
cmp
shl
jbe
push
mov
mov
mov
popf
or
jge
scas
jns
cmp
push
pop
int3
adc
lcall
gs
cmpl
or
push
inc
and
mov
int3
mov
jl
push
mov
mov
dec
ljmp
inc
repz
fisttps
in
pop
cltd
mov
sarl
in
sbb
inc
sbb
lods
stc
insl
push
mov
dec
movsb
clc
cmp
pushf
sub
push
lods
cltd
or
mov
clc
into
jl
add
sahf
int3
mov
aad
loopne
decb
jo
mov
repnz
icebp
lds
pop
adc
iret
popf
jbe
xchg
lcall
ljmp
rorl
loope
hlt
loopne
scas
movsb
enter
xchg
jns
test
orb
int
flds
lcall
pop
stos
push
aad
insl
adc
iret
lds
push
inc
enter
or
pop
mov
les
mull
iret
repnz
loop
mov
jns
inc
cmpsl
ret
in
fwait
pop
add
mov
inc
mov
insb
xor
and
adc
pop
jno
shll
pop
xchg
imul
cmpsl
pop
mov
mov
cmp
xchg
jns
adc
rcl
lret
mov
iret
js
cs
jae
pop
leave
faddl
jnp
push
dec
scas
enter
push
sub
adc
cmp
call
stc
or
fadds
push
rcrb
push
mov
fs
ja
stos
cmp
fcomi
es
scas
adc
cld
dec
pop
mov
and
xchg
or
xchg
iret
push
inc
pop
js
bound
jmp
mov
or
push
cld
dec
push
fimull
xchg
cmp
mov
push
es
sbb
cltd
cmc
aas
inc
push
mov
jno
adcb
lock
mov
lret
movsb
test
pusha
out
pop
pop
xlat
mov
mov
loop
push
idiv
sbb
sbb
lret
pop
mov
mov
out
dec
sub
sbb
xchg
cmc
pop
xor
fbld
mov
mov
int
test
push
dec
cld
gs
mov
in
outsb
dec
push
mov
xchg
mov
push
xchg
xor
push
pop
add
sub
mov
dec
push
pop
pop
cld
sbb
stc
jg
or
add
add
sub
aad
mov
pop
xor
cmp
insl
push
test
jg
xor
fdivl
rclb
sarl
mov
push
dec
xor
mov
js
sbb
push
cmp
in
movsb
mov
jecxz
adc
test
dec
pop
push
leave
stc
jge
fwait
out
add
fsubrl
je
inc
push
movsl
jmp
test
inc
mov
cmp
insb
shll
test
mov
xchg
sbb
sub
inc
mov
mov
or
sub
cmp
stos
add
das
subb
mov
mov
jle
rcl
sub
lea
pusha
xor
push
mov
mov
adc
out
push
sub
mov
mov
pop
add
iret
adc
mov
xchg
mov
mov
scas
xor
adc
aad
mov
mov
lods
mov
mov
xor
subl
xor
sarl
inc
fcoms
mov
fisubrs
dec
or
leave
or
cmp
jae
mov
enter
or
jnp
in
movb
inc
fsubrl
cltd
sbb
sub
mov
mov
adc
jno
repz
imul
das
subb
cwtl
sbb
outsl
rorl
call
cmp
imul
lods
fmul
push
or
mov
fnsave
insl
aas
pop
aam
cwtl
lds
das
xchg
mov
cltd
lret
jno
test
jmp
dec
jecxz
lret
mov
dec
dec
push
mov
xchg
aaa
mov
mov
ljmp
imul
rclb
mov
out
jno
data16
ret
or
mov
loope
test
out
mov
mov
mulb
xchg
pop
dec
sbb
mov
outsl
adcb
aas
je
or
outsb
jl
dec
xchg
push
xlat
and
xor
clc
mov
push
test
addl
inc
add
movsl
out
lock
lods
xor
or
cmp
adc
psrad
push
cwtl
xchg
mov
mov
out
push
pop
aam
negb
inc
push
fisubs
or
dec
jecxz
pushf
cmp
pop
pop
ficompl
mov
xchg
aas
repnz
jbe
ud2
les
adc
push
repnz
mov
enter
les
cmp
sbb
divb
jl
cmp
enter
pop
mov
push
pop
lods
cld
cwtl
xchg
les
cmp
pop
shlb
sub
inc
jb
dec
in
cwtl
adc
test
aad
adcl
xor
popa
xchg
pop
push
xor
cmp
cmp
inc
cmp
cmp
push
daa
and
pop
out
inc
adc
cmpsb
jb
jle
cmp
cmp
test
sbb
xor
mov
pcmpgtw
cmpb
push
mov
pop
mov
and
push
repnz
out
mov
loop
stc
enter
push
clc
js
lods
jnp
mov
mov
cltd
lods
mov
push
nop
jecxz
imul
andb
mov
mov
cmp
mov
ds
pop
adc
add
addr16
clc
call
test
call
xlat
insl
fnstenv
or
sbb
nop
lret
fisttps
xor
clc
dec
ret
inc
call
mov
jg
sbb
pop
sti
jmp
jle
mov
jb
ret
and
rcrl
mov
subl
mov
inc
or
lahf
pop
xchg
sbb
decb
aam
xor
ja
notb
sub
or
ja
je
fchs
movsb
int3
sub
adc
insb
or
and
stos
test
ds
test
jmp
xchg
add
sbb
loop
jecxz
mov
insb
rcll
shlb
push
fimull
dec
cs
shll
lea
test
xor
xchg
add
or
popa
das
stos
roll
stos
fistpll
or
movsb
mov
stos
xor
dec
push
xchg
data16
in
fs
and
cmpsl
fucomip
cmc
mov
pop
xor
stos
andb
push
cmc
jl
push
cli
ret
test
mov
jecxz
mov
sarl
mov
movsl
inc
mov
mov
and
je
adc
mov
adc
outsl
imul
add
hlt
mov
pop
add
mov
test
sub
or
bound
pop
or
incl
cmp
out
stc
inc
lfs
pusha
aam
ss
sbb
fadds
and
and
inc
gs
lock
push
push
lods
in
pushf
insl
adc
jmp
lahf
rolb
fstl
popa
scas
pop
add
mov
flds
mov
cltd
or
ret
adc
jno
jne
call
xchg
ljmp
xor
lods
xchg
cmc
filds
add
aad
imul
xor
jecxz
xor
dec
es
arpl
xlat
jp
and
idivl
adc
pusha
mov
scas
pop
subb
adc
sbb
mov
mov
sbb
fsts
dec
in
xchg
jno
stos
imul
ss
lds
in
mov
insl
xchg
scas
jne
test
mov
mov
ffreep
fs
je
xor
jl
lahf
cmp
sbb
dec
mov
in
dec
add
orl
sub
fmuls
inc
clc
push
fs
cmpl
push
pop
xchg
std
mov
adc
loop
sbb
inc
mov
fwait
test
xchg
out
outsb
addb
xchg
bound
pop
scas
mov
scas
sbb
or
inc
mov
fidivl
hlt
rolb
ret
cmp
dec
xchg
shll
scas
rorb
je
or
jecxz
pop
and
dec
mov
in
mov
gs
icebp
xchg
and
popf
outsb
out
cs
push
adc
xchg
jmp
xor
addr16
out
add
push
push
inc
push
push
jmp
gs
xor
ficoml
mov
xlat
sbb
popf
and
mov
cmpsl
mull
xor
test
jne
out
ret
add
sub
push
xchg
clc
sbb
jae
push
dec
std
ja
push
das
jno
xchg
and
test
xchg
ja
popf
mov
or
mov
arpl
dec
sub
xchg
inc
mov
xor
in
push
loope
xor
cmp
rol
mov
sub
pop
pop
mov
mov
mov
xchg
or
add
lods
es
cmp
adc
dec
clc
xchg
outsl
andb
sub
bound
inc
int3
pop
int3
outsb
mov
aaa
push
out
or
mov
fstl
xor
leave
and
clc
lcall
out
pop
dec
push
fcmovu
mov
mov
movsl
jbe
aaa
dec
std
cmpsb
subl
or
mov
je
fbld
add
push
out
and
cltd
rorb
popa
adc
insl
les
ret
dec
insb
enter
inc
hlt
cld
inc
aas
sti
mov
push
mov
cmp
fnsave
pop
mov
mov
ds
pop
mov
jmp
inc
xlat
mov
icebp
jbe
in
mov
imul
pop
sub
popf
cli
loop
popa
inc
and
jg
in
inc
jno
push
push
lds
aas
sbb
out
repnz
fcmovu
pop
jbe
sub
stos
ret
insb
ror
xor
out
in
insb
and
int3
jg
sub
sub
mov
in
add
fadd
mov
xlat
mov
les
pop
pusha
add
sahf
sub
daa
jno
lahf
repz
popa
fisubrl
in
or
mov
lret
test
je
outsb
mov
push
in
std
push
iret
loop
movsl
insl
jmp
lods
in
rcrb
jl
mov
fistpl
mov
popa
mov
rep
test
out
push
mov
shrb
push
cmp
repnz
ss
call
push
inc
jbe
jns
ja
lea
fisubrs
pop
ret
mov
rcrb
xchg
sbb
jno
scas
or
bound
mov
in
test
sub
repnz
in
xor
mov
jl
dec
je
mov
cmp
adc
and
lcall
cmp
xor
xchg
dec
pop
push
imul
les
inc
mov
pop
lds
in
mov
pop
testb
dec
mov
subb
outsb
jge
ret
lods
adc
and
cmp
outsb
add
call
mov
xlat
inc
sub
stos
ret
xchg
imul
js
pop
dec
mov
jmp
int3
out
lahf
sub
push
mov
mov
xchg
aas
push
fnstsw
ja
enter
test
xor
xorl
hlt
push
enter
test
aas
std
outsb
adc
pop
dec
lret
xor
push
mov
stos
int
pop
pop
negl
push
fcmovne
lret
xchg
enter
stos
stos
adc
imul
add
jmp
cmpsb
jmp
bswap
fisubl
add
adc
pop
in
in
aam
cmc
inc
jns
adc
push
rol
push
mov
inc
pop
loopne
icebp
or
and
rcll
imul
mov
in
rolb
lock
popf
test
jnp
jmp
test
inc
ds
movsb
xchg
fdivs
cmc
xchg
in
add
push
xchg
dec
pop
stos
stc
xor
jge
pop
push
fadd
jecxz
push
shrl
inc
icebp
pop
pop
xchg
or
xchg
lret
call
and
fbstp
add
sub
mov
imul
inc
pop
xchg
dec
dec
das
xchg
mov
nop
xchg
jecxz
imul
add
mov
pop
cmpsl
add
mov
mov
cmpsb
movsl
mov
push
cmp
sarl
divl
or
leave
scas
mov
pop
outsb
addl
sbb
dec
xchg
frstor
dec
add
xor
push
inc
mulb
insl
xchg
fidivl
inc
and
mov
addr16
sbb
into
sbb
inc
mov
xchg
out
out
mov
push
pop
cli
cmpsb
fistpl
sahf
rolb
mov
rdtsc
out
pop
push
das
mov
inc
cs
push
lret
adc
dec
mov
fdivr
inc
jb
ss
fdivrs
dec
lcall
cltd
dec
rcl
cwtl
test
push
xchg
pop
cltd
pop
adc
and
test
pop
add
stos
push
xor
lret
add
jp
or
push
inc
roll
mov
mov
inc
xchg
jp
dec
fstpl
testb
cmpsl
mov
das
out
leave
cmp
add
js
and
adc
adc
filds
aas
dec
daa
mov
fwait
sarb
sbb
stos
fldcw
pop
xor
ret
mov
scas
cmp
lods
jbe
xor
fstpl
fwait
xor
loop
rorl
in
lahf
push
pop
fs
rorl
in
xor
jo
pushf
cwtl
int3
cld
std
movsb
inc
in
lods
jbe
jg
addb
mov
cmpsb
imul
popa
stc
fisttpll
pavgw
dec
and
cmp
push
xchg
or
jle
adc
or
aaa
lock
inc
clc
sub
dec
imul
lods
add
add
test
scas
icebp
and
xorl
je
repz
in
mov
push
pop
lds
add
add
decl
sbb
sbbb
xor
push
lods
push
sti
fxch
adcl
xor
pushf
mov
xchg
cmp
clc
lock
xlat
inc
jg
pusha
sub
xchg
sub
push
pop
data16
dec
push
arpl
inc
dec
mov
cli
aad
int
mov
out
inc
sub
pop
pop
inc
and
in
notb
inc
push
sahf
call
lcall
dec
jns
pop
xchg
sti
push
sbb
mov
cmpsl
sub
cmpsl
daa
push
and
iret
adc
lahf
cmp
push
mov
mov
mov
outsl
out
xor
cld
cmpsl
popa
pop
outsl
cs
cli
roll
aam
add
roll
daa
push
nop
stos
xlat
add
imul
pop
pop
push
je
fcmovu
notb
popl
mov
xchg
jo
mov
inc
adc
stos
push
in
xchg
ret
lds
push
sbb
fdivrs
or
mov
fcomps
cmp
mov
loope
pop
xlat
add
fdivl
sbb
xchg
outsl
push
xor
test
movsl
mov
inc
test
int3
push
adc
jle
pop
sub
push
sub
insb
popf
lods
cmp
add
mov
ja
and
into
fcmovne
add
xor
mov
roll
test
xlat
imul
push
add
sub
mov
xchg
je,pn
das
pop
test
popa
add
jno
pop
les
dec
or
mov
loop
cmpl
or
enter
xor
xchg
or
fsubrl
jmp
push
scas
ficomps
out
movb
scas
cmpb
add
mulb
pop
lahf
add
test
icebp
mov
jno
lret
es
or
jne
add
sub
repnz
ret
or
or
jbe
testl
push
xchg
and
jae
out
adc
ret
stc
fwait
mov
cwtl
repz
addr16
icebp
das
sub
sub
icebp
js
test
test
sbb
and
iret
jle
fisubrs
repz
in
aam
dec
mov
pop
or
out
xor
ret
stc
jl
dec
jp
sbb
xor
pushf
inc
iret
fs
test
sbb
xor
adc
in
pop
push
in
mov
cmp
leave
stc
imul
xchg
add
test
scas
test
push
test
mov
std
inc
lcall
divb
out
nop
outsl
iret
or
outsl
nop
and
adc
jge
inc
pop
rorb
sbb
out
fsubr
adc
adc
dec
add
shl
cmp
bound
jno
mov
lcall
lret
pop
jb
sub
fsubr
add
push
push
cmc
and
mov
jmp
je
inc
jge
add
shrl
push
dec
fs
hlt
pop
pop
dec
in
adc
mov
leave
xchg
push
inc
mov
pop
sub
mov
push
sbb
or
loope
in
bound
mov
xchg
jnp
iret
lldt
lret
enter
and
shll
rcll
mov
dec
or
sahf
mov
out
and
adc
popa
inc
mov
sbb
and
cmp
scas
mov
fisubl
mov
xchg
sbb
clc
sbb
call
jne
fiaddl
jle
movsl
cli
shll
inc
outsl
jne
dec
inc
add
cmp
xor
dec
nopl
and
push
clc
cwtl
in
push
out
movsl
nop
sbb
adc
in
test
imul
call
mov
stc
adc
push
dec
or
cld
mov
xchg
adc
mov
cltd
loop
in
in
push
popf
jmp
ljmp
test
sub
mov
dec
insb
pop
and
mov
lret
sbb
popf
xor
inc
or
in
xchg
and
test
aam
sub
ret
clc
dec
cmp
xchg
sub
scas
fs
mov
pop
enter
divl
mov
sub
pusha
jo
sbb
adc
lahf
pop
lods
add
shlb
push
ret
push
push
loop
pop
jb
xchg
or
lcall
jmp
push
imul
mov
pushf
push
ret
ss
stc
sub
pop
jmp
bound
xchg
add
pop
stos
and
mov
jp
sbb
loope
js
dec
and
sub
loopne
ja
fcoml
in
sahf
inc
cmp
stos
call
mov
pop
ret
scas
push
sub
sbbl
cmp
jmp
out
sub
and
loop
int
movsb
and
cli
push
pop
data16
cli
push
jg
movsb
mov
out
adc
xor
push
or
cwtl
mov
lds
mov
mov
mov
and
or
lahf
jg
mul
movsb
dec
idiv
test
ds
mov
movsb
popl
xchg
mov
mov
xchg
mov
lock
jmp
xchg
arpl
cmp
mov
mov
and
sbb
xchg
and
hlt
xorl
mov
jl
subb
mov
mov
movsb
dec
les
pop
out
hlt
sbb
ret
sbb
xchg
or
clc
pop
dec
xchg
mov
enter
cmpsb
and
clc
jae
fisubrl
xchg
rclb
cwtl
mov
popa
sbb
je
xor
add
lods
lea
cld
adc
mov
pop
out
aas
push
sub
je
mov
push
xchg
fwait
idivb
stos
jecxz
pop
js
insl
xor
ret
push
push
pop
repnz
xor
add
or
iret
xchg
sub
sub
mov
jp
aad
nop
out
into
addr16
or
lret
popa
pop
dec
dec
adc
mov
adc
cmp
mov
rcll
inc
cli
mov
lods
mov
repz
cmp
es
push
out
clc
fistpl
sbb
fdivrs
in
repz
orb
cmp
mov
scas
clc
ret
stc
lret
push
push
cmpsl
scas
rol
popf
push
andb
and
mov
mov
xor
pop
shl
or
les
sbb
dec
repnz
les
int
out
pop
scas
faddp
pusha
mov
push
adc
out
mov
cmp
cmc
adc
sarl
lea
int3
es
test
or
jmp
dec
pushf
test
sbb
cmp
mov
cmp
or
cmp
fs
out
sub
in
xorb
lods
mov
add
cmc
pop
sub
cmpsb
cmpsl
or
mov
inc
jecxz
jns
test
sub
pop
fsubrs
pop
inc
push
iret
push
push
pop
cwtl
mov
clc
out
fs
inc
lcall
and
sbb
divb
lret
jg
in
sbb
ret
mov
mov
xor
faddl
sub
xlat
add
loopne
fwait
pop
inc
sbb
loop
xchg
iret
or
mov
xchg
sahf
imul
lds
mov
fiaddl
mov
gs
or
cmpsl
lahf
xchg
fsubrl
addr16
jnp
sub
mov
add
movsb
clc
jb
imul
mov
add
push
mov
flds
adc
icebp
aad
jbe
xlat
add
add
ret
mov
insl
push
in
inc
pusha
jbe
xor
lahf
pop
or
push
adc
cmp
push
ds
jb
push
clc
repz
into
xchg
xor
mov
test
add
cmp
imulb
and
lock
es
adcl
imul
outsb
subb
jle
sub
inc
int
jmp
int3
mov
xlat
dec
jb
ret
imul
call
outsb
add
mov
orl
dec
xchg
pop
dec
and
jae
int
mov
adc
cmpsb
inc
mov
in
mov
scas
aad
pop
sub
sub
ret
sarl
add
fwait
jns
pushf
dec
mov
sbb
popf
dec
dec
pop
mov
fildl
push
xor
xor
stos
xlat
adc
shr
mov
jae
int3
mov
kmovb
add
jno
popa
fdivs
popf
mov
scas
xchg
fwait
dec
jbe
clc
push
jbe
testl
insb
mov
loop
scas
fildl
sub
lods
mov
popa
pusha
popa
jge
cwtl
add
cmp
pop
jl
out
mov
and
or
mov
lret
jae
imul
mov
mov
mov
xlat
mov
pop
push
movsb
adc
lcall
pop
jmp
push
dec
push
adc
outsb
std
jno
push
push
or
adc
add
jmp
jbe
mov
or
ljmp
test
ja
cs
inc
and
mov
cmpsl
jmp
enter
mov
mov
stos
data16
jp
je
inc
test
cs
lret
add
mov
insb
xor
jbe
sbb
jbe
in
mov
xadd
sub
sti
in
push
xor
push
inc
lcall
std
imul
sahf
jmp
es
pop
popa
shrl
jns
xor
dec
xor
cmp
fadd
lcall
pop
xchg
jne
fidivl
push
iret
scas
ficomps
add
pop
aaa
or
pop
inc
inc
lea
stos
aas
pop
pop
inc
xchg
dec
out
mov
rcll
sarl
inc
mov
mov
int
xor
and
xchg
xorb
aam
push
and
in
mov
ror
jns
jg
pop
lds
and
dec
test
lcall
mov
enter
loop
mov
push
das
orb
inc
daa
cmp
stos
mov
je
and
pop
mov
and
jb
int3
call
out
into
push
add
push
pop
xchg
stos
test
stos
fnsave
out
or
movsl
sub
push
repnz
clc
es
mov
mov
rcl
mov
addl
add
mov
iret
into
shll
adc
and
test
dec
or
cmp
outsl
out
mov
je
test
lods
push
push
int3
je
loope
es
pushf
adc
jns
adcb
and
dec
mov
loop
lahf
inc
dec
sub
sbb
in
push
dec
daa
std
and
mov
xchg
lret
sub
xchg
or
cwtl
lods
jno
push
mov
out
mov
mov
jge
sub
sub
loope
ret
imul
cmp
jmp
xor
push
lods
push
and
rcll
jo
aad
and
into
sbb
adc
mov
xorl
cmp
lods
xchg
xchg
repnz
push
pop
leave
dec
inc
aas
sbb
out
add
daa
pop
dec
jno
pop
leave
mov
ret
add
dec
lcall
into
scas
lea
std
mov
stos
mov
ljmp
in
je
aas
outsb
inc
mov
popf
or
iret
in
sbb
dec
repnz
mov
test
lret
es
adc
dec
pop
aas
ljmp
adc
shl
jp
sub
ror
xor
jle
sub
and
fstpt
xchg
aaa
mov
in
push
je
fs
dec
xchg
loop
movsb
inc
out
mov
enter
inc
push
mov
fs
dec
movsb
or
sub
push
fnstsw
inc
xchg
mov
in
push
in
pop
mov
in
jo
fldl
je
xor
ljmp
ret
loop
push
in
aad
shrl
fstpl
insb
cmp
cwtl
addr16
mov
mov
dec
clc
mov
loopne
enter
or
pop
and
popf
sbb
push
gs
mov
mov
je
pop
lods
push
xchg
mov
pop
iret
and
add
jns
lret
and
sub
ret
lret
mov
out
cmp
leave
filds
rorl
inc
push
add
out
repz
inc
movsb
lock
mov
inc
mov
icebp
sub
adc
inc
lods
and
test
lcall
in
xor
xchg
add
into
inc
jge
ret
ja
dec
sbb
xor
inc
lds
rclb
sbb
mov
lcall
ss
adc
negb
jl
push
inc
sub
enter
add
cli
jb
nop
orl
fwait
sub
leave
shll
or
test
mov
mov
es
inc
mov
jecxz
ja
adc
sbb
outsb
and
aaa
pop
in
sbb
outsb
jp
mov
cwtl
outsb
xchg
mov
pop
arpl
clc
aaa
mov
or
mov
adcb
movsl
loopne
sub
xor
or
cmpsl
enter
and
sub
lods
add
cltd
push
mov
out
sbb
cld
push
or
push
cmc
jmp
dec
pop
imul
and
xor
and
aas
sbb
clc
jmp
mov
xlat
outsb
filds
adc
xchg
sbb
arpl
push
mov
push
cmc
fldl
push
push
in
xlat
push
add
loopne
sub
adc
popa
push
imul
fs
iret
cmp
loope
repz
jmp
das
leave
xor
cmp
xchg
daa
mov
add
pushl
outsl
push
cmp
fwait
aas
xor
adcl
stc
fnstenv
mov
pop
movsb
inc
test
push
xchg
adc
andl
ds
add
fistpl
xchg
xchg
xchg
shlb
jne
jg
and
sbb
xchg
push
adc
mov
xchg
sar
adc
enter
inc
divb
mov
mov
out
jl
sub
stc
sub
xchg
xor
ret
jg
sbb
inc
pop
addl
les
testb
xchg
mov
stos
sbb
mov
cmp
push
or
fstl
jmp
fnstcw
add
mov
jp
push
add
gs
lahf
andb
out
adc
cmpb
cmp
jg
add
mov
sub
push
mov
stos
inc
rorb
clc
cmp
dec
insb
dec
addl
out
add
mov
pop
cmpsl
or
or
loope
push
add
push
aam
cmc
mov
and
cmp
inc
movsb
imul
ljmp
push
test
stos
push
stos
sbb
les
jo
rcrb
adc
push
or
add
hlt
clc
cmc
lret
dec
add
jmp
push
stc
xor
jo
push
mov
fstps
sbb
mov
xor
fadds
jb
hlt
and
lret
or
sub
xchg
add
stc
popa
dec
push
mov
adc
mov
inc
mov
add
xchg
jp
lock
mov
sub
stos
fwait
lods
add
mov
aad
mov
and
loopne
mov
lds
sbb
adc
imul
and
mov
rorl
daa
mov
pop
stos
cmpsb
sub
insl
out
sbb
mov
jg
sub
rcl
popa
call
pop
mov
add
push
fbstp
lea
dec
xchg
xor
sub
xlat
outsb
add
xchg
sub
sbb
mov
dec
adc
sub
push
hlt
push
sbb
jne
jmp
cmp
hlt
in
sub
jle
jl
pop
out
out
cltd
push
pop
push
cmpsb
or
or
push
mov
pop
sbb
mov
push
iret
or
or
dec
addl
cmpsb
mov
and
fstpt
add
movsb
sub
jmp
mov
adc
mov
ljmp
js
adc
stos
cmc
imul
nop
push
or
scas
movsl
into
mov
or
das
inc
pushf
pop
push
or
ret
push
popf
lea
sbb
sbb
add
arpl
and
xor
repz
add
adc
fcomp
test
or
cli
mov
shrb
pop
lret
popl
pop
cmp
ficoms
test
sbb
dec
les
mov
jo
outsl
rolb
stos
lret
cld
mov
push
sbb
cmp
dec
cltd
pop
jnp
mov
pusha
dec
imul
sub
jno
xchg
icebp
pop
emms
inc
in
sub
dec
adc
outsb
in
fsub
bound
cmp
icebp
loopne
and
push
cmp
mov
or
scas
dec
pop
fistpl
shl
mov
test
pop
fnstsw
mov
inc
add
call
fildll
inc
int
daa
das
pop
push
jo
mov
cmp
cld
cmp
mov
mov
fisttps
xchg
es
mov
icebp
sub
jne
adc
lds
xchg
adc
arpl
push
movsb
out
and
loop
xchg
movb
add
imul
mov
out
cmp
loop
pop
cmp
sbb
test
mov
out
adc
test
rcrb
pop
outsb
pop
xlat
inc
mov
push
xchg
dec
mov
sahf
aaa
ret
pop
cmp
insl
xchg
jns
mov
push
xchg
imul
imul
test
dec
fimull
in
inc
sbb
setns
cmc
lock
aam
and
nop/reserved
je
sti
sbb
addr16
je
push
jmp
mov
ret
pop
jnp
sbb
adc
cmp
mov
rclb
add
or
jne
add
lock
test
ret
or
mov
out
mov
mov
rol
jns
aaa
fmull
addl
imulb
xor
imul
int
inc
ljmp
push
push
sbb
dec
sbb
outsb
cltd
push
inc
insb
repnz
xchg
std
cmp
cli
cld
lret
movl
fisubs
and
fists
fimull
xor
mov
push
popa
xchg
loop
call
out
xchg
mov
movsl
or
cmp
push
jp
sbb
clc
testl
in
mov
xorl
xchg
sahf
push
paddw
cmp
jg
stos
loop
mov
push
fisubrs
jns
pop
mov
sbb
and
mov
ret
lret
outsl
ret
add
or
push
push
push
or
cmp
icebp
xor
decl
repz
sub
jmp
push
xchg
jmp
push
stc
or
xor
bound
out
cs
mov
push
mov
adc
lahf
clc
push
adc
jge
lret
subb
fbld
popa
fdivs
outsl
mov
shll
push
and
push
or
movsb
jbe
xchg
dec
int
cmp
shrb
sbb
or
pop
dec
in
add
imul
dec
inc
jp
enter
arpl
fdiv
clc
sbbb
xorb
add
in
adc
leave
subl
scas
pop
popf
jmp
dec
stc
adc
xor
sahf
push
cmp
rclb
in
rcr
pop
outsb
sub
test
cmpsb
pop
jmp
or
xchg
sarb
insl
and
pop
xchg
and
pushf
mov
lret
xchg
lods
cmp
in
pop
push
add
cwtl
mov
aas
js
jle
repz
adc
lret
vpsadbw
jecxz
jle
loopne
sbb
cld
inc
push
adc
punpcklbw
clc
nop
cltd
push
mov
js
mov
mov
dec
cmc
mov
cmp
lds
out
mov
lock
gs
outsl
lcall
lds
inc
dec
mov
mov
idivl
fldt
mov
mov
xchg
sbb
push
and
mov
scas
fs
mov
test
cs
or
inc
xchg
cmp
pusha
lea
push
call
cmp
adc
sbb
out
jns
movsl
fstl
inc
mov
outsl
xor
pop
cmp
add
frstor
push
xchg
filds
popa
iret
pushf
adc
dec
lock
daa
ljmp
jmp
bound
sub
sahf
mov
push
mov
push
insb
lds
test
xor
int
insb
lea
add
xor
add
int
jns
fiaddl
jnp
into
das
pop
cmp
jge
cmpsw
les
fs
adc
in
mov
mov
punpckldq
sahf
pop
ret
xor
mov
cwtl
or
xorps
insb
cmp
sbb
adc
in
out
rorl
mov
jne
cltd
dec
popa
mov
fnstsw
adc
adcb
mov
cmp
push
fnstenv
repnz
jno
sahf
mov
jb
jmp
inc
pop
movsb
arpl
sbb
fadds
inc
ret
sub
jbe
fmuls
pop
xchg
aas
jbe
pop
jae
aaa
aad
push
mov
jge
xorl
insl
push
xchg
scas
mov
shl
mov
inc
cmp
sbb
movsl
idiv
and
lods
or
mov
fcomps
cs
xor
addr16
pushf
xchg
cmpsb
lock
icebp
pop
test
jg
lret
mov
and
mov
js
cmp
or
mov
cli
js
lcall
sub
xchg
int3
fstl
adc
mov
add
test
mov
subb
sahf
lahf
sub
sarb
sbb
xchg
frstor
sub
rorb
lahf
xchg
sbb
sub
rep
cwtl
pop
push
xchg
or
xor
inc
or
cwtl
or
jecxz
call
or
imul
mov
and
outsb
insb
lods
push
push
inc
mov
dec
add
lahf
fmuls
lods
out
aam
and
cmp
dec
std
faddl
push
inc
fprem
fidivrl
nop
xlat
push
dec
repnz
js
jnp
das
pop
jae
adc
lods
subb
mov
lock
cs
adc
add
ret
cmp
mov
adc
xchg
pop
pushf
jg
fcmovbe
pop
popa
scas
call
dec
push
push
orl
push
rorl
cli
cli
addr16
xchg
mov
mov
lret
mov
mov
or
ja
lock
scas
adc
lea
cmp
jl
shll
jb
lods
mov
pop
xchg
pushf
xchg
clc
and
ror
adc
stc
mov
or
leave
rcl
or
pusha
push
push
les
mov
push
mov
adc
aad
add
inc
cmp
imul
test
jbe
pop
sbb
repnz
lret
mov
ja
or
testl
ljmp
mov
add
scas
dec
xor
or
sub
inc
add
mov
mov
loopne
add
outsb
mov
push
nop
shrb
ds
push
aaa
mov
mov
sub
popf
jecxz
adc
sub
outsl
jb
jecxz
xchg
ret
or
cwtl
stc
ljmp
sbb
aaa
pop
dec
je
or
pop
bound
rolb
outsl
xlat
adc
int
xchg
push
arpl
inc
shll
js
je
inc
xchg
packssdw
clc
imul
inc
mov
jnp
xor
mov
enter
cmp
mov
inc
cwtl
test
scas
loopne
shll
dec
push
dec
mov
cmp
inc
push
pop
ret
nop
std
jle
lock
mov
rcrl
adc
inc
shl
test
shlb
mov
roll
mov
xchg
mov
addl
cld
dec
icebp
push
lock
in
xor
pop
sbb
dec
mov
popa
adc
sarb
sbb
mov
sbb
cmp
and
icebp
or
mov
mov
fwait
adc
test
ret
pop
sub
adc
pop
popa
inc
or
movsl
xchg
fcompl
adc
jmp
addr16
ret
or
ljmp
je
repnz
jg
pop
pop
in
cmpb
xor
jo
out
add
adcb
inc
int
test
pop
pop
sbb
pop
ret
xor
jbe
and
je
push
popa
inc
lea
sbb
scas
popa
jg
or
sbb
adc
xor
add
aad
jge
mov
pop
loope
cwtl
add
dec
mov
ja
inc
cmp
iret
push
push
push
andl
mov
sbb
cwtl
insl
bound
notl
ret
pop
fwait
iret
out
fnstenv
dec
aas
mov
arpl
xchg
jmp
stos
addr16
mov
enter
pop
jae
sbb
stos
xor
leave
out
add
lret
or
lcall
inc
and
repnz
nop
int
push
jne
movsb
pop
xor
lock
mov
sbb
lea
rcl
stos
dec
loope
dec
xchg
outsl
stos
or
xchg
xlat
cmp
faddl
cs
ja
mov
loope
rcrb
adc
cltd
jbe
xor
arpl
movsb
out
dec
sbb
call
and
xchg
je
fidivrl
movsl
lret
hlt
shl
enter
lret
or
add
lods
xchg
outsl
dec
mov
fiadds
xor
jbe
dec
xchg
jnp
out
fwait
shll
sarl
dec
sti
xor
cmpsb
aas
xor
pop
dec
fdivp
push
mov
sti
mov
push
mov
cmp
in
mov
stos
cli
mov
daa
sbb
pop
movb
mov
dec
test
arpl
xor
adc
daa
orl
jg
imul
adc
mov
in
movsl
rcl
mov
fcmovnu
push
int3
shl
xor
jge
mov
mov
inc
adc
sub
pushw
nop
cmp
pushf
inc
inc
xor
std
adc
xchg
sbbl
out
mov
jbe
fsub
call
imul
sbb
xchg
je
cmove
addr16
out
xlat
lret
xchg
push
loop
dec
or
in
mov
das
dec
out
mov
adc
inc
xlat
lds
jno
iret
fucomp
dec
cmp
dec
fs
hlt
or
daa
push
shrb
packsswb
cmc
jne
mov
cmp
or
cmpl
lcall
mov
mov
incl
sti
xchg
adc
les
push
jmp
repnz
fdivrs
fnstsw
nop
pushw
add
xor
mov
adc
add
mov
push
lea
xor
bound
stos
pop
es
push
inc
cs
pop
jmp
xor
jp
sbb
mov
xchg
sub
xor
mov
rolb
lcall
mov
inc
bound
xchg
iret
pop
and
and
jle
lahf
outsl
xor
shr
xor
jg
inc
fbstp
pop
xchg
int3
inc
mov
sub
push
pusha
hlt
mov
outsl
and
xchg
decb
sti
adc
xchg
jne
mov
insl
dec
mov
movsb
mov
lcall
aas
sahf
xlat
dec
jb
movsb
inc
xor
jge
enter
jp
mov
xor
sbb
sbb
push
mov
je
ret
push
js
or
cmp
arpl
pop
push
xchg
je
in
inc
cli
pop
cmp
pop
fdivl
shll
sbb
mov
sbb
scas
pop
dec
or
nop
leave
lret
fmuls
cmp
mov
pop
sbb
mov
mov
hlt
mov
decl
xchg
ret
xchg
addr16
jl
pop
push
pop
mov
xor
aaa
xor
and
cld
shlb
push
mov
leave
cld
pop
lret
lahf
mov
cmp
inc
arpl
add
cld
push
push
push
mov
xchg
pop
cmp
fucom
add
cltd
lods
jecxz
xor
scas
mov
mov
adc
xchg
push
cmp
add
inc
xor
cmp
inc
mov
ljmp
mov
in
xchg
test
add
ss
insb
cmp
and
int3
cli
xor
sub
jne
and
arpl
xor
jmp
testb
dec
mov
adcb
push
pop
push
inc
adc
push
bound
cmpsb
push
sarl
xchg
sti
popa
push
dec
pop
or
inc
cli
adc
sub
inc
lods
adc
add
std
mov
popf
push
jg
scas
pusha
sbb
xor
sub
stos
inc
ret
dec
mov
jmp
jne
shrb
aaa
xlat
rcll
dec
scas
push
push
inc
pop
inc
jl
jno
icebp
sti
cmp
je
fs
push
xchg
les
sub
and
sbb
loope
jle
ret
mov
popl
push
jl
and
bound
jge
testl
out
jp
pop
out
inc
dec
das
data16
fimull
adc
push
or
add
cmp
lcall
pop
or
sbb
js
idivl
and
and
insl
adc
loope
push
ja
cmpsl
sahf
repz
mov
push
into
iretw
jg
add
les
mov
xchg
imul
rcll
les
or
xor
push
int3
mov
in
xor
loop
pop
das
out
fcoml
jo
xor
cltd
test
push
dec
lcall
pop
cmp
pop
fwait
and
adc
and
jl
cmpsl
sub
mov
jmp
mov
jle
sub
cld
and
mov
test
mov
jnp
cs
addr16
add
push
leave
or
das
xlat
icebp
xor
cwtl
mov
addb
fstpt
ret
xorb
push
es
cmp
push
mov
out
adc
daa
shll
adc
cmp
dec
fldt
mov
je
sub
enter
stc
test
jle
push
shrl
mov
mov
mov
sbb
xchg
data16
js
cld
sbb
mov
xlat
aaa
pop
cmpsl
subb
and
lods
jne
push
or
or
bound
pusha
stc
sbb
adc
leave
cmpsl
pop
ret
out
rcll
pop
repnz
fdivrs
rorl
hlt
sahf
lds
and
xor
mov
sbb
int3
das
scas
in
fwait
adc
loopne
jns
lret
xorb
rcr
ja
es
xlat
popa
ds
hlt
lcall
inc
xchg
fcompl
mov
repz
sub
lods
repnz
or
inc
jae
cmp
cld
lcall
cli
dec
and
rcrb
sub
xor
push
jl
dec
xchg
int
jmp
push
xchg
inc
jns
xchg
test
testl
in
cmp
inc
aad
iret
daa
xchg
movsb
subl
push
scas
fisubrs
and
mov
cltd
and
inc
pop
cmpsl
mov
daa
sub
cmpsl
arpl
mov
notl
fcomi
xor
adc
add
jle
repz
push
es
sub
xchg
aad
clc
xchg
int
out
push
rorb
xchg
sub
sub
mov
pop
xchg
xor
or
pop
mov
jle
or
ja
xchg
mov
data16
sub
xlat
mov
adc
xlat
popf
pop
mov
out
repz
je
push
cmp
pop
shll
test
mov
das
sbb
jge
or
pop
adc
dec
add
mov
les
inc
test
add
pop
mov
pop
fwait
inc
jo
jno
pop
dec
pop
pop
ss
push
pop
push
mov
xchg
push
lods
jns
sub
adc
aas
push
insb
sbbl
mov
add
push
fdivs
xchg
lss
inc
bound
mov
loop
imul
mov
push
sub
sarl
arpl
add
and
in
cmpsb
outsb
xchg
dec
addr16
ss
sub
mov
xor
and
push
add
ficomps
iret
jp
cs
mov
imul
repnz
shl
inc
stos
jmp
dec
add
inc
bound
lret
sti
push
push
cld
scas
jo
inc
fdivrs
dec
in
inc
in
jp
mov
mov
lahf
xchg
in
stc
hlt
mov
mov
clc
fsubrl
cmc
fmuls
inc
test
loop
or
or
mov
or
mov
mov
sbb
scas
pop
ret
mov
ret
adc
cmp
xor
mov
jmp
int3
mov
push
xor
inc
sub
stc
dec
js
hlt
leave
sub
sub
jmp
in
stos
add
insl
push
adc
push
xor
mov
std
fistpll
mov
testb
ret
add
dec
cld
cwtl
aam
addr16
rcrb
in
xchg
cld
or
adc
cmp
clc
popa
fisubl
dec
lock
loope
rorl
or
adc
xchg
cmpsl
jg
popa
movsb
cwtl
sbb
fcmovu
pusha
lret
lods
sti
xchg
pushf
mov
lock
ja
or
jg
repnz
sti
les
dec
adc
jl
jae
mov
dec
sub
push
cmpl
stos
fcomp
sub
cmp
or
icebp
jp
lods
pop
mov
rcll
test
into
mov
jae
repz
mov
aam
test
sub
sar
cltd
dec
imul
andb
pop
push
cli
call
test
sbb
loop
lea
lcall
ficoms
lds
jecxz
test
xchg
xchg
ror
add
dec
jg
movsb
add
imul
mov
aad
fs
fdiv
jp
std
leave
lret
pop
mov
push
cs
sub
pop
paddw
js
test
mov
and
xchg
xchg
push
aam
mov
or
idivl
sbb
insl
mov
into
aad
pop
adc
pop
push
push
rdtsc
lcall
hlt
ficoms
outsb
cmp
in
js
cwtl
ss
pop
loope
lds
sub
xorl
jns
jecxz
bound
out
fcomi
sbb
add
sti
fldt
aad
pop
jne
jne
outsb
adc
push
leave
xlat
es
xorb
xor
popa
push
lods
mov
xor
pop
aas
mov
jp
int
jp
and
repz
call
pop
mov
inc
push
out
test
rorb
xchg
sub
pop
push
inc
xchg
xor
jmp
out
mov
cli
push
fdivrl
cmc
jmp
ret
or
loope
adc
mov
jl
jl
int3
jbe
jge
add
jmp
rorl
pop
test
mov
addl
in
les
pushf
daa
or
jle
cmp
add
jg
mov
test
in
stos
scas
ret
add
push
pop
lret
jmp
jnp
push
add
jmp
or
adc
or
cwtl
add
or
and
scas
shrl
fwait
push
sub
or
mov
into
and
or
or
out
and
lret
mov
or
add
gs
dec
imul
mov
int3
test
xchg
mov
push
shll
subb
insb
rorb
pop
leave
ds
in
pop
jno
xchg
xchg
xchg
in
dec
pushf
add
outsb
imul
inc
xorl
scas
mov
fnstenv
leave
divl
lea
scas
xchg
rcr
shll
cmp
mov
xor
jge
and
push
jb
popa
sub
rcrb
inc
movsb
sahf
xor
subb
or
inc
sub
push
flds
pushf
xchg
mov
out
pop
ja
sbb
mov
cmp
out
pop
adc
cmp
pop
sub
pop
out
dec
mov
jecxz
add
cltd
dec
mov
jle
push
ja
push
enter
cmp
lds
pop
dec
mov
mov
out
pop
xor
xchg
sar
xlat
call
sub
xlat
arpl
mov
daa
ss
daa
xor
fwait
xchg
push
ret
jg
adcb
std
push
push
dec
xchg
xchg
andb
std
xor
nop
imulb
adc
aas
pop
mov
dec
iret
jno
lcall
mov
mov
mov
adc
jle
cltd
pop
mov
enter
data16
pop
les
or
inc
scas
pushf
mov
xlat
mov
shll
pmaxub
scas
sub
and
mov
lahf
and
leave
into
lods
outsb
pop
inc
psubsw
mov
mov
aas
loope
movsl
pop
sbb
mov
mov
into
mov
xchg
rclb
adc
mov
enter
jecxz
xchg
add
ret
xor
leavew
add
add
popa
mov
mov
idivl
add
fstps
jns
push
mov
xchg
cmp
mov
insb
out
test
mov
lods
sbb
fnstcw
xchg
xor
cmp
inc
push
jae
ljmp
icebp
loopne
adc
rolb
inc
push
xchg
pop
int
xlat
sbb
lods
xchg
or
and
icebp
fwait
bound
sub
push
adc
jp
push
imul
ror
popa
cmp
sbb
xor
or
xchg
mov
push
xlat
sub
inc
add
stc
icebp
push
scas
push
mov
insl
or
cmpsl
mov
push
xchg
rorb
inc
sub
adc
loope
dec
out
loop
jle
add
pushf
add
and
gs
jge
xor
addr16
clc
cvttps2pi
movsl
arpl
sbb
insl
adc
mov
in
scas
xchg
push
mov
fsubl
call
xchg
inc
dec
jb
xchg
push
mov
push
push
in
xchg
aaa
mov
leave
ror
jnp
std
ret
mov
sub
mov
pop
jg
push
pop
sti
push
fisubl
insb
push
filds
pop
stos
lahf
icebp
and
fistpl
sub
push
add
cli
pop
and
sbb
pop
xor
aaa
sub
mov
nop
or
sub
or
push
sub
mov
insl
adc
xchg
lods
imull
data16
aas
call
aam
scas
out
inc
fldl
add
lss
xlat
inc
fwait
xchg
and
mov
adc
add
lea
repnz
cmp
mov
cli
xor
jbe
dec
out
cltd
mov
int3
fcmovu
push
mov
pop
insb
popf
es
or
cmp
push
sub
xor
fcmovbe
mov
mov
das
jnp
inc
xchg
cmp
gs
push
pop
push
cmp
shll
mov
fs
aas
sub
adc
pop
in
fsubl
xchg
cmp
rcr
mul
ljmp
push
lds
cmc
in
out
adc
pop
mov
pop
outsb
sarl
stos
jmp
lahf
sbb
repz
shr
and
lret
rorl
xchg
xchg
les
push
inc
xor
rorl
lahf
in
movsl
adcb
sbb
and
lret
push
and
dec
enter
pushf
push
pop
scas
mov
pop
mov
mov
loope
fwait
cmp
mov
add
sub
dec
inc
sub
jne
jno
aas
insl
in
add
xor
mov
das
movsl
cmp
ret
lret
loope
mov
sbbl
or
fwait
and
cmp
lahf
pushf
flds
sbb
push
inc
jne
fcomps
jb
lcall
outsb
and
pop
cs
enter
outsb
loopne
pop
ficomps
or
cwtl
cmp
jae
addr16
sub
pop
dec
cli
mov
ljmp
cld
sbb
aad
pop
pop
fsubr
cmp
xlat
loope
divb
imul
loope
fldlg2
fnsave
repz
outsb
add
pop
test
inc
dec
or
out
jg
cli
lret
arpl
inc
xor
xchg
int
adc
pop
popf
insb
and
bound
pop
lret
pop
repz
cltd
leave
test
rorb
outsb
sarl
cmc
mov
lret
sub
nop
cmp
jnp,pn
mov
les
fildl
jb
icebp
fcoml
lods
lock
jecxz
dec
test
mov
in
mov
jo
popa
int3
hlt
test
pop
dec
out
sbb
js
ja
inc
push
pop
xchg
pop
cmp
pop
inc
lahf
xlat
ja
stos
dec
bound
dec
add
jne,pn
pushf
imul
add
push
adc
add
sbb
mov
xor
and
mov
insb
into
jne
mov
mov
dec
aam
xchg
mov
jo
cmp
lock
data16
xchg
cmc
xor
mov
add
je
outsb
lret
nop
jne
jmp
dec
sub
lret
testl
jecxz
mov
sub
pop
pop
sub
cvtpi2ps
lcall
outsl
mov
xchg
jecxz
add
mov
nop
dec
sti
enter
out
enter
fwait
mov
sbb
fbstp
dec
cmp
lret
loope
xlat
pushf
daa
dec
inc
xor
push
mov
push
jns
decl
lds
push
imul
sarl
dec
inc
xchg
adc
pop
push
fs
lods
sbb
and
sub
bound
fcmovu
mov
iret
xor
insb
mov
scas
push
inc
icebp
sbb
or
mov
lock
sub
vmwrite
adc
add
fisubrs
sub
push
rcr
jbe
xchg
bound
pop
sub
rol
in
stos
add
int
fadd
ds
ret
inc
into
jge
popf
aaa
mov
adc
mov
jb
jg
mov
adc
out
das
pop
jmp
orb
lret
inc
xchg
mov
lcall
dec
rcl
pop
fdivrs
arpl
aam
adc
in
or
popa
pop
imul
cmpsb
enter
ljmp
or
test
or
filds
sbb
loope
sbb
mov
jb
std
mov
in
pop
dec
ja
xor
stos
mov
fwait
pop
xchg
pop
loopne
or
or
les
push
pop
test
pop
adcb
es
push
iret
lods
push
movsl
pop
dec
mov
lods
aam
jno
inc
movl
mov
dec
mov
xchg
dec
ljmp
sbb
fstpl
push
mov
mov
and
sti
cmp
pusha
ret
mov
jp
xchg
mov
fcoml
outsl
xchg
test
push
std
jmp
test
mov
and
loop
cmp
cld
jb
push
jae
xor
or
leave
stos
in
outsl
movsb
jmp
xor
fstl
jl
out
mov
adc
push
jns
int
inc
fs
icebp
xchg
push
jmp
int3
rcrl
jecxz
adc
les
xor
and
add
outsl
push
jbe
fnsave
push
mov
push
xchg
mov
dec
cs
jl
push
mov
pushf
xchg
mov
cmpsb
cmp
repnz
xchg
and
mov
adc
dec
jns
ret
or
in
pusha
push
ljmp
or
adc
mov
lahf
call
mov
mov
xor
sub
push
sub
into
popf
mov
xchg
push
popl
stos
out
dec
sti
inc
ds
popf
fnstsw
jns
xchg
aad
rol
in
add
xchg
std
and
jbe
lret
lret
mov
rorb
mov
ljmp
cmp
xchg
pop
sbb
rcr
pop
ljmp
inc
dec
xchg
pop
sbb
pusha
js
test
and
stc
cwtl
mov
aam
xchg
movsb
cli
insb
xor
inc
out
movsb
leave
arpl
push
cmp
loopne
imul
xchg
jmp
jns
add
mov
sub
or
ret
popa
inc
push
lock
pop
inc
les
test
lds
sub
lret
rcrb
xchg
imul
pop
lods
mov
pop
cwtl
xchg
cwtl
push
mov
enter
mov
mov
enter
jecxz
in
shlb
and
pusha
cmp
fisubrl
pusha
sub
aaa
mov
int
xor
adc
loopne
push
sub
outsb
jmp
sub
pop
inc
pop
mov
mov
dec
filds
mov
shr
das
aaa
aas
imul
leave
and
mov
in
dec
into
mov
std
lret
rcrl
inc
imul
xor
enter
mov
insb
mov
adc
mov
sbb
or
mov
ds
add
xchg
addb
and
mov
jmp
mov
insb
outsl
test
mov
mov
add
pop
mov
sbbb
aaa
pop
cmp
ffree
sub
ficompl
cmp
mov
int3
jns,pn
loope
sub
cwtl
test
mov
xchg
sbb
ljmp
ss
fxch
orb
pop
push
gs
pop
or
fnstcw
cmp
ljmp
ret
push
data16
out
pop
stos
jl
pushf
fildl
cmc
pop
inc
sbb
sbb
mov
lds
push
jmp
mov
sub
out
ja
out
mov
adc
dec
sub
pop
pop
inc
aad
mov
cmc
je
jne
and
and
add
mov
popf
incl
loop
adc
push
or
test
jne
bound
call
inc
push
xchg
jo
das
cmp
sub
repz
adc
fldenv
jle
arpl
je
lret
add
mov
stc
movsl
cwtl
shll
fidivl
push
xor
push
add
pusha
loop
icebp
aas
xchg
push
into
int3
fadds
mov
jge
movsl
push
cmp
aad
jg
jae
xchg
jle
mov
xor
pop
or
shrl
jne
rolb
ljmp
or
push
inc
add
daa
jnp
fnstenv
lret
sub
mov
push
pushf
adc
and
enter
pop
jge
jne
dec
out
cmc
push
gs
stos
sbb
enter
mov
mov
lock
mov
pop
lock
mov
mov
das
jmp
push
jge
inc
and
gs
lea
rcrb
pop
pop
aad
add
sub
mov
movsb
aad
pop
sbb
cmp
xchg
scas
sbb
je
movsb
push
movsl
inc
out
mov
xchg
test
int3
nop
push
aam
insb
outsl
lret
cmpsl
xchg
sbb
mov
ds
sbb
fwait
sbb
mov
aad
and
adc
push
pusha
test
or
dec
shrb
data16
mov
imul
add
ret
dec
lods
call
cld
inc
xchg
and
dec
push
dec
or
mov
xchg
movsl
sub
sbb
cmp
and
cltd
pop
push
mov
xor
cld
call
ja
mov
mov
data16
popf
xor
mov
movsl
and
add
cmp
sbb
jne
push
pop
and
es
mov
cmpl
or
mov
jp
fsubrs
xchg
sahf
mov
repnz
dec
push
push
mov
adc
fsts
jmp
test
push
xchg
push
scas
int3
decb
dec
or
psubq
sbb
subl
cmpsb
push
and
or
lock
insl
test
fnstcw
repnz
sub
lahf
cli
mov
insl
push
test
ja
cmpsb
adc
lahf
jl
push
imulb
adc
jae
pusha
shlb
je
loope
adc
inc
fstl
test
mov
cmpsb
les
ret
inc
adc
sahf
ficoms
jge
stos
xor
outsl
dec
xchg
mov
mov
xchg
mov
rcrb
int
testb
ret
sti
xchg
dec
test
pop
cmp
cmp
rcrl
mov
mov
jmp
jae
cmp
inc
cltd
int3
mov
jecxz
popf
cmc
xlat
test
pop
mov
lahf
sbb
in
push
or
leave
es
or
int
mov
jno
ret
aaa
and
xor
mov
mov
adc
sahf
bound
jne
scas
ret
dec
decb
dec
pmaxsw
fsubr
adc
pop
xchg
jle
aam
cmp
je
or
mov
cmp
repnz
test
shll
mov
jl
les
orl
mov
and
dec
sbb
lock
jno
out
mov
fdivrs
into
ja
movsb
in
repz
cmp
stos
jne
je
ss
sarb
das
xor
xor
adc
daa
andl
cmpsl
and
lahf
dec
push
lods
or
push
scas
inc
or
xor
adcb
and
add
pop
cs
and
data16
lcall
push
jmp
mov
xchg
mov
sub
xchg
cmp
sbb
mov
xor
xlat
mov
inc
aad
pop
and
and
clc
mov
adc
inc
js
call
cmc
jle
mov
jmp
enter
insl
lds
outsb
dec
cs
sbbb
sbb
repz
push
xor
xor
jnp
xchg
adc
xchg
xchg
dec
xlat
fisubl
popl
int3
lds
mov
xchg
mov
int3
test
xchg
pop
sbb
and
fidivs
add
sub
shll
aaa
clc
push
addb
mov
imul
out
and
sub
inc
sarb
dec
bound
inc
dec
gs
or
mov
push
test
stos
sub
loope
inc
aad
add
in
push
pminub
lods
inc
sti
add
sbb
push
push
pop
add
jae
stos
mov
cmp
in
cmpsl
in
andl
lods
adc
aaa
and
sbb
cmp
xor
in
enter
repnz
fldenv
pop
mov
nop
mov
fcmovb
insl
cmp
popa
jmp
insb
movsb
repz
mov
and
pop
test
fisttps
filds
and
mov
mov
les
cmp
mov
in
mov
rclb
inc
push
pop
inc
flds
and
in
movq
decb
lret
xchg
imul
jecxz
out
mov
lods
rcr
xchg
mov
pop
rcll
and
daa
pop
adc
or
fcoml
lret
mov
push
ljmp
aas
sub
int
push
xchg
ds
insl
xor
cmp
adc
out
test
frstor
add
push
xor
rclb
cmp
mov
cwtl
in
popf
pop
cmp
and
pop
loopne
mov
dec
xor
jbe
jae
lock
out
cmpsb
add
iret
jg
dec
sub
rcrl
mov
dec
icebp
repz
les
xlat
xor
push
insb
vmovntpd
scas
mov
xor
mov
pop
cs
mov
fcoms
add
mov
popf
test
arpl
inc
dec
test
shrb
add
adc
adc
imul
xchg
hlt
loopne
rcl
jmp
adc
daa
pop
inc
out
icebp
fsubl
mov
popa
call
fisttpl
pop
inc
les
inc
repz
call
sbb
out
adc
int
pop
lods
stos
mov
clc
pop
std
add
push
xor
out
xchg
pusha
cmc
sbb
push
mov
std
mov
mov
loop
add
jl
xor
mov
sbb
enter
rorb
jnp
push
and
in
lds
and
jle
xchg
jle
push
mov
cli
add
xor
in
inc
cmp
pushf
dec
cld
mov
cmpsl
mov
scas
aas
push
pop
push
push
cs
inc
in
mov
insl
je
int3
jb
adc
xchg
push
popa
cmc
push
lret
loopne
aam
inc
cmc
push
xchg
mov
stc
inc
add
mov
rolb
push
pusha
ffree
popa
push
xor
xlat
lods
lret
imul
xchg
lods
cs
pop
xchg
xchg
mov
jb
ljmp
clc
in
insb
hlt
adc
mov
int
xchg
lods
xchg
ss
roll
dec
addb
add
lcall
scas
lcall
fwait
jne
pop
xchg
sub
gs
lock
push
xorl
xchg
lahf
mov
cmpsb
xchg
xor
xor
lea
fwait
dec
mov
push
inc
xchg
int
pushf
xchg
into
out
loop
ja
test
stc
pusha
mov
xor
xor
jae
sti
and
lret
dec
dec
sub
lds
cmpsl
cmp
out
out
jp
adc
fisttpll
stos
xor
cmp
dec
and
jp
xor
cld
popa
fwait
pop
lret
je
mov
repnz
popa
cmpb
xchg
jge
pop
int
adc
outsl
inc
sub
xor
and
lods
mov
inc
hlt
lret
cmc
cltd
jmp
sbbb
jle
cmpsb
ret
in
sahf
icebp
push
mov
mov
jb
popa
cmp
pushf
shrl
call
ret
ds
stos
mov
mov
pushf
in
add
adc
pop
adc
jns
sbb
pop
cmp
in
das
and
movsl
test
je
xor
fldln2
hlt
mov
sar
shlb
pop
jnp
push
push
or
xor
inc
pop
hlt
dec
aad
add
xchg
mov
mov
rolb
outsb
dec
repnz
aam
jle
mov
fcmovb
cltd
fmuls
jp
and
sti
push
arpl
rolb
adc
mov
fldl2t
aad
outsb
xor
rolb
insb
sub
or
mov
ss
mov
out
cmc
loope
mov
adcb
push
mov
push
push
mov
aaa
mov
sbb
and
cltd
sub
xor
stc
test
out
je
jp
xor
ret
ja
xchg
inc
mov
mov
cli
aaa
loopne
cs
push
pop
mov
out
dec
add
repnz
fs
xor
cmp
jge
sub
pop
adcb
sbb
mov
sti
xlat
int3
imul
mov
xor
adc
cmpl
cltd
out
push
ficoms
cmpsl
dec
jne
imul
sub
aam
mov
addl
shr
int3
adc
imul
enter
shlb
mov
dec
enter
jno
mov
pop
pop
dec
jmp
sbb
mov
sub
shll
cmpsl
lds
xchg
fs
out
and
test
fisttpl
xlat
inc
ja
fistpl
stos
and
iret
scas
xchg
or
mov
rol
add
cmp
xchg
and
sbbl
jmp
adc
jp
ret
cmp
push
push
mov
xchg
sub
jmp
and
in
incb
mov
mov
ljmp
icebp
xchg
imul
mov
in
leave
push
push
jge
sub
aam
jnp
or
xchg
sub
ret
aaa
sbb
cmp
shrb
call
xchg
sub
mov
xchg
stos
pop
pop
test
lods
jb
movsl
insb
lods
mov
push
dec
inc
sub
and
sub
adc
jmp
jecxz
dec
mov
inc
ficoms
pop
sahf
sarb
mov
sub
dec
repnz
in
aad
test
cmp
ds
sbb
pop
pop
xor
mov
mov
xchg
mov
jnp
scas
fbstp
xor
cmp
jne,pn
push
adc
stos
out
gs
sub
aam
in
test
jns
jge
inc
mov
dec
dec
mov
jbe
add
outsb
sbb
pusha
cmp
ljmp
mov
or
adc
pop
sub
xchg
jecxz
pop
sub
push
push
jge
adc
adc
int3
mov
xchg
je
cld
clc
mov
aad
pop
fdivs
sbb
mov
mov
fdivrl
rorl
enter
mov
sub
fdivrl
add
or
or
test
or
lcall
push
mov
cli
sbb
daa
jno
push
in
icebp
outsb
test
outsb
jp
xchg
xor
sbb
dec
mov
fdivr
push
adc
and
stos
scas
ja
inc
mov
or
jecxz
in
sahf
cltd
inc
mov
fyl2xp1
sbb
mov
cmp
pop
adc
ja
xchg
adc
dec
cmpsl
dec
movsl
jmp
sub
xchg
or
and
xor
jl
movl
ljmp
sbb
loope
stos
xchg
sar
add
dec
ret
es
fimuls
pop
out
jno
lock
jb
mov
push
xchg
cmc
int3
xor
jmp
pop
push
sub
dec
stos
cmp
xchg
adc
loope
call
ja
lahf
xchg
outsb
daa
and
lods
test
and
xor
js
xor
les
lds
push
loope
push
idiv
mov
pop
jle
decb
cmc
xor
cltd
push
adc
mov
push
jecxz
leave
cmpsb
aas
movsl
add
mov
inc
fnstsw
mov
repnz
dec
lret
adc
cmovns
xchg
sti
subl
pop
fnstenv
jno
cmp
mov
push
insb
xchg
sub
dec
mov
paddusb
out
hlt
adcl
pop
fnstsw
rorl
cmp
push
or
jo
loopne
shrb
mov
addr16
popf
jno
mov
jge
scas
popa
fisubrs
jg
pop
imul
sbb
push
daa
push
in
xchg
pop
in
push
xorl
cmp
or
adc
gs
inc
adc
mov
test
mov
and
jnp
pop
mov
out
lock
add
ja
mov
xchg
insb
sbb
sub
les
div
xor
xor
add
mov
scas
lret
sub
push
les
adc
inc
inc
xchg
mov
xlat
push
xor
cltd
mov
mov
aas
sub
icebp
xchg
test
pop
out
push
cli
test
lds
mov
dec
sbb
xchg
rorb
mov
or
jecxz
out
pop
test
xor
ja
or
ljmp
mov
arpl
cs
outsl
cmp
mov
mov
aaa
arpl
fmuls
sarb
sbb
ss
pop
daa
fdivl
sbb
lds
loop
push
imul
jmp
mov
iret
pop
aas
fdivrs
hlt
cmpsl
lds
loope
inc
lock
sbb
mov
in
jg
out
addr16
cmp
cmp
xor
ljmp
cmc
xor
shrl
aam
dec
jno
enter
mov
addr16
pushl
enter
or
fnstcw
cmpsb
sbb
mov
icebp
mov
sub
inc
sbb
jl
push
pop
lock
jl
adc
or
enter
mov
fisttps
sbb
mov
les
loopne
push
xchg
jmp
shll
push
stos
out
fdiv
pusha
mov
sub
xchg
dec
dec
dec
inc
xor
cmp
xor
xchg
cmp
xchg
popa
jbe
sahf
outsl
add
fdivrp
pop
push
icebp
in
pop
push
mov
sbb
pop
stos
or
into
inc
add
scas
cld
xchg
xor
flds
jns
and
popf
cmp
popa
in
pop
xor
dec
lret
arpl
int3
mov
push
faddl
push
push
outsb
in
stc
shll
sub
fwait
shl
pop
adc
scas
adc
into
sahf
stos
js
jo
mov
ficoml
jl
lahf
je
mov
cmpsl
lret
mov
cmp
ljmp
xchg
pop
into
popa
mov
lcall
mov
fwait
js
stos
push
cli
mov
js
test
mov
add
inc
jb
xlat
jmp
jo
mov
mov
cmp
ss
adc
gs
lret
stos
das
test
sbb
pop
dec
push
inc
xchg
push
ss
xchg
mov
outsl
cmp
imul
test
repz
js
ss
pop
xor
cmpsb
lret
fsubp
or
lea
invd
cli
or
pop
lock
mov
pop
loop
jno
in
cld
fldt
lea
or
test
sbb
shll
pop
cmp
dec
jecxz
in
insl
mov
in
inc
or
fldcw
cld
inc
jae
lret
dec
dec
cmpsl
xor
push
sahf
adc
scas
loop
sub
rolb
fsts
insb
dec
inc
stc
push
xorb
ja
xorb
jb
cmpsl
push
loop
and
jge
jnp
imul
sbb
out
adc
adc
xchg
jmp
mov
out
jg
ret
mov
fsubrs
jl
les
xchg
dec
in
rorl
jbe
lock
out
sub
mov
cmp
flds
or
inc
jle
outsb
repnz
hlt
imul
in
jg
loop
dec
repz
cmp
loop
adc
xchg
lcall
sub
push
fwait
inc
out
arpl
daa
movsl
mov
fldcw
mov
aaa
mov
sub
xor
shrb
test
mov
cli
shl
push
addr16
fisttps
add
sub
mov
sub
mov
mov
pop
mov
into
pushl
or
std
pop
cmpl
aam
mov
dec
stos
adc
popf
xlat
aam
shrl
repnz
mov
sub
cwtl
sbb
fnstsw
push
jo
enter
aas
jp
xor
nop
cmc
and
xchg
xor
ss
or
mov
addr16
mov
add
sub
mov
pop
mov
movsb
add
cwtl
into
mov
lods
in
mov
imul
mov
outsb
lds
cmp
ss
xor
lahf
js
aad
xlat
fistpll
mov
pop
call
adc
push
ret
or
mov
lods
adc
mov
bound
ss
scas
imul
jne
fldt
cmpsl
lcall
imul
add
fmuls
icebp
jnp
fidivs
aam
and
push
call
lahf
adc
push
xchg
and
jge
pop
jmp
test
cmp
mov
test
cmp
out
or
icebp
das
daa
xor
xor
cmp
out
test
lahf
stos
rcll
movsl
sti
in
gs
daa
or
out
fiaddl
adc
jmp
in
test
fwait
sbb
das
xor
enter
xchg
rcl
das
mov
push
xchg
xor
mov
popf
cld
and
add
out
push
mov
ds
clc
pushf
or
iret
in
lcall
jnp
mov
pop
and
mov
fiadds
int
test
in
push
test
mov
aas
sbb
add
mov
adc
pop
sub
mov
pop
jl
pop
stc
cmp
push
sbb
ja
lahf
sub
insb
jns
pushf
jne
cmp
push
mov
and
add
pusha
enter
inc
dec
jno
lods
sarl
addr16
and
outsl
pop
sahf
push
and
cmp
in
shrl
inc
shl
pop
add
adc
lea
out
lret
test
dec
inc
xor
out
pop
pop
scas
sub
outsl
popa
and
lcall
leave
movsb
mov
stc
cltd
xchg
in
jp
cli
cmp
and
repz
jl
adc
std
addr16
lret
adc
in
cmp
stos
aaa
xor
in
out
jg
fwait
pop
inc
lods
or
in
aas
xlat
sub
cmp
sti
ret
adc
popa
inc
cmp
fisttpll
lret
fldenv
jnp
leave
je
aaa
lretw
or
fcompl
orb
mov
leave
jmp
jae
jne
into
ss
jg
add
loope
bound
stos
mov
es
push
add
je
cmpl
mov
push
sbb
cld
popa
dec
jns
mov
dec
test
xor
cmp
dec
mov
sub
daa
out
movsl
mov
mov
stos
mov
out
xchg
daa
jb
scas
jae
adc
and
jmp
and
cmp
sub
ja
shlb
subl
jnp
xor
lds
inc
rol
pop
xchg
xchg
sti
lods
pop
movsl
push
mov
add
mov
cmpsl
push
fdivrs
aad
std
test
fsub
pop
xor
test
lahf
int
fs
mov
in
aam
fsubs
mov
cwtl
xchg
repnz
jp
mov
loope
rcll
stos
rcl
pop
cmp
dec
sbb
mov
push
imul
call
btc
dec
push
or
int
mov
cmp
dec
popa
dec
and
xchg
aam
mul
jg
jae
mov
xor
cmp
sub
iret
lea
xchg
mov
stc
add
sbb
mov
push
jp
cmp
add
xchg
sbb
or
lods
push
sub
and
imul
xor
ljmp
int3
lret
sub
push
sub
cmpsb
mov
adc
mov
sbb
loopne
jnp
push
sbb
cli
sti
out
imul
adc
movsb
out
int
or
jnp
dec
pushf
aad
in
jns
mov
push
mov
xchg
iret
sub
mov
xlat
mov
stos
mov
mov
inc
int3
into
scas
xor
repz
pop
add
cmpsl
repz
mov
dec
das
mov
or
dec
push
test
in
lret
sub
mov
jb
inc
adc
test
xor
cmp
pop
fwait
mov
jmp
rclb
xchg
into
mov
inc
cli
push
gs
xchg
sarb
jl
lods
ss
xchg
call
or
cmc
outsb
jae
mov
push
xor
fdivrp
mov
lds
jae
cwtl
pop
sbb
inc
xor
mov
push
sub
icebp
sbb
sbbl
pop
imull
repnz
shl
stos
and
lret
aas
mov
icebp
dec
mov
jl
out
pop
mov
aaa
test
repnz
into
cmovnp
shlb
dec
or
mov
xchg
adc
je
sahf
cs
clc
cld
or
xchg
adc
lods
push
push
and
push
add
loopne
mov
icebp
ficoml
or
xor
iret
pop
dec
aaa
sti
cmpsl
dec
pop
and
xchg
or
pop
in
flds
mov
loop
mov
lcall
das
fistpl
inc
push
into
xchg
pop
ficoms
or
fisttpll
add
loope
add
dec
adc
dec
sub
jbe
and
sub
loop
or
js
or
pop
aam
clc
adc
pop
jb
jno
sbb
pop
push
ret
fistl
sbb
xchg
icebp
pop
movsl
jmp
xchg
ljmp
xor
jb
std
push
rcll
lret
in
adc
pop
adc
push
fwait
push
pop
and
pop
lret
cmp
sbb
and
pop
xor
push
add
mov
out
xchg
sbb
fisttpl
sbb
jmp
into
inc
lahf
inc
cmp
push
decl
push
adc
add
fcmovnbe
aas
mov
std
sbb
adc
and
lcall
xchg
jecxz
mov
sub
cld
sti
inc
gs
xchg
fs
repnz
push
imul
ret
push
in
mov
inc
jae
imul
fwait
lahf
outsb
psubb
bound
inc
xor
imul
sbb
cmc
lret
repnz
xor
divb
add
or
std
popf
out
loop
and
cmp
gs
mov
pushf
pop
sub
jl
dec
testb
add
call
sub
or
adc
pop
mov
repnz
mov
add
jno
subl
mov
push
push
sub
test
bound
setg
push
mov
loope
test
js
clc
mov
pop
cmpsb
repz
test
cmp
or
xchg
push
roll
es
lock
inc
cmpsl
pop
adc
loopne
incb
call
jno
pop
loopne
jmp
stos
xchg
call
fwait
lahf
xchg
out
mov
xchg
xchg
addl
dec
lcall
adcb
pusha
inc
mov
pop
xchg
mov
jecxz,pt
stos
push
pop
xchg
shrl
mov
repz
mov
push
int3
fmull
mov
es
scas
jle
mov
cmp
or
mov
enter
pop
xchg
xchg
out
xor
inc
lcall
ja
jno
or
adc
mov
imul
add
mov
adc
sbb
mov
mov
icebp
jae
lea
mov
divb
mov
dec
pop
inc
dec
movsb
movsb
fstpt
loopne
repnz
cs
loope
jne
inc
aaa
mov
fsubs
push
push
stos
subb
dec
call
ss
pop
dec
push
lret
mov
movsl
lret
add
je
ret
out
mov
dec
cmpsl
mov
sbb
jl
lret
pop
lahf
in
fcmovnbe
sti
mov
xor
icebp
ja
mov
or
sti
sbb
repnz
insl
or
adc
test
mov
lret
add
lret
lds
insb
push
test
push
lods
mov
dec
in
cmpsb
test
cmp
cmp
push
mov
xor
pop
jecxz
andb
xchg
or
flds
das
hlt
lahf
sbb
les
mov
out
xchg
test
mov
jle
js
outsb
push
stos
imul
dec
stos
ss
nop
imul
sub
pop
xlat
xor
loopne
popa
imul
and
lods
and
aaa
sbb
mov
jp
fistl
clc
sti
popa
xchg
out
in
lcall
adc
lret
add
aad
scas
mov
sub
aad
mov
or
sbb
sub
sahf
sbb
int
ret
mov
sti
aaa
movsl
jno
add
faddl
push
dec
inc
dec
into
sbb
pop
movsb
mov
imul
mov
or
adc
xchg
daa
shrb
mov
push
shr
stc
mov
pop
jl
sti
stos
mov
mov
lea
xor
outsl
and
mov
inc
push
add
test
mov
or
inc
scas
sti
jg
ds
insl
or
xchg
cltd
inc
insl
mov
xchg
negl
sbbl
les
add
mov
jbe
xor
dec
sub
cmp
aas
xor
mov
mov
loope
bound
cwtl
xlat
pop
dec
adc
or
fidivl
fld1
lock
jbe
xor
inc
int3
sub
adc
jp
and
jmp
push
pop
dec
mov
mov
cmp
test
jbe
add
cs
xorb
mov
outsb
sbbl
out
mov
loopne
and
jbe
jns
dec
shlb
mov
jb
xor
sub
xor
cwtl
lahf
mov
sbb
imul
pusha
fidivrs
push
daa
push
movsb
rcr
icebp
les
jmp
shrb
dec
addb
cmpsb
jb
jae
inc
sbb
nop
and
inc
jns
sar
loopne
in
mov
add
adc
push
push
sub
sti
fldl
mov
or
hlt
add
movsb
inc
adc
cltd
pop
jmp
xchg
cmc
adc
jle
insb
test
pop
xchg
mov
sahf
fisttpl
xchg
sbb
pop
je
inc
aad
jnp
adc
add
jo
out
or
cmp
fisubrs
movl
outsb
xor
subb
iret
stos
jmp
jne
rcrb
jns
adc
sbb
gs
das
pop
test
sub
adc
aas
mov
mov
cmp
sbb
mov
push
shrl
sbb
cld
out
cld
out
lds
add
lcall
dec
mov
push
imul
nop
jno
pop
and
lds
dec
fdivrp
sub
cmpsb
mov
mov
cmpsl
sbb
xchg
gs
mov
inc
jge
dec
std
xor
repnz
nop
adc
rorb
clc
pop
lock
mov
push
hlt
rcrl
popa
push
lods
sub
jmp
sbb
fadds
jmp
add
in
sub
ret
push
mov
fnstenv
nop
push
loop
into
and
jns
stc
mov
mov
mov
push
aaa
push
daa
clc
adc
arpl
pushf
ret
xchg
pop
cmpsb
cmovs
or
adc
mov
cmp
mov
shl
in
sbb
jbe
jnp
cmp
adc
leave
std
fs
xchg
lock
mov
lret
jp
loop
or
push
jno
mov
push
pop
fwait
outsb
xchg
sub
nop
dec
cmp
lret
test
inc
es
loopne
cwtl
out
adc
mov
xchg
pop
dec
mov
lahf
xchg
test
xlat
imul
pop
pop
call
and
ljmp
pop
mov
andl
mov
sub
pusha
mov
xor
loop
leavew
fadds
gs
loope
add
movsl
les
fbstp
aas
or
lds
or
inc
dec
test
mov
xor
cmp
add
jae
or
mov
push
inc
rcrl
jbe
or
cli
jmp
leave
pushf
inc
push
sub
push
mov
adc
or
mov
cld
dec
sti
rcll
xchg
imul
inc
or
out
por
adc
fcmovu
push
push
inc
pop
ret
sub
mov
jmp
add
scas
mov
aad
dec
shlb
add
push
ljmp
push
push
pop
shlb
aam
and
je
popa
orb
fwait
cld
gs
cmp
mov
or
mov
dec
xlat
popf
in
sub
jb
cli
cli
mov
lods
cmp
xor
jns
inc
cmp
sti
sub
hlt
adc
xchg
or
xchg
jle
insl
mov
adc
movsb
jae
lret
inc
xchg
nop
xchg
or
leave
xlat
xor
testb
mov
ret
das
mov
dec
mov
or
das
mov
mov
and
icebp
cld
xlat
ds
mov
mov
lret
mov
mov
jge
or
mov
loope
lds
loope
daa
mov
add
pop
pop
mov
and
pop
jnp
gs
sub
pop
popf
mov
mov
or
jmp
push
pop
inc
cmpsb
lret
pop
jmp
cmp
adc
mov
aas
mov
jecxz
les
xor
xchg
aaa
mov
test
pop
and
mov
jb
scas
mov
cmc
mov
jo
lds
push
add
jns
popf
sar
into
cwtl
pop
sbb
xchg
aad
stos
imul
lahf
arpl
and
scas
popf
in
cwtl
and
xchg
sbb
dec
sub
mov
in
sub
inc
rol
data16
addr16
add
aam
icebp
sahf
mov
les
jae
pop
loope
xlat
loope
xchg
arpl
dec
add
jle
mov
mov
or
js
cld
sub
push
mov
iret
pop
ficomps
incb
enter
dec
lock
mov
push
mov
notb
cmp
in
imul
adc
pop
sahf
mov
in
jl
inc
int3
dec
dec
mov
repz
and
lods
sbb
cwtl
ror
mov
popf
lahf
sahf
repnz
cmpsb
lock
pop
fbstp
jno
sbb
pop
js
data16
mov
dec
ret
sbb
mov
add
ss
mov
xchg
js
jecxz
orb
ret
aas
mov
loopne
fs
dec
cmp
push
es
out
sub
addr16
sti
insb
push
mov
xchg
pop
stos
in
call
mov
xor
and
sti
jle
pop
nop
mov
fdivl
jb
jmp
push
mov
test
out
jne
jmp
fidivs
jge
sbb
idivl
xchg
clc
jns
pusha
mov
fcomps
or
sub
add
dec
sti
dec
jne
testl
std
into
cwtl
bound
aam
imul
outsb
mov
lods
add
mov
pop
hlt
cmp
jns
mov
fwait
out
push
push
xchg
mov
or
movsl
xchg
push
scas
lcall
sbb
repnz
pop
jo
pop
jl
and
cmpsl
or
pop
mov
leave
xchg
cmc
test
jg
rcl
mov
lods
lods
sub
pop
in
lcall
mov
mov
pusha
xor
in
cwtl
and
and
sbb
xor
lcall
pop
dec
mov
jecxz
cmp
dec
jnp
fadd
or
cmc
pusha
push
fidivl
mov
adc
pop
add
and
repz
add
std
loope
mov
mov
add
lods
add
xor
mov
jae
int
mov
push
mov
hlt
daa
test
mov
xor
cmp
je
cmpsl
int
les
mov
shlb
aad
loopne
sbb
imul
iret
mov
xor
xchg
insl
mov
xor
fs
pop
sbb
les
inc
lods
sub
in
subb
aad
data16
push
mov
mov
mov
popa
loopne
icebp
xchg
dec
aam
cmpsb
outsb
fsubl
cmp
outsl
stos
lock
insl
sbb
test
imul
add
sbb
pop
push
dec
repnz
inc
es
lahf
fidivrl
xchg
mov
inc
out
cwtl
xor
fisubrs
add
or
andb
aad
ss
pusha
iret
inc
pop
mov
pop
test
std
and
jo
movsb
insb
mov
dec
call
and
cmp
or
jg
push
mov
aaa
int3
mov
adc
lock
lahf
in
jecxz,pt
lods
enter
dec
je
iret
push
out
inc
cltd
push
adc
pushw
jg
pop
xor
push
dec
xchg
pop
xor
in
int
ja
and
daa
lret
movsb
dec
repnz
jl
mov
sbb
fidivrl
adc
lcall
imul
fldlg2
outsl
pop
popf
fwait
jae
sbb
repnz
movsb
mov
cmpsb
dec
adc
pop
or
jmp
call
mov
mov
imul
sahf
cli
movsl
mov
dec
dec
ficoml
mov
or
and
lret
jae
addr16
movsl
movsl
adc
outsl
scas
jp
lods
nop
cmpb
fldt
xor
popf
inc
jne
in
xlat
and
jl
std
xchg
push
cmpsb
insb
add
push
mov
popa
sbb
dec
xchg
repnz
add
or
and
enter
data16
mov
loopne
repnz
mov
jle
test
dec
mov
into
xchg
xchg
mov
push
repz
add
add
shll
pop
rorb
lret
jecxz
ret
ss
lahf
out
push
shl
pushf
dec
repnz
add
cmpsb
ret
cmp
not
dec
sahf
bound
mov
push
pusha
lock
fcoms
movb
fnstsw
add
xchg
mov
mov
lods
fs
fisubl
mov
push
fstl
adc
aaa
mov
rclb
out
loope
shrw
xchg
repnz
dec
pop
cs
sbb
jae
ficoml
ffree
adc
xlat
decl
or
es
mov
movsb
adc
pop
xchg
fimull
sub
sub
cmp
nop
xchg
and
cmp
adc
push
scas
pop
popa
dec
pop
inc
mov
inc
cmp
int3
shrb
add
mov
aas
mov
xchg
in
dec
cli
jmp
rolb
xchg
mov
popa
mov
xchg
cmpsl
lahf
shr
scas
adc
xlat
inc
mov
lret
in
imulb
fwait
push
mov
cld
mov
inc
or
and
mov
and
xchg
dec
add
adc
push
es
dec
sub
sbb
jmp
and
ljmp
lret
inc
pop
sub
xchg
jns
loopne
pop
fiaddl
test
pop
dec
add
iret
mov
or
and
mov
jno
add
in
or
cmp
jb
insb
cmp
mov
pushf
ss
pop
aaa
imul
js
jne
je
mov
xchg
xchg
pop
lret
daa
loopne
mov
lret
sahf
or
pmullw
es
and
and
cmp
cmpsl
sub
add
gs
out
xor
mov
xchg
pop
dec
jecxz
dec
pushf
mov
xor
or
popa
adc
push
outsb
out
jecxz
mov
ja
gs
aam
jbe
fistps
sub
ja
lcall
addr16
int
call
imul
int3
das
push
iret
popa
pop
fsubl
or
inc
adc
enter
lods
pushf
sbb
adc
negb
push
xor
mov
jno
sbb
adc
add
popa
jbe
mov
jns
sub
popl
dec
das
aaa
pop
mov
sub
ret
test
pop
popa
or
and
in
nop
jecxz
cwtl
out
or
jp
hlt
push
aad
outsl
loopne
inc
aam
push
sbb
sbb
sub
imul
outsb
mov
pop
lods
out
inc
jb
inc
xchg
inc
addr16
cld
mov
and
hlt
fmulp
push
data16
cmp
jmp
imul
scas
pop
dec
cmp
sbb
movsb
mov
shrb
icebp
xchg
test
and
mov
insl
jg
dec
test
push
lock
insb
or
inc
out
idivl
mov
dec
xchg
jge
adc
jbe
ljmp
mov
add
add
jne
je
xchg
inc
cmp
jmp
mov
inc
repnz
rol
fisttpll
xor
ss
jmp
fistpll
dec
in
stos
mov
add
push
xchg
sbb
decl
test
jp
in
ss
and
sbb
sub
xor
or
inc
insb
inc
xchg
sbb
call
mov
and
jmp
popf
xchg
jo
push
repnz
add
or
or
outsb
ret
add
out
or
jb
mov
pop
mov
ret
mov
push
lods
jno
xor
dec
push
push
sbb
jle
fstpt
into
push
aam
jns
add
jecxz
loop
dec
push
sbb
mov
cltd
sub
cmpl
push
mov
imul
test
cmp
dec
aas
out
cs
adc
cs
popa
mov
sbb
add
lods
fisubrs
sbb
insb
test
daa
or
lsl
cli
cmc
and
jp
je
or
repnz
rorb
icebp
mov
clc
xchg
lods
cmp
and
out
push
or
imul
dec
scas
or
mov
adc
mov
test
mov
dec
xor
push
sahf
repnz
jae
jmp
fistpl
ljmp
ljmp
mov
xcrypt-ctr
cmpsl
pop
ret
les
insb
xchg
sbb
insl
leave
dec
mov
jp
sub
cmp
xor
std
daa
xchg
mov
sahf
mov
adc
sub
leave
xchg
dec
inc
test
nop
add
adc
arpl
popa
xchg
shlb
mov
inc
push
xchg
outsl
sbb
adc
jp
or
push
sub
scas
cmpsb
jg
sahf
loope
js
lea
pop
jb
and
xchg
sub
idivl
pop
repz
aad
cs
call
insl
and
adc
scas
jl
push
jmp
fiaddl
push
mov
inc
ja
cmp
mov
sbb
daa
fdivrs
sbb
cmp
push
lds
sti
les
sahf
cmp
cwtl
mov
inc
mov
inc
test
int3
clc
mov
xor
push
push
ret
xchg
push
popa
data16
adc
and
pop
or
or
stc
pushw
xchg
xchg
out
incb
pop
add
lods
mov
jecxz
dec
fimull
imul
jae
aas
dec
jg
fists
clc
mov
xor
sbb
pop
jno
cmc
iret
fildl
xchg
pop
mov
sub
fisubs
mov
jle
add
insb
and
or
daa
cmp
bound
lea
xor
push
dec
cmp
dec
push
jmp
push
adc
lret
add
hlt
push
cmp
push
test
jmp
mov
lods
pop
sbb
outsl
pop
push
adc
iret
in
insb
lcall
addr16
sub
adc
shrb
out
cmpsl
pop
and
push
ret
mov
scas
dec
adc
jg
pop
stc
or
xchg
mov
mov
cmp
shll
adc
mov
mov
fnstenv
lods
int
mov
jl
sub
in
in
add
lahf
jbe
rorl
cs
sub
out
iret
add
jp
int3
jp
roll
enter
stc
addr16
lea
mov
adc
shrl
mov
int3
movsl
movsl
jl
repnz
pop
ds
xor
fldt
mov
mov
push
das
mov
xchg
pop
adc
xlat
mov
icebp
in
popl
push
mov
mov
and
lahf
push
test
push
and
cli
pusha
scas
jge
fs
xor
sub
mov
test
ja
or
xchg
jmp
pop
push
js
adc
test
xchg
dec
fnstenv
push
inc
pop
das
xchg
dec
pusha
add
sub
outsb
sbb
dec
pop
mov
dec
repz
cmp
nop
xor
aam
add
movb
sub
and
int
cmp
and
hlt
fdivs
cmp
dec
push
add
jbe
jge
jg
xchg
stos
hlt
jmp
xor
xchg
aam
and
mov
dec
aad
cmpsb
test
sahf
xor
mov
jmp
and
ret
dec
xor
dec
xchg
mov
and
inc
inc
bound
faddl
cld
roll
and
lret
mov
sahf
out
test
loope
cmp
sti
js
push
sub
sub
mov
fcmovnu
fwait
aas
cmp
pop
cld
cmp
addb
pop
in
xor
shlb
sbb
movsb
ja
enter
jmp
mov
pop
mov
aas
dec
out
push
mov
sbb
add
and
mov
insb
imul
stos
jne
mov
movsl
lret
inc
shll
add
xor
loopne
out
movsl
mov
hlt
add
dec
popf
jmp
add
mov
insb
xchg
das
jle
cmp
cmp
pop
pop
cmpsl
leave
inc
cmp
jle
into
out
ljmp
xchg
popa
outsb
daa
fistps
popf
hlt
mov
xchg
add
dec
mov
mov
lods
adc
mov
in
xchg
test
rcll
jns
jp
inc
mov
xor
lock
mov
mov
xor
mov
mov
xor
mov
adc
jnp
fdivrs
push
hlt
dec
xor
mov
insl
cmpsl
je
call
int3
adc
cmp
lret
jecxz
mov
jge
bound
mov
cmpsl
mov
stc
mov
push
cmp
mov
fnstenv
xor
mov
repnz
mov
add
in
popa
mull
incl
mov
adc
xlat
in
int3
push
ljmp
sbb
or
add
call
test
lock
pop
notl
dec
cmp
and
jnp
mov
std
addr16
sub
shrl
push
add
fwait
orl
jmp
jno
fs
int
cltd
test
aad
jnp
lods
push
or
cwtl
push
stc
lret
mov
pop
push
aaa
loop
out
xlat
jns
nop
das
jns
in
lahf
add
sarl
cmp
mov
mov
insb
ret
xlat
inc
dec
pushl
out
fsubrs
sub
mov
pop
push
or
xlat
loope
scas
aad
les
addr16
lret
mov
imul
pushf
cmp
xchg
enter
cs
mov
push
insb
es
cmp
dec
in
adc
or
cmpsb
lods
push
fistpll
cmp
or
inc
inc
lea
xchg
popa
pop
ja
cmp
cmp
andb
or
and
loopne
inc
enter
lcall
cld
popf
jb
dec
popa
jg
jecxz
push
scas
test
aaa
and
out
out
mov
xor
mov
mov
cmp
adc
pop
loope
lods
add
nop
cmp
ret
not
outsl
add
mov
fadd
iret
lds
sub
mov
push
imul
jp
inc
jp
pop
sub
ficomps
stc
pop
pop
and
mov
das
sbb
jns
call
mov
cs
dec
mov
jmp
pop
dec
xor
xor
out
jmp
fistpl
dec
mov
push
movsb
int
or
push
mov
lcall
mov
fstp
sbb
xchg
aam
adc
aas
push
jns
mov
sbb
xchg
mov
cwtl
notl
inc
ljmp
es
mov
inc
lds
enter
lahf
cmpsb
dec
adc
sbb
sub
xor
out
stos
out
cmp
add
push
movsl
lock
or
pavgw
addr16
xchg
add
insb
and
das
mov
aam
lea
jmp
or
clc
cli
dec
add
add
cltd
mov
xchg
push
cmp
mov
rcl
icebp
popa
jl
inc
mov
lods
cmpsb
out
pop
mov
add
mov
add
pop
aas
out
mov
in
jno
arpl
dec
rolb
adc
lods
fimuls
and
push
pop
and
fwait
je
dec
shlb
out
repnz
sti
out
and
mov
adc
adc
inc
cld
dec
push
push
inc
movl
pop
out
jg
leave
xor
mov
push
xchg
sbb
jle
lea
mov
loop
sbb
or
ret
add
popa
scas
cld
push
mov
loope
orl
jmp
aad
out
pop
nop
sub
push
pushf
imul
xchg
cld
pushf
mov
mov
or
mov
mov
push
enter
hlt
ret
fsub
xchg
jne
lock
int3
push
repz
daa
cmp
mulb
mov
jbe
imul
rcr
mov
adc
jns
sahf
mov
cmp
pop
or
shrl
dec
xlat
and
idivl
push
bound
push
push
flds
nop
in
push
scas
mov
lods
push
outsl
out
mov
std
aam
test
inc
sahf
mov
cltd
lods
rcr
add
shl
decb
or
ret
cwtl
inc
or
sub
inc
iret
sub
sbb
inc
mov
jae
lahf
sbb
dec
mov
fs
push
hlt
aad
sbb
xor
cwtl
pusha
pop
adc
sahf
xchg
int3
dec
test
or
and
pop
iret
cmc
xor
ss
push
bound
xchg
scas
stc
decl
or
cmp
pop
and
bound
push
test
imul
sahf
sahf
mov
iret
add
sar
rol
fwait
gs
rol
in
data16
mov
clc
dec
sub
cmp
jns
ret
adc
stos
jbe
xchg
js
jmp
mov
add
filds
add
jnp
sar
stos
sub
loop
mov
fistl
rorb
push
mov
jg
fmull
popf
jle
push
adc
dec
push
add
jns
imul
xchg
les
outsl
test
pop
pop
aam
jbe
pop
push
or
jg
pop
aad
mov
int3
jae
xor
adc
addr16
jle
push
push
or
sub
mov
mov
or
cmp
cmpsl
test
or
loope
mov
pop
test
push
fnstcw
cmpsl
lahf
test
push
push
xor
mov
adc
out
lods
push
mov
bnd
cmpsl
jbe
cmc
ror
jnp
mov
dec
mov
sbb
hlt
outsb
out
add
shlb
test
inc
sbb
sbb
stc
aam
stos
popa
ljmp
mov
dec
mov
repz
icebp
enter
jno
movsl
shll
decb
cmpsb
es
and
aam
mov
out
and
repnz
sbb
cwtl
test
imul
fisttpll
jmp
repnz
xchg
push
out
icebp
mov
xor
out
cmpsb
push
repz
xor
fldl
inc
sbb
sbb
cltd
scas
stc
mov
fmulp
add
pusha
insl
and
leave
loop
sbb
ja
adc
ja
cmp
ficoms
sub
cmc
sub
cmp
xor
test
sahf
cmpsb
cmp
sbb
inc
mov
mov
insl
stc
hlt
pop
sbb
and
mov
mov
add
sbb
push
sbb
sub
pop
sahf
inc
nop
sahf
test
and
aas
sub
hlt
jnp
les
std
or
mov
sub
sbb
jbe
mov
xchg
push
rclb
add
shr
mov
cmpsl
mov
popf
jle
imul
das
dec
clc
mov
enter
stc
jl
xlat
push
lods
dec
xor
icebp
jge
sub
dec
js
sarb
pushf
sti
lock
push
or
sbb
jbe
mov
fistpl
test
addr16
add
sub
jns
sbb
mov
int
jbe
inc
and
lds
cmovs
leave
push
leave
mov
cmp
ja
fs
ja
outsb
sbb
sbb
mov
mov
fmull
icebp
psubsw
mov
insl
and
lods
in
add
dec
rorl
lcall
cli
or
lcall
xchg
pop
subb
adc
repz
fistl
scas
mov
add
inc
mov
es
cli
mov
stos
sbb
stc
xchg
call
aam
test
xchg
jmp
jg
test
push
lret
in
into
jmp
hlt
daa
fs
iret
pop
mov
pop
cli
lret
add
add
push
push
push
loope
int3
jb
jge
leave
jge
mov
pushf
pop
and
xchg
cmp
sbb
xchg
shrb
inc
test
ljmp
adc
jae
test
outsl
stc
jnp
rcll
out
adc
call
mov
push
adc
fnstenv
xchg
scas
xor
lods
bound
sbb
jae
imull
inc
push
inc
pop
repnz
stos
pushf
mov
xchg
jmp
iret
jae
mov
sub
rclb
push
and
mov
sub
xor
fsub
test
push
fsubr
adc
or
or
inc
inc
int3
dec
add
pushf
xchg
push
mov
push
dec
sbb
jg
pop
pop
mov
xchg
aad
pop
mov
lahf
push
aas
pop
and
dec
cltd
mov
ret
jmp
push
fcmovb
das
mov
arpl
jmp
int3
int3
add
inc
lods
add
cmpl
lods
inc
pop
cwtl
or
ret
inc
cld
xchg
xchg
test
fnstcw
mov
push
mov
adc
jg
mov
xchg
lds
push
loopne
sub
filds
inc
mov
out
or
push
insl
shl
dec
sahf
mov
and
call
ljmp
dec
ja
in
sub
hlt
adc
into
test
test
add
iret
fsubs
scas
fstpl
add
mov
mov
push
xchg
xchg
dec
mov
jbe
push
cmpsb
fnstsw
and
mov
bound
lock
in
mov
cltd
aad
fldt
xchg
lds
call
push
call
add
mov
cmp
push
lcall
je
imul
loop
pop
out
mov
or
je
icebp
xor
push
inc
push
std
adc
mov
cs
test
mov
xchg
inc
dec
xchg
or
cmpsb
and
xor
movl
test
arpl
fstl
loop
outsl
ret
test
movsl
pop
push
out
cmp
adc
aas
pusha
push
mov
insb
test
pop
pop
adc
inc
mov
add
jmp
notl
adc
mov
cmp
or
or
pop
cmp
add
or
stos
lcall
bnd
pusha
adc
aaa
lcall
pop
aad
xchg
lret
out
inc
xor
jnp
sub
inc
shrl
inc
mov
popf
pop
jecxz
push
fistpll
cli
stos
xchg
sub
jl
insb
in
fstp
mov
pop
in
mov
push
movsb
je
repnz
shll
movsl
lock
sarb
mov
iret
test
jg
xor
cli
mov
inc
push
sti
fcompl
cmp
lret
and
mov
insl
sub
adc
fldt
in
adc
orl
ljmp
arpl
jno
in
mov
jbe
aaa
jle
out
js
out
adc
repz
addl
mov
dec
adc
jmp
mov
and
cmc
bound
cmp
es
rorb
mov
mov
sub
fildll
sbb
or
jecxz
xor
shl
ds
bound
jns
out
addr16
lods
mov
lods
mov
cltd
push
pop
mov
xchg
lea
adc
xchg
sbb
lods
lods
insb
test
cmpsb
jbe
outsb
es
or
das
mov
jp
xchg
sbb
inc
insb
mov
and
or
fdiv
enter
xor
js
repz
add
push
adc
test
fwait
jp
inc
push
addr16
adc
cld
addr16
sahf
in
icebp
rcll
and
daa
cmc
mov
sub
pop
sub
push
sub
pop
scas
daa
add
cmpb
int3
icebp
insl
pusha
sub
daa
loopne
frstor
mov
aad
xor
insb
cmp
jg
lret
fcoms
or
inc
sbb
push
jmp
in
sbb
fst
or
call
and
dec
adc
int
sbb
push
or
in
jmp
inc
rorl
sbb
mov
and
jecxz
push
cmpsb
nop
jmp
cltd
ja
inc
pop
and
rcrl
pusha
add
cmpsb
mov
sar
mov
mov
inc
jb
jae
push
pusha
les
sub
dec
xchg
jp
sub
pop
dec
lods
andb
jg
or
mov
xor
ljmp
adc
into
lcall
sbb
jne
add
xlat
mov
add
sbb
mov
xchg
mov
jecxz
in
mov
xor
clc
or
push
shll
mov
ret
xchg
push
sbb
scas
inc
cmp
aas
xlat
testb
push
inc
subl
cmpsl
push
inc
dec
scas
loope
or
arpl
ret
push
mov
movsl
inc
pushf
test
hlt
xchg
imul
sbb
out
add
cmp
fnstenv
int3
ljmp
mov
jmp
lret
icebp
mov
cld
sbb
cmp
and
ljmp
inc
ss
fwait
jns
push
pop
cld
sub
int
test
mov
jge
adcb
jb
jecxz
mov
std
mov
mov
sbb
or
fsubr
push
sbb
cmpsb
adc
push
add
dec
cld
dec
mov
aaa
push
lcall
stos
inc
das
lock
dec
fistps
jae
insb
pop
mov
pop
cmpsl
outsb
aad
mov
test
push
xchg
xchg
and
js
xchg
dec
fidivrl
xor
lret
dec
lret
test
jnp
mov
das
and
mov
dec
xchg
adc
mov
orb
jp
mov
cmp
stc
notl
and
xor
xchg
or
movsl
adc
mov
and
cmp
inc
sbb
jbe
push
cli
sbb
xchg
sbb
das
lods
push
fcompl
rorl
andl
push
loopne
loope
repz
int3
sti
je,pn
out
jno
add
lcall
xor
imul
inc
add
loopne
in
and
dec
fwait
xchg
cmp
out
je
movsb
mov
or
fcmovb
pusha
inc
stos
pop
nop
inc
sub
jno
ret
mov
xchg
je
xor
mov
xorb
cmpsb
xchg
out
aas
mov
mov
cmp
fists
lea
dec
sbbb
push
es
mov
sbb
fidivs
lea
xor
inc
nop
popf
push
test
mov
flds
push
pusha
icebp
imul
outsl
out
in
xchg
inc
loopne
test
lds
mov
push
adc
pop
mov
add
inc
dec
aaa
adc
sarb
jp
addr16
test
lcall
jecxz
xchg
fcmovbe
test
cld
fcmovu
pop
push
fdivs
ljmp
les
cmpsl
out
add
push
adc
sub
stos
lret
popa
and
test
insl
iret
xor
stc
pop
pop
outsb
idivl
jg
repz
xchg
cwtl
and
shrl
pop
je
in
or
add
lea
xchg
cmp
xchg
lock
dec
int
add
repz
xchg
lret
jle
lods
les
cmpl
sbb
pushl
loopne
cmpsb
fistl
and
fwait
add
addb
cmp
test
push
into
xchg
push
insb
dec
mov
test
push
dec
and
mov
mov
mov
xchg
or
addb
negb
inc
and
leave
mov
and
mov
and
and
filds
or
jle
pop
jns
insl
test
rcll
test
movaps
adc
test
repnz
movsl
cmp
cmc
adc
mov
push
push
je
insl
jle
and
jl
push
mov
notb
lock
loop
ror
data16
leave
cli
cmpsb
in
sbb
sbbl
xor
adc
add
js
mov
fisttpll
add
movsl
add
and
daa
rcr
push
decl
push
or
les
mov
xlat
adc
xchg
cwtl
push
sarb
jnp
pop
lret
and
int
jo
scas
icebp
movsb
mov
fsubl
repz
pmulhuw
sub
push
adc
rcrl
vmulps
mov
ds
xlat
adc
dec
jo
lock
icebp
push
int3
sbb
and
mov
outsb
mov
cmc
or
xor
fildl
pop
or
mov
sub
popf
jg
movsb
and
dec
fs
movsb
imul
nop
mov
inc
sbb
shll
jmp
xchg
adc
in
mov
mov
in
pop
push
and
call
jecxz
shrb
sub
inc
insb
jp
cmpb
pop
es
push
iret
push
in
add
inc
jno
outsl
pop
shrl
and
sbb
mov
lret
lret
mov
cmp
insb
adc
enter
fisubrs
loope
mov
mov
push
sbb
mov
mov
jo
mov
mov
inc
lret
mov
dec
jl
das
repnz
jge
cmc
aas
mov
dec
jbe
sub
insl
dec
jmp
lret
rcrl
mov
xor
push
fiaddl
les
inc
mov
popa
add
mov
repnz
push
int
dec
aad
pop
xchg
clc
dec
sbb
ljmp
call
sbb
push
lcall
in
cmc
jg
das
and
or
out
mov
stc
jmp
dec
jg
or
loope
adc
pop
les
rcll
sub
ret
mov
pop
sub
adc
leave
jne
cmp
mov
int3
ds
test
xor
cmp
push
outsl
and
or
pushf
xor
lods
sub
mov
push
sub
fcompl
lahf
mov
lea
call
loopne
bound
jne
leave
test
outsl
int3
and
jecxz
mov
movsb
jl
adc
imul
jnp
mov
cmp
and
jp
xchg
adc
hlt
es
repz
or
rcrl
scas
jl
sub
std
repz
inc
mov
mov
out
pop
or
jmp
add
jp
mov
nop
or
jae
movsb
fdivrl
mov
mov
and
rcr
sub
pop
fisttps
add
daa
repnz
mov
sub
sub
repnz
ret
std
sbb
pop
scas
subl
cs
pop
fdivrl
ret
mov
adcl
pop
dec
out
inc
arpl
mov
cld
mov
adc
mov
mov
std
mov
push
rorb
inc
sbb
fwait
dec
mov
imull
push
xor
xchg
rorl
sbb
cmp
mov
inc
cmp
lds
outsb
jecxz
mov
lea
push
lcall
xchg
sub
add
cmp
add
dec
pop
jbe
push
mov
sbb
inc
data16
push
mov
mov
cmp
adc
cmp
sbb
stos
call
fs
dec
pop
dec
cld
xchg
hlt
adc
pop
rorl
dec
or
mov
test
aad
sbb
orl
ds
ret
call
fbstp
add
call
fcom
adc
or
mov
adc
push
outsl
pop
es
adc
addr16
inc
lea
inc
shl
cld
int
adc
test
lret
mov
sbb
das
xchg
cmp
enter
dec
adc
das
sti
cmp
mov
add
das
out
out
stos
xor
cmp
scas
aaa
fsubl
push
push
sbb
fadds
ret
inc
negb
dec
cmp
ret
and
shll
icebp
add
xor
push
loopne
into
rcr
rorl
add
and
aam
adc
or
sub
xchg
outsb
out
jb
lahf
movsl
lahf
rorl
rcr
push
stos
scas
inc
stc
xlat
dec
lods
jle
jp
iret
jns
cmpsl
xchg
les
add
xor
in
push
lods
pushl
mov
pusha
jns
lods
jns
in
add
pusha
idivb
icebp
sbb
jecxz
adcl
pop
xlat
out
enter
int3
outsl
or
xlat
mov
mov
jp
or
outsb
rclb
outsb
pop
cltd
enter
and
add
aad
subb
loope
outsl
fs
mov
cli
aaa
test
test
cmpsl
clc
inc
outsl
sub
nop
scas
pop
scas
and
movsb
cmpsb
lahf
xor
jg
inc
scas
and
add
adc
arpl
es
scas
xor
add
adc
fsubrp
cs
pusha
add
loopne
or
and
jne
repz
push
push
xchg
into
mov
jo
test
cs
adc
mov
xchg
imull
fsubrl
inc
push
addr16
imul
mov
add
xchg
adcl
enter
xchg
push
jne
lock
dec
xchg
stos
lahf
xchg
adc
mov
mov
in
in
jecxz
push
jae
imul
test
jb
xchg
dec
xchg
shrl
mov
lret
repz
jp
cmpsb
fisubrs
scas
sub
pusha
mov
ss
mov
jae
add
cmpsl
in
lcall
ss
dec
clc
cs
sbb
xor
aad
mov
lret
mov
bound
lock
dec
jg
bound
pop
xor
leave
xchg
pop
clc
adc
adc
inc
xchg
aaa
stos
mov
rcrb
jns
addb
pop
aad
loope
cmp
dec
cmp
ret
scas
push
xchg
pushf
enter
into
sbb
inc
imul
mov
jae
js
jne
mov
out
push
movsl
sbb
lret
xor
xchg
ds
addr16
pushf
sahf
dec
stos
fsubrl
and
insb
sbb
enter
lret
aad
lret
jnp
stos
in
in
das
stc
data16
and
int
add
push
out
xchg
inc
sbb
dec
out
aaa
adc
es
add
cmp
dec
mov
sbb
inc
xchg
push
sub
fists
jmp
jae
push
outsl
mov
push
jmp
inc
or
fisttpl
xchg
jmp
fwait
loope,pn
or
imulb
in
xor
sub
ffreep
jno
test
xor
shll
add
test
outsb
lea
push
subb
and
mov
mov
mov
lods
into
je
out
cmp
jp
aad
jnp
fcmovnu
xorb
pop
push
loopne
cmp
cmp
mov
pop
iret
xchg
mov
xchg
ret
outsl
push
xchg
dec
rolb
fnstcw
lods
adc
and
in
icebp
sbbb
push
fdivl
std
mov
xchg
mov
lret
test
lods
enter
rcl
push
xchg
in
pop
cli
fcom
sub
fcoms
or
clc
pushf
loopne
and
imulb
jle
mov
shlb
mov
ja
imul
mov
adc
les
pop
mov
xor
stos
and
mov
sub
sub
lods
out
jo
jno
push
test
or
shl
jp
stc
clc
test
jl
out
outsl
cs
add
mov
fnstcw
fcmovbe
scas
sub
inc
pushl
inc
outsl
sub
repz
pop
push
jbe
cs
xchg
cmp
jmp
mov
sti
aas
cmpsb
stc
mov
or
mov
jg
fadd
dec
pushf
les
stos
pop
lock
mov
sbb
inc
roll
out
and
xchg
js
pop
pusha
pop
inc
out
cmp
outsb
daa
mov
pop
leave
mov
jp
jge
add
jmp
jns
data16
xor
or
ret
out
in
lods
and
call
stc
pop
call
mov
mov
push
sarb
xchg
clc
imulb
mov
pop
or
inc
add
push
mov
lret
dec
sbb
cmp
adc
xor
fdivs
cmp
mov
mov
pop
ja
or
and
imul
adc
sub
jg
inc
pop
fsubrl
repnz
xlat
daa
cli
mov
push
call
mov
cmp
mov
sbb
jecxz
andb
push
inc
xchg
ret
stc
loopne
sbb
les
rcr
xchg
dec
xlat
adc
test
gs
sub
xchg
out
add
mov
flds
xchg
out
sub
jo
xchg
dec
dec
xor
insl
xchg
mov
lods
pop
pop
in
xchg
ds
adc
inc
jecxz
xchg
hlt
inc
sbb
sub
es
rolb
int3
call
fistl
xchg
cltd
mov
dec
scas
xor
fwait
aam
jmp
and
mov
jo
cld
and
andb
movsb
in
xchg
leave
jg
lea
cmp
insl
pushf
mov
ja
mov
test
mov
ja
jno
adc
pop
fwait
sub
nop
mov
rcl
push
std
jp
rorl
push
in
sbb
add
and
cmp
push
adc
clc
mov
and
jnp
test
add
or
adc
shr
cmpsb
push
call
mov
rcrl
mov
xchg
out
jbe
imul
movsb
in
les
inc
cmc
and
fiadds
or
daa
dec
pop
push
xor
mov
ror
sub
shl
out
cwtl
fisubrl
icebp
mov
ljmp
adc
shll
fwait
lahf
xorb
inc
inc
and
push
sub
cmc
popa
inc
fcmovnu
or
scas
jl
mov
fwait
sub
jge
mov
mov
and
cmp
shll
and
xor
in
pop
dec
rorl
add
aas
push
aam
jp
add
xchg
ror
fwait
dec
cmp
cmpsb
icebp
push
xchg
push
pop
call
dec
enter
outsb
jg
mov
pop
jno
cmpsb
sar
in
sub
mov
sti
lret
enter
jne
in
xchg
xor
pushf
mov
xlat
es
loop
loopne
testl
popa
inc
loop
adc
push
gs
jo
add
xor
jge
mov
movsb
fstpt
dec
push
jno
aam
inc
lea
mov
push
pop
pop
imul
cmp
or
out
stc
mov
xchg
insb
push
push
sub
dec
cmpsb
out
push
lds
mov
pminub
in
mov
fcmovnu
or
ds
test
repnz
fisubs
hlt
ljmp
shrl
or
shl
stos
jne
les
int3
or
or
sbb
jne
push
test
ret
xchg
mov
push
nop
dec
push
push
sub
iret
fwait
push
mov
sti
test
push
mov
cmp
add
fisubrs
rcrl
iret
inc
mov
testb
add
aam
mov
loop
rorl
fsubrl
mov
hlt
add
out
scas
pop
jecxz
mov
leave
cmpsl
add
addr16
mov
aam
xchg
filds
pop
mov
mov
aad
mov
jmp
ficomps
or
add
cld
push
mov
add
in
cli
ja
aad
cs
add
xchg
jl
xchg
fdivl
inc
mov
mov
mov
jp
ljmp
shlb
mov
cmp
cltd
sbb
ss
std
fldcw
cmc
aaa
sti
jbe
inc
mov
mov
js
test
shll
and
sbb
add
add
cli
aad
gs
cmc
pop
mov
inc
ljmp
frstor
pop
push
sbb
cs
fwait
push
inc
xchg
jl
sbb
in
jbe
mov
scas
jg
aas
cmp
in
sbb
inc
mov
jno
sbb
mov
popf
jg
mov
cs
out
into
cmp
sbb
clc
add
jecxz
dec
test
pop
stc
shrb
test
shll
outsb
push
in
dec
fsts
pop
arpl
inc
mov
cmc
fcmovnb
mov
pushf
mov
sarb
push
lcall
fldcw
mov
aad
push
dec
ret
push
out
out
nop
xchg
jo
or
std
mov
fnstenv
inc
test
roll
xchg
hlt
out
ja
jmp
push
push
outsl
push
iret
xor
out
cmp
leave
adc
je
sarl
test
lea
pop
add
repz
adc
lret
cmp
mov
cmp
inc
test
xchg
sahf
addb
lds
les
jge
outsl
dec
lds
pop
or
push
out
inc
sub
popa
test
lcall
mov
xchg
mov
popl
jl
inc
mov
xor
aaa
push
or
add
mov
inc
gs
xchg
clc
dec
and
ficompl
inc
ficompl
cltd
pop
push
outsb
adc
icebp
ja
jae
insb
pop
cmc
aam
xlat
jnp
movsl
xchg
data16
dec
icebp
pop
mov
cmpsb
js
testl
add
ficoms
inc
and
stos
lret
imulb
fidivrs
movsb
or
lcall
xchg
fwait
outsb
repz
jne
push
pop
ret
rol
or
sub
into
pop
mov
xlat
adc
cmp
xchg
xor
jp
jmp
inc
stos
in
inc
mov
loop
je
dec
add
push
int3
aam
adc
push
cmp
ds
jp
push
in
and
jno
scas
add
mov
inc
cwtl
pop
pop
mov
sub
frndint
inc
ja
and
mov
icebp
lods
dec
arpl
dec
out
xor
lahf
dec
xor
mov
mov
out
xchg
push
xchg
pop
imull
push
daa
fidivl
mov
add
out
clc
dec
mov
inc
dec
sbb
or
je
lcall
add
adc
dec
lcall
mov
mov
sahf
sbb
and
jl
lods
mov
out
cmp
sbb
movsb
dec
mov
sahf
lock
stos
scas
push
test
sub
outsb
dec
and
dec
mov
js
cmp
or
aaa
sbb
js
nop
push
push
pop
dec
xor
lea
hlt
es
jae
nop
xor
mov
call
js
lahf
push
das
sub
mov
mull
or
scas
enter
pop
movlps
arpl
les
jb
cmp
sbb
xor
ret
subb
mov
pop
test
and
outsl
daa
sbb
dec
lock
mov
jns
inc
lahf
dec
test
mov
dec
leave
mov
imull
ljmp
xor
xor
pop
xor
rcrb
in
movsl
dec
push
sbb
xchg
test
cs
roll
dec
sub
inc
lock
mov
das
push
or
pop
and
add
repz
jg
xchg
test
fbld
decl
inc
pop
pop
or
xor
jb
mov
jg
cmp
cmc
fimuls
mov
pop
sub
loop
rcrl
mov
mov
or
imul
fsubrl
arpl
sbb
test
into
movsb
pop
add
jle
pop
loop
mov
xchg
fcos
sbb
jmp
and
mov
testl
fistl
mov
shrb
push
add
pop
andl
xchg
pushf
cmp
aad
sbb
adc
jmp
in
cmc
mov
das
jbe
mov
push
mov
mov
stos
push
adc
icebp
pushf
js
jp
sbb
mov
fwait
pop
cmp
shlb
mov
out
inc
or
mov
es
ret
ret
and
mov
jmp
xchg
notb
daa
decb
in
push
enter
jp
rorl
cmp
push
iret
xchg
xor
cmp
pop
ucomiss
jg
mov
into
call
or
aaa
jo
mov
pop
dec
addr16
mov
xor
es
fldt
int
pop
push
imulb
dec
fcmovnbe
div
sahf
jp
lcall
repz
lods
int
ds
pop
fcmovb
dec
loopne
push
int3
hlt
jl
or
iret
cli
lahf
inc
sbb
or
xchg
scas
shr
mov
and
sub
add
andl
push
jmp
imul
daa
jns
rclb
pop
fucomip
jmp
add
jnp
enter
pop
xlat
push
xchg
mov
jmp
pavgb
push
xor
loop
repnz
sub
sbb
sub
push
int
mov
adc
rclb
aam
cmp
aad
add
add
aad
push
xchg
sub
xorl
rorl
push
xor
xchg
es
adc
scas
or
jns
or
mov
xchg
insl
lret
das
into
fdivs
mov
hlt
sbb
push
mov
lcall
cmp
or
pop
vunpcklps
ret
cltd
push
out
adc
add
inc
push
sub
icebp
aam
std
jp
test
push
into
mov
dec
aas
out
aad
je
jbe
adc
gs
push
out
adc
sbb
mov
jp
filds
add
ja
cmpsl
stos
xchg
out
cmp
adcb
or
fs
xchg
ss
in
aam
push
aas
and
test
cwtl
mov
pusha
jns
jae
dec
cmp
shl
mov
xchg
cmp
push
inc
lods
push
add
and
mov
mov
xchg
enter
and
sbb
in
push
sahf
repnz
adc
xchg
in
mov
notb
jmp
or
mov
or
mov
enter
movsb
jbe
out
sub
or
adc
out
mov
cmp
xchg
addr16
jns
loopne
xchg
mov
and
sbb
fs
andl
cmp
es
xor
cmc
mov
shll
pop
mov
pop
pop
pop
jl
pop
fstpt
push
sti
test
push
mov
nop
mov
xchg
imul
aaa
ficomps
sbb
sub
adc
aaa
sbbb
lret
inc
adc
dec
jle
scas
pop
xor
push
mov
cwtl
mov
mov
pop
mov
push
lds
cmp
adc
jle
aad
insl
adc
les
add
cmpsl
aaa
sub
cmp
cmc
push
scas
pop
mov
or
in
mov
mov
xchg
and
in
js
or
mov
fbld
push
jnp
cmp
loope
push
push
std
xor
mov
jle
mov
pop
mov
std
add
mov
in
cli
mov
andb
loop
aas
mov
test
or
data16
or
fwait
repz
mov
and
sbb
repnz
popa
push
pop
xor
mov
push
movsl
xor
cltd
jl
ror
mov
add
adc
jb,pn
jae
mov
test
movb
pop
movsl
and
leave
mov
jecxz
mov
cwtl
mov
mov
mov
push
lcall
in
scas
aaa
jmp
popf
nop
mov
and
jmp
lds
xlat
movzwl
push
iret
pushf
push
fsubr
pop
pop
repnz
mov
or
jg
cmp
jno
xchg
jp
pop
jmp
xor
and
ret
xchg
pushf
push
mov
divb
pop
icebp
leave
ffreep
mov
inc
inc
mov
pop
mov
imul
pop
adc
xchg
mov
mov
cmp
sarb
pop
iret
popf
imul
push
call
cmp
push
clc
or
mov
cmc
fisubl
in
sbb
fistl
jo
xor
scas
dec
sbb
aaa
and
cs
add
rcr
jl
out
adc
mov
dec
push
movsl
sti
or
adc
cs
sti
aad
xchg
pop
enter
icebp
imul
sub
or
aam
subb
pop
popl
mov
inc
aaa
jmp
pop
scas
and
sub
sti
call
mov
loop
xor
inc
xchg
xor
adc
jp
dec
cmp
mov
jmp
int3
insl
lret
jo
fwait
push
xchg
xor
cmpsb
das
je
ja
test
jl
fcmovu
stos
repnz
dec
mov
call
inc
add
cli
fcompl
and
shrl
push
mov
loope
repz
pop
faddl
dec
dec
xor
in
xchg
adc
fs
aaa
inc
and
out
pop
pop
cli
sahf
pop
sti
sbb
outsl
add
cs
test
or
ret
in
jle
xrelease
out
push
cmp
rclb
lds
and
jg
sub
pop
loope
mov
push
dec
test
inc
enter
or
mov
add
mov
cmp
jb
push
inc
mov
js
icebp
mov
daa
or
adc
scas
pop
sbb
sub
pop
leave
loope
sbb
lods
add
mov
pop
jmp
adc
pop
popf
inc
ds
out
and
pop
mov
adc
sahf
sti
fs
push
push
fnstsw
in
mov
jmp
icebp
gs
cmc
fs
or
mov
inc
scas
outsb
xchg
mov
inc
scas
ret
stc
fstps
or
mov
push
aas
std
je
cli
sarb
cmp
xor
iret
jmp
and
xchg
jo
jne
stos
pop
inc
inc
sarl
sub
jno
je
mov
cmpsl
shrl
add
fsubl
sbb
or
add
jge
mov
mov
gs
adc
jle
ss
sahf
jg
ljmp
jnp
mov
jno
push
or
imull
pop
mov
mov
sbb
cmp
mov
push
addps
xchg
lea
ficompl
adc
out
and
push
mov
fistpll
mov
imul
aas
cmp
shll
xchg
mov
cmpsb
mov
aad
clc
notl
dec
jb
pop
pop
aam
not
scas
lds
sti
leave
inc
cltd
pusha
popf
test
mov
testb
repnz
adc
sub
lahf
add
sub
into
lret
or
jo
scas
adc
pop
jmp
mov
jae
add
lds
adc
xor
inc
sub
lods
push
lods
add
add
xor
rol
in
sub
js
sub
test
cwtl
jne
sbb
ret
ljmp
imul
movsb
out
mov
sahf
cmp
jb
mov
js
shlb
mov
xor
sub
addb
xlat
scas
fidivl
mov
or
add
cmp
ret
pop
cmp
incl
fisubrl
jmp
sbb
outsl
es
sub
mov
sbbl
ficoms
mov
scas
mov
inc
adc
loope
jb
outsb
push
repz
push
mov
pop
mov
dec
loope
stc
ds
jns
and
jle
loop
out
sub
inc
jp
lahf
push
xlat
jp
dec
ja
out
push
ds
mov
xor
jle
inc
pop
mov
popl
stos
mov
movsl
je
add
out
sbb
sbb
mov
bnd
addl
mov
add
and
mov
inc
fmuls
pop
fwait
aad
jo
xor
cltd
int
subl
mov
sub
mov
cmp
adc
jp
mov
push
stos
xchg
add
push
mov
jne
sbb
jge
sub
leave
out
in
lods
lret
mov
movsb
mov
cli
push
je
jae
mov
or
and
push
cli
jmp
enter
xor
scas
push
in
add
mov
pop
xchg
mov
idiv
and
inc
mov
hlt
test
sbb
adc
sahf
into
fs
push
test
jno
icebp
arpl
pop
add
daa
cwtl
incl
push
or
xchg
ret
jo
adc
icebp
je
in
xchg
push
inc
mov
bound
adc
and
adc
jl
add
push
inc
pop
fiadds
jl
call
pop
outsb
es
fwait
jmp
mov
mov
add
in
jb
imul
jo
loope
daa
call
mov
gs
paddd
sub
out
movsl
scas
insl
jno
cmp
jae
push
fchs
in
xor
cltd
stos
xor
dec
lahf
mov
mov
jb
and
ds
subb
insb
lods
mov
movsb
mov
push
jle
mov
add
mov
pop
adc
rorb
dec
dec
mov
inc
xchg
inc
adc
cs
and
lods
add
inc
fiaddl
fstpt
push
adc
push
mov
xchg
mov
dec
or
and
filds
cmp
sbb
jle
addl
inc
loop
fmul
push
data16
arpl
testl
test
xlat
or
mov
pusha
mov
adc
xchg
fistps
inc
sbb
mov
mov
jb
cmpl
cmp
inc
ljmp
pop
adc
je
xor
popa
add
test
imul
ret
loope
mov
xchg
pop
out
bound
aam
xchg
in
lea
mov
mov
dec
mov
pop
cld
fmul
pop
push
aaa
idivb
sahf
cmpsl
pop
out
add
mov
dec
and
dec
and
jnp
cmp
and
cmpl
jge
jge
hlt
inc
stos
movsl
inc
adc
jb
stos
ds
call
aam
stos
in
mov
lcall
sbb
xchg
fsubrl
mov
pop
loop
ss
imul
cmpsl
sub
push
out
fwait
push
in
mov
or
int3
xchg
sub
arpl
imul
jo
push
mov
lock
imul
cld
outsb
mov
aad
fucomi
gs
addr16
data16
mov
jp
add
test
and
aaa
jle
fistpll
js
ja
mov
sti
in
ret
jg
lods
cmpsl
mov
shrl
popf
push
lock
push
mov
pop
aas
push
xor
test
jno
cmp
xchg
mov
jg
cmpsb
nop
cmp
fs
fists
fsubr
sbb
cmp
aaa
sub
ficoml
sbb
addr16
imul
lcall
jb
nop
fiadds
stos
jp
cmpsb
sbb
or
orb
pop
lock
mull
jmp
fdivrs
ja
sub
push
rcl
ss
fstps
std
xor
add
fadd
das
aaa
dec
or
out
ds
and
or
and
or
pop
xor
mov
add
push
out
and
mov
test
mov
or
or
adc
lods
dec
inc
push
lret
push
pop
jb
push
stos
inc
jp
sub
sbbl
push
imul
stos
dec
xchg
lahf
pop
cmpsb
leave
testb
mov
add
xchg
xor
dec
adc
xor
cmpsb
pop
in
ljmp
push
cmc
das
fwait
add
cmp
pusha
push
div
xchg
stos
sbb
and
mov
fidivl
push
repnz
mov
push
pop
jno
pop
nop
lods
sub
pop
jns
lock
jp
ljmp
adc
jmp
clc
decb
insb
mov
adc
loope
jb
xchg
cmpsb
pop
inc
hlt
sti
or
and
cmp
mov
jbe
mov
test
mov
mov
movsl
hlt
fisubrl
jecxz
fwait
out
loope
jae
xlat
std
test
insl
inc
loopne
int3
push
pop
test
or
mov
orl
hlt
push
mov
out
daa
mov
dec
add
dec
pop
imull
pop
cmp
icebp
sub
pop
mov
ret
ret
inc
leave
out
jp
nop
insb
cmpsb
jecxz
imul
mov
mov
in
ret
mov
lret
pushf
dec
inc
xchg
mov
je
xchg
addr16
cli
shr
daa
fimull
xor
int3
cwtl
mov
mov
cltd
testb
cmovnp
jb
xchg
add
lret
and
dec
cs
andb
and
xor
es
and
cmp
jle
xchg
pop
mov
mov
xchg
add
jae
inc
cmp
jp
sub
addr16
jmp
push
xchg
add
jne
mov
inc
or
pushl
fbld
sbb
ja
test
push
and
mov
loope
mov
sti
pop
jmp
xchg
lea
push
and
mov
add
pop
clc
sub
aam
ja
dec
imul
faddp
call
mov
inc
add
mov
fsubrl
inc
test
xor
adc
cmp
inc
divl
das
mov
pop
pop
outsb
push
and
jl
dec
rclb
out
cmp
enter
arpl
lahf
addb
jbe
push
dec
cmp
cmp
nop
aaa
push
loope
rorl
ret
xor
bound
sarb
addr16
lods
push
jecxz
mov
xor
cmpsb
dec
popf
out
sbb
and
test
scas
pop
in
and
add
mov
xor
push
mov
or
jb
hlt
in
pop
push
xor
scas
add
jae
in
ja
inc
xlat
adc
jmp
add
int3
add
hlt
nop
mov
daa
shl
aam
aas
mov
jbe
inc
mov
ret
cmc
aaa
call
mov
gs
and
lods
jg
sub
or
xor
sbb
pop
nop
jae
in
adc
xchg
out
fldenv
inc
movsb
dec
or
sbb
mov
dec
mov
jnp
arpl
test
mov
mov
pop
xchg
push
add
dec
sbb
cmp
lock
stc
and
stos
adc
iret
lret
pop
push
sub
adc
push
jecxz
rcr
stos
aam
jb
push
ret
rol
and
push
fnstcw
imul
xchg
dec
out
xor
mov
repz
insb
imul
leave
into
inc
or
dec
dec
pushf
mov
stc
lods
push
fidivl
fcomi
push
adc
sub
rcl
dec
rorb
mov
mov
mov
sti
xchg
mov
lods
fdivr
add
inc
sub
aad
xchg
scas
addl
xchg
xor
pusha
add
mov
mul
push
add
sbb
and
sub
mov
or
mov
movsl
repz
bound
insl
cmp
inc
cli
and
cld
rorb
xchg
mull
loopne
test
imul
mov
xlat
mov
or
adc
mov
mov
lret
mov
arpl
call
and
sub
mov
pop
mov
ucomiss
sub
js
stos
lcall
fs
push
and
fnstcw
cmp
mov
adc
pusha
mov
xor
sbb
call
xchg
loopne
add
and
les
std
xchg
push
notb
mov
aad
xor
fwait
jne
popa
and
jnp
lock
mov
ret
inc
or
inc
bound
loope
inc
iret
jl
fidivrs
lods
cld
adc
int
adc
mov
mov
add
xor
insb
loope
pop
rolb
ss
in
fwait
pop
mov
mov
xchg
es
or
in
cli
out
mov
pop
mov
shll
addr16
lret
cwtl
sti
jns
cmpsl
js
fimuls
adc
and
dec
jno
add
sub
sbb
loope
sti
xor
fbstp
mov
pop
sbb
sub
cmp
sub
mov
adc
push
shll
jge
fstpl
lcall
cmp
mov
push
clc
incl
cmpsl
imul
xorb
das
inc
add
hlt
lahf
inc
pop
pusha
in
xchg
incb
aaa
or
ficoml
cmp
sub
mov
aaa
insl
enter
sub
push
jb
clc
jae
dec
out
xchg
mov
xlat
psubd
out
fsubr
rcll
lea
sbb
int
out
shl
stc
cld
and
popa
cmp
xchg
xchg
pop
dec
aas
sahf
inc
sbb
xor
xchg
or
enter
pop
mov
push
sub
leave
push
std
hlt
pop
cwtl
cmp
jae
ds
adc
and
xor
cmp
es
adc
arpl
pop
int
mov
cmc
lret
test
lods
pop
cmp
dec
sti
and
sbb
fucomp
lock
jbe
ret
cmp
xchg
fstl
add
xor
push
sti
jns
push
out
mov
or
or
in
je
dec
rclb
outsl
dec
xor
mov
jmp
int3
shlb
ja
xchg
fnstenv
xor
cmp
and
fsubrl
jno,pn
fstps
xor
jno
outsl
ljmp
mov
mov
aad
inc
sarb
cmp
bound
mov
xchg
push
inc
movsb
loop
sbb
loop
insb
jno
or
pop
cwtl
add
int
jp
mov
popf
jmp
es
imul
mov
mov
movsb
sti
sbb
xor
xor
insl
into
sti
int
or
ret
fcomps
xlat
ja
daa
dec
bnd
es
mov
add
cmp
insb
sbb
scas
in
sbb
and
stos
pushf
mov
je
xor
std
sbb
cwtl
call
sbb
hlt
or
jl
mov
in
add
shll
pop
out
cmp
aaa
mov
lods
dec
stos
lods
push
pop
jns
movsb
jbe
test
aaa
dec
jmp
mov
xlat
cwtl
mov
pop
outsb
popf
inc
cltd
sub
lock
std
mov
mov
iret
shll
sahf
adc
sub
loopne
addr16
ficoms
and
test
test
sub
out
sub
ss
xchg
pop
jmp
mov
insb
loope
insl
xchg
adc
mov
out
mov
scas
stos
jns
inc
into
xor
push
idivb
xlat
dec
or
inc
lock
cmp
sub
fsts
testl
aad
dec
ss
mov
dec
movsl
jg
mov
lea
or
or
addb
mov
pop
dec
jno
loopne
inc
in
mov
daa
pusha
addr16
or
mov
inc
or
jmp
push
mov
jl
daa
rcrl
mov
in
cmp
cmp
frstor
jnp
mov
xor
insb
add
or
pop
insb
sbb
mov
sub
mov
and
rol
hlt
sarb
in
pop
out
roll
data16
shll
pop
add
out
or
ficoms
shlb
push
nop
mov
mov
mov
scas
fisttpll
cs
movsl
sub
xor
lret
pop
mov
mov
mov
cmp
and
loop
pop
popa
pop
iret
aas
cli
cwtl
dec
arpl
push
leave
xor
push
and
jmp
lahf
pop
arpl
adc
add
push
mov
shll
popf
testb
jno
scas
push
scas
test
andl
and
or
pushf
sbb
cltd
xor
lds
les
scas
inc
cld
insl
adc
insl
out
inc
xor
lcall
nop
push
xchg
push
inc
fstl
mov
mov
dec
dec
popf
mov
outsb
add
lret
and
sub
sub
inc
aad
jg
lret
cmc
cmp
and
sub
bound
adc
mov
stos
jb
ret
cli
in
stos
lods
dec
push
or
jl
add
adc
daa
cmp
sti
lret
and
jno
je
add
jmp
pop
std
mov
cltd
mov
xchg
out
inc
lds
pop
imul
push
clc
pop
lock
les
or
rcrl
dec
xchg
imul
sti
adc
or
adc
mov
pop
cmpsl
popa
adc
ja
ja
pop
sbb
mov
scas
js
sbb
inc
cltd
andl
cmp
lds
testb
mov
inc
icebp
out
fsubrs
pop
pop
adc
popa
test
andb
aaa
addr16
mov
fcomps
mov
push
jmp
adc
and
sub
or
jmp
mov
dec
shll
mov
mov
addr16
cmc
fimuls
lods
les
int3
mov
mov
les
push
notl
or
iret
push
adc
iret
xchg
push
mov
std
insb
icebp
daa
fisttpll
mov
sbb
lea
pop
pop
fdivs
sbbb
int
inc
je
add
push
out
stc
cmpsb
aad
lock
dec
test
imulb
fidivrs
lahf
imul
sbb
repz
jnp
push
enter
mov
pop
imulb
and
dec
push
inc
xor
mov
cmp
pop
lret
cmp
mov
sub
nop
or
dec
lret
xor
lret
cmpsl
outsb
push
xor
jne
fwait
mov
jge
lock
push
dec
sbb
xlat
cmpsb
jle
push
nop
out
or
cli
add
ja
out
dec
xor
mov
aam
jmp
jp
sti
inc
lea
imul
jnp
xchg
pop
and
xorb
mov
dec
xor
sti
and
das
lds
dec
and
add
adc
mov
dec
int
out
outsb
mov
or
dec
push
test
push
call
mov
out
addr16
xor
ljmp
or
xchg
or
dec
js
add
adc
jno
loop
cmp
insb
lods
mov
in
jnp
daa
mov
lret
inc
xchg
test
push
sbb
lret
add
and
ret
dec
add
inc
in
leave
mov
testl
ljmp
mov
call
cltd
ss
xchg
fnstcw
sbb
jbe
sbb
pop
sub
mov
outsb
icebp
and
daa
pop
out
mov
leave
adc
out
inc
or
adc
jecxz
dec
dec
hlt
inc
mov
cmp
jl
sub
mov
cmp
mov
dec
push
add
test
out
jg
jne
xchg
outsl
mov
sbb
hlt
dec
ja
inc
fwait
inc
test
shlb
xlat
sub
aad
or
outsb
mov
mov
repz
sbb
aas
in
xor
dec
stos
inc
fisttpl
sub
loopne
sub
push
flds
cmp
cmp
out
std
mov
mull
js
inc
push
inc
rcll
add
cltd
push
arpl
mulb
add
cmp
inc
adc
leave
fdivrs
dec
movb
pusha
addr16
cmp
lock
lods
fs
shlb
xor
and
andb
lods
inc
jg
int3
mov
cmc
mov
mov
push
adc
and
fcoms
xchg
mov
mov
fnstcw
mov
pop
sbb
pushf
sbb
aad
insl
xchg
or
xor
les
jne
daa
fnsave
and
push
sub
or
push
mov
dec
mov
fsts
fildl
pop
test
and
in
test
inc
sub
shr
cs
stc
cmpsb
mov
sbb
or
or
sbb
subl
mov
mov
adc
cmp
jle
jmp
jp
sub
cwtl
idivb
push
aas
shlb
loop
sub
in
lods
testl
ror
vprotq
je
data16
and
hlt
push
nop
push
push
aad
add
rorb
sub
arpl
mov
in
mov
adc
enter
adc
test
inc
mov
fcompl
stc
ficoms
insl
mov
mov
test
nop
cmp
add
fimull
cmpsl
in
mov
popf
lock
mov
stos
cs
inc
pop
js
sahf
mov
cmc
aas
xchg
clc
mov
push
push
rorl
inc
testl
into
pop
cmp
jae
sbb
pop
xchg
jmp
pop
repnz
jb
pop
pop
pop
adc
jecxz
sbb
out
lcall
jl
cmpsb
or
in
es
movsl
mov
int
mov
push
cmpsb
pop
lods
or
sub
add
inc
dec
bound
ss
imul
cmpsb
daa
adc
ja
jp
mov
or
xor
mov
sahf
inc
or
mov
pop
faddl
insl
shl
sub
dec
mov
lock
es
jo
inc
fwait
in
insl
in
cs
xor
cld
fmul
lahf
enter
nop
lock
data16
jmp
pminub
fs
shlb
xchg
pop
sub
mov
std
dec
inc
lcall
push
or
jne
popa
loopne
push
sub
push
add
dec
xchg
jmp
lret
jno
out
xchg
push
gs
in
insb
fldcw
adc
mov
dec
mov
fnstcw
cmp
push
cmp
inc
pop
clc
subb
jle
dec
jecxz
cmpsb
out
jmp
xorb
mov
mov
lods
mov
imulb
loope
test
xor
outsl
add
cmp
or
out
inc
jne
sbb
pop
mov
pop
mov
fsubr
jo
inc
jns
cwtl
sti
stc
and
push
dec
sahf
dec
inc
call
test
add
fisttpl
imul
sub
xchg
sbb
sbb
mov
ljmp
jle
movsb
fs
xchg
jge
loop
xorb
or
test
mov
cs
fnstcw
stos
nop
jnp
int
out
jle
push
sahf
ljmp
and
and
add
mov
mov
imul
int3
test
add
ljmp
data16
es
add
rorb
sub
mov
fs
pushf
in
push
mov
testb
dec
divb
loope
clc
sub
cltd
int
imul
jno
mov
add
cmc
xchg
iret
loope
jge
sbb
adc
ja
clc
in
cmpsl
mov
stos
pop
sbb
in
mov
pop
push
hlt
fsubr
shl
ret
test
jg
adc
dec
std
out
cmpsl
xchg
lahf
shlb
xor
xchg
or
sub
cmp
lods
jmp
adc
mov
push
pop
mov
ss
sahf
in
outsb
sbb
cmc
pop
ds
mov
rcl
repnz
xor
xchg
jb
insb
adcb
jle
ja
arpl
fs
lret
jb
mov
pop
ds
jg
pop
dec
scas
pop
mov
xchg
js
push
push
mov
sti
push
addb
adc
sbb
leave
iret
popf
in
dec
aam
stc
loopne
mov
or
je
pop
scas
and
std
xchg
jmp
cmc
sbb
repnz
fnstenv
mov
cwtl
les
xchg
cmpsb
cmpsb
inc
sub
rcll
inc
pop
push
mulps
jbe
push
add
mov
cmp
decl
inc
repz
cmc
iret
dec
sbb
dec
ljmp
mov
jae
loope
outsl
sbbl
stos
xchg
scas
mov
lods
in
mov
in
pop
mov
lea
adc
cmp
push
ss
jecxz
outsb
add
vphaddwq
out
jl
jo
xor
ficomps
rol
cwtl
push
xchg
cmp
loop
fistl
jge
pop
movsb
pop
push
daa
mov
mov
lods
sub
pop
in
xor
mov
scas
das
lcall
and
and
xorb
std
and
cmp
stc
std
lret
pop
jge
dec
adc
mov
xor
mov
and
stc
add
inc
test
pop
xchg
stc
xchg
mov
icebp
cs
rol
add
pusha
rclb
and
or
add
adc
push
push
imul
and
adc
xchg
mov
repz
stos
push
in
xchg
dec
inc
mov
test
sbb
ret
sub
pop
jle
pusha
push
push
jne
xorb
push
out
ret
int3
mov
xor
dec
mov
cmp
cltd
xor
in
and
mov
movsb
pusha
es
pop
jp
movsl
pop
fstpt
pop
xor
shr
xchg
test
push
clc
fimull
inc
mov
arpl
cld
leave
mov
stos
mov
test
push
mov
repz
or
hlt
or
xchg
test
iret
mov
push
addr16
faddl
imul
or
xchg
sub
fldenv
push
cmp
mov
movsl
arpl
push
daa
sub
pop
pop
popf
push
xor
mov
jae
mov
aam
adc
mull
fistpl
and
push
ds
sbb
mov
xchg
and
jge
test
mov
xor
pop
dec
xor
add
sub
push
adcb
repnz
mov
sub
xor
je
push
std
arpl
cwtl
aad
aam
inc
test
push
cmp
inc
or
mov
pop
add
sub
outsl
mov
mov
jp
pop
ljmp
mov
dec
fistpl
push
pop
dec
fnsetpm(287
lcall
cmpsl
shlb
cmp
rorl
lea
lds
andnps
adc
mov
add
shll
lret
fisttpl
notl
adcl
xchg
cmc
xlat
mov
jg
adc
in
mov
ljmp
mov
adc
jmp
imul
fwait
je
xchg
dec
pop
xor
mov
insl
mov
jg
and
ja
push
push
xor
out
pop
fsubr
lds
inc
mov
nop
sbb
imul
lahf
xchg
xchg
and
sbb
xchg
stos
data16
mov
xchg
xor
sub
notl
lahf
loope
inc
int3
jo
sarb
test
in
or
ljmp
je
mov
mov
push
mov
stos
or
jge
adc
sbb
mov
sub
mov
fdivrs
aas
dec
mov
fsubrs
dec
and
sti
lahf
in
xchg
mov
inc
mov
fs
dec
pop
std
inc
int
add
and
ret
add
or
mov
and
inc
jbe
pop
jl
mov
mov
mov
inc
mov
nop
notb
fidivs
push
mov
lock
xchg
mov
sub
sbb
int3
mov
aad
cmp
ret
xchg
std
fcomp
push
imul
mov
jg
dec
pusha
sbb
sbb
or
sub
jae
lret
cmp
pop
mov
aam
xchg
cli
faddl
icebp
mov
mov
out
rol
xchg
lods
jbe
pop
fimull
out
mov
xchg
test
cmpb
je
repz
lods
push
fwait
jns
cld
insl
sub
shl
xchg
ja
daa
loop
lahf
test
jle
xchg
imul
cwtl
pop
jo
pop
addr16
in
pop
mov
popf
fmul
lods
add
pop
jl
rcrb
jmp
push
ss
popf
hlt
outsl
or
notb
imulb
xchg
mov
les
test
xor
cmpsb
je
sub
mov
mov
fsubl
pop
mov
jle
dec
fcomi
stos
stc
ss
mov
jae
jns
mov
lcall
cmp
jae
dec
std
pusha
sbb
pop
dec
push
lock
sub
mov
jecxz
sub
push
jecxz
jl
mov
and
out
dec
add
imull
in
mov
or
cmpsl
and
mov
or
push
std
sbb
lock
push
mov
and
push
jae
int
roll
xchg
mov
fndisi(8087
ljmp
add
call
pushf
cld
mov
lret
or
and
mov
xor
int3
xor
mov
and
lret
pushf
and
cs
lods
jo
cmp
dec
or
mov
aad
aam
or
pop
popa
loop
lahf
into
lcall
je
loop
xor
sbb
or
aaa
push
out
ss
dec
or
ss
fsubl
cmp
add
call
out
jecxz
jne
sub
cmp
pop
add
adc
jg
or
inc
or
insl
sbbl
push
pop
scas
cmpsb
in
add
rcrb
pop
in
ja
loopne
enter
pop
cmpb
shrb
jecxz
inc
lods
das
mov
shlb
lcall
sbb
dec
xchg
scas
subb
mov
outsb
ret
std
les
mov
roll
adc
jns
and
stos
push
mov
lret
mulb
sbb
pop
push
jns
and
pop
sbb
rcll
lea
add
ljmp
shl
xchg
mov
dec
mov
pop
dec
sahf
call
adc
xor
add
mov
js
and
pop
mov
scas
repz
cmc
inc
or
out
int
sbb
iret
push
sbb
pop
stos
in
cwtl
inc
mov
int
mov
mov
decl
xor
sti
add
xchg
cmp
test
sbb
adc
adc
jae
sub
dec
and
ficomps
cmp
sar
imul
pop
mov
andl
mov
mov
xor
jo
inc
data16
push
insl
bound
out
dec
mov
pop
jb
leave
inc
push
test
push
ja
push
and
xor
enter
push
mov
cmp
xor
xchg
cmp
sub
sbb
inc
mov
sub
push
mov
daa
push
repnz
fldl
add
pop
or
dec
pop
push
lahf
das
or
mov
adc
push
sti
inc
ja
aaa
inc
repz
sbb
cmpb
push
jg
push
mov
and
mov
cli
mov
insl
sahf
dec
sbb
inc
mov
adc
rcr
adc
mov
xchg
gs
ret
xor
xchg
push
inc
aad
cmp
xchg
mov
push
stc
aam
rcrl
lds
mov
adc
fs
clc
jg
or
cmp
ja
mov
xchg
test
or
jp
dec
sti
dec
outsl
mov
lahf
aaa
add
imul
fsts
xchg
fsub
inc
bound
or
jge,pt
lret
mov
dec
jl
popf
std
das
inc
ds
cmp
aam
lock
aad
pop
push
xchg
lock
flds
gs
or
loope
sbb
sbb
xorb
or
fimull
test
ret
or
nop
sub
iret
gs
aaa
pop
mov
push
jecxz
dec
movsl
jg
mov
outsb
insb
xchg
push
das
in
dec
sub
fldt
xlat
or
addr16
hlt
and
jg
push
mov
aam
pop
xchg
int
stos
push
rcl
lret
adc
negl
sbb
sbb
fdivrp
imul
add
jnp
cmp
sub
mov
test
cmc
lods
dec
lock
mov
jl
sbb
addr16
cmp
or
jl
aam
xchg
iret
mov
addb
xor
cmp
mov
lds
addr16
mov
cmp
rdmsr
push
ljmp
sar
xchg
stos
mov
lods
dec
daa
or
popf
or
cmp
test
pushf
xchg
daa
jp
sub
aam
or
iret
loope
fcmovne
jmp
and
inc
movsl
cmp
outsb
int
fmull
inc
or
push
in
jp
cli
push
adc
push
rolb
bound
subl
add
mov
inc
int3
lods
out
scas
push
fsubl
xchg
xor
cmp
inc
mov
mov
daa
xchg
rcr
push
jbe
jmp
jb
pushw
and
pop
les
cmpl
fstp
mov
hlt
adc
addr16
je
add
and
mov
xchg
pop
jp
pusha
out
push
lcall
add
cmovnp
mov
jo
add
cs
ss
mov
mov
hlt
idivl
xchg
outsl
xlat
test
mov
loopne
jl
pop
jge
decl
sbb
adc
aad
aad
dec
cmovg
in
xor
bound
mov
cmp
shlb
cli
adc
mov
mov
aas
shrb
js
rorl
test
xchg
clc
sub
sbb
test
shll
and
ja
mov
push
leave
movsb
bnd
and
xchg
daa
test
dec
pop
mov
rorl
popf
scas
mov
ss
pop
cmp
push
lret
mov
push
fldln2
repz
lret
adc
inc
xor
jnp
popa
loop
lret
mov
dec
lds
cmpb
add
sbb
pop
ss
jnp
fidivl
push
jmp
out
pop
and
movsb
mov
lea
fmull
test
pop
sbbb
mov
dec
add
das
cmpsl
bound
dec
xchg
adc
es
lcall
insb
out
in
add
call
push
dec
aad
jno
fs
sti
add
lret
enter
xchg
fistpl
add
adc
push
add
in
ljmp
dec
sub
in
fld
mov
inc
cmc
xor
lcall
stos
or
lods
cmp
sub
xor
mov
sub
cmpsb
push
nop
pop
inc
mov
mov
subb
adc
add
jecxz
pop
adc
adc
jmp
icebp
inc
jb
clc
into
call
and
push
push
inc
jg
or
enter
mov
and
in
stos
add
fistpl
mov
jbe
es
add
dec
nop
lret
les
adc
mov
jge
lcall
popa
push
push
movsb
inc
enter
jbe
push
addr16
cltd
fisubs
mov
out
frstor
mov
xor
sahf
push
jne
std
rcrb
adc
add
mov
cltd
mov
push
cmp
mov
xchg
aas
cmc
pop
insb
sahf
out
mov
ret
sbb
add
pop
in
xchg
int
xchg
pop
fisttps
insb
sti
scas
inc
cltd
adc
sahf
push
xchg
pop
inc
pushf
mov
push
nop
fcmovnbe
and
fwait
das
sub
test
stos
inc
jne
cs
mov
adc
loop
mov
into
aaa
jne
scas
in
loopne
cmp
add
popa
loopne
xchg
fadd
pop
or
mov
stc
sarb
addb
mov
push
jae
mov
push
add
mov
shll
push
sub
jae
mov
scas
cltd
es
inc
adc
test
push
xchg
gs
out
popf
ret
sub
cmp
push
orl
and
fcom
jl
pop
inc
inc
dec
sub
add
pop
mov
repnz
jns
cmc
loope
push
in
ja
mull
adc
jmp
in
inc
inc
mov
jecxz
cwtl
jne
jb
xor
je
and
cli
inc
push
mov
jb
adc
enter
xchg
mov
aaa
jge
cld
cmp
data16
sub
in
idivl
mov
dec
shrb
test
push
fs
ret
xor
or
test
adc
out
ljmp
mov
pop
add
in
pop
xchg
mov
movsb
mov
std
dec
insb
dec
mov
cwtl
out
jbe
out
dec
pop
jbe
mov
fidivs
push
ljmp
lds
or
mov
fidivs
call
shl
cmp
xchg
push
add
cmc
inc
ret
inc
adc
xor
ret
or
adc
and
xchg
jne
loope
das
dec
test
jae
scas
cmp
mov
dec
pop
lcall
xor
or
jnp
push
lea
loopne
inc
push
daa
negl
jo
les
dec
xor
ffree
mov
and
sbb
mov
fcompl
cwtl
mov
loopne
cli
sub
inc
test
sti
pop
and
cli
push
js
cld
jle
push
aad
mov
xchg
and
lcall
mov
adc
sti
push
out
cmpsl
pop
mov
mov
xchg
jg
mov
jbe
sub
mov
in
jmp
lea
nop
lock
lret
fcoms
jo
sbbb
pop
mov
mov
movl
pop
mov
in
lods
enter
nop
shr
ret
andl
push
mov
dec
test
into
data16
lfs
jne
cltd
add
jo
xchg
mov
mov
or
push
fisubrs
lahf
or
imul
aas
call
mov
loopne
pop
mov
mov
push
sbbb
ss
dec
and
lds
imul
mov
inc
data16
sub
loope
hlt
out
test
lret
ret
lds
in
lret
call
out
push
test
test
fwait
insl
pop
xchg
das
je
lds
xchg
pop
in
ficoml
addl
mov
hlt
sbb
mov
loop
pop
cld
add
sbb
or
push
mov
js
pop
int
sti
mov
mov
jo
in
mov
pop
hlt
add
lcall
cmp
fucom
adc
cmpsb
ret
lahf
loop
scas
jb
loop
cmpsb
push
in
mov
jl
and
pop
inc
xor
push
jns
cmp
mov
mov
push
dec
jg
lret
cwtl
mov
jnp
pop
and
mov
mov
cmp
mov
xor
call
cmpsl
jno
dec
mov
outsl
or
jle
icebp
jg
mov
mov
in
in
sub
mov
cmc
imul
fiadds
xor
xchg
shrl
mov
ds
cmp
xor
and
insb
mov
xor
mov
aad
dec
ss
mov
push
inc
stos
xor
aas
xchg
or
lahf
and
adc
mov
lock
or
push
push
cmpsb
in
mov
loop
loope
pop
int
adc
test
loopne
push
roll
push
mov
and
into
adc
sub
lods
filds
fidivrs
fwait
jbe
repnz
pop
mov
xor
pop
and
fldenv
mov
stc
fstpl
adc
fwait
enter
iret
cmp
xchg
adc
into
cwtl
sub
enter
sti
movsl
inc
adc
je
test
xor
cmp
mov
ja
std
lret
lret
sahf
dec
loop
out
mov
sbb
or
repz
mov
adc
inc
xor
cwtl
xor
push
jo
adc
lret
dec
mov
or
cmc
test
mov
test
mov
test
push
out
pusha
stos
movsl
add
xor
push
sub
cmp
dec
bnd
adc
pop
xchg
mov
cmp
jmp
inc
out
pusha
dec
xchg
push
loop
xor
dec
pushf
sti
push
adc
leave
mov
xchg
outsl
outsb
bound
mov
negl
lea
add
and
sahf
sub
mov
pop
fs
dec
cmc
mov
rep
std
sub
add
jbe
cmpsl
ficoml
test
lock
cmpsb
cmp
fucomip
xchg
fwait
dec
sbbb
push
testl
adc
mov
rol
mov
dec
cld
rcll
sbb
cmp
xchg
inc
sbb
je
push
push
mov
clc
std
mov
jns
mov
sub
test
hlt
add
jecxz
xchg
mov
inc
std
lcall
xchg
and
mov
rolb
arpl
loopne
ja
adc
icebp
je
mov
and
mov
aaa
jecxz
jnp
dec
push
fisubrl
movsl
stc
repnz
dec
mov
icebp
xchg
xchg
cmp
ficoms
cmp
dec
rorl
mov
add
dec
pop
mov
dec
inc
out
bound
mov
or
or
jmp
ret
movsl
test
cmp
stos
add
inc
mov
lret
sub
inc
ljmp
cli
mov
jno
jmp
mov
jecxz
add
daa
ljmp
rcr
mov
sub
or
popa
push
mul
pop
mov
mov
pop
xchg
mov
adc
mov
subl
cmp
ds
mov
cmpsb
pushf
ss
lea
lock
inc
fcmovu
xchg
add
jmp
cwtl
adc
add
fwait
mov
mov
adc
ja
insl
pop
xchg
pop
sub
inc
mov
push
sbb
jecxz
ret
jno
add
sub
clc
sbb
pop
add
aaa
cwtl
sbb
fldcw
ja
int
int
xlat
pop
xchg
into
dec
aam
adc
push
dec
jle
and
lods
cltd
jns
inc
fcomps
add
add
push
and
cmpsl
dec
popa
mov
mov
test
fs
sub
mov
lds
add
dec
enter
sbb
and
lock
sarl
addr16
test
mov
xor
bnd
jge
dec
stc
loop
dec
or
cli
pop
dec
imul
mov
std
pop
inc
mov
jecxz
xchg
lahf
loop
pop
cld
es
fcmovnu
fs
outsb
mov
stc
orb
push
cmp
dec
mov
sbb
cld
cmp
aaa
inc
cmp
xor
lock
push
mov
outsb
mov
cmp
sbb
sarb
bnd
shl
pause
das
push
cmp
push
fs
and
and
ret
xchg
shlb
ja
mov
add
xchg
jne
lods
inc
mov
int
roll
insl
outsl
rclb
jns
call
mov
clc
jge
fdivl
dec
add
inc
xchg
test
push
insl
in
arpl
jns
out
jl
dec
push
jo
sbb
adc
pop
adc
xchg
add
sbb
dec
iret
and
xchg
es
ja
inc
jne
mov
cmp
cs
cmp
mov
inc
movsb
adc
dec
outsb
popa
mov
dec
fdivs
jb
pop
mov
mov
xchg
push
pop
mov
notl
lods
dec
nop
loope
decl
in
popf
mov
lret
ud0
ffreep
push
std
jl
dec
into
xchg
mov
mov
and
stos
cmp
adc
xor
sbb
div
cwtl
mov
cli
jp
daa
cltd
mov
pop
mov
loop
out
ret
push
xor
mov
xchg
stos
sub
push
xchg
sarb
clc
sub
jb
dec
data16
aaa
jle
cmpb
out
push
mull
mov
jns
out
jno
enter
push
loop
cmc
sbb
xchg
mov
xchg
xchg
in
popf
jge
hlt
fs
xchg
test
mov
clc
nop
bound
add
cmp
or
dec
or
ss
shld
mull
je
iret
adc
adc
pop
int3
xor
cmp
fldt
pushf
adc
data16
pop
xlat
cmpl
xor
and
adc
pop
sahf
mov
je
jg
add
mov
clc
pop
and
outsl
add
aaa
nop
pop
int
sub
mov
shll
repz
mov
jno
push
divb
insb
into
out
aad
xor
dec
dec
push
push
inc
add
sub
outsb
or
jns
sbb
in
jae
sub
movsl
repnz
mov
jg
lcall
ror
mov
dec
sub
xlat
and
das
scas
test
bnd
maskmovq
testl
push
es
imul
adc
sbb
testl
scas
mov
ret
sbb
test
dec
fwait
lea
shlb
and
mov
popf
lds
inc
es
stos
mov
pop
loop
pop
repz
loop
xchg
in
gs
movsb
jle
pop
fimuls
rclb
add
fwait
pop
and
stos
je
idivb
mov
fildll
sub
xchg
xchg
fcoml
cmpsb
adc
into
dec
andb
loope
cmp
xor
inc
ficoms
xchg
aaa
imul
incl
cmp
dec
test
aam
mov
adc
ss
and
loop
jl
pop
or
sub
sub
in
inc
movsl
es
scas
mov
ds
test
xor
nop
clc
cmp
rcll
push
xchg
in
pop
and
add
in
push
xor
jp
mov
repz
xor
sbb
jbe
xchg
rcrb
pop
xor
cwtl
xchg
sti
mov
jnp
inc
nop
sub
xchg
iret
sti
sbb
data16
bnd
inc
mov
clc
test
push
pop
filds
pop
leave
cmp
dec
int3
mov
sbb
push
negb
mov
pop
cmp
dec
test
cmp
cs
jbe
inc
sbb
xchg
push
lea
jne
not
pop
fstps
idivb
jae
or
dec
mov
push
je
into
sarl
cltd
outsl
and
inc
push
xchg
mov
shr
and
repz
jle
fldcw
mov
icebp
mov
sbb
in
sahf
sahf
lret
mulb
jl
jo
rclb
jno
mov
notb
mov
mov
shr
cli
mov
in
sub
mov
orb
mov
xor
sti
cs
xchg
push
jge
xchg
pop
sbb
add
test
nop
fs
sti
add
es
stos
jp
xchg
in
gs
push
mov
mov
inc
sub
testb
ret
aad
int
in
pushf
mov
int3
add
sti
clc
and
je
fsubrp
or
xor
cli
xchg
enter
pop
and
aas
pop
adc
or
xchg
mov
pop
xor
xchg
jae
fwait
lret
push
push
xchg
or
add
std
cmpsb
cmp
ret
mov
outsb
push
xor
test
push
imul
jge
inc
jg
push
dec
mov
cld
hlt
cmpsl
mov
out
or
mov
out
jb
loop
cmp
pop
bound
hlt
mov
and
shr
ds
pop
sbb
pop
fsubrl
fs
or
out
repnz
loope
ds
inc
ljmp
jo
call
adc
ret
adcb
stc
test
mov
pop
loop
cld
arpl
xor
les
loope
ret
cmpsl
outsb
inc
lea
icebp
cmpsl
ljmp
jmp
xor
dec
in
push
xor
cmp
lret
leave
push
test
shlb
and
pop
sbb
and
mov
insl
fidivs
cmp
dec
inc
mov
xchg
enter
xchg
jb
in
or
inc
sub
pop
sub
ret
int3
xchg
lcall
jnp
or
lods
sbb
xchg
add
stos
mov
sti
mov
inc
push
std
in
sbb
jno
std
int3
push
lret
fldl
cmp
aad
mov
jne
push
test
je
outsl
test
inc
imul
daa
idiv
sbb
scas
into
jmp
mov
sub
pop
or
cld
mov
fdivrs
or
data16
addl
jle
push
cwtl
cmc
lahf
mov
or
mov
mov
dec
bound
jmp
inc
ds
fnstsw
jne
mov
jle
cmc
out
sub
addb
fsubrs
fdivrl
roll
out
ficompl
and
imull
cmpsl
jecxz
dec
dec
fistps
imul
rolb
out
add
scas
loop
push
in
int
sub
rcrl
arpl
push
jo
sub
adc
in
cld
stos
and
pop
adc
cmc
sbb
pushf
mov
in
mov
sbb
insl
loop
out
dec
push
dec
lahf
out
xchg
mov
or
jp
jo
add
xchg
adc
jb
rcll
push
adc
pop
outsl
pop
and
cmpsl
outsl
push
cmp
jnp
lods
or
lock
das
dec
nop
sbb
cmp
xchg
lock
movsl
mov
or
dec
scas
mov
in
push
aam
out
scas
adcl
cmp
sub
int
mov
mov
jne
cs
sub
mov
sub
push
xchg
lcall
push
mov
and
sub
jmp
out
out
mov
in
lods
adc
xchg
adc
icebp
xor
aad
sub
push
cmp
outsl
mov
jp
pop
fneni(8087
and
sub
sub
cwtl
inc
gs
xor
aam
inc
sbb
mov
call
outsl
shl
aaa
insb
mov
mov
sub
jnp
cmp
dec
xadd
jb
subl
cs
faddp
iret
sbb
xor
cmpsl
pop
or
or
ljmp
jmp
or
add
push
cs
movsb
add
flds
cwtl
xchg
xor
mov
js
push
sbb
pop
test
imul
mov
adc
sub
pop
pop
inc
test
add
popf
cmp
out
and
roll
movsl
xchg
push
stc
call
cmp
fdiv
or
imul
xchg
or
pop
test
sti
and
cmpsl
add
lods
mov
cmp
xchg
push
and
roll
loop
adc
fmulp
movsb
mov
add
cld
fisttpll
aam
pop
arpl
lea
pop
cmp
in
iret
jno
push
push
loope
sub
insb
dec
ljmp
xlat
lahf
lea
xor
in
push
vpminsb
ds
mov
cmp
cmp
add
mov
or
scas
int
mov
sub
lods
mov
icebp
sub
jl
nop
in
test
cmp
mov
push
pop
addr16
mov
cmp
nop
xor
cmpsb
popa
out
fidivl
or
popf
xchg
hlt
je
movsb
test
mov
iret
arpl
sub
jle
cmp
es
loopne
les
arpl
sub
add
fidivrl
call
decl
mov
shr
ret
dec
add
jl
lods
cmp
popl
pop
fwait
xchg
pusha
pop
mov
mov
push
mov
dec
ret
fistpll
clc
xor
cmp
ret
mov
and
leave
lret
in
out
dec
sub
daa
cmp
push
fs
sbb
mov
ret
iret
xchg
rclb
adc
mov
sti
in
cwtl
out
xor
sub
mov
les
clc
sbb
repz
mov
repnz
orb
xchg
inc
imull
lds
xchg
dec
add
xlat
out
xchg
push
mov
dec
xchg
inc
shrb
xlat
xor
push
sub
push
xor
ret
push
mov
mov
gs
and
jo
ds
xor
mov
sarl
pop
or
add
dec
pushf
push
or
sub
push
js
dec
in
sbb
shll
enter
xchg
into
lret
inc
hlt
mov
xchg
mov
jae
inc
inc
mov
sub
fs
or
in
xchg
lcall
cmp
xor
sbb
imul
inc
test
test
repnz
push
popf
sarl
adc
sub
mov
xor
loope
cmpsl
mov
je
cmp
repnz
jns
mov
sbb
pop
aam
mov
push
cltd
cmpl
ret
dec
jl
jbe
in
adc
and
jge
test
pop
mov
addl
pop
xchg
pop
cmc
aad
in
push
fcom
xor
mov
xor
mov
rolb
lea
faddp
sub
test
subl
lcall
push
xchg
add
les
mov
mov
sbb
stc
insl
fsts
jb
aas
xor
sub
inc
and
fcoms
adc
stc
sub
fcmovbe
ret
or
pop
sahf
ljmp
ljmp
es
pop
loopne
and
ret
out
arpl
jo
adc
loopne
int3
xor
push
imul
cmp
jns
cmp
sub
aas
es
xor
je
mov
rclb
push
pop
lock
lret
mov
test
xchg
push
lret
cmp
jo
jmp
xchg
mov
mov
out
hlt
lcall
fucomi
scas
lods
aaa
lret
inc
and
pop
imull
dec
push
bound
push
mov
add
clc
mov
xor
cwtl
xor
and
mov
test
mov
lock
inc
std
inc
pop
dec
data16
inc
mov
lock
add
shll
inc
inc
mov
mov
adc
jnp
pop
lock
icebp
addb
add
cmp
std
in
sbb
aam
in
fnstcw
push
lock
jl
scas
roll
dec
dec
inc
sbb
mov
cmovs
push
xchg
push
mov
decl
push
push
jns
or
adc
fisubrl
ss
jmp
or
push
jae
fs
add
jne
enter
jecxz
pop
inc
mov
adc
cmp
lahf
inc
mov
insl
fcomp
xor
sub
add
mov
ds
cmp
push
mov
pop
jnp
add
and
push
les
data16
sbb
loopne
pop
punpckhbw
sbb
cli
test
dec
pop
sub
movsb
test
pop
pop
gs
dec
cmpsl
adc
imul
push
push
dec
inc
imul
cmp
ss
icebp
sbb
dec
mov
andl
cmp
pushf
arpl
pusha
bound
shlb
scas
les
test
ret
mov
sti
mov
iret
insl
xchg
dec
fidivs
fiaddl
nop
test
stos
nop
out
leave
mov
fwait
adc
pusha
movsl
xchg
adc
jle
les
stos
pushf
fisubl
cmp
xor
in
lea
jp
neg
out
jne
or
cmp
in
pop
testb
rol
jbe
sti
jo
or
mov
out
jl
xor
aas
cmp
das
rorb
pop
mov
mov
aaa
dec
adc
sub
adc
arpl
and
sub
mov
sub
call
mov
or
cmp
test
jo
push
gs
adc
cmpsl
jbe
mov
cmp
cmpsl
pushf
loopne
xor
ficoml
xor
fs
add
shlb
fcmovu
inc
addr16
mov
sahf
jno
mov
cmp
je
adc
and
jecxz
lcall
cmp
les
pop
js
dec
rorl
aam
pop
in
aad
addr16
daa
jp
imul
lock
pop
imul
add
pop
jmp
cld
or
inc
jns
stos
popf
xchg
inc
stos
sahf
sbb
jecxz
pop
add
int3
dec
in
push
jbe
mov
cmp
ret
sti
sar
mov
js
adcl
lret
mov
inc
mov
popf
out
dec
sub
mov
jbe
fsqrt
hlt
pop
nop
fs
dec
fs
and
leave
lret
ds
fcoml
pop
and
dec
outsb
sub
dec
mov
test
ficompl
push
rcll
xorl
ret
mov
ss
fcoms
jmp
pop
mov
aas
ja
imul
push
cmp
testb
fbstp
mov
cs
sbb
or
mov
jno
call
xor
xlat
lods
mov
mov
and
mov
xor
mov
icebp
mov
rcr
int
jg
mov
and
jae
mov
xchg
cmp
in
jbe
es
lret
or
cwtl
mov
xchg
mov
out
fstl
jns
ds
out
inc
test
pop
sbb
and
les
sub
fs
insb
mov
iret
mov
test
int
dec
and
xchg
cmp
int3
jmp
pop
ror
lahf
pop
push
inc
push
test
lock
and
movsb
imul
push
out
sub
jg
hlt
das
pusha
cld
mov
fidivl
jb
pop
sub
cltd
movsb
imul
fisubrl
cmp
std
sub
xchg
sbb
fisubl
cmp
notl
sbbb
adc
scas
aam
mov
xchg
push
jecxz
jmp
push
and
jmp
dec
mov
mov
mov
sbb
push
and
stc
adc
mov
xor
fs
sub
jge
out
movsb
rorl
shrb
cwtl
dec
pop
repz
inc
jecxz
or
jle
in
les
out
arpl
lcall
fsts
xor
inc
or
sub
dec
xor
lret
aaa
jmp
adc
dec
push
mov
outsb
std
pop
push
scas
jmp
cltd
scas
pop
dec
aam
add
inc
insl
pop
scas
sub
push
xor
mov
xchg
imul
xorb
inc
mov
sbbb
sarb
xchg
mov
jle
cli
popf
lods
cli
cld
push
das
push
repnz
inc
xchg
jmp
jno
cmp
int
mov
cmp
imull
out
add
mov
call
mov
leave
adc
js
and
push
gs
fldl2e
sti
iret
out
lods
ljmp
out
adc
test
lahf
sub
std
add
out
pop
sbb
mov
pop
mov
dec
lock
push
into
rclb
adc
xlat
sub
stos
mov
pushf
jecxz
add
jecxz
fndisi(8087
cmc
push
mov
mov
rcll
add
push
jno
out
xor
in
pop
ret
pop
xchg
fwait
xor
mov
pop
fwait
dec
cmpsb
std
das
flds
stos
mov
sbb
mov
movsl
popa
dec
sbb
icebp
int
adc
push
push
jae
push
shlb
dec
xor
xchg
dec
enter
xor
xor
mov
out
add
cmp
inc
push
mov
inc
adc
mov
hlt
xor
ds
mov
cmc
lds
push
push
divl
or
xor
push
lds
out
ret
push
pop
cmp
pop
jnp
ljmp
push
mov
sub
lods
pushf
xchg
insl
rcll
daa
sbb
cli
pop
pusha
pop
adc
jae
push
inc
movsb
mov
cmp
cmpsb
jge
subb
adc
sti
and
jecxz
pop
out
xchg
fcom
pop
or
jmp
sub
jg
test
add
jecxz
addb
outsl
stos
test
mov
mov
mov
inc
test
and
adc
lock
cli
int
cmc
mov
xchg
fcomp
pop
adc
xchg
mov
and
push
lods
imul
pop
aas
dec
popf
cli
dec
fsubrl
testb
cs
mov
lods
jp
dec
fdecstp
out
dec
add
jns
adc
jmp
cmp
pop
or
lds
out
mov
lods
in
mov
test
push
lret
jg
loope
or
mov
xor
mov
dec
inc
push
int
cltd
into
jmp
jae
mov
lods
pop
das
pusha
out
test
addl
mov
cmp
sub
mov
nop
aas
add
cmp
mov
xchg
cmpsl
fs
add
pop
stos
cltd
push
std
dec
push
rcrb
fildll
dec
jb
aam
pop
xchg
hlt
and
add
xor
hlt
mov
or
ret
dec
mov
and
mov
inc
cld
sbb
movsl
mov
jbe
shrb
ficompl
out
sub
vmwrite
inc
ds
cld
or
ret
push
out
pusha
adc
lods
mov
ja
sub
dec
jno
cwtl
fs
sub
leave
scas
mov
xchg
js
cmp
mov
pushf
dec
mov
cmp
repz
lods
ja
dec
test
dec
jg
fsubrp
mov
push
mov
inc
sub
test
rcrl
nop
jmp
cmp
inc
mov
and
stos
pop
pop
gs
mov
test
lcall
cmp
dec
test
push
xchg
mov
cmp
gs
loope
bound
cmp
outsl
sbb
push
push
int
mov
cltd
pop
pop
pop
adc
lds
icebp
and
andb
adc
fnstcw
popa
inc
out
sub
mov
and
out
popf
or
and
jbe
sub
in
jbe
ret
pop
or
mov
movsb
xlat
jmp
inc
aam
sahf
jge
xlat
pop
stc
addr16
mov
into
in
jae
lcall
push
sub
push
mov
adc
cld
mov
cmpsl
pop
fadds
enter
incl
mov
mov
out
jbe
or
popf
cmp
mov
jecxz
aad
push
and
in
push
clc
cltd
cmp
aaa
add
jmp
xchg
in
sbb
mov
jae
test
mov
rcrb
testl
je
dec
xor
test
push
dec
mov
stos
out
test
jl
lea
mov
rol
add
dec
cmpsb
or
imul
fadd
test
push
test
in
or
test
xor
sbb
scas
sbb
push
or
sub
mov
pop
loope
sbb
jae
mov
das
inc
aaa
mov
outsl
jnp,pt
jae
movb
add
subb
mov
sub
push
pop
xorl
cmp
lcall
or
cmp
sbb
mov
shrb
daa
repz
mov
rolb
scas
dec
lods
pmaxsw
mov
arpl
in
cmpsb
stos
clc
movd
movsl
lret
insl
hlt
mov
insb
xchg
fildll
dec
fnsave
pop
nop
es
mov
xchg
movsb
inc
mov
inc
and
insl
inc
repnz
push
test
int3
xchg
pop
xchg
cmp
dec
sbb
xchg
js
test
push
loopne
and
pusha
adc
push
mov
pop
cmpps
pop
fbld
push
xor
sub
pop
repnz
mov
xchg
xchg
fwait
in
adc
mov
dec
in
inc
std
xor
cltd
bound
loop
rorb
sbb
pop
inc
lods
dec
xchg
lods
repnz
push
test
push
lahf
mov
aaa
pop
out
mov
lds
mov
inc
addr16
mov
mov
pop
add
mov
sub
cltd
xchg
lcall
out
dec
push
icebp
xchg
daa
jg
fwait
lahf
sub
enter
jge
mov
xor
out
addr16
ss
lock
fcoms
or
movsl
sub
test
adc
jp
fisubl
out
and
loopne
mov
lcall
enter
and
into
jae
addb
imul
push
repz
inc
mov
mov
and
mov
insb
popf
mov
and
jno
push
movsl
fstpt
aas
xlat
cmp
xor
dec
rcr
cmp
rcl
sub
stos
pop
cmp
hlt
lods
pop
fisubl
add
push
pusha
cld
sahf
mov
inc
adc
mov
fwait
jb
xor
inc
mov
and
outsb
insl
loope
test
das
push
mov
fldcw
pop
mov
cmpsb
jae
lods
xchg
cltd
fists
roll
cmpsl
xchg
mov
cli
stc
dec
jg
xor
jae
outsb
pop
movsl
or
mov
ret
cs
mov
mov
jbe
mov
sbb
dec
sub
loope
fidivrs
adc
xchg
ret
addl
cmpsl
mov
add
jmp
jno
mov
stc
inc
pushf
outsl
inc
ja
scas
icebp
cmp
xor
ljmp
dec
pusha
in
movsl
xor
sub
jecxz
inc
cmp
mov
cmp
pop
jmp
push
and
sub
aaa
sbb
mov
lcall
hlt
das
mov
jl
jmp
sti
mov
sbb
pop
add
scas
mov
pop
xchg
xchg
or
dec
pop
ss
jl
xor
add
inc
sbb
adc
enter
dec
xchg
inc
jne
push
pop
push
ss
imul
icebp
notl
xor
mov
outsb
xchg
dec
mov
pop
hlt
stos
je
ja
rorb
fs
lock
fcomps
dec
cmpl
scas
das
addl
and
add
mov
lret
je
mov
xor
dec
lock
or
add
dec
sub
and
sti
scas
xor
sub
mov
inc
add
subb
jnp
xchg
mov
aad
and
jle
aas
loop
push
filds
ret
movsb
icebp
in
jl
movsb
push
jb
mov
daa
ror
cmpsl
pushf
cld
cld
add
mov
sub
jno
bnd
fwait
into
mov
xchg
jb
push
in
cmp
jl
sub
data16
das
adc
push
push
ret
cmc
sbbb
cmp
mov
pop
xor
xor
add
mov
popf
push
cltd
mov
cs
popf
enter
sbb
mov
mov
or
and
mov
fxch
ret
jae
adc
fwait
cmp
mov
cwtl
mov
add
fdecstp
setl
outsl
cwtl
or
pop
bound
outsl
dec
adc
sbb
xchg
ret
push
cmp
mull
cmp
cmp
push
nopl
jno
out
ss
pop
lcall
std
or
mov
movsl
cmp
jbe
in
xor
popf
scas
jl
mov
dec
repz
incl
in
mov
mov
xchg
lods
xchg
mov
dec
jp
ret
add
pop
dec
and
sub
aam
lret
lea
cwtl
inc
pop
out
dec
sbb
push
and
pushl
punpcklbw
jge
xor
mov
xchg
jnp
sub
mov
fldcw
ja
das
out
mov
push
stos
sub
sbb
bound
enter
mov
neg
int
xor
jle
les
xchg
lods
hlt
ss
aaa
mov
xor
jmp
cmp
fimuls
pushl
mov
adc
in
loope
leave
push
hlt
mov
iret
push
ret
xchg
push
xlat
mov
scas
inc
scas
loope
push
push
mov
mov
inc
sub
cmp
aas
mov
dec
es
rcrb
pop
pop
sub
pop
ljmp
jl
pop
or
ret
dec
cmp
fnstenv
push
mov
mov
or
mov
mov
lods
cmp
les
sbb
es
mov
aas
aad
dec
sbb
inc
ss
push
das
jne
pop
jne
sub
dec
jp
mov
sub
add
int3
lret
sbb
ds
mov
cs
mov
lods
out
add
pop
out
andb
std
scas
push
jmp
shll
jmp
ljmp
jp
dec
cmpb
and
in
dec
mov
push
rorl
in
shlb
sbb
xor
mov
add
sub
gs
push
test
ret
sub
mov
loope
add
mov
cmp
dec
mov
out
add
repz
mov
lret
je
xchg
ret
jnp
or
push
add
xor
icebp
test
jge
jne
lret
rcrb
pop
and
add
out
jle
or
sbb
adc
fdivrl
dec
mov
cltd
inc
imul
jbe
xor
add
pop
inc
dec
jnp
imul
inc
cmpsb
aaa
pop
mov
or
adc
dec
dec
incl
aaa
enter
xchg
iret
add
mov
fnop
pop
insb
mov
or
iret
xchg
and
cs
aad
mov
fidivl
loope
je
xchg
lock
mov
push
jnp
and
pop
dec
push
or
push
mov
xchg
js
clc
xlat
sub
js
aaa
mov
ret
jle
or
jae
and
or
mov
popf
mov
jne
xchg
mov
aaa
ret
lock
mov
mov
data16
rolb
lret
lret
mov
xor
fsubl
scas
movsb
ljmp
mov
mov
adc
int
movsb
jmp
xlat
adc
mov
in
aaa
xor
inc
mov
notl
sub
data16
push
ss
push
cmc
inc
push
xor
or
mov
gs
imul
loopne
add
cwtl
push
push
or
xor
push
push
jae
insb
push
movsb
inc
mov
insl
test
aas
push
sub
out
arpl
add
insl
rep
pop
daa
cmp
das
adc
jecxz
pop
and
cmp
sbb
aaa
and
aad
and
ficoms
lret
les
les
ret
test
test
mov
mov
mov
jmp
nop
cmpsb
inc
pop
jp
cmp
loope
es
sub
xor
lds
dec
xor
and
mov
push
mov
mov
test
mov
movsb
xchg
adc
leave
mov
jnp
or
push
pusha
orl
loopne
lret
jne
orb
jno
sub
cmp
ja
inc
cmp
push
sti
sub
dec
loop
pop
mov
rcrl
mov
icebp
xchg
adc
adc
jp
and
jns
popf
push
pusha
inc
add
loop
cmp
jae
sub
jae
leave
mov
jnp
adc
adc
out
adc
xchg
cwtl
test
mov
sahf
ja
test
jne
inc
fisttpl
jno
dec
leave
and
bnd
inc
dec
lock
cmp
test
lahf
lods
and
xorl
flds
mov
test
shl
lods
in
outsb
ds
sti
cld
scas
push
or
loopne
or
subl
data16
xchg
or
cmp
out
sbb
pop
xor
in
andl
int3
jnp
mov
roll
int
xchg
popf
lahf
cmpl
outsl
out
in
xor
sbb
adcb
cmp
outsb
push
mov
es
daa
cltd
in
push
js
scas
cmpsl
mov
add
stos
mov
push
loopne
repnz
sbb
fucomip
loopne
sbb
mov
inc
fst
bound
dec
and
dec
push
or
inc
jae
push
ljmp
and
ljmp
sbb
popf
ret
xor
js
jo
les
jae
cs
sub
mov
push
sub
add
pusha
loope
lods
cwtl
rorl
mov
dec
scas
sbb
jle
scas
adc
or
jecxz
fsubrs
fnstsw
mov
ja
push
dec
push
sub
fadds
mov
jnp
xchg
cmpsl
cli
jle
fwait
mov
cmc
or
inc
adc
or
stc
or
pop
mov
pop
sbbl
test
out
cmp
lds
xchg
int3
mov
add
scas
inc
sub
pop
or
jle
mov
shlb
xor
ja
hlt
mov
cmovno
es
pushf
ds
rcr
js
mov
push
in
mov
adc
mov
cmp
nop
mov
jne
mov
xor
cltd
loop
pop
andb
add
insb
test
mov
mov
and
adc
fbstp
and
jnp
push
pop
pop
sbb
lahf
aam
subb
add
lret
push
das
adc
jnp
scas
je
adc
in
ret
inc
scas
jo
loopne
out
aam
adc
inc
or
call
push
sbb
pop
out
jbe
add
cmpl
push
imul
ljmp
or
lods
arpl
push
mov
dec
jbe
push
outsb
outsb
adc
adc
in
fcoml
add
lcall
pop
xorb
dec
insb
rcrl
icebp
call
movsl
mov
aas
dec
add
inc
divb
fs
mov
decl
sub
stc
in
jecxz
test
sbbl
or
stos
iret
lahf
xor
in
aas
sub
je
push
lret
cld
mov
xor
xor
sahf
or
call
outsb
jecxz
out
clc
into
inc
sbb
enter
lods
outsl
xchg
add
out
test
sub
shr
jno
int3
cwtl
adc
scas
lds
ret
dec
fs
jp
adc
sub
testl
movsb
stos
cli
jo
shlb
faddl
scas
mov
mov
insl
arpl
push
jae
roll
cld
and
stc
cmpsb
cwtl
xlat
testb
gs
jge
adc
ret
test
movsb
dec
lock
in
sbb
aam
mov
cmc
fbstp
loope
sbb
sub
jne
imul
jo
xor
jne
adc
mov
popf
fxch
jnp
in
cmp
fdivrl
movsb
test
divl
pop
bound
out
jl
aas
dec
popa
add
cmc
mov
je
lret
or
fmuls
cmpsb
and
mov
xor
insb
mov
adc
in
jp
sub
mov
jp
lcall
sub
push
stos
fs
shll
enter
in
xor
sub
sbb
lock
outsb
lds
test
movsb
xchg
sbb
cmpsl
js
sub
sbb
std
popa
inc
mov
mov
aad
notl
sub
orl
push
and
xlat
aam
outsb
fdivr
jbe
mov
jnp
bound
bound
push
loopne
xor
xor
ret
mov
jp
dec
lods
in
jmp
jne
cli
lcall
sub
add
mov
fists
lods
repz
jb
inc
into
and
pop
ds
jecxz
add
sub
jecxz
test
push
dec
in
test
ret
mov
inc
xchg
or
jbe
data16
nop
add
lcall
divb
aam
daa
pusha
out
jo
and
mov
les
xorl
mov
xchg
pushf
jl
insb
cmpsl
cmp
add
jo
jnp
sub
mov
push
shll
push
dec
mov
mov
mov
in
jle
and
inc
cmc
in
ret
sbb
jns
mov
ret
aad
es
xchg
testl
ljmp
xor
push
test
push
jmp
out
jmp
mov
mov
mov
loop
dec
dec
sub
jecxz
sbb
popa
popl
jl
xchg
xor
mov
or
adc
les
mov
pushf
out
cmp
enter
shr
in
xor
enter
in
aam
add
in
int
jb
rorb
fwait
mov
sbb
in
fisubl
push
aad
sbb
cmp
mov
shl
push
out
pop
mov
data16
and
out
xor
mov
int
dec
imul
pusha
jmp
or
mov
cmp
and
jno
test
out
and
sub
mov
movsl
out
jg
adc
mov
idivb
lcall
mov
or
into
mov
push
lret
lret
dec
clc
imul
test
pop
pop
jg
dec
ror
mov
imul
test
popf
sahf
ss
jae
arpl
jno
fcmovnbe
jmp
bound
mov
xor
sahf
leave
mov
mov
or
mov
mov
fisttpl
adc
jbe
stc
ret
or
shrl
mov
imul
xchg
mov
sub
dec
in
adc
or
push
ret
mov
rol
add
cmp
fsub
lahf
aas
call
xchg
lock
ds
daa
aas
fucompp
stos
jp
fdivrs
mov
pop
out
movsb
xchg
inc
rorl
mov
fidivs
loop
stos
and
adc
jb
popa
push
js
mov
scas
mov
pop
sbbl
popf
xor
das
sar
addb
jecxz
idivb
aas
idivl
jl
or
pop
cltd
in
mov
adc
and
mov
jo
or
aad
mov
dec
loop
xchg
addb
dec
lret
sbb
shll
jp
pop
fnclex
hlt
out
xchg
ret
adc
jne
mov
sahf
out
jnp
fwait
cli
rcrl
xchg
push
mov
lret
adc
jmp
mov
gs
inc
mov
stos
stc
adc
cmpsb
jmp
cmpsb
inc
sub
movsl
cmpsl
out
in
cwtl
cltd
mov
movsb
xor
xchg
push
inc
pop
inc
add
mov
adc
popa
scas
adc
pop
cmp
ret
xor
outsb
adc
pusha
sahf
addr16
fs
popa
not
movl
cmp
fcoms
fstpl
cwtl
cmp
imul
rorl
push
loop
mov
sub
add
cmpsb
mov
in
cwtl
movsl
dec
push
or
dec
jge,pn
xchg
cld
xchg
pop
pop
pop
mov
sub
add
stos
xchg
pop
push
fisubl
xor
mov
mov
cmp
jne
das
pusha
xlat
jnp
cmpsb
push
xchg
nop
stc
insb
add
jbe
out
adc
iret
jecxz
inc
loopne
mov
xchg
in
push
dec
in
mov
mov
and
mov
nop
out
mov
jo
sub
inc
add
data16
fs
scas
push
into
rcrl
push
inc
or
cs
sti
xchg
loope
jnp
cmpl
cmp
out
push
sbb
or
outsb
std
xchg
pusha
loop
mov
push
les
and
insb
mov
xchg
pop
cmpsb
sbb
fdivs
mov
int3
stos
sub
mov
xchg
xor
fnstcw
outsl
add
stos
std
add
mov
mov
push
xchg
and
lret
or
out
test
sub
scas
add
mov
mov
lods
jge
ss
or
call
mov
cmpsb
inc
imul
xchg
lods
fs
and
jmp
out
or
imul
test
leave
rcr
adc
xchg
popa
sub
fstpt
clc
jo
dec
aad
insb
cmp
cltd
out
lds
into
in
orl
mov
out
fxch
loopne
mov
lcall
jmp
scas
mov
mov
sbb
nop
mov
insl
popf
and
jg
adc
cmp
mov
pop
rolb
and
push
test
and
push
repz
adc
mov
mov
jo
rcr
dec
fdivrl
bound
mov
pop
sub
or
sbb
sub
lds
xchg
je
fldcw
mov
sbb
stos
push
ret
pop
cmp
les
pop
adc
int3
les
jnp
hlt
stc
fs
xchg
lcall
xor
aad
sbb
adc
or
cli
fidivl
push
fldcw
mov
push
jns
pop
push
cld
push
repnz
adcl
jno
mov
fdiv
add
lret
stc
inc
sbb
xor
adcb
jns
and
cmp
je
pop
lods
or
hlt
subb
add
xchg
add
ret
mov
hlt
mov
repnz
sub
cmp
stc
pushf
bnd
test
push
mov
lods
cwtl
xor
imul
fstps
in
sub
addl
and
mov
mov
ret
xor
push
adc
scas
mov
loope
imul
sub
push
hlt
dec
imul
adc
jecxz
sahf
xchg
xchg
arpl
scas
cmp
sub
or
cmc
cmp
das
shl
stos
pushfw
mov
adc
dec
imul
test
bound
sahf
xchg
leave
fwait
imul
cmp
sahf
scas
insl
dec
fsub
movsl
jo
adc
mov
or
pop
mov
rcl
shl
or
mov
xchg
sarb
fiaddl
jbe
cmp
xor
push
sbb
cwtl
add
add
movsb
sub
fmull
into
push
int3
sbb
in
mov
ss
xchg
xchg
push
sti
faddl
sbb
inc
mov
test
mov
cltd
ret
mov
add
in
test
xchg
mov
adc
cmp
dec
movsl
aad
lahf
dec
adc
sub
pop
clc
pop
sub
xor
push
push
push
scas
push
mov
fwait
nop
add
dec
adc
and
stos
cvtdq2ps
cmp
flds
cmp
jne
mov
jb
mov
sbb
aas
lret
loopne
jne
lahf
and
mov
sbb
xchg
loopne
xchg
adc
rcr
add
inc
xchg
stc
pushl
cmpsb
dec
jge
pushf
jp
js
test
mov
mov
lahf
dec
repnz
rcrl
xor
bnd
pop
imul
movsl
popf
call
stos
push
leave
jle
bound
mov
into
jge
push
cmpsl
rorb
pop
pop
pop
xchg
cmp
inc
fiaddl
pop
loop
adc
mov
fbstp
ret
ljmp
push
lock
cmpsl
ljmp
mov
jbe
mov
pop
pushf
movsb
sub
push
imul
aam
xchg
pop
pop
adc
dec
lahf
dec
cmp
fs
adc
xchg
add
out
fwait
and
xor
cmpsl
or
mov
and
enter
push
cs
mov
jne
lahf
cwtl
dec
sub
sub
jae
mov
push
bound
or
jb
add
out
xor
dec
mov
ret
jmp
mov
mov
cmp
mov
jne
mov
insb
or
and
sub
sub
ss
sbb
fisubrs
ja
sbb
push
ret
inc
mov
inc
jl
mov
jp
add
jnp
xchg
xor
not
in
movsl
pop
sbb
adcl
xchg
imul
in
push
mov
out
inc
dec
jne
adc
repz
pop
std
and
xchg
pop
popf
mov
inc
or
orb
inc
lcall
mov
fadd
aad
xor
xorl
lods
mov
push
pop
adc
aaa
xchg
adc
shrb
ljmp
adc
negl
std
outsl
xlat
adc
xor
cwtl
mov
fistpll
adc
inc
cld
gs
ret
mov
mov
imul
inc
sub
pop
fs
jne
and
dec
mov
mov
stos
shll
out
sahf
or
out
mov
pop
xor
cmpsb
dec
dec
add
aam
ja
rolb
sahf
popa
insb
lock
push
pop
inc
icebp
loopne
popf
nop
xor
push
mov
addr16
or
mov
out
mov
jae
inc
mov
cmc
and
pop
or
repnz
mov
pop
adc
movsb
cmpsb
shl
out
adc
daa
jae
incl
hlt
mov
pop
jo
add
or
sub
in
shrb
xor
shll
mov
nop
and
loope
jp
jg
rcrl
lret
test
xor
jns
pop
filds
ss
lret
inc
or
into
xlat
test
popf
loop
sbb
xor
lods
jmp
mov
int3
rorb
xchg
outsl
dec
inc
gs
mov
hlt
and
push
jp
arpl
xchg
jo
and
push
mov
ret
imul
std
and
sbb
int
xchg
das
fisubl
or
nop
icebp
jnp
rcll
scas
lcall
lret
pop
loopne
mov
xchg
cmp
popf
ss
xor
mov
cmpsb
or
push
inc
jl
divl
ja
push
pop
stc
addl
nop
adc
or
movsb
xchg
push
roll
shll
fisttps
mov
int
inc
mov
sub
cmp
cltd
test
add
mov
scas
inc
add
shl
inc
mov
ds
cli
adc
movsl
push
imul
mov
mov
inc
mov
je
enter
repnz
outsb
stos
popa
sbb
sub
cld
adc
movnti
xchg
cld
fwait
push
sbb
pop
jl
fdiv
mov
mov
mov
das
in
shrl
push
xchg
ficoms
sub
int3
outsl
xchg
mov
fistps
pop
mov
xchg
sbb
pushf
push
pop
insl
push
xchg
pop
sbb
inc
mov
stos
js
add
fidivs
enter
sahf
inc
mov
js
adc
xchg
out
dec
call
adc
test
lahf
repz
lods
cs
push
lret
jae
lds
mov
mov
and
jnp
es
push
add
xchg
fstpl
nop
dec
sbbb
adc
loope
mov
xchg
pop
pop
loop
cmovo
cwtl
push
es
add
gs
xchg
dec
mov
sbb
pushf
mov
cmp
leave
in
into
mov
ljmp
and
push
movsl
cmp
pop
cltd
data16
movsl
lods
add
pop
sub
inc
imul
stos
adc
add
jle
lods
pop
push
adc
lods
pusha
test
loope
ljmp
xchg
fstpt
jecxz
fiaddl
push
mov
xor
dec
lock
push
cmp
push
add
lret
call
pusha
jge
pop
in
or
scas
push
out
int
or
push
pop
and
jecxz
andb
push
in
and
sub
jle
mov
js
aas
test
ljmp
rcrb
xchg
mov
pop
cmp
jl
adc
cmp
out
cvtps2pd
mov
daa
addr16
and
jecxz
mov
and
decl
cli
dec
mov
clc
mov
push
add
idivb
add
jne
call
or
stc
mov
mov
mov
aad
mov
dec
jns
mov
stos
fs
jge
addr16
sbb
je
xchg
mov
jmp
adc
cmp
sbb
int3
movsl
cmc
inc
pusha
inc
mov
fwait
adc
sub
inc
pop
mov
inc
lcall
xchg
aas
mov
xor
inc
adcl
mov
xor
outsl
push
jns
mov
ficoml
mov
push
xchg
cli
in
and
cwtl
xchg
mov
adc
pop
mov
adc
test
fld1
aad
sti
imul
xchg
cmp
mov
mov
js
mov
lea
les
mov
mov
out
adcl
push
dec
sbbb
ss
roll
mov
and
cmpsb
mov
push
dec
mov
add
stos
out
test
or
or
sbb
ret
test
das
xor
dec
add
in
mov
or
adc
test
ret
jg
sbb
push
push
adc
dec
fisttps
sbb
stc
sub
es
das
xchg
and
dec
mov
cmc
leave
popf
adc
xrelease
pushf
jle
fsubrs
fwait
mov
les
push
pop
outsl
fmull
inc
pop
jns
mov
adc
jmp
xor
outsl
xlat
push
xchg
out
cmp
test
push
rolb
mov
inc
lahf
push
mov
mov
jns
pusha
pop
inc
ret
sarl
imul
jp
jb
push
inc
push
push
lcall
jae
int3
out
test
push
cld
xchg
rclb
sub
xchg
jp
repnz
dec
imul
xchg
pop
loopne
jae
push
xchg
xchg
cmpsl
jb
add
cli
out
mov
xorl
pop
dec
or
scas
fndisi(8087
lea
out
sub
dec
test
leave
or
push
data16
sti
bound
jb
sahf
mov
sbb
pop
xor
mov
lds
mov
fdivl
cmp
add
movsb
mov
mov
add
int
inc
and
xchg
aas
and
sbb
je
xor
stos
leave
imul
inc
nop
cmp
loopne
fsubrl
jo
outsl
push
lcall
cmpl
pop
jbe
pop
mov
push
sub
xor
and
pop
out
mov
jnp
adc
imul
adc
xchg
mov
cld
cli
ficomps
andb
cmpb
int
mov
adc
xor
inc
into
popa
cmp
jecxz
std
adc
enter
mov
mov
xor
push
pop
dec
adc
fiaddl
cs
into
fistpl
data16
insl
cmc
sti
cmp
not
call
in
xchg
inc
mov
stos
inc
setl
daa
push
jmp
sbb
or
cmp
ffreep
inc
sub
cli
mov
mov
flds
jecxz
scas
dec
inc
cmp
jl
into
in
in
ljmp
xchg
scas
inc
repnz
jne
fmull
sarl
repz
xlat
decl
sub
or
or
cmp
and
lahf
rcrb
fnsave
pop
pop
or
xor
dec
jg
iret
lahf
adc
lahf
stc
mov
xchg
insl
out
fidivs
cli
loopne
jg
fcoml
add
movb
data16
sbb
push
dec
shr
cmp
fwait
sbb
outsb
in
dec
inc
jnp
fistpll
cmp
sub
mov
sahf
pop
cmp
push
adc
inc
cmp
je
xor
pop
ljmp
mov
mov
fisubl
jno
cmc
mov
movsb
jl
repnz
inc
mov
imull
insb
jl
movsb
add
loope
jne
or
mov
adc
add
imul
adc
mov
add
or
clc
push
dec
lea
push
jnp
mov
cld
push
cmpsl
aam
pop
mov
ficoms
idiv
mov
xchg
add
cmp
pop
jb
imul
push
pop
mov
pop
pop
notb
ffree
in
jecxz
xchg
xor
rclb
into
test
out
xchg
sub
lds
leave
psllq
cmpsl
jb
in
movb
jnp
ret
adc
mov
mov
xlat
xor
dec
outsb
pop
lds
xor
lahf
dec
test
jl
sbb
fidivl
fdivr
movsl
fnsave
jae
jne
add
bound
imul
fs
lock
cmp
adc
push
cmp
or
push
pop
fimuls
lahf
roll
lock
daa
andb
gs
and
adc
push
adc
jp
loop
pop
adc
shll
pop
sub
and
insb
ss
aas
divl
jp
rolb
push
pop
xchg
das
and
cmp
jns
or
xchg
aaa
repz
xchg
jns
xchg
mov
adc
dec
out
push
add
mov
mov
pop
cmp
mov
mov
xchg
cmpsb
or
lret
shll
orb
pop
pop
lahf
ss
fwait
mov
jecxz
jle
xchg
inc
or
in
mov
xorl
jno
fidivs
mov
jecxz
daa
xchg
das
mov
xor
cmp
iret
fistpl
outsl
cmpsl
lods
pop
inc
scas
pop
je
les
loop
daa
movsb
mov
sarb
or
and
shll
lahf
push
pop
arpl
mov
push
jns
mov
fistl
jge
scas
movsb
pop
fadds
jmp
mov
lock
cmp
add
iret
stos
jle
shll
test
or
push
loope
test
leave
dec
into
out
xchg
add
es
addb
movsl
jecxz
loopne
xchg
lods
imul
pop
subb
fisttpll
dec
dec
dec
push
paddsw
add
int3
outsb
addr16
imul
xorb
dec
sbb
insb
mov
imul
les
lret
pop
cmp
test
cmp
outsl
stc
dec
pop
mov
sbb
dec
jae
add
add
mov
jmp
sub
or
and
lds
lea
mov
xchg
cs
popf
push
push
sub
add
lret
inc
lods
scas
or
cwtl
dec
lcall
or
add
aam
sbb
int3
mov
in
push
aaa
sub
lret
fcomp
popa
imul
push
mov
jmp
rolb
xor
push
jbe
jle
pushf
lahf
rclb
fisttpl
cmp
add
scas
into
cli
popl
xchg
jmp
roll
lcall
jp
aad
lods
cmp
clc
daa
dec
mov
arpl
xor
mov
sar
sub
xchg
mov
mov
dec
aaa
and
pop
jbe
adc
and
sbb
add
xor
std
mov
xchg
pop
cwtl
iret
jo
dec
nop
insl
out
push
bound
jge
int
test
jl
mov
gs
pop
daa
push
mov
sti
mov
add
adc
or
sbb
dec
fildl
das
rcrb
sbb
xchg
cmpsb
jl
xchg
movsb
shll
or
sbb
cmp
jge
fcmovnu
and
test
sbb
jno
push
fcomps
lahf
pop
icebp
out
pushf
mov
loope
xor
movsb
jne
mov
test
add
xchg
push
cmpsb
ljmp
mov
sbb
sti
into
popf
jmp
and
xlat
adc
addb
mov
sbb
mov
adc
xor
loopne
clc
loope
pop
lcall
cmp
inc
push
mov
push
jmp
fcompl
add
int
sbb
mov
into
add
and
or
jl
clc
dec
mov
daa
aam
repnz
rclb
imul
push
shll
jg
popa
aad
mov
popa
push
inc
push
lcall
mov
mov
add
push
push
fldl
cltd
mov
add
subl
daa
pop
dec
inc
push
sbb
sub
sbb
mov
vmovdqu
jo
dec
push
xor
lcall
mov
inc
mov
and
dec
pop
dec
lods
xchg
into
pop
mov
imul
movsb
out
lret
inc
sbb
shll
jne
mov
int
sbb
sbb
sti
stos
mov
sub
mov
xor
test
jb
pop
sbb
mov
cwtl
cmpsb
lret
fidivrl
mov
pusha
ret
pop
mov
or
xchg
mov
scas
iret
ja
sbb
aaa
inc
les
insb
ds
mov
xchg
lahf
and
inc
jge
sub
lahf
mov
imul
mov
outsb
aad
push
lahf
xor
push
ljmp
frstor
xchg
or
scas
lds
adc
cld
inc
repz
inc
loopne
das
das
sti
jae
insl
ja
mov
or
dec
adc
out
orb
aad
mov
rorb
mov
insb
inc
or
jbe
repnz
mov
decl
mov
push
fcomps
negl
mov
cmpsb
sahf
jno
dec
adc
popf
mov
into
test
cmp
pushf
test
xor
mov
scas
and
mov
or
shlb
xchg
push
xor
das
or
adc
bt
jnp
sbb
adc
filds
xor
cmp
mov
dec
in
mov
fs
cltd
cld
ret
std
jno
and
int
mov
outsb
pop
pop
mov
jl
pop
das
mov
stos
rcll
arpl
adc
dec
int3
pop
mov
add
int3
in
fldl
daa
loop
mov
fnsave
iret
push
cmc
sbb
std
les
cmp
mov
inc
sub
add
pop
mov
imul
sbb
inc
adc
scas
inc
push
js
mov
add
mov
push
mov
cmp
pop
mov
push
cmc
inc
xchg
scas
pop
xor
dec
sub
inc
movsb
loop
push
jl,pt
aam
mov
push
push
addr16
push
xor
push
cld
insb
pop
insb
xchg
pop
ss
stos
ja
jno
lret
or
sub
push
int3
mov
ja
rcll
rorl
fwait
scas
call
and
pushf
mov
cmp
std
push
push
inc
aad
cmp
dec
inc
stc
mov
jecxz
pop
dec
jecxz
add
rcl
jbe
sub
mov
push
in
xchg
out
out
jmp
subb
xor
scas
sbb
rclb
xchg
fdivrl
and
insb
pop
div
in
in
cmp
dec
xchg
inc
ss
insl
ss
fwait
mov
stos
loope
adc
int
dec
enter
stos
lret
pop
stos
ljmp
test
jbe
add
pop
fisttpl
mov
add
add
addr16
loopne
mov
jge
in
xor
pop
fldt
mov
adc
rclb
cli
lods
enter
push
cmpsb
imul
push
je
in
adc
rclb
xor
cmp
jae
jp
xorb
mov
cld
cmpsl
cmp
mov
dec
arpl
or
ds
dec
outsb
dec
xlat
aad
call
inc
test
sbb
aad
imul
fidivrs
inc
jle
movsb
xor
jbe
sub
imul
xor
inc
fistps
lahf
clc
in
std
hlt
sbb
dec
fs
icebp
adc
pop
pushf
cmp
mov
add
sbb
insl
pop
mov
aaa
call
push
sub
xor
mov
loopne
sub
xor
mov
testl
jle
and
mov
test
jmp
or
xlat
pushf
sahf
shl
rcrl
mov
jbe
negl
adc
std
cmpsl
push
and
mov
fsubr
xchg
add
movsl
or
cmp
mov
pop
aad
add
sahf
call
mov
mov
xor
addr16
jmp
mov
shll
jae
ret
adc
dec
sbb
and
stc
and
cli
movsb
mov
push
imul
mov
sub
lods
adc
xlat
std
movl
adc
mov
inc
adc
inc
call
and
cmc
sarl
sbb
lods
push
mov
pop
js
or
sahf
cmpsl
movsl
stos
xchg
stos
iret
pop
adc
mov
add
adc
xchg
push
mov
pop
inc
lcall
mov
push
mov
data16
in
mov
sub
sub
pop
cmpsl
insl
sbb
lods
cwtl
mov
in
dec
pop
push
shll
popa
ficoms
lret
cmp
dec
popa
fcmovb
xor
adc
mov
sub
jns
sbb
mov
lock
mov
lock
and
mov
rclb
shlb
bound
xor
pop
out
xor
jg
test
cmp
push
fcmovbe
add
mov
repz
add
or
mov
xor
nopl
aad
sti
mov
shl
jp
rcll
out
insl
sub
outsl
lea
out
mov
outsl
aam
mul
push
inc
add
push
adc
jmp
jmp
test
xchg
xchg
scas
and
push
movsl
jge
jl
icebp
mov
dec
loop
add
sti
sbb
dec
mov
out
divb
cmp
mov
mov
jbe
add
jg
icebp
test
ret
add
lods
movsl
loop
insb
push
clc
or
xor
out
sti
fstpt
stc
mov
cs
sbb
pop
int3
out
or
jnp
sti
shll
push
in
and
loopne
jbe
iret
pop
adc
mov
inc
mov
movsb
repnz
mov
nop
add
mov
cmp
out
inc
mov
xor
sbb
or
and
mov
cmp
jo
ret
mov
inc
in
ss
cmp
nop
mov
push
push
push
test
jbe
arpl
sub
xor
push
lcall
push
das
dec
rol
mov
add
cmpb
scas
add
sbb
popf
xchg
mov
fisubrs
jl
nop
pop
orb
xor
and
sbb
push
pop
fildll
push
and
push
inc
roll
andl
in
fnstenv
push
loopne
mov
mov
pop
gs
in
lret
int3
rorl
mov
push
fists
mov
pop
and
lret
inc
sub
dec
mov
mov
mov
mov
std
cs
jnp
outsb
pop
mov
dec
imulb
stos
adc
jb
andb
xchg
je
imul
shr
jb
mov
pusha
bound
sbb
add
xchg
aas
lret
sbb
fwait
cmc
aas
inc
mov
xchg
xor
aaa
mov
ljmp
dec
out
xor
push
test
inc
pop
shl
cmpsl
push
mov
and
xor
pop
cltd
add
mov
xor
mov
icebp
mov
jno
dec
test
inc
in
scas
in
cmpsb
fdivl
inc
outsl
enter
xchg
adc
test
call
fld
mov
mov
adc
rclb
pop
push
cld
fwait
add
xchg
pop
pop
dec
movsl
pop
test
hlt
hlt
cli
mov
lea
enter
lahf
fmuls
pop
das
mov
mov
sub
out
fcomi
clc
ficomps
and
jne
xchg
xchg
jg
xor
xor
sbb
das
jp
push
push
lret
call
adcb
xchg
fisttps
ret
mov
hlt
adc
dec
loop
or
gs
aam
and
mov
push
pop
adc
pop
cli
jnp
adc
mov
in
pop
std
sbb
addl
push
jmp
fisubrl
dec
mov
and
add
data16
lahf
or
mov
js
or
fxch
test
aad
mov
js
sbb
testb
jnp
fdivl
sub
adc
lret
jo
adc
or
mov
sti
or
movsl
push
lock
lock
pop
cwtl
add
mov
sbb
vmwrite
xchg
xchg
testb
mov
push
push
cmp
xchg
movsl
or
pop
jbe
pop
mov
push
ss
cwtl
orl
push
mov
test
push
cld
dec
sti
ss
jb
js
cltd
adc
jnp
or
mov
dec
cmc
popf
push
sub
outsb
cmp
xor
jo
xor
inc
adc
lcall
imul
fdivrs
outsl
xchg
les
mov
sahf
push
cmp
mov
jnp
jnp
or
ret
cmc
sti
add
stos
jb
aaa
stc
es
xlat
arpl
orl
stos
adc
xchg
in
mov
sarb
ficoms
sbb
imulb
inc
pop
xchg
push
stos
mov
jg
mov
sbb
subl
pop
jne
lds
jl
xor
add
add
aam
mov
js
ljmp
cltd
call
jmp
repz
jo
out
xor
pushf
dec
adc
xchg
cmp
pop
cmp
and
mov
or
sub
mov
add
jp
inc
pop
inc
or
mov
lcall
icebp
cmp
shll
mov
in
out
notb
outsl
lods
cmp
fs
mov
repnz
mov
repz
sub
cmp
cmp
xor
mov
aad
jnp
ja
sub
testb
cmp
shll
cmovno
sbbl
lods
js
cmp
pop
and
jne
loop
sti
push
fs
sbb
pushl
pop
aaa
push
in
push
lret
pushf
les
rcr
lret
icebp
adc
cs
jno
add
pop
push
sub
stc
xchg
push
adc
aaa
dec
xchg
pushf
xchg
aam
mov
popa
adc
les
mov
jp
xchg
fwait
int3
push
inc
push
lret
inc
loop
jle
and
jl
fcmove
sub
jae
loop
std
scas
cmp
fwait
xchg
mov
add
popa
cmp
mov
mov
ljmp
insb
jp
shlb
cmp
popf
insl
adc
push
clc
xor
sti
jmp
loop
ficompl
in
or
out
xchg
mov
dec
sub
insl
divps
cs
in
cld
pop
ret
enter
mov
mov
js
dec
and
mov
fldcw
jnp
jg
sub
mov
push
push
lahf
fisttpll
jnp
dec
daa
mov
andl
loope
inc
xor
pop
xor
movsb
psrlw
mov
xchg
int
xor
jl
data16
mov
add
outsb
mov
imul
adc
outsl
add
pop
in
add
mov
sti
loop
mov
pop
push
inc
addl
out
adc
jnp
mov
sbb
pop
inc
mov
lods
ret
push
int3
sub
scas
inc
cs
push
jecxz
aas
aaa
add
hlt
or
stos
mov
pop
and
test
push
cmp
jmp
add
xchg
mov
mov
test
iret
lret
cmp
sbb
fisubl
je
rcrb
push
fwait
push
pop
dec
mov
js
fisttpl
cmp
outsl
and
push
dec
mov
mov
in
push
shll
push
xchg
cltd
popf
jno
out
int3
hlt
mov
imul
push
adc
int3
push
loope
and
xor
lcall
les
pop
push
xchg
inc
out
mov
insl
ror
nop
inc
push
clc
adc
inc
outsb
mov
es
jecxz
push
push
jge
into
pop
call
fnstcw
loop
pop
aaa
pop
mov
bound
inc
jb
mov
and
push
adc
ja
mov
inc
push
add
dec
nop
loop
in
and
aam
cld
mov
mov
pop
push
pop
movsb
sbb
mov
fisubrs
scas
setl
mov
cmc
rorb
fsubs
fistps
ljmp
ljmp
mov
and
mov
imul
fimull
lret
or
leave
push
in
xchg
push
pop
les
pop
inc
cwtl
dec
rorl
push
cmp
pop
sahf
mov
mov
push
sahf
pushf
popf
or
pminsw
pop
adc
mov
dec
call
push
sub
loope
mov
xchg
test
add
xchg
mov
and
test
jle
mov
popa
das
fadd
inc
gs
insb
mov
sbb
mov
xlat
hlt
vpshufd
xor
inc
dec
mov
fisubl
subl
jp
and
je
jmp
adc
jae
sub
mov
push
in
adc
dec
cwtl
add
leave
imul
fs
xor
inc
leave
mov
xlat
dec
andl
push
hlt
repnz
mov
out
fsubrs
pop
adc
popf
push
cmp
fcoms
mov
mov
sub
add
xor
xchg
mov
movsb
incb
mov
or
mov
sbb
rcl
push
push
pop
and
std
lcall
out
cmp
push
jb
or
mov
push
pop
xchg
sahf
lds
mov
mov
insb
dec
mov
push
test
and
xor
pop
and
leave
negl
push
sub
inc
add
pop
testb
in
nop
jne
jne
mov
stos
mov
lods
cmpsb
mov
sub
push
jmp
or
shll
sub
pop
jb
dec
cmp
push
lods
dec
imul
mov
pop
mov
pop
and
or
daa
cli
fistps
dec
stos
out
into
in
addr16
mov
pushl
sti
jmp
test
int
lret
pop
cmp
cmc
idivl
cmp
repz
jnp
leave
fwait
push
jae
xchg
cmp
rcrl
ret
pop
xor
and
ljmp
push
inc
jb
pop
cmp
jno
inc
inc
lock
cmp
xchg
sub
sub
std
mov
lods
inc
jmp
or
xor
in
push
cmp
push
ret
test
nop
das
jb
mov
pop
in
sbb
mov
sub
push
jg
sub
xchg
jae
insl
leave
sub
push
shll
aas
mov
inc
and
and
sbb
push
sets
pushf
test
es
scas
sub
and
orb
fldcw
mov
loope
clc
mov
sar
or
nop
cmpsl
in
fnstenv
jne
sub
mov
fdivs
cmp
dec
mov
out
xchg
shlb
repz
fisttpl
sbb
ret
push
out
hlt
addr16
cmp
jecxz
xchg
dec
add
sbb
xchg
bnd
adc
ret
cmpl
xchg
push
ficoml
jnp
cmp
xlat
inc
sbb
leave
jo
sbbl
or
fisttpll
mov
imul
pushf
and
das
cltd
fidivs
xor
xor
push
mov
mov
fisubrs
or
xchg
mov
lds
sbb
adc
mov
dec
mov
sbb
outsb
rol
nopl
push
out
mov
inc
out
mov
std
popf
dec
add
xchg
mov
mov
sub
add
sahf
movq
adc
loope
mov
mov
jl
outsb
test
mov
out
rcr
out
mov
test
in
sub
mov
dec
mov
inc
stc
push
inc
and
rorl
jge
repz
fsts
fwait
xor
jae
lahf
cmpsl
sbb
push
mov
adc
push
dec
jecxz
pop
jno
addb
lods
dec
or
and
add
loope
xor
adc
imul
adc
into
and
stos
pushf
int3
mov
mov
stc
dec
mov
negb
push
sbb
dec
cmp
ljmp
xchg
jne
jecxz
ljmp
cld
xor
xchg
mov
push
jns
repnz
sbb
sub
push
lods
pop
mov
or
dec
outsl
les
into
pop
ret
and
ss
push
sbb
test
pop
test
pop
dec
xor
sub
add
mov
or
xor
jmp
mov
jle
mov
call
cmp
xchg
or
sbb
dec
mov
add
mov
cli
dec
outsb
jno
int
cmp
ljmp
xchg
adc
ds
scas
negl
xchg
add
or
hlt
or
lahf
mov
sbb
mov
outsb
hlt
ss
loopne
push
ret
cli
call
inc
nop
subb
adc
scas
scas
in
sbb
jbe
lret
xchg
ds
jg
icebp
out
scas
hlt
jge
dec
shlb
cmp
aad
cmpsb
addr16
xchg
push
pop
repz
sbbb
cmp
fidivl
cltd
cmp
in
jmp
shlb
or
mov
je
mov
mov
jo
sbb
xchg
jecxz
incl
mov
popa
mov
mov
fwait
aas
push
add
insl
stc
clc
aam
ret
and
push
cltd
adc
repnz
mov
push
repnz
or
lcall
js
pusha
sub
sbb
lret
fwait
sub
in
cmp
push
popf
data16
push
imul
mov
pop
stos
mov
pop
cmc
lods
xchg
adc
mov
or
jnp
adc
rorb
scas
or
jge
mov
push
and
inc
pushf
pop
fisttpll
leave
or
popa
inc
sub
stos
std
adc
xor
lahf
sub
cwtl
mov
ficomps
xchg
mov
push
lahf
lcall
popf
fnstenv
test
jbe
ja
jns
movb
cwtl
adc
mov
inc
mov
cli
jle
inc
addr16
addr16
fidivrl
mov
sbb
or
in
and
shll
and
add
popl
cmp
ja
lds
in
or
js
mov
pop
xlat
adc
movsb
aam
inc
and
scas
sbb
mov
jmp
mov
push
push
jnp
fidivrs
xchg
sbb
adc
rorl
mov
sub
mov
pop
cli
push
mov
popf
fisttps
jmp
xor
push
jp
inc
mov
das
jb
xor
mov
pop
das
xor
sub
cwtl
scas
xor
dec
adc
test
sub
jp
scas
mov
mov
hlt
fbstp
imul
cwtl
popf
es
fisubrl
xchg
push
jo
dec
popa
sbb
psllw
orl
sbb
jno
cs
jae
popa
xor
in
mov
loop
or
and
pusha
and
cltd
stos
push
mov
adc
ds
imulb
push
mov
and
mov
iret
mov
test
lret
push
push
jecxz
lahf
mov
arpl
outsb
movsb
push
sti
push
and
mov
test
mov
ja
jge
add
sti
add
in
cli
sbb
out
cmpsb
adc
mov
pop
jmp
jo
in
xchg
jns
int3
adc
push
test
int3
fimuls
mov
sub
into
sbb
loop
push
push
test
jg
nop
mov
sub
scas
fsubl
loope
in
nop
enter
insb
xor
cmpsl
inc
xchg
in
add
sub
jge
shr
cwtl
cmp
out
sbb
xor
inc
push
xor
fbstp
xlat
mov
inc
jbe
jae
adc
mov
pop
ds
xchg
cltd
movsl
in
lea
les
mov
mov
adc
sbb
gs
sbb
fimuls
jns
ja
mov
dec
or
sbb
and
sub
jbe
pop
hlt
xor
out
rcll
adc
scas
int3
cltd
outsb
out
cmp
in
sub
popl
cmp
pop
lods
fdiv
das
push
daa
loope
jp
test
imul
adc
out
add
add
adc
sub
cmpsb
mov
dec
mov
orl
push
push
cmpl
sti
outsb
cmpsl
mov
sub
popf
int
insl
dec
pop
xor
out
popf
mov
push
dec
sarl
les
loope
lret
popl
loope
ja
jl
push
jns
jns
sub
jns
mov
sbb
sub
lret
jmp
std
and
stos
rcrl
testl
mov
int3
jp
xchg
pop
cmp
lahf
xor
sbb
mov
mov
cld
dec
popf
enter
pop
jl
movsl
fs
orb
xchg
outsl
jne
or
jnp
xchg
je
sub
ret
pop
cmp
mov
rcrl
jmp
out
xor
lods
and
scas
outsb
nop
lret
lahf
pop
inc
xchg
cmc
loope
out
xor
call
push
shr
sbb
call
xchg
ret
mov
push
add
sbb
cld
ret
mov
dec
fs
data16
in
fcomps
sub
test
lea
pushl
mov
pop
fcmovnu
cs
and
inc
movaps
js
sub
fstpt
push
ss
call
xor
push
push
or
fidivs
loop
ss
lret
rcrl
mov
push
pop
add
and
sub
add
or
pcmpeqd
decl
pushf
jns
or
adcl
dec
inc
lock
mov
mov
popa
jp
jno
add
pop
ljmp
adc
pop
mov
fcompl
insb
adcb
mov
or
mov
xlat
nop
nop
insb
fwait
pop
add
sahf
outsl
in
mov
lods
mov
mov
lods
add
jno
jecxz
fcmovnu
cmp
adc
or
pusha
push
icebp
push
in
idivb
ds
pop
push
loope
hlt
cmp
sbb
xchg
aas
lret
fidivs
adc
test
sarb
mov
aas
dec
rcrl
pop
jno
mov
sbb
jecxz
adc
dec
mov
movsl
cmp
add
and
adc
add
mov
repnz
out
pop
add
mov
sahf
push
inc
aam
repz
cmp
data16
sub
inc
leave
cld
cli
sub
hlt
xchg
sbb
repz
add
shlb
in
imul
aam
lods
fists
mov
mov
data16
push
and
xchg
and
mov
movsb
cmc
push
xor
mov
repnz
sub
and
or
xor
mov
sti
adc
pop
inc
push
sbb
test
lods
ja
lcall
sbb
ja
xchg
nop
ret
rclb
xor
lea
jl
sub
dec
push
push
xor
or
fidivl
lcall
addr16
out
aaa
push
inc
jae
or
les
or
lds
cmp
sbb
pop
push
add
jbe
sbb
lcall
testb
sub
jbe
frstor
je
mov
xchg
pusha
cmp
daa
add
jbe
fnstenv
icebp
cmp
cmpsb
jae
fisttps
mov
test
fimuls
or
push
sub
dec
icebp
and
lea
test
jmp
ja
xor
xor
test
ss
xor
cmp
inc
xor
sahf
mov
pop
jmp
leave
xchg
or
sti
lea
fld
jl
clc
mov
fsubl
loop
and
xchg
and
cmc
ret
cmp
ret
addr16
mov
fisubs
fisubrl
shll
int
iret
lods
rcrb
lock
jp
ret
push
jle
push
out
fnstenv
call
xor
lds
cld
xchg
mov
fstl
jmp
push
and
adc
or
movsb
dec
cli
mov
or
shrb
xor
je
mov
mov
jns
add
std
cmp
or
jnp
fbld
out
or
or
xchg
sbb
xor
pushf
es
sub
lods
aam
rcr
mov
jge
sub
inc
iret
loope
inc
insl
mov
mov
mov
lret
cli
adc
mov
sti
dec
jbe
aam
add
test
mov
es
sbb
mov
mov
add
ror
aas
and
mov
ffreep
fisubl
xchg
xchg
or
sub
inc
lods
fstpt
andl
jnp
xor
push
hlt
inc
faddl
mov
inc
push
mov
dec
ss
jg
cltd
fwait
xor
mov
add
in
or
jnp
cmpsl
sbb
jno
pop
repnz
aam
sbb
je
pop
mov
aam
les
push
jnp
dec
rorl
pop
add
sbb
xchg
add
test
cmc
and
xchg
ds
mov
mov
out
mov
jmp
dec
scas
dec
loope
mov
les
push
sub
sbb
add
jne
adc
mov
xchg
cld
inc
scas
es
insb
cld
arpl
bound
cmp
mov
jne
stc
popf
in
test
lods
ret
dec
xor
ljmp
mov
insl
out
push
lock
jne
xchg
pusha
lcall
adc
les
mov
into
popa
loop
add
shlb
xorb
into
and
testl
sbb
push
inc
out
sub
cli
mov
push
dec
inc
scas
test
ss
jecxz
jns
pop
stos
push
dec
lds
div
js
inc
insb
inc
jg
sti
insb
mov
rcl
pusha
lock
sub
lahf
popl
out
pop
pop
mov
xchg
bound
sahf
popa
scas
stc
imul
les
lods
insb
decb
out
pop
rclb
fldcw
sbb
jmp
ret
xor
mov
push
arpl
add
sbb
mov
add
pop
pop
test
lahf
cwtl
jo
jle
out
or
ret
jno
inc
and
dec
inc
xlat
mov
fistps
push
adc
js
out
lods
cmp
cltd
andb
push
es
aam
lods
in
rdmsr
or
dec
dec
lahf
scas
idivb
and
ss
or
sub
mov
xchg
cmp
and
std
xor
sbb
cld
xor
push
jo
daa
xchg
in
cmc
cli
add
je
frstor
fs
movsl
out
mov
xor
pop
loope
jnp
jge
inc
dec
or
cmp
xlat
lret
mov
stos
xchg
fsts
cmp
pop
mov
jle
sbb
sarl
sub
jb
sub
gs
sbb
out
decl
cltd
mov
sub
rcll
cmp
andl
mov
jo
stos
add
sti
add
sti
lods
outsb
out
mov
lods
insl
daa
add
sub
push
xchg
lret
add
sbb
xor
lock
ss
pop
push
lret
rclb
jl
add
icebp
scas
jmp
pop
out
aad
jmp
pop
inc
into
dec
test
dec
adc
dec
jge
es
les
mov
outsb
mov
aam
xlat
add
xchg
mov
int3
pop
cmp
inc
mov
out
lret
mov
mul
xchg
pop
adc
mov
xor
sahf
loopne,pn
inc
movsb
shr
shlb
pop
test
xor
adc
xor
scas
push
inc
shll
lret
sbb
dec
movsl
icebp
jb
jp
push
andb
test
icebp
add
lcall
mov
dec
clc
and
iret
lret
fcoml
decb
and
js
mov
lods
jo
jbe
shlb
test
xchg
xchg
mov
out
jp
dec
push
addr16
push
or
pop
push
shll
cmpsb
xor
aas
sub
jns
sub
pushf
mov
adcl
sbb
sub
xor
jbe
rorb
cmp
shrb
cmp
enter
pop
and
sub
mull
mov
shlb
aad
inc
pop
subb
push
add
mov
outsl
scas
mov
mov
push
lock
adc
fldt
add
pop
add
push
xor
cmp
outsb
sbb
out
pop
cmpsl
xor
sub
xchg
enter
jge
cltd
mov
rcll
cwtl
sbb
out
sbb
jnp
push
cmp
dec
and
adc
lods
adc
pop
adc
out
lcall
xchg
xchg
pop
movsl
cltd
jae
cwtl
aad
int
push
js
je
movsb
jno
xchg
sbb
popa
mov
mov
jg
pop
push
push
fstpl
push
out
repz
jnp
lea
gs
xor
cmp
xlat
or
jmp
aaa
frstor
mov
mov
xchg
popa
sarb
stc
ljmp
xlat
movb
loopne
mov
pop
popf
inc
ljmp
fwait
dec
add
or
jbe
out
mov
push
test
dec
shll
jge
and
aam
outsl
stos
jbe
push
jp
cmpsl
jg
or
cmc
or
aam
xchg
and
nop
hlt
jge
mov
mov
insb
test
lods
mov
dec
push
push
test
int3
enter
arpl
shrl
dec
lcall
sbb
vpmulhw
add
lds
mov
call
sub
jbe
sarb
jo
clc
or
cs
fs
push
add
int3
rolb
lock
cwtl
xchg
rorl
clc
jg
rcl
pop
popa
pop
pop
xor
shlb
jmp
lret
mov
out
xor
sbb
lcall
cwtl
bound
js
xor
dec
xor
inc
dec
pop
mov
pop
fldcw
inc
xor
in
stos
stc
jmp
sbb
xlat
xor
xchg
ret
fdivl
xchg
out
and
insl
fwait
cmc
out
dec
dec
pop
fnsave
stos
aas
or
push
mov
dec
call
and
insb
sbb
daa
cmp
fwait
add
sar
mov
aaa
clc
xchg
lahf
ja
mov
dec
mov
xchg
out
daa
cmpsb
mov
jnp
rorl
stc
push
in
xchg
or
iret
inc
divl
imul
aam
shrl
mov
pop
jecxz
or
xchg
jnp
inc
cmp
xor
add
jg
mov
sbb
div
mov
in
cmp
pusha
sub
add
xlat
inc
sbb
inc
addl
ficoms
mov
pop
mov
mov
adc
mov
mov
xor
pop
shlb
cltd
pop
movsb
or
pop
mov
lea
ret
loopne
sbb
push
je
sbbb
push
loope
rorl
or
mov
mov
fnstenv
inc
bound
sar
sub
lods
je
jg
xchg
int3
sbb
fwait
xchg
push
scas
in
xor
inc
add
adc
jg
xchg
inc
push
sub
inc
push
aaa
sbb
cmp
pop
icebp
fsubrs
dec
es
pop
lock
sub
les
cld
sbb
adc
mov
xchg
mov
stos
sbbb
mov
aad
lahf
adc
test
test
ret
std
or
sbb
xor
push
push
xor
repz
cmp
sub
xchg
dec
enter
cmp
and
jno
mov
fsubl
or
xchg
in
sub
xchg
pop
out
aam
mov
mov
sub
mov
inc
pop
pop
and
add
rorb
in
inc
xor
clc
sub
shl
leave
mov
orb
lock
ret
mov
nop
mov
pop
mov
cmp
mov
cmp
lret
sub
cli
insl
cwtl
mov
cwtl
jns
stc
ret
mov
ds
fldl
iret
push
mov
mov
xchg
pop
rorb
stc
out
jecxz
lret
sub
in
scas
mov
clc
jmp
and
jmp
mov
jecxz
enter
or
sbb
test
push
sub
ljmp
pop
jle
sahf
adc
test
add
pop
clc
xchg
xchg
and
repz
lods
out
sbb
mov
stos
ret
je
outsb
mov
jno
frstor
incb
fisttpl
fsubs
popa
loopne
xchg
imul
lea
dec
ret
repnz
ficompl
aad
lds
sahf
loopne
cmp
xor
js
fistl
xor
lcall
mov
bound
pop
pop
mov
xchg
hlt
xor
fstpl
icebp
jge
jo
arpl
stos
push
fmuls
lods
nop
mov
mov
rorl
shlb
jmp
out
pop
jp
or
xor
xchg
aad
outsl
js,pn
in
xorl
inc
mov
cltd
mov
mov
icebp
mov
push
push
cmp
test
cmp
push
std
xchg
mov
cmc
loop
jmp
jae
mov
popa
and
movsb
lahf
call
sub
or
mov
or
out
push
fldt
sahf
inc
dec
xchg
dec
insl
outsl
jg
repnz
mov
mov
aaa
add
fildll
cmpsl
mov
enter
or
cmp
jmp
sbb
pop
leave
fwait
mov
sub
int3
adc
fistpl
repz
xchg
mov
jne
das
ds
mov
repz
loopne
jnp
cmp
je
sub
add
fnstenv
or
clc
shrl
sahf
mov
repnz
inc
repnz
sbb
mov
sub
bound
aaa
scas
cmc
mov
int
adc
cltd
pop
mov
leave
mov
jbe
test
icebp
insl
std
dec
loop
pop
pop
in
xchg
xchg
inc
push
mov
fistpl
fwait
dec
jg
clc
xchg
lea
test
xor
mov
mov
rcrl
and
and
or
stos
xchg
cltd
in
adc
iret
icebp
arpl
and
dec
aaa
stc
add
pop
mov
dec
sti
inc
ret
mov
adc
inc
rorl
inc
scas
unpckhps
push
loop
xchg
gs
xchg
push
xor
in
popa
mov
cmp
push
sti
adc
push
dec
jge
push
or
imul
fdivr
push
int3
cs
xchg
xor
aam
in
repnz
jp
setbe
pop
xchg
cs
mov
xchg
sti
rcl
cmp
mov
flds
jnp
push
pop
stos
adc
mov
aas
fsubs
bound
jp
xor
mov
arpl
add
jle,pn
lcall
lods
lds
movsb
nop
es
mov
xlat
and
add
and
pop
xlat
mov
sub
xchg
adc
es
mov
ret
ret
and
xchg
cmp
xor
push
push
pop
out
lods
imull
clc
or
adc
inc
inc
pop
jns
jmp
xchg
hlt
jns
cmp
pop
xchg
xor
push
and
xchg
adc
dec
mov
ficoms
gs
cmc
add
iret
mov
cmpsl
mov
jmp
mov
or
add
push
jge
xchg
push
mov
mov
shr
add
pop
out
cmp
movsl
sbb
stc
stos
aaa
cmpsl
fidivl
mov
xlat
or
js
push
mov
jg
orb
xchg
orl
cmp
iret
mov
ret
mov
mov
push
xlat
dec
xor
and
loopne
andl
adc
inc
push
and
cmp
push
lock
push
sahf
jne
stos
fsubrs
xchg
fcmove
adc
inc
cmp
and
fisttpl
sbb
push
lods
mov
mov
jl
add
xchg
stc
pop
jp
jmp
loop
fldl
fdivrl
push
lock
sbb
xchg
rorl
pop
mov
pop
mov
mov
js
int
push
mov
and
push
mov
jp
xchg
or
mov
int3
addl
outsl
xor
xlat
in
shll
push
je
cmp
rcll
sbb
cmpsl
pop
iret
cmpsl
movsl
leave
ret
inc
push
dec
pushf
sahf
cmc
repnz
dec
scas
sbb
popa
jge
pop
addl
push
inc
push
xchg
sub
sbb
adc
imul
xchg
pop
inc
jg
icebp
push
in
lods
cmp
lods
call
movsl
and
daa
popf
pop
sub
xchg
sti
ja
mov
stos
xor
inc
es
sbb
pop
xchg
lods
add
outsb
xchg
jg
shrb
xchg
es
cmp
pop
out
add
aaa
xor
rcrb
in
add
jp
jo
sbb
cli
mov
jecxz
ret
repnz
push
jge
xchg
or
mov
loope
jb
out
pop
push
xor
dec
out
inc
nop
ret
aas
push
cmp
adc
push
jnp
clc
push
dec
fwait
jg
aam
imul
xor
adcl
inc
pop
mov
enter
inc
in
fwait
daa
xchg
ljmp
jp
insl
mov
or
hlt
outsl
mov
mov
mov
in
push
and
jle
std
fldt
cmp
mov
xor
adc
addr16
mov
shl
mov
nop
inc
sti
jecxz
dec
imul
sbb
data16
dec
or
xchg
test
je
lds
es
sub
js
imull
imul
mov
xchg
test
push
ret
mov
das
or
xchg
lret
inc
fcompl
add
negb
and
cmc
pusha
insb
pop
pop
aaa
inc
or
jb
add
xor
imul
imul
dec
test
jo
sbb
test
call
fdivr
clc
lret
add
or
inc
stc
jg
dec
cmpsl
sub
pusha
enter
push
movsb
mov
ret
in
xchg
mov
dec
xlat
les
ljmp
adc
cli
imul
cmpsb
call
scas
pop
or
lock
inc
mov
negl
cmpsl
and
inc
sub
mov
int
popa
imul
inc
xchg
ret
sarl
or
fcoml
js
das
adc
inc
and
bnd
add
or
pop
test
push
xchg
mov
push
testl
aam
jge
adc
jl
cmp
std
pop
decb
mov
rorl
pushf
je
jae
in
cmp
xchg
sbb
push
or
push
pop
mov
jg
mov
sub
xchg
push
mov
dec
mov
add
fs
mov
adc
test
rorl
lea
adc
loop
xor
mov
sarb
mov
sahf
jno
pusha
test
mov
shll
push
fsubrs
jne
test
test
mov
mov
mov
loopne
idivb
les
mov
push
xchg
dec
sub
or
daa
dec
cmp
xor
rep
rcl
xor
sti
and
adc
mov
sbb
loopne
data16
adc
cld
fmul
mov
sar
pop
jno
subl
int3
add
lcall
or
fimuls
sti
pop
sub
lods
std
mov
incb
inc
or
adc
test
notb
sti
outsl
jbe
dec
mov
repz
call
std
loope
hlt
and
jne
addr16
adc
test
test
push
int
sub
push
or
xlat
dec
mov
bound
push
pop
lds
je
inc
std
cmp
stos
push
imul
pop
into
ja
xlat
es
fxch
mov
push
into
arpl
iret
dec
scas
mov
xchg
xchg
inc
xor
sbb
mov
ret
xor
sbb
sub
jmp
stc
ret
aas
mov
arpl
popa
jge
mov
lds
ror
push
sarl
popf
addr16
popf
es
ret
cmpb
notl
add
cvtps2pi
lret
xor
push
sub
cmp
insb
xchg
xchg
xchg
hlt
cs
cli
dec
imul
jb
push
scas
dec
mov
out
aaa
int
push
test
mov
test
inc
bound
xchg
nop
sti
insb
fucomp
std
rcll
insb
xlat
shlb
aad
or
xchg
jmp
call
movsb
jp
out
in
jmp
popl
xchg
xor
inc
daa
push
out
lock
jmp
arpl
cld
mov
jae
imul
xor
fidivs
lock
pop
stos
out
xlat
je
nop
scas
xchg
outsl
lret
loop
mov
les
cmpb
subb
repnz
incl
adc
xor
scas
shrb
sub
aad
mov
dec
adc
fidivl
or
or
roll
pop
mov
or
inc
fisttpll
mov
mov
cmpsb
mov
sbb
into
add
cli
jne
push
rclb
dec
enter
pop
add
sub
jnp
inc
arpl
sbb
mov
push
mov
andl
into
jmp
push
mov
into
aam
inc
pop
test
addb
popf
push
ljmp
movsb
inc
pop
or
lret
mov
or
add
iret
add
sub
pusha
ret
mul
mov
sub
jne
ret
dec
mov
inc
sbb
iret
push
inc
mov
jnp
roll
addr16
and
pop
mov
out
fdiv
mov
bound
clc
cmp
push
pusha
mov
mov
test
popa
sahf
jp
loop
push
push
jb
mov
pop
orb
cmpl
addl
xor
pop
push
mov
xor
enter
addl
pop
inc
in
add
in
jmp
shr
xchg
jmp
inc
jb
es
push
dec
push
addr16
push
xor
cltd
loopne
mov
ror
mov
mov
inc
cltd
pop
adc
pop
out
and
stos
cmp
cmp
bound
inc
or
and
aas
jno
push
mov
div
push
push
clc
cwtl
iret
push
dec
in
cmp
mov
mov
movb
cmp
add
mov
pushf
push
mov
push
push
movsl
fcmovb
mov
nop
aam
lea
in
dec
xchg
loopne
in
lds
in
repz
mov
cltd
rcr
pop
popf
mov
cmpl
fndisi(8087
add
mov
pop
cmpsb
adc
test
arpl
scas
push
movsb
jg
cmpb
nop
adc
fs
jae
outsb
dec
mov
in
scas
lret
mov
std
pop
xor
or
imul
out
mov
cmpsl
inc
xchg
and
sub
int
rol
and
cwtl
add
out
pusha
pop
jecxz
loope
loopne
add
mov
sub
popa
arpl
jns
cmp
das
and
popa
pop
ret
push
repnz
mov
mov
pop
hlt
aad
pusha
mov
bound
mov
mov
push
mov
jbe
test
push
pop
divb
adc
and
xchg
outsb
or
insl
mov
jae
jl
je
sub
cmp
push
aaa
ljmp
out
cmp
dec
clc
dec
pop
andl
cld
data16
dec
sti
in
test
pop
fwait
lret
add
repz
cli
fisubs
lcall
mov
cmpsb
cmp
dec
mov
mov
test
iret
pop
hlt
fidivrs
or
in
gs
loop
pop
js
add
or
test
negl
mov
pop
sbb
and
adc
dec
push
orl
in
mov
sbb
ret
test
xchg
adc
adc
cld
xor
sub
cltd
ret
cltd
movb
mov
mov
fcoms
ficompl
lds
outsb
test
outsb
shlb
adc
pop
adc
push
pop
scas
jmp
jns
mov
ja
sahf
fldenv
add
andl
sbb
xchg
aas
aad
jg
jecxz
mov
mov
rcrl
aas
js
pop
sbb
int3
aam
jb
sub
stos
movsb
iret
mov
fistpl
loope
icebp
pop
test
sub
pop
stos
pop
sub
in
imul
xchg
repnz
dec
mov
jge
daa
adc
test
push
movsl
xorb
sbb
cltd
add
imul
add
enter
mov
jbe
sti
inc
call
aad
cwtl
jb
xor
scas
andl
in
movl
arpl
dec
push
fists
scas
fimuls
mov
arpl
sub
in
cmp
addl
sbb
enter
pop
lcall
dec
movsl
push
push
sbb
js
ret
mov
es
sbb
out
fisubl
xor
stos
add
cmovle
xchg
leave
icebp
ljmp
push
or
dec
imul
xchg
or
mov
push
push
mov
inc
mov
les
and
aaa
and
test
dec
inc
fnstcw
cmp
xchg
mov
adc
dec
fsub
scas
pop
or
xchg
out
inc
js
rorl
pop
dec
dec
imul
ljmp
outsl
xchg
sbbb
pop
dec
xor
jp
xchg
into
imul
mov
in
in
mov
mov
push
add
icebp
mov
mov
push
stos
data16
fnstenv
dec
or
xchg
xchg
in
je
incl
xchg
xchg
push
std
lods
jb
loop
sar
int3
dec
mov
cmp
mov
jns
sbb
inc
xchg
jbe
xlat
in
aam
out
or
call
pushf
ljmp
cmpsl
lret
xor
imul
sub
sub
lret
jl
in
xchg
or
mov
clc
mov
xchg
adc
mov
push
movsb
out
push
adc
mov
xchg
test
fisttpl
jae,pn
fwait
sbb
and
inc
xchg
arpl
mov
xchg
out
fmuls
dec
cmp
jnp
sub
lcall
xor
dec
push
sbb
mov
adc
movsl
sub
pop
or
popf
out
sub
outsb
jmp
xchg
lods
cld
shr
dec
pop
xchg
mov
jns
add
pop
test
dec
jmp
jo
dec
ret
das
int
imul
aas
mov
dec
popa
lret
fdivp
or
arpl
imul
enter
js
pop
add
cmp
inc
xchg
cmp
inc
fnsave
les
inc
mov
jbe
js
lret
jae
leave
in
add
pop
mov
or
xchg
mov
pop
or
add
mov
jae
lcall
jb
pop
insb
in
hlt
subb
add
inc
idivl
fdivs
pop
and
mov
xchg
push
jb
hlt
cmp
push
prefetch
jmp
push
mov
lahf
sbb
and
dec
dec
stos
fstl
adc
les
inc
or
fwait
push
adc
push
cmp
xor
jmp
sub
rol
jno
push
push
in
loope
mov
imul
fld1
sarb
push
mov
les
ds
fwait
pmaxub
or
sti
inc
push
roll
or
adcb
sbb
adc
repnz
mov
pop
inc
loope
bound
dec
aaa
fcomps
pop
mov
push
mov
test
scas
scas
popf
xchg
pusha
adc
les
popa
push
sarl
push
and
sub
enter
push
add
fstl
mov
cltd
in
xchg
stos
out
insb
lock
and
cmp
andl
mov
pop
aas
sahf
pop
adc
repz
jg
negb
mov
scas
aaa
add
add
cmpsb
adc
mov
lea
dec
adc
loopne
mov
cmp
gs
mov
sahf
mov
xlat
jnp
bound
mov
ljmp
pushf
sbb
sub
add
mov
test
repnz
mov
adc
sahf
inc
gs
lcall
xor
pop
adc
ljmp
or
int3
mov
sbb
int
add
pop
sbb
iret
cli
cmpsl
test
lea
ss
lds
mov
add
dec
ss
sahf
mov
adc
pop
mov
ja
jb
in
iret
mov
mov
je
iret
or
cmp
push
dec
mov
daa
loop
push
inc
cmp
inc
xor
jmp
sbbl
test
add
outsl
and
mov
or
inc
daa
out
ret
pop
ja
in
outsb
js
popf
out
pop
les
or
push
mov
sarb
sbb
mov
xor
shrl
cli
rcrb
aaa
push
dec
test
jge
pop
xchg
mov
push
mov
inc
pop
add
add
sahf
push
sub
cmp
push
fsubs
xchg
jg
dec
cltd
add
enter
dec
je
cli
int
mov
mov
dec
lret
push
bound
push
mov
push
jne
dec
adc
loopne
pop
test
shll
ljmp
lea
pop
adc
sbb
ss
sub
lds
push
push
sahf
inc
and
loope
ds
mov
cli
bnd
pop
sub
into
dec
stos
mov
iret
dec
rcrl
arpl
inc
mov
push
insb
cltd
xchg
stos
fidivs
cmp
dec
lret
lock
mov
dec
popa
mov
or
and
pop
and
call
and
mov
pusha
dec
pop
arpl
cs
ret
rorb
or
ret
mov
lods
je
sub
mov
cmp
and
dec
aad
cmp
aam
sub
sub
inc
les
jb
dec
js
andl
bound
rolb
dec
pop
or
or
adc
pop
out
sub
js
outsl
bound
mov
xchg
cmpsb
mov
sub
or
sbb
mov
push
pop
mov
sbb
push
add
ds
adc
pusha
push
pop
loope
jo
xchg
lods
outsl
push
mov
lock
enter
mov
insb
adc
and
pop
jge
int3
ljmpw
xchg
mov
jns
or
cmp
xor
sbb
pop
lods
jae
fsubrl
jo
fwait
or
out
cmp
xor
add
push
ret
jo
adc
adc
lods
xchg
aam
cli
push
cltd
inc
gs
cmp
xchg
sarl
pop
testb
adc
dec
stc
push
add
idivl
stos
xchg
repz
inc
xchg
dec
js
mov
ja
cli
xchg
insb
jne
inc
mov
add
adc
push
out
sub
mov
lea
mov
addr16
and
adc
inc
jl
stos
dec
dec
push
lcall
cltd
movsl
pop
and
xchg
and
in
lods
sbb
inc
inc
pushf
int
mov
lahf
cmp
lds
add
xchg
mov
xchg
test
xchg
and
test
mov
loope
roll
and
and
xchg
aam
inc
inc
xor
cmc
push
mov
cmc
imul
pop
xchg
add
mov
add
jae
sub
inc
jp
popf
bound
dec
mov
jne
xchg
imul
or
mov
pop
dec
scas
lahf
nop
fistps
mov
std
mov
push
mov
cmp
fstps
cld
out
pop
inc
cmp
stc
rclb
aas
xchg
mov
cmp
or
push
test
pop
jmp
push
sti
in
loop
xchg
repnz
mov
aam
enter
pop
inc
and
mov
pop
es
mov
push
adc
sahf
push
jbe
xlat
pop
adc
fistl
xor
and
jno
dec
jmp
xchg
lret
jne
mov
add
inc
leave
lret
push
les
jnp
cs
mov
push
or
mov
adc
fucomp
int
inc
addr16
adc
jb
or
mov
pop
adc
or
sbb
dec
jg
mov
fs
ficoms
mov
adc
push
ficomps
in
mov
repz
lock
ret
je
mov
sti
scas
or
cltd
cmpsb
out
xor
xchg
pushf
adc
sarb
xchg
and
cmpsb
in
popf
in
int3
inc
fiaddl
ds
and
dec
push
stc
jle
pop
outsl
or
xor
in
leave
out
xlat
and
hlt
fs
mov
push
stos
sbb
and
adc
stos
in
ljmp
js
mov
rorl
xor
shl
cmp
jae
rolb
sbb
sbb
iret
and
adc
aaa
add
or
outsl
std
lcall
arpl
outsl
sti
rorl
loope
fsubr
cmp
frstor
out
add
lds
jbe
mov
mov
mov
in
lcall
lea
sub
test
lcall
jo
inc
lods
push
imul
pusha
cmp
addr16
fiaddl
sub
add
fisubrs
out
stos
movsl
mov
push
pop
mov
mov
push
push
dec
fdivrl
push
sti
fcomps
jae
inc
leave
scas
lea
push
aaa
andb
jle
scas
sbb
dec
lods
aas
dec
add
sub
pop
aam
les
or
shl
pop
ss
outsl
xchg
stos
jge
insl
std
je
hlt
movsl
mov
mov
cwtl
sahf
xor
popf
jp
push
sti
inc
pop
or
mov
adc
cmp
inc
push
movl
scas
inc
enter
test
leave
icebp
bnd
lock
je
jbe
insb
test
jb
jb
les
xor
fists
leave
and
xchg
cld
sbb
js
mov
nop
stos
and
insl
push
or
sub
lret
dec
jle
adc
test
xchg
outsl
fsubr
mov
jb
test
mov
jo
out
push
adc
stos
mov
xchg
sub
xor
inc
mov
scas
enter
cltd
in
ficompl
inc
out
mov
stos
fists
inc
push
pop
lcall
inc
pop
mov
jmp
mov
xchg
test
and
mov
sbb
rcrl
sub
fmuls
adc
mov
jp
push
imul
daa
insb
adc
and
mov
jno
mov
push
in
retw
jae
or
mov
ds
add
repnz
pop
dec
mov
outsl
cmp
push
xor
sti
outsl
mov
mov
mov
in
test
arpl
stc
add
sub
xchg
outsl
mov
jle
test
das
das
jb
dec
sbb
adc
loope
les
pop
xor
push
push
cmpl
mov
adc
nop
xor
test
jne
sbb
icebp
xor
and
test
jg
xchg
call
clc
pop
sbb
push
pop
xchg
out
lods
fs
aas
std
je
ret
sbb
xchg
mov
and
das
mov
lahf
mov
mov
cmp
ret
and
sub
je
sub
mov
mov
cld
test
stc
jl
mov
pop
sub
xchg
in
mov
push
aam
sti
shlb
sbb
std
adc
pop
lret
xchg
in
add
in
or
in
idiv
mov
idivb
lret
jno
jno
and
add
repz
push
out
stc
lods
ss
jns
ss
dec
add
out
mov
adc
fwait
sub
xorb
and
jae
jl
xchg
mov
out
lds
les
imul
icebp
leave
xor
repz
push
shlb
ret
push
add
sbbb
mov
mov
gs
jecxz
sbbb
and
mov
dec
xchg
hlt
scas
mov
out
xor
or
fcmovnbe
jae
scas
lahf
push
push
lods
dec
pop
les
jb
divps
test
mov
clc
mov
or
mov
shl
out
bound
shlb
sub
mov
xchg
xchg
fcoml
inc
insl
cli
push
lcall
popf
xchg
pop
ljmp
mov
pop
jne
xlat
ret
add
mov
ja
add
rcr
int
jns
out
cmp
sub
mov
fldenv
cwtl
fcomps
cmp
iret
xchg
xchg
jecxz
sbb
jnp
jge
xor
out
mov
sti
inc
sub
mov
sub
ss
xchg
pop
cmpsb
fldcw
jb
rcr
mov
inc
cld
ss
movsb
xor
jge
out
push
jle
cld
jl
sbb
je
or
shr
clc
pushf
xor
sbb
rcl
pop
cmp
xor
push
mov
in
in
sub
and
pushl
aaa
lahf
outsb
stc
cwtl
jecxz
sub
movsb
loop
pop
push
sub
mov
incl
fwait
insb
mov
mov
jb
jmp
mov
mov
ja
ficomps
int3
test
xor
adc
xor
push
in
dec
stos
lret
mov
mov
adc
inc
adc
mov
gs
mov
xor
mov
int
add
sarl
outsb
dec
dec
leave
push
mov
mov
adc
jae
jbe
adc
or
jno,pn
leave
push
mov
aad
sbb
les
rclb
pop
cwtl
push
sbb
ficoms
jmp
push
lods
cmp
push
mov
inc
cmp
shl
cs
jg
inc
mov
mov
fucomi
mov
sub
cmpsl
sarb
frstor
lods
mov
leave
xchg
pop
shr
loop
inc
mov
push
in
stos
xor
lock
shlb
popa
lret
mov
add
pop
movsb
adc
jae
pop
pusha
sbb
fwait
jne
inc
jb
idiv
adc
jecxz
cmp
mov
lcall
jecxz
sub
lahf
hlt
jnp
xchg
adc
arpl
outsb
pusha
xchg
sub
test
in
xchg
movsl
sbb
shll
pushf
imul
lods
xchg
jge
mov
jmp
mov
pop
lock
imul
jle
jmp
loopne
sbb
mov
cmpsb
repnz
dec
les
loop
out
fwait
fs
fcoml
out
inc
jnp
aas
pop
lret
cmp
fs
and
pushf
repz
pop
xlat
or
sbb
xor
and
xchg
inc
sti
rcl
mov
push
out
andb
mov
xor
adc
shl
mov
std
mov
imulb
jg
sbb
jo
cltd
jno
std
into
sbb
push
sub
out
sub
imul
xor
jg
fdivl
dec
dec
repz
mov
dec
push
ja
fcmovnb
push
popa
mov
xchg
pop
aaa
push
pop
idivb
xor
test
movsb
ja
dec
dec
fiadds
fnsave
ds
insb
imul
outsb
push
mov
ficomps
pop
int
inc
nop
cwtl
lret
mov
ret
outsb
push
mov
imul
sbb
insb
adc
sub
sbb
dec
fcomps
dec
push
jle
and
arpl
jno
popa
or
scas
cmpsl
and
mov
fwait
push
cli
es
out
dec
dec
cltd
mov
cmpl
movsl
repnz
cmp
sbb
push
xchg
out
mov
add
stos
fwait
nop
aas
mov
dec
push
stos
pop
daa
out
loopne
dec
rorb
push
jno
pop
dec
fcmovnbe
int
pop
js
xchg
mov
int3
jge
mov
nop
inc
mov
subl
xor
inc
dec
jb
pop
jnp
lret
lea
pop
xor
in
pushf
mov
scas
mov
rclb
xchg
cmp
in
lret
test
pop
fucomp
cmp
xchg
push
daa
mov
insb
inc
pusha
ret
dec
or
bndstx
movsb
lcall
lods
rcrl
fldt
jg
jno
cmp
fidivrl
jno
adc
xlat
push
sbb
sub
push
lods
add
loope
mov
xchg
daa
out
add
pop
ljmp
jmp
mov
shll
jecxz
shrl
add
stc
jmp
js
es
sub
incb
xor
lcall
ljmp
pop
mov
adc
lds
sub
xor
mov
fdivl
push
xor
out
and
std
jb
ljmp
int3
push
out
push
cmpsb
in
leave
lods
in
jmp
data16
loope
cmc
adc
test
mov
add
lahf
pushf
out
mov
pop
cmp
xchg
lods
pop
xchg
je
and
loop
mov
mov
nop
push
das
jp
movsb
shll
movsb
jnp
imul
mov
loop
dec
dec
push
sub
lea
mov
mov
stos
fcoml
sbb
sbb
sub
xchg
mov
sub
icebp
pop
lods
cmp
inc
jg
pop
jg
jne
es
and
xchg
test
jecxz
xchg
adc
jge
mov
or
popf
lahf
clc
ja,pt
and
sub
add
cwtl
cmp
test
mov
mov
test
sbb
mov
in
pop
adc
in
shlb
pop
mov
imul
and
pop
xchg
repnz
shr
jne
xchg
add
int3
sub
jns
pop
mov
adc
je
pop
mov
loope
jp
add
int
jne
mov
adc
dec
lret
sti
andl
daa
and
popa
inc
pop
lahf
lahf
shlb
loope
push
push
push
add
aas
jecxz
pushf
lcall
cld
adcl
inc
jmp
in
and
adc
pop
cmp
dec
dec
jl
lcall
sub
cld
sub
xor
js
jns
sti
sub
cmpsl
jl
loopne
aas
nop
sub
push
iret
adc
iret
sbbl
test
ret
je
jne
jecxz
fwait
xor
jnp
pusha
sub
cmp
adc
and
rclb
cpuid
fwait
push
imulb
orb
repnz
andl
xchg
insb
sub
inc
clc
testb
int3
add
lahf
adc
ljmp
popf
sbb
dec
xor
jo
loope
jmp
ret
call
jno
adcb
aaa
iret
cld
jmp
into
js
xchg
sbb
pop
pop
or
imul
out
test
sub
mov
mov
sbb
aam
stc
pop
mov
js
sbb
inc
cmp
call
imul
int3
mov
jl
inc
mov
out
inc
fiaddl
sub
dec
in
hlt
cld
sub
mov
and
and
shrl
clc
bound
ljmp
clc
xlat
cli
adc
inc
add
inc
jmp
mov
std
rcrb
rcll
push
pop
bound
test
int3
xor
insl
or
fildll
aas
fcmovb
fimuls
jo
gs
aas
clc
inc
scas
jae
nop
push
xor
in
popf
in
in
bound
into
push
adc
cmp
mov
xchg
shll
add
adc
das
mov
nop
cmp
enter
cltd
movsl
in
nop
adc
mov
lock
add
inc
mov
test
fistpl
mov
push
or
xchg
mov
push
subb
jl
int3
rorl
mov
or
dec
jge
je
add
call
mov
shr
aam
ja
int
sbb
mov
pop
dec
and
loope
mov
out
loope
pop
cmc
jae
or
stos
xchg
push
dec
pop
popa
mov
cmp
add
lock
sub
jb
or
mov
push
leave
imul
in
out
lret
adc
lret
mov
xchg
stos
push
lret
mov
fs
mov
or
mov
jle
and
jnp
mov
dec
and
rcrl
enter
sbb
les
push
stos
push
cmpsb
and
xchg
cltd
adc
mov
stos
imul
cld
jg
in
pop
mov
and
jae
mov
jl
inc
ljmp
stc
arpl
jns
lret
out
adc
mov
inc
and
daa
pop
jg
stc
mov
ret
cmc
mov
xchg
inc
mov
xor
test
out
jne
insb
stos
push
loop
enter
adc
scas
arpl
bound
cwtl
sub
add
aas
ret
inc
lcall
jnp
cmpsl
cmp
xchg
hlt
mov
push
xor
push
loope
adc
lds
call
mov
jne
cltd
adc
and
repnz
xor
insl
sbb
dec
vaddsubpd
int3
lods
movsb
cmp
dec
test
push
or
insb
loopne
mov
pop
sub
pop
mov
jle
xor
inc
adc
popf
push
fimuls
sub
call
sbb
push
cmp
mov
pop
push
dec
push
ljmp
addr16
push
inc
aad
mov
enter
adc
std
aad
iret
lods
sub
jg
out
lea
and
xchg
sarl
inc
jne
add
push
lods
in
push
sti
push
mov
jge
ret
imul
xor
adc
push
bound
fistps
pusha
das
repnz
adc
out
cli
mov
and
popa
enter
out
mov
repnz
iret
rcll
sbb
dec
and
adc
cli
push
pop
inc
scas
aam
pop
rcr
movsl
mov
jp
insb
push
lea
lods
je
loope
clc
arpl
fsin
dec
out
xlat
das
and
fxch
cwtl
ljmp
push
jae
test
pop
or
movsl
test
add
stos
push
std
mov
ljmp
addr16
inc
inc
lret
push
ja
out
jae
je
jns
fs
jp
mov
sub
cli
inc
sbb
sbb
fstps
push
and
sbb
adc
mov
imul
cmc
sub
cmpsb
adc
jp
adc
iret
pop
mov
mov
std
or
loop
lret
stos
mov
mov
cmc
mov
sti
mov
repnz
addl
mov
mov
pusha
call
cli
inc
mov
enter
adc
cwtl
lret
sahf
adc
loope
fists
fisubs
ss
jae
mov
and
adc
jmp
cld
jo
movsw
dec
inc
cmpsb
or
inc
push
push
pushf
mov
imul
loop
sbb
aam
inc
jbe
cmpsl
sbb
sbb
mov
mov
loopne
movsb
xor
xchg
inc
cmp
mov
addr16
jns
sbb
fnclex
sarl
xchg
aad
jne
cmp
stc
xor
and
and
dec
cmp
repz
inc
icebp
femms
ja
rcll
xchg
in
or
in
adc
inc
out
stc
mov
in
ret
mov
mov
inc
xor
sub
cli
stc
ja
leave
adc
fdivp
mov
mov
les
jle
jae
in
adc
sti
xor
add
std
lret
xchg
sarl
fstl
mov
ljmp
mov
repnz
aam
sbb
mov
notl
mov
xor
or
jmp
cmp
pop
xor
cvtps2pi
test
sub
jecxz
lods
adc
push
jmp
pop
pop
gs
orl
push
or
sub
out
arpl
pop
pop
sub
pop
add
jmp
insl
movsl
nop
das
dec
and
jecxz
xor
nop
push
out
cwtl
shrl
sub
sub
inc
push
loope
mov
push
dec
sub
gs
ja
push
adc
aas
sahf
shll
movsb
cs
jmp
ljmp
and
pop
sbb
loop
lods
and
cmc
lea
dec
call
sub
jmp
sbb
cmc
cmpsl
imul
icebp
movl
jno
xlat
adc
xor
aaa
fsubr
filds
sti
fbstp
dec
push
insl
jp
xor
jmp
leave
dec
adc
adc
jo
in
jne
adc
push
fisubl
xor
xchg
jp
mov
ja
ficoml
out
adc
test
scas
jmp
xor
pop
pop
or
jp
or
or
andb
fcmovnb
jbe
enter
push
fld1
icebp
dec
rol
gs
mov
xchg
repz
imul
fisttps
mov
or
and
lds
mov
cmp
in
push
xchg
jl
lret
pop
andb
cmp
mov
mov
adc
idivl
cmp
mov
insl
xlat
dec
push
jns
icebp
mov
aad
data16
cmp
mov
outsl
dec
add
xor
loop
imul
ret
xor
outsb
sbb
aad
dec
lahf
inc
fwait
fs
std
cltd
das
cmp
cmp
or
mov
dec
inc
insb
fwait
mov
jge
inc
mov
shrl
sti
pop
movsl
iret
sub
mov
jmp
xor
mov
pop
out
mov
pop
and
lock
adc
mov
adc
and
mov
popl
inc
cmp
mov
sbb
hlt
call
arpl
jg
inc
mov
xchg
fdivrl
mov
stos
shlb
sarb
rcll
arpl
mov
mov
popa
test
xchg
lock
andl
scas
iret
aaa
fwait
push
push
xor
mov
jbe
cmp
xor
movsb
lds
aad
test
inc
mov
ret
imul
jg
lock
mov
jbe
outsl
movsl
call
mov
scas
mov
push
or
les
js
inc
add
test
std
and
xor
into
ficomps
in
dec
mov
xorb
out
loopne,pt
cli
pop
cli
fsincos
fidivrl
add
add
lahf
sar
mov
aad
fdivs
shlb
cmp
fst
loop
jb
add
lret
movsb
cmp
in
sub
mov
divb
addw
inc
or
test
sarb
mov
out
into
mov
mov
or
mov
faddl
in
or
jmp
loopne
pop
movsb
ljmp
cmp
das
and
or
in
cmp
cld
lcall
das
sbb
push
lds
xor
insb
xor
call
sbb
dec
mov
dec
jmp
xchg
xchg
lods
sbb
pop
push
xchg
das
fcoml
js
cmp
in
es
js
mov
xchg
int3
mov
rcrb
lcall
push
jae
and
jnp
push
out
xor
mov
pop
cmc
cmp
in
xchg
xlat
jo
pop
dec
mov
xlat
cmpsb
fdiv
int
mov
hlt
or
dec
add
mov
fldl
xor
and
mov
push
cli
and
add
cmpl
adc
fcompl
pop
mov
jl
dec
mov
das
xchg
or
cmp
adc
pop
movsl
loop
mov
mov
mov
rcll
cmp
stos
mov
sbbl
jl
rcrl
in
outsb
mov
jecxz
in
jle
mov
inc
sbb
lahf
iret
dec
mov
mov
or
test
ds
jne
les
test
jmp
inc
mov
stc
adcb
stos
lods
shll
aas
inc
cmp
out
call
aam
adc
mov
stc
jae
and
into
fcomi
fldt
xor
and
test
test
mov
dec
pop
push
mov
push
out
adc
pop
xchg
xor
xor
sbb
out
std
adc
adc
gs
addr16
imull
push
sbb
imul
in
mov
jbe
out
sbb
lods
mov
or
lcall
iret
les
jp
mov
loope
dec
fcomps
mov
mov
mov
cmp
mov
mov
fnsave
xchg
in
cs
gs
xchg
sbb
xchg
xchg
push
sbb
scas
or
xchg
mov
pushf
push
out
or
call
addl
es
out
rcr
xchg
loopne
leave
sbb
and
push
mov
jmp
bound
add
push
fsts
and
cwtl
or
lahf
jo
sbb
punpckhdq
sub
xor
jmp
jecxz
jne
clc
int3
add
mov
imull
nop
jb
shrl
mov
clc
pushf
arpl
xlat
sarl
jno
xchg
ret
ss
movsl
loopne
loope
mov
cld
popf
hlt
ret
push
addl
int3
inc
subb
mov
iret
push
xchg
inc
xchg
cmp
cmpsb
decb
popf
mov
insb
movsb
pusha
nop
subl
or
cmp
mov
flds
jp
dec
mov
fcomi
lcall
xor
xor
push
lret
mov
loop
in
xor
rcl
mov
das
pop
loopne
mov
add
jbe
mov
fldenv
aam
mov
ret
adcl
inc
lea
jg
in
sub
push
xchg
orl
aas
mov
mov
adc
lahf
in
orb
mov
xchg
inc
out
xchg
dec
outsl
sub
icebp
fcmovu
mov
je
sub
xchg
push
pop
jnp
mov
push
insl
test
or
in
inc
xor
mulb
push
mov
mulb
or
adc
pop
sbb
jne
push
daa
jge
fucomi
mov
inc
loope
lods
xchg
int
movsl
mov
mov
jns
in
shll
xchg
inc
int
sbb
ret
push
mov
movsl
sbb
xor
shlb
jb
bound
or
pushf
push
andl
clc
stc
arpl
pop
pop
push
stc
sbb
mov
roll
sbb
xchg
ja
js
mov
cli
mov
jns
outsb
fildll
dec
xchg
clc
xorb
adc
hlt
inc
test
rcll
add
add
aas
mov
pushf
test
daa
ds
icebp
jnp
es
pop
shrb
lds
pop
add
stos
cmc
mov
imul
mov
or
cltd
jno
ret
mov
pop
lret
xorl
pop
inc
loop
jo
into
hlt
adc
lea
lods
data16
adc
xchg
mov
fcmovnbe
pop
test
movsb
mov
mov
sar
mov
cmp
jmp
into
mov
dec
inc
sbb
sti
sub
inc
fsubs
insb
int3
aas
sub
ret
jns
and
lods
inc
frstor
cltd
pop
push
out
ss
dec
mov
scas
xor
out
pop
mov
mov
loopne
stos
adc
outsb
test
rorl
xchg
mov
pop
dec
jg
xchg
xor
neg
fwait
sub
enter
popf
adc
xor
lock
mov
test
inc
push
jp
mov
lcall
sub
daa
mov
push
mov
mov
punpckhbw
pop
test
mov
sarl
enter
inc
xchg
shll
cmpsl
pop
lcall
fdivp
loopne
jnp
cmp
mov
pop
call
inc
testl
and
out
pusha
inc
test
sbbb
pop
sti
mov
lea
pop
pop
imul
cmp
xchg
and
clc
pop
frstor
pop
je
adcb
push
jns
mov
leave
cmpsl
jno
sub
inc
xor
sbb
in
rclb
pop
loope
push
cmp
xor
fs
push
inc
or
popw
jo
pop
cmp
sbb
arpl
xor
add
jbe
repnz
sbb
mov
mov
mov
sub
lea
add
loop
mov
popf
sub
jnp
clc
pop
push
mov
mov
sbb
adc
rclb
fcompl
push
in
mov
mov
sbb
je
jl
daa
push
insl
fld
in
outsl
pop
adc
xchg
mov
mov
jp
xor
ja
mov
mov
adc
negb
pop
add
lret
ret
mov
addb
jno
imul
cmc
lods
ret
add
jmp
out
xchg
call
push
adc
xor
shll
cmp
aas
mov
in
and
add
jae
out
scas
testb
add
adc
ret
insb
cwtl
std
ror
ljmp
add
gs
sub
cli
add
pop
test
or
sub
jmp
popa
fstl
shrl
inc
ds
xchg
fwait
jne
and
das
sahf
adcl
jb
jne
sub
and
jle
cmpsb
push
xor
jp
addr16
sbb
pop
jbe
lret
shr
cld
add
push
xchg
lods
aam
andb
sbb
and
ret
add
cli
stc
ljmp
sub
pop
mov
push
les
sbb
cmc
das
cmp
das
adc
decb
xor
xor
fs
and
stos
mov
xchg
and
stos
cltd
mov
jae
imul
clc
sub
pop
lahf
pop
push
and
mov
movsb
pop
popf
mov
mov
jb
lcall
je
rclb
inc
cmpsb
lea
cld
inc
adc
inc
push
sti
jp
mov
cli
cmp
aam
cmp
jmp
jge
adc
shll
je
in
lds
mov
mov
add
aam
cmp
mov
cmp
cmpsl
xchg
or
jno
jle
dec
in
jae
inc
mov
fwait
sahf
bound
sub
fldcw
mov
cmpl
int
stos
mov
lds
add
sbb
leave
xor
push
mov
or
push
lds
mov
fs
push
mov
xor
out
enter
stos
pop
pop
call
negl
jecxz
pop
scas
aam
mov
xor
sahf
scas
lcall
imul
ljmp
jae
ja
enter
stc
jno
lahf
xchg
xor
jne
int
in
pop
mov
xchg
fiaddl
pop
jecxz
pop
or
sahf
mov
cli
sbb
std
imul
daa
ljmp
cld
icebp
movb
ja
in
pop
cmp
xor
dec
das
and
cmp
ss
mov
push
sbb
enter
cltd
pop
cmpsb
xlat
movsb
and
or
inc
push
in
stos
pop
lds
sbb
out
mov
fs
add
mov
sahf
jg
xor
adc
ss
cmp
jne
jmp
cmpb
or
and
jno
scas
iret
ret
sahf
daa
jge
push
fmul
xorb
add
lret
and
adc
mov
test
rol
shr
div
push
dec
inc
test
push
mov
adc
neg
clc
std
sub
fcomps
vshufpd
mov
enter
fcmovnbe
test
outsl
xchg
inc
add
inc
jle
adc
or
mov
lock
ljmp
stos
xchg
movsb
mov
cmpsb
xlat
jb
cmpb
and
es
pusha
iret
push
cmp
add
mov
call
lods
ds
mov
sub
cwtl
cmp
nop
add
and
dec
adc
shll
fnstcw
data16
jae,pt
orb
shl
inc
add
mov
test
fisttpl
shll
lcall
jecxz
test
xor
gs
pop
push
gs
inc
jae
or
sub
movsl
dec
enter
shlb
popf
cmp
addb
out
int
jne
dec
in
decb
xorl
daa
and
pusha
cmp
dec
into
dec
fidivrs
xor
addr16
xchg
movsl
xchg
dec
scas
fcoms
and
dec
sbb
inc
cli
push
in
out
fcom
push
jge
pop
inc
adc
cmpsl
js
xor
pop
add
lahf
xchg
nop
jmp
xchg
push
dec
adc
jbe
out
add
popa
insl
sbb
dec
test
sub
rcll
bound
sbbl
into
icebp
test
mov
test
mov
mov
push
test
push
pop
ficomps
lods
fiaddl
mov
lea
cli
aad
cmpsb
cmpsl
sub
pop
mov
cs
ret
sbb
xchg
fld
shrl
push
or
orb
test
cmp
mov
and
jg
lods
ds
lock
mov
dec
scas
xchg
pop
cmp
add
dec
push
mov
jbe
inc
add
in
pop
fsubs
shll
push
test
inc
out
das
lock
jecxz
xchg
dec
adc
jle
mov
insb
cs
cli
stos
mov
mov
cmp
xchg
addr16
adc
xor
dec
mov
or
out
sub
shl
rolb
cwtl
pop
cwtl
jbe
inc
mov
aam
pop
or
pushl
loope
mov
aas
pop
loopne
sbb
pop
jge
in
dec
ret
xor
ss
ret
mov
pop
xor
in
sub
or
test
lea
movb
fdiv
cmp
cmp
ja
add
cmp
pusha
jne
andl
out
cs
out
imul
icebp
push
or
push
pushf
cli
sub
and
jne
adc
pop
push
int
repz
dec
int
jmp
mov
push
dec
addr16
mov
inc
sbb
mov
enter
xchg
sbb
mov
dec
mov
aam
int
fneni(8087
mov
in
test
pop
xchg
dec
inc
or
int3
sub
adc
inc
pop
xchg
in
mov
adc
arpl
adc
xchg
push
cmpsb
mov
or
adc
inc
arpl
xor
push
jle
mov
and
jnp
aad
add
pusha
js
fcmovu
sbb
inc
mov
mov
xlat
sti
dec
scas
mov
repz
in
mov
xor
fidivl
mov
or
sub
or
mov
inc
dec
roll
stos
je
jno
add
fisttpll
iret
jg
stc
sub
test
or
inc
in
inc
inc
divb
fisubrs
pop
mov
hlt
idiv
lret
xor
rcl
xor
inc
lahf
daa
push
push
xchg
mov
xor
mov
add
lahf
aas
lcall
mov
cld
rol
mov
test
scas
rcrl
fsub
ja
mov
xlat
insl
insb
or
lea
jns
sub
iret
out
sub
xlat
inc
jp
xchg
jae
xor
add
cmp
ljmp
call
mov
add
dec
outsl
cmp
pop
sub
aad
cmpb
push
movsb
test
add
xchg
add
insb
cmp
loopne
xorb
jns
shr
cmp
lods
std
pop
hlt
cmp
loopne
mov
pop
cld
push
push
xor
jbe
xlat
cmp
test
xchg
mov
call
xchg
popa
inc
mov
je
mov
cmpsb
aam
sub
fstpt
xor
cmp
adc
xchg
inc
cmp
fsubrl
aad
pop
or
arpl
pop
fnsave
or
jne
dec
movsl
orl
cmpsl
xor
adc
push
outsb
outsl
scas
loope
xor
subl
xor
pop
cwtl
mov
add
xlat
adc
jmp
dec
cmp
aas
loop
dec
mov
or
sub
mov
lahf
sti
xor
xlat
arpl
xlat
mov
dec
or
xor
shlb
dec
movsb
pop
jns
and
add
xchg
and
lcall
jb
or
in
mov
pop
fisubrs
adc
jnp
pop
xlat
movsl
mov
ljmp
xlat
and
lds
enter
pop
adc
repnz
cmp
or
stos
jne
xor
aam
in
add
cmp
or
jae
mov
frstor
sub
sti
aaa
scas
dec
push
xchg
jecxz
cmpb
push
and
xor
and
es
inc
jmp
xchg
jnp
cli
push
push
or
inc
push
enter
leave
mov
dec
sub
ret
xchg
sbb
clc
movsb
sub
sub
aaa
movb
jp
inc
pop
shrb
mov
out
lret
stos
inc
add
pushf
cli
inc
aas
push
int3
or
mov
sub
cmp
push
adc
fst
sbbl
js
inc
movsl
cmc
inc
xor
adc
lahf
sbb
cli
shl
in
xchg
sub
jae
xchg
xchg
in
xchg
cli
lret
push
lods
rcll
sbb
lods
shlb
sbb
inc
lods
or
or
andb
es
fs
jp
push
mov
mov
cmpb
into
xor
mov
push
cmp
pop
or
pop
ret
ret
into
jb
sbb
xor
fisttpll
sahf
adc
cmpsl
push
cmpsl
int
sti
sub
cmp
lds
lods
popa
cmpsb
stos
adc
jns
or
popa
adc
fnstenv
jnp
dec
jp
xor
mov
dec
push
mov
or
testb
mov
xchg
movsl
adc
clc
lahf
dec
pusha
sub
lcall
adc
mov
or
int3
nop
xchg
lock
jo
insl
lret
lret
and
push
pop
jbe
jno
xchg
dec
out
out
add
stos
add
or
mov
gs
mov
hlt
in
add
test
cmpsl
icebp
sub
stc
lret
push
inc
roll
xor
sbb
xor
pop
cmpsb
icebp
cmp
xor
mov
lds
sbb
adc
scas
cmp
inc
jp
addr16
cmp
jp
aad
iret
out
xchg
fyl2xp1
fmul
pop
je
xor
mov
jne
sbb
jne
sub
push
lret
jne
push
aad
mov
cwtl
in
jae
pushf
xchg
data16
mov
push
adc
jmp
jmp
add
cmp
std
add
sbb
stc
lods
outsb
push
pop
pop
repnz
call
cmp
outsl
insb
pushf
xchg
insl
ss
mov
loopne
or
add
pop
add
xchg
addr16
test
cmc
sub
sarb
outsb
andb
push
add
nop
add
sbb
jle
cmpl
sarl
add
mov
cmpb
or
sbb
dec
pop
mov
loop
cmp
add
ss
xchg
lock
ret
and
sub
imul
push
in
jg
loope
sbb
pop
lea
andl
lret
dec
outsl
jge
out
sbb
dec
mov
adc
movaps
jle
fbld
dec
sbb
rcrb
adc
mov
and
mov
xor
loop
aam
data16
rorl
and
or
sbb
int3
stos
sub
cltd
xlat
fidivrl
cbtw
daa
sub
in
sub
and
dec
aaa
fildl
inc
test
sub
xchg
test
fwait
imul
jmp
hlt
dec
sahf
pop
lahf
cmpsl
pushl
lret
mov
divb
aad
jns
adc
jnp
fldt
jne
insl
jno
push
jge
sbb
mov
imul
cmp
sbb
dec
sbb
lods
data16
push
adc
xchg
sub
test
mov
xchg
loop
xchg
xlat
sbb
dec
mov
lahf
cmp
out
and
cmpsb
add
mov
sub
aam
es
cltd
push
fbld
imul
inc
ljmp
sub
jne
scas
ja
and
adc
lds
ret
sbb
adc
mov
fsubrs
fcmovu
addr16
cmp
push
xor
in
jmp
fcompl
out
loopne
lds
xchg
push
je
pop
shlb
pop
test
adc
push
pop
frstor
in
jp
in
inc
sbb
mov
xor
in
jle
test
insb
cmc
pop
mov
cltd
lock
sti
jle
ja
push
push
mov
xchg
lret
xor
push
cmp
or
mov
mov
ret
in
int
les
gs
cli
cli
movb
jb
pop
inc
cmpsl
and
ja
jo
jo
fsubl
jb
push
add
sbb
gs
in
out
mov
into
daa
enter
pop
dec
and
aad
xor
mov
lea
jl
pushf
or
popf
mov
dec
inc
leave
aas
stos
mov
movsl
dec
shrb
and
or
test
sti
jb
daa
pop
int
pop
inc
xchg
or
in
adc
movsl
jmp
sub
pop
out
xchg
cmc
lret
mov
stos
je
mov
adc
cwtl
pop
hlt
adc
test
mov
fisubrl
adc
push
jmp
fwait
jecxz
jle
scas
fsubl
xor
dec
sub
mov
ljmp
daa
mov
inc
imul
mov
sbb
adc
and
cmp
rorb
add
dec
add
lock
push
jae
push
loope
hlt
and
add
add
negl
out
mov
aam
adc
fmuls
xchg
mov
adc
xor
aam
push
js
sahf
aad
mov
or
sahf
cmpsl
pop
std
lods
fmulp
jnp
xchg
push
int3
in
mov
mov
mov
rcrb
or
dec
xor
inc
pop
adc
fmuls
test
push
mov
cmpsb
jns
hlt
push
jmp
add
mov
outsl
daa
jnp
pop
jecxz
xor
xchg
loope
inc
outsb
js
lret
std
xchg
push
push
push
or
push
fimuls
sub
ja
scas
aas
pop
std
es
test
loope
bound
cs
add
mov
pop
and
jle
dec
xchg
mov
cmp
lcall
sahf
add
mov
iret
arpl
iret
loop
test
gs
lea
fdivs
cmp
dec
pop
push
adc
hlt
adc
ror
cmp
jb
dec
cltd
sbb
pop
js
rcll
je
mov
adc
xchg
rcl
loopne
xor
mov
sbb
xor
and
push
push
sub
xor
test
sbb
and
or
push
ss
add
sahf
mull
std
addr16
jbe
hlt
call
cmpl
mov
dec
dec
aad
loopne
or
ljmp
lods
add
mov
aad
sub
daa
add
push
mov
pop
add
lret
and
mov
add
xchg
bound
aas
mov
or
dec
xchg
mov
aaa
mov
or
dec
sbb
icebp
test
aaa
leave
mov
jle
jne
pop
cmp
out
gs
js
cmpsl
mov
lret
in
lret
mov
sbb
inc
icebp
arpl
ret
out
repz
movsl
xchg
jno
aad
xor
mov
xor
outsl
daa
jbe
mov
aas
dec
adc
adc
ret
or
sarl
or
rcll
jb
adc
inc
ds
enter
dec
push
or
loope
hlt
fistpl
mov
mov
adc
dec
jne
outsl
addl
enter
adc
xchg
pop
lahf
adc
pushf
add
sarl
enter
lret
out
and
imul
data16
dec
nop
pusha
adc
push
inc
popf
fsts
xor
dec
and
jns
in
das
out
mov
sarb
push
rcll
xchg
mov
mov
dec
daa
ss
sub
adc
pop
adc
insb
push
ds
and
push
cmp
out
cwtl
mov
cmp
call
pop
mov
insb
and
add
das
pop
rcrl
adc
adc
shlb
lret
outsb
fldl
repnz
jae
pop
ljmp
test
pushf
mov
lods
push
cmp
xlat
js
inc
loopne
test
ljmp
test
pop
punpckhdq
fbstp
lret
and
cld
or
pop
divl
das
fdiv
xlat
movb
aaa
xchg
mov
lods
int
loope
xchg
jmp
adc
out
jecxz
ret
movsb
inc
lods
enter
les
es
movsl
rorl
lods
mov
xor
subb
mov
sub
into
clc
in
add
jae
inc
push
push
xchg
xor
ja
sbb
pusha
in
pop
dec
pop
sbb
jl
jecxz
mov
dec
jmp
sub
inc
arpl
add
jae
inc
arpl
xchg
and
inc
pop
sbb
js
and
lock
movsb
xor
push
jmp
jge
pushf
cmp
je
sub
hlt
icebp
lods
sbb
sub
xor
fs
insb
ljmp
mov
push
adc
push
jl
push
dec
mov
dec
std
dec
sub
fisubl
pop
push
add
in
jl
mov
popa
adc
push
in
pop
in
stos
cli
xchg
or
inc
jmp
add
push
lahf
addr16
xchg
xchg
lods
rcl
inc
or
mov
pop
cmp
leave
inc
jnp
ds
or
jb
add
and
dec
rorb
enter
jl
xor
mov
pushf
dec
mov
or
adc
js
push
arpl
lods
jne
std
or
push
lahf
xor
lods
popf
jmp
gs
sub
aas
push
sbb
jb
iret
sbb
stos
fsubs
sbb
cmc
jno
imul
pop
sub
popa
mov
mov
inc
shll
and
call
es
push
fldcw
sarb
imul
dec
sar
aam
push
adc
lods
jae
aaa
or
mov
repnz
insb
cmpsl
hlt
je
jge
push
das
xchg
clc
fs
pop
addr16
inc
fwait
ljmp
sub
cmp
int3
int
xchg
leave
adc
or
adc
shrb
out
cmp
clc
lret
cmc
incb
pop
add
mov
or
ret
adc
pop
mov
mov
cmc
aas
cmp
sbb
pop
popa
xor
test
mov
sbb
imul
dec
call
outsl
pusha
gs
dec
addr16
out
cmp
push
not
iret
push
rcr
repz
scas
fsubl
cmpsl
mov
or
pop
xor
scas
cmp
xchg
sarl
loop
fldenv
mov
and
js
test
mov
mov
cwtl
cltd
xor
mov
and
push
les
xchg
sbb
in
andl
ret
sbb
inc
inc
push
jp
mov
insl
stc
cmp
jns
aas
aaa
adc
cmp
or
xchg
addr16
movsb
aam
mov
jmp
pop
add
xchg
nop
je
sarb
add
les
inc
mov
sbb
xchg
bswap
fistl
fmull
fwait
test
pop
mov
aaa
mov
mov
lahf
mov
add
mov
enter
std
pop
xchg
test
lahf
les
push
push
sarl
loope
jae
in
mov
adc
fnstenv
test
mov
pushf
in
xchg
inc
pop
or
in
scas
mov
ja
lret
daa
pusha
cmp
jne
mov
mov
sbb
cwtl
call
icebp
ret
inc
sub
xchg
push
dec
jns
mov
jbe
pop
in
adc
fdivs
mov
adc
iret
cld
pushf
daa
mov
xchg
inc
aas
shlb
mov
mov
jo
jl
xor
sbb
xor
out
clc
inc
and
push
adc
pop
xchg
xchg
mov
stc
xchg
jne
mov
jmp
pop
test
data16
cmpsb
ret
push
lds
mov
mov
pop
jge
insb
ret
lods
loopne
adcb
in
scas
out
inc
sbb
mov
ds
nop
sbb
hlt
js
call
insb
lods
push
mov
xor
cmp
sbb
fs
mov
cld
lock
push
stos
ret
pop
pop
out
xchg
gs
fdivrp
hlt
and
xchg
mov
push
dec
test
test
fiadds
cmpsb
pop
out
jl
ret
out
push
push
cli
loope
sub
sub
mov
adc
test
mov
enter
push
arpl
mov
xor
ljmp
lock
pushf
pop
add
test
les
pop
fs
mov
pushf
aam
mov
call
pop
xchg
and
fnsave
aam
xor
andl
push
xor
mov
xlat
jnp
outsl
hlt
rcrb
sub
mov
int
out
push
cmp
test
fildll
dec
cmpsb
cmp
inc
dec
mov
adc
es
repz
movsl
mov
fcmovbe
cli
das
jecxz
pop
sbb
dec
inc
push
push
test
cmpsb
icebp
dec
xor
cmp
dec
lret
mov
pop
sarl
rcll
dec
pop
scas
inc
xchg
inc
xor
mov
sub
cmp
mov
mov
rclb
mov
mov
loopne
xor
pop
popf
outsl
ljmp
or
les
stc
rcrb
or
xchg
addl
imull
xor
movsl
jno
pop
fcoml
loopne
loopne
mov
sub
inc
or
inc
stos
dec
add
movsb
jb
adc
xchg
push
mov
pusha
push
sbb
hlt
mov
mov
dec
mov
dec
add
ljmp
add
pop
xlat
mov
sub
adc
addb
xor
sub
and
mov
outsb
aas
cmp
ja
mov
inc
xor
inc
fcoml
lea
movsb
test
mov
mov
sbb
addr16
pop
js
jecxz
mov
cmp
mov
inc
mov
imul
fdivl
push
inc
jbe
lret
sahf
es
std
inc
mov
inc
push
mov
inc
inc
inc
xor
ret
mov
insl
pop
mov
test
and
pushl
jl
gs
inc
pop
adc
sbb
gs
push
push
movsl
mov
adc
decb
pop
xor
sahf
jnp
leave
adc
cs
or
sahf
sti
add
or
out
mov
sub
inc
fmull
fsubrl
std
and
inc
jo,pn
pop
in
gs
dec
cmp
js
dec
mov
jge
repz
pusha
into
rorb
cmp
movsl
insb
imul
insl
fistpl
sahf
in
loopne
mov
test
inc
sub
dec
lock
push
xchg
mov
fdivrl
stos
scas
add
dec
fcom
nop
add
mov
jp
pop
inc
mov
push
jne
cmp
jo
pop
cmpb
repnz
jnp
xor
push
mov
and
idivw
or
lods
adcl
fcoml
push
xor
loope
js
dec
xchg
xor
lds
push
cwtl
popf
xchg
sti
daa
inc
stos
push
cmpsb
or
dec
jmp
call
and
orl
jne
jl
loope
push
daa
inc
sub
xor
jg
hlt
dec
xor
xchg
pusha
pop
xor
cwtl
js
icebp
push
cmp
dec
pop
pusha
xchg
xchg
sbb
sbb
lcall
pop
xchg
or
or
or
and
mov
lret
mov
mov
mov
push
rolb
jp
sbb
mov
movsb
push
xor
stc
in
push
std
push
dec
sbb
adc
cmp
inc
sbb
add
mov
mov
and
orb
push
add
push
mov
xchg
jl
xchg
in
stc
int
jae
jle
imul
inc
mov
stc
pop
push
xor
je
cs
jecxz
jns
mov
jns
xlat
xor
sub
push
jns
insb
in
sbb
jg
pop
out
and
out
xlat
mov
adc
stc
sub
add
pop
fstpl
jbe
in
out
pop
xor
mov
in
or
dec
inc
mov
add
in
inc
jae
sar
xchg
lods
into
cmp
or
cmp
data16
xchg
xor
mov
push
fwait
cmp
nop
loop
loopne
xchg
std
loop
clc
sub
in
int3
push
arpl
adc
mov
data16
aas
insl
sbb
cmp
out
push
mov
dec
in
cmp
lods
aaa
add
fidivs
xchg
or
icebp
pop
fstl
repnz
xor
push
mov
cwtl
sub
movsl
dec
xchg
push
movl
or
push
mov
xlat
xchg
push
into
das
cwtl
inc
insb
out
cmp
imul
mov
and
xor
inc
roll
lea
test
inc
cmp
je
mov
loope
adc
xchg
xor
xor
in
pop
lea
test
lock
mov
jo
addr16
icebp
cmp
and
and
or
cwtl
pop
inc
xchg
cmc
mov
push
and
insl
jmp
adc
push
push
mov
fstl
mov
pop
je
adc
add
in
mov
pop
add
or
or
cs
and
cmpsl
cmp
jl
sbb
in
jmp
inc
cld
sbb
adc
movsb
and
pop
xchg
adc
push
lods
cmp
jp
loope
ds
jnp
push
out
jb
cmc
adc
shrl
mov
sub
add
pop
jg
test
jl
dec
or
pop
ret
les
mov
movsl
insl
cmp
mov
jae
stc
call
stos
push
stc
shrb
sbb
xchg
jp
jmp
lea
xor
dec
mov
mov
mov
xchg
lods
push
pushf
dec
roll
add
inc
push
dec
xor
xor
add
test
out
fs
or
movl
xor
push
xchg
sbb
bound
fs
in
add
int
dec
and
and
inc
jnp
mov
imul
cmp
loope
cltd
ret
fwait
mov
push
imul
outsb
iret
jno
cmp
pop
jp
outsb
sbb
aam
jmp
pop
mov
mov
aaa
leave
and
xchg
shlb
jae
mov
cmpsl
insb
add
and
movsb
and
mov
jl
repnz
lcall
mov
push
icebp
adc
jecxz
mov
mov
cmpsb
jbe
jb
shrb
pop
jne
mov
insb
push
dec
mov
add
or
or
in
cmp
pushf
pop
lods
fwait
push
sbb
mulb
arpl
add
jmp
xchg
incb
dec
stc
inc
and
gs
movsl
adc
xlat
push
inc
nop
jg
push
int3
cltd
push
pop
hlt
std
out
adc
pop
in
and
stos
adc
xor
cltd
jecxz
mov
outsb
popf
ret
popf
mov
and
out
xor
mov
stos
mov
inc
adc
movsl
jge
cmp
pop
stos
rcll
lods
repnz
out
stos
xchg
jns
push
push
fs
shl
fcomps
sub
test
or
dec
xorl
xor
repz
mov
xchg
in
ss
ror
test
and
ret
mov
jl
mov
into
mov
lcall
rorl
mov
xchg
pushl
or
xor
xor
cmp
inc
int3
push
das
shlb
jl
popf
jg
out
aam
fdiv
dec
sbbb
or
out
mov
pop
cmc
clc
mov
lods
xor
insb
push
pop
fldt
sbb
jp
out
shlb
das
test
ret
mov
pop
add
mov
xchg
jp
lods
outsl
jmp
dec
mov
sub
push
sahf
adc
lods
cmp
aas
lret
inc
jg
mov
mov
stc
inc
inc
push
or
jp
mov
std
out
sub
cmpsb
jle
iret
pushl
stos
push
pop
leave
cmc
sbb
xor
jle
clc
pop
mov
enter
clc
adc
lcall
xlat
clc
and
jmp
orl
pop
add
in
pop
lods
cmp
add
mov
jl
mov
andb
push
or
mov
lcall
pop
push
std
fldcw
ja
addb
or
das
mov
inc
xchg
or
ret
jb
cli
xchg
int
mov
push
sahf
dec
ret
dec
gs
or
fwait
insl
dec
push
addb
lret
push
ficoml
jbe
add
xorb
dec
lcall
jp
add
jno
cs
mov
pop
scas
je
add
add
mov
pop
jne
cmp
cmc
mov
dec
sub
fsubrl
adc
and
lds
xchg
int
push
xchg
inc
movsb
sbb
lret
adc
mov
adc
jmp
sbb
loope
les
sbb
jle
test
hlt
xor
cmp
lock
int
pop
push
xchg
cwtl
mov
stos
jp
clc
hlt
cmp
ja
pop
xorl
gs
xchg
push
in
icebp
sbb
push
cwtl
mov
movsb
inc
sbb
or
xchg
and
mov
mov
subw
cmp
mov
test
ret
push
cmp
push
pop
in
stc
pusha
sti
lret
mov
ret
pop
rorl
and
outsb
mov
and
adcl
inc
or
out
push
popl
mov
and
dec
out
test
mov
mov
and
add
inc
mov
push
fldenv
push
cmp
mov
aas
inc
iret
gs
hlt
gs
into
xor
mov
in
aas
cltd
cmpsb
pop
xchg
test
jno
fbstp
adc
cltd
mov
or
xchg
ss
xchg
jge
int3
stc
outsb
add
xor
mov
cmp
and
mov
mov
sbb
outsb
push
mull
lret
out
adc
inc
dec
sub
lock
fs
mov
mov
mov
sub
bound
or
push
rcll
cmp
test
jg
fwait
or
mov
or
jg
cmp
xor
scas
es
or
mov
push
jne
push
push
mov
adc
mov
nop
fwait
aad
negb
into
lods
jmp
push
cmpsl
adc
xchg
imul
cmp
jne
cmc
repz
insl
cmc
cltd
outsl
or
xchg
das
adc
call
sahf
dec
lds
inc
sbb
enter
xchg
vpcmpeqd
xchg
std
sub
scas
movsl
dec
dec
add
dec
cwtl
or
movsl
rcll
fildll
enter
mov
add
fs
popf
neg
jne
adc
lods
test
sarb
mov
ds
clc
dec
inc
push
and
mov
xchg
adc
fcoml
or
sbb
std
sub
fmull
idivb
add
jae
pop
loopne
cltd
mov
or
jle
inc
ret
sbb
cmp
out
out
fisubrl
clc
in
into
bound
push
test
inc
xorb
mov
xlat
mov
push
cmp
lods
mov
dec
inc
mov
inc
mov
inc
adc
xor
pop
xchg
daa
dec
dec
repz
rcll
mov
dec
popf
in
clc
inc
xchg
jns
lcall
jo
pop
cld
pop
pop
add
xor
inc
inc
pop
fmull
and
jo
in
fscale
and
mov
lahf
add
int
ss
dec
sub
xchg
gs
pop
ds
icebp
data16
outsl
adc
push
js
outsb
mov
xlat
mov
cmpsb
insl
inc
out
jns
shl
in
push
ficompl
clc
enter
mov
loop
mov
xbegin
pop
dec
fstp
jbe
push
cmp
jb,pn
jg
xchg
mov
xchg
xchg
aas
scas
and
pop
inc
dec
mov
jne
mov
icebp
clc
and
aaa
testl
mov
mov
jbe
nop
outsb
adc
mov
or
xchg
sub
sub
int
xchg
and
pop
xor
push
bound
mov
arpl
mov
inc
push
xlat
xchg
xchg
push
jns
rcrb
movsl
add
leave
cmpsb
xor
test
repz
repnz
pop
xchg
cmp
in
inc
xor
adc
cmp
mov
std
call
mov
mov
cwtl
lret
outsb
jnp
repz
lret
into
dec
push
mov
je,pt
xchg
push
mov
pop
in
sbbb
mov
mov
stc
jl
cwtl
in
insl
int3
sub
lds
imul
xchg
xchg
jo
push
cmp
jne
mov
test
xorl
sub
cmp
fldl
imul
mov
aas
icebp
jnp
stc
mov
mov
in
jle
bound
stos
fisttpl
call
push
mov
jp
pop
add
jecxz
lahf
dec
shrb
and
sub
fnsave
mov
orb
cld
sub
aas
loopne
mov
loop
cmp
movsb
sbb
enter
cld
fnstsw
push
or
inc
jp
mov
shll
adc
xchg
insb
out
jbe
xchg
popf
add
xchg
frstor
dec
sbb
push
aas
add
data16
das
adc
inc
movsl
xor
movsb
in
xchg
jle
xor
data16
mov
icebp
adc
scas
sub
not
and
and
xorb
clc
imul
es
mov
xor
ja
push
sub
push
push
sub
mov
loope
aaa
xchg
in
pusha
incb
in
mov
push
repz
divl
or
cmpsb
or
and
bound
sub
shl
or
in
push
mov
add
mov
add
movsl
mov
outsb
ret
shr
push
cwtl
jno
rol
sub
insb
test
push
stc
push
jmp
test
sub
and
testl
push
sub
mov
scas
fildl
fidivs
stc
fistpll
aaa
adc
int3
add
jns
stos
cmc
jae
outsl
mov
adc
sub
and
mov
lock
xchg
jmp
pop
push
inc
mov
cmp
mov
imul
inc
into
mov
ss
ret
cltd
and
inc
mov
push
insb
xchg
inc
lea
sub
fcoml
sbb
in
mov
pop
mov
iret
jne
and
jl
sbb
popa
or
or
aaa
sub
adc
mov
lods
mov
cs
pop
dec
mov
xchg
push
pop
add
dec
lret
mov
mov
xchg
jae
pop
dec
adc
adc
and
cmp
into
repnz
daa
mov
dec
mov
pop
or
aad
push
je
mov
stos
xor
jl
jge
pop
mov
push
xchg
dec
fucomip
sub
xchg
pop
scas
mov
popa
mov
into
cmp
dec
xor
stos
lret
fucomp
or
jmp
inc
mov
xor
lods
jge
cmc
aam
es
adc
scas
or
mov
jb
or
mov
mov
push
push
fstpt
out
clc
push
test
or
mov
mov
mov
push
pop
scas
lret
mov
popf
jb
xchg
jge
imul
movsl
xchg
or
inc
jns
inc
mov
adc
lds
add
ret
ja
hlt
and
fisubl
shrb
sbb
icebp
mov
xchg
fstp
je
mov
add
lahf
andb
add
push
out
stos
jno
std
std
in
arpl
les
mov
icebp
pop
xchg
inc
push
out
stos
mov
nop
clc
es
cmp
leave
mov
js
ret
je
ret
fwait
mov
in
mov
lret
sub
nop
ficompl
lcall
inc
mov
outsb
sbb
sub
xlat
fldcw
clc
mov
stos
rorl
push
push
sbb
adc
notb
push
inc
imul
pop
shll
xor
sbb
hlt
mov
dec
adc
sarb
pop
sub
xchg
jg
out
push
aam
xor
fisubl
push
pop
push
xor
in
je
xor
imul
mov
out
mov
cmpsb
mov
or
in
loopne
adc
inc
fidivrs
outsl
cld
mov
outsb
lods
inc
fdivrs
fs
jno
sub
dec
jg
cmp
mov
mov
outsb
bound
dec
sub
cmp
jp
lret
andb
into
jmp
pop
mov
fnstcw
sub
dec
inc
sub
inc
jo
and
add
adc
pop
fisubl
test
test
xchg
das
rolb
fcmovnbe
inc
dec
push
xchg
and
lea
cwtl
into
and
rorl
xchg
shl
fcomps
sbb
inc
fwait
lahf
cmpsl
cwtl
push
scas
test
jge
mov
repz
daa
ljmp
mov
enter
push
dec
test
cmp
out
pop
sub
clc
xchg
sbb
jmp
stos
jno
push
add
inc
cmpl
dec
pop
xor
add
push
adc
call
sub
fsubrl
addr16
clc
jecxz
cmpsl
and
pop
jbe
pop
mov
ficoms
and
scas
adcl
jno
lock
mov
jo
popf
xor
add
imul
ja
mov
popa
sbb
je
lcall
decl
aad
jb
andb
cmp
pop
mov
cmp
inc
into
stc
adc
lret
sbb
lret
in
mov
adc
add
push
and
mov
lcall
pop
pop
int3
shll
mov
adc
mov
pop
inc
iret
jns
popf
pop
loope
jmp
pop
and
aas
jne
push
cmp
dec
fldl
xchg
sbb
sbb
sarb
xor
mov
test
gs
inc
enter
cmp
ret
inc
cwtl
mov
int3
cmp
rep
shll
pusha
cs
lret
int3
mov
jl
mov
sub
xchg
mov
inc
xor
sbb
jp
popf
inc
inc
aas
fwait
mov
jo
sbb
push
sbb
fstps
test
movsl
xor
shll
mov
inc
clc
fiaddl
not
cmc
shlb
xor
xchg
mov
loopne
push
sbb
orb
icebp
sub
xor
fs
add
sub
mov
dec
pop
jbe
int3
jg
xor
add
incl
jb
mov
adc
ss
and
sub
call
out
push
jno
cmpsl
test
push
lahf
ljmp
jno
repz
es
or
leave
or
push
in
jp
pop
std
das
sbb
xor
dec
dec
push
das
dec
call
push
lea
sub
stos
mov
push
movsb
mov
pop
jb
cmp
jp
cmp
out
pop
dec
lods
repz
mov
pop
fisttpll
iret
add
jle
jp
daa
pop
inc
test
scas
lods
popa
mov
add
or
mov
mov
xor
lahf
popf
mulb
and
repz
push
aas
jp
xchg
std
push
or
out
xchg
aad
sub
sahf
lods
inc
out
push
test
and
mov
test
sbb
ja
mov
cmp
aaa
mov
popa
test
push
imul
mov
test
xchg
dec
push
cmc
mov
cli
ja
sti
incb
repz
cmpsl
mov
cmp
imul
cmp
addb
sbb
mov
jae
stos
jge
mov
fs
aaa
loope
push
decb
loope
in
push
mov
jl
test
mov
adc
mov
sbb
dec
dec
fidivs
jne
call
cmp
cld
mov
xlat
adc
jle
push
std
out
out
call
daa
cmpsb
movsl
jno
and
test
cmp
adc
pop
scas
push
cmp
pushf
mov
test
xchg
xchg
cld
pop
test
dec
imul
orb
inc
out
pop
xchg
xor
fsubr
push
loop
shr
sbb
pop
repnz
mov
outsb
insb
sahf
push
pushl
inc
js
sub
sarb
test
dec
push
loopne
es
mov
dec
push
fistpll
add
lcall
addl
lahf
sbbl
xchg
addr16
adc
push
cmp
daa
sub
mov
mov
es
insb
lret
in
lahf
into
sarb
adc
ljmp
xchg
fwait
pminub
jge
mov
arpl
clc
sub
fucomp
mov
stos
lock
jge
lock
cmp
mov
stc
jae
sbb
jp
xor
pop
fcoms
push
xor
mov
xchg
and
std
adc
or
mov
cmp
push
lods
jle
mov
adc
arpl
or
mov
lret
mov
sbb
add
lret
add
lret
cmp
repnz
lds
pop
test
push
out
shll
jmp
sti
mov
add
jbe
cmp
outsb
inc
mulb
fiaddl
fcomps
jb
roll
out
jo
popf
fdivr
jl
add
jns
inc
dec
std
and
inc
ret
and
dec
inc
leave
pusha
xchg
lods
jmp
divl
push
mov
push
mov
in
add
ja
int
xchg
mov
and
inc
ja
push
inc
or
lea
int
lock
icebp
or
imul
mov
unpckhps
xchg
pop
js
inc
mov
sbb
std
mov
js
push
push
xchg
shll
mov
addr16
popf
cmp
mov
nop
cli
adc
adc
jo
lock
xchg
ffree
lea
cmpsl
xchg
pop
dec
or
js
loop
sub
jo
or
int3
add
test
int
mov
sub
xchg
insl
cmp
shll
mov
out
or
pop
pop
out
cltd
bound
sub
xchg
aaa
or
inc
icebp
xchg
hlt
or
jne
inc
inc
pop
aad
push
jmp
mov
hlt
es
ficoml
pop
dec
enter
mov
cmpsl
push
hlt
idivb
std
stos
sbb
ljmp
sub
sub
push
and
mov
fwait
enter
sti
xchg
inc
loopne
push
lret
push
mov
jle
push
sbb
cmp
daa
lret
xor
pop
xor
lods
movsl
out
in
add
std
adc
hlt
pop
or
jle
cmp
mov
out
loopne
rcll
bound
jg
jl
xor
outsl
pop
aas
and
or
and
jns
das
paddusw
sub
pusha
bound
mulb
cmc
and
cwtl
je
jl
jnp
fwait
jbe
mov
mov
jno
dec
in
out
imul
sub
lock
sti
inc
and
mov
out
mov
sti
sbb
mov
mov
mov
mov
mov
cmp
push
dec
push
inc
sub
pusha
out
mov
bound
int3
mov
pop
int3
icebp
sub
add
out
add
clc
mov
jb
out
push
fnop
sub
outsl
adc
pop
fidivs
xorb
negb
lods
xchg
dec
push
jae
push
sbb
fidivrl
inc
cmp
adc
fisttpll
fmul
push
sbb
popa
cmp
insl
scas
pop
ja
outsb
pop
mov
daa
pushf
jg
dec
fstp
mov
or
movsl
js
fsubrl
loopne
sbb
mov
sub
hlt
sbb
pop
jnp
fcmovnb
std
std
scas
dec
add
adc
jb
sbb
adc
lock
cld
out
inc
sarl
gs
into
push
fs
jecxz
stos
nop
xor
xchg
push
fwait
mov
movsl
add
gs
or
ret
mov
cmpsb
movsb
cmp
mov
testl
pusha
mov
mov
push
notl
push
mov
repz
xor
pop
movsb
imul
int
push
scas
mov
and
in
popf
outsb
cmpsb
push
ror
add
dec
ljmp
outsl
aaa
scas
mov
rorl
xchg
aad
test
pop
movsb
pop
push
pop
inc
or
mov
testb
bound
push
xor
mov
mov
loope
xchg
and
jecxz
adc
inc
dec
insb
outsl
add
sti
add
mov
push
xchg
fisttpll
xchg
inc
mov
lods
repnz
mov
imul
in
insb
pop
fsubr
xchg
out
mov
pop
dec
sub
pop
push
loop
xor
test
jmp
or
xor
pop
adc
push
int3
std
pusha
jmp
stos
fs
mov
push
jle
cmpsb
je
rcll
dec
jb
mov
pop
and
ljmp
dec
mov
jl
pop
pushf
jp
mov
les
xchg
jp
test
jl
int3
jo
les
icebp
lret
stc
pop
dec
rcl
jns
adc
adc
xchg
loopne
rcll
cmp
mov
outsl
xchg
fmul
enter
mov
mov
adcl
in
int3
adc
jae
or
lock
call
xor
imul
sub
es
cmp
add
aas
jl
inc
stos
rcrb
dec
inc
aad
add
push
inc
insb
in
mov
sti
pop
lods
in
and
out
ret
test
lret
rol
out
inc
push
add
nop
test
jns
fucomip
mov
pop
mov
out
or
adc
pop
sbb
pop
pop
pcmpeqw
ss
test
pop
icebp
jnp
mov
cmc
popf
inc
outsb
add
add
stc
out
repz
subb
add
int
jg
stos
or
lea
fstps
mov
push
push
xchg
in
sub
push
cmpsb
xor
scas
xor
cmp
inc
and
icebp
outsl
cmp
mov
push
inc
je
push
repnz
mov
sub
and
and
push
rsqrtps
push
add
pop
dec
icebp
xor
insb
loopne
cmp
add
jge
cwtl
cmp
test
jp
and
jbe
fwait
sbb
mov
sbb
mov
sbb
mov
adc
jbe
neg
push
sbb
ja
cmpsl
cmp
stos
mov
jnp
sbbl
gs
jnp
inc
aas
ljmp
repnz
aaa
push
or
fisubrs
inc
js
movsb
shlb
lea
stos
jbe
cld
cmp
fwait
jle
cmpsb
sbb
dec
cmp
pop
ja
and
sbb
or
loopne
push
lods
enter
inc
xor
loop
cwtl
cs
mov
fisubs
leave
mov
sahf
ss
and
add
adc
outsb
stos
testl
js
add
lcall
arpl
out
push
cmp
cmp
leave
bound
sbb
fwait
or
adc
cli
dec
and
push
les
mov
xor
jge
test
into
in
push
cmp
or
push
adc
mov
cmp
cwtl
lods
sub
in
push
mov
fs
cmp
jnp
jge
push
mov
stc
test
jg
iret
in
pop
js
test
iret
add
dec
mov
push
std
add
push
jg
jns
adc
xchg
mov
xor
sub
dec
mov
cmpsb
xchg
call
xor
mov
or
clc
outsl
loopne
fcmovbe
mov
lods
roll
pop
jp
cmp
hlt
xlat
sub
inc
imul
mov
inc
jmp
in
xchg
fnstenv
dec
inc
xor
test
dec
stos
mov
scas
fsubs
xor
cmpsl
add
test
push
loop
pop
jbe
div
lret
lods
rclb
cld
xchg
cltd
aad
movsb
sub
cmp
out
xchg
mov
cli
aam
inc
sti
ss
lods
add
push
loope
jecxz
dec
loop
jl
sbb
add
lds
add
mov
ss
stc
jne
inc
outsl
sti
mov
adc
adc
mov
cmp
adc
adc
mov
or
data16
dec
sbb
cmp
xchg
scas
lea
sbb
add
jbe
cmc
pushf
imul
cli
mov
mov
fbstp
movsl
pop
call
loope
scas
nop
or
mov
stos
jmp
test
call
stos
sar
mov
repz
test
mov
cmp
mov
insl
dec
fiadds
imul
push
mov
sbb
pusha
int
mov
gs
cltd
mov
pop
cvtps2pi
aad
dec
bound
lret
insb
mov
lret
pusha
cli
cwtl
sub
dec
xchg
ds
sahf
rol
sbb
andl
cmp
lods
jo
cmp
and
ret
fidivs
xchg
out
fs
outsb
test
or
jmp
jbe
and
or
xlat
sub
in
xchg
cld
addr16
cli
rorl
je
or
stos
arpl
mov
shrl
push
pop
dec
adc
jp
add
jmp
adc
insb
add
inc
dec
cmp
sbb
mov
subb
mov
push
jg
test
inc
push
jbe
test
sub
jl
bound
add
mov
cmp
sbb
jl
jge
leave
leave
test
das
cmp
mov
stc
test
mov
in
pop
push
jnp
pop
repnz
mov
and
imul
add
bound
inc
jle
dec
adc
sub
popf
mov
xor
xchg
std
sub
xchg
aaa
jecxz
lock
adc
std
stc
cmp
xlat
mov
xor
lods
and
jnp
leave
mov
push
xchg
push
and
sbbl
push
dec
hlt
sub
mov
or
or
push
jae
test
fucomip
subb
call
shrb
call
std
cs
fildll
xchg
lock
ss
sbb
pop
fidivl
add
xor
push
push
ljmp
daa
sbb
mov
addr16
cmpsl
in
pusha
mov
sahf
or
xor
mov
pandn
ljmp
jp
jb
scas
rcl
mov
fs
mov
aam
sub
cs
es
nop
pop
andl
mov
aam
or
adc
cs
lahf
inc
fstpt
and
ret
push
pusha
xchg
fdivrs
mov
xor
jmp
mov
ficompl
sub
xor
clc
dec
loopne
stc
push
push
imul
lcall
xchg
xchg
test
out
dec
aad
lea
adc
mov
jg
clc
in
das
fwait
in
shlb
or
xor
movsl
push
xchg
sbb
insb
jmp
xor
mov
scas
lahf
popa
arpl
movsb
cmp
jo
orb
xor
fs
jbe
rolb
into
dec
dec
shlb
outsl
or
xor
mov
add
mov
jge
pop
mov
pop
xchg
jno
xor
imul
jmp
sbb
xlat
inc
out
andl
in
push
sub
sub
repz
pop
adc
mov
ds
sub
pusha
loopne
sub
loope
xor
dec
sbb
call
adc
sub
cmp
test
fists
add
cld
test
push
sbb
add
sbb
out
test
call
sbbl
sub
jae
in
sbb
rorl
jecxz
xor
pop
add
loop
loop
inc
das
dec
adc
lret
test
imul
mul
test
lods
out
xchg
jb
outsb
xchg
daa
int3
or
mov
pop
dec
and
popf
mov
jns
lret
push
negl
das
lds
fdivs
int
sub
in
sub
mov
mov
xchg
pop
cli
or
sub
loopne
cmp
adc
sti
mov
inc
adcb
das
test
jne
push
nop
cltd
jns
or
outsl
les
or
xor
pop
inc
inc
sbbl
push
inc
scas
xchg
mov
jo
cmp
push
push
xchg
ret
push
lods
add
sahf
xchg
pop
outsl
jl
aas
rol
call
add
loope
ss
mov
sub
pop
sub
aas
adcl
int
adc
sar
lods
xor
dec
add
sub
es
pop
aas
ret
push
test
mov
push
pop
sbb
popa
mov
xchg
das
or
push
adc
inc
sub
into
incl
pop
mov
lods
shrl
popf
mov
mov
sbb
inc
das
pop
es
sbb
dec
jno
jnp
insb
fnstenv
xchg
jnp
mov
pop
or
shlb
and
mov
popa
outsl
pop
imul
xlat
shlb
mov
loopne
xchg
outsl
push
lcall
hlt
jl
mov
cwtl
int3
jnp
xor
sbb
mov
lock
inc
sub
enter
aas
shl
popf
in
mov
add
cmpsl
sub
add
cwtl
bound
and
mov
insl
stc
sbb
nop
scas
pop
leave
dec
push
movsb
stos
mov
jb
lret
push
imul
insl
sub
dec
test
xchg
sbb
mov
xchg
adc
sbb
cmp
out
call
push
jmp
inc
mov
and
mov
add
add
xorb
lds
clc
mov
lds
sbb
imul
xchg
xchg
incb
inc
jae
sbbl
cwtl
outsb
movsb
movsl
idivl
or
lods
adc
dec
xchg
fadd
popf
iret
fstpt
push
lahf
mov
xchg
mov
xchg
stc
ret
cmp
arpl
push
icebp
popl
mov
add
icebp
or
cltd
fdivs
jle
mov
or
es
outsl
jb
sbb
insb
mov
out
jae
xor
pop
jbe
pop
push
inc
jmp
lea
xor
mov
rcrl
cmc
inc
push
xchg
popa
dec
pop
inc
dec
aad
and
or
sub
inc
xchg
mov
xor
push
mov
xor
adc
mov
mov
cmp
dec
push
call
cmp
push
rcll
shrb
pop
adc
push
cmc
dec
js
jmp
fisubrs
dec
dec
ss
adc
test
ret
cs
add
push
nop
lret
and
or
aas
mov
dec
cmp
or
lock
pop
pusha
js
mov
mov
fidivrs
pop
insb
mov
adc
in
sub
enter
inc
add
add
lret
push
ja
sub
loope
ret
lahf
lea
icebp
jle
enter
sbb
mov
jge
inc
jns
pop
fadd
xchg
jg
inc
cmc
rorl
push
aas
mov
pop
sarl
mov
push
scas
lcall
je,pn
mov
daa
push
lcall
mov
jmp
jbe
push
push
hlt
mov
inc
arpl
xlat
ret
cld
pop
dec
xor
mov
adc
mov
sbb
jbe
or
js
lds
cmp
repnz
mov
fadds
jae
pop
or
adc
sub
sbb
das
ret
loope
loope
rclb
mov
or
jo
mov
aad
or
mov
mov
mov
or
sbb
jl
dec
lods
mov
push
pop
xchg
xor
cld
or
mov
mov
jge
call
dec
stc
fs
mov
outsb
jl
mov
addr16
clc
and
mov
pop
in
sub
sub
out
lds
xor
cmp
inc
leave
test
sti
jl
aaa
roll
mov
test
lahf
mov
sbb
mov
add
inc
inc
cmpsl
inc
jne
jmp
sub
sbb
sub
pop
mov
in
cmp
cmc
push
xlat
lret
loopne
sbb
xchg
lret
lret
rcrb
gs
outsb
stc
and
ss
out
mov
ret
push
dec
std
stc
call
xchg
or
push
sahf
or
xchg
mov
ds
fstl
adc
jl
cmp
sti
push
out
inc
push
dec
sub
lcall
mov
adc
inc
adc
cmp
push
jle
rolb
and
inc
in
in
repnz
lcall
adc
jnp
lock
xor
xchg
movsb
jle
es
xor
test
jle
sbb
push
js
in
dec
mov
pop
enter
and
ljmp
add
add
aaa
push
std
js
test
or
add
mov
xor
inc
sbb
or
lret
movsl
inc
outsb
and
and
imul
out
or
ds
stc
std
mov
fcomp
pop
adc
jg
in
enter
jno
insb
mov
xor
ds
std
cmc
sub
xor
pop
lds
lret
mov
in
sarb
mov
push
cld
mov
fldenv
movsb
cs
pop
mov
notb
in
popa
jecxz
loope
dec
dec
xchg
pop
test
pop
test
stos
ficomps
shrb
decl
adc
jl
mov
int3
out
aaa
outsl
call
pop
adc
sub
push
enter
out
rorl
vpsrlw
and
jae
xlat
lds
jecxz
ds
fistl
roll
in
cwtl
into
sbb
fistps
xor
cmp
add
in
mov
push
cld
add
cmp
test
add
stc
les
int3
jb
jne
or
lcall
dec
adc
and
mov
or
add
roll
mov
sub
add
into
inc
ficomps
imul
data16
xor
jne,pn
add
sub
lods
xchg
in
test
ret
loope
stc
lds
push
push
sub
jp
inc
jecxz
xchg
xchg
out
testb
pop
das
jle
stos
mov
fcoms
outsb
mov
ror
cmp
lret
mov
rcl
test
lods
push
add
mov
shlb
mov
dec
js
adc
out
in
dec
inc
in
mov
stos
add
loopne
mov
xlat
add
sbb
mov
pop
and
push
lods
cld
aam
xorl
pop
jge
cwtl
ficoml
orl
sbb
adc
lea
pop
lods
inc
add
movsl
mov
mov
out
lds
inc
fists
xlat
aas
sbbl
dec
andl
pusha
mov
cmp
out
add
int3
or
imul
out
mov
fwait
inc
popa
and
decb
xor
and
push
push
mov
das
xor
push
push
clc
es
push
test
xchg
mov
or
popa
daa
inc
test
add
mov
mov
inc
aad
xor
dec
xorl
inc
fabs
and
mov
xchg
add
lea
loopne,pt
iret
ja
add
adc
aam
scas
les
lret
push
sub
ficompl
xor
inc
in
or
enter
das
adc
cmpsl
insl
adc
hlt
mov
xchg
and
out
daa
sbb
inc
push
and
call
fmull
mov
iret
mov
jae
mov
in
iret
in
mov
push
lea
clc
aad
pushf
mov
push
popf
ljmp
dec
sbb
ret
cmp
jno
xor
lret
sarl
and
and
mov
and
mov
or
das
mov
dec
dec
jne
aas
and
cmpb
cmc
stos
add
mov
popa
mov
sub
jecxz
rcll
mov
jge
inc
xor
and
cmc
push
rclb
les
sbb
in
pop
push
out
mov
ljmp
rcrb
push
add
jg
cmpsb
fucomi
jl
mov
xor
cmp
shrb
rcl
xchg
ds
rcr
iret
xor
lahf
push
mov
outsb
mov
sub
les
bound
movsl
rcr
repz
ret
pop
xlat
int3
fdivrl
mov
cmp
dec
imul
lea
adc
call
and
cmp
lods
sub
insb
push
cmp
adc
push
ret
push
xor
adc
repnz
pop
aaa
pop
addr16
jb
inc
idivb
mov
pop
pop
cmp
cmp
adc
jns
sub
pop
mov
xor
popa
in
or
imul
and
shlb
iret
call
jge
je
cmp
test
adc
js
sahf
mov
inc
lock
out
repz
jmp
fdivp
das
jbe
and
insb
dec
inc
leave
inc
and
xchg
pop
xchg
xchg
cmp
gs
test
cmp
pop
inc
je,pt
push
bound
adc
jmp
jb
test
daa
dec
push
test
fisttpll
pop
inc
adc
mov
lahf
mov
clc
popf
or
je
mov
push
lahf
jnp
dec
sub
and
outsb
ljmp
jp
out
sbb
cmc
daa
sbb
std
mov
push
mov
mov
cmp
in
mov
mov
repz
pusha
mov
ja
push
push
lret
xchg
sub
dec
pushf
testl
movsl
aas
push
jbe
sbb
int3
out
ret
jno
lret
bound
cmp
orb
rep
mov
and
sbbl
cmpsl
sbbb
jle
int
sbb
dec
pop
xchg
pusha
dec
xchg
ss
dec
icebp
mov
adc
mov
pop
shll
mov
xchg
sahf
stos
fcom
adcl
pop
dec
ss
push
sbb
aaa
add
out
mov
aaa
pop
imul
inc
pop
dec
adc
mov
clc
sbbb
push
push
sub
aaa
rorb
add
add
lcall
loop
xor
cmpsl
dec
aas
mov
push
inc
test
lds
mov
jg
mov
test
mov
scas
or
mov
ret
add
jge
pop
push
mov
lea
repnz
insb
insb
and
adc
andb
dec
in
xchg
fnstsw
rcrb
cmc
sbb
mov
addb
inc
xchg
fwait
lock
mov
sbb
mov
call
sub
rorl
mov
adc
mov
daa
xor
ret
push
pop
idivb
add
cmp
aam
sub
divl
lcall
test
jle
out
mov
push
xor
xor
movsb
jb
stos
xchg
push
jo
in
arpl
dec
jmp
adc
sbb
out
sbb
xor
mov
mov
nop
outsb
aam
mov
lea
decb
cld
lds
fwait
sub
dec
and
push
stos
les
adc
inc
arpl
lock
inc
push
cmpsl
add
add
inc
cli
mov
stos
add
dec
add
insb
cwtl
sbb
ss
xchg
ret
mov
andb
rcrb
arpl
fildll
mov
dec
int
int
or
stc
dec
iret
pavgb
cmp
adc
sahf
les
mov
popa
add
lods
dec
int3
ret
dec
mov
imul
lods
mull
add
cmp
adc
hlt
push
mov
shlb
xor
mov
sti
test
dec
xor
jne
push
into
add
pop
out
sub
mov
movsl
icebp
shl
outsl
test
loope
mov
es
outsb
pop
pop
rcrl
jge
rcr
loope
pushf
call
lret
push
stos
pushf
xchg
fwait
push
and
mov
adc
push
aaa
cmp
loope
mov
rolb
mov
aam
pop
push
mov
int3
ror
lods
int
jle
sti
jbe
lock
cwtl
xchg
cli
sbb
outsb
add
out
jo
jge
pop
nop
mov
outsb
xorb
mov
jl
fs
mov
pop
scas
or
xchg
js
dec
ret
inc
xorl
sub
std
outsl
push
into
leave
test
mov
push
sub
in
mov
bound
das
dec
addb
dec
cmp
sbb
sbb
mov
adc
leave
adc
cmp
dec
sbb
movsb
xchg
or
lret
sbb
nop
cwtl
arpl
cltd
adc
jle
popa
dec
cmp
stos
add
jl
loop
adc
jge
out
incl
or
fdivs
loop
lods
xor
ljmp
ret
inc
cmp
mov
aas
push
push
ja
xchg
add
int3
or
sbb
nop
inc
scas
push
in
jnp
jne
pop
or
lods
into
adc
pusha
adc
mov
mov
add
les
pop
repnz
hlt
jbe
inc
mov
sbb
cwtl
jne
stc
lods
cli
xchg
jp
or
mov
xor
inc
pop
test
cmc
push
jno
clc
or
pop
fwait
pop
jno
mov
lea
fcmovne
adc
mov
cld
fisubs
sbb
fcompl
sbbl
ds
xchg
out
fnsave
shr
fdivl
dec
push
not
xchg
add
mov
push
push
mov
out
jmp
mov
xor
inc
pop
push
and
js
clc
pop
mov
xchg
ret
roll
xchg
xor
xchg
popa
out
mov
ljmp
movsb
lds
jg
mov
add
push
lock
jbe
mov
fldl2e
outsb
pop
repz
and
inc
bound
in
adc
inc
mov
movsl
dec
xor
xchg
dec
cmpsb
adc
call
sti
pop
mov
leave
sbb
das
sbb
jnp
push
jns
mov
cmp
jp
xchg
nop
cmp
push
dec
test
ljmp
jmp
fistl
xlat
push
sbbl
lea
xor
testb
mov
outsb
add
adc
push
js
nop
mov
inc
dec
inc
testb
movsb
nop
jne
xor
popf
ja
fildll
cmpsl
or
push
clc
enter
jp
fistps
mov
loop
addr16
divl
or
lock
subl
mov
cmp
ds
push
cli
mov
enter
cwtl
or
jmp
xchg
pop
add
mov
jle
adc
icebp
iret
dec
arpl
sbb
mov
and
mov
stos
sti
inc
les
mov
test
in
arpl
popf
inc
insl
dec
jb
mov
or
iret
popf
dec
ret
cmp
push
and
adc
test
shrl
push
mov
jp
dec
inc
mov
inc
xor
stos
xor
mov
frstpm(287
pushf
iret
sahf
sub
ret
test
push
negb
into
push
dec
adc
pop
push
iret
mov
mov
add
movsl
push
cmc
lahf
lock
jle
insl
bound
and
daa
pop
pop
mov
mov
mov
add
cltd
cltd
fdivl
adc
stos
pop
out
aas
les
outsb
mov
sub
adc
mov
dec
mov
or
lret
sub
pushf
mov
in
cmpsb
xchg
mov
jge
imul
je
push
ret
nop
xchg
inc
in
subl
jl
dec
pop
cld
or
pop
je
mov
xchg
movsl
mov
sbb
adc
lret
int
js
adc
call
ret
aaa
sub
icebp
ja
scas
out
xchg
scas
cmp
xchg
orb
inc
lret
mov
xchg
in
mov
mov
es
cmp
fwait
dec
nop
inc
cmp
stos
repnz
sti
sub
xchg
and
push
insb
es
or
mov
add
in
push
adc
repnz
ss
pop
add
mov
mov
mov
jl
pop
adc
mov
add
lret
gs
push
sub
js
mov
movsl
in
pop
daa
jmp
ss
in
dec
sub
add
mov
pop
push
clc
and
data16
dec
or
jp
inc
gs
xchg
ret
cmp
out
xor
sub
jmp
sub
xchg
cwtl
cmp
cmp
int3
mov
xor
jecxz
jae
push
mov
cmc
push
pushf
aam
sahf
pop
jb
fwait
jbe
test
push
orl
pop
mov
es
cld
movsb
pop
inc
int3
popa
pop
daa
insl
faddp
jle
shll
mov
cmpsb
call
in
pop
ja
gs
xchg
add
movsl
cmp
lcall
nop
xchg
test
xchg
sbb
clc
in
rcl
faddl
add
outsb
xchg
xchg
push
fstps
push
icebp
int
cli
outsb
pop
sbb
mov
orl
movsb
vpor
fsubrs
jge
xchg
jbe
mov
aas
test
cld
cmp
xchg
sub
outsl
pop
mov
ds
les
sbb
add
pushf
cmc
adc
add
pop
push
mov
repnz
jecxz
or
xor
in
fistl
push
xchg
bound
lahf
xor
sub
icebp
or
push
mov
std
lock
shlb
xchg
shll
adc
aas
adc
jae
jbe
mov
add
aam
add
xor
data16
dec
enter
orl
mov
roll
push
rcrb
int3
movsl
mov
daa
adc
clc
fcmovnb
jnp
outsb
int3
pop
jmp
adc
mov
mov
movsl
out
das
dec
repnz
jl
xchg
xchg
ss
lock
xor
mov
or
int
pusha
cmpsb
fdivl
insl
fwait
mov
in
shll
xchg
imulb
fwait
mov
popa
or
mov
push
sbb
inc
jge
mov
sti
enter
call
jmp
xor
fmull
or
pop
insl
rcr
cmp
jno
call
xlat
push
lock
cltd
cwtl
pusha
imul
mov
lret
pop
jbe
mov
jp
aas
je
adc
data16
mov
add
xor
data16
loopne,pt
mov
cmp
dec
or
ja
mov
dec
cmovbe
ja
sub
insl
cmpsb
mov
jb
shl
push
divw
pop
addb
dec
sub
xor
bound
je
aas
mov
into
xor
mov
ror
jecxz
inc
test
add
inc
inc
dec
push
jl
mov
xorl
lahf
push
ficompl
mov
jbe
or
inc
jb
fildll
mov
arpl
xor
outsl
outsl
or
pop
mov
sbb
push
and
push
dec
imul
fcmovbe
xchg
mov
fildl
fwait
xor
jl
mov
aad
push
sub
cmpsl
pop
scas
mov
lds
pop
and
cltd
mov
jo
daa
gs
xchg
push
in
fidivrl
and
or
jb
decl
scas
cmp
into
test
pop
pusha
xor
lret
imul
subb
pop
mov
mov
lcall
lret
fmuls
shr
into
xchg
cmp
jge
aaa
aam
mov
bound
add
cmp
pop
pop
sbb
popf
jnp
jae
emms
inc
jbe
pop
mov
inc
std
sbb
inc
ficoms
add
hlt
js
lds
mov
push
xchg
cmp
mov
sub
cmpsb
pop
push
jmp
popa
pusha
stc
aad
pop
xchg
cli
stc
mov
test
cmp
pop
xchg
stc
sbb
lea
leave
mov
inc
fistpll
arpl
lret
mov
pop
push
cmp
in
les
sub
mov
cli
sbb
iret
ret
xor
cmc
push
dec
dec
std
ds
add
loope
cltd
ljmp
mov
push
sahf
mov
sbb
clc
xchg
mov
xchg
aam
push
popa
int3
stc
mov
add
out
insl
cmp
inc
inc
and
mov
mov
xor
jecxz
repnz
and
lret
add
jns
test
mov
pop
pusha
dec
pop
adc
cmpsl
mov
lock
adc
xchg
mov
aam
push
sub
rcll
sbb
cmpsl
xor
insl
cmp
ret
add
xchg
popf
jle
add
add
je
int3
out
add
pop
fsubr
or
sub
fwait
jmp
pop
loopne
push
test
cmp
mov
sub
sahf
es
sub
jbe
nop
xor
in
and
adc
dec
jnp
dec
mov
mov
ljmp
orb
and
das
sti
leave
lods
imul
inc
mov
fwait
add
jecxz
aad
inc
add
int3
cmp
xchg
jmp
je
aas
rcrl
push
jne
cli
xchg
dec
ret
adc
push
int3
cmpsb
lods
dec
push
mov
xor
mov
cld
xchg
xchg
pop
imul
pop
inc
popa
lock
sbb
sub
pop
dec
dec
iret
jnp
popf
pushf
dec
jecxz
sbb
aad
pop
loope
push
sbbb
insl
fcomp
mov
xchg
cwtl
je
inc
adc
sbb
sbb
pop
or
cli
inc
sub
add
outsb
or
outsb
and
push
mov
pop
inc
xchg
mov
xchg
mov
in
pop
lock
pop
pop
jnp
xchg
cmp
sbb
pop
mov
mov
ja
push
add
pop
xchg
inc
sbb
and
cmp
adc
pop
rorl
jge
and
or
mov
pop
scas
fsubs
bound
mov
imul
mov
aaa
jnp
xlat
aam
mov
xorl
gs
xor
xchg
mov
je
mov
jmp
and
add
lret
mov
mov
and
inc
mov
mov
mov
in
inc
in
stos
pushf
ret
push
in
fcoml
adc
out
jge
dec
fisttpl
mov
and
dec
fistps
adc
clc
sbb
mov
jge
jp
test
fucomi
lods
and
enter
dec
mov
ret
adc
and
mov
push
out
jne
dec
test
adc
or
dec
sub
mov
sub
insl
movsl
rcr
mov
sub
jae
xor
ret
xchg
out
popf
cli
inc
enter
sub
lret
jg
mov
lcall
push
xor
xchg
xor
jno
lret
rcrl
sbb
cmpb
insl
iret
mov
sbb
rcrb
mov
cs
lcall
in
clc
add
mov
ss
in
jnp
repnz
xchg
cli
outsb
into
push
jb
mov
ds
jo
xorps
or
scas
imull
scas
jae
cmp
mov
sbb
ljmp
add
cmpsb
clc
mov
shll
cmp
or
inc
push
dec
pop
cmp
lods
pop
lock
mov
jno
icebp
push
pop
sub
and
xchg
push
sub
or
ds
mov
mov
in
mov
cli
dec
sub
dec
adc
and
iret
push
lea
loope
leave
xor
push
xchg
xor
lret
jle
mov
push
pop
mov
lods
outsl
xor
outsb
fisttps
inc
icebp
lcall
mov
pop
add
jecxz
lcall
pop
or
pop
adc
in
xor
inc
xchg
call
mov
mov
fists
sahf
inc
jcxz
push
jo
loopne
xchg
dec
add
mov
jbe
inc
pop
mov
push
and
sub
mov
mov
push
mov
call
int
insl
xor
mov
pop
sti
mov
enter
mov
push
movsb
jbe
out
scas
add
test
fldl
pop
sbb
aas
daa
pop
add
xchg
in
sbb
push
lock
cmc
xchg
push
or
cmpsl
sti
push
lods
vpcmpgtw
jb
pushf
movsb
add
inc
adc
cld
mov
mov
out
loop
add
cmc
cmpsb
stc
es
sub
xchg
repnz
sub
je
shrb
repnz
nop
daa
sub
ds
fs
aad
gs
in
filds
adc
rolb
lock
clc
lahf
stos
jb
jge
mov
sub
test
xchg
imul
xchg
sub
mov
mov
in
sbb
dec
jge
mov
es
stos
push
fstpl
xor
es
lret
add
fidivs
mov
orl
je
test
fisubrl
add
push
int3
inc
lahf
adc
xchg
arpl
pop
jo,pn
ljmp
fdivrl
sahf
mov
iret
pushf
sbb
jge
mov
iret
dec
out
ror
mov
ret
sub
xchg
push
push
mov
push
roll
mov
mov
sbb
xor
jns
repz
scas
mov
mov
xchg
jl
cld
push
mov
es
sub
sub
ret
jle
lcall
fdivs
dec
in
mov
adc
adc
jp
stos
push
mov
data16
mov
or
fcmovnb
adc
cmp
mov
outsl
popf
sub
fdivs
cmp
mov
add
push
mov
jmp
sbb
push
leavew
outsb
inc
mov
push
pop
mov
mov
fadds
stc
loopne
sub
in
mov
mov
rorb
xchg
pop
dec
jb
dec
inc
popa
adc
mov
and
mov
add
inc
lock
jne
jb
aad
adc
neg
js
mull
mov
jmp
xchg
jle
adc
sub
sub
fisttps
xchg
addb
xchg
jmp
int3
sbb
aaa
sub
lahf
sbb
or
inc
dec
leave
std
pop
mov
cmpsb
fists
adc
addb
cmp
in
inc
pop
push
xchg
sbb
scas
insl
pop
les
jns
cmp
add
jnp
pusha
mov
dec
movsb
insb
fdivp
xor
notb
sbb
add
sti
aas
je
xchg
jmp
scas
nop
mov
push
fsubrs
icebp
mov
daa
lcall
lea
lret
jo
stos
push
imul
out
fisttps
xchg
inc
sub
fwait
inc
sbb
xchg
shlb
push
or
and
push
pop
andnps
dec
rol
cs
mov
ret
pusha
inc
lea
jmp
xor
add
enter
jb
jle
ret
cmp
enter
push
rolb
push
test
outsb
sub
xchg
dec
xor
inc
xlat
mov
and
arpl
pop
mov
and
ljmp
xor
popf
rorl
and
adc
fcoms
mov
movsb
mov
jecxz
pop
push
push
xor
sub
xchg
and
dec
mov
and
inc
into
add
dec
push
scas
adc
xor
adc
movsw
mov
dec
cmpb
add
loope
jg
out
rol
xchg
scas
nop
subl
sahf
lds
subl
out
sub
jae
pop
addr16
inc
add
loop
cltd
int3
mov
cs
jno
dec
xchg
pop
inc
push
xchg
lea
jbe
pusha
mov
inc
push
lsl
cmp
jno
or
mov
jb
insb
lahf
dec
mov
add
imul
mov
pop
cmp
je
scas
int
sbb
mov
jb
imul
add
jge
and
pop
sti
scas
pop
mov
in
popf
add
stos
scas
pop
outsb
arpl
bound
cmp
dec
jl
nop
or
rcrb
enter
sub
pop
sbb
pop
mov
test
stc
mov
ljmp
bound
cmp
adcl
cmp
popf
push
mov
scas
cli
mov
imul
sub
addl
dec
sbb
dec
cltd
sub
xchg
popa
adc
xorl
jmp
mov
icebp
pop
pusha
jb
sub
shll
out
int
push
sub
adc
cmpsb
rolw
stos
test
dec
xchg
test
mov
mov
mov
aas
add
fldt
mov
testl
and
or
mov
mov
in
push
in
fdivrs
xchg
sub
call
push
fwait
aad
repnz
xchg
mov
push
orb
mov
data16
inc
dec
lcall
sub
mov
iret
int
into
scas
xchg
in
in
repnz
lret
movsb
lods
mov
cvtps2pd
dec
dec
sti
add
and
fstps
loope
add
sub
inc
fidivs
mov
cmp
dec
or
sub
cli
or
push
test
hlt
jp
call
mov
mov
mov
jmp
shll
inc
pusha
push
fwait
ret
push
and
sbb
divl
pop
lods
mov
inc
push
orb
inc
pop
pop
rcrb
cmove
mulb
sahf
aad
aas
cmc
xor
or
test
cld
sbb
mov
int
mov
push
mov
xor
adc
loope
or
xor
cltd
icebp
fnstcw
add
rolb
or
jl
mov
add
mov
shrb
xchg
xchg
ss
jmp
sub
scas
rcrb
xchg
in
push
repz
stos
jno
outsb
icebp
xchg
arpl
cmpsl
repz
xor
push
and
leave
jne
dec
sete
push
das
and
or
loop
dec
movsb
pop
js
lret
pop
add
push
pop
jnp
in
mov
add
setp
push
in
jnp
cmp
rolb
in
inc
icebp
sub
xlat
add
in
in
ret
mov
mov
stos
ss
dec
mov
insl
xor
mov
in
leave
jp
out
cmc
push
and
mov
xlat
outsb
loop
test
add
cmpsb
test
cwtl
or
fcoms
cli
push
lret
push
test
js
popa
std
data16
ljmp
fcompp
jns
add
and
cmp
xchg
mov
add
shrl
dec
xor
inc
mov
jne
std
push
fwait
lods
popa
mov
dec
jae
call
lods
imul
fsubr
clc
mov
mov
lods
mov
lret
inc
ficoms
ljmp
test
pop
sti
leave
mov
or
mov
cmp
ret
push
lret
out
sub
sbb
xchg
jg
mov
push
movsb
mull
pop
in
sub
stc
out
mov
xchg
xor
loope
leave
sbb
loopne
dec
adc
sub
pop
sub
jo
push
xor
mov
lret
and
dec
mov
xor
call
cmp
and
jno
rclb
cmp
cmp
enter
cmp
lmsw
and
fwait
sub
jo
jle
xchg
in
pop
jle
daa
cltd
orb
xchg
xchg
aam
test
insb
pop
roll
jne
mov
pop
xor
cmp
and
cmp
bound
xchg
scas
hlt
aad
mov
mov
jne
repnz
jo
inc
dec
stos
mov
mov
mov
push
shl
or
or
or
or
je
enter
ljmp
movsl
xchg
out
jb
push
ret
int3
mov
mov
movsl
dec
and
and
rcll
shrb
sbb
xchg
xchg
and
mov
clc
ret
cmp
cmpl
sbb
dec
sbb
push
xchg
sti
xorl
jae
repnz
dec
xor
out
jnp
aam
mov
pushf
ds
je
fistps
pusha
int
push
push
adc
ljmp
aaa
cmp
scas
xchg
mov
lcall
fiadds
or
lods
loop
xchg
dec
inc
in
fidivrs
mov
andl
push
loope
mov
icebp
dec
or
push
call
jecxz
adc
and
repz
mov
push
jecxz
lcall
ret
inc
idivl
loopne
cmp
push
sub
inc
rcll
prefetchw
repnz
scas
in
dec
shll
xchg
sub
fcompl
popa
add
mov
cwtl
lahf
outsl
fs
stos
and
sbb
insl
and
push
pop
and
jg
in
xchg
dec
pop
push
push
daa
push
mov
jl
mov
xor
pop
shld
cmp
insb
in
test
dec
add
sarb
lret
fcmovnb
shll
pop
stc
clc
push
rorl
adc
mov
jg
test
adc
inc
jl
cwtl
inc
jbe
xor
adc
push
xchg
loop
test
aaa
and
addb
adc
loopne
mov
pop
shlb
movsb
push
fs
push
scas
sbb
insl
xchg
popa
cmpsb
jecxz
jmp
inc
jg
jle
xchg
jp
mov
movsl
or
pop
add
cmp
or
je
nop
mov
push
pop
nop
lahf
cmp
sbb
dec
mov
test
jno
dec
jl
sahf
or
mov
cmpsb
pop
and
add
fiadds
loope
xor
mov
jp
xchg
stc
arpl
add
mov
sbb
fists
add
dec
jns
loope
fdiv
iret
xor
inc
test
jnp
je
aas
roll
aas
shl
sbb
cmc
xchg
popf
sbb
mov
push
jae
dec
fwait
and
cltd
xor
or
xor
cmpl
and
push
or
pop
jno
mov
mov
pop
data16
stos
add
push
xchg
dec
mov
push
cmc
orl
cmc
pop
mov
call
mov
popf
outsb
int
mov
in
cmp
pop
xor
mov
jnp
pop
pop
dec
into
in
lret
pushf
and
push
jno
enter
cmc
lret
inc
hlt
push
ficoml
jp
pusha
lret
xchg
cmp
leave
push
jb
adc
js
iret
cmp
or
jmp
mov
xchg
hlt
arpl
push
call
add
fnsave
gs
push
xchg
rcrl
orl
test
scas
xor
mov
repnz
pop
pop
fistps
xchg
sbbb
mov
lock
dec
sbb
add
xchg
jnp
cmpb
mov
cmp
movsl
fnstsw
into
mov
ds
jl
lock
sub
xchg
leave
push
lret
fstpl
test
and
and
sti
repnz
mov
mov
adc
jle
xor
iret
ret
into
cmp
cltd
stc
jl
adcl
loope
cmp
fstl
aam
mov
inc
mov
adc
jne
stos
sbb
xchg
sub
adc
mov
fs
mov
fcoms
jno
cs
das
add
mov
ret
test
cmp
ds
stos
cmpsl
adc
mov
arpl
jmp
add
add
pop
xor
fnstcw
jecxz
cmp
add
or
cmp
test
push
leave
cli
in
adc
push
mov
inc
dec
xlat
loope
cmp
adc
cmpsb
out
push
cltd
loop
les
cmp
xchg
xchg
mov
inc
xchg
aaa
pop
cmp
outsl
enter
mov
inc
enter
lret
adc
push
aas
add
idivl
fimuls
les
shll
push
jno
xor
sub
sub
sarb
or
pusha
stos
and
cmp
pop
rcrb
xor
out
popf
pop
push
inc
xchg
popf
adc
pop
loope
mov
loopne
rclb
cmp
cltd
dec
das
fwait
xchg
add
sbb
lea
shrb
mov
call
or
std
cli
and
movswl
subb
out
lock
jnp
sub
dec
jo
pop
dec
jne
ret
cmpsl
rcl
std
and
pop
nop
movl
sbb
add
and
bound
mov
add
cpuid
ret
mov
sbb
dec
mov
dec
pusha
ja
add
inc
fisubl
dec
jo
mov
jns
inc
or
and
cmp
inc
sbb
inc
out
jbe
pusha
out
xchg
test
lock
pop
push
test
loope
call
or
aaa
cld
cmc
insl
mov
jno
inc
jg
inc
pop
push
sub
push
fdivrs
push
clc
or
lds
jmp
nop
clc
jl
sub
push
or
inc
mov
out
adc
mov
mov
jne
adcl
iret
and
mov
adc
imul
inc
mov
insb
rorl
pop
mov
push
lea
aad
push
mov
push
int
dec
movsb
mov
inc
xchg
push
sub
jecxz
xchg
add
fldcw
jbe
jp
mov
xchg
pop
cmp
pop
cmpsl
or
iret
push
mov
mov
or
xchg
fcoms
sub
mov
pop
cmp
and
sub
neg
mov
and
jg
push
mov
mov
cmp
sbb
mov
dec
movsb
daa
clc
hlt
sbbl
or
adcl
xor
jno
cmp
in
adc
push
xor
dec
shrl
lods
mov
daa
inc
notl
add
pop
mov
sub
arpl
mov
inc
shrl
jp
jge
push
sarb
dec
adc
xchg
mov
xchg
hlt
sarl
xchg
fldt
cld
xchg
or
push
repz
mov
call
push
or
lret
or
mov
mov
fisubrl
fsub
bound
sbb
jae
test
add
adc
push
mov
or
xchg
cmp
mov
jae
jmp
cltd
jg
je
and
test
popl
push
test
gs
mov
push
fisttps
in
cmpsb
mov
dec
sub
pop
add
mov
sbb
fcmovb
dec
jno
xor
int
cld
pop
test
popa
mov
dec
cmpl
mov
stos
fcompl
xchg
mov
notb
clc
dec
stc
insb
scas
sbbl
inc
pop
lods
cmp
xor
mov
add
mov
push
imul
mov
fldl2t
jl
push
pop
insl
and
sbb
dec
cli
cmp
ss
sbb
shlb
mov
cmc
sbb
sbb
into
leave
mulb
xchg
leave
test
jmp
cs
in
js
and
mov
lcall
cmp
adc
adc
fwait
inc
cmpsl
cmc
adc
ss
pop
cmp
jno
bnd
inc
hlt
out
test
jno
cmp
xor
or
jbe
cmc
data16
test
mov
push
mov
jae
add
sbb
xor
or
inc
mov
and
sub
mov
pop
mov
outsb
push
mov
pusha
xor
mov
enter
adc
or
mov
aas
imul
lret
aas
shll
fldcw
adc
repnz
fwait
in
jne
sub
dec
stc
xchg
pop
jo
mov
lods
sbb
push
mov
mov
pop
xlat
ret
mov
popa
cmp
rcr
gs
dec
mov
or
jo
sub
in
xlat
pop
out
push
dec
xchg
icebp
jns
mov
xlat
test
add
jno
dec
and
sub
push
mov
loopne
jae
arpl
stos
adc
stc
inc
imul
fisubrs
jge
stos
cmc
mov
xchg
push
test
or
cmp
in
xchg
arpl
call
test
stos
lret
and
aad
mov
adc
push
sbb
popaw
lods
and
mov
sub
movsl
sub
cmp
imul
add
cmpsb
cmpb
push
pop
es
aaa
add
inc
scas
arpl
jle
mov
lahf
cmp
lea
mov
je
sub
js
push
test
mov
cli
cmp
add
test
bound
xlat
in
stos
mov
ds
mov
in
out
add
mov
test
mov
xchg
sub
pop
dec
fsub
in
cmpsb
push
cmp
sarb
nop
add
xor
mov
or
gs
and
jo
dec
or
jg
scas
js
mov
mov
adc
pop
jle
mov
push
sahf
xchg
stc
lret
xchg
inc
idiv
sbb
movnti
sbb
fldcw
inc
sbb
cmp
mov
jmp
lods
xlat
pop
clc
imul
cmp
inc
je
xchg
mov
jne
scas
out
or
stos
pop
decb
mov
pop
pop
adc
call
popf
xchg
in
and
inc
mov
inc
lods
inc
add
push
ds
xchg
ljmp
sbb
and
aam
push
mov
lods
adc
dec
lahf
jecxz
mov
jae
outsl
test
lfs
mov
ljmp
lret
fdivs
jbe
mov
dec
cmpl
xor
mov
mov
adc
clc
pop
test
int
ja
test
sub
push
and
mov
jg
sub
hlt
clc
xor
outsl
out
das
cmpl
pop
fcoms
dec
inc
or
popa
pop
lcall
je
mov
cmp
outsb
xchg
mov
jmp
add
stos
lcall
mov
arpl
cmc
shrb
xor
jmp
adc
inc
fstl
scas
mov
scas
xchg
sar
add
iret
iret
jno
xlat
push
xchg
pop
js
adc
loope
ja
push
clc
subl
add
mov
insb
mov
mov
sub
dec
jle
repnz
cli
lods
mov
fsubr
xchg
cmp
jp
out
mov
dec
or
lods
add
xchg
xchg
dec
mov
lret
pusha
scas
or
sti
pop
xor
je
lret
adc
push
push
scas
xchg
orb
sub
mov
dec
or
mov
in
pop
or
cmp
inc
mov
cmp
popa
imul
mov
fildll
sub
pop
daa
lret
dec
aas
xchg
pop
inc
std
inc
call
inc
sbbl
push
mov
and
enter
push
clc
js
call
lds
mov
inc
and
push
mul
scas
inc
push
enter
dec
xor
pop
or
push
mulb
test
fwait
lahf
fisubrs
push
sahf
aaa
jle
inc
dec
lcall
movq
jb
outsl
inc
lcall
int3
fxch
scas
pop
cs
add
dec
mov
mov
or
mulb
hlt
out
mov
push
inc
test
push
adc
adc
out
and
pop
sbb
jmp
mov
xlat
lds
sbb
cwtl
sub
frstor
jle
jecxz
shld
fisttpll
jnp
adc
cmp
test
jle
adc
xlat
mov
shll
pop
mov
mov
clc
popa
lock
sbb
mov
aaa
insb
lea
jl
icebp
loop
aaa
cmp
ja
fs
and
adc
and
in
adc
mov
jb
std
mov
adc
es
cltd
jnp
insb
les
push
pop
jbe
ss
sbb
loopne
push
dec
cmpsb
push
cmc
jle
mov
xlat
lret
cmp
gs
popf
pop
mov
icebp
lods
sbb
push
mov
aam
or
clc
in
and
cli
shlb
adc
adc
call
xchg
sub
mov
inc
lds
adc
sbb
and
cmc
sub
jo
testb
or
outsl
imul
hlt
pop
ja
jnp
inc
mov
adc
mov
mov
add
adcb
lds
pop
or
dec
adc
mov
movsb
sbb
ret
test
jnp
push
movsl
cmp
insl
lret
xchg
cld
lcall
cli
mov
pop
or
cmp
add
jg
dec
mov
jb
cmp
mov
shll
sbb
and
fldl
loop
int
sub
or
and
push
pop
jle
cmp
pushf
push
xchg
into
ret
mov
lds
cmp
sbbl
enter
mov
pop
push
adc
adc
pop
enter
push
inc
stos
js
mov
dec
ljmp
std
int3
iret
add
or
push
or
lods
lock
and
adc
mov
sbb
ja
sub
xchg
jae
cmp
gs
jb
mov
aad
or
xchg
in
mov
ds
and
call
ss
jg
repnz
cmp
inc
push
mov
xchg
xchg
jge
mov
mov
push
fidivs
in
sub
cltd
or
push
adc
shll
jecxz
inc
inc
adc
sub
push
pop
mov
shrl
mov
jl
add
inc
outsl
pop
std
cwtl
std
xchg
jl
jp
mov
sbb
add
aas
xchg
adc
pop
jo
xchg
pusha
sub
jno
xchg
movl
loope
add
repz
adc
dec
push
outsl
push
ja
xchg
fwait
jmp
div
jp
in
lret
sub
vcomisd
stos
pop
out
add
dec
mov
in
in
adc
mov
adc
in
inc
dec
mov
call
or
jns
adc
xor
cmp
addr16
pop
push
fiaddl
pop
mov
in
stc
cmp
push
cmp
adc
sub
push
in
mov
jecxz
popa
dec
mov
dec
xchg
mov
icebp
lret
stc
sbb
mov
mov
pop
xchg
cmp
inc
dec
xor
std
sub
popa
imul
push
call
rorl
push
mov
lock
mov
cli
nop
cmp
mov
and
scas
or
es
shr
jno
imul
pop
pop
jno
adc
es
in
mov
xor
push
dec
sbb
lock
mov
mov
outsl
shll
adc
dec
jo
fs
outsl
inc
add
ja
xlat
rcl
mov
jecxz
dec
push
xchg
pop
aas
inc
sub
fnstsw
push
mov
mov
inc
or
cmc
mov
pop
mov
mov
sbb
or
fisubrs
jns
mov
add
andb
icebp
aas
loope
popf
adc
cwtl
mov
icebp
adc
cwtl
mov
aad
or
mov
sub
pop
fisttps
js
out
insb
mov
cmovs
inc
cmp
fnsave
and
push
sahf
jle
xchg
sub
and
rcll
add
push
pop
xchg
xor
mov
jmp
jo
xchg
cwtl
std
mov
xchg
ret
popf
rorl
aam
sub
imul
dec
pop
iret
mov
pop
fmuls
rorb
mov
xchg
inc
outsl
push
jg
gs
lret
loope
and
call
lock
xor
outsb
add
js
adc
push
int3
mov
push
jle
dec
inc
jecxz
adc
int
hlt
insl
mov
scas
push
xor
enter
adc
inc
add
sub
or
mov
add
jae
mov
xor
iret
icebp
ffree
dec
les
ret
dec
xchg
cmpsb
push
and
mov
hlt
mov
rorl
pushf
jne
bound
popf
scas
mov
pop
xchg
xchg
stos
xchg
jbe
stos
arpl
dec
xor
and
pop
cmp
test
lds
loop
daa
pop
in
or
jge
jl
mov
movsb
pop
je
out
dec
push
lahf
sub
pop
lock
jne
lret
clc
sub
xchg
inc
imul
xor
movsl
pusha
in
sub
popa
dec
les
or
stos
nop
xor
aad
push
outsb
loop
sahf
je
add
cmp
xchg
pop
push
sahf
mov
scas
sub
fnstcw
push
xor
adc
sti
xlat
jle
roll
pop
stos
ja
mov
xlat
inc
pop
and
fs
sub
outsl
les
pop
push
inc
int
fdivl
cli
fidivl
out
lahf
mov
sbbl
sbb
mov
bsr
jne
inc
dec
or
lea
rcr
mov
xchg
jp
push
pop
cmc
cmp
loope
inc
cmp
jbe
jmp
icebp
sub
dec
mov
cmpsb
and
test
add
jb
and
adc
push
pop
mov
into
mov
lcall
stos
rolb
jns
add
loopne
mov
xchg
mov
out
in
movsb
xlat
out
movsl
int
decb
mov
gs
sahf
xchg
lea
lret
adc
push
pop
stos
adc
adc
aad
fimuls
test
push
and
mov
dec
cmp
or
mov
icebp
aaa
outsl
pop
cld
and
arpl
scas
out
mov
js
ficomps
adc
jb
add
mov
adcl
rcl
jp
ds
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
subb
ret
sbb
xchg
xlat
mov
int
fisttpl
pop
daa
xor
enter
scas
cld
inc
inc
jecxz
ret
aaa
xchg
outsb
adc
inc
out
jmp
jmp
and
fldenv
pusha
sub
mov
in
fnstsw
aaa
xchg
int
jg
push
xor
lods
sbb
aam
push
ret
hlt
mov
mov
loopne
call
lret
testl
push
sbb
xor
out
lret
imul
dec
outsl
aas
cs
dec
scas
insl
push
pop
jbe
sbb
popl
stc
cmpl
cmp
inc
dec
movsb
push
push
cwtl
aas
jmp
xor
ds
inc
lar
mov
and
rcll
push
mov
and
jno
daa
xchg
out
lds
es
pop
shr
jne
pop
aad
jp
jl
mov
push
inc
inc
sbb
adc
imul
push
ret
sub
cmp
mov
imul
sub
cli
xchg
aad
fsubrl
ret
mov
test
mov
scas
mov
mov
add
mov
out
dec
les
push
pop
jp
cwtl
sti
or
jbe
movsl
mov
into
add
test
push
lret
cmp
inc
ret
push
xor
cmp
cmp
in
add
dec
mov
push
cmp
into
je
lahf
popf
xchg
mov
lret
inc
movb
in
mov
cmp
adc
addl
mov
mov
push
xor
mov
push
cld
into
sub
xor
adc
sar
pop
dec
ds
stos
cld
cs
push
in
push
es
test
clc
daa
sbb
xchg
xchg
movsb
mov
popf
mov
test
inc
or
sbb
jmp
add
and
sti
decb
in
and
nop
push
shlb
xchg
into
aas
sub
add
outsl
mov
or
cli
mov
adc
mov
enter
leave
jae
out
enter
push
mov
mov
into
xor
jle
dec
enter
int3
mov
enter
pop
aam
int
fnstcw
lea
sub
data16
xchg
gs
xchg
int3
and
xchg
and
aas
or
adc
xor
lds
imul
inc
shrl
xchg
and
lcall
sub
add
cltd
jp
gs
ret
jne
push
cmpsb
xchg
xchg
out
sbb
inc
sti
sub
incb
loopne
mov
inc
stos
xchg
fdivr
mov
icebp
mov
mov
mov
pop
pop
jno
push
jl
adcb
ds
mov
in
lods
xor
cmpsb
arpl
sti
sub
cltd
mov
sarl
int3
sbb
in
mov
mov
add
inc
jmp
das
pop
xchg
or
mov
insb
addr16
ss
rclb
repnz
clc
in
jge
cld
shr
push
stc
mov
psadbw
aaa
adc
sbb
fadd
enter
xor
inc
dec
pop
test
mov
rolb
add
mov
and
test
push
jns
jmp
and
lods
lea
jmp
jle
popl
jge
into
pusha
dec
lret
scas
addb
cmpsb
jecxz
jno
xor
ss
or
or
jns
adc
fstps
negb
jno
jmp
xor
sahf
xchg
mov
bound
bound
dec
les
ja
push
dec
lcall
stos
lahf
stos
es
nop
ret
inc
mov
repnz
into
rcrw
push
jmp
add
sbb
jo
jmp
dec
ds
push
outsb
cmpsb
cmc
push
out
lods
lret
loopne
pop
xor
js
inc
jns
ljmp
dec
fcoms
adc
pop
jnp
hlt
mov
or
popf
sarl
addb
insl
dec
cmp
pop
pop
xor
movsl
inc
lds
adc
cmc
jo
sbb
xlat
mov
data16
repnz
cld
leave
or
and
inc
outsl
push
clc
lods
aaa
movsb
and
add
test
aaa
inc
inc
out
adc
int
xchg
pushf
std
jae
lcall
or
inc
add
add
dec
aaa
xchg
jbe
cmp
std
mov
xor
or
inc
push
xor
push
scas
scas
pop
insl
cmpl
mov
sub
mov
shl
sub
adc
jnp
ret
daa
push
sti
xchg
lret
mov
cmp
roll
icebp
shll
addr16
mov
and
xchg
push
ret
mov
push
iret
jmp
cmp
aad
jmp
sbb
fwait
and
adc
mov
mov
jecxz
fiaddl
jmp
jae
call
add
fidivs
cmp
pushf
pop
sub
int
sub
setl
hlt
push
addl
sahf
inc
or
test
jg
xor
faddl
lret
and
aaa
pop
out
mov
pop
add
imul
push
adcb
pop
mov
das
cmp
xchg
jbe
mov
cmp
cmp
arpl
or
or
lods
jbe
xor
mov
jl
push
ja
inc
daa
cmp
fdivrs
jmp
and
leave
sub
inc
xchg
sub
xchg
pop
sub
push
pop
inc
test
adc
imul
icebp
mov
cmp
push
in
shrl
mov
xchg
pop
arpl
mov
jae
cmpsl
pop
or
or
mov
stos
gs
xchg
hlt
jns
or
adc
mov
push
repnz
add
out
lods
test
sub
mov
clc
cmp
out
jne
mov
jle
icebp
in
js
mov
pop
test
jg
inc
jo
cmp
xor
mov
push
xchg
std
cmovp
int3
push
cwtl
pusha
sbb
xor
xchg
out
lret
mov
fcomps
dec
rcrl
sub
addl
dec
pop
daa
or
or
aam
mov
aaa
dec
push
mov
sbb
pushf
in
movsb
xchg
insl
jg
mov
scas
sub
flds
mov
inc
in
add
jp
or
subb
aam
mov
or
inc
or
out
inc
or
dec
inc
adc
shlb
xlat
test
rep
add
xchg
jns
outsb
gs
jmp
outsl
bnd
xor
loop
fwait
out
jbe
sbb
jnp
loope
cmp
mov
adc
test
out
add
push
scas
add
fildl
push
cmp
or
cmp
push
or
pop
inc
mov
std
jg
ss
xor
rcrb
setg
mov
jbe
and
loopne
cltd
or
testl
add
cli
ljmp
mov
shlb
movb
cwtl
int
das
push
scas
jne
cli
xchg
push
cli
jnp
ret
fnstcw
jmp
fstps
out
icebp
cmp
add
xor
imul
push
fimuls
das
jne
or
mov
mov
popa
ljmp
mov
scas
xchg
mov
call
pop
adc
xor
test
cmc
mov
xchg
out
or
mov
and
pop
in
push
es
icebp
mov
fimuls
bound
shrl
sar
test
cltd
jle
inc
hlt
idiv
imul
add
adc
and
std
sub
test
ljmp
jmp
fwait
dec
push
icebp
xor
jl
fwait
jo
mov
sar
pop
mov
js
push
fiadds
xor
int
rcrb
lock
cmp
idiv
in
and
sti
xlat
aam
int
jge
push
aas
imul
jb
add
jo
sub
push
sbbl
lods
insl
ja
jo
test
testl
sbb
mov
add
inc
sti
ret
cs
fwait
divl
jmp
sarb
push
lcall
or
push
incb
pop
popf
rdmsr
stos
add
daa
sub
mov
mov
push
xchg
and
mov
rcrl
bound
adcl
jbe
mov
fidivl
push
push
mov
or
int
and
ret
iret
sub
leave
jp
stc
xor
xor
jp
es
mov
aas
mov
mov
cmp
cmp
outsl
aad
insb
inc
inc
xchg
cmpsb
cmpsb
jp
nop
mov
sti
imul
sbb
jmp
imul
mov
xchg
jp
pop
mov
in
jge
in
xchg
fidivs
popf
pop
or
sub
or
pop
jb
movsb
fnsave
mov
mov
sarl
inc
sbb
enter
pop
pop
and
or
ljmp
daa
inc
jmp
pop
pop
jb
adc
push
in
pop
cmpsb
pop
dec
add
jmp
fmul
mov
mov
das
mov
jmp
pop
out
mov
inc
rclb
decb
or
cwtl
retw
je
lds
dec
sbb
sbb
scas
mov
cmp
mov
fxch
xchg
ss
call
xor
jbe
pop
mov
sbb
lods
dec
inc
push
cs
mov
mov
xlat
out
sarb
lret
mov
stc
mov
xchg
dec
and
mov
sbb
sub
inc
xor
adc
mov
sbb
fidivrs
sbb
iret
adc
dec
sub
inc
das
mov
neg
aad
mov
jge
test
mov
xchg
and
sbb
dec
popa
push
inc
sub
inc
mov
loope
jmp
cmpl
xor
test
adc
inc
in
dec
dec
test
push
and
mov
popf
add
cmp
hlt
pusha
push
xchg
xchg
mov
xlat
dec
shll
sbb
test
jns
das
sub
mov
adc
fwait
jecxz
leave
push
add
sti
mov
mov
fstpl
cmp
cmp
test
hlt
mov
call
mov
xchg
push
cli
mov
lahf
mov
pop
stos
cld
clc
rcrl
adc
in
xor
out
fcmovnbe
sbb
xor
sahf
inc
push
pop
adc
jae
int
fwait
inc
add
adc
icebp
jg
mov
pop
icebp
aam
cmpsb
int3
in
inc
mov
pop
andb
fs
push
pop
add
addl
sbb
push
sbb
lock
push
imul
in
js
xor
pop
js
inc
sbb
jmp
div
cmpsl
lds
jp
js
inc
xchg
inc
or
nop
test
loope
or
je,pt
xchg
divb
insl
jno
mov
adc
jb
negb
test
xchg
and
push
add
sbb
fcompl
rcl
out
nop/reserved
in
adc
push
dec
pop
jb
cwtl
adc
shl
ficoml
test
test
into
ret
push
add
xlat
fldl
adc
and
pop
push
mov
scas
arpl
dec
xchg
or
jo
mov
int3
pop
sub
cmp
lret
push
test
pop
lret
mov
inc
int3
push
xor
jae
xchg
sbb
cld
pop
loopne
ret
jl
mov
cmpsb
stos
jns
xchg
int
xor
mov
adc
cmc
out
cmp
imul
mov
jo
sahf
jns
and
adc
xchg
mov
xchg
push
adc
popf
int3
mov
int
shrl
sub
inc
and
inc
sub
and
sub
pop
xor
insb
cld
add
pop
decb
push
xor
je
mov
xchg
mov
dec
mov
neg
aad
lret
imul
nop
aas
movsb
xor
add
outsl
push
int
push
mov
pop
pop
out
test
stc
inc
aad
stos
jge
aam
xchg
int3
mov
ficoms
jbe
enter
nop
lds
xchg
inc
xchg
in
fwait
test
adc
xchg
data16
call
js
fs
dec
dec
mov
lahf
push
je
mov
mov
out
and
inc
cwtl
sub
insb
mov
push
fdivr
pop
or
push
xor
jne
js
mov
fld1
xor
daa
sub
xchg
add
adcl
mov
push
jnp,pt
orb
sub
mov
pop
sahf
pop
xchg
hlt
mov
fstpl
mov
and
ret
negb
adc
outsl
inc
xlat
add
xchg
cmp
stc
sbb
adc
pop
inc
out
sbb
ficompl
mov
div
add
inc
mov
mov
dec
mov
test
jge
mov
mov
enter
fs
mov
mov
sbb
int3
in
cmp
jno
xchg
inc
outsl
mov
stc
idivb
cs
aaa
sbb
repz
daa
dec
sub
loop
sub
sub
enter
mov
fsts
sbb
jg
scas
cwtl
pop
cmp
jmp
ds
call
rcrl
push
push
es
gs
mov
ja
adc
xchg
pop
jle
cmpsb
inc
clc
jo
mov
sbb
xchg
pop
push
in
or
insl
movsb
and
sbb
inc
xor
hlt
mov
xor
imul
pop
inc
dec
mov
cmp
fildl
push
and
aas
inc
iret
xchg
inc
mov
push
loopne
in
cmp
xor
sub
adc
jns
sub
enter
mov
and
and
aaa
push
sub
out
leave
sbb
pop
fsubp
out
cli
in
mov
iret
cmpl
das
and
push
mov
leave
jno
mov
in
mov
add
jae
mov
dec
cmpsb
mov
add
jmp
lcall
push
push
ss
das
and
es
cmp
dec
inc
push
ret
and
aaa
shlb
push
loop
push
or
xchg
mov
repz
ds
or
adc
mov
add
mov
sub
jo
andb
pop
lret
add
popf
mov
mov
fstps
aad
or
popf
jmp
adc
repz
insl
es
pushf
ds
mov
ds
js,pn
mov
clc
roll
cmp
xchg
inc
mov
dec
inc
sub
cmp
fldcw
std
mov
pop
xor
adc
xor
test
aam
leave
shrl
mov
inc
xorb
movsb
loope
push
arpl
jb
div
mov
push
sbb
jg
stos
cli
std
lahf
cli
pop
inc
push
icebp
jae
add
flds
cmp
or
aam
cmp
ret
mov
mov
adc
pop
dec
adc
mov
data16
add
fnstenv
imul
stos
leave
outsl
inc
sub
shlb
inc
outsl
cld
cmp
addl
aad
sbb
addr16
adcb
pop
mov
sbb
data16
or
or
in
cmpb
push
xor
and
and
push
popf
fnstenv
aam
fcoms
jnp
mov
push
sub
js
sarb
in
mov
xchg
aad
jmp
popa
xchg
subl
repz
mov
fdivp
dec
xlat
mov
in
mull
mov
inc
xchg
xor
fldcw
into
notb
mov
mulb
movsb
and
cmpsb
cltd
sub
roll
xchg
mov
lret
sub
sub
ds
and
movd
cmc
sahf
sbb
sub
push
mov
lcall
jb
mov
sub
out
xor
xchg
mov
pop
lret
push
divl
mov
movsl
jns
dec
add
xchg
ljmp
xchg
mov
mov
fs
out
adc
addl
or
dec
mov
out
mov
imul
daa
jmp
add
fwait
jnp
jbe
push
mov
or
and
ret
sbb
pop
inc
push
fst
lock
scas
xorl
xchg
push
in
mov
sub
xchg
pop
sub
lds
mov
jge
xlat
xchg
aad
dec
jno
hlt
jno
orl
fidivrl
mov
hlt
hlt
and
out
out
jno
jb
insl
pusha
dec
lods
mov
pop
xchg
nop
adc
mov
out
sbbl
cmp
ficoms
dec
cmp
mov
adc
clc
dec
add
fwait
mov
and
fidivs
jo
mov
push
andl
mov
and
lods
lcall
repnz
fadds
mov
call
leave
outsb
outsb
inc
lret
jnp
mov
mov
in
test
fisubs
scas
popa
addr16
xchg
outsl
sub
pop
fs
or
inc
jg
sahf
jae
loop
inc
xchg
push
jecxz
sti
fcmove
push
les
mov
mov
and
in
aas
mov
fsincos
or
pop
cmp
cmp
clc
pcmpgtb
clc
and
cmpsb
push
cld
jbe
cmp
fwait
pop
and
add
xchg
cs
daa
ret
lret
push
fistps
mov
daa
sub
cwtl
lock
outsb
dec
cmp
jns
mov
mov
sbb
hlt
leave
sbb
dec
mov
mov
cmc
pop
fistpl
xchg
push
mov
pop
stos
hlt
jnp
imul
hlt
int
adc
mov
sub
dec
sarb
lds
outsb
jge
xchg
mov
inc
or
sar
sub
push
adc
or
ja
insb
lret
inc
outsl
pop
fcomi
in
sub
adc
out
test
jl
cmp
sbb
loopne
lret
nop
add
xchg
pop
out
fmull
stos
sbb
xchg
cwtl
nop
test
imul
icebp
aam
rcl
add
mov
xor
leave
movsb
not
int
xor
and
or
into
sbb
test
mov
std
xchg
cmpsl
adc
fs
mov
out
jno
mov
push
push
dec
push
and
mov
pop
popa
cltd
sbb
and
inc
out
cmpsl
add
push
mov
fwait
sbb
cmp
mov
outsb
xchg
and
mov
pop
clc
inc
inc
pop
mov
jecxz
fucomi
jg
pusha
pushf
xor
sbb
cmc
mov
and
call
mov
icebp
fisubl
or
in
adc
aaa
adc
or
and
lods
pop
xor
gs
ficompl
push
rcll
outsb
scas
fmuls
jo
mov
dec
loop
or
mov
in
jbe
dec
push
loop
addr16
out
sub
mov
pop
jg
stc
sahf
push
cltd
xchg
xor
cmp
test
xchg
jae
cmc
pushf
cmp
je
test
int3
push
inc
daa
xchg
or
fidivs
imull
pop
imul
jmp
out
mov
repnz
mov
cmpb
sbb
addl
inc
insb
xlat
test
push
push
mull
int
stc
testl
adc
and
loope
sub
je
stos
pop
stos
pop
adc
sbb
lods
or
mov
xchg
imul
out
pop
aas
push
or
sub
inc
push
jbe
lock
add
and
das
inc
sub
leave
inc
fidivl
mov
pop
sub
icebp
insb
jbe
inc
jnp
rcrl
lret
or
xor
xor
test
push
inc
adcl
pop
mov
xchg
mov
call
hlt
sub
push
cltd
fs
ret
into
sub
sub
or
adc
cmp
dec
addb
out
and
adc
out
push
call
or
pop
cmp
push
add
sbb
jno
cmp
das
jb
fisttpll
dec
push
stos
scas
test
sahf
jg
add
dec
arpl
nop
stc
push
xor
fldcw
dec
cmp
mov
adc
sti
les
loopne
pusha
mov
xor
test
and
mov
cmpsl
mov
call
inc
jmp
and
stos
xor
mov
cmp
filds
and
arpl
addr16
push
out
icebp
xchg
mov
xorl
xor
std
jge
outsb
aaa
adc
les
push
lods
ficomps
sbb
sub
xchg
mov
mov
add
rol
mov
subb
fs
mov
ret
mov
pop
pop
std
enter
jecxz
cmp
lea
fwait
and
ja
push
mov
and
jo
dec
add
push
cmc
add
cmp
sbb
ja
add
inc
mov
rclb
cs
sub
rolb
sahf
imul
cmc
add
adc
je
scas
aam
xchg
shlb
jae
insl
imul
sbb
dec
push
lret
mov
lcall
repnz
insb
fmulp
mov
ja
fsubrp
mov
mov
push
adc
or
add
fucomip
mov
pusha
mov
lock
mov
ja
pop
xchg
and
xor
cwtl
int3
into
pop
jecxz
rcr
and
rclb
insl
and
pop
iret
aad
aad
xchg
add
out
fildll
nop
push
sahf
xor
mov
xchg
cltd
xor
ret
into
sbb
or
jb
lret
or
xchg
ds
out
addr16
loop
aaa
stos
in
push
xchg
push
push
popf
xchg
jno
pop
xchg
pop
sbb
gs
out
and
adc
negl
push
outsb
hlt
or
nop
xchg
orl
push
outsb
xchg
mov
stos
xlat
push
movsb
repz
xlat
stos
push
sub
pop
test
jae
xor
mov
leave
push
out
xchg
xchg
and
cmp
aas
mov
ss
pop
inc
xor
add
add
add
adc
idivl
in
sbb
or
stos
std
sbb
aam
call
cmp
leave
dec
mov
or
push
inc
sub
pop
dec
dec
mov
cli
imul
jnp
xor
pop
es
or
in
subb
fisttps
div
lcall
lods
push
mov
leave
je
out
inc
cmc
ror
cmpsl
push
mov
xchg
dec
mov
xchg
and
push
es
xor
sbb
mov
dec
test
fcoml
mov
imul
orb
adc
fcmovnb
rclb
jmp
xchg
cmpsb
les
movsb
pusha
shl
dec
sub
push
clc
add
sbb
repz
inc
frstors
cli
lret
sbb
pusha
xor
aaa
into
ret
push
outsb
ss
inc
add
ret
fiadds
jle
push
lea
cmp
push
cmp
repz
push
lret
sub
xchg
mov
xchg
xchg
aaa
jo
pop
mov
sub
aad
aaa
dec
les
cmc
pop
adc
push
test
cs
push
cmpl
dec
in
mov
out
lods
movsb
mov
test
inc
and
aam
mov
sub
outsl
push
out
mov
mov
inc
dec
mov
mov
mov
sbb
push
sahf
xchg
mov
mov
into
or
pop
push
or
jae
adc
jg
in
ja
loopne
jle
popa
lcall
leave
mov
fs
pop
cmp
mov
cwtl
push
jb
jo
daa
daa
dec
cmp
subl
mov
addr16
sbb
and
lock
std
lock
shrb
outsb
xchg
jge
sahf
add
or
testl
xchg
mov
xor
iret
adc
dec
or
jb
push
ret
and
scas
lea
jo
jmp
imul
sub
or
pop
or
es
punpckhwd
cs
dec
sbb
int3
out
mov
das
fadds
stos
das
or
xor
out
mov
push
bound
xchg
xor
shll
pop
addb
mov
test
xchg
pop
in
jnp
push
pop
jmp
cs
mov
mov
sub
cmc
inc
out
and
jnp
jge
cwtl
sbb
sti
sub
pusha
xor
sub
and
sbbb
ljmp
insb
stos
inc
bound
jp
cltd
ret
sti
pop
inc
ficompl
cs
imul
adc
test
inc
loopne
mov
mov
inc
cwtl
repz
add
mov
enter
test
js
int3
ljmp
add
stos
cmc
stc
push
push
sti
adc
pop
inc
lea
xor
fadds
pusha
pop
lahf
dec
and
xor
pop
and
sti
rcll
xchg
rclb
push
test
mov
sbb
icebp
cli
andb
jmp
div
jo
pop
shll
out
xchg
push
or
and
xor
adc
aas
and
aas
jae
mov
shll
jge
sbb
sub
fbld
pop
fmull
mov
push
xor
out
jmp
mov
ja,pt
je
mov
sbb
in
stos
out
clc
dec
push
adc
cld
cli
pop
cmpsb
mov
jo
mov
sarl
fldl
fmull
adc
mov
jo
dec
push
ss
movsl
xlat
xchg
ljmp
adcl
fsts
adc
js
in
pop
pop
subb
xor
gs
cmp
jns
loop
imul
mov
add
fwait
scas
xor
lret
int3
and
cmp
jo
clc
insl
call
pop
dec
xchg
jp
cltd
jo
jmp
push
daa
jp
pop
dec
jle
cmp
sbb
rclb
loopne
test
push
adc
add
xchg
adc
lock
stos
fcomp
dec
cli
lea
pusha
lret
inc
pop
xor
pop
or
stos
inc
repz
orl
mov
lds
movsb
dec
pusha
lea
pop
xor
call
inc
mov
or
push
fimull
sub
pusha
mov
add
inc
fists
stc
gs
jbe
dec
test
lods
sub
imul
jne
lahf
ss
movsl
fnstenv
inc
xlat
rcrl
sub
and
data16
mov
sub
cmp
jbe
add
xor
or
cs
lahf
mov
add
cmc
outsb
or
adc
dec
jge
fistpll
mov
jne
push
push
loope
pusha
jge
lods
and
cs
ret
inc
push
insl
lahf
cmp
stos
and
cmc
aam
imul
xor
pop
sti
loope
add
mov
sarl
ja
sbb
push
pop
js
jg
loop
pop
imul
icebp
test
jbe
pushf
sub
mov
popl
cld
xchg
jno
roll
pop
repnz
in
fwait
xchg
shll
lcall
sahf
jge
and
and
and
lret
push
decl
xor
scas
loopne
sub
gs
add
dec
mov
jl
lock
mov
adc
adc
or
push
inc
pop
test
and
sahf
push
or
push
push
lods
sahf
pop
ds
in
fildl
jmp
pop
jmp
adc
call
inc
pop
cmp
popa
cmp
mov
out
cmpsb
adc
sbb
bound
cmc
sub
cmp
jge
lret
jnp
mov
and
mov
cmc
nop
arpl
or
sub
jle
sarb
aaa
push
icebp
aaa
pop
sbb
mov
push
mov
or
mov
and
push
inc
pop
xor
repnz
cmp
dec
int3
cld
enter
xor
pop
rolb
bswap
or
mov
cwtl
and
push
mov
adc
das
xlat
lret
mov
mov
add
movsb
or
and
je
or
leave
or
addb
xchg
ret
lock
pushl
and
dec
mov
or
nop
dec
cld
xlat
stc
cmp
sbb
in
mov
sub
mov
and
dec
or
mov
ret
push
mov
push
and
imul
sbb
pushf
repz
fwait
into
pop
pop
jecxz
sbb
movsb
enter
push
push
cli
jmp
repz
sub
lds
inc
adc
addr16
jmp
cmpsb
cmp
fwait
cs
dec
das
hlt
cmp
sahf
jmp
or
fsin
adcb
lds
sub
ret
adc
icebp
or
xorb
mov
js
in
pop
testl
jmp
mov
outsl
mov
mov
rcl
inc
sub
dec
lea
adc
mov
ss
mov
mov
rclb
mov
dec
sub
fs
mov
jge
push
mov
loopne
xchg
loopne
pop
push
or
pop
icebp
repnz
jae
and
jmp
add
pusha
sbb
mov
mov
dec
jecxz
inc
xchg
rcl
cmc
rclb
mov
sub
lret
inc
sub
popf
dec
lea
adc
mov
out
popa
sbb
inc
jge
and
sbb
cmp
sarb
sbb
cld
pop
lret
pop
or
dec
dec
mov
sbb
xlat
mov
jmp
push
mov
adc
sub
push
int
mov
jne
mov
rcrl
mov
inc
cmpsb
inc
sbb
out
ljmp
setae
cltd
mov
xor
add
xchg
dec
or
sub
fidivs
cs
jl
testb
jg
adc
ja
cmp
dec
jge
pop
cld
cmp
adc
or
bound
cmp
push
jle
shl
in
les
jno
push
in
cld
xor
mov
movsb
ljmp
and
or
paddd
loop
pop
mov
cmp
sar
ss
outsl
pop
imul
lcall
out
mov
rorl
push
pop
sbb
outsl
icebp
out
xor
in
cmp
mov
adc
or
push
mov
test
int3
je
daa
adc
out
push
popf
loop
or
int
stos
fdivl
lret
cmp
loope
rorl
xor
jle
xor
dec
cmp
sarb
xchg
inc
jbe
and
push
xchg
adc
jnp
jmp
out
mov
loop
test
sub
adc
es
pop
add
ss
ja
push
lahf
mov
mov
lods
fimull
pop
aaa
mov
xchg
shlb
jmp
mov
mov
lock
mov
imul
ljmp
jb
add
imul
into
sbb
mov
pop
mov
mov
xlat
mov
fs
push
ret
or
fcoml
mov
mov
es
fwait
enter
adc
nop
dec
mov
roll
scas
repz
out
lods
push
xor
or
jecxz
pop
negl
dec
and
sbb
sub
out
cmp
daa
mov
xchg
mov
jb
inc
push
sub
das
repz
jle
js
mov
mov
imull
cwtl
clc
inc
xchg
insb
ret
call
sbb
mov
test
daa
mov
xor
add
js
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
sbb
insl
add
insl
add
dec
insl
