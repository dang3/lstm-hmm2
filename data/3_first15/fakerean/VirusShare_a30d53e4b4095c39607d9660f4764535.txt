sbb
add
out
sub
fcmovnu
int3
scas
sahf
push
arpl
mov
adc
movsl
and
pop
iret
les
fdivrs
push
add
and
sbb
push
dec
out
mov
jo
mov
sti
and
or
jns
inc
and
jl
cmc
cs
stos
insb
movsb
push
push
idiv
dec
jnp
into
les
rcrl
dec
adc
xchg
mov
das
fsub
movsl
cltd
call
cmp
shrb
daa
imul
mov
pusha
stos
and
jns
xor
fistpll
sbb
jle
sbb
dec
fldcw
dec
pshufw
gs
incl
lods
sub
test
mov
sbb
add
mov
outsl
test
mov
xchg
ret
mov
imul
inc
fdivr
mov
xor
xor
xor
mov
dec
and
jle
add
daa
jge
mov
dec
data16
fwait
push
xchg
cmp
out
add
jge
mov
mov
shld
aaa
clc
push
shll
push
fcmovnbe
les
sub
int3
cwtl
and
dec
pop
imul
mov
jo
mov
jae
in
repz
stos
jg
outsl
xchg
out
and
insl
fadd
addb
cmc
sub
jbe
fdivs
int
dec
sub
jecxz
mov
scas
mov
jns
xchg
cmpsb
sbb
test
or
call
cld
cmpsb
pop
push
mov
call
hlt
mov
sub
cmpsl
aaa
sahf
cmp
mov
or
pop
push
adc
aad
push
pushf
push
and
mov
cmp
int3
or
in
push
mov
sub
test
scas
cmpsl
and
rolb
mov
adc
mov
stos
xchg
sarl
mov
ljmp
xor
pop
js
cmp
stos
or
pop
popf
into
mov
jle
in
aam
adc
mov
jle
xor
loopne
ret
push
sub
sbb
jns
in
or
imul
fmuls
pop
dec
fmull
ss
and
aaa
into
sarb
ljmp
pop
cmc
xchg
sbb
test
jne
inc
std
adc
fstpl
ss
fsts
bound
inc
push
jb
xchg
jnp
cli
arpl
and
inc
add
test
rcll
mov
mov
push
loopne
les
int3
jg
xchg
inc
sbb
adc
mov
sbb
ljmp
cld
push
xchg
push
popa
pop
mov
lods
dec
pop
mov
or
xchg
dec
imul
stos
sbb
paddsb
aad
cli
dec
outsb
sahf
push
jmp
lcall
push
rorl
push
ja
cmp
xor
shll
jo
xor
cwtl
or
loope
outsb
leave
jp
sub
test
enter
and
sub
aas
das
pusha
repz
inc
scas
shrl
loope
lret
sbb
xor
mov
mov
imul
inc
pop
cmp
adc
mov
cmpsb
push
int
fucomp
push
pusha
dec
test
dec
out
mov
inc
adc
xor
jecxz
dec
push
movsl
mov
adc
and
inc
das
ficompl
inc
pop
cli
mov
push
xchg
gs
aad
add
pop
pop
push
xchg
adc
pop
jl
pop
push
xchg
clc
xchg
sbb
jne
xor
and
and
dec
outsl
push
xchg
dec
out
lods
sarb
cmp
lods
xor
stos
cmp
stos
mov
je
and
das
jne
pop
jnp
orb
mov
pop
mov
ja
xchg
push
aam
addl
xchg
push
xchg
sbbl
lcall
sub
sahf
mov
mov
adcb
xchg
pop
decb
xchg
push
inc
push
push
inc
adc
dec
cmp
inc
shlb
stos
jnp
sbb
jmp
jl
pop
insl
aas
sub
cltd
adc
movsb
push
insb
dec
ret
cltd
jle
push
xor
add
xchg
into
aas
aam
pushf
loope
pop
sbb
fnstenv
xacquire
out
jnp
call
aad
lock
jns
clc
insb
mov
std
jmp
xchg
jnp
adc
jp
push
pop
pop
add
in
xchg
ljmp
sbb
inc
ja
ja
mull
lcall
stos
in
push
jp
and
divb
add
ret
out
mov
mov
mov
jp
subps
int3
leave
loopnew,pn
xlat
int3
sbb
aad
int
es
mov
stc
pop
lock
fcmovnbe
xchg
jno
popa
enter
pop
aas
xor
stos
loop
sti
mov
imul
incl
lcall
jae
scas
or
ret
idivb
mov
xlat
dec
sbb
dec
aad
push
mov
ret
jg
insl
popf
cmpb
call
xchg
jo
repz
jbe
leave
adc
inc
adc
call
or
in
shlb
rorl
mov
ss
in
inc
test
xchg
cmp
sbb
inc
mov
xchg
cmpsb
int3
push
jno
lods
pop
in
lret
sub
je
je
movsl
jmp
push
js
lcall
loop
repz
mov
pop
movsl
pop
lret
testl
inc
jge
cmpsl
sbb
or
out
rol
movsb
aaa
dec
xchg
mov
add
add
adc
ret
clc
das
sub
loopne
scas
imul
adc
adc
push
imul
dec
pop
imul
data16
mov
inc
mov
mov
cli
sar
icebp
inc
fwait
cmp
out
inc
lahf
pop
or
shrl
mov
and
add
sahf
xor
and
and
and
cmp
dec
divb
xchg
sub
into
addb
inc
aaa
mov
xor
jb
jge
in
out
notb
mov
loop
and
push
mov
jmp
daa
test
pop
push
push
jbe
dec
push
pop
and
pushf
aas
inc
xchg
pushf
repnz
sahf
and
into
addr16
pop
int3
inc
push
faddl
outsb
aaa
repnz
jmp
addl
jb
das
dec
dec
mov
cli
mov
bound
insl
rcrl
das
sbb
mov
mov
aad
testl
std
stos
cmp
mov
frstor
jecxz
jg
call
outsl
pop
test
pop
xor
inc
push
xchg
jp
and
mov
mov
jmp
stc
sub
mov
loopne
popa
jl
jae
xchg
inc
out
imul
lods
outsl
stos
pop
out
xor
inc
sar
cld
xchg
jmp
popf
inc
mov
add
daa
add
sti
lret
xchg
orb
cmpsl
jbe
cld
test
rorb
xchg
popf
arpl
adc
daa
insl
xchg
lods
ljmp
das
fstps
pop
ljmp
leave
jno
xor
jne
cmpsb
fsts
sbb
pop
ljmp
sub
mov
mov
or
pop
xchg
fnstenv
add
mov
int3
mov
ds
mov
jmp
cmp
jge
mov
jns
push
mov
sbb
iret
addb
xor
xlat
add
icebp
jae
jg
out
ret
cmpsb
or
pop
mov
mov
jbe
fisttpl
call
mull
lret
xor
push
fs
push
xor
pusha
xlat
xchg
pop
pop
push
aad
push
cmpsl
sub
xchg
adc
ja
pop
pusha
int
imul
data16
mov
xchg
aas
clc
sbb
lret
inc
jae
and
pop
cmpsl
lds
push
push
jmp
mov
ds
xor
fucomip
fmull
repnz
add
inc
dec
xlat
pop
arpl
enter
cmc
or
cmp
or
enter
fldl
add
lcall
addb
or
lret
xchg
std
sub
and
push
mov
xchg
imul
mov
out
inc
sarb
mov
mov
add
inc
ret
mov
mov
ret
movb
in
faddl
clc
inc
lods
ljmp
movsl
push
mov
shrl
add
call
push
imul
xor
jo
enter
jae
push
dec
or
call
lahf
pop
loop
and
ljmp
sti
gs
jne
in
xchg
out
or
jle
test
mov
sahf
rcll
inc
inc
jge
in
les
jl
mov
mov
xchg
pop
cmp
inc
out
mov
popf
stos
out
and
std
test
mov
stos
popf
push
out
push
mov
dec
and
adc
dec
add
pushf
sbb
mov
fmuls
push
neg
xor
cmpsb
arpl
mov
cs
xor
arpl
xchg
aam
orl
push
mov
pop
and
rcrb
push
aaa
mov
test
ds
test
xchg
fwait
inc
sub
jb
dec
pop
fisubs
sbb
int3
mov
hlt
cmp
mov
or
js
xor
shrb
jo
fwait
dec
insl
aaa
sar
adc
and
and
dec
dec
into
or
test
push
fisubl
xor
aad
xchg
sub
jb
inc
push
xchg
enter
and
push
mov
pop
in
dec
jp
roll
shll
or
xchg
xlat
cwtl
dec
sbb
js
cmp
test
gs
ss
test
icebp
scas
lods
neg
repnz
xchg
scas
push
fs
imul
push
clc
mov
mov
stc
fs
inc
push
ljmp
daa
js
mov
adc
sbb
xlat
repnz
in
xor
or
xchg
gs
xorb
icebp
ret
jmp
ss
arpl
aad
add
je
adc
or
lock
xchg
push
inc
loope
dec
inc
inc
fs
sub
jne
repz
xchg
loope
mov
inc
xchg
jbe
sbb
inc
insb
mov
hlt
push
ss
stos
mov
js
subb
xor
jmp
inc
loop
sbbb
stos
fisttpll
addb
mov
xorl
addr16
mov
ja
cs
lret
or
or
in
inc
adc
sub
xor
mov
and
stc
movsb
shl
sahf
scas
pop
jg
mov
push
lahf
test
adc
pop
cmp
push
or
rcr
fsubr
mov
inc
cmpsl
jo
inc
fdivp
adc
and
ret
fcmovnbe
sbb
mov
adc
cld
out
inc
cmpb
stos
dec
add
in
and
xchg
push
stos
mov
jp
fucompp
rolb
shl
inc
in
mov
mov
mov
in
cmc
mov
jmp
shlb
hlt
push
or
cmp
xor
aam
push
xor
jmp
js
test
jge
push
xor
sbb
push
mov
push
lahf
aam
cmp
mov
lods
sti
loope
adc
fsts
jbe
or
es
jmp
js
nop
ljmp
and
lea
push
popa
jmp
mov
gs
push
mov
inc
in
addr16
popf
popa
jmp
and
jmp
mov
lods
push
inc
mov
adc
push
leave
int3
dec
ss
jbe
test
hlt
icebp
arpl
jle
adc
adc
addl
stos
push
sbb
or
pop
dec
mov
mov
adc
and
sahf
loopne
js
sub
lahf
dec
mov
push
jg
leave
sub
mov
add
stos
icebp
sub
jo
mov
mov
mov
movsb
cmp
bnd
loopne
cli
adc
imul
xlat
enter
mov
pop
add
mov
push
call
xchg
dec
mov
jge
inc
int3
lcall
leave
loopne
and
jo
insb
fisubrs
and
incl
std
mov
scas
outsl
lds
xchg
push
inc
mov
mov
test
inc
fisttpl
out
and
pop
or
jle
sub
adc
rcl
sbbl
pop
adc
jo
sub
test
icebp
fisubs
cld
and
cmpl
cmp
sbb
mov
jp
pop
pop
adc
mov
sbb
jno
ljmp
push
mov
fiaddl
cmpsb
lret
out
scas
out
xor
scas
mov
or
or
arpl
rorb
adc
pop
iret
or
aaa
leave
or
pop
gs
xchg
leave
test
icebp
xchg
sbb
mov
sbb
fdivr
jg
mov
sub
aad
test
rclb
jne
cwtl
add
fimuls
inc
push
or
call
sahf
add
cmpsl
aad
or
dec
stos
lret
stos
xor
mov
xlat
leave
adc
loopne
jbe
jp
add
mov
pop
mov
push
mov
dec
mov
push
jl
lret
mov
je
xchg
push
add
mov
jnp
xchg
or
aad
pop
and
jae
movsl
rcr
xchg
xchg
cmc
js
shll
dec
pop
pop
inc
jae
dec
pop
les
sub
add
int3
fistl
mov
stos
int3
cmp
xchg
inc
les
movsl
out
loope
and
sub
inc
lds
cmp
out
dec
cmp
shlb
test
pop
pusha
inc
xor
jb
movsl
cmp
testl
imul
pop
mov
and
and
sub
push
and
jmp
adc
and
xchg
daa
cs
aad
sbb
roll
cs
sbb
mov
iret
in
xchg
sbb
cmpsl
cmc
lods
jp
and
cltd
loop
ljmp
push
les
sub
jecxz
cmp
stc
shlb
ljmp
les
fstpl
ret
sub
int
insb
sbb
in
iret
push
cmp
loope
addr16
lret
stos
lods
movsb
xor
ja
mov
cld
jp
ljmp
mov
js
dec
scas
notb
addr16
pusha
iret
xchg
in
inc
push
lcall
mov
stc
icebp
adcb
inc
leave
mov
mov
jbe
in
lret
insl
loope,pn
lock
lcall
outsl
adc
sahf
fdivl
push
inc
mov
inc
cmp
or
add
rcl
inc
imul
push
out
jno
fdivrp
int
add
mov
adc
mov
push
xor
std
int
hlt
into
nop
xchg
pop
push
jns
lock
adcl
jns
cmp
sahf
stos
out
rcrb
dec
cmp
mov
xlat
fadd
adc
stc
fs
lea
in
jmp
fcmovne
mov
sbb
and
or
mov
xchg
call
addb
cmc
lea
divl
push
arpl
dec
clc
xchg
cmpl
add
jns
test
push
insl
inc
mov
call
mov
xor
mov
mov
mov
shl
fmull
pop
in
xchg
cmp
and
aaa
lret
std
addl
or
sub
jae
sbb
xchg
gs
es
inc
mov
pop
jge
adc
insl
jne
and
push
sub
stc
xor
lock
mov
and
ja
xor
dec
lock
xchg
testb
jae
adc
rcll
jne
fwait
push
jo
mov
arpl
loop
sub
ja
jns
push
push
inc
mov
mov
shll
add
ds
mov
mov
jno
out
xorl
sbb
cld
xchg
jl
rolb
dec
or
es
mov
les
insb
xlat
add
mov
pop
js
mov
add
lods
cmp
es
ret
mov
in
daa
fdivs
arpl
roll
push
xor
aas
dec
sbb
mov
fwait
lcall
cmp
pop
ret
xchg
push
sbb
shrb
out
cwtl
adc
and
js
bound
jne
sti
pusha
xor
test
aaa
ds
jecxz
jo
inc
jmp
push
pop
rolb
ljmp
scas
sub
xor
lods
jo
push
jp
jae
rorl
mov
xor
add
lret
mov
mul
pop
nop
out
ja
fdivs
addr16
aas
aam
mov
pop
jge
push
in
stos
fucomp
mov
imul
push
les
subb
sub
sub
loope
popf
push
push
cmp
testl
cwtl
adc
inc
adc
inc
xchg
pop
mov
pop
in
mov
iret
stos
sub
fchs
jns
insl
lods
in
mov
ljmp
xor
or
mov
movsl
xchg
test
push
daa
arpl
fcoms
fsubrl
dec
add
or
mov
add
cmp
je
aam
insl
lret
xchg
cmpsl
sarl
daa
xchg
mov
mulb
loopne
push
ret
stc
mov
push
cmpb
adc
mov
ja
xor
in
push
or
mov
jge
cs
or
push
lods
pushf
push
out
dec
push
fisubrs
jecxz
pandn
jb
jae
loope
int3
stos
repnz
cmpsl
add
push
in
mov
sbb
outsb
cmp
mov
mov
call
mov
jnp
or
out
xchg
push
add
push
sub
jge
in
adc
or
pop
das
push
pop
xor
mov
jle
rcll
pop
int
out
and
cmp
test
mov
sarl
adc
xor
cld
adc
add
cmp
fwait
mov
mov
int3
stos
in
in
add
dec
cs
push
add
std
lods
xchg
cmp
leave
dec
xchg
imul
pop
inc
dec
sub
mov
jg
pop
roll
mov
arpl
or
psrld
pop
fisttpl
addr16
call
mov
lds
sub
mov
sbb
inc
frstor
jmp
in
idiv
and
mov
push
jp
enter
push
and
mov
jmp
xchg
ljmp
mov
push
cs
push
mov
daa
mov
dec
xchg
mov
xchg
test
inc
cli
xchg
jns
outsl
jecxz
outsb
add
enter
adc
cmc
xlat
push
fdivr
repnz
pop
cmp
mov
fcoms
cmp
addr16
mov
and
pop
inc
repnz
dec
nop
pop
sbb
dec
rorb
or
adc
imul
jp
jbe
icebp
cmp
jl
aaa
inc
pop
data16
mov
jmp
and
popa
inc
jnp
pop
std
in
jne
popf
pop
sub
int3
fcmovnb
int3
pop
push
rcrb
push
jne
jmp
sti
insb
mov
jo
movsb
movsl
push
icebp
cmp
pop
adc
outsl
jg
es
outsb
jle
push
mov
xchg
lods
out
xor
and
lods
xchg
rorl
scas
cld
mov
stc
je
mov
xor
imul
stos
arpl
or
and
stos
mov
xchg
pushf
or
xchg
test
mov
scas
aaa
leave
sbb
sub
xchg
bnd
xchg
jno
mov
dec
jo
orb
gs
push
mov
sub
sbb
sahf
push
icebp
icebp
aaa
mov
cltd
xchg
rcrl
lret
dec
xchg
lret
lock
xchg
jnp
cmp
stc
fs
sbb
add
pop
or
push
lcall
and
push
jecxz
jne
je
out
fimull
pop
mov
dec
push
movsb
dec
jl
ret
jle
repz
dec
es
das
jno
jmp
punpckhdq
in
test
popa
pop
jmp
push
lods
hlt
fistl
repz
push
jecxz
adc
dec
dec
push
add
add
mov
les
call
int3
mov
push
jno
xchg
cmp
xchg
sbb
out
mov
std
fwait
js
fistl
sti
adc
xchg
lret
mov
icebp
add
movsl
dec
in
adc
nop
outsl
xchg
xchg
push
es
aad
out
iret
fistl
lods
imulb
clc
call
push
dec
adc
mov
loopne
sbb
int3
add
inc
mov
sub
cmpsb
test
addr16
jne
add
cmp
aad
xchg
out
nop
pop
stos
push
cs
int
mov
bound
repnz
int3
dec
sub
xchg
mov
xchg
push
dec
bound
xor
lock
add
pop
mov
add
xor
push
xor
or
movsl
cmpsl
sub
push
jp
jae
adc
lret
hlt
arpl
xor
loop
jns
enter
push
xlat
mov
insl
push
cmp
div
mov
jle
hlt
push
xchg
ret
cmpsl
or
lods
xchg
pop
bnd
mov
pop
clc
iret
ret
adc
adc
mov
data16
in
shl
jg
sahf
lds
push
test
fdivrs
mov
movsb
sbb
testl
mov
cs
inc
btr
lods
out
jne
xchg
jmp
shl
add
pop
iret
sti
adc
fs
jb
push
cmp
scas
fdivr
xor
ss
jmp
sbb
push
xor
mov
test
pop
sbb
mov
pop
dec
xor
ret
insl
mov
in
sbb
adc
loope
iret
jne
xchg
jecxz
lock
push
mov
movntps
mov
lea
shr
lret
shr
push
aad
xor
mov
loopne
es
imull
test
sbb
pop
adc
js
sbb
mov
mov
aas
dec
mov
lds
mov
mov
adc
data16
fwait
pop
icebp
inc
notl
daa
and
insb
push
repnz
test
push
dec
mov
fisubl
shll
inc
hlt
cli
scas
inc
pop
xchg
or
jmp
and
or
fldt
sbb
adc
sbb
xchg
adc
imul
push
push
dec
mov
sbb
jns
sub
mov
mov
add
cmp
jae
xor
fucomip
adc
faddp
cmpsb
inc
mov
xor
daa
xor
pop
pop
or
jp
in
lds
jne
adc
ret
sub
jae
fisttpll
xlat
test
add
data16
lret
mov
lret
jg
icebp
out
mov
push
mov
dec
xor
inc
jmp
fwait
xor
mov
mov
add
pop
pop
into
jecxz
pusha
testl
mov
sub
or
movsl
lods
popa
dec
mov
jmp
repnz
xchg
xlat
mov
add
shl
push
push
adc
jl
add
cmp
mov
jae
ja
push
pop
add
fs
cmp
adc
out
inc
lret
ret
hlt
data16
sahf
xchg
stos
pushf
push
adc
add
pop
sbb
add
fsubrp
dec
mov
push
cld
add
lea
imul
jp
add
add
sarl
cltd
fldenv
pop
scas
enter
enter
fmulp
dec
cld
roll
add
fdivl
mov
mov
mov
xchg
stos
scas
or
mov
shrb
and
dec
sti
rcr
in
movsl
lods
shrb
call
fs
adc
jmp
dec
jle
mov
or
xor
xchg
fstpt
int3
fwait
outsb
pop
pop
jmp
mov
inc
xor
inc
rolb
sub
push
nop
icebp
inc
rorl
js
repz
mov
out
pop
push
jge
mov
fisubl
xor
js
test
aad
cmp
add
cmpsl
imul
mov
jb
xchg
jge
aaa
inc
imul
outsl
pop
push
bound
orl
fwait
add
arpl
cld
imul
jecxz
xlat
mov
xor
cmp
aad
fidivrl
loopne
jne
fcompl
dec
push
push
in
pop
jae
bound
cmp
and
loop
into
fildl
and
and
mov
fs
pop
jge
lcall
mov
pop
inc
ja
jmp
fwait
cld
rcl
cmpb
and
shrl
pop
sbb
mov
pop
jnp
into
mov
cltd
or
and
repz
mov
mov
popa
adc
pop
scas
pop
jmp
arpl
movsl
popa
push
mov
and
nop
imulb
lods
aam
jne
cwtl
mov
pop
cld
pop
les
mov
out
sbb
cmc
lcall
push
subb
and
pop
mov
mov
xchg
mov
mov
adc
sub
rcrl
ja
in
or
in
ljmp
les
jo
pop
nop
testb
or
fcomip
pop
int
pop
mov
jl
or
fs
notl
adc
xor
xchg
loope
shlb
inc
and
dec
pop
and
add
and
fimull
push
xor
pop
insl
pusha
push
dec
rcll
ljmp
iret
or
push
mov
mov
sti
sbb
sbb
mul
push
out
pop
mov
inc
insl
sub
fwait
mov
cmp
jno
xor
pop
sbb
pop
xchg
ja
bound
and
xchg
cmc
cmp
xchg
lea
add
lods
or
ja
arpl
or
fldcw
mov
and
jp
shlb
arpl
int
mov
fs
ret
adc
rorl
cmc
cltd
xor
mov
push
add
fisubl
lods
push
scas
das
add
dec
hlt
xchg
adc
out
mov
scas
push
pop
inc
cli
pop
mov
add
and
movsb
jmp
sub
std
xor
adc
xchg
jl
sub
or
mov
xchg
mov
in
fdivp
pop
cmp
or
xchg
ss
iret
sub
aaa
or
xor
orl
xor
jg
ds
lret
pop
cwtl
or
sbb
mov
mov
sbb
xor
andl
fmull
or
xchg
hlt
mov
sub
cmpsb
sbb
xor
sbb
jg
sbb
mov
dec
popf
sub
sbb
mov
in
jo
cmp
aad
push
ljmp
mov
mov
fdivrs
cli
sub
cmpsl
dec
add
fsubs
sahf
xor
int3
stos
cmpsl
push
or
push
stos
in
inc
lods
std
inc
pusha
push
ss
xchg
jg
push
test
ljmp
mov
outsl
pop
jns
icebp
push
cmp
pop
jmp
shl
xchg
dec
jle
test
insl
ljmp
ljmp
sbb
outsb
fnstcw
out
lods
push
mov
cwtl
sbb
push
push
test
mov
mov
js
xor
dec
orl
cmpsb
add
xchg
push
jo
fnstenv
mov
hlt
nop
mov
and
mov
jg
pop
mov
sahf
into
jge
push
cmovge
pop
mov
fimull
xchg
mov
or
or
jbe
and
sbb
aaa
dec
xor
pushf
jecxz
add
aam
rcrl
push
hlt
cmp
cmpsb
pop
cmpb
stc
add
add
pop
xor
pop
push
les
sbb
push
mov
or
cmp
sbbb
add
test
call
and
outsb
xchg
js
mov
sbb
pop
push
mov
xchg
cmp
push
ja
ficomps
jo
pop
scas
fdivrl
fiaddl
cmp
cmp
loop
cld
shrl
icebp
sub
adc
sahf
inc
mov
xchg
dec
dec
mov
das
divb
mov
aam
mov
pop
mov
aam
test
mov
in
inc
shll
mov
dec
add
cmp
xor
and
or
pop
ret
ds
ret
aam
idivb
mov
push
lcall
xchg
xchg
outsb
mov
bound
cmpsb
lock
add
inc
or
or
loope
iret
in
or
std
cmp
xchg
push
mov
mov
outsb
fiaddl
pop
add
fldpi
sbb
aas
pop
adc
mov
imulb
ss
pop
add
inc
fs
out
test
repz
sub
mov
xor
jle
and
mov
pop
inc
pop
push
jle
repz
lret
mov
adcb
ljmp
xor
imul
aas
pop
shlb
fidivl
cmp
xchg
ja
imul
cmpl
jmp
dec
jge
popa
movsl
push
jbe
arpl
jp
test
addr16
cmp
xchg
add
and
sub
add
or
pop
pop
loope
loope
push
iret
sti
or
pop
adc
cmp
push
add
inc
push
icebp
je
inc
sub
fcmovb
cltd
mov
int3
adcb
jo
sbb
adc
popa
ja
ss
cmc
cmp
pop
daa
push
sub
in
push
scas
fwait
ret
aas
repz
push
rcrl
cmp
sub
dec
xor
push
insl
push
xor
add
xlat
fs
jmp
push
fmull
mov
mov
lds
movsb
cltd
and
in
sub
adc
int3
jo
loope
das
ja
adc
fcompp
mov
int
dec
mov
push
ficoms
dec
out
sahf
lods
push
frstor
jno
pop
and
adc
in
lea
xchg
pushf
pop
push
shll
loop
repz
test
mov
push
push
subb
xor
rcl
pop
lret
or
sub
mov
dec
push
push
mov
das
cld
sbb
mov
movsb
pop
or
push
nop
les
push
mov
mov
push
loopne
and
aam
fcmovnb
imul
roll
mov
add
xchg
nopl
test
shl
sbb
ljmp
pop
rol
cltd
ds
push
mov
rcll
cmpsl
mov
rclb
out
lret
lods
rorb
das
sub
xchg
push
sbb
es
sbb
movsb
jne
repz
in
jb
push
fisttpll
movsb
xlat
xchg
push
jle
rcl
jl
cmpsl
ret
pushf
addr16
aad
enter
cmp
inc
mov
loop
shlb
pop
jle
or
adcb
inc
imul
inc
nop
enter
pop
repz
inc
add
xchg
std
pop
rol
mov
ret
stos
jmp
xchg
push
inc
mov
fldenv
fwait
sbb
repnz
sbbl
xchg
cmpsb
test
lods
lahf
lret
clc
mov
int3
jbe
xlat
in
xor
negb
xchg
inc
sar
and
lret
cmp
iret
andl
imul
sub
jae
mov
xchg
jne
pop
enter
aam
mov
mov
adc
and
mov
popf
clc
in
mov
jno
test
sqrtps
dec
subl
push
inc
pop
jg
icebp
stc
sti
test
hlt
jns
pop
jecxz
arpl
push
push
dec
add
mov
or
mov
dec
jl
cmp
mov
mov
pop
das
adc
stc
push
mov
xlat
insb
add
mov
or
pop
sub
out
test
mov
xchg
and
sub
adc
mov
jmp
xor
sub
jle
mov
sub
movsb
insb
xchg
out
in
xchg
pop
imul
dec
enter
mov
rolb
int3
lcall
jbe
sub
xor
outsb
push
dec
lret
xchg
xor
cmpsb
add
pop
sub
in
jecxz
movb
push
aas
das
inc
ds
rclb
test
out
or
jb
not
in
ret
sahf
aaa
xor
mov
test
loope
xor
sahf
ret
add
repz
lret
xchg
stos
sub
aam
mov
pop
pop
push
jmp
add
icebp
mov
int
cli
or
aad
push
ss
sti
mov
addr16
lock
sarl
jmp
daa
xor
push
nop
arpl
je
pop
adcb
push
lods
sbb
xchg
mov
repnz
in
ss
subb
lea
cmp
sub
lds
and
mov
dec
push
mov
cli
aaa
test
jl
cmp
cs
add
dec
std
in
std
js
xor
out
jb
fst
in
out
mov
mov
into
push
inc
push
cmp
inc
ficoml
lahf
push
stc
push
xor
inc
es
cltd
sub
pop
in
daa
out
pop
push
in
push
add
xor
pop
or
pushf
push
aaa
dec
test
aaa
push
arpl
add
xchg
and
cmp
adc
movsl
ret
cmp
inc
push
test
xor
push
imulb
std
push
imulb
add
inc
fisttpll
mov
js
and
push
pop
pop
cmp
mov
jp
pop
xorl
xchg
dec
cmp
add
sti
popf
mov
sub
dec
sub
jmp
adc
inc
inc
mov
or
sbb
or
sbb
cmpsb
call
mov
insb
dec
inc
inc
fdivr
les
or
mov
imul
mov
popf
std
hlt
add
ja
adc
mov
mov
jb
loope
jmp
sub
xor
sbb
shrl
jle
sbb
or
push
lods
pop
inc
push
mov
or
ret
pushf
mov
roll
cmpsb
and
pop
into
call
xchg
dec
leave
sub
push
jnp
outsl
pop
push
xchg
ss
mov
in
add
jle
dec
dec
insl
hlt
cli
sahf
rorl
dec
xchg
pop
or
ss
push
jnp
pop
test
jecxz
je
dec
pop
mov
call
and
or
ja
out
sub
xlat
cmpl
and
mov
sbbl
movsl
mov
inc
xor
push
adc
pop
aad
pop
loopne
sti
pop
rorb
inc
cmp
not
rcrb
mov
sbb
inc
sub
push
inc
push
and
je
xchg
push
lret
pop
lds
mov
into
inc
push
xchg
scas
inc
std
inc
cs
inc
insl
mov
add
sbb
inc
into
stos
clc
mov
or
jmp
dec
jno
and
arpl
inc
outsl
mov
lods
ret
mov
dec
jecxz
es
stos
and
jnp
in
or
jmp
imul
nop
loopne
ljmp
out
loope
popa
mov
js
mov
or
sbb
mov
xchg
and
jecxz
ds
xchg
xchg
test
xor
insb
pop
mov
and
insl
cmp
jp
pop
sbb
arpl
xor
dec
scas
push
and
lods
insb
pushf
sbb
fcompl
jns
inc
in
mov
sbb
push
std
add
stos
mov
scas
sbb
inc
mov
fwait
jnp
and
jae
or
jbe
lods
add
aad
int
mov
iret
inc
movq
cmp
cmp
mov
ds
pushf
dec
inc
adcl
iret
insl
inc
adc
pop
ja
jl
pushf
mov
es
aas
xlat
push
and
add
add
rcll
mov
das
inc
add
pop
rclb
and
in
cmp
cmp
and
inc
mov
sub
ffreep
mov
push
hlt
test
and
sbb
in
pop
clc
adc
add
inc
xchg
scas
jle
mov
not
sbb
mov
jo
fdivr
xor
ret
mov
xor
lds
clc
xor
popf
mov
jp
fiaddl
shrb
add
sbb
and
ds
jle
orb
test
xor
adc
sarb
xlat
rolb
mov
dec
add
add
push
xchg
inc
dec
mov
push
lock
sahf
sahf
arpl
mov
xchg
inc
sbb
or
insb
jne
mov
pushf
mov
pop
outsb
cs
adc
sbb
ds
iret
das
faddl
inc
adc
ss
arpl
in
xchg
bnd
call
xchg
adc
leave
fcmovne
enter
divl
push
or
xchg
and
cmc
int
insb
lret
and
and
cmpsb
xor
test
out
or
out
add
sub
cmp
dec
jb
mov
xchg
mov
cmp
leave
in
adc
add
int3
mov
cmpsb
pop
fmuls
cmp
outsl
dec
mov
mov
cmc
pushf
mov
sbb
int3
pop
jo
pusha
or
in
push
into
fmuls
rcrb
cmpsl
incl
or
jmp
sti
xchg
inc
gs
jle
test
out
mov
mov
dec
jo
in
adc
sbb
rol
scas
xchg
stos
sysenter
inc
xor
pop
loopne
adc
xchg
adc
and
outsb
lds
movsb
in
addr16
push
push
xor
dec
gs
test
mov
cmc
aas
cmp
jo
mov
roll
rcll
daa
int
adc
push
addb
sbb
pop
aas
dec
ja
xor
cmpsb
movsb
stos
mov
jl
addr16
inc
jg
push
mov
fidivl
push
mov
add
adc
lock
add
dec
fiaddl
cld
mov
loopne
xchg
jl
mov
aaa
cmp
pop
movsb
dec
pusha
mov
int
jne
xchg
popf
cwtl
push
fs
adc
es
pop
seto
testl
in
jo
std
adc
cmp
shlb
shrl
fstpl
mov
push
lods
mov
ret
sbb
ret
sub
addr16
and
or
loope
les
pop
jns
divb
daa
and
add
mov
movsl
hlt
jb
pop
lds
repz
dec
inc
mov
popa
jecxz
int
add
aam
jns
filds
imul
mov
add
int3
jb
mov
jae
inc
dec
xor
mov
lock
sbb
adc
mov
aaa
jge
inc
jmp
sbb
and
fisubrl
xchg
xchg
cmp
adc
sub
or
mov
dec
jecxz
lea
sub
adc
xchg
arpl
push
mov
push
scas
push
scas
push
push
test
outsl
and
jns
sub
std
cmp
push
cli
ds
pop
jp
push
ret
sbb
call
popa
cwtl
add
ja
and
mov
push
fimuls
push
in
in
pop
bound
ret
and
stos
or
clc
cmp
push
sbb
and
mov
addr16
pushl
imul
sub
sbb
inc
mov
add
adc
pop
push
in
jmp
push
jle
cmp
lods
adc
cwtl
and
or
inc
data16
in
and
dec
arpl
popa
iret
inc
push
iret
xor
xchg
std
lock
jnp
rorl
popf
and
xor
push
aaa
cmp
push
and
fdivl
cmp
pushf
data16
pop
rorl
mov
sbb
adc
mov
dec
sub
inc
in
inc
lea
bound
xchg
cli
enter
pop
xchg
cwtl
flds
jle
sahf
mov
push
call
xor
pop
ret
call
dec
and
pop
sub
push
pop
and
repz
jecxz
inc
fbld
enter
lret
jno
cmp
mov
add
stc
leave
mov
fisubrl
jbe
rorb
cmp
pusha
xor
jae
mov
mov
nop
and
ret
ret
rcl
aas
lahf
xor
fcoml
lods
out
insl
cltd
icebp
test
mov
and
test
test
jno
call
add
pop
das
add
int
mov
pop
inc
push
repnz
cwtl
flds
insl
xchg
jo
or
and
in
test
push
push
adcl
adc
mov
mov
emms
mov
or
lret
gs
subl
and
sahf
sbb
lods
adc
insb
mov
popf
or
adc
rcr
pop
push
jp
sub
into
js
daa
out
pushf
sbbl
mov
adc
aaa
int3
jmp
pop
and
cltd
repnz
cmpsb
jb
mov
pop
mov
xor
pop
inc
popa
adc
add
adc
mov
fcmovbe
pusha
adc
pop
jo
lahf
dec
fcompl
lock
fmul
outsb
gs
mov
ja
add
push
imul
cmp
cmp
jns
jno
mov
jecxz
lods
in
std
adc
cmp
inc
add
jnp
lods
ficoms
pop
mov
jl
int
adc
mov
adc
jno
jecxz
lea
sbb
jne
test
shrb
rorl
push
sbb
xchg
mov
pop
sbb
fimull
or
notb
cmp
loope
mov
add
mov
ja
xchg
sbb
inc
lock
enter
jp
inc
rclb
adc
mov
push
daa
and
dec
je
jo
mov
aas
mov
adc
dec
jge
ds
jbe
inc
out
sbbb
scas
cmpsb
mov
jl
cmp
and
sub
call
sbb
pop
outsb
pop
dec
nop
cmp
fs
leave
mov
daa
gs
mov
enter
negl
mov
inc
mov
fcmovu
adc
mov
mov
sbb
add
xchg
jmp
mov
gs
and
std
test
lock
movsl
xchg
xchg
in
xchg
in
lea
adc
shlb
aad
rol
rcrl
add
scas
cmpsl
or
fwait
mov
push
and
sti
mov
aaa
add
and
lea
movsl
mov
jno
cmp
adc
iret
jecxz
cmpl
hlt
cmpsb
les
mov
mov
cld
pop
dec
pusha
cmpsb
mov
and
gs
jo
xchg
cltd
add
loop
enter
lods
les
in
dec
ret
sar
icebp
xchg
sub
xor
es
push
adc
push
mov
nop
popf
out
in
fstpt
dec
std
aad
mov
sub
cmp
cwtl
or
js
pop
inc
xchg
aas
cmp
sbb
push
popa
fmull
fdivrp
out
mov
pop
dec
imul
fldt
cmp
pop
and
jmp
out
push
es
pop
insl
daa
popa
xor
push
cmpsb
test
pop
xlat
jae
aam
pop
daa
sub
mov
xor
jbe
cwtl
xchg
push
xor
aad
push
or
je
and
adc
rcll
imul
ljmp
shlb
leave
xchg
and
push
push
jbe
rclb
cmp
or
imul
or
je
lcall
sub
ret
cld
aas
loop
cs
scas
sbb
int
lea
in
lret
das
fiaddl
fisubs
test
cmpsl
pop
push
sbb
stos
lahf
add
aas
or
movsb
dec
xchg
xchg
fstpt
sub
fiaddl
lret
mov
cmpsl
lods
stos
mov
or
mov
aad
add
mov
rol
scas
lock
outsl
mov
neg
js
pop
mov
fs
inc
imul
adc
ret
cs
cmp
dec
orl
cmp
cli
pop
sti
in
sub
sub
push
stos
scas
testb
pusha
inc
adc
ret
xchg
sahf
lods
push
idivb
out
adc
add
mov
jno
sub
rcrl
mov
cmp
add
pop
jmp
int3
cmpsl
cmp
in
inc
sahf
push
mov
push
sub
mov
mov
enter
mov
pop
stc
in
fbstp
sbb
sbb
mov
fwait
push
sub
and
fistpll
cmp
jecxz
lahf
popf
lretw
outsb
mov
pop
pushf
cmp
repnz
pop
pop
pushf
pop
pop
or
sub
inc
adc
pop
fdivs
in
incb
mov
ds
mov
sbb
dec
test
xchg
and
das
icebp
or
or
insb
jns
lcall
arpl
into
popf
pusha
mov
fcoml
roll
and
lds
outsb
lods
mov
movsl
dec
lods
xchg
rclb
outsl
sub
pushf
das
push
jge
ss
pop
cld
xchg
cmp
insb
jbe
pop
je
mov
lds
cld
dec
sbb
rclb
fsub
pop
mov
fldt
mov
sbb
sub
dec
movsb
ss
jo
cmp
movsb
mov
xchg
rcll
jns
loopne
jno
sahf
insb
cmp
out
out
dec
dec
lock
pop
jae
test
xchg
lcall
cli
mov
mov
dec
mov
rcll
sbb
add
cmc
inc
dec
jae
jo
pusha
xchg
test
mov
pop
cli
mov
jo
push
jle
test
mov
sbbb
sbb
movsb
mov
adc
imul
push
xor
sbb
sbb
xchg
mov
jp
repnz
jb
jl
subl
imul
sbb
pop
sub
inc
xchg
insl
xor
lds
push
aam
jg
pop
jecxz
dec
insl
mov
dec
les
jne
loope
pop
cmp
sti
outsl
mov
cs
adc
lods
clc
jp
push
mov
xchg
dec
push
mov
test
mov
mov
mov
adc
addr16
lret
inc
jp
lcall
repz
setbe
xchg
sub
adc
jo
das
dec
enter
sbb
xor
pushf
call
jmp
mov
adc
push
fnsave
mov
loope
mov
pop
xor
jne
jns
mov
fistpl
dec
iret
mov
xchg
xchg
jns
fwait
and
fsubp
xchg
mov
pop
mov
push
int3
ret
cmp
sbb
cmp
and
outsl
mov
sub
add
les
pop
repz
sbb
stos
ljmp
mov
mov
js
cmp
dec
xchg
adc
mov
mov
ret
cmp
xor
jae
lock
jmp
lcall
mov
push
enter
cmp
lahf
imul
mov
sub
sar
subl
cld
sub
pusha
mov
lds
cmc
jbe
js
adc
xchg
adc
mov
mov
and
adc
insb
add
insb
sbb
xor
cmp
arpl
dec
xchg
adc
cli
mov
test
ljmp
das
outsl
cmp
lcall
jmp
push
mov
movsb
push
add
push
imul
ja
inc
cmp
popa
lcall
jne
sar
mov
shll
fld
test
out
mov
rolb
or
sub
mov
lock
enter
add
dec
push
mov
scas
cwtl
add
ljmp
cmpsb
adc
dec
test
xchg
stc
mov
or
pop
inc
or
xchg
pop
cwtl
cmpsb
lock
push
push
cmpsl
outsl
fistpll
rorl
xor
lods
xlat
lods
pop
push
xor
dec
xor
fadds
adc
sub
mulb
inc
add
mov
jecxz
addr16
inc
jne
xchg
adc
arpl
add
mov
mov
outsb
xor
sub
inc
cmc
and
push
rcl
orl
jb
xchg
or
pop
mov
int
sbb
aaa
enter
mov
mov
std
nop
test
dec
popa
mov
adcb
inc
xchg
fst
lock
imul
lret
fwait
and
push
add
in
cwtl
push
test
mov
je
test
loop
cmpsb
sub
out
incl
cs
inc
scas
sub
stos
lahf
movl
es
adc
xchg
lret
es
mov
loopne
in
xchg
mov
add
mov
fsubr
iret
rcl
or
outsb
decl
mov
adc
ja
xlat
adc
or
stc
dec
adc
cvtpi2ps
test
sbb
test
push
stc
jp
stc
push
mov
mov
pop
or
popf
xchg
add
ljmp
adc
dec
out
cmp
mov
xchg
xchg
xlat
sbb
insb
std
pop
das
mov
inc
jecxz
jb
fidivrl
sbb
arpl
jmp
xor
das
xchg
cs
sbb
cmp
outsl
jmp
sahf
pushl
pop
add
dec
lea
mov
pop
jb
and
jmp
mov
mov
inc
xchg
and
and
daa
insb
or
idivb
sti
repz
sub
inc
add
call
xor
sbb
orb
pop
mov
ss
enter
jo
or
aad
fsubrs
stos
add
aam
pusha
jb
bound
lods
ja
out
lret
jmp
inc
mov
cmp
imulb
add
in
aaa
cmp
loope
mov
xchg
movsb
adc
shll
mov
dec
jg
imul
xchg
sub
fcoms
xchg
add
imul
xchg
xorb
push
lahf
aam
pushf
xor
dec
insw
mov
loopne
leave
std
adc
fdivrp
sti
orb
aas
mov
mov
mov
adc
fildl
push
jge
in
pop
mov
inc
inc
adc
outsl
xchg
pop
fldenv
mov
and
ds
adc
loope
dec
add
aam
lds
cmp
jo
pop
mov
std
inc
jno
data16
lahf
xchg
in
mov
in
jbe
sahf
push
shr
call
jmp
inc
cs
or
fidivrs
push
jnp
addr16
mov
roll
or
xor
fisubrl
sbb
push
or
aam
subl
mov
fistps
jb
movsl
es
bound
orb
mov
mov
pop
sahf
mov
xchg
push
popf
andb
andl
andb
popa
inc
repz
stos
mov
cli
mov
cmp
mov
addl
push
jmp
sub
xchg
out
xchg
lahf
loop
xchg
int3
jmp
or
or
jns
dec
fs
rcrb
fwait
dec
pop
xchg
xchg
push
inc
cs
insb
xchg
nop
ss
mov
push
dec
mov
cmp
inc
pushf
xor
xchg
jp
pop
data16
pop
xchg
mov
ja
pop
hlt
insb
loopne
loop
addr16
push
popa
sbb
add
pop
orl
push
cs
or
fsubp
mov
add
xor
dec
scas
scas
xor
ret
push
js
xchg
push
inc
inc
test
cltd
pushf
jb
jnp
imull
outsb
mov
negb
pop
ss
jge
cmp
lahf
xor
pop
movsb
mov
pop
dec
mov
or
pusha
loopne
inc
xor
mov
call
pop
inc
mov
ds
and
dec
lret
jmp
adc
lret
and
cmp
xlat
xchg
inc
xor
inc
data16
leave
sbb
add
test
nop
mov
pop
loopne
sbb
lret
sub
push
cmc
dec
ja
or
loopne
cld
loope
sub
dec
mov
enter
sub
xorb
jg
sub
mov
pop
mov
shl
pop
push
mov
mov
mov
lcall
mov
xadd
into
sub
loopne
add
sbb
pop
sub
and
test
or
in
data16
xor
repnz
push
sbb
scas
in
cmpsb
inc
stc
test
daa
in
rorl
test
mov
loop
pusha
or
bound
scas
xor
aas
scas
addr16
scas
pop
negl
adc
cmp
pop
imul
clc
and
adc
inc
test
dec
idiv
fsubrs
dec
bound
es
cmp
push
lcall
push
movb
or
push
fbld
xchg
ljmp
dec
sbb
mov
mov
test
sahf
mov
aaa
xor
jge
loope
push
xchg
lret
scas
push
out
cltd
iret
out
add
fcom
fsubs
imul
aas
popf
rcll
add
rcrl
inc
insl
jb
aaa
test
inc
sub
movsb
inc
dec
mov
ds
fdiv
or
lret
lcall
outsb
pop
les
shrl
test
jecxz
adc
es
pop
sbb
sbb
cmpsb
faddl
test
adc
pop
sbb
cmp
stos
jae
cmc
xchg
jp
mov
pop
cmc
fidivs
inc
mov
sub
push
lods
jmp
sub
lock
sbb
dec
insb
jle
push
sahf
inc
inc
dec
ds
push
insb
fs
cmp
pop
cli
js
add
arpl
mov
dec
add
pop
jle
push
jp
pop
sahf
xchg
pushf
xor
shrd
mov
pop
leave
call
sbb
ficomps
cltd
popa
popf
mov
mov
imul
push
xchg
cwtl
mov
loope
test
or
shrl
ja
ds
mov
push
or
inc
arpl
inc
lret
les
mov
cmp
mov
pop
xor
cmp
in
sbb
or
shrb
inc
lcall
ja
adc
into
in
pusha
xor
push
das
sub
hlt
out
shrb
ds
xchg
xlat
push
es
into
xlat
inc
cmp
push
sarl
push
jmp
dec
mov
cmp
dec
lret
xchg
xchg
sbb
pop
jg
in
mov
dec
lea
das
rcl
shll
enter
incb
addb
inc
ljmp
push
adc
inc
cld
sbb
xchg
insl
in
enter
mov
insb
sub
dec
sarl
jbe
jns
orl
push
icebp
aas
cld
test
adc
fdivrs
ret
pop
or
xlat
jae
push
inc
sahf
sub
mov
ja
dec
shl
xor
pop
and
subl
test
sti
push
jle
lea
push
sub
pop
in
or
push
mulb
loop
or
cmpsb
xchg
scas
xor
sub
mov
daa
aad
or
jno
cmp
test
scas
ficomps
fwait
add
mov
pop
jmp
or
mov
out
push
mov
fnsave
pusha
pop
mov
jle
aas
cltd
xor
xchg
popf
jbe
fsubrl
fbld
int
pop
hlt
stc
cmp
movsb
xchg
sbb
xor
pop
pop
dec
je
sub
adc
imull
or
cmp
fisttpll
mov
sub
xor
pop
cmp
mov
das
fs
mov
shr
lods
pop
pop
pop
fiadds
sub
sbb
in
dec
mov
ret
push
push
mov
cmpsl
and
jle
sub
sub
in
in
push
jbe
lret
repnz
lods
loopne
popa
aas
lcall
xchg
pop
pop
call
push
daa
xor
jae
cltd
dec
orb
dec
xchg
add
jecxz
in
jns
sbb
xchg
scas
push
jb
insb
sub
inc
repz
stos
mov
xor
xchg
mov
scas
mov
sub
inc
sti
shlb
lret
ror
mov
icebp
cmp
enter
int3
and
pushf
fidivrl
pusha
aad
xlat
xchg
shl
or
insl
xlat
scas
and
addr16
sub
sbb
mov
mov
dec
call
scas
test
addb
sahf
inc
lods
push
mov
push
adc
or
adc
test
sub
andl
mov
fsubrp
inc
out
call
inc
mov
test
sahf
add
or
jl
mov
jle
mov
adc
cltd
dec
xchg
sarb
jbe
mov
inc
adc
call
or
aas
xor
xchg
cmp
push
cmpsl
psrlw
clc
xchg
pop
mov
xchg
adcl
mov
push
lahf
and
push
pop
add
inc
test
mov
jp
in
xchg
adc
std
cmp
sbb
add
add
cmp
add
in
dec
ret
mov
rcr
adc
dec
pop
push
mov
fwait
xchg
inc
pop
dec
rol
test
lcall
adc
push
fwait
daa
mov
fidivl
xor
cmp
pop
dec
cli
mov
jo
gs
fists
dec
aaa
in
fldl
xor
lcall
outsb
push
sahf
decl
push
std
jmp
popf
sbb
add
sahf
dec
push
mov
cmp
mov
push
mov
popf
cmpsb
xor
cmp
xchg
cmc
pop
xor
adc
lods
arpl
xor
cmc
mov
scas
add
out
loop
inc
xorb
mov
shlb
cmpsl
sbb
popf
xchg
arpl
xchg
pop
xchg
lds
fs
lock
outsl
xor
pop
into
jno
mov
jp
fs
pop
fcoml
sub
cmc
add
jmp
lds
out
add
push
aam
jmp
movsb
dec
lock
cmpsb
test
dec
and
jl
xchg
mov
adc
add
add
push
incb
push
popa
stos
lods
and
fstpl
lret
pop
in
pop
je
jecxz
cwtl
arpl
mov
stos
hlt
push
push
mov
jbe
sbb
mov
sti
xchg
stc
popa
push
ret
fiadds
loop
cmp
sbb
dec
add
sbb
mov
subb
fdivs
call
loope
int
jae
repnz
sbb
jbe
mov
cmpsl
sub
int3
xor
sti
mov
in
cmc
ret
mov
lea
cs
mov
xchg
pop
pop
push
pop
push
add
repz
fwait
lock
fs
mov
jnp
inc
lret
stc
inc
sub
aaa
push
cmp
jl
fwait
pop
mov
mov
movsl
sub
shll
ficomps
mov
cmp
jne
push
mov
xchg
jmp
icebp
movsb
pop
push
in
push
dec
loope
scas
enter
nop
js
out
and
stc
fistpll
push
or
into
mov
push
add
mov
sti
cmp
adc
outsb
cmp
mov
orb
sbbb
psubusb
mov
subb
loopne
fsub
cmp
aam
xor
or
jne
and
inc
jp
cmp
mov
or
mov
je
mov
sbb
jae
cmp
and
sub
dec
mov
xchg
bound
mov
es
push
outsl
add
pop
add
pop
and
sub
mov
ljmp
sti
and
cmp
and
mov
inc
rcll
mov
jne
push
dec
inc
js
cmpsb
mov
call
xchg
add
test
pushf
icebp
aam
aas
lods
xchg
rclb
xor
xor
imul
mov
mov
xchg
popf
xlat
pop
popf
sub
stos
mov
daa
imul
mov
mov
and
jge
fildl
dec
or
lcall
stc
arpl
jmp
inc
xor
and
pusha
mov
comiss
cld
pop
leave
out
push
sarb
imul
pop
cmp
and
adc
arpl
jmp
loop
inc
dec
pop
in
pop
scas
push
xchg
loopne
out
aam
outsb
and
mov
repz
pop
imul
int
adc
cli
mov
push
sub
bound
mov
ds
cld
fs
idivl
or
and
popa
inc
jo
movsb
xor
fstl
or
les
sahf
iret
loop
adc
push
mov
add
mov
adc
mulb
jecxz
insl
cmovnp
cmp
dec
jne
sti
inc
pop
out
je
call
jbe
cld
push
imul
jns
inc
lret
inc
or
rorl
sub
sub
xor
lods
add
cmp
js
jmp
dec
pop
popa
jo
push
xchg
dec
leave
xor
cmp
jnp
add
fimull
xchg
and
idivb
adc
ret
mov
adc
xchg
sbb
mov
cwtl
out
and
add
lret
icebp
jmp
imul
and
aas
pusha
aam
add
xchg
lahf
sahf
imul
ret
mov
fldenv
push
arpl
sbb
add
pop
in
jge
lds
setae
loope
lock
mov
leave
enter
sbb
adc
stc
decb
out
push
inc
fs
repnz
stos
dec
mov
jns
out
cmp
sub
mov
xchg
pop
scas
xchg
pop
gs
add
lods
and
inc
test
aad
data16
adc
in
pop
enter
dec
cmp
out
loope
cmpsb
fildl
cmpsl
adc
aam
popa
sub
sbb
fstpl
std
mov
and
loope
out
jne
mov
clc
std
cmpsl
popf
or
enter
insb
xchg
aad
pop
das
pop
jle
cs
stos
cmpsb
xor
lret
dec
sub
mov
pushf
jnp
mov
pop
cwtl
xchg
shlb
push
ja
pop
dec
das
cmpsb
push
sbb
dec
fwait
xchg
mov
lods
sbb
enter
sar
xor
lds
push
cltd
mov
dec
or
shll
mov
lods
pop
in
dec
jl
mov
cmp
xor
push
mov
mov
pop
push
jmp
mov
xchg
sbb
movsl
subl
test
adc
lfs
bound
gs
jae
leave
push
mov
in
xlat
push
xchg
xchg
rclb
jle
push
pop
enter
mov
jle
ret
fsubl
inc
insl
mov
es
mov
mov
pop
rol
push
cmp
rcll
push
jge
mov
dec
pusha
push
hlt
lock
mov
push
mov
adc
inc
push
mov
jno
push
in
cmp
cld
mov
add
push
jo
sub
gs
cmp
lods
mov
add
mov
ja
jbe
mov
mov
dec
or
push
shll
sbb
xchg
icebp
and
pop
in
in
rcl
mov
in
and
cmp
inc
insl
loop
dec
push
push
mov
pop
push
mov
sbb
cli
andb
pop
stos
xor
push
sub
out
fdivs
stc
mov
and
mov
cmp
and
jmp
push
sub
clc
ss
or
int3
dec
imul
subl
stos
loopne
stos
sbb
push
cmpsl
and
stos
std
or
mov
mov
lock
mov
data16
mov
les
dec
cmp
cld
mov
mov
loope
icebp
call
inc
jp
mov
in
lds
sub
jge
in
test
mov
adc
mov
adc
test
scas
jb
pop
push
push
add
aas
mov
mov
push
lods
cmpsl
bound
and
xor
js
std
aaa
stos
xor
sbb
mov
mov
daa
fcmovnb
shrl
sbb
cmp
xchg
iret
aas
mov
pushf
fcoml
pop
mov
mov
fcoms
popf
and
loop
push
into
sbb
ss
nop
adc
mov
jns
adcl
inc
ret
iret
sub
mov
add
mov
jne
jp
fucom
lea
sbb
push
jecxz
les
cmc
jbe
sbb
mov
loop
jle
jae
sub
xlat
adc
movb
xchg
mov
jmp
filds
jb
mov
xlat
mov
cltd
imul
push
or
ja
push
adc
ja
and
pop
mov
jne
bound
hlt
idivl
rol
push
sti
fcom
push
xlat
out
jnp
pop
fisubs
sub
mov
or
xchg
dec
imul
xor
cmc
stos
pop
sti
mov
push
and
in
popa
adc
hlt
xor
mov
fidivl
fiadds
inc
mov
sbb
and
outsl
fisttps
and
jae
pop
jmp
in
sub
jg
fldcw
imul
push
jae
jb
fistps
rcll
fistpl
push
stos
pop
cmpsl
or
addr16
push
inc
mov
fptan
ret
pop
adc
cmp
mov
outsl
sti
xor
out
insl
push
jbe
adc
test
xchg
into
lods
dec
push
jnp
popa
xor
add
clc
pop
pop
inc
mov
popa
cwtl
leave
jb
mov
xchg
push
subb
ss
iret
fs
mov
or
xchg
jp
cmp
stc
mov
jns
jno
adc
imul
mov
lret
sbb
hlt
xor
ficomps
or
popa
and
pop
lds
jmp
shll
mov
dec
orb
sbb
mov
jae
add
jmp
push
dec
dec
rolb
inc
jno
mov
aaa
lds
scas
repz
push
daa
add
clc
xchg
pop
push
mov
mov
addl
xor
pushl
xor
cmpsl
inc
xor
cmc
fisubs
mov
sbbb
clc
jae
cmp
repz
mov
push
outsb
jmp
and
sub
mov
mov
inc
dec
jp
sub
movsb
dec
adc
mov
cmp
call
in
add
popf
test
add
imul
lahf
add
push
mov
cld
jne
or
ret
xchg
pop
pop
add
test
movsb
lods
rclb
jmp
es
jb
push
xlat
cwtl
xor
jp
lods
repnz
test
and
je
sbb
inc
and
cld
test
jecxz
xor
test
shrb
repz
std
sbb
pop
sbb
mov
cmp
fisttpl
jmp
lret
xchg
into
mov
xchg
adc
inc
mov
push
mov
cmp
std
adc
mov
push
adc
jno
fdiv
cmp
in
aaa
or
jns
inc
fildll
adc
aad
xchg
aas
adc
stos
ja
jns
mov
mov
pop
xchg
jge
ds
sti
pop
adc
pop
leave
ret
popa
mov
scas
or
inc
sbb
mov
mov
mov
cmp
ds
or
mov
adc
jg
loope
roll
push
sub
sbb
push
mov
adcl
fldenv
mov
adc
or
cs
or
xor
jne
das
and
adc
push
dec
mov
aam
xor
imul
ja
jecxz
in
jbe
outsl
sub
or
addr16
jb
jbe
pop
in
in
mov
repnz
repz
xor
roll
repz
lahf
add
adc
xchg
sub
jmp
mov
jmp
inc
xchg
sbb
lods
mov
push
dec
mov
test
sbb
jg
jge
insl
mov
dec
mov
idivl
dec
sub
aam
pop
js
xchg
add
or
stos
nop
jnp
out
sub
jge
mov
inc
addb
fsubr
in
mov
adc
inc
dec
loop
xor
xor
adc
sbb
into
sub
cmp
cmp
add
cmpsl
and
fcomps
push
xchg
in
cmp
jnp
jno
fildl
outsb
shll
mov
shlb
decl
fcmovne
xchg
jo
push
lahf
stos
out
out
notb
lcall
sub
jecxz
inc
add
mov
cmp
faddp
aaa
push
push
stos
test
repnz
add
cmp
addr16
or
mov
push
sub
fcmovb
sti
adc
pop
add
stc
loop
cltd
test
xchg
or
lock
outsb
pop
push
scas
push
xor
ja
pushf
mov
sbb
mov
lahf
jno
mov
mov
test
cs
sub
filds
pop
jnp
aaa
push
sbb
add
test
lock
push
ja
mov
jmp
in
jg
xor
sub
mov
xchg
xrelease
aam
popf
sbb
loopne
movsb
sahf
lcall
test
cmp
in
cltd
fmuls
xchg
pop
cmc
loopne
insl
push
pop
mov
and
fnstenv
int
xchg
sbb
out
fstl
mov
and
aam
ljmp
test
sbb
in
mov
mov
xchg
pop
negl
pop
mov
cmp
daa
and
cmp
aas
fmull
fldl
cmc
fdivrl
xchg
or
in
out
push
testb
push
sarl
int
mov
and
xchg
test
mov
mov
nop
mov
xlat
pushf
jno
or
pop
notl
push
push
or
cmp
pop
addr16
push
pop
lahf
shrb
or
mov
lock
fcompl
lcall
out
lret
std
mov
sarb
loopne
ficoms
and
jmp
aaa
pop
notl
xchg
inc
lods
pop
pop
mov
cmp
negl
scas
xor
push
idivb
and
faddl
sub
mov
mov
cld
xor
dec
lcall
sbbb
ret
dec
leave
cmp
jnp
mov
sti
adc
fcmovnb
jae
aas
dec
sub
inc
fmulp
movb
sub
xchg
sbb
pop
adc
sub
fbld
fmull
inc
mov
pop
imul
push
jg
pushf
icebp
repz
mov
adc
icebp
mov
ss
test
mov
outsl
xchg
cmpb
shlb
mov
push
dec
and
jae
pop
je
xor
loopne
lcall
nopl
out
sbb
sub
pop
negl
popf
jp
rcrl
sub
jp
stc
xchg
ljmp
jno
adc
scas
cld
xchg
mov
addr16
mov
ror
pop
jmp
loopne
movsl
shlb
mov
sbb
xchg
push
push
mov
daa
hlt
repz
add
lods
ljmp
jb
mov
rol
pop
xchg
jbe
jne
test
push
jno
add
push
pusha
mov
dec
ss
push
pop
jo
xor
fwait
ret
je
sub
cli
jne
pop
shlb
fbld
jno
mov
jne
cltd
ss
add
jg
adc
jne
ficompl
push
pop
outsb
lods
mov
loopne
out
imul
test
mov
les
pop
add
and
insb
popa
lods
mov
xchg
mov
jbe
mulb
in
push
mov
in
test
test
in
clc
pop
fsubrs
xchg
faddl
add
call
xchg
enter
mov
dec
cmpsl
pop
push
arpl
jle
add
xor
sar
test
and
sbb
fidivrl
hlt
adc
xor
rcrb
sti
ret
dec
cmpsl
mov
data16
pop
cmpsb
or
or
jbe
cltd
dec
pop
fimull
popf
aad
dec
pop
and
cld
in
adc
adc
inc
push
dec
inc
mov
xor
adc
jge
scas
mov
mov
xchg
dec
aaa
xor
clc
push
and
cmpsl
rolb
adcb
pop
mov
out
loope
int
push
leave
imul
dec
cmp
std
xchg
nop
repz
fisubrl
pop
or
jo
jae
sbbl
movsb
in
or
ja
inc
dec
mov
repnz
cld
jle
cmp
xor
shlb
sbb
cli
mov
xchg
js
repz
add
pop
int3
sahf
pop
mov
pusha
add
nop
dec
xor
gs
xor
pop
icebp
fimuls
sbb
adc
pusha
test
sub
and
data16
aas
pusha
cmpl
in
inc
sub
mov
mov
mov
ret
cwtl
push
into
fcoms
and
dec
adc
fidivrs
jle
or
vmread
mov
push
dec
cld
and
mov
js
jbe
cmp
jmp
mov
mov
sub
mov
mov
mov
jg
lods
jnp
mov
hlt
lods
in
ljmp
call
mov
movsl
push
jo
cmp
jge
dec
xchg
cld
mov
aas
cli
xchg
cmp
test
cld
dec
dec
xor
sub
pop
fcmovnbe
mov
lods
out
cli
sub
or
xchg
cmp
and
dec
sub
stos
and
leave
adc
adc
sti
push
cmp
stos
mov
cmp
mov
push
mov
sarl
push
sti
js
dec
jo
adc
data16
js
jecxz
mov
scas
inc
out
push
test
out
rclb
mov
jae
inc
movswl
in
decl
inc
and
out
fnstenv
xor
enter
je
xor
xlat
mov
sub
psubq
and
mov
leave
fistps
xor
ret
pop
or
mov
xor
cli
lret
push
inc
inc
shrb
xchg
data16
add
fistpll
ret
ljmp
jns
jg
insl
and
inc
testl
xlat
mov
scas
inc
sub
xchg
ror
jmp
insl
or
stc
loop
mov
push
dec
mov
dec
testb
mov
imul
sub
arpl
mov
and
stc
inc
into
jle
and
mov
sahf
enter
adc
mov
popa
jp
or
jnp
in
imul
dec
pop
cmc
cltd
adc
inc
test
lret
dec
sub
add
inc
std
cmp
js
insb
mov
scas
movsb
mov
xchg
push
push
mov
in
stos
xchg
in
fs
movsb
push
stos
cwtl
add
mov
lret
iret
push
xchg
dec
cmc
imul
outsb
and
cmpsl
fdiv
movsl
gs
loop
and
or
outsb
aam
xor
sbb
ret
aam
or
inc
std
out
inc
inc
and
fistl
xor
pop
sbb
into
pop
dec
les
mov
adc
cmc
movsb
sahf
icebp
pushl
adc
push
outsb
movsl
mov
fwait
mov
jbe
stos
ret
cmp
test
inc
testl
mov
ds
mov
dec
inc
mov
out
ss
movsb
sti
es
dec
out
xor
cmp
adc
mov
out
fldl
xchg
push
mov
add
imul
stc
sub
jecxz
mov
mov
mov
js
ficoms
in
inc
push
xchg
cmp
or
mov
lret
pop
data16
xchg
xchg
mov
pop
fistpll
sub
mov
out
xchg
jp
mov
popa
adc
clc
cmp
das
pop
pop
mov
ljmp
jne
aas
and
lods
aas
aas
dec
arpl
mov
xchg
inc
xchg
mov
add
sbb
lahf
mov
dec
ljmp
icebp
xchg
lret
dec
cmp
test
imul
xlat
movsb
out
and
loope
and
in
mov
mov
mov
and
inc
xchg
pop
and
sub
push
in
stos
lods
dec
inc
in
minps
jno
jp
mov
stc
stc
sub
adc
mov
mov
movsl
daa
orl
mov
shlb
rorb
xchg
sbb
cmp
stos
hlt
xchg
mov
clc
dec
out
out
rcl
mov
sbb
insl
adc
addb
imul
add
adc
or
fnstsw
cld
aas
push
dec
sbb
arpl
cmp
add
enter
sbb
cmpsl
lds
mov
jle
cmp
push
push
jo
mov
hlt
cmp
push
sub
sarb
sbb
and
aad
fistl
sub
outsb
mov
mov
stos
push
fwait
dec
sbbb
xor
pusha
jecxz
insl
cmpsl
cmpsl
jne
rorb
cltd
notb
test
mov
dec
cmp
outsb
movsb
push
lcall
in
pop
in
pushf
fisubrs
out
mov
fcompl
cmp
mov
sub
testb
jp
in
pusha
call
dec
popf
jbe
popf
cmp
mov
mov
adc
sub
mov
push
jge
push
leave
add
ret
int3
scas
cli
scas
push
xchg
shlb
lods
push
imul
dec
xorb
out
in
ret
outsb
ret
mov
mov
or
fbld
lea
dec
bound
ja
out
idivl
loope
inc
cmp
gs
mov
pop
pop
adc
outsl
in
sbb
pushf
shrl
xor
add
test
sub
outsl
mov
mov
fldl
mov
xor
lods
popa
xchg
push
jmp
or
pusha
mov
fcompl
pop
shll
pop
scas
push
clc
jb
add
pushf
pop
lahf
mov
fistl
repnz
cmp
push
jmp
loop
pop
xchg
jle
xchg
cmp
add
xor
jp
sarl
sbb
aas
icebp
fiadds
lahf
loope
stos
push
and
dec
or
repnz
adcl
push
repnz
sub
addl
or
pop
test
jns
add
mov
or
and
xor
dec
mov
xlat
loope
mov
pop
lds
pop
and
jg
xchg
dec
jne
and
add
dec
daa
jmp
clc
or
repz
xchg
mov
lods
add
mov
jbe
fdivrs
enter
data16
imull
adc
dec
std
aam
shlb
fnstcw
jmp
inc
adc
fwait
or
rclb
stos
hlt
and
or
xor
std
xchg
pop
mov
int
into
inc
cwtl
cmp
cmpsb
aaa
push
add
pop
jle
sub
loope
notb
test
insl
lock
push
cld
jae
clc
add
aaa
bound
fdivrl
mov
roll
sbb
cwtl
nop
jl
les
and
repnz
in
nop
push
enter
loope
ficoml
je
adc
sub
pop
mov
or
lahf
pop
test
jne
sbb
add
pop
and
inc
xor
and
adc
mov
fadds
xor
xor
jecxz
out
std
or
jecxz
addl
and
xor
mov
sbb
shrl
pop
stos
ret
xor
addr16
xchg
and
movsb
out
push
mov
subb
lret
rclb
dec
or
ja
mov
pop
insl
ret
lds
cmp
sub
icebp
add
sub
dec
fstl
xlat
jno
add
dec
js
adc
push
sub
addr16
or
imul
es
add
jno
jp
and
sub
mov
sbb
ds
cmp
mov
in
loopne
push
shl
xchg
cmpb
in
sbb
out
ds
push
stos
sti
cs
adc
xor
jecxz
mov
inc
fstpt
lret
insb
mov
and
jno
mov
xorl
repz
sahf
pusha
dec
xor
out
js
pop
cwtl
mov
mov
jne
dec
push
cld
ficompl
out
inc
popf
pop
lock
incl
pop
push
jmp
cmpl
pop
sbb
push
cmp
sar
fisttps
mov
adc
aas
repz
pop
inc
repnz
inc
and
fldcw
adc
fsts
pop
scas
sub
pop
mov
inc
pop
xchg
xlat
xchg
mov
jae
shlb
sarl
xchg
fistpl
or
rorb
push
sub
push
mov
push
mov
adc
push
dec
mov
pushf
jae
aaa
sti
fbstp
xor
or
ror
xor
sbb
pop
popf
fs
mov
jne
icebp
popf
sub
mov
test
pop
fucomip
lcall
push
xchg
sahf
add
cmpsb
xchg
pop
int3
ficomps
mov
inc
iret
loopne
les
push
push
push
pop
pop
lea
dec
dec
adc
sub
lods
sbb
jnp
mov
push
out
movsl
js,pt
xor
mov
daa
sbb
inc
add
out
js
int3
mov
loopne
push
test
aas
fadds
mov
push
sbb
mov
pop
adc
adc
sbb
sbb
cmp
insl
leave
inc
data16
nop
and
pop
popf
sbb
sub
or
mov
mov
out
mov
cmp
jg
sub
gs
fs
aam
ja
lds
cmp
call
sub
xchg
inc
rolb
mov
or
mov
push
jge
movsb
sub
cld
or
shrb
xchg
iret
fistps
sarl
dec
scas
inc
test
cmpsl
dec
enter
mov
mov
mov
sbb
xchg
mov
pop
or
add
cmpsb
arpl
sub
inc
sub
sub
mov
mov
push
jae
and
jmp
push
push
mov
sub
xchg
dec
xor
push
dec
push
push
or
xchg
adc
cmpsb
jmp
jle
cmp
stos
cmpsb
add
cmp
adc
subb
add
mov
popa
add
arpl
xchg
andb
in
add
add
mov
lods
pop
cwtl
mov
popf
test
fimuls
mov
stos
xchg
cwtl
dec
insl
xor
mov
xchg
fdivl
into
int
orl
insb
stos
add
mov
sar
mov
incl
adcl
inc
push
jnp
cmp
and
js
mov
and
iret
xor
addr16
test
mov
adc
mov
cltd
mov
cld
lret
xor
mov
lock
xchg
mov
imul
xchg
stos
repnz
cs
fisttpl
pop
sub
jg
lret
les
xchg
std
aaa
xchg
xor
outsb
xchg
sbb
xlat
push
fldl
mov
mov
pop
cmp
add
mov
pop
pop
imulb
lock
xor
jnp
inc
dec
inc
popa
jns
jnp
mov
xchg
movb
inc
pop
adcl
roll
enter
and
push
aad
jecxz
sbb
mov
enter
sub
mov
rorl
orb
adc
sub
mov
push
sarl
shlb
jg
stos
adc
or
dec
mov
cld
lock
daa
push
push
in
inc
lret
inc
jmp
xchg
test
inc
std
lock
dec
inc
das
int3
jecxz
adc
mov
pop
sarb
mov
faddl
stos
jle
sti
jge
xchg
lock
outsb
aam
aas
cmp
xchg
ror
or
jbe
xor
add
mov
enter
rolb
stc
icebp
incb
or
cmp
das
insb
dec
or
loopne
or
gs
xlat
sarb
repnz
fldt
iret
fs
dec
inc
cmp
adc
or
mov
add
sbb
das
movsl
int
sbb
lods
and
les
scas
cmc
inc
push
dec
adc
iret
sub
fwait
cld
arpl
and
outsl
pop
dec
hlt
or
jo
lods
mov
push
outsb
in
sbb
sar
std
inc
push
test
sbbb
cmpsl
fmull
add
adc
out
xor
mov
dec
push
dec
sub
pop
push
jne
mov
das
in
ljmp
xchg
inc
mov
icebp
add
in
inc
xchg
push
push
fwait
movsl
test
loopne
ds
and
adc
mov
fldenv
ds
sub
test
jns
jg
mov
jl
sbb
and
sbb
mov
mov
push
lahf
dec
push
push
mov
xor
adc
jo
sub
pusha
adc
cwtl
cmp
cmp
add
fstpt
gs
pop
in
push
pop
mov
xorl
sarb
xorl
test
loope
push
imul
pop
leave
popf
cmc
iret
lea
test
xor
jl
and
rcl
xor
test
jo
mov
lret
ret
into
dec
push
pop
cmp
stos
mov
xchg
xor
adc
lea
cld
movsl
pop
test
movsb
inc
lea
mov
call
icebp
sub
test
std
in
ss
or
scas
cli
jnp
mov
repz
sbb
and
pop
push
popf
loop
test
sub
aas
pop
insb
loop
out
adc
add
lods
ljmp
test
xchg
sub
adc
insl
jnp
jbe
and
xchg
mov
mov
mov
cs
pushf
sbb
mov
pop
mov
movl
inc
or
mov
push
jg
mov
fucom
and
and
pop
lods
ret
jle
or
add
xchg
cwtl
popa
fwait
jecxz
pop
movsl
push
lahf
into
push
push
xchg
sub
inc
xchg
mov
jbe
or
jg
stos
mov
jo
push
stc
push
or
xchg
adc
rorl
pop
js
cmp
fnstsw
push
in
inc
jnp
push
clc
adc
ror
cmp
mov
push
mov
or
and
fs
push
pusha
add
cltd
ret
or
sbb
ret
cmc
insb
mov
in
fwait
daa
push
out
pusha
test
out
push
sub
dec
jo
fimull
mov
les
vpcomq
mov
and
jbe
ret
ret
jne
jbe
ds
sub
imul
push
add
cltd
push
jmp
insb
dec
add
popf
adc
push
pop
das
out
fwait
wrmsr
movsb
aas
outsl
jo
xor
push
sub
cmp
cli
gs
out
ss
push
fs
mov
into
or
out
mov
dec
repnz
cltd
cmp
testl
adc
subb
cmp
jae
sub
cmpsb
ds
popf
push
aas
jne
mov
xor
xlat
test
dec
mov
xor
aaa
xor
cmp
loopne
test
inc
xor
mov
xchg
inc
lods
pusha
jno
dec
int
pop
ds
or
fwait
repnz
cmpl
lret
push
mov
push
jmp
and
xor
out
pop
pop
sbb
data16
loope
stos
push
test
out
push
pusha
pop
out
xor
or
fstpt
sahf
cli
sbb
cs
cwtl
mov
loop
jb
add
lods
add
push
pop
xor
mov
ljmp
xor
xchg
adc
mov
rcr
out
pop
call
and
popf
jae
and
lea
repz
cmp
cs
aaa
fsubrs
ss
loop
lcall
outsl
iret
decl
and
leave
mov
push
insb
mov
lret
hlt
shll
dec
pop
pop
loopne
jb
lds
jle
in
mov
push
dec
daa
or
scas
xchg
fs
jmp
insl
pop
loope
sbb
popa
sbb
sahf
addl
movsl
xchg
cltd
jge
pop
mov
adc
leave
loopne
fiaddl
pop
push
dec
push
push
adc
add
shrl
mov
xchg
mov
cld
jmp
jns
hlt
lea
inc
movsb
pop
cmovno
in
xor
push
ds
dec
mov
sbb
push
data16
add
imul
sahf
push
jnp
movsl
ret
lods
roll
push
adc
scas
add
cmp
push
xchg
ss
lods
xor
clc
mov
adc
test
int3
data16
mov
lock
daa
mov
std
adc
shlb
adc
push
imul
inc
scas
outsl
dec
out
dec
out
lcall
adc
popf
cmc
jne
pop
add
mov
and
aas
sti
adc
data16
inc
lahf
aaa
aas
ret
mov
jg
mov
push
sub
imul
pop
in
rorb
inc
push
mov
push
push
xor
ss
cmp
in
jge
mov
aad
mov
sub
out
push
mov
clc
cmp
jno
adc
pop
cmpsl
add
in
add
dec
movsb
dec
fsubl
decb
cli
cmc
mov
push
arpl
dec
push
or
jg
jbe
in
cmp
icebp
ss
insl
outsl
in
add
inc
sub
testl
shl
xchg
push
add
mov
jno
adc
or
dec
rcl
xchg
jg
cmp
mov
imul
xchg
inc
and
aad
loopne
scas
shlb
std
add
push
cld
popa
dec
insb
pusha
jp
mov
ror
call
mov
in
out
mov
add
xor
mov
mov
adc
rolb
in
inc
jnp
mov
xchg
das
cs
aam
and
jns
xor
cmp
lcall
jp
and
jmp
jnp
mov
add
stc
fbstp
out
adc
test
icebp
hlt
sbb
scas
cmp
test
mov
loope
dec
xchg
pop
jle
xchg
inc
mov
inc
loop
adc
notb
pop
mov
mov
dec
mov
fmulp
sub
inc
push
mov
pop
sub
xor
loope
mov
cmp
sahf
push
rcrl
inc
out
ja
mov
scas
or
mov
lcall
adc
cmp
es
mov
movsl
jae
jbe
inc
xor
test
aad
or
mov
movsl
loopne
adc
mov
pop
dec
jmp
mov
fmull
insb
mov
lcall
test
loope
and
mov
sbb
ret
movsb
out
cmp
imul
cmp
mov
gs
je
sub
cmc
testl
add
nop
rorb
dec
mov
cmp
dec
fisubrl
and
mov
xchg
and
pop
leave
clc
or
cs
mov
sti
dec
nop
jmp
pop
cmpsb
mov
fs
dec
scas
mov
fiaddl
sub
jp
neg
lods
rcll
bound
or
fs
outsl
sbb
hlt
fadds
mov
cmpsb
add
loope
dec
loopne
ret
fiaddl
scas
icebp
dec
fs
test
ljmp
in
cltd
cwtl
popl
cli
data16
or
sub
das
andb
add
jge
test
fstl
fstps
loopne
inc
mov
xor
ss
mov
push
inc
jecxz
dec
mov
ror
stc
inc
jge
mov
pop
adc
xor
push
adc
enter
das
jnp
pushf
cmp
xchg
jbe
add
insb
inc
mov
push
mov
popf
xchg
sub
shlb
test
pushf
fst
pop
sub
xchg
filds
aad
xchg
push
in
adc
push
sbb
mov
push
fcmovne
add
fstl
dec
mov
or
push
cs
adc
fs
std
cmp
or
mov
in
je
sub
addr16
or
loope
xchg
mov
mov
inc
xor
rcll
mov
test
sbb
cld
movsl
fsubrl
aas
and
push
inc
call
inc
fisttpl
lcall
jns
ja
aad
cli
scas
syscall
cs
ds
gs
pushf
shll
dec
mov
cli
mov
sbb
cld
lcall
jecxz
ds
adcl
add
jae
in
inc
pop
lcall
jp
test
xchg
ficoms
cmp
cmp
and
aam
inc
pop
aad
push
jle
cwtl
lret
loopne
mov
ds
add
testl
jne
in
inc
sub
jmp
and
cwtl
cmpsl
and
pop
lods
cs
adc
mov
ljmp
ds
dec
xor
cld
ret
or
fldcw
mov
push
jb
inc
dec
out
adc
rcrl
mov
pop
mov
in
push
push
adc
addb
jmp
movsl
adc
mov
push
mov
aam
xor
sub
test
dec
popf
cmp
ja
mov
inc
das
sub
lods
xchg
mov
pop
dec
or
jmp
push
or
mov
ss
dec
test
pop
dec
mov
inc
mov
ret
adc
or
je
and
arpl
sub
push
lret
fs
popf
rep
adc
cld
jle
and
cmpsb
enter
adc
fnstenv
in
mov
jb
cmp
clc
rcrb
fs
xlat
pop
inc
ljmp
add
popf
mov
mov
jno
inc
push
mov
cmp
cwtl
outsl
je
jg
mov
pop
or
adc
mov
mov
inc
fidivrs
xor
xchg
jns
sub
rol
aam
fmuls
maxps
cmp
icebp
imul
add
mov
outsb
pop
sbb
pop
ljmp
flds
iret
arpl
jmp
cltd
es
xchg
sahf
lahf
jp
outsb
fmuls
sti
or
mov
cmp
sub
or
fsub
ficompl
andl
jg
outsl
jmp
hlt
setl
aaa
lds
sti
aas
je
xor
testb
dec
and
and
and
movsb
clc
mov
cs
jnp
in
or
dec
inc
xor
mov
movsl
pop
fcmove
jge
dec
push
and
aaa
pop
xor
testb
jecxz
pop
jmp
notl
add
xchg
ret
pop
leave
add
mov
mov
cwtl
dec
pop
int
out
gs
push
repz
into
mov
negl
xor
in
loop
int3
jle
ret
lock
dec
pop
mov
jae
sub
stc
xor
es
les
lock
in
sub
jmp
stc
in
push
push
std
push
test
adc
testl
cmp
jmp
insl
fimuls
loopne
jecxz
sti
push
or
adc
out
fs
or
dec
sbb
decb
cmp
in
pop
repnz
jns
fstp
fcoml
pop
sub
add
adc
push
mov
xchg
int3
mov
push
mov
int3
and
test
rorb
mov
gs
data16
pop
sub
outsb
adc
xchg
and
addl
sarl
lret
add
or
sahf
sbb
sbb
cmp
fildll
adc
addr16
dec
lret
mov
mov
cmp
jl
sbb
mov
shrd
cmp
test
aaa
or
dec
stos
or
cmp
in
adc
cmp
hlt
pop
cltd
or
fs
adc
incb
dec
mov
push
push
mov
call
lock
pop
enter
out
call
adc
lods
aam
cmp
inc
jne
inc
add
incb
arpl
inc
or
and
out
push
dec
and
test
mov
mov
std
pushf
insl
jp
mov
lea
lret
cmp
pop
cmc
jnp
mov
or
mov
sub
rcr
pushl
jno
pop
leave
and
enter
jae
push
mov
inc
loope
cmp
mov
lds
popa
cmp
or
pop
cmp
mov
push
and
ljmp
inc
in
add
fidivs
mov
daa
scas
or
cmp
pop
xchg
xchg
dec
inc
fwait
loop
out
test
pop
push
cmp
sub
mov
decb
dec
pop
shrl
push
xchg
inc
ret
daa
cmp
out
mov
xor
shll
inc
cmc
cmp
xor
sbb
jmp
xor
or
push
xor
jl
aaa
inc
in
pcmpeqd
add
outsb
mov
pop
adc
xor
cmp
push
dec
mov
jge
stos
cltd
mov
js
adc
int
test
cld
xor
ror
sbb
dec
xchg
loope
or
bnd
xlat
lock
call
mov
cmp
ss
movaps
ret
xor
sub
sti
mov
data16
cmc
mov
cmpsb
mov
out
mov
cmp
dec
int
mov
push
lret
mov
dec
jae
jmp
inc
or
adc
fidivrs
and
jne
push
inc
dec
pop
add
cmpsb
nop
adc
out
cli
cmc
adc
out
and
inc
hlt
loope
inc
nop
mov
mov
mov
popf
jno
leave
or
mov
adc
push
sub
lods
mov
fnsetpm(287
mov
mov
pop
pushf
cmp
out
scas
scas
movsl
add
add
fisubl
rorl
xor
inc
mov
stc
add
lock
pop
inc
mov
lea
call
repnz
xchg
push
adc
inc
stos
or
cmp
mov
sarl
outsl
stos
out
fucomip
mov
xchg
inc
push
add
adc
cmpb
add
sbb
adc
sub
sbb
popf
cmp
ret
daa
jno
addl
arpl
shlb
fs
sahf
or
xor
call
enter
mov
pop
jmp
mov
push
stos
stc
sbb
scas
adc
inc
mov
push
icebp
adc
in
test
mov
jle
loopne
xor
mov
pop
mov
ja
int3
mov
lods
icebp
jmp
out
in
xchg
lret
inc
mov
pushf
cld
pop
or
push
inc
fisubl
jg
mov
in
cmp
jns
jecxz
sub
ret
mov
stos
adc
pop
xchg
cmp
jno
mov
push
scas
add
in
xor
into
cmc
push
scas
scas
fildll
out
inc
cmp
jae
mov
lods
dec
pop
push
aad
sbb
push
movsb
xchg
addb
lahf
lret
sbb
ja
or
add
movsb
rcl
das
loopne
aas
or
sar
inc
mov
test
adc
push
popf
mov
fdivrl
orb
and
and
or
mov
jl
cli
jae
scas
or
gs
lret
push
mov
inc
out
aad
jle
sbb
xchg
xchg
stos
sbb
and
push
sbb
cmpl
into
sbb
jp
push
jns
cmpsl
cmc
and
push
sbb
seta
cwtl
ja
popa
and
in
aad
mov
sub
xchg
sbbl
test
mov
out
aam
cmp
and
orl
arpl
xor
cli
stos
dec
bnd
lahf
js
int
and
fcompl
sbb
mov
jl
lea
int
adc
xchg
push
dec
les
sbb
pop
repnz
jbe
mov
push
lret
sbb
lcall
sbb
fs
jl
dec
idivl
mov
mov
xchg
stos
xor
les
popf
test
push
pop
shrl
cli
sbb
jp
add
scas
or
and
sub
inc
arpl
incb
cmp
test
push
shrb
inc
fstl
mov
cmp
scas
mov
roll
fmuls
subb
lret
mov
call
insl
mov
das
and
daa
sub
add
das
mov
fwait
mov
aam
mov
pop
fcoms
mov
movsb
daa
xchg
or
sbb
sbb
lret
pop
rorl
jmp
lret
push
fildll
jge
sarb
and
xor
mov
mov
xorl
arpl
jb
pushf
jle
or
decl
dec
bound
pop
or
dec
cmp
orb
pop
mov
inc
dec
cmp
ret
popl
idivl
pop
and
dec
sub
jecxz
cmpsb
not
and
xor
push
push
stc
mov
push
shlb
popa
or
jl
leave
cmpsl
rcrb
inc
add
jmp
jge
lds
shr
sub
jp
mov
pop
xor
jb
push
idivl
faddp
cmpl
sub
push
xchg
and
mov
and
jne
pop
ret
das
pop
mov
test
sub
push
dec
pop
add
xlat
lahf
addr16
add
add
insl
in
mov
imul
xchg
push
and
push
adc
inc
pushf
jb
jo
mov
fnsave
xchg
pop
or
ret
ret
jg
pop
push
gs
cmp
cs
add
sbbb
pop
stos
mov
scas
cmpsb
cmpsl
mov
mov
leave
pop
icebp
imul
icebp
aaa
inc
lcall
pop
lret
clc
mov
je
gs
sub
or
fidivrl
dec
mov
mov
shl
or
sbb
or
cmp
add
stos
lcall
or
or
jbe
shrl
add
aad
mov
pop
mov
xorl
imul
pop
aas
pusha
push
pop
sub
imul
or
pop
inc
cmp
faddl
mov
ss
add
icebp
push
or
xor
dec
sbb
je
icebp
dec
sub
lret
push
cmp
mov
rcll
sbb
xor
lods
pop
inc
repnz
ret
add
into
iret
lods
sbb
pop
pop
push
adc
addr16
jl
ds
lret
lahf
adc
stos
mov
push
sahf
dec
cmp
iret
mov
push
imul
lcall
incl
mov
int3
or
dec
sub
or
out
cli
cmp
jbe
and
add
push
inc
inc
stc
xor
data16
das
and
cld
cmpl
enter
sbb
push
insb
in
lret
xchg
in
scas
mov
out
leave
pop
jne
imul
jecxz
ud1
push
imulb
hlt
or
xor
or
add
mov
inc
outsb
lods
fucomi
push
vmread
push
insl
aad
jg
bound
cwtl
add
cmc
xlat
aam
fwait
mov
pop
sub
cmc
pop
int3
pop
ds
mov
inc
imul
pop
insb
pushf
adc
add
outsl
and
hlt
or
xchg
out
mov
xor
sub
daa
or
in
stos
mov
int
repnz
push
js
jne
jg
mov
sbb
mov
jmp
sub
adc
out
cmp
jg
icebp
lahf
insl
pop
cmp
pop
sbb
mov
dec
xor
lea
cltd
aad
ss
js
mov
mov
mov
adc
add
jbe
xlat
pop
or
jo
stc
call
add
pop
lret
loopne
mov
and
jmp
dec
jecxz
jecxz
dec
fdivl
repnz
adc
fistpll
xchg
push
insb
mov
pop
sti
shrl
arpl
cmpsb
push
addl
push
imul
mov
mov
push
xchg
add
aam
and
sti
data16
cltd
inc
dec
cld
mov
add
adc
fnstsw
iret
pushf
jge
cwtl
dec
or
and
mov
mov
xlat
hlt
push
and
lods
fcmovb
leave
xor
out
lds
lret
mov
jbe
xor
popf
xchg
sti
add
lock
mov
push
stc
push
jae
pop
xchg
push
push
ja
push
icebp
shll
add
and
sub
adc
push
imull
adc
xor
pop
cmp
fldt
fcompl
cmpsl
cmp
sub
cmc
push
or
shlb
rclb
outsb
mov
jbe
push
out
push
sbb
mov
cmp
pop
aaa
xlat
cmp
xlat
jnp
fisttps
jns
popf
xor
fisubs
jno
mov
imull
or
xor
repnz
xlat
inc
out
dec
xchg
jb
push
mov
pop
call
xor
das
test
sbb
fldenv
shll
arpl
and
adc
ljmp
aam
cmp
push
jmp
push
inc
shll
aam
inc
lret
and
sbb
jge
inc
mov
cmpsb
jecxz
pop
mov
xchg
test
or
and
inc
fimull
enter
into
dec
cmp
rclb
daa
pop
ds
mov
in
and
dec
aaa
xor
jmp
adc
ret
dec
lret
movsl
lock
stos
cmpsb
mov
mov
loopne
mov
jl
fbld
int
xchg
cmp
mov
scas
mov
lods
mov
add
mov
in
inc
mov
or
rcll
imul
xchg
int3
fldenv
out
mov
jbe
and
out
inc
test
addl
lods
jmp
push
xor
inc
mov
fs
and
sub
adc
scas
movsl
inc
mov
dec
fdiv
mov
cld
push
pop
divb
push
lock
out
in
adc
jp
mov
sbb
jp
shll
or
dec
aam
dec
inc
stos
test
mov
jnp
inc
ja
xor
xor
shll
sbb
sub
mov
cld
lret
mov
les
inc
roll
scas
negb
inc
jno
out
push
int3
lea
ret
rolb
testb
stc
jp
cmpsl
fwait
scas
push
push
jp
xchg
push
xchg
adc
add
imul
cld
outsb
pushf
pop
jle
sub
arpl
mov
pop
cmp
icebp
ja
test
mov
mov
xor
aam
push
popf
hlt
testl
scas
jg
test
push
popf
cmpb
negl
xchg
sub
push
dec
push
jnp
mov
call
dec
mov
mov
mov
mov
subl
loop
into
adc
or
rcll
mov
mov
lea
adc
or
dec
mov
add
into
shrl
inc
cmp
push
add
adc
mov
push
ficompl
push
out
xchg
add
pushf
jp
push
out
lcall
ljmp
sbbb
or
mov
inc
fistpl
hlt
cltd
xor
or
in
loope
sub
lods
nop
lock
pop
rcll
in
inc
leave
and
cmc
call
dec
cmpsb
push
out
adc
in
xorb
mov
int3
sbbb
dec
and
lret
test
and
mov
xor
lock
push
flds
mov
sub
roll
shll
xchg
scas
ds
repnz
add
int3
addr16
mov
jns
roll
mov
push
movb
push
jge
pop
loop
nop
sub
mov
fidivs
xor
test
sub
jmp
call
push
dec
add
dec
sub
cmpsb
pop
mov
or
dec
scas
xchg
sbb
and
sub
lods
xchg
popf
sub
jae
lock
movsb
test
pop
sbb
repz
push
aad
jno
mov
lret
jno
or
pop
cmp
call
cli
dec
lock
and
mov
inc
scas
loopne
out
daa
mov
add
mov
aam
sub
mov
push
push
jb
imul
call
inc
inc
not
lcall
mov
cmp
lea
insl
jge
sldt
cmpsb
mulb
mov
xchg
mov
lds
xchg
in
add
mov
jmp
addl
je
jg
and
jnp
mov
icebp
jo
jecxz
outsl
lahf
notl
popa
sti
lods
xchg
fcomp
daa
aad
dec
jnp
mov
fildll
sub
fistl
fisubs
fs
aas
bound
cmp
sub
insb
mov
sub
adc
pushf
sbb
push
call
jecxz
inc
std
fildll
std
add
push
nop
dec
lahf
mov
in
stc
xor
popf
pop
and
or
repz
add
insb
cmp
and
or
and
cmp
mov
mov
enter
fistl
cmp
inc
adc
sbb
lea
sub
inc
pop
add
push
out
mov
cmp
cmp
nop
or
xchg
sbb
testb
out
scas
push
mov
adc
aam
xor
shlb
dec
xchg
out
mov
fld
out
xor
outsl
add
push
jno
or
jae
sbb
divps
inc
xor
jne
mov
popa
cmpsb
je
testl
je
aaa
sbb
jbe,pt
pop
scas
lret
xchg
inc
sub
xchg
mov
mov
adc
dec
stos
and
mov
cmpb
xor
sahf
push
mov
stc
mov
lods
out
stos
mov
mov
dec
sub
pop
out
shr
outsb
push
or
sub
int3
hlt
insl
adc
push
mov
mov
fcoml
mov
pop
in
jne
cmp
push
mov
xchg
sarb
sub
mov
sub
insl
mov
xchg
ds
pop
pop
movsl
popf
fcmovnb
enter
mov
cmpsb
jns
out
push
jmp
dec
xchg
push
aaa
outsb
daa
fwait
movsl
sbb
ss
leave
adc
pop
xchg
push
mov
jecxz
inc
mov
fidivrs
in
mov
mov
push
xor
inc
aad
jle
insb
and
popa
inc
cmpsl
in
push
jg
popa
cmp
sbb
or
xchg
imul
mov
pop
sbb
fwait
clc
jne
fisttpl
jle
dec
xchg
lods
push
fcompl
adc
push
pusha
and
stos
mov
popf
mov
int3
loope
mov
cmpsb
addr16
and
dec
repz
dec
push
lret
push
ss
cmp
adc
test
lock
fwait
xor
jae
mov
add
into
jge
testb
insl
adc
pop
cmp
incl
arpl
xchg
in
sbb
ja
loopne
mov
push
mov
loop
aas
adc
cltd
nop
dec
pop
xchg
jl
cmpl
inc
insl
rclb
test
enter
fcmove
popa
out
gs
dec
xlat
push
ret
rclb
jb
arpl
mov
shll
jmp
in
cmpsb
insb
push
lods
test
mov
xorb
int3
add
sub
mov
das
loope
xor
mov
outsl
push
xchg
jmp
adc
imul
mov
cmpsl
adc
roll
fnsave
das
divb
repnz
adc
repz
sahf
mov
jne
xor
xor
bsf
inc
popf
cltd
dec
stc
xor
cmpsl
and
test
push
xchg
clc
loope
xor
xchg
jg
and
cmp
test
loope
mul
dec
xchg
mov
xlat
pop
repnz
mull
pop
push
mov
xor
repz
cwtl
dec
adc
lds
data16
inc
insl
fldcw
lahf
mov
and
fcoml
dec
add
sub
aam
das
mov
test
add
jno
pop
and
xchg
mov
xchg
js
jnp
cmpsb
les
pop
xor
dec
testl
mov
add
in
movb
dec
inc
arpl
mov
xchg
cmpsb
cmpsl
ret
insl
or
loope
in
xor
and
repnz
sub
mov
pop
mov
shlb
das
pop
mov
int3
adc
rclb
and
in
pop
push
jno
pop
mov
mov
adc
outsb
test
jmp
lcall
out
lcall
and
xchg
hlt
out
cmp
addr16
pop
sti
mov
xchg
xchg
push
mov
xchg
jmp
scas
ficomps
stos
lods
fdivrl
and
std
ljmp
jnp
fs
pop
arpl
daa
add
dec
imul
mov
adc
rcrl
xchg
mov
adc
aad
outsb
lahf
mov
push
or
pop
inc
faddp
imul
jp
nop
sub
adc
out
lock
out
mov
mov
lods
inc
jp
shl
subl
out
pop
xchg
in
fstl
inc
rcll
lahf
xchg
cmp
aaa
mov
add
push
lret
push
mov
aaa
in
xchg
jecxz
xor
mov
jns
out
icebp
fildll
rdpmc
dec
mov
jns
sbb
in
mov
arpl
add
pop
fs
jmp
data16
test
and
imul
sub
push
shll
pop
into
mov
sub
in
dec
xlat
inc
fnstcw
xor
pop
pop
or
jo
cmp
and
pusha
sub
test
mov
rol
mov
dec
scas
rorb
js
inc
pop
rorb
add
int
add
imul
mov
dec
adc
mov
jne
lods
ds
movsb
std
mov
dec
or
sbb
es
lods
pop
inc
inc
rcrb
insl
movsl
test
outsl
cmpsb
stos
pop
or
push
or
sub
loope
test
inc
mov
icebp
insb
mov
fldt
mov
cmc
ficomps
ret
mov
push
outsb
or
rorl
inc
mov
data16
in
push
sbb
sub
mov
xchg
push
insb
cmp
jmp
mull
fidivl
aaa
mov
int3
pop
ja
sub
outsb
push
inc
nop
lods
daa
xor
pop
lock
push
jo
push
mov
inc
arpl
fs
pop
adc
mov
xlat
aaa
xchg
iret
dec
syscall
cmp
dec
cmpsl
loop
xor
xlat
mov
cld
cmp
mov
xor
mov
push
push
push
stos
js
into
sub
ja
mov
adc
adc
or
int
mov
jecxz
popa
je
ds
int3
inc
sarb
jbe
lea
add
cmp
aas
inc
add
arpl
mov
nop
adc
std
insl
xchg
pop
push
lods
jecxz
push
push
mov
mov
mov
dec
addr16
mov
xor
adc
in
mov
ret
pop
push
pop
xchg
cmp
lods
aam
inc
lea
dec
ss
xchg
add
enter
adcb
xor
pop
push
bnd
pop
popa
mov
pusha
jno
stos
int3
ret
cwtl
js
xor
stos
test
lods
and
pop
and
fwait
xor
ja
jmp
mov
mov
je
shlb
push
negl
mov
divb
ret
sub
dec
inc
mov
out
adc
add
in
std
pop
push
out
lcall
jns
sarb
push
sbb
push
fwait
lds
mov
or
mov
inc
fcmovnbe
jne
xlat
adc
cmpsb
jge
inc
bound
or
xchg
aad
outsb
add
clc
jo
mov
jne
movsl
push
rcrl
sarl
xor
je
cltd
mov
fisttpl
mov
stos
and
sbb
or
fndisi(8087
lahf
xchg
in
fidivs
int3
dec
out
test
jmp
addb
dec
push
mulb
es
out
sbb
dec
adc
loope
adc
or
pushf
test
mov
xchg
xchg
in
mov
push
dec
repnz
test
int
out
adc
inc
lcall
xchg
push
mov
dec
out
mov
pop
pop
pushf
fildll
xor
outsl
and
xchg
je
lock
in
jmp
rcll
rclb
jmp
cmp
xchg
popf
std
sub
frstor
jb
sbb
das
insl
xchg
xor
mov
inc
dec
inc
subl
push
pop
push
ds
and
pop
push
jb
pop
shll
mov
xor
jge
stos
xor
enter
mov
sub
adc
cwtl
lods
pop
outsb
add
out
pushl
daa
sbb
mov
leave
aas
gs
push
repnz
sti
add
pop
or
ja
and
mov
xchg
adc
xchg
push
mov
jg
mov
lods
xor
inc
mov
inc
std
dec
repnz
imul
or
insb
arpl
sti
add
shrl
stos
int3
jp
push
mov
jns
ret
cli
test
clc
repz
stc
ja
jnp
jae
adc
psubusw
pusha
xor
jge
mov
pop
pop
inc
cmp
xor
rclb
dec
add
mov
or
test
xchg
sahf
xor
xlat
adc
test
das
int3
push
sbb
out
adc
mov
xlat
cmpl
mov
cmp
sbb
lock
sahf
sub
jno
mov
mov
add
jle
cwtl
out
sub
clc
test
lret
pop
leave
add
mov
xchg
por
cmp
mov
lock
cmp
pop
sarb
out
pushf
ds
punpcklbw
lret
sub
ja
mov
pop
sub
push
cmp
pop
jle
xor
int
mov
dec
fdiv
jns
int
dec
cmp
adc
shlb
xchg
sub
int
shlb
jg
push
mov
adcl
outsl
in
sbb
cmp
mov
lcall
jle
push
xchg
inc
push
cli
rclb
test
test
sti
negb
lcall
sub
imull
fisubs
mov
hlt
aad
lock
std
ljmp
rcrl
ja
jo
lret
jecxz
jb
je
inc
sti
or
mov
pop
xor
dec
sbb
test
mov
pop
mov
sahf
arpl
inc
and
jecxz
cli
movsl
xor
fs
push
hlt
ret
xchg
sbb
mov
cmp
jle
cltd
mov
sub
in
fwait
and
sub
inc
jp
push
inc
clc
xor
cld
mov
inc
push
fisttpll
shrl
int
inc
out
jmp
xorb
inc
ret
cmpsb
jmp
js
inc
fnsave
inc
iret
out
out
jmp
hlt
fwait
aas
inc
mov
je
cltd
les
xchg
gs
incb
scas
mov
mov
mov
out
xchg
movsb
fisubs
xchg
sub
aaa
testb
add
push
ds
ds
jno
push
outsl
dec
jb
jle
fs
push
sub
clc
lret
dec
cli
lahf
jno
insl
ficompl
xor
inc
pop
iret
lods
enter
sarl
in
jecxz
lds
dec
jb
aas
out
inc
into
stos
xchg
test
in
std
mov
fsub
out
add
outsl
mov
shlb
push
jne
push
adc
fists
mov
pop
pop
push
clc
pop
sub
clc
sbb
cld
mov
test
xchg
mov
push
and
push
pusha
mov
pop
add
mov
shll
add
std
adc
leave
push
roll
fidivrl
xchg
mov
shll
dec
movsb
fldenv
fsubrs
enter
cli
sbb
push
sbb
mov
dec
cmpsb
inc
or
cltd
ljmp
xor
sbb
xchg
push
xchg
xlat
sub
fnstenv
sub
int
into
mov
sbb
clc
sbb
mov
out
aas
cld
cs
or
push
mov
or
mov
imul
jmp
xchg
cmpsb
fisubrl
dec
std
mov
cmpsb
xchg
shrb
mov
in
in
loope
push
jmp
call
cli
lret
push
pop
add
dec
movsb
sahf
lahf
ljmp
in
aad
xchg
fwait
aam
mov
inc
imul
jle
jo
cs
fs
insb
ss
mov
inc
aas
paddusw
jnp
js
popa
mov
dec
and
sub
rcrl
sbb
je
xchg
enter
xchg
cmp
add
int
aas
ja
mov
pop
push
inc
inc
sub
into
push
or
lcall
addb
pop
pop
int3
insl
in
adc
cld
aaa
aad
pop
daa
mov
jne
fs
cmp
in
ret
mov
inc
xchg
movsl
sub
inc
fs
js
lds
mov
xor
jle
and
js
cld
sub
cs
inc
xchg
ds
imul
jmp
loope
sub
push
lds
pusha
imul
inc
add
in
das
mov
sub
jbe
mov
pushf
push
imul
arpl
int
push
dec
ss
adc
fimuls
lret
ss
pshufw
add
mulb
push
cmpsb
std
add
in
push
inc
or
in
cmp
outsl
divl
rcrb
pop
dec
sarl
mov
std
jmp
fsubrl
daa
int3
mov
sarb
dec
mov
mov
or
adc
jnp
dec
js
jae
clc
xchg
jne
aas
and
sarl
sbb
dec
push
loopne
jns
dec
or
arpl
xlat
loope
ss
bound
iret
bound
sahf
sbb
cmc
xlat
jo
insl
jno
scas
jnp
lret
aaa
xlat
push
iret
add
cmc
mov
shll
push
mov
ss
fdivl
fisttps
test
push
mov
outsl
pop
or
orl
or
enter
sarb
dec
dec
arpl
jnp
dec
mov
divb
out
mov
xor
sar
or
aas
mov
int3
lock
out
fisttpl
xchg
js
movsb
repz
addb
mov
outsb
cmp
std
mov
loopne
rcll
shl
jb
lahf
inc
lret
mov
pushf
lret
jl
popl
in
mov
push
sbb
push
sbb
xchg
xor
xlat
stos
sbb
inc
sub
jecxz
arpl
dec
inc
push
cmp
mov
outsb
fidivrs
or
mov
mov
fucomi
xchg
add
mov
movaps
inc
inc
sahf
pop
imul
mov
test
mov
in
shr
test
shll
test
sbbl
pop
bound
mov
jne
fistpll
cmp
sbb
daa
or
fisubs
cs
inc
sub
add
xchg
sbb
cltd
loop
loope
xor
stc
pop
imul
sarl
push
mov
cmpsb
and
daa
jg
lods
fsubrl
mov
xchg
push
inc
frstor
xor
push
mov
xchg
mov
lcall
mov
cld
cmpsl
push
in
cmpsb
sub
sbb
jl
in
inc
fwait
sbbb
movsl
popl
xchg
movsl
or
mov
or
pop
jl
xchg
mov
cmpsb
in
pop
popa
inc
cli
mov
mov
negb
mov
das
mov
cwtl
outsb
and
mov
aad
inc
sub
cmp
aas
out
xchg
sub
mov
cmpsb
into
pop
jo
xlat
negb
lds
cmp
mov
jmp
fsubs
jnp
mov
pop
fsts
rcrb
mov
pushf
rorl
mov
call
xchg
sbb
ljmp
mov
ret
push
pop
cli
shlb
popa
sbb
arpl
cs
pop
cmp
xchg
rcrb
sbb
jmp
mov
dec
xor
test
and
out
test
dec
push
mov
push
loopne
xorl
das
and
sub
and
mov
loop
lock
popl
push
and
mov
inc
daa
fists
pop
sub
mov
mov
loopne
repnz
lods
push
push
adc
xor
or
cltd
adc
enter
pop
inc
push
out
adc
jo
ss
push
cs
cmp
jo
sarb
iret
mov
stos
test
leave
xchg
roll
shll
repnz
add
pop
imul
out
and
fcoms
js
daa
xor
cmc
out
pop
sbb
push
xchg
or
jp
jno
jecxz
test
test
pop
xor
mov
cmp
imul
lretw
adc
mov
sub
sahf
inc
inc
xchg
add
push
fcompl
pop
out
push
ds
cmp
fldt
sarb
out
mov
test
out
jnp
xlat
add
imul
idivl
xchg
dec
jg
jecxz
or
test
mov
adc
xor
mov
jae
lock
xlat
lock
scas
add
mov
xor
movsl
das
popa
mov
fsubr
xor
lods
inc
clc
push
mov
mov
es
in
shl
add
nop
adc
addb
inc
cmpsb
aad
fwait
mov
cmp
lods
adc
mov
push
push
sbb
sub
xor
and
shll
pop
add
pop
movb
adcb
jno
sub
cmpb
and
mov
das
out
imul
call
jnp
repnz
or
out
pop
jne
mov
out
or
mov
arpl
pop
aaa
push
call
out
jmp
pop
loop
xchg
pusha
sub
imul
xchg
test
mov
inc
cmp
bound
inc
jge
adc
sub
sub
pop
dec
push
jbe
push
sti
mov
pop
lods
ss
test
or
iret
dec
mov
cltd
and
addb
cmp
dec
push
dec
dec
roll
pusha
fcomps
subl
sub
repz
inc
pop
or
dec
in
jb
jg
mov
pop
repz
aaa
xchg
push
add
and
fucomp
cwtl
sub
cli
pop
or
pushf
mov
lret
stos
aad
test
rorb
pop
xchg
aad
ficompl
enter
sub
cli
mov
or
mov
iret
jae
xlat
aas
mov
fldenv
xchg
cmp
stos
mov
outsb
test
mov
stos
xchg
ja
add
js
fisubl
mov
fs
stos
ljmp
ljmp
mov
xor
sbb
and
add
cld
push
cmp
jno
mov
or
add
roll
and
movsb
adc
gs
mov
sub
or
pop
xor
push
mov
cli
fs
pop
cltd
sbb
lock
or
inc
pop
or
dec
push
mov
dec
pop
ror
jmp
adc
mov
divl
cmp
push
mov
push
jb
pop
in
jo
dec
xchg
mov
or
xchg
jge
in
mov
fldt
int3
ja
ljmp
cmp
cmp
out
lcall
das
std
jmp
dec
mov
sahf
in
in
push
push
mov
mov
cmp
arpl
mov
outsb
fbld
or
jmp
out
jmp
mov
xchg
dec
pop
add
add
cld
mov
mov
je
or
xchg
and
outsl
popa
fcoms
dec
aad
jo
xor
jno
inc
test
push
xchg
out
mov
jno
mov
loope
dec
lcall
jns
or
pusha
lcall
into
adcb
xchg
imul
mov
out
aaa
jmp
pop
mov
lods
mov
mov
enter
notl
fdivr
js
sbb
in
adc
call
push
lret
cwtl
nop
cmp
push
xlat
jecxz
dec
jmp
pop
sub
mov
sub
dec
mov
cmc
push
test
jo
mov
xor
test
in
insl
fwait
mov
jl
fiadds
dec
mov
pop
mov
and
push
cmp
and
rcll
jns
jo
movsl
xchg
push
popf
pusha
push
add
inc
jp
mov
sahf
stos
enter
mov
mul
divb
mov
jb
inc
scas
cli
cwtl
push
lods
pop
cmc
cltd
rcrl
shrl
pop
cwtl
loopw
loop
push
sbb
scas
jbe
out
sub
cmpsb
cs
cs
jge
js
out
aas
sbb
mov
cli
dec
repnz
xor
sub
sahf
leave
xor
repnz
fstp
in
sub
fnstenv
aaa
adc
mov
pop
sbb
sub
stos
cmp
sbb
notb
out
adc
xchg
sub
push
pop
mov
imull
cs
ret
mov
lahf
mov
cmp
jne
lret
test
mov
sub
jo
clc
aad
add
jae
xchg
jbe
jno
push
out
shl
inc
in
fidivl
aad
test
push
adc
mov
xchg
mov
aad
scas
mov
lock
aam
jp
xlat
inc
push
push
cmpsl
pop
inc
and
sbb
mov
out
test
fbld
jle
lock
push
movsb
pop
je
cmpb
scas
jno
adc
mov
or
js
and
xchg
cmp
mov
jbe
jno
pop
outsl
pop
dec
test
inc
popa
inc
popf
scas
push
stos
std
mov
enter
dec
dec
jg
hlt
mov
push
pop
adc
mov
mov
into
mov
fwait
mov
pop
dec
loope
jo
xor
push
add
jg
je
xchg
pop
test
mov
dec
leave
mov
jle
jp
leave
dec
in
and
fldpi
scas
aam
mulb
adc
js
mov
xor
dec
aam
add
add
sub
rolb
mov
sahf
sti
fstpt
lods
or
les
insl
push
insl
cmpl
gs
xchg
fisttpll
fldt
fnstenv
pop
adc
fcmovbe
in
push
ficoml
mov
pop
lods
xor
inc
mov
aad
xor
clc
fstl
test
xchg
pop
sbb
inc
repnz
pusha
test
shll
mov
imul
clc
hlt
les
mov
jmp
in
mov
jbe
repnz
sbb
mov
lods
lsl
xchg
xchg
mov
jmp
lcall
enter
out
fcomi
leave
sbb
adc
scas
iret
mov
xor
xchg
and
aas
sbbl
xchg
sub
loope
aam
hlt
or
push
jns
add
roll
sub
add
cmpsl
adc
pop
fmull
jmp
ret
mov
mov
push
cld
cmpsl
dec
outsb
cmp
cmp
dec
mov
cmp
idiv
clc
cld
lcall
das
sbbb
sub
xchg
pushf
fadd
push
xor
push
lcall
mov
lods
les
and
inc
lock
mov
dec
push
mov
add
repnz
jmp
insl
ret
jnp
lret
inc
shrl
sub
xor
sbb
cmp
out
push
lods
in
stos
jns
clc
mov
decl
and
jno
flds
inc
testl
enter
mov
fs
out
cmp
fldcw
inc
sub
inc
push
out
mov
stc
xchg
pusha
out
invd
sbb
test
mov
sub
xor
fcompl
mov
mov
jge
imul
fstpt
enter
cmc
jnp
dec
dec
test
pop
getsec
jb
mov
or
mov
scas
nop
cli
and
mov
call
push
aam
and
pop
sbb
insl
add
cwtl
cs
mov
in
adc
rorl
pop
xchg
adc
and
xchg
cli
insl
iret
inc
lds
and
mov
adc
shr
xor
mov
aad
mov
dec
dec
cmp
movsb
xor
fstps
or
push
into
sarb
repz
mov
movsb
divb
call
bound
mov
jb
xchg
lods
sarl
shr
lss
aas
jno
ljmp
cli
jp
gs
fstps
dec
arpl
sar
fisttpl
inc
and
and
xor
xchg
pop
lret
inc
xor
rorb
roll
fsubrl
int
mov
ret
cli
pop
cmc
lea
adc
adc
dec
jmp
mov
das
add
push
jnp,pn
outsl
js
xchg
test
cmpsb
pop
add
mov
inc
nop
mov
mov
loopne
call
lds
ficompl
mov
push
rcrb
cli
pop
mov
cmc
bswap
in
outsb
scas
inc
push
jmp
enter
in
imul
xor
push
cmp
and
arpl
mov
mov
cwtl
out
or
stc
and
test
idivb
mov
nop
sbb
cmp
arpl
fxtract
add
xchg
iret
cli
leave
jbe
out
or
fisubs
repnz
and
push
sarl
and
push
mov
idiv
xchg
out
jbe
mov
xor
out
adc
out
aad
push
orb
fadd
adc
sbb
cmp
add
sahf
movsl
dec
push
std
dec
fnstenv
out
shrl
jg
js
mov
movsb
mov
loope
lret
in
imul
mov
in
lret
mov
xlat
je
mov
sub
sti
lahf
xor
std
and
pop
push
or
sub
push
out
xchg
outsb
dec
add
test
fldl
push
stc
sbb
call
dec
mov
test
mov
mov
push
clc
sbb
repz
into
stc
mov
xchg
das
add
cmp
test
aaa
outsl
fdivs
mov
pop
in
jmp
and
lock
outsl
dec
loop
xor
sub
mov
adc
jne
mov
ja
scas
push
daa
add
and
xchg
adc
fstl
in
xor
cmp
in
pusha
jge
rolb
aaa
fiaddl
push
out
mov
xor
in
ja
cmpsl
lret
or
mov
and
sbb
push
in
mov
xlat
inc
sbbb
xchg
mov
popf
fistl
push
push
insb
jp
flds
dec
test
es
jmp
lret
cwtl
test
mov
lret
repnz
push
pop
sub
gs
imul
inc
jnp
shrb
or
test
push
js
sbb
loopne
fiaddl
ja
mov
jnp
add
xlat
cld
sub
mov
lahf
arpl
rcll
cmp
adc
and
cs
fsts
fidivrl
int
lock
and
insb
inc
jmp
xor
mov
call
dec
mov
std
pop
lcall
sbb
in
push
sbb
mov
cmp
cmp
aad
mov
lods
push
jns
mov
lret
push
or
mov
mov
mov
push
insb
in
jp
or
stos
and
mov
aas
bound
sahf
or
and
sbb
inc
insb
jbe
bound
out
repnz
loopne
movsb
or
jge
pop
scas
fstl
nop
rcrl
mov
cltd
lret
mov
sbb
int3
inc
sub
ret
inc
outsb
jle
lods
jbe
out
xchg
fldl
push
pop
xchg
jnp
sub
out
loope
add
cmpsl
add
cmp
sbb
mov
call
dec
cmc
mov
jae
sbb
insb
or
in
test
daa
xchg
cli
and
movsb
movsb
popf
inc
lret
xor
fstpt
adc
pop
mov
aad
dec
in
sbb
loop
in
stos
sbb
pop
loopne
sti
sub
cmp
fildl
and
jns
je
jnp
aad
int3
sbb
cld
aaa
hlt
cli
fmuls
cld
movsb
mov
lea
mov
les
sub
lds
and
or
mov
movsb
aam
andl
ds
inc
lret
xchg
sarb
mov
xor
pusha
sbb
adc
ss
cmpsl
iret
xchg
fcomps
out
popf
xchg
call
jle
jecxz
push
and
mov
pop
inc
test
notb
mov
dec
push
fwait
dec
lods
xchg
cmc
cmp
mov
push
jmp
lds
xchg
loop
fs
inc
adc
push
rorl
fisubrl
test
adc
lods
pushf
inc
mov
sub
dec
std
aas
outsl
and
push
out
inc
into
int
sbb
loope
pusha
push
fists
arpl
dec
add
movsl
addr16
call
fstl
fstl
lds
dec
cld
or
outsl
dec
js
inc
sahf
sbb
icebp
push
pop
pop
sub
adc
hlt
mov
out
mov
scas
cwtl
mov
xorl
mov
les
arpl
stos
hlt
mov
jp
inc
aaa
fimull
cmp
in
sti
aad
imul
rcrb
lahf
lods
mov
pop
sub
movsb
jmp
add
mov
stos
movsb
das
push
or
dec
mov
pop
xchg
xor
cmp
cmp
push
sarb
sub
loop
jb
sub
xchg
ret
lea
pop
nop
mov
lret
in
stos
clc
lahf
insb
das
jl
push
cmp
or
adc
xor
jmp
test
nop
hlt
sub
pop
dec
and
daa
jno
jmp
fisubrs
enter
pop
icebp
out
cli
mov
mov
ja
pop
test
add
ja
cli
sbb
popf
loopne
inc
insb
xor
fistl
in
shlb
fcoms
int3
loop
pop
ret
lret
in
scas
sbb
nop
ljmp
or
into
adc
imul
imul
pop
lret
cli
push
test
std
filds
loop
fs
icebp
xchg
dec
or
and
mov
jbe
push
cmp
ret
cmc
cmp
test
sub
icebp
ds
popf
or
sbb
adc
and
mov
jl
test
push
mov
push
adc
in
lahf
mov
in
hlt
pop
push
pop
mov
and
lret
jne
sub
dec
sbb
iret
out
daa
pop
and
mov
clc
xchg
xor
test
xchg
fisubl
dec
js
jle
leave
xchg
test
imul
adc
lea
mov
cmp
or
xor
jb
rcrb
xor
nopl
xchg
pop
leave
dec
test
xlat
pop
push
stos
jo
jmp
loopne
mov
xchg
das
loope
cmpsb
js
popf
test
bnd
and
movsl
outsl
push
je
sub
pop
setno
inc
jge
enter
cmc
enter
stos
dec
mov
sti
rcrb
jae
scas
pushf
ds
pop
test
testb
mov
jle
push
ss
jle
fnsave
cmp
jb
xchg
mov
add
cltd
mov
fwait
mov
loope
cmp
shr
repnz
xchg
cli
jle
leave
int3
out
mull
jmp
ja
mov
ficomps
add
sbb
pop
repnz
cld
inc
mov
xlat
adc
sub
sbb
mov
aad
and
sub
sbb
mov
jo
push
dec
orb
jecxz
sbb
cmp
pop
cltd
subl
out
cwtl
xchg
mov
fsubr
inc
adc
mov
jns
pushf
mov
lea
test
cmp
sub
xrelease
mov
inc
stos
rclb
and
xor
jno
fdivl
in
or
jge
call
mov
adc
mov
sbb
add
jb
imul
push
push
xacquire
sub
shll
bound
imulb
dec
test
cld
or
in
rcrl
sbb
dec
je
pop
xchg
xor
pop
inc
push
insb
inc
into
inc
test
loopne
jg
add
dec
pop
sbb
arpl
imul
mov
xor
adc
xor
xor
pop
pop
sub
mov
push
cmc
dec
push
xor
or
add
popf
inc
cmp
adc
mov
mov
not
adc
out
xor
adc
mov
xor
mov
sti
icebp
ret
testl
mov
rcrb
inc
mov
ds
push
dec
test
fwait
in
lret
inc
mov
bound
out
subb
scas
and
out
out
pop
test
mov
cmpsl
jns
in
popf
out
sub
mov
inc
lods
cwtl
push
sbb
pop
cmp
mov
xchg
xchg
enter
mov
les
xor
pop
mov
or
jl
mov
and
sbb
sub
dec
imul
and
push
pop
mov
xor
imul
cmp
stc
insb
xor
cmp
outsb
cwtd
push
das
adc
mov
and
and
push
xchg
cmp
pop
cmp
int3
add
or
xchg
in
pop
mov
sub
popf
jnp
jle
cmc
xacquire
mov
aaa
loope
pop
mov
arpl
pop
pop
shl
jbe
cmp
fwait
test
jg
loope
jle
repnz
movsb
sub
push
jb
icebp
testl
movsb
xor
pushf
mov
and
xchg
les
repz
fidivrl
stc
in
icebp
stc
lods
jl
lea
mov
push
adc
jnp
je
ljmp
nop
adc
push
sbb
adc
pop
push
xor
jp
xchg
ret
mov
inc
fwait
popf
shlb
jle
loope
push
ret
and
nop
adcl
movsb
or
inc
sti
repz
bound
xor
pop
mov
jmp
inc
inc
pop
rolb
aaa
in
mov
ja
inc
cmc
scas
xor
and
sub
sbb
jge
movl
mov
mov
add
mov
jmp
daa
sub
loope
aas
xor
sub
xchg
mov
add
mov
jmp
lret
cmp
push
inc
and
leave
ret
lods
arpl
ror
aam
out
std
or
xor
roll
lods
cmp
sub
mov
sahf
adc
xchg
push
add
in
or
inc
pop
cld
bound
cwtl
dec
xor
cmpsl
or
lahf
jne
mov
jb
lods
xchg
les
push
lcall
push
mov
int3
scas
mov
or
jmp
sbb
shr
dec
pop
lock
andl
mov
sarl
test
sbb
dec
sub
pop
in
sbb
and
pop
cmc
cmp
jne
mov
add
sbb
sti
jg
in
bound
push
rcrl
lahf
rcr
dec
jg
xchg
push
lcall
mov
jle
and
fildll
sarl
inc
jmp
sub
sbb
ret
xor
add
shrb
mov
fisttps
stos
into
test
ja
stos
dec
pop
dec
mov
or
mov
inc
pop
es
or
sub
xchg
dec
mov
out
inc
mov
ffreep
lahf
out
dec
cmp
insb
xchg
sub
adc
in
jae
xchg
fists
and
add
adc
or
adc
call
enter
xor
add
and
jnp
push
lods
sub
fstpt
repz
xlat
bound
push
pop
bound
out
shl
mov
xchg
in
mov
popf
mov
push
fdivrl
in
mov
cmpb
xorb
inc
jb
fstps
out
pushf
imul
push
aam
in
rorl
adc
orb
push
sbb
adc
loope
ljmp
sub
stc
in
cmp
push
outsl
push
mov
push
adc
and
scas
inc
and
roll
test
aaa
aaa
loope
sub
add
fisubl
lea
add
adc
mov
aaa
push
and
out
aaa
les
repz
ds
mov
divl
jb
into
push
cltd
jnp
popa
and
les
adc
pop
mov
xchg
cmp
inc
enter
les
ljmp
xchg
ja
nop
scas
adc
gs
cmp
push
mov
push
imul
roll
jb
xor
js
mov
mov
hlt
push
ja
loopne
adc
xor
int
daa
xchg
pop
dec
stc
icebp
aam
sbb
nop
movb
mov
movb
std
adc
xor
xchg
and
hlt
or
test
jnp
push
sub
add
int
test
push
arpl
and
test
repz
mov
ret
scas
jmp
lret
xchg
inc
pop
push
or
and
pop
daa
dec
inc
call
ficoml
sub
stc
arpl
fstps
iret
mov
inc
inc
fmuls
jns
fisttpll
cltd
dec
sarb
jne
cmp
xor
sub
push
cmp
push
cltd
xchg
cmpsb
fiadds
inc
cli
testb
frstor
xchg
inc
testl
jmp
xor
jne
das
push
push
xchg
or
add
push
cmp
mov
sub
mov
ds
loopne
sbb
push
pop
cld
and
adc
jo
mov
pop
pop
into
xchg
ja
push
mov
jle
sub
insl
repz
add
lcall
out
xchg
sbb
pusha
call
cmp
cmpsb
cmpsb
xchg
xor
xor
mov
loopne
in
pop
loope
test
cmp
enter
scas
mov
push
dec
call
mulb
cmp
popw
in
push
sub
stc
sbb
xchg
xchg
or
mov
add
imul
imul
lock
daa
or
fildl
xchg
fidivrl
jns
cld
and
lock
jge
cmp
xchg
test
andl
addl
out
mov
out
lahf
or
and
jmp
xchg
adc
cli
ret
pop
cmp
and
enter
mov
js
and
jb
mov
add
sub
xor
xchg
mov
cmp
lds
rolb
sub
dec
scas
mov
pop
add
pop
sub
and
mov
mov
lcall
and
addr16
aas
nop
fistpll
fcompl
sbb
jnp
packssdw
in
stc
enter
push
push
jbe
stos
mov
sbbb
repnz
je
aaa
pusha
adc
jg
dec
aad
inc
call
fistl
pushf
add
fscale
pushf
and
test
out
xor
cmc
dec
and
adc
fsubrp
pop
mov
cmp
add
xor
add
pop
sbb
mov
ljmp
lods
lods
mov
out
or
push
icebp
dec
fs
out
ret
mov
lret
lods
insl
xchg
mov
xchg
and
pop
adc
das
jmp
sub
jo
and
pop
pop
mov
aaa
lcall
push
jge
dec
test
pushf
xor
dec
fwait
mov
inc
dec
imul
or
or
cmp
lea
fwait
sbb
push
push
movsb
in
mov
icebp
in
adc
mov
mov
fistpll
mov
or
add
int
scas
std
aam
mov
push
mov
into
and
iret
imull
leave
jbe
and
mov
or
imul
add
bnd
pop
leave
jle
or
cmp
sbb
test
cli
movsb
mov
mov
ja
cmpsb
sbbb
cltd
push
sbb
inc
fstl
int3
mov
xchg
imul
inc
imul
adc
add
fsubs
and
sbb
ret
xor
lret
jmp
mov
pop
mov
ja
pop
es
add
mov
sahf
imul
xchg
jnp
xchg
push
inc
push
enter
xchg
xchg
jp
jg
dec
and
xchg
jae
mov
and
cmp
xchg
mov
lcall
test
dec
sub
mov
div
insl
sti
xchg
mov
add
inc
push
stos
movsl
loopne
outsl
mov
xor
inc
in
dec
imulb
jne
mov
scas
adc
ja
cmpsl
or
adc
mov
test
jmp
mov
repnz
mov
das
das
lods
mov
xchg
loope
dec
sbb
xor
or
push
mov
arpl
inc
das
in
jnp
andl
mov
inc
mov
enter
stos
xchg
jo
icebp
mov
lcall
pop
test
or
dec
sbb
sbb
pop
or
mov
in
adc
mov
add
mov
loope
fbld
or
adc
lock
mov
push
xchg
xlat
sub
or
sbb
push
pop
push
aad
or
sub
je
pop
cmp
cs
jecxz
loope
xchg
add
lret
das
stos
xchg
push
int3
fbstp
pop
push
pop
js
stc
sbb
popa
mov
mov
push
mov
or
pop
mov
mov
repz
cmc
jb
stos
fcoml
orl
test
cmpb
es
out
aad
mov
sbb
push
les
out
jb
jg
leave
dec
dec
push
cmc
mov
inc
mov
push
push
mov
push
xchg
in
cmp
adc
popf
mov
sbb
ret
rcl
lret
stos
xor
push
insb
enter
jg
pop
sbb
pop
loop
aaa
or
and
cmp
dec
fnstenv
xchg
aas
jge
sbb
sahf
and
nop
dec
or
ljmp
hlt
and
or
outsl
imul
cwtl
sarl
fcmovu
stos
sbbl
mov
mov
movsl
mov
jns
mov
inc
mov
divl
dec
mov
mov
nop
pop
scas
lods
push
imul
pop
mov
inc
jp
loopne
pop
xor
repz
cmp
and
iret
jecxz
call
mov
and
les
jnp
hlt
shll
pop
add
sti
adc
aam
movsl
fisttps
sub
adc
adc
enter
fcoms
jnp
in
into
push
bound
lahf
sti
repnz
lret
push
mov
ret
xchg
lea
dec
jnp
stc
movsl
jge
fcomps
pop
into
mov
cmpsb
sahf
outsl
cmp
push
pop
adc
iret
adc
jge
out
popf
icebp
lods
popa
lea
push
test
jb
neg
jg
imul
mov
stos
mov
sahf
loop
jmp
sub
pushf
adc
add
xchg
test
push
ficoml
in
fbld
test
cmp
cltd
int3
js
ja
push
xchg
xchg
mov
jb
imul
in
enter
pop
xor
jl
inc
mov
xor
add
xchg
cmpsb
and
pop
or
outsl
adcl
popf
mov
and
pusha
mov
mov
pop
lea
push
xchg
and
pop
pop
sub
jl
dec
orb
cmpsb
clc
gs
dec
dec
add
push
cmpsl
mov
mulb
insb
hlt
cmp
jae
fcom
aam
push
cli
mov
rcrb
jmp
inc
std
filds
adc
sub
push
gs
pop
or
stc
mov
jne
gs
je
jecxz
pop
daa
lret
mov
clc
in
gs
pop
add
jp
inc
js
push
mov
or
add
xor
inc
mov
jb
jne
out
cmp
popf
add
stos
js
pop
xor
addb
inc
out
sub
call
mov
lds
ficoms
jns
push
icebp
loop
mov
sahf
inc
insl
or
cmp
sub
arpl
push
xchg
dec
sub
mov
sbb
push
ds
mov
popl
dec
jae
inc
movsl
cmpsb
dec
mov
ljmp
repnz
mov
out
sbb
lcall
shlb
push
test
outsl
cmp
jmp
shrl
push
mov
mov
xchg
mov
loope
pop
pop
icebp
push
fdiv
lea
mov
cmpsl
in
outsl
fcompl
or
aaa
push
push
loope
push
pushf
add
cmpsl
jp
icebp
imul
mov
mov
cld
inc
ljmp
and
orb
xor
flds
cli
ja
icebp
mov
cwtl
or
or
add
mov
repz
jle
out
jnp
dec
fld
js
insl
jno
sbb
in
jae
js
or
cmc
pop
push
and
lds
adc
popf
push
or
jge
incl
xor
iret
mov
ljmp
sub
ficoml
aas
test
xchg
push
inc
inc
loopne
cmpsb
clc
popa
aaa
adc
mov
outsl
jb
jno
addr16
sbb
popf
sub
scas
test
out
out
inc
mov
jae
pop
fstpl
pop
lods
dec
adc
imul
mov
daa
dec
cmpsb
jge
inc
lahf
call
cmpsl
cli
repnz
push
mov
lret
and
decb
imul
or
jb
ret
out
sbbl
mov
pop
sbbl
push
jo
dec
adc
mov
push
loope
dec
fimull
cmp
jne
push
xchg
out
sbbl
es
sub
iret
aad
in
fwait
js
pop
cld
cwtl
xlat
mov
push
xor
out
push
fldt
hlt
inc
popa
mov
pop
add
enter
mov
je
out
shll
jp
scas
sbb
inc
cmpsl
jge
pop
fsubr
mov
js
sub
fidivl
push
lods
ljmp
xor
aam
mov
xchg
xchg
rcll
sbb
and
push
mull
js
loop
ret
sbb
push
xchg
subl
mov
push
inc
sub
jae
or
loope
test
rolb
push
dec
icebp
mov
xchg
dec
jl
int
pop
sub
pop
pop
dec
mov
pop
ret
xor
jno
loopne
add
sub
xchg
xor
repnz
fwait
sbb
mov
add
sbb
pop
inc
fidivs
in
sub
clc
std
bound
adc
dec
mov
sub
mov
xchg
test
lcall
mov
or
inc
cmpsb
add
fsts
dec
data16
cmc
xchg
mov
mov
sub
rcrb
out
pop
or
jbe
mov
xchg
testl
ds
cs
jo
cmp
int3
push
clc
add
arpl
jo
dec
xchg
cmp
sub
add
out
in
mov
adc
pop
dec
jl
cmp
jbe
inc
sbb
sbb
insl
call
inc
sbbb
add
mov
test
pop
aad
ret
fwait
cmp
mov
rcrl
icebp
in
test
jo
repnz
fiadds
jo
sub
pop
fisttpll
add
lea
mov
loopne
or
in
sbb
xchg
mov
fmuls
or
mov
insb
sub
push
cmc
xchg
jge
cmc
and
dec
mov
imul
je
sub
cmpl
mov
xor
cmp
mov
adc
mov
nop
pop
ja
fdivs
xor
loope
and
lret
mov
xchg
mov
jbe
std
sub
mov
pop
enter
jmp
pop
jns,pt
inc
subl
sbb
call
fdivs
out
cmp
and
enter
inc
out
pop
dec
lock
into
dec
dec
pop
dec
repnz
stc
shlb
fstpl
mov
stc
mov
int
icebp
jecxz
xchg
fsubrl
sub
je
rcl
or
xchg
mov
mov
mov
cmc
mov
mov
and
pop
jle
sub
sub
jge
cwtl
and
inc
enter
mov
adcb
pop
pop
cmpsl
jo
mov
pushf
mov
jno
jb
push
insb
push
testb
and
test
lret
testb
sub
inc
enter
cmp
sub
ficoml
sub
in
fimuls
fdivr
pop
xor
dec
jae
in
fnstcw
mov
jle
loop
mov
cs
xlat
cmpsl
xchg
pushf
mov
jbe
int3
inc
adc
lods
mov
mov
or
jl
mov
jecxz
and
jge
add
dec
cmp
notl
mov
xor
pop
lds
mov
stc
in
in
xorb
jge
movsb
jle
orl
mov
fildl
aas
ljmp
inc
cld
insb
push
mov
push
push
lret
shlb
scas
pusha
aad
inc
adc
mov
pushf
push
testl
xchg
ss
dec
rcrb
xchg
test
add
adc
add
subl
xchg
cmpsl
xchg
push
sbb
mov
rolb
mov
dec
gs
cs
sbb
in
rolb
sub
aad
and
insl
popf
movsl
outsl
idivl
bound
sbb
xchg
mov
imul
clc
fistl
dec
fisubs
cmpsb
inc
test
xor
imul
sbb
aam
mov
loope
add
add
test
push
cltd
sbb
insl
out
pop
stos
mov
out
popa
stos
add
xchg
jb
fwait
jp
xor
xchg
push
adc
add
sbb
add
and
fcmovnbe
xchg
addb
dec
or
pusha
iret
insl
dec
sahf
push
cmp
cld
xchg
cmc
aaa
vcomisd
or
cli
xchg
aaa
sbb
lcall
mov
add
adc
ss
push
in
outsb
pop
cmpsl
mov
jnp
stos
jp
mov
sub
in
je
in
out
repnz
in
or
in
fbstp
js
xchg
test
stos
mov
push
lods
or
lahf
sbb
out
pop
xchg
jecxz
dec
sbb
call
test
jmp
lock
mov
fidivs
repz
rcll
xchg
mov
push
or
jae
jno
shlb
xchg
in
xchg
or
lret
mov
imulb
das
out
cmp
and
sti
push
popa
xor
xchg
dec
sub
bound
lcall
subb
ja
sub
dec
sbb
or
mov
jmp
adc
clc
shlb
jmp
outsl
adc
inc
add
jecxz
jnp
rol
scas
and
movsb
mov
jecxz
je
mov
inc
ja
lgs
popa
sarl
xor
mov
mov
nop
imul
frstor
cmpsb
mov
mov
test
xor
push
push
jl
ds
in
mov
pop
jp
orb
lods
xchg
add
rolb
sbb
daa
das
jl
add
mov
enter
inc
pop
in
push
xchg
cltd
lods
cmpsb
out
loop
sub
jmp
hlt
es
and
dec
jno
daa
cmp
mov
cmp
pop
stos
mov
aam
js
add
add
idivb
int
pop
jb
ljmp
mov
jge
pop
pop
leave
popf
and
fistl
popa
cmp
adc
scas
and
sbb
pop
cld
loop
test
cs
cmp
push
inc
push
or
mov
mov
push
mov
and
out
xlat
xchg
cltd
pop
cmpb
fwait
push
mov
ret
insl
inc
dec
cwtl
rcr
push
movsl
sub
int3
mov
movsb
sbb
filds
and
or
pop
xor
adc
in
pusha
cmp
mov
out
mov
sbb
pop
dec
stos
aad
and
push
ss
xor
rorb
insl
xor
dec
cmp
lods
out
int
xor
push
fs
imul
sub
fstp
dec
adc
push
sti
into
les
adc
dec
push
push
pop
mov
mov
mov
nop
cmp
push
mov
cmp
movsl
pop
loope
fsubrs
loop
dec
cmp
in
pop
mov
and
jp
popf
xor
push
and
or
inc
mov
mov
mov
iret
lret
xchg
aas
sarl
icebp
jmp
repz
dec
addl
push
and
dec
mov
sub
mov
dec
inc
insb
mov
jno
arpl
std
cld
sub
into
inc
jns
pop
cs
lock
sub
cmp
std
add
dec
or
js
xchg
add
dec
jmp
out
dec
stc
pop
mov
movl
mov
aaa
xchg
test
orb
jg
faddl
push
mov
aas
cwtl
icebp
mov
call
adc
inc
fcom
fmulp
lods
cmp
mov
sti
repz
adc
adc
out
sbb
push
jg,pt
sbb
js
sbb
loope
mov
dec
cwtl
dec
jl
mov
add
push
xchg
jecxz
inc
dec
jmp
adcb
testl
mov
adc
ljmp
inc
dec
hlt
cs
inc
popa
js
call
or
mov
cmp
data16
pusha
sbb
cmpsl
mov
pavgb
inc
dec
ret
cmc
sahf
arpl
mov
sbb
movd
pop
outsb
xchg
push
add
shl
andb
mov
insl
fdivrs
fmull
xor
sbb
test
aad
add
cpuid
cmp
xchg
cmp
mov
inc
pop
enter
loop
test
aas
add
shrl
dec
in
jnp
jg
in
dec
or
leave
shlb
add
lea
mov
ljmp
les
out
sub
pushl
mov
pop
ret
jno
and
fwait
ljmp
inc
cli
mov
xchg
scas
mov
sbb
push
xchg
inc
sbb
or
push
sub
jl
xchg
ret
int
pop
adc
push
sbb
inc
cmp
mov
ss
das
cmp
jno
xor
cmp
inc
icebp
lcall
xchg
shll
shl
lahf
sub
push
loop
cli
fsubrs
inc
pop
jb
sahf
inc
addb
ret
sub
mov
ret
mov
add
ss
ffreep
aad
pop
in
mov
in
adc
add
dec
and
adc
pop
mov
jnp
lock
add
stos
pop
mov
adc
lahf
sahf
dec
xor
jbe
lcall
xchg
addr16
int3
mov
or
and
das
fnstcw
inc
xchg
rcrl
push
enter
sbbb
dec
adc
test
cmp
jp
add
popf
lds
mov
out
inc
jl
cmpsb
adc
mov
insl
fisttpl
dec
out
inc
icebp
mov
push
sub
pop
leavew
jecxz
xor
mov
jno
in
mov
loop
popa
data16
fldcw
js
jae
movsb
inc
mov
jecxz
fwait
je,pt
mov
push
movsb
jbe
daa
dec
lret
dec
xor
xchg
out
inc
insb
bound
pop
sub
add
mov
es
cli
jnp
push
xchg
mov
popa
stos
mov
rcrb
ja
mov
imul
push
push
cwtl
int3
add
call
push
pop
ret
xor
adc
cs
nop
push
or
cmp
les
sub
inc
mov
lret
xorl
fisubs
and
shlb
jo
inc
sti
cmp
sbb
xchg
pop
sub
std
sub
mov
addr16
shll
outsb
jbe
fidivrs
inc
fsts
mov
pop
add
nop
push
or
int3
test
pop
push
jmp
stc
movsb
and
sbb
rcl
or
gs
movsb
or
jnp
cmc
mov
int
xchg
ljmp
jp
push
sub
js
movsb
sbb
xchg
shrb
cmpsb
adc
and
ss
push
mov
jp
jae
sbb
sbbb
sbb
pusha
pushf
pop
xchg
sbb
lcall
inc
fldt
or
push
pop
adc
pop
mov
push
das
clc
xor
and
rol
stos
add
test
clc
mov
daa
jno
mov
loop
call
and
xchg
lock
and
je
inc
jecxz
pop
scas
mov
mov
cltd
pop
out
jno
xchg
xchg
push
sti
xor
outsl
pusha
mov
mov
xor
jne
out
aas
imul
inc
movsb
mov
cmp
aam
mov
imul
adc
jg
dec
in
out
jne
jno
cmpsb
sub
sarb
iret
add
mov
outsl
mov
adc
subl
xchg
xchg
scas
pop
shlb
in
mov
inc
add
fisubs
andl
icebp
add
pop
mov
pop
inc
mov
xor
fidivrl
adcl
xchg
pop
pop
jns
adc
leave
subb
fisubrl
es
insl
out
leave
mov
int3
mov
add
push
int3
shl
incl
xor
ljmp
testb
popf
inc
jmp
push
mov
xor
cmp
sti
adc
xor
cmp
adc
ja
cld
in
fsubp
jo
pusha
mov
rorb
subb
push
movsb
lret
jmp
scas
test
test
xor
xchg
inc
aas
fisubrs
push
popa
fbld
fcmovnu
sub
insl
inc
xor
scas
enter
aas
or
lret
jl
adc
add
xor
leave
push
clc
hlt
dec
dec
nop
cmp
cmpsl
sub
sub
push
rorl
and
das
pop
mov
icebp
jmp
jmp
rclb
in
cmpsl
jecxz
cs
insb
cmp
nop
in
lret
add
inc
mov
mov
push
cmc
cld
jp
arpl
arpl
or
in
mov
addl
test
test
daa
aaa
cmp
fdivrp
scas
dec
cs
cmp
xlat
push
hlt
lods
adc
shll
leave
adc
push
mov
cmpsb
lods
dec
dec
xchg
jecxz
in
push
in
xor
iret
or
cld
xchg
andb
mov
pop
pushf
add
cwtl
pop
adc
or
popf
jae
dec
add
ficompl
cmp
inc
sub
push
clc
imul
fisttpl
roll
aaa
inc
dec
test
xchg
jmp
jge
jg
push
and
inc
cmp
inc
ds
shlb
loope
jmp
cmp
push
add
add
sbb
and
xor
jbe
dec
fwait
mov
aam
test
loopne
sbb
clc
fldenv
push
pop
int3
nop
push
lcall
pop
jle
mov
xchg
fbstp
inc
dec
testb
sub
adc
inc
add
out
rcll
dec
push
mov
outsb
add
or
fmull
leave
cmp
sub
mov
adc
mov
es
sbb
int
add
aaa
aad
xchg
pop
clc
jo
dec
xor
mov
pop
xlat
clc
jae
pop
scas
sti
arpl
ds
mov
imul
mov
and
sarb
jg
int
int3
fcmovnb
out
ja
push
lret
sbb
sub
sub
sub
fisttpl
lock
ss
or
loop
xor
and
sti
out
adc
push
add
dec
inc
mov
fnsave
mov
dec
loope
push
push
je
call
cld
pop
js
jnp
out
mov
cmpsb
dec
sub
and
cmp
lds
mulb
std
lods
and
fwait
or
ficomps
pop
or
stos
out
cmp
cmpsl
mov
call
mov
jne
shll
pop
jge
int
sbb
push
std
ret
cmp
xchg
jl
add
enter
xchg
jle
outsb
cmp
jle
mov
and
stc
in
ret
icebp
hlt
es
mov
xor
neg
or
shl
cs
inc
fxch
into
inc
dec
and
and
jl
mov
cmpsl
sahf
out
flds
xchg
int3
sub
push
in
pushf
mov
into
das
mov
ret
lcall
pop
adc
sbb
pop
lds
cld
flds
jp
add
hlt
jmp
and
mov
mov
sbb
mov
mov
jle
pop
pop
stos
xlat
int
mov
pusha
aaa
fld
inc
leave
cli
and
sbb
xchg
jae
pop
push
xor
add
push
sbb
test
and
sahf
icebp
inc
mov
mov
call
in
mov
or
mov
inc
pop
add
xchg
dec
mov
mov
mov
enter
adc
add
outsl
insb
ficomps
xchg
sbb
push
jno
xchg
push
and
dec
push
cmp
jle
cmp
push
xchg
inc
jns
and
sub
mov
pop
scas
mov
call
addl
xchg
xchg
into
jg
jne
mov
cmp
fcmovb
sbb
push
fwait
pop
clc
dec
adc
insl
add
inc
jnp
outsl
cld
adc
and
adc
cs
mov
ja
dec
pop
pushf
lock
addr16
or
lcall
xchg
xor
bound
sti
mov
push
jmp
inc
pop
pop
test
add
iret
outsl
loop
pop
inc
jmp
xor
repz
sub
call
in
pop
inc
sbb
mov
mov
out
xor
push
out
data16
lods
subb
shlb
outsl
stos
fnstcw
mov
adc
shlb
and
sbb
push
lock
fwait
push
pop
leave
stc
sbb
mov
jecxz
sbb
sbb
dec
sahf
jbe
ja
out
inc
arpl
nop
add
sbb
jmp
jb
add
pop
dec
adc
inc
pop
int3
pop
data16
loop
mov
rcll
pop
sahf
pushf
lods
sahf
and
dec
scas
cld
in
dec
stos
sbb
jmp
or
push
dec
and
sub
xchg
popa
into
clc
mov
jg
pop
push
and
xchg
ficoms
call
addr16
pcmpeqb
and
fcoms
outsb
aam
xchg
lcall
std
adc
sti
scas
fs
pushf
bound
xchg
stc
loopne
jl
xchg
and
int3
cltd
xchg
fldl
dec
mov
inc
sub
add
mov
rcll
imul
adc
loopne
jne
les
movsl
mov
ds
sarb
sub
push
insl
loope
mov
pop
mov
push
jb
adc
mov
call
roll
cmpsl
enter
inc
pop
test
add
es
mov
cmpsb
push
out
xchg
xchg
mov
cmp
cmp
dec
xchg
add
dec
mov
mov
inc
gs
nop
push
lds
cmp
push
lahf
mov
fisttps
cmc
and
ret
xor
fadd
lods
inc
fnstenv
into
in
push
jecxz
bound
cmp
movsl
adc
into
pop
lcall
cwtl
cmc
pop
or
mov
jnp
loope
push
xchg
sahf
cmp
insb
mov
or
lcall
cmc
iret
push
rcrb
mov
negl
mov
stos
xchg
mov
adc
loope
gs
lods
jp
andb
dec
xchg
mov
adc
stc
std
jo
js
adc
imul
jge
addr16
sub
mov
out
test
mov
dec
repnz
das
dec
jmp
xchg
mov
adc
lret
testb
mov
cs
mov
xor
push
sbb
loopne
je
mov
add
push
jne
inc
int
dec
es
jmp
pop
js
roll
popf
addb
movsl
test
arpl
add
test
insb
xchg
inc
pop
cmp
roll
adc
inc
xlat
lock
jle
dec
mov
xchg
xlat
fsts
es
mov
mov
inc
clc
push
scas
dec
cmp
push
jle
push
cmpsl
test
cli
call
ret
icebp
lods
jno
rcr
int3
das
xchg
push
xor
push
or
aam
or
dec
les
imul
mov
lret
adcl
outsb
xchg
ja
data16
fcomi
test
out
fcmove
add
inc
loope
xor
in
gs
sbb
addb
sbbb
push
xchg
and
int
mov
xchg
add
sbb
shrl
mov
dec
test
addr16
int
jge
in
loope
lcall
ljmp
fstps
adc
cmp
push
hlt
mull
jecxz
rolb
and
or
sbb
pop
vdivpd
imul
ds
movsl
inc
mov
dec
xrelease
scas
stc
mov
test
pusha
xor
and
mov
in
or
cmp
inc
xchg
data16
popf
cs
aaa
add
lock
xchg
mov
in
xor
and
or
pop
add
les
mov
lods
cwtl
xchg
out
cmpsb
aas
lea
mov
sub
movsl
rcrl
std
stos
iret
pop
addr16
mov
jo
sub
and
mov
mov
in
fneni(8087
daa
mov
hlt
adcb
dec
es
pop
push
pushf
mov
rorb
fs
lret
or
sub
iret
cmp
jae
rorl
inc
in
cli
push
mov
sub
lea
dec
repnz
mov
cs
loop
jo
aam
or
and
icebp
pop
adc
or
pop
sub
xlat
and
jno
outsb
inc
jo
ja
add
sbb
add
add
lock
adc
push
add
gs
mov
cmpsb
jae
cmpsb
xor
addl
lods
sbb
cmp
add
dec
xchg
dec
inc
xlat
sbb
rcll
and
cmpsl
and
mov
jb
mov
out
and
ljmp
dec
outsl
cmp
lahf
cmpsb
sub
add
jl
cld
lods
clc
lds
lock
adc
clc
stos
mov
ss
out
ror
mov
lds
mov
adc
jl
ret
repnz
and
les
jmp
rcll
sbb
push
pop
add
push
imul
cli
daa
mov
mov
fstl
mov
idiv
mov
xor
push
adcl
xor
outsl
xchg
dec
jns
xchg
push
addr16
jb
pusha
repnz
popa
mov
cmp
mov
lods
cltd
xor
sbb
decl
jmp
lods
inc
lods
outsl
and
fadds
imul
xor
xorb
filds
mov
push
jecxz
sahf
sbb
jp
rcrl
into
sahf
fstl
add
out
fwait
sti
jmp
mov
ds
jo
or
cmp
sub
adc
mov
jnp
gs
mov
and
inc
pop
das
clc
dec
in
lods
sbb
pop
cmp
fcmove
or
out
pop
inc
add
or
sub
addr16
je
add
fld
fsub
jae
bound
pusha
ja
mov
rorb
pusha
cmp
lea
popf
inc
shlb
les
loopne
outsb
mov
adc
jb
pop
sbb
add
inc
movsl
rcrb
fiaddl
rep
jge
adc
or
call
divl
adc
push
outsb
xor
fistps
push
fdivl
gs
cmc
sbb
dec
fwait
dec
inc
sub
cld
push
or
mov
jle
idivb
rorb
adc
mov
dec
mov
ja
testl
and
dec
jmp
in
lret
int
adc
sti
and
push
mov
dec
pop
add
pop
leave
cmp
xchg
pop
call
sub
adc
add
mov
cli
xor
push
ss
add
jl
mov
mov
xchg
push
xchg
out
test
and
sub
lret
mov
mov
mov
pop
mov
outsl
jae
lea
sub
jmp
loopne
pop
lock
ljmp
add
adc
jo
sbb
cmpsl
leave
sbb
arpl
insl
pop
fnclex
or
xchg
pop
inc
xchg
in
dec
or
sub
fscale
cwtl
sub
mov
or
mov
faddl
nop
xor
jb
pop
mov
pop
popa
mov
xchg
dec
jl
xchg
dec
cmc
push
mov
cld
fwait
jmp
adc
pop
or
in
je
in
adc
jmp
imul
sub
js
add
or
mov
lea
or
daa
mov
jbe
mov
mov
outsl
xchg
ss
sahf
xchg
imul
mov
mov
pop
fistpll
popa
xlat
cmc
dec
xor
mov
xlat
pop
stc
xor
daa
dec
iret
jae
sbb
pop
pop
push
std
lret
iret
dec
cli
jne
lock
mov
icebp
ja
arpl
popa
push
push
push
aad
mov
bound
nop
les
insl
push
adc
add
jbe
fnsave
push
sub
mov
leave
push
push
sbb
es
in
fstenv
sub
mov
jp
nop
stos
leave
int
sub
mov
sub
movsl
repnz
pop
dec
lods
xchg
scas
call
adc
mov
in
notb
subl
jns
and
repz
mov
pop
test
jg
push
out
pushf
notb
mov
repz
mov
mov
cltd
sub
fisubl
pop
jmp
stos
fsubl
and
pop
test
cltd
or
je
xchg
jns
test
test
mov
clc
out
sub
call
clc
into
cltd
jbe
mov
ficoms
ss
lahf
fld1
je
mov
push
clc
inc
sbb
jge
in
mov
loop
int3
adc
push
icebp
stos
adcl
or
push
in
cmc
mov
jb
insb
nop
cwtl
cmp
cmp
or
enter
testl
xchg
lods
popl
add
jo
sbb
mov
out
cmpsb
int3
xchg
xor
nop
cmc
jmp
mov
andl
in
sbb
jb
insl
mov
or
insb
pop
mov
jg
sbb
data16
mov
das
in
xlat
fbld
and
imul
jmp
bound
mov
xchg
pushf
dec
push
daa
inc
xchg
jb
les
out
jecxz
xor
lret
add
aas
lahf
unpcklps
mov
mov
add
fildl
mov
jl
andb
adc
pop
shrl
fdiv
mov
nop
adc
cmp
dec
dec
jnp
sub
and
cmp
fistpll
inc
adc
out
mov
jge
ljmp
mov
out
popa
sub
sbb
mov
sub
scas
dec
stc
arpl
mov
clc
sahf
loopne
out
cwtl
xchg
sub
andl
sub
or
xchg
xchg
sub
push
movl
loop
add
pop
and
xchg
mov
or
jmp
fidivs
push
mov
in
out
data16
mov
pop
sbb
movsb
lret
xchg
rcll
xchg
fidivrs
lret
adc
xchg
xchg
lock
cli
addr16
fimuls
adc
xchg
jae
fld
dec
outsb
scas
mov
decb
xor
arpl
or
push
push
insl
and
fnsave
pop
push
out
iret
nop
sbb
sub
cld
pop
xchg
cmp
add
pop
mov
fidivl
cmc
popa
sub
or
add
jbe
stos
das
data16
fdivs
push
popa
stos
test
fdivrs
testl
pop
pop
cmp
shrl
icebp
into
scas
add
push
aaa
mov
mov
and
cmp
rolb
pusha
jbe
js
push
pop
subb
icebp
fldl
das
mov
scas
lahf
ss
lahf
jo
mov
sbb
popf
jg
outsl
push
add
je
cmp
test
dec
loope
jno
stos
inc
jbe
and
pop
jge
mov
dec
adc
pop
or
adc
stos
pop
xor
in
lock
pop
pop
jnp
pusha
or
or
sub
sub
sbb
out
xchg
js
das
inc
cs
pushf
jae
ss
rclb
scas
in
adc
jecxz
lcall
push
lret
sbb
sub
mov
int
lret
fcompl
fs
ficompl
lahf
sahf
outsl
mov
cld
lret
lret
xor
mov
mov
lret
cmp
notb
jo
jae
lea
jle
nop
push
cmpl
push
and
inc
mov
movsb
and
or
mov
xchg
ja
cmc
fcmovnb
and
test
test
mov
mov
fistpl
js
bnd
scas
testb
ja
out
imul
sub
xchg
dec
js
xchg
xor
cmp
push
aam
repz
mov
das
pop
imul
xor
sub
mov
jmp
cltd
inc
fsubp
mov
repz
subb
or
add
in
cltd
and
out
adc
lret
add
int
test
mov
outsl
test
test
sub
aam
xor
xchg
outsl
cli
lea
or
daa
out
loopne
dec
mov
mov
ss
dec
out
add
in
and
and
pop
lret
push
test
cmp
push
in
inc
add
test
out
cmc
jecxz
and
push
pop
xor
mov
daa
shll
daa
pop
imul
dec
sub
sbb
push
inc
in
mov
sbb
int3
popa
pop
ret
subb
rcl
test
out
xchg
pop
mov
dec
imull
adc
scas
mov
xchg
repz
pop
ret
mov
fsts
popa
mov
rclb
jnp
inc
inc
fdecstp
cmp
imul
xor
in
xchg
ss
data16
xor
adc
int3
rcll
adc
mov
ret
add
xlat
xchg
repnz
xchg
mov
mov
mov
mov
sahf
sbb
ret
popl
add
push
pop
pop
dec
mov
aas
scas
out
mov
pop
mov
jno
movsb
iret
dec
mov
cmp
or
inc
lds
mov
dec
add
and
inc
fisttps
or
jae
adc
mov
jns
mov
pop
mov
xor
test
insb
pop
xor
adc
fcomi
ret
dec
xor
cmp
sbb
inc
and
or
in
fidivrs
scas
or
jns
sub
jno
pop
ja
outsl
xchg
mov
andb
jge
cmp
imul
ret
xor
jmp
jg
jmp
idivb
xor
and
and
mov
adc
movsb
push
ror
add
stc
int3
loope
repnz
cmc
daa
pop
fucomi
xchg
add
jno
jecxz
pop
mov
push
and
js
mov
enter
or
insl
xchg
xor
or
int3
mov
mov
and
xchg
movsb
sbb
imul
fisubs
in
pop
lods
cld
mov
fsubrs
fsubs
dec
sbb
out
lds
jle
jl
call
jmp
pop
xchg
arpl
loope
les
daa
jle
push
push
das
enter
loopne
mov
jle
xor
je
leave
sub
sub
out
roll
adc
jae
sbb
push
adc
xor
fidivrs
and
nop
pop
dec
mov
scas
mov
inc
cmp
cmp
gs
pushf
add
rcll
push
aaa
sbb
xor
cmpsb
out
fs
das
repnz
xchg
outsl
jecxz
sbb
outsl
sbb
xlat
jnp
int3
out
sub
fs
loope
fidivrs
adcl
pusha
inc
xor
into
sub
pop
inc
pop
add
mov
imul
repnz
sub
lcall
sbb
ss
mov
rcrb
test
mov
fcoms
scas
movsl
adc
sbb
gs
in
js
sbb
jno
mov
sbbb
and
pusha
imul
xor
les
push
sbb
mov
test
and
int
sbb
fcmovne
lds
mov
and
flds
lods
cmp
push
cli
aam
xlat
sub
xlat
sahf
shl
repz
imul
or
inc
inc
andl
adc
sub
test
cmp
and
addl
repz
sub
mov
xchg
mov
mov
dec
lcall
add
nop
jg
enter
or
xchg
mov
jmp
or
adc
daa
adc
jns
out
add
sub
inc
cmpsb
sub
sti
insb
jne
fdivrl
shll
jmp
sbb
xchg
and
stc
mov
test
mov
sti
fwait
add
stc
cmp
mov
add
shll
mov
repz
rcrb
out
enter
and
pop
sub
in
dec
arpl
mov
xor
in
test
popa
add
inc
cmp
pop
stos
sub
iret
mov
std
pop
js
xor
lcall
lret
jmp
fwait
cmp
inc
and
adc
mov
push
push
divb
addb
imul
pop
mov
loop
add
sbb
xchg
dec
outsb
cld
dec
add
mov
cltd
and
arpl
sub
cmp
cltd
push
push
cmp
out
rorb
jno
inc
dec
pop
ljmp
xor
push
icebp
mov
fmuls
xchg
jo
adc
repz
inc
jecxz
push
mov
pusha
daa
lret
or
gs
lods
inc
push
aam
mov
shll
loope
mov
dec
lods
data16
adc
iret
jbe
sbb
jmp
cwtl
pop
mov
sub
insb
jae
movsl
mov
and
popa
xchg
push
cld
xor
xchg
flds
movsl
fstpt
mov
dec
inc
stos
mov
push
sub
in
fldenv
or
movsl
add
fcoms
call
test
inc
js
mov
push
jno
arpl
inc
adc
mov
iret
insl
push
inc
jp
loope
jns
test
add
lods
dec
mov
gs
mov
sbb
rolb
out
xchg
adc
outsl
jae
xchg
dec
cwtl
fidivrs
outsl
pop
add
cmp
ret
cs
shr
fisttpll
xchg
sub
sbb
adc
xchg
pop
push
add
ljmp
pop
adc
shll
cli
add
out
iret
and
fbld
jbe
les
jecxz
out
sahf
add
ret
xchg
fidivrs
xor
andl
push
mov
jle
xchg
and
mov
jp
rcl
rol
xor
sbb
sti
data16
enter
loope
leave
adcb
dec
or
and
imul
cmp
jbe
aam
cmpsl
mov
jmp
ja
sub
ja
cs
mov
sub
lods
mov
inc
jecxz
ljmp
cmc
adc
adc
add
outsb
out
fstl
lds
pop
add
lcall
lds
cmp
insb
and
stc
mov
mov
sbb
popa
rorl
out
jge
push
lcall
or
cli
imul
and
das
inc
xchg
or
xchg
gs
dec
imul
mov
stos
jbe
push
fs
fldenv
cmp
sbb
ja
mov
add
rolb
into
sub
push
inc
adc
cmpsl
jle
loop
sub
int
lock
adcb
imul
inc
pop
js
fdivr
fst
push
adc
aaa
mov
inc
fcoms
imul
push
and
jecxz
stos
mov
inc
inc
inc
lods
add
dec
hlt
testb
stos
mov
push
hlt
pop
pop
inc
scas
pop
xchg
xor
call
adcl
jle
divl
dec
jmp
addl
lret
adc
sub
xchg
ja
pop
jp
dec
lret
mov
stos
or
dec
loop
xchg
mov
movsb
mov
divl
cmp
nop
xchg
jo
dec
daa
push
cmp
cmp
and
in
mov
lock
cmp
imul
xchg
xor
jp
mov
and
pop
rcrl
imul
sub
shrb
adc
filds
mov
sahf
enter
xchg
in
scas
mov
pushf
xchg
fdivr
sti
mov
and
jecxz
lods
sub
stos
fisubl
stos
push
cmp
stc
outsb
xchg
pop
jle
xor
inc
dec
add
mov
xchg
repz
inc
pop
shlb
cli
daa
add
cs
lret
push
lret
push
pop
and
sti
mov
js
and
inc
daa
sub
ret
mov
test
movsl
ljmp
sbb
pop
mov
adc
lret
xchg
aam
stos
jmp
or
movb
dec
loope
fcomp
inc
jg
lret
rcll
jmp
and
pop
xchg
pop
cmpsb
clc
clc
testl
ss
jbe
xchg
pop
pop
aad
std
lock
scas
jno,pt
lods
iret
sub
adc
fdivrl
rolb
xor
js
loopne
das
cmp
pop
or
mov
test
mov
in
pop
inc
daa
enter
ja
fnsave
xchg
xchg
mov
inc
push
lds
jge
xchg
add
add
hlt
cmp
jns
repnz
mov
lret
stos
pop
cld
add
mov
jle
or
xchg
jmp
stos
pop
test
jg
aam
xchg
inc
dec
cwtl
inc
xchg
push
lret
repnz
clc
shrb
push
test
mov
jo
stos
insb
inc
out
mov
adc
mov
xchg
jbe
cmp
cmpsl
mov
jo
add
sbb
nop
push
cmp
les
cmc
xchg
enter
xor
pop
sbb
sarb
mov
aam
dec
jge
iret
iret
sub
cmp
adc
mov
sbb
mov
or
cs
jae
dec
inc
jle
andb
sbb
jne
inc
add
inc
sti
push
loopne
xlat
and
daa
inc
pusha
sbb
cmpsl
lods
mov
mov
pop
fdivrs
into
and
ret
add
aas
in
mov
ds
outsb
insb
and
inc
pop
fistpl
add
sahf
repz
mov
insl
test
fistps
sti
or
mov
or
rorb
ja
jg
js
ljmp
in
mov
mov
lret
test
frstor
ret
fucomp
and
enter
or
out
xchg
ja
sti
out
xchg
pop
out
hlt
stos
pop
dec
lcall
xchg
insb
push
xchg
jo
or
pop
cli
push
jecxz
test
stos
xchg
jo
stc
jno
mov
cmp
popa
sarb
jmp
jmp
pop
mov
lock
loopne
leave
push
lds
sub
push
xchg
xor
sbb
dec
fimull
lock
xchg
out
stos
sub
in
pop
in
jle
fcoms
xchg
push
inc
mov
lds
in
popa
ljmp
inc
mov
xor
push
xor
jb
cmp
lods
cmc
cmc
sub
and
inc
mov
push
popf
mov
jne
cwtl
outsb
jae
mov
add
enter
cld
aaa
and
add
inc
fstpl
sub
jge
iret
fdivs
mov
pop
pop
push
pop
mov
mov
pop
fidivrs
jmp
xchg
inc
cltd
inc
faddl
cmp
and
cmp
ss
rcll
loopne
call
sbb
xchg
enter
dec
mov
and
adc
jp
aam
fisubrl
push
mov
imul
lods
movsb
insl
imul
xchg
notb
in
mov
xchg
inc
mov
jmp
push
push
pop
xor
xorl
pop
xchg
cmp
adc
mov
or
fistps
sub
sub
pusha
das
sarb
add
in
iret
lahf
mov
fistl
cmc
inc
pop
mov
fsubrs
mov
stos
push
mov
icebp
pop
push
adc
xchg
mov
subl
dec
pop
sub
inc
cmp
fsqrt
sub
sbb
test
gs
stc
dec
jne
hlt
jbe
adc
ds
lahf
les
pop
fs
and
xchg
jbe
icebp
xchg
push
cld
es
sbb
pop
orb
jmp
mov
mov
jae
mov
or
push
fsubrs
lcall
xor
jmp
dec
stc
test
dec
test
pop
cli
push
daa
out
out
xchg
ljmpw
rcll
mov
test
ja
das
lahf
ljmp
mov
clc
aad
adc
inc
out
out
iret
inc
lea
imul
es
pop
sub
pop
pushf
mov
jmp
mov
push
test
and
std
or
mov
and
iret
stos
mov
roll
roll
pop
scas
lods
xchg
ja
mov
add
xchg
inc
xor
into
shll
mov
or
in
jl
mov
stos
cmp
push
adc
xor
or
or
aaa
decb
enter
pop
aaa
push
roll
dec
lods
xchg
mov
jnp
iret
ljmp
repnz
and
xor
out
mov
imul
mov
push
shrb
je
and
movsl
loope
leave
xchg
xchg
or
js
ret
inc
fcompl
inc
xor
cmp
xchg
dec
inc
push
test
test
pop
cli
xchg
ljmp
out
mov
cmp
adc
cmp
add
cmp
and
call
sahf
add
cmp
pop
pop
sub
daa
and
inc
hlt
das
xor
add
out
ljmp
dec
xor
cmpsb
xchg
add
pop
stos
clc
push
jge
add
and
mov
dec
sub
pop
fwait
cmc
nop
adc
repnz
stos
sub
xlat
ds
mov
mov
and
arpl
and
andl
inc
cmp
lahf
lock
in
cmp
jne
cli
fbstp
inc
test
ret
stc
xor
loope
cmpl
fwait
push
and
andb
and
push
and
add
in
xchg
or
pop
adc
xchg
mov
sbb
inc
and
jg
inc
adc
or
mov
aaa
cmc
mov
insl
xor
inc
sbb
fisubs
pop
xlat
push
cmp
cmpsb
push
fldl
sbb
pop
sahf
lods
push
movsl
mov
dec
out
mov
shrl
shl
inc
ljmp
push
mov
sbb
jle
push
jp
addb
ljmp
stos
xor
adc
xchg
sub
sbb
mov
stc
mov
inc
dec
int3
mov
xchg
test
push
jp
sub
fld
add
ret
lret
lea
push
inc
push
sbb
nop
fs
cld
das
ret
rol
outsb
push
pop
jbe
mov
inc
xchg
mov
xchg
cwtl
cltd
int3
loope
cmp
inc
test
out
cmc
and
jnp
lds
adcl
dec
gs
inc
mov
sub
xchg
xlat
daa
cmp
popf
push
cmpsl
test
jecxz
jp
cmp
and
leave
hlt
test
movsl
js
xor
clc
mov
mov
cmp
stc
mov
jge
cmpsb
jns
xor
out
mov
inc
add
mov
mov
test
xchg
addr16
and
ja
adc
fbld
cwtl
aam
faddp
ljmp
add
loopne
inc
jg
aad
and
xchg
fsubrl
rolb
repnz
cmpsb
repz
cmp
fistpl
je
inc
pop
or
mov
jae
and
rorl
mov
sub
mov
fs
and
out
push
pushf
adc
push
sub
inc
aas
jle
scas
sti
jne
mov
imul
nop
or
jbe
mov
push
push
icebp
mov
mov
adc
pusha
das
dec
dec
addl
mov
pop
add
hlt
xchg
lahf
scas
rcl
mov
out
sbb
dec
mov
and
shll
les
adc
jb
lods
inc
and
sub
enter
rclb
movsb
mov
add
aam
xor
lahf
enter
jg
adc
jecxz
lds
add
mov
mov
add
scas
es
mov
and
push
xchg
jns
mov
jo
testb
lahf
insl
push
test
xor
insb
imul
inc
test
aam
inc
popf
mov
inc
adc
mov
jg
push
idivl
daa
pop
inc
rcll
push
mov
test
pop
inc
mov
or
inc
push
push
cmp
stos
pop
mov
pop
aam
adc
dec
pop
lahf
dec
test
clc
or
sbb
addb
jne
xchg
mov
psubw
sub
aam
xor
mov
rolb
cli
xchg
push
or
dec
cmp
ljmp
insb
mov
xchg
arpl
sub
xor
loop
shr
fstpt
xchg
pop
xchg
mov
call
adc
adc
jae
pusha
sbb
xchg
divb
xchg
outsb
in
out
das
dec
mov
divl
imul
pop
sbb
aad
adc
sub
jecxz
adc
sti
insb
cld
or
lcall
mov
inc
clc
mov
orl
jmp
mov
or
xchg
push
pop
mov
ljmp
cmp
cli
mov
loop
scas
lea
dec
arpl
lret
push
ss
sub
ret
je
fistps
sar
inc
inc
cld
add
ja
xchg
mov
sbb
xchg
pop
clc
mov
mov
jnp
mov
int3
gs
jns
outsl
bound
inc
fwait
pop
ja,pt
outsl
xorl
mov
stos
xchg
outsl
jle
movsl
mov
outsb
mov
mov
sub
jge
fs
add
outsl
in
test
shrb
insl
inc
iret
aam
xor
and
les
jns
stos
clc
xor
mov
aas
mov
cltd
and
lock
hlt
inc
lods
jns
add
inc
je
mov
jns
popl
rorl
adc
fs
mov
std
pop
es
cmp
xor
dec
sbb
push
vcmpps
imulb
mov
jp
insl
aaa
mov
dec
cmp
jne
repnz
mov
xchg
mov
orb
das
jle
bound
xor
fs
lahf
mull
fwait
cli
adc
or
lods
pop
add
out
jp
push
js
frstor
or
ret
mov
repnz
scas
ds
xchg
sbb
inc
mov
push
inc
fcomp
cmc
jae
pushf
sbb
pop
leave
icebp
lea
clc
in
dec
inc
enter
inc
adc
add
inc
in
mov
mov
cmp
mov
mov
loope
adc
lea
push
dec
andl
cli
lcall
jecxz
mov
jns
cltd
push
add
sbb
xor
dec
mov
push
je
popf
cmc
jp
pop
aas
mov
insb
ds
cmp
test
into
enter
hlt
push
sbb
hlt
into
pop
push
and
xor
inc
xor
cltd
jnp
lock
cli
mov
mov
pop
inc
jnp
insb
lret
movsl
pop
mov
sub
ljmp
sub
insl
sbb
xchg
inc
adc
sbb
bound
testb
and
mov
out
ud2
pop
nop
sub
lods
imul
leave
lahf
cli
dec
pusha
push
scas
or
xor
jl
or
int3
adc
pop
ja
mov
inc
xchg
test
lahf
push
xchg
call
popw
shr
cmpsl
jmp
stc
rcll
movsb
xor
mov
inc
scas
add
add
xchg
lods
sbb
mov
inc
cmpsb
enter
sti
scas
lea
inc
sbb
fisttpll
jbe
xchg
fsts
and
push
out
lods
loop
test
pop
ret
inc
xchg
out
inc
push
sbb
inc
test
insb
xor
mov
cmp
movsb
jle
loope
mov
sub
mov
sub
pushf
adc
dec
pop
nop
stc
cmp
mov
test
push
sbb
out
lret
adc
mov
push
lods
pusha
adc
out
rol
jg
cmpsb
or
jae
int3
call
addr16
aas
aam
pop
push
das
cmp
test
pop
fnstenv
jno
xor
clc
mov
inc
and
add
add
jbe
jg
push
lock
mov
mov
leave
adc
jnp
adc
js
push
mov
daa
cli
fcmovbe
adc
clc
or
cwtl
jp
add
stc
adc
push
jmp
inc
add
push
scas
in
pop
int
inc
fstl
or
mov
popf
cmpsl
mov
out
shll
mov
pop
and
dec
jl
sarb
cltd
scas
dec
add
mov
pop
xor
sub
jae
test
dec
xchg
lods
movsl
hlt
sbb
xchg
xlat
lcall
dec
sub
lcall
dec
adc
test
int
out
imul
cmp
outsl
popf
xchg
xchg
xchg
out
insl
or
adcb
std
jge
fstl
clc
shll
pop
inc
xor
popf
push
stc
jg
sahf
scas
movsb
push
xchg
imul
in
in
ljmp
shll
movsb
push
shlb
xor
inc
pop
inc
cmp
ss
or
repnz
int
je
pop
jae
cmpsb
fimull
dec
pop
pop
push
popa
xchg
dec
cmp
inc
data16
in
inc
mov
inc
lcall
push
inc
push
sbb
xchg
rolb
adc
cmpsb
js
xchg
ja
add
test
fisttpl
das
sbb
mov
jmp
pop
cmp
push
push
pop
iret
push
or
fdivrl
pusha
mov
bnd
mov
jmp
lret
imul
in
dec
cmp
shl
in
jne
add
lcall
push
arpl
push
in
into
inc
dec
popw
or
xchg
pop
cmp
lret
test
mov
push
out
stos
scas
cmp
mov
mov
jmp
fldt
scas
outsb
in
xor
sbb
test
ret
and
jmp
add
je
or
xor
bound
cld
ljmp
jl
mov
push
cmp
jns
mov
sub
sub
jmp
stos
cltd
add
xchg
cmpsb
xchg
in
scas
insl
test
mov
push
ficoml
sub
xchg
mov
je
subb
mov
jo
inc
ficoms
adc
aaa
faddl
xchg
jns
lcall
sarb
mulps
mov
repz
inc
inc
scas
daa
push
imul
fimull
bnd
dec
mov
xchg
dec
xchg
dec
add
pop
jge
mov
jnp
mov
lea
les
loopne
add
mov
and
loopne
mov
enter
lock
shrb
pusha
and
fwait
enter
inc
shlb
gs
into
loope
lods
ret
scas
xchg
dec
fadds
mov
outsl
insl
sti
xor
pop
jp
scas
shlb
mov
inc
nop
xchg
in
pop
lods
and
cld
les
cmp
outsl
test
dec
mov
mov
scas
in
fwait
imul
mov
mov
inc
mov
push
aaa
call
xorl
pop
add
add
inc
xchg
sub
jmp
cwtl
sbb
pop
or
and
cld
push
dec
jne
jo
pop
icebp
int
popf
lods
loopne
roll
ds
mov
inc
roll
dec
les
inc
xchg
insl
insb
adc
push
pop
mov
mov
add
inc
cmp
iret
ficompl
and
xchg
jl
mov
leave
rorl
insl
xor
mov
js
test
sub
xchg
fisttpll
add
xchg
fisttpl
test
push
icebp
scas
sbb
sbb
movsb
bound
or
int
pop
add
aad
inc
mov
xchg
filds
xchg
pusha
push
mov
fcompl
inc
mov
and
lea
imul
add
cld
nop
jecxz
call
push
ljmp
mov
mov
xor
or
adc
in
jno
ja
scas
push
sub
jne
sbb
jecxz
dec
lods
add
mov
or
mull
scas
je
adc
pop
mov
jp
orl
jle
sub
lahf
repnz
ss
js
rcrl
push
fstl
sbb
xor
mov
fmul
js
pop
mov
hlt
cmpb
je,pn
cmpsb
and
scas
sti
insb
mov
cmpsb
xor
js
dec
xchg
sahf
adc
cmc
add
jb
dec
idiv
adc
leave
pop
jle
sti
mov
push
sub
jmp
mov
rclb
rclb
xor
fisttpl
lahf
repnz
jl
or
dec
fdivrs
stos
adc
popa
ja
sub
gs
addr16
minps
js
dec
popa
sbb
sar
or
je
test
push
and
insl
adc
and
cmp
into
push
pop
xorb
push
scas
popf
cmp
add
in
mov
shrb
cmp
add
scas
push
fsub
fwait
cmp
cli
sub
xchg
sub
jnp
xor
jb
or
sub
push
sarb
xor
outsb
nop
add
out
push
test
gs
shll
pop
mov
add
jle
fidivs
cs
lods
xlat
jbe
jl
insb
flds
out
sub
sti
adc
out
mov
shrb
lahf
and
xchg
lret
sub
mov
insb
addr16
leave
xor
outsl
mov
shll
insl
pop
vmovddup
push
dec
out
xchg
xchg
call
shll
ret
lods
icebp
pop
nop
lods
test
jbe
pop
inc
shrl
mov
in
jo
mov
or
jne
jb
lea
imul
fwait
cmp
mov
fsubrl
cs
movsl
push
and
sbb
add
lds
filds
mov
xchg
adc
aam
cmp
cmp
shll
jp
or
and
push
lret
xchg
lods
int
popf
gs
cmp
out
fs
ror
xor
out
xor
pop
cld
cmp
cmp
cmpsb
mov
mov
jmp
jae
xchg
pop
stos
mov
xchg
pop
cwtl
inc
xlat
mov
xchg
cmp
stos
cmpsb
push
pop
mov
jb
jmp
mov
push
adc
pop
in
adc
movb
jg
fs
fs
mov
inc
shrl
movsl
pop
fidivl
lahf
fists
adc
jns
push
push
or
cmp
ds
jnp
cmp
out
mov
xchg
test
cmp
hlt
cmp
pushf
pop
mov
fwait
movsl
in
mov
sbb
sbb
mov
int3
mov
adc
dec
cmp
stos
push
iret
in
cwtl
add
jo
mov
insl
sar
rcll
xor
daa
or
jnp
or
leave
dec
xchg
adc
nop
add
fisubrl
xchg
into
test
jae
mov
mov
mov
hlt
in
lds
imul
sbb
mov
xor
push
fildll
pop
repnz
sbb
jecxz
outsb
jns
adc
lods
leave
scas
dec
and
in
movsl
mov
jg
jle
xchg
fwait
or
inc
fwait
pushf
sub
popa
je
gs
lock
sub
pop
push
aad
dec
fwait
xlat
addb
imul
aas
std
push
or
jo
adcb
jnp
out
and
dec
ror
lods
into
stos
fisubs
and
xchg
xor
addl
or
jne
into
xor
fcomi
out
jnp
xor
sbb
xchg
movsl
loopne
scas
adc
in
dec
imul
test
xchg
push
cmp
lcall
push
into
cmp
push
loopne
dec
sbb
push
jmp
pop
adc
test
mov
enter
sub
push
in
inc
loope
fidivs
xor
push
sub
sahf
adc
es
mov
sbbl
dec
adc
subb
xchg
cmp
push
lcall
dec
std
ret
jns
fsubs
rolb
sbb
xchg
jne
adc
jae
les
mov
scas
subl
xchg
stc
sti
js
test
stos
popf
mov
push
cmc
insb
mov
nop
adc
leave
mov
loopne
sub
leave
or
pop
mov
rcrb
mul
shlb
push
or
mov
std
jb
push
pop
stos
or
cli
mov
sahf
dec
pop
sbb
mov
add
and
lret
bound
and
add
fadd
xchg
lea
xchg
out
sub
push
xchg
dec
mov
jb
in
rorb
addl
cmp
aam
fxch
dec
insb
sbbb
movsl
mov
fisubrs
mov
lret
cmpsb
test
jge
nop
dec
dec
enter
jae
inc
xchg
dec
cmp
push
mov
sbb
mov
mov
jge
or
or
dec
adc
pusha
push
xchg
shll
daa
mov
imul
add
cltd
mov
inc
lds
fisttps
mov
lcall
aas
aas
les
adc
int
pop
scas
bound
sub
sbb
push
icebp
shll
mov
push
adc
test
and
fidivs
mov
stos
add
push
cmp
sbb
push
iret
add
test
sub
ficoms
bsr
xchg
mov
pop
lods
jb
enter
mov
gs
aad
cmp
add
orl
out
sbb
dec
das
sub
sbbl
ret
push
push
pop
pop
mov
cmp
cmpsl
inc
shl
stc
sbb
add
sbb
jge
cmp
sbb
push
add
pop
or
pop
xchg
xorl
fiadds
xor
dec
mov
push
fstl
add
subl
mov
test
scas
fcoml
jg
pop
add
adc
jb
scas
jmp
dec
pop
inc
out
pop
insl
es
pop
test
inc
sti
call
or
scas
mov
cltd
and
test
sub
pop
xlat
jmp
xchg
pop
xor
es
repz
push
xor
sub
fcomp
fidivl
inc
mov
add
fs
jo
jns
jae
out
in
xchg
add
dec
jmp
js
imull
leave
xchg
mov
sahf
inc
pop
jns
mov
cwtl
add
arpl
cmp
popa
cwtl
mov
outsl
pop
cmpsb
lock
shrd
push
leave
in
dec
add
cmp
imul
mov
enter
lret
in
stos
loop
mov
shll
xchg
cmpsl
data16
jge
xchg
in
dec
aaa
cmp
xlat
in
and
nop
fwait
mov
in
loop
mov
stos
sub
jmp
outsl
dec
cld
sub
fsubr
gs
pop
lret
outsl
or
adc
or
test
outsl
test
hlt
test
outsb
mov
jl
xchg
inc
inc
mov
sbb
imul
arpl
mov
clc
insl
push
adc
inc
cmp
xchg
mov
add
ss
std
jle
popf
cmc
dec
outsl
arpl
add
xchg
jae
test
cltd
into
sahf
or
inc
adc
pop
and
adc
push
jecxz
jae
dec
iret
mov
jle
ds
idiv
enter
scas
xor
stos
sbb
cs
adc
out
fdivs
cli
mov
shll
test
in
div
daa
and
push
lcall
out
jo
das
xchg
mov
fidivs
jg
scas
mov
push
rcrl
jle
loopne
loopne
ja
ret
popf
ret
mov
push
mov
add
je
adc
data16
xor
gs
icebp
ljmp
xchg
clc
mov
inc
idivb
stos
dec
sub
xor
les
add
push
pop
fcomp
jo
hlt
bound
mov
mov
mov
into
in
mov
out
shl
sbbl
lahf
sahf
sbb
jp
in
push
jle
dec
mov
jecxz
ljmp
push
enter
repz
add
sbb
sbb
mov
and
jp
push
out
rclb
pop
outsl
enter
push
inc
sbb
mov
jecxz
pop
mov
rcrl
dec
jns
add
or
and
pop
jg
pop
xor
cltd
mov
scas
shrl
shr
loopne
xor
xorl
mov
notb
sti
push
inc
ret
movsl
loopne
xchg
rcll
mov
scas
cwtl
faddp
add
mov
adc
call
lret
fsubs
aad
enter
xchg
adc
push
and
adc
lds
dec
push
xchg
out
cmpsl
iret
fwait
mov
mov
mov
imul
cmpsb
sub
sub
das
shlb
loopne
xor
lods
dec
xchg
mov
negb
push
or
xchg
jo
jo
cs
mov
clc
xor
sbb
pop
xor
outsl
fstpl
ret
ficoms
xchg
out
mov
mov
xchg
fisubs
and
mov
sub
ljmp
sub
cmpsb
xchg
xchg
mov
mov
sbb
pop
ret
jo
jns
fs
adc
pop
pop
sbb
mov
xlat
fnstenv
loopne
and
das
push
mov
out
jg
jge
mov
insl
arpl
js
mov
jp
les
icebp
sti
loop
pushf
mov
inc
lods
in
imul
push
test
mov
lods
jo
data16
or
in
push
fildl
mov
jo
dec
movsl
mov
or
imul
mov
xchg
push
mov
jmp
jle
dec
xor
cmc
jae
lock
loopne
lret
mov
mov
jo
leave
pusha
push
out
lods
inc
insb
mov
stos
jne
jne
xchg
or
push
cwtl
int
jp
inc
add
cmc
clc
add
sbb
imul
jge
jno
pop
lret
xor
inc
push
popf
ja
mov
lcall
daa
mov
rorb
mov
push
insl
xorb
dec
inc
inc
fnstenv
mov
movsb
dec
xorb
nop
inc
or
pop
pop
rcpps
cmp
es
xchg
mov
rorb
and
ret
mov
push
repz
call
xchg
mov
adc
inc
mov
clc
insl
pusha
pushf
out
rclb
ljmp
push
je
jmp
popf
fbstp
mov
add
xchg
inc
pop
js
mov
fadd
fs
movsl
pop
cmp
pop
icebp
adc
shl
dec
xchg
lcall
imul
mov
or
and
dec
push
xchg
fmul
cmp
mov
sub
inc
cmp
mov
xor
cltd
lahf
mov
push
cmp
adc
or
mov
sbb
adc
or
rol
fstpt
sbb
cli
gs
adc
fdivp
repz
lret
into
cmp
inc
jbe
add
mov
add
imul
idivl
in
rcrb
cmp
xchg
adc
or
and
cmp
pop
or
sub
xor
dec
push
repnz
repz
xor
mul
push
push
xor
out
orb
repz
hlt
ss
lahf
daa
sbb
ja
adc
cmp
outsb
dec
add
pop
popa
jns
mov
push
inc
push
jg
adc
cwtl
mov
nop
cmc
adc
andl
adc
push
jmp
mov
mov
pop
mov
lds
lcall
fstl
cmpsb
push
xor
movl
leave
pop
out
out
pop
and
jbe
les
fdivrl
fdivs
test
aam
in
dec
nop
adc
jp
mov
hlt
xlat
adc
xchg
adc
decb
lds
addr16
cmp
pop
xchg
sahf
xchg
mov
xor
sub
cmc
lods
out
pop
nop
sbb
mov
dec
ret
and
lcall
mov
cli
mov
or
ss
mov
add
inc
lahf
lcall
leave
ljmp
mov
pop
jno
out
inc
loop
sub
jbe
jle
sbb
or
jbe
sbb
and
test
jecxz
mov
sarl
data16
sub
cmpb
ljmp
push
cwtl
mov
fidivs
stos
push
mov
jmp
test
xorl
lods
cli
in
or
cmp
ljmp
rcll
pop
out
push
mov
les
lds
sub
sbb
ja
fbstp
cmp
fbstp
ret
push
cmp
cld
sbb
popf
testb
jl
push
jg
mov
lcall
lcall
mov
add
in
or
dec
dec
popf
fs
leave
xchg
adc
cli
ret
and
lret
je
mov
lcall
loop
inc
ss
lret
xor
scas
pop
mov
mov
cmpsb
adc
ja
cltd
push
nop
inc
mov
and
xchg
repnz
lds
fistl
push
add
cmp
jmp
jno
dec
or
pop
pop
cwtl
stc
mov
aaa
mov
les
sbb
mov
inc
in
mov
lcall
pop
xor
add
cmp
pusha
fisttpl
sahf
aad
cltd
xor
sbb
xchg
stos
xor
jl
bound
pop
dec
mov
lods
imul
or
cwtl
or
xor
into
shll
or
sti
fiaddl
mov
and
ja
int
andb
jo
out
repnz
or
imul
test
mov
shl
popf
mov
sub
in
fstpl
int3
repnz
inc
jl
jle
daa
inc
push
in
test
mov
lods
and
dec
nop
push
addl
das
adc
clc
xchg
jns
loopne
movsl
gs
pop
sti
cmpsl
xchg
lcall
clc
loop
ss
and
inc
sub
cmp
cmpsb
out
mov
push
cltd
out
mov
push
jg
and
out
mov
cmpsl
nop
cmp
mov
xchg
repz
cmp
test
test
leave
addr16
mov
or
dec
test
rorb
adc
nop
push
sub
mov
sbbb
dec
sub
ss
nop
test
lods
jl
dec
aad
xchg
sarb
lret
add
jecxz
into
lds
cmpsb
cld
fisubrs
add
lock
jmp
sti
mov
sahf
inc
ljmp
adc
mov
cmp
lock
pop
sub
xchg
adc
movsb
lods
push
or
ret
mov
mov
roll
nop
push
lcall
cltd
fidivrl
fstpl
stos
dec
mull
pushf
xchg
test
movsl
and
je
lcall
stos
mov
mov
jmp
sub
mov
lret
popa
push
addr16
jmp
push
xchg
cmpsl
pop
xchg
negl
aad
movsb
lds
add
sub
add
mov
lock
out
imul
push
daa
inc
push
aaa
rorb
sbb
ljmp
jp
inc
les
sahf
mov
mov
xor
imul
in
jecxz
mov
lods
lods
sub
adc
fisttps
outsb
mov
fstpl
scas
ljmp
arpl
pop
testb
mov
inc
mov
ss
dec
clc
sbb
mov
xchg
adc
pop
stos
test
shr
shlb
sti
add
movsl
jmp
pop
mov
xchg
mov
and
dec
addl
adc
fs
push
jb
insb
mov
push
sbb
js
sbb
sbb
mov
jg
lahf
psllw
push
mov
fcomi
xchg
in
fcomps
lcall
mov
stos
mov
dec
fimuls
in
cmp
mov
ds
xor
enter
in
mov
inc
scas
pop
xchg
lcall
push
jp
dec
or
fdivs
lcall
xchg
jle
xor
pop
sbb
loopne
leave
js
adc
push
pop
dec
jnp
lds
adc
int3
ret
stos
pusha
stos
xor
pop
rep
icebp
inc
and
fisttps
pop
mov
mov
add
add
push
pop
dec
popf
lods
push
stc
bound
dec
movq
push
sbb
xor
mov
ja
popa
inc
icebp
push
inc
push
mov
es
dec
nop
or
jb
lods
test
cld
testb
mov
inc
insb
test
mov
jl
pop
popa
scas
dec
mov
fnstcw
fwait
mov
mov
mov
adc
adcb
jnp
dec
gs
and
xor
les
mov
xor
rolb
inc
cs
sahf
data16
xor
and
mul
test
push
pop
jmp
repnz
ja
push
push
mov
and
jnp
outsl
adc
or
adc
frstor
dec
clc
push
stc
leave
icebp
or
aam
or
mov
mov
cmpsb
repnz
lret
cmpsb
in
lcall
push
pop
in
je
in
sbb
mov
cld
mov
push
jbe
fldcw
daa
jnp
dec
lcall
roll
insl
nop
or
add
sbb
std
test
dec
inc
sub
xor
mov
jecxz
cmc
int3
js
mov
sti
popa
ja
jecxz
imul
push
jl
adc
inc
in
sbb
testl
jle
xchg
cli
push
icebp
inc
xor
and
pusha
mov
cmpsb
enter
adc
cli
push
jge
into
inc
aad
mov
cmp
inc
dec
mov
jge
data16
shlb
imul
sub
mov
and
or
test
jmp
and
repnz
jge
push
inc
jbe
or
movsb
pop
stos
std
rorb
inc
pop
outsb
cmp
pop
ss
and
mov
std
ret
es
outsl
daa
cmp
jle
aad
adc
test
dec
push
negb
gs
inc
jno
jb
jecxz
mov
sub
jne
testb
inc
adc
aas
cmpsb
xor
mov
ret
jle
pop
pop
lock
imull
movsl
subl
imul
addr16
dec
pop
and
outsl
sbb
dec
arpl
mov
cmp
pusha
xchg
or
aas
xchg
andl
cmp
mov
xlat
mov
push
repnz
jp
mov
xchg
insl
mov
fadds
mov
lret
icebp
jne
jnp
mov
cwtl
leave
dec
pushf
rorb
rcl
scas
cmp
xchg
lret
mov
int3
test
sbb
ror
cmpb
fwait
lret
push
push
mov
push
lods
and
lcall
add
mulb
std
sbb
out
test
mov
sarb
mov
push
in
pop
pop
dec
outsb
xor
dec
add
enter
inc
js
jge
dec
scas
imul
xchg
cmpsl
mov
adc
pop
sbb
stc
sbb
ljmp
lock
cmc
test
pop
popf
mov
lret
mov
nop
dec
add
rcl
outsb
push
je
lods
add
mov
addr16
scas
xorl
popf
cmc
and
mov
push
inc
sti
sbb
sub
push
inc
nop
sarl
add
push
pop
loopne
mov
das
mov
frstor
data16
clc
push
or
addr16
adc
and
and
enter
sub
jge
dec
imul
scas
in
test
inc
jecxz
mov
stc
scas
mov
sub
jnp
or
jae
mov
test
push
push
out
int
in
rcrl
imul
xchg
dec
cmp
call
testl
add
pushf
mov
fptan
mov
in
cli
lds
inc
mov
subb
jge
aad
mov
or
dec
push
bnd
in
in
adc
movb
out
add
test
clc
popf
rolb
mov
int
jmp
rol
lahf
sbb
aas
int3
test
mov
lea
adc
xchg
enter
stos
repnz
lcall
arpl
scas
xor
insl
adc
jp
out
repnz
pop
push
push
adc
test
sub
mov
xor
scas
fists
add
push
cmp
cmc
jno
scas
clc
bound
cld
stos
jnp
mov
sahf
mov
mov
clc
push
ljmp
dec
mov
push
sub
lods
into
xchg
addb
xchg
fisubrl
mov
repz
bound
lcall
test
aaa
cmp
fidivl
dec
push
jl
movsl
jne
ljmp
int
shrl
and
jb
sub
fwait
xchg
sbb
je
inc
or
loop
adc
out
lahf
and
popf
inc
loop
jae
int3
adc
rol
pusha
out
pop
jge
push
das
inc
push
jns
fisttpl
arpl
sub
imul
push
gs
mov
iret
mov
scas
stc
into
sub
mov
add
andb
xchg
inc
xchg
test
push
lods
adc
jg
jp
jb
fsubr
xlat
cltd
divl
aad
cmpsb
pop
and
jno
mov
add
jl
aas
or
test
ss
add
xor
mov
xchg
push
fmuls
or
xor
xchg
pop
push
mov
pop
fisttps
data16
data16
out
loope
pop
xchg
shll
jb
adc
dec
push
insb
cwtl
push
jmp
and
dec
mov
add
xchg
dec
sbb
mov
insb
mov
push
xchg
lock
mov
or
xchg
and
out
filds
jle
adc
lea
dec
jp
ss
divl
bound
sbb
xchg
jb
scas
shlb
pop
dec
stc
popa
xchg
mov
ret
fildl
sbb
lcall
sub
add
mov
dec
int
fldenv
dec
push
int3
dec
jno
inc
fdiv
xchg
xchg
mov
sbb
mov
adc
fsubr
gs
jns
mov
mov
mov
std
insb
and
std
and
dec
push
inc
mov
aam
repz
sbb
push
jns
repz
cmc
rcrb
sbbl
fldcw
in
negl
xchg
sub
xchg
push
mov
cmp
loopne
jmp
sbb
mov
nop
call
scas
jp
pop
inc
and
jno
out
je
in
cs
fsubl
add
adc
add
fldt
out
addr16
in
push
mov
mov
mov
movsb
cltd
push
xchg
adc
dec
cli
insl
mov
cli
adc
mov
mov
xor
mov
dec
popf
ja
mov
mov
push
call
dec
lret
dec
cltd
xchg
mov
gs
and
push
cld
loop
push
out
aad
imul
shl
lods
dec
mov
dec
push
sub
int3
insb
cld
jnp
in
stc
or
sbb
adc
popa
dec
mov
cmp
rclb
xor
fsub
xchg
sarb
mov
ljmp
arpl
sub
es
sub
inc
inc
mov
pop
inc
into
lcall
and
xor
mov
lret
and
and
pop
sub
call
pop
pop
dec
pop
or
test
fsubrs
sar
clc
lock
pop
es
das
pop
sar
jbe
add
clc
jns
mov
ret
or
push
cmp
sbb
aam
jmp
inc
inc
or
ss
inc
push
fcmovne
movsl
movsl
fstl
outsl
pop
outsb
inc
inc
je
push
daa
gs
fidivrs
repnz
test
cmpsb
dec
loopne
pop
cltd
sbb
inc
mov
and
cmpsb
imull
and
cmp
jmp
push
xchg
sub
add
mov
push
xor
mov
fidivs
aam
mov
imul
and
or
test
cmp
mov
call
or
sbb
popf
dec
les
je
mov
ds
xchg
or
arpl
outsb
mov
sub
pop
sub
sti
std
push
xor
int
ljmp
aaa
popa
scas
lcall
loopne
jno
or
mov
ret
jns
push
dec
inc
jo
sbb
lods
inc
xor
adc
subl
xor
lahf
fneni(8087
add
cwtl
push
scas
xor
scas
lret
and
add
sbb
jo
loop
fimull
mov
mov
sbb
inc
in
mov
sar
sti
fistpll
and
adc
sarb
pop
or
sti
movsl
arpl
push
mov
ret
mov
test
arpl
clc
fwait
inc
jp
in
jmp
aas
inc
rcr
nop
inc
js
cmp
test
das
inc
in
decl
or
cmpsl
out
dec
jl
jg
cs
push
mov
sarb
mov
adc
insb
jp
ficomps
inc
cli
insb
sbb
and
in
int
lock
push
xchg
push
pop
jbe
pushf
pushf
inc
mull
lods
or
xchg
jne
add
push
shll
dec
daa
xor
int
xor
pop
add
xchg
aas
cmp
mov
pop
fldcw
inc
xchg
fwait
lods
outsb
jne
mov
imul
insl
int3
lea
lock
stc
sbb
cmp
mov
inc
mov
jp
js
into
pop
mov
fcmovb
xchg
fwait
push
mov
xor
adc
aaa
daa
lret
shlb
cmp
inc
add
andl
test
jg
lcall
cmp
dec
sub
lret
call
sbb
mov
push
movsl
insb
jg
imul
das
dec
ja
push
dec
or
popa
xchg
lods
int3
cmpsb
scas
in
fnstcw
std
push
inc
push
mov
xchg
pop
jae
push
inc
push
jo
and
out
aam
jo
mov
test
push
and
imul
mov
sub
or
mov
dec
sti
mov
clc
and
in
in
cmpsb
sub
aas
sub
sub
cmp
mov
pop
mov
xchg
sub
and
jns
jmp
repnz
idivb
xor
loop
lret
cmc
movsl
fcomi
mov
pop
mov
cmp
lods
push
cltd
or
xor
cltd
pop
pop
adc
fistl
iret
negb
jb
jmp
icebp
mov
cmp
rcrw
clc
mov
rorb
cs
dec
cmp
mov
push
or
jmp
in
aas
outsl
aam
in
push
xor
iret
jno
stc
xchg
shrb
push
add
aaa
lret
jae
sbb
lock
push
mov
mov
ret
inc
rcrb
neg
and
aam
scas
std
push
and
test
jl
xchg
xlat
and
aam
adc
mov
stc
dec
mov
push
inc
std
add
and
out
mov
lock
mov
cmp
or
xor
lods
xor
cmc
or
inc
das
push
mov
enter
jbe
into
mov
push
jnp
adc
mov
jmp
mov
push
das
imul
xor
mov
sub
pop
dec
xchg
sbb
inc
lret
jnp
nop
push
inc
incl
pop
cmp
sarl
push
fimuls
out
inc
aaa
clc
inc
movq
or
repnz
xchg
mov
outsb
divl
andl
add
dec
mov
andb
movsl
lret
repnz
in
xor
shlb
test
stc
push
adc
andl
jbe
fdivl
and
aam
nop
push
scas
mov
mov
cmp
jae
into
pop
add
xor
mov
lods
loope
imul
mov
xchg
jnp
cmp
enter
flds
test
xorl
push
mov
inc
and
or
xor
pop
shlb
adc
loope
sbb
dec
call
aam
dec
push
mov
loope
popf
lods
cmp
fdiv
shlb
int
sub
push
sbb
andb
mov
test
mov
mov
bound
call
xor
jg
mov
push
mov
filds
cmp
daa
dec
iret
mov
mov
shlb
ss
and
cmp
xor
mov
loopne
cmpsb
ret
loopne
xor
stos
mov
fsubs
mov
mov
xchg
or
leave
inc
adc
push
mov
test
out
call
jp
mov
xor
repnz
stos
jecxz
mov
push
out
sbb
mov
loope
test
dec
outsl
pushf
cmpsb
cld
xlat
lahf
ficomps
sub
adc
je
repnz
mov
add
add
xor
xchg
hlt
lcall
mov
xchg
jne
xor
jmp
pop
push
jne
jge
aaa
icebp
in
jnp
cmp
adc
xor
std
repz
aad
pop
rol
loopne
mov
xchg
inc
cmc
and
leave
or
int
insl
cmpsb
sub
test
xchg
into
icebp
push
pop
out
jne
inc
pusha
das
push
xchg
cmp
add
jns
pop
movb
jo
jmp
fs
pop
nop
sbb
addr16
sub
pop
mov
sbb
out
lock
ja
cwtl
sub
and
mov
push
cmpsb
jne
jb
repnz
jle
repnz
dec
lcall
ljmp
and
add
add
xor
jp
movsb
inc
mov
or
jle
in
or
imull
pop
or
insl
loop
shrl
call
scas
nop
pop
push
arpl
nop
mov
es
fcomp
push
jle
lcall
dec
aad
mov
sbb
add
xchg
adc
lea
sbb
into
jno
js
adc
jge
add
ljmp
push
xchg
fiaddl
xorb
shrl
xor
sahf
xchg
push
push
or
push
adc
repz
adc
fcompl
add
mov
inc
out
cs
fs
pop
xchg
daa
inc
out
in
popf
pop
xchg
pop
orl
xor
fs
adc
ret
sbb
rol
sbb
leave
shl
sahf
push
jle
aad
mov
jne
or
jo
fdivp
cmp
sar
mov
xchg
lahf
inc
cmpsl
dec
ror
mov
pop
mov
jne
arpl
dec
in
rolb
or
scas
xchg
lretw
add
sbb
mov
or
flds
xchg
and
lds
mov
lock
mov
mov
jns
xchg
sub
pop
fcomip
cld
addr16
jb
loope
fistl
pop
xor
lret
je
push
icebp
jl
xor
xchg
lret
sub
aad
push
insb
jp
pop
popf
jns
jge
out
repz
out
adc
sbb
jo
push
xchg
mov
xor
inc
xchg
xchg
mov
add
ret
mov
inc
pop
icebp
sbb
test
adc
cld
in
rorl
pop
ss
cld
clc
mov
mov
mov
sub
push
shlb
inc
mov
pop
stos
dec
push
pop
and
fadd
outsb
add
xchg
ds
ds
adcb
pop
jno
inc
xor
repz
or
sub
xchg
in
xchg
jae
andl
jge
sub
mov
sub
push
popa
movb
cmpsb
mov
add
imul
mov
mov
sub
lds
sahf
push
sti
sub
sbb
inc
inc
pop
test
mov
sti
sbb
jno
hlt
sbb
popa
out
fsubl
das
cwtl
repz
cmp
adc
repz
dec
mov
jp
mov
mov
cld
cli
and
setae
mov
inc
cwtl
aad
sahf
jns
sbbl
incl
cmp
mov
jb
dec
pop
shlb
adc
lods
push
outsl
loope
push
addr16
fisttpl
out
push
xchg
in
adc
mov
sbb
les
dec
dec
and
jnp
jmp
ret
fnstsw
push
sub
ds
imul
mov
dec
pop
pop
ret
xchg
mov
push
out
jb
popa
adc
sub
adc
pop
add
popa
adc
xchg
or
pop
lds
xchg
aam
mov
dec
aam
cmp
mov
or
mov
test
add
loopne
adc
fstl
fstp
pop
xchg
cwtl
popf
jb
mov
push
xor
ret
repz
dec
adc
dec
in
test
std
aas
lods
ds
and
sahf
mov
push
mov
das
xchg
sti
pop
int
or
mov
sub
pop
rol
mov
test
push
add
pop
cmc
jp
sbb
out
xor
lret
sti
jbe
push
adc
jns
jbe
jge
push
insl
fcmovbe
shlb
inc
sub
xchg
pop
or
inc
cmpsl
sub
lods
clc
jne
aad
ret
push
cmp
pop
int
sub
std
and
ds
rol
dec
xor
lret
pmaddwd
mov
sub
mov
sbb
rol
test
mov
inc
push
and
push
out
adc
jb
sbb
pop
xchg
test
lcall
inc
pop
adc
add
icebp
push
andb
jl
mov
lcall
sarb
jp
out
xchg
call
push
stc
stc
adc
lret
lea
ret
test
dec
mov
pop
repz
sub
ffree
xchg
fnstsw
or
arpl
in
mov
jecxz
loop
aaa
in
adc
into
hlt
aaa
adc
cmpsl
sub
lds
pop
test
inc
int3
xchg
pop
push
int
repnz
adc
push
mov
xchg
xchg
in
es
mov
and
sub
adc
imul
ljmp
adcb
int
arpl
sub
sbb
subb
or
mov
repnz
mov
icebp
jb
loop
fidivs
and
test
imul
ja
fisttpll
loop
mov
loopne
aam
xor
mov
cmpsb
jo
xchg
lret
mov
fs
in
sbb
jbe
inc
mov
sbb
rcrl
mov
imul
adc
add
mov
repz
or
aam
lods
inc
pop
jae
xlat
sub
adcl
pushf
arpl
pop
or
or
jl
cmp
push
sub
mov
sbb
xor
mov
xchg
lret
test
aam
adcl
or
out
call
mov
push
jbe
and
aam
outsl
lcall
add
mov
push
push
jo
shl
or
cli
adc
pop
push
mov
lods
jecxz
lret
and
cmpsl
cmp
rcrl
out
imul
nop
repnz
rolw
enter
fldt
leave
adc
mov
insb
insb
jecxz
push
int
imul
xchg
iret
ja
mov
js
loope
dec
or
pop
dec
int
fbstp
pop
push
roll
and
shll
scas
test
mov
xorb
xor
fidivrl
icebp
cmp
pop
hlt
jb
sub
test
aas
repnz
cmp
sbb
mov
ds
pop
add
mov
pushl
frstor
pop
hlt
xor
sub
lret
aaa
jae
popa
rcl
out
sub
xchg
cs
push
popa
dec
or
popf
or
loop
add
mov
iret
pop
xchg
imul
inc
shrl
pop
imul
imul
pop
mov
lds
orb
dec
movsb
fcoml
push
or
mov
jbe
push
fadd
xor
xlat
shrl
adc
fdivs
pop
ja
lahf
mov
mov
and
sub
das
push
mov
mov
lcall
mov
ja
xchg
imul
rorl
push
and
dec
or
inc
mov
adc
inc
push
lahf
insb
enterw
fs
nop
fidivrl
xchg
mov
mov
repz
inc
mov
aas
inc
pop
cmp
and
cmp
lods
shrb
cmp
sbb
loop
or
jecxz
push
sub
pop
cmpsl
call
fdivl
insl
or
or
out
mov
ss
push
dec
pop
xchg
ljmp
or
mov
jae
int3
bound
xlat
push
sub
xor
push
xchg
out
push
xor
add
out
lds
jns
push
fidivl
cmpsb
pop
loop
inc
mov
mov
mov
xchg
push
add
jmp
cmpsb
int
fmull
icebp
push
dec
rep
mov
dec
aas
jno
fidivrs
iret
xchg
lret
aaa
loopne
lret
fwait
test
gs
jge
jns
ret
pushf
xor
sahf
subl
xchg
inc
jb
inc
pop
sub
xor
mov
xor
xchg
scas
pop
dec
sbb
popa
sbb
sbb
jo
push
lock
inc
pop
add
nop
test
pop
popf
sub
push
push
jmp
pop
dec
leave
add
pop
arpl
cli
xchg
stc
jge
out
push
stos
push
ds
loope
mov
mov
mov
sarb
icebp
aam
outsl
leave
jp
pop
out
repz
mov
lods
mov
popf
pushf
ss
jno
test
sbb
push
mov
cld
pop
sbb
jns
fnsave
stos
jae
sub
jge
pop
mov
jo
pop
pushf
int3
stc
cli
or
jbe
jb
daa
jnp
mov
sarl
ds
jb
lods
jmp
inc
movsl
adc
js
jns
fcoms
jnp
mov
test
push
loop
mov
out
shll
jle
loope
xlat
push
adc
hlt
jo
aas
out
mov
mov
andb
stos
xor
aam
or
pusha
mov
iret
pop
cmp
insl
add
mov
add
test
pusha
fnsave
fwait
or
mov
jno
push
jo
cmp
jmp
mov
xor
fidivrs
inc
inc
fimull
popf
cwtl
jecxz
jecxz
js
or
cs
lods
jne
xor
cs
mov
xchg
scas
std
iret
xchg
sub
es
pop
mov
movsb
and
cld
out
aas
pop
and
outsb
fsubrl
mov
stos
push
mov
daa
rcll
xchg
lcall
xor
mov
xlat
mov
test
arpl
mov
push
stos
aam
aam
dec
dec
outsl
cwtl
jl
cwtl
mov
inc
mov
addb
jns
out
adc
and
fisubs
ret
in
ss
sbb
or
sbb
mov
jle
or
ror
jo
dec
or
adc
testb
icebp
sbb
jg
lds
pushf
out
insb
sbbl
fidivrs
ffree
call
xor
fisttps
shll
mov
dec
add
roll
cmp
loope
inc
xorl
rcll
lock
lds
jle
mov
push
jae
cld
lds
xchg
sbb
fcomps
nop
cmp
das
cmpsl
insb
push
in
scas
xchg
loop
pop
push
lcall
xchg
inc
jmp
jecxz
test
testb
mov
push
adc
cmc
dec
and
cmpsl
test
leave
in
jmp
adc
or
inc
add
dec
les
gs
mov
or
imul
jl
sub
pop
jge
gs
inc
das
daa
stos
fldt
xlat
adc
xor
inc
and
adc
movsl
push
cmpsb
pop
lahf
mov
xchg
test
xchg
mov
jo
rcrl
andl
or
mov
lret
icebp
and
sub
pop
fadds
mov
and
rcll
dec
aas
mov
inc
pushw
fidivs
stc
xor
int
fldenv
pusha
lods
adc
push
add
mov
sahf
xchg
push
test
sub
test
out
xchg
adc
mov
call
dec
cmp
or
shll
imul
decb
in
lret
adc
mov
inc
push
shr
push
insb
cmc
sub
data16
ja
dec
adc
xchg
ljmp
rcrl
scas
insb
push
adc
jecxz
xchg
out
inc
clc
loopne
jl
orb
stos
push
push
orb
in
xor
mov
mov
sbb
dec
stos
add
addb
sub
popf
and
dec
je
jp
icebp
cmpsl
pop
and
test
arpl
mov
add
adc
andl
arpl
pop
cwtl
dec
jl
sub
mov
inc
add
lock
ret
je
ror
and
xor
push
cmpb
cmp
and
mov
dec
movsb
or
inc
mov
mov
mov
sub
mov
rclb
punpcklwd
leave
cmpsb
or
push
sub
cmpsl
lea
mov
adc
xor
rolb
push
shrl
mov
jmp
flds
ret
lahf
stc
outsl
rclb
iret
mov
dec
add
in
lret
sub
pop
or
rclb
ret
mov
push
pop
jns
orb
and
adcb
imul
scas
je
or
jns
inc
ficoms
daa
pop
lret
inc
jmp
add
mov
rcl
cmp
shlb
lret
test
fistl
out
shrb
jnp
adc
xchg
inc
mov
sbb
mov
push
cmp
sbb
mov
mul
pusha
into
popa
bnd
stos
fisttps
mov
fs
push
xchg
or
in
xor
push
push
out
nopl
movsb
cmp
out
xor
jae
call
mov
pop
arpl
vmread
xchg
adc
std
adcb
flds
push
insl
pop
jo
sahf
mov
dec
push
fdiv
or
fildll
fucomi
cmp
stos
inc
outsb
daa
lahf
push
adc
subb
sbb
mov
push
das
int3
shlb
addr16
aas
jae
dec
pushf
div
inc
mov
xchg
jo
mov
daa
push
xor
mov
hlt
cmp
in
sarl
jle
jns
dec
and
sbb
les
fistps
xchg
data16
xor
jno
pop
rcrb
adc
mov
cltd
add
es
mov
rorl
in
fcmovbe
adc
stos
lods
test
int
xchg
xchg
lret
xchg
push
test
addr16
cmc
int
das
sahf
and
mov
fdiv
cld
jge
add
insl
dec
rcll
dec
add
jle
add
add
mov
xor
inc
outsb
pop
fbld
mov
lcall
idivb
inc
jb
mov
outsl
dec
idivb
and
or
bound
xor
push
mov
jne
or
out
fsts
add
iret
and
arpl
sub
mov
js
sbb
scas
lret
out
call
add
andb
cmp
test
insl
imul
imul
les
enter
sti
ss
shl
stos
push
add
jmp
stc
sahf
idivl
icebp
scas
jnp
xor
jle
add
cmpsl
push
mov
repnz
mov
pop
xor
mov
in
pop
aas
call
mov
les
inc
jle
or
ret
fildl
lea
push
fnstsw
adc
push
jmp
mov
lods
inc
mov
sub
das
stos
pop
push
andb
int
jecxz
jns
out
sub
jge
rclb
stos
movsb
idivl
das
jnp
or
xor
imul
jmp
adc
lret
mov
xchg
aam
dec
scas
pop
out
sbb
mov
mov
test
call
push
ljmp
inc
insb
jg
cmp
add
sub
inc
jp
mov
data16
mov
mov
out
mov
dec
sbb
sarb
inc
pop
inc
inc
pop
push
inc
fcompl
xchg
dec
sbb
and
jp
stos
loop
push
mov
lock
cld
and
xchg
adc
jp
dec
mov
aaa
or
dec
je
daa
enter
jg
xchg
gs
adc
lods
jo
fdivrl
sbb
ljmp
vpaddw
imul
xchg
rcr
addb
pop
mov
cld
adc
leave
jp
lcall
and
das
es
pop
xor
in
lahf
cmpsb
push
mov
das
mov
mov
enter
and
inc
push
xor
or
fistpll
mov
sarl
mov
jns
mov
ljmp
mov
cwtl
cmp
daa
ljmp
iret
stos
cmpsl
fstp
aas
xchg
xlat
aaa
fdivl
cwtl
js
aad
xchg
out
adc
sbb
push
xchg
sbb
scas
inc
out
sub
xor
mov
out
stos
sbb
pop
xor
push
lahf
xchg
bnd
cmp
aaa
mov
ds
dec
imul
cmp
in
data16
popf
mov
mov
cwtl
and
ret
mov
fwait
jno
shr
jp
es
mov
jae
aam
mov
jb
in
ss
aaa
rcl
adcb
mov
mov
call
ret
scas
sbb
add
repz
sbb
xchg
inc
xor
push
cwtl
push
cs
es
xor
lock
or
push
ret
repnz
ror
shrl
or
and
fwait
mov
add
cmpsl
cli
cmp
out
pop
push
jecxz
enter
xchg
adc
lret
cltd
sub
js
sbbb
jle
pop
ss
xchg
pop
js
sub
aad
outsb
push
mov
inc
stos
mov
in
aad
scas
cmc
movsl
stos
push
xlat
out
jp
xchg
shl
pop
movsl
adc
cli
mov
test
movsl
jns
testb
les
inc
clc
leave
mov
mov
mov
aas
xchg
inc
xor
mov
scas
push
xchg
jl,pn
dec
push
aam
fs
cld
mov
fdivrl
jl
fsqrt
dec
sbb
jmp
leave
fdivl
ret
cs
ss
je
pop
aaa
insl
adc
sub
mov
imul
lea
sbb
pop
and
pusha
loope
sbb
shl
stos
in
xchg
test
inc
or
mov
cwtl
mov
mov
fcomps
aam
mov
fidivl
jae
inc
jo
notl
sbb
lea
add
jns
cs
scas
or
popf
subb
dec
mov
xor
inc
sub
xchg
inc
mov
out
push
add
stos
mov
pop
movsb
std
imul
in
stc
adc
cmp
rcll
jecxz
iret
add
xor
mov
insw
and
mov
push
repz
shll
jge
mov
leave
movsb
stc
cmp
push
pop
fwait
jmp
scas
pop
dec
shrl
jnp
repz
lcall
and
inc
mov
sahf
push
jl
fstpl
ja
fbstp
or
adc
icebp
mov
arpl
into
mull
lret
and
pop
dec
or
jmp
sarb
sub
pushf
or
sub
sbb
mov
fs
mov
jne
add
adc
lods
mov
add
jne
jg
push
xchg
clc
xor
xor
std
mov
out
loopne
mov
fcmovb
pushf
cmpsl
adc
or
cwtl
fwait
ja
pop
mov
int
inc
mov
stc
dec
stos
in
jmp
mov
mov
das
push
mov
int
sub
clc
mov
das
push
sahf
xor
mov
leave
ds
aas
pushf
sub
popf
push
in
add
cwtl
fists
adc
mov
xchg
xor
push
push
lcall
sub
pop
and
lea
lock
adc
mov
cld
xor
mov
lea
mov
lahf
out
mov
lods
mov
sbb
cmpsl
and
into
popf
mov
pop
aas
xchg
sub
pushf
or
popf
and
fwait
int
xor
mov
ljmp
jle
sarl
inc
dec
mov
mov
fmull
dec
inc
rol
dec
xlat
lds
ror
adc
movsl
scas
jg
bound
std
mov
shll
push
dec
test
mov
sbb
sub
js
sbb
fsubp
inc
jge
pop
add
or
pop
out
pop
xchg
pop
inc
xor
push
cmpsl
mov
in
mov
pop
or
sbb
cmp
or
sbb
push
aaa
mov
aas
jae
jle
movsl
or
mov
pop
mov
out
xchg
mov
shrl
testb
enter
dec
test
mov
push
fnstcw
sbb
sar
sub
ja
xlat
pop
popa
outsb
enter
adc
or
xchg
add
push
stos
test
cmc
test
enter
pop
cwtl
or
and
pushf
jl
les
jg
adc
add
pcmpgtb
add
mov
push
dec
xchg
mov
and
lret
cmpsl
and
bound
pop
popf
mov
aas
lahf
fdivrp
into
stos
bound
daa
cmp
lahf
xor
cmpsl
xor
push
test
push
inc
lret
xchg
cmp
mov
int3
daa
lods
jnp
sbb
mov
sub
xchg
xchg
insb
out
xchg
daa
push
jo
insl
fmul
aad
push
gs
rcll
push
js
dec
stos
cs
clc
mov
jno
cli
in
mov
fidivl
push
fnstcw
mov
mov
xchg
pop
xchg
insb
cltd
mov
les
in
sbb
xchg
outsb
frstor
rcl
add
rolb
inc
in
fsubrl
outsl
enter
pusha
and
and
mov
jmp
dec
jo,pn
dec
mov
fdivr
xor
sub
nop
ds
popf
push
adc
fcom
fwait
ss
mov
sbb
jle
out
mov
push
adc
jb
aaa
add
imul
xchg
mov
addb
inc
xor
add
cmp
sbb
mov
out
pushl
and
mov
add
push
xchg
mov
or
cld
lds
push
cmp
xchg
int
mov
mov
adc
bound
lcall
int
loopne
nop
sbb
pushf
cwtl
mov
aas
xchg
mov
xchg
test
imul
je
inc
lea
pushf
sbb
test
push
and
clc
xor
xor
or
stc
mov
pop
into
dec
sub
cwtl
shl
inc
lods
add
cwtl
sarl
lea
push
xor
loope
inc
orl
sahf
adc
shl
and
xor
cli
in
lret
popf
shll
cmp
cld
icebp
cmc
addr16
fdivs
lea
outsb
xlat
out
mov
stos
lods
mov
lds
aaa
pop
lret
and
or
test
mov
inc
cltd
mov
std
xor
iret
and
popa
push
roll
ja
popa
stos
push
insb
mov
push
jnp
mov
jecxz
aad
out
je
nop
inc
xchg
push
dec
in
mov
mov
xchg
add
fidivrl
fs
or
xchg
add
or
iret
inc
sbb
add
jl
or
or
jp
adc
pop
lahf
inc
inc
ds
pop
into
nop
fildll
mov
out
sarb
dec
loopw
cmp
mov
mov
dec
jle
push
mov
out
arpl
pop
aas
xorb
and
andl
pop
xchg
and
push
inc
add
or
mov
cmp
mov
xor
inc
inc
or
dec
jge
sub
xchg
sub
cmovg
mov
mov
sub
dec
or
addb
and
ret
fsubr
sub
pop
cld
dec
leave
adcb
leave
call
xchg
or
mov
cli
push
push
aaa
or
lret
aam
scas
pushf
sbb
out
lret
jo
push
push
cld
aaa
ror
mov
pop
jecxz
lret
ret
xor
adc
cmp
fs
lods
pop
test
add
mov
pop
lret
push
jge
jg
lea
inc
xlat
test
add
in
scas
xor
mov
sub
mov
ret
fstpt
inc
push
aas
mov
lods
ret
xchg
dec
aas
in
mov
pop
daa
inc
lret
cmp
push
or
adc
inc
in
pop
cmpsl
fisubrs
mov
out
clc
repnz
int
cs
adc
pop
inc
insl
jl
xorb
bound
inc
adc
cltd
adc
cmp
or
daa
arpl
into
add
daa
pop
test
add
mov
mov
pop
jno
mov
mov
insl
dec
push
xor
inc
jp
xchg
push
into
jno
test
insl
pop
mov
test
fsub
rcll
cmp
sub
jns
sbb
int3
in
dec
scas
ljmp
ljmp
outsb
sbb
lahf
sub
and
fwait
cltd
outsb
lahf
adc
mov
and
mov
fs
and
int
jmp
loope
outsb
add
push
sub
fcomip
stos
cmpsw
jne
adcl
sub
sub
js
js
leave
jp
orl
xor
fldl
sub
repnz
aaa
imul
sarl
sub
inc
mov
call
mov
movsb
mov
or
jp
mov
or
mov
add
cli
insl
clc
testb
xlat
ret
mov
xchg
ss
sub
lahf
lds
mov
mov
xor
cmp
imul
sub
adc
sbb
into
aad
pop
mov
add
aam
pusha
outsl
sti
in
sarb
sahf
jecxz
dec
and
jae
loop
aas
popf
call
int
inc
addr16
xchg
stc
ljmp
fimull
fstpl
or
jmp
sbb
ljmp
popf
sbb
call
adc
and
xchg
mov
add
dec
lretw
loopne
push
jle
sub
loope
cwtl
pop
into
mov
es
popf
daa
pop
or
ljmp
outsl
jle
adc
in
cmp
int
inc
xor
push
lea
jbe
dec
dec
push
xor
cli
adc
or
andb
std
xchg
adc
lods
ja
movsl
sub
cmp
pop
mov
adc
mov
mov
mov
cmpsl
loopne
mov
xor
pop
sub
dec
push
sub
test
dec
stos
mov
loope
add
into
push
clc
sub
jle
loop
shrb
outsl
sub
insl
icebp
pop
xchg
bound
inc
jno
addr16
add
mov
shl
dec
push
int
ficoms
aaa
sub
pushf
push
mov
cmp
js
fadds
xchg
out
mov
stc
rcrl
imul
ret
icebp
in
or
data16
leave
fsubrs
mov
mov
inc
inc
xchg
adc
or
sbb
or
ret
dec
dec
push
dec
lcall
add
pusha
push
sub
dec
andl
outsb
adc
insl
add
jle
mov
inc
push
jle
xor
sub
gs
cmp
xchg
pop
cmpl
xchg
xchg
pop
pop
inc
and
inc
daa
push
sbb
push
mov
cmp
dec
mov
adc
inc
mov
cmp
jl
xor
jno
mov
mov
sti
out
cmp
cmp
sti
push
mov
mov
pushf
loopne
and
repz
jae
jbe
cmp
shll
orl
dec
push
mov
enter
dec
pop
fnstcw
sahf
mov
mov
test
cs
inc
xchg
pushf
stos
ret
cmp
fstps
add
cli
mov
or
jnp
xchg
pop
cmpsl
out
and
and
mov
jp
pop
int
out
addr16
call
and
or
xchg
mov
rorb
mov
mov
dec
push
fs
negb
push
aas
fstps
pop
cmpsl
sti
inc
or
mov
xchg
mov
in
outsb
inc
sbb
popf
and
mov
je
divb
jno
and
mov
pop
sub
rol
sbb
ret
out
pop
mov
clc
push
addr16
out
jns
add
scas
adc
cmp
fistpll
and
cmp
scas
ds
aam
out
jle
mov
cmpsl
push
mov
dec
or
into
dec
xchg
jl
push
jge
dec
xchg
push
fnstsw
inc
xchg
adc
cmp
xlat
cmp
lahf
pop
sub
das
aas
jnp
test
push
cmp
aas
dec
fdivrs
cli
sub
call
lods
cltd
inc
jns
jle
dec
xchg
in
rcl
js
arpl
clc
jmp
jmp
cmp
jno
out
lds
pop
jb
cmpsb
mov
cmp
add
insl
mov
enter
pop
ret
icebp
imul
data16
lock
pusha
push
adc
lods
paddusw
divl
leave
imul
cwtl
xor
mov
push
icebp
adc
mov
ds
xor
ret
dec
pushf
imul
fcompp
fisubrs
xchg
xor
inc
int
int
jae
or
jmp
mov
std
pop
or
out
aas
in
shr
mov
std
xchg
sbb
hlt
popa
repnz
rorl
inc
scas
dec
sbb
fsubr
in
fsubs
cmp
jb
cwtl
mov
or
jb
scas
jecxz
pop
dec
jno
in
sub
inc
in
fs
or
mov
mov
sub
ljmp
insb
fidivrs
sbb
push
mov
fcmove
es
dec
in
outsb
popf
shll
add
call
cmpsl
inc
lcall
mov
xchg
test
shll
cmpsl
daa
jecxz
cmpsb
enter
cmc
test
xor
jp
xchg
mov
pop
sub
or
sbbl
stc
jle
cmc
pop
mov
inc
lret
jae
mov
xchg
dec
cmp
and
test
and
fnstenv
imul
sahf
push
repnz
out
cmp
ret
std
loope
es
data16
gs
xor
incb
es
push
add
mov
fcompl
jle
test
sbb
cmp
imul
fwait
and
int3
std
mov
jp
adc
mov
cltd
sbb
and
sbb
ja
pop
or
sub
mov
sub
mov
sub
out
fs
and
lods
imul
cmp
mov
shrd
xchg
repz
stos
jo
jmp
mov
scas
push
and
enter
dec
sub
je
adc
mov
inc
mov
adc
cltd
push
mov
pop
pop
mov
adc
loopne
lahf
es
dec
pop
test
and
pmaxsw
xchg
cltd
test
daa
sub
push
lods
loopne
scas
xchg
lea
fsts
imul
imul
fisubs
mov
lds
imull
adc
cmp
popf
shll
or
xchg
push
in
movsb
adc
mov
cmp
mov
add
div
aas
imul
mov
js
lds
sarl
leave
and
mov
in
push
dec
mov
iret
lcall
inc
rcrl
inc
cmp
inc
xor
insb
jl
jbe
popa
std
lahf
mov
test
fnstcw
cmp
aam
pop
in
cmp
or
addr16
lock
ret
pop
dec
jl
cld
xor
out
mov
sub
pushl
and
adc
adc
dec
jne
inc
sti
pop
and
dec
fstpt
sub
pop
fldcw
xor
xchg
xchg
cwtl
lcall
ret
inc
sti
pop
addr16
dec
imul
xchg
push
shlb
add
into
cmova
mov
sbb
ds
pop
inc
add
and
xchg
rclb
cmp
cwtl
pop
lret
push
stos
ljmp
pop
or
bound
or
xchg
pop
push
in
push
std
mov
mov
or
stos
mov
mov
mov
ret
stc
pop
lret
fcomp
testb
imul
adc
sbb
jns
xor
cmc
mov
xor
mov
std
shl
ret
mov
add
pop
sub
sub
add
push
and
gs
add
push
inc
cmp
cli
pop
dec
sub
sbb
xor
jno
movsb
push
test
addr16
xchg
and
push
pop
cmp
mov
add
jmp
mov
jge
lahf
jge
jbe
mov
push
adc
xor
imul
cmc
jne
mov
test
rcrl
bound
push
dec
imul
jle
cmc
roll
push
or
cmpsl
lahf
into
ret
test
push
daa
out
jecxz
or
cmc
shl
mov
flds
mov
fnstenv
lods
int
lock
push
dec
lcall
adc
pop
movsb
xor
mov
mov
mov
dec
pop
pop
dec
negb
ret
pop
in
dec
mov
aad
cmp
dec
adc
vmovaps
push
jae
add
insl
cmp
test
push
jge
imul
adc
dec
in
repz
lods
pop
ss
in
shrb
dec
mov
shlb
in
add
fld
jbe
data16
icebp
iret
aaa
addr16
sbb
enter
and
inc
adc
pop
lcall
mov
xor
jecxz
mov
cmp
cmp
sbb
insb
xchg
mov
mov
fs
mov
movsb
dec
lcall
xchg
mov
enter
sbb
mov
stos
imul
push
xchg
mov
lret
dec
mov
mov
and
push
mov
test
iret
xchg
jb
imul
lahf
jecxz
mov
xchg
leave
in
cld
mov
cmovae
rorl
push
popf
push
mov
adc
dec
ss
jmp
stc
cmp
add
jae
lock
mov
lret
push
xor
or
mov
lret
jae
shlb
lcall
push
shlb
mov
and
dec
xor
aad
and
push
pop
rcr
les
pop
daa
out
in
jmp
push
mov
add
inc
out
sub
fcmovbe
popa
das
pop
les
or
sub
lahf
in
leave
push
xor
into
push
data16
sahf
sbb
cmc
add
or
cmp
imul
in
mov
adc
jle
cmp
mov
pop
sbb
cmp
fsub
test
dec
repz
cmp
mov
xlat
and
rorb
xor
mov
push
mov
push
xor
clc
sbb
pop
jecxz
movsl
cmp
cmp
mov
sbb
ja
push
lods
mov
lds
jbe
and
sbb
dec
aad
cmpsl
mov
mov
jge
ja
das
adc
push
addr16
fisubrs
mov
pushf
aam
dec
test
in
movsl
inc
jmp
imul
sti
sarb
repnz
outsl
addr16
inc
push
xchg
stos
into
jp
repz
jns
adc
cli
pop
mov
stos
js
sarl
mov
insb
xor
and
mov
and
fs
hlt
pop
popf
jbe
loop
insl
mov
push
ljmp
lds
dec
jl
and
hlt
test
inc
mov
insl
mov
aas
imul
push
fs
adc
cld
aaa
jno
cld
fdivrs
xchg
mov
lea
sub
mov
mov
sub
lcall
inc
inc
inc
cltd
loope
add
outsb
lock
test
das
xor
jge
insl
lret
add
pushl
cli
sub
pop
push
fldl
cmp
cs
add
sbbl
pushf
popa
lock
xor
and
or
imul
sbb
fdivrs
sbb
dec
inc
out
jl
roll
jmp
enter
popf
xor
mov
jnp
push
out
hlt
js
cli
dec
jecxz
hlt
nop
adc
es
mov
xchg
shll
jmp
test
aam
mov
lahf
rorl
hlt
aaa
xor
jecxz
fcmovnb
outsb
fs
test
daa
dec
test
arpl
mov
cltd
pop
aaa
movsb
shll
sbb
das
outsb
daa
repnz
sub
mov
mov
add
stos
xchg
jno
subl
pushf
xorb
or
cmp
jb
ret
add
xor
ja
fldl
inc
push
data16
dec
pop
stos
imul
push
scas
inc
jl
into
push
inc
in
addr16
xor
into
mov
push
roll
cmp
stos
ss
jl
cmp
lcall
mov
movsl
push
sub
xor
push
and
pop
repz
out
xor
adc
lods
mov
shll
int3
hlt
xchg
out
test
xor
mov
xor
fdivrp
ljmp
pop
mov
lea
ds
jecxz
scas
sbb
xor
xchg
mov
adc
adc
hlt
sbb
pop
in
outsb
jno
loopew
push
notb
cmp
lods
popf
es
sahf
pop
stc
pop
jl
stos
fwait
in
mov
adc
cmp
lret
or
std
mov
fisubs
outsb
xchg
outsl
and
sbb
fmull
add
loop
jcxz
push
aad
aam
cli
scas
mov
cli
popf
push
ret
bound
xchg
dec
sbb
addb
icebp
jae
pop
push
push
cs
mov
mov
mov
push
mov
mov
sub
rcll
call
test
mov
adcl
aad
imul
int3
mov
cld
in
scas
xchg
in
jnp
leave
xor
int
arpl
xchg
movsl
int3
das
xor
enter
pop
and
test
ljmp
mov
and
cmpsl
xor
xor
iret
sti
mov
pop
push
inc
pop
mov
push
out
xchg
cs
lea
shl
dec
ret
stc
jge
xor
sub
add
pop
or
xor
pop
sbb
sbb
bound
int3
mov
mov
imul
xchg
cmpsb
pop
call
int3
mov
pop
aas
xchg
pusha
jg
or
jecxz
pop
jle
xor
test
push
sbb
xchg
rorb
mov
mov
and
dec
clc
push
xchg
lret
cwtl
dec
imulb
mov
dec
mov
mov
aaa
sbb
mov
push
mov
mov
cmp
pop
cmpl
adc
lcall
mov
shll
and
jns
mov
xchg
aad
mov
cmpsb
pop
ss
add
js
test
repnz
cwtl
mov
fs
sub
ss
movsl
mov
movsl
or
cmp
mov
mov
das
pop
icebp
outsl
hlt
mov
adc
mov
pusha
sub
push
sub
mov
jge
lods
mov
je
repz
sub
out
xchg
dec
or
mov
jnp
ret
sub
pop
dec
sbb
outsb
stos
shlb
jbe
mull
push
es
sub
push
pop
pusha
pop
mov
add
addb
bnd
fwait
jbe
popf
outsb
rorb
and
loope
test
cmc
sbb
push
inc
add
xchg
outsb
xchg
es
jecxz
out
cltd
hlt
popa
add
or
and
push
mov
sahf
pop
sbbb
or
ja
aam
call
jp
adc
or
outsl
cmp
ss
or
cld
out
xchg
add
xchg
push
ss
scas
js
inc
xchg
cld
mov
mov
js
inc
or
mov
push
js
and
in
orl
push
lds
and
loop
add
xor
mov
sbb
repz
das
fbstp
stc
icebp
insl
add
int3
pop
add
add
and
xchg
mov
dec
bound
jae
lds
push
mov
pop
fisttpl
cmpsl
fisubl
sub
out
xor
mov
xchg
xor
enter
fisttps
add
out
dec
fsubl
pop
shl
push
fldenv
cltd
fstps
mov
js
push
and
fyl2xp1
scas
pop
jmp
and
mov
fildll
cli
or
sbb
bound
gs
pop
scas
mov
aas
push
aas
sub
jge
pushf
fldenv
pop
mov
sbb
dec
pop
push
das
hlt
lods
add
or
test
push
jnp
push
into
mov
daa
and
js
xor
jmp
pop
out
jno
mov
jecxz
push
cmc
shll
out
inc
mov
nop
scas
jmp
dec
inc
xor
adc
cmc
xor
push
and
cltd
jno
gs
call
mov
xor
cmp
mov
sbb
and
jns
es
mov
cld
sbb
aas
aam
icebp
ljmp
push
icebp
pop
mov
aaa
cmpsl
es
jo
dec
mov
jnp
outsl
iret
ja
ficoms
jnp
and
inc
and
das
add
pop
and
fmulp
loope
test
fcmovb
fwait
vpand
leave
add
cmp
in
es
mov
xor
imul
and
mov
pop
xchg
xchg
xchg
out
push
fstl
cmpsl
dec
dec
aam
cmp
jmp
imul
lds
aas
sbb
scas
gs
jo
lret
stc
xchg
out
je
pop
xor
shrb
xchg
adcb
iret
outsb
xchg
jp
outsl
inc
mov
cmp
shll
imul
or
mov
xchg
jmp
pop
std
in
mov
jne
pop
dec
add
into
hlt
fists
test
std
adc
xchg
fstpl
and
arpl
cs
or
clc
add
jb
mov
test
inc
outsb
jl
pop
inc
jbe
cmp
jb
fwait
xchg
fucomp
xchg
sti
mov
leave
or
mov
imul
mov
push
out
lret
movsb
and
pop
mov
push
das
stc
cmpsl
cmp
dec
xchg
jecxz
and
mov
and
xchg
nop
lcall
mov
cld
mov
lcall
cwtl
sub
sarl
in
mov
enter
rorb
push
jle
push
push
mov
ffreep
subl
cmp
jle
stc
jb
push
and
add
int3
jg
sarb
jno
or
jnp
xchg
dec
outsl
xchg
fstl
mov
adcl
xor
pop
sub
inc
insl
icebp
pop
or
ficoms
fs
sbb
mov
andl
push
cs
mov
xchg
xchg
sbb
sahf
je
dec
pop
andb
stc
or
imul
mov
dec
sub
stos
xor
in
repz
lods
mov
mov
adc
faddp
add
shl
lcall
ret
inc
pop
push
in
es
repnz
sbbl
xchg
shll
and
sbb
mov
and
adc
mov
test
sar
adc
and
xor
cwtl
insb
loopne
xchg
push
xor
cmp
clc
inc
cmpsl
or
lock
jne
and
jge
pop
std
sub
or
push
fs
imul
mov
shrl
dec
sti
outsb
stos
out
mov
scas
nop
dec
mov
insl
xor
fstps
jns,pn
popa
loopne
aam
and
ret
cmp
sbb
outsb
stos
and
jmp
push
mov
or
sbb
scas
insl
outsl
ret
mov
mov
popf
outsl
xor
imul
push
int
into
lcall
mov
cmc
fdiv
or
xchg
mov
adc
stc
imul
into
lret
mov
mov
add
out
sbb
ja
jne
ret
sub
lret
jo
or
pop
aas
iret
jecxz
mov
fsts
sub
sti
fs
mov
aad
push
pop
or
loopne
lahf
icebp
nop
lret
lods
sarl
cltd
jg
cmp
jmp
cli
loope
mov
push
cmpl
add
inc
nop
jmp
fldt
aaa
lods
push
shrb
fdivrp
out
lods
pop
mov
mov
or
gs
push
push
dec
pop
popa
xchg
sahf
cltd
inc
push
movsl
das
leave
in
cmp
roll
cmp
pop
adcl
lcall
mov
and
imul
push
jno
pusha
pushf
lret
dec
es
adc
mov
sub
ret
movsl
add
mov
loope
mov
in
and
mov
fwait
insl
cmovl
mov
imul
cmp
sub
pushf
dec
out
xchg
inc
add
ret
mov
cmpsl
add
sbb
scas
movsl
xchg
stc
lahf
xor
ret
sarl
data16
dec
notb
cmp
push
movsl
add
dec
pop
inc
inc
and
pshufw
sbb
and
add
mov
add
dec
pop
xorl
lods
out
xchg
test
sub
in
pop
adc
imul
mov
lods
mov
add
scas
pop
mov
das
test
nop
adc
ret
cmpsl
inc
mov
mov
push
bts
add
negl
ss
bound
jp
adc
jp
je
jo
mov
jl
imul
pop
push
loop
push
nop
push
pop
rorb
pop
jnp
jns
xchg
or
scas
movsb
sbb
push
andl
push
ficoms
fldenv
mov
out
call
out
push
mov
ret
in
push
push
js
xor
insb
loopne
lea
ja
icebp
and
push
xor
mov
flds
js
ljmp
lods
adc
xchg
pop
or
add
outsl
in
mov
jno
add
lret
ja
roll
rorb
leave
and
push
mov
jl
rorl
int3
test
pop
jo
cmp
incb
ja
ss
mov
push
inc
icebp
out
sub
in
stc
xchg
push
and
or
mov
add
ja
popa
sbb
xorl
out
mov
jns
addr16
popa
xchg
push
dec
mov
cmp
xchg
in
jns
jecxz
repz
inc
push
cmp
ljmp
cld
scas
movsl
mov
cltd
outsl
repnz
fnstenv
test
pop
adc
pop
ljmp
decl
or
fs
adc
push
cmp
fsubs
mov
cld
xchg
leave
inc
sub
mov
xlat
popf
xchg
pop
or
pop
out
mov
orb
xor
xchg
ficomps
fs
mov
gs
fstpt
movsl
movsl
dec
shll
dec
xchg
jns
push
fcmovnbe
and
xchg
mov
mov
xchg
dec
loop
fisubrl
enter
mov
enter
faddl
and
add
lret
add
cmp
test
stos
cmp
scas
mov
push
dec
ds
insb
fsubs
fildl
lret
jae
outsl
dec
insl
stc
push
fldenv
bound
pop
int
adc
adc
cvtps2pi
test
sahf
jmp
pop
xchg
loopne
test
or
aas
js
daa
ds
push
in
or
scas
out
jno
cmp
mov
push
push
mov
lock
mov
push
dec
adc
repz
inc
in
sbb
add
sub
jge
mov
pop
movsb
cmp
sti
jo
and
dec
out
and
xchg
pushf
sub
xchg
ss
or
xchg
jne
dec
int3
jg
cli
hlt
mov
mov
push
mov
or
popa
loop
clc
push
pop
popf
add
subb
sahf
jge
repnz
lcall
shrb
es
and
jp
jge
test
mov
stos
sbb
shlb
stc
lock
adc
jg
dec
push
aaa
jge
mov
cmp
fstpt
push
jg
push
dec
in
pop
xchg
std
rcrb
pop
repz
rorb
iret
xor
ss
push
popf
lock
mov
pop
icebp
mov
xchg
jnp
dec
push
sarl
xor
xor
dec
sbb
pusha
jno
pop
jns
add
out
jb
jae
or
jo
fcmovnb
and
mov
lcall
or
hlt
add
aas
push
into
test
stos
sbb
push
pop
stos
xchg
dec
dec
cmp
dec
sbb
inc
jp
stc
std
das
out
movsl
cmp
lahf
jmp
sub
mov
or
and
xchg
mov
mov
jae
lcall
push
jo
push
cwtl
fstpl
out
daa
aas
xchg
scas
in
adc
sub
into
rclb
jmp
outsl
ret
into
xchg
bound
mov
ret
push
repnz
mov
sub
je
clc
push
and
mov
sub
inc
pop
outsl
in
mov
xchg
mov
push
fbld
insl
lds
xchg
repnz
and
xor
int
pop
mov
xor
mov
push
adc
xchg
jns
jl
sbb
movsl
push
les
jb
jl
inc
enter
fsubrl
xchg
in
mov
mov
or
gs
inc
mov
cmp
mov
pop
pop
shll
aam
fmuls
fdivrs
js
fmuls
fs
cmc
push
aaa
mov
repnz
and
jle
pop
push
mov
mov
sarl
xchg
push
pop
fiadds
sbb
pop
je
or
mov
pop
cmpsb
xor
repnz
std
cmp
aam
ficompl
sarl
xchg
mulps
xor
push
ljmp
sub
fsubl
xchg
xchg
out
cmpsb
jo
inc
sbb
mov
add
push
xchg
mov
cmpsl
xor
or
xchg
adc
lds
xchg
jo
and
icebp
or
ret
pushf
cmp
dec
movsb
popf
lock
ds
push
pop
sbb
jmp
cmc
inc
mov
sti
mov
stc
mov
push
psubw
sbb
sbb
xchg
mov
mov
jecxz
or
sbb
sub
or
shll
das
pop
icebp
add
aas
push
sti
leave
sbb
push
loopne
fdiv
out
icebp
sub
inc
lods
aam
aam
jge
sbb
dec
mov
mov
int
inc
dec
or
test
mov
stc
mov
fldenv
shl
push
arpl
mov
dec
adc
cmp
aaa
stc
inc
push
pop
pushf
lock
daa
jl
mov
ja
cmp
add
out
cmp
pop
push
subl
shrl
jecxz
lcall
mov
mov
xchg
shrb
sub
mov
and
mov
push
arpl
pop
in
adc
mov
fdivl
xor
test
flds
adc
push
cmp
cmp
jecxz
adc
fmull
andl
push
push
test
imul
add
shll
dec
pop
hlt
push
test
pop
or
inc
lods
mov
sub
jns
lods
mov
in
imul
add
mov
jns
sbb
mov
fsub
ss
mov
or
and
push
ljmp
mov
jg
xchg
fwait
push
adc
std
pop
dec
mov
mov
popf
mov
cli
cld
xor
mov
pop
repnz
in
sub
cmpsb
shll
cmp
jmp
and
fsubl
cli
mov
leave
jns
cld
cmp
inc
scas
xor
xor
push
cmpsb
call
dec
sub
loop
out
jne
mov
andb
loop
sub
movsl
out
in
ljmp
in
xchg
into
out
mov
movsb
insl
das
shll
lods
sub
addr16
push
sbb
jmp
dec
cmpsb
lret
adc
mov
imul
dec
rcrb
stos
ja
pusha
mov
int3
jnp
js
mov
cmp
mov
ljmp
push
or
mov
xor
fistpll
sbb
lret
mov
mov
sbb
push
push
xor
and
mov
and
push
stos
pusha
mov
mov
in
mov
pop
xor
addr16
xor
jbe
mov
fildll
int3
or
add
push
jbe
jle
fcmovne
adc
sub
repz
jp
loope
out
dec
mov
dec
fs
fcompl
jb
ljmp
mov
loopne
inc
or
jecxz
fcompl
inc
jg
notl
cmpsl
pop
push
mov
push
mov
mov
aaa
movsb
rcll
push
cmp
and
pop
xchg
mov
and
mov
fdivrl
adc
aad
add
icebp
xor
sub
jns
rolb
ret
mov
sahf
pop
or
mov
push
test
add
stos
cmp
scas
or
mov
and
ret
mov
gs
mov
fwait
push
inc
adc
lea
ss
xlat
sbb
aaa
push
jne
mov
add
test
sarb
inc
out
stc
bound
mov
mov
jmp
push
lret
popf
repnz
jecxz
push
incl
shlb
call
xor
sbb
pop
sbb
cmp
mov
or
pusha
inc
je
fisttps
pop
xchg
or
arpl
jp
add
sub
lret
push
ja
and
mov
js
lret
outsb
mov
pop
mov
xor
xchg
negl
dec
mov
mov
xchg
jb
mov
leave
add
idivb
gs
or
or
dec
faddp
push
cmpsl
mov
flds
sbb
daa
jge
cmc
movb
aad
pop
fcomps
sbb
hlt
ss
gs
mov
loopne
insb
aad
and
inc
loop
add
dec
cmp
mov
hlt
loopne
jle
or
xchg
add
bound
sub
data16
cmc
hlt
gs
sahf
inc
shrb
push
cmp
push
fidivl
mov
stos
mov
mov
push
push
add
jo
cltd
jb
movsb
lods
outsl
pop
xorb
les
dec
cltd
lods
xchg
loopne
std
lcall
imull
shl
jge
stos
mov
dec
outsl
imul
and
push
adc
and
push
cmp
sub
clc
jbe
lea
cmp
and
ud0
test
jp
sub
mov
ljmp
insl
push
pop
dec
cmp
xchg
dec
lea
pop
loope
jge
int3
cmp
sbb
fwait
and
jg
cmp
mov
pop
jb
sbb
cmp
inc
push
pop
mov
jg
int3
jno
sub
pop
push
xor
mov
push
jle
imul
mov
cli
mov
ja
push
int3
jns
addr16
test
loop
scas
scas
fbld
push
sub
xlat
fidivrl
insl
push
jp
jo
add
cmp
xchg
mov
popf
lock
aas
mov
dec
xchg
ret
mov
sbb
cltd
dec
sbb
stc
and
jg
aaa
inc
xlat
stos
jbe
jae
fistl
pop
xchg
adc
rorb
add
stos
mov
dec
and
fcoms
inc
lock
jge
jae
and
and
xchg
setns
or
popa
and
jmp
push
mov
jae
mov
rcrl
add
icebp
inc
or
or
xlat
sbb
jno
iret
fldenv
mov
fs
int
jb
and
cmpsb
cld
enter
mov
lret
mov
mov
jo
rorb
push
inc
xchg
popa
fldcw
add
ljmp
js
jmp
rorl
xor
mov
cld
jmp
repnz
xor
xchg
aaa
insb
push
jg
decl
add
std
orl
inc
pushf
xchg
pop
xor
inc
imul
pop
add
jmp
jae
xchg
in
lret
mov
jl
adc
xchg
loop
push
loope
xor
sbb
xchg
dec
cmp
sub
cmp
icebp
insb
mov
sub
cltd
test
sarb
mov
or
mov
mov
push
mov
sahf
and
loop
pop
mov
fmull
mov
adc
and
jae
imul
sbb
clc
cmpsl
pop
pop
sbb
fildll
cmp
lods
pop
addr16
imul
adc
cmpsb
jno
sub
xchg
ds
hlt
adc
addb
rol
and
ret
inc
push
lahf
out
inc
mov
pushf
xor
mov
arpl
or
dec
inc
xchg
push
mov
mov
sub
lret
dec
mov
push
add
in
cmp
popf
pop
fsubs
sti
xor
mov
fsub
pushf
cmpsl
pop
dec
cmpsb
enter
sbb
repz
push
xchg
sti
sub
mov
sub
stos
jb
cmc
adcl
add
shll
dec
imulb
jg
jne
push
out
imul
jmp
inc
clc
shlb
aaa
mov
sbb
mov
xlat
imul
dec
cmp
sub
lods
lods
sbb
sub
mov
xchg
add
sub
push
jne
push
sub
imul
mov
int3
mov
inc
leave
incb
sbb
in
xchg
jae
test
divl
mov
daa
sbb
notb
cmp
or
outsl
push
loopne
negb
inc
adc
push
lods
out
mov
lret
dec
add
movsb
call
sub
jecxz
sbb
hlt
sbb
cmp
lret
insl
cmp
cmp
mov
or
lcall
stc
icebp
sbbb
mov
scas
test
jb
xchg
add
enter
adc
addl
sbb
jo
jbe
stos
aaa
call
ret
and
jnp
jmp
test
xadd
pop
and
out
add
and
mov
pop
cld
and
push
in
ret
push
add
fldcw
int3
cmp
js
push
data16
and
dec
sbb
adcl
dec
cmpsb
jmp
sub
cmp
mov
sub
jg
call
and
daa
sbbl
lret
mov
scas
mov
sbb
in
daa
imul
sbb
stos
xor
vmovntps
xor
out
mov
enter
jle
repz
jnp
or
daa
in
cmpl
cmpsl
pop
hlt
in
mov
pushf
sub
mov
adc
mov
add
fsubl
std
pop
push
mov
dec
sahf
inc
repz
pop
call
sub
push
fs
test
lea
pushf
je
add
test
push
mov
adc
xor
std
lret
cmc
lods
out
cli
mov
mov
clc
pop
cmc
testl
loopne
and
fimull
imul
shl
jne
mov
xor
fstpl
cli
add
movsb
dec
mov
mov
jg
pop
popl
xchg
xor
inc
jnp
cmpl
push
sbb
mov
hlt
into
lcall
mov
dec
jns
jp
inc
push
adc
cmp
jg
fnstsw
gs
movsb
fucomip
push
js
or
mov
pop
loope
fistpl
fdiv
imulb
dec
pop
push
stc
test
popa
lret
sbb
movsl
xor
into
cli
adc
mov
or
pop
sbb
add
cmp
leave
or
fwait
addb
inc
jnp
jb
xor
sbb
pop
dec
scas
inc
insb
ja
cmp
popf
out
fld1
cld
inc
mov
icebp
vmwrite
scas
and
sar
cmpsb
dec
loopne
jns
lret
sarb
out
jp
mov
jmp
imul
fucom
jmp
or
or
gs
pop
inc
je
sbb
pusha
ret
in
aaa
imulb
pop
cmpl
popa
lcall
movsl
pushf
mov
mov
dec
out
sub
fwait
addr16
xor
xchg
push
pop
loope
sbb
push
daa
jge
xchg
loopne
mov
xor
mov
pop
aad
push
imul
mov
add
fnstcw
je
dec
xchg
push
push
xchg
stc
and
cmp
mov
mov
dec
push
xchg
xchg
mov
add
ret
add
pop
jecxz
jle
xchg
imul
into
push
add
andl
ret
pop
imul
nop
aas
out
inc
cmp
insb
int
mov
push
sbb
mov
pop
stos
dec
arpl
push
jle
in
stos
sti
orl
xchg
out
scas
js
insl
mov
jo
and
aam
cmp
pop
xchg
inc
les
xor
mov
sti
rorb
insb
loopne
fucomip
inc
jo
loopne
adc
jl
xchg
adc
dec
lahf
pushw
cmp
dec
ss
rolb
and
mov
mov
cmp
xchg
int
jge
call
cld
loope
mov
aas
out
cvtps2pi
rolb
mov
es
mov
ret
or
inc
outsl
mov
sbb
sub
or
insb
jp
fbld
cmp
insb
xchg
xor
xchg
lds
cmp
insb
cmp
pop
stc
cmp
cmpsb
xlat
clc
shlb
arpl
add
adc
in
mov
loop
addr16
scas
sbb
ja
and
lret
xor
dec
dec
push
mov
negl
addb
dec
xchg
or
lcall
and
mov
bound
testb
clc
mov
bound
sub
push
insl
and
mov
push
or
icebp
xlat
xor
jl
mov
imul
data16
outsb
fwait
repz
test
shlb
loop
and
jns
vpunpckldq
loope
mov
cltd
push
mov
fcomi
mov
and
mov
dec
loop
clc
rcrl
xor
test
cmpsb
sahf
dec
dec
mov
adc
sub
loope
cld
aas
and
repz
push
sbb
dec
jne
ja
sbb
xchg
pop
or
or
jl
imul
push
pop
cmp
sub
adc
gs
sub
or
push
lock
sub
xchg
sti
stc
push
dec
push
mov
outsl
mov
cmpsb
push
inc
pop
in
xlat
cld
in
jp
xor
xchg
push
mull
mov
adc
insl
mov
lea
push
ror
add
das
jg
ret
addb
inc
loope
and
mov
cmpsb
pop
pop
jle
dec
cli
sub
add
xchg
into
and
lods
data16
sub
xchg
sub
enter
dec
lret
cmpsb
fisubl
sbb
pop
add
dec
mov
iret
pop
dec
ljmp
das
lahf
push
je
sbb
dec
ret
ss
adc
add
push
lods
xchg
addl
jno,pt
cmp
in
test
das
bound
xchg
out
mov
inc
adc
andl
inc
test
mov
enter
mov
inc
int3
scas
addb
daa
or
push
int3
fdivrl
mov
cmp
cmc
mov
repnz
les
fwait
sub
leave
push
xor
or
out
ret
mov
mov
pop
pop
fst
sub
lcall
rcrl
sub
cld
cmp
out
in
or
mov
mov
push
sub
stc
out
daa
aad
xorl
sti
add
adc
pop
mov
mov
pop
repnz
dec
daa
into
lock
outsl
mov
pop
mov
ss
iret
add
test
xchg
adc
lret
cmpsl
out
ss
push
mov
clc
pop
inc
push
push
adc
cmp
inc
sub
imull
divl
ss
add
jae
cmpsb
xor
inc
jg
jmp
jge
jnp
outsb
sarb
test
maxps
fwait
inc
call
enter
mov
lods
xor
jl
sub
pop
pop
loop
cmp
popa
inc
popa
scas
xchg
mov
lahf
daa
pop
in
add
ss
ficomps
test
sbb
mov
pop
xchg
add
cmpsl
push
xchg
scas
scas
call
clc
push
sti
inc
mov
or
mov
mov
xor
jno
test
inc
xor
fbstp
mov
lcall
adc
fadds
jne
call
stc
movsl
add
aaa
jae
pop
add
xchg
cmp
mov
loop
xchg
cmc
ficomps
insb
shll
xor
imul
in
cli
fstpl
and
or
xchg
cld
ds
xor
outsb
pop
cmp
movsb
cs
test
fnstenv
cmpsb
jne
insl
xchg
popa
subb
fisttpl
vmread
jl
ljmp
push
inc
mov
call
mov
cmpsl
rcl
retw
xor
shll
arpl
enter
test
out
push
add
out
adc
aas
mov
jb
aam
jns
ret
sbb
popf
jp
idivl
push
and
jecxz
jp
mov
xchg
mov
or
aas
cs
ja
outsb
mov
xchg
and
sbb
jno
xchg
std
inc
aaa
into
out
bound
int3
inc
jmp
adc
mov
inc
xchg
or
cmp
push
lock
clc
sub
sub
rorb
nop
mov
xchg
popf
lret
push
lods
fsubr
test
mov
pop
push
xor
ds
sub
in
fstps
ja
jns
mov
mov
in
and
rorl
add
testl
insl
sub
xchg
dec
roll
jl
pop
addr16
stos
inc
repnz
and
ror
or
enter
add
lcall
xchg
cmc
sbb
or
pop
add
jnp
test
mov
xchg
repnz
xor
sbb
popa
sub
aam
sahf
mov
les
jae
es
inc
aam
iret
es
loope
adc
pop
lret
insb
xchg
mov
out
inc
lea
or
lods
and
cmp
adc
pop
xorb
in
icebp
lcall
loop
call
xchg
cmp
mov
fmul
js
jne
lret
xchg
jecxz
loopne
lret
add
mov
js
das
cmp
pop
imul
stc
adc
in
stos
cmp
sub
cmpsl
inc
sbb
negl
out
jno
pop
jmp
subl
fisttpl
js,pt
sub
aam
in
and
cltd
sti
or
sahf
and
pop
sub
shl
cltd
fs
mov
sub
pop
inc
or
stos
jo
pop
dec
ja
add
lcall
dec
nop
mov
popaw
and
stos
leave
adc
mov
and
mov
pop
sub
sbb
insb
adc
jecxz
cmp
inc
mov
cmp
sti
dec
sbb
mov
xchg
stc
mov
stc
xor
ret
int3
out
imul
jmp
mov
push
sarl
mov
inc
mov
faddl
call
leave
add
push
repz
and
outsl
pop
push
xor
mov
mov
inc
add
push
adcl
dec
mov
in
and
hlt
hlt
and
test
jnp
out
jge
pop
icebp
xchg
jp
mov
xorb
jle
add
mov
das
add
ret
mov
push
and
push
cmp
imul
aam
iret
lss
icebp
imul
xchg
lret
sbb
es
divb
and
add
daa
mov
or
sahf
mov
push
dec
add
pop
lret
iret
cmp
cmpb
push
shll
mov
in
ss
cld
xchg
lcall
sarl
lock
sbb
inc
sbb
xor
pop
inc
xlat
stos
xchg
pop
xchg
pop
xchg
push
or
sbb
cwtl
cwtl
test
mov
mov
push
lock
add
push
inc
mov
mov
xor
add
inc
push
shll
xlat
fiadds
sti
jb
fsqrt
dec
push
inc
push
mov
jb
or
in
out
dec
repnz
push
rclb
dec
push
arpl
rclb
push
xchg
test
imul
fmull
sbb
or
ror
mov
mov
scas
cmpsb
aas
test
xchg
push
add
gs
push
cli
gs
dec
xor
sbb
jecxz
pop
out
and
add
xchg
jno
add
sbb
pop
cmpb
mov
mov
les
ja
pusha
sbb
mov
in
xchg
loope
in
and
ss
cmpb
sarb
or
outsb
cmc
aas
and
mov
dec
lods
push
xor
imul
push
mov
xlat
insl
dec
fidivs
mov
ja
imul
dec
arpl
lcall
lret
adc
nop
pop
adc
inc
xchg
mov
wrmsr
popf
out
pop
test
inc
mov
popf
es
sbb
or
popf
movsb
xchg
aad
mov
insl
imul
mov
inc
loopne
xchg
ucomiss
lahf
movsl
jb
pop
test
mov
repz
repz
xchg
lea
push
out
gs
das
add
adc
insl
daa
or
outsb
lods
fnstsw
imul
pop
add
jb
xlat
dec
dec
mov
push
out
leave
test
test
sub
sti
aad
in
and
rcl
push
mov
fs
fstp
cli
cli
int
repz
loop
cltd
decb
je
push
gs
and
push
fdivl
jge
mov
push
loop
jmp
cld
jbe
fdivr
int
call
xchg
ljmp
adc
add
ss
lods
mov
mov
mov
stc
inc
xor
subl
mov
aaa
aam
mov
and
loop
jge
mov
pop
stos
scas
dec
or
sub
jl
fs
sarl
std
movsl
into
or
adc
lret
fs
notb
sub
adc
add
push
pop
lods
movsb
cmc
jmp
lock
test
or
repnz
test
xchg
aas
push
test
in
outsl
or
insl
jbe
inc
fwait
shlb
dec
cmp
cld
push
sub
xchg
sti
push
mov
popf
out
adcb
jge
test
inc
pop
xor
push
cmpsb
scas
jae
movsl
mov
mov
pop
stc
xor
cwtl
xchg
cmp
popa
pop
sbb
call
add
aaa
sub
pop
cmp
mov
sarb
lock
pusha
dec
pushf
cs
pop
dec
scas
xchg
xchg
and
jb
je
lret
or
adc
push
icebp
leave
lret
and
cwtl
stos
aaa
std
cmpsl
pop
ljmp
sbb
pop
mov
mov
mov
mov
mov
sub
cmpsl
gs
or
push
fsubl
jnp
push
mov
jne
mov
sahf
push
gs
fisubrs
xorl
sbb
and
nop
je
popf
jl
pop
jns
cmp
pop
xchg
dec
pop
xchg
jmp
sbb
mov
pop
cmp
jmp
sar
or
and
lds
pop
mov
mov
mov
pop
mov
cmpsb
loope
push
jl
cmc
sbb
add
bnd
dec
in
xchg
mov
into
push
xchg
cmp
add
lds
lret
enter
and
rorl
xchg
in
out
sub
movl
sbb
loopne
add
in
xchg
or
int
mov
jp
adc
shrl
test
cmpsl
mov
iret
cs
fwait
orl
leave
pusha
int3
clc
repnz
shl
jp
cmpl
cmp
jbe
nop
pop
push
push
xchg
ret
or
jae
movb
dec
mov
adc
sub
mov
jae
inc
xlat
inc
adcl
fnstsw
es
into
arpl
mov
lahf
sarl
mov
adc
ljmp
dec
jno
add
shlb
sub
mov
pop
mov
mov
dec
xchg
mov
mov
mov
lods
pop
push
out
lret
add
mov
rol
popf
roll
cmp
and
jge
sub
clc
stos
and
pop
je
in
notb
cmpsb
add
push
inc
jl
mov
xchg
loop
les
ss
outsb
cli
in
push
repnz
mov
and
mov
out
inc
nop
sbb
mulb
inc
pop
push
out
or
cld
jb
jge
xor
xchg
pop
orl
xchg
mov
je
jle
cwtl
mov
call
jns
inc
xor
add
in
lods
or
into
cmp
int3
push
test
jae
and
int3
sarb
dec
js
cmp
mov
lcall
repz
loope
or
sahf
mov
jmp
loope
adc
aaa
or
es
add
or
inc
imul
mov
xchg
mov
and
and
dec
int
adc
lahf
sub
push
xor
sbbb
and
lock
xor
mov
mov
aas
mov
clc
std
add
dec
add
mov
mov
pop
and
and
xlat
fwait
outsl
sub
xor
cmp
xchg
jg
inc
mov
cmpsb
popa
sahf
enter
jae
sub
xor
call
dec
adc
in
lret
jmp
cwtl
rorl
lret
addr16
jb
sub
dec
arpl
outsb
es
fwait
inc
movsb
xor
mov
out
inc
outsl
movsb
jle
pusha
and
movsl
xchg
in
ljmp
sub
xlat
out
aas
jle
jb
and
test
sahf
inc
xchg
push
pop
push
jle
sbb
cmp
inc
mov
push
ss
mov
fwait
pushl
jbe
in
enter
iret
scas
les
cmp
popf
sub
stc
stos
cwtl
jb
clc
sub
jge
inc
jae
pop
or
pop
dec
mov
jle
mov
xchg
jmp
sbb
mov
mov
push
pop
jo,pt
push
int
ds
das
mov
cli
or
add
test
add
cmp
jnp
mov
cltd
clc
mov
lret
mov
sbb
stos
sub
ja
inc
mov
lods
mov
add
cmp
or
jno
je
jno
mov
adc
inc
or
cmp
mov
push
inc
int
xlat
push
jb
aaa
fistpl
incb
sub
or
stc
mov
es
fcompl
jge
test
outsb
out
cwtl
xorl
adc
or
mov
and
jbe
scas
jp
inc
jns
fcmovne
push
int3
or
js
mov
mov
lods
and
mov
mov
sbb
es
xlat
jl
dec
inc
mov
and
outsl
fs
clc
or
aas
ret
fcomps
pop
pcmpgtd
push
or
mov
fucomi
std
pusha
dec
mov
lahf
push
and
jns
sub
pop
adc
sub
push
sub
mov
pcmpgtw
adc
jnp
push
dec
leave
fwait
mov
in
ret
into
jb
sub
mov
ds
cmp
xchg
push
or
in
aam
loop
cmp
iret
push
xchg
pop
hlt
sbb
mov
mov
scas
repz
js
dec
mov
xor
jo
xlat
rcr
and
data16
sbb
repnz
test
fsubs
int
or
imul
pop
outsl
cmp
cmp
mov
inc
inc
call
mov
fisubrl
shrl
scas
out
jb
in
aaa
mov
pop
and
and
mov
aad
lods
ljmp
shlb
mov
inc
push
inc
mov
aaa
or
push
test
pop
jae
mov
dec
ret
sbb
xor
dec
stos
cmp
aaa
shll
in
jno
lret
fsubr
in
movsb
shlb
sub
or
xchg
pusha
adc
repnz
adc
out
clc
or
push
xor
movb
fs
cmpsl
rol
sbb
out
xor
data16
mov
jmp
outsl
xchg
stos
test
mov
push
cmc
lahf
or
dec
and
sbb
test
adc
ljmp
dec
add
lret
xchg
mov
xor
popa
daa
dec
rorl
adc
push
das
pop
gs
push
push
add
mov
in
dec
mov
dec
and
dec
repnz
sub
sbb
int
addl
lods
cld
sbb
rorb
popa
frstor
adc
into
pop
insb
mov
cmp
and
or
jecxz
mov
cmc
xchg
mov
sbb
scas
sahf
mov
sbb
shll
imul
fwait
gs
or
fstpt
repnz
cmpb
in
add
into
push
push
in
cld
jmp
fisubrl
mov
push
and
jmp
dec
inc
stos
jmp
dec
je
jmp
xchg
fcmovnbe
aaa
cmp
cmpsb
addr16
sahf
mov
hlt
shl
inc
rcl
cmp
fwait
outsb
mov
aas
pop
iret
jae
aam
cmpl
push
jo
sub
mov
xchg
aas
jecxz
or
push
jnp
mov
pusha
jns
inc
test
cld
xchg
push
adc
push
mov
das
jp
dec
add
inc
stos
imul
ljmp
inc
repnz
xchg
jge
aas
push
pop
push
mov
cld
jl
test
sbb
ljmp
mov
pop
mov
mov
fimuls
ds
mov
insb
in
jle
sarl
push
adc
lods
cli
mov
mov
mov
andb
and
addr16
sub
mov
inc
jecxz
sbb
or
fwait
popa
nop
out
lods
xchg
ret
sbb
jbe
out
filds
fsubrl
mov
inc
imul
mov
mov
ficoms
int
sub
mov
push
aaa
mov
mov
mov
xchg
jle
sbb
mov
and
sbb
ss
insb
movsb
das
add
inc
sarl
lock
add
sbb
shll
add
mov
lods
movsb
xlat
cli
daa
fdivrp
mov
test
and
mov
push
dec
insb
xchg
mov
outsb
jecxz,pn
test
iret
insb
aam
les
test
pop
mov
xchg
mov
movsb
mov
sti
xchg
test
mov
mov
call
or
gs
xchg
dec
jne
xor
xor
dec
out
decl
mov
clc
push
cmp
enter
addb
clc
jle
inc
mov
and
xorl
movsl
daa
mov
cmp
xchg
xchg
push
mov
js
inc
xchg
cmp
dec
xor
jno
idivl
dec
icebp
andl
jo
aad
sahf
mov
ja
push
lea
sti
nopl
or
jmp
mov
into
mov
sbb
xchg
les
aam
fldl
shrd
pop
push
flds
push
push
imull
xchg
pop
dec
cmp
jnp
daa
xchg
sarb
mov
sbb
mov
inc
push
imul
fwait
jbe
outsb
scas
rcl
mov
mov
cvtps2dq
dec
mov
lret
ja
mov
push
xlat
cmpsb
add
aad
or
push
daa
fdivl
add
test
mov
adc
sub
movsb
sub
mov
pop
sbb
xchg
sub
les
pop
xor
or
add
decl
push
dec
addb
cld
push
cld
dec
xor
fs
sbbl
push
cmp
rolb
ret
xchg
std
and
push
xchg
inc
mov
mov
dec
mov
inc
pop
adc
mov
add
dec
xchg
inc
and
sbb
push
sbb
fdivr
inc
or
add
fldl
push
test
or
pop
aam
test
inc
xor
mov
outsb
imul
pop
das
fbld
stc
rcrb
xchg
push
pop
dec
sub
mov
xchg
mov
pop
fcoms
and
push
cmp
dec
mov
repnz
cmp
adc
std
push
movsl
lahf
push
rorl
fnstenv
daa
lds
lock
jecxz
push
in
cwtl
fsubs
mov
mov
mov
sub
mov
jnp
cmp
dec
loopne
iret
sbb
test
mov
mov
jl
test
lahf
mov
lret
mov
xor
aad
pusha
and
out
sbb
mov
bound
cli
inc
mov
shrb
mov
or
popa
sarb
or
in
movsb
in
ret
aas
sbb
xor
ds
daa
or
stc
mov
popf
add
scas
sbbb
out
divl
dec
scas
adc
enter
dec
pop
pop
fbstp
sbb
xor
pusha
inc
dec
outsl
or
fs
aad
mov
inc
pop
push
and
outsl
mov
jmp
leave
popf
or
sbb
adc
jp
pop
jl,pn
inc
dec
add
aam
sti
add
out
mov
dec
cwtl
ljmp
inc
outsb
xchg
push
add
sbb
adc
out
and
clc
or
fxtract
aaa
cmpsl
jmp
cmp
call
push
nop
ror
inc
pushf
ret
rcrl
and
pop
notl
idivl
aad
adc
popa
xchg
inc
sub
push
mov
mov
sbb
inc
imul
inc
pop
mov
cmpsl
sbb
push
std
into
jl
push
push
push
push
adc
fs
mov
cmp
pop
xor
fisttps
add
xchg
and
std
shlb
fs
mov
movsb
pop
cmp
pop
adc
push
fldt
lds
dec
adc
mov
mov
std
inc
push
outsb
mov
fdivs
arpl
push
jb
and
xchg
js
or
dec
std
in
jo
loop
repnz
std
mov
loopne
daa
nop
jge
or
jge
cmp
jae
cmp
mov
pusha
push
pop
sub
repz
xor
cmp
xor
out
test
mov
push
lcall
pushf
sub
addr16
pop
out
xchg
loope
sub
cmpsb
sub
mov
pop
cmpsb
fidivl
xlat
sub
and
mov
outsl
jle
lock
out
test
shrl
fwait
lds
inc
cmp
outsl
lahf
xchg
sahf
ds
push
enter
pop
ja
pop
sub
mov
idivl
mov
dec
sbbl
repz
es
push
and
int3
xchg
inc
dec
out
sub
arpl
jge
jb
cmp
add
xor
mov
lret
push
adc
sahf
mov
sbb
ror
mov
jecxz
sbb
pop
mov
push
xor
cmp
xchg
jbe
xor
pop
notb
jge
out
jo
push
loop
push
imul
out
xchg
jecxz
imul
jecxz
notl
arpl
mov
lock
and
xor
nop
inc
sarl
push
insb
stc
xchg
pushf
adc
pushf
fs
fidivs
scas
jno
cli
bound
enter
inc
push
mov
loope
ds
hlt
cmp
mov
clc
mov
mov
sub
adc
lods
repz
pop
cmp
mov
inc
outsl
fwait
int
out
fs
outsl
sub
out
inc
shlb
lea
in
cmp
jmp
sbb
js
out
test
push
jae
cld
enter
ds
stos
mov
xchg
jne
stc
add
daa
add
pop
and
sub
pop
in
inc
mov
push
mov
push
xor
fdivl
lret
push
sub
pop
imul
jp
xchg
or
iret
pop
in
cltd
push
jae
adc
or
les
mov
inc
inc
lahf
mov
gs
stos
dec
sbb
xor
cwtl
push
sub
pushf
adc
aam
push
jbe
mov
xor
jnp
pop
inc
aaa
push
pop
mov
cs
test
push
mov
call
mov
nop
mov
addr16
push
sar
int3
dec
std
repz
inc
xchg
mov
fistpl
outsb
dec
fisttpl
lea
xor
inc
push
dec
cmpsb
out
sbb
into
mov
pop
sbb
cmpsl
in
std
into
sbb
insb
pop
push
dec
xchg
in
jl
in
jb
and
or
pop
or
out
cmp
std
jo
outsl
out
stos
dec
push
int
adcl
fbld
imul
inc
jmp
decl
aaa
cmpsb
jg
xor
icebp
ret
and
clc
aaa
xchg
jnp
notl
mov
call
mov
pop
repnz
ret
ret
in
push
arpl
adc
xlat
loop
or
mov
mov
dec
adc
sub
gs
mov
sarb
clc
cld
lret
ret
jb
dec
xor
pop
cmpsb
sub
xchg
aam
aad
iret
addl
inc
push
in
xor
push
xor
fimull
xorb
test
cmc
in
lret
cmpsl
es
lea
dec
mov
jg
or
adc
or
pop
and
into
mov
rcl
testl
negl
outsl
or
xor
xchg
xor
and
stc
addr16
or
sub
fcmove
out
jnp
mov
in
aam
cmp
testb
popf
jbe
adc
push
loope
push
data16
loope
insb
or
dec
mov
jns
loop
nop
mov
inc
and
iret
xor
mov
or
and
mov
mov
fstps
ljmp
and
lods
sbb
xchg
mov
rcrb
in
arpl
cmpsl
decl
xchg
adc
cli
jne
popa
sti
and
aad
ret
jo
sbb
stos
les
jbe
xor
inc
outsb
or
sub
xor
mov
jp
jle
xlat
mov
cmpl
push
jge
addr16
lahf
cmp
or
fsubrp
push
in
outsl
mull
xchg
pop
es
sub
jle
add
imul
push
push
add
jecxz
loope
cmp
rcl
jmp
pop
sub
jp
roll
outsl
shll
ds
test
mov
sbb
dec
jecxz
mov
cmpsb
inc
test
xor
test
roll
loop
call
adc
fisttpll
pop
shl
and
nop
cs
mov
dec
inc
xchg
mov
dec
xchg
sbb
mov
mov
cmpsb
xor
fisttps
ja
mull
scas
pop
adc
clc
ds
mov
mov
sti
mov
sub
mov
loopne
adc
xchg
mov
out
mov
repnz
dec
or
cmc
xchg
inc
inc
dec
mov
popa
cmp
js
fwait
cmpsb
pusha
addr16
cld
movsb
pushf
bound
adc
lea
and
ret
inc
sub
push
sub
xor
adc
ss
sub
cmp
outsb
cmpsb
mov
imul
into
xor
je
mov
jle
lret
mov
inc
cmp
fidivl
imul
loope
cwtl
mov
fsubl
add
mov
mov
jp
pushf
int
cmp
xor
jecxz
lret
or
mov
fucomp
push
jp
sub
jbe
xor
mov
pop
mov
push
mov
ja
adc
test
xchg
mov
in
test
addr16
jns
lock
cld
or
mov
jp
cmp
inc
stos
jl
sahf
mov
mov
jne
insl
cmp
sbb
dec
arpl
add
cli
pop
cli
xchg
push
loop
mov
and
movsb
fs
addr16
test
ret
lds
lret
imul
int3
dec
jnp
xchg
sbb
jno,pt
push
mov
imul
std
mov
pop
imul
adc
repnz
in
popa
push
jnp
stos
pop
loop
mov
adc
and
push
jo
mov
fsubrs
add
fcos
mov
mov
push
jp
iret
das
or
nop
pusha
aad
js
pop
pop
cmovp
mov
add
imul
dec
dec
xor
push
cmp
js
jg
icebp
popl
sub
leave
cs
fnstcw
jg
das
push
sub
jbe
daa
cmc
lret
jecxz
test
push
inc
cmp
movsl
lods
les
sbb
outsl
dec
jl
out
jge
sbb
adc
pop
icebp
inc
mov
pop
and
adc
clc
mov
mov
mov
lods
sbb
xchg
mov
jo
cmp
xor
cltd
xor
add
cmp
xchg
cs
pop
or
or
sbb
mov
mov
xchg
aad
mov
aas
aad
mov
loope
or
call
jno
jmp
int
dec
stc
stos
inc
sbb
jbe
dec
inc
lea
faddl
push
ret
mov
mov
jg
lods
je
sub
lcall
and
mov
pop
cmp
add
loopne
out
mul
xchg
gs
pop
in
cmpsb
cmpsb
pop
add
and
sbb
pop
loop
sub
pop
in
mov
into
xchg
into
imul
shll
sti
js
push
imul
fisubrs
push
inc
movl
popf
jne
jle
mov
add
fs
lock
nop
shll
mov
pop
stos
arpl
fiadds
sub
mov
in
add
insl
aaa
lock
inc
pusha
sbb
sub
enter
cmpsl
mov
mov
fsubs
aad
les
push
mov
mov
sbb
push
clc
mov
mov
insb
pop
iret
dec
adc
out
xchg
icebp
inc
xlat
mov
or
into
in
push
loop
mov
in
fimull
inc
test
dec
adc
push
jmp
cmp
fstl
fs
cmc
dec
test
imul
and
jns
jo
mov
mov
fadds
jo
add
and
mov
and
sub
xor
mov
add
adc
mov
xchg
jl
iret
adc
xor
mov
mov
pop
out
push
int3
sti
fcmovne
jp
ret
test
dec
mov
jo
push
xor
jo
xchg
push
xor
sbb
mov
icebp
pop
dec
fists
mov
push
inc
add
adc
mov
and
insl
loope
icebp
rcl
mov
sbb
push
in
xor
into
incl
push
jle
dec
cmpsb
xchg
mov
nop
jno
addr16
push
adc
pusha
aas
jge
out
leave
add
ds
ljmp
sbb
sub
std
aaa
cmp
ds
xchg
pop
popa
cltd
mov
movsl
xor
into
fs
ficomps
xchg
out
cwtl
xor
lods
add
push
bound
push
cmp
js
sub
in
call
insl
jne
rcll
dec
mov
adc
push
test
hlt
sub
nop
std
lods
sbb
adc
lods
sub
loope
push
xor
cmpsl
hlt
xchg
xchg
sar
add
inc
or
shr
out
or
cld
pusha
pop
testb
xor
sub
mov
popl
movl
lret
in
out
mov
push
jne
testl
cmc
xchg
sub
xchg
or
add
jge
jnp
jmp
fdivrl
arpl
sbb
and
aaa
inc
mov
lahf
add
outsb
xchg
cltd
lret
call
push
lcall
jmp
cmp
push
xor
adc
aad
push
xlat
lock
stc
ficoms
push
mov
dec
push
inc
das
cmpps
rcr
sub
sub
orb
adc
inc
mov
pop
jb
adc
ss
test
dec
push
int
pop
add
lahf
ja
pop
stos
loop
ret
lret
xor
in
cmp
pop
int
cs
dec
mov
scas
icebp
sub
flds
xchg
cmpsb
xchg
mov
cld
gs
add
std
lcall
inc
and
mov
mov
adcb
mov
cmp
nop
ljmp
test
scas
adc
loope
pop
and
pop
out
lcall
push
xchg
xlat
aas
pushf
fiadds
inc
ror
inc
jecxz
out
push
mov
mov
xor
and
cmpsl
iret
test
mov
jne
movsl
into
xchg
aas
jle
outsb
xchg
push
fmull
xor
mov
repz
outsl
inc
into
movsb
ret
icebp
iret
pop
aam
mov
scas
inc
xor
or
pop
rcrb
je
add
imul
pusha
pop
mov
pop
dec
xor
sub
mov
jge
xchg
push
lret
push
sarb
adc
mov
aad
xorb
pop
loop
cmpsb
test
loop
xorl
ljmp
dec
clc
lret
mov
scas
xchg
adc
mov
jp
maskmovq
mull
das
jbe
jmp
in
clc
and
mov
cmp
lret
lret
push
push
jp
mov
inc
xchg
out
add
les
movsb
out
jnp
cmp
and
ljmp
scas
movsb
pop
dec
push
and
inc
mov
or
mov
sahf
ljmp
popf
xor
out
add
xchg
adc
mov
ja
inc
ljmp
push
xchg
lea
mov
dec
jmp
jge
lods
and
or
push
pop
xchg
les
std
repnz
pop
push
and
lods
ds
std
shlb
fwait
sbb
dec
test
add
shlb
lcall
cltd
adc
lods
daa
insl
leave
cmp
andb
scas
jg
jne
flds
pop
rcrb
popa
insl
stos
or
sub
aas
aas
pop
xchg
daa
lahf
pop
aam
lcall
loop
xchg
in
xchg
shrb
movsl
inc
imul
ja
mov
jns
sub
mov
jp
push
mov
xchg
push
mov
out
ja
test
mov
scas
test
aas
add
fucom
cmpsb
adc
mov
int
dec
loope
mov
aas
pop
jle
mov
push
aad
fdivrl
std
in
lret
sbbl
sbb
out
cmp
imul
outsb
jns
mov
or
inc
inc
cld
sub
mov
pop
pop
out
cmp
iret
lret
xor
cmp
dec
xor
out
jmp
and
out
gs
adc
pop
call
jbe
cmp
loope
jnp
xchg
mov
sub
or
cs
insl
adcb
mov
mov
dec
sar
movsb
lods
xlat
insb
dec
notl
push
xchg
push
fistpll
push
mov
xchg
ljmp
das
jg
mov
xchg
ret
cmp
push
imul
arpl
pop
jp
dec
inc
pop
addr16
in
rolb
inc
scas
jno
xchg
scas
or
into
inc
inc
push
in
enter
inc
jg
dec
out
ljmp
mov
test
out
inc
pop
mov
out
mov
aaa
call
and
test
hlt
jmp
inc
das
sbb
outsb
test
out
push
push
mov
movsb
sub
nop
test
shlb
sbb
jle
and
cld
stos
dec
pop
sbbb
cwtl
sub
je
iret
pop
xorl
lret
push
xor
mov
push
push
shrl
mov
cmp
fistpll
xor
sbb
mov
icebp
add
sbb
lcall
pushf
bound
push
push
ljmp
insl
or
out
ffree
mov
add
jnp
xchg
aam
push
dec
xor
pop
xchg
pop
lsl
rcl
fistpll
inc
icebp
adc
xorb
int
or
std
fcomp
rorb
lea
mov
sub
jno
in
hlt
je
popa
stc
dec
pop
mov
cmpsb
and
int3
enter
je
push
cmpsb
daa
mov
cmc
jecxz
jmp
pop
stos
xor
push
out
cmp
or
inc
in
loop
in
lock
fdiv
loop
jg
or
divb
and
xor
lahf
stos
mov
js
and
inc
das
cmp
ljmp
rclb
xor
test
add
sbb
stos
jecxz
inc
mov
sbbl
pop
xor
push
nop
popa
leave
out
mov
stos
dec
mov
lock
sbb
in
mov
es
sbb
xor
lcall
adc
and
ret
inc
adc
cmpsb
aad
pop
and
inc
mov
pop
pop
es
inc
push
movsb
mov
or
les
sbb
dec
test
ret
pop
sbb
pop
xchg
dec
push
xchg
cs
push
test
out
fistps
and
xor
inc
mov
push
flds
jmp
je
jg
sahf
fildll
bound
iret
std
ret
das
adc
xchg
and
daa
repnz
xchg
dec
and
cli
and
pusha
arpl
decl
fidivl
pop
rclb
adc
pushf
movl
test
jno
arpl
gs
movsl
scas
xchg
dec
pop
je
outsb
mull
ret
jg
pop
cs
sti
inc
mov
mov
lcall
add
dec
scas
cmpl
insl
or
inc
pop
xor
outsb
cli
sub
mov
sbb
or
cmp
test
mov
sub
cli
das
jmp
cmpsb
lret
xor
jmp
adc
add
decl
mov
arpl
sarl
push
call
xor
pop
add
gs
jmp
mov
scas
xchg
fwait
scas
movsb
xor
mov
push
sti
xchg
mov
nop
mov
jb
push
lds
or
rclb
lds
xor
movsl
movsb
push
mov
es
push
mov
out
xlat
insl
lds
jo
push
fcmovnbe
pop
shll
fwait
xchg
clc
sub
jns
cmp
fidivrl
test
jnp
pop
dec
movsb
xchg
dec
mov
sbb
xchg
pop
lea
in
add
stos
fimuls
aaa
idiv
cmpsl
testb
or
push
dec
lret
fstps
and
or
mov
xchg
dec
inc
stos
mov
adc
je
dec
aam
ja
inc
loopne
add
shlb
js
fidivrl
aad
or
dec
movsb
jns
lods
mov
fldt
ror
add
jnp
pop
mov
xchg
in
pop
out
dec
jl
mov
enter
adc
or
mov
jbe
or
lret
cld
rcrl
pop
jnp
test
add
mov
push
enter
inc
inc
jg
mov
mov
imul
mov
mov
les
pop
ficoms
adc
cld
jmp
jmp
daa
sbb
mov
xchg
push
mov
into
sub
data16
rolb
or
ss
cwtl
jp
and
lcall
lcall
stc
call
fnstcw
pop
je
loop
cmp
cld
cmp
cli
test
movsl
or
idivl
je
cli
lcall
mov
or
push
cmc
and
jmp
cmp
sub
xchg
mull
push
arpl
xchg
adc
push
jmp
shlb
sub
add
mov
in
sbb
xor
pop
jecxz
mov
sub
shrb
imul
dec
lods
lret
test
insb
jmp
mov
clc
mov
out
jb
lret
inc
in
out
divl
cmp
push
aas
sahf
lcall
mov
inc
fwait
push
sahf
pusha
and
pop
in
cltd
arpl
or
jp
scas
xlat
dec
push
ret
sub
adc
mov
xor
out
int
mov
push
push
mov
mov
pop
lcall
xchg
scas
pop
pop
cmp
popf
aam
test
insl
push
sahf
pop
add
push
cltd
xor
xchg
mov
shll
sub
add
shr
jnp
or
add
lret
andl
gs
dec
enter
repnz
sbb
hlt
jmp
push
cli
adc
mov
push
xchg
mov
mov
mov
ret
add
push
push
pop
mov
clc
jp
dec
mov
stc
sub
sub
push
out
rolb
dec
jge
or
cli
inc
inc
mov
or
adc
xchg
ljmp
mov
and
push
dec
jno
outsb
add
cmp
rcl
fstp
cld
insb
push
sbb
pop
xor
jecxz
test
xlat
mov
push
iret
jp
sub
pop
ficoms
sbb
ss
pusha
sarb
dec
adcl
dec
or
mov
out
mov
ds
and
push
sbb
shl
adc
sahf
scas
add
hlt
mov
fidivrl
outsl
cltd
bound
pop
lock
pusha
or
pop
outsb
jl
aad
test
int3
and
ror
ds
lods
pop
imul
adc
push
xor
and
xor
cltd
cltd
fadd
faddl
stos
inc
xchg
mov
aam
push
mov
dec
les
cli
mov
js
push
ss
ficomps
les
adc
push
in
in
icebp
push
repnz
push
mov
jp
mov
cmc
cmpsl
aam
mov
push
int3
sub
jmp
and
lret
mov
cltd
mov
sub
insl
xor
inc
push
add
adc
arpl
adc
mov
pop
sub
cmpsl
push
push
dec
js
sub
jecxz
pop
sahf
scas
leave
xchg
pop
push
sub
pop
xor
out
int3
xor
imul
jb
movsl
mov
into
jge
int
pushf
xchg
mov
push
daa
add
cmp
add
jl
and
push
push
push
push
movsl
mov
xchg
jmp
cmp
push
push
sub
rorl
loope
das
cltd
test
je
xor
cmpsb
push
xchg
mov
out
ret
lock
punpcklbw
fisttpll
rcr
fsubrs
call
movsl
add
jbe
dec
jp
sub
or
push
sti
xor
aas
pop
in
mov
xor
sub
daa
cli
in
mov
out
mov
cld
daa
enter
or
adc
dec
jge
push
repnz
cli
dec
ficoms
mov
and
dec
pop
pop
sub
or
adc
push
in
int3
dec
push
sbb
int
sub
inc
jae
mov
dec
add
scas
pop
ret
scas
sub
fwait
mov
xor
lods
and
add
push
sahf
adc
jno
test
push
popa
pop
push
jmp
rcll
and
inc
push
and
mov
inc
cs
aad
pop
push
shrl
ja
subb
mov
or
scas
pop
int
insb
mov
jb
sbb
and
test
cmc
mov
ficompl
xor
out
lret
test
and
cmc
scas
sti
mov
negb
mov
xor
dec
xor
push
mov
mov
or
sub
and
mov
into
outsb
insl
sub
mov
pop
js
xor
pop
fildl
repz
inc
jge
js
add
add
xor
push
pop
out
xchg
lcall
jno
pop
xchg
icebp
ds
push
mov
mov
mov
push
xor
add
adc
mov
push
shll
in
ljmp
mov
lea
ja
and
sahf
cmp
sub
and
shll
pop
daa
cmpsl
insb
fmuls
xor
fs
idiv
shrl
jecxz
repnz
sbb
add
mov
repz
push
cmp
dec
call
dec
add
inc
inc
enter
sti
pop
icebp
cmp
and
gs
std
out
out
jmp
inc
dec
cs
hlt
js
sbb
movb
lahf
lods
leave
stc
movl
or
jns
icebp
mov
pop
add
xchg
rorl
ror
dec
cli
mov
out
test
mov
popl
inc
xchg
sbb
dec
arpl
push
and
xchg
inc
fcomps
stos
setle
add
add
leave
jp
roll
add
add
inc
xchg
filds
gs
aas
xchg
fiadds
pop
push
mov
add
pushf
bound
lret
subb
add
sub
lcall
and
inc
xchg
arpl
jns
pushf
jbe
int3
imul
jnp
cmpb
inc
sub
das
mov
in
push
and
xor
cwtl
rep
loopne
movsl
push
stos
xchg
dec
xor
bound
out
mov
lret
ja
test
lds
scas
xor
movsb
sbb
daa
dec
pop
dec
fisttpl
pop
das
xchg
jmp
and
cmp
incb
cltd
mov
mov
jg
xorb
pushf
cmpsb
mov
test
mov
adc
mov
inc
pop
sarl
xor
xchg
sbb
out
jns
add
stc
sub
subl
mov
and
lret
pop
vmaxsd
mov
scas
mov
mov
xchg
es
inc
fstl
push
stos
imul
sahf
js
addr16
jle
test
fdivl
cmp
mov
data16
inc
pop
movsb
mov
in
jg
xchg
dec
pop
cmc
enter
add
sbb
mov
movsl
xchg
inc
into
pop
jno
cmp
pop
ja
pop
xchg
daa
push
scas
pop
sti
xchg
enter
inc
sbb
lret
xor
sbb
mov
jno
jle
cli
mov
sbb
mov
fdivrs
mov
sbb
add
push
mov
inc
adc
xchg
fisubs
in
test
mov
push
cmpsl
xchg
in
dec
out
mov
jp
and
call
inc
arpl
dec
jle
dec
stos
xchg
ja
push
lods
mov
dec
es
inc
dec
mov
inc
push
add
out
nop
icebp
mov
test
inc
dec
add
jne
cld
xchg
cmp
inc
enter
mov
mov
pop
in
shrl
inc
dec
loope
or
fsubr
add
hlt
out
jo
or
mov
mov
sbb
push
cmpsb
insl
ret
dec
fwait
or
hlt
fdiv
outsb
sbbb
xor
iret
rol
pop
push
iret
sub
inc
dec
jmp
cmp
mov
mov
and
outsl
or
es
adc
outsb
add
push
mov
outsl
hlt
mov
loopne
insl
imul
pop
int3
nop
stos
fadd
iret
mov
lods
cs
pop
jne
iret
roll
pop
add
sbb
cvtdq2ps
pop
push
stos
mov
aas
in
scas
xor
lods
push
mov
push
repz
sti
arpl
cld
lea
bound
mov
movb
push
rclb
iret
daa
stos
ret
xchg
mov
repz
mov
roll
dec
insl
cmp
push
cs
push
mov
pusha
das
sub
push
push
pop
push
pop
dec
cmc
jnp
add
fnsave
rclb
or
or
imul
out
push
cmp
call
leave
aas
mov
adc
sub
testl
cmp
add
xchg
add
inc
ljmp
inc
rcrl
mov
loope
js
inc
jge
push
push
xor
ret
outsb
jne
push
sub
cmp
or
fcomip
pop
sub
push
xor
popa
and
pushf
rcll
lcall
xchg
insl
das
and
inc
movsl
cmpl
sbbl
les
sub
pop
pop
adc
cmp
or
cs
xor
fsubrl
adc
xchg
adc
xor
inc
js
aaa
inc
daa
into
es
test
or
cmpsl
rorl
xchg
sub
push
and
pop
in
mov
mov
lret
leave
scas
loopne
mov
mov
xorl
xchg
fwait
sub
inc
fmul
push
ljmp
inc
outsl
movsb
mov
jmp
cmpsb
shrl
pop
or
mov
stos
xchg
test
xchg
xchg
xor
sub
pop
push
nop
cmc
and
test
inc
shl
in
cltd
cmp
adc
or
leave
and
loope
mov
sub
dec
lods
gs
mov
adc
insl
int
and
jmp
jecxz
and
mov
cwtl
lahf
mov
mov
test
pop
or
mov
cmp
rcrl
xor
int
xchg
in
scas
ja
push
psrad
in
lods
das
xchg
test
lds
loopne
out
popf
iret
out
jle
add
orl
adc
xchg
xchg
fdivrl
gs
repz
loop
inc
clc
mov
sbb
insl
xor
lods
cli
test
ret
dec
mov
loope
cmpsb
cmp
inc
mov
mov
add
test
test
xchg
pop
mov
pop
test
mov
cs
cmc
pop
inc
aad
daa
pusha
push
fisubrs
pop
adc
clc
fisttps
and
adc
mov
xlat
pcmpgtb
and
add
sub
push
sbbb
sbb
loopne
aam
pop
insb
shll
rep
mov
outsb
fxch
add
inc
daa
cmp
nop
pushf
addl
aas
cmp
jmp
jg
sub
xchg
jns
or
inc
fcompl
lds
pop
scas
mov
dec
or
mov
push
fsubl
dec
adc
adc
fwait
sub
rcrl
inc
ljmp
lahf
add
dec
sbb
or
nop
movsbl
mov
pop
jge
dec
lret
pop
xor
xchg
cmp
xchg
sarl
fistps
dec
mov
clc
ss
icebp
int3
inc
or
cmp
push
ss
repz
adc
sarl
xchg
push
xchg
sahf
xchg
mov
loopne
out
and
sub
mov
jmp
sbb
shlb
movsb
inc
adc
mov
dec
xchg
gs
loopne
ret
movsl
xchg
shll
or
scas
cmp
mov
and
pop
jl
dec
xor
pop
xor
xchg
or
mov
outsl
cli
jbe
fcmovnb
js
ds
inc
ljmp
push
xor
push
adc
daa
inc
mov
andb
xchg
popa
xchg
mov
shlb
sbb
fisttpll
div
dec
sarl
mov
fldenv
stos
xor
inc
lcall
and
rclb
cmp
push
pop
push
adc
fistl
push
pop
inc
or
arpl
fildll
emms
mov
into
adcl
push
dec
jne
add
outsl
adc
mov
lret
pop
jae
mov
add
or
testb
push
jb
adcl
loop
ss
jmp
add
test
dec
lcall
repnz
stc
fimull
mov
in
lock
or
jne
sti
pop
fwait
stos
dec
or
in
insb
jbe
jp
adc
xchg
movsb
fs
rcrl
jno
jg
push
es
pop
or
stc
gs
xchg
mov
push
pop
les
mov
data16
xchg
gs
jo
fsubrl
out
sbb
add
out
sub
test
out
and
sub
sub
int
shlb
ds
add
xchg
xchg
cmpsb
mov
into
pop
mov
sub
push
mov
or
pop
into
cs
in
sub
push
mov
mov
test
int3
ret
mov
mov
xor
fcmovne
add
in
mov
data16
icebp
jno
mov
xchg
cmpsb
in
ds
testl
lods
stos
hlt
pusha
push
lods
in
jno
mov
int
out
sbb
jp
mov
and
adc
loopne
lcall
mov
jnp
inc
arpl
jl
int3
pop
jecxz
lock
sub
add
fcmove
inc
fildll
add
js
sub
outsl
fs
popa
aam
pop
add
cs
adc
aas
jo
jno
mov
mov
dec
dec
and
mov
add
cmp
pop
push
xorl
and
loop
cmp
inc
and
div
mov
jne
addr16
xchg
adc
pshufw
arpl
add
insl
mov
push
sahf
pusha
adc
or
push
adc
xor
mov
pop
inc
gs
dec
and
test
shlb
popa
or
jmp
mov
gs
pop
push
mov
adc
pop
mov
inc
test
mov
lock
inc
int
minps
mov
daa
je
inc
jns
setbe
sti
test
lret
bound
aad
xchg
shlb
fwait
inc
js
push
cmp
icebp
mov
add
das
jp
test
test
movsl
xchg
inc
pop
int3
mov
or
and
push
loop
subb
lahf
push
sbb
movsl
sub
push
stc
je
xchg
daa
pop
xor
mov
jno
add
adc
outsl
aas
daa
or
and
in
fisttpl
clc
fs
sub
outsb
ljmp
jle
scas
sbb
cmc
mov
inc
and
ret
adc
ja
iret
mov
icebp
mov
mov
inc
or
add
lods
loop
in
scas
xchg
std
jo
add
lahf
mov
je
mov
lea
daa
call
es
rcrb
push
mov
fcmovu
aaa
leave
das
ds
leave
in
push
mov
fmuls
out
jecxz
aaa
imul
cs
sahf
inc
jl
dec
pop
int3
out
xchg
cli
and
sarb
cmp
fsts
push
movsl
loope
arpl
mov
mov
pop
and
xchg
icebp
int
roll
inc
xchg
push
pop
xor
cmpsb
test
mov
add
fbld
mov
ja
add
scas
pop
mov
inc
loopne
lock
scas
adc
jle
in
and
dec
es
fnstcw
mov
xor
mov
outsl
das
ja
mull
mov
mov
rcrb
xchg
mov
xor
out
jo
xchg
aas
cltd
test
mov
push
inc
xor
inc
or
rcrl
push
ljmp
test
dec
pop
xor
js
jnp
inc
xchg
xchg
pop
pusha
cmp
cmpl
and
scas
dec
jne
daa
mov
daa
inc
popa
mov
inc
std
test
adcb
fcompl
sub
outsb
mov
outsl
cmpsl
jecxz
xchg
cmp
in
mov
mov
xchg
je
pop
shll
pop
das
cmp
add
pop
mov
popf
jp
in
lcall
mov
jae
cmpsl
sub
negb
xchg
ss
cwtl
lods
sub
repnz
push
adc
imull
sub
sbb
cltd
test
les
lahf
outsb
pop
inc
cmp
out
xor
xchg
xor
lret
adc
and
sub
fdivp
emms
fidivl
std
aas
pop
repz
in
rcl
or
mov
inc
in
aam
mov
repnz
pushf
mov
sub
inc
sub
push
pop
sahf
inc
es
inc
fmull
xchg
sub
push
mov
add
jmp
hlt
lahf
call
inc
or
shrb
loop
xor
dec
mov
and
xlat
jl
or
adc
or
lds
lds
ja
arpl
sbb
or
xchg
mov
stos
cmpsb
int3
cmp
enter
lahf
cmpsb
jno
stos
test
and
mov
outsb
inc
sub
lock
and
psrlq
or
and
xchg
mov
mov
add
imul
xor
mov
mov
inc
fwait
mov
sbb
adc
jns
xchg
ret
call
mov
adc
jb
inc
outsl
push
cmc
mov
sub
jnp
iret
arpl
das
aam
dec
xor
or
jns
push
cli
fidivs
nop
push
enter
mov
pop
push
mov
les
adc
mov
loopne
jge
pop
leave
adcb
stos
pushf
movsb
mov
mull
call
out
add
push
daa
or
push
fdivrl
adc
stos
sub
shlb
daa
pop
xchg
fcomps
in
xor
mov
lock
xor
in
out
repz
in
push
insb
xor
js
scas
add
cmpsl
test
ret
mov
or
lods
fldcw
sub
and
push
dec
adc
sub
sbbb
adc
cmp
add
mov
inc
lods
test
push
nop
subb
popa
addr16
cltd
or
cmpsb
lret
pop
cmp
or
aad
xchg
or
repz
fucomip
or
outsb
test
xor
cld
inc
lret
out
xchg
cmp
or
lahf
and
cmp
and
dec
mov
mov
dec
mov
pop
and
mov
scas
repz
add
cmpsb
sbb
fidivrs
cltd
or
mov
rcl
sbb
add
mov
mov
rcrl
mov
inc
pop
scas
mov
cmp
shlb
dec
addr16
inc
cs
push
fimuls
push
hlt
or
hlt
sbb
sti
sub
arpl
mov
out
mov
pop
in
cmpsl
fnstcw
mov
imulb
xor
xor
inc
out
xchg
mov
loop
mov
cltd
mov
aam
jmp
popf
int3
or
jge
in
mov
adc
push
leave
push
hlt
stc
scas
adc
pop
fcoml
adc
insb
and
jo
xchg
fxch
adc
sahf
leave
sub
pop
pop
int
inc
jmp
int
add
mov
sbb
or
push
mov
cwtl
insl
dec
jae
mov
in
add
and
rcrb
jmp
dec
mov
pop
mov
or
push
cli
cmp
adc
sahf
and
push
sbb
aam
cmp
push
jns
xchg
lcall
and
and
and
mov
cmc
inc
pop
dec
mov
lea
sub
bound
pop
adc
aam
mov
pop
xor
sbbb
lea
mov
xor
or
add
add
ficomps
pop
sub
pop
inc
dec
jl
pop
sub
adc
mov
bound
xchg
mov
lret
fsubs
push
sub
dec
fs
xor
addb
vmptrld
sbb
push
pop
repz
insb
inc
xchg
xchg
jecxz
add
inc
loopne
inc
mov
mov
xor
ljmp
orl
stos
pushf
sti
mov
push
das
dec
jne
inc
xor
sbb
das
ficomps
xor
insb
cld
push
push
sub
aad
out
stos
rcrb
pushf
push
push
movsb
jle
in
stc
inc
xchg
dec
dec
pop
lahf
out
into
imul
mov
mov
gs
mov
dec
cmp
jg
ss
jo
inc
test
mov
adc
jae
or
outsl
xchg
pop
enter
mov
repnz
call
add
pop
and
negb
jno
repnz
dec
jo
lcall
lret
or
out
push
push
add
push
sbb
mov
into
mov
stos
fcoml
shll
inc
add
push
test
jae
stc
and
ljmp
stc
int3
pop
xchg
bound
jne
xchg
insl
orb
mov
mov
dec
outsl
mov
dec
ljmp
xchg
mov
or
jg
cmp
mov
xor
mov
dec
test
lret
jp
shlb
test
lcall
cli
repz
ds
mov
cs
popf
call
and
out
mov
adc
movsl
inc
es
sbbl
adc
xor
push
jae
lahf
jbe
sahf
sahf
stos
push
jmp
jge
rcrl
addr16
hlt
insl
mov
iret
push
pop
adc
xchg
push
in
js
jo
mov
add
pusha
arpl
in
adc
pop
mov
jmp
add
inc
fimull
scas
mov
xor
sahf
aam
xchg
movsb
int
push
popa
int3
add
adc
pop
std
imul
sub
lea
scas
sub
sbb
std
in
sbb
xor
xor
cmpsl
aas
mov
imul
or
rcrb
inc
sub
test
xor
cwtl
enter
adc
or
bound
and
aaa
mov
jo
inc
pop
mov
je
out
mov
cmp
cmp
in
sub
lahf
pop
cmp
lea
pop
add
scas
pushf
dec
sub
xchg
xlat
xchg
fldt
cli
movsl
xchg
js
imul
testb
in
loope
mov
push
in
and
push
lods
mov
out
sub
xchg
insb
mov
mov
mov
and
insb
mov
sbb
imul
add
test
add
hlt
test
mov
xchg
idiv
xchg
fstp
hlt
rsm
frstor
push
call
orb
ljmp
in
je
arpl
adcb
xor
testl
and
int3
jb
mov
shrb
iret
out
bound
mov
xor
psllw
adc
inc
xchg
loop
pop
sarl
fnsave
xchg
cmp
out
mov
stos
inc
mov
dec
icebp
aam
arpl
sbb
sub
pop
es
and
pushf
cmc
leave
std
mov
inc
leave
add
pop
push
push
mov
adc
daa
pop
sbb
push
jns
sbb
push
adc
pop
or
sarb
mov
or
add
scas
cmp
data16
cmp
push
nop
stc
jb
aam
addb
push
lea
add
lahf
dec
movsb
mov
clc
inc
add
xor
xor
ss
dec
movb
int3
sysexit
pushf
jnp
pop
inc
seto
cmp
lods
push
aad
outsl
in
push
sub
repnz
test
jnp
mov
jo
lods
dec
adc
ljmp
mov
test
sbb
or
bound
es
sti
loopne
lahf
subl
aaa
sbb
pop
shlb
mov
jp
mov
cli
jg
xchg
push
mov
mov
jbe
add
cmp
add
cmpsb
adc
stc
js
out
mov
inc
jae,pt
fwait
gs
mov
mov
faddl
jb
fsubp
xchg
fidivl
andl
std
add
add
add
stos
mov
mov
mov
pop
fs
cltd
ret
mov
js
mov
in
push
repnz
push
mov
stos
jge
sub
aaa
xchg
adc
fnstsw
pop
adc
and
mov
vpmacssdqh
or
add
jmp
inc
sub
sbb
cmc
lcall
ja
cltd
jle
ja
stos
sub
stos
add
xchg
sbbl
xor
fs
pop
jno
pop
dec
ret
inc
dec
cmc
push
dec
xor
hlt
sti
js
pop
sub
add
mov
jo
cmpsl
mov
in
adc
loope
enter
das
inc
clc
xchg
bound
popf
data16
inc
mov
or
ds
dec
ss
add
jg
adc
pop
std
jbe
movsl
cwtl
xlat
fwait
filds
orl
jae
into
add
or
mov
sti
push
pop
xor
pop
mov
insl
sbb
push
out
mov
idivb
xchg
mov
fisttps
std
addl
sbb
nop
push
testl
fs
ds
jmp
nop
adc
addr16
mov
mov
push
gs
inc
cli
bound
mov
mov
xor
xchg
push
sbbl
test
jb
orl
cmp
xchg
push
sub
jns
pcmpeqb
cmpsb
or
mov
popf
dec
jl
ficompl
nop
and
mov
lock
test
sarb
add
shrl
jo
lcall
xor
pop
and
xchg
inc
mov
jle
pop
or
sbb
or
push
lahf
push
stc
out
xor
out
or
sub
jge
jge
mov
push
incl
loopne
dec
cmp
fst
mov
fcmovnu
inc
aam
xchg
pushf
int
fadd
mov
pop
addr16
mov
jl
insb
movl
das
mov
sub
pop
sub
outsl
or
and
mov
rol
into
mov
callw
sbb
jbe
arpl
pop
and
xor
les
bound
inc
or
fcmovb
cld
adc
pushl
cmp
pop
cmp
fistpl
ret
iret
jle
sbb
inc
xor
cs
pop
sub
test
lahf
imul
stc
test
mov
sbb
jno
dec
dec
jecxz
stos
ret
fiaddl
or
sub
test
fs
cmp
cmpsb
pop
cwtl
xlat
cwtl
mov
stos
test
insb
cmp
inc
mov
mov
pusha
xchg
push
mov
shlb
cli
out
cmp
and
adc
pop
mov
lcall
scas
add
es
leave
les
leave
ds
dec
bnd
mov
pop
leave
dec
or
int3
mov
testb
pop
das
mov
xor
jae
fistps
out
mov
call
dec
insb
xor
xchg
add
xchg
scas
adc
popa
dec
xchg
repz
sbb
xor
roll
inc
add
or
cmp
and
mov
add
adc
push
push
aad
sub
daa
mov
mov
dec
clc
jbe
jecxz
jp
add
push
jle
ds
dec
mov
negl
fabs
inc
sti
push
mov
inc
pop
pop
adc
lock
sbb
sti
iret
in
pop
repz
xor
lahf
movsl
nop
cmp
filds
ja
cmp
ret
outsl
scas
movsl
jno
mov
jae
inc
cmp
xchg
sti
icebp
pop
xorb
add
lods
lret
jmp
mov
pop
sub
jbe
lds
push
mov
stos
sbb
add
leave
setge
fdivs
cmp
jno
je
pop
adc
inc
in
dec
jecxz
pop
mov
cmp
ret
mov
cmp
shll
cmp
adc
cmc
sahf
pop
mov
fidivrl
and
add
xor
adc
test
mov
push
popf
adc
jns
or
inc
xchg
aam
push
ljmp
outsb
fwait
ror
daa
inc
pop
inc
lcall
mov
neg
pop
mov
push
lahf
popf
subb
aam
cmp
dec
jecxz
in
dec
test
jbe
movsl
push
out
dec
mov
shll
inc
sub
add
enter
daa
dec
xchg
add
sub
push
xor
shrl
lods
movd
jle
cmp
jbe
inc
jle
cmpb
mov
loope
mov
mov
lock
dec
mov
add
adc
outsb
inc
push
jg
imul
mov
xlat
cwtl
icebp
daa
push
jecxz
mov
jp
in
cli
add
xchg
inc
sbb
ret
xchg
nop
xchg
test
cmc
xchg
loope
cmpsl
pop
mov
mov
or
sbb
ret
in
cs
adc
divb
clc
scas
in
testb
arpl
dec
xchg
mov
gs
lret
add
push
add
loopne
daa
pop
dec
cmpsl
xchg
aaa
jbe
mov
mull
loop
add
js
mov
shlb
leave
push
dec
inc
pop
sarl
outsb
sbbb
std
popf
xor
ds
xor
hlt
mov
gs
pushf
mov
daa
mov
add
jo
lret
add
jmp
mov
jns
sbb
popa
jmp
add
out
sub
cmp
scas
fldt
mov
sbb
leave
das
mov
push
xorl
mov
aaa
scas
sub
sub
sbb
xlat
dec
cmc
lock
test
lock
adc
adcb
int
popa
int
fadds
test
xor
mov
push
pop
add
push
xor
lcall
xor
bound
fwait
loopne
movsl
sub
popa
mov
sub
lret
add
jp
shrl
push
add
mov
add
push
mov
mov
mov
pop
popf
push
stos
xchg
test
adc
jo
enter
enter
mov
mov
lahf
fidivl
mov
cmp
dec
lcall
jecxz
dec
out
imul
cmc
jg
shrb
lock
leave
pop
movb
push
in
sub
out
xchg
test
repnz
push
call
jo
fisttpl
xbegin
nop
jle
add
jmp
jl
les
mov
sub
pusha
lea
jl
inc
jnp
movsl
arpl
and
mov
cmc
cli
outsl
mov
xchg
mov
movsb
push
sbb
xchg
xchg
cmpsl
sbb
mov
pop
cmp
jge
fidivl
add
icebp
push
jl
dec
cltd
cltd
inc
sub
lods
ret
or
inc
mov
inc
and
mov
repz
inc
aas
add
pop
cmp
push
adc
les
sub
repnz
push
clc
cwtl
movsl
mov
mov
mov
insb
mov
inc
mov
mov
leave
sbb
inc
or
mov
push
mov
lods
mov
shl
dec
shrb
cmp
aas
aaa
jge
sbb
cli
inc
adc
jmp
mov
or
shrl
sbb
mov
dec
pop
gs
add
lods
or
mov
movsb
lods
icebp
jne
repz
mov
cltd
sbb
scas
lods
aad
test
cmp
jge
outsl
add
outsl
dec
mov
pop
mov
dec
aaa
xor
lret
xlat
pop
imul
mov
cmp
pushl
jmp
sbb
sar
pop
mov
arpl
cld
aam
ds
in
sub
mov
push
xor
xchg
pop
or
pop
xorb
roll
scas
sti
imull
or
add
imul
adc
ds
sbb
mov
sar
lahf
hlt
leave
xor
movsb
mov
fwait
push
xchg
xchg
and
pop
mov
adc
push
daa
dec
inc
in
or
xor
dec
jecxz
mov
mov
sarb
push
xor
pop
xchg
push
cmp
cmp
inc
lret
scas
mov
outsb
mov
rol
mov
icebp
pushf
jo
jmp
cmp
ja
mov
shl
mov
cmp
jnp
int3
and
aas
cmc
leave
mov
out
test
rcl
enter
adc
shlb
ret
mov
cmpsl
repz
movb
test
pushf
lods
xchg
add
mov
scas
pop
pushf
cmpsl
push
inc
icebp
es
out
add
clc
dec
xchg
jo
cs
movsl
xchg
mov
pushl
fs
sub
lret
data16
and
cmp
dec
test
push
inc
lret
mov
imul
fistpl
cmpsb
inc
andb
dec
xor
repz
scas
add
dec
into
in
inc
dec
add
sahf
out
rcll
xlat
inc
lcall
repz
sbb
data16
add
xor
mov
shlb
cmpsl
iret
inc
push
pop
and
sub
in
repnz
cld
xor
jbe
push
shlb
mov
cmp
add
cmp
push
popa
and
cmpsl
movsl
dec
mov
ds
push
int
dec
mov
push
mov
mov
push
gs
lea
dec
std
shlb
sub
testl
pop
and
repz
cmpsl
std
mov
push
jbe
insl
push
and
mov
mov
dec
leave
mov
mov
ja
push
popf
inc
scas
inc
cmp
repz
lcall
and
push
mov
lea
repz
sub
add
inc
pusha
cmp
data16
repnz
out
fldt
push
and
fcom
jbe
mov
add
sbb
lock
sbb
sub
mov
sub
xchg
insb
xchg
aaa
outsb
or
lea
inc
jecxz
stos
in
jge
dec
dec
pop
enter
inc
sbb
and
imul
iret
cmp
push
mov
push
jge
jg
mov
mov
pop
and
mov
lods
lock
and
fidivs
lahf
fidivrl
inc
dec
jmp
fldl
xchg
add
sub
hlt
cmpsb
cmpsb
addr16
outsl
dec
popa
sub
and
popa
test
mov
and
jb
mov
pop
or
and
das
lret
in
test
leave
jmp
mov
lcall
insl
cmpsl
add
or
push
cmp
sub
pop
and
xchg
inc
sub
outsb
mov
lcall
lret
xchg
lret
mov
cmp
rcll
xorl
mov
mov
fidivrs
jmp
inc
loopne
in
adc
gs
lods
out
imul
and
add
sbb
lds
add
fsubrs
mov
dec
movsl
shlb
popa
loop
das
aam
cmp
stc
movsb
jb
cld
rorl
sbb
popf
dec
mov
into
mov
mov
shlb
cs
popa
cmc
jne
lahf
mov
cs
jns
jae
push
cmpsb
mov
cmp
fadds
xchg
mov
aad
loopne
jg
mov
icebp
clc
mov
js
ds
arpl
imul
and
jge
add
mov
arpl
imul
push
test
jge
adc
mov
and
sub
stos
xchg
jmp
inc
pusha
out
mov
mov
sbb
sarl
in
inc
lods
jns
out
mov
cmpsl
in
cmpsl
jecxz
dec
leave
clc
cmpsl
pusha
mov
dec
sub
popa
cmpl
les
aam
icebp
outsl
fsubl
mov
or
pop
data16
divl
cmp
mov
pop
mov
jns
dec
sti
push
pop
adc
loopne
cld
pop
lret
les
push
adc
out
cmc
fiaddl
adc
add
push
xchg
pop
ret
cltd
addr16
outsb
out
mov
incb
sbb
pop
mov
lcall
push
ljmp
mov
shll
mov
aam
mov
mov
or
jl
cmpl
shr
push
push
fiaddl
dec
repnz
sbb
adc
fildll
cmp
xlat
add
mov
imull
push
loope
aad
dec
jmp
xor
jb
lahf
inc
inc
test
popa
adc
and
xchg
lea
xlat
in
jno
xchg
pop
mov
jge
mov
xchg
repnz
popf
loope,pn
pop
je
push
out
add
dec
or
push
adc
and
inc
jge
in
pushf
scas
push
in
jecxz
cmp
in
ljmp
xchg
or
xchg
inc
jp
lret
xchg
pop
mov
push
gs
jbe
ret
cmpsb
xor
sub
mov
inc
dec
bound
add
mov
or
mov
xor
fcmovb
cmpsb
xlat
jle
push
mov
mov
fistpl
dec
and
xchg
jp
es
shrb
cmp
loopne
ss
mov
stc
pop
adc
mov
pop
xor
fbstp
or
sahf
mov
das
or
nop
sbb
mov
push
aaa
jg
jne
xchg
mov
arpl
adc
cmpb
xchg
xlat
das
mov
andl
rdmsr
jnp
fcomps
mov
fdivrp
stc
cltd
mov
lahf
mov
push
sbb
popa
pop
xor
adc
jle
xor
aas
pop
cmp
lock
int3
dec
movsl
adcl
mov
ljmp
lea
inc
bound
ret
loope
cltd
roll
pusha
das
fildl
cmp
mov
dec
lahf
sub
or
push
xchg
and
aaa
test
hlt
or
fmull
xchg
repnz
enter
xchg
jns
adc
or
lods
test
cmc
loop
test
outsl
sti
push
push
mov
inc
and
aas
xor
push
and
fwait
loopne
add
sub
inc
cmp
sarb
icebp
xchg
mov
jp
xchg
cmp
addr16
mov
cmpb
popa
cwtl
xchg
cli
xchg
imul
pop
fildll
xchg
fimuls
in
adc
cs
mov
subl
push
scas
fstpt
jae
sub
pushf
mov
sbbb
pushf
and
push
pop
dec
cmpsl
push
lods
enter
data16
xor
jge
ds
pop
adc
ror
adc
loope
jbe
icebp
cltd
fisttps
and
stc
mov
ljmp
cmp
je
and
cmp
push
fwait
xchg
ljmp
fstl
and
shll
movsb
lcall
cmp
loope
adc
add
mov
or
je
mov
pusha
and
jne
xor
xchg
add
mov
loop
test
push
or
int3
data16
roll
mov
or
les
test
addr16
pop
inc
mov
mov
add
cli
rorl
jmp
jmp
addb
dec
rcr
add
xchg
cmpsl
push
nop
dec
hlt
pop
fdivrl
mov
sub
cmp
sbb
lret
cmp
push
mov
fadds
dec
repz
mov
pop
push
push
add
lea
call
std
cmp
add
sub
cmp
add
aaa
out
mov
nop
or
insl
cltd
xchg
test
mov
or
mov
mov
mov
or
fildll
sahf
in
lahf
xor
xor
cmp
push
gs
mov
test
aaa
sbb
sbb
jmp
xchg
cltd
or
fucom
cs
les
enter
out
dec
or
cwtl
mov
inc
enter
outsb
pop
iret
test
jns
jo
int3
idivb
mov
mov
inc
xchg
adc
dec
testl
aad
outsl
jb
sbbl
sbb
in
pushf
push
decb
in
jbe
aas
cmp
lcall
dec
xchg
lds
pop
xchg
jp
dec
mov
int3
inc
das
jle
xchg
orl
insb
cmpsb
mov
or
ret
loop
inc
divl
sbb
jle
das
out
jecxz
gs
cmpsl
xchg
rcll
xor
adc
cwtl
fwait
aaa
xchg
lret
sub
les
dec
adc
sbb
sub
movsl
cmpsb
sbb
push
sti
jns
sbb
mov
loope
jecxz
test
call
into
ss
adc
inc
lret
jecxz
clc
out
test
fwait
jb
sbb
mov
sub
jbe
jecxz
dec
hlt
ret
movsl
imul
mov
bound
and
sbb
push
js
hlt
mov
loopne
mov
hlt
push
out
and
jno
sbb
pop
bswap
push
jg
push
pop
iret
icebp
dec
iret
cmc
jmp
insb
pop
pusha
mov
or
add
cli
add
inc
xlat
pop
jae
cmp
fistl
add
cmpsb
scas
and
mov
sbb
jb
pop
cmp
ret
mov
push
xchg
fstpt
loopne
cwtl
aam
mov
shrb
inc
decl
cld
mov
test
mov
aam
xor
inc
clc
cmp
shll
inc
cmc
mov
sbb
xorb
inc
add
incl
negb
xor
xor
gs
inc
cmp
les
adc
adc
sub
fimull
insb
push
movsb
inc
sahf
das
in
and
repz
out
pop
out
pop
jnp
mov
in
jmp
enter
add
inc
cli
add
cmpsl
lods
mov
jecxz
sbb
push
push
idivb
pop
dec
mov
mov
rclb
sub
jnp
mov
xchg
fdivl
outsb
je
jle
mov
cmc
ret
es
sub
mov
mov
out
movsl
push
dec
inc
push
popa
xchg
inc
and
in
sbb
cltd
fsubr
mov
out
lahf
sbb
push
inc
push
clc
pop
or
ja
push
stc
or
pusha
cltd
or
jnp
and
hlt
icebp
jnp
mov
sub
push
cmp
negl
loop
rorb
and
xchg
lea
pop
or
inc
lods
loop
push
ret
mov
je
das
imul
dec
outsl
fistl
out
xor
sbb
loop
jb
cli
sub
div
lods
popf
loop
pushf
leave
arpl
jmp
sub
shll
xlat
push
and
std
push
das
jno
fisubrl
adc
outsl
cmp
fisubs
xor
sbb
sub
lods
cmpsb
pop
int3
flds
aam
jmp
insl
push
fisubrl
loopne
mov
aad
adc
insb
nop
mov
cmpsl
mov
push
mov
insl
push
out
sbb
rcrb
js
in
insl
jnp
or
xlat
push
xchg
push
arpl
jp
data16
pusha
andl
repz
out
dec
lds
jl
adc
sahf
andb
adc
push
adc
popa
cmp
cltd
fmull
xchg
xor
inc
xchg
cmpb
loope
sbb
xchg
aad
push
mov
lret
mov
clc
mov
pop
or
orl
lcall
mov
popa
dec
push
cli
xchg
pop
mov
pop
rorb
and
xchg
stc
fidivs
xor
insl
stc
in
jl
ljmp
inc
jns
loop
out
jo
add
das
loopne
int
dec
mov
xor
popa
mov
dec
xchg
cmpb
xchg
outsl
fstpl
lods
dec
mov
fmulp
jbe
adc
cmp
loop
fwait
sbb
mov
movl
jno
rorb
mov
std
fldt
faddl
adc
pop
enter
xchg
inc
lret
mov
incb
mov
dec
sub
mov
sbb
or
jo
in
cmp
int3
jmp
enter
rcr
mov
nop
fisubrl
fcomp
es
mov
fwait
daa
jnp
mov
sub
or
jae
or
push
push
dec
push
inc
ja
aam
xlat
or
and
pop
aaa
push
pop
push
pop
cwtl
sbb
mov
outsb
in
rcl
sub
mov
sbb
pop
std
iret
insb
mov
loop
inc
scas
jmp
lahf
inc
ja
rorl
call
jno
dec
mov
fs
jmp
inc
mov
fnsave
flds
xchg
cwtl
sbb
adc
add
cli
mov
pop
pop
or
fdiv
mov
cltd
adc
jbe
arpl
dec
ja
stc
mov
xchg
cmc
pop
fiaddl
dec
fwait
movsb
add
mov
aaa
fidivs
add
call
jp
iret
repz
add
popa
addl
iret
mov
test
push
jb
sti
sub
aaa
or
push
jmp
pop
xor
xchg
faddl
out
adc
jge
xchg
loopne
jnp
iret
mov
add
or
cmpsb
sbb
sarl
cmc
iret
and
add
fistps
sbb
or
mov
lahf
mov
into
or
jo
sbb
mov
lods
fdivrs
stc
outsb
xchg
jecxz
add
orl
mov
or
xlat
fstps
and
fidivrl
mov
cmc
insl
xor
arpl
xchg
mov
and
les
mov
mov
jno
out
into
ljmp
mov
and
enter
in
addr16
mov
jno
aam
push
je
push
push
ret
rol
movsl
arpl
sub
adc
shrl
push
jns
repnz
xor
inc
call
data16
sti
mov
test
and
fnsave
adc
add
mov
imul
imull
daa
xchg
mov
je
mov
in
out
pop
pop
sbbb
lds
in
jae
inc
lds
xor
inc
sub
push
add
daa
sbb
push
outsl
or
push
leave
and
call
mov
fwait
inc
dec
scas
sbb
pop
stos
aad
mov
jle
lods
fxch
inc
int3
sub
mov
aas
xor
push
push
pusha
icebp
pop
ja
rclb
push
pop
test
adc
stc
sub
popa
je
outsb
push
pop
xor
addl
cmp
aad
cmp
mov
mov
xor
mov
and
aas
cmc
cmp
xchg
imul
xlat
push
lock
addb
push
push
repz
and
ljmp
or
into
test
fcom
adc
js
ja
call
mov
fcoml
in
cs
mov
rcr
lock
jns
sti
xchg
fmull
cwtl
scas
rcll
iret
mov
test
aaa
je
jbe
daa
cmp
inc
cmpsl
xor
xchg
and
lock
lahf
and
test
xor
add
repz
and
nop
cmp
lcall
fldt
imul
out
and
scas
jle
insl
daa
ja
out
xlat
dec
js
inc
ljmp
xchg
ss
gs
jge
sahf
mov
mov
inc
push
loopne
jns
xor
push
std
insl
xchg
repz
pop
adc
lcall
mov
aad
mov
call
adc
mov
cmpsb
bound
aas
out
je
enter
xor
shlb
loope
mov
fs
sbb
xorb
mov
sbb
sub
xchg
int
mov
call
movsl
sub
lods
pop
es
loope
and
add
add
push
lret
mov
cmp
xor
adc
push
cmovno
and
or
test
mov
fnstenv
mov
fdivp
sbb
and
sbb
jl
or
adc
inc
aas
push
mov
mov
xchg
pop
inc
dec
sub
ds
fisttpl
test
push
or
xchg
ficompl
bound
mov
fs
loopne
ret
xchg
rorb
loopne
jp
in
push
lcall
mov
adc
fiaddl
add
mov
pop
cmp
mov
repnz
imul
jle
je
and
ret
jp
cmp
dec
out
cs
xor
sbb
jp
cmpsl
or
rorb
int
out
push
mov
mov
mov
adc
cmp
shrb
xor
jo
pop
mov
ds
js
cmp
fs
mov
push
and
in
aad
jmp
lock
push
gs
loope
dec
adc
cld
mov
lods
leave
jle
test
mov
adc
adc
loope
xchg
cld
fcomi
push
ss
js
mov
pusha
shrb
sub
pop
add
mov
lods
xor
icebp
xor
xchg
add
loop
mov
mov
mov
cmpsl
adc
fwait
add
cmp
movntq
mov
gs
sub
adc
outsl
mov
aaa
or
inc
push
xchg
in
std
xor
pop
icebp
xchg
xchg
mov
adc
ret
jbe
mov
jecxz
aam
sub
xor
cli
mov
pop
nop
dec
stos
outsl
dec
and
repnz
sbb
dec
pop
pop
pop
add
and
xor
test
stos
ret
add
and
mov
jg
adc
insl
cmpsb
and
add
jmp
sbb
shll
pushf
mov
pop
xor
cmp
repnz
pop
lds
das
repz
sbbb
inc
rol
lock
ss
std
pop
xchg
outsl
dec
pusha
jg
inc
jns
cmp
mov
movsl
scas
add
loope
fxam
pushf
mov
xchg
jg
aaa
jmp
mov
cmpsl
shlb
scas
xlat
roll
add
fwait
jbe
pushf
mov
mov
adc
cmp
pop
hlt
paddsb
jne
mov
enter
nop
pop
fwait
mov
mov
pushf
and
dec
or
jns
sbb
push
xchg
outsb
shrl
adc
aaa
sub
fistps
insb
int
mov
xchg
pop
cwtl
mov
loop
inc
lret
inc
lret
ds
fs
push
jmp
mov
or
in
mov
decl
mov
test
cmc
mov
js
xor
jnp
xor
dec
jns
addb
jno
orl
mov
jns
mov
outsl
lea
movsb
sub
xchg
lods
cmpsb
sub
xchg
in
jmp
jmp
mov
cmp
xchg
pop
mov
adc
sbb
dec
jo
aad
jnp
cmp
cmp
sub
movsb
adc
in
jmp
rcl
das
leave
mov
fidivrs
lock
mov
dec
sub
es
push
push
push
jae
jle
jecxz
inc
cmp
cmp
sub
inc
xchg
scas
push
lods
sbb
mov
in
aad
loope
and
jl
jno
pusha
jno
mov
mov
out
mov
in
mov
jl
data16
out
add
push
pop
xchg
ret
mov
dec
sbb
jmp
outsl
dec
inc
mov
mov
sub
inc
cli
stos
dec
adc
sbb
clc
sahf
cmp
ret
iret
jmp
dec
mov
cmp
negl
test
dec
fbstp
mov
mov
fiadds
cmpl
pop
test
and
imul
dec
js
jmp
dec
pop
repz
out
push
insl
rclb
imul
cmp
push
out
push
add
mov
xchg
add
hlt
js
and
sbb
and
mov
cld
pop
mov
pop
or
jg
orl
pop
rorb
mov
and
mov
push
push
cmpsb
inc
out
sbb
cmp
add
outsb
xchg
popf
adc
push
js
testl
andl
loopne
orl
test
cmc
lock
nop
stos
sarb
xor
mov
mov
cmp
imul
or
arpl
ds
aam
mov
test
sbb
mov
push
pop
call
sbb
or
or
pop
add
popf
in
add
push
int
stos
pop
or
jns
ds
loopne
pusha
shll
dec
and
and
test
push
dec
jmp
xor
pushf
inc
imul
push
fnstsw
test
outsb
dec
and
out
popa
mov
adc
push
fst
jae
movsl
or
hlt
or
sub
or
mov
xlat
inc
adc
add
mov
cmp
push
or
std
mov
mov
push
mov
int
inc
jle
mov
popa
fmull
arpl
js
mov
ret
sub
movsb
ret
in
jb
and
sbb
inc
sbb
int
sahf
fsubrs
pop
call
pop
jecxz
fisubrs
cmp
and
mov
out
adc
pop
sub
pop
iret
ss
jb
jl
inc
js
xchg
mov
sbb
dec
mov
mov
push
sti
inc
cld
in
inc
jb
test
test
daa
iret
std
stos
cltd
test
mov
cltd
aam
add
sbb
in
push
stos
mull
push
adc
ljmp
and
xor
cwtl
out
and
fcoml
jp
jl
mov
lret
xchg
je
imul
je
or
ja
pop
adc
out
imul
js
iret
pop
and
sub
xchg
jnp
int3
add
xchg
mov
popf
jo
or
add
div
mov
mov
sbbl
jb
enter
inc
das
rcll
add
jecxz
stos
lahf
jns
mov
out
dec
inc
scas
lea
dec
add
jg
jl
shrb
adc
out
or
add
cli
push
mov
mov
xor
lods
jnp
test
fs
adc
popa
sbb
mov
adc
in
mov
mov
push
cmc
inc
jl
scas
jg
xchg
pushf
mov
pop
clc
dec
pop
xchg
pop
mov
ret
or
inc
inc
mov
pop
aaa
frstor
jbe
test
xchg
inc
dec
cmp
jne
sarl
jecxz
push
xor
add
stos
mov
sub
out
loopne
test
cmp
inc
mov
popf
xchg
std
xchg
testb
cmp
adc
jb
addr16
aas
inc
dec
xchg
ficoms
push
dec
mov
mov
sbb
roll
repnz
addr16
sbb
push
imul
mov
mov
int3
ljmp
lds
repz
std
andb
cmc
cmpsl
and
loope
jmp
mov
imul
jbe
sbbl
in
imul
jl
lea
xor
mov
jo
add
mov
int
and
loop
dec
mov
jns
cmp
sub
cmp
jmp
hlt
mov
sti
mov
movsb
push
incl
sub
int3
nop
sbb
mov
cwtl
xorps
pusha
ret
cmpsb
pop
mov
mov
outsl
adcb
cmp
jnp
pop
js
xchg
testb
mov
inc
iret
cmp
xchg
testb
popf
movsl
pop
jl
fcmovnbe
call
add
cwtl
outsb
pop
cmpsl
pop
loopne
xor
fwait
pusha
dec
jbe
mov
sbb
dec
sbb
mov
jne
stos
push
fisttpl
sub
and
sbb
dec
int3
jge
outsl
mov
add
cli
jp
pop
in
data16
and
inc
pop
test
or
fwait
inc
sbb
shlb
sub
add
add
stos
pop
push
test
fists
cmc
add
mul
mov
push
mov
ja
xchg
nop
and
adc
nopl
arpl
and
xchg
jmp
fdivrp
pop
mov
push
sbb
pop
mov
mov
loop
sti
cs
int
push
xchg
test
adc
cmp
lds
jecxz
inc
icebp
push
lock
mov
fnstsw
jge
dec
mov
int3
pop
xchg
aaa
sub
clc
mov
test
mov
fisubs
sti
mov
daa
sbb
cmpb
push
xchg
push
jae
insb
sbb
rclb
rcll
push
pop
fwait
mov
and
int3
jge
push
jb
fcomps
test
loopne
daa
aas
movsl
in
xchg
push
in
fstps
enter
inc
jle
in
inc
pop
mov
mov
sahf
mov
jge
add
ficomps
test
xor
or
push
ljmp
mov
dec
cmp
notb
aaa
jmp
fwait
add
push
xchg
add
bound
cmpsl
cmpl
jp
inc
push
jno
push
push
jp
shrl
push
imul
arpl
cld
jno
lea
jmp
push
mov
xchg
and
pusha
mov
fildll
sti
mov
and
or
sub
xchg
test
mov
pop
ret
sub
jl
cwtl
ret
jne
sbb
cld
mov
adcb
xchg
push
ret
test
rolb
les
sub
adc
out
in
outsl
mov
xchg
dec
loopne
iret
aaa
insl
mov
popa
lret
or
fimuls
adc
sbb
push
mov
push
sub
mov
xorb
mov
pusha
pop
mov
sbb
xchg
ja
sub
add
push
fisttps
jae
dec
mov
adc
pop
scas
pop
dec
repnz
les
cmp
imul
xchg
rol
xor
sub
mov
outsl
xor
clc
pop
jbe
and
call
mov
ds
in
push
shl
hlt
arpl
test
push
ret
scas
lahf
sbb
cmp
adc
std
mov
icebp
xorl
xor
fcom
js
inc
dec
xchg
stc
push
or
pop
in
jns
inc
fidivl
mov
push
lods
ds
push
mov
pop
xchg
jno
mov
push
arpl
ss
test
pop
leave
stos
outsl
test
scas
sbb
in
cmp
sub
push
or
cmc
addr16
xor
or
xchg
in
ret
lea
lret
pop
xor
xor
sbb
ficoms
mov
insb
jmp
pop
cmpl
jb
popf
sub
lret
popa
push
push
sbb
cmp
pop
sub
cmp
mov
fisubs
xchg
bound
cwtl
pop
jecxz
pushf
push
dec
add
adc
fidivl
adc
ss
push
xchg
jae
sub
mov
test
sbb
and
jge
or
jmp
mov
jnp
sbb
push
fcmovnb
push
and
jp
xchg
ljmp
push
bound
packsswb
repz
lods
push
and
je
cmp
xchg
cmp
cli
into
inc
push
dec
call
out
add
or
in
xchg
adc
push
das
jl
mov
mov
xchg
add
ss
cmp
cmc
shll
mov
ljmp
aad
mov
in
lods
insb
inc
call
stos
cmpl
inc
jae
xchg
dec
test
and
push
loopne
out
and
gs
shrl
adc
mov
loopne
xchg
in
jmp
fs
cmpsb
stos
out
or
fmuls
test
stos
push
stos
ljmp
mov
cmpsl
nop
aam
jo
lsl
adc
lea
xchg
cmpsb
bsr
enter
adc
sub
in
add
jge
jmp
pop
test
rorl
mov
push
nop
mov
lds
sbb
arpl
cmp
out
push
push
bound
sbb
cmp
sbb
dec
aam
sbb
pop
push
sahf
js
fsts
xchg
enter
and
imul
test
adc
and
sub
push
iret
inc
mov
outsl
fnsave
mov
sti
outsb
xor
rcrl
sbbb
fwait
push
insb
inc
xchg
mov
inc
mov
cmp
push
add
jbe
notl
loope
pushl
fnstsw
pop
and
cmpsb
es
xor
rol
mov
jp
jmp
push
stos
out
daa
add
add
pop
sbb
sbb
rcrb
or
push
inc
xor
xor
int3
push
or
dec
fidivrs
sbb
xchg
cmp
add
inc
and
movsl
shlb
cmc
lret
stos
or
sbb
dec
out
pop
or
inc
cs
adc
fdivrp
dec
mov
fcmove
push
cmp
xor
mov
mov
notl
adc
inc
aad
lcall
fildl
stos
dec
ret
adc
test
xor
mov
cmp
inc
lret
gs
sbb
cli
mov
std
jmp
in
mov
push
mov
push
mov
sub
xlat
push
inc
mov
rcl
and
clc
sti
push
pop
fcompl
pop
test
cs
int
fs
test
dec
out
hlt
lods
xchg
adc
inc
mov
mov
aas
jl
sbb
push
xchg
pop
sub
sar
xor
lea
bound
arpl
outsl
out
jecxz
mov
push
enter
mov
push
mov
in
sub
dec
xchg
test
orl
mov
mov
or
sub
test
fnstcw
cmpsl
inc
insb
xchg
shrl
inc
fs
call
cmp
jmp
adc
cmp
icebp
arpl
mov
enter
and
out
stos
sub
push
mov
stos
xlat
fiaddl
adc
mov
xor
xlat
xor
inc
dec
xor
adc
loop
hlt
push
xchg
ja
pop
cltd
add
mov
loopne
movsb
xor
mov
adcl
inc
xor
aaa
jb
sub
cmp
xor
dec
lahf
push
pop
movzbl
mov
enter
test
cmc
arpl
movsb
cs
pop
hlt
pop
mov
testl
mov
pop
not
inc
in
add
inc
or
mov
mov
mov
lods
out
push
and
arpl
sbb
test
inc
adc
addr16
push
mov
pop
negl
dec
fiaddl
ss
pushf
xor
xchg
sbb
push
and
bound
pop
mov
dec
fiadds
cmp
pop
outsb
pushf
int
out
in
out
dec
stos
mov
outsl
or
repz
in
lods
fidivrl
notl
clc
pop
in
je
rcr
push
cmp
cli
out
outsl
push
test
cmp
loop
xor
lods
cmpsb
mov
adc
or
jae
int
push
dec
xchg
lea
dec
sub
dec
cli
sub
pusha
push
adc
shlb
ja
add
leave
xlat
lods
dec
test
ds
popf
push
ret
shl
xorb
push
xchg
xchg
test
sub
mov
pushf
idivl
test
fdivrp
mov
sbb
inc
call
mov
daa
inc
fadd
xchg
data16
mov
daa
in
or
fstpt
cmp
dec
push
sbb
sbbl
sub
xchg
xchg
inc
in
and
sbb
jg
mov
xchg
int3
rolb
aad
adc
or
addr16
adc
test
inc
adc
pop
sub
mov
mov
in
inc
rcll
xor
lret
or
insb
and
loop
mov
pushaw
and
rorb
mov
cmp
ror
jmp
out
mov
mov
cmp
fidivl
lret
xor
lock
repnz
fwait
mov
xor
popa
sbb
flds
inc
stos
mov
push
mov
or
lahf
push
pop
mov
cmp
mov
fcompl
jle
sub
push
mov
xchg
or
push
xchg
lods
push
andb
or
or
cmp
shlb
sub
idivb
or
mov
jnp
mov
xchg
int
sub
add
cmp
fstpt
push
jnp
add
addr16
daa
cmp
cmp
ds
cwtl
stc
mov
aas
jmp
dec
xchg
dec
inc
leave
repz
hlt
nop
mov
push
dec
fcmovne
out
lods
in
add
repnz
mov
insl
sub
sbb
lods
push
rclb
or
jne
enter
dec
dec
leave
jle
lcall
out
push
nop
or
nop
and
imul
fimuls
xchg
leave
adc
out
mov
sub
sub
loopne
js
jge
xchg
jb
sub
mov
aam
add
idivb
insb
xor
addr16
or
fcoml
repz
or
add
mov
test
aas
stos
cltd
sub
sub
cmc
push
subl
push
rcl
sahf
push
xor
aad
or
sbb
mov
movsb
jp
faddl
call
jl
adc
dec
pop
push
imul
outsb
fstps
jns
adc
cld
shll
or
stc
jb
inc
loope
nop
ret
aad
and
and
add
int3
jp
cs
or
out
cltd
out
ljmp
pushf
pop
pop
xor
mov
testb
std
mov
mov
jp
out
jb
sub
loope
lods
repz
fistpll
xor
inc
jle
and
ret
mov
and
sub
fsubs
sbb
pushf
mov
lahf
outsl
add
cmpsl
jle
mov
inc
jecxz
rclb
mov
hlt
ds
inc
icebp
fsub
clc
cmpsl
and
ror
scas
call
sbb
mov
push
pop
inc
adc
sbb
outsb
or
xorl
push
repz
add
ja
push
test
outsl
and
mov
mov
stos
push
inc
mov
mov
stc
mov
and
cli
push
sbb
fstpt
sub
sbb
mov
pop
mov
mov
or
mov
jnp
cmpsb
sahf
xchg
jle
outsb
repz
leave
pop
adc
je
dec
test
mov
jnp
lret
sbbl
dec
sbb
mov
dec
and
push
rol
fs
mov
das
shlb
pusha
jnp
jbe
out
inc
mov
adc
scas
pop
mov
loopne
mov
adc
xor
cs
aam
cmpsb
mov
in
xor
mov
mov
cs
lret
or
or
push
lods
js
rcr
xor
jg
sarl
test
adc
xchg
sub
mov
loop
cmp
mov
inc
or
xchg
xchg
scas
xor
or
xlat
stos
enter
lock
repnz
adc
push
xor
push
jecxz
bswap
ss
rol
loope
sub
sub
cmp
push
mov
adc
fsts
fidivs
and
cmc
les
out
mov
gs
adc
jg
push
push
inc
cltd
cmp
inc
push
xor
pop
mov
lods
adc
in
cmpsl
sub
loopne
add
imul
mov
inc
xor
mov
adc
jns
push
inc
aaa
jno
ljmp
rcll
int
jnp
shll
add
ret
js
fildl
ljmp
push
sub
fdivr
inc
popa
mov
cwtl
hlt
push
dec
ret
stos
sub
rorb
or
mov
adc
data16
mov
mov
mov
inc
int
decb
fsubr
adc
mov
jge
rorb
test
insl
orb
je
insb
aam
ds
pusha
mov
mov
inc
fiadds
mov
jle
xor
cmp
dec
or
cmovnp
push
jmp
stos
pop
clc
jp
pop
sub
roll
inc
out
xchg
push
aam
xchg
mov
sar
loope
jbe
roll
xor
mov
ficomps
cwtl
pusha
mov
inc
or
adc
cmpsl
xchg
cld
mov
pop
pop
sub
inc
mov
popf
push
mov
es
adc
dec
jge
jns
jecxz
out
scas
xor
sbbb
add
pop
test
arpl
repnz
xchg
sti
pop
scas
xor
push
jl
cli
and
cmp
cmp
outsl
repnz
cmp
jb
int3
jecxz
or
lods
sbb
sbb
push
loop
daa
mov
in
cld
dec
lea
mov
stc
mov
fstpl
and
sub
jo
cmp
jecxz
scas
add
dec
mov
lods
pop
jnp
jnp
mov
push
fcomp
inc
sbb
jb
sub
popa
repz
inc
ret
js
cltd
mov
add
fldenv
mov
fcomps
pusha
mov
lds
addr16
pop
pop
push
mov
xor
pop
pop
dec
daa
add
pop
jp
movsl
sbb
cmp
addr16
enter
cltd
xchg
jo
incb
jo
jnp
test
int3
jns
jp
loopne
xchg
xor
jecxz
imul
pop
mov
icebp
lock
mov
jno
jnp
jp
xchg
sbb
pop
push
sbb
sahf
fwait
popf
or
aam
mov
mov
lods
scas
icebp
mov
xchg
in
rclb
les
and
jb
push
mov
sub
sub
cmpsl
filds
adc
adc
repz
je
xchg
jmp
data16
daa
lret
pop
jo
mov
mov
out
cltd
pop
jns
lcall
insb
adc
addr16
stos
out
into
add
push
sub
mov
push
mull
adc
pop
enter
hlt
or
add
aam
clc
sub
nop
or
in
dec
test
pusha
mov
add
push
dec
cli
inc
pop
inc
dec
in
stos
shr
adc
push
call
data16
mov
pop
fsubs
loop
pop
pop
xchg
pop
adc
pop
lods
imul
inc
test
outsl
popf
call
loop
shl
mov
pop
nop
ja
push
mov
jg
imul
fisttpl
into
mov
popf
icebp
dec
enter
lods
or
call
int3
scas
mov
ja
jnp
mov
jne
cmp
mov
add
test
xor
sahf
push
scas
xor
cmpsl
dec
roll
rolb
cltd
pusha
push
and
and
adc
push
inc
stc
inc
stos
test
xor
and
clc
xchg
push
lret
push
sub
dec
stc
mov
leave
xchg
call
sub
sti
scas
xchg
out
jno
jo
jmp
mov
out
pop
jecxz
add
hlt
shrb
insl
xor
test
sbb
mov
or
mov
insl
mov
scas
mov
and
cmpb
xlat
bound
call
sbb
jg
add
sub
push
mov
lret
mov
in
push
fidivl
in
inc
jbe
ljmp
sub
jl
in
jne
pop
add
xchg
addr16
push
fidivs
inc
inc
leave
lds
or
adc
mov
pop
rcrb
andb
mov
and
stos
movsb
testl
leave
adc
shlb
sbb
push
cli
pop
push
rorl
fcoms
enter
out
mov
mov
mov
call
pop
outsb
add
test
xchg
add
jo
xchg
pop
fwait
and
dec
or
imul
arpl
mov
ss
or
aad
mov
mov
sbb
cwtl
pop
pop
stos
or
or
dec
pop
mov
or
and
mov
lock
fwait
add
call
mov
test
dec
out
arpl
jmp
out
xchg
and
pop
pop
xchg
cmp
scas
in
sub
stc
mul
ja
adc
jg
pop
push
mov
cmc
mov
adc
lret
xor
cmp
adc
sub
popf
gs
push
popf
jnp
repnz
test
xchg
push
push
mov
mov
mov
jne
pop
lock
dec
stos
mov
rcrb
cli
xchg
and
in
popa
adc
add
mov
xor
out
inc
add
insb
sbb
outsb
pop
aaa
inc
push
add
sub
adc
cltd
cmp
nop
mov
mov
mov
mov
stc
into
pop
push
push
mov
jge
lahf
sbb
jbe
adc
ja
jmp
mov
mov
adc
stos
hlt
pop
andb
nopl
lods
lea
sbb
mov
jg
mov
imul
test
hlt
mov
scas
lock
daa
test
and
cmpsb
test
mov
mov
xor
jbe
or
xor
sub
divl
adc
jb
lods
outsl
add
pop
fisubrs
push
add
xlat
push
mov
mov
cltd
and
add
sbb
in
insl
out
cs
push
xchg
xchg
cli
outsb
ljmp
cld
inc
shlb
movsl
or
mov
jl
xchg
push
cmp
clc
andb
xchg
aaa
ljmp
adc
mov
mov
ror
or
jns
inc
aam
jbe
cltd
or
sbb
add
xchg
cltd
lds
xchg
sti
movb
sub
sub
fstps
xchg
ja
nop
sub
call
pop
subb
rol
lcall
jb
stc
fstpl
pop
js
dec
or
stc
jle
push
outsb
int
mov
xchg
in
adc
fsubs
ret
out
add
in
pop
cmp
xchg
sbbb
cltd
xchg
jo
cmp
cs
mov
stos
dec
daa
shld
data16
jne
imul
loopne
mov
or
xor
cmpsl
lds
jge
outsl
in
xor
lods
leave
xchg
inc
pop
out
movsb
mov
loope
xor
out
cmp
inc
xchg
push
pushf
sarb
dec
and
jp
ret
shl
std
sbb
int3
mov
pop
mov
sahf
push
enter
adc
aad
and
into
xor
push
mov
mov
int
sahf
imul
xor
mov
int3
mov
scas
aad
test
cmp
arpl
xchg
cmp
ffreep
inc
lret
lcall
adc
add
or
cmc
mov
pop
fildl
xor
or
jbe
sbb
mov
and
push
dec
test
loope
stos
adc
mov
roll
es
lea
xor
or
inc
adc
aaa
jns
lds
jecxz
call
xchg
dec
sbb
je
mov
in
pop
loop
xchg
ficomps
popf
out
fmuls
push
lods
push
cli
xchg
sbb
xchg
push
popa
xchg
dec
mov
mov
sbb
mov
loop
push
mov
ja
add
orps
out
fidivs
pop
mov
ret
xor
sub
mov
or
xor
fcomps
ret
shrl
jns
sub
sub
sub
and
gs
repz
pusha
dec
sub
fmulp
sub
inc
iret
stc
lods
out
cmc
rcll
lods
pushf
lea
movsl
fbstp
add
repz
in
jnp
add
data16
lret
ljmp
jecxz
das
push
push
and
inc
stos
notb
inc
and
daa
leave
out
hlt
fsubs
lret
testl
push
fwait
cmpsb
sbb
testb
pop
inc
mov
fdivs
sbb
adc
lahf
add
stos
inc
pop
sub
subb
in
cli
loopne
dec
sub
add
sti
shlb
inc
jbe
mov
xlat
add
lds
out
nop
add
or
loopne
push
or
lea
mov
jl
mov
adc
fcom
iret
inc
add
sub
daa
jg
mov
mov
dec
lahf
sbb
jge
mov
call
push
xchg
sub
add
aaa
adc
pop
test
mov
adc
sbb
mov
mov
jle
sub
push
jecxz
lea
lods
iret
lods
xchg
mov
lcall
mov
dec
fistl
sbb
mov
push
mov
inc
andb
jmp
cmp
cltd
inc
push
jbe
mov
jle
es
shlb
icebp
mov
fildll
push
mov
lods
aas
lret
stc
cs
mov
mov
in
inc
fildl
iret
mov
lock
fiadds
cmp
fisubrl
mov
push
or
add
ret
ret
fadd
into
je
and
loope
mov
insl
cmp
daa
outsl
inc
mov
and
pushf
arpl
mov
xchg
push
insl
xchg
out
aas
std
adc
test
sub
pop
in
dec
pop
popl
loopne
stos
subl
aam
push
add
jge
add
lret
aas
rol
dec
mov
push
xrelease
in
xlat
pusha
imul
fcoml
dec
out
add
mov
scas
push
adcl
push
mov
jo
adc
xor
loop
mov
jl
outsl
test
jmp
jo
pushf
sbb
dec
jno
les
fistps
pop
jmp
and
aas
loopne
sbb
adcl
lret
loopne
mov
repz
xchg
pop
inc
sbb
inc
in
dec
adc
xchg
pop
xchg
sub
in
inc
dec
sarl
fadds
sbb
sarb
outsl
ljmp
fdivrs
pop
mov
sbb
jno
fst
sbb
mov
inc
jnp
cwtl
and
mov
sub
loop
inc
repz
mov
roll
xchg
adc
jns
scas
mov
push
lret
pop
daa
mov
test
xor
or
dec
push
icebp
movsl
cmp
jbe
sub
out
and
test
mov
inc
scas
popa
aas
cmp
add
adc
sub
test
outsl
adc
arpl
test
loop
cli
addb
sbb
loopne
mov
sbb
adc
int3
rolb
adc
jns
mov
in
mov
pushf
test
add
mov
pop
out
xor
loopne
test
xor
test
push
mov
adc
mov
or
dec
pop
scas
or
jge
mov
mov
or
ret
popa
test
jge
dec
mov
enter
dec
arpl
aad
add
ljmp
insb
out
repz
add
stos
pop
call
jno
xchg
gs
int
cmpsl
dec
js
lret
out
out
das
and
clc
popf
lret
rolb
ret
nop
iret
inc
movsb
std
jle
dec
sub
xchg
cmpsl
lods
xchg
xchg
dec
inc
mov
das
xchg
loopne
stos
xchg
push
adc
adc
mov
mov
popa
jecxz
pusha
gs
inc
enter
cmpsl
or
cmp
lcall
test
jns
pop
and
into
or
aaa
xor
xlat
aaa
ud2
test
push
clc
adc
push
sub
pop
cltd
stos
or
mov
jle
or
mov
jne
dec
int3
mov
pop
or
add
cmp
stos
rorl
jne
mov
push
jp
pop
cmp
and
inc
pop
icebp
sahf
dec
jne
jb
fsubl
enter
mov
mov
stos
cwtl
adc
addr16
inc
mov
mov
jns
sbb
push
scas
jno
cld
jns
dec
mov
sahf
jg
loope
inc
mov
mov
inc
push
fcoml
test
daa
inc
dec
cmp
in
js
dec
pop
in
cmp
neg
jge
arpl
call
cmp
mov
lret
pop
adc
xor
dec
mov
mov
arpl
xchg
andl
add
mov
inc
movsl
pop
cmp
std
into
lds
sbbb
aas
or
inc
out
lahf
lahf
ja
sbb
fadd
cmpsb
in
jo
xchg
mov
repnz
adc
rdpmc
stc
mov
mov
iret
mov
add
ljmp
mov
sub
shr
ret
mov
out
jns
jns
aad
jmp
mov
insl
cmp
xchg
ss
and
xchg
sub
push
push
mov
stos
sub
test
mov
xor
ret
sahf
add
iret
sub
arpl
or
mov
lds
cmp
xor
movsb
pushl
sbb
mov
cltd
mov
insl
imul
xor
inc
sbb
mov
mov
lods
dec
inc
sub
push
pop
mov
jle
lret
push
jnp
inc
rolb
sbb
adc
repz
add
adc
mov
inc
ds
arpl
popf
sbb
cmp
xor
jns
mov
pop
clc
decb
ljmp
pop
push
push
pop
in
enter
hlt
pop
fs
mov
or
sub
setae
movsl
lcall
icebp
lcall
cmp
iret
xchg
inc
inc
ljmp
neg
pop
jp
fdivrs
fdivp
daa
aad
dec
or
loopne
fildll
andb
mov
push
adc
lds
shrb
cmp
jbe
cmp
mov
dec
dec
mov
fisubrl
bound
adc
mov
jmp
mov
mov
cmp
xor
jne
push
push
jp
lret
in
pop
dec
jecxz
mov
in
pop
loopne
cmp
pop
roll
push
leave
std
jne
imul
out
push
frstor
mov
push
mov
push
push
pop
ja
inc
daa
test
push
mov
lcall
and
sub
mov
push
mov
cmp
jecxz
and
into
ret
dec
mov
loopne
aaa
pushf
shl
clc
sbb
das
sub
ja
cmp
push
cmp
mov
mov
inc
add
in
sub
icebp
or
or
cli
push
mov
push
jne
lret
bound
mov
out
ds
loope
aad
pop
repnz
push
call
ja
outsl
mov
add
or
xchg
rcrb
enter
mov
mov
arpl
frstor
add
mov
loop
cltd
popf
shr
arpl
ss
mov
pop
pop
and
cmpsl
shlb
lret
dec
xchg
in
pop
cmc
es
or
sub
push
cmp
xor
adc
lret
fists
imul
xor
and
xchg
fcmovb
push
add
and
mov
jl
mov
mov
bound
lods
cmpsl
dec
imul
adc
ljmp
mov
xchg
es
xchg
imul
shll
clc
sahf
mov
repz
add
push
push
imul
cwtl
jle
shll
popa
lds
mov
mov
fidivl
cltd
das
test
loopne
push
int
mov
mov
sbb
rcrb
sahf
popf
ret
test
jmp
les
cmp
aam
jo
dec
pop
aas
dec
stc
inc
jo
lds
inc
mov
cmpsl
mov
mov
dec
mov
jl
jecxz
incl
addr16
cmpl
or
add
fsts
movsb
out
jecxz
jg
pop
mov
xchg
movsl
sahf
xlat
mov
fdivs
and
imul
jae
sbb
pop
push
int3
sub
nop
sahf
add
adc
xchg
cmpsb
sbb
repz
jae
fistps
cmpsb
cmp
div
cmpsb
sbb
iret
cmpsl
push
lds
addl
adc
and
pop
ja
jnp
mov
mov
pop
aam
inc
mov
mov
add
pop
dec
out
sahf
fldl
dec
jno
sbb
sbb
push
ljmp
das
jne
mov
scas
adc
cmpsl
loope
adc
lahf
and
pop
insl
fiaddl
addl
cld
push
sub
scas
pop
or
sbb
mov
add
push
fcom
pop
adcb
push
bound
dec
or
xchg
jle
mov
mov
jne
pop
into
jl
push
int
pop
stc
add
test
add
ds
dec
mov
fs
fs
mov
pop
xor
jmp
dec
push
icebp
sti
pop
or
pop
lock
loopne
enter
push
into
cmp
pushf
int3
stos
rcl
pop
xor
jle
mov
cmc
bound
xor
sbb
outsb
sbb
adc
fidivrl
jge
xor
fs
test
in
lods
cmp
cli
mov
xchg
clc
mov
mov
adc
sub
data16
imul
mov
aas
pop
inc
jge
pushf
pop
sarb
negb
pop
push
lds
cwtl
clc
fwait
es
or
pushf
push
in
cmc
cwtl
addr16
test
mov
or
das
and
int3
xor
mov
pop
and
xor
ss
pushf
mov
xchg
test
inc
xchg
lcall
rcrl
repnz
xchg
push
lock
cltd
mov
popa
mov
mov
push
mov
jmp
sub
testl
je
ss
or
adc
dec
sarl
cld
and
sub
loopne
dec
jb
addr16
jmp
and
std
mov
fbld
push
cwtl
xchg
xor
ds
xlat
fs
test
jno
fistpll
ja
ror
add
dec
and
inc
fcompl
mov
and
in
pop
and
movsb
jae
cmp
mov
cmp
or
divl
sub
js
sub
notl
mov
mov
jg
or
fisubrl
inc
sti
divb
xor
mov
dec
outsb
or
lcall
popf
jns
lea
sahf
add
mov
xchg
push
push
scas
adc
mov
sti
das
in
inc
xor
addb
xor
sub
dec
jmp
fsts
mov
icebp
xchg
lahf
push
and
push
mov
and
into
repz
or
cmp
pop
cwtl
mov
outsl
fistpll
daa
jmp
pop
dec
jmp
jmp
xor
ret
shrl
inc
xlat
push
inc
or
popa
and
imul
mov
or
in
mov
outsb
mov
xor
cmpsb
add
sub
daa
cltd
and
sub
loope
stc
and
popf
mov
test
xchg
xchg
sub
iret
test
cmp
adc
mov
push
leave
push
imul
sub
sub
jns
xchg
mov
push
xchg
pmulhw
mov
sub
popa
sbb
cmpl
mov
mov
jmp
lcall
xor
nop
imul
sbb
movsl
pop
sub
fidivs
mov
out
movsb
mov
mov
addl
fildll
mov
call
imul
jno
jecxz
out
mov
dec
push
cld
sub
lods
push
xor
in
rcll
pop
ds
push
pop
enter
ja
outsl
push
imul
leave
lcall
push
mov
inc
mov
pop
cmp
push
in
pushf
stos
and
or
nop
cld
icebp
nop
dec
jb
or
dec
cmpsb
or
pop
pop
mov
inc
xchg
aad
pushf
ret
les
aaa
shll
mov
mov
fisubl
notb
cld
and
testl
fimuls
fcoms
mov
jns
dec
ss
aaa
mov
or
dec
mov
jae
mov
xor
outsl
sub
shlb
in
enter
loopne
insb
and
pusha
mov
mov
shr
popf
imul
jnp
push
jb
dec
add
loop
popf
test
test
xor
pop
pusha
fdivrs
sub
aas
js
jae
test
jle
movsl
dec
lods
xchg
jle
pop
push
hlt
icebp
data16
out
push
je
or
dec
loop
bound
and
out
jge
aaa
dec
push
sub
insl
or
jecxz
pop
jae
out
bound
gs
cmp
mov
mov
inc
in
sbb
lahf
sbb
sub
ds
push
mov
xchg
cld
jle
mov
dec
fnstcw
jp
shrl
xchg
cmp
ret
movsb
cmpsb
xchg
in
into
push
daa
loop
fucomp
sbb
push
mov
fdivr
mov
add
adc
dec
fs
nop
ret
into
lret
insb
push
push
stos
xor
sarl
jb
xchg
repz
les
pop
gs
jp
stos
dec
mov
xorl
stos
std
je
add
sub
out
push
imul
adc
stc
outsb
push
hlt
insl
inc
loope
add
mov
loop
pop
movsl
sbb
sbb
repz
push
pop
xchg
pop
aad
fimuls
or
mov
adc
and
sbb
adc
mov
popf
mov
add
or
xchg
adc
dec
arpl
inc
stos
add
fdivl
ja
or
sub
add
cmp
fldenv
xchg
mul
push
jmp
shrb
jg
call
push
mov
jle
push
clc
jg
sub
add
test
push
cmc
xchg
mov
std
fidivl
fwait
sbb
outsl
mov
mov
sub
cmp
scas
or
push
sbb
and
popf
jae
add
jmp
push
stos
scas
mov
inc
mov
pop
rclb
mov
cmp
stos
cmc
lret
lret
jns
jp
mov
fadds
sbb
or
out
in
xor
inc
mov
lds
mov
cld
cmp
popf
lds
mov
movsb
jo
sub
lods
andb
insb
repnz
lret
push
cld
cmp
adcl
sub
mov
pop
ss
adc
mov
cs
fucomi
leave
jbe
les
scas
je
cmp
das
xchg
les
iret
xor
cmc
mov
loop
sub
bound
mov
popf
in
fbstp
and
movb
mov
mov
int
repnz
mov
aas
xchg
imul
inc
or
in
cld
rcr
dec
lret
xor
mov
cld
sarl
sbb
mov
cmp
aam
outsb
jmp
jle
sbb
out
fists
push
imul
mov
scas
lea
out
pop
and
jns
outsb
ret
lcall
mov
es
inc
hlt
mov
repnz
int3
pop
pop
push
push
cmp
mov
lds
push
repz
inc
inc
cmpsl
fists
or
test
rol
stos
inc
arpl
sbb
dec
xchg
repnz
jmp
and
hlt
loop
jl
jns
add
xor
and
xchg
sub
dec
imul
out
jno
leave
lahf
push
and
repz
mov
xchg
inc
mov
mov
sti
inc
in
jp
lea
repz
cmovnp
notb
dec
hlt
push
push
popa
or
inc
leave
mov
push
xor
ljmp
push
push
movsb
repz
sbb
jb
sub
jno
es
mov
inc
jo
push
dec
push
rcll
gs
ljmp
jo
cmp
in
pop
das
inc
jae
push
lret
pop
out
repz
int
lahf
test
jo
push
inc
jbe
mov
outsl
cmp
pop
sub
jl
jge
inc
add
icebp
std
pop
addl
inc
daa
pusha
pushf
mov
fiadds
dec
in
push
pop
loop
or
sbb
mov
loope
mov
das
mov
mov
sub
or
add
push
js
call
movsl
jae
jb
rcrl
pop
in
scas
adc
xchg
mov
push
aad
push
jl
les
jbe
mov
rolb
lahf
fmull
push
int3
pop
pop
out
xchg
mov
jle
inc
inc
cmpsb
rcrb
call
sbb
pop
nop
sbb
add
fsubr
cwtl
cs
jp
push
idiv
imul
push
inc
es
add
sbb
gs
mov
cmp
add
xchg
lahf
mov
in
adc
andb
insl
enter
mov
push
data16
or
sbbb
test
repz
sbb
fildll
mov
lock
xor
cli
in
sbb
cmp
mov
orl
cli
pop
mov
mov
lds
push
mov
and
xchg
sub
pop
aam
pop
dec
push
inc
inc
das
aad
xlat
test
in
dec
add
int
or
jg
xor
fiadds
adc
and
neg
fcomp
lret
rcl
sub
out
sub
jg
xor
je
sbb
data16
lea
imul
std
and
pusha
stos
insl
aas
cmp
jecxz
sub
in
movsl
jne
xor
cmpl
test
stos
lahf
out
jnp
sub
mov
pop
mov
call
in
cmp
sti
cmpsb
or
sbb
inc
inc
popa
scas
inc
dec
cmp
test
jl
movsb
icebp
cmp
xchg
pop
ret
clc
pop
push
jns
repz
dec
push
pop
mov
mov
xchg
lods
or
add
ljmp
loop
inc
xor
jae
sub
mov
test
dec
jle
lods
int
int3
add
sar
test
sbb
mov
pop
lret
cli
arpl
mov
fucom
and
inc
icebp
pop
and
sub
mov
stos
xor
popf
mov
push
adc
movsl
shll
daa
sbb
add
dec
cli
in
hlt
fs
adc
test
fistpl
sbb
test
cwtl
sbb
adc
push
je
fwait
idivl
inc
loop
pop
test
imulb
inc
rcl
jb
inc
adc
je
mov
or
test
sbb
sbb
jns
pop
push
pop
push
mov
lcall
sbb
push
fists
into
push
stos
std
leave
lock
mov
movl
cmp
and
sbb
nop
cltd
stos
and
movsl
std
scas
aaa
mov
stos
mov
lret
inc
iret
pop
dec
aam
stc
or
jae
cmp
cmpsb
dec
xchg
scas
ret
and
adc
clc
loope
out
call
mov
dec
repz
push
sbb
pop
sbb
push
adc
mov
or
mov
out
pusha
lea
sub
push
xchg
fwait
dec
js
adc
dec
and
mov
adc
xor
test
pop
jle
cli
addr16
clc
imul
stc
lods
leave
jae
adc
mov
lods
jae
sahf
push
and
cmp
push
push
lods
cld
push
dec
mov
xchg
dec
sub
adc
or
ficoml
jae
add
mov
testl
shll
fldcw
cmp
jmp
loop
adc
gs
jo
pop
mov
jnp
push
dec
leave
inc
pop
rclb
add
cwtl
fldl
shl
mov
push
stc
jg
and
xchg
dec
mov
lock
shll
ret
or
mov
enter
iret
xchg
and
push
leave
in
je
std
sti
and
repnz
pushf
cmp
inc
test
movsb
xchg
mov
or
test
xchg
xor
adc
leave
xchg
iret
push
aad
lds
testl
xor
mov
scas
jns
outsb
sti
dec
lea
mov
mov
std
adc
xchg
daa
xchg
lds
mov
dec
test
int
mov
lods
cld
mov
popf
in
pop
xor
adc
repz
lods
lea
insl
dec
rclb
loope
or
popf
out
out
add
movsb
cs
rcrl
insl
leave
xchg
notl
fwait
aas
ret
lret
xchg
mov
adc
das
std
mov
in
pop
clc
lahf
jo
ficompl
icebp
int
pop
jno
pop
push
pop
loope
mov
xchg
lahf
mov
repnz
cmp
inc
ljmp
jnp
xor
push
es
icebp
jge
xchg
mov
jg
jecxz
xchg
insl
mov
call
jne
xchg
cmpsb
push
shrb
xor
into
shrl
loop
push
cmp
sbb
lahf
imul
cmp
sbb
les
data16
sub
inc
dec
inc
and
popl
mov
scas
imul
das
sub
mov
push
sub
aaa
jl
clc
outsb
push
sbb
jae
mov
fnstcw
int
inc
jbe
leave
arpl
stc
or
sbb
loope
add
add
subl
test
adc
in
movsb
idivl
fnstenv
push
jl
sub
sbb
mov
je
testl
out
push
or
es
push
push
pop
mov
pop
in
pusha
xchg
sti
xchg
push
das
inc
cmp
pop
adc
lret
mov
lahf
xchg
out
out
ja
aaa
iret
lret
pop
fstl
jmp
mov
addr16
leave
jle
pop
mov
dec
das
ljmp
xchg
aad
sub
xchg
shlb
xor
pop
cmp
mov
or
sarl
shlb
pop
pop
xchg
jo
mov
nop
xchg
cmpsb
sub
sbb
lcall
mov
lock
fiaddl
pop
pop
fisttpl
mov
mov
sub
pusha
jno
lret
test
and
fmul
cmp
adc
cltd
and
xchg
cmp
sbb
or
aaa
insb
cs
adc
dec
add
scas
add
xchg
mov
jmp
in
call
jmp
adc
mov
mov
mov
lcall
outsb
fs
sbb
out
push
cmp
notb
test
push
jle
push
pop
pop
jns
or
mov
pop
fs
lds
test
bound
cmp
xor
out
dec
inc
ss
and
pop
in
fnstenv
test
mov
pushf
adc
mov
sahf
add
mov
lret
shr
aaa
int
xor
jge
and
or
xchg
mov
int
inc
int
mov
mov
jae
cs
popf
fld
in
sbb
push
aas
scas
ja
fcomp
or
mov
pop
mov
add
pop
push
fdivr
and
push
adcb
or
mov
out
xchg
iret
pop
out
ret
push
xchg
int3
and
cltd
and
ds
hlt
shrl
outsl
mov
insl
ljmp
lcall
stos
xor
enter
pop
stos
mov
dec
add
dec
adc
fsubrl
pop
lods
mov
push
int
cmpsb
pop
fs
add
iret
push
std
ret
cmp
loop
mov
das
lahf
popf
jp
push
loop
addl
mov
sahf
ret
leave
or
add
cltd
push
sbb
enter
imul
jb
fcoms
or
adc
mov
mov
pop
sbb
mov
stos
pop
bound
insl
aas
and
fadd
inc
ss
mov
jmp
repz
cmpsl
cmpsb
jle
lea
das
adc
push
dec
and
adc
pop
jns
nop
xchg
lods
push
imul
xchg
adc
dec
fisttpll
and
adc
imul
insl
sbb
xor
lods
inc
jns
into
das
orl
xchg
push
ja
dec
mov
pop
xchg
lahf
stos
rcrb
movsl
outsl
mov
test
and
ror
fucom
lds
cmpsb
iret
jge
je
shr
dec
in
sti
xor
ret
xorl
ret
mov
jbe
or
lods
js
aad
sub
gs
xchg
test
dec
jnp
xor
pop
pusha
jns
jg
aam
inc
sbb
or
pop
aam
pop
sbb
add
inc
lret
and
ret
pop
daa
mov
out
mov
hlt
xchg
mov
adc
out
push
add
scas
xchg
out
mov
ds
sub
shlb
push
mov
and
mov
daa
xlat
sbb
in
ljmp
inc
dec
mov
xchg
push
sbb
sub
jmp
xchg
xchg
mov
scas
lret
pop
cld
popf
mov
repz
xchg
pushf
mov
sbb
outsb
and
sub
repz
mov
enter
fisubl
push
stos
push
sub
scas
push
lock
movsl
inc
jb
inc
adc
pop
adc
ljmp
mov
insb
or
lret
popa
dec
push
mov
fisubs
pop
lret
scas
dec
pop
and
cld
xchg
popf
mov
int
xchg
repz
add
lock
repnz
fisubrs
popa
fisubrs
addr16
add
jg
lock
shl
pop
aam
xor
out
mov
add
int
pop
or
pusha
movsb
pop
lret
stos
push
mov
testb
jae,pt
aaa
mov
fwait
push
sub
pop
fnsave
cmp
in
mov
out
mov
ss
scas
and
fdivrs
hlt
mov
icebp
test
dec
shll
loop,pt
sbb
mov
cli
cmp
mov
inc
mov
push
mov
adc
inc
jp
add
insb
stc
cmp
out
sbb
stc
mov
sub
insl
aas
inc
aam
sarl
mov
orb
enter
call
mov
das
push
cmp
pop
je
jle
das
xchg
cmpsb
test
add
pop
les
xchg
xchg
xchg
cmp
cmc
out
mov
leave
out
xor
movsb
outsb
imull
fbstp
xchg
mov
out
js
sbbb
and
add
in
xorb
cld
inc
add
jnp
pop
cltd
in
mov
iret
push
aaa
repnz
dec
inc
imul
cmp
loopne
mov
fstpt
mov
and
lods
cmp
cmp
cmpsb
mov
int3
rorb
mov
test
and
fwait
movsb
ret
pop
cwtl
cmp
mov
cwtl
ret
jo
xlat
insl
nop
dec
movsl
ror
lds
cltd
cltd
dec
xor
dec
mov
xor
push
lock
jmp
popf
divb
push
mov
cmp
test
sub
fsts
fstps
fsubr
add
mov
xchg
cmpsb
leave
into
in
iret
lret
add
aad
in
inc
sbb
popa
sub
ja
inc
mov
roll
notb
inc
out
test
jbe
jecxz
repnz
das
push
scas
es
jp
and
loope
or
xchg
sub
test
ds
push
jo
fimuls
addr16
negl
sub
aam
imul
jle
ret
or
mov
sbb
aas
jle
jmp
shl
stos
scas
push
fimuls
shlb
jns
jns
jnp
cmpsb
sbb
pop
loope
inc
movsl
test
and
insb
adc
out
push
test
je
aad
out
inc
sub
stos
add
and
or
xor
cmc
ret
add
outsb
inc
or
xchg
or
xchg
jp
sub
inc
adc
mov
inc
inc
cmpsb
pop
pop
dec
push
mov
test
add
inc
inc
jns
loope
dec
jne
adc
and
jae
adc
aaa
arpl
or
sub
and
lods
enter
jp
xchg
ret
xchg
out
out
shrl
addr16
das
inc
push
enter
ja
cmc
mov
dec
fisubs
add
fstpt
xor
dec
repnz
push
inc
cs
sbb
out
push
cmp
inc
imul
in
mov
js
clc
jle
mov
push
adc
insb
js
inc
mov
stc
movsl
mov
fldcw
jmp
nop
xlat
push
adc
les
cwtl
jmp
mov
adc
xor
movswl
mov
lret
push
dec
addb
outsl
mov
sub
loope
mov
cmp
or
repz
fisttps
mov
xchg
dec
iret
push
ret
xchg
pop
loop
fwait
jmp
mov
mov
popa
mov
fmul
in
xlat
or
in
lds
stc
stc
enter
sub
or
jnp
xor
jl
mov
imul
insl
mov
shrl
xchg
and
inc
mov
inc
call
cmp
adc
dec
xchg
xor
mov
add
inc
adc
push
cld
mulb
fwait
sbbl
mov
push
cmpb
stos
movsb
jg
fcoml
inc
sbb
sahf
pop
push
jns
jecxz
mov
fcos
fmull
lahf
dec
xlat
imul
lahf
call
adc
push
xchg
mov
adc
inc
push
movsb
arpl
loopne
cli
inc
push
dec
out
mov
lcall
ja
pop
cmp
jg
add
mov
shl
or
movsl
xchg
mov
cwtl
inc
pop
ss
and
jne
fcompl
cmp
and
dec
enter
mov
push
pop
push
sti
arpl
jmp
mov
lock
mov
in
test
sbb
cli
adc
add
sbb
scas
pop
cld
cmp
subl
pop
or
hlt
push
jo
dec
cli
mov
outsb
sub
outsb
fldl
inc
xor
cmpsw
pop
popa
mov
mov
scas
xchg
push
push
jns
lret
stc
or
in
or
test
mov
addr16
clc
or
lret
lret
aas
dec
dec
mov
ds
pusha
pop
idiv
lods
push
clc
inc
fs
mov
out
insb
inc
adc
popa
pop
stos
cmc
fnsave
jne
cwtl
mov
push
fs
dec
jmp
and
sbb
xchg
mov
mov
data16
xchg
mov
scas
jp
dec
mov
int
hlt
lods
xor
inc
cmpsb
cli
xor
or
shll
stos
scas
sahf
push
cwtl
jg
pop
fwait
daa
or
or
sarb
ja
mov
imull
ret
sahf
pop
add
push
pop
scas
add
cltd
or
push
cmpl
or
inc
push
push
xchg
cmpsb
inc
stos
loopne
pmovmskb
inc
aaa
lahf
mov
pop
int3
push
sub
mov
push
movsb
in
jno
cmp
jb
daa
ds
mov
lsl
int
mov
mov
push
scas
xchg
daa
into
xor
pop
xchg
loop
adc
imul
dec
aaa
int3
mov
rorb
push
movsl
adc
mov
and
bound
lock
enter
rorl
pop
add
in
lret
mov
or
sub
nop
out
cmp
lods
pop
and
push
roll
dec
mov
mov
orb
cs
mov
test
pop
push
jae
leave
or
cwtl
cmp
push
inc
scas
xchg
lods
push
leave
jle
dec
ret
add
xchg
test
xor
je
xor
lods
push
mov
pop
mov
in
sub
xor
pusha
add
jmp
jnp
rclb
fcomps
ss
outsl
mov
imul
data16
lods
inc
push
outsl
mov
jno
movq
or
push
fistl
jo
data16
dec
push
or
enter
cmp
int3
xchg
and
lea
push
cmp
xor
xor
jle
mov
add
pop
mulb
ljmp
jge
es
stc
outsl
add
fs
sub
popf
je
cmp
pop
sbb
mov
pop
push
adc
mov
mov
rcrb
jne
pop
aam
out
into
cld
loopne
cmp
inc
sbb
pushf
out
sub
ds
icebp
sbb
push
out
cmp
mov
loopne
call
es
lret
leave
roll
repz
sbb
sbb
xor
call
out
sti
lcall
lds
jns
xchg
cmpsb
repnz
cmp
pop
or
stc
inc
push
push
mov
dec
push
arpl
adc
pop
xchg
in
inc
dec
mov
inc
fmull
xor
pop
cmp
xlat
mov
cs
insb
inc
mov
adc
insl
out
std
sbb
enter
xor
jge
sbb
jno
adc
lcall
adcl
inc
imul
adc
nop
call
dec
pop
ret
pusha
inc
in
jb
mov
inc
fmuls
adc
aad
sub
xor
in
sbbl
addr16
test
shrb
inc
mov
cli
scas
fsubs
cwtl
cmp
je
mov
and
ret
test
ljmp
xor
push
ljmp
mov
mov
cmpsl
sbb
outsl
add
xchg
jmp
addr16
sub
fsub
push
ret
ds
sbb
leave
std
in
iret
adc
adc
outsb
push
gs
inc
dec
xchg
or
and
adc
jle
mov
lahf
mov
ret
xor
in
xchg
xchg
out
sbb
lods
jge
das
pushf
sbb
inc
movsb
sub
lods
jbe
mov
lock
push
sub
inc
pop
lcallw
mov
scas
pop
outsl
addr16
daa
test
shr
mov
cmpsl
pop
mov
xchg
cmpl
movsb
cmp
pusha
out
mov
fdivrp
cmp
dec
sahf
pop
sahf
ljmp
repnz
mov
inc
mov
cmp
jno
enter
mov
push
fnclex
pusha
pop
sahf
shll
stc
xor
loope
icebp
shrl
das
fnstcw
cld
pushf
sbb
mov
rcrl
push
in
clc
out
sbb
mov
les
sub
test
leave
insb
clc
test
dec
add
jge
xchg
pop
dec
test
jmp
push
jnp
or
inc
push
je
scas
push
and
sub
test
push
mov
mov
push
shrb
ljmp
mov
loopne
int3
xor
cmpsb
int
jge
xlat
push
pop
lahf
loop
inc
pop
add
idivb
lret
addr16
jbe
jle
sbb
or
das
xchg
sbb
daa
repz
push
sbb
mov
dec
mov
mov
ds
inc
jg
mov
xor
cli
repnz
add
inc
inc
sbbl
jnp
call
in
mov
jnp
pop
jmp
aam
mov
push
adc
xchg
test
sbb
pop
jge
mov
push
inc
mov
push
sahf
or
add
xor
mov
or
lahf
loop
jno
loopne
add
inc
pusha
xchg
pop
add
inc
xchg
outsl
mov
push
pop
add
orb
mov
mov
mov
leave
shl
repnz
pop
pop
sub
fadds
call
mov
mov
mov
sbb
push
jae
enter
jp
inc
lds
dec
push
fisubrl
push
mov
inc
lock
fsubr
push
in
inc
sbb
or
and
lret
pushf
jnp
xchg
dec
leave
in
loop
mov
fnstcw
fdivs
mov
into
fiadds
jge
jmp
sub
pop
jbe,pt
mov
ds
push
sahf
nop
negl
pop
inc
pusha
cmpsb
inc
scas
jae
out
sbb
popf
lahf
cld
cmp
sar
push
outsl
mov
je
push
add
fcomip
popf
aaa
sbb
sub
mov
inc
stos
loop
popa
iret
fdivr
inc
mov
popl
xor
ds
hlt
call
sbb
inc
inc
out
mov
dec
mov
out
nop
jmp
sahf
pop
bound
cmc
mov
or
xor
scas
inc
xchg
or
or
pop
xchg
pop
jecxz
cmp
cs
inc
mov
pop
mov
mov
jmp
sbb
rcr
or
adc
pop
roll
outsb
test
cmp
mov
int
sbb
adc
dec
fwait
pushf
and
cmc
scas
and
jecxz
ss
icebp
mov
in
scas
add
sub
lahf
mov
fnstcw
sbb
pop
pushf
mov
in
mov
addl
fwait
mov
stc
les
pop
jb
pop
dec
loope
scas
or
pusha
hlt
lcall
jmp
filds
aas
cmp
fmuls
sahf
lcall
test
xor
ror
cmp
les
xchg
xchg
pop
dec
aaa
inc
gs
sub
stc
jecxz
inc
pop
cltd
sbb
das
mov
loopne
out
stc
sub
xchg
ljmp
xor
dec
sbbb
fptan
cmc
imul
in
sbb
imull
push
imul
aaa
jmp
or
cmp
popa
cmpsl
out
jp
mov
jge
mov
cmc
in
orb
ds
lods
loope
sub
cmp
std
pop
pop
shll
xchg
inc
iret
cld
sar
lock
cmp
roll
scas
mov
pop
adc
mov
mov
push
sub
jp
daa
dec
xor
cmpsb
out
mov
xchg
das
and
fidivl
int
add
pop
test
test
pusha
ljmp
mov
inc
mov
rolb
sub
push
jbe
ds
addr16
jmp
sbb
xor
jle
loopne
cmpl
pop
cmc
xor
lock
mov
cmp
pop
push
imul
mov
sbb
int
in
and
testl
fsubl
test
sarb
mov
dec
lahf
push
dec
xchg
aaa
and
ret
push
ljmp
fstp
shld
shl
data16
rep
and
cwtl
cmp
fwait
and
stos
jge
add
push
jle
inc
test
add
mov
fcomi
test
std
roll
cmpsl
sbbb
add
pop
xchg
fwait
sbb
aaa
insl
sbb
mov
aad
pop
adc
mov
outsb
and
mov
pop
hlt
add
pop
enter
push
mov
sub
mov
pop
xor
jge
lahf
pop
insb
cmp
mov
movsb
sub
pop
rolb
das
lret
cli
fisubrs
and
xchg
cmp
mov
out
cmp
jo
fsub
adc
add
fucomi
gs
fcoml
mov
xlat
into
mov
push
das
dec
outsb
das
xchg
pop
add
imulb
xchg
mov
orb
add
movl
xor
ja
shrb
xchg
push
daa
test
pop
loope
push
xor
ss
adc
xor
jo
stos
push
test
in
sub
cs
mov
ljmp
mov
cmp
mov
xchg
mov
pop
lock
inc
rolb
or
ret
push
frstor
popf
movsb
arpl
arpl
mov
mov
mov
fildll
inc
pop
mov
xchg
cld
iret
in
add
fnstcw
jmp
mov
stos
aas
push
jae
lock
fld
test
sbb
xchg
shlb
add
mov
pop
sbb
jl
ret
ret
js
xchg
idivb
enter
aaa
or
cmp
or
xor
cmpsb
push
popf
add
xchg
orb
mov
je
out
loopne
fs
out
std
xor
sbb
mov
sbb
or
cmp
xor
pop
repnz
gs
push
scas
lcall
dec
fiaddl
adc
in
ja
mov
or
cmp
movsl
xchg
push
jo
sub
cmp
shll
mov
inc
icebp
inc
cmpsb
inc
repnz
mov
dec
and
push
cmpsl
jns
and
lock
mov
lea
fldcw
and
call
dec
cs
int
cs
jecxz
fs
dec
fisubs
sbb
fidivs
aad
bound
xchg
bound
insl
cmp
mov
sbb
hlt
xor
je
rolb
leave
seto
fisttps
leave
enter
sub
scas
dec
out
roll
mov
fsubs
and
push
adc
lea
xor
xor
mov
mov
gs
mov
pushf
sbb
loop
jle
pop
frstpm(287
jg
xchg
adcb
xor
fldt
in
sub
hlt
mov
and
out
ja
pop
cli
jno
fucomp
movsl
hlt
sub
push
aas
pushl
iret
push
xchg
mov
stos
fldenv
dec
jl
hlt
pusha
sub
jle
mov
orl
jbe
cwtl
inc
mov
sbb
sbb
les
dec
pop
sub
into
fucomi
adc
xor
push
inc
or
mov
sbb
jg
inc
sub
and
jl
dec
adc
or
xlat
ret
shll
and
pop
xchg
mov
fisttps
sbb
pop
dec
loope
test
mov
jmp
icebp
push
mov
or
sub
sbb
sahf
stos
scas
xchg
popf
push
pushf
or
xchg
ja
xor
dec
pop
sub
lds
test
xor
imul
mov
ror
mov
or
icebp
in
or
xor
jns
in
or
add
jns
lods
mov
vminpd
fildll
jnp
fnstsw
in
in
jge
dec
jne
inc
xor
insb
mov
or
adc
daa
dec
sbb
aaa
mov
lock
adc
sub
test
xchg
and
push
xor
vmovlps
daa
inc
in
xor
fwait
movsl
pusha
scas
icebp
push
xchg
addr16
sub
loop
mov
lods
pop
lret
push
or
loope
repnz
mov
daa
sbb
lods
rcll
xchg
inc
cmc
out
imul
adc
cmp
jl
xchg
xchg
adc
cmp
adc
shll
inc
or
movsb
js
inc
shlb
inc
fistps
mov
in
sbb
pushf
sbb
outsb
mov
outsb
pusha
orb
push
push
movsb
cwtl
mov
repz
test
jp
cld
push
xor
icebp
dec
xor
and
shlb
mov
jmp
inc
arpl
push
mov
or
or
push
ljmp
in
add
test
pop
pop
out
insb
imull
xor
iret
fidivrs
cmp
shrl
and
mov
pop
adcb
filds
push
mov
faddl
adc
sbb
adc
mov
addr16
pop
inc
out
or
pop
jmp
mov
pop
inc
scas
sub
mov
iret
adc
cmp
jg
repnz
scas
iret
jecxz
outsb
cmp
shl
adcb
xchg
into
jb
or
loopne
mov
push
dec
into
xchg
leave
leave
inc
lods
neg
or
fsub
cli
cmp
xchg
pop
jo
jbe
sbb
jmp
nop
popa
and
stos
out
movsb
sub
test
xchg
mov
and
xchg
mov
sub
mov
push
push
pop
outsl
mov
adc
cmpsb
out
cmpsl
fildl
pushw
inc
test
mov
ss
inc
int3
sbb
push
or
lods
sub
adcb
xchg
push
loop
fmuls
push
sbb
and
loope
test
outsl
push
adc
add
test
and
rcrb
inc
adc
lret
sbb
pop
mov
out
pop
mov
xor
mov
push
adc
push
aas
jp
jp
mov
inc
mov
push
push
mov
aad
and
jl
jge
int3
shl
lods
cmp
daa
scas
xor
mov
repnz
in
mov
not
ja
and
out
cs
xchg
fisttpll
or
cmp
and
pusha
cmp
pop
lret
inc
add
pop
aaa
push
pushl
cmp
jnp
iret
jp
addr16
movsb
mov
mov
inc
inc
add
pusha
cmp
push
sahf
mov
cmp
icebp
jecxz
fiaddl
rorb
xor
jl
ret
push
ret
push
adc
test
mov
push
push
inc
mov
aam
into
cmpsb
enter
adc
cmp
mov
xor
xchg
jmp
push
xor
sbb
pusha
rcl
dec
rcrb
cld
ds
in
mov
pop
dec
jge
push
sbb
fdiv
sbb
fisubrl
and
push
dec
jne
fdiv
daa
xchg
jne
mov
xchg
xlat
sub
sbb
jae
insb
push
adc
mov
clc
mov
or
add
add
mov
jecxz
xor
negl
adc
insb
pop
cld
pop
sbbl
adc
lret
push
cmpsl
xchg
inc
dec
pusha
xor
adc
sbb
xchg
mov
sbb
pop
into
xor
cmp
prefetcht0
popa
outsl
adc
inc
mov
dec
icebp
lahf
and
fcompl
mov
insb
push
int3
xchg
icebp
shr
sahf
sbb
cmp
or
or
sub
data16
ljmp
rol
mov
aad
outsl
push
inc
push
arpl
sbb
lods
das
ret
pop
adc
or
xchg
enter
shl
pop
sbb
sbb
jmp
sbb
mov
mov
in
out
subb
icebp
add
cmpsl
scas
in
pusha
outsl
shll
cwtl
inc
push
lea
push
pusha
rcrb
dec
rclb
sub
push
xchg
mov
std
push
dec
mov
mov
inc
jg
mov
enter
cmp
daa
or
jmp
enter
dec
stos
fsubrl
pushf
scas
fsub
call
push
addr16
mov
inc
imul
add
push
lds
mov
in
inc
jecxz
lret
sbb
or
mov
xchg
mov
jb
mov
fistl
iret
aad
clc
jnp
andl
mov
pop
push
scas
sbb
xchg
je
jne
pop
sti
fldl
mov
cmp
sbb
mov
and
mov
fwait
addl
dec
imul
inc
ficoms
out
lcall
pop
decb
push
add
pop
push
test
mov
in
int
mov
daa
ss
jbe
and
outsl
xor
int
mov
stos
sqrtps
ss
das
dec
mov
cli
lock
mov
xchg
xchg
and
sbb
add
mov
in
ss
lret
jl
or
jg
sub
cltd
daa
xchg
clc
imul
and
inc
xor
xchg
sahf
popf
fldl
jno
ret
das
andb
dec
insl
stos
nop
xchg
jns
adcl
mov
mov
push
xchg
loope
andb
dec
or
enter
xor
push
mov
dec
std
xchg
scas
cmp
mov
les
mov
scas
imul
mov
testl
lea
push
xchg
sub
ljmp
cwtl
dec
clc
mov
outsb
ljmp
inc
mov
mov
xor
sub
movsl
adc
nop
mov
stc
pop
push
xchg
push
jmp
add
std
adc
shr
push
pop
enter
fdivl
sarl
xchg
cmp
jmp
dec
lcall
push
mov
fcmove
pop
xor
mov
adc
out
divb
mov
ret
adc
test
outsl
mov
jbe
sti
imul
or
jnp
jg
jns
push
lahf
jg
xchg
pop
stos
or
dec
jnp
arpl
jge
pop
mov
test
adc
loope
orb
aas
dec
loopw
aas
icebp
pop
stos
sub
dec
loope
lods
aad
mov
pop
into
mov
sub
enter
lods
ljmp
push
and
sub
dec
loope
jae
pop
xchg
repnz
jle
clc
mul
andb
xor
adc
sahf
mov
pop
cli
icebp
pop
lods
stos
or
and
mov
adc
aaa
pop
stc
push
mov
inc
ljmp
stos
mov
enter
add
inc
and
pop
aas
das
mov
and
add
enter
add
cmp
insl
arpl
pop
daa
ficoms
jo
mov
int3
mov
test
bnd
dec
and
mov
and
sahf
arpl
add
scas
rolb
cmpsb
xor
mov
jmp
push
adc
faddl
cli
jno
cmp
sbb
mov
jae
dec
and
sahf
mov
sarl
inc
cli
adc
sti
jmp
pusha
flds
pop
nop
imul
mov
cli
or
out
pop
push
pop
dec
outsb
dec
push
adc
pop
shlb
jne
adc
sub
pop
mov
sahf
xlat
negl
icebp
ss
and
cwtl
push
push
xchg
add
ret
lds
sub
jp
push
xor
in
ljmp
and
adc
pop
pop
je
xchg
pusha
imul
mov
shrl
shll
and
dec
aaa
dec
popf
mov
fadd
leave
and
fwait
test
inc
movsl
mov
dec
addl
es
pop
jmp
cmp
dec
ljmp
ljmp
arpl
rcrl
jp
mov
xchg
sub
push
push
inc
fimull
outsb
xchg
push
lcall
mov
sbb
xor
and
mov
pusha
mov
and
cmp
in
andb
mov
push
mov
out
xchg
sbb
aad
fwait
sub
faddl
xchg
fcoms
jg
jp
fidivrs
mov
pop
cmpsl
pop
mov
in
notl
cltd
lahf
leave
js
mov
xor
imul
add
adc
cmp
mov
mov
cmp
fadds
popa
les
push
dec
aas
sbb
ja
rdpmc
enter
loopne
push
popf
pop
cmc
test
out
into
call
sbb
dec
repnz
cli
jbe
jge
lock
out
push
jns
or
rolb
inc
pop
lds
sub
pop
ret
ficomps
cmc
in
add
jl
jne
mov
sub
pop
lahf
jb
or
jg
out
movsl
jp
sbb
lahf
inc
stos
cmc
pop
jge
push
incl
dec
sti
cmp
pop
insl
mov
cmpb
fldenv
dec
test
aaa
imul
mov
add
push
lcall
dec
mov
push
sbb
xor
and
cmp
mov
cmp
mov
jg
pop
or
pop
adc
mov
dec
adc
jle
aam
sub
cld
pop
push
cmp
leave
mulb
insl
mov
xor
or
pop
ss
js
pop
xchg
dec
cwtl
fisubrs
push
cs
mov
pop
push
std
daa
or
pusha
xchg
int
or
insl
mov
or
pop
lahf
je
imul
out
data16
mov
dec
and
fimuls
mov
out
adc
mov
mov
sub
and
sub
xchg
mov
int
out
push
jnp
sub
jg
stos
loope
push
in
mov
pop
arpl
jmp
dec
bound
xchg
add
xchg
outsl
dec
aam
and
jmp
jge
dec
jle
fmuls
jp
cmp
pop
pop
addr16
jb
fcompl
push
mov
push
xor
pop
add
pop
pusha
jns
fidivrs
mov
mov
shrb
in
cmpsl
fwait
sub
jge
push
leave
pop
add
das
mov
cmc
nop
lds
cmp
mov
dec
xor
ljmp
lcall
cmpsl
jns
ss
mov
js
xor
imul
popa
mov
daa
or
outsb
aam
dec
adc
jae
sets
lea
push
inc
push
sbb
movsl
sbb
xchg
xor
mulb
push
push
and
repz
mov
fxam
push
jae
jae
inc
xadd
jl
inc
sbb
mov
mov
sbb
ja
repz
xchg
out
and
adc
idivl
and
popa
jo
ja
fcmovb
mov
jg
xlat
pop
cmp
xchg
fst
mov
mov
mov
push
xor
pop
aad
sahf
xchg
ds
pop
xor
inc
mov
pusha
xchg
jns
jge
arpl
sbb
iret
ljmp
gs
or
insl
stos
dec
vpunpckhqdq
push
sbb
dec
push
xchg
jae
push
xchg
add
js
lock
mov
popf
pop
inc
mov
add
out
into
jp
in
repnz
insl
arpl
mov
cmp
fsubp
push
cmc
shrb
dec
mov
add
outsl
sar
or
xor
add
sbbl
shlb
inc
outsl
frstor
xor
dec
mov
aas
sub
in
pop
mov
in
xchg
ficoms
int3
sbb
pushl
lods
jp
mov
dec
out
mov
test
repz
mov
jbe
loopne
shrb
pop
lahf
lret
pop
inc
adc
insl
mov
out
out
mov
cmp
push
movsb
pop
test
sbb
jnp
cs
cmc
fstps
test
mov
lahf
inc
push
dec
jge
jle
setae
sbb
ffreep
adc
adc
jecxz
sub
popa
or
add
sbb
lods
lods
lahf
out
sub
push
popf
pop
push
test
imulb
jnp
sub
xor
jge
outsl
fyl2x
or
inc
adc
pop
mov
fiaddl
jecxz
xor
and
out
and
into
xlat
mov
sahf
sbb
xor
in
lea
pusha
mov
enter
adc
lret
pusha
adc
repz
cmp
push
mov
jbe
addr16
and
jecxz
adc
adc
inc
aas
fs
cmpl
sub
clc
pop
mov
pop
repnz
out
test
dec
jb
pop
mov
mov
repz
pop
jae
stc
adc
adc
imul
notl
sti
add
popa
sub
push
jb
aaa
xor
push
in
xchg
negl
int3
add
lds
mov
sbb
or
or
jae
xor
or
rcrb
jae
cli
inc
insl
incb
xlat
lret
adc
out
stos
and
pusha
cmc
sbb
jb
ret
xor
xor
test
mov
leave
inc
cltd
test
or
sub
pop
sbb
insl
dec
es
inc
les
movsb
add
divl
cmp
aas
dec
stos
sbb
push
arpl
mov
jns
sbb
pop
cmpsl
xor
mov
sub
push
sbb
jno
jmp
ds
stos
xor
mov
int
data16
aaa
inc
xchg
aad
or
sub
ja
push
orb
jae
push
fidivs
ficomps
sar
pop
dec
push
popa
push
jge
mov
lds
dec
push
adc
xchg
fistl
mov
mov
sbb
inc
movsb
jno
aaa
push
mov
pop
enter
decl
push
loope
scas
in
lret
pop
jmp
sub
cmp
jmp
cmp
js
or
xor
aam
cmc
mov
js
push
dec
xor
push
in
clc
shrl
lret
aad
pop
adc
insl
out
out
sbb
jnp
push
std
aam
faddl
cltd
add
adc
das
jmp
jecxz
push
ds
iret
pop
out
repz
xlat
arpl
ret
rcl
pop
xor
mov
lcall
ja
sub
out
mov
add
repnz
repz
pop
fldenv
and
jnp
fidivs
dec
jle
add
inc
xor
jp
int
enter
jae
sub
movsb
mov
decl
aam
jecxz
inc
cmp
and
jb
sub
fucomip
aam
ja
mov
mov
fsubrl
gs
and
js
stos
fisubs
pusha
inc
push
cld
add
lcall
push
pop
push
sbb
popf
mov
sbb
inc
pop
icebp
cmp
adc
enter
cli
mov
jp
jae
jns
dec
ss
pop
dec
sbb
cltd
xchg
call
xor
and
pop
faddl
mov
add
std
xlat
pop
mov
aaa
lods
xor
mov
movl
mov
xor
mov
sbb
adc
lahf
fs
push
sub
xor
push
mov
mull
outsb
push
lods
out
cmp
xor
lea
xor
jmp
outsl
push
and
sbb
test
xor
lods
lods
aad
fisubl
cld
repz
sbb
pop
pusha
mov
adc
pop
roll
mov
and
add
inc
sub
jle
sbb
loop
sarb
ja
fmuls
sahf
cs
out
cmc
push
push
cmpsl
sbb
pop
and
pop
xchg
inc
inc
fildl
or
mov
sbbb
dec
out
testb
mov
das
push
in
cmp
jns
cmp
add
loop
scas
and
outsb
movd
jns
sahf
hlt
rorb
cmpl
push
pop
test
in
popf
pop
aas
gs
xchg
ds
imulb
das
sbb
shlb
push
roll
and
fldt
xchg
adc
adc
inc
stos
jge,pt
mov
stos
xchg
xchg
sbb
xor
fsubrl
mov
cli
cmc
mov
push
add
inc
iret
jmp
add
push
pop
push
jmp
in
xchg
in
inc
xchg
and
negl
push
pop
mov
or
mov
and
xchg
fisttpll
mov
mov
cmp
jge
fistps
dec
push
lock
adc
movsl
mov
imul
dec
rolb
mov
pop
or
addr16
push
ljmp
daa
sub
enter
sbb
fbld
jnp
cmpsb
push
inc
and
ss
inc
adc
inc
mov
xchg
or
fidivrl
outsl
push
inc
push
aam
in
call
out
incb
inc
in
dec
clc
popa
in
std
fs
loopne
xor
or
lea
or
ljmp
shl
fcmovbe
gs
pop
cmpsl
mov
lea
dec
loopne
test
add
negl
mov
inc
mov
popa
stos
stos
adc
sbb
and
xchg
sub
cmp
adc
dec
out
cmp
inc
push
call
inc
push
adc
pop
and
test
inc
test
into
mov
leave
adc
shl
mov
dec
shlb
dec
cmp
mov
add
cmpsb
xchg
push
ret
or
hlt
cmpsl
arpl
cmp
test
cwtl
rclb
dec
fdivrs
inc
lea
loopne
enter
jbe
sti
lods
lret
shrb
fwait
or
int
mov
or
mov
imulb
push
xlat
frstor
dec
out
jbe
xchg
or
xor
push
div
int
pop
sti
cmp
dec
push
jne,pt
gs
sbb
je
mov
rcrl
or
jecxz
out
add
sub
mov
pop
faddp
jl
ret
mov
cmp
jmp
ret
mov
cwtl
movsb
fisttpll
add
aam
and
out
jge
lret
pushf
test
dec
inc
leave
std
add
cmp
dec
pop
lds
sti
loopne
cwtl
sub
xor
jmp
repz
add
sub
mov
sti
mov
sub
push
fwait
inc
pop
pop
pop
mov
and
add
mov
ds
bound
in
mov
jge
nop
xor
or
into
mov
add
repnz
mov
ja
outsb
movsl
xor
negb
sub
sub
in
dec
jo
aam
and
adc
cs
imul
xchg
fs
clc
mulb
cmp
and
adc
dec
pop
cmpsl
push
jne
mov
subl
or
mov
and
sbb
ja
push
pop
aad
mov
or
mov
xor
clc
mov
dec
mov
xor
xchg
stc
ljmp
mov
repnz
loope
xchg
adc
sub
imul
aam
jbe
stos
rclb
pop
je
dec
adc
jb
sbb
pop
mov
or
sub
divb
mov
add
sbb
pop
loopne
sub
into
mov
mov
dec
jle
or
inc
jnp
or
lret
in
cmp
jp
sub
jle
aam
int
dec
cmp
and
lds
shrl
cmp
lock
rcl
orb
dec
pop
std
addr16
stos
inc
mov
pop
xchg
lcall
xor
in
cli
sub
dec
mov
call
or
adc
lods
jp
stos
bound
push
nopl
push
xchg
mov
testl
sub
push
push
aam
jmp
mov
leave
sbb
sub
pop
adc
and
shrb
outsb
push
jne
jmp
fwait
stos
fdivs
stos
jmp
pop
mov
iret
out
push
sti
lcall
daa
call
jge
andl
push
bound
sub
xor
sbb
mov
cmp
push
jb
lods
add
repnz
sub
ficoms
sub
ret
adc
les
xchg
and
mov
xchg
leave
push
sbb
and
mov
imul
mov
mov
dec
outsl
andb
cmp
xchg
pop
sti
roll
jne
daa
inc
xchg
rolb
add
js
adc
out
mov
pop
addr16
faddl
xor
mov
jge
scas
fcoml
lcall
ret
ss
in
mov
lea
pop
jmp
test
mov
dec
icebp
ja
out
out
mov
jo
mull
pop
fildll
and
xchg
insl
imul
add
push
stc
aad
mov
fcoms
mov
push
int
incb
lret
ds
and
cltd
mov
push
jmp
clc
and
jle
sbb
sub
jno
xor
inc
in
outsb
test
adc
loop
fwait
sbb
and
xor
aaa
adc
sbb
jb
pushf
mov
inc
add
adc
sti
jl
push
pusha
jl
pusha
inc
add
cmp
out
scas
push
scas
mov
icebp
adc
nop
add
push
xor
jl
mov
andl
mov
jmp
jb
cmpsl
daa
hlt
add
int
inc
int3
enter
popf
cld
xchg
pop
ljmp
push
mov
pop
xor
add
sub
xor
pinsrw
jb
or
pop
mov
mov
sub
xchg
cmp
pop
dec
inc
dec
loop
ljmp
sbb
jmp
jbe
push
aas
inc
fld1
sub
push
outsl
arpl
xlat
call
pop
pushf
jne
jb
dec
lods
pop
mov
mov
sub
mov
and
in
outsb
fiaddl
push
cmp
shrl
adc
add
sub
stc
add
adc
test
mov
shlb
sarb
hlt
scas
mov
mov
sbb
je
aam
mov
js
in
or
mov
pop
in
aad
ds
pop
xor
out
repz
xor
sahf
pop
test
mov
inc
dec
add
or
movsw
adc
mov
shlb
and
adc
repnz
fisubs
fildl
lock
mov
ds
and
push
lds
mov
out
lret
and
push
inc
lret
dec
sbb
out
shlb
lock
fwait
sar
test
mov
pushf
add
cmp
fs
push
icebp
sub
dec
enter
adc
push
hlt
jg
inc
cwtl
pop
int
js
mov
cmpsl
or
lret
es
dec
int3
lea
mov
clc
lods
mov
push
enter
out
hlt
orl
subl
mov
stc
push
pop
cwtl
mov
fs
repz
not
jno
or
adc
pop
add
cld
lcall
jo
cmp
jnp
je
jle
fs
mov
jo
xor
mov
aad
add
sbb
add
sbb
jo
mov
pop
lahf
repz
scas
arpl
jae
mov
call
jnp
loope
fucomip
es
repnz
scas
popf
push
adc
adc
bound
add
push
cs
or
mov
pop
cmp
dec
stc
mov
mov
jo
aaa
fidivrl
es
sub
xlat
cmp
mov
in
jbe
mov
mov
mov
inc
inc
add
sti
lret
dec
cmp
out
jle
mov
xor
cmp
mov
nop
rorb
sarl
das
clc
adc
adc
dec
pop
shl
jmp
pop
or
mov
and
jg
pop
addr16
cld
test
mov
iret
mov
xor
outsb
gs
jl
into
or
jns
sbb
in
int
xchg
push
insl
jbe
dec
xor
and
xorl
jne
in
pop
sub
shl
rcrb
pop
inc
xlat
xchg
stc
out
rcr
dec
popf
push
jb
movsl
pop
int3
sbb
testl
jbe
mov
mov
mov
scas
out
xor
fdivrp
je
push
add
loopne
adc
cmp
dec
loop
out
movsl
je
pop
sub
es
adc
pop
mov
insb
or
jge
inc
xor
out
or
arpl
add
addl
int3
add
jecxz
loop,pn
pop
sbb
arpl
push
xor
cmp
adc
sub
or
rorb
aam
mov
loop,pt
fwait
mov
cltd
popa
jbe
cmp
cmp
adc
xlat
out
call
push
adc
ficoms
or
test
ror
xchg
mov
sbb
sub
push
lahf
cmp
decl
mov
frstor
xor
dec
cmp
xchg
fndisi(8087
popf
inc
xor
lret
dec
push
lods
and
lea
dec
call
movsl
int3
xor
pop
imul
pop
cltd
es
stos
popa
scas
or
sub
pop
out
fwait
repnz
das
lret
mov
aas
fwait
cmp
addr16
inc
pop
add
movsl
pop
cmc
in
xor
or
push
scas
mov
or
and
stos
push
and
cmpsl
dec
inc
aas
stc
pop
cmp
imul
dec
gs
stos
dec
jg,pn
mov
adcl
lea
pop
pop
mov
jp
and
call
rcll
fbstp
cmp
das
push
sub
adc
aad
in
je
cld
incl
lahf
inc
lea
sbb
clc
testb
fiadds
xchg
pop
push
inc
pop
lds
dec
mov
insl
mov
xchg
inc
outsl
andb
push
adc
nop
and
jbe
in
bswap
ja
aam
pop
push
in
aad
inc
adc
xchg
icebp
inc
dec
roll
push
cmp
cli
mov
leave
es
or
lret
inc
cmpsb
mov
int3
dec
test
int3
mov
mov
mov
aas
sub
shrl
insb
xchg
mov
leave
clc
push
pushf
inc
mov
mov
lock
xchg
data16
push
jno
and
stos
jnp
in
out
lahf
pop
lds
cmp
xchg
aas
flds
xchg
push
mov
fidivrl
add
insb
mov
lcall
movsl
lods
fwait
sbb
jno
or
pop
fsts
xor
jl
rcrl
cmp
sbb
cwtl
and
xchg
jg
sbb
dec
ret
mov
movsl
jnp
lock
sbbl
rol
sti
add
in
pop
jmp
or
hlt
shll
mov
aaa
dec
insl
push
xchg
mov
stos
sti
imul
cmp
aad
scas
add
sub
leave
mov
mov
icebp
dec
lcall
mov
hlt
pusha
loopne
data16
andb
repnz
jno
jno
aas
lcall
add
and
mov
clc
jae
fdivs
fsubr
mov
ss
add
ss
xor
out
xor
adc
rolb
ss
sub
jmp
mov
or
mov
es
add
jle
jns
xor
inc
pop
loopne
cwtl
pushw
push
out
push
lods
push
mov
jbe
cmp
mov
jnp
or
jge
add
pop
ss
xor
lcall
cmp
sahf
ss
cs
mov
fistps
pusha
test
mov
sbb
jne
push
frstor
adc
inc
mov
gs
xor
jp
pop
js
pop
ret
daa
push
mov
dec
inc
es
adc
push
add
and
inc
ljmp
mov
fwait
test
or
cli
add
add
mov
aam
mov
sahf
enter
sbb
sbb
rcll
mov
out
or
sub
in
push
mov
jae
out
jecxz
fnstcw
and
mov
lods
or
ret
mov
mov
lods
pop
pop
mov
xor
push
sub
ljmp
jmp
test
outsl
sbb
pop
sub
js
add
shll
leave
sub
icebp
mov
lret
mov
mov
add
and
test
icebp
mov
mov
cmp
mov
rorb
cmp
lret
stos
sbb
aad
and
mov
pop
outsl
jne
dec
pop
je
sub
jmp
out
jno
xchg
and
jecxz
xchg
pop
shrl
std
repnz
repz
test
scas
aaa
fs
dec
and
jns
std
lret
pop
xorb
loopne
cmpsb
addr16
dec
pusha
clc
xchg
add
arpl
dec
jb
leave
inc
mov
arpl
or
scas
lcall
jmp
testb
add
jp
xchg
inc
jae
fsts
movsl
xor
sarl
and
hlt
out
mov
add
leave
xchg
mul
ds
xchg
push
pop
js
fstps
and
ret
scas
fcmovnu
loope
sbb
jl
and
scas
jno
push
push
insl
adc
jmp
into
mov
mov
pop
les
pop
js
pop
faddl
aaa
adc
jns
mov
ljmp
pop
pop
loope
daa
mov
inc
dec
and
in
dec
pop
xchg
sbb
and
xor
iret
mov
stc
dec
js
xchg
cmp
shll
dec
inc
cmpsl
xor
mov
idiv
andb
clc
push
fwait
sti
aaa
add
cmova
push
leave
mov
cmp
pop
and
je
inc
lock
js
call
lret
xor
push
enter
mov
scas
js
and
pop
loop
xchg
or
mov
fsts
sub
cmpsb
xor
jo
push
adc
xchg
xor
mov
mov
repz
and
pushf
sub
cmpsb
xor
lods
fidivrl
pop
dec
jbe
repnz
lds
test
out
rcrl
rorl
or
daa
mov
push
mov
std
dec
shll
std
add
mov
cwtl
gs
jp
js
fldt
pop
add
out
sti
lods
shll
push
or
fs
negb
clc
and
imulb
dec
lcall
cmp
scas
lcall
xchg
sbb
int
ss
stos
cmpsb
cmpsb
push
inc
fcomps
rcrb
mov
mov
mov
and
adc
ds
push
or
enter
sbb
push
in
out
adc
sbb
pop
xor
sub
sub
test
push
add
ror
pop
adc
jnp
sarb
popl
lahf
xchg
and
sahf
negl
push
sbb
out
cmp
faddl
out
int3
call
pop
fistl
and
jno
jge
mov
or
pop
hlt
or
mov
dec
inc
bound
mov
pop
out
pusha
dec
insl
mov
rcrb
push
adc
mov
xchg
push
lret
mov
lahf
test
and
fucom
xchg
inc
mov
ret
rclb
mov
sti
out
xchg
and
nop
dec
stos
cmpsl
adc
in
fcomps
sub
loopne
into
lret
push
addl
aad
mov
cmp
test
pop
dec
clc
mov
mov
divb
scas
dec
shlb
call
rorb
lcall
dec
ret
fildll
mov
or
cmpsb
mov
cmp
xor
mov
fmull
data16
xor
fcmovb
pop
inc
aas
insl
mov
addr16
mov
je
repnz
mov
add
inc
xchg
add
xchg
fnstsw
mov
xchg
aad
sbb
push
imul
stc
mov
ljmp
loop
pop
inc
ss
ror
in
cmp
leave
mov
es
xlat
out
fidivrl
jle
and
cs
add
dec
pushf
push
sbb
jae
nop
jb
fnsave
xchg
imul
sub
sbb
arpl
and
out
mov
jne
stos
popf
jno
lods
pop
jae
popf
push
call
insb
jbe
pop
add
adc
cmp
cmp
inc
jbe
mov
jno
pop
lds
jns
inc
sub
sbb
xor
xor
inc
aas
pop
rcrb
mov
bound
jge
mov
hlt
bound
in
stos
pop
data16
push
jg
fnsave
pop
enter
lds
adc
inc
mov
xor
aam
rolb
xor
and
cmc
adc
xchg
mov
out
fsubr
aaa
mov
adc
lahf
mov
addr16
jae,pn
es
or
popf
ss
call
xor
cmc
data16
jnp
and
daa
sbb
andb
pop
inc
test
call
shrl
popa
or
pop
jmp
mov
das
or
add
outsl
xor
aaa
test
jg
fsubr
push
mov
jle
imul
push
lret
fwait
pop
cltd
pop
inc
repnz
shrl
pop
out
xor
sub
pop
std
psrld
pushf
icebp
mov
repnz
or
jns
cmp
pusha
mov
mov
pop
shr
cmpsb
adc
aaa
adc
xchg
and
cmp
lea
mov
mov
push
pop
fwait
bound
lods
add
sbb
sub
push
iret
jg
stos
addb
pop
flds
add
push
push
cmp
lret
mov
pop
sub
inc
mov
sbb
insl
mov
daa
jmp
adc
push
int3
into
mov
cmp
cmp
inc
jmp
out
xchg
dec
push
cltd
jecxz
in
pop
xor
adc
shlb
fs
rcll
mov
jg
sbb
pop
into
cli
mov
pop
cmc
pop
dec
inc
mov
flds
rcr
adc
iret
clc
popf
out
fcompl
sbb
test
mov
fwait
imul
aas
and
push
bound
pop
or
mov
xor
movsl
and
dec
push
adc
mov
or
nop
jg
std
rorb
andl
mov
dec
push
ds
outsl
and
maskmovq
mull
sub
leave
mov
out
dec
push
push
adc
popf
adc
and
jne
sub
jo
cld
sbb
nop
orl
ficomps
sbb
jae
in
les
lock
in
xchg
insb
fildll
cwtl
cmp
or
jmp
test
push
xor
mov
jge
aam
dec
mov
mov
in
aam
cmpsb
lods
pop
iret
rcll
stos
scas
ret
lret
dec
shl
or
addr16
sub
stos
rcrl
nop
and
mov
outsl
add
out
mov
lea
out
shl
repz
mov
call
les
enter
pop
test
adc
and
outsl
cmp
ds
push
or
inc
rorl
ljmp
sti
cli
xor
cmp
sbb
cmpb
repnz
mov
lock
jae
sahf
popf
and
inc
mov
mov
in
inc
inc
test
add
adc
ja
mov
adc
hlt
mov
and
insl
pop
daa
push
daa
jecxz
into
cli
cs
sub
and
popl
mov
insl
gs
push
jg
andb
jbe
xchg
fists
pop
outsl
fwait
cmp
mov
push
fiadds
pop
pop
aad
mov
jae
dec
mov
push
ficoms
mov
fcomps
inc
cmpsl
inc
cmp
xchg
push
xchg
das
std
sbb
imul
mov
mov
pop
or
cmp
lods
les
mov
or
pop
dec
pop
pop
repz
pop
sbb
ss
insl
test
rcrl
sub
jbe
mov
div
ja
addr16
in
mov
pop
lret
les
leave
jge
mov
shlb
scas
out
xorb
out
gs
aas
lds
add
aas
jae
add
or
pop
xor
pop
ja
push
and
cld
stos
pusha
jl
cld
mov
mov
jecxz
enter
std
int3
call
cli
and
sbb
mov
stos
jno
arpl
out
and
pop
imul
mov
dec
pop
orb
mov
cmpsl
mov
mov
loopne
mov
outsl
int3
dec
mov
sbb
add
inc
inc
pop
dec
push
adc
sarl
mov
std
mov
mov
xorb
mov
adc
sbb
and
xor
cltd
lret
xchg
jecxz
mov
or
scas
fcoms
int3
into
sbb
inc
imul
sub
add
leave
pop
test
xchg
cmp
lea
scas
adc
lods
jo
jbe
lahf
sbb
lahf
daa
lods
pop
rol
clc
and
or
cmc
sub
das
mov
outsb
mov
aam
xchg
inc
ljmp
std
jle
pop
mov
push
rorb
push
jno
icebp
ds
push
mov
sahf
adc
imul
adc
lods
dec
aas
xchg
adc
push
mov
and
fucomi
jp
ds
mov
cmp
push
and
movsl
mov
jl
pop
fs
mov
pop
mov
mov
add
mov
push
xchg
pop
pop
push
sub
push
sti
insb
shlb
cltd
dec
stc
fdivrl
pop
outsl
aad
xchg
cmc
fdivs
inc
int3
pop
sbb
in
mov
jae
push
add
push
pop
or
mov
cmc
mov
shl
add
inc
pusha
jno
outsl
push
push
fmull
jnp
lret
or
movsb
mov
inc
jg
adc
pop
repnz
sub
sarl
and
fs
nop/reserved
jb
add
nop
mov
std
jbe
hlt
add
and
sarl
loopne
jbe
lahf
mov
push
add
sub
je
adc
daa
push
dec
or
iret
jne
pop
mov
cmpsl
mov
in
fwait
sti
jg
inc
mov
data16
and
add
push
out
push
fwait
or
xor
inc
ja
push
loope
les
add
cli
incb
inc
cmpb
loop
xlat
in
stos
stos
das
inc
cli
shlb
cmpsb
sub
sub
xchg
mov
pop
cli
lods
dec
dec
imul
andl
cmc
std
jno
aas
mov
pop
fucom
aam
fisttpll
popf
mov
mov
sub
movsl
mov
lea
fistl
dec
rolb
rorl
cmp
popf
sub
cmp
cs
xchg
jno
and
sbb
dec
scas
add
pop
jno
push
faddl
sbb
mov
imul
lcall
inc
enter
aas
jp
aas
xor
mov
aam
push
pop
pop
xchg
lahf
mov
pop
xlat
xchg
push
lret
dec
xor
or
mov
xor
and
std
xchg
out
mov
mov
mov
adc
jmp
out
cmp
xchg
mov
fadds
rolb
pop
sbb
lahf
fwait
cs
int
dec
push
or
push
ret
push
dec
mov
jge
movsl
mov
rorl
xor
loop
dec
les
push
inc
inc
ja
addr16
push
mov
dec
and
pop
cmc
insl
in
inc
cmp
mov
std
push
jle
movsl
das
mov
shrb
hlt
pop
std
cs
cli
into
sub
mov
push
aam
add
and
push
dec
sub
out
jbe
xchg
sub
std
aas
pop
push
sbb
out
decl
mov
pop
sub
pop
cmp
xor
xor
je
xor
icebp
push
xlat
test
lret
icebp
lahf
or
gs
pop
mov
mov
adc
int3
bound
shr
fcomip
xor
mov
loope
jle
popa
sub
cmpsb
fcompl
ljmp
mov
jg
mov
xlat
cmp
repz
roll
xchg
cmp
jge
repz
cltd
add
cmc
out
dec
pop
mov
add
inc
pop
out
in
mov
xchg
fsubrs
call
lds
mov
sbb
mov
loop
test
mov
mov
cltd
mov
xor
fidivl
ficoml
and
cld
jns
iret
nop
and
dec
sbb
xchg
dec
push
das
loop
shll
pmaxsw
mov
xchg
xchg
xchg
pusha
pop
push
mov
mov
mov
jmp
movsb
push
sbb
or
dec
in
adc
xor
or
push
out
call
mov
loop
stc
pop
xlat
dec
xlat
and
jbe
outsb
mov
dec
mov
cwtl
jns
sbb
sub
outsb
stos
push
xchg
insb
sbb
mov
popa
addr16
inc
fadds
adc
nop
or
pop
lds
cmp
repnz
add
in
call
aad
xor
notrack
add
scas
pop
cltd
push
lret
shl
or
lahf
cmp
lahf
push
jg
shlb
fiaddl
jecxz
popf
mov
fiaddl
dec
loop
push
xchg
stos
inc
or
inc
push
dec
xor
lock
push
scas
in
mov
aas
repnz
mov
push
dec
pop
add
decl
cld
div
and
xor
xchg
scas
bound
or
int
sbb
pop
push
ficoml
xor
data16
lcall
pop
fneni(8087
dec
outsl
mov
xchg
cli
pop
cld
cmp
popf
cltd
xor
imul
rcrl
scas
loopne
lds
in
out
mov
pop
fsts
mov
sahf
lcall
rol
movsl
push
popf
xchg
cmp
pop
xor
cwtl
inc
adc
loop
pushf
in
out
movsl
and
adc
in
or
shl
sbb
add
movsb
mov
xchg
out
adc
imul
in
xor
arpl
mov
test
or
repz
add
pop
inc
movsb
loop
mov
outsl
roll
push
sbb
mov
test
je
xor
push
ret
lcall
sbbl
fcoms
ret
add
or
pop
arpl
iret
dec
add
jno
rcrb
cmp
loopne
stos
sahf
ret
add
cmp
popf
sbb
cmpsl
pushf
xor
cmc
cld
jns
orl
ljmp
mov
mov
leave
jb
jmp
test
dec
leave
mov
push
xchg
and
mov
jb
bound
mov
xchg
cmpb
xchg
dec
ror
cmp
lret
mov
dec
push
xchg
cmp
dec
lret
mov
stc
enter
add
or
xchg
mov
iret
jp
xor
sub
jecxz
sub
pop
insb
lods
mov
push
jae
in
push
cmp
notl
daa
push
or
loope,pt
jge
out
fmuls
rol
popf
fs
lcall
or
nop
sbb
pop
push
cld
shlb
lcall
repnz
jl
and
dec
xor
pushf
xchg
jo
js
or
jbe
testl
ss
mov
sahf
push
push
aam
cld
fldcw
es
cli
xchg
das
ljmp
pop
fmuls
rcrl
mov
lods
inc
mov
divl
aaa
jl
inc
xor
sub
fistps
push
ja
sbb
add
and
push
imulb
pop
jns
pop
nop
fstl
inc
mov
push
or
dec
xlat
bound
cld
adc
push
adc
popa
imul
imul
test
mov
xor
fld1
lods
adc
xchg
xchg
dec
mov
fsubrs
out
sub
sahf
xor
lcall
mov
icebp
pop
jbe
sub
lcall
mov
sub
mov
dec
sbbb
mov
pop
pop
lods
push
adc
repz
mov
pop
mov
outsb
clc
mov
dec
addb
xchg
adc
sahf
jne
cmpb
push
sti
cmpsl
push
push
dec
cmp
fidivs
test
jb
out
repnz
jno
push
push
lock
test
sbb
orb
aad
daa
jmp
outsb
sub
lret
xchg
test
add
sbb
jbe
int
mov
sbb
mov
cmc
ss
sbb
hlt
push
divb
jbe
lods
lcall
xor
shrb
mov
scas
sbb
cmpsl
scas
xchg
dec
outsl
xor
sub
dec
jno
push
adc
inc
fwait
call
sbb
push
mov
shlb
stos
cmp
xchg
loope
adc
sbb
pop
xlat
mov
out
loope
notrack
fisubrl
pop
bound
pop
test
xor
mov
repnz
pop
das
loope
cmpsb
lods
dec
mov
stos
jnp
ds
inc
daa
stos
sub
mov
mov
ds
push
fwait
std
xchg
jo
loop
loopne
shrl
sarb
cli
movsb
cmpsb
and
sahf
pop
sub
jl
dec
xchg
mov
jae
xor
int3
mov
and
subb
and
xchg
js
out
sub
dec
sub
rcrl
rolb
jecxz
insl
leave
mov
xchg
enter
mov
adc
in
outsl
or
imul
mov
pop
mov
dec
push
xor
loop
in
pop
lcall
push
sahf
loop
pop
shll
xorb
inc
adc
out
outsl
test
daa
out
out
mov
xor
outsl
dec
mov
mov
xchg
cmpsb
frstor
lret
es
push
js
ret
sti
inc
or
jb
cmp
jno
xor
push
lds
pop
xchg
xchg
dec
push
jo
fdivl
push
lcall
shlb
scas
lods
push
pop
cmp
sbb
xchg
dec
dec
inc
cltd
scas
pop
add
mov
repnz
cld
or
mov
sub
sbb
mov
sbb
rolb
xchg
xchg
lock
pop
loop
hlt
lds
movsl
les
scas
loop
mov
in
cmp
orb
adc
pop
sub
adcb
cs
insb
js
out
adc
mov
pop
leave
adc
pop
lea
rcll
jno
ja
inc
jp
fnstcw
add
in
pushl
sub
shll
bound
fmuls
outsl
cwtl
imul
cmc
pop
std
mov
test
mov
inc
test
push
enter
sub
in
jle
scas
cmp
xchg
decb
xor
cmp
lock
jg
sub
popa
jo
in
inc
add
jo
sub
test
adc
test
lds
pop
call
push
push
insb
jg
xor
and
rorb
int3
mov
lods
and
push
fptan
add
sbb
sub
sti
filds
add
int
incl
xchg
bsf
adc
cmp
and
incl
pusha
mov
jp
into
adc
push
mov
adc
lret
mov
aam
in
jg
xor
xor
ljmp
xchg
lcall
mov
adc
xchg
jne
or
icebp
divl
ljmp
sub
cli
loopne
pop
in
sub
ret
mov
jl
dec
xor
scas
or
divl
fldcw
sub
push
es
xor
popl
push
xor
js
bound
cmp
or
arpl
inc
shl
adc
mov
or
jl
lock
test
mov
enter
dec
cltd
push
fists
test
push
pop
push
ret
not
mov
jbe
roll
cmp
add
rcll
mov
mov
mov
rclb
insl
out
add
xor
sbb
lea
jg
repz
sbb
rcrb
mov
inc
jbe
push
mov
out
pop
sub
testl
fisubrl
cltd
jno
cwtl
xchg
movsl
pop
outsl
or
repnz
imul
popf
out
mov
mov
imul
sub
add
icebp
lcall
sub
clc
xor
xchg
into
sub
lahf
jl
into
or
outsb
sbb
adc
mov
add
fwait
insl
jb
movsl
jbe
push
ja
fnstcw
nop
jo
and
mov
push
lds
jo
outsl
icebp
xor
xor
push
pop
mov
mov
hlt
inc
xor
daa
sbb
stc
movsw
cmp
pop
lahf
out
dec
pop
sub
out
lahf
xchg
or
mov
cmp
dec
aam
mov
inc
sbb
push
mov
rcrl
loope
fstpt
test
or
xchg
jno
ds
gs
aaa
xor
gs
cmp
jb
jmp
xor
pop
daa
and
outsb
inc
imul
and
sub
or
outsl
and
xlat
mov
popf
jp
sub
js
scas
daa
sub
icebp
leave
pop
sub
fsubrl
sub
xchg
push
mov
mov
jo
cli
jmp
stos
mov
inc
or
testl
and
add
jmp
sti
mov
cmp
cltd
mov
jg
fmull
inc
xchg
into
mov
mov
aaa
repz
mov
sahf
in
sbb
loop
shrl
sti
sbb
xchg
and
repnz
or
loope
pop
add
mov
cmp
add
stos
fadd
mov
and
shrb
insb
out
or
pusha
test
jp
xor
fmull
fnsave
pop
jg
lret
or
dec
mov
fistpll
sub
ror
mov
pcmpgtw
das
xor
jnp
adc
lock
clc
adc
ss
jbe
jae
popf
outsl
popa
lcall
or
pop
nopl
mov
test
jbe
fs
call
popa
xchg
jl
adc
inc
sub
ds
test
ss
xor
frstor
sti
pop
insl
daa
add
icebp
lods
cwtl
sub
insl
xchg
rclb
cld
cli
jmp
pop
push
es
call
xchg
js
and
sbb
inc
xchg
jg
push
inc
cmp
push
cmp
sahf
shl
or
mov
lds
jecxz
mov
xchg
mov
pop
push
mov
sbb
lods
sub
out
leave
scas
and
push
pop
filds
dec
mov
leave
jns
xor
xchg
sbb
inc
push
cld
jp
leave
inc
push
xchg
cmpsl
sahf
jne
xchg
add
popa
loop
dec
outsl
cltd
sbb
aad
sbb
outsl
jge
mov
jle
sti
ffreep
in
mov
xlat
fmulp
js
inc
test
shll
mov
inc
push
xchg
arpl
lods
jp
or
sarb
mov
xchg
ljmp
mov
divb
test
aaa
in
call
fldenv
mov
mov
lret
mov
or
jns
pop
insl
dec
jnp
sahf
jo
jmp
arpl
jmp
mov
popa
or
aaa
jmp
jns,pt
pop
pusha
cmp
sbb
mov
and
jecxz
popf
lret
pop
data16
xchg
out
inc
or
xchg
cmpsl
sbb
inc
add
repz
xor
sbb
ds
popf
rcrl
pop
add
jnp
loope
leave
add
inc
scas
xchg
push
pop
cltd
idivl
jmp
aam
dec
jge
repz
rclb
inc
mov
iret
cmp
add
test
jge
andb
stos
push
cmc
xchg
sbb
or
mov
pop
sub
test
adc
cwtl
popa
clc
cmp
dec
xchg
iret
mov
testl
pop
je
lods
push
lea
jnp
sub
repnz
test
and
mov
fscale
pop
jbe
popa
fdiv
cld
test
pop
mov
sub
dec
push
nop
int
mov
sbb
lods
test
cmpsl
cmp
mov
inc
mov
dec
loop
adc
nop
adc
clc
loopne
inc
loope
scas
pop
sti
push
mov
inc
jecxz
leave
inc
fucomi
dec
cltd
mov
leave
and
xchg
or
rorl
rcll
aad
test
testl
add
jmp
mov
lret
dec
movl
bound
cli
push
xor
mov
pop
xor
test
xor
xchg
push
add
mov
jmp
sahf
scas
xor
mov
xor
sbb
and
dec
or
pop
addl
pop
bnd
push
cmp
or
ss
add
mov
jnp
jecxz
xchg
adc
xor
adcb
inc
sub
loopne
in
out
jge
jecxz
hlt
notl
xchg
icebp
inc
mov
out
cmp
mov
pushf
xchg
pop
pop
popf
enter
push
or
ficoms
iret
lds
sub
pop
rclb
dec
stos
out
cmp
jbe
adc
add
jns
gs
xor
mov
fstps
hlt
cmp
ljmp
mov
inc
lretw
repnz
sbb
dec
dec
or
rorl
mov
test
jp
in
hlt
loop
inc
pop
cli
aad
arpl
outsb
and
fiaddl
add
or
fildll
test
rolb
andl
dec
cmpsl
add
lea
pop
fwait
lods
pop
xor
out
dec
outsl
jecxz
lahf
into
jns
ss
jmp
mov
dec
cmpsl
push
cmp
roll
dec
push
or
repz
cltd
cmp
cmp
gs
repnz
pop
nop
pop
mov
fnstcw
mov
movlps
rorl
repz
mov
out
iret
lahf
in
mov
out
call
mov
insl
mov
into
sbb
push
xchg
xor
dec
sbb
cmp
stc
dec
fldt
lods
mov
and
adc
call
xlat
xchg
aam
mov
sahf
roll
adc
leave
fmull
ret
xorl
aam
in
into
or
psubw
js
mov
movsb
bound
hlt
negl
xor
xor
mov
subb
lock
shl
inc
std
loop
push
in
imul
lods
xchg
sbb
mov
mov
pusha
jns
mov
pop
test
dec
repnz
test
test
ja
pop
lahf
dec
js
ja
test
imul
fnsave
mov
cmp
ret
add
and
mov
in
sti
lahf
call
les
dec
lcall
add
mov
lret
into
aas
dec
repnz
xor
pop
std
sub
imul
xchg
sarb
xor
mov
pop
pop
dec
mov
jae,pn
out
push
sub
xchg
adc
adc
sti
sbb
lcall
push
or
dec
push
push
repz
push
or
lret
jb
jnp
data16
popf
pusha
mov
or
add
adc
pop
frstor
inc
push
shl
mov
mov
push
sub
stos
es
lahf
lcall
outsb
arpl
loope
mov
mov
sbb
enter
aas
in
add
pop
addb
mov
mov
jl
pop
fdiv
aaa
push
or
cld
je
push
test
fiadds
lea
inc
or
les
sub
add
jge
je
stos
mov
int
shlb
roll
pop
pop
mov
and
mov
mov
xor
adc
outsb
inc
ja
loopne
and
pop
mov
cmp
std
fcmovu
adc
or
arpl
std
jl
and
lock
lahf
adc
or
divl
or
jmp
fdiv
xchg
ret
mov
mov
mov
sbb
out
je
xchg
nop
ret
lds
pop
fwait
mov
into
clc
and
xchg
add
scas
sbb
lcall
mov
jl
inc
out
jle
mov
mov
cltd
xor
push
jl
cmpsb
call
aas
lahf
sbb
repnz
add
test
bound
add
inc
popa
outsb
xchg
hlt
xchg
inc
es
fwait
out
icebp
cs
ljmp
es
lret
jg
test
popa
sar
cmp
mov
jno
mov
call
push
fstps
cmpsb
ss
and
in
bound
mov
inc
sbb
dec
loope
or
addr16
aam
rol
sub
jb
adc
mov
sub
hlt
jnp
jp
xor
jecxz
lahf
ljmp
ljmp
jmp
mov
jl
ljmp
int
push
cmpsb
and
inc
or
or
xchg
pop
dec
adc
pop
movsb
xor
add
lods
inc
adc
fldt
andb
push
popf
push
ss
aas
loopne
add
jo
es
flds
nop
or
jnp
sbb
ds
xchg
ret
mov
mov
jge
cmp
pop
pop
out
nop
add
or
aaa
xor
clc
pop
sbbl
jo
add
push
sub
jae
xchg
ror
ljmp
das
in
push
pop
adc
xchg
arpl
sbbb
imull
pop
cmp
adc
adc
adc
sub
sub
mov
xchg
push
jmp
fisttpll
aad
fdivr
mov
pop
in
push
mov
xchg
add
xchg
mov
adc
ret
incb
or
dec
mov
mov
insl
pop
addl
popa
lret
pop
in
push
sbb
jmp
or
and
mov
insl
fstpl
cmpl
in
mov
pop
xchg
or
mov
daa
insl
sbb
xor
sub
xchg
xchg
loopne
rolb
adc
mov
or
shl
addl
ficoml
cmp
ret
cs
fstpl
stos
xchg
sbb
std
pop
nop
fptan
std
push
jge
inc
in
mov
inc
ficoms
jbe
stc
jno
xchg
pop
mov
in
notl
jl
mov
xchg
dec
lret
pop
push
lahf
loop
lods
xor
push
push
out
idivb
jp
lret
push
rcrb
or
sarl
arpl
push
push
cmc
push
adc
jle
cmpsl
jns
sub
fcoms
andb
mov
or
add
dec
mov
ds
leave
add
push
in
lcall
push
test
negb
and
or
ljmp
adc
dec
es
filds
enter
dec
icebp
xorps
shr
mov
pop
ret
ljmp
rorb
inc
xchg
imul
or
clc
aad
pop
icebp
adc
jecxz
inc
scas
shr
test
inc
fidivs
dec
cld
lahf
adc
aam
ds
dec
scas
movsb
xor
lds
xlat
jle
jmp
push
dec
call
arpl
add
fstps
subl
adc
je
cli
cmp
bt
push
jb
out
adc
and
clc
aad
fisubrl
scas
cmp
sub
pop
iret
xchg
jecxz
les
or
or
scas
or
or
inc
mov
insb
add
mov
add
mov
cwtl
xor
nop
xlat
in
dec
mov
inc
cmp
ljmp
loop
mov
inc
nop
jmp
dec
out
jae
or
ja
mov
mov
jge
sub
xor
sarl
aam
in
js
ret
adc
pop
sbbb
fldcw
mov
add
add
hlt
pop
sub
dec
pop
pop
in
pop
push
pop
or
mov
pop
adc
lods
pop
push
mov
jmp
popa
cmp
dec
xor
jmp
cli
inc
mov
orb
xchg
cmp
cmp
lahf
add
and
ljmp
adc
pop
test
enter
daa
or
jg,pt
lea
in
dec
outsb
jmp
popa
repz
dec
jb
mov
es
subb
out
mov
xchg
sbb
popf
jbe
push
fldcw
xchg
les
cmovl
jo
icebp
hlt
inc
mov
adc
out
xchg
les
ret
test
lds
call
test
lea
mov
jbe
xchg
cltd
pop
cmp
sbb
push
xchg
popf
cmp
add
jge
xchg
xchg
mov
es
inc
dec
pop
cmp
in
jns
loopne
std
inc
add
test
inc
icebp
fstl
adcb
xchg
scas
xchg
adc
mov
push
xor
push
iret
jge
pop
fsubs
mov
loop
or
stos
test
pop
or
push
idivb
mov
sub
pusha
sub
add
dec
pop
jg
xorb
adc
xchg
mov
jl
jecxz
jno
lretw
icebp
jge
mov
lock
divb
sbb
adc
xchg
mov
cmp
mov
imul
and
lret
ss
push
mov
inc
sbb
and
jg
cmp
xchg
lret
shl
push
mov
lahf
jg
cmp
in
sbb
out
bound
imul
rorl
out
inc
pusha
shlb
mov
push
in
jae
push
nop
repz
jnp
fsubl
movsb
shll
or
mov
mov
mov
cmp
imul
add
push
xor
fldt
gs
cmp
pop
aam
mov
mov
shrl
stos
pushf
mov
dec
push
imul
loope
lcall
pop
mov
js
xor
xchg
js
inc
insb
outsb
repnz
mov
mov
and
pop
out
sbb
in
xchg
adc
cld
rcrl
lds
add
or
mov
mov
push
and
hlt
sbb
int
push
cmpb
sub
clc
incb
xchg
adc
imul
movsl
pop
lea
push
and
movsb
sub
and
sahf
inc
std
imul
xchg
sub
xlat
adc
mov
jns
movsb
fdivrp
bound
jg
js
inc
in
ret
and
stos
arpl
xor
in
sbb
sub
xor
ret
adc
cmp
shll
fisttpll
das
add
rcrl
outsl
aas
in
ss
shlb
sbb
in
mov
int
insl
lret
repnz
jle
orl
repz
push
jle
fcomp
ds
jbe
jl,pn
stc
call
pop
mov
mov
mov
scas
adc
popf
jp
into
pop
or
fistpll
push
push
bound
cmp
out
xor
loop
jl
sti
xlat
sbb
dec
dec
ds
push
hlt
cli
fsubl
test
lcall
es
dec
roll
mov
sub
dec
jne
mov
in
mov
idivl
add
sarl
push
jecxz
das
xchg
add
out
cmp
mov
sbb
cmpsb
xchg
push
clc
push
jge
jl
testl
sub
imul
jno
add
dec
dec
mov
imul
in
sub
testb
aaa
in
mov
pop
ljmp
mov
nop
xchg
out
or
mov
mov
arpl
popa
enter
cltd
movsl
mov
outsb
fisubl
xchg
inc
pop
push
data16
sub
jno
xchg
fcoml
push
adc
mov
mov
add
inc
jno
add
jns
xchg
sbb
pop
dec
aas
cmpsb
jne
loopne
int
xchg
sub
inc
jmp
lret
jne
data16
shll
xchg
push
gs
fcmovne
lea
out
inc
cmp
jp
pushf
add
xor
push
repnz
inc
cmp
mov
data16
out
leave
and
cltd
xchg
dec
stos
mov
xchg
inc
xchg
test
sub
decb
push
inc
xor
push
xchg
sbb
aas
jmp
or
clc
cmpsb
cwtl
rorb
mov
xor
lods
jmp
or
lret
dec
mov
mov
addb
xchg
adc
jmp
pop
xor
cwtl
sar
enter
mov
outsl
mov
bound
xor
jmp
sub
in
xor
in
in
lcall
gs
jbe
add
rol
mov
cmpsb
dec
jbe
sub
loop
into
and
fsub
xchg
or
sbb
inc
sbb
sub
js
mov
push
lcall
pop
jb
pop
fsubr
sbbb
lahf
pop
pusha
data16
pop
lret
int3
pop
mov
out
sarl
repnz
shll
out
cltd
jae
cmp
fbld
or
imul
xchg
mov
jae
sbb
or
xor
decl
jmp
mov
es
in
cli
cmpsb
cmpsl
pop
sbbb
jle
js
jne
lahf
repnz
or
push
xor
jbe
jle
stc
dec
fs
dec
movsl
insl
es
and
push
jge
js
lcall
pop
pop
hlt
test
in
xchg
outsb
popl
es
pop
adc
dec
inc
or
inc
cmp
pop
testl
xchg
test
mov
sub
arpl
pushf
inc
jnp
dec
dec
fcompl
movsl
jge
xor
add
jns
mov
dec
fmul
cmp
mov
pop
xchg
add
mov
fchs
jg
cmpsb
or
int
shrl
dec
ror
lods
xchg
pop
cmp
and
or
fisubrs
stc
lcall
dec
fcompl
mov
rep
push
fcomps
xor
or
dec
mov
add
sub
sub
xchg
sbb
ss
jmp
mov
xchg
or
mov
mov
sub
aad
int3
adc
lock
mov
int
mov
out
cmp
icebp
push
les
lods
push
xchg
stos
xchg
ja
subl
bound
cmp
scas
and
idivl
hlt
jg
fcomi
push
mov
aam
dec
jg
je
sub
aam
mov
sti
xchg
outsb
mov
test
enter
andb
mov
sbb
mov
loope
cmp
outsb
repz
sbb
push
iret
push
mov
dec
mov
jno
clc
dec
aad
mov
mov
mov
popf
fcoms
fidivs
and
pop
stc
movsb
dec
shl
mov
add
dec
jle
xchg
inc
xchg
out
push
sub
insl
pop
push
mov
test
cld
out
lods
add
outsl
xchg
or
adc
mov
mov
hlt
int
dec
sub
cltd
xlat
sbb
js
lret
stos
xchg
outsl
stc
inc
sahf
mov
mov
jge
cwtl
push
pop
fdecstp
jae
fcoml
jae
stc
pop
mov
outsb
adc
cli
cli
mov
adc
xchg
mov
sbbl
stc
pop
jae
xor
and
movsl
xchg
icebp
stos
loopne
adc
cmpsl
add
push
lock
mov
adc
mov
int
test
ja
mov
icebp
xchg
pop
xchg
shrb
aam
das
mov
push
pushf
jle
repz
cmp
ja
xor
mov
pop
jge
mov
sbb
mov
daa
jnp
cmp
push
fwait
pop
fwait
repz
mov
loope
mov
dec
sahf
dec
mov
into
cmpsl
rcrl
leave
repz
fists
xor
lret
xchg
lret
inc
push
cmpsb
in
push
popf
into
pop
dec
test
or
stos
rolb
push
add
popf
in
fsubs
enter
add
jg
jge
sbb
mov
push
jecxz
in
mov
testl
sahf
pop
pop
pop
int3
pop
in
loope
ffreep
and
inc
rorl
sti
inc
add
and
and
imul
jge
rcl
or
sarb
inc
add
fdivr
dec
sbb
mov
mov
loopne
scas
mov
sbb
cmpl
or
mov
xchg
scas
subb
mov
xchg
popf
out
std
push
and
dec
outsl
insb
in
push
sub
adc
mov
or
or
fs
cmp
pop
pop
jmp
push
std
adc
xchg
push
and
inc
sbb
popa
jnp
mov
xor
fistl
or
pause
loopne
int3
adc
cmp
xor
scas
jbe
mov
sbb
sub
pushf
cmp
ret
sub
out
mov
dec
int3
sbb
dec
sbb
enter
or
mov
fdivrp
xchg
lods
dec
adc
mov
mov
mov
adc
pop
add
inc
xor
mov
push
mov
push
xchg
sbb
lret
loope
adc
int
adc
loop
loope
jnp
jne
mov
mov
jmp
or
cltd
adc
arpl
pop
fildll
cmp
addr16
mov
mov
xor
jp
jbe
int
xchg
repz
sub
push
sub
jp
popf
xchg
dec
pusha
pmaddwd
pop
inc
stc
insb
or
dec
pop
les
mov
cmp
cld
adc
mov
outsl
iret
or
sbb
push
int3
cmp
in
jnp
out
pop
push
faddp
mov
fwait
xor
add
mov
cmp
sub
int
add
jo
loope
orb
iret
popf
rolb
pushl
push
in
adc
cs
fisttpl
pop
xchg
nop
imul
jg
dec
loope
push
sbb
sti
fdivrl
xor
cmp
loope
pop
orl
and
or
mov
and
push
pop
sub
push
out
mov
xor
mov
outsl
iret
enter
adc
fsubs
enter
dec
mov
rorb
push
push
stc
fsubr
sbb
xchg
mov
add
ret
push
das
icebp
xchg
je
xchg
adc
sbb
clc
pop
popa
mov
in
gs
jp
xor
int
mov
cmp
push
mov
inc
push
adc
pop
enter
loopne
out
or
aaa
out
push
mov
icebp
jb
leave
mov
mov
mov
add
xchg
in
xchg
dec
mov
imul
movsl
repz
scas
mov
hlt
inc
aad
sbb
sbb
pop
ljmp
jl
loope
mov
lds
ljmp
aaa
rclb
push
or
popa
cmp
pop
sub
cmpsb
or
lods
xchg
push
out
rolb
push
inc
xchg
xchg
adc
iret
cmp
mov
fistl
fxam
inc
xchg
inc
shrl
stc
pop
sub
jp
xchg
pop
xchg
jnp
xchg
adc
leave
clc
adc
xchg
addr16
cs
bound
adc
fildl
inc
js
rol
dec
and
dec
out
pop
jae
dec
out
or
mov
push
mov
addr16
clc
mov
nop
mov
push
push
mov
fisubrl
jno
lods
popf
mov
ret
inc
and
fldl
das
insb
fcmovb
movsb
ficoms
not
cmp
movb
mov
fs
out
rcr
mov
lods
loopne
adc
outsb
dec
sbb
hlt
dec
or
mov
pop
xchg
mov
ds
cmpsl
and
ret
pop
roll
into
sub
call
stos
stos
mov
jl
push
imul
push
and
lods
push
fsts
jge
push
into
cld
xor
dec
push
imul
dec
cs
and
out
aam
jnp
fs
add
or
mulb
scas
xor
adc
cmp
rcrl
out
mov
or
xchg
xchg
popf
out
xchg
adc
mov
jle
ficomps
inc
test
xchg
stos
in
repz
push
mov
inc
push
ret
cli
mov
mov
sbb
aaa
fs
sbb
and
inc
pop
ja
dec
mov
pop
movsb
int
divl
minps
mov
fmull
outsl
pop
xor
scas
int3
loop
adc
int
adc
push
xchg
shlb
lds
fdivrp
jbe
out
notb
dec
dec
pop
pop
scas
lcall
ret
pushf
cmp
lods
inc
xor
inc
pop
xor
cli
test
sbb
xchg
pop
int3
or
pop
clc
into
andl
pop
sbb
mov
ss
cltd
stos
sub
test
sti
xchg
popf
shlb
sahf
leave
xchg
jb
in
fmul
fidivrl
mov
jle
cmp
jne
pop
mov
push
adcl
jp
xchg
and
cmpsl
dec
icebp
mov
xor
icebp
and
jmp
lds
lods
das
sub
rol
add
lahf
cmpsl
jb
lock
inc
in
jb
jl
popf
aaa
test
hlt
push
add
mov
das
js
in
lock
call
lcall
loope
scas
sub
mov
add
cmp
jne
repnz
jecxz
xor
repnz
loopne
mov
fs
repnz
fidivrl
ja
enter
mov
cmp
dec
sahf
mov
or
test
pushf
add
gs
pop
andb
cmpsw
pushf
push
stos
fistps
dec
testb
jb
mov
pop
mov
adcb
cs
jno
aas
stos
and
mov
xchg
inc
icebp
lds
jne
loope
mov
clc
mov
jae
mov
jl
jno
fs
das
sub
mov
shlb
iret
dec
xchg
or
scas
mov
xchg
xchg
fdivrs
pop
jne
xchg
mov
fimuls
ja
stc
inc
lcall
clc
lcall
push
xchg
inc
hlt
sbb
cmp
ds
test
mov
fisubrs
bound
scas
aam
xor
adc
inc
out
lds
mov
sbb
inc
fisubl
mov
jbe
test
daa
xor
xor
inc
mov
or
inc
ljmp
xor
inc
xor
repz
dec
push
mov
push
mov
divl
loopne
xchg
cmp
aaa
xlat
ja
inc
dec
pop
adc
jb
dec
addr16
shll
xchg
cmc
and
mov
hlt
test
pushf
subl
jg
pop
mov
mov
sub
movsl
je
and
mov
and
jne
adc
jne
fwait
dec
push
outsb
scas
inc
ss
push
ret
and
outsl
sbb
aad
aam
aaa
adc
ss
mov
push
mov
call
dec
mov
loop
or
aad
dec
add
ljmp
sub
cmp
aad
pop
daa
bound
mov
mov
pop
pop
push
cmp
xlat
cmpsl
mov
out
imul
jb
lock
rclb
adc
cs
loop
sub
dec
jmp
mov
pop
or
out
jne
and
fwait
mov
xchg
push
push
xlat
aam
orl
mov
lcall
xor
fcmovne
or
jnp
in
call
daa
shl
or
mov
mov
lock
lret
sbb
mov
push
cmp
repnz
jl
jle
pop
cmp
aas
add
popf
push
out
sub
push
jmp
insl
jp
je
scas
sub
rorb
lret
mov
ret
inc
xchg
repz
std
pop
imul
sbb
mov
adc
ja
cmp
adc
and
inc
insb
mov
pop
xchg
jo
stos
or
add
ret
add
mov
xchg
movsb
sbb
inc
pop
inc
push
in
mov
fs
imul
sub
mov
fildl
fmull
imul
sub
mov
clc
and
inc
cmp
jge
mov
insb
in
ret
aaa
das
dec
xor
aam
pusha
fstpt
stc
mov
loop
lahf
sbb
cmpsl
or
adc
xchg
pop
lret
imulb
int
aad
outsb
pop
xor
and
ds
xor
mov
cld
popa
pushf
jnp
out
mov
add
xchg
cmp
jne
jbe
cmp
fisttpll
cmp
dec
and
cmp
adc
or
ja
or
push
add
mov
arpl
xchg
lods
scas
iret
dec
add
stos
lret
jmp
or
cltd
xchg
outsl
andb
sbb
pop
mov
loop
into
pop
dec
push
cli
add
js
repnz
and
pop
push
pop
sub
sub
pop
cs
push
hlt
sub
cltd
clc
popf
sub
adc
cltd
and
and
mov
popa
cmp
sub
push
negb
fisttps
iret
sahf
dec
iret
pop
imull
xchg
cmp
sbb
pop
add
push
add
jb
call
fcoms
pop
pushf
loopne
loop
out
xor
cmp
neg
sub
push
mov
mov
dec
add
add
lods
lea
mov
lahf
xor
test
fiaddl
adc
in
shr
mov
lcall
arpl
test
mov
mov
sti
out
mov
or
jg
or
pop
jmp
shrb
jecxz
insb
or
xor
loopne
jmp
aas
mov
push
push
inc
rcrb
xchg
mov
dec
test
mov
jl
icebp
fbstp
mov
jmp
loope
insb
jns
jle
popf
mov
xlat
fbstp
adc
push
popa
push
mov
pop
add
js
pop
push
or
push
jnp
push
dec
movsb
mov
lock
xchg
ret
push
lods
fimull
rcrb
mov
xlat
or
loope
add
cmp
es
jnp
sub
cltd
dec
adc
roll
aaa
stos
add
inc
cmp
adc
int
cli
mov
jns
sbb
pop
loop
pop
loope,pt
mov
mov
imul
adc
inc
aad
mov
cmpsb
in
cmp
adc
push
mov
cli
sbb
pop
cs
xlat
mov
sbb
add
nop
jl
cmp
in
mov
stc
and
push
movsl
push
loopne
push
jle
inc
cmp
pop
sbb
mov
pop
adc
dec
mov
aad
ret
std
out
pop
out
xchg
fwait
leave
or
and
dec
xchg
or
xor
pop
in
sti
mov
mov
mov
xchg
sub
mov
inc
test
mov
stc
mov
xlat
xorl
mov
into
imul
cmp
nop
push
cltd
push
dec
es
xlat
std
push
push
mov
adc
call
sub
mov
mov
cmc
mov
and
jge
sub
movsl
pop
out
ret
jp
xchg
sbb
dec
push
loopne
sbb
jo
sub
arpl
sbb
enter
xor
jl
mov
cmp
mov
outsl
mov
int
fucomi
sbb
stos
int
pop
out
sbb
and
push
movsb
flds
loope
movsl
or
outsl
idivl
cmpsb
push
mov
xchg
jno
sub
enter
pop
addl
cmp
scas
popa
lea
jp
sub
inc
mov
pop
dec
push
das
hlt
sti
pushf
shll
adc
mov
inc
push
push
es
inc
shrb
xor
cs
loopne
push
in
in
repnz
cli
testl
sbb
fbstp
jnp
sbb
inc
mov
mov
mov
inc
pop
scas
stc
xchg
xor
pop
add
ficoml
push
imul
cmp
outsl
push
int3
lahf
sbb
dec
scas
outsl
fwait
out
arpl
call
nop
insb
lret
push
pop
fcompl
push
add
mov
rolb
jp
inc
cld
xchg
push
pop
ss
push
daa
mov
fldenv
imul
sbb
pop
enter
sub
dec
int3
movb
adc
mov
test
cmp
dec
jle
bound
mov
cmpsb
xchg
cmp
nop
adcb
and
ret
jbe
ficompl
insb
sti
jne
or
hlt
std
and
cs
push
lahf
sti
pop
mov
daa
out
jg
test
dec
jne
fdivs
outsl
cli
adc
or
stos
jmp
jmp
adc
mov
bound
inc
jbe
xor
les
inc
shll
or
decl
div
movsb
jo
or
add
mov
jae
push
scas
addr16
mov
mov
jne
daa
fnstcw
popf
stos
mov
pop
xor
std
sub
lcall
lret
std
outsl
or
mov
cmp
lods
cltd
movsl
sub
icebp
adc
add
mov
xchg
and
outsl
xchg
cmp
fisubrl
mov
int3
movsb
adc
scas
push
sbb
lods
subl
mov
inc
push
or
setp
pop
andl
lret
push
jnp
and
sub
jne
jl
pop
or
push
inc
jnp
into
and
xchg
pop
aad
pop
or
lea
push
popf
das
xchg
arpl
addr16
jge
jae
and
and
aad
fisubrs
pop
vpshuflw
xchg
pop
cmp
xchg
add
or
or
cmp
xor
sub
dec
loopne
or
push
inc
mov
jecxz
test
push
fwait
sbb
js
imul
outsl
sub
mov
sub
mov
outsb
jnp
xor
mov
lahf
inc
jo
push
scas
icebp
jmp
xchg
and
or
in
mov
call
insl
mov
push
and
push
mov
js
ret
jg
rcr
out
sub
mov
icebp
lods
cmpsl
aad
mov
cmp
add
or
bound
pop
sbb
sahf
out
test
enter
iret
sub
mov
test
lret
ret
into
and
fcom
out
mov
loop
std
enter
in
pusha
pushf
sbb
cli
test
xchg
sbb
enter
mov
push
in
inc
std
cmp
fnsave
cld
sub
rorb
ds
movsb
cmpsb
jns
test
and
cmp
or
sti
ljmp
xchg
fwait
push
jle
insb
jp
jg
scas
popf
mov
inc
aad
mov
mov
enter
pop
mov
mov
nop
stos
fidivrl
jo
insb
xor
imul
scas
add
mov
xor
roll
ret
dec
jl
es
sbb
sbb
jle
jl
sahf
mov
inc
sub
call
bnd
jmp
pop
roll
jb
out
add
sub
das
loope
push
adc
subl
adc
iret
into
mov
out
popf
mov
pop
js
push
push
ret
or
jne
pop
mov
shll
pusha
adc
pop
jae
and
adc
aad
mov
mov
xchg
ret
lcall
add
mov
jbe
movsl
ljmp
aaa
test
ficoml
push
jbe
cs
popa
xchg
cmp
std
std
mov
fildll
dec
in
inc
xor
sub
lods
je
jecxz
mov
scas
xor
xor
pop
xchg
out
pop
adc
adc
ret
push
scas
inc
movsb
orb
add
sbb
sub
lds
pop
mov
mov
push
js
dec
xchg
jae
fcmovne
in
out
jbe
and
xor
or
outsl
sti
sub
adc
sub
xor
xor
push
pop
in
add
mov
xlat
outsl
adc
mov
xchg
push
jo
sub
stos
rcrb
in
outsl
adc
inc
inc
pop
add
stos
sbb
mov
scas
cwtl
cmp
jae
daa
test
push
loopne
gs
iret
or
loope
pop
push
xchg
lret
xor
push
cmpsl
js
addr16
jle
sbb
lea
mov
sbb
pop
xchg
add
or
pop
dec
pop
gs
popa
inc
adc
inc
or
jnp
or
bound
clc
push
std
stos
add
or
iret
jbe
cmp
xor
lahf
push
adc
icebp
call
call
dec
cli
jmp
mov
mov
xlat
fistpll
lret
arpl
mov
xor
mov
lret
les
cmpsb
paddusb
les
jb
mov
repnz
push
jno
aaa
dec
xchg
jae
fidivrs
lret
xchg
xchg
and
dec
and
popa
xlat
inc
data16
repnz
cmp
jae
int3
call
sbb
adc
xchg
adc
mov
mov
or
mov
imul
ss
cmp
repz
int3
pushf
insl
dec
push
jle
enter
sbb
out
sub
inc
pusha
or
pushf
out
repz
insl
sti
add
mov
popf
push
inc
xchg
cmp
xchg
sbb
ret
mov
cmp
mov
mov
ljmp
lcall
add
out
lds
sbb
cmp
shll
push
addl
repz
cmp
out
jmp
dec
andl
ret
lods
push
jge
cld
jge
aaa
subb
loop
mov
jnp
fstps
sbb
adc
add
rcrl
mov
outsl
pop
popa
jle
shlb
imul
in
and
push
roll
jle
inc
sti
divb
call
out
test
and
shrb
mov
mov
and
add
test
xor
addr16
sub
pop
ja
ret
xchg
cs
pop
leave
or
in
sub
lret
loope
sub
mov
iret
mov
jae
adc
xor
out
jo
mov
outsb
push
pop
jl
sahf
lods
inc
cltd
in
and
mov
bound
test
loope
testb
inc
in
pop
pop
aaa
dec
lea
ror
and
lahf
inc
movsl
inc
into
push
rclb
jl
scas
ljmp
jge
push
or
int
jns
mov
fxch
stos
sub
mov
xchg
je
fnstcw
dec
daa
mov
sub
pop
outsl
push
insb
inc
xor
xchg
pop
ljmp
cmp
dec
pop
push
std
popf
sub
std
adc
ret
jne
pop
repz
popa
xchg
inc
push
test
mov
es
cmp
jp
jl
fimuls
pop
sub
test
mov
jl
js
adc
and
fildll
repz
stc
das
ffreep
push
pop
mov
jbe
jmp
inc
fwait
xchg
adc
push
jnp
mov
jl
imul
cmpsl
movsl
mov
inc
out
ja
push
pop
enter
adcl
lods
lods
and
or
popf
pop
nop
ffreep
fucomp
lea
or
and
bts
mov
mov
or
dec
shlb
push
lahf
js
aas
test
xchg
or
mov
jne
jp
fbstp
mov
movsl
mov
ret
cs
cli
jne
loope
jno
sbb
push
mov
xchg
and
mov
cmp
popa
mov
mov
and
shlb
cmp
es
mov
jecxz
bound
jno
cmp
xchg
pusha
std
mov
jge
lcall
shlb
lds
adc
adc
or
fdiv
cmp
sbb
xor
mov
pusha
addl
sahf
push
pushf
add
inc
mov
movsb
ret
lcall
dec
cmpsb
cmp
mov
sahf
fistl
shll
lcall
pop
xchg
fsubl
loopne
pop
aad
inc
adc
jg
push
bnd
fistpl
je
xlat
enter
lock
jbe
ja
pop
lds
faddp
insl
xorl
cltd
cmp
pop
ficomps
mov
pop
xchg
and
xchg
leave
imul
in
loop
cmp
decl
inc
int3
aas
hlt
add
out
fidivs
mov
mov
jmp
dec
xchg
jae
daa
xchg
fldcw
jnp
add
push
in
test
add
push
sub
scas
mov
mov
mov
xchg
test
icebp
int3
cmc
jbe
push
dec
mov
cmp
push
sbb
nop
cmpsb
cltd
or
and
and
mov
dec
popf
in
adc
jbe
mov
lret
push
sbb
jp
test
fwait
dec
jnp
cmp
loope
cmp
xor
add
inc
inc
cmp
jl
jl
jb
lods
dec
mov
sub
cld
jmp
sbb
out
lahf
sbb
xchg
pop
cmp
or
mov
lret
pop
and
orl
jecxz
popa
rcl
xchg
loop
stos
inc
xor
sbb
sub
ret
jmp
lret
and
out
push
push
insb
in
lock
outsl
inc
fmuls
aad
push
sbb
cld
mov
sbb
push
shll
push
addr16
mov
rorl
adc
mov
shl
dec
pop
out
js
aas
les
fwait
mov
fwait
fs
iret
mov
xchg
jnp
out
inc
dec
mov
pushf
sub
rep
sti
inc
test
in
imul
aaa
loop
jno
mov
sti
rol
les
lcall
mov
inc
popf
cmp
adc
sbb
nop
stc
scas
inc
mov
les
add
vdivsd
loopne
nop
jb
pop
ds
inc
cs
and
mov
sahf
lret
push
lods
jle
pop
into
dec
xorb
mov
add
or
jmp
test
cmpsb
stos
xchg
stc
mov
cwtl
sbb
push
add
nop
pusha
sar
xor
xor
inc
js
or
cld
cwtl
jnp
cmp
cltd
pop
sub
popf
adc
sub
fwait
push
in
cwtl
add
mov
out
cli
push
test
inc
in
fildll
mov
cli
push
fstl
pop
xchg
or
jmp
adc
orl
cmp
mov
ret
adc
adcb
pushf
mov
into
push
cmpsl
xor
cmp
and
pop
or
push
es
mov
fildll
push
lods
call
fadds
lea
das
ficoml
sti
mov
lock
stos
pop
ret
sarb
int
shl
outsl
ss
fcmovb
inc
sbb
and
leave
testb
mov
xchg
sbb
xchg
leave
push
push
dec
test
pop
mov
xor
rclb
clc
mov
fs
jmp
test
stos
aas
xchg
pop
mov
lods
hlt
pusha
int3
imul
fs
movsb
lock
mov
and
jns
jp
movsb
push
mov
jne
mov
cs
sbb
mov
scas
mov
mov
push
rorb
dec
out
xchg
xor
dec
insl
or
or
jne
test
cmp
xor
pop
bound
inc
sbb
jae
xor
xchg
mov
add
test
sahf
in
jbe
mov
mov
sti
cs
into
sar
adc
fstpl
cmp
mov
test
xor
mov
pop
xchg
mov
jmp
loop
push
adc
mov
push
cmp
std
jl
orl
arpl
xor
push
mov
xor
xchg
cmp
pop
mov
push
fpatan
push
shll
das
mov
lea
test
cmp
movsl
cmp
je
pusha
dec
dec
fcomi
and
jl
xchg
fs
push
nop
out
or
cmc
adc
and
aaa
sub
daa
repz
and
hlt
sub
test
mov
lock
clc
sbbb
je
lock
mov
xor
ja
ret
sbb
inc
jbe
sub
insb
out
fucom
fwait
aas
xchg
scas
mov
or
daa
cld
jg
out
sub
add
jle
xchg
jle
dec
movzbl
pop
loop
andl
lret
cmp
jnp
imul
mov
adcl
shrb
orl
ficomps
cld
pop
cs
loopne
cwtl
mov
mov
jl
sbb
inc
jl
ret
xor
loope
fs
fcom
jmp
mov
ret
addr16
and
sub
sub
leave
or
cmpl
and
lds
shll
mov
rorl
scas
jae
test
sbb
or
std
pushf
mov
mov
or
add
jb
pushf
xchg
cmp
mov
adc
sbb
mov
lock
or
add
pop
push
shlb
xchg
das
add
mov
sub
fsts
push
fsub
div
cs
je
int
sub
mov
mov
imul
lret
div
jno
xchg
push
cwtl
in
mov
test
mov
add
data16
cmpl
std
icebp
cld
inc
sahf
iret
das
push
add
mov
insb
lods
jne
jp
addr16
push
pop
js
std
aaa
adc
test
jae
push
outsb
jp
pinsrw
pop
outsl
mov
movsl
add
sbb
imul
mov
rcrb
in
dec
ds
mov
bswap
popf
loopne
cli
loopne
mov
or
xchg
sbb
gs
loopne
fimuls
aad
movsl
iret
and
adc
leave
inc
sahf
pop
dec
loop
das
jge
xchg
add
fs
pushf
pop
sub
inc
fcompl
jbe
in
movsl
icebp
mov
jp
faddp
sub
in
mov
fildll
sub
mov
push
sub
adc
gs
or
in
ret
push
push
lds
inc
pushf
dec
adc
add
out
cmp
mov
pushf
pop
out
xor
pop
mov
lret
dec
and
xor
pandn
mov
xchg
fdivs
adc
das
test
sub
or
xor
movsb
pop
jmp
insb
xchg
loope
or
inc
arpl
insl
adc
or
into
lds
stos
mov
mov
mov
call
mov
ret
cltd
cmpsb
cmp
insb
js
dec
dec
dec
push
imul
mov
mov
mov
add
call
repnz
outsb
pop
add
pop
loop
mul
lods
adc
sub
outsl
dec
adc
sbb
mov
sarl
dec
xor
mov
stos
push
shlb
adc
daa
pop
in
xor
pop
outsb
in
and
pop
mov
mov
lea
adc
sub
or
cmp
add
xchg
notl
stc
cmp
sbb
inc
imul
gs
int3
jne
push
test
jne
and
mov
movsb
gs
cmpsb
jne
sahf
inc
mov
roll
push
rol
ja
or
inc
aaa
bound
xor
aam
aad
push
jp
in
push
pop
push
or
lret
xlat
inc
out
inc
mov
out
fstp
outsl
inc
xor
incl
pop
out
jp
dec
stos
enter
cmp
dec
popa
movsb
push
incb
ss
cs
adc
mov
or
dec
lds
lods
pop
push
mov
sbb
std
movsl
lret
shlb
push
mov
push
or
ss
inc
scas
sub
add
inc
lahf
sbb
mov
cs
mov
cwtl
jb
sub
dec
jns
gs
dec
cli
mov
adc
xchg
cmpsl
add
stc
mov
pop
mov
stc
inc
leave
in
icebp
push
sbb
cs
in
mov
cmp
lcall
leave
rorb
shlb
jns
mov
xor
add
ljmp
rolb
pop
dec
sub
push
pop
popf
and
js
push
pop
fiadds
mov
mov
stos
lock
inc
mov
lcall
cmpsb
fs
aas
or
xor
mov
push
shll
mov
pushf
xor
rol
iret
mov
in
stos
inc
dec
dec
inc
ret
leave
cmp
add
stos
jns
div
int
fdivrl
test
es
dec
xor
aas
ret
mov
arpl
xor
cmp
push
insl
icebp
repz
in
fimull
mov
sbb
jns
xor
lret
andl
jmp
jb
testb
sbb
mov
cld
mov
fldl
mov
sahf
cmove
aaa
daa
jo
xor
out
sbb
lahf
lret
into
std
mov
gs
mov
push
xlat
sbb
in
scas
jnp
or
cld
and
scas
scas
push
add
or
nop
sbb
cld
icebp
pop
push
jmp
sbb
mov
popf
add
mov
scas
fdivl
insb
jl
fstps
nop
je
insl
mov
and
dec
mov
xchg
pop
fs
scas
fists
adc
test
aaa
popa
shl
or
lea
inc
mov
mov
lret
inc
xchg
cmpsb
mov
addl
adc
ftst
js
scas
dec
jae
fidivrs
sar
aas
fldcw
or
pop
xor
and
add
lret
add
or
iret
mov
cmp
adc
dec
inc
jp
leave
imul
loope
fimull
subb
bound
fs
adc
jp
mov
jns
dec
ficompl
xor
push
sarb
popa
cli
sbb
std
and
insb
lcall
cmp
outsb
sbb
jno
sub
xchg
enter
add
mov
pop
cmpsb
in
adc
insb
xor
div
xorb
lar
sti
test
inc
mov
lea
pop
pop
fbstp
scas
dec
add
ljmp
jbe
inc
sbb
add
scas
mov
inc
jnp
inc
dec
mov
lods
jle
adc
inc
push
cmc
movsb
fnstenv
mov
xchg
lods
test
pop
push
lock
call
lods
mov
ficomps
adc
call
xchg
mov
dec
lds
and
andb
push
iret
ljmp
mov
cli
mov
ljmp
or
and
dec
imulb
cmp
jle
pushf
cwtl
test
xchg
test
xor
push
pop
mov
addr16
in
push
clc
test
mov
loope
xor
pop
stos
pop
lods
or
inc
mov
aad
incl
add
sbb
les
movsl
in
add
rcrb
stos
and
fwait
pop
cmc
jmp
popf
loopne
imul
dec
pop
in
sub
push
js
ljmp
fldenv
cmpsl
ret
stos
mov
and
add
mov
repz
cli
pop
sub
mov
mov
or
dec
mov
repz
call
mov
imulb
inc
push
mov
and
push
pusha
shrl
xor
call
cld
and
out
cmp
adc
outsl
sbb
lcall
inc
mov
scas
xchg
mov
inc
push
jbe
push
mov
ret
mov
inc
or
mov
sub
repz
js
ja
dec
push
mov
push
adc
inc
add
out
push
fs
xchg
and
mov
inc
arpl
push
les
pop
js
mov
inc
fmull
data16
jmp
jl
jo
subl
gs
adc
and
sbb
sub
jle
call
push
rcl
adc
imul
lcall
and
pop
stc
out
stc
xor
pop
dec
xor
xchg
mov
add
inc
dec
jb
ret
push
push
cmp
fistps
std
test
popa
or
push
push
addr16
sbb
stos
push
jne
cmp
enter
and
jmp
dec
adc
in
and
jge
add
or
or
repnz
call
and
mov
pop
pop
cmp
mov
push
es
sarl
or
jl
out
and
inc
and
cmpb
push
inc
pop
bound
sarl
rorb
pop
xchg
hlt
mov
aas
push
bound
mov
or
pop
movsb
cmp
xchg
xchg
out
xchg
int3
imul
mov
vpmacsswd
and
mov
cmp
loop
mov
and
mov
orb
lds
lcall
push
jnp
sbbb
test
sbb
or
jno
fdivl
movsb
inc
rorb
sbb
fcmovb
out
xchg
xchg
pop
sub
gs
jmp
jne
mov
dec
pmullw
stos
movsl
pusha
ret
lahf
jae
test
dec
fcmovnb
mov
mov
adc
xchg
les
lods
push
fisttpll
or
adc
pushf
jo
add
sub
cs
rol
dec
jae
mov
adc
call
cmp
jns
mov
pop
cmp
sbb
out
push
ret
in
mov
shlb
adc
pop
add
jl
cmp
mov
fidivrs
mov
jmp
sub
jmp
in
lret
adc
mov
in
cmpsb
insl
jnp
push
ror
insl
and
xchg
incl
xchg
mov
mov
xchg
pop
push
jg
jecxz
in
adc
pop
xor
add
inc
fldenv
fistpll
sub
popa
xor
jle
scas
mov
in
jl
xchg
sub
ret
dec
mov
sub
inc
push
and
adc
jle
xlat
sbb
cwtl
test
jne
orb
push
xor
mov
add
xchg
cld
outsl
mov
arpl
sbb
nop
or
and
adc
add
xor
repnz
subl
clc
mov
mov
mov
cwtl
arpl
xchg
mov
jle
std
ds
orb
jb
mov
lret
in
lcall
jl
xor
jb
aaa
jb
aad
push
in
rcr
pop
push
in
mov
jae
fs
pop
std
xor
mov
fildl
xchg
sub
and
ja
faddl
or
pop
xor
xchg
xchg
aad
cli
mov
decl
in
call
xchg
cwtl
adc
push
ret
popa
xor
hlt
imulb
push
pop
inc
icebp
or
scas
jg
sti
inc
pop
rclb
or
sub
test
ljmp
cltd
rorl
test
test
cli
hlt
lea
and
sub
out
or
inc
rep
mov
push
stos
mov
es
push
out
sti
add
cmp
lcall
and
js
loope
out
push
nop
fs
mov
aaa
js
mov
cwtl
sbb
orl
adc
mov
mwaitx
sub
repnz
cmp
dec
das
movsb
aaa
scas
jmp
mov
add
jne
mov
pop
pop
ret
or
jle
push
dec
outsl
mov
pop
mov
mov
push
mov
push
test
lods
push
ljmp
insb
hlt
mov
inc
pushf
inc
xor
inc
jmp
or
in
imul
and
mov
mov
gs
dec
push
jo
adc
xor
fcoml
dec
mov
fisttpll
mov
je
sar
cmpsb
aas
jnp
dec
pushf
xchg
mov
adc
push
sbb
push
mov
std
ss
std
out
pop
sbb
cmp
inc
adc
shll
dec
insb
fadd
ficompl
jg
cmc
sub
inc
js
xchg
mov
popa
mov
stos
and
mull
jge
in
mov
push
dec
cli
repz
test
jnp
out
or
mov
stos
sub
in
sahf
pushf
jecxz
cmc
xor
lret
lcall
add
dec
popa
data16
sti
out
sub
dec
push
movsb
fmuls
daa
pop
popa
lds
ficomps
jno
inc
ds
dec
outsl
xchg
in
xlat
pop
sbb
pusha
or
dec
inc
dec
sbb
jmp
inc
js
stos
aaa
mov
imul
sub
shld
pop
aam
push
lret
sub
dec
jmp
cmp
push
aas
pop
inc
cwtl
jmp
mov
roll
push
rorl
jmp
sub
push
xor
enter
push
sbb
push
inc
jg
test
sbb
stos
sbb
stc
xor
ret
cmp
sti
pop
jnp
shl
insl
adc
stc
mov
dec
sub
dec
xor
adc
or
lods
lahf
dec
cmp
add
mov
jmp
ret
inc
in
movsl
add
mov
lock
or
clc
mov
in
sub
xlat
frndint
ret
or
iret
jne
and
pop
loopw
push
xchg
fistpl
or
xchg
bnd
test
mov
dec
push
inc
dec
add
jae
aaa
jb
and
adc
xor
sbb
sub
jge
je
pushf
mov
std
lods
jbe
sub
xor
jmp
and
cwtl
test
sbb
orl
imul
fs
sub
or
int
data16
lahf
mov
lret
add
jmp
das
sbb
inc
testb
dec
dec
adc
sbb
roll
pop
xlat
insl
dec
int3
out
sub
inc
push
mov
lds
jge
pop
cwtl
aas
cmp
mov
cltd
outsl
mov
add
or
mov
inc
fisubs
ljmp
shlb
and
imul
push
mov
dec
pop
sbb
or
xchg
cltd
or
fdecstp
jns
adc
jo
std
pop
xor
dec
jecxz
std
mov
pop
mov
push
sub
adc
imul
pop
jmp
into
daa
push
mov
es
adc
std
pushf
movhps
je
aam
mov
inc
cmpsl
std
int
pop
addl
ss
mov
mov
loopne
in
jge
mov
iret
xor
rcl
add
dec
into
mov
in
fsubl
lds
enter
rclb
loop
xchg
mov
in
add
loopne
mov
push
insb
or
and
pop
mov
arpl
pop
add
dec
inc
push
ja
enter
das
sub
pushl
dec
xor
mov
sahf
cmp
and
or
jl
and
lea
adc
sbb
scas
mov
or
xor
lods
in
inc
cltd
xchg
lcall
movsb
sti
add
adc
cmp
arpl
mov
cli
iret
pop
push
stc
orb
adc
sbb
mov
sahf
lock
jl
out
and
mov
pop
xlat
test
mov
cltd
cmpsl
mov
mov
mov
dec
sub
xchg
arpl
lret
arpl
cld
mov
sub
scas
or
xlat
xchg
fists
lock
cmpb
sub
cmp
into
mov
lods
les
jle
ficompl
or
and
xchg
add
pop
adc
ss
les
mov
sbb
mov
out
jo
inc
fidivl
icebp
out
inc
aad
jo
test
in
fwait
mov
sbb
or
out
or
negb
mov
mov
or
je
push
scas
pop
mov
je
je
sub
lods
ds
enter
pop
cmpsb
jbe
jns
andb
cmp
lods
mov
and
mov
mov
pop
shll
pop
inc
sbb
int3
mov
stos
dec
lods
pop
std
les
push
ljmp
adc
push
adc
xorb
mov
mov
and
enter
lret
mov
xor
xor
xor
or
ja
ds
inc
sahf
mov
into
adc
jo
test
test
hlt
push
add
sub
adc
repz
leave
call
subps
mov
pop
cli
iret
cmp
inc
push
sbb
adc
adc
call
lods
and
test
cmp
imul
cmp
repnz
pushf
cmc
insl
repnz
pusha
sarb
mov
mov
xchg
aas
and
push
movsb
es
fs
cmp
mov
jge
ret
aaa
adc
nop
int
dec
mov
imul
push
mov
pop
adc
mov
mov
or
lock
and
rorl
sti
push
pop
jmp
or
push
pop
pop
popa
faddp
mov
out
adc
imull
mov
mov
mov
aas
and
mov
dec
imulb
icebp
xor
clc
xchg
hlt
cli
es
loope
pop
push
stc
sti
dec
and
pop
xchg
and
lret
mov
mov
cmp
mov
rcl
xchg
adcb
jecxz
sub
es
mov
jbe
mov
fisubs
pushf
leave
mov
push
out
jmp
lret
mov
push
jg
sti
xor
in
jmp
xchg
inc
or
je
xchg
cmp
pop
jo
incl
and
clc
pusha
aam
cmpsl
mov
adcl
cmp
test
sub
mov
pop
popf
xor
xchg
cmp
add
ret
sub
and
in
xchg
adc
xor
pop
cmp
cmc
push
orl
aad
xor
mov
testb
jp
loop
rcrl
pusha
dec
sbb
mov
in
dec
mov
jbe
fsin
jns
jmp
cmp
int
mov
lret
mov
fistpll
fs
cwtl
adc
movsl
mov
sub
pop
jp
rolb
lret
stc
popf
cmp
shlb
inc
mov
xor
loope
pop
stc
lahf
int3
or
pusha
cmc
mov
stos
in
inc
pop
popa
dec
cwtl
stc
sarl
imul
add
inc
adc
add
mov
out
je
sub
loope
xchg
and
js
test
subb
push
mov
lea
push
xchg
movsl
sbb
cwtl
lahf
push
and
sbb
cmc
mov
icebp
mov
sbb
idivl
stos
and
call
xchg
insb
test
xchg
dec
pusha
cmp
daa
les
adc
js
sub
dec
ja
or
mov
and
sbb
je
mov
clc
pop
cli
and
mov
icebp
mov
dec
jne
sbbl
xchg
fsts
jle
xchg
dec
add
add
sub
notl
mov
loope
pop
cmc
js
xorb
add
push
fimull
lcall
sbb
and
dec
ret
hlt
in
adcb
mov
dec
popa
jae
orl
mov
adc
orl
push
mov
cmp
and
mov
or
and
fsubl
mov
adc
divb
aad
int
mov
mov
fldenv
mov
jp
mov
and
inc
es
mov
cwtl
lock
xor
icebp
mov
flds
fistps
cmpsl
sti
lods
and
push
pop
adc
jecxz
and
cmp
out
and
sub
dec
incb
repz
jmp
adc
pop
fsubs
jle
dec
inc
xchg
loope
dec
mov
cmp
jp
fs
and
popa
ja
xchg
mov
mov
inc
adc
repz
pop
lea
adc
cmp
dec
xor
pop
pop
cmp
inc
hlt
mov
push
pushf
cmpl
pop
dec
jb
pop
repnz
push
sbb
add
leave
adc
mov
mov
inc
inc
mov
fwait
push
mull
dec
jge
stos
dec
icebp
cmc
or
lcall
xor
adc
outsl
adcl
rcr
cmp
repz
add
movsb
cmp
in
mov
or
outsl
lea
ds
sub
repz
lret
mov
adc
jns
dec
and
das
icebp
inc
stos
mov
jmp
stos
xchg
xchg
adc
out
lods
lock
mov
int
aam
mov
add
arpl
outsl
aam
jg
xchg
ss
or
mov
push
int
mov
sahf
xor
xchg
dec
fwait
xchg
test
hlt
in
sbb
pop
arpl
add
aas
out
dec
dec
lods
jb
pop
inc
xchg
pop
cmc
xchg
ds
insl
jo
into
enter
pop
rol
inc
push
jl
ljmp
dec
mov
cmp
lods
pop
inc
xchg
sar
pop
out
add
fdiv
idivb
mov
clc
push
das
iret
loop
mov
sub
adc
push
mulb
mov
pop
xchg
cmpsb
insb
xchg
and
adc
fisttpll
pop
iret
aaa
cld
aam
paddusb
int
xchg
js
jne
lods
xorl
push
mov
sub
lods
mov
es
repz
push
inc
push
out
icebp
and
lret
and
cmp
test
bound
or
push
push
dec
aaa
push
push
jecxz
call
mov
cmp
shll
cmp
dec
test
add
adc
cmc
bound
lds
loop
xchg
jnp
xor
adc
int3
jg
pop
cmp
xlat
push
push
mov
dec
or
pop
insb
fucomip
gs
das
cmp
jge
js
negb
sub
stc
pop
shr
mov
mov
aad
arpl
push
decb
mov
aam
inc
xchg
push
jne
std
cld
mov
push
pushf
rcrb
xchg
cmpsl
push
cmp
pop
aad
fisubrs
inc
adc
cmp
dec
fstpt
or
push
xor
pop
mov
out
xor
inc
test
push
scas
repnz
arpl
jo
add
sar
fcompl
pop
xor
sbb
sahf
sub
sbb
lahf
and
mov
jle
in
xor
jae
push
out
imul
lds
adcb
cld
mov
xchg
xor
jmp
sbb
shlb
jbe
push
jge
mov
rorb
ret
imul
sarl
push
aaa
xchg
stos
sbbl
adc
lcall
subb
xchg
xor
mov
or
cmp
lods
call
repnz
repz
inc
sbb
nopl
mov
sbb
int
cmc
cld
xchg
sub
mov
fidivrl
scas
or
lods
and
cwtl
add
mov
mov
test
fcomip
push
adc
gs
sub
lea
sarb
pop
sub
jmp
test
bnd
cmpsb
into
jmp
add
mov
xor
nop
out
loopne
or
mov
stos
sbb
dec
or
lea
xchg
popa
pop
pop
test
mov
cld
out
jne
aas
cmp
cmp
cmp
push
mov
push
stos
dec
movsl
dec
pushf
mov
pop
outsb
dec
cmp
inc
in
or
mov
inc
inc
add
cmpsb
test
adc
sar
cmp
vpcmpeqw
adc
shlb
cli
test
faddl
ret
aas
mov
ljmp
test
lret
push
std
ja
in
adc
fidivrl
xchg
insb
jne
push
cmp
test
mov
insl
mov
or
inc
lret
stos
or
jmp
push
push
mov
hlt
subb
pop
pop
cmp
sub
insb
pop
jo
jge
lods
lcall
pop
jnp
sti
call
push
jle
sbb
cs
enter
mov
sbb
xchg
sub
adc
add
sti
je
dec
scas
icebp
inc
lret
lods
mov
xchg
jo
add
cmpsl
mov
leave
cmp
iret
mov
jbe
or
cmp
cmpsb
mov
mov
pop
xor
ds
xor
flds
dec
jns
pop
aas
jg
clc
sahf
testb
adc
xchg
lods
scas
mov
imul
loope
inc
scas
dec
and
push
add
mov
sub
mov
mov
jo
xchg
sub
inc
imul
mov
xor
cmp
popa
xlat
ficomps
sbb
incl
push
aam
scas
into
loope
aam
jl
adc
xor
lahf
pcmpgtd
mov
arpl
arpl
xchg
das
mov
mov
add
mov
pop
or
aas
xor
adc
push
fwait
jl
push
dec
cs
das
rorb
add
and
push
inc
and
or
repz
leave
or
dec
mov
mov
xor
or
jbe
xchg
sahf
cmp
aam
mov
ljmp
cs
xchg
mov
shr
dec
lcall
stos
add
jns
mov
inc
mov
pop
insl
xchg
sarb
mov
aad
and
pop
sbb
push
idivb
xor
add
test
push
mov
imul
pop
mov
push
cmpsl
mov
and
hlt
lret
cmp
outsl
pushf
les
sbb
movsl
pop
xchg
or
lret
test
mov
bound
aad
jecxz
fnstenv
jbe
cmp
in
mov
cmp
cwtl
rol
pop
mov
ret
sbb
jecxz
mov
dec
out
movsb
cmp
testl
push
mov
sahf
lds
clc
or
or
lock
loopne
roll
loopne
mov
rcll
sbb
mov
sub
lahf
pop
pop
into
aam
xchg
xchg
sbb
add
sbb
pop
and
add
pop
repz
and
sub
sbb
cmp
ljmp
jle
out
repz
pop
jno
adcl
lret
or
mov
in
mov
scas
ror
fimull
mov
inc
fsub
aaa
dec
xchg
decl
fsubs
in
fs
and
mov
xchg
addb
hlt
out
and
pop
sahf
sub
cmp
sbb
add
dec
dec
cld
popa
dec
lea
xchg
ss
sbb
pop
mov
mov
iret
mov
cmp
add
and
push
sub
lds
imul
cmp
adc
aas
lret
aam
div
mov
shll
inc
pop
clc
push
fwait
pop
and
pop
jmp
sub
xchg
add
xor
stos
sub
mov
pop
stos
and
loopne
mov
jl
or
jns
jmp
jnp
mov
cmc
loope
out
jno
hlt
inc
sub
mov
hlt
xchg
imul
test
jmp
aaa
cmp
cmpsl
shrl
xchg
aam
aaa
popf
imul
push
cmp
ret
aas
jg
or
scas
jmp
and
pop
sub
into
and
in
shlb
jle
test
mov
imull
test
enter
lret
sbb
sub
mov
xor
fdivrs
mov
andb
xor
xchg
dec
push
push
xchg
add
or
out
add
aad
mov
scas
ljmp
push
add
je
js
sbb
xor
push
idivl
push
cwtl
adc
imul
cmpsl
xlat
xchg
and
movsl
rclw
test
xor
call
mov
cmp
pop
mov
mov
xlat
xor
bound
jb
jb
int
jo
clc
test
sar
stos
xchg
inc
sub
pusha
sti
stos
cwtl
stos
mov
mov
shrb
sbb
addr16
popa
xchg
jge
pop
shl
pushf
outsb
into
stos
out
sub
lcall
mov
std
sbb
or
stos
jmp
or
and
pop
arpl
rcll
cli
jg
jb
mov
jle
sbb
xor
jno
push
popa
or
out
inc
movsb
inc
adcb
jns
mov
lcall
mov
js
mov
lds
push
push
jecxz
push
mov
inc
push
push
inc
jp
cmp
cmp
enter
clc
nop
and
out
out
sti
in
data16
and
xchg
pop
xor
xchg
aaa
xchg
sahf
dec
mov
stc
mov
imul
add
stos
fcmovu
int3
xor
stc
lods
idivb
mov
inc
ret
push
lret
loope
jo
fbstp
test
cmp
adc
jnp
mov
pop
ljmp
test
xor
sub
clc
loopne
sarl
imulb
arpl
dec
or
inc
pop
push
faddl
jb
cmpsl
cltd
xor
je
nop
xor
push
jbe
mov
sbb
ficoml
sbb
movsb
push
and
jecxz
lds
divb
pop
push
arpl
js
cmpl
sbb
lahf
jmp
dec
imul
out
push
scas
arpl
sarl
adc
push
pop
sbb
pusha
mov
ja
pop
xlat
insl
mov
jge
adc
rcrl
and
dec
adc
pop
je
inc
pop
pop
cmpsb
push
fs
cmpl
fwait
iret
out
mov
cmovo
dec
or
mov
push
mov
adc
rolb
mov
inc
sbb
scas
mov
or
fists
je
int3
lock
adc
rorl
bt
scas
adc
jnp
call
mov
inc
pop
sub
xchg
je
adc
es
push
add
sub
imul
and
jne
add
data16
das
xor
jbe
mov
adc
js
sbb
push
je
xor
pop
mov
cmp
pusha
iret
shl
mov
mov
adc
dec
mov
js
mov
cmpsb
lods
hlt
jnp
sahf
push
dec
xlat
loop
cmp
and
pushf
pop
mov
sub
inc
pop
pop
enter
xchg
or
jecxz
push
push
jg
ret
cmc
inc
jb
pop
push
imul
or
scas
shlb
les
fcmovb
or
cmp
mov
sti
fistl
and
xchg
cmp
jle
or
call
xchg
mov
idivl
xchg
or
loop
push
pop
scas
roll
sbb
out
icebp
and
mov
pop
ret
sar
sti
js
popa
xchg
push
jno
mov
inc
sub
dec
mov
imul
and
lods
pop
sbb
jge
adc
aas
outsb
jecxz
xchg
lods
lods
pop
out
inc
xchg
xor
js
pop
dec
rorb
and
mov
sub
mov
out
push
ds
and
push
push
pop
and
and
push
pop
inc
push
xchg
cwtl
pslld
mov
inc
push
jmp
cmpsl
fnsave
rolb
fwait
inc
jne
shll
xchg
pop
dec
stos
cmc
adc
sub
jns
xchg
xchg
jb
outsb
clc
into
push
mov
push
arpl
fisubrs
adc
jae
addr16
lcall
pushf
mov
pop
ret
mov
lods
jns
mov
clc
or
jp
sbb
lds
mov
and
sahf
cmpsb
push
arpl
mov
loope
jbe
push
in
aaa
sbb
fstps
xor
sbb
sub
fistpll
iret
sbb
add
and
outsl
adc
int
dec
xor
cli
jae
pop
sub
xchg
jbe
fcomps
lret
xor
out
in
int
enter
jbe
inc
shll
mov
in
idivl
in
cmc
cmpsb
das
mov
push
call
pop
lret
mov
in
outsb
jno
mov
fistps
lret
sbb
xor
pusha
push
cmp
xadd
xchg
or
xchg
xchg
dec
rcrb
pop
jl
adc
insl
mov
in
mov
sub
adc
or
inc
flds
mov
pop
leave
jbe,pn
shr
enter
xor
or
pushf
cmpsl
sbb
mov
mov
sub
inc
stc
add
scas
or
test
testl
sbb
jae
test
out
xor
add
add
cwtl
ficoml
push
or
pop
repz
movsb
pushl
push
push
adc
out
xor
mov
movsb
cltd
call
and
and
out
pop
lcall
xchg
push
jae
xchg
jmp
and
pop
sbb
mov
mov
or
jle
sub
cmp
arpl
ja
xor
ja
ds
push
and
ret
test
popa
jle
lods
xor
lret
enter
mov
sbb
dec
mov
add
leave
and
xor
leave
jl
push
icebp
push
sti
movsl
ret
and
cs
jge
push
jne
xchg
cmc
push
popa
add
out
push
pop
fnsave
cld
push
jmp
test
ja
in
mov
out
aas
jns
jecxz
shrb
stos
mov
mov
pop
and
outsb
cs
les
xor
and
loope
or
sbb
mov
lods
xchg
les
and
push
or
bound
jae
mov
aam
dec
scas
mov
bound
popf
icebp
add
mov
xor
pop
jne
mov
push
sub
pusha
leave
incb
or
xlat
xchg
js
inc
sub
inc
test
lcall
ret
add
jnp
xlat
aas
jge
into
call
in
jo
scas
iret
in
cmpsl
loope
dec
js
fwait
cmp
rorl
outsb
bound
and
xchg
cmp
mov
outsb
mov
mov
nop
inc
js
xor
clc
shr
loopne
pop
cmc
or
lret
or
sbb
std
loop
mov
lods
rorb
ss
hlt
in
sbb
int
sub
cmc
popf
dec
dec
jmp
adcl
dec
and
test
scas
ljmp
icebp
xor
mov
in
nop
fisttpl
push
je
jns
push
mov
mov
sbb
les
fidivrl
mov
iretw
iret
test
jecxz
sub
pop
sbb
mov
mov
lret
addr16
loop
push
es
fiaddl
dec
andb
xorb
shr
cmp
out
leave
dec
lea
pop
cmpl
ljmp
mov
push
into
outsl
fcoms
mov
inc
pushf
pop
mov
or
addb
add
xchg
inc
loop
in
pop
pop
pop
rorb
mov
movsl
jae
clc
xchg
cmp
and
ficoms
jl
lcall
lret
inc
lock
push
xchg
and
test
lds
mov
dec
aam
adcb
dec
push
dec
pop
cmpsl
scas
fidivs
inc
jns
orb
dec
iret
xchg
movsl
pop
jne
test
adc
mov
in
xchg
movsl
mov
fidivrs
ds
jle
cmp
inc
das
sbb
pop
aaa
es
mov
jnp
add
cmp
xchg
and
inc
faddl
jmp
jb
popf
aad
ja
xchg
cli
mov
add
mov
xchg
jbe
sub
sbb
adc
mov
imul
das
cmp
cmp
outsl
xchg
rolb
mov
mov
in
aaa
pop
ret
fwait
inc
jl
into
lods
cmc
cltd
or
es
je
and
mov
fildl
mov
mov
mov
dec
xchg
aaa
sbb
loop
in
ljmp
push
insl
int
cmpl
cli
mov
xorl
stc
out
mov
mov
mov
add
leave
add
shrl
es
jle
mov
pop
sub
adc
or
xchg
popa
inc
or
nop
popa
and
rol
ret
cwtl
mov
fs
inc
push
nop
shrl
movsb
std
cwtl
mov
mov
hlt
push
adcb
pushf
lock
outsl
stos
pop
and
dec
dec
repz
loopne
jg
inc
cmpb
das
jnp
mov
dec
cmpl
dec
mov
xor
or
fdivl
xchg
push
cli
xor
enter
add
pop
ret
mov
xor
addr16
in
and
out
test
incb
imul
out
xlat
cmp
js
inc
sub
push
sbb
mov
mov
dec
mov
add
xor
push
pop
mov
popf
mov
ljmp
push
jl
fstpl
mov
rolb
jns
and
jno
push
pushf
pop
out
inc
js
jae
lods
jb
hlt
mov
pop
repz
stos
shrl
fdiv
ss
xchg
and
jae
sub
jbe
pop
xchg
shl
gs
inc
lods
sarb
add
cmp
mov
mov
fdivrs
test
sbb
add
cmp
rolb
out
fcoml
adc
push
aas
mov
dec
rcl
cmp
loope
add
jo
jecxz
outsl
ja
inc
xchg
test
dec
cwtl
cmp
push
jnp
lods
cmpsl
mov
mov
jns
faddl
xor
xor
jg
lcall
std
out
icebp
jmp
outsb
push
gs
jp
popa
dec
leave
jne
mov
cmp
aad
mov
mov
loope
pop
push
cmpsl
insl
divl
or
sub
fistps
inc
call
leave
leave
xchg
or
mov
lods
cmp
pop
sarl
pop
orl
xor
outsl
shl
and
sbb
or
ret
roll
pop
mov
cmpsl
mov
jb
daa
iret
sub
jmp
add
jnp
sbb
jnp
jg
xor
inc
cmp
inc
or
lods
lods
xchg
out
scas
inc
lods
loopw
jle
leave
mov
clc
rcrl
cmp
popa
imul
xchg
adc
and
adc
mov
subb
mov
xchg
cmp
ret
inc
loope
cltd
push
mov
and
ss
aaa
popa
nop
dec
xchg
sub
inc
out
add
enter
add
xchg
mov
cmpsl
add
cli
push
cli
and
in
in
aad
inc
sahf
ljmp
stos
lcall
aam
jne
les
imul
int3
repz
xchg
jge
adc
mov
add
loopne
push
xchg
test
mov
xchg
cli
std
jns
mov
shrb
or
test
cmpsl
pop
test
lcall
rcrl
xlat
cmp
jmp
orb
push
stos
sub
data16
mov
movsl
movsl
fistps
hlt
inc
fiadds
push
ja
inc
push
addr16
or
push
pop
sbb
int
cmp
or
fwait
stc
stc
push
pop
pop
sbb
dec
ja
pushf
and
pop
insb
stc
popa
in
push
or
lret
mov
testl
mov
je
sbb
shlb
push
leave
dec
add
sub
push
push
arpl
icebp
into
pop
dec
cs
xor
mov
push
pop
dec
aaa
push
icebp
inc
rorb
arpl
in
call
div
cmp
jo
xchg
js
fistps
pop
jge
pop
outsb
adc
dec
jecxz
ds
cmpsb
stc
jg
nop
add
hlt
xchg
mov
sahf
push
popa
cli
idivb
fldenv
mov
dec
pop
in
aam
sub
adc
cld
push
loop
insb
mov
jge
in
in
dec
sbb
adc
pop
call
test
mov
jg
divb
mov
sarl
aad
xchg
fiadds
add
mov
add
addr16
sti
ds
aaa
fisttpll
or
repnz
pushf
or
pop
sbb
pop
outsb
fwait
jno
add
gs
or
dec
jmp
not
andb
push
dec
dec
sti
mov
fnstcw
ror
repnz
pop
fwait
push
in
jle
outsl
js
addl
sbb
pop
stos
shr
aaa
insl
das
in
notl
sub
lret
push
sub
fcomps
repz
jo
fldcw
dec
cs
adc
xchg
adc
push
mov
ja
stc
ja
sbb
or
xchg
call
out
les
aas
add
sbb
mov
mov
je
or
pop
mov
in
pop
cltd
repnz
data16
jg
inc
jns
out
inc
in
jge
inc
sbb
push
or
orb
call
adc
sbb
inc
popa
jp
adc
stc
lcall
add
lret
mov
pop
jne
xchg
adc
pop
ret
cmpsl
cmp
push
cmp
cmp
mov
sub
push
pop
dec
or
call
je
push
xor
push
stos
inc
mov
jg
arpl
call
push
ss
push
mov
les
add
out
mov
sub
adc
into
into
clc
jnp
cmp
jno
aad
test
mov
push
mov
stc
sarb
jbe
push
cmp
imul
xchg
push
cmp
mov
std
jo
xchg
adc
jmp
push
mov
fsubrl
inc
nop
je
cli
and
xlat
push
loopne
loop
sbb
jmp
sub
cmp
dec
arpl
add
or
popf
push
xchg
pop
add
arpl
add
jle,pt
xchg
jbe
rorl
pop
test
popa
mov
cwtl
aaa
mov
loopne
das
push
mul
popa
xchg
inc
scas
and
jmp
inc
mov
jbe
and
outsl
cmp
pop
lods
jmp
in
fiadds
sbb
jle
ret
into
add
pop
lahf
sub
pop
popf
mov
out
cmpsl
jle
aaa
gs
leave
adc
std
in
test
cmp
mov
pop
ficomps
stos
xor
out
pusha
fwait
add
xor
mov
push
insb
dec
call
adc
push
roll
jne
adc
sar
arpl
pop
cwtl
and
std
mov
je
pop
test
add
jbe
sbb
ja
dec
movsb
aas
addb
jns
add
mov
stc
arpl
inc
mov
add
mov
outsl
adc
mov
mulb
or
cld
das
adc
xchg
sti
fst
stc
loopne
jno
jle
clc
in
imul
popf
sub
push
inc
add
test
push
sub
lods
mov
adc
das
test
push
inc
push
xor
jl
xor
jnp
in
push
push
fcoml
sahf
inc
and
mov
xor
insb
subb
cmp
mov
mov
cmp
or
add
jbe
cmc
sub
in
sbb
lret
sar
iret
push
pusha
mov
dec
sub
xor
arpl
jmp
dec
mov
add
adc
xchg
mov
push
pop
pop
imul
rclb
in
sub
and
rorl
aam
mov
popa
outsl
scas
call
pop
push
push
cmc
pushf
or
inc
mov
mov
pop
jmp
ficomps
lds
sbb
or
push
cltd
repz
mov
sbb
dec
dec
dec
mov
cli
jnp
into
fisubl
sbb
clc
aaa
mov
dec
pop
mov
mov
and
pop
fwait
mov
add
dec
mov
stos
inc
jno
ss
loop
jae
lds
cmp
insl
loopne
ds
cld
xor
in
or
jb
xchg
jns
cli
into
test
adc
cltd
icebp
adc
cwtl
mov
nop
scas
loop
cmpsb
outsb
gs
sub
adc
xor
outsl
faddp
rorl
insl
mov
adc
out
add
inc
inc
add
push
sub
xor
fs
pop
xchg
xchg
sub
enter
adc
dec
fxch
pop
leave
inc
fwait
gs
xlat
ret
xor
arpl
sub
gs
sub
inc
stc
xor
fcoml
ret
push
in
mov
push
and
sbb
testb
inc
jnp
es
jl
orb
xor
fadd
mov
mov
and
mov
mov
xor
loope
jo
cld
inc
or
and
call
mov
dec
mov
xor
sub
ret
sub
or
movaps
int
cwtl
mov
int
or
mov
das
sar
sub
shll
clc
jno
add
xor
pusha
bswap
in
cmp
mov
cmp
mov
nop
lods
dec
pop
mov
xchg
fcomps
mov
cmp
aaa
push
or
scas
mov
nop
out
or
and
sbb
ja
xor
inc
mov
adc
movsl
jno
mov
cmp
test
adc
dec
cmp
mov
sub
test
es
inc
sbb
fsts
or
cmc
pop
push
push
int3
lcall
xlat
or
lds
scas
out
inc
mov
push
jg
sub
shlb
adc
adc
push
stos
mov
xchg
cli
sbb
clc
aaa
scas
cld
stos
xchg
and
dec
lock
and
stos
adc
in
popa
sbb
jns
sub
pop
add
jl
pop
mov
jno
je
pmaddwd
and
sbbl
or
fldl
xchg
cmpb
fcoml
aas
dec
fbld
ljmp
data16
ret
test
inc
xchg
mov
jns
jb
mov
int3
out
mov
fnsave
push
scas
dec
push
adc
push
push
arpl
cmpsw
cld
ljmp
sub
fwait
or
pop
push
call
pop
inc
mov
xchg
push
or
notb
lret
sub
and
adc
js
cs
mull
inc
cmp
pop
mov
sub
adc
xor
int3
jb
scas
jg
das
mulb
pop
mov
sub
jbe
lock
ljmp
iret
test
adc
xchg
scas
jp
dec
mov
int3
fistpll
or
fnstenv
cmp
mov
xchg
pop
cmp
stos
sub
stc
repz
jmp
fnstsw
lods
and
sub
pushf
shrl
and
pop
mov
sarl
push
iret
xchg
lods
gs
pop
in
jns
lds
fistl
shlb
sahf
in
into
scas
push
lahf
fwait
loope
pop
jbe
pop
sahf
jae
stc
inc
and
mov
in
lahf
fdivrl
mov
lods
xor
xchg
jle
mov
std
insl
adc
ret
test
push
iret
push
cmc
and
mov
or
pusha
cmp
jae
mov
imul
add
dec
add
push
pop
std
xor
loop
jg
test
lcall
sub
and
scas
imul
add
inc
test
cmp
mov
xor
mov
pop
and
pop
int3
ljmp
popf
pushf
pushl
fcmovb
int3
js
push
push
adc
jo
mov
ljmp
clc
stc
jae
xchg
lret
imul
cmp
ror
enter
cmc
loop
bound
sub
and
jbe
ret
mov
mov
sbb
xor
sbb
into
xlat
fwait
cli
clc
in
rorl
push
js
lahf
fcmovb
nop
gs
sub
sub
aaa
je
sbb
mov
aam
ja
mov
mov
dec
jecxz
push
xchg
push
loope
aaa
jnp
xorb
pushf
jmp
mov
jge
in
lock
and
xor
paddsb
sbb
mov
mov
xor
testb
imul
add
cmp
in
mov
sahf
pop
pop
xchg
inc
pop
rorl
outsb
sub
cwtl
notb
sbb
icebp
and
dec
or
xchg
fwait
loop
or
mov
pop
daa
arpl
dec
mov
int3
mov
fldl2t
cmp
xor
pop
mov
mov
cmp
xchg
in
sub
xorl
cmpsb
popa
cmp
stos
push
xor
push
mov
cmp
je
lret
sti
mov
cs
lret
movsl
rcrb
inc
test
aam
nop
mov
push
decl
or
in
mov
insb
mov
es
mov
rclb
cwtl
xchg
xchg
pop
mov
cmp
xor
cwtl
xor
adc
sub
add
mov
int3
jo
jmp
mov
xchg
insl
inc
sub
out
jnp
clc
lods
sub
mov
aas
lds
cltd
pusha
add
pop
out
jg
xor
rorl
mov
jmp
or
jmp
sbb
cmp
mov
push
mov
outsl
fmulp
push
test
aaa
loope
mov
je
mov
movsl
shrb
cltd
xor
sbb
clc
aad
outsl
add
movsl
cmp
mov
sub
mov
mov
int3
fsubrl
test
lcall
cwtl
mov
mov
lahf
push
add
clc
and
or
leave
push
bnd
mov
pop
jb
loopne
inc
mov
xor
xor
cmc
pop
jg
popa
test
in
push
pop
pop
mov
fiaddl
lret
xchg
in
mov
pop
jecxz
in
cwtl
arpl
or
cld
lock
jo
sbb
xor
jns
test
dec
sbb
inc
aad
cld
push
dec
xor
push
scas
xchg
inc
stos
xor
mov
mov
pop
push
and
mov
jb
and
jl
jge
add
or
mov
xchg
dec
sub
std
pop
bound
pcmpgtd
insl
inc
bound
pop
call
iret
inc
dec
cltd
mov
lods
das
mov
bound
sarl
lret
pop
test
pusha
mov
or
pusha
daa
add
sbb
imul
sbb
mov
enter
fwait
mov
cld
sub
inc
shll
out
xchg
xchg
into
xor
icebp
lcall
and
mov
call
int3
mov
pusha
or
out
sub
inc
dec
lods
cmp
fsubs
and
test
sub
mov
mov
in
cmp
mov
xor
pop
add
sub
and
jmp
mov
insb
mov
pop
pop
mov
pop
clc
xchg
push
jo
pop
pop
fadd
lret
js
pop
mov
sub
sbb
push
enter
add
in
mov
cmpsb
popa
sub
mov
xchg
and
inc
push
hlt
xchg
jb
mov
and
in
cmp
dec
mov
jge
xchg
xor
mov
nop
outsb
mov
inc
fwait
pop
mov
ret
cmp
jo
xlat
jo
push
scas
add
in
pop
adcl
jecxz
push
stos
test
sbb
fwait
and
fimull
popa
sbb
movsb
mov
and
xchg
sub
mov
pop
cs
cmpsb
lahf
addl
notb
icebp
dec
mov
mov
fldenv
incb
in
fistps
ja
dec
aaa
cs
xchg
testl
push
cmpsl
arpl
pop
cld
inc
stos
out
or
jp
cmp
aad
xchg
aam
xchg
test
xor
push
movsb
sub
mov
dec
aam
inc
out
sarl
push
mov
push
jge
fmull
xchg
pop
pop
push
repnz
jbe
add
xchg
stc
or
hlt
fnstsw
cmpsl
mov
sahf
punpckldq
adc
loop
or
sbbb
mov
jo
in
push
das
push
or
addr16
pop
das
lret
sbb
scas
add
ja
sete
orl
xchg
jne
or
inc
dec
push
mov
xor
cltd
iret
pop
xchg
lcall
add
mov
jge
mov
sub
add
aaa
lods
pusha
mov
lret
es
call
or
idiv
xchg
jo
scas
xor
mov
je
lret
or
xor
insb
cwtl
mov
imul
dec
lcall
dec
sti
inc
push
lds
out
fs
xor
xchg
cmpsb
fchs
jb
push
fisubrl
mov
pushf
and
int
ret
push
scas
scas
repnz
mov
test
sub
stos
cmp
sbb
lods
pop
lods
sub
inc
or
mov
aad
sub
xchg
push
sbbb
mov
xorb
mov
iret
mov
sbb
jp
add
inc
pop
das
add
mov
sbb
adc
pop
jo
jge
xchg
std
sti
shl
stos
jp
aaa
mov
or
lcall
sbb
cmc
shlb
sbb
fcmovne
popa
sbb
pop
inc
mov
ja
clc
push
in
lods
je
stc
mov
repz
push
sbb
or
xchg
sarl
push
sub
ja
ror
arpl
xor
fistl
cmp
leave
lret
lods
mov
and
push
pop
into
pop
daa
lock
xchg
or
pushf
pop
nop
jg
mov
add
sub
jne
iret
lret
jne
sbb
addr16
and
mov
lods
loope
fsubl
or
cltd
testl
les
stc
je
dec
dec
fs
mov
jl
sahf
mov
xlat
inc
inc
xor
mov
inc
jp
inc
or
fldcw
sbb
and
add
cmpsb
enter
cld
daa
mov
add
stos
inc
pop
push
inc
dec
icebp
cmpsl
fnstenv
mov
sbb
das
push
pop
rcr
dec
fcoml
jp
std
shll
test
les
push
sbb
adcl
pop
jp
daa
insb
sbb
inc
pop
mov
leave
mov
gs
mov
mov
xchg
add
test
lret
push
jbe
in
cmp
loope
push
movsb
fnstenv
out
mov
sub
js
cmc
sub
mov
xor
lahf
cmp
aad
mov
or
mov
push
inc
xor
sub
iret
mov
daa
add
repz
lret
mov
mov
adc
and
cli
ret
inc
cmp
xchg
mov
in
push
jge
movsb
mov
nop
cmp
aas
xor
leave
in
cmp
and
inc
dec
xchg
les
test
push
je
ret
fnsave
jl
xchg
inc
pop
mov
sub
cld
xor
jge
xchg
pop
jo
xchg
das
and
shll
test
jle
or
jb
jb
push
jno
mov
cmp
imul
fs
in
pop
cmp
repnz
out
out
dec
push
mov
ljmp
and
lret
push
add
mov
repz
jne
pop
mov
dec
enter
fdivr
movsb
and
push
fisubl
mov
push
out
orb
popa
sbb
incl
jns
lds
lret
loopne
rolb
lock
lcall
mov
out
outsb
aas
in
jge
mov
in
rclb
sbb
testl
and
enter
test
mov
lret
repnz
jp
call
mov
lods
mov
fistps
adc
xchg
movsl
push
popa
mov
stos
leave
push
fnclex
dec
push
mov
adc
push
incl
sbbb
pushw
cltd
lea
je
lock
mov
enter
std
xchg
arpl
and
dec
inc
jle
add
sub
test
pop
mov
push
aam
jnp
pusha
stos
adc
push
sub
enter
xor
les
je
sub
pop
add
clc
out
out
pop
xor
jle
mov
adc
loopne
cmp
fcoml
repz
dec
scas
add
mov
add
mov
lea
flds
xor
sarl
rcrl
push
jb
sbb
cmp
fdivr
out
dec
idiv
out
mov
mov
dec
stos
and
cmc
dec
test
out
faddp
xchg
sub
lods
ror
out
xor
mov
pushf
lods
push
sub
lods
fadd
repz
mov
cmpsb
rcl
pop
in
fidivrs
loop
push
inc
int
cmpsb
xor
aaa
pop
sub
mov
ljmp
push
data16
cmp
pop
test
je
sub
push
mov
mul
jno
push
mov
mov
xchg
sbb
jmp
cmp
xor
push
fwait
cmp
mov
xchg
lret
test
or
fildl
and
js
dec
add
mov
icebp
xor
mov
mov
dec
lcall
mov
into
in
cltd
ret
cld
cmpsl
xchg
adc
push
out
es
push
add
push
add
mov
add
push
mov
pop
xlat
cltd
cmpsb
cltd
mov
and
popf
arpl
push
xor
pop
mov
inc
cmp
pop
xor
mov
inc
dec
in
sbb
mov
dec
nop
ret
xchg
mov
sti
push
aad
mov
sub
lea
push
or
scas
mov
bound
icebp
mov
mov
xlat
push
add
dec
cmpsb
inc
add
fistl
jne
ret
pop
and
push
pop
jb
push
dec
bound
js
inc
xchg
cld
pop
jnp
ss
sub
addr16
pop
je
sbb
push
es
popa
int
iret
ljmp
insl
mov
mov
ljmp
xchg
xchg
test
cmp
daa
lcall
cld
mov
mov
cmp
or
jp
sbb
dec
out
leave
mov
rcrb
imul
nop
nop
out
jnp
push
std
popa
xchg
adcl
xlat
inc
daa
or
cli
hlt
jns
sti
lahf
dec
loope
divb
and
stc
xchg
gs
movsb
xor
jle
andb
cmp
test
push
mov
mov
cmp
fsubrs
push
jb
out
adc
imul
and
ss
push
mov
daa
das
shlb
es
push
cwtl
dec
cwtl
jae
int
aad
ds
mov
push
and
fs
shl
hlt
je
popf
or
sbb
movsl
lret
or
inc
lret
push
push
and
jecxz
jecxz
insl
and
aaa
aam
into
and
inc
int
mov
out
repnz
clc
mov
mov
aaa
or
or
push
enter
das
in
int
push
fbstp
cmp
xor
xlat
push
cwtl
dec
sbb
aaa
xor
sbb
cld
jnp
mov
lret
sbb
and
fildl
add
in
mov
in
inc
loope
int3
inc
rcrb
xlat
addl
mov
loopne
push
xorb
lock
mov
out
jecxz
jg
push
pop
pop
in
mov
out
push
fstl
notb
add
push
dec
fs
std
and
xchg
inc
pop
jbe
jle
push
or
and
cltd
adc
jmp
lahf
mov
jb
fadds
mov
aam
mov
cwtl
popf
cmpsl
jle
cmpsb
negb
and
inc
cld
loopne
sub
sub
jmp
push
cltd
cltd
aam
xchg
sbb
cmpsl
loopne
imul
cmpsl
push
sbb
test
loopne
mov
mov
mov
ds
insl
adc
inc
int
rcrl
lods
iret
movsb
daa
xor
and
das
cli
jl
push
jo
and
mov
je
mov
and
hlt
mov
cmp
int3
pop
jecxz
jbe
lds
lods
jnp
in
aam
cld
leave
lea
mov
mov
fldenv
xor
jg
lock
xchg
and
cmp
xchg
outsb
stos
sub
inc
push
test
inc
lahf
cmpsb
xchg
repz
ljmp
cmp
repnz
cmp
cli
and
or
outsb
pusha
dec
mov
fnsave
ret
mov
cmpsb
sbb
add
and
sub
outsb
loop
add
cs
pop
movsl
jmp
dec
inc
shl
or
jp
inc
movsl
jne
decl
mov
loope
cmp
daa
push
repnz
cmpsb
pushf
data16
mov
and
pop
leave
in
dec
inc
xchg
test
rclb
filds
pop
test
xchg
push
mov
lret
lcall
movl
pop
int3
cmp
int3
divl
ds
mov
lock
mov
adc
inc
mov
leave
mov
or
xor
push
sub
fbld
rcr
lret
mov
jne
jl
xchg
repz
mov
xchg
loopne
sbb
nop
inc
add
mov
sti
inc
add
mov
int
push
shlb
adc
mov
repz
inc
xor
push
inc
ljmp
cmp
sbb
jne
jae
push
pushl
xor
scas
repnz
out
inc
mov
jle
repz
sbb
push
mov
mov
cmp
add
sub
xor
test
ret
or
cmp
mov
sbb
orl
mov
rorb
adcl
mov
enter
xorl
sahf
push
lock
jmp
mov
sub
ljmp
scas
sub
negb
stc
adc
mov
mov
outsb
je
movsl
or
test
shlb
xlat
xor
mov
rcrb
jnp
xor
and
je
lds
jns
mov
sub
sti
push
sub
mov
es
pop
addr16
inc
repz
mov
fldenv
movsl
repnz
xchg
push
clc
pop
push
lahf
or
mov
out
lds
xchg
fisubrs
stos
loopne
andl
outsl
mov
sbb
stc
jmp
add
cmp
mov
ret
cmpsl
clc
jne
in
ret
test
iret
iret
test
adc
cmp
lret
pop
lcall
push
dec
mov
xchg
mov
repz
insl
and
into
icebp
inc
jno
mov
pop
mov
xchg
mov
mov
push
or
outsl
adc
in
inc
add
pop
dec
mov
testb
fmull
fimull
rolb
mov
sub
jecxz
sub
fimull
je
or
push
dec
fsubs
outsb
stos
loopne
sahf
and
cwtl
sbb
fbstp
sbb
popf
inc
dec
in
aaa
daa
fadd
and
pop
nop
dec
mov
add
mov
test
ret
and
cmpsl
push
push
pop
mov
andps
and
gs
xor
push
xor
xchg
jo
cld
mov
add
push
aas
aas
mov
call
insl
repz
xchg
dec
and
jecxz
int3
cmp
lods
mov
and
mov
sahf
cmp
jge
add
ss
mov
stos
sub
push
sub
pop
sub
imull
lds
lods
push
fcompl
sub
cmp
or
xchg
push
xor
push
addr16
mov
mov
sti
dec
push
loopne
and
or
sub
mov
jge
cmp
push
jmp
iret
scas
xchg
nop
fdivrl
test
mov
mov
xlat
shlb
shll
xlat
xchg
push
movsl
jecxz
and
mov
lods
jmp
or
sub
and
add
fs
push
ljmp
or
fildll
jae
loope
sub
stos
pop
pop
ja
jno
pop
pop
mov
push
pop
sbb
adc
leave
push
push
aad
and
sub
hlt
cmp
cmpsb
lea
addr16
icebp
fwait
jo
mov
mov
negl
insb
cmp
or
in
push
sbb
cmc
aaa
jb
mov
xor
in
or
pop
and
inc
push
int
push
adc
pop
bound
inc
aas
sarb
jmp
mov
out
xchg
mov
hlt
sub
jno
pop
ds
pop
xchg
push
push
lods
push
push
sahf
pop
push
lret
pop
js
lcall
popa
fstl
test
fsubr
dec
xchg
xor
arpl
int
psubq
pusha
and
pop
xorb
inc
inc
and
jp
jns
cwtl
cld
cmp
xchg
divl
stos
mov
or
add
stc
jnp,pt
add
mov
bound
push
movsl
pop
and
sahf
mov
pop
aam
or
stos
add
sub
out
std
and
and
cli
dec
bound
fildl
ret
dec
jecxz
aad
fimull
sbb
pop
and
iret
add
add
push
push
mov
ss
sbb
loopne
push
icebp
ss
call
xchg
cmpsl
dec
cli
xor
jmp
pop
add
ficompl
jg
jge
test
cli
andb
mov
sbb
cmp
mov
sahf
push
add
inc
push
pushf
icebp
nop
movsl
mov
lods
enter
sbb
ret
out
aaa
sub
cld
clc
lods
inc
fdivrl
int3
push
es
leave
les
scas
bound
rcrl
test
in
movsl
sarb
call
outsl
pop
mov
cmpsl
pop
ret
aad
sub
cmpb
mov
loop
ds
sbb
sbb
add
add
mov
test
test
iret
xchg
mov
pop
dec
out
sbb
mov
push
mov
inc
popf
jp
jle
and
push
stos
adc
cmp
push
ss
sub
lret
out
adc
pop
lods
mov
adc
jle
sbb
xor
mov
cmpsb
jns
mov
cmp
add
lods
pop
fwait
adc
and
push
add
push
lret
mov
loop
in
cwtl
loop
fs
pop
jnp
pop
aad
mov
mov
push
repnz
mov
fmul
dec
cmp
in
mov
or
dec
pop
mov
inc
sahf
xor
jne
lods
jle
mov
and
adc
jle
stos
outsb
xchg
lock
ss
into
dec
inc
and
scas
push
xor
inc
out
xchg
xchg
sahf
movsb
cmp
out
es
xchg
add
aaa
sub
jne
orb
into
cmp
inc
cmc
and
in
jno
out
mov
push
aad
mov
cwtl
or
fdiv
cli
mov
add
iret
mov
ja
jge
int
pop
testl
adc
push
arpl
lea
sbb
lahf
ljmp
hlt
in
addr16
ss
out
fsubl
scas
inc
mov
cmp
or
test
imul
les
push
adc
jp
mov
sbb
shr
add
out
mov
imul
xchg
imulb
push
cmpsb
std
es
xor
sbb
jg
sbb
adcb
lret
push
xchg
push
inc
pop
dec
fbld
test
cmpsb
xchg
lods
sti
imul
pop
and
sbb
fmuls
cltd
push
arpl
lret
sub
and
mov
and
add
xchg
xor
cmp
jb
cmc
cmp
inc
push
addl
cmc
xor
ss
pop
jmp
aam
pop
and
mov
jo
pop
movsb
inc
fcmove
mov
sbb
mov
inc
ficoms
jbe
dec
jge
and
test
mov
scas
lcall
popf
cmc
scas
icebp
jo
sarb
mov
and
pop
adc
cmp
pushf
incl
adc
in
hlt
pop
loopne
adc
repz
adc
int
loopne
fdivs
sbb
iret
popa
xchg
ds
cmp
mov
or
push
cmpb
xor
mov
cmpsb
push
and
pop
outsl
testl
popa
cwtl
insb
push
dec
adc
lea
gs
outsl
popa
pop
jo
divl
pop
ds
xchg
push
lods
sbb
mov
jae
lods
pushf
inc
pop
rorl
fs
xor
inc
js
outsb
mov
loopne
dec
ret
xchg
jl
outsb
outsl
inc
mov
shll
idivb
mov
push
mov
pop
sbb
mov
repnz
aad
xchg
mov
mov
out
lahf
jecxz
cmc
cmp
cmp
xchg
sub
call
xchg
daa
out
shlb
loop
push
inc
jne
scas
dec
test
rol
xchg
ja
cmp
mov
pushf
mov
jae
scas
jno
xchg
insb
push
shlb
arpl
xor
out
insl
dec
jmp
push
leave
sahf
out
adc
mov
cmp
jge
sub
js
inc
mov
bt
push
sub
shl
inc
xor
pop
sub
int
jnp
popf
sbb
adc
sub
out
test
jmp
mov
pop
adc
xor
xchg
ss
sbb
subl
out
js
lock
scas
inc
xor
popf
cmp
test
sub
sahf
clc
mov
sti
inc
lock
jae
out
xlat
test
cmp
pushf
inc
fs
fadd
xor
scas
push
lcall
lock
outsl
mov
lcall
stc
mov
bnd
and
stc
ficomps
cmp
inc
push
dec
inc
mov
out
jbe
adc
xchg
mov
sub
fisttpll
icebp
xchg
add
mov
sub
popl
vmread
rcll
std
fcoml
scas
mov
push
in
sub
sub
and
push
shlb
jle
test
int3
out
pop
out
scas
push
shlb
sub
mov
push
lretw
cmpsb
push
rcrl
shll
rcrb
xor
fcomps
push
lods
cmpsb
pop
out
mov
lret
mov
jg
dec
cmpsb
xchg
aaa
jge
jnp
sub
cmp
inc
add
mov
push
ja
sub
ljmp
sub
nop
cwtl
jle
inc
pop
aam
cmp
scas
aam
cmc
sbb
xchg
fcoms
fistl
ret
mov
ret
mov
xor
bound
xor
dec
push
sbb
and
loopne
xlat
pop
pop
ds
fsubrs
adc
std
stc
sbb
sub
das
add
scas
adc
push
js
rcrb
mov
aad
pop
mov
movsl
ss
test
sub
mov
push
push
mov
shll
cmpsb
cs
notb
add
dec
cmp
sub
mov
dec
pop
xchg
bound
icebp
cltd
push
push
int3
adc
mov
sub
cwtl
arpl
sbbl
add
push
loope
and
int3
push
div
insl
fs
clc
aas
inc
cmpsb
cmpsb
adc
leave
and
cld
pusha
popf
fldl
sub
xchg
xor
add
pop
inc
out
inc
popl
pusha
xchg
loopne
push
cmp
lret
es
push
fldt
fsubs
pop
push
addr16
sbb
sbb
mov
inc
xchg
imul
cmp
lods
call
orl
mov
jmp
sbb
cmp
psubb
lea
mov
add
call
int3
into
mov
mov
pop
daa
cs
clc
add
es
adc
mov
subb
push
test
das
xor
jmp
int3
push
lret
push
repnz
out
jp
sbb
push
inc
mov
push
xor
addr16
lds
add
pusha
ficoml
cwtl
lods
lahf
pusha
pushf
mov
mov
xchg
mov
xchg
xlat
jb
sti
out
out
add
pop
outsb
pop
and
rcr
dec
sbb
sahf
into
mov
mov
sbb
push
in
loop
mov
je
add
jo
sbb
popf
scas
xchg
and
and
fdivl
imul
cmpsb
cmpsl
dec
or
push
push
rcrl
or
push
mov
js
sbb
push
shl
outsb
cmp
into
call
push
iret
shlb
pop
add
addr16
sub
ret
loope
test
aas
fadds
push
call
or
xor
test
xchg
movsl
and
cmpsl
or
push
outsl
add
addr16
lcall
inc
ja
add
add
out
push
loop
xchg
cli
test
lret
sti
add
cld
jmp
out
mov
jno
stc
dec
pop
xlat
jae
clc
jnp
push
ret
popa
dec
jecxz
xlat
jge
xor
fldlg2
lock
add
mov
jb,pt
and
int3
aas
out
mov
jnp
js
dec
or
shll
dec
in
data16
ss
je
inc
cmp
andb
dec
ret
divb
pop
mov
jle
out
scas
cs
lahf
sahf
fs
cmp
mov
pop
and
nop
addl
rolb
sbb
js
sub
push
lahf
mov
in
and
mov
inc
imul
mov
push
faddl
xchg
sbb
xchg
loopne
mov
add
gs
clc
xor
lret
push
mov
mov
dec
insb
add
out
into
stos
pop
add
jp
cld
addb
sahf
dec
data16
popa
out
inc
cwtl
sub
subl
pop
cmc
sbb
cld
imul
mov
loopne
mov
testl
out
dec
daa
in
pop
jae
lds
ja
jge
cmc
lahf
xchg
mov
popa
sbb
pop
jne
cmovbe
or
and
dec
mov
xor
adcb
aas
outsb
fcmovb
inc
pusha
test
fisttpl
sahf
and
enter
xchg
bound
add
cmp
pop
push
jno
imul
push
into
sbb
and
mov
es
jle
push
cmp
and
mov
shll
testb
popf
fistpll
sub
negb
aam
cmp
setbe
fiadds
stos
mov
dec
xor
clc
mov
xlat
push
or
and
in
dec
inc
cmp
sub
inc
inc
cli
fwait
movl
jmp
xchg
push
inc
or
sub
rclb
pusha
mov
add
mov
inc
movsb
arpl
xchg
xchg
sbb
jnp
sti
shlb
lahf
fs
inc
push
jno
shll
push
jb
mov
adc
cld
and
sarb
or
push
inc
fwait
mov
stos
mov
jae
into
cmp
aad
rcl
sbb
xor
stc
adc
outsb
fwait
sub
push
push
jnp
add
adc
cmp
out
enter
mov
mov
and
xor
repnz
hlt
pop
xor
popf
subb
repnz
mov
out
es
xlat
aas
lcall
insl
sbb
dec
cmp
rolb
xor
jle
and
in
mov
shr
mov
or
inc
jmp
mov
mov
orb
jle
aam
mov
aaa
jge
pop
sbb
mov
hlt
orb
inc
cmc
out
sub
jge
mov
test
xor
pop
enter
icebp
cmc
out
stos
mov
mov
jns
rclb
sti
outsl
scas
insl
insb
int
hlt
icebp
fldcw
out
xor
fdivr
cmp
inc
lcall
add
fimull
lret
inc
cltd
xchg
push
daa
js
jge
fs
repz
or
dec
xchg
pop
adc
add
pop
scas
shl
and
fdivr
hlt
icebp
xchg
jae
fwait
jo
push
in
sbb
fs
insb
jne
pop
xlat
dec
les
loop
cltd
sbb
and
not
pop
xor
les
lahf
jae
jg
test
cmp
mov
push
push
ret
jo
or
popa
hlt
add
sub
lods
movsb
ret
jno
popf
mov
ds
inc
mov
jge
adc
sbb
pop
and
push
jecxz
jbe
sub
lahf
das
push
or
inc
das
aad
idivl
ds
xor
loope
fwait
push
int
sti
loop
or
dec
mov
xor
xor
std
movb
ja
inc
mov
enter
add
cmc
iret
jp
push
lock
push
push
pop
push
cld
and
cwtl
or
aas
mov
mov
inc
aam
shll
mov
sbb
rorl
inc
out
hlt
mov
test
dec
out
dec
nop
out
mov
sbb
dec
idivl
nop
dec
dec
js
mov
jmp
cmp
sbb
inc
loopne
add
cmp
rcr
jmp
xor
subb
adc
sarb
and
mov
add
movb
xor
and
stos
and
in
ret
push
mov
ret
fmul
mov
stos
addr16
mov
flds
adc
int
call
aas
cmp
add
aas
xchg
mov
mov
stc
push
adc
imul
call
jge
scas
adc
fwait
pop
maskmovq
divl
sub
mov
movsb
push
inc
stos
xchg
fists
and
pop
inc
rcrl
out
fcompl
jl
les
or
pop
pop
xor
es
push
inc
xchg
push
cmp
jb
jle
adc
pop
fnsave
dec
das
fdivl
lods
pop
subl
mov
dec
ja
iret
jno
or
movsl
mov
xchg
xchg
pop
in
movsl
and
push
add
sbb
mov
les
sti
and
sbb
outsb
scas
iret
mov
repz
das
sarl
mov
mov
loopne
insb
insb
push
popf
sbb
jo
cmp
and
sub
cmp
adc
cmpsb
sub
fcomps
ja
lds
insl
fisubrl
call
scas
ja
pop
insl
adc
xchg
stos
enter
out
mov
dec
adc
shlb
loope
dec
pusha
cld
fistpll
dec
ds
cld
dec
aam
inc
loop
lret
es
ret
or
das
dec
mov
pop
cli
xchg
out
cmp
scas
sbb
fdivrs
xchg
xchg
and
repz
xor
push
mov
loopne
nop
and
rorb
mov
or
gs
xorb
sub
repz
loop
mov
lret
fisttpll
lahf
clc
popf
mov
out
cltd
aad
cmc
imul
jb
mov
stos
stc
fidivrl
fdivr
adc
adc
xchg
push
push
sbb
mov
nop
sahf
pop
movsl
cmpsb
inc
xlat
push
test
arpl
fstp
and
or
push
dec
call
sub
repnz
insl
push
fldl
mov
fisttpll
fs
lret
mov
push
jnp
mov
out
cmc
inc
out
xor
jge
push
jle
out
sbb
ljmp
push
adc
adc
iret
add
dec
mov
xorb
fs
scas
rcl
push
imul
mov
pop
push
popf
andb
sbb
inc
mov
stos
jns
stc
shlb
enter
cmp
lock
mov
imul
dec
aas
insl
mov
fisttpl
in
push
fnstcw
dec
xchg
jne,pt
and
pop
mov
push
adc
pushf
and
popf
aam
gs
or
adc
nop
movsb
fs
imul
movsb
lock
or
ljmp
js
daa
mov
pushf
lret
jo
add
lds
dec
dec
mov
and
xchg
cli
pop
cmp
popa
lcall
testl
xchg
pop
outsl
pop
lds
push
adc
xlat
sub
jae
imul
jmp
adc
call
pushf
pushf
fwait
cmpsl
js
cmpb
loope
or
xchg
es
push
pushl
sbb
fimull
int3
mov
movsb
pushf
test
pop
cs
dec
or
data16
mov
imul
adc
fcoml
popa
scas
stos
jmp
clc
mov
and
and
push
pop
mov
pop
mov
mov
push
pusha
xor
mov
inc
cs
xchg
mov
adc
imul
std
fwait
nopl
jo
bound
fwait
stos
cmp
pop
sub
pop
divl
test
push
mov
mov
sti
icebp
xchg
sub
outsl
pop
dec
xor
adc
pushl
lea
in
sub
add
xor
lretw
mov
fdiv
push
lds
jmp
pop
outsb
push
jns
push
pop
in
xlat
mov
jp
and
dec
and
mov
push
iret
and
outsl
cltd
into
out
cmp
xchg
ja
and
jmp
pop
cwtl
jecxz
ljmp
jno
mov
sbb
sub
into
sbbb
pop
xchg
mov
jecxz
adc
add
loope
cmp
jno
dec
icebp
and
xor
popa
lods
adc
xchg
cld
mov
pop
movb
popa
in
xchg
adc
or
sub
loope
jb
xchg
stos
dec
mov
push
bound
int
cwtl
ljmp
push
test
lock
push
mov
outsl
out
das
jbe
loop
aam
pop
adc
lods
and
xor
imul
push
jno
xchg
pop
lds
in
xchg
xor
cmp
cmp
jae
lock
mov
mov
dec
mov
mov
jecxz
sub
and
push
jle
sub
aas
sbb
push
dec
and
test
adc
xchg
data16
subb
xchg
xor
inc
or
shlb
lret
and
lea
fdivr
xor
inc
push
sbbb
and
push
adcl
repnz
outsb
jbe
lret
pushf
xor
scas
jmp
inc
aaa
or
xchg
dec
sbb
rolb
inc
mov
cmpl
mov
fstps
popa
pop
fiaddl
rcll
mov
vpsubw
jg
cmpsl
sbb
out
cld
xor
jl
loope
jno
shr
mov
mov
bound
in
and
lret
mov
inc
xchg
iret
mov
lods
scas
lock
cmpl
aam
mov
jl
jne
cmp
xlat
popa
fdivrs
pop
sti
cmc
call
adc
hlt
rcrb
icebp
jmp
push
pop
jg
push
outsl
pop
mov
nop
xlat
imul
add
dec
inc
sub
lret
add
adc
stos
js
jmp
lods
rcr
movsb
pusha
sub
mov
cmp
inc
pop
jecxz
and
fwait
inc
addr16
adc
rorl
xor
out
jp
je
es
and
add
mov
cwtl
stc
or
aad
mov
push
jecxz
icebp
xchg
sti
push
inc
dec
push
xchg
xchg
out
fnstcw
xchg
sbb
lods
fwait
aam
dec
xchg
mov
mov
cmpsb
stos
push
mov
into
fs
sub
ret
rcrl
ljmp
mov
mov
test
in
hlt
jne
imul
andb
jns
mov
jge
push
repz
xor
outsb
fisttpll
repz
mov
mov
daa
xor
cmc
sahf
ljmp
mov
push
int
jl
jbe
mov
nop
pushf
clc
cmp
std
sbb
sub
sbb
and
adc
fldln2
xor
int
and
push
pop
add
inc
loope
xchg
test
xchg
je
scas
xor
popa
jnp
cmpb
cltd
shlb
cmp
lea
xor
movsb
in
out
push
hlt
les
test
fsubr
jo
add
dec
push
mov
add
lea
or
add
push
mov
rcrb
inc
inc
push
lods
cmc
roll
lea
sbb
in
loopne
das
xchg
outsl
add
xor
xchg
movsb
mov
mov
mov
dec
mov
arpl
push
mov
cld
and
seto
pop
loop
pop
outsb
xchg
shll
mov
sbb
dec
outsl
stc
xchg
sbbl
lds
add
dec
loop
leave
add
pushf
mov
inc
neg
fldl2e
jbe
rcr
pushf
cld
push
in
insl
sbb
int3
jo
imul
pop
aas
loopne
fstpt
and
xor
add
jle
add
add
mov
xor
mov
fmuls
insb
cmp
pop
push
xchg
push
pushf
pop
lret
cli
mov
lret
pop
movsl
xchg
out
sub
sub
in
es
mov
dec
mov
mov
dec
mov
push
or
mov
stos
callw
dec
mov
pop
pop
imulb
les
nop
xchg
ror
aad
ja
std
or
sub
cmp
movsb
pop
scas
jno
push
les
and
xor
mov
xchg
int
xor
std
lahf
push
ja
stos
pop
sbb
out
fimuls
les
rol
push
inc
or
addb
movsl
andl
dec
test
push
fst
pop
clc
je
nop
test
ret
xor
add
hlt
cmp
mov
popa
mov
jae
mov
aas
loopne
addb
inc
imull
stos
aam
repz
test
mov
aam
sub
movsl
dec
xor
inc
outsl
fimull
xor
orb
add
push
shr
cld
divb
fidivrs
xchg
loop
cli
mov
fsubs
jge
jae
outsl
into
pop
rcll
insl
loopne
add
xor
fs
stos
es
pop
push
out
pop
pop
dec
mov
lahf
add
orl
hlt
lret
push
imul
inc
orl
cmp
repnz
push
fists
xlat
popf
push
sub
cli
je
add
aas
cmp
adc
inc
das
int3
pop
xchg
mov
jns
sub
push
insb
shrb
fsubl
pop
out
clc
das
mov
push
sbb
shr
sbb
lret
int3
mov
lds
mov
sbb
aam
adc
ja
scas
sbb
movsl
lea
out
int3
mov
hlt
outsb
rorw
jp
cmp
adc
xor
xchg
jle
daa
xor
or
out
adc
mov
movsb
xchg
inc
jo
sbb
test
or
jbe
andb
bound
or
ss
adc
cltd
cs
mull
ret
jle
jecxz
frstpm(287
lea
lret
dec
pop
adc
rol
mov
aad
stc
daa
pushf
cli
dec
cwtl
dec
jg
adc
mov
dec
aam
jle
xor
jp
pusha
insb
lods
ret
fs
idivl
adc
cmpsb
sub
shll
dec
pop
add
popf
cmp
sub
test
scas
dec
add
mov
jecxz
fldcw
dec
aad
adc
fcompl
mov
enter
and
gs
mov
sti
outsl
push
icebp
xchg
test
adc
cmpsb
cmp
sbb
sbbb
imul
aad
xor
pop
push
lds
loop
jecxz
xchg
dec
leave
mov
push
in
aam
push
addr16
daa
mov
mov
rorb
aaa
insb
sbb
mov
or
mov
inc
js
pop
movsl
pop
push
aad
jl
jmp
xor
movsb
mov
cmp
push
cmpsb
push
clc
sub
push
pop
outsb
lret
popa
jo
sub
mov
adc
popa
lret
test
push
or
fdivrl
repz
mov
sarl
xchg
pop
lods
jne
jne
push
xlat
movsl
sbb
insl
adc
sahf
add
or
cs
test
cltd
adc
enter
mov
inc
loope
negl
test
repnz
xor
add
push
jnp
lock
sti
ds
out
pop
mov
shlb
jle
dec
mov
icebp
outsl
or
sti
xchg
ljmp
fidivrl
addr16
jae
iret
mov
cmp
mov
mov
ss
pusha
lds
imul
jbe
icebp
in
xor
imul
in
and
pop
test
mov
add
filds
adc
mov
adc
sbb
std
cltd
xor
mov
out
sub
iret
dec
insl
mov
and
cmp
or
sub
clc
and
mov
mov
and
push
add
inc
and
xchg
ret
cmp
cwtl
xchg
adc
lods
scas
push
push
repz
add
xor
dec
movsb
dec
push
movsl
adc
cmp
pop
stos
xchg
shll
dec
push
xor
lea
push
mov
mov
add
push
adc
add
pop
rorb
adc
enter
jbe
xor
shrl
adc
fsubrp
and
aaa
fisubrl
push
or
pop
push
sub
and
push
insb
xchg
add
and
pop
push
mov
mov
inc
inc
pop
daa
lods
push
mov
rcrb
shr
bound
xor
mov
outsl
jmp
add
pop
inc
out
mov
scas
notb
dec
xlat
stos
jno
and
pop
inc
push
cmp
or
mov
push
pop
xor
pop
mov
aaa
test
mov
mov
cmp
mov
inc
dec
xor
and
mov
int
mov
out
jo
hlt
mov
aas
and
sub
cmp
inc
sbb
sbb
scas
mov
fldenv
cld
data16
lock
fs
insb
outsb
test
repz
and
pop
sub
cmp
sbb
mov
ljmp
and
sar
in
dec
data16
pop
push
and
cmp
pushf
jno
mov
pop
in
icebp
xchg
push
stos
inc
adc
mov
add
add
mov
and
and
int
mov
sbb
clc
or
cmp
cmp
mov
cwtl
icebp
xlat
add
fldenv
mov
sbb
jmp
pop
das
push
and
inc
mov
subl
inc
dec
cmp
lods
test
push
sti
sbb
cltd
xchg
inc
out
adc
nop
cld
jge
mov
mov
jl
jg
popa
jns
sahf
jmp
dec
arpl
sub
or
clc
in
fisubrl
testb
cmp
stos
dec
jmp
pop
dec
inc
fnstenv
or
cmpsl
sbb
jge
jl
mov
pop
sbb
xchg
cs
cmpsl
out
aas
cltd
push
dec
mov
jmp
aam
stc
sbb
jle
es
fisubs
xchg
add
scas
fisttpll
or
popf
jle
stos
mov
dec
bound
mov
cltd
xchg
inc
sub
mov
sahf
cld
fsubrl
dec
cmp
inc
push
inc
sbb
in
inc
scas
pop
mov
loope
xchg
jp
pop
hlt
fmull
push
add
push
clc
into
push
addr16
pusha
sahf
das
xchg
adc
inc
dec
hlt
mov
scas
cmpsb
int
sub
push
pop
test
bound
add
roll
mov
cmpsl
ljmp
fbstp
push
into
fs
dec
sbb
roll
test
fistps
lret
cs
mov
pusha
or
or
push
push
inc
pusha
pop
in
mov
adc
or
lret
jmp
pop
dec
mov
movsb
mov
testb
mov
addr16
and
into
insl
icebp
shlb
adc
out
mov
pop
dec
stc
or
xchg
mov
xchg
loopne
jmp
das
stos
xor
data16
jae
aas
xchg
and
addr16
inc
or
jo
jnp
cmpsl
mov
repnz
aad
xchg
mov
xlat
inc
and
in
jmp
sub
faddl
scas
sbb
in
add
test
pop
subb
movsb
in
iret
and
sub
jne
fisttpl
add
pushf
push
pop
cmc
pop
test
or
and
ja
mov
out
pop
mov
jbe
outsb
jge
jl
sbb
add
addl
mov
mov
pop
je
push
xor
xor
cli
jns
mov
addr16
addr16
scas
or
push
dec
repnz
jmp
add
sub
inc
dec
add
mov
xchg
cmpsb
or
add
mov
dec
adc
loope
out
or
mov
mov
mov
dec
mov
insb
ds
jns
push
loopne
ljmp
sub
xchg
add
inc
fwait
pushf
dec
jg
xchg
lea
cmc
bnd
outsb
pop
out
rcll
in
insb
test
and
cmc
push
sub
out
mov
call
pop
mov
fnstenv
mov
push
insl
jae
mov
ret
push
or
adc
push
jecxz
cli
xlat
sub
shlb
sub
xchg
sahf
out
xchg
shll
jmp
lock
sub
and
cli
test
push
fisubs
jp
call
arpl
inc
lock
lods
xchg
roll
mov
adc
rcll
or
mov
cmpsl
inc
or
cmc
cmp
addb
stc
movups
sub
test
add
pop
jecxz
mov
or
mov
repnz
mov
fninit
out
jns
xor
cli
cs
jge
inc
stos
lods
adc
mov
into
loop
out
ret
mov
daa
rep
push
sbb
and
fwait
push
mov
cpuid
xchg
loope
divl
out
dec
ljmp
and
sbbl
push
jb
dec
mov
push
cmp
inc
rclb
filds
lods
and
fistpll
dec
cmpsl
pop
jo
lods
adc
xor
lahf
sub
imul
test
inc
dec
mov
adc
xor
xor
inc
and
cmc
mov
out
xor
scas
adc
push
mov
shr
outsl
and
stc
mov
sar
mov
out
push
loopne
cmp
aas
stos
cmp
sbb
lcall
mov
xchg
jae
scas
mov
adc
mov
or
inc
inc
jp
cmp
jp
outsb
mov
dec
xchg
pop
dec
cld
insb
and
xchg
push
pop
rcrl
add
aaa
fs
pop
lds
cmp
mov
mov
dec
push
xchg
cs
pop
push
jne
and
fxtract
pop
fwait
jle
movsl
cltd
js
std
mov
xchg
pop
fxch
xchg
jbe
addr16
add
out
lea
push
inc
loopne
xchg
or
ret
rcll
mov
push
xchg
mov
icebp
cs
pushf
mov
inc
xchg
lea
push
call
repz
outsl
ret
popl
pushf
inc
xor
and
xor
ljmp
add
sub
aad
pop
inc
stc
lahf
popa
testl
jp
jae
mov
ds
xor
sub
mov
scas
repz
in
in
mov
in
push
pushf
jb
or
cmp
pop
and
sub
scas
inc
jl
inc
hlt
mov
add
movsl
test
cmpsl
stos
pop
pop
xchg
push
add
rcrl
xchg
xlat
sbb
aam
incb
xchg
jmp
sbb
or
mov
adc
or
sub
data16
pusha
daa
scas
cmpl
adc
adc
push
imul
sti
pop
addr16
push
inc
int3
xor
sub
xchg
les
mov
std
test
xchg
jecxz
pop
jmp
repnz
xchg
outsl
add
mov
and
pop
loop
hlt
xor
jb
int3
in
mov
jbe
mov
xor
stc
cmp
adc
addr16
jl
mov
in
pop
ss
dec
enter
jo
add
popa
dec
sbb
jg
out
mov
sti
mov
pop
pop
gs
aas
lods
sarl
mov
xchg
aam
sub
or
inc
aas
mov
enter
addb
mov
notl
sbb
in
push
lods
mov
mov
cmp
adc
adc
shll
scas
daa
sbb
daa
nop
sahf
sbbl
mov
mulb
add
ret
ror
aam
and
mov
idivb
push
mov
outsl
sbb
and
xchg
dec
ret
loop
xor
pop
xchg
mov
jb
dec
fsubrs
sbb
daa
mov
lcall
adc
mov
das
xor
mov
and
jne
inc
mov
or
outsb
mov
je
dec
loop
imulb
into
insb
and
cli
adc
int
popa
in
sbbl
sbb
xor
xchg
shl
cmp
and
data16
pop
xor
testb
lods
dec
and
idivb
out
jne
pop
mov
jl
cmp
fs
xchg
cwtl
ljmp
push
inc
cmp
mov
inc
sbb
mov
outsb
shrb
cmp
clc
xchg
xlat
arpl
xchg
push
popf
fmuls
out
push
shll
adc
adc
stos
lea
out
out
test
in
insb
and
leave
aad
mov
fnsave
out
add
mov
loopne
jge
mov
daa
std
aas
or
ret
mov
pop
push
jge
int
cmp
fwait
pop
add
sub
jl
leave
in
aas
nop
jae
inc
jl
in
pushf
aas
inc
cmp
and
inc
push
loopne
pop
jb
fsubrs
jecxz
ja
jmp
xor
decb
lods
inc
call
je
jbe
push
push
or
mov
mov
sahf
push
xchg
mov
outsb
outsb
lret
jle
xchg
inc
call
addl
jae
das
xchg
lods
or
adc
cmp
dec
xchg
add
mov
mov
lret
les
add
in
mov
xchg
sub
or
out
adc
mov
addr16
adc
jge
in
scas
fwait
jne
fldt
jae
movsl
ficomps
outsl
xor
fwait
cmp
or
dec
pop
push
add
mov
pop
hlt
xchg
rcr
cmp
xchg
shrl
std
dec
fisubs
dec
scas
fldt
jmp
push
mov
scas
inc
fimuls
mov
dec
hlt
xchg
hlt
addr16
das
pop
in
mov
lret
pop
cltd
or
push
mov
ret
js
push
out
pop
call
sbb
mov
outsb
mov
adc
or
loop
cmp
icebp
mov
or
fcmovnb
fs
addr16
sub
call
imul
hlt
xchg
or
scas
bound
sbb
push
push
lods
testl
es
inc
jge
inc
or
mov
fists
cmp
stos
sub
aaa
inc
pop
mov
and
cmp
daa
xor
jb
ds
aaa
add
pop
popa
dec
pop
stos
imul
dec
mov
mov
pop
xor
fisubrl
lahf
add
or
dec
clc
mov
pop
mov
mov
xchg
jecxz
adc
call
push
or
mov
mov
mov
push
xchg
pop
add
repnz
movsb
rolb
rcr
mov
sub
or
paddsw
les
inc
pop
popa
cltd
stos
xor
orb
push
xor
mov
pop
pop
loopne
lds
add
inc
ds
sbbb
xchg
or
scas
xchg
sarl
outsl
notb
fnstsw
add
test
cmc
jo
mov
push
cld
ret
mov
mov
inc
mov
stos
jp
in
mov
sub
dec
dec
inc
test
jbe
icebp
xchg
lret
jle
les
stc
add
jp
pop
dec
pop
mov
into
mov
inc
and
inc
cmp
push
ljmp
addl
lahf
add
fsubs
shrl
cwtl
xor
stc
dec
xor
jmp
xor
nop
out
xchg
nop
or
jno
fistps
jo
enter
mov
icebp
ja
xor
and
nop
repnz
and
out
pop
pushl
imul
sbb
aam
mov
cld
xchg
rorb
in
or
jle
xchg
mov
aas
rclb
bnd
mov
cmpb
incb
gs
push
std
inc
sbb
add
pop
and
push
mov
or
enter
ss
bound
leave
push
aad
fwait
hlt
lods
enter
test
pusha
add
jg
mov
aaa
cmc
repz
adc
mov
jmp
inc
lds
push
cmp
movsl
iret
aam
stos
jp
les
mov
test
jmp
movsb
outsb
stos
popf
aaa
repz
push
pop
loopne
scas
dec
dec
push
pop
xchg
and
cld
push
push
sub
mov
daa
outsl
movl
jb
jne
scas
loope
xchg
ret
mov
in
sbb
imul
mov
mov
or
add
imul
cld
aad
cs
lahf
pop
int3
jo
repnz
lds
clc
add
bound
or
xor
dec
ficomps
rolb
push
scas
mov
xor
dec
sbb
fdivs
pop
aas
test
or
mov
mull
lods
mov
call
out
dec
pop
loopne
adc
iret
aas
inc
dec
mov
mov
ds
lods
lods
int3
jno
je
shl
add
lret
fistpll
jmp
and
cmpsl
mov
push
cmc
mov
stos
cmpsb
lret
cld
mov
cmc
jle
lds
sbb
cmp
fisttps
dec
ss
mov
ret
sarl
bound
sbb
sahf
rcr
daa
inc
mov
dec
aam
xor
das
mov
cwtl
lods
mov
mov
test
inc
cmpsl
fnstsw
jno
int
inc
add
cmp
data16
dec
aas
ret
jl
int
inc
mov
fsubrp
mov
iret
test
jmp
xchg
pop
or
std
pop
mov
jne
popf
bound
dec
xchg
nop
loope
adc
xchg
xchg
mov
push
test
into
test
xor
or
cmp
scas
xchg
scas
mov
adc
mov
ret
jecxz
das
les
sti
push
shll
xchg
in
test
in
lock
ja
aam
loope
or
adc
loop
ret
sbb
lods
pop
xchg
mov
in
imul
cmp
popf
jae
and
mov
popa
xchg
scas
es
sti
mov
push
inc
jo
test
and
filds
addr16
cmc
movsl
leave
adc
lahf
mov
out
mov
cli
ret
jne
pop
jbe
jae
ja
xchg
test
dec
push
push
cmp
ret
aam
jg
in
dec
xchg
adc
loopne
mov
add
mov
xor
fucomi
xchg
test
inc
dec
call
je
cld
cmp
jl
sbb
fstps
mov
adc
cwtl
das
xchg
test
xor
inc
adc
jmp
fdivp
or
mov
loop
sub
mov
sub
pop
andb
mov
sbb
mov
push
iret
mov
xchg
push
gs
jae
mov
outsl
xchg
imul
jae
cwtl
gs
out
adc
pop
cltd
rolb
and
insl
xchg
sysret
loop
lock
cmpsl
rclb
mov
roll
cmp
pushf
push
inc
or
inc
js
or
pusha
scas
orb
mov
loopne
inc
loop
movl
xlat
shll
cmp
dec
mov
aad
pop
add
jl
scas
sub
and
jae
dec
popf
sbb
fistpll
jae
psubq
ds
lea
xchg
pushf
xlat
dec
into
xchg
adc
mov
cli
pop
sbbl
xchg
sbb
mov
call
cld
pop
int
inc
mov
mov
mov
xchg
pop
xchg
xchg
imul
fwait
mov
sbb
into
pop
push
inc
dec
movsl
notb
test
inc
je
sbb
outsb
sbb
xchg
stos
cwtl
decl
cmp
add
push
xor
icebp
clc
sub
xchg
jp
push
xor
push
out
push
nop
cmc
lahf
dec
push
pop
inc
pop
cld
mov
fimuls
sub
and
add
fwait
outsb
xlat
andb
scas
pop
or
mov
cld
scas
in
and
cmp
pop
mov
hlt
and
loop
lret
js
sub
movsl
mov
in
pop
and
cwtl
mov
or
scas
push
cwtl
inc
cli
adc
fcmove
fcompl
pop
fs
stos
sbb
ljmp
dec
sub
lea
mov
mov
or
mov
in
mov
mov
nop
mov
loopne
mov
adcb
ja
enter
push
popa
imul
or
loope
iret
and
adc
add
lds
inc
orl
ror
sbb
push
idivb
push
imul
iret
cmp
clc
mov
dec
stos
pop
mov
leave
outsl
jo
and
sahf
ja
aad
and
sub
sub
aam
mov
pop
or
iret
cmpsl
jo
or
sarl
std
dec
addr16
sub
call
and
mov
push
jb
movsb
aas
mov
sbb
out
jle
orl
fbld
xchg
scas
lcall
jo
bound
sbb
pop
roll
scas
pusha
cmp
loope
dec
jecxz
fdivrl
lods
int3
jp
jbe
movsl
add
mov
sub
xchg
jp
es
cs
cmpb
stos
dec
sbb
pop
lahf
shlb
lods
xchg
xor
jns
inc
jecxz
jg
aam
ret
add
jge
icebp
ret
int3
pop
pop
mov
fsts
mov
lret
push
imulb
mov
jae
pop
movsl
adc
mov
jg
xchg
inc
addr16
lret
jno
mov
outsl
das
mov
or
in
jno
outsb
pop
gs
rcr
test
in
cmp
xor
inc
pusha
daa
add
cmpsl
adc
imul
mov
out
or
inc
rcll
outsb
inc
cmpsb
bound
cltd
lcall
jp
push
movsl
popf
in
fst
sub
jno
pusha
mov
cltd
xchg
jb
lods
pop
xchg
adc
or
push
add
and
cmp
mov
in
lock
mov
adc
lock
pop
pop
or
sbb
dec
ds
jae
xor
ficoml
repnz
pop
push
pop
movsb
das
jb
mov
sbb
dec
movsl
ds
xor
mov
mov
mov
cmp
iret
jecxz
mov
aaa
xorb
ffreep
jmp
cmp
nop
inc
mov
mov
xchg
outsl
sbb
or
xchg
xchg
inc
dec
js
push
cltd
popa
dec
or
pop
fcoml
xchg
fbstp
iret
xchg
insl
and
mov
adc
arpl
mov
jp
fiaddl
jmp
mov
les
sbb
fdiv
mov
sub
fucomip
xlat
insb
xchg
test
popf
inc
xchg
pushf
cmpsl
inc
and
xor
sbb
pop
dec
icebp
lahf
ja
xor
or
in
loop
cmpsb
bound
add
in
movsl
xor
xchg
test
fwait
add
or
xor
dec
sbb
jmp
and
inc
add
scas
jae
ds
push
pop
pop
aam
lahf
xlat
cli
ss
cmp
jne
dec
push
das
rcll
lods
mov
push
stos
dec
pop
cld
add
add
xchg
dec
sbb
sub
or
in
movsl
adc
sarb
add
in
push
or
popa
stos
daa
test
xor
add
inc
xor
mov
scas
popa
stc
jp
adc
out
push
cmpsl
xchg
jo
mov
icebp
test
ret
aaa
fistpll
insl
mov
or
adc
mov
cmp
insl
popa
sub
test
cmc
mov
into
imul
pop
out
add
fs
lea
stos
leave
mov
sbb
dec
cmpsb
inc
pop
jb
pop
stos
test
mov
gs
add
lock
jecxz
or
aam
jl
lret
sub
sbb
test
mov
arpl
dec
mov
cmp
cmp
hlt
cmpl
and
rolb
std
cmp
inc
int3
add
xchg
mov
xchg
jg
outsl
aam
adc
push
ds
mov
js
dec
add
jbe
mov
fdivrs
push
dec
dec
dec
xor
mov
pop
adc
and
inc
and
jle
mov
dec
cs
inc
xchg
cwtl
int3
pop
pop
or
sbb
dec
and
mulb
das
sub
repz
xorl
jno
shl
es
ss
pop
mov
arpl
xor
bound
mov
sub
xchg
mov
das
pop
bound
dec
fwait
add
bound
lahf
mov
add
push
jp
mov
das
inc
xor
lahf
push
out
xchg
adc
aad
lds
or
shlb
scas
push
add
subb
or
movsl
ds
es
into
mov
adc
out
pop
dec
lods
cmc
adc
mov
inc
sbbb
jns
inc
or
jae
insl
notb
pop
mov
adc
pop
in
jecxz
mov
cmp
push
test
popf
cld
mov
scas
pop
xchg
shrb
jmp
arpl
adc
dec
push
dec
mov
fdivs
and
sbb
xchg
mov
std
psadbw
xor
insb
jbe
ficompl
or
push
std
dec
mov
push
mov
ret
stos
sbb
cmp
mov
sub
fistpl
outsl
daa
inc
mov
nop
out
icebp
in
scas
mov
lret
js
jne
add
invd
stos
or
jbe
popf
push
mov
insb
xor
xor
inc
jl
icebp
call
aam
mov
dec
in
and
xchg
dec
test
dec
cmp
adc
aam
pusha
addr16
lea
jb
cmp
int
pushf
xchg
ljmp
fcoms
mov
push
in
or
sub
ficomps
xor
push
xchg
jbe
sub
mov
jmp
pop
mov
cmp
xor
cmpsb
fcmovne
leave
mov
scas
lret
out
pop
sti
mov
push
mov
dec
adc
cmp
push
clc
cmpsl
lods
daa
gs
fistpll
orb
pop
daa
ja
mov
cmp
or
dec
mov
daa
sbb
jns
int
or
xor
pop
or
pusha
add
pusha
add
push
lods
scas
mov
sub
std
xchg
push
cli
xor
mov
ljmp
jnp
push
popl
mov
xchg
rclb
cmp
pop
out
inc
mov
pop
inc
fdivrs
sahf
loopne
xor
mov
xchg
mov
data16
xchg
aad
loop
stos
jg
xchg
push
add
fcomp
push
xchg
sbb
out
insl
jmp
idiv
add
pop
push
ja
mov
aaa
add
push
push
sbb
out
int
scas
adcb
sti
dec
bound
fmulp
outsl
les
mov
cs
ja
push
das
xchg
inc
add
lds
push
push
mov
fldenv
cmp
mov
add
xor
loop
add
mov
cmp
out
pop
push
sar
mov
aaa
enter
xor
pusha
popa
stos
dec
cvttps2pi
adcl
dec
out
sahf
push
lret
pop
in
loop
mov
es
sub
pop
fstpt
dec
fwait
xor
xchg
xchg
js
in
cs
add
mov
dec
js
test
inc
xor
inc
ja
movsl
xor
mov
jae
lds
add
pop
cwtl
jae
fsubl
jmp
aas
mov
xchg
cs
push
cmp
pop
dec
nop
inc
shlb
or
adc
or
repz
xchg
adc
and
cs
jnp
rorl
int3
jb
out
dec
dec
clc
mov
nop
and
fld
insl
mov
adc
pop
mov
cmp
mov
sbb
dec
scas
add
dec
and
pop
pusha
inc
jl
xor
mov
shr
stos
and
cmp
mov
jb
arpl
roll
lock
dec
lea
push
repnz
mov
in
sbb
xor
mov
push
cli
xchg
push
xchg
dec
jns
popa
xor
clc
xor
xchg
mov
repz
ds
fsubrs
repz
je
cld
sub
into
rcll
es
dec
pop
mov
out
fwait
push
push
in
sub
lahf
dec
push
sbb
lcall
andl
adc
stos
jge
std
dec
imul
pop
mov
pop
fnsave
addr16
aaa
xchg
clc
in
pop
dec
decl
cmpsl
push
adc
in
gs
pop
lret
out
cwtl
cmp
dec
mov
or
jecxz
jo
frstor
lret
pop
or
inc
and
mov
sub
jg
in
fdivl
ficompl
cltd
mov
push
cmp
pop
arpl
adc
dec
std
es
leave
fs
dec
mov
and
sub
sbb
das
pop
jmp
nop
jne
and
adc
mov
jb
xlat
fisttps
sub
add
jb
xchg
xor
sub
ss
pop
clc
ljmp
xor
ja
popf
inc
stc
test
push
xor
pop
das
ret
iret
lds
push
fstps
pushf
cli
mul
hlt
pop
adc
add
es
inc
add
sub
clc
xchg
adc
mov
aaa
pop
adc
xchg
mov
movsb
in
pop
add
icebp
mov
cli
push
test
add
mov
or
in
mov
cmp
dec
sbb
sbb
sub
cmpsb
cs
std
out
lods
push
cmp
mov
and
dec
and
or
leave
push
in
xchg
or
sbb
fwait
jno
inc
popf
cmpsb
fnstcw
cmp
into
mov
data16
jl
lock
popf
cwtl
je
dec
or
dec
dec
lcall
rcll
add
popf
sti
pop
inc
out
test
jmp
xchg
push
in
or
addb
sub
enter
out
fbld
or
dec
pop
stc
pop
pop
into
cmp
enter
push
sbb
dec
ret
adcl
test
into
push
pop
into
cld
or
add
mov
push
mov
nopl
mov
push
lcall
cmovne
inc
loopne
or
jbe
dec
ljmp
mov
notb
sub
out
stos
xchg
push
repnz
xor
add
sbb
and
push
add
call
stos
in
sbb
int
orb
stc
xor
mov
sbb
inc
pop
xchg
inc
jno
stos
sbb
test
das
in
es
mov
fpatan
test
add
adc
stos
mov
out
mov
pop
dec
int
xchg
lods
xor
sub
jge
mov
cs
and
xchg
xor
or
dec
mov
enter
sbb
lods
mov
js
faddl
andl
add
cmc
add
pop
add
in
adc
inc
cs
mov
rorl
xorl
push
jecxz
sbb
mov
ja,pt
and
or
aam
dec
scas
imul
cmc
sub
push
mov
jb
lret
icebp
out
adc
test
imul
push
pusha
sbb
sub
imul
lret
or
cmp
jg
add
mov
inc
cwtl
dec
add
test
je
int
daa
xchg
inc
jmp
sub
jecxz
inc
jo
jbe
adc
movsl
cs
sbb
pop
icebp
adc
mov
inc
lods
fildll
loopne
ja
test
test
sbb
loopne
xchg
movsb
adc
dec
pushf
pop
push
push
add
divb
clc
add
sbb
shrb
mov
ja
jle
les
mov
gs
clc
xor
push
xor
lahf
mov
lea
mov
cmc
pop
pusha
mov
push
xor
cmc
mov
mov
xchg
jno
or
lahf
popf
mov
and
adc
and
aad
popa
jmp
test
and
clc
mov
lret
shl
sbb
mov
push
pushf
xor
pusha
xor
push
movl
data16
gs
jno
mov
pushf
ret
aad
xchg
or
in
imul
stos
mov
inc
xor
mov
or
scas
push
push
loopne
cmp
inc
xchg
addr16
cmp
icebp
hlt
dec
clc
xor
jne
in
cs
ss
popf
in
or
ds
hlt
outsl
popf
push
aad
cmpsl
mov
pop
in
push
push
test
mov
push
int
fbld
movsl
andl
mov
mov
cld
pop
push
lds
cwtl
stos
ss
lcall
mov
pusha
sbb
mov
cs
add
lcall
sbb
das
jmp
ljmp
mov
pop
push
adc
xorl
pop
dec
mov
inc
loopne
out
xlat
dec
mov
push
cltd
push
dec
adc
mov
mov
sbb
mov
arpl
inc
lods
leave
lods
xor
sbb
xchg
ret
mov
xor
sbb
xchg
insb
sbb
enter
push
lock
xor
push
pushf
lea
lds
sub
loopne
icebp
cld
repnz
inc
dec
inc
push
sub
mov
xchg
icebp
sub
add
sbb
test
sub
jnp
scas
stos
cmpb
cld
cmp
imul
shll
cmp
xchg
xchg
ja
add
sti
iret
mov
or
out
stc
out
cli
in
mov
sub
in
xlat
cmp
loopne
shrl
sbb
or
loopne
movsl
in
jp
add
stos
addr16
xor
shll
rolb
subb
popf
sub
pop
insl
push
mov
std
repnz
data16
or
js
in
jns
mov
bound
imul
les
mov
fmuls
roll
xor
xor
movsb
sti
lods
pop
frstor
or
mov
fisubrl
outsb
pop
imul
mov
pop
out
test
add
xchg
shl
inc
xchg
xchg
sub
stos
dec
mov
mov
push
mov
sbb
dec
fisttpll
xor
or
andb
mov
mov
ja
pop
jns
jns
shll
fistpll
mov
icebp
lock
ret
aas
movsb
movsb
xchg
or
xchg
insl
hlt
add
sbb
adc
or
jp
pop
ficoms
jno
or
add
jecxz
cmpsb
pusha
testl
leave
stc
xlat
int
and
pop
lret
daa
je
inc
mov
cmc
negl
add
push
cmpsb
gs
movsl
test
ret
int
lcall
stc
jecxz
pop
pop
das
cs
mov
sbb
adc
mov
add
push
test
in
adc
insl
xor
xor
mov
cmpsl
mov
adc
repz
js
icebp
lret
inc
repnz
sarl
pushf
sahf
inc
push
dec
mov
ret
pusha
dec
push
xor
xlat
fisubrs
cwtl
mov
into
mov
mov
popa
stos
fisttpl
mov
pop
in
scas
dec
pop
pop
pop
out
or
or
aam
mov
out
ja
xor
stos
xchg
jg
bnd
fisubs
xchg
ss
mov
dec
cmp
subb
xchg
pusha
pushf
dec
adc
les
bswap
pop
mov
xor
dec
jl
insb
test
rolb
cmpsl
lock
mov
mov
sub
stc
mov
mov
sbb
aam
inc
lock
dec
cmpb
push
sbb
inc
cmp
cmc
dec
jbe
cmpsb
xchg
out
fdivrl
loope
es
stos
cs
fdivr
push
add
loop
repnz
fs
xchg
bound
cmp
mov
or
cmpl
mov
xor
shrb
sbb
stc
inc
or
jno
dec
popa
lods
inc
sti
ss
loope
ss
shll
in
hlt
stos
push
cmp
data16
call
icebp
repnz
or
mov
icebp
xchg
push
jp
and
jb
icebp
clc
push
lds
push
push
rcll
in
lea
and
pop
or
flds
imul
xchg
out
push
pop
xor
push
scas
lock
fcmovbe
xchg
mov
push
add
cmp
push
sub
das
ja
adc
xchg
ficomps
test
mov
fwait
sbb
pusha
xchg
fisubl
dec
int3
leave
out
adc
inc
inc
test
es
jg
orb
cmp
cs
cmp
in
mov
mov
and
aas
cld
rolb
scas
push
or
mov
repnz
enter
cmpl
pop
jmp
testb
or
and
cmp
in
std
mov
pushf
cmp
fsubr
in
ret
cs
repnz
add
lret
inc
mov
dec
int
add
pop
dec
into
flds
lods
test
dec
inc
test
faddl
xor
or
mov
inc
push
dec
int3
int3
rorl
lock
sbb
fiaddl
adc
pop
addr16
pop
xlat
je
testb
pop
adc
fisubl
in
xlat
push
lods
xchg
imul
cmc
dec
mov
insl
xorl
cli
sub
lods
idiv
pop
pushf
push
sub
jecxz
cltd
cmpsb
mov
sub
sub
adc
arpl
lcall
inc
iret
mov
or
inc
sub
add
jne
sbb
inc
push
pop
lods
dec
push
push
push
mov
push
sub
aaa
add
push
and
movsb
adc
in
scas
imul
sahf
cmp
and
cld
xor
sub
test
jne
adc
pop
adc
subl
pop
rcr
testb
lods
add
mov
or
pop
sub
or
nop
push
mov
pusha
pop
adc
dec
jb
daa
mov
outsl
insl
sub
pop
call
inc
fnstcw
fistpl
ljmp
inc
push
icebp
ret
and
repz
jno
sbb
xchg
and
aas
xchg
sub
mov
cmp
jl
lods
divl
cli
push
int3
test
mov
mov
and
inc
shll
inc
lea
jl
mov
stos
push
fistps
scas
pop
test
mov
xchg
xchg
mov
xchg
cmp
dec
mov
cmp
and
xchg
pop
cwtl
test
or
jbe
movsb
lcall
jae
jg
gs
add
cwtl
stos
xchg
xchg
leave
or
or
mov
mov
mov
jne
pusha
pop
cld
jmp
inc
mov
insl
int3
mov
test
repz
jp
test
int3
xchg
xor
dec
push
aad
mov
insb
push
movnti
jo
or
push
mov
jge
and
mov
push
push
dec
stos
stos
mov
mov
cmp
push
fildl
in
mov
js
ret
pop
mov
push
insb
ja
sbb
daa
cmpsl
mov
sarb
mov
icebp
cmpsb
xchg
push
lea
bound
push
xchg
xor
mov
in
pop
loope
in
push
xor
or
and
fnstsw
or
repnz
insl
push
sub
fsubs
and
sbb
loopne
adc
inc
cwtl
push
sbb
iret
pcmpeqb
test
jo
xor
cmp
push
mov
bnd
repnz
leave
test
xchg
push
sti
jge
jmp
adc
push
adc
mov
mov
jo
jg
xchg
or
adc
lods
dec
addr16
fs
push
arpl
fcmove
adc
dec
pop
jp
xor
ret
dec
cmpsb
popf
lods
pop
dec
sbb
dec
mov
enter
loope
pop
lds
out
nop
int3
in
and
add
or
jge
jp
adc
sahf
push
sub
es
mov
jmp
pop
aaa
pusha
xor
or
lret
xchg
or
lods
inc
outsl
jnp
inc
pop
str
sbb
in
mov
jnp
dec
aam
xchg
test
sub
leave
cmp
outsb
sbb
lea
add
inc
sbb
add
enter
push
movsl
inc
pop
sbb
jle
gs
loop
or
ficomps
xor
fdivl
enter
sbb
xor
push
ficoml
pop
inc
stc
sbb
mov
cmp
adc
pop
mov
sbb
mov
or
andl
or
aas
mov
mov
mov
xor
int
ja
neg
andl
push
scas
xchg
mov
xor
out
xchg
xchg
or
xchg
neg
cmp
sub
subb
push
cld
jne
jo
cmpsb
push
jp
int3
and
xchg
xchg
cwtl
add
fidivrs
mov
inc
movsl
dec
in
pop
push
inc
jb
xchg
xlat
into
mov
gs
ret
mov
pop
cmpsl
xchg
negl
insb
gs
cmpsb
mov
xor
gs
les
xchg
push
inc
repnz
sub
popa
add
les
xchg
jb
xchg
inc
imul
xchg
sbb
or
adc
imul
dec
aad
mov
daa
jns
imul
and
pop
or
in
dec
sbb
in
sub
xchg
jmp
shrb
sub
sarb
pop
sbb
sub
pop
testl
xlat
or
sub
lcall
xchg
ja
sub
mov
sub
xor
imul
add
repnz
jecxz
xor
xor
pop
dec
mov
cmpsb
jg
rcll
data16
stos
mov
lret
inc
jge
in
push
arpl
cmp
aaa
sbbb
mov
inc
mov
mov
or
lcall
dec
das
into
mov
lahf
push
cmpsb
int3
dec
xor
scas
cltd
and
shll
int3
mov
jmp
jbe
sbb
pop
push
fstpl
insl
inc
xchg
sbb
adc
scas
hlt
pextrw
je
xchg
stc
sub
push
ja
dec
or
cs
aad
sub
decl
jg
inc
mov
jne
inc
into
pop
mov
fwait
dec
and
jnp
add
sti
lods
lret
fwait
sub
pusha
add
insb
and
test
adc
enter
das
fld1
iret
mov
xor
or
jae
add
push
data16
xchg
out
or
adc
les
bound
adc
loopne
or
pop
popa
jecxz
add
sub
pop
push
adc
pop
popf
insl
sahf
push
into
jle
mov
cmp
add
ljmp
jge
pop
mov
mov
sbbl
inc
es
fimull
add
dec
mov
je
pop
mov
push
adc
repz
filds
pop
cltd
scas
or
fwait
cmp
je
rcll
mov
arpl
jmp
int
out
lea
fcmovnbe
jno
idivl
add
xor
in
test
ja
sub
and
add
xor
inc
add
inc
out
stos
icebp
inc
popa
jge
add
ret
aad
sub
mov
int
xor
mov
inc
stos
in
mov
xor
cli
cmp
stos
rorl
fildl
andb
dec
xchg
je
adc
fisttps
or
add
push
sub
fcomps
mov
addl
pop
mov
or
lahf
cwtl
ret
loope
out
sbb
mov
adc
push
xor
push
sti
inc
mov
xchg
mov
add
mov
adc
test
sbb
mov
xor
pusha
xor
xor
iret
dec
lock
pop
pop
jle
dec
repz
test
cld
loopne
out
and
or
xchg
push
cltd
inc
and
add
mov
mov
popa
es
mov
repnz
and
lret
xchg
mov
dec
jmp
fmull
rcll
stos
xchg
jl
xchg
js
push
fcoml
push
mov
and
std
or
xor
push
inc
sub
or
add
shr
fcoms
mov
push
sti
fistps
sub
inc
stc
sarb
jne
lret
mov
dec
xchg
in
mov
sbb
pusha
aam
lods
cmp
je
enter
sbb
jmp
inc
lods
vsqrtss
inc
int
arpl
mov
imul
pop
popf
testl
test
loop
fldcw
mov
xchg
imul
jno
stos
xchg
test
inc
stos
cmp
and
adc
jmp
scas
pop
cwtl
inc
outsl
out
lcall
xchg
fsts
hlt
xorl
adc
test
ja
mull
push
mov
xchg
sbb
xchg
xchg
adc
scas
dec
jnp
inc
dec
push
std
lods
pop
loopne
jmp
out
jnp
jle
xchg
in
jo
popa
mov
mov
push
stos
stc
inc
xlat
js
out
sub
scas
ret
dec
fsubs
into
push
cmc
cmp
dec
adc
lret
cmpsb
add
scas
lret
add
push
push
mov
and
mov
ja
xchg
mov
dec
mov
fsubr
adc
fdivrl
into
cmpsl
add
xor
lahf
jp
inc
sbbl
inc
fwait
sub
mov
mov
test
sbb
sbb
cmpsb
adc
mov
and
cmp
rolb
dec
ljmp
lcall
std
and
pop
dec
mov
lock
cld
adc
mov
in
stc
adc
jp
sbb
loop
dec
into
sarb
jle
les
cmp
dec
fcos
addr16
movsw
cmc
push
iret
mov
xchg
mov
test
aas
mov
inc
mov
cmp
shrl
js
or
lock
jg
aam
sub
sbb
fidivrl
xchg
lahf
xor
loope
fnstenv
jo
jecxz
repnz
out
aaa
mov
loop
das
and
negl
inc
jge
insb
outsb
xchg
push
rclb
clc
mov
sbb
push
fs
sub
shl
pusha
pop
repz
notb
mov
frstor
add
in
jl
daa
fwait
bnd
push
cmc
push
repz
repnz
sti
sahf
pop
loop
icebp
subl
push
jp
jle
xchg
testl
sub
out
cmp
jo
xor
mov
push
stc
into
and
mov
mov
das
push
push
pop
push
test
push
inc
lret
outsb
ja
adc
jecxz
or
movsl
movsb
fbld
mov
push
mov
lahf
subb
loope
push
mov
ds
test
mov
jmp
add
xchg
ja
call
inc
xchg
movsb
stos
cmp
jl
push
frstor
and
mov
rol
in
subb
out
clc
call
push
in
jmp
sbb
jo
xlat
bound
xor
xchg
sti
mov
aas
adc
fildl
sub
adc
mov
sbb
fdivrs
jg
adc
mov
stos
les
mov
push
sub
into
pop
and
mov
adc
sbb
popa
jb
iret
and
lret
xchg
lahf
outsl
aas
or
dec
inc
bound
adc
add
or
add
fwait
xchg
imul
fistps
test
mov
xor
icebp
sbb
in
testb
pop
and
mov
dec
push
outsb
xor
push
lods
imul
fcomps
adc
sti
dec
jne
adc
jne
add
jbe
clc
imul
lahf
sub
and
ret
ljmp
jno
adc
pop
test
push
jl
sub
adc
lret
xchg
push
jl
push
lahf
lret
jp
call
dec
stc
test
mov
or
jb
push
test
sbb
push
pop
dec
or
outsl
xlat
inc
mov
jg
mov
fbstp
lea
inc
and
inc
cmp
pop
in
leave
mov
push
xchg
aad
cmc
ret
xlat
xchg
add
cmp
ror
out
test
xor
ret
test
sahf
sub
fwait
push
cli
movsb
movl
sbb
movsb
xchg
or
icebp
jb
popf
aad
icebp
stc
push
pop
xor
fldl
pushf
cmp
dec
mov
daa
cmpsb
fcomp
je
or
test
or
pop
cld
inc
sub
push
fwait
cs
dec
dec
xchg
lret
lods
sbb
or
dec
mov
jbe
scas
ret
rcl
rolb
dec
sbb
jge
test
sub
das
inc
iret
xchg
xchg
into
cmp
add
incl
xchg
loopne
jle
test
jmp
fmull
ret
or
mov
adc
or
shlb
in
loopne
pop
cmp
cmp
mov
push
popf
dec
loop
add
cmp
outsl
int3
dec
nop
icebp
dec
mov
in
pop
cmp
lods
aaa
inc
cltd
js
xchg
aad
fdiv
cli
sub
in
cmp
adc
aam
lods
add
mov
jae
insl
sub
add
mov
mov
pop
push
jecxz
ljmp
or
pop
or
mov
push
mov
mov
fstpt
test
sbb
adc
xchg
es
scas
xlat
int
bound
int
mov
lret
stc
cmpsl
pop
repz
mov
pushf
and
lret
loop
xchg
incb
mov
pop
cld
sbb
mov
ficoms
push
inc
sbb
idivl
insl
inc
xchg
xchg
stos
mov
dec
jmp
jg
dec
popa
adc
imul
xorl
xlat
mov
inc
mov
gs
xchg
pop
inc
mov
adc
nop
int3
push
lret
and
shl
ds
push
jmp
push
das
into
shll
pop
repnz
popf
cwtl
aas
cmp
jmp
sbb
xchg
pop
cmpsb
scas
push
das
mov
adc
jns
lret
pop
mov
dec
stos
and
adc
and
cmp
sbb
jnp
iret
mov
lret
fisubrl
bound
mov
popa
aam
rorb
lcall
movsl
into
cmp
sahf
xor
sbbb
mov
dec
pop
pop
ss
push
jnp
xchg
movsb
fcomip
push
xchg
mov
ljmp
push
insb
sub
sub
xchg
mov
xchg
ficoml
shr
shl
jecxz
call
daa
mov
push
shrl
cltd
inc
stos
mov
cli
add
lcall
mov
add
and
mov
mov
or
sbb
dec
or
out
xchg
pop
jbe
ss
mov
dec
iret
lret
hlt
dec
rcll
jmp
aas
std
cld
xchg
pop
mov
sbb
push
adc
pop
pushf
scas
adc
fcmovbe
std
enter
jg
mov
test
ret
leave
sbb
jg
into
mov
inc
addb
push
push
fidivrl
rcrb
mov
xchg
dec
shlb
inc
add
loopne
push
ds
popf
scas
xor
inc
repz
cwtl
pop
pop
fistl
add
repz
xor
fildl
outsl
bound
sar
adcb
push
pop
pop
aam
push
pop
enter
fnstenv
nop
or
cmp
jmp
aad
and
dec
mov
mov
xchg
pop
in
xchg
or
lret
adc
stc
mov
pusha
lock
scas
daa
adc
shll
stos
add
adc
inc
insb
adcb
adc
xor
xor
xchg
xor
shll
mov
inc
and
pop
lcall
lods
xlat
inc
pop
mov
or
pop
jp
adc
fmul
enter
fidivl
clc
jne
xchg
push
mov
or
jmp
fsubrl
lahf
lret
jne
adc
cmp
jo
rcll
divps
dec
push
mov
xchg
adc
rclb
mov
xchg
and
add
out
push
cld
icebp
pop
inc
js
sar
jne
mov
cs
cmp
fiaddl
fisttpll
in
les
daa
pop
sub
mov
pop
mov
movsl
mov
test
sahf
jg
or
sbb
fbstp
adc
mov
adcl
adc
push
push
shll
in
ds
mov
out
fdivrs
xlat
idivb
lods
and
add
mov
lahf
dec
mov
pop
mov
aaa
daa
adc
fisubs
sarl
push
call
and
and
frstor
pop
cltd
out
inc
in
in
xor
ljmp
shll
movsb
push
add
arpl
dec
pop
or
xor
adc
mov
ljmp
cli
cli
dec
dec
and
mov
cmpsb
into
fiadds
xchg
fstpt
gs
loopne
fwait
xor
iret
and
shll
push
mov
sub
pop
in
gs
jo
nop
xlat
mov
or
jb
aam
shll
pop
or
dec
test
ret
cmp
adc
iret
add
test
sub
and
jecxz
lea
push
push
jb
push
out
je
push
push
dec
jecxz
popa
push
push
mov
testb
fistpl
push
or
mov
mov
fstps
mov
sbb
frstor
cwtl
push
loop
jle
add
xchg
mov
mov
stc
test
fistpl
int3
mov
adc
ljmp
jb
ds
dec
test
into
mov
jbe
ss
loop
loop
dec
adc
out
push
adc
popf
shll
iret
or
cmp
int3
mov
ret
and
pmulhw
mov
sbb
inc
cmp
movsl
pushf
bound
out
roll
movhps
into
add
jne
dec
mov
push
fs
cmp
into
or
mov
inc
nop
out
mov
adc
in
jg
mov
cmp
js
mov
jnp
arpl
test
jb
inc
xchg
jns
fmull
pop
test
xchg
ds
repz
and
push
push
sbb
sbb
ja
out
inc
or
adc
out
mov
lock
aam
loopne
jecxz
mov
aas
sub
jnp
pusha
imul
scas
adc
jnp
mov
jl
lret
cmp
in
pop
xor
test
popf
mov
fimuls
inc
jbe
dec
mov
jmp
lea
cmc
daa
test
pop
dec
mov
mov
test
je
in
inc
sbb
and
mov
flds
cwtl
lods
outsb
ds
insb
fnstcw
cwtl
incb
lock
xor
sbb
lods
adc
and
lds
test
xor
sbb
lods
mov
or
xor
xchg
lock
mov
mov
es
mov
add
scas
test
or
filds
add
rol
int
sbb
xchg
enter
ret
sbb
fbld
das
clc
xchg
inc
xchg
sahf
cwtl
xchg
cmp
icebp
out
pop
mov
sti
mov
stos
and
sti
push
out
push
cmp
jge
into
inc
mov
call
mov
ret
jo
mov
jns
aaa
lock
lock
in
subl
jg
int
dec
mov
or
push
mov
mull
movsl
pop
pop
fcmovnbe
dec
cmc
mov
jge,pn
mov
inc
add
add
or
cmp
and
mov
aaa
pop
sahf
dec
in
clc
adc
lods
andb
push
inc
scas
xchg
mov
fidivrl
lret
int
daa
lret
jne
test
leave
sti
shll
lahf
repnz
mov
aad
mov
sub
or
jbe
xorb
pushf
inc
pop
out
mov
jns
incb
loope
pop
inc
and
mov
dec
or
insb
out
mov
inc
mov
test
fidivrs
aaa
xchg
inc
or
xchg
mov
les
and
mov
cmpsl
cmc
fcoml
movl
jge
mov
cld
popf
faddp
out
lods
pop
push
ss
cwtl
call
std
fistpl
ljmp
xchg
fs
fcmovbe
repz
xor
push
adc
jl
push
movsl
mov
popa
ljmp
stc
in
and
aad
repz
mov
sbbl
mov
lea
pop
inc
fwait
or
mov
and
xor
sbb
sub
lahf
in
andl
ret
rcrl
ja
lahf
push
jg
sub
adc
out
ficompl
cmp
repz
fdivs
xchg
mov
or
addr16
addr16
mov
add
pop
in
pop
mov
aaa
mov
cmc
push
adc
nop
jne
and
lcall
mov
enter
fstl
dec
scas
push
sub
jbe,pt
ror
add
das
popa
inc
call
adc
cmp
clc
loope
in
rorb
xchg
or
fiadds
mull
adc
lahf
push
movsl
mov
mov
cmpsl
mov
sbb
xor
push
jl
aam
ud2
lods
dec
cmc
jge
push
out
pop
call
dec
mov
cmp
dec
sbb
adc
pop
xchg
inc
jns
xchg
imul
jp
adc
or
dec
leave
xlat
jle
repnz
pop
shl
fnstcw
inc
xadd
pop
xchg
pop
jb
fmuls
decl
pop
jmp
push
mov
pop
test
mov
pop
push
pop
dec
jbe
lods
mov
loope
scas
inc
test
imul
stos
or
imull
mov
adc
dec
out
xchg
ret
mov
jb
pop
sub
or
dec
movl
jle
xchg
ret
pop
bound
jmp
push
jns
mov
arpl
pop
push
dec
xchg
add
int3
imul
pop
imul
sub
and
inc
lods
mov
sti
sahf
jl
insl
pop
xchg
mov
gs
and
push
shrb
mov
mov
jno
icebp
push
in
mov
add
lock
mov
pop
or
fs
stos
stc
punpckhwd
test
inc
lret
lock
mov
mov
call
scas
pop
sub
lret
mov
int
jno
jae
jle
jno
dec
cwtl
enter
cli
wbinvd
pop
push
jle
lods
or
cmp
xchg
in
insb
add
xchg
add
test
rcrb
jne
in
enter
dec
or
adc
insb
std
std
ja
dec
test
cli
shr
dec
push
jmp
not
lret
add
and
mov
push
lea
enter
fs
mov
dec
xlat
stc
jo
jb
test
adc
mov
es
js
stc
stos
popf
cli
data16
sti
popa
enter
or
pop
xor
aad
sub
lods
movb
faddl
push
in
rcrb
stos
movsb
pusha
aaa
pusha
and
lea
iret
xchg
repnz
out
lock
scas
and
addb
inc
pop
fwait
aam
out
shr
fwait
mov
cs
dec
cmp
test
mov
sub
pop
mov
sqrtps
adc
addb
out
aam
cmp
fwait
xlat
dec
dec
pop
sbb
sub
and
jne
dec
cs
xchg
rorl
push
dec
les
in
cmpsl
outsb
arpl
loopne
xchg
lahf
enter
or
inc
gs
xor
jmp
sbb
mov
loopne
cmp
arpl
push
fcmovu
imul
jge
das
cmp
fisttpll
outsb
fidivl
sub
ret
out
and
loop
mov
and
aam
imul
add
inc
dec
inc
and
clc
mov
xchg
xchg
iret
and
sub
rolb
add
xlat
popf
lret
test
out
jmp
addr16
mov
cmp
out
repnz
push
mov
data16
into
outsl
in
add
dec
out
fsubp
inc
cmp
gs
icebp
jg
outsb
push
rcrb
iret
cmpsb
imull
mov
ret
cmpsl
test
lretw
cs
leave
mov
addps
fdivl
cmpsb
pop
nop
push
sbb
dec
sub
push
adc
daa
mov
push
inc
add
cs
jbe
in
test
dec
icebp
rcll
es
ljmp
fs
lea
mov
or
cmp
or
xor
les
aaa
aas
cld
lds
push
cmpsb
cmpsl
sbb
sub
ret
inc
rolb
jb
inc
xchg
loope
mov
pop
negl
inc
in
fisubs
cwtl
addr16
pop
lcall
mov
push
pushf
cmp
pop
or
inc
adc
xchg
popa
mov
push
inc
repz
mov
jl
mov
test
js
push
push
stc
mov
inc
ret
add
test
pushf
lock
add
test
stos
in
sub
add
xor
adc
inc
pop
ds
aas
jno
mov
pop
mov
std
adcb
shrl
cmp
fsubrs
xchg
cwtl
and
adcb
lods
ss
test
adc
inc
sub
mov
aam
mov
hlt
movl
repz
mov
shll
mov
lods
rorb
loop
es
into
ret
fcomps
pop
rclb
inc
mov
inc
in
ficomps
cs
ret
icebp
enter
cli
or
fnstsw
cmp
sbb
mov
lcall
scas
add
les
inc
in
je
or
enter
and
fs
adc
ja
js
ljmp
sub
movsb
cwtl
imul
lcall
sahf
int3
js
mov
andb
out
pushl
aas
pop
outsb
ficomps
mov
ja
or
cmp
out
xlat
xlat
jmp
adc
pop
je
and
scas
xchg
sahf
cmp
rcll
leave
push
dec
mov
pop
sbb
sbb
loope
sahf
xchg
nop
insb
inc
cmpsb
push
push
out
stc
sbb
jge
iret
in
push
movsl
mov
clc
inc
je
dec
sub
pop
enter
enter
aam
lret
lea
sub
xor
popf
shll
dec
jnp
in
pushw
sahf
outsl
ret
sbb
cmpsl
xchg
pop
js
rorl
jl
jl
in
and
fwait
jne
repz
sbb
loope
sbb
pop
loope
adc
mov
das
add
mov
in
push
mov
sarb
pop
add
inc
addr16
bound
popa
in
add
test
pop
jbe
adc
scas
aam
movsl
dec
or
sub
cmp
mov
pop
inc
add
int
movsl
jp
jl
pop
movsb
clc
adc
cmpsb
mov
int
aam
in
int3
sbb
jmp
push
ljmp
jnp
xor
add
imul
add
push
pop
inc
mov
xchg
arpl
shll
sbb
std
add
fwait
in
cmpsb
inc
iret
cmpsl
fisttps
inc
lret
fdivl
mov
data16
dec
sbb
or
mov
mov
push
aas
fmulp
or
repz
mov
push
inc
stos
mov
rolb
or
and
jo
adc
ds
fbld
sahf
ds
int
cli
xchg
mov
mov
arpl
adc
sahf
adc
inc
je
clc
imul
ljmp
cwtl
ret
mov
outsb
popa
jno
fcompl
outsb
icebp
add
popf
into
mov
enter
out
sahf
mov
jae
mov
ljmp
xor
je
orb
rolb
jne
mov
pushf
xor
mov
in
mov
icebp
push
adc
icebp
outsb
push
lahf
iret
pop
cs
sbb
pop
rolb
insb
dec
dec
arpl
pop
add
add
sbb
mov
ficoms
loop
xorb
inc
fwait
lea
stc
addr16
das
adc
fmull
push
int
fcmovnb
dec
sub
and
push
ret
mov
lcall
mov
mov
std
ficomps
aaa
xor
test
shrb
js
or
pop
pop
into
inc
mov
sbb
jl
fcompl
daa
dec
and
divl
pop
mov
push
test
cmp
dec
cmc
dec
pop
sbbl
xor
inc
cmp
out
push
adc
stos
inc
movb
leave
sbb
or
out
rorb
add
or
jp
mov
and
clc
dec
adc
pushl
in
sub
repnz
shr
ja
mov
jmp
mov
adc
xchg
inc
xor
ja
pop
cmp
xor
repnz
pop
push
push
shlb
sbb
clc
lcall
ss
rcrb
push
in
je
inc
pop
dec
cltd
imul
out
push
jb
push
mov
cmp
mov
lcall
or
pusha
and
bound
imul
dec
add
cmp
push
inc
inc
fiadds
fnsave
or
mov
push
repnz
push
sbb
imul
insl
and
cmpb
mov
cmp
mov
inc
fwait
inc
pop
mov
pop
pop
mov
mov
mov
pushf
stos
stos
sbb
in
les
call
and
popf
lds
test
fwait
and
jp
push
pop
sub
mov
mov
dec
sbb
cmp
fistpll
jnp
test
pop
cmp
add
push
add
adc
addr16
in
inc
pop
or
cmp
clc
aam
push
jb
push
sti
cmc
mov
pop
imul
shrb
lea
mov
cwtl
pop
add
bound
iret
xlat
adc
std
pop
jmp
aas
idivl
jae
pushf
into
shll
cmpsl
mov
aas
inc
pop
mov
stos
push
scas
rcrl
mov
outsl
sbb
shl
aam
inc
or
dec
push
jnp
mov
xor
enter
or
sar
dec
pop
inc
cmp
dec
leave
xchg
scas
inc
dec
bound
dec
je
push
mov
xlat
or
xchg
mov
dec
adc
mov
push
gs
add
mov
adc
loop
pop
jp
sub
pop
cmp
jo
xor
lods
sub
xor
add
xchg
lea
icebp
ror
push
mov
jg
fcomps
push
and
mov
je
xor
sbb
push
mov
stos
in
mov
ss
add
test
pop
sub
iret
push
mov
loope
aad
adc
adc
lcall
push
dec
stc
movsl
shrl
sub
mov
aad
pop
sarl
dec
daa
mov
imul
fimull
push
mov
loope
jg
in
or
xchg
outsl
lahf
fwait
shll
scas
pcmpeqb
addb
cmp
pop
test
js
repz
stc
ficompl
aad
pop
xor
enter
sub
and
mov
ficoml
loope
pop
je
repnz
pop
sti
mov
add
neg
adc
or
mov
cmp
out
push
movsl
and
into
jne
dec
or
add
rcl
push
push
jo
inc
sbb
aaa
inc
mov
push
push
adc
pushf
xchg
push
and
sti
and
pop
xor
aas
push
cld
inc
jb
cmpsb
push
repnz
loope
andb
sti
ret
mov
mov
jmp
add
dec
and
sbb
mov
jae
mov
sub
mov
sub
and
dec
fidivs
outsb
dec
rcl
mov
aas
adc
loope
and
scas
push
pop
repz
pushf
stc
inc
or
call
dec
inc
adc
sub
push
sub
push
and
les
jno
arpl
imul
inc
jbe
data16
mov
sub
adc
mov
movsb
pop
das
testb
adc
lods
or
jns
aam
sahf
push
sub
dec
outsb
lret
shll
das
test
mov
outsl
push
adc
dec
jge
loopne
fsubrs
xchg
sbb
out
popf
inc
pop
adc
lds
xor
loop
jns
cwtl
sbb
stc
pop
mov
pop
jnp
or
mov
int
inc
cmpsl
jno
addr16
popa
ficoms
leave
jmp
fisttpl
sahf
mov
dec
xchg
rcrl
jns
jecxz
shlb
es
sub
es
mov
push
lret
or
sub
mov
ljmp
add
sarb
xchg
adc
cwtl
fimull
xor
pop
pushf
rcr
js
insl
push
negl
mov
je
jle
sarb
cmp
and
mov
insb
into
or
adc
mov
mov
mov
and
sti
popa
out
cmp
ja
inc
jmp
lahf
mov
lcall
std
push
ja
insb
inc
sbb
sbb
testb
dec
outsb
out
lods
and
out
adc
jno
inc
or
adc
lcall
sbb
add
add
stos
inc
fstpl
add
cmp
das
jo
lea
cmpsb
andl
iret
cltd
mov
inc
cmp
int3
in
xor
aas
adc
lret
adc
loope
adcb
icebp
sub
cmpsl
daa
je,pn
das
sbb
fistps
nop
and
cmp
push
and
dec
js
imul
xchg
imul
shlb
out
addr16
test
jmp
out
sbb
sbb
lock
jmp
adc
divl
test
mov
mov
fwait
mov
mov
add
push
add
adc
xchg
adc
test
cltd
aad
pop
push
shll
push
cmc
dec
cmp
dec
out
inc
xchg
test
test
sarl
std
sti
add
dec
les
loopne
dec
adc
cmp
pop
mov
dec
jns
jle
push
mov
pop
dec
xchg
insl
jmp
cwtl
add
lret
lds
jae
pand
pop
mov
fdivl
lock
shr
sub
test
int3
dec
sub
fcmovu
jb
sub
ficomps
or
jmp
push
mov
loopne
scas
mov
sub
fnsave
fcompl
scas
pop
xchg
ret
pop
sbb
dec
jb
adc
ret
push
lea
cmc
push
xor
imul
sub
mov
loopne
jb
cmp
subb
adc
pop
and
sti
jo
cmpsl
pop
mov
out
scas
insb
out
xchg
inc
mov
test
loope
out
dec
cmpsl
push
fucomip
stos
daa
popf
bound
adc
outsl
dec
add
push
ja
movsb
push
sbb
cltd
out
mov
out
in
test
push
xor
jmp
dec
xchg
xor
lock
adc
mov
les
adc
popf
shlb
popa
mov
mov
inc
cmpb
add
in
pop
aaa
xor
adc
inc
ja
insl
adcl
and
pop
imul
and
lock
mov
push
int3
jns
and
pop
aam
std
adc
insb
push
mov
iret
mov
dec
xchg
dec
mov
push
mov
inc
add
mov
sbb
mov
dec
jne
xchg
ja
rorl
pop
sbb
imul
stos
stos
pop
ds
rolb
inc
sti
shll
sarl
push
sti
dec
mov
adc
in
pop
dec
mov
inc
int3
inc
dec
leave
cmp
iret
pop
and
shlb
fucom
mov
imul
pop
mov
adcb
movsl
cmc
into
xchg
pmaxsw
inc
pusha
scas
jae
lahf
cmp
xor
sub
jbe
add
sbb
or
mov
mov
push
lods
xchg
fsubrl
ja
sub
dec
dec
mov
jecxz
push
outsl
xchg
rcll
movsl
bnd
ss
cld
pop
fsts
cmp
mov
lock
xor
es
cmpsb
mov
jecxz
dec
loope
fnsave
pop
movsl
inc
int
orb
mov
dec
and
add
cmp
in
movl
sub
push
into
dec
ret
fsts
daa
mov
mov
add
jno
js
mov
sub
loope
jbe
inc
sti
push
or
dec
xchg
push
mov
dec
xlat
iret
icebp
test
push
jo
cmp
jg
adc
xchg
sbb
xor
stos
lret
popa
xchg
testb
mov
fwait
xchg
jnp
in
sbb
arpl
cmp
pop
jmp
hlt
sbb
jnp
fstl
mov
sbb
mov
rcrb
ficoms
pushf
xor
jo
xor
lods
divb
xor
sbb
out
pusha
data16
fstl
fwait
and
push
adc
movsl
inc
rorl
arpl
mov
dec
dec
or
pusha
pop
inc
out
jge
sub
jge
add
lahf
mov
lcall
xor
movsb
outsl
imull
fmul
and
pop
fcoml
jg
lea
jge
lods
adc
cmp
pop
fsubs
push
pop
fcmovnb
enter
test
fisubs
dec
or
dec
stos
iret
leave
addr16
scas
sub
dec
jmp
cmp
sub
mov
jbe
rolb
clc
ja
pop
sub
rolb
mul
fneni(8087
push
aad
or
and
dec
add
insb
xchg
mov
in
mov
ficoml
or
push
xchg
push
lock
das
daa
cmpsl
mov
fmulp
pop
xor
mov
mov
xorl
sub
scas
rorl
xor
push
scas
dec
outsb
in
outsl
xchg
pop
mov
popf
fisttps
or
xchg
popf
loopne
pop
sar
xor
jle
mov
test
ja
scas
or
inc
aad
jge
push
push
or
xor
stos
dec
sti
ja
jle
or
mov
or
and
sub
call
jmp
adc
stc
ss
and
sub
xor
mov
mov
sub
pushf
or
cmpsl
insl
cmpsl
jns
movups
pop
add
fstl
aaa
fisubl
imulb
mov
adc
popl
mov
ds
std
mov
fmuls
aam
mov
xchg
clc
jbe
adc
or
inc
or
mov
and
negb
pop
jns
arpl
cli
add
cmp
xchg
dec
add
mov
and
sub
cmpsb
repz
js
jnp
addr16
sti
dec
add
out
adc
scas
ljmp
mov
sub
dec
cli
outsb
scas
mov
push
cmc
int
push
push
cmpsb
push
xor
faddp
adc
bound
shll
insb
adc
lds
sti
pop
out
inc
aam
es
mov
rcll
ja
mov
jbe
jne
out
enter
lock
movsl
cmp
mov
enter
nop
sbb
pushf
sub
xchg
dec
sub
fmul
insb
mov
xchg
test
hlt
push
call
je
mov
rcr
pusha
sbb
stos
cltd
mov
test
scas
fcomi
and
sbb
sbb
lea
xchg
mov
mov
lcall
scas
sub
aam
sbb
and
test
or
xor
imul
mov
cmp
popf
mov
mov
xchg
je
loope
lahf
sbb
lret
cmpsl
test
enter
and
arpl
add
jo
pop
shrl
pop
ret
int3
rcll
sar
push
popa
inc
sub
repz
push
mov
inc
xchg
mov
cli
inc
jle
jae
fwait
push
sub
xchg
xchg
dec
sbb
and
push
ss
pop
pop
ret
cmp
fnsave
arpl
and
dec
sub
cmp
test
popf
aaa
stos
dec
xor
cmp
ret
xchg
pop
add
xor
sbb
ds
das
push
dec
push
add
or
fbstp
sbb
xchg
lea
sbb
sbb
pop
ficomps
cmc
jae
cwtl
mov
aam
imul
out
outsl
sub
dec
mov
lods
gs
xor
push
cwtl
insl
sub
lods
xchg
cld
outsl
push
fisttpl
sarb
test
ret
fidivrs
jb
pop
fsubr
jns
adc
arpl
sub
fs
imul
lcall
adc
xchg
in
mov
jg
pop
repnz
add
daa
inc
loop
inc
push
mov
roll
jns
mov
xchg
add
scas
test
dec
pop
shl
stos
testb
xchg
dec
dec
adc
pop
lahf
mov
sub
ficoml
inc
insl
sub
imul
dec
sarb
push
neg
pop
ja
xorb
mov
push
lret
adc
lcall
push
cmp
lahf
mov
imul
dec
jae
addr16
ret
and
jmp
fwait
jle
push
stc
icebp
cmpsb
sbb
xchg
mov
insl
pop
mov
imul
or
stc
add
adc
pop
iret
cmpsb
cld
out
push
jns
sub
decl
movsb
mov
out
pminsw
xchg
insb
das
cwtl
pop
jo
icebp
movsb
int
dec
loopne
jne
movsl
jb
sbb
pop
mov
mov
nop
sbb
pop
adc
and
aad
lock
lahf
xchg
clc
xchg
pushf
cltd
mov
inc
fisttps
subl
addl
out
cmp
xor
scas
scas
cwtl
mov
cld
add
xchg
dec
push
mov
test
mov
pushf
xor
adc
pop
mov
xor
mov
in
mov
sti
jmp
lahf
in
daa
sbb
fnstcw
mov
mov
fisttpll
or
cmp
add
hlt
sahf
fwait
mov
inc
xchg
xchg
adc
outsb
cmpsl
pushf
divb
rorl
jb
pop
pop
pop
xor
into
rcrb
dec
aas
and
or
loopne
sub
and
sub
jb
cmpsb
cltd
dec
jge
adc
jmp
cmp
icebp
xchg
and
sbb
mov
cmpsb
cmpsb
inc
std
xchg
shll
dec
pop
xchg
add
cmp
add
cmpb
push
and
dec
cmp
fs
or
sub
inc
mov
mov
mov
movsl
jnp
jp
aaa
popa
mov
and
mov
fbstp
jo
test
xchg
movsl
sbb
imul
aad
pop
cmp
mov
add
mov
xchg
jne
in
leave
xor
lock
push
xor
js
insl
cmp
dec
add
icebp
lret
jecxz
in
fisubs
call
xor
das
stos
arpl
mov
rol
sarb
pop
mov
sbb
movsb
jmp
dec
inc
mov
ja
ja
jmp
push
sbb
mov
imul
pop
fmull
pop
mov
mov
xchg
sbb
into
adc
sub
pop
xchg
lods
fnstcw
push
iret
jg
pushf
mov
cld
daa
xchg
sbb
negb
bound
pop
hlt
sub
mov
neg
ret
add
xor
jb
sub
adc
movsl
das
sub
lcall
inc
sbb
cmp
dec
mov
push
mov
jne
shll
shr
or
pop
mov
sahf
jle
in
jne
sub
jmp
lods
and
xor
scas
jl
inc
bound
addl
inc
jno
and
pop
mov
cmpsl
mov
dec
push
adc
xchg
repnz
or
adc
dec
jno
or
dec
push
or
sti
pop
add
pop
mov
hlt
push
pop
enter
nop
pusha
test
or
loope
aas
ss
dec
or
sbb
repz
inc
leave
xor
lea
push
arpl
adc
push
push
rcll
stc
mov
inc
cmc
cld
add
jmp
dec
inc
jecxz
les
xchg
ret
fists
push
push
cmp
lock
in
ljmp
fstl
stos
mov
push
mov
imul
xchg
fwait
adc
adc
mov
les
lret
mov
cmpl
mov
push
bound
cli
jmp
inc
sbb
movsl
cmpsb
dec
rcrb
movsb
pop
repz
jge
or
mov
push
cmp
shrb
sbb
dec
iret
adc
or
aas
xor
out
je
xchg
rclw
jmp
and
nop
cmp
cltd
test
xor
loope
insl
mov
and
sahf
adc
pop
lret
add
lret
das
je
ljmp
fisttps
repz
enter
jno
cmp
imul
adc
sbb
daa
sarl
fiaddl
aaa
mov
mov
mov
mov
xor
push
scas
lock
in
lret
jo
sbb
in
test
lds
mov
and
pop
sahf
or
jbe
xchg
add
fcomip
gs
movsl
mov
movsl
sub
fildll
xchg
je
mov
test
fsubl
mov
popa
sub
repnz
mov
addr16
mov
leave
cltd
movb
add
xchg
jl
pop
fwait
push
aas
mov
fs
cmc
mov
xor
push
ljmp
cli
xor
adcl
or
jle
pushf
sti
mov
fidivrs
push
outsb
subb
bound
fisubl
add
push
and
dec
xchg
xor
mov
mov
ss
popf
jl
decb
or
cmpsb
pop
test
in
sahf
js
cmp
sub
es
mov
int
lods
xchg
adc
mov
jmp
out
and
test
loop
movsb
sbb
mov
pushl
pop
add
pop
xor
sbb
mov
sub
scas
sbb
mov
and
es
mov
nop
jle
mov
lds
sub
jo
jg
mov
cwtl
fdiv
xor
outsb
cli
push
push
leave
jge
or
mov
mov
loopne
sub
addr16
sub
out
les
or
mov
inc
or
mov
fidivrs
mov
outsl
pop
ret
test
pop
sarl
xor
or
xchg
sub
cmpsb
aas
enter
imul
out
jecxz
lods
dec
adc
stos
mov
push
and
fisubs
jae
mov
add
sbb
and
pop
in
or
cmpsb
push
or
adc
adc
pop
dec
mov
mov
xchg
jl
xchg
fstpt
jecxz
adc
imul
ret
sbb
sti
mov
ret
push
jge
mov
and
jge
xor
fidivs
stos
inc
and
ret
rol
xchg
icebp
fsts
ret
xor
fwait
mov
cltd
movsb
bound
jge
fstpt
pop
xchg
cmc
mov
cmp
je
or
lret
data16
lret
jae
xchg
bound
nop
sbb
out
cmpsb
nop
pop
jo
push
adc
cli
aas
test
adc
pop
pop
pop
jg
ja
loop
push
mov
mov
or
mov
dec
popa
sti
lret
jo
test
sbb
push
lods
mov
xchg
cmp
notl
ret
out
pop
cltd
mov
pop
lcall
xchg
mov
bnd
sbb
nop
adc
outsb
xchg
loop
push
out
dec
scas
sub
divl
movsl
mov
push
xor
stos
mov
fdivrp
jae
popf
shrb
xchg
inc
push
mov
movsb
adc
push
xlat
lods
sbb
das
fldenv
jns
outsb
nop
jae
xor
scas
xchg
and
jmp
outsb
in
movsb
jno
aam
mov
negl
test
daa
mov
ret
or
test
aam
pop
jb
dec
rclb
add
xchg
call
in
adc
xchg
incl
les
arpl
repz
push
int
rcll
and
int
cli
xchg
pop
add
js
fidivrs
andb
das
sub
inc
mov
aaa
add
in
sub
dec
in
or
mov
loopne
cltd
adc
mov
sbb
adc
sbb
push
mov
das
je
sbb
mov
cmp
mov
xchg
das
adc
xchg
push
lahf
add
jl
jecxz
icebp
cli
jbe
loope
mov
rcrl
sbb
or
leave
xchg
sub
or
dec
scas
xor
inc
fisubrs
fwait
xor
fldl
repnz
sti
jmp
sarl
cmp
sub
pop
or
dec
xchg
sub
lods
cs
cltd
mov
push
push
fwait
mov
pop
or
cli
jge
aaa
ret
cmp
adc
mov
ficomps
add
iret
push
aad
cmc
lahf
and
cwtl
mov
in
inc
jb
mov
into
xchg
adc
push
inc
push
push
jp
xchg
or
addb
xchg
or
inc
mov
xchg
and
mov
inc
sub
in
xchg
aam
adc
pop
outsb
mov
stc
lret
adc
adc
inc
mov
clc
sub
dec
pop
mov
repz
ja
rorb
push
sbb
jb
jmp
mov
lcall
rcll
sbb
pushf
rorl
xchg
jl
xchg
fstpl
movsl
fldt
loop
pop
sub
addb
shrb
subl
popa
sbb
add
and
push
add
scas
inc
or
bound
cmp
push
icebp
enter
shlb
fs
and
movsl
add
fnsave
arpl
dec
in
sahf
jecxz
mov
add
arpl
movsl
pop
and
xchg
mov
lret
in
adc
mov
in
cmpsb
mov
jmp
sbb
sub
sub
xchg
mov
jno
mov
das
vpshab
adc
push
xchg
stc
aas
stos
loope
mov
pop
push
or
ror
adc
jmp
adc
add
fcmove
xor
jl
aas
push
pop
ficoml
shlb
xchg
jg
clc
mov
pop
popf
mov
dec
stos
lods
dec
mov
fbstp
out
lret
mov
push
mov
sbb
pop
mov
jmp
movsl
lret
mov
cmpsl
fidivs
test
cli
fimuls
ret
sub
pushf
push
or
mov
jmp
stc
sbb
scas
xor
cli
mov
push
std
rcrl
add
cld
out
sub
lea
cwtl
pop
lahf
sub
cs
rcl
dec
push
rclb
loopne
adc
push
pop
nop
or
ds
bound
add
add
pop
push
push
xor
jg
mov
adc
insl
or
loopne
loope
pop
jbe
stc
sbb
addr16
sub
ljmp
mov
add
xor
in
mov
pop
std
sbbb
cmp
mov
jle
loop
dec
inc
stos
cmpsb
mov
scas
pushl
outsl
fisttps
loop
jl
es
push
dec
lcall
jnp
mov
testb
xor
push
stos
rolb
mov
movsl
add
mov
aaa
fs
push
cmp
aad
mov
movsb
jp
inc
popa
fwait
shld
xor
mull
cmpsb
sbb
cmc
mov
lods
jle
cmpsl
hlt
sub
int3
cmp
xlat
push
add
mov
pop
mov
push
jae
dec
jno
call
pop
lds
lods
sbb
push
xor
mov
jp
inc
in
int
dec
sti
xchg
dec
mov
cmpl
mov
mov
ret
aas
pop
sub
insb
insb
out
lock
pushf
fistpl
xor
ret
push
xor
int
outsl
test
sub
out
js
in
loopne
mov
and
mov
call
mov
push
lahf
imul
jns
sbb
jno
pop
fnstcw
cli
xchg
dec
xor
inc
outsb
pop
fs
add
rolb
xor
das
cs
in
push
cmp
call
mov
sbb
add
std
mov
mov
in
lahf
jbe
cmp
jge
inc
push
mov
or
aas
mov
pop
push
pop
movsl
push
addl
xchg
push
jg
pop
mov
mov
or
ficoml
dec
cld
loopne
pop
clc
rcl
stos
or
cli
loop
imul
cld
jg
je
cmp
xlat
push
rorb
into
pop
mov
push
bound
fcompl
sbb
dec
roll
cwtl
shrb
dec
push
bt
test
lret
push
and
mulb
mov
fistps
pop
jmp
mov
fsubl
mov
imul
push
jno
pop
arpl
xlat
lret
stos
cltd
hlt
loop
mov
mov
and
mov
out
lods
popf
daa
xor
xor
jae
sub
mov
negb
pop
or
push
mov
gs
stos
scas
push
mov
lods
jg
pop
loopne
pop
popa
rorl
and
adc
xchg
adc
jae
stc
bound
rcll
arpl
xor
jae
xor
lret
test
mov
ret
test
cli
jmp
cmp
ds
and
imul
push
out
mov
inc
loopne
xorb
sub
push
shlb
inc
mov
pop
loop
fldt
xchg
clc
mov
mov
ffreep
rorb
dec
popf
ss
cmp
fcmovbe
sarl
es
inc
popf
add
aas
mov
xorl
lcall
leave
push
ss
popl
pop
sub
cmp
popa
clc
ret
mov
and
mulb
out
sahf
mov
xchg
jg
push
lock
cmp
push
dec
out
mov
xor
pop
push
and
pop
out
jnp
or
hlt
data16
fwait
imul
es
sbb
sbb
cmp
mov
fbld
ss
mov
xor
addr16
repnz
les
jge
aas
rcrb
mov
in
push
insl
xchg
in
adc
aaa
dec
and
sub
imul
loop
rcrb
sti
sbb
cmp
add
xchg
pop
jmp
scas
mov
fsubp
cs
mov
fstps
dec
and
or
sti
jp
and
scas
xor
push
sub
addr16
mov
into
jg
fidivs
iret
or
pop
int3
and
mov
mov
imul
fwait
push
imul
jns
loop
sbb
mov
jmp
adcl
xor
inc
lds
ret
and
and
xor
ret
in
jae
inc
into
sbb
mov
lds
push
test
cwtl
xor
fwait
sbb
test
mov
ret
sbb
dec
cmp
dec
das
div
pushf
test
add
dec
cmp
leave
add
or
or
fs
idivl
mov
gs
pop
cld
cmp
mov
mov
push
sbb
out
test
mov
loope
lock
mov
repz
mov
data16
out
inc
ja
sbb
mov
mov
ror
imul
out
test
or
lods
sub
ret
dec
xchg
jg
das
cld
aad
subl
jmp
cmp
fldenv
adc
and
mov
jno
adc
push
aaa
sbb
pop
inc
mov
dec
pop
dec
dec
mov
and
sub
mov
iret
or
dec
ja
imul
daa
movsl
inc
or
add
pop
fwait
adc
cmp
mov
in
scas
ljmp
mov
stos
cmp
fidivrs
mov
test
cld
repz
and
add
fistps
mov
add
push
movsl
pop
lds
nop
jnp
adc
inc
frstor
icebp
cltd
xchg
xchg
lock
jnp
xor
rolb
icebp
cmp
xor
push
es
jmp
mov
out
aas
shrl
mov
mov
out
fs
pop
call
adc
aas
and
cli
push
sub
push
adc
lret
cmp
data16
enter
jno
int3
mov
loope
hlt
dec
xor
mov
shl
cmp
cld
mov
push
fbld
jne
fstps
adc
jmp
mov
xchg
mov
shll
mov
ja
xor
roll
adc
adcl
dec
std
addb
and
cmp
sub
je,pn
inc
dec
out
dec
aam
sbb
rcr
sbb
sub
mov
mov
xchg
test
mov
out
xor
out
call
and
ljmp
push
repnz
add
dec
push
xorl
add
pop
repz
add
adc
inc
sbb
mov
mov
push
je
sub
sub
in
ljmp
and
in
inc
enter
push
lcall
dec
sub
mov
or
xchg
cwtl
repz
add
mov
outsl
fmul
push
pop
fists
enter
mov
push
add
mov
xor
test
int3
lret
out
adc
pop
mov
pop
les
lahf
xchg
mov
mov
mov
pop
data16
or
mov
lret
pop
insb
xor
sarl
push
lcall
dec
imulb
adc
sbb
mov
shlb
cmp
mov
inc
mov
test
inc
out
mull
fwait
cli
lock
dec
add
fstpl
and
xchg
fistps
mov
dec
sahf
vmread
xor
xor
inc
cmp
mov
push
sub
imul
xor
inc
cmp
cltd
jne,pt
lcall
data16
lahf
lahf
push
pop
enter
lods
cmp
jl
push
push
push
das
mov
add
and
leave
je
repz
fwait
sti
ss
shll
outsb
mov
jno
pop
jns
cmpsb
sub
popl
pop
outsl
pop
jns
mov
cmp
pop
inc
jns
cltd
std
mov
xchg
repnz
out
loope
mov
push
adc
stos
js
push
fmull
jecxz
pop
and
jge
sarl
outsb
dec
add
jle
mov
sbb
jae
js
sahf
xor
mov
xor
push
cmp
inc
and
and
pop
loop
sbb
fldt
sbb
xor
mov
arpl
sbb
sbb
push
mov
xlat
dec
pop
cmp
pushf
fld
fisubs
and
or
loopne
jecxz
pushf
add
jp
cli
push
cmpsb
popl
nop
xor
jecxz
bound
incb
sub
pop
sub
shrb
loop
pop
fs
js
test
inc
jp
inc
xchg
jecxz
mov
push
sbb
pop
ss
enter
inc
or
icebp
jmp
mov
movsb
or
fcmovu
movsb
js
scas
jns
sarl
push
mov
sbb
mov
mov
clc
pop
insl
cmp
in
xchg
cmpsb
rorl
cmp
and
aam
jo
mov
les
sub
push
sbb
bound
sbb
jle
movsl
fnstenv
test
jecxz
mov
add
push
add
call
mov
dec
push
in
inc
or
mov
cmpsl
je
movsb
xchg
rorl
xchg
cmp
mov
pushf
rol
bound
in
adc
or
ficoms
fidivl
lret
pop
adc
xchg
in
stos
sahf
in
or
bound
and
pusha
std
mov
sbb
loopne
push
popf
sub
mov
ret
outsb
into
faddl
mov
and
insl
inc
dec
cltd
repz
sbb
lods
mov
and
loop
hlt
mov
or
jmp
clc
lea
lahf
mov
test
imul
lea
mov
les
fucom
sub
in
leave
ljmp
jl
sbb
push
mov
mul
pop
clc
jne
jmp
incl
insl
cmpsb
cld
stos
sbb
pop
jl
dec
lret
or
test
xor
dec
jb
cmp
jp
lock
xchg
insl
sbb
cmpsb
insb
xchg
mov
ret
pop
aad
fs
push
add
test
pop
jge
or
push
in
nop
repz
cmp
sub
inc
aaa
enter
pushf
jbe
clc
lret
enter
clc
cmp
or
or
push
xor
in
pop
mov
ljmp
jo
and
push
sbbb
mov
cmpsl
mov
clc
sti
inc
mov
adc
loope
cmp
inc
xor
jae
add
or
jg
cmc
nop
fisubl
clc
rorl
arpl
cld
lods
es
mov
mov
lock
stos
nop
sub
jg
into
loopne
sbb
sub
jne
aam
push
ja
lret
das
and
test
out
add
mov
jp
inc
pop
or
xchg
inc
jecxz
addl
inc
and
fimull
adc
jp
jmp
and
movsb
inc
push
mov
testb
icebp
mov
aas
sub
fildll
lods
cmc
aam
add
pop
xchg
push
sbb
aad
loope
ja
imul
jne
lea
mov
enter
xchg
mov
push
or
shll
adc
or
sbb
loope
nop
leave
cmpsb
test
xchg
dec
fisubl
sub
and
mov
mov
cli
aad
push
lea
fs
enter
movsb
cli
adc
push
icebp
std
incl
inc
mov
push
loop
add
push
arpl
jns
xor
xchg
test
jo,pt
fdivrs
lahf
mov
sub
xchg
xor
adc
ret
mov
cmpsl
insl
or
and
sub
xor
jecxz
fsts
popf
lcall
dec
std
jg
movsb
xor
mov
mov
adc
xor
mov
jnp
jg
sarb
iret
inc
lock
imul
jae
decb
stos
imul
outsl
push
sbb
cmp
mov
xor
cmc
loop
shll
add
adc
lea
int3
mov
xchg
into
out
call
jb
sub
adc
lret
push
popa
lcall
cld
mov
add
je
pop
dec
xchg
loop
call
out
stos
popf
icebp
outsb
sub
xchg
jl
iret
jns
iret
jmp
pop
mov
inc
sub
pusha
push
jge
cmc
jns
mov
loopne
sbb
ret
imul
push
adc
and
stos
sti
pop
xor
xor
sbbl
xchg
fldl
das
mov
pop
aaa
stos
mov
sbb
or
xor
gs
mov
cmp
mov
add
and
aaa
jmp
test
cmpsl
mov
sub
scas
xchg
int3
ds
mov
pop
mov
mov
les
ljmp
pop
push
mov
shrl
or
dec
subl
xlat
mov
cltd
hlt
rcrb
adc
bound
ret
inc
dec
or
cmpsl
out
or
nop
dec
test
aad
inc
xchg
ds
outsb
in
movsl
pop
push
jo
sbb
stos
mov
nop
je
insb
lds
inc
shrl
jno
xchg
dec
pop
cmpsb
cmc
repz
arpl
inc
mov
outsl
call
adc
fs
call
icebp
and
sbb
jb
xchg
in
mov
icebp
roll
cwtl
jecxz
aas
xchg
inc
adc
or
aas
bound
mov
pop
in
sahf
push
daa
fnsave
add
mov
in
mov
arpl
add
jo
xlat
inc
rcl
pop
or
loopne
jge
inc
fistps
sbb
push
iret
fidivrl
cmp
inc
sahf
imul
scas
push
roll
adc
jge
jne
mov
jle
push
out
pop
dec
xchg
es
sub
into
popf
mov
fildll
cmp
or
ljmp
out
jge
out
test
mov
mov
addr16
faddp
mov
xchg
outsl
stc
iret
inc
xchg
sub
loope
xlat
enter
int3
lds
cs
loop
insb
mov
sbb
movsb
adc
sarb
mov
daa
sub
pushf
pop
jnp
out
mov
mov
mov
push
add
lcall
or
js
jbe
std
pop
pop
addl
cld
jae
adc
pop
jmp
or
lock
push
and
test
fs
dec
sub
leave
aad
cmp
cli
xchg
and
call
sub
outsb
cmpb
and
jb
lcall
lods
sub
nop
je
lcall
xor
aas
mov
dec
cmp
xchg
push
in
pop
sbb
add
aam
repnz
add
imul
outsb
mov
cmp
mov
nop
and
add
movsb
inc
push
jne
sbb
movsb
sbb
and
add
test
popa
pop
lds
ret
out
fwait
add
mov
dec
push
jge
adc
cld
mov
pop
add
scas
mov
xor
lock
pushf
push
mov
adcb
fnstsw
rdtsc
dec
or
les
ljmp
sub
pushf
popf
gs
fimuls
mov
je
js
iret
sbb
cmp
das
std
sub
push
test
das
pop
xor
dec
pop
cld
cs
pop
jo
dec
and
dec
inc
mov
mov
sub
push
sub
cmp
ss
mov
push
sub
and
xchg
push
outsb
mov
fildl
out
es
fdivs
int
adc
dec
mov
add
add
test
pop
mov
in
mov
sbb
cmp
faddl
lret
ffree
dec
out
cmpsl
loopne
enter
pop
pop
out
aad
push
scas
cmp
in
adc
movmskps
movsb
push
mov
lods
sub
mov
or
sub
mov
pop
add
dec
je
outsb
aam
shlb
xchg
push
sub
push
add
add
pusha
mov
shrl
cmp
movsl
fsubrs
insl
sbb
cwtl
je
adc
mov
ljmp
xchg
cmp
mov
pop
addr16
gs
sub
test
mov
popf
push
mov
jge
pushf
clc
mov
push
mov
xlat
inc
inc
jns
sbb
sti
cmc
jno
lock
enter
pop
jnp
aad
push
cmp
xor
gs
mov
xchg
pop
push
pop
mov
sti
shrb
add
aad
ret
jle
shll
xchg
xchg
mov
xor
or
std
xor
jl
mov
mov
push
rorb
fstpt
xor
mov
mov
lahf
mov
push
jmp
xor
pop
mov
or
push
mov
add
in
pop
in
cwtl
xor
stos
xor
and
and
xor
arpl
stos
shll
lahf
aam
in
movb
jb
cmp
pop
sub
lods
lcall
and
js
or
dec
xchg
int
inc
pop
sub
cmc
test
ss
mov
mov
imul
and
jp
in
nop
push
test
sub
aam
repnz
adc
mov
xchg
mov
call
ds
ror
mov
push
fwait
aas
pop
fwait
and
adc
dec
sub
add
js
add
dec
mov
mov
insb
mov
stos
xor
mov
push
aam
cmp
cltd
pushf
pop
bound
icebp
gs
enter
inc
fisubs
xor
cmp
mov
jle
dec
add
daa
inc
jp
inc
and
repnz
out
and
pcmpgtw
mov
xchg
ds
mov
dec
and
cmp
lods
clc
ljmp
pop
and
push
out
jo
ja
nop
loop
push
cltd
repz
stos
scas
rcrb
imul
adc
cmpsl
jo
sub
mov
das
es
mov
addr16
jge
mov
jp
fwait
nop
mov
sub
shll
add
mov
icebp
dec
pushf
enter
cltd
push
jl
shlb
jp
aaa
mov
jae
mov
mov
int
add
subb
and
mov
jne
xchg
arpl
pop
and
mov
push
jmp
inc
jae
out
fwait
mov
mov
shll
ja
fsubr
xor
add
mov
pusha
dec
cmp
clc
mov
jne
outsb
ret
mov
les
fs
push
pop
or
mov
push
scas
loope
leave
jmp
xchg
scas
out
rorb
js
pusha
add
mov
xlat
dec
cmpsl
or
mov
adc
cmp
mov
push
out
cmp
enter
mov
out
or
cmp
mov
push
outsb
cmp
ret
insl
mov
jo
push
div
mov
wbinvd
fucom
jmp
mov
neg
pop
repnz
fsubrs
mov
gs
insl
inc
out
cmp
xlat
flds
xchg
push
push
fnstsw
adc
out
lret
push
sahf
les
bnd
cmp
stc
xchg
cmpsb
pop
mov
clc
or
cmpsl
lcall
fnstsw
push
mov
rcrl
les
std
mov
push
bound
int3
aad
movsl
cmc
stos
jl
hlt
adc
mov
into
loopne
mov
bound
mov
lods
push
sbb
enter
icebp
mov
lds
sbb
je
lock
inc
repnz
cmp
sub
xor
xchg
int3
or
enter
push
out
and
mov
sbb
iret
icebp
pop
in
cltd
jno
les
subb
mov
gs
leave
mov
pop
mov
mov
arpl
iret
jp
lock
cmp
int3
jg
adc
dec
ljmp
mov
shl
inc
sub
adc
insb
push
rclb
cld
mov
xchg
mov
enter
mov
dec
lods
imul
and
jg
popf
fcomps
mov
or
enter
pop
sub
pop
or
insl
mov
dec
in
inc
insb
jp
mov
push
lea
lds
cltd
insb
add
jns
out
adc
cmp
shrb
sbb
in
push
mov
gs
insl
xchg
or
pop
push
test
shlb
into
mov
sub
adc
hlt
push
ljmp
jg
leave
cmp
sub
or
mov
fstpl
imull
popf
out
xchg
ljmp
pushf
push
xchg
mov
aad
pop
mov
or
xchg
mov
sbb
add
aas
scas
jb
je
inc
mov
push
cmp
imul
push
es
stc
js
nop
das
mov
roll
loopne
ret
insl
leave
sbb
push
js
lret
arpl
pop
inc
adc
jbe
push
lcall
xor
rcrb
xchg
sub
clc
adc
mov
and
xchg
mov
aam
loope
xchg
sbb
fistpl
adc
push
jne
test
hlt
sahf
pushf
mov
aad
imul
jno
mov
leave
ss
pusha
frstpm(287
mov
mov
enter
aad
stos
bound
rcll
push
popa
mov
cmp
xchg
push
mov
mov
jge
sub
dec
and
adc
shrb
ret
sub
lods
inc
dec
stos
stos
das
mov
loope
xor
aaa
cmp
repnz
loop
jns
movsb
das
data16
mov
mov
jb
sbb
bound
xchg
push
and
mov
scas
mov
popf
test
push
jo
and
push
mov
jecxz
fmull
iret
or
inc
push
loopne
xlat
mov
jns
out
out
imul
mov
pushf
mov
push
cwtl
inc
cs
pop
dec
or
sti
sub
push
or
sub
inc
cltd
sub
ss
push
fisubl
dec
fstl
and
add
js
jo
dec
inc
inc
fisttpl
lret
xchg
inc
stos
xchg
shr
daa
jb
stos
mov
mov
or
rorl
adc
push
mov
xchg
pop
sub
mov
mov
jns
out
movl
push
pop
or
cmp
insb
push
mov
add
cmp
out
and
std
add
or
loope
fists
lods
enter
pop
cmpsl
xor
pop
jmp
jecxz
ss
or
mov
lods
add
dec
xchg
in
ret
pop
inc
jns
rcl
xchg
iret
sbb
scas
or
mov
clc
aaa
mov
xchg
jb
cmpsl
in
out
pop
lods
mov
cmpsb
cwtl
insl
sbb
push
xor
jle
mov
adc
cmpsb
test
cmc
lock
and
dec
xchg
mov
mov
dec
bound
jl
push
xchg
js
mov
cmpsb
loop
in
movsb
divl
pop
nop
cmp
xorb
add
and
aas
and
jo
icebp
mov
jb
hlt
aad
jnp
cmp
inc
xchg
mov
pop
mov
lea
into
jns
push
in
mov
xlat
and
in
frstor
xchg
lahf
movsl
sbb
enter
jp
pop
sti
dec
inc
fdivrs
mov
xchg
jmp
loopne
stos
mov
ficomps
mov
and
rorb
stos
sbb
xor
mov
ja
lret
lret
mov
mov
mov
scas
outsl
out
into
xlat
push
push
fldt
lea
cmp
jg
dec
flds
ficoms
movsl
xor
divl
xchg
test
cmpsb
scas
cmp
movb
std
outsb
xchg
sbb
insl
gs
movsb
mov
repnz
cmp
pop
pop
xor
add
out
dec
into
inc
and
adc
subl
loope
sbbl
aas
jo
jl
jmp
clts
jl
aad
scas
pusha
or
add
in
sub
not
imul
push
xor
xchg
sbb
or
jg
minps
push
and
loop
scas
pop
mov
mov
jp
shrl
jmp
hlt
mov
mul
mov
outsb
and
add
inc
fmull
movsl
sbb
sbbb
daa
xor
jns
xchg
xchg
icebp
fcmovnb
out
xchg
in
sub
pop
mov
cmp
int
or
or
pop
mov
jmp
imul
mov
sub
ljmp
sbb
jo
dec
inc
lds
dec
inc
icebp
addr16
fs
iret
call
jae
xor
nop
cs
jae
xor
push
adc
mov
jne
clc
jmp
push
sbb
test
mov
rorb
fwait
hlt
inc
pop
pop
mov
xlat
and
add
xchg
addb
jnp
mov
jle
or
cmpsb
fdiv
sarb
repz
in
sbb
lods
fwait
fs
lods
jmp
enter
mov
lret
cmp
mov
and
leave
jae
iret
fistl
pop
inc
jb
jmp
lcall
mov
pop
fprem
jo
aam
out
cmp
or
push
fnstsw
sbb
imul
mov
aas
sub
ror
mov
in
add
stos
loopne
cld
jecxz
insl
inc
mov
pop
imulb
cmpsl
or
cli
jne
ds
cmp
in
adcl
xor
xor
mov
mov
mov
in
push
add
out
insb
imul
fistps
daa
lods
mov
dec
dec
push
scas
sub
sbb
and
mov
in
pop
jp
add
test
mov
fcoml
leave
sbb
cmpsb
filds
dec
lods
sbb
and
imul
lods
adc
and
shlb
sub
arpl
add
mov
mov
jp
sbb
lret
sarl
mov
xor
std
sub
add
out
lods
test
xchg
das
lret
cmc
leave
push
mov
shlb
es
xchg
orl
mov
insl
shll
add
aam
mov
inc
and
nop
lock
lahf
xchg
push
mov
dec
xchg
inc
icebp
ljmp
cmpsb
out
lcall
imul
lcall
arpl
stos
cltd
adc
jae
mov
clc
test
pop
call
and
cltd
aad
leave
dec
scas
adc
and
dec
mov
dec
cmp
jmp
sahf
lret
adc
jmp
jge
add
jno
adc
insl
mov
out
inc
adc
pop
testl
loopne
js
sbb
jge
pop
aad
xchg
xchg
addl
stc
hlt
js
dec
repnz
xchg
cli
sbb
pop
fildl
xor
in
unpcklps
cmp
cld
movsl
adc
popa
in
in
out
push
mov
rcl
add
addb
push
fwait
mov
fadds
mov
sbb
repz
out
into
jecxz
pop
subl
push
ljmp
and
inc
dec
dec
loop
pusha
sbb
mov
divb
scas
cmpsb
adc
and
add
addr16
ret
pop
pop
fwait
xchg
fcmovbe
xor
add
dec
mov
enter
mov
lods
jo
dec
mov
adc
incl
cmc
lds
stc
mov
int
aad
jecxz
cmc
xor
xlat
mov
xchg
push
imul
cmpsb
js
lret
push
rcrb
ret
jmp
xor
in
arpl
pusha
pop
pushf
mov
xchg
jno
pop
ret
sub
mov
aam
xor
pushf
sahf
cmp
add
pop
push
inc
bnd
xchg
lods
adc
lods
cmp
and
or
add
jo
loope
push
jmp
pop
pop
hlt
out
jns
lds
inc
sbb
xor
inc
insl
adc
xor
push
inc
subb
js
stc
js
sbb
or
dec
fbld
pop
std
mov
ret
cltd
pop
int3
flds
aaa
inc
mov
in
fadd
inc
sbb
popf
cmp
xchg
xchg
adc
jae
pop
sarb
mov
jae
testb
aam
inc
mov
lds
fucomp
mov
cmp
mov
cmpsl
sub
int
and
jno
push
cmp
xlat
and
ljmp
out
xor
mov
mov
out
lahf
testb
inc
push
jle
cltd
std
cmp
in
xor
mov
push
es
out
mov
push
jle
in
imul
or
mov
int
mov
jno
mov
jg
bound
cmp
sub
or
cld
dec
xchg
and
enter
in
fwait
jge
adc
push
pop
fisttpl
pop
cmc
or
mov
jnp
jmp
inc
sbb
cmp
jp
adc
xor
lcall
dec
pop
addr16
js
push
sbbl
hlt
shll
test
and
push
sbb
imul
mov
arpl
jmp
rol
sbb
ss
sub
xchg
ljmp
aam
andl
jae
xchg
mov
scas
into
or
dec
sti
push
mov
adc
add
add
xor
pop
ss
add
shrb
into
js
xorl
in
mov
pause
aad
pop
dec
and
call
dec
arpl
xchg
addr16
addb
pop
out
addr16
mov
imul
movsb
or
and
push
mov
mov
push
xchg
adc
mov
adc
xor
mov
gs
lret
mov
outsb
mov
inc
decl
push
pop
sub
cmp
fnsave
cli
inc
out
cs
hlt
out
mov
pop
push
adc
push
fwait
into
add
xor
mov
mov
cmp
shrb
repz
pop
or
loope
loopne
mov
cli
testl
cs
xor
lret
add
stos
pop
mov
push
loope
sub
xor
add
pop
lret
adc
imul
rcll
sbb
in
shl
inc
in
jl
stos
cmpsl
fdivrl
loope
pop
mov
call
ss
test
lock
stos
dec
sti
jno
ja
add
xadd
cmpsb
mov
push
imul
and
insb
fcomps
and
sbb
pop
push
dec
dec
xchg
lret
sub
sub
mov
cli
mov
sbb
in
pop
js
enter
mov
sahf
or
mov
into
test
and
push
sbb
push
imul
fdivs
xchg
outsl
jo
std
sbb
ficomps
out
int3
push
fucomi
inc
xlat
mov
int
mov
mov
lret
sbb
sbb
fisubrl
shll
call
mov
sub
ror
adc
fs
and
mov
mov
in
lds
adc
ljmp
sub
std
jmp
stc
jne
call
xor
rcll
sarl
push
pop
rolb
mov
mov
rclb
sti
sbb
cwtl
sti
rorb
fiadds
xchg
mov
cmp
add
dec
adc
in
stos
add
sahf
lcall
push
jge
adc
jmp
std
mov
add
mov
mov
loope
pop
js
or
test
adc
mov
cli
add
lods
xchg
test
inc
sub
pop
xchg
lret
scas
jp
into
xchg
stc
in
inc
fiaddl
ret
inc
in
lds
xchg
hlt
cmc
pop
lock
mov
test
fmuls
sbb
push
pop
aam
adc
stos
outsl
pop
fildl
nop
inc
ss
fstpl
sbb
pop
dec
pop
jle
xchg
insl
subb
jb
sbb
add
pop
mov
movsl
or
mov
jbe
scas
lods
out
pop
gs
jp
add
popf
jne
out
jbe
dec
mov
jecxz
xchg
test
imul
clc
and
mov
pusha
lcall
scas
out
fsubs
ss
out
imul
inc
mov
xchg
cmp
cmc
mov
pop
push
mov
stos
ss
jg
push
ret
mov
mov
movl
dec
shlb
fldenv
es
nop
adc
ljmp
imul
jno
sarl
push
push
dec
and
or
popf
cmp
adcb
xchg
fidivrs
aam
shlb
and
popa
sti
xor
aas
stos
xchg
cmp
push
pushf
in
adc
in
das
adc
test
cmpl
ret
and
dec
inc
inc
fstpl
push
fistl
les
ror
mov
and
dec
rcll
and
jns
xor
sub
aad
jnp
in
std
lahf
sub
dec
sub
jno
leave
shlb
adc
cltd
imul
sbb
jmp
lods
or
inc
and
lods
mov
stc
xor
add
in
mov
mov
fisubs
push
testb
and
sbb
inc
sub
scas
mov
int
data16
leave
aad
xlat
add
je
aas
mov
dec
xor
xchg
call
js
sub
adc
pusha
push
addr16
out
pop
dec
xorl
andb
shlb
cmp
ds
es
insl
scas
out
xchg
repz
addb
mov
aas
mov
ror
mov
fdivs
andl
fst
es
jnp
push
test
gs
loop
dec
fldenv
and
mov
loop
testl
cmp
push
mov
bound
addr16
test
imul
test
mov
out
or
cltd
sub
dec
inc
in
jmp
mov
mov
js
jae
mov
ss
add
and
jl
sbb
ja
pushf
arpl
jecxz
xor
movsl
push
scas
rcll
test
mov
pop
mov
hlt
insb
fwait
scas
mov
adc
addb
nop
cmp
int3
sub
test
add
xor
and
push
adc
jp
movsl
add
aam
push
aaa
add
imul
pop
lahf
dec
jb
jo
jo
sub
xchg
repnz
pop
lret
test
lcall
jb
jbe
test
mov
inc
popf
push
std
bound
ljmp
xor
stos
xor
movsl
icebp
cwtl
rcr
pop
jae
out
mov
in
andb
lods
jmp
mov
test
sti
aad
ljmp
xchg
push
push
out
lret
in
cwtl
push
inc
push
jl
pop
xchg
dec
gs
mov
ss
mov
mov
dec
mov
nop
cmc
push
cli
repnz
lods
in
push
and
test
mov
mov
add
daa
paddd
testb
aad
jp
les
add
fs
or
loopne
sub
pushf
fsubs
xchg
cmp
mov
add
xchg
popa
inc
push
adc
aam
lock
xchg
inc
cmp
mov
loopne
lahf
mov
imul
call
dec
and
xor
dec
std
jo
and
mull
addr16
push
fwait
pop
adc
or
xor
lods
xchg
add
dec
jb
adc
outsl
mov
outsl
sub
xor
add
mov
dec
dec
mov
or
lcall
dec
cmp
jge
dec
push
or
shrl
cld
imul
mov
popa
mov
mov
cmpsb
mov
loop
sbb
cli
sub
mov
leave
sub
xor
cli
cld
test
and
mov
push
and
jno
sbb
add
dec
ret
adc
or
or
ss
cmp
test
fsubrl
inc
fidivl
or
shlb
mov
push
xchg
push
mov
fmul
gs
mov
fidivs
addr16
dec
aad
lods
or
sub
js
jp
scas
jno
sub
out
or
xchg
mov
ljmp
inc
pushf
or
pop
and
ficoml
in
mov
in
repz
jnp
or
addl
shrb
add
adc
sub
cwtl
push
sbb
adc
jecxz
stos
les
test
ss
mov
ss
inc
and
outsb
cmp
icebp
mov
idivb
mov
mov
out
fnstenv
jo
sub
js
aaa
inc
mov
adc
ja
loop
push
or
cwtl
leave
sub
stos
mov
sbb
mov
fidivl
in
js
mov
out
fnstcw
add
out
pop
xor
push
pop
fbstp
insb
mov
lock
add
xchg
mov
pop
cmp
iret
cltd
imul
fwait
cld
inc
cmp
xchg
shll
mov
and
push
aas
or
jnp
std
mov
adc
and
push
mov
negb
icebp
sub
stos
add
out
xchg
test
scas
sub
cltd
std
js
ja
stc
call
push
outsb
jle
leave
and
xchg
push
addb
adc
mov
sbb
shlb
add
mov
call
out
ficompl
arpl
pop
stos
aas
stos
data16
dec
pop
aas
sbb
or
jae
push
aaa
or
or
pusha
movsl
jae
repnz
ds
add
dec
mov
inc
mov
jg
adc
push
mov
loopne
popf
nopl
sahf
adc
fcmovne
cld
and
getsec
dec
pop
mov
mov
push
jmp
filds
cli
sti
mov
les
sub
daa
adc
or
data16
call
sbb
fnstenv
into
rol
mov
mov
pop
mov
add
jge
out
cmpsl
loopne
daa
lods
mov
inc
ret
cltd
mov
fwait
sub
jns
or
out
adc
insl
mov
xchg
imul
pop
hlt
stos
testb
xor
cmpsb
loopne
pop
mov
mov
jae
lcall
icebp
scas
adc
fldcw
adc
les
test
dec
cmpsb
ficoms
add
lods
ret
pop
xchg
or
enter
mov
and
add
sti
test
mov
repz
dec
icebp
ja
mov
cwtl
add
in
repnz
cmpsb
scas
push
inc
add
inc
adc
call
into
cli
sub
and
jg
lods
data16
into
sarb
outsb
pop
push
jecxz
in
and
cli
out
js
mov
add
aas
push
push
push
fs
outsl
cld
sbb
aas
out
std
out
pop
inc
ds
movsl
jmp
mov
and
adc
mov
icebp
nop
or
in
inc
js
insb
mov
add
and
sub
loop
lods
adc
jge
adc
cwtl
mov
xor
mov
pop
js
pusha
mulb
mov
xlat
arpl
rcrl
and
rclb
pop
insl
push
lret
xor
ja
data16
shlb
xchg
test
ljmp
mov
push
stos
popf
cmp
inc
cltd
fldl2e
or
movswl
out
fs
cwtl
je
cltd
es
jo
sbb
mov
js
test
out
push
ljmp
sub
jae
push
pop
lods
mov
add
push
fwait
out
outsb
dec
or
mov
push
sbb
insl
scas
cmp
cmp
cmp
repnz
inc
out
orl
shrl
std
inc
mov
xor
gs
std
xchg
enter
xchg
cmp
push
insl
or
sub
movsb
imul
pushf
nop
or
pop
cltd
add
popf
pop
cmc
and
add
loop
sbb
arpl
adc
fisubrs
idivb
into
sti
add
push
lods
cld
mov
push
inc
ret
xchg
sti
mov
movsb
dec
sbb
jl
cmp
xchg
stos
pop
aaa
xorb
push
fildl
xchg
sub
add
or
jns
rorl
inc
scas
push
inc
stc
pop
cmp
xor
cmp
sub
and
popa
dec
add
pop
push
mov
hlt
mov
aas
sbb
dec
mov
popf
mov
push
je
das
mov
inc
pop
or
mov
push
or
push
sub
dec
movsb
movsb
icebp
xchg
cwtl
fstpt
adc
cmpsl
je
inc
ficomps
dec
in
cltd
clc
stc
test
rcr
in
add
jge
mov
and
in
fisttps
test
or
fadds
and
das
js
dec
pop
clc
outsb
dec
lods
insl
mov
test
dec
jg
out
es
mov
cmp
iret
push
fdivrs
lcall
push
bound
xchg
shlb
push
ss
mov
js
loopne
add
in
cmp
xchg
lahf
cltd
ficoml
orl
pop
jmp
stc
sub
adc
xlat
cltd
jle
xor
dec
xor
push
leave
pop
adc
and
clc
dec
push
adc
int3
gs
fidivrl
bound
test
xchg
cltd
stos
sbb
sbb
psubusw
push
cltd
inc
lahf
or
lret
insl
adc
sahf
fcomps
push
daa
addr16
ss
in
xor
jo
call
shl
or
jge
insl
dec
sub
fcomps
idivl
jmp
mov
sub
cwtl
jnp
jns
add
jp
mov
out
xchg
mov
ds
imul
aam
adc
ds
cltd
mov
mov
in
xchg
sbb
int3
dec
push
lret
ljmp
int3
push
movb
fcompl
push
or
mov
push
pop
out
jb
sti
ss
adc
jl
xchg
xor
in
add
stos
sub
push
testb
loope
mov
or
push
push
ds
sbb
pusha
jb
adcl
mov
fsqrt
sbb
in
test
outsb
jae
cmp
jno
fstps
xchg
cltd
dec
and
cmc
xor
sub
rcrb
adc
add
jmp
push
int3
ficomps
lock
mov
dec
push
push
xor
mov
xor
aas
decb
jo
sub
push
std
inc
shlb
mov
jle
mov
outsl
lahf
dec
rcrl
pop
mov
jo
inc
xor
pop
mov
xchg
rcrb
nop
ficoms
repz
or
jg
cmpsl
repz
test
or
mov
pop
inc
add
add
int
add
div
mov
in
mov
xchg
push
sub
inc
js
pop
add
xchg
mov
pop
push
movsb
jle
dec
test
das
add
and
pop
add
lock
push
int
push
divb
mov
xor
inc
fnclex
sbb
jl
sbb
call
repnz
cmpsb
fnstenv
jne
xchg
inc
gs
inc
lret
fdivs
mov
add
or
xlat
out
jne
cmp
dec
das
iret
sbb
mov
xchg
mov
incl
in
adc
insl
outsb
xchg
and
adc
ret
jae
inc
add
lcall
sub
hlt
movsb
xor
inc
mov
insl
pushf
pop
mov
bnd
pop
mov
lahf
lods
push
cmp
mov
lcall
pop
test
or
lods
or
xchg
subl
pop
cwtl
ljmp
adc
mov
inc
cmpsb
fisttps
mov
or
cwtl
imul
jne
mov
loop
push
aad
jne
push
xchg
jg
push
int
loope
pop
add
scas
js
mov
ljmp
mov
push
cli
lahf
jge
sbb
push
fidivl
frstor
leave
lcall
jns
mov
mov
clc
hlt
cmc
js
cmpsb
lea
jmp
jle
jns
out
cli
imul
and
test
fldt
and
popf
mov
call
xor
test
out
mov
or
or
lcall
faddl
es
aad
and
lret
lea
movsl
cltd
jae
pop
inc
pop
or
pop
xor
bound
leave
std
pop
jecxz
mov
das
lock
lods
pop
xchg
out
insb
icebp
lods
jns
ret
rol
ja
repz
mov
cld
in
xchg
jns
cmp
adc
sub
xchg
pusha
sub
pusha
gs
out
call
cli
lods
pop
cmp
les
lea
cmpl
mov
pop
fimuls
jle,pt
lods
jae
mov
jmp
lods
gs
inc
xchg
inc
rcll
push
cmpsl
aad
adc
popa
aam
sti
js
xchg
xchg
mov
xlat
dec
pop
pop
stos
mov
sahf
xchg
das
cmpsb
sahf
inc
lods
sub
dec
mov
xchg
dec
mov
dec
jecxz
mov
cltd
mov
test
or
cmpsb
pop
mov
movsl
sub
jmp
push
fisubrl
xor
or
stos
in
push
mov
ret
pop
jecxz
dec
mov
jecxz
mov
lret
jp
mov
mov
cmp
mov
sub
jno
int3
xchg
mov
sub
ficomps
and
mov
insl
and
call
mov
mov
lock
adcl
movsl
sub
sti
in
std
fsubr
mov
leave
cli
pop
fldt
cmp
cmpsb
mov
ljmp
mov
in
mov
ret
inc
mov
repz
test
rcl
pop
iret
inc
adc
jp
mov
mov
pusha
inc
jg
and
stos
pop
mov
out
iret
and
dec
out
xor
adc
mov
jbe
test
xor
push
and
sub
shll
and
jae
adc
pop
add
xor
mov
or
js
sbb
push
rolb
cmpsb
cld
xchg
test
xchg
push
loope
cli
imul
xchg
add
mov
xlat
int3
in
fwait
movsb
fs
xchg
rolb
jmp
aad
sbb
lock
rorb
in
push
jo
cmp
mov
std
jbe
pop
sub
xchg
lock
test
sub
leave
js
xchg
ja
xchg
sub
ret
inc
mov
in
fidivs
or
and
addl
pop
movl
out
cs
pop
jmp
pop
repz
rclb
dec
inc
scas
clc
clc
push
fstpt
sbb
add
or
enter
stc
in
shl
cwtl
int
out
xchg
pop
push
fcompl
dec
sti
mov
lea
andl
icebp
mov
lret
inc
inc
sub
mov
addr16
or
push
dec
fcompl
bound
lock
push
cld
sbb
loop
jno
or
adc
mov
orb
mov
sbb
sbb
and
jl
sbb
fsubs
mov
enter
pop
clc
inc
pop
cmp
adc
dec
push
dec
dec
fwait
and
mov
lret
and
popf
push
sub
cmpsl
movsl
stos
ror
mov
pop
mov
adc
jmp
stos
out
outsl
xlat
push
add
leave
movsb
mov
nop
sbb
mov
fcmovbe
out
mov
sbb
je
mov
cmp
fbld
movsb
fistps
jecxz
out
xor
mov
andl
dec
loopne
aad
push
scas
negl
pusha
pop
xlat
pop
pop
jge
adc
aaa
sbb
pop
xor
insl
hlt
xchg
clc
adc
testl
mov
into
dec
dec
sub
movsb
bound
in
lcall
imul
mov
jnp
dec
in
mov
outsl
inc
nop
jle
insb
mov
mov
inc
push
movsb
xchg
jns
xchg
rcrl
xchg
inc
sbb
push
sar
cmp
push
pop
jb
mov
mov
das
adc
sahf
pop
mov
mov
sbb
dec
stos
inc
loopne
insb
int
inc
ja
fdivrl
mov
sbb
inc
addr16
mov
add
adc
jns
push
movsb
lock
ds
div
jo
jge
imul
int
leave
out
cli
daa
xor
leave
incb
xor
mov
fistl
int
jecxz
outsl
mov
out
cmpsl
add
xchg
mov
lret
pop
scas
mov
dec
jnp
cmp
fwait
aam
out
pop
int3
lcall
mov
ds
outsl
je
cwtl
loopne
jb
rcrl
mov
fidivrs
mov
sbb
outsb
push
pop
or
xchg
ja
cmp
cli
idivb
jl
movsl
pop
aam
call
adc
or
out
repz
add
mov
add
push
xchg
stc
in
push
std
stos
mov
mov
jg
scas
cmp
mov
scas
push
push
stos
adc
and
fildll
test
stos
mov
mov
pushf
push
je
ret
out
jns
dec
or
lods
loope
xchg
ljmp
push
lret
mov
sub
das
push
push
or
cwtl
jae
and
aaa
test
cmp
mov
lret
xchg
std
call
lcall
stos
test
push
js
out
repnz
jo
inc
cmpsl
insl
out
jge
sbb
aas
in
and
cli
jo
add
sarl
mov
int3
insb
subl
push
data16
pop
lret
sub
sahf
inc
scas
mov
cmc
hlt
xchg
data16
add
cmpsb
mov
loopne
xchg
adc
scas
cmp
sbb
in
jo
xor
adc
add
cmp
push
outsl
mov
mov
aad
pop
repnz
add
int3
addr16
xchg
decb
adc
cmc
out
iret
push
and
cwtl
push
das
in
push
mov
movsl
mov
jl
xchg
adc
push
fisttpl
jno
in
fbld
lods
sbb
mov
scas
jno
sub
fstl
cmpsb
xchg
int
mov
enter
int
xor
aas
push
aaa
dec
xor
test
ffree
out
fs
dec
aad
movsl
pusha
pop
mov
popa
cltd
test
mov
jnp
pop
adc
add
test
jne
mov
es
pop
pop
pop
sub
adc
pop
lret
inc
xchg
jae
add
in
jmp
cwtl
es
dec
sub
repnz
jb
mov
mov
lea
push
dec
push
pop
sbb
notb
pop
ret
mov
test
mov
cltd
loop,pn
sahf
int3
mov
push
std
hlt
jg
out
mov
jl
test
outsb
cmp
int
bound
aam
mov
adc
sub
fstl
and
cmpsl
cmp
xchg
sbb
cmc
pop
and
mov
and
inc
mov
subl
xchg
jl
ds
movsb
adc
out
rol
mov
negb
jl
fidivrs
and
mov
mov
mov
xor
movsl
push
and
or
xchg
aas
jno
adc
pop
push
and
xlat
cmp
in
leave
xor
addr16
inc
xchg
pop
pop
outsl
jb
add
and
mov
ja
rcll
pop
arpl
jecxz
cwtl
lret
repz
mov
cmp
pop
loopne
dec
out
mov
aad
mov
ret
xchg
je
sti
std
iret
push
sbb
sti
mov
cmp
test
push
mov
pop
mov
pop
mov
sbb
imul
sahf
jp
or
notb
xchg
andl
mov
test
pop
xchg
popa
addl
aaa
lds
sbb
push
and
loop
dec
jb
pop
mov
iret
out
sub
push
dec
insl
or
cmpsb
xor
mov
inc
sbb
jle
jmp
in
xchg
cld
mov
cld
jl
and
and
jp
sbb
lds
xor
lock
imul
xchg
call
inc
cmp
test
jl
pop
xlat
js
pop
sahf
aad
mov
test
inc
into
bound
sbb
mov
xor
scas
dec
pop
ret
xor
mov
movb
lcall
dec
ds
sub
cmpsl
jmp
in
lods
aad
mov
xlat
outsb
ljmp
cmp
mov
add
jnp
test
lcall
xchg
cmpb
push
shrl
int3
aad
mov
lods
test
sub
push
mov
push
cli
xchg
cltd
cmp
xor
insb
mov
std
movsl
and
test
aad
ror
int3
ja
lods
pop
ja
dec
cwtl
stos
and
jl
pop
xchg
sub
fnsave
fwait
mov
mov
mov
cmp
mov
in
sarb
lret
jns
adc
lock
fwait
in
test
imull
sbb
cltd
xor
sub
sbb
or
mov
data16
xchg
inc
adc
mov
push
adc
mov
adc
cmpb
shl
lds
fldt
shll
push
dec
mov
inc
inc
mov
in
lods
pop
loopne,pn
jb
loope
push
jo
jp
sbb
mov
loopne
in
pusha
mov
sbb
and
fsubl
out
shlb
repnz
stos
and
inc
jb
sbb
ret
or
cmp
stos
rcl
adc
cwtl
xchg
sub
push
mov
mov
and
pop
sbb
loop
push
dec
xor
bound
js
std
mov
mov
push
xor
xchg
and
leave
xchg
stc
test
loope
es
pop
cli
push
jge
mov
ret
cli
dec
test
mov
negl
add
inc
daa
int
mov
or
into
mov
loopne
mov
testl
lret
mov
add
dec
dec
fs
xor
stc
inc
cmp
or
pop
xchg
enter
stc
nop
je
in
push
adc
test
sub
pop
inc
hlt
iret
add
pop
aam
aam
jp
sbb
sbb
in
stos
cmpsb
movsb
cld
subb
push
fisubrs
movsl
ficoms
ss
aas
push
push
lcall
gs
mov
sbb
cmpsl
addr16
fdivrs
hlt
lds
mov
and
mov
decb
lret
lods
add
mov
sbbb
pusha
jge
je
cltd
inc
ret
cmp
xchg
bound
addr16
xor
cld
aaa
movsl
call
jbe
ja
sub
add
xlat
xor
sub
push
into
call
pusha
int
push
std
mov
insb
in
mov
sahf
sbb
sub
mov
push
ss
imull
movd
xor
mov
adc
repnz
xor
repnz
sub
mov
adc
sbb
push
sbb
shlb
jne
hlt
dec
lahf
movsb
mov
dec
shl
mov
cmc
mov
mov
or
roll
into
xchg
xchg
enter
push
mov
inc
ret
mov
add
int3
sahf
jle
push
and
add
cmp
int3
arpl
test
mov
inc
imul
or
ret
repnz
mov
neg
fwait
dec
inc
add
add
mov
test
lcall
arpl
jle
mov
pop
insb
bound
sbb
adc
outsb
loope
lock
ss
clc
lods
pop
call
push
and
mov
lcall
in
ret
dec
jle
bound
jl
cmp
cli
loop
mov
cmp
ret
cs
sbb
add
jge
jle
push
cltd
enter
aad
add
xorl
lret
hlt
data16
add
pop
cwtl
sbb
dec
xor
add
iret
mov
and
cmp
add
ret
and
xor
xchg
add
jle
cmp
adc
lret
push
mov
dec
xor
outsb
test
mov
dec
xchg
repz
pop
inc
das
push
test
fs
sbb
popa
lds
xor
out
adc
add
test
cmp
xchg
push
fstps
insl
sub
mov
nop
add
adc
lods
lods
pop
shlb
gs
cmp
push
stos
clc
dec
lret
mov
iret
clc
push
adc
push
das
js
push
fcomp
arpl
push
mov
hlt
xchg
outsl
fwait
minps
inc
jl
cs
in
cmp
dec
outsb
pop
mov
and
addr16
imul
movsl
daa
loopne
inc
into
gs
or
mov
fadd
push
cs
mov
stos
dec
out
ljmp
pop
pop
push
adc
and
mov
xchg
test
cmp
lds
movsb
mov
xor
dec
ljmp
in
inc
and
cli
std
daa
mov
out
add
mov
add
push
sbb
aam
out
sbb
mov
outsw
cmpsb
dec
sub
xchg
xchg
push
js
out
mov
enter
cld
in
pop
push
push
xchg
andb
movsb
or
mov
mov
push
lea
add
std
add
pushf
cld
adc
shll
movb
push
sbbl
scas
dec
jb
adc
sub
adc
in
ds
xor
imul
leave
sub
cld
pop
and
ret
in
and
xor
jmp
mov
fcmovnbe
inc
pushf
cmp
shll
daa
iret
lret
push
fwait
push
in
pop
adc
ret
dec
test
add
mov
outsl
pop
sahf
push
add
mov
add
scas
mov
icebp
dec
push
mov
push
inc
jns
add
mov
xchg
jmp
or
cli
into
movsb
cmp
adc
hlt
cmp
sub
jecxz
aas
sub
or
jmp
inc
rcrl
loopne
jne
xchg
sbb
xor
adc
rcrl
shr
xchg
mov
cmpsl
int
xchg
xchg
testl
fsubrl
push
sbb
dec
int
test
je
ja
sub
xchg
jecxz
mov
dec
rcrb
lds
adc
fs
inc
xchg
inc
mov
test
inc
inc
adc
dec
fdivrl
js
push
fsubl
adc
push
xor
js
cmpsb
push
test
fnsave
inc
stc
xor
mull
pop
insl
fstp
arpl
jp
xchg
ret
inc
jo
and
scas
jecxz
and
insl
jnp
mov
fldt
int
xor
sbb
icebp
pusha
dec
add
mov
stos
outsb
cmp
sarl
out
lods
add
xchg
imul
fnstenv
cmc
add
ret
dec
sbbb
cmpsl
cmpsb
push
adc
xchg
mov
aam
dec
clc
mov
mov
adc
out
sub
and
sbb
push
push
popa
stos
fisttpl
jecxz
dec
jmp
aas
out
mov
mov
add
inc
pop
jmp
add
jl
mov
rorl
sbb
jnp
in
push
out
push
outsl
sbb
adc
stos
pop
cmp
aas
repz
cmp
mov
mov
inc
and
sub
mov
and
jge
scas
fidivl
mov
pop
jnp
xchg
xchg
push
pop
cmpb
in
mov
cltd
mov
popa
aad
xchg
or
push
out
cs
push
inc
popa
outsb
in
xchg
or
mov
shl
les
cs
sbb
out
or
lret
ss
int
jns
sbb
fidivrs
ds
ret
stos
push
pushf
fwait
roll
pop
or
sub
add
jmp
inc
jo
sub
inc
dec
mov
insb
out
outsl
and
arpl
xor
push
incl
popa
cwtl
into
cli
out
and
lcall
adc
adc
fists
movsl
pop
or
out
xchg
push
pop
call
and
fcoms
jbe
popf
in
cld
sub
adc
dec
dec
dec
and
stc
add
into
xchg
mov
ja
pop
pop
push
jae
cmpsl
outsl
mov
pop
adcl
test
int3
jb
mov
rcrb
mov
fiadds
pop
mov
gs
inc
lret
and
data16
shlb
imul
jne
lret
in
clc
ljmp
cmp
mov
push
lock
and
xchg
mov
jb
mov
addr16
mov
test
adc
jecxz
hlt
jo
mov
and
outsb
xchg
or
sbb
xchg
and
pop
jl
mov
push
mov
ret
das
sub
dec
xor
jns
mov
adc
push
mov
pop
ja
push
in
sub
mov
sbb
stos
adc
ficoml
out
jae
das
xor
mov
imul
lods
push
test
roll
inc
push
inc
out
cmc
jb
sub
adc
je
insl
mov
leave
lret
cmp
loope
outsl
lea
add
sahf
push
dec
in
add
sub
mov
mov
ja
sbb
sbb
lea
xchg
mov
mov
push
sub
cmpb
xchg
inc
push
mov
imull
sub
pusha
movsb
mov
mov
cld
xchg
lods
test
xor
push
mov
ds
lret
cld
jmp
pop
jle
sub
xchg
jnp
popa
je
sub
cmp
inc
nop
hlt
cltd
mov
jmp
sub
dec
mov
lds
pop
mov
daa
test
arpl
mov
mov
add
pop
adc
xchg
mov
push
test
in
mov
adc
xchg
loope
pop
ja
or
arpl
loop
dec
fcomps
lods
dec
mov
sbb
leave
xor
mov
fstpt
xchg
es
push
mov
push
jl
mov
or
inc
push
xor
mov
cmp
fwait
orb
xlat
jnp
add
movsb
into
loopne
xchg
ret
loopne
xchg
lret
mov
dec
gs
stos
repnz
push
in
out
ja
test
sub
mov
ja
filds
arpl
lret
notb
jl
js
ret
in
gs
adcl
jae
imul
or
decl
jb
mov
aad
xor
int3
push
sti
cmp
and
jne
inc
xor
and
push
fadds
pop
pop
and
and
in
push
stos
hlt
mov
xor
mov
xor
xchg
or
dec
sbbl
or
and
in
sahf
es
jns
fdivl
dec
mov
cmp
in
cmp
popf
sbb
mov
mov
jmp
sub
inc
push
xchg
jecxz
mov
popa
inc
mov
sbb
inc
mov
dec
adc
sbbb
ret
add
mov
push
pop
mov
push
out
sbb
int3
adc
pop
cmp
mov
mov
mov
push
pop
jnp
lods
mov
hlt
jle
lock
push
cltd
sbb
arpl
mov
loop
in
scas
cmp
call
push
jg
xlat
cmp
jae
inc
pop
pop
movsl
mov
inc
mov
jp
sahf
pop
imul
fs
ret
test
imul
je
push
fs
or
inc
lahf
into
push
loopne
icebp
dec
loopne
pop
ja
xor
adc
dec
aas
in
fiadds
imul
jbe
push
hlt
cltd
in
loop
mov
outsl
pop
fdivp
jns
scas
adc
jae
push
je
sub
std
out
push
sub
xchg
push
lcall
sbb
adc
xchg
jecxz
aad
jg
mov
jo
sub
mov
mov
mov
and
mov
mov
push
loope
sahf
lock
fiaddl
jnp
clc
push
xor
sub
es
jbe
lahf
push
jmp
nop
xor
add
or
lahf
jmp
into
enter
cltd
sbb
jbe
pop
mov
pop
inc
pop
ss
xchg
mov
in
cld
or
dec
jmp
push
stc
cmpsl
dec
sub
mov
sub
rorl
repnz
lret
xor
in
in
push
dec
mov
fisttpll
push
xchg
aam
or
jns
cmp
popa
xchg
sbb
and
ljmp
xchg
add
dec
popf
push
imul
or
std
mov
rorb
and
test
cmp
loopne
sub
ret
in
inc
jo
mov
es
xor
repz
mov
sub
dec
push
jno
add
xor
push
push
xor
ja
stc
and
imul
lea
push
es
and
jp
into
mov
mov
mov
xor
jo
mov
sbb
cmp
outsb
je
repz
lods
or
xor
mov
repnz
inc
roll
cmc
lods
mov
lret
ror
inc
cmp
mov
inc
gs
shr
adc
jae
test
sbb
pop
sbb
xchg
sbb
inc
lods
and
fists
inc
inc
scas
push
arpl
mov
loope
sbb
loop
cmp
fwait
movsl
call
into
mov
hlt
enter
xor
xor
inc
pop
cmpsl
leave
in
mov
imul
cltd
adc
fistl
aam
or
loope
cmp
adcb
pusha
movsb
add
lods
add
mov
mov
gs
lock
mov
mov
ret
adc
pusha
outsl
adc
xor
pop
int3
xchg
xchg
outsb
ja
push
stc
fimuls
cmpsb
in
faddl
jle
or
pushf
movsl
add
push
lret
lret
mov
push
mov
jb
fcmovnu
pusha
mov
inc
scas
test
mov
lcall
sub
repnz
loopne
sbb
jbe
sub
rcrb
pop
ss
test
or
and
cli
orb
jne
or
data16
cwtl
loopne
out
in
cmp
xchg
aam
push
js
fidivrl
push
sub
jecxz
fstl
add
shlb
adc
in
jmp
movsl
lods
add
test
mov
inc
call
inc
pop
cltd
loope
mov
in
or
test
mov
mov
pop
pop
out
int3
fwait
mov
push
mov
scas
rcll
mov
jns
dec
lcall
daa
hlt
stc
gs
dec
dec
stos
shrb
pop
inc
xchg
push
repz
dec
testl
push
push
es
dec
jmp
mov
xchg
cltd
in
sti
jno
xor
sbb
mov
dec
mov
xor
test
icebp
fdivl
fisttps
mov
in
sbb
aam
mov
call
push
daa
sahf
jmp
lret
push
jg
in
aam
sbb
aad
mov
cmp
decb
cld
cs
push
int
ljmp
lcall
lds
outsb
stos
push
jmp
sti
outsb
fnsave
hlt
jg
daa
fdivrl
test
mov
xchg
push
aad
sbb
xor
nop
rcll
pop
pop
adc
lods
dec
or
aaa
xchg
outsb
mov
xor
mov
mov
in
mov
sub
sbb
sbb
test
mov
jo
xchg
jg
into
ja
jbe
or
aam
xor
sub
mov
pop
sti
es
rorl
add
mov
adc
je
loope
out
pop
mov
lcall
dec
sub
and
test
mov
and
add
xchg
lods
lea
add
mov
lcall
push
nop
jg
add
mov
cmpb
and
std
pop
dec
adcb
out
bound
cmpsl
sub
pop
repnz
mov
pop
push
push
int
push
pop
call
dec
aad
imul
mov
or
push
pop
lret
arpl
fisubrs
lret
sub
add
imul
mov
xchg
mov
sub
jmp
jmp
sbb
cmp
jg
push
mov
lahf
test
fwait
outsl
aas
daa
sub
subl
jnp
lods
mov
push
jae
xchg
popa
mov
jl
es
out
adc
push
adc
pushw
ret
fstl
shlb
lds
sub
or
jmp
in
aad
push
test
dec
adc
sub
imul
cmp
aas
sbb
and
std
and
adc
sub
shr
mov
add
jmp
fsubrs
xor
add
mov
mov
pop
lods
xorb
sbb
xor
or
xor
and
rcrb
mov
pop
jbe
insb
and
leave
mov
pop
in
daa
jbe
mov
imul
inc
adc
inc
inc
sbb
insl
jecxz
sbb
imul
ljmp
lods
clc
or
ss
lock
sub
fcmovnu
mov
push
or
mov
test
dec
mov
mov
lahf
jno
adc
dec
or
movsl
dec
pop
mov
inc
pop
xor
mov
stos
inc
or
lret
test
test
jbe
jo
nop
push
es
jp
jge
fcomps
mov
pop
fwait
mov
enter
or
jo
adc
push
sbb
aad
xlat
mov
push
outsl
rorb
data16
fs
add
ja
cmpb
cmpsl
test
loope
pop
adc
enter
clc
pop
mov
fstpt
outsb
mov
mov
sub
fcomip
imul
cmp
les
popf
andb
sahf
jle
aad
cmp
adc
nop
adc
push
mov
fld
jns
jae
or
and
mov
movsl
scas
pusha
fsubl
sub
bound
push
and
adc
pop
adc
mov
xchg
push
mov
jge
push
add
jns
stos
in
or
ret
sahf
iret
ljmp
mov
lret
mov
stos
xor
xchg
sub
ss
pop
neg
inc
or
or
icebp
xor
add
or
push
pop
shr
movsl
cmp
lahf
sbb
xchg
cli
in
fwait
sarb
iret
push
push
sbb
and
mov
mov
insl
icebp
icebp
inc
es
loop
sub
push
iret
xor
xchg
sub
cmp
sub
pop
and
push
fbld
scas
pop
jmp
and
push
inc
adc
jge
xlat
cmp
nop
adc
aad
mov
mov
vucomisd
test
testl
ljmp
ret
out
mov
cmp
inc
cld
inc
xchg
push
test
sbb
cs
test
enter
lods
ret
or
vandnps
pop
mov
jnp
insb
rol
call
mov
mov
push
nop
stos
arpl
sbb
push
push
jb
push
imul
stos
ja
mov
ds
fs
sbb
fxch
inc
sbb
daa
mov
and
je
mov
stos
shlb
int
push
and
outsb
stos
adc
jmp
push
sub
jo
sbb
lods
push
enter
adc
inc
sbb
mov
ret
dec
dec
lods
add
jnp
fisubl
loop
out
mov
push
shrb
cwtl
movsl
loopne
or
inc
popl
mov
testb
xchg
stc
jle
popf
and
std
jns
fcmovne
xchg
and
rorl
mov
and
add
pushf
lahf
push
aaa
test
adc
ljmp
xor
das
jne
jp
out
xchg
test
xchg
enter
mov
and
xor
aas
xchg
aas
mov
out
fists
cmc
inc
out
and
xor
fldenv
push
dec
cwtl
pop
lahf
inc
sub
es
xchg
or
lret
mov
adc
faddl
jae
mov
adc
fs
sub
test
mov
sub
jae
push
and
xor
cmp
loopne
xchg
add
shrb
jns
rcr
mov
lods
inc
enter
xor
inc
push
jecxz
dec
mov
aaa
test
stc
lret
mov
roll
adc
xlat
dec
stc
lahf
test
sbb
mov
or
jl
or
cmp
daa
or
jne
aam
scas
sbb
es
mov
dec
mov
and
and
clc
sbb
or
push
stos
shl
cmpsb
sub
xchg
dec
jns
xor
push
mov
sahf
mull
imul
movsb
mov
inc
popf
add
mov
mov
push
mov
push
daa
fsub
inc
pusha
jnp
stos
pop
mov
setle
adc
icebp
repz
dec
ficompl
fidivrs
push
test
add
mov
adc
push
pop
rclb
adc
fwait
xchg
nop
push
dec
mov
adc
push
mov
shl
mov
cmc
push
xchg
cmp
add
or
dec
adc
mov
fldl
adc
jae
push
sub
mov
arpl
fdivl
jmp
add
aad
neg
inc
xchg
loop
lods
sub
and
leave
mov
insb
clc
mov
fs
insl
idivl
jle
test
in
repz
mov
add
bound
adc
jp
stos
lret
mov
and
mov
movsb
mov
mov
stc
sbb
shrl
pop
sbb
jnp
sarl
inc
sahf
repnz
shll
mov
inc
insb
pop
mov
pop
inc
or
sub
pop
shl
pop
adc
sti
or
push
pusha
mov
xchg
dec
pop
ljmp
fadds
xchg
cli
dec
out
dec
insb
jecxz
jp
mov
lcall
xchg
sub
int
mov
test
inc
gs
es
lret
jnp
xor
scas
jbe
sub
fldl
mov
imul
test
movsl
and
pop
mov
movd
cmc
sbb
adc
dec
pushf
add
jp
sbb
rolb
push
xchg
repnz
divl
or
lahf
movsb
jnp
add
mov
xorb
je
mov
mov
aas
faddl
mov
call
pop
int3
jno
imul
out
out
inc
aaa
mov
fstpl
push
pusha
mov
and
mov
dec
and
xchg
pop
or
and
sbb
mov
mov
cmp
push
in
aas
aam
aam
mov
hlt
scas
push
push
add
dec
add
jmp
adc
ja
lret
ja
mov
inc
rorl
push
ds
stos
sbb
xor
lds
dec
ret
mov
sti
out
lds
pop
jbe
sub
jo
and
cmp
cs
out
mov
mov
cmpsl
cld
sbb
cmpsl
dec
dec
aam
push
jb
jle
jg
add
or
enter
lret
cmp
xchg
aas
test
or
jmp
pop
mov
mov
imul
filds
fs
xor
decb
in
cmp
out
push
test
xchg
lret
xlat
xchg
call
std
xchg
jmp
imul
imul
arpl
fmul
outsl
jmp
xor
movsb
mov
push
outsb
sbb
or
cltd
imul
push
jbe
sub
aam
fildll
xchg
cmp
das
mov
cmpsl
sbb
in
setb
repz
push
negb
dec
daa
movsl
mov
inc
js
int3
sbb
mov
xor
jle
andb
loop
pop
int
inc
adc
mov
push
jge
ret
rcrl
push
test
test
lcall
scas
mov
mov
int3
lea
cli
xchg
in
mov
xchg
inc
sbbb
fwait
dec
test
je
push
and
sub
js
xorl
inc
jg
add
inc
mov
arpl
sub
adc
add
inc
dec
mov
adc
jge
mov
mov
outsl
pop
movsl
xchg
dec
push
pop
mov
iret
js
out
adc
push
scas
xchg
xor
mov
mov
add
dec
xchg
pop
out
dec
imul
cld
lret
xor
cwtl
fldcw
mov
lahf
pop
fldt
mov
leave
cld
test
stc
jle
les
mov
fsubr
inc
jecxz
loopne
iret
stc
roll
and
inc
lcall
add
arpl
aaa
in
inc
dec
out
cwtl
ja
add
or
mov
imul
mov
push
sub
push
dec
jae
mov
push
jmp
movsb
lahf
lods
outsl
sub
xor
sbb
jns
xchg
cltd
pop
cmc
push
dec
data16
test
mov
mov
lcall
cltd
jo
inc
imul
cs
or
rclb
fwait
gs
inc
pop
mov
insl
push
rcll
inc
xor
push
dec
popf
insl
andb
jns
int
jle
adcb
stos
out
std
xor
in
adc
dec
add
out
addr16
fcoms
adc
inc
and
xor
aas
mov
inc
out
xchg
mov
xor
add
lahf
in
push
pop
popf
dec
fists
cli
add
ficomps
insb
push
mov
pop
sbb
xchg
xchg
xchg
arpl
cltd
sbbl
in
mov
mov
add
pop
daa
mov
xchg
dec
loopw
loope
int
lock
sbb
cmp
sub
and
ljmp
mov
in
mov
push
ss
test
mov
scas
pusha
push
lcall
push
sub
mov
ja
frstor
test
dec
cli
mov
push
scas
dec
sbb
push
leave
fmuls
cmc
dec
testb
and
push
ss
jo
push
inc
dec
xor
sub
arpl
enter
xchg
pop
add
insl
xchg
in
pop
cmp
cld
lret
aad
arpl
pop
pop
rcr
inc
mov
push
sub
mov
jle
xor
ss
jg
or
insl
stos
xchg
or
mov
xchg
xchg
out
shlb
inc
cmp
jmp
mov
sbb
jecxz
scas
sbb
cmp
imul
scas
call
sub
adc
sti
and
mov
mov
mov
test
pop
iret
jnp
add
imul
cmp
mov
inc
in
add
dec
pop
pop
insl
insl
std
xorl
cmc
sbb
repz
std
in
loop,pt
or
fdivs
xchg
mov
out
add
jmp
cltd
adc
js
out
dec
mov
aam
xchg
repz
jns
sbb
outsb
adc
add
adc
lcall
clc
sbb
and
and
sbb
push
shrl
inc
pop
jl
pushf
jl
adc
cwtl
arpl
jle
xor
into
fucomp
dec
jmp
push
push
pop
dec
notl
lods
cmp
shrb
pop
ljmp
mov
fistpl
pop
in
packuswb
sbb
repz
ret
xor
pop
xor
mov
xor
add
jg
and
arpl
mov
lret
mov
xchg
out
push
adc
cmpsl
leave
mov
aad
jmp
mov
fimuls
loop
mov
xchg
subb
rol
push
test
loopne
std
pushf
outsl
mov
aaa
pop
shl
leave
dec
fisttpll
mov
sbb
clc
push
test
inc
dec
and
int3
and
fistl
lret
in
jae
sub
adc
repz
pop
cmc
sbb
lds
js
lds
push
push
addl
mov
mov
jecxz
lcall
xor
and
and
mov
hlt
jmp
inc
into
jne
dec
inc
repnz
lret
xor
cmpsb
out
pusha
sbb
jne
enter
adc
jp
movl
movsl
sbb
add
test
push
and
or
dec
pushl
repz
pop
leave
pop
or
ds
out
adc
testb
or
in
add
mov
jae
add
mov
ds
cmp
inc
cmp
mov
adc
inc
imul
or
nop
push
cmp
out
add
out
insb
sbb
cmp
mov
and
ja
sbb
xor
rorl
push
jecxz
mov
lahf
into
lea
mov
adc
out
loopne
adc
jmp
cltd
dec
out
outsb
dec
aaa
jns
ja
cmp
mov
aas
rclb
pop
repz
inc
inc
mov
cwtl
pop
push
xchg
pop
mov
in
inc
lcall
fdivrl
dec
or
push
mov
cmp
and
add
add
jle
mov
fdivrs
repnz
push
cmp
mov
jb
and
loope
dec
mov
adc
or
aas
out
push
inc
xchg
aaa
sbb
ljmp
push
inc
or
sbb
hlt
pop
pop
icebp
and
pop
shlb
cmc
arpl
sbb
nop
push
rcr
addr16
lods
xchg
mov
ja
out
bound
in
push
ds
push
sarl
fadds
or
sub
xor
jo
mov
inc
pop
cmp
in
mov
lahf
mov
jnp
shl
sahf
ret
fnstsw
ljmp
pop
adc
scas
pop
fwait
xor
ret
shll
bound
push
or
add
and
or
scas
jge
mov
roll
and
out
in
and
mov
sub
push
inc
push
mov
mov
mov
push
insl
xchg
movsl
sbb
dec
pop
pop
out
loopne
sbb
out
lahf
dec
test
fists
das
cwtl
ret
push
add
clc
mov
cmp
add
push
pop
mov
adc
negb
cmp
xorl
pop
sbb
popa
imul
jo
inc
adc
shll
mov
fdivrs
das
iret
out
mov
ret
xchg
or
pusha
arpl
pop
sarl
loopne
test
dec
sbb
cwtl
stos
jecxz
push
cmp
imul
inc
adc
icebp
jo
das
add
out
call
leave
push
and
xchg
call
mov
cwtl
stos
rcll
dec
arpl
scas
out
subl
push
cmp
jne
lcall
test
daa
aad
jnp
sarb
cmp
arpl
jb
mov
aam
sub
jnp
jmp
insl
dec
test
pop
inc
jo
jle
loope
push
lods
pusha
add
xchg
jg
mov
jecxz
sub
in
dec
faddl
mov
lea
push
call
scas
xor
inc
jg
pop
push
cmp
mov
mov
cld
cltd
lret
call
pop
orb
inc
pop
lds
add
xchg
fcom
inc
aas
cwtl
out
repnz
lds
test
add
cmp
sbb
mov
and
cmp
outsl
or
sbb
imul
insl
popa
pop
inc
mov
jmp
cmpsb
pop
push
add
inc
sbbb
jp
xchg
fsub
je
popa
xor
jge
sbb
test
mov
mov
mov
push
fiadds
push
xor
sbb
gs
jb
adc
fs
cmpsb
shrl
lea
aam
mov
sub
addr16
dec
pop
sbb
jae
addr16
decb
hlt
sarb
je
inc
jle
in
fs
and
mov
mov
clc
and
xchg
pop
mov
pop
lret
rcr
mov
pop
dec
cmp
pushf
cmp
scas
xor
std
cmpb
inc
pop
jne
mov
dec
cmp
xchg
repz
xor
test
jo
cli
sub
cltd
outsb
push
or
cwtl
je
sbb
imul
js
flds
loopne
jno
loope
add
insb
rcrl
jne
push
push
imul
mov
mov
mov
cmp
pop
fistpl
jge
mov
mov
dec
repz
cs
dec
imul
popf
xchg
jne
in
gs
mov
orb
mov
psubsw
out
dec
xchg
xor
aas
addl
lods
aas
je
cmp
xor
mov
std
shrb
test
stc
repz
push
fstl
movsb
iret
sti
cli
fcomps
mov
iret
sbb
fs
daa
lret
mov
sub
jbe
pop
push
lods
push
xchg
push
aas
push
inc
push
dec
js
mov
mov
lds
inc
xor
aaa
inc
pop
push
jmp
aad
sbb
cmp
cmp
jno
or
adc
fs
clc
in
add
aad
xchg
sbb
popf
adc
jb
movsb
jns
mov
push
outsl
stos
inc
gs
mov
or
or
sti
ss
and
xchg
sbb
mov
lds
aam
or
addr16
or
adc
aaa
push
mov
pop
inc
mov
cli
jbe
and
dec
push
stos
fbstp
and
cmp
adc
fmull
inc
sbb
cs
mov
push
pop
loope
cmp
pusha
test
or
in
mov
cmp
mov
adc
mov
inc
lods
mov
mov
int3
pop
clc
daa
aam
push
test
pop
mov
mov
frstor
dec
lock
sub
inc
scas
sub
call
ret
mov
adc
leave
in
add
sbb
lea
stos
ljmp
push
sbb
arpl
paddusb
icebp
dec
pop
rcrl
stos
push
cld
pop
adc
or
jo
stc
push
jmp
icebp
aam
cltd
push
insb
mov
add
test
xchg
aaa
leave
fadds
jne
sbb
push
pop
jns
in
dec
bound
ja
filds
or
mov
sub
fistpl
and
aad
popa
aas
or
sub
sarl
scas
sub
dec
cli
fisttpl
adc
mov
pop
fldt
fwait
pop
jge
in
stos
stos
or
jg
cmp
fwait
adc
jecxz
call
cmpsl
jp
jp
and
adc
ds
daa
sbb
daa
inc
out
inc
idivb
fsubl
mov
addr16
scas
or
outsb
push
jle
or
mov
xlat
and
jecxz
xor
pushf
in
xchg
add
sub
xchg
filds
sbb
or
test
push
dec
in
stc
xor
push
xor
mov
cmpsl
or
stos
dec
pop
insb
inc
dec
dec
out
xor
hlt
mov
or
sbb
in
inc
xchg
cld
mov
and
scas
jno
es
xor
or
out
sbb
in
fwait
shr
xchg
out
xchg
xor
or
sahf
enter
negb
push
lock
imul
pop
sbb
cmp
mov
mov
xor
mov
outsb
in
jp
fcmovb
stc
cmp
lcall
test
rorl
sbb
rcll
mov
ss
add
loop
xor
inc
aas
popa
arpl
dec
inc
dec
add
popa
mov
movsb
fists
mov
shl
je
test
fsubs
mov
xchg
inc
xlat
popa
out
scas
adc
mov
stos
fdivr
popf
add
jnp
mov
mov
xlat
in
repnz
add
std
jl
in
push
stos
or
push
sub
repz
sub
jg
sbb
or
outsb
dec
mov
push
arpl
cmp
mov
mov
inc
outsl
sahf
fsubrp
pop
lret
fnstenv
xlat
mov
aam
in
in
pop
lret
sbb
js
dec
lret
inc
decl
pop
movsb
dec
scas
js
cli
sbb
repz
mov
clc
aaa
or
jl
xchg
push
and
lahf
pop
daa
dec
loope
mov
das
cmp
sbb
mov
pop
loopne
push
sub
in
push
stos
movsb
addl
pop
xchg
add
in
dec
inc
xorb
inc
js
jne
enter
xchg
loopne
cmp
inc
mov
movsl
push
mov
das
sub
in
faddl
jnp
iret
icebp
jbe
mov
pop
pop
popf
ljmp
xchg
imul
cli
cmp
mov
mov
cmc
out
push
xlat
rclb
js
lea
mov
sub
fstl
mov
xor
daa
mov
mov
adc
add
xchg
filds
fwait
inc
add
mov
out
das
aad
stos
sub
hlt
jge
dec
dec
dec
cli
adc
push
or
movsl
sbb
lods
ljmp
dec
ds
std
dec
xchg
adc
push
daa
mov
lahf
adc
in
repnz
pop
stos
imul
imul
add
pop
arpl
add
repnz
add
sarl
je
pop
dec
lret
sub
sar
mov
dec
push
push
sub
mov
xchg
jl
js
outsl
sbb
fbstp
in
test
ret
mov
xchg
mov
insl
mov
and
sbb
sub
std
xchg
cwtl
mov
pushf
mov
dec
jl
pop
and
or
aaa
xor
pop
scas
mov
loopne
ficompl
push
xlat
pushf
imul
mov
fwait
imul
adc
in
pop
xor
ror
sti
cmp
mov
rcrb
int
cmp
enter
lcall
clc
fists
adc
nop
push
dec
cmp
push
lods
fadds
loope
ret
in
fcoml
jp,pt
adc
movsb
popa
sti
pop
sbbb
out
inc
push
dec
add
sahf
add
jb
and
fcoms
inc
fwait
in
mov
mov
nop
sub
xchg
in
cs
push
into
test
div
test
push
xor
sub
in
pop
out
jne
cld
jg
sarb
sarb
je
mov
and
push
xor
ds
jmp
xchg
xor
dec
lret
xlat
cmp
jp
jbe
lret
pop
inc
lret
lret
aad
ret
inc
and
inc
insb
or
mov
cmp
and
fsubs
call
test
pop
movsl
lods
inc
xchg
cmp
aam
test
sub
xchg
jmp
test
jb
mov
insb
scas
mov
addr16
movsb
xchg
pop
iret
scas
bound
jne
or
cli
cmp
mov
loope
xchg
imul
cmp
sbbl
ror
and
jo
sub
mov
xchg
ljmp
and
xor
cmp
push
pop
iret
dec
int
nop
adc
pushf
lds
mov
xchg
int
xchg
jl
jno
ja
or
xor
vmovdqa
mov
lds
xor
push
mov
add
stc
sti
das
rorb
pushf
xchg
dec
je
push
repnz
mov
cli
mov
mov
pop
adc
ja
insl
and
pop
lods
dec
ds
aad
jb
pop
cmp
add
add
mov
mov
scas
addr16
mov
je
cmp
f2xm1
mov
cmpsb
rcl
push
es
jne
clc
addb
mov
pushf
mov
cs
int3
fsub
test
xrelease
test
add
fisubs
mov
xchg
shrb
mov
dec
bound
push
mov
and
xlat
xchg
inc
insl
nop
cmp
mov
addr16
pop
push
cmp
cmp
aam
loop
clc
add
and
ljmp
or
aam
push
inc
test
add
enter
out
ret
cmp
xchg
inc
fadd
aaa
sbb
jnp
lock
ja
in
xchg
and
movsb
mov
cmpsb
sahf
cli
dec
sbbl
fstpt
int3
inc
ret
movsl
dec
pop
int3
mov
xor
lret
inc
daa
push
movsb
adc
incl
lock
jae
adc
dec
xor
loope
outsl
movsl
pop
mov
popa
js
addr16
adc
pop
int
rorb
mov
jnp
xor
mov
mov
mov
sub
mull
xchg
insl
adc
ljmp
jo
sbb
fwait
xchg
add
xchg
adc
js
jnp
push
mov
xor
mov
push
xor
lock
sbb
bound
pushf
cmp
and
adc
sahf
clc
lods
push
iret
loope
js
imul
mov
sbb
out
or
mov
jns
push
scas
mov
pusha
arpl
dec
test
or
movsl
adc
rcrb
popa
test
inc
out
fisttps
into
or
push
mov
cmp
or
inc
push
pop
jbe
adc
in
shll
loope
xchg
mov
fidivrl
cmp
dec
xchg
dec
testb
std
jno
and
fs
scas
mov
or
ret
in
cli
pusha
add
ss
sbb
jle
push
repz
imul
inc
xlat
jmp
cmpsl
data16
test
insl
and
sbb
xchg
push
xor
fildll
sub
je
jbe
mov
push
lea
out
call
mov
sahf
pop
cmpsb
std
out
pop
movsl
ror
fistpl
add
pop
stc
aas
gs
mov
lods
xchg
iret
imul
nop
mov
adc
sar
insb
popl
ljmp
or
cmpsb
nop
hlt
dec
int
mov
lods
lret
xchg
subl
stc
maskmovq
notl
in
rclb
dec
mov
je
mov
or
pop
xchg
fdivs
jae
icebp
enter
xchg
mov
repz
fs
leave
fldcw
mov
jb
jbe
push
popf
pop
or
sbb
mov
lea
add
aad
fs
insb
gs
sahf
pop
repz
aas
mov
cld
inc
movsl
inc
dec
clc
dec
mov
jb
test
cmpsl
dec
mov
mov
pop
push
sbb
and
jg
repz
mov
loopne
fildl
sub
pop
fwait
xor
push
jb
cmp
sbb
loopne
sahf
lret
sarl
bound
mov
mov
out
or
repnz
call
mov
cmpsl
fisubs
add
or
mov
int3
add
lret
scas
sub
pop
jmp
aad
pushf
testb
pop
ret
xlat
lds
pop
xchg
call
orl
mov
out
cli
xchg
sbb
push
xor
aaa
push
pop
or
clc
pop
fdiv
ret
cmp
inc
pushf
mov
or
sub
mov
sub
add
push
and
pushf
movsb
and
cld
gs
push
lods
inc
pop
jnp
pop
push
xor
aam
aas
mov
push
pop
data16
mov
dec
inc
mov
cmp
sub
jl
sub
popf
dec
inc
bound
popf
or
sbb
or
out
movsb
pop
test
lods
cmpsb
ljmp
jb
add
jg
in
xchg
mov
iret
mov
xor
orb
jmp
pop
adc
or
xchg
add
fcompl
icebp
jnp
pop
inc
lds
arpl
pop
and
imul
push
xor
mov
int
xor
flds
inc
ljmp
inc
fdecstp
lea
push
movsb
shrb
mov
mov
clc
rcrb
xor
cmpsb
push
das
lcall
inc
rclb
aam
aad
mov
fsub
jp
jmp
cmp
es
push
adc
sbb
push
into
daa
fmulp
shlb
sub
ja
shrb
clc
xor
mov
cld
stos
call
nop
lods
mov
fiaddl
leave
pushf
jo
in
aad
ret
js
and
pop
xor
adc
arpl
fsubs
cwtl
cmp
lods
dec
dec
clc
imul
lahf
or
and
movsl
pop
test
loop
sbb
mov
sbb
xor
pop
cld
push
push
mov
jo
mov
pandn
mov
xchg
xor
rcrl
push
pop
and
ds
add
outsb
sub
dec
inc
je
mov
adc
fidivrl
movsb
adc
shll
cmp
ljmp
test
sbb
fwait
jo
sub
cmp
cmp
mov
mov
mov
pop
push
inc
lret
bnd
xchg
push
pop
and
push
cmpsl
or
pop
ret
lcall
imul
fdivl
clc
shll
jo
cmpsb
sti
pop
int
cmp
adc
jp
rolb
mov
adc
sti
pop
adc
std
shrl
scas
lea
loope
jl
outsb
jb
insl
je
cmpsl
gs
fstp
jbe
jae
pop
pop
aam
movsl
inc
pop
int
xor
sbb
shlb
mov
adc
fiadds
js
add
push
fidivs
scas
sbb
or
xor
rcrl
daa
lods
cmpsl
push
mov
int3
jo,pn
leave
mov
mov
push
sub
cmp
jae
jb
add
jne
and
je
mov
sub
mov
rclb
test
add
push
stc
jp
or
inc
inc
aaa
decl
add
jnp
ret
lcall
inc
jge
or
scas
or
add
cmpl
popa
push
lret
pop
into
push
sahf
enter
loope
cmp
sub
in
in
lcall
xor
sub
dec
mov
cld
inc
cli
sub
cmp
inc
xchg
push
jno
arpl
cmp
xchg
fldt
test
stc
push
jae
data16
je
inc
addr16
repnz
movsl
scas
mov
sub
mov
cld
cs
hlt
enter
daa
xchg
cli
loop
lea
xchg
in
lock
sub
repz
adc
lds
add
jae
sbb
pop
subl
clc
xchg
jno
pop
fnstenv
adcb
xor
jp
dec
mov
shrb
lock
xchg
jne
dec
je
out
mov
mov
mov
xor
jmp
jb
test
pop
inc
sub
mov
into
dec
jp
leave
and
cli
adc
lcall
jb
xchg
cmp
nop
pop
pop
lock
ds
pop
shll
inc
jge
xchg
sub
jp
add
roll
mov
out
xchg
inc
into
xor
mov
xor
mov
inc
std
cmp
stos
pop
and
jae
jo
ftst
outsl
ficomps
add
xor
mov
cmc
sbb
mulb
xor
test
cmc
fimull
aaa
bound
sbb
lods
mov
cwtl
mov
call
insl
pop
xchg
inc
leave
cmpl
jnp
sbb
dec
outsl
les
push
push
sub
inc
mov
inc
add
adc
dec
mov
sub
xchg
pop
or
aas
je
mov
in
inc
mov
xor
push
mov
push
lds
outsl
push
xchg
in
aaa
jmp
sub
sbb
outsl
xchg
mov
mov
dec
push
add
cmp
adc
or
fwait
push
dec
xor
scas
inc
ss
lret
dec
lcall
jo
aad
pop
dec
cli
mov
jns
pop
xor
ret
lock
lret
push
mov
pop
xchg
daa
lret
jo
push
mov
jb
lods
mov
shr
xor
pop
mov
nop
mov
leave
out
ffreep
adc
cmc
lcall
mov
mov
cvtps2pd
dec
jge
out
imul
movsl
push
sub
pop
scas
cmp
dec
test
mov
out
adc
jle
jmp
sbb
xchg
repnz
test
mov
pop
fcmovbe
mov
dec
jns
aad
cmpsb
jecxz
insl
ja
testl
dec
test
mov
dec
xor
shll
push
cmp
pop
push
pop
push
mov
xchg
cmp
stos
out
pop
mov
enter
into
sub
loope
dec
das
mov
pop
cmp
fistpll
and
jb
mov
mov
loopne
mov
mov
sti
xorl
mov
call
repz
fcmovb
push
lcall
lcall
push
mov
mov
js
mov
push
ja
push
mov
movsl
ret
and
push
aaa
jmp
xor
mov
mov
adc
ret
pop
outsb
cmp
clc
inc
push
or
loopne
pop
js
faddl
mov
or
dec
pop
pop
jl
sbb
negb
aad
test
mov
mov
movsb
int
xchg
xchg
stc
xchg
cmpsl
arpl
push
addr16
in
call
fwait
mov
jbe
sub
cmc
push
mov
stos
mov
loop
inc
xor
sub
in
es
mov
mov
mov
movsb
je
stos
dec
inc
cwtl
in
int3
xor
mov
in
cmp
fucomi
or
ret
imul
inc
push
xchg
xor
mov
lahf
xor
sbb
daa
es
rorl
sbb
adcl
mov
insl
cltd
push
add
or
mov
je
repnz
sub
shll
lds
cld
sbb
mov
gs
inc
cltd
push
aaa
or
pusha
mov
dec
cmp
or
cmp
insb
mov
jo
mov
sbb
daa
dec
cmp
test
sub
add
stos
mov
and
sbb
repz
fmull
mov
jbe
inc
stos
pop
int
push
aaa
jns
xchg
mov
stos
mov
mov
cltd
cmpsb
add
cmc
imulb
gs
xchg
jbe
in
xchg
cmp
subl
and
pmulhw
push
mov
fwait
ror
push
mov
sbb
leave
pop
add
or
imul
push
mov
out
sbb
out
daa
mov
shlb
repnz
pop
fisubrl
push
inc
ds
lahf
hlt
dec
loope
mov
repz
dec
fsubp
aad
cli
xchg
jbe
push
test
xchg
sbb
leave
lds
push
adc
jg
adc
lahf
xchg
out
sbb
out
mov
push
jne
mov
inc
pop
pusha
or
sub
pop
push
cli
jo
loop
mov
push
xchg
or
xor
sbb
add
inc
inc
add
push
xor
pop
ds
test
in
leave
sub
aam
dec
popf
sbb
arpl
roll
mov
data16
pop
mov
mov
sbbb
ror
sbbl
flds
xor
in
mov
rcll
push
sbb
fmulp
sbb
imul
pop
mov
cmpsl
dec
xor
inc
jo
in
ss
adc
xchg
cmpl
cs
js
sub
aam
and
or
movsb
sub
aad
orl
xchg
push
lock
ror
adc
mov
loopne
pop
and
sub
and
cwtl
pop
or
and
sbb
cmp
push
xchg
push
mov
mov
out
sbb
jge
inc
lret
inc
daa
mov
nop
mov
stos
and
cmp
ds
pop
lods
dec
pop
mov
dec
loop
hlt
fistps
mov
jge
jg
push
xor
sarl
jp
ljmp
popa
pop
out
push
arpl
lahf
arpl
test
out
rorb
ret
cli
outsl
xchg
pop
lahf
hlt
fyl2x
mov
cwtl
mov
jbe
pop
mov
or
lahf
outsb
add
lds
jge
and
in
arpl
hlt
xlat
mov
ret
loopne
push
nop
stos
mov
pop
bsr
cli
mov
ficoml
pusha
lods
sti
cmp
push
fincstp
pop
jns
cmpsl
jbe
mov
fsub
push
es
mov
push
mov
push
cmpsb
lret
insb
sbb
stos
and
lods
cmpl
mov
data16
iret
cmc
adc
and
cmp
mov
fdivl
clc
push
or
daa
push
je
test
mov
jecxz
out
mov
std
inc
movsb
shll
xor
mov
test
popf
fs
in
mov
pop
mov
and
fcom
pop
and
mov
xchg
xor
int3
hlt
push
mov
xor
mov
and
push
out
mov
and
inc
in
push
leave
cmp
xchg
int3
ljmp
pop
js
xor
xor
adcl
out
rorb
nop
jae
cmp
mov
dec
push
jno
mov
pop
repz
out
lret
xchg
stos
cwtl
xchg
sahf
xchg
das
push
ret
clc
adc
daa
xor
xchg
cmpsl
push
test
mov
adc
pop
ret
call
xchg
push
mov
mov
mov
in
mov
mov
fisttpll
jg
int
inc
ss
popa
lahf
jle
mov
fwait
aas
jecxz
mov
mov
sub
lahf
outsb
adc
mov
push
xchg
xchg
mov
and
pop
pop
das
mov
lds
add
cmc
mov
push
and
je
pushf
mov
inc
out
mov
repnz
ror
sbb
or
mov
mov
cmp
and
mov
mov
and
mov
inc
dec
divl
fiaddl
push
out
jb
sub
pop
insb
sub
mov
loop
sub
aam
int
push
fcmovne
clc
and
sub
aaa
test
adc
xor
add
mov
fwait
dec
push
or
imul
fwait
cmc
inc
jg
jnp
ret
inc
dec
xchg
insb
imul
adc
test
dec
xchg
mov
cmp
dec
mov
or
pop
adc
xor
push
add
rorb
jp
mov
pop
adc
mov
fmulp
inc
sbb
push
adc
jb
mov
jae
and
pop
jns
cmpsl
bound
lods
mov
popa
fwait
mov
imul
shl
mov
jnp
mov
xchg
ficoml
insl
sbb
in
fwait
addr16
dec
mov
popf
icebp
xor
inc
out
mov
xor
sbb
outsb
lock
sahf
in
out
dec
addr16
sbb
pop
push
and
jmp
add
jo
adc
inc
or
daa
cwtl
cmp
add
pop
adc
xchg
enter
je
decl
loopne
repnz
repnz
or
pop
das
std
repz
adc
loopne
jb
jo
rcrb
and
lea
push
mov
inc
and
dec
dec
jle
call
mov
imul
mov
sub
daa
arpl
dec
call
push
arpl
aaa
sbb
scas
ret
iret
bound
jmp
pop
pop
push
sbb
push
rolb
stos
pop
stos
in
lock
mov
and
jbe
inc
lock
stos
sbb
bound
sbb
pop
add
lret
clc
xorb
sub
cwtl
stos
adc
xor
into
xchg
outsl
dec
into
dec
mov
push
adcl
rcrl
sub
stos
mov
adc
mov
aaa
lahf
lods
xor
dec
rclb
cs
xor
ljmp
movsl
rorb
fstl
or
adc
pop
data16
cmp
data16
jl
or
fadd
clc
mov
mov
jp
sub
stos
and
adc
dec
jae
lods
faddl
mov
pop
mov
add
stos
roll
mov
mov
cmp
or
push
pop
mov
int3
jmp
adc
lock
arpl
cltd
mov
xchg
test
cmpl
incb
bound
nop
nop
inc
call
rcll
std
cs
and
pop
stc
test
xchg
mov
hlt
mov
unpckhps
and
rorl
das
stos
call
xor
fs
aad
pop
pop
sbb
lods
das
fnstcw
sbb
lock
or
out
and
mov
pop
jno
push
lds
int3
jns
xchg
cmp
mov
sbb
ret
lret
stos
push
mov
add
adc
jl
or
into
mov
cmc
int3
aaa
xor
imul
pop
insl
movsb
jl
pusha
popa
into
in
jecxz
int
sahf
pop
movsl
test
hlt
inc
xlat
fnstcw
mov
test
and
adc
jg
stc
loopne
aas
out
jp
lea
add
push
dec
mov
jg
adc
adc
dec
scas
mov
loopne
xor
push
into
cmpsl
repnz
pop
mov
xor
fldcw
xor
out
cmc
mov
sub
test
jle
adc
or
push
xchg
inc
push
mov
sub
jo
repnz
mov
pop
sbb
pop
das
add
icebp
cmpsl
push
aas
or
fistpll
sti
adc
sbb
hlt
xchg
enter
addr16
fdivs
xchg
or
xor
lahf
mov
sbb
and
sbb
test
mov
and
inc
leave
or
imul
add
cmp
and
pop
cmpsb
sbb
push
or
fwait
jmp
aaa
sbb
insb
jl
andl
push
cmp
pop
daa
mov
push
insl
inc
mov
orb
lcall
mulb
jl
outsb
cwtl
fnstsw
not
pop
mov
std
sarl
subb
adc
sub
cwtl
insb
push
jecxz
mov
stc
popa
and
mov
lcall
out
bound
add
repnz
dec
shr
stc
movsb
rorb
dec
sub
mov
add
mov
daa
cmc
sti
sbb
pop
ljmp
je
test
adc
pop
int3
xlat
and
add
or
cmp
inc
mov
push
jle
sti
fiaddl
push
pusha
dec
ret
div
ss
fsubrs
mov
jo
iret
das
push
push
ret
loop
in
xor
mov
aam
mov
cmp
ret
mov
cmp
jnp
arpl
hlt
fcomp
aas
repz
mov
in
cmpsb
push
sbb
das
pop
dec
push
lcall
lods
pop
inc
jne
data16
test
sub
mov
fldenv
cmp
repnz
jnp
push
andnps
pop
clc
mov
orl
adc
add
shr
jae
push
gs
inc
int
pop
ja
adc
mov
or
test
icebp
insb
inc
shlb
push
add
and
jecxz
push
xchg
pushf
ljmp
fisttpl
ret
mov
mov
mov
repz
scas
jl
sbb
mov
adc
push
cwtl
mov
jns
mov
sub
cld
rorb
pop
gs
nop
adc
or
jae
add
dec
inc
stos
movsl
jmp
xchg
stos
faddp
lret
scas
dec
pop
jg
or
les
inc
bound
insl
xor
push
sub
sub
fidivrl
ficoms
xchg
movsb
dec
repz
jge
mov
and
loope
out
fildl
and
scas
adc
ret
loopne
cmp
jmp
aas
test
out
das
mov
int3
jmp
push
fstl
push
mov
sbb
inc
pop
jns
pusha
or
pop
shll
rcr
fimuls
or
neg
pop
pop
and
mull
xchg
or
adc
outsb
dec
push
jns
insl
lods
test
imul
nop
in
test
mov
jg
inc
cli
test
mov
sbb
cmp
pop
aas
cwtl
gs
lock
mov
in
mov
arpl
clc
pop
aas
inc
cmpsb
jb
pop
fisubrs
mov
dec
sti
jge
lcall
mov
insb
adc
ret
jne
fdivrl
inc
push
arpl
lds
ja
xor
jns
xchg
mov
daa
inc
add
popa
push
sbb
loope
test
call
dec
and
sub
xchg
inc
push
bsf
das
mov
decl
aam
or
mov
jge
rol
jo
push
les
insb
push
xchg
push
jge
ljmp
lcall
pop
popa
fldenv
adc
aam
cmp
mov
test
sbb
jecxz
addl
outsb
negb
xchg
aas
mov
out
and
mov
loopne
mov
repnz
mov
dec
cltd
or
out
xchg
mov
fnstcw
gs
or
cmp
xor
or
inc
jg
std
push
loop
mov
fisubrs
addr16
sbb
jp
sub
pushf
inc
pop
test
shrb
mov
stos
cmp
lds
dec
push
sub
aam
push
dec
daa
xchg
lcall
js
in
mov
or
pop
stos
arpl
jo
sti
or
mov
repnz
fidivs
cmp
xchg
int
sbb
jo
mov
leave
aam
in
sbb
mov
sbb
cmp
sysret
hlt
push
in
nop
pop
mov
or
pop
ror
roll
mov
ja
lcall
push
push
add
scas
adc
xchg
inc
hlt
jle
jl
sahf
add
push
rcl
push
pop
iret
pop
int
mov
mov
inc
subl
jne
stos
pop
jnp
add
push
mov
adc
in
push
nop
cmp
add
inc
and
and
in
sbb
test
jmp
and
mov
int
stos
add
faddl
push
or
icebp
cmpsb
int3
push
mov
push
push
sub
mov
sbb
add
push
mov
repz
cmp
mov
jmp
lock
incl
push
lret
insl
inc
ficomps
mov
aad
call
and
add
inc
rclb
pop
repnz
aaa
dec
push
inc
mov
and
add
mov
jp
cmp
and
ds
jp
pop
lea
sub
data16
cltd
lcall
pop
test
iret
xor
inc
shr
jl
jecxz
cmp
xor
pop
and
cmp
outsb
arpl
imul
cmp
jnp
jg
xchg
pop
fistpll
and
imul
xchg
pop
mov
movsl
adc
jle
outsw
adc
scas
sub
xor
int3
inc
xor
or
and
pop
adc
fstpl
mov
xchg
push
pop
gs
inc
stos
xorl
mov
in
cmp
sbb
enter
pusha
in
insb
jbe
shr
fildl
lcall
sbb
sbb
dec
nop
in
test
rclb
cmpsl
test
cmp
imul
movsb
adc
sbb
sub
mov
stc
ficoml
sub
jp
ja
fsts
or
sbb
push
ljmp
sub
lea
and
out
fdivrs
mov
push
loope
cmp
jno
aaa
popa
addl
decl
and
mov
clc
and
popa
or
in
out
lds
out
sbb
js
cmp
sarl
pusha
pop
dec
xchg
jb
les
sbb
lret
cmc
in
cwtl
out
mov
fnsave
out
or
scas
cmpb
loope
cmc
sbb
or
cs
arpl
mov
loop
fs
and
push
ret
mov
sub
stc
pop
fwait
lret
decb
push
xchg
dec
add
jmp
xor
add
insb
hlt
lds
push
jmp
push
loopne
pop
loop
scas
jns
mov
pushf
aaa
jbe
jo
out
mov
sbb
stc
pushw
lods
push
xor
xor
test
or
dec
push
test
loope
mov
inc
movsl
sub
dec
flds
std
mov
aas
or
xchg
dec
cwtl
mov
ret
loope
and
inc
xorl
je
das
ja
call
sbb
sbb
lock
sub
sub
mov
add
or
xor
jae,pt
mov
push
es
push
dec
inc
ret
mov
xor
adc
mov
mov
loope
pop
stos
es
pop
loop
jae
lods
mov
insl
push
xorb
jecxz
push
movsb
push
push
dec
jnp
loope
inc
inc
dec
inc
int3
mov
and
negl
fstps
cmp
les
jecxz
cmp
dec
cmp
adc
mov
jle
push
adc
pop
inc
sub
imul
sbb
gs
or
insl
mov
leave
xor
sahf
stc
clc
flds
out
pop
fsubrs
mov
and
adc
sbb
shrb
pop
sbb
xchg
outsl
mov
mov
lahf
pop
mov
aam
mov
dec
sub
lret
add
xor
or
inc
cmp
out
mov
mov
sub
pop
or
cwtl
sbb
push
add
popa
insl
rcrb
das
stc
dec
push
xor
mov
and
mov
lahf
popf
imul
cld
repnz
push
jle
jle
fldpi
sbb
fmull
cs
scas
in
and
jne
push
inc
inc
aas
mov
lret
les
or
push
sbb
xor
cmp
jl
bound
cltd
lock
sub
jecxz
repz
jle
dec
xchg
scas
mov
call
mov
sub
mov
pop
and
xchg
or
gs
mov
rcrl
insl
mov
mov
inc
push
adcl
pusha
or
inc
jae
test
cld
adc
mulb
sbb
xor
inc
mov
sbbb
enter
mov
mov
adc
push
cmp
pop
hlt
mov
fwait
gs
jmp
add
cld
push
sub
mov
sbb
or
mov
xor
pop
inc
xchg
insl
fsubrl
std
mov
and
in
clc
push
adc
je
push
cli
fcom
mov
xchg
cltd
jo
dec
xchg
mov
arpl
adc
aad
sub
decl
shll
inc
jns
into
sbb
filds
adc
lock
in
imul
lret
jge
test
pcmpeqw
dec
xchg
push
nop
pop
jns
scas
xchg
bound
ret
jae
or
dec
shlb
mov
sahf
fstl
jg
scas
mov
cli
jl
clc
sbbb
out
xchg
xchg
push
jae
in
pop
lock
push
sub
hlt
cmp
jmp
in
pop
in
jo
imul
push
mov
out
add
fs
gs
dec
loop
xchg
push
sarb
pushf
fs
jle
imul
aam
mov
loopne
hlt
mov
and
out
jge
and
or
int3
movzwl
std
in
xchg
ficoml
aas
test
sbb
pop
or
pop
pop
or
lods
ret
push
test
ja
hlt
jp
jmp
pusha
pop
mov
outsb
sbb
add
pop
cld
xor
ja
lret
data16
js
inc
hlt
adcl
dec
push
aaa
inc
add
cld
or
add
repnz
add
scas
ret
nop
fwait
xlat
cltd
push
pop
rorb
sub
add
cmc
lods
dec
testl
dec
pop
test
mov
and
sahf
repz
test
les
sti
jge
icebp
jge
cmp
dec
out
ja
daa
hlt
pushf
xchg
xor
pop
adc
or
xchg
push
fadd
out
out
dec
sarb
inc
pop
pusha
enter
int
mov
pop
shrl
icebp
shlb
ror
incl
push
incb
jne
fs
fstps
insl
or
out
nop
or
inc
cmp
rcrl
call
mov
ja
cmp
test
imul
jo
xchg
dec
inc
push
ss
push
or
xchg
incb
hlt
cltd
jae
orb
xchg
jg
xor
lret
jmp
test
imul
cmp
mov
int
cmp
add
shlb
in
cltd
mov
sbb
mov
aam
jae
cmp
lods
sti
xor
jno
lahf
sar
out
cmp
push
inc
mov
dec
adcb
mov
mov
loope
mov
mov
jo
xchg
decb
push
in
aas
inc
nop
cltd
xchg
lock
popa
and
xor
xchg
mov
outsl
sbb
repz
sbb
test
sbb
sub
movl
pop
and
fistpll
pushf
das
cmp
into
lret
cmp
insl
lods
mov
sbb
adc
test
jge
in
daa
repnz
ffree
or
add
imul
or
or
dec
mov
lea
shll
inc
call
mov
jae
ret
cmp
pop
adc
adc
out
dec
xor
pop
dec
je
or
mov
add
sub
sub
add
es
ljmp
dec
es
dec
xor
xchg
shr
inc
lds
scas
mov
pop
xchg
mov
orps
xchg
inc
xor
jo
pop
aaa
mov
lret
jo
pop
mov
iret
pop
ret
cmp
in
xchg
mov
push
roll
lahf
loope
jb
hlt
gs
in
cmpsl
push
cmp
sarl
inc
inc
mov
mov
aas
and
jne
or
inc
mov
test
adc
cmpsl
pushf
cwtl
xor
xchg
xchg
push
or
in
loopne
add
add
push
out
inc
add
stc
add
js
lods
adc
dec
or
stos
jmp
add
daa
sbb
xor
cwtl
sub
cmp
mov
cli
mov
mov
sub
outsb
ret
outsl
ss
jb
fisubl
lods
dec
or
test
jnp
cmpsl
aas
mov
lods
fildl
hlt
mov
jmp
lods
out
scas
jbe
fdivs
inc
dec
lods
xor
sub
insb
push
inc
xor
fs
xchg
cwtl
imul
out
lcall
push
pop
pop
cmc
lock
xor
lret
or
jl
jge
inc
cmp
push
pop
xor
lret
dec
xor
and
fisttps
add
clc
and
or
shll
sbb
call
subb
subb
pop
test
in
sbbb
xchg
jns
xchg
xchg
fwait
jp
pop
add
or
mov
aaa
subl
movsl
push
fnstcw
mov
sti
data16
pusha
or
or
lcall
test
push
and
xor
sbb
pushf
in
and
adcb
mov
xchg
pop
sbb
jo
repz
xchg
xor
add
mov
mov
xchg
cli
imulb
mov
dec
addr16
in
xchg
and
rorl
popa
jb,pt
xlat
pop
lds
lret
cmpsb
xchg
push
mov
and
movsl
aad
push
push
ror
cmp
cmp
xchg
adc
lcall
add
sbb
mov
mov
insb
fcomps
pusha
mov
adc
inc
in
jae
pop
lahf
stos
popa
or
mov
fsubr
adc
jnp
sub
mov
xchg
mov
mov
scas
outsb
mov
leave
xchg
bound
push
pop
sub
data16
popf
push
mov
andb
hlt
mov
movsb
xchg
pop
ss
cmpsb
rsqrtps
pusha
out
jbe
and
out
xchg
push
cmp
xor
jmp
inc
fstps
and
inc
jae
daa
or
addr16
mov
push
xchg
lods
push
popf
popf
mov
adc
push
es
xlat
mov
lea
int3
push
cmp
gs
xor
and
mov
test
idivl
push
inc
xor
repz
mov
rcrb
ret
arpl
jno
inc
or
in
or
gs
aaa
into
sub
aad
add
ffree
and
ljmp
lds
dec
xor
fldt
scas
dec
in
jecxz
jmp
adc
fsub
push
or
dec
jmp
sub
dec
and
add
dec
fmulp
out
xorb
mov
dec
arpl
mov
or
notb
les
xchg
mov
sub
jae
movsl
mov
pop
inc
adc
sbb
mov
cli
cmp
lock
ja
sub
push
ret
lret
in
jp
mov
mov
jmp
icebp
out
addb
aaa
jne
jg
mov
push
push
mov
jmp
add
fimuls
xchg
or
xor
and
imulb
fs
xchg
sbb
outsb
lds
jno
cmp
cmp
cmpsb
stc
cld
cmc
fnstsw
push
mov
add
cmpsl
sbb
minps
cmp
cli
dec
mov
adc
xlat
outsl
das
xor
jnp
ret
jecxz
cs
rcl
fidivrs
pop
insl
lgs
ss
sbb
aam
adc
fcmovbe
cmpsb
xchg
xchg
mov
lcall
push
fdiv
das
sbb
jge
jnp
popf
cmp
xchg
lods
dec
gs
aaa
or
ss
mov
sbb
jp
mov
mov
and
mov
sub
xchg
pop
fidivs
cmp
cmp
mov
daa
shll
cmc
inc
cld
or
out
mov
push
ljmp
das
bound
xchg
ss
mov
sub
inc
inc
bound
mov
push
cld
pop
in
popa
pop
ret
sub
xchg
movsl
mov
mov
inc
jae
push
dec
ret
ss
jb
mov
rcrb
mov
out
lods
or
cmp
loope
jb
inc
fcomip
jle
inc
mov
mov
loope
mov
mov
mov
push
dec
mov
mov
in
xchg
iret
inc
or
lcall
scas
scas
sub
les
in
aaa
jecxz
in
push
push
mov
mov
hlt
loope
aas
inc
jmp
jnp
jo
mov
sub
push
int
addr16
pop
out
xor
xchg
sub
repz
adc
fistps
or
sbb
andb
pop
adc
aas
mov
movsl
inc
stc
hlt
fmuls
jp
out
xlat
xlat
loop
lds
ret
pusha
xorps
test
inc
mov
add
cmp
push
repz
lcall
test
bound
out
inc
enter
pop
sub
dec
mov
fimull
jne
nop
cmc
jp
test
xchg
dec
mov
cli
dec
inc
mov
inc
popl
push
xlat
icebp
mov
push
xchg
jno
les
pop
ret
sti
or
or
push
orl
xchg
sub
fs
les
jae
jbe
hlt
xor
jne
adc
mov
xchg
mov
jp
out
xor
gs
adc
lret
xlat
mov
fistl
sub
adc
mov
sub
adc
sub
pop
lcall
jle
insl
movsb
stos
lock
and
into
add
dec
xchg
cmp
pop
fnstenv
xor
lret
test
scas
adc
out
jne
pop
stos
xchg
push
arpl
inc
sub
fstl
inc
daa
stos
es
dec
sbb
sbb
in
loop
ss
xchg
push
es
mov
add
icebp
pushf
popf
add
sbb
mov
bound
mov
lea
sub
mov
jnp
shl
aaa
clc
insl
fcomps
mov
push
push
lret
jg
je
ljmp
xorb
inc
call
jmp
incb
iret
xor
add
testb
std
mov
shll
add
cli
cli
mov
cs
test
aaa
jle
sahf
sub
outsb
insl
xor
mov
std
xorb
mov
mov
pop
add
movsl
xchg
ljmp
push
aad
pop
cmc
imul
xor
mov
and
jecxz
cmp
cwtl
in
jns
or
outsl
adc
jae
cmp
push
jnp
and
ret
lods
roll
testl
mov
inc
mov
outsb
pop
or
or
in
cmc
sti
cld
dec
iret
roll
push
push
push
add
pop
insl
xchg
cmc
xchg
and
cltd
sub
std
jecxz
addr16
cmpsl
push
lret
jno
loopne
lret
shl
xor
push
adc
rcrl
xchg
orl
rclb
sbb
cld
andl
or
arpl
jg
or
add
jecxz
push
insl
fistps
mov
icebp
mov
inc
repz
rcrb
xor
adc
das
sub
mov
cltd
or
fcmovu
and
cmp
add
cmpsl
xlat
loopne
adc
enter
adc
scas
mov
inc
fwait
popf
shrl
pop
or
lret
pop
sbb
push
cmpsl
cmpsb
inc
popa
inc
mov
push
lret
and
fnstsw
cltd
or
lret
arpl
je
xchg
xchg
xchg
stos
stos
xchg
rcll
daa
hlt
adc
xchg
lods
jl
roll
jecxz
je
xchg
ret
jno
xor
pusha
adc
xcrypt-ofb
cmpsl
test
ret
inc
ret
insl
push
lcall
add
lret
sub
xor
mov
fidivs
jo
stc
loope
mov
fwait
jp
inc
and
lds
cmpsl
shll
mov
inc
rcr
pop
inc
in
add
push
daa
push
pop
jno
out
mov
leave
inc
ds
inc
add
mov
xor
pop
repnz
xchg
push
add
loopne
inc
xchg
cld
xchg
push
data16
add
mov
inc
int3
movsl
cmpl
out
push
jg
pop
fwait
int3
fidivrl
rcrb
notl
push
rolb
sti
loop
sub
les
inc
iret
jl
jae
ss
ja
mov
dec
int3
insl
rcll
jmp
int
sub
std
ss
cli
pop
lret
cli
les
cs
mov
push
lods
pop
xchg
das
sbb
stc
pop
and
nop
fldcw
sbb
gs
pop
or
mov
aaa
xor
inc
nop
mov
adc
roll
and
ljmp
outsl
jp
mov
sbb
xchg
lea
pop
outsb
add
mov
and
adc
aas
call
add
fisubrl
dec
dec
repnz
sub
sbb
iret
ljmp
xchg
push
ljmp
inc
lods
cmpsb
into
dec
add
popf
fimuls
into
ret
jmp
cmp
enter
imul
inc
mov
in
scas
test
lds
flds
shlb
pushf
or
test
out
stos
rclb
sub
add
ficoms
daa
and
out
ss
mov
inc
scas
mov
outsb
pop
jnp
push
leave
movsb
sub
push
int
cs
icebp
rorl
or
jl
push
sbb
adc
bound
aam
push
pop
enter
adc
dec
xchg
fnstcw
mov
sbb
jae
dec
sbb
mov
adc
lret
jecxz
mov
sub
xchg
cmc
lods
daa
popf
rcl
cmp
out
call
inc
sti
mov
sbb
cmp
sbb
pop
repnz
rcrb
pop
sub
jg
jnp
pop
out
jns
testb
push
les
push
test
insb
jo
dec
nop
and
inc
daa
test
jnp
pop
lods
cmp
dec
lcall
push
call
cmc
daa
lea
add
shrb
loope
sbb
subl
mov
js
jo
mulb
std
outsl
jbe
cmp
cmc
push
imul
cmp
mov
xchg
imul
xlat
dec
or
mov
fbld
add
jno
mov
shll
xchg
jno
adc
push
shll
adc
cmp
into
jo
pop
dec
mov
push
mov
sbbb
in
pop
jmp
inc
and
jge
sbb
ljmp
cmp
inc
mov
stc
rcrl
cmp
push
inc
les
lahf
in
or
push
aad
mov
jnp
mov
mov
stc
or
ret
outsb
xchg
int3
ja
aaa
cld
pop
decl
dec
lds
cmp
add
sub
repnz
fdivr
stc
subb
sub
jnp
sarb
dec
out
inc
mov
xchg
jne
adc
inc
push
dec
add
push
lods
pop
inc
jae
mov
sbb
dec
pop
or
dec
sarb
jp
test
mov
jo
xor
ds
xchg
lods
movl
sbb
lcall
dec
sbb
mov
xor
test
mov
pop
imul
sbb
xchg
into
push
out
fstpt
js
cmpl
into
cmp
push
pop
xchg
cltd
pop
inc
sbb
xchg
mov
xchg
notb
push
scas
xchg
and
pop
int
cmc
fistpll
int3
lock
out
lds
sarb
xchg
pop
jle
and
mov
aad
xor
fnstcw
ljmp
fsubr
bound
and
ds
mov
stc
mov
pop
pop
mov
or
cmpsl
xchg
xchg
xchg
in
xor
fstpt
pop
cmp
call
jbe
xchg
mov
xchg
jl
mull
jno
adc
mov
inc
push
mov
pop
movsb
lods
push
adc
sub
repnz
dec
aam
aad
enter
mov
cltd
lds
mov
jnp
adc
xor
adc
and
jge
xor
xchg
enter
mov
xor
sarl
sub
push
dec
xor
ds
sbb
push
lods
loopne
mov
sub
out
xchg
sub
repz
pop
ss
ss
bnd
or
int3
iret
dec
cs
jnp
clc
adc
stc
add
iret
loop
push
inc
adc
jl
fs
add
add
scas
popa
add
mov
cmp
mov
addr16
xchg
out
pop
icebp
sbb
subb
mov
gs
popf
push
xchg
ror
aaa
pop
fcmovnu
cmc
jecxz
repnz
mov
dec
mov
mov
xchg
outsl
stos
or
cmp
jbe
test
cmp
jl
mov
cli
cli
mov
push
cld
cmp
xchg
cmp
adc
mov
lods
pusha
mov
loopne
stos
push
add
sti
mov
out
dec
ret
int
xchg
je
bnd
push
sub
mov
cwtl
stc
scas
sbb
xchg
mov
or
and
xchg
mov
xorb
ss
jle
lock
sub
out
pop
mov
fwait
pop
fwait
paddd
adc
cmp
fcmovbe
adc
fldcw
int3
cmc
or
mov
lahf
sub
jp
movsb
mov
and
cmp
jo
jb
inc
pusha
pop
mov
mov
outsl
mov
lret
sbb
adc
add
popa
or
pop
mov
std
adc
sub
stc
adc
cmp
mov
add
mov
dec
xor
into
or
dec
addr16
aad
pop
and
insb
mov
sarb
inc
adc
xchg
mov
mov
jne
and
xchg
sbb
fcoms
stos
inc
daa
shrl
clc
arpl
mov
mov
mov
jecxz
rcll
lods
pop
mov
add
jge
fcmovnbe
dec
push
dec
xchg
sub
sbb
inc
rorb
in
push
dec
inc
lret
xchg
sahf
stc
push
daa
cwtl
sbb
push
jp
fwait
mov
xor
int
adc
xchg
pop
lods
lods
test
mov
xlat
je
add
jl
inc
ljmp
dec
fisubrl
ds
jb
pop
movsb
cmp
push
lock
sub
xor
jno
and
jne
sub
xor
xchg
cs
cmp
cmc
dec
stc
ss
or
pop
sbbb
idivb
outsl
pop
mov
add
movb
push
add
xor
or
pop
or
test
push
jo
cmp
jne
sub
ss
push
adc
mov
mov
add
mov
pop
push
cmpsb
xchg
xor
dec
pop
push
movsb
in
sbb
das
cmp
cmp
fstpt
loopne
outsb
cmc
mov
es
or
adc
inc
outsb
pop
xchg
leave
cmp
adc
stc
xor
dec
jmp
sub
jmp
or
jae
adc
mov
mov
ficompl
and
fisttpl
outsl
insl
in
xchg
cwtl
sbb
push
in
sarl
or
sub
mov
mov
inc
jno
f2xm1
shlb
mov
hlt
sbb
lret
inc
insl
jnp
push
add
inc
inc
mov
ljmp
jno
jns
in
jl
sbb
in
cltd
mov
xor
xchg
out
ret
xor
movsl
ja
test
ror
cmp
repz
popl
cltd
hlt
insb
iret
fwait
xor
cwtl
out
loopne
pushf
add
jno
sbb
fdivrp
icebp
jo
je
lcall
stc
mov
xchg
mov
call
pop
or
jnp
cmp
stos
mov
cmpl
inc
out
loopne
mov
pop
shlb
adcb
push
push
inc
sub
and
xchg
test
xchg
popf
loopne
inc
mov
sub
icebp
push
int3
sub
enter
sbb
mov
bound
xor
mov
clc
push
imul
jecxz
test
and
inc
repnz
popf
xor
xchg
pushl
shl
je
fdivs
iret
ret
cmp
repz
stos
sbb
adcb
fdiv
cwtl
pop
pop
rcrl
cmp
scas
dec
ds
jmp
repnz
test
mov
ret
into
outsb
or
in
outsb
popa
dec
mov
or
inc
lock
xchg
jne
cmp
jg
hlt
lock
mov
inc
mov
mov
popa
cli
sarb
div
je
shll
jg
loop
xchg
mov
inc
push
inc
ljmp
andb
lea
imul
ds
xorb
or
loop
mov
jecxz
imul
mov
movsl
adc
push
sbb
loope
jg
stc
and
xor
push
cmp
fsub
ja
inc
imul
stos
cmp
pop
jae
stc
or
lods
xor
adcl
hlt
adc
loopne
dec
push
dec
adc
sbb
imull
es
sbb
mov
ds
pop
fldl
inc
push
cmpxchg
je
bound
cmp
ljmp
sub
stc
sar
mov
sbb
clc
aas
push
into
or
mov
jge
lods
stc
jno
in
daa
pop
sub
loopne
pop
in
fwait
sti
or
xor
pop
into
jbe
pop
and
ret
xor
mov
pushf
jae
pushf
out
xlat
cmc
pop
insb
or
xor
repnz
jns
mov
aam
stos
int
fsubrs
daa
shll
inc
loop
cmp
mov
jnp
popa
pop
adcb
or
icebp
push
es
xor
ret
xchg
xor
and
sub
mov
or
out
cmp
lods
sbb
addr16
in
xchg
push
jae
bound
fldl2t
sub
jmp
mov
xor
push
in
push
pushw
inc
into
xchg
popa
cli
adcb
orb
push
sub
std
mov
cmc
jo
aam
in
sub
pop
mov
inc
scas
fistl
sub
sub
xor
lock
das
pop
repz
ret
aad
shrl
or
and
in
out
mov
xlat
xor
aaa
cmp
dec
lds
repnz
shlb
outsb
hlt
divl
jne
inc
add
enter
insb
mov
mov
push
arpl
xor
and
pop
mov
cs
mov
dec
dec
fs
mov
add
and
mov
lea
add
notb
sub
out
test
sub
scas
push
insb
shl
repnz
and
pop
adc
mov
into
xor
jbe
test
adc
jo
test
xor
movsl
sbb
mov
push
gs
sub
incl
test
pop
stos
adc
sarb
mov
push
dec
cmp
inc
cs
lods
arpl
fsincos
cmp
in
mov
pop
or
loop
ss
sarl
es
daa
movmskps
dec
int
aas
sub
les
dec
mov
cmp
aam
dec
mov
pusha
pop
jge
adc
lods
push
shrb
add
mov
pop
rcr
test
sub
add
aas
cs
movsl
scas
or
pushf
outsl
xor
jne
ljmp
lods
push
lods
lods
sub
push
repz
xor
les
push
cmp
xor
notb
jecxz
dec
jmp
test
inc
call
in
dec
and
cmpsb
jb
insb
ss
out
cmp
scas
xchg
in
mov
in
shlb
and
mov
aas
mov
inc
out
mov
fdivp
mov
pushf
adc
repnz
or
xor
aad
movsb
cmp
inc
xchg
icebp
cmp
popa
jns
pop
ljmp
lods
jns
push
roll
mov
xchg
daa
daa
cmp
gs
jmp
data16
out
subb
or
imul
jne
mov
push
and
lcall
rorl
testl
pop
leave
jmp
dec
adc
pop
and
mov
jle
xor
fbld
lcall
rcll
outsb
cli
dec
xchg
add
mov
fs
push
in
xchg
mov
aas
insl
movsl
adc
push
lcall
dec
in
int3
add
into
ret
add
jb
out
arpl
xchg
jne
xchg
movsl
ret
push
dec
sub
add
mov
cmp
out
mov
xchg
rcrb
push
pop
les
mov
loope
cli
push
cs
fcoms
fldt
dec
je
inc
and
mov
jno
lods
cltd
test
repz
ret
jne
ja
je
iret
daa
fmuls
mov
push
push
leave
pop
ja
sbb
fsubl
mov
push
push
pop
test
add
scas
pop
loop
jmp
dec
add
cmpl
repnz
pop
cs
dec
int
lods
jns
js
iret
add
xchg
dec
push
push
loopne
mov
or
and
push
les
incb
sbb
mov
sbb
test
pop
rcl
and
sbb
loop
leave
or
and
add
mov
push
jp
jecxz
push
add
out
loopne
inc
dec
xorb
add
xchg
xor
mov
adc
sub
mov
arpl
lret
xchg
mov
add
add
ret
sbb
xchg
and
enter
in
push
bound
xchg
jp
ret
sbb
jnp
rcrb
mov
dec
pop
test
add
adc
repz
or
xor
mov
jecxz
xor
or
xchg
shlb
sbb
or
hlt
mov
shll
adc
jge
insb
imul
pop
imul
mov
inc
xchg
lahf
sub
cmc
jl
popf
jmp
aas
insb
mov
mov
test
mov
sarb
push
pop
movsb
test
mov
ljmp
mov
popf
aaa
push
pop
subl
fs
movsl
pushf
push
loope
xor
pop
jp
or
test
das
mov
shr
xchg
lods
outsl
scas
inc
outsb
fwait
mov
sub
dec
stos
push
cmp
xchg
and
pusha
movsl
test
add
fmull
out
fldz
iret
bound
aas
sbb
int
xlat
mov
inc
sahf
push
jae
in
ret
inc
ja
loope
push
test
cmp
lods
mov
xchg
push
push
and
mov
shll
sub
cli
cmc
xor
xchg
inc
mov
shll
subl
and
les
imul
outsl
shrl
sub
jae
cmpsb
repnz
pop
add
push
sub
sarl
mov
repnz
or
pop
mov
push
or
fbstp
addr16
sub
mov
std
cmp
xchg
mov
mov
ja
arpl
adc
xor
pop
out
pop
jle
cld
xchg
stos
rcrb
fldt
fists
jmp
sbb
cmp
add
daa
fwait
enter
mov
lret
jbe
xchg
pop
lock
push
cmp
out
test
sub
cmp
cltd
cmp
test
jmp
jbe
int
jmp
mov
andb
push
xchg
adc
mov
out
or
mov
in
lahf
call
xor
nop
popf
xor
out
push
inc
cmp
aam
pop
in
pop
xor
lods
lret
das
cli
cmp
cmc
icebp
jnp
xchg
jb,pn
in
pop
jl,pt
cmp
xor
xor
xchg
xor
hlt
fwait
outsb
lahf
dec
lea
mov
dec
lretw
sub
add
lods
sahf
rcr
sahf
or
add
hlt
sbb
lds
dec
fwait
mov
ss
xchg
int
jmp
cltd
ljmp
test
out
cmp
aad
loop
js
inc
ret
push
data16
ret
mov
push
and
mov
lods
push
jp
clc
js
push
xchg
js
jne
movsl
sti
int
aas
cltd
or
adc
push
push
aad
mov
fbstp
test
into
inc
and
cld
lods
leave
sbb
push
mov
je
sbbl
ds
mov
clc
push
sbb
pop
icebp
pusha
cmp
imul
negb
and
daa
mov
iret
cli
clc
jo
lds
sub
popf
out
mov
inc
lea
insl
inc
mov
mov
sti
push
mov
mov
inc
cmp
xor
sub
comiss
adc
setle
inc
xor
cmp
std
jns
in
ja
jg
push
or
sub
inc
int
cltd
and
and
daa
mov
pusha
pop
sub
adc
outsl
pop
or
stc
into
test
xchg
add
movsl
les
cmc
pop
cli
push
inc
gs
in
mov
adc
sbb
pop
mov
insb
addr16
movsb
sbb
cltd
mov
cs
xchg
cmp
in
pop
inc
das
out
xlat
xor
and
jo
xchg
jbe
jle
mov
adc
dec
cmp
and
out
sbb
fstps
cmovo
pop
clc
test
pop
jbe
cs
or
ja
xchg
arpl
imul
ljmp
push
data16
and
mov
add
arpl
mov
in
lcall
test
insl
mov
mov
stc
mov
xchg
adc
mov
rclb
es
cmp
push
gs
or
adc
test
cmp
in
icebp
mov
scas
pop
sahf
sbb
fimull
add
adc
inc
in
push
sub
sbb
or
xchg
fisttpl
and
mov
inc
push
and
and
jo
int3
mov
out
adc
mov
leave
fwait
add
or
ja
dec
leave
ficoms
xor
orl
sbb
es
push
rclb
or
cs
xor
mov
into
ja
xchg
int3
add
mov
ds
adc
out
stc
out
xor
leave
cmp
push
jl
add
push
int3
stc
or
sbb
xor
dec
scas
xor
xchg
mov
mov
or
cmpsl
std
adc
es
adc
adcl
dec
or
xchg
int
inc
bound
sub
pushf
leave
ljmp
ds
test
xor
xchg
adc
lret
lods
jb
int
mov
aaa
mov
mov
lcall
and
jbe
and
or
lea
int
cmc
out
dec
out
mov
jns
nop
int
jecxz
adc
shlb
cwtl
fsubrs
jno
dec
not
inc
in
lods
out
ror
mov
mov
js
pop
leave
arpl
xchg
cltd
mov
cmp
orl
xchg
out
dec
pop
aad
jno
jecxz
jl
add
mov
pop
xchg
shl
test
icebp
and
bound
fsts
fadd
in
sbb
lds
in
xchg
pushf
cmp
push
xchg
push
sub
lea
repnz
insl
cmp
xchg
addr16
pushf
repz
pop
leave
sub
dec
sub
jecxz
scas
repz
push
jecxz
jnp
or
add
loopne
jo
sub
cld
aad
repnz
iret
or
popf
and
test
fisubrl
sahf
das
dec
lds
imul
add
xchg
adcb
mov
fcoms
sub
js
stos
cmc
pop
and
push
and
fmulp
test
jecxz
sarl
or
sub
mov
push
xchg
jne
rcl
movsb
movb
inc
dec
sbb
and
jno
adc
out
out
sti
aam
dec
add
mov
inc
pushf
cmp
in
xor
aad
cmp
ljmp
ret
mov
lcall
xchg
mov
xchg
adc
scas
jl
int
outsb
dec
into
loope
outsl
mov
push
push
pop
mov
mov
pop
jp
pop
ja
cs
cli
mov
insl
in
das
xlat
sub
insl
pop
outsl
cltd
shr
sub
mov
lds
iret
jg
dec
sub
mov
pop
and
test
cmp
jle
add
add
inc
dec
add
lock
sub
stc
dec
imul
push
mov
add
insl
mov
jae
cld
add
inc
add
nop
out
movsb
xchg
andb
sub
shlb
sbb
es
and
cmpsb
scas
xchg
mov
inc
cwtl
jg
and
dec
and
gs
jb
push
or
pop
cmp
fwait
test
xor
stos
mov
add
arpl
xchg
and
jnp
lret
jne
mov
mov
cmp
add
leave
xor
pop
or
mov
xchg
adcb
lret
insb
xchg
add
jae
arpl
loope
jl
outsl
fdivrl
inc
daa
loope
loopne
mov
sbb
rcrl
and
xchg
and
std
sbb
jno
xchg
xchg
jo
inc
mov
jnp
mov
mov
xor
sbb
cld
and
sbb
cmpsl
shrb
push
pop
add
out
jne
pusha
pop
lret
mov
outsl
lods
out
lahf
lahf
cltd
loope
lods
lret
xchg
and
icebp
add
xchg
movsb
das
loopne
call
aaa
pop
add
mov
inc
aam
push
orl
imul
sbb
loope
jge
pop
es
fwait
push
test
mov
dec
inc
out
mov
xchg
shrb
repz
sbb
call
cmp
mov
xor
mov
les
je
pop
imul
sarb
sub
adc
push
sti
hlt
mov
xor
adcl
push
aam
pop
push
cmp
fsubrl
imul
jb
xchg
inc
imul
enter
mov
cmpl
popf
sub
repz
xor
repz
jg
xor
aam
xor
ss
sub
sti
pop
xchg
outsl
sub
mov
dec
rclb
cmp
adc
fsubr
push
lods
leave
cwtl
sar
test
cmp
aad
xchg
push
push
xchg
movsb
mov
inc
mov
sbb
lock
add
mov
jns
outsb
and
ret
xchg
sub
jge
mov
lcall
shlb
stos
in
add
push
xchg
pop
ljmp
jns,pn
fildll
inc
xchg
mov
push
roll
cmp
jbe
ret
jnp
bound
or
test
cmpsl
jmp
or
fcom
jg
and
xchg
sbb
xchg
icebp
cwtl
call
popf
icebp
pop
push
into
mov
jbe
mov
xchg
or
call
push
insb
lock
inc
cvtps2pi
pop
cmp
sbb
or
jae
scas
ret
adc
xor
decl
mov
cmpsb
xchg
imul
lds
pop
fsubl
ss
sahf
push
fcmovnb
push
xchg
or
sub
pop
movl
xchg
ljmp
jbe
inc
dec
ret
leave
lcall
faddl
shll
into
lret
scas
dec
call
das
cmpsl
adcl
push
es
jne
push
shll
adc
repz
in
pop
mov
push
dec
mov
sbb
sarl
cli
mov
ljmp
xchg
add
insb
adc
loopne
xchg
mov
rolb
sub
in
mov
mov
or
pop
inc
and
jmp
dec
sarl
rcll
sti
sbb
arpl
pop
scas
pop
loop
je
jae
dec
bound
xchg
test
lods
add
lods
and
cmp
inc
mov
shrl
les
mov
xor
dec
aaa
ss
jb
movsb
cld
jl
enter
popf
jns
test
pop
sub
inc
iret
call
in
mov
loop
loop
fisubl
lods
scas
outsb
adc
mov
call
sbb
adc
jl
sbbl
mov
lods
jle
dec
mov
mov
scas
jmp
testb
pop
jo
pop
js
add
jl
ljmp
and
push
and
jmp
das
roll
dec
ljmp
sub
inc
popa
inc
dec
and
rolb
shrl
insb
or
or
sbb
cwtl
imul
sub
sbb
test
aad
insl
aad
aam
adc
sbb
mov
mov
sbb
stos
dec
mov
mov
scas
xchg
xchg
push
outsl
mov
lahf
dec
sbb
in
cmpl
jg
and
ljmp
mov
jp
ret
sub
pop
aam
decb
mov
mov
insb
xchg
ds
mov
pop
jp
push
and
inc
adc
mov
lea
fdivrl
or
aad
mov
inc
jle
sbb
ret
jae
sbb
push
sub
scas
push
push
sub
addr16
dec
jg
or
dec
jnp
dec
cltd
sbb
sbb
mov
fstpt
cltd
movsb
and
jle
int
repz
out
ja
lret
pop
in
cmc
imul
pop
sub
push
pushl
cmc
fwait
mov
mov
xchg
int
rclb
jne
fs
scas
xor
jno
test
adc
add
inc
fs
xor
add
rcrb
mov
fildll
pop
lahf
movsl
je
dec
push
mov
addl
mov
mov
mov
mov
rclb
mov
sahf
jge
aam
repz
loope
mov
mov
push
add
mov
inc
jo
outsl
jge
mov
inc
mov
std
out
pop
add
dec
xlat
mov
cld
inc
pop
pmulhw
or
nop
mov
sar
push
js
jno
ljmp
add
xor
sub
aaa
xchg
data16
lcall
xlat
sub
dec
xchg
test
adcl
out
hlt
and
mov
lea
or
or
jbe
and
pop
cmpsl
inc
test
fcompl
mov
xchg
aad
push
lds
or
jmp
dec
stos
data16
cmp
mov
lods
ja
aas
sub
mov
sub
fldenv
mov
adc
mov
scas
xchg
adc
pop
mov
mov
cld
add
aad
adc
mov
jbe
outsb
iret
jb
mov
lcall
jns
jb
pop
loop
jne
xchg
jne,pt
pop
fstpl
inc
dec
sarb
jecxz
movsl
rcrl
or
cs
xor
outsb
inc
notb
mov
imul
je
rcrl
aam
fisttps
xor
hlt
adc
scas
dec
adc
data16
in
push
sarl
inc
sbbl
repz
iret
icebp
imul
xor
neg
lahf
movsb
lods
xchg
pop
dec
sub
mov
shlb
cmp
test
call
jl
jno
sub
jns
jecxz
inc
mov
cmpsl
mov
loop
ss
add
cld
mov
sub
mov
jle
xor
xchg
sub
xor
xchg
test
hlt
nop
popa
rolb
popa
adcb
xchg
std
jl
imul
cmpb
loop
nop
cld
jns
int
adc
ds
jg
test
addr16
and
movsl
jmp
inc
sub
pushf
cmp
sbb
inc
fs
and
rcrl
in
or
outsl
int3
cmp
xchg
jno
push
cs
scas
push
push
sub
adc
inc
sbb
andl
lea
test
sysexit
xchg
lahf
xor
test
and
fisubs
xchg
popa
cmp
pop
outsb
mov
rdmsr
pop
mov
pop
push
adc
push
jnp
and
adc
lret
stc
inc
sbb
push
pop
jecxz
and
icebp
xchg
push
push
fcoml
testb
jbe
mov
arpl
sbb
mov
rclb
imul
aam
mov
ret
jle
mov
fisubrs
addl
xorl
fucomi
sbb
shlb
loope
adc
pop
jne
cltd
mov
sbb
push
mov
inc
enter
and
or
mov
jecxz
dec
out
and
mov
orb
adc
push
xchg
sahf
mov
int
in
aam
and
or
xor
push
pop
pop
and
icebp
push
push
jbe
jnp
enter
inc
dec
mov
jecxz
adc
jle
fisubrl
jl
in
popf
lods
subl
rcll
mov
test
je
or
fldt
sbb
test
cs
xchg
mov
mov
xchg
divb
ss
adc
ret
lret
insb
mov
push
mov
jnp
loope
clc
cli
dec
mov
xor
rcrb
mov
cs
fcoms
test
sub
mov
loope
adc
ficomps
jo
int3
and
push
aaa
out
inc
add
pop
xchg
add
js
pop
pop
sbb
lret
mov
loopne
cmpsl
lock
push
sarl
push
loope
dec
nop
pop
into
ja
lock
sub
push
and
push
sub
mov
or
jo
rorb
pop
sbb
lods
addr16
sbb
push
cli
sahf
stos
inc
pushl
iret
push
mov
xor
ret
or
push
lcall
and
in
cltd
jne
fnstcw
push
adc
xor
scas
aas
pop
leave
dec
sbb
push
and
lods
hlt
scas
inc
jmp
insl
jecxz
std
fmull
sub
add
scas
gs
dec
sub
lcall
inc
add
jbe
xchg
les
lea
add
mov
sub
shr
sub
xchg
lds
out
in
mul
iret
dec
icebp
lahf
push
mov
xchg
les
stos
adc
add
hlt
imul
out
sbb
sbb
fcmovne
popf
repz
jecxz
divl
popa
xlat
fisubrl
push
clc
daa
fsubs
add
pop
std
repz
hlt
mov
jge
ret
sbbb
add
jbe
jno
fcoms
outsl
push
sub
in
push
insb
inc
pushf
lret
pusha
sbb
out
loop
dec
inc
lcall
jbe
push
cmpsb
sub
and
cmpsb
gs
lahf
cmp
sub
cmp
sub
negl
loopne
insl
fcmovnu
shrl
xchg
cmp
jecxz
push
mov
es
test
dec
jnp
js
xchg
data16
or
gs
inc
mov
push
das
cli
stos
mov
fucomi
sbb
pop
test
movsl
mov
mov
inc
fldt
adc
fnstenv
cmovno
jb
push
mov
push
dec
xor
out
test
jno
xchg
and
push
addr16
jmp
sub
add
mov
stos
nop
adc
jg
add
cmp
pop
add
sub
push
lret
push
or
fadds
push
sbb
shl
and
jo
adcl
mov
mov
cmp
notb
mov
jecxz
add
and
adc
lcall
in
dec
out
jno
stos
or
inc
mov
lcall
jecxz
daa
sbb
insb
fdivl
jl
mov
mov
stos
lds
ret
pop
mov
push
xchg
test
fstl
inc
inc
inc
gs
add
clc
test
xlat
sbb
push
lods
mov
test
pop
ret
push
sbb
loopne
dec
and
xchg
aaa
or
xor
xchg
xchg
rorb
pop
sbbb
outsl
mov
sbb
sbb
adcl
add
iret
leave
in
mov
xchg
or
dec
pop
scas
imul
iret
fcompl
pop
dec
arpl
push
cmp
frstor
out
fs
add
test
sub
jp,pt
icebp
jne
fwait
imul
add
fsubl
fisttps
scas
test
adc
xlat
jb
jno
iret
fwait
icebp
nop
shlb
push
mov
push
push
popf
in
out
jle
xor
or
int
mov
out
jmp
sub
or
call
sub
insb
int3
sub
ror
xchg
filds
add
aad
das
ss
ja
je
sbb
xor
outsl
movsl
rol
cld
pushf
inc
sbb
mov
inc
mov
xchg
pop
pop
cmc
lahf
mov
dec
cmc
push
imul
je
xor
sub
popf
add
stos
cmp
inc
jmp
fdivrs
dec
ret
test
mov
cmpsl
push
jae
ret
push
mov
and
xor
clc
out
lret
jmp
fisubrs
sub
push
cltd
mov
ret
push
adc
cmp
xlat
out
mov
xchg
lods
jmp
mov
aas
mov
test
pop
loopne
je
repz
hlt
popf
idiv
jnp
and
dec
imul
lcall
das
sub
mov
push
xchg
negl
dec
mov
mov
in
mov
out
int3
mov
xchg
clc
stos
outsl
jae
mov
lea
ficompl
add
lea
iret
jmp
inc
jo
mov
mov
pop
imul
cmp
jle
es
aaa
loopne
inc
bound
test
pop
xor
sbb
rclb
cmpsb
pop
dec
into
dec
mov
pop
sbb
xchg
pop
and
call
sbb
jns
orl
sbb
mov
inc
sti
and
pop
inc
pop
call
ret
pushf
pushf
lods
inc
mov
jecxz
push
xlat
lret
in
mov
or
ds
cmp
arpl
mov
pop
mov
int3
sbb
inc
stos
sti
xchg
arpl
test
xchg
sbb
xor
jns
out
imul
add
cld
inc
call
push
cmp
and
jb
mov
adc
or
add
ret
into
xor
pop
jge
xor
stc
mov
outsl
sub
shl
dec
push
and
iret
push
pop
cmpsl
cmp
mov
popf
push
add
test
and
cmc
lret
inc
rorb
adc
hlt
xchg
fs
jae
xor
sbb
inc
mov
sahf
subl
clc
lret
imull
pop
add
xor
ja
xchg
scas
and
xchg
mov
or
mov
xchg
inc
int3
sbb
outsl
mov
cmp
out
mov
sub
push
xchg
sub
in
lret
scas
push
adc
enter
push
test
adc
in
out
loope
ss
and
sub
inc
jo
cmp
xchg
cmp
xor
daa
push
scas
cmp
mov
out
add
mov
cli
dec
and
cmpsb
mov
roll
cmp
mov
sbbb
les
hlt
jne
inc
lods
and
mov
sbb
jb
inc
push
dec
popf
or
mov
out
push
gs
mov
sbb
enter
lea
pop
sti
hlt
and
shll
lea
xchg
xchg
cltd
subl
ds
inc
add
cmpsl
scas
jo
out
scas
xor
xchg
stos
stos
jnp
or
imull
mov
jno
or
push
add
add
das
das
ja
idivl
icebp
dec
cmp
pop
xchg
push
xor
push
xor
add
jb
mov
xchg
dec
adc
hlt
xchg
in
mov
inc
movsb
mov
addr16
in
iret
mov
add
ja
or
xchg
dec
aad
add
xlat
push
adc
scas
icebp
out
cmp
cmp
clc
subb
mov
roll
mov
or
xchg
adc
or
inc
adc
jp
je
daa
testb
mov
xchg
add
xchg
insl
inc
lret
or
mov
mov
das
dec
pop
hlt
jl
pop
and
arpl
jno
movsl
mov
sbb
scas
pop
jmp
lcall
jg
int
xor
fsubrp
dec
out
scas
cmp
jge
mov
push
dec
jne
mov
inc
push
mov
pop
dec
adc
je
std
add
xor
rcrl
repnz
xchg
ds
jle
add
es
pop
in
call
adc
shrl
push
xchg
mov
lock
lret
lret
cltd
shl
stos
sti
lods
pushf
inc
push
fiaddl
idivb
sub
xchg
add
ficoms
out
cmpsl
add
or
xchg
fs
aas
insl
enter
adc
cwtl
xchg
inc
mov
fsubs
adc
ljmp
cmp
scas
xchg
jb
xor
imul
xor
fs
stos
rcll
insb
lods
in
rol
sbb
inc
mov
test
mulb
out
mov
and
cmpsb
mov
inc
adc
mov
cmp
roll
vmovntdq
daa
cmp
jl
push
inc
ret
movsl
shll
ret
mov
jb
daa
stos
lods
sub
fists
repnz
sti
out
test
mov
lds
xor
filds
into
xchg
inc
mov
jns
shl
popf
xchg
cmpl
das
into
mov
pop
push
in
and
cmp
fnstenv
lcall
pop
jge
push
inc
int3
lcall
js
mov
push
xor
and
movsb
fstpl
icebp
pop
pop
ljmp
mov
jmp
ljmp
xchg
mov
das
xchg
movsb
sub
frstor
cmp
or
dec
mov
daa
pop
mov
cmp
stos
imul
push
popf
das
movsb
inc
in
cli
ljmp
insb
push
cs
stos
jmp
fldenv
push
lock
imul
mov
or
daa
xchg
inc
cs
or
sbb
xchg
das
pop
xchg
sbb
ret
sub
dec
pop
das
or
pop
iret
inc
dec
jns
fdiv
sbb
pop
sub
mov
push
cld
push
clc
pop
cld
or
dec
dec
jno
sub
sbb
xchg
xor
and
pop
ret
xchg
or
add
loop
push
add
adc
adc
jmp
pop
cmp
xor
jmp
jns
and
inc
out
fdiv
clc
push
sub
sbb
xor
dec
and
lret
mov
arpl
mov
xlat
dec
pusha
arpl
imul
repnz
cwtl
mov
lcall
data16
lds
sahf
stc
cmp
dec
adc
cli
into
adc
das
mov
shlb
or
aas
dec
add
xchg
jg
mov
mov
xlat
decb
cmpsl
loope
dec
sarb
push
sub
adc
popf
push
dec
outsl
mov
popa
inc
out
lods
push
lahf
aam
aaa
clc
xor
psllq
mov
int3
orb
inc
ljmp
ss
loope
xor
stos
xor
nop
mov
addr16
arpl
aaa
loope
pusha
inc
enter
dec
dec
dec
out
pop
dec
lds
adc
push
adc
xor
ficompl
dec
or
xchg
fldt
or
sti
cmc
pop
std
pop
dec
lret
std
jl
pop
jns
insl
xchg
scas
adc
mov
lahf
push
movsb
sub
mov
daa
mov
push
cmc
cli
loope
pushf
xchg
cld
aad
popf
dec
loopne
icebp
sbb
xchg
sti
ss
js
mov
pop
jno
cmp
mov
pand
outsb
dec
test
mov
loopne
jbe
lcall
sub
cmp
sub
push
and
adc
pop
outsl
std
jnp
push
fdivrs
sahf
xchg
pop
fs
or
popa
ret
cmp
sub
inc
push
pop
mov
xor
js
dec
stos
rclb
js
hlt
dec
mov
mov
in
mov
cltd
push
mov
sbb
cltd
mov
push
pusha
jne
jb
and
mov
push
pop
xchg
int
icebp
cmp
out
mov
mov
xchg
adc
push
daa
cwtl
out
std
movsb
xlat
daa
adc
xchg
jmp
or
repnz
push
adc
jbe
push
rcrl
ror
jno
dec
push
popf
and
push
xor
or
mov
push
call
mov
sbb
aam
lret
jmp
lock
or
dec
xchg
mov
scas
jo
aas
or
fdivs
sub
add
outsb
or
add
cmc
jne
lods
jl
push
push
mov
inc
fldz
jp
xchg
and
movsb
cmp
cmp
jbe
scas
aam
or
inc
mov
pop
aam
addr16
add
or
mov
gs
adc
aad
pushf
ljmp
adc
cld
mov
adc
adc
je
mov
lahf
fmull
outsl
out
mov
mov
jge
pop
jge
icebp
gs
or
mov
mov
push
jbe
adc
lds
push
mulb
sbb
or
mov
and
test
daa
and
lcall
dec
cltd
inc
out
pop
fildl
cmpl
out
inc
mov
xchg
inc
jmp
add
cmp
xchg
aad
mov
dec
notl
and
and
jmp
jb
daa
push
sub
lret
stos
rcrb
imul
stos
jns
lea
lods
pop
shrb
fstp
int3
add
adc
sbb
mov
mov
ja
repnz
ret
ret
es
bound
pop
lea
dec
cmp
dec
xlat
inc
fisttpll
inc
push
popf
imul
push
ret
jnp
jg
xchg
jne
int3
lods
lahf
sarl
add
mov
xor
cmp
loope
lcall
and
inc
push
or
and
jbe
fs
and
and
in
mov
clc
inc
or
pop
xchg
pop
lahf
movsb
pop
xorb
in
cmpsl
mov
dec
xchg
cli
or
or
xchg
das
push
push
push
xchg
mov
adc
dec
cwtl
test
sub
mov
push
popf
jge
ret
rcrb
inc
dec
lea
add
or
xchg
push
roll
imulb
data16
test
loope
mov
inc
popa
xchg
popa
and
adc
mov
fldcw
outsb
mov
cmp
or
sub
sub
aas
imul
sbb
jg
repz
in
xor
dec
lret
sbb
pop
enter
adc
sub
lea
orb
adc
jg
push
xchg
movsl
inc
cmp
mov
push
subb
mov
pop
xor
push
jl
cmp
jns
push
cmp
addr16
cmp
movsb
test
in
dec
push
lret
inc
xor
mov
push
sbb
jb
comiss
cmp
outsb
iret
mov
test
jmp
lea
loope
dec
jge
add
rcrb
sub
shl
ret
adc
and
inc
cli
adc
jns
pop
cmp
add
mov
mov
adc
adc
idivl
ror
xchg
gs
fists
loop
inc
test
inc
sbb
mov
inc
or
bound
lahf
xchg
ss
stos
scas
pop
std
test
ss
mov
shl
std
fxch
lcall
pop
pop
sbb
mov
or
rorl
xchg
sbb
ljmp
pop
lcall
cli
scas
mov
dec
mov
ficompl
xchg
push
addb
mov
insb
jle
lcall
addr16
pop
and
adc
ja
jae
dec
fs
cli
fcompl
xchg
cmp
or
mov
xlat
cmp
xchg
aam
icebp
mov
jmp
mov
ds
mov
xchg
mov
ljmp
std
or
cmp
test
enter
mov
dec
lock
lret
lock
not
mov
sbb
push
cmc
pop
jno
insl
sti
nop
pop
push
inc
fnstenv
fdivl
int3
xchg
int
dec
daa
sub
sbb
rcrl
nop
jle
scas
jmp
and
std
pop
pop
mov
push
sub
jae
mov
das
push
push
adc
pop
dec
cmp
inc
scas
and
xor
mov
inc
insb
jecxz
fcmovu
mov
xchg
push
inc
cmp
and
dec
je
or
cmp
xor
pop
incl
int
adc
pushf
hlt
pop
jb
dec
pop
and
jne
add
push
add
adc
dec
loop
fmulp
int
jo
fdivs
push
shrl
push
scas
xchg
je
mov
mov
aad
frstor
push
xchg
popa
roll
test
fimull
add
sahf
pop
mov
stos
adc
mov
aaa
sub
add
pop
testl
mov
adc
arpl
jne
mov
add
aas
movsb
in
sub
out
cmp
inc
xchg
ljmp
mov
xchg
repz
mov
xchg
inc
imulb
je
add
pop
xchg
cmp
imul
out
into
mov
sub
loopne
pop
dec
mov
push
lcall
stc
movsb
fldcw
fwait
pop
fimuls
fldl
xor
ljmp
sub
inc
xchg
sbb
rolb
and
data16
jnp
enter
jns
sbb
jns
pop
pusha
test
mov
dec
jle,pn
gs
notl
cmc
sarl
add
cli
lods
ds
fcomip
push
vmovsldup
fstp
sbb
mov
lahf
lods
aaa
mov
push
dec
mov
iret
mov
mov
sahf
into
cmp
xlat
shrl
gs
lock
mov
imul
xchg
push
sub
divl
data16
jne
cmp
ljmp
xchg
out
jp
jo
adc
xor
arpl
lock
test
jl
repz
dec
inc
fcomps
push
std
das
inc
inc
xchg
xlat
loopne
or
mov
pop
push
dec
into
lret
fldl
mov
and
loope
push
sti
add
mov
mov
mov
xchg
xor
std
mov
adc
or
aad
mov
cmp
or
sub
cmp
xchg
or
mov
popf
bound
push
push
or
or
or
sub
jmp
push
sbb
dec
push
cs
or
movswl
inc
stos
into
test
subb
add
sbb
jno
mov
cmp
popf
mov
dec
cli
cli
fildl
lods
sbb
cmpsl
pop
f2xm1
xor
sarl
loope
icebp
subl
mov
lock
fwait
xor
incl
add
dec
adc
or
shrl
mov
mov
xchg
movsl
sub
decb
mov
cld
mov
outsb
jbe
jae
test
mov
cmp
mov
out
sub
and
push
jge
pop
pop
mov
jne
ret
adc
ljmp
cmp
iret
dec
add
pop
ficomps
leave
pop
mov
and
or
aam
push
out
sub
push
scas
je
fstpl
mov
adc
push
jns
sub
sbb
pushf
mov
sub
cmpsb
jb
pop
add
mov
or
pop
int3
lcall
jl
sub
aaa
stc
shll
scas
xor
repnz
fbstp
ret
sbb
shlb
int
dec
cmp
mov
mov
je
push
mov
add
out
adc
dec
in
pop
cmp
mov
or
call
pop
sarb
mov
lds
stc
dec
popf
mov
movsl
pop
fadds
bound
insl
smsw
mov
stc
jmp
cmpsl
cmp
test
mov
sbb
fcom
lods
sbb
jae
mov
and
inc
mov
lret
add
cmpsb
mov
faddl
add
insl
mov
jp
pop
xchg
int3
aaa
xlat
adc
adc
mov
in
clc
mov
nop
mov
pop
aas
leave
dec
sahf
adc
scas
lret
insb
test
daa
push
aaa
jmp
lcall
adc
aam
out
rcrb
loope
sbb
mov
repz
xlat
jge
arpl
xorb
jb
jmp
or
mov
jmp
jmp
adc
xchg
cmp
lock
in
and
or
push
jo
movsl
dec
dec
jno
xor
adc
ret
gs
imul
lock
mov
test
adc
in
insb
test
sbbl
adc
aas
lods
or
scas
fwait
and
inc
jmp
stos
stos
clc
mov
fiadds
out
mov
dec
sbb
xchg
aas
sbb
repz
inc
xor
jg
mov
sub
adc
shl
dec
insb
shrb
mov
xchg
in
xchg
lods
jle
jnp
mov
nop
mov
cmp
sbb
arpl
sub
xor
mov
xor
xchg
iret
jl
stos
adc
sub
jge
data16
jl
mov
test
add
hlt
cld
in
push
scas
push
fldcw
sbb
add
in
lret
push
rcl
gs
movsl
loopne
ret
mov
mov
xor
jns
repz
push
lcall
repnz
addr16
fwait
jno
cmpsl
mov
cli
push
rcrl
fsubl
mov
loope
cmp
lock
movsl
clc
mov
pop
loopne
xchg
or
dec
mov
sbb
sahf
jno
adc
cmp
mov
mov
pushf
repnz
cmp
aas
mov
jno
adc
jg
cmp
es
movd
out
popa
repz
outsb
call
loop
cmp
ror
decb
sbb
push
ret
jnp
mov
fidivl
outsl
in
mov
testl
inc
lock
add
call
cmp
lret
xor
gs
shl
notl
into
mov
push
xor
xchg
sbb
adc
jp
push
cmpsl
mov
test
aad
jl
repz
add
enter
inc
cmp
fdivrl
jnp
mov
and
clc
dec
cmp
mov
pop
fcomps
mov
cmpsb
mov
lret
lods
jne
mov
push
or
fcoml
loopne
xchg
push
sbb
adc
mov
loop
adc
out
por
or
mov
gs
add
faddp
xchg
mov
sti
sbb
outsl
xlat
hlt
sbb
adc
call
js
bound
call
hlt
test
sub
dec
sbb
scas
inc
mov
cs
outsb
jnp
xchg
pop
mov
outsl
cmc
xchg
sahf
cmc
test
stos
rol
lret
xchg
pop
jmp
pop
jb
rclb
cmp
add
andb
lea
push
jge
movsl
test
test
cmp
mov
fnsave
pop
rorb
stc
stos
mov
push
ret
sub
adc
ficompl
push
les
push
jnp
adcb
sbb
shld
scas
aaa
dec
pop
or
data16
outsl
sbb
loopne
rcll
mov
hlt
inc
or
dec
divl
xchg
js
fdivl
sbb
pop
xor
push
pop
jl
jne
xchg
xchg
cmpsl
xchg
mov
push
mov
mov
dec
mulb
repnz
inc
bound
pushf
cmp
mov
add
inc
mov
sub
add
and
stos
in
out
orl
fistps
imull
fdiv
sub
jo
sbb
xlat
push
inc
pop
icebp
sub
andl
pop
gs
scas
pop
jmp
xor
xchg
and
in
imul
xchg
je
or
pop
or
jbe
test
ljmp
xchg
imul
int3
enter
mov
pop
and
mov
mov
or
out
push
leave
stos
mov
push
xchg
mov
adc
sub
int
push
gs
fcoml
mov
push
stc
fcompl
jecxz
inc
sub
insl
pop
sbb
xor
xchg
nop
js
mov
lret
sbb
push
mov
push
add
inc
rep
das
out
add
sub
sub
mov
and
mov
mov
sub
loopne
faddp
arpl
push
addr16
int3
mov
mov
mov
jne
arpl
lahf
mov
add
mov
fbld
les
jae
inc
jg
fstpl
dec
clc
sbb
xor
mov
adc
imul
pop
mov
pop
jns
mov
jge
xorl
sub
cmc
not
addr16
ds
cli
cltd
cmp
pushf
std
mov
mov
mov
loopne
fdivr
dec
bound
orb
sub
mov
outsl
jo
loope
sbb
jo
js
adcb
testl
mov
cmpsl
sbb
insb
rcrb
js
lret
mov
jp
push
push
pushf
pop
in
in
scas
roll
xchg
cmp
lea
ss
pop
jle
lds
ljmp
daa
mov
jbe
ret
fwait
bnd
mov
hlt
insb
add
pop
pop
hlt
data16
adc
jp
roll
pusha
jge
sahf
adc
test
adc
cmp
cmp
inc
dec
xlat
mov
xchg
pop
jns
loop
les
or
enter
not
pop
sbb
loopw
cwtl
jns
or
mull
movl
cmpsl
stos
movsb
je
mov
mov
xlat
add
add
add
jno
das
or
sti
jmp
xlat
mov
into
je
fisubl
stos
mov
into
outsl
loop
movsl
shll
jp
push
pop
mov
dec
jns
fdivp
cmp
add
mov
adc
sub
mov
gs
inc
mov
hlt
mov
ja
pop
or
fbld
jmp
xor
xchg
mov
lock
scas
sbb
xchg
cmpsb
sub
jae
inc
out
scas
mov
add
pop
loop
pop
or
ret
fiaddl
out
bound
jecxz
cmc
fiaddl
or
pusha
int3
fsubr
movb
mov
xchg
fcmovu
cmp
fs
jnp
or
rol
and
sub
jns
pop
mov
arpl
dec
sbb
add
sub
aad
push
sub
xor
xchg
popa
stc
mov
loope
xchg
das
cmp
xor
jecxz
cmp
scas
xchg
popf
xchg
hlt
add
xchg
nop
rcll
shlb
cmp
aas
rorb
sarl
xchg
fstpl
mov
aam
pop
mov
outsl
ficomps
fldl
leave
test
jnp
fildll
rep
sahf
jl
int
mov
mov
cmp
decb
adc
stos
fwait
push
jb
or
mov
xchg
insb
cmc
and
jmp
mov
and
adc
in
add
je
lea
fwait
jl
cwtl
dec
repz
insl
movb
jb
ret
scas
sbb
ret
push
cmpsb
jb
jns
int
subl
popa
les
out
out
sbb
pop
daa
add
stc
sarb
cmpsb
sub
pop
xor
test
mov
pushl
add
dec
cmc
shll
mov
loope
sbb
sub
mov
scas
into
aad
inc
andb
imul
int3
pushf
mov
les
mov
int
inc
into
jmp
xor
fstps
fcompl
outsb
sbb
iret
sbb
add
cmpb
push
aas
lret
sub
jp
scas
mov
scas
push
xor
lret
imul
packsswb
popa
xchg
xorl
jnp
fninit
lea
adc
jns
mov
pop
xor
cltd
stos
imul
out
xlat
mov
bound
cltd
shr
sbb
sub
gs
lock
add
sar
and
mov
dec
and
or
sbb
add
xchg
sti
jge
out
cmc
imul
or
fsubrl
popf
outsb
mov
clc
or
pop
es
pop
in
sbb
daa
inc
xor
ficompl
enter
or
testb
loope
inc
xlat
adc
pop
test
cld
les
pop
cmpsb
in
int3
je
stos
cmp
dec
push
movsl
or
sub
gs
repnz
cmpsb
add
mov
add
jp
mov
and
jecxz
into
and
jns
jp
fsubrs
insl
xor
fnsave
cmp
decb
ret
je
icebp
notb
div
fwait
inc
sarl
out
dec
lret
adc
sub
mov
aas
or
inc
cmp
cli
in
ds
leave
test
or
add
fisttps
clc
ret
ret
cmp
xchg
jb
jecxz
or
mul
cmpsl
pop
divl
jne
popa
mov
pushf
xor
ljmp
rorb
loop
jnp
jae
mov
pop
jno
adc
xor
add
je
sbb
mov
xchg
insb
inc
inc
cs
sbb
add
dec
cmpsb
je
dec
cmp
pop
or
mov
out
push
icebp
xchg
std
xlat
ss
sarb
jge
jmp
scas
popf
cmpsl
loop
frstpm(287
lods
mov
push
sub
push
pop
scas
ret
das
adc
jb
bound
test
cmp
cmp
and
insb
sbb
xor
xor
in
bound
stos
xchg
push
adc
inc
jle
add
decb
sub
dec
leave
ffree
inc
inc
adc
jle
sbbl
sti
and
push
sub
out
dec
movsb
das
push
jecxz
dec
jns
aad
cmp
lods
cmp
cwtl
mov
mov
popa
or
and
push
out
mov
cli
scas
inc
into
dec
fstpl
jl
adc
push
ret
and
xor
call
jge
int3
jbe
jge
sbb
cltd
xchg
fisubrs
iret
mov
rcrb
push
xor
add
lds
cwtl
dec
sarb
pop
mov
shll
sub
scas
mov
addr16
pop
cmp
jmp
jecxz
pop
or
fcoms
stos
mov
cltd
pusha
and
out
mov
fimuls
push
mov
jge
out
sarb
arpl
xchg
in
outsl
jl
icebp
or
sub
jl
fsubr
xchg
insl
aad
and
repz
in
and
stos
inc
cmc
push
xchg
xor
enter
rorl
or
push
ljmp
jle
push
jge
std
and
scas
add
mov
jge
lcall
lcall
pop
dec
ja
movsb
jg
jae
jbe
loope
loop
mov
in
lahf
adc
inc
outsb
out
cmp
cwtl
jo
sub
icebp
aas
into
pop
popf
pop
in
out
push
andl
pcmpeqb
adc
pop
mov
cmp
stc
aas
movsl
sub
dec
inc
sbb
inc
inc
xchg
cmp
data16
subl
mov
mov
dec
leave
leave
mov
dec
cmpb
mov
dec
frstor
add
mov
loopne
fdivrs
sti
jg
shll
loop
ja
scas
testl
pop
push
sbbl
orl
gs
inc
lcall
xchg
add
iret
pop
mov
das
xchg
outsb
sub
fmull
daa
sbb
mov
pop
mov
jo
cmp
ficoms
adc
cmp
aad
adc
jns
shll
outsl
add
mov
clc
stc
rorb
das
jl
pushf
cmp
ja
iret
adc
lds
sub
push
dec
xorb
pushf
cmp
or
jmp
adc
leave
mov
in
push
xchg
aaa
popf
xchg
sarl
adc
adc
ljmp
push
sub
and
ss
ljmp
push
dec
jp
push
pop
add
dec
xchg
jl
daa
or
cs
ror
lods
push
movsb
pop
fistps
dec
pushf
or
cmp
stc
jge
sbb
pop
fildll
push
arpl
fisubl
push
dec
sbb
pop
aas
addr16
adc
fisttps
xchg
scas
call
mov
aaa
loop
outsl
pop
sub
mulb
les
ret
aas
mov
mov
insl
cmpsb
add
mov
push
sbb
ret
xchg
shll
jmp
lea
dec
pop
cmpsl
les
insb
ret
xchg
sub
fs
cmpsl
dec
outsb
stc
add
jno
xchg
dec
nop
stos
dec
imul
shlb
cmp
push
pop
pop
push
sbb
fs
pop
inc
jge
sub
sub
shll
mov
xchg
sub
in
out
outsb
mov
cmpb
jecxz
imul
sbb
in
imul
nop
mov
addr16
out
pop
repz
outsb
in
sbb
mov
push
sbb
lahf
cmp
xchg
lcall
out
mov
out
add
call
jb
int3
mov
addl
int3
dec
insb
cmp
jbe
add
mov
test
clc
jae
fisttpll
jg
pop
hlt
add
push
xor
push
lea
bound
fnsave
xchg
or
or
add
sti
mov
xor
mov
or
cmp
lds
jns
es
jnp
sub
inc
xlat
ss
movsb
or
test
jp
clc
lret
stos
sub
clc
add
call
ss
shll
pop
xchg
pop
arpl
mov
sub
jo
stos
jnp
lahf
sub
push
cld
btr
dec
cmp
pop
jnp
push
push
mov
inc
aad
pop
imul
sbb
test
cmp
pop
xor
cli
xorb
in
inc
or
mov
ret
call
push
inc
test
mov
mov
sahf
jle
je
and
adc
push
mov
arpl
cmp
push
lock
mov
mov
stos
cmp
mov
or
mov
andb
js
pop
out
mov
hlt
jns
xchg
rcrw
inc
fisttpl
push
test
aam
cmp
dec
ret
inc
mov
hlt
dec
cltd
push
add
dec
fldl2e
loop
xchg
std
dec
ffreep
jmp
push
insb
fs
lcall
idivl
in
imul
dec
add
fldenv
movsl
inc
sti
movsb
sarb
pop
jp
ret
cmp
out
mull
xor
fnsave
js
adc
icebp
outsl
fstl
jecxz
jge
stc
mov
stos
push
ficoml
sarb
jae
xor
dec
push
sbb
notl
out
sbb
popf
sbb
xchg
shr
cmp
xor
lods
shr
int
mov
popa
xor
sub
mov
fsubl
adcw
mov
fxam
cltd
mov
mov
insl
in
int3
mov
lds
imul
movb
in
push
bnd
add
out
into
hlt
cmp
stos
repnz
mov
and
testl
cs
enter
add
mov
or
mov
insl
jne
jno
lcall
add
movsl
ja
pop
out
add
mov
ljmp
and
cmp
inc
aad
mov
push
xchg
aad
dec
add
sub
ljmp
jne
movsb
into
aam
mov
pop
repz
fbstp
js
xor
push
dec
dec
jae
and
pmaxsw
mov
stc
or
sarl
dec
fcoml
int3
cmp
insb
mov
jle
push
pop
test
push
adc
push
or
adc
dec
adc
out
adc
or
out
call
dec
idivb
not
loopne
orl
mov
cwtl
scas
das
xchg
addr16
arpl
mov
sbb
cli
mov
or
gs
shr
rolb
inc
and
push
hlt
out
cmc
loopne
jb
sti
sar
adc
in
arpl
jl
cmp
test
int3
js
int
add
cmp
sub
fsubr
daa
jno
jmp
nop
push
and
sbbl
iret
xor
xorl
hlt
and
mov
int3
aaa
push
mov
push
ret
ret
cltd
mov
aad
cwtl
mov
inc
data16
xchg
pop
repz
jge
ljmp
dec
cmp
ficompl
sbb
hlt
je
inc
mov
push
mov
test
add
mov
push
jge
hlt
bound
movsl
dec
fisttpl
xchg
add
or
cli
out
cmpsl
xor
push
std
lea
sbb
enter
rcrb
mov
cmc
fwait
not
cmp
fiaddl
pusha
sub
jae
adc
push
testl
popf
fs
xor
fs
lds
and
xor
xchg
mov
fnstcw
bnd
mulb
push
idivl
repz
fstl
sub
xchg
and
cmp
sbb
dec
push
std
mov
lds
and
dec
inc
leave
push
subb
mov
mov
xchg
mov
fidivs
aam
cmc
mov
ja
or
arpl
xchg
jb
dec
popl
pop
popf
ds
dec
lsl
je
inc
mov
or
dec
insl
testb
inc
xchg
shlb
dec
and
cli
xchg
subb
xor
push
popa
js
sub
xor
into
js
xchg
ret
cmp
inc
jle
std
inc
xchg
xor
out
and
push
mov
sbb
cmp
and
sub
or
dec
or
std
mov
repnz
das
or
or
sbb
add
mov
pop
jo
mov
filds
mov
mov
pop
dec
push
dec
insl
arpl
test
lret
daa
dec
fisubs
or
rclb
jge
lea
xchg
cmp
add
jb
mov
outsb
mov
dec
loopne
cwtl
gs
mov
and
mov
or
push
lock
mov
jecxz
and
call
jae
inc
sub
cli
sub
movsb
dec
mov
dec
in
adc
shrl
lahf
mov
and
in
fdivrs
pop
popa
jmp
mov
mov
sub
js
and
fmull
adc
vpminub
jp
lds
outsb
jle
movsb
mov
dec
mov
cmp
and
test
mov
loope
lret
test
xor
push
sarl
sbb
or
xor
rorb
xchg
out
mov
push
and
mov
cwtl
xor
xor
shrb
cltd
loope
cs
aaa
int3
mov
adc
and
inc
adc
adc
lret
cmp
pop
loopne
sub
cli
push
inc
ret
or
into
imul
stos
pop
dec
push
cmp
or
pop
scas
insl
out
or
pop
mov
fs
fmul
ror
cmp
ss
in
aam
xchg
push
cmp
call
and
sub
lret
out
and
push
sbbb
pop
sti
cmovg
scas
movsb
std
fucomi
or
rorl
add
jl
arpl
dec
lcall
and
gs
inc
cs
stos
fstps
hlt
push
mov
nop
nop
daa
cmp
mov
bound
cwtl
add
mov
xchg
cld
cmp
sub
loopne
imul
jb
xchg
ret
add
loope
cltd
sbbl
push
pop
xrelease
es
pminub
mov
push
lds
sbb
add
or
mov
imul
pop
push
adc
mov
cmp
jmp
add
pop
lds
fcomps
rorb
xchg
jge
mov
repz
add
mov
sbb
enter
das
add
jo
pop
mov
adc
je
mov
inc
mov
stos
shr
das
pusha
sbb
xorl
in
fdivrs
and
mov
or
mov
inc
lds
rcr
movups
ret
sbb
jecxz
ficoms
adc
jns
jge
mov
ljmp
push
dec
jg
jnp
adc
insl
repnz
shrb
shll
pop
jne
lea
test
inc
clc
xchg
in
xchg
test
push
mov
jbe
push
imul
mov
add
testb
js
sub
imul
mov
mov
loop
sbb
cmpsl
movsb
cmpb
and
jae
push
loop
call
mov
cltd
and
mov
adc
adc
int3
or
rcl
inc
cltd
dec
jbe
lock
inc
out
add
cmc
stos
xchg
jns
and
pushf
or
sub
and
xchg
sub
adc
adc
cmpsl
mov
mov
mov
icebp
sub
jo
loop
push
out
pop
sbb
lcall
mov
fdivrl
mov
test
and
xchg
or
dec
jns
iret
mov
aas
mov
xchg
adc
aad
adc
mov
out
dec
test
cmpsb
dec
dec
es
shl
and
sahf
iret
mov
ss
xor
mov
lods
cmp
mov
add
scas
inc
pop
mov
pop
inc
aad
xchg
mov
inc
stc
iret
adc
adc
mov
out
mov
inc
cld
movsl
push
pop
cmc
cmpsb
adc
push
cmp
aam
xor
out
loopne
ds
push
push
mov
dec
jbe
xor
or
cld
das
daa
lods
adc
mov
xchg
jp
rcll
adc
incl
dec
into
jo
test
aaa
jmp
xor
in
cmpsb
push
in
nop
xor
dec
mov
sub
mov
test
inc
cmp
adc
int
cmc
divl
jmp
mov
xchg
loope
xchg
adc
filds
jnp
imul
shrb
out
mov
je
or
dec
inc
out
ss
pop
and
cmp
jno
adc
scas
sub
outsb
int3
ficompl
adc
outsl
adc
mov
add
repnz
jne
cli
popa
mov
rcl
and
jmp
movl
and
ret
pusha
pushf
aam
ds
outsb
das
outsb
mov
add
test
and
jle
rolb
sub
and
add
and
push
jge
fimuls
dec
mov
add
stos
sbb
mov
fisubs
pop
pop
cld
cmp
adc
inc
adc
xchg
xchg
repz
and
popa
loope
xlat
add
cltd
ficompl
sub
pop
fs
incb
mov
or
outsl
inc
mov
cmp
rol
notb
clc
ljmp
push
repnz
adc
pop
mov
aad
popf
iret
ret
mov
inc
push
fiaddl
jmp
push
dec
cmpsl
add
adc
lds
adc
mov
aam
clts
rcll
cli
fnsave
cmp
jecxz
xor
mov
jecxz
ja
fldcw
insb
das
jp
add
push
aad
cmc
fs
fiaddl
ss
jae
xchg
cmp
pop
inc
les
repnz
in
push
es
sbb
les
lret
xchg
lods
in
pop
out
cli
add
pop
pop
loope
pop
gs
add
out
push
push
xlat
cli
rcrl
adc
dec
ficompl
inc
addb
imul
push
jl
aas
xchg
ds
add
jb
stos
ret
stos
das
cmc
scas
dec
add
sti
sarl
mov
ds
jne
aas
stos
fmuls
sbb
lods
test
in
add
mov
mov
mov
inc
and
mov
pop
dec
pop
test
sub
and
cld
adc
cmp
fcomps
roll
jae
cld
fsubrp
cmp
test
sub
cwtl
iret
callw
sbb
test
pop
or
mov
add
inc
gs
or
sahf
xlat
mov
cs
ret
adc
push
je
pop
test
push
sub
push
cmp
lcall
punpckhdq
jecxz
mov
pop
pop
movsl
cmpsb
outsb
shld
and
pop
lret
xor
loopne
push
push
test
xor
enter
js
cwtl
test
add
xor
push
andl
shl
stc
add
adc
mov
fnstenv
clc
cs
bnd
sti
xor
pop
cmp
cmp
movsl
rorl
add
xor
push
aad
jle
aas
je
adc
xchg
push
mov
cmpsl
fcmovnu
ficoms
hlt
push
fcoms
in
out
adc
test
sub
ret
mov
ret
test
cmp
adc
imul
mov
mov
inc
pop
mov
in
cld
outsl
lock
mov
rorl
movl
cwtl
in
mov
mov
inc
orl
cmp
mov
daa
sahf
mov
sub
ss
flds
push
imul
insl
aas
cmp
cmc
pop
cld
in
sbb
mov
push
js
adc
iret
pusha
push
fcomps
shlb
lds
sbb
mov
fisubrs
mov
lcall
sbb
mov
out
dec
sarb
insb
cmpsb
ret
in
push
test
cld
push
popf
sub
jp
inc
std
xchg
lods
inc
sbb
jecxz
push
test
mov
fsubrp
lods
imul
outsl
test
push
sub
fsubl
or
push
or
and
sub
xchg
scas
imul
test
pusha
push
sub
pop
sarb
fucom
inc
push
or
mov
xor
orb
call
adc
mov
mov
pop
jl
pushf
loop
fcmovne
push
ljmp
push
cmp
jbe
mov
pop
outsl
rolb
outsl
iret
adc
inc
lods
inc
in
jne
and
sub
jnp
repnz
cmp
dec
and
sub
fwait
jmp
push
inc
or
mov
es
test
add
mov
scas
in
dec
hlt
inc
mov
pop
fsubr
dec
movsl
pop
fsubl
pop
sub
out
mov
testb
inc
xor
mov
inc
fiaddl
pop
dec
lock
scas
sbb
mov
pop
out
adc
and
inc
stc
rcrl
fcoml
call
jo
mov
mov
adc
fs
mov
push
cmc
mov
incl
rorb
std
testl
jle
cmc
aas
mov
jb
icebp
lea
mov
sbb
cmc
into
push
inc
sbb
or
add
sti
ficomps
mov
xchg
lods
mov
dec
aas
push
push
test
cltd
push
call
jg
mov
dec
push
or
rcrb
mov
adc
fdivrl
xor
inc
mov
mov
cld
mov
inc
jecxz
sub
and
gs
mov
or
dec
pushf
add
dec
cmp
or
pop
popa
pop
int3
add
rolb
xor
movsl
pop
ja
popf
out
aas
scas
shll
inc
daa
movsl
mov
xor
rorl
xor
cltd
lcall
int
testl
xchg
add
cwtl
cmpsl
inc
jb
xchg
mov
pop
xchg
sbb
xchg
gs
mov
adc
in
loope
mov
cmp
data16
mov
jno
adc
pop
shll
adc
push
inc
cmpsb
in
push
push
popf
gs
aas
insl
int3
stos
fstpt
jecxz
and
movsb
cmpb
inc
popa
sbb
jmp
push
or
mov
mov
cmpsb
clc
pop
inc
push
sbb
popl
fidivrl
lcall
xchg
xchg
adc
xor
iret
inc
ds
daa
fs
fildl
mov
stc
loope
xchg
shrl
cld
xor
jecxz
call
xor
icebp
jg
xchg
xchg
pop
pop
sub
andb
mov
mov
xchg
inc
mov
dec
push
nop
cmpl
in
jecxz
out
mov
mov
push
mov
out
jns
out
out
adc
pop
dec
ds
dec
mov
sbb
nop
test
mov
or
push
adc
sub
inc
dec
call
ret
push
push
call
mov
push
or
cmc
call
sub
inc
mov
sub
push
fucom
sub
sti
adc
xor
mov
jnp
xor
cmp
mov
push
dec
push
dec
inc
adc
add
div
add
fisttps
pop
push
pop
cmpsl
aas
je
je
cwtl
xor
jg
xchg
insl
mov
idivb
out
sub
push
adc
fisubrs
scas
cld
int3
dec
jmp
sbb
push
sbbl
pop
inc
push
xchg
jmp
rcll
outsb
xor
mov
fcomps
add
bound
adc
mov
xor
das
sub
xor
pop
pusha
xchg
andb
icebp
cmpsl
xor
mov
cmp
cli
sub
push
scas
xchg
ja
in
xchg
insl
loopne
xchg
pop
and
inc
bts
cld
and
inc
scas
les
or
push
xorl
sbb
and
rolb
mov
lods
call
icebp
mov
pop
push
not
add
gs
mov
pop
mov
loop
in
xchg
pop
lcall
xlat
es
sbb
dec
mov
insl
ss
gs
jg
sbb
repnz
pop
and
in
rcrb
clc
inc
adc
das
xor
cmpsl
push
adc
mov
mov
mov
mov
imul
repz
repnz
insb
jno
ljmp
cmpsl
or
xchg
or
pop
mov
pop
cmp
xchg
dec
sahf
inc
dec
push
bound
lcall
add
lret
xor
ss
arpl
mov
fidivrl
fsubrs
repz
shlb
mov
push
mov
aaa
addl
xorl
push
cld
leave
subb
cmp
fimuls
jle
push
xchg
mov
or
outsb
stos
sti
in
pop
aad
lds
mov
sub
sbb
jo
mov
sbb
mov
outsl
cmp
jbe
jbe
pop
xchg
mov
mov
fildl
adc
ficoms
jne
aam
mov
into
mov
jg
loopne
jns
inc
lret
ss
int
fmuls
lahf
nop
and
loop
jbe
mov
dec
mov
mov
inc
data16
or
hlt
cmp
xor
dec
mov
ljmp
out
addr16
sub
jp
pop
into
loope
sub
sub
adc
pop
sbb
popa
sub
sub
fidivrs
enter
cld
cmp
push
cld
pop
jecxz
mov
push
sub
jns
adc
inc
sahf
enter
pushf
jg
jne
cmp
mov
cli
hlt
addr16
pop
repz
cmc
cmc
cwtl
clc
bound
and
xor
repnz
lods
cld
jp
xchg
cltd
adc
sbb
scas
jmp
or
out
dec
cmp
jns
mov
jns
xchg
xlat
push
in
arpl
icebp
ljmp
shll
push
jl
or
clc
test
lahf
out
mov
cmp
aad
mov
dec
inc
out
icebp
loope
enter
fstpt
mov
adcl
dec
lahf
xchg
cli
mov
xlat
sub
jg
lcall
pop
hlt
mov
ficoml
jl
mov
inc
mov
repnz
cwtl
int3
adc
in
add
ds
push
sbb
test
jnp
dec
scas
xor
rolb
add
aad
cmp
test
test
mov
push
push
andl
sahf
push
mov
rcrb
cwtl
fisubl
jge
pop
or
out
shl
mov
test
mov
dec
jle
clc
add
dec
and
cmc
cmp
adc
lret
das
xor
adc
pop
pop
or
roll
test
jecxz
out
out
add
push
mov
jle
mov
mov
cmpsl
xor
in
xchg
cli
push
sbb
mov
aas
sub
xor
jnp
mov
out
or
mov
in
outsb
inc
sub
mov
stc
sbb
shrb
lock
ljmp
or
xchg
mov
out
inc
rcrb
jmp
stc
movsl
jmp
mulb
sarl
stos
or
push
inc
push
push
stos
adc
mov
lods
add
aad
and
iret
pop
xchg
sub
dec
add
sbb
lret
in
lea
or
stos
bound
mov
test
jo
into
mov
ja
and
cmp
xchg
loopne
pop
scas
lret
rcll
fisubrl
stos
hlt
bound
lods
aas
xchg
or
adc
adc
test
cmpl
movhps
jne
cmp
add
mov
jo
and
cmp
lods
dec
out
mov
jmp
push
jbe
cwtl
call
orl
das
sbb
lea
imul
mov
test
lcall
or
fdivl
push
mov
adc
hlt
loopne
insb
mov
and
mov
sbb
cwtl
ss
or
jecxz
scas
lahf
and
jecxz
fcmovb
lret
mov
jl
andb
es
xor
inc
in
aaa
lahf
mov
mov
jo
mov
pop
pop
repz
push
inc
test
adc
test
jmp
push
mov
sbb
xchg
sub
ss
scas
jmp
cld
inc
cwtl
inc
sbb
dec
mov
dec
mov
mov
pop
outsb
cmp
mov
inc
in
push
push
stc
add
les
data16
out
jbe
stos
xor
xor
mov
jb
leave
push
cli
jg
pop
mov
nop
xchg
jle
dec
cld
add
jle
in
shrl
sub
jbe
jns
movsb
out
pop
pop
mov
xchg
inc
in
jb
push
xchg
jle
jae
test
roll
and
ret
mov
and
and
pop
pop
jbe
test
loopne
rcrl
shr
filds
xor
jecxz
inc
jne
xchg
push
js
out
nop
cwtl
push
sub
les
addr16
test
inc
out
cmp
aaa
fcom
mov
inc
stos
addl
mov
jbe
out
mov
in
sbb
xlat
test
loope
movsl
cld
inc
cld
sub
ss
lock
jae
adc
shrb
pusha
jb
dec
pop
sbb
out
cwtl
or
lret
repz
inc
mov
cltd
jle
fwait
push
rcl
aad
xor
lcall
dec
roll
or
cmp
xchg
and
jmp
jecxz
adc
adc
cs
or
test
mov
lods
adc
xor
test
pop
setle
xchg
popf
movsb
rclb
push
sti
cld
loopne
cmp
inc
xor
out
adc
enter
jmp
les
mov
pop
push
sti
cs
outsl
loope
lods
sbb
jae
inc
cmp
cmp
add
cs
mov
movsb
mov
clc
and
subl
push
push
nop
sbb
pushf
cmp
outsl
notl
jmp
fildll
dec
jae
sub
lret
sub
xor
stos
dec
shrb
fsubrl
mov
cwtl
mov
sbbl
push
int
mov
insl
push
sahf
addr16
jae
jno
cmp
jbe
fsubr
std
stc
clc
pop
lahf
sbb
jne
sub
outsl
and
and
mov
push
daa
sub
imul
ljmp
imul
xlat
cmp
arpl
xchg
adc
enter
dec
cli
xor
std
gs
rcl
or
and
scas
imul
xor
movsb
stos
jg
cmp
and
sub
bound
out
xor
mov
cmp
xchg
movsl
bnd
add
movsl
ja
mov
push
cmpsl
mov
add
testb
xor
popf
stos
cmp
mov
jg
divl
xchg
mov
shll
sub
fstl
mov
call
orb
sbb
jge
bound
jbe
test
sbb
xor
shrl
out
pop
in
pop
cmpsl
xlat
aas
int
sbb
xlat
ret
sti
jmp
outsl
mov
push
xchg
stos
enter
scas
push
jne
mov
cmc
icebp
mov
fldcw
pop
adc
iret
pop
cli
jbe
cld
dec
in
mov
mov
popa
xchg
dec
mov
popa
mov
lods
cmc
rcll
aas
mov
ds
movsl
shrb
sub
push
cwtl
pop
push
xchg
add
int
xchg
add
and
xchg
lret
xchg
out
sbb
sbb
xchg
pop
push
inc
mov
xor
popa
and
jae
movsb
cmp
xchg
add
fisubs
push
scas
push
repnz
pop
add
jns
inc
xchg
xor
cs
je
pusha
xchg
push
jecxz
push
dec
dec
out
mov
shlb
rclb
bound
jbe
mov
lods
sub
fs
xor
aam
dec
aas
imul
nop
xor
mov
cmp
out
jecxz
aad
xor
xchg
incl
popa
jae
inc
cltd
call
push
jne
jl
and
sahf
nop
ljmp
xor
std
test
lods
sub
sub
dec
pop
dec
xor
sub
int3
and
push
cmpsb
and
dec
xchg
and
mov
pop
out
and
in
mov
lret
inc
jo
stos
aas
arpl
mov
cmp
lods
adc
dec
inc
dec
hlt
loop
leave
mov
sub
lahf
adcl
adc
mov
mov
pop
shlb
xor
mov
jno
iret
or
inc
in
imul
std
gs
adc
sbb
push
out
sub
rorb
in
outsl
repnz
xor
pop
sbb
pushf
cmp
fwait
sub
fcmovne
dec
insl
jnp
into
aad
xor
jg
mov
cs
fstpl
sarl
lea
bound
ljmp
or
hlt
xchg
xchg
or
sub
sbb
cmpsl
lock
cs
and
cwtl
push
xor
test
aaa
leave
arpl
cltd
inc
rcr
jb
clc
mov
add
repnz
leave
je
enter
pop
iret
or
iret
aaa
fildll
cmp
sti
test
dec
out
and
movl
ret
fwait
jp
daa
push
js
fdivrl
cmp
jo
adc
adc
js
test
pop
xor
mov
notl
shrl
inc
cld
ja
in
repz
xchg
pop
mov
loope
dec
cmp
icebp
add
or
mov
sub
push
adc
cmpsl
fs
sarl
and
pop
addr16
insb
xchg
cmp
fnstcw
popf
sarb
fnstenv
repz
shr
xchg
xlat
inc
fnstcw
sbbl
cmp
push
add
add
mov
xor
push
dec
and
js
outsb
pop
dec
lahf
rcl
out
dec
inc
or
sub
adc
lret
lretw
ss
sbb
mov
sub
add
les
sbb
fimull
stos
cmp
shlb
ror
stos
and
jo
aad
jmp
sbb
jno
lods
xor
shll
inc
pop
mov
std
in
and
lds
adc
outsb
lea
popf
clc
xor
jp
enter
cli
scas
imul
popa
aas
mov
adc
push
mov
filds
popa
adc
cld
shll
dec
add
addr16
cmpsl
mov
mov
add
cmc
jg
popf
sub
cmp
cli
lret
shrb
jbe
mov
pop
jb
imul
je
lods
xchg
jns
xor
daa
and
sub
cmp
pop
push
jmp
fidivs
rclb
orl
pop
ds
icebp
adc
push
jmp
and
mov
mov
daa
loopne
in
ret
inc
xchg
push
sbb
aas
xchg
cltd
inc
dec
cmpsl
aam
jge
pop
and
pop
adc
pop
jge
cwtl
mov
inc
popa
or
notl
shlb
cltd
add
lock
xchg
das
push
jns
outsl
mov
imul
insb
int
and
xchg
cmc
mov
bound
cmp
dec
out
mov
loop
out
pop
mov
jno
clc
dec
jg
cmp
repnz
movsl
out
adc
add
push
cmpsb
iret
in
cmpsl
movsb
cmc
jg
xchg
repnz
jb
ret
pop
push
test
mov
outsl
stos
lea
mov
lret
sub
push
inc
loope
stos
xchg
jmp
add
cmpl
in
mov
cmp
fwait
mov
loopne
or
je
mov
imull
and
or
into
push
out
xchg
and
push
add
cmc
mov
aas
push
jae
and
lcall
push
cmpsb
pop
sahf
je
test
push
adc
cltd
pop
inc
xchg
and
cmp
xor
mov
mov
lea
insl
xchg
lock
cltd
imul
xor
ss
rol
cmp
fstpt
mov
adcl
andb
mov
stos
mov
or
mov
add
sbb
jae
mov
jne
jnp
sbb
out
in
testb
pop
insb
movsl
lret
aas
imul
jns
sahf
fmull
icebp
rclb
add
test
mov
scas
mov
mov
js
cmpsl
jle
push
xchg
ret
jae
iret
je
or
add
out
mov
sahf
fists
xchg
outsb
sbb
pop
gs
xor
sbb
and
xor
std
push
insb
sti
push
cmp
dec
dec
outsl
mov
mov
psrld
das
xchg
add
ljmp
sub
jg
popf
lods
mov
scas
fsts
pop
jp
arpl
mov
jbe
imulb
retw
lds
das
shlb
mul
fildll
les
rcr
push
imul
xor
adc
jmp
enter
nop
jmp
into
insb
lret
xchg
inc
inc
aad
out
mov
lds
dec
lcall
cmp
xchg
lock
jle
sbb
and
jae
loope
inc
ja
xor
lcall
jnp
mov
loop
lock
leave
jle
test
and
sub
mov
xchg
xor
dec
fldcw
pusha
js
in
jle
inc
and
mov
aam
rolb
adc
and
dec
jb
inc
jl
and
pop
ljmp
cmp
adc
dec
cwtl
movl
sub
dec
push
pop
pop
and
sub
jle
sbb
aaa
inc
xchg
ss
pushf
pushf
or
fwait
pop
push
fs
ds
xchg
push
jbe
pop
xor
jo
jo
xor
js
vsubpd
std
not
arpl
nop
adc
pop
divl
movsl
std
dec
cmc
mov
int3
mov
mov
jle
xchg
fbstp
pop
inc
mov
outsl
mov
sbb
lea
test
mov
pushf
rclb
xchg
nop
lea
push
imul
push
aas
inc
rcrl
sbbl
in
adc
hlt
xchg
xchg
lret
adc
repnz
jmp
push
cmp
fdivrp
xor
clc
loopne
pop
rcrl
mov
adc
adc
ret
add
xor
jbe
enter
scas
push
inc
mov
add
in
andl
fcoms
inc
jb
iret
sbb
dec
rolb
imull
cmp
add
push
and
pop
sub
push
mov
mov
pop
jb
cmpsl
dec
rcll
fnstcw
sarl
xchg
loopne
sub
adc
jae
push
rol
push
xchg
ja
xchg
jp
call
mov
pop
movsl
jne
add
hlt
or
mov
xchg
int3
pop
lods
inc
mov
pop
sbb
xchg
xor
jo
fiadds
mov
jge
cmp
fwait
jle
adc
std
or
xchg
aad
es
rcll
aad
sahf
nop
lods
push
aam
jbe
repz
mov
cld
imulb
aam
ljmp
sbb
lret
inc
mov
ljmp
push
push
add
jmp
add
lods
xchg
push
imul
push
mov
data16
sbb
test
jb
pushf
pop
mov
cwtl
jmp
jp
push
sub
movsl
xlat
testb
sub
outsb
dec
sti
cmp
xchg
cmp
push
jbe
and
sbb
scas
add
pop
mov
scas
xor
ret
sarb
push
push
jae
cmpxchg
shl
mov
ss
lods
into
ss
adc
xor
pop
sub
mov
cmp
fcoml
ficomps
adc
out
lds
sbb
sub
jb
jnp
loope
bound
xchg
enter
in
cmp
add
add
mov
push
popa
or
adc
fdivr
bsr
sbb
out
addr16
lcall
push
and
mov
fs
popf
test
lret
mov
push
lods
aas
addr16
jbe
adc
sub
fmull
jo
sahf
mov
lea
mov
xchg
adc
mov
mov
push
mov
sar
lock
fs
inc
or
xor
gs
pusha
xor
stc
inc
sub
fidivs
hlt
dec
sbb
xchg
ret
cld
adcl
dec
std
pop
decb
jnp
sti
mov
sbb
repnz
je
je
popa
add
aas
mov
mov
pop
pop
int
test
mov
loopne
add
jl
push
lock
into
dec
add
divl
js
adc
jecxz
in
addr16
aam
push
mov
stc
inc
sar
pop
dec
add
mov
push
cmp
fcmovnu
sub
les
lods
cwtl
cmp
adc
inc
pop
xchg
pop
push
into
pop
adc
and
xlat
rorb
mov
sbb
repnz
and
inc
mov
jecxz
pslld
jl
enter
sub
cli
sub
lcall
insl
add
out
leave
mov
inc
jg
pop
mov
push
insb
popf
mov
xchg
dec
nop
xor
pusha
lret
in
mov
popa
pop
pop
ds
enter
or
cmp
ja
pop
andl
loope
inc
test
add
shrb
mov
sub
sahf
and
xchg
mov
jne
stos
adc
dec
nop
mov
pusha
shrb
and
push
stos
scas
add
pop
xchg
cltd
push
fcomps
mov
mov
cmp
int3
fwait
lods
aaa
add
cltd
fisttpll
lret
mov
shll
inc
cmp
push
xor
and
pop
pop
lock
sub
jo
lret
test
jno
stos
xchg
add
imul
testb
add
out
jno
jle
popa
jmp
gs
mov
mov
or
aad
aas
sbb
std
aad
pop
xor
fcoms
pop
sbb
fcmovbe
popl
mov
fiaddl
ret
nop
lods
pop
lods
lds
mov
test
lea
xchg
pop
xor
xchg
mov
adc
xor
lds
pop
negb
adc
faddl
push
adc
lret
push
imul
rol
test
and
in
mov
sarl
mov
ja
fs
mov
xor
mov
lea
xchg
jne
pop
sub
rol
sub
insb
xchg
imul
in
lock
cmp
cmpsl
pop
mov
std
adc
xchg
or
add
pop
xchg
or
dec
mov
popf
in
fidivrs
vprotd
inc
mov
pop
outsl
and
sbb
stos
push
xor
xorl
and
jo
int3
xor
lcall
clc
stos
xor
in
clc
stc
flds
cmp
fs
loop
fmul
repz
add
mov
push
mov
or
push
sbbl
daa
jp
cmp
xlat
clc
jno
fiaddl
mov
sub
push
icebp
dec
aam
loopne
mov
push
push
jbe
rorb
es
dec
test
dec
mov
bound
pushf
rcll
cmp
pusha
pusha
aaa
sub
icebp
rcrb
sbb
adc
in
fildll
dec
int
mov
cs
rcll
pop
mulb
sub
ret
inc
int3
sub
push
sbbb
mov
mov
out
dec
mov
mov
jno
push
test
xchg
mov
cwtl
pop
jle
and
xor
out
ret
mov
cmpsl
mov
bound
cmpsl
cmp
imulw
cltd
mov
or
fwait
mov
popa
inc
lods
xchg
popf
test
scas
push
gs
xor
push
and
sarb
xchg
fucomip
notl
cmc
fs
hlt
cmpsb
jp
or
add
jo
push
mov
sti
pop
pand
mov
mov
stos
repz
in
enter
mov
add
push
xchg
in
popa
mov
test
push
add
xorl
sbb
push
mov
push
hlt
pop
dec
scas
into
out
push
test
mov
leave
jbe
movsb
pop
push
das
aam
out
out
sbb
outsl
and
test
call
outsb
mov
cmpsl
sti
pop
jmp
push
push
inc
xor
test
pop
loopne
pusha
jmp
std
jnp
scas
test
sahf
lret
push
cmc
sub
xchg
or
pop
sbb
fcmovnbe
in
jmp
pop
mov
shrb
mov
jns
or
xchg
xor
lods
movl
icebp
cmp
stc
mov
or
mov
xor
pop
andl
cli
in
mov
jp
loopne
jmp
es
cmc
movsl
xor
jne
sbb
pop
js
xor
out
inc
lret
imul
test
std
int3
or
sub
into
icebp
push
and
repnz
cmp
notl
xchg
xor
dec
arpl
pop
xlat
jne
rcll
loopne
gs
lea
lahf
out
loop
lcall
or
adc
mov
dec
in
repnz
idiv
push
xchg
enter
add
and
rcrl
push
cmpsb
cmpsl
jg
movsb
js
dec
gs
pop
mov
clc
push
bound
and
mov
jne
xchg
movsb
push
aam
inc
xchg
stos
xchg
pushf
lea
fisubrl
in
movsl
subl
mov
xchg
jne
jecxz
sub
cmp
jo
inc
negb
repz
rorb
dec
jnp
sub
pusha
xor
adc
push
cwtl
lret
cmp
fidivrs
cld
data16
stc
sub
sub
dec
arpl
divb
and
loop
cmp
outsb
jb
leave
in
cmp
test
mov
movsl
pop
orl
push
cmpsl
inc
jae
add
adc
aaa
pop
scas
shl
loopne
mov
jae
sub
push
out
shlb
adc
sub
mov
test
xor
and
jnp
outsl
dec
call
jge
scas
mov
stc
mov
pusha
inc
jno
out
call
push
mov
loopne
lcall
xchg
cmovo
dec
and
ljmp
jge
pop
or
cmp
sub
leave
xchg
cmovno
rcll
je
addb
mov
push
mov
cwtl
and
mov
add
fisttps
test
test
or
imull
cmp
jg
daa
bound
call
add
insl
outsb
testb
or
enter
lods
or
test
and
shlb
jmp
jp
and
mov
mov
mov
ss
xchg
cld
shl
ljmp
push
jne
mov
cltd
pop
push
lods
in
cwtl
push
leave
push
in
pop
shlb
mov
xor
sbb
shrb
insl
jp
jne
mov
rcr
ret
inc
jmp
pushf
mov
addb
hlt
rcr
mov
cmp
add
loopne
movsl
adc
push
push
lahf
xchg
xchg
xor
mov
mov
lds
dec
cmp
push
ss
push
pop
call
xchg
out
js
xchg
xchg
ljmp
in
or
add
or
daa
or
or
stc
ret
fdivrl
das
mov
mov
fidivs
mov
xchg
xchg
jmp
cmpsb
jnp
xchg
enter
push
push
adc
decb
cmp
push
xor
leave
push
es
and
xor
enter
lret
fisubrl
mov
sub
xchg
clc
les
gs
jb
inc
inc
xorl
pop
int
test
lods
sub
and
jno
and
loopne
cli
movsl
ljmp
sbb
rolb
dec
mov
jmp
add
jnp
inc
sbb
and
dec
outsl
or
daa
pop
jmp
jno
clc
fs
aam
and
adc
clc
repnz
pop
fimull
lods
sub
adc
test
lcall
adc
add
out
inc
movsb
loop
pop
sbb
cmp
sub
fldt
sbb
push
mov
cmp
jmp
xor
jno
movsb
add
xorl
into
decl
sarl
add
xchg
mov
push
sti
clc
cltd
cmp
fwait
enter
inc
xchg
leave
push
mov
sub
dec
jo
decl
xor
fistpll
inc
cmpsb
lods
shl
call
mov
jae
pop
pop
cmp
pcmpgtd
fldl
sub
cmp
xchg
lret
mov
adc
and
int
dec
mov
mov
movsl
inc
xor
add
test
ss
shrl
jl
or
jmp
inc
testb
imul
fidivs
inc
pop
and
pop
adc
jnp
xchg
jno
add
mov
mov
jno
add
jmp
in
ja
add
and
movsl
fs
jbe
arpl
outsb
add
sbb
iret
popa
mov
cmp
pop
pop
aam
cmpsb
or
std
int
mov
cmp
vldmxcsr
pavgb
sbb
bound
mov
movsl
push
dec
ss
aaa
aaa
dec
inc
stos
imul
call
cmp
sbb
push
hlt
ja
add
cmpsl
push
scas
push
xrelease
lret
mov
pop
and
pop
pop
jl
xor
push
xor
rcrb
std
xchg
mov
pop
jecxz
sarb
mov
in
call
fwait
or
fwait
popf
mov
mov
cmp
fdivs
push
push
jge
mov
pop
cltd
sbb
rcrl
ret
lret
stc
push
inc
bnd
sar
xlat
out
cmp
sar
push
repz
fcomps
pop
test
arpl
lods
pop
icebp
jle
dec
mov
add
and
xchg
xchg
lods
push
jge
je
popf
mov
or
add
in
aaa
dec
lret
dec
icebp
mov
repz
fistpl
rcrl
jnp
mov
xchg
jg
inc
push
xorl
push
dec
pop
scas
xchg
nop
shl
xor
push
dec
sub
push
mov
push
and
xor
sub
es
andb
sarl
mov
cmpb
mov
movsb
ret
fimull
push
mov
xor
ret
cltd
or
jge
pop
mov
popf
sbb
jae
outsl
jae
sub
loope
fwait
ljmp
cltd
or
push
sbb
cmp
pop
pop
adc
ljmp
fwait
ret
sbb
cld
and
das
xor
fsubrs
movsb
adc
jne
stos
cmp
data16
je
dec
mov
mov
std
ljmp
bswap
adc
xchg
loope
ret
sub
mov
sub
mov
lea
push
popf
outsl
icebp
inc
mov
enter
faddp
xor
test
inc
jecxz
push
or
test
xchg
mov
jg
mov
jae
mov
push
in
sarl
lahf
and
xorb
movups
subb
inc
or
aad
fwait
rol
inc
cmpsb
ficoml
sub
inc
pushl
in
adc
repnz
shll
gs
xchg
je
xlat
iret
inc
xchg
shlb
mov
mov
pop
add
pop
adc
push
or
icebp
sti
sbb
add
or
jecxz
sbb
daa
in
sub
or
orl
scas
add
cmp
pop
mov
loopne
popa
pop
jp
sub
jno,pt
sub
in
jge
nop
lret
mov
pop
lcall
les
add
mov
data16
test
push
jno
cmpsb
stos
pop
and
jle
add
stos
stos
adc
cmp
aad
cmp
lods
pop
pusha
inc
mov
rorl
gs
add
or
pop
jge
rolb
xchg
outsb
push
add
xchg
xor
adc
cmpsb
arpl
movsl
jno
ret
pop
int3
adc
insb
cmp
or
adc
xchg
rorb
mov
shrb
mov
jae
mov
add
jns
pushf
sbb
or
mov
es
mov
sub
rorb
insl
xchg
push
leave
add
gs
repnz
lea
cli
out
outsl
lret
dec
adc
es
push
jno
psrlq
dec
adc
sbb
popf
fisttps
out
popf
push
std
xchg
fwait
mov
ret
jns
pop
test
lods
push
and
cwtl
iret
scas
imul
jle
push
pop
in
mov
sub
or
div
mov
push
test
push
shlb
add
cmc
pushf
dec
push
dec
jg
jecxz
insl
add
lret
push
dec
out
insb
pusha
pop
in
adc
xchg
int3
cld
or
sub
fimuls
pop
nop
xor
lea
add
pop
sub
fs
sbb
aaa
int3
push
fsts
push
jl
fxam
pop
xchg
pushl
gs
ljmp
add
repz
pop
shl
lret
insl
push
sahf
xchg
aam
lds
push
cltd
jbe
sub
test
cli
clc
jo
sub
jg
fnstcw
or
jae
xchg
sbb
xor
dec
arpl
mov
fmulp
push
outsb
imul
dec
mov
sti
lock
mov
pop
sub
mov
cmovle
ds
jl
lods
loopne,pn
int
jno
repnz
and
shlb
out
xchg
jle
hlt
mov
cs
dec
cmpsl
jp
mov
clc
xor
lahf
ret
sbb
mov
cmp
sub
hlt
inc
adc
rolb
lcall
xor
rol
push
negl
pop
mov
sbb
stos
xor
inc
jl
mov
fstpl
and
cli
xchg
shrb
daa
xchg
idivb
cmp
lock
lcall
and
shrl
push
pop
dec
pushf
enter
repz
repnz
imul
mov
ss
mov
in
xor
and
pop
fcmovne
enter
jo
pop
push
sbb
xor
mov
cmp
and
test
out
and
lahf
insl
in
or
movsb
jp
daa
dec
and
push
sub
dec
call
dec
pushf
sub
loop
mov
and
in
int
push
and
repz
add
or
repnz
pop
mov
fstl
pop
arpl
jle
es
cmpsb
insl
popf
jge
pop
shlb
adc
add
ret
and
cltd
add
out
inc
fwait
push
hlt
inc
imul
dec
mov
lock
mov
sub
mov
icebp
push
out
push
std
outsl
pop
pop
mov
aas
push
cwtl
jns
dec
bound
push
cmpsl
pop
bound
push
and
insb
sbb
lds
sub
jmp
adc
fadd
xlat
xchg
mov
jle
stc
dec
sbbl
test
test
pop
stos
add
push
or
repnz
and
pop
stc
cmpsl
lods
pop
pop
mov
sub
rorl
movsb
arpl
xchg
clc
lea
and
inc
imul
pop
out
imul
inc
jne
jb
or
push
cltd
lods
or
test
aad
jge
mov
inc
push
cli
mov
sub
cs
dec
or
pop
mov
addr16
mov
mov
xchg
xchg
cltd
mov
lods
fisttps
cmc
mov
addr16
mov
jl
sahf
mov
xchg
mov
fiadds
testl
dec
mov
xchg
jns
or
outsl
add
mov
dec
lods
repnz
push
rclb
cmp
jb
out
mov
sub
push
ljmp
sub
std
cltd
xor
xlat
jnp
or
js
insb
pop
arpl
pop
test
scas
test
dec
adc
and
sub
add
pop
xor
sub
in
ja
out
mov
shrl
mov
sti
fs
dec
fs
adc
ret
ret
xchg
das
shr
aas
in
push
test
out
mov
mov
pop
loope
xchg
add
sbb
mov
push
or
inc
sbbl
mov
pusha
clc
xlat
test
fstps
mov
cmp
mov
pop
out
mov
cmp
scas
shlb
mov
ds
lcall
push
repz
push
in
test
jle
je
mov
pop
js
jle
leave
jbe
aas
aam
ds
std
cmp
int
fcoms
sbb
aam
jnp
neg
and
sbb
pop
ja
xchg
xor
mov
xor
or
mov
xchg
in
lods
mov
out
sub
leave
xchg
outsb
fdivrs
imul
cmpsb
in
push
cmp
mov
adc
shll
cmpsb
nop
sub
aad
dec
jno
aaa
das
pusha
jecxz
out
lret
cld
cmp
mov
je
and
push
imul
out
int
or
imul
es
jae
pop
call
xor
jno
pop
ljmp
loop
pop
stc
pop
cmp
ds
call
lods
pop
lods
and
add
and
aas
test
add
cld
not
and
sub
fs
stc
fwait
sbb
out
sbb
xlat
jl
push
mov
mov
stos
sti
cltd
and
outsl
test
mov
or
pop
iret
movsb
loope
in
nop
cmpsl
mov
xchg
mov
nop
or
out
dec
imul
loop
shl
lock
jle
flds
push
mov
fmul
out
xor
fisttpll
pop
cwtl
into
lods
loopne
leave
mov
add
push
stos
dec
mov
lods
mov
sti
loopne
sub
sub
jmp
push
sbb
inc
mov
push
and
ja
pop
inc
mov
push
fs
mov
push
mov
sbb
jecxz
ret
sub
scas
cmp
pop
std
fistpl
daa
or
adc
cmp
sbb
cmc
fiaddl
mov
push
lds
jns
sbb
out
es
cmp
mov
jo
ss
cmpsb
xchg
lock
and
into
orl
pushf
push
ds
mov
xchg
xchg
inc
mov
xor
divl
out
push
inc
dec
testl
jns
pop
mov
inc
in
push
data16
xchg
ffree
hlt
fnstenv
pushf
movsl
adc
jb
mov
jmp
jl
or
cmpsl
mov
push
and
arpl
aaa
add
cmpl
jno
xor
jge
xor
nop
pop
shll
dec
popf
jecxz
or
data16
xchg
pop
gs
shll
cmc
scas
sbb
sub
fadd
lods
push
adc
pop
mov
mov
inc
mov
out
push
int
cltd
das
sbb
mov
jb,pt
popa
add
call
test
xchg
adc
mov
sub
sub
aad
push
adc
sbb
and
outsl
lea
mov
xor
mov
rclb
mov
cltd
jle
cmpsb
dec
inc
push
pop
mov
xlat
mov
fwait
daa
adc
ret
or
push
or
mov
lret
push
ljmp
xchg
push
cmp
or
cltd
cmp
aaa
shr
mov
push
sub
sbb
and
xchg
add
jp
mov
lock
mov
mov
fldenv
adc
push
or
cmp
mov
sub
in
addr16
jl
sub
adc
mov
test
push
sub
dec
movsl
cld
mov
dec
rorb
sbb
adc
iret
out
movsl
mov
pop
ret
test
mov
enter
inc
jbe
pop
sbb
scas
popl
add
cmp
pop
cmp
cli
xchg
aaa
and
mov
jge
or
int
dec
mov
sub
stos
jbe
outsl
add
mov
xor
cmp
dec
mov
repz
mov
jp
in
mov
jo
xchg
jbe
and
dec
xor
pop
and
cmp
loop
sbb
repnz
dec
aas
mov
rol
mov
aaa
ja
dec
outsb
jb
xlat
call
push
fisubrs
xor
mov
in
adc
out
mov
cmpsb
subl
sbb
adc
pop
test
daa
test
fnstcw
hlt
insl
cmc
push
xchg
cwtl
cmp
cmp
or
mov
aam
daa
call
lret
mov
mov
bound
xor
orl
push
mov
fstp
xor
addl
in
push
punpckhbw
out
gs
out
adc
adc
aaa
jp
pushf
movsb
add
arpl
dec
push
repnz
cmp
jbe
andb
lahf
nop
fwait
lcall
jns
adc
push
inc
pop
push
xchg
inc
testl
shlb
adc
fadd
imul
stos
pop
pop
xor
aam
jp
cmpsb
jg
xor
sub
mov
and
inc
imul
cmp
insl
mov
rol
push
sbb
add
cltd
xchg
pop
cmc
ja
js
pop
clc
xor
xchg
ja
shll
dec
add
pop
ljmp
jmp
add
aam
xor
movsb
aam
mov
dec
pop
sub
lock
sub
sbb
lahf
cld
or
push
out
and
xchg
push
push
mov
pop
xor
mov
aaa
or
mov
cmp
test
test
mov
dec
ljmp
pop
orl
call
divb
mov
xchg
push
xor
jbe
nop
inc
cmpsb
lds
adc
cmpsl
mov
in
sbb
or
inc
jo
sarl
adc
test
fadd
pop
dec
mov
movsb
add
addb
aam
ss
and
mov
int3
in
adc
cmpsl
stos
sub
and
or
and
insb
shrl
sub
inc
iret
scas
mov
mov
push
sbb
pusha
mull
mov
sbb
xchg
pushl
add
call
push
xor
stos
scas
inc
out
or
fnstcw
pop
fistl
rcrl
jno
xor
mov
mov
mov
mov
lods
loope
sbb
pop
sub
mov
sti
xlat
stos
add
xor
fs
bound
sbb
xlat
fiaddl
mov
loopne
icebp
sbb
jle
enter
or
mov
xor
pop
in
push
pop
sub
mov
sbb
add
test
lcall
xchg
leave
mov
test
lea
xor
mov
dec
lock
pop
lea
jae
xchg
pop
cmp
pop
and
cmp
roll
cmc
cwtl
out
sahf
fnsave
pop
xchg
aaa
shrb
jl
pop
int
or
cmpsl
xlat
inc
dec
jp
mov
jae
xchg
or
dec
sahf
and
sbb
aad
mov
xlat
lea
or
out
sti
pextrw
or
cmc
imul
inc
jne
cld
mov
stc
pushw
jo
dec
test
xor
mov
jb
insb
xchg
bound
cmp
push
jnp
push
dec
leave
iret
jbe
add
popa
test
xchg
lods
je
ficomps
cltd
test
stos
pop
movsl
leave
pop
lods
test
insb
andl
fisubrl
jae
sub
add
popf
push
ficomps
inc
xor
mov
or
sbb
sbbb
mov
xchg
or
inc
ror
push
pop
cmpsl
add
sbb
outsb
aas
loopne
jecxz
and
arpl
mov
xchg
pop
push
xor
pop
xchg
lss
dec
movsl
shlb
in
cmc
add
loope
mov
dec
mov
jl
imul
movsl
and
jo
test
aad
pop
push
pop
lock
add
xor
dec
aas
fs
mov
add
mov
into
fsubl
movsl
adc
jnp
dec
out
lcall
ss
inc
mov
cmc
sub
xchg
dec
movb
xor
in
fidivl
imul
xchg
add
out
xlat
add
xor
bound
xchg
cmp
add
dec
lret
sbb
push
cmp
or
or
sbb
and
pop
push
add
jmp
mov
xchg
jns
out
out
flds
pushf
scas
aaa
xchg
bound
sub
aam
idivb
roll
push
lret
push
andl
in
pop
mov
mov
pop
into
loope
dec
aad
fs
insl
jne
push
das
and
pop
int
mov
xlat
dec
and
mov
or
int
aaa
and
cmc
push
sub
dec
dec
ljmp
and
xchg
add
mov
inc
xor
out
push
jl
add
adc
jae
mov
aas
scas
add
cmp
scas
push
xlat
dec
add
clc
push
mov
pop
sbb
mov
sbb
xchg
jg
sub
mov
ljmp
cmp
xchg
cs
xlat
sub
andb
xchg
jo
adc
sub
dec
sbb
fsub
and
push
lods
je
mov
rcrl
and
ret
mov
push
mov
out
pushf
int3
xchg
sub
dec
push
clc
loope
pop
lock
shlb
lret
cmpsl
stos
pusha
cmp
dec
pop
dec
enter
inc
mov
adc
xchg
push
cltd
inc
jl
mov
jo
or
aam
jge
cld
in
hlt
mov
adc
pop
popa
leave
fsubrs
mov
push
and
push
and
mov
mov
or
cli
adc
out
mov
lock
stos
sbb
or
mov
add
cwtl
lcall
fwait
and
cmp
repnz
das
sbb
scas
rol
pop
xor
inc
ret
push
lea
insl
xchg
sbb
stc
adc
mulb
adc
std
cli
xchg
jge
cli
out
pop
adc
and
bound
into
js
sbb
sub
inc
inc
dec
pop
xor
and
daa
xchg
cmp
mov
mov
ljmp
adc
xor
mov
or
xchg
jnp
pop
cmp
cmp
mov
xchg
addr16
mov
out
rorl
pop
mov
enter
orl
jnp
xchg
ja
mov
jb
xlat
int
movsl
psrld
dec
mov
cmp
mov
flds
cmpsl
lods
lea
mov
or
adc
jp
pop
sarb
inc
pop
insb
dec
pop
jne
adc
iret
add
sbb
stc
pushl
cmp
add
iret
adc
cmpl
inc
pushf
ret
cwtl
stos
mov
cs
loopne
cs
lret
sub
sub
mov
xchg
mov
and
dec
cmp
jl
jo
mov
mov
jl
mov
mov
sub
rcrl
add
cmp
jno
rcll
cld
jg
adc
mov
into
or
or
cli
aam
mov
movsl
pop
push
lahf
insl
mov
add
nop
xchg
add
dec
mov
or
repnz
fdivrl
in
push
stos
cmpsb
mov
pop
or
stos
pop
fimull
jmp
out
dec
pop
adc
imul
stc
lret
jge
lret
pop
fistps
pop
stos
lods
mov
dec
adc
push
in
add
fs
mov
xchg
jecxz
mov
xlat
pop
movsl
mov
push
mov
or
lock
insb
cmc
movsb
add
data16
int
push
fbstp
and
jecxz
dec
pop
hlt
xchg
mov
mov
and
test
repz
popf
jo
add
cwtl
popa
mov
add
inc
pop
mov
sub
or
mov
inc
xchg
fistpll
scas
fidivrl
jmp
push
fwait
xor
insb
and
lea
dec
xchg
fimull
jno
into
sbb
add
or
push
ds
or
jp
out
dec
pop
popa
xadd
insb
mov
pop
movb
pop
jnp
ret
push
inc
jp
xchg
mov
aas
test
or
push
mov
inc
outsb
sbb
lret
movsl
arpl
or
sahf
dec
mov
or
movsl
sbbl
inc
in
call
xchg
mov
jle
repnz
out
out
adc
pop
lret
je
push
xchg
in
dec
fidivrl
cmp
rcrb
or
push
mov
ror
xchg
dec
mov
cltd
xchg
hlt
aad
out
mov
mov
xchg
hlt
daa
jmp
pop
xlat
je,pt
lods
ja
icebp
push
xchg
stos
rcll
cmp
lock
shrl
push
fiadds
hlt
rcrl
cmp
jno
loopne
cs
mov
mov
repnz
mov
fadds
lds
fs
adc
cltd
xor
mov
movb
push
and
sbb
loope
sti
roll
and
add
sar
int
sub
push
sub
imul
mov
movsl
xchg
inc
ret
fiaddl
in
adc
dec
ds
mov
int3
inc
push
mov
jns
jge
outsl
sbb
cld
aas
push
and
xor
adc
lahf
mov
mov
dec
in
push
rorb
push
mov
xor
xor
test
adc
aad
fcomi
leave
cs
pop
shrl
mov
xchg
out
jnp
je
ss
outsl
dec
fmull
imul
or
mov
lahf
aad
dec
dec
pop
test
out
popa
sbb
and
aad
movsb
pop
cmp
sub
sbb
push
sub
in
lods
sbb
test
push
xlat
repnz
sar
xchg
cmp
outsb
adc
into
femms
mov
or
xor
or
add
in
aam
sub
xor
in
mov
or
shlb
cmp
sub
cmc
add
and
dec
sbb
xchg
and
pop
es
xor
xchg
mov
mov
into
cmc
pop
mov
xchg
xor
push
xchg
daa
jge
out
mov
cmc
jo
inc
mov
mov
mov
xchg
inc
cmp
data16
in
cmpsb
inc
dec
cmc
mov
pop
loopne
inc
adcb
and
xor
int
int
out
icebp
movsb
lods
xchg
xor
xchg
lret
pop
push
arpl
inc
dec
leave
gs
mov
cltd
stos
push
dec
mov
test
pop
sbb
jle
xchg
lret
fdivrl
mov
xchg
xchg
push
hlt
incb
sar
bound
sub
mov
aaa
jnp
cmp
js
insb
fs
test
push
out
addr16
or
enter
pop
mov
pop
outsl
push
lds
xchg
dec
jae
les
add
and
push
push
xchg
sub
les
icebp
mov
jle
lock
xchg
inc
cmp
stos
lods
pop
sub
xchg
mov
int3
fcomp
jb
add
sbb
push
sbb
or
mov
add
dec
push
lahf
sbb
icebp
cltd
ret
sbb
lods
ljmp
in
insl
and
leave
and
cmpsb
jmp
jne
add
dec
daa
pop
or
inc
mov
loop
or
pop
and
sbb
in
mov
pushf
mov
into
mov
dec
mov
test
mov
outsb
adc
aad
mov
scas
nop
sahf
and
loope
add
fisubl
xchg
or
incb
cmpsb
fwait
xchg
adc
cmp
pop
mov
jb
xor
pop
and
clc
mov
movsb
pop
pop
sbb
scas
or
inc
popf
data16
fisttpll
cmp
jb
out
leave
push
fiadds
dec
jae
sub
je
movsl
mov
sbb
push
int3
imul
xchg
lea
adcb
cmp
pop
xor
push
rcrb
xchg
pusha
sub
add
mov
sbb
and
popf
in
lock
int
inc
dec
ljmp
or
xchg
pop
out
and
mov
rclb
mov
xor
xchg
mov
add
icebp
mov
and
aam
inc
mov
pop
rolb
mov
push
aaa
cmp
sub
sbb
loopne
out
inc
adc
fidivs
mov
mov
add
out
jb
jmp
push
sbb
data16
mov
dec
jbe
orl
lret
mov
adc
stos
push
lret
mov
jg
xchg
pop
sti
mov
test
scas
out
dec
or
iret
scas
sbbb
sti
mov
xchg
inc
sbb
out
out
dec
dec
mov
sbb
pusha
int3
lea
xchg
mov
std
xchg
xor
pop
mov
xchg
adc
ret
stc
pop
add
je
cwtl
adc
xor
dec
cmp
xchg
ljmp
shrb
ret
mov
xor
sahf
push
pop
negl
xor
sbb
xor
xor
icebp
push
xor
jp
pop
fdivrl
cmpsb
ja
mov
cmp
repz
adc
or
jg
push
fwait
mov
inc
push
in
or
mov
loope
sbb
das
pop
mov
xor
shlb
jo
inc
dec
add
push
jb
jge
cltd
lret
ds
int
xor
push
insl
mov
inc
push
inc
cmpsl
add
xor
in
lods
jno
adc
mov
rcl
jecxz
call
lods
sbb
xlat
xchg
repnz
ss
dec
ljmp
jae
pusha
out
xchg
sbb
movsb
cmp
test
lds
and
pushf
push
mov
scas
xlat
cmp
add
es
inc
pop
test
push
push
cmp
cmp
mov
fisttps
popa
movsb
xchg
aas
idivl
mov
mov
inc
pop
jns
incl
pop
cwtl
inc
inc
push
int3
insl
push
pusha
fwait
xor
lock
push
sub
adc
repnz
cld
ds
lods
mov
xor
out
cmp
sbb
pop
es
in
pop
out
push
mov
push
xchg
mov
push
adc
ljmp
xchg
xchg
loope
nop
ficomps
in
push
xor
add
mov
inc
lods
neg
adc
and
jne
mov
in
cld
arpl
cmp
sub
fld
mov
and
lock
mov
xor
adcb
lret
pop
jnp
lods
and
mov
xlat
mov
cld
xor
sub
mov
scas
scas
adc
xor
adc
pop
mov
mov
mov
or
scas
mov
or
into
fwait
or
push
repnz
cmpsl
pop
pop
dec
js
pop
cmp
in
mov
cwtl
push
cli
add
icebp
sahf
mov
subb
or
pop
adc
cmp
ss
cmpsl
rcll
push
lea
test
add
and
sbb
lret
cld
popf
xchg
sbbb
addr16
xor
sub
js
mov
mov
mov
shr
fcomps
sbb
ret
mov
test
adc
dec
repnz
addr16
push
sbb
jg
cmp
loopne
push
mov
cli
sbb
mov
shl
fnsave
sub
fprem1
push
xor
cld
enter
ficompl
xlat
or
mov
fs
xor
stos
push
mov
mov
push
xor
in
add
or
xor
loope
add
insl
ret
imul
out
xor
or
mov
or
adc
pusha
lods
aad
imul
fidivrs
mov
sub
xchg
jge
pushf
fcomps
lret
in
or
es
push
repnz
inc
jmp
out
sub
pop
js
lods
pusha
xchg
mov
sbb
hlt
test
repz
mov
mov
add
lods
add
sbb
arpl
dec
jmp
dec
inc
sub
fcoms
jl
push
and
lahf
faddl
leave
pusha
dec
in
sub
add
inc
jp
movsb
xchg
push
jns
imul
pop
jge
loopne
xlat
inc
cmc
lcall
je
adcb
test
lret
popf
fsts
scas
xor
shrl
and
mov
adc
aaa
mov
xchg
lods
rcl
js
or
cltd
ljmp
aad
cltd
jne
test
pop
or
mov
nop
addr16
jns
mov
dec
leave
loope
adcb
pop
shlb
outsb
int
adc
add
mul
lahf
sbb
fstpt
cmc
sub
cmc
ljmp
imul
xorb
pusha
test
repz
dec
jns
movsb
rolb
inc
shlb
out
es
scas
cld
push
adc
add
pop
and
mov
rclb
pushf
mov
mov
mov
push
shrb
loope
mov
xor
xchg
and
inc
push
adc
xorb
outsb
daa
scas
mov
in
fwait
inc
inc
repz
jo
ljmp
lock
test
mov
test
dec
cli
push
xchg
scas
lret
lock
inc
repz
add
stos
loope
mov
out
mov
mov
adc
mov
adc
test
es
mov
sbb
fadd
mov
cmpsl
push
xor
sbb
ds
mov
push
stc
and
out
mov
call
clc
aaa
push
dec
hlt
mov
inc
pop
insl
mov
rcrl
repz
lods
stos
adc
mov
mov
push
mov
pop
popf
lea
pushf
mov
insl
test
dec
es
fiaddl
jle
mov
sbb
outsb
sub
sub
popf
les
sbb
ss
lcall
push
sbb
mov
or
cmp
dec
aam
pushf
fcomp
loop
shlb
fwait
xlat
add
leave
mov
inc
test
jnp
cs
xchg
pusha
mov
add
sub
dec
bts
rcll
add
ljmp
shrl
jne
and
test
mov
ret
or
dec
sti
into
fcmovne
sbb
jne
test
shll
stos
enter
loop
mov
pop
aas
testl
inc
rcll
negl
aam
icebp
fsubl
out
push
add
out
jecxz
rcll
sub
insb
xlat
test
pop
lds
imul
pusha
xchg
int3
cltd
dec
daa
stos
pop
or
pop
cmc
or
int
jo
add
lret
mov
lock
sbb
push
mov
jne
mov
out
pop
gs
push
adc
xchg
jl
js
jecxz
pop
out
xchg
sbb
cmpb
jnp
loope
popf
adc
xor
rcrl
lods
jge,pn
jns
jg
out
in
jmp
push
and
sbb
andb
xlat
mov
add
movsb
sbb
ret
dec
icebp
cmpsl
or
fimuls
sbbb
ret
es
or
shlb
mov
scas
enter
add
scas
xlat
ret
lret
jno
push
inc
fsts
mov
push
xchg
cmp
lahf
xor
xchg
stos
ret
imul
inc
inc
shlb
insb
dec
dec
push
ret
xchg
outsl
inc
addl
cmc
and
add
mov
vxorps
sbb
or
lods
mov
dec
xchg
stc
int3
sbb
mov
and
sub
cmp
pop
dec
test
jl
orl
mov
cmpsl
push
out
rorl
adc
xchg
iret
cmc
outsl
mov
in
sbb
sar
add
aad
cmp
in
jg
notl
sbb
fs
std
dec
push
sti
jecxz
cmpl
pop
je
xor
mov
mov
lret
mov
ficoms
cmp
xor
nop
xchg
sub
add
pop
test
xor
xor
jnp
loope
sub
ljmp
call
call
aaa
push
in
imul
sub
push
sbb
lcall
cmp
mov
mov
movsb
xchg
leave
or
or
xchg
push
or
negl
mov
out
xchg
sub
repnz
inc
lahf
push
mov
sub
inc
call
inc
xor
fcoml
sbb
movsb
cli
sub
mov
nop
aas
out
xchg
sbb
fdivs
add
scas
adc
pop
stos
lea
xor
hlt
adc
dec
push
out
mov
test
scas
sbb
mov
cmpsb
and
hlt
data16
cmp
sbb
lea
mov
out
loop
pop
arpl
out
add
adc
movsl
test
lods
imul
sbb
pextrw
cwtl
push
inc
and
mov
or
or
mov
pop
icebp
es
inc
sbb
jl
xor
pop
lret
es
mov
mov
jnp
test
rorl
fwait
sbb
fstl
das
jnp
out
xchg
pop
push
mov
enter
nop
adc
add
dec
addr16
lds
add
mov
sbb
in
fsubrp
add
test
mov
cld
fdivs
add
cs
jle
stos
lds
inc
sbb
mov
cmp
pop
stos
push
pop
cmc
icebp
stos
ficompl
cs
adc
xor
lret
pop
dec
outsb
push
out
xor
push
repnz
jl
mov
stos
ficompl
or
sti
shll
jae
daa
fnstenv
out
push
mov
xchg
pushf
call
aad
sahf
inc
imul
aad
push
iret
loope
or
pop
mov
dec
push
sub
xchg
int
arpl
fmuls
lods
mov
movl
movsl
or
mov
sub
sbb
pushf
sbb
rorb
mov
bound
sub
movsb
cmp
cld
pop
leave
xchg
pop
push
jo
pop
or
dec
jecxz
or
jbe
mov
mov
in
repz
mov
repz
push
in
sbb
ljmp
ret
xchg
repnz
mov
into
mov
mov
and
push
dec
fnsetpm(287
pusha
int
pop
out
test
pop
imul
mov
aaa
es
imul
pop
push
jns
pusha
adc
scas
stos
leave
insb
pop
data16
jne
loopne
push
repnz
dec
lcall
dec
mov
loopne
mov
aam
push
out
int3
xchg
jecxz
mov
sub
sbb
mov
and
pop
cmp
in
out
out
mov
adc
loopne
mov
lret
out
mov
jp
sub
mov
mov
add
out
outsl
inc
inc
inc
rcr
fwait
push
add
or
in
xchg
les
push
inc
in
mov
or
pop
push
and
in
sysret
jle
enter
mov
mov
add
and
popf
out
cmp
stc
mov
je
pop
push
add
push
adc
jmp
cmp
aas
sti
pop
pop
mov
outsl
andl
or
or
sbb
insl
fstpt
or
enter
pop
lret
loopne
xlat
mov
mov
idiv
or
outsl
aas
push
jg
aad
outsb
adc
dec
cmp
sbbl
add
insb
shll
jno
cmc
jle
adcl
lahf
and
data16
mov
inc
stos
mov
cmp
xlat
inc
divb
xchg
add
clc
add
push
sub
dec
stos
orl
and
cmpsl
stc
jno
pop
fnsave
add
xchg
lea
lret
push
mov
outsb
add
pop
inc
jne
adc
sbb
sbb
pop
dec
lret
mov
adc
push
cs
jo
xlat
cmp
sbb
ljmp
cmp
js
xchg
jb
decl
cmc
iret
int
cmp
cmp
je
ficoms
cmpsb
dec
inc
mov
fmull
mov
rorb
xor
fisubrl
fimull
mov
mov
inc
or
mov
inc
push
leave
jle
insb
iret
cmp
xchg
mov
bound
stos
cmp
or
fnstcw
aam
jecxz
pop
sbbb
dec
call
xor
mov
mov
fadd
stos
pop
cmpsl
insl
es
push
and
pop
hlt
pop
fs
push
mov
rclb
in
cmp
ja
and
add
insl
movsb
mov
movsb
push
orl
push
push
adc
in
scas
movsb
sbb
fmuls
call
imul
lods
andl
dec
xchg
add
cmp
mulb
mov
ret
ljmp
mov
jmp
push
in
ljmp
stos
aam
fwait
lods
clc
les
xchg
jmp
and
pop
ja
ret
pop
sub
xor
cltd
xor
sti
es
inc
xchg
es
aas
jne
daa
xor
mov
adc
loop
shrb
cmp
imul
leave
std
fisttps
call
bound
dec
xor
je
push
movsl
inc
mov
and
adc
inc
push
fidivs
mov
je
scas
cmpsb
sub
sti
in
inc
and
mov
push
xchg
fwait
daa
lret
popa
sbb
scas
lcall
mov
adc
inc
pop
out
lods
mov
fwait
les
pop
dec
negl
repnz
sbb
lods
xchg
das
pop
jbe
and
test
xor
repnz
mov
jb
push
cmp
push
cmp
ret
adc
mov
xchg
xlat
mov
enter
imul
sub
cmc
lea
scas
xor
loope
xchg
push
aas
mov
les
dec
cld
cs
ljmp
push
jnp
test
jae
mov
push
add
jnp
xor
dec
js
xor
inc
pop
sbb
loopne
adc
shr
jp
add
std
in
movsb
lret
mov
cmp
cmp
or
popf
icebp
xor
cmpsl
sarl
or
jno
lret
mov
cmpsl
sub
dec
and
rclb
arpl
jo
sbb
ficoms
movsb
aas
dec
mov
pop
test
stc
je,pn
clc
es
loop
or
cmp
stos
add
sahf
leave
xor
xchg
repz
lret
lahf
cld
ror
cmp
testb
cmpsb
mov
fstp
test
sbb
or
add
sub
push
outsb
pop
dec
mov
cs
cltd
repnz
js
cmp
lcall
xchg
mov
cmp
adc
jle
push
jnp
and
pop
jne
or
mov
in
mov
jmp
enter
cld
inc
aam
inc
pusha
flds
mov
cmp
or
negb
outsb
daa
shll
add
pop
push
mov
aad
das
dec
cwtl
cld
ficompl
or
xor
push
fsubp
cmp
in
cmpl
pop
xorl
movsb
mov
xchg
stos
int
cmpsl
sub
test
inc
nop
scas
int
cmp
mov
mov
fistpl
cmpl
add
in
shrl
out
ret
mov
lods
mov
int3
pop
in
mov
aad
movsl
sahf
xchg
fwait
out
xchg
notl
test
pop
out
inc
xor
out
repnz
int
call
inc
call
cmp
je
fwait
sub
loop
repz
jg
mov
out
mov
fadds
arpl
inc
pusha
sub
cmp
xchg
xchg
jbe
xchg
call
sbb
ja
and
les
mov
xchg
and
pop
mov
pop
es
gs
mov
xchg
fisubrl
lret
dec
xor
gs
lods
mov
movsb
jb
jo
fwait
pop
popa
cmp
popa
ds
cs
cs
mov
dec
lret
lret
or
push
push
test
sbb
or
sub
add
and
xchg
xor
mulb
lds
imul
les
pop
stos
mov
pop
and
pop
lret
mov
enter
mov
dec
ficompl
jecxz
in
cltd
out
loop
pushf
push
jo
mov
leave
xchg
xchg
pushf
nop
mov
fistl
push
ror
rorl
and
sub
das
push
adc
mov
and
ss
int3
outsb
dec
loop
sbb
jns
adc
xor
test
sarb
das
xchg
xchg
cmpsl
in
movsl
or
icebp
cld
jmp
inc
je
mov
dec
stos
daa
imul
movl
jo
scas
movsl
loope
lcall
sub
lcall
std
add
cmp
pop
sub
and
cmpb
aad
and
xchg
push
cmp
test
mov
sbb
pop
or
out
push
cmp
dec
xchg
lahf
ret
call
clc
test
mov
clc
mov
cli
cmpsl
loope
inc
dec
sbb
adcb
loope
iret
and
fistps
dec
cmpsb
inc
jnp
dec
outsl
scas
cmpl
andl
sbb
or
xchg
sub
inc
orl
mov
sub
mov
or
aas
or
icebp
jg
push
jecxz
mov
out
jo
add
loope
cmp
inc
or
out
and
fistpl
sbb
in
and
xchg
in
imul
scas
and
sbb
xchg
sti
pushf
arpl
ja
cmpsb
jl
stos
outsb
or
negl
inc
test
shrb
mov
daa
cmpsl
mov
cmp
xor
xchg
jmp
jg
js
lock
xlat
dec
pop
push
fs
in
lods
mov
stc
inc
daa
cmp
jmp
cmp
mov
mov
sahf
inc
pushf
bound
ret
sbb
leave
lods
mov
insl
fnstcw
loope
mov
adc
mov
xlat
or
int3
inc
xchg
adc
push
adc
loopne
aas
test
pop
jno
jb
stos
mov
mov
mov
sub
mov
aaa
cmc
inc
lahf
xchg
adc
cltd
cmc
lret
fcos
nop
negl
ret
xchg
xchg
popf
inc
fcoms
std
lret
push
inc
mov
cmpsl
or
jno
out
sub
jb
jl
xlat
cmpsl
mov
mov
sub
push
sub
add
pushf
jge
and
or
loope
insl
push
mov
pop
add
popl
popa
inc
xchg
dec
je
mov
call
push
lahf
popf
mov
fistps
sub
add
cld
pushl
jb
jmp
insl
lret
sub
push
inc
prefetch
or
stos
mov
mov
sarl
jbe
xor
pusha
adc
jne
push
inc
jp
shll
jg
fists
rsqrtps
and
push
sub
in
cmp
lds
cmp
mov
insl
hlt
mov
mov
and
int3
call
or
push
cmp
out
bound
mov
jp
mov
ret
sbb
into
mov
jp
jecxz
and
xchg
push
ja
cltd
push
sub
in
scas
sbb
sub
xchg
inc
lods
inc
and
out
inc
repnz
ror
mov
inc
insl
cltd
xor
loop
insb
or
cmp
test
daa
sbb
mov
sbbl
cwtl
xchg
mov
xchg
data16
out
push
lahf
sub
pushf
into
jl
mov
jge
push
or
or
or
inc
dec
ds
int
or
sbb
insb
mov
dec
cwtl
xorb
cli
rol
xchg
pop
add
and
out
test
jle
je
sbb
clc
jb
push
orb
or
dec
stos
sahf
outsl
cmp
aam
outsb
xchg
outsl
dec
cmp
call
mov
jp
xchg
sahf
cmpl
out
and
shrl
jne
inc
mov
xchg
xchg
in
mov
test
xchg
or
or
ret
xlat
fs
xor
add
xlat
mov
mov
sbb
sbb
jp
sarb
add
push
popf
lock
and
ret
dec
into
hlt
jmp
popl
in
xchg
mov
test
cli
sbb
test
scas
jg
mov
xchg
mov
jp
mov
xchg
dec
rolb
push
add
xor
adc
sub
es
dec
movsb
cmp
sub
rcll
or
mov
jg
fildl
aad
lods
jns
mov
in
mov
gs
cmp
scas
jl
pop
popf
dec
xchg
mov
or
push
loop
pop
mov
fcomip
mov
push
stos
push
dec
fists
sar
pop
mov
call
sbb
or
or
rcrl
aam
rclb
jecxz
inc
in
aaa
int3
fs
jno
xchg
adc
cmp
loopne
leave
sahf
adc
xchg
mov
inc
xchg
ljmp
inc
mov
mov
es
adc
cs
ja
int3
bnd
cli
push
into
bound
scas
addr16
cltd
pop
pop
cmc
or
or
push
mov
mov
test
push
repz
ret
xchg
fxch
out
testb
ret
pop
cs
pusha
push
inc
ret
xor
mov
jbe
push
sarl
dec
into
jbe
cwtl
mov
cli
out
ds
jle
jne
pop
mov
add
repz
push
addb
or
mov
pop
popf
in
jnp
push
mov
jecxz
mov
or
cmp
adc
cmp
js
jb
and
outsb
fsubrl
or
cmp
pop
aam
mov
cmpsb
dec
out
inc
imul
mov
out
ret
in
pop
mov
test
sub
add
xchg
mov
dec
loope
lret
mov
std
stc
mov
push
add
pop
inc
mov
mov
hlt
jae
into
or
fnstenv
inc
mov
gs
and
in
ss
jo
outsl
xlat
mov
jbe
jne
ja
sar
icebp
xlat
jp
fwait
xchg
pop
jmp
repz
jp
lock
and
inc
pop
jmp
fdiv
popa
sub
mov
inc
adc
inc
sbb
sahf
insb
mov
ret
ret
loope
sub
cmpsb
shufps
cmpsl
and
test
and
or
adc
insb
sahf
pushf
test
and
push
inc
fdivs
and
adc
adcb
jo
sbb
adc
sub
pop
insb
pop
jle
stos
loop
sbb
mov
pop
pop
repnz
daa
xchg
adc
jle
mov
std
ss
addb
push
je
ficoml
xchg
call
mov
jae
jge
enter
sti
stos
xor
and
addr16
or
jo
imulb
int
sarb
pop
mul
popf
scas
cli
xor
xor
jle
pusha
mov
aad
cmc
mov
jmp
sub
sub
jnp
outsl
scas
in
pop
add
fldz
stos
or
xchg
subb
fcmovnbe
lds
nop
test
and
jmp
dec
insl
in
dec
mov
rorl
daa
cmp
sahf
push
or
and
and
adc
pop
faddl
aaa
insb
sets
shrl
repnz
pop
shll
pop
sbb
push
or
loope
fninit
fdivr
dec
fistpl
fdivrl
jl
lret
stos
outsb
push
xor
repnz
lds
lcall
aam
pop
and
fistps
xchg
push
add
loopne
enter
dec
inc
hlt
xor
inc
out
xchg
adc
fnstcw
pushf
lret
push
mov
or
lcall
movsb
mov
lock
mov
fldt
les
or
dec
out
push
enter
mov
ja
sbb
les
inc
mov
aam
gs
fcomi
test
jecxz
subl
or
rclb
jo
lahf
push
and
dec
pop
dec
rcrb
dec
or
cli
xor
push
xchg
in
dec
dec
jb
inc
push
clc
ficomps
in
out
pop
jne
add
xchg
jo
int
dec
stc
imul
ret
inc
test
push
popl
mov
addb
and
adc
lcall
popa
push
mov
fsubs
adc
imul
clc
sub
push
xlat
mov
lret
xor
mov
test
push
ljmp
mov
mov
ja
cmp
jbe
xor
jmp
push
orl
fs
in
push
stc
pop
sbb
cmp
pop
cmp
cli
shll
push
pop
out
clc
cmp
pop
and
dec
clc
data16
xchg
mov
ret
mov
or
movsl
pop
roll
cld
std
movsb
adc
adc
and
cmp
and
dec
add
mov
mov
sub
push
mov
icebp
pop
cmp
sub
pop
add
pop
add
data16
jnp
fcoml
stos
jo
icebp
sbb
in
xor
push
lods
dec
jns
mov
cltd
jge
cld
or
pop
mov
and
ds
addr16
sbb
loopne
jne
cld
jns
xor
push
arpl
inc
jo
aaa
cmp
cmpsb
and
roll
aam
jb
jns
cmp
subl
ret
pop
bound
icebp
cmp
repz
and
dec
shl
sti
ss
push
adc
out
std
test
loopne
enter
data16
pop
jmp
out
pop
dec
aaa
test
dec
popf
xchg
or
lret
fadds
and
fdiv
int
pop
mov
adc
stos
aam
adc
ror
jne
mov
jnp
rcrb
test
stos
and
fdivr
mov
add
mov
xchg
int3
les
lds
fidivl
xor
push
imul
mov
mov
mov
ja
mov
pushf
popf
mov
pop
jae
rcll
pop
push
jmp
dec
xlat
xchg
add
subb
int
jae
and
sub
add
lahf
adc
popf
stc
inc
into
jno
daa
std
insl
or
lcall
dec
mov
push
icebp
outsb
mov
mov
xchg
sub
lret
aas
icebp
ja
add
pop
sti
pop
dec
inc
insb
cs
inc
into
mov
cli
push
cmp
sub
add
jle
xor
mov
sub
adc
sbb
roll
cmp
fwait
adc
call
push
or
mov
aas
sub
stos
inc
inc
pop
cltd
shr
mov
fsub
ljmp
sbb
mov
add
fsubl
sub
xor
pop
aam
js
fldl
data16
jbe
ss
push
outsb
sub
popa
clc
icebp
or
xor
mov
daa
cmp
cmp
and
add
movsb
data16
mov
inc
mov
in
cld
mov
push
out
cs
inc
and
and
xor
mov
and
add
loop
stc
xlat
dec
stos
aad
std
movsl
outsb
movsl
pop
in
add
pop
push
add
mov
xchg
out
sti
jbe
pop
sbb
inc
dec
lret
sbb
push
int
loop
push
pushf
jae
sbb
addr16
mov
mov
fsubs
add
fdivrl
adc
and
pop
adcb
xor
dec
mov
sub
cmp
mov
in
rsqrtps
cmp
sub
xchg
adc
cmp
jno
add
lea
cmp
ljmp
xchg
jo
gs
mov
cmpsl
subb
push
sbb
adc
mov
mov
jns
xchg
xchg
xor
shrl
sarl
or
aad
les
jge
or
ss
and
and
sbb
subl
push
dec
mov
and
lcall
adc
inc
xchg
xchg
dec
les
mov
insb
xor
lcall
je
adc
dec
push
pop
add
leave
add
imul
xchg
adc
mov
mov
cli
add
mov
adc
jecxz
mov
notl
jmp
push
or
das
or
aam
negb
push
push
push
dec
sbb
fdiv
pop
or
and
mov
lods
pop
add
aas
pushf
pop
mov
jmpw
lcall
mov
add
pop
mov
xor
pop
pop
aad
lods
imull
cmp
data16
mov
cmpsb
bound
movsl
repnz
repz
cmp
push
sub
and
cmp
fadds
xchg
pusha
pop
jb
insb
push
orl
ret
cmp
mov
jns
stos
mov
sahf
jg
jb
cmp
dec
jbe
add
dec
push
sahf
jmp
add
xchg
fstl
push
lea
call
push
test
adc
mov
test
dec
push
ret
test
repnz
jl
outsb
sbb
inc
cmp
xor
mov
push
das
mov
jne
int
push
push
stos
repnz
fstp
pop
mov
and
mov
xchg
add
mov
sbb
imul
jmp
or
pop
dec
leave
sbb
sbb
aam
cli
add
jmp
jnp
mov
aaa
and
or
enter
xchg
mov
or
jo
and
mov
dec
push
sbb
mov
adc
add
loope
xchg
iret
inc
xlat
popa
mov
les
hlt
je
enter
xor
jle
pushf
jg
mov
or
mov
jp
sbb
and
cli
test
adc
mov
push
mov
sub
or
fs
outsb
loope
test
mov
mov
push
pop
cwtl
xchg
rcr
movsb
push
jge
add
cmp
pop
sub
mov
jmp
adc
adc
je
jmp
push
scas
test
test
lock
xor
in
mov
cmp
outsb
das
mull
bound
mul
mov
jno
mov
pop
jmp
mov
push
pop
fdivs
je
jb
ja
jmp
xchg
call
out
ret
pop
fsubs
inc
or
push
pop
es
inc
popf
scas
das
adc
out
int
pop
jbe
sub
test
mov
femms
pop
add
adc
xor
movsl
mov
xor
scas
sbb
icebp
ja
rorb
sbb
sahf
call
inc
fistpl
sahf
lods
cwtl
xor
adc
push
mov
push
movl
push
clc
mov
push
or
adc
push
and
mov
add
lds
inc
int3
lcall
ja
lcall
mov
js
add
jns
adc
mov
imul
mov
fwait
inc
out
mov
ret
sub
cltd
jbe
cmp
jo
test
dec
shrb
mov
inc
loopne
inc
fisttps
mov
lret
mov
popa
aam
bound
pop
ss
imul
mov
jle
cmp
mov
flds
aam
mov
in
cmp
xor
pop
inc
test
rcll
dec
cmp
stos
insl
xchg
xchg
sti
mov
aas
lcall
push
xchg
add
mov
adc
pop
dec
sub
les
mov
lds
cmp
enter
sub
call
js
or
lcall
xor
mov
mov
jg
arpl
pop
inc
push
cmp
adc
or
ja
stos
xor
cld
shrl
push
xchg
imul
adc
sub
adc
push
decb
push
mov
cmp
fstpt
fnsave
les
test
subl
adc
cmp
xlat
int
insl
hlt
pop
aad
fcomp
int3
push
das
xchg
inc
call
test
dec
sbb
clc
xchg
outsb
inc
push
addr16
test
lods
stc
sbb
movsl
push
jno
sti
cmpsl
fwait
xchg
ret
sub
jb
jl
and
and
in
xchg
dec
js
cmp
inc
inc
lret
jmp
popa
lcall
add
lock
jae
shr
sub
pop
aad
push
mov
mov
sub
adc
imul
mov
jl,pt
mov
roll
pushl
cmc
pop
pop
add
mov
shlb
clc
sahf
iret
mov
cmpsl
outsl
push
add
sub
push
incb
sahf
lcall
pop
out
ljmp
xor
stos
js
jp
out
push
mov
inc
sbb
repnz
or
mov
fnstsw
scas
hlt
lods
aaa
cmp
les
cmpsb
arpl
imul
fwait
das
rcrl
stc
jmp
cs
movsl
std
imul
jl
pop
pop
cmpsb
mov
test
or
sarb
or
sub
sbb
loopne
push
aam
mov
enter
push
dec
loope
jl
gs
stos
cmp
inc
xor
dec
push
loope
dec
mov
test
and
or
add
pushf
xor
cmp
add
inc
pop
push
imul
push
mov
shl
xor
sub
lret
sub
aas
out
inc
pop
cmc
test
dec
pop
inc
xchg
movsb
ss
jle
sub
stos
xor
xchg
ja
addr16
test
xor
test
div
sbb
mov
cmp
cmc
sbb
int3
jnp
je
aad
mov
stos
not
neg
inc
lcall
movsb
sar
xchg
xchg
mov
popa
pushf
push
scas
icebp
add
ret
lds
repnz
mov
inc
cmp
outsl
pop
dec
std
pop
add
cmpsb
sbb
sbb
mov
shll
jge
push
out
mov
fsubl
sub
lahf
das
shl
mov
lods
mov
lock
aam
daa
inc
popf
cwtl
push
adc
and
xchg
and
pop
push
xchg
xor
push
xor
push
mov
jl
jecxz
mov
lea
dec
in
inc
dec
inc
pop
scas
subl
cwtl
or
das
je
adc
mov
mov
mov
lea
aas
out
pop
add
xchg
lahf
cs
pop
add
js
and
loopne
jl
mov
mov
inc
or
sub
pop
mov
enter
push
sub
jmp
jae
test
sub
inc
or
pop
xchg
orl
push
mov
or
jnp
es
shr
inc
adc
sub
loope
rcll
xchg
add
cmp
dec
dec
arpl
dec
push
idivl
hlt
pop
mov
xchg
dec
xchg
adc
les
js
test
mov
or
push
out
mov
adc
add
test
push
pop
fldenv
int
xor
stc
push
inc
or
cmp
jg
flds
scas
scas
dec
jbe
in
decb
test
fcompl
or
jmp
mov
jae
jmp
int
push
sahf
push
ret
xchg
cwtl
push
inc
es
loop
inc
lods
stos
dec
mov
mov
ret
loope
cmp
sti
push
lods
xor
fs
jl
rclb
lea
xchg
out
leave
jo
cmp
mov
pop
repz
xor
push
mulps
bound
jno
xchg
mov
call
inc
lret
stos
cmp
aad
test
pusha
std
sub
adc
cmp
sub
ljmp
lds
imul
adc
push
cmp
mov
mov
dec
dec
hlt
jmp
adc
jecxz
sub
into
stos
aam
cmc
xchg
cli
cmp
bound
pop
scas
sub
shl
dec
cmp
mov
subl
cli
and
ja
fmull
leave
jnp
ljmp
jb
test
xor
jecxz,pn
sub
mov
clc
in
dec
out
out
cli
ret
loop
movsb
cmp
pushf
jbe
aaa
shlb
icebp
test
inc
mov
mull
cmpsl
test
cmpsl
lret
jbe
jns
out
adc
stos
mov
sbb
mov
mov
fisttpl
fwait
xlat
shll
sub
mov
and
lcall
jp
lcall
pop
outsb
daa
aad
mov
popa
out
pop
int
push
fs
add
pop
or
and
repz
pop
xchg
and
jg
test
dec
sahf
ret
idivl
mov
out
decb
popa
mov
push
jbe
push
sbb
pop
mov
mov
cli
inc
stos
dec
dec
fsubs
ret
int
inc
pop
in
adc
mov
gs
and
in
scas
add
dec
pop
xchg
fs
push
loop
out
mov
shlb
shrl
inc
xchg
jo
xchg
in
notl
mov
bnd
mov
cmp
hlt
sub
lds
inc
jne
push
mov
jecxz
lds
mov
pop
enter
cmc
aad
data16
in
jno
nop
mov
mov
movsb
popl
clc
std
push
decl
dec
adc
dec
sbb
jg
jg
xchg
adc
jp
pop
sbbl
popa
jno
les
mov
aaa
rorb
adcb
pushf
dec
inc
xor
pop
mov
mov
or
and
loope
sub
jb
and
rcrb
shlb
stos
jp
popf
jge
mov
loope
movsb
and
sbb
nop
cmpsb
xchg
imul
push
dec
sbb
cltd
cmp
movl
sbb
jge
imul
dec
mov
test
shrl
ljmp
and
push
shll
ja
jl
mov
xchg
xor
or
jg
sbbl
cmp
and
pop
pop
pop
cmpsb
xchg
dec
and
dec
rcr
jg
mov
lea
aam
xchg
mov
mov
hlt
dec
mov
outsl
push
pop
cmc
lods
adc
mov
pusha
leave
cli
ss
dec
pop
lds
arpl
cmp
sub
test
and
in
pop
mov
aas
jge
std
sahf
aaa
and
mov
mov
cwtl
fs
dec
jecxz
gs
jecxz
and
and
push
mov
inc
int
imul
mov
popa
xor
aas
cmp
and
mov
mov
xchg
jb
cmpsl
mov
or
insb
movl
mov
std
sub
in
xchg
imul
invd
mov
push
mov
out
push
dec
mov
loop
iret
sub
sbb
out
mov
sbb
jnp
and
xor
jns
adc
or
sub
pusha
fistpl
jmp
leave
or
lcall
mov
xor
jg
in
in
les
loop
jb
and
repnz
inc
fidivrs
ds
jge
add
jecxz
les
pop
fwait
cmp
push
pop
dec
icebp
or
lods
push
fs
cltd
ja
imul
mov
daa
popf
enter
xchg
add
test
cs
cld
inc
aam
in
test
dec
orl
hlt
fwait
in
adc
ljmp
ljmp
in
testl
cltd
cmp
in
pop
mov
cmp
xchg
je
push
loope
lock
hlt
leave
add
data16
or
jmp
shl
aam
xor
ret
icebp
fwait
popa
cmp
rcrb
in
xor
cmp
enter
jp
iret
loop
aas
add
icebp
cli
sbb
enter
and
sbb
std
mov
pop
fmuls
addb
push
sarb
jno
nop
ss
add
mov
inc
jecxz
jge
xor
sbb
fstps
mov
js
and
movsb
xor
sbb
mov
push
lret
inc
inc
in
out
push
fsubrp
adc
jb
sbb
bound
lods
xor
roll
pop
push
das
lods
inc
dec
ljmp
cld
add
mov
out
push
nop
lea
loop
sbb
scas
idivl
push
mov
cli
lods
dec
add
and
stos
leave
stos
popf
and
inc
jg
sbb
shll
out
cmpsb
sti
imul
icebp
xchg
clc
loopne
xor
in
aam
jg
jmp
xchg
loop
and
mov
addr16
cmpl
sarb
jne
dec
call
sar
stc
adc
pusha
cwtl
in
stc
adc
into
sbbl
outsl
popf
add
push
aaa
scas
add
das
mov
imul
rorl
xor
mov
pop
cmpsb
leave
push
jbe
pop
ret
sbb
add
xchg
loopne
pop
sets
push
popf
lret
xor
imul
int3
mov
mov
mov
push
and
sub
ret
dec
pop
insl
jle
loopne
lods
mov
ss
adc
jbe
out
out
push
mov
jle
dec
mov
lahf
adc
jb
sbbb
test
sti
add
and
scas
xchg
clc
ror
fstpt
sub
outsl
push
shll
arpl
jae
jns
out
jl
jmp
adcl
inc
fcomp
cltd
mov
mov
leave
hlt
out
lcall
outsb
cmpsb
and
loop
jae
mov
xorl
inc
xchg
inc
js
cli
cmp
cltd
jmp
dec
incl
test
ljmp
pusha
dec
cmp
dec
inc
daa
clc
lret
mov
xchg
push
xlat
test
add
pusha
fsubr
jg
push
push
cli
je
or
cmp
cmp
es
cmc
mov
mov
xor
xchg
mov
scas
pop
outsl
push
je
add
sub
mov
cltd
sub
out
lahf
ret
repnz
mov
lods
inc
xchg
adc
sbb
inc
enter
hlt
gs
pop
leave
xchg
out
addr16
xchg
imul
sub
insb
inc
push
jge
sti
je
inc
orl
loope
dec
jne
stos
cmp
sub
test
inc
out
popl
sti
clc
push
lods
lret
out
test
call
mov
mov
lret
xchg
std
inc
mov
xchg
cmpsl
pop
jne
test
jmp
jns
insb
addb
mov
pop
xchg
test
popf
push
or
sub
pop
out
jno
sub
aas
gs
mov
stos
add
rol
arpl
fmuls
fadds
pushf
jmp
test
sbb
mov
fwait
jae
addb
es
fcoms
pop
lahf
aam
add
dec
mov
push
cmp
insb
sub
pop
xlat
mov
mov
pop
adc
push
ret
sbb
mov
ficoml
int3
rcll
lds
aam
in
dec
xchg
mov
je
and
push
data16
test
cmp
xor
mov
mov
sbb
sub
das
sub
pop
and
das
std
jnp
mov
mov
popf
and
add
imul
mov
lret
jg
ror
jp
aaa
cmp
in
insl
fildll
jl
lret
pop
sub
jae
adc
sbb
outsb
inc
mov
xchg
loope
sub
xchg
mov
inc
jl
dec
or
sbb
sub
dec
dec
xchg
bnd
mov
repz
rorl
and
ljmp
stos
sub
lret
out
mov
bswap
cmp
cmp
daa
pop
out
adc
test
jl
cmpsb
dec
xchg
mov
into
add
push
sbb
and
fidivrs
loop
push
mov
aad
sbb
cmp
mov
cmp
sub
js
mov
push
xchg
out
push
sbb
mov
and
push
bound
cmp
aam
fnstsw
loopne
mov
shrb
or
jne
gs
dec
mov
pop
movsb
jg
repz
int3
addr16
push
bound
std
mov
inc
out
decl
sahf
outsl
push
lahf
rcll
fbstp
or
mov
push
bound
pop
push
fadd
loopne
adc
and
or
stc
loopne
mov
mov
mov
sbb
es
fcmove
jns
mov
mov
xlat
fwait
push
cld
and
loopne
jge
in
xchg
mov
inc
hlt
ret
push
enter
or
mov
jo
pop
nop
pusha
push
sub
push
pop
in
addr16
inc
and
out
negb
movsb
mov
movsl
cli
notl
inc
xor
fidivrl
cltd
xchg
in
push
push
xchg
mov
lods
cmp
and
scas
xor
mov
js
movsl
repz
or
adc
clc
inc
cmc
mov
jno
adc
or
mov
dec
ljmp
mov
sbb
repz
cmpsb
ljmp
mov
adc
ret
out
fbld
and
jbe
test
sub
xchg
jo
inc
xchg
mov
mov
cmp
or
inc
shrl
jae
fcompl
ljmp
dec
pop
mov
ss
fcompl
add
jl
outsb
ja
jb
mov
inc
dec
inc
aaa
shlb
lea
sbb
pop
stos
mov
roll
cmc
stos
das
movsb
xchg
push
jnp
loope
or
push
shl
adc
stos
flds
shlb
pusha
loope
sbb
inc
pop
repz
fstl
insl
cmp
fcomps
cmp
mov
sti
push
test
sub
dec
sub
cmpsb
push
insb
sbb
mov
lock
or
push
int3
lahf
test
jmp
jmp
or
xchg
ret
inc
outsb
mov
or
sti
cmp
push
and
mov
fwait
xorl
js
lea
xchg
popa
and
xchg
mov
movb
sbb
loopne
mov
inc
call
les
iret
cld
xchg
adc
cld
aad
inc
or
push
jp
es
mov
imull
insl
idivb
push
repz
test
add
mov
subb
and
aam
xchg
inc
pop
mov
cli
jb
data16
in
repz
shrb
or
test
mov
fisttpll
or
rcll
fs
dec
das
cs
inc
aaa
sbb
sbb
aad
fsubl
out
ss
jp,pt
mov
int
lcall
mov
hlt
jns
jb
jl
xor
mov
xchg
push
imul
xchg
stos
lods
in
sub
push
lret
mov
jbe
or
stc
and
clc
jmp
test
adc
ljmp
les
ljmp
lods
adc
movsb
fdivs
cld
sarb
mov
mov
mov
iret
cmpl
lods
pop
mov
or
pop
into
test
sarl
and
jmp
push
inc
ljmp
popa
dec
out
lods
mov
call
dec
in
sub
xor
enter
lea
test
mov
nop
mov
out
loope
jecxz
lahf
mov
cmp
jno
and
shl
jbe
loop
mov
dec
cli
xchg
imul
mov
mov
loop
repnz
lcall
xor
adc
xor
or
or
ficoml
and
cmp
xchg
pop
and
mov
scas
imul
mov
jg
in
push
mull
lahf
pop
daa
mov
mov
mulb
inc
movsb
out
mov
push
stc
add
ss
sub
mov
es
jbe
push
push
mov
nop
repz
fldenv
adc
jns
loopne
pop
in
push
mov
iret
popa
xor
push
stos
ret
or
xchg
mov
jge
aad
int
fstps
cmp
cmp
or
ficoml
push
or
fdiv
ficompl
jle
mov
mov
push
lcall
adc
test
mov
mov
test
mov
lcall
cmp
jbe
loop
in
fs
in
fucomi
cmpsl
dec
sub
pop
inc
insl
push
sub
ljmp
add
and
cmp
mov
inc
out
push
lahf
out
push
sarb
add
dec
inc
pop
xchg
mov
insb
or
xor
push
add
fwait
out
xchg
or
add
adc
ds
sbb
mov
in
cmp
sub
or
mov
lret
mov
sbb
inc
sbb
mov
test
nop
mov
imul
pusha
out
rcrl
lea
mov
xor
mov
fsts
out
out
popf
adc
into
sbb
lret
in
xor
xchg
rcll
pop
lds
clc
pop
ss
rcrb
mov
mov
das
repnz
adc
pushf
scas
xor
pop
fdiv
gs
popa
jo
and
and
pushf
fwait
or
mov
mov
pop
add
ficomps
lahf
and
stos
or
cmp
jne
sbb
int
fs
jo
add
lock
sbb
and
sysret
fadd
stc
mov
dec
sbb
or
jb
adc
sbb
xchg
fidivrl
inc
dec
test
in
loopne
pop
lods
mov
in
xor
push
imul
mov
stos
sub
lds
mov
push
int3
mov
fwait
data16
cli
outsb
add
fsubrp
popa
sbb
fdivrl
mov
push
insl
mov
mov
shlb
mov
cmpsb
or
mov
lock
cmp
sbb
sub
jle
lret
data16
adcl
inc
or
ja
inc
cs
adc
jno
cld
mov
push
sahf
jmp
sbb
fstpt
push
push
mov
rolb
xor
and
pusha
lods
aas
stos
xchg
add
xor
and
and
inc
clc
and
mov
int
outsb
decb
cli
sub
cmp
ficomps
mov
shrb
xchg
jl
ja
sub
mov
inc
inc
mov
fwait
mov
adc
mov
outsl
push
inc
mov
dec
in
sub
xor
nop
lahf
xchg
lcall
into
xor
sahf
inc
lds
or
movsb
gs
insb
push
je
negl
mov
mov
cmp
lock
inc
mov
or
xchg
xchg
sbb
int
mov
add
mov
mov
jecxz
pop
outsb
test
xor
pop
rcll
fadds
daa
and
inc
stc
sbb
sbbb
pop
pop
xor
mov
push
in
lcall
ret
or
jmp
jmp
jl
out
stos
cwtl
pop
xor
and
mov
aam
sub
mov
negl
add
ja
out
data16
push
inc
mov
sub
aaa
xchg
scas
push
xor
xchg
les
mov
aad
cmpsb
or
stos
dec
hlt
mov
lock
aas
or
mov
inc
or
rcr
bound
popf
icebp
mov
dec
ja
xor
sub
cmp
sub
lea
jne
xchg
inc
inc
aam
push
mov
pop
or
and
adc
mov
adc
sbb
adc
shr
and
cmp
int
fisttps
jle
shll
pop
mov
or
decb
xchg
out
mov
sub
jnp
repnz
jl
movsb
adc
stos
subb
or
daa
jl
fs
sbb
jno
or
cmp
xchg
test
idivl
inc
dec
jp
pusha
mov
ret
fstpt
fistps
pushf
xchg
mov
push
mov
insb
or
push
jbe
push
and
repnz
and
adc
jle
lea
dec
lret
stos
insl
ret
or
rcpps
bnd
push
dec
or
shll
and
jns
movl
xchg
sub
negl
shlb
inc
mulb
insl
scas
or
inc
sbb
mov
cmpsl
cmc
pushf
sbb
add
ret
nop
es
pushf
int
cmp
decb
jae
push
mov
imul
imul
sbb
sub
insb
xor
repnz
and
push
jne
jmp
dec
push
cmp
lds
mov
pop
cmp
insl
mov
mov
cmpsl
add
jb
popf
cmp
pop
movlhps
aad
lods
movsb
and
jg
pop
jo,pn
inc
sbb
add
or
in
iret
mov
xorb
lods
leave
mov
sti
cld
sarb
push
xchg
les
hlt
mov
insl
mov
add
in
andl
jns
fcmovnbe
xor
scas
mov
pop
ja
jl
mov
enter
ja
xchg
mov
in
divb
cmpsb
xchg
test
mov
push
sbb
pop
pop
inc
pop
add
cmpsb
dec
and
movsl
test
dec
push
add
jbe
shrb
subb
xchg
in
sub
xor
cmp
push
mov
cld
push
mov
lret
and
xchg
adc
loope
xchg
mov
lcall
pop
addr16
push
sub
pop
mov
sub
pop
jno
adc
adc
mov
outsl
push
dec
sbb
aaa
adc
jns
lods
call
lods
lods
lcall
cmp
pop
outsl
push
or
loopne
push
push
pop
loope
mov
pop
ds
xchg
ja
xchg
ss
shrl
cmp
inc
enter
insl
or
pop
ficomps
je
adc
dec
cmp
jge
lds
out
push
inc
mov
sub
call
mov
out
lcall
dec
pop
pop
push
mov
sahf
mov
xor
loopne
popf
pop
test
mov
cmp
jge
aas
outsl
in
jecxz
fcmovnb
xor
xor
xchg
aaa
push
xorl
or
stc
sub
cmpb
repnz
push
fisubrl
popf
in
pop
out
es
xchg
jp
in
xchg
xor
sarl
pop
xchg
into
jge
test
sti
xchg
mov
popa
cmpsl
xchg
add
es
scas
mov
lret
jb
xor
xor
inc
cmp
inc
mov
fiaddl
adc
dec
ret
pop
pop
inc
pop
xor
pushf
int3
or
sub
mov
rol
pop
or
mov
adc
gs
jg
fwait
pusha
lahf
aad
shlb
dec
and
inc
fsubrp
mov
adc
mov
ljmp
inc
mov
enter
shl
outsb
jp
xor
pop
push
pop
and
lcall
cwtl
pusha
mov
sbb
xchg
pushf
push
and
push
cwtl
lcall
push
push
negl
add
repnz
cwtl
bound
clc
pop
and
into
fs
shl
xor
mov
shrb
aad
aam
dec
pop
or
pop
xor
icebp
add
outsl
adcl
mov
cmc
test
je
sub
cmp
jno
sbb
dec
mov
pop
lret
rorl
inc
scas
dec
mov
nop
dec
clc
fs
stos
xor
in
nop
fdiv
mov
dec
adc
sub
push
adc
dec
sub
cmpsb
dec
dec
mov
and
je
mov
jge
mov
ret
fisttps
nop
push
in
or
lock
pop
jp
rcl
pop
jp
data16
cmpsb
pop
out
xchg
fdivrp
pop
arpl
xchg
xchg
push
push
inc
inc
rorl
push
stos
push
ficoms
pop
loopne
mov
cld
fistpll
xor
pusha
lret
test
or
stos
mov
and
pop
jge
dec
or
xchg
cltd
iret
pop
pop
inc
sub
mov
cmp
xchg
add
repnz
in
and
push
xchg
dec
std
fwait
mov
mov
outsb
stc
sub
mov
ljmp
sti
movsl
fiadds
push
mov
jo
je
cmp
sbb
add
jecxz
aas
sbb
pop
fsubs
andl
push
ret
test
test
movsb
sub
xor
mov
pop
sbb
jb
inc
push
jmp
daa
ret
and
inc
dec
add
rcrl
das
popf
cld
divb
fmuls
mov
cmp
fs
loope
pop
les
dec
pop
cwtl
mov
push
das
out
sahf
mov
sarb
pop
test
cs
jg,pt
cmc
scas
jecxz
imul
pop
cmp
fwait
push
add
les
popf
pop
cmpb
push
loop
fnstenv
pop
nop
fistpl
mov
sbb
arpl
out
pop
in
fnstenv
sti
pop
fmuls
cwtl
in
insb
imul
gs
je
icebp
xchg
lea
push
mov
xchg
jmp
push
inc
pop
xchg
mov
mov
cmp
int
sub
xchg
mov
aam
ds
mov
pop
test
pop
sub
cmp
pop
pop
xchg
inc
sbb
pop
out
aam
mov
out
fbld
in
pop
cmpsb
insl
fsubrl
fnstsw
iret
or
ja
sbb
sbb
repnz
shl
jecxz
pop
mov
mov
stos
movsl
insl
int
cld
std
out
in
mov
jl
int3
repz
test
and
pop
es
cmp
cmp
or
cmp
mov
jb
lret
jg
push
pop
sub
iret
es
dec
push
dec
sub
addb
in
stos
out
mov
cmp
clc
rol
int
shlb
mov
push
sub
aad
jnp
ficoml
and
add
insl
adc
or
repz
dec
cltd
add
dec
push
jo
repz
stos
test
vpaddw
push
ret
lret
adc
pop
mov
dec
imul
jae
push
ja
orb
out
jl
fucomi
repnz
or
out
sbb
mov
js
push
inc
add
mov
push
cmp
inc
mov
mov
mov
push
je
icebp
cwtl
and
mov
xor
in
adcb
loope
mov
fwait
divps
popa
cmp
jns
pusha
cmc
push
mov
push
dec
mov
add
popf
shll
xor
sbb
mov
sub
inc
sbb
fcmovne
mov
rcrl
jg
xchg
jl
inc
and
cmp
repnz
stos
add
dec
push
lret
push
pop
inc
scas
mov
sahf
int
out
cmpsb
jl
cwtl
into
mov
cmpsb
ss
push
xlat
xor
frstor
fwait
push
add
inc
and
jo
mov
outsb
fnstcw
inc
aad
dec
arpl
pop
arpl
mov
and
ds
sub
push
shrd
xor
xor
and
sahf
push
xchg
mov
push
xchg
ret
lcall
push
jb
inc
je
push
fisttpll
adc
push
mov
mov
xchg
inc
and
jne
lahf
shrb
pop
push
mov
in
mov
iret
dec
lods
bound
fildl
dec
movsb
fsubrs
jo
outsl
pushf
sbb
xchg
addl
fucom
cmp
pop
pop
stos
adc
pushf
test
push
insb
das
jle
or
jmp
loopne
outsb
js
cvtpi2ps
das
xchg
add
cmc
and
out
cmp
jbe
repnz
push
sbb
fiaddl
lods
popa
cmpb
cwtl
cli
movsl
sbb
mov
push
cmpsl
jge
popf
push
in
mov
js
sbb
enter
mov
mov
dec
add
cmp
mov
cmp
xchg
cmp
mov
dec
mov
lcall
cmp
dec
sub
imul
xchg
and
jb
mov
maxps
fdivrs
mov
jge
fwait
inc
enter
fidivrs
cmp
jecxz
adc
aam
scas
and
int
movsb
mov
es
xchg
mov
cmp
push
dec
xor
lret
pop
adc
movsl
jge
mov
pop
movsb
cmp
int3
out
push
dec
push
and
jo
ret
push
call
movsl
testb
mov
out
das
sub
pushf
jo
inc
sbb
shlb
es
pop
sub
mov
inc
xlat
mov
imul
jmp
addr16
loope
jno
pop
xchg
adc
mov
mov
inc
xor
adc
popa
movsb
fmull
lahf
in
or
sbb
sarl
jne
std
out
test
inc
mov
xchg
movsb
sub
dec
testb
xor
cli
div
fbstp
or
mov
je
cmp
dec
leave
push
cmpsb
xor
jp
sbb
lcall
iret
cmp
loopne
xor
test
jmp
xor
dec
mov
mov
dec
jge
jge
test
cmc
outsl
mov
jl
inc
faddl
out
pop
fildll
lea
clc
push
fs
mov
addl
aad
test
mov
mov
mov
andb
dec
in
fsubrs
cmp
cwtl
sub
jl
sbb
push
loope
mov
iret
rorl
add
rcrb
sbb
mov
pop
inc
loopne
pop
mov
add
scas
je
adc
add
fs
inc
movsl
loopne
add
mov
cmp
xlat
mov
xchg
inc
or
mov
sbb
xchg
jmp
stc
stos
pop
and
cld
jge
and
fcoml
into
add
xchg
or
lcall
ja
dec
movsb
mov
or
loope
outsb
mov
mov
lahf
movsb
sub
mov
jo
adc
add
xor
nop
rep
xor
adc
rcrl
iret
lcall
aad
cmp
pop
inc
pop
outsb
nop
xor
ficompl
and
outsl
outsl
mov
gs
imul
je
jns
roll
jg
adc
sub
addr16
ss
push
jge
je
cmove
or
loope
push
xchg
mov
jge
sarl
test
push
mov
mov
sub
hlt
or
in
aam
jle
adc
jp
rcll
int
lock
mov
pushf
lds
xor
or
inc
and
dec
nop
xchg
xchg
sbb
and
add
and
xchg
xchg
mov
adc
add
inc
dec
les
cmp
stc
lret
pop
xchg
mov
fsubrl
pushf
stos
adc
sbb
mov
xor
adc
popa
shll
shlb
les
lcall
xchg
in
push
lret
decb
out
daa
add
in
lret
movsl
in
je
inc
mov
or
pop
ret
xor
pop
ret
pop
sbb
arpl
sub
jle
xor
bound
mov
jae
hlt
mov
fimull
stc
inc
arpl
xchg
and
add
push
test
and
inc
xchg
add
or
mov
das
std
sbb
les
xchg
out
push
jge
xorl
in
dec
mov
push
pop
std
adc
xchg
sahf
and
fwait
leave
push
out
cmp
cmpsl
hlt
jle
pushf
or
test
ss
fdivrs
push
sub
stos
inc
out
cwtl
inc
sbb
push
aad
xchg
repnz
pop
dec
xchg
mov
inc
sbb
in
adc
in
pop
mov
dec
in
xchg
rorl
data16
lret
orb
add
shr
int3
adc
adc
cmp
inc
test
cmp
ret
scas
andl
jle
pop
sub
add
push
adc
hlt
fs
mov
les
das
ss
sub
mov
mov
dec
jo
cld
leave
adc
scas
imull
std
popf
movsb
and
bound
sub
mov
mov
fbld
jno
dec
pushf
frstor
cmp
mov
xor
roll
imul
in
mov
xchg
xchg
pop
mov
mov
or
cmp
adc
xor
stos
mov
popa
mov
dec
into
pop
xlat
call
jp
dec
dec
jnp
and
mov
xorl
mov
ret
cli
mov
jmp
push
imul
jnp
les
mov
mov
fdivp
arpl
loopne
mov
fldcw
sti
ds
daa
pop
inc
and
test
pop
scas
add
inc
insb
fs
cwtl
inc
lds
enter
out
sub
fidivs
xchg
push
aas
push
pop
cli
ret
cwtl
pop
jo
jle
mov
push
in
jecxz
and
pop
daa
hlt
into
adc
dec
cmp
fidivl
pop
jmp
and
fbld
idivl
xor
cltd
clc
add
adc
mov
ret
popf
imul
cmp
dec
lret
mov
movsl
ljmp
ja
lock
loope
pop
ficomps
inc
xor
ret
dec
repz
leave
mov
int
inc
mov
xchg
ss
sub
dec
or
mov
out
inc
xchg
or
sbb
add
sbbb
es
repz
lds
add
lock
xor
mov
cli
mov
test
mov
inc
cmpsl
add
jp
add
ljmp
pop
andb
aas
fnstcw
adc
fs
scas
jge
sbb
jle
push
daa
out
sub
ljmp
lds
inc
sti
lret
jb
aad
and
add
call
fnstsw
mov
adc
insl
jb
stos
rorl
xor
cld
fdivs
shll
adcl
daa
and
pop
flds
adc
mov
cmc
add
ret
lcall
adc
and
jo
sti
int3
nop
insb
push
xchg
push
ds
cld
test
js
gs
and
rcll
inc
mov
or
insb
fstpl
adc
jno
or
dec
or
push
xchg
test
mov
out
out
cmp
loope
jmp
test
mov
jns
sarb
sbb
js
mov
xor
pop
pop
icebp
or
loop
jl
std
cmc
push
jl
movsl
add
cwtl
mov
cld
les
andl
out
push
add
xchg
cmp
mov
test
inc
adc
repz
lret
mov
mov
mov
mov
adc
ret
or
sarb
pop
lret
inc
hlt
scas
push
sub
ret
call
fnstsw
leave
movsb
rorl
mov
sbb
adc
inc
insb
in
out
lret
pop
mov
mov
movsl
push
or
andb
mov
mov
lcall
xchg
aam
cltd
jnp
sub
addr16
or
dec
and
sti
pop
rorb
test
out
aam
jae
cmpsb
or
and
fstl
aam
push
jnp
rolb
sbbb
imul
outsl
rorl
xchg
pop
push
push
add
cmp
push
div
insl
outsb
dec
shlb
ja
fldt
loopne
add
cli
cmp
and
or
lret
push
cmp
stos
jmp
filds
ret
adc
pop
cmp
loopne
cmpsl
test
shrl
push
in
hlt
dec
xchg
xor
push
sbb
mov
adc
push
outsb
sbb
cmpsl
lret
mov
adc
pop
dec
mov
outsl
sub
cwtl
mov
mov
daa
jmp
and
or
dec
dec
loope
rolb
in
jns
sub
popf
add
and
decb
sub
and
cmp
mov
and
jae
xor
cld
scas
inc
jle
mov
lea
ss
mov
push
movsl
or
out
fmul
mov
and
cltd
or
xchg
lds
gs
movsl
inc
mov
sub
repnz
pop
jbe
imull
icebp
int
mov
sub
inc
aaa
loop
aam
ds
mov
sbb
sub
push
arpl
add
pop
aad
into
push
sbb
in
cmpsl
addl
loop,pn
pop
inc
xor
push
sbb
lods
pop
mov
arpl
sbb
adc
jae
cmc
cli
stc
cltd
mov
test
sbb
mov
data16
mov
mov
push
push
jae
push
jae
or
hlt
and
cmpsl
pop
and
fdivr
mov
mov
xchg
jl
jmp
out
stos
clc
xchg
jp
into
shll
lret
int3
bound
xor
mov
push
mov
ret
and
cmp
mov
xor
outsl
jnp
and
adc
cmp
dec
or
jnp
push
sub
sub
pop
mov
fcompl
mov
or
push
lcall
sti
sbb
scas
faddl
cmp
mov
mov
push
rol
shl
shlb
in
fcmove
imul
ja
dec
cmp
dec
cld
pushl
sbb
movsl
lods
xchg
es
sbbb
ja
mov
push
cmp
mov
rorb
int3
jnp
sbb
cmp
push
push
gs
add
mov
cmp
dec
pop
outsb
popf
jp
pop
pop
jno,pt
mov
push
lods
lcall
jne
mov
aam
jp
hlt
popf
fisttps
lret
in
pusha
sub
shll
add
out
aam
inc
in
icebp
sub
xchg
lock
mov
test
mov
clc
xor
pop
cmpsl
outsb
adc
pop
scas
std
incl
push
fldcw
pop
cmpsl
xor
jge
aad
dec
shll
loope
aas
scas
mov
shll
rolb
lods
push
iret
fcoml
sub
rol
pop
test
decb
mov
mov
push
pop
out
sbb
dec
push
mov
scas
sub
lcall
jecxz
inc
les
insl
ret
mov
sbb
push
or
sbb
inc
or
xor
insl
mov
mov
xchg
xchg
repz
mov
ljmp
shlb
cmp
pop
or
and
in
lsl
test
inc
mov
lret
rorl
and
jno
push
lds
inc
mov
ljmp
inc
ret
sbb
mov
pop
push
imul
loopne
jge
or
xor
aad
in
xlat
repnz
or
cwtl
push
sbb
out
mov
addb
pusha
es
lods
fwait
cmp
movsl
aas
jno
adc
nop
addr16
sub
mov
out
test
test
mov
repnz
aas
xor
and
movsb
xor
negl
sahf
movsb
stc
inc
sahf
test
jae
pop
sub
xchg
jge
shlb
jp
mov
std
lds
rcll
test
scas
bound
imul
rolb
xor
adc
pop
push
insl
mov
ficomps
fnstcw
lods
xchg
les
jge
pop
scas
test
push
push
add
ss
cltd
cmp
push
adc
xchg
int3
daa
pushf
es
cltd
mov
dec
cmp
sbb
dec
pusha
mov
aad
xchg
mov
roll
xor
inc
xlat
jb
xchg
ljmp
lcall
mov
repnz
cmp
shrl
lcall
sbb
push
pop
int
cli
dec
in
gs
cmp
lds
inc
jmp
arpl
test
mov
in
cmc
loop
cltd
in
negl
adc
scas
popf
and
push
aas
mov
call
test
cmpsl
sbb
lods
icebp
jae
aam
push
sarl
ja
hlt
pushf
and
mov
rol
xchg
jmp
and
test
out
loop
cmc
hlt
daa
xchg
notl
inc
jbe
xlat
aam
jae
and
mov
sub
mov
rcl
or
mov
xchg
inc
mov
fwait
pop
dec
or
xor
in
add
bound
rcr
sahf
push
mov
add
cwtl
mov
loope
ret
pop
push
stos
test
cld
clc
push
push
and
es
out
inc
sub
pop
add
mov
adc
pusha
int3
mov
test
es
add
jb
mov
testb
sbb
pop
enter
das
jecxz
inc
pop
pop
je
adc
insl
dec
mov
repnz
ret
xchg
lds
dec
push
or
cmp
mov
stc
rcrl
dec
mov
dec
dec
xor
sbb
jbe
fisttpll
mov
xchg
sub
add
mov
sbb
call
and
dec
jmp
jge
mov
jnp
mov
push
xor
mov
inc
iret
xor
mov
pop
mov
cmp
lea
jae
sub
imul
roll
lods
leave
sub
xchg
orl
out
jmp
mov
add
sub
xlat
and
xchg
subl
dec
or
adcl
sub
xchg
negl
xchg
icebp
icebp
mov
lock
outsb
popa
addr16
cmpsb
push
rclb
jg
push
jb
mov
add
dec
ret
xchg
loop
bound
jns
ljmp
pop
in
xchg
mov
jg
ja
push
clc
dec
add
jno
and
push
push
jae
enter
arpl
iret
fyl2xp1
xchg
jmp
sub
cwtl
inc
dec
mov
mov
imul
dec
mov
jb
cs
fxch
dec
jecxz
mov
add
add
in
cs
fsubl
es
sub
and
sbb
neg
je
xchg
mov
pop
int
aam
push
push
out
jo
dec
jns
test
es
adc
dec
ficomps
cmp
cwtl
push
and
repz
dec
jmp
daa
popf
push
shll
gs
jmp
cli
in
jl
lds
push
fcmovb
scas
and
lods
in
xor
fisttpll
es
cmp
sahf
dec
inc
and
leave
outsb
dec
les
mov
jo
add
adc
mov
data16
ja
sbb
addr16
call
inc
mov
pushf
jp
aas
mov
adc
cwtl
lret
cmp
xchg
sti
pop
cld
pop
adc
cmp
cmp
fstpt
xor
test
mov
xlat
mov
cld
add
call
push
test
cli
or
xor
inc
cmp
push
sbb
rcr
add
fdiv
pusha
mov
aaa
in
dec
sbb
xchg
sti
inc
repz
mov
jno
adc
pop
sar
sbb
aas
mov
xchg
cltd
jecxz
push
loop
mov
fmull
lock
loope
mov
and
push
add
insl
pop
jmp
sbb
dec
xlat
xor
push
mov
movsb
add
mov
add
aad
test
cld
addb
leave
dec
sti
and
push
sarb
shrb
add
aas
mov
dec
std
les
sbb
popf
lock
icebp
sbb
adc
sub
dec
ljmp
imul
push
mov
pop
adc
ljmp
jle
sbb
es
dec
stos
lahf
fisubs
and
cli
xchg
imul
pop
push
test
scas
ja
clc
and
dec
xchg
je
sub
loope
push
cs
insl
push
or
add
inc
jmp
mov
cmp
sti
out
pop
daa
test
lds
out
rorb
sarl
xor
jmp
lret
or
push
clc
outsl
xchg
mov
ficoml
mov
andl
sub
les
pop
loop
ljmp
insl
and
mov
and
sbb
mov
mov
cmp
adcb
mov
fistl
xchg
inc
lcall
loope
xor
movsb
int3
xchg
imul
sbb
jae
jno
xchg
or
lret
jp
add
std
ret
cld
out
sti
stc
xchg
cltd
or
jns
xor
push
imul
xchg
js
add
push
ss
mov
bound
sub
outsb
cli
push
ret
in
xor
cmp
mov
jecxz
adcl
mov
pop
call
mull
cmpsl
mov
test
lret
mov
orl
fistpl
mov
jb
jbe
dec
mov
shll
clc
inc
lods
add
sub
lock
mov
lret
and
push
jo
addr16
ret
mov
mov
in
aaa
add
loop,pn
cli
in
and
push
pop
add
pop
enter
loopne
or
xor
push
das
in
rclb
push
stos
ds
xchg
out
add
pop
testl
clc
scas
pop
lock
ss
push
aas
dec
dec
test
arpl
in
test
or
sub
frstor
inc
sarb
call
orb
push
pop
cld
lods
mov
inc
out
sub
cmp
mov
rcrb
out
sbb
pop
stos
sbb
fdivl
push
test
mov
push
mov
inc
pop
nop
cs
push
jg
and
in
sbb
dec
out
psadbw
mov
adc
adc
scas
xor
cmp
adc
ret
push
xchg
sub
sbb
sub
pop
es
mov
jbe
imul
mulb
pop
mov
pop
mov
jmp
in
mov
aas
xchg
jo
inc
xchg
fisubs
fistl
das
cmp
cmp
bound
jb
arpl
icebp
cmp
xchg
subl
pop
faddl
repnz
sarl
push
mov
mov
xchg
addr16
mov
sbb
pop
sar
mov
movsl
mov
inc
sbb
xlat
call
jbe
ret
popf
ss
mov
orb
pusha
mov
ljmp
or
pop
aaa
pusha
jo
sarb
or
ffreep
in
cmp
inc
sub
xor
xor
outsb
lcall
xchg
stc
jg
push
and
loop
sti
outsb
call
mov
xchg
jb
or
in
scas
inc
mov
add
pop
push
pop
sbb
mov
sbb
lea
leave
mov
sbb
cmpsl
js
sbb
mov
movsb
sbb
sub
cmpsb
xchg
enter
inc
mov
and
ret
and
pop
mov
and
incl
pop
pop
addr16
push
andl
xchg
dec
mov
lods
das
nop
aas
push
std
or
cmp
mov
test
rclb
cmpsb
lret
cmpsl
mov
data16
xchg
cmpl
sub
fldl
mov
addr16
jb
pusha
pop
mov
jge
enter
sbb
push
adc
cld
mov
outsl
arpl
lock
lahf
mov
rorb
mov
lahf
leave
mov
push
push
cmpsl
or
negb
int3
aaa
dec
sbb
sub
scas
andl
ret
jg
fsubl
mov
mov
xorl
fnsave
outsl
xor
xor
ljmp
jne
divl
loope
add
ss
adc
inc
stos
pusha
ret
insb
cmpsb
jge
jecxz
mov
in
xor
ljmp
mov
sub
or
test
fsubrs
push
fstpl
sbb
sub
rcrb
test
mov
test
mov
scas
mov
xchg
fs
xor
ret
imul
mov
push
insb
lret
mov
pop
adc
fwait
mov
adc
mov
jmp
mov
adc
in
sbb
mov
test
mov
lea
add
fstps
mov
mov
dec
dec
and
int
stc
cwtl
pop
pop
adc
jns
mov
sub
das
push
pop
and
pop
xchg
fnclex
xor
inc
cmp
cmpsl
sbb
rcrl
lret
imul
aaa
rcrb
or
loope
mov
cmp
insl
stc
in
pop
jp
out
scas
cmp
ret
filds
fs
jle
sub
cmp
rcl
insb
mov
and
jbe
jg
fcompl
mov
loope
add
push
push
and
mov
xchg
dec
mov
imul
lret
cmp
aas
sub
xor
pop
dec
cld
loope
insl
sbb
dec
sbb
lods
cmp
lret
jmp
xchg
mov
add
aas
pushl
cmp
xchg
add
daa
mov
mov
setne
lods
or
push
and
hlt
sub
sbb
cmp
pop
out
shlb
sub
sub
lcall
pop
mov
add
sub
lahf
subb
lcall
shll
xchg
jne
rclb
stos
or
cmp
push
incb
es
or
imul
ret
negb
ret
out
cli
mov
cld
test
push
xchg
out
xor
jecxz
ret
xchg
lcall
data16
dec
lea
sahf
aam
adc
rorl
dec
std
jns
imul
cmpsl
out
stos
int
sub
mov
or
outsl
sahf
ret
aad
mov
jne
sub
xor
sbb
adcb
aad
nopl
jp
mov
lahf
mov
xchg
insb
jno
and
adc
cmpsl
hlt
lds
cs
fs
xlat
mov
lcall
mov
xchg
mov
das
jae
arpl
out
stos
movsb
cmp
dec
jmp
sub
lcall
mov
shrb
xchg
fnstenv
icebp
jmp
int
ljmp
repnz
adc
mov
fcomps
xor
fsubrs
xchg
test
or
jp
push
std
push
aas
cmp
nop
mov
sbb
in
js
xchg
dec
stos
cmp
mov
lods
xor
test
dec
in
lret
icebp
xor
test
adc
ds
bound
sahf
loop
pop
aas
lret
jb
mov
shrl
xchg
xchg
sbbl
and
leave
call
mov
jmp
movsl
jmp
bound
cld
push
mov
js
jmp
jmp
std
clc
enter
shll
jb
jl
outsl
fmuls
and
lock
or
inc
in
and
lods
pushf
mov
add
cltd
jmp
ret
add
pop
int3
in
fists
dec
sbb
ror
dec
bound
jecxz
aad
cmp
and
or
neg
inc
shrl
xor
ss
movsb
out
jnp
push
pop
test
push
ret
arpl
shll
push
jbe
jmp
mov
sbb
jae
iret
dec
jb
cmp
clc
xchg
jnp
push
pop
and
call
mov
and
dec
mull
lods
nop
push
pop
cmpsb
jo
dec
stos
ja
dec
popa
out
out
insb
andl
arpl
jle
in
mov
iret
andb
cltd
jmp
dec
outsb
xchg
in
add
inc
add
outsl
push
fcmove
test
test
test
xor
stos
rorl
nop
bnd
adc
and
or
les
sub
cmpsb
dec
sub
cltd
sbb
xor
out
clc
pop
xor
inc
iret
nop
or
insb
xlat
shlb
outsb
mov
movsb
dec
push
in
pop
ret
push
jae
inc
push
imul
xlat
jmp
lcall
push
xchg
inc
arpl
xchg
adc
hlt
and
dec
jle
xchg
into
mov
mov
dec
mov
xor
adc
jmp
test
lods
mov
adc
jl
adc
lock
filds
addr16
sbb
pop
jae
jns
dec
insb
pop
mov
test
fldt
jg
mov
sub
je
in
stc
inc
call
rol
in
push
jnp
imul
pusha
lock
shrl
mov
push
sub
rcl
and
sub
add
pushf
insl
cmpsl
aam
movsl
stc
or
loope
push
in
and
jnp
push
lret
mov
dec
imul
mov
repnz
jno
fisubrl
out
mov
or
push
cs
data16
les
push
cmpsl
push
fisubrs
cmpsb
out
popa
in
xor
cltd
daa
inc
push
popf
add
sbb
dec
or
aam
jmp
xchg
inc
out
test
adc
stc
adc
xorb
mov
sub
push
xor
adc
mov
sbb
pop
pop
clc
loopne
dec
pop
pusha
jl
sub
fdiv
adc
mov
jmp
jp
out
xchg
ds
fdivrl
fdiv
rorl
test
jnp
into
dec
push
aas
mov
js
mov
ret
jnp
aam
aad
jmp
mulb
xor
mov
ljmp
ret
cmc
push
fldcw
cwtl
lret
mov
sub
out
or
ljmp
jl
jns
adc
xor
jo
jnp
xchg
sbb
push
test
sub
mov
pop
loopne
xchg
jp
sbb
sbb
loope
int3
iret
or
cmp
outsl
cwtl
in
ljmp
mov
imul
aaa
int
ret
stos
xchg
stos
movsl
xchg
pusha
xchg
mov
scas
xor
stos
cltd
cmp
pop
jnp
and
pop
rorl
mov
rolb
insb
cmc
mov
pop
mov
fwait
inc
pop
fdivs
test
pusha
xchg
add
mov
mov
cmpl
lock
add
mov
dec
imul
mov
out
xchg
popa
cmp
shl
enter
icebp
or
xchg
mov
out
or
repz
movsl
and
xchg
and
dec
sbb
into
and
fcoml
mov
ljmp
arpl
pop
xor
sbb
adc
push
cmp
jno
mov
out
jle
cmp
push
addb
jne
mov
and
loope
adcl
test
gs
push
push
daa
mov
mov
xor
pop
fwait
mov
push
lock
fwait
stos
repnz
bnd
jle
adc
test
adc
mov
fnsave
shlb
inc
sub
addr16
es
icebp
dec
out
mov
inc
cmp
rcrb
hlt
movsl
inc
nop
lods
dec
add
dec
ss
cmp
xchg
ret
fs
or
xchg
jo
inc
xor
push
cli
jbe
cmpl
fstl
xor
shl
sbb
cmp
pop
into
aaa
rorb
sbb
sarl
cmp
xor
pop
into
mov
out
xor
divb
cmp
xchg
out
dec
jno
stos
sbb
bound
sbb
cmp
subl
std
push
int
fbld
mov
lods
outsb
push
cmp
outsl
inc
ss
dec
xorl
sub
sub
xor
lahf
cmpsl
or
xor
fwait
mov
jo
mov
jns
incb
push
mov
and
and
out
xchg
cwtl
cmp
push
ds
or
mov
pop
pop
shr
cmp
pop
sahf
ret
adc
pop
xor
lods
adcb
adc
stc
out
test
aad
lahf
sub
dec
push
dec
push
push
mov
push
mov
pop
fidivrs
xchg
and
or
loop
test
xchg
scas
stc
mov
push
dec
pop
push
scas
cli
lods
mov
mov
inc
xchg
insb
inc
repz
add
jnp
iret
xchg
into
jl
or
fs
rorb
into
dec
enter
inc
cli
fs
lds
jno
pop
pop
mov
jmp
cmp
cli
shll
scas
dec
out
mov
mov
lret
iret
int
cs
xchg
lret
jne
loope
cs
dec
cli
sbbb
clc
xor
popf
mov
testl
pop
mov
pusha
ret
dec
cmpsl
pop
sbb
scas
in
dec
xor
xchg
data16
andb
jge
ror
cld
xlat
xchg
xchg
jae
pop
aas
push
sbb
shll
popl
mov
loop
repz
cmp
inc
sub
fstpl
notl
notl
shlb
xor
jmp
mov
xchg
ljmp
aas
mov
cmc
mov
mov
sbb
insl
or
rcrl
push
out
shll
adc
adcb
stos
jb
jnp
jo
insl
jne
lcall
pop
xchg
leave
pop
pop
pushf
adc
xor
xor
fcmovu
loope
push
loopne
sub
xchg
cmc
out
int3
mov
push
out
pop
cmp
xrelease
or
les
and
fwait
sub
je
mov
and
and
mull
test
mov
aam
outsb
push
xchg
dec
ljmp
addl
sbb
popa
cmp
sarl
popf
sub
jae
cmpsb
clc
les
pop
cld
inc
fs
xchg
ljmp
jle
mov
dec
xchg
push
push
into
pop
adc
or
mov
xor
cmp
cmc
in
and
loope
cmp
dec
jmp
sub
movsb
stos
aaa
pop
xchg
rclb
fadds
sti
adcb
rcrb
das
bound
add
fcmovnu
fs
test
xchg
gs
dec
in
mov
dec
cmc
mov
fxch
dec
fwait
mov
xorl
mov
fs
test
and
inc
mov
jo
loope
fisttps
js
out
mov
dec
or
out
push
jl
dec
fdivr
xor
pop
mov
mov
ljmp
mov
or
inc
out
shl
push
or
fbld
push
mov
loope
rorb
or
loop
fnstcw
add
jne
popf
imul
in
inc
inc
adc
pop
xlat
fsubr
sub
fcoml
xchg
sbb
insl
adc
cwtl
iret
out
fldl
fs
sbb
int
js
sbb
jmp
popa
jg
adc
jmp
cmp
push
jb
fimull
fstpl
pop
mov
dec
int
mov
or
or
jbe
add
pop
push
xchg
fcompl
jmp
pop
inc
pop
mov
pop
ficompl
int3
pop
mov
mov
push
xchg
gs
popf
cmp
imul
stc
jnp
scas
call
in
dec
int
adc
or
iret
ja
mov
mov
call
cmp
loop
sub
mov
nop
xchg
push
fisubl
cmp
fnstsw
pop
inc
rolb
enter
sbb
fwait
and
nop
push
mov
imul
in
xor
pop
imull
sbbb
mov
jbe
cld
jge
mov
pushf
mov
fisubs
and
or
test
pop
jns
aaa
ror
inc
std
mov
pop
outsb
sbb
fstl
mov
fwait
mov
xchg
imul
push
mov
or
ljmp
adc
fs
in
push
ret
gs
data16
inc
test
xlat
jg
fstps
sub
xlat
in
dec
mov
mov
int
pop
cli
out
pop
popf
arpl
ds
mov
rcrb
enter
dec
pop
int3
clc
or
les
jno
imul
mov
in
xchg
pop
jnp
jge
xchg
popf
out
xor
js
jbe
mov
test
push
enter
jb
mov
rcr
popf
fcomp
and
dec
test
mov
mov
and
xchg
jp
inc
call
loope
push
fisttpl
adc
mov
jmp
add
pop
pop
push
push
clc
mov
mov
scas
push
loopne
popf
sub
sahf
sbb
jg
pop
push
push
pop
fldl
pop
or
mov
pop
scas
call
mov
rolb
sti
je
mov
sbb
icebp
push
nop
mov
fisubrl
clc
or
jp
stos
cmc
imul
out
sahf
adc
jae
sarl
fcmovbe
adcb
nop
aas
mov
mov
jae
pop
mov
lds
add
add
sub
aas
push
test
dec
jp
sbb
fdivp
sub
popa
mov
les
cmp
int
jmp
mov
adcb
cmpsb
xchg
or
cld
or
cltd
shrl
shl
pop
or
inc
jle
jecxz
add
test
ret
push
fstpl
in
adc
mov
jnp
xchg
popl
scas
add
dec
in
inc
mov
inc
xorl
jmp
fwait
pop
mov
or
push
jle
jle
mov
into
dec
mov
jl
and
mov
pop
xlat
cmpsl
push
push
jmp
shrb
mov
cmpsb
stos
cmp
mov
add
arpl
xchg
xor
outsl
fiaddl
shufps
sti
cmp
stos
dec
mov
mov
int
rcrl
jl
or
daa
push
push
iret
mov
pop
inc
cmp
inc
xor
sbb
mov
xor
inc
stos
test
es
push
add
movsl
nop
mov
xchg
scas
fs
cltd
loopne
dec
inc
hlt
inc
xorl
movsb
or
insl
sub
jb
push
mov
xchg
addr16
mov
sbb
push
sahf
repz
and
icebp
shl
pop
fadds
mov
jg
mov
outsl
cmp
test
lock
xor
mov
shrb
inc
mov
mov
je
and
int
int3
scas
sub
add
jbe
xchg
dec
fs
js
test
mov
ja
mov
cmp
pusha
adc
movsb
mov
pusha
out
pop
and
out
fisttpl
pop
pop
inc
mov
adc
stc
ljmp
pop
adc
fs
mov
pop
fisttpll
xchg
inc
sub
jecxz
mov
fsts
jmp
fldcw
add
sbb
into
lret
push
out
xchg
prefetch
das
jo
ficoms
cbtw
shl
in
ljmp
dec
popa
cld
mov
in
adc
dec
test
movsb
lret
int
jns
arpl
int3
jecxz
adc
pop
push
xor
fbld
push
lods
test
call
lret
stos
push
sub
jno
mov
movsb
jle
shlb
rcrl
dec
pop
dec
adc
inc
jmp
aam
xchg
mov
rolb
push
stos
add
add
rolb
fisubs
lret
xchg
into
xlat
push
pusha
sub
cli
sub
js
push
in
mov
call
test
rol
or
push
push
movsb
and
adc
dec
fcompl
pop
sub
sbb
jecxz
pop
push
loop
ljmp
and
stos
lret
lahf
add
imul
nop
rol
cmp
push
push
xchg
mov
shll
sbb
sub
add
sub
sbb
inc
iret
cmc
cmpb
cmpsb
dec
mov
xor
pop
mov
ret
fwait
test
sub
jne
loope
pop
inc
faddl
jecxz
mov
pop
call
test
xchg
ds
fs
int3
push
inc
xor
jno
dec
bound
xor
jl
loop
mov
mov
or
adc
in
sahf
xchg
xchg
sbb
xchg
aaa
lret
ds
xor
pushf
inc
js
jns
jns
inc
dec
cmc
xor
subb
push
mov
andl
mov
daa
push
aaa
or
mov
pop
fsub
dec
mov
cmp
jno
cmp
insb
test
or
ficoms
scas
xor
pop
push
pop
jb
add
cmpsl
or
sbb
aaa
xor
int3
mov
mul
test
addr16
mov
xor
stc
pop
and
jmp
push
out
xor
popa
shrl
pop
mov
add
fldl
mov
aaa
sti
mov
fisttps
sub
inc
sub
ret
cmp
out
loopne
adc
xor
insb
cld
fcmove
loop
cmp
in
lcall
xor
inc
arpl
scas
pop
mov
xlat
pop
mov
jo
mov
stos
or
xor
mov
addr16
insl
iret
outsl
fwait
enter
fildll
cmpsl
rol
sub
sbb
out
and
push
dec
mov
push
push
popf
cmpsl
sub
pushf
pop
dec
cltd
idivl
push
in
lock
dec
andb
mov
das
inc
ss
cli
jecxz
sti
sub
imul
push
jno
xor
roll
push
lcall
stos
ficomps
cld
cld
or
add
sub
sub
and
push
jmp
pop
push
pop
xor
shl
cmp
and
cmc
inc
stc
js
inc
bound
lods
call
mov
dec
add
jno
cli
add
push
sti
bound
dec
lock
push
push
fcmovb
rcl
mov
xor
xchg
pusha
outsl
add
inc
dec
pusha
xorb
aaa
push
mov
dec
std
ss
iret
movsl
xlat
in
dec
lahf
test
jbe
ror
inc
cmp
adc
jmp
jle
xchg
mov
repz
pop
jb
js
add
ja
mov
fcomi
fdivrl
dec
inc
gs
or
mov
pop
pop
popa
mov
arpl
mov
test
stc
jns
aad
xchg
mov
notb
adc
or
daa
mulb
sub
pop
push
into
stos
adc
out
sub
inc
inc
xor
mov
loopne
ja
pop
movsl
shll
xor
cmpl
orl
leave
int3
mov
stos
or
mov
adc
push
repnz
loopne
dec
mov
and
and
add
lock
jae
or
push
shlb
push
es
cmp
adc
fs
jp
inc
ss
jns
cwtl
int3
stos
jne
jp
sub
inc
mov
es
cmpb
in
pop
or
out
ror
mov
xlat
or
lahf
push
inc
xor
ds
loop
rcrl
pop
rcrl
jns
test
and
cmpsl
sub
stc
mov
pop
insb
sub
sub
xchg
ret
fdiv
cmp
enter
aam
in
js
mull
fs
fucomi
pop
enter
jp,pt
sbb
or
js
orl
mov
pushf
jo
mov
pushw
repz
sub
in
inc
mov
data16
cli
pop
cwtl
roll
add
add
out
cmp
pushf
dec
fcomp
cmp
ljmp
lock
out
push
sarb
scas
ja
add
call
rolb
push
xchg
out
enter
out
mov
aas
or
fcmovnbe
push
xchg
and
fidivrs
sbb
out
and
mov
std
in
jns
lock
xchg
add
outsb
dec
and
and
cmp
mov
adc
mov
cmp
sbbb
mov
nop
fists
fwait
int
mov
les
in
insl
sbb
dec
push
and
clc
jmp
pushf
and
ret
xor
jnp
jp
mov
mov
sub
cltd
jb
into
das
dec
pusha
mov
sbb
dec
dec
inc
inc
and
fwait
push
hlt
scas
cmp
mov
rol
mov
sub
cmp
mov
sub
add
das
loope
es
mov
shll
fimuls
pop
mov
sub
inc
daa
cmp
and
jno
fwait
push
and
mov
push
int
pushf
sub
mulb
out
call
lret
es
sub
stos
iret
pop
mov
cmp
push
sbb
nop
lods
icebp
mov
lcall
in
and
popa
cmp
es
jb
sbb
in
push
aas
pop
inc
sti
xchg
jb
cmpsl
ds
dec
lret
mov
push
testb
sbb
outsl
imul
mov
or
xlat
and
cmp
adc
pushf
cmp
mov
sbb
aas
shrl
jnp
mov
adc
jmp
add
xor
adc
add
xchg
in
mov
mov
scas
or
repz
in
leave
or
addr16
jnp
in
mov
add
std
xchg
mov
cs
arpl
sub
ret
dec
sub
mov
int3
repz
mov
orb
ficoml
fldcw
pop
dec
test
cwtl
push
imul
hlt
add
adc
add
lods
test
cmp
cmp
jl
hlt
into
sarb
push
int
push
sti
xor
in
aas
and
xchg
int3
jl
mov
push
dec
mov
insb
dec
mov
sbb
rclb
repnz
mov
xor
pusha
fdivl
scas
add
adc
pop
sub
lods
add
add
fsubrl
mull
lods
mov
out
ficoms
mov
bound
mov
out
or
ljmp
das
stos
adc
jg
inc
daa
hlt
ficoml
add
lods
push
fs
inc
inc
push
pop
lret
fucomp
jecxz
divl
aaa
and
sbbl
movsl
xchg
or
addr16
push
pusha
ja
js
mov
jecxz
or
push
insl
adc
inc
sub
mov
adc
jge
cmp
push
iret
push
mov
icebp
inc
fwait
dec
jno
jg
sbb
dec
inc
shrb
jle
out
leave
jno
les
in
xor
or
push
lret
pop
cs
es
or
and
push
in
cs
fmull
dec
xchg
rol
ficoml
pop
xchg
mov
or
iret
lods
mov
cmc
xchg
cmc
mov
cmp
out
mov
dec
mov
ja
fsubp
pop
push
sti
inc
bound
inc
mov
mov
ss
dec
pusha
cwtl
cltd
push
mov
and
mov
jb
mov
and
or
jno
inc
jo
cs
int3
dec
push
adc
filds
or
aaa
sbb
pop
pop
cmp
fiaddl
scas
pop
push
jge
mov
mov
xor
insb
pop
in
and
mov
xchg
fadd
insb
mov
inc
dec
inc
aas
inc
adc
loop
mov
mov
jp
push
adc
mov
cld
ret
mov
fsubrs
add
adc
mov
inc
push
adc
ss
jo
mov
call
jb
mov
pop
test
cltd
mov
adc
xor
sbb
repnz
mov
loop
loopne
enter
push
shlb
movsl
ds
pop
cmp
xchg
xchg
mov
mov
ljmp
and
fistps
mov
imul
iret
or
pop
jge
jl
cmp
ret
lods
stos
mov
repz
cmp
mov
cli
cs
shl
mov
adc
loope
cmp
js
sbb
fiadds
in
or
rolb
cmc
movsl
pop
nop
out
and
mov
loope
clc
ljmp
stos
mov
jae
xchg
insb
mov
xlat
xor
push
pop
mov
jno
int3
js
xchg
push
mov
xchg
add
addr16
int
pop
mov
xchg
jne
dec
enter
push
adc
pop
jno
rorb
and
push
jg
xchg
test
scas
ljmp
xor
out
xor
push
mov
ds
imul
push
dec
push
outsb
cmpsl
sub
sub
xchg
mov
int
fnstenv
lret
mov
dec
les
jg
inc
mov
push
iret
jmp
push
popa
shr
addr16
arpl
stos
add
mov
bound
pushf
negb
jbe
bnd
call
fwait
push
lods
mov
cmp
ds
adc
add
dec
iret
repz
mov
pop
addb
cs
pop
nop
mov
hlt
sbb
dec
mov
xor
mov
ljmp
enter
cmpsb
dec
push
into
add
or
mov
out
je
je
test
popa
push
arpl
adc
mov
test
repz
outsb
dec
out
aad
sub
imul
pop
popf
arpl
xchg
lcall
push
push
cwtl
jle
push
aaa
jae
add
jp
roll
adc
ficoms
sahf
push
mov
sbb
or
outsb
adc
aaa
sarb
xchg
loopne
jno
pushf
or
push
imul
loope
xor
shlb
sbb
cltd
sarb
outsb
cmc
jo
dec
sub
add
mov
push
pop
sarl
into
pop
dec
outsb
sbb
or
mov
xchg
shll
inc
add
push
push
dec
das
test
xchg
pushf
mov
loope
or
mov
aaa
inc
cwtl
add
xchg
aaa
or
movsl
daa
pmulhuw
or
es
addb
pop
pop
testl
fdivrl
mov
cmpb
popa
stos
sbb
mov
dec
mov
lods
inc
xchg
lods
mov
mov
mov
fwait
jl
sbb
add
mov
leave
jl
or
ret
cmp
ror
sbb
imul
mov
mov
lods
gs
enter
std
ret
jl
xor
adc
cli
outsb
jno
push
or
add
cmp
push
mov
movntq
cmp
sub
xchg
or
xchg
mov
fisttps
or
inc
push
packssdw
inc
adc
adc
mov
push
lods
pop
pop
fwait
loop
ret
sub
mov
mov
cmp
or
sub
mov
iret
jle
fcoms
inc
and
repz
inc
int3
jb
divl
adc
push
jmp
sbb
aam
mov
add
sbb
cmpsl
call
lret
mov
test
cmp
in
push
inc
mov
aaa
lahf
mov
jg
push
mov
lock
push
xrelease
ret
stc
out
jle
push
xor
mov
aad
xor
int
cmp
dec
jmp
mov
fistps
add
fmull
lcall
pop
loope
cmpsl
push
mov
pop
nop
mov
les
jg
lahf
jl
adc
mov
and
adc
inc
test
ret
push
mov
aam
xchg
icebp
dec
mov
cmpl
loop
data16
in
ds
es
xchg
test
rcll
stos
icebp
or
rorb
jne
mov
ljmp
arpl
sub
lahf
jb
add
in
call
jmp
cmp
es
jb
adc
cltd
fmuls
mov
rorb
ja
test
add
out
imul
out
sub
cmp
or
gs
adc
int3
mov
out
inc
out
enter
jne
shr
jecxz
push
out
das
xlat
xchg
mov
cmpsl
sub
mov
mov
loope
mov
dec
pop
aam
jl
jp
dec
push
dec
ss
xorl
mov
cmp
arpl
mov
cmpsl
mov
xor
rcrb
test
xlat
mov
adc
jns
cmp
cld
xchg
xchg
ds
pop
hlt
flds
jnp
cmp
add
or
fldpi
or
bsf
mov
lock
roll
mov
jb
lret
sbb
gs
imul
mov
dec
pop
add
repnz
shlb
jge
jecxz
into
mov
bound
aam
clc
jns
ficoml
push
clc
orb
mov
cwtl
cwtl
outsb
jmp
jmp
pop
insl
mov
lcall
jo
pop
and
fbld
stos
fwait
cwtl
rolb
and
dec
adc
addr16
hlt
adc
lret
mov
iret
and
sub
loope
jg
mov
dec
or
setae
lea
adc
and
jp
jle
sbb
fcom
lret
lret
into
pop
adc
fnsave
popf
cs
cmp
xor
and
pop
sbb
pop
outsl
xchg
call
icebp
mov
dec
bound
jecxz
aam
mov
loopne
mov
in
cld
pop
pop
shl
icebp
jb
rclb
sub
sub
pusha
pusha
sub
repnz
out
lock
xchg
mov
xchg
inc
mov
push
and
mov
test
xchg
mov
fisubs
fstpl
xchg
test
xor
mov
jns
jg
fwait
in
and
or
pushf
aas
inc
inc
xchg
rorb
pop
cmp
jmp
sub
data16
adc
cmp
andb
push
inc
mov
push
sbb
cmp
sbb
in
clc
jno
jp
pop
pop
in
xchg
dec
pop
pop
dec
dec
es
mov
push
mov
iret
cld
push
loop
test
in
lods
in
or
xor
cmp
mov
and
add
stos
mov
fs
repz
mov
test
mov
insb
rep
xlat
mov
je
mov
xor
sbb
mov
push
push
mov
xorb
mov
movsl
pop
movsl
jl
out
ret
pop
dec
xchg
or
mov
jecxz
sbb
daa
xor
pusha
aad
cmc
mov
outsl
fiaddl
xor
sbb
adc
xlat
lcall
cmpsl
dec
sbb
fldcw
cltd
lcall
lods
xor
add
mov
mov
xor
mov
ljmp
mov
push
cmp
pop
insl
inc
jecxz
test
pop
sub
lds
ret
insb
scas
outsl
int3
dec
clc
adc
or
in
add
mov
sar
jp
add
add
push
sbbb
aas
lcall
inc
jmp
mov
ret
add
xchg
repnz
jp
lar
push
rcr
push
push
adc
jns
xchg
adc
xchg
adc
sub
repz
call
popf
add
test
mov
lods
dec
push
xchg
outsl
xchg
stc
lock
sub
fucomi
mov
cmp
dec
mov
int3
xchg
and
add
ss
in
push
mov
xchg
mov
outsl
or
lcall
cmpsl
xchg
shl
fldcw
fcmovne
nop
inc
das
cli
mov
lds
dec
fiadds
cmp
dec
call
adc
imul
jg
jecxz
mov
je
outsb
nop
lret
jno
fwait
jb
xchg
mov
pop
outsl
and
inc
inc
cmp
sbb
inc
sub
xor
repz
iret
insl
pop
lock
pop
popa
out
jo
mov
cmp
adc
addb
adc
repnz
mov
mov
inc
mov
push
imul
cmpsl
std
cmp
sbb
inc
or
pop
shll
js
fstps
xchg
sbb
inc
lods
lods
xchg
xchg
xchg
loope
sarb
or
and
rep
inc
adc
jmp
adc
push
es
mov
add
push
cmp
xor
pop
adcb
cmpsl
stos
sbb
jmp
loope
push
xor
adc
je
into
repnz
sub
push
push
nop
dec
cmc
dec
dec
pop
dec
mov
aas
mov
fisttpl
pop
jmp
push
cli
cmpl
dec
sahf
lea
sbb
xlat
push
pop
push
dec
jecxz
test
js
mov
cmp
dec
inc
clc
in
push
adc
sbb
ret
clc
std
jecxz
repz
insl
test
inc
int3
cs
mov
xchg
and
sub
or
push
dec
adc
mov
sahf
daa
shll
dec
mov
add
xchg
sahf
xor
xor
add
icebp
arpl
dec
xor
call
fldenv
ret
out
rorb
lods
je
mul
repz
cmp
mov
xchg
or
inc
icebp
and
add
js
test
adc
xchg
and
or
dec
and
dec
mov
gs
loop
rcrl
mov
or
fildll
cmp
jl
push
jo
mov
sub
aam
fxch
pop
repz
dec
xor
cmpsl
iret
cli
mov
sbb
scas
push
or
mov
xchg
xchg
fnstsw
xchg
mov
rcll
insl
inc
add
sub
adc
mov
mov
aas
push
cmpsl
out
icebp
adc
mov
je
lds
ljmp
jmp
cld
lcall
imul
mov
inc
push
cwtl
cmp
jnp
inc
jmp
out
nop
mov
jmp
test
pop
xor
push
cmpsb
lods
dec
lock
popa
hlt
ret
fdivs
dec
test
pusha
out
in
pop
xor
test
cmpsb
sbb
lock
mov
popf
movsl
addr16
fs
inc
cmp
push
mov
into
adc
andb
push
pop
mov
test
jo
fwait
mov
dec
dec
adc
cmpsl
lock
xlat
xchg
sbb
and
out
fistps
sub
push
jne
pop
xchg
aad
hlt
rcrl
loope
rclb
into
pop
xor
cmpsl
es
std
gs
add
mov
je
repz
fnsave
cmp
or
in
push
stos
mov
movsb
dec
mov
ss
push
pop
cmp
sahf
and
xchg
sbb
xchg
inc
mov
mov
cmp
jmp
sbb
and
shlb
jg
loop
xchg
jp
add
jno
mov
lods
mov
cmpsl
push
jns
notb
mov
loop
adc
aas
call
pop
add
dec
cmpb
inc
cmpsl
mov
mov
test
mov
out
insl
xchg
cld
mov
sbb
jp
mov
sbb
loopne
shll
lret
aam
ss
imul
movsl
xchg
repz
iret
enter
test
add
jge
in
push
jnp
scas
add
test
scas
lods
pop
mov
push
pop
adc
lcall
stos
jmp
mov
mov
orb
mov
jne
mov
into
in
cld
xor
jae
jb
pusha
or
jge
out
rcr
sub
inc
loopne
pop
mov
cmp
ljmp
out
jb
and
xor
pop
imul
fwait
cmpsb
and
jle
mov
lahf
call
mov
mov
xor
fcom
fistps
outsl
enter
rolb
ljmp
sub
jno
mov
xchg
int3
out
dec
pop
xlat
stos
mov
sbb
mov
leave
rol
out
or
push
std
sbb
push
int3
inc
out
imul
nop
xchg
ret
ljmp
dec
in
roll
mov
add
adc
mov
push
loop
sbb
fsubr
shll
adc
adc
lret
xor
or
popa
lret
leave
and
sbb
adc
bound
andl
sub
daa
xor
sub
push
dec
mov
xor
sbb
stos
gs
pop
daa
xor
cltd
sub
cmp
push
andl
add
das
xor
push
call
xor
icebp
mov
inc
add
push
jg
push
fucom
xchg
push
cmp
fs
roll
or
inc
icebp
ds
xchg
xlat
cli
pop
out
pushf
cmc
push
cmp
jmp
shr
pop
xor
iret
fmull
xchg
xchg
lret
ss
es
mov
cmc
mov
fmulp
push
inc
pushl
mov
leave
pop
daa
mov
xchg
and
loope
out
push
movsl
xchg
inc
mov
push
mov
sti
fistl
jnp
adc
loopne
pop
in
xor
push
cmpsl
outsb
movsb
stos
push
or
int3
mov
cmp
and
mov
pop
pop
int
adc
xor
mov
popa
push
clc
inc
mov
mov
lds
ja
ss
xchg
movsl
cmp
or
and
mov
out
inc
jecxz
jae
or
xor
inc
roll
jb
lret
jb
fisubl
rcl
fadds
lahf
jns
pop
push
xchg
das
cmc
jbe
loope
fisubl
and
sbbl
scas
push
loop
cmc
cmp
cld
xchg
cmp
dec
mov
fs
mov
xor
sub
lahf
lods
aaa
dec
scas
repnz
fisttpll
jbe
fst
inc
icebp
mov
pop
movsb
sbb
dec
xchg
xchg
lods
jl
dec
es
lret
push
jnp
out
in
imulb
xor
xchg
out
rorl
pop
xor
fs
pop
dec
pop
sarl
aam
sbb
cmpsb
dec
arpl
ret
ret
xchg
add
cltd
data16
sbb
jp
add
push
call
cmp
mov
or
fldln2
xchg
lret
mov
cmp
cld
stos
cmp
enter
jno
mov
sbb
sbb
add
fbstp
ljmp
lds
pop
push
aaa
push
push
nop
xor
push
aad
xchg
loope
or
cmp
pop
fdivrs
pop
les
jo
pop
xchg
notb
mov
loopne
jg
imul
dec
mov
pop
mov
leave
cwtl
int
push
inc
scas
jnp
rorb
pop
out
adc
rol
push
pop
pop
or
pop
mov
ss
xor
iret
int
fiadds
imul
xchg
or
mov
mov
xlat
mov
jae
repnz
mov
xor
and
pop
inc
add
cli
popa
and
mov
jmp
js
fists
adc
mov
and
cmc
mov
xchg
out
xor
ljmp
add
jns
lret
mov
xchg
test
cwtl
xor
mov
ret
mov
insb
nop
mov
adc
shr
inc
mov
repnz
xor
xor
stos
pop
and
movsl
mov
inc
cld
jb,pt
fcoms
scas
or
xor
pop
lret
shlb
out
mov
cmpsb
scas
adc
stc
repnz
and
mov
stos
push
push
pop
pop
push
ljmp
inc
or
adc
loope
cmp
lahf
dec
cmpsl
inc
mov
pop
aas
and
ficoms
add
mov
push
mov
pop
das
and
jge
pop
orb
inc
xor
mov
aam
sub
dec
xor
mov
jns
sub
js
mov
jmp
sbb
and
faddl
xchg
cmp
nopl
lcall
jecxz
iret
fsubrs
aam
fimull
rcr
inc
cmp
imul
push
sti
or
sarl
idivb
fs
aas
mov
out
push
push
mov
pusha
repnz
pop
cmp
dec
sbb
sbb
loope
or
ror
xor
push
and
cwtl
shlb
jo
add
mov
addr16
in
inc
ret
lds
xchg
into
pop
push
test
ja
push
subl
lret
xor
fdivr
int
cmpsl
test
imul
fxch
dec
pop
pop
enter
mov
adc
xor
push
xchg
sbb
or
movsl
cmpsb
rclb
mov
jge
sub
in
cmp
insb
mov
add
sti
jne
mov
xchg
in
mov
scas
mov
ret
mov
push
mov
int
xlat
faddp
out
out
sar
aad
pop
movsl
es
xchg
dec
loope
lods
inc
fildl
fucomip
std
aas
lret
cmp
pop
mov
adc
dec
jl
scas
xchg
push
outsl
negl
pop
fs
lss
mov
test
fbstp
or
xor
or
rdpmc
push
push
rorl
dec
mov
jg
lret
mov
jo
lahf
xor
fwait
push
pop
and
pop
cld
xor
fidivl
mov
pop
adc
pusha
icebp
or
jae
ss
xor
xor
jl
xor
mov
hlt
add
push
loope
scas
pop
outsb
cmc
ss
rorb
repz
lods
stc
pusha
cmp
sbb
int3
lcall
sub
mov
fiadds
cmp
mov
lods
mov
jg
ja
test
xor
cmpsl
push
aaa
pop
lcall
mov
lret
xchg
mov
loope
mov
and
xchg
pusha
add
lcall
sahf
mov
std
dec
mov
jle
lcall
sub
jge
push
jbe
pop
pop
fidivrs
mov
pushf
xor
pop
jle
xchg
ret
sbb
jg
leave
and
orl
and
or
push
jo
test
mov
or
dec
xor
sarb
or
cmp
jnp
xchg
push
jp
mov
mov
lret
mov
and
inc
outsl
or
fisttpll
inc
daa
loop
add
popf
jp
insl
jb
outsb
stos
adc
lock
dec
cmp
fldt
xor
jle
sub
sbb
add
mov
dec
pop
out
les
femms
mov
pop
or
pop
lret
inc
jle
mov
mov
rcrb
jns
test
sub
popa
sahf
mov
sbb
sbb
push
push
repnz
cmp
cmp
xorb
decb
sub
pushf
enter
or
addr16
mov
push
out
adc
jb
jbe
adc
lods
dec
adc
xchg
cltd
mov
lea
sub
loope
mov
pop
mov
or
data16
push
cmp
xor
lret
dec
mov
dec
pop
sti
or
dec
les
or
mov
mov
add
jbe
nop
ucomiss
push
enter
pop
mov
lcall
das
mov
setl
adc
test
sub
pop
pop
clc
sbb
mov
insl
mov
gs
dec
pop
lret
mov
insb
push
lret
into
push
mov
aaa
mov
push
mov
loopne
out
stc
push
ljmp
jnp
add
add
not
repnz
or
aaa
js
xor
in
mov
mov
sbb
jl
and
or
add
in
dec
inc
jmp
sub
in
mov
roll
jae
mov
in
mov
outsb
or
lahf
jg
je
mov
incb
sub
pop
lret
lcall
push
mov
enter
xchg
jne
dec
insb
inc
sbb
add
daa
ljmp
or
sbb
movsb
dec
loop
mov
cmp
cld
xor
gs
lcallw
shll
insb
jle
mov
int
xor
je
mov
mov
push
icebp
push
mov
jge
sbb
aam
addb
dec
roll
js
xchg
fimuls
lcall
cmp
adc
add
mov
jnp
je
mov
stos
xchg
fldl
and
sarb
and
add
loope
mov
push
mov
or
and
xchg
in
out
pushf
mov
jns
das
testl
xor
addb
pop
inc
and
push
fiadds
sar
inc
mov
mov
je
je
jns
test
jae
cltd
aad
jo
lcall
sarb
add
stos
dec
dec
mov
pop
xchg
insb
mov
loope
sub
shrb
bnd
movb
xor
mov
imul
out
pop
mov
cmp
sbb
rol
das
push
daa
insw
xor
push
pop
add
push
testb
inc
repnz
jle
cmpps
sbbl
fsubrp
push
in
mov
scas
and
pushf
fnstcw
jmp
rol
push
dec
aas
shl
nop
mov
outsb
iret
cli
pushf
pop
rorb
fcomps
addl
inc
cld
hlt
xchg
cmp
js
push
lcall
fidivrs
sar
popa
pop
into
lcall
shl
lret
adc
repnz
mov
pop
push
sub
in
sbb
adc
pop
incl
in
cld
fsub
mov
mov
jbe
out
xlat
popa
es
jmp
push
xchg
jl
or
rorl
or
or
push
in
in
icebp
dec
xchg
outsl
jbe
mov
pusha
xchg
push
es
xor
rolb
stos
jo
jl
push
dec
stos
pushf
cmc
sub
stos
loopne
icebp
mov
cmp
imul
and
inc
insl
inc
lods
mov
cmp
mov
push
loope
fdivr
aad
or
sbb
adc
sbb
push
lcall
in
in
mov
not
xchg
shll
sub
hlt
pop
xlat
std
lds
out
ret
test
out
test
add
cmc
push
sbb
add
jb
cmc
push
fwait
adc
out
sub
or
pop
dec
adc
js
xchg
pop
popw
push
jnp
scas
pusha
add
jle
jnp
inc
push
jno
loopne
mov
mov
cwtl
mov
jmp
dec
out
xor
fadd
pusha
dec
jbe
pop
push
push
mov
pop
dec
ja
enter
rorl
test
push
repz
push
enter
mov
adc
xchg
aaa
jbe
es
into
in
movsl
sbb
pop
add
iret
or
or
sbb
sub
mov
add
push
cmp
xor
xchg
sub
aaa
subb
dec
out
cwtl
push
mov
out
push
cs
arpl
xlat
dec
inc
sub
mov
dec
aas
or
call
add
fildll
pop
sub
pop
push
lret
enter
lahf
cmp
or
lock
jnp
fidivs
add
jo
sub
ja
rcll
sbb
cli
mov
sub
cmp
cwtl
jmp
ret
add
icebp
dec
arpl
mov
pop
and
mov
push
mov
outsb
mov
rolb
sub
adc
mov
or
sbb
jmp
jno
adc
ja
jg
push
sub
pop
mov
sbb
mov
pop
sub
fsubrs
cmc
cmp
std
cmpsl
stc
mov
push
xor
jbe
lea
mov
xor
pop
lret
lods
nop
fwait
gs
cld
xor
movsl
shr
sbb
add
mov
pop
ret
rcl
cwtl
hlt
int3
jecxz
imul
or
pusha
cs
jge
mov
dec
adc
out
out
push
sbb
popa
iret
adc
cmp
fwait
je
shlb
addb
mov
ss
xchg
movsl
test
testb
mov
push
add
test
sbb
mov
les
xchg
cs
imul
mov
add
aas
imul
incl
dec
xor
push
repnz
test
dec
les
rolb
dec
es
sub
fwait
es
mov
adc
dec
enter
mov
repz
sahf
out
mov
and
aam
pop
inc
sbb
xchg
sub
add
aaa
idivb
pop
aam
out
mov
int
xor
pop
xor
call
icebp
mov
xchg
aad
in
jns
stos
cli
mov
test
loope
scas
add
and
inc
iret
mov
jbe
jmp
jb
es
adc
das
cmp
pop
sahf
and
mov
jle
cld
add
xchg
sub
pop
or
jns
sub
adc
nop
push
or
daa
test
mov
xor
test
push
push
ret
dec
mov
dec
lahf
mov
xchg
push
bswap
lea
shrl
mov
dec
mov
push
sub
pop
imul
or
imul
repz
pushf
cli
lock
test
adc
mov
mov
xchg
or
xchg
and
loope
aad
dec
test
mov
xchg
ljmp
int
cmpsl
rorl
or
je
in
cmpl
out
cli
and
sub
cmpsl
test
fstps
xchg
pusha
idivl
fldl
mov
and
dec
xchg
adc
or
add
sar
aas
maskmovq
notl
fistpll
mov
pop
add
mov
jge
mov
jno
icebp
lahf
insb
cmp
xchg
roll
dec
iret
rorb
adc
or
mov
ja
or
lret
pop
iret
les
call
andb
cltd
jo
cs
xor
je
int
out
sbb
mov
sahf
adc
sub
xor
dec
or
xchg
std
xchg
popa
jmp
xor
je
fs
mov
in
test
aam
cld
xor
nop
or
test
je
fisttpll
xchg
push
ficoms
xchg
popa
frstor
sbb
nop
adc
xor
add
push
scas
cmp
lcall
fbld
fists
gs
and
jae
mov
and
repnz
push
into
fwait
lds
add
mov
lds
add
in
stos
mov
out
sbb
aaa
fldl
aaa
mov
xchg
ds
jle
movsl
jecxz
fistl
or
push
cmc
into
popa
push
imul
push
xchg
pop
mov
add
push
mov
dec
or
adc
iret
imul
fiadds
lods
fldcw
cli
rcrb
add
leave
jge
mov
sbb
icebp
and
jp
or
pop
movsl
mov
enter
sub
fdivs
iret
daa
sub
pushf
dec
add
leave
pop
jo
shl
fwait
sbb
ljmp
hlt
mov
pop
jno
fs
popa
xchg
aaa
lret
dec
fimull
add
pusha
or
enter
loope
push
cmp
test
xor
or
enter
adc
mov
shlb
inc
out
icebp
dec
fidivs
mov
mov
push
imul
dec
mov
lock
imul
or
into
lods
flds
push
aas
fcoms
lods
mov
mov
sbb
cmp
sub
enter
div
lret
xlat
les
lahf
ss
inc
and
mov
add
js
lods
pop
cltd
jne
push
and
fcoml
push
pop
jae,pn
lahf
pop
sbb
aad
loop
movsb
mov
outsb
scas
dec
js
stos
enter
dec
and
leave
push
int3
pop
xor
mov
mov
jg
pop
push
add
je
inc
inc
mov
sbb
mov
cmp
mov
mov
mul
and
or
dec
int3
aam
scas
in
les
test
in
dec
inc
add
xor
in
orb
sbb
ficomps
js
or
ret
dec
jo
mov
sbb
pop
int3
xchg
push
dec
bndstx
lret
push
sbb
sbbb
xchg
dec
jnp
jns
fcmovb
push
and
adc
xor
pop
push
jl
ret
jg
stos
js
mov
xchg
scas
jp
sbb
jle
push
aad
shl
inc
pop
lret
test
fcmovnb
mov
test
fcoms
call
sbbl
xor
xchg
cmp
jne
sbb
inc
fidivrs
nop
push
shlw
fisubl
xchg
lahf
stc
and
adc
adc
sub
mov
aaa
arpl
fsts
push
fnsave
movsl
dec
imull
sub
mov
cmpsl
pop
les
push
outsb
mov
or
sbb
addr16
adc
lds
add
les
and
stc
cmc
iret
notb
xlat
and
inc
cmp
pushf
push
mov
out
outsb
cmp
adc
inc
xor
push
fnstsw
mov
cs
mov
sbb
leave
xlat
mov
stc
adc
mov
xchg
add
inc
mov
decl
lods
inc
pushf
sahf
outsb
leave
cltd
sbb
test
sar
mov
push
add
test
lcall
xor
int3
mov
out
sub
nop
xchg
arpl
lret
add
xlat
roll
xchg
test
push
jbe
sub
pop
fistpll
imul
pusha
loope
mov
pop
int
mov
mov
mov
daa
lods
icebp
cs
iret
push
jmp
add
pop
mov
inc
adc
mov
stos
int3
shlb
xor
clc
sbb
lcall
inc
outsl
insl
sub
ljmp
mov
push
cmp
xor
rorb
adc
and
xorl
mull
and
lahf
imul
lcall
xor
mov
lock
or
pop
mov
jg
stos
enter
pop
jge
inc
xchg
sbb
inc
xchg
bound
rorb
xor
pusha
std
ret
add
movsb
movsl
pop
xor
inc
repnz
dec
cmp
and
clc
and
jecxz
adc
cmp
and
push
sub
and
testl
and
mov
sbb
lods
dec
dec
inc
push
sub
add
inc
mov
test
xor
xchg
lds
out
adc
ds
xchg
pop
mov
push
ret
outsb
aam
mov
fsubl
inc
aaa
pop
adc
inc
testb
jl
enter
jmp
xchg
jle
pop
hlt
popf
out
or
xchg
push
pusha
xlat
rcll
mov
lcall
and
dec
push
out
in
mov
and
sub
clc
dec
lret
mov
cmpsl
push
mov
xlat
lahf
or
sub
adc
xor
xchg
inc
jmp
mov
lret
stos
rcrb
sbb
mov
mov
lret
cmc
scas
sub
mov
jne
insb
jmp
in
xchg
cli
popa
or
mov
out
inc
jg
xor
cwtl
cmc
push
fisttpll
jnp
cmp
cmp
add
rcrl
and
daa
mov
pusha
sbb
sbb
insb
int
sub
pop
outsl
push
cmpsl
push
mov
and
in
mov
cmp
push
fbstp
call
dec
lcall
pop
xchg
int3
mov
orl
rcrl
stos
pop
dec
cli
xchg
sbb
jmp
ds
xor
lea
fmull
or
cmp
hlt
cwtl
sbb
fwait
leave
mov
shrb
push
lds
add
les
mov
inc
leave
fstps
mov
and
mov
inc
mov
sub
popf
xor
loopne
sub
pop
mov
out
ss
pop
dec
jno
or
and
jge
std
jge
in
mov
xchg
adc
outsl
xchg
inc
sbb
ret
stos
cmp
popf
hlt
call
in
ja
sub
cmpsb
mov
xchg
sub
and
mov
push
add
outsl
push
lods
mov
js
insb
sahf
adc
fs
imul
cltd
outsl
pop
in
xor
jbe
xchg
mov
adc
cmp
or
popa
into
xchg
stos
repz
jb
dec
dec
popa
lods
out
inc
fstpl
ljmp
inc
push
iret
mov
push
xlat
dec
mov
sti
inc
lods
inc
les
adc
inc
dec
ret
xor
into
dec
xchg
int3
popa
iret
repnz
sbb
stos
bound
dec
cmp
les
loop
in
shlb
sub
cmp
out
jnp
leave
mov
xor
adc
ficoml
setge
mov
in
je
pushf
mov
cs
out
sahf
jg
leave
hlt
dec
add
mov
mov
bound
loop
int3
cmp
xor
cltd
sbb
dec
mul
jmp
lret
pop
stc
je
sub
sbb
test
push
inc
ret
sbb
mov
fmuls
popf
adc
aam
fistps
pop
pop
lods
stos
mov
psubsb
out
push
mov
push
out
cltd
push
add
mov
dec
pop
jb
adc
lock
dec
jbe
add
cltd
dec
insl
cmp
mov
ror
and
mov
mov
xor
and
pop
scas
les
mov
mov
and
decl
popa
fistpl
add
popa
xchg
jno
adc
jo
scas
lods
loopne
bound
inc
clc
add
nop
mov
icebp
pop
orb
pop
lret
cmp
xchg
push
xor
movsb
ss
repz
insl
mov
dec
lcall
inc
mull
xchg
pushf
test
xchg
or
outsl
icebp
cmp
lahf
sub
ret
xchg
mov
repnz
negb
adc
fwait
pushf
into
and
jge
punpckhwd
repnz
push
push
mov
loope
mov
add
orl
dec
in
fstpl
sbb
mov
data16
or
mov
jae
pop
cmp
imul
inc
test
pop
lcall
and
popf
gs
mov
mov
sbb
mov
scas
add
add
test
jmp
idiv
les
rcr
popa
movsb
fidivrl
xchg
rorb
xchg
ret
dec
fidivrl
or
mov
dec
and
jle
add
repz
ja
cmc
dec
jp
add
insb
adcl
icebp
inc
in
xorl
pop
adc
bound
sbb
mov
popa
je
and
add
stos
mov
push
ss
inc
adc
idivb
adc
cmc
adc
add
jnp
cmpsl
cmc
sub
adc
das
rorl
fs
mov
dec
out
mov
push
adc
sbb
cwtl
mov
mov
bound
push
xor
shr
pop
and
pop
sahf
push
dec
sub
mov
push
ret
out
mov
xor
rolb
cmp
addl
dec
xor
ret
cmp
xor
and
inc
sbb
and
adc
adc
fwait
mulb
xchg
jge
andl
push
dec
or
mul
pop
sbbb
stc
inc
lret
inc
mov
xchg
adc
adc
xorb
xor
jo
subl
int3
les
xlat
sti
vmovsd
bound
cmp
adc
pusha
add
adc
jecxz
insb
aas
xchg
xchg
jno
push
test
xor
xchg
or
ja
lods
pop
testb
add
or
fdivrl
imull
rclb
or
cmp
out
frstor
lods
and
mov
mov
dec
and
and
popa
jb
cltd
icebp
fsts
mov
arpl
pop
js
fucomi
inc
jp
lret
lods
sub
mov
aaa
testl
cmpsl
add
psubw
cmc
je
pop
xor
dec
fimuls
repz
data16
or
popf
lods
sbb
enter
adc
mov
mov
popf
mov
je
pop
loop
jge
push
cmpsb
adc
dec
xchg
gs
lret
cmp
sbb
jecxz
mov
push
dec
mov
clc
mov
sbb
adc
into
mov
fistpl
push
cmpb
push
inc
xchg
mov
es
and
adc
int3
push
pop
cmp
jle
fstpt
lea
mov
xchg
fadd
cmp
jns
push
push
into
les
sub
mov
cltd
sub
mov
out
xchg
add
jno
pop
add
sbb
add
out
aaa
arpl
adc
inc
repnz
popl
in
mov
adc
xchg
sub
jmp
sbb
pop
and
xor
addl
sub
lcall
inc
adc
add
push
dec
inc
icebp
daa
sub
into
xlat
xor
addb
or
pop
mov
pop
cmp
testb
push
sub
data16
call
or
mov
adcl
xchg
jbe
insb
add
iret
out
dec
sub
jge
fisubrs
ret
adc
iret
data16
jb
hlt
dec
repz
pop
lret
mov
test
adc
mov
sub
inc
cmp
fwait
or
xchg
fdivrs
insb
mov
cmp
mov
push
outsb
arpl
xchg
loopne
jl
adc
fidivs
sbb
inc
leave
push
les
leave
xlat
cli
test
int
mov
push
push
andb
xchg
fsubl
les
out
lret
fwait
and
jge
adc
dec
out
icebp
jl
push
sbb
cmp
ljmp
inc
xlat
pop
xchg
lret
mov
or
mov
call
mov
add
jno
pop
xchg
std
push
jg
addr16
js
cmc
pop
add
jp
add
aaa
sbb
and
cmp
int
cmp
mov
push
test
inc
pop
in
ds
mov
jmp
je
nop
pop
cs
xchg
mov
repnz
lods
xor
jecxz
pusha
dec
arpl
cmpsb
sbb
xor
mov
lods
mov
clc
mov
popa
inc
jb
cli
cmp
mov
stos
je
jo
mov
call
mov
push
dec
jae
jbe
outsl
jp
push
cmp
lahf
sub
ret
pop
pop
jmp
sbb
mov
enter
mov
shr
push
mov
call
jb
cld
test
xchg
mov
jns
adc
cmp
adc
push
push
arpl
pop
jb
xchg
inc
push
inc
xor
sbb
sub
pop
and
pop
in
jo
jo
dec
xchg
cmpb
sub
aad
in
jbe
and
frstor
inc
aad
movsb
mov
mov
andps
inc
xor
into
lret
fstps
jmp
decb
pop
enter
or
xchg
jb
fimuls
mov
sbb
pop
dec
or
sub
jnp
inc
imul
aaa
pop
mull
lods
mov
dec
inc
outsl
mov
inc
loope
jecxz
cld
popf
adc
ds
mov
mov
adc
mov
mov
cmpsl
subl
sbb
lret
add
xchg
sub
add
mov
rcll
xchg
cmp
js
adc
int3
popl
dec
scas
xchg
iret
adc
sarb
push
popl
test
xor
add
inc
rclb
pusha
add
int3
dec
in
lret
mov
and
lds
insb
mov
stos
and
cmp
mov
in
cmp
andl
mov
das
and
lods
pop
pop
dec
stos
pop
sbb
lds
fsub
sbb
sub
mov
out
call
or
fcomps
xlat
cld
mov
and
and
movsb
js
repz
sarb
jmp
dec
lock
les
js
add
enter
push
xor
pop
sbb
pop
jnp
or
outsl
pop
jp
mov
scas
mov
jge
push
jecxz
ja
movsb
pop
mov
add
mov
pop
clc
push
lods
test
sbbl
mov
jle
or
cs
int
jle
xor
aam
adc
inc
std
xchg
es
pop
cmp
addr16
sub
mov
or
add
mov
jecxz
sbb
jge
lods
in
int
inc
adc
subl
imul
jge
jbe
xor
shll
dec
jae
fcmovnbe
filds
sbb
lds
jle
add
fistps
jecxz
outsb
mov
test
adc
mov
push
test
lods
rolb
lahf
add
nop
fcmovnb
ja
mov
or
loopne
cmp
add
jns
pop
fbld
inc
or
dec
cmp
into
insl
insl
lret
mov
sub
adc
inc
ret
sbb
pushf
fsubrs
sbb
enter
adc
cmp
bound
mov
movsb
xor
mov
xchg
out
mov
loop
dec
xor
or
loope
out
cmp
daa
bound
push
fiaddl
cmp
stos
inc
mov
stos
fcomps
pushf
cmp
or
aaa
or
xchg
pop
andb
movsl
repz
decl
shrl
dec
lds
pop
push
cmp
sub
in
aas
cmp
mov
jmp
push
test
jbe
mov
dec
inc
sub
cmp
shl
xor
cld
jnp
pop
and
mov
mov
divl
shll
jne
push
loope
addr16
je
push
cld
and
push
rolb
cmp
mov
mov
cmpsb
xchg
cltd
popf
sub
pop
jmp
pop
dec
jno
pop
jns
dec
mov
jbe
cmp
pusha
mov
in
into
add
fbstp
test
jae
ljmp
movups
mov
scas
lcall
jne
inc
cmp
pop
imul
jl
icebp
sbb
js
hlt
in
fs
push
mov
aam
arpl
pop
sub
nopl
cmp
mov
jmp
mov
mov
sbb
mov
dec
xor
mov
or
cmp
or
fsubl
sahf
in
int3
rol
add
mov
call
mov
outsl
jnp
or
cs
pop
pushf
scas
add
push
lahf
dec
loop
imul
cmc
push
and
sbb
mov
add
jbe
rcll
inc
mov
fstpt
add
cmp
xor
pop
xor
jno
aam
fdivl
jge
test
jns
mov
xor
fucomi
cmp
xlat
je
popa
jnp
jne
scas
out
icebp
in
aaa
cmp
sarl
xchg
xchg
gs
les
jmp
in
ror
pop
in
pop
jecxz
cmp
aam
sub
add
in
cwtl
aam
xchg
daa
and
xor
jg
push
lods
push
movsl
sub
les
mov
into
dec
adc
mov
sti
imul
push
test
lahf
inc
sarb
adc
sbb
adc
xchg
sbb
pop
ljmp
fcompl
mov
adc
std
inc
lcall
sahf
in
jp
stos
jbe,pt
stos
add
mov
jmp
mov
mov
xchg
xchg
dec
jl
inc
js
or
je
push
pushf
stos
xchg
addb
push
gs
adc
daa
popf
mov
and
mov
jge
imul
sbb
fnstsw
add
mov
push
out
pop
iret
mov
xchg
and
jmp
movsb
inc
sub
dec
mov
lods
subl
mov
lods
sarl
and
movsb
rcll
push
outsl
outsl
sbb
xor
mov
pop
mov
imul
cmp
fisttpl
pop
nop
lret
dec
lock
mov
push
nop
sti
stos
xor
or
mov
daa
repnz
fadds
les
mov
stc
push
xor
inc
jae
jge
jo
xchg
push
pop
xchg
scas
dec
dec
push
icebp
movsl
in
push
and
add
or
add
add
jl
sbb
cs
decb
enter
adc
jmp
jb
and
xor
cmpsb
aad
mov
fwait
mov
fcompl
mulb
cmpsl
pop
je
mov
xchg
adc
imul
aas
popf
jo
jmp
mov
cwtl
mov
das
stc
std
lahf
in
ss
lods
add
inc
adc
mov
push
xlat
adc
mov
push
shlb
scas
jmp
dec
push
or
jne
hlt
or
cmp
xor
cmc
sub
jnp
push
divb
and
imul
sub
flds
fucomi
push
and
push
cmc
lea
xchg
push
adc
add
ret
stc
aaa
js
jae
sub
mov
fmulp
or
pusha
adc
xor
sub
les
pop
inc
out
insb
jl
add
sub
mov
test
pop
jmp
jp
xchg
mov
mov
mov
add
mov
cli
push
popa
jb
pop
lods
add
test
cmp
or
xchg
cmpsb
mov
gs
hlt
popa
shlb
mov
or
jae
push
mov
mov
mov
stos
cmp
jecxz
add
mov
xchg
inc
mov
inc
movl
pop
cmp
add
les
bound
jo
movsb
or
into
xor
stc
jae
cmp
cli
mov
data16
mov
cli
mov
inc
xor
add
gs
sbb
mov
pop
mov
xor
ljmp
jecxz
dec
adc
mov
adc
push
fisubrs
xor
data16
cmp
or
into
mov
dec
test
rcl
cmp
lret
cmpsl
idivl
push
push
ret
mov
mov
xlat
je
or
xchg
hlt
push
popa
cmc
testb
xor
sbb
mov
xchg
jo
sti
into
mov
sbb
inc
jmp
ljmp
inc
push
in
test
push
jo
add
or
rorb
dec
push
out
outsb
and
nop
idiv
sub
enter
nop
jmp
jae
sub
fwait
mov
leave
or
dec
movsb
fwait
adc
push
das
sbb
dec
push
sbb
icebp
test
fists
js
movsl
lcall
or
cmpsl
cmp
mov
cmp
xor
xchg
dec
mov
aad
jb
insl
pop
or
push
lods
adc
push
inc
mul
sti
pop
xor
jge
jb
imul
cmp
mov
mov
cmp
sub
out
pandn
jge
shl
dec
push
dec
xchg
mov
fadd
inc
mov
icebp
bound
inc
mov
mov
mov
sbb
jae
daa
xchg
in
add
sahf
fsubrp
add
lcall
push
and
fsubr
xchg
mov
in
sbb
xor
lds
fs
sbb
xlat
pop
pop
adcb
stos
sbb
and
outsb
mov
pop
repnz
or
and
lret
movsl
movsb
dec
xchg
adc
xchg
jne
jp
enter
xor
pop
cmp
ja
push
out
ror
bound
mov
jb,pn
add
xchg
jb
ljmp
push
loop
out
push
xor
pop
ja
stos
iret
or
lcall
gs
lcall
dec
jmp
jg
pop
scas
movsb
mov
add
iret
repnz
xor
inc
push
cmp
adc
mov
stc
adc
icebp
sbb
les
cmc
sub
paddd
mov
cld
cmp
push
and
pop
push
mov
loopne
js
lods
out
repz
enter
inc
stos
mov
rorb
sub
push
or
adc
call
adc
push
dec
arpl
sbb
push
movsl
jle
repz
andl
xchg
testl
push
fldt
xchg
push
mov
ficomps
insl
fcmovu
xor
push
scas
sti
jno
in
cmpb
ficomps
lds
and
push
lahf
adc
test
mov
xchg
ret
scas
int
ds
test
sbb
out
jp
jnp
cld
and
adc
arpl
cwtl
ror
inc
add
dec
std
dec
fstpt
lahf
stos
add
adc
setnp
mov
sarb
xor
sbb
aaa
dec
rcrb
sbb
xor
jle
fs
or
sbb
xor
imul
push
mov
pushf
and
ficomps
enter
out
push
xorb
sbb
mov
and
mov
dec
mov
int
out
mov
mov
cmpsl
js
jns
in
cltd
pusha
push
lahf
cmpl
movsl
cmp
imul
inc
test
fnsave
dec
dec
jmp
add
xchg
mov
pop
jp
mov
dec
in
or
xlat
mov
jno
jle
mov
jmp
jl
ret
orl
inc
mov
adc
imul
pushw
into
fwait
and
lcall
pusha
idiv
jecxz
or
add
pop
in
test
daa
popf
jns
xchg
mov
cmpsb
or
push
popf
dec
lret
imull
xchg
cmp
cwtl
fcompl
rolb
xchg
push
mov
sbb
popf
push
mov
aaa
sbb
mov
adc
mov
shlb
pop
pushf
pushf
inc
mov
out
push
and
xor
imul
enter
sbb
mov
pusha
dec
ret
je
mov
ficoms
fs
scas
or
cltd
jo
lcall
dec
mov
jo
imul
out
mov
std
jno
arpl
lahf
and
push
movsl
xchg
adc
or
sbb
lahf
mov
out
cmc
jnp
inc
or
sarl
enter
add
push
out
fildl
cwtl
dec
push
xchg
lods
push
outsb
mov
scas
movsl
andl
dec
xor
push
mov
mov
pop
mov
mov
sbb
out
fdivrl
pop
jge
stc
cltd
sbb
mov
imul
shrb
cmpsl
push
faddp
pop
and
jb
jmp
inc
pop
lods
cmp
and
adc
movsb
xchg
daa
loopne
pusha
lods
adc
jmp
icebp
call
xor
adcl
aaa
test
sahf
pop
jp
lret
sti
sbb
frstor
xchg
xor
jmp
push
cmp
mov
pushf
call
sub
shr
lods
jp
mov
dec
xchg
dec
sbb
mov
fcompl
cmp
jecxz
push
iret
cmpsb
std
dec
in
inc
inc
test
fcompl
lods
pushf
std
sub
jns
pop
mov
test
sahf
xchg
adc
into
cmp
outsl
or
cmpsb
mov
out
and
jnp
ss
inc
push
aam
std
mov
fbld
add
mov
jg
test
dec
jmp
xchg
xchg
ljmp
add
sbb
pop
sbb
add
mov
jl
outsl
mov
js
mov
dec
xor
lods
mov
mov
testl
xchg
push
and
jae
movsb
push
mov
outsb
or
push
mov
lret
ret
adc
test
jno
xchg
adc
push
cmp
adc
sbb
mov
es
callw
out
out
cmpsb
mov
inc
js
loopne
push
or
addr16
sub
or
xor
loope
and
dec
int
cmpsl
pop
adc
mov
cmc
stc
icebp
pop
lret
jmp
mov
push
mov
dec
das
scas
jle
arpl
fs
inc
and
jl
pushf
movsb
pop
movsl
sbb
adc
add
pop
adc
dec
pop
rorl
rorb
mov
repnz
lods
jecxz
sbb
mov
or
mov
adc
mov
add
ljmp
hlt
fildll
cmp
test
sub
gs
pusha
insb
into
push
gs
add
pop
out
rcll
fidivl
ja
mov
mov
ds
dec
jg
out
ja
ljmp
jmp
sarb
mov
jmp
and
cltd
and
dec
or
jb
xchg
sti
push
and
lret
and
push
xor
out
out
pop
dec
jge
xor
add
mov
push
cmc
hlt
scas
cmpsb
outsb
push
shrl
fucomip
movsb
sahf
pusha
ds
jmp
call
test
scas
push
arpl
push
and
push
cs
dec
test
loope
adc
cmpsl
aaa
dec
jp,pn
push
add
or
nop
push
or
xchg
test
jecxz
in
sbb
pushf
or
cmpb
pop
inc
mov
cmp
in
aad
xchg
inc
hlt
mov
pop
nop
xor
pop
jmp
movb
fwait
add
cmp
mov
mov
loope
mov
mov
std
jge
inc
xchg
dec
out
jp
and
popa
cmp
push
push
leavew
adc
mov
mov
mov
xchg
bound
add
mov
pop
pop
stc
cmp
sub
fidivrl
dec
or
repnz
jne
push
jne
dec
clc
ss
pop
mov
and
in
mov
lds
sbb
mov
mov
push
loop
fsubr
jp
fs
int3
loopne
leave
inc
mov
xchg
dec
push
mov
sbb
push
jne
and
pop
fs
pushf
xor
sti
dec
cld
pop
popf
mov
push
add
mov
scas
push
xor
mull
andb
mov
push
pushf
xor
xor
loope
int3
adc
jle
pop
add
sbb
xchg
push
jmp
ror
ret
aaa
js
in
pop
andb
sub
mov
insb
je
stc
xchg
cmpl
jns
out
cmp
and
dec
mov
xchg
sub
cmovle
lea
into
mov
cmp
pusha
mov
push
cmp
xchg
dec
pop
mov
sbb
mov
lods
jle
mov
or
movsl
pop
jge
adc
add
inc
std
mov
mov
stos
push
cmp
loopne
fildl
inc
pop
xlat
xor
sbb
adc
aad
stos
test
sub
sub
sub
aad
pop
scas
and
push
fs
pop
das
ss
iret
push
jnp
inc
sbb
xor
jge
popf
scas
push
inc
lahf
dec
sub
shrb
cmp
xchg
inc
repz
pushf
es
fldt
mov
icebp
adc
mov
je
add
sub
jno
hlt
ror
mov
xor
cmpsb
cli
cmp
data16
mov
ret
xchg
cmp
mov
mov
std
out
js
xor
xlat
in
into
cs
mov
dec
add
mov
lret
dec
dec
pop
jnp
or
mov
pop
aad
adc
push
pop
push
dec
pop
add
cli
mov
and
sahf
sahf
jecxz
mov
push
xor
loope
cmp
add
pop
cmp
rol
xor
pop
pop
push
repnz
fstl
outsb
pop
pop
cmp
ss
dec
sub
pushf
mov
repnz
cltd
add
push
jmp
aam
cmc
repz
jecxz
jae
pop
mov
dec
mov
sbb
adc
mov
aad
imul
fwait
stos
jbe
dec
xchg
in
stc
xchg
mov
jl
and
mov
inc
jno
aam
push
jnp
sbb
cld
pop
mov
addb
jae
push
sub
mov
push
fisubrs
dec
int
notb
pop
and
pop
sub
lods
dec
cmpsl
jbe
and
dec
sbb
xchg
add
mov
add
jmp
js
stos
pop
pop
fs
outsl
mov
push
or
dec
mov
pop
xor
js
lret
ljmp
or
cmp
stos
mov
repz
cmc
fdivl
int3
mov
test
xor
je
lret
push
xchg
and
and
sbb
inc
mov
and
stos
pop
jg
and
mov
lcall
adc
idivb
fldcw
sub
sub
outsb
loopne
leave
xchg
and
push
pop
in
jg
in
adc
push
andl
scas
mov
mov
imul
addr16
repnz
in
fchs
loope
mov
into
pusha
int
fwait
rcll
iret
out
or
jnp
mov
xor
outsl
cld
out
js
adc
pusha
and
xor
leave
sub
pop
lods
mov
xlat
roll
sub
jo
ret
mov
add
or
inc
jae
sti
jb
inc
cmc
nop
push
mov
xor
jnp
xchg
mov
mov
push
cmp
pushw
arpl
icebp
outsl
jae
pop
mulw
in
pop
adc
out
loop
repz
cmp
push
das
mov
cs
movsl
pop
movsb
push
and
lret
adc
sahf
lods
aad
fldt
lea
pop
mov
inc
shll
bound
push
arpl
incl
call
fnstenv
aam
in
dec
andb
inc
mov
add
mov
mov
sub
popf
lcall
fidivs
ja
sbb
int
lcall
scas
dec
out
mov
inc
aaa
lahf
sbb
pop
movb
movsb
lds
sbb
out
inc
ret
mov
inc
decl
xlat
jnp
out
fdivrs
stc
ret
xchg
les
repnz
sbb
mov
sahf
adcl
loope
shrl
jbe
outsb
icebp
push
cld
lret
hlt
cs
scas
adc
inc
push
xchg
imul
arpl
sbb
cwtl
outsl
pop
fnstsw
or
movsb
sbb
jne
out
inc
and
jo
movsb
or
in
push
or
mov
dec
dec
jl
and
je
lods
mov
lret
cmp
lret
sub
leave
sbb
pop
xchg
jae
leave
lods
xor
mov
mov
shl
mov
and
idivl
outsl
xchg
adc
pop
addr16
inc
icebp
add
ss
ret
adcl
pop
aad
dec
xchg
push
inc
sbb
xchg
ljmp
mov
mov
loop
mov
mov
andl
xchg
outsl
mov
or
test
mov
lret
push
sbb
mov
lahf
icebp
outsl
pop
pop
ds
lret
stos
imul
stos
ds
bnd
mov
ljmp
push
and
icebp
std
mov
mov
aam
or
adc
xchg
test
or
decl
xor
xor
fcmovu
jno
inc
jl
shrl
ficoms
inc
jmp
xor
cmp
xchg
inc
adc
jle
mov
icebp
sbb
lods
test
pusha
test
fsts
or
shrl
jo
std
pop
loop
jl
sub
movsb
lret
sub
mov
stos
icebp
sub
xor
in
scas
cmp
lods
mov
push
decb
xlat
roll
movb
addl
sbb
xchg
xchg
sbb
ja
mov
cmp
fdivrl
or
int3
adc
xchg
xchg
xchg
cld
movsl
imull
jno
iret
mov
leave
iret
cmpsb
pop
bound
imul
inc
outsb
jnp
xchg
sub
sub
stc
bound
cld
xchg
push
repnz
rol
and
xchg
dec
inc
xchg
leave
ja
xor
lret
push
jnp
and
inc
ret
or
push
push
aaa
gs
or
lods
xor
sahf
pop
movsl
inc
push
data16
popl
dec
jge
mov
and
jno
pop
dec
test
stos
mov
mov
xlat
mov
dec
aad
dec
sub
fimull
dec
cmp
lret
aas
fsubl
aas
pushf
pop
dec
push
mov
orl
shlb
and
sbb
subb
bound
cmpsb
in
enter
pop
fldenv
repz
push
push
sbb
shll
pushf
pop
inc
ss
xchg
clc
rorb
fidivl
jle
out
add
cld
push
loopne
das
and
mov
cmc
rcrb
cmp
pop
mov
mov
clc
dec
mov
mov
cmp
and
sbb
adc
addr16
pop
pop
adc
jns
push
adc
andl
jne
gs
lods
stos
leave
enter
addr16
aam
or
dec
inc
xor
les
cmc
shrb
mov
out
mov
mov
insl
jno
push
sbb
shlb
mov
xor
push
adc
outsb
scas
iret
sub
xchg
mul
andl
xor
cmp
lock
pusha
cmpsl
xchg
sub
adc
xor
push
iret
aad
xor
repnz
hlt
aam
and
int3
jno
popf
sbb
and
jl
jmp
rolb
xchg
jmp
dec
hlt
andl
ds
cmp
insl
cs
and
or
daa
fwait
sarl
sbb
add
push
stc
adc
jg
mov
dec
pop
jge
fcompl
and
sub
xchg
fdiv
ret
fldenv
aaa
cmp
ret
cld
push
xchg
pusha
in
arpl
ret
enter
jge
or
cmp
daa
mov
sub
arpl
or
aam
aaa
lahf
mov
pusha
js
mov
push
xor
adc
and
inc
es
adc
out
orl
es
adc
sbb
orb
es
dec
in
popf
ss
sahf
stc
jns
les
out
stos
add
scas
inc
sbb
lock
push
lret
cmp
jl
fadds
add
or
sub
int
lods
addr16
ficoms
mov
push
jmp
mov
cmp
push
push
jae
dec
rclb
or
sbb
and
add
fsubrs
pop
jle
push
inc
mov
or
pop
push
xchg
lret
mov
cltd
iret
and
sbb
das
sub
dec
in
or
mov
sbb
rorb
dec
js
idivb
push
push
negb
outsl
in
cmp
imull
cmp
push
or
lcall
icebp
mov
rorb
jge
add
xchg
jge
mov
cmpsb
jge
fsts
adc
pop
cmp
clc
xor
lcall
mov
aam
xor
test
sbb
mov
stos
mov
mov
js
and
add
fwait
sub
addr16
fwait
mov
mov
fsubr
popf
cmpsb
loopne
mov
pop
push
call
mov
and
test
arpl
insl
jne
add
pop
mov
lret
fimull
mov
cmpsb
adc
lcall
push
test
or
iret
in
push
mov
sub
or
and
divl
sbb
pop
sti
pop
jg
and
cmpl
cmpsb
stc
mov
mov
imul
stc
mov
dec
jne
push
lret
test
cwtl
imul
mov
xor
push
popa
mov
fldl
inc
test
and
or
leave
and
add
imul
dec
sti
ss
hlt
adc
mov
test
jmp
cmpsb
jae
jae
jae
jne
mov
jmp
mov
call
push
xchg
and
jge
mov
lods
lret
leave
jecxz
je
dec
test
sub
or
in
shrb
aam
addl
fs
or
in
stos
push
in
xor
jge
mov
inc
and
call
daa
loopne
das
lock
sbb
pop
movsb
cmpl
add
addl
pop
in
ja
sbb
out
xchg
sahf
and
or
lods
mov
xor
arpl
mov
inc
aas
outsl
or
sbb
lods
jmp
jmp
dec
bound
mov
push
cmp
pop
pop
sbb
dec
and
sbb
in
data16
xlat
loopne
ret
vsqrtpd
and
hlt
or
mov
sbb
lock
lods
shrb
in
sti
ss
popf
filds
les
std
add
out
jge
xor
shrb
nop
adc
cmp
cmp
scas
jmp
mov
jb
fucomp
jg
sbb
and
sahf
or
mov
add
insb
cltd
insl
fsts
pop
mov
aad
add
sbb
out
jle
jne
dec
xlat
push
xor
fiadds
lea
or
frstor
inc
push
mov
negl
test
movsb
test
add
das
jmp
punpcklwd
scas
mov
pop
adc
inc
mov
push
outsl
aaa
bts
scas
mov
xor
les
lods
adc
outsb
lods
leave
fdiv
mov
cwtl
pop
and
pop
xlat
pop
adc
push
dec
popf
jns
lahf
pop
aas
and
pop
push
sbb
in
or
push
ja
add
inc
push
push
and
sub
je
leave
sub
lret
cld
mov
pop
and
rcrb
out
rolb
add
loop
leave
out
inc
into
enter
cmp
inc
xchg
xchg
out
or
mov
pop
adc
or
adc
inc
int
mov
adc
shrb
adc
sbb
insl
sbb
repnz
push
jl
jns
and
dec
xor
sub
test
inc
scas
sub
mov
dec
and
push
and
shrb
push
push
cmp
cmp
jl
mov
inc
test
insb
std
jecxz
pop
inc
iret
mov
dec
xor
clc
shl
mov
xchg
jns
imulb
test
jae
out
scas
push
lcall
sahf
cli
inc
pop
test
xlat
mov
imul
es
and
imul
jmp
jbe
mul
xor
pop
arpl
test
or
sarl
jp
sub
inc
add
xchg
mov
inc
gs
inc
xchg
lea
bound
lcall
fcomp
cli
jmp
cld
ret
jnp
scas
fbstp
jle
lret
and
dec
repnz
hlt
jmp
fs
and
xchg
push
pusha
jle
test
or
adc
sub
stos
mov
sbb
sbb
lods
pop
sbb
leave
cltd
xchg
fwait
jg
push
inc
pminub
inc
mov
fistpl
mov
cmpsb
rolb
mov
pop
mov
scas
mov
xchg
push
fdivrl
xchg
xor
xchg
scas
pop
xchg
imul
fmulp
jae
push
mov
iret
mov
iret
mov
mov
xorb
xchg
sbb
xchg
js
cmp
pop
int
das
mov
in
outsb
push
inc
flds
and
sbb
mov
inc
insl
push
xchg
mov
xchg
lcall
jmp
xor
cwtl
fsubrs
dec
jge
stos
adc
cmpsl
lock
fsubs
mov
adc
test
push
adc
xor
adc
pushf
push
mov
aad
add
pop
cltd
sub
inc
and
es
out
dec
pop
cli
jno
fdivl
daa
rcl
fs
in
mov
aad
aam
in
rolb
mov
adc
sti
mov
shl
ret
push
push
xacquire
fnsave
mov
sbb
inc
dec
mov
pop
cld
jmp
lock
testb
lcall
mov
repz
out
cmc
psrad
fldl
xlat
rorl
mov
clc
fwait
xchg
notl
adc
xlat
push
and
dec
mov
pop
ret
out
mov
mov
mov
xchg
dec
shr
scas
out
xchg
ror
pushf
loopne
es
sub
jns
adc
and
pop
dec
add
stos
jmp
mov
pop
orb
xor
push
sahf
movmskps
loope
dec
stc
mov
inc
cmc
xchg
jb
mov
into
out
or
repnz
sarb
insl
out
jne
in
leave
dec
pop
lods
movsb
ret
les
insb
popa
mov
adc
ret
add
mov
sub
loope
sbb
push
pop
adc
pop
adc
xor
ds
dec
insl
or
pop
rorl
roll
push
xchg
xchg
out
popf
adc
jmp
jnp
mov
and
mov
mov
clc
and
and
sub
mov
push
fisubs
sub
xchg
jmp
nop
inc
in
sub
rolb
fdivl
ror
icebp
adc
std
jg
mov
cmp
xchg
dec
jge
jnp
shlb
mov
out
lods
aam
add
andl
or
testb
std
test
test
jb
add
outsl
mov
bound
cltd
jecxz
sbb
nop
movsb
stc
jae
std
inc
fucomp
idivb
jae
cmp
and
mov
ss
ficomps
sbb
add
repz
or
push
mov
lock
daa
into
push
push
insl
xor
sub
fcmovnu
mov
scas
push
lret
imull
jg
mov
mov
mov
popa
mov
sbb
add
sub
dec
lret
not
or
add
push
ror
bound
adc
out
les
adc
out
cld
enter
fsubrs
mov
mov
pop
ret
lock
test
ljmp
push
scas
lret
dec
mov
dec
cmp
jno
les
push
xchg
sbb
int
pop
push
and
scas
popf
ljmp
push
xchg
lock
xor
ja
jge
and
test
cmpsl
stos
ror
cmp
cs
push
cmp
jb
stos
cmp
inc
loop
sub
test
push
in
dec
sbb
push
data16
inc
mov
adc
out
sbb
shlb
insl
pop
xchg
mov
mov
and
in
clc
int3
gs
pop
mov
ss
adc
into
mov
jbe
mov
pop
pop
xchg
xchg
jns
in
sarl
mov
sbb
xchg
dec
scas
les
test
mov
mov
jo
leave
outsb
ret
aad
dec
in
jp
xchg
cmp
xor
adc
outsl
sbb
adc
mov
lods
mov
mov
out
adc
pop
xacquire
inc
lea
xchg
sbbl
popf
xor
mov
js
mov
test
popa
push
pop
xor
lds
dec
sbb
mov
mov
inc
inc
adc
out
jbe
cltd
adc
mov
dec
xchg
mov
lcall
sahf
sbb
xchg
mov
jno
dec
in
xchg
stos
lret
or
inc
mov
aaa
lahf
testl
out
push
sbb
dec
push
sub
and
dec
jecxz
out
jge
adc
sbb
stos
xchg
adc
int3
lret
mov
stos
orb
cmpl
in
lods
xchg
xchg
pop
pop
mov
push
pop
jl
xchg
rolb
xor
dec
mov
cltd
sbb
xor
add
fadd
js
subb
int3
inc
lcall
jno
push
cwtl
scas
into
cmpl
les
or
shr
sub
cld
loop
es
push
scas
and
or
push
inc
cmc
xlat
jecxz
shlb
jl
cmp
jne
pop
cmp
aad
shrb
les
ret
sub
mov
pop
cli
jnp
loopne
push
fdivrp
xchg
cmpsb
adc
in
pop
cmc
loopne
adc
dec
cmp
xor
lea
les
movsl
flds
push
dec
test
cltd
and
jbe,pt
inc
cmpl
movsb
mov
push
jbe
ljmpw
test
mov
stos
or
mov
enter
in
arpl
data16
rcrl
jbe
xchg
icebp
outsl
dec
lods
xchg
mov
decb
in
jg
jae
or
mov
test
fiadds
popa
mov
pop
divb
jo
push
repz
inc
cmpsb
stc
int3
std
es
pop
mov
inc
adc
adc
outsl
in
jp
mov
mov
jne
mov
fidivl
idivb
sbb
jnp
out
sti
push
and
pop
adc
sub
push
or
and
xchg
iret
dec
das
sub
jb
lcall
push
lods
pop
cmp
adc
pop
adc
sub
je
shll
mov
dec
ret
mov
rclb
lcall
stos
test
test
jo
imul
xor
rcl
popf
pop
push
lods
shlb
test
push
and
stos
cmp
push
cmpsb
pop
fistpll
sub
ret
shrb
call
sti
in
cmp
scas
hlt
jb
insb
sbb
insl
sbb
enter
xchg
ror
push
jbe
mov
daa
add
jmp
mov
add
stos
test
loope
add
xchg
mov
aam
pop
fmuls
fnstenv
cmpsl
mov
push
out
sbb
test
and
pop
mov
sahf
pop
mov
jg
mov
clc
test
rolb
cwtl
and
lret
leave
inc
lds
out
dec
outsl
push
lea
pop
aas
enter
jg
xorb
loopne
xchg
fwait
inc
inc
pop
popf
mov
in
xchg
push
test
cs
xor
mov
adcl
in
popa
enter
adc
dec
pop
imul
push
add
adc
cmpb
sbb
jae
cs
push
mov
call
les
dec
sbb
pop
das
push
in
sub
sub
mov
dec
movsl
pop
push
je
popa
loop
adc
xchg
mov
mov
stos
imul
xchg
lds
mov
out
mov
mov
or
push
pusha
and
nop
mov
xor
xchg
sbb
aaa
mov
mov
ss
movsl
push
pop
cmp
cmp
in
int3
ret
loop
stos
cmpl
mov
sub
sarl
mov
aaa
adc
shl
jge
inc
dec
insl
sub
mov
inc
mov
ficoms
pusha
sbb
icebp
lea
fcoms
ss
cs
ja
pop
inc
les
add
lret
testb
sub
push
xlat
and
pop
in
push
int
mov
lahf
mov
pusha
loop
loopne
or
out
and
sub
arpl
cmp
inc
sbb
push
mov
push
fdivp
and
jecxz
jae
mov
mov
push
mov
push
push
and
dec
std
xlat
cli
test
lahf
cmp
mov
repnz
mov
outsb
mov
cld
lahf
mov
ret
subl
lock
andb
inc
ljmp
popa
push
add
leave
mov
add
mov
push
gs
pop
outsl
imul
jl
and
xchg
xor
or
ds
push
inc
test
jmp
mov
pop
jg
stos
or
cwtl
add
push
fldt
xchg
mov
rol
arpl
fcmovu
and
mov
pop
insl
fiaddl
or
lods
pop
mov
sbb
nop
jno
sbb
xchg
mov
in
cmc
pop
push
out
mov
pop
stos
pop
popa
sub
jecxz
pusha
imulb
dec
out
inc
roll
lea
jno
lods
pop
mov
or
add
arpl
clc
testl
outsl
fistl
sub
dec
bound
lcall
filds
jle
movsb
jl
mov
and
jb
or
mov
mov
sub
test
insb
cld
cmpsl
inc
out
shlb
push
sub
dec
adc
rcrb
shl
stos
mov
ficompl
jg
stos
dec
cmovge
ds
dec
or
sub
add
cmpsb
adc
sarl
or
mov
insl
add
xor
dec
dec
cmpsb
push
cltd
shlb
mov
lock
mov
test
adc
jmp
push
pop
sub
pop
lfs
cmp
das
jecxz
sbb
daa
das
mov
pop
js
mov
das
bound
pop
cltd
icebp
xchg
out
sbb
out
xor
ds
jbe
pop
xlat
outsb
loope
lods
dec
pop
lods
jb
push
out
adc
mov
jb
testb
mov
mov
adc
test
xor
nop
cmc
pop
mov
cli
and
bound
push
jg
push
movsl
out
mov
loop
fnsave
out
pusha
insb
ljmp
xor
out
jp
jbe
popf
and
stos
adc
aaa
shll
sub
rol
pop
dec
push
mov
jne
icebp
xor
push
lds
cmp
repz
out
add
add
ret
idivb
jb
xlat
pop
inc
mov
pop
mov
jne
mov
xchg
stos
pop
add
loopne
out
pop
insb
push
sahf
data16
mov
sbb
test
clc
pop
lahf
test
inc
imul
jae
add
sbb
adc
stos
xchg
pop
cmpsl
sbb
ja
mov
sub
dec
push
out
lahf
loopne
pusha
pop
pushf
or
lds
insb
repz
lods
cmc
push
mov
movsl
cmovb
push
adc
and
je
hlt
std
mov
incl
inc
push
clc
ja
xchg
push
pop
aaa
mov
push
lods
loopne
push
dec
popa
aas
jae
in
dec
rclb
inc
fs
jg
fdivr
std
aas
xchg
jae
addl
or
in
cltd
sbb
call
add
scas
xor
mov
ds
pop
sbb
sub
out
jg
add
lds
push
es
jmp
pop
inc
add
movsb
dec
mov
lcall
xchg
inc
loope
js
sti
and
add
fisubrl
jmp
push
fisubs
loopne
mov
dec
cltd
stc
sub
add
dec
xor
mov
push
mov
leave
or
data16
std
inc
imul
leave
bound
sahf
and
add
repnz
push
or
xor
ljmp
imul
mov
jmp
mov
fwait
aaa
jmp
out
sub
mov
push
fldl
push
sti
jg
mov
das
push
sbb
loop
cltd
sbbl
push
add
insl
sbb
xlat
stos
add
testl
addr16
xchg
cmp
push
jo
xchg
gs
dec
push
adc
mov
push
jo
into
andb
movsb
call
lcall
push
cmp
jmp
sub
pop
in
lcall
push
test
icebp
xor
pop
jge
imul
pop
inc
stos
cmp
inc
mov
jno
repz
sti
mov
int
rclb
loop
sub
loop
repz
cld
test
out
and
dec
pop
mov
jnp
xlat
shlb
iret
cmp
cltd
mov
jns
adc
sub
call
adc
mov
add
cltd
jo
mov
xor
sbb
mov
clc
stos
mov
push
lea
and
xor
imul
shl
xlat
je
andl
clc
xchg
adc
mov
cld
sbb
cmp
idivb
sbb
xor
cmp
fisubrl
and
xor
jno
insl
out
andl
push
and
cmp
fs
lret
xchg
mov
popa
jb
je
dec
mov
mov
sbb
loop
pop
jno
scas
rcrb
out
pop
addl
cs
inc
and
sub
cmp
cwtl
cmpl
shll
in
pop
cltd
cmp
adc
mov
std
scas
xor
mov
js
mov
sub
pop
mov
or
and
lock
jne
push
int
sahf
mov
xchg
pop
xchg
fistps
outsb
iret
push
sarl
rorl
out
cmp
sub
inc
and
scas
xchg
pop
jbe
ljmp
sub
jle
sarl
xchg
jae
fsts
sbb
sbb
sbb
scas
pop
push
sub
xor
out
addr16
mov
lea
add
pop
sub
or
cwtl
mov
or
rcrl
imul
or
push
mov
mov
ret
lods
lea
inc
push
cmp
fwait
mulb
mov
hlt
lahf
das
lods
clc
mov
out
cmp
pop
inc
push
push
lock
xor
adc
sbb
fs
mov
ja
stos
fnstenv
jg
pop
shl
jns
pop
dec
jnp
popa
push
cmp
adcl
clc
adc
and
sub
jle
daa
jle
jne
xchg
adc
es
or
mov
sub
jmp
mov
es
popf
mov
add
jge,pn
pop
out
or
insl
mov
push
sarl
pop
mov
jae
outsl
fimull
fcmovbe
enter
mov
fs
lds
inc
daa
jo
lret
sub
sbb
sub
xlat
jns
mov
inc
xor
cmp
stos
jb
into
adc
insb
xor
cmpsl
xorl
cmp
push
cmp
cltd
or
add
movsl
push
mov
dec
add
in
dec
inc
and
cli
aas
icebp
add
add
xor
inc
inc
mov
nop
pop
add
and
inc
repz
jns
aas
leave
cmpsb
pusha
xchg
pusha
adc
gs
test
jmp
or
xchg
movsl
andl
mov
mov
or
orb
adc
aas
in
cmp
push
stc
mov
addl
lea
and
jnp
adc
sbb
das
mov
pop
xlat
jo
and
int3
xor
xlat
shll
call
cmc
out
cmp
cmpsb
jb
popf
cltd
add
icebp
js
hlt
sub
sbb
xchg
loope
sub
adc
test
aaa
repz
sbb
inc
in
xchg
imul
ss
mov
pop
sbb
pop
in
inc
es
push
outsb
xchg
loope
mov
shl
fldt
lea
mov
sahf
mov
dec
popa
add
negl
xor
aaa
outsb
pop
lods
hlt
push
fmuls
jl
mov
or
cmp
ss
inc
mov
lret
movl
sub
push
adc
insb
sub
cltd
sti
shrl
repnz
or
and
and
js
fcompl
pop
aad
jnp
pop
setge
test
xchg
add
out
rclb
dec
mov
fdivrs
fdivrl
inc
negl
dec
sub
jecxz
in
pop
pop
fstpt
in
fcomps
loop
xor
int3
sub
push
arpl
pop
sbb
pushf
add
push
ucomiss
adc
mov
out
ljmp
dec
jecxz
aam
sbb
cmp
or
data16
nop
cld
lods
jnp
pop
dec
test
xor
sti
std
jg
pop
pop
aad
leave
sti
nop
fstpt
and
inc
xchg
ror
sbb
mov
lods
test
xor
push
iret
pusha
cmp
mov
bound
sbb
and
sbb
in
lret
shl
lahf
lret
fnsave
loop
cmp
mov
adc
ret
loope
add
ficoms
mov
push
mov
add
movsb
jecxz
and
call
lret
std
stos
lea
mov
pushf
xor
push
insl
outsl
iret
push
dec
sub
je
fiaddl
jne
xor
sbb
popa
imul
das
dec
mov
lret
cmp
sbb
mov
int3
mov
cli
xor
push
int3
add
jnp
or
test
leave
adcb
aam
and
dec
mov
mov
pop
inc
in
ret
pop
push
push
jbe
repnz
mov
jno
aam
cmp
mov
jne
es
ss
push
push
xchg
ss
add
xchg
jg
mov
xchg
cli
mov
mov
xchg
sarl
mov
aam
cmpsl
mov
fidivrs
ret
pusha
test
leave
sbb
divl
xchg
fistpl
or
push
pusha
push
outsb
aad
scas
orl
pusha
scas
jb
and
lahf
inc
je
cmp
inc
sub
pop
mov
xchg
jmp
pop
push
imul
sbb
cmp
dec
push
jne
leave
push
scas
jg
popa
enter
add
or
push
out
jae
mov
jge
add
sub
cmp
push
dec
leave
xchg
lods
add
neg
mov
xchg
push
ds
imul
dec
cmp
repnz
cld
cs
push
mov
fwait
adc
mov
jmp
mov
filds
repz
call
shl
imul
push
inc
js
fsubrs
cmp
cli
push
xchg
ds
bound
movd
test
data16
sub
popf
mov
aam
lahf
add
pushw
jbe
fdivrs
test
or
movsl
sbb
std
mov
or
mov
or
repnz
lods
cmp
cmp
mov
xchg
gs
stc
sar
fdivrl
mov
sub
push
scas
add
filds
popf
sbbl
push
dec
stos
mov
push
sbb
adc
jo
arpl
adc
jecxz
stos
cmpsl
and
jae
cmp
mov
out
cwtl
sarl
cmp
sahf
mov
cmp
pop
clc
pop
scas
insb
sub
pop
scas
in
pshufw
sub
xor
xor
pop
stos
adc
jb
popa
icebp
fisubrl
jecxz
shll
push
icebp
jecxz
insb
cmp
cmc
jmp
pop
sub
xor
rolb
push
loopne
outsl
push
xchg
jle
stc
leave
fidivs
pop
outsb
sub
mov
cmp
bound
mov
aas
bound
push
mov
and
pop
shlb
mov
arpl
popa
jae
or
daa
push
sub
inc
enter
in
add
add
mov
filds
sub
add
shll
mov
cmpsb
pusha
test
xchg
inc
cmp
push
loop
testb
xchg
hlt
leave
cmp
inc
mov
sub
cs
movsb
jo
imul
out
cmp
ljmp
andb
in
sub
xchg
sub
cmpl
add
iret
mov
lahf
and
jno
pop
lahf
lahf
mov
xlat
fldl
cmc
ja
aaa
out
dec
test
lods
inc
xchg
scas
je
lcall
sbb
add
ja
mov
jbe
aas
jae
sub
cmp
mov
sub
or
dec
ret
or
arpl
mov
and
xchg
cmp
int
cmpsb
push
pop
aas
sbb
call
sub
xchg
jle
mov
test
fadds
mov
fwait
js
test
or
add
stos
shlb
shll
jle
mov
push
lret
jmp
mov
test
test
aad
cmp
cmp
lock
stos
loop
in
aam
jno
movsl
addl
pop
cmp
pop
cli
cmp
mov
sub
lea
fucomi
xchg
push
dec
cmpsb
jge
pop
jns
test
std
jne
std
pop
xchg
in
sbb
push
xor
jle
cwtl
push
jne
cmc
jae
xchg
pop
sub
mov
repnz
adc
mov
adc
mov
lcall
dec
loope
incb
push
mov
mov
popa
daa
sbb
lahf
test
jne
cli
clc
xor
push
mov
push
add
out
inc
push
adc
in
jns
push
dec
add
xorl
or
push
pop
cmp
and
outsl
ljmp
cmpsl
leave
fmull
and
and
pushf
jmp
push
push
sbb
das
loopne
scas
addl
adc
xlat
es
dec
jp
scas
mov
mov
dec
loop
push
xchg
jb
cmp
add
dec
mov
stc
adc
xchg
pop
pop
push
fdivs
pop
jmp
inc
pop
or
add
fldt
and
mov
inc
movsb
dec
pop
xor
sbb
jmp
mov
jmp
aas
roll
jno
fwait
xchg
punpcklwd
or
insb
mov
sahf
adc
mov
outsb
lret
ficoms
fwait
notb
test
in
and
inc
ficomps
pusha
fisubrl
sbb
std
pop
cmp
out
clc
jl
mov
jmp
xchg
icebp
sbb
clc
stos
inc
mov
mov
jmp
sub
out
xchg
les
cld
and
popa
lret
in
fidivl
in
std
mov
pop
mov
jle
test
fmul
add
iret
jo
cmp
mov
dec
rorl
cmp
movsb
sbb
cltd
les
ret
jmp
jno
mov
pop
jo
lock
rcr
sbb
pushf
push
sub
cs
out
ljmp
pop
ret
and
inc
fwait
sbb
dec
xor
lods
add
jnp
mov
mov
jle
outsl
adc
sub
mov
out
dec
call
and
aad
es
out
pop
xchg
daa
sbb
leave
nop
movsb
mov
sub
sub
outsb
sbb
jno
sub
test
inc
rolb
add
sbb
and
push
popf
in
cmp
jne
scas
subl
mov
push
lahf
mov
shl
push
pop
pushf
sarb
mov
fsubrs
dec
mov
xor
xchg
add
xchg
cmpsb
xorl
imul
testb
sbb
add
mov
aas
rorl
cltd
inc
out
lret
ss
mov
push
jp
loop
inc
rolb
rorb
mov
mov
mov
in
xchg
arpl
icebp
lods
repnz
push
aaa
in
jmp
jo
clc
insb
in
in
pusha
adc
call
jb
and
fs
popf
pushf
ret
sbb
rolb
jg
sub
dec
adc
cmp
jo
pop
pop
push
inc
cmp
mov
dec
push
fwait
push
pop
sub
fwait
cmc
jg
lahf
sub
mov
lea
aad
xor
insb
mov
mov
mov
dec
imulb
cli
inc
push
sub
mov
popa
es
cmp
pop
sub
ret
fists
fidivrl
mov
cmp
mov
cs
jne
lahf
lock
pop
inc
test
incb
push
in
int
jp
adc
data16
fdivrl
sbb
xlat
out
imul
xchg
arpl
daa
pusha
mov
jp
out
iret
and
fsub
and
test
ds
cmc
inc
mov
out
push
mov
cmpb
jno
mov
out
andb
cwtl
stos
outsb
dec
lret
cmp
add
mov
lret
testl
add
imul
add
popf
xor
inc
dec
iret
add
mov
jne
pushf
jae
enter
lods
lds
cwtl
popf
jmp
lock
pop
xchg
movb
cwtl
add
cmpsl
adc
test
bound
fbld
mov
sbb
es
aam
and
sub
dec
out
add
imul
xchg
ret
sbb
push
jmp
test
pop
mov
imulb
fwait
out
out
dec
das
sub
fnsave
cmpl
in
add
jns
outsb
xor
clc
xlat
push
sti
cmp
dec
pop
sbb
adc
pop
inc
inc
xor
and
sbb
add
push
add
out
fildll
mov
scas
or
mov
fnstsw
les
mov
pushl
ds
imul
ret
xor
pop
push
xchg
xchg
test
hlt
mov
ja
push
lock
sbbb
sbb
pop
in
jne,pt
cwtl
pop
lds
push
cmpsb
pop
cli
xchg
inc
inc
xchg
cltd
sarl
push
xchg
add
ja
or
pop
mov
push
cmovno
scas
movsb
or
std
aas
icebp
test
sub
pop
std
xor
outsb
loopne
inc
xor
iret
mov
fsub
or
ret
sub
mov
icebp
nop
sub
mov
sub
addr16
in
fidivrl
jle
pop
mov
add
fcomip
push
ss
inc
and
mov
movsl
popa
ret
js
aam
mov
sub
jmp
data16
cmp
rcr
cmc
lds
pop
ja
jmp
jle
adc
lock
cwtl
sub
fldl
adc
stos
push
push
dec
es
imul
lock
adc
movsb
jg
loop
push
fstl
pop
cs
pop
test
xor
cmp
ss
loope
cli
in
or
sbb
addr16
test
inc
pusha
dec
xchg
rolb
stos
push
push
faddl
mov
jnp
inc
dec
pop
fs
repnz
push
mov
xchg
and
aas
xor
dec
inc
aad
sbb
aaa
addl
flds
adc
out
subl
xchg
add
enter
js
aas
nop
cmp
loope
je
push
xchg
lods
enter
fldl2e
cld
out
push
shr
and
stc
test
xchg
or
enter
cwtl
jb
xchg
pop
cmpsb
inc
sub
aam
and
mov
lods
cmp
jp
inc
jno
fwait
cmp
jo
mov
pop
mov
adc
dec
dec
dec
add
adc
shrb
sti
mov
inc
cmpsl
pop
mov
movb
cltd
roll
repz
bound
imul
jb
leave
mov
sub
leave
sar
add
movsb
push
push
lcall
cld
mov
jb
xchg
push
jecxz
pushf
add
xchg
and
jae
iret
in
mov
lret
imul
out
dec
daa
mov
mov
test
cmc
xor
pop
aaa
fcoml
jge
pop
lock
dec
mov
out
lock
loop
icebp
cmp
cltd
icebp
cwtl
nop
gs
dec
xor
stos
xor
clc
jb
in
outsl
in
push
xor
sub
in
sub
xchg
xor
sbb
dec
push
adc
lds
in
mov
pop
popa
into
outsl
loopne
dec
mov
dec
xchg
push
gs
inc
aad
push
in
movsb
push
fisttps
out
mov
adc
pop
nop
int
jg
xchg
sbb
pop
cmp
push
xor
pop
xlat
lret
in
in
cmp
notl
aaa
add
add
jo
jmp
lcall
jb
xchg
jo
test
imul
jns
test
pop
out
icebp
rdpmc
subl
cmpsb
xor
cmp
lods
jle
test
ret
xor
in
lcall
pop
call
ret
stc
and
push
mov
xor
and
cs
and
pop
add
xchg
test
xor
add
push
aaa
adcl
inc
fs
int3
fmuls
jns
mov
stos
jb
add
xchg
lea
and
jne
push
mov
js
clc
loop
ljmp
movsl
mov
ret
aam
push
aaa
adc
inc
add
xor
add
ja
sub
adc
jmp
test
or
ljmp
fldcw
stos
jae
push
push
mov
les
dec
xor
fnstcw
push
or
mov
sub
imul
stc
fs
push
xor
mov
adc
pushf
or
cmp
cwtl
adc
mov
add
xor
push
mov
sbb
std
rcrl
adc
pusha
mov
xor
cmp
sub
jae
cmp
cmc
adc
sub
push
or
cwtl
addr16
xor
mov
push
sub
arpl
mov
inc
jnp
add
je
sub
xlat
mov
loopne
popf
scas
push
inc
pop
in
and
or
lods
rorl
sub
je
or
in
std
xchg
sub
test
mov
cld
xchg
popa
jb
rolb
mov
sub
xor
call
fnstcw
cli
adcb
leave
loop
rorb
pop
inc
shl
gs
xchg
mov
sub
jnp
xchg
aam
dec
jo
inc
push
jne
mov
push
into
insl
adc
inc
scas
in
es
dec
push
sbb
push
stc
leave
pop
pop
sti
dec
lods
imul
ljmp
and
mov
jl
test
js
xchg
out
fnstcw
xchg
xchg
movsb
xchg
mov
decl
adc
inc
jge
mov
or
mov
add
fwait
fs
call
pop
jg
pop
dec
and
mov
xchg
pop
sub
push
movsl
ljmp
adc
cmp
inc
stos
or
sbb
je
cs
pop
sbb
mov
ja
scas
push
jl
data16
out
or
sub
xlat
call
xchg
nop
xchg
sub
sahf
add
add
popf
jg
sbb
push
add
mov
test
outsl
pusha
lods
jae
mov
mov
mov
fs
leave
xchg
push
xchg
jle
mov
rorl
jb
aam
movswl
fcmovu
cmp
and
add
mov
xchg
jne
movb
sbb
or
inc
push
bound
lahf
cmp
jle
push
dec
push
inc
arpl
lret
std
fidivrs
pop
insb
and
jmpw
and
in
add
jbe
lahf
xor
xchg
xchg
inc
imull
fisttpl
mov
jge
push
xchg
cmp
sbb
les
add
push
rorl
fcompl
pop
sahf
test
jge
push
std
mov
add
sahf
mov
dec
aaa
in
or
cmp
lahf
mov
adc
lods
mov
and
pop
push
xchg
daa
adc
cs
pop
sbb
fildll
arpl
daa
scas
jl
dec
cld
or
or
mov
mov
mov
outsb
mov
mov
enter
cmc
pop
fisttpll
in
enter
out
into
xchg
dec
jg
loopne
push
loope
inc
dec
mov
fildll
xor
add
dec
push
sbbl
jnp
adc
add
mov
add
mov
mov
pushf
and
mov
stos
jo
ss
shll
pop
jg
addr16
jo
je
fbld
test
nop
pushl
sbb
cs
adc
sub
fcomp
mov
stos
sub
jnp
stc
pop
test
pop
es
sbb
adc
aad
sub
pop
push
push
push
lods
mov
xor
clc
sub
adc
stos
inc
divb
xchg
movsl
inc
int
sbb
in
and
add
mov
sarb
int3
ss
xor
fs
ljmp
pop
cmp
out
adc
and
push
pop
or
inc
xor
lods
rcl
sbb
lahf
ret
insb
inc
adc
push
rcll
lds
cmpsl
fnstcw
out
mov
test
popa
icebp
test
and
jecxz
pop
shrd
icebp
inc
dec
mov
mov
call
jmp
shrl
popa
inc
add
aam
dec
sbb
push
adc
jno
lahf
lock
jbe
mov
mov
clc
push
mul
cmp
fcoml
fsubrl
clc
xchg
xorb
fwait
push
call
or
xchg
cmp
out
mov
push
loop
push
insl
mov
mov
stc
push
jo
sbb
movsl
sbb
jnp
stos
clc
les
outsl
push
test
out
mov
jp
xchg
add
mov
loop
mov
aaa
jbe
mov
aaa
lcall
xchg
icebp
add
in
pusha
cmp
sbb
test
jb
leave
js
cmp
adc
jns
pop
mov
or
aas
into
fcmovbe
xor
push
in
ljmp
aam
cmpsb
sub
push
or
jae
add
imul
movsl
pop
inc
pop
sub
push
rorl
clc
mov
jnp
rcll
push
adc
push
pop
push
cmc
loope
push
test
arpl
jns
mov
mov
fs
outsl
fldcw
mov
cld
inc
stos
fs
dec
add
cmp
jo
xorl
mov
mov
pop
push
xor
dec
fucomip
cmp
mov
jb
rol
xor
jae
push
call
cmp
adc
mov
loopne
mov
mov
mov
and
xor
fcomip
mov
ljmp
or
adc
xor
cmp
popf
std
mov
out
sbb
stc
enter
pusha
cwtl
pop
jnp
cbtw
movsb
pop
xchg
movl
std
and
cmp
mov
in
int
sub
loopne
sub
cld
sbb
in
out
lahf
out
inc
adc
or
mov
adc
fwait
add
mov
aam
push
mov
pusha
jno
mov
dec
imul
call
aas
pop
mov
push
fcompp
pop
sub
daa
cmc
pusha
jne
lahf
add
int
or
cmp
adc
notb
lea
sbbl
fbld
subb
or
mov
fsubrs
push
lea
xor
js
dec
stos
mov
lds
inc
pop
out
cmp
jge
jno
cwtl
xchg
cs
loopne
hlt
mov
call
fimuls
lea
sub
flds
xor
pushf
xchg
aas
xchg
loop
add
inc
pop
adc
test
push
jno
mov
xorl
lods
clc
shrb
pop
and
xchg
mov
in
std
mov
mov
test
lea
repz
adc
mov
pushf
loopne
popa
out
mov
pop
test
adc
stos
mov
test
adc
divl
xor
mov
jge
in
jnp
cmp
and
lock
out
push
cltd
testl
mov
push
or
ss
popf
cmp
insb
call
jnp
loope
sub
nop
mov
inc
std
test
lock
sub
xchg
clc
es
cltd
data16
add
xlat
inc
push
js
jns
pop
jle
and
push
cmp
mov
xor
inc
and
mov
and
pop
fsubrl
jecxz
and
and
mov
ja
pop
xchg
out
bound
dec
or
int
push
xchg
mov
fdivr
mov
inc
xor
jp
ljmp
mov
cmp
shll
add
fcomp
shrl
mov
xchg
xchg
and
test
cmp
jg
enter
nop
scas
es
sahf
std
xchg
lahf
dec
inc
movsl
out
lds
sbb
mov
push
inc
jnp
test
xor
jno
pop
sub
std
gs
pop
movsb
sbb
mov
fldcw
in
outsl
and
int
jb
fistps
dec
jecxz
fwait
sti
add
ret
imul
lret
in
xchg
das
xchg
aam
or
sbb
test
gs
mov
xlat
out
cmp
es
ror
jle
in
scas
xor
lods
mov
mov
stc
jae
push
mov
stos
fistl
mov
bound
daa
mov
dec
add
ret
outsl
push
jns
mov
xor
jg
or
ja
fcmove
movsb
ja
mov
sub
mov
push
pop
add
lock
lahf
xchg
fcoml
cltd
jno
jg
mov
test
cli
push
and
movsb
sub
jae
mov
xchg
jne
mov
lock
push
mov
add
push
lret
fdivr
ja
jge
add
outsl
pop
sbb
jmp
adc
daa
cmp
data16
lahf
or
xor
jge
ss
stos
js
shl
xlat
test
pop
pusha
add
jo
ret
xlat
cld
mov
push
mov
jg
xchg
jns
jmp
sbb
sub
mov
test
sbb
inc
not
pop
test
movsl
mov
push
jle
or
insb
jnp,pn
dec
jbe
dec
mov
icebp
int
fs
cmp
loope
and
and
xchg
repz
cltd
fstpl
rcrb
cmpsl
nop
xchg
dec
mov
test
popa
fisttpl
pop
fcmovb
cmpsl
cmp
pop
jbe
pop
mov
sbb
cmpsl
lds
adc
cli
andb
negl
push
jge
lods
aaa
loope
fcmovnbe
mov
adc
pop
sti
mov
call
cs
ret
mov
shlb
nop
or
cmp
aaa
adcb
into
cmpsl
test
in
inc
movsl
mov
mov
lahf
jbe
mov
xchg
mov
mov
je
pop
fsubrl
das
mov
mov
sub
xrelease
push
repnz
push
shll
jns
xor
pop
mov
push
out
ficoms
inc
adcl
push
mov
cli
sbb
pop
in
jbe
daa
xorl
sub
sbb
loope
cmpsl
sahf
xchg
repz
repz
idivl
sub
adc
xchg
or
xchg
rorb
out
dec
or
andl
mov
inc
cmove
out
dec
push
std
fbld
clc
mov
notl
das
or
jo
mov
js
jmp
scas
popf
pop
cmp
push
fsubrs
jbe
ljmp
fmuls
xorb
mov
outsl
dec
jnp
loope
icebp
jb
gs
cmc
ret
sub
xchg
addb
jo
sbb
mov
cmpsb
pop
je
sbb
cmp
out
jg
jp
enter
xor
xchg
loope
insl
xchg
js
inc
ds
mov
cs
jne
push
fwait
push
dec
ss
push
stc
sub
out
pop
rolb
push
stc
inc
mov
test
int
inc
push
addb
in
rcrl
sahf
inc
jns
es
mov
insb
mov
call
inc
sub
inc
jne
and
jecxz
addr16
jae
xor
sub
bound
or
push
addr16
push
loop
mov
mov
or
add
inc
les
rclb
sti
shlb
jno
out
inc
add
test
test
pop
in
rcll
cli
inc
push
adc
into
test
jne
lds
mov
push
stc
sti
inc
je
or
aad
add
xor
mov
sbb
hlt
mov
iret
mov
pop
outsb
mov
in
dec
pop
pushf
ja
cmpsb
xor
mov
xchg
or
dec
lcall
push
mov
int3
mov
loopne
fwait
inc
inc
and
cmp
negb
inc
jb
rcl
pop
push
int3
lods
popa
mov
arpl
pop
aaa
xor
dec
and
mov
ja
stc
mov
jbe
add
pop
movsl
pop
mov
loopne
mov
cmc
in
push
imul
dec
aad
hlt
dec
dec
fbstp
fimuls
jnp
shll
pop
dec
mov
sub
xchg
fcmovne
sbb
jae
rclb
aam
cmp
add
popf
lock
cmp
sub
xchg
or
pusha
fs
mov
cwtl
lea
mov
mov
lret
pop
fistpll
jb
es
pop
cld
and
adc
ret
or
out
xor
into
cmp
mov
inc
pop
add
int3
repnz
fwait
jnp
mov
add
cmpsl
test
stos
es
lock
adc
fsubs
dec
push
out
int3
fwait
adc
arpl
mov
push
pop
nop
mov
sbb
ret
pop
test
enter
bound
lock
into
jmp
in
mov
outsl
jne
xchg
xor
clc
adc
mov
jge
addr16
jne
adc
mov
aaa
lret
cmp
mov
and
out
aad
vsqrtss
xor
xor
popf
cmp
jp
bound
pop
sub
dec
es
push
jno
aas
xchg
int3
mov
mov
push
fadd
cwtl
sub
fdivl
add
and
fcompl
adc
ds
sub
cltd
fs
setg
dec
ds
or
pop
gs
cmc
out
ret
lret
xchg
imul
sub
xchg
clc
or
jnp
bsf
out
sub
pushf
aaa
push
shl
fcoml
cmp
mov
push
xchg
and
aam
push
mov
lret
fbld
cmp
cmovno
hlt
movsl
sbb
xchg
push
sbb
mov
js
fwait
ret
dec
lret
mov
pop
adcl
inc
mov
sbb
sbb
sti
lcall
sahf
daa
aaa
lods
shll
and
lret
addr16
iret
sahf
lret
jle
push
andb
lods
sahf
je
adc
sti
fcompl
inc
rcl
repnz
cmp
fisttpl
fcompl
aam
xchg
cmp
out
nop
xchg
adc
sbb
lea
mov
xchg
add
pop
dec
enter
mov
mov
dec
dec
call
out
mov
ds
mov
adc
inc
or
es
mov
das
push
fcmovnb
sbb
sub
inc
xchg
and
int
lahf
outsl
lds
imul
pushfw
movsb
and
je
out
inc
addr16
push
popa
cmp
shr
xor
je
mov
adc
mov
js
inc
pop
dec
pusha
pop
xor
gs
nop
and
fcomps
xchg
or
cmp
fwait
inc
ficomps
popa
fnstcw
mov
int3
inc
cmp
cmp
jmp
inc
ret
mov
lds
cmpxchg
pop
sahf
or
fcoml
fistpll
ja
repnz
test
jge
hlt
mov
orl
scas
lcall
push
test
xor
sbb
push
cmpsl
pop
icebp
inc
test
jns
jle
cmp
mov
mov
in
xor
add
xchg
cwtl
ja
fwait
inc
xchg
lds
push
cmpsb
cwtl
cmp
decl
mov
adc
clc
js
ljmp
jl
insl
rcrb
xchg
mov
das
mov
test
mov
xchg
cmp
cmp
inc
sub
push
imul
cli
sub
or
push
mov
sbb
push
jo
aas
dec
movsb
in
fldenv
ret
ret
js
pop
movsb
dec
das
adc
in
jne
adc
mov
insl
das
add
adc
cmpsl
aam
add
and
call
ret
push
scas
and
in
sbb
add
jp
popa
mov
sub
or
shll
push
jle
mov
cmpsl
xorl
ja
hlt
lods
insl
outsl
insl
ss
xor
inc
push
incb
lods
mov
int
jo
in
test
daa
in
fbld
addr16
leave
je
out
or
inc
addr16
test
xor
mov
test
leave
pop
inc
jns
test
adc
clc
push
cmp
dec
xchg
leave
mov
in
xchg
push
ss
inc
pop
jns
add
lods
mov
mov
shl
sub
popf
addr16
push
enter
sbb
mov
out
dec
and
sub
jecxz
cmpsl
out
aad
xchg
lods
fisubs
cmp
xor
fdivr
stc
mov
shll
fcomip
aaa
mov
mov
insb
mov
insl
pop
fistl
addr16
lret
in
cmp
jne
sub
pop
mov
add
scas
lret
daa
jl
xor
rclb
jbe,pt
leave
and
lret
xor
into
out
or
dec
call
js
xchg
or
in
dec
je
cmp
push
shll
pushf
or
sbb
leave
mov
mov
lods
gs
daa
test
bound
push
xchg
mov
out
into
mov
pop
in
push
fdivp
je
pop
imul
mov
sub
ljmp
or
faddp
mov
test
cs
jb
les
addr16
or
divl
test
pusha
fwait
sbb
out
dec
xchg
fwait
mov
fisttpl
shl
xchg
sbb
repz
movsl
imul
sahf
xor
sbb
dec
and
jae
add
inc
push
push
enter
data16
or
jnp
pop
add
orb
cmpsb
ja
sbb
out
sub
cli
insb
sub
inc
fsubl
pusha
mov
enter
popf
scas
fildl
repnz
cltd
cmpsl
adc
push
jno
int
push
cmpsl
cwtl
hlt
adc
aas
mov
scas
imul
in
ss
pop
cmp
adc
pop
lock
pop
shll
pop
inc
jmp
adc
jae
add
jmp
rclb
pop
out
les
fwait
pop
cmp
inc
nop
jge
mov
shrl
or
lahf
jl
aam
mov
out
xchg
lahf
cmp
fnsave
popa
sub
es
xchg
mov
ss
gs
push
call
sti
jp
cli
ror
lods
push
hlt
insb
mov
cmp
cld
jge
mov
mov
pop
xchg
and
inc
inc
adc
insl
pop
add
xor
add
xor
lcall
imul
in
push
inc
pop
or
adc
dec
adc
add
jnp
dec
mov
mov
pop
push
cmp
pop
addb
and
push
outsb
leave
nop
xchg
prefetchwt1
ret
jg
xchg
stc
mov
jge
in
sub
loope
dec
aaa
fcmovnb
xor
sbb
cwtl
stos
in
pop
out
ret
adc
jo
pop
pop
inc
inc
in
mov
fwait
sub
inc
sbbb
imul
sarl
xor
in
je
sti
inc
stos
dec
xchg
jecxz
jmp
mov
jb
cmp
or
mov
inc
or
cmp
mov
into
clc
push
jp
dec
and
fnstenv
cld
mov
fbld
popf
push
enter
aaa
pushf
pop
dec
enter
lds
icebp
in
mov
mov
test
in
or
and
insb
mov
cmpsl
and
sub
sub
out
xchg
data16
sub
add
lods
jp
mov
mov
ret
mov
test
adc
test
fwait
sub
pop
cs
cltd
adcb
pop
roll
mov
adc
pop
lods
push
test
sub
mov
nop
mov
fildl
jp
mov
movsb
and
cmc
inc
sub
gs
les
dec
icebp
jnp
lea
fs
pop
or
jp
sub
pop
sbb
jbe
pushf
shll
and
pop
push
je
cmp
lds
inc
cltd
into
cmp
push
sub
in
addr16
add
pop
scas
cmp
push
sbb
ja
stos
sbb
and
mov
inc
out
inc
cmp
add
out
push
mov
mov
insb
cli
mov
cmc
mov
cmpsl
aam
testl
adcl
andb
and
in
ret
popa
pop
into
je,pt
jle
je
sbb
shll
xor
imul
xchg
repz
out
xor
mov
dec
int3
mov
cltd
mov
addr16
js
ret
lret
cmp
inc
jmp
xor
rcr
mov
push
sbb
add
push
and
leave
scas
inc
sbb
stc
test
iret
sub
fwait
dec
shrb
int
cs
mov
cmp
adc
sbb
fisttps
movsb
pusha
jg
rol
sbb
js
imul
mov
ret
jle
rcrl
jl
xor
shl
inc
mov
in
xchg
dec
mov
mov
or
or
in
jno
mov
les
xchg
xchg
inc
out
jmp
xchg
cli
jb
or
out
shrl
cmpsl
scas
add
into
cmp
push
stc
in
shlb
test
lret
stc
sbb
aaa
mov
jmp
mov
and
ffreep
pop
and
adc
jle
or
out
nop
jp
mov
js
fs
mov
mov
into
popf
mov
test
stos
mov
lock
mov
sbb
or
imul
out
xchg
or
pop
push
clc
addr16
mov
sbb
and
pop
mov
jne
repnz
sbb
adcl
cmpsl
cmp
jecxz
adc
test
lahf
sbb
adc
push
jbe
mov
or
out
sub
mul
mov
cmc
pop
loop
adc
mov
iret
repnz
leave
andb
das
add
sbbb
ret
scas
push
dec
inc
mov
inc
push
scas
es
push
pop
add
data16
test
test
aad
xlat
pop
inc
in
push
iret
mov
push
push
test
fistpll
inc
stc
outsb
in
sbb
or
int3
or
std
rclb
pop
cltd
mov
jge
rcll
cmpsl
lahf
jbe
xchg
xchg
lock
inc
pop
gs
testb
mov
adc
xor
jecxz
mov
hlt
repz
scas
cmpsb
xor
incb
xchg
fistps
adc
add
adc
in
cwtl
add
xor
inc
jbe
mov
lock
pop
push
imul
aas
push
repnz
mov
mov
push
loop
shlb
dec
imul
adc
mov
dec
mov
stc
or
mov
jnp
jmp
jmp
pop
leave
xor
jbe
xchg
into
ja
std
jp
xchg
bound
lea
stc
pop
das
push
add
and
dec
cmp
inc
stos
out
add
xlat
mov
dec
or
leave
inc
mov
dec
cmovl
dec
movsl
jle
lret
pop
and
lds
aaa
movsl
and
xor
or
lcall
and
push
daa
shlb
xor
nop
xlat
mov
stos
pushf
js
lcall
iret
and
inc
test
andb
ret
sub
inc
mov
pop
movsb
in
dec
in
inc
aas
xor
inc
repz
in
repz
imul
imulb
dec
and
sub
jae
shrb
es
xchg
insl
fildll
cmpsl
imul
jb
xchg
cmpsb
cmpsb
shl
jle
outsb
iret
popl
pop
pop
jne
adc
divb
mov
popa
mov
lods
jl
and
addb
dec
pop
subl
rorb
mov
mov
push
dec
add
aas
push
shrb
cli
jo
adc
leave
xlat
cli
test
das
jmp
dec
jmp
or
mov
push
dec
lcall
lock
mov
jmp
shl
mov
and
or
data16
int3
mov
fwait
jp
lea
shll
cmp
sahf
scas
sahf
pop
lcall
add
rcll
push
into
shlb
ja
inc
fstpt
adc
sbb
roll
rorb
cmpsl
jne
push
int
mov
mov
ds
loop
xor
bound
jge
fcmovbe
fsubp
aad
jl
jmp
lcall
xchg
xor
xchg
mov
leave
sbb
xlat
inc
adc
stc
xor
push
out
ja
mov
lods
push
sarl
loope
adc
mov
dec
cmp
and
ljmp
add
cmp
xchg
fstl
add
xchg
mov
int3
loopne
sbb
call
fimull
daa
scas
je
rcrl
dec
xchg
inc
mov
sti
in
pop
inc
mov
scas
insl
cwtl
lahf
push
insb
call
jmp
scas
inc
in
lret
xor
jmp
lea
stc
or
add
jns
mov
add
push
js
mov
xchg
pusha
into
pop
cmp
jae
into
and
xor
mov
hlt
push
les
imul
xchg
inc
lock
sbb
xchg
cltd
add
insl
iret
cmp
ljmp
mov
stos
clc
mov
rcll
movb
rol
je
push
xchg
clc
xor
xchg
mov
push
in
mov
out
add
ljmp
fcomps
lds
xchg
sbb
stos
les
inc
inc
data16
sub
loopne
jge
push
sub
mull
and
xor
mov
sbb
data16
mov
xchg
fs
or
ret
aam
test
clc
je
lods
les
mov
pusha
push
mov
pop
sbb
shl
sti
stos
stos
dec
xlat
pop
push
jb
repnz
int3
dec
out
mov
ficompl
add
leave
dec
das
jge
mov
es
and
adc
jae
xchg
push
dec
pop
sbb
bound
or
shrl
and
push
test
sub
push
add
inc
call
into
or
pop
test
dec
call
in
mov
bound
add
daa
cs
lock
dec
sub
adc
xchg
jnp
out
jl
loope
xor
lods
inc
test
data16
mov
mov
fsubp
nop
lock
jg
imul
mov
inc
sub
and
or
ds
insb
out
imul
push
cli
sarb
stos
test
imul
les
pusha
and
outsb
cli
neg
mov
int
mov
dec
clc
adc
movsl
pop
and
xchg
call
and
mov
fisubrs
mov
and
sbb
xchg
add
subl
cmpsb
lcall
dec
cmc
aad
and
lods
leave
push
imul
add
jge
mov
or
or
mov
mov
pop
add
and
int3
mov
mov
mov
movsb
sbb
mov
iret
clc
loopne
dec
xchg
loope
scas
int3
inc
pop
fidivrs
xor
imul
in
cmp
jbe
lock
out
sarb
adc
mov
cmp
popf
mov
fwait
sysenter
pushf
scas
arpl
xchg
xchg
mov
push
in
in
fucomi
std
rclb
std
shlb
ror
out
mov
aaa
into
je
xchg
sub
cld
jge
adc
sahf
fsubl
daa
in
scas
leave
icebp
xchg
fs
je
or
adc
cmp
push
stos
outsl
imul
dec
imul
or
xor
mov
jp
fistpll
data16
mov
pop
push
lcall
mov
pop
cltd
sub
jl
rclb
in
test
push
mov
cmp
rorb
stc
fiadds
loop
dec
je
cmp
fiaddl
int3
or
mov
mov
pop
movsl
sub
cmp
jnp
sub
cmp
fwait
jecxz
std
jg
lahf
adc
out
mov
dec
test
adc
popa
mov
es
dec
cmpl
gs
sub
out
mov
mov
stos
xchg
imul
hlt
imul
sbb
pop
and
mov
outsl
xchg
cwtl
outsb
mov
mov
je
cwtl
mov
mov
push
jns
pop
mov
imul
dec
xchg
in
pop
sbb
mov
inc
sub
sub
mov
push
cmp
pushf
fcoms
movsb
pop
pop
sub
jmp
xchg
out
fwait
mov
cld
sbb
add
push
mov
aas
popl
adc
test
push
xchg
mov
or
push
cmp
icebp
in
idivb
jmp
push
mov
movsb
popf
bound
xchg
pop
pop
daa
es
in
ja
mov
xchg
dec
sbb
ja
push
xchg
imul
pushf
out
mov
and
sbb
testl
cmp
sahf
mov
bswap
ret
inc
mov
decb
loopne
loopne
in
pushf
inc
and
or
pop
and
dec
scas
popa
jnp
pop
lods
dec
sahf
shlb
test
lret
test
mov
fmull
lods
arpl
or
in
sub
in
arpl
xor
xchg
cmp
aam
scas
jle
gs
mov
inc
cmp
loopne
jle
loop
sti
sbb
jge
mov
addr16
mov
outsb
sarl
leave
sti
xor
hlt
pop
mov
push
adc
loop
enter
lret
out
add
arpl
nop
and
pop
ss
push
std
mov
fs
shll
cmp
int3
into
or
xchg
loope
and
push
pop
xchg
pop
loop
mov
fisubrl
or
dec
lods
or
or
mov
es
fcmovnbe
stc
xchg
movsb
fldenv
sti
jne
adc
push
sub
in
or
ljmp
mov
mov
faddl
inc
inc
cmc
dec
xchg
ret
push
pop
subb
rcll
outsl
inc
pushf
hlt
push
lahf
lcall
pop
ss
add
ror
sbb
cwtl
cmp
sub
sahf
sub
subb
push
fdiv
test
test
inc
add
push
repnz
jp
lds
les
clc
xchg
icebp
push
stos
mov
mov
mov
dec
clc
xor
insb
enter
ljmp
out
stc
inc
xor
dec
jnp
cmc
std
xor
or
mov
sbb
mov
lods
pop
adc
mov
pop
inc
test
mov
cmp
rcll
dec
mov
fisubs
cs
mov
push
sbb
adc
popf
shrb
scas
icebp
pop
push
cmpsl
pop
jge
outsl
add
data16
sub
loope
sbb
mov
adc
into
shll
fadd
aaa
pop
repnz
fwait
int
mov
mov
pop
aad
sahf
aas
fbstp
adc
int3
inc
jecxz
lcall
pop
pop
pop
in
xchg
jo
adc
or
std
out
adc
mov
mov
int
cmp
aad
hlt
leave
jmp
pusha
js
test
mov
les
ret
xchg
push
cmp
dec
mov
testb
pop
push
cmpps
or
fsubrs
leave
push
xor
stos
pop
xchg
pop
dec
fisubrs
and
gs
sbb
cmp
mov
push
pop
jp
mov
ror
xchg
push
stos
pop
push
mov
ds
andb
rsm
jmp
imul
xchg
pop
mov
test
mov
or
icebp
mov
cmp
pusha
enter
cmp
mov
aam
stc
mov
push
mov
into
clc
xor
insl
je
mov
mov
rclb
fwait
mov
dec
fsubl
shld
mov
icebp
jg
mov
out
pop
inc
mov
lods
mov
cltd
pop
sub
lcall
or
das
and
cwtd
test
aam
xor
sub
imul
xor
mov
mov
in
out
call
gs
mov
push
and
sbb
div
test
xchg
xor
jecxz
in
mov
scas
call
mov
insl
testb
movsl
pop
jl
jns
enter
shl
mov
cmp
loopne
les
mov
mov
movsb
pop
mov
jno
xchg
ljmp
inc
or
fmuls
mov
movsl
test
adc
adc
pop
sarl
push
cmp
sub
in
loope
fnstsw
daa
sbb
ret
out
arpl
les
fs
sbb
jmp
mov
in
push
in
fisubl
cmp
lcall
mov
aam
mov
add
stos
push
mov
int
jecxz
or
int3
sti
and
cmp
push
pop
xchg
jb
push
test
xor
push
dec
jp
fidivl
cmp
pop
lahf
jmp
or
xor
clc
xchg
mov
xchg
popf
mov
hlt
mov
add
adc
loope
pusha
dec
adc
sub
bound
adc
adc
and
sbb
mov
int
jmp
pop
jmp
scas
rclb
push
scas
in
sbb
rcll
jecxz
mov
ficoml
sbb
and
test
cmpsb
repz
cmp
and
and
add
fs
cwtl
push
pop
and
cwtl
into
and
lds
jbe,pt
adc
outsb
and
jns
dec
push
orb
or
dec
lea
js
hlt
outsl
mov
sbbb
mov
out
cmc
add
imulb
shlb
pop
mov
out
push
inc
or
je
js
inc
jecxz
stos
pop
sbb
jmp
mov
insl
and
repz
xchg
mov
inc
daa
push
jmp
and
in
cmp
mov
cltd
sti
jno
mov
jo
xchg
push
push
fs
xor
pop
adc
inc
pop
xlat
enter
out
stos
cli
sbb
dec
dec
push
or
dec
adc
lods
sti
stc
orl
dec
iret
leave
push
mov
lods
mov
push
out
xchg
gs
xor
mov
insb
cmc
ret
daa
mov
clc
cs
sub
test
push
fwait
or
mov
movsb
cwtl
bound
inc
scas
add
mov
mov
push
mov
jge
push
sbb
and
cmpsl
cmp
mov
cmc
insl
xchg
jbe
shlb
imul
add
fldt
lcall
push
imul
add
fs
xor
lock
mov
bound
push
push
or
xlat
out
ja
mov
mov
divl
scas
outsl
aaa
stos
jns
test
arpl
aam
add
xchg
repz
out
xor
cmp
test
add
nop
fucomip
out
dec
jbe
dec
adc
sbb
sub
test
or
xor
cld
shlb
or
pop
mov
lret
inc
rorl
push
add
xor
dec
add
push
push
mulb
cmpsl
loope
loop
mov
ds
and
xor
xchg
out
shl
out
aas
xchg
int3
imul
jbe
in
cs
sbb
xor
adc
add
out
nop
call
leave
inc
adc
add
or
les
rcll
push
and
inc
jb
loope
setl
leave
lahf
loop
sbb
jmp
or
test
cmc
mov
shll
add
scas
mov
jmp
ljmp
fisubs
add
lahf
test
mov
fistpll
es
call
or
insl
and
sbb
jge
inc
sbb
repz
xchg
or
fsubrs
out
mov
stos
dec
aas
test
daa
push
scas
aam
les
cwtl
jg
push
sub
sbb
rclb
les
sahf
rcrb
lds
testb
sbb
push
dec
or
inc
movsl
adc
mov
push
outsb
cmpsl
js
pusha
ret
sbb
xchg
xchg
push
jne
adc
sub
les
xor
dec
jg
sti
lret
icebp
ror
repnz
xor
ds
lods
imul
andl
test
outsb
adc
jne
sub
mov
or
mov
jns
add
mov
aaa
push
test
mov
repz
add
pop
mov
nop
xchg
xor
dec
mov
add
mov
stos
addr16
sbb
sbb
inc
nop
cmp
dec
les
lds
mov
ds
jnp
jg
pushf
faddp
mov
inc
adc
add
jmp
mov
jp
sbb
aad
add
out
movsb
mov
or
int
sarl
and
mov
popa
hlt
neg
lock
pushf
pop
push
xchg
negb
sub
incb
insb
fwait
push
add
sbb
mov
dec
imul
dec
mov
push
imul
mull
insl
aaa
test
cmp
mov
insl
data16
ficompl
test
sahf
aam
and
movb
dec
adcl
cltd
add
fimull
inc
imul
sub
mov
inc
inc
jnp
inc
pop
insl
push
or
loope
into
push
lods
dec
ss
mov
popf
xchg
adc
add
pop
jns
imul
fidivs
add
mov
cltd
ja
call
ljmp
mov
pop
testb
daa
push
mov
sbb
fsubrl
sub
jmp
xchg
mov
sub
push
scas
mov
sti
dec
dec
mov
aad
sbb
aad
sbb
dec
add
in
adc
adc
repnz
popf
insb
and
inc
push
jbe
divl
arpl
mov
adc
mov
mov
xor
shll
cld
push
sarb
mov
jle
in
mov
push
stos
push
jge
jl
and
xchg
xorl
xlat
pusha
mov
cmpsl
add
jmp
xor
out
jae
inc
mov
jns
or
mov
jb
xchg
orl
push
xor
adc
sbb
adc
xor
imul
cmp
sub
enter
inc
xor
mov
mov
jo
shll
pushf
inc
mov
jecxz
xchg
aaa
mov
leave
cltd
stc
inc
cwtl
mov
call
inc
cmp
mov
inc
xchg
inc
jmp
fwait
ret
imul
fwait
ret
mov
pop
push
roll
lret
outsl
cmpsl
lret
dec
mov
out
insb
jmp
into
xchg
scas
adc
sub
mov
sti
mov
cmp
push
push
rcl
dec
xchg
shr
adc
jp
in
jmp
pop
jns
mov
or
pop
pop
addr16
ret
jne
sub
mov
add
dec
pop
pushf
pushf
mov
std
jmp
xor
test
les
sbb
push
popa
imul
movsl
pop
mov
int
and
mov
push
std
dec
adc
mov
jmp
pop
inc
dec
fisubrl
sbb
xor
ret
cltd
sti
pushf
xorl
cwtl
mov
pop
fs
imul
xchg
mov
icebp
pop
pusha
sub
sub
inc
sbbl
push
fwait
sbb
mov
add
gs
jmp
adc
mov
sahf
jecxz
test
bound
out
loope
out
mov
cmp
scas
mov
mov
wbinvd
bound
cwtl
and
lock
int3
lods
push
or
cltd
jnp
outsb
and
imul
dec
xor
stos
xchg
mov
and
cmp
out
cltd
adc
inc
clc
adc
cmc
pushf
mov
add
adcb
sbbl
mov
mov
pop
adc
icebp
jg
push
fstps
cmp
cmpsb
or
jecxz
inc
ret
outsl
push
mov
jmp
stos
dec
sub
arpl
pop
xor
ja
jb
pop
push
ret
in
xchg
testl
outsb
sbb
sub
xchg
test
addr16
das
jns
jl
out
mov
out
pop
jae
mov
jbe
vmovsd
mov
dec
loopne
or
push
sub
jecxz
test
mov
sbb
int3
inc
rcrl
lret
add
loop
xchg
pusha
sarb
sbb
imul
add
in
sbb
jno
mov
xor
imulb
or
in
je
aad
mov
mov
lea
movsl
insb
cmpsl
leave
xchg
mov
jnp
add
add
pop
adc
movsb
mov
out
shrl
jmp
xor
pop
inc
movsb
dec
add
out
push
xlat
lret
mov
mov
icebp
imul
sbb
mov
jbe
and
in
inc
jb
js
mov
and
icebp
shrl
sub
jo
sub
sahf
pop
jg
mov
mov
xor
out
mov
jmp
lret
sub
lock
cli
inc
call
ss
adc
push
mov
jae
fisubl
shlb
mov
xchg
lret
mov
js
add
aaa
dec
cmc
sahf
les
scas
js
loope
or
pop
sbb
aad
dec
mov
notl
movsl
fwait
push
pusha
jg
or
js
jg
mov
xor
sub
ja
inc
mov
mov
loopne
jne
in
je
sub
dec
mov
fwait
xor
mov
inc
push
cmp
pop
mov
mov
in
dec
pusha
pusha
push
dec
adc
sub
jle
xchg
mov
mov
je
sbb
mov
push
out
mov
mov
push
in
lret
movb
push
xor
cs
dec
push
cmc
incb
jo
insl
es
dec
pop
dec
popf
lods
push
fdivs
mov
sahf
sub
je
je
pop
push
push
mov
outsb
mov
mov
mov
inc
mov
inc
sub
scas
xchg
aaa
push
iret
push
roll
flds
pop
xchg
hlt
xor
sub
iret
push
mov
es
sub
mov
mov
mov
add
mov
sub
xor
jne
mov
and
pop
dec
sbb
and
in
lret
and
les
daa
inc
cli
aad
mov
ljmp
and
add
lea
fdivrs
jns
and
lahf
add
jecxz
scas
clc
hlt
aaa
mov
sarb
sbb
sbb
ds
ljmp
ror
mov
adc
push
sbb
leave
call
add
test
sbb
sbbl
jo
mov
call
mov
lcall
pop
sbb
ss
icebp
cmp
mov
inc
in
mov
mov
jmp
jno
xorb
sub
shll
push
insl
aad
push
aad
adc
pop
dec
aad
and
ja
jl
mov
and
lret
outsb
or
scas
add
fisttps
outsl
push
and
int
jbe
shr
inc
imul
xchg
xor
jb
fildll
lods
and
sarb
and
shr
js
jmp
adc
dec
hlt
jmp
sub
ret
cmc
sub
jnp
cmc
inc
in
lods
fwait
mov
cmc
repnz
xor
lea
loopne
xchg
mov
xchg
ljmp
je
test
repz
sub
inc
lods
sbb
push
xchg
out
xor
inc
stos
push
cwtl
shl
cld
cmp
jl
out
or
adc
rcrl
lock
fldenv
test
mov
pusha
adc
jl
aas
jo
int3
push
popf
xchg
ficompl
jmp
mov
xchg
mul
mov
sbb
cmp
xchg
mov
daa
cmpsb
push
mov
or
cwtl
adc
inc
lods
hlt
mov
mov
out
or
enter
ds
div
jae
or
bound
and
push
or
pop
rol
add
ljmp
adc
jns
or
loope
in
or
push
jno
mov
dec
call
and
xchg
cmpsb
roll
cmp
mov
cs
or
xor
adc
mov
int3
jnp
mov
xor
fildl
int3
add
arpl
cmp
in
popf
inc
ja
sbb
push
mov
sbb
stos
dec
or
adc
and
insl
loope
outsb
jp
push
pop
lcall
and
test
inc
scas
mov
mov
stos
sbb
clc
fstp
ror
in
movsb
mov
ljmp
out
mov
les
mov
mov
or
jae
jns
into
inc
andb
scas
scas
add
shll
or
sbb
rolb
cli
mov
cli
icebp
addr16
fwait
je
xchg
int
push
shlb
jne
fisubs
cld
jmp
cmc
sbb
lret
pop
xchg
inc
inc
stos
jns
lahf
out
push
kmovb
fwait
nop
xor
and
cmp
sbbl
clc
pop
loopne
fcomp
jne
or
cwtl
add
lret
xchg
push
mov
enter
sbb
stc
push
icebp
xlat
adc
std
adc
sub
cli
push
in
xchg
push
pop
popf
into
jg
sbb
dec
addr16
movsl
mov
test
sbb
orl
mov
add
sti
dec
push
adc
fldcw
cmp
push
cld
cmp
insl
push
and
roll
hlt
pushf
mov
les
imul
cli
sbb
jge
fwait
mov
nop
popa
sub
inc
filds
gs
push
std
shrb
cltd
sub
nop
lea
push
adc
lcall
repz
jecxz
js
movq
mov
jp
into
daa
mov
je
and
leave
or
ret
inc
mov
cwtl
repnz
add
mov
sarb
push
xor
in
or
or
loopne
mov
adc
cwtl
sub
dec
sahf
lods
dec
pop
jle
sub
pop
add
loope
push
cmp
mov
cmp
xor
test
mov
aaa
cmc
push
cld
les
add
dec
adc
dec
rorb
pop
icebp
cmp
cmp
jge
add
cmp
imul
nop
mov
mov
repnz
mov
or
push
cmc
pop
aad
pop
and
mov
gs
jno
ss
pop
int3
ja
shrb
and
dec
mov
cwtl
sahf
jmp
mov
and
cmc
inc
jl
shr
add
inc
jo
xlat
adc
test
sti
push
and
jbe
shrb
sub
sub
push
cmp
roll
ljmp
fistps
ja
jns
and
fwait
sub
repnz
addr16
cmc
adc
test
mov
cmp
lods
or
rcr
cmpsb
and
pop
pop
dec
or
and
pop
jb
sub
sub
dec
pop
out
test
push
repnz
sbb
sub
mov
jmp
add
sub
dec
je
fcomi
fwait
mov
imul
push
or
out
out
dec
mov
dec
and
push
inc
hlt
adc
and
add
jmp
imul
dec
jb
es
mov
lret
jmp
mov
mov
scas
push
xor
lret
bound
cmc
divb
fiadds
push
mov
push
and
xchg
mov
into
push
fcoml
in
xchg
sbb
cmp
mov
xchg
and
aam
cld
std
pop
sbb
jl
loope
pop
lods
icebp
xchg
xchg
pop
les
sahf
add
push
inc
jo
inc
imulb
push
xor
ret
push
xor
inc
fsts
aas
mov
cmpsl
clc
xchg
ds
sbb
mov
and
jle
push
mov
aad
out
sub
adcl
ret
out
fnstenv
cmpsl
mov
insl
stos
fldt
dec
hlt
out
add
xchg
mov
cmpb
cmpl
mov
jle
jle
adc
jne
outsb
mov
pop
outsb
cs
iret
mov
adc
inc
mov
stc
adc
dec
imul
mov
adc
xchg
jmp
dec
inc
jp
push
mov
fmull
xchg
mov
and
stos
add
sub
add
popf
push
fwait
inc
mov
enter
fidivrl
inc
addr16
inc
outsl
mov
mov
xchg
fbld
jle
inc
cmpsb
pop
jmp
adc
popf
lret
dec
and
jo
dec
cmpsl
mov
cwtl
cwtl
xchg
fs
push
mov
add
cmpsl
int3
jl
fs
or
leave
xchg
scas
out
add
mov
lea
mov
mov
sub
pop
test
je
sbb
mov
std
cmpsb
push
push
add
cwtl
cmc
mov
inc
sbb
std
hlt
inc
in
testb
sub
rcrl
lret
scas
dec
lods
into
dec
and
inc
outsb
mov
mov
and
mull
xor
fs
mov
push
fmull
stos
jnp
lds
xor
test
mov
ret
jns
pop
fs
inc
push
mov
pop
sub
out
subb
sub
xor
mov
fnsave
notb
cmp
add
flds
xlat
es
adc
xor
repz
aaa
enter
push
mov
add
pop
mov
out
inc
incl
mov
push
shr
sub
jge
cld
mov
popa
and
movb
mov
jb
sbb
mov
outsb
not
mov
sub
mov
jl
stos
inc
aam
and
enter
nop
and
jg
push
mov
push
fstpl
outsb
inc
fstpl
jle
add
push
test
inc
jle
or
or
sub
sbb
dec
sti
shl
sbb
fcomps
mov
fcmovne
add
addr16
push
jmp
and
insl
xor
loope
sbbb
xor
movsl
mov
hlt
pop
sub
jle
sbb
inc
lock
and
ret
pushf
mov
inc
scas
push
xchg
test
xor
inc
mov
je
fcomps
mov
and
or
cmpsb
adc
clc
xchg
fistl
fxch
mov
scas
call
popf
jmp
movd
lret
jg
push
in
sarb
fs
shrl
outsb
adc
fwait
out
lock
ret
inc
stos
imulb
sub
aad
inc
or
jle
jne
adc
adc
pop
leave
lret
and
nop
sub
test
lret
aam
xchg
ret
cmpsb
xor
outsl
ret
das
jg
xor
pop
popa
pop
push
into
test
mov
mov
stos
lds
jns
shr
or
in
jbe
dec
sbb
sarb
sti
lret
xchg
ret
lods
fdivl
mov
mov
push
sub
pop
ret
lods
cwtl
fisttpl
shlb
add
dec
jbe
int
icebp
xchg
loope
jge
fwait
xor
jb
fwait
cmpsb
mov
push
push
jo
ss
jnp
fcmovb
lcall
cmc
xor
push
popa
loopne
lret
mov
xchg
shl
fs
pop
mov
lret
jo
ds
push
rclb
sbb
jns
rcl
or
mov
gs
mov
mov
mov
dec
in
jmp
adcl
push
xor
xor
push
fbld
stos
pop
in
jnp
daa
adc
pusha
sub
sub
sbb
minps
dec
clc
scas
out
aad
or
popf
and
jp
pop
add
test
ljmp
cwtl
sbb
and
jmp
lcall
lret
mov
aaa
mov
adc
sti
xor
xchg
sbbl
cld
rol
popf
xchg
sub
mov
loope
mov
or
hlt
incb
cwtl
sub
jecxz
pop
daa
adc
mov
pushf
data16
sbb
loop
inc
xchg
pop
lock
scas
sbb
mov
ret
leave
mov
fisubs
cld
int3
or
dec
in
xor
push
sbb
cmpsb
fwait
add
ds
jne
jge
cmp
hlt
mov
nop
lcall
in
pop
jne
xor
mov
jmp
mov
aam
mov
xchg
nop
xor
inc
inc
cmp
inc
sahf
lock
xor
imul
cmpb
xor
aas
adcb
aaa
arpl
or
add
test
sub
jo
push
adc
dec
pusha
das
cltd
mov
adc
push
sti
mov
leave
push
jecxz
or
ss
xlat
push
mov
mov
push
xor
dec
push
ficomps
daa
lock
dec
out
cmovbe
hlt
in
sub
das
icebp
nop
jno
imul
aad
xchg
jbe
push
xchg
in
jg
pop
xchg
aas
add
cltd
xchg
xchg
mov
mov
add
out
push
push
popf
call
mov
loopne
cmc
dec
ja
cmp
fidivl
loopne
jp
cmp
cmc
xor
rol
int
std
mov
std
pop
in
and
daa
jg
int3
add
cmpsb
or
fnstsw
dec
out
mov
jmp
mov
movsl
pop
vmovd
push
dec
pop
xchg
cmc
xor
xchg
mov
xor
ffree
faddl
movsl
jne
je
xorb
push
hlt
adc
out
fdivs
fisttps
idivl
scas
scas
xor
adc
cwtl
aad
mov
test
jno
and
inc
imul
push
jmp
aad
jmp
sub
inc
cli
xchg
js
push
push
adc
lcall
sbb
or
data16
push
pop
xor
rcl
adcl
jmp
test
test
in
jb
dec
inc
dec
sub
aas
dec
jno
scas
ret
push
ror
adc
scas
sbb
xor
test
aaa
lods
add
and
mov
mov
cs
pop
cmpsb
mov
inc
push
adc
mov
dec
xchg
and
out
stos
filds
ds
cwtl
inc
mov
mov
pop
jmp
das
adc
and
lea
xlat
sub
into
scas
mov
or
cmc
jp
dec
bound
mov
fwait
jne
cmp
mov
xchg
sbb
sub
mov
lods
xchg
cli
cmp
out
jno
mov
negb
scas
xor
out
es
jne
dec
jae,pn
mov
jb
hlt
xor
inc
inc
lds
lahf
mov
shrb
imul
clc
shlb
adc
das
jge
bswap
xor
sub
enter
jb
add
mov
in
dec
xchg
and
sub
xor
xchg
in
rol
and
jp
push
jbe
lock
adcl
mov
inc
or
jnp
add
cmp
stc
inc
jge
mov
test
dec
jno
xor
je
mov
outsb
call
jg
aas
lcall
out
xor
mov
rolb
mov
xorl
add
rcl
inc
lahf
aas
in
dec
lock
adc
cs
adc
mov
xchg
cld
outsb
cli
data16
lock
sbb
xor
xlat
mov
pop
sbbl
arpl
nop
and
mov
mov
jl
mov
mov
cwtl
in
add
dec
mov
adc
xchg
pop
imul
dec
shr
sub
mov
mov
mov
adc
xor
push
out
scas
mov
fs
mov
adc
xchg
orb
xchg
and
lret
sarb
mov
je
adc
mov
outsb
adc
add
add
das
scas
ja
hlt
mov
enter
pop
or
cwtl
es
push
lock
lds
or
push
ja
jo
jecxz
sub
inc
xor
xor
inc
pop
cmp
pop
cld
popa
cltd
fildll
bndstx
xchg
in
pop
sbb
push
or
dec
fcmovbe
fiaddl
hlt
insb
pushf
dec
or
fdivs
jmp
mov
xor
pop
xchg
add
in
mov
std
fldt
mov
out
mov
jecxz
and
cmpsb
dec
mov
icebp
xorb
icebp
sbb
das
loopne
push
je
les
sbb
push
mov
iret
icebp
pop
ja
bound
mov
dec
imul
ja
movsl
xorb
dec
push
jno
in
push
push
mov
movb
or
out
or
loopne
pop
jmp
sti
sbb
xor
jge
jnp
adc
mov
stos
or
push
jge
sbb
xchg
xor
iret
adc
push
and
int3
aaa
mov
or
jmp
push
int
inc
lea
mov
pop
mov
cmp
out
out
les
xor
xor
lret
nop
sbb
sub
mov
xchg
js
popf
shll
sbb
push
xchg
scas
ss
xchg
push
cmp
lock
insb
cmp
jecxz
cwtl
or
sbb
push
nop
js
loopne
adc
or
push
cmc
add
cmp
and
mov
data16
mov
pop
jbe
jbe
in
mov
push
popa
dec
scas
pop
lret
inc
ja
sbb
cmp
push
sahf
aas
je
xchg
lds
es
mov
mov
arpl
mov
int3
dec
ja
fimuls
add
ret
push
mov
cs
dec
inc
aas
push
add
inc
and
adc
stos
inc
jge
mov
mov
and
icebp
lcall
pop
out
and
sub
jle
jnp
mov
push
or
xchg
div
cmp
lcall
sbb
mov
jmp
dec
pop
xor
sbb
jnp
sbb
jmp
jge
aaa
inc
mov
cmp
outsl
insb
and
in
enter
jl
sarl
pushf
std
sub
push
push
xchg
insb
call
xchg
bound
out
push
mov
xchg
ret
and
mov
ljmp
rep
push
stos
aaa
int
std
mov
sub
dec
add
cmp
sub
jg
les
xor
loopne
and
or
xchg
pop
filds
jmp
and
orl
sbb
lods
and
imul
loop
or
pop
popf
inc
lea
sbb
enter
mov
aad
out
mov
movsb
out
cwtl
lods
push
clc
mov
shlb
xchg
inc
test
dec
fbld
adc
pop
cmpsl
jo
xor
in
bound
in
sub
daa
push
add
mov
fmull
out
jno
xor
pop
repnz
mov
sub
mov
insl
cmp
pop
jne
adc
aas
mov
adc
pop
push
mov
lret
test
gs
cmp
dec
dec
and
xchg
cltd
jecxz
inc
push
cmc
mov
pop
jo
pop
fldenv
adcl
jp
inc
pop
cmc
push
push
icebp
adcl
sub
mov
ficoms
push
xchg
add
lea
jle
add
mov
jmp
jg
divb
xchg
jmp
lods
iret
push
sbbl
mov
mov
xchg
fstpl
dec
jb
pop
sahf
fadds
sub
mov
sub
push
pop
and
rcrb
data16
cmp
xchg
dec
xor
push
andb
andb
insl
jnp
cwtl
or
icebp
xchg
cmp
test
fstpl
cwtl
dec
mov
testl
add
pop
dec
or
daa
jmp
add
addr16
push
inc
inc
adc
inc
in
in
and
sbb
or
cmp
cmp
add
enter
mov
jo
pop
cld
mov
dec
add
or
je
sahf
gs
cld
outsb
inc
imul
mov
ds
add
inc
sub
in
xor
lea
push
les
xor
mov
ds
pop
inc
or
jae
and
sub
mul
xchg
pop
xchg
aam
scas
xchg
dec
mov
cmp
in
xchg
nop
rcr
push
and
inc
and
xor
xor
mov
dec
mov
out
aad
imul
jo
fildll
test
push
inc
lret
jl
adc
call
sbb
fadds
out
mov
scas
clc
movsl
cmp
in
lock
gs
inc
mov
and
cmp
xchg
mov
xchg
inc
ds
xor
sub
test
insl
cmp
lret
pop
cmpsb
sub
aam
test
xor
imul
cmp
imul
mov
inc
sub
cs
out
popa
stos
add
mov
lods
in
aam
ret
in
sub
int
jbe
ficoml
mov
daa
imul
aam
xchg
outsb
cmp
enter
scas
jl
sbb
xchg
jp
ret
xor
mov
cmp
dec
out
les
iret
adc
pop
sti
push
xor
cmpsb
mov
add
imul
aaa
mov
orb
jns
mov
pop
pop
call
inc
lods
out
shrl
pop
adc
das
xchg
adc
loope
idiv
repz
pop
or
and
dec
mov
je
add
lret
sahf
pop
lret
pop
bound
movb
sub
mov
cmp
inc
mov
and
adc
sub
sbb
or
adc
cmc
ss
jge
pusha
icebp
out
test
push
fldt
xor
repz
aaa
mov
jbe
cmp
rcrl
fs
fmul
pop
jp
roll
imul
mov
sbb
xor
test
inc
pop
bound
cli
inc
lret
jge
cli
lods
lods
fstpt
xchg
jb
jno
imul
jge
repnz
inc
jb
and
pop
xchg
ja
das
popa
xor
popa
mov
outsl
aad
mov
dec
repnz
and
mov
lcall
jecxz
mov
jno
push
dec
push
sbb
aam
mov
call
cmp
pop
ja
std
ret
inc
lods
or
cli
sbb
push
loope
jp
inc
or
xlat
add
pop
outsl
mov
andb
or
and
push
adc
dec
mov
pop
outsb
lods
inc
loopne
push
or
mov
rep
adc
lods
and
mov
and
adc
mov
and
jl
adc
rep
adc
sbb
mov
insb
push
pushf
jb
test
jo
adc
push
cmp
xchg
mov
in
mov
lods
lahf
dec
out
add
mov
loop
fistpl
out
mov
aam
inc
aaa
mov
mov
mov
sbb
addr16
stc
incb
cmp
cltd
and
psraw
lock
sub
test
in
idivl
cmp
xchg
mov
rcrb
decb
pushf
rcll
xor
pop
js
je
mov
mov
dec
nop
into
xchg
jle
pop
cs
shlb
cs
fwait
adc
aas
pop
enter
push
fwait
fwait
xchg
aas
nop
mov
data16
sbb
push
hlt
or
xchg
mov
sub
sahf
pop
scas
mov
jecxz
push
rcrl
shrb
mov
or
push
xchg
ds
push
out
push
andl
pop
imul
gs
jl
and
cmp
sub
jl
negb
inc
sbb
and
pop
jnp,pt
imul
lret
int
ret
lret
jge
sahf
mov
mov
adc
mov
xchg
test
clc
aad
or
jecxz
test
in
adcl
testb
in
mov
lock
icebp
pop
jmp
mov
ret
in
lret
test
sub
xor
dec
loope
dec
orb
ret
enter
in
xlat
pop
mov
inc
jb
push
adc
jl
pop
mov
ret
insb
test
xor
add
js
hlt
call
stc
xchg
cli
popa
pop
aas
test
ret
daa
lcall
add
mov
push
aaa
in
mov
jecxz
jg
scas
in
sahf
pusha
sbb
push
nop
xlat
ljmp
xchg
sub
push
call
aad
daa
call
icebp
jmp
inc
or
pop
int3
mov
xor
lret
sbb
mov
sub
adc
aas
shrb
push
inc
dec
xor
xchg
jp
out
cld
out
popf
jp
mov
repz
imul
xor
ret
cmc
rcrl
pop
in
inc
imul
in
cld
mov
loopne
mov
loope
in
ljmp
or
scas
lahf
movsb
push
stos
sbb
and
cmc
fsubrs
nop
mov
divps
ja
inc
ficompl
mov
cmpsl
pop
inc
shrl
fwait
stc
and
je
mov
mov
je
adc
inc
aad
out
dec
adc
or
cli
aaa
sub
fdivl
dec
cmp
sbb
ja
lods
adc
push
lret
add
pushf
ret
imull
ljmp
test
mov
cs
mov
jle
mov
cmc
jmp
xor
lods
sub
jns
dec
sub
lods
loope
cmpl
adc
jle
jecxz
mov
inc
mov
xorl
push
xchg
and
jg
sbb
xchg
mov
dec
ret
ljmp
pop
add
push
adc
fldenv
sarb
stc
xor
xchg
mov
neg
popf
popa
std
inc
push
push
lods
xchg
pop
pop
xlat
sub
push
dec
adc
mov
adc
sbb
scas
jns
test
loopne
mov
in
cmp
ss
ja
jb
jae
mov
jne
and
mov
pop
std
imul
and
test
add
inc
lcall
imul
xor
mov
outsl
in
push
or
adc
mov
and
inc
imul
mov
clc
or
mov
inc
adc
inc
xchg
lods
add
cmp
data16
shrb
push
sub
mov
dec
out
ja
ficoml
mov
xchg
scas
paddsb
inc
cmpsb
lahf
inc
cmp
mov
cmp
cltd
cltd
xor
subb
mov
cmp
fwait
cli
lahf
imul
shrl
cwtl
and
sub
out
jl
cmp
mov
pop
out
jmp
loopne
fdivs
adc
andb
in
jecxz
push
jns
sbb
push
mov
inc
test
movsb
xchg
mov
outsb
dec
and
sub
roll
cmpb
dec
dec
cmpsl
std
push
sub
mov
lods
push
adc
jg
ja
jle
pop
loopne
ficompl
jp
add
adc
ljmp
ds
out
pcmpeqw
ljmp
sub
sbb
rcl
mov
inc
mov
lret
js
jmp
sbbl
stos
mov
in
std
pop
dec
push
in
push
imul
inc
dec
jmp
mov
mov
imul
into
fisttpl
xchg
dec
test
lret
out
movsb
xchg
mov
jmp
dec
rorb
xor
jp
add
dec
pop
or
push
xor
incb
pop
fildll
push
jae
fcoms
cltd
push
shll
in
cmc
bound
sub
and
xchg
movsb
dec
lahf
clc
sub
mov
cltd
mov
aad
xlat
sub
cmc
in
xchg
test
xor
cmp
adc
insb
add
cmp
cmpsb
out
cmp
cmc
push
aam
js
xchg
enter
inc
test
and
rcrl
roll
hlt
dec
sub
rcr
and
out
pop
cmp
lahf
jbe
iret
or
fnstenv
aam
jb
icebp
lahf
xor
add
imul
xchg
xchg
aas
rcrl
rcrb
in
lods
mov
adc
jg
inc
out
inc
enter
xchg
imul
add
popf
lahf
cmp
xor
inc
add
push
or
mov
jmp
pop
das
leave
jne
popa
mov
sahf
lods
addr16
stc
or
addr16
fcompp
test
outsb
lods
adc
imul
stos
xorl
add
dec
dec
int3
ja
in
out
into
or
jo
lods
lcall
popa
push
mov
in
gs
sub
xchg
mov
test
ja
and
lock
push
cmp
in
mov
fimuls
rcr
loop
dec
popf
dec
adcl
jnp
cmc
lea
rcl
lcall
std
push
shrl
adcb
test
lahf
pop
pop
repnz
xchg
out
sbb
or
inc
rcll
sub
push
mov
cwtl
jae
outsb
aaa
lods
add
sub
int3
inc
lahf
imul
lret
mov
or
add
xchg
gs
cmp
mov
push
lds
sub
call
or
and
fstl
fisttps
push
add
add
clc
inc
pop
lcall
cld
movsl
idivb
jecxz
sbb
xchg
sub
test
and
or
jbe
cmc
popf
mov
mov
jbe
in
fwait
or
jmp
divb
lods
or
and
inc
sbb
jno
mov
mov
sub
push
icebp
daa
pop
and
lahf
push
push
lret
fisubl
je
mov
es
sbb
les
frstor
xor
mov
and
inc
push
mov
xlat
pop
fwait
into
pop
into
fimull
jp
xor
or
fsubrs
add
add
xor
adc
daa
mov
xlat
inc
mov
push
movsl
and
loope
aad
addr16
sub
xchg
fnstsw
adc
andl
aas
adc
fsubrl
pop
test
mov
in
sahf
dec
sbb
scas
lods
rcll
je
pop
aas
fldcw
aas
gs
mov
nop
or
popa
cli
xchg
je
push
data16
decl
xchg
pop
xchg
xchg
pop
call
mov
lret
int3
lds
jmp
loope
imulb
scas
mov
or
push
or
loope
arpl
cmp
mov
into
mov
dec
dec
mov
negl
nop
cmpl
rcl
sbb
jne
stos
adc
mov
rcrl
mov
fwait
xchg
out
cmp
mov
inc
ret
jmp
outsl
dec
inc
hlt
push
push
pop
xchg
jns
pop
xchg
scas
mov
scas
push
adc
jmp
mov
das
pop
push
xchg
fsubl
push
sti
fcompl
or
movsb
xchg
decb
int3
xchg
repnz
and
xchg
fucomip
aaa
int3
cli
js
aad
aas
push
aad
test
cmpsl
fidivl
jns
ret
mov
fwait
jp
jmp
and
dec
aad
rolb
cld
mov
lcall
pusha
out
pop
push
xchg
fnsave
mov
cs
or
jbe
sti
ret
fisubrs
inc
loope
and
adc
test
outsb
mov
adc
jle
lock
mov
mov
jae
xchg
pop
jl
push
in
dec
out
xchg
pop
lea
shrl
cmp
mov
hlt
pusha
fisubrl
mov
pop
and
or
dec
sbb
pop
mov
jmp
xchg
and
and
outsl
mov
sub
popa
negb
mov
int3
test
lds
mov
popf
aad
and
outsb
mov
jle
test
test
xchg
mov
divb
add
scas
push
mov
add
mov
aaa
inc
test
lret
arpl
movsl
leave
pop
xchg
push
sub
adc
lcall
loope
ret
mov
in
ljmp
inc
and
in
cwtl
cmc
es
adc
mov
pop
sbb
mov
loope
nop
or
pop
jl
push
cltd
dec
mov
mov
stos
xchg
cltd
das
ds
sbb
notb
outsl
outsb
fwait
inc
pop
loope
into
test
xor
outsl
mov
xlat
test
pop
int
fisubrs
xor
pop
add
jl
ljmp
push
or
popf
andl
leave
pop
sub
cltd
xchg
roll
jbe
xchg
lret
dec
jl
pop
jmp
pop
pushf
mov
iret
sbbl
push
movsb
push
sbb
jmp
sbb
sahf
pop
in
pop
mov
outsl
mov
jo
ret
and
out
dec
pop
xor
or
add
in
lcall
cmp
jle
pusha
fnstenv
arpl
popa
les
xor
shlb
sub
and
adc
mov
lods
xchg
pop
cmp
and
ja
ror
je
xor
adc
mov
sub
mov
push
xchg
rcll
lcall
xchg
mov
orl
cmp
and
lret
pop
scas
mov
ss
adcl
int
xor
pop
jae
sbb
fmuls
int3
cmovbe
out
data16
imul
movsl
inc
je
lock
push
je
mov
lods
add
xor
lds
lock
xor
pop
scas
mov
inc
sbb
clc
popa
cwtl
dec
jg
cmp
add
ljmp
pop
loopne
orb
xchg
mov
outsl
ret
dec
fcmovu
clc
sub
or
inc
loopne
xchg
les
cvtpi2pd
pop
cwtl
pop
xor
inc
pop
fadds
mov
pushf
push
popf
ss
shrb
xlat
xchg
sbb
jl
xor
mov
hlt
mov
divl
adc
jl
sub
xchg
fisubl
cmpsb
mov
push
popa
jle
lret
lret
enter
test
adc
daa
mov
adc
cld
xchg
jbe
aam
test
xor
pop
adc
mov
bnd
fidivrs
movsl
addl
jmp
fisubrl
add
pop
pop
xchg
mov
xchg
jno
pushf
jecxz
stc
cmp
lock
stos
pop
loope
jnp
bound
popa
xor
cmp
nop
sbb
out
cmc
cltd
adc
int3
xor
push
lock
xchg
mov
push
mov
aaa
or
add
adc
outsl
data16
and
lahf
pop
mov
adc
jno
cld
mov
enter
pop
cwtl
inc
push
add
dec
mov
xor
mov
imul
fcomps
pop
push
into
pusha
cmc
mov
pop
inc
push
aas
push
sbb
dec
cmp
lock
xchg
pop
push
xchg
cmp
and
rcll
cmp
sub
jo
icebp
adcb
inc
inc
jns
xchg
or
imul
pop
cwtl
push
cwtl
mov
out
rcrl
cmpsl
mov
xchg
dec
icebp
sub
dec
inc
and
mov
inc
pusha
insb
mov
mov
idivb
or
lcall
dec
insb
divl
pushf
ds
js
cmp
and
adc
mov
fisubs
push
insl
pop
sub
push
add
sbb
adc
and
xchg
outsb
jl
ds
inc
aad
bound
sub
cmpsb
jecxz
jnp
mov
cld
fisttpll
ret
pop
inc
jmp
ljmp
mov
mov
sub
lock
push
adc
bound
add
ret
xchg
aad
sub
mov
mov
cs
mov
mov
fstl
icebp
outsb
pop
mov
hlt
jp
in
mov
adc
in
xor
xor
push
cmc
xchg
fstpl
xchg
imul
mov
push
fidivs
cmpsl
stos
jnp
or
xchg
jb
fs
ja
fnstsw
loope
jl
mov
inc
fdivrp
mov
pop
mov
mov
pop
pop
mov
outsb
das
test
call
mov
push
push
xor
dec
jo
hlt
nop
mov
pop
in
int3
divl
cmp
mov
sarb
mov
push
jbe
insl
push
push
int
sbb
in
icebp
cmp
fs
xor
out
mov
inc
jne
cld
push
adc
adc
xchg
add
mov
inc
test
cmp
inc
mov
jnp
adc
or
xchg
mov
jg
or
lock
xor
nop
cltd
sti
stc
idiv
cmp
mov
in
rcrl
mov
jmp
xchg
daa
test
in
daa
mov
addr16
repnz
out
inc
mov
outsb
pop
sbb
jmp
sub
adc
mov
call
jecxz
bound
adc
pop
and
dec
loopne
ja
loop
ficompl
shll
pop
jae
in
in
mov
jmp
dec
dec
xchg
ljmp
push
shll
subb
mov
jne
pusha
enter
adc
ss
test
xchg
xchg
sbb
out
loop
sti
adc
inc
pusha
stc
inc
sbb
stos
loope
ds
xor
rcrl
dec
jne
sbb
pop
sub
aaa
xor
shrb
xchg
jns
js
lcall
std
push
lock
cmp
fwait
lds
and
sbb
out
jecxz
push
cli
dec
cmp
push
push
xchg
insb
and
and
mov
fldt
ljmp
sub
fnop
mov
pop
dec
mov
mov
cmp
xchg
jae
add
add
add
xor
inc
std
jae
xor
mov
cs
nop
popl
sbb
mov
push
flds
sbb
inc
jb
or
lret
mov
popf
jbe
cmp
test
rcrl
enter
test
push
mov
cmc
rorb
in
lahf
shlb
push
adc
cmc
movsl
clc
mov
stc
enter
push
std
mov
xor
stc
test
push
jmp
imul
cmpsl
xor
and
dec
in
push
adc
ret
xchg
out
pmulhuw
pop
leave
dec
sahf
cmp
mov
aad
jbe
das
push
jp
aas
mov
push
aas
jg
popa
enter
inc
icebp
sahf
inc
idivl
mov
out
adc
xchg
xchg
adc
mov
pop
lea
in
ror
cmpsl
rcrl
mov
mov
add
sub
into
mov
xchg
ljmp
jne
and
xchg
adc
sub
and
push
xchg
jg
push
fwait
and
adc
scas
rorl
xchg
adc
inc
imul
test
pop
cmp
jg
ja
popf
jo
or
push
and
vsqrtss
mov
mov
mov
ret
lds
or
mov
push
loop
lds
sbb
jmp
pop
leave
dec
stos
ja
lods
movsl
pushl
pop
xlat
push
mov
fcoml
test
bound
loop
sbb
fstpt
mov
and
fdivl
cwtl
stc
movsb
stos
dec
jns
sbb
and
bound
clc
ret
and
mov
aam
pop
lods
inc
rcrl
lods
loop
adc
in
push
pop
add
cwtl
and
and
adc
ret
fistpl
rcrb
fidivrl
data16
mov
sbb
movsb
clc
mov
dec
inc
cmp
or
jp
mov
call
adc
inc
pusha
loope
insb
lahf
dec
sub
adc
mov
cltd
pop
sub
sarb
pop
test
push
fidivs
nop
pop
mov
inc
fstp
dec
cli
jmp
xchg
jle
push
inc
mov
fistl
add
adc
jmp
jne
jge
pop
lods
sbb
mov
push
push
push
inc
int3
divl
mov
add
daa
ret
sti
in
mov
mov
out
xchg
cmp
icebp
ss
leave
cwtl
nop
cmp
and
push
mov
scas
dec
inc
out
and
jb
jg
sahf
xchg
sahf
inc
lods
adc
ds
aaa
xor
or
lods
fcoms
dec
pop
mov
sti
xor
jbe
lcall
loopne
inc
and
or
mov
xchg
into
lcall
xlat
push
pop
les
cltd
pop
mov
pop
pop
jg
cmc
add
add
and
xchg
mov
js
outsl
push
adc
sbb
repz
mov
leave
call
mov
in
push
cmpsl
out
incl
xor
mov
push
lods
push
push
clc
adc
inc
andb
mov
and
loopne
sti
xor
outsl
sub
outsl
test
mov
call
pop
loopne
inc
popf
dec
xchg
int3
jo
adc
xchg
sub
mov
jns
inc
lea
mov
cwtl
ret
das
ret
mov
adcl
push
rolb
dec
mov
jg
xchg
call
mov
sub
xchg
aas
sub
or
lret
mov
scas
push
andb
mov
ret
mov
dec
jmp
xchg
fs
aad
outsb
std
fwait
sahf
push
mov
in
sub
lcall
je
jbe
mov
aaa
je
jecxz
sub
es
dec
mov
pop
lret
das
push
push
scas
arpl
sahf
dec
out
xchg
sub
jae
popa
jp
lds
test
gs
lock
fidivl
arpl
movsb
loop
sub
fisubrl
std
jnp
ja
shrl
push
dec
pop
iret
scas
sbb
jno
sbb
xchg
push
push
push
roll
ret
add
sbb
ja
ljmp
jg
sti
or
sbb
loop
fisubl
push
mov
inc
cld
mov
add
mov
dec
mov
and
addr16
sahf
lret
mov
mov
sub
dec
out
pop
notl
push
je
icebp
inc
ret
cmpsl
xor
mov
mov
inc
loopne
adc
lea
or
push
push
mov
lods
call
mov
or
or
pop
mov
cmpsl
mov
adc
lea
dec
dec
gs
mov
mov
mov
jle
push
sahf
push
add
scas
push
xor
aad
rcl
hlt
outsb
inc
lods
shl
fs
push
jno
xor
std
xchg
mov
cltd
mov
lret
arpl
pop
mov
xchg
xchg
jmp
push
adc
adcb
loope
mov
cli
daa
out
pop
fcomps
jnp
jle
bound
cmp
adc
test
js
loope
ljmp
push
pop
or
adc
push
dec
test
nop
mov
das
mov
jns
sti
insb
mov
mov
mov
dec
iretw
fs
mov
or
fimull
in
jae
outsb
clc
fiaddl
shrl
or
cld
fcompl
mov
mov
adc
fistl
imulb
insb
xchg
push
int3
pop
rorl
push
jecxz
mov
jecxz
scas
push
in
sbb
mov
outsb
leave
jno
mov
lock
insl
je
fisttpl
pop
xchg
add
jecxz
fcompl
in
and
loop
jno
mov
call
add
test
test
cmpsl
mul
sbb
cmpsb
popf
and
lcall
lock
lret
jle
xchg
test
rolb
push
sub
mov
lds
addr16
mov
aam
testl
cs
jne
test
mov
lods
shr
inc
xor
jmp
push
sbb
loope
inc
outsl
or
sbb
mov
xor
fbstp
test
mov
cmpb
sbb
cs
stc
shll
jp
or
push
dec
jl
loop
stos
jecxz
mov
std
test
fimull
push
pop
jnp
cmp
lret
mov
mov
rcrl
pop
shrb
stc
cmc
sbb
movsb
sub
jmp
int
jle
pop
mov
jns
imul
inc
pop
push
xor
jns
push
push
iret
push
ja
jb,pt
push
in
pop
cld
jns
push
or
jl
insb
std
out
bound
pushf
aad
jl
pusha
sub
add
or
or
into
xlat
jns
cmp
pop
fnsave
sti
stos
mov
mov
lahf
add
mov
aad
stos
sbb
outsl
jle
dec
ror
ds
mov
pop
cmpsb
and
lret
inc
cs
loope,pt
add
xor
shrb
xchg
jb
imul
sbb
shlb
data16
push
push
fadd
dec
loopne
test
or
sbb
xchg
mov
test
mov
mov
ds
mov
mov
sub
inc
stos
sarb
jb
shrl
mov
cwtl
pop
clc
jecxz
xor
cmp
add
adc
lea
or
lods
xchg
outsb
fisubrl
xchg
mov
jp
or
testb
mov
bound
fs
pop
cmp
sbb
ss
mov
xor
aam
daa
xor
mov
xchg
push
ljmp
mov
or
in
in
aad
lods
push
lds
imul
in
subl
xlat
pop
push
mov
sbb
adc
xchg
add
int3
repnz
xor
ret
xor
movsl
sti
mov
ljmp
stc
inc
push
mov
pop
mov
xchg
enter
xlat
sahf
imul
test
lret
dec
jo
xchg
call
and
jb
jecxz
xchg
xor
shll
int
pop
xchg
adc
mov
pop
dec
add
mov
push
movsl
cmp
sbb
gs
jo
jp
lock
mov
fs
push
mov
pop
adc
lea
dec
push
data16
push
out
insl
xchg
mov
and
pop
push
jb
push
ficoml
fidivl
loopne
pop
mov
add
stc
inc
test
aad
fsubrs
lods
pop
jecxz
jg
sarb
in
ljmp
xchg
adcb
pop
aad
add
adc
mov
ja
js
push
fwait
imul
loopne
adc
sub
in
cmp
jl
pop
mov
sub
inc
shrb
cmp
cmp
pop
stc
inc
jo
ss
push
outsb
call
mov
and
cwtl
mov
rcll
mov
orb
popf
leave
adcl
sbb
mov
loopne
repnz
sbb
inc
wbinvd
pop
inc
lar
cmp
sbb
dec
add
ret
adc
xor
out
mov
mov
addr16
jno
push
sti
out
xor
out
dec
int3
mov
pop
shll
fildl
pop
mov
inc
shlb
mov
stc
lods
xlat
add
int3
cmp
orb
vmwrite
jl
stos
sub
mov
sub
jb
stos
gs
mov
sbb
cvttps2pi
dec
push
mov
pushf
std
bound
stos
push
inc
loope
mov
ds
shlb
pop
ss
push
ss
sbb
pop
sub
popl
enter
ljmp
int3
jle
cmp
push
push
jmp
mov
sub
and
mov
add
push
lahf
add
pop
xchg
daa
fisttpl
ds
sbb
push
lahf
sub
les
sub
repnz
or
xor
push
nop
loope
push
dec
dec
pop
cwtl
xorb
cs
in
push
adc
xlat
idiv
mov
shll
lods
push
lods
jns
inc
shr
out
popa
cmc
and
rorl
or
push
into
test
xchg
ds
outsl
or
sub
mov
fidivl
das
sub
mov
enter
rcll
clc
and
cmp
aad
in
mov
shll
xlat
ret
rcr
cli
mov
push
cmp
in
out
leave
adc
in
xor
movsl
push
mov
pop
pop
dec
push
jmp
nop
cli
loopw
and
jnp
push
xchg
stos
sub
stos
fnstcw
mov
sbb
stos
xor
jb
je
inc
cld
and
aam
mov
sbb
push
sbb
popf
fbld
addr16
push
xchg
gs
mov
cltd
fidivrl
test
add
mov
out
push
cmc
repnz
cli
lahf
rcll
je
fistps
loopne
sub
test
fcomps
adc
pop
test
negl
and
pop
xor
sbb
pop
fldt
mov
in
mov
es
sbb
mov
aas
and
js
loopne
xchg
add
addr16
into
dec
pushf
into
mov
and
mov
sarb
inc
jg
loope
repnz
jl
negl
jo
and
push
ret
and
inc
stos
out
lods
xchg
sub
dec
insl
sbb
or
and
outsl
loopne
mov
sub
in
cmp
xorb
ljmp
dec
pop
testl
mov
in
mov
movsb
push
mov
testb
fistl
pop
push
sub
icebp
insl
adc
and
jg
inc
adc
lret
data16
lds
aaa
add
sbb
in
push
cmpsb
sbb
jne
sub
adc
in
sub
mov
into
std
or
or
adc
cmp
add
mov
pop
sub
push
sub
add
inc
imul
add
cmp
lock
arpl
dec
push
cltd
ret
adc
repnz
lcall
mov
inc
int3
scas
sahf
sub
add
mov
cmp
in
xor
sarb
push
add
jbe
xchg
movsb
xchg
out
mov
xor
jmp
jmp
mov
outsb
mov
test
jecxz
leave
push
mov
pusha
xor
movsb
sub
jns
adc
pop
in
loope
std
inc
jle
jno
nop
push
mov
dec
lock
test
jle
pop
cmpsb
add
dec
dec
int
add
push
push
scas
lea
lret
sub
cmpb
daa
or
sub
cwtl
jnp
inc
jl
outsl
pop
aas
out
pop
xchg
cmc
mov
int
push
or
xor
repnz
loopne
fidivrs
fcomps
mov
mov
mov
gs
clc
sti
sub
sbb
loopne
stos
xchg
cmc
mov
popf
jmp
mov
xor
aaa
sub
fnstsw
test
pop
jge
ja
shrl
mov
jg
std
add
push
aad
mov
out
cmp
icebp
push
and
mov
sub
inc
mov
test
mov
dec
sub
jg
cmc
test
cmp
inc
push
or
dec
dec
sub
jl
dec
gs
dec
popa
mov
mov
repz
insl
jg
mov
pop
fildl
loop
fsubrs
add
cltd
fistpll
push
sub
out
mov
lcall
mov
push
or
out
sar
push
aad
out
popa
mov
jno
dec
loop
mov
into
adc
dec
loop
xor
cli
in
scas
jo
jge
jnp
pop
aam
in
mov
outsb
in
cmp
lret
pushf
jne
pop
mov
call
orps
adc
sbb
jo
push
jmp
jb
into
lret
call
mov
ja
xor
outsb
sub
in
rclb
lock
and
fs
fstps
shl
mov
test
mov
aaa
add
inc
ljmp
and
test
fcoml
arpl
rcl
mov
mov
fsubl
push
mov
loop
lods
lret
mov
pop
mov
idivb
or
jns
adc
clc
lcall
data16
cmp
inc
xorb
add
pop
cmp
adc
jp
xchg
fisubrl
aad
or
call
das
sub
std
decb
pop
jmp
cmpsl
sub
add
nop
add
jns
jp
nop
sarl
test
mov
imul
sbb
ss
inc
push
icebp
fcmovu
aam
sarl
xor
fdivl
push
or
mov
cmp
adc
lds
adc
aad
xchg
sbb
loopne
fmull
das
pop
in
stos
aas
fcoms
fidivs
jp
mov
mov
data16
pop
cmpsb
mov
sub
popa
fldt
push
or
cmp
mov
test
fstpl
movsb
aaa
mov
movsb
pop
imul
addr16
sub
ljmp
mov
iret
lcall
test
lods
xchg
fs
inc
fsts
in
inc
cld
stos
pusha
sbb
bound
mov
daa
cmp
aas
loopne
cmp
sarb
mov
ljmp
rclb
pop
fmul
add
add
mov
testb
into
sub
jecxz
andl
push
inc
cmpsb
pop
decl
and
loopne
mov
test
cli
pop
jg
in
imul
mov
adc
scas
pop
add
lcall
aas
loop
gs
pop
dec
sti
ret
ficoml
hlt
outsb
pop
movsb
sbb
pop
pop
xchg
push
xor
mov
jl
lock
add
inc
lea
mov
adc
xchg
mov
fcoms
enter
jl
push
movsb
cld
jecxz
scas
ret
imul
inc
xlat
pop
bndldx
lcall
add
add
pop
cmc
int3
cmp
push
and
movsb
jno
dec
aam
cld
mov
cmp
imul
xor
icebp
sub
and
xchg
add
ficoml
dec
and
outsl
fiaddl
mov
aad
adc
mov
scas
insb
leave
cmp
loopne
lret
call
ret
iret
adc
inc
xor
pushf
sub
insb
pop
sub
mov
out
push
lahf
std
jmp
out
call
hlt
cmpb
leave
mov
neg
xchg
mov
mov
pop
pop
test
jg
xor
cmp
ficoms
mov
mov
sub
ljmp
fldenv
cmp
sahf
and
loop
xlat
aam
push
jno
sub
sub
push
out
sbb
inc
pop
dec
xchg
cmp
loopne
jle
xchg
jecxz
sub
and
adcl
stc
sub
call
xchg
aaa
push
pop
mov
sbb
ror
out
sub
fdiv
jb
int
or
pop
inc
data16
cmp
ja
repnz
adc
mov
aaa
pop
ds
push
pop
sti
jns
bound
leave
mov
or
pop
mov
lods
bound
xor
cli
out
push
dec
xor
fwait
or
mov
adc
jmp
push
cltd
rclb
clc
inc
ret
push
sarb
xchg
cmpsb
push
xor
outsb
and
arpl
mov
mov
push
mov
and
mov
mov
roll
and
jge
jge
movsb
lret
lcall
mov
sbb
int3
mov
int3
sbb
fbstp
pushf
sbb
or
sub
mov
les
push
push
repnz
es
dec
push
mov
mov
scas
mov
and
sarl
inc
dec
out
fimuls
int3
loopne
jnp
xchg
dec
insl
jae
mov
xorb
mov
sti
das
test
pop
shll
push
push
leave
rcll
xor
inc
add
mov
mov
push
dec
pop
imul
or
mov
cmp
cmp
test
loopne
and
jo
push
inc
mov
dec
iret
or
xchg
dec
call
out
clc
out
daa
les
push
data16
jnp
jmp
cwtl
inc
mov
rorb
mov
imul
inc
xchg
fnstenv
mov
cmp
pop
dec
jmp
xchg
fldenv
cltd
xchg
insl
cmpsb
jnp
pop
mov
mov
adc
inc
add
xor
shlb
lock
sub
cmc
daa
popf
imul
cmpsl
sbb
fildl
out
sub
sahf
and
xchg
jecxz
lods
push
sub
sub
out
cmp
xchg
and
xchg
adc
cmpsl
outsl
sbb
jmp
gs
adc
cmp
call
in
js
or
pop
xchg
cmc
imul
pop
iret
mov
es
dec
sub
sti
pushf
jae
sbb
repz
iret
popf
mov
out
pop
or
dec
in
pop
mov
xchg
movsl
stc
dec
or
and
adc
mov
or
scas
in
cmp
loopne
sub
jcxz
orb
push
adc
mov
lds
pop
jbe
cmp
imul
clc
mov
add
inc
jp
pop
cmp
scas
push
push
sub
mov
movsl
cmpsb
push
fs
je
lahf
int
jecxz
push
fs
repz
test
mov
out
pushf
and
push
ljmp
cmp
lcall
call
mov
xor
sub
pop
andps
jg
mov
insl
cld
jg
mov
mov
cmp
push
mov
push
testl
jmp
jle
push
mov
js
inc
mov
adc
xor
rcl
push
sbb
ja
or
mov
xchg
and
jne
enter
shl
int3
mov
add
pop
mov
movb
addb
imul
adc
xchg
add
mov
push
dec
stc
out
cmp
push
push
test
cwtl
cwtl
cmpsl
mov
xchg
mov
jbe
add
clc
mov
push
loopne
fsubp
add
dec
sti
xlat
mov
test
mov
mov
stc
in
lea
push
push
and
adc
ss
jo
rcl
ret
jl
sub
cltd
roll
fsubrs
xchg
popf
idivb
lods
xlat
inc
es
jl
sub
inc
inc
pop
sub
js
jg
test
out
mov
subb
pop
push
maskmovq
sub
dec
mov
into
negb
imul
scas
sbb
scas
jecxz
cld
inc
aam
mov
cltd
aam
int
sub
sbbl
or
cwtl
mov
int
daa
addr16
test
push
fwait
mov
shl
test
adc
mov
pop
iret
sti
mov
mov
std
popf
xchg
cli
and
movsl
outsb
jb
add
mov
fs
push
mov
xchg
cli
mov
addr16
jae
mov
repz
cmp
inc
sbb
dec
ljmp
push
stc
mov
mov
cli
les
mov
test
pop
xlat
sub
fisttpll
js
cld
ret
push
fimuls
mulb
push
cmp
lahf
cltd
mov
scas
pop
fimuls
or
aaa
mov
xchg
cmp
aad
pop
enter
mov
mov
imul
xor
or
sub
fistl
pop
sbb
and
jp
je
sarb
or
cmp
jle
adc
pop
adc
adcl
add
stc
mov
ret
popa
mov
bound
out
cmp
inc
push
cmpsb
hlt
rclb
and
mov
pushf
inc
and
dec
lea
xchg
jl
jnp
stos
loop
and
pop
popf
push
xlat
leave
mov
in
mov
jno
test
int
cmpsb
or
insb
push
mov
mov
sbb
in
pushf
in
lods
dec
mov
loopne
mov
jg
xchg
lds
or
jae
dec
dec
pushf
inc
je
call
sbb
stos
lahf
sbb
stc
push
or
subb
push
dec
gs
into
cmc
jecxz
mov
fcmovnb
xchg
fstpt
rol
mov
enter
xchg
in
stos
or
xrelease
int
jb
xor
jle
pop
add
lcall
out
andb
inc
dec
add
test
lcall
aaa
push
xlat
ss
pop
sbb
push
movsl
jb
jp
out
jp
mov
sub
lcall
std
inc
lods
adc
jno
inc
addr16
test
sub
add
cmpsb
rolb
mov
dec
ljmp
daa
fbld
shlb
int3
and
pop
xor
xchg
lds
or
pop
rclb
xchg
data16
dec
cmpb
push
jo
dec
fsub
cmpsl
fsub
or
std
nop
and
dec
out
cmp
gs
mov
cmp
mov
dec
sbb
cmp
mov
mov
iret
andl
sahf
fnstcw
out
push
xor
in
jmp
fdiv
pushf
jp
cmpsl
cld
cltd
fwait
add
jmp
into
xchg
mov
movsb
repz
mov
movsl
int3
mov
cmp
out
fs
pusha
rdmsr
out
or
mov
aad
repnz
mov
int
jbe
cld
pushf
or
jne
inc
fwait
adc
dec
ss
mov
mov
xor
cmp
gs
pop
mov
cmc
sbbl
sbb
push
cmpsb
sub
xor
cmp
dec
mov
std
adc
jl
pop
imul
or
test
cmc
loopne
xchg
xor
xchg
dec
push
call
pop
imul
and
xchg
lods
push
cmpl
outsl
mov
adc
xor
out
fistl
dec
inc
mov
xchg
andb
push
sub
xor
in
cwtl
sbb
fsubrs
imul
mov
cmp
int
jmp
sub
adc
xchg
xchg
fwait
cmpsl
sahf
fs
and
lret
fidivrl
mov
mov
xchg
xor
push
out
or
push
adcb
je
enter
shll
inc
test
sbb
xorl
mov
lds
pop
daa
test
sub
or
testl
adc
sbb
lods
jle
sti
jne
mov
sub
mov
lret
fs
ss
or
lahf
inc
fnstenv
cmp
jbe
mov
lea
cmp
stos
lea
cmp
sahf
sub
fwait
dec
into
add
xlat
xor
push
sbb
jge
sbb
mov
or
in
push
mov
pushf
adc
scas
call
xchg
push
pusha
test
lret
jmp
adc
xor
mov
mov
xchg
inc
mov
loopne
xor
shld
jge
lret
push
lret
out
cmp
mov
inc
xchg
push
sbb
shr
xor
dec
insb
lea
push
leave
push
xor
enter
decl
mov
sbb
mov
stos
mov
mov
or
adc
xorb
mov
leave
sub
dec
mov
fcomps
push
stos
lret
and
jecxz
add
je
je
icebp
loopne
rcrl
fldcw
add
das
hlt
pusha
outsl
lahf
out
roll
jae
test
cmp
xor
shl
int
add
xor
imul
fmulp
mov
and
jmp
movsb
lahf
lds
rcrl
mov
dec
or
insb
mov
mov
or
sbb
add
test
or
test
inc
xor
push
sub
xchg
imul
adc
xchg
jl
dec
ret
in
jo
enter
daa
mov
inc
aas
push
adc
popf
cld
pop
mov
and
pop
jnp
adc
adc
or
adc
movsb
fdivrl
inc
adc
cmp
xchg
ja
add
and
test
adc
cli
aad
mov
mov
ret
bound
movsl
mov
mov
mov
cmpsb
gs
in
insb
xchg
pushf
and
mov
or
pusha
xor
or
lds
in
adc
jp
lds
std
cmpsb
aaa
xor
jecxz
jns
lds
dec
mov
call
repnz
mov
mov
jae
inc
aaa
push
mov
bound
push
repz
das
scas
movsb
mov
jnp
dec
scas
and
adc
dec
test
pop
sbb
in
mov
clc
not
inc
sbb
mov
add
cmp
push
daa
out
cmp
add
or
hlt
std
mov
push
cwtl
orb
push
push
cli
addl
push
lahf
dec
xchg
lods
push
loope
pop
lahf
aaa
stc
pop
mov
pop
jl
lahf
xchg
in
notb
sbb
js
adc
in
in
aas
and
jp
cmp
stos
push
imul
cltd
inc
sti
pop
mov
jne
sbb
mov
xchg
pop
mov
shr
adc
mov
int3
push
test
xchg
pop
test
cmpsl
pop
jnp
or
repz
test
pusha
test
and
dec
mov
cmp
xchg
cmp
push
int3
inc
mov
notl
push
hlt
xchg
pop
or
sub
outsb
or
test
mov
inc
loopne
call
push
out
xchg
mov
sub
fucom
nop
mov
clc
push
cs
mov
fs
sub
andl
inc
aas
es
mov
push
subb
aas
and
lea
jbe
fdivr
dec
fstpt
loope
jle
out
xchg
sbb
daa
arpl
xor
jg
fwait
pusha
xor
mov
push
hlt
adc
pop
mov
aad
jp
loopne
imul
in
fildll
sbb
iret
lret
inc
or
shlb
xor
push
push
jle
mov
in
push
cld
in
dec
sbb
dec
cmp
mov
cmp
xor
popa
xchg
add
adc
or
lods
testb
inc
fcom
loop
push
sbb
ds
pop
push
iret
xchg
xor
hlt
sahf
scas
xor
adc
or
popf
sbb
mov
mov
or
mov
mov
adc
fstpt
and
pop
aas
out
in
push
or
fstl
pop
push
xchg
sahf
ret
adc
cmpsb
add
je
subb
and
push
mov
jne
push
or
stos
int3
push
out
test
pusha
or
iret
test
xchg
nop
sbb
xor
incl
jl
mov
mov
hlt
loope
js
and
fdivrs
jle
mov
lcall
add
push
sbbl
cltd
push
mov
fwait
jne
mov
lret
cmpsl
ficoml
js
dec
test
adc
test
mov
mov
mov
movsb
sub
insb
dec
sar
outsl
pop
jne
sbb
add
jmp
in
push
mov
jns
sbb
mov
mov
nop
cmpsb
cwtl
lock
mov
les
jecxz
leave
mov
cmpsl
pushf
jno
dec
push
mov
xor
sbb
sub
lods
in
and
push
jo
rclb
dec
arpl
fcompl
mov
jno,pt
loope
jle
cmp
and
ss
add
lods
sbb
lcall
xchg
cmpsb
adc
outsb
jnp
sub
and
inc
cmp
jno
adc
mov
mov
push
xchg
popf
cmp
push
loope
test
fistpll
push
xchg
repnz
pop
add
inc
mov
mov
mov
shll
out
pushf
pop
loop
movsb
cmpsb
xor
xchg
adc
int3
push
mov
int3
ja
clc
test
and
mov
aaa
aad
push
rolb
or
imul
pushl
jecxz
pop
xor
sbb
sbb
std
shll
loope
fucomp
push
cmpsb
cwtl
jg
mov
jg
add
jp
iret
clc
adc
cmp
je
pop
push
stc
in
mov
clc
ljmp
ds
adc
ret
jns
icebp
and
inc
jge
negl
xchg
mov
and
aam
push
adc
mov
pop
notl
rcr
push
lcall
xchg
sbb
out
mov
xchg
int3
adc
aam
and
inc
sub
stos
cmpsb
inc
rcl
nop
popf
push
es
xor
xor
inc
jb
addr16
jp
sub
mov
jno
mov
fwait
mov
imul
mov
fcomip
sti
pop
call
add
lods
pop
in
cmpsb
testb
out
popf
sbb
add
dec
in
push
inc
stos
das
not
js
xchg
push
int3
or
imul
and
xlat
lahf
xor
mov
lods
cwtl
sub
adc
js
mov
andl
sub
jno
js
or
in
lock
shlb
jbe
jnp
or
addr16
imul
push
movsb
cmp
das
and
push
sti
xchg
xchg
jle
and
or
nop
add
mov
jnp
lret
dec
int
xor
jge
ljmp
inc
jecxz
pop
test
inc
jns
or
and
or
and
jl
das
sbb
add
and
rclb
sub
lock
dec
stos
push
sub
inc
imulb
neg
push
xchg
add
add
movsb
lret
fcomps
and
jl
cmp
mov
lret
ja
jecxz
popf
add
aas
dec
lock
pusha
jmp
mov
nop
stos
pop
stos
int
andb
xor
push
sub
xchg
push
and
fucom
cmp
push
aas
testb
sub
dec
or
mov
loopne
int
nop
adc
dec
fnstsw
aam
cmpps
loopne
mov
pushf
enter
or
dec
cmp
hlt
les
add
mov
mov
js
dec
push
cmpsl
ds
movsb
adc
mov
rcr
mov
repz
lcall
inc
lcall
inc
xchg
add
les
lret
mov
outsl
push
mov
xor
leave
xchg
push
sbb
addl
add
clc
push
fsubl
repz
sbb
or
jbe
stc
fldl
je
jo
out
in
icebp
int3
push
aam
dec
movsb
movsb
mov
jge
xchg
xchg
cmpsb
inc
mov
pushf
mull
icebp
loope
daa
sub
mov
out
xchg
ficoms
hlt
xor
push
mov
cmp
push
add
cwtl
pusha
fdivr
popf
jmp
loop
aaa
sub
cld
enter
xchg
pop
pop
fstpt
loopne
cwtl
adc
pop
ret
nop
lds
call
xchg
rorb
mov
inc
dec
aam
arpl
xor
mov
and
jns
stc
pop
jbe,pt
cmp
addr16
stc
inc
shrb
inc
pop
mov
sbb
xchg
pop
rorb
or
rcr
xchg
jne
jg
xchg
and
aaa
inc
ret
sahf
popf
inc
bnd
scas
push
cltd
xchg
mov
adc
sbb
ror
call
mov
push
fimull
pusha
rorb
movsl
xchg
dec
lods
pusha
inc
fidivrs
in
and
aam
dec
negl
sub
rcr
jne
cmp
lods
mov
add
out
mov
pop
cld
cltd
test
pop
push
xor
repz
xchg
loopne
cmpsl
pop
fwait
clc
out
adc
shll
or
mov
out
mov
mov
add
outsb
mov
movsb
bound
add
mov
ret
repnz
or
lea
sti
repz
imul
popf
or
fs
dec
das
ds
not
in
push
inc
or
add
std
sub
pushf
sub
into
aad
pop
push
jp
xchg
mov
rcrl
in
ret
push
scas
jo
inc
and
pop
inc
jns
ljmp
or
lahf
jne
loopne
fistpl
adc
stc
cli
dec
out
jle
into
rcrb
stos
leave
stos
and
jnp
adc
xor
jge
nop
push
outsl
sbb
xor
jns
sahf
mov
icebp
lret
xor
jg
sub
mov
aas
push
and
ret
xchg
es
fnstcw
adc
std
xchg
test
inc
stos
push
jge
jbe
xor
repnz
jo
dec
inc
mov
add
sub
pop
mov
test
push
pusha
inc
push
jne
pop
and
clc
lret
pop
movsl
aas
lods
fstpt
push
inc
aaa
mov
sub
push
jmp
mov
movsb
pop
pop
sub
jnp
mov
mov
sbb
dec
and
mov
sbb
jbe
mov
outsb
cwtl
dec
stos
lahf
cwtl
pop
fldcw
mov
and
jns
and
scas
pop
fsubp
sahf
inc
test
int3
popf
mov
jo
cmp
mov
or
cld
sbb
lock
or
mov
ret
nop
cmpsl
xor
inc
mov
lods
jne
pushf
int
dec
mov
les
xchg
mov
mov
sub
inc
movsl
add
daa
loope
jp
cmp
aad
scas
add
popl
push
xchg
pusha
push
dec
add
hlt
mov
jae
cmp
mov
arpl
insb
ret
subl
rcrl
mov
sub
lds
std
std
and
cmp
test
dec
mov
xlat
xchg
or
aas
loope
in
sub
add
and
fldl
inc
add
gs
xlat
lret
pop
inc
into
stos
cmp
add
jl
imul
addr16
push
pop
pop
lahf
mov
adc
stos
ja
fbstp
aad
test
push
mov
fdecstp
mov
mov
or
push
out
call
dec
mov
inc
clc
mov
push
inc
and
enter
adc
ja
xchg
push
push
jnp
mov
lahf
sbb
cmpsl
mov
cmpl
test
loop
inc
call
xchg
cmc
scas
mov
push
repnz
add
in
in
or
mov
shrl
sahf
shrl
jle
rclb
adc
lcall
xor
cli
xchg
ficomps
push
stc
xor
jno
pop
in
inc
adc
roll
inc
mov
sbb
js
cmp
cwtl
lods
out
insb
jno
int
imull
in
add
push
xor
testb
xchg
push
sahf
xchg
lods
jl
loop
and
cld
aam
std
dec
popf
jg
fbstp
pop
xor
dec
pop
pop
lds
js
ret
ss
pop
cmpsb
fsubrs
mov
dec
inc
xor
nop
mov
rcrb
mov
mov
hlt
adc
jne
stos
sub
jo
aam
jmp
movb
inc
notl
test
adc
fs
add
cmpsl
adc
add
mov
cmc
inc
inc
jns
xlat
daa
cltd
push
int
push
xchg
ss
idivb
pop
push
or
ds
push
aad
insb
addl
or
or
aaa
mov
dec
and
push
lret
pop
adc
adc
out
iret
dec
dec
pusha
or
or
jge
movl
mov
xorl
hlt
push
inc
arpl
push
lret
das
mov
dec
inc
sbb
xchg
pusha
cmpsl
pop
sbb
inc
test
mov
leave
clc
add
lods
mov
mov
dec
lret
std
pop
pushf
push
xlat
add
mov
faddp
xchg
clc
cmp
xor
outsl
fs
adc
mov
outsb
inc
or
cwtl
jne
les
jns
dec
mov
adc
ficomps
mul
inc
cmp
inc
pushl
sbb
rcr
or
popa
adc
pusha
jge
pusha
and
adcb
sub
pop
cli
mov
mov
test
mov
sub
iret
fs
imul
mov
cmp
cmp
cs
insl
and
pop
inc
pop
scas
cmp
jl
add
add
mov
add
adc
push
xchg
push
imul
push
push
lahf
mov
pusha
mov
mov
or
je
mov
pop
adc
sub
jg
or
pop
lret
xor
nop
in
adc
pop
lcall
mov
xchg
sub
cld
mov
jns
divl
data16
std
leave
cmp
out
jmp
stos
out
sub
pop
push
mov
adc
pop
cli
push
int3
mov
aaa
mov
xchg
aam
loop
xorl
mov
mov
pop
cmp
data16
into
arpl
xor
loope
mov
jno
add
decb
or
ret
or
stc
sub
and
in
xor
loope
dec
sub
xor
testb
into
es
lock
out
xchg
popa
inc
in
int
test
or
sbbb
pop
push
inc
adc
add
jno
and
push
inc
sub
sub
jno
mov
dec
xchg
enter
push
mov
es
sbb
jo
dec
not
shrl
xchg
stos
in
sbb
cmpb
test
cmp
jb
aaa
mov
fsubs
imul
mov
ret
inc
push
lea
fisubs
xchg
mov
scas
mov
dec
in
lret
enter
push
inc
out
fisttpll
sbb
pop
add
subb
xchg
in
test
inc
mov
call
outsl
xlat
pop
sub
push
mov
iret
stc
sbb
into
imulb
sub
mov
add
pop
lcall
out
aaa
and
add
xlat
mov
push
cmp
mov
mov
push
inc
insb
inc
pop
fbstp
sbbl
dec
jbe
mov
ret
jne
adc
mov
inc
fnstsw
popa
cmp
cmpsl
out
cli
ds
movsb
push
test
jo
and
stos
inc
fidivrl
pop
sbb
insb
xchg
ret
in
fsubrs
lds
or
pop
js
btc
in
hlt
out
les
lea
fstpl
and
test
mov
outsb
push
sub
pcmpgtw
je
aaa
jge
stc
stos
into
xchg
or
jne
mov
adc
adc
xor
cmpsl
adc
leave
andl
int
outsl
sbb
in
popf
imul
pop
or
or
mov
rcll
fidivl
loop
mov
sub
scas
push
int
xchg
xchg
outsb
xchg
mov
mov
inc
test
mov
push
sbb
jecxz
and
pop
loop
jns
sbb
xor
mov
and
adc
xchg
dec
clc
imul
adc
adc
icebp
fisubrl
or
into
mov
shl
dec
ss
add
gs
mov
jmp
nop
lret
out
push
add
mov
mov
scas
lock
or
mov
inc
les
add
and
cmp
sbb
xchg
push
ljmp
scas
idivb
test
pop
cltd
ret
xor
jno
dec
repz
mov
mov
insb
cmpsb
int
pop
push
cmc
stos
cmp
arpl
cwtl
xchg
pop
mov
mov
aad
int
xor
mov
push
jmp
pop
push
xor
outsb
cmp
or
mov
sub
pop
pop
dec
mov
js
xchg
sbb
aad
mov
movsl
push
data16
sbb
jne
and
and
xor
pop
clc
cli
mov
popa
fisubrl
xor
sub
and
push
imul
and
pop
jae
cmp
dec
stc
dec
xchg
test
loope
xlat
cli
sub
mov
jns
or
push
outsl
incb
insb
stc
cmp
dec
iret
cwtl
cmp
cs
pop
mov
sub
mov
pop
xor
sahf
sbb
imul
mov
ja
sarb
in
mov
rcrl
mov
clc
jb
iret
pop
leave
jne
int
push
or
aad
xor
sub
and
out
mov
xor
mov
jecxz
jg
xor
sbb
fucomi
inc
mov
fsubl
cltd
jle
negl
add
popa
cltd
adc
xchg
mov
fsub
mov
inc
xchg
and
repnz
fwait
jg
sub
xor
fdivs
push
shrl
xchg
mov
add
pushf
and
adc
repz
jne
jmp
movsl
xlat
das
lock
inc
setne
sub
pop
daa
outsl
sar
inc
ss
dec
or
out
xchg
lods
sub
mov
jecxz
cmp
mov
mov
mov
ret
cmc
cs
xchg
jecxz
and
cs
scas
sbb
pushf
nop
xor
pop
fstpl
and
jne
xchg
jl
dec
ja
dec
mov
jns
xor
sbb
cmp
sbb
lea
jl
fdivrs
mov
dec
or
xchg
mov
dec
repnz
sbb
pushf
test
jno
es
clc
ret
outsl
call
leave
into
popf
jp
leave
scas
sbb
stc
cmp
std
ret
and
ljmp
std
roll
outsl
jp
xchg
cs
sbb
scas
cli
add
xchg
iret
fimull
test
mov
adc
jp
enter
jb
jle
cmp
xchg
pop
xor
out
int3
sbb
push
add
sub
sub
addr16
push
dec
iret
or
leave
in
scas
push
lret
loop
aam
movntq
push
mov
test
pop
sbb
and
test
inc
cmpsl
loope
repz
pop
cmp
test
jbe
nop
fistpl
lret
daa
popf
inc
in
lods
mov
or
or
mov
dec
les
xchg
les
leave
push
and
xchg
sti
repz
ret
ret
fwait
cmp
cltd
adc
mov
sub
cld
faddl
ret
or
push
popa
dec
setne
rorb
cmp
pop
lret
out
push
sarl
int
and
inc
dec
sbb
cmpsb
dec
adc
mov
jnp
popf
sbb
cwtl
mov
in
mov
dec
popa
imul
bndldx
inc
xchg
idivb
lock
out
outsb
sbb
aaa
cmp
pop
fsubrl
lret
add
jns
in
inc
enter
ss
mov
mov
or
pop
add
inc
add
nop
sub
pop
movsl
mov
xchg
adc
mov
fs
jl
std
adc
adc
fcoml
jno
dec
nop
ret
mov
scas
push
adc
and
xchg
pop
jge
xchg
gs
cmp
pushf
lock
sub
dec
add
orl
inc
dec
xor
addb
jg
mov
jbe
mov
outsl
push
ret
mov
mov
mov
cs
jge
pop
cmpsb
clc
sahf
fidivl
push
xchg
push
push
xor
or
daa
adc
adc
push
ret
sbb
mov
adc
and
aas
sbb
out
scas
xchg
inc
ficoml
push
flds
call
mov
js
dec
cmp
sti
lret
test
mov
pop
movsb
adc
sbb
movsl
hlt
aaa
sarl
mov
div
pushf
push
push
test
repz
xchg
mov
out
test
scas
aad
test
xchg
add
xchg
or
fs
les
xchg
aad
in
stos
mov
and
test
xor
imul
jp
les
out
jle
mov
mov
pop
jmp
cmp
xor
mov
rcrl
mov
mov
jns
push
cli
inc
mov
aad
imul
inc
push
xchg
test
pop
fs
pop
fdivs
das
addr16
dec
fwait
leave
sbb
in
int
xchg
xor
adc
adc
adc
sbb
mov
popf
out
push
mov
loope
daa
or
movsl
js
addr16
xor
inc
pusha
ss
into
xlat
cli
mov
inc
mov
out
clc
gs
lret
test
push
pop
ja
xchg
aaa
fadd
inc
push
xor
push
sbb
mov
insl
flds
add
ljmp
and
push
mov
es
leave
push
lahf
push
in
xchg
arpl
sbb
setno
mov
push
and
inc
ds
enter
fstpt
or
xchg
sbb
movsb
fsubr
jno
iret
pop
adc
outsl
xchg
xchg
mov
push
shll
pop
mov
pop
dec
cs
divb
testl
cmp
push
sub
dec
push
xlat
sub
mov
and
sub
outsl
fsubs
loope
arpl
sbbb
out
mov
stos
sbb
ret
dec
ret
push
sahf
cmp
jb
cmp
push
clc
mull
mov
xor
mov
cmp
mov
add
inc
in
mov
mov
test
and
das
push
pop
and
popa
sbb
rolb
jno
or
push
push
idivb
or
dec
rclb
mov
stc
pop
jb
in
aaa
adc
cmp
inc
jo
ljmp
lock
mov
movsl
and
int3
jge
fmul
or
cmp
dec
loop
mov
pop
cmc
imul
lods
mov
push
mov
das
ret
sbb
inc
push
movsb
int3
ss
sub
aas
xchg
jbe
inc
add
cmp
filds
int3
jmp
xorb
jle
sti
dec
cli
adc
pop
hlt
inc
push
repz
adc
adc
aas
dec
pop
sbb
inc
imul
adc
sub
jns
imul
daa
lret
inc
jg
daa
imul
push
mov
mov
out
cmp
loopne
int
add
test
fnstenv
xchg
xor
mov
lock
arpl
cli
cs
ret
cmp
cmp
outsb
fiadds
push
mov
xor
pop
xor
lea
push
jne
mov
inc
aam
pop
or
outsb
pop
std
sub
push
jae
loop
push
into
sbb
xchg
push
lods
shl
pop
mov
aaa
jp
pushf
pop
jbe
jns
call
call
or
imul
mov
inc
mov
mov
fs
or
rclb
or
or
xchg
in
inc
int3
test
mov
jecxz
mov
rol
fnsave
nop
cmp
ss
push
inc
scas
ss
dec
roll
mov
je
dec
in
sbbb
inc
in
les
roll
or
add
dec
movsb
fld
mov
js
adc
push
int3
mov
mov
pop
dec
lock
div
jns
sbb
outsb
dec
test
cmp
xchg
add
cld
push
adc
ret
dec
int
and
fcoml
mov
lret
mov
fisttpll
stc
lods
or
mov
aas
dec
sub
shrl
arpl
enter
popa
movsb
xchg
add
mov
cmp
push
cmp
insb
push
push
outsl
jae
and
insb
in
shll
push
push
mov
leave
lods
movsl
dec
test
mov
test
cmp
out
push
push
hlt
fwait
bound
or
in
cmpsl
jg
sti
xchg
sti
dec
cltd
adc
js
ret
cmc
stos
loope
jno
lret
push
test
rcll
xor
out
stc
pop
ljmp
pop
icebp
out
in
daa
push
enter
add
outsb
mov
lret
rorl
jmp
popf
cmp
push
xchg
out
cmpb
out
loope
sub
mov
mov
jmp
dec
push
stc
test
xor
je
adc
inc
shrl
lods
hlt
mov
dec
mov
test
insb
int
xlat
jl
jne
outsb
jl
aas
xor
in
mov
stos
lock
fsubl
rol
cmp
inc
add
and
pop
mov
vmwrite
mov
out
mov
mov
pop
scas
out
inc
inc
iret
xor
cmp
add
mov
adc
mov
js
xor
sub
dec
loope
add
test
dec
dec
inc
cmp
fs
pop
mov
pop
loopne
lds
mov
into
loop
sahf
dec
pop
mov
adc
ljmp
and
lods
mov
push
insl
and
cs
or
in
mov
test
in
movsl
dec
adc
mov
push
mov
sar
ret
cltd
dec
inc
mov
pop
mov
or
dec
outsb
cmp
and
xchg
call
cmp
pop
push
insb
das
cmp
inc
and
xor
mov
jmp
and
jmp
push
sbb
push
repnz
movsb
xor
adc
stc
test
int3
pop
xor
xchg
les
xor
jne
insb
jae
dec
sbb
sbb
je
fidivl
and
int3
in
mov
jo
jbe
xlat
mov
test
mov
xchg
adc
test
stos
lret
fstpl
daa
enter
sub
inc
push
adc
sub
jb
jmp
push
cmp
mov
sbb
cmpsl
sbb
sub
sbbl
mov
and
fcmovnbe
push
mov
fidivrl
cmp
mov
pop
in
xchg
mov
test
aad
lods
hlt
test
daa
filds
imul
sub
push
cmp
cmp
push
lret
pop
ljmp
mov
sbb
mov
push
xchg
jecxz
mov
jno
jno
int3
popa
jecxz
xlat
add
stc
cmp
cwtl
test
shll
lock
mov
test
push
push
loop
jp
stc
dec
addr16
push
mov
rcrb
mov
sub
leave
push
jno
leave
in
cmp
cli
push
and
addr16
movsl
movsb
fwait
sub
sub
xchg
imul
sbb
pushf
and
xchg
pop
jp
inc
pop
or
or
mov
sbb
and
push
inc
fs
imul
nop
push
mov
jge
inc
push
dec
nop
mov
dec
mov
add
jmp
inc
or
cmpsl
push
mov
or
xor
cmp
push
jl
js
int3
mov
pop
idivb
fnsave
adcb
mov
sbb
loop
dec
xlat
mov
mov
ss
mov
jo
ljmp
pop
ss
pusha
push
and
xor
movsl
lods
jg
xchg
or
cmp
dec
mov
cmpsb
int3
push
outsb
fs
mov
xor
outsb
pop
or
adc
pop
and
hlt
pop
pop
movsb
imul
fdivs
fnstenv
sbb
push
mov
xchg
jl
stos
inc
aaa
push
ret
nop
xorl
xor
push
jle
xchg
aam
mov
adcb
mov
sarl
pslld
push
mov
neg
cmpsb
fs
inc
xchg
pop
divl
jne
adc
push
sub
ret
xchg
rolb
jns
jno
ds
scas
in
mov
inc
cli
jmp
mov
push
cmpb
mov
adc
or
lock
rcrb
lea
mov
jae
xchg
sub
fwait
mov
mov
mov
and
sub
mov
and
aam
push
mov
sahf
add
mov
sub
sub
xchg
jns
in
js
iret
nop
in
mov
das
sahf
or
test
cmp
jecxz
adc
and
dec
std
mov
jno
aad
aad
icebp
rorb
lret
push
adc
aam
addl
mov
lds
add
aas
in
filds
add
mov
fiadds
std
jbe,pn
dec
pop
cmp
mov
sbb
xchg
out
cmp
inc
cmpsl
stc
aaa
sub
xchg
hlt
mov
xchg
cmp
stc
popf
and
in
aas
mov
push
cs
xchg
mov
enter
int
add
mov
sub
ret
insl
pusha
cs
nop
sub
bound
cmpb
pop
or
sbb
sbb
dec
mov
test
xchg
pushf
dec
cmp
or
sub
cmpsl
mov
arpl
and
adc
pop
ret
jbe
jae
cli
js
sbb
mov
mov
mov
pop
mov
mov
mov
push
stos
pop
push
cltd
adc
filds
cmpsl
fidivl
cld
mov
lahf
outsl
xor
and
jo
add
enter
out
jnp
enter
aas
pop
jns
mov
jmp
pop
ficomps
or
data16
push
pop
subb
push
jnp
les
das
mov
dec
add
es
mov
loop
out
scas
leave
cld
adc
pop
fs
xor
or
aas
cmp
mov
fbld
repnz
shlb
cmc
sbb
sub
hlt
cmp
xchg
movsl
mov
popa
jb
mov
mov
fnstenv
ds
pop
aaa
xchg
rorl
dec
sbb
mov
arpl
xor
loop
and
iret
lods
lret
mov
loop
insl
xchg
push
rcrl
mov
les
and
out
xchg
mov
test
pop
loopne
stc
xorb
sub
add
in
cmp
incb
pop
add
adc
xchg
inc
mov
ss
lds
loope
aaa
movsl
lret
es
cmp
out
addr16
or
xchg
adc
lahf
testb
inc
push
imul
sbb
sbb
and
out
xor
push
lds
and
int
or
or
cmp
in
sub
test
mov
dec
movsb
jl
add
inc
and
pop
push
inc
jbe
loopne
push
mov
adc
xor
mov
lds
mov
fnstcw
sahf
shlb
push
inc
add
bnd
pop
sbb
sbb
fbstp
loopne
mov
les
sbb
aaa
in
inc
stc
imul
aam
mov
push
pop
xchg
or
mov
mov
jae
int3
popf
out
cld
roll
push
push
push
test
fcmovnbe
mov
cwtl
mov
mulb
inc
sub
sub
mov
and
aad
outsb
fimuls
xor
out
xor
icebp
js
and
mov
mov
push
mov
mov
insl
fstpt
inc
pop
ljmp
aam
ror
mov
xchg
pop
jbe
dec
imul
pop
mov
mov
les
inc
aas
lcall
sbb
inc
push
shll
shll
mov
test
int
mov
push
cli
cmp
xchg
ljmp
mov
lods
mov
push
je
loop
mov
or
imul
inc
cmpsb
lret
imul
add
es
push
fistl
cmp
cwtl
scas
mov
out
cmpsb
sar
pop
sbb
push
pop
ret
push
out
in
mov
and
pop
aad
add
mov
and
mov
adc
inc
lahf
jge
ds
scas
jae
jmp
ficompl
lret
pop
gs
dec
test
stos
sbb
cmp
cmp
jns
sahf
or
popa
xchg
lcall
jmp
push
jno
popa
inc
je
cmpsb
pop
lock
sub
sbb
xchg
pusha
or
jns
sub
xchg
idivl
dec
in
stos
mov
ds
into
mov
int3
scas
mov
insl
add
jg
adc
sbb
push
mov
out
adc
sahf
and
ljmp
dec
lcall
jp
fistpll
insb
mov
loopne
xchg
xor
stos
push
in
add
or
ds
nop
mov
outsb
test
imul
and
mov
sbb
dec
add
push
loop
gs
clc
stos
push
fidivs
pop
fidivrl
cmp
cmp
shrb
scas
or
jb
mov
pop
out
inc
push
int
int3
pop
add
mov
sub
sub
test
in
out
insb
xlat
push
inc
inc
jbe
jp
sub
repnz
and
mov
fnstsw
sbb
imul
dec
mov
divb
inc
push
je
out
cli
fidivl
mov
xchg
je
fsubrl
mov
call
dec
or
loope
mov
jns
mov
add
and
inc
je
lea
or
loopne
push
xor
jae
mov
mov
les
adc
jp
push
sub
test
fwait
mov
ljmp
leave
mov
inc
mov
xchg
dec
ja
adcb
pop
das
xor
data16
in
lret
and
add
lahf
and
fnstsw
sub
cmp
daa
mov
sub
je
jg
push
pop
or
jnp
adc
ror
andl
xchg
int3
inc
push
cmpsl
test
xor
popa
dec
mov
lcall
fnsave
adc
jb
pop
sbb
dec
test
addr16
add
and
xchg
xchg
scas
test
fnstcw
sbb
sub
scas
outsb
loop
mov
xlat
fs
mov
jmp
lcall
fidivl
mov
aas
sub
stos
pop
mov
hlt
aad
cmc
es
pop
xchg
sbb
jae
and
lea
or
mov
aas
cmpsb
push
fnstenv
jae
pop
insl
roll
dec
repnz
mov
cmp
add
or
popa
adc
jle
sbb
imul
mov
sbb
and
xchg
imul
orb
popa
push
jnp
hlt
cmp
inc
in
mov
inc
inc
push
inc
je
inc
nop
int3
sub
cmp
popa
jae
lea
jb
int3
in
mov
mov
inc
dec
in
inc
ret
popf
and
and
jecxz
xchg
test
rcrb
mov
push
mov
inc
cmpsl
jbe
inc
cmp
and
imul
lods
push
hlt
stos
fisubl
mov
mov
adc
push
dec
jg
loop
repz
lock
mov
in
decb
rcr
xor
cmp
push
data16
adc
mov
in
jmp
into
vpsllq
daa
pop
popf
dec
lahf
xchg
sbb
lret
cmpsl
sbb
test
aad
cwtl
loopne
sbb
arpl
ret
or
sbb
std
imul
pop
aad
cli
inc
mov
stc
imul
fdivrs
js
xor
push
outsl
lret
push
ret
lret
mov
sarl
int3
fidivl
push
lods
cmp
mov
enter
aam
push
push
xchg
xor
jmp
sbb
cmp
bound
icebp
scas
push
mov
xchg
push
adc
add
sbb
pop
dec
xchg
cs
aaa
nop
bnd
and
xor
pop
add
loope
mov
sub
dec
in
mov
cld
insl
loop
fs
lret
mov
cmc
add
jno
lret
in
test
ds
and
nop
adc
add
imul
adc
es
xchg
xlat
dec
cmpsb
mov
mov
mov
mov
fwait
popf
shlb
ja
sbb
test
mov
shlb
ficoms
pop
sbb
cld
mov
jle
es
in
repnz
add
cltd
test
push
mov
sub
mov
dec
jo
jbe
xchg
lahf
push
repz
mov
mov
xor
jae
test
mov
inc
das
movzbl
lcall
or
lock
rolb
push
and
jl
sub
out
mov
pop
push
out
mov
mov
xor
rcl
outsb
push
daa
movsl
jl
pusha
pop
jle
pop
cmp
cltd
jp
outsl
int
pop
cltd
dec
pop
xchg
mov
sub
jno
test
dec
sbb
movsb
popa
lret
pop
cwtl
dec
xor
cli
mov
rcrb
fldt
aad
mov
pop
xor
ja
mov
dec
xor
push
mov
loope
lods
cmp
lahf
mov
arpl
outsb
cmp
pop
out
mov
inc
ret
sbb
jl
adc
push
les
xchg
arpl
xor
adcl
cli
xchg
divl
inc
mov
and
shl
add
ret
xlat
mov
inc
out
mov
loope
dec
cmp
or
int3
or
dec
loop
lds
jbe
or
shrl
inc
inc
enter
aam
push
and
xchg
jne
mov
stos
adc
mov
sar
lahf
add
inc
mov
add
test
mov
pop
push
mov
and
call
enter
jb
xor
cmp
dec
or
nop
fs
mov
popa
mov
in
jnp
pop
stos
decb
ja
js
add
xlat
pop
and
in
std
sub
inc
in
cmp
je
fisubrl
push
jle
aad
leave
cltd
mov
sti
and
inc
sbb
sub
cmc
sub
enter
add
pop
out
pop
and
adc
out
mov
fstpl
stc
jle
lcall
out
xor
dec
mov
idivb
out
mov
jb
jge
fistl
je
add
mov
stos
mov
inc
xchg
sub
inc
mov
in
scas
dec
push
fwait
lds
cmp
pop
in
hlt
icebp
std
push
sbb
jb
cltd
mov
jnp
dec
int3
jae
jecxz
loope
lcall
xchg
lcall
pop
mov
sahf
fcompl
push
call
dec
scas
and
into
pop
xor
cmp
lods
dec
aam
mov
mov
repnz
or
int3
jg
pop
mov
incb
xor
clc
add
addr16
xchg
in
lods
pop
xchg
xchg
cmp
xor
mov
icebp
pop
dec
xchg
push
cmp
adc
mov
rorb
cmp
xor
outsl
lcall
les
shr
xor
jle
out
divb
dec
subb
push
stc
xchg
mov
push
arpl
and
mov
or
jns
movsb
jmp
popa
fsubrs
jle
jmp
outsl
fs
and
add
cmp
rorb
pop
jo
or
add
jp
fdivrl
subl
je
mov
or
stos
daa
sbb
stos
je
jnp
xlat
jns
vmwrite
adc
mov
gs
xor
insb
push
sub
lds
subb
jecxz
shrb
js
popa
pop
cli
jne
stos
out
add
xchg
aam
xchg
lahf
mov
jne
insb
stos
cmp
loopne
loopne
jns
out
sbb
jmp
mov
jo
add
jb
mov
sbb
into
shll
out
rorl
push
and
ss
repz
xor
fimuls
add
cmp
xor
movsb
jecxz
jo
pushf
mov
mov
or
and
out
mov
daa
addr16
in
xchg
inc
mov
fmuls
pop
addr16
int3
shl
xchg
inc
cmp
roll
dec
nop
es
das
mov
test
sbb
inc
mulb
movsl
idivb
cmpsl
pop
out
xor
or
inc
inc
push
adc
jae
adc
test
mov
cmpsb
push
fistpl
xor
int3
mov
push
dec
loope
inc
lea
in
pop
dec
popl
mov
mov
mov
std
sti
xlat
lahf
mov
inc
idivl
lret
pop
cmpsl
js
cmp
add
jmp
cmpsb
cmp
ja
lods
aaa
cmc
sub
adc
shrl
push
int3
std
es
adc
mov
mov
mov
mov
fstpt
dec
add
mov
or
mov
pop
nop
popf
and
ret
frstor
push
xor
clc
push
subb
push
and
imul
push
mov
dec
or
std
lods
sbb
ret
jl
xor
int
sbb
lret
mov
fnstcw
pop
push
js
push
add
pop
and
jg
das
mov
jmp
xorb
jbe
fwait
push
xchg
cmp
cld
mov
insb
push
pop
ret
dec
mov
push
add
xor
test
xchg
loop
add
leave
insb
mov
inc
clc
lods
jae
shll
sbb
addb
jg
outsb
xchg
jg
out
sarb
fistps
or
test
jmp
mov
sub
rcrl
cmpsl
rorl
cmp
pop
xlat
ffreep
dec
sub
imull
cld
shlb
cmp
cli
xchg
subl
ret
lcall
daa
sub
das
fnstcw
jbe
or
add
into
mov
daa
int
in
add
jle
test
dec
mov
inc
clc
popa
inc
fists
repz
pop
xchg
outsl
lret
push
arpl
bswap
sbb
lcall
push
xor
stos
out
pushf
cmp
bound
sub
jecxz
cmp
push
popa
ret
popf
cmc
sti
xchg
cli
andl
mov
fstpt
add
pop
fmull
mov
push
cmp
cltd
inc
mov
test
inc
pusha
cmp
out
xor
push
pop
enter
mov
cmpsl
into
pushf
and
and
cld
std
unpcklps
xchg
cmp
xor
inc
mov
xor
outsl
mov
das
and
dec
cmpsb
fistpll
and
pop
push
add
clc
testb
outsb
int
jb
xchg
test
mov
dec
mov
dec
xchg
mov
fdivp
mov
add
fnstenv
mov
stc
les
sti
mov
and
movsb
idivb
sbb
pushf
lahf
cli
les
clc
and
lret
xchg
stos
push
sub
js
pusha
push
loop
orb
sbb
jnp
repnz
subb
cmc
ljmp
cmp
xorl
rclb
dec
gs
cs
in
mov
clc
sub
mov
push
inc
sti
stos
lret
cmp
fadds
popf
mov
ret
mov
dec
adc
lahf
xor
inc
bound
xor
add
xchg
or
sbb
movsl
push
hlt
in
push
dec
mov
sahf
xlat
int
fimull
loope
mov
jp
stos
jae
scas
xor
push
push
aas
insl
dec
bound
rol
frstor
mov
push
hlt
xlat
xchg
mov
aad
jg
leave
mov
xchg
pop
scas
lret
jnp
cmpsl
sbb
imul
sub
pop
mov
mov
push
iret
das
mov
inc
scas
pop
cmp
push
cmpsb
xchg
mov
mov
inc
push
add
rclb
lods
fs
push
jmp
insl
mov
pusha
inc
sahf
loope
jmp
mov
mov
andb
fdivs
jns
push
aam
lock
ficompl
jno
hlt
jmp
or
and
roll
fldl
fdivrl
gs
std
mov
fbstp
mov
and
xor
out
mov
lock
adc
stos
imull
sub
mov
enter
sahf
jnp
imul
dec
jbe
les
repz
cld
iret
into
and
sahf
rolb
sbb
pop
mov
or
addr16
pop
in
fdiv
daa
hlt
mov
shlb
scas
push
pushf
xchg
imul
lret
dec
add
push
sbb
sbb
lock
jns
dec
add
int3
mov
mov
test
push
fwait
inc
lahf
icebp
xor
push
pushf
hlt
lock
icebp
push
and
loopne
enter
das
sub
into
sbbl
pop
cmp
ja
pop
mov
xlat
inc
in
pop
stos
cs
sub
pop
add
sbb
mov
nop
xchg
lcall
or
mov
push
xchg
sar
sbb
movsb
lods
inc
sbb
cwtl
dec
out
sahf
out
insb
movsb
sbb
inc
sbb
sahf
ja
mov
fcomps
pop
das
pop
push
inc
jge
aas
mov
sub
jns
jmp
mov
in
jne
leave
lods
cmpsl
imul
dec
adc
push
je
mov
sub
xor
in
xor
mov
jmp
in
arpl
mov
pop
popa
enter
out
dec
outsb
test
xchg
xchg
sbb
dec
sub
mov
mov
xor
lret
arpl
sub
adc
cli
jbe
push
sbb
js
std
mov
ja
add
mov
inc
inc
sti
andl
decb
cmp
fwait
pop
jno
lods
or
mov
and
sbb
or
add
call
es
add
repnz
mov
bound
data16
dec
sub
fwait
and
sub
lahf
incl
addl
add
mov
or
cli
xor
orb
inc
addb
lahf
xchg
clc
mov
movsl
jbe
popf
test
rorb
dec
popf
icebp
popa
aad
pop
add
in
mov
or
add
int
leave
andl
mov
fmull
sbb
adc
cmp
lods
jns
test
dec
rclb
loop
repz
or
leave
out
ljmp
icebp
je
push
js
push
mov
cmp
mov
cmp
fisubrl
mov
adc
adc
mov
mov
sbb
cld
add
inc
das
bound
sub
xchg
jb
and
outsb
dec
jbe
cmc
sbb
or
add
lods
insl
push
ss
cmp
sub
ret
stos
mov
leave
jns
rolb
shrl
stos
xchg
push
push
int
ljmp
xchg
sahf
stos
pusha
ret
into
xor
mov
int
enter
push
push
push
aaa
in
jne
xchg
jno
inc
dec
aaa
mov
les
pop
pop
xlat
mov
cmp
fsubrs
sub
movsb
test
lods
push
mov
lock
daa
adc
inc
add
repnz
lods
push
sub
in
dec
sbbl
stc
mov
cmp
mov
mov
mov
sti
mov
jns
popf
ljmp
cmp
or
inc
hlt
inc
lcall
outsb
pushf
add
push
xor
ret
or
mov
inc
sbb
movsl
shll
cmpb
test
ds
mov
mov
iret
mov
jle
into
fmull
pop
mov
ffree
push
xlat
test
adc
dec
dec
ljmp
xor
pushf
cmpsb
std
adc
mov
roll
sbb
and
jecxz
cmpsl
loop
sub
xchg
or
aas
inc
lods
scas
add
pop
or
adc
pop
lret
lods
cmpsl
and
imul
adc
mov
fwait
mov
pop
divl
sub
movsb
jecxz
inc
rcl
or
xchg
fisttps
fnsave
xchg
add
xor
pop
std
cmp
jae
add
pop
cmp
mov
xor
aad
push
ret
jnp
jae
nop
fs
cmp
fucom
xchg
lods
xchg
fld
iret
jmp
xchg
pop
popa
cltd
cmp
les
mov
jne
push
in
sbb
out
xor
mov
daa
inc
sarb
mov
scas
mov
sarb
repz
push
es
fcompl
xlat
xor
and
out
into
mov
xor
lods
imul
mov
fs
jcxz
adc
fisubrl
inc
fwait
scas
cli
ljmp
arpl
mov
inc
inc
gs
addl
mov
ljmp
push
shrb
pop
push
bound
adc
cmp
mov
dec
jg
pop
sbb
imul
out
ja
or
or
or
add
sbb
out
cmpsl
mov
aam
lret
out
dec
jle
imul
rorb
pop
xchg
jge
xor
rcll
test
jo
xchg
push
scas
les
bound
push
adc
cmc
dec
push
stos
inc
jb
cmp
scas
insb
add
pop
sub
jmp
test
xor
jg
nop
push
cli
mov
cli
push
aaa
jbe
repnz
mov
xchg
stos
xchg
cs
xchg
or
cmc
sti
mov
das
shrl
inc
or
inc
dec
sub
sub
add
fstl
cli
sbb
data16
lret
jl
xchg
mov
mov
leave
and
out
sub
mov
movsb
mov
adc
call
test
add
hlt
movsl
inc
mov
push
fldl
xchg
shlb
sbb
xchg
dec
pop
sar
sub
jns
ja
mov
fisttpll
sub
dec
sub
adc
imul
stc
shlb
fisubrl
jo
jl
or
xchg
sbb
test
sbb
dec
in
fwait
adc
in
pop
sbb
shll
push
into
jae
mov
or
adc
scas
inc
rclb
cltd
scas
mov
lret
mov
rep
jp
pop
mov
mov
inc
or
sbb
bnd
imul
adc
js
xchg
cltd
hlt
dec
adc
add
push
int
pop
in
imul
popa
imul
sti
scas
in
adc
pop
inc
dec
cli
into
adc
mov
lret
gs
dec
lods
adc
push
xchg
out
fmull
or
mov
fwait
pop
pop
push
push
rolb
mov
xor
push
into
mov
push
mov
lock
and
call
pop
cmpsl
cld
pop
test
add
pop
ret
cmp
pop
stos
lds
jmp
add
clc
notl
sub
xor
in
loop
or
mov
mov
and
leave
icebp
clc
xlat
or
pop
cmp
call
xor
jae
jl
adc
leave
insl
push
and
pop
ds
mov
lret
lcall
fmul
xchg
xor
sbb
add
mov
testl
sbb
mov
lea
lret
mov
out
js
outsl
push
sbb
rcr
xchg
icebp
sti
xor
imul
stc
aas
jno
and
roll
jae
orl
pop
pop
outsb
lretw
out
or
outsb
int3
pop
dec
or
movsb
js
leave
push
jo
pop
scas
adc
dec
jg
in
push
inc
xor
lret
inc
sub
repz
lds
test
mov
stc
in
fimull
jp
stos
jle
xchg
cmp
adc
into
stos
add
stc
cmc
and
pop
sub
adc
test
and
test
mov
and
or
out
leave
pop
mov
mov
lahf
cmp
xchg
sbbb
loope
scas
pop
bound
lock
mov
pop
testl
mov
jg
loope
mov
mov
dec
aas
sub
out
stos
jae
push
adc
push
cmc
sub
cli
out
jno
jne
sbb
ja
push
in
lahf
adc
push
rcll
movsb
iret
jb
push
sub
dec
lret
jge
sbb
cmp
push
std
int
int3
int
jae
jecxz
xor
shrb
cwtl
aam
lods
popa
ret
shll
pusha
add
nop
xor
inc
or
add
daa
xor
leave
cmp
sub
andl
mov
sbb
into
test
out
jo
cmp
jg
adcl
pop
nop
mov
jmp
sbb
fcomps
mov
cwtl
cltd
jbe
std
scas
push
mov
out
je
inc
popl
cmp
sbb
xchg
mov
je
sub
xor
pop
xchg
ds
mov
repnz
int
movsl
das
insl
push
fiaddl
push
test
aaa
insb
aas
lahf
sbb
inc
out
or
hlt
inc
mov
mov
push
pop
dec
out
in
movsb
addr16
je
add
sbb
mov
add
ja
mov
data16
push
jo
add
pusha
lcall
xchg
test
imull
das
into
xlat
sub
add
arpl
lahf
push
add
add
mov
imul
cltd
aas
xchg
aad
fisubl
jl
shl
repz
pusha
int
or
mov
dec
out
or
mov
je
cmp
pop
xor
mov
push
and
mov
test
loope
xchg
ret
fs
inc
mov
lock
jbe
loop
ficompl
popa
lahf
fildll
xor
jmp
mov
dec
push
xchg
jnp
cmpsl
push
sub
mov
lahf
add
ficoms
fwait
or
cmp
outsl
mov
jg
stc
cmpsl
daa
insb
repz
xchg
xchg
sbb
cmp
out
mov
lcall
insl
pusha
mov
dec
mov
mov
push
lret
test
dec
xchg
adc
data16
loopne
and
clc
scas
push
ljmp
adc
pop
je
ret
shl
jp
lods
int
push
sbb
jecxz
pop
insl
mov
loope
test
mov
dec
push
mov
clc
push
js
mov
out
xor
fstpl
push
mov
in
jb
incl
stos
adc
xchg
jno
push
mov
cmp
or
aas
cmpsb
sahf
lret
jp
cmp
jb
hlt
adc
mov
push
arpl
adc
mov
dec
in
sbb
out
cmpsb
je
fisttps
fcoml
pop
and
fdivrs
xor
scas
mov
jns
mov
enter
jbe
lds
mov
sbb
jno
movsl
mov
mov
testl
daa
mul
mov
jns
dec
dec
pusha
nop
out
cmc
sub
mov
shlb
repz
xchg
icebp
mov
mov
lods
and
or
lea
xor
push
sbb
cmp
cmp
add
leave
jae
push
insb
lahf
icebp
in
push
fimull
mov
dec
inc
sub
stos
clc
mov
cltd
push
push
lods
jb
and
iret
ljmp
jmp
cwtl
rcrb
fs
jae
ds
push
cs
jecxz
cld
or
ljmp
cmp
push
iret
push
fiadds
int3
xor
popa
pop
repz
imul
push
imul
pop
hlt
pop
ss
xor
or
mov
cmpsl
dec
test
ja
outsb
lods
pop
pop
ret
push
xchg
subl
jmp
xchg
push
call
push
cli
lahf
xchg
aaa
fsub
gs
push
in
inc
cmpb
in
push
xchg
int3
adc
pop
jne
shl
mov
es
mov
repz
mov
and
cmp
xchg
xchg
xchg
push
lret
mov
sbb
sahf
cmp
mov
incb
xchg
jb
push
and
xor
xchg
cmp
cmpsb
and
mov
das
inc
call
mov
sbb
push
imul
sub
mov
pop
or
cwtl
pop
idivl
pop
pop
xor
test
add
call
into
inc
imul
lret
sarb
ret
lret
and
das
out
xor
repz
bound
adcb
jl
out
enter
lock
jle
imul
adc
dec
insl
or
imul
pop
sbb
adc
int3
sbb
inc
inc
mov
cmpsb
adc
dec
imul
pop
mov
add
stos
xor
lret
adc
cli
xlat
push
push
xchg
insl
inc
subl
push
repz
aaa
add
ret
test
and
mov
xor
push
dec
insl
in
mov
sbb
cwtl
cmp
daa
out
sub
push
jle
xchg
push
jecxz
add
nop
data16
jno
xchg
dec
push
and
cld
push
xor
cmp
sub
jae
repz
inc
cmc
sbb
mov
insb
rcrb
icebp
jne
mov
add
pop
xor
loope
inc
lea
xor
pop
jp
fldenv
sbb
dec
cmp
mov
ret
dec
xlat
xchg
jbe
dec
in
fwait
js
and
rorl
insb
and
pop
push
fistl
or
and
aas
lret
test
fwait
fs
cmp
aas
or
ss
mov
shlb
div
test
mov
sub
xor
js
jecxz
fdivs
inc
pusha
mov
insb
sbb
aad
sub
test
cwtl
mov
mov
mov
add
dec
in
sbb
popf
lods
sub
jmp
out
bound
push
lahf
push
aaa
cmp
or
mov
xchg
pop
movsl
adc
push
push
cmc
fstpt
push
and
lods
xchg
enter
roll
mov
aam
xchg
movb
popa
pop
mov
nop
lds
and
lahf
pop
push
nop
sarl
sub
clc
xchg
jae
inc
fsubrl
mov
inc
sub
mov
lods
mov
adc
in
mov
jg
mov
xchg
push
jo
sub
les
fwait
pop
dec
mov
or
repnz
cli
in
int3
dec
sub
in
inc
push
push
loop
mov
mov
mov
enter
jnp
into
cmp
sahf
sbb
push
jmp
pop
mov
adc
outsl
jmp
jns
push
ds
insl
outsl
sbb
test
loopne
mov
pop
fs
mov
mov
xor
pusha
test
jne
or
ljmp
es
adc
rcl
gs
ret
pop
and
cmp
test
cmpsb
movsl
pop
adc
insb
test
in
mov
leave
or
mov
call
lods
loop
clc
into
jge
ficoms
leave
dec
cmc
aad
or
mov
popa
int3
mov
fldl
push
dec
outsb
push
or
sub
mov
ret
push
push
or
clc
leave
insb
clc
push
sub
sahf
ja
sub
pop
cwtl
and
ss
addr16
jle,pt
jno
je
shll
cmpsl
xor
fnsave
lock
jl
mov
iret
mov
inc
mov
pop
add
dec
sbb
jl
lea
rcl
leave
inc
add
mov
mov
popa
xchg
lods
adc
outsl
test
out
mov
call
data16
jmp
dec
push
mov
out
and
cli
andb
repnz
xchg
fs
leave
jb
push
incb
add
push
das
dec
stos
icebp
cmp
add
jae
push
pop
sahf
jb
sbb
fwait
cld
inc
or
adc
test
imul
pusha
cwtl
lcall
mov
aam
mov
das
sti
es
xchg
es
inc
data16
pop
dec
dec
gs
xchg
push
test
jp
push
test
rcrb
aaa
sub
rcl
mov
clc
push
push
add
dec
mov
inc
push
movsl
adc
mov
cmpsb
jnp
mov
mov
js
repnz
flds
sub
jmp
push
mov
push
test
dec
xor
dec
loope
jecxz
xor
stos
mov
push
std
mov
pushl
mov
mov
cmp
outsb
out
xchg
loop
loopne
inc
xor
sub
and
jns
mov
push
mov
mov
ror
orb
repz
stos
jge,pn
xchg
lret
xchg
push
insl
inc
mov
add
mov
jb
iret
out
test
pop
push
push
xchg
or
mov
out
dec
pop
or
rorl
data16
dec
decl
sub
les
sar
cmp
xchg
cmp
std
addl
and
push
ja
fadds
xchg
insb
in
inc
aam
ljmp
pop
loopne
dec
push
dec
filds
xchg
pop
add
mov
es
icebp
rclb
pop
sub
scas
pop
mov
test
and
xor
cmp
ds
sbb
outsb
jo
lods
aam
scas
pop
inc
mov
pop
sub
dec
inc
std
sbb
jo
cmp
push
mov
xchg
jo
jmp
cmpsl
out
push
iret
dec
lds
push
sbb
jns
mov
jmp
or
nop
je
out
ret
jo
inc
mov
inc
jae
aaa
xor
or
dec
repz
mov
or
out
xor
or
sub
out
adc
iret
out
arpl
jecxz
or
mov
mov
inc
mov
out
out
popa
in
sbb
xchg
mov
or
pop
jae
jecxz
jg
hlt
dec
cmp
pusha
mov
mov
mov
xchg
pop
mov
movsb
sub
lods
xor
clc
fs
fmulp
jbe
dec
test
pop
int3
adc
inc
movsb
cli
mov
push
push
in
and
pop
leave
into
jl
mov
stos
mov
data16
popa
mov
popf
xchg
stc
aaa
mov
sbb
test
xor
stc
inc
adc
hlt
lock
les
cltd
push
enter
lret
xchg
cld
jle
int3
sbb
or
or
fs
xchg
pop
test
loope
mov
ljmp
mov
hlt
ret
cmpb
pusha
push
bound
adc
hlt
adc
xor
fstpl
mov
sub
notb
rcl
cmpl
lods
mov
jne
mov
mov
leave
sbb
rcll
cmp
loope
loopne
xchg
fdivrl
and
in
and
sub
pusha
sbb
sub
outsb
xchg
mov
xorl
lret
ret
or
ret
xor
jmp
fs
push
imul
repz
or
and
xlat
cmp
sti
roll
insl
div
pop
cwtl
loop
mov
mov
sti
push
pop
inc
js
xchg
mov
int
push
inc
jge
sub
mov
push
push
sbbl
jo
adc
aaa
testl
dec
dec
loop
push
mov
sub
xchg
iret
inc
adc
cmp
popf
xchg
into
cmp
cltd
adc
push
mov
xchg
pop
mov
or
out
ret
xchg
lock
sub
mov
les
sub
adc
js
in
push
jge
pop
or
cmpsl
subl
push
scas
pop
add
dec
daa
jne
mov
push
xchg
popf
inc
pop
dec
or
sub
cmp
stc
adc
cmp
dec
lret
mov
push
add
lods
je
xchg
or
pop
jmp
sub
adc
negl
daa
jecxz
mov
adc
shr
mov
mov
push
mov
sbb
mov
jnp
mov
cmp
repnz
lret
jle
mov
stos
and
xlat
sti
out
mov
stc
iret
inc
add
jno
pop
cli
std
or
out
test
mov
and
repnz
and
jecxz
arpl
mov
push
sbb
sbb
or
xchg
mov
and
jno
aaa
in
push
mov
mov
xchg
loope
cs
pop
pop
insb
fwait
adc
lock
rol
dec
hlt
pop
loop
push
xchg
mov
jns
sub
repnz
or
jno
sbb
mov
xchg
cltd
dec
ror
mov
out
pop
pop
out
inc
xlat
in
push
jecxz
inc
xchg
xor
cmp
sbb
ss
dec
cli
gs
and
dec
xchg
xor
cmp
out
or
es
rol
jmp
push
cmpsl
aam
fisubrs
xlat
cmpsb
pop
cmp
loopne
pavgw
dec
insl
decb
addr16
sub
push
xchg
fwait
mull
dec
clc
imul
sub
insl
push
rorl
out
aas
fstl
fstps
cmp
push
rcr
mov
pop
sbb
movsb
rol
cmp
jne
fimuls
jns
or
jmp
dec
add
jl
cmp
xor
jl
enter
repz
mov
pop
out
int
imul
imul
lods
mov
and
jb
cmpsl
xor
cmp
mov
daa
scas
mov
test
pusha
mov
sbb
and
fsts
in
pop
cmpl
call
shrl
mov
dec
or
in
imul
mov
shlb
mov
jbe
xor
popf
pop
daa
stos
fsubrs
dec
dec
ss
ds
js
push
mov
popl
insb
bound
aam
orl
fwait
inc
ljmp
shll
in
ljmp
jae
inc
sbb
cltd
adc
popl
pop
fimuls
dec
and
cmp
mov
in
jp
arpl
adc
loope
sub
cmp
adc
outsl
jg
rcll
jns
in
rol
addr16
in
insl
xlat
pop
xor
lds
rorl
aaa
out
cmpsl
inc
inc
pop
scas
xchg
pop
testb
outsl
cmp
xlat
xchg
mov
shrl
aad
leave
and
inc
test
xchg
cmp
rcl
gs
lock
enter
adcl
dec
inc
iret
and
lcall
imulb
jbe,pn
mov
daa
std
mov
lock
jl
xor
mov
les
xor
adc
sbb
lahf
jns
pusha
mov
add
inc
outsb
imul
cwtl
and
jge
fistps
pop
in
inc
adc
sub
ret
adc
inc
sbb
cltd
xor
cmp
aaa
stc
mov
in
sub
sbb
lahf
sbb
push
jmp
xor
idivl
out
cmpsl
mov
cld
xchg
sarl
outsb
jne
inc
adc
imul
xor
dec
push
incl
ja
ds
cmp
dec
add
cmp
pop
mov
into
and
aas
cli
dec
inc
dec
test
cmp
mov
stos
mov
lods
aam
pop
shlb
shll
test
jge
or
orl
xchg
pop
inc
cmp
or
push
jl
loop
xor
gs
sub
xorl
call
dec
cmpsb
jo
and
jae
sbb
sbb
cmpsb
fs
xchg
inc
stc
loop
mov
dec
in
shrb
cld
sbb
mov
add
data16
jl
ficompl
jle
jg
sbb
pushf
add
mov
add
fnsave
jns
call
in
mov
xor
jb
rcll
inc
inc
pop
or
cmpsb
stos
sub
popf
pop
and
and
push
loop
jge
cli
icebp
shrb
dec
out
push
daa
or
pop
xor
ss
xchg
hlt
pushf
lea
xchg
mov
push
mov
aaa
mov
xor
ja
mov
in
dec
ds
mov
jp
sbb
mov
mov
stos
add
js
popl
xor
xchg
lret
jo
inc
add
stos
dec
lcall
inc
or
or
in
clc
pop
stos
jp
xchg
fdivs
insl
dec
xor
lret
jle
adcl
inc
pop
push
and
add
xor
and
sub
dec
mov
mov
pop
fwait
mov
jae
ljmp
and
sub
stos
xorl
loope
sbb
rorl
popf
sbb
push
cmp
pop
lcall
stc
xchg
inc
test
jns
stos
cmp
inc
test
lret
daa
gs
rorb
nop
dec
movsb
dec
pop
or
in
dec
aaa
dec
mov
setb
and
jp
mov
out
test
add
stos
mov
sbb
dec
sahf
adc
and
andl
ret
sbb
xor
and
das
xchg
cmp
push
jmp
dec
mov
pop
push
sub
push
sub
pop
cmp
test
adc
out
mov
fisubrs
imul
or
jae
mov
ljmp
xor
test
push
mov
fcompl
xor
cmp
lods
mov
fstpl
lods
jle
int
sti
mov
clc
push
inc
and
flds
sub
repz
mov
xor
jle
imul
das
daa
push
jae
sub
enter
and
fbld
or
xor
mov
test
ret
add
push
add
bnd
test
arpl
cmp
xchg
rorl
jns
out
std
les
or
test
iret
repz
pop
popa
lea
in
mov
xchg
ficompl
inc
icebp
mov
inc
arpl
fstpl
out
add
mov
push
push
push
add
mov
inc
inc
hlt
adc
push
loope
andl
mov
lea
jnp
insb
inc
sbb
lock
cld
fwait
xchg
adc
es
mov
push
imul
add
and
add
mov
mov
jne
jb
dec
fsubrl
pushf
cli
imul
mov
rorl
xchg
cwtl
in
clc
inc
dec
adc
pop
ljmp
jg
inc
mov
xchg
sbb
mov
sub
mov
jp
pop
adc
mov
lcall
lock
cmp
stos
je
add
inc
xchg
and
jae
adc
std
cltd
push
sub
fs
cltd
jo
pusha
data16
dec
int
mov
aas
sub
lea
adc
into
pop
arpl
les
add
pusha
movsl
sbb
xchg
xchg
stos
inc
mov
lds
pop
test
loop
rcll
push
push
into
xchg
in
or
adc
cmpsb
push
rorl
pop
in
adc
inc
lds
insb
xor
jbe
sbb
xchg
and
das
lret
pop
jg
out
push
xor
ficoms
sub
adc
add
mov
scas
es
sub
mov
popa
mov
insl
pop
push
sub
pop
pop
movsl
outsl
fisttpll
add
push
or
pop
scas
and
inc
rcll
mov
js
adc
mov
arpl
pop
lds
stos
test
fisttps
adc
lret
pushf
adc
lods
push
cli
adc
je
inc
test
push
push
lcall
out
pop
pop
cmp
jno
scas
lcall
enter
sbb
aam
mov
aad
je
call
fs
dec
inc
cltd
icebp
lahf
mov
pop
icebp
in
pop
xor
mov
out
or
cld
mov
mov
mov
sbb
leave
je
arpl
pop
ret
ss
sahf
fsts
insl
jbe
roll
cwtl
jp
dec
cmp
inc
imulb
rclb
aaa
inc
dec
and
fildl
sub
ss
lret
pushf
movsb
or
dec
lret
in
or
shlb
pop
test
pop
pop
xchg
outsb
sub
push
xchg
push
or
lret
pop
push
aam
test
mov
inc
adc
andb
jmp
sub
mov
jge
sbb
mov
sub
stos
jnp
in
jbe
movsb
adc
mov
xor
and
gs
aam
mov
jb
mov
pushf
xchg
xor
aam
cs
jns
dec
fsubl
mov
pop
shrb
and
jae
push
shrb
adc
test
adc
jae
and
push
ror
in
pop
cld
xor
xlat
mov
sub
push
pop
pusha
cwtl
shl
push
inc
insl
fst
cmp
bts
aas
pop
cld
dec
lea
adc
push
xchg
int3
inc
mov
mov
adc
stos
mov
sub
pop
xchg
adc
es
cmp
cmp
sbb
in
aad
inc
mov
hlt
lahf
adc
ss
inc
aas
mov
or
mov
lret
in
int
in
ja
mov
shl
insl
mov
mov
stos
push
and
mov
das
pop
bound
sbb
sarl
mov
aam
xchg
dec
xchg
loopne
dec
dec
ss
cmp
xlat
mov
das
xchg
enter
lods
cmpsl
pop
push
mov
cmpsl
cmp
aad
movsb
and
mov
mov
mov
fwait
and
jecxz
dec
ret
dec
pop
sub
call
or
aam
adc
lret
xor
out
test
sbb
psadbw
test
scas
cli
mov
idivb
sub
adc
icebp
sahf
popf
jle
pop
je
lcall
xorb
push
mov
out
iret
daa
pusha
and
das
fwait
inc
mov
fucomp
les
leave
mov
mov
xor
stos
pop
insl
jb
leave
add
add
push
lea
add
imul
int3
add
test
pop
das
add
jle
enter
mov
cmp
mov
adc
ds
pop
mov
mov
scas
jnp
jle
inc
push
adc
int3
xchg
movsb
outsl
inc
fmull
xor
mov
sub
sahf
jmp
lret
add
mov
lret
pushf
div
jmp
lds
push
mov
or
pop
or
sub
fndisi(8087
popf
jo
es
dec
and
in
repz
push
sbb
mov
loopne
lret
test
in
movsl
shll
mov
add
sub
xor
loopne
xor
sub
cmpsl
jle
lret
add
incb
sbb
pop
aaa
or
enter
loop
pop
push
lahf
iret
xor
inc
cmp
xor
jae
xchg
inc
addr16
xchg
gs
out
loopne
icebp
test
xchg
adc
xchg
adc
addr16
out
adc
push
jnp
aaa
fs
fists
cmp
mov
xor
sub
bound
pop
sub
clc
test
push
adc
jnp
fs
ret
xor
fidivrl
es
fimull
clc
andb
or
out
xchg
fwait
lods
and
dec
jle
adc
or
loope
subl
fadds
inc
mov
xor
jle
sbb
rcrl
add
mov
loopne
dec
pop
out
dec
inc
ss
mov
cmp
bound
xchg
adc
stos
not
and
mov
int
or
mov
cmpsl
dec
aam
movl
mov
jne
std
dec
inc
or
and
popa
icebp
mov
xchg
sub
mov
mov
mov
js
fnsave
enter
adc
mov
jge
scas
lds
or
gs
lds
fs
popa
subl
adc
xor
sub
popa
xor
mov
in
xchg
mov
lret
out
xchg
cs
dec
in
or
pop
in
pop
dec
jbe
mov
subl
cmp
inc
mov
out
pop
cmp
jo
movsb
push
sbb
stos
dec
cmpsl
push
or
inc
fwait
sub
pop
push
pop
loope
into
psraw
pop
scas
insl
or
js
xchg
enter
ret
out
mov
xchg
stos
lods
jns
test
fcmove
mov
jns
stc
sub
inc
dec
in
or
mov
mov
mov
push
or
dec
rol
inc
in
and
lcall
jo,pt
add
lret
jbe
inc
cmpsb
shlb
nop
push
and
jne
mov
push
and
push
imul
aad
fwait
test
loopne
sub
jmp
negb
shrl
fidivrl
ss
push
and
adc
rclb
add
ds
mov
xchg
inc
data16
out
or
std
mov
sbb
stos
test
jle
ret
out
mov
std
sub
pop
cwtl
fstpl
xchg
jg
out
stos
sub
cs
movb
cmp
shr
cmp
jecxz
adc
mov
and
shrl
pop
and
in
mov
aam
or
es
pop
push
mov
std
dec
mov
sbb
rcll
ficoml
push
leave
sti
std
loopne
lret
rorb
jnp
stos
and
je
add
adc
lods
adc
test
ljmp
mulb
sub
cmp
jb
sub
xor
jg
jmp
xchg
or
inc
push
ret
test
cmp
sub
es
push
mov
fsts
test
sbb
rolb
aad
jmp
inc
sbb
pop
imul
pop
xchg
pop
dec
jbe
faddp
in
mul
inc
sub
xor
mov
roll
xchg
pop
sar
dec
in
jl
or
icebp
inc
mov
jo
pop
push
enter
fs
fst
dec
lock
xor
push
sub
cmp
adc
and
mov
cmp
mov
rorl
mov
adc
xchg
loope
daa
sub
inc
sub
mov
pop
mov
inc
jmp
or
test
aam
stos
mov
sbb
pop
jae
pop
sbb
std
gs
mov
in
sbb
pop
add
int
pop
cmpsl
divb
and
inc
cmp
mov
rolb
adc
sbb
xlat
ret
xor
mov
shr
push
rclb
repz
cmp
jmp
inc
and
and
out
stos
or
xchg
test
cmp
jp
fsubrl
push
mov
xor
in
mov
shrd
mov
sub
insl
xor
jl
cwtl
ja
push
mov
inc
shl
loope
push
lods
cmp
outsl
and
cld
cli
cmp
mov
fstl
ret
mov
outsl
dec
mov
iret
repz
jb
push
sar
adcb
aad
addr16
hlt
insb
xchg
xchg
xchg
aam
sbb
cmp
mov
mov
push
movsb
jne
add
rclb
lcall
imul
sbb
xor
sahf
pushf
test
jbe
xlat
mov
push
xchg
in
lahf
dec
cmp
add
scas
xchg
dec
push
ja
lock
cmp
mov
inc
push
cmp
imul
stc
xchg
or
add
subl
out
mov
hlt
iret
testb
cmp
sub
mov
nop
push
dec
loopne
push
test
push
inc
in
mov
pop
cmc
test
push
mov
clc
out
push
jbe
lcall
loop
mov
scas
pop
in
shrb
mov
lahf
xlat
xorl
std
mov
js
sahf
lock
pushf
rolb
jg
mov
mov
std
inc
jmp
mov
aaa
pusha
and
dec
jns
pop
sbbb
icebp
fs
xchg
lock
aam
fiaddl
inc
lret
mov
aas
cmp
xchg
cmc
and
adc
pop
ret
mov
adc
or
xor
popa
lcall
mov
sbb
cmp
jns
dec
and
jne
aam
adc
jge
xchg
fnstcw
or
jbe
adc
or
pushl
add
add
stos
sub
jo
jl
mov
fcmove
lahf
mov
pusha
add
imul
push
xchg
cmpsl
push
push
or
or
pusha
icebp
jo
mov
add
dec
inc
mov
insl
in
stos
mov
jno
pop
add
mov
lock
mov
and
lods
xchg
stos
fcompl
mov
aad
cmp
das
popa
popa
xchg
test
imul
add
xor
fidivrl
clc
gs
xchg
cmp
adc
popa
cltd
test
leave
xchg
cmpl
movl
lea
icebp
sub
jge
vmulpd
sub
enter
in
lret
ret
sbb
je
les
sub
adc
inc
in
sahf
je
and
shl
inc
movl
mov
cld
pushf
loopne
jbe
ljmp
cs
ds
lret
dec
out
sahf
lods
ds
adc
enter
push
jl
aaa
fsubl
mov
adc
std
mov
mov
xchg
mov
sbb
clc
repz
scas
pop
pusha
jl
ljmp
sub
cltd
into
jmp
adc
adc
dec
cmp
addr16
sub
repz
ljmp
push
fs
jmp
jnp
add
dec
mov
add
icebp
lods
cld
inc
xorl
scas
sbb
into
jg
clc
cmp
sbb
mov
cltd
mov
pop
inc
aaa
aad
ret
and
xor
push
mov
adc
mov
cmc
adc
xchg
or
jge
inc
pop
sbb
rorb
loop
testl
jmp
call
je
jns
cmpsl
xchg
pop
aad
add
xchg
push
mov
repz
pop
pop
cltd
or
push
lock
mov
into
jg
nop
ljmp
sarl
mov
ljmp
adc
fldl
icebp
push
loop
rol
cmp
dec
test
imul
jle
xor
scas
mov
call
stc
inc
lahf
jno
cld
andb
repz
pop
bound
adc
xchg
xchg
hlt
cmpb
clc
push
mov
inc
mov
out
icebp
popa
enter
lds
push
jge
mov
adc
or
in
xor
loope
adc
jecxz
cmpsl
movsb
pop
inc
pop
mov
jo
js
iret
push
int
xchg
stos
movsl
aaa
in
inc
in
int
push
push
mov
fwait
or
ja
cmc
ret
fwait
cmp
in
addr16
inc
iret
int3
add
or
xlat
xlat
jae
adc
cmpsl
or
inc
dec
dec
cmp
dec
cld
add
sbb
iret
and
out
jmp
in
cmpsl
lret
jmp
cmp
pop
rol
nop
pop
cltd
es
mov
xchg
sbb
xchg
cmpsb
or
lods
insl
imul
sbb
sub
mov
mov
and
nop
pushf
bound
jno
mov
in
push
adc
das
fucomip
negb
lock
dec
adc
cmpb
loopne
jle
jbe
movsl
pop
pusha
testb
sub
lds
add
icebp
push
das
xchg
adc
mov
scas
push
mov
les
push
pop
andb
cmp
mov
mov
int3
mov
sub
pop
js
lahf
pop
jp
imul
cmp
test
ror
loop
clc
jae
aaa
dec
dec
push
jae
adc
shrb
and
into
cmc
jg
push
stc
lds
xchg
sub
mov
scas
push
subps
jno
push
xlat
fcomp
lahf
andl
mov
fcmovbe
push
cmp
xchg
xor
jnp
test
sub
and
dec
mov
out
dec
in
pop
aaa
stc
ss
rcll
inc
jg
stos
jle
cwtl
cwtl
sub
xchg
stos
push
repz
cmp
sbb
pop
outsl
pop
lar
mov
push
imul
sub
or
cwtl
incb
shlb
mov
inc
sub
lods
sarb
enter
mov
into
repnz
fwait
add
out
int3
fimull
into
or
inc
adc
and
xlat
xchg
push
or
inc
or
xchg
or
fsubl
jmp
mov
xchg
lret
inc
mov
orl
cmpsb
arpl
faddl
or
xor
pop
ja,pn
data16
xor
xchg
add
pop
pop
add
mov
jns
nop
movl
movsb
adc
push
repnz
repz
mov
sub
es
pop
inc
sub
pusha
sarb
mov
adc
and
movb
inc
sbb
or
test
loope
hlt
dec
cmpsb
les
fstpl
sub
insl
or
pop
mov
pop
xchg
or
mov
push
in
and
stos
mov
pop
ja
pop
es
repnz
xchg
adc
sub
adc
mov
fldenv
gs
xor
mov
xchg
cs
subb
icebp
movsb
ja
xchg
mov
das
sbb
lret
std
ja
xchg
cli
inc
mov
dec
push
pop
jbe
jle
in
dec
je
cld
arpl
adc
adc
or
sbb
and
call
ror
ss
sarb
adc
lock
sarb
in
aam
and
loope
mov
nop
cmp
push
ret
inc
lods
std
and
aas
lea
test
daa
imul
lock
sub
hlt
cmc
aaa
jae
mov
addl
mov
data16
in
or
dec
push
fmul
pop
gs
sbb
ror
dec
jae
insl
clc
cmp
lds
jl
inc
lret
aad
pop
sbb
fidivs
ja
mov
lock
out
imul
xchg
bound
sbb
push
adc
test
adc
mov
fistpl
xor
pop
and
xchg
inc
fisubs
pop
stos
cmp
or
sub
adc
aad
mulb
xlat
scas
sti
dec
xchg
jp
xchg
stos
mov
jmp
and
shl
fs
ret
push
loope
push
out
xchg
sbb
inc
out
mov
stos
test
icebp
lock
inc
popf
lods
movl
ds
pop
mov
add
sti
jno
push
adc
fdivl
lret
rcrb
adcb
cmp
sbbl
mov
or
cs
sub
or
jns
insb
pop
mov
push
ja
sbb
ss
push
out
cmp
push
loopne
push
aam
data16
into
inc
or
xor
in
mov
mov
adc
mov
out
cli
sahf
sub
pushl
pop
into
hlt
mov
dec
test
or
inc
das
dec
rcr
mov
dec
xchg
ss
sbb
fldl
rolb
mov
jnp
bound
hlt
and
adc
cmp
push
pop
xchg
or
or
into
push
repz
lahf
sub
xchg
jae
outsb
lea
xchg
inc
mov
call
xchg
cmpsb
cld
clc
adcl
cli
mov
dec
outsl
mov
push
repnz
mov
or
adc
mov
iret
test
sbb
push
repz
sub
insb
xor
and
cmp
xchg
and
add
out
repnz
loopne
sbb
lea
pusha
inc
pop
fs
rorb
cmp
aad
aad
lock
test
rorl
push
adcl
xor
fucom
push
test
fs
jno
xor
test
pushf
lret
and
or
xchg
or
shll
lds
lock
xchg
je
jne
popa
adc
loopne
jle
lea
sbb
fcompl
push
push
ja
out
mov
xor
stos
lock
enter
sbb
leave
cmpsl
scas
cmpsl
jecxz
enter
call
stos
sub
add
fdivl
jmp
ret
mov
add
leave
push
xlat
push
sub
in
pop
lahf
xor
sub
addr16
xchg
and
filds
inc
xchg
cmc
xor
push
stc
mov
mov
cmpl
mov
jl
or
and
cmp
fisubrl
out
rcrb
jl
out
test
add
sub
xchg
pop
push
or
or
mov
jo
add
inc
inc
lods
cmpsb
ss
stos
pop
movsb
mov
sbb
neg
and
aas
jbe
add
jge
mov
mov
lods
call
add
popf
gs
jecxz
scas
mov
mov
dec
adc
xchg
dec
dec
inc
dec
jmp
push
mov
cmp
xor
in
inc
jnp
movsl
lds
cmpsl
jg
jo
and
sahf
je
mov
hlt
pop
xor
iret
cmc
sarb
mov
pop
add
mov
mov
xchg
jecxz
ds
imul
xchg
push
adc
mov
lock
in
adc
popf
call
push
inc
scas
outsb
pushf
push
add
cmp
fiadds
xor
inc
push
lods
dec
xchg
add
xchg
inc
add
adc
inc
dec
sbb
push
xchg
fyl2x
rolb
dec
sub
in
cmpb
add
call
movsb
fisttpll
mov
add
mov
mov
sahf
sbb
outsl
sub
jp
sbb
mov
pop
mov
loope
cmp
adc
shll
enter
pop
pop
arpl
std
mov
stc
test
push
jae
sbb
fmulp
xchg
cmc
clc
dec
ret
data16
daa
lahf
fnsave
xchg
pop
pop
dec
das
mov
push
rcll
lea
loopne
inc
pop
out
inc
sbb
scas
sbb
test
pop
sub
xchg
mov
pop
rcll
pop
std
lret
fnstenv
mov
das
push
fwait
jg
movsb
mov
cltd
pop
add
jmp
xchg
in
lahf
push
gs
jmp
add
repz
sbb
xchg
push
das
cmp
xorb
xchg
dec
int3
pushf
fcmovnbe
push
fldenv
popf
aaa
mov
aam
shr
sub
int
into
mov
ljmp
mov
mov
fneni(8087
mov
rcrl
fisttpll
sbb
out
je
bound
std
push
bound
test
mov
sub
movsl
pop
add
ljmp
jb
int3
divb
out
fmulp
rcrb
xor
add
loope
sar
imul
ficomps
loop
fstps
fdivr
mov
psrld
test
mov
sbb
pop
jecxz
lcall
scas
mov
dec
xchg
mov
dec
push
and
push
sti
pop
dec
cmp
ret
dec
in
dec
cld
add
movsb
fs
jecxz
jbe
cmp
adc
mov
xorb
mov
mov
lret
lahf
fnstenv
xchg
adc
mov
fstl
dec
aad
andl
lahf
fdiv
sbb
mov
fisubrl
xchg
ss
fstpl
adc
lret
mov
adc
fcompl
aam
ja
xor
rclb
mov
loopne
jle
movsb
sub
add
fistpl
shll
xchg
sub
mov
mov
jle
imul
mov
das
mov
stc
sub
bound
in
popf
or
mov
mov
xchg
mov
jne
rclb
loop
pcmpeqw
pop
sarl
lret
fistpll
jge
pop
pop
jle
int3
and
xchg
mov
inc
cld
rclb
dec
in
popf
adc
jns
mov
aad
leave
sbb
dec
rolb
xchg
nop
push
push
inc
call
pop
sub
aam
movsl
cli
imul
xchg
xor
push
call
sub
cmpsb
sbb
neg
fninit
xor
out
pop
add
dec
iret
pop
sbb
insl
ret
xor
xlat
lods
adc
call
sub
rclb
pop
loope
in
adcl
in
jbe
mov
mov
mov
sbbl
or
sub
pop
sub
fidivs
lods
jmp
and
cmp
mov
pop
mov
mov
jmp
in
mov
mov
jg
add
jle
ds
mov
cmp
jne
shll
jp
push
mov
or
lcall
insb
jo
pushf
inc
xor
mov
out
and
out
movntq
popf
enter
or
xlat
xchg
xchg
jmp
cli
decl
std
add
adc
data16
push
cmc
bound
add
mov
popa
inc
push
dec
mov
or
aas
out
roll
test
fwait
adc
xor
outsl
lahf
ja
xchg
neg
out
adc
loope
clc
out
dec
add
xchg
aam
xlat
mov
add
mov
mov
aad
mov
dec
sahf
cmp
movsb
xchg
addr16
imul
sbb
scas
adc
xchg
jae
hlt
repnz
int3
rcrb
into
pop
push
sarb
cmc
push
dec
iret
ljmp
call
movsb
movsl
rorl
inc
sub
fmull
mov
out
stc
mov
dec
xchg
mov
dec
mov
sbb
call
imulb
int
jg
icebp
adc
fnstcw
dec
jb
filds
sarb
or
or
cmp
enter
push
cmpsb
test
pop
and
push
fldcw
bts
xor
sub
sub
es
xor
and
shll
fcompl
adc
popl
push
ret
mov
sahf
leave
xchg
cltd
sub
mov
iret
rcrl
stos
outsb
jmp
mov
mov
ret
jmp
dec
icebp
cmpsl
mov
cltd
gs
adcb
sti
jl
out
dec
int3
cmp
xchg
adc
or
inc
jnp
stc
dec
ret
lods
xchg
jle
xor
mov
repz
lock
scas
sbb
repz
pop
mov
aas
lret
jle
xchg
addr16
ljmp
push
enter
push
add
rolb
lds
sti
cmp
dec
mov
sub
loopne
imul
inc
icebp
jno
fcmovnu
lods
lcall
jae
ss
stc
dec
sbbb
jmp
mov
aam
enter
dec
adc
cmp
and
imul
outsb
pushf
mov
jmp
sub
nop
jbe
je
adc
dec
inc
arpl
pop
les
xor
lret
pop
mov
mov
adc
mov
jp
stos
push
inc
aad
xchg
ja
dec
test
dec
sbb
mov
fcmovnu
ljmp
pusha
inc
aas
xor
and
xor
mov
aaa
cld
jg
sbb
add
popf
into
movsb
nop
addr16
pop
xchg
cs
cmp
rcrb
sbb
and
xchg
cld
lea
mov
adc
pop
hlt
mov
push
nop
jmp
adc
lret
fistpl
cmp
sub
aad
sub
adc
xlat
sahf
push
iret
roll
ljmp
jle
and
and
or
sub
lods
pusha
adc
add
mov
shl
mov
iret
mov
and
ss
cli
in
push
mov
ss
icebp
std
test
cmp
cmpsl
jle
sbb
sbb
push
jmp
mov
pushf
inc
adc
rolb
xchg
stos
mov
stos
lods
int3
and
test
mov
repz
pushf
jecxz
cmp
shlb
out
or
enter
testl
sub
and
orl
cmp
adc
mov
cld
ret
jno
or
aad
lock
inc
push
test
sbb
repnz
cmp
int3
xor
pop
dec
popa
inc
jno
mov
pusha
jno
sub
repz
or
fwait
andl
cmpsl
pop
aaa
movsl
scas
pop
cmp
sbb
shl
dec
push
stos
mov
test
add
fdivl
insl
sbb
sti
cmc
mov
mov
test
xchg
imul
push
jne
inc
jnp
negl
pop
ja
adc
dec
fldln2
mov
insl
dec
stc
adc
push
repnz
mov
adc
lret
js
sub
add
inc
in
ds
inc
iret
adc
idivb
push
fwait
cltd
in
fwait
mov
lret
push
xchg
leave
insl
fucomp
out
movsb
scas
and
in
add
out
cmp
cmpsl
or
rcrb
add
inc
cmpsb
jp
mov
mov
cltd
jecxz
xor
push
add
mov
in
pop
jmp
outsl
or
ret
mov
mov
ja,pt
rolb
and
stc
dec
cmp
jo
rcrb
cmp
push
test
xchg
in
into
lcall
cmpsl
mul
mov
xchg
mov
inc
lret
stos
out
jp
mov
lahf
gs
push
push
into
or
xchg
fildll
loope
aas
dec
inc
ljmp
ss
daa
push
cmp
mov
inc
iret
aaa
xor
mov
and
xchg
and
mov
repnz
and
xchg
stc
add
scas
xchg
sbb
mov
and
gs
cmc
and
mov
testb
sub
inc
inc
dec
xchg
jg
loope
fimull
js
idivb
icebp
push
nop
nop
mov
dec
or
jae
xor
inc
xor
hlt
pop
push
push
sbb
inc
fistl
out
and
or
sub
shr
popf
push
xchg
add
add
ror
add
and
push
es
mov
cmp
dec
fxch
cmpb
data16
rorb
pop
xchg
repz
sahf
mov
mov
cwtl
cltd
and
mov
jae
inc
rolb
scas
lret
stos
xchg
nop
cs
push
cmp
aaa
sub
sub
pop
pushf
xchg
test
mov
insb
mov
pop
arpl
cld
sahf
sub
mov
xchg
sbb
cmp
insl
sbb
imul
in
mov
cwtl
sbb
test
mov
fdivl
jg
push
mov
mov
pop
shl
pop
cs
xor
dec
outsb
xor
xchg
and
cld
dec
jle
push
push
push
jo
scas
divl
add
pop
pop
je
or
pop
out
test
xchg
jl
pop
cmpsl
add
mov
pop
dec
mov
pop
push
jecxz
adc
test
sub
add
dec
mov
jge
cmp
into
pop
fists
in
mov
roll
sub
in
mov
sbb
adc
daa
gs
ja
sbb
pop
push
dec
sbb
lahf
std
push
push
iret
jno
in
enter
dec
xor
test
popa
push
xchg
aam
jns
lcall
sub
dec
outsl
add
mov
xchg
outsb
inc
inc
lea
aad
repnz
or
push
insb
adc
cmp
aas
fwait
lock
dec
jl
test
int
in
faddl
sub
jno
push
insb
mov
jae
pop
mov
mov
jl
imul
add
mov
sbb
dec
stos
cs
in
fisubrs
inc
dec
and
sbb
jge
in
loopne
ret
push
movsb
cmp
inc
jge
lret
cmp
stos
mov
fnstenv
xchg
pop
mov
repnz
int3
test
loopne
pusha
adc
pop
ret
repz
add
jge
or
aas
add
mov
xlat
je
mov
dec
mov
icebp
sub
repz
data16
cmpsb
repnz
test
mov
pushw
jo
inc
or
pop
jbe
aaa
scas
jo
int
ds
xchg
jecxz
jno
jle
adc
sub
bound
and
adc
or
sbb
repnz
jmp
nop
cmp
jno
dec
std
mov
mov
push
mov
pop
clc
mov
lcall
sahf
push
sbb
and
adc
sbb
aad
pop
rcl
xor
dec
cmp
pop
fwait
adc
push
or
pop
mov
loop
and
push
icebp
push
dec
mov
iret
jmp
cltd
xlat
pop
cmp
icebp
push
repnz
and
nop
inc
test
push
mov
cmpsl
movsb
lds
or
push
sbb
mov
pop
jns
mov
adc
jg
xchg
and
lcall
arpl
mov
xor
jo
mov
jns
add
cwtl
sbb
and
lock
jb
push
rcrl
pop
cmp
inc
mov
adc
mov
mov
fsubrp
or
cmp
loop
or
movsb
push
adc
dec
fs
inc
cld
orb
jmp
stos
ljmp
icebp
mov
push
scas
adc
push
jo
add
cmp
and
mov
xor
addr16
pusha
out
sub
xor
push
cmpsl
out
rorb
popa
xor
push
sub
cli
mov
shrb
scas
xor
mov
sbb
mov
cmp
out
fistpl
lods
cltd
and
mov
jb
pop
or
and
repnz
rcr
add
hlt
push
ficomps
outsb
xchg
sbb
outsl
leave
test
sub
jo
dec
fsubl
and
daa
lret
and
fmulp
stos
cwtl
arpl
xlat
and
arpl
roll
lods
outsb
clc
inc
xlat
popa
mov
repz
inc
adc
push
rclb
pop
inc
xor
aas
test
xor
fcomps
jbe
sbb
sub
daa
push
mov
lret
mov
movsl
push
inc
ss
jns
cmp
mov
xor
jp
lret
pop
lret
add
mov
push
mov
cld
es
insl
ds
das
jo
jnp
ror
lods
jecxz
std
or
mov
icebp
xchg
aam
pop
push
iret
or
mov
push
push
jnp
lahf
and
xlat
iret
in
inc
fnsave
or
xchg
into
shll
sub
test
adc
clc
imul
inc
dec
or
in
xor
mov
lret
rcll
adc
repz
call
roll
addr16
and
out
sti
mov
push
scas
push
repz
jmp
loope
and
aas
push
pushf
test
sub
fwait
push
cwtl
insl
call
or
dec
sbb
sub
mov
xor
call
push
scas
mov
fcmovnb
je
in
rclb
jo
dec
imul
sti
pop
test
dec
pop
push
dec
cmpsb
gs
lds
sti
sbb
aas
adc
aas
iret
mov
jo
cld
dec
add
mov
xchg
mov
dec
ja
xchg
sbb
hlt
pusha
lcall
nop
sub
ds
aad
inc
or
jle
in
jmp
ret
sbb
je
cmpsb
push
cs
jle
scas
jmp
lret
push
adc
cli
jns
cmp
test
sbb
mov
and
movsb
inc
addl
loopne
xchg
jl
dec
fcoml
xchg
jge
xlat
test
enter
pop
stos
or
dec
fiadds
lret
sbb
ret
jbe
les
mov
jle
test
ficomps
or
jo
jnp
xor
movsl
jmp
test
icebp
cmc
outsl
push
testb
sbb
mov
and
arpl
stos
mov
js
jp
call
xchg
and
inc
pop
bound
insb
test
adc
xor
test
outsb
mov
xchg
out
loope
in
add
inc
cmpsl
jnp
jmp
rcr
inc
cmp
stos
scas
lret
loopne
cwtl
gs
outsl
mov
je
aad
mov
pop
cld
mov
stos
push
sbb
pushf
mov
shlb
lea
mov
adc
dec
int3
pop
int
insl
jo
mov
mov
mul
pop
mov
pop
dec
jns
aad
pop
pop
or
sub
clc
orb
js
jg
rcrb
pop
mov
add
mov
lock
movb
add
cwtl
mov
mov
xor
fs
push
pop
or
mov
into
mov
pop
pop
cli
xchg
clc
lea
repz
fisubs
or
pop
dec
arpl
jb
out
jl
fisubs
jmp
mov
loope
push
ds
add
and
push
gs
push
xor
cmpsl
mov
cmp
stos
fsubrl
mov
icebp
mov
add
dec
inc
xchg
xlat
push
push
cltd
dec
jg
jmp
lahf
push
adc
pop
add
aas
xor
or
testl
or
into
jl
mov
data16
outsb
mov
push
arpl
in
pop
xchg
cmc
xchg
pop
ljmp
jns
mov
add
in
cli
cwtl
movsl
mov
mov
divb
ja
xor
mov
sbb
stos
xchg
cli
sti
mov
pop
imul
imul
inc
push
adc
shlb
out
mov
pop
jns
int
mov
and
aaa
push
push
sub
dec
insb
les
dec
mov
dec
mov
fimull
dec
test
lods
jl
or
xchg
dec
sub
add
andl
and
and
sbb
push
jae
es
dec
fucom
push
pop
xchg
repnz
repnz
loopne
or
mov
push
addr16
xchg
add
sbb
adc
movsb
pop
bound
mov
int
cmp
loope
jecxz
roll
ss
mov
mov
mov
les
mov
jge
adc
rclb
xchg
testl
adc
xor
aaa
ljmp
inc
repz
je
cld
scas
cmpb
pop
xchg
clc
arpl
inc
ss
or
cs
and
jno
fisttps
sbb
movsl
mov
xchg
ucomiss
shr
jbe
push
mov
pusha
lret
xchg
cmp
enter
xlat
xchg
lahf
aad
or
sbb
lods
mov
jns
mov
jl
pushf
cmp
arpl
and
repz
cmp
fisttps
cmc
sarl
mov
leave
sbb
icebp
lds
jge
enter
stos
scas
pop
addr16
add
jg
push
rcl
pop
repnz
test
sub
pop
pop
je
out
mov
fsubrs
clc
cmpsl
out
pushf
push
mov
imul
bound
rcrb
popa
pop
jp
push
pop
xchg
cmp
jle
ficompl
mov
adc
mov
jg
lahf
sti
xchg
push
sub
je
jp
dec
pop
inc
insl
inc
movsl
mov
dec
mov
nop
pusha
lret
int
xchg
mov
cmp
clc
pop
sti
stc
dec
jo
and
and
sbb
popf
and
outsb
wrmsr
je
mov
pop
sbb
addb
ja
sbb
jp
sub
mov
push
in
data16
mov
add
lock
jnp
ret
or
aas
test
push
dec
mov
mov
cmp
pop
nop
call
test
pop
sbb
aas
pop
loopne
js
inc
pop
inc
cmp
add
inc
pop
cld
or
out
rclb
int3
imull
and
cmp
xchg
dec
and
mov
sub
sub
inc
in
add
bound
daa
leave
inc
dec
xor
pop
repnz
je
add
mov
jnp
test
sbb
bound
inc
nop
inc
mov
inc
popa
dec
mov
mov
push
dec
inc
sti
les
cmp
fsubl
fxrstor
cli
std
sti
test
mov
mov
jge
sbb
movsb
pop
sbb
fidivrs
and
popa
fwait
lcall
gs
fisttps
jbe
xchg
pop
cmp
or
int
fistpll
shlb
js
mov
xchg
lahf
std
test
push
cmpsl
in
testb
stos
or
es
inc
jb
mov
mov
mov
cmc
mov
mov
push
inc
sub
sbb
sbb
mov
jmp
sub
addl
pop
fs
pusha
sbb
jbe
pushf
mov
sub
inc
ss
dec
popf
insl
stos
hlt
pop
lcall
lahf
push
dec
pop
addl
cmpsl
add
cmp
push
cltd
ljmp
xor
dec
test
mov
aam
pusha
jnp
and
mov
pop
cmp
insl
jo
insl
or
sbb
fiaddl
dec
fstps
es
addb
je
mov
mov
xor
icebp
mov
loop
shll
dec
xchg
out
jnp
pop
push
jg
mov
lds
das
cmc
or
jl
scas
or
outsb
adc
mov
mov
xchg
das
int3
popf
ret
inc
cmc
mov
jbe
call
mov
dec
loop
mov
sub
mov
pop
cmp
jl
push
or
sub
push
cmp
push
mov
mov
iret
vmovdqu
dec
fwait
enter
icebp
and
xorl
inc
and
and
scas
pop
gs
dec
aad
and
imul
push
sti
xor
jns
enter
mov
fs
js
test
or
fwait
add
mov
xor
lods
dec
jae
hlt
add
xor
leave
cli
out
addr16
pop
push
aad
mov
test
rcrl
cmp
int3
mov
das
cs
hlt
shll
dec
cli
insb
inc
pop
dec
dec
or
cmpsb
pop
pop
pop
inc
enter
inc
jns
add
mov
inc
or
dec
sub
jnp
cmpsb
mov
or
push
movsl
sub
movsb
bound
sahf
mov
mov
xlat
or
mov
pop
in
aaa
cmp
xchg
jmp
stc
jp
sbb
pop
rcll
aam
add
lock
dec
fdivl
push
fistpll
adc
and
push
ljmp
mov
and
xor
xchg
pop
or
add
inc
test
xchg
push
or
add
xlat
in
jbe
mov
xchg
mov
adc
jae
pop
bound
pop
adc
jmp
pusha
mov
and
xchg
mov
mov
sub
andl
sub
sbb
and
mov
rcl
jb
cwtl
inc
lcall
add
mov
das
ljmp
cs
sti
mov
lret
cmpsb
ds
inc
or
lahf
sub
cmpsb
iret
or
mov
push
dec
jae
cmp
mov
cmp
xlat
arpl
fs
adcl
hlt
call
iret
push
ljmp
sbb
and
lret
push
push
add
dec
test
test
das
lcall
stc
cltd
or
pusha
add
fcom
sub
out
cmp
addr16
cmp
daa
or
xchg
push
add
addr16
movsb
dec
add
rorb
mov
xor
pop
stos
mov
push
xchg
sub
sbb
mov
and
jne
imul
shrb
sbb
add
call
cmpsb
sbb
cmp
lock
add
outsl
adc
xor
dec
subl
js
mov
or
xchg
ret
fstp
out
xchg
push
pushl
repz
outsl
push
adc
sub
pop
mov
jge
add
and
cmp
jmp
mov
xchg
lock
push
mov
lea
mov
in
ret
lock
int
insb
aaa
xchg
cmc
js
push
insl
pop
ret
inc
imul
or
push
or
icebp
pop
add
or
lret
jnp
shll
idivl
mov
aaa
pusha
mov
movb
pusha
pop
and
test
cmp
leave
fcompl
cmp
rclb
testb
inc
das
mov
mov
fsub
mov
add
shr
mov
cmp
stc
sbb
sbb
adc
outsb
push
or
pop
mov
lret
mov
mov
cmpsb
daa
adc
ljmp
insb
ds
xor
daa
sub
lods
popf
into
xchg
cmp
jbe
dec
xchg
and
cmp
lds
sti
pop
push
pop
aas
mov
jg
cmp
mov
or
test
jmp
loop
sub
mov
shlb
ret
stc
mov
xor
mov
addr16
insb
enter
xchg
xor
fs
and
jo
out
mov
testb
aad
outsb
scas
sbb
xchg
popf
cmp
arpl
xchg
xchg
mov
shl
mov
out
idivb
ret
movsl
movsb
and
fdivl
mov
push
mov
ror
or
in
jne
cpuid
inc
adc
outsb
jmp
movsl
jp
xchg
int3
push
push
fistpl
int3
push
jo
jmp
and
jge
ds
dec
movsb
mov
xlat
cmp
xchg
xchg
addl
adc
icebp
aaa
les
insb
repnz
cli
xchg
test
dec
mov
or
jns
push
pop
pop
outsb
or
jae
cmp
subl
ret
push
mov
mov
and
mov
popa
ja
pop
ret
sub
mov
mov
loop
pop
inc
insl
jb
jno
xor
shrl
add
or
js
xor
or
or
jmp
cmpl
push
sbb
movsl
pop
push
or
movsl
adc
lods
add
lahf
lret
test
jecxz
imul
test
sbb
stc
test
ret
pop
cmp
int3
mov
pop
fs
les
dec
adc
push
je
dec
cmc
lret
mov
roll
push
fisubl
and
jmp
xlat
fcompl
test
aad
addb
sahf
add
setle
movsl
cmpsl
cmpsb
dec
push
sbb
mov
lret
and
idiv
or
ficompl
push
mov
loop
rcrb
lods
jg
hlt
insl
int
loopne
push
xorb
leave
inc
cs
dec
cmp
pop
outsb
addb
std
mov
outsb
cli
out
repz
and
inc
fwait
sub
mov
jnp
ds
out
insb
aam
imul
shlb
inc
xor
cmp
pusha
das
ret
xor
movsb
mov
jb
popl
sbb
push
or
adc
scas
mov
lahf
addr16
lods
cmp
and
dec
adc
lea
jle
movsb
mov
mov
mov
stos
lret
mov
dec
orb
push
xor
aas
jge
and
sbb
scas
repz
lods
dec
pop
pusha
add
adc
out
dec
jbe
mov
adc
nop
iret
icebp
push
stos
mov
in
pop
adc
xchg
sbb
sub
pop
xchg
jge
adc
mov
inc
test
imul
dec
mov
jg
into
dec
adc
push
and
push
inc
sub
and
repnz
je
testl
jge
mov
add
and
mov
repz
xor
mov
ds
fwait
xchg
ljmp
xor
or
mov
jae
xor
mov
ret
cmp
pop
lret
mov
mulb
lret
test
sbb
movsl
cmp
push
cli
loop
add
and
sbb
push
xchg
mov
fxch
inc
sbb
cmpsb
std
push
add
clc
das
insb
aad
aam
mov
inc
mov
mov
mov
jne
mov
dec
or
leave
push
xchg
jecxz
out
lret
jo
cmp
xchg
es
test
mov
shufps
data16
xchg
insl
mul
lcall
jno
call
fimuls
pop
cmp
fistl
je
insb
jne
mov
mov
mov
dec
jne
lcall
cmpsl
movsb
arpl
adcb
mov
out
push
fsubl
shl
outsl
sahf
dec
pusha
xchg
ljmp
fs
insb
sahf
dec
xchg
mov
sbb
iret
inc
inc
push
rorl
call
mov
aam
rolb
ffree
into
pop
cmpsl
loop
sub
stos
hlt
fdivrl
inc
in
xor
in
or
adc
iret
bound
jg
fdivrl
xor
lcall
push
jb
pop
fwait
dec
jp
in
cmpsb
inc
push
push
imul
fst
push
out
and
fcomps
test
pop
ret
lahf
xchg
sbb
xorb
dec
test
cmp
xchg
imul
push
insb
ret
insl
fcompl
xchg
adc
roll
ss
fmuls
ja
mov
shl
adc
shl
mov
push
fwait
push
xor
add
mov
fisubl
mov
aam
in
add
fs
jo
jbe
push
xchg
sub
xchg
dec
fldenv
add
add
push
jo
pop
push
push
mov
or
cli
sti
scas
fdivl
xchg
lods
daa
jae
cmp
add
pop
jge
push
pop
fdivs
add
adcb
fisubrs
aad
insl
and
adc
mov
cmp
out
fldcw
and
sub
jmp
outsb
cwtl
jmp
es
xor
push
mov
into
sbb
adc
xchg
icebp
nop
inc
sti
cmp
add
push
push
icebp
cmp
dec
scas
and
in
push
imul
or
sbb
dec
out
adc
push
decb
addr16
push
dec
xchg
push
repnz
adc
nop
sbb
xor
and
mov
mov
xchg
arpl
repz
test
icebp
push
imul
mov
bound
and
and
and
fidivs
cmpsb
sbb
scas
popf
ja
adc
cmc
outsb
cli
sbb
sub
in
xor
lret
or
stos
push
fnstcw
xchg
xlat
imul
xchg
xchg
or
das
ror
and
or
std
iret
push
test
bound
jae
jge
aas
repz
push
loope
lock
inc
jmp
movsl
test
int
cmp
lock
test
push
repnz
scas
rolb
test
sbb
std
dec
pop
andb
cltd
push
sub
add
pop
aaa
sti
push
fldcw
mov
int
sub
gs
repz
jle
out
cmp
mov
popl
mov
sahf
sub
sti
call
push
mov
bound
xor
xchg
mov
or
dec
push
dec
out
fwait
add
stos
aad
faddp
push
mov
inc
loopne
aam
scas
loopne
shlb
adc
cli
repz
cmp
in
iret
out
sahf
insl
sbb
je
xchg
outsl
add
push
orl
dec
aad
aam
int3
enter
lods
mov
mov
je
xchg
insl
mov
add
sarb
leave
loop
shrl
xor
out
pop
cmpl
arpl
push
jae
or
cmp
enter
inc
mov
push
mov
int
es
push
addb
test
sub
inc
je
fwait
daa
lods
fcoml
pusha
loope
loope
insl
cmp
xor
pop
nop
repz
cmp
inc
es
mov
and
icebp
insl
and
cmp
es
dec
inc
ss
orb
arpl
xchg
decb
jno
icebp
push
sub
fstl
js
cmpsl
loopne
iret
and
sub
mov
bound
aas
adc
addr16
adc
cli
shrb
xor
inc
or
nop
dec
adc
and
xchg
xchg
idivl
mov
jecxz
out
xchg
mov
xchg
add
sti
dec
imul
mov
fnstenv
add
pop
out
les
jmp
dec
mov
xor
sub
fbld
fldt
inc
in
mov
into
mov
into
loope
scas
xor
and
mov
mov
sub
loopne
adcb
sbb
pop
jb
mov
test
imul
and
mov
lahf
sub
int3
ss
ret
popa
push
adc
pop
out
or
mov
sbb
jb
addl
pop
cmp
lds
fldenv
mov
popa
or
sub
pop
cmp
iret
xor
cld
shr
mov
mov
add
es
imul
nopl
fcomps
popa
pop
xchg
shll
inc
out
inc
rcl
jle
jle
mov
adcl
mov
lods
lahf
inc
ja
das
jmp
in
jp
push
cmpsb
xor
fisttpll
fdivrs
and
mov
repz
or
aam
cmp
loop
push
or
cwtl
sub
push
cmp
mov
mov
cs
or
or
std
mov
and
notl
cltd
lcall
adc
enter
push
adcb
insb
adc
xor
out
mov
hlt
bound
jp
inc
jne
mov
jl
dec
loope
aad
lea
pop
mov
loopne
daa
inc
mov
pop
das
push
stc
les
push
test
cmpsl
je
jg
jl
mull
data16
lock
adc
jmp
rorb
pop
fsubr
cmpsb
cmpsl
cmc
mov
inc
bound
aas
icebp
inc
xchg
adc
aas
outsl
ret
scas
xchg
pop
mov
sub
mov
test
insb
js
call
inc
cmpsl
loopne
dec
aas
cmp
test
leave
sub
xor
stc
repz
jbe
xchg
popf
add
out
sub
mov
cmpsb
xlat
in
xchg
in
fwait
enter
mov
push
push
xchg
inc
xor
int3
jecxz
leave
neg
js
sbb
or
aad
ror
daa
or
xor
out
les
cli
fldl
das
xchg
sarb
adc
inc
movsb
sub
inc
mov
add
and
xchg
fdivp
and
or
addr16
sbb
test
sub
sbb
sbb
xchg
push
testb
or
fistl
ds
mov
out
loopne
out
push
sarb
xchg
jbe
decl
jl
fistps
xor
es
fs
inc
cld
jns
dec
jge
das
or
or
push
and
es
mov
fld1
push
cmc
mov
outsl
lds
lods
and
mov
push
je
fwait
jp
jbe
jb
sti
cld
push
arpl
popf
and
xor
mov
cmpsb
jmp
sarb
lock
sbbb
aaa
fcompl
je
sbb
mov
cmp
les
mov
test
xchg
mull
xorl
sbb
in
xor
dec
leave
push
xchg
scas
aad
or
hlt
mull
lock
call
pop
inc
mov
insl
sti
pop
sbb
in
or
dec
jae
subb
push
sub
cmpb
xor
lcall
xchg
add
stc
aad
ret
inc
mov
jle
sbb
fsubrs
test
add
fs
punpcklwd
push
in
push
pop
out
mov
jmp
cmp
lds
mov
pop
je
push
jecxz
insl
jge
pop
stos
mov
mov
jge
cmpsl
push
stos
cmpsb
pop
scas
sbb
pushl
sub
lret
cmp
jp
cmp
sbb
xchg
nop
adc
add
sub
xor
mov
push
cmp
cmp
mov
mov
adc
push
xchg
inc
or
jno
jp
out
scas
fwait
push
aad
dec
lds
mov
bound
enter
int
add
es
iret
fistpll
ret
pop
xchg
mov
adc
mov
push
scas
in
sbb
pop
iret
cmp
arpl
cltd
fbld
fistpll
pop
test
add
test
mov
rcrb
stos
pop
repz
les
dec
mov
bnd
xchg
test
inc
dec
stos
movsl
test
mov
ret
adc
push
mov
out
mov
and
dec
scas
sahf
icebp
mov
inc
iret
pusha
lret
sbb
cmp
icebp
mov
and
sbb
js
inc
ret
aaa
insb
xchg
pop
outsl
scas
repz
xchg
push
fwait
aad
scas
imul
add
push
cld
dec
push
into
outsl
mov
dec
fadd
arpl
ljmp
fs
cmc
pusha
sar
cld
js
add
and
les
shll
repz
cmp
and
stos
push
movsb
stc
xchg
pop
mov
stos
sub
test
xor
jge
sub
int3
out
adc
cwtl
popa
icebp
iret
xchg
cmp
adc
adc
jnp
push
xchg
mov
imul
rcrb
bound
pop
jecxz
jge
fistl
xor
das
es
lcall
lock
fstps
add
push
push
testb
push
dec
mov
inc
cmpsl
push
xchg
xor
ffreep
mov
rcrb
jne
sub
xchg
test
xchg
push
xchg
mov
repz
dec
cmc
pop
mov
flds
xchg
xchg
or
lret
lret
jmp
dec
push
add
in
push
cwtl
cmpsb
bound
sarb
or
mov
out
inc
dec
stos
adc
mov
lret
add
cmp
faddl
imul
jo
cmp
fwait
mov
xchg
int3
push
fnstenv
lret
jae
cli
dec
mov
aaa
sahf
leave
cmp
movsl
cmp
sbb
arpl
sbb
punpckhbw
fsubr
aaa
dec
push
nop
cs
xchg
into
addb
mov
add
dec
mov
negl
clc
xor
imul
pusha
jecxz
adc
adc
outsb
jg
aad
fcomi
rclb
inc
jg
shr
out
loope
mov
lock
sub
sbb
sub
stos
mov
inc
and
dec
adc
cltd
or
jmp
mov
jns
outsb
in
add
test
cmp
push
dec
bound
sub
enter
jnp
inc
inc
dec
push
xorb
push
ss
testb
pusha
loopne
sbb
fmull
popf
pop
test
fnstsw
lea
call
lahf
scas
push
rcrl
cld
hlt
xor
cmpsl
ljmp
jb
outsl
insl
lock
inc
daa
mov
mov
sahf
out
stos
outsl
cwtl
mov
jp
adc
ret
js
bound
mov
cmp
push
and
out
fstpl
pop
rolb
ja
and
hlt
int3
mov
shll
mov
cld
pop
clc
dec
pop
sbb
outsl
sti
cmp
cmp
mov
mov
aad
nop
push
adc
test
lods
mov
lcall
and
pop
xor
repnz
aas
pop
push
out
mov
std
pop
ja
add
mov
cmpl
mov
hlt
pop
push
sub
stc
icebp
shlb
sub
jmp
xorl
aad
and
lods
push
je
inc
cmp
scas
push
int
or
add
jmp
lret
or
add
fcmovnbe
and
adc
ror
add
jo
push
pusha
jb
pop
cmpl
cmc
enter
cwtl
fdivrs
push
pop
int
jns
jg
sbbb
mov
push
ljmp
lds
mov
xor
dec
xchg
add
cs
and
xchg
daa
sbb
cmp
out
jg
inc
stos
push
in
sbb
pop
or
js
in
enter
popf
popa
mov
es
add
arpl
cmp
and
adc
data16
cmp
sbb
fiadds
push
imul
xor
mov
and
addl
push
and
lahf
push
or
div
fwait
pusha
push
jnp
out
sbb
mov
test
jle
xor
dec
and
mov
mov
mov
lods
je
inc
pop
or
mov
pop
or
sahf
adc
mov
test
pop
jle
push
cmpsl
cmpb
mov
cmpsl
std
xorb
cmpsl
roll
ljmp
and
mov
sbb
lods
clc
clc
in
jge
dec
mov
cltd
adc
addr16
fisttps
jg
xchg
push
mov
and
cmp
sbb
mov
aas
push
sahf
orl
stos
jo
pop
and
mov
push
scas
push
fwait
adc
xchg
pop
xor
xchg
jmp
cmpb
ret
add
mov
js
cld
and
and
addr16
xchg
mov
inc
pusha
shll
push
push
or
stc
mov
fldl
xor
bound
cmp
dec
cmp
rorl
cmp
hlt
es
xchg
popa
or
pop
or
dec
shl
jb,pt
add
ret
ficomps
push
ret
inc
and
mov
xchg
fwait
sahf
shrb
scas
cmc
out
pop
testl
pop
out
gs
clc
jge
mov
jae
xor
mov
push
lcall
cmp
arpl
fnstcw
adc
cld
inc
dec
fstpl
dec
add
inc
or
dec
cmp
shll
cmp
js
movsl
js
push
insb
xor
or
mov
adc
mov
lret
imul
out
inc
cld
xchg
ljmp
pop
aad
adc
or
stos
fildl
aaa
mov
cmpsb
lds
mov
pop
or
bound
dec
hlt
xor
fiadds
mov
jnp
xchg
lahf
push
insl
or
jmp
pop
sbbl
mov
sbb
pop
test
or
and
scas
mov
inc
pop
ret
jl
lret
repnz
ljmp
pop
or
js
fiaddl
popf
push
xor
cltd
inc
pop
xlat
add
adc
jbe
push
xchg
ds
cmpsl
or
ds
jbe
mov
sti
jnp
mov
dec
xchg
push
cmpsl
notb
fistl
cmp
int3
adc
inc
fisttps
sbb
divl
and
jns
push
loop
test
inc
or
jns
mov
push
jno
jmp
fs
add
cmp
sub
fists
stos
mov
notl
xchg
cmpsl
xor
ja
data16
sub
cltd
sahf
push
scas
push
mov
pop
jae
insb
arpl
mov
pusha
sbb
scas
cmp
jae
xorl
sub
jb
mov
push
andl
dec
inc
sti
mov
jb
jge
cs
iret
fdivrs
dec
jnp
or
mov
imul
repz
mov
sub
xor
jg
in
cmpsl
shlb
testb
jae
bswap
ja
das
xlat
push
cs
sar
das
or
inc
inc
pop
and
jle
push
test
lret
fisubrl
insb
mov
jns
push
xchg
repnz
or
ss
pusha
adc
mov
fs
call
outsb
mov
in
movsl
pop
or
subps
dec
leave
inc
xchg
shll
sti
sub
cmp
sbb
cltd
mov
mov
lret
nop
jmp
mov
in
fcoml
outsl
rep
nop
xor
into
jns
add
popf
mov
or
mov
enter
jmp
sub
lcall
in
xor
lea
pop
out
stc
push
jp
xor
shrl
jecxz
pusha
shll
cmc
mov
outsl
popf
xchg
and
xor
fcompl
lods
pushf
push
daa
out
cmp
mov
mov
push
test
adc
dec
add
add
and
pop
pop
inc
mov
add
lea
mov
push
loop
leave
icebp
rorl
inc
ss
adc
pop
add
pop
mull
jne
les
aam
outsl
push
fsub
push
adc
mov
popa
out
dec
sub
jge
nop
jmp
ljmp
bound
and
sub
ss
cwtl
jge
mov
pop
lds
rol
ret
dec
jno
xchg
pop
scas
fistpl
fldl
enter
add
cld
adc
clc
ljmp
repnz
cmc
sti
out
mov
xor
push
sbb
xor
xor
sbb
dec
and
xchg
pop
into
fwait
add
loop
js
fs
xchg
adc
mov
mov
mov
jae
push
into
out
cmpl
dec
push
lock
cwtl
lock
test
or
es
push
adc
mov
adc
sbb
mov
mov
int3
std
xchg
gs
movlps
mov
jnp
ret
and
imulb
push
out
mov
or
dec
mov
dec
and
cmp
sarb
in
scas
mov
lret
loope
stos
xchg
out
test
in
jo
inc
mov
clc
adc
pop
movsl
mov
inc
sarl
negb
cwtl
out
ret
mov
mov
sahf
sahf
add
sub
sub
jle
int
xor
add
int
ficoml
das
dec
xchg
data16
test
les
addr16
inc
fildll
loopne
jmp
jns
dec
jo
ror
test
pop
jecxz
or
push
es
mov
in
movsl
cmpsb
popf
mov
imul
sbb
add
mov
xchg
jno
push
sbb
pop
fisubs
adc
jb
cwtl
mov
jge
fst
outsb
loope
jmp
scas
push
aad
gs
sti
add
adc
xchg
mov
popf
mov
and
lret
mov
arpl
dec
iret
imul
mov
outsb
mov
clc
fidivl
mov
mov
inc
movsb
mov
inc
xor
jnp
and
mulb
sub
xchg
int
icebp
add
fwait
or
inc
push
or
xor
and
mov
rol
and
filds
dec
mov
je
aaa
jge
movsb
inc
add
in
pushf
jo
dec
orb
dec
fs
adc
xor
aas
lods
jle
xor
mov
sub
jmp
or
and
mov
cmp
jl
stos
ret
adc
or
jnp
bound
je
sub
add
push
xor
ret
sub
lcall
jg
test
pop
mov
das
scas
or
pusha
jne
mov
mov
mov
les
je
mov
sti
out
mov
xchg
sti
mov
cwtl
mov
mov
or
push
push
xor
rolb
mov
jbe
movsb
daa
dec
or
jo
out
mov
popf
and
iret
lret
and
int3
add
das
or
and
call
dec
cmp
xor
fldt
xchg
push
lret
adcl
push
xlat
stc
jbe
or
ss
ja
pop
cmpsl
mov
push
add
loopne
adc
cmpsl
orb
adc
addr16
adc
repnz
mov
in
xor
ret
pop
pushf
push
mov
pop
xchg
xor
or
mov
out
xlat
xor
inc
cmp
xor
sub
pop
mov
pop
cmpsb
outsl
and
call
hlt
pop
jg
cli
xchg
mov
inc
pop
ja
idivl
ljmp
pushf
push
orl
mov
push
js
mov
xor
in
sahf
cmpsb
pushf
pop
mov
leave
cmp
xchg
sub
and
lahf
jle
sub
add
cmp
mov
daa
ss
xlat
xor
cmp
insl
mov
or
out
xor
fisubl
cmp
in
hlt
ljmp
jmp
lods
adc
mov
test
pop
rep
sbb
sub
lock
leave
mov
lahf
mov
lahf
lds
jns
test
jae
dec
into
outsl
push
xor
cmp
clc
push
jb
push
cmp
insb
fst
dec
lcall
int
mov
xchg
popa
jne
jbe
cmp
daa
vunpckhps
inc
fcmovu
sti
xor
xchg
fdivl
fstpt
dec
outsl
arpl
fs
mov
std
mov
dec
je
js
nop
dec
out
mov
sbb
test
mov
jg
ficompl
test
dec
inc
mov
add
sbb
mov
sub
rol
sbb
and
jb
push
fbstp
or
jge
dec
shlb
cmpb
aas
es
pushf
inc
xor
cli
mov
enter
sbb
out
out
mov
adc
pop
movb
loop
sub
std
xor
sbb
mov
shlb
out
test
test
pop
cmpsl
and
cmp
jbe
sbb
ljmp
and
sarl
mov
pop
mov
mov
pop
test
push
loop,pt
and
mov
hlt
data16
into
mov
lock
imul
shr
mov
stc
push
xor
fcomps
in
add
push
mov
add
xor
out
pop
push
add
daa
add
mov
mov
dec
cld
fstpt
repnz
add
enter
sbb
pusha
in
shl
fwait
jp
call
jae
add
push
lds
call
lret
sahf
sub
imul
xor
xor
inc
jmp
inc
push
mov
loop
sbb
fistpl
mov
and
in
adcb
mov
inc
hlt
mov
push
mov
push
stos
xor
dec
or
jge
stos
add
into
je
sub
sti
cmp
xorb
sub
xchg
sub
pop
add
jg
push
cmp
inc
int
mov
adc
in
sti
push
hlt
push
mov
sub
cmp
pop
pop
aas
jl
cmp
mov
inc
adc
mov
mov
pusha
icebp
push
or
sub
out
push
adc
cmpsb
adc
xchg
rcrl
jae
mov
push
mov
cmp
mov
mov
xchg
fisttpll
xor
jns
add
or
sub
rclb
lds
mov
mov
cld
jae
sahf
pop
mov
inc
inc
and
and
inc
mov
fcomps
sbb
sbb
jbe
inc
daa
cmpsl
xlat
rorl
lds
push
gs
enter
jge
in
pusha
inc
adc
movsb
jg
pop
sub
mov
adc
pop
inc
out
fs
lods
or
and
dec
lret
cltd
loope
lods
pop
sti
aaa
sbbb
sbb
xchg
pop
xor
adc
mov
push
push
aad
dec
lods
test
out
mov
cmp
int
scas
lock
and
call
roll
push
adc
sub
neg
scas
jecxz
scas
ja
insl
movsb
xchg
fs
mov
leave
mov
mov
fucomi
push
sbb
js
lret
jb
cmpsb
push
mov
loop
push
jno
push
iret
sti
sahf
xor
pop
mov
mov
into
lret
iret
ja
xor
int
into
imul
mov
dec
aam
or
and
add
and
cmp
lret
jle
add
mov
pop
cmp
push
sub
repnz
dec
adc
mov
xor
sbb
aam
push
loopne
pop
sub
inc
or
rorl
pushf
sbb
jno
cmp
mov
jmp
adc
rdmsr
add
jnp
test
imul
data16
lahf
push
ret
pop
add
dec
push
test
stc
mov
pop
fidivrs
sub
sub
je
mov
add
mov
mov
ds
sti
inc
popw
adc
aas
mov
sub
shr
aas
out
push
stc
jl
mov
sbb
lea
pop
cmpsb
push
or
ljmp
iret
pusha
je
je
jg
hlt
jne
jns
std
je
lods
dec
jl
push
pop
mov
push
jbe
outsl
test
adc
pmaxsw
data16
dec
and
shlb
jge
mulb
iret
imul
jae
imul
cmp
movsl
enter
cmc
test
push
dec
insb
call
out
dec
sti
adc
sub
xchg
mov
out
loop
mov
xchg
cmpsl
and
cltd
nop
movsb
insl
leavew
cmpsl
lret
outsb
xor
shlb
call
icebp
frndint
lahf
jl
mov
jae
pop
andl
xor
and
stc
aam
popa
push
inc
and
add
jg
xchg
dec
xchg
or
jp
fbld
push
push
dec
je
xchg
fnstcw
xchg
pusha
xchg
divl
out
pop
hlt
lea
adc
dec
movsb
iret
fisttpl
xchg
pop
jge
imul
jmp
loop
sbb
popf
jle
cmc
push
sti
pop
stc
pop
push
bound
add
out
push
cs
pop
and
lcall
mov
adc
rcrb
pop
in
ss
fisttpll
out
mov
cmpsb
ss
adc
and
mov
das
jmp
and
jae
jmp
xchg
mov
mov
stos
jno
dec
cmpsb
fdivs
insb
clc
fildll
xchg
jns
shl
pop
loopne
or
fstl
out
les
ffree
mov
inc
orl
mov
inc
sub
adc
add
fxch
clc
ja
add
outsb
pusha
mov
push
mov
mulb
jp
mov
loope
jbe
inc
push
or
clc
mov
push
int
clc
loop
jl
push
pop
xor
sub
mov
jno
inc
out
les
fwait
sbb
ret
adc
cmp
test
adc
or
cli
add
int3
cmp
dec
or
mov
mov
mov
je
pushf
sahf
outsb
jmp
jae
aas
sbb
push
dec
lcall
mov
cld
jp
push
adc
sub
xor
xchg
mov
mov
out
pushf
dec
add
fsubs
xchg
push
xchg
pop
stos
mov
lcall
cmpsb
xchg
arpl
push
adc
add
or
sahf
dec
nop
mov
sbb
mov
add
sub
out
data16
mov
scas
cwtl
fdivrl
das
lahf
pusha
cltd
or
xchg
push
mov
and
cli
and
push
mov
idivl
cmp
aas
jbe
pusha
std
and
pop
cld
fadd
mov
mov
fdivp
aas
dec
clc
mov
jmp
push
cltd
pop
lcall
xchg
sbb
lock
in
mov
enter
sub
sbb
pop
xlat
je
pop
adc
mov
jge
aam
add
push
js
mov
sahf
pop
mov
cmc
nopl
mov
cwtl
inc
adc
rcll
jbe
mov
xor
mov
pusha
ds
inc
xor
daa
daa
imul
jnp
pop
mov
push
dec
out
ror
dec
xchg
divb
pop
push
pop
xor
xchg
xchg
push
stc
out
pop
movsl
fcmove
pop
cmpsb
jno
std
shrb
and
cmpsl
inc
sbb
sub
push
or
adcl
sub
sub
repnz
dec
xchg
cmpsl
jmp
std
out
xchg
adc
out
sti
sub
inc
sbb
enter
mov
and
pop
sub
and
cs
inc
xor
dec
ja
push
pop
adc
mov
mov
add
enter
sbb
pushf
jge
sbbl
arpl
pop
or
xor
or
sahf
pop
add
xchg
dec
lret
repz
pop
jbe
mov
inc
dec
mov
shlb
inc
or
mov
sub
outsb
pop
std
adc
in
cs
xlat
enter
fucomi
fsubrl
jnp
dec
mov
sbb
notl
sti
inc
jbe
repnz
in
push
jns
in
cmc
repz
clc
sub
pop
cld
dec
jnp
ds
push
icebp
movsl
movsl
lods
insb
nop
xchg
rolb
xor
cld
test
jp
xor
imul
mov
fyl2xp1
js
adc
adc
fucomp
clc
pop
xchg
inc
aas
das
adcl
sbb
mov
scas
inc
lret
into
test
stc
subl
popf
outsl
push
push
repnz
xor
pushf
negl
mov
xchg
ja
out
jl
adc
repz
dec
addl
or
and
or
mov
repz
aam
repnz
sbb
addr16
jmp
sbb
mov
icebp
sbb
jno
push
bound
cmp
mov
mov
xchg
adc
adc
mov
leave
mov
mov
cwtl
mov
imul
loope
lods
push
fs
jb
push
pop
movsb
sub
xchg
jae
fsubl
dec
popf
dec
insl
mov
dec
sbb
lahf
inc
xor
cmp
mov
adc
xchg
inc
mov
and
popa
mov
pushf
lods
mov
mov
adc
jae
sbb
or
fidivrs
add
leave
adc
xchg
jo
adc
dec
mov
lret
and
pop
mov
test
xchg
jne
xchg
arpl
pop
and
xchg
mov
lea
mov
dec
jg
mov
pop
sub
inc
jae
pop
ljmp
mov
aaa
and
inc
sbb
dec
xor
fists
sti
insb
hlt
sub
dec
mov
mov
cwtl
popa
or
cmpsl
mov
mov
sub
or
loopne
jle
mov
inc
fistpll
bound
shl
or
fwait
add
pushl
xorl
or
cmpsb
lret
push
int
popf
mov
jp
stos
popa
std
fadd
push
dec
fwait
cmp
or
jae
loopne
and
sbb
jge
test
lcall
lret
push
mov
xchg
mov
cmpsl
subl
rorl
xchg
and
push
pop
popa
jbe
pushf
mov
sbb
pop
xchg
in
sti
lods
xchg
and
jnp
ret
mov
scas
cmp
pop
shlb
add
pop
jmp
cmpb
xor
jnp
mov
sub
sub
sub
dec
stos
stos
test
xchg
dec
aad
xor
dec
hlt
jo
mov
fbstp
es
lret
lock
or
push
jg
fs
psubb
clc
pop
push
pop
pop
sbb
pop
inc
and
loop
push
adc
or
jmp
mov
xor
inc
loope
pop
test
mov
mov
iret
pop
insb
inc
push
in
dec
scas
push
dec
cwtl
repz
ret
dec
dec
xor
jmp
sahf
inc
mov
repnz
das
xchg
push
jg
repnz
mov
shll
xchg
pop
stc
push
stos
lods
jp
dec
sbb
jecxz
arpl
mov
jecxz
mov
int
popa
js
add
movq
outsb
add
test
dec
jno
inc
jno
out
sub
into
cwtl
pop
add
or
push
popa
int
mov
sahf
idivl
mov
xchg
fcompl
mov
push
xor
adc
adc
test
pop
lock
pop
in
sti
jno
mov
push
popf
aaa
sub
clc
sbb
dec
data16
push
xor
lds
xchg
mov
test
push
inc
adc
pop
jmp
and
movsb
dec
jbe
xchg
inc
or
andl
testb
sub
xchg
mov
jp
sub
cli
popa
mov
cltd
aam
sbb
mov
push
inc
and
mov
mov
jmp
lock
dec
sub
pop
or
movnti
xor
xor
rolb
leave
jle
ja
jo
add
inc
adc
pop
pop
adc
ret
jmp
movsl
or
and
mov
push
gs
cmc
push
jle
xor
mov
testb
xor
cli
xchg
pop
out
xchg
pop
mov
sarl
jmp
icebp
cs
inc
jae
mov
xor
inc
ja
sub
ret
push
adcb
mov
mov
mov
std
or
fisubrs
lea
and
jae
cmpsb
push
mov
mov
outsb
add
andl
call
mov
js
loop
cmp
lret
sbb
cmc
sub
xor
mov
cmp
cmpsb
movsl
jnp
pusha
cmpsl
push
popf
push
ds
fwait
push
inc
adc
sub
popa
adcl
lea
unpcklps
hlt
icebp
mov
adc
ds
adc
xor
xlat
in
mov
adc
add
adc
sub
repnz
rcrl
cmp
mov
ficomps
mov
cld
imul
xor
dec
bound
pop
cmp
jae
mov
test
mov
jecxz
mov
pop
std
into
lods
jl
stos
dec
sti
xor
xchg
pop
fldcw
jmp
sbb
mov
sbb
xor
cwtl
iret
fsts
sbb
dec
insb
out
fdivrs
lret
in
lcall
je
sub
jecxz
sub
add
mov
ret
pop
aam
ret
addr16
push
and
sub
sbb
movsb
inc
inc
testb
mov
add
add
sbb
jp
sub
mov
sbb
daa
jnp
test
outsl
jmp
hlt
jl
les
stos
jle
sti
lods
dec
stc
jno
and
cmp
fimull
xchg
mov
out
xchg
xor
pop
sub
sub
and
dec
int3
sahf
stc
xchg
das
shrl
out
pop
sbb
cld
out
lret
mov
pop
outsl
or
adc
sbb
movsb
movsl
jge
push
sti
test
popa
dec
jno
js
and
xor
fcoms
adc
push
push
jle
movsl
shrl
imul
daa
sub
pop
xchg
inc
pop
mov
sub
movsl
sub
xchg
sbb
mov
inc
popa
lods
dec
xchg
mov
and
adc
insb
test
adc
rorl
sbb
pushf
push
mov
xchg
insb
xchg
push
test
dec
sbb
push
jae
cmp
aam
push
and
sbb
mov
stc
cmp
aad
or
sbb
pushf
iret
jne
dec
cmpsl
sbb
and
shll
dec
mov
jb
jbe
push
sti
pop
fisubrs
inc
mov
aas
data16
xor
and
ret
add
gs
shl
enter
cmovs
js
mov
pop
shlb
out
sarl
push
aad
out
ss
sub
inc
jge
ljmp
xlat
jne
fistl
into
and
and
mov
int3
pop
pop
popf
xlat
ss
mov
add
movaps
push
pop
and
sti
addl
adc
ljmp
pop
push
lods
add
add
xchg
in
stos
div
mov
cmp
inc
and
pop
push
lds
leave
mov
jnp
roll
and
andb
jp
and
pop
push
mov
add
fimuls
add
mov
mov
decb
addr16
xor
inc
ja
je
ficoml
mov
xchg
cmpsl
leave
push
xorb
shlb
mov
popa
aam
dec
xor
mov
push
jecxz
cmpl
mov
or
rcrl
inc
mov
js
fsubl
daa
fwait
loop
cmp
sar
pop
push
mov
outsb
mov
cmpsl
enter
xor
stc
clc
int
ljmp
int
in
imul
sbb
imul
lea
inc
add
iret
fwait
fwait
int3
adc
mov
mov
cld
inc
cmpsl
dec
sbb
outsl
incb
cld
add
loope
arpl
pop
xchg
mov
and
loope
and
fwait
add
in
popa
scas
add
jp
cmp
movsb
fisubs
icebp
call
jnp
xor
xchg
push
mov
imul
rcll
pusha
inc
mov
adc
fsts
sbb
hlt
jns
xchg
loop
pop
js
lcall
or
nop
ret
mov
mov
sbb
jmp
loope
lds
in
jecxz
mov
jnp
loopne
cmp
pop
and
mov
mov
add
push
and
dec
into
fdivrl
in
std
orl
lds
xchg
push
mov
outsl
push
mov
sub
test
xchg
pop
mov
dec
pop
outsl
push
daa
aam
mov
addr16
dec
in
in
mov
ret
ffree
mov
push
cltd
movsb
add
loop
mov
mov
inc
jne
mull
mov
icebp
mov
or
int3
and
bound
inc
or
loope
mov
mov
je
shr
lods
dec
test
movsl
scas
enter
repnz
out
and
rorl
xchg
mov
xor
xorl
dec
fs
shll
add
add
insl
addb
sub
xor
ljmp
es
pushf
aaa
shrb
daa
inc
pop
and
xor
das
cmp
push
xor
icebp
int
addr16
pushf
xor
dec
jl
test
jmp
insl
xchg
test
subb
out
push
xor
mov
cltd
fldt
xor
insb
cmpsl
aaa
sub
int3
call
divb
sbb
mov
inc
jmp
test
movsl
js
push
xor
loop
stos
jmp
inc
xor
xor
aas
mov
cltd
xlat
into
ret
mov
jae
jmp
lcall
test
dec
in
and
dec
and
push
dec
dec
mov
dec
mov
push
clc
stos
in
call
out
or
lock
push
into
movsb
cld
push
je
outsl
pop
lahf
imul
inc
test
mov
dec
addl
dec
adc
mov
stos
cs
imul
xor
mov
xchg
mov
shll
mov
jg
mov
adc
jne
xchg
dec
dec
mov
test
orl
adc
mov
insl
cmp
mov
push
ficomps
inc
xor
dec
pop
jmp
mov
sub
jb
mov
mov
fdivrs
clc
cmp
push
pushf
in
pop
mov
insl
sahf
fdivs
inc
bound
xor
shrl
dec
and
mov
cmp
cmp
out
decb
fldl
imul
inc
sbb
dec
aas
into
sbb
jmp
ss
pop
dec
mov
pop
jl
out
sub
icebp
or
imul
out
xchg
mov
lret
fistl
js
push
jnp
add
insb
adc
add
bound
rorl
push
adc
lret
mov
in
idiv
movntps
lock
jmp
lods
sub
mov
xchg
rorb
sbbb
push
pop
ljmp
fwait
out
add
xor
loopne
fcompl
cmc
jge
mov
test
stos
mov
add
cmp
popf
roll
sbb
pushf
add
inc
imul
stos
push
mov
cmp
inc
mov
aad
sbbb
shlb
add
aam
sub
fdivrs
jae
cld
nop
repz
push
int3
dec
loopne
dec
loop
sub
or
in
cwtl
lcall
push
gs
js
icebp
mov
lods
push
push
or
fadds
repnz
sahf
or
push
xchg
pop
pop
jbe
mov
mov
lret
call
int
pop
cmpsb
fldl
add
xchg
sub
out
std
xchg
mov
push
fnsave
vmwrite
lods
xchg
sub
mov
mov
call
and
adc
movsb
mov
sti
mov
cmc
mov
cmp
loop
dec
xchg
pop
mov
repz
iret
jnp
or
out
mov
sbb
lock
adc
je
stos
mov
mov
cmpb
push
pop
dec
xchg
and
loopne
cmpsl
lods
popf
je
rolb
xchg
inc
xchg
push
jp
lcall
pushf
fnstcw
ja
add
imul
scas
adc
pop
xchg
lods
out
mov
daa
or
inc
test
insb
add
xor
xchg
adc
push
sbb
sub
in
and
cmp
ficomps
xor
dec
insw
fildl
test
aad
jmp
ds
lret
xchg
inc
sub
in
sbb
fadd
insb
das
xor
clc
pop
add
and
sub
push
mov
mov
xchg
aad
daa
idivl
fistpl
inc
ljmp
mov
jle
dec
and
and
mov
hlt
rcrb
cli
mov
cmc
movsb
sub
test
inc
push
outsl
aad
rorb
add
fwait
lods
xchg
rcr
faddp
repz
cmp
in
out
pop
scas
cmpsl
xor
xor
clc
sbb
adc
iret
or
or
movl
call
outsb
sub
pushf
rcrb
xor
nop
cmp
pop
or
sbb
push
xor
outsb
cmp
das
cmp
jno
adc
sbb
xor
jnp
mov
push
loop
jmp
aas
aam
aas
fnstcw
and
mov
aad
sbb
lods
aam
sub
sub
dec
pop
add
mov
mov
hlt
adc
popa
jne
aam
pop
call
push
out
push
mov
mov
mov
adc
loopne
cmc
sbb
dec
lahf
rcrb
popf
inc
dec
dec
imul
cmc
negb
popf
loopne
push
dec
adc
out
pop
adc
push
xchg
sub
xor
popa
adc
icebp
or
mov
sbb
lcall
push
sbbb
or
inc
nop
subl
testl
pop
mov
fbld
in
stos
jne
push
test
mov
xchg
sub
sub
popa
dec
aam
lcall
xchg
ret
sub
shlb
add
cld
inc
fnstsw
push
das
xchg
jg
xor
outsb
lcall
xchg
jp
testb
icebp
xchg
cmp
fdivl
jbe
cs
push
xchg
jl
shrb
ret
dec
mov
and
pop
xchg
pop
imul
ss
jo
inc
inc
lea
mov
test
mov
lock
adc
adc
mov
xchg
mov
adc
or
inc
es
pop
mov
and
notl
push
sub
xchg
jae
icebp
mov
push
fsubrl
mov
dec
jp
inc
jnp
cli
std
jb
adc
dec
or
rcrb
daa
mov
sahf
mov
xchg
cli
mov
jle
imul
mov
pop
in
cmp
lahf
loop
rcll
jmp
leave
in
jmp
xor
pushl
aaa
ficomps
test
in
push
or
insl
push
in
mov
dec
lcall
inc
lods
xor
mov
or
sub
ds
sub
aaa
and
and
jo
adc
fldl2t
scas
lcall
pop
or
test
fstpl
out
sbb
das
into
xchg
push
ds
lahf
xchg
jg
lcall
add
push
fistps
jo
jl
out
inc
addr16
frndint
test
sub
lods
fxtract
pop
ret
ja
inc
sub
mov
inc
ret
pop
cmpsl
jb
lret
adc
call
push
pop
shll
cmp
or
fisttpl
in
xchg
scas
imul
xor
inc
cmp
xchg
fldl
xor
ror
loope
mov
xchg
insb
mov
jmp
inc
xor
jo
bound
and
jno
pop
sub
dec
lret
leave
lods
outsl
sub
sahf
mov
pop
leave
loop
aas
icebp
mov
or
push
pop
pop
xchg
aam
dec
cmpsl
pop
mov
push
pop
add
pop
sbbl
rorl
fildll
and
loope
dec
fisubrs
lcall
js
in
xorb
mov
mov
fdivp
sub
xchg
cld
pusha
push
imul
dec
xchg
bound
push
mov
sub
addr16
add
or
aas
in
faddl
inc
mov
fwait
cli
into
lods
fstp
jns
jns
call
or
lret
lret
jg
add
dec
fwait
cs
cmp
int
jbe
lods
stos
mov
in
push
cltd
xchg
dec
and
inc
into
jmp
push
dec
xchg
mov
sub
inc
and
test
cli
push
aaa
sti
loope
loope
loop
ja
mov
scas
and
aam
push
sbb
push
hlt
lods
mov
xchg
scas
nop
lret
repnz
jmp
dec
das
jle
nop
sub
cmp
enter
sbb
mov
test
sbb
push
aad
lcall
push
je
mov
stos
or
or
ficoms
into
or
inc
mov
lods
and
std
inc
sbb
inc
ja
lods
cmp
dec
adc
lods
mov
mov
ret
daa
hlt
jbe
insb
loope
xor
mov
inc
xadd
mov
enter
add
lock
pop
fstpl
cmpsl
cmc
idivb
cli
ja
and
cmp
sbb
mov
pop
pop
mov
pop
mov
adc
int3
add
hlt
fstpt
mov
leave
inc
pop
pop
call
rclb
jmp
jp
inc
out
jg
jo
pop
push
std
pop
dec
fwait
std
lcall
sarl
fldt
das
pop
inc
or
sbb
and
inc
inc
dec
into
and
les
ss
pop
fdivrs
push
and
ficomps
push
xchg
in
nop
icebp
or
fidivrs
dec
push
pop
pop
add
pop
jmp
jno
sahf
movsb
adc
stc
or
enter
jl
xor
arpl
ss
xchg
mov
mov
loope
add
cmc
pop
out
cs
fmul
daa
aam
in
jns
scas
adc
inc
dec
es
stos
sub
in
push
enterw
shlb
jne
mov
clc
cmp
push
cs
icebp
ret
mov
push
add
mov
xor
nop
jne
lahf
cltd
lods
inc
in
rcr
notl
leave
fcoml
xchg
or
jno
in
or
ja
test
pop
pop
mov
and
adcb
mov
int
dec
rorl
jmp
dec
cmp
insb
mov
out
cli
and
cwtl
ja
and
out
enter
in
inc
add
adc
inc
mov
in
aam
fwait
mov
cli
icebp
ljmp
out
pop
push
or
ss
icebp
in
cs
aad
xchg
cmpsl
and
cmpsl
and
pusha
pop
xchg
xchg
cmp
cmp
push
xor
cmp
je
ja
jmp
mov
int3
and
cltd
sbb
dec
pop
adc
mov
inc
subb
leave
push
cli
test
jg
pop
int3
xchg
cmp
jnp
xor
dec
adc
int
jne
sbb
shll
sbb
es
xchg
or
test
sbb
sbb
les
ss
push
sbb
mov
push
cmp
jbe
test
jecxz
mov
cmp
sub
push
adc
push
iret
jg
sbb
enter
and
call
sbb
add
xchg
dec
adc
cmpsb
cmp
inc
arpl
test
push
out
es
add
xchg
xor
cmp
xchg
aad
pop
test
add
push
push
ljmp
xchg
stos
add
dec
mov
movsl
jbe
sub
repnz
jbe
push
pop
fbld
pandn
jae
mov
jge
shlb
mov
notl
mov
loope
inc
fdivr
or
xor
mov
inc
inc
arpl
jo
xchg
adc
mov
jle
fwait
jnp
sbb
aam
mov
jg
inc
call
in
xchg
push
negb
ds
fldcw
leave
lock
cmc
pop
or
mov
jnp
mov
in
call
sbb
or
sahf
fildl
xor
lock
sub
push
push
fstpl
adc
lods
dec
test
adc
test
dec
mov
xor
push
cli
test
and
icebp
fwait
xchg
inc
push
pop
int
pop
je
ja
adc
mov
les
aam
cmp
push
pop
jns
dec
mov
push
inc
jmp
xchg
add
lcall
loop
shl
cli
lcall
push
inc
mov
subl
mov
mov
cmp
jnp
xor
test
shrl
mov
inc
jo
mov
mov
fs
not
lods
movsl
cli
jge
loope
add
cmpb
jnp
pop
xor
aas
xchg
or
out
rcr
cmp
adc
fdiv
push
and
add
or
lret
std
mov
daa
xor
pop
fsubrl
repnz
out
push
popa
add
push
push
and
int
dec
in
das
xor
and
sti
or
rorb
in
cmp
mov
dec
jecxz
mov
mov
push
test
sub
pop
mov
enter
ljmp
mov
faddl
jecxz
jmp
iret
mov
ja,pn
adc
and
jno
dec
aad
test
mov
mov
add
pushf
push
push
nop
fadds
sbb
es
xor
int3
cs
lods
xchg
push
or
mov
cli
test
stos
lahf
cmpsl
popa
out
mov
fsubs
lret
clc
int
movsb
jmp
loop
or
call
adc
dec
mov
sar
mov
loope
lds
mov
std
stc
lahf
insl
aas
push
sarl
in
jp
mov
jnp
xor
addr16
mov
test
sbb
cli
xchg
pop
and
notb
das
sub
adc
in
push
push
sbb
aad
sub
push
es
fucomp
std
fcmovb
lret
lahf
das
jns
jb
test
xchg
sub
repnz
shlb
pop
dec
ficompl
adc
imul
cmp
in
add
inc
push
inc
mov
aad
jno
mov
pop
inc
mov
mov
add
gs
push
xchg
xor
mov
xor
jg
outsl
int
inc
pop
sarb
or
pusha
aad
dec
rorl
pushl
jno
lcall
add
jae
test
stos
jne
mov
pusha
lret
sbb
js
fwait
nop
inc
mov
dec
aaa
mov
push
cmc
cwtl
adc
sub
scas
aas
mov
mov
jne
dec
cmp
out
adc
les
mov
out
push
in
mov
xchg
jmp
cmp
sub
and
xchg
gs
repnz
dec
sub
mov
int3
cld
int3
push
je
sub
test
fistl
mov
aad
insb
xchg
hlt
add
dec
jb
mov
dec
ds
aam
outsl
jecxz
cmpsb
andl
fistps
outsb
cmp
test
push
fcmovbe
mov
xlat
int
lea
mov
test
push
rcr
inc
xlat
ja
add
cmp
dec
pop
push
aaa
ja
mov
das
mov
leave
jp
xchg
and
sbb
scas
jp
and
ret
out
xlat
pop
inc
pop
inc
das
push
into
repnz
xchg
aad
and
inc
mov
scas
bnd
sub
out
into
cmp
push
popa
dec
jbe
sub
ret
ss
and
push
and
fsubrs
mov
push
enter
jl
dec
and
dec
jno
out
jae
int3
test
cld
jb
incl
scas
xor
pop
xor
dec
cltd
rcll
aaa
or
call
inc
jae
pop
sbb
push
cmp
xor
in
mov
or
sti
test
mov
inc
sarl
push
out
cmpl
and
fadds
js
ljmp
xchg
sbb
pop
jbe
int
xchg
push
ret
and
sub
jg
repnz
sub
mov
or
pop
add
fld
ss
push
dec
dec
cli
cmc
sub
mov
mov
loopne
cmp
enter
outsl
mov
lock
mov
adc
andl
or
or
mov
test
clc
insb
adc
ret
data16
dec
loopne
inc
add
lods
sub
sub
mov
sub
inc
fmull
mov
mov
jecxz,pt
push
jb
xor
lock
jmp
lret
and
add
ret
movsl
mov
sarb
dec
and
cs
rorl
jl
cld
jmp
pop
outsb
sub
jl
pusha
cmpsl
xchg
mov
and
pop
test
jl
xchg
ds
test
out
jp
cmpsl
hlt
and
pop
test
push
xchg
idivb
mov
adcl
inc
icebp
mov
inc
pop
iret
mov
inc
xlat
cmp
mov
mov
arpl
jne
and
pop
sub
jle
mov
push
sarb
imul
xchg
mov
adc
cmpl
lods
test
pusha
fwait
gs
fcmovbe
mull
int
into
jp
rol
cmpsl
inc
mov
push
push
jo
pushf
ja
sub
add
xchg
fidivs
mov
js
mov
mov
pushf
movsb
ds
cmp
xor
mov
sub
push
pop
cltd
jae
arpl
mov
mov
icebp
sar
shr
dec
aam
xchg
xor
fcoms
or
in
cvtpi2ps
inc
pop
pop
stos
into
jb
incl
fldenv
mov
add
out
iret
rclb
sbb
ds
adc
ds
jp
jb
add
mov
insb
xor
fistps
ret
push
fidivs
loop
cmc
or
ret
and
cmp
dec
mov
xchg
movsl
inc
mov
push
int3
xchg
mov
pop
aam
nop
leave
lret
pushf
mov
bound
or
sbb
mov
punpcklwd
and
outsl
vmovaps
and
pop
fimuls
outsl
adc
sub
mov
aas
add
fmuls
pusha
lahf
stos
inc
inc
popf
addr16
cmp
pop
lahf
mov
shl
add
insb
and
test
cmp
xchg
lods
aad
mov
outsl
or
push
sbb
dec
sub
addr16
xchg
test
or
loope
test
lock
mov
test
in
aaa
leave
push
loope
push
mov
lret
add
push
mov
sub
sub
lret
mov
enter
xlat
subl
imul
pop
fiaddl
dec
dec
lea
xchg
shr
fwait
fs
and
fisubrs
fimuls
mov
mov
push
fucomi
sar
movsl
mov
pop
adc
nop
scas
jle
movsl
rclb
mov
leave
mov
or
sub
mov
js
or
push
stos
outsl
repz
mov
popa
sbb
pop
or
mov
lea
mov
dec
test
mov
iret
das
dec
int
xor
adc
add
or
outsb
cs
stc
sub
add
push
xorl
jp
std
loopne
nop
push
add
xchg
adc
lahf
movsl
sbb
dec
lock
repz
call
sbb
orb
cmpsb
push
sbb
xchg
push
dec
imul
cltd
insb
sbbl
inc
cli
mov
in
xor
sub
test
mov
mov
sbb
dec
mov
pop
pop
fs
xchg
or
fldl
dec
mov
outsb
fs
popa
pop
outsb
rol
xor
jmp
jo
push
addr16
aaa
cmpsl
pop
shl
sti
xor
and
and
loopne
into
mov
stc
mov
xor
frstor
outsb
lret
pop
in
jae
aam
inc
test
inc
int3
movl
gs
idivl
nop
test
sbb
test
and
cmp
inc
fwait
and
ret
push
jmp
out
jmp
mov
movsb
outsb
xchg
xor
cmp
int
jp
dec
das
mov
and
lret
or
and
pop
jle
push
and
push
inc
inc
int3
pop
jbe
pop
inc
and
fnstcw
xor
mov
dec
jecxz
in
les
popf
js
jb
adc
sub
pop
jle
xor
add
push
aaa
inc
jnp
negl
fcmove
notb
jge
sub
ss
xchg
popf
rcll
std
mov
icebp
imul
xor
or
fwait
ds
mov
push
pop
adc
push
fnstsw
xchg
repnz
mov
fcomps
mov
scas
fsts
and
cmp
xor
and
inc
dec
lods
fisubs
dec
loope
insb
aaa
out
shrb
and
subl
dec
sub
or
aaa
add
lret
xor
lcall
aam
std
adcl
sbb
pop
bound
scas
subl
mov
aam
test
jp
xchg
std
aaa
clc
test
jne
jmp
pop
jne
or
push
push
jno
je
arpl
jle
cli
aaa
sub
push
outsb
and
xor
mov
in
pop
jnp
dec
push
lods
mov
sbb
andl
sub
jo
cmc
stos
movsl
dec
fdivs
sub
movsb
push
cvtdq2ps
xor
movsl
inc
adc
ret
pop
aad
ljmp
mov
jo
ret
outsl
aam
xor
inc
in
loopne
pop
divb
inc
mov
je
dec
lods
ja
pmaxub
mov
xchg
cmpsb
or
xchg
fidivrl
movsb
aas
dec
jg
jae
push
cmp
ret
cmc
in
jne
mov
xor
jae
jno
jnp
inc
sbb
adc
dec
lret
popf
adc
mov
jae
fcoms
andb
xor
mov
loope
jmp
cmpsb
mov
lahf
sub
movsl
cmc
and
xor
inc
mov
out
push
cmpsl
inc
cmp
push
ss
popf
sub
cmp
pop
int
cld
jp
jno
clc
ret
arpl
data16
out
add
test
adc
jg
mov
shrl
std
sbb
loopne
iret
scas
int
leave
repnz
xor
out
and
js
sub
hlt
imul
mov
cmp
push
int3
ljmp
cmc
jmp
clc
or
xor
shrb
jne
sbb
inc
addr16
xchg
xlat
ds
insb
fstpl
rclb
leave
lds
mov
ljmp
inc
repz
push
aaa
cmp
mov
mov
dec
cmp
movsl
jo
fdivl
pop
sbb
popa
out
pop
adc
cltd
push
and
sub
add
mov
outsb
bound
xchg
lea
cmp
mov
adc
jmp
mov
mov
lret
into
gs
push
mov
stos
cltd
add
inc
inc
sbb
mov
cmp
pop
lods
gs
popf
push
jb
sbb
xchg
push
dec
inc
subl
cltd
call
divb
cli
jle
add
test
mov
aam
and
insl
inc
in
ds
jbe
and
loop
lods
movl
xchg
or
xlat
loope
xor
out
sbb
insb
or
aas
pop
ds
je
dec
push
nop
jb
data16
xchg
shll
pop
cmpsl
mov
rclb
loop
lods
cltd
cmp
scas
and
mov
hlt
fsubl
or
pop
adcl
xlat
or
lods
cltd
lea
daa
push
in
adc
mov
daa
or
popf
inc
out
jb
mov
icebp
mov
mov
jnp
fistps
sub
or
nop
pop
js
or
mov
xor
push
inc
xor
or
mov
stos
mov
enter
sbb
shll
lret
sub
xchg
loope
or
and
xor
mov
push
mov
ljmp
cmp
fidivl
lods
xor
aaa
mov
or
mov
mov
cld
jo
jns
mov
fistpl
cmp
cs
add
mov
incb
out
in
sbb
pop
gs
dec
js
in
pop
push
jge
mov
int3
loope,pn
jmp
mov
push
cmpsl
repnz
push
fisubrs
popfw
sarb
jae
movsw
das
hlt
push
pop
jae
idivl
and
shrl
repnz
aas
cs
adc
cli
pop
sti
call
lret
into
cmp
das
out
lods
rclb
sub
jo
inc
xchg
int
std
mov
mov
insl
je
mov
fnsave
ret
or
insb
dec
add
pop
push
dec
pop
imul
aas
dec
enter
std
scas
adc
cmp
mov
pop
int
push
stos
loope
fmuls
aam
fistl
add
in
add
frstor
ffree
out
xor
mov
pushf
and
jecxz
inc
xchg
testl
cmpsl
scas
mov
adc
pop
dec
push
inc
aaa
jne
dec
or
insb
in
insb
es
sbb
xlat
inc
jne
iret
jg
mov
mov
push
xor
fcom
xor
xor
cmovge
clc
repnz
adc
adcb
ret
int3
mov
pop
je
sbb
and
aas
pop
mov
iret
push
mov
and
mov
rcr
ljmp
scas
add
lods
jnp
pusha
not
ljmp
arpl
push
or
repz
dec
into
int3
or
and
enter
sub
mov
fcompl
mov
stos
cmp
jge
rorl
mov
xor
je
sarl
les
lds
lods
aaa
jno
stos
inc
sub
cmp
jnp
dec
push
or
dec
xchg
sbb
push
sbb
jle
adc
add
xchg
repz
out
inc
sbb
outsl
movsb
push
bnd
scas
xchg
cs
pushf
ret
test
test
mov
mov
push
iret
imul
or
mov
cltd
jne
push
jge
stos
aam
mov
dec
lods
sar
dec
sub
inc
mov
xchg
mov
gs
mov
clc
mov
lret
mov
pop
out
pop
test
insl
add
fsubrl
add
sti
outsl
dec
hlt
jmp
movsl
jle
stos
hlt
int
pushf
xchg
cmpsb
arpl
dec
sbb
movsl
imul
pop
std
xchg
test
add
insb
insl
aas
sbb
movsb
or
icebp
rcrb
std
jbe
stc
cmp
scas
mov
lods
cmp
lret
push
fstpt
inc
or
addr16
and
push
loope
shl
xchg
push
cmp
pop
cwtl
in
dec
ds
in
mov
pop
add
dec
cmc
sub
mov
das
pop
sbbl
sbb
cli
out
jmp
subl
jbe
push
cld
into
jl
fld1
out
lock
inc
sbb
mov
test
sti
in
icebp
fdivrp
in
jbe
adc
imul
pop
adcl
les
xchg
jp
shrb
xor
ret
jno
push
lcall
arpl
dec
push
xchg
or
fildll
into
mov
out
outsl
rolb
mov
into
data16
bound
test
mov
adc
mov
addr16
divb
jo
fcomi
push
ficomps
stos
xchg
jne
and
adc
pop
mov
sub
and
ds
popf
out
lret
adc
daa
icebp
pop
push
push
sbb
js
push
fwait
mov
shrl
scas
jmp
int
aam
adc
jmp
notb
mov
adc
sbb
cmp
pop
adc
pushf
sahf
jp
fdivs
ret
loopne
fisubrl
cli
pop
jbe
pop
sti
mov
mov
or
rcrl
test
adc
hlt
xchg
stos
adc
sbb
push
inc
cmp
ds
data16
imul
xchg
scas
clc
xchg
sarl
mov
test
and
sbbl
jae
and
inc
repnz
test
mov
leave
mov
loope
add
sahf
aas
arpl
inc
push
pop
xchg
mov
pusha
cmp
jne
loop
add
pop
fwait
aam
into
cwtl
sub
jo
gs
into
or
jle
rclb
aas
movl
jnp
addb
les
mov
dec
cmp
mov
movsb
sbb
dec
ficoml
scas
arpl
lea
fstpt
iret
imul
sbbl
lahf
das
cmc
stc
rep
sbb
jns
adc
mov
xchg
dec
andb
cmp
scas
and
das
pusha
mov
fidivs
dec
ds
shll
lods
sarb
sbb
out
inc
lods
jp
out
dec
js
push
into
cmp
popa
push
or
xor
loopne
pushf
mov
xchg
inc
lea
xchg
sar
ds
lret
cmp
xchg
add
out
int3
xlat
pop
push
mov
adc
in
test
aas
leave
sub
push
daa
mov
outsb
lock
aad
or
stc
pop
js
xlat
hlt
iret
jmp
push
test
rcrl
shl
cmp
insl
adc
addr16
shll
stos
pop
mov
cmpb
pop
jp
jno
or
push
aas
test
xchg
enter
scas
mov
lds
sbb
and
xor
mov
in
xor
stc
mov
mov
pop
and
rolb
add
cld
mov
cmp
test
cmc
pop
inc
mov
mov
sbb
jbe
les
cmp
jns
mov
or
push
test
fsubp
pop
sbb
xor
push
jae
in
pop
lods
clc
out
sar
push
lds
xlat
xchg
lds
dec
sub
je
insl
cltd
ljmp
xchg
add
xor
lahf
cmovo
iret
dec
mov
repz
fsubl
sbb
pop
iret
lahf
sbb
sub
loopne
xorb
fmul
popf
outsl
cmp
jle
add
jo
dec
push
shl
movsb
rorb
inc
or
int3
and
andl
xchg
xchg
xor
in
push
aas
pop
lahf
sub
mov
pop
xchg
and
or
cmp
mov
xchg
dec
push
fidivrs
push
in
imul
dec
in
mov
aam
jge
test
das
mov
dec
pushf
mov
jo
pushf
bt
jle
xor
ds
sbb
mov
mov
cmpb
push
loopne
test
sti
sbbb
or
lcall
and
loop
push
push
dec
repnz
jle
add
lds
inc
mov
test
aad
cmpl
repnz
or
sbb
stc
push
scas
sub
daa
mov
xchg
pusha
movsb
shl
push
mov
lcall
and
sbb
adc
add
cs
jmp
aaa
out
adc
push
push
bound
push
mov
push
sbb
pop
test
pop
cltd
cmp
clc
cmp
sbb
test
cwtl
mov
test
andb
lock
fwait
push
stc
scas
iret
int3
xchg
cmpsl
in
cltd
lahf
loopne
sbb
clc
cs
test
add
shl
mov
cltd
fmul
ficoms
adc
cli
pusha
adc
push
ss
mov
fimull
insb
sarb
mov
cld
pop
xor
lea
jg
sub
popf
fcompl
pop
inc
outsb
dec
addl
add
jmp
push
or
mov
aaa
stc
xchg
push
mull
inc
xchg
sbb
adc
adc
icebp
add
pop
jnp
out
adc
cmc
and
pop
shufps
push
sbb
dec
sbb
mov
sbb
adc
sbbl
push
in
jnp
cmp
loope,pn
in
hlt
xchg
mov
test
cmpsl
xlat
daa
mov
lcall
sub
adcl
ss
lret
pop
sarl
xchg
push
std
pop
xor
mov
jae
or
in
test
outsb
lock
scas
or
fdivrl
push
xchg
sbb
xchg
mov
add
fdivs
dec
push
inc
adcl
mov
add
pusha
xor
lret
jae
inc
jl
or
xchg
xchg
bound
or
aam
xlat
pusha
jge
sbb
js
cmc
out
aad
sbb
ret
ja,pt
and
xchg
daa
andb
cmp
cmp
hlt
push
leave
out
pop
dec
add
shlb
icebp
mov
arpl
xchg
mov
xchg
inc
or
sahf
ret
sti
cmp
idivl
insl
fdivrl
mov
enter
cmp
jl
sarl
inc
stos
dec
adc
mulw
xchg
insb
mov
cld
pop
push
ss
cld
pop
dec
add
lea
out
jbe
shlb
aad
int
sub
das
pusha
lock
fildll
out
inc
popf
das
add
pop
lret
mov
daa
fidivl
or
test
les
or
sub
mov
in
movsb
stos
lahf
test
sub
dec
pop
js
lret
sbb
sahf
pop
sub
icebp
jns
mov
dec
movsl
xor
les
pop
mov
jns
dec
pushf
sub
leave
jo
cmp
adc
movl
add
jecxz
or
pop
dec
sub
enter
cld
inc
dec
fcmovnbe
in
mov
jg
jge
mov
mov
scas
movl
addr16
lods
fnstenv
je
mov
xor
add
js
test
cmp
repnz
clc
jmp
fiadds
in
outsl
cmpsb
shrb
cmpsb
es
lahf
mov
pop
inc
inc
aad
xchg
pusha
daa
sub
push
in
insb
pop
rcrl
sub
es
outsb
sbb
lock
ss
aas
cwtl
aaa
mov
mov
mov
shl
cmp
mov
pop
das
mov
sub
dec
or
clc
mov
nop
insl
sub
push
add
xlat
fldl
mov
cmp
mov
ret
xchg
push
lcall
xlat
stos
cli
int
insl
sbb
outsl
dec
rorl
cld
orb
xor
adc
adc
and
pop
enter
in
and
dec
ljmp
xchg
repz
lret
mov
imul
shlb
bound
repz
push
jbe
push
dec
xchg
lea
mov
push
je
inc
cmpsl
hlt
dec
pop
jb
aad
cmp
repnz
push
stos
sbb
jecxz
pushf
into
mov
out
stc
call
mov
or
mov
sub
dec
xor
push
cs
aaa
leave
pushf
mov
sub
xchg
subl
iret
hlt
sbb
sub
push
sti
addr16
push
mov
cwtl
or
js
out
mov
sub
nop
cwtl
stos
es
in
stos
jg
or
jae
mov
fnstenv
and
xor
mov
arpl
rcrb
stos
push
rcl
xchg
iret
mov
test
je
nop
test
inc
or
adc
pop
jnp
cvtps2pi
mov
inc
lcall
gs
add
xchg
cld
mov
or
sub
arpl
and
xchg
out
jg
push
test
shrl
cmp
dec
xchg
xchg
test
bound
js
push
pop
adc
push
adc
insb
aam
jl
push
imul
fists
rorb
lret
add
jmp
push
pushf
sub
cltd
outsl
push
lcall
jge
dec
ret
cmp
insb
mov
imul
cli
shrb
nop
sbb
notl
rcrl
std
and
pop
inc
jae
mov
sub
cmp
dec
sahf
push
sbb
shrl
add
ja
mov
xor
or
jp
add
int3
ret
jg
xor
cmp
and
repnz
stos
notl
jbe
dec
push
addr16
sub
mov
xchg
xlat
sub
mov
into
out
fstpt
repnz
or
test
clc
mov
mov
jae
inc
inc
push
shlb
loope
lods
cmp
sub
repz
fs
mov
mov
xchg
sbb
in
inc
jo
roll
insl
scas
adc
rclb
jl
mov
cmp
lds
jl
stc
and
lods
cmpsl
mov
push
sahf
sbb
imul
push
push
mov
fldl
popf
dec
pop
cmpsb
sbb
lahf
mov
add
fwait
cwtl
adc
inc
adcb
imul
scas
in
sub
adc
sbb
fwait
leave
sarb
xlat
stos
cmp
shlb
mov
repz
xchg
sbb
out
push
je
inc
xchg
mov
fwait
insl
in
sub
xor
push
mov
repz
add
pop
nop
ds
fwait
out
fmuls
sub
push
pop
and
fisttpl
and
cmc
enter
pusha
xchg
notl
add
and
int
push
mov
jge
pop
add
and
inc
lds
arpl
pop
and
sub
cmp
push
jmp
pop
mov
or
pushf
sahf
inc
dec
dec
and
insb
pop
cmp
in
jmp
fnsave
push
out
lds
fidivs
cmp
inc
insb
jg
jb
mov
cmp
xor
push
inc
pop
les
adc
dec
pushf
push
sti
scas
inc
mov
sahf
shll
jbe
xchg
ljmp
xchg
rcrl
mov
dec
rol
lods
mov
int
pop
in
ss
jb
repz
pop
xor
out
jecxz
push
ja
mov
add
xchg
xor
inc
outsb
mov
stos
outsl
push
lods
jl
or
dec
mov
cmpsl
pop
sub
pop
fprem1
in
adc
data16
and
jns
in
sub
enter
sbb
mov
daa
sbb
and
test
cmp
scas
pushf
push
push
xor
std
cmp
sub
sub
mov
or
gs
xlat
cmp
dec
mov
push
mov
lods
mov
mov
pop
loopne
ss
aaa
cmpsl
data16
rolb
xchg
cltd
fstps
fsubrl
xchg
sub
fcoml
test
pop
mov
or
jb
cltd
ss
add
push
popf
jp
cwtl
push
leave
mov
jb
xor
mov
fs
scas
sub
scas
lock
clc
jl
xchg
test
sub
jle
mov
shrl
repnz
mov
jnp
or
out
es
sbb
stos
mov
jnp
inc
cld
dec
jmp
imul
gs
xlat
mov
adc
push
and
leave
jno
or
jno
daa
arpl
sqrtps
out
cmc
and
pushf
mov
push
mov
bound
into
mov
movsb
pushl
insl
sbb
test
sahf
not
insl
push
sub
or
mov
mov
dec
inc
lea
inc
outsb
call
js
imul
shrl
sbb
mov
and
fcoml
nop
sub
popa
cmp
adc
lahf
push
cli
clc
xchg
sbb
fdiv
cld
pop
pop
ret
mov
aad
mov
mov
or
jae
mov
out
and
clc
inc
aam
jmp
jecxz
push
stc
imul
and
cld
loopne
test
pusha
xor
nop
mov
mov
sbb
push
cmc
adc
leave
mov
movb
add
mulb
ret
mov
cli
adcl
popa
in
mov
aaa
cmpsl
sbb
or
adcb
stc
mov
in
dec
or
call
push
call
ret
jp
bound
sbb
add
insb
add
inc
std
mov
ret
and
rorb
stos
ret
ss
int
popf
lods
je
pop
jecxz
pop
add
mov
fs
mov
sbb
aam
testl
mov
cld
pushf
push
xor
jecxz
icebp
fnstenv
push
xor
xchg
mov
gs
das
adc
rolb
inc
xchg
xor
jmp
cmc
xor
adc
dec
or
es
cmp
insl
js
push
out
mov
mov
daa
lret
xchg
sarl
xchg
repz
push
imul
popa
xor
stos
mov
repnz
push
dec
sbb
les
leave
push
jae
rorb
fcoms
sbb
sub
sahf
std
inc
add
pop
add
imul
lcall
sub
mov
stos
add
add
sub
or
pop
js
xchg
xor
pop
xor
clc
push
ja
fidivl
rcr
rcrb
push
xchg
xchg
xchg
sbb
mov
jge
or
testb
cs
es
sbb
scas
dec
movsl
mov
out
inc
xor
cmpsb
jecxz
mov
iret
js
int
push
call
push
dec
inc
mov
out
push
shr
imul
pushf
sub
jmp
mov
in
pop
jl
icebp
shl
jmp
lea
enter
cmp
xchg
aaa
mov
in
dec
aad
jp
movsb
lods
test
icebp
subl
inc
sub
sub
pushf
cmpb
xorb
add
xchg
cs
cmp
repz
pop
scas
fcom
cmp
cmp
gs
add
sbbb
out
ret
dec
aam
popa
in
mov
out
movsl
and
test
fcmovnu
cli
ret
aaa
pushf
and
leave
push
stc
rcl
fld
les
sub
out
jmp
or
or
and
inc
rorl
jecxz
ja
push
outsb
popf
pop
or
sub
push
push
jmp
insb
and
lods
add
add
fimull
or
xor
cltd
push
jmp
out
fwait
mov
and
dec
adc
push
daa
push
xchg
nop
ja
jae
rolb
and
insb
cmpb
mov
repz
imul
aaa
repnz
inc
sub
mov
out
jle
pop
lahf
push
testl
cmc
xchg
das
pop
ja
dec
in
cmp
ficompl
xor
bound
lods
lds
mov
mov
aad
sub
sti
adc
jecxz
outsl
stc
or
mov
push
dec
popf
out
aad
push
pop
jae
sbbl
jns
adc
cli
ja
inc
sbb
in
sbb
lods
pop
and
jle
ss
dec
bound
jge
out
add
push
insl
mov
pop
push
es
test
pop
cmpsb
adc
push
movsb
gs
out
pusha
lcall
push
clc
lret
cmp
jns
xchg
jle
adc
out
lahf
jp
add
cmp
cs
shrb
and
loop
xchg
clc
or
jo
pop
das
shlb
mov
and
xchg
pop
loopne
mov
cmp
lea
or
test
popa
dec
dec
sub
adc
adc
push
cmp
imul
xor
loop
je
sbb
cmpsb
bound
iret
stos
sub
aad
mov
fidivs
sti
pusha
mov
pop
adc
cmp
ret
in
cmp
jge
std
fnstenv
jne
xor
sbbb
jg
bndldx
sub
and
stos
dec
les
lret
pop
stc
adc
sub
push
out
sub
jmp
push
mov
pop
push
sub
add
sti
push
sahf
jle
mov
loopw
xchg
inc
push
js
lea
fmuls
fisttpl
daa
pop
in
mov
jae
pushw
mov
enter
clc
add
xchg
stos
mov
fs
or
fwait
jne
cmpsb
push
cmc
cltd
pusha
sbb
adc
pop
and
das
std
mov
cmp
dec
inc
std
div
mov
jmp
push
mov
xchg
stos
test
rcrl
sahf
mull
inc
add
xor
xor
pushf
cmp
pop
iret
test
and
mov
push
femms
or
mov
ljmp
lods
daa
push
insb
fnstcw
dec
cld
cmp
int3
sbb
dec
orl
inc
movsb
mov
das
call
xor
mov
jns
add
xor
in
sbb
aam
sub
sbb
push
pop
rorl
xor
cmpb
jmp
stos
inc
aam
xchg
dec
push
outsb
popf
xlat
dec
mov
icebp
loopne
sbb
add
mov
push
jo
push
dec
int3
cmp
sub
sub
dec
adc
notl
std
mov
inc
jne
and
push
adc
stc
mov
ret
adc
xchg
add
int
and
cmc
cltd
sbb
mov
xchg
addr16
fisubrl
cwtl
pop
ficoml
int3
cmp
out
add
xchg
je
adc
xor
out
adc
mov
add
push
mov
rclb
stc
sub
inc
mov
dec
sub
sbb
aas
mov
push
aaa
std
lock
sbb
into
or
test
movsl
or
das
jae
xor
sbbb
add
scas
loope
insb
or
cmp
fwait
bound
std
js
inc
fbstp
cltd
je
insb
div
xchg
mov
mov
stos
jmp
jno
dec
mov
and
lahf
mov
sbb
cs
les
aaa
rdtsc
adc
fsubrl
jo
pop
mov
jg
dec
sti
daa
mov
iret
sub
repz
xchg
nop
lahf
pop
rcll
pop
sbb
sub
shll
pop
adc
dec
sub
add
dec
pop
aas
jecxz
cmp
jbe
mov
imul
adc
cmp
not
cmp
mov
int
aad
fiadds
aaa
fsubl
in
cmp
movsl
inc
lock
jl
jb
mov
inc
out
outsb
or
adcb
out
xorb
arpl
and
hlt
adc
adc
arpl
call
scas
mov
jmp
dec
xchg
and
out
dec
lret
or
test
dec
mov
int3
cmp
pop
scas
and
push
inc
xor
push
sub
xlat
mov
cmpsl
mov
outsl
ja,pt
pop
in
scas
sbb
stos
sbb
or
xchg
cmp
hlt
daa
or
nop
stos
popf
dec
mulb
xchg
fiadds
std
fcomi
gs
push
xor
repnz
pop
inc
sub
je
dec
mov
mov
and
stos
in
movsl
movl
push
ljmp
aas
test
jno
gs
xchg
rcrb
cmp
cwtl
std
es
jg
mov
daa
adc
sti
das
mov
jg
jp
and
push
xor
outsl
lret
out
insb
mov
fiadds
xor
xchg
les
inc
sub
dec
or
push
pop
pop
pop
mov
jnp
adc
fucomi
xorb
push
adc
adc
xchg
and
and
cmp
int3
xchg
and
cmpsl
leave
lcall
int
dec
mov
cli
pop
jns
sub
push
xor
stos
sub
lods
sbb
and
push
repz
stc
xor
in
cmp
dec
mov
sbb
push
xchg
popf
and
cmc
cli
outsb
dec
mov
fs
xchg
or
insb
push
mov
cltd
cltd
rolb
add
push
or
ljmp
fldcw
sbb
jbe
mov
jne
arpl
jo
test
in
ret
cmp
shrb
jae
dec
stos
ds
mov
add
stos
inc
pop
or
imul
int
or
add
push
xchg
jecxz
addb
push
jl
push
mov
out
add
push
int
into
cmp
addl
out
pop
pop
faddl
or
jl
xchg
in
mov
mov
loop
mov
jnp
sub
cmpsb
xor
xchg
jl
xor
push
mov
xlat
and
cmp
xor
nop
enter
cmpsl
subl
lret
add
stc
mov
insb
hlt
and
imul
call
inc
pop
dec
mov
xchg
test
sahf
aam
mov
fnsave
lods
mov
pop
in
outsl
lock
es
in
test
and
test
jo
adc
adc
arpl
ljmp
sub
pop
fcoml
jl
adc
inc
pop
pop
mov
pop
adc
pop
xor
es
test
movsl
xchg
mov
add
jnp
insb
lret
pop
push
or
add
loop
push
ret
pop
add
and
or
out
stc
cmpsb
call
repnz
and
push
cmp
cmp
push
mov
adc
notb
loope
subb
or
jno
clc
ljmp
adcb
mov
mov
mov
out
adc
mov
push
xor
or
inc
add
out
cmc
fcompl
pop
mov
js
sub
mov
scas
jmp
dec
mov
sbb
dec
aaa
icebp
das
roll
call
insl
inc
lea
stc
sbb
adc
jge
sub
sti
incl
dec
out
xor
xor
in
pop
std
loopne
out
jl
jmp
pop
out
jns
jnp
andb
jno
clc
cmc
xor
push
mov
and
cli
in
pop
sar
daa
cwtl
shll
add
xchg
dec
call
fstl
mov
cmp
aaa
arpl
push
xor
lock
xor
or
lcall
orl
push
movsb
mov
fadd
sub
les
adc
and
movsb
lods
jge
rcrl
push
bound
cmp
mov
fwait
or
or
imul
frstor
adc
sbb
inc
pop
push
outsb
jns
lods
sbb
xchg
pop
dec
push
and
sbb
cltd
testb
cmpsl
jne
loope
push
repz
inc
test
inc
mov
jmp
adc
and
add
sub
cmc
in
nop
jg
cmp
lods
dec
or
mov
lret
arpl
mov
loope
aas
cwtl
mov
cmp
iret
dec
imul
jno
pushf
into
cmc
xor
xchg
sub
sbb
es
int3
add
aad
pop
out
xchg
pop
xchg
add
testl
push
cld
dec
fyl2x
jne
ljmp
lret
arpl
cwtl
add
or
inc
adc
loopne
dec
stc
xor
jbe
repnz
mov
stos
xchg
stos
mov
pusha
jae
ljmp
xlat
bound
mov
mov
xchg
sar
or
and
add
adc
xchg
pop
inc
pop
inc
inc
xor
lods
push
push
mov
ss
mov
ljmp
cmp
in
and
pop
mov
push
mov
int
add
sub
or
pop
inc
lea
mov
adc
ret
repnz
lret
cmc
pop
push
push
sbb
inc
and
fnstenv
push
ds
pop
call
bound
orb
ja
xor
pop
pop
int
inc
in
out
aaa
and
cmp
dec
pop
je
cmp
fxtract
ret
ja
clc
clc
push
mov
aam
dec
add
pop
pusha
cld
and
jns
or
mov
dec
ficompl
daa
push
cli
repz
mov
repz
aas
jnp
sbb
sub
xchg
xlat
pop
fs
mov
test
push
mov
dec
pop
xchg
mov
jge
pop
or
call
test
mov
xchg
sub
cmp
aaa
es
int3
sahf
and
and
pop
cld
popa
imul
stc
dec
les
pop
sbb
popf
das
add
clc
mov
dec
ja
jmp
sti
test
xor
lahf
gs
fmulp
inc
pop
inc
add
jmp
jp
add
xlat
push
bound
and
xchg
sbb
add
dec
pop
or
jmp
dec
inc
dec
push
stos
sub
sbbb
test
or
add
xchg
push
and
xorl
lret
idivb
rcrb
xchg
push
pusha
and
cld
ret
cli
push
push
cld
add
sub
mov
pop
pop
outsl
mov
add
xor
sub
inc
push
out
movsb
sbb
xor
mov
leave
pop
adc
stos
xor
cmp
aam
in
xchg
mov
scas
jae
ret
and
in
inc
mov
ljmp
dec
fwait
xchg
enter
adc
sub
fstps
fwait
mov
dec
sbb
insl
dec
inc
mov
sub
fistps
in
xchg
fimuls
inc
add
mov
xor
inc
xor
mov
sbb
sbb
addr16
std
mov
orl
ljmp
cs
daa
test
or
inc
fstpl
in
push
stos
js
push
popf
lds
or
xchg
fwait
jmp
and
mov
aaa
push
ds
or
sub
arpl
pop
popf
sahf
sub
daa
jne
xor
or
shl
sub
les
jl
inc
xor
lahf
loop
push
mov
mov
xor
mov
lock
cmp
dec
negb
icebp
pop
push
xchg
scas
cltd
loopne
outsb
inc
loopne
ffreep
add
bound
xor
mov
icebp
add
std
cmp
mov
mov
int
mov
mov
std
sub
or
stos
jb
repnz
std
jo
mov
pop
mov
ss
lds
lods
inc
repnz
test
xchg
xchg
push
add
xor
enter
sub
cmp
pop
hlt
dec
insl
jmp
popf
pushf
ja
flds
add
in
cmp
aam
hlt
shlb
cmpsl
data16
subb
cmpsl
loopne
cmp
mov
pop
outsb
pop
add
sbb
das
push
outsb
adc
lock
pusha
xor
inc
into
xchg
mov
roll
push
sub
hlt
cmpsb
pop
xor
inc
aad
xchg
inc
cmc
movsl
fsubrs
scas
mov
pop
sbb
dec
sarl
push
or
xchg
and
les
sub
xor
inc
push
popl
jmp
inc
aam
clc
dec
stc
lds
xor
push
shrl
test
loopne
mov
lahf
mov
mov
mov
test
xchg
repnz
fisubs
aaa
mov
stos
pusha
rolb
adc
dec
xor
mov
pushf
sahf
out
jge
out
add
fcomps
mov
cmpsl
into
mov
xchg
les
and
repnz
push
rclb
mov
xor
arpl
sbbb
push
sahf
dec
and
imul
data16
mov
fnsave
mov
scas
or
ss
mov
sbb
adc
and
mov
xchg
jge
ljmp
or
icebp
lret
std
jo
ret
out
jns
mov
ret
xor
add
fadd
arpl
mov
push
ficomps
icebp
pop
into
test
jle
adc
or
aam
push
loop
cmp
sbb
das
mov
mov
dec
pop
aam
mov
cwtl
insl
mov
adc
sub
mov
mov
lret
dec
sub
std
or
cmp
orb
aaa
sub
jo
cmp
sub
fcmovu
std
push
or
jno
sbb
adc
scas
dec
jne
push
pop
popf
add
sbbl
add
lea
pop
loope
aas
insl
ljmp
cmp
or
and
inc
sbb
or
les
cwtl
pushf
enter
mov
aad
jecxz
movsb
cmp
repnz
test
in
not
int3
xchg
aad
test
popl
idivb
roll
sbb
push
xor
mov
xchg
lahf
fldln2
xchg
xchg
jbe
pop
nop
test
negb
jg
iret
mov
mov
fwait
push
mov
fimull
add
arpl
and
mov
clc
jo
cwtl
fistl
mov
in
into
jb
adc
mov
add
push
repz
xchg
adc
xor
and
sub
lret
insb
jno
sub
test
loop
adc
inc
push
sbb
or
mov
dec
jp
addl
into
fucom
fiaddl
nop
adc
xlat
mov
xchg
pop
and
test
cmp
cmc
dec
pop
aaa
insb
or
enter
or
inc
pop
idivb
leave
arpl
addr16
cmp
xchg
inc
clc
cmpl
fdivrs
fimull
sub
mov
stos
test
pop
in
jmp
movsb
mov
fisubrs
test
outsl
pop
lds
or
and
nop
bswap
jp
mov
mov
shll
call
mov
cmp
cwtl
fsubrp
cmp
aaa
movsb
stos
cmpsb
cmp
test
fwait
std
sarl
pop
mov
inc
push
mov
xlat
or
add
xor
shll
add
xchg
mov
and
and
adc
push
mov
filds
movsl
pop
lret
mov
inc
xchg
jnp
pop
pushf
xor
mov
and
cmpsl
add
call
test
ja
push
push
enter
daa
pop
xchg
aam
stos
loopne
xorl
ret
jns
jb
cmp
adc
rorl
mov
outsb
push
dec
jae
mov
pushf
xchg
push
pop
fdivrs
cwtl
test
js
cmpsb
mov
lcall
and
mov
inc
in
xchg
mov
jecxz
add
adc
dec
add
push
loopne
fsubr
jge
imul
gs
lods
jmp
xchg
jmp
mov
out
lock
insl
jg
inc
mov
or
call
pushf
mov
scas
push
es
in
test
sbb
lret
add
xchg
jg
cmpsb
in
and
jae
or
pop
xor
push
lcall
enter
fcmovu
inc
sti
lock
jmp
and
xchg
mov
jle
xchg
push
mov
test
test
mov
ja
jle
sub
pop
jl
cmpsb
pusha
jbe
push
mov
mov
fimuls
jle
std
sub
lds
scas
jmp
fcomps
cltd
inc
sbb
push
sti
cmpsb
adc
jmp
and
orb
imul
add
mov
loop
bound
dec
add
xor
mov
and
cltd
dec
add
out
loop
test
int
test
dec
cmpsb
pop
xchg
in
mov
imul
in
loopne
jo
aaa
xlat
lea
pop
insb
push
in
sti
pop
cwtl
ret
dec
add
sahf
sbb
out
outsl
mov
adc
addl
pop
into
orl
sbb
ror
adc
in
mov
or
int3
push
xlat
xchg
push
adc
gs
add
test
in
and
into
fidivs
pop
dec
testb
stos
mov
pop
push
loopne
add
test
insb
divb
inc
jge
jo
mov
adc
idivl
lds
lcall
iret
fs
js
push
cmpsl
enter
js
jne
sub
push
repz
mov
or
mov
xchg
scas
jecxz
xchg
xchg
lret
jmp
pop
fstpt
ret
mov
leave
push
loope
loop
es
pop
test
fnop
ljmp
arpl
sbb
xor
or
inc
cmpl
ja
hlt
pmullw
inc
movsl
arpl
mov
sub
adc
adc
inc
subb
andl
and
push
flds
pop
pop
xchg
jns
movsb
mov
cltd
mov
dec
mov
push
mov
pop
push
xchg
sbb
push
mov
xor
into
xor
dec
mov
lret
xor
mov
jle
cmp
out
iret
xor
mov
mov
xor
int
scas
cmp
test
aad
mov
js
ret
push
mov
lods
add
mov
inc
shlb
notb
xchg
movd
xor
pop
in
cmp
shrl
xchg
cmc
scas
and
ds
adc
lret
lret
or
call
out
pop
xor
aaa
jb
movsl
cmp
test
mov
mov
int3
andl
fsubp
add
outsb
dec
pop
add
and
loopne
push
mov
sub
arpl
or
sub
in
add
adc
push
dec
push
push
je
ljmp
mov
or
enter
lock
rcl
ror
push
and
cld
jge
fs
sarl
cmp
xlat
jp
jle
and
push
test
pop
dec
pop
or
dec
fisubrs
cmp
sub
or
or
int3
in
inc
cmp
xor
cmp
jl
sub
jae
enter
cmp
aas
ret
xchg
and
inc
add
ret
jge
jb
mov
mov
adc
mov
aas
shlb
into
fcmovu
clc
ljmp
les
mov
sub
or
insl
loop
jnp
pop
fsubs
dec
sub
jns
stc
shll
lea
push
lret
pop
push
icebp
or
jo
jmp
fists
jge
xor
jge
or
sbb
or
movsb
mov
mov
dec
ja
ljmp
xchg
add
mov
push
std
fmull
cli
mov
test
add
les
add
mov
xchg
ret
xor
outsl
push
cmpsl
aaa
sub
loopne
mov
inc
jg
or
repnz
sub
mov
int
mov
dec
mov
mov
fldz
into
mov
dec
imul
test
inc
jne
add
in
fwait
ret
inc
mov
adc
stos
rclb
in
pop
jp
cmp
in
rorb
pop
repz
mov
imul
nop
dec
imul
aam
insl
sub
cld
jp
xchg
pop
xor
pop
jns
jmp
call
cmp
fsts
incb
lret
adc
dec
cmp
mov
cwtl
push
push
sti
fwait
test
xorl
push
outsb
mov
ljmp
pop
jg
test
insb
aam
push
sbb
ss
jo
pop
xor
movsl
subb
inc
add
lea
insl
cmpsl
mov
leave
add
cmp
push
mov
mov
call
push
inc
pusha
cs
insl
scas
mov
jnp
repz
popa
jl
sub
mov
or
xchg
aam
bnd
mov
enter
fldt
mov
xlat
adc
dec
divl
lock
ret
mov
push
pop
cwtl
and
pop
xchg
pop
fcoms
pop
test
test
adc
fcompl
mov
dec
cwtl
insl
scas
enter
lea
and
pop
ret
out
pushf
int3
lret
hlt
pop
push
mov
and
stos
addr16
out
ss
in
cli
stos
ja
mov
call
pushf
pop
notb
jle
imul
mov
cld
mov
fnsave
or
mov
rolb
mov
icebp
xlat
hlt
dec
mov
dec
in
icebp
movsb
iret
sub
std
test
repnz
sbb
jmp
scas
aaa
jecxz
rolb
xor
lds
enter
pop
orb
scas
mov
lds
mov
mov
jl
sbb
das
or
addr16
pop
bound
and
int3
decl
dec
sbb
movsb
cs
sarl
sub
dec
mov
pop
xchg
xor
mov
popf
icebp
pop
sbb
and
in
dec
or
testl
xchg
jmp
popf
inc
inc
xor
iret
movsb
xor
jmp
fnstenv
push
dec
fs
je
push
das
inc
inc
sub
out
xchg
jecxz
or
cmp
int3
cld
ljmp
adc
cs
mov
inc
cmp
js
js
mov
sti
mov
push
idivl
mov
xchg
adc
sub
cmc
add
pop
ja
repz
aad
xor
movsl
subb
adc
adc
dec
je
jo
cmc
mov
pop
xchg
stc
xchg
cmpl
inc
and
dec
push
sub
jmp
ljmp
jmp
pop
lods
cmpsl
xchg
xchg
mov
scas
rolb
xchg
pop
add
push
inc
sahf
mov
mov
jge
jle
and
mov
dec
mov
rcll
gs
in
sbb
pop
call
ficoml
fstpt
mov
js
hlt
push
andb
xchg
mov
cmp
stos
test
xchg
jg
adc
add
inc
push
fnstcw
sbb
inc
add
pop
push
xorps
mov
in
ret
and
jmp
fwait
xor
gs
or
cltd
mov
out
xchg
xchg
cmp
nop
inc
jl
add
xlat
rcr
rcr
mov
dec
mov
add
loope
aam
jns
hlt
out
pop
pop
sub
in
lds
xchg
sbb
cmp
lahf
dec
xor
or
add
mulb
clc
jl
cli
in
ror
clc
xchg
fisubrl
sub
sbb
cltd
jge
test
inc
dec
je
or
and
jno
loopne
cmc
and
sub
scas
mov
mov
clc
xchg
sub
mov
and
cmp
adc
mov
xchg
in
sbb
rorb
or
inc
je
das
into
mov
idivb
adc
fcompl
leave
pop
rol
icebp
jmp
dec
stc
gs
inc
sbb
mov
xor
pop
mov
aad
adc
inc
jg
les
loopne
imul
mov
mov
mov
dec
adc
bound
outsb
movsl
ss
test
add
mov
fs
pop
xchg
pop
ljmp
pop
dec
pushf
shlb
jae
or
push
inc
jge
inc
fcoml
fwait
mov
hlt
lods
inc
mov
imul
sbb
orl
fcoms
scas
mov
push
sub
aad
pop
out
es
jnp
stos
push
jns
mulb
add
dec
xchg
scas
fldcw
jns
popa
inc
aam
push
jmp
xchg
ljmp
push
mov
jecxz
add
test
fwait
sahf
mov
dec
lods
jo
sub
mov
jl
jae
add
jle
dec
aas
neg
mov
bound
mov
rcll
sub
or
jbe
sbb
cmpsb
lret
mov
in
jmp
cmp
mov
out
jo
sbb
aad
mov
dec
pop
push
sub
arpl
mov
sbb
sub
rcrb
xor
out
pop
and
mov
and
mov
nop
daa
pop
shlb
gs
mov
shlb
pop
mov
pop
pushf
pop
mov
inc
leave
inc
popa
cmp
sub
jbe
xor
mov
hlt
sti
sbb
pop
lcall
jmp
push
pop
xchg
xchg
je
out
cmp
jp
ret
mov
fdivrs
sti
imul
popa
xchg
mov
sbb
daa
mov
jae
pushf
add
dec
add
mov
cmp
xor
mov
jno
jl
xchg
lock
push
imul
in
pop
outsb
insl
stos
lahf
or
aaa
pushf
add
adc
xor
cld
lcall
hlt
adc
loope
and
stos
stos
jge
sbb
mov
pushf
cmp
aad
mov
mov
add
pushf
xchg
insb
and
int
pop
push
cmpsl
jo
out
ds
fildl
push
or
push
jbe
pop
add
push
clc
cmp
pop
pop
xorb
shl
push
pusha
adc
adc
shl
das
jecxz
pop
aad
mov
jo
xchg
mov
add
and
movsb
dec
push
insb
xchg
out
outsl
pop
pop
fyl2x
mov
inc
imul
adc
add
pop
sub
cld
shrd
das
imul
orb
sahf
std
mov
mov
je
xchg
push
and
xor
mov
jne
pushf
mov
gs
mov
gs
js,pt
jge
inc
pop
mov
cltd
jp
push
adcb
movsl
loopne
lahf
sub
cmp
or
mov
jne
cld
fmuls
cmp
push
sub
lock
mov
dec
int
ljmp
add
in
push
cmp
pop
xchg
gs
jge
outsb
adc
and
cs
pop
xchg
sub
jle
push
jo
xor
sbb
ret
and
mov
push
aam
ds
mov
xor
sub
mov
rcrb
xchg
idivb
xchg
shll
in
stc
inc
lahf
testb
xchg
insl
push
jecxz
pop
or
push
or
fs
push
call
into
loopne
aad
lods
mov
ret
dec
xchg
or
mov
mov
inc
mov
ljmp
cmp
bound
mov
jno
sub
mov
sbb
sub
xchg
movsb
lea
je
sbb
loop
call
fnstsw
mov
js
add
movsl
dec
pop
cmc
mov
or
add
mov
mov
and
or
mov
lods
mov
insb
cld
fistpll
dec
outsl
cmp
jle
mov
xchg
outsb
cmpsl
cli
adc
repnz
cmpsb
fcomp
sub
adcb
add
xchg
or
and
xchg
imul
dec
jo
movsb
or
xchg
outsb
mov
mov
das
xor
mov
adc
mov
out
push
loop
mov
inc
sbb
pop
jge
cmpb
and
out
xchg
jnp
sbb
in
rolb
and
or
xor
rcll
call
sub
lds
les
or
and
mov
dec
test
push
inc
adc
dec
xchg
imul
lods
or
pop
mov
imul
xchg
ja
sub
or
les
mov
jnp
vcvtsd2ss
andb
xor
lods
mov
cmp
aad
pusha
pop
ror
lret
sub
cs
fwait
cmp
mov
dec
test
std
mov
jne
leave
jg
arpl
jae
fdiv
scas
test
mov
jbe
je
or
punpcklbw
aaa
sub
dec
pop
push
fdiv
loopne
outsl
std
mov
push
shlb
imul
insl
sti
daa
inc
decl
stos
pop
popf
or
and
or
pop
pop
inc
stos
nop
and
sbbl
xchg
mov
repnz
sbb
out
outsl
xorb
loopne
mov
movsb
push
clc
and
cmp
jp
sub
fists
xor
push
fstps
loopne
jl
jmp
or
imul
or
dec
insl
test
mov
dec
test
xchg
daa
into
xchg
push
aas
sbb
jmp
pop
inc
movsl
scas
pop
pop
xor
jg
xchg
adc
add
outsb
leave
and
imul
add
in
test
cmpsb
push
and
jge
gs
mov
sbb
cmp
and
lods
stc
int3
idivb
push
and
popa
data16
pop
lock
jno
and
lods
xorb
daa
push
rclb
sbb
testb
inc
in
inc
rcl
fmulp
shll
sbb
mov
lods
or
cmp
sub
iret
inc
jne
imulb
enter
inc
fsubs
jb
jnp
cli
pop
fidivs
cmp
add
rorl
mov
or
mov
lahf
out
xchg
mov
or
sar
cmpps
jo
imul
lret
aad
fstpl
push
lahf
mov
bound
jp
repz
rcrl
sbb
push
imul
test
mov
mov
pop
out
inc
dec
add
lret
jno
inc
mov
and
sub
pop
and
in
in
mov
aas
loope
out
or
hlt
outsl
sarb
jbe
mov
xor
mov
cmpb
sub
jl
enter
add
cmp
dec
notl
cwtl
sbb
scas
cmpsl
scas
stos
push
in
sti
sub
and
stc
lds
ljmp
in
pop
fnstcw
add
mov
adc
movsl
daa
jp
enter
dec
pcmpgtw
call
adcb
xchg
inc
mov
inc
xchg
push
dec
test
push
test
sarl
mov
clc
gs
aam
call
arpl
xor
dec
jo,pn
inc
mov
sbb
cmp
nop
bound
fimull
mov
mov
rcll
xchg
movsb
das
out
aad
push
sbb
cmp
bound
outsb
into
xchg
dec
jg
jno
shrl
mov
sub
negb
fildl
das
jno
cli
mov
or
or
scas
jl
pop
adc
divl
scas
mov
mov
sub
mov
add
dec
xchg
mov
ja
xchg
outsl
iret
cmp
cmp
lahf
dec
ja,pn
mov
mov
in
outsl
bound
jg
leave
mov
mov
and
jnp
ja
add
out
ror
inc
cmpsl
cmp
fadd
aad
nop
sub
adc
lods
jl
pop
sti
or
out
adc
sti
cmc
xchg
mov
pop
push
sar
rcrb
sub
jmp
mov
cltd
inc
adc
push
jl
pop
loop
sub
cmp
std
xor
push
aad
jp
pop
mov
lea
mov
mov
das
cmp
jg
mov
sahf
mov
repnz
and
jg
and
push
pop
pop
movsl
fldcw
fwait
loope
xchg
xchg
sahf
lea
sbb
int3
cld
sbb
lahf
int
xchg
push
fcmovnbe
mov
pop
sbb
xor
scas
setl
je
jbe
js
stos
sub
decb
sahf
ficoms
push
pusha
jecxz
ljmp
pop
fisubrs
es
sbb
push
adc
stc
cmpsb
jecxz
adc
test
sub
xchg
sbb
fiadds
push
out
insb
pop
cmpsb
ss
not
movsb
jp
ret
outsb
push
xchg
int
mov
data16
and
add
sub
fs
push
pop
repnz
xor
jae
xlat
adc
insl
mov
cmp
add
lret
mov
jo
cmp
add
inc
fidivl
cmp
icebp
jno
loope
inc
cmp
sub
shll
sbb
dec
out
xchg
lahf
pusha
and
mov
add
mov
lret
loop
add
ds
stos
mov
sub
jl
pop
mov
popf
and
out
xchg
out
addr16
jg
mov
dec
xor
int
xor
push
pushf
adc
jmp
inc
push
mov
dec
sbb
imul
icebp
push
aam
je
in
mov
mov
dec
add
and
or
adc
inc
loope
mov
fcoms
test
inc
movsb
lcall
inc
dec
mov
inc
pop
xchg
push
sub
push
pop
shll
or
popa
into
nop
adc
add
mov
test
lret
cwtl
je
jmp
mov
and
ljmp
push
cmpl
fsubr
mov
pushf
mov
xor
add
fmull
daa
cli
dec
dec
dec
ret
loop
sub
jne
and
push
push
mov
fnsave
dec
rclb
repnz
test
loope
cmp
stc
mov
fwait
aad
shlb
shlb
cmc
mov
jecxz
mov
and
in
aam
mov
mov
lret
mov
push
scas
das
xor
ret
shlb
adc
cmpsb
jg
mov
jb
loopne
jno
and
sub
sub
in
inc
xchg
cltd
dec
cmpsb
hlt
les
scas
cmp
and
insl
mov
std
cmp
jno
pop
dec
movb
push
inc
clc
adcl
mov
and
jbe
mov
sub
testl
in
fstl
es
ret
jns
loope
mov
mov
es
sbb
dec
scas
add
push
lcall
mov
inc
mov
out
out
mov
inc
in
cmp
je
push
cmp
test
jne
mov
dec
mov
arpl
add
mov
xchg
cmpsl
fs
xchg
sub
js
scas
mov
mov
roll
leave
sbb
sub
fmull
pop
push
mov
fimuls
pop
inc
fidivrs
push
dec
es
and
mov
pop
hlt
adc
outsl
jg
movsl
jnp
mov
and
sub
orb
inc
or
xchg
or
pop
jmp
fisttpll
mov
leave
sbb
dec
enter
adc
mov
ficoms
sbb
in
push
test
mov
xor
xchg
in
push
bound
push
aaa
sbb
push
xor
mov
fs
insb
enter
leave
pushf
dec
adc
mov
lds
sub
pop
xchg
gs
pop
dec
cmp
movsl
pop
pop
pushf
push
inc
adc
insb
push
pusha
or
test
sub
scas
cs
rorb
add
call
xchg
push
sub
cmc
or
dec
sub
imul
push
je
sbb
jne
hlt
jp
jo
loop
pop
sub
lret
add
aaa
pop
out
mov
sbb
pop
cli
dec
or
xchg
lods
push
inc
mov
push
jb
xlat
xor
sub
stos
cmpsl
adc
dec
push
pop
mov
inc
cli
daa
mov
inc
imul
imull
push
dec
outsb
lock
mov
and
ss
stc
push
inc
rolb
inc
inc
shrb
call
push
es
pop
testb
sti
mov
fstps
sbb
iret
fucomip
jnp
xchg
scas
xor
push
mov
pop
rcrb
std
insl
inc
frstor
jmp
mov
inc
adc
xchg
pop
cmc
imul
xor
and
fildll
stos
neg
push
pushf
dec
inc
adc
sbb
call
dec
sahf
icebp
xor
sarl
imul
sub
outsb
fucomi
dec
neg
ljmp
pop
cmp
rcrb
pop
pop
mov
adc
or
push
jno
icebp
jb
dec
jg
sbb
aaa
or
sbb
xchg
fs
xor
xor
jbe
in
xchg
add
dec
jecxz
cmpsb
adc
pop
sbb
mov
int3
addr16
popf
inc
scas
int3
rorl
sahf
test
or
inc
sub
cmp
mov
and
sbbl
jb
loop
mov
fstpt
mov
aas
loopne
jnp
add
test
fdiv
jecxz
push
sahf
test
sub
lret
add
es
dec
ljmp
dec
mov
xchg
pop
push
xor
cld
fistpl
out
and
push
cwtl
mov
pop
cwtl
lahf
test
jge
pop
lret
and
xor
inc
fldcw
or
pop
mov
sub
fisttpl
lock
or
repz
aas
gs
push
jnp
insl
cmp
dec
or
mov
xchg
scas
sahf
mov
sub
push
mulb
imul
repz
xor
lret
xlat
inc
pop
pop
sbbb
pop
pop
xchg
outsb
and
in
ret
xor
test
jp
cmp
mov
stc
in
fadd
push
fcompl
shl
fwait
push
rcll
imul
pop
mov
inc
sbb
cmp
lods
xor
ficompl
imul
sti
or
sarb
arpl
lcall
push
inc
in
mov
test
xchg
popa
pop
bound
in
jns
scas
jmp
je
daa
out
mov
xor
mov
pop
push
dec
aaa
mov
push
xchg
push
push
inc
scas
jecxz
sub
jg
dec
dec
stc
jecxz
fwait
aad
push
or
sub
cmp
dec
test
fstpl
mov
movsl
xor
movb
add
cmp
jle
adc
adc
sub
jno
push
sub
inc
pop
int
push
mov
add
xor
insb
sahf
sar
fnsave
mov
shll
ret
out
mov
test
jmp
ret
or
xor
xor
loop
add
std
mov
andl
sub
xchg
and
cmc
cli
scas
jle
push
jne
cmp
ror
xor
imulb
out
dec
jg
fbstp
jp
add
mov
and
lahf
loopne
clc
xchg
sub
in
mov
scas
mov
xchg
xchg
pop
mov
or
xor
and
pop
xor
js
sub
xchg
adc
and
add
cltd
sub
sub
imul
mov
push
enter
mov
popl
lea
das
out
jecxz
sbb
mov
cmpsb
adc
xchg
jmp
mov
inc
pop
arpl
adcl
pop
xchg
int
sbb
or
jns
mov
add
xchg
push
and
popa
fistl
xorb
lcall
and
sbb
insb
stos
push
in
in
es
or
aas
jg
fdivrs
mov
push
movsb
mov
les
cmp
jbe
jae
jg
aam
out
fsubs
sbb
sbb
dec
andl
cmpsb
mov
test
pushl
push
jns
pop
dec
aam
and
neg
jl
xchg
cmp
xor
add
mov
out
out
jo
jl
mov
adc
fs
lock
mov
repnz
and
adc
js
icebp
cmpsb
dec
sbbl
cmp
sub
ss
inc
adcl
cmp
mov
cltd
inc
in
jbe
pop
mov
cld
pop
test
xchg
outsb
sbb
jno
in
cmpsb
test
push
dec
test
lahf
mov
pusha
jp
sub
out
sub
mov
imul
mov
fisttpll
xchg
xlat
xchg
out
test
cmp
xor
dec
inc
daa
mov
adc
push
es
sub
addr16
mov
sbb
fsubl
or
xor
xchg
fadds
xor
mov
cs
stos
lds
test
aaa
rcrb
mov
mov
push
subb
xor
out
pop
sub
lret
push
das
cmp
sbb
les
push
jne
negb
add
leave
xchg
add
cld
fisttps
pop
out
push
lods
adc
mov
imul
mov
loopne
add
lret
push
idiv
mov
lea
mov
lret
mov
cmpsl
pop
push
rorl
cs
push
test
daa
lret
mov
lahf
into
ljmp
gs
es
ja
jae
addr16
pop
pop
xor
pop
pop
pusha
ds
cli
int3
fildll
dec
mov
call
popf
cmp
in
in
pop
aas
xor
popf
jae
sub
pop
repnz
dec
sbb
jmp
jbe
mov
dec
xor
lahf
xchg
lret
push
jp
ja
adc
push
call
xor
mov
dec
iret
ret
outsl
mov
test
loope
pop
fwait
push
xor
sahf
and
repz
fdivrs
cs
push
and
xchg
stos
scas
arpl
int3
cmp
call
or
sub
gs
leave
lret
repz
push
xor
ds
pop
xchg
leave
into
jne
inc
mov
stos
sub
sbb
lahf
jns
cmpl
rcrl
inc
icebp
test
cld
les
in
xchg
fnstcw
adc
popf
jbe
inc
mov
mov
loope
and
fcomip
dec
cwtl
lea
mov
adc
clc
ja
cmovne
outsl
clc
sbb
push
movsl
and
shll
aas
jmp
push
int3
jae
adc
push
movsl
outsb
sbb
push
cmp
outsl
fists
xor
sbbl
fisubl
mov
xor
sub
xchg
movsb
mov
xchg
mov
outsb
xchg
imul
xchg
movsl
ss
and
mov
push
in
outsb
ret
add
add
mov
ror
adc
mov
sbb
mov
test
and
jbe
gs
cmp
lret
pop
js
sub
test
pushf
sti
shrl
roll
gs
cmp
rol
outsl
mov
pop
ret
adc
inc
aad
xchg
add
sahf
add
popf
push
test
divl
xor
mov
aas
subb
cmp
in
xchg
leave
insb
test
sub
xchg
rcll
out
jecxz
and
xchg
aad
mov
clc
ljmp
mov
ja
lods
jle
and
jge
add
sbb
inc
adc
fs
sbb
mov
sub
jne
adcb
out
lds
mov
out
xor
aad
add
cmp
popf
jnp
int
push
dec
in
ljmp
test
ror
xor
testb
mov
mov
sub
nop
outsl
inc
not
sbb
nop
dec
cmp
test
incb
pop
push
cli
pop
sub
dec
sub
lock
xchg
cmc
lret
push
js
decl
sub
sbbb
scas
add
cli
test
repnz
cmp
out
add
cmp
adc
int3
mov
sub
mov
ffreep
or
inc
rcpps
jl,pn
ja
shl
out
pop
or
add
sub
add
mov
insl
push
stos
xchg
inc
insb
sbb
std
mov
insl
or
cmc
mov
ret
fadd
in
mov
jnp
cltd
ds
mov
inc
and
clc
sub
scas
leave
mov
ret
ds
cmp
add
dec
dec
sahf
sbb
xor
add
jecxz
push
test
mulb
scas
cmp
pop
ret
lret
xchg
int
frstor
xor
adc
out
pop
stc
push
jnp
xchg
push
mov
data16
fdivl
cmpsb
adc
and
sahf
sub
sbb
aad
mov
or
enter
jl
pop
enter
stos
or
loopne
stos
xchg
mov
repnz
mov
mov
adc
sub
add
cwtl
xchg
sub
test
sahf
dec
jns
push
ret
lds
and
add
scas
sub
mov
mov
mov
xchg
push
jno
xchg
pop
imul
mov
scas
hlt
xor
fsubp
in
mov
out
push
out
dec
sbb
jecxz
subb
es
xor
dec
push
xor
jmp
gs
sti
ret
adc
stos
mov
and
inc
fmul
imul
sub
and
mov
decl
mov
test
ja
cmp
lods
call
sbb
mov
in
pop
sub
addr16
adc
sti
xor
popf
repz
sub
gs
dec
cmp
cmp
xor
mov
rcll
lahf
aam
inc
inc
ss
insl
mov
std
cmp
xor
jge
test
push
clc
jecxz
xlat
fprem1
popa
add
add
leave
cld
addr16
imul
je
bound
dec
aaa
cmp
test
push
mov
jb
cmpsb
push
loope
test
cmpsl
jp
mov
arpl
mov
xor
loop
test
cmp
pop
roll
cmpsl
push
sbb
mov
loop
cli
and
pop
adc
pop
pushf
adc
sbb
and
lret
xor
pop
mov
push
bound
xchg
sbb
sahf
sbb
pusha
clc
mov
aas
cmpsb
in
int3
jb
sub
rclb
je
mov
xor
jg
testl
and
dec
jge
inc
cltd
pop
mov
std
push
push
and
mov
scas
mov
cmp
push
jg
sbb
xor
insl
mov
cli
lret
testl
lea
and
imul
add
jg
int
divl
iret
add
sbb
xchg
shl
or
stos
cmp
loope
cli
outsb
lods
sbb
shr
aaa
les
cmp
insl
pop
lods
xchg
call
mov
adc
xchg
scas
iret
je
add
push
inc
outsl
cwtl
sarb
shlb
xchg
test
xchg
sub
sub
cmp
cwtl
dec
or
add
mov
pop
fwait
orb
xor
loopne
jbe
inc
fidivs
shr
sbb
and
js
loop
pop
rorb
adc
sub
test
cmpl
ss
xor
ljmp
or
out
cli
push
jne
daa
sub
adc
fs
mov
das
lcall
pop
sub
lret
pusha
call
pop
test
push
imul
push
jge
data16
js
and
js
lahf
lea
enter
mov
inc
lds
pop
cwtl
call
aam
pop
out
xlat
fsubrs
mov
in
rcll
mov
xchg
or
jg
sub
push
stos
out
lds
jne
repnz
mov
roll
mov
faddl
push
xor
psrlw
stos
xchg
mov
inc
jnp
inc
fs
mov
add
in
hlt
add
push
les
aaa
xor
xchg
inc
in
outsl
jae
mov
pop
inc
inc
jl
cli
ja
and
push
shl
cmp
push
nop
cmp
sub
sbbl
in
or
pusha
loop
lds
and
xchg
test
push
mov
push
in
xor
inc
xchg
jae
int
sbb
sub
int
push
xchg
sub
loop
xor
les
or
xor
stos
movsl
loopne
rcrb
push
cltd
rcl
testb
cmp
imul
out
jmp
push
mov
mov
push
lret
pop
xchg
jg
sub
xchg
cmp
push
bound
jns
std
xor
inc
or
xchg
jmp
cmp
or
iret
cmpsl
xor
jp
cli
data16
aam
sti
xchg
rolb
add
dec
scas
int3
fdivr
bound
xchg
push
ffreep
mov
stc
push
add
out
ftst
jnp
sub
test
testl
xorl
push
xor
sub
inc
mov
mov
push
lahf
xchg
sub
cli
or
addr16
and
xchg
into
je
and
int3
mov
dec
cltd
cmc
imul
in
daa
mov
test
jmp
shl
pop
adc
and
or
dec
sub
cmpsl
insb
xchg
addb
push
xchg
mov
push
mov
jecxz
movsb
inc
cltd
les
icebp
rcr
pop
jmp
sbb
adc
push
cli
lret
cmc
mov
adc
notl
sub
stos
sbb
addr16
and
aas
cmp
rclb
cli
aad
imul
push
lret
decl
xchg
and
inc
aad
out
pop
and
inc
jns
jne
jl
sub
sbb
sti
test
inc
sub
pop
inc
out
push
pusha
scas
fadds
iret
mov
fs
cmp
mov
pop
inc
and
ss
testl
ds
lahf
imul
lock
pop
ror
add
sub
lock
or
nop
push
iret
push
loopne
aam
movsb
aas
ja
cmpsl
in
loope
mov
cmpsb
sub
test
nop
ds
rcr
pop
adc
je
pause
sahf
jg
and
inc
arpl
adc
mov
and
jo
cmp
xchg
pop
mov
push
in
test
mov
addl
std
ss
mov
inc
movsl
pop
jl
cmpsb
add
nop
lcall
mov
ret
stos
mov
test
repz
clc
sub
imulb
nop
addr16
negb
cmpsl
into
das
mov
into
fmuls
cmp
lods
pop
dec
adc
dec
iret
mov
add
rol
xor
add
cs
push
cld
jns
cld
roll
and
cmpsb
loope
push
lcall
sbb
hlt
mov
dec
cwtl
mov
shll
inc
mov
mov
xchg
sub
cmp
mov
mov
mov
aad
inc
fnsave
test
sahf
sub
sbbl
arpl
pop
mov
in
cmp
mov
cmp
pop
adc
sub
jle
mov
mov
in
addb
or
fldcw
mov
in
clc
enter
xchg
xor
movsb
add
repnz
test
jl
sbb
mov
loope
jge
or
das
leave
ljmp
fmull
mov
and
and
mov
pop
xlat
inc
sub
cli
insb
clc
fs
xor
rcll
fcmovnu
pop
and
or
xor
ljmp
nop
dec
sbb
pushf
loope
adc
push
lods
jns
add
xlat
adc
int3
xor
cmc
in
pop
sub
cmpsl
cmpsl
fidivl
jmp
out
add
push
adc
lods
fs
cltd
mov
pop
cmp
xor
gs
call
lods
adc
mov
lret
sbb
dec
frstor
cmp
pop
adc
lods
or
sbb
and
inc
clc
popa
dec
xor
pop
ficomps
add
in
xor
inc
scas
je
adc
mov
lcall
loope
jle
sub
pop
jo
in
mov
jmp
jmp
rol
mov
or
addr16
xor
ljmp
mov
xchg
dec
dec
xor
xchg
outsl
sarb
dec
push
xchg
test
pop
out
sub
jbe
mov
and
rcrl
test
cmp
jae
sbb
mov
jns
push
sbb
call
and
mov
sbb
mov
pushf
inc
xor
es
test
aas
fs
out
mov
add
pusha
mov
and
push
or
mov
pop
mov
mov
popa
jle
inc
pop
notl
cmp
pop
cltd
cmp
mov
rcll
add
mov
lea
push
enter
push
push
and
adc
dec
add
adc
add
mov
mov
pop
arpl
lods
adc
call
mov
clc
mov
test
in
add
int3
insb
fwait
sub
push
js
push
aad
mov
ljmp
addl
pop
xor
adc
ja
fs
sbb
repnz
imul
mov
jle
sbb
push
jb
pop
dec
inc
in
mov
cmpsb
mov
fucomip
ret
adc
imul
aam
stos
nop
push
mov
jmp
icebp
out
jbe
xchg
cld
movsl
movsb
aaa
es
push
cltd
in
xchg
gs
arpl
cmpsl
xchg
jb
fwait
sbb
rcrb
leave
shlb
icebp
filds
xorb
and
pop
xchg
mov
adc
push
sahf
jecxz
cli
je
dec
dec
scas
insl
ljmp
dec
xchg
movsb
mov
ret
mov
cltd
xor
insl
sbb
sub
jp
mov
ja
jb
inc
shrl
xchg
lock
mov
push
jnp
pop
fstps
fistl
cmc
test
ficomps
fs
fstpt
test
mov
insl
mov
int
mov
xor
imul
sub
sti
popa
cmp
cmpsl
fldt
and
jmp
pop
mov
sub
cmp
push
xor
pushl
mov
fnsetpm(287
testb
sub
add
xor
xchg
sbb
pop
lret
mov
loopne
xchg
cmp
ret
xorb
cmp
shrl
jp
movb
mov
arpl
jno
cltd
xor
cmp
scas
mov
xchg
nop
shrl
xor
or
dec
cmp
fnstenv
push
pop
sbb
mov
lock
test
mov
nop
adc
and
fcoml
lret
mov
cwtl
mov
jl
pop
out
int3
out
dec
insl
imul
jno
leave
jae
add
pop
dec
in
imul
pop
mov
out
imul
sti
inc
shrb
ret
adc
pop
mov
ja
pop
dec
adc
cmp
inc
fcomps
xchg
bound
push
loopw
popl
in
fildl
cmp
sahf
adc
push
xor
jbe
dec
dec
lea
movsl
or
or
out
inc
outsl
arpl
fmul
or
dec
cwtl
inc
push
mov
xor
push
jne
out
imul
imul
sarl
pop
lds
out
aaa
sbb
jle
fwait
stos
loopne
filds
in
sub
adc
sub
in
sbb
fstps
inc
sbb
or
in
mov
repnz
andl
sub
sbb
loop
rcrl
xchg
call
add
mov
inc
xor
sbb
xor
inc
bound
jp
or
out
lcall
adc
icebp
lods
xor
mov
loopne
js
ret
mov
sahf
sti
fistps
mov
mov
sub
mov
pushf
shlb
sbb
and
cwtl
xchg
and
mov
jno
mov
xchg
rclb
jle
push
addr16
cmc
push
in
daa
je
ret
jns
mov
sbb
jb
cmp
out
sub
pop
ss
xchg
ss
mov
cld
bound
sti
in
sbb
bound
xchg
test
and
outsl
jmp
and
fadds
pop
push
inc
arpl
push
adc
pop
mov
xlat
jne
push
int3
xor
push
adc
fs
xchg
jp
push
popf
dec
xor
fwait
in
fmul
popl
adc
aad
shll
insl
sti
mov
test
xchg
mul
xchg
sub
fists
into
cld
push
pop
or
bound
mov
enter
das
mov
xlat
out
ss
pop
jg
stos
fadd
cmc
xchg
sahf
jae
xchg
push
mov
mov
daa
addl
dec
icebp
jb
addl
sbb
in
cmp
mov
pop
add
loop
fnstenv
shlb
js
bswap
jae
jmp
pop
xor
pusha
mov
dec
inc
sub
or
incb
fidivs
shrl
fs
mov
pop
leave
sbb
xor
cmp
filds
inc
cmp
ja
inc
popa
daa
std
repnz
sub
push
lret
lods
or
out
js
jb
int
imul
loop
add
fcomps
je
aad
pop
push
push
rorl
inc
xor
jmp
inc
add
and
sub
out
scas
lds
push
js
xchg
adc
inc
fidivs
lahf
cli
stos
scas
cmp
cmpsl
popa
negl
inc
fiadds
flds
enter
outsb
gs
mov
rclb
test
and
pop
mov
fwait
in
inc
or
enter
fisttpll
push
mov
daa
cmpsl
loop
inc
lahf
cwtl
cmp
lds
mov
pop
add
mov
lods
or
and
xchg
mov
rclb
mov
dec
xor
xor
ljmp
sub
hlt
xchg
sbb
jg
pop
rclb
and
push
and
sbb
or
mov
rorb
mov
jp
push
cltd
sbb
cltd
mov
xorb
pushf
fsts
arpl
iret
lret
xor
jge
cmp
jb
pushf
inc
mov
mov
sub
jg
sbb
push
dec
pop
sub
pop
aaa
arpl
and
fimuls
shll
inc
or
sbb
mov
push
inc
lret
rcr
mov
adc
mov
ljmp
xor
enter
mov
dec
mov
adc
mov
inc
add
inc
inc
add
push
loop
adcl
call
outsb
into
jb
sub
add
mov
and
sbb
jl
xlat
enter
call
mov
popa
in
mov
xor
imul
pop
mov
jne
xor
shrl
mov
das
stos
in
rol
or
jo
in
mov
inc
bound
scas
xlat
std
xchg
mov
dec
adc
bound
fisubs
lods
leave
jle
sbb
mov
pop
fidivrl
adc
clc
scas
push
pop
pop
fbstp
addl
cmpsl
mov
jns
jle
or
or
add
insl
xchg
jno
in
in
shlb
push
xchg
cmp
xchg
pop
sahf
int3
mov
clc
repnz
aad
ret
sbb
push
add
popf
mov
test
pop
iret
inc
mov
mov
jl
inc
xor
xchg
push
sbb
xchg
adc
fwait
pop
mov
mov
insb
mov
out
cmc
outsb
xchg
jg
fldenv
xor
jno
or
lret
mov
test
mov
adc
je
push
mov
or
les
dec
and
mov
clc
push
xor
inc
inc
inc
stos
xchg
pop
jbe
sbb
push
sbb
test
insb
lcall
pop
xchg
std
add
xlat
out
xor
pop
mov
add
mov
outsl
stos
out
xchg
popf
fsubl
aad
aas
lock
cmpsl
jno
sbb
lret
rorl
sub
xchg
inc
stos
cmp
fldt
pop
dec
cmp
insl
jne
mov
cli
dec
and
lods
pop
cmp
in
inc
xor
stc
jo
mov
int
dec
pop
test
enter
inc
inc
xchg
repnz
out
mov
roll
and
cltd
jle
cmpsl
lods
pushf
aaa
push
fistps
cmp
mov
dec
aas
cmc
push
sbb
mov
cmp
mov
mov
cmp
hlt
jg
xor
lds
cwtl
jp
push
pop
scas
dec
mov
stos
jns
mov
aas
xor
push
aad
mov
addb
pop
imul
sbb
out
adc
push
into
pusha
mov
fidivl
sahf
in
push
jmp
cmp
dec
add
iret
mov
loopne
addb
dec
dec
cmpsl
sub
pop
or
or
adcb
out
jle
and
pop
loopne
sbbl
mov
push
popa
mov
fimuls
or
jb
ss
add
sub
xchg
test
mov
sub
push
xor
orl
cmp
mov
and
inc
cmp
mov
pop
adc
nop
adc
cmp
cmp
loop
dec
in
mov
mov
jecxz
pop
fnstenv
lds
jge
es
jo
sti
adc
push
mov
or
add
cltd
andb
test
add
mov
mov
outsb
lods
cwtl
and
cs
sbb
rcr
mov
xchg
popf
and
adc
pushf
and
inc
mov
mov
rcrl
pushf
imull
pop
adc
into
or
push
aaa
fsub
xchg
loope
lods
call
std
dec
inc
dec
and
jmp
fstp
cmpsb
fisubs
jg
movsb
jge
subb
dec
lea
imul
add
int
or
inc
clc
inc
imul
and
mov
pop
aaa
mov
movsl
jp
xorl
popf
enter
rorl
xchg
scas
push
mov
xchg
test
pop
dec
pop
cs
dec
xor
mov
faddl
adc
sbb
mov
popa
pop
cmp
pop
pop
cmp
xchg
sarb
pop
fdivp
test
frstor
idivl
mov
pop
and
fiaddl
std
push
mov
pop
jnp
dec
xor
test
sbb
xor
push
loop
sub
or
test
xchg
stos
mov
lret
sbb
mov
sbb
enter
adc
cmp
mov
sbb
out
out
lods
aad
ret
imul
imul
jle
subl
dec
inc
pushl
sbb
or
test
pop
pop
fbstp
pop
cmpsl
lret
inc
stos
int3
gs
sti
outsb
ss
frstor
std
jg
inc
les
out
push
cmp
mov
pop
rclb
sub
sti
cmp
push
cmp
shlb
jecxz
mov
and
lods
repz
addb
pop
push
ret
add
cmp
mov
ljmp
add
and
insb
sub
jo
cmp
mov
aas
repnz
and
cmp
out
mov
iret
in
add
movsb
cmp
loopne
inc
cwtl
popa
pop
out
sub
fists
movsb
mov
add
aam
dec
mov
mov
negb
and
dec
pop
push
mov
filds
sahf
stc
jge
cltd
or
mov
adcl
xchg
add
pop
test
arpl
dec
ds
out
js
cwtl
div
dec
pusha
cltd
mov
sbb
sub
test
sbb
rolb
add
les
fdivr
js
outsl
mov
lret
int3
lea
test
jecxz
mov
and
push
and
flds
int3
nop
cmp
mov
lret
rcrl
jg
mov
sub
sub
push
and
sub
dec
lret
addr16
mov
lcall
fwait
mov
stc
repz
cld
ss
xchg
cmpsl
dec
inc
or
push
inc
add
xchg
add
sbb
inc
push
adc
sahf
outsb
aam
push
jo
inc
lret
cmpsb
rorb
sub
dec
dec
popf
cmp
mov
stos
popf
mov
out
sub
ficoms
jmp
or
sub
adc
cwtl
cltd
stc
inc
das
push
js
mov
cltd
sub
cs
fcoms
hlt
xchg
jno
xor
aam
enter
add
arpl
fsts
or
mov
lahf
lret
test
jo
xorl
jecxz
in
cltd
adc
and
jnp
daa
sub
pop
push
sbb
jge
mov
mov
negb
sub
cmp
gs
and
out
into
push
test
push
roll
sub
gs
cwtl
mov
repz
loope
in
dec
and
jne
ret
mov
call
fadd
xorl
enter
fwait
dec
or
inc
and
jo
clc
add
mov
or
push
and
add
inc
and
sbb
lcall
loope
sbb
mov
xchg
lds
cli
adc
jp
das
sub
sub
mov
xor
das
aas
sbb
mov
stc
sub
pop
stc
repnz
push
ljmp
incb
push
repz
adc
and
jo
mov
dec
mov
call
xor
and
xor
xor
cmp
test
jp
xchg
pop
push
pop
scas
sahf
lret
gs
sbb
dec
stos
pop
lds
repnz
mov
outsb
into
mov
mov
test
dec
push
cld
cmp
fwait
dec
sbb
push
mov
mov
lcall
out
testl
out
or
loopne
repz
cltd
movsl
dec
dec
xor
bound
loopne
arpl
les
xor
sbb
jo
rorl
fistl
ror
sbb
sub
cmp
lods
xor
xchg
shlb
cli
insb
aaa
ja
mov
dec
adc
inc
dec
aas
or
aam
mov
je
cmp
js
push
xchg
pop
out
jp
fldl
inc
ficomps
bound
fdivl
out
into
mov
lds
daa
xchg
jl
adc
enter
cld
adc
mov
xorb
decb
or
dec
outsl
mov
popa
mov
xchg
pop
iret
pop
sbb
mov
daa
cmc
aaa
jo
rcll
or
rolb
jae
mov
sbb
cmc
adc
jb
cltd
or
das
mov
loop
leave
cltd
fcom
mov
mov
je
jnp
cli
push
add
xchg
sub
pop
clc
xor
call
dec
add
mov
xchg
rcrl
dec
imul
push
mov
xchg
mov
pop
loope
sub
jge
daa
cmp
js
lds
jb
leave
lret
sub
ret
add
xchg
test
mov
and
aas
std
and
rorb
xor
jne
sub
dec
lods
mov
sub
xor
push
leave
dec
mov
cmpsb
fwait
sbb
movsl
pop
mov
xorb
lock
call
out
je
mov
or
jno
push
fwait
and
lret
or
jno
mov
or
jmp
nop
dec
push
or
and
inc
stc
adc
xlat
jmp
ljmp
gs
pusha
aad
sub
lock
dec
and
jae
cmp
es
in
lds
xchg
int3
adc
push
push
sub
or
fbld
lock
stos
sbb
js
movsl
loope
aad
lds
in
add
scas
clc
dec
push
jmp
lret
sub
dec
inc
das
les
pop
or
adc
cmp
inc
jle
insl
iret
cmpsb
fidivrl
inc
addr16
rorl
ffreep
scas
and
mov
stos
call
fwait
or
mov
fsubrl
imul
jmp
push
and
xchg
or
arpl
mov
aam
and
iret
ret
je
sti
jbe
mov
pop
sbb
out
push
cmp
xor
mov
sahf
insl
in
fsubrl
jo
cmp
or
aaa
popa
mov
incl
loope
xor
push
ss
in
inc
test
push
jecxz
call
pop
rcll
and
mov
cmp
inc
sbb
ss
jecxz
pop
xchg
iret
mov
cmp
and
punpckhbw
cmp
out
bound
orb
or
scas
mov
mov
push
cmc
data16
les
imul
and
popa
stc
xor
dec
daa
sbb
outsb
xchg
or
xchg
or
inc
js
or
pop
loope
clc
popa
dec
cld
push
cmp
add
xchg
mov
aam
mov
in
js
scas
mov
loop
lret
and
cmpsb
sub
or
dec
jne
fisubs
loop
inc
mov
mov
cmpb
ss
lret
mov
inc
hlt
andl
inc
cmpsl
mov
push
test
inc
popf
fs
pop
lahf
hlt
and
imul
xchg
adc
mov
jns
cmp
std
pop
push
mov
in
xchg
ret
je
xor
movsb
add
das
sub
and
mov
cltd
push
mov
inc
lods
in
pop
rclb
notl
cmp
movsb
out
xor
dec
cli
dec
sti
mov
jnp
scas
int3
cs
push
je
cmp
jnp
popa
sub
sahf
mov
repz
adc
push
adc
push
aam
fwait
jl
or
xor
movsb
cld
inc
dec
test
shlb
mov
pop
out
aaa
stos
and
sahf
mov
movsl
mov
bound
add
jge
inc
sarl
sti
cwtl
subl
push
out
fmull
xor
and
lds
xchg
sbb
mov
loope
mov
sti
dec
and
fwait
or
pop
dec
mov
movsb
jmp
jno
lret
dec
sti
shll
pop
icebp
jbe
pop
cs
cmp
adc
or
fcoms
imul
dec
int
push
push
dec
mov
xchg
lock
aaa
add
in
daa
mov
imul
dec
gs
adc
outsb
adcb
clc
and
aam
push
cmp
push
movsb
daa
ffree
jg
jb
push
push
shrb
inc
les
sub
mov
cmp
sti
and
jb
cmp
fstps
out
imul
es
outsl
fs
and
dec
je
xorl
add
mov
jnp
sbb
inc
ret
inc
aam
lds
jno
mul
mov
ss
xor
and
mov
int
add
mov
mov
push
push
je
pop
neg
xchg
xor
jnp
icebp
mov
inc
inc
pop
sbb
push
add
ficompl
pop
pop
cmpsl
lahf
orb
fildl
jl
addr16
lret
test
jns
mov
es
xchg
mov
ret
xchg
pop
mov
pop
mov
or
or
push
rclb
dec
shlb
ja
mov
push
fiadds
clc
imull
pop
sbb
ljmp
sub
in
aad
cltd
xchg
inc
adc
inc
inc
fidivl
sbb
push
popf
filds
dec
imul
in
inc
inc
xchg
scas
fbld
es
jmp
ljmp
clc
clc
mov
sub
scas
sub
outsb
je
adc
and
in
test
hlt
fnstsw
mov
int
les
mov
jb
jne
pop
ret
dec
push
insl
and
into
jo
fcoms
inc
jbe
xchg
jae
nop
movsb
add
and
movsb
je
mull
sbbl
js
lahf
dec
mov
ret
data16
cmpsb
add
adcb
cmp
mov
stos
popf
imul
lock
xor
adc
xor
ret
sub
cmp
push
cmpsb
dec
ss
insb
stc
aad
push
and
lock
push
adc
notb
xchg
roll
and
add
adc
dec
ficoms
dec
push
pop
pop
rcrb
dec
subl
in
mov
or
jle
in
inc
test
lock
xor
dec
pop
out
jmp
lret
jno
stos
sub
push
mov
jns
mov
mov
inc
icebp
addr16
das
es
movsb
xor
xchg
sub
cmp
out
push
or
je
push
pop
enter
lret
into
scas
and
pop
push
cltd
pop
inc
movsb
sub
add
sahf
push
bnd
leave
aam
in
pop
cmp
cmp
and
lock
hlt
jnp
loopne
jb
in
push
aas
cs
cmpsb
stos
push
into
sub
push
out
sbb
gs
pop
push
in
sub
push
and
sbb
in
outsl
gs
loop
xor
mov
sbb
int
popf
aaa
add
or
stos
push
nopl
push
js
xchg
repz
into
inc
lock
stos
and
or
dec
mov
inc
add
lea
sbb
add
mov
fidivrl
leave
push
jne
inc
pop
cmp
push
mov
and
inc
test
icebp
cld
cmc
jne
cmp
inc
mov
fadd
add
test
js
fmull
push
sbb
iret
xchg
imul
js
and
enter
xchg
sti
sbb
dec
dec
cmpsb
xor
icebp
adc
or
mov
out
push
mov
mov
xlat
pop
imul
cld
and
mov
fs
movsb
les
loop
in
out
sub
lds
sub
inc
mov
xor
xchg
fistps
repnz
fists
pop
in
cmpsb
add
pop
sub
pop
ja
xlat
or
ja
aas
cs
sub
xor
sbb
or
and
mov
add
cmp
push
jns
sahf
fmuls
mov
add
arpl
outsl
arpl
dec
pushf
add
dec
outsl
stos
inc
mov
inc
or
add
gs
sarb
mov
mov
ss
movsl
loopne
mov
arpl
lcall
icebp
push
adc
push
jle
leave
dec
out
cmpsl
xacquire
dec
cwtl
popf
jmp
call
add
adc
aas
or
dec
out
in
shll
cmp
test
dec
fistpll
lahf
ficomps
jo
add
movsl
add
stos
fwait
pop
sub
test
gs
inc
sbb
mov
or
inc
stos
jne
loop
pop
and
sbb
mov
pop
adcl
mov
shrl
nop
jbe
call
inc
insb
adc
mov
pushf
sbbl
xor
stc
leave
lcall
ja
dec
pop
lahf
sbb
fcmovnb
divb
push
mov
ret
push
inc
push
add
push
mov
mov
incl
sbb
jae
sbb
jbe
shl
dec
loop
or
popa
cwtl
imul
push
fst
pop
push
xor
outsb
mov
jns
test
cwtl
shlb
out
pop
jmp
pop
xchg
in
jecxz,pn
sti
mov
dec
sti
xchg
pop
gs
cmp
or
cmp
push
mov
cmp
and
test
dec
jns
cld
inc
roll
or
push
stc
shll
shrb
enter
lock
clc
mov
insb
mov
adc
pop
mov
sbb
xchg
insl
ljmp
dec
inc
call
mov
add
iret
stc
in
fwait
adc
movb
sbb
push
fidivl
and
dec
addl
rorb
cmp
sub
popw
or
icebp
outsb
rcr
movsb
sub
jl
adc
mov
int
adc
xor
jo
sbb
leave
data16
push
rol
mov
shll
push
lds
addb
sub
sub
sub
clc
jg
xor
stos
les
stos
and
jp
push
or
xor
in
out
and
xor
out
dec
inc
cmpsb
out
mov
jb
idivb
dec
pop
fwait
xlat
aaa
stos
rcrb
cmp
mov
inc
ja
dec
inc
int
inc
pmuludq
xchg
sbb
or
jae
or
pop
cld
popa
dec
cld
sti
cld
daa
cmp
push
push
or
daa
xchg
sub
lahf
clc
nop
fstpl
cmp
dec
xchg
movsb
imul
lahf
repz
mov
adc
dec
into
xchg
cltd
dec
or
jbe
clc
push
xchg
ss
aad
xchg
xor
push
and
repz
inc
fs
fsubrl
pop
pop
dec
das
and
mov
cmp
mov
fucomp
mov
ret
xor
or
push
jmp
mov
jl
arpl
sub
jb
ljmp
hlt
data16
or
fwait
sub
push
push
bound
cmp
add
mov
and
xor
addr16
dec
mov
add
notl
std
sub
insb
iret
cmp
cmp
dec
xchg
std
jbe
stos
nop
pop
arpl
pop
dec
hlt
test
xchg
ret
sarl
popa
stc
incl
xchg
icebp
stc
lods
movhps
mov
sub
add
clc
pop
inc
sbb
xor
jne
mov
outsb
in
popa
in
icebp
xchg
dec
cwtl
mov
xchg
jmp
dec
cmp
int3
call
mov
icebp
push
push
aam
mov
and
add
jno
mov
dec
mov
movsb
popf
cli
lock
popa
loopne
mov
mov
addl
dec
and
stos
in
rorb
lcall
call
mul
mov
clc
fcmovnu
mov
lods
arpl
outsl
mov
das
mov
in
loope
lock
sbb
loop
ljmp
rorl
je
loop
mov
push
leave
lods
push
xchg
lret
cwtl
mov
aas
mov
xchg
cmc
sub
movsb
mov
sub
repnz
int3
out
imul
xchg
push
or
adc
into
repz
les
int3
mov
es
cmp
insb
jbe
or
aad
dec
mov
cld
or
shrb
mov
mov
cld
adc
inc
push
bound
xor
arpl
loope
xor
sbb
mov
sbb
fiadds
lods
push
pop
inc
sbb
pop
pop
lcall
call
bound
adc
jbe
fiaddl
bound
adc
arpl
popa
jo
push
insl
cmp
dec
inc
ret
popf
dec
inc
sti
lcall
pop
adc
add
mov
cmpsb
push
and
sahf
into
mov
and
adc
dec
or
inc
xchg
out
cmpsb
mov
push
sahf
imul
out
mov
mov
xor
xor
cltd
call
xchg
mov
out
data16
and
adc
lahf
cmp
cwtl
lea
sub
push
jns
scas
lods
push
add
and
or
cmc
xchg
sub
sub
cmc
sub
xchg
sbb
out
outsl
imul
pusha
pmulhw
ss
sbb
cwtl
add
enter
sbb
push
or
insl
movsb
mov
lock
cmp
mov
push
push
inc
or
mov
sub
jmp
mov
sbb
jb
cld
mov
mov
lds
movsl
mov
jns
push
jne
sti
out
mov
scas
repz
inc
jl
hlt
roll
testb
jns
jo
iret
and
ja
xchg
push
stos
icebp
test
shr
jne
sbb
push
xchg
cltd
pop
repnz
mov
xor
pushf
sub
mov
int
arpl
lret
sub
sbb
clc
fs
sahf
iret
cmpb
xor
push
push
mov
jmp
into
sbb
jns
cmpsl
mov
push
push
cltd
xchg
insl
xchg
xor
mov
xchg
dec
nop
cmpsl
mov
push
push
adc
aas
cmp
add
xlat
xchg
sbb
ja
stos
inc
pop
nop
lds
data16
icebp
fstp
sub
cmc
in
imul
mov
repz
pushf
jne
es
rcll
mov
mov
push
mov
xlat
std
dec
rol
in
pop
jnp
xchg
mov
push
pop
mov
imul
fcoms
jg
scas
pop
adc
xchg
les
mov
dec
aad
push
xor
cmp
sbb
mov
push
cmp
sub
mov
pushf
dec
fwait
mov
and
sarb
insl
test
pop
enter
pop
inc
xlat
adc
adc
mov
sarl
imul
adc
adc
push
inc
aam
mov
movsl
and
lods
add
enter
dec
jmp
cwtl
sarl
scas
arpl
mov
or
xor
fisttpl
dec
popa
lds
mov
mov
jmp
dec
adc
addr16
popf
or
repnz
xchg
enter
pop
mov
push
mov
fs
cmp
imul
test
lea
xchg
cmpl
sub
imul
adc
pop
mov
push
mov
mov
imul
mov
aas
xchg
add
lea
rcrl
pop
sub
cmp
adc
out
dec
sbb
aam
movsb
hlt
push
fdivr
mov
jle
xor
jmp
sti
repz
enter
sbb
cmp
and
jge
inc
orb
mov
cltd
cmp
adc
mov
xchg
js
push
and
mov
sysret
js
imul
fsubl
xor
sub
divb
inc
int3
in
add
fs
cmp
add
jmp
cmc
push
movsb
mov
sar
inc
mov
ror
jl
pop
lods
cwtl
lret
cltd
inc
mov
xor
faddp
insb
pop
mov
add
popf
fisubs
and
push
jl
or
mov
insl
mov
push
lds
test
ret
fisubrs
lahf
lea
into
or
sub
stos
rcrb
divb
inc
sub
das
rol
ss
inc
rorl
sbb
add
ja
add
cmp
push
jl,pt
jns
xor
sarb
icebp
lahf
rorb
dec
sbb
cs
sub
sbb
cs
icebp
mov
mov
ss
inc
int
ds
and
xor
fdivp
mov
push
xchg
mov
inc
movsb
jbe
lods
pcmpgtb
cs
xor
sahf
rorl
and
adc
sbb
test
pop
push
in
add
adc
mov
xor
ds
in
in
or
aam
push
fnstenv
jmp
pop
sub
add
dec
mov
cmpsl
icebp
ss
lahf
lret
sbb
cmp
mov
jp
fstpl
data16
adc
push
cwtl
cmc
fcompl
shl
push
inc
xchg
sbb
daa
jb
scas
scas
insb
and
loopne
das
and
out
popf
push
fisubs
psubsb
xorl
or
test
mov
out
push
mov
cmp
push
add
std
cmp
rcll
repz
pop
fsubrs
sub
push
jnp
lods
sub
pop
push
popf
pop
sbb
lods
sub
test
fdivrs
inc
lret
jo
inc
aam
jbe
jo
cmpxchg
cmp
leave
xlat
jg
add
cmpsl
or
push
out
adc
mov
push
ja
and
inc
adc
lcall
mov
inc
loopne
xchg
test
mov
adc
mov
jno
cmpl
xchg
dec
dec
in
push
adcl
sbb
xchg
jo
and
sub
test
pusha
ljmp
sub
fiadds
or
sub
ror
mov
sti
xchg
lcall
jmp
hlt
arpl
lock
testl
lds
xor
sub
imul
push
ret
pop
lahf
popw
and
push
xor
rolb
mov
mov
xorl
adc
mov
push
mov
mov
sub
dec
sar
mov
into
pop
addb
pop
mov
fs
aaa
popf
insl
fsubs
add
subl
add
and
inc
lds
movsb
mov
iret
mov
xor
fstps
dec
dec
loopne
xchg
mov
loope
or
imul
cmp
lods
add
mov
xor
sarb
das
and
mov
stc
sti
sbb
xchg
jecxz
aaa
fs
jmp
push
rcrb
add
mov
inc
push
sbb
fwait
jg
filds
sbb
push
ja
mov
inc
cmp
mov
sbb
dec
jnp
je
push
ret
dec
into
enter
cmc
arpl
std
daa
stos
or
adc
in
xor
mov
ret
repz
cmp
adc
inc
fs
test
imul
sbb
and
fdivp
or
call
fcomip
cmpsb
mov
cltd
out
pop
loop
enter
scas
pop
inc
jne
mov
and
add
dec
mov
inc
dec
imul
stos
cmp
jecxz
inc
pop
adc
cmpsb
mov
mov
aaa
jae
adc
add
loope
mov
outsb
mov
dec
push
test
out
ds
sti
addr16
mov
adc
mov
xor
pop
xchg
movsb
negl
in
xor
mov
out
sbb
cli
aam
test
fadd
insl
dec
aaa
pop
loope
imul
or
sbb
pop
cltd
stos
and
sub
ret
aas
add
mov
rol
and
ret
rep
sub
adc
pop
or
out
test
xorb
fucomip
mov
mov
sbb
add
jae
cld
adc
adc
addb
xor
orl
cmp
cmpsl
mov
add
push
hlt
shr
in
push
sbbl
mov
subl
fldcw
jl
sbb
push
and
inc
gs
cmp
pop
or
mov
lods
outsl
mov
ret
lret
mov
or
stos
jecxz
call
stc
adc
in
jge
rorb
jecxz
adc
fwait
adc
jle
outsl
mov
mov
jno
push
sbb
inc
sub
mov
and
sbb
das
scas
mov
jmp
adc
cmp
pop
jb
mov
sbb
cmpsl
or
jp
lods
clc
jp
ficoms
orb
xor
and
lcall
and
inc
mov
fdivs
cmpsb
adc
and
jno
adc
negb
fildll
push
stc
push
fidivrl
data16
sub
xor
xchg
daa
and
sbb
rcrb
mov
fwait
lock
mov
hlt
pushf
inc
rolb
xor
add
jno
add
cmp
push
ljmp
jp
cmovge
rcrl
dec
stos
push
adc
lsl
divl
mov
mov
fidivrs
pop
leave
dec
hlt
sub
jmp
sub
popf
sbb
in
or
sub
pop
cmpsb
rclb
jo
js
mov
jmp
pop
rclb
cmp
push
outsl
or
dec
push
lahf
pop
xchg
mov
stos
test
fwait
cmpsl
cld
xchg
dec
shrl
cmp
dec
xchg
orb
sbb
pop
pop
call
cmp
cli
sub
xor
divl
fwait
ret
data16
mov
push
inc
sub
imul
cmc
lds
fistl
cmc
nop
add
es
push
arpl
movsb
sbb
lds
bound
das
mov
shrl
xor
lret
enter
jbe
push
in
leave
xor
fcmovnbe
mov
aad
daa
sahf
lahf
pop
or
pop
insb
fs
lods
xchg
ja
adc
lods
mov
scas
inc
xor
sub
inc
xor
je
mov
aam
movsl
outsb
test
jns
stos
push
sub
push
jno
xor
xor
sbb
ficompl
and
sbb
cmp
fidivs
or
sbb
imul
ret
mov
mov
loopne
outsl
dec
push
xor
mov
mov
mov
push
ljmp
aam
jbe
xor
sub
nop
sub
das
pop
int
hlt
loop
add
test
push
mov
xchg
and
loop
or
test
jge
cmp
call
loop
aam
aas
mov
or
and
and
lods
test
shll
adc
mov
aad
xor
notb
push
cmp
fisttpl
inc
jmp
into
loope
bound
adc
mov
and
xchg
mov
dec
mov
cmc
testl
scas
push
lds
fdivs
push
out
xchg
jge
or
aam
or
test
mov
je
inc
mov
cmc
mov
ljmp
cmp
adc
cltd
fst
push
mov
push
push
stos
aam
popf
mov
cwtl
inc
sbb
hlt
push
lock
add
in
nop
push
mov
imul
or
orl
push
cltd
add
aad
mov
push
jg
or
push
cmpl
testl
jmp
std
bound
and
lret
lds
sub
test
jbe
xor
xchg
pop
pop
rcrl
out
mov
aas
sbb
std
es
jp
imul
adcb
sbb
mov
movsb
mov
movsl
inc
and
ja
nop
out
sbb
call
jecxz
clc
inc
int
add
fwait
dec
inc
fwait
sub
enter
in
jl
inc
fcmovnb
jo
loopne
popa
aad
rcrb
cmp
popa
xor
push
dec
cmc
icebp
inc
jo
dec
mov
sub
sub
stos
test
sub
test
bound
inc
ss
mov
nop
in
mov
repnz
iret
lcall
xchg
incl
dec
jp
sub
push
cmpsb
sbb
fwait
adc
imul
aaa
int
fcomps
out
sub
xchg
les
lret
out
mov
fcomps
push
mov
lahf
das
cmc
or
xchg
fisttpll
rclb
rclb
xor
dec
into
add
push
cli
push
inc
lret
jle
inc
jge
cs
mov
or
mov
test
xchg
mov
pop
xchg
aad
xchg
adc
xor
mov
not
lods
stos
or
sbbl
stos
sti
cmpsl
jo
adc
inc
push
ret
outsl
jno
cmc
sarl
sub
push
jp
popf
mov
push
es
push
notl
in
ret
lods
cltd
sub
push
repz
push
out
outsl
jne
andl
repz
shll
mov
push
push
movsl
pushf
ds
js
dec
lret
dec
push
adc
cmp
rorl
dec
and
cld
cmpsl
pop
mov
jmp
push
dec
mov
xchg
push
or
es
or
dec
push
push
fldt
mov
out
or
aas
mov
and
sbb
aad
cwtl
or
mov
in
mov
repnz
sbb
jmp
inc
add
dec
out
fsubrl
jle
add
fmull
or
mov
dec
push
imul
ret
mov
adc
or
jne
mov
sbb
dec
cmp
push
cmpsb
mov
outsl
scas
adc
and
xchg
and
pop
sbb
add
imul
push
imul
hlt
mov
ja
movsl
lds
mov
pxor
andl
and
sub
data16
xchg
lock
jge
add
mov
addr16
mov
icebp
enter
xor
sbb
enter
or
lret
imul
xor
xor
lsl
add
and
xchg
jbe
jnp
xor
xor
hlt
std
mov
cmp
fcos
in
jl
xor
hlt
loopne
je
notb
aam
push
dec
and
inc
push
subl
test
in
dec
rcrb
or
sub
movsl
cmp
inc
push
mov
andb
xchg
data16
daa
int
test
mov
inc
mov
mov
mov
in
pop
mov
pop
jmp
not
mov
inc
pop
jp
int
adc
stos
or
loope
mov
div
xorl
pop
cmpsb
dec
and
pop
push
pop
into
fidivs
imul
shl
mov
aas
inc
fsubrs
iret
stc
jbe
jnp
mov
fildll
ljmp
pop
dec
cmp
adc
sbb
out
or
jl
inc
fadd
mov
arpl
aaa
mov
out
dec
mov
and
push
lret
dec
push
daa
popa
mov
mov
lret
aad
repnz
es
dec
jmp
xchg
repnz
cmp
jbe
sub
pop
lret
add
movsb
mov
ja
mov
jnp
mov
loope
and
adc
test
mov
and
push
jne
inc
repz
mov
shlb
aas
add
pop
push
jl
repz
pop
ja
popf
sub
in
mov
nop
in
test
es
addb
mov
out
jle
fsubrl
cltd
aas
dec
aam
jnp
test
insl
cmp
int3
cmp
push
dec
add
push
call
cmc
test
scas
cmp
aas
hlt
inc
rcrb
addr16
xor
xchg
test
and
mov
fisubrl
add
and
sub
cmpsl
lock
mov
int3
dec
or
ss
hlt
jmp
scas
dec
insb
sbb
in
push
mov
int
cld
lods
jp
std
jo
icebp
or
cs
outsb
xchg
test
mov
jbe
in
pop
into
fwait
imul
inc
out
mov
pusha
ja
stos
cmp
mov
xor
andb
jnp
xor
xchg
pop
add
mov
mov
cmp
das
test
xor
push
test
cltd
jg
dec
or
xor
in
das
pop
stc
je
test
imull
divl
jb
gs
iret
test
ficomps
xor
pop
outsl
pusha
fdiv
leave
push
jae
stc
adc
or
in
push
and
push
mov
pop
add
bnd
push
cmp
mov
xlat
insl
and
out
add
nop
mov
fucomi
xor
lds
adcb
and
lret
icebp
and
cmc
and
call
pop
dec
data16
imul
sbb
insw
std
clc
mov
stc
mov
or
divb
mov
sub
jb
into
or
cmc
mov
push
ja
push
popf
dec
lahf
mov
stos
sbb
add
mov
leave
sbb
and
leave
pop
shl
xchg
in
sub
mov
popa
vpminsw
add
jae
mov
dec
fcmovu
dec
jno
mov
movsb
dec
in
popa
push
aas
jmp
loopne
scas
gs
add
lock
gs
lea
ss
pop
jo
and
jnp
xchg
cmovb
lret
or
mov
fbstp
pop
push
mov
in
out
std
xlat
lods
js
add
stos
stc
loope
inc
lds
scas
out
mov
and
loopne
jne
movsb
dec
mov
and
nop
jno
adcb
jecxz
sub
dec
push
lcall
adc
add
or
lods
daa
adc
add
sub
jle
std
test
dec
stos
lock
in
hlt
and
arpl
sahf
push
jl
jp
pop
sub
aas
mov
cmc
sbb
int3
dec
push
mov
adc
cmp
pop
imul
push
rcrb
dec
cwtl
xchg
xchg
push
scas
push
fcomip
cli
and
pop
jno
stos
nop
cmpsl
mov
leave
iret
das
scas
insl
in
imul
mov
inc
xor
push
dec
mov
std
push
pop
sbb
aas
pop
movsb
insb
mov
nop
iret
or
and
mov
mov
cmp
jle
xor
adc
jne
ds
xlat
add
sub
or
lcall
pop
ss
adc
sbb
cmpsl
sbb
dec
jmp
sub
neg
js
leave
inc
cmpsb
mov
frstor
mov
hlt
mov
lahf
iret
inc
ds
call
stc
and
sti
xchg
aaa
in
out
iret
pop
and
sbb
add
push
out
nopl
xchg
out
call
push
and
cs
hlt
xor
fcmovne
loope
inc
push
arpl
fsubrs
incl
rcrb
pop
stos
sbb
test
adc
jecxz
sti
jmp
imul
fisttpl
mov
ja
add
mov
mov
aad
sub
aad
stos
outsl
hlt
pop
adc
or
push
jo
in
or
ja
cmpsl
xor
ljmp
jecxz
test
out
ret
into
sbb
jae
jecxz
sub
arpl
in
mov
mov
loopne
pushf
outsl
mov
push
cs
cld
pop
xor
or
in
cmpsl
xchg
in
fsubrl
mov
adc
bound
movsb
push
subb
jnp
mov
stos
pop
and
jecxz
inc
cmc
mov
jo
sbb
push
lahf
xchg
add
mov
fwait
int
mov
jl
xor
mov
push
xchg
cmovp
jl
xlat
sub
out
and
iret
fistps
push
mov
movsl
mov
pop
add
loope
lcall
notl
cli
out
mov
adc
push
lods
or
adc
sub
sbb
inc
adc
inc
pop
mov
sbb
mov
int
shr
pop
inc
mov
cs
cmp
push
sub
mov
cltd
sub
mov
push
mov
pop
stos
and
lret
cwtl
sbb
dec
mov
xchg
popf
xor
lea
aaa
inc
insl
clc
lds
adc
repnz
insb
jae
lret
call
xor
inc
or
inc
addr16
push
mov
rorb
mov
shll
add
xchg
aaa
enter
hlt
mov
add
jecxz
lods
orb
iret
shlb
insl
lahf
sbb
mov
rcrl
or
or
add
movsb
iret
or
cli
ficomps
aaa
jns
push
pushf
jae
add
fs
sub
call
loope
icebp
add
xor
rorb
mov
cmc
mulb
mov
xchg
jg
push
push
fdiv
insl
inc
add
adc
fmuls
mov
sbb
jg
jae
cmc
xchg
mov
jg
xor
xor
adc
scas
imul
adc
mov
fisubrl
sbb
mov
out
xchg
outsl
add
add
mov
sub
jo
pop
xor
mov
loope
adc
jae
push
shrb
std
push
out
jmp
cmp
sbb
ss
add
pusha
loop
push
push
aad
sti
adc
test
fcompp
enter
sbb
jle
fildll
inc
adc
mov
int3
jle
leave
pop
and
popf
mov
sarb
xor
and
ljmp
add
mov
add
aam
push
loope
sbb
mov
cmp
push
xorb
mov
icebp
cld
push
inc
fistl
push
aam
fistpll
mov
and
cld
dec
cmpb
shll
lock
or
add
sbb
addb
dec
push
dec
out
mov
pop
cmp
ljmp
cmpsl
inc
cmpsb
mov
dec
dec
cwtl
mov
inc
mov
movsl
jne
xor
scas
xchg
lret
clc
outsl
and
dec
sbb
add
stos
push
xchg
mov
xor
add
mov
js
mov
outsb
and
mov
mov
mov
dec
mov
cmp
push
std
add
test
sbb
in
dec
jns
fistl
mulb
fadds
and
inc
or
mov
mov
pop
xchg
or
loopne
sbb
xor
call
sti
test
jbe
push
mov
inc
adc
mov
xchg
mov
and
cmp
mov
arpl
sbb
and
and
into
int
loop
mov
pusha
xor
cs
adc
sarl
add
std
pop
xorb
pop
dec
adc
mov
push
lcall
jae,pt
out
sahf
out
and
rorb
push
push
push
daa
enter
test
lret
jmp
fs
outsl
pop
outsb
lea
test
mov
pusha
ja
sub
insb
movsl
daa
fcoms
cwtl
ds
jecxz
and
sbb
sub
ret
enter
add
push
cmp
xchg
repz
imul
sbb
repnz
fwait
or
jb
xor
pop
ja
incb
pop
lds
test
pusha
leave
cmp
out
sbb
pop
sub
orb
arpl
enter
mov
or
outsb
fs
scas
sti
mov
and
cmp
adc
aaa
xor
loopne
insb
adc
xor
xorl
xlat
test
xor
test
outsl
int3
fadds
mov
in
int
push
mov
cmpsl
inc
inc
pop
ljmp
pop
jnp
lret
cmp
add
inc
xchg
arpl
or
pushf
inc
cmc
pop
dec
xor
jb
ds
xchg
pop
fnstsw
pop
imul
jle
cmp
adc
in
fisubl
mov
cmp
xchg
rcll
inc
jle
stos
stc
dec
mov
dec
jl
mov
mov
pop
mov
adc
sbb
dec
add
lods
stos
add
out
pushl
sub
jp
dec
jb
jne
pop
adc
movsl
mov
mov
pop
lds
xchg
idiv
gs
sahf
arpl
dec
aad
or
and
add
and
add
lock
jae
jae,pn
ror
fisttpl
stc
mov
xor
mov
fs
stos
adc
inc
or
jbe
mov
test
pop
sub
jmp
cmpxchg
mov
add
mov
pop
icebp
aam
mov
pop
mov
dec
stos
add
cli
aad
into
add
adc
arpl
xchg
mov
mov
mov
orb
mov
loop
xor
test
inc
sbb
jg
shll
mov
sbb
imul
or
int
xchg
ja
adc
aas
xchg
jmp
pop
cs
push
or
cmpl
add
cld
sbb
xchg
into
in
fwait
sbb
mov
std
sub
das
xor
es
cmpsb
arpl
push
fsubs
out
push
data16
int3
in
lret
or
xchg
mov
sbbb
mov
in
jno
xlat
test
jo
lcall
cmp
adc
mov
mov
repz
bound
enter
rcrl
xor
inc
mov
jns
cmp
test
add
in
mov
cmpsl
imul
lds
iret
sbb
xor
ljmp
ja
mov
pop
adc
scas
mov
ja
popf
or
data16
ljmp
inc
mov
jle
sub
ljmp
jecxz
dec
and
hlt
movsl
jns
fucomip
and
out
push
sub
mov
adc
inc
xchg
or
into
pop
push
cmpsb
add
xor
out
push
leave
loopne
lods
sbb
xchg
xchg
push
jle
push
mov
push
push
loope
pop
mov
jno
aaa
cmp
ftst
gs
jmp
xchg
ljmp
mov
pop
cmpsl
test
cmp
andl
pop
mov
addr16
cmp
pop
sub
leave
jmp
filds
sub
fs
push
mov
roll
jno
mov
loop
in
stos
stc
mov
addl
jbe
enter
ss
cld
dec
stos
push
jo
ja
test
dec
add
xchg
iret
fisubl
dec
cs
lods
imull
push
fsubl
adc
and
outsb
test
dec
mov
cmp
shl
inc
sub
popf
repnz
jge
sub
outsb
imul
sbbl
addr16
in
popf
outsb
pushf
loope
adc
lods
xchg
insl
sub
mov
ss
cmpsb
cmc
cmp
cli
fiaddl
mov
data16
sbb
lahf
sub
and
cmp
add
mov
jns
es
insl
pop
cmc
test
ret
test
dec
pop
inc
push
xchg
test
idivl
sti
shrb
xor
icebp
daa
mov
pop
pop
push
leave
cmpl
lds
sub
leave
jle
cmp
jle
adc
mov
xor
loop
push
popf
push
call
lea
mov
and
dec
loope
adc
shl
fs
inc
pop
mov
sbb
lret
cs
pop
push
iret
dec
popf
xor
mov
add
out
lods
mov
mov
imul
cmp
movsb
rolb
sub
sub
inc
popf
pop
popf
mov
and
in
add
mov
cmpsl
mov
xchg
adc
xlat
cmp
adcb
xchg
pop
sbb
inc
mov
jl
dec
in
imul
aam
or
sub
mov
and
push
fwait
jae
jmp
sub
jg
mov
push
jl
xchg
fwait
xor
push
jnp
iret
xchg
sarb
rclb
push
add
movsl
mov
pusha
mov
pop
aas
iret
jl
jns
negl
dec
push
movsb
dec
insb
into
ss
gs
jecxz
or
mov
cmc
call
jge
in
call
loop
mov
dec
fcomps
add
adc
outsb
cwtl
mov
bnd
nop
imul
or
dec
xor
sbb
dec
aas
xchg
loope
repnz
test
push
cmp
addr16
adc
mov
ret
inc
test
mov
dec
mov
mov
inc
or
xchg
sub
in
arpl
jne
mov
jge
js
push
mov
test
jl
out
mov
inc
das
mov
fiaddl
jae
dec
mov
outsl
cmpb
shrl
aaa
pop
xchg
push
cmpsl
add
push
cmovo
arpl
insb
and
sbb
xor
scas
out
hlt
stc
push
mov
pop
shrb
cmp
or
imul
notl
push
cmp
push
and
jg
ss
lahf
xor
lcall
sbb
mov
shr
xor
add
mov
sub
lods
mull
cmp
sbb
scas
mov
sbb
cmc
stos
cmpsl
inc
shrb
lea
push
clc
pop
jno
dec
enter
pop
and
sti
xchg
sub
xchg
in
add
pop
enter
sbb
out
es
loopne
popf
inc
call
inc
or
ss
aad
xchg
inc
mov
mov
sub
pop
inc
gs
lret
mov
movsb
mov
into
stos
sub
jo,pn
shlb
aaa
in
leave
imul
cmp
add
lret
repnz
adc
nop
sbbl
pop
and
frstor
jo
dec
pop
stos
lods
je
xchg
push
sbb
cmp
push
add
add
pop
xor
jmp
dec
int
rcrl
cmp
sbb
and
movl
negl
popf
sub
mov
sahf
mov
popa
mov
jmp
inc
outsl
xchg
fsubl
adc
inc
fs
out
scas
push
faddl
rclb
dec
inc
add
es
xchg
mov
mov
sub
jae
ret
repnz
leave
jge
loop
pop
call
push
sub
stos
pop
rorb
push
mov
jnp
sahf
push
addb
cmp
lds
xchg
fwait
mov
xchg
cmpsb
xor
xor
jl
lret
mov
pusha
add
mov
push
inc
adc
mov
hlt
nop
daa
loopne
push
jecxz
sub
jge
rorl
loope
sub
mov
mov
add
inc
out
scas
mov
mov
mov
inc
pop
roll
das
mov
dec
cli
sbb
js
shrl
xchg
jne
lds
pop
fldenv
mov
mov
loopne
lods
outsb
mov
mov
adc
notb
add
mov
outsl
clc
rcl
int3
mov
dec
fcmovu
out
lret
fbld
dec
orb
dec
loope
dec
les
lret
jo
xor
inc
int3
cli
xor
push
sbb
jae
mov
out
iret
inc
xchg
in
shrl
clc
dec
inc
inc
pop
push
sub
sbb
push
mov
leave
push
push
andl
out
and
orl
push
jmp
shrb
out
mov
in
inc
imulb
ss
loop
and
mov
nop
add
inc
psubusb
xlat
rdtsc
push
xorl
cmp
fcompl
hlt
in
shll
fldt
pop
outsb
mov
mov
sub
in
test
fstps
sub
iret
mov
orb
sbb
inc
or
adc
shll
push
incl
jo
call
insl
out
data16
nop
ja
fdivrs
leave
push
and
test
inc
arpl
adc
out
push
mov
add
mov
xor
xchg
push
push
fcomps
xchg
ss
cltd
repnz
loop
adc
xchg
sahf
decb
and
outsl
inc
jns
in
xor
mov
mov
dec
xor
aaa
pop
or
popa
push
cld
in
xor
xor
xchg
dec
add
pushf
pop
fimull
or
add
sahf
sbb
jg
sub
mov
sti
popf
popf
mov
imulb
and
sbb
inc
sub
sbb
and
push
pop
mov
mov
popf
gs
rorl
aas
push
cli
hlt
cltd
ds
ficoml
movsl
adc
mov
jge
popa
sbb
mov
test
sub
in
inc
shrb
inc
mov
in
fnstcw
addr16
pop
pushf
pop
cltd
or
jno
sbbb
insb
cmp
add
push
notl
mov
adc
gs
pop
sub
cmp
ljmp
push
int3
inc
jb
cmp
jecxz
add
imul
nop
adc
fcoml
leave
push
add
mov
xor
aad
xor
out
adc
xor
xor
inc
xor
sahf
movsl
out
mov
fdivs
xchg
mov
jo
mov
sub
into
js
inc
push
add
loop
daa
jnp
repz
push
imul
ljmp
jo
loopne
inc
out
es
movsl
push
add
outsb
pusha
data16
xchg
iret
mov
pop
lret
out
data16
mov
ljmp
mov
loop
test
fcomp
push
cld
ja
inc
pusha
movsl
pushl
jl
imul
jb
push
pop
dec
pop
adc
jmp
push
adc
xor
mov
test
mov
lret
imul
adc
ja
xor
push
mov
and
int
int
aas
push
dec
test
rcr
lret
notl
or
mov
cmp
or
ds
xchg
sbb
cld
xchg
xchg
shlb
cltd
cmc
sub
inc
mov
rcll
les
insl
in
out
jle
mov
dec
cmpsb
cli
push
addr16
in
push
hlt
sub
hlt
jmp
neg
dec
and
xor
sub
scas
push
cmpsb
cmp
push
xchg
sti
jge
shll
push
mov
test
sub
sub
jae
aas
adc
adc
mov
dec
mov
sbb
stc
std
out
fbstp
pop
popa
add
fmuls
or
loop
mov
into
and
cli
xor
or
jmp
cltd
cs
and
fistpl
sub
aas
dec
ljmp
pushl
lahf
inc
mov
mov
gs
xor
mov
test
push
mov
jmp
dec
push
sub
into
lods
xor
fmull
outsl
adc
mov
adc
in
arpl
mov
xchg
add
xor
call
and
hlt
push
aad
js
fwait
rol
jge
mov
lahf
ss
xor
jne
jp
xchg
jno
and
test
in
push
aas
in
mov
dec
loope
stc
ficoml
cmp
jle
xchg
sbb
mov
bswap
addr16
dec
and
aam
adc
lcall
fistl
test
aam
cwtl
push
stos
push
lods
ror
outsb
filds
sbb
pop
jp
and
les
rep
hlt
in
mov
mov
fistps
repz
jecxz
cmp
sub
dec
pop
push
shlb
xor
pop
mov
or
clc
dec
cmp
or
sub
push
fidivrl
arpl
andl
lcall
out
aam
jne
cmp
jbe
out
jmp
or
daa
add
mov
inc
lock
fwait
inc
aaa
inc
cmp
pop
mov
imul
pop
fdivr
dec
xor
sahf
push
adc
mov
andb
add
ljmp
jae
psubq
ror
icebp
mov
xchg
stos
pushf
rcll
cmp
push
andl
xor
inc
jp
punpcklwd
cwtl
pop
sbb
roll
mov
inc
popf
sub
mov
scas
mov
pop
mov
mov
sbb
mov
sub
mov
dec
sub
cmc
dec
adc
inc
mov
enter
add
lods
movl
popf
out
xor
lods
stc
or
lods
movsb
push
mov
push
mov
pop
fsts
mov
movsl
pop
popf
insb
ss
jecxz
out
aad
mov
add
fimull
jno
in
sbb
enter
cltd
mov
push
jecxz
push
cli
inc
jb
dec
pop
adc
and
je
inc
jo
flds
insb
add
mov
idivb
xchg
jle
js
adc
and
lods
and
fildll
mov
test
jecxz
js
das
out
pop
pop
cmp
enter
out
std
outsb
loope
ret
mov
xchg
dec
or
push
dec
les
sbb
test
lcall
jecxz
cmpsl
fbstp
das
fcompl
sbb
sub
jmp
out
pop
push
ja
pop
das
sbb
aad
fcomps
js
fisubrl
orl
lahf
into
adcb
xchg
movsb
cmpl
dec
ljmp
out
add
in
ja
dec
pop
mov
adc
iret
sbb
push
mov
adc
out
mov
rorb
int3
mov
mov
push
test
mov
jbe
jmp
rorl
and
and
dec
dec
jmp
xor
add
or
pop
mov
and
push
mov
ljmp
pushf
pop
fwait
nop
notl
movsl
in
cmc
scas
pop
mov
rcrl
or
xor
push
dec
icebp
inc
mov
and
mov
xchg
cld
subb
call
inc
dec
repnz
push
lret
mov
adc
nop
pop
sub
mov
or
push
or
pusha
gs
lods
es
mov
outsl
add
inc
ja
mov
popf
push
ss
lcall
stc
andl
push
xor
sahf
sbb
cmpl
or
in
rcpps
mov
push
push
sbb
ljmp
sub
rcrl
pop
into
push
ja
daa
cmp
in
arpl
jecxz
insl
in
mov
jmp
cmp
in
hlt
mov
jo
dec
popf
or
jnp
mov
and
inc
mov
stos
std
cmp
lcallw
in
add
sbb
sbb
dec
mov
daa
or
mov
jmp
add
adc
movsb
add
subl
xchg
test
aad
scas
lret
jb
mov
cmp
mov
lret
push
push
outsl
fucom
lahf
push
je
or
lcall
or
int
push
cld
stc
xchg
jp
and
ret
cld
outsl
pop
jl
push
cmpsl
push
sbb
push
inc
test
mov
popa
dec
jbe
jae
mov
pop
js
push
lcall
imul
add
mov
lock
arpl
xchg
test
fs
xor
pop
adc
mov
xchg
rolb
mov
arpl
dec
jmp
fadds
call
ret
xor
mov
movl
and
insb
jle
ret
mov
pavgw
push
loop
xchg
lret
push
js
xchg
les
aas
imul
imul
lds
jecxz
mov
push
adc
cmp
sbb
pushf
in
shlb
addr16
sub
std
sbb
cmp
mov
mov
out
int
and
add
push
and
mov
mov
sub
les
mov
xchg
fistl
add
out
idiv
stc
mov
dec
cmp
pop
pop
mov
pop
ficoms
aaa
mov
iret
dec
insl
sub
fiadds
mov
inc
sti
add
sarl
sarb
das
sub
std
jmp
movsl
or
push
xchg
fs
mov
repnz
add
ret
in
mov
stos
sbb
scas
push
icebp
mov
ljmp
inc
inc
lcall
lahf
or
add
or
cltd
inc
mov
jns
jbe
pop
xchg
mov
cmp
pop
repz
mov
xor
fidivs
dec
dec
loop
ljmp
rol
or
loope
insl
push
subb
mov
in
pushf
or
add
push
sub
jb
xchg
dec
cmc
mov
jmp
leave
cmp
dec
dec
push
movl
ret
dec
pop
imul
sub
push
test
in
repnz
test
ficomps
xchg
lret
rcrb
lret
inc
jle
add
or
push
mov
stc
mov
mov
in
pop
xchg
sub
and
outsl
sub
mov
call
stos
cmp
pop
or
enter
or
cmp
xchg
pop
mov
add
cmc
cs
fbld
push
sub
mov
loopne
push
jecxz
mov
jo
push
adc
xchg
jnp
in
fmull
icebp
addr16
shll
subb
sbb
pop
insb
mov
xchg
push
inc
cli
sub
out
cwtl
into
scas
in
loop
push
cmc
ss
add
sub
pop
adc
mov
ja
dec
roll
imul
push
xor
push
mov
icebp
lret
stos
push
sub
inc
pop
gs
scas
enter
pop
cmp
inc
and
lahf
inc
into
jne
pop
xchg
imul
sub
dec
push
jne
sub
sub
sub
sbb
push
sbb
cli
mov
stos
popf
rcrb
mov
pusha
mov
xchg
and
out
stos
mov
cmpsb
xlat
or
xchg
cmp
push
pop
lods
shlb
fistps
outsl
xor
es
add
incl
arpl
cltd
xorl
icebp
sub
and
ret
cmp
orl
lds
lods
das
add
rclb
xchg
jo
sub
mov
or
dec
push
outsb
mov
sub
and
xor
dec
adc
mov
cs
insb
mov
mov
mov
test
xchg
mov
clc
stc
sti
test
sbb
jg
cltd
push
insl
out
outsl
call
push
in
imul
pushf
push
aad
int3
lcall
jae
xor
repnz
scas
lods
sbb
icebp
jmp
sbb
fdivrs
xchg
sbb
imulb
cltd
lods
push
enter
subb
outsb
je
inc
inc
cmpsl
adc
xchg
ror
jg
dec
into
inc
popf
jecxz
dec
scas
mov
test
xchg
ljmp
cmp
mov
movsl
stos
cmc
call
ja
insl
dec
test
js
addr16
movsb
add
add
dec
adc
sub
dec
popa
xchg
xor
cmpb
or
aaa
mov
arpl
mov
fadd
pop
in
cmpsb
sub
jns
bound
fldenv
adc
arpl
ds
lcall
fsubs
dec
repnz
push
pop
jl
out
or
mov
cld
in
mov
inc
mov
push
das
mov
push
jne
leave
leave
insb
test
mov
lahf
loopne
mov
leave
out
pop
and
push
push
cmp
cli
jmp
cmpsl
pop
jl
dec
lret
sbb
cmp
add
lahf
push
or
test
data16
cli
push
iret
pusha
out
adc
xchg
scas
sarl
mov
xor
jecxz
or
add
xchg
xor
pop
rolb
push
es
in
movsb
mov
cwtl
in
into
ret
jno
pusha
sbb
xlat
lahf
cmpb
aas
sti
in
in
adc
adc
int3
sarb
cli
jno
xchg
and
cmp
in
movsb
mov
sbb
cmp
call
lea
xchg
add
mulb
andb
enter
dec
or
and
sbb
sub
inc
adc
push
orb
dec
fdivl
add
jmp
or
mov
jbe
faddl
sub
adc
flds
fmuls
push
aaa
int
outsb
adc
mov
xor
loop
fwait
arpl
dec
ljmp
mov
pop
mov
sub
sub
or
cs
stos
lds
pop
shr
xchg
jnp
sub
xlat
repnz
pushf
sub
loope
xchg
mov
cmp
frstor
inc
jo
mov
cwtl
jo
out
cmp
js
push
lret
or
loop
fwait
mov
mov
cmp
mov
scas
fs
xor
jbe
adc
push
aam
xchg
imul
jle
out
fdivs
in
cmc
popa
pop
cwtl
orl
add
enter
jns
dec
or
mov
fisttps
mov
mov
and
fdivs
or
push
sarl
pop
cmpsl
scas
insb
sar
mov
clc
dec
ds
movb
das
out
add
adc
xchg
shlb
ret
add
inc
mov
jle
push
iret
ret
jb
and
fsts
pushf
loope
test
pop
pop
cmc
add
lock
adc
jg
ja
repnz
out
adc
inc
idivb
repnz
mov
xor
fs
add
mov
xorb
mov
ds
add
faddl
cmp
mov
dec
lret
rorb
js,pn
cmp
cmpsb
xchg
addb
mul
mov
movsl
xchg
jne
call
dec
cwtl
jmp
out
test
test
cmp
or
or
mov
roll
sbb
add
out
xor
and
push
rcl
mov
mov
movsl
adc
imul
and
aaa
push
push
push
mov
xor
xor
xlat
push
jle
js
das
inc
dec
and
push
test
inc
enter
rcl
xchg
and
xor
andb
pop
test
add
cmp
adc
in
inc
loopne
xchg
stos
mov
cmpsl
cmp
popf
mov
imul
insb
int
andl
jo
inc
imul
xchg
lahf
call
mov
push
pop
xor
jle
rcrb
mov
cmp
dec
loop
dec
push
mov
int
ss
and
inc
xchg
cmpsl
fwait
xchg
cmp
das
lcall
bound
pop
lret
sbb
cmp
push
shll
sub
fcmovnbe
sbb
add
push
inc
and
xchg
add
push
and
rcl
int
sub
ljmp
pop
cmp
mov
cli
cmp
jecxz
or
and
cmpsl
sbb
in
mov
or
stos
icebp
mov
std
pop
test
cs
xor
hlt
shlb
mov
aas
sub
pop
lret
mov
inc
mov
cltd
cmpsl
scas
and
cltd
push
mov
mov
xor
or
or
mov
add
adc
lea
xchg
or
fdivrs
sti
aad
xchg
lret
stos
sub
lret
test
jb
hlt
aad
sahf
fistps
shll
movsl
cmc
imul
lret
int3
jo
fwait
repz
out
sbb
push
add
dec
lahf
dec
mov
dec
mov
notb
rcrl
adc
inc
lcall
add
cmp
push
mov
jns
cltd
adc
xor
rcrl
mov
and
xchg
or
enter
dec
cmp
push
xchg
and
add
or
mov
and
in
adc
fisttpl
jo
and
mov
out
add
ja
sarb
arpl
mov
jge
adc
add
loop
mov
stos
sbb
jb
xchg
sti
xor
mov
mov
and
jg
push
outsl
cli
shrl
push
fidivrs
dec
sbb
stc
add
imul
mov
es
push
sub
ja
scas
xchg
jb
push
pop
cmpsb
mov
insb
adc
je
cmc
xchg
sti
xchg
cmc
sub
les
inc
adc
jae
scas
les
jbe
push
inc
mov
inc
cld
or
fistpll
sbb
jecxz
int
rolb
sahf
xchg
cmpsb
dec
aas
add
sbb
addr16
xor
mov
inc
push
adc
adc
jg
or
pushf
inc
int3
adc
clc
hlt
out
pxor
pop
jp
ret
mov
pop
jecxz
mov
es
mov
dec
push
push
inc
inc
pop
mov
mov
fsub
sub
inc
fistps
push
ss
rcrb
jmp
mov
pop
add
sbb
or
push
and
mov
add
cmp
and
cmc
jg
cmp
mov
movsb
rorl
imul
repnz
sub
cld
lock
call
shlb
mov
int3
das
and
dec
mov
mov
das
jnp
cmp
push
cmpsl
or
dec
mov
or
cwtl
xchg
dec
loope
lcall
fsubrp
sbb
ds
mov
sub
mov
je
lret
stos
pop
lods
inc
push
in
lahf
sahf
filds
lahf
fwait
xor
es
scas
xchg
inc
mov
inc
mov
in
cld
aam
pop
dec
pop
jle
fdivs
cltd
and
les
je
xorb
orl
addb
sub
cmpsb
lods
mov
and
popa
fs
xor
mov
or
push
ficoms
pop
std
out
xor
cmpsl
xchg
aas
aad
push
push
icebp
in
and
cs
cmp
js
int
and
orl
dec
fdivr
push
and
mov
lcall
inc
stos
pop
in
test
push
sub
push
mov
ljmp
subl
mov
push
xor
loopne
shrl
clc
mov
shl
iret
iret
mov
and
cwtl
cltd
add
xchg
cmp
not
mov
mov
push
push
nop
mov
cmp
out
int3
fidivrl
mov
jo
loopne
mov
daa
jle
cli
mov
mov
js
sbb
cmp
xchg
adc
in
fmuls
push
jp
xor
icebp
ja
and
pusha
push
sbb
xchg
or
adc
xchg
out
cmp
xchg
out
mov
jle
pop
add
rcrb
cmp
mov
shr
add
in
ss
mov
or
pop
xchg
jnp
ja
push
dec
xchg
jg
mulb
iret
int
xchg
lods
in
in
xchg
in
inc
push
in
mov
adc
iret
sarb
daa
dec
xor
xchg
dec
and
xchg
int
mov
xor
movsl
pop
inc
cld
sub
sub
repnz
cmp
pop
roll
or
insl
adc
pop
cmp
addr16
into
cmp
or
mov
mov
adc
jge
inc
mov
jl
movsb
lret
push
lea
push
dec
fiadds
push
pushf
clc
push
push
arpl
xlat
jno
test
stos
inc
or
fcomp
xor
iret
int
pop
mov
fdiv
inc
mov
out
cs
mov
aad
xlat
mov
sbb
mov
outsb
cmp
mov
xchg
int3
ja
sbb
or
out
xor
cmp
xchg
xor
int
push
enter
pop
or
ret
adc
mov
sub
or
stc
cmpsb
lret
cmp
and
sbb
jge
lret
imul
and
pop
sbb
leave
out
and
sbb
aam
fnsetpm(287
sub
pop
jnp
out
adc
frstor
and
stos
stos
lods
pop
jge
push
inc
inc
xchg
dec
cmp
cmp
jecxz
push
sti
or
test
mov
xlat
xor
add
je
leave
xor
out
les
pop
ret
loop
shl
mov
stc
mov
push
mov
push
sbb
f2xm1
push
sbb
push
sbb
sbb
xchg
loope
lods
scas
dec
sub
pop
inc
xchg
in
cmc
inc
insl
mov
ror
lret
or
or
cwtl
lods
loope
mov
inc
in
inc
dec
lock
test
xchg
int3
repz
xchg
or
xchg
roll
xor
push
jo
stc
loopne
pop
enter
inc
lods
pop
and
cmc
cld
stc
xsaveopt
cltd
mov
imul
in
xor
add
sahf
int
call
shl
fistpl
hlt
scas
fmull
adc
rorb
xchg
loope
fldz
sahf
lods
push
jae
push
pop
fsubl
ss
add
and
and
pop
das
or
dec
shll
js
jnp
ja
mov
jp
sub
in
dec
shlb
scas
or
or
out
cmp
mov
cmp
sub
push
test
imul
lret
nop
xor
add
cmp
adc
js
mov
mov
adc
aaa
sbb
and
subl
add
shrb
push
dec
nop
repz
add
dec
sub
test
daa
es
loop
in
add
jbe
leave
leave
mov
mov
les
insl
jae
mov
mov
xchg
addr16
jg
xor
xchg
scas
jmp
cli
jno
push
xchg
adc
dec
sub
xor
inc
addb
jl
mov
pop
xorb
adc
aaa
inc
mov
jmp
cli
out
pop
lret
push
dec
sub
mov
cmc
inc
scas
pop
test
dec
adc
xchg
xor
and
cld
sbb
add
adc
add
mov
pop
cwtl
addb
jns
cmp
mov
pop
mov
scas
lea
cmp
mov
out
daa
ja
inc
inc
push
je
jnp
or
and
pop
cmp
mov
icebp
inc
ds
aad
roll
scas
xchg
push
sbb
xor
nop
xchg
fwait
ret
add
insb
lock
and
push
lods
sub
sub
jae
jns
push
jb
and
push
pop
inc
inc
movsb
push
movsb
jbe
adc
pop
mov
mov
cmp
inc
aas
in
push
cltd
pop
add
jnp
jae
or
aaa
sub
andb
mov
lret
movsl
cmpsl
mov
push
or
aam
push
fcoms
jle
call
dec
jmp
repnz
push
jecxz
mov
dec
clc
dec
insb
fcoml
jo
vmovups
imul
testl
xchg
daa
addr16
push
sub
out
popf
into
in
mull
stc
xchg
xor
mov
inc
and
xor
enter
mov
sbb
cmp
xorl
push
mov
lahf
mov
mov
repnz
jo
jg
fildl
aas
jo
jp
std
lock
mov
sub
insl
cmpsb
mov
divl
aad
jbe
push
lods
sub
mov
lock
mov
js
mov
int
mov
mov
and
or
push
cli
push
scas
lahf
shll
aam
xchg
aam
xchg
and
lret
jae
mov
test
aad
pop
imul
add
shrl
jae
cld
fcoms
pop
mov
adc
out
sti
sbb
incl
pop
push
sub
xor
cmpsb
and
push
fwait
into
in
gs
cld
in
adc
cmp
jno
pop
mov
cmp
imul
loope
pop
leave
xor
scas
xor
popf
ljmp
aas
and
add
cmp
ret
and
call
xchg
mov
fs
cmpsb
dec
stos
pop
cmpsl
fisubl
incb
cvtps2pi
mov
leave
pop
jle
mov
call
adc
pusha
adc
outsl
and
scas
psrlq
mov
add
pop
mov
or
repnz
mov
fwait
popf
repnz
xchg
sahf
push
add
pop
ror
sub
add
lods
jbe
or
mov
in
xchg
jb
shll
stc
sbb
iret
nop
inc
and
aam
xor
mov
ja
movsb
jbe
dec
jne
add
push
or
and
jbe
popa
mov
subl
jns
lret
push
or
stc
jb
mov
adc
dec
movsl
cmpsl
add
pusha
in
or
push
or
push
adc
add
cmp
aad
das
adc
cmpb
stos
or
sarl
popa
dec
ret
call
xchg
idiv
mov
ljmp
out
stc
or
fs
inc
or
loope
fidivrs
ret
push
pop
dec
sbb
xlat
icebp
xor
and
pop
or
inc
push
cmp
insw
pop
sub
fists
push
rcrl
addb
xchg
dec
out
mov
cmpsl
cmc
mov
jae
inc
pop
push
ret
or
xlat
cltd
sub
fisubs
dec
inc
in
into
xor
loopne
orb
out
fnstenv
pop
pop
repnz
xor
shlb
xchg
push
cmp
add
shl
into
jg
les
icebp
les
jns
jb
mov
jecxz
data16
jmp
sub
insl
int3
jecxz
add
cmp
jmp
repz
dec
mov
aad
cmpl
sti
ja
shrb
or
xchg
ret
jle
push
test
cmpsl
pavgw
mov
in
dec
les
xor
pop
push
and
aaa
and
or
loopne
sbb
out
adc
xchg
icebp
xlat
popl
lods
jg
stos
lds
dec
pop
lods
notb
data16
xchg
jb
jns
mov
bound
test
fstps
loope
push
addr16
push
mov
mov
sbb
mov
and
outsb
mov
push
cmpsb
or
xor
inc
cmp
push
ja
cmp
popa
es
sub
lds
push
sub
mov
data16
sub
out
loopne
jle
in
popa
sbb
mov
cmpsl
lcall
cmp
sbb
xchg
stos
cmpsb
adc
test
push
repz
or
call
push
mov
cmp
sbb
fucomi
inc
andl
shll
jecxz
jge
mov
xchg
pop
jbe
mov
aaa
adc
pop
jmp
sbb
adc
mov
mov
addr16
enter
cmp
rcll
push
fdivrs
pop
xchg
mov
add
mov
sub
mov
and
in
popa
push
cmp
clc
dec
and
enter
and
and
dec
repz
fs
pop
jle
cmp
xchg
sar
popa
push
jb
or
push
mov
shll
push
mov
add
scas
mov
repnz
pop
stos
pop
rorb
mov
mov
or
sbb
fsubrp
ds
aaa
dec
lret
jp
mov
test
xor
lret
push
mov
and
pop
xchg
dec
inc
pop
fcmovu
pushf
insl
imul
lcall
inc
pop
xchg
cmp
in
je
sbb
mov
inc
aam
push
xor
pop
push
mov
dec
cmp
mov
frstor
push
xchg
je
xor
sub
push
jbe
into
cmpsl
jo
lods
dec
jbe
cld
loopne
jnp
dec
mov
jg
jns
incb
xchg
loope
adc
mov
pushf
push
or
into
popa
jb
in
cmp
mov
or
lret
imul
ljmp
sbb
jae
mov
fisubs
sbb
loope
js
test
mov
adc
rolb
pop
loope
dec
movsl
das
pop
sti
fstp
pop
pop
dec
call
jecxz
adc
lahf
je
sbb
xor
jb
mov
out
out
sbb
pop
jb
adc
popf
xchg
jo
mov
sbb
sbb
inc
cli
add
push
test
fs
test
push
pop
fsubr
sbb
enter
bound
scas
rcll
add
inc
shrl
mov
arpl
and
ja
lock
sbb
add
aaa
mov
dec
loop
sub
js
xchg
cld
push
pop
sbb
push
mov
insl
xchg
mov
mov
inc
testb
push
jmp
movsb
test
jne
test
push
dec
icebp
sbb
aam
or
nop
mov
cld
out
loop
int
inc
imul
add
jmp
and
repz
pop
addr16
xchg
test
lret
stc
jmp
xchg
mov
outsl
push
pop
lea
out
sbb
aad
lret
repz
xchg
jge
mov
fs
movsb
lcall
int
push
add
jo
dec
dec
sbb
loop
leave
mov
mov
or
fildll
adc
mov
mov
lahf
js
push
sti
xchg
lock
cld
xor
imul
lea
or
lcall
and
loop
fwait
pop
and
push
xor
sbb
ja
inc
push
jb
xlat
sbb
or
rorb
int
pop
sbb
aad
and
ds
scas
in
xchg
fdivs
mov
sub
std
xchg
gs
jp
ljmp
push
inc
cmpsb
cmp
js,pt
nop
out
adc
and
data16
incl
scas
xchg
cmp
dec
inc
call
dec
cwtl
xchg
sahf
cld
inc
lea
sub
insl
loope
jno
inc
or
outsb
pop
pop
imul
xor
sub
fstps
push
pusha
push
mov
mov
adc
xchg
int3
pop
gs
fsubs
in
pop
fcom
fisttps
push
cmp
and
inc
add
adc
xorl
pop
fimuls
leave
inc
pop
test
inc
test
add
pop
daa
cmc
mov
leave
push
adc
aad
test
and
cmp
xchg
fucomip
mov
lea
loop
roll
sarl
jnp
mov
js
les
cmp
xor
scas
xchg
pop
call
xchg
add
xabort
pop
out
adc
xlat
cmc
or
cmp
xchg
xor
fisttpl
cmpsl
mov
rcrb
sub
sbb
mov
mov
xchg
xor
adc
pop
xchg
jb
movsl
mov
sarl
pop
iret
xchg
cmp
mul
and
adc
add
rol
into
mov
and
out
jno
xchg
clc
icebp
add
mov
stos
jns
jbe
out
jge
lahf
pop
jb
fstl
sbb
cmp
mov
jae
pop
push
push
mov
sub
jo
aad
lds
cmova
faddl
not
mov
mov
lahf
scas
in
out
out
subl
sub
or
push
mov
lods
sbb
fdivrs
sbb
sub
push
aad
sub
lea
mov
or
adc
ficoms
or
mov
push
enter
jnp
mov
lods
inc
push
fcmovbe
adc
push
or
lods
pop
call
clc
nop
xchg
in
mov
mov
mov
adc
xchg
dec
lock
int
iret
cmp
push
syscall
pop
mov
push
cltd
aad
adc
loope
insb
mov
and
dec
lods
sbb
nop
mov
cs
mov
arpl
push
xchg
mov
push
pop
in
mov
rorb
lret
bnd
xchg
dec
cmp
cmp
popa
xchg
mov
jmp
aam
neg
pop
insb
addr16
cmp
sbb
in
mov
pop
stos
mov
orl
test
lcall
push
in
push
out
dec
jb
outsl
adc
test
sub
das
pop
mov
add
jnp
and
adc
mov
mov
add
andb
mov
hlt
icebp
shll
cmc
sub
divb
mov
std
movb
mov
mov
adc
push
sub
jne
hlt
xchg
test
mov
popa
xlat
or
ret
out
shrb
idivb
push
in
xor
aam
lods
cmpb
xor
out
jp
pop
xchg
mov
sbb
and
sbb
lods
xor
loope
pusha
aas
mov
inc
mov
fsubl
in
sarb
adc
sbb
mov
xchg
dec
and
aam
gs
negb
jle
fldt
mov
fisubrs
andl
mov
cmp
inc
add
cmp
imul
xor
cmpsl
mov
mov
mov
dec
ret
rcrl
shl
shrb
sub
jb
ret
imul
es
fbstp
adc
jmp
shlb
sbb
mov
lcall
int
das
in
cmpsb
xor
adc
dec
mov
dec
aad
imul
shr
cmpb
push
fnstsw
out
mov
dec
mov
icebp
xchg
imul
sub
xor
rclb
loopne
xor
dec
lcall
xchg
sub
add
mov
nop
dec
mov
out
fstp
mov
je
fnstenv
addr16
es
jp
pop
dec
and
stos
fs
xchg
and
aas
dec
data16
xchg
xchg
adc
je
fwait
sub
pop
mov
shll
daa
xor
mov
jp
push
fisubl
cmp
cli
and
mov
or
pop
xor
adc
jle
in
add
pop
mov
ror
adc
in
mov
mov
adc
movsl
inc
mov
daa
xchg
nop
mov
fdivs
sub
sbb
out
testb
idivl
out
cmp
xchg
jmp
popf
push
lahf
xchg
mov
loope
mov
sub
xchg
pop
sti
push
lret
sub
jno
sub
lea
hlt
hlt
add
mov
rcl
xlat
jns
push
mov
iret
loopne
movsb
imul
or
mov
scas
int
jne
roll
lret
rcll
dec
pop
cs
xlat
clc
xor
popf
push
fisubrl
add
add
and
inc
incb
ret
cli
push
lds
sti
xor
push
and
testl
aaa
xchg
enter
je
pusha
dec
test
jo
and
push
nop
xchg
jmp
lock
inc
shl
in
sbb
cltd
cmpl
pop
or
add
sbb
sbb
lods
ljmp
mov
jne
jne
add
adc
leave
in
arpl
movsl
lock
cmp
ret
cmp
fisttps
sbb
ss
aam
cli
jb
daa
pop
mov
push
and
xchg
in
ss
sbb
push
sahf
dec
xchg
or
lret
mov
pop
dec
fidivl
rclb
or
ljmp
enter
xchg
jecxz
jp
inc
mov
pop
cli
xchg
or
sarb
add
cmp
mov
adc
rcrb
jecxz
mov
adc
ds
stos
test
test
sarl
out
pop
jbe
push
and
mov
cs
out
fcompl
daa
cld
cmp
hlt
lret
into
inc
add
scas
scas
imull
sbb
cmp
cltd
imul
pusha
pop
popf
pop
je
aad
cmp
xchg
popa
test
sbb
mov
shrb
mov
dec
imul
sbb
and
pushf
andb
inc
xchg
in
jns
call
pop
shrb
cld
xchg
icebp
cld
mov
int3
fs
inc
enter
and
in
int
bound
mov
sub
jb
in
stc
mov
popa
scas
mov
pop
add
jns,pt
push
and
int
dec
sub
leave
daa
scas
sub
jb
sub
fwait
xchg
sub
icebp
into
cmp
mov
and
mov
mov
ficomps
inc
clc
scas
ss
lods
xor
icebp
mov
shlb
in
push
jl
gs
xorb
dec
loopne
push
jnp
sbb
mov
adc
push
push
out
jecxz
xchg
xor
aaa
sbb
push
push
jb
adc
enter
mov
xlat
lods
mov
std
pop
and
int3
add
jg
or
ja
dec
dec
jns
int
cld
mul
in
and
add
inc
fdivrl
out
ja
xor
gs
divb
xchg
add
repz
pop
inc
jb
pusha
hlt
lret
and
inc
mov
add
in
bound
add
mov
add
sarb
call
xor
inc
and
xchg
mov
adc
mov
cmp
mov
mov
fnstenv
outsb
mov
mov
sbb
cmp
adc
pop
outsl
mov
out
jno
cmc
ret
xor
sub
mov
lret
or
fs
sbb
adc
movsb
jle
adc
cmp
test
xor
jecxz
or
outsb
jnp
cmpsl
movsl
ret
add
pop
pop
sbb
and
xchg
inc
repnz
inc
test
sub
dec
out
xlat
push
mov
movsl
and
xor
pop
jecxz
shl
inc
or
cmp
insl
lds
or
cmp
push
popf
mov
xor
js
mov
in
or
pop
dec
iret
ljmp
jmp
adc
cmp
dec
push
aas
push
inc
adc
ss
jae
test
add
push
rcrb
loopne
mov
push
dec
cmp
lds
push
xor
test
push
sbb
cmp
fs
addr16
push
nop
hlt
or
cmpsl
push
sar
icebp
ret
fldt
sbb
fwait
cmc
mov
in
scas
sbb
aam
or
ljmp
frstor
pop
lret
lret
fdivl
popa
mov
cld
fldt
pop
clc
clc
adc
push
jno
das
into
cmpsl
repnz
sub
xor
inc
aad
xor
xor
lea
xchg
push
fisubs
in
pop
aad
dec
xor
shrl
and
shr
mov
addb
sub
gs
lret
movsb
dec
pop
dec
mov
data16
mov
push
sbb
push
loop
insl
icebp
sar
jecxz
adc
mov
stc
ljmp
mov
fldenv
pop
mov
or
ret
out
daa
repnz
or
sbb
pop
jl
test
shlb
hlt
mov
mov
mov
out
or
push
gs
adc
jg
and
push
cwtl
mov
dec
stos
std
ds
or
cmp
xor
loop
int
push
leave
lods
sub
pop
testl
xchg
add
shl
jmp
test
outsl
inc
fsubrl
xchg
cmp
mov
sub
movb
aam
fs
pushl
sub
pop
jmp
inc
movsl
xchg
xchg
icebp
jmp
mov
fadd
out
scas
vcmpps
sub
out
mov
fnstsw
cmp
mov
dec
push
jmp
cmpsb
or
gs
xchg
xor
ret
or
jp
mov
jp
pop
push
cmpsb
idivl
xchg
cmp
imul
jp
mov
push
shlb
cmp
call
mov
icebp
adc
mov
inc
mov
xchg
push
inc
cmp
xor
mov
mov
cld
sub
mov
cmpsl
adc
cwtl
jle
dec
in
push
lret
sbb
cli
fistpll
dec
rcll
pusha
fucomip
flds
and
xchg
mov
xorl
or
dec
adc
dec
ror
push
mov
pop
cwtl
shl
jg
or
pop
mov
jae
push
pop
pushf
rcll
add
mov
cwtl
out
xchg
imul
add
cmp
jb
lahf
or
lcall
push
lock
push
movsb
lds
lock
cld
cltd
dec
cmp
cmp
imul
shlb
push
pop
or
cltd
test
insl
fstps
dec
les
jge
aas
add
jno
sub
push
push
sahf
stc
xlat
mov
daa
icebp
cs
test
xchg
pop
pop
dec
incl
mov
lahf
adc
lock
int
stos
adcl
add
jl
pop
sub
jae
push
or
add
data16
jno
hlt
xor
add
clc
add
lea
call
fcompl
cmp
jmp
jle
jae
push
mov
sarb
mov
fwait
inc
mov
test
lods
jge
inc
mov
fmull
push
mov
mov
jns
push
add
in
test
cwtl
cmp
inc
jae
dec
inc
xor
scas
loopne
xor
adc
mov
popl
pushf
imul
sbb
mov
add
cmp
mov
subl
aas
mov
push
sub
repz
into
scas
fstpl
xchg
in
out
push
pop
js
mov
stos
adc
push
test
jne
scas
mov
adc
jne
push
mov
cmp
sub
mov
rorb
imul
jne
fs
data16
sti
arpl
xor
adc
jecxz
sbb
decl
jmp
imul
xor
rol
loopne
aad
or
test
add
xor
leave
mov
and
lock
jl
frstor
inc
mov
or
fistpl
dec
push
mov
sbb
ret
mov
mov
sbb
lret
mov
out
sub
mov
sub
mov
inc
outsl
push
mov
leave
mov
call
pause
in
lods
add
popa
pop
adc
xchg
sbb
arpl
jecxz
push
lock
mov
mov
movsb
jb
divps
cmp
or
mov
es
and
aaa
clc
dec
and
jbe
fcompl
ds
mov
lods
ja
aas
fistpl
roll
aam
jmp
pop
or
movsl
xchg
js
xchg
inc
lea
insb
lcallw
dec
xchg
fsubr
cwtl
out
push
mov
aaa
adc
js
and
adc
or
jmp
xor
test
jecxz
decl
inc
pinsrw
js
cmp
out
sub
push
pushf
aam
fcomip
fucomp
sarl
and
lods
out
lahf
pusha
pop
stc
mov
mov
mov
adc
xchg
pop
push
lret
lahf
add
mov
out
fbld
iret
sbb
inc
stc
ret
mov
mov
movsl
das
sarl
and
push
xor
pop
adc
xchg
dec
hlt
fisttps
decb
fdivr
xor
inc
cltd
out
dec
call
xchg
pop
test
nop
dec
inc
xor
repz
mov
lcall
pop
mov
loopne
push
test
arpl
and
outsb
dec
dec
push
xor
lcall
xchg
stc
stos
cmp
push
adc
push
ficompl
xlat
repnz
sbb
jo
inc
loope
arpl
out
orb
ret
insb
or
cmpsb
imul
and
bound
rcr
jp
rcll
xor
cmp
dec
xor
or
jge
lods
inc
adc
sub
inc
fmuls
ret
lods
push
and
out
sub
dec
mov
loop
push
lods
insl
shlb
cwtl
dec
stos
sbb
and
cmp
jg
mov
fisttpl
pop
add
jne
push
mov
arpl
mov
add
adc
mov
daa
loopne
push
jo
sbb
mov
insb
repnz
cmp
clc
cmova
fs
cld
test
jle
jmp
pop
dec
cmp
stos
mov
xchg
lods
mov
cmp
mov
jmp
ret
dec
dec
mov
xchg
ror
leave
xchg
insb
lods
in
dec
scas
mov
xchg
js
add
mov
fcomps
mov
mov
jbe
lods
sbb
mov
js
cmp
in
fildll
inc
cld
or
enter
and
cwtl
bound
adc
movsb
rorl
mov
jns
test
loop
mov
dec
mov
jnp
loope
out
aaa
dec
jge
push
lea
subb
mov
stos
imulb
sbb
dec
push
cmc
out
andb
xor
repnz
sbb
aad
mov
enter
mov
popa
xor
jl
inc
add
loopne
rclb
loop
popf
sbb
lods
cmp
repz
or
jg
bound
loopne
pop
xchg
sbb
cli
dec
xchg
inc
push
jae
adc
sub
sbb
lcall
sub
fld
inc
insb
push
je
inc
mov
mov
jne
jmp
push
icebp
mov
shll
ja
pop
adc
mov
mov
dec
add
mov
in
imulb
dec
psubusw
add
inc
push
js
rolb
jmp
cmp
lret
sbb
adc
repz
mov
pop
and
in
test
inc
es
lods
mov
sbb
ret
mov
xor
jo
add
ds
jbe
subl
mov
movq
enter
stos
push
icebp
dec
mov
fimull
lret
push
mov
fcoms
aad
ja
loope
sti
mov
arpl
adc
push
xor
aad
push
rclb
push
fmuls
dec
jp
sub
outsl
mov
jge
leave
into
sbb
stos
sbb
dec
push
pop
or
pop
imul
arpl
repnz
shll
imul
pusha
out
xor
jle
inc
in
int
mov
pop
cltd
and
popa
push
je
aaa
xchg
outsb
test
add
or
xchg
lcall
movsb
das
jge
adcb
mov
cmp
fidivl
ljmp
lret
mov
shrl
out
mov
jns
inc
sub
and
pop
inc
cwtl
xor
add
adc
mov
fs
test
mov
inc
jno
cwtl
mov
xor
stos
add
mov
pushl
scas
lret
inc
iret
movsb
xchg
pushf
int3
fbstp
fsubl
in
mov
and
rol
xchg
sbb
push
movsl
cmc
or
push
pop
mov
push
xlat
adc
dec
mov
mov
jle
cmp
rcll
int
faddp
dec
mov
pop
inc
ror
stc
pop
adc
test
add
push
sbb
mulb
cmp
add
mov
lret
stc
xchg
cmp
mov
dec
andl
in
push
push
push
mov
and
or
out
add
inc
or
adc
mov
and
das
arpl
sbb
mov
repnz
sbb
outsb
dec
push
sub
adc
jb
pop
in
icebp
lock
rorb
fs
mov
std
test
addl
dec
cmp
mov
add
sub
int
lods
jl
cmp
mov
mov
push
xor
dec
xchg
pop
jnp
jge
dec
ljmp
jnp
jbe
jno
cs
mov
out
dec
imul
push
cmp
clc
call
xchg
xchg
jne
adc
dec
cwtl
mov
mov
outsb
push
in
notl
sar
push
sub
clc
out
paddusb
lea
aas
test
mov
pop
popa
in
les
push
push
mov
mov
xor
mov
pop
adc
outsl
mov
xchg
arpl
loopne
add
or
fisttps
mov
mov
jns
add
add
cli
add
imul
sbb
sbb
pop
add
xor
mov
stos
push
mov
icebp
dec
faddl
inc
push
fiaddl
inc
jle
inc
xor
loopne
push
les
add
adc
xchg
add
jb
sbb
sbb
divl
pop
ja
xchg
sub
negl
jmp
ret
or
sahf
ja
ss
loope
mov
lods
inc
xor
aaa
pop
add
dec
stos
pushf
cwtl
rcrl
adc
in
es
dec
inc
sub
divb
xchg
mov
movsl
loopne
mov
cld
shl
out
xlat
cmpsl
adc
iret
inc
sub
and
out
xor
mov
neg
stc
int
lods
int3
xor
mov
jbe
sbb
lock
dec
xor
sbb
lock
jns
es
jae
cmc
out
out
cmp
xor
sub
mov
jl
leave
rol
stos
jo
idivl
pop
sub
test
xchg
loop
jno
or
push
fistpl
pop
loope
xor
movl
test
cmp
push
mov
sub
sub
aaa
push
movsl
js
inc
sub
xor
cwtl
fstpl
loope
mov
pop
fstps
mov
mov
xchg
ljmp
pop
pushf
nop
sbb
std
cmp
push
je
loope
aam
cmp
push
mov
mov
sbb
push
orb
push
sahf
fmull
cmc
pop
xor
jge
sbb
sub
data16
mov
adc
jno
and
push
ror
jns
sbb
adc
filds
xchg
or
mov
out
aas
jnp
add
ret
pop
mov
mov
loope
push
adc
or
xor
xchg
test
icebp
push
mov
jp
aaa
push
mov
fadds
dec
dec
test
rcll
jne
imul
push
sbb
jmp
or
lds
fs
lret
adc
gs
ja
test
imul
pop
or
sub
push
push
mov
adc
outsb
dec
and
inc
hlt
sti
jae
xchg
xor
pop
addr16
mov
jmp
fisubrl
and
rorb
dec
ds
jle
rcrl
movsb
adc
xchg
std
cmp
cs
addl
sbb
lcall
and
enter
mov
inc
enter
ss
jle
dec
rclb
inc
cmp
pop
rorl
jb
aad
mov
jl
repnz
mov
fsts
movsl
xchg
movsl
and
test
je
ss
mov
push
cmp
adc
loopne
data16
mov
int3
je
enter
arpl
inc
dec
lock
add
shll
out
mov
pop
stos
pusha
and
mov
adc
scas
push
aam
nop
mov
dec
push
rolb
lcall
dec
cmp
adc
xor
mov
les
out
cmpsl
add
mov
lods
pop
cmova
xchg
mov
inc
imul
roll
repnz
loopne
fs
loope
sub
jmp
movl
push
adc
sbbb
cmp
ja
mov
cmp
jbe
insl
cmp
xlat
repz
add
fcmovnb
fdiv
sbb
cld
ds
and
inc
loopne
and
bound
pop
jl
lods
aad
notl
shl
fsts
mov
ja
arpl
lock
cld
adc
mov
cmpsl
dec
ret
jne
dec
adc
jb
gs
mov
in
sub
cmp
inc
insl
insb
xchg
jns
sub
mov
fsubrl
and
addb
and
fisttps
data16
sbb
or
add
xchg
call
icebp
lcall
push
xchg
into
or
in
dec
push
push
mov
push
ja
cmp
or
mov
sbb
xchg
and
out
or
xchg
jno
sbb
js
cmp
or
lcall
adcb
dec
pop
xchg
fstpt
ret
call
setns
and
jecxz
scas
outsb
inc
cmp
test
pop
scas
nop
out
mov
and
cmp
xor
sbb
shll
jbe
sbb
fistpll
lret
into
stos
aaa
loope
dec
mov
mov
add
in
mov
push
fnstenv
je
fwait
mov
fldenv
sbb
adc
mov
int3
ja
or
mov
xchg
dec
and
aad
bnd
insl
cmp
add
pop
mov
and
cli
mov
subl
push
xchg
push
push
in
lea
jmp
insb
dec
adc
fisubs
sahf
pushf
jbe
or
push
shl
lret
cli
cmp
jns
fstl
cli
xchg
push
adc
xor
js
fimull
jg
es
jne
adc
add
sti
sub
mov
out
add
scas
push
iret
and
out
inc
xchg
sbbl
movsb
xor
mov
sbb
imul
inc
out
cltd
sbb
pop
test
push
ret
ficoml
outsb
cmp
pop
jbe
xchg
inc
in
push
das
xor
mov
and
lods
jle
pop
shlb
inc
clc
popf
push
mov
and
sub
pushf
leave
xor
rorl
xchg
lods
scas
pop
orb
or
and
lcall
test
cmp
mov
or
mov
sahf
push
mov
into
faddl
mov
psraw
loop
movsb
jns
out
and
in
xor
fidivrl
jecxz
jecxz
daa
stos
lods
mov
aam
jo
mov
mov
sbb
js
jnp
xchg
push
pop
mov
jne
fs
sub
mov
je
push
dec
cld
jb
pop
inc
mov
lahf
or
fisubrs
sub
xchg
mov
lds
inc
andb
add
stos
or
mov
jae
call
fistps
mov
enter
lcall
pop
mov
rol
adc
adc
push
mov
jmp
sub
aad
xchg
cmp
sar
fnsave
stos
jecxz
psadbw
sbb
mov
test
fucomip
popa
dec
iret
or
jbe
out
out
bound
jge
insl
dec
sbb
mov
ret
fstps
imul
dec
xor
repnz
int3
mov
pop
cmpsl
mov
pop
inc
rcll
cli
clc
cmpb
fs
mov
sub
mov
pop
mov
pop
sbb
pop
pop
xor
sub
push
xchg
dec
cmpsl
inc
ds
dec
fcmove
and
js
cmp
ljmp
mov
push
das
push
pop
sub
xor
jbe
jnp
jge
inc
add
cmp
jo
cmp
xchg
cmp
int3
stc
test
pop
mov
shrl
xor
mov
mov
pop
out
stc
pop
int
cli
scas
adc
jmp
and
fnstsw
ljmp
das
sbb
imul
push
push
push
cmp
cltd
and
xchg
test
xchg
mov
clc
in
mov
add
mov
push
out
nop
jle
notl
aas
xchg
push
inc
stos
push
mov
mov
adc
xchg
js
je
xor
popa
icebp
out
pop
mov
sbbl
lcall
dec
dec
fimuls
icebp
sub
push
fwait
mov
subl
mov
xor
ret
add
push
sbb
stos
inc
xchg
pushf
fdivrl
push
insb
mov
or
pop
jecxz
fsubs
push
popf
inc
aad
lahf
adc
es
movsb
roll
cmp
jae
push
arpl
fnstsw
or
loopne
aas
jecxz
jp
imul
repz
adc
ljmp
push
ss
das
sbb
test
dec
ljmp
inc
imull
push
pusha
pop
sbb
jge
loopne
jo
xchg
mov
in
sub
pop
lods
push
insb
in
or
dec
xorl
ds
lds
xchg
stos
lcall
into
pop
insw
push
loop
repz
lods
mov
push
movsl
popa
test
mov
lret
xchg
dec
cmpsl
popf
adc
int
pusha
icebp
add
pop
jg
inc
loop
int
jb
fwait
add
and
jo
fidivs
inc
lods
sub
mov
adc
aam
mov
and
fcompl
pusha
xor
lea
daa
lds
cmp
jecxz
lock
bound
loop
repz
cmp
cmpsl
push
sbb
dec
dec
cmp
out
jne
sub
mov
xchg
inc
es
and
xchg
jbe
shr
test
out
push
lock
movl
scas
pop
adc
mov
testb
clc
mov
cmpsb
rorb
rorl
push
inc
mov
scas
add
popf
or
idivb
mov
fwait
add
mov
or
sub
pop
aaa
in
inc
dec
push
mov
out
cld
jae
pop
dec
inc
and
push
addr16
call
sbb
push
sub
fistps
pop
rcll
les
je
and
sbb
xorb
rcrb
cmpsl
inc
mov
shrl
adc
lock
inc
jae
aam
jb
scas
popf
xchg
push
movsl
loop
loope
repnz
adc
add
jecxz
out
jae
loop
in
les
in
cwtl
sbb
jle
mov
es
and
pop
xlat
push
push
or
rol
and
lret
pop
pusha
shrb
mov
in
sub
sti
mov
xchg
call
das
pop
xchg
ljmp
and
mov
repz
jmp
rcrb
add
jmp
pop
pusha
adc
mov
cmpsb
fsts
pop
adc
in
rcll
into
push
mov
adc
xor
xor
dec
movsb
aas
loop
mov
push
push
pop
aad
add
int3
aas
xchg
ja
cmpsl
push
jle
mov
dec
cltd
and
lds
and
or
sbb
push
push
sbb
nop
xchg
mov
outsl
ficomps
or
pop
mov
mov
push
enter
cmc
pop
cwtl
pop
jl
adc
or
push
jg
dec
repz
call
sub
in
jb
addr16
loopne
mov
rorl
pop
cld
inc
daa
jecxz
in
or
jns
mov
jbe
fcmove
into
or
push
mov
sbb
xor
mov
push
call
adc
dec
push
jmp
dec
xchg
stos
ficoml
push
rorl
fidivs
icebp
mov
mov
push
sub
sti
in
adc
mov
jne
sub
dec
pop
push
rorb
adc
xchg
lahf
dec
sub
xor
push
dec
popa
sti
sbb
mov
lahf
into
mov
adc
call
inc
cwtl
add
clc
pop
shrl
and
rolb
add
mov
lods
pushf
cmp
adc
jp
pop
shl
push
sub
xchg
adc
out
dec
loopne
mov
addb
inc
popa
js
cmp
adc
mov
mov
xor
add
xchg
jb
pusha
imul
or
lcall
push
add
add
in
adc
std
adc
in
shl
scas
lods
inc
cli
pop
mov
mov
shrb
push
js
stos
push
xchg
cltd
movsb
pop
cmpsl
jno
inc
ja
mov
jecxz
addl
daa
cmp
cltd
mov
jbe
mov
xor
lret
inc
pop
cmp
outsl
cmp
cmp
notb
mov
add
mov
mov
int
negb
sti
in
aas
neg
mov
fsubl
es
dec
xlat
fstpt
push
ds
jmp
into
jp
xchg
std
aam
add
add
ljmp
add
pop
dec
cmp
mov
xchg
add
xchg
mov
int
xor
cli
lahf
rcrb
ss
andb
lock
jno
stos
sbb
mov
jo
mov
push
adc
pushf
outsb
test
dec
repz
fbstp
sbb
add
loop
sbb
mov
frstor
push
xchg
adc
mov
jnp
scas
or
jns
push
jns
pop
js
and
stc
xchg
add
mov
fdiv
mov
scas
mov
sub
inc
add
xor
mov
loopne
inc
ljmp
and
push
lcall
push
sub
pusha
dec
lds
adc
ret
jo
add
jmp
adc
or
adc
sti
mov
xchg
dec
in
dec
jmp
outsl
cltd
and
push
and
xchg
sbb
sbb
push
or
jecxz
xchg
call
push
inc
popa
pop
hlt
sub
and
shll
mov
inc
or
mov
jle
in
ja
imul
aas
sahf
in
cld
jb
mov
adc
clc
sub
mov
inc
shll
jle
fists
sbb
cmp
mov
push
adc
fdiv
int3
dec
xor
mov
or
mov
mov
bound
sahf
xor
mov
push
out
mov
testl
rorb
mov
push
subb
sbbb
bndstx
cmp
push
ror
push
lds
flds
mov
adc
scas
enter
mov
jnp
xor
scas
stc
lahf
imul
mov
cmpsl
jo
in
xlat
stos
addr16
push
imul
mov
pop
in
lea
and
lods
movsl
test
adc
sbb
mov
lret
gs
push
jecxz
dec
div
in
or
sbb
jns
lret
or
int3
push
mov
mov
in
jne
inc
dec
or
es
fwait
pop
scas
fstl
pop
sub
xlat
xor
jbe
jae
in
shl
xor
cmc
add
test
divl
dec
sti
in
test
jmp
scas
call
movsl
ss
cmp
idivb
cmpsb
xchg
idivl
stos
ret
mov
test
push
inc
sub
push
push
push
lahf
aas
mov
pop
fxch
adc
mov
inc
or
jbe
mov
adc
add
mov
mov
imul
leave
lret
out
mov
cmovb
out
mov
push
ret
or
mov
push
out
nop
arpl
dec
stos
mov
aad
scas
loop
and
lds
gs
cltd
das
int
and
pop
es
arpl
andl
cmp
jbe
lea
lret
mov
push
scas
sub
adc
test
pop
mov
mov
movsb
mov
add
or
push
or
jbe
sbb
aad
jb
inc
fnstsw
xchg
loopne
lods
ljmp
cmp
frstor
sahf
das
or
jge
inc
mov
pop
xor
rolb
xchg
xchg
insb
sahf
push
and
sub
mov
push
sbb
and
push
sub
lock
cmp
mov
dec
mov
inc
lcall
in
cmp
outsl
dec
lods
jmp
test
clc
ffree
test
imul
shr
mov
sbb
stos
pop
sbb
push
stc
mov
mov
pop
arpl
ds
stc
pusha
xor
cwtl
jle
mov
cmpsb
adc
ret
sub
js
jbe
pop
les
dec
and
mov
roll
dec
das
repz
cltd
mov
adc
and
dec
mov
cmp
inc
cmpl
jmp
inc
fdivrs
mov
sub
stos
sarb
sbb
and
mov
push
pop
call
sub
std
popf
push
mov
cltd
mov
cmp
and
cli
rcll
cmp
call
test
aad
in
fstpt
sbb
and
mov
jno
mov
jae
lahf
and
cmp
int
inc
cmp
mov
and
push
int
sbb
ljmp
mov
pushl
pop
insb
and
fiaddl
mov
arpl
sub
mov
repz
ja
jb
dec
push
jns
sahf
rorb
cmpb
adc
divb
jns
test
jmp
orl
fs
pop
dec
shlb
inc
adc
dec
adc
pop
std
xchg
and
xchg
xchg
pop
xor
adc
xchg
repnz
mulb
adc
inc
inc
hlt
xchg
pop
dec
mov
lods
aaa
adc
or
inc
sbb
vandps
adc
dec
add
fcompl
jns
call
inc
divb
fsubp
pop
or
cwtl
inc
icebp
mov
mov
mov
jl
mov
sub
in
mov
sbb
test
hlt
inc
mov
adc
mov
and
pop
cli
or
cli
adc
xchg
loope
xor
inc
mov
movsl
mov
xchg
pusha
cmpsl
mov
fwait
and
in
push
push
inc
loope
insb
add
and
dec
ret
arpl
xor
stos
jo
xor
adcl
sahf
lods
and
movsl
mov
dec
mov
cmp
repnz
iret
daa
jnp
mov
clc
jmp
lret
lcall
js
fistpll
sbb
mov
mov
fsubrs
jbe
inc
mov
outsl
pop
lock
lret
loopne
clc
push
inc
xorl
stos
vcvtss2si
xchg
cmp
mov
test
test
adc
js
repz
sub
jnp
dec
test
pop
out
repnz
filds
push
xlat
add
imul
mov
idivb
repnz
hlt
mov
jmp
int
push
imul
stos
out
jns
pop
dec
enter
out
je
inc
out
ret
xchg
js
push
ret
rcl
sarl
aaa
out
jo
cld
xor
mov
cli
mov
mov
jmp
repz
aas
sbb
je
add
push
pusha
fistpl
pop
jo
loop
popa
inc
daa
xchg
aas
popa
inc
push
pop
lea
mov
cmc
imul
mov
mov
sub
sub
cltd
jp
insb
sub
idivl
mov
ret
lret
mov
fwait
inc
test
mov
enter
add
icebp
aas
rclb
leave
fldl
int3
adc
les
mov
xlat
pop
sub
sub
xor
call
test
mov
pushl
sub
ljmp
loope
mov
xor
xor
stos
out
jb
lods
push
stos
xlat
fisttpll
mov
aas
aaa
pop
out
jno
push
andb
jecxz
out
push
adc
push
pop
popa
mov
repnz
out
test
aas
cmp
ret
xor
movsb
inc
test
scas
das
xchg
loop
cmp
jnp
pop
xchg
ds
mov
adc
into
into
dec
hlt
sub
mov
ja
ds
pop
jno
stos
arpl
pop
imul
test
adc
sbb
mov
dec
mov
in
dec
add
sbb
push
out
sub
shrb
push
pop
mov
xchg
rcrl
xor
mov
rorl
das
nop
into
ljmp
dec
scas
iret
insb
cmp
popa
cld
movsl
arpl
sahf
lods
mov
xchg
xor
cmp
inc
scas
jmp
sbb
idivl
ss
xchg
xor
es
fildll
adc
add
mov
xchg
push
fmull
outsl
js
into
in
stc
leave
imul
pushf
idiv
cltd
fwait
mov
mov
incb
xor
in
push
loopne
dec
fnsave
in
fnstcw
dec
sub
jb
nop
and
mov
lret
roll
ljmp
mov
fisubrl
dec
faddl
push
je
imul
mov
push
inc
pop
or
das
and
movsl
pop
inc
sub
pop
xor
pop
lods
mov
rorb
ret
pop
jg
xlat
jbe
sbb
adc
mov
fs
das
push
xchg
pop
inc
es
clc
sbb
out
xchg
add
add
lds
jno
sub
mov
cmp
xor
insl
nop
mov
xchg
repz
jnp
xchg
mov
mov
aas
leave
lods
adc
fcompl
stos
loope
cmc
mov
xor
data16
or
pop
fs
or
or
aam
add
or
pop
outsb
xchg
xchg
sub
cmp
cltd
bound
pop
adc
stos
ja
test
mov
cmp
jno
in
mov
push
inc
inc
add
jb
pop
push
adc
ljmp
push
or
lret
test
push
or
cmc
cmpsb
or
push
repz
stc
push
out
test
ja
xchg
aas
aas
sub
ret
mov
roll
into
mov
inc
mov
ljmp
hlt
inc
cmp
cmp
sbb
sahf
clc
add
dec
and
aam
fs
dec
das
stos
pop
or
cmp
enter
testl
dec
in
inc
inc
aam
adc
insl
dec
adc
test
push
popa
xchg
sbb
mov
dec
jg
ret
scas
stos
adc
gs
xlat
jb
fwait
xchg
pop
adc
and
out
xor
in
imul
loopne
arpl
add
mov
jp
or
push
lods
xor
jle
movq
add
push
repz
les
add
push
cmpsl
negb
cmp
loop
sbb
mov
adc
sbb
cltd
jge
bound
int3
into
mov
cmp
and
xor
pop
mov
and
addl
arpl
jl
ja
mov
arpl
std
xor
repnz
sub
inc
cmc
lret
push
mov
mov
or
shrl
pop
sbb
outsl
fcompl
std
xchg
adc
pop
ret
cmp
jne
push
cmp
loop
lahf
aad
lods
faddl
lahf
aam
cmp
bswap
add
fnstenv
inc
pop
mov
xor
push
mov
mov
movsb
enter
cmp
cld
or
push
mov
insl
ret
repnz
popa
dec
jmp
ljmp
mov
lahf
add
fldl
add
push
push
sti
mov
pop
subl
cmp
jmp
adc
mov
dec
push
loop
and
add
insb
or
mov
mov
mov
test
cli
xor
cltd
cmpsl
daa
add
jno
push
les
mov
aad
xor
dec
jp
loopne
movsl
jg
xchg
mov
dec
jge
lds
jp
cvtdq2ps
or
out
inc
shlb
roll
lcall
or
add
aam
jno
mov
dec
cmovb
lahf
nop
negl
pop
sub
inc
push
xor
and
popf
int3
cmpl
jbe
adc
dec
lea
dec
jg
mov
movsb
mov
ss
push
ficoms
xor
outsb
sub
mov
mull
pop
shl
dec
pop
inc
jmp
sub
xor
inc
or
jae
jle
les
aaa
cmp
clc
sbb
mov
cwtl
mov
dec
hlt
adc
mov
les
push
inc
std
cmc
insb
outsb
adc
lds
imul
sahf
adc
mov
ljmp
push
clc
xor
add
push
es
and
push
lods
sbb
lods
cmp
movsl
or
mov
push
cwtl
xchg
xchg
inc
int3
or
aaa
jl
pop
shll
pop
std
add
or
adc
aad
adcb
sub
mov
sbb
jbe
mov
cmp
inc
adc
hlt
cmp
clc
repnz
adc
pop
adc
mov
sbb
sbb
stos
pop
pop
xor
popa
push
leave
imull
notb
lds
push
hlt
push
inc
aaa
sbb
adc
push
fnstenv
pop
es
sahf
daa
or
cli
pop
scas
imul
add
pop
out
add
add
cmpsb
mov
mov
mov
mov
or
lret
std
mov
out
mov
shlb
pop
mov
mov
push
push
lods
inc
add
loope
in
mov
mov
aaa
out
bound
test
fistl
sub
xchg
push
or
sbb
test
mov
sbb
aaa
rcrl
rolb
int
dec
mov
test
shrb
dec
pop
or
jbe
sbb
xchg
pop
ja
rcll
xchg
adc
insl
xchg
es
in
or
sub
pop
cmp
outsb
sbb
mov
inc
mov
dec
mov
sbb
sarl
xchg
lret
jbe
into
xor
movsl
pop
mov
dec
mov
sarb
sub
xchg
mov
mov
movsl
ror
cmp
mull
outsb
add
pop
mov
repnz
pusha
ljmp
sub
das
addb
dec
jl
test
mov
pop
add
xchg
cmp
xor
or
push
js
test
add
xor
shlb
cmpb
push
xor
imul
arpl
adc
and
rclb
mov
lock
rol
insb
jbe
mulb
dec
xor
stc
insb
inc
aaa
xchg
push
dec
fiaddl
enter
sub
hlt
insl
rorl
xor
dec
cmp
out
mov
rcrl
imul
jbe
xor
rcrl
popa
adc
mov
aam
adc
repnz
xchg
cwtl
dec
xchg
adc
test
sbb
fdiv
clc
jnp
inc
pop
jl
lea
movsb
mov
lret
into
jmp
xchg
inc
mov
pushf
adc
es
dec
xor
fsub
inc
clc
xor
lea
leave
leave
lea
xchg
jmp
popa
pop
mov
mov
xchg
adc
pop
mov
fistps
and
sbb
movsb
ja
enter
pop
adc
jmp
xchg
stos
pop
sub
sbb
std
adc
aad
pop
lds
cmp
aaa
scas
adc
or
mov
cmp
insl
sbb
not
jl
vmovdqu
dec
mov
sbb
testb
inc
fists
add
xchg
mov
mov
jo
in
pop
adc
pop
pop
xchg
js
ret
nop
popf
inc
int
fsub
pop
outsl
sub
shlb
out
add
mov
push
std
mov
push
je
insb
push
sub
imul
dec
sub
and
jno
lock
in
aas
std
jbe
xchg
iret
fwait
mov
ja
jo
cmp
ja
int3
mov
int
mov
stc
sbb
outsb
outsl
pop
repnz
rorl
inc
pushf
aas
push
add
addb
inc
pushl
mov
mov
mov
cmp
jbe
je
adc
mov
add
sub
imul
fisubl
xchg
mov
fcomi
inc
jne
movsb
movsl
idivb
inc
pushf
lods
xchg
xchg
mov
lods
add
lea
loopne
mov
pop
sarb
mov
imulb
fiadds
xchg
sbb
or
test
mov
cmpb
add
hlt
xlat
cs
std
and
mov
jno
mov
cs
arpl
lods
ss
sub
xchg
and
scas
pop
popa
ljmp
pop
dec
push
dec
rorl
add
std
dec
inc
loopne
add
sub
dec
and
imul
daa
pop
cmpsb
notl
inc
push
mov
fcmovnb
int
fnsave
mov
ja
mov
stc
xor
and
gs
cmp
pop
icebp
and
aas
hlt
sub
mov
dec
mov
dec
neg
add
jge
sti
adc
outsl
xchg
mov
je
push
inc
pop
bound
jmp
adc
sub
dec
sbb
mov
sub
imul
or
or
data16
push
jl
xor
loop
shrl
sub
fmuls
std
dec
or
add
fadds
dec
test
outsb
pop
cmp
dec
mov
arpl
fisubrl
data16
movl
aaa
jecxz
push
dec
je
inc
repnz
jg
mov
js
sti
cmpsb
push
mov
rclb
sbb
adc
addb
sbb
mov
xchg
es
jg
or
sbb
mov
adc
inc
cld
adc
mov
push
jge
ret
pop
mov
mov
xor
mov
xlat
in
rep
jno
push
push
out
fldt
outsl
dec
aas
cwtl
xchg
enter
sarb
fs
jne
add
add
jp
jns
add
pop
subl
mov
enter
sbb
into
pop
fdivl
enter
cmp
roll
dec
add
jmp
jle
xchg
sbb
cmpsl
push
adc
out
loope
lods
dec
jb
and
push
mov
test
push
lret
xor
andw
or
scas
inc
clc
pop
sub
aas
cmp
inc
xor
jmp
rolb
jmp
dec
pop
xorb
int
mov
pop
push
inc
sub
pop
push
les
cmpl
lods
loop
out
andb
lahf
adc
subb
adc
pushl
mov
xchg
in
sub
sahf
cwtl
sub
jp
pop
sub
jle
mov
imul
and
mov
jecxz
pusha
popa
aad
in
ret
mov
xchg
js
scas
xor
ror
shl
fildll
sbb
pop
test
push
rorb
loop
out
jnp
out
pop
jecxz
sub
and
or
push
std
das
or
jg
and
xchg
or
in
inc
imul
imul
jae
xchg
fs
xchg
std
jmp
adc
iret
cli
and
mov
clc
sbb
stc
mov
xor
push
sbb
divl
imul
das
addl
fbld
add
sub
adc
push
push
inc
cmp
loope
adc
lods
push
test
enter
addb
xor
xchg
dec
mov
ss
add
pushf
adc
push
xor
mov
cltd
call
arpl
aam
mov
imul
or
pop
push
mov
xchg
repnz
xlat
and
pop
mov
pop
jae
inc
dec
jns
popa
arpl
fdivrp
out
cmp
in
out
inc
in
inc
out
mul
ss
adc
lahf
sbb
xchg
mov
push
arpl
imul
jnp
push
xchg
add
pop
and
or
add
in
jb
sahf
mov
mov
xor
movsl
leave
clc
ja
push
jl
pop
out
aaa
lods
lahf
and
cld
push
pop
add
into
call
sub
je
daa
sti
sub
push
leave
daa
ljmp
sbb
push
sbbl
xchg
out
and
cwtl
outsl
mov
pop
pop
dec
out
add
inc
push
adcb
xor
out
pop
push
cwtl
cmp
xor
movsb
add
iret
jbe
dec
int3
sub
cld
xor
adc
frstor
sub
scas
outsb
in
lods
out
inc
jmp
fcomi
mov
mov
and
stc
sbb
fdivrp
inc
outsb
sti
sbb
ds
mov
inc
or
mov
push
nop
ret
sahf
loope
cmp
sub
lret
push
fistpll
repz
call
pop
adc
popf
mov
add
adc
sub
int
mov
pop
shl
push
daa
rcrl
jge
inc
add
cmp
xchg
jbe
push
mov
mov
je
inc
test
frstor
sub
fsubs
mov
jl
pop
in
xchg
aam
pusha
push
ret
cltd
movsb
pop
hlt
mov
or
pop
dec
fiadds
add
js
out
jecxz
stos
daa
out
mov
test
dec
adc
popf
fbstp
fisubs
test
jno
mov
pop
ljmp
mov
push
sbb
mov
hlt
shrb
push
in
loope
or
and
or
loop
mov
inc
scas
sbb
fdivs
cwtl
scas
and
adc
out
push
xor
aas
add
push
rclb
mov
lods
into
dec
adc
pushf
in
jb
int
fucomi
mov
pushw
ljmp
sbb
jmp
mov
aad
inc
inc
or
sbb
cmp
imul
mov
stos
stos
out
jnp
js
cmpsb
pushf
dec
xor
push
adc
xchg
mov
cli
xchg
inc
pushf
cld
push
xor
mov
loopne
notl
xchg
xor
mov
enter
insb
adc
lock
inc
cs
or
xchg
push
or
add
sub
repz
mov
ss
inc
repnz
into
enter
xchg
mov
cmp
cltd
mov
test
and
out
shl
pop
sbb
adc
fisttpll
in
push
jmp
xchg
imul
test
add
shrl
cmp
shll
pop
inc
inc
rol
fimull
ss
cmp
sahf
incb
push
fidivs
mov
frstor
mov
dec
mov
or
pop
lock
daa
lret
sbb
push
or
pop
push
hlt
or
mulb
imulb
scas
fidivs
sarl
xchg
iret
cmc
ja
adc
pop
or
into
sbb
inc
cmp
shll
sub
xchg
out
mov
adc
lods
pop
dec
dec
scas
pop
lcall
repz
mov
sbb
or
clc
sbb
lcall
inc
std
insb
push
dec
jbe
fs
fcmovnbe
or
lea
test
xchg
int3
and
add
mov
inc
add
pop
sub
xchg
iret
sbb
push
dec
mov
mov
mov
mov
cmc
enter
scas
in
negb
leave
das
aam
pop
xor
or
fldt
andl
xchg
jmp
jecxz
cld
mov
cli
add
xchg
fistl
mov
cmp
push
add
clc
lret
out
push
data16
xor
push
loop
jbe
loopne
jo
xchg
mov
sbb
subb
mov
shl
xchg
test
mov
mov
mov
loop
fwait
scas
jns
mov
fdivr
xchg
fs
push
stc
sub
mov
jmp
pop
shrb
sbb
lret
push
hlt
mov
lret
in
ret
je
inc
xchg
mov
xchg
loope
dec
or
cwtl
shll
or
jecxz
bound
cmp
movsl
jbe
das
in
sub
fistpl
mov
mov
mov
je
hlt
pusha
jl
int
push
push
jmp
xchg
pop
ja
xchg
aas
cmp
xor
repz
add
andb
mov
out
hlt
lea
push
adc
cmpsl
sub
add
push
inc
push
fildll
mov
and
mov
clc
mov
and
loopne
jo
outsl
addl
rorb
jbe
cltd
nop
ret
inc
push
and
sub
fwait
sarb
bound
and
dec
pop
out
dec
sbb
xchg
or
and
fsts
pop
mov
stos
and
lods
mov
or
push
push
sbb
inc
ss
mov
lock
loopne
dec
lods
xchg
fs
rcl
xor
test
int3
in
jp
lea
sarl
adc
xor
xchg
mov
mov
xor
pop
jb
jns
lock
sbb
mov
and
mov
inc
and
and
mov
sahf
ret
push
xor
jae
push
or
or
mov
int3
movsb
cmp
out
sub
jl
lret
lret
pop
xchg
sub
test
mov
adc
lds
popa
lret
scas
popl
sbb
call
scas
pop
cmp
lret
xor
scas
push
in
mov
push
mov
fcompl
data16
cmp
sub
dec
or
fdivrl
out
and
cmp
mov
dec
aas
adc
pop
aas
inc
pop
fsts
push
mov
push
outsb
outsb
jp
fldt
sbb
inc
sbb
and
pusha
bound
aaa
fmul
jecxz
cmpsb
insl
cltd
sub
mov
shl
dec
inc
movsb
mulb
idivb
insb
jmp
push
out
ret
in
stc
xchg
push
add
cmp
mov
mov
imul
xor
lock
lret
negl
mov
mov
or
or
cmp
pop
clc
aas
testl
daa
sub
push
xor
pop
jp
push
jl
mov
mov
cmc
int
imulb
xor
lock
mov
pop
xlat
jb
outsl
cmp
mov
movsl
add
dec
and
push
lahf
add
sub
lret
sub
inc
in
jl
dec
push
into
repz
repnz
sbb
shr
imull
test
push
inc
sub
das
dec
insl
lods
mov
mov
mov
jge
adc
in
call
insb
mov
test
jp
sub
mov
in
mov
mov
push
mov
or
push
imul
dec
test
icebp
xor
dec
jo
xchg
std
xor
inc
fsubp
mov
push
jns
adc
inc
ss
mov
ja
cmpsl
test
in
leave
jle
scas
aaa
push
add
add
test
sub
xor
dec
aam
shl
popa
lret
jns
aad
dec
ret
adc
add
call
mov
mov
loope
aas
jb
or
loopne
xlat
loopne
jecxz
hlt
lret
je
mov
fsubrs
fcmovbe
xchg
or
int
addr16
shr
mov
lods
push
push
push
sbb
shl
push
sub
mov
mov
test
aaa
mov
mov
dec
mov
mov
rolb
mov
push
aad
pop
mov
push
jmp
divl
mov
fwait
pop
inc
add
imull
dec
loop
adc
jecxz
inc
cltd
scas
xchg
jnp
popa
int
sub
inc
repz
nop
or
mov
and
push
jo
stos
pop
or
cs
mov
clc
push
mov
dec
push
cmc
pop
cmp
addr16
les
pop
loope
jge
lods
popf
pop
into
je
repz
les
adc
cwtl
pop
mov
pop
xchg
sub
jb
movsl
or
adc
xchg
loop
scas
dec
sti
mul
loopne
xlat
lods
rcrb
or
add
cmp
in
jmp
jecxz
les
int
icebp
inc
arpl
leave
pushf
sbbb
pop
rolb
test
add
mov
cmp
cmpsl
repnz
push
mov
xchg
dec
loope
lods
push
sub
dec
pop
outsb
call
jae
adcl
mov
xor
sbb
add
rorb
movsl
lret
push
add
leave
aad
xchg
idivl
jl
adc
mov
pop
insl
mov
cs
sub
xchg
ss
rcrb
add
subb
xor
test
fcmovne
cmpsl
cmp
xor
xor
sbb
lahf
push
cmp
mov
xor
jge
mov
adc
jg
scas
mul
xchg
mov
sbb
cmpsb
test
adc
and
js
jns
mov
and
and
push
xchg
aaa
xchg
std
sbb
dec
jmp
mov
repnz
leave
and
cltd
movsl
jo
jb
out
aas
cmp
je
leave
inc
sahf
test
stc
xchg
adc
and
sbb
sub
sub
icebp
and
jecxz
inc
mov
cltd
lods
and
cmpb
ret
pusha
xchg
push
loope
in
xchg
cmp
sbb
pop
mov
pop
dec
mov
in
xchg
mov
cld
shlb
adc
mov
mov
shl
loopne
rorb
mov
ror
ret
bound
or
in
or
sub
cmp
outsb
push
jp
xor
mov
test
test
mov
mov
mov
ds
fwait
mov
push
sahf
adc
je
into
mov
lods
inc
sahf
xchg
lret
sub
xchg
insb
enter
icebp
lret
aaa
fimull
out
fs
js
pop
jnp
addr16
sub
fstpt
fstpl
mov
sub
in
aaa
stos
push
mov
popf
and
add
jmp
inc
imul
push
rcll
xor
mov
divl
xor
mov
insl
lea
xor
pop
pop
xor
fists
jp
jle
push
movsl
in
daa
jl
lret
jl
mov
mov
pusha
sub
in
xchg
repnz
xchg
bound
pop
aas
lret
mov
bound
mov
rcll
and
mov
pop
mov
xchg
movsb
insl
ds
test
adc
fldenv
jno
inc
cmp
cwtl
lcall
aam
pop
jb
jno
xchg
orl
dec
pop
out
xor
xchg
push
xchg
jg
cmp
in
jg
jns
xlat
jno
addr16
pop
and
inc
pop
cld
cltd
cmp
jmp
imul
and
and
xchg
mov
test
call
inc
adc
mov
dec
jmp
inc
adc
cmp
leave
add
enter
scas
adc
xor
cli
dec
mov
mov
shl
push
push
add
enter
lahf
push
out
pop
mov
sarl
mov
cmp
sbb
mov
add
adc
push
push
in
dec
mov
jo
xlat
adc
add
mov
das
je
or
ficomps
mov
jmp
push
jnp
out
fistpll
cmp
mov
sbb
xor
ss
adc
or
dec
inc
stc
xchg
leave
out
inc
pop
je
xchg
dec
data16
xchg
adc
cmpsl
aaa
xor
push
shl
rclb
push
add
xchg
out
stc
or
sub
sub
dec
sbb
out
sub
bound
aad
out
test
rorl
enter
notb
clc
lret
int
xchg
or
lret
shlb
arpl
out
cld
adc
or
ds
iret
test
scas
jno
test
mov
outsl
sbb
je
testb
jmp
stc
sub
leave
mov
ds
dec
dec
push
jl
loopne
inc
push
fisubrl
jb
xor
mov
fdivrl
xchg
jnp
mov
cmp
pushf
nop
jae
mov
dec
movsl
xor
enter
nop
orb
mov
or
scas
mov
sti
pop
mov
cmp
popf
xchg
ss
add
push
inc
cmpl
mov
inc
int
outsl
jmp
jmp
mov
mov
mov
jmp
xor
push
lcall
jl
add
cwtl
mov
push
jo
cmpsb
mov
daa
mov
cmpsb
pop
jbe
dec
xlat
std
jp
cwtl
xor
insb
jge
clc
mov
bound
xor
cwtl
andb
out
int3
lea
pop
rclb
adc
push
imul
out
dec
cmp
sub
add
cld
out
or
cmp
jno
xor
out
andb
mov
or
fsts
and
loop
pusha
xchg
push
xchg
popa
addr16
cs
cmpl
cwtl
std
dec
fst
std
cmp
mov
imul
lock
and
rclb
adc
mov
push
xor
lea
orl
mov
fildl
dec
addr16
xor
fbstp
out
aam
adc
and
leave
pop
gs
mov
outsb
or
jns
jge
test
cli
pop
jne
add
out
push
or
imul
ljmp
gs
clc
inc
adc
loopne
mov
popa
loopne
jno,pt
jnp
test
cs
push
ds
sub
jbe
sub
and
mov
call
dec
andb
int
into
shll
lahf
dec
mov
inc
sti
repnz
les
stc
push
mov
aam
push
in
xchg
mov
xchg
push
nop
cmp
ret
xchg
shrb
push
mov
add
movsb
inc
repnz
in
and
add
dec
or
cmpsl
xorl
xchg
gs
pushf
sub
subl
push
into
inc
ljmp
out
into
mov
insb
adcl
mov
iret
mov
inc
das
or
aad
jle
out
arpl
pop
les
hlt
out
mov
push
jl
cmc
add
xchg
cltd
mov
stos
cmp
mov
adc
icebp
out
mull
test
xchg
mov
clc
jbe
mov
cmc
mov
and
xor
leave
dec
ljmp
sbb
lret
mov
jl
loopne
add
subl
lea
push
add
push
frstor
sbb
cwtl
jae
out
push
pop
mov
push
mov
inc
dec
and
cli
es
sub
pop
repnz
adc
mov
add
pusha
int
jg
and
pop
rolb
addr16
test
lods
mov
in
mov
mov
jnp
mov
jne
mov
sbb
xchg
ret
mov
xchg
lock
lcall
sub
out
in
pop
in
xchg
mov
pop
or
cmp
push
aaa
ja
jb
mov
shr
cld
adc
aad
or
jo
mov
int
imul
out
stos
addl
rclb
adc
push
mov
jne
imul
out
loopne
andb
jle
cmp
adc
dec
incb
mov
inc
push
and
jns
inc
mov
push
in
xchg
ret
push
fwait
add
das
pop
popa
mov
and
fs
test
push
xchg
out
add
or
imul
pop
daa
lods
aaa
data16
fisttps
pushf
popa
lds
aam
test
jnp
pop
lret
ss
pushf
sti
jle
cli
xchg
or
dec
imul
dec
inc
stos
cmp
movsl
stc
vmwrite
ds
lret
out
ss
sub
xchg
dec
int3
mov
add
aas
aas
scas
pop
shrl
paddq
scas
jmp
insb
xchg
push
mov
aaa
fldenv
cld
cmp
jl
mov
div
inc
lcall
mov
in
inc
rcll
push
ja
jp
sub
jl
fwait
cmp
pop
mov
sbb
fmuls
filds
pop
cltd
pop
hlt
dec
jae
insb
jns
push
xchg
dec
aas
inc
and
cld
mov
mov
mov
mov
xchg
pop
sar
jl
add
jp
cli
shlb
repz
jl
jmp
imul
push
loop
jnp
orl
adc
arpl
jg
add
jno
scas
xchg
daa
bound
cmp
aaa
mov
shll
mov
mov
xchg
fwait
xchg
mov
movsl
jno
mov
xchg
jle
lock
into
iret
xchg
jns
sbb
movl
test
stc
fistpll
es
sar
mov
cmp
mov
inc
mov
push
mov
fisubrs
lea
pop
fisubrl
cmp
pop
loop
sbb
push
fsubrp
cltd
subb
sub
jb
pop
sbb
jb
mov
pop
jnp
out
mov
xchg
xor
daa
jl
sub
and
jb
ret
insb
mov
sub
std
popa
jl
data16
mov
cmovbe
push
xor
mov
jge
dec
enter
in
xchg
inc
cmc
xchg
jecxz
inc
enter
sub
adc
jnp
scas
mov
inc
mov
icebp
xor
movsb
gs
adc
push
ja
jae
mov
sbb
cmp
rolb
and
cmp
fcomps
xor
adc
sub
aaa
inc
je
imul
sub
dec
and
dec
sbb
xchg
pop
sub
stos
inc
mov
mov
out
xchg
sub
push
jmp
rcll
pop
cld
mov
and
dec
mov
mov
mov
xlat
outsb
cs
mov
cmpsl
jns
push
ret
add
push
and
cmp
mov
jp
xchg
and
inc
mov
lahf
add
call
cmp
push
cld
arpl
loope
in
or
adc
in
cmpsb
and
insl
mov
divb
fimull
pop
mov
fdivr
lods
lods
out
mov
insl
mov
int
add
sbbl
iret
xor
pop
out
roll
dec
rcrb
repnz
sbb
stos
adc
xor
in
adc
movsb
adc
xchg
fildll
mov
inc
cmp
or
inc
or
jb
lcall
xor
cmp
push
xchg
xchg
sbb
push
mov
call
les
mov
out
outsl
ret
in
or
mov
scas
addps
rcrb
mov
into
mov
mov
cmc
imul
xor
rorl
lds
pop
jmp
sbb
or
sub
and
pop
mov
jnp
mov
fdivr
inc
bound
bound
cmc
jno
sbb
js
repnz
and
jecxz
movsl
jg
or
and
decl
ret
pop
enter
in
push
subb
xor
sbb
out
aaa
jecxz
sbb
push
or
movsl
out
fiaddl
mov
into
ret
movl
imul
xchg
and
lret
enter
inc
xor
cs
adc
test
adc
js
xchg
jnp
push
mov
repnz
ds
out
rcrb
rclb
push
inc
cld
xchg
notb
pop
cltd
cmp
xor
lcall
and
shrb
mov
int3
in
dec
xor
or
pop
outsl
imul
and
fcmovbe
push
cmpsb
imul
mov
dec
shll
sbbl
push
rclb
pop
in
xchg
pop
arpl
fs
repnz
mov
popf
hlt
adc
push
cld
leave
rorl
mov
mov
sbb
add
movsl
inc
mov
into
cld
mov
jne
outsb
bound
and
mov
push
mov
add
fidivrs
test
loop
jae
sub
lret
out
mov
dec
and
mov
cmpsb
std
jl
in
dec
xchg
mov
popa
fimull
xor
enter
pop
xchg
pop
mov
dec
mov
inc
ljmp
mov
mov
mov
test
xchg
or
dec
xchg
sarl
hlt
push
hlt
data16
lahf
adc
popa
and
pop
mov
ja
daa
pusha
scas
sbb
mov
std
push
jmp
jns
mov
std
mov
xchg
ret
sbb
cltd
add
test
rcll
ret
sbb
clc
xchg
rolb
xchg
lret
int
andw
aam
mov
sahf
int
loop
and
adc
xchg
ja
push
rclb
pop
hlt
adc
fbstp
adc
push
call
outsb
cwtl
mov
and
fsincos
imul
lcall
call
movsb
daa
imull
lret
xchg
mov
cmpsb
xchg
fsubr
rcr
ret
rol
mov
pop
mov
push
dec
jecxz
test
sbb
cmpsl
push
cli
jbe
jbe
inc
add
std
inc
pusha
jmp
cmp
insl
mov
dec
push
stos
inc
std
push
xchg
xor
jae
aaa
aam
adc
ja
xchg
xlat
pusha
add
pop
fs
shlb
sahf
or
and
or
bswap
data16
nop
inc
dec
lds
and
out
xchg
mov
mov
lret
icebp
faddl
jle
jecxz
in
jne
jl
sbb
xchg
fmulp
dec
jno
xor
push
mov
mov
test
sbb
popf
push
in
push
sub
xchg
xchg
sbb
shlb
push
mov
sahf
jo
cmc
ficompl
repnz
dec
jl
jbe
ljmp
adc
and
mov
xor
push
lea
popf
jle
js
stos
fxch
out
xor
psrlw
mov
xchg
jge
les
fisubrs
sbb
sarb
movsb
jnp
aad
das
std
clc
gs
jle
push
or
push
call
mov
stc
xchg
pop
jge
test
mov
xchg
clc
das
xor
loop
and
adc
push
push
into
dec
fsubs
push
push
sub
fbstp
es
sub
inc
repnz
repz
rcll
pushf
sub
pop
jb
sub
xlat
jge
popa
outsl
imul
insb
xchg
cmp
mov
push
inc
cld
mov
mov
xchg
cld
mov
test
jmp
mov
scas
mov
xchg
sbb
dec
insb
lock
lcall
add
loop
mov
loopne
lods
adc
int
stos
mov
add
add
aad
daa
lods
or
sbb
add
mulb
pcmpgtw
cmpsb
sub
in
jecxz
jne
repnz
aas
int
rcl
movaps
sbb
mov
popa
jne
adc
decb
jae
rcrl
jecxz
inc
fucompp
test
mov
adc
cmp
jl
cmc
sbb
sahf
xor
or
stc
sub
cmp
imull
jae
push
push
aam
pop
fwait
push
mov
mov
mov
enter
clc
movsl
test
scas
imull
into
je
pop
arpl
adc
in
dec
aaa
cmp
push
mov
dec
jnp
stos
scas
insw
lcall
jns
lcall
jne
push
lret
in
add
sub
add
dec
pop
test
clc
xlat
in
fstpl
iret
fcoms
xchg
stc
fldl
and
clc
repz
jmp
mov
push
mov
jo
mov
in
andb
arpl
in
cld
inc
js
popf
cmp
out
push
mov
hlt
push
mov
shlb
inc
or
fwait
xchg
stos
xchg
aad
ret
popa
notb
mov
cld
push
mov
jnp
ret
mov
enter
sbb
aaa
outsl
and
push
sbb
imul
push
es
xor
mov
adc
pop
and
pop
addr16
mov
or
add
hlt
mov
dec
xchg
xor
add
call
and
nop
jns
sbb
cmp
aas
or
jp
fstpl
fbld
xor
xor
mov
dec
jo
movsl
jp
cmp
pusha
cld
into
pop
add
sbb
popf
push
lret
mull
pop
pop
sub
inc
lret
jbe
mov
mov
inc
mov
mov
out
ficoms
pusha
lds
daa
pop
and
jle
or
outsl
out
xor
fxch
cld
repz
dec
enter
aas
dec
mov
outsb
outsl
push
orb
lds
aad
roll
dec
mov
lcall
int
xor
sub
push
xchg
mov
cmp
dec
push
or
in
jns
inc
and
cwtl
xor
jle
lods
mov
pushf
and
in
pusha
or
sbbl
dec
adc
movsb
cmp
popa
xor
rcll
lods
pop
xor
sahf
xor
lcall
in
mov
mov
push
fisttpl
scas
outsl
push
stos
pop
iret
daa
test
fldenv
push
jno
jb
jle
lods
mov
sbbl
mov
push
add
add
sbb
dec
cmp
push
cmp
ret
mov
je
mov
dec
das
mov
pop
shrl
int
push
jg
and
shll
push
sub
bound
add
jno
pop
inc
add
mov
roll
fwait
mov
jo
stc
test
or
icebp
mov
dec
ja
adc
lock
sahf
js,pn
xor
ss
mov
fsubl
aad
pop
fcoml
xlat
push
sbb
out
mov
outsb
scas
mov
mov
sub
insb
hlt
popf
jp
test
int
loopne
fcoml
jne
pop
movb
cmpl
outsb
test
mov
inc
xor
stos
push
push
push
sti
inc
mov
jle
cmpb
mov
mul
repz
sbb
outsl
fstl
movsl
sti
jp
shrl
mov
movsl
jmp
mov
mov
ja
push
sub
jbe
ja
adc
mov
mov
mov
xchg
pop
addr16
mov
fisubs
sbb
inc
and
and
out
pop
je
xchg
and
fs
dec
xorb
out
movsb
stos
repz
mov
jg
push
push
sahf
jp
cmp
xchg
negl
mov
cmp
pusha
pop
pop
dec
and
ss
push
icebp
pop
and
nop
inc
mov
mov
es
adc
ret
out
xchg
push
cmp
rorb
jmp
mov
mov
rcr
push
cs
cwtl
mov
nop
stc
or
aaa
pop
add
das
inc
inc
cltd
test
aaa
and
sub
adc
int
and
sbb
mov
ljmpw
ds
sarb
xchg
mov
jl
push
and
adc
sbb
loopne
cmpl
dec
xchg
cs
and
rorl
dec
scas
lods
notb
jp
xchg
loopne
andl
ss
sub
je
pusha
mov
shrl
fs
mov
xchg
movsb
pusha
sbb
sub
mov
ds
mov
out
mov
jbe
xlat
test
or
xchg
int3
arpl
in
add
or
loop
inc
dec
cmpsl
push
sbb
or
aas
enter
dec
inc
or
int
sub
push
lahf
mov
daa
mov
aas
sbb
fs
pop
push
dec
xor
sub
shlb
mov
les
ret
add
dec
sub
mov
sbb
fwait
ds
inc
sarl
sbb
popf
mov
or
xchg
loop
int3
adc
inc
sahf
test
mov
jp
xchg
dec
das
jnp
and
xchg
ficoms
popl
mov
fstl
insb
out
aaa
int
jecxz
repnz
loope
lods
xchg
pushf
sbb
mov
mov
pop
adc
inc
pop
insb
das
or
lret
cmpsl
mull
shl
out
push
ja
in
nop
mov
xchg
ficomps
dec
in
mov
imul
cli
insb
and
rorb
sbb
pop
and
push
dec
orps
and
mov
xor
repz
jecxz
add
test
sar
or
add
sti
jo
pop
mov
divb
fisttpl
mov
call
mov
cltd
push
or
add
jo
mov
les
sub
jae
imul
std
push
xchg
call
adc
xchg
mov
push
clc
xchg
lahf
ds
adc
scas
test
mov
mov
ljmp
bound
lds
xor
mov
cmpb
mov
leave
or
xchg
popa
xor
mov
fstpt
and
sbb
mov
cmp
mull
clc
ficomps
jmp
xchg
adcl
push
fildl
arpl
inc
pop
in
rclb
fstpl
ret
push
jno
inc
pusha
pop
data16
outsl
and
gs
out
es
adc
jmp
fcmove
enter
sbb
cld
dec
push
inc
into
jg
xor
cmpsb
fwait
lret
out
lods
cmpsl
dec
mov
xor
mov
decl
repnz
ret
in
out
clc
dec
mov
ds
mov
dec
std
fnsave
fcoms
and
xchg
mull
lea
add
sub
movsb
repz
js
fwait
setnp
lret
clc
int
scas
jge
push
and
mov
pop
sub
mov
xchg
adc
cltd
out
mov
add
jecxz
mov
jecxz
add
loop
xchg
add
sbb
lds
cmp
mov
mov
scas
xor
or
aad
arpl
and
rclb
fldl
xchg
imul
push
push
pop
mov
mov
push
xchg
push
inc
lret
arpl
and
int3
rcr
shll
add
sbb
sub
in
lods
push
jbe
imul
je
push
mov
hlt
jb
adc
ja
mov
lods
nop
loope
add
adc
mov
adc
aaa
call
inc
mov
inc
loop
dec
pop
xchg
mov
cmc
call
fisubrl
sbb
lea
or
popa
rolb
jbe
arpl
xor
aas
popf
lods
and
bound
aaa
inc
jp
or
dec
sbb
addr16
add
mov
rcrl
or
jae
mov
gs
cld
js
dec
or
fdivl
insl
xchg
mov
inc
mov
adc
xor
cmpsb
or
push
imul
cmpsb
push
inc
imul
xor
imul
negl
insl
add
shl
in
jae
jb
stos
fcomi
jbe
lret
insb
cmpl
mov
push
jns
pop
push
dec
mov
loop
fistl
push
or
cmpsl
jae
dec
fstpt
push
pop
push
pusha
xchg
stos
in
adc
popa
arpl
jmp
ss
fldcw
push
insl
je
cs
into
shll
jns
pusha
sub
mov
outsl
fistps
or
push
mov
call
imul
movsb
xlat
add
aaa
out
int3
loopne
dec
adc
daa
or
adc
mov
jl
mov
xor
fisttpl
mov
sbb
xchg
xor
bound
jae
aaa
dec
nop
jns
jbe
lods
pop
iret
in
push
pop
cld
pushf
fmull
mov
lock
and
fs
inc
xor
bound
divb
mov
div
inc
adc
scas
js
mov
leave
xor
cs
mov
test
xor
or
add
inc
int3
imul
popf
mov
lods
test
xor
add
mov
or
aaa
or
inc
mov
push
push
ds
mov
sbb
inc
jmp
sbb
push
or
dec
test
scas
lcall
cmp
cld
adc
push
mov
mov
jle
scas
pusha
fdivs
fimuls
mov
jno
and
jle
cmpsb
xor
dec
outsl
fldt
sysenter
xchg
pusha
les
insl
js
out
notb
sub
sbb
cmp
or
mov
xchg
adc
test
or
lcall
hlt
repnz
pop
push
mov
add
mov
and
out
push
or
ljmp
pop
mov
lods
jge
xchg
push
jp
or
mov
ret
jecxz
daa
add
call
add
repnz
es
andl
and
xchg
call
dec
sbb
sbb
data16
and
cli
dec
mov
pop
in
inc
xor
ss
mov
fwait
fs
ja
xor
fxch
notl
sub
push
add
mov
sbb
adc
dec
xor
adc
jo
mov
stos
imul
clc
jo
dec
insl
mov
xor
push
movsl
jae
jnp
int3
jmp
xor
int
test
arpl
into
inc
lock
or
notb
jg
or
mov
pop
test
mov
push
and
mov
or
out
mov
imul
shrb
mov
shlb
mov
pop
cmpsl
fmull
hlt
leave
loope
lods
push
sub
xor
aad
fistpll
pop
gs
cltd
in
pop
lea
add
push
and
addl
push
cwtl
sub
adc
js
mov
insl
sbb
aas
ret
jmp
js
inc
std
popf
xchg
mov
push
lods
std
push
sbb
cmp
cltd
or
decl
pusha
xchg
jl
ret
mov
sahf
pop
jb
add
jg
dec
sub
or
xchg
mov
pop
cmp
dec
aas
loope
mov
jmp
cmp
sub
call
loope
cwtl
sub
mov
xchg
mov
lea
nop
int3
mov
loopne
cmc
dec
cli
stos
lods
enter
pop
pop
mov
and
insl
pop
mov
pop
les
or
popa
dec
int
subl
xchg
ja
mov
popa
push
pop
cmp
xchg
jmp
cmc
std
test
lcall
push
ds
leave
cltd
dec
insb
dec
data16
mov
bound
rcrb
aas
dec
pusha
in
sbb
push
ret
bound
nop
xor
divb
sub
mov
cmp
sti
mulb
pop
cmp
loope
fildll
adc
enter
pop
mov
mov
push
mov
adc
xorb
outsb
sub
pop
adc
add
arpl
push
adc
mov
lods
fs
add
in
push
aas
es
fisttps
and
pop
jle
inc
dec
outsl
test
and
xor
xor
scas
in
rcl
push
lahf
or
lret
daa
dec
pop
and
movsl
xchg
outsb
xor
mov
mov
nop
mov
ja
jns
movsb
icebp
and
aaa
mov
nop
test
jl
or
scas
arpl
mov
mov
ret
aad
xchg
xor
or
stos
adc
sbb
ljmp
lds
add
inc
dec
push
in
rol
xor
cmp
cld
fs
jno
ret
jp
std
add
mov
and
add
mov
and
aaa
scas
pop
fiadds
cmpsl
lret
repnz
dec
push
xchg
outsb
imul
xchg
insl
fwait
mov
fistl
stos
pop
movsl
loop
dec
out
cmpsb
in
pop
mov
pusha
pop
inc
dec
ret
loopne
mov
ret
cmc
and
ss
cld
es
add
adc
outsl
xor
arpl
cwtl
cmc
ljmp
cli
push
lods
jge
inc
imul
gs
shlb
xchg
fimull
or
jne
adc
mov
int
std
jl
cmp
cmpsb
out
xabort
fwait
jg
out
pop
test
std
fistpl
data16
mov
adc
out
add
add
nop
outsl
cmp
jge
dec
fisttpl
and
mov
push
dec
inc
leave
xchg
cmp
dec
loopne
mov
mov
add
fmull
xor
pop
mov
enter
into
frstor
sbb
loopne
loopne
push
push
lret
dec
jb
mov
xchg
cmc
fwait
enter
dec
stos
movsl
jns
add
sub
arpl
xorb
sbb
pop
mov
aaa
xchg
dec
inc
mov
mov
test
rorb
pop
into
das
xor
xorl
dec
mov
data16
test
mov
lock
stos
jge
xchg
pop
je
lret
aad
cltd
test
lcall
xchg
jns
mov
nop
aaa
clc
test
xchg
or
inc
or
sti
pop
stc
fcmovnb
inc
mov
push
dec
dec
push
enter
and
loop
fdiv
insb
push
mov
pop
xchg
lret
dec
xlat
outsl
fmull
pop
xchg
loope
push
push
or
sarl
dec
or
orl
mov
jle
jmp
ljmp
mov
out
ds
xchg
add
es
out
inc
dec
xchg
sub
xchg
into
out
shl
loopne
push
aas
inc
movsl
fadds
arpl
dec
subb
repz
adc
adc
std
movsl
mov
mov
stos
sbb
add
dec
adc
mov
add
repnz
and
xor
xor
pop
popa
leave
xchg
push
testb
adc
add
in
orb
test
lock
out
pop
addl
lds
or
enter
xchg
pop
pop
jmp
pop
jmp
mov
xor
push
stos
inc
cwtl
andl
orb
je
ficoml
inc
sub
inc
or
sub
into
pop
and
insb
pop
inc
add
jbe
mov
test
mov
dec
dec
dec
xor
out
jno
mov
or
clc
sub
cld
mov
inc
add
idivb
int
popf
cwtl
dec
push
jnp
sbb
or
jg
jle
sub
pop
fists
inc
and
mov
lret
xchg
adc
stos
pop
sarl
xor
add
movsl
add
xlat
and
into
addb
or
les
or
cli
sbb
sbb
cs
cmc
stos
sub
dec
xor
out
jno
cmp
ja
hlt
stc
daa
sbb
sarb
iret
jno
sbb
xlat
test
fsubrs
addr16
xchg
adc
sub
pushf
xlat
sub
mov
aaa
add
out
fs
int
mov
xchg
jnp
movsl
addr16
sti
cmpsb
jp
dec
jge
pop
sti
dec
xor
cmpsl
xchg
sbb
addl
xchg
or
ss
ret
adc
shrb
jle
adc
xor
je
or
and
aaa
mov
jno
lea
sub
fdivs
cmc
aas
jmp
clc
movsl
cld
stc
dec
mov
pop
push
je
or
xchg
jmp
sbb
jmp
test
orl
mov
xor
mov
nop
or
aad
sahf
jg
inc
xchg
mov
lods
cli
lahf
mov
outsb
lods
cli
dec
fdivrs
cmp
ss
push
add
jl
xor
clc
ss
adc
lret
mov
fucomi
mov
pop
fisubrl
mov
jp
movaps
dec
mov
imul
int3
push
gs
insl
pop
and
in
pop
js
loop
clc
das
jg
lods
inc
ljmp
loop
mov
jne
add
sub
xor
int
in
call
mov
adc
sub
pop
out
mov
jge
into
inc
mov
scas
mov
cmpsb
push
test
insb
shll
mov
sub
mov
ss
out
stos
adc
lods
out
sub
lods
imul
icebp
pop
sub
inc
dec
test
and
cs
pop
mov
push
xor
loop
push
jecxz
xchg
cwtl
pop
or
test
rolb
mov
jmp
je
loop
test
cld
jp
inc
fimuls
xlat
sub
inc
scas
sbb
out
dec
stc
jb
test
mov
pop
mov
or
push
fsubs
pop
xchg
int
ds
lock
cmp
imul
dec
leave
dec
dec
adc
in
pop
outsl
fmuls
fsubrl
lret
push
mul
mov
incb
lret
jl
xchg
jne
pop
mov
jmp
push
or
dec
shrb
push
jae
fmuls
sbb
outsb
sub
sahf
das
inc
mov
and
xchg
adc
pop
sbb
pop
adcl
test
leave
shlb
mov
mov
cmp
xchg
jo
cs
inc
jecxz
sub
push
push
sar
cmp
out
cmpb
jae
xor
loop
push
fsubl
insl
repnz
stc
inc
mov
mov
mov
xchg
xor
mov
sarl
ror
cmp
mov
mov
hlt
jg
mov
mov
cmp
cmp
stc
fimuls
or
jp
mov
loopne
xlat
sbb
jo
adc
imull
divl
leave
cwtl
mov
fidivl
inc
in
jmp
lea
js
mov
icebp
push
loopne
jecxz
push
sub
sbb
pop
in
xchg
popa
sbb
xchg
cmp
mov
xor
push
je
mov
cs
push
xchg
test
scas
sti
cmc
fstpl
sub
sbb
repz
jae
pop
andb
loope
and
mov
std
rclb
aad
xor
inc
movl
push
in
dec
shlb
xchg
sub
inc
aam
push
sbb
add
dec
cmpsl
rclb
ret
pop
mov
mov
or
jmp
dec
inc
jecxz
bswap
mov
push
andl
cmpsb
dec
insl
sbb
int
sbb
cs
mov
in
iret
fsubrl
mov
dec
in
les
call
fbstp
outsl
push
xlat
in
aaa
or
ljmp
mov
jae
in
repz
cmp
repnz
in
cmp
jp
stc
sahf
imulb
mov
repnz
sub
lods
test
mov
shr
push
cmp
fsubr
jge
into
sbb
aad
pop
add
and
pop
jmp
mov
popf
push
xchg
dec
sbb
test
fldcw
dec
mov
xorb
mov
xor
dec
test
jge
xchg
ja
pop
xchg
psubsw
or
xchg
xor
jno
mov
outsl
out
mov
push
popw
jo
inc
rcrb
sbb
cmp
add
xor
fcmovne
xchg
lea
or
and
fimull
xor
mov
or
shlb
adc
pusha
cwtl
out
dec
pop
imul
jb
mov
divb
lods
adc
pop
movsl
ja
cmpsl
mov
add
sub
jb
dec
data16
std
xchg
lret
sub
mov
cmp
mov
daa
xchg
jbe
addl
rclb
call
fcmovb
fs
lds
and
std
pop
push
das
sbb
enter
xchg
pop
mov
mov
jno
aas
mov
cmpsb
dec
xchg
push
push
push
je
out
inc
adc
sbb
iret
mov
je
popf
mov
xchg
inc
movb
add
add
and
lock
addr16
mov
mov
jge
jns
test
add
daa
movsl
pop
mov
mov
xor
xchg
out
xchg
or
out
bound
arpl
push
fwait
add
clc
jmp
dec
js
in
xchg
mov
pop
xchg
jbe
fs
mov
cwtl
cmp
push
xchg
roll
dec
test
lret
and
mov
dec
mov
stc
mov
and
and
jmp
mov
sub
insl
cltd
mov
mov
int3
rol
push
and
imul
lea
sub
outsb
or
stc
in
ja
inc
into
jne
jbe
out
mov
pop
pushf
fistps
cwtl
es
inc
dec
mov
sarb
xor
test
push
out
jmp
sub
lods
sub
daa
add
mov
das
mov
push
lods
push
jmp
rcrb
cmp
rcrb
xor
adc
add
dec
cs
insl
sbb
mov
es
sub
rorb
inc
sub
mov
jbe
cli
out
fxtract
bound
out
loope
mov
jmp
adc
dec
lds
cli
icebp
jne
pop
push
rcll
xor
xlat
mov
mov
and
nop
sub
test
aam
ret
push
pushf
and
stc
lret
int
ja
test
pop
mov
xchg
cmp
or
lods
push
sub
push
jp
add
loope
bound
mov
ljmp
jno
xor
push
fistps
test
ljmp
mov
add
sbb
jns
dec
push
jbe
sahf
enter
fwait
mov
push
cmp
pushf
loope
mov
sti
dec
push
push
cmp
xchg
jmp
jns
int
adc
call
clc
popf
add
jmp
mov
mov
push
and
movsl
adc
or
popf
scas
and
dec
subl
adc
pop
and
enter
push
adc
pop
adc
in
jb
cld
push
lcall
sub
out
add
negb
and
fsubl
in
push
sahf
mov
cld
lds
mov
jle
loop
pusha
rorb
jle
loop
idivl
and
mov
xchg
mov
push
lret
xchg
cltd
pop
pusha
pop
xchg
xchg
decb
stos
clc
imul
outsb
sbb
in
pop
mov
xchg
sarl
rorl
xchg
xor
mov
mov
pop
fisubrs
pop
cltd
add
pop
int
push
jb
mov
add
sbb
insb
cmp
lock
int
adc
mov
mov
mov
stos
bound
xchg
jmp
xchg
jbe
sbb
fdivrp
in
test
or
inc
icebp
mov
ret
jo
add
pop
test
jmp
mov
mov
push
leave
and
xlat
mov
scas
mov
mov
neg
test
push
rcrl
jecxz
jge
push
lds
outsb
jne
test
or
loop
test
or
aaa
adc
pop
out
add
xor
pop
out
js
mov
dec
ljmp
loopne
mov
xlat
mov
bound
push
jno
dec
push
divl
or
lods
pop
push
stos
out
cs
loopne
mov
xchg
pushl
inc
fsubrs
xor
jp
int
bswap
pop
movsb
std
and
andl
cmpsb
mov
movsb
jo
xchg
gs
hlt
jmp
aad
loopne
stos
mov
loop
mov
je
add
push
push
sbb
jae
jb
lea
and
imul
and
add
addr16
dec
cwtl
adcl
mov
mov
in
mov
inc
jg
insb
ret
jge
mov
adc
gs
inc
push
cmp
inc
jle
outsb
xor
lahf
add
je
cmp
aaa
lock
into
repnz
push
push
insl
push
cmpsb
dec
rol
leave
arpl
popa
insl
xchg
or
ljmp
or
loop
es
mov
xor
xchg
jb
cmp
sub
sub
adc
pop
insl
das
call
les
cmp
pop
mov
and
jne
mov
xorb
pop
inc
fwait
scas
mov
mov
mov
int3
jne
xchg
or
shl
sbb
jae
mov
test
cld
mov
sub
pop
movsb
int3
jb
adc
sub
sub
mov
or
int3
js
mov
cwtl
test
adc
sti
sahf
xor
xchg
inc
paddw
scas
cs
repnz
mov
inc
jbe
jno
shl
mov
inc
movsb
cs
in
and
xchg
dec
leave
mov
ljmp
xor
mov
dec
dec
icebp
mov
enter
sub
arpl
cli
jl
or
mov
rol
mov
push
sbb
inc
or
adc
sbb
push
sub
mov
lsl
push
sbb
sub
xchg
inc
leave
insl
sbb
adc
xchg
push
mov
pusha
push
pop
adc
inc
pop
std
push
je
inc
sbb
call
ret
push
aad
mov
jbe
ds
ljmp
mov
mov
int
xor
mov
outsb
sbb
mov
lahf
cmpl
xchg
addr16
daa
mov
mov
js
adc
adc
repz
mov
jecxz
push
push
ss
aaa
fcoms
pushl
mov
xlat
push
inc
mov
jb
lods
shrb
jg
fdivrl
inc
jecxz
call
ret
mov
movsl
iret
scas
scas
loope
inc
lahf
hlt
lods
ds
push
push
push
les
xor
push
and
sbb
jl
adc
mov
xchg
sti
daa
mov
mov
test
and
pop
mov
sub
shll
mov
shrl
pop
mov
add
sub
test
dec
adc
cs
mov
sub
popa
jp
insl
mov
lds
lea
xchg
int3
jl
imul
cmp
int3
out
scas
mov
sti
scas
ljmp
xchg
adc
pushf
mov
pop
nop
adc
mov
je
mov
sbb
mov
loope
fs
and
push
jp
test
pop
dec
mov
dec
dec
ret
or
sub
sti
jecxz
push
and
popw
sub
mov
lea
stos
popf
add
movsb
add
and
lods
lret
out
in
les
add
roll
inc
sahf
and
dec
or
pop
sbb
fiadds
mov
pop
cmpb
add
mov
xlat
pushf
dec
test
shll
outsb
push
mov
add
mov
shlb
jne
mov
mov
scas
cli
ljmp
xchg
pop
adc
cmp
dec
cmpsl
mov
test
cs
ds
and
iret
push
push
push
insb
cmp
into
jb
sahf
mov
pop
gs
add
mov
or
cmpsl
mulb
mov
mov
nop
push
dec
inc
shll
inc
gs
int
pusha
loop
xchg
or
or
inc
and
and
push
push
or
outsl
sub
xor
lret
inc
xor
addb
push
repnz
rorb
fsts
adc
mov
test
add
pop
sbb
pop
fimuls
js
test
inc
call
ds
je
std
push
xchg
mov
sub
ljmp
cmpsb
push
inc
push
test
inc
bound
mov
adc
pop
popf
pop
or
popa
insb
mov
gs
js
outsl
push
pop
or
ja
pmuludq
int
sub
lret
adc
pop
int3
mov
jge
xor
mov
gs
xor
xchg
fists
dec
fcoms
mov
dec
outsl
add
cmpsb
sbb
sub
jae
repnz
jae
jle
pop
xchg
sub
insl
test
fisubrs
aad
dec
loope
cmp
leave
stos
cmp
xchg
popl
push
sti
stos
or
aad
inc
sub
xchg
call
add
arpl
imul
stos
out
imul
pop
add
lret
pop
popa
dec
xor
inc
lock
mov
push
notb
cmp
ret
mov
adc
inc
std
pop
push
xchg
popl
xor
or
inc
clc
jg
out
and
sbb
jge
or
or
je
jmp
sahf
mov
mov
jmp
gs
cmp
inc
pop
jmp
out
and
lock
mov
dec
es
test
insb
mov
rclb
out
xchg
orb
fs
xchg
push
xchg
jle
inc
imul
jecxz
push
dec
push
dec
sbb
cmp
dec
sbb
pushaw
insl
adc
repnz
scas
add
adc
xorl
add
pop
mov
and
xor
sub
add
lock
subb
add
loopne
or
lock
add
scas
jle
mov
mov
adc
push
jl,pn
nop
in
and
xor
mov
dec
in
or
dec
xchg
mov
call
sbb
out
aam
subb
mov
add
in
cs
pop
lahf
push
cmp
mov
fs
outsb
lods
aaa
testb
dec
call
pop
push
mov
jl
inc
xor
jecxz
mov
or
jo
out
and
idivb
push
dec
pushf
sub
jno
fmuls
push
pop
adc
jb
movsl
adc
int
mov
outsl
add
daa
aaa
pop
adc
mov
xor
sbb
movsl
ficomps
cmp
mov
fistpll
lods
addb
mov
jo
xor
mov
test
out
aam
lock
sti
dec
jnp
mov
jge
addr16
xchg
adc
inc
and
push
mov
lods
or
pushf
mov
cmp
data16
xor
sahf
push
pop
dec
add
test
cmp
mov
outsl
xchg
cmpsb
scas
xchg
fmul
xlat
mov
or
fdivrs
mov
lds
int3
imul
sbb
jns
in
stos
cmc
xchg
cwtl
cmp
mov
adc
sbb
sti
test
inc
xlat
or
cwtl
xchg
fs
sbb
cmp
push
inc
add
and
notl
pop
cmpsl
xlat
mov
sahf
mov
xchg
sbb
push
dec
call
xchg
call
add
js
xor
hlt
icebp
ret
jbe
pop
jl
sub
aad
jae
iret
jo
cwtl
dec
inc
mov
pop
adc
sbb
movsb
sub
jle
adc
dec
inc
cmp
ljmp
cwtl
sahf
scas
push
pop
mov
pop
pop
orl
insl
add
jg
push
mov
aad
dec
out
and
mov
movsl
mov
stos
movsb
pop
out
mov
inc
fs
addr16
inc
shr
ret
mov
sbb
add
data16
mov
sub
push
std
sarb
push
xor
imul
out
out
repz
dec
push
jbe
bound
daa
adc
dec
das
sub
dec
mov
mov
push
bound
dec
add
lret
cs
jl
fmull
std
insb
stos
fidivrs
sbb
cld
xchg
mov
dec
pop
cld
stos
call
in
mov
mov
out
inc
addl
hlt
int3
jno
jns
push
pop
push
cmp
pop
inc
push
inc
mov
sub
mov
pop
insb
sub
lret
jae
jae
xor
cmp
inc
popa
int3
leave
inc
and
push
push
mov
fwait
sub
repnz
ds
adc
push
outsb
dec
ja
in
int3
jne
rclb
lock
add
nop
pop
adc
cmpsb
imul
addr16
gs
jp
and
icebp
daa
pop
cmpsb
es
loope
mov
or
mov
xchg
test
xor
cld
pop
lret
fdivl
pop
pop
ror
push
lea
mov
scas
push
mov
dec
mov
mov
fiaddl
test
insl
ss
cmp
call
rcl
ljmp
fwait
dec
fists
out
stos
sub
cmp
ret
cmp
lock
add
mov
dec
aaa
mov
cmp
mov
xor
adc
inc
lcall
ja
or
jae
mov
lock
frstor
scas
ds
clc
cmp
cmp
fs
jecxz
mov
sbb
dec
stos
insb
lcall
mov
sub
xchg
push
cmpsb
loope
or
jmp
adc
fwait
dec
dec
push
popf
mov
data16
sub
inc
mov
jns
mov
in
and
fnstsw
or
cld
std
xor
sub
notl
pop
pop
mov
nop
sbb
mov
add
cs
je
add
ret
jo
jo
sti
in
cmp
fidivs
pop
pop
sbb
fistps
pop
lret
test
adc
shll
les
adcb
std
pop
lea
sbb
and
push
insb
jno
pop
dec
int
mov
les
xchg
ja
mov
sti
in
shrl
dec
outsb
xor
jbe
cmp
add
ss
inc
das
je
lds
add
roll
mov
dec
mov
dec
fcomps
or
mov
nop
je
jae
mov
out
and
pop
fcompl
fidivrs
add
mov
dec
inc
mov
jge
inc
orl
test
psubsw
add
sbb
out
movsl
cli
jbe
jb
leave
mov
xor
dec
fiadds
arpl
inc
lods
pop
shlb
jae
cwtl
outsl
mov
arpl
gs
icebp
xor
imul
push
sbb
mov
idiv
test
xchg
inc
in
xchg
gs
pop
mov
push
add
xchg
pop
or
hlt
in
mulb
push
sub
xor
jns
jo
mov
pop
loope
xor
jb
pop
inc
mov
lea
cmc
es
dec
cmp
mov
lock
and
mov
sub
jg
sub
aam
mov
jle
cmc
or
pop
imul
mov
sarb
sahf
jg
incl
lds
fwait
ds
hlt
lret
fists
mov
int3
ds
dec
mov
iret
scas
mov
test
out
call
and
mov
js
test
into
jge
jmp
in
jp
icebp
ss
iret
mov
fstp
pop
popf
incl
inc
or
in
repnz
lods
xchg
mov
ja
rcll
fcoms
jl
jo
xchg
jmp
insl
ficoml
push
mov
pushf
ss
pop
addr16
or
addr16
add
sahf
movsb
rorb
out
mov
push
fnsave
and
jb
and
or
mov
xchg
mov
in
or
pop
mov
inc
inc
and
cmp
addr16
adc
lods
or
nop
movsb
lea
mov
in
ljmp
outsb
icebp
js
test
add
sub
push
xchg
lds
pop
stc
mov
pop
jmp
sti
and
in
fwait
sbb
fcoms
addr16
call
pop
mov
sub
push
pop
mov
leave
adc
ja
jmp
popf
pushf
out
mov
mov
and
mov
dec
test
ficompl
cmp
stos
cmp
jmp
mov
scas
sbb
mov
cmp
jle
mov
push
push
lods
rcll
std
mov
mov
pop
xor
scas
dec
push
xorb
xchg
push
xchg
sbb
mov
sub
fadds
aas
out
or
sbb
dec
enter
js
and
cmc
je
sbb
sub
fimuls
pop
nop
xor
loope
pop
xor
xchg
pop
sub
jbe
out
mov
ljmp
dec
xchg
data16
insb
adc
add
add
cmp
loop
sub
das
out
jae
fdivrs
stc
push
jne
mov
fcmovnu
adc
ds
mov
out
leave
xchg
cmpsl
xchg
sbb
pop
in
enter
push
pop
imul
fisttpl
dec
call
ljmp
cmp
pushf
and
test
arpl
mov
push
loop
fwait
cmp
fldt
add
movsl
mov
sbb
sbb
pop
jle
inc
js
ret
dec
mov
lahf
pop
adcl
push
pop
pop
cld
movsb
or
dec
mov
xorb
dec
cltd
jp
mov
or
repnz
mov
inc
test
xchg
mov
mov
xchg
pop
cmpsl
add
jae
pop
pop
data16
fnsaves
hlt
xchg
mov
jge
cmp
decb
stos
cmp
sub
adc
rcr
dec
bound
xchg
mov
arpl
mov
cmpsl
cmp
mov
add
fwait
pushf
push
pop
sub
add
movsb
mov
xor
xchg
xchg
lret
movsl
out
cmp
clc
idivb
mov
xlat
push
shll
pop
push
cmp
sti
das
pop
mov
std
fs
or
sbb
mov
push
insl
test
mov
out
ret
inc
fcompl
cli
lods
push
stc
cmp
out
add
cmp
insb
lods
pop
and
or
pop
insb
fsubrs
outsl
and
xchg
mov
jo
add
pop
fldt
or
mov
in
add
pop
jecxz
cld
add
mov
pop
mov
and
dec
sbb
ret
subl
dec
jns
dec
jbe
and
jg
push
mov
mov
xchg
jno
loopne
dec
adc
addr16
ret
lcall
mov
loop
inc
push
or
xlat
cwtl
cwtl
lcall
sub
lock
jno
ljmp
out
adc
or
mov
rcrl
pop
cmp
cli
push
ds
adc
cmc
xor
adc
cmp
daa
imul
sbb
mov
lock
in
jne
cli
scas
jae
imul
mov
mov
sub
or
pop
push
xchg
push
and
xchg
push
aaa
jmp
mov
imul
sahf
mov
xchg
jge
jg
push
lret
adc
lret
push
push
pop
in
inc
pop
push
sbb
nop
adc
push
lds
pop
mov
leave
push
mov
dec
mov
aam
mov
mov
adcl
in
sub
nop
sbb
jge
mov
shl
and
inc
inc
enter
lahf
nop
mov
jge
cmpsl
push
xor
jl
cmpsl
cs
mov
pop
leave
cmp
adcb
or
and
out
sbb
xchg
std
push
xchg
sub
dec
arpl
movsb
mov
dec
push
dec
cltd
or
sahf
mov
inc
sub
pop
fistps
cwtl
lods
aaa
in
dec
or
pop
push
call
aas
insl
imul
pop
bound
lret
dec
jae
es
aas
sbb
mov
mov
mov
sub
mov
or
fbld
sahf
add
add
sub
sub
stos
xchg
push
std
jb
mov
ljmp
imul
xchg
and
xchg
xlat
xchg
xchg
adc
mov
mov
sbb
aaa
jecxz
movsl
lods
in
stos
dec
or
cmp
push
gs
cmpsb
shrl
push
inc
ret
pop
je
dec
popf
mov
lods
xor
les
lcall
jmp
test
sti
mulb
xchg
xchg
out
xor
cld
adc
push
jns
aaa
das
mov
les
cmp
outsb
cmc
loope
imul
leave
call
ljmp
faddp
cmp
mov
or
cmp
mov
ret
dec
daa
ljmp
mov
cmpsl
pop
cs
push
add
sbb
mov
cmpsb
div
test
and
xchg
add
adc
jnp
mov
jo
mov
in
mov
xchg
add
pop
push
movsb
sti
push
and
out
test
adc
mov
pop
push
hlt
push
cwtl
rorl
scas
mov
mov
cli
jge
jb
in
jle
cmc
call
xchg
int3
jnp
ds
hlt
sbb
pop
cli
jl
jb
pop
fsubs
jp
icebp
mov
sahf
mov
jg
aaa
sub
les
fisubrs
add
jecxz
mov
stc
mov
ret
nop
lds
adc
add
xchg
cmp
cmc
aas
xor
sbb
mov
out
neg
movsb
rcrl
push
std
shll
dec
pop
dec
sahf
inc
loopne
adc
fidivs
add
ljmp
jns
flds
lahf
andl
filds
dec
imul
xchg
outsl
out
outsb
daa
pusha
hlt
lcall
xchg
lds
jmp
push
mov
sub
lds
repnz
aas
shrb
hlt
shlb
fmull
pop
repnz
cmp
cmp
sub
cmp
enter
or
lret
xchg
dec
inc
adc
mov
add
dec
and
push
inc
pushf
and
lret
xchg
and
mov
xchg
and
push
popa
int3
adc
movsb
iret
xor
mov
dec
jns
ret
push
outsb
jle
bound
stos
aam
lret
jle
xchg
bound
mov
or
or
cmp
pop
das
adc
cmp
test
adc
rcll
xor
jmp
pusha
sahf
fsubl
jo
cld
in
or
push
adc
pop
arpl
fmuls
data16
and
sbb
adc
cmp
aas
outsb
popa
lcall
mov
jmp
sahf
mov
xorl
and
int3
fnstsw
stos
lock
clc
mov
out
or
insb
jle
mov
cmpsb
fwait
jecxz
sbbl
push
pop
std
mov
and
out
inc
mov
mov
mov
pop
or
add
in
jne
push
aad
jnp
or
jnp
aas
pop
push
mov
cli
subb
mov
jp
rcr
xchg
pusha
hlt
xor
pop
lret
mov
fidivl
pop
fst
les
daa
xchg
icebp
sbb
xlat
out
xor
les
leave
xchg
xchg
movsl
dec
mov
jl
lahf
mov
xchg
pop
add
fldl
add
and
jmp
jle
add
mov
mov
push
loope
sbb
in
push
jns
adcl
gs
dec
dec
call
rolb
adc
inc
adc
ss
rcll
xchg
dec
aad
mov
cltd
add
stos
fiaddl
mov
addr16
lock
dec
inc
clc
adc
notl
sbb
mov
dec
lahf
pop
cmp
xchg
in
mov
push
mov
pushf
es
and
inc
xor
xor
or
in
adc
mov
out
test
sub
push
mov
aaa
int
lret
das
in
aas
insl
bound
cmpsb
xchg
xchg
test
ret
add
pop
inc
imul
dec
out
mov
and
sbb
sbb
xchg
nop
or
adc
leave
lret
aad
ret
imul
jbe
push
push
stc
jecxz
xchg
inc
add
test
dec
test
cwtl
inc
cltd
fs
dec
in
sarb
lret
push
dec
insb
add
rcrl
paddd
jb
pushf
shll
loope
cmp
dec
pop
inc
dec
ja
bound
jl
dec
shrb
sub
inc
cmpl
xor
mov
std
ss
insl
adc
pop
movsl
jp
or
loopne
es
xor
mov
mov
add
adc
insl
pop
adc
out
pop
rorl
leave
lods
pop
fadds
enter
repz
inc
daa
in
add
bound
test
mov
test
sub
int3
cmp
xor
mov
xchg
push
lahf
cmpb
pushf
ja
xchg
outsb
pop
aam
mov
pop
pop
xor
cmpsl
scas
hlt
jo
popf
sbb
sbb
cmpsb
mov
sub
test
out
push
flds
in
dec
xlat
mov
mov
mov
sbb
mov
sbb
adc
or
mov
push
sub
in
mov
cmp
and
shl
sahf
ret
mov
imul
mov
out
cli
push
sub
aas
or
jns
jne
xor
push
pop
cmp
aas
imul
or
in
cld
test
push
aas
add
repnz
jbe
rclb
fwait
int3
mov
mov
pushf
lock
in
jge
dec
adc
sbb
es
inc
cs
xchg
mov
and
fadd
jl
setns
std
mov
mov
mov
imul
jnp
sub
push
sahf
mov
enter
aaa
insb
add
xor
sub
pop
mov
inc
xor
cmc
mov
add
mov
mov
push
into
mov
and
ret
jno
cmpsl
cwtl
fwait
push
sub
pop
push
lahf
dec
pop
lret
into
inc
or
cld
xor
inc
pop
pop
add
das
in
mov
leave
and
shrb
jge
add
mov
dec
in
add
sbb
inc
pop
xchg
scas
lret
cmp
pushf
adc
cmp
rcrl
mov
mov
fwait
pop
jp
lods
or
bound
cmpb
xchg
cmpsl
lods
cli
lods
lcall
bound
adcb
lea
push
daa
sub
add
push
fsts
sbb
popf
popf
pop
jmp
mov
notb
pop
out
fcompl
bound
jge
divl
cld
in
mov
jg
ds
rclb
pop
syscall
push
mov
ret
add
mov
imul
dec
int3
cmpsb
ds
jo
test
les
cmp
ss
mov
stos
xlat
int
les
and
xorl
shrl
push
js
jb
aad
mov
je
das
lods
jno
push
repnz
mov
js
dec
and
inc
mov
add
js
pop
mov
adc
test
cli
dec
fnsave
iret
xor
adc
std
pop
test
decl
rorb
idiv
cmp
out
es
push
test
inc
cmp
mov
jb
addr16
pause
or
sbb
push
and
pusha
mov
jbe
imul
in
arpl
sarb
in
fistl
sbb
jg
sbb
in
ret
push
clc
inc
std
inc
call
mov
sub
pop
aam
cli
add
insl
hlt
insl
sbb
test
in
fdivl
lock
push
jbe
cmp
inc
or
out
mov
push
mov
and
pop
cltd
sbb
sti
cltd
cmc
add
xor
test
in
adc
mov
mov
arpl
cmp
ds
and
xchg
mov
mov
inc
push
sub
leave
cld
xchg
repz
ja
inc
dec
jo
xchg
aad
sbb
adc
adc
or
sarl
dec
pop
test
push
out
jo
dec
scas
or
bound
scas
push
ficomps
rorb
ja
fistps
clc
dec
loope
adc
jmp
pop
jecxz
mov
es
repnz
lds
data16
fildll
xchg
pop
jnp
popa
rsm
icebp
gs
mov
sub
shrl
shrb
pop
jge
cmp
out
outsl
inc
movsb
and
les
xchg
mov
lcall
cmp
into
hlt
imul
push
lock
push
out
or
rcl
mov
cmp
sarb
cmp
lea
push
push
push
jnp
inc
std
cmp
ret
jo
push
pop
addr16
inc
ss
hlt
mov
fistl
lcall
adc
pop
push
sarl
addb
test
lcall
xlat
inc
adc
adc
push
frstor
sbb
fwait
sbb
pushf
push
cld
add
adc
dec
xchg
and
into
enter
repnz
push
jne
dec
fstpl
mov
jecxz
scas
mov
rorl
pop
mov
jns
stc
ficoms
xor
jg
sti
shlb
xchg
movl
movsl
pop
mov
xchg
lds
lods
call
or
cld
sbb
inc
cmp
negb
faddl
dec
or
cmp
push
and
cmp
pop
movl
adc
mov
push
icebp
pushl
sub
push
ficomps
repz
xchg
add
jns
fimull
clc
push
mov
icebp
pop
and
sub
dec
inc
lcall
std
movsb
leave
sbb
or
sbb
repz
xchg
std
pop
fcompl
pop
mov
pop
ljmp
lds
loopne
shrb
pop
mov
out
ret
push
out
dec
mov
mov
pop
ja
xchg
jo
insb
in
fidivrl
sbb
mov
insl
xor
jne
add
pop
cmpsl
subl
dec
out
addl
sbb
jmp
aaa
inc
add
fbld
filds
pop
add
dec
or
outsl
xchg
mov
inc
jnp
mov
les
insl
cmp
cmp
stc
inc
lock
outsl
lods
adc
ljmp
scas
inc
sub
mov
mov
lods
aaa
fcompl
popf
xor
movl
cmpsb
and
rcrl
jb
lcall
lds
pop
or
out
nop
add
ret
xchg
sbbb
push
jg
lods
hlt
mov
ret
push
outsb
movsl
dec
ret
pusha
mov
stos
xlat
and
int
and
dec
data16
jb
adc
sbb
clc
sbb
xchg
lods
jmp
aaa
xor
fnsave
mov
lods
mov
mov
hlt
xor
ds
cmc
sbb
enter
leave
in
repnz
lahf
adc
loope
call
aad
addl
xorl
add
pop
pop
mov
sbb
push
outsl
imul
mov
sbb
ljmp
lds
cmp
bound
mov
mov
add
icebp
pop
lea
jns
frstor
mov
rcl
and
in
mov
jb
cmpsl
push
add
lods
xchg
fs
add
cmp
add
lahf
sahf
xchg
das
inc
roll
mov
out
add
enter
and
lret
fildl
adc
sub
push
pop
adc
lock
cmp
fmull
push
inc
data16
lret
pop
xlat
aad
std
mov
or
movsb
shrl
shll
cmp
jns
jo
pop
das
lret
sub
mov
mov
loopne
lcall
mov
mov
and
lret
arpl
ja
xchg
je
and
pop
xor
sbb
cltd
mov
das
rcll
jg
cmp
pop
outsb
outsl
xchg
jno
mov
arpl
inc
jp
hlt
pop
sub
ljmp
jl
pop
sbb
dec
mov
test
adc
imul
inc
push
push
xor
dec
lods
xchg
or
js
movsl
flds
mov
pop
dec
fildll
or
mov
mov
add
push
loop
ds
mov
sarl
xor
hlt
ja
cmp
sbb
lea
adc
push
jl
fldenv
jnp
stos
imul
mov
and
adc
add
ret
fcompl
and
mov
loop
bound
inc
cmc
pop
call
or
xchg
inc
cmpb
lods
cmpsb
lods
fucomip
push
pop
sub
and
xor
call
xorl
faddl
sub
loop
insb
inc
data16
nop
add
jns
repz
div
nop
std
adc
jl
jb
es
in
out
cld
fwait
aaa
sub
xchg
push
or
or
inc
xchg
test
rorb
fists
or
pop
test
pop
cmp
jne
dec
mov
icebp
insl
mov
sbb
inc
cli
jle
pop
xor
and
cs
xchg
sbb
stos
jnp
pusha
clc
insb
jae
jecxz
jo
lahf
pcmpeqb
cmpb
jmp
mov
inc
sbb
jb
pushf
in
sbb
lds
xor
adcl
mov
icebp
and
mov
jns
popf
jp
jne
mov
test
subb
pop
sbb
nop
push
out
mov
ret
mov
scas
adc
add
daa
leave
inc
or
call
cmp
xor
int3
pop
outsb
sbb
dec
mov
cmpsl
test
iret
dec
fs
cmpsl
inc
jae
jne
adcb
push
test
and
insl
aam
out
or
lods
mov
imul
xorl
sbb
iret
push
or
inc
inc
movsb
sbb
pop
sbb
test
jne
mov
xor
les
adc
out
pop
ffreep
ret
or
pop
inc
or
inc
mov
push
orb
sti
jp
sub
lahf
pop
pop
cmp
sbb
and
stos
imul
adc
mov
in
ss
mov
add
shlb
fcomi
gs
in
cmpb
lret
adc
cmp
push
shlb
aas
adc
inc
adc
inc
out
lock
and
xchg
dec
sub
mov
or
add
add
loope
sbb
test
push
jge
mov
push
add
and
push
lods
push
test
lcall
fcomi
cmc
push
fisttps
ret
mov
shll
adc
int3
cmp
addb
outsb
jns
mov
and
test
repz
jo
stos
out
fnstenv
sti
jo
in
daa
popa
xchg
push
scas
stos
jnp
outsb
cmp
mov
cvtdq2ps
push
xchg
fdivp
popa
fwait
mov
into
dec
push
lds
and
cmp
aad
pop
sub
sahf
and
add
push
enter
or
lret
fisubrs
xchg
sub
jbe
lods
add
mov
mov
sbb
xorl
lock
xchg
popa
lea
xor
lea
and
push
sahf
pushf
cmp
and
jle
loop
pop
jmp
add
fcoms
and
add
mov
mov
lods
idivl
jmp
push
pop
mov
xchg
jmp
shll
xlat
movsl
scas
dec
leave
outsl
push
or
pop
push
inc
xchg
sbb
int
imul
cs
inc
xchg
dec
out
jmp
nop
bound
int
jbe
scas
and
stos
sbb
mov
test
adc
frstor
pop
in
les
bts
lahf
sbb
jb
mov
js
loop
insl
lock
mov
xor
push
jno
fwait
pop
adc
test
xor
add
sub
into
sub
outsb
ret
sub
lahf
pop
fs
inc
mov
add
in
movsb
mov
fstl
scas
int
jle
scas
test
inc
adc
pop
mov
dec
mov
add
out
stos
mov
mov
or
push
mov
jl
in
mov
xor
stos
stos
push
leave
sub
ror
cmp
sub
int
rcrl
xor
or
jl
fistpll
testb
daa
cmp
sbb
scas
jnp
mov
incl
je
in
notb
or
int
jmp
mov
outsl
add
jg
fldt
xlat
rcll
je
dec
cmp
jb
insb
gs
stos
push
sbb
ret
movsb
xchg
mov
bnd
lods
daa
add
icebp
add
rclb
js
movsl
sbb
fsts
pusha
cmp
insb
fwait
xor
arpl
jmp
or
push
idivl
cvtps2pd
leave
or
xchg
sbb
mov
push
or
pop
cmpb
in
popa
inc
ja
or
dec
sub
pop
jo
dec
scas
lret
mov
push
dec
jge
stc
jae
insb
push
sbb
cli
dec
add
dec
push
addl
xor
push
clc
mov
popa
repz
add
dec
sbb
sbb
lods
daa
cmp
fs
sub
mov
dec
int
fldl
insl
and
rclb
mov
repz
xchg
push
mov
insb
add
lock
ljmp
add
in
sbb
ss
and
fcomi
sbb
stos
les
jge
arpl
push
sbb
into
mov
clc
push
inc
pop
xchg
sub
jmp
js
es
mov
cltd
or
addr16
adc
ja
mov
je
stos
es
jbe
ja
cmp
mov
in
and
lret
ds
pop
adc
adc
xor
mov
adc
stos
jl
sub
shrl
fidivrl
pushf
adc
movsb
dec
imul
arpl
in
xor
lret
loope
movsb
in
inc
movsb
cmp
xor
cmp
cmp
mov
jp
rclb
adc
sarb
xchg
andl
xor
pop
and
dec
sub
std
addb
push
popa
leave
sbb
mov
loopne
mov
or
sub
jno
imul
push
cltd
mov
addb
cmpsl
insb
inc
sub
shrl
rcll
mov
adc
push
dec
add
popf
fstps
sbb
fstpl
cltd
and
bound
lret
jecxz
ljmp
jnp
sbb
hlt
cmc
or
xchg
movsl
adc
xchg
add
xchg
pop
pop
sbb
sbb
lahf
cmpsl
inc
sub
fnsave
mov
cmc
nop
adc
or
ficoms
shrb
dec
fists
push
add
movsl
int3
popa
fdivl
int3
jns
clc
lret
jne
hlt
pop
jo
aam
int
sbb
sbb
push
lods
push
ret
mov
stc
push
mov
jbe
rcrl
and
push
push
dec
xchg
mov
stc
imul
movsl
push
call
lcall
mov
pop
scas
jle
mov
hlt
in
fcomps
inc
mov
xor
negb
test
loop
mov
push
jl
xchg
xor
sbb
andb
mov
das
cs
add
inc
inc
xor
imul
shll
pop
and
push
push
loop
pop
ret
pop
aam
adc
in
mov
popa
ja
test
pop
arpl
or
push
mov
fstps
adc
mov
out
push
or
aas
pop
lret
push
lea
sub
xor
std
push
aas
pop
outsb
add
ficomps
push
movsb
cmp
stos
adc
data16
or
lret
pop
and
ds
push
adc
mov
dec
and
xor
aaa
out
bound
mov
hlt
mov
ds
jl
jmp
jae
xor
jge
sub
aad
sub
jo
add
outsl
mov
icebp
push
adc
xchg
inc
loope
mov
popa
out
or
shlb
mov
jnp
jnp
int
mov
cmp
cld
push
xadd
pushf
cli
fbld
mov
jo
push
mov
mov
mov
and
add
mov
pop
leave
mov
int
and
sub
iret
loop,pn
test
ds
push
or
xchg
sub
mov
dec
lds
mov
shrl
or
scas
dec
pushf
ja
ss
lea
jnp
pop
jae
pop
filds
sub
mov
xchg
xlat
daa
leave
pop
jns
sub
faddl
dec
std
ror
lret
inc
sbb
and
dec
pop
xchg
sub
xchg
add
cmp
insl
adc
pushf
outsb
mov
pushf
cmp
stc
pop
fimull
test
cmpsl
mov
xchg
bound
xchg
ffree
clc
lret
fidivs
jno
repz
bound
in
arpl
mov
mov
shlb
es
xchg
aas
popl
repnz
push
into
xchg
fisttpll
xchg
gs
icebp
xchg
push
sbbl
push
push
es
push
jae
pop
out
mov
jb
ljmp
sbbb
xchg
mov
mov
mov
fnstcw
js
xor
jne
cmp
adc
addr16
adc
in
mov
out
add
repz
repz
test
int
jo
jl
je
inc
jae
pop
aam
lret
push
inc
imul
lret
jl
rcr
loop
hlt
xchg
cltd
sbb
mov
sub
repz
stc
outsl
xor
imul
sbb
call
sbb
push
inc
adc
jmp
jb
inc
popa
mov
sti
or
xor
out
ja
jnp
data16
xorb
lods
mov
dec
aas
push
ret
pusha
ret
repz
xor
xor
adc
bound
cltd
nop
sbb
cmp
mov
sub
adc
sub
inc
out
repnz
jbe
fiadds
ret
mov
std
cmp
cmp
lret
insb
lret
lock
push
pop
sub
popf
xchg
jge
lret
pop
popa
jge
pop
shrb
sub
sub
and
inc
inc
lods
sbb
enter
movsl
inc
mov
push
mov
fidivrl
add
das
test
fidivrl
push
or
and
pop
sub
jnp
insb
mov
xchg
ret
inc
inc
add
ss
sahf
mov
mov
inc
push
cmpsb
imul
pop
aam
pop
frstor
lret
inc
rcrb
movsb
pop
into
xlat
cld
std
loope
or
fs
int3
fisubrs
notb
popa
pop
jbe
jge
in
mov
cli
cld
jae
scas
cmc
mov
ljmp
jl
in
push
or
rorb
push
js
xchg
and
jb
mov
push
xchg
mov
clc
mov
ficoms
dec
fadd
jo
mov
imulb
std
push
jnp
shl
popf
inc
shll
push
cmpsb
inc
jbe
ret
cli
sahf
adc
pop
add
pop
mov
sahf
sub
cli
arpl
inc
out
jp
xchg
xor
and
arpl
es
cmp
int
xor
sahf
repnz
push
pop
and
rolb
mov
test
sbbb
movsb
lret
scas
int
imul
add
ja
insl
jg
stos
scas
push
repnz
ret
jecxz
rolb
dec
subl
aam
add
lret
fildll
sti
cld
xchg
das
or
xchg
cmp
addr16
pop
sbb
xchg
mov
popa
or
lret
mov
call
mov
mov
inc
mov
andl
adc
push
pop
push
movsl
bound
repnz
test
sbb
stc
inc
repz
mov
cmpsl
insl
outsb
pop
mov
xchg
or
in
mov
mov
mov
mov
cltd
fsubs
mov
jne
cmp
xchg
ret
das
mov
pop
xchg
mov
cwtl
imul
pop
xchg
cmp
ljmp
daa
and
cmpsb
jno
sub
xchg
pop
inc
cmc
pop
push
pop
in
xor
iret
cmc
inc
les
xor
mov
into
mov
popa
ds
stc
ljmp
inc
fdivl
fs
inc
leave
ds
outsb
inc
xchg
scas
fimull
xor
sub
mov
aam
ret
loope
adc
jl
mov
orl
dec
mov
mov
cmp
aas
jo
arpl
and
or
ljmp
sti
push
std
mov
sub
dec
xor
pop
clc
inc
int3
xor
test
test
xor
or
out
inc
adc
mov
mov
and
mov
andl
outsl
roll
push
sbb
xchg
lahf
jo
xor
mulb
sti
jno
jbe
in
jnp
and
movsl
mov
inc
in
xchg
mov
sahf
cmp
ds
or
xor
cwtl
dec
arpl
imul
decl
cli
sbb
dec
adc
xchg
mov
pushl
daa
ret
jno
lods
arpl
out
mov
rclb
adc
mov
js
push
jns
mov
and
add
movl
aad
cli
jb
mov
repz
adc
xor
and
mov
or
fwait
test
adc
add
or
aad
lock
sub
outsl
xor
scas
push
int
mov
pop
popl
jo
push
cmp
fs
inc
sti
flds
adc
mov
pop
sbb
in
cmp
hlt
mov
xchg
std
lods
xchg
inc
in
mov
outsl
fsubr
jp
push
jbe
jmp
jg
adc
mov
std
and
ret
inc
mov
rcl
jle
and
imul
lea
add
mov
cmc
push
int
hlt
xchg
call
sub
mov
jnp
dec
xchg
insb
jb
mov
jnp
ljmp
iret
push
into
imul
scas
lahf
movsb
arpl
sbb
mov
roll
jbe
add
jecxz
pop
jge
xchg
sub
bswap
lret
in
xchg
fmuls
add
add
and
lret
imul
cmp
dec
imul
mov
xchg
adc
incl
pop
add
xchg
adc
or
int3
outsl
cmp
frstor
and
push
add
in
sahf
pop
out
hlt
bound
insb
ja
jns
cld
daa
xchg
pop
aad
mov
das
sub
jbe
fidivl
push
or
pop
mov
add
push
es
mov
call
cmc
cmp
mov
mov
rcrb
xchg
mov
shlb
pusha
mov
mov
call
sti
mov
jg
and
adc
inc
xchg
mov
loop
pop
int
pop
int3
pushf
xlat
xchg
aad
mov
and
adc
mov
fisubs
and
jecxz
cmc
xchg
dec
bound
rol
repnz
mov
pop
push
push
push
data16
xorl
lock
das
jmp
cltd
xor
repnz
pusha
adc
sub
xor
jne
out
mov
scas
sbb
pop
push
fwait
push
loope
fists
mov
in
or
push
aam
aas
cltd
push
imul
scas
jns
hlt
inc
outsl
mov
xlat
jl
je
data16
mov
pop
mov
add
sub
enter
lock
icebp
pop
fdivrl
bound
xor
or
adc
xor
sub
push
mov
jmp
fmuls
ret
lea
xor
inc
popf
punpckhwd
fstl
pop
or
test
inc
cmp
jnp
in
ljmp
xor
lods
pop
test
adc
inc
sti
scas
mov
push
and
dec
sub
sub
les
addr16
push
pop
jae
icebp
mov
outsb
fimull
lods
jmp
arpl
ret
or
fadds
movsb
iret
movsl
push
pop
pushf
out
pop
mov
lret
std
sub
xor
dec
xorl
lds
shrl
jmp
jo
add
fwait
out
iret
imull
je
je
or
cmc
cwtl
add
cmp
dec
dec
or
mov
into
xlat
push
daa
mov
xchg
xor
dec
adc
adc
das
scas
push
arpl
mov
adc
add
arpl
imul
and
pop
jbe
imul
adc
sahf
xchg
mov
pushf
mov
mov
arpl
lcall
shl
xorl
pop
jp
inc
aad
adc
push
xor
stos
pop
leave
rorl
jp
fwait
push
pop
repz
adc
inc
dec
imul
imull
lret
dec
jns
sbb
sub
pop
je
fwait
gs
jl
inc
cwtl
push
xor
mov
pop
aaa
push
or
in
cmp
and
mov
shl
mov
mov
add
push
jb
bound
push
testl
xlat
pop
pop
cwtl
imul
push
inc
loopne
mov
jmp
dec
in
aaa
out
adc
mov
mov
jmp
jl
inc
ss
in
push
insb
into
fmuls
std
repz
xor
mov
loopne
daa
shld
cmp
mov
std
insl
dec
mov
adc
push
subb
or
or
inc
lcall
add
jg
repz
icebp
cwtl
leave
cmpsl
gs
xlat
nop
adc
fldt
xlat
rcl
pop
or
jb
fnsave
pushf
sbb
mov
cmp
jle
adc
mov
fists
sbb
adc
mov
xchg
mov
pusha
imul
lods
xchg
add
xchg
cmc
add
jae
push
dec
push
int
ss
shll
popf
jmp
push
frstor
test
hlt
xor
shrl
mov
aam
mov
pusha
imul
stc
aad
inc
rorb
pop
lret
cmpsb
aad
mov
notl
jb
shll
mov
jns
fwait
or
aam
lahf
and
lcall
and
jns
pop
fsubrp
pop
pop
xchg
dec
cmpsl
cli
pushf
iretw
cmp
lds
repz
adc
sub
cmpsl
add
jbe
inc
or
xor
xor
sbb
xchg
cld
pop
ret
enter
cmp
fnstenv
pushf
sbb
dec
push
hlt
xor
lock
lahf
push
pop
push
fmuls
ret
in
push
sbbb
sti
pop
je
dec
cli
or
cmp
iret
jmp
aaa
insl
xchg
iret
cld
movzwl
iret
lcall
sbb
inc
and
xchg
pop
sbb
or
and
mov
push
cltd
clc
fsubl
push
jne
loop
clc
pushf
shlb
cli
mov
lods
or
sahf
lds
sub
fildll
xchg
repz
pop
lock
sub
in
movsb
loope
pop
jne
jne
fs
mov
sbb
xchg
out
mov
sahf
stc
rorl
shll
add
cmp
leave
xor
dec
dec
xchg
push
mov
lret
je
inc
jp
scas
test
sbb
mov
repz
add
mov
jg
mov
aaa
xchg
cli
std
in
lea
add
sbb
es
cmp
loope
xor
mov
mov
mov
nop
bound
cmovo
lock
push
je
and
pop
int
pop
ret
out
push
mov
jmp
aaa
into
add
mov
dec
loop
jne
jmp
jg
arpl
jle
or
or
pop
call
xor
mov
insl
mov
fdivrl
cwtl
outsb
mov
out
sti
or
and
add
insb
lods
fwait
mov
icebp
mov
jmp
das
dec
insl
lock
loop
out
movsl
stos
les
and
xchg
inc
fxch
jl
fimuls
xor
inc
lret
in
inc
xchg
outsb
xor
cmpsl
jne
lods
sub
adc
or
das
test
xchg
inc
or
push
xchg
lret
adc
cmp
push
sbb
nop
inc
andl
mov
out
andb
fs
out
mov
incl
loopne
push
pop
or
jnp
pop
cwtl
iret
pop
push
inc
insb
jle
fsubrl
jbe
push
sti
dec
jnp
cmp
or
mov
or
or
movsl
lret
addr16
out
ret
adcb
or
aaa
sbb
mov
jmp
xor
lds
push
xorb
fisubs
mov
test
iret
mov
out
pop
aad
mov
xchg
adcb
rclb
lods
push
cmp
fdivs
test
mov
bound
scas
xor
xor
jns
jmp
pop
mov
insb
aaa
jne
dec
jmp
lds
jbe
or
aaa
or
test
fldl
pop
mov
jmp
repz
inc
push
inc
pop
adc
cmp
sahf
lahf
push
pop
cmp
xchg
add
inc
push
test
mov
test
sub
push
call
ret
fiaddl
push
jle
or
hlt
pusha
lahf
push
sub
and
mov
jmp
das
push
xor
dec
shll
adc
aam
mov
lea
repnz
mov
cltd
sbb
pusha
jle
push
add
push
mov
or
ret
pop
ljmp
mov
pop
xchg
mov
or
or
mov
lods
fxam
das
inc
add
pushf
adc
inc
pop
xchg
lock
or
dec
shl
fidivrl
jo
push
xchg
mov
aam
cmpsb
std
pop
shlb
shl
cmp
fbld
pop
cmp
jb
push
adc
and
jns
shll
orl
xchg
and
in
adc
mov
fld
mov
and
dec
test
imul
outsl
jbe
xor
cmp
mov
dec
cs
test
mov
cmp
out
or
dec
outsb
and
clc
fstpl
sub
jb
add
icebp
adc
sbb
rorb
mov
cmp
cmp
loopne
xor
pusha
lds
insl
lret
insb
imul
fs
out
in
dec
aad
mov
ja
in
inc
inc
xor
mov
and
inc
addr16
mov
add
xor
mov
test
sub
xor
push
sti
aas
xchg
lea
mov
dec
jno
xor
cmp
add
sub
push
rcr
fadds
arpl
daa
push
jl
mov
mov
add
dec
lods
dec
mov
repz
sti
dec
add
test
fs
outsb
test
pop
or
cmp
ret
push
sbb
and
aam
sub
sarb
ret
push
jne
test
add
pop
mov
adc
fcompl
imul
out
adc
xor
add
mov
jl
jmp
adc
faddl
sti
xchg
and
push
push
aas
mov
int3
jb
in
push
or
xor
push
inc
sbb
sbb
sbb
mov
add
rcrl
push
js
dec
repnz
sbb
in
je
in
into
and
or
adc
mov
push
or
add
aaa
aas
int
xlat
sub
mov
dec
xor
mov
pop
mov
pop
xor
add
inc
xor
sub
in
negb
in
push
lds
ljmp
push
inc
in
sub
insl
fldl2e
cmpsb
ljmp
fisttps
mov
in
test
xor
sbb
int3
pop
pop
inc
sub
xor
inc
hlt
xor
dec
sbb
hlt
fimull
or
shr
cmp
inc
stos
xor
iret
add
addb
sbb
movb
xchg
push
push
pop
filds
mov
mov
pop
ja
dec
leave
mov
sbb
adcb
pop
imul
or
clc
and
imul
shrl
mov
jecxz
out
mov
mov
jnp
mov
ss
popa
push
and
mov
xchg
fwait
rorb
cmpl
cmovns
ja
sub
cvtps2pi
jg
stos
pop
jg
mov
jns
subb
test
scas
daa
shl
pop
and
jns
mov
loopne
stc
xchg
jp
push
loop
adc
add
sbb
dec
jl
inc
cwtl
xchg
jle,pt
mov
in
mov
mov
xchg
mov
cmovle
scas
repz
imul
add
or
repnz
outsb
cs
loop
insb
adc
pop
int
adc
popa
adc
arpl
cli
xor
push
scas
outsl
dec
adc
jl
cmp
sti
dec
xchg
jne
inc
call
mov
add
adc
inc
jecxz
addr16
dec
cld
lock
lahf
ljmp
xchg
js
test
cmp
mov
into
adc
cli
push
push
jnp
mov
xchg
test
cs
adc
cmc
sub
push
rcr
push
leave
or
xchg
addb
mov
sahf
jp
xor
icebp
nop
bound
pop
outsl
enter
or
cmp
push
icebp
jle
scas
fbld
mov
aas
and
insb
and
mov
mov
xchg
repz
xor
and
je
bound
push
loop
inc
jmp
xor
mov
outsl
sbb
pop
push
sbb
sbb
cwtl
ljmp
repnz
fbld
adc
gs
mov
xchg
pop
shll
stos
addl
je
icebp
sahf
out
adc
inc
xor
iret
push
dec
shrl
push
mov
pop
shll
add
das
shrl
iret
sub
or
out
out
rorb
scas
mov
push
and
mov
stos
lcall
cs
inc
pop
lret
fwait
in
cmp
int
xorb
test
dec
jnp
pop
fs
mov
mov
into
push
inc
cmp
mov
dec
push
leave
mov
cli
repz
es
call
ss
pop
dec
imul
ja
shlb
test
cmp
sub
xchg
adc
xchg
test
cli
push
in
or
jge
sub
fdivrl
stc
jg
or
insl
mov
cmp
pop
mov
and
add
adc
pushl
mov
je
sbb
dec
ret
sub
push
sub
sahf
ret
fstl
and
into
repnz
push
cld
or
pusha
cmc
jae
pop
and
push
mov
mov
sub
adc
cltd
into
mov
sub
mov
insl
in
push
push
xchg
dec
sub
jbe
repz
pop
mov
lods
xchg
adc
ficomps
test
xor
inc
mov
movsl
xorb
xor
daa
sub
adc
or
cwtl
das
lea
es
mov
scas
fwait
mov
sbb
push
fwait
or
push
scas
les
jae
movsl
add
sbbb
pop
mov
push
sbb
push
mov
test
pushl
push
imul
mov
pop
xchg
fxtract
loopne
adc
cltd
pop
adc
adc
or
xchg
add
cmp
dec
xchg
orb
mov
lods
lahf
cli
fbld
lcall
js
jne
movsl
lahf
loope
pop
faddl
jb
or
push
jo
xor
lret
mov
pop
and
daa
sub
add
addl
jle
jg
cmpsl
inc
or
in
leave
xor
pop
xchg
add
add
in
xchg
jecxz
or
addr16
imul
ds
mov
xchg
mov
dec
add
ds
or
inc
mov
inc
mov
popa
xor
sbb
aas
cli
loope
enter
or
push
faddl
into
adc
sbb
jo
jne
std
jne
mov
mov
shrb
enter
xchg
inc
pushf
pop
test
or
mov
or
int3
aas
cld
sub
hlt
in
sub
mov
push
aad
sub
rcrb
push
cmc
sub
adc
shll
scas
dec
pushf
dec
rorb
ljmp
enter
dec
mov
xlat
repz
xor
mov
insb
outsb
push
aam
lcall
and
shll
add
mov
and
jno
icebp
push
repz
jb
in
sub
rclb
inc
je
add
push
je
inc
sub
xchg
pop
rcr
and
xchg
xchg
inc
cmp
sub
repnz
mov
stos
les
dec
outsl
push
mov
cmc
adc
popa
cmp
pop
xor
or
ljmp
mov
cmp
repz
xor
int3
cs
mov
push
mov
cmp
ret
aas
stc
popf
pop
or
jno
dec
cld
push
cmp
fld
mov
outsl
outsb
out
dec
mov
mov
mov
in
negl
rolb
outsl
mov
call
sti
rolb
jae
hlt
aad
pop
mov
jmp
sti
loope
mov
sbb
incb
mov
adc
repz
dec
clc
jmp
aam
dec
pop
dec
adc
test
nop
lret
das
test
popf
or
cmp
loope,pt
xor
and
cmpsb
movsb
lock
sti
mov
repnz
outsl
repnz
and
imul
mov
xchg
push
adc
stos
in
mov
jnp
or
lcall
sbb
push
in
dec
ljmp
jbe
adc
or
jb
lock
outsl
add
sbb
xor
xor
mov
aad
imulb
imul
fisubrs
negb
pop
int
mov
push
lcall
mov
out
jb
push
mov
mov
sbb
lods
out
sbb
lds
loopne
sub
out
xchg
mov
pushf
jnp
sarl
call
sbb
sub
ret
cmpsb
gs
jmp
pop
stos
pushf
ficompl
js
xchg
and
clc
dec
dec
loop
out
mov
jg
xchg
dec
daa
cmp
adc
mov
outsb
hlt
call
jle
sub
lock
or
dec
adc
outsl
pop
pop
jnp
inc
sbb
mov
data16
test
inc
ss
adc
fmuls
cmp
outsl
cld
mov
sub
pop
xchg
lods
ja
mov
add
add
pop
xchg
pop
mov
shll
es
jge
dec
jge
cli
out
mov
add
orl
fistpl
hlt
jbe
stc
jge
cwtl
outsl
jge
aas
lret
jae
pop
push
rorb
repz
test
or
mov
testb
jl
pusha
mov
xlat
nop
push
adc
fsubs
ds
stc
cmp
add
pop
fs
setne
fcmovb
ret
inc
inc
pop
mov
dec
dec
add
lock
imul
sbbl
das
int3
sbb
hlt
frstor
imul
clc
sbb
test
lea
jle
aas
pop
fimuls
insb
test
mov
pop
shl
repnz
mov
shll
jno
sub
jg
push
sbb
aad
and
xchg
lds
cmc
das
mov
inc
jl
imul
mov
ljmp
cmp
scas
cs
dec
neg
mov
inc
cmc
dec
bound
push
mov
mov
jae
mov
pop
ljmp
rorb
pop
scas
pushf
sub
mov
cmp
cmpl
cmp
dec
in
mov
daa
shll
mov
ret
mov
pop
push
fildl
incb
sahf
xor
in
mov
dec
mov
out
inc
aas
and
cmpl
stos
out
icebp
xchg
pop
mov
inc
aam
xchg
xchg
rorl
loopne
xor
pushf
cs
pop
scas
dec
mov
push
sbb
jp
sub
insl
arpl
jecxz
and
dec
and
or
aad
jno
popf
in
hlt
xchg
pop
adc
gs
adc
outsb
data16
cmc
jb
jl
or
ret
xchg
ret
cltd
shll
pop
pop
in
jecxz
pop
mov
xor
mov
xor
add
scas
pop
jb
mov
mov
les
js
push
push
nop
sarb
ret
sbb
xchg
in
popa
jecxz
lret
ret
cmp
ljmp
sub
je
fisttpl
cltd
fcomp
into
repnz
jge
pop
or
sbb
pop
push
mov
decb
cli
inc
adc
clc
dec
jge
aas
mov
adc
dec
fld
dec
pop
sub
jl
push
jbe
testl
hlt
popa
pop
mov
add
out
lds
movsl
in
pop
xor
inc
or
push
pop
inc
iret
test
and
sub
xchg
pop
sub
outsb
adc
in
mov
adc
inc
or
and
xor
push
movsb
sbb
outsb
movsl
and
dec
jg
inc
push
push
shrl
cmp
repnz
dec
aam
test
mov
jbe
fwait
movsl
push
sahf
xchg
xchg
imul
popa
ja
jno
cmp
or
out
dec
sarb
aam
xchg
and
test
je
xor
mov
jmp
adc
or
nop
sub
mov
in
pop
lret
cmp
daa
xchg
negl
pop
adc
int
adc
or
add
cmp
push
mov
lock
cmp
push
lahf
roll
add
push
jp
xchg
push
inc
in
add
dec
hlt
mulb
pop
jnp
imul
iret
stos
jns
bound
je
push
mov
jg
enter
xchg
push
jno
dec
mov
aaa
bswap
pusha
xor
fbld
dec
jnp
lods
push
adc
test
cmp
inc
divb
iret
stc
or
loope
ret
mov
xlat
aas
cmpsb
add
and
inc
ret
adc
sbb
push
and
outsl
mull
sub
inc
dec
in
cmp
inc
xchg
xlat
rol
mov
dec
sbb
fstpt
jno
sahf
jl
mov
loope
std
into
mov
cmp
and
add
into
mov
fisttpll
xchg
or
imul
sbb
and
cmp
adc
popa
popl
cld
fnstenv
dec
mov
mov
addr16
jg
pop
push
shlb
aad
mov
dec
daa
or
push
adc
xchg
push
adc
subl
add
rcrb
pop
out
mov
dec
lret
push
in
scas
push
pusha
cmpsb
je
lcall
cld
cmpsb
aas
sbb
sti
outsb
inc
xor
iret
and
inc
aaa
mov
pop
scas
leave
stos
int
jns
popa
sbb
aad
out
setp
ds
mov
or
and
inc
imul
or
movsb
psubq
cmp
icebp
xchg
cwtl
dec
adc
sahf
das
je
fstp
xor
adc
sub
xchg
loop
mov
pop
lahf
adc
hlt
fistpll
sti
pushf
lret
fstpt
scas
mov
pop
in
imul
outsb
sti
pushf
aaa
mov
adc
popa
loop
ret
sbb
fnstenv
pusha
mov
loopne
rcll
hlt
inc
fisubl
hlt
hlt
and
mov
mov
daa
lahf
xor
insb
arpl
and
dec
loop
out
pop
cmp
ret
out
dec
aas
sbb
fstl
ss
jp
inc
pop
cld
cld
stos
enter
sahf
add
mov
mov
or
dec
mov
test
cld
movsb
scas
sti
jnp
mov
mov
pop
ficoms
mov
or
cs
push
and
xchg
mov
shll
orl
jae
push
cmp
je
pop
pop
inc
mov
xor
clc
ror
mov
imul
nop
movsl
movsb
xor
sub
lea
lods
sbb
push
jle
stos
push
jle
add
sub
mov
jno
ds
out
pushf
andb
mov
ss
sub
loope
cmp
lret
idivl
out
pop
pop
sub
fcmovnb
in
in
push
jnp
fcomps
cwtl
sub
cmp
ds
ljmp
stos
and
leave
push
lock
adc
xlat
push
lods
mov
cmp
stos
mov
ret
pop
push
sub
sbb
lahf
loopne
mov
xchg
pop
dec
mov
pop
fwait
dec
mov
movb
jno
loopne
lock
or
cwtl
sbb
sub
xchg
add
sbb
outsb
int
inc
popa
pop
cld
push
mov
out
lods
cmp
les
std
cmp
stc
sbb
mov
inc
push
fdivl
jecxz
jg
pop
scas
pop
mulb
inc
mov
cmp
out
inc
sbb
sub
fsubr
mov
jns
ljmp
sbb
aad
leave
aad
xor
add
and
test
movsl
mov
mov
dec
stos
and
les
sti
jo
cmp
std
adc
inc
aaa
sbb
orb
push
outsl
cltd
sbb
pushf
mov
cmp
add
and
das
les
int
pop
mov
dec
cwtl
mov
mov
clc
or
in
js
mov
pusha
push
push
inc
pop
negl
mov
jmp
sar
imul
push
mov
fwait
pop
jbe
jmp
bound
fwait
and
inc
pop
rcrb
cmp
jae
mov
adc
push
and
dec
add
mov
dec
mov
aaa
mov
fistl
pop
call
push
cs
sub
adc
pop
mov
insb
jle
push
push
bound
lcall
xor
call
push
stos
jns
rcr
inc
inc
fldenv
mov
scas
nop
push
pop
sahf
mov
xlat
inc
lret
jge
and
add
ss
xor
psllq
or
xorl
test
xchg
fstl
loopne
xchg
xor
jb
mull
pop
movsb
mov
rcrb
lock
lods
pushf
and
bound
jno
jl
mov
rcrb
xchg
pop
negl
xchg
mov
add
sbb
jbe
or
mov
mov
fidivl
int3
int3
hlt
popf
sub
push
inc
lods
stos
test
xorb
addr16
mov
cmp
bound
shll
imul
scas
js
adcl
inc
fs
jne
sbb
and
daa
stos
icebp
mov
add
data16
mov
add
pop
lcall
mov
push
iret
jp
and
or
js
or
cltd
jae
push
cmp
leave
push
mov
xor
fwait
dec
pop
es
mov
outsb
insl
and
or
sbb
jle
mov
xor
das
mov
decl
sti
xor
mov
xchg
add
fisttps
fmuls
enter
cld
or
int3
push
test
xorl
call
adc
pushf
aas
and
jmp
cmpsb
scas
test
adc
sarl
jno
add
or
pop
sarb
repz
inc
scas
cld
mov
and
mov
xor
aaa
in
sahf
dec
pop
imul
rcll
sub
test
inc
lret
dec
std
js
push
fprem
ljmp
sbbl
stos
popa
fisttpll
and
popa
jns
dec
icebp
gs
cltd
popf
icebp
imul
cltd
add
sbb
jbe
dec
mov
xor
int3
loope
mov
mov
pop
add
push
xchg
adc
sbbb
sbb
cmc
rcl
add
shlb
push
sbb
lods
leave
addr16
adc
shlb
inc
push
imul
rorb
popf
inc
in
fistl
andb
jl
jl,pt
cmpsb
arpl
push
pop
pop
and
jg
fs
inc
js
inc
repz
fsubrs
adc
fwait
ss
jg
incb
cli
push
inc
xchg
jo
and
repz
ja
mov
fidivl
test
sbb
jl
addb
mov
pusha
push
cmpsl
fstpl
add
push
or
inc
je
outsl
pop
mov
pop
xchg
jp
mov
sbbl
inc
imul
inc
xchg
mov
sahf
popf
sbb
stos
test
fdivs
inc
popf
inc
aas
and
xchg
fnstsw
leave
rcrl
pop
jmp
jo
mov
jecxz
jnp
adc
jl
mov
pop
cmc
aaa
mov
fiaddl
mov
jns
xor
jb
ret
or
aad
xchg
test
es
mov
and
push
cmp
into
xor
pop
push
andb
hlt
dec
push
insb
inc
lret
popf
ret
add
dec
insl
adcl
pop
pop
stos
add
mov
mov
push
scas
dec
mov
sar
js
or
inc
cmp
std
loope
out
jle
xor
jl
adcl
lea
pop
mov
dec
inc
or
pop
mov
gs
cmpsl
and
push
inc
adc
sub
push
cmpsb
in
push
push
xor
ret
xchg
in
dec
fldl
es
subl
xor
adc
pop
cmc
gs
nop
cltd
and
imul
daa
out
and
imul
lods
dec
push
add
cltd
mov
pop
mov
cmp
cmp
sbb
lret
ret
mov
sbb
arpl
mov
mov
xor
cltd
adc
dec
and
in
pop
mov
add
pop
lret
inc
and
sub
and
pop
mov
lock
jmp
cli
xchg
sti
dec
cmp
and
xchg
js
sbb
stos
ret
mov
sub
fwait
shlb
add
cmpsb
sub
mov
jle
mov
pop
rcl
pop
enter
filds
ljmp
rolb
imul
ss
sbb
insl
jp
test
fwait
pop
std
mov
xchg
int3
adc
cmp
movsl
mov
push
shlb
xchg
mov
mov
xchg
cwtl
mov
mov
and
cmp
fistps
mov
xor
cmp
jmp
shlb
ss
lret
dec
mov
inc
or
jne
jno
mov
loope
mov
dec
jp
pop
sub
mov
arpl
loop
aam
or
je
out
cmp
mov
or
enter
lock
xor
fists
cmpsb
xor
dec
push
xlat
lahf
in
fmul
mov
leave
insl
lcall
sbb
sahf
aad
push
push
xchg
movb
aas
pop
andb
int
mov
fisubs
adc
movsb
dec
insl
xchg
push
mov
loop
push
pop
loopne
dec
int3
cmp
leave
inc
add
push
aam
pop
jp
adcb
mov
outsl
and
loope
xchg
sbb
jb
sub
hlt
sbb
pop
outsl
fcomps
repz
je
inc
mov
lea
push
scas
sti
cmp
pop
movsb
cmpb
xchg
movsl
out
mov
lahf
mov
inc
push
lahf
xchg
cld
movsl
xlat
adc
out
cmp
out
pop
loop
int3
cmc
jge
push
xchg
add
daa
jne
les
pop
or
outsl
ss
mov
clc
aam
lods
push
sub
insb
call
stos
adc
subl
stos
ljmp
scas
imul
icebp
cmp
repnz
cld
push
xchg
and
cld
xchg
cmp
or
rcl
mov
test
adc
mov
lds
lods
cmp
es
or
push
hlt
lods
xchg
in
fwait
mov
decb
push
lcall
sbb
roll
into
mov
ljmp
jb
ss
pop
or
push
out
lods
in
les
pop
xorb
and
mov
aam
sbb
mov
mov
mov
mov
pop
test
inc
int3
mov
xor
clc
jge
lahf
push
in
cmc
pop
xor
add
scas
cmpsl
fsubl
mov
mov
pop
cmp
mov
cmp
repnz
cmp
pop
cmpsl
lea
sbb
mov
jg
daa
outsl
cmpsl
ja
cmp
inc
incb
mov
int3
cmp
sub
jmp
jmp
sbb
jns
leave
adc
cltd
bswap
mov
sbb
mov
mov
imul
xchg
pusha
loop
adc
or
cmp
jne
cmp
jbe
inc
notb
outsl
aaa
xor
shll
adc
xorl
jb
pop
xchg
lret
cli
push
or
adc
inc
cmp
pop
inc
inc
sti
je
jp
aaa
push
inc
lret
arpl
jle
xlat
lods
popf
jecxz
sbb
rorb
stos
call
shlb
xchg
imul
adc
scas
divb
mov
jmp
push
lret
xlat
popf
popa
dec
sbb
or
nop
xchg
mov
xor
aas
sub
insl
test
js
fldcw
cmp
dec
aam
mov
dec
mov
out
dec
or
gs
nop
neg
lock
inc
imul
es
inc
sub
push
cmp
xchg
mov
xchg
add
sti
icebp
push
sub
mov
add
addr16
fmulp
cmpsl
loopne
cmp
mov
inc
sbb
enter
mov
popa
loope
xor
fwait
mov
push
bextr
sbb
mov
adc
aas
sub
and
jp
sarl
cli
in
push
fmuls
jns
jg
int3
push
push
xchg
ror
mov
cmp
gs
pop
mov
enter
std
loop
insb
dec
xor
push
call
jecxz
hlt
pop
mov
inc
in
sbb
imul
inc
mov
or
jno
push
mov
fwait
mov
rorl
cmp
cmp
xchg
mov
orl
lcall
or
outsb
sbb
call
cmp
mov
or
add
jmp
test
icebp
xchg
enter
filds
or
adc
adc
stos
jp
pusha
je
inc
push
shl
inc
ret
add
lea
mov
mov
sbb
lea
xor
mov
imull
push
das
mov
xchg
mov
outsl
aam
incl
cmp
scas
jl
mov
into
jo
out
repnz
push
popf
xor
popf
ret
jp
jno
mov
dec
mov
ret
push
dec
jae
jno
lock
inc
pop
sbb
pop
cwtl
mov
jl
cmp
int
and
rcrb
inc
mov
cltd
cmp
jp
nop
xchg
movsl
aad
xchg
mov
leave
xchg
lret
fwait
sti
aas
dec
gs
xor
mov
lds
adc
scas
sub
pushf
mov
push
cs
repnz
int3
pop
mov
call
mov
mov
es
add
hlt
arpl
push
lock
sub
push
sti
imul
and
mov
add
cld
jl
pop
call
cld
std
sti
add
flds
cmp
jp
fisttpll
push
jns
cmp
push
cmp
cmp
mov
fwait
notb
xchg
inc
cltd
aad
int
push
mov
xchg
mov
jmp
sub
pop
push
adc
and
in
loopne
push
and
outsl
mov
es
pop
ds
add
stc
mov
pushf
adc
mov
mov
int
and
cs
roll
lahf
cmc
mov
icebp
rolb
adc
fwait
aaa
roll
or
xor
rol
xchg
jns
mov
pusha
mov
sub
xchg
pop
push
mov
cmpsb
jo
mov
or
sbb
xchg
sbb
pop
and
fidivl
insl
adc
es
adc
mov
sarl
mov
adc
sbb
jb
jmp
push
cld
pop
rorl
pop
jb
stos
jp
icebp
pop
mov
insb
sbb
sbb
cwtl
pop
outsb
xor
push
jle
pusha
mov
adc
out
mov
out
in
inc
add
scas
lock
mov
mov
mov
inc
std
sbbl
mov
sbb
mov
fmuls
hlt
daa
fiaddl
hlt
hlt
push
das
xor
jle
jl
testl
jno
xor
xlat
push
mov
xchg
xchg
push
add
push
ret
inc
lret
bound
arpl
add
test
or
pop
pop
mov
add
xchg
subl
dec
push
test
jge
hlt
sub
push
test
xor
pop
sarl
repz
mov
pop
add
add
std
mov
dec
push
cmp
lret
xchg
xor
js
cmp
sub
enter
mov
xchg
cmp
sbb
lcall
daa
push
call
gs
jle
outsb
lock
fists
mov
adc
mov
or
and
je
fwait
test
iret
pop
mov
ds
outsl
dec
das
sbb
add
popf
sbb
outsl
mov
push
enter
and
fsubl
faddp
push
out
cwtl
xor
mov
fdivs
mov
xorl
or
add
ficomps
fwait
leave
fimuls
mov
ret
mov
and
fwait
pusha
call
sub
and
xlat
aam
xchg
out
mov
dec
clc
mov
jo
arpl
ficompl
in
out
testb
movsl
jne
mov
xchg
andl
stc
pop
fld
dec
ret
inc
adc
adc
pop
add
notb
daa
cli
inc
enter
xor
mov
aas
xchg
gs
lret
cmp
dec
rol
mov
sbb
sub
mov
lods
dec
cmc
call
pop
mov
lock
jmp
mov
lret
xlat
fsubrl
or
push
es
ret
add
data16
fucomp
mov
out
xchg
dec
stos
sbb
or
xor
jno
jmp
loopne
add
push
shr
pop
push
rcrl
leave
jp
push
and
sbb
std
orl
lds
out
xchg
ficomps
mov
ret
or
inc
or
daa
sbb
cmp
lahf
cmp
rcl
xchg
push
xor
cmpsl
test
cwtl
and
or
xchg
push
xchg
adcl
lcall
jae
cmp
jo
in
jmp
nop
cmpsl
mov
mov
jnp
aad
lea
push
aam
sbbb
mov
and
cmp
xor
lret
lds
mov
pop
jg
ret
sbb
sbb
jbe
mov
mov
jo
or
lea
sbb
jne
jne
mov
pusha
xor
cltd
mov
or
testl
mov
cmp
pop
adc
mov
xchg
adc
aam
scas
cmc
cld
xchg
and
subl
and
xchg
push
pop
fisttps
push
mov
neg
fdivrl
cld
orl
jo
movsb
sub
or
inc
mov
and
inc
arpl
ss
jp
data16
xor
pop
psubd
push
enter
int
sbb
out
add
jecxz
sbbb
jo
cli
inc
jp
mov
outsb
jb
mov
dec
aas
mov
divb
sti
cmp
and
scas
dec
xchg
dec
fmull
lahf
adc
sub
inc
and
sub
adc
sub
xchg
test
and
and
es
punpckhdq
inc
cmpsb
cld
fwait
in
push
jbe
pushf
sahf
hlt
lahf
popa
push
in
xlat
arpl
cmp
add
mov
jo
dec
mov
ret
test
jl
mov
inc
ds
fimuls
dec
push
lcall
xchg
or
std
mov
icebp
inc
bound
or
cmp
jl
shlb
push
push
mov
jl
push
jns
or
or
sbb
push
in
jno
ret
fmuls
xchg
outsl
cmpsb
jl
scas
mov
notl
pushf
cmp
mov
fstpl
inc
scas
cmp
in
xor
lods
cmp
mov
adc
test
push
loop
push
cs
lahf
add
je
cs
mov
leave
shl
mov
xchg
mov
lods
sbb
mov
lahf
jmp
pop
sbb
stos
das
loop
cmp
popa
sarb
popf
pop
cmp
mov
push
xlat
movsl
mov
loopne
movsl
xor
fisubs
xlat
jp
cmp
dec
sbb
mull
mov
mov
jo
xlat
add
fwait
jo
ja
mov
sub
and
adc
push
add
mov
pop
test
jae
or
gs
or
addr16
nop
into
addr16
or
into
xor
jb
inc
in
inc
mov
movsl
or
adc
adc
lret
add
sti
mov
or
rclb
inc
lds
inc
inc
inc
pop
int
cld
jmp
pop
sbb
cmc
cmpsb
je
sub
pop
pop
adc
inc
imul
xor
jp
cmp
xchg
cltd
test
faddl
leave
arpl
mov
rcl
cmp
xor
popa
sbb
mov
sahf
push
sub
push
mov
rorb
jo
inc
jmp
ret
fs
and
xor
jge
gs
out
or
pop
xchg
mov
daa
ret
js
aam
or
fisttpl
cld
in
je
jge,pn
dec
popf
pushf
and
andl
jno
mull
pop
jnp
outsl
lods
call
push
dec
xor
dec
mov
and
scas
push
xorl
daa
lret
sbbb
clc
mov
cmpsb
mov
mov
inc
inc
dec
rorl
or
mov
enter
sbbl
lods
fistps
sub
ss
pop
jge
repnz
out
fucomp
cmp
fcomps
and
jb
sahf
xor
cmpsw
jne
mov
jge
in
pop
xchg
in
pop
xchg
push
inc
imul
out
push
hlt
or
mov
jl
push
fiadds
test
data16
cmp
push
ja
xchg
push
fwait
data16
aad
in
or
cmpsl
hlt
rclb
inc
or
jecxz
repnz
aas
sti
dec
mov
pop
sbb
nop
cmp
mov
loopne
mov
out
movsb
cmp
fisubl
cmpsl
xor
fwait
xor
mov
leave
mov
sbb
inc
icebp
pop
jl
mov
inc
jge
adc
jmp
rcl
dec
je
jns
loopne
xchg
mov
or
out
out
loopne
sbb
mov
and
mov
sti
ss
xchg
and
xchg
nop
or
stc
lret
adc
fsubrl
cmc
add
fdiv
in
mov
repz
cmp
jl
mov
cmpsb
push
loope
pop
popa
and
mov
dec
inc
loope
lods
xchg
cmc
aaa
fucomi
icebp
xchg
push
repz
xor
push
or
mov
push
push
lret
cmp
cmpsb
inc
imul
data16
cmp
mov
movsl
mov
sub
movsl
pop
ds
fists
push
in
push
mov
inc
mov
adc
mov
sti
adcb
daa
inc
inc
pop
adc
add
loope
pop
adc
jb
push
repnz
jge
push
jecxz
mull
xor
mov
jl
and
mov
mov
rorb
sbb
leave
mov
push
xchg
mov
jno
or
outsl
testl
cltd
adc
adc
sbb
pop
jl
pop
jg
mov
pop
out
push
or
pop
lods
test
imul
test
or
sbb
test
lods
lea
fs
rcrl
clc
out
mov
cmpsl
mov
fs
out
cltd
mov
mov
scas
push
xchg
or
xchg
cwtl
loopne
aaa
add
mov
push
jbe
sahf
cmpsl
xor
jbe
mov
xor
mov
sbb
mov
std
loope
imul
push
cli
subb
test
mov
pop
je
mov
inc
dec
pop
and
cwtl
addr16
xor
pop
jae
daa
arpl
mov
mov
pop
sarl
outsl
mov
mov
testl
aaa
adc
fs
cmp
ljmp
mov
xchg
adc
push
xchg
mov
xchg
mov
repnz
or
stos
icebp
sbb
ljmp
icebp
mov
xor
dec
data16
dec
or
sbb
mov
pop
or
jl
jl
add
rorl
xor
push
pop
mov
repz
lods
inc
sub
cs
aam
jno
fdivl
and
ret
push
mov
bound
lret
pop
jecxz
stos
push
pop
push
xor
jg
push
pusha
push
imul
or
xor
jns
pop
dec
or
call
pop
iret
fidivl
repz
mov
jge
sub
push
mov
mov
lret
add
std
mov
enter
jnp
sbb
cmpsb
punpckhbw
pop
mov
call
mov
das
stos
adc
in
aad
dec
push
iret
or
xchg
dec
or
pop
adc
inc
push
pop
sub
dec
sbb
inc
fmull
arpl
sbb
mov
mov
xor
mov
test
stos
dec
mov
mov
lds
sbb
or
push
cmp
pop
push
sbbb
stos
cli
mov
jle
sbb
push
or
and
fidivrs
xchg
and
xchg
popf
push
data16
ja
push
je
xchg
pop
in
movsb
jge
inc
std
popa
push
dec
dec
out
enter
mov
and
jp
push
imul
cmpsl
insb
std
ret
mov
and
mov
lea
fsts
jns
mov
mov
xor
js
pop
imul
cmp
mov
loopne
out
leave
imul
xor
gs
stos
pushf
cmp
fcmovnb
loop
push
jmp
sti
cmpsb
sbb
shr
and
psllq
xchg
loop
push
enter
add
and
push
popf
xchg
add
push
inc
fnstenv
sub
insb
popa
xlat
test
mov
sub
and
cmpsl
fildll
cmc
mov
jae
xchg
sahf
dec
outsb
test
es
das
cmp
nop
pop
mov
lea
mov
aaa
aaa
sub
jge
test
jecxz
jp
jge
shl
pop
lods
notl
jle
insb
and
mov
sbb
insb
lock
leave
mov
mov
mov
ret
cwtl
push
sbb
add
cmp
test
nop
movsb
and
popf
jo
xor
daa
rorb
sbb
idiv
ret
or
cmp
loop
sub
pop
mov
test
xchg
pop
xchg
cmp
loope
cmp
clc
or
dec
in
push
sbb
inc
add
in
not
in
repnz
xor
pop
jnp
pop
daa
pop
pop
stos
and
test
sahf
xor
aas
mov
mov
xchg
mull
pop
mov
icebp
or
imul
jmp
imul
gs
incl
ds
jns
sub
add
dec
cmp
sub
sahf
and
icebp
mov
mov
xchg
xor
mov
mov
adc
xchg
pop
loopne
pop
xchg
sub
icebp
popa
sub
and
and
push
movsl
insl
xchg
shrb
repnz
insl
add
jle
xor
loopne
mov
mul
pop
stos
add
ljmp
mov
cmpsb
stc
add
pop
inc
fucomi
insl
fldcw
pop
mov
xor
inc
pop
insl
push
sbb
xchg
jns
lods
and
test
mov
mov
mov
xor
ljmp
fidivs
imul
jae
gs
in
dec
mov
rcrl
cli
loopne
hlt
mov
rorb
leave
dec
shl
xchg
or
addr16
adc
iret
xorl
orl
loopne
mov
adcb
cltd
mov
dec
or
dec
jns
cmp
jb
add
int3
sub
les
loop
adc
xchg
stos
push
xor
insb
fsts
fdivl
cmp
call
out
mov
xorb
test
mov
sti
aas
lret
cmp
jne
dec
push
in
sub
sub
gs
mov
out
in
test
jmp
or
or
push
in
lcall
xchg
mov
cmp
sbb
pop
jne
sub
sbbb
mov
cmp
add
aas
push
jp
mov
pop
and
repnz
pop
mov
push
mov
dec
cwtl
xor
mov
rclb
push
imul
inc
stc
inc
adc
jmp
inc
lcall
aaa
jmp
mov
into
dec
dec
mov
rclb
xchg
push
ss
push
pop
popf
and
and
inc
jle
dec
mov
add
ror
fdivrp
aas
dec
mov
scas
jp
xchg
push
mov
adc
std
jns
mov
dec
mov
mov
xchg
adc
stos
repz
sti
adcb
jle
adc
fwait
xchg
mov
ljmp
sti
jae
test
rorl
addb
xor
dec
or
jmp
jbe
dec
dec
mov
jo
int3
fidivl
sbb
bound
xchg
repnz
mov
mov
mov
fdivs
jbe
sbb
jge
and
dec
lahf
les
int3
add
cmp
jne
push
jae
jo
imul
xor
cmp
hlt
mov
mov
enter
xor
ror
fistl
jnp
or
add
popa
addr16
sarb
inc
andl
mov
in
jo
push
sbb
push
sbb
sbb
cld
push
sub
jnp
dec
or
lea
jmp
cmp
popa
fnstcw
fists
cli
iret
lret
jge
andb
mov
out
lcall
pushf
cmp
jne
shrl
icebp
fcoml
pop
int3
out
xor
out
hlt
bound
inc
popf
inc
out
mulb
shll
fdivs
adc
out
mov
lahf
paddsw
cli
jp
adc
adc
push
cmp
rcr
mov
and
cmpsb
into
and
cmpsb
and
add
mov
xchg
mov
je
orb
xor
lods
push
fistps
cmp
in
adc
les
adc
inc
jne
rorl
sub
push
xlat
outsb
lahf
mov
and
and
mov
xchg
shrl
jge
jo
test
or
add
adc
lret
mov
popa
mov
xchg
stos
mov
mov
dec
pop
fimull
mov
inc
hlt
sbb
mov
dec
push
stos
scas
push
stos
mov
mov
out
mov
out
cmp
add
fnstcw
mov
xlat
mov
lea
jl
test
dec
cmp
xor
mov
sbb
aaa
call
inc
shll
lods
lcall
add
imul
inc
sub
das
lods
loop
mov
jg
or
inc
jp
inc
xor
rorb
popa
and
mov
mov
ret
add
stos
mov
mov
jae
jno
sub
or
sbb
jecxz
jmp
and
dec
jb
xor
idiv
mov
add
aad
push
jle
stos
dec
jmp
mov
leave
fisttpl
rol
int3
xchg
inc
lret
cmpsl
mov
repz
mov
test
mov
std
mov
sub
sbb
adc
mov
insl
cmp
jp
test
dec
ret
icebp
ret
or
dec
push
adc
movsl
lea
or
xor
pop
js
lret
push
push
fmull
imull
pop
push
roll
ret
stos
rcrb
lock
data16
pop
xchg
adc
xchg
mov
xor
mov
stos
cmc
in
rorb
sbb
xchg
mov
aaa
enter
jae
dec
dec
jge
rcll
ljmp
in
lea
out
mov
or
inc
dec
ljmp
arpl
xor
mov
cmc
les
xor
mov
push
movsb
fistpll
push
mov
xchg
mov
push
ror
mov
xchg
icebp
outsl
lahf
pushf
mov
repz
xchg
jg
jbe
test
sbb
daa
push
cwtl
sbb
leave
add
ret
je
fwait
adc
adc
int3
cmpsl
data16
pop
movl
push
cwtl
sbb
and
adc
xlat
popa
int
or
in
repnz
daa
jecxz
add
cltd
sbb
lock
gs
fldl
repz
pop
jnp
xchg
sbb
cwtl
ja
cs
out
insb
push
push
cmc
add
or
xchg
push
adc
xchg
push
and
pushf
imul
test
pop
adc
jecxz
popl
outsb
or
push
insb
addb
ret
out
cmc
enter
pop
add
sub
jbe
push
mov
fnstenv
imul
into
cmpsl
sarb
pop
cvtps2pi
cmc
cwtl
pusha
pavgb
inc
stos
xchg
sbb
jbe
jo
sub
adc
stos
popa
jne
in
or
jne
push
xor
jge
adc
arpl
sbb
xchg
hlt
jne
push
mov
sahf
loop
jmp
adc
ret
rcll
jmp
or
in
sub
push
insl
pushf
cmc
inc
xor
loope
or
dec
sbb
jb
dec
cmpsl
sub
add
push
inc
dec
scas
jecxz
push
push
loop
lret
xchg
hlt
mov
xor
or
lcall
adc
add
xchg
pop
adc
mov
sbb
dec
jp,pn
pop
add
jne
cmpsb
scas
lcall
and
mov
push
aam
push
imul
iret
or
clc
outsb
mov
xchg
mov
push
inc
incb
test
push
jno
xorl
mov
fsubs
fwait
std
outsb
sub
js
into
rorl
dec
scas
cbtw
je
shr
push
ret
rcr
and
xor
scas
cltd
sub
hlt
pop
cmp
xorl
ret
push
cld
push
pop
scas
push
pop
addb
pop
jno
xor
sub
jb
shll
dec
sbb
cmp
rclb
inc
mov
idivl
push
pop
jne
and
fisubrs
pop
lods
mov
lea
adc
cmp
jno
sbb
popa
and
sti
mov
gs
pop
dec
rolb
in
add
inc
add
les
push
nop
mov
cwtl
ret
jo
cmp
mov
jns
xchg
mov
sbb
push
insl
cmp
pop
mov
pop
ret
pop
lcall
inc
jle
mov
outsb
adc
dec
pop
adc
and
mov
inc
fisubl
out
movsb
jo
leave
cmp
imul
cmp
push
add
add
cmpsb
dec
hlt
std
ljmp
enter
jg
push
push
mov
jbe
lret
inc
loope
call
mov
mov
in
lcall
fcompl
xor
xchg
push
xor
aam
pop
xchg
mov
xchg
addr16
or
es
mov
orb
loopne
arpl
fwait
out
sub
insb
adc
sbb
clc
pop
pop
mov
cmp
cwtl
neg
je
daa
cmpsl
lds
imul
outsb
cmp
adc
cmp
jo
in
popa
jnp
loopne
das
add
xor
pop
mov
jnp
icebp
or
sub
mov
sti
outsb
xchg
jl
xor
js
dec
mov
jnp
jecxz
push
inc
nop
mov
jl
xchg
push
mov
or
ficoms
cmp
mov
inc
hlt
cmp
test
mov
mov
mov
dec
mov
pushf
je
mov
ret
out
std
out
cmp
cwtl
adc
or
dec
pusha
out
jp
mov
dec
cmpsl
push
ret
xor
push
into
mov
roll
mov
xor
xor
mov
push
or
or
ljmp
sahf
mov
and
xor
push
rorl
movsb
pop
pushf
insl
repnz
xor
push
pop
xor
cltd
sub
mov
add
or
sbb
xchg
xchg
mov
cmp
enter
lds
or
pop
movsl
mov
adcb
ror
jmp
xor
inc
mov
mov
repnz
jg
cltd
je
xlat
jns
pop
das
and
xchg
fiadds
fs
and
call
test
pop
inc
inc
pop
dec
sub
imul
push
push
cmc
imul
sub
shll
jmp
mov
imul
xor
and
xchg
xor
add
adc
xchg
cmp
and
in
mov
fdivrp
mov
in
test
dec
sti
jl
mov
cltd
jbe
fs
xchg
add
adc
ss
sbb
inc
lcall
hlt
cld
js
ret
aas
or
cmpsb
aad
xlat
jo
aam
sub
push
lods
ja
xor
dec
scas
push
xor
mov
sub
xchg
xchg
dec
dec
ljmp
call
push
mov
repnz
aaa
in
mov
jne
lret
and
out
inc
pop
enter
fsubl
popf
inc
cmp
fdivrs
daa
sub
xchg
stc
or
xlat
fldl
dec
in
mov
mov
stos
out
pop
lcall
ss
inc
rcl
xor
push
and
adc
test
adc
jne
lahf
rcll
mov
loopne
or
add
add
shll
inc
mov
push
cmc
pusha
add
mov
or
jae
lods
aaa
fcoml
push
lahf
cmpsl
mov
mov
mov
inc
and
ficompl
rorl
lcall
ljmp
sub
mov
xor
push
mov
dec
data16
xor
mov
pop
rorb
stos
xchg
sahf
pop
mov
lahf
mov
pop
fsts
ds
pop
lahf
or
sub
fmull
xor
push
add
xor
lcall
mov
out
shr
adc
mov
jno
sub
cwtl
sbb
ret
sub
adc
lret
sahf
test
imul
shlb
test
or
aas
push
push
ret
enter
jnp
adc
xchg
out
mov
rol
or
or
shrb
sti
outsl
sbb
jnp
and
addr16
mov
sbb
aas
mov
mov
and
pusha
leave
sbb
enter
inc
gs
pushf
adc
loope
pop
leave
je
mov
sbb
pop
push
aas
xor
push
xchg
mov
jmp
jl
mull
mov
clc
lret
fidivrl
outsb
in
xor
and
pushf
inc
dec
sbb
dec
icebp
adc
insl
in
sub
sub
or
xor
popa
fnstenv
dec
jo
and
pop
cmp
shlb
xchg
repz
xchg
dec
lea
fisubl
repnz
or
xchg
rorl
fdivrs
aaa
mov
mov
pop
cwtl
cmpsb
sub
lret
arpl
dec
mov
aad
jge
imul
adc
push
push
jae
inc
loop
cmc
outsb
stos
push
mov
pop
jo
adcb
add
scas
daa
inc
stc
cmp
hlt
out
test
mov
lret
push
dec
sahf
lahf
xchg
fcmovu
ret
push
mov
dec
and
xchg
cld
ja
insl
mov
in
std
mov
xchg
push
adc
xor
and
cmpsb
mov
or
mov
cs
mov
inc
push
shrl
jmp
push
in
add
out
mov
adc
std
add
push
jmp
std
mov
aam
or
sarl
mov
scas
imul
les
push
decb
mov
andl
adc
inc
leave
ds
clc
adc
in
inc
incb
mov
div
repz
clc
pop
sub
dec
mov
sub
mov
push
dec
ss
sbb
sub
jns
sub
popf
in
xchg
push
mov
inc
sub
add
xor
mov
xchg
imull
mov
rclb
pop
or
pop
cmpsb
pop
popa
mov
mov
inc
in
sahf
jmp
notl
aas
mov
fidivs
outsb
or
daa
aaa
xchg
nop
mov
sti
int3
push
in
mov
xor
inc
cmp
mov
paddb
leave
jecxz
lods
loopne
ja
push
or
frndint
pop
pop
jnp
lock
fcmovne
jbe
je
sbb
jbe
add
push
mov
popl
jno
daa
or
lahf
adc
and
mul
aaa
adc
repz
mov
stc
pop
aad
mov
popl
adc
je
pop
dec
jp
push
or
xor
mulb
movb
xor
faddp
or
pop
xlat
out
arpl
pop
cmp
mov
jle
fcomip
repnz
int3
inc
test
inc
cmp
stos
dec
and
aam
je
push
fcomi
xor
mov
shlb
outsb
es
mov
xchg
pop
jge
mov
fimuls
mov
xlat
fadds
mov
xor
and
insl
pop
sbb
cmpb
aad
sub
sbb
outsl
cmovp
icebp
mov
cmp
jle
cmpsb
movsl
mov
mov
mov
mov
popa
add
mov
jge
dec
sbb
cli
pop
andb
or
xchg
mov
dec
dec
call
les
test
xchg
sbb
adc
cli
xor
mov
icebp
andb
xlat
lahf
sub
test
dec
fistps
push
jb
add
push
ficomps
sbbb
enter
test
and
xor
jo
mov
outsb
dec
std
ficoml
test
test
das
test
and
fisttpll
cmpsl
adc
xchg
hlt
ds
adc
stos
mov
out
daa
dec
lret
sub
xchg
adc
iret
push
jo
add
decl
ret
push
jae
addr16
popa
movsl
sbb
movq
pop
sbb
inc
popf
jmp
mov
mov
sbb
jno
andb
xchg
testl
test
and
add
push
pop
jb
mov
ja
jnp
mov
ficompl
les
adc
dec
add
movsb
or
cmp
fwait
xchg
mov
pop
repz
push
inc
ljmp
aas
adc
cmp
dec
fwait
in
mov
sub
xchg
fsubrp
jmp
inc
cmc
out
adc
inc
pusha
int3
adc
lock
xchg
xchg
loope
pop
mov
cld
mov
push
mov
cmp
sub
insb
and
and
xchg
insb
jnp
idivb
aad
out
or
fucomip
femms
adc
mov
movb
xchg
andl
dec
or
lds
sbb
jp
fs
pop
pop
sbb
mov
in
sub
repnz
and
lcall
mov
dec
xor
cmp
loope
insl
into
shlb
fdivl
or
test
xor
enter
xchg
repnz
popa
jmp
jbe
adc
inc
mov
test
cmp
jbe
mov
shll
jbe
mov
rolb
adc
mov
push
test
mov
sub
inc
xor
jp
arpl
out
jnp
into
jl
jge
cmp
jecxz
lahf
jl
dec
lea
fisubl
dec
push
cmp
push
mov
xor
out
scas
xchg
and
lret
ffree
mov
lahf
push
aaa
dec
push
cmp
es
out
add
sarb
dec
mov
test
mov
pushf
dec
pushf
loope
inc
div
sbb
movl
jb
jge
cmp
lods
into
mov
popa
mov
push
cli
scas
ss
dec
movsl
inc
notb
fistpl
lret
test
sar
and
pop
jne
add
mov
subb
pop
lret
or
outsl
ss
jno
xlat
cmpsl
adc
cwtl
xchg
imul
std
pop
out
cmc
adc
adcl
xor
and
rorl
das
mov
ds
ret
mov
dec
outsb
sar
jns
ljmp
pop
mov
xor
and
negl
fwait
rcr
out
testb
pusha
loope
testb
sbb
inc
ss
mov
mov
leave
inc
test
adc
aas
inc
mov
sahf
addr16
cmpsw
xor
mov
inc
jb
andb
movsb
add
add
inc
mov
mov
xchg
fadds
cmp
bound
sbb
in
scas
sbb
pop
mov
and
sub
jne
test
mov
sti
repz
leave
xchg
sarl
bound
lock
inc
sub
sarb
ss
and
stos
dec
sbb
and
jo
sub
inc
push
xor
push
aam
adc
fcoml
add
inc
imul
out
sahf
inc
xchg
or
aam
fs
popf
push
xchg
mov
push
ret
or
pop
add
xchg
inc
inc
dec
arpl
imul
nop
mov
addl
pop
inc
enter
push
shll
cmp
fwait
ljmp
nop
mov
in
sbb
xor
or
or
sbb
in
test
loopne
into
ss
cld
xor
out
or
repz
rdpmc
mov
scas
dec
ror
imul
jb
insb
out
dec
fsts
int3
xchg
outsl
lea
fistl
mov
das
or
xlat
and
mov
fldl2t
push
pushf
xor
push
in
mov
and
lods
mov
sbb
stc
lea
and
mov
push
into
lret
cwtl
scas
scas
or
jmp
shlb
xchg
xor
fldt
lods
fucom
inc
xor
imul
cmp
test
xchg
fs
mov
jp
fcoml
xorl
add
dec
mov
enter
mov
pop
pop
push
xchg
adcb
pop
mov
dec
sub
xchg
pop
push
and
aam
lds
cs
push
cli
test
xchg
cmp
adcb
mov
out
adc
pop
jnp
loopne
scas
jne
lods
and
movsb
jp
mov
sbb
add
mov
push
and
and
fstp
lahf
stos
sbb
addr16
fcoms
rolb
or
xorb
ja
movsl
inc
int3
pop
lret
es
xchg
push
push
mov
test
icebp
jns
and
cli
mov
push
ja
gs
xchg
mov
fisttps
adc
pop
cmc
das
sub
mov
add
xorl
inc
ja
jo
sbb
xchg
call
mov
and
fwait
lret
or
push
jb
jmp
fs
cmp
inc
xchg
fldt
fdivl
das
int3
test
push
sub
gs
jle
decb
add
inc
pop
outsb
inc
jo
cmpsb
mov
popf
adc
cs
dec
xchg
push
cwtl
xor
mov
push
rol
push
cmp
aam
inc
ja
ret
push
xchg
fcmovnbe
test
lock
aaa
push
or
jbe
ficoml
mov
mov
fmul
out
jp
movsl
aas
add
sbb
push
xor
pop
jg
adc
xor
jg
in
cltd
arpl
and
and
add
orb
cmp
add
imul
mov
mov
inc
pop
mov
xchg
aad
jns
movsl
shl
sub
push
xchg
in
shlb
scas
inc
and
mov
xor
pop
xchg
jbe
mov
xor
xor
test
and
xor
xchg
mov
sbb
ja
call
dec
sti
and
movsb
popa
dec
mov
and
ds
add
das
sub
faddl
arpl
js
jo
and
mov
adc
push
arpl
xchg
pop
push
cmp
inc
aad
dec
push
or
punpckhwd
mov
out
sbb
push
test
shll
hlt
popa
pop
mov
mov
add
jne
bound
pop
inc
fdiv
mov
addr16
push
pop
xchg
mov
sub
stos
mov
cmp
lods
adc
adc
pop
popa
jmp
xorb
push
rcll
inc
mov
lods
les
or
mov
mov
cmc
mov
cmpsl
push
cmp
subl
jns
arpl
cld
in
and
adc
push
shll
cmc
enter
fistpll
inc
and
and
jp
pop
pop
pushf
pop
lahf
jno
call
sub
int3
xchg
push
sub
cltd
mov
data16
xor
fbstp
popa
enter
lods
cmp
mov
int3
cld
rolb
add
pop
popa
loop
cltd
movsb
sahf
mov
inc
xchg
movsl
aad
in
out
mov
aas
mov
es
xor
ret
jns
pop
add
lret
jo
mov
push
test
stos
mov
and
das
lods
aam
mov
push
sbb
test
fyl2x
xor
addr16
push
andb
insb
jg
mov
push
cmp
mov
sub
lds
push
cld
push
mov
xchg
lcall
xchg
popl
jnp
adc
sub
push
outsl
out
mov
lods
or
or
sub
pusha
inc
into
mov
fbld
jnp
mov
xchg
repz
pushf
ficompl
add
aad
nopl
movsb
mov
and
pop
jle
icebp
xorl
out
push
jl
sub
mov
add
test
and
xchg
mov
lock
dec
xlat
dec
ja
pusha
xchg
adc
pop
jo
jno
test
les
insl
mov
adc
out
nop
inc
pop
mov
pop
stos
stos
sub
or
mov
lcall
inc
aad
xchg
fs
cmc
mov
dec
dec
aad
fdivrl
ret
popa
decl
cmpsl
cmpsl
jbe
aas
pushf
or
subb
and
and
push
mov
stos
out
mov
jbe
pop
cli
lods
mov
jne
adc
sti
jl
outsb
aam
int3
dec
fistl
sahf
xor
and
movsl
ljmp
inc
fwait
testl
movsl
sub
inc
decl
xor
add
jae
in
stos
dec
push
add
jge
dec
mov
mov
xor
in
or
mov
push
lds
jmp
outsb
aad
lret
push
push
or
mov
cmpsb
push
jnp
cmp
test
xchg
dec
adc
xor
mov
and
push
imul
scas
mov
jp
pop
sbbl
mov
sahf
jnp
pop
pop
inc
dec
iret
pop
xor
ret
enter
sbb
std
add
xor
pop
gs
add
pop
andps
rcrb
adc
mov
fcoml
push
sahf
mov
popf
fldcw
pop
fbld
sbb
icebp
sbb
dec
dec
sub
mov
mov
mov
adc
test
cmc
out
dec
xor
int3
and
mov
push
mov
roll
pop
adc
shlb
push
repnz
mov
sahf
popf
sbb
fwait
stc
loop
or
mov
push
jecxz
frstor
imulb
mov
or
sbb
and
popa
addr16
inc
mov
scas
icebp
xor
es
mov
sahf
cld
test
push
xor
in
pop
pusha
xchg
scas
pop
inc
icebp
testb
in
int3
jns
out
jle
dec
cmp
test
pop
jb
jnp
mov
jmp
je
push
int
cmpsb
push
cltd
jae
dec
pusha
fcoml
leave
adc
jmp
stos
jne
dec
ret
jecxz
xor
stos
in
and
jae
call
inc
imul
mov
push
addr16
pop
mov
in
fistps
add
fistps
in
fnsave
loope
loope
lea
loope
push
addr16
negl
rclb
outsl
pusha
pop
test
fstpt
sub
jne
cmp
sbb
or
pushf
pop
jg
repz
dec
je
and
stos
pop
and
imul
es
add
ret
push
sbb
rcrb
fs
out
sub
imul
add
popa
testl
xchg
imul
fsts
out
jg
inc
arpl
jno
mov
gs
ljmp
fcoms
push
jp
int3
pushf
sbb
or
cmp
je
mulb
pop
push
sub
push
shrb
mov
jno
mov
aaa
cmpsb
outsb
in
push
pop
imul
sub
lods
fbld
cltd
pop
cmc
imul
rcll
add
enter
add
xor
add
and
mov
sbb
jnp
inc
test
shlb
xor
cwtl
loop
push
sub
stos
sahf
cmp
mov
bound
fistl
mov
out
lods
dec
mov
pop
jne
stos
jle
mov
scas
mov
push
sbb
push
rcr
jge
lret
dec
fadds
cmpsl
mov
add
dec
jmp
xchg
add
and
or
in
outsb
xor
pop
ss
imul
xor
das
jmp
mov
movsl
mov
and
dec
inc
test
mov
cltd
or
addl
add
push
sub
xchg
jbe
ds
icebp
fidivrs
pop
das
inc
fcoml
fwait
lahf
mov
leave
cltd
mov
xor
sub
bound
jge
icebp
jbe
mov
adc
pop
inc
enter
arpl
mov
xchg
dec
scas
mov
insb
mov
sub
fcmovb
daa
arpl
sbb
mov
sub
test
in
mov
adc
ret
fsubrs
and
cmp
xchg
sub
mov
out
sbb
or
repz
sti
test
inc
fwait
xor
arpl
inc
fucom
ss
pop
xchg
cs
pushf
daa
fwait
fwait
fs
sbb
xchg
jne
dec
subl
push
xor
push
sub
mul
lret
movsb
repz
jb
cmp
lea
leave
or
cltd
nop
jo
or
popf
inc
xchg
push
mov
sub
mov
pop
imul
inc
scas
xor
mov
mov
enter
sbb
sbb
cmp
cld
cmp
xorl
sti
repnz
pop
sub
rol
pop
lret
jb
mov
rol
sbb
xor
dec
xchg
test
aas
push
lahf
movsb
or
into
cmc
push
lret
iret
mov
sahf
push
pusha
popa
adc
aas
fldcw
sub
jns
popf
cmp
inc
jne
cltd
xor
addl
das
add
or
mov
popa
lods
xchg
cmp
jg
mov
xor
push
inc
and
push
sahf
add
test
and
push
shll
adc
imul
xor
jnp
sbb
call
adc
stos
pusha
mov
mov
xchg
ljmp
or
scas
add
insb
jb
ret
mov
shll
pop
mov
jmp
jno
sub
cmpsb
and
jge
sub
and
ffree
push
out
repz
mov
ljmp
push
in
mov
lea
mov
bound
sub
test
push
inc
sbb
das
shrb
lea
jne
and
add
add
and
loop
je
or
xchg
stc
jae
sbb
sbb
mov
test
adc
sti
imul
bound
mov
jg
addr16
nop
sub
mov
in
fisubrl
pop
add
fimuls
sbb
mov
jp
addr16
pop
mov
push
loop
ss
mov
stos
repz
ja
fwait
xor
jbe
iret
jl
jg
fidivs
out
ss
adc
in
clc
shll
pop
stos
stos
and
push
int3
loop
stc
push
int
xlat
push
stos
jl
cmp
fwait
add
push
notl
pop
xor
enter
pop
int3
cmp
mov
sub
xchg
lcall
pusha
ror
mov
lds
sbb
cmp
or
dec
jns
add
jb
jp
cwtl
add
pop
jbe
push
gs
mov
fadd
loopne
mov
xor
repnz
push
mov
clc
mov
mov
cld
xchg
cmpsl
sub
aas
inc
dec
iret
push
push
jbe
push
ja
cmpsb
dec
xchg
and
rep
in
pop
rcr
sbb
mov
lock
negb
mov
jno
mov
roll
sbb
cmp
push
and
stos
xchg
test
dec
inc
out
paddsw
cmpsl
pop
sbb
xchg
jmp
push
stos
cmp
pop
dec
pop
popf
lods
insb
loopne
stc
fidivs
push
loope
adc
inc
mov
pop
shrb
cld
sbb
cmp
adc
ret
sub
popf
xlat
les
mov
sbb
inc
mul
add
leave
icebp
mov
out
ljmp
hlt
mov
idiv
cmp
pshufw
jne
fwait
ja
repz
loope
pop
adc
adc
pop
mov
mov
mov
or
adc
test
in
sbb
lahf
jns
call
cwtl
sub
sub
pusha
addl
in
aas
sub
mov
insl
repz
test
jle
pop
rcrb
adc
icebp
push
test
jns
imull
mull
cmp
aas
or
add
xchg
or
cwtl
xchg
and
jge
btr
inc
xor
es
dec
mov
pop
mov
fildl
jbe
dec
mov
int
adc
shll
mov
xlat
xchg
fs
pop
sbb
in
cld
sbb
cmpsl
loopne
arpl
insb
xor
jge
enter
adc
push
aaa
pop
inc
aas
cli
xchg
mov
cmp
ss
int3
out
dec
jbe
mov
loop
cld
xchg
pop
pop
aas
stos
xchg
mov
call
fistpll
push
xor
push
mov
xchg
fcmovne
lds
xor
sbb
les
test
and
mov
mulb
pop
adc
sub
push
lahf
inc
xchg
mov
mov
jl
cmp
adc
push
cmp
adc
pop
loope
and
dec
cs
out
sbb
rcl
mov
bound
add
fxch
mov
pop
stos
sbb
test
subl
mov
hlt
gs
xchg
mov
or
test
sbb
jg
jecxz
mov
mov
test
out
scas
sub
je
mov
pushw
and
call
clc
inc
mov
inc
ret
pop
cmpsb
sbb
mov
loop
enter
dec
outsl
add
jbe
mov
insl
ja
jecxz
and
cmp
push
dec
je
mov
fs
sbb
repz
repz
jle
lret
sub
cmp
add
jmp
inc
sbb
neg
fildl
nop
jmp
or
gs
add
push
into
out
loop
lcall
add
cmp
movsb
mov
or
adc
ds
adc
dec
push
stc
add
fs
notl
rolb
pop
mov
pop
push
arpl
mov
cmp
sub
add
sbb
pop
mov
int3
sahf
sarb
jl
push
lds
jmp
sub
loope
cltd
xchg
mov
lahf
push
test
sbb
jnp
test
mov
add
scas
andb
mov
scas
cwtl
push
out
xchg
xor
xchg
xchg
mov
sub
js
daa
outsl
jle
xor
test
sarl
inc
cmc
popf
jp
pusha
out
cmpsb
rcrb
pop
inc
cld
mov
in
adc
fstpl
cmova
pop
std
iret
in
jmp
or
adc
adc
mov
and
pop
pop
mov
test
mov
pusha
and
movsb
pushf
call
std
js
sbb
jo
je
int3
push
cmp
xor
movsl
lea
pop
xchg
das
into
jno
popa
popa
adc
or
inc
or
and
or
mov
stc
xchg
ret
mov
ret
nop
cmp
xor
repz
insb
insl
pop
sub
mov
arpl
push
push
sub
or
je
pushf
out
cwtl
fdivr
or
cltd
pop
xchg
xor
fcomip
mov
mov
push
push
mov
cltd
xor
mov
out
jge
mov
orb
les
jecxz
add
sub
stos
dec
push
rolb
mov
stos
ret
cmc
push
roll
sbb
roll
cmp
out
jnp
xor
add
icebp
sbb
insb
inc
pop
rcrl
dec
pop
lahf
sub
ljmp
and
jl
imul
pop
jle
mov
mov
mov
jno
sub
popa
dec
ljmp
push
sbb
mov
mov
rolb
or
and
andl
xor
cwtl
in
sbb
xor
ds
push
sbb
cmp
cmp
arpl
add
outsl
or
mov
imul
or
and
sbb
ret
sbb
int3
jp
in
cs
jb
in
ljmp
nop
pop
inc
sbb
or
cmp
pusha
or
sti
mov
aam
sub
cmp
pushf
dec
ficoml
xor
xor
jl
jae
sub
cmp
lods
test
pop
nop
ljmp
xchg
push
add
push
stc
sbb
scas
ret
out
cld
or
sbb
xchg
sti
pop
inc
aad
add
js
xchg
add
movsl
std
jl
out
or
dec
sbb
pop
cmp
sti
xchg
pop
sbb
xchg
sti
andb
mul
roll
cltd
in
inc
test
cmp
ja
mov
push
cmp
push
push
movsl
in
mov
adc
ds
jg
leave
add
das
gs
out
dec
pop
or
bound
and
aam
dec
adc
and
pusha
pushl
xchg
mov
test
loope
xchg
ret
mov
xchg
ja
into
and
cmp
lcall
cmp
loopne
mov
push
mov
sub
pop
jno
cli
stos
mov
in
sahf
push
jge
and
inc
gs
repnz
insl
fisttps
ret
cmp
cmp
push
inc
cltd
lods
dec
and
cli
das
cmp
add
popa
daa
hlt
and
add
pop
lock
jnp
jmp
icebp
pop
mov
mov
jnp
xor
test
outsl
es
mov
dec
or
cli
or
enter
ljmp
fbstp
imul
imul
push
repz
cmp
push
les
dec
jno
inc
mov
imul
int3
pop
pop
std
in
pop
add
jmp
cmp
dec
mov
jmp
xchg
or
fmul
repnz
fs
data16
call
xor
decb
push
rcrl
out
pop
pusha
ret
fisttpl
jne
scas
and
nop
stos
pop
ds
fcmovnbe
call
enter
or
mov
jnp
push
push
xchg
int
sbb
jne
sbb
jno
mov
and
push
subb
loop
jle
jmp
outsl
adc
sub
cmpsl
mov
scas
sub
push
les
and
shrl
pop
jl
push
cli
lock
clc
call
mov
popf
movsb
addb
and
jne
clc
andl
add
mov
nop
insl
shlb
xchg
xor
test
or
mov
mov
adc
movsl
jg
jb
mov
jecxz
flds
pop
mov
xchg
je
dec
sarb
pop
cmp
xchg
leave
push
mov
jg
int
xchg
mov
ljmp
xor
mov
xchg
loope
dec
std
jle
stos
dec
xor
adc
sub
push
pusha
sub
popf
ss
or
in
push
lods
lods
push
cmp
inc
stos
das
lea
add
imul
add
adc
daa
clc
add
insb
and
jmp
stos
les
mov
es
xchg
fcoml
add
stos
lds
cwtl
les
cltd
rcrl
negb
xchg
push
aaa
xchg
xor
xchg
andl
cli
pop
sbb
es
push
push
jg
cmpsl
mov
movsb
jo
into
push
movsl
call
pop
mov
js
inc
fstl
mov
in
push
mov
or
jns
inc
add
loopne
push
cmp
push
add
mov
dec
js
cmpl
scas
mov
sbbl
adc
jg
or
push
stos
or
movsl
sbb
mov
lret
sarl
add
pop
insl
pop
and
or
lds
popf
cs
imul
mov
popa
leave
jp
inc
pop
daa
sbb
iret
insb
mov
dec
cli
xchg
adc
cmp
dec
lods
test
sub
push
sbb
out
inc
incl
xchg
out
inc
jg
stos
adc
lret
push
sub
mov
and
ds
iret
xor
cmp
sti
mov
jp
cmpsl
sub
add
sbb
mov
mov
insb
mov
test
popa
xchg
cmp
out
test
inc
jg
repnz
adc
or
mov
icebp
adc
daa
sbb
andl
mov
gs
push
test
mov
std
add
mov
adc
fsubl
mov
add
lahf
cvtps2pi
mov
cmpsb
enter
cld
sti
call
dec
xchg
jg
inc
pop
stos
push
mov
pop
jne
xchg
push
pop
test
cmpsb
fidivl
mov
hlt
out
pop
push
and
jmp
popa
mov
xor
mov
xlat
add
mov
add
or
outsl
xlat
andb
test
pop
mov
mov
pop
xchg
sub
stos
icebp
sub
dec
rclb
sarb
mov
lds
pop
repz
push
sbb
outsb
jns,pn
ds
out
xchg
adc
out
call
xor
inc
add
iret
push
cmp
js
push
iret
ret
dec
mov
stos
cmp
or
jne
sbb
movsb
les
cltd
movsb
push
mov
enter
sbb
mov
sub
add
notl
mov
jne
jp
ss
mov
adc
lahf
or
out
icebp
outsb
enter
pop
xor
je
cwtl
jnp
nop
popf
jne
in
cmp
bound
std
sbb
gs
fs
mov
dec
inc
pop
ja
addl
mov
test
addr16
push
outsb
push
in
lcall
push
outsl
push
jg
jno
incb
sbb
push
push
adc
cli
dec
je
addr16
ja
pop
mov
adc
cmpsl
rcrl
lods
sbb
adc
jo
cmp
add
push
shl
imul
or
sub
mov
sbb
push
movsl
fxch
push
fwait
arpl
sbbl
or
xchg
sub
xor
jl
std
imul
iret
popf
sbb
xor
xchg
sbb
repnz
pusha
cmp
std
lds
imul
sbb
rcr
cmpsl
leave
sti
pop
jmp
mov
sub
call
sbb
repnz
rcrb
sub
or
cmpsb
mov
bound
sahf
hlt
pop
lea
mov
pop
sbb
shlb
sbb
lea
mov
into
push
addr16
pop
mov
inc
pop
pushf
das
je
fucomip
rcrl
push
add
leave
cmp
xchg
jle
sub
std
maxps
mov
push
in
mov
in
xchg
insb
add
idivl
pop
shrb
xor
xor
loop
mov
mov
fsubl
rclb
pop
mov
aam
clc
pop
arpl
sub
sub
sub
into
push
test
pop
push
inc
xor
mov
sub
imul
pop
mov
es
lock
pop
pushf
ljmp
imul
arpl
test
xor
push
xchg
int3
out
push
and
jge
sub
into
clc
out
imull
pop
lret
orb
test
cmp
std
clc
pop
adc
test
mov
out
lods
adc
out
in
cmp
pop
imul
sbb
sti
push
sbb
cmp
cmp
jle
add
repnz
movsl
fsubl
fidivl
sti
outsl
dec
xchg
push
mov
roll
inc
loope
leave
or
adc
mov
addr16
movsl
jae
out
popa
and
lahf
push
scas
or
imul
xchg
cmp
aaa
xlat
loop
sub
cltd
jo
add
sbb
cltd
inc
push
fdivrl
lcall
adc
and
sbb
and
sti
sbb
dec
ret
cmp
inc
shrl
sub
push
mov
xor
sbb
fisubrl
stos
cli
enter
xorl
add
or
test
sub
pop
mov
xchg
scas
xor
int
xchg
and
hlt
jns
aas
mov
or
dec
outsb
add
xchg
mov
das
aaa
mov
ds
popa
mov
pop
dec
add
jl
mov
daa
xchg
jmp
testb
iret
push
loopne
add
or
out
mov
pop
jecxz
or
aam
sub
sub
cmp
cmc
cmpb
gs
hlt
adc
fldt
add
rorb
push
clc
add
jge
mov
lock
inc
ret
int3
pushf
insl
pop
icebp
adc
pop
jecxz
inc
mov
inc
sbb
push
ljmp
enter
mov
andl
ret
adc
and
popf
repnz
xchg
jo
sub
add
xchg
push
int3
aam
jg
sub
cmp
nop
sbb
and
jg
or
jb
xor
lea
imul
out
cwtl
test
dec
clc
jmp
in
popf
xchg
jg
mov
and
rclb
mov
cltd
or
cmp
sbb
sar
or
xchg
or
lret
ljmp
repnz
in
scas
insb
push
add
pop
ds
sbb
divb
pop
outsb
mov
fadds
jne
jp
cwtl
jge
lret
stos
movsl
mov
out
add
mov
or
repz
mov
loope
sbb
adc
les
or
jl
jmp
nop
movsl
fisubl
in
sbb
outsb
mov
jbe
mov
xor
mov
pushf
lret
mov
add
sbb
bound
sub
jae
outsb
cmp
jns
ret
repnz
mov
jle
hlt
jnp
subl
repz
movsl
jg
stos
shrl
xor
lods
pop
dec
cmp
jo
in
pop
cmpsl
mov
sbb
gs
fwait
loope
adc
xor
movsl
insb
jae
lret
mov
sti
adc
jmp
loopne
jge
push
and
push
jg
jnp
scas
cwtl
mov
inc
sub
inc
js
in
push
test
mov
adc
mov
cmp
inc
repnz
jmp
and
icebp
sti
cld
shrl
mov
mov
adc
ror
shlb
in
jmp
outsb
or
nop
out
orl
add
clc
mov
call
stc
lds
cmpl
xor
outsl
cltd
scas
sub
cmp
jp
scas
mov
add
jle
dec
mov
leave
test
pusha
xlat
fcoms
insl
mov
and
mov
sub
fsubrp
mov
lret
int3
mov
pop
dec
dec
push
sbb
lea
in
loop
fwait
mov
imul
addb
repnz
sub
push
cmp
cmp
ljmp
scas
subb
and
mov
fidivs
xchg
xchg
jmp
xchg
shll
xorl
pop
cmp
cld
stos
loopne
stos
mov
push
lods
push
sbb
in
test
and
clc
inc
mov
je
cmpsb
hlt
mov
mov
inc
stos
lock
cmpsb
in
cli
pop
call
pop
cltd
xor
inc
out
dec
fistps
arpl
shr
dec
push
in
je
ss
or
loope
push
lds
imul
mov
inc
mov
mov
repz
sahf
xor
fsubrp
rep
icebp
push
sbb
rorb
jb
add
cmp
incb
in
push
mov
and
sbb
xchg
pop
adc
sub
int
sub
sahf
pop
jne
jo
jge
scas
mov
and
dec
adcl
icebp
rolb
sbb
lock
loopne
ret
and
push
cmp
loop
lods
lods
orb
mov
sub
add
fwait
mov
loopne
jno
rcrb
lds
stc
out
cmp
stos
aaa
mov
bound
sarl
mov
jmp
andb
push
mov
into
insl
jg
fwait
jecxz
and
xchg
push
jge
push
add
mov
and
in
hlt
pop
enter
pop
jecxz
std
inc
insl
push
fidivs
sbb
lret
movl
sahf
mov
imul
or
fst
jbe
iret
inc
adc
pop
inc
out
or
insl
aas
loop
lds
adc
rcrl
clc
scas
push
lea
sub
or
test
call
add
or
mov
shlb
fsub
jp
cmp
dec
lret
mov
add
xlat
roll
loop
xchg
out
push
xchg
sub
or
ljmp
mov
stos
filds
xchg
sub
loopne
push
or
push
pop
fimuls
cli
push
stos
cmp
adc
cmp
jmp
lret
xchg
or
pop
cmp
mov
sbb
adc
ja
ret
sub
mov
xchg
adc
xchg
xor
test
push
clc
and
xor
pop
sub
invd
test
inc
out
pop
loope
cld
adc
cwtl
jg
xchg
mov
or
jge
inc
inc
add
loopne
loop
lods
lea
loopne
xor
xchg
test
mov
outsl
pop
arpl
aad
stc
jb
gs
stos
jae
jns
ljmp
xor
out
pop
sahf
push
mov
sbb
stc
mov
pop
int
push
std
lcall
push
ret
imul
lret
fstpl
mov
dec
push
push
sub
shlb
stos
or
mov
push
dec
inc
fst
loop
pop
inc
das
pop
fchs
test
mov
andl
push
imul
jbe
mov
stos
xchg
aam
or
mov
mov
cmp
leave
mov
inc
adc
jmp
jge
dec
jnp
div
mov
insl
jmp
pop
adc
add
cld
inc
lods
push
adc
bound
fwait
enter
les
call
lahf
jbe
data16
push
dec
les
mov
inc
pop
xchg
xchg
mov
cmp
sbb
push
pusha
stos
mov
lods
xchg
enter
cmp
ret
addr16
cmp
pop
add
scas
xchg
mov
aam
push
cmp
lods
sahf
mov
lahf
lret
lods
push
mov
inc
ss
aaa
adc
xor
jmp
pop
cltd
mov
xor
shll
mov
ss
pushf
pop
mov
push
xorb
xchg
movsl
push
sub
movsl
lock
cmc
in
xchg
sbb
push
mov
add
jo
cmp
and
inc
insb
loope
imul
xorb
std
out
xor
push
push
mov
and
sub
push
jg
andb
cmpl
sub
mov
sbb
sarb
push
cli
jnp
cld
mov
mov
mov
icebp
lcall
into
mov
arpl
sarb
je
pop
cld
inc
push
adc
mov
aaa
stos
fstpl
xlat
dec
daa
aad
fdivrl
out
xchg
adc
jmp
jl
js
mov
sahf
jle
pop
mov
and
xchg
aaa
cwtl
mov
cmp
jp
inc
mov
add
pop
push
xchg
cmp
push
and
and
aas
mov
mov
mov
jl
stos
jp
cmpsb
andb
lret
pop
mov
ja
lods
stos
cmp
into
adc
mov
stc
daa
lock
pop
gs
js
jno
xchg
push
movsb
ds
sbb
daa
cmp
fstpt
jge
divl
mov
movsl
stc
cli
lcall
sub
jl
popa
out
or
jne
cmp
jns
add
or
push
arpl
and
xchg
push
cmp
je
mov
or
xor
fisubl
movb
bound
bound
cld
loopne
jae
mov
andb
sbb
out
loop
jno
insl
cmp
ss
hlt
popf
inc
mov
testl
and
push
leave
hlt
shll
outsl
rcrl
or
add
push
out
mov
dec
test
pop
push
clc
pop
push
jbe
lds
jg
loope
ljmp
fmuls
xchg
mov
pop
add
repnz
stos
pop
jge
int
add
mov
jecxz
mov
sbb
mov
push
or
pop
push
or
pop
iret
mov
movsl
lcall
int3
into
mov
inc
sbbb
ret
and
push
inc
dec
mov
sahf
push
inc
xchg
pop
xchg
cmp
lods
bound
xchg
test
call
ljmp
in
stos
add
xor
lock
mov
fists
push
sub
fisttpll
add
decb
ja
dec
test
std
je
sbb
repz
imulb
inc
cltd
cmpsb
mov
loope
push
mov
xchg
dec
push
jns
mov
sub
lods
jg
inc
jmp
xor
xchg
xchg
into
icebp
jp
in
les
dec
or
cmp
xor
or
dec
and
movsl
fistpl
pop
adc
scas
mov
push
add
lret
jne
dec
push
xchg
xchg
jmp
shrb
mov
mov
and
sahf
jecxz
push
sbb
es
and
xor
mov
or
arpl
repnz
pusha
sbbb
jo
popfw
out
mov
lret
bound
mov
repz
test
push
aam
jne
xchg
js
cltd
sti
and
je
mov
into
jns
mov
pushf
jmp
ds
mov
fadd
outsb
imull
cmp
push
into
and
movsl
inc
pop
mov
mov
sub
filds
xchg
aas
std
pop
movl
ja
in
pop
cmp
adc
cli
push
lahf
jge
adc
aas
add
rorl
mov
test
jbe
cmc
cli
cmp
adc
cmpsl
nop
repnz
xchg
leave
cmpsl
cli
scas
int3
rolb
enter
adc
ljmp
cwtl
jno
out
cld
sub
out
scas
cmp
push
cltd
xor
xor
mov
dec
aaa
mov
xchg
xorb
cmp
ds
insb
mov
scas
push
aam
xchg
lods
push
inc
in
cmpsb
sub
dec
ffreep
aaa
jne
mov
inc
mov
pop
mov
mov
push
adc
sarb
sbb
mov
adc
leave
mov
cwtl
sub
lcall
mov
and
xchg
dec
lds
outsb
rorl
loopne
inc
sbb
pop
xchg
xchg
call
mov
or
add
pop
rolb
jbe
sub
aaa
mov
cld
sbb
add
mov
test
pop
cmp
sbb
sbb
push
push
dec
jl
aad
pop
fs
xor
stos
sub
xchg
mov
cld
push
nopl
in
mov
cmc
or
iret
ret
rcr
mov
jl
xchg
fcoms
movsb
xchg
jbe
incl
in
mov
ljmp
das
mov
movsl
pop
mov
xchg
or
mov
imul
cmp
mov
and
into
lcall
sbb
xchg
clc
push
not
push
insb
loopne
sbb
jecxz
push
jns
enter
sub
sbb
je
jle
push
repnz
and
icebp
cmc
push
fsts
shlb
fstps
clc
scas
popa
imul
add
sahf
pop
jns
add
lods
xor
mov
sahf
outsb
leave
push
gs
adc
mov
mov
inc
incb
xor
jae
aaa
pop
test
sub
movq
sahf
mov
hlt
mov
outsl
xlat
sub
xchg
inc
dec
mov
pop
xchg
rclb
push
push
sub
movsb
xchg
lcall
mov
movsl
dec
scas
ficoml
mov
sub
jae
or
lret
add
call
push
jo
std
sbb
adc
faddp
push
fdivr
mov
pop
fcmovb
push
jns
lock
push
pop
out
pop
fdivl
mov
jmp
lcall
jp
out
inc
xlat
lock
test
jb
lea
out
loopne
stos
sub
push
pusha
out
imull
fs
xor
mov
lock
lods
data16
out
mov
popa
bound
rclb
mov
mov
xorb
sti
pop
pop
fisttpl
mov
xchg
jmp
push
notb
xlat
push
sahf
dec
gs
push
inc
jp
and
stos
mov
pop
pop
push
sub
or
push
fists
or
lret
lea
pop
in
push
shlb
mov
jb
or
repnz
add
jmp
lret
inc
addr16
and
orl
adc
in
mov
sub
test
xor
xor
or
push
les
dec
ds
nop
out
or
mov
fnstsw
mov
loopne
cltd
push
pop
movl
testl
adc
lret
add
adc
and
divb
jge
xlat
add
outsl
push
sub
cmp
xchg
in
mov
mov
scas
js
jbe
aaa
sahf
lods
rcrl
mov
and
mov
jle
jp
or
in
jo
or
roll
pop
idivb
mov
pop
push
fwait
push
pop
movsl
pop
sub
and
cmp
dec
leave
fcomp
test
cli
add
mov
fmull
out
push
data16
dec
or
cs
rcll
push
dec
test
pop
push
adc
pop
fldt
outsb
fs
adc
repnz
ds
pop
insl
pop
imul
jb
js
and
je
add
addr16
hlt
xlat
jp
dec
push
cmc
pop
mov
daa
addb
or
sub
in
ds
cmp
dec
add
insl
jo
out
sbb
pop
sbb
and
std
fdivrs
adc
jbe
icebp
sbb
pop
and
or
mov
or
ss
and
cmp
jecxz
daa
aad
rcrl
lret
push
lret
lahf
call
inc
in
into
add
mov
jae
jmp
stos
movsl
sbb
dec
repnz
cmp
push
sbb
std
pop
mov
inc
das
sbb
jns
xor
sahf
pop
out
pop
addr16
xchg
sub
movsl
dec
movsb
jnp
push
lret
movsb
or
xchg
fisttps
test
das
mov
xor
mov
fcomps
scas
mov
jmp
adc
jge
mov
inc
sbb
ffree
push
cmpb
shl
fwait
loope
insl
je
cli
mov
cmpsl
popa
sbb
fistps
ret
sbb
and
mov
add
adc
iret
jmp
orb
call
xor
push
cmc
or
mov
cmp
shll
push
fimull
push
pop
sbb
data16
iret
jne
adc
sub
xchg
or
add
xchg
xchg
xor
lods
dec
test
in
push
sahf
mov
push
lahf
outsb
pusha
fs
jns
push
ficompl
daa
adcl
mov
bound
rolb
pop
or
loopne
inc
adc
addb
sub
jl
ficoml
nop
pop
and
push
jns
test
sbb
and
push
jge
insl
add
test
lcall
jne
ds
stos
frstor
ret
inc
dec
in
inc
jno
ror
adc
cmp
jg
add
inc
sbb
cmp
popf
popa
lds
ss
popf
insb
mov
insl
adc
xorl
or
push
out
mov
push
pop
arpl
mov
mov
into
xchg
xor
xor
dec
xor
xchg
or
pminsw
aas
sub
les
nop
in
jp
out
inc
shlb
fmuls
mov
mov
xchg
inc
xor
xor
pop
jno
fwait
fwait
fwait
pop
mov
and
test
push
xorb
lret
ret
push
mov
loop
pop
inc
inc
pop
push
inc
dec
hlt
xchg
bound
cltd
je
jae
mov
adc
movsb
rcrb
mov
rorl
pushf
push
jmp
fsubl
imul
lcall
and
add
arpl
mov
loope
or
insl
jl
inc
call
ficoms
mov
sbb
push
adc
push
movsb
js
aam
xchg
or
mov
add
addr16
adc
lock
insl
xchg
mov
adc
cld
sub
inc
movb
push
inc
int
inc
adc
sub
adc
jmp
or
mov
adc
dec
push
mov
gs
cmp
sbb
jbe
addl
mov
dec
dec
jecxz
in
lret
pop
add
inc
setno
iret
pushf
daa
add
dec
mov
dec
jl
pushf
js
cmp
fucomp
popa
subl
sub
pushf
xor
nop
adc
cltd
into
pushl
insl
imul
cmp
sub
push
mov
mov
rcl
test
cwtl
dec
and
push
mov
cwtl
imul
push
adc
sub
addr16
iret
cmp
mov
movl
push
sub
mov
stos
push
cmp
mov
fiadds
and
aas
cltd
into
xor
jbe
sub
push
pushf
rorl
add
jbe
cld
dec
std
sub
pop
iret
mov
movsb
andl
mov
pop
adc
and
push
movsl
sub
mov
push
inc
fst
and
jecxz
adc
gs
mov
sub
lock
add
inc
mov
in
sbbb
lret
cld
push
mov
mov
mov
xchg
or
lock
ret
es
xchg
ret
int
loopne
inc
sbb
shrb
stc
test
popl
xor
data16
int
aas
pop
rcrl
add
cmpsl
outsb
jno
outsb
dec
or
or
clc
mov
sub
addr16
pcmpeqd
scas
jb
sbb
push
lea
sub
inc
xor
orl
pop
add
fcmovb
mov
fistpl
dec
popf
lret
in
fwait
dec
orb
pop
fwait
mov
and
fnstcw
lret
sbb
mov
in
sub
jo
sub
or
daa
or
dec
jae
cwtl
addr16
inc
push
cmp
andb
nop
pop
imul
mov
daa
xor
in
outsb
sub
test
jp
daa
pop
and
inc
pop
mov
int3
mov
fdecstp
add
push
add
popa
repz
inc
jo
cld
gs
dec
xor
dec
aad
mov
cwtl
out
fisubrs
ljmp
into
pop
outsb
mov
loope
repz
lds
cmp
cmp
into
push
adc
or
mov
cmp
mov
in
call
push
sti
push
gs
cmc
adc
dec
cld
push
icebp
push
xor
leave
dec
incl
fwait
sbb
cmc
das
lret
xorl
jl
and
add
pop
lahf
xchg
mov
push
invlpg
fsubr
push
xor
fwait
loope
popa
push
sarl
dec
inc
mov
cmpsl
arpl
xlat
mov
xchg
jmp
and
rcll
and
mov
insl
mov
xor
lods
iret
les
out
add
shl
push
icebp
cmc
outsb
movsl
pushf
mov
lods
sub
fstpt
hlt
scas
shl
popa
push
mov
xchg
mov
jns
mov
cmp
xchg
xchg
push
adc
jg
hlt
sub
std
js
stc
lods
and
and
bound
mov
popa
movl
jb
bound
jmp
pop
mov
loope
decl
inc
sahf
xchg
sub
pop
push
stc
mov
xchg
mov
fildl
cltd
mov
push
aas
mov
pop
pop
dec
nop
pushf
lret
or
sti
aas
inc
out
xor
xchg
fnsave
fmuls
cmpsb
cmp
inc
jno
add
jecxz
cmp
add
xchg
in
cmp
push
dec
pop
pushf
xchg
testl
fistpl
sarb
ja
push
add
mov
mov
arpl
cmp
jmp
dec
pop
leave
xor
in
cmc
popf
jne
loopne
filds
jns
mov
movsl
cld
mov
loopne
sub
sub
xchg
xor
std
outsl
and
mov
dec
aad
xor
sti
xchg
and
pushf
fcomps
loop
fucomip
int
xor
out
adc
rcll
xor
clc
test
sarb
lds
mov
mov
push
mov
add
and
addb
dec
pushl
nop
or
mov
mov
lock
test
inc
fidivs
je
test
lods
or
repnz
loop
arpl
sub
xor
cmp
and
cld
addr16
fdivl
add
rcl
enter
imul
xor
xchg
insl
ret
xor
mov
inc
pop
in
jne
pop
inc
jge
mov
js
loop
mov
mov
cmp
or
and
mov
and
add
pop
popa
lahf
and
xor
sub
adc
or
sbb
mov
inc
loope
lea
mov
in
sub
pop
push
add
sti
add
div
xor
adc
cmp
scas
xor
stos
adc
in
mov
je
mov
aad
jp
es
push
test
and
outsb
inc
xor
fdivr
fucomi
jge
add
and
push
mov
push
pop
xchg
adc
mov
lods
ljmp
bound
adc
cmp
push
jmp
pop
mov
xlat
and
gs
dec
mov
cmp
pop
std
cmc
cmp
jg
mov
inc
in
push
and
es
pop
mov
out
dec
repnz
lock
sub
add
mov
adc
mov
push
fdivrl
or
mov
pop
sbb
ja
jl
out
rcl
sbb
pop
xchg
aam
in
fcomp
lahf
inc
idiv
hlt
jno
mov
idivb
push
test
pop
ret
out
push
xchg
push
cmpsl
sbb
aaa
hlt
mov
jl
mov
or
leave
cmpsl
pushf
adc
mov
mov
mov
and
or
fwait
int
loope
test
movsb
ja
into
jle
in
dec
iret
mov
xchg
inc
loope
loopne
in
xchg
xor
sbb
jb
xlat
mov
mov
mov
pop
mov
cmp
scas
nop
and
mov
mov
inc
xchg
jb
movsb
xchg
inc
test
int
dec
call
les
sub
lcall
and
callw
xchg
enter
pop
nop
mov
cltd
in
mov
stc
sub
push
and
arpl
pop
mov
addb
syscall
cs
or
pop
popa
jl
xlat
addr16
or
push
mov
test
repnz
ja
xchg
mov
inc
ret
out
movsb
dec
cltd
inc
cwtl
jg
and
fwait
sub
ficomps
or
xor
cmpsb
or
xchg
aaa
insb
daa
and
add
das
loope
pusha
aas
xchg
push
push
movsl
cmp
stos
call
dec
add
in
dec
inc
es
mov
lods
xchg
xchg
sbb
jmp
lahf
mov
je
sub
cmpb
sbb
xor
pusha
adc
pop
mov
pop
jl
add
add
iret
mov
xor
ja
stos
rcrb
scas
push
int3
sub
jb
arpl
or
and
lea
dec
dec
outsl
fisubrl
cwtl
into
mov
scas
daa
test
test
xor
pop
inc
jb
xchg
or
sbb
jnp
loope
popa
ret
adc
decb
sub
cs
inc
dec
fs
adc
xchg
mov
dec
mov
addr16
dec
dec
and
pop
lret
cld
mov
lods
sbb
ljmp
mov
jae
mov
adc
fldcw
inc
stc
test
mov
mov
jnp
push
repz
mov
loopne
test
push
dec
subb
lahf
adc
dec
testl
adc
jg
add
pushl
subb
lret
cmp
in
and
repz
fwait
outsl
frstor
fs
aad
jle
ret
dec
fstp
cmp
fsubrs
xor
lcall
ret
scas
out
adc
aas
or
pop
cmp
out
sahf
mov
scas
fmul
ljmp
pop
jl
enter
push
sub
enter
jo
int
xchg
mov
in
mov
imul
loopne
dec
test
pop
cmc
dec
xor
arpl
in
lcall
mov
nop
iret
outsl
cmc
arpl
bound
repz
in
popa
inc
cli
pop
imul
push
loop
nop
pop
jne
outsl
pop
or
lahf
inc
cmp
cld
sub
inc
mov
sar
push
hlt
pop
fidivs
or
outsb
ds
pushf
push
dec
andb
sbb
in
hlt
rorb
imul
jnp
jns
inc
iret
mov
pop
xor
cmp
faddl
stc
pop
pop
shrb
std
outsl
sub
jle
cwtl
js
mov
hlt
add
or
mov
jmp
push
movsb
bound
ljmp
add
xor
mov
loope
push
cld
add
jns
aaa
pusha
pop
shr
jb
cwtl
jb
xchg
mov
leave
aaa
std
insb
add
jo
adc
adc
mov
or
inc
stos
jne
lea
mov
movsb
push
loop
inc
mov
push
jl
mov
mov
mov
lret
xchg
pop
pop
adc
xchg
fildl
add
fisttpll
inc
test
and
xor
leave
jge
cmpsb
dec
mov
mov
test
adc
lcall
cmp
outsl
inc
sub
mov
xchg
in
shlb
inc
push
dec
dec
or
sbb
pop
jmp
sub
sbb
out
push
add
pop
pop
test
add
icebp
pop
mov
push
inc
lods
and
or
dec
jmp
unpcklps
scas
or
pop
pop
test
popf
pop
arpl
loope
inc
popf
jns
add
lcall
mov
fmuls
mov
sahf
xchg
mov
push
pop
testb
mov
jecxz
jae
xor
cmovne
cmpsl
outsb
enter
es
mov
or
push
stos
loop
xor
fnsave
aad
mov
jne
mov
pop
bound
cmp
mov
mov
and
jno
inc
push
sub
popf
fistps
cmpsb
pop
mov
lret
mov
icebp
in
gs
aam
mov
pop
adc
sbb
movsb
push
jbe
cld
jb
std
fisttpl
fwait
lret
add
subb
adcl
or
and
imul
fnsave
push
scas
repnz
sbb
mov
mov
add
out
in
call
rorl
shll
xchg
enter
mov
imul
rcrl
popf
push
and
jecxz
hlt
out
adc
and
inc
cmpb
sarb
or
mulb
jmp
lret
popa
fcom
xor
sub
movsl
ror
push
xlat
pop
cmp
mov
adc
test
inc
sub
add
mov
dec
mov
sbb
mov
pop
fs
jns
xchg
pushf
inc
push
das
fdivr
dec
test
jg
push
test
sub
icebp
add
sub
cmpsl
sbb
push
push
push
mov
mov
pop
and
outsb
inc
ljmp
loopne
clc
cmp
call
dec
inc
jne
inc
jo
shrb
cmp
mov
inc
aam
push
jg
aaa
fidivrl
jno
enter
lret
mov
or
movsl
popa
jmp
and
shll
adc
popa
adc
mov
push
int
mov
or
pop
pop
add
imul
call
sahf
or
rorb
gs
lods
pop
pop
sub
sub
mov
mov
add
cwtl
or
lret
movsb
add
fs
cmp
push
dec
lret
lahf
stos
mov
add
les
inc
mov
jecxz
and
pushl
repnz
add
test
and
push
add
je
bnd
mov
push
inc
ss
in
xchg
adc
push
mov
lret
repnz
in
clc
outsb
dec
cli
dec
movsb
add
das
dec
dec
sub
xchg
xchg
sbb
cmp
adc
add
dec
cli
adc
in
jecxz
add
mov
subb
hlt
or
dec
test
test
mov
popf
std
sub
cmp
test
cld
lcall
jb
adc
in
cs
inc
pop
mov
jb
mov
cmp
cwtl
loopne
push
in
shll
sbb
push
dec
loopne
je
jge
leave
mov
xor
sti
inc
ret
sbb
ja
out
rcll
jb
xchg
push
insb
mov
jmp
out
cmp
add
xlat
dec
arpl
testl
cmpsb
inc
or
dec
xor
cmp
cmpb
adc
out
aam
fwait
clc
fisttpl
jnp
fstpt
addr16
pop
inc
pop
sub
mov
push
and
stos
arpl
out
cmp
fnstsw
xchg
loopne
sahf
int3
xor
mov
cmpsl
pushf
jp
xchg
clc
inc
outsb
fadd
lds
pop
fisttpl
loopne
test
fldt
enter
lods
cmp
push
adc
inc
lret
push
enter
pushf
call
dec
pushf
adc
sub
dec
push
push
mov
fnstenv
add
and
gs
bound
and
mov
lret
imul
shl
les
fistpll
jmp
stc
add
push
add
lret
xor
out
dec
push
push
xor
scas
outsl
pop
push
inc
ss
hlt
or
in
and
cwtl
or
lods
adcb
xchg
or
adc
lahf
stos
mov
scas
frstor
sbb
add
cmpsl
dec
add
aas
mov
pusha
icebp
push
frstor
stc
lods
pop
ja
xor
ss
xchg
pop
movsl
stc
add
gs
mov
repz
xchg
adc
jno
push
mov
jne
movsb
fimull
cmp
out
xor
stos
xchg
and
jl
shrb
push
add
sub
popf
repz
loop
int3
fnstsw
push
xlat
shrl
das
mov
dec
sbb
in
test
adc
stc
mov
sub
lcall
mov
mov
test
mov
scas
or
mov
mov
inc
aaa
inc
fdivrs
aam
adc
inc
pusha
mov
inc
rorb
int3
mov
sub
cmp
ror
xor
shll
mov
jnp
sub
mov
enter
repz
sbb
rolb
mov
push
pop
shll
es
jne
aas
stos
lock
xlat
into
pop
push
cmp
ret
shlb
fidivrl
cwtl
jmp
xchg
loope
pop
jnp
sbb
jge
dec
sub
xchg
rclb
dec
jno
mov
fidivrl
or
jmp
mov
jbe
mov
pusha
aad
jo
repz
aam
hlt
push
test
js
cmp
pop
sti
mulb
jle
add
mov
cltd
inc
scas
jecxz
out
shlb
repnz
xchg
add
repnz
lar
fldl
xlat
dec
shlb
jne
inc
lock
pushf
movsb
imul
sbb
aaa
mov
push
xchg
add
jecxz
xchg
out
cld
inc
push
sbb
rorl
mov
push
cmpsb
fwait
aad
mov
cwtl
adc
sub
lahf
sbb
test
mov
mul
sbb
test
fucom
cmp
xchg
test
mov
js
leave
sub
mov
xchg
mov
mov
stc
mov
mov
pop
dec
inc
jns
sbb
rcll
mov
scas
mov
xchg
dec
xor
ss
or
jle
fdivrl
mov
mov
mov
in
mov
and
div
lcall
loop
mov
xchg
repz
mov
cld
xor
lret
das
je
clc
fildl
push
std
sub
int3
enter
fmull
xorb
shl
bound
jge
out
out
mov
mov
in
nop
rorl
shll
ss
enter
add
fldt
xor
inc
and
dec
lds
pop
je
aaa
lock
pop
cs
call
mull
ljmp
arpl
mov
or
and
std
or
jp
js
pop
push
out
lock
fstps
cmp
or
xor
pop
cltd
cltd
addr16
rcll
incb
in
loope
test
pop
cmp
hlt
mov
je
std
push
xchg
xor
xchg
ret
jmp
out
ret
jnp
fsubrl
lods
mov
push
jge
mov
push
cs
adc
sahf
jo
sub
dec
test
jle
pop
imul
or
sti
loop
xlat
cli
push
pop
push
push
push
push
push
cmp
mov
jecxz
mov
xchg
cmp
lcall
mov
sub
aaa
adc
fstl
shll
test
jbe
xchg
jnp
decl
inc
mov
loop
cmpsb
xchg
fisubs
adc
outsl
add
xor
inc
dec
int
fwait
lahf
outsb
pop
cmpsl
stc
sahf
sahf
es
cld
adc
inc
mov
pop
insl
rdpmc
sub
jle
and
mov
cmpb
mov
stos
inc
jns,pt
fdivrl
and
loope
mov
mov
mov
cmp
je
or
stos
mov
test
push
in
inc
pop
fadds
add
lods
mov
mov
cmpsb
jnp
inc
xchg
orl
add
adc
cli
and
xchg
pusha
pop
cwtl
mov
push
aad
les
lret
mul
es
out
or
cmp
in
mov
fidivrs
mov
inc
repz
adc
insl
sbb
shlb
mov
and
xchg
sbb
xchg
popf
dec
popf
inc
in
jecxz
and
xchg
sbb
mov
popf
inc
pop
jle
mov
mov
in
cmpsb
loopne
lods
sarl
dec
pop
mov
xor
or
mov
decb
stos
data16
mov
decb
aas
pop
inc
repz
leave
mov
daa
add
into
nop
push
adc
lret
loop
jp
ret
pop
je
les
cmp
adc
lea
icebp
lcall
inc
add
mov
sub
jg
fwait
in
mov
ss
xchg
pop
add
pop
mov
lret
pusha
push
test
aas
push
sub
loop
test
sbb
std
add
adc
add
jge
jnp
pop
mov
out
pushf
aad
pop
push
push
js
push
sub
arpl
mov
push
mov
push
fxch
jbe
std
hlt
repnz
cwtl
mov
sub
push
lcall
pop
mov
push
jnp
jns
fidivrl
adc
outsl
into
xchg
mov
push
test
sbb
adc
mov
add
push
sub
les
jecxz
clc
imul
adc
add
mov
rcl
xor
pop
out
push
addb
sti
mov
scas
movsl
push
sub
push
jmp
or
shlb
lods
cmc
sbb
stos
cld
mov
push
movsl
jge
lea
ret
add
sbb
lahf
sbb
mov
dec
jle
sub
dec
into
mov
xchg
xchg
subl
push
mov
test
movntps
xlat
xor
mov
push
jbe
fists
xchg
or
cmp
pop
dec
int3
jl
add
ret
add
popa
dec
jnp
inc
or
pop
cmp
hlt
cwtl
pop
stos
insb
adc
dec
and
cmp
mov
fisttps
mov
push
aam
xchg
ds
xor
mov
in
enter
and
lea
aam
add
add
jp
sbb
dec
pop
call
inc
mov
lahf
testb
inc
xor
push
imul
xor
lahf
dec
xchg
movsl
xor
push
imul
dec
and
jp
out
test
push
clc
int
xchg
jge
leave
stos
iret
mov
sbb
pop
adc
std
inc
mov
mov
xor
jb
mov
xor
mov
cmp
ret
push
loopne
xor
jb
cli
scas
ds
or
cwtl
add
lods
or
scas
pop
mov
and
xchg
push
sub
fldl
movb
mov
mov
pop
ret
lcall
adc
mov
jbe
mov
stc
cmp
cmp
aaa
xchg
cli
in
jbe
imul
fsubrl
ret
jbe
adc
popf
rolb
loope
adc
lds
mov
pop
mov
jl
loope
dec
scas
ja
and
or
in
adc
add
in
mov
push
pop
mov
pop
xchg
lods
sub
mov
mov
jb
add
js
mov
push
pop
lret
sbb
dec
mov
jbe
push
inc
aas
or
push
outsb
cmpsl
lock
fsubs
imul
cmp
notl
xchg
roll
lods
ja
rcrb
cmpsb
jno
sbb
mov
mov
imul
mov
imul
jge
call
rcll
data16
ds
adc
enter
pop
loop
stos
lahf
mov
loope
mov
call
mov
ret
xchg
popa
mov
fsubp
mov
subb
sub
das
xor
adc
pop
dec
ljmp
push
xchg
inc
pop
adc
ret
imul
in
lret
lahf
lahf
in
lods
xchg
fbstp
jp
clc
leave
cltd
jne
pushf
and
push
mov
lock
cmp
ds
jg
inc
and
das
shll
pop
and
sbb
pop
lret
out
cmp
xor
jbe
dec
pop
ficompl
jp
sbb
into
cltd
xchg
xchg
adc
fisubs
or
ja
mov
lock
add
cmp
xchg
mov
dec
fadds
dec
mov
mov
pop
sbb
xchg
inc
popf
pop
lret
stos
add
dec
pushf
or
lret
mov
add
inc
push
sbbl
jg
mov
jnp
jmp
push
mov
sahf
jne
mov
lea
sbb
and
iret
out
xchg
and
ds
iret
adc
stos
dec
inc
movsb
aas
ljmp
hlt
jge
scas
rorl
sub
dec
imul
std
test
fimull
lds
or
xlat
test
and
insb
ds
mov
and
aaa
jbe
test
cli
add
out
mov
sbb
in
stos
xor
lock
outsb
clc
push
cmp
and
out
mov
cmpsl
imul
sti
inc
dec
push
mov
nop
mov
inc
ret
cmp
push
leave
add
jne
sbb
sbb
iret
test
test
adc
mov
adc
aas
adc
test
xor
add
adc
xchg
sti
inc
jmp
xchg
ss
movsb
dec
xchg
filds
stos
aad
divb
mov
xchg
inc
inc
inc
das
dec
cmovge
push
sahf
popa
popa
pop
push
test
cwtl
mov
call
pop
hlt
push
adc
xchg
rcrl
cmpsb
mov
push
cmp
aas
push
mov
sbb
shrb
les
popf
insl
sbb
inc
nop
or
mov
push
in
sbb
xor
call
in
fnstenv
dec
mov
cli
cwtl
outsb
add
jno
dec
mov
add
fsin
icebp
loop
mov
les
mov
lahf
and
sub
stos
xchg
nop
bound
xchg
jmp
and
xchg
jnp
addr16
jmp
cmpsl
cli
std
dec
mov
ret
adc
mov
xchg
rcrb
cwtl
aam
inc
pop
mov
adc
in
mov
imul
clc
loope
push
icebp
frndint
ss
xchg
sbb
jnp
xchg
mov
repz
xlat
sbb
sbb
pushf
ljmp
daa
inc
fidivrs
push
pushf
jb
and
fucomip
xchg
lcall
lea
xchg
sub
in
icebp
fwait
xchg
or
fcomps
cmp
fldl
ds
mov
popf
testl
pop
or
out
jle
lcall
cmp
cmc
cltd
inc
sub
adc
fldenv
int3
lods
in
and
mov
push
test
xlat
xchg
pop
mov
and
data16
ret
arpl
mov
xchg
popa
fwait
xor
arpl
pop
test
daa
cmpsb
or
sbbl
loope
xchg
outsb
sub
add
test
mov
xchg
or
pop
xor
imul
imul
lcall
mov
or
cwtl
adc
out
mov
and
in
movsb
pop
sub
out
ja
lock
adc
loop
dec
repz
sbb
add
ljmp
aaa
push
push
cltd
lcall
je
cld
cltd
jmp
xchg
lds
je,pn
adc
dec
cmp
jbe
insl
enter
out
dec
jmp
mov
scas
stos
loop
pop
repnz
jb
inc
pop
pop
ja
mov
aam
inc
inc
xchg
push
ret
inc
out
nop
test
cli
sub
aas
sbb
mull
xlat
inc
mov
in
test
and
push
sti
orb
aaa
cmp
ss
add
push
cmp
mov
dec
hlt
in
xchg
inc
xchg
and
ljmp
mov
nop
push
sti
pusha
inc
and
imull
pop
cs
subl
in
stos
add
pushl
push
nop
dec
aas
inc
jg
clc
loop
and
inc
jne
xchg
insb
int
test
lret
mov
jle
mov
test
testl
das
fidivrs
je
insb
test
xchg
in
out
and
out
imul
mov
arpl
mov
inc
cltd
sarb
or
inc
ss
gs
bound
fwait
int
cltd
adc
or
dec
cmpsl
rolb
test
repz
cs
jle
out
in
push
adc
inc
pop
mov
stos
ss
adc
jmp
sbb
stos
mov
test
pop
movsl
push
xchg
or
mov
jp
xchg
sbb
pop
inc
into
inc
test
out
xor
pop
pop
mov
mov
push
xchg
rorl
lds
in
jg,pn
pop
and
pushf
jecxz
mov
int3
cmc
into
pop
xor
sub
mov
mov
adc
cmp
in
and
and
mov
sub
mov
addr16
jnp
push
mov
xchg
xchg
add
rclb
negl
jbe
mov
es
dec
imul
imul
and
jnp
push
sub
jmp
cmpsl
cs
movsb
or
mov
and
dec
fidivs
xchg
lret
pop
aas
mov
or
and
int3
sti
daa
sub
xor
adc
cmp
xchg
sub
add
shlb
pop
out
push
pop
jecxz
mov
in
pusha
pop
sarb
dec
mov
xor
mov
rorl
outsb
sbb
or
xor
into
xchg
enter
out
ss
rorb
push
mov
jge
imul
push
pop
cmpsb
aaa
outsl
lods
push
dec
dec
les
out
cmp
xchg
and
test
inc
shlb
scas
fcompl
cld
adc
and
lods
or
jae
mov
cmp
loop
push
mov
and
leave
mov
rcll
jecxz
xlat
jg
cmp
adc
lock
cmp
add
push
daa
fnsave
mov
ror
gs
cmp
or
pop
or
loop
jmp
sub
mov
lret
mov
fcmovb
pop
xchg
int3
sub
loopne
ds
loopne
cltd
imul
test
mov
pop
stos
xlat
cmp
outsl
inc
dec
sbb
fs
push
cmpb
jmp
dec
loopne
dec
inc
fbld
stos
push
adc
stos
mov
or
jb
xorb
cwtl
aad
or
push
shll
inc
push
out
push
xchg
jnp
arpl
pop
adc
sub
push
out
jp
or
xchg
in
push
ficomps
loope
inc
movsb
out
add
and
xlat
sub
push
and
rcll
sub
xchg
sbb
inc
leave
mov
insl
mov
loope
xchg
mov
int
jns
fwait
inc
fsts
pop
je
cli
mov
jne
sbb
xchg
stc
xchg
loop
popa
add
test
push
dec
les
pop
mov
test
fs
movsb
pop
push
cltd
enter
loope
dec
jge
add
insl
push
dec
cli
pop
mov
enter
add
stc
outsl
adc
nopl
xchg
dec
mov
push
pop
jmp
mov
push
js
xor
or
jne
popf
sub
rolb
ds
imul
fisttps
cs
mov
mov
jmp
mov
mov
push
dec
cmp
testl
ja
rorl
inc
pop
mov
mov
adc
inc
sarl
mov
sbb
cmp
les
push
cli
push
pop
pop
mov
xchg
divb
and
add
mov
enter
ljmp
mov
adcb
stc
fisubrs
xor
je
jb
js
add
bound
pop
popf
data16
add
cmpsb
enter
sarl
xor
xchg
push
cmc
push
mov
xor
lcall
and
or
scas
mov
pop
imul
lahf
xor
stos
movsl
sbb
insl
rcrl
jecxz
icebp
jnp
cmpl
push
jb
nop
and
sbb
cltd
add
or
mov
xor
sub
or
xchg
int
or
jae
or
cmpsb
ljmp
mov
push
mov
ds
push
lds
or
insl
aad
xchg
pop
sbb
imull
psubq
mov
cwtl
test
cmp
pop
arpl
sbb
loopne
dec
push
imul
insb
jl
mov
dec
xchg
stos
call
and
add
lds
push
mov
xchg
movsl
jno
in
popf
inc
ret
push
stos
fisubs
mov
cmp
push
inc
push
fcoms
rcll
and
sti
pop
mov
xor
gs
enter
ficompl
xor
or
test
sar
fldt
xlat
xchg
test
arpl
add
rolb
adc
adc
lea
xchg
outsb
jmp
loopne
cmpl
jle
push
insb
or
imul
cmp
scas
dec
call
jmp
push
loope
jbe
lock
mov
dec
nop
push
pop
pop
and
jmp
imull
sub
inc
inc
cs
loope
fcomi
inc
mov
testb
dec
inc
icebp
push
pop
std
mov
ja
fldl
jle
cmp
cmpsb
aas
mov
push
ss
push
push
ljmp
adcl
loopne
aaa
shl
mov
jg
nop
mov
cmp
push
call
push
aaa
push
sbb
sub
mov
fwait
dec
mov
outsb
push
jg
lods
int3
ja
jne
pop
lret
ja
pop
jle
cmp
loop
mov
sbbb
push
les
rolb
into
cmp
adc
jecxz
jno
cmp
jnp
jb
pop
jge
fisttpll
scas
sbb
ret
mov
cltd
call
inc
mov
test
mov
pop
loope
jbe
push
and
add
mov
push
pusha
test
xlat
jae
or
add
lahf
add
sbb
jmp
js
mov
ret
ljmp
test
jae
add
xchg
ret
dec
xchg
fildl
push
lret
push
dec
cmp
loop
xchg
mov
decl
into
mov
sbb
iret
adc
sbbl
std
push
adc
lods
and
fsubrs
xor
mov
stos
fcoml
negb
push
aad
imul
es
pop
push
ficomps
add
adc
jae
int3
jno
mov
fildl
outsl
fcoml
or
dec
mov
or
and
enter
out
mov
cmp
sub
sbb
jb
add
mov
mov
inc
lahf
sti
xchg
mov
jno
test
cld
lea
cmp
cs
in
add
fldcw
xchg
into
lea
stos
inc
out
loopne
jecxz
nop
sub
hlt
sbb
ljmp
cmp
rolb
neg
ja
xlat
sub
lds
aam
mov
lret
add
sbb
fbstp
out
les
in
sub
add
pop
sbb
repnz
out
sbbl
icebp
pop
bnd
pop
orb
iret
pop
jae
dec
mov
fxch
sbb
leave
and
lea
or
dec
ficoml
in
cli
rorl
fildll
lahf
enter
movsl
mov
lcall
pop
mov
pop
int3
and
xor
lods
sub
addb
pop
xchg
inc
clc
sub
or
loop
nop
loope
pop
incb
jp
push
xlat
xchg
mov
insb
inc
arpl
daa
cmp
movsb
mov
jne
icebp
in
lds
inc
fs
lods
mov
lods
sarb
fwait
add
ss
aad
stos
push
jnp
aaa
sbb
jmp
jl
cmp
ss
sbb
lret
les
jb
fxch
pop
dec
ret
arpl
aam
jo
rcll
cltd
jae
mov
mov
sub
sbb
mov
lock
jle
cwtl
mov
inc
xchg
mov
cmp
in
xchg
mov
imull
in
lea
jp
icebp
xchg
outsl
repnz
or
pop
cmpsl
jnp
xchg
pop
arpl
popf
mov
testb
les
jge
sub
pop
stc
cmp
fiaddl
push
push
gs
jl
lahf
aad
shrb
jns
mov
jno
mov
push
mov
adc
shl
insl
xchg
stos
adc
out
mov
pop
subl
shr
and
leave
lcall
jmp
and
jo
notb
push
je
fidivrl
mov
cld
dec
fstpl
mov
fwait
jmp
pushf
jo
mov
adc
mov
addb
adc
push
add
repnz
pop
rorb
das
movsl
dec
mul
in
mov
js
movsb
shl
jle
rorb
addr16
daa
call
jns
xor
sbbb
push
bound
loop,pt
mov
mov
cmpsl
popa
xchg
loop
les
lcall
mov
and
add
mov
test
push
sub
push
xchg
mov
sub
inc
inc
sbb
push
xor
dec
xchg
adc
add
bound
ljmp
xor
cmp
sub
jno
cmc
clc
pop
xor
pop
push
xchg
arpl
jmp
iret
mov
sbb
out
and
add
mov
xor
hlt
add
mov
dec
jecxz
stos
or
xchg
ret
test
mov
orb
jmp
lds
push
jno
push
cmp
adc
push
fwait
pop
xor
sahf
fwait
test
imul
xor
idiv
les
adc
mov
fwait
and
repnz
test
inc
and
or
xor
mov
cltd
movsb
jmp
out
sub
cli
inc
sub
out
push
fs
cmp
incb
mov
dec
pop
cmp
fnsave
mov
sahf
popa
push
test
cmp
filds
jmp
mov
xlat
sub
and
idiv
movsl
adc
push
jno
mov
xor
iret
lock
mov
sbb
ds
mov
into
mov
loop
add
xchg
loope
mov
sahf
jg
lods
scas
pusha
lea
cs
test
sub
xchg
jo
xor
or
sbb
inc
adc
loope
sahf
pop
dec
movsb
and
add
cld
fidivrs
mov
hlt
mov
xchg
xchg
or
xlat
mov
repz
lods
push
aaa
leave
adc
add
jle
sub
test
cmp
mov
data16
and
or
sub
push
cmp
jb
dec
or
sub
mov
aad
fstps
ret
je
daa
aam
adc
inc
sub
scas
pop
xrstors
dec
sbb
push
dec
add
inc
hlt
js
out
jne
push
sbb
mov
lods
das
and
scas
push
add
ds
adc
dec
ljmp
mov
lock
cmpsl
inc
das
push
sti
mov
lods
cmp
lcall
dec
in
into
mov
xchg
sbbl
outsl
std
cmp
cmp
movsb
jg
mov
and
add
jns
pop
xchg
hlt
or
xor
repz
xor
cs
mov
mov
xor
ljmp
int3
daa
pop
int
gs
dec
and
das
xchg
jns
lcall
or
xor
movsl
inc
mov
stos
sahf
jno
and
xor
dec
je
testl
sbb
iret
aas
sbb
or
inc
pop
pop
stos
and
and
rcrl
mov
adc
gs
sbbb
mov
dec
xchg
enter
push
xor
jns
or
and
roll
lds
pushf
fiadds
xor
frstor
pop
sbb
popa
ljmp
lret
and
popa
mov
dec
outsb
mov
andb
push
lods
mov
aad
loop
sbb
insl
js
icebp
and
jg
bound
and
clc
mov
xor
lcall
mov
inc
outsb
pop
and
notb
sbb
dec
test
in
ja
mov
inc
imul
dec
mov
iret
add
xchg
in
jl
gs
or
rclb
mov
add
sbb
cmpsb
push
xor
out
xor
arpl
cmp
lods
dec
lds
shll
in
sbb
subb
out
mov
pop
mov
aas
sbb
jmp
mov
push
fisubs
jp
or
cmp
stc
repnz
xor
lahf
mov
outsb
lahf
and
cmc
mov
nop
outsb
outsl
lods
lods
xor
fisubrl
test
push
and
lcall
leave
pop
pusha
gs
in
xlat
adc
mov
jecxz
add
dec
add
push
sub
cli
cmc
ja
xlat
cli
sbb
cmp
push
pushf
nop
adc
xchg
into
cld
dec
int3
adc
sbb
mov
testl
adc
xor
imul
ja
push
adc
mov
sbb
js
inc
jnp
xlat
xchg
sub
jle
cmp
ds
jo
xlat
add
xchg
shl
xchg
push
jmp
mov
jmp
int3
cmp
mov
cmpsb
sub
shlb
jmp
clc
dec
sbb
pop
out
sub
lret
xchg
out
frstor
lret
mov
cs
sahf
mov
push
and
jl
mov
in
sbb
sub
pop
push
ficompl
repz
inc
cltd
cmp
das
or
sbb
fwait
add
int3
cltd
and
enter
cmp
adc
andb
inc
shrl
out
daa
xlat
push
xchg
mov
fcomi
enter
mov
sbb
or
aad
cmp
fisttpl
and
or
testl
pop
aas
dec
inc
xorl
xchg
jae
imul
enter
addr16
adc
push
fwait
xchg
xor
push
xchg
and
push
jp
repz
push
int
dec
fstpl
leave
jno
repnz
jb
outsl
fs
mov
push
mov
mov
push
pop
aaa
mov
dec
out
scas
add
aaa
out
imul
jg
add
or
sub
xor
leave
aam
loopne
or
sbb
and
lret
sub
mov
pop
jnp
sahf
pop
sbb
mov
movsb
lahf
adc
adc
test
or
xor
aaa
cltd
push
lahf
sti
loopne
mov
test
mov
arpl
fs
mov
loope
pushf
add
mov
cmc
hlt
fyl2x
pop
lods
sbb
jecxz
and
mov
insb
and
bound
test
fdivrs
push
sahf
inc
add
data16
sbb
cmpsl
stos
into
lret
cwtl
jle
std
inc
faddp
mov
pop
mov
and
aas
mov
shll
pop
ja
fmuls
push
movsb
sarb
in
pop
insb
inc
enter
js
insl
xor
xor
or
jae
add
mov
pop
pop
scas
lret
pop
scas
push
and
cmp
rcpps
popf
pop
xchg
aaa
dec
jmp
lods
jmp
mov
mov
and
jecxz
mov
aaa
cmp
iret
adc
jns
push
test
sub
mov
fisttpll
sahf
out
lea
orb
ret
cli
xchg
sbb
or
mov
dec
mov
flds
inc
movsl
aam
in
pop
out
sub
in
mov
andl
shll
lods
push
sub
push
push
pop
cmp
cmp
outsb
mov
mov
xchg
pusha
fdivl
mulb
xor
out
push
inc
jne
jne
lock
pop
sti
push
shll
out
xlat
jo
sbb
cwtl
das
stos
out
dec
cli
out
mov
scas
stc
xor
adc
dec
or
cld
mov
popa
cmp
sti
sahf
xchg
cmpl
insb
in
fcomip
scas
decb
xchg
push
scas
cmpsl
test
cli
sbb
or
push
xor
inc
jge
daa
jg
mov
std
andl
dec
dec
mov
fucomip
movsl
pop
pop
push
xchg
xor
imul
cmp
sbb
push
cmc
mov
call
ljmp
insb
dec
ss
inc
sbb
int3
sub
xlat
push
icebp
and
xchg
fsubs
pusha
sub
stos
mov
jp
mov
xorb
ret
imul
rol
adc
fmul
mov
pusha
pop
movsb
xchg
jecxz
mov
xor
inc
jb
jne
dec
loopne
int3
imull
loope
fcomps
test
loope
push
mov
inc
cld
and
ds
ja
pop
push
mov
daa
mov
icebp
cmpsl
mov
lcall
leave
jecxz
jbe
sbb
out
xchg
dec
adc
cmpsb
nop
cs
nop
push
jae,pn
nop
insl
adc
sub
dec
xor
in
adc
movsl
scas
lcall
imul
inc
sbb
fsubl
repnz
jns
push
adc
je
adc
mov
in
mov
int
out
jmp
push
in
add
fisttps
les
mov
adc
lret
cmp
data16
xchg
fimull
jbe
loope
jl
mov
xor
or
add
or
movsb
inc
out
fiaddl
fwait
mov
out
test
daa
jno
sbb
repnz
mov
lcall
push
push
pop
ss
pop
or
xchg
jl
or
into
cs
dec
xchg
data16
enter
loopne
in
cltd
in
push
lods
push
lret
pop
mov
xchg
sub
cmp
dec
push
and
repz
cltd
dec
push
jge
sbb
loopne
cs
cltd
inc
fdivrp
pop
testb
cld
pop
in
imul
in
jne
push
call
ja
loop
sbb
and
adc
pop
lret
orb
stc
cs
enter
adc
loope
repnz
push
les
push
scas
adc
xchg
jne
mov
and
pop
das
aam
ds
lret
leave
idivl
mov
imul
pop
imul
sub
and
adc
sbb
psrad
test
xchg
ja
dec
ja
jae
movsb
cmpb
out
push
scas
push
shr
lcall
hlt
in
cs
out
insb
inc
ret
inc
jl
stc
movsl
loopne
jmp
xchg
loop
cmp
jbe
push
fadd
add
inc
jg
rcll
and
movsl
and
movsb
and
loope
inc
rorl
rorl
mov
aaa
dec
sub
call
bndldx
mov
push
jno
out
fiadds
pop
hlt
movsl
adc
mov
inc
lahf
mov
cmp
cmp
in
add
out
call
mov
or
jnp
jle
shll
sahf
mov
add
rol
sub
push
sahf
cld
gs
mov
lds
add
pop
jb
adc
sbb
jmp
lcall
dec
xlat
in
mov
pop
je
inc
add
jle
outsl
fcmovbe
adc
add
mov
adc
mov
pop
add
jmp
fwait
sti
inc
mov
or
adc
cmpl
in
into
ss
dec
xor
pushl
mov
sub
mov
lahf
flds
or
or
mov
mov
ret
pop
xchg
int3
add
inc
inc
adc
dec
dec
int
xor
inc
daa
cli
cli
jb
ja
imul
adc
hlt
repz
inc
adc
mov
dec
mov
sub
pop
fwait
shl
sti
in
pop
mov
jg
subl
sub
push
cmpsb
in
scas
inc
bound
in
pop
push
push
in
sbb
sbb
movsl
push
inc
mov
int3
jmp
dec
mov
pop
fwait
test
jnp
push
or
insl
aas
fdivs
or
cmpsb
idivl
jae
in
push
adc
test
cmp
in
jmp
out
arpl
mov
xlat
es
cmpsb
inc
out
xor
ds
dec
popf
and
mov
in
mov
pop
cvttps2pi
mov
loop
idiv
push
pushf
push
xchg
fidivs
cmpsb
pop
mov
arpl
jg,pn
push
mov
rcrb
inc
or
or
test
inc
mov
outsl
lods
sub
xor
sarb
aaa
popa
xor
mov
cmpsb
xchg
push
cmp
and
shrb
gs
or
aad
daa
sbb
mov
sub
pushw
dec
aad
stos
inc
mov
jb
add
mov
ds
arpl
lret
fcoml
out
aam
aas
leave
add
arpl
imul
aaa
sbbl
lods
xlat
iret
mov
in
insl
fxtract
push
les
out
or
push
jg
js
push
out
rorb
xor
stos
sub
dec
push
inc
jecxz
mov
push
mov
pushf
stos
or
loop
and
cmp
adc
inc
add
shlb
mov
sub
and
ds
fdivl
cmp
xchg
lea
nop
stos
decl
jb
xor
rclb
pop
and
add
out
push
sub
xor
idivl
add
cli
sahf
inc
and
lds
mov
push
andl
not
or
mov
add
fwait
sub
add
mov
icebp
repnz
xchg
out
mov
loope
push
mov
ret
rcrb
pop
pop
in
mov
pop
inc
ret
test
imul
incl
xchg
add
imul
jl
test
lahf
scas
dec
stos
and
mov
jecxz
in
cmp
std
lds
sbb
rorb
popa
inc
mov
js
sbb
push
jne
ds
xor
pop
xchg
call
out
sub
xchg
pop
jg
fidivs
incl
sub
xor
inc
push
addl
mov
arpl
loop
jo
sar
adc
push
inc
mov
cmp
mov
mov
jle
addl
scas
xchg
xchg
gs
sbb
jge
dec
lods
das
cmp
cmp
movsb
jl
jnp
arpl
pop
or
dec
inc
mov
xor
into
icebp
movsl
sub
pop
rcll
mov
imul
adc
xchg
stos
aam
mov
test
pop
mov
mov
push
xor
mov
xor
xlat
ret
xchg
rorl
cli
mov
bound
pop
cmp
out
jno
and
mov
jle
mov
sub
loope
mov
sbb
push
mov
add
and
cmp
andb
es
xor
add
push
aas
xchg
cmpsb
mov
in
jne
and
mov
cmp
pop
cwtl
test
mov
ret
mov
std
mov
sbb
sbb
rclb
lcall
es
dec
fcompl
adc
jae
mov
sbb
push
inc
inc
jb
push
sub
and
xor
fistl
lret
test
inc
fsubrs
mov
adc
sub
scas
ficompl
loope
out
mov
sub
popa
jb
jnp
mov
add
scas
sub
xchg
int
sti
clc
int
fmull
or
cmc
daa
ret
and
fimuls
xor
lcall
xchg
push
ror
pop
stos
mov
pop
fstpl
lahf
jae
sti
popa
out
inc
ja
cmp
ljmp
lret
orb
scas
jns
mov
jmp
ret
xorb
xchg
and
dec
int
add
add
movsb
push
hlt
jo
pop
mov
lods
dec
mov
jb
test
jg
push
inc
dec
imul
imul
adc
sti
dec
ljmp
pusha
add
mov
push
imul
loope
pop
je
lock
push
mov
or
test
xchg
scas
les
dec
jl
in
and
mov
push
mov
imulb
ds
jno
das
inc
adc
sbb
fwait
lret
mov
rorb
jne
cmp
clc
jb
enter
jmp
idivb
rcrb
push
jne
pop
out
dec
push
in
nop
jne
pop
mov
mov
adcb
gs
fistpll
sti
add
dec
nop
inc
jo,pt
mov
scas
sahf
sahf
out
dec
mov
ss
sub
sbb
mov
inc
ja
mov
jno
loop
sahf
pop
pop
stos
xchg
sub
lret
sub
mov
loopne
inc
dec
sbb
xchg
xlat
filds
dec
push
xchg
imul
xchg
push
jns
loope
pop
sbb
aad
mov
sti
cmp
shlb
test
sbb
sbb
lcall
lds
test
mov
mov
enter
jp
std
push
add
inc
mov
into
sbb
fsubrp
fldt
test
loop
sub
shrb
mov
lahf
jg
mov
cmp
cld
aad
enter
movsb
dec
or
push
js
mov
sbb
xor
add
and
std
jno
or
pushf
push
dec
cmp
or
dec
loopne
push
lcall
out
mov
insb
lcall
nop
int3
cmp
jne
rcrb
mov
push
push
jl
dec
clc
fs
ja
fldenv
inc
xor
jle
mov
addl
cmc
push
divl
iret
fdivrs
lods
and
imul
push
hlt
mov
mov
push
push
xchg
xor
std
jl
add
or
mov
movsl
das
les
iret
pushf
add
iret
and
insl
hlt
popf
or
sbb
mov
mov
mov
ss
mov
ret
insl
je
int3
icebp
outsb
out
sub
loop
cltd
cld
mov
mov
iret
cmp
ret
jmp
sub
push
jle
or
push
add
lret
inc
or
stos
inc
aas
adc
lcall
jmp
cmp
add
test
ret
cmp
jle
dec
or
andb
test
popf
pop
pop
adc
jmp
mov
pop
nop
call
jno
scas
adc
sub
sbb
add
xchg
mov
adc
mov
ficomps
add
in
jge
push
je
pop
std
sub
les
add
ljmp
aaa
cmp
mov
xchg
jmp
js
add
jmp
rcr
stc
sti
lcall
xchg
pop
mov
mov
inc
scas
sbb
jno
push
test
dec
lcall
mov
inc
int3
ret
xchg
mov
add
or
daa
fwait
xchg
stos
dec
jl
call
xchg
xchg
adc
pop
adc
mov
pop
divb
pop
jmp
xchg
ja
scas
sbb
mov
fwait
pop
mov
pop
cmp
add
ret
jmp
int
add
imul
imul
and
shll
sbb
push
inc
jmp
aad
test
or
push
stos
mov
sbb
pop
cmpsb
lods
mov
test
adcl
incb
inc
or
inc
inc
sar
popa
negb
xchg
or
aam
and
psubusw
jmp
cs
shrl
xor
aad
mov
hlt
jecxz
or
mov
and
cmp
popf
lahf
cmp
daa
pop
cmp
aad
testb
add
mov
jl
sbb
mov
sub
shl
lds
adc
mov
cmp
or
mov
dec
sbb
jnp
fstl
adc
sbb
pop
and
mov
pop
out
cmp
les
cmovnp
sbb
nop
mov
sub
adc
xchg
dec
leave
push
enter
aad
scas
or
scas
mov
test
std
pop
and
mov
xor
sahf
cmp
scas
popf
push
pusha
jno
aad
sbb
leave
cmpsl
leave
push
mov
dec
sti
push
mov
insb
push
out
sarl
mov
jge
inc
pusha
mov
fstl
aas
xor
xor
add
dec
loope
test
pop
mov
out
cwtl
bound
push
pop
xchg
in
mov
das
mov
xchg
push
or
popf
lret
adc
shll
sub
mov
inc
and
mov
cmpsb
mov
lods
or
and
ss
sbb
and
jo
lret
and
insb
icebp
jne
push
lods
jns
lcall
xchg
push
lret
call
dec
les
dec
cmp
or
cwtl
fisubs
inc
mov
xor
dec
rcrb
out
mov
adc
fstps
sbb
inc
mov
enter
xor
push
in
inc
hlt
sub
pusha
push
and
sbb
lahf
inc
xor
dec
add
jecxz
aaa
test
mov
mov
scas
movsl
addl
pop
mov
repz
test
adc
data16
lods
sub
fidivs
imul
xchg
fs
mov
das
jns
in
imul
ss
add
and
pop
and
jae
iret
jp
loope
les
imul
cmc
xchg
ret
fsubl
popf
popa
dec
js
jns
cltd
push
and
adc
or
scas
stos
ja
fdivp
xor
sbb
test
adc
dec
idivb
jno
out
int
adc
sub
rcrb
clc
and
les
imul
cld
push
push
sub
and
cmp
inc
subb
rorl
bound
cltd
daa
int3
mov
xor
xor
sub
pop
dec
push
pop
push
scas
mov
push
popf
cwtl
pmullw
icebp
lock
call
in
bound
movsb
pop
xor
icebp
or
cmpsl
xor
add
or
pusha
lea
adc
push
or
mov
push
pop
rorb
and
sub
sbb
pusha
push
add
jo
arpl
cmp
pop
adc
pop
sub
jb
fidivl
lods
js
into
pop
ret
add
mov
loope
ss
mov
sbb
shl
sbbl
adc
sub
leave
mov
cmp
nop
xchg
stc
jmp
and
and
cmc
fs
and
jo
pop
xchg
aas
fidivl
adc
sub
shll
sub
xlat
xor
outsl
adc
pop
stos
or
pop
mov
xchg
cmc
xor
cmp
loopne
aaa
add
sub
inc
inc
sub
xchg
pop
add
jg
test
cmp
sub
xor
addr16
add
adc
inc
mov
in
lods
fst
mov
dec
and
xchg
cmc
jns
cld
fsubl
stc
jecxz
or
pop
stos
addr16
mov
lods
pop
mov
lds
cmp
adc
sbb
sbb
cmc
jo
mulb
push
mov
pop
outsl
inc
movsl
inc
outsl
or
cld
aaa
lods
rcl
lds
stos
stos
mov
sbb
push
and
jle
movsl
mov
and
cmp
enter
adc
xorl
cs
mov
push
lea
push
out
cmp
sbb
subb
dec
fistps
pusha
fcomp
pop
in
jg
sub
cmp
adc
mov
add
cmp
inc
int3
loopne
fs
dec
jbe
divb
adc
jbe
jae
and
sub
sbb
sub
arpl
xchg
or
pop
loope
iret
push
dec
mov
mov
lods
sbb
adc
mov
jle
sub
jae
outsb
and
lock
jge
or
sub
aad
and
scas
fldenv
add
or
fdivl
ret
clc
fldt
jne
arpl
enter
in
xor
inc
push
pop
or
mov
loop
fucomp
and
mov
jmp
lods
pop
stos
pop
int
sub
cmp
es
push
xor
out
mov
scas
fucom
in
fsqrt
jns,pt
sub
jecxz
adc
mov
sbb
cli
mov
inc
and
stos
push
dec
loope
push
pop
mov
mov
and
pop
aam
or
lds
or
fstpl
mov
xor
sti
sbb
daa
jns
pusha
pop
imul
inc
pop
ror
pop
inc
mov
xor
in
roll
into
addr16
mov
jge
test
int
into
push
lods
loop
push
rcrb
test
outsb
aaa
xchg
stos
sbb
xlat
mov
xor
push
stos
push
inc
xchg
inc
mov
sbb
and
cmc
loop
mov
fwait
std
inc
dec
sub
addr16
pop
mov
xchg
pop
call
push
lret
adcl
mov
sub
test
fisttpl
dec
pop
or
sub
xchg
sbb
sbb
mov
cmpsb
hlt
adc
aaa
test
outsl
std
or
push
xchg
ja
pop
rorl
xor
jns
cmpb
loopne
mov
xchg
xchg
lods
lcall
clc
sub
imul
aam
xchg
fsubp
push
icebp
ljmp
adc
ss
jnp
xor
or
adc
jl
or
das
dec
stos
mov
hlt
pop
mov
gs
clc
call
pop
xchg
lods
cmc
movsb
xchg
sahf
popa
stc
xchg
and
dec
ss
jecxz
mov
and
arpl
xlat
js
mov
aad
push
je
stos
mov
and
push
lds
pusha
mov
fdivp
mov
and
out
pop
sbb
lret
or
mov
push
bound
shll
sbb
xchg
xchg
inc
mov
das
mov
sets
test
inc
aaa
dec
push
xor
fmuls
push
clc
jns
or
ror
arpl
je
fdiv
jmp
js
add
out
add
outsl
inc
shl
sbb
fwait
test
inc
clc
je
push
or
jmp
sahf
add
add
push
xchg
call
rcl
cmp
outsb
pop
dec
sbb
stc
jp
sti
das
jl
sub
jl
je
lret
mov
inc
lret
ret
sbb
jp
xchg
mov
out
sbb
push
cs
add
and
inc
sbb
jecxz
mov
call
sahf
ja
pop
or
mov
jo
add
iret
movsl
mov
lods
sub
push
push
aad
imulb
lods
pop
pusha
mov
fcmovne
or
int
loopne
stc
fmull
aaa
sti
lret
dec
sub
imul
pusha
push
mov
push
sbb
stos
and
mov
pushf
rolb
jne
popf
aad
in
bound
cmp
mov
rolb
inc
dec
lcall
mov
mov
sbb
mov
add
sbb
iret
cltd
pop
incb
pushf
sbb
pop
cs
addr16
mov
test
adc
int
cmc
ds
inc
sub
fisttps
cmp
jno
movl
cmp
sbb
fsubr
pop
ret
jmp
lret
push
fbstp
bound
jae
ljmp
add
shl
jg
cwtl
inc
cwtl
shlb
sar
in
jbe
rclb
mov
out
xchg
inc
jnp
xchg
out
dec
hlt
sbb
stos
jns
mov
sub
cmp
arpl
mov
pop
mov
pop
mov
xor
mov
nop
cli
adc
cmp
stos
push
sub
in
fimuls
aas
mov
adc
mov
and
dec
cmp
gs
pusha
xor
ficompl
jno
pop
xchg
sbb
cwtl
lcall
movsl
stos
inc
test
ljmp
loop
scas
js
push
pop
lods
mov
mov
outsl
mov
in
js
pop
cmpsb
cli
mov
push
out
sar
testb
rorb
sub
add
jnp
aam
sub
ds
sbb
daa
inc
dec
sbb
mov
out
inc
frstor
adc
mov
sub
int3
outsl
push
cmc
jb
popf
cld
insb
loop
mov
cwtl
jp
aad
nop
mov
shl
lock
push
sbb
repz
xor
loopne
dec
add
jg
movsb
pop
aad
cmpsb
adc
lods
or
mov
ret
enter
xorl
dec
popf
imul
pusha
xchg
or
sub
pop
sub
cmc
jle
idivl
push
xor
mov
xchg
mov
ret
popf
int3
rcrl
sbb
adc
mov
ljmp
sbb
mov
adc
sub
push
pmulhuw
pusha
movsb
mov
dec
test
xchg
jo
push
imull
shl
pop
push
sub
dec
inc
lock
jge
rcrb
ljmp
nop
cmc
ljmp
jne
pop
mov
lea
add
cmp
push
mov
out
jb
pop
sbb
and
in
push
imul
push
push
push
test
or
enter
enter
and
and
adc
insb
pop
lods
iret
or
xchg
stos
nop
push
jl
push
jns
cmpsl
cs
cld
jge
cmpl
cltd
cld
mov
xchg
lret
sbb
inc
sbb
shlb
in
or
cmpsb
push
rclb
add
clc
jmp
xor
ljmp
lcall
jecxz
setb
xchg
icebp
mov
int
pop
nop
add
pop
jno
xchg
cmp
pop
jecxz
mov
inc
pop
out
inc
scas
sahf
cmpsl
xchg
xor
and
inc
cs
pusha
pop
mov
pop
scas
int
jnp
lods
les
mov
lods
or
andb
pop
jecxz
ja
xchg
enter
into
jge
jnp
xchg
and
push
push
dec
push
hlt
fcmovb
fistl
das
mov
es
push
mov
test
js
shlb
scas
pop
lock
jne
xchg
in
push
test
dec
fistpl
dec
xchg
sbb
and
jo
orl
clc
sbb
xor
incb
sub
test
dec
pop
in
and
out
jle
cmp
jnp
xor
lret
cmpsb
fs
cmp
push
pop
jo
fisubs
push
jae
mov
fsubl
jbe
dec
xlat
sbb
push
dec
repnz
outsl
ljmp
insl
fsubs
lods
and
pop
sub
and
rorb
in
cmp
or
sti
pop
sub
stos
bnd
and
cltd
idivl
insl
lds
lods
dec
in
dec
inc
ljmp
shll
sbb
cmp
sub
lret
or
iret
lahf
jb
mov
cwtl
pop
and
jle
jle
fisubrs
pop
or
jge
test
pop
pop
js
lds
xlat
cmp
scas
data16
cmp
sub
xor
dec
mov
scas
inc
inc
clc
mov
fisttps
es
sahf
sub
aam
movsl
shrb
aas
jp
mov
test
mov
ret
in
lret
mov
mov
mov
xchg
mov
push
aas
fs
cmp
aaa
ret
ja
add
pop
lods
mov
mov
negb
shlb
iret
repz
lods
mov
mov
sti
pop
xchg
popf
es
sbb
daa
push
xchg
sub
in
pop
stc
scas
mov
loopne
jmp
dec
adc
mov
sahf
push
and
mov
xor
in
in
mov
stc
or
and
cli
ffree
fcoml
adcl
or
xor
sti
mov
xor
push
jno
pop
in
add
dec
repz
aas
xor
cld
fildl
xorl
sar
sub
pop
adc
cmp
mov
ret
mov
addr16
ret
push
stos
cmp
jns
xchg
ss
mov
cmpl
add
jne
adc
adc
jmp
addb
decl
mov
iret
cmp
mov
es
sbb
mov
loope
cmp
cmc
mov
xor
js
lahf
arpl
nop
xchg
xchg
and
or
add
popf
in
test
add
inc
negb
push
rclb
sub
rcl
sbb
out
inc
jno
cmp
jl
push
sub
movsb
mov
mov
pop
mov
stc
fisubrl
shll
or
scas
pop
sub
out
std
dec
inc
adc
out
addr16
arpl
add
addr16
aas
mov
pop
sub
mov
mov
pop
sbb
xchg
mov
lret
xchg
leave
xor
pop
mov
dec
insb
mov
jb
cmpl
repnz
xchg
test
fildll
hlt
sbb
fnclex
mov
ret
fwait
sbb
in
out
cli
xor
ret
lcall
sub
jno
in
xor
ljmp
jns,pn
mov
mov
jge
in
cld
xchg
pushl
into
bnd
insb
stos
mov
sbb
cld
mov
adc
adc
push
mov
cld
lcall
outsl
jmp
scas
test
fwait
push
cmp
or
jno
or
sub
mov
shrl
mov
sub
in
repz
bound
cmpsb
ja
loope
insl
mov
mov
test
lret
push
xor
adc
mov
cmp
incb
pop
inc
notb
or
es
pusha
fisttpl
daa
pop
adc
sti
ljmp
daa
hlt
insl
sub
and
pop
pushf
dec
or
mov
inc
xor
loope
les
dec
xor
decl
popf
shr
sub
test
pop
loope
ds
jmp
lahf
sub
xchg
aas
in
mov
js
xchg
test
push
hlt
outsl
andl
cs
imulb
inc
xchg
mov
rorl
cmp
sub
sbb
or
add
jmp
jmp
cmp
fwait
mov
dec
test
mov
int
push
aaa
pop
adc
mov
cs
mov
insl
inc
adc
into
fucomp
mov
jae
fisubl
aam
stos
aas
in
lods
sub
inc
cmp
and
rclb
repnz
xor
out
inc
ds
mov
icebp
xchg
and
cmp
mov
nop
pop
jo
aas
scas
mov
in
mov
push
xchg
lds
loopne
aas
lret
jg
mov
and
dec
jns
push
pop
push
aad
dec
pushf
mov
sarl
add
dec
adcl
aam
adc
hlt
dec
subb
sahf
inc
mov
enter
mov
sub
js
mov
dec
mov
jl
cmp
mov
dec
stos
jge
in
add
outsb
pop
pop
cmp
xor
out
test
xchg
loopne
cmp
adc
add
inc
outsl
sub
fcomps
sub
mov
or
sub
testb
dec
lret
xchg
adc
incb
popa
mov
push
rorb
jns
sub
cmp
sarl
repz
imulb
inc
sub
jne
dec
fcompl
cld
dec
sahf
mov
mov
nop
pop
in
outsb
push
xor
in
aad
push
enter
xchg
out
jp
cmp
xchg
popa
pop
jge
fsubrl
sub
inc
repz
repnz
sub
push
dec
push
cmp
test
dec
push
and
rorl
push
arpl
gs
sub
mov
xchg
rcll
xchg
or
lret
xchg
ret
fisttps
mov
inc
mov
clc
dec
dec
dec
xchg
xchg
or
xchg
jg
dec
jecxz
push
shl
inc
das
aam
push
out
dec
push
decl
sbb
mov
push
int
push
mov
pop
cltd
data16
pop
pop
cwtl
test
push
fwait
loop
push
loopne
enter
xor
insb
and
push
sarl
add
stos
sub
jb
dec
imul
inc
test
sub
mov
ljmp
test
push
mov
push
stos
cmpsb
ret
lret
in
fbld
pop
jp
leave
fcmove
or
in
cld
inc
incl
loopne
dec
cmpsb
and
testl
sub
popa
fidivrs
mov
push
sub
stc
insl
insl
push
sbb
nop
adc
adc
iret
ror
aas
out
aad
inc
push
scas
push
sub
mov
int3
out
inc
mov
out
aas
call
xchg
call
and
mov
sbb
aad
mov
fists
insl
movsb
hlt
jg
or
cmp
xchg
enter
jae
cmp
sahf
test
sbb
cs
lods
cltd
adc
cld
inc
enter
mov
imul
xor
xor
sbb
enter
push
arpl
lock
imul
push
dec
stc
loopne
sbb
jecxz
loop
jnp
sbb
aam
insb
test
or
fisubl
int
xchg
mov
cmp
push
adc
cmp
pushf
adc
sbb
dec
loop
aas
jo
clc
nop
and
imul
add
icebp
mov
popa
or
adc
sahf
int3
in
jbe
dec
mov
int
sbb
loope
mov
cld
pop
jmp
fnstenv
mov
hlt
stos
lds
or
sub
mov
cltd
daa
jecxz
aam
xchg
imul
push
jecxz
dec
call
mull
or
mov
rcr
mov
xchg
scas
pushf
stos
inc
xor
add
push
frndint
imul
mov
jae
cwtl
insb
sbb
xchg
cltd
popf
mov
stc
pop
push
adc
sbb
ret
cmp
mov
insb
push
sti
inc
enter
imul
scas
or
push
addr16
cmpsl
lea
stos
fmuls
mov
test
jnp
subb
adc
das
fstpt
sub
stos
xchg
aam
bound
mov
bound
pop
push
mov
out
das
test
testl
cmp
aaa
fidivl
mov
test
mov
lcall
pop
sbb
out
xchg
inc
pop
enter
insb
lea
mov
clc
and
fnstenv
dec
lock
mov
lret
jmp
cli
dec
fadds
insb
out
lods
outsl
jg
push
inc
stc
jmp
mov
orb
push
cld
divl
in
sub
sub
xlat
push
insl
out
std
sbb
loope
sbb
movb
pop
aam
mov
dec
inc
dec
cwtl
ss
mov
cmp
adc
pop
xchg
lea
in
aad
sbb
in
pop
icebp
or
cmp
stc
mov
out
pop
or
sbb
ja
out
stc
dec
subb
or
int3
clc
xchg
mul
dec
repnz
into
mov
adc
dec
popf
inc
lock
movb
int3
push
adc
xor
pop
jecxz
aaa
dec
pop
pop
mov
adc
insb
mov
test
cmpsl
mov
test
cld
pop
sbb
push
mov
mov
push
dec
shlb
mov
sbb
add
xlat
mov
lods
ds
sub
ficoms
dec
mov
lret
stos
stc
mov
fidivrl
ljmp
mov
push
ret
jae
sub
in
push
xchg
cli
jns
jg
mov
cmc
push
push
shlb
xchg
dec
cli
int
ret
mov
mov
fsubl
jmp
gs
lahf
call
js
icebp
sbb
xor
pusha
adc
or
sub
inc
scas
jne
mov
adc
mulb
pushf
and
scas
arpl
sub
movsl
fcompl
add
adc
cmc
cmp
outsl
fstpl
enter
push
je
stos
out
movq
cmp
lods
cwtl
mov
xchg
scas
imul
ret
movsl
xor
nop
add
aad
enter
xlat
pop
pop
push
sbb
add
push
and
dec
add
pusha
cld
inc
pop
in
hlt
cs
enter
mov
mov
cmp
inc
cmpsb
mov
mov
push
and
mov
fsubrl
subl
mov
outsl
push
es
cs
inc
or
push
repz
add
fidivrl
out
and
pop
cmp
std
gs
in
or
lret
mov
add
cmpsb
sub
addb
mov
add
iret
je
std
inc
jg
subb
sbb
enter
cltd
pop
pop
or
bswap
shrb
shll
pushf
imul
imull
mov
incb
rcrl
mov
andb
shll
std
nop
aaa
pop
addr16
mov
inc
pop
inc
sbb
in
adc
out
out
dec
inc
sbb
popf
scas
push
in
sub
cmp
rorl
hlt
sub
dec
shlb
nop
add
lds
das
push
xor
jp
cmp
mov
lret
push
cwtl
out
stos
cmp
ss
fsubrs
pop
sarb
testl
mov
mov
loope
push
sbb
loop
pushf
les
mov
add
jmp
gs
xchg
paddq
sbb
incl
mov
ret
out
pop
imul
shlb
popa
gs
ret
and
mov
adc
enter
mov
pop
mov
insl
sub
push
jmp
aaa
push
sub
xor
xchg
test
or
inc
jne
push
repz
and
push
fistpl
scas
pop
in
scas
jecxz
repnz
dec
push
mov
mov
dec
test
ss
mov
jbe
adc
icebp
or
dec
aaa
pop
sbb
xchg
rcrl
call
mov
jb
jns
push
mov
push
mov
sub
mov
jp
mov
ljmp
and
pop
cmp
das
fnsave
push
loopne
je
lret
xor
faddl
xor
ret
cmp
aam
loope
std
add
xor
lods
ret
test
cmpsl
js
jo,pn
push
adc
mov
repnz
addr16
fs
adc
ss
push
xchg
push
test
in
lea
imul
out
mov
cs
xor
stos
arpl
jecxz
int3
nop
push
outsb
lods
cli
xchg
pusha
mov
subb
dec
pop
jle
cmp
inc
push
sbb
pushf
pop
mov
xchg
mov
push
push
ss
test
clc
jns
sbb
jecxz
or
xchg
adc
roll
sbb
gs
jno
and
js
mov
sbb
sub
es
fimull
pop
mov
mov
xchg
into
ss
fldcw
cld
ret
xor
sub
inc
test
push
pop
call
lret
push
xchg
cmp
cmp
sbb
ds
jge
insb
dec
lds
sbb
lea
popf
es
daa
shl
pop
fnstenv
jg
into
xor
std
inc
sub
push
mov
pop
or
sti
or
pop
mov
cmp
cmpsb
inc
push
insl
cld
sub
sbb
imul
xor
pushf
add
mov
hlt
in
test
xor
sub
mov
inc
adc
add
fwait
in
icebp
iret
and
mov
push
cld
jb
clc
dec
loope
lahf
and
adc
xchg
stos
push
cmpsb
jae
xor
imul
nop
inc
movsl
aaa
sbb
sub
out
pop
inc
xor
mov
xchg
mov
in
dec
cmp
mov
fidivl
inc
lret
xchg
xchg
adc
sub
inc
jbe
lods
sub
iret
out
fcmovu
jb
add
out
adc
xchg
adc
sub
inc
inc
and
or
fstp
or
sub
pop
xchg
xlat
push
dec
jae
dec
test
rorb
push
dec
jb
pusha
pop
dec
cmp
jge
mov
fs
ret
jge
pop
add
add
xor
in
es
sbb
fdivl
jl
lods
adc
jbe
stos
add
push
ss
xlat
cwtl
mov
icebp
mov
push
test
popa
jmp
sub
or
cmpsb
fisttps
mov
add
add
enter
sub
out
aad
lret
call
push
mov
jge
shlb
lods
push
and
jl
xor
into
stos
int
adc
sub
int3
jl
sub
adc
sti
xlat
xchg
cmp
sbb
mov
testl
xlat
scas
movsb
xor
mov
dec
in
out
jno
add
lock
out
imul
jecxz
push
xchg
push
jge
movsl
cmp
or
out
out
push
orb
lret
add
and
hlt
std
xorl
lock
movl
push
retw
dec
dec
lea
aaa
sub
cmpsb
dec
cld
imul
inc
jg
cmp
jl
dec
testb
jg
addb
jae
add
jle
popl
addr16
movsb
adc
dec
in
stc
mov
pop
rclb
pop
cmp
push
push
sahf
aad
xchg
fdivs
in
mov
xchg
mov
dec
stc
mov
repz
mov
addl
in
gs
pop
into
loopne
lock
fsub
cltd
mov
cmpsl
ljmp
mov
adc
ret
sub
jne
cmpsl
mov
imul
nop
rsm
and
in
leave
pop
cli
inc
push
aas
fsubp
pop
int3
enter
sbb
jno
dec
fildl
or
sbb
mov
lods
arpl
mov
jmp
add
loope
mov
jno
push
outsb
push
shrb
cmpsb
lock
jecxz
jno
dec
pop
mov
inc
fbld
or
add
rcrb
sub
or
mov
adc
or
push
mov
mov
sub
aaa
stc
and
xor
fsubl
dec
loop
daa
in
xchg
push
popa
jno
sub
and
leave
clc
insl
cmp
or
scas
bnd
fs
mov
jne
push
es
imul
pop
xlat
int
inc
xchg
movsl
pop
push
sub
cmp
cwtl
jmp
cmpb
mov
shl
bound
aam
add
lock
ret
sbb
rcll
sahf
mov
ds
inc
add
sbb
in
test
jl
sub
insb
fnstcw
rcrl
cwtl
mov
or
mov
xchg
cmp
data16
mov
mov
fcoml
aam
or
imul
movsb
call
shrw
sbb
add
imul
test
test
pop
scas
in
pop
add
imul
mov
adc
or
fists
sbb
repnz
nop
or
jge
adc
in
mov
and
and
aad
das
mov
sub
jp
add
and
mov
mov
jb
scas
fwait
stc
cmp
dec
cmp
lcall
addr16
ljmp
inc
push
jbe
test
fistpll
cmp
cmp
pusha
cld
xlat
mov
ds
cmp
xchg
jmp
outsl
sub
mov
repz
jp
cmpsl
movsb
mov
xor
aam
mov
xchg
xlat
mov
testl
rcl
lcall
xchg
bound
mov
pushf
lahf
in
inc
repnz
push
xchg
jb,pn
xor
fldl
pop
jle
mov
pushf
outsb
xchg
xlat
loopw
dec
mov
mov
dec
into
mov
or
gs
leave
inc
pop
out
sub
icebp
js
jl
push
popa
push
or
xchg
mov
sbb
addb
sub
xor
fstps
sub
dec
jo
xor
inc
push
test
mov
mov
push
jbe
sbb
sbb
sbbl
mov
scas
scas
xor
inc
or
inc
xor
negl
arpl
mov
adc
or
jg
jmp
pop
mov
cmc
xchg
push
jle
pop
rcrb
dec
jb
adc
push
loopne
mov
dec
dec
jg
inc
ljmp
loope
enter
mov
mov
pushf
cmp
stos
fisubs
std
cmpsl
inc
add
cmpl
mov
addr16
cmp
xor
cmp
int
mov
push
mov
je
nop
xlat
jp
into
xor
xor
out
sub
jbe
xchg
pop
jo
shl
push
dec
in
cmp
test
xor
imul
and
sub
sbb
mov
or
loope
dec
dec
sub
pushf
add
outsb
add
data16
leave
rorl
cmp
cmc
in
mov
lret
sub
cmp
pop
mov
mov
pushl
fs
out
push
mov
or
js
insl
jbe
add
ja
mov
enter
sbb
test
pop
mov
adc
push
decl
cli
es
fbld
subb
cli
call
ret
pop
xchg
sarl
loop
sub
mov
sbb
std
jp
mov
mov
shrb
pusha
imul
cmpb
cltd
push
xchg
or
out
sbb
adc
clc
popf
pusha
mov
test
stc
test
outsb
std
xchg
in
xchg
out
sarl
sbb
or
add
sbb
xlat
cmp
mov
push
out
aad
inc
icebp
sti
xor
mov
insl
or
adcb
adc
push
fst
push
sahf
hlt
dec
jmp
lret
xchg
sbb
jns
or
pop
insl
mov
inc
enter
shlb
fisubrs
das
iret
lahf
pop
sub
divps
add
je
nop
jnp
andl
int3
xor
inc
inc
es
and
mov
push
xchg
dec
sub
outsb
mov
add
push
int
pop
imul
mov
push
and
or
mov
movsl
shrb
push
dec
mov
lahf
xchg
movsl
inc
lods
cmp
pop
lods
cs
adc
mov
in
repnz
cmp
aaa
adc
adc
push
rcpps
push
sub
push
mov
arpl
sub
daa
int
sub
arpl
into
outsl
sub
jnp
cmp
xchg
lahf
xchg
adc
and
sub
push
jno
push
loop
inc
dec
and
cmpsb
sarb
es
addr16
test
mov
cmpsl
push
icebp
cmp
rcl
mov
xchg
mov
xchg
pop
xor
sbb
add
es
xchg
test
jmp
stos
inc
or
or
fsubr
rol
lret
cld
out
in
jb
inc
pop
jnp
mov
cmc
mov
idiv
cltd
call
test
dec
or
adc
pop
or
cs
push
push
mov
cmp
stc
popf
adc
xor
cmp
idivb
iret
aaa
pop
aad
out
xchg
fmulp
rcrl
test
les
pop
fstpt
sub
shl
push
xor
xchg
lret
loope
fidivrl
pop
mov
add
ja
jmp
int3
imul
cmp
in
xchg
push
roll
push
notb
ss
js
jg,pn
enter
enter
inc
sbb
mov
adc
movsb
loope
mov
test
bound
mov
stos
ret
mov
gs
pop
mov
test
subl
push
xlat
xor
scas
fcmovnb
dec
sahf
jb
or
mov
inc
xlat
mov
in
sbb
cs
popa
push
and
out
inc
addr16
int3
daa
and
mov
sub
xchg
mov
add
rcl
imul
jo
pop
fcoml
popf
ds
mov
pop
xchg
xor
and
add
mov
aam
in
int3
pop
test
movsl
roll
mov
add
push
pop
in
push
ret
and
call
mov
mov
mov
inc
cwtl
movsl
jno
movsb
test
lock
jecxz
arpl
fwait
ljmp
icebp
out
aaa
xlat
adc
or
xor
fstpl
pop
pop
dec
lret
pop
ret
push
jbe
shlb
out
add
mov
xchg
and
lret
jg
idiv
nop
xchg
xchg
cwtl
cmp
sahf
test
inc
push
mov
jo
sbb
push
inc
sbb
inc
add
ja
das
inc
push
imul
sub
sahf
mov
or
sti
lahf
faddl
mov
mov
pushf
cmp
adc
pop
jge
adc
test
lahf
lahf
ja
ficoms
mov
add
add
cltd
ret
sbb
pmullw
jg
push
or
fmuls
insl
dec
jg
repz
out
mov
add
rorl
cmpsb
inc
fs
mov
enter
arpl
or
pushf
add
adc
adc
in
push
lret
push
sub
fidivs
mov
loopne
sub
loopne
xchg
mov
add
cmc
push
xchg
cmp
pushf
cmp
sbb
cmp
or
in
icebp
rorl
mov
lret
test
das
add
ljmp
icebp
fsubrl
sub
les
jo
push
and
addr16
insl
xor
fldenv
sub
and
push
xchg
adc
fs
inc
sub
pop
cli
fwait
xchg
repz
jmp
daa
cwtl
push
jne
ret
dec
mov
rol
jnp
mov
push
jmp
call
push
cli
fnstsw
jle
gs
inc
push
sbb
scas
pop
call
xchg
cld
std
inc
cmp
jg
sti
jne
xor
xchg
repnz
inc
sbbb
or
or
je
sub
aas
lahf
xor
cltd
fnstsw
addr16
pop
fwait
pop
stos
addr16
push
push
sub
dec
xchg
and
repnz
cld
pop
hlt
jmp
lods
jne
fidivl
inc
jp
cmpsb
orb
and
enter
sub
jb
mov
daa
movsb
daa
push
stc
aaa
leave
stc
sti
mov
mov
scas
cmp
pop
xchg
jecxz
inc
push
mov
push
jae
clc
mov
incb
and
sbb
mov
cmp
add
add
or
daa
adc
rcl
cmp
mov
and
xor
mov
adc
jbe
sub
daa
std
shll
mov
stc
repnz
mov
shrb
gs
in
fidivrs
nop
je
xchg
dec
cwtl
insl
xchg
stos
mov
dec
adc
adc
out
cltd
shl
cmc
pop
js
add
push
inc
push
out
movsl
xchg
add
mov
lods
sub
xchg
mov
fcmovnb
rcll
mov
mov
xchg
mov
xor
lock
push
xor
lret
dec
addl
cld
cli
add
frstpm(287
leave
fbstp
lret
jmp
cmp
enter
jp
cmp
cmp
inc
hlt
jge
and
je
in
push
push
fcomps
fbstp
jp
xchg
mov
add
loop
dec
in
and
or
dec
subl
mov
leave
test
and
scas
or
gs
and
or
dec
add
nop
sub
push
sahf
lret
mov
jae
jmp
sbbb
fidivs
cmc
jecxz
xor
jge
div
stos
fcomp
pushf
loop,pt
pop
bound
xchg
outsl
pop
sbb
in
inc
inc
jae
repz
out
jbe
sbb
loopne,pt
stc
lret
shl
imul
jmp
dec
sub
inc
adc
sub
xor
loope
jecxz
mulb
lret
sub
mov
jae
inc
dec
in
sub
test
sbb
enter
add
imul
std
xchg
jns
sti
sub
dec
out
insl
stos
push
pop
push
or
dec
add
lock
jge
xor
or
push
pop
push
out
mov
stos
add
xor
addb
lods
xchg
mov
dec
aaa
imul
pop
mov
add
lea
hlt
or
sbb
xor
jle
ret
lods
pop
lcall
gs
jmp
pop
loopne
or
ljmp
jbe
pop
aas
push
xor
bswap
pop
xlat
pop
inc
fisubrl
flds
pop
popf
push
push
xlat
addr16
dec
inc
imul
lock
or
lcall
or
xor
fmul
ljmp
xor
scas
or
aad
pop
icebp
pop
mov
pop
fisttpl
push
push
mov
jae
push
push
les
fsubrs
arpl
mov
dec
aam
es
je
insl
cmc
push
ret
adc
imul
insl
stos
cmpsl
nop
aaa
pop
cmp
cmp
xor
out
mov
jno
into
push
dec
imull
mov
loop
mov
or
lods
add
push
push
jg
aaa
bound
jg
je
push
je
adc
fwait
mov
inc
jnp
jge
and
stos
push
fistps
adc
into
pop
and
arpl
movsb
pushw
dec
and
adc
cmp
push
mov
inc
cli
lea
xchg
arpl
inc
sti
inc
inc
addr16
cmpsl
mov
dec
xchg
mov
pushf
sub
jl
push
add
pop
loope
out
dec
and
jmp
xor
aas
sub
subl
cmp
mov
sub
jmp
les
xlat
push
aaa
addr16
jno
cmp
ficoml
and
hlt
push
dec
nop
add
repnz
ljmp
mov
sbb
xchg
cmp
push
lock
enter
jns
mov
ds
lea
inc
mov
or
stos
xchg
jb
dec
or
inc
shll
insl
lret
std
mov
mov
cmpsb
shrl
insl
sub
das
enter
fimuls
fwait
xorb
push
cli
stc
imul
mov
popa
mov
movsb
mov
add
or
inc
sti
mov
xor
or
inc
ljmp
clc
loop
je
and
jnp
mov
dec
mov
mov
fdivrl
mov
stos
push
mov
cmpsb
jle
ja
popa
sub
sub
movsb
fwait
sbb
shll
js
dec
sub
and
scas
xchg
setno
cwtl
push
jge
sbb
add
jle
std
ret
adc
cmpl
dec
and
pop
pushf
adc
js
cld
out
int
sub
test
fildl
push
sbb
leave
outsb
idiv
fs
mov
jo
jl
lret
jge
jg
or
and
lds
mov
jo
add
inc
mov
std
xor
das
addb
lret
cli
out
aas
mov
mov
dec
cmp
adc
pop
stc
movsl
xchg
mov
leave
loope
out
pop
add
xor
add
nop
sub
adc
fildl
into
fisubrs
lea
nop
sarb
push
sti
jo
test
pop
inc
or
mov
movsl
arpl
or
and
add
int3
inc
lahf
hlt
xchg
jb
xchg
dec
mov
and
cli
jmp
and
test
cwtl
mov
mov
sahf
lahf
push
mov
cmpsb
mov
dec
outsl
cwtl
popf
dec
ficompl
outsl
fmuls
adc
mov
loop
dec
mov
int3
inc
les
in
ficoms
mov
imul
pushf
jns
fidivrs
mov
sub
push
sbb
in
dec
mov
jns
inc
lcall
loopne
add
popf
ss
adc
mov
xchg
rorb
sahf
aam
mov
cmpb
mov
outsl
je
jmp
loopne
dec
add
mov
mov
mov
shr
dec
dec
pop
mov
xchg
stos
out
lds
mov
in
sub
sbb
cmpsl
mov
out
dec
sarb
adc
dec
sbb
mov
jns
xchg
mov
dec
fwait
dec
ret
ret
scas
aaa
lcall
jo
mov
in
shlb
jecxz
ljmp
or
dec
test
sbb
test
fucomip
xor
gs
cmc
and
mov
cmp
fisubs
xchg
stos
mov
hlt
add
es
pop
jmp
mov
sti
and
xchg
dec
mov
pusha
pop
and
cwtl
enter
push
push
sub
loop
add
xchg
push
imul
sar
shll
sub
aaa
in
mov
mov
loop
dec
xchg
out
xlat
loop
mov
push
repnz
mov
inc
lods
fnstenv
adc
push
loopne
inc
adc
test
pop
cmp
push
nopl
dec
popfw
jbe
int
lods
sub
xor
cwtl
insb
out
into
fidivl
xchg
mov
fucomp
mov
and
aaa
jo
pop
xlat
sbb
mov
jo
addr16
arpl
fnsave
pop
dec
sbb
cmc
lret
fsubl
imul
and
push
ds
dec
testl
sbb
jmp
jno
push
cli
pop
push
std
fbld
adc
push
jl
addr16
dec
test
in
lret
mov
aaa
jae
dec
pop
inc
es
add
mov
ss
pop
mov
jg
inc
std
xchg
push
rdmsr
mov
stos
fwait
cmpsl
cmc
adc
push
call
out
jle
in
movl
inc
repnz
push
loop
sbb
mov
or
push
adc
jle
xchg
sahf
jg
mov
push
cmpsb
xchg
push
push
xor
add
jno
and
cwtl
sbb
push
and
fnsave
movsb
sbb
pop
out
shr
or
insb
xchg
shl
cmp
adc
pop
inc
into
ror
int3
enter
xor
pop
mov
insl
cmpsb
mov
cmp
jmp
jmp
adc
and
add
fwait
and
sub
jb
inc
sbb
fdivs
jmp
push
cmp
jl
sar
shlb
out
push
nop
jne
mov
pop
insb
cmp
cwtl
imul
je
pop
out
fwait
out
push
adc
mov
xchg
lods
mov
mov
adc
test
ret
jno
dec
out
mov
sbb
pop
jl
decb
movsl
xchg
fs
repnz
sbb
outsb
push
bound
inc
mov
rclb
pushf
out
pop
sbb
outsb
pop
subl
fdiv
cmpsb
mov
mov
push
sbb
fwait
dec
lret
loope
mov
add
repz
mov
cmp
mov
aas
lods
dec
push
inc
xor
sbb
nop
fstl
imul
mov
lahf
xchg
mov
jbe
jmp
mov
xchg
std
jae
xchg
jmp
je
ficomps
pop
subl
or
ret
iret
adc
dec
cmp
insl
cmp
aas
mov
mov
pop
test
sub
cmp
cmc
jae
push
push
jbe
pushf
cmp
jle
sbb
das
in
mov
daa
jecxz
outsb
sub
mov
aam
dec
dec
add
test
push
jecxz
lahf
sub
outsb
loope
dec
mov
mov
adc
rcr
int3
pop
cs
outsb
sbb
mov
rcrl
ret
mov
dec
fistl
ss
dec
lcall
movsl
inc
inc
lret
pop
push
push
xchg
sbb
cmp
fildl
stos
out
jl
jle
lock
fisubl
push
jo
not
cmp
test
sbb
mov
mov
fisubl
insb
mov
and
cld
and
jg
les
mov
or
cs
mov
lods
icebp
fldl
jmp
mov
jmp
cltd
std
cmp
xor
dec
out
push
pop
outsl
div
test
sbb
lods
popa
cmpsl
dec
imul
push
shlb
xor
loop
stos
jle
inc
pushf
push
mov
int3
cltd
add
mov
pop
mov
loopne
cmp
push
loope
stos
push
in
push
jle
adc
out
add
imul
lahf
iret
or
imul
mov
pushf
fidivl
scas
jb
add
and
negl
mov
lea
inc
push
push
push
lds
out
mov
in
dec
out
pop
dec
dec
loopne
xchg
bnd
sbb
mov
lea
cltd
cltd
fcmovbe
cwtl
jmp
inc
dec
add
add
xchg
out
mov
pop
lret
push
sub
mov
in
push
or
xchg
add
test
mov
in
leave
stos
js
mov
add
outsl
cmp
pop
lds
stos
popf
jp
cmp
and
cmp
mov
in
cmp
push
cltd
push
adc
ss
xchg
add
sbb
mov
stos
inc
push
mov
mov
mov
das
fmuls
and
cmp
aas
sbb
push
fmulp
out
dec
pop
adcl
adc
jno
jl
lods
mov
cld
jb
push
fld
cmp
test
das
test
test
jecxz
mov
or
push
dec
int
pushf
into
cld
ja
xor
sbbl
fdivrl
mov
mov
in
sbbb
popa
movsl
int
movsl
out
push
jnp
sbb
stc
loopne
mov
push
insl
add
scas
fidivrs
aam
cmpb
sbb
mov
dec
ds
pop
test
xor
pop
jp
arpl
fsubs
sbb
cmp
std
lahf
dec
jmp
fimull
jae
mov
mov
repnz
ljmp
mov
in
aad
xchg
ljmp
sub
dec
cs
push
fidivrs
mov
mov
xchg
xchg
cltd
imul
dec
pop
inc
mov
dec
jmp
or
xor
mov
fwait
jmp
adc
cmpsl
jecxz
in
in
ljmp
xor
mov
cmp
adc
mov
aam
xchg
pop
push
mov
push
aad
sub
sbb
imul
sbb
bound
ja
aas
xor
jp
add
cmp
xor
push
and
cmp
mov
lret
xor
pop
mov
mov
btr
cmpxchg
pop
pop
pop
sbbb
mov
sub
dec
stc
aas
push
pop
lea
shl
mull
loope
ficoml
push
mov
mov
popa
add
in
aad
inc
mov
xor
mov
push
jmp
adc
fs
popa
xchg
cmpb
push
xchg
adc
push
popa
lcall
jmp
cmpsl
xlat
sub
sbb
popa
out
and
inc
in
jg
in
jnp
ss
mov
sub
popa
pop
stos
mov
pop
inc
jno
and
pop
lahf
pusha
aas
add
ja
pushf
push
sub
test
mov
dec
and
sub
std
add
sub
loope
lds
jnp
mov
rorl
xor
imul
fs
xchg
and
pop
cmp
out
push
leave
or
or
dec
sahf
lret
mov
jge
push
test
push
inc
mov
add
cwtl
mov
push
xor
cmp
or
push
sub
sub
cmp
imul
outsl
sub
inc
cmpsl
frstor
repz
mov
mov
out
jne
out
out
sti
xor
cmp
xchg
std
repz
xor
ficomps
mov
cli
mov
sbb
pop
ds
repnz
xchg
lods
insb
jnp
xor
daa
sub
mov
in
xor
bound
pop
xor
cmp
sub
out
lods
mov
jae
data16
testb
leave
mov
sbb
into
testb
mov
scas
movsl
push
inc
xchg
mov
cmp
and
mov
or
pop
pop
pop
js
or
xchg
std
int
scas
pop
shr
sbb
push
mov
inc
bound
dec
cli
ljmp
jae
mov
in
pusha
and
push
inc
mov
push
mov
xor
xchg
jno
aaa
adc
fstps
pop
mov
sbb
push
call
stc
shll
push
jg
jns
sub
lds
daa
mov
inc
push
mov
clc
es
adc
aas
sahf
int3
sahf
aad
or
add
dec
xor
mov
xorb
ret
filds
negb
cli
xchg
fstl
sub
xchg
pop
test
outsb
jecxz
xchg
aas
or
and
sub
add
lahf
mov
or
cmp
dec
cmp
sub
hlt
and
xchg
xchg
or
xchg
lret
mov
mov
das
stos
jbe
and
mov
jp
or
adc
je
loope
arpl
shll
inc
push
pop
jg
mov
xchg
loopne
mov
mov
test
out
and
insb
push
jo
inc
and
mov
mov
mov
push
add
loop
sub
lods
and
xor
mov
push
adc
xorb
fwait
inc
mov
mov
dec
mov
adc
decb
js
loopne
cwtl
cli
iret
jno
rcrl
int3
mov
xchg
ret
cmp
pop
shlb
fcomip
bswap
jbe
xchg
shlb
jge
xor
test
xchg
popf
sbb
and
jo
mov
jl
and
push
mov
in
adc
add
xchg
test
sbb
test
inc
jge
sbb
lcall
jb
popf
pop
xor
xchg
jo
out
ret
outsb
lds
mov
inc
fcmovb
aas
or
pop
cmp
xlat
adc
mov
lcall
es
pop
lret
rcr
push
or
cli
mov
sbb
pop
add
jne
mov
adc
sahf
fwait
icebp
xchg
sbb
out
mov
fadds
sbb
out
mov
or
or
pop
popa
sub
cmpl
pop
mov
pushf
verr
add
fs
dec
or
mov
out
mov
pop
jns
dec
icebp
cmc
out
cmc
sub
cmp
push
je
in
leave
mov
mov
ss
mov
ss
dec
js
sti
inc
aaa
cmpsb
ja
fadds
ret
jle
mov
or
dec
inc
lahf
mov
rol
call
stos
mov
ss
inc
jl
lret
inc
test
mov
push
out
xor
outsl
cmpsl
std
ret
push
out
jns
mov
int
inc
adc
xor
fsubrl
ja
nop
fmull
dec
and
push
sarl
in
movsl
rsqrtps
mov
mov
mov
imul
cmp
dec
stos
fisubrs
or
push
adc
stos
and
pop
push
sbb
por
jp
sbb
test
mov
pop
test
pop
divl
sub
arpl
cltd
nop
rolb
push
mov
mov
mov
xchg
and
pop
outsl
ret
iret
inc
mov
lahf
mov
adc
std
push
push
idivl
mov
ret
popf
dec
or
mov
popa
inc
fwait
xchg
cmp
sbb
lcall
in
rcr
add
mov
xchg
in
sbb
fistl
sub
push
jle
aas
cwtl
scas
add
repnz
mov
cmc
aaa
cmp
imul
mov
mov
mov
test
pop
xor
fxch
imull
jmp
test
mov
xor
cmp
adc
lock
lea
pop
adc
pusha
jl
mov
sti
xor
push
es
add
inc
movsl
mov
jae
sub
test
pop
cmp
popf
cs
rcrl
fstl
test
lcall
pushf
sbb
dec
cmc
ret
in
ret
push
out
mulb
sub
cmp
add
std
cmpsb
lea
cltd
xchg
push
push
lahf
test
adc
ret
fnstsw
sbb
adc
adc
sbb
mov
or
push
in
sub
dec
pop
adc
mov
pop
mov
bound
fcoml
mov
pusha
sbb
repz
repnz
or
dec
pop
lret
xchg
jae
in
test
xor
jnp
sbb
mov
mov
add
lret
xchg
jle
add
les
out
mov
push
sbb
sub
jecxz
andb
inc
sti
into
mov
lahf
adc
push
cs
fs
inc
cmp
das
mov
sub
fwait
jb
movsl
lahf
ret
rcr
xor
or
das
stos
lock
ret
mov
xor
jnp
in
mov
dec
jl
ret
jle
test
cmp
mov
aaa
add
push
movsl
push
cltd
push
xchg
aas
shlb
fs
iret
add
or
cwtl
cmp
lahf
pop
std
inc
adc
xchg
das
mov
xchg
ss
sahf
xchg
pop
out
pop
insb
sti
push
mov
loop
mov
aas
clc
sahf
int3
jge
or
or
adc
stc
and
repnz
movsl
pop
movsb
dec
adc
inc
mov
out
jge
stos
loop
sbb
js
xor
js
mov
test
or
jle
push
cmp
stc
addb
pusha
inc
sub
in
loop
add
lods
test
addb
scas
sahf
int
push
cmp
scas
mov
sbb
push
adc
jl
mov
xor
leave
adc
mov
mov
push
mov
jbe
daa
and
adc
push
imul
pop
and
or
popf
fimull
cs
push
mov
push
mov
xchg
popa
imul
in
cwtl
push
inc
adcb
js
test
das
in
and
rorl
push
jg
jp
notl
divb
stos
push
cs
aad
mov
incb
jno
push
loopne
cld
mov
xor
aaa
stc
xchg
inc
es
and
lea
cmp
jecxz
jp
in
mov
push
mov
aad
adc
stos
xchg
icebp
icebp
adc
xor
inc
insl
and
lret
and
cmpb
cmc
push
aam
int
es
sbb
test
sbb
movl
data16
popa
cld
add
insb
sub
ret
in
push
adc
scas
sahf
sarb
sbb
adc
xchg
mov
rcrb
imul
mov
push
dec
sahf
jbe
sbb
mov
imul
pop
pop
icebp
or
sub
ljmp
jne
sbb
mov
lret
sahf
pop
jg
push
adc
mov
mov
jbe
cmp
jo
cmpsb
sbb
dec
jecxz
push
push
sbb
pop
push
ljmp
or
mov
stos
les
sbb
push
mov
scas
xor
sub
movsl
test
shl
cmp
clc
pop
aad
or
cmp
dec
in
je
lret
cmp
cmp
xor
fisubrl
hlt
xor
int
mov
test
mov
add
inc
test
sbb
adc
inc
stos
push
inc
push
mov
std
rcl
sti
mov
sbb
loop
ss
loop
out
out
mov
dec
sahf
in
pop
adcb
call
add
fwait
lds
popf
mov
dec
and
cmpsl
ds
int3
mov
scas
test
sbb
imul
repz
pop
cmp
leave
enter
dec
je
jge
call
stc
push
xchg
iret
roll
hlt
add
mov
mov
mov
aad
pop
jmp
fidivrl
leave
test
sahf
daa
cs
rcrb
into
mov
outsb
jne
mov
jmp
loopne
outsb
jns
sub
daa
lock
das
inc
sbb
or
push
aaa
dec
dec
or
pop
sbb
adc
shrl
jmp
sub
sub
pop
or
jl
sub
mov
scas
lcall
dec
ljmp
sbb
lock
outsl
fldcw
sahf
xchg
adc
xchg
add
out
lock
jne
cmpsl
stos
je
call
and
inc
orl
leave
and
pop
add
mov
sub
jns
imul
jecxz
mov
add
ss
inc
clc
mov
sbb
loopne
jne
mov
jns
sub
push
cmp
int3
and
test
inc
pop
xchg
in
repz
lahf
pop
hlt
out
cmp
in
pop
xor
scas
cmpsb
inc
adc
jae
rcrb
and
fildll
mov
add
mov
and
cmp
fs
mov
out
sub
cltd
sbbl
ljmp
push
lds
mov
xchg
mov
leave
pop
add
cwtl
outsb
stos
scas
lods
xchg
inc
sbb
cmc
xchg
or
fwait
jb
pop
push
push
arpl
adcb
mov
jl
std
sub
pop
aaa
xor
pop
fcmovne
and
dec
push
jnp
xchg
out
mov
in
out
sbb
cmpsl
shrl
add
jns
pop
pop
inc
sbb
push
jl
inc
push
stc
mov
lods
rcrl
xlat
cltd
xor
xor
enter
fstp
rcrl
lea
insl
push
lods
push
rclb
icebp
sbb
mov
hlt
les
pop
cmp
mov
ds
jne
addr16
sub
and
loopne
insb
jmp
fistpll
ja
fsubl
xor
adc
outsb
test
and
repnz
xor
xchg
outsb
inc
cmc
aas
pop
pop
js
cmp
stos
ds
out
mov
ficoms
std
insb
mov
add
and
movsb
push
push
mov
inc
cltd
pop
and
inc
sub
adc
sub
nop
cmp
fidivrl
pop
jae
dec
mov
js
aaa
push
ja
add
dec
pop
pop
mov
mov
imull
xor
adc
pop
xchg
mov
rclb
mov
jmp
mov
or
inc
les
push
rol
pushl
int3
jle
js
repnz
ljmp
scas
cmpsb
jo
adc
jbe
stos
imul
mov
adc
mov
shrb
jns
sub
inc
je
dec
push
shrl
jp
cmpsb
sarb
cmp
push
adc
movsb
fdivrl
pop
in
lea
or
mov
xor
xchg
hlt
out
cmc
add
pop
pushf
adc
cmp
sti
insl
lret
scas
sub
popa
inc
adc
mov
jmp
mov
aas
lret
mov
out
ret
cli
xchg
idivb
movsl
cwtl
stos
into
fwait
and
dec
les
or
aad
ds
orl
stos
inc
je
nop
ret
mov
mov
fiaddl
add
cmpsb
dec
adc
repnz
dec
ja
mov
clc
mov
adc
ja
push
sar
loopne
pop
lods
xor
cmp
mov
and
xchg
jl
mov
pop
fsts
pop
mov
mull
ljmp
push
mov
sub
xor
jns
ljmp
add
jne
roll
mov
push
repnz
and
leave
inc
shlb
popa
xor
aam
stos
shlb
sub
or
sub
pop
jbe
subb
xor
ret
jnp
pop
ja
mov
add
mov
fs
mov
in
lret
lods
xor
shll
pop
jge
call
loop
call
add
sti
jp
pop
sub
rcrl
pop
cli
jmp
xlat
dec
sub
or
popa
and
push
hlt
mov
sbb
xlat
sub
pop
les
fnstcw
mov
sbb
inc
call
cld
pop
mov
sbb
mov
jae
cmp
cmp
cs
and
out
loopne
negb
sub
out
scas
jo
loop
xchg
fsubl
daa
mov
dec
test
icebp
push
add
iret
xor
jl
mov
push
shlb
mov
iret
mov
out
cmp
mov
mov
xchg
push
mov
and
jae
clc
jecxz
add
out
xor
out
imulb
outsl
or
sbb
out
inc
sbb
cmp
mov
xchg
inc
cld
push
mov
xchg
and
or
adc
int3
jbe
stc
sub
dec
pop
icebp
getsec
and
xchg
xchg
lahf
pop
fimuls
cmp
call
fisttps
lods
cwtl
and
jae
lahf
jecxz,pn
faddl
jbe
jnp
mov
push
xor
push
mov
sub
mov
in
testb
repz
in
push
sbb
pop
fisubrl
adc
fidivrl
stos
scas
outsl
test
loope
cmp
cwtl
dec
addr16
jle
mov
dec
or
daa
pop
mov
add
mov
sbb
movsl
in
push
push
pop
leave
cli
ret
bound
cmp
jle
jbe
pushf
fsubl
mov
and
in
dec
cmp
and
rcll
push
icebp
cmp
leave
inc
icebp
loope
popf
jmp
loope
push
int3
out
xchg
gs
movsbl
xlat
mov
pop
jae
sbb
aas
xlat
xchg
push
insl
dec
rcll
push
xchg
lods
mov
stos
cmp
mov
inc
inc
dec
pop
roll
mov
sbb
cmp
fsubrl
iret
pop
and
cmp
das
xchg
sbb
sti
pop
sbb
ljmp
lret
mov
test
push
dec
mov
mov
bound
xchg
xor
xchg
loop
xchg
sti
fisubrl
xchg
pop
mov
mov
sarl
nop
mov
add
scas
insl
mov
test
leave
and
mov
enter
xlat
movsl
fs
pop
jno
sub
fwait
adc
movsb
insb
push
pop
test
fldcw
xacquire
into
mov
pusha
sub
mov
jmp
xor
pop
adc
mov
mov
push
ficompl
sub
inc
je
sbb
imul
sarb
movsl
cmc
outsb
test
pop
mov
jnp
fcomp
and
and
and
rclb
sbb
add
arpl
push
aas
imul
cmc
mov
jecxz
jp
add
rclb
pop
mov
int3
xchg
popf
push
sbb
pop
mov
lcall
add
sub
pop
pushf
fdivrs
sbb
leave
icebp
inc
movsl
jle
sahf
leave
mov
mov
sbb
mov
add
idivb
push
pop
lret
scas
adc
loope
sub
jp
cs
stos
pop
ljmp
pusha
enter
cltd
gs
cmp
fbld
inc
push
rorb
jb
jecxz
pop
test
divb
sbb
jle
cmpsl
ficompl
and
push
arpl
pop
pmulhw
test
loop
jno
into
or
xlat
ret
test
sbb
leave
cltd
cld
bound
cli
fstps
xor
inc
std
icebp
dec
stos
add
addl
inc
add
movsb
jns
adc
pop
into
mov
mov
sub
test
iret
adc
push
xchg
lret
add
inc
fistl
mov
popf
imul
jmp
inc
inc
aad
or
sbb
inc
and
or
and
xchg
adc
lea
stos
test
xchg
sarb
inc
mov
mov
sahf
cmp
sbb
fcmovnb
mov
rcrb
pop
mov
enter
loope
sub
push
rorl
lock
add
mov
sub
pop
xor
inc
or
mov
mov
movsb
and
dec
xchg
int
adc
daa
rol
push
pop
pop
subl
roll
adc
adc
mov
add
dec
adc
and
das
std
jl
adc
push
js
sbb
jae
ss
pop
mov
enter
es
jge
jp
mov
fsubrs
jmp
add
push
sbb
xchg
repnz
scas
adc
xchg
mov
fadd
mov
mov
jnp
inc
and
fimull
dec
icebp
cmpsb
fsubl
push
adc
aam
push
rorl
divl
xchg
in
xor
lret
rol
leave
mov
sbbl
pushf
loopne
mov
loop
fcoms
out
addr16
cmp
or
or
jae
xlat
mov
stos
push
sub
mov
mov
xor
xchg
sahf
jp
in
stos
jl
and
imul
cli
out
inc
loopne
dec
movsb
mov
dec
and
mov
loope
dec
mov
push
mov
out
dec
or
add
stos
and
jle
je
sbb
mov
dec
in
in
xlat
rcrl
call
clc
aam
mov
mov
cmp
inc
lret
imul
in
outsb
pop
lock
ss
out
sbb
inc
jns
push
lods
and
jmp
push
cld
adc
fisubrs
mov
icebp
lahf
out
insb
jbe
out
stos
and
mov
adc
out
and
jns
sub
dec
in
out
or
or
mov
pusha
xchg
movsl
jae
shrb
jmp
push
adc
fldt
rcr
add
mov
das
mov
cmp
jbe
iret
decl
rorb
aaa
lahf
sub
jg
test
leave
xchg
out
in
pusha
daa
push
push
jmp
lcall
xchg
loopne
dec
loope
push
inc
adc
popf
mov
xchg
inc
sti
inc
push
nop
xor
xchg
rcrl
sub
cli
orb
outsb
out
cmp
mov
cli
imul
sahf
popa
leave
lods
jno
sub
xlat
add
aas
call
jle
fisubs
mov
cmp
lret
ret
mov
mov
in
add
jbe
sub
and
repnz
mov
add
cmp
aas
scas
mov
nop
ret
outsb
lcall
push
stos
push
jle
dec
xchg
adc
add
or
inc
rcrb
arpl
es
inc
and
jbe
daa
add
test
ficoms
mov
outsb
xchg
mov
lahf
int3
fistpll
lret
dec
ds
push
shl
push
sti
sarl
cmpsl
in
daa
insb
cli
popf
leave
push
xchg
sub
dec
les
insb
das
pop
jb
rolb
xor
fmul
push
cmpsl
cmp
jo
fidivs
jo
pop
xchg
pop
push
jle
popa
push
xchg
push
sti
outsb
ret
cmpsl
pop
leave
mov
mov
push
vmovdqa
inc
pop
add
add
lcall
testl
aaa
mov
idiv
addb
xor
or
repz
aas
xchg
aaa
pop
sahf
mov
push
adc
icebp
and
out
xchg
jae
add
in
loopne
enter
into
jp
xlat
js
pop
pop
int
ljmp
pop
jmp
mov
pop
inc
lret
pop
loop
add
inc
idivb
mov
and
dec
loop
dec
enter
popf
lds
std
cmp
scas
xor
xlat
mov
cltd
push
jl
dec
into
in
push
dec
rclb
fistl
dec
or
mov
and
mov
into
test
insl
and
fistpll
sbb
dec
mov
mov
jecxz
out
mov
ret
mov
clc
add
nop
call
sub
xor
adc
push
xor
js
outsb
outsb
stos
sbb
jno
jbe
dec
popa
lret
or
pop
adc
mov
push
mov
mov
push
jge
popa
stos
jg
sbb
mov
shrl
sti
adc
rclb
pop
add
mov
jb
lcall
inc
sub
and
jp
cmc
xor
dec
add
out
adc
pop
sub
inc
jae
neg
sbb
mov
sub
data16
or
adc
add
daa
rcll
inc
mov
repnz
mov
nop
std
cmpsb
jl
adc
and
sub
ss
jnp,pt
mov
faddl
ret
pop
and
jl
mov
xor
aaa
lret
popf
dec
mov
outsb
xchg
sbb
insl
sub
popa
repnz
xor
xchg
sti
xlat
fcompl
testb
jns
cwtl
adc
imul
cmp
xor
push
test
push
dec
hlt
fmuls
xor
pop
out
jbe
lds
inc
jge
pop
cmpsb
arpl
xor
jo
dec
popa
or
xchg
cmpsl
jl
mov
push
outsb
cmp
ret
nop
inc
in
rcll
xor
xor
leave
sub
cs
dec
les
popa
and
hlt
pop
movsl
push
stos
icebp
rclb
mov
sbbl
int
dec
push
adc
pop
in
inc
inc
xchg
cmp
add
sub
push
cmp
negl
roll
pushf
inc
cwtl
leave
lock
xchg
ljmp
push
aaa
pushf
jmp
xchg
fisttpl
xlat
in
adc
leave
mull
xchg
scas
cmpsl
lret
in
imul
jns
flds
hlt
aaa
outsl
dec
inc
jmp
jmp
sbb
sub
dec
fisubrs
xor
push
cmpsl
inc
scas
mov
mov
pop
sbb
or
or
xchg
fsubl
enter
icebp
add
iret
aad
cmpsl
xchg
mov
in
ljmp
add
lcall
ja
shlb
or
std
sbb
pop
dec
loope
scas
jnp
inc
dec
int3
push
repnz
outsb
insb
or
shr
dec
rorb
pop
test
lcall
jnp
jne
and
mov
pushf
rcl
int3
shll
mov
cmp
or
lods
mov
addb
adc
dec
sub
lcall
scas
and
call
testb
ja
iret
jge
jbe
movsb
inc
cli
scas
xor
mov
mov
mov
push
sbb
sbb
pop
cwtl
ficompl
insb
push
mov
pusha
lahf
sbb
std
adc
push
xchg
in
lds
add
mov
aas
inc
inc
xchg
and
cmpsb
push
mov
push
rorb
out
and
lods
lret
gs
or
pushf
es
xor
repnz
xchg
leave
adc
andl
push
sbb
inc
je
call
sub
mov
ficoml
or
movsl
adc
icebp
nop
shlb
pusha
lea
mov
outsl
push
test
sub
jmp
ret
pop
or
lret
fsubrl
aas
mov
dec
cmp
jno
stc
xchg
xlat
xchg
rcll
cmp
push
pop
test
test
inc
ret
jns
xchg
test
cltd
jmp
push
inc
cmp
leave
divb
std
pop
mov
xor
xor
add
lods
inc
mov
and
not
sub
popa
mov
sub
inc
push
xchg
sbb
and
inc
and
add
in
pop
popf
mov
push
push
scas
das
in
jle
out
decb
daa
xchg
xor
es
je
dec
or
inc
popa
ss
jb
cmp
mov
enter
std
lret
faddl
test
mov
ret
mov
hlt
loopne
call
push
pop
push
mov
out
sbb
pop
dec
jmp
pop
aaa
pop
mov
call
jo
notl
push
push
sahf
mov
mov
xor
sbb
cmpsb
mov
add
repz
inc
sub
stos
inc
and
inc
out
mov
imul
fimuls
jb
aaa
pop
mov
push
into
in
xchg
dec
decl
jge
xchg
jmp
jnp
pop
dec
enter
sbb
xchg
or
dec
in
sub
xor
push
xor
mov
enter
lods
jp
fs
sar
pop
cmp
fiaddl
lods
movsl
or
outsb
push
sub
mov
and
cmp
push
hlt
inc
cmp
in
scas
lahf
ja
pop
pop
inc
push
lods
pop
mov
lret
push
and
js
rolb
mov
pusha
jno
mov
mov
pushf
insb
pop
push
inc
movsb
rorb
jle
enter
xor
lds
sahf
cmc
cmp
cmc
dec
jno
pop
cmpsl
ret
xchg
adc
xchg
mov
jae
test
mov
out
pop
mov
mov
stos
test
xor
inc
mov
es
jecxz
pushf
mov
inc
mov
lock
inc
dec
lea
pop
mov
bound
imul
loopne
jmp
cmp
and
fldl
aas
add
mov
ja
repnz
adc
std
adc
pop
test
jno
cmp
test
inc
stc
jmp
mov
mov
xorb
adc
aad
roll
pop
das
sbb
mov
inc
arpl
shll
xor
mov
xchg
push
push
icebp
test
push
mov
std
ret
fiaddl
fs
cs
and
sbb
in
pop
imul
pop
mov
adc
xchg
xchg
jno
inc
stos
stc
fwait
out
mov
jmp
or
out
cmp
jnp
pop
mov
fmull
pop
les
mov
sbb
xor
inc
and
daa
jnp
add
push
mov
inc
add
sub
pop
jle
fbstp
mov
push
mov
mov
add
jmp
inc
xchg
icebp
jae
repnz
inc
pop
sub
aas
divb
aad
daa
pop
aas
inc
pop
imul
lahf
inc
or
sub
iret
xchg
ss
jle
sbb
test
sub
jmp
popf
sbb
daa
cmpsb
dec
dec
mov
pop
sbb
mov
mov
dec
hlt
inc
or
stos
cwtl
stos
loop
push
sarb
jae
ret
dec
ss
addr16
sbb
ja
adc
mov
dec
push
sbb
mov
push
hlt
push
sti
cmp
or
bswap
mov
inc
dec
mov
and
mov
push
sbb
cmp
or
leave
icebp
mov
ljmp
cmpsl
push
adc
lock
jmp
std
jp
addr16
or
add
pop
or
dec
les
jl
xchg
xor
icebp
jo
test
sbb
cmp
ret
adcb
push
into
mov
mov
mov
jmp
test
cmpsb
outsb
fistpll
mov
repz
out
scas
repz
fidivl
jl
push
push
stc
popf
dec
pop
rcr
lret
cmp
push
sbb
xor
and
sti
call
int3
xchg
jmp
push
movsb
xchg
dec
out
or
jge
je
imul
aad
add
aad
add
nop
or
add
pop
cmp
shrl
dec
or
or
lret
fidivs
popl
adc
das
xor
add
mov
popa
cmp
lcall
icebp
sub
push
mov
pop
in
aam
xorb
jnp
ficoml
add
add
insb
cmp
cmp
mov
call
inc
imul
jle
inc
mov
push
in
push
scas
pop
inc
mov
jo
int
jae
jns
add
or
adc
cmpsb
or
xor
xorb
cmc
sbb
adc
enter
add
out
jg
movsb
stos
enter
pop
jae
cmpsl
sbb
and
outsl
mov
stc
push
js
xchg
push
fnstcw
inc
jno
push
rorb
push
std
leave
xchg
icebp
daa
jg
in
xor
pusha
xor
adc
fcomps
push
or
mov
xchg
and
mov
xchg
cmp
push
xor
mov
int
or
jle
cli
mov
ljmp
jae
mov
mov
mov
nop
aaa
xor
add
jns
pop
push
inc
jmp
nop
push
xchg
sbb
jae
push
sub
pop
stos
test
mov
and
mov
or
sahf
scas
sbbl
repnz
xlat
or
jg
inc
mov
adc
adc
jle
fstl
sbb
and
or
xchg
jmp
dec
pop
mov
sub
and
jg
sbb
insl
cmp
adc
mov
stc
mov
movsb
test
mov
in
test
jg
fiaddl
je
sbb
cmp
inc
call
insl
aam
adc
leave
nop
push
adc
outsb
aas
aam
xlat
shrb
add
sbb
lock
fwait
or
sub
push
repnz
push
sarl
dec
push
mov
xchg
ficoml
lea
orl
jbe
icebp
es
mov
lcall
add
call
pop
pop
add
fadd
mov
or
sbb
shl
ds
xor
adc
mov
adc
lods
mov
jp
xchg
push
dec
outsb
sbb
mov
jp
cmp
pop
testl
rolb
imul
cs
daa
mov
ficomps
fstpl
sbb
mov
pop
jo
xor
jl
jl
xchg
mov
cwtl
stos
adc
in
cmpsl
arpl
roll
xor
dec
out
pop
lret
es
dec
ret
inc
in
adc
lcall
imul
mov
jne
or
jecxz
lcall
clc
sarb
mov
inc
pop
xchg
cmp
les
inc
xchg
clc
pop
cltd
imul
push
push
inc
mov
repnz
dec
jmp
jne
or
insl
inc
je
and
push
jl
stc
test
push
mov
pop
push
jae
int3
mov
xor
xor
popa
stc
jp
mov
fldenv
adc
xchg
push
lods
mov
pop
jb
mov
andb
out
xor
cmp
rorl
fmul
jne
aas
pshufw
mov
mov
mov
jmp
cld
imul
pop
aam
add
shll
es
in
mov
pop
xor
push
dec
adc
mov
adc
insb
xorb
shlb
or
and
leave
dec
mov
pop
xchg
mov
movsb
lahf
mov
xchg
ss
cwtl
mov
sbb
jmp
jmp
add
lods
sahf
adc
cmc
mov
je
jo
shl
ss
outsb
and
js
sub
sbb
mov
mov
es
xchg
dec
in
mov
insl
out
xor
add
mov
dec
gs
js
lea
les
cmpsb
pop
adc
mov
popf
fs
lret
hlt
repnz
subl
dec
iret
pop
stos
sahf
xor
mov
push
jp
and
or
cli
pop
test
bound
cmpsl
outsl
xor
in
fwait
repz
push
imul
xor
mov
sbb
dec
mov
jle
sbb
es
clc
dec
sbb
setge
mov
into
mov
push
jo
push
inc
push
enter
loope
fmull
sub
ss
jg
cmp
out
xor
pop
jecxz
in
icebp
sbb
cmp
std
test
out
mov
jl
pop
aas
outsl
xlat
sbb
shr
nop
adc
pop
push
fcom
adc
loop
imul
mov
mov
adc
adc
aam
adc
xor
pop
scas
jp
mov
jns
ds
inc
xor
test
jnp
mov
cmpsl
jne
into
into
test
ds
mov
push
xor
adc
xchg
mov
jbe
inc
jno
mov
outsl
outsl
mov
mov
ja
loopne
cmp
mov
ror
lcall
and
cmp
mov
xchg
push
sbb
adc
mov
fstps
lock
ss
push
push
push
shl
pmulhuw
ss
pop
dec
ja
sbb
dec
cmc
pusha
ret
or
or
push
jg
ror
jmp
mov
push
imul
inc
aas
scas
clc
scas
negb
pushf
pop
adc
fsubs
mov
fsubp
movsl
dec
inc
adc
mov
daa
jae
insl
mov
add
scas
mov
xchg
mov
out
aad
pop
inc
in
or
mov
jae
cmp
das
xor
and
lcall
and
jnp
sub
pusha
add
xlat
push
call
shrb
jp
ja
scas
dec
pop
pop
mull
sub
aad
jb
fists
call
mov
cmp
mov
jae
push
pushaw
imul
push
push
cld
dec
lcall
ljmp
xchg
mov
daa
lea
fidivrs
dec
add
add
push
cmp
mov
adcb
add
jne
repnz
mov
add
add
mov
sub
jnp
hlt
hlt
stos
in
pop
cs
gs
sub
scas
sub
pop
mov
mov
loope
jmp
mov
aaa
mov
pop
aad
invlpg
shlb
inc
es
js
push
dec
daa
loop
test
cmp
mov
pop
inc
push
lods
pop
mov
les
shlb
push
mov
sub
push
xchg
jle
fnsave
push
iret
rorl
sbb
jge
mov
lcall
inc
inc
pop
add
push
lret
out
and
xor
and
icebp
jecxz
cwtl
cs
fisubrs
pop
leave
shrb
xchg
addr16
jb
inc
ds
mov
and
and
data16
frstor
outsb
int
adc
mov
push
daa
cmp
jmp
fbstp
jnp
mov
shl
ret
rcrl
push
fdivrl
xchg
or
dec
mov
sub
das
arpl
pop
nop
fwait
cmpsl
xor
mov
mov
jecxz
sub
sbb
jecxz
jb
push
push
stos
jecxz
aad
inc
pushf
dec
xchg
mov
cmp
adc
add
test
sahf
dec
loope
mov
jnp
cmp
movb
xor
pusha
scas
mov
mov
mov
cmc
lea
jnp
xor
jl
sub
pop
ljmp
jle
mov
aaa
stos
and
pop
ss
fisubl
mov
or
mov
pop
lret
ret
mov
mov
xor
mov
mov
scas
push
adc
out
fiaddl
jp
push
push
mov
in
adcl
mov
bound
adc
mov
mov
xchg
adc
std
pop
rdmsr
shll
loopne
adc
loopne
es
jmp
ljmp
daa
pop
sub
pushw
fwait
and
out
addr16
addr16
cmp
loope
lret
cs
pop
in
sti
mov
jbe
mov
adc
xor
pushf
cmp
sarb
aaa
mov
mov
xor
mov
cmp
mov
mov
inc
loopne
pop
inc
test
cmp
sbb
mov
mov
cli
jg
and
lods
bswap
loop
push
mov
in
call
mov
push
mov
or
and
mov
in
in
es
push
dec
and
cmpsl
xor
sbb
or
mov
out
jbe
outsl
sahf
cmp
incl
add
pop
jg
and
jb
mov
jl
in
fs
pop
and
dec
mov
fildl
mov
jne
loopne
pop
outsb
or
leave
or
inc
push
les
inc
scas
dec
and
out
movl
das
cld
sub
testb
flds
lods
in
mov
xchg
dec
cmp
dec
je
daa
mov
ljmp
jge
xchg
int3
xor
fistpll
inc
das
sti
ret
mov
gs
sub
test
sbb
push
xchg
xchg
fwait
cmp
add
inc
push
daa
dec
jb
cmp
ss
xchg
cmpb
repnz
icebp
mov
mov
add
mov
bound
add
mov
fwait
mov
movsl
inc
adc
adc
sub
or
bound
xchg
and
xchg
mov
push
xchg
daa
clc
inc
out
adc
pop
xchg
pushf
lock
fstp
jns
ret
adc
cmp
and
mov
sbb
xchg
mov
insb
cmp
repz
dec
out
in
pop
sarl
mov
mov
cmp
cmpsl
xchg
push
jp
nop
inc
xchg
ljmp
data16
stos
mov
dec
jmp
ret
sbb
into
jnp
mov
inc
push
pop
sbb
je
inc
std
pusha
outsl
xchg
bound
shlb
int
or
pushf
test
sbb
call
cmpsl
or
pop
fmul
add
data16
cmp
mov
arpl
xchg
fxrstor
dec
sbb
mov
push
inc
push
mov
xor
jl
xchg
shlb
rcrl
push
aad
cwtl
pop
and
push
xchg
sub
ja
test
pop
cmc
imul
xor
hlt
dec
loope
add
xchg
ja
xchg
pop
stos
mov
adc
jp
xchg
and
sbb
or
stc
lahf
cltd
jb
fcompl
mov
jae
pop
xchg
out
mov
cmp
sub
cmp
shlb
sbb
inc
jp
mov
sub
icebp
popf
and
enter
push
loopne
jno
cmp
mov
xchg
outsl
aam
addr16
ret
outsl
fbld
mov
mulps
pusha
popf
insl
mov
push
fisubrs
cli
cmp
nop
scas
push
lea
lcall
dec
stos
mov
loope
mov
in
stc
cltd
mov
mov
iret
out
loop
out
mov
sbb
jmp
push
mov
pop
nop
in
and
outsl
jbe
push
add
int3
xchg
push
imul
mov
mov
cmp
cmp
jmp
hlt
xchg
push
test
mov
sar
sahf
movl
xchg
cmpsl
xor
xor
and
cli
jmp
sub
pop
scas
jnp
inc
adcl
enter
fbstp
push
outsl
or
mov
adc
cmc
jb
add
fisttpl
pop
inc
iret
xchg
insb
jmp
ret
and
rcll
and
dec
mov
mov
jo
aaa
cmp
ret
shl
shl
jb
je
jno
sbb
ds
in
in
push
push
call
repnz
loopne
sti
add
xchg
shl
rcrl
cmp
das
movsb
call
out
sbb
loop
mov
adcl
adc
stos
enter
inc
je
dec
pushf
xchg
sarl
bound
lds
aad
adc
inc
jnp
jl
push
push
cltd
mov
dec
fwait
bound
xchg
dec
arpl
adc
pop
ret
cld
xchg
add
test
jl
rcrl
jbe
lods
xor
sub
movb
shrl
out
or
gs
adc
aaa
lea
pop
jle
pop
cmpsb
xchg
and
and
jno
adc
aam
or
lret
or
and
inc
mov
mov
aas
gs
fdivrl
mov
roll
xlat
fidivl
xor
out
fprem
xchg
stc
pop
adc
inc
jmp
call
les
rorl
orb
or
sub
mov
in
mov
in
sub
lahf
mov
push
fbstp
pusha
fstps
decl
or
fwait
cmp
and
sub
enter
leave
lds
inc
mov
aas
repz
aam
fstp
xchg
loope
adc
js
dec
sti
xor
iret
sbb
aad
sub
nop
jns
shrl
shlb
pop
or
sub
loopne
push
mov
push
xlat
push
daa
cwtl
jb
fcoml
aas
jle
xor
push
cmp
lods
inc
xchg
insl
add
incb
adc
fiaddl
lods
inc
sbb
fidivrs
fcompl
cld
fbstp
sub
or
testb
or
mov
and
mov
jmp
inc
je
dec
ret
lcall
sarb
aam
push
push
xor
push
test
xchg
sahf
adc
jb
dec
xchg
mov
dec
mov
add
outsl
pop
mov
and
insb
mov
xlat
pop
inc
int3
mov
mov
adc
lret
nop
jo
js
cmp
scas
xor
test
cmp
cmp
mov
xchg
jp
into
inc
aam
mov
lods
and
sub
adc
sub
fiaddl
and
lahf
movsl
mov
lock
push
xor
adc
nop
je
sahf
je
xchg
sahf
add
push
xor
inc
mov
outsb
push
add
dec
popa
pop
repz
aas
push
xor
mov
sub
ds
in
push
mov
or
ja
jo
lahf
xchg
roll
imul
insl
xchg
loop
add
lahf
sub
mov
in
iret
jecxz
sahf
fwait
pop
xchg
jp
cwtl
lahf
ljmp
sub
daa
outsl
stos
cmpsl
fisubrl
xorb
jnp
jecxz
add
lea
inc
cmp
mov
stc
into
arpl
dec
mov
enter
mov
dec
jnp
imul
push
adc
imul
adc
pop
pop
sbb
cmovno
and
call
das
sub
push
ja
jae
mov
inc
sbb
sub
or
cmpsb
jp
sbb
lret
xchg
push
aad
mov
ret
or
jne
mov
outsl
lds
add
lods
lahf
jnp
xor
icebp
in
dec
icebp
push
dec
scas
repnz
push
lcall
mov
pushf
mov
outsl
inc
dec
and
in
adc
pop
push
sub
adc
adc
inc
ret
pop
xor
jo
mov
ljmp
sbb
std
mov
stos
nop
lret
jg
repnz
sbb
dec
mov
out
repnz
insl
and
mov
jne
scas
gs
push
adcl
adc
loope
adc
cmc
lret
loope
mov
aas
mull
dec
popa
cli
pop
jbe
jne
mov
jp
ret
imul
lock
lahf
add
cmp
pop
add
lock
or
notb
jl
sbb
xor
stc
pop
hlt
ljmp
gs
and
push
insl
lock
and
jmp
cmp
int
add
enter
push
pusha
pushf
cmp
incb
inc
add
dec
pop
pop
leave
cmpsl
inc
sbb
aad
push
dec
dec
sbb
test
jp
mov
sub
iret
dec
rclb
mov
xchg
inc
movb
mov
mov
and
fbstp
cmp
mov
fbld
mov
push
insb
xchg
add
imul
mov
imul
cli
mov
mov
arpl
dec
and
ret
add
jo
push
aad
fstps
jecxz
ret
in
pusha
jnp
dec
adc
push
sub
cwtl
shl
shlb
cmp
mov
stc
sub
pop
cmp
adcb
jle
or
mov
mov
cmp
pop
push
mov
lahf
pop
add
mov
push
xchg
test
dec
pushf
imul
push
test
out
jmp
jbe
ds
and
mov
cmpsl
xorb
repz
les
es
pop
sti
mov
data16
insl
mov
mov
lock
add
mov
lods
leave
stc
and
test
in
push
xchg
inc
xor
call
add
inc
bnd
mov
jno
aad
sub
pop
adc
rorl
mov
sub
push
lret
mov
aad
enter
cs
lds
inc
mov
sbb
or
lret
mov
mov
mov
push
xchg
jns
std
fs
or
mov
fs
push
negl
sbb
dec
loop
sub
fistl
xor
stos
mov
cwtl
cmpsb
jnp
sub
jb,pt
sub
sti
mov
xor
es
push
divb
cwtl
stos
dec
jmp
hlt
cmp
out
push
add
push
mov
mov
rol
mov
sbb
push
fs
push
jnp
cmp
inc
mov
mov
push
pop
rcrb
and
clc
xchg
aad
jo
ja
and
inc
jp
jb
pop
mov
cmp
pop
lahf
in
cld
pop
cld
inc
sbb
xchg
imul
pop
jl
push
add
pusha
insb
cmp
call
jl
mov
js
daa
mov
fidivl
das
cmp
inc
xchg
addb
mov
fistpl
or
push
neg
rcrl
repnz
mov
sahf
xor
imul
mov
xchg
and
arpl
and
clc
movsb
sub
sbb
jno
sbb
js
fwait
bnd
andb
or
cmc
jb
ja
mov
xor
dec
xchg
jge
cmp
andb
sti
inc
lret
sbb
test
movsl
inc
aas
push
jo
lahf
xchg
sub
sbb
imul
jl
loop
push
mov
push
xor
xchg
add
xor
cmp
add
std
test
mov
imul
dec
xchg
adc
xor
cld
icebp
mov
xlat
cwtl
les
sbb
shlb
outsl
mov
dec
fs
xchg
ljmp
mov
push
pop
pushf
enter
movsb
inc
sub
add
or
jl
push
stos
mov
nop
mov
int
sub
push
insl
cmpl
stc
push
aaa
jmp
jle
rcrb
lods
lahf
mov
iret
int
xchg
hlt
outsb
jne
xchg
jmp
mov
fidivl
clc
or
adc
fildll
xorps
mov
sub
jns
inc
jbe
imul
and
sub
fisttpll
addr16
mov
outsl
dec
and
xlat
cmp
mov
push
ret
cmp
cltd
inc
push
sbb
scas
cltd
adc
lea
inc
ror
push
adc
fisttps
xor
pop
mov
jns
mov
mov
aaa
in
xchg
push
and
cmpsb
cmp
mov
loop
mov
sbb
push
rcr
jecxz
mov
cmc
mov
jb
fiaddl
push
mov
or
xor
push
pop
pop
arpl
insb
pop
xor
cmp
mov
jg
and
fstl
inc
mov
push
lahf
push
inc
dec
and
repz
outsb
outsb
pop
sbb
lret
xchg
push
les
mov
fsubrl
in
movb
cli
push
inc
mov
push
sub
pop
insl
int3
jne
jae
faddl
lcall
push
sarb
sbb
jae
dec
adc
int3
mov
xchg
inc
or
sub
jb
int3
out
add
jns
fisubrl
bound
jg
rcr
test
sahf
stos
insl
or
lret
dec
pop
dec
cmp
pop
dec
xchg
xchg
fldt
test
mov
mov
mov
jo
jbe
pushf
push
lea
inc
push
mov
sbb
sbb
mov
das
pop
call
sbb
stc
cmp
aas
sub
aas
in
aaa
loopne
and
xchg
std
inc
push
jno
inc
das
fists
adc
sbb
gs
jo
mov
xchg
repz
cmp
or
stos
cmp
outsl
push
cld
or
outsl
test
call
adc
or
mov
mov
dec
in
mov
xchg
mov
sbb
push
pop
out
xchg
cs
shrb
push
xor
cli
cmpl
ret
and
stc
push
mov
xor
pop
aas
pop
inc
mov
sub
mov
subl
jl
int
xchg
loop
mov
jo
movsb
inc
test
mov
fisubrl
repz
sub
aaa
fcmovnbe
pushf
jnp
test
jns
mov
ret
adc
out
xor
test
mov
fstps
js
adc
fsts
dec
push
stc
sbb
ja
roll
negb
push
and
or
jp
pop
mov
fwait
cwtl
add
mov
cmp
inc
or
cmp
jle
xchg
ljmp
xchg
sub
mov
fdivrl
scas
repz
and
mov
mov
incl
fyl2x
mov
dec
nop
cmpsb
mov
push
test
fnstenv
ds
xlat
cli
inc
arpl
adc
jo
xchg
bnd
ljmp
fisubrs
gs
xor
jb
cmp
out
push
jl
hlt
xchg
dec
shlb
sub
mov
inc
leave
outsb
pop
lret
stc
bound
sarb
ss
lret
cwtl
adc
js
push
movsb
stc
rorb
leave
mov
dec
scas
push
and
adc
mov
adc
jb
setae
mov
jbe
gs
sti
sbb
dec
aam
pop
cmp
jle,pt
fstpt
hlt
xor
rolb
lret
inc
test
rorb
push
sbb
xchg
imulb
pop
lidtl
ss
xchg
xchg
xlat
xchg
mov
pop
add
mov
rclb
faddl
sti
pop
sub
leave
mov
call
in
and
scas
femms
les
jl
push
call
daa
sti
lret
cmp
stos
add
and
and
out
popf
sahf
clc
and
in
mov
mov
cmp
popa
insl
ret
in
and
inc
not
dec
dec
lea
std
ret
push
mov
inc
sub
xor
test
rol
subl
aam
scas
shlb
imull
add
or
add
sbb
push
adc
cmc
push
call
adc
or
fwait
xchg
cmp
lret
in
mov
or
leave
jecxz
push
xor
or
cwtl
repz
int3
xlat
jl
mov
mov
push
mov
mov
stos
mov
jl
dec
mov
lods
xchg
jae
or
mov
loop
stc
sahf
cmpsl
inc
out
stos
test
mov
push
mov
daa
lods
ja
fcmovb
sub
xchg
xlat
jl
mov
mov
mov
or
fimuls
out
push
es
ficoml
lahf
leave
ljmp
psllq
xor
lock
jns
fiadds
pop
push
and
je
sbb
stc
cmpsb
or
loope
sub
sbb
imul
pushf
outsl
pushf
pop
sahf
loope
shrb
insl
lods
outsb
pop
pop
add
mov
push
push
test
add
xorb
iret
lret
jl
pop
rorb
imul
sub
sarl
lcall
mov
push
cmpsb
fisubrl
adc
repnz
xchg
dec
mov
popa
mov
sub
mov
sbb
les
xor
aam
outsl
or
jne
adc
repz
bound
leave
inc
sub
repz
call
mov
fcomp
xor
mov
aam
neg
rolb
mov
fs
and
ja
loop
aam
push
adc
push
adc
fcomps
adc
ja
shrl
add
cmp
ficoms
icebp
add
nop
sbb
pop
out
lcall
lock
ljmp
pop
hlt
or
fwait
adc
aam
cmp
cmp
add
divl
mov
dec
push
sahf
sub
or
xlat
jae
scas
imul
in
lahf
repnz
in
add
and
pop
in
aas
xchg
addb
in
adc
mov
pop
hlt
adc
into
add
push
lock
nop
pop
xchg
sub
pushf
jb
push
rolb
loope
xor
scas
movsl
and
sub
add
inc
hlt
push
xchg
sbb
mov
cmpl
or
mov
add
sub
pop
daa
cmp
adc
and
int3
and
testb
cmp
xorb
shl
or
jle
test
out
xor
lods
mov
insb
stc
popa
test
dec
push
inc
inc
loope
lds
jge
pushf
leave
stos
push
mov
or
pop
pop
mov
ret
scas
jb
outsl
push
dec
cmpsb
sub
mull
sbb
cmp
inc
sub
add
add
in
inc
sbb
jp
sbb
in
sub
pop
mov
mov
xor
cmp
call
xor
inc
fs
pop
ret
or
je
test
xchg
push
test
fwait
add
jl
mov
mov
rol
mov
sbb
ss
shrb
movsl
hlt
cmp
movswl
cmpsl
jb
mov
inc
add
mov
xlat
out
cmp
in
push
inc
das
push
sti
add
mov
push
test
nop
stos
xchg
xchg
add
outsl
test
mov
repz
sub
ja
popa
jnp
inc
lods
sbb
aam
push
lock
pop
daa
sub
sbb
sbbb
jge
or
or
mov
and
mov
mov
pop
scas
mov
cld
mov
jp
sub
in
daa
push
push
jmp
fidivrs
and
add
inc
push
dec
push
lods
cmp
inc
sub
mov
in
add
je
aam
ss
xchg
jae
xor
push
xchg
sbb
push
mov
sbb
dec
subb
test
inc
push
push
les
and
mov
pop
pop
dec
sbb
push
xorl
int3
sbb
dec
push
pop
lret
and
mov
gs
or
xchg
jb
into
sbbl
sti
imul
jecxz
movsb
ficoms
test
pop
xchg
pop
scas
cli
into
not
popf
xlat
jge
lock
mov
push
imulb
jnp
push
and
aam
add
dec
or
loope
pop
or
and
loopne
mov
cwtl
inc
sub
fsubrs
loope
lods
pop
test
test
mov
jmp
mov
jo
nop
mov
mov
add
mov
insl
outsb
cmc
pusha
pop
lods
jg
adc
adc
ds
adc
rcrb
loop
frstor
gs
in
fwait
and
cmovl
jbe
out
dec
push
pusha
inc
popa
jns
ret
pusha
insb
add
ljmp
and
pop
push
or
xchg
and
mov
into
ficoml
push
cmpsl
sub
jl
cmp
sbbl
mov
adc
jmp
mov
insb
jns
addl
mov
dec
cmp
jmp
out
xchg
fnstcw
loopne
in
cli
mulb
sahf
shll
fsubp
push
shrl
loop
cmpsb
push
fcoml
xor
pop
and
loop
je
xor
mov
data16
pop
adc
mov
adc
outsb
jecxz
outsb
add
pushf
adc
pop
shlb
shlb
inc
outsl
push
insl
or
xor
pop
cmp
ret
sti
loope
add
fiaddl
push
jbe
dec
stc
lods
cmp
jo
sbb
cli
rorb
ljmp
xchg
ror
cmp
repz
nop
pop
popl
pusha
sbb
roll
and
pop
lods
push
mov
push
cmpsb
pushf
fldcw
push
inc
pop
in
cmp
xchg
mov
decb
pusha
aad
mov
push
or
std
mov
add
push
and
jb
add
test
lret
pop
cmp
mov
dec
imul
data16
rcrl
lods
and
daa
scas
xchg
ret
add
aad
aas
adc
sub
lods
fsubrs
call
dec
aam
adc
test
mov
and
adc
add
jge
add
mov
sbb
int3
adc
mov
imul
sub
bound
push
subl
dec
add
push
outsl
cltd
inc
push
push
lds
fcompl
jecxz
or
sub
mov
mov
fpatan
push
push
mov
push
cs
std
in
adc
sub
popa
or
je
or
sarb
decb
shrb
sub
sqrtps
movzbl
std
add
pop
dec
pop
ds
dec
mov
rorl
pusha
sub
aaa
lret
cmp
inc
stos
inc
xchg
push
test
data16
add
or
push
ss
sbb
push
orb
xchg
popa
cmp
pop
cmp
cmpsl
adc
adc
lods
lea
cs
fxtract
rorb
scas
leave
xlat
sar
test
xchg
aas
mov
or
add
paddb
mov
shlb
cmp
bound
outsl
push
fcmovnbe
sbb
adc
inc
jnp
push
add
pop
cmp
sbb
adcb
scas
pop
arpl
cmp
shlb
call
and
out
mov
icebp
rclb
push
jmp
mov
pop
and
lods
icebp
mov
jp
or
fwait
push
mov
push
scas
fldenv
sbb
mov
pop
les
jecxz
mov
lds
lahf
push
jo
lcall
mov
movsl
jle
sbb
repz
ja
fisubrs
and
je
popf
cli
ss
inc
mov
push
pop
fwait
rclb
push
or
imul
leave
fsts
mov
jecxz
mov
dec
push
cmp
sub
sahf
xchg
fsts
repz
add
fcomp
add
add
rolb
adc
xor
roll
clc
lret
jb
or
ds
icebp
xchg
inc
add
enter
pop
popf
push
lds
cld
xor
movsl
fsubl
test
ret
add
in
fnsave
mov
mov
iret
mov
iret
jbe
mov
ret
and
push
les
arpl
cld
jmp
jnp
lea
clc
loope
cmp
push
fdivrl
push
push
push
lcall
xor
mov
sahf
loopne
cwtl
shl
clc
lock
mov
mov
out
pop
push
aas
inc
mov
in
notb
das
jns
jmp
leave
aaa
ljmp
bound
adc
ucomiss
int
jno
push
sbbl
lcall
and
insb
mov
aad
lock
in
pop
imul
jb
sub
cs
push
cmp
loope
fisttpl
int
mov
mov
inc
lret
fmuls
cld
out
and
jecxz
cmpsb
das
mov
add
adc
ret
lock
shll
pop
in
mov
add
sbb
popa
int
and
jne
insb
pop
in
dec
mov
xor
mov
test
jecxz
ja
les
mov
pop
popf
lret
or
sbb
pushf
leave
jmp
sbb
mov
mov
pushf
pop
scas
std
bound
push
bound
jle
push
xor
adc
push
stc
das
leave
and
fdivrs
jo
mov
leave
mov
nop
inc
xor
push
mov
sbb
lret
adcb
ror
adc
xor
adcb
int3
out
fiadds
mov
pushf
cwtl
jo
iret
popf
popf
leave
jp
cmp
fldl
pop
cmp
sbb
int3
push
xchg
jo
push
cmpsb
mov
push
xor
mov
aaa
cmp
mov
xchg
mov
xor
pop
movsl
xchg
inc
mov
mov
ljmp
adc
sbb
xchg
inc
lret
stc
pop
cld
xchg
push
sbb
push
lods
push
jne
js
inc
xchg
mov
dec
or
push
mov
cmp
pop
adc
pop
and
add
sbb
mov
mov
push
inc
pop
pop
test
jbe
dec
cmpsl
cmc
lret
repnz
fwait
dec
lea
or
out
push
push
or
call
lods
adc
fnsave
or
and
daa
sbb
cli
ret
mov
cld
inc
fdiv
lods
sub
sub
gs
aaa
ss
in
push
jno
rolb
rcr
pop
imul
outsl
mov
add
enter
or
lret
int
stc
es
lahf
arpl
lahf
push
stos
shr
ljmp
xchg
subb
cli
sub
andb
cs
adc
dec
lfs
pop
pop
cmp
xor
ja
pop
jne
enter
icebp
cmc
rol
leave
outsb
filds
mov
test
add
testb
and
inc
jmp
pop
sbb
dec
or
xor
sub
daa
in
fwait
je
cmp
pop
and
out
cmc
jp
mov
decl
mov
cltd
aaa
xchg
add
fiadds
aaa
lret
arpl
xchg
dec
add
shlb
gs
insl
mov
add
dec
pushf
or
inc
mov
cli
inc
push
ss
mull
jb
jns
mov
test
std
cmpsb
into
cmpsb
ret
scas
mov
sub
mov
xchg
xor
leave
sbb
ja
jns
fwait
pushf
addb
adc
movsl
jo
dec
push
je
sbb
int
das
jnp
shlb
cwtl
cmpsb
aad
add
sbb
dec
inc
fldenv
imul
aaa
pop
cmpxchg
rorl
call
xchg
les
jbe
jmp
lahf
in
orl
sar
mov
xchg
xor
pop
sbb
cltd
jl
inc
cmp
std
sbb
loop
lods
adc
aas
int3
fst
xchg
mov
jg
and
mov
or
mov
mov
icebp
push
pop
lea
inc
jmp
and
ja
pop
and
inc
fwait
test
mov
jb
subl
mov
ljmp
adc
shll
and
add
mov
pushf
xor
mov
xchg
inc
jnp
mov
sub
int
out
xlat
add
loop
insl
xchg
mov
xor
loope
xchg
nop
jecxz
xchg
out
fcmovne
sbb
dec
inc
in
add
dec
dec
inc
mov
sub
sbb
xchg
mov
jp
add
push
aas
bound
add
cmp
mov
mov
ret
leave
cmp
hlt
cltd
loope
adc
xchg
js
pop
xchg
arpl
sub
fstps
or
sbb
xor
mov
adc
xlat
pop
insb
mov
mov
int
sti
cmpsb
test
sbb
and
mov
mov
outsb
idiv
or
lds
mov
fisttps
push
xor
fdivrs
fwait
mov
inc
sub
dec
mov
inc
iret
dec
movsb
mov
xlat
addb
push
shl
push
xchg
cmp
jle
inc
mov
xchg
movsl
clc
mov
mov
shl
lahf
loope
sbb
movb
push
jae
int
aad
clc
shlb
mov
in
repz
adcb
out
leave
cmpsl
push
and
inc
push
aad
das
mov
push
cmp
adc
cmc
fs
mov
push
push
inc
sub
imulb
xchg
mov
mov
mov
and
mov
add
outsb
rclb
cmpsb
hlt
into
clc
cmp
mov
mov
dec
jg
mov
push
push
test
xor
lahf
sbb
cmpsl
cwtl
loopne
add
add
out
leave
movsl
movsl
xlat
test
ret
sub
out
leave
inc
and
and
rcrl
popa
in
mov
rcr
arpl
or
dec
pop
jo
xor
mov
cmp
dec
push
mov
fs
push
lods
mov
sub
and
jl
mov
mov
push
xchg
popw
mov
stos
mov
sbb
mov
and
ret
aam
mov
add
int3
mov
and
lds
mov
jo
sub
rcr
divb
pop
adc
adc
xor
icebp
mov
add
sahf
mov
jp
mov
out
inc
rcll
add
mov
sbb
mov
add
dec
pop
insb
dec
and
push
jp
and
jecxz
dec
xchg
mov
sbb
mov
test
add
push
xchg
xchg
popa
sbb
sub
add
pop
push
add
cs
pop
fsts
mov
inc
dec
outsl
ss
sbbl
sbb
inc
add
sbb
sbb
sub
imul
lahf
icebp
mov
jns
mov
sti
cmpl
add
push
push
mov
jge
push
and
flds
outsl
add
add
dec
xorl
test
jle
lahf
or
cmp
jb
push
cmp
or
rolb
push
sub
in
push
pushf
test
outsl
push
pushf
mov
data16
adc
lods
shl
dec
inc
cmpsl
in
sbb
shl
pusha
mov
test
xchg
adc
xor
shlb
jle
imul
sub
test
sbb
cltd
outsl
icebp
adc
daa
or
and
inc
xchg
cwtl
jg
dec
movsl
add
mov
ret
rcll
sub
je
ja
and
xchg
push
nop
jb
push
stc
dec
hlt
xchg
push
and
aas
pop
mov
lods
mov
cli
cmpb
mov
loopne
inc
and
out
push
lcall
cmp
cs
dec
push
cmp
lods
jae
push
fisubl
insl
loope
mov
aaa
pop
call
in
mov
fcoms
andl
jp
mov
jmp
test
jg
jbe
sahf
pushf
and
mov
insl
mov
popa
push
dec
fdivrl
test
xor
sub
leave
sub
loopnew
sahf
adc
popa
dec
xchg
sti
pop
rcll
mov
clc
pop
bound
cmp
data16
ret
mov
ljmp
cli
or
sub
call
popa
popf
lock
fistps
pushf
mov
cmp
lods
stos
push
shr
mov
insl
das
les
jns
mov
lret
inc
and
lea
lret
mov
sarb
and
xchg
icebp
and
nop
mov
adc
cmp
lret
and
mov
push
dec
dec
or
imul
inc
test
outsl
fistpll
out
popl
inc
push
fisttps
mov
add
dec
mov
mov
lret
xor
mov
int3
or
ljmp
mov
xchg
mov
push
add
inc
or
mov
xchg
inc
fsin
fs
out
sbb
fsts
nop
nop
adc
stc
es
push
pushf
dec
push
lods
iret
scas
xchg
sbb
adc
fstl
push
dec
add
push
sub
push
lods
outsl
and
std
sbb
in
dec
sbb
and
jnp
add
js
call
or
sub
pushl
lods
dec
xchg
xor
sbb
jmp
shll
iret
cmc
cltd
xchg
out
test
test
push
rcl
out
sub
sub
imul
cmp
mov
ds
fisubrl
cli
js
push
add
fwait
lret
lahf
jae
mov
ljmp
jne
stos
lods
notb
push
jns
push
cmp
and
scas
out
pop
xchg
cmp
out
sti
fbstp
mov
ret
cmp
in
mulb
sbb
loopne
or
xchg
ret
ja
stos
scas
push
sbb
ret
push
cmp
or
mov
fdivl
dec
xchg
in
outsb
jp
or
dec
in
das
pusha
pop
mov
or
adc
les
mov
jo
aas
lahf
mov
scas
add
es
test
add
lcall
rcll
lcall
testb
mov
icebp
rolb
gs
push
push
mov
xor
test
jnp
jp
jecxz
jne
push
push
sub
push
mov
push
outsb
inc
out
pop
cmp
inc
pop
mov
clc
add
mov
add
pop
stc
mov
sbb
clc
int3
push
hlt
aaa
leave
jne
jbe
sahf
inc
sbb
push
insl
push
insl
sbb
andl
sub
pushf
cltd
jle
iret
std
in
or
in
sub
dec
add
fwait
out
inc
add
mov
lret
shll
into
lret
fsubrs
enter
adc
sbb
loope
lret
pop
pop
popa
call
scas
rclb
mov
xchg
mov
adc
add
push
adc
sub
stc
pop
nop
scas
rolb
or
js
nop
pop
push
imul
hlt
jge
loop
cmpsb
repz
or
test
sub
add
int3
mov
int
arpl
cwtl
push
add
pushf
mov
push
jp
push
pop
dec
cs
imul
push
aad
adc
mov
jno
push
xor
xor
sarl
jb
pop
lds
push
jno
push
icebp
hlt
cltd
push
xor
js
push
adc
subl
or
xor
popa
cwtl
ss
loopne
cmp
sbb
into
cld
fdivrl
jnp
lret
dec
jnp
fcmovnb
sbb
out
sbb
or
popa
add
sarb
rcl
push
inc
push
jo
sbb
jmp
pop
popa
jg
mov
testl
or
pop
fs
xlat
repz
jo
repz
push
sub
aam
push
out
push
jnp
pop
push
lods
xchg
fwait
xchg
inc
decb
mov
das
cmc
sbb
lds
cmp
outsl
andl
dec
mov
jnp
sub
and
test
test
jmp
ss
ja
int
aad
inc
test
push
sub
sarb
or
dec
xchg
imul
add
sub
jae
movsl
add
mov
subl
dec
test
add
sbb
push
mov
test
ret
jnp
xor
and
mov
gs
sub
mov
repz
sbb
pop
in
lret
stos
scas
add
sub
jl
sbb
stos
jae
shlb
mov
pop
or
xlat
mov
dec
gs
fldt
push
mov
pop
rolb
dec
mov
mov
loop
or
daa
push
movsl
insl
jnp
ja
cvtps2pi
cltd
in
fidivrl
mov
jb
push
or
fnsave
jg
mov
sub
testb
cwtl
inc
lcall
xchg
test
movsb
jo
out
insb
xor
inc
outsb
cmc
sub
xchg
lcall
dec
sub
sbb
cmp
xor
out
sub
jo
lods
pop
mov
out
mov
push
or
jbe
call
in
daa
dec
mov
mov
dec
lock
ror
adc
inc
push
cmpsb
and
js
xor
sub
push
and
aaa
rorb
or
ds
stc
push
pop
pop
shrb
lods
mov
cwtl
shl
inc
mov
pop
jns
loope
pop
push
mov
mov
les
insb
test
call
pop
jg
lret
xor
in
jp
popa
mov
int
or
aad
dec
mov
jle
dec
inc
or
sub
push
push
test
test
push
lods
outsl
daa
lahf
cs
mov
testl
sub
mov
mov
mov
insl
mov
bound
call
and
dec
xchg
aaa
out
shrl
xchg
or
das
hlt
inc
aam
lods
push
imul
cmc
fisubs
adc
add
out
xchg
in
popa
add
xor
jp
xlat
cmpsb
inc
dec
jo
pop
ret
sub
es
inc
rcll
outsl
cli
xchg
dec
push
add
lret
test
test
decb
xchg
xor
xor
repz
mov
out
call
jg
cmp
push
and
insb
cmp
push
push
movsb
lods
mov
pop
mov
lods
icebp
insl
push
divl
jo
cmp
xchg
cmp
sbb
cmp
jae
fidivrl
ss
jae
cmpsl
or
push
mov
in
sbb
push
cld
in
cltd
adc
loope
pop
mov
imul
loopne
stos
sahf
clc
aam
xor
lahf
out
xchg
and
inc
cmpl
cmp
adc
mov
loop
lcall
inc
or
xchg
insl
cmp
jle
sub
jecxz
mov
push
jbe
and
cmp
dec
pop
and
pushf
mov
sbb
js
loop
mov
fadd
ficomps
mov
loop
pop
pop
ss
dec
scas
mov
ds
fisubrl
test
mov
test
push
std
outsb
xchg
inc
subl
sub
ja
cmpsb
ret
cwtl
xor
mov
out
add
cmp
pusha
roll
leave
lds
jl
sbb
cmp
popl
repz
adc
cmp
rolb
int
pop
push
les
fildll
test
outsb
cmp
dec
or
inc
dec
insb
fisttpll
mov
into
imul
cmp
fdivs
shll
cld
les
in
int3
mov
and
sahf
jns
inc
xlat
add
dec
jo
or
xchg
aad
stc
inc
xorl
xor
cmp
imul
cmp
mov
fimuls
insl
imul
xchg
in
push
repz
movsl
in
lods
dec
dec
xchg
mov
jno
movsb
lds
adc
adc
test
xchg
mov
jle
mov
push
lahf
and
mov
leave
loopne
loop
jl
adc
add
fisubl
mov
pushl
xchg
ret
xchg
outsb
outsl
jne
loope
mov
stc
daa
sahf
test
pop
mov
adc
loopne
fstpt
popf
dec
dec
fisttps
popf
lods
dec
sbb
pop
aas
ss
sarl
sahf
push
xor
jns
stos
gs
icebp
movsl
cmp
rcl
push
sbb
inc
sahf
setb
xchg
leave
scas
aad
dec
mov
loope
jle
inc
insb
cmp
jecxz
pushf
or
mov
leave
das
or
popf
je
mov
and
xor
cld
or
xor
sbb
scas
call
clc
ret
sbb
jmp
mov
outsb
adc
xor
aam
aam
xor
shl
mov
and
dec
mov
adc
repz
cmp
adcl
fucomi
sub
outsb
out
xor
adc
add
sub
cmp
mov
in
test
stos
rorb
jl
cmpsb
mov
stc
imul
js
repz
test
dec
shl
rcrb
cwtl
ljmp
inc
rcr
inc
fadds
jl
imul
xor
out
outsl
repnz
ja
mov
and
xor
aam
mov
leave
lcall
and
loop
in
ljmp
fidivl
popa
rcl
push
cli
jmp
jle
sti
ja
add
xchg
pop
loope
and
push
hlt
cli
jae
push
xor
ja
cltd
push
addr16
ss
mov
jmp
hlt
js
adc
inc
mov
mov
push
out
or
aad
lret
movb
rorl
cs
fidivl
dec
lret
sbb
hlt
mov
lret
adc
and
pusha
repnz
push
mov
jbe
outsl
jb
dec
cmpsb
faddp
call
cmpsl
cmp
add
movsl
cs
fadds
jae
pop
popf
xchg
dec
loope
add
mov
icebp
loop
cmp
inc
out
movsl
lock
jne
add
mov
out
lods
push
lods
sbb
dec
mov
lret
sti
or
pop
es
test
stos
leave
lret
inc
cli
insb
fildl
lods
int3
das
std
inc
cmp
in
xchg
in
or
push
cmp
jle
lods
fadds
jmp
lahf
sub
add
cwtl
mov
je
test
out
mov
pop
pop
sub
mov
jle
xor
ss
in
and
adcl
xorb
mov
imul
cmpsb
dec
mov
or
fwait
cmpsl
ja
push
stos
mov
pop
mov
stos
stos
sti
pop
cmp
sbb
cli
cmp
cs
mov
mov
leave
push
inc
push
xchg
sahf
out
sub
sub
inc
pop
movsl
repz
jnp
loop
xchg
std
fildll
adc
cld
fdivrs
je
pop
sahf
mov
add
cld
mov
xor
mov
jmp
pop
dec
sub
inc
and
in
imul
add
cmp
mov
jg
fs
arpl
and
pop
inc
lds
sbb
rclb
shlb
mov
xor
ja
lret
fwait
mov
sub
mov
or
or
fmull
iret
shlb
push
into
lcall
pop
enter
out
in
pop
popf
pop
leave
mov
or
test
push
jbe
out
xor
cmpsb
inc
jp
cli
dec
fadds
inc
test
xchg
ret
ds
sbb
dec
rclb
push
test
imul
add
imul
outsl
xchg
int
mov
arpl
jno
mov
enter
inc
sbb
mov
cmp
sub
inc
add
mov
adc
pop
lods
clc
pop
sub
sbb
mov
out
sbb
mov
mov
xor
fsubs
add
fs
push
push
and
sbb
sub
inc
sbb
into
pop
icebp
xor
adc
repnz
push
aam
idivl
cmpsl
pop
test
adc
icebp
int3
xorb
shlb
outsb
inc
cmp
sub
or
ret
adc
dec
sub
push
js
out
mov
out
imul
and
cmpsb
pop
mov
cmp
aaa
adc
test
mov
mov
mov
jo
in
out
jno
sbb
jo
jne
sarl
xor
mov
fs
and
ja
outsb
xor
into
fistpl
lods
movsl
cmp
ss
mov
mov
add
fsubs
xor
pop
sbb
add
aas
outsb
int
in
inc
push
hlt
outsb
ret
andl
xor
test
jp
inc
sbb
pushl
add
push
sbb
inc
dec
xchg
mov
imul
mov
outsl
adc
sub
pop
outsb
mov
or
xor
stc
mov
dec
adc
cltd
div
xor
call
enter
mov
sbb
ljmp
cs
xorb
jns
dec
or
sub
pop
mov
loop
cld
loopne
in
les
mov
pop
popf
cmovge
cmp
gs
popf
push
loopne
inc
js
orb
add
and
sub
test
mov
repnz
jbe
push
mov
and
mov
xchg
js
sbb
mov
fucomp
pop
lods
adcl
pop
iret
add
mov
nop
and
aas
fisubrl
subl
lods
cld
or
mov
out
sbb
push
push
dec
test
out
mov
mov
add
rcrl
cmc
mov
daa
mov
xor
pusha
push
adc
lret
popf
push
ljmp
cltd
mov
or
pop
ljmp
add
out
push
mov
adc
mov
xchg
push
sub
pop
int
je
ret
sbb
in
inc
imul
mov
mulb
lds
cwtl
cmp
shlb
push
sti
shll
pop
stos
mov
xchg
xchg
add
cmp
ret
stos
jl
ja
in
mov
push
xchg
fiaddl
xorl
je
mov
lods
xor
shll
repz
fsubs
lods
int
addr16
xor
sbb
pop
arpl
addb
xchg
mov
clc
sub
pop
fwait
xor
mov
aas
inc
adc
adc
push
pop
jb
sarl
arpl
mov
test
leave
cltd
outsl
xorb
mov
inc
dec
jo
sub
leave
inc
xchg
psrld
outsl
push
inc
cmp
pop
ss
pop
dec
in
jns
or
pop
fistpll
fdivrl
cmpsb
jnp
sub
mull
dec
add
fidivs
mov
mov
imul
cmp
adc
jb
xchg
ja
or
popf
icebp
adc
in
std
pop
int
loopne
mov
pop
daa
arpl
push
push
ret
mov
jp
pop
fldt
dec
xor
lods
subb
cmp
ror
push
fisubrs
or
push
and
fwait
test
push
inc
inc
xor
sbb
mov
cmp
lret
pop
push
aad
mov
in
xor
pop
arpl
cmpl
daa
popf
xor
xlat
mov
pop
pop
add
jb
jl
mov
sarl
stos
nop
mov
xor
jns
mov
mov
fs
enter
scas
stos
out
push
sub
fists
xchg
popa
xchg
repnz
mov
lea
inc
inc
int
nop
lahf
jae
sbb
add
test
dec
jno
leave
inc
lret
xchg
repnz
ss
rcl
and
das
mov
pop
push
pop
fcomp
daa
fnstenv
and
out
pushf
jmp
jnp
icebp
fimull
outsb
daa
nop
push
mov
sti
jb
sbb
mov
xchg
int3
xor
movups
in
pop
and
loop
or
gs
data16
xchg
jecxz
xor
xor
jle
repnz
push
in
xorl
or
pop
test
add
insl
xor
jb
mov
fs
xchg
push
outsb
sbb
repz
out
lea
cmp
clc
lcall
mov
in
leave
jg
add
cs
pop
aas
aam
bnd
andps
inc
pop
push
push
add
ret
and
in
lret
mov
fdiv
movsl
pop
inc
mov
sub
or
jmp
inc
into
pop
mov
xor
dec
or
inc
sub
pop
gs
jne
and
loope
mov
insl
mov
push
xor
lsl
dec
mov
push
std
lods
dec
mov
sub
aam
or
adc
dec
inc
inc
mov
ljmp
imul
insl
adcl
rcrb
enter
cmp
test
jg
add
rolb
xor
inc
inc
js
stos
movsb
pushf
sbb
outsb
mov
push
dec
sub
push
cmp
fninit
stos
cltd
jge
mov
fisubrs
jecxz
and
jecxz
add
or
jns
repz
jbe
sbbl
pop
push
xor
push
push
out
rorb
xor
mov
imul
test
sbb
roll
mov
or
xor
adc
sbb
sbb
fildl
lret
mov
lds
push
outsb
mov
push
dec
popa
xorb
fadd
icebp
into
scas
rorl
sbb
xlat
xor
pusha
outsb
jg
loop
fs
mov
or
cltd
mov
loopne
stos
ret
cmp
adc
dec
and
test
lahf
pop
cmc
jl
daa
clc
lods
mov
out
or
dec
js
inc
sub
dec
aas
lock
pop
call
jbe
mov
or
pop
aam
cld
movsl
push
enter
sub
cmp
xchg
jbe
mov
lock
ret
out
cmp
lds
jno
jns
fisubl
sub
xchg
int
iret
orl
sti
xchg
sar
inc
adc
jmp
xchg
icebp
push
movsl
xchg
gs
push
push
push
push
sbb
inc
movsb
cmp
jecxz
inc
or
push
cli
xchg
jo
sub
pop
push
jae
push
orb
dec
insb
inc
das
jbe
jb
dec
shlb
shrl
test
jno
jbe
cmp
cmpsl
jge
repnz
add
sbb
fstpt
fidivrs
gs
sub
xchg
lcall
xchg
call
scas
mov
call
mov
mov
rcll
mov
mov
ljmp
sub
insl
pcmpgtd
leave
jmp
mov
fisttps
es
sub
popa
xor
aas
dec
movsb
add
lahf
shrb
pusha
xchg
frstor
in
loop
lret
movsb
cmpsb
cmp
mov
jno
cmp
ljmp
xor
xchg
mov
adc
gs
mov
bound
jl
pusha
in
inc
lahf
insb
push
xor
nop
dec
or
dec
fidivl
push
or
lods
scas
mov
testb
jns
inc
outsl
cli
push
pop
icebp
jne
js
cltd
xor
push
mov
lret
push
inc
xchg
sbb
sahf
or
iret
scas
shrl
or
dec
gs
inc
lret
repnz
pop
or
xchg
ljmp
aam
mov
notl
fcomp
mov
loope
mov
loop
sahf
sbb
neg
or
xor
popf
test
in
dec
xor
or
inc
lret
sub
out
jae
dec
dec
jmp
cmc
mov
sub
sarl
push
icebp
push
mov
ficompl
sti
negb
sub
jmp
adc
rcrb
cmpb
and
dec
mov
push
xor
icebp
adc
lods
jae
out
mov
and
mov
inc
sbb
mov
mov
jge
inc
sub
hlt
jg
xchg
insl
movsl
insb
xchg
pop
rorl
out
rorl
cmp
mov
push
pop
pop
inc
sub
fisttpl
cmc
je
call
loopne
mov
inc
cwtl
sub
loopne
or
cli
dec
jb
cld
dec
sarl
clc
inc
push
into
jg
std
adc
imul
sub
add
or
mov
ds
rcrb
mov
push
cli
cmpsl
cmp
push
cld
pushf
dec
cmpsb
out
int3
movsl
adc
into
push
xchg
sbb
fildll
scas
negb
push
pop
inc
subl
ss
add
iret
rclb
lea
ret
add
pop
movsl
pop
mov
inc
sbb
adc
mov
adc
loope
mov
outsl
insl
pop
push
cld
sbb
imul
pop
cld
and
in
sarb
jne
int
jg
xorb
mov
ret
dec
mov
insb
sbb
jo
fwait
jns
jae
call
cltd
and
xor
add
sbb
jge
decl
push
ret
lahf
into
out
inc
mov
dec
repz
inc
sub
data16
or
xor
cmp
or
ljmp
cmpsb
gs
xchg
fnsave
outsb
jne
or
or
xchg
or
jae
adc
pop
mov
negb
loopne
loope
mov
inc
cmp
add
mov
push
out
inc
fiadds
push
adc
jp
mov
das
dec
mov
stos
pop
lods
shll
and
bound
andb
arpl
iret
push
in
jge
mov
sub
shl
dec
les
test
loopne
out
sbb
es
or
fwait
pop
sbb
scas
xchg
test
mov
sbb
clc
xchg
gs
aad
out
cmp
adc
lods
sub
jns
pushf
and
adc
cmp
repz
or
mov
fldcw
fwait
mov
scas
xor
lea
mov
pop
xchg
mov
sub
lret
jp
aaa
pop
test
aas
push
stos
pushf
movsb
cwtl
add
pop
xchg
fs
fadds
imul
stos
repnz
lods
fwait
shlb
mov
aaa
hlt
loopne
lret
dec
or
and
push
aaa
sbb
mov
rcrl
mov
int3
cmp
loop
std
in
dec
inc
lea
hlt
push
sbb
push
cld
filds
movsl
les
loop
dec
lds
je
imul
ret
mov
add
push
flds
out
clc
sub
mov
lcall
mov
cli
push
icebp
push
xchg
add
and
dec
inc
bound
jb
mov
jae
dec
test
inc
hlt
cmpsl
imul
pop
ss
sbb
lahf
and
xor
mov
jns
and
xor
add
mov
mov
ror
jb
or
loopne
sbb
imul
inc
inc
cmpsb
push
dec
pop
call
in
xor
xchg
push
pop
clc
jmp
outsb
test
push
js
andb
cld
test
jle
shll
scas
and
pusha
push
cmp
jae
sub
stc
testb
xchg
lret
aaa
mov
adc
popa
add
mov
arpl
cli
sbb
push
adc
sub
push
movsb
pop
jo
jae
test
fxch
fadd
and
popf
jae
in
movsl
xchg
fisttpl
inc
aas
or
imul
js
aaa
add
add
lcall
cli
jns
xchg
pop
rol
push
mov
mov
inc
jmp
dec
scas
mov
inc
lds
xchg
out
pop
daa
sarl
push
mov
mov
leave
pop
mov
adc
dec
or
sub
in
filds
push
clc
xchg
and
push
push
xchg
mov
mov
fimull
add
mov
sahf
lretw
mov
pushf
xchg
imul
sbb
xchg
jg
pusha
inc
mov
dec
mov
dec
or
std
shl
xorl
es
in
in
popf
icebp
popa
in
mov
xchg
adc
outsb
jecxz
adc
data16
cli
mov
cmpsb
sub
rcrb
sbb
mov
sbb
xchg
mov
jl
shrb
xor
fimuls
and
and
cli
orb
sub
mov
test
jnp
or
dec
pop
test
jo
cmpsb
cmpsl
or
hlt
rorl
lret
sbb
mov
or
in
push
popa
popa
push
and
sub
sbb
xchg
cmpsb
xor
test
repz
xor
out
mov
fisubrl
js
loope
test
sarl
adc
jecxz
adc
adc
xchg
rclb
push
sub
outsb
ret
insb
into
inc
mov
push
ret
and
mov
out
in
test
dec
data16
stos
inc
mov
jae
and
in
xor
sbbl
sub
sbb
clc
sbb
add
push
test
popf
mov
pushf
test
xor
pusha
sahf
xchg
call
sti
decl
and
movsl
pop
fldt
out
push
and
push
fmull
cmp
lds
outsl
pop
fdivl
test
xor
insl
cmc
sub
add
mov
int
int
negl
rorb
in
ret
mov
sti
sub
mov
dec
xlat
addr16
loope
or
bound
stc
subb
xlat
ljmp
andb
mov
pop
mov
les
jo
adc
mov
cmp
test
fcmovnbe
cmpsb
and
popa
imul
rorl
xchg
or
sbb
fsubr
fistl
dec
loopne
pop
jge
xor
jno
xor
sbb
ds
pushf
add
push
cs
iret
pop
pop
xchg
mov
call
xchg
xchg
pop
or
or
fldt
jno
jg
mov
mov
std
lods
adc
adc
mov
push
xchg
mov
es
pop
adc
test
or
mov
test
cmovbe
jnp
lods
inc
jecxz
sbb
xlat
push
mov
inc
sbb
jl
inc
xlat
cld
mov
xchg
hlt
xlat
jno
mov
jb
dec
cmp
mov
in
mov
xchg
and
pop
xor
inc
jne
cld
fstpl
xor
test
test
push
rcr
jecxz
mov
ret
jns
lods
icebp
push
packssdw
arpl
inc
and
pop
push
sbb
lcall
movsb
mov
sbb
lds
push
es
xor
cmc
sbb
setne
sub
add
scas
xchg
fildll
push
out
adc
fsubr
pop
arpl
jle
rorl
inc
dec
dec
lds
ja
xchg
pop
cltd
test
jno
repz
jns
repz
int3
and
rorb
sub
or
jo
xor
jge
pop
pop
test
mov
loope
je
mov
xchg
pop
xor
push
jg
lret
xor
and
orb
push
cs
addb
or
push
js
jp
jg
loop
sti
rcrb
fimull
aaa
sub
adc
add
inc
xchg
test
xchg
xor
jp
mov
in
ja
in
cmp
mov
dec
into
inc
and
or
testl
cwtl
outsb
leave
stos
fdivs
xor
ret
mov
outsb
mov
lock
popf
dec
js
xor
rolb
inc
outsb
movsb
aad
add
or
rclb
xchg
jo
xorl
scas
cmp
mov
inc
and
xor
mov
inc
xor
ss
insb
stos
and
repnz
out
scas
sbb
out
adc
sbb
pop
andb
pop
addr16
in
or
fdivrl
sub
mov
scas
aas
adc
loopne
xchg
dec
jo
push
mov
jbe
repnz
lret
sti
xor
je
std
jnp
xchg
pop
fcoml
in
std
xor
sbb
sub
push
xor
popa
jae
jb
inc
bound
clc
xor
outsl
mov
push
pusha
loopne
and
mov
imul
shll
test
and
jns
sahf
jmp
mov
lods
adc
xlat
lcall
clc
inc
cmp
mov
lret
xchg
inc
icebp
lods
push
mov
sub
and
jns
aaa
push
push
sti
jmp
pop
push
aas
push
pop
incb
and
js
cmp
shl
inc
dec
jmp
mov
push
nop
pop
sbb
jb
pop
or
test
popf
mov
and
jns
lods
sbb
and
jecxz,pn
adcb
pop
sub
aam
xor
testl
dec
insl
mov
xchg
das
in
and
xchg
out
push
or
stos
js
leave
lret
mov
sub
cmpsl
pop
push
sbb
inc
push
rorl
or
jne
outsb
add
mov
insb
rorl
pop
sub
ljmp
bound
and
sar
out
mov
xor
dec
inc
call
push
mov
loopne
test
lcall
jbe
daa
jo
mov
ret
mov
icebp
push
dec
roll
cmp
out
loop
test
push
push
jmp
data16
imull
lret
and
pop
out
pop
jno
inc
and
subb
lock
pop
cmpsl
cmp
cmp
jp
inc
mov
cs
lea
mov
cmp
jge
cs
jle
imul
xor
and
add
mov
out
push
jb
out
popa
sbb
imul
int3
pop
push
pop
mov
add
fiadds
push
adc
and
xchg
fnstsw
popf
daa
repz
or
sbb
sub
and
ret
std
or
inc
addr16
mov
cmp
sarl
aas
xor
pop
cmp
into
mov
shlb
inc
shll
loop
mov
jbe
jne
or
mov
sub
out
out
sti
adc
or
fstpl
and
xchg
outsb
fsubl
dec
ljmp
push
mov
cmp
outsb
inc
repnz
aad
ret
pop
ret
cmp
lea
mov
cwtl
test
std
cmp
mov
jo
mov
jo
mov
repz
push
add
add
mov
sbb
and
dec
inc
cmp
popa
sbb
iret
pop
fisubrl
inc
push
repz
bound
inc
hlt
cmp
and
and
aaa
cmp
inc
dec
int3
cmp
out
push
stc
lock
push
sbb
pop
icebp
lret
add
shll
push
in
pop
mov
cltd
push
push
xor
nop
mov
inc
std
faddl
daa
data16
or
fwait
mov
repz
cmp
pop
mov
aas
mov
push
cmp
dec
sbb
dec
jnp
push
mov
das
cmp
xchg
xchg
or
dec
fimull
inc
mov
push
mov
repz
cmp
mov
push
rorl
pop
cltd
push
and
sbb
mov
sbb
and
les
dec
push
mov
fcoml
mov
insl
outsl
xchg
cli
adc
sti
out
iret
or
push
mov
repnz
in
pop
leave
cmpsl
inc
cmc
sbb
xor
mov
pop
ja
clc
xchg
mov
fnstenv
xchg
dec
push
fdivrl
cltd
jl
xchg
mov
cmp
aas
ss
xchg
mov
push
adc
test
loope
cmp
inc
dec
sbb
test
dec
int3
outsl
adcl
xchg
jns
jae
std
into
shl
mov
fwait
mov
shr
pushf
int3
inc
gs
shl
dec
sub
xchg
lods
test
push
subl
ret
dec
or
test
cmpsb
sbb
andl
mov
mov
repnz
pop
imul
icebp
dec
push
jl
dec
add
out
idiv
xchg
subl
stos
pop
mov
jnp
int3
jg
cli
nop
addr16
dec
dec
fisttps
inc
mov
leave
imul
and
or
cmp
xor
sbb
mov
pop
rclb
dec
leave
pop
imul
push
sarb
jns
pop
push
call
cmpsb
push
add
rcll
xor
pop
js
roll
fidivrs
repnz
xchg
adc
rolb
and
pushf
rcll
or
jecxz
mov
aad
in
xchg
sub
fs
sbb
or
pop
push
gs
iret
xlat
ss
mov
mov
stos
repnz
add
add
fnstsw
and
fildl
push
fimull
push
or
std
mov
sbb
push
push
jge
and
fnstcw
andb
mov
sbb
lock
push
cld
mov
sbb
stc
data16
clc
daa
popa
mov
pop
push
mov
orb
push
mov
and
icebp
mov
fwait
and
add
lds
adcl
push
adc
addr16
push
dec
dec
imul
stos
sbb
les
push
daa
call
mov
and
faddl
lret
das
jg
sub
mov
gs
sub
push
ror
ret
mov
and
ljmp
pop
push
mov
pop
in
test
xor
stc
cmpsl
adc
imul
arpl
stos
pop
push
je
jg
call
fisubl
aam
pop
cmc
push
rorb
data16
xchg
outsb
daa
aas
in
in
insb
enter
pop
leave
cli
adc
jns
aam
mov
pop
aad
in
ja
push
dec
std
imul
mov
and
sub
pop
mov
pop
mov
gs
dec
loopne
mov
sbb
test
bound
push
mov
and
xchg
cwtl
sub
xchg
adc
das
push
mov
dec
dec
add
mov
push
xchg
and
cs
shll
push
mov
pop
sbb
int3
dec
inc
add
out
std
loope
mov
out
daa
pop
ljmp
xchg
mov
lock
cmp
sahf
mov
paddd
shrl
outsb
xor
push
xor
and
lret
loopne
testb
xor
mov
cmpsb
into
rolb
aad
and
scas
cld
ret
xorl
cmp
lahf
adc
stos
sarl
fs
jbe
cmpsb
jb
xor
xlat
ljmp
add
test
add
inc
jb
mov
dec
and
pushf
dec
call
sbbb
jmp
in
cmp
test
mov
mov
out
sub
and
sbb
lret
out
shrb
dec
shll
mov
inc
cltd
cs
mov
ds
stc
adc
stc
ds
pop
xchg
dec
sarb
inc
aad
mov
push
dec
jbe
mov
divl
sub
xchg
push
hlt
mov
clc
or
insb
pop
xlat
lds
adc
adc
inc
push
aaa
inc
sbb
sub
pmaxsw
xor
dec
jbe
xchg
in
fldcw
xor
fstpt
div
fldenv
or
popa
aas
inc
movsl
leave
dec
pop
aas
push
or
mov
insl
shll
mov
popf
mov
lds
cmp
popf
dec
mov
push
mov
pop
sub
xchg
mov
lret
pop
mov
add
ss
sahf
xor
or
js
fisubl
mov
jno
int
or
jp
lea
test
vmulps
mov
loope
movsl
lahf
dec
aad
rcrl
inc
pop
and
stos
xor
mov
jge
fwait
ret
sub
test
add
and
cmp
rorl
sub
in
xor
fcmove
gs
pmaxub
xchg
pushf
daa
push
cli
les
xor
daa
xlat
add
lods
loopne
jp
jl
sbb
push
daa
scas
out
and
ljmp
xchg
jbe
sbb
jo
xchg
pop
andl
push
lahf
push
jmp
cmp
into
call
repz
mov
adc
sub
xchg
mov
sub
mov
xor
lods
cmp
add
push
push
jnp
add
stc
push
jne
add
sahf
sbb
call
inc
movsl
cmp
cltd
lret
xor
dec
adc
xchg
pop
jecxz
cld
in
mov
cwtl
iret
mov
fcmovnbe
fyl2xp1
xor
adc
push
mov
fmuls
loop
pop
push
fcmovnbe
xchg
sahf
iret
scas
sbb
and
xor
add
adc
inc
outsl
enter
xchg
and
mov
dec
int3
or
fiaddl
shrl
in
sbb
xor
jo
movsb
das
leave
mov
fbstp
in
dec
gs
fdivrs
xchg
jl
in
dec
shl
jbe
hlt
push
movb
push
adc
xor
into
movsl
out
testl
addr16
jnp
fistpl
mov
inc
mov
out
add
in
sahf
dec
fistl
or
pop
xchg
push
xlat
out
test
scas
mov
add
stc
aad
sub
orl
inc
cmp
push
in
fmuls
jl
arpl
inc
xor
in
xlat
mov
les
ljmpw
test
je
mov
movhlps
dec
xor
mov
addl
popa
xorl
pushf
or
arpl
sub
and
push
icebp
cmp
cmp
sub
and
xchg
cmp
xchg
and
lret
sbb
sbb
jnp
movsl
cmp
mov
fdivl
outsl
leave
sarb
imull
int
bound
mov
cmp
aad
and
sahf
or
push
addr16
jle
jo
or
repz
imull
lods
dec
mov
and
mov
xchg
cmp
mov
shlb
movsb
jge
lahf
inc
mov
cwtl
or
ja
push
cli
je
ja
sarb
jg
push
mov
lret
mov
das
aam
jbe
lcall
aaa
sbb
sub
popl
cwtl
test
rcrl
loope
jmp
pop
mov
pop
push
and
scas
outsl
pop
and
popa
jbe
xchg
pop
leave
mov
xchg
fsubrl
mov
sbb
imul
pop
std
popf
adcl
movsb
pop
test
loopne
xchg
adc
scas
push
lret
scas
shll
add
popa
pusha
add
mov
mov
mov
jecxz
cli
xchg
popa
dec
out
sbb
jb
clc
shlb
add
dec
xchg
xchg
mov
dec
jecxz
xchg
cmp
gs
loop
xlat
push
xchg
mov
stc
clc
lcall
add
adc
jno
cld
mov
dec
xorl
jne
test
ret
incb
mov
shl
push
mov
js
cmc
scas
aaa
gs
cld
jl
sub
faddl
lret
repz
pop
or
test
sub
adc
pusha
push
inc
add
adc
add
or
testb
pop
out
out
mov
cmpsb
fcoml
decl
jle
inc
mov
sub
outsb
out
in
lock
mov
mov
fucomi
cmp
fs
mov
rcrb
mov
sbb
inc
outsb
ret
xchg
rorb
and
jbe
jp
mov
jns
inc
dec
repnz
push
sbb
jp
je,pt
add
js
orl
pop
mov
mov
lahf
cmpl
push
leave
loop
sysret
call
mov
mov
mov
jno
dec
sbb
or
js
sbb
sub
sbb
call
lods
jo
sarb
fwait
outsb
mov
jmp
insb
lea
out
jge
add
dec
lds
pop
cs
movsb
or
mov
mov
pusha
xchg
mov
lock
cmp
je
xchg
divl
mov
aam
pop
stos
bound
inc
cmp
cld
movl
jmp
lret
sbb
lahf
ficoms
mov
cmc
fstpl
sbb
xchg
mov
inc
push
mov
loop
inc
test
sbb
mov
adc
jb
cmp
inc
inc
test
inc
jg
dec
and
aas
sub
fildll
adc
push
and
fwait
mov
popf
dec
mov
pop
xor
cmp
stos
inc
lock
cmp
orl
xor
push
and
jmp
popa
xchg
movsb
movsl
movd
lret
mov
jno
sub
jae
orl
lea
mov
sub
outsl
arpl
negl
dec
or
xor
mov
fisubrs
mov
dec
inc
cmp
fwait
mov
add
xchg
loope
movsb
mov
mov
inc
rorb
lcall
mov
pop
sub
loop
mov
pop
fidivrl
out
std
mov
ffree
mov
mov
jecxz
and
jnp
pop
jns
ss
loopne
or
and
jae
lods
hlt
mov
test
xchg
xchg
jg
xchg
inc
nop
repnz
or
xlat
stos
repnz
mov
sbb
jae
frstor
je
push
test
add
mov
stc
cmpsb
sbb
cld
sbb
mov
xor
arpl
dec
mov
sub
jg
adc
mov
aaa
cmpsb
fidivl
push
cmp
lret
pusha
ljmp
cmp
mov
in
dec
aam
inc
aas
fiaddl
nop
cmc
sbb
cmp
loope
cmc
fs
push
push
mov
inc
add
add
cli
pop
jns
lret
out
push
sbb
dec
stos
pop
add
mov
mov
jp
int
jo
jecxz
jmp
adc
roll
loopne
jecxz
xor
jne
sbb
and
inc
scas
fsubrl
inc
mov
sbb
xor
add
push
orl
jns
inc
pop
and
std
jmp
repz
pop
repz
inc
aas
jecxz
and
mov
mul
mov
xchg
add
cmp
jge
sti
xor
sub
sar
ror
arpl
mov
lods
insb
lret
sub
icebp
pushf
push
into
out
ds
mov
xchg
ret
sbb
push
and
test
shll
fdiv
cmpsl
test
mov
and
inc
mov
outsb
dec
insl
pop
xchg
lret
and
sahf
dec
add
scas
and
xor
or
scas
jecxz
popa
mov
add
gs
mov
sub
ljmp
das
out
std
jbe
cltd
jae
popf
lock
hlt
adcl
loop
into
pop
orb
cmp
mov
push
ret
frstor
jbe
mov
jg
pop
int
lea
das
fidivrl
imul
mov
jns
flds
lods
cli
aad
xchg
fsubs
jg
int3
mov
aad
out
dec
or
ds
repnz
mov
decl
int3
mov
and
lcall
fimuls
sub
cltd
or
or
pop
fwait
mov
pop
xchg
data16
lods
loopne
mov
pop
jmp
sub
stc
push
inc
shr
sub
add
fsts
jo
push
jns
fdivrl
jb
ret
push
gs
pop
fmuls
push
shl
movsb
cli
mov
cmp
bnd
push
fiaddl
mov
mov
push
rcl
jne
push
adc
out
out
andb
or
cmc
pop
jecxz
ficoml
sub
cmpsl
inc
jbe
mov
lret
movsb
pop
cwtl
xor
mov
rcll
mov
scas
ficoml
out
addb
xchg
imul
sti
bound
adc
xchg
out
add
dec
in
incb
add
es
sub
cwtl
test
frstor
cmp
shlb
andb
sub
sub
in
pop
icebp
cmp
sub
mov
and
mov
subl
scas
add
add
and
cmp
mov
je
in
int3
imul
mov
sub
push
push
and
orb
sbb
pop
jecxz
ret
dec
ffreep
cmp
dec
cmpsl
orb
bound
lret
mov
pop
pop
aas
inc
std
mov
fisubrl
roll
sub
xchg
push
or
xlat
xchg
sub
out
adc
or
cmp
push
lods
jno
mov
daa
lcall
jne
ja
mov
mov
icebp
push
push
dec
add
dec
lods
mulb
mov
repz
push
bound
daa
movsl
adc
btc
cmp
sti
scas
jbe
neg
mov
push
leave
cld
or
decb
xchg
adc
dec
imul
cmp
jecxz
mov
dec
sbb
popf
test
xor
mov
sbb
lds
inc
aaa
sti
cmc
push
push
mov
jnp
not
aad
pop
mov
adc
icebp
add
adc
hlt
xchg
lahf
and
mov
mov
jno
push
mov
sub
dec
jg
cmp
dec
cmp
mov
mov
mov
popf
insl
xchg
arpl
cmp
jg
sbbb
mov
mov
clc
rcrl
mov
inc
imul
cmc
dec
data16
fstpt
mov
pop
sbb
cmp
jmp
mov
insb
aaa
icebp
sub
hlt
inc
mov
jb
xor
call
and
insl
adc
xor
stos
push
xlat
movsb
iret
push
and
add
add
icebp
cld
test
add
push
clc
rcll
inc
and
int3
fcom
movsb
ljmp
jns
andb
fldt
adc
outsb
lcall
rolb
fisubl
inc
addl
xchg
orl
std
pop
je
push
or
pop
xorl
int
xchg
inc
insl
cmp
pop
adc
jl
xor
xchg
push
push
or
sahf
sbb
mov
insb
jp
mov
repz
jmp
inc
call
xchg
aaa
jb
cmp
loop
repz
lds
faddl
out
leave
cmp
adc
addr16
fisubs
aad
cmp
mov
adc
addr16
cmc
shlb
pop
nop
push
adc
idivl
sarb
or
sub
xor
mov
in
iret
sub
add
adc
loopw
mov
push
xchg
adc
je
in
cmp
xchg
dec
loope
xchg
and
mov
xchg
pop
or
jb
mov
jmp
cld
sbb
fs
jecxz
sar
sub
imul
out
stc
ret
arpl
dec
adc
pusha
lret
loopne
mov
popf
fldenv
fistl
daa
adc
call
sti
mov
sti
mov
fisttps
int3
aad
std
insb
dec
adc
mov
mov
push
ja
dec
or
push
inc
cmc
push
jp
push
pop
mov
subb
movsb
shlb
fcmovnb
sbb
gs
scas
popa
in
cmc
in
pop
xor
jne
cmpsb
test
xchg
mov
test
lahf
popf
decl
sti
insl
mov
xchg
insl
es
add
push
out
dec
movsl
dec
push
adc
jns
stos
sti
sub
aas
repz
fwait
std
add
pop
inc
lock
adc
mov
sbb
cmp
sar
mov
mov
ss
icebp
mov
mov
mov
loop
push
and
mov
shl
loop
add
cmc
lods
inc
sti
fiadds
and
lods
sub
movsl
sahf
addb
jg
mov
add
arpl
addr16
cld
cmp
lock
dec
sub
aas
hlt
fnstenv
or
pop
mov
and
adc
mov
out
aad
xchg
dec
icebp
sbb
jne
lret
or
jl
minps
mov
sub
xor
fcmovb
pusha
sbbb
mov
mov
cmp
aad
push
call
push
aaa
out
push
mov
dec
mov
mov
add
xor
xor
mov
pop
imul
pusha
iret
xchg
mov
jg
pop
mov
xchg
sarl
cmp
or
fcmovnb
sbb
fildl
push
add
pop
inc
sub
inc
fnstcw
dec
outsl
cmp
mov
push
cmp
jl
aas
jp
xor
insb
shlb
in
inc
aad
scas
js
lahf
ja
sub
and
lret
pop
pop
fadds
sarb
movsb
pop
mov
sbb
jge
nop
ds
jecxz
lods
lods
push
jnp
cmpsb
outsb
or
fcomp
aaa
loope
mul
mov
jge
dec
pop
pop
pushf
xchg
add
xor
subb
jg
inc
mov
cmp
daa
aad
loopne
iret
rcrb
insl
outsb
mov
aam
test
pusha
cltd
mov
insb
lahf
out
adc
adc
dec
jo
cmpsb
jo
and
mov
hlt
mov
pusha
andl
jge
in
lods
psllw
nop
add
sbb
sub
inc
mov
or
movsl
cld
lcall
dec
mov
les
iret
repz
xor
fdivrs
or
ds
adc
mov
pop
das
lods
jno
popf
xchg
cltd
cmc
cmpsl
mov
imul
pop
pop
fs
and
loope
push
pop
add
ret
pushf
dec
leave
xchg
mov
push
jo
mov
int3
clc
and
and
negl
sbb
pop
dec
sbbb
in
out
insl
nop
jmp
jmp
inc
imull
push
xchg
clc
pop
inc
cmpb
push
inc
mov
adc
fwait
cwtl
aad
popf
mov
mov
dec
ss
insl
cltd
cwtl
bound
inc
in
popf
ja
ljmp
das
pop
mov
repz
out
mov
stos
mov
fbstp
adc
inc
push
and
outsb
sbb
mov
rorl
outsb
xchg
gs
add
mov
push
fcomip
and
jl
mov
xchg
jl
push
mov
cld
mov
repz
es
lods
notl
mov
stos
scas
sbb
into
push
dec
sti
test
xchg
mov
dec
sbbb
push
fisubrl
insl
jb
push
mov
xor
jecxz
sub
pop
sub
data16
mov
xor
push
out
in
jmp
push
les
push
shlb
dec
insl
out
cmp
sbb
sbb
sbb
or
loop
push
je
call
xor
insl
mov
insl
jbe
cmc
mov
dec
or
mov
mov
js
or
cmc
faddl
sbb
int
jp
sbb
xchg
dec
jmp
cmc
test
and
sbb
jae
inc
nop
push
pop
cmp
cmp
lret
out
adc
fsubl
mov
inc
in
lahf
cmp
mov
gs
stc
sbb
mov
fdivrl
and
mov
mov
or
dec
and
aaa
in
enter
xchg
push
jbe
mov
mov
in
jmp
push
pop
cld
push
mov
nop
imul
sbb
cmc
mov
xor
lock
dec
mov
adc
inc
int3
mov
and
mov
dec
out
adc
inc
inc
sub
mov
ret
sub
fnstsw
fimuls
mov
repnz
dec
pop
in
js
xchg
insb
push
and
mov
cli
loopne
sbb
lods
add
aaa
add
xchg
xchg
or
jno
jmp
insl
mov
test
sbb
xor
fcoms
iret
shlb
test
add
test
ficomps
sbb
mov
ds
xchg
dec
sub
and
hlt
in
mov
in
test
mov
les
mov
loopne
xor
push
loope
jmp
lods
stc
pop
stc
sub
adc
ret
mov
inc
lods
and
adc
pusha
push
je
jb
ret
adc
adc
notb
jb
add
push
gs
out
dec
pop
in
xchg
movsb
cld
in
repnz
loopne
dec
in
mov
and
insb
sbb
push
hlt
movsl
js
jg
xchg
nop
nop
inc
push
xchg
dec
push
add
sbbb
or
leave
add
fwait
mov
xor
fistl
push
rclb
mov
mov
pop
out
jecxz
xchg
popa
mul
aad
popa
xlat
sbbl
sbb
xor
jno
adc
mov
or
loope
cmc
test
pop
inc
inc
jb
pushf
and
out
and
mov
jecxz
hlt
cmp
cmp
sbb
xchg
es
pusha
into
mov
gs
lcall
imul
into
orl
inc
out
dec
out
imul
je
xor
leave
cmpsb
cmp
aad
iret
xor
dec
xchg
je
xchg
mov
mov
sub
arpl
mov
add
mov
inc
dec
pop
add
notb
popa
adc
sti
out
xchg
imul
pop
cld
mov
data16
es
stc
rcr
jecxz
rclb
aas
subl
ret
mov
addr16
sub
fdivl
popa
popa
push
dec
mov
sub
xchg
xchg
inc
dec
mov
xchg
xor
pop
jp
imul
cmp
cmpsb
loop
mov
repnz
xlat
popf
js
xor
pop
sahf
repz
xchg
inc
pop
mov
cmp
sub
in
mov
add
loop
sub
mov
push
sarl
pop
inc
add
cld
mov
outsb
rclb
movb
aaa
dec
push
adc
mov
mov
outsb
mov
in
push
pop
mov
dec
jmp
jae
stos
cmp
cltd
dec
adc
bound
fdivl
cltd
inc
cmp
dec
or
push
sbb
iret
inc
test
sbb
shlb
dec
jnp
iret
iret
sbb
imul
loopne
popa
cmc
cmpsl
mov
push
xor
sti
mov
and
sbb
adc
and
add
mov
cmc
dec
fdivs
mov
cmp
test
shll
imul
daa
dec
inc
xorl
push
mov
sbb
jg
mov
cmc
cmp
sub
jns
jb
int3
xor
inc
arpl
pop
push
insl
sbb
inc
lcall
call
popa
in
inc
lret
xchg
jle
ds
call
sti
xor
fsubrp
adc
xchg
loope
aas
lret
repnz
je
stc
test
mull
jne
inc
push
cs
cmpsb
stos
pop
cmc
xor
sub
jns
pop
mov
jp
adc
shlb
mov
stos
in
insb
xchg
push
ror
mov
stos
dec
fwait
jb
pop
jmp
xchg
ljmp
inc
push
addl
jno
xor
sub
mov
inc
and
outsb
add
rol
push
pop
mov
aas
sub
dec
cmp
dec
rorb
repnz
je
scas
int3
aad
dec
repz
dec
sbb
mov
inc
enter
fld1
sbb
jne
dec
xor
and
xor
sub
mov
cli
data16
loopne
and
xor
cwtl
mov
jg
jo
xor
daa
dec
and
mov
es
xor
test
rorl
mov
ret
stc
dec
push
cmp
mov
clc
cmp
adc
int
mov
cli
push
push
sub
inc
insl
or
push
dec
push
sub
ja
jge
mov
mov
pop
les
lahf
push
arpl
rolb
insb
cmpsl
mov
inc
push
push
loope
icebp
pop
push
outsb
sub
test
insl
sub
jp
dec
test
int
frstor
or
test
jne
pop
sbb
push
icebp
enter
movsb
cmpsl
or
pushf
leave
in
lods
fucomi
pop
add
stc
xchg
mov
jecxz
cs
call
sbb
insl
mov
ret
or
outsl
in
enter
mov
mov
outsb
xor
sbb
mov
xchg
fcmovnu
mov
imulb
adc
pop
jo
lods
lds
mov
in
sub
sub
push
xor
orl
lret
xchg
add
aam
and
push
xor
inc
jo
jae
aad
lret
jae
lahf
mov
ljmp
push
das
or
jo
mov
jo
dec
loope
inc
imul
inc
std
dec
pop
pop
fcmovnu
xor
dec
mov
sbb
in
jp
cltd
push
inc
sbb
sub
aam
js
xor
div
ss
jmp
mov
jns
xchg
int
jle
add
mov
fsubl
jne
mov
inc
lds
nop
bound
iret
pusha
mov
enter
push
std
sbb
pop
jl
adc
popf
cmc
push
jae
xchg
inc
movsb
lock
adc
sti
incl
ret
push
pop
mov
jb
aas
pop
pop
shlb
scas
dec
cli
adc
mov
lds
divb
add
sbb
dec
adc
fisttpl
lret
jo
or
bnd
fsqrt
imul
dec
or
dec
mov
mov
and
dec
push
mov
fdivrs
jbe
stos
rol
pop
insb
les
ret
int
rorl
push
loopne
mov
aad
stos
inc
mov
imul
add
cmp
push
cltd
mov
add
enter
mov
dec
shlb
push
jb
insb
or
inc
divb
test
jg
sbb
icebp
sbb
scas
sub
rclb
imul
movsl
mov
aaa
or
dec
adc
jmp
mov
aad
xor
jecxz
fcoms
jp
test
das
and
shll
add
or
sub
mov
sbb
mov
sar
and
sub
push
xchg
xor
add
cld
stc
adcl
xor
sub
ret
scas
loope
shrb
pop
adc
std
jno
sub
jecxz
push
xchg
flds
inc
sets
inc
testl
mov
push
cmp
push
inc
mov
dec
inc
shll
mov
movsb
loope
cmp
fldl
dec
pop
lods
cmp
in
dec
inc
adcb
jae
inc
and
aas
mov
jns
or
and
jmp
aas
ret
lret
mov
lret
pop
adc
mov
rclb
movsb
imul
pop
mov
jo
xor
je
sub
movsb
and
pop
in
mov
in
mov
aaa
fstpl
imul
int3
push
ficompl
dec
out
cmp
cmp
or
cld
into
pop
insl
rclb
test
cwtl
and
push
out
test
jmp
xchg
ds
and
lret
gs
popa
mov
fcoms
mov
pop
stc
cwtl
orl
or
fdivs
orb
mov
xor
mov
mov
ret
leave
repz
push
mov
in
and
in
dec
jno
dec
sub
test
inc
outsl
ja
fs
mov
cwtl
sahf
leave
push
jmp
cmpsb
inc
and
mov
pop
js
mov
sbb
xchg
jge
into
cli
ret
cmpsl
test
pop
xor
or
test
cli
les
test
cmp
or
aad
mov
ljmp
insl
shrl
jg
in
cmpsb
xchg
sbb
sub
xchg
popf
mov
push
or
repnz
dec
push
pop
outsl
cmc
pop
mov
adc
push
inc
mov
xor
pop
sbb
lahf
icebp
in
mov
gs
xorb
inc
inc
or
dec
push
cld
push
inc
and
pop
sub
push
jbe
pushf
jo
mov
fisttpll
cmp
sahf
dec
xchg
add
mov
out
sub
mov
dec
incl
arpl
ljmp
jb
xchg
das
cmpsl
pop
cltd
sti
xchg
or
adc
mov
insl
aaa
push
cwtl
adc
push
out
jo
and
loop
imul
mov
pop
and
cmpsb
in
lret
out
pushf
in
mov
adc
jmp
lahf
mov
xchg
sbb
int3
or
cmp
iret
pop
cmc
jmp
xor
sub
lea
cmp
iret
mov
rol
adc
iret
fisttpl
rcr
icebp
push
sbb
imulb
and
insb
sub
xchg
sahf
xor
jns
dec
daa
or
push
dec
xchg
cmp
in
sarl
mov
dec
rcl
xor
sbb
popf
test
gs
fwait
sub
sbb
push
sarl
mov
pop
lds
jp
jl
sub
aas
dec
lods
pop
and
cmp
pushaw
add
sub
aas
jno
lea
lcall
mov
cmp
popf
ljmp
in
mov
dec
mov
adc
pushf
mov
or
ds
dec
insb
outsb
pushf
out
in
negl
xor
fbstp
jg
adc
sub
mov
mov
faddl
hlt
pushf
data16
int3
push
je
fbld
fbld
test
dec
cmp
and
and
scas
stc
or
xor
adc
cmpsl
or
and
push
jns
sub
into
jbe
shrb
rcrb
in
xchg
rcll
lret
push
sub
lret
gs
or
vmovupd
or
rorb
inc
push
nop
sub
mov
das
mov
in
sti
pusha
push
adc
jmp
repnz
push
mov
enter
cmp
in
jb
lret
jno
adc
mov
pop
in
adc
jle
fldl
das
out
jns
xorl
scas
jbe
fcoms
hlt
rcrl
pop
mov
mov
lock
adc
leave
pop
stc
add
xlat
mov
jge
outsl
push
rorl
mov
sarl
mov
xchg
ret
pop
jg
mov
fstps
sbb
into
std
call
inc
push
jnp
fwait
push
push
cs
ret
jns
adc
fstpt
and
pop
movsb
push
inc
mov
sbb
cmp
fcoms
xor
push
push
xchg
cli
inc
jmp
loop
inc
mov
movsl
mov
mov
jle
ljmp
push
outsl
sub
or
xchg
adc
pop
sub
filds
clc
xlat
les
xor
and
adc
out
imul
push
mov
mov
xchg
push
hlt
aaa
mov
mov
sbb
aas
push
es
iret
cmp
mov
mov
das
lahf
loop
push
js
xchg
xchg
cmp
xchg
movsb
pop
ret
mov
rclb
pop
pop
add
fsubrl
fistps
xchg
jns
inc
adc
repnz
cwtl
xchg
add
sub
aad
sub
jl
repnz
and
sub
cmp
sbb
test
pop
adc
jecxz
dec
cmp
daa
lea
push
or
in
mov
cltd
imul
xor
fmull
push
add
out
jle
mov
inc
mov
jmp
mov
sbbl
mov
pop
and
mov
es
lret
inc
xchg
leave
sahf
pop
jle
idivb
rcrb
es
adc
adc
add
mov
lahf
sbb
and
dec
push
mov
mov
jb
xchg
in
jns
xchg
and
inc
and
xchg
sub
push
mov
mov
or
push
out
jge
push
repz
pop
dec
push
js
out
add
adc
mov
xor
insb
ljmp
cmp
lahf
pop
in
std
addl
pop
fwait
xchg
mov
adc
xor
int
pop
jbe
jne
pop
or
xchg
and
push
sbb
jge
pop
inc
push
insl
test
rolb
pop
lcall
jle
pop
sub
jb
ja
jnp
jno
dec
dec
dec
or
les
roll
mov
jmp
stc
jg
push
andl
inc
cmpsb
cli
bound
jmp
push
and
subl
mov
push
pop
sarb
test
pop
jmp
mov
fsub
sub
data16
outsb
test
out
stos
enter
test
sbb
jbe
outsl
inc
clc
dec
clc
lcall
and
sbb
roll
and
xchg
cmp
push
gs
sbb
ss
and
das
xor
fnstcw
loope
pushf
mov
add
push
int
sub
cmp
test
ljmp
shll
dec
mov
cmp
sbb
sbb
lahf
cmp
jno
out
idivl
mov
mov
mov
sbb
cmp
cli
add
adc
pop
insl
lea
cli
mov
je
cmc
push
loopne
movsl
mov
pop
cmp
mov
add
and
jecxz
addb
mov
icebp
dec
fstpt
cmpsl
or
pop
test
jmp
cmpsl
mov
mov
repz
mul
mov
lret
jo
out
out
iret
lahf
fucomip
into
mov
xchg
pop
adc
push
ret
xor
inc
jb
arpl
mov
inc
adc
sbb
dec
into
or
sbb
es
cmp
rcl
dec
pop
shrl
sbb
sub
ja
dec
jb
add
mov
icebp
xchg
mov
test
push
push
iret
fsubs
dec
and
add
andl
stos
add
loop
notl
adc
add
pop
lret
or
sub
adc
push
or
pop
inc
sub
cwtl
test
cli
sub
push
adc
lret
fcmove
or
imul
cmp
out
pop
ja
cmp
ror
sti
clc
mov
mov
insb
hlt
dec
inc
pusha
jl
nop
dec
sbb
add
ja
lret
add
push
xor
xchg
inc
dec
std
pop
or
push
aaa
pop
mov
lcall
push
cld
mov
test
mov
xchg
cmp
mov
pushf
jle
jae
sub
or
add
adcb
subl
xchg
mov
test
mov
add
mov
call
push
sub
xchg
inc
jbe
mov
sbb
fcompl
sti
lret
aad
vandnps
xor
lea
cmp
add
sbb
int
dec
pop
jecxz
jns
out
les
xchg
sub
in
enter
iret
lea
mov
xchg
push
sbb
repz
cmpsl
xchg
jo
mov
lods
xchg
add
std
mov
adc
push
and
jb
xlat
pop
loop
jge
mov
in
sti
xor
mov
adc
dec
cmc
adc
loope
cli
dec
xchg
mov
shr
cld
ret
mov
xchg
outsl
insb
stos
xchg
out
inc
loop
sbb
pop
sub
inc
popa
scas
loope
mov
cwtl
mov
addl
mov
mov
aam
and
push
aaa
add
out
mov
mov
aam
fwait
pop
js
ficomps
pop
jno
push
shll
mov
in
jmp
push
sbb
inc
mov
mov
ret
ss
sbb
cli
jecxz
je
pop
pop
add
pcmpeqd
jecxz
xchg
pop
out
push
or
sti
in
sub
inc
push
mov
push
repnz
and
mov
fdivr
lcall
pop
jg
test
bound
jge
imul
fs
xor
push
push
in
rorl
imul
adc
shll
jmp
test
add
and
ss
leave
and
push
or
adc
shll
aas
cmp
add
jo
test
adc
sub
mov
dec
cmp
xor
es
xchg
xchg
or
xchg
add
xchg
mov
push
out
push
out
inc
gs
push
bound
pop
jl
pop
ror
xchg
mov
in
push
pushf
mov
cmp
inc
in
lcall
xor
fdivl
mov
stc
mov
push
in
lahf
mov
std
add
cmpsb
scas
mov
icebp
xlat
jmp
pushf
outsb
int3
sub
test
shrl
fldenv
jb
jbe
xlat
xchg
loop
test
inc
pop
jb
push
jmp
aam
and
pop
nop
insl
cs
push
jmp
cmp
sub
xor
pop
andl
inc
shlb
xchg
or
pop
mov
hlt
push
ljmp
cmp
enter
jo
lret
stos
jo
in
mov
push
jmp
pop
push
mov
and
or
and
lock
mov
jl
xor
std
rcll
test
clc
lods
imul
mov
into
or
push
cmc
push
mov
pop
cmp
ret
test
loope
jl
jns
pop
sub
cmc
inc
loopne
addb
push
sbb
inc
mov
nop
or
aad
aas
outsl
sub
pop
fcomps
sbb
fldl
jge
cs
sub
mov
nop
scas
out
or
rolb
add
sub
adc
and
int
popa
jle
push
xchg
lock
ds
pop
mov
leave
or
inc
jl
dec
pop
es
xor
cmovns
popf
cmp
jne
pop
inc
in
out
nop
push
push
pushl
movsl
mov
es
adc
lods
bound
lds
subl
sub
incl
popf
push
and
push
jno
adcb
cli
ds
ret
sub
fstpl
jg
xlat
test
xchg
int
xchg
lods
and
inc
xchg
or
aas
xor
jle
lods
jb
ja
mov
out
and
shll
mov
loope
or
add
inc
movb
jne
ret
sub
add
xor
movsl
pop
stos
mov
insb
and
fadd
inc
int
in
inc
pop
rorl
call
jne
sbbl
fildll
fs
mov
fists
insl
insb
inc
and
sbb
pop
xchg
roll
push
pop
enter
mov
jmp
and
addr16
lcall
filds
lds
nop
inc
add
inc
test
pop
lea
dec
jge
incb
das
mov
lods
ret
xchg
lods
pop
cli
cli
jle
adc
fdivrl
dec
jle
lret
scas
pop
add
mov
adc
sub
lret
xor
xor
sub
xor
dec
js
rorl
ret
mov
mov
fisubl
out
lods
jp
adc
mov
cltd
add
jmp
es
pop
pop
clc
hlt
sbb
cli
repz
mov
push
sbb
push
ret
cmp
xchg
mov
stos
lea
mov
cld
push
cltd
or
push
adc
mov
js
push
lcall
cmp
pushf
jle
mov
pop
and
cmp
xor
mov
add
cmp
lds
es
add
pop
rcl
dec
test
addl
bound
rclb
dec
cmp
mov
jle
cld
mov
nop
cli
rolb
push
xor
and
sar
cmp
insl
pop
mov
xchg
adc
jnp
pushf
mov
jl
cld
out
and
push
jne
testb
imul
xor
sbb
adc
xor
sbb
add
in
pop
jne
mov
cmp
jge
adc
js
insl
popf
pop
fists
mov
insb
pop
jno
ljmp
nop
sbb
mov
cmp
adc
imul
in
inc
cwtl
repz
clc
fidivs
ja
mov
xchg
push
sahf
inc
add
movl
mov
fsubl
and
clc
sub
movsl
fs
mov
xor
repz
dec
data16
push
cmpb
adc
enter
fsubs
add
push
push
je
ret
xor
mov
cmp
shl
cmc
adc
fcoml
pop
jl
in
mov
stos
testl
cs
int
xchg
inc
adc
push
aam
int3
scas
add
mov
aas
jae
mov
pop
add
aam
sbb
lcall
xor
inc
rcr
mov
mov
scas
dec
jne
push
loopne
aas
sbb
pop
push
jge
mov
sub
sub
test
rcll
stos
test
imulb
dec
dec
mov
lods
int3
es
xlat
pop
dec
mov
adc
dec
jbe
pop
push
cmc
out
fimuls
dec
sbb
sar
lahf
mov
ss
adc
xchg
push
fcomp
insb
mov
pop
mov
rcrb
xchg
je
sub
xchg
cs
lock
movsb
ss
push
sbb
inc
mov
dec
sbb
pushf
hlt
dec
data16
mov
inc
mov
test
xchg
cwtl
jne
fimull
jbe
xor
shrl
push
outsl
sbb
cmp
xor
in
cmp
loopne
ljmp
ret
jne
pop
hlt
mov
sti
add
ja
xor
inc
and
sub
fidivrs
cmpsl
stos
cmp
mov
ljmp
ficoml
jns
je
stc
push
mov
filds
push
data16
xor
cltd
popa
adc
mov
xchg
cmc
dec
lret
movsl
enter
in
das
xor
or
mov
adc
lock
and
add
repnz
mov
mov
test
and
in
sub
inc
and
aam
jp
subl
lahf
imul
jmp
pop
es
ds
mov
shlb
dec
inc
js
jne
call
xchg
jno
je
push
in
pop
mov
dec
inc
das
pop
jo,pn
mov
mov
std
jmp
and
lahf
les
mov
inc
stos
xchg
lahf
dec
cmp
pop
fstps
xchg
repz
or
lods
jb
mov
aam
shrb
mov
fdivrs
xlat
or
jp
lcall
jbe
sub
es
mov
pop
repnz
cmp
lret
repz
ds
add
pop
push
xor
inc
out
mov
js
jge
cmp
fldcw
xchg
fwait
test
jo
stos
div
or
lods
pop
xor
add
push
pop
add
adc
mov
test
cmp
pop
andl
jnp
mov
scas
push
hlt
arpl
cmpsb
out
adc
bound
sti
mov
jp
fdivrl
xor
dec
lock
mov
mov
jl
gs
add
sarb
pop
mov
xchg
dec
jb
adc
inc
movsl
mov
xor
enter
sbb
popf
sub
sbb
cmc
daa
aam
jle
cmp
cmp
dec
aad
sbb
sti
mov
xchg
push
adc
je
pop
leave
push
add
mov
push
out
xchg
xchg
mov
mov
dec
cmp
add
or
push
jo
push
dec
pop
lahf
xor
orl
lea
roll
and
push
pop
adc
popf
dec
bound
aam
std
loop
xor
rolb
addr16
jecxz
adc
and
jno
sbb
sbb
cmp
jnp
sbb
adc
xchg
in
ljmp
lods
push
call
repnz
lock
dec
mov
sbb
push
xor
add
dec
mov
mov
mov
jb
neg
in
into
cmp
ret
rcll
push
mov
push
inc
fistps
ja
in
jle
xor
cmpsl
pop
dec
cmp
aas
cmp
mov
adc
test
scas
cmpsl
cli
int3
push
mov
fbstp
mov
fsubrs
xor
xchg
or
add
dec
sub
jp
fisubrl
stc
jmp
lods
lret
pushf
mov
leave
mov
or
xchg
mov
pop
sbbl
cli
mov
mov
inc
out
mov
call
push
sbb
aad
gs
andb
xor
add
inc
scas
pop
pop
push
jne
lds
in
outsl
cmpsl
std
hlt
push
add
pushf
jo
call
sbb
inc
add
orl
fidivrl
inc
and
lods
push
mov
pop
sub
loopne
test
and
aam
mov
loopne
mov
lahf
and
movsl
sub
inc
and
sbb
jmp
outsl
lahf
fs
inc
sbb
cli
adc
cltd
sbb
cmpsb
inc
push
xchg
mov
leave
or
mov
sub
mov
or
dec
mov
mov
sub
cmp
scas
fnsave
push
inc
sarb
bound
scas
inc
out
xchg
addb
pop
aam
sbb
pop
xchg
add
imul
pop
cmpsb
movsl
sbb
loop
pop
mov
mov
fadds
jecxz
xor
push
xor
flds
pop
jmp
roll
out
sbb
scas
inc
adc
les
ja
or
shlb
icebp
outsl
add
lcall
imul
call
loopne
jmp
iret
push
adc
or
adc
dec
pushf
rcll
dec
push
inc
adc
fcomip
jno
scas
fcom
mov
pop
in
loopne
add
xlat
fcompl
aad
sbb
mov
or
cld
rcr
and
fstpl
fwait
mov
jecxz
push
lods
into
sarl
iret
mov
mov
jo
xchg
call
outsl
add
sbb
jo
xchg
add
mov
or
and
dec
add
fs
sub
jno
push
cmpl
iret
jle
jecxz
mov
push
adc
xchg
mov
imul
cld
mov
fsubrl
fisubrl
pushf
xchg
cmp
push
mov
and
mov
or
fucom
xlat
ret
das
aas
pop
in
jns
push
jno
jg
pop
imul
fsubrl
sbb
clc
push
add
jbe
lea
inc
dec
adc
fwait
test
mov
outsl
cmp
xchg
and
sub
cmpsb
daa
dec
mov
sahf
jne
mov
rcrb
or
imul
add
lret
rorb
pop
fmulp
xchg
push
inc
ret
or
mov
jp
add
jbe
pop
cmp
lcall
mov
pop
sbb
add
jae
cmp
inc
pusha
mov
xchg
and
hlt
dec
mov
dec
xchg
popa
sub
jns
mov
enter
dec
sub
insl
test
movsl
dec
aaa
push
jle
js
or
aam
ret
aam
sub
pop
call
mov
adc
xchg
xchg
ret
in
repz
add
lock
cmpb
loopne
mov
rorl
pop
arpl
stos
lea
mov
add
push
or
stos
ljmp
shrb
xor
test
mov
test
in
mov
mov
add
repz
pop
repnz
mov
ja
inc
pop
test
mov
jns
int
les
enter
push
xchg
stos
or
sub
push
lcall
inc
xchg
dec
adc
add
xor
lcall
roll
fcoml
sarb
ja
cmp
sub
loop
fdivrl
repnz
and
pop
nop
push
pushf
lahf
call
and
xchg
gs
cltd
pop
or
cmp
rcll
in
mov
decb
xchg
push
psadbw
mov
mov
adc
in
add
push
mov
insl
jno
add
sbb
xor
xorb
movsl
adc
pop
xlat
mov
dec
pop
ljmp
xor
xor
cmc
enter
fs
sbb
inc
mov
mov
test
imul
or
xor
ret
addr16
and
scas
jno
enter
xor
sub
dec
enter
xchg
ret
add
addr16
mov
dec
fcoml
popf
inc
jle
fdivs
xchg
xor
add
mov
in
xor
lea
adc
jbe
ss
push
xchg
incb
bound
jo
push
movsl
fnop
sub
jns
cltd
jno
in
aam
dec
xchg
cld
int3
lcall
jns
movsb
xchg
mov
pop
lret
jge
bound
jno
pop
cmp
call
bound
shlb
push
mov
fildl
mov
shll
mov
xor
mov
pop
test
mov
outsl
test
mov
add
lahf
xor
mov
mov
pop
mov
fldenv
pop
jecxz
orl
lock
ljmp
cs
jb
mov
pop
xlat
loope
leave
cli
pop
push
xor
and
inc
adc
mov
cmpsl
into
push
dec
add
lods
cs
div
mov
nop
mov
rcrb
mov
in
lods
jb
mov
jmp
jle
push
aas
ret
mov
cmpsb
fmul
out
jmp
jge
inc
je
sbb
clc
jb
jae
push
and
lea
add
test
xchg
ret
mov
les
dec
push
arpl
sub
stos
call
cmp
scas
adcl
xor
sub
mov
call
mov
je
pop
cwtl
adc
sbb
ret
popa
mov
cmc
xorl
aas
cs
stc
xlat
and
iret
stos
leave
jp
push
cs
mov
shrb
pop
ljmp
xchg
test
mov
lds
dec
xchg
mov
je
dec
mov
jns
inc
xchg
lcall
adc
mov
mov
cwtl
jecxz
jle
mov
mov
mov
mov
jl
adc
je
arpl
repz
loopne
sub
es
mov
mov
scas
sbb
pushf
dec
adc
cmp
xchg
push
push
call
into
enter
cltd
int
mov
jns
xor
ljmp
dec
mul
pop
sbbl
outsb
daa
jo
jns
lock
movsl
and
clc
icebp
mov
push
es
and
sti
movsb
int3
scas
push
xor
cmp
mov
add
pop
push
xor
fistpl
xchg
scas
xchg
test
cmpsb
jge
cwtl
test
push
mov
xchg
sbb
dec
and
lret
push
aaa
into
les
movsl
das
repnz
and
pop
push
popf
outsb
int
scas
sbb
cmp
mov
ret
or
sbb
jb
lcall
dec
push
movsb
in
or
mov
xor
mov
jb
sbb
and
or
lds
in
sub
fs
push
and
and
jns
cmpl
xchg
adc
call
xlat
jae
jno
sbb
outsb
xchg
or
cmc
aaa
sbb
and
dec
mov
dec
cmp
adc
outsb
jae
inc
push
jno
fldz
mov
sbb
aam
fisubl
repz
mov
sbb
ss
pop
xchg
nop
ds
mov
bound
add
repz
sbb
les
fldt
sarb
fwait
pause
repnz
ret
push
movsb
cmpl
inc
outsb
cmp
iret
aam
or
jp
leave
sub
cmpsb
inc
jp
pop
sub
sti
in
loop
add
add
add
sbb
leave
cmpsl
stos
inc
mov
daa
or
sbbl
xor
out
pop
sub
xor
inc
movsb
aam
sbbb
jnp
jp
fs
les
clc
pop
out
pop
dec
and
xchg
adc
fstpl
jl
ja
pushf
loope
xchg
fdivr
mov
xlat
enter
inc
pop
fmuls
in
mov
fisubs
stos
pop
add
jmp
andb
hlt
add
mov
sti
sbb
dec
xchg
in
not
loop
imul
out
pop
lods
mov
inc
nop
jno
int
movsb
in
xor
mov
shlb
sbb
out
jno
cmp
cmp
negl
fs
mov
loop
dec
dec
cmpsb
pop
in
dec
aaa
xor
insl
loop
sbb
mov
lcall
test
ret
in
adc
pushf
fldt
pop
icebp
in
xchg
pushf
neg
and
mov
and
pop
mov
mov
dec
xchg
jmp
pop
sbb
and
fs
inc
sub
loop
jno
inc
inc
stos
xchg
scas
data16
cmp
pushf
lcall
int
pop
call
inc
pop
ret
lods
and
add
into
and
out
pushf
inc
hlt
and
xchg
imul
cmp
rcl
lock
je
mov
arpl
shll
jbe
xchg
pop
dec
inc
mov
pop
lcall
sbb
incl
out
mov
sub
fwait
arpl
xchg
cmpsl
push
popa
adc
mov
mov
jo
lahf
or
es
jp
inc
xchg
push
mov
pop
jns
dec
dec
data16
or
addr16
push
movb
cld
int3
jno
js
pop
mov
andnps
mov
pop
inc
cmpsb
lahf
jns
mov
xchg
repz
mov
lcall
sahf
push
xchg
insl
cli
add
xchg
fsubrs
test
repz
mov
rolb
aaa
push
scas
or
test
lahf
add
gs
ja
pop
jnp
ficomps
fisubrs
push
xchg
outsb
popa
cwtl
or
mov
mov
dec
pop
pop
pop
rclb
aad
mov
sbb
dec
add
rcrl
aaa
add
dec
lds
pop
rorl
fists
popf
in
push
imul
cmp
mov
movsb
je
jmp
shll
push
sub
mov
sbb
sub
in
pop
es
inc
or
add
fdivrs
test
icebp
xor
mov
adc
dec
and
mov
pop
fsubrl
mov
xchg
mov
fcomps
repz
fiaddl
pop
adc
lcall
jp
rolb
sub
jae
les
pushf
and
dec
cs
imul
push
pop
push
mov
enter
scas
mov
xlat
loop
pusha
lahf
int
arpl
dec
clc
pusha
iret
data16
mov
nop
cmpsb
inc
xor
and
dec
fnstsw
popf
mov
mov
add
imul
adc
cmc
icebp
pop
xchg
rcrb
bound
sbb
sti
leave
pop
rcll
pop
ljmp
add
aas
cmpb
and
lahf
jo
daa
scas
adc
mov
test
bound
mov
mov
mov
rcr
dec
test
outsb
clc
fs
fs
add
dec
xchg
mov
pop
in
fildl
repz
dec
push
sub
sub
hlt
stc
dec
jg
int3
call
pop
push
xchg
cmp
mov
addb
add
int3
add
lods
fnstenv
nop
pop
call
rolb
add
repz
push
in
lret
lods
mov
inc
je
mov
stos
out
mov
jecxz
push
jge
loopne
es
and
push
enter
xlat
pop
insl
xor
fbstp
inc
push
lds
or
jne
movsl
pop
sub
ret
movsl
mov
push
jecxz
cmpl
inc
in
jo
pusha
xchg
jno
sbb
mov
outsb
rorl
insl
add
jo
and
fnstsw
popa
ja
push
js
aas
jp
fiadds
aas
insb
sahf
push
push
and
dec
inc
mov
rolb
add
add
pushf
lock
mov
sahf
xchg
inc
mov
cmpsl
addr16
iret
pop
test
es
pusha
mov
mov
push
add
call
popf
mov
push
jl
mov
xor
filds
lods
inc
jl
mov
jmp
test
andb
and
add
sbb
cli
call
ljmp
adc
xor
data16
mov
and
push
adc
arpl
push
outsb
aad
push
jns
fdivs
je
popa
je
int3
daa
fadd
jge
push
dec
pop
ret
sub
or
clc
and
mov
popl
popf
test
lods
mov
or
adc
mov
mov
call
xchg
ja
daa
fs
les
pop
mov
dec
lods
scas
pop
stos
ret
push
pop
pop
out
lret
jbe
pop
test
ss
jp
pop
ljmp
scas
xor
cmp
lock
call
and
jmp
sbb
xchg
pusha
mov
pop
js
push
je
test
out
pop
mov
nop
or
or
outsl
push
sbb
xchg
hlt
ja
dec
pushf
jnp
mov
aam
or
mov
mov
dec
movsl
lock
jge
into
das
int
mov
mov
jae
mov
iret
mov
pop
outsl
adc
lret
out
fisttps
cmpps
lods
mov
dec
mov
nop
arpl
cmpsl
and
je
push
mov
pop
mov
dec
push
insl
out
and
in
and
cmp
adc
mov
ljmp
mov
pop
push
in
push
pop
jae
push
push
lods
into
dec
repz
fsubl
je
std
or
std
xchg
mov
popaw
ss
in
push
std
push
jle
test
xor
or
out
xchg
push
test
shr
add
jle
push
scas
sub
dec
shll
in
fstps
lret
dec
inc
pop
sub
sbb
dec
call
dec
sbb
lods
dec
je
pop
insb
jg
test
fimuls
dec
movsl
pop
ljmp
xchg
dec
or
enter
aaa
mov
jle
xchg
test
or
adc
ret
fldcw
lcall
cmp
ljmp
insb
dec
test
fs
add
cld
rorl
mov
xor
lret
dec
jge
pop
and
mov
sbb
pop
inc
insl
imul
shrb
std
lods
xchg
xchg
mov
lcall
push
or
cwtl
out
and
cmp
sub
sub
xor
lea
iret
shrb
stos
div
stos
mov
inc
cmp
pop
rolb
mov
nop
lods
sbbl
push
fwait
insl
imul
or
rorl
xchg
or
dec
jmp
mov
in
dec
mov
sbb
data16
js
test
and
and
or
in
ss
je
popf
clc
lret
or
xchg
jo
negb
lds
mov
outsb
jbe
lods
and
testb
cli
push
or
mov
push
dec
jb
push
addl
out
sbb
mov
pop
mov
pop
mov
imulb
popa
outsb
sbb
add
loope
mov
adc
push
mov
aad
and
mov
es
ds
mov
xor
std
mov
cld
add
inc
fistpll
cli
loop
int
js
and
push
push
xor
orb
or
lret
push
push
fwait
jo
stos
mov
pop
and
jmp
mov
xchg
addr16
repz
jns
popf
test
add
cmp
sbb
push
sti
cmpsb
jle
jle
test
adc
jb
inc
lods
cld
jbe
xor
shrl
lahf
push
jge
cmp
into
adc
jle
jmp
jb
dec
sbb
pop
out
cld
mov
leave
and
pop
addr16
addl
cwtl
repz
mov
call
cmp
sub
enter
sar
mov
inc
pusha
aam
loop
xchg
jp
mov
ja
mov
pop
inc
jge
xor
ljmp
jnp
cpuid
push
mov
daa
push
dec
mov
lds
call
cmpsl
mov
and
dec
pushf
out
push
dec
sub
cmc
popa
cli
jbe
push
xlat
xchg
stos
test
repz
mov
cmpsb
dec
mov
jmp
dec
inc
push
js
in
lret
call
aaa
mov
dec
adc
jae
xor
inc
jno
pop
push
stos
loope
repz
mov
fs
hlt
mov
test
cmp
jg
sbb
sbb
sbb
and
add
lcall
pop
mov
adc
dec
mov
push
jmp
xchg
xchg
cmpsb
pop
sbb
les
xchg
ret
call
pop
push
jb
mov
mov
push
xor
xor
pop
lock
mov
pop
or
jecxz
sbbl
sub
sti
dec
fsubr
stos
repnz
jecxz
aaa
out
lock
mov
sub
mov
iret
out
loopne
xchg
stc
push
xchg
push
nop
ror
jbe
and
xor
scas
push
jns
inc
popf
push
ret
jecxz
ss
dec
pop
mov
enter
jg
and
push
lahf
inc
add
ja
adc
into
sub
xchg
enter
lret
push
mov
callw
inc
and
xchg
movsl
lds
outsl
pop
mov
jmp
adc
clc
xchg
inc
pop
add
xlat
out
push
mov
cmp
aas
lds
xor
jle
cmp
xchg
leave
cmp
pop
mov
push
pop
test
sub
cmp
cmpsb
mov
jne
mov
bnd
icebp
dec
pop
jae
ret
icebp
cmp
mov
imul
ss
xchg
scas
movups
add
and
cmpsb
cmp
dec
mov
mov
leave
or
push
jnp
adc
fldcw
and
test
pop
hlt
mov
lods
in
dec
xor
push
mov
sub
xor
mov
sub
daa
daa
fldcw
sub
lds
in
popf
cmp
dec
xchg
dec
nop
xchg
push
or
cwtl
ja
repnz
lret
test
in
fistpl
push
inc
dec
sti
jp
lcall
xchg
cmc
out
jl
push
dec
and
arpl
xor
icebp
jb
movsl
and
mov
dec
and
dec
inc
jno
cmp
adc
lea
pusha
bound
add
pushf
enter
xor
ja
js
sbb
aaa
gs
sahf
xchg
or
or
popf
test
cmp
int
or
push
xor
mov
insl
mov
dec
out
xchg
and
daa
sarb
push
pop
fidivs
lcall
adc
mov
or
xorl
push
xor
sbb
std
jp
imull
xchg
outsb
hlt
cmc
mov
or
inc
xchg
pop
ret
sbb
scas
inc
nop
fidivs
or
xor
por
decb
mov
call
mov
stos
ret
test
mov
in
jle
inc
pop
jle
movsl
inc
das
and
fdivl
scas
push
jmp
cmp
xchg
cmpsl
ret
xor
icebp
sub
and
incl
insl
add
lahf
xchg
pop
addl
push
pusha
jb
sbb
ret
ja
rorb
ljmp
push
pusha
insb
jmp
add
lret
dec
ret
jge
pop
enter
jns
jge
ret
or
cwtl
xchg
fimull
in
push
mov
mov
xorb
mov
sbb
pop
mov
xchg
adc
mov
dec
lcall
pop
push
or
scas
push
int3
cmp
and
xor
ret
in
jp
and
movsb
dec
setno
mov
pusha
and
sti
cmp
test
inc
sub
or
into
pop
iret
xchg
jbe
mov
aaa
and
outsl
icebp
sbb
outsb
push
dec
cwtl
idivl
cmpsl
nop
leave
ja
add
in
movsb
out
ljmp
cmp
cmpsb
dec
cmp
lods
jl
adc
xchg
popa
adc
or
sbb
xchg
mov
mov
xlat
aam
imul
fwait
mov
divb
adc
pop
adc
fcomps
adc
loope
push
test
jl
in
repnz
jns
jno
push
lods
fists
sbb
mov
pop
gs
jbe
mov
mov
loopne
cmp
lea
in
rcl
mov
sbb
ss
test
ror
inc
out
lahf
dec
mov
push
cld
in
cli
aas
pop
sti
adc
mov
mov
scas
sub
nop
adc
lds
and
cld
lret
fnstcw
mov
fcomip
jmp
loopne
rcl
push
cmp
lahf
mov
sub
lds
ret
jg
iret
cmpsl
icebp
shlb
adc
pop
xor
test
mov
jnp
fwait
push
sbb
xor
adc
cmp
sub
lock
fwait
pusha
and
xchg
push
dec
xchg
test
lds
mov
adc
cmp
mov
mov
add
rolb
and
add
sbb
ja
movsl
sbb
movsl
xchg
push
cs
sub
add
mov
test
push
jno
inc
inc
add
jge
or
mov
shll
addr16
fsubrl
add
out
nop
or
pop
jnp
sbb
push
shlb
cmp
jb
pop
inc
andb
test
dec
xchg
out
and
adc
sbb
add
jl
xchg
out
gs
hlt
inc
adcb
and
or
jb
cmp
xchg
loop
insb
sub
mov
and
add
pop
push
push
out
adcb
nop
in
mov
scas
ret
mov
enter
fbld
stc
xor
push
jno
xor
jbe
dec
mov
mov
xchg
jecxz
idivb
pop
mov
nop
mov
push
in
popa
xor
mov
sbb
mov
xor
jb
xlat
mov
scas
jno
rcr
xor
sbb
mov
xchg
xchg
shll
sub
jb
dec
xchg
adc
xor
pusha
adc
jl
movsl
xchg
movsl
cli
jno
in
notl
xor
test
mov
or
inc
xor
push
iret
dec
es
adcl
sahf
and
out
ds
movsl
bnd
adc
sahf
out
ds
cmp
mov
push
fisubrs
cmc
mov
test
sub
fdiv
cmp
pop
lret
lods
jno
mov
sub
ds
xchg
shr
out
xchg
sbb
pop
loop
cmp
fwait
or
loop
push
stos
jnp
cld
leave
popf
adc
xorb
mov
fnstenv
in
stc
mov
fcomi
dec
ret
icebp
xor
pop
and
mov
sbb
in
test
mov
mov
aaa
push
lods
pop
xor
clc
pop
cmp
ja
pop
xchg
sti
insb
hlt
dec
lret
jmp
pop
fsubl
xor
les
fsubs
sub
xor
scas
shrl
cltd
mov
jne
or
lret
cmpb
push
scas
fs
and
sub
push
inc
in
push
repz
push
ja
subb
in
sti
ret
jo
fcompl
mov
cmp
sarb
cmc
leave
mov
xorl
mov
std
movsb
pop
fdivl
leave
add
xchg
add
insl
insl
ljmp
sbb
test
add
int3
cmp
mov
mov
or
jns
aad
mov
cvtpi2ps
loopne
xchg
and
xchg
iret
fdivrl
xchg
shrb
inc
push
xchg
lods
jp
push
xchg
lret
enter
push
aad
popa
inc
rorl
mov
xor
jb
insl
scas
and
dec
cltd
inc
stos
ss
scas
jl
dec
cmp
fwait
pop
xor
flds
mov
rsm
pop
dec
xchg
adc
out
jle
and
sub
sbb
mov
int
mov
mov
negb
cmp
pop
ljmp
repnz
push
lret
xchg
pop
test
stc
dec
stc
pop
cmp
xchg
cmp
pminsw
sarl
pusha
pushf
jnp
lcall
mov
icebp
into
push
popa
imul
and
roll
inc
cmp
in
outsb
sarl
int3
in
jecxz
or
push
aam
xchg
popf
in
push
cmpsb
les
clc
push
shl
pop
mov
scas
pop
pop
repz
mov
fnstcw
xlat
div
push
mov
xchg
stos
cwtl
mov
mov
iret
push
test
jne
jmp
aam
cmp
xor
inc
hlt
movl
std
stos
cmp
hlt
imul
aas
or
ds
imul
mov
jae
fwait
lods
andb
xor
inc
push
xchg
pop
pusha
jmp
add
or
and
mov
inc
xchg
cmp
mov
pop
push
in
sub
cld
jb
xchg
xchg
dec
xchg
into
aad
or
jne
hlt
push
or
cmpb
mov
aaa
fcoml
movsb
icebp
inc
add
sub
pop
loopne
rorl
mov
inc
push
mov
inc
sub
shrl
arpl
ja
or
xlat
mov
clc
sub
inc
mov
and
xchg
imul
mov
movsb
aam
aaa
popa
sbb
test
dec
dec
sub
pusha
lret
mov
sub
movsb
xor
test
stos
xor
jge
lods
or
shlb
loope
xor
sbb
test
movsb
dec
loope
cmpsb
sti
out
push
cmp
inc
pop
adc
out
jle
push
nop
cmc
enter
xchg
jmp
shlb
cmp
xor
outsl
test
out
sar
test
mov
and
call
int3
das
mov
dec
pusha
cmp
sbb
jno
bnd
add
call
stc
cltd
ret
sahf
cli
push
xlat
dec
xor
add
sub
add
pop
aad
in
mov
imul
xchg
xchg
xlat
cs
add
push
ja
lahf
cmp
fwait
mov
cmp
jg
hlt
pop
sub
mov
les
and
or
mov
icebp
dec
les
outsl
jmp
add
imul
mov
adc
add
pop
scas
js
lds
test
fmulp
mov
mov
out
ss
add
mov
nop
or
cltd
or
pop
lods
popa
mov
xlat
xor
ljmp
gs
add
pop
add
push
mov
mov
notb
adc
out
shlb
jg
xchg
sub
mov
xorb
js
sub
stos
push
jmp
popa
stc
push
sub
jo
rorl
stos
mov
adc
addr16
cld
popa
or
or
and
movsb
xor
mov
cmc
cmp
addr16
jmp
clc
cmp
iret
fistpll
movsl
shll
mov
push
out
bound
mov
test
inc
push
dec
jns
scas
loopne
fstpl
imul
fsubs
scas
sbb
fnstcw
sub
fldt
stos
outsl
push
and
lahf
adc
test
stos
sbb
imull
in
mov
sbb
push
in
data16
hlt
xor
or
ljmp
mov
xlat
cmp
jge
aad
loope
aam
daa
lret
mov
sti
andl
or
repnz
push
movsl
aas
popl
dec
jp
pop
xor
repnz
mov
out
mov
xchg
xor
jns
xor
mov
mov
and
xlat
es
je
shl
outsb
jp
stc
push
jne
lret
adc
cli
push
push
pop
insb
push
rcrb
test
fisttpll
rcr
je
cli
ficomps
lock
or
mov
lsl
mov
lea
and
inc
pop
ljmp
push
ficompl
mov
push
pop
add
repz
lods
add
and
pushl
sti
mov
or
imul
sub
je
push
cltd
cs
jns
mov
shll
jle
mov
xor
dec
add
mov
push
popf
or
scas
add
cmpsl
mov
imul
ja
pusha
jecxz
add
xchg
mov
shll
ljmp
sbb
loop
inc
sahf
mov
nop
adc
mov
clc
leave
and
cmp
stc
mov
lods
cwtl
gs
fsubrs
xchg
mov
mov
xchg
push
in
out
dec
xorb
out
iret
ret
or
jg
movsl
and
xor
imull
insb
jo
jge
pop
dec
mov
push
sar
pop
or
sbb
fildll
jle
fidivs
test
sbb
push
std
xor
pop
adc
sbb
aam
inc
pop
or
or
sahf
ret
adc
stc
loopne
scas
jno
fsubr
lret
cmp
xlat
popa
dec
es
xor
fsub
add
dec
push
test
int3
repz
in
outsl
xor
out
add
repz
mov
jno
lods
sbb
push
bound
popl
and
jecxz
mov
sub
mov
sub
xchg
lret
out
pop
cmp
add
clc
shrl
test
sbb
xchg
popa
popa
outsl
jbe
inc
cs
mov
ja
nop
sbb
adc
repz
js
xor
jmp
cwtl
cwtl
jb
sbb
add
push
daa
leave
xor
loopne
out
cmp
mov
dec
jmp
pushf
inc
sets
or
mov
xlat
cmp
sahf
push
pop
clts
rorb
scas
push
push
mov
lock
push
sti
adc
push
xor
push
jbe
xlat
rcll
push
jl
in
ds
sarl
imul
or
pop
incl
inc
popa
hlt
andb
in
adc
jb
xlat
arpl
dec
add
mov
add
mov
mov
in
jg
popf
pop
dec
iret
lret
setae
lret
out
in
dec
inc
and
add
movsb
call
dec
es
sub
incl
mull
and
inc
pusha
push
out
pushf
dec
outsl
je
sbb
stos
stos
dec
test
or
dec
rcrl
sbb
add
add
jo
jp
cmp
enter
push
add
or
sub
clc
or
clc
cld
adc
xor
cmpsl
sbb
jae
out
mov
ffree
dec
sbb
sub
jb
shr
mov
out
pushf
or
dec
add
lahf
enter
pushf
test
push
daa
adc
lods
int
sbb
divb
sub
mov
outsb
fwait
lret
lea
nop
jl
dec
sub
dec
and
xchg
fstps
mov
pop
push
fsubr
jp
fbstp
lret
add
or
call
xor
add
sbb
mov
lahf
xchg
or
hlt
and
pop
push
cmp
fwait
inc
mul
dec
cltd
out
push
lods
ret
jp
outsb
decb
pushf
adc
mov
cli
add
xorb
mov
or
sahf
push
in
jb
notb
fiaddl
sbb
or
cmpsb
cmp
and
fmull
mov
out
inc
mov
lds
jle
andl
pushf
outsb
mov
or
ljmp
std
mov
jo
sarb
shlb
mov
sbb
pop
and
jmp
cmpsb
push
push
bound
or
sbb
jno
movsl
inc
dec
pop
dec
cmp
and
cmp
stc
xor
xor
cmc
imul
dec
aaa
push
sub
mov
jne
cmp
dec
aas
add
lret
xchg
adc
jb
js
xor
testl
xchg
push
adc
xchg
xchg
push
loopne
mov
enter
inc
hlt
cmp
dec
cmp
pop
or
hlt
jbe
add
or
fbld
pop
inc
pop
sbb
push
pop
leave
push
push
notl
sub
push
push
jnp
add
jl
sub
cs
fiaddl
mov
push
icebp
jns
pop
lds
adc
cmpsb
jle
enter
sti
cmp
mov
in
pop
xor
es
mov
pop
and
movsl
lret
cltd
add
mov
or
js
push
and
cld
int3
rcr
adc
and
ds
inc
mov
cld
fisttps
jp
insl
sbb
inc
test
das
test
mov
dec
mov
pop
xchg
jb
add
push
jge
mov
xchg
push
scas
push
clc
sbb
inc
sbb
testb
loopne
xorb
ret
mov
push
div
incb
xchg
or
packsswb
lds
mov
das
popa
jbe
out
cli
jb
xchg
mov
fwait
jb
fs
aas
ret
aaa
jb
cmp
mov
mov
ret
sti
fcmove
int
pop
lret
adc
rcrl
sub
jno
mov
inc
mov
add
adc
pushw
test
loope
imul
clc
mov
lea
adc
pop
mov
adc
fwait
inc
push
sub
inc
push
xor
ja
add
xor
sbb
pop
inc
in
sub
mov
mov
sbb
jle
lds
mov
jmp
movsl
sbb
push
or
jb
orb
sub
and
jb
out
stos
add
mov
shrl
adc
hlt
das
loop
add
pushf
mov
lahf
sbb
or
insb
push
mov
fidivrl
flds
cmpsb
fsubr
push
jb,pt
icebp
mov
clc
xchg
jge
pop
sbb
clc
cmpl
sub
xchg
imul
and
mov
stc
movsb
adc
arpl
ds
repnz
jnp
pushf
popf
lcall
ljmp
out
jecxz
aam
jge
das
push
insb
cmp
mov
push
lock
adc
ljmp
or
xor
mov
jbe
mov
call
cmp
sub
mov
mov
in
dec
xor
xchg
mov
in
fadds
out
mov
stos
mov
pusha
mov
sub
mov
test
mov
repnz
mov
pop
and
push
popf
lret
push
gs
add
jne
adc
mov
lret
rorl
jne
hlt
repnz
call
addr16
in
inc
roll
pusha
ret
leave
hlt
outsb
and
fwait
lds
stos
jge
pushf
out
leave
rcrl
sbb
xor
dec
sbb
jge
dec
jl
inc
xchg
movsb
or
push
push
cmp
mov
pop
mov
or
repnz
or
pop
push
out
ret
and
outsl
cs
or
xlat
or
mov
jne
shl
mov
xor
xchg
jae
int
mov
jle
jbe
lret
sarl
cmp
aaa
adc
fwait
sti
and
pop
imul
in
int
jmp
pop
in
or
push
test
icebp
sub
bound
fsubrp
mov
lods
sbb
addr16
lahf
xchg
and
xlat
xchg
out
lret
inc
orl
jns
xchg
clc
scas
bnd
cltd
jmp
fstp
jnp
mov
adc
leave
sbb
jno
lds
and
xchg
mov
mov
mov
mov
out
cmp
rorb
jns
scas
mov
sub
sbb
push
stos
or
jle
stc
fisubrl
adc
xor
ss
mov
scas
out
imul
scas
push
push
sti
idivl
sub
hlt
lods
xor
xor
push
or
push
les
jmp
and
lock
push
out
and
add
ret
cmp
pushf
sub
cmp
les
stos
mov
aaa
cmp
bound
xor
sbb
ret
push
cmp
xchg
es
popf
and
hlt
cli
xor
adc
jl
dec
pop
sbb
cld
fucomp
mov
outsb
lahf
loopne
pop
cld
nop
xchg
mov
je
pusha
jmp
xlat
sub
fisttpl
dec
fmulp
ss
xchg
ss
cmc
push
inc
xor
rclb
mov
insl
and
lods
inc
mov
loope
adc
sbbl
cmp
js
pop
mov
das
push
scas
test
ss
subb
ljmp
xor
mov
js
lret
jmp
gs
xchg
mov
sbb
shrb
enter
xchg
mov
xlat
or
dec
sbb
outsl
fnsave
dec
jo
leave
dec
ljmp
xor
icebp
sahf
pop
jno
or
jns
sub
data16
pop
idivl
mov
fs
xor
imul
fidivrs
push
test
lret
jmp
fistps
xor
push
loopne
jmp
das
sbb
or
inc
out
xor
push
imul
xchg
stc
lret
adc
jo
arpl
js
mov
test
mov
loop
inc
rcrb
cmp
shl
scas
outsb
fisttps
sahf
lds
and
fwait
mov
test
push
sub
lock
inc
and
les
fnstenv
or
sbb
or
lret
lea
xor
push
dec
mov
and
cmp
cwtl
lret
dec
jae
bnd
faddl
setle
popa
pop
or
pop
repnz
or
push
lahf
jno
popf
bound
sub
jae
cli
jmp
aaa
jp
arpl
test
dec
inc
add
cld
pushf
mov
cmp
icebp
pop
shrl
mov
std
xor
and
fstps
arpl
insl
xlat
push
cld
adc
add
ss
movsb
ficoms
push
jo
sub
push
aad
stos
mov
ret
cmp
lret
mov
mov
mov
or
mov
aad
cmp
ds
pop
push
xlat
mov
ret
lds
pop
xchg
enter
or
insb
fisttpl
jns
cmpsl
mov
das
mov
dec
loope
aam
repnz
sbb
mov
cmp
inc
sub
loopne
cmp
les
loope
push
dec
ds
push
cs
imul
inc
add
movb
push
push
push
jmp
ret
mov
aas
ja
xchg
sub
mov
fdivrs
or
adc
pop
sub
fs
xchg
mov
insb
test
mov
mov
fstpt
inc
sbb
dec
in
sbb
dec
mov
jae
arpl
mov
shl
call
and
sub
mov
mov
ret
sub
ss
pop
sbb
mov
in
cmpsl
and
mov
pop
pop
outsl
push
push
sbb
imul
cmp
push
jne
cli
scas
sub
into
adc
out
jge
pusha
fs
outsl
call
add
mov
in
sub
xchg
shlb
xor
shll
mov
cwtl
dec
iret
pop
cmp
iret
mov
and
dec
cwtl
lds
out
pop
mov
shlb
xchg
iret
jp
mov
mov
xchg
mov
mov
mov
mov
and
fdivrs
in
mov
jl
mov
das
lds
icebp
sarb
push
push
pop
and
movsb
adc
imul
xlat
jns
das
xor
movsb
mov
repz
xchg
stc
add
pop
subb
and
cli
sub
aam
inc
fists
repnz
pusha
pop
not
sti
js
jns
add
mov
xor
mov
repnz
xchg
clc
imul
add
jecxz
cltd
ljmp
loopne
ljmp
cmpsb
mov
jp
mov
pop
xor
outsb
das
sbb
shll
std
fildll
dec
xchg
add
shll
or
cmp
jmp
mov
adc
dec
push
sub
pop
mov
xor
sub
mov
dec
popf
xchg
push
fldcw
test
push
js,pn
mov
mov
cmp
push
jle
lret
cli
ds
cli
imul
or
pop
mov
aas
aam
cmpsb
mov
decb
loopne
in
daa
or
rclb
aam
mov
add
dec
pop
pop
push
inc
mov
mov
sti
or
sbb
loopne
sbb
aad
mov
xchg
lds
andl
mov
xchg
in
xchg
into
stos
inc
arpl
mov
jmp
ret
or
call
mov
adc
sbb
lea
xor
in
sar
daa
lods
in
pushf
mov
push
in
jl
push
add
fwait
loope
mov
loope
fmull
xor
out
or
push
pop
ret
push
ret
fiaddl
push
rorl
jns
jne
in
xorl
cld
rcrl
jnp
or
fs
mov
or
adc
and
pop
add
xcrypt-cfb
cmpsl
and
std
sti
mov
mov
push
shrl
aas
cmovnp
xchg
std
push
fwait
mov
ljmp
xlat
mov
nop
lret
sarb
cltd
in
int3
fidivrl
fs
pop
jbe
push
pop
outsb
jae
andb
mov
test
cmp
sbb
enter
pop
push
inc
mov
add
jb
xor
dec
aam
lret
add
dec
mov
loop
je
ret
or
ja
sahf
mov
xor
push
orl
jp
pop
pop
xor
es
cltd
subb
ds
push
sti
pop
test
mov
mov
mov
into
sarb
pop
test
sbb
add
pop
popf
xor
cmp
xchg
scas
inc
pop
std
mov
inc
jmp
and
addl
pop
arpl
inc
lods
movsl
cltd
jp
loopne
mov
cmp
xlat
xchg
mov
mov
cwtl
sbbl
in
pop
mov
sub
adcl
enter
ss
xchg
or
push
out
loopne
stc
clc
insb
inc
jb
out
cmp
mov
lea
icebp
sbb
aam
jne
push
ljmp
mov
inc
mov
xchg
mov
jecxz
mov
pop
aam
notl
jmp
cltd
jns
pushf
jmp
push
jb
cmp
push
pop
cwtl
inc
out
fisttpl
int
lods
xabort
ds
inc
cwtl
and
adc
sti
decb
aad
xchg
jmp
ret
jg
jnp
add
stos
rorb
cwtl
mov
push
dec
jge
int3
mov
dec
mov
aad
iret
pop
mov
mov
enter
dec
lods
mov
mov
pusha
and
nop
xchg
shrl
fnsave
pop
pop
aad
pop
sub
lret
iret
jmp
cmp
je
es
enter
mov
outsb
inc
test
xchg
xor
inc
fisttps
shr
movsb
pop
rclb
repnz
fsubl
loopne
add
rcrb
xlat
loope
lcall
stos
rclb
cltd
mov
das
pop
fwait
mov
out
sti
bound
add
js
xchg
mov
sbb
or
cmpsl
out
cmp
sub
lea
xor
mov
push
xchg
mov
clc
xor
xchg
push
stos
les
jae
mov
int
fcmovb
sbbb
es
ds
decl
jbe
sbb
in
hlt
or
mov
mov
mov
xorb
test
sarl
sbb
jg
rcr
xor
cmc
pop
inc
je
cmpsb
addr16
stc
sbb
pop
xlat
or
mov
imul
aaa
cmp
jnp
cmp
test
mov
sbb
xor
jo
mov
adc
clc
inc
cmp
out
pop
out
fildl
and
cli
xor
das
push
xchg
sarl
inc
iret
mov
xor
mov
mov
stos
xchg
adcb
mov
cmp
or
pop
stos
and
hlt
xchg
pusha
arpl
fcmovnb
push
rcl
pop
dec
fcompl
out
andl
sbb
outsl
xchg
push
fldt
mov
xor
push
sbbb
pop
push
pushf
fidivrs
xchg
enter
fadd
xchg
mov
mov
sub
nop
xchg
sub
mov
xchg
cmpb
dec
inc
test
cmp
lea
scas
jmp
inc
inc
push
jl
add
and
insl
inc
push
push
lret
mov
cmp
pop
fucomip
jg
test
xchg
scas
push
es
fcomi
arpl
cmp
das
inc
movsl
test
xor
call
or
aad
push
lea
mov
pushf
pop
iret
lcall
mov
ret
or
dec
mov
movsl
ljmp
mov
sub
mov
inc
bound
mov
daa
popf
and
fadds
dec
into
lea
iret
or
xor
rcll
repz
sti
inc
jbe
dec
and
outsb
pop
pop
fsubrl
mov
adc
inc
and
lcall
dec
daa
rcrl
outsb
imul
movsb
jmp
xor
xchg
xchg
lcall
lds
pop
jb
mov
xor
inc
mov
icebp
sbb
or
cld
loop
out
mov
jno
jns
sarb
or
mov
jmp
mov
adc
sub
sbb
pop
jmp
adc
data16
hlt
xor
sub
out
fcomip
lahf
xor
jo
sti
adc
daa
mov
or
jmp
scas
pushf
add
mov
lret
sbb
adc
lret
imul
xchg
loope
dec
loope
popf
daa
test
nop
sbb
fsubl
into
scas
imulb
iret
jbe
hlt
push
pop
dec
in
and
push
fstp
ret
or
xlat
mov
ja
mov
mov
outsl
push
ficompl
mov
cmp
jge
insb
cmp
push
rcrl
mov
jmp
mov
mov
pop
push
jg
sahf
push
push
imul
imul
push
add
xlat
mov
xor
dec
ljmp
movsl
popf
ja
and
mov
sbb
mulb
adc
mov
inc
jg
xchg
daa
popa
popa
cltd
ds
gs
xchg
pop
lock
mov
in
adc
stos
cmpsl
mov
aas
pop
dec
and
imull
rorl
adc
pop
add
mov
add
sti
lahf
daa
and
ftst
jle
sahf
jnp
lds
jmp
push
cmp
cmp
out
sbb
inc
add
pop
mov
jnp
dec
iret
or
xchg
aam
jno
hlt
pusha
sub
adc
in
or
or
or
add
push
das
icebp
inc
cmp
sbb
xchg
add
mov
jecxz
pop
xchg
popa
fstpl
xchg
movl
xor
aam
jbe
stc
sbbb
shll
sub
rcrb
dec
cld
je
pop
push
add
or
sbb
sti
jg
cltd
xchg
inc
or
mov
bsf
xor
inc
sub
clc
dec
loope
pop
fimull
adc
int
xor
mov
data16
xchg
outsb
sub
mov
imul
dec
stos
fwait
nop
ss
mov
jae
icebp
sub
addr16
lret
pop
fwait
and
dec
mov
mov
push
adc
sbb
push
mov
push
xchg
pushf
movsl
dec
daa
ffreep
cmp
stos
aaa
imul
imul
outsl
jmp
scas
adc
or
mov
push
pop
sti
dec
mov
lret
sbb
add
jge
jne
xchg
xchg
mov
cmpsl
shll
sbb
fidivl
fdivs
mov
xchg
push
into
push
add
cmp
mov
mov
mov
sarb
and
icebp
inc
mov
fsubs
jl
inc
mov
and
push
daa
in
in
ja
xor
and
shll
insl
cmp
call
test
xchg
jbe
sub
xor
fs
mov
out
insb
push
inc
jbe
sbb
in
cli
stos
fildll
xchg
shll
ds
lcall
mov
sub
scas
lock
add
daa
sbb
outsb
clc
jo
lods
add
push
dec
jb
pusha
cmp
dec
lock
adc
into
ss
mov
imul
enter
pop
mov
xor
loopne
insl
cld
pop
or
mov
push
xor
insb
sbb
xchg
xor
push
and
xlat
gs
in
pop
cwtl
imul
divb
adc
xchg
mov
push
xchg
enter
jmp
dec
or
xchg
pop
fs
sub
fs
fisubs
test
cvtps2pd
clc
mov
popf
int
mov
cmc
mov
xchg
scas
dec
and
dec
jnp
adc
movsb
pop
pop
inc
in
mov
mov
popa
aaa
mov
shlb
enter
xchg
mov
clc
rolb
lods
cmc
and
arpl
rcrl
push
jnp
fnstenv
ss
leave
es
in
mov
lret
push
push
pop
pop
lea
adc
scas
shll
loope
fstps
push
outsl
adcl
loop
addr16
mov
and
cli
mov
hlt
es
cmpsl
mov
xchg
adc
pop
jne
rorb
push
pop
ljmp
mov
mov
cmp
daa
and
negb
arpl
inc
lock
out
sub
outsb
stos
mov
dec
out
pop
or
out
jbe
push
mov
mov
inc
lret
xor
ljmp
xchg
ja
adc
push
or
loopne
xchg
fadds
mov
dec
cs
pop
mov
xlat
adc
or
popa
mov
bound
call
loop
fs
mov
inc
jo
push
cmp
mov
mov
xchg
lods
pusha
lock
out
jne
gs
xor
lods
push
cwtl
ja
leave
out
sub
mov
stc
add
xchg
jno
mov
xchg
loop
icebp
pop
jge
adc
jo
std
xchg
aad
adc
mov
push
jecxz
loop
ljmp
sub
aad
pop
push
loope
subl
jl
mov
lret
decl
xorl
add
addr16
inc
or
adc
fcompp
jle
xor
xor
fistpl
fiadds
out
xchg
adc
mov
sbb
loope
push
sahf
xchg
pop
loope
mov
pop
jo
insb
es
pop
jns
stc
xchg
cltd
mov
xor
jmp
iret
ds
scas
cmp
out
fistl
lods
cmc
hlt
push
sbb
dec
cmpsl
push
popf
cmpsb
into
sub
mov
xor
jle
inc
ret
ljmp
cmpsb
sub
mov
cmp
jae
mov
xchg
inc
fwait
and
popf
push
insl
bound
mov
dec
jo
ss
xor
mov
je
or
test
scas
push
ljmp
pushf
es
das
mov
das
sub
scas
adc
cmp
decb
roll
call
popf
jp
xchg
cltd
pop
lods
mov
pop
idiv
data16
sbb
xor
push
scas
ja
fiadds
inc
cmp
repz
jne
xchg
mov
add
mov
adc
and
xchg
repnz
xlat
data16
xlat
xchg
add
cmp
sti
loopne
leave
pop
rcll
cmp
and
mov
popf
cs
inc
aam
xchg
pop
stos
fisubs
idivb
xor
xor
ret
cmc
arpl
hlt
imul
pop
in
jge
rorl
jp
cmc
out
iret
addb
mov
xchg
lods
xor
ljmp
test
in
in
daa
out
insl
xorl
pushf
mov
out
adc
pop
fsubr
inc
imul
xchg
aad
fiaddl
or
lret
sub
sub
jae
dec
shlb
clc
mov
add
gs
mov
rcl
mov
pmaxub
clc
test
std
push
dec
jg
out
xlat
mov
aam
pusha
xor
jnp
popa
ret
je
cmc
andl
push
stos
xchg
inc
xlat
jb
cmp
sahf
in
adc
push
cli
lock
js
mov
cmpsl
adc
loope
pop
movsl
xchg
mov
inc
stos
cmp
mov
test
lds
cmp
dec
inc
and
adc
inc
pop
jb
inc
les
orl
bound
mov
aam
push
testb
jb
ret
nop
inc
mov
adc
push
lock
inc
inc
aam
data16
add
jne
inc
scas
es
push
mov
ss
inc
jge
std
outsl
pushf
cmp
xchg
dec
add
cmp
push
fnstcw
cld
mov
pop
xchg
ja
nop
mov
in
dec
fldt
and
dec
pop
xchg
das
mov
clc
ret
mov
pop
push
mov
mov
pop
mov
inc
orb
data16
xorl
lret
xchg
mov
test
jo
je
xor
dec
popa
sbb
inc
dec
pop
fs
ljmp
ss
sbb
mov
or
and
mov
fsubrs
movsl
pop
push
js,pt
adc
xchg
jns
loopne
add
repnz
in
or
cmpsl
adc
push
cmp
mov
lahf
jne
xor
cmpsb
mov
push
loopne
xchg
test
dec
imulb
sub
test
or
fstpl
xor
and
and
add
rcll
jg
fcomi
loope
push
xchg
aad
jl
outsl
mov
xchg
movsl
fs
loop
dec
jg
pop
and
std
pop
in
lds
lds
pop
dec
sub
pop
cmc
sbb
cmp
xchg
cmp
pop
jmp
popa
stos
sub
andb
mov
decl
inc
cmp
sbb
imul
aam
push
mov
and
cld
or
jae
mov
ljmp
add
lods
mov
mov
mov
dec
cmp
cs
in
das
cli
call
call
aad
mov
xrelease
stc
jl
cmpsb
or
aam
hlt
sub
jmp
aaa
xor
int3
pop
add
sub
cmc
cmp
adc
xchg
mov
xlat
mov
pop
pop
add
sahf
mov
test
repz
xor
jnp
mov
and
inc
jecxz
inc
roll
xchg
mov
mov
push
sbb
xchg
sbb
lret
popf
push
jmp
mov
mov
adcb
imul
add
mov
lcall
jo
or
mov
dec
jge
pop
dec
mov
les
mov
fsts
mov
adc
neg
mulps
call
xchg
inc
hlt
push
shr
cmpsb
cs
jne
mov
mov
and
aaa
inc
xorb
inc
aad
rclb
pop
enter
or
jmp
data16
orb
sbb
insl
movsl
mov
imul
pop
cmp
sarl
jno
adc
loop
jns
add
mov
adc
scas
test
adc
jg
xorb
and
in
mov
or
push
lcall
scas
sbb
stos
inc
test
test
js
iret
xchg
jb
dec
iret
xchg
dec
test
pop
sahf
in
inc
dec
mov
xchg
insl
sbb
jp
mov
push
push
js
pop
imul
cmpsl
mov
lods
adcb
loop
sti
popa
jl
jmp
dec
out
dec
rclb
mov
and
sahf
fs
and
sub
push
push
jns
inc
pop
dec
int
jmp
ljmp
outsl
sub
mov
loopw
sbb
cmpl
mov
mov
mov
leave
push
mov
ficomps
into
lds
mov
loope
xchg
pop
cmc
ja
ret
jbe
add
inc
inc
ret
and
inc
cmp
mov
aaa
outsb
jmp
mov
sbb
into
mov
mov
jne
scas
xor
mov
xchg
xchg
jbe
or
xor
pop
xchg
lcall
mov
adc
lock
or
clc
out
in
adcl
orb
andl
adc
fdivrp
dec
test
pushf
pusha
inc
lock
cmp
decb
outsb
xchg
jmp
std
xchg
fnstcw
pop
pushf
stc
xchg
fcmovb
push
jg
cmpsb
sub
mov
sarl
inc
pop
xor
outsl
push
pop
adc
push
fldl
cli
inc
xor
fisubrs
daa
pop
inc
rcr
mov
push
imul
push
cmpsl
lods
sbb
inc
jg
insl
mov
sbb
mov
lods
insb
cli
imul
fidivl
xlat
fisubrl
xorl
insl
pop
call
lods
cmp
push
xchg
filds
es
repz
cltd
mov
loopne
and
in
inc
jno
or
sahf
push
push
inc
popa
loop
mull
clc
xchg
jmp
xchg
dec
dec
test
fst
popf
jo
mov
and
mov
push
sti
dec
les
or
test
popa
iret
incl
out
sbb
sbb
add
xchg
cmp
pop
inc
movsb
jmp
js
sti
int
xor
or
push
xchg
adc
adc
inc
dec
pop
pop
sub
add
xchg
add
pop
jg
jno
ss
lds
push
mov
movsl
stos
icebp
mov
repz
sbb
es
stc
dec
inc
adc
popa
data16
lods
jecxz
jb
sti
repz
sub
push
aas
xchg
neg
lods
icebp
adc
imul
sbb
dec
dec
sub
pop
aad
sbb
jg
xchg
xor
repnz
xorl
add
dec
mov
js
dec
cmpsb
out
fsubrs
pop
sarb
hlt
gs
subb
ds
pushf
fisubs
sub
xchg
icebp
call
pop
or
mov
sahf
sbb
inc
xchg
jns
pusha
movsb
dec
sti
mov
addr16
jnp
dec
ljmp
pop
push
aas
add
out
pop
sub
call
lock
push
ret
shrl
ds
mov
loopne
pushf
fs
dec
pop
and
nop
sub
adc
push
sahf
sti
dec
ret
pop
push
xor
inc
xorl
mov
xchg
stc
cmp
outsl
adcb
sbb
ljmp
xchg
push
cs
pop
lds
movsb
shlb
xor
pop
mov
loopne
stos
pop
jg
shrl
lods
push
std
dec
es
outsb
add
imul
in
cmp
xchg
fcoms
out
dec
call
fcmovb
cmp
push
fucomip
repnz
imul
sub
lea
cli
shll
data16
aaa
mov
inc
mov
orb
inc
fwait
sub
jg
sbb
ss
pop
inc
fldt
in
bound
and
cli
add
pop
inc
cmp
cmc
les
push
lods
jne
ds
add
fistpl
divl
in
aas
dec
and
cld
and
aaa
mov
xor
sbb
roll
add
jecxz
mov
xchg
inc
jns
sub
nop
dec
push
sarl
mov
mov
pop
mov
xor
mov
xchg
mov
mov
or
in
push
dec
lcall
dec
ja
xor
clc
push
inc
inc
ror
or
pop
std
cli
mov
stos
mov
pop
fbld
dec
sarl
pop
cmpsl
inc
dec
mov
es
out
scas
les
std
add
ja
mov
ja
mov
cmpsl
jmp
mov
jnp
out
cmp
add
xchg
dec
mov
push
pop
test
adc
push
jno
jne
sub
pop
leave
and
lock
insb
xchg
jnp
out
ret
fidivs
push
fsubrl
adc
mov
pushf
es
aad
push
mov
jb
cmc
shlb
xchg
daa
or
imul
sub
imul
xchg
jno
cmp
push
push
pop
je
cwtl
lds
inc
leave
adc
add
pop
subb
adc
adc
mov
sti
lds
push
dec
lock
movsl
out
divb
mov
sbb
adc
stc
sub
inc
jl
lahf
adc
cmp
sarl
shlb
arpl
daa
enter
inc
js
jae
add
inc
push
and
pop
mov
dec
rorb
imull
addr16
lret
ret
pusha
jp
mov
mov
sub
push
mov
cmp
pop
mov
fists
hlt
test
or
xchg
mov
rcl
out
jmp
dec
cmpsb
mov
mov
mov
mov
iret
mov
movl
adc
out
push
pop
cld
dec
dec
shrb
jbe
xchg
push
adc
int
cmp
xor
outsl
aam
dec
jecxz
cmp
or
sbbl
outsb
xchg
add
dec
cmpsb
adc
mov
bound
mov
pop
fists
mov
mov
push
push
mov
pop
pop
xor
mov
enter
mov
push
adc
xchg
xor
lahf
sub
push
mov
xchg
cmpsl
or
xchg
push
dec
div
xor
call
xor
xor
pushf
stos
adc
aas
dec
int
leave
imul
inc
divb
test
cmp
bound
mov
push
repnz
sbb
cmpsb
lods
adc
test
xchg
inc
imul
cmp
rcr
inc
jno
andb
aad
mov
push
ret
sbb
jmp
sahf
push
inc
jle
fwait
and
and
mov
sub
cmp
test
push
xor
fwait
jp
sub
rorl
jp
mov
outsl
jb
and
repz
adc
movsb
mul
aad
cmp
les
cmpsl
shl
dec
inc
cltd
push
movsl
inc
dec
mov
movsl
xor
enter
outsb
pop
rcrl
push
aad
sbb
mov
and
in
xor
add
div
cltd
inc
mov
mov
popf
in
insb
push
cli
push
jo
jbe
notb
fisubl
cmp
idiv
popa
inc
arpl
cmp
dec
jl
cmc
les
fwait
rcl
pop
xor
mov
sti
sbb
jbe
andl
xchg
ljmp
dec
and
into
push
xchg
stc
andb
pop
pop
mov
cmp
add
repz
push
mov
pop
insb
push
sarb
repz
gs
popa
popa
and
repnz
dec
push
xor
fdivrl
dec
dec
pop
test
clc
jmp
sarl
in
mov
mov
jnp
loopne
inc
lret
bound
addr16
inc
jge
or
mov
sub
cmp
pop
xor
xchg
add
fidivs
das
insl
lret
leave
push
jo
out
xor
mov
pop
ret
shll
jae
int3
roll
cli
leave
aas
fs
jb
inc
rcr
adc
add
stos
out
js
popf
inc
mov
adc
pop
xor
aas
mov
mov
mov
out
les
mull
sbb
mov
xor
add
les
call
pop
mov
push
dec
xor
xor
sbb
lods
jnp
push
je
pop
fnstcw
fimuls
xchg
ret
jne
test
cmpsl
incb
mov
inc
mov
icebp
pop
xor
popa
aaa
loopne
push
testl
out
xchg
xchg
push
sbb
adc
cs
stc
enter
popl
cmc
lock
or
xor
sbb
adcl
mov
das
adcl
pushw
push
lods
lods
xchg
or
and
lods
loop
mov
xchg
pushf
sub
outsl
aaa
dec
mov
or
scas
testl
loope
jl
mov
repz
and
mov
scas
jnp
xor
push
cmp
xor
dec
int
cwtl
fs
fistps
inc
loopne
test
push
fwait
xchg
or
push
pop
call
outsb
test
sub
cld
addr16
out
mov
es
mov
pop
cmp
inc
and
orl
ret
stos
sbb
std
xchg
fnstcw
movsb
test
xor
notb
loop
ret
push
push
dec
test
in
loopne
ds
or
arpl
mov
mov
cs
adc
inc
jnp
int
pop
popa
popa
jae
movsl
nop
movsl
inc
int3
pop
xchg
adc
sbb
push
out
movsl
push
mov
adc
add
pop
hlt
sahf
iret
loope
inc
outsb
add
jl
sahf
pop
push
jmp
sahf
rcll
clc
xchg
xchg
jg
jp
inc
outsb
not
lds
movsl
ret
sbb
ljmp
lea
jle
add
mov
enter
push
rorb
sub
adc
mov
pop
nop
inc
xchg
adc
or
mov
lret
stos
hlt
loopne
push
xor
rolb
or
jo
test
sub
loopne
subb
mov
cmp
aam
push
shrb
gs
sbb
mov
mov
xchg
xor
mov
inc
stc
sbbl
add
fisubrl
int
cmp
loopne
in
mov
jecxz
cmp
out
add
sbb
or
pop
xor
lock
data16
add
cld
dec
sub
sbb
pop
add
gs
sub
xchg
sbb
pop
das
test
pop
lock
jp
test
sbb
add
pop
pushf
mov
push
in
push
mov
pop
es
loopne
jno
push
fmuls
push
sbb
mov
xor
and
shl
ret
push
jo
xor
insl
js
or
jmp
in
sub
push
or
pop
mov
ficoms
dec
loop
or
nop
jno
pop
aad
cmp
enter
jl
je
add
test
lret
xchg
or
pop
sub
es
call
test
ror
mov
jno
sub
std
add
cmp
into
lcall
sbb
test
pop
out
lea
jl
jae
sarl
or
push
push
int3
idivl
loope
mov
std
popf
pop
stos
out
dec
sub
dec
mov
ljmp
sbb
rcll
mov
test
enter
arpl
mov
dec
push
fs
pop
addr16
pusha
rcl
sbb
fistl
outsl
mov
repz
iret
sub
scas
jg
icebp
sbb
ret
jmp
iret
dec
mov
jns
and
cmp
int
addr16
mov
push
dec
mov
sbb
repz
in
jp
or
int
sub
mov
cmp
cltd
push
and
and
push
outsl
aaa
and
mov
cld
outsl
push
push
ficoms
shrl
mov
movsl
inc
mov
add
movsl
inc
stos
pushf
pop
push
adc
arpl
push
ljmp
stos
dec
jmp
jnp
sub
pusha
dec
ficomps
mov
ror
xchg
mov
das
lock
jnp
lods
add
out
jns
fildl
jmp
sbb
adc
jmp
mov
sbb
cmp
pop
mov
add
push
dec
mov
xchg
lret
lret
imul
adc
inc
jne
jae
addr16
mov
popf
jbe
inc
or
push
xlat
add
dec
cli
aam
ror
sti
sbb
push
stc
mov
lea
and
pop
mov
adc
or
push
outsl
and
scas
std
jmp
fmulp
mov
pop
or
cltd
loop
adc
xor
rcr
inc
add
push
or
lock
leave
sahf
popf
test
out
int
jo
adc
or
mov
mov
sub
pop
xchg
jns
popf
xchg
jle
fidivrl
sub
or
sub
out
push
mov
sub
sub
add
dec
cli
test
std
out
jge
mov
mov
outsl
mov
adc
or
dec
insb
mov
mov
sbb
xchg
push
andb
sbb
ret
lret
nop
roll
inc
push
adc
in
mov
push
mov
inc
xor
inc
lea
add
fcomp
cli
fmul
mov
mov
xchg
shlb
leave
adcl
andl
popf
add
add
movsb
mov
loope
jno
mov
fistpll
scas
insb
lret
pusha
sbb
sbb
add
mov
xor
or
adc
and
mov
cmp
sub
mov
pop
push
cltd
push
and
test
adc
jne
jmp
or
sbb
ss
mov
data16
sub
or
cmp
outsl
les
push
and
lods
adc
xchg
testl
les
lea
scas
and
jo
repnz
hlt
fs
mov
inc
lret
jg
mov
push
lds
cld
push
cmp
inc
sarl
push
xor
pop
jo
outsb
mov
mov
addl
jns
popf
xor
cmp
sbb
adc
punpcklbw
mov
add
icebp
sub
out
mov
cmc
into
pop
insl
jnp
inc
loop
iret
ds
mov
sbb
mov
mov
imul
pop
scas
test
mov
push
xchg
shr
fmuls
outsb
aam
xchg
popf
test
adc
imul
mov
cmp
add
sar
lods
and
pop
dec
imul
inc
and
stc
dec
sbb
nop
jne
fsubs
out
loop
pop
sti
cli
dec
insb
cwtl
ret
xor
xchg
out
lret
pusha
mov
pop
and
pop
xchg
jmp
push
pushf
xor
adc
gs
mov
inc
int
sbb
mov
das
pop
xor
stos
jle
in
fwait
test
dec
sbb
bound
xchg
into
scas
fcmovb
cmpb
pusha
push
repz
dec
mov
ret
aaa
bound
fwait
sbb
add
add
mov
xchg
cld
lret
mov
sub
or
mov
and
leave
dec
testb
mov
test
sahf
jbe
pop
pop
xchg
sbb
icebp
cld
cmpsl
add
mov
push
gs
decb
rorl
mov
subb
orl
cmp
daa
daa
push
push
popf
test
xchg
dec
cltd
aad
pop
mov
ret
ret
rep
xor
add
push
xchg
push
icebp
ss
add
pop
fadds
mov
imul
clc
cmc
cmp
imul
and
mov
push
and
int
mov
mov
out
jle
inc
stos
outsb
out
mov
mov
ror
mov
sub
call
inc
mov
rcll
push
rsm
push
mov
test
fdivrs
es
mov
inc
ret
jecxz
pushl
out
sti
daa
add
adc
fnstsw
inc
sub
je
dec
lods
sbb
mov
ret
jb
dec
mov
shlb
enter
mov
jecxz
jg
inc
cmp
dec
dec
pop
out
loope
push
pop
subl
or
pop
aaa
fisubl
sahf
xchg
xorps
nop
fisttpl
push
repnz
jg
fnstsw
es
or
scas
daa
mov
aam
xchg
ss
jg
lods
push
orb
cmp
movsb
mov
popa
inc
push
lock
xor
sbb
ret
enter
cld
mov
loope
js
insb
cmpsl
adc
pop
pop
xchg
js
sbb
out
out
lods
outsb
and
test
sti
sbb
cltd
push
arpl
and
dec
cmpsb
jecxz
inc
loop
shll
push
mov
cmpsb
scas
mov
imul
int3
js
cmp
inc
sarl
xchg
rcl
pusha
jl
leave
cmp
inc
movntq
xor
testb
in
rclb
xchg
ds
jnp
lods
mov
mov
imul
loopne
scas
loopne
push
aas
inc
push
mov
add
lods
cli
mov
sbbb
push
xor
xor
inc
add
adc
rcll
xchg
xor
xlat
dec
scas
cmp
fldl2e
leave
sbb
and
jp
cwtl
cmp
shrl
xlat
mov
nopl
sub
je
cmp
sti
aaa
test
push
mov
add
inc
call
mov
loopne
mov
nop
jo
cwtl
das
push
mov
into
jo
arpl
pop
call
out
xor
push
jg
nop
in
inc
ljmp
push
sahf
cmp
test
repnz
mov
inc
shrl
out
daa
fimuls
sti
and
sub
pusha
jbe
and
xor
xchg
stc
jae
sbb
dec
lea
sbb
mov
push
call
arpl
fmuls
inc
inc
fistl
arpl
fildll
sub
add
inc
daa
xor
add
loope
add
fnsave
cmp
mov
mov
and
jecxz
xor
insl
nop
mov
push
pop
lret
push
in
pop
mov
push
jl
mov
bound
xchg
pop
xchg
cmp
or
mov
iret
sbb
sbb
sub
lret
les
fwait
add
fwait
insb
mov
cmpsl
jmp
adc
sbb
xor
insl
add
xor
aad
xchg
cs
les
mov
out
hlt
std
fwait
jae
push
xchg
mov
je
scas
filds
jmp
xchg
test
pop
sti
sbb
sub
push
push
in
ret
leave
and
pop
sbb
xor
cmpsl
test
jnp
stos
jno
call
dec
xor
imul
imul
mov
xchg
mov
shl
sub
pop
lret
cmpsl
movsb
push
lcall
je
push
jp
pop
stc
paddb
leave
out
rcrl
int3
test
xor
out
out
push
adc
jle
aas
popf
jo
sarb
jnp
sub
das
and
push
decl
lret
add
lahf
popf
fs
jne
sbb
or
cmc
cmpsl
push
bound
testb
aam
jle
push
push
dec
aaa
pop
out
nop
dec
fwait
adc
outsb
jg
adc
cmp
test
shll
cltd
and
mov
xor
inc
push
out
in
xor
mov
aaa
mov
clc
pop
sub
dec
loopne
mov
ss
pop
xchg
or
adc
mov
iret
mov
jne
sbb
sbb
mov
push
aam
lock
push
fisubrs
mov
aas
iret
lcall
jmp
or
out
or
pop
xchg
push
pusha
cld
xor
imul
sbb
xchg
adc
add
aam
test
adc
jns
imul
and
inc
xchg
mov
xchg
es
outsb
mov
hlt
call
movsb
xlat
sub
push
pop
jecxz
jbe
cmpsb
xor
xchg
xor
pop
inc
sahf
pop
xchg
lods
mov
pusha
icebp
add
push
es
scas
inc
in
jne
xchg
xchg
mov
xor
pop
sbb
xlat
xchg
lods
mov
cmpsl
ljmp
pop
sub
add
jno
sub
aad
jmp
daa
add
jnp
dec
je
cmp
mov
lcall
addr16
imul
cmpsl
pushf
cli
add
push
sub
or
jp
jo
xor
fadds
fidivl
mov
mov
jle
jb
xchg
and
in
call
mov
pusha
insb
xlat
xor
icebp
addb
or
push
mov
dec
xchg
add
and
fnsave
flds
mov
fwait
hlt
testl
or
in
push
jo
mov
xlat
sub
mov
ljmp
stos
lret
mov
ret
inc
mov
ret
imul
enter
mov
jp
mov
jne
mov
fcmovne
sub
inc
aad
xchg
jbe
loopne
xchg
cmp
jmp
mov
and
jmp
es
sbb
and
xchg
repnz
mov
adc
arpl
stc
pop
jns
pop
cmp
jnp
pop
movsl
pop
pop
pop
repz
mov
mov
adcl
lcall
aas
mov
sti
cld
mov
inc
and
adc
push
call
mov
add
dec
jb
popa
pushf
pop
mov
mov
xor
inc
push
jmp
and
pusha
daa
pop
xorl
push
mov
out
mov
sub
out
aad
pop
xor
add
pusha
leave
aam
js
insl
or
xchg
dec
call
mov
xchg
push
lcall
bound
lcall
pop
arpl
dec
inc
mov
sub
inc
aas
add
clc
lock
or
add
jecxz
add
popf
mov
les
jle
xchg
jns
cmpsl
bound
mov
mov
cmp
nop
aas
in
push
jae
test
cmp
iret
dec
sbb
and
ret
cmpsl
inc
movsl
das
cmpl
push
loope
pop
inc
aaa
add
stos
push
out
mov
dec
inc
and
mov
daa
dec
xchg
ret
push
js
std
xchg
mov
jecxz
inc
push
fwait
sbb
dec
nop
add
loop
loope
xlat
ja
movsb
shll
sbb
inc
mov
push
mov
mov
mov
rorl
sbb
add
jne
push
sub
or
cltd
lret
cmpsb
xchg
les
inc
mov
icebp
cmp
and
inc
lahf
arpl
in
push
fadd
fsubrp
outsb
and
inc
xchg
jnp
pop
add
out
jmp
stc
dec
pop
xor
je
or
jae
or
dec
jo
mov
mov
xchg
lahf
das
xchg
pop
pop
add
xchg
test
jp
adc
push
pop
imul
subb
inc
mov
aam
sbb
push
loop
ficoms
mov
ss
inc
adc
mov
dec
idivb
and
in
sbbb
dec
gs
xchg
sbb
cmp
xor
aas
shrl
mov
inc
iret
js
lahf
mov
or
sti
jnp
dec
scas
add
xchg
pop
xor
add
dec
xor
movsl
fisubl
dec
dec
mov
push
add
sarb
insl
in
leave
fwait
lret
dec
push
repz
js
cmp
sub
sbb
fistpl
out
cmc
sbb
mov
cmpsl
mov
jge
ffree
repnz
cld
xchg
fcomps
jbe
mov
test
pop
loop
sub
xchg
fcoml
clc
pop
push
cltd
movsl
lcall
test
jl
xor
sbb
pop
add
pop
push
xor
jns,pn
fimull
fisubl
imul
aad
xor
push
js
or
cmc
int3
mov
xor
push
int
mov
dec
sbb
sub
fdiv
iret
mov
and
cmp
dec
stos
cwtl
addr16
aas
dec
or
syscall
mov
pop
ror
sti
sbb
cmp
jecxz
subl
les
xchg
lret
mov
scas
out
sub
mov
push
xchg
fldl2t
pop
mov
fcomps
sub
loop
mov
mov
idivl
sbb
xor
gs
and
lea
sub
add
sub
xorb
dec
xchg
push
push
sub
das
cld
inc
dec
mov
jp
xor
insl
mov
scas
mov
stc
cs
pop
scas
jno
pop
pop
mov
int3
ljmp
jae,pn
cmp
aad
clc
loopne
xchg
sbb
or
stos
sar
mov
xor
mov
icebp
push
sub
adc
xchg
fsubrl
inc
and
inc
mov
pop
scas
mov
xchg
cli
mov
add
xor
pop
inc
pop
add
push
mov
xchg
daa
mov
arpl
pop
mov
add
push
xchg
std
push
push
cmp
xor
and
outsl
push
stos
jmp
popa
push
out
andb
pop
movsl
outsl
xor
mov
cli
sbb
sub
fbstp
adc
pushf
stos
xchg
pop
out
mov
fld
mov
outsb
push
mov
sbb
and
sahf
fimuls
stc
sub
mov
fmull
stc
push
ret
inc
xchg
pop
int
sarb
adc
cmp
fs
imul
incb
jnp
xchg
hlt
adc
and
lcall
mov
jne
ficomps
jecxz
add
out
inc
xor
movsl
push
sub
popf
mov
push
or
scas
fistpll
mov
sub
pop
xor
pop
mov
jp
subps
push
daa
rcrb
xor
pop
imul
pop
inc
fdivl
cmp
pop
and
int3
out
and
cmp
ret
mov
out
jo
sti
loop
ss
test
sets
push
ljmp
mov
rcl
or
test
sub
aad
xchg
nop
mov
add
mov
mov
xchg
or
mov
dec
jmp
loope
push
xchg
and
ljmp
xor
adc
cli
arpl
pop
cs
mov
lret
gs
jg
or
cwtl
into
adc
aaa
arpl
add
mov
arpl
add
orb
dec
and
orb
outsb
push
sbb
pop
outsb
mov
ret
add
and
xlat
loopne
int
es
loope
ffreep
mov
imul
push
mov
jl
das
inc
gs
js
mov
pop
adc
aad
in
out
aam
aam
sbb
out
pop
ja
fstpl
cmpsb
inc
xor
test
mov
in
hlt
sbb
xor
daa
in
lcall
pop
insl
int3
jmp
adc
pushl
cmpsl
pop
test
pop
inc
aas
addb
pop
jge
xchg
or
xchg
pop
cmc
push
inc
sti
cmpsl
inc
inc
add
and
inc
pushf
inc
scas
pop
xor
pop
repnz
fsts
bnd
mov
idivb
sti
dec
enter
add
add
test
dec
add
sti
ret
xchg
sub
jl
inc
mov
into
xchg
or
nop
mov
jns
sub
jl
ret
testb
std
in
ret
pop
cmpsb
orb
sbb
aaa
dec
movsl
enter
out
xor
mov
inc
lret
fadds
jp
add
ffreep
rcrb
cmp
test
fildl
insl
movsb
xchg
inc
push
stc
xlat
test
in
mov
jle
push
mov
xchg
lahf
jg
je
mov
out
xor
push
iret
push
jp
inc
mov
mov
iret
test
inc
movl
ja
insl
mov
das
repnz
xchg
mov
inc
xchg
pop
mov
dec
lea
mov
jg
fwait
je
fdivs
ljmp
loopne
pshufw
in
out
pop
pop
mov
fwait
mov
jecxz
xor
cmp
fs
dec
mov
pop
popf
add
pop
sbb
shlb
add
pop
test
xchg
dec
inc
mov
xchg
xor
ret
cmpsl
ljmp
sub
or
enter
add
flds
or
xchg
scas
jo
jmp
bound
pop
xor
outsl
cmp
mov
jge
dec
mov
mov
jae
mov
sub
jmp
pop
stos
jp
mov
popl
insb
add
mov
int
data16
or
jle
call
push
xchg
xor
icebp
dec
mov
or
xchg
leave
leave
sbb
es
cwtl
push
mov
shlb
int3
mov
subb
insb
jns
dec
dec
clc
in
sub
pop
and
popa
mov
test
jge
inc
sub
data16
fstl
jbe
pop
and
push
loop
push
out
adc
cmp
mov
aaa
pop
sbb
sbb
std
cmp
pop
icebp
adc
movsl
lods
push
sbb
pushf
jl
cli
js
push
mov
sbbl
cltd
gs
jno
sub
mov
sbb
lods
xchg
or
jns
imul
scas
sub
fcoml
lock
mov
jge
ljmp
icebp
clc
aaa
loope
lods
jns
adc
mov
rcrb
and
inc
mov
mov
aam
cmp
jmp
xchg
fwait
push
je
mov
sbb
cmpsl
lods
pop
xor
ds
out
sub
or
or
popl
in
add
jmp
nop
int3
aam
mov
cwtl
repz
test
jecxz
inc
fdivrl
and
mov
jmp
add
push
push
mov
jb
pop
xchg
in
sub
bound
push
xchg
cmp
add
sub
xchg
cltd
pop
pusha
push
inc
jle
jecxz
insb
cwtl
test
lds
xchg
inc
lahf
sbb
or
or
imul
xchg
sbb
iret
add
xor
in
shr
sub
mov
sbb
push
xchg
loopne
sbb
fisubl
cmpsb
cmpb
adc
xor
pop
push
mov
adcb
pop
adc
inc
mov
mov
mov
cmp
jl
sub
push
jp
or
lock
stos
aaa
lret
fwait
je
aas
jb
inc
out
cmp
adc
pop
sub
mov
or
push
mov
xchg
adc
addr16
push
jl
cltd
lock
xor
mov
pop
stos
push
cmc
sbb
fsubr
out
aas
lcall
scas
inc
cmc
inc
adc
adcb
inc
and
inc
dec
mov
out
sub
js
test
xchg
and
xlat
arpl
jnp
mov
clc
imul
imul
enter
add
sbb
subb
nop
mov
scas
mov
mov
sti
push
int3
dec
in
or
addr16
pop
int
scas
mov
maxps
es
and
andl
xchg
or
sub
mov
pop
ret
inc
adc
cmp
addr16
cmpsb
add
incb
lods
or
addr16
cmc
push
jl
adc
push
xchg
sub
mov
xchg
jmp
and
pop
mov
push
jae
leave
jl
notb
mov
mov
scas
dec
cli
movsl
or
or
xchg
mov
xorl
cli
fucomp
mov
outsb
sbb
push
arpl
scas
push
lret
add
iret
or
mov
rolb
call
std
ja
inc
xchg
cmc
inc
mov
loope
mov
jmp
jb
fld
imul
out
mov
cs
jp
inc
out
xchg
out
dec
sub
or
push
movsb
lret
mov
aaa
scas
pop
mov
add
dec
xchg
popf
data16
pushf
lds
lcall
fwait
sbb
or
push
inc
loop
pusha
adc
ljmp
sbb
lret
cmp
cmp
out
outsb
ds
push
sbb
test
cmpsb
shll
and
sahf
xchg
add
dec
arpl
shlb
jo
and
pop
dec
mov
jns
into
dec
cld
aad
xchg
pop
sti
ficomps
lahf
fsubr
xchg
sbb
or
xchg
jnp
push
jne
fwait
insl
fcoms
test
test
add
rcrb
and
out
cmpsl
mov
out
jne
xlat
inc
mov
ja
jl
clc
jns
add
cmp
pop
mov
jl
push
mov
cwtl
or
iret
repz
clc
call
es
xlat
add
frstor
ret
and
pop
cmp
dec
pop
xchg
loop
cmpsb
sub
je
jmp
into
mov
pop
jmp
dec
jo
sahf
clc
aam
mov
fwait
call
xchg
scas
lret
push
in
pop
or
jne
mov
and
add
outsb
cmp
pop
or
inc
push
inc
clc
pop
cwtl
dec
or
push
or
insb
adc
push
xchg
loopne
sbb
out
pop
or
repz
mov
xchg
aad
jo
dec
dec
leave
push
ljmp
in
or
sbb
mov
push
lcall
mov
sbb
mov
dec
xor
stc
pop
pop
cmp
das
push
clc
lea
ja
sbb
sbb
aaa
cmp
nop
pushl
mov
adcl
pop
add
and
and
xor
shll
in
xor
mov
pop
test
fdivs
out
sbb
lret
xor
clc
pop
jne
js
cmp
jecxz
inc
in
dec
cmpsl
cmc
add
pop
je
outsb
jo
lods
inc
push
sub
inc
lods
mov
imul
or
sti
sbb
lahf
div
test
popf
mov
mov
int3
or
bound
xchg
and
pop
fs
mov
scas
fdivs
popf
pop
leave
loopne
pop
sub
dec
push
mov
xchg
inc
repnz
mov
xor
mov
ret
mov
stc
dec
mov
xor
mov
mull
pop
pop
dec
fimull
dec
mov
lahf
dec
repnz
push
mov
mov
das
lcall
dec
pop
pop
or
loop
je
xchg
inc
push
pushf
sub
fdiv
aad
rcrl
pop
add
mov
xchg
cmpsb
sub
push
inc
in
push
repz
jl
jle
aam
pop
std
out
scas
pop
arpl
out
fisttpll
xchg
lods
cltd
adc
ror
ja
mov
sbb
push
inc
push
adc
or
jne
rcrb
or
mov
mov
adc
lret
loopne
fs
cmp
inc
sbb
xor
sahf
stos
out
mov
pop
fcmovnbe
xchg
ret
push
iret
push
daa
adc
stc
add
imul
in
dec
fsubrs
loop
lods
cltd
push
addb
jl
rorb
aad
aaa
shlb
push
lods
fs
fnstcw
add
jb
lcall
cmpsl
lods
add
fcomp
adc
rclb
cmc
out
cmpsb
pop
xor
mov
push
sbb
jns
cli
push
cli
es
movsl
js
xor
ds
bound
adc
push
dec
mov
repz
mov
je
int
xchg
xchg
roll
ret
je
jnp,pn
cmp
call
in
add
data16
loopne
in
lret
imul
fdivp
into
sub
pop
std
lds
lahf
gs
fucomi
mov
cmpl
sub
xchg
sbb
cld
or
xor
push
movsl
jbe
cld
popf
scas
and
xor
stos
or
fistpll
jecxz
mov
rolb
mov
mov
pop
sbb
rcl
jns
fistps
jne
jne
push
ja
mov
sbb
jo
in
rolb
sti
pop
and
inc
push
pop
test
cli
mov
sub
mov
test
andb
mov
inc
rcpps
add
and
rcrb
insb
fdivrs
pop
cmpsb
jnp
inc
imul
les
and
test
sarb
mov
sub
fs
sahf
ret
sub
add
and
push
mov
mov
push
xchg
je
stos
pop
fcmove
mov
pop
xor
mov
std
movsb
enter
add
mov
shl
icebp
pop
or
adc
or
adc
movsb
cmpsb
fmull
clc
int3
mov
test
sar
push
mov
adc
push
and
xchg
push
fsubr
push
mov
test
mov
add
mov
call
xchg
es
push
aas
cmc
clc
jb
lahf
cld
mov
outsb
jp
sahf
mov
data16
add
and
loop
adc
jne
fcompl
cs
sbb
dec
cmc
mov
outsb
add
adc
jno
repz
pop
cwtl
negl
cmp
aam
addl
inc
or
ds
roll
loope
jae
shrb
cld
dec
sub
loopne
mov
out
push
mov
es
mov
scas
rol
sub
notl
mov
mov
xchg
lret
xchg
inc
xchg
sub
push
xchg
scas
ror
mov
cmp
outsl
mov
jmp
outsl
sbb
insl
and
push
hlt
pop
icebp
adc
scas
hlt
imull
and
mov
test
push
push
cmpl
add
mov
add
push
in
outsb
movsb
inc
push
adc
hlt
and
mov
mov
jno
sbb
or
stc
pop
mov
je
in
aas
mov
push
and
jp
push
lret
pop
ljmp
pusha
shr
shlb
add
sub
sbb
cwtl
mov
repnz
cmpsl
cmp
jl
les
sub
stos
mov
cmp
pop
enter
inc
cmpsb
lock
dec
push
inc
movsl
loopne
pushf
push
sbb
shrl
pop
cwtl
pusha
std
enter
mov
xor
sub
sbb
adc
fdivrp
scas
adc
xor
and
test
inc
lods
add
ss
jle
hlt
incb
xchg
lea
leave
mov
add
imulb
adc
xchg
mov
insl
mov
inc
xor
jp
int3
and
stc
mov
sbb
pop
and
cmpb
roll
ds
gs
and
ss
std
add
mov
outsl
in
xor
insb
sahf
sti
ud0
nop
cmp
inc
aaa
mov
insb
out
push
dec
sbb
xor
out
add
cltd
pop
mov
scas
dec
stos
rol
dec
repz
mov
jl
mov
inc
dec
mov
pop
leave
adc
or
lahf
cmc
movsb
in
icebp
sbb
xchg
addr16
call
adc
imull
pop
mov
inc
loope
inc
imul
insl
xchg
lret
ljmp
add
int
or
xor
pop
or
jp
lret
xchg
cwtl
orl
scas
call
ss
movsl
hlt
dec
push
pushaw
pop
nop
mov
loopne
adc
nop
push
lods
sub
std
cmp
mov
or
push
and
dec
lret
fwait
pushf
push
pop
insl
adc
loopne
inc
push
jle
cmpsl
push
sub
js
push
sub
rolb
aaa
sbb
mov
mov
lds
lcall
jg
inc
faddl
add
cmp
outsb
into
adc
cli
mov
cs
lods
outsb
ljmp
dec
cmpsl
fnstsw
pop
ljmp
sub
stos
dec
xorl
mov
std
fwait
mov
adc
clc
dec
jecxz
add
cmc
cmpsb
jnp
test
inc
pop
addr16
mov
xchg
mov
mov
sbb
pusha
sub
dec
ja
jnp
mov
and
mov
sbb
mov
jae
imul
jne
cmp
sub
dec
adc
add
mov
inc
sbb
fildll
push
test
in
movsb
fisubrl
xor
adc
scas
test
lods
inc
mov
leave
cmp
pusha
stos
push
test
adc
scas
mov
in
cmp
cmp
xor
xlat
lea
decl
or
mov
or
and
add
popf
jmp
inc
testl
sahf
sti
sbb
push
inc
iret
and
imul
mov
inc
scas
mov
repz
cli
cli
mov
hlt
push
imul
jg
sbb
mov
mov
xlat
pop
insl
xor
xlat
scas
insb
subb
cld
inc
adc
xchg
dec
cmp
pusha
pushf
sahf
mov
cmp
jmp
push
add
and
jmp
sub
jnp
and
sbb
mov
sbb
lock
dec
es
mov
scas
xchg
push
movsl
in
add
loop
ror
inc
jmp
movsb
gs
cld
aas
pop
fiadds
add
dec
aam
pop
lcall
in
xchg
and
andl
addl
cli
out
sidtl
out
sti
in
rcrl
mov
sahf
clc
xor
test
mov
lods
push
fstl
mov
shl
aad
outsl
jg
inc
mov
scas
cmp
loop
mov
mov
xor
dec
sbb
imul
xchg
mov
nop
adc
adc
popf
inc
icebp
lret
lods
insb
jns
push
iret
loope
mov
xchg
int3
and
dec
aad
sub
pop
gs
pop
mov
mov
mov
scas
dec
xor
lods
imul
fwait
scas
mov
pop
mov
into
add
pop
pop
iret
cmp
dec
pop
inc
dec
mov
cltd
shll
adc
ljmp
ljmp
in
aam
xchg
test
push
xchg
jecxz
xchg
and
and
in
or
cmp
xchg
jbe
cmpsl
cs
add
jle
rcrl
sar
lahf
jno
enterw
adc
cmc
loope
xchg
mov
sti
shrb
adc
fmul
cmpsl
insb
aas
sti
orps
mov
or
lods
outsb
jns
outsl
dec
sbb
neg
rol
mov
clc
insb
cmp
pusha
add
mul
adc
xchg
mov
mov
mov
mov
push
jno
cs
pop
mov
addr16
mov
popa
sti
fiadds
lcall
lods
push
mov
xor
data16
fisttpl
inc
js
sbb
xor
lea
jge
loopne
mov
out
xchg
jl
xchg
mov
xchg
adcb
lea
out
je
dec
jbe
adc
cmp
xor
or
push
in
push
cwtl
add
pop
pop
test
arpl
lock
and
push
dec
dec
or
dec
in
add
sti
das
inc
mov
adc
cli
dec
stos
or
ret
dec
xchg
in
cmpsb
push
or
in
push
xchg
test
icebp
js
dec
add
test
mov
push
arpl
adc
or
inc
popa
xorb
dec
push
test
or
adc
pop
xchg
iret
cmpsl
js
mov
cwtl
push
add
std
ljmp
insl
jge
add
fs
mov
push
ja
sub
dec
frstor
jmp
call
mov
xor
adc
add
mov
mov
test
push
dec
leave
push
mov
shrl
jmp
adc
sbb
sub
mov
out
popf
mov
or
lret
lahf
xlat
lret
imul
or
pop
in
pop
arpl
mov
shl
mov
in
movsb
das
outsl
add
outsb
pop
mov
inc
push
pop
dec
mov
scas
push
add
xchg
scas
pop
adc
shl
add
jae
or
in
lock
mov
bound
push
mov
xchg
ret
adc
dec
sbb
push
cmp
jg
inc
mov
add
call
inc
jns
mov
insl
ss
popf
std
jne
xchg
cmp
loopne
jae
shrb
cmpsb
call
push
inc
mov
aad
pushf
fisubrl
std
jge
movsb
dec
dec
xor
push
lds
les
in
aam
mov
inc
mov
iret
cmc
arpl
push
in
push
out
stos
lods
push
xchg
lds
ljmp
lcall
call
insl
ud2
mov
in
pusha
mov
in
add
mov
sahf
cs
xchg
mull
daa
enter
rcrb
push
mov
fwait
test
in
insl
shl
insl
inc
cmp
adc
iret
notb
icebp
xchg
or
sbb
inc
int
insb
jmp
mov
shll
or
pop
mov
jne
add
popa
jl
cmpl
xchg
loop
adc
and
sahf
xchg
sbb
daa
sub
das
sub
or
lret
div
outsl
sub
aaa
lret
cmc
sbb
movsl
sti
ljmp
loopne
and
sub
or
jge
mov
je
inc
sbb
mov
push
icebp
lods
sub
add
and
fadds
aaa
sbb
jmp
rorl
mov
jbe
pop
sbb
add
enter
or
je
push
shll
std
adc
sbb
sub
mov
shrl
sbb
fiadds
ret
add
and
popf
xor
lock
mov
dec
sub
and
loope
daa
sbb
mov
or
cmp
mov
jecxz
xchg
fwait
mov
sub
dec
mov
leave
cltd
ja
es
jg
rcrb
xchg
mov
and
mov
nop
mov
cli
jb
mov
ret
cmpl
mov
dec
sub
or
xor
ds
outsb
push
or
cmpsl
or
adc
sbb
lcall
sbb
out
mov
lea
lds
pop
sub
ret
sbb
mov
sub
inc
lret
jle
mov
sub
lret
icebp
aas
mov
xchg
inc
mov
inc
xor
ss
movsl
movsl
shl
ljmp
rep
in
push
inc
in
es
mov
jmp
out
lea
ljmp
js
movsb
adc
cmp
sub
push
inc
cs
jbe
imul
jae
cmpsl
push
adcb
push
out
fwait
sbb
or
dec
mov
xlat
cld
sbb
icebp
dec
lock
cmp
lds
lahf
add
inc
lds
icebp
pop
test
push
loope
dec
fs
xchg
jle
outsb
pop
cmc
inc
icebp
add
xchg
subl
and
roll
or
mov
xor
insl
pop
clc
inc
into
fldt
adc
mov
jl
jle
fstpl
aas
aas
cmp
adc
add
push
push
rorb
movsb
pshufw
cmp
xor
cmc
insb
sbb
in
js
rcrb
imul
addl
loop
pop
jno
repnz
adc
pop
mov
mov
cmpl
mov
repz
jo
out
lcall
adc
fs
mov
and
sbb
jle
dec
hlt
cmpsb
cmp
leave
test
push
xchg
pusha
mov
stos
pop
push
sbb
test
dec
adc
mov
ret
pop
into
jo
sbb
jno
and
dec
stos
fsubp
jbe
xor
lds
fidivl
ret
push
mul
pop
roll
loopne
jae
and
dec
lcall
xchg
cmc
aas
daa
push
xchg
sti
jmp
rolb
dec
fisubrs
xchg
negl
faddl
dec
mov
or
out
pop
sbb
cmpsb
xor
jge
stc
popf
xchg
inc
outsb
xor
cmp
std
pop
adc
mov
adc
adc
push
cld
lret
mov
aas
loopne
jns
fnsave
mov
aaa
repnz
mov
ret
out
ja
leave
hlt
xchg
cld
pop
stc
mov
in
stc
xchg
mov
fucomi
popa
je
jns
sub
xchg
sahf
inc
dec
mov
test
sti
fsubrs
mov
sub
mov
pop
loopne
or
dec
mov
int
aas
mov
das
mov
sarl
out
jns
in
push
scas
arpl
out
push
lahf
out
push
sbb
sub
loop
aam
xchg
arpl
cmc
xor
add
jp
lret
adc
xchg
dec
es
xchg
iret
jg
jg
sub
data16
lea
adc
dec
test
push
dec
mov
std
sbb
mov
int
sub
call
push
cli
cmpsb
or
int3
pop
or
nop
stos
movsb
or
sbb
push
negw
xor
and
in
sbb
addb
aad
pop
lods
add
dec
inc
ret
and
cltd
imulb
push
ret
imul
sub
or
xor
and
push
xchg
xor
iret
sbb
mov
insl
cmp
dec
mov
inc
ficompl
rcl
in
fdivrl
incl
pop
out
mov
sbb
add
mov
xchg
pop
iret
jp
subl
sbb
int
pop
ja
inc
add
inc
ret
repnz
push
lahf
stos
push
es
scas
roll
mov
pop
cmp
jno
mov
mov
or
pop
xchg
pop
mov
imul
dec
cmpsb
ret
fiaddl
insb
inc
rcl
insl
inc
lcall
sbbl
out
aam
sbb
adc
sub
xor
jno
cmpsl
push
test
cmc
lcall
xchg
jg
sbb
scas
cld
dec
aas
and
dec
cmc
roll
and
mov
les
ret
popf
add
popf
or
jbe
xchg
std
dec
mov
push
xchg
mov
in
test
das
add
pop
dec
popa
ret
cmp
andl
pop
cmc
cmp
lret
fs
sbb
cld
adc
jnp
icebp
inc
cmp
cli
bound
icebp
jbe
or
adc
xchg
sar
mov
orb
jge
dec
mov
and
cs
mov
xchg
mov
das
aad
jmp
jns
cmp
aas
rorb
mov
fiadds
and
push
clc
push
hlt
cmp
and
push
or
pop
das
xchg
es
test
jecxz
cmp
push
shrl
shrb
lds
arpl
jmp
mov
cmp
negl
shl
ret
rcll
cmp
cmc
imul
jge
mov
dec
inc
addr16
xor
test
movb
imulb
bnd
lds
stos
mov
xchg
enter
test
mov
or
pop
mov
push
add
push
decl
cmpl
shl
push
push
sbb
xor
loope
cmpsl
and
ret
adc
cmp
dec
in
dec
adc
jecxz
loop
lcall
mov
leave
cmc
out
icebp
xchg
outsb
sbb
bound
pop
and
mov
mov
lahf
push
mov
fmuls
repz
and
jecxz
cmp
sbb
add
or
push
es
shr
lret
jp
jp
faddl
mov
rorb
adc
cmp
testb
gs
mov
inc
lods
in
and
addr16
mov
icebp
cmc
adc
arpl
jns
jo
es
out
fdiv
fidivl
xor
jbe
lret
lods
mov
mov
inc
lcall
hlt
xor
jno
hlt
mov
cs
cmp
sub
jp
hlt
mov
movsb
mov
push
xor
add
pop
cmp
inc
fwait
jbe
mov
sbb
and
mov
sti
xor
rclb
adc
ja
mov
xor
inc
test
sub
mov
or
stc
pop
pop
mov
dec
cmpsl
fisubs
inc
cmc
arpl
inc
cmp
pop
andb
dec
push
outsl
lods
scas
jbe
rep
repnz
sub
pop
sub
xchg
test
push
mov
xor
scas
sbb
mov
les
pop
into
icebp
add
cld
lea
loop
push
pop
mov
adc
mov
and
jle
cs
mov
mov
push
cmpb
aam
test
fwait
xchg
xchg
dec
fdivrs
dec
mov
test
aaa
aas
push
add
adc
mov
stos
sub
add
sbbb
xchg
inc
ror
mov
jne
hlt
std
mov
lods
mov
sbb
rorb
or
sbb
outsb
icebp
mov
jnp
dec
jae
imul
mov
ja
inc
je
cmp
js
mov
mov
stc
stc
lds
pop
mov
inc
adc
movsb
add
test
dec
sub
add
repz
sub
jo
mov
and
sbb
rcrb
cmp
nop
dec
ret
les
jae
inc
xor
jo
rol
jnp
cmpsb
leave
add
dec
movsl
les
sbb
sbb
mov
jbe
lock
stc
loope
in
pop
or
and
in
pop
sbb
xchg
or
sahf
dec
out
aam
addr16
push
stos
add
mov
hlt
adc
inc
xor
ds
enter
loopne
jne
ja
and
and
dec
sub
ds
push
xor
mov
js,pn
pop
sub
adc
xchg
arpl
mov
in
test
xor
jge
in
popa
cli
dec
cs
loope
mov
stos
jno
fisubl
iret
add
mov
out
aaa
fdivl
jo
adc
add
shrb
out
adc
mov
push
mov
test
xor
xor
mov
or
jge
and
fwait
in
test
outsl
lahf
popa
xchg
sbb
loopne
push
ret
inc
dec
dec
clc
js
adc
mov
dec
sti
dec
pushf
pop
inc
cmpsl
push
jge
add
inc
sub
aad
add
push
push
fidivl
int3
test
data16
insb
sub
xchg
popf
cmp
ficoms
jmp
and
pop
push
mov
and
leave
fcmovnb
push
scas
dec
or
sbb
pop
inc
pop
je
xor
pop
mov
cmp
clc
ljmp
jl
in
xchg
add
pusha
and
mov
popa
into
jp
icebp
repz
inc
pop
lret
inc
cltd
cmp
mov
or
jb
lret
sti
or
lock
xor
dec
xchg
lea
ret
xchg
in
addr16
mov
cmp
jmp
pop
clc
mov
jae
leave
mov
pop
xchg
and
iret
test
imul
in
mov
pop
inc
lods
mov
jg
mov
xor
aad
leave
mov
rcrl
xor
cmpl
pop
sub
rorb
dec
sub
pop
mov
mov
repnz
outsb
bound
pop
inc
xchg
cmp
jb
add
cli
out
cltd
jge
loope
stc
jl
loopne
push
jp
rolb
dec
xchg
xor
out
cmp
int3
fs
sti
and
xchg
nop
pusha
clc
and
and
and
xor
mov
or
push
mov
jae
add
int
repnz
addb
push
push
jecxz
pushl
jecxz
dec
xor
mov
sub
leave
movsb
sti
mov
mov
sub
sub
pop
int3
out
inc
xor
cmp
movsl
ja
xchg
rcl
dec
addr16
shll
sbb
fwait
repz
jno
add
cmp
test
aas
dec
test
pop
iret
cmp
push
mov
push
in
push
mov
cmp
leave
ljmp
sti
mov
pop
sub
and
cmp
movsb
push
out
inc
ret
movsb
xor
inc
sbb
add
and
fndisi(8087
lret
ror
fsubp
and
ja
mov
mov
int
adc
mov
sbb
mov
push
sub
loope
movsl
test
lea
aaa
or
mov
sub
sub
mov
imul
fadd
movsb
sbb
and
pop
pop
dec
cmpsl
push
jnp
push
dec
add
xchg
mov
push
mov
mov
sbb
inc
add
call
test
stos
cmc
pop
fsincos
inc
and
sbb
mov
dec
or
jle
xchg
xlat
push
ss
sbb
lods
jnp
or
std
xchg
add
adc
mov
xor
sbb
negb
mov
ret
mov
movsl
cwtl
das
dec
xlat
stc
aas
mov
ds
sbb
pop
movsl
es
sbb
lret
ss
cmpl
mov
xor
incb
in
pop
dec
sbb
test
pop
insb
popa
jg
in
dec
push
test
push
cli
iret
inc
lods
je
loopne
pop
ds
pop
jg
mov
sub
or
pop
pop
inc
test
fsubrl
pop
pop
mov
mov
jmp
call
pop
pop
movsl
clc
insl
inc
sbb
pop
dec
pop
mov
and
fs
cmp
xor
rcpps
ret
push
jnp
icebp
mov
adc
dec
in
jnp
xor
push
inc
lea
cwtl
xor
push
xchg
mov
dec
movsb
fnstenv
jb
fs
mov
js
or
push
fisttpll
sub
or
mov
xor
enter
xlat
jmp
fsubr
add
xchg
sub
or
pop
in
mov
xor
xchg
and
mov
or
push
fstl
or
pop
bound
push
outsb
mov
iret
pop
les
das
jo
fisttps
inc
movsl
lret
jnp
lret
add
ret
pop
iret
jne
dec
testb
push
inc
in
shl
inc
divb
cmp
mov
lock
lods
or
cmpsl
pop
das
lahf
inc
mov
cmc
mov
adc
outsb
movsb
ss
nop
cmp
inc
loope
loope
sub
cmp
add
out
insb
aas
imul
pop
pop
xor
cltd
fisubrl
mov
fucomi
pushf
lahf
adc
sub
or
xlat
or
and
adc
jmp
and
mov
add
call
scas
imul
mov
push
mov
push
mov
cwtl
dec
mov
cmpsb
mov
mov
or
cmp
mov
mov
out
sbb
mov
das
jg
jle
adc
cmpsb
int3
test
inc
test
notb
fwait
mov
in
sub
andl
or
jo
insl
push
or
cmp
stos
mov
jg
pop
movsb
xchg
sub
pop
sub
and
rorl
rep
push
scas
aam
mov
and
sbb
stc
add
push
imul
repz
mov
repz
rorl
gs
out
xor
lock
clc
xchg
out
xlat
jmp
xor
fisubs
ja
shr
iret
sbb
and
push
lock
xchg
inc
enter
lcall
add
mov
sahf
push
into
shl
call
fistpl
mov
cwtl
sarb
push
outsl
hlt
xchg
push
das
mov
cmc
std
test
dec
cmp
addr16
lahf
mov
adc
push
fldenv
push
pop
into
movmskps
mov
sbb
add
lret
aam
xlat
xchg
fadd
or
cmp
fdivs
inc
imul
adc
cmp
inc
mov
mov
sahf
jnp
inc
cmp
pusha
aad
pop
scas
ja
pop
leave
test
ss
add
pusha
add
or
cmp
mov
mov
cmpsb
or
ficompl
icebp
pop
push
xchg
rcrb
adc
inc
fcompl
imul
pop
mov
test
sub
outsl
ss
decb
cmpsl
outsl
or
dec
sub
or
shll
pop
clc
aad
pop
xlat
in
jge
cwtl
mov
bound
push
xor
and
mov
leave
jae
mov
lods
movsb
mov
jnp
arpl
lahf
xlat
add
cmpsl
jno
pop
ret
adc
or
fidivrl
cmc
test
pop
mov
sub
scas
dec
mov
hlt
je
sbb
sub
push
xchg
hlt
stc
or
adc
xor
lock
mov
lret
lea
and
mov
pushf
xchg
stos
data16
test
mov
adc
pop
add
cmpsb
inc
inc
cmp
mov
shll
xchg
pop
rclb
fsts
push
outsl
ret
ja
testl
sub
inc
adc
test
in
mov
pop
sub
cmovno
dec
lcall
ljmp
les
push
mov
lods
add
dec
fcmovu
and
stos
pop
lods
jo
or
es
dec
sahf
lahf
repnz
mov
ljmp
sahf
push
sbb
or
test
cltd
jo
clc
in
test
mov
cmpsl
pop
xor
adc
popa
adc
sti
xchg
and
es
into
xchg
mov
rcll
mov
ss
lcall
icebp
inc
xchg
outsb
xlat
shlb
xchg
lret
repnz
xchg
in
cmp
sub
popf
icebp
stos
aad
lods
adc
cmpsb
test
push
xacquire
and
inc
pop
rcl
insl
xchg
mov
mov
push
iret
adc
imul
pop
xchg
dec
fstp
mov
xor
push
test
fcmovnu
pushl
sbb
lock
xchg
push
jo
addr16
xchg
cmp
hlt
js
mull
or
xor
int
mov
inc
xor
cld
daa
sbb
psllq
pop
sub
xchg
out
sub
and
push
dec
cmpsl
sub
cmpsl
cli
fcos
xchg
les
mov
daa
ss
mov
add
push
leave
incl
xor
shll
or
in
addr16
insb
imul
mov
fstps
in
xchg
dec
dec
sub
sbb
mov
jns
rolb
movsb
push
inc
mov
mov
push
jl
daa
imul
in
icebp
mov
push
mov
iret
sbb
call
mov
test
fistpll
dec
lods
cmp
lahf
jae
or
adc
out
or
in
xchg
jmp
lock
movsb
icebp
out
pop
xlat
xchg
pop
mov
xor
xor
fstpl
loope
jmp
and
sbb
and
adc
sahf
pop
cltd
jecxz
push
or
aam
or
sbb
sub
mov
shll
mov
loopne
sbb
rcrb
mov
jle
shrl
fldenv
push
add
sub
dec
out
cli
into
mov
sti
pop
out
lods
sbb
scas
testb
or
jno
frstor
sbb
pop
cmp
sbb
sub
lea
push
mov
test
cmp
ljmp
pusha
mov
sbb
aad
ljmp
xchg
cmpl
mov
fsubs
sub
dec
pop
pop
pop
test
je
push
repz
mov
cmpsb
lods
adc
fbstp
addr16
adc
insb
and
push
mov
and
lret
lahf
pop
pushf
xor
leave
loop
not
pop
std
gs
test
mov
loope
int
sarl
xchg
mov
xchg
cmp
push
adc
add
popa
icebp
ss
movsb
loopne
andl
ds
sti
mov
js
mov
imulb
aad
scas
inc
inc
push
jle
jmp
out
cmp
xchg
add
inc
int
xchg
fdivs
aam
imul
stos
test
daa
js
fstp
and
mov
adc
and
cmp
clc
data16
pop
xchg
inc
call
mov
jns
cmp
and
pop
insl
cs
pop
mov
push
or
jb
jnp
fdivrl
scas
jge
popf
loope
arpl
adc
nop
sbb
pop
xchg
aad
or
rorl
mov
movsb
cli
cmp
in
lods
icebp
outsb
push
or
inc
cmc
popf
add
icebp
pop
add
adc
scas
fbstp
sub
mov
xlat
mov
rorl
cmp
sbb
stc
mov
aam
je
and
pop
xchg
cmp
xchg
jns
xchg
add
pop
mov
cmc
jo
mov
sahf
cmp
inc
jae
call
nop
test
sbb
push
dec
adc
or
jb
sub
adc
imul
cmp
jb
jl
mov
and
cwtl
mov
fs
test
jmp
movb
mov
mov
xchg
leave
and
loop
mov
sbb
xchg
iret
sub
xchg
mov
jae
cmp
push
cmp
adc
mov
sbb
xor
outsl
mov
push
aaa
fcoms
scas
pop
imul
or
fmull
push
push
fsubrl
push
dec
or
mov
xchg
cs
mov
fucomi
loope
jnp
xchg
ds
out
mov
int3
dec
xor
pop
fldt
pop
push
ja
in
call
scas
mov
and
insl
xchg
push
aas
mov
lret
out
and
icebp
cltd
out
mov
fwait
icebp
outsl
aad
bound
jp
jg
mov
fistps
cmp
je
sbb
insl
ljmp
jmp
hlt
adc
push
push
scas
fisubs
sbb
fwait
cmp
or
ret
setne
mov
movsl
jge
jl
cmpsb
add
pop
push
mov
jb
pop
gs
in
dec
push
jl
pop
out
test
push
pop
add
decb
rcr
pop
and
jo
cmc
lea
outsl
repnz
pop
stos
ds
adc
inc
sub
pop
insb
cli
decl
loopne
nop
lds
push
add
push
sbb
xchg
in
scas
or
push
cmp
sarb
sbb
xchg
sbb
xor
adc
ds
outsl
js
fistps
jle
les
mov
leave
mov
or
movsw
xchg
add
jbe
sub
adc
out
add
xchg
pop
ret
cwtl
aad
insl
clc
jg
das
pop
push
cli
add
lods
sbb
nop
sbb
nop
int
mov
dec
ja
dec
xchg
xor
inc
xchg
outsl
adc
push
adc
mov
cmp
cmpsl
fwait
cwtl
fs
inc
sub
aas
dec
mov
cld
add
dec
ljmp
lret
test
cmpsl
jns
inc
dec
xchg
fdivl
shlb
andb
push
jns
dec
xor
xchg
loop
inc
or
fnstenv
ds
inc
mov
popf
aaa
enter
pop
inc
push
cld
test
sarl
xchg
out
aad
es
test
xchg
xor
mov
push
and
adc
xor
inc
lock
jecxz
data16
cltd
mov
or
mov
jecxz
xor
loopne
out
inc
jne
lret
mov
adc
and
fisubl
adc
pop
adc
test
push
das
int
test
mov
inc
andl
cmp
and
movsl
inc
insl
add
ds
sub
sarb
pop
push
xchg
mov
xor
arpl
or
xor
enter
inc
gs
mov
jecxz
jae,pt
sub
inc
popa
inc
call
lea
scas
inc
xlat
movsb
lret
lods
and
int3
scas
jae
jl
pop
orb
test
jmp
fadds
xchg
jnp
push
xchg
adc
je
push
daa
dec
inc
adc
dec
idivb
enter
dec
push
add
mov
out
daa
sbb
enter
pop
stos
mov
and
jge
adc
dec
gs
lret
cmp
push
cmp
insb
push
imul
push
repz
mov
lret
push
scas
je
pop
push
sub
ret
xchg
sbb
outsl
xchg
ud2
orb
jae
cmp
ds
push
pop
xor
jge
data16
fisttpl
pop
aad
pusha
xlat
mov
scas
mov
push
lret
push
mov
jne
push
xchg
lcall
cmc
test
cmc
mov
cs
mov
insl
aaa
and
icebp
mov
loop
and
mov
aad
mov
push
aam
ljmp
movsl
lea
test
lea
ret
dec
add
leave
scas
xor
pushf
mov
pop
xchg
les
dec
cltd
insl
push
jb
jae
dec
mov
cmp
mov
push
xor
jg,pt
addb
or
jbe
push
jmp
add
jle
or
jne
push
adcb
xor
or
out
xchg
hlt
dec
ljmp
sbb
cmpsl
jbe
test
cwtl
movsl
out
xchg
fnstenv
mov
sub
cmp
daa
ficoml
cmc
lds
insl
sub
push
jl
mov
push
pop
je,pn
mov
lcall
pop
lcall
mov
loop
cli
xchg
dec
fdivl
daa
movl
jle
adc
cmp
jl
mov
data16
fwait
mov
xchg
or
and
xadd
dec
push
or
dec
mov
movsb
je
arpl
repnz
loop
imul
jp
je
enter
cmpsl
sti
sbb
inc
in
ficoms
xchg
jae
xchg
mov
insl
ret
cs
cmc
call
push
mov
or
push
shl
and
adc
inc
and
sti
adcb
test
cmp
push
cs
hlt
fcmovb
insb
mov
xchg
cmc
mov
mov
xchg
and
daa
out
in
jg
jge
in
dec
stos
jo
shr
mov
inc
adc
or
mulb
dec
movsl
jge
sub
rcrb
push
loop
leave
pusha
adc
pop
mov
or
or
sbb
imul
xchg
cmp
add
fldcw
pop
jge
sbb
insl
mov
mov
pop
xchg
decl
inc
jl
xorl
pop
jge
mov
cmp
loope
lods
clc
jp
inc
shl
mov
push
aad
insb
or
jno
mov
fcomp
test
dec
and
into
mov
jb
dec
iret
fcmovnu
stc
into
aad
xor
xlat
dec
clc
fbstp
loop
movsb
pop
shll
mov
fcmovu
push
dec
xor
sahf
xor
mulb
cmp
mov
movsl
mov
stos
in
adcl
stos
sub
inc
xchg
cld
mov
sti
in
arpl
mov
cmc
xor
pushf
loope
ljmp
cmpsl
outsl
adc
jl
jge
jg
xor
mov
mov
xor
cmp
mov
mov
arpl
sbb
mov
mov
sbb
or
mov
cmp
js
imul
sbb
push
mov
shll
pop
or
mov
out
pop
shll
and
andl
jns
jb
xchg
xor
fsubrs
lods
xchg
cld
mov
ljmp
std
ret
pop
dec
lret
cmp
adc
cmp
nop
lea
sub
pushf
xchg
loope
hlt
xchg
popf
jl
mov
lret
push
cmp
out
ljmp
push
scas
jmp
adc
inc
or
stc
lods
stc
xlat
sbb
outsb
push
mov
jbe
sub
jecxz
fwait
int
ljmp
lret
cmp
jae
out
jnp
sub
movsl
sub
dec
ja
mov
pop
and
xchg
jl
push
fimull
add
andl
adc
repnz
scas
movsl
jae
or
shrl
call
sub
cmp
fidivs
add
in
mov
mov
adc
mov
mov
enter
icebp
js
inc
inc
enter
push
jl
dec
cmpb
add
add
sbb
xchg
xchg
mov
pushf
pop
repz
xor
int
outsb
xor
leave
std
aas
arpl
dec
xchg
test
add
xchg
dec
insl
lret
gs
into
dec
mov
xchg
cmpl
lds
inc
adc
mov
jmp
sti
fsubrs
ja
mov
or
and
jno
mov
jg
sub
pop
mov
jp
sub
adc
xor
mov
mov
inc
ficoml
xor
lahf
adcl
fidivrs
and
cmpl
stos
sbb
mov
cmp
xchg
adc
test
xor
lret
mov
push
out
or
add
sbb
dec
repz
push
lahf
lahf
sbb
stc
or
dec
sbb
pop
mov
out
dec
fwait
and
add
lds
push
inc
mov
push
ljmp
xor
jmp
popa
mov
addr16
adc
lret
into
push
mov
xchg
orl
sub
cmp
pop
pop
dec
aam
scas
insl
rorl
xchg
sbb
in
flds
cwtl
out
in
pop
pop
das
repz
push
sbb
leave
pushl
ret
jae
cmovnp
mov
add
inc
testl
cs
mov
dec
enter
popa
xor
pop
inc
sub
sub
test
push
dec
jl
push
das
add
pop
push
cmp
pushf
jno
in
fidivs
sbb
mov
mov
push
xor
dec
pusha
test
mov
lret
out
sub
adc
pop
hlt
mov
pop
cs
xorb
lret
adc
jge
or
pushf
pop
mov
outsl
lods
and
jg
movsl
adc
imul
aam
pop
add
in
nop
movsb
lods
int3
push
in
enter
pop
in
dec
mov
sbb
mov
push
repnz
inc
xchg
push
sub
push
aas
xor
cwtl
mov
mov
das
mov
add
mov
inc
pop
sub
mov
jmp
xor
sbb
icebp
pop
dec
push
and
jg
push
fwait
in
jns
es
pop
inc
test
rcl
std
lea
loope
inc
add
outsb
jno
sub
xchg
xchg
cmp
cli
mov
leave
xchg
popa
ret
inc
xor
inc
jecxz
fimull
in
outsb
adc
jle
lea
frstor
cld
out
add
xor
push
pushf
and
and
jo
push
daa
pushf
lods
test
xchg
gs
mov
mov
dec
push
pop
xchg
xchg
pop
scas
xchg
cs
imul
out
sub
test
dec
outsb
lcall
inc
fistpll
lret
clc
mov
lods
dec
idivb
mov
inc
add
and
cmp
cs
stos
mov
jne
mov
xlat
pusha
sbb
inc
ret
mov
rcl
jns
in
shlb
jg
mov
cs
cmp
test
mov
cld
aas
xchg
sub
mov
call
xchg
pop
test
frstor
dec
jge
popl
call
add
clc
inc
xchg
clts
cltd
lret
sub
ret
lret
sarl
xchg
push
or
jns
adc
jno,pt
cmp
outsl
mov
jmp
pusha
or
pop
and
xchg
ret
dec
hlt
add
pop
mov
push
out
fmull
popf
pusha
mov
sub
loopne
adc
jle
push
push
rorb
outsb
movsl
jo
xor
orb
into
dec
outsb
xor
je
pushf
scas
repz
jp,pt
imul
clc
and
cltd
repz
cmpsb
mov
notl
mov
es
adc
repz
popf
repnz
std
dec
or
push
sbb
cmp
fsubr
push
enter
sbbl
jno
mov
mov
lahf
scas
in
push
in
ret
enter
subl
adc
aam
and
out
out
mov
adc
shlb
clc
shlb
pop
fdivr
inc
dec
jno
pop
cmp
lret
jle
pushf
and
mov
pop
jb,pt
scas
jbe
leave
imul
inc
sub
dec
sub
popf
xor
lahf
add
adc
lods
and
mov
mov
cld
mov
adc
adc
out
call
add
push
inc
push
xchg
dec
mov
jmp
dec
fistps
jne
inc
insb
mov
and
mov
iret
jle
mov
les
addr16
jmp
pop
mov
pop
fsub
fists
sub
test
bound
repz
dec
push
aaa
pop
xchg
mov
int
and
out
ds
in
in
pop
mov
add
push
jbe
jmp
push
adc
je
push
fwait
and
cmpsl
xor
aas
fwait
or
jnp
mov
lea
insl
sub
lods
cmp
cmp
and
js
pop
cli
repnz
xchg
add
xor
cmp
icebp
in
push
out
stc
dec
fwait
inc
or
and
dec
or
enter
xor
loopne
mov
adc
mov
js
fs
sti
or
mov
outsb
je
loope
std
xchg
sub
insl
repnz
lret
lds
add
jmp
push
and
pop
cmpsb
mov
insl
push
out
and
xchg
rorl
sub
leave
push
adc
sti
inc
mov
push
cmp
stos
xchg
xchg
repz
jno
jnp
in
jmp
fisubrs
bnd
sarb
repz
dec
push
popa
or
clc
arpl
sub
push
mov
xchg
hlt
bound
jp
push
xchg
sbb
ret
pushf
jp
mov
mov
gs
and
push
jge
push
call
addr16
fdivrl
ja
mov
mov
stos
xchg
inc
bound
inc
pop
pusha
push
sbb
icebp
into
adc
std
push
mov
sub
inc
jno
arpl
and
xor
fisubl
in
lds
fwait
push
daa
push
dec
incb
jmp
fldcw
xor
sbb
jns
and
cld
cs
jo
or
jge
imul
inc
mov
dec
scas
arpl
and
dec
mov
xchg
dec
mov
jne
or
test
jo
inc
xchg
test
in
js
nop
dec
ds
daa
xor
fsubs
icebp
lcall
lock
mov
pop
mov
mov
pop
pop
inc
dec
inc
mov
jmp
int
pop
test
test
sbbl
pop
xchg
mov
lock
aad
rorb
push
mov
push
inc
sub
ds
or
mov
mov
sub
scas
mov
mov
repz
lds
test
xchg
jecxz
sti
roll
xor
cld
les
rcr
and
jno
xchg
cmpsb
daa
roll
mov
xchg
aad
or
pop
and
push
pop
cmp
push
mov
xchg
xor
mov
int
pop
sbb
push
sbb
jns
mov
sbb
pop
rorb
and
lods
jle
nop
cmp
fisttps
imul
inc
add
out
mov
push
fscale
mov
scas
loop
aaa
jge
mov
jno
test
pop
pop
aaa
movsl
xchg
lret
or
jmp
lods
and
dec
or
loopne
push
push
ss
gs
pop
jo
or
bound
xor
sbb
shll
xor
push
lret
insb
pop
and
hlt
adc
loopne
das
fsubrs
out
jno
outsb
xor
jns
fbstp
clc
push
mov
fdivl
xor
sub
and
jmp
pop
daa
mov
mov
pop
pop
enter
mov
mov
imulb
sbb
push
inc
mov
jae
pop
push
pop
jo
xchg
repz
aad
or
icebp
adcb
mov
dec
sti
mov
rol
jno
dec
sub
ss
mov
neg
mov
repnz
div
mov
dec
incb
jge
ds
or
cltd
pushf
inc
jmp
pop
sub
mov
ja
push
jmp
outsb
aas
and
mov
mov
lcall
or
xor
mov
es
repz
cmc
pop
inc
add
out
loopne
pop
inc
cmp
mov
pop
mov
or
xlat
sub
shl
cmp
sub
sbb
xchg
cmp
mov
pop
neg
inc
jmp
aad
xchg
ret
adc
mov
nop
xlat
clc
mov
dec
fsubrs
inc
fiadds
aas
and
das
mov
xor
movl
sub
xor
shrb
mov
fst
dec
in
add
add
cmpl
push
mov
popw
cmc
cld
rcrl
xchg
outsb
add
lcall
fcoml
add
movsl
loop
into
fucomi
adc
xchg
cmp
mov
or
pop
mov
dec
shr
sub
xor
call
push
inc
xchg
shrb
inc
pop
cli
sar
push
shll
adc
fnstenv
and
popf
test
add
inc
lcall
popa
xchg
lods
pop
dec
adc
lahf
inc
shr
xchg
cmp
mov
and
test
sbb
fnstcw
in
inc
rclb
add
jg
inc
test
xchg
mov
out
call
pop
xor
outsl
arpl
inc
clc
les
rcll
and
and
fistps
inc
cmpsb
cmpsb
jecxz
fwait
mov
jne
sbb
xchg
shll
mov
dec
pop
incb
bound
adc
mov
repz
out
cmpsb
int
loopne
and
dec
mov
mov
iret
mov
lahf
fwait
mov
mov
leave
mov
push
jnp
jb
sub
sbb
jg
fcmovnbe
mov
loopne
clc
stos
pop
add
sahf
add
pop
filds
ficomps
cmc
jno
xchg
movsb
jmp
enter
movsl
and
add
inc
mov
cmp
xor
dec
into
or
add
dec
and
mov
adc
sbb
leave
cmp
fwait
insb
mov
dec
mov
ljmp
bound
in
cmp
bound
imul
lcall
dec
or
dec
arpl
in
bound
pop
pop
sbb
test
rcrb
and
add
cmp
jg
xchg
fs
sahf
fimuls
mov
cmp
scas
cmp
mov
and
cmpsl
push
lret
mov
inc
push
stos
fcomi
data16
js
inc
cs
jmp
das
repnz
rorb
xabort
mov
push
dec
add
je
xchg
mov
mov
inc
xor
cmp
or
pop
stos
xor
int
imulb
imul
fwait
pop
gs
add
insl
addr16
notw
mov
or
les
mov
ret
mov
cld
shll
stos
ljmp
or
cltd
stc
int3
mov
jp
adc
loope
push
addl
nop
dec
ds
mov
test
dec
pusha
ja
add
push
ja
test
mov
mov
cmpsb
fcomi
ds
lahf
and
cmc
or
pop
mov
or
ficomps
loopne
ficompl
fs
data16
jbe
ss
cmp
or
lock
xchg
lcall
inc
mov
mov
lret
mov
sbb
or
add
xchg
mov
jmp
and
shrb
nop
ja
and
lret
mov
push
mov
je
sbb
push
and
lea
incl
sarl
jnp
mov
pushf
fld
sbb
add
call
add
xchg
sbb
xchg
repz
out
lods
sub
cmc
sub
dec
inc
cli
std
pop
xchg
outsb
or
cwtl
mov
sub
cmc
cltd
sbb
into
mov
adc
or
pop
cmp
insb
sbb
in
add
cmp
pop
cmpsl
imul
clc
jmp
lret
out
mov
pop
inc
fldt
sti
aam
aam
and
icebp
xchg
in
pop
imul
movsl
jmp
add
js
loopne
pop
inc
and
or
ds
clc
and
jo
fmuls
sub
popa
dec
idivl
ja
mov
and
gs
outsb
sub
cmc
mov
adc
insl
icebp
shl
pop
inc
mov
adc
clc
fsubs
mov
mov
js
in
cmp
addr16
xchg
xor
xchg
mov
jnp
loop
pop
test
lahf
or
jmp
dec
dec
adc
adcb
rorl
mov
and
inc
hlt
movsb
cmc
or
fldl
in
xchg
mov
test
mov
hlt
push
pop
adc
jo
cmc
leave
fdivrp
jge
mov
xchg
jb
int3
sbb
mov
xor
ret
stos
iret
dec
xor
xchg
and
jge
cmp
dec
cwtl
hlt
fists
stos
pop
popf
les
mov
test
cmc
sub
cmp
aam
cmp
mov
cld
pop
dec
inc
mov
pop
adc
mov
pop
shll
inc
clc
filds
out
out
dec
xor
cmpsl
dec
outsl
xchg
loopne
sbb
out
jl
xchg
into
mov
into
sub
mov
or
ja
int3
lcall
cld
in
lea
push
push
xchg
imul
test
aam
in
bound
out
xchg
jge
and
jmp
sbb
mov
mov
mov
pop
pop
cmpsl
neg
dec
or
lock
popf
mov
lods
cmpsb
and
ja
int3
movsb
sbb
dec
or
es
push
les
dec
xor
mov
sub
pushf
jg
sub
in
pusha
ret
cli
jnp
pop
out
cmp
vandps
mov
mov
push
iret
data16
xchg
adc
xor
xchg
and
cmc
es
and
mov
movsl
mov
push
xchg
cmc
cmp
rcll
pop
inc
mov
rcrb
sbbb
inc
bound
subl
jp
sbb
test
mov
lret
cmpsl
or
inc
xlat
push
lods
mov
dec
and
stos
lahf
testl
cmp
sub
push
call
mov
dec
lea
xchg
daa
cmp
fmull
mov
stos
pop
mov
jb
sub
pop
add
inc
out
xchg
aam
add
dec
icebp
mov
addr16
jge
arpl
xor
and
mov
adc
ljmp
int3
push
lds
cmpsl
repnz
mov
xor
les
adc
cli
xor
lock
push
xor
cli
cmp
dec
dec
mov
test
outsb
out
push
inc
jae
cmp
rcll
push
stos
push
in
cmp
pop
addr16
testl
out
mov
loopne
scas
insl
mov
test
mov
ljmp
ja
jp
pop
ss
arpl
test
sub
inc
je
dec
popa
testb
lret
nop
shrl
ss
adc
je
mov
pushf
loopne
in
movsb
cli
daa
scas
sub
mov
addl
sub
in
mov
icebp
leave
popf
ficoms
std
in
movnti
scas
and
out
xor
sub
mov
dec
popf
xor
dec
dec
jo
xchg
in
nop
cmpsb
add
lret
adc
and
xchg
xchg
ret
js
dec
push
lock
sar
and
cmc
orl
dec
jmp
gs
jb
xchg
or
shll
ljmp
aaa
pop
add
cmp
mov
jbe
ja
cmp
pop
adcl
jbe
je
not
in
lock
inc
push
push
fsts
inc
and
sbb
call
sbb
lods
cmc
sbb
mov
mov
dec
add
fisttpl
test
rcll
jo
push
lea
cmp
push
xchg
adc
mov
push
xor
aas
popf
pop
add
insl
jo
es
imul
lcall
and
push
test
push
shrb
in
pusha
lea
ja
pusha
lret
dec
jl
mov
sarl
or
lret
out
adc
cmp
rorl
das
add
push
jp
mov
mov
into
jle
int3
sbb
js
push
push
mov
inc
sbb
sub
and
xchg
stos
fimuls
jmp
fiaddl
mov
cmp
iret
js
xchg
push
stos
add
sub
inc
pushf
add
loopne
xor
out
pop
mov
fsubs
popa
sub
out
sub
ret
mov
jno
mov
pop
jne
mov
inc
jae
jb
sbb
inc
fwait
test
add
es
cld
shrb
mov
stos
les
test
mov
stos
sub
mov
jns
add
fldt
stos
cltd
push
jnp
mov
add
and
mov
xchg
xchg
fstpl
sbb
mov
cmp
dec
and
sbb
ds
lret
jge
and
cmc
fmull
sbb
cmp
mov
inc
enter
xorb
jae
mov
sti
les
fs
dec
in
mov
mov
je
mov
push
inc
xor
lret
and
jle
fldenv
sbb
negl
add
rcr
movsl
gs
rorb
fdivrs
das
aam
icebp
and
xchg
push
popf
ret
fsubp
shr
popf
sub
jb
push
jnp
test
sbb
sub
push
xchg
adcl
xlat
adc
push
bound
pop
xor
xchg
xlat
dec
cwtl
out
imul
push
clc
je
xchg
push
clc
ljmp
inc
fcoms
test
mov
aam
push
cs
xor
shrb
xchg
mov
push
leave
adc
sbb
xor
cli
add
stos
jae
mov
sahf
and
sbb
sub
test
mov
call
adc
fisubl
push
lods
iret
and
push
push
cmp
out
sarb
mov
fadd
push
fidivs
outsb
add
nop
add
in
bound
cwtl
mov
cmc
dec
dec
dec
mov
inc
xchg
ffreep
test
jmp
out
out
movsl
rclb
adc
push
frstor
orl
push
jbe
rol
roll
rcll
adc
inc
cli
hlt
sbb
stos
aaa
mov
jle
mov
dec
pop
mov
xchg
shll
lds
iret
insl
xchg
xchg
pop
scas
pushf
shrb
mov
icebp
and
outsl
aaa
das
xchg
xchg
fstpl
mov
popa
jg
add
fdivrs
jo
xchg
int
mov
jecxz
mov
inc
fwait
mov
push
shlb
mov
mov
xor
push
test
push
xor
mov
sub
push
inc
inc
orb
pop
cmpsl
adc
and
adcb
mov
or
sbb
pop
nop
jl
mov
xchg
test
xor
jmp
adc
inc
xchg
loop
add
xchg
or
jle
imul
adc
pop
sub
or
lcall
clc
cmpsl
cwtl
stc
xlat
vaddsd
jle
ffree
dec
dec
xor
add
fsub
mov
lret
rcrb
mov
pop
popa
and
mov
push
imul
cmp
clc
xor
in
icebp
ss
hlt
pop
jbe
out
cltd
out
dec
pop
mov
lret
enter
xor
push
mov
dec
jns
push
shrl
lea
fisttps
clc
or
mov
mov
xor
lods
icebp
adc
ret
fprem1
add
pop
push
out
jbe
adc
and
pop
mov
fs
popf
addr16
lahf
mov
mov
adc
jmp
in
addr16
sbb
sarl
mov
jmp
dec
add
adc
enter
nop
push
icebp
sti
xor
or
pop
push
xlat
jns
add
das
rclb
add
xchg
pop
cmpsl
pop
fnstsw
or
cmp
or
cmp
pop
outsb
fidivl
add
sbbb
sbb
mov
xlat
cmp
das
sub
inc
mov
jne
into
mov
lods
fwait
mov
cmp
test
add
xor
pop
mov
cmc
add
cmc
out
hlt
mov
cmp
adc
stos
push
cltd
cmp
sti
sti
lods
dec
dec
cmc
pop
jo
movsl
dec
jno
test
cmp
push
jl
ficoms
arpl
xor
push
add
xchg
push
add
xor
push
outsb
hlt
jecxz
test
test
inc
jnp
es
lods
iret
testb
lcall
xchg
sbb
push
mov
les
inc
push
or
andl
leave
sub
add
xor
in
scas
jle
xor
notb
call
cmp
jecxz
lea
leave
mov
mov
dec
inc
aam
dec
dec
sbb
fistpl
popf
pop
vpsrld
jnp
sub
stc
mov
xor
dec
cwtl
lock
xor
adc
add
xor
ja
cmp
scas
xchg
mov
orb
cwtl
jecxz
jmp
pop
mov
in
mov
push
inc
push
data16
xlat
lret
xchg
icebp
mov
dec
dec
push
les
and
lods
pop
xor
scas
or
pop
jb
in
sub
test
rcr
xchg
jno
into
or
or
pop
push
xchg
jecxz
sub
xchg
shrl
lods
lcall
iret
sub
adc
sbb
xchg
repnz
pop
and
lea
repnz
jbe
pop
cmp
loope
ljmp
sbb
rep
cs
sbb
inc
in
xchg
dec
loopne
or
ja
adc
clc
in
addr16
shrb
sbb
fs
add
divl
mov
adc
inc
inc
cmpsb
mov
mov
jle
mov
dec
hlt
popf
or
ret
loopne
sahf
in
icebp
inc
lods
cmp
popf
ds
les
sbb
xlat
jge
sub
out
les
fbld
aam
leave
pop
outsl
mov
lret
inc
and
xchg
push
sub
cmpl
or
hlt
xor
xor
popf
repnz
xchg
es
mov
or
and
orb
push
pop
and
roll
popa
fisttpll
aad
sub
clc
cli
or
cmp
lds
leave
dec
sub
popa
fs
loop
xor
sub
jle
push
and
cmc
sbb
fidivl
xchg
sbb
imul
cwtl
ljmp
sub
fdivl
push
ds
daa
int3
lods
mov
lods
cmp
mov
inc
xlat
loop
xor
mov
push
xchg
dec
sub
nop
mov
mov
or
negl
js
dec
in
xchg
addb
mov
je
mov
adc
inc
cmc
push
mov
ficompl
xchg
js
mov
mov
ret
enter
cmpsb
adc
sbb
add
mov
sub
gs
jmp
dec
jl
shrl
push
xchg
call
jns
pop
or
push
out
mov
into
and
fwait
mov
mov
push
or
mov
adc
int
pusha
fwait
push
sub
andl
adc
scas
inc
adc
jns
rorl
or
fidivrs
xor
xchg
pop
and
add
lcall
repz
daa
mov
dec
addr16
jmp
cmc
pop
sub
push
addl
cmp
divl
or
es
cld
jle
and
jne
jno
jmp
push
incl
jnp
fwait
mov
insb
mov
out
and
aam
out
adc
stos
into
in
sub
add
push
les
or
or
mov
mov
mov
lcall
cmp
nop
in
in
mov
sbb
cmc
mov
cmp
xchg
test
dec
in
cmp
sbb
pushl
in
nop
push
enter
xlat
push
addr16
dec
lock
mov
icebp
xchg
adc
xchg
dec
mov
repz
inc
mov
mov
nop
jp
mov
push
dec
shrl
cmp
loope
movsl
or
arpl
adc
into
outsb
icebp
push
dec
mov
lea
fadd
incb
int3
add
mov
cli
mov
push
jno
loop
jnp
cmp
enter
faddl
faddl
cmp
xor
push
fcmovu
frstor
xor
test
inc
cmp
loop
loope
test
ret
xor
nop
mov
data16
mov
dec
cmpsl
mov
xchg
aaa
jb
xchg
push
insl
lahf
add
ljmp
insb
add
xchg
in
fcmovnbe
adc
test
pop
sti
jno
icebp
push
mov
jge
ret
js
sbb
js
addr16
lret
loope,pt
xlat
es
jle
jl
imull
pop
jns
das
test
pop
or
xor
lods
pushl
sbb
cmp
jne
movsb
push
fs
icebp
cmp
cmp
rcrb
das
pop
push
stc
iret
inc
popa
xchg
addb
push
les
js
gs
adc
or
std
and
out
lret
jmp
push
xorl
inc
stc
dec
mov
cmp
pop
call
or
in
xorl
xchg
push
lock
adc
and
enter
sub
cmp
xchg
push
das
xchg
inc
push
and
aad
aas
xchg
sbb
int3
dec
ret
adc
xor
push
sub
pop
fistl
in
cwtl
outsb
mov
cld
sbb
orb
fnsave
jbe
lahf
stos
push
aaa
call
and
inc
scas
out
mov
xor
sub
mov
push
ljmp
jbe
push
lret
dec
fcomps
dec
adc
pusha
add
adc
rorl
jo
orl
popa
mov
inc
pop
push
mov
jg
sbb
repz
fwait
iret
popa
fldenv
aam
clc
leave
aaa
mov
out
aas
lret
cld
xor
jp
dec
mov
or
pop
pushf
rcl
std
rorl
aas
loop
cmp
js
test
xor
mov
pop
cwtl
push
sub
inc
mov
inc
decb
dec
cli
repz
pop
roll
ja
lcall
cmp
lret
arpl
stos
stc
push
outsl
std
out
dec
call
lock
jl
xchg
push
xchg
pop
mov
fisubl
cmp
mov
out
stos
jns
test
fists
adc
loop
ss
out
jne
push
xchg
outsl
daa
lock
jmp
and
repz
test
xchg
insb
lods
push
jecxz
sahf
push
lret
sti
pusha
mov
dec
ret
test
mov
xchg
fidivl
inc
jge
stc
fdivrs
adc
xor
xor
fbstp
dec
lods
outsl
iret
xlat
addr16
inc
mov
fdivs
aas
aad
xchg
mov
jo
or
std
addr16
mov
mov
ret
shl
dec
mov
and
inc
movsb
inc
mov
loope
fs
lock
jo
fistps
loope
subl
outsl
orb
lods
adc
xchg
mov
cmp
outsl
sbb
push
sub
rcl
push
xor
or
mov
mov
fadd
leave
out
inc
popa
out
sbb
sbb
sub
fbstp
imul
or
into
and
push
stc
scas
aaa
test
rcrl
test
push
ficoml
mov
add
pop
fisttpl
jge
or
outsl
adc
fcompl
mov
aad
fmul
add
mov
sub
jbe
and
sbb
aad
dec
jne,pn
lods
sbb
sbb
int3
hlt
mov
xor
mov
xchg
sbb
xchg
mov
ret
sti
out
sbb
push
mov
push
pop
scas
pop
jecxz
xchg
adc
jno
or
clc
jecxz
lahf
xchg
mov
je
push
imul
pop
roll
mov
imul
and
loop
mov
js
dec
jp
jg
push
inc
jg
mov
cmp
and
jns
cmpsl
fldenv
and
stos
mov
push
and
and
test
loope
das
das
inc
js
ja
mov
popa
clc
lahf
and
sbb
js
imul
and
mov
enter
pop
repnz
mov
and
lahf
js
je
xor
ja
add
loopne
lds
sbb
ja
cmp
lcall
lcall
adc
jecxz
dec
xlat
test
jp
call
scas
leave
push
fs
sub
test
out
movsl
jno
xor
xor
adc
pop
mov
jbe
and
orb
inc
pop
mov
lock
je
scas
lcall
bound
sbbl
xor
jp
movl
mov
xor
addl
ss
test
sbb
xor
outsb
jo
aam
test
mov
push
call
jle
shlb
add
sbb
xor
ret
ja
aam
pop
aam
dec
inc
and
dec
xor
sub
jge
push
pop
daa
dec
in
xchg
mov
fmulp
xchg
mov
fimuls
adc
push
adc
mov
mov
jb
test
jmp
sti
in
and
mov
sub
cmp
fwait
out
push
lds
push
test
xor
mov
lods
mov
sbb
call
lea
inc
mov
cmpsb
mov
cmpb
dec
pop
rcrb
dec
xchg
add
and
sbbl
cmp
sub
stos
jl
arpl
enter
int3
dec
icebp
jns
sub
adc
pusha
cmpsl
imul
jns
inc
orb
push
std
mov
cmp
mov
fs
mov
into
jg
cli
mov
mov
cmc
test
lods
pop
fnstcw
inc
pmulhw
pop
xchg
or
lahf
jle
jg
xchg
adc
inc
pop
push
push
lea
popf
rol
ss
xchg
fidivl
call
fdiv
xchg
lods
mov
lcall
pop
inc
enter
inc
mov
push
js
call
ljmp
repz
outsl
enter
jmp
test
and
push
fmuls
mov
ficompl
gs
ret
cmpsb
mov
jl
cmpsl
inc
jl
scas
xor
lea
lods
leave
inc
pop
leave
adc
push
adc
outsl
pop
cltd
inc
repnz
aaa
test
test
jb
aam
fcoms
dec
in
jmp
push
jge
movsl
and
inc
cli
dec
cltd
imul
pop
push
imul
ljmp
inc
or
xlat
and
fstp
in
xor
push
sahf
mov
mov
fidivl
shl
lahf
adc
sbb
leave
dec
ja
push
pop
add
repz
inc
adc
mov
data16
fwait
or
jns
adcb
lods
adc
aaa
cld
js
jo
dec
int3
xchg
mov
pop
xchg
push
push
clc
call
cld
dec
mov
dec
pop
or
bound
ret
push
mov
cwtl
outsb
call
mov
cmp
jge
out
jg
fiadds
loopne
into
xchg
sub
cmp
shlb
aam
mov
mov
dec
xchg
neg
jbe
xorl
lret
daa
arpl
xchg
cmp
insb
xor
mov
lods
xor
mov
iret
and
sub
shll
mov
mov
sub
push
push
xor
into
mov
dec
fldl
adc
push
mov
out
pop
and
or
push
icebp
and
mov
stos
jg
xchg
ss
movsl
pop
test
dec
and
ljmp
aad
sbb
outsl
add
inc
ja
fistpll
xor
xor
mov
mov
imul
pop
scas
push
mov
push
xorb
enter
je
pop
andl
stos
xor
xchg
cld
aam
push
movsb
shll
pop
adc
pop
or
int
ret
repnz
ret
scas
and
mov
cmp
into
xadd
push
std
fwait
mov
mov
aaa
add
sub
fcoml
jnp
bound
xchg
push
out
jbe
jge
jmp
pop
mov
ljmp
or
push
fsubs
cld
and
fcompl
ret
stos
pop
nop
nop
sub
sub
sub
out
jge
and
xchg
adc
mov
dec
aam
push
xchg
xchg
hlt
push
icebp
subb
aas
cmc
mov
add
add
cmpsb
jno
mov
mov
ja
nop
sub
mov
jb
cmc
mov
add
stc
and
imul
jmp
cltd
xor
sbb
das
imul
sbb
outsb
js
bound
ljmp
xor
mov
fs
sbb
jne
or
sti
jns
rolb
mov
movsb
jo
cwtl
mov
stc
and
and
xor
stc
rcl
mov
loopne
push
addr16
and
or
inc
in
js
daa
xor
lea
jns
dec
inc
inc
ret
les
xlat
pop
sub
dec
les
xor
and
push
lret
dec
pop
cli
dec
in
daa
outsb
push
cmpsb
cmp
mov
fildl
dec
jno
xchg
stc
dec
fwait
mov
movsb
mov
faddl
lods
xchg
out
mov
fmull
cli
scas
or
adc
xchg
in
jb
clc
icebp
push
cmc
shrb
xlat
stos
std
adc
lods
jle
xchg
pusha
outsb
lea
rcrl
push
and
jno
out
xchg
or
mov
aam
std
push
jbe
add
jno
mov
lods
push
jecxz
pop
popa
shl
mov
out
push
scas
loope
pop
push
sub
inc
movsl
inc
test
sbb
jns
jmp
shlb
loop
push
inc
jecxz
push
mov
cli
lods
xorl
push
cmp
pop
push
ja
xchg
adc
xchg
dec
testb
rolb
pop
popf
mov
xchg
std
hlt
insb
popf
inc
and
mov
pop
and
es
mov
shr
fsts
xor
cmc
push
ret
idivl
in
iret
int
dec
mov
adc
div
dec
push
sarb
mov
bound
mov
or
dec
aas
lods
push
sbb
pop
je
pop
pop
pop
stos
addr16
aam
pop
pop
inc
insl
inc
add
sbb
pop
pusha
movsb
pop
xchg
push
mull
push
les
mov
out
and
push
inc
xchg
jb
pop
mov
pop
sbb
xchg
adc
shlb
stos
out
repz
xchg
jmp
pop
mov
arpl
in
into
dec
cli
push
push
push
das
std
jmp
popa
xchg
shl
rcll
into
mov
lret
sub
fcmovnu
mov
mov
inc
adc
pop
xchg
pop
sarl
push
pop
sti
out
out
out
push
dec
mov
mov
mov
imul
out
ret
jp
loopne
add
cmp
cmpsl
or
jmp
lock
in
or
and
imul
xchg
mov
imul
addb
add
stos
cmp
push
jmp
or
lea
adc
jmp
mov
hlt
fucom
bound
call
dec
push
rcl
test
mov
stos
ljmp
jecxz
notb
fucomi
add
mov
es
daa
or
loop
xchg
ret
out
ret
in
jle
add
and
push
clc
insb
lret
ds
ja
out
xchg
mov
pop
fxch
pop
jecxz
arpl
fldt
xor
dec
adc
push
rcl
mov
pop
lcall
xlat
fwait
sub
fsts
loop
dec
stc
push
shll
loope
inc
add
add
jno
cmp
xorl
mov
jg
lds
sbb
int3
fsubrp
pop
push
cmp
and
add
bound
mov
outsl
and
mov
pop
fildll
push
lock
adc
decb
inc
and
cs
cli
jb
inc
pop
lea
enter
enter
rcrb
loope
popf
hlt
es
insb
push
nop
mov
dec
movsb
xchg
and
push
dec
pop
popf
ss
das
mov
sbb
xchg
inc
subb
adcl
neg
xor
jb
loop
mov
int3
aaa
jle
in
aaa
int3
repz
dec
shll
into
jae
in
mov
movsl
mov
jbe
test
mov
ds
mov
lret
fsubrp
add
add
xchg
push
lcall
dec
ja
inc
stos
xor
or
sub
movsb
pop
mov
mov
cli
shld
mov
lock
pop
int3
mov
and
pop
fsubrs
add
push
mov
lock
leave
movsl
movsb
ss
pop
aam
jnp
push
call
xchg
cmp
cs
test
jge
in
cmc
test
add
sbb
cmc
pop
les
mov
test
xchg
xor
mov
inc
xchg
xchg
jnp
mov
mov
dec
arpl
mov
xchg
dec
leave
lret
test
insb
pop
xchg
push
xor
dec
xchg
pop
pop
es
sub
dec
mov
hlt
pop
jnp
xchg
or
mov
hlt
flds
dec
jle
sbb
in
les
pushf
gs
fisubs
jg
inc
sbb
in
icebp
add
xor
mov
inc
js
or
sub
mov
repz
jle
sub
sub
jmp
cwtl
mov
or
orl
sar
jmp
mov
popf
bound
cmpsb
add
and
adc
aad
sbb
in
mov
inc
xchg
inc
mov
sbbl
jmp
sbb
or
mov
xor
aaa
fmull
stos
imul
lods
stos
mov
rorb
pop
sahf
mov
mov
push
and
jecxz
jno
jb
pop
sbb
push
in
xchg
cmp
inc
push
insb
lods
mov
mov
jnp
aas
inc
mov
notb
int3
add
nop
xorl
xor
pop
subb
mov
inc
sub
mov
flds
sahf
je
aas
imul
xor
arpl
sbbb
push
jno
mov
mov
dec
and
imul
sub
pop
pop
dec
ret
mov
or
data16
ret
and
in
fwait
imul
bound
cmp
mov
add
fwait
and
sbb
sbb
pop
pop
jo
shlb
pop
adc
push
pop
or
sbb
sub
insb
cmpsb
push
push
xchg
adc
jae
pusha
stos
inc
mov
popf
stos
sti
fwait
mov
imul
push
jmp
pop
jo
or
inc
add
out
outsl
cmc
xchg
jmp
or
loope
and
icebp
pushf
mov
lahf
pop
pop
cwtl
cmp
mov
fcmovu
aam
mov
lock
inc
rolb
movb
rorl
lods
sti
out
fcompl
or
and
jecxz
mov
inc
adc
rcrl
lock
ror
out
pop
sahf
pushf
jl
loopne
xor
mov
add
movsl
test
pop
imul
push
adc
jne
pop
push
outsl
mov
or
jmp
repnz
fwait
xchg
std
xchg
icebp
pop
push
cli
xor
ss
mov
mov
jno
pop
int
pop
scas
cli
xchg
push
fadds
pop
jno
xchg
fists
test
out
dec
bswap
fisubrl
test
loopne
in
dec
xor
stos
xchg
out
sbb
pop
dec
cltd
insl
and
mov
pop
jmp
je
jb
hlt
fwait
cmp
push
adc
adc
fsub
mov
jp
inc
test
scas
mov
idivl
aam
outsb
jae
xor
xchg
cmp
sub
and
rolb
xor
rol
cld
sub
mov
es
aaa
jle
dec
test
push
or
lret
das
inc
dec
out
adc
jp
sbb
ds
add
pop
sbb
pop
outsl
cmp
jmp
mov
hlt
jge
xchg
mov
pop
adc
sbb
xchg
or
movsb
in
cmp
sub
mov
jle
mov
cmpsb
push
popa
jecxz
stos
arpl
movsb
push
cld
dec
push
es
hlt
test
inc
mov
sub
dec
dec
js
test
and
xor
cmp
mov
pop
xchg
mov
push
pusha
cmpsb
mov
cmp
clc
aam
jnp
lock
jecxz
call
in
rorb
dec
out
icebp
add
sub
jecxz
and
jg
iret
out
jne
push
cltd
je
movsb
in
lahf
fldcw
xor
hlt
pop
pop
and
push
enter
stc
ror
sbb
call
cmp
mov
das
adc
or
les
fisubl
dec
mov
dec
mov
scas
rorb
loopne
pop
sbb
inc
xlat
cli
push
adc
test
fcoms
xor
and
out
mov
cmp
jne
das
rorb
add
xchg
push
dec
mov
sbb
int
adc
jbe
fwait
mov
fcomi
pop
or
gs
out
ret
pop
popa
sbb
scas
and
scas
mov
dec
insl
mov
sub
in
push
xsave
shll
add
loopne
outsb
movsl
xchg
scas
mov
fisttps
movsb
cmp
in
pop
inc
outsl
and
sbbl
cs
mov
pop
nop
adc
push
pop
xchg
or
mov
mov
jl
fsub
or
in
mov
mov
repz
jns
inc
fcmovbe
mov
mov
adcb
cmpl
les
insb
sub
pop
lea
mov
stos
test
jae
add
loope,pt
in
mov
sbb
int3
sub
ret
mov
xor
in
sub
add
rcrb
gs
in
cmc
cmpsb
lcall
out
js
push
movsl
fisubrl
mov
rcrb
ljmp
lods
cwtl
pop
shll
push
hlt
and
push
loope
out
cmp
lock
xor
dec
xchg
xchg
mov
rcrb
sahf
xchg
jbe
sub
mov
xchg
lcall
inc
daa
xor
dec
xor
mov
xchg
lock
lret
push
or
iret
or
ds
insl
xor
jns
mov
shlb
sbb
inc
add
ret
and
pop
cmc
cmpsl
insl
adc
int
shlb
ret
mov
push
pop
test
or
icebp
pop
movb
shll
inc
sti
cld
xor
mov
jge
test
inc
cmp
xor
and
outsl
add
pop
in
cmp
sahf
pop
movsl
loopne
mov
pop
sahf
xchg
mov
imul
mov
cs
test
repz
inc
das
and
mov
mov
jmp
lds
inc
in
xchg
adc
jl
jmp
or
repnz
int
and
jge
fidivrl
mov
imul
sbb
fucomip
lods
mov
push
push
lret
movsb
mov
aad
add
pop
inc
sbb
jo
push
sbb
repz
mov
add
mov
neg
loope
mov
jns
pop
in
iret
cmp
aas
pusha
dec
shrl
mov
and
bound
or
bound
add
pop
sub
lcall
dec
das
mov
lahf
ret
imul
in
test
das
jle
repz
out
push
scas
dec
lea
push
in
loope
pop
lock
aam
lret
xchg
test
or
xlat
repnz
rcll
lods
dec
mov
bts
loop
xor
push
push
faddl
dec
test
mov
int
mov
iret
movsl
mov
and
and
xorb
dec
xor
in
pop
faddl
insl
or
out
lcall
pop
shr
in
push
mov
sbb
nop
inc
mov
fwait
ja
adc
jecxz
dec
cli
push
dec
gs
mov
dec
movsb
out
push
lret
mov
test
jbe
jp
out
and
stos
dec
roll
cmp
aas
sbb
and
push
fisttpl
popa
dec
cld
push
push
sti
jmp
jns
jnp
mov
cli
inc
ds
and
in
adc
test
dec
dec
add
push
jb
outsb
jns
shrb
mov
daa
mov
out
and
test
fcmovb
mov
fwait
mov
xor
pop
and
push
xchg
pop
and
mov
adcb
fildll
mov
lcall
movsl
fisttpll
popf
adc
shrb
mov
es
mov
sar
xor
popa
loope
mov
ret
mov
xchg
jecxz
xchg
push
rol
enter
pusha
add
sbb
pop
xor
mov
and
push
and
sub
push
dec
scas
std
sarl
inc
push
xchg
adc
xor
xor
out
fsubs
repz
pop
mov
jne
in
cltd
xchg
cs
xchg
sub
cmp
popaw
outsl
mov
cmp
out
pop
sti
dec
mov
orl
es
in
pop
mov
mov
cs
xchg
mov
inc
je
add
repnz
imull
repnz
daa
leave
out
clc
xchg
push
fadd
inc
sti
out
and
add
xor
push
inc
aad
jle
std
pop
addl
imul
xchg
stos
and
ljmp
ja
ljmp
fcmovbe
gs
sar
jle
jno
pop
lods
sub
and
aad
mov
cmp
xor
lods
flds
and
test
popf
clc
pop
incl
popf
imul
loope
dec
cli
in
adc
inc
sbb
lahf
mov
mov
mov
add
cmc
xchg
or
dec
loop
ljmp
int
jmp
stos
jecxz
in
inc
and
cs
pop
xchg
push
pop
sti
dec
inc
ret
les
lock
or
repnz
cmp
inc
or
jno
sbbb
addr16
cmp
aas
loop
insl
in
xchg
gs
imul
adc
mov
dec
sub
jg
enter
add
xlat
xchg
fwait
out
jnp
repz
add
sub
and
js
cmp
loope
lods
ret
mov
jle
cmovl
xchg
mov
mov
xchg
call
aas
icebp
push
or
test
sub
out
imul
adc
hlt
pop
loopne
jne
sbb
xchg
dec
add
aad
adc
sub
test
xchg
adc
push
sub
cmp
nop
notb
in
js
sarb
jns
popa
mov
stos
inc
ret
push
and
das
adc
ret
xchg
nop
ret
hlt
jg
push
das
pop
lea
and
lret
dec
jo
push
push
and
add
fs
je
pop
jns
rclb
sbb
mov
add
sti
and
stc
jg
mov
xchg
pop
int3
movsl
mov
cmp
xor
jnp
lcall
sub
out
xor
je
mov
int3
lods
jl
repnz
add
call
sub
and
xchg
cmp
mov
cmp
fwait
push
data16
mov
enter
lods
mov
jge
stos
xchg
js
in
mov
inc
js
and
push
jno
cmpsb
imul
mov
or
xor
mov
lahf
imul
xchg
adc
mov
aam
cmp
cwtl
inc
fstl
divb
pop
jnp
xor
repz
stc
cwtl
jle
add
push
stos
dec
inc
pmuludq
mov
mov
push
sahf
xchg
xchg
xor
loopne
lods
dec
adc
daa
dec
xor
cmp
pusha
inc
cs
mov
xchg
add
inc
push
pop
xor
mov
loope
pop
rcr
cwtl
stos
sbb
xor
in
rcrb
ss
ret
push
mov
popf
inc
loope
sub
loopne
test
inc
xor
cmpsb
ret
test
jnp
pusha
pop
pop
push
in
bnd
das
pop
cmpl
loopne
inc
and
dec
iret
outsl
test
and
loope
lods
pop
iret
jp
nop
mov
mov
call
mov
cld
mov
jecxz
xor
pop
push
cmc
and
jge
mov
and
xor
in
lret
xchg
dec
fwait
push
sbb
icebp
xchg
add
fisubrs
test
jns
mov
push
mov
xchg
sub
cs
std
adc
fsubrl
xor
and
push
mov
outsb
hlt
ja
gs
stos
xlat
push
xchg
inc
pop
xorl
in
test
pop
adc
add
mov
lret
dec
fwait
jg
adc
orl
mov
enter
cmp
aas
add
push
cmp
cmp
xchg
mov
dec
das
mov
loopne
mov
jo
xchg
mov
mov
xchg
stos
inc
jbe
out
cli
pop
jp
lock
push
sub
jp
cs
jl
sub
test
in
adc
aad
insb
ljmp
test
cmp
pop
insb
mov
bound
jbe
jns
rcrb
xor
fmull
cmp
cs
test
shlb
ds
add
xchg
popa
mov
popl
sub
in
sbb
adc
dec
es
mov
bound
aas
xor
add
or
sbb
or
add
mov
test
and
gs
jae
cmp
cmc
push
pmulhuw
cmp
sub
aad
xchg
rcll
lds
repz
inc
xor
and
or
sbb
out
pop
cld
and
mov
cmpsb
sahf
xlat
dec
pop
and
jle
xlat
jnp
push
push
mov
fdivl
dec
jg
aas
data16
shrb
sbb
out
cmp
ds
in
cmp
push
push
jecxz
insl
mov
dec
cmp
xor
inc
xchg
outsl
xor
push
xchg
mov
push
jno
push
pop
mov
push
dec
insb
fcmovnbe
repz
jge
dec
jge
mov
loop
out
mov
mull
daa
int
mov
das
sbb
pop
sbbb
cmp
divl
inc
outsl
and
add
xchg
gs
cmpsb
rcrl
outsl
pop
sti
sbb
mov
xor
aaa
addr16
sarl
sub
push
sbb
sub
test
or
xchg
in
xchg
or
lock
pop
popf
insb
or
out
lahf
xor
xchg
dec
addr16
pushf
js
xchg
inc
pop
out
pop
dec
cmp
js
bnd
mov
lahf
fsts
and
jecxz
cmpb
ljmp
mov
jle
cmp
cmp
lods
bound
fcmovbe
out
hlt
ljmp
enter
pop
sbb
mov
or
mov
dec
xchg
arpl
popf
mov
mov
mov
pop
insb
sub
or
or
icebp
loopne
sub
sbb
sarb
add
je
and
fstps
pop
mov
and
ror
rorl
push
and
mov
out
call
pop
fisubl
fidivrs
mov
cmpsb
adc
mov
dec
not
repnz
add
add
mov
mov
mov
lock
popf
imul
fcmovbe
inc
cli
pop
ljmp
flds
lcall
push
mov
jo
add
xor
stos
iret
xor
inc
data16
cwtl
subb
roll
clc
shlb
cmp
shlb
out
pushf
call
mov
ja
fidivrl
cmp
and
push
testl
loop
mov
xor
jo
add
push
mov
imul
aas
call
adc
mov
dec
cmpsl
mov
ss
ss
pop
stc
data16
es
hlt
faddp
ljmp
sub
mov
xchg
push
mov
xchg
shlb
int3
push
mov
xchg
stc
inc
mov
xor
xchg
add
ret
getsec
clc
sbb
repnz
in
dec
pop
pop
sarl
mov
adc
les
cmp
push
es
xchg
and
mov
into
inc
stos
imul
lea
sbb
cmp
or
pop
mov
imul
into
push
dec
ret
sti
test
popf
adc
adc
pavgb
adc
dec
int3
scas
inc
mov
mov
outsl
or
xlat
inc
sub
movups
pop
stos
sub
or
dec
insb
cmp
ljmp
add
or
pop
sbbl
repnz
lahf
les
iret
movsl
cmp
push
lret
fidivs
scas
leave
dec
ret
dec
movb
mov
pop
sahf
and
xchg
jmp
mov
std
hlt
inc
aaa
xor
cs
ljmp
mov
iret
pop
mov
jecxz
scas
cmpsb
rorl
cs
sub
data16
push
mov
mov
dec
test
ret
or
sbb
adc
cmpsl
js
sbb
push
lods
xabort
pop
bound
jbe
push
es
push
shlb
adc
inc
mov
jns
pop
pusha
fwait
stc
mov
push
mov
rcrl
shrd
dec
mov
xor
adc
cld
jno
xor
add
scas
pushl
aam
mov
out
enter
out
lock
outsb
push
inc
daa
pop
xor
pop
xor
ficomps
ds
dec
icebp
or
js
jge
mov
xor
cmp
mov
adc
mov
dec
add
movsl
scas
sub
push
stos
mov
push
dec
sbb
fs
xor
push
xor
ret
sub
stos
movsb
adc
mov
sar
push
mov
stc
mov
dec
cmc
scas
das
xor
fwait
dec
ror
or
cmc
mov
loopne
lea
push
ja
xchg
aaa
rdtsc
je
cli
push
push
std
jo
push
fucomp
xchg
xchg
jno
sub
mov
mov
inc
movsl
loop
mov
pushf
leave
repz
fiadds
push
ss
jno
adc
inc
ret
cmp
negl
rcr
js
adc
sahf
les
push
sti
xor
scas
mov
jecxz
popf
aam
push
loope
enter
sbbb
or
loope
iret
inc
mov
add
shrl
cmc
insl
addb
scas
push
int
sti
mov
aad
and
pop
call
shrl
repz
xor
xchg
dec
rorl
cltd
cmp
adc
imul
jle
inc
pop
sbb
jne
int
add
aam
and
sti
jnp
lods
xchg
mov
arpl
pop
stos
daa
push
xchg
bound
add
cmp
rol
xchg
lret
call
data16
je
sbb
xor
dec
call
mov
sbb
popa
cmc
lcall
adc
sub
pop
and
or
sar
ja
cmp
shrb
ror
notb
mov
bound
xlat
arpl
and
xor
jno
inc
inc
xor
mov
adc
xor
mov
pop
mov
lds
mov
into
push
ljmp
cli
outsl
scas
lret
sub
int
pop
jnp
xlat
cmp
inc
dec
insb
dec
mov
nop
les
jg
mov
inc
pusha
enter
inc
loop
ds
cmpsl
les
xor
test
sub
decb
sub
test
xlat
adc
pop
sub
adc
repz
xchg
dec
sbb
sbb
icebp
inc
sahf
fcos
rolb
pop
mov
jae
out
ficomps
jo,pn
aaa
scas
fs
sub
shl
xchg
xchg
out
aam
add
xchg
pop
sbb
jns
sbb
pop
daa
std
and
test
shlb
in
push
push
loope
add
js
push
orb
xchg
sbb
mov
xchg
sub
inc
push
sub
lods
mov
jno
ds
dec
movsb
push
inc
gs
in
lods
jo
les
pop
push
and
adc
fisubrl
out
sub
and
jo
adc
and
cmp
call
fstl
lret
add
xchg
push
sub
jecxz
sbb
aas
bound
pop
insl
mov
mov
sbb
push
aaa
xor
push
sub
cmp
or
dec
push
sbb
sbb
mulb
mov
jne
sti
sbbl
loopne
cwtl
mov
stos
or
enter
dec
sbb
shll
mov
inc
dec
scas
jmp
dec
popf
insl
mov
adc
lods
mov
lods
faddp
js
jg
nop
fs
jge
out
mov
or
add
mov
mov
push
push
push
adc
mov
adc
mov
in
sbb
adc
adc
cli
es
pushf
inc
pop
clc
push
movsl
lea
outsl
sbb
dec
inc
xchg
jecxz
out
dec
or
cld
inc
push
mov
lds
popf
sbb
stos
xchg
sub
fwait
dec
cs
dec
enter
pusha
sbb
mov
or
cmp
sub
mov
sub
sub
pop
add
mov
adc
daa
mov
mov
shll
cmpsb
mov
clc
xchg
xor
nop
add
push
int
daa
cli
sbb
roll
mov
enter
mov
inc
add
or
call
lods
inc
inc
ljmp
scas
cwtl
lea
mov
ss
shll
in
add
pushf
lds
aad
inc
jle
lods
enter
repz
or
mov
or
repz
repz
pop
lds
insl
andl
adc
outsl
mov
repnz
push
bound
inc
push
shrl
add
pop
and
pusha
xchg
popf
push
data16
lock
xchg
sub
ljmp
fs
out
test
repnz
ret
mov
lods
in
push
lea
stos
xorl
adc
mov
xchg
loope
imul
pop
jb
loope
cwtl
into
inc
leave
mov
lcall
lret
pushf
ja
movsb
mov
or
mov
ret
xchg
pop
bound
lods
in
hlt
sahf
jmp
icebp
out
jno
shl
loope
jmp
sbbl
xor
pushf
imul
xchg
test
cmp
xor
mov
mov
es
mov
inc
sub
test
inc
repnz
idivb
mov
cmpsl
enter
stc
adc
scas
xchg
bound
and
lea
push
xchg
pusha
mov
push
add
mov
testb
mov
int
in
xor
sbb
inc
orl
cmpsb
sahf
and
mov
dec
push
push
dec
add
sub
pop
aad
jl
int
jbe
aam
dec
pushf
adc
lahf
enter
test
sbb
cmp
jecxz
cmpsb
scas
mov
shrb
rcrb
cmp
add
dec
or
or
pusha
xor
adc
inc
or
shll
jp
sub
xor
dec
movsb
or
stos
pop
rorl
arpl
dec
inc
fdivl
inc
inc
sti
push
es
aaa
pop
mov
sbb
mov
clc
sub
imul
fildll
cmp
mov
sub
dec
xchg
mov
aaa
dec
pop
filds
push
push
sbbb
mov
sbb
mov
mov
pop
jp
dec
into
push
pop
insl
insl
cmp
jbe
mov
ss
jb
shr
arpl
pop
mov
adc
movsb
imul
inc
jl
ficoms
cmp
sti
sti
sub
int
pusha
enter
jmp
xor
ja
inc
nop
or
imul
bound
sub
jecxz
ja
loopne
icebp
gs
and
mov
cwtl
bound
lock
shrl
ret
and
mov
outsb
clc
ja
jge
stc
loop
les
ja
xlat
adc
or
or
daa
xchg
dec
add
stos
jmp
mov
sbb
clc
cmp
adc
mov
add
jle
insb
push
sar
mov
inc
adc
cwtl
push
sti
jp
mov
sub
repz
mov
pop
sub
cmpb
ds
mov
lcall
call
jae
fcmovne
mov
hlt
sub
mov
mov
inc
and
sahf
push
stos
inc
push
ljmp
push
mov
ret
insl
pop
jne
inc
adc
or
xchg
mov
inc
mov
adc
dec
add
stos
xchg
test
clc
and
jae
int3
inc
xor
dec
jecxz
sbb
out
loop
in
ja
cmpsl
nop
pop
or
jecxz
adc
test
xor
popf
xor
mov
sub
aaa
imul
sti
aaa
je
out
xchg
dec
ret
inc
pop
in
int
test
cld
addb
mov
jge
jl
faddl
mov
jns
lret
cmp
pushf
lret
aam
je
pusha
mov
ljmp
mov
cli
jle
sarl
js
sub
mov
inc
mov
bound
sub
mov
int
pop
xchg
xchg
sbb
pop
xlat
mov
cmp
dec
push
jecxz
pop
inc
inc
rorb
pop
push
push
loopne
xchg
popa
shrl
insb
add
jo
xor
in
mov
loop
jle
and
test
xor
jo
pop
and
nop
sub
pop
push
test
xor
loopne
adc
rclb
das
pop
or
movsl
fwait
mov
jmp
mov
sub
das
lcall
or
dec
jg
repnz
lahf
dec
pop
jne
jae
imul
jno
pop
lds
mov
and
and
fs
fisubrs
shr
in
jmp
cmp
add
mov
int3
pop
je
int
in
push
lods
dec
xchg
insl
adc
jmp
pop
xchg
int3
or
jp
xchg
fdivrl
push
cmpsl
sbbb
sahf
add
rcll
jb
pop
sahf
push
insb
lods
aas
xor
or
icebp
mov
stc
lahf
and
add
test
rcrl
cmpsl
pop
clc
mov
inc
mov
pop
lret
das
imul
mov
cmp
lahf
adc
addr16
mov
and
fwait
in
adc
push
popa
addr16
jge
clc
jecxz
push
mov
lock
adc
xchg
ret
stos
sti
stc
xrelease
movsb
mov
xchg
mov
popa
inc
or
mov
mov
mov
and
push
mov
data16
push
out
xchg
push
test
sub
daa
xchg
pusha
cmc
imul
cld
xchg
call
sub
lret
jno
and
adc
cwtl
popf
pusha
push
les
shlb
pop
push
daa
jecxz
shrb
lcall
add
sbb
xor
fldl
inc
frstor
orl
cltd
push
jge
inc
push
pop
dec
sahf
pop
jns
and
push
or
sbb
sub
xchg
ljmp
int3
lods
jno
mov
pop
or
ds
scas
sbb
sbb
cli
lock
or
jg
shll
test
insb
fcmovu
sbb
mov
xor
wrmsr
mov
add
cltd
es
inc
dec
rorb
xchg
dec
pop
dec
cmp
imul
pop
or
push
data16
adc
adc
icebp
sbb
das
loope
jno
cli
dec
xchg
sbb
cmpb
test
add
pop
and
xchg
enter
je
cmp
sbb
loop
dec
mov
lock
dec
xor
in
pushf
mov
gs
stos
sbb
cmc
std
pop
fnstcw
subb
into
sbb
rclb
sub
das
ss
mov
mov
jg
mov
xchg
fldenv
mov
adc
stos
int3
lods
sbb
repz
mov
adc
jbe
popa
xor
add
int3
aad
enter
aad
mov
notb
sub
inc
ss
call
test
insl
mov
nop
repz
je
lock
ret
inc
test
lret
or
mov
bound
push
icebp
out
mov
cwtl
dec
andl
mov
dec
js
jo
cld
sbb
lcall
push
nop
mov
mov
push
mov
fmul
sahf
add
mov
mov
add
adc
ss
movsb
push
push
xor
xchg
fdivrs
xchg
imul
dec
outsb
jge
pop
mov
pop
mov
or
sahf
out
push
lds
xchg
icebp
inc
cmpsl
rolb
stos
push
test
callw
and
push
scas
cmpsb
xchg
sti
lds
insb
jno
icebp
jmp
push
add
xorb
insl
push
jb
mov
pop
add
push
and
mov
subl
cmc
jne
mov
xorb
rcrb
cmpl
leave
cwtl
push
data16
add
lret
xor
cmp
lds
pop
outsl
mov
inc
sbb
and
fwait
xchg
in
sbb
mov
mov
ds
imul
fwait
outsb
adc
xor
pushf
fldl
jns
leave
add
fs
adc
mov
iret
push
lods
imul
xor
jmp
jb,pt
or
call
add
popa
push
push
aaa
add
push
jb
pop
mov
iret
and
fstp
sbb
out
popa
pop
movsb
fcoms
push
movntq
imul
mov
push
and
xor
mov
and
push
sbb
xchg
mov
mov
ss
out
xor
push
and
sbb
pop
jg
call
xchg
mov
mov
adc
or
mov
xchg
daa
repnz
add
scas
push
test
mov
inc
xchg
dec
inc
xchg
outsb
inc
dec
dec
jae
mov
ret
cmp
aad
add
xchg
lea
mov
inc
xchg
xor
shlb
movsb
ja
xorb
pushf
divb
gs
dec
pop
neg
insl
mov
mov
or
adc
jge,pt
dec
adc
lock
inc
mov
in
or
and
or
xor
fidivl
jns
shll
lret
mov
adc
jno
mov
aaa
inc
lahf
stos
jecxz
mov
adc
cmp
push
sub
xchg
cmp
jmp
xchg
push
scas
dec
dec
mov
mov
xchg
jmp
mov
dec
inc
inc
test
mov
pop
inc
dec
rorb
xchg
xchg
mov
out
mov
dec
popf
loop
leave
sub
ds
xor
andb
int3
mov
je
sub
mov
mov
lods
or
pop
mov
incb
test
ja
pop
scas
cmp
xchg
ja
mov
data16
add
js
add
in
inc
xor
cmc
popa
pop
jmp
pop
sbb
fwait
or
jne
mov
mov
lret
push
xchg
lret
push
xor
icebp
int3
jg
pop
punpckhwd
bound
mov
push
loop
fdivr
jne
js
ljmp
dec
test
test
movsl
pop
in
pop
jae
hlt
push
xchg
arpl
mov
sub
aaa
lods
outsb
into
cmp
mov
or
mov
in
aaa
push
dec
adc
and
lcall
and
mov
outsl
adc
mov
into
xchg
popa
cltd
pop
lea
cld
loopne,pt
dec
xchg
outsl
push
adc
fbstp
cmovg
rclb
int3
dec
mov
push
mov
push
xor
orl
mov
notl
clc
or
xchg
sbb
nop
int
outsb
push
push
jnp
mov
lea
fcoml
js
add
xor
mov
xchg
pop
push
insl
sbb
or
in
inc
testb
push
sbb
adc
je
fistpll
aad
mov
xchg
clc
mov
adc
idivl
dec
repnz
rorl
movsl
cltd
xlat
in
dec
arpl
inc
cld
pop
sub
and
mov
adc
fdivrl
fcoml
push
icebp
cmp
xchg
cld
xor
mov
loop
push
xor
inc
inc
arpl
push
dec
call
mov
addr16
jmp
imull
test
popa
push
aad
xchg
mov
pop
xchg
adc
inc
mov
cltd
push
and
and
xchg
fstpt
push
dec
fistpll
or
mov
fstpl
mov
sub
xchg
lods
xchg
call
xor
test
rcrl
mov
imul
sbb
sbb
jle
xchg
mov
out
sar
pop
int
xor
inc
and
into
pop
or
aam
test
push
xor
das
mov
mov
pop
mov
je
faddl
xchg
idivl
imul
mov
sahf
or
stos
outsb
out
lods
ror
movsl
arpl
sbb
inc
dec
addr16
iret
mov
sub
out
das
sub
jo
lahf
pop
cmp
push
in
dec
sub
mov
pushf
jecxz
leavew
faddp
adc
cmpsl
cmpl
ret
addr16
ljmp
fbstp
pusha
scas
or
adc
mov
js
xchg
outsl
sahf
ss
dec
out
cmp
xchg
inc
jbe
sbb
pop
rolb
lcall
call
pop
loop
addl
and
dec
out
test
test
cmp
xchg
and
rorl
push
iret
repz
shl
inc
popf
pop
xchg
subb
imul
outsl
daa
out
test
jnp
xor
pop
mov
call
sub
push
ds
mov
push
pop
into
stos
stos
mov
pop
xchg
mov
cmpsb
sbb
into
dec
and
mov
or
or
xchg
and
roll
mov
cmp
out
pushf
mov
mov
loopne
push
xchg
mov
repz
pop
jmp
cmp
out
test
xor
ficoms
pusha
adc
in
popa
mov
inc
test
pop
jg
jnp
stos
push
imul
roll
mov
xchg
lods
fs
xlat
mov
mov
lcall
inc
lods
sub
adc
add
push
andb
jb
mov
push
call
ja,pn
jl
aas
int
push
ret
adc
cmp
inc
cmpsl
lea
jno
cmp
xor
jle
fisubs
fdivl
mov
and
cmc
cmp
jg
add
daa
bound
sub
pop
fisttpl
push
push
sub
mov
or
jae
insl
lea
mov
pop
xchg
gs
jge
xor
xchg
mov
pop
ja
or
add
mov
sbb
or
cmpb
mov
pop
in
es
insb
test
std
cmpsl
lods
inc
add
fiadds
sub
cmc
aaa
mov
jp
pop
sbb
push
xor
xor
repz
or
sbb
adc
arpl
mov
mov
sbb
xchg
popa
cmp
stos
idivb
aas
inc
stos
je
jmp
movsb
xchg
xor
shlb
adc
lret
loopne
test
jnp
pslld
and
pop
mov
data16
ljmp
sbb
out
adc
xchg
mov
clc
push
gs
outsb
inc
dec
dec
arpl
iret
add
fisttps
push
leave
inc
dec
sbb
clc
out
add
cmp
pushf
mov
push
push
fwait
ljmp
test
mov
cmp
outsb
jmp
pmaddwd
cmpl
cmp
mulw
aad
imul
rclb
inc
mov
mov
push
jecxz
das
pusha
cli
dec
arpl
mov
shrb
add
mov
mov
insl
loope
cltd
sbb
aas
xor
test
inc
mov
push
add
and
inc
dec
pop
lock
movsb
mov
xor
add
xlat
adc
push
or
inc
stos
or
xchg
sbbb
jae
mov
out
fcoms
out
mov
xchg
xchg
aad
inc
aas
insb
lds
or
aas
inc
mov
je
lods
and
out
cmovge
and
pop
jg
pop
fsts
and
stos
pop
push
cmp
and
push
scas
jno
cmp
sahf
push
je
mov
arpl
cmpsl
mov
push
push
xchg
add
xchg
mov
loope
adc
lds
lds
jae
xchg
nop
inc
mov
lea
push
dec
xchg
mov
repnz
pop
dec
inc
pop
adc
imul
pop
adc
jle
cli
jae
dec
pop
adc
popf
sbb
sti
pop
hlt
lock
mull
mov
shlb
aad
push
imul
nop
out
fbld
fnstcw
popa
mov
mov
jmp
lret
xchg
nop
loop
cli
ds
xor
cmp
push
mov
pushf
cld
ds
lds
mov
mov
mov
pop
fdivl
test
jmp
lock
mov
dec
jno
loope
mov
aad
stos
and
vmovaps
lods
repnz
lods
mov
inc
mov
insl
xor
jp
adc
pop
pushf
mov
iret
repz
xor
popf
adc
insb
xchg
xchg
adc
and
and
adc
dec
stos
cmp
sub
inc
test
mov
test
push
imull
pop
push
sub
xor
into
jge
inc
pop
pop
incl
or
fdivs
mov
pop
std
jecxz
inc
enter
push
roll
ret
dec
mov
shrl
adc
int
sbb
xor
jl
pop
lock
add
pop
scas
sbb
aaa
movsl
xchg
sbb
inc
add
stc
sub
and
sbb
into
push
scas
mov
fdivrp
push
mov
push
pop
mov
fcos
in
scas
mov
into
xor
sbb
js
fistpl
add
cmp
sub
mov
push
sub
push
loop
pop
inc
jmp
jnp
or
mov
add
ret
and
fucomp
cmp
out
dec
sti
hlt
cs
lock
mov
pop
addl
inc
sti
inc
inc
sbb
push
or
or
mov
add
mov
jmp
mov
stos
mov
aad
xor
ret
xor
pop
push
ds
jge
mov
in
xchg
fmulp
add
mov
sub
repnz
aam
pop
cmpsl
scas
xchg
and
packssdw
or
and
lds
add
xchg
icebp
push
mov
mov
adc
lahf
xchg
ror
aas
or
mov
dec
xchg
idivb
fs
jo
aaa
scas
iret
stos
js
adc
push
xchg
pushf
pop
rclb
push
cmp
mov
sbb
push
cmp
imul
les
inc
sub
scas
in
sub
and
pop
popa
jp
aas
mov
popf
cmpsl
data16
add
mov
sub
out
outsl
aad
sub
xor
push
jge
or
push
loop
addr16
push
pop
out
dec
cmpsb
jge
push
mov
out
out
or
dec
mov
test
push
ficoml
in
test
jl
push
repz
sub
int
pushf
icebp
rorb
lcall
loopne
mov
movsl
sti
xchg
push
mov
in
cmp
dec
mov
sbb
dec
jg
sarb
imul
and
inc
pusha
sub
xor
in
out
clc
stos
dec
push
mov
orl
std
mov
stc
je
cmpb
cmp
cmc
jge
sahf
incl
xor
std
scas
nop
rcll
data16
repz
into
cmpl
xchg
mov
aaa
pop
lret
dec
mov
mov
in
sarb
int
popf
cwtl
inc
enter
repz
test
xor
or
jno
repnz
fbstp
mov
pop
lods
repz
mov
outsl
and
inc
mov
fidivrs
cmp
xchg
or
stos
jl
aaa
pop
xlat
dec
bnd
pop
xlat
cmp
int
cmpsb
fidivrs
jecxz
jge
jp
mov
jb
sbb
xor
inc
out
cld
inc
jns
mov
mov
aaa
and
pop
pop
mov
pmaddwd
xchg
repnz
cmp
pop
jns
jo
sbb
test
pop
fldcw
insb
jge
imul
add
or
sub
repz
aad
and
fldcw
ds
push
pop
repz
mov
jne
movsl
xchg
push
movsl
flds
fisttpll
cmpl
sbb
int
pop
aam
xchg
inc
nop
mov
outsb
inc
mov
inc
gs
scas
daa
or
sub
das
push
mov
pop
cmp
jo
or
sbb
ja
and
push
dec
dec
lods
cltd
shr
or
mov
ds
mov
test
mov
xor
es
ffree
test
cmp
addl
rcrl
add
xchg
sub
add
movb
rcrb
loope
test
and
dec
mov
sbb
lea
stos
mov
pop
aad
sub
jmp
pop
xchg
mov
push
popa
scas
sti
inc
push
push
je
xor
test
cmp
jg
xor
data16
pop
jp
imul
lahf
ja
adc
loop
loopne
repnz
jmp
add
dec
adc
andb
fcmovu
enter
push
or
inc
or
adc
rclb
push
push
sahf
mov
cmp
and
cld
xor
xchg
push
aas
lods
test
mov
icebp
xchg
pop
xchg
xchg
loop
pop
dec
mov
out
xchg
xor
jle
ja
in
mov
lods
popf
sub
push
pop
dec
aad
ljmp
pushf
ret
dec
lret
mov
sbb
cmpsb
ret
mov
arpl
popf
rdmsr
xchg
orb
jb
inc
orl
mov
push
ljmp
pop
popa
push
adc
or
fisubrs
cmp
mov
xchg
push
sbb
or
adc
nop
gs
cmp
mov
push
sbb
mov
ret
adcb
aam
add
jno
cld
fstl
ss
divb
lock
in
ficoml
and
mov
daa
xor
push
push
inc
sahf
mov
popf
xor
sbb
fisubs
arpl
pop
mov
cwtl
repnz
jge
cmc
orb
push
inc
sbb
xchg
aas
mov
mov
std
mov
and
or
cmpsb
jo
xchg
push
mov
loopne
mov
loop
push
bound
int3
ret
mov
xchg
cmp
mov
test
sbb
out
jle
in
or
xchg
push
jp
js
call
push
jne
test
pop
clc
icebp
lret
mov
out
adc
mov
jle
enter
mov
xchg
xchg
pop
enter
mov
insb
push
pushf
xchg
iret
pop
and
test
pop
jo
adc
push
sub
mov
dec
add
outsb
in
js
jmp
inc
dec
imul
pop
xor
mov
cmp
mov
shl
push
fstpt
or
fiaddl
pop
mov
into
shl
xchg
cmc
mov
dec
cmp
icebp
mov
jns
int3
enter
push
icebp
adc
ds
fcmovnbe
dec
cmp
mov
inc
stos
jg
and
mov
in
lods
aas
inc
and
pop
push
xor
int3
cmp
imul
jecxz
inc
stc
jae
in
cmp
insb
xchg
call
in
lock
out
jmp
je
iret
mov
cmpsl
addr16
pop
jne
or
mov
mov
push
repz
adc
dec
adc
rorb
push
adc
scas
inc
sahf
jb
test
push
jge
out
les
out
mov
mov
mov
clc
jmp
pop
and
push
pop
lea
jecxz
mov
in
mov
cmpsb
push
test
or
cld
cmovns
dec
fstps
or
or
inc
push
inc
xchg
int3
into
add
out
jb
or
imul
mov
cmp
cmpl
or
icebp
in
xchg
xorb
mov
xchg
das
sti
aas
dec
inc
out
inc
mov
cmpsb
push
mov
jg
stos
out
arpl
dec
ljmp
adc
fists
lods
arpl
and
imul
and
mov
jno
pop
cmp
fucomp
fnstsw
mov
jl
mov
inc
ds
inc
inc
mov
inc
sahf
mov
xchg
daa
nop
ja
orl
push
pop
fs
push
decl
inc
mov
int
lock
mov
imul
xchg
out
movsl
ja
arpl
mov
rol
or
mov
mov
push
adc
clc
stc
fmuls
lds
sub
jne
and
xchg
push
outsl
jno
xlat
cmc
inc
cmp
mov
daa
or
inc
or
sbb
fidivrs
loope
lretw
mov
jg
mov
mov
cld
loopne
outsb
icebp
aaa
fiadds
int3
js
mov
cmp
imul
andl
mov
in
rcl
xchg
ficoml
jp
mov
pushf
mov
pop
and
sbb
fwait
outsb
fs
daa
pop
pop
pop
lret
hlt
insl
loope,pt
ficompl
add
dec
cltd
cmp
and
push
push
and
stos
pop
cmp
sub
aam
sub
sbb
arpl
movsl
pop
rep
pop
mov
bound
loope
cmc
push
sbbb
clc
aaa
jno
dec
sbbb
adc
shl
dec
std
call
mov
mov
ss
or
mov
pop
sub
sar
xchg
rcll
mov
pop
xchg
sub
adc
adc
mov
add
movsl
sub
push
inc
adc
stc
pop
icebp
jno
add
push
ret
les
cmp
or
xchg
push
mov
data16
mov
in
inc
out
push
jne
cmp
xchg
es
cmp
outsb
sbb
push
and
ljmp
dec
mov
push
sub
je
cmc
cmpsb
sbb
dec
xorb
dec
pop
in
inc
call
add
loopne
push
addr16
je
push
cmp
fcompl
jmp
xor
mov
lds
test
adc
les
sahf
dec
xor
pop
push
adc
addb
js
dec
mov
decb
push
pushf
push
lret
test
cmp
fcoms
xchg
sub
mov
add
arpl
pop
sub
and
xchg
imulb
xchg
sbb
enter
add
mov
mov
adc
mov
pop
dec
dec
jb
pusha
pop
sbb
jns
call
subb
sahf
jb
pop
fnsave
and
popf
add
and
mov
sbb
mov
repnz
movsl
and
dec
pop
xor
cs
mulb
xlat
sub
jmp
fcmovnbe
leave
es
adc
xor
mov
mov
outsb
or
mov
cmp
jg
int3
cmpsl
lcall
mov
imul
push
cmp
jg
sti
jp
loopne
std
add
mov
and
push
or
mov
fisttps
jg
ds
xchg
stos
aaa
leave
jg
dec
xor
inc
fbld
pop
rorl
outsb
call
in
cmp
ret
test
bound
sub
adc
adc
inc
icebp
aas
sub
lret
cmc
lcall
xor
or
push
add
jmp
loop
leave
mov
bound
sti
out
fs
cmp
pop
dec
fs
lcall
pusha
inc
cwtl
shll
repnz
repnz
push
xlat
fbstp
cltd
ret
adc
imul
stos
sub
mov
or
push
es
jle
std
adc
shl
sub
push
mov
dec
fdivl
sub
cmpsl
stc
into
and
inc
sti
or
xor
and
inc
sbb
dec
inc
dec
add
outsl
mov
xchg
mov
inc
dec
out
cli
dec
xor
jecxz
jnp
mov
js
dec
xorb
mov
test
sub
sbb
add
push
adc
test
mov
push
pop
add
cmp
pushf
xor
or
cmp
and
and
xor
loopne
jg
and
das
pop
xchg
ss
mov
cmp
cmpb
out
es
fidivs
xor
js
push
pop
clc
pop
lea
xchg
or
and
jb
mov
cwtl
daa
int3
loop
scas
and
sti
stc
sbb
stos
inc
and
push
dec
std
mov
inc
pop
popa
cmp
sbb
mov
sbb
jne
test
sub
mov
or
xchg
cld
cmp
je
pop
jae
inc
push
mov
add
sarb
movsl
dec
push
data16
push
xor
mov
and
in
cmp
in
test
push
dec
jae
mov
js
sbb
xchg
lret
fsubl
pop
cmp
mov
sbb
mov
mov
mov
or
and
inc
cmp
push
push
cmp
sbb
jns
cmp
jno
js
mov
pop
adc
test
jg
in
dec
pop
dec
or
fbstp
mov
aad
or
std
jecxz
popa
dec
test
addr16
repnz
fxch
test
xchg
sub
cmpsl
int3
cmp
daa
jno
insb
out
je
cmp
sub
ja
xlat
ret
cmp
mov
cmp
int3
jno
pop
jle
push
outsl
pusha
and
fcomp
aaa
add
fistl
xchg
xor
add
xchg
loopne
dec
sbb
icebp
call
loope
jbe
push
int
sub
push
imul
mov
gs
adc
cwtl
dec
push
pop
lahf
xchg
pop
cmp
icebp
clc
pop
xchg
fsubrl
push
push
or
test
jb
loopne
lods
pushf
mov
dec
and
loopne
adc
add
dec
jb
mov
icebp
test
add
cmpsl
and
or
pop
pop
mov
fsubrl
test
mov
xchg
mov
cmp
cmc
cmp
imul
xor
dec
fbld
out
out
and
jle
mov
addr16
push
or
out
pop
push
pop
sub
cmpsb
lock
sbb
add
loop
mov
pop
and
inc
and
leave
scas
ja
pop
mov
xor
bound
repz
cmpsb
sub
and
adc
data16
test
das
in
movsl
mov
sub
sbb
jne
and
xor
pusha
out
mov
jmp
scas
fsubr
push
frstor
insl
xor
shl
out
push
fcompl
in
sub
jge
stc
xchg
sbb
jmp
gs
adc
repz
pop
mov
mov
push
or
outsb
lods
movsl
adc
repnz
pop
mov
adc
dec
dec
cltd
push
jbe
mov
cmp
ret
or
pop
lock
xchg
mov
sbb
loopne
shrb
sub
mov
repnz
iret
hlt
jmp
mov
sbb
enter
cmpsl
aaa
das
popf
adc
inc
leave
add
cmp
aad
mov
push
arpl
gs
push
cmpsl
je
enter
and
dec
add
xor
adc
sarb
or
daa
jo
test
icebp
pusha
sbb
mov
bnd
int
xchg
pop
sub
or
sar
daa
ss
imul
jbe
in
mov
add
add
cmp
cmpsb
or
mov
jg
sub
xchg
out
cmc
mov
inc
mov
inc
es
jbe
popf
push
dec
sub
dec
js
divb
out
popf
insl
jo
scas
inc
bound
push
push
in
push
and
jg
lea
inc
add
sarb
sbb
jne
in
insl
hlt
adcl
std
cmp
and
dec
outsb
push
inc
adc
xchg
dec
pop
pop
pop
leave
add
xchg
mov
cmp
mov
add
mov
sti
hlt
jge
or
dec
pop
rorb
lea
lcall
hlt
mov
push
dec
adc
icebp
jbe
movsb
dec
out
mov
pop
cmp
enter
lds
mov
adc
shl
invd
sbbl
sub
lea
fdiv
cmp
mov
loopne
imull
jp
cmc
jb
mov
jns
inc
pusha
push
xor
faddl
mov
outsb
clc
dec
movsl
loopne
cld
mov
mov
les
stos
jne
jecxz
push
data16
outsl
mov
cmp
mov
jmp
push
fisubl
stc
scas
insb
xlat
xchg
aas
inc
in
scas
jnp
jge
adc
xchg
sbb
icebp
mov
add
not
dec
sbb
data16
movsl
add
in
lret
sub
lahf
gs
ja
pop
pop
cltd
dec
xor
jge
sti
test
pop
cmp
clc
gs
xchg
dec
cld
cmp
rorb
pop
out
jmp
dec
idivb
pop
pop
jne
push
inc
cmp
push
orb
nop
add
xor
pushf
mov
test
out
or
inc
jns
sbb
into
loop
push
sahf
cmp
pop
decl
or
sub
add
cmp
rol
les
int3
sub
pop
int3
sub
jmp
aaa
sbb
mov
lahf
sti
in
in
movsb
mov
lcall
fdiv
add
cltd
fnstenv
xor
fists
loope
dec
insb
in
lods
mov
je
inc
cmc
in
lock
mov
dec
jnp
cli
jae
aas
xor
packssdw
or
aaa
ret
mov
jl
xor
jge
and
xor
insl
pop
xor
sbb
dec
sbb
out
sub
mov
lret
les
cmp
push
pop
mov
int3
leave
mov
pop
pop
dec
mov
inc
mov
adc
xchg
sbb
fdivl
and
pop
push
mov
fs
xor
lods
xchg
sub
jbe
mov
cmp
rol
pop
and
call
mov
pop
stos
mov
inc
lea
xor
sbb
outsl
or
sti
out
scas
pop
or
lret
jge
add
out
pusha
hlt
cmc
ljmp
scas
or
mov
ss
movsl
push
lcall
mov
scas
movsl
cmpsb
mov
stos
jnp
add
mov
jg
decb
subb
and
dec
test
mov
imul
int3
out
add
icebp
xchg
push
sbbb
ja
pop
jmp
dec
fistps
add
push
sahf
out
xchg
out
loopne
pusha
sub
mov
ret
sti
test
insb
lock
cmp
mov
test
into
fldcw
cmp
dec
inc
scas
movb
divl
icebp
ret
icebp
cmc
xor
mov
sbb
or
jnp
insb
daa
jb
add
inc
popf
sahf
jne
dec
pop
jecxz
cmp
int
call
sub
sbb
in
add
mov
jbe
pop
push
psubusw
gs
mov
imul
push
jns
jns
sbb
fs
cmpsl
loope
cmp
fsubs
sub
inc
adc
xchg
inc
add
mov
mov
adc
shlb
dec
dec
cs
ret
rcrb
es
mov
lcall
and
xor
clc
cmp
mov
cmp
popf
das
repz
xor
sbb
out
xor
daa
cmpsb
ret
std
pop
arpl
lsl
hlt
popf
jae
xchg
mov
outsl
fincstp
mov
clc
ja
add
mov
fisttps
ja
fldcw
int
mov
sbb
push
test
popf
loope
scas
jbe
add
cmpsl
add
std
mov
adc
mov
cs
xor
push
and
mov
out
dec
inc
pop
lods
shlb
pop
mov
xchg
xor
sub
pop
jmp
das
roll
arpl
test
add
sub
popa
sub
int
orl
cmpsb
jae
leave
xchg
insb
fiadds
or
lock
daa
inc
decb
je
testl
or
push
popa
fidivrl
stos
xorb
mov
nop
orl
in
ds
in
lcall
jmp
dec
popf
push
push
mov
xchg
push
mov
adc
push
testb
push
push
pop
aas
xor
leave
add
sub
and
stc
rcl
sar
ja
push
push
sub
andl
add
movl
mov
and
add
xchg
enter
push
mov
imul
flds
fmull
xor
dec
sbb
scas
jnp
xchg
xchg
dec
jnp
movsl
and
sub
inc
sub
out
lret
push
cmp
or
add
push
add
jle
outsl
lret
sahf
xlat
inc
jb
xchg
add
jg
loope
lods
push
cs
inc
xlat
pop
pop
hlt
pop
mov
sahf
loope
rcrb
mov
sarl
jbe
out
xchg
je
push
and
fimuls
shlb
lahf
cli
lret
mov
mov
or
imul
push
mov
loopne
aas
push
test
test
mov
jb
sahf
mov
shll
or
mov
dec
sub
mov
or
and
mov
fwait
add
push
shr
sub
pop
push
xchg
and
and
mov
adc
adc
xchg
mov
push
in
push
loopne
es
inc
test
into
lret
pop
jns
mov
push
push
imul
mov
jmp
jge
jb
scas
lea
int3
or
push
jmp
cmpsb
jmp
aam
mov
mov
mov
xchg
add
popa
outsb
mov
xchg
dec
out
ljmp
jmp
add
jae
call
xchg
cmc
je
loope
pop
push
out
outsl
or
in
adc
fadds
and
dec
xchg
or
adc
pop
add
stc
mov
cmp
mov
daa
mov
sbb
mov
les
in
add
push
in
repnz
pop
mov
fistps
outsl
jmp
or
add
into
jne
enter
xchg
stos
mov
clc
sub
push
notb
cmp
inc
pop
mov
addl
add
sub
popl
icebp
fidivs
pusha
aam
jecxz
mov
sub
jmp
out
push
adc
or
repz
fnstcw
stos
dec
pop
sbb
pop
les
adc
pop
arpl
mov
xor
xchg
pop
stos
or
mov
loop
ds
jns
fcomps
mov
or
adc
dec
addr16
test
jne
pop
test
xchg
enter
fbstp
daa
push
outsb
insl
or
mov
call
dec
leave
push
add
aad
int
orl
mov
mov
call
mov
fwait
lock
and
xor
lret
jae
scas
sub
lock
jl
aas
hlt
push
idivl
push
pusha
lods
dec
imul
jecxz
mov
jo
lret
push
mov
adc
push
mov
sarb
test
lcall
push
dec
gs
mul
cltd
fidivrl
sahf
pop
xlat
insl
sbb
clc
pop
xlat
pop
pop
jnp
loope
mov
push
mov
sub
jecxz
cmp
add
push
je
pop
fcoml
mov
mov
ja
pop
movsb
mov
rorb
lcall
mov
imul
mov
mov
loope
loopne
jnp
stc
jnp
jbe
ror
pop
or
test
pmaxsw
aad
sti
lods
loopne
jge
xor
pop
ss
push
sbb
test
or
je
call
jle
je
insl
cmpsl
jmp
clc
stos
imul
je
cli
push
test
in
jmp
test
cmp
sti
jg
adc
ret
inc
call
dec
mov
push
inc
xchg
outsb
lcall
push
sti
out
pushf
inc
or
into
loopne
jmp
sarb
filds
pop
or
mov
in
xchg
cmpsb
loopne
xor
and
xor
mov
sbb
xlat
stos
jo
ja
mov
idiv
mov
stos
dec
in
cli
inc
mov
inc
add
ss
xchg
jmp
push
jno
dec
cmp
js
clc
mov
mov
sub
in
pop
ljmp
push
enter
inc
xchg
lahf
cli
adc
inc
or
jg
pop
sahf
mov
scas
into
sahf
ror
popa
dec
mov
sbbl
mov
pop
adc
bound
stos
xchg
mov
jp
adc
stc
push
xchg
xor
push
arpl
insb
sbb
fwait
pushf
dec
xlat
add
pop
orl
in
ror
movsb
bound
inc
push
xor
pop
pop
sti
repnz
cmp
xor
pop
xchg
xchg
rcrb
pop
stos
hlt
repnz
fcmovnu
jl
shlb
or
out
pop
lock
jns
push
add
ljmp
fildl
lock
fcompl
and
and
inc
xor
xchg
sbb
push
xor
lcall
enter
mov
inc
dec
mov
shlb
xlat
mov
fstps
das
push
inc
into
push
pop
and
push
jb
push
ret
fsubrl
repnz
or
ljmp
outsb
roll
jns
push
pop
xchg
mull
cmp
push
or
in
mov
sbb
sahf
cmp
xor
std
dec
adc
loopne
push
mov
lds
popf
and
les
es
outsb
popf
cmp
dec
push
scas
movsl
hlt
popa
adc
out
sbb
dec
add
mov
dec
xor
bound
dec
add
aam
pop
cmp
loop
lret
jle
xchg
loop
jge
andb
das
data16
mov
mov
mov
aam
push
push
dec
shrl
push
and
int
xor
sbb
pop
cmp
dec
mov
pop
and
mov
and
shl
out
xchg
add
pop
and
es
outsb
adc
cltd
sbb
test
jl
gs
adc
xor
dec
scas
jo
dec
jb
xchg
loope
and
xor
dec
leave
fsts
jns
sbb
inc
in
cmp
jnp
call
out
insb
lcall
adc
mov
lock
iret
jns
sbb
in
adc
jmp
enter
mov
int
cli
sub
mov
push
push
inc
or
or
cwtl
xchg
cli
cmpsb
jge
lds
jb
lea
dec
aaa
adc
sub
mov
mov
inc
push
scas
lds
push
or
psrad
mov
jno
and
cmp
addr16
cs
in
push
sahf
cmp
aaa
jbe
inc
fisttpl
inc
stc
mov
pop
push
jnp
decb
adc
xor
push
ljmp
cmc
xchg
fildl
loope
push
mov
sahf
cmp
pusha
mov
push
inc
xor
mov
aad
shr
test
cmpsb
cmp
and
je
lock
mov
in
xor
hlt
out
pop
jp
out
aad
cmp
inc
push
fcomps
mov
adc
mov
testb
xor
gs
ret
xor
cmpsl
hlt
cmp
push
test
xor
dec
fisubs
cmp
fst
pop
aaa
ja
adc
mov
mov
sbb
out
nop
jnp
rorb
lods
xor
and
jns
xchg
sub
je
cmp
mov
jge
out
xchg
pop
lds
pop
lods
pop
fcoms
push
xchg
ss
mov
loopne
pop
movsl
push
mov
mov
test
xchg
push
inc
int3
xchg
fxam
dec
push
imul
xlat
shll
inc
ret
lods
das
add
pop
sub
push
adc
loopne
sub
jnp
scas
mov
pushw
into
push
xchg
jmp
add
addr16
pop
les
leave
cmp
sahf
pop
push
fistl
movsb
aaa
ja
cli
and
or
cmp
repz
rorb
pop
out
adc
ret
xchg
rolb
jle
fiadds
add
addr16
pushf
and
imul
xchg
js
jmp
pop
mull
enter
push
push
iret
imull
adc
mov
stos
inc
cmpsl
mov
mov
xor
lods
je
scas
adc
pushf
mov
fcom
int3
and
dec
mov
dec
std
arpl
popa
loope
inc
xor
cltd
mov
cmp
fistps
fdivr
sbb
lods
pop
leave
jne
inc
sub
sub
inc
cmc
fs
sbb
push
mov
push
imull
sbb
addr16
sahf
jns
adc
xchg
jle
les
push
out
adc
jp
stc
xchg
sbb
lods
push
sbb
xor
xchg
dec
popa
xor
pop
xor
sbb
lcall
bound
pusha
mov
dec
push
pop
add
stos
pop
and
push
enter
out
cmp
fwait
mov
dec
mov
mov
xchg
popa
xchg
jl
push
rcrb
pushf
inc
ret
inc
gs
bound
jmp
sbb
aas
xchg
jmp
and
or
push
sti
jnp
loope
dec
fmul
out
lock
push
movsl
sub
pop
lods
or
mov
mov
pop
inc
cmpsb
popa
inc
sub
dec
mov
add
xchg
das
dec
sbb
xchg
out
mov
fsubrl
push
cmc
push
xchg
in
lea
adc
jg
xor
call
rcl
add
popa
mov
mov
inc
dec
test
inc
push
inc
ret
int3
int
push
ret
and
and
hlt
je
loope
inc
test
jg
sbb
pop
das
out
out
test
sub
in
jno
scas
and
push
int3
push
mov
xchg
fimull
jge
fcoms
adc
jns
ret
mov
jbe
push
dec
or
push
mov
adc
clc
mov
xchg
sub
xchg
mov
test
sti
mov
fmuls
outsl
sub
das
ds
push
mov
aaa
dec
and
clc
mov
faddl
clc
jnp
nop
in
mov
out
lea
rclb
adc
dec
ljmp
adc
jbe
bound
test
push
pop
mov
fwait
sbb
nop
outsb
dec
push
adc
lods
or
mov
jnp
pushf
aam
popa
pushf
test
inc
xor
in
bound
xor
ret
addr16
int
mov
stos
mov
test
fadd
int3
xchg
test
inc
cwtl
pop
inc
inc
ja
js
shll
adc
gs
adcl
call
nop
cmp
js
testb
push
orl
push
enter
addl
iret
jbe
out
add
push
mov
push
sahf
sub
inc
mov
mov
pop
insl
mov
sbb
test
aad
in
xchg
mov
test
cmp
fcompl
and
stc
cmc
push
in
dec
sub
sub
outsl
loop
dec
lcall
push
or
in
jl
inc
cmp
jne
or
mov
sub
cltd
sbbl
sbb
out
fsubrl
in
out
jae
push
cld
imul
inc
jo
mov
out
adc
adc
icebp
jmp
aam
mov
pop
fistpll
lds
fsubrs
sbb
in
jbe
push
data16
mov
cmp
mov
cmp
mov
pop
mov
jne
push
imul
lcall
pusha
jmp
shl
add
roll
mov
mov
in
xor
adc
push
imul
aam
loope
out
jge
outsl
add
int3
mov
cmp
xor
nop
scas
imul
js
xchg
movb
or
jecxz
push
repz
mov
jmp
push
inc
mov
subb
jl
jae
jo
xchg
xchg
jg
sbb
add
mov
movsb
enter
dec
jg
push
stos
adc
repz
stos
movsl
jno
hlt
lcall
cmp
in
cmp
in
mov
inc
or
push
mov
add
sbb
sbb
mov
arpl
adc
inc
std
dec
push
mov
fists
push
scas
or
enter
adc
shrl
insb
jmp
cwtl
sub
mov
ds
and
adc
in
sub
lret
iret
ret
ja
movsl
mov
in
jns
push
sub
fisttpll
lea
and
mov
int3
jnp
jbe
ficomps
jnp
xchg
dec
pop
js
lcall
daa
in
jno
lahf
sbb
inc
cmpl
lods
out
cmp
push
outsl
jae
cli
arpl
cltd
out
imul
mov
vpslld
es
fstl
pop
int
dec
mov
adc
call
push
insb
sub
cld
lock
mov
jae
testb
gs
pop
js
fs
insl
adc
movsb
ficomps
jle
fcomps
leave
fwait
pusha
pop
pop
pusha
mov
popa
test
ret
call
pop
mov
jp
mov
sbb
imul
mov
adc
xchg
sbb
jmp
jp
dec
xor
or
add
ja
addr16
enter
pop
addr16
imul
jnp
xor
pop
xchg
dec
out
sbb
mov
push
xor
mov
notl
mov
int3
or
sub
nop
pop
xchg
addb
adc
pop
movsl
inc
rclb
lods
pop
inc
aam
push
clc
inc
adc
pop
leave
sbb
sub
adc
and
and
test
mov
leave
arpl
in
or
dec
sti
add
lcall
es
adc
mov
lret
sbb
inc
cli
jle
arpl
jne
mov
out
mov
gs
repz
outsl
iret
jmp
leave
fsts
jae
orl
cltd
or
xor
and
mov
xchg
cwtl
lods
fs
imul
and
push
outsb
cld
stos
sub
xchg
cwtl
mov
xchg
ret
out
jg
lret
pop
std
push
std
fwait
enter
xlat
and
push
inc
js
or
add
adcb
inc
sbb
adc
repnz
iret
mov
xchg
jo
hlt
jno
dec
inc
outsb
ret
sbb
lret
xchg
inc
test
mov
outsb
shl
imul
outsb
and
add
lahf
mov
jnp
fxtract
sahf
cs
push
sbb
jp
push
lock
pop
inc
lods
pop
shrl
jecxz
inc
icebp
or
dec
push
shll
pop
les
cmp
je
adc
mov
ds
xchg
adc
std
cwtd
sbb
std
insb
enter
aas
jno
lock
popa
inc
imul
and
mov
rorl
and
sub
dec
iret
mov
jbe
mov
movhps
fidivl
lods
adc
in
hlt
and
cmp
lahf
rorb
cmp
inc
ljmp
sti
leave
add
out
in
nop
push
loope
div
jno,pn
inc
fwait
mov
in
xchg
mov
loopne
mov
popf
cli
inc
ds
insl
xor
mov
push
and
test
mov
ss
and
aam
js
mov
adc
push
ljmp
jbe
pushf
fisubrs
dec
or
ljmp
xchg
and
enter
testl
int3
scas
or
popa
jp
push
dec
and
lods
fsubrp
push
xor
adc
and
aad
ret
sbb
mov
cmpsb
idivl
add
jb
cmp
cmpsb
push
icebp
pop
dec
mov
jns
scas
iret
stc
scas
mov
jo
jae
repz
subl
loope
sbb
in
movsl
mov
sbb
mov
out
out
inc
push
cs
movsb
cld
jno
mov
ss
mov
popa
lods
mov
inc
in
test
jmp
jnp
std
test
negl
mov
stos
xor
nop
test
mov
mov
repz
sbb
push
fldl
cmp
jecxz
stc
sti
xchg
dec
xchg
aad
push
clc
mov
lret
aad
mov
leave
inc
repz
ds
mov
mov
shll
mov
mov
shll
adc
adc
ret
sub
pop
mov
adc
loope
push
mov
pop
das
or
outsl
dec
sbb
add
or
mov
shll
insb
mov
pop
inc
mov
dec
jne
loope
leave
data16
lret
xchg
mov
mov
test
or
cli
mov
sub
mov
sub
iret
dec
out
add
sub
pushf
cmp
lods
xchg
add
in
xor
insl
inc
stc
xchg
push
cld
and
or
js
adc
in
sbb
movsl
cld
cmc
mov
push
iret
cltd
sub
sub
push
mov
adc
mov
xchg
fildl
mov
pop
pop
mov
rcrb
push
cwtl
mov
cmpsl
sub
sbb
sub
lock
jg
sti
mov
or
into
int
and
and
sbb
cmp
or
and
pop
arpl
mulb
pop
mov
push
sbb
test
xchg
fcoms
add
outsb
mov
sbb
lret
dec
mov
and
aad
mov
out
adc
cmc
adc
idiv
mov
clc
add
pop
mov
sbb
sbb
movsb
xchg
les
jmp
loope
cli
outsl
pushl
xor
outsb
xchg
adcl
push
mul
sti
divl
dec
call
xor
ss
ss
xchg
cmpsl
xor
and
lods
mov
xchg
ja
sub
fisubl
jno
mov
mov
rorb
aas
cmp
sbb
ja
mov
xchg
xchg
or
inc
std
cltd
loopne
jo
push
xor
and
mov
pushf
rcll
in
push
inc
scas
test
in
cltd
or
pusha
or
ja
int3
mov
pop
test
push
call
add
clc
enter
dec
out
adc
pop
stos
push
adc
xorl
enter
sti
inc
push
jecxz
out
inc
adc
sbb
cmpsb
add
dec
repnz
mov
mov
mov
pop
pop
in
int
and
mov
aaa
sbb
loopne
pushf
loope
and
je
imul
test
pop
add
movsl
cmp
pop
push
adc
jp
sbbb
int
sbb
jns
pushf
sarb
dec
push
or
inc
arpl
sti
faddp
imul
test
cmp
xor
ja
mov
movsl
mov
mov
sbb
in
imul
cmc
dec
ss
sbb
stos
add
jge
out
shl
mov
adc
or
push
jnp
loop
adc
lds
fs
push
and
repnz
push
adc
test
or
das
lret
pop
scas
mov
xchg
sbb
int3
fwait
adc
jae
cmp
divb
or
ficompl
loope
dec
jmp
cli
adc
pop
hlt
data16
addr16
mov
add
repz
mov
dec
lds
fmuls
cmc
out
xor
inc
out
sbb
iret
imul
stos
inc
es
xor
call
jg
xchg
dec
stc
loop,pn
fsts
pop
jmp
fists
pop
jmp
imul
jae
sarl
leave
clc
rorb
push
xor
xchg
sahf
or
cltd
mov
mov
jmp
xchg
rcrl
push
testb
lods
fcoml
fxch
jnp
push
in
push
lea
pop
cmp
in
sbb
dec
add
push
sahf
cld
and
push
xchg
pop
push
gs
mov
rcl
mov
iret
adc
outsb
mov
xor
fxam
xchg
add
test
insl
adc
mov
icebp
jge
jns
test
dec
xchg
xchg
and
mov
dec
mov
data16
fsubs
jmp
push
fstpt
sub
lods
inc
fwait
pop
sub
lret
add
mov
call
pop
aas
xchg
sahf
ret
orb
lret
dec
daa
and
jp
cwtl
xchg
movsb
xor
add
movsl
sub
fidivs
cmp
or
cmp
cmp
shl
cli
mov
je
lods
shrb
mov
or
test
mov
clc
fwait
xor
mov
arpl
jp
push
or
movsb
lcall
fcmovnu
push
mov
dec
add
popw
and
lods
mov
mov
xor
add
mov
push
pop
sbb
mov
je
stc
jge
ja
jg
arpl
push
or
xchg
cld
andl
icebp
pop
mov
mov
mov
repnz
mov
jecxz
mov
pcmpeqw
and
aam
pop
in
mov
sub
cmp
cmp
xor
pop
jp
pop
fdivs
loope
lret
jb
sub
cmovne
jo
jecxz
pop
add
mov
cmpsb
pop
push
clc
push
hlt
sahf
jp
imul
xchg
xlat
xchg
cltd
insb
mov
jnp
sub
fisubrs
movsb
xor
or
imul
and
aas
xor
pop
xchg
sbb
adc
sub
jmp
pop
clc
cmp
lret
cmc
fistl
jns
or
dec
mov
cmp
fnstenv
jno
ficomps
adc
xor
loopne
enter
and
push
sub
popf
fildl
sub
loopne
cmpsl
xchg
xlat
les
add
out
insb
or
int
sbb
jo
mov
stc
andb
push
push
adc
sbb
ss
or
sbb
sub
insb
jae
mov
mov
and
fistpll
js
jmp
lds
lret
pushf
mov
jge
imul
xchg
loope
add
lret
adc
dec
lcall
xchg
inc
cld
mov
xchg
mov
mov
bound
cs
in
pop
in
sbb
popa
pop
shlb
std
stos
mov
stos
clc
sbb
insb
lret
je
mov
xchg
dec
loope
xchg
jp
test
or
lea
mov
data16
out
dec
xchg
jb
mov
add
pop
and
adc
insb
pop
pop
push
adc
cwtl
jmp
or
jg
mov
and
add
push
stc
adc
cmp
fdivl
lock
lahf
outsb
pushf
mov
addr16
inc
icebp
pop
push
out
mov
xchg
insl
xor
adc
jns
js
mov
adc
pop
mov
adc
sub
pop
mov
stc
or
in
popf
dec
stos
inc
cld
sbb
mull
inc
lret
jl
fldl
cmpps
jp
or
and
sub
mov
mov
aam
and
inc
and
fwait
mov
stos
or
jl
pop
icebp
sbb
push
scas
add
cwtl
icebp
jbe
mov
mov
cs
rcr
loopne
pop
jbe
out
loop
mov
aaa
adc
mov
sub
pusha
adc
fnsave
ss
or
divl
jne
or
aas
addb
adc
sub
jp
sub
mov
lahf
pop
aam
cltd
add
jg
test
push
ds
loope
in
and
push
push
fidivrs
pop
aas
lret
cwtl
test
jmp
mov
movsl
adcl
push
push
sbb
imul
sbb
xor
push
sub
push
adc
clc
pop
repz
or
xor
xchg
pushf
loope
xchg
xchg
sub
fwait
xchg
outsb
pop
imul
and
sub
in
mov
stos
idivb
jne
jle
inc
jl
lret
lds
cmp
enter
add
gs
movsb
cli
push
pop
sbb
and
or
and
in
popa
push
and
or
in
jno
fcomps
lret
push
icebp
adc
out
shll
jnp
dec
pop
push
out
xchg
rcr
jnp
testb
fildll
das
out
call
pop
pushf
in
jge
push
out
adc
push
mov
outsb
and
pop
andl
out
adc
lds
rcpps
mov
dec
xchg
cmpl
push
test
fucomi
xor
pusha
addb
mov
aam
movsb
cmp
les
ljmp
call
xchg
xchg
insl
fcom
lret
mov
mov
adc
jl
mov
mov
mov
dec
mov
sub
push
or
fstps
shll
sub
repnz
es
enter
fists
test
in
adc
mov
dec
xchg
xor
sub
dec
lret
loop
inc
loope
pop
mov
xchg
push
insb
aam
lcall
cmpsl
jnp
ds
subl
dec
subl
test
jg
mov
xchg
dec
int3
popf
das
fisubs
out
shrb
data16
test
mov
test
mov
jl
les
xchg
push
sub
rcll
dec
in
cmp
sbb
push
xchg
adc
lcall
mov
mov
inc
xor
sbb
xlat
xlat
add
test
sbb
adc
or
sbb
loope
cmp
mov
in
pushf
mov
cmp
or
pop
in
jp
push
and
xchg
add
push
sbb
xchg
in
jge
mov
mov
clc
and
in
jecxz
mov
lret
mov
pop
in
jne
std
jg
ljmp
int
add
mov
orb
pop
mov
sbb
sub
lcall
and
ret
aam
ja
jne
movaps
adcl
aaa
jmp
xor
mov
and
pop
loop
in
mov
cld
lock
repz
pushf
jge
inc
mov
gs
pop
mov
mov
mov
sbbb
jge
mov
adc
iret
cli
add
lahf
int3
xchg
adc
push
loope
test
mov
daa
imul
and
push
inc
xchg
imul
cmp
addr16
jecxz
dec
and
jae
js
push
cmp
leave
jl
xor
pop
mov
mov
dec
cmp
xor
fcom
enter
stc
jo
jl
movsb
jo
popf
sub
mov
fs
sti
or
sub
lods
ja
repz
xor
mov
stos
sub
mov
fdivrs
lea
lea
les
xchg
mov
fdivrs
cmp
stos
add
lods
lret
call
mov
dec
pop
cmp
adc
arpl
enter
es
fldz
cmc
xor
push
adc
xor
jl
inc
outsl
adc
bound
les
lcall
sbbl
or
jbe
jb
or
cmp
pushf
movlps
lds
push
add
out
loopne
mov
lds
mov
fsub
leave
mov
adc
inc
sub
js
sbb
pop
inc
cli
xchg
adc
insb
inc
in
jg
cmpsl
add
inc
or
dec
jge
jb
in
and
add
and
int
pop
jecxz
lcall
pop
mov
std
sub
mov
sub
addr16
dec
sub
dec
lods
cmpsl
sub
loope
aam
aaa
adc
push
pop
xor
repz
fmul
dec
jo
and
mov
std
mov
nop
pop
sub
lret
fmul
xchg
inc
adc
cltd
aam
mov
sbb
lods
dec
inc
movsb
or
negb
dec
in
inc
cld
into
or
test
mov
imul
pop
sub
xor
out
inc
clc
jnp
andb
and
jnp
mov
jbe
jle
jno
out
test
jge
dec
jne
inc
rcll
xor
and
ficoms
jg
sub
lret
pop
int
ljmp
cmp
ds
dec
add
aas
fcoms
out
fcmovnb
mov
cmpl
pusha
push
notb
aam
popf
das
and
and
xchg
pop
jecxz
or
mov
pop
shl
lcall
cmp
mov
and
jo
jne
pop
inc
pop
jmp
loope
and
shrb
mov
sub
dec
sbb
cmp
out
dec
data16
leave
test
xchg
mov
push
dec
mov
loop
repz
pop
fimull
aad
mov
outsl
inc
add
orb
maskmovq
mull
enter
cld
inc
push
jbe
jg
dec
jle
divl
mov
dec
js
or
adc
movsl
jne
lret
mov
lret
mov
and
ja
iret
push
insb
js
xor
fwait
pushf
dec
jmp
mov
pop
or
mov
dec
ret
out
repz
fisubrs
sahf
dec
ret
push
mov
or
cmp
adc
adc
push
lret
sbb
mov
mov
lods
mov
or
in
sbb
andl
insl
repz
inc
add
push
mov
jbe
leave
pop
mov
loop
jne
xor
ja
mov
in
mov
jae
lods
sbb
jb
mov
repnz
incb
hlt
inc
stc
shlb
adc
cmpsb
imul
or
jb
pop
add
push
mov
or
adc
xor
adc
cmpsl
roll
mov
leave
nop
orl
sbb
xchg
stos
pusha
xchg
xor
rcrb
out
ljmp
xor
test
xchg
lret
aas
arpl
and
test
jmp
ret
dec
fs
cmpsb
ja
jmp
mov
and
lods
mov
mov
leave
notl
mov
pusha
cmp
xchg
mov
add
fcoml
pop
and
out
mov
xchg
sub
flds
lret
sub
inc
push
stc
in
insl
lret
push
loop
icebp
mov
and
adc
push
and
bound
xchg
jmp
test
inc
into
stos
mov
jmp
xchg
stos
call
sahf
jae
gs
push
mov
add
or
push
jmp
pop
in
mov
xchg
pop
in
stc
sub
or
push
lcall
in
rcl
push
jge
into
pop
lahf
xchg
aas
inc
stos
cmp
and
rcr
arpl
lcall
pop
jmp
pop
mov
aaa
scas
jno
jne
adc
ja
rcrl
movsl
and
jl
in
ja
xchg
das
pushf
ljmp
lock
sub
pop
or
xchg
jne
jp
icebp
xchg
clc
mov
jl
push
iret
out
ror
nop
pop
aad
cmp
sarl
adc
push
mov
dec
iret
hlt
ja
mov
jnp
dec
sbb
mov
cmp
aaa
mov
sub
add
loop
jle
or
mov
lea
jnp
sub
mov
jecxz
les
outsl
movsl
jne
pop
popf
and
inc
inc
push
cmp
xor
stos
pop
sub
adc
clc
push
ss
enter
cmp
push
out
std
aas
mov
loope
popa
repnz
sbb
mov
jecxz
and
mov
push
push
inc
xchg
inc
ss
cmpb
xor
cmpsl
push
pop
mov
fidivrl
sarl
aas
and
fsubrl
jl
inc
mov
hlt
test
xchg
pusha
das
sub
cmc
js
mov
daa
adc
jno
data16
or
sbb
cmp
xor
pop
stc
mov
or
mov
daa
scas
loopne
dec
add
xlat
push
mov
and
inc
aam
iret
mov
jne
cli
mov
cmp
daa
jp
int
fmull
jp
mov
jne
lret
fcompl
bound
les
adc
jl
incb
out
pop
out
xchg
and
lea
std
pop
out
cmp
movsb
imul
inc
jbe
sub
mov
lods
inc
dec
pop
in
jbe
adc
mov
test
mov
lods
clc
fiaddl
dec
sbb
add
sub
jp
decb
xor
mov
push
xchg
jge
jmp
sbb
push
xchg
push
inc
lret
mov
or
or
fidivrs
mov
xlat
daa
scas
sub
test
and
pop
xchg
fptan
push
lods
mov
arpl
outsb
das
dec
adc
js
dec
aam
ja
mov
loop
mov
sbb
push
ss
sbb
fldcw
mov
jecxz
call
lret
out
addr16
xchg
add
daa
jns
rorb
cs
push
jg
jbe
imul
inc
mov
insb
pop
sbb
sbb
inc
int
xchg
movsb
cmp
stos
ret
das
imul
push
push
clc
pop
cmpsl
jp
repz
fstpt
lods
mov
in
push
sub
pop
sarb
sub
ret
sbb
lock
out
pop
dec
lret
ficompl
cwtl
imul
or
out
cmp
mov
aad
mov
mov
movsl
subb
cld
add
stos
pusha
call
stos
pop
addb
lahf
imul
imul
clc
jmp
adc
mov
mov
xor
insl
adc
mov
xor
sahf
cs
push
sub
int
dec
mov
icebp
mov
out
cmp
dec
sbb
jbe
lahf
js
imul
mov
mov
jge
negl
ret
arpl
fdivrs
xlat
in
xchg
mov
mov
popf
dec
inc
int3
xor
fs
js
push
cwtl
inc
adc
aam
mov
xchg
inc
sub
cmpsl
sbb
int
das
hlt
repz
out
out
mov
fwait
cmp
sbb
mov
or
loop
and
insl
xchg
mov
lea
mov
icebp
sbb
rcr
or
popa
es
xchg
pop
leave
push
fcomps
ja
ljmp
dec
jbe
adc
add
cmpsb
lret
jnp
mov
push
sbb
pop
xor
aaa
dec
and
push
push
cli
leave
adc
hlt
jae
lea
pop
jnp
mov
int3
xchg
fistpl
leave
push
fs
cmp
mov
ret
lods
sub
in
xor
inc
push
pop
and
push
arpl
loope
pop
mov
enter
push
push
fwait
mov
or
stos
jle
scas
or
jge
in
add
adc
pop
cmp
push
dec
fsubs
xchg
ja
xchg
mov
dec
daa
push
push
aaa
dec
stos
arpl
jb
std
push
jmp
sub
test
std
mov
sahf
pop
ja
mov
sbb
jmp
mov
outsl
lds
shr
pop
pushf
mov
mov
push
movl
jo
xor
fcoms
jns
scas
call
mov
add
add
mov
and
scas
jno
cmp
mov
arpl
add
clc
mov
mov
push
mov
mov
xor
orb
pop
repz
pop
out
sbb
movsl
ficompl
rcr
mov
test
add
and
outsb
push
inc
inc
push
mov
lods
cmp
sub
lea
push
add
shlb
inc
into
sub
jae
ljmp
pop
das
pop
js
pop
adc
sbb
jnp
int3
shl
frstor
push
fwait
lods
pusha
lods
subl
cmpsl
movsb
add
sub
scas
adc
scas
pop
fsincos
faddl
dec
js
fcoml
sub
adc
cmc
mov
jo
dec
cli
jmp
inc
jne
sbb
mov
fstpl
add
add
mov
pop
hlt
mov
or
cld
inc
mov
shl
cmp
cmpsl
adc
push
repnz
notl
pop
lods
lcall
out
xchg
arpl
dec
andl
xor
cmp
and
pop
repz
dec
fldl
xchg
mov
add
dec
lcall
xchg
fisttpll
jg
mov
xchg
pop
js
fldt
cli
cmc
test
mov
mov
push
cmpsb
emms
test
repz
ja
xchg
bound
mov
sbbl
sbb
jno
or
pop
sarb
adc
fistps
rcr
nop
ljmp
clc
cmp
test
fistpl
cld
scas
adc
addr16
sub
jge
lcall
mov
shll
adc
dec
ret
loop
out
adc
test
sub
or
inc
push
fistpl
pop
push
nop
stos
out
lods
leave
or
out
xor
dec
jecxz
rcrl
push
jp
into
lahf
sub
cmp
jg,pt
rorl
pop
fdivrs
std
and
fidivrs
adcl
push
out
in
cmpsb
lcall
imul
ljmp
cmc
pop
push
sar
cmp
fwait
arpl
inc
clc
fdivrl
ret
mov
aaa
movl
jnp
and
ret
xor
add
mov
iret
adc
adc
enter
xchg
jns
mov
mov
mov
call
je
ror
xor
jnp
sub
test
sbb
std
lock
fbld
cmp
mov
push
mov
adc
je
dec
jle
mov
aas
int
test
and
in
inc
add
xor
and
push
enter
mov
stos
cmp
mov
push
mov
test
or
mov
xlat
sub
xor
pop
adc
xchg
bound
or
add
outsb
pop
push
xchg
test
adc
or
fdivl
mov
je
push
enter
addr16
cs
lret
pusha
jne
pop
pop
out
fsubrs
inc
repz
ret
mov
out
in
in
movsb
add
inc
mov
fbld
xchg
push
add
mov
jge
imul
add
pop
adc
shll
lret
decl
xor
and
aam
xchg
inc
pop
test
cli
xchg
xor
dec
sbb
push
orb
cld
push
push
icebp
adc
aad
mov
insb
push
xor
lea
cmp
sti
bound
or
cmp
adc
mov
rcr
stos
fldt
clc
jo
jp
ja
and
xor
jecxz
or
nop
and
jl
pop
mov
outsl
clc
or
rcrl
mov
cmpsl
mov
cli
outsb
rol
xor
or
mov
nop
loop
dec
ret
or
sub
fadds
out
iret
pop
mov
ret
das
in
sbb
aas
push
test
lods
xchg
inc
outsb
jns
sub
cwtl
fistpll
adc
test
inc
pop
fisubl
outsw
xor
jno
dec
jecxz
call
cmc
repz
mov
jnp
jno
stos
fbld
pop
dec
idivl
xor
jle
dec
arpl
push
int3
lcall
push
ljmp
cwtl
sbb
int
iret
inc
mov
lret
sbb
sbb
inc
repz
push
add
fwait
mov
fdivs
add
inc
mov
pushw
rorb
push
adc
rcr
shlb
push
adc
nop
sub
mov
adc
mul
imulb
lcall
test
push
rcrb
xor
mov
pop
sarl
scas
sub
lret
pop
mov
or
fcmovnb
scas
sbb
dec
mov
mov
faddl
int3
mov
cs
int3
mov
cmp
pop
lea
mov
icebp
ljmp
push
ret
lret
outsl
push
fwait
add
out
mov
xorb
lret
out
lods
and
aad
add
adc
mov
dec
lcall
jp
in
jbe
andl
mov
arpl
push
es
ret
cmc
pop
mov
xor
idivb
lcall
sub
sbb
xor
or
stc
and
outsb
pusha
mov
loop
jne
mov
jmp
test
jb
dec
int
cltd
mov
jae
pop
mov
lcall
lss
jle
imul
rolb
leave
mov
insb
and
adc
mov
pop
add
dec
lods
xchg
mov
push
mov
ret
add
ret
ret
movl
repnz
scas
fadd
cli
or
jae
mov
mull
mov
pop
lret
sbb
jmp
sub
nop
fiadds
sub
movl
int3
js
sbb
fstpl
or
push
xor
mov
jnp
lahf
lret
stos
adc
xor
cmc
loope
or
test
push
idivb
pop
xchg
pusha
rolb
loopne,pt
lret
cmp
fstl
scas
push
or
sahf
stos
lock
dec
cmp
pop
jns
out
sbb
imul
pop
pop
pop
adc
cs
push
jns
scas
xchg
add
xchg
and
int
lods
loop
sub
psubd
pop
cmp
enter
sub
negb
hlt
shll
mov
cli
xor
cmpsl
cmpsl
lods
shrb
jmp
mov
ja
mov
fs
push
xchg
xchg
out
inc
cmp
loopne
test
mov
push
mov
lock
hlt
add
mov
dec
pop
loopne
adc
jl
lahf
mov
xchg
pop
jmp
mov
adc
pop
jg
xor
push
and
lds
mov
fisubs
lods
mov
dec
push
out
int3
insb
nop
fadds
cmpsl
jmp
hlt
fldl
add
cltd
movsb
pop
data16
add
cmp
mov
aas
push
push
repz
dec
sbb
fwait
aad
das
mov
popa
mov
sbb
leave
jb
int3
xlat
dec
mov
inc
mov
dec
mov
imul
jnp
cs
daa
into
test
jb
popa
xchg
xchg
push
dec
cmc
negb
jl
jp
inc
sub
cmp
and
push
hlt
sub
jo
bound
xchg
fldt
sti
les
add
push
test
mov
jg
add
xor
scas
sbb
xor
add
and
inc
and
jg
sahf
in
mov
push
adc
mov
sbb
ret
popa
mov
ficoml
lock
pop
iret
lods
add
or
repz
lods
out
lds
lods
push
lods
test
movsl
push
scas
mov
push
out
aad
lret
cmp
push
sbb
int
lret
inc
std
es
pop
enter
gs
nop
fcoml
xchg
jl
pop
mov
or
xchg
lcall
push
in
test
lcall
lock
mov
cmc
imul
pop
fscale
jp
mov
push
inc
and
xor
push
and
outsb
testl
out
jmp
ja
in
rclb
cmp
not
lds
dec
and
inc
mov
test
add
hlt
lods
pushf
mov
aad
xchg
push
fisubs
fisttpl
add
in
mov
pop
inc
and
push
scas
fwait
dec
je
or
stc
aam
mov
mov
or
and
stos
jge
push
or
push
and
jg
lock
int
loopne
stos
mov
addl
imul
popa
jbe
mov
fs
in
dec
ret
add
inc
jae
sahf
testl
in
mov
xchg
pop
jo
xchg
out
leave
rcrb
add
sbb
jmp
mov
push
pop
jno
adc
inc
adc
lret
clc
fcompl
pushf
lock
and
and
or
mov
and
outsl
mov
push
rorb
pop
adc
ds
mov
sbb
cmp
sub
push
lret
ficoml
and
sbb
clc
sbb
cmpsl
lcall
mov
fildl
jmp
sbb
pop
inc
test
nop
inc
sbb
adcl
std
out
incl
adc
jle
mov
enter
jmp
mov
sbb
rcll
mov
and
add
stos
mov
mov
sub
mov
push
jg
iret
movsb
sbb
in
ret
aaa
and
in
fadd
addr16
xchg
sar
out
inc
and
pop
lcall
out
push
inc
sub
cwtl
cmpsl
stos
inc
cmpsb
sub
mov
test
cmp
aaa
sub
push
insl
fcmovnu
in
daa
inc
xor
sbb
jle
dec
push
push
stc
xchg
clc
mov
dec
cmp
jns
jp
jnp
or
jp
mov
xor
ret
arpl
push
test
inc
hlt
xchg
mov
fisubs
pop
xchg
into
in
repnz
fs
enter
mov
push
or
in
es
mov
and
xchg
push
jmp
xchg
jg
sub
dec
fdivrl
fldl
lock
cwtl
cmpsb
aas
inc
lret
inc
add
or
outsl
in
cmc
test
int3
aaa
xor
mov
push
jmp
mov
adc
sbbl
cmp
das
insb
or
jp
mov
lods
push
aad
mov
cmp
add
test
pop
cmp
es
sub
test
mov
adc
sub
pop
adc
push
rol
sub
aaa
fs
add
or
popf
lcall
rorb
push
mov
mov
sub
loop
sub
jo
dec
dec
pop
xchg
jmp
pop
lods
mov
and
iret
outsb
mov
mov
pop
xchg
in
scas
aam
cltd
mov
fimull
inc
pop
mov
mov
mov
sbb
mov
cltd
push
push
insb
or
pushf
push
inc
mov
inc
sub
insb
lods
mov
dec
sbb
mov
mov
jmp
mov
sbb
ret
js
arpl
mov
ret
cmp
jns
mov
jns
movsl
loop
mov
cltd
dec
jb
cmc
push
jl
sarl
lea
and
adc
mov
les
scas
loop
cmp
push
jge
xchg
out
sub
aad
js
cltd
and
ret
dec
iret
dec
mov
lock
jle
xchg
inc
imul
sub
ljmp
xchg
and
sbb
std
mov
or
fdivs
loope
xchg
test
and
mov
xor
inc
jnp
into
adc
cmp
add
jle
in
xor
xchg
jno
test
in
movsb
leave
sub
cli
call
xor
popf
push
scas
mov
fstl
test
sub
nop
push
outsb
movsb
xchg
test
test
test
ja
sti
popf
push
add
push
adc
pop
lock
mov
leave
push
pop
jnp
jg
xor
std
pop
dec
pop
mov
hlt
scas
add
and
arpl
add
cmp
and
jb
call
in
xor
test
imul
cli
cld
cltd
fimull
stc
add
pop
mov
loop
out
mov
dec
add
mov
fs
pop
push
fisttpll
cli
daa
lock
out
pop
push
icebp
or
hlt
mov
loop
mov
mov
mov
movsb
dec
mov
and
cmpsl
push
inc
sbb
add
pop
push
lds
mov
ljmp
jnp
push
repz
gs
or
outsb
xchg
popa
int
mov
xchg
lods
mov
push
mov
cmpsl
stos
cmpsl
adcl
les
xor
push
movsb
data16
or
and
inc
aad
cli
or
mov
mov
lahf
add
and
pop
je
and
cmpsl
in
daa
inc
xor
call
cli
fprem
jecxz
sti
mov
testb
sbb
dec
mov
dec
mov
mov
xor
stos
xor
imul
aas
adc
mov
test
add
xor
push
push
mov
mov
comiss
cs
aaa
scas
lds
jno
arpl
sti
mov
fisubrs
idivl
mov
adc
in
sbb
lahf
dec
adc
push
adc
mov
nop
pop
pop
lcall
repnz
cli
mov
ret
dec
adc
jle
dec
pop
pop
and
xor
loope
xor
arpl
daa
ljmp
aad
add
in
add
aad
mov
stc
pop
ret
mov
out
cmpsl
adc
arpl
mov
loopne
and
enter
movsl
lods
es
in
aam
pusha
pop
xor
push
pusha
pop
adc
dec
pop
scas
mov
push
out
sarl
loope
dec
mov
arpl
mov
int
lods
cld
out
daa
xchg
pop
and
iret
insb
hlt
push
pop
pop
adc
or
jecxz
cld
loop
push
rorb
add
sbb
rcll
jo
adc
pop
jle
movsb
dec
jmp
in
ficoml
mov
in
ds
and
jo
es
ret
outsb
fcomps
pusha
js
ss
xor
push
ficompl
cld
or
mulps
mov
fisttpll
pushf
push
insb
jnp
push
imul
jle
arpl
cmp
rorl
pop
add
jnp
sub
stos
aas
cmp
adc
rorl
test
pop
jl
sbb
loop
popa
jae
pop
xchg
and
dec
jnp
pop
mov
movsb
or
lea
shll
or
sti
or
inc
xlat
in
xchg
test
push
jle
push
scas
mov
jo
inc
outsb
xor
scas
in
enter
out
jno
mov
xor
iret
xchg
or
loopne
push
out
call
shll
xor
scas
lcall
in
mov
xchg
add
mov
jno
insl
pop
ds
orl
stc
pop
gs
sbb
insl
or
add
jbe
imul
mov
or
or
les
xor
sbb
pusha
xor
test
jge
xor
sub
andl
adc
or
mov
fisubrs
adc
inc
arpl
cli
sub
jno
test
xor
mov
sar
sahf
rcrb
call
into
stos
lahf
ss
fcomps
fwait
scas
shll
or
ret
rolb
cmp
rcr
movsl
fmull
sub
mov
sarb
ss
sub
pop
lock
in
push
popa
and
lret
add
out
into
in
xchg
or
subl
inc
pop
sub
in
pushf
mov
pop
xchg
in
or
sbb
push
dec
push
loop
cwtl
inc
ljmp
add
push
fwait
mov
sub
jne
mov
add
dec
lcall
add
lahf
mov
fs
call
mov
pushf
aam
jge
xchg
repnz
loope
adc
adc
jo
dec
shr
dec
xchg
stc
xchg
movsb
fadd
sub
rcrl
addb
cmc
stos
pop
sub
push
and
mov
mov
dec
inc
jmp
xchg
add
repz
lods
xor
out
xor
sub
cld
jns
into
xchg
fwait
dec
mov
push
adc
mov
push
dec
loopne
push
icebp
fisttpl
aam
or
xchg
jmp
jp
xchg
fs
negl
sbb
aas
mov
jg
push
add
stc
adc
or
xchg
mov
aaa
or
pop
cmpl
test
clc
add
and
scas
rcr
and
rorb
mov
popa
push
push
scas
adc
xchg
rolb
mov
mov
inc
das
mull
sub
xchg
div
xchg
rorb
aaa
aaa
fldl
xchg
int3
inc
jl
gs
test
mov
inc
push
jne
in
pop
mov
mov
enter
mov
dec
jbe
aas
xchg
inc
mov
lcall
mov
sub
xorb
pop
ficoml
lock
iret
sahf
cmp
gs
cmp
and
pushf
fsubs
xor
mov
dec
and
sub
xchg
or
lret
arpl
je
push
addl
movsb
test
cld
aaa
aam
jmp
jl
out
xor
das
stos
subl
push
mov
stc
mov
add
addr16
test
shll
inc
loope
cmp
sub
mov
mov
ja
jo
cmp
add
out
xchg
cmpsl
adc
ljmp
and
push
inc
pusha
xor
mov
jnp
push
sub
lock
push
stos
int
dec
xor
xor
test
ret
pop
scas
jae
jl
cs
xchg
sbb
pushf
xlat
jbe
inc
pop
or
jae
xor
add
movsl
hlt
lock
dec
or
cmp
dec
mov
scas
std
call
dec
out
inc
movb
movsb
stos
xchg
and
mov
sub
push
dec
mov
or
push
adc
into
subb
mov
int
ss
aas
sbb
mov
out
test
insl
inc
xor
ja
data16
dec
xchg
out
adc
mov
ret
test
test
cmc
pop
jmp
sbb
mov
push
not
cmpsb
dec
pop
mov
push
cmp
andb
or
mov
dec
clc
mov
testl
xor
push
flds
daa
shrl
popf
dec
xchg
lahf
mov
or
addb
mov
cmp
add
inc
push
loope
mov
je
je
fs
in
mov
add
inc
and
push
lea
mov
ss
shr
je
in
adcb
cltd
cmp
add
mov
jb
push
pop
lret
fcomip
icebp
cmp
and
inc
xor
add
sti
and
cld
xchg
sbb
mov
add
sahf
lds
mov
test
cmc
les
les
std
negb
dec
popw
lret
mov
stos
lcall
dec
sub
mov
add
cwtl
insb
sub
das
popf
or
test
mov
push
lods
push
add
mov
xchg
xchg
push
add
and
xchg
xchg
pop
adc
pop
dec
divb
fisubl
dec
les
add
and
push
int
mov
ja
lds
mov
les
sahf
out
adc
loope
mov
inc
xchg
adcl
mov
mov
and
pop
test
std
xor
int
pop
mov
jbe
adc
cmp
and
adc
cli
or
inc
jno
outsl
out
aas
outsl
adc
into
xor
into
jb
out
mov
clc
ljmp
cmpsl
push
jge
inc
push
cmpsb
jb
das
add
adc
cmc
sub
xor
lcall
xchg
inc
push
test
lods
stos
lahf
sbb
icebp
mov
loop
sbb
stos
ret
and
into
xor
jecxz
and
mov
js
outsb
insb
pushf
mov
loopne
je
test
pop
push
clc
fs
movsl
xor
cwtl
insb
pop
xlat
outsb
mov
pop
mov
mov
enter
inc
pop
sbb
inc
imul
in
jge
aas
mov
jo
or
mov
aaa
push
fwait
sub
sbb
push
pop
adc
loopne
leave
xchg
loopne
sbb
inc
sti
adc
mov
pop
pop
pushf
aad
fisubs
xor
push
into
ljmp
mov
int
sarb
nop
subb
call
dec
dec
mov
ja
ljmp
into
and
and
mov
jmp
mov
xorl
mov
fistpl
aam
ficoml
dec
mov
jne
or
outsb
sub
mov
lods
iret
and
push
pop
jl
popl
repnz
push
lds
in
test
mov
jl
cmc
lcall
sbb
inc
test
icebp
pop
bnd
and
repnz
cmp
fistl
sbb
pop
pop
test
inc
or
push
test
sub
push
mov
test
adc
mov
jb
xchg
xchg
dec
out
pop
aas
or
jp
test
aaa
push
pop
call
jle
jmp
orb
sub
push
jl
and
push
ss
sub
andb
test
push
scas
sbb
cmc
mov
push
push
ljmp
stc
pop
imul
jle
sub
pmuludq
mov
and
add
mov
sbb
add
stc
out
or
stc
test
pop
hlt
push
mov
les
pop
movsl
sub
sbb
rorb
aam
adc
lods
out
out
sbb
sub
xchg
scas
daa
sbbl
stos
lods
cmp
and
pop
mov
or
xor
mov
bound
jns
lods
movsb
and
fwait
into
movsw
movsb
pop
sub
xchg
sub
xchg
xor
subb
sti
xor
fldt
icebp
ss
arpl
jmp
out
sbb
mov
jo
dec
addr16
outsb
cmpsl
fsubrs
nop
and
int3
pop
push
shl
ds
in
dec
jle
and
mov
mov
and
xchg
cmc
mov
add
xchg
mov
arpl
fs
stos
not
mov
pop
cld
xchg
mov
jg
pop
pop
sub
mov
push
or
mov
push
xchg
incl
cmp
adc
aam
sub
pushf
pop
mov
adc
add
inc
insl
rclb
fisubrl
lea
jbe
leave
lcall
jne
clc
es
push
dec
mov
cmp
dec
scas
inc
dec
jg
fcomps
xchg
ds
push
push
fyl2x
loopne
cs
nop
inc
sbb
in
lods
pop
loopne
pusha
sti
xor
dec
push
repnz
fistl
cmp
xchg
test
bound
mov
inc
jns
ret
loope
xor
pop
bswap
mov
loopne
xchg
mov
push
aaa
cmp
int
inc
sbb
ds
xchg
or
dec
push
sbb
outsl
push
jne
testb
insl
pop
jno
mov
push
test
arpl
or
xchg
inc
mov
sbb
pop
jmp
and
inc
inc
mov
jg
nop
cmp
xchg
push
les
sbb
sbb
insl
roll
lds
in
movsb
flds
cmp
sub
sbb
ret
and
xor
pop
stos
out
hlt
inc
cs
mov
dec
add
mov
xor
cmp
aam
dec
and
pop
adc
mov
cli
inc
pop
sarb
mov
sbb
mov
out
pop
add
cltd
jnp
aad
mov
roll
sbb
adc
into
add
out
or
cmpsb
xchg
push
push
fwait
dec
das
cwtl
dec
and
scas
leave
test
adc
cmpsb
scas
adc
gs
cs
clc
fnstsw
and
adc
das
sbb
hlt
data16
mov
imul
push
and
call
std
pushf
and
scas
xor
jp
shl
add
and
sub
inc
inc
loopne
xchg
mov
mov
mov
push
mov
fs
xor
aaa
loope
rcl
pop
xchg
stos
mov
xchg
js
js
pusha
xor
push
sub
cmp
in
rcrb
adc
out
xchg
mov
popa
imul
mov
sub
push
sub
shlb
mov
mov
clc
mov
hlt
or
in
mov
cmp
inc
jl
dec
adc
pop
push
and
inc
loope
dec
mov
sbb
faddl
aam
and
lret
push
push
xchg
jo
rcl
adc
std
stos
cwtl
lret
sub
out
mov
push
ret
jge
and
push
outsl
lahf
fnsave
mov
or
sub
xchg
push
mov
jb
out
sbb
out
insb
jecxz
or
push
cmp
nop
bound
ja
pop
push
out
inc
nop
aas
or
shr
jbe
lods
decl
jmp
sub
adc
test
jae
icebp
outsl
and
int3
nop
mov
push
cmpsb
je
push
fs
shll
xchg
addr16
vpaddusw
cli
lods
ret
or
rorl
sbb
mov
add
jo
or
jnp
icebp
pop
nop
pop
das
fisubrs
out
mov
cmp
idivb
mov
test
fstps
out
inc
push
and
pop
xor
xchg
scas
xor
mov
push
fsubrl
mull
cwtl
out
jno
push
icebp
or
pusha
adc
daa
xor
push
out
xchg
mov
mov
stos
push
mov
rclb
adc
cmp
cmp
sbb
adc
pop
cmpsb
adc
and
pop
clc
rol
fisubrs
jge
inc
push
gs
stos
jnp
mov
xchg
adc
testb
cmp
daa
aam
test
loope
out
aaa
push
sub
out
sahf
imul
test
insb
imul
in
data16
sub
mov
leave
fdivs
push
mov
and
push
mov
loopne
lock
std
mov
sub
jnp
lret
inc
inc
xor
xchg
cmp
add
xor
das
inc
and
mov
fistl
and
lods
bound
mov
fistl
shl
or
mov
mov
test
adc
arpl
psadbw
push
pop
bswap
inc
cltd
adc
xchg
push
shll
fldenv
pop
stc
addr16
test
pop
loop
fadds
in
adc
mov
xor
fistpll
lods
std
lods
or
pusha
gs
imul
sbbl
add
xchg
push
xor
push
fs
in
std
xor
xchg
ja
pop
xor
mov
aam
xchg
cmp
cmpl
mov
popf
push
push
shrl
subb
mov
mov
popl
cmc
xchg
idiv
call
push
nop
mov
jbe
push
int
pop
sub
fnstsw
sub
movsb
push
iret
jbe
ss
rol
xorl
jnp
sbb
and
mov
in
and
push
mov
into
jnp
xchg
pshufw
mov
iret
jecxz
dec
test
rorb
and
rcrb
fdivl
mov
mov
mov
and
mov
xchg
inc
mov
frstor
pop
lods
mov
xchg
jg
ds
loope
shl
nop
push
add
inc
jns
jecxz
pushf
xchg
in
scas
jno
popa
dec
pop
test
ret
stos
jp
iret
insl
xchg
psrad
xchg
ja
rcrb
iret
jecxz
xchg
popf
sub
ljmp
out
pop
or
ja
icebp
inc
mov
and
cmp
imul
push
xchg
adc
mov
mov
fildl
sbb
popa
push
das
pusha
mov
xor
stos
fistl
inc
cmc
andb
repnz
push
xor
jmp
test
xor
or
pusha
cmpsb
inc
lods
mov
jns
pop
fadd
pusha
mov
clc
je
pxor
sub
mov
ret
out
bound
shlb
mov
fnstsw
into
mov
jnp
xchg
in
test
sti
inc
lds
aaa
sub
push
inc
push
cmp
daa
adc
add
mov
fs
inc
push
idivl
dec
sub
nop
shll
push
fisubs
lret
cli
push
mov
aam
xlat
dec
mov
into
je
cmp
inc
scas
push
push
add
sbb
imul
or
ja
rol
aas
mov
aad
mov
rol
add
dec
fxch
repnz
stos
mov
xchg
and
lcall
pop
js
xor
cmp
inc
cmpsl
xor
test
cs
lahf
fmull
into
shrl
loop
adc
xchg
mov
frstor
xchg
sub
lock
or
fmuls
rcrb
movsl
add
dec
jge
push
incl
out
insl
cli
or
fldz
fcoml
jnp
push
mov
movsb
adc
insl
mov
mov
add
or
pop
in
repnz
out
sbb
pop
sub
cmp
and
or
dec
dec
ret
std
cmp
mov
mov
push
stos
sti
jno
mov
in
daa
ljmp
movsb
xor
and
movl
jmp
lahf
pop
ret
int
jp
fdivrs
loop
stc
aam
scas
sbb
xchg
movsb
das
push
or
jge
lock
jp
repz
jmp
imul
pop
cs
dec
jbe
std
jno
leave
imul
sahf
sub
orl
rorb
pushf
cmpb
test
dec
lret
add
loop
inc
mov
aaa
jg
and
mov
rcrb
andb
fwait
loop
push
in
mov
repnz
or
sub
filds
fcmovbe
mov
arpl
fs
stc
and
jecxz
stc
rcll
push
or
int
out
das
fists
mov
adc
test
mov
add
xchg
data16
sbb
into
popa
ljmp
dec
xchg
aas
pop
icebp
ja
dec
inc
out
or
mov
hlt
jae
iret
in
and
sbb
inc
sbbb
and
das
add
push
pop
pop
in
sub
sbbb
fstl
sub
xchg
cltd
scas
dec
dec
fwait
jl
fwait
pusha
jge
and
cmp
or
jg
leave
outsb
sub
xchg
imul
addb
leave
test
or
out
dec
or
jl
rorb
sbb
mov
sbbb
dec
andl
pushl
mov
cltd
out
add
push
ret
outsl
xor
xchg
mov
notl
in
lcall
shrl
inc
in
pop
push
xchg
ss
jnp
or
lret
lock
cs
imul
adc
int
out
mov
stos
mov
fwait
daa
pop
mov
lret
js
dec
adc
call
ret
or
aas
addr16
pusha
jne
das
sbb
push
pop
lock
adc
ja
aaa
lods
adc
dec
nop
pop
insb
call
in
adc
jns
inc
mov
aas
mov
xor
inc
mov
insl
mov
push
mov
cwtl
and
fs
push
and
pop
sbb
inc
cmp
mov
push
movsb
mov
imul
sub
stc
mov
fisubl
imulb
xor
js
inc
shl
iret
imul
pop
ret
test
dec
inc
push
lcall
and
imul
sarl
out
and
sahf
icebp
xchg
xchg
sbb
mov
sub
fldl
pop
cmp
xor
test
hlt
repz
sub
add
subb
jo
std
jle
aad
jbe
sti
mov
adc
xchg
out
lods
or
push
leave
out
jl
mov
cmp
jmp
shl
rcrl
cmp
jle
sarb
or
lahf
push
lods
mov
dec
inc
sub
in
add
cltd
sbb
fwait
cmp
shrb
inc
jb
ret
mov
jno
testb
jecxz
std
xchg
mov
popf
out
popf
popa
in
adc
add
push
nop
xchg
hlt
fmulp
fwait
sahf
sub
dec
xor
jbe
pushf
push
and
mov
out
add
jg
xor
les
push
leave
ss
popf
fwait
out
cmp
mov
xor
pop
pop
pop
ss
movsb
pop
repz
cwtl
push
mov
xchg
dec
xchg
repz
rcrl
rclb
mov
xchg
sbb
test
shlb
jl
pushf
adc
cmp
dec
mov
sbb
jnp
push
insb
push
cli
test
pop
lret
push
pop
mov
pop
ja
and
push
xor
fcomi
cmc
jnp
push
fdivl
jle
jne
mov
mov
or
jmp
pop
sahf
pop
mov
pusha
xchg
sbb
jecxz
rol
dec
sbb
fistl
scas
fbld
push
sti
adc
fdivrp
pop
pop
xchg
aaa
sbb
mov
pop
cmp
negl
inc
mov
rcr
pop
mov
add
pop
jns
pushf
ljmp
xchg
ficoms
inc
mov
xchg
xor
pop
inc
std
pop
sbb
or
jbe
adc
push
lcall
in
imul
into
bound
fdivr
hlt
pop
add
mov
xor
xor
je
xor
insb
jnp
je
std
pop
or
jmp
sahf
jno
fmull
jae
and
outsb
sbb
gs
pop
adc
mov
and
fdivs
call
cmpsb
dec
xlat
pop
inc
cmp
mov
push
dec
mov
jb
aaa
inc
je
adc
cmp
imul
aas
cmp
aas
roll
movsb
pop
jbe
adc
cli
lret
xchg
test
sbbl
out
xchg
out
je
adc
mov
sti
ljmp
xlat
cwtl
cld
ret
mov
jecxz
cmpsl
add
and
out
jle
loopne
sub
xor
mov
xchg
ss
das
xchg
fcmovne
imul
lock
sbb
test
sbb
sub
xor
lea
aas
hlt
inc
push
xor
fadds
sar
enter
inc
adc
pop
mov
scas
push
test
loop
mov
lods
jmp
loope
push
les
jb
lods
cmp
aad
gs
popf
dec
sar
sub
mov
mov
jns
and
mov
jne
jmp
inc
xchg
ss
cmp
aam
lea
and
and
in
shll
mov
mov
scas
fdivrp
mov
pop
inc
clc
add
push
div
cmc
arpl
iret
daa
push
pop
pop
mov
loopne
pop
mov
subl
in
dec
outsb
or
mov
jae
movsb
subb
call
pusha
push
insb
outsl
mov
push
jmp
lods
movsb
mov
nop
pop
jge
inc
rcll
leave
cmpsl
add
mov
roll
sbb
adc
jno
dec
scas
sub
loope
mov
jbe
sbb
popl
push
inc
test
icebp
or
add
add
xchg
cmpsb
test
pop
mov
and
xchg
lret
add
or
fwait
inc
iret
stos
shrl
dec
inc
pop
jle
out
mov
stc
jbe
fistpl
aas
ret
jo
in
pop
out
inc
outsb
xchg
in
das
fcmovu
outsl
jno
cmp
pusha
mov
cmpsl
inc
leave
jne
mov
dec
lret
ljmp
mov
icebp
xor
jp
xor
shrb
mov
je
add
cmp
cld
mov
jl
addr16
xchg
cmc
add
out
push
push
push
insb
mov
jns
jne
sti
cld
inc
push
mov
sub
inc
pop
mov
lock
inc
insb
nop
incl
dec
xchg
sbb
and
sar
pop
jp
xlat
sti
push
das
pop
jb
mov
sbb
xchg
adc
mov
push
mov
pop
jo
test
outsb
fcomp
imul
fwait
aaa
dec
into
push
xor
lret
or
pusha
jbe
stos
mov
ja
addr16
xchg
jmp
mov
or
int
fisttps
jno
enter
xchg
push
and
adc
fisubrs
cmp
leave
mov
pop
cmp
cmp
fxch
outsl
test
and
iret
xor
jno
loope
add
fcmovnb
call
jmp
movsl
notb
jmp
subb
cli
sub
inc
push
movsl
mov
jns
jno
sub
pushf
pop
jb
mov
push
out
pop
hlt
push
popa
lahf
pop
divl
pop
mov
push
ljmp
ret
rcl
adc
add
mov
lahf
jb
adc
or
lret
cmp
sub
pop
movntq
adc
les
nop
fisttpl
outsb
inc
and
xchg
test
jnp
out
pop
xor
jecxz
jns
outsl
fcompl
dec
push
add
sub
dec
inc
fwait
push
call
imul
gs
mov
dec
dec
push
push
adc
data16
or
jns
jl
sti
dec
cwtl
jp
fs
mov
les
cmp
xchg
pop
mov
dec
xchg
cld
loope
mov
or
iret
push
jmp
repz
loopne
mov
sti
ret
jbe
out
mov
and
popf
xlat
or
cmp
cltd
pop
push
push
mov
lods
addl
hlt
mov
nop
shl
cwtl
cmp
js
fucomi
adc
lds
aas
mov
push
push
jge
or
les
lahf
sti
push
cmp
movsb
dec
stos
in
jp
js
loop
insl
aaa
aad
push
xchg
out
mov
dec
popf
clc
mull
sarl
xlat
ss
dec
scas
and
add
inc
fcomp
mov
dec
xor
pusha
enter
andb
cli
push
jnp
mov
xchg
mov
jle
test
inc
out
push
outsb
lret
sbb
mov
pop
movb
cmp
or
outsb
jl
loop
adc
dec
mov
fs
and
sub
cmp
pop
add
cli
xchg
dec
mov
arpl
in
leave
ss
movsb
xchg
test
push
jl
adcb
xchg
je
or
rorb
mov
hlt
and
cli
loop
add
test
arpl
hlt
add
jecxz
shlb
ljmp
xor
into
or
pop
xchg
cmpsb
dec
jg
sbb
and
mov
jecxz
xor
mov
call
decb
aaa
sbb
adc
jb
divb
xor
push
out
popf
mov
xchg
lcall
ret
add
outsb
or
cmp
jno
and
int
jmp
cld
cmp
jb
cmp
repnz
push
iret
shr
into
sahf
pop
or
loop
mov
xchg
push
jno
dec
dec
push
or
dec
pop
aas
lea
jecxz
cmp
lock
out
xchg
dec
insb
fwait
loopne
push
cmovno
test
sbb
xchg
fisttpl
mov
fwait
testb
jb
mov
loope
push
sub
mov
loopne
mul
sbbb
add
sbbl
and
add
inc
xor
or
and
in
jge
lcall
jne
cmp
int3
push
cmpsl
mov
add
mov
sub
cmc
dec
lods
mov
add
dec
aaa
jno
mov
mov
imul
push
lods
aas
test
stos
pop
fistpll
sub
push
ja
xlat
shl
push
lock
inc
sub
inc
push
or
mov
call
stos
pop
pop
push
sub
outsl
mov
push
std
lahf
and
mov
stc
adc
push
enter
jmp
fsts
js
jns
addl
lods
cmp
sub
dec
shrb
mov
insl
jne
imul
cmp
out
mov
sub
cmpsl
or
inc
daa
aaa
loop
cmp
adc
orb
xchg
pop
iret
xchg
out
xchg
in
or
addr16
mov
scas
and
mov
dec
int
jns
fs
es
pop
jl
push
jg
scas
fs
inc
mov
jbe
bound
add
nop
xorl
jl
push
out
fcompl
sarl
cmp
pop
pop
mov
sub
pop
push
int3
call
add
xorb
jl
dec
or
in
mov
loope
or
xlat
lret
out
addr16
xchg
or
xor
dec
idivb
cld
outsl
xor
xchg
fwait
pop
inc
or
repnz
pop
rolb
jns
and
pop
mov
push
mov
ret
cmp
in
imul
push
pop
cmp
push
adc
xchg
push
mov
xchg
push
xchg
outsl
jns
and
cmpsb
in
iret
icebp
jmp
adc
cmpsl
cmp
mov
lcall
ljmp
insl
arpl
aas
and
lret
and
scas
jp
sbb
dec
popf
insl
pop
mov
mov
inc
arpl
and
push
inc
mov
aaa
push
popa
mov
fs
mov
fucomip
xor
je
push
scas
push
cmp
adc
pop
push
ficoms
pop
inc
popf
clc
or
test
incl
mov
sahf
dec
add
shlb
jb
adc
jno
stos
pop
pop
mov
test
fs
xchg
jl
lock
aam
pop
pop
les
dec
cmp
data16
mov
cltd
adc
inc
mov
es
mov
and
shl
ret
cmp
cmpb
cli
aam
test
repz
aas
imul
and
ror
lahf
mov
add
adc
xchg
ret
insl
cmpsb
add
fistpl
fmuls
push
dec
rorb
push
dec
mov
ss
or
dec
mov
jbe
mov
ljmp
pop
cmpsb
pop
jnp
lock
fnsave
pop
and
xorb
icebp
add
mov
push
imul
add
jle
notb
inc
or
aad
sub
aaa
xchg
fidivrl
call
mull
ret
and
rcr
cmp
and
cmp
in
mov
fwait
out
in
ss
adc
or
int
imul
cmp
dec
mov
dec
push
pop
xchg
xchg
test
xchg
jmp
xchg
lahf
roll
mov
lret
pop
out
pop
ret
pop
mov
jmp
add
stos
xchg
out
mov
pop
xchg
or
add
and
scas
xor
mov
rcl
inc
cmp
ljmp
cli
dec
mov
sub
mov
xor
mov
outsb
and
in
sbb
mov
pop
ds
popa
cmpsb
aam
notl
loop
inc
hlt
nop
sbb
xchg
jbe
xlat
add
outsl
mov
or
inc
movsl
or
aad
shll
and
das
push
or
jmp
push
pop
xor
fwait
stc
sti
out
and
loope
bound
mov
mov
dec
sbb
mov
jg
mov
inc
lds
xchg
sub
inc
push
sbb
movsl
push
xchg
cli
into
or
or
scas
cmpsb
inc
int3
mov
mov
leave
adc
cmp
pop
dec
shlb
outsl
push
fsts
in
insb
pusha
push
fidivl
jno
jae
cmpsl
scas
lods
mov
mov
push
lods
sahf
shlb
aas
sbb
and
pop
dec
fs
xchg
into
xchg
shrl
cmpsl
xor
add
in
out
lcall
lds
sub
xchg
fnstenv
inc
stos
or
push
leave
or
jae
push
mov
call
arpl
pop
js
out
dec
lods
subl
test
iret
les
mov
outsb
jecxz
pop
in
sbb
bound
imul
daa
addb
jg
add
hlt
xchg
sti
loope
push
add
arpl
sar
cmp
mov
adc
fidivrl
mov
cmpsl
outsb
in
and
pop
xchg
push
dec
xor
mov
stc
arpl
pop
sub
mov
jle
xchg
out
fst
cmp
je
adc
push
inc
xor
push
dec
mov
add
in
or
aas
cmp
int3
rclb
scas
mov
cli
or
and
xor
gs
mov
ficomps
insw
lds
push
xor
sub
repz
push
push
int
out
fsub
xchg
dec
loop
shr
clc
and
mov
or
rclb
mov
push
or
dec
out
inc
dec
push
ljmp
and
ja
divl
cmp
jmp
inc
and
jle
data16
in
inc
pop
lea
adc
sbb
hlt
ja
dec
into
add
cmp
jp
and
cmp
out
mov
pop
dec
pop
sub
iret
ljmp
cmpl
enter
mov
ficoms
int
xchg
test
test
and
popf
loop
sarb
outsb
leave
cmp
adc
sti
cmp
inc
jae
and
dec
inc
imul
pop
sbb
jle
mov
adc
int3
cmpl
mov
pusha
std
addb
fisttps
insb
and
cmpsl
lds
sub
adc
aad
mov
xorl
loopne
sbb
adc
rclb
into
xor
pop
push
pop
pop
loope
ljmp
inc
popf
mov
movsl
and
cli
xchg
xlat
repz
fwait
sbb
nop
test
pop
lods
adc
pop
mov
pop
lods
jecxz
mov
mov
mov
and
sbbb
mov
adcb
jg
ss
sbbb
sbb
lret
dec
cmp
aad
jne
leave
xor
in
shll
ret
sbb
dec
cmpsb
aam
fnsave
cmc
mov
addl
sub
xor
cmc
sti
inc
mov
pop
pop
dec
and
mov
test
or
mov
dec
in
inc
in
iret
loopne
jo
lods
pushf
js
lds
and
and
fdivrs
jbe
and
loope
fs
sbb
cmpsb
mov
add
popf
xchg
xchg
mov
cmp
roll
div
das
and
and
xchg
lret
cmpsb
mov
ror
loopne
xor
and
or
mov
inc
and
lret
dec
in
cmpsw
jbe
or
add
iret
lret
sahf
xor
jl
insl
push
dec
lea
or
add
lock
sub
out
pop
test
in
jne
sub
sbb
jmp
pop
cmp
xchg
idivl
int3
xor
xchg
sub
int
pop
cmp
cmpsl
das
sbb
mov
dec
rclb
clc
ljmp
jle
cmp
js
mov
cmp
jno
ds
cmp
test
add
push
sub
inc
cmp
mov
add
cli
sub
aaa
sub
aas
mov
dec
arpl
push
adc
js
mov
mov
xchg
sub
xchg
cmp
cld
lea
and
sub
xchg
pop
or
scas
or
adc
out
mov
inc
xchg
cmc
push
and
sub
aas
xor
xchg
mov
repnz
ds
xor
cmp
test
rcr
clc
cmpsl
call
sbb
mov
mov
xchg
and
es
jmp
or
or
pop
mov
mov
mov
in
xor
pop
pop
jecxz
mov
cmp
mov
int
mov
cmpsb
stc
outsl
sub
jl
and
pop
loope
mov
cs
dec
jg
mov
mov
sahf
out
inc
out
cltd
mov
int
fldpi
wrmsr
xchg
jg
or
xchg
pop
ljmp
bound
ss
adc
pop
adc
repz
jl
test
cmp
push
daa
or
cmp
sbbb
test
sub
bound
outsb
push
sbb
mov
mov
pop
fdivrs
popf
xchg
xor
popf
and
mov
jg
cmp
adc
movsb
aas
outsl
imul
arpl
out
xor
xchg
cld
subb
test
sbb
mov
inc
fsincos
and
shlb
push
jne
jnp
mov
aaa
inc
fwait
or
icebp
or
or
add
in
sbb
mov
imul
push
repnz
loop
std
js
fbld
fidivs
jmp
aaa
xor
push
push
ja
adc
xchg
inc
loopne
test
int3
pushf
scas
call
push
imul
or
push
push
mov
sbb
add
xor
outsb
or
sub
and
xchg
push
mov
or
add
lret
xchg
pop
pop
iret
cld
mov
dec
inc
adc
xchg
inc
in
into
cli
stos
jo
adc
mov
aam
xor
lret
outsl
adc
push
fildl
loope
xchg
in
sahf
xor
sbb
fs
icebp
ja
dec
fsubrl
das
xor
jecxz
outsl
jle
icebp
mov
cmp
dec
adc
adc
and
js
jmp
and
push
movsl
dec
call
hlt
or
or
cs
test
pop
xchg
mov
add
sbb
test
mov
xor
inc
inc
lods
sbb
xchg
enter
clc
int3
sbb
push
fcoms
fcomps
hlt
rcrb
cwtl
cld
adc
mov
addr16
mov
mov
shr
outsb
inc
cmpb
clc
cld
cld
je
mov
adc
leave
out
pop
push
add
neg
enter
or
outsl
push
mov
cld
xchg
sub
insb
xlat
ret
out
cmp
ficoml
ljmp
dec
or
inc
jno
mov
inc
xchg
push
mov
ljmp
lock
jle
dec
pusha
and
outsb
stos
ljmp
cmpsb
add
mov
sbb
jo
dec
in
mov
fsts
repz
dec
cli
shlb
dec
stos
mov
sub
xor
cmc
mov
and
and
mov
sub
out
icebp
mov
xchg
xchg
andb
xorb
xchg
popa
adc
int3
inc
popa
sub
js
lret
dec
xor
xorl
pop
mov
ss
jg
mov
fsubp
loope
pusha
and
adc
clc
stos
adc
out
mov
or
sbb
pop
lahf
pusha
xchg
xor
xchg
sarl
jns
fcomps
pop
out
scas
lods
jae
hlt
mov
and
xor
lds
icebp
sub
pop
mov
enter
push
mov
xor
push
insb
mov
pop
xor
sti
ret
shlb
jnp
aaa
jo
bound
push
cli
and
int3
mov
mull
loope
mov
loopne
mov
test
nop
xor
mov
in
ja
pusha
jle
push
neg
ljmp
cmp
xlat
pop
sbb
push
in
mov
xchg
sub
loope
push
lret
rcrb
jbe
adc
dec
push
ss
adc
jl
fadd
sub
insb
jmp
jecxz
add
ja
test
imul
xor
je
imul
pmaddwd
sar
and
push
mov
xchg
add
je
cwtl
imul
adc
outsl
mov
adc
cmpsl
lock
dec
adc
js
outsl
dec
and
lods
cmp
stos
in
pop
dec
jne
ds
push
inc
inc
adc
or
lret
xchg
inc
pop
fisttpll
icebp
ja
push
inc
mov
and
addr16
ffreep
jl
jecxz
sarb
xlat
inc
addl
repnz
cmpsl
jns
in
je
clc
jnp
xor
clc
dec
mov
rolb
cmp
dec
xchg
out
adc
sub
xchg
push
inc
fwait
mov
int3
mov
loopne
xor
les
inc
sarb
sbb
call
ret
jge
repz
push
dec
dec
jg
mov
arpl
lret
nop
mov
cmpsl
cmpsl
loop
in
out
mov
hlt
stos
mov
mov
lret
stos
add
add
mov
mov
pop
push
scas
xchg
mov
jp
mov
movsl
push
pop
mov
push
mov
xor
out
enter
scas
inc
sbb
mov
adc
dec
outsl
or
dec
lret
and
dec
add
pop
out
imull
push
xlat
ret
sub
pop
fdivrl
loopne
cltd
mov
xchg
add
mov
add
dec
subl
lret
hlt
pop
add
xor
movsb
adc
dec
pop
lock
pop
adc
jle
sbb
fucom
lds
leave
inc
fisubrl
fistl
mov
mov
add
mov
cltd
dec
and
mov
jmp
outsb
pusha
int
scas
mov
in
pop
fldcw
hlt
mov
es
loop
cmp
pusha
cmp
xchg
inc
ljmp
cmp
cmc
das
push
imul
lret
sbb
cmpsb
add
mov
icebp
mov
popf
mov
out
sub
out
pushf
push
xchg
dec
lods
aas
cmp
es
inc
fidivs
rclb
sbb
mov
xor
xchg
xchg
data16
mov
sub
xor
mov
pop
faddl
inc
pop
mov
jne
call
sbb
cmp
fsubrp
addr16
dec
jne
mov
xor
cmp
icebp
lods
cmc
lods
testl
jbe
aad
xchg
xchg
push
pushf
lea
pop
pop
push
or
xchg
xlat
js
jge
mov
sbb
cmp
in
arpl
push
fiadds
neg
mov
pop
add
inc
pushf
xor
jns
adc
hlt
lds
push
xchg
adcb
dec
daa
push
test
addr16
enter
mov
jae
or
or
jno
cmp
enter
fs
add
fsubl
iret
sbb
xchg
mov
imul
xchg
cmc
imul
jnp
sarb
les
addb
or
pop
pop
add
fstpt
mov
mov
push
xchg
in
xchg
pop
repnz
arpl
clc
ret
and
pop
sub
mov
lahf
pop
cld
mov
xchg
sahf
dec
push
jmp
jb
sub
rcll
xor
push
sub
aas
xor
sti
rclb
pop
shll
popf
aam
jmp
fs
repz
inc
loopne
arpl
jno
push
mov
xor
lods
stos
lcall
or
dec
mov
sub
adc
divl
movsl
and
jmp
mov
xchg
leave
lods
stos
in
call
std
stos
lock
mov
jne
ret
sahf
ficoms
aas
push
xchg
inc
sbb
jae
jns
fcmovb
testb
jge
loop
mov
aaa
fdivrl
jmp
popa
inc
or
andl
cmpsb
adc
xlat
or
sbb
pop
je
loope
incb
cmp
fcmovnu
int3
cmp
jb
js
xchg
push
xchg
fadds
xchg
push
movsl
dec
out
cmp
repnz
adc
push
and
add
testb
cltd
lahf
mov
dec
lret
lods
mov
cmp
ret
test
adc
and
push
cmp
js
or
adc
lret
mov
xchg
mov
movsl
jnp,pn
mov
ja
add
pop
daa
call
insl
fwait
in
cmp
leave
icebp
mov
push
out
and
xor
rcrl
push
call
push
pusha
nop
and
cld
xor
hlt
inc
push
call
fs
xor
addl
dec
popl
loop,pn
insl
mov
inc
inc
ffree
mov
jmp
xchg
jae
mov
sarb
mov
enter
cmpsl
testl
mov
aas
sti
fisubs
and
fidivrl
cmpsl
sub
sahf
jbe
les
pop
jecxz
or
mov
xor
out
movsb
dec
lods
push
imul
insl
or
mov
inc
mov
gs
add
in
fcoml
cmc
mov
mov
dec
in
lret
pushf
out
lea
jmp
inc
sbb
fisubs
enter
mov
add
xor
or
gs
cltd
inc
popw
add
std
pop
call
aad
rcrl
mov
jle
fiaddl
stc
and
int3
aam
jmp
mov
inc
dec
push
sub
pop
and
pop
mov
adc
ds
clc
imul
push
stos
shrl
lock
adc
jl
aas
int3
insl
in
outsl
xchg
add
jb
out
shlb
pusha
cld
jl
pop
stc
arpl
push
jmp
gs
mov
cld
mov
les
lcall
sarl
mov
mov
mov
int3
jl
xchg
lret
nop
xchg
jnp
dec
jmp
out
aaa
xlat
and
push
aad
sub
mov
or
movsb
lods
pop
jno
cmc
add
insb
sbb
add
xor
mov
xor
xchg
cmp
dec
or
mov
sub
mov
stos
push
cmp
pusha
aaa
in
push
push
aam
aad
fistps
out
and
outsl
xor
push
push
push
mov
pop
pop
in
jne
sbb
fidivl
int3
add
and
pop
stos
mov
mov
jl
fsubrs
or
jle
mov
mov
xor
pop
jns
lods
mov
dec
je
imul
jle
pop
xchg
stos
sbb
inc
xor
push
sbb
int
jmp
test
xchg
lret
sub
lea
xchg
enter
lret
lds
jnp
shr
sub
jle
aaa
jge
jl
int3
add
lret
bound
popa
in
inc
fcoml
or
in
arpl
shll
or
stc
ja
ja
pop
adc
stos
cmp
enter
push
jb
decb
mov
inc
rcr
int3
int
dec
imul
rolb
rol
xchg
xlat
mov
imul
add
aam
das
mov
xchg
insl
repnz
and
xchg
mov
pop
xor
jo
shrb
adc
orl
repz
and
pop
xor
pop
lds
popf
jnp
sarb
call
lds
push
xchg
or
popa
loop
cwtl
cmpsl
fidivrs
xchg
cmp
adc
dec
sbb
lret
scas
xchg
outsb
ret
xor
mov
push
lret
fstpt
pop
mov
fadds
push
xor
lock
mov
and
fildl
ss
gs
fwait
push
outsl
sbb
gs
sti
outsl
int3
lock
sahf
pop
ret
cmpsl
mov
adc
cltd
es
pop
pop
xchg
repnz
hlt
popf
pop
push
xor
jnp
and
xchg
push
shrl
xchg
inc
jle
das
incb
loop
aam
loopne
inc
in
sar
testl
sbb
ds
xchg
fidivs
dec
xchg
cwtl
vxorps
icebp
add
je
sbb
add
fistpll
jns
mov
dec
add
and
sbb
stos
inc
fwait
add
mov
sub
xor
mov
xchg
pop
ret
movups
pushf
inc
sets
or
jp
fwait
dec
ss
pop
rorl
cmp
aad
sub
mov
push
push
mov
repnz
lods
repz
cld
mov
jg
loop
jle
add
inc
inc
add
inc
dec
push
in
rolb
js
inc
push
push
mov
imul
and
iret
mov
js
xchg
adc
jecxz
cs
lcall
sub
xor
mov
push
sbb
fidivrs
int3
cmp
add
imul
mov
dec
mov
push
or
cmp
lock
rcrl
mov
mov
jecxz
adc
ds
lret
mov
or
sub
cmp
mov
lods
repnz
sub
leave
popf
lods
mov
sarb
dec
add
and
sbb
cs
outsl
and
adc
aad
call
pop
push
xchg
xchg
test
and
mov
pop
sbb
pop
inc
out
inc
jg,pn
push
adc
clc
or
pushl
dec
inc
out
sub
xor
dec
mov
xor
adc
add
mov
and
adc
pop
sbb
sti
pusha
jge
add
rorb
xor
fsub
nop
aaa
insb
out
pop
inc
push
fiaddl
push
lods
lods
das
iret
dec
inc
lret
decb
ret
xor
cwtl
loopne
arpl
int3
repnz
sbb
push
jmp
jb
jbe
dec
sub
xchg
adc
jecxz
pop
icebp
jp
arpl
decl
sbb
insb
push
adc
aad
gs
mov
je
inc
cmpsb
aas
cmp
adc
movsl
jo
scas
xchg
add
adc
xchg
in
fucom
xchg
rorl
pop
rcr
rcll
cmpsl
push
add
mov
or
inc
push
mov
sub
out
mov
stos
jge
mov
movsl
scas
mov
xchg
xlat
sti
ret
mov
cs
data16
pop
add
fisttpl
jnp
lds
jp
lret
push
aad
cmc
xchg
sbb
and
push
pop
add
orb
lds
pop
inc
inc
xor
in
insl
mov
add
sbb
notl
sub
notb
scas
adc
push
jg
hlt
mov
cli
add
xchg
shlb
ds
loop
sub
dec
xor
dec
in
push
test
add
jns
mov
xlat
sbb
arpl
inc
gs
inc
stc
fcomp
cmp
and
xchg
mov
call
xchg
hlt
cltd
cli
xor
stos
loopne
fldl
mov
push
repnz
mov
pop
or
cmpsl
rolb
rcll
shl
xlat
js
fdivr
movsb
pop
or
add
int
xchg
repz
je
push
adc
mov
and
mov
inc
rol
mov
testl
mov
mov
mov
clc
aaa
jmp
adc
sbb
stc
or
xchg
pusha
push
gs
mov
mov
mov
mov
out
sarb
xor
or
mov
mov
xchg
fs
jo
mov
std
fdivs
push
das
push
jmp
xor
xor
iret
iret
fwait
and
sub
xchg
jae
and
mov
jns
jae
xchg
xchg
push
sbb
dec
inc
add
add
mov
or
shl
inc
loopne
arpl
inc
icebp
jbe
or
insb
add
sahf
cltd
push
data16
sub
in
out
into
xchg
lods
call
push
dec
cmpsb
repnz
push
mov
dec
out
xor
add
ret
and
call
cmp
mov
lret
or
jp
or
pushf
fdivs
pop
ljmp
lret
inc
rorb
lret
int3
and
and
sub
mov
pop
das
xor
push
adc
push
sbb
ret
dec
sbb
in
loopne
sub
inc
push
scas
filds
jmp
fidivrl
add
push
xchg
dec
test
bound
out
dec
lock
cmp
push
add
les
xchg
jl
fcmovnb
outsl
xchg
mov
jne
xchg
shlb
cmp
outsb
inc
mov
test
adcb
add
mov
jle
mov
js
nop
sub
sahf
sub
xlat
lahf
mov
xchg
pop
xchg
stc
jne
dec
push
push
into
mov
push
enter
fwait
jbe
add
pop
inc
and
adc
inc
inc
decl
dec
lret
test
mov
push
ud1
dec
jp
jae
add
loope
mov
jle
arpl
and
in
dec
insb
call
pushf
and
jg
lods
fcmovbe
dec
push
mov
adc
call
sahf
into
add
cmpsl
xlat
fistpll
mov
outsl
dec
pop
pop
aad
ljmp
sbb
pop
repnz
ds
xchg
stc
dec
popf
pop
dec
cmp
pushf
inc
sbb
or
mov
fst
push
cwtl
ja
xchg
pusha
repz
fs
mov
ficomps
std
jne
imul
icebp
xchg
test
pusha
mov
mov
mov
mov
jbe
add
jcxz
cli
das
enter
adc
fsubs
sbb
push
pop
cs
lret
adc
adc
into
push
jecxz
insb
mov
mov
outsl
push
rcrl
jecxz
mov
lods
xchg
pop
xchg
fadds
mov
ja
and
fldln2
aas
dec
sbb
nop
pop
rolb
leave
adc
mov
inc
xchg
dec
in
in
cli
bt
divb
out
mov
iret
jb
cmp
jne
push
mov
lods
sub
outsl
insb
das
pop
xchg
xor
jb
stc
and
adc
pop
and
mov
xchg
call
xor
jecxz
stc
mov
punpckldq
ss
insb
test
pop
push
push
pop
dec
jbe
xor
cltd
cmpsl
xor
mov
adc
cmp
js
int3
pop
adcb
push
mov
loope
adc
cmc
xchg
stos
sahf
and
sbb
push
not
lahf
push
pop
dec
out
jns
test
scas
in
shlb
add
insl
sub
mov
je
lock
jmp
inc
lds
jo
or
je
ficomps
cmc
inc
fbstp
shlb
inc
cmp
in
ss
pop
mov
xchg
pop
pop
and
cld
jle
popa
orb
mov
mov
rolb
jo
aad
inc
cs
mov
xchg
outsl
insb
daa
faddl
andl
add
fwait
lea
jno
inc
cmp
loope
jne
mov
push
adc
leave
sbb
mov
daa
cmp
test
enter
xchg
mov
popf
imul
jo
shlb
dec
sbb
daa
wbinvd
and
jecxz
sub
in
ljmp
mov
mov
xchg
stos
jmp
jnp
lret
in
mov
clc
xlat
or
mov
addl
sub
sbb
mov
push
test
cwtl
mov
ja
jl
int
fisubrs
mov
sub
sbb
je
fs
inc
iret
jge
cld
xor
mov
mov
ds
lcall
rcrl
mov
mov
les
jp
int3
fildll
mov
rcrb
or
xlat
daa
sub
fsubl
pop
mov
fisubrs
mov
pop
idiv
adc
pop
mov
fidivl
mov
aas
fisubl
or
das
dec
out
or
pop
jne
jle
les
mov
in
dec
lock
test
shrl
lea
dec
mov
or
or
jns
popa
push
cs
orb
cld
add
and
aaa
lret
stos
inc
daa
test
arpl
push
imul
out
in
cmp
lods
mov
mov
mov
add
outsb
cld
cmpl
sub
pop
call
xchg
mov
jge
add
repnz
push
cmc
and
clc
xorl
in
push
jne
jmp
scas
stos
jp
leave
cmp
jo
and
call
xor
adcl
cld
cmp
xchg
sbb
les
bound
dec
dec
enter
cmovs
int
aad
adc
jmp
ret
pop
jp
movsl
add
loope
mov
shrl
dec
mov
lret
push
enter
xchg
nop
add
xchg
enter
fs
dec
out
sub
sbb
mov
xor
cmpsb
mov
jmp
frstor
sbb
mov
daa
cltd
mov
xchg
jecxz
into
lret
mov
incb
mov
rclb
fdiv
fsubl
scas
lods
sbb
dec
add
lods
cwtl
icebp
addr16
cmpsb
ja
or
xchg
push
imul
repnz
sbb
bound
push
std
imul
add
lods
inc
out
jmp
dec
in
xlat
test
mov
outsb
insb
dec
notb
pop
inc
les
mov
fbld
test
repz
push
and
in
leave
fdivrl
in
lea
shll
lret
gs
aas
repz
mov
movsb
or
sub
cli
sub
mov
xor
bound
das
jno
cmp
dec
test
insb
fimuls
xchg
or
enter
mov
imul
repnz
shlb
add
sbb
stos
mov
icebp
fs
mov
out
mov
push
xor
sti
inc
add
cmp
cmp
sub
inc
iret
mov
dec
push
rcl
ljmp
es
and
shll
pusha
test
mov
imul
add
mov
stos
jg
and
mov
shl
mull
jmp
pop
inc
mov
arpl
movsb
jge
jmp
mov
test
cmp
lods
sarb
xor
sbb
mov
movsb
sub
or
insl
cmc
iret
mov
idivb
pop
mov
cmp
rolb
dec
stos
lea
mov
xchg
push
mov
xchg
iret
mov
repz
lods
int3
jnp
mov
vunpckhps
int
faddl
int
xor
mov
vpshufd
xor
cmp
loopne
subb
jge
push
inc
cmpsb
inc
xlat
jg
cmp
push
mov
adc
sub
mov
dec
aas
jge
scas
jae
cwtl
xchg
dec
rcl
xchg
test
ds
jle
dec
cmp
clc
inc
daa
pop
xor
jmp
and
mov
mov
pop
fistl
adc
roll
movsl
and
cmp
lds
inc
adc
pop
test
inc
pop
add
sahf
sbb
sub
not
das
out
cmp
dec
insl
adcl
cmpsb
jecxz
or
jno
inc
call
stos
das
jle
insb
ss
cmp
jno
rorb
adc
pushf
cld
repnz
and
mov
jecxz
mov
repz
mov
push
jmp
or
lea
int3
inc
fimuls
add
das
mov
shl
loope
out
or
mov
iret
ficomps
sub
mov
push
sti
adc
movsl
out
repnz
pop
jbe
cs
loope
insl
inc
dec
mov
bound
pop
inc
out
scas
sbb
icebp
aaa
sets
pop
xchg
outsb
pop
aas
and
scas
popa
popa
call
and
dec
xor
pop
mov
jns
add
add
aam
testb
inc
mov
jae
and
xchg
lock
mov
xlat
mov
jecxz
ljmp
fs
btc
in
js
scas
mov
mov
cmp
lock
xor
and
xchg
mov
loop
mov
sub
or
adc
jl
sbb
cmp
xchg
push
es
or
das
add
loop
mov
pop
add
jno
fsubp
mov
push
out
arpl
mov
lret
mov
and
mov
jns
push
push
jne
insl
ret
sti
lahf
jnp
stos
lcall
dec
push
inc
mov
std
call
xchg
sub
xor
filds
dec
push
pop
jns
ds
gs
inc
je
loop
jo
jp
mov
mov
lcall
jl
insl
icebp
cmpsb
dec
clc
pop
push
pusha
insl
push
shrb
mov
xor
jno
sbb
outsl
adc
inc
shl
ds
incl
fcoms
jns
in
in
je
shll
mov
out
cld
mov
icebp
cmp
inc
mov
clc
les
test
lods
movsb
inc
jnp
xchg
push
cmp
or
in
sbbl
cmpsb
dec
frstor
sub
mov
fimuls
dec
xor
sbb
push
jbe
mov
movb
rorb
add
inc
imul
mov
fwait
inc
mov
mov
test
mov
mov
mov
gs
test
mov
mov
adc
in
mov
push
aaa
jg
xor
xor
xchg
nop
cld
testb
stc
sbb
test
push
or
push
cli
sarl
sbb
inc
aaa
hlt
push
fwait
mov
fsts
mov
mov
lret
cs
je
insb
sbb
gs
add
cmpsb
popl
sbb
xchg
or
lods
out
out
fidivl
xchg
sub
testb
in
mov
mov
mov
leave
dec
mov
xchg
sub
in
dec
gs
push
stc
shll
jle
stos
sahf
dec
lds
orb
fs
push
mov
or
sub
movsb
lods
call
aas
mov
ret
insb
mov
imul
sahf
sbb
xchg
shr
xchg
cmp
push
adc
or
xchg
lods
cltd
mov
test
out
shll
in
xor
jp
shll
xchg
sbb
cmp
sub
aaa
loop
inc
push
lret
jle
sbb
adc
loopne
dec
jecxz
mov
mov
mov
cli
fldt
in
pop
lret
in
int
push
out
outsl
add
jns
push
addr16
fstp
or
mov
mov
pop
lahf
ljmp
cmp
add
fisubrs
push
fs
int
dec
icebp
mov
ret
cmpsb
inc
and
sti
xor
xchg
stos
in
push
popf
xchg
aas
stos
pop
into
loopne
jno
adc
add
ret
pushf
push
aas
add
mov
lcall
mov
mov
push
fisttps
dec
mov
xchg
push
pop
cltd
enter
mov
xchg
add
movsl
repz
adcb
sbb
sahf
jns
ljmp
jns
add
jb
xlat
insl
adc
push
xor
adc
pop
jge
lock
fcompl
jo
pop
adc
jb
adc
add
subl
fsubl
out
aas
add
jg
or
jge
fcomps
sbb
mov
and
cmp
fisubs
in
movsb
pop
mov
pop
pop
xchg
fs
call
aad
sbb
mov
mov
aaa
movsb
outsb
aam
add
in
in
xchg
in
iret
aam
mov
push
mov
mov
pop
pop
rcll
subl
jne
add
add
out
and
mov
lds
add
cmpsb
sarb
and
icebp
and
repz
cmc
outsb
jae
jmp
orb
call
popf
push
pop
push
movsl
scas
sbb
lret
push
mov
ret
sarl
arpl
in
mov
popa
rorb
sub
push
outsl
cmc
sub
pop
je
test
sub
fcoms
xchg
repz
sub
scas
push
jne
orb
int
ret
push
mov
push
mov
sub
sub
imul
into
mov
sub
push
int
add
or
dec
movl
dec
dec
std
movsl
outsb
bound
imul
cmp
fsubl
sub
xchg
rclb
mov
mov
xor
pop
test
jmp
xchg
outsl
loopne
jbe
sbb
inc
pushf
in
imul
adc
pop
sbb
mov
movsl
add
pop
fisttpll
mov
loopne
add
push
cld
xor
xorl
test
sub
adc
pushf
out
loop
loop
sti
out
lock
lahf
outsl
stos
sbb
cmp
add
shl
bound
mov
dec
mov
sbb
out
jl
pop
xchg
inc
xchg
adc
adc
lea
mov
mov
mov
outsb
dec
pop
and
aas
or
repnz
loopne
fcmovu
cmp
xlat
mov
test
adc
mov
lret
test
add
sub
in
leave
ljmp
aas
xorb
xchg
popf
imul
jmp
add
adc
adcl
adc
stos
fs
sbb
das
int3
adc
aam
filds
loopne
lret
pop
cmp
aas
xchg
and
hlt
or
push
inc
jmp
cmpl
std
jge
ss
repnz
push
dec
push
loopne
push
test
dec
movsb
pusha
sub
popf
jg
ds
xchg
ficompl
fwait
sub
xlat
scas
sbb
orl
jns
sbb
cmp
pop
push
popa
sub
ljmp
mov
rcrl
pop
sti
leave
pop
aam
pop
mov
fimuls
inc
out
mov
push
adc
push
sar
imul
andb
pop
add
xchg
add
test
cwtl
xchg
outsl
cmc
adc
stos
xchg
gs
xchg
push
mov
mov
jmp
rorb
mov
les
imul
jmp
std
stos
push
pop
cmp
add
fucomip
or
push
and
std
cmp
addr16
imul
fidivrs
insl
adc
adc
mov
or
je
adc
pop
mov
jbe
out
cmpsb
push
cmp
es
dec
jo
imul
push
push
mov
jb
xchg
mov
cmp
adc
test
mov
mov
cmp
std
or
or
movb
out
fwait
scas
loope
mov
xchg
out
adc
mov
mov
push
adc
push
push
outsb
sub
lretw
jecxz
jbe
xchg
xchg
aaa
or
jno
mov
mov
ret
divb
add
lcall
lds
pmulhuw
mov
cwtl
clc
push
stos
jns
repnz
xor
jmp
dec
mov
and
test
aam
lret
aaa
jle
gs
cs
dec
cli
mov
movsl
and
push
jg
add
mov
inc
xchg
dec
ret
das
outsl
leave
lods
or
loop
and
xlat
inc
loope
jne
mov
cmp
rclb
imulb
jp
pusha
pop
xchg
cmp
jmp
dec
pop
dec
adc
mov
mov
mov
adc
lret
movsl
xchg
test
js
jnp
push
xchg
lods
mov
int
lea
push
ss
push
fadds
cmpb
aas
addr16
sbb
ret
or
loopne
jbe
xchg
test
add
sbb
jmp
push
mov
aad
int
dec
shlb
xchg
gs
sti
push
adcb
mov
add
add
int3
lret
ljmp
sbb
test
push
lret
adc
test
lock
shrl
ljmp
stc
push
jle
mov
jbe
shll
sub
sub
xchg
pop
sub
inc
and
aam
dec
arpl
xor
rcr
xlat
sbbl
cmpl
add
fmull
mov
rcl
or
andb
pop
test
push
push
add
out
mov
rclb
inc
fwait
dec
out
les
mov
mov
leave
xchg
imul
xor
fwait
gs
jmp
test
or
cs
mov
ret
mov
loopne
insl
movsl
stos
stos
sbb
pop
loopne
jle
xor
loope
pop
push
jb
hlt
repnz
pop
and
dec
ret
inc
mov
mov
leave
and
lods
mov
lods
xchg
inc
es
add
or
and
shll
push
pushf
fs
mov
repnz
mov
adc
add
arpl
lods
mov
outsl
sub
les
test
jbe
daa
ret
test
scas
loope
outsb
push
hlt
sbb
mov
cmp
pop
xchg
jb
mov
lock
cs
out
scas
jne
fdivl
dec
shrl
fsubrs
jae
out
dec
cmp
je
packuswb
xchg
xor
ficomps
stos
jecxz
int3
cmp
enter
mov
in
test
mov
sarb
pop
xor
and
lods
mov
sbb
imul
cmpsb
loop
mov
dec
and
adc
pop
outsb
fisubrl
call
cmp
int
icebp
mov
enter
xor
repz
push
push
push
push
dec
stos
mov
mov
cmp
inc
or
cmp
jmp
fcoml
and
add
in
dec
aam
mov
fisubs
inc
sub
inc
mov
add
add
sub
dec
dec
mov
xchg
pusha
sub
aas
pop
out
pop
fstpl
insl
out
xor
shrb
cmp
dec
and
xchg
dec
test
sbb
xchg
xchg
ljmp
and
popa
mov
jmp
add
sbb
xor
enter
or
cmp
cmpsb
test
mov
fsubrl
popf
dec
jmp
xchg
push
mov
in
rorb
outsl
push
mov
mov
and
add
addl
mov
leave
sub
clc
push
pop
jge
aaa
dec
rcll
sub
dec
ret
call
mov
mov
clc
adc
mov
out
lret
jl
jmp
clc
adc
insl
and
mulb
and
in
rolb
and
insl
or
add
jmp
xchg
lods
mov
mov
int
pop
mul
push
cli
aad
ljmp
mov
pop
push
imull
lds
test
aad
insl
push
inc
cmp
mov
mov
cs
xchg
sbb
add
inc
test
add
sub
jbe
mov
push
inc
jmp
mov
cmp
pop
adc
arpl
inc
roll
hlt
jp
dec
jbe
fsubrl
loop
cld
pusha
out
jl
push
push
jne
inc
and
mov
out
push
xchg
loope
sbb
nop
and
aad
pusha
stos
cmpsl
cltd
enter
push
popf
mov
mov
cmp
and
dec
dec
fisttpl
xchg
or
or
jae
push
pusha
mov
xchg
pop
adc
xchg
out
push
or
in
fidivs
xchg
or
sub
sbb
movsl
rcrl
insb
pushw
mov
or
fldcw
dec
arpl
push
mov
test
mov
mov
daa
and
into
and
xor
negl
daa
fnstsw
push
je
rol
les
test
fdiv
jbe
nop
cmpsl
inc
mov
sub
pop
cmp
or
pusha
aam
rcrb
pop
xchg
test
or
mov
mov
notl
mov
pop
pop
scas
xchg
dec
or
sbb
xor
sbb
and
movsl
push
jne
push
mov
inc
in
std
fimuls
inc
aam
ficoms
in
int
mov
mov
dec
mov
loope
jp
in
out
mov
insl
fnstsw
scas
mov
pop
inc
and
cs
mov
ja
lods
lret
cmp
aaa
and
sbb
xchg
xchg
fisttpl
and
subl
test
pop
jge
add
pushf
mov
jno
fnsave
sub
mov
push
and
aam
imul
add
mov
lcall
call
xlat
es
cltd
cmpsl
push
jnp
inc
lods
and
inc
or
jb
mov
xor
push
fnstcw
dec
cmp
lds
jg
or
pop
mov
arpl
test
or
shlb
push
mull
iret
add
xchg
mov
cmc
lock
fildll
int
xor
lcall
cmp
sub
movsl
pop
dec
cltd
mov
mov
out
adc
sti
adc
inc
movsb
add
dec
pop
icebp
ja
aaa
out
stc
push
pop
inc
mov
nop
pop
jae
or
jmp
insl
ja
add
int3
jl
dec
dec
inc
pop
mov
cmc
jno
bound
stos
je
lock
pushf
cltd
adc
into
mov
or
sbb
clc
xchg
jae
lahf
sbb
mov
out
frstor
in
sbb
shrl
inc
mov
lods
ljmp
adc
xchg
push
sbb
repnz
push
jns
arpl
int3
dec
mov
aad
jmp
xor
sbb
movsb
cmp
in
inc
lods
test
movsl
jo
loop
jnp
push
sbb
or
lock
jmp
mov
sti
cli
sub
sbb
adc
aam
ror
adc
imul
sbb
push
sbb
rcll
fildll
add
cmp
xor
pop
mov
and
hlt
int3
sbb
mov
dec
lea
pop
adc
lea
push
cmp
mov
ret
lods
pop
icebp
dec
and
repz
inc
pop
cli
fdiv
cs
and
cmp
aam
mov
mov
inc
push
cmpsb
add
outsb
lods
mov
mov
gs
mov
loop
add
fbstp
sub
sub
jb
or
cmp
rcrl
rol
add
in
dec
mov
mov
sbb
aas
xchg
jmp
std
aam
jnp
pop
cmc
pop
jecxz
cwtl
cwtl
divl
inc
fwait
inc
shlb
xchg
pusha
mov
inc
jnp
push
sbb
jo
fwait
dec
sbb
lret
dec
test
lret
stc
mov
dec
pop
or
negl
in
aas
pop
and
lcallw
call
cmp
jns
mov
mov
xchg
pop
in
or
push
xchg
aas
outsl
cmp
jg
aam
push
inc
pop
test
pop
arpl
test
loop
xchg
cmp
jnp
xor
cmp
repnz
or
sahf
test
jno
lret
mov
cmp
xchg
popl
rorl
cltd
and
ljmp
lret
movsl
loop
std
cmp
sub
inc
mulb
sarb
or
mov
out
xor
jmp
lods
enter
jno
mov
aad
inc
repz
mov
int
pop
leave
sub
pop
pop
test
dec
pusha
arpl
push
cmpsl
inc
mov
mov
aam
sbb
push
or
lcall
dec
push
push
mov
in
mov
lret
pop
popf
sbb
xchg
or
fnsave
xlat
loope
adcb
jae
push
jns
call
xor
lods
divb
addl
fwait
clc
jl
push
repz
inc
mov
adc
add
and
mov
sub
cmpsb
add
xor
repnz
jbe
lods
arpl
add
lret
stos
sbb
jge
inc
inc
dec
jmp
loopne
iret
adc
push
push
dec
jno
pop
pop
and
into
fidivrs
shlb
aas
pop
push
jp
or
cmp
out
in
lret
fsubrs
ja
aad
sub
loope
jp
lret
shrb
rolb
mov
mov
xchg
cmp
and
mov
loop
insb
xor
pop
sub
push
mov
jp
sbb
adc
xchg
mov
or
pop
stos
test
and
or
lock
jmp
pushf
dec
out
pop
inc
call
shll
sbb
pop
push
icebp
hlt
pop
jno
das
test
push
cltd
pop
mov
add
cmp
mov
cltd
xchg
stc
jp
outsl
xchg
xor
lret
add
sbb
in
sub
stos
dec
cmp
pop
push
dec
xchg
inc
ljmp
repz
mov
sbb
dec
push
mov
loop
mov
jp
pop
or
jg
fcoms
push
sub
adc
sub
into
or
fsubp
flds
cwtl
push
repz
mov
stc
adcl
cli
repz
fbstp
sbb
mov
test
loope
or
cmpsb
test
icebp
adc
cmpsb
mov
sub
pop
adc
adc
push
mov
cltd
cmp
inc
popa
pop
daa
push
mov
lods
inc
and
filds
adc
xchg
lret
add
enter
test
adcb
cli
add
sbbb
call
jne
dec
dec
arpl
xchg
icebp
and
in
dec
sahf
sub
mov
adc
jl,pn
divb
jge
or
sbb
ret
popa
ds
inc
enter
jae
or
fsubl
pop
xchg
mov
loop
mov
inc
gs
adc
or
jno
call
mov
inc
iret
fnstcw
dec
orl
xchg
pop
lods
ud1
aad
incl
mov
pop
xor
dec
sub
pusha
sbb
and
adcl
fadd
mov
xor
pop
movl
mov
mov
lret
dec
adc
push
movsl
lea
sub
das
and
mov
mov
lcall
mov
lcall
insl
lds
xlat
jbe
mov
or
jge
and
cmc
not
push
es
loop
mov
xlat
ficompl
addl
jns
and
jg
or
shrl
inc
add
popa
stc
push
sub
cs
and
mov
pusha
mov
mov
outsl
xchg
sbb
in
lds
or
popa
rorl
add
cmp
and
jge
adc
scas
sub
iret
ficoms
xor
xor
out
loope
in
arpl
xor
fisubs
call
sbb
movsb
sub
xor
adcb
fmull
dec
sahf
ljmp
adc
push
mov
cmp
sbb
test
jmp
ja
mov
in
es
loop
inc
push
or
jae
jns
aaa
insl
xor
std
mov
int
mov
dec
jbe
outsb
xchg
data16
fs
push
mov
leave
cmc
xchg
jns
sub
es
xor
call
lret
xchg
popa
jb
popa
mov
xor
dec
out
sbb
mov
jne
in
clc
mov
xchg
les
mov
shl
fdiv
and
pop
inc
dec
outsl
mov
ds
iret
cmpsl
hlt
test
test
jecxz
add
push
bound
ds
jmp
insb
ret
mov
cmpsb
cld
jp
cmpsb
or
inc
mov
pop
mov
sbb
cmp
enter
or
push
movsb
lods
sbb
sarl
adc
mov
cmc
add
pop
or
pop
xchg
out
add
adc
idiv
adcb
divb
and
mov
pop
lret
push
scas
filds
test
sub
lds
mov
xchg
jnp
push
mov
mov
mov
int
aad
inc
or
hlt
jl
jp
cmp
push
xchg
xchg
popa
outsl
sub
icebp
mov
std
xor
daa
sahf
xor
popa
adc
loopne
out
dec
sbb
xchg
sbb
adcb
lods
test
adc
ss
cld
sbb
push
sarb
iret
jg
and
into
leave
xchg
mov
pop
aad
mov
ljmp
repnz
sbb
pop
push
into
out
inc
pop
dec
lods
jbe
lret
jno
mov
cwtl
ss
add
nop
sub
fldcw
call
mov
inc
rcrb
pop
out
inc
mov
or
adc
adc
sub
rcrl
repnz
iret
sahf
xchg
sar
iret
jne
mov
xchg
xchg
mov
cmp
movsb
dec
sbb
sub
loopne
jecxz
rorl
dec
xchg
xor
sti
jle
ss
sub
sti
fs
call
dec
daa
test
out
dec
inc
cmpsb
pop
and
bound
movsl
mov
xchg
mov
cmc
xchg
movsl
pop
sbb
sub
mov
push
sbb
cltd
movsl
and
test
movsb
enter
dec
mov
inc
or
mov
ljmp
push
ret
xor
and
push
cmc
shlb
xor
sbbl
orl
jbe
rcrb
fs
xor
adc
pop
in
cld
sub
orl
sbb
test
pop
cmc
xor
jne
xchg
stos
push
mov
hlt
mov
inc
lret
sbb
pop
mov
pusha
stos
push
in
ljmp
mov
adc
jge
repz
jecxz
push
mov
fwait
insl
jge
fnstenv
popa
mov
test
jge
into
or
xor
sbb
push
sbb
dec
fwait
jmp
jg
cmp
pop
arpl
sub
or
fsubs
ja
inc
jb
xor
mov
push
push
sub
fst
mov
stos
and
je
xchg
jle
push
push
adc
fwait
rorb
xor
jge
and
pop
mov
adc
push
inc
test
xlat
imul
rcrl
addr16
gs
push
daa
in
mov
or
test
lods
xlat
incl
cld
mov
mov
enter
outsl
into
mov
dec
sub
xchg
adc
fstl
or
cli
jp
fisttps
movsl
fcoml
push
pop
jp
adcl
pusha
nop
dec
cs
mov
popf
jbe
ret
push
xor
into
dec
inc
movsb
sub
sub
sarb
xor
bound
mov
pop
imul
push
lahf
pop
and
push
lea
cmp
mov
pusha
rolb
out
xchg
sub
test
int
or
fs
and
mov
fistpll
pop
adc
imul
mov
mov
mov
lret
pop
insl
fmull
xor
ret
dec
cmpsb
scas
loop
xor
xor
pop
and
lods
lds
std
loope
sti
sub
sti
in
adc
js
fildl
stos
xor
pop
popf
bound
out
push
cmpsb
push
pop
pop
sub
rcll
pusha
xor
sbb
imul
out
mov
push
out
add
imul
xchg
jp
cmc
sbb
je
fs
xor
movsl
fs
clc
pop
fnstenv
aad
lret
int3
cmovl
das
or
shll
aad
sbb
mov
mov
lret
leave
out
adc
xor
sbb
jmp
out
pop
xor
popf
sub
adc
push
sbb
ljmp
aam
cmp
mov
mov
lret
or
repz
dec
lcall
nop
sbb
push
xchg
inc
outsl
int3
mov
aam
mov
stc
mov
in
sti
ja
mov
js
push
sbb
xor
xor
rolb
lea
push
inc
jecxz
cld
xor
lret
stos
add
into
xlat
icebp
out
jecxz
into
add
xchg
cld
inc
sub
xor
movsb
div
stos
adc
jl
int
lds
jbe
aaa
inc
lcall
push
dec
rcr
fidivs
xchg
mov
stos
mov
out
or
out
mov
aam
mov
mov
pushf
fs
loope
movl
pop
ja
pop
xchg
enter
push
inc
inc
push
aad
push
sbb
jle
in
dec
pop
or
pushf
lds
movsl
int3
lds
and
jbe
inc
add
out
out
fwait
or
std
mov
push
call
or
lods
mov
pushw
sbb
clc
adc
aam
out
push
inc
pop
lcall
nop
cmp
pop
jmp
arpl
pop
test
jne
mov
add
or
aaa
arpl
inc
lods
fwait
mov
push
pop
insb
add
adc
xchg
jmp
loop
pop
jge
fisubs
push
or
outsl
jo
in
stos
cmp
lock
jg
push
addr16
repz
jle
mov
iret
add
jmp
inc
andb
push
rsm
addr16
sahf
call
mov
push
aam
orb
dec
mov
sbb
add
xor
loope
dec
mov
repz
ja
push
negb
fistl
scas
xchg
adc
inc
lods
shl
adc
maxps
roll
adc
sub
pop
mov
mov
cmp
xor
addr16
loope
rorb
enter
or
aas
push
or
mov
idivb
and
sub
idivb
hlt
aam
stc
or
arpl
push
mov
jecxz
pop
mov
test
mov
adcl
addb
in
and
rcrb
cmpb
movsb
push
test
das
mov
enter
movsb
inc
xchg
pop
clc
out
push
stos
daa
mov
jge
incl
ja
push
push
call
adc
adc
cmp
dec
inc
xchg
iret
mov
shll
xor
xchg
shlb
jge
dec
outsb
in
test
shr
jp
jno
xor
mov
jp
jnp
add
or
fistpll
mov
int
test
xchg
lret
adc
xchg
icebp
lods
mov
test
push
pop
arpl
out
jo
xchg
mov
pop
lea
mov
push
push
mov
xchg
loop,pt
adc
andl
cltd
sub
xchg
and
cli
test
cmpsb
imul
std
sbb
rolb
add
je
ljmp
sbb
sbb
or
sbb
aad
inc
dec
lcall
sbb
cwtl
mov
pop
popa
mov
adc
leave
push
or
scas
pop
pushf
inc
push
cwtl
jg
and
scas
or
cmpsb
pushf
andl
xlat
fdivr
mov
pop
sub
mov
test
aaa
xchg
push
lods
in
in
repnz
sub
inc
inc
jns
sub
mov
cmpsl
lock
xor
pause
int3
stc
jg
imul
jno
jo
cmc
and
jg
mov
pushf
bound
leave
mov
movsl
pushf
mov
pusha
sub
jge
adc
stos
pop
jl
jne
xor
decl
jbe
fcom
lds
cmpsl
mov
jae
dec
and
sub
push
xor
xor
lret
add
add
xchg
hlt
or
sbb
mov
in
jo
loope
push
clc
xchg
xor
mov
mov
xchg
xchg
and
push
jp
shll
jp
mov
subl
ljmp
lret
jb
in
loop
adc
stc
dec
popa
sbb
test
aas
pop
xor
test
xchg
pushf
add
mov
sbb
int
jge
stos
pop
add
xor
nop
mov
out
cmc
mov
lods
push
stos
dec
push
pop
cmp
aas
int
inc
mov
popf
out
adc
data16
mov
rorb
sub
pop
shrb
es
xor
xlat
dec
xlat
mov
loopne
mov
mov
fmull
pop
shlb
xlat
xlat
sbb
std
loop
sbb
mov
and
mov
fcomps
popf
stc
jbe
inc
cmc
or
cmp
jmp
add
cmpsb
mov
stc
or
insb
jl
mov
stos
cmp
fldl
cmpsb
add
pop
test
mov
adc
ds
in
mov
xchg
push
inc
sti
jo
pop
pushf
jno
jle
mov
xchg
call
mov
imul
pop
aaa
push
mov
cmp
adc
mov
mov
daa
ja
xor
lret
test
cli
enter
repz
into
xchg
cwtl
gs
pusha
stos
imul
lahf
cwtl
fmuls
aaa
js
adc
push
loopne
packssdw
push
mov
add
adc
or
les
and
sbb
movsl
insb
jno
and
and
adc
fstp
xchg
insb
push
icebp
hlt
dec
dec
sbb
sub
mov
mov
push
add
shlb
int3
jno
cmp
mov
xor
push
xchg
repnz
loopne
mov
pop
icebp
dec
add
sub
fisubrl
in
mov
push
mov
jbe
push
cmc
mov
daa
lods
jns
movsl
or
int
insb
xchg
je
ret
in
aaa
mov
cmp
push
push
inc
imul
jno
mov
inc
in
pop
sbb
xchg
sub
outsb
lahf
orl
or
shlb
movsb
into
out
add
cwtl
ljmp
inc
fnstenv
add
sbb
cli
cltd
clc
incb
mov
loope
inc
jecxz
test
pop
int3
add
lea
dec
push
inc
sbb
cltd
mull
les
pop
sub
bswap
cwtl
inc
cmp
addb
sub
lds
pushf
and
cmp
xchg
mov
fcmove
cmp
fdivl
add
mov
dec
mov
mov
movsl
adc
in
cmpsb
adc
pop
fstps
cmp
addl
fs
loop
inc
popa
xchg
out
fs
sbb
mov
mul
in
imul
adc
mov
mov
sarl
add
rcl
imul
daa
rorl
xchg
xchg
dec
mov
or
sub
or
fwait
out
fidivrl
xor
stc
imul
xor
mov
mov
sahf
pop
and
les
notl
pop
pop
adc
cmpsb
or
ret
adc
mov
ljmp
fldcw
into
mov
adc
jecxz
push
cwtl
add
fimull
push
jnp
adc
push
pop
jge
add
pushf
loope
ljmp
jbe
or
sub
xchg
sub
xchg
sub
mov
pop
push
dec
pop
mov
lret
inc
dec
push
leave
adc
adc
sar
outsb
lahf
lahf
cmp
sarb
add
cmpsl
sub
enter
je
fisttps
in
jg
out
jle
subb
es
out
mov
push
or
pop
xchg
pop
ds
add
add
divl
mov
ljmp
ret
add
xor
push
mov
cli
jnp
fwait
add
jmp
adc
jle
add
xor
adc
dec
mov
outsl
js
sbb
gs
fldt
jp
in
or
lahf
test
mov
clc
fildl
jno
jge
sahf
sub
push
push
adc
xor
xchg
mov
fcompl
ljmp
ja
int3
dec
mov
mov
call
das
lods
sub
inc
mov
inc
push
cmp
sbb
outsl
inc
push
pop
pop
mov
mov
xchg
xor
ret
xchg
aaa
fdiv
xlat
hlt
jecxz
jno
and
les
mov
insb
shrb
repz
lea
jmp
pop
and
stos
jle
sti
mov
bound
xchg
addb
inc
fiaddl
cmp
and
arpl
inc
ds
xor
jg
mov
push
ja
outsb
std
adc
push
adc
and
das
ja
ret
sahf
pop
mov
movb
int
ljmp
ds
ret
mov
leave
test
lds
out
out
lds
testl
jbe
lock
mov
aam
xor
add
sbb
pop
aaa
test
jle
sahf
mov
add
dec
shll
mov
aad
les
sub
pusha
dec
xor
xor
xchg
adc
push
in
jns
cmp
adc
sbb
mov
movsb
jb
inc
cltd
xchg
mov
xchg
out
dec
xchg
icebp
push
repz
jb
scas
inc
data16
inc
jae
inc
cmp
pop
pop
jmp
cmovnp
adc
sub
xchg
cmpsl
lcall
push
repnz
sti
rol
inc
mov
enter
gs
into
das
inc
lret
dec
pop
enter
cmp
cmp
inc
imul
repnz
push
seto
cmpsl
pop
les
push
out
enter
dec
add
test
add
dec
xor
mov
or
adc
arpl
mov
lods
mov
or
dec
add
clc
or
adc
ret
push
in
imull
pandn
out
into
fldenv
std
outsl
jge
or
fistl
pushf
push
pop
aaa
jmp
fsubrl
aas
xchg
and
dec
pop
jle
xlat
lret
outsl
xchg
shl
and
repz
xchg
xchg
arpl
stos
sbb
incl
mov
out
mov
call
cmp
mov
fwait
push
decl
in
test
mov
dec
loopne,pn
jo
mov
mov
mov
jae
popf
mov
lret
fldl
pop
dec
loopne
cmp
cmp
cmp
loop
jmp
jmp
xlat
mov
lock
fidivl
hlt
scas
mov
popa
or
loopne
jmp
mov
and
push
dec
fcom
adc
mov
gs
insl
and
cltd
sub
inc
ds
cmp
mov
aaa
mov
jecxz
scas
adc
adc
push
sbb
xchg
xchg
pop
ret
in
mov
xchg
inc
imul
add
add
int
mov
mov
inc
test
stc
jl
gs
xchg
cmp
imul
out
stc
aam
and
cld
xchg
cs
je
cmpl
pop
push
mulb
cmc
pop
pusha
aaa
dec
mov
mov
cmpl
in
push
push
popf
pop
sarl
jae
xchg
sub
rcl
mov
icebp
cld
mov
inc
rcrl
out
addr16
out
aam
adc
xor
jae
aam
push
dec
js
add
jmp
sub
rcrb
stos
dec
mov
in
and
add
scas
sbb
roll
xchg
add
xchg
cmpb
xchg
mov
sbb
jl
mov
or
add
hlt
repz
loope
push
rcll
pusha
js
sbb
cld
das
or
cld
popa
pushf
cmpsl
leave
sbb
into
sub
out
mov
or
mov
lret
pop
pop
xchg
mov
cmp
push
add
cmpsl
sub
dec
loope
daa
and
jae
insl
flds
stos
dec
loope
mov
out
lods
xor
or
in
call
cs
inc
adc
out
xchg
inc
mov
rcr
addr16
fstp
ss
jmp
lds
jnp
ret
add
xor
push
lods
bound
das
sti
imul
jle
mov
fidivrs
jecxz
push
lods
movb
fdivrl
sbb
and
js
inc
mov
lret
les
dec
cmp
outsl
adc
test
icebp
sub
mov
stc
pop
psrlq
xchg
sar
dec
ss
sti
roll
ds
xor
ds
push
lea
lahf
out
ds
mov
jno
roll
jle
add
imul
jbe
adcl
fistpll
insl
ret
mov
iret
push
and
arpl
xchg
xor
xor
or
pusha
mov
rcrl
ss
leave
cmp
gs
aam
cli
xlat
cmp
pop
cmp
lcall
imul
cmpsl
mov
pop
push
pop
xchg
aaa
icebp
jl
push
loopne
aad
add
push
push
ss
in
and
aam
aam
fcomps
cmp
sti
ror
pop
mov
daa
mov
xchg
lods
es
xchg
enter
stos
push
lcall
adc
in
xor
and
into
mov
lea
jno
sub
jle
pop
pushl
in
push
push
std
pop
xchg
ror
xchg
lahf
sbb
bound
lock
cs
cld
enter
ljmp
aad
jns
dec
rcll
popa
lods
cmp
je
jne
arpl
imul
inc
test
inc
loop
xchg
fimuls
sbb
in
fstpl
xchg
repz
aam
aas
inc
lods
js
xchg
push
out
aam
dec
daa
dec
loop
pop
add
les
dec
sub
insb
jle
int3
xor
fsubl
in
xchg
stos
pop
dec
and
into
insl
in
xchg
outsb
xor
or
add
mov
sbb
dec
or
xor
sbb
inc
push
sub
dec
add
and
ficoms
aam
lret
in
xor
repnz
adc
mov
mov
jge
pop
les
or
loope
mov
cltd
xor
in
sahf
out
in
push
inc
push
es
lahf
leave
in
gs
pop
pop
movsb
ja
mov
sti
jl
stos
jmp
lea
fadds
jbe
sub
shl
fcoms
jmp
cmc
ret
push
imul
lret
push
mov
mov
data16
rolb
stos
jae
lock
mov
mov
mov
lock
push
push
mov
aam
in
aaa
in
adc
adc
data16
jb
xchg
xchg
pusha
xor
mov
and
mov
mov
lret
sahf
scas
mov
xchg
fnstcw
arpl
and
fidivs
add
sbb
adc
das
scas
icebp
incl
jl
sbb
dec
shrb
ljmpw
icebp
add
lock
es
ljmp
and
dec
push
nop
dec
mov
push
push
sbb
add
jb
lods
cltd
je
std
fwait
push
into
add
lcall
lds
sub
imul
pop
les
mov
je
inc
inc
je
sbb
loopne
xor
pop
sbb
inc
sub
mov
lds
push
lods
and
movl
pop
lcall
cmp
js
lds
xlat
xlat
pop
jg
ja
aaa
adc
int
aad
push
lock
mov
push
inc
out
xor
stc
jg
imul
xchg
jmp
in
pusha
ja
push
and
jge
shrl
add
jl
fstps
pop
sub
jae
data16
test
cltd
jne
sets
push
push
shrl
rcrb
dec
or
loopne
mov
rcr
dec
in
pop
sub
push
mov
ret
out
stos
mov
in
lahf
push
jmp
in
loop
inc
jg
pop
popa
xor
xchg
nop
out
or
cmpsl
mov
test
mov
or
push
imull
cli
adcb
or
xchg
add
rol
sahf
mov
add
mov
pop
pop
repz
add
cmp
push
andl
mov
test
icebp
xor
aam
dec
test
jle
aaa
inc
push
inc
call
leave
jg
add
inc
or
decb
cwtl
andl
xchg
aas
push
arpl
jb
pop
mov
fidivrl
rclb
int3
lahf
popa
repnz
scas
mov
or
cmp
lea
push
sub
cld
rorb
adc
out
test
or
xchg
inc
jg
push
sbb
rcrb
sbb
mov
idivb
push
clc
add
rcrb
mov
and
xorl
mov
xchg
inc
nop
fsubp
aam
jbe
jbe
daa
fsubs
jno
lds
loop
mov
ficoml
iret
cmpsb
sub
add
pop
jecxz
pop
std
push
push
or
aas
cmp
outsl
xor
mov
int
sub
sbb
sbb
jnp
add
iret
xor
pop
leave
jbe
inc
aaa
icebp
dec
fdiv
rcrb
mov
roll
leave
push
in
loopne
lock
jnp
jmp
xor
mov
popf
adc
sahf
mov
or
dec
adcl
dec
inc
push
scas
and
sub
xor
jno
repz
loopne
dec
into
jae
divl
fwait
insl
push
pop
xor
xor
out
aaa
scas
ja
pop
and
bound
dec
das
push
cwtl
and
outsb
shlb
dec
mov
out
in
xchg
xor
push
int3
mov
dec
cmp
sti
add
add
or
test
in
mov
fidivs
jns
ljmp
push
xchg
lcall
aam
mov
scas
out
inc
enter
xchg
jae
rclb
imul
subb
add
xor
adc
mov
test
xor
cs
mov
js
adc
andl
frstor
lcall
shrl
mov
pop
add
into
loopne
jecxz
inc
jg
push
jmp
out
ret
jno
hlt
mov
mov
mov
mov
xchg
mov
mov
xchg
dec
adc
jne
add
fadds
iret
and
jg
popf
mov
jp
leave
sub
aam
and
or
sub
enter
dec
outsl
push
out
loop
jge
fiadds
or
xor
inc
xchg
push
shll
iret
mov
pop
test
sarl
push
gs
and
and
push
jg
mov
out
insb
add
pop
in
lods
mov
sbb
lock
jb
dec
adc
bnd
inc
clc
fcmovu
cmp
sbb
cmc
pop
cltd
ss
iret
clc
xchg
aaa
into
pushf
jl
fisubl
bound
dec
or
xchg
add
mov
psrad
sti
sub
dec
or
mov
subl
out
jo
push
shll
cmpl
jle
call
push
jg
stos
ja
xor
sbb
or
or
mov
inc
jmp
xor
ret
jnp
jo
xchg
adc
shll
arpl
fdivl
scas
jg
fisttpl
mov
dec
jb
test
fidivrl
sbb
add
mov
adc
lahf
pop
sbbb
sbb
cmp
inc
dec
push
aad
pushf
xchg
inc
adcl
push
fdivrl
jle
xchg
jge
sub
test
out
cmp
sti
out
push
ljmp
fdivl
movsb
jae
xlat
add
adc
pop
cmp
inc
push
jno
outsb
aaa
lret
xchg
or
add
xchg
add
or
dec
cmp
jmp
adc
pop
mov
cs
insl
pop
leave
mov
adc
stos
pop
xor
lret
add
push
addl
mov
gs
arpl
cmc
pushf
pop
pop
ss
cmpsl
dec
psubb
and
mov
pop
push
nop
jl
dec
ljmp
scas
sbb
push
xchg
pop
sbb
sub
int
jno
int3
mov
mov
ss
test
jne
cwtl
fisttpll
mov
mov
sbb
xlat
dec
jb
mov
add
mov
cli
int3
xchg
cmp
and
lret
and
jae
mov
rolb
mov
lods
idivb
unpcklps
repz
mov
jae
pusha
mov
adc
or
fistl
data16
pop
xor
pop
mov
out
test
or
sbb
add
sub
inc
pop
dec
mov
ds
add
sti
jbe
xor
jle
xor
xchg
adc
lcall
fs
or
and
dec
mov
xlat
push
adcb
push
mov
in
jge
repz
popa
xor
frstor
out
adc
cld
fimull
pop
adc
daa
frstor
out
ds
xlat
int3
sbb
js
mov
xchg
jg
clc
mov
mov
jnp
inc
push
and
test
lea
pop
out
cmp
jno
movzbl
jae
repnz
push
and
xchg
xchg
outsl
push
adc
inc
out
insl
test
sbb
add
pop
inc
insb
or
or
pusha
adc
pushf
lds
mov
lock
adc
gs
mov
push
pushl
iret
je
mov
insl
inc
sbb
push
xchg
in
loop
stc
jns
orl
mov
push
mov
sub
lret
mov
iret
stc
fisttpl
call
cmp
jbe
int
bsr
rcl
mov
mov
push
cltd
lds
sahf
push
arpl
lret
push
outsb
loope
jb
cmp
jge
mov
jne
mov
js
pop
lods
xchg
cmp
dec
dec
testb
or
xchg
mov
and
inc
mov
add
lds
dec
pop
aaa
out
and
stos
or
mov
add
mov
sahf
push
pop
jae
mov
xlat
shl
lahf
stc
or
mulb
test
sbb
inc
pop
pop
or
das
ja
lods
fists
mov
xchg
out
jb
jae
lds
subl
sbb
negl
xchg
jg
test
jns
push
lock
push
outsl
push
lcall
lds
push
mov
mov
push
mov
pop
leave
push
lods
mov
int
nop
enter
dec
cli
push
scas
and
cmp
pop
inc
mov
in
pop
sbb
addb
mov
mov
inc
repz
xchg
xchg
repnz
fbld
mov
sub
sti
shrl
addr16
or
subb
xor
dec
adc
popf
xchg
ljmp
xor
pop
shll
inc
lahf
mov
clc
xorl
add
inc
dec
outsb
cmpsl
lock
leave
pop
jno
xlat
sbb
xor
scas
pop
xor
stos
mov
cli
sbb
push
and
cmc
jb
dec
mov
stos
rcll
inc
and
adc
loope
mov
nop
xchg
fisttps
insb
adc
cmp
pusha
icebp
xor
mov
mov
add
and
xchg
scas
jae
push
xchg
das
mov
rcrb
aaa
sub
imul
repz
push
xor
rolb
stos
mov
loope
jle
sbb
inc
mov
iret
iret
daa
or
push
adc
add
add
movsl
test
xor
pop
mull
adc
stos
gs
fiaddl
aad
xchg
pop
into
or
imul
popf
in
and
rol
test
jecxz
out
add
push
pcmpgtb
sub
sub
pop
jecxz
add
or
out
cmp
cmp
push
mov
sahf
pop
dec
jo
stos
pop
xor
push
cmc
mov
sahf
inc
mov
repnz
imul
clc
gs
inc
adc
jo
jb
in
mov
pop
jp
xchg
mov
pushf
xchg
ret
nopl
push
pop
xchg
mov
rcr
stos
mov
pop
jno
repnz
outsl
ss
mov
mov
cli
xlat
out
mov
push
ja
and
cltd
jnp
xor
inc
ret
stc
sbb
test
fildl
mov
cmpsl
push
mov
sub
rclb
dec
lret
mov
fists
dec
addr16
insb
stos
std
jl
sbb
adc
dec
aam
fidivrs
outsb
cmp
std
outsb
dec
imul
js
cmp
sub
or
hlt
add
jae
shrl
data16
sbb
je
and
jae
jae
stos
push
jo
leave
lock
xchg
dec
sub
mov
mov
push
shr
je
mull
mov
cmp
psubq
dec
dec
jne
fldl
nop
rorl
jl
push
jl
out
mov
pop
lret
cmp
dec
lahf
jb
imul
cltd
aaa
sbbb
pusha
or
pop
rcrb
lahf
cwtl
arpl
push
fstpl
xor
push
repnz
ja
jae
imul
mov
dec
daa
lret
xor
aaa
add
jmp
adcl
repz
xlat
mov
push
sub
ss
pop
fwait
pop
jp
test
and
movsb
ja
sarl
sub
pusha
and
sbb
stc
adc
pop
mov
push
dec
mov
aam
aad
outsb
sti
repz
xor
jbe
int
sbb
mov
into
or
scas
iret
leave
lods
push
mov
rcrl
sub
push
mov
xchg
jmp
stos
xor
out
jnp
mov
xor
sbb
or
push
mov
icebp
fbld
gs
out
xchg
imul
push
stc
aas
push
cld
sbb
jns
mov
xor
xchg
fbstp
pop
test
fmul
mov
enter
ljmp
jb
or
cld
cmpsb
dec
xchg
fnstcw
ja
lahf
mov
fists
mov
pushf
mov
push
add
test
add
pusha
mov
pop
add
movsb
push
fists
mov
inc
push
or
js
sbb
push
imul
test
mov
jae
js
ret
mov
mov
mov
adc
movsb
lds
xchg
xchg
jnp
sbb
out
pushf
xor
pusha
test
xor
imul
ds
daa
push
inc
mov
jne
xor
jno
pop
das
or
xor
or
pop
out
and
ds
enter
add
in
stos
out
mov
mov
xor
sbb
push
inc
ret
jmp
sbb
add
into
dec
cwtl
push
sbb
popa
xchg
stc
mov
js
bound
mov
mov
and
daa
sbb
xchg
lret
daa
push
int3
cmp
push
repz
lcall
into
pop
popa
or
idivl
or
je
fucomip
aam
aas
mov
sbb
test
cmc
mov
and
jno
data16
sarl
lock
loope
adc
push
andl
push
fldt
pusha
inc
outsl
xlat
jp
xabort
cwtl
lds
pop
jo
mov
insl
inc
mov
std
or
cld
dec
repnz
sbb
repnz
adcb
test
ljmp
dec
mov
outsl
dec
mov
sbb
pop
pop
mov
mov
cmc
stos
xor
xchg
lahf
popf
insb
jnp
xchg
addb
dec
push
ret
mov
imul
repnz
ja
cmp
mov
rclb
jl
test
and
repz
loope
mov
int3
int
ficompl
arpl
dec
outsl
jnp
stos
lret
enter
es
mov
lahf
call
mov
out
jge
mov
lcall
lods
and
ljmp
and
fsubrs
adc
pushf
int3
addb
jne
int3
push
test
jp
idiv
pop
sbb
lcall
arpl
mov
arpl
ja
jmp
test
add
aas
dec
sti
ret
jb
ret
daa
cmp
pop
dec
sbb
lcall
jge
in
and
sahf
pushf
lods
fisubl
fiadds
popf
and
lahf
cmpl
xchg
pusha
sbb
xchg
cmp
out
stc
fmul
sub
adcb
scas
and
out
gs
out
mov
rclb
mov
ds
sbb
ja
ret
mov
imul
sbb
dec
push
lret
loopne
mov
sub
cmpsl
cmp
cmp
enter
dec
xchg
subl
inc
sbb
mov
fildll
aad
jmp
and
iret
arpl
mov
xor
dec
jne
xor
mov
sbb
call
sbb
test
push
psubsb
cmp
notb
sbb
int3
pop
and
fwait
ret
push
pushf
sti
push
mov
cmpsb
test
push
pop
rcrl
scas
cli
cmpsb
jb
sub
loopne
in
mov
int
sub
and
sahf
cmpsb
pushf
and
cltd
and
adc
and
lahf
aas
sbb
imul
xchg
push
jae
jne
test
mov
fildl
mov
loop
dec
xchg
shl
daa
in
rcrl
out
js
adc
aam
popa
fstps
xor
inc
subl
notl
insl
add
push
outsb
xchg
mov
scas
mov
xchg
scas
arpl
out
adc
cmp
dec
inc
out
and
mov
test
adc
jmp
sarl
in
xchg
and
int
ljmp
jno
fcomip
dec
push
sub
mov
mov
dec
or
movsl
push
jbe
mov
leave
mov
aam
cwtl
sub
pushf
in
out
ds
lea
adc
stos
sub
leave
and
push
sbb
jge
in
push
aaa
inc
mov
fdivs
daa
aaa
mov
adc
jns
movsl
into
push
pop
cmp
lea
mov
sbb
sub
mov
pusha
adc
sbb
test
mov
and
mov
je
std
setl
inc
xchg
addb
jno
push
inc
lods
andl
cmp
aam
jno
inc
shlb
repnz
xchg
lret
rorb
sub
ja
inc
sbb
adc
cmp
dec
loope
pop
fisubl
out
sub
sub
adc
popf
fldcw
xor
nop
push
leave
inc
sarb
sbb
icebp
mov
lock
sub
cmp
push
les
mov
std
js
mov
cs
fucomi
insb
jo
cmp
mov
cmp
mov
inc
mov
lock
and
loop
and
and
jecxz
mov
dec
push
scas
xchg
push
xchg
and
dec
out
adc
inc
sahf
dec
rcl
ret
ret
inc
in
mov
imull
ja
pop
test
dec
xchg
cmp
sub
inc
cli
scas
notb
ss
push
pop
out
repz
subl
lret
mov
incb
mov
add
std
mov
icebp
jl
xor
jle
push
sub
push
lods
into
push
and
mov
xchg
leave
push
xchg
lods
gs
sub
jae
ja
cmp
dec
push
cld
cmpsl
push
fimull
ljmp
mov
test
pmaxsw
push
mov
or
int
sar
mov
insl
mov
imull
stc
aam
test
jmp
jae
fcompl
xor
stos
push
int
push
xlat
in
or
xchg
and
mov
mov
test
movb
mov
sbb
pop
cmp
sbb
flds
vmovss
xor
mov
mov
enter
xchg
sub
cmp
jl
cmp
je
sbb
jmp
push
mov
je
iret
call
test
jns
inc
jecxz
cmpb
adc
jl
btr
cmp
jbe
fstl
jnp
bound
jne
jmp
and
repnz
add
ljmp
jb
jl
cmp
arpl
xor
xor
scas
in
shl
notl
outsb
or
pop
cmp
mov
jle
cmp
das
call
lods
sbb
inc
inc
test
int3
xor
inc
adc
out
das
mov
lahf
inc
ljmp
inc
mov
sbb
rol
dec
sub
mov
call
jae
popa
adc
pop
dec
mov
sbb
sub
add
cld
stc
mov
adc
dec
imul
cwtl
loop
cld
nop
iret
aam
xor
sub
out
mov
dec
imul
xor
inc
cmpsb
adcb
dec
ds
loope
enter
cmpl
lret
into
sub
repnz
nop
fiaddl
pop
cmp
dec
pop
fists
js
xor
or
push
andb
xchg
sbb
mov
or
pop
xchg
enter
fmull
pop
cmp
xchg
dec
mov
out
mov
xchg
orb
jae
in
sbbb
movsl
test
hlt
orb
cmp
arpl
int
jmp
or
push
arpl
out
aam
sti
push
and
enter
push
stos
ret
aaa
mov
sti
push
mov
movsl
push
mov
and
lock
outsb
push
pop
negl
test
jno
stos
pop
shrb
push
jg
aam
mov
add
mov
imul
aas
and
cmpsb
negl
pop
and
mov
les
aaa
mov
jmp
push
pop
jmp
test
adc
jecxz
js
inc
fwait
cmp
ficoms
cmpsb
aas
and
es
jbe
and
cmp
in
xchg
das
mov
fwait
mov
lds
xor
sub
inc
mov
sti
out
loope
xor
lret
jae
pop
dec
call
jo
scas
mov
jl
jb
xchg
bnd
sub
inc
xchg
mov
mov
cltd
push
insl
arpl
cmpsb
jl
xchg
inc
sahf
and
cld
cmpsb
cmp
lret
add
fildl
pop
movsl
lods
repz
dec
lcall
mov
jnp
arpl
int
ret
cltd
lods
push
es
pop
mov
pusha
mov
jge
test
sub
in
pop
pop
fbstp
pop
testb
sub
mov
mov
xchg
jb
shll
ds
sbbb
out
mov
pop
mov
pop
cmp
mov
pushf
cmc
and
mov
xchg
push
aam
mov
orl
mov
sbb
lock
mov
mov
cmc
std
je
sbb
mov
fldenv
or
mov
lods
jne
shrb
std
jnp
cmpsl
ja
or
shlb
mov
call
loopne
sub
nop
sbb
hlt
adc
stc
popf
push
push
jb
dec
dec
cld
out
insb
jle
inc
test
xor
es
pusha
push
popa
cwtl
mov
adcb
adc
stc
into
inc
mov
xchg
sahf
nop
fisttpll
or
xor
mov
cmp
insb
add
ret
out
aam
ret
push
or
flds
jp
cmp
fwait
ss
xchg
jle,pn
dec
popa
mov
psrld
add
xchg
push
fisubs
insl
shll
mov
mov
loope
fnstenv
shll
insb
cmp
and
out
and
data16
sti
dec
les
mull
cmpsl
mov
mov
cli
mov
fimuls
push
or
lret
sub
adc
stc
and
xchg
cmpsl
lock
lahf
call
bound
mov
popf
das
stc
shrb
sub
push
push
repnz
jle
push
cmc
and
subl
mov
pop
dec
lret
mov
sbb
inc
mov
pop
out
addb
pop
pop
in
push
roll
arpl
pop
ret
cmpsl
aaa
cmp
xorl
lret
out
jmp
jb
pop
loope
lret
dec
fiaddl
gs
insl
into
mov
push
loopne
cltd
ja
testl
xchg
cmpsb
adc
rcr
fnstcw
ror
lcall
mov
lret
es
mov
fs
cmp
out
xlat
xchg
call
xor
cmp
inc
lahf
pop
jle
out
ss
pop
or
or
shlb
enter
popf
leave
dec
loopne
xchg
test
das
push
push
mov
inc
jno
mov
test
pop
ret
shl
addb
adc
subl
mov
dec
in
sbb
icebp
inc
pop
dec
repnz
xchg
fs
xlat
mov
loop
or
add
adc
adc
mov
cmp
cmpsl
rolb
popf
inc
stos
jge
push
push
jbe
nop
adc
mov
cs
test
xchg
and
lock
sub
push
and
test
cmp
jle
roll
xchg
jnp
nop
sub
adc
frstor
std
or
shlb
mov
insl
roll
xor
fisubrs
cmp
sub
or
pop
mov
sbb
mov
lret
inc
lds
scas
out
cld
push
movsb
lahf
sbb
push
sbb
cld
notb
cmp
adc
mov
pop
stos
aas
cmc
popa
sub
sbbb
sbb
sub
aad
mov
push
xor
xorb
lea
xchg
push
in
sub
xchg
fmul
xlat
mov
push
ljmp
xlat
xor
push
stos
jge
leave
rcrb
mov
xchg
int
jmp
sub
mov
pop
das
mov
lea
xor
nop
xor
mov
loop
sub
inc
adc
jns
std
adc
out
fucomip
sub
xchg
icebp
ss
mov
sbb
cs
aas
aas
jnp
mov
mov
arpl
sti
repz
mov
loop
stc
je
ja
or
mov
mov
stos
loopne
and
scas
mov
loop
sbb
popa
cwtl
lret
cmp
dec
jecxz
out
sub
jmp
pop
scas
cmp
mov
pop
xorb
jne
mov
sbb
lcall
lcall
jge
movsb
pop
fbstp
testl
xor
cmp
fwait
pop
fldl
or
xchg
dec
jbe
stos
mov
cmp
and
or
iret
pop
sbb
test
add
add
ja
xor
sti
cmp
mov
fwait
popa
sarb
mov
sbb
jo
push
test
jle
mov
push
pop
daa
xchg
out
imul
lods
das
adc
in
mov
inc
inc
in
je
loopne
adc
fwait
insl
cli
out
shll
cmp
mov
cmp
xchg
mov
adc
out
sbb
les
add
mov
and
into
pop
fwait
mov
negl
mov
dec
push
std
loope
dec
lahf
cmc
add
xchg
nop
and
mov
and
subl
cmp
pusha
and
popw
mov
sbb
fnstcw
loopne
scas
cmp
jne
push
jne
pop
cli
jnp
sub
xchg
xor
lock
lods
dec
adc
lds
inc
push
jp
mov
pop
cmp
iret
lret
mov
add
mov
xor
sbb
pop
std
add
jbe
inc
ds
test
sbb
shlb
dec
xlat
cld
xadd
xlat
psubq
imul
dec
mov
sbb
pop
cmc
test
push
xchg
lcall
push
in
add
xor
repz
mov
cmp
ret
int3
jp
int3
inc
xor
cmp
nop
jb
insb
outsb
rcll
jmp
and
xlat
fiaddl
cmp
arpl
push
pushf
ja
dec
mov
dec
in
mov
add
rep
mov
mov
push
notl
add
imul
mov
or
pop
pop
test
xchg
dec
sahf
enter
xchg
sbb
xchg
sbb
ret
jb
mov
dec
push
lods
cmp
cmpsb
sbb
sbb
mov
inc
xchg
cmc
sub
xchg
dec
stos
mov
jns
stc
loope
lret
nop
fsubl
fldt
jmp
push
push
sbb
nop
jle
xor
jnp
sub
js
repz
mov
icebp
into
mov
bound
movsb
xchg
sub
bound
mov
cli
and
popf
jne
dec
and
or
fwait
lds
mov
adc
jp
push
jne
jle
out
add
xor
mov
xchg
xor
dec
aaa
inc
repz
mul
loope
sub
xor
mov
shrl
adc
add
lods
sbbb
mov
imul
push
rorl
inc
rcrb
insb
sti
into
pop
in
dec
les
xchg
scas
lcall
nop
fnstenv
cmc
loopne
insl
cli
jb
into
arpl
pop
push
lahf
push
and
cmp
sbb
xor
mov
addr16
repz
pop
push
sbbl
add
cltd
pop
or
and
push
push
fnstenv
mov
mov
out
pop
repz
repz
jb
cld
and
dec
sub
popf
les
ficomps
mov
jo
in
pop
outsl
and
push
out
clc
int
and
jg
test
fwait
lods
mov
mov
jg
inc
jnp
outsb
insb
scas
test
insl
xor
dec
mov
popf
clc
int
imul
dec
jl
sarb
ret
and
fstpl
jo
rcrl
cmp
or
ret
xor
mov
mov
pop
dec
shl
je
inc
push
test
and
inc
sbb
mov
aaa
repnz
xor
lret
into
hlt
inc
stos
mov
dec
stc
pop
push
aad
aam
push
mov
xchg
sub
or
cmp
ja
flds
xor
pusha
jp
loope
jo
add
xchg
pop
dec
sarb
adc
negb
out
addl
sub
jle
pop
xchg
jmp
push
jp
pop
aas
or
inc
mov
dec
adc
jnp
out
push
xchg
clc
push
lods
jns
jecxz
add
dec
and
faddl
sbb
xlat
xor
add
inc
sub
and
cmc
ja
pop
adc
popa
mov
sub
out
mov
rcl
mov
dec
pushf
test
xor
call
pop
inc
and
inc
ror
fdivl
shrb
lcall
mov
pop
sbb
fisubl
mov
push
test
stc
mov
hlt
mov
ret
and
sub
pop
jns
loope
loope
push
dec
pop
mov
js
mov
push
mov
scas
test
iret
andl
jae
movsl
seta
in
mov
fisubs
cmp
cld
sub
jg
inc
aam
addr16
outsb
divb
lock
sbb
pop
cltd
and
mov
push
xor
xchg
mov
mov
out
daa
int
inc
into
mov
daa
pop
xor
inc
jge
cmpl
push
das
das
lods
rclb
push
adc
mov
decl
call
mov
popf
jbe
xor
jo
dec
pop
loop
pusha
fstpl
in
push
add
outsb
sbb
inc
mov
aad
insl
adc
add
cltd
stos
in
loop
dec
stos
shll
jl
shlb
sti
sbb
xchg
arpl
mov
xor
push
cmpsl
fwait
or
jecxz
fcoms
lock
push
filds
icebp
fnstenv
pop
mov
mov
adc
jp
and
daa
xor
shll
jp
pop
test
gs
aaa
cmpb
outsb
push
mov
mov
mov
into
fwait
dec
cmpsb
dec
pop
rolb
push
push
xchg
push
pop
mov
call
lret
push
ja
adc
cs
dec
int3
js
call
cmp
sbb
jbe
outsb
jl
push
dec
gs
jbe
ss
and
push
or
aad
fistpll
inc
mov
dec
mov
insb
hlt
sbb
ds
adc
jbe
imul
outsl
or
mov
cmp
loope
scas
clc
repz
inc
enter
lret
and
ret
pop
add
xor
aas
ds
pop
rcl
cmc
out
in
add
xchg
sbb
fnstsw
bound
mov
outsl
pop
fstps
sti
xchg
adc
in
push
adc
push
adc
mov
dec
out
xor
mov
lds
sbb
push
cli
bnd
repnz
adc
lcall
and
sbb
loopne
mov
test
sub
cmc
pop
xor
pushf
mov
nop
sbb
adc
data16
jmp
add
mov
jnp
push
subl
roll
out
mov
xor
sar
lret
popf
stos
subb
pop
inc
and
int
mov
and
xor
pop
push
xor
rcl
jecxz
test
pop
add
inc
bound
xchg
push
shlb
sub
pop
mov
xchg
rcrb
jns
jae,pn
mov
mov
out
mov
sub
test
xchg
push
push
push
int3
add
pop
sbb
in
push
pop
inc
adc
and
sub
lods
faddl
inc
cmp
inc
xchg
scas
jmp
mov
imul
jne
test
jo
mov
pop
fcmove
cmp
sbb
popa
inc
xchg
lahf
add
popa
lahf
jb
or
js
dec
minps
loopne
jle
push
clc
pop
mov
pop
cmp
xor
cwtl
insl
in
xchg
mov
mov
pusha
push
sbb
stc
dec
or
push
ljmp
aaa
mov
xor
lods
in
lret
adc
data16
out
sahf
nop
jnp
imul
lock
add
out
cmpl
lea
dec
lret
dec
dec
xor
fbstp
push
dec
ficoms
std
pop
orl
sub
and
mov
fdivrl
adc
dec
inc
inc
fcomps
pop
call
insb
jb
xor
addr16
daa
sub
out
out
add
sti
lods
cld
and
dec
fstpl
cltd
xlat
insl
cmpsb
cmpsb
add
push
repz
xchg
pusha
outsb
or
pop
popf
lods
ret
mov
jnp
clc
int
and
pop
leave
dec
add
xchg
mov
lret
dec
cmpsl
jb
lods
gs
das
pop
mov
dec
fmul
xchg
into
mov
in
mov
cs
jg
cli
adc
aaa
inc
push
popf
push
dec
cwtl
and
or
xlat
push
xlat
or
jb
repz
or
popa
cltd
pop
iret
nop
or
and
adc
sbb
aaa
out
sub
dec
push
mov
rcll
shlb
adc
cld
ja
xor
and
loope
test
mov
adc
mov
inc
pop
out
mov
cltd
lock
pop
xchg
imul
add
cwtl
or
xchg
call
mov
inc
cmp
dec
dec
int
cli
push
pop
cmp
inc
sub
roll
mov
mov
inc
push
add
aaa
dec
push
or
iret
repnz
and
and
hlt
pop
in
out
cmc
sub
push
push
dec
xchg
jmp
jno
adc
fsts
mov
mov
sbb
pop
mov
out
sub
loopne
xchg
add
pushf
inc
pop
pop
mov
pop
mov
and
mov
dec
mov
cmc
test
xchg
aas
adc
or
xor
ds
pop
dec
subb
sbb
popa
js
sbb
nop
mov
cmpsb
scas
sahf
dec
push
pop
jecxz
inc
imul
cmp
xchg
shrb
nop
int
push
ds
mov
mov
inc
ud2
adc
insl
cmpsb
or
sub
dec
int3
adc
aad
aad
notb
ljmp
sub
daa
mov
xor
mov
rcll
rolb
cmp
mov
das
xchg
xchg
lods
push
push
int3
or
mov
xlat
mov
mov
push
mov
nop
in
push
xor
jl
popa
stos
jb
dec
dec
xchg
jbe
into
inc
insl
push
or
lret
js
mov
cmpsl
rorl
inc
mov
sbb
negb
or
add
mov
mov
adc
mov
push
orl
std
fxch
clc
mov
imul
or
sbb
lods
jmp
and
inc
xor
mov
cmp
outsb
btr
xchg
into
push
xchg
mov
push
call
inc
push
iret
or
test
loope
hlt
pop
lea
fdivrl
mov
sbb
mov
lahf
ss
sti
lock
jae
mov
popf
add
inc
data16
dec
xchg
fldl
and
cmc
popa
xchg
sbb
fimull
sub
cmp
es
push
mov
lahf
xchg
jbe
push
insl
sbb
xor
lock
add
jb
xchg
movsl
imul
shll
es
jb
adc
push
mov
adc
inc
jbe
shll
jno
sbb
in
mov
call
pop
jge
cli
push
cltd
mov
lock
mov
mov
clc
mov
xchg
arpl
bound
inc
mov
jle
cmpsl
sbb
cmp
mov
ret
push
xchg
dec
push
mov
mov
xchg
popa
mov
push
jg
push
mov
movsb
and
les
jo
arpl
xlat
or
mov
ret
adcb
or
fsubs
out
adc
jmp
jae
push
xchg
jb
jnp
mov
cmpsl
inc
pop
ret
addl
mov
dec
or
lds
mov
aad
pushf
jmp
vprotq
cmpl
fdivr
clc
int
sub
das
xchg
sbb
and
mov
jp
bound
mov
cmp
mov
xor
or
push
pop
movsb
jb
or
jo
fildll
mov
xchg
xchg
jb
pusha
dec
lds
fsubr
xchg
jns
mov
push
adc
dec
mov
bound
push
mov
xchg
jl
xor
ret
filds
movsb
mull
jne
add
mov
ja
call
addr16
jl
insl
sbb
jae
and
popf
mov
jae
add
add
adc
pop
adc
cmpsl
mov
push
out
jne
jbe
jg
fwait
cmp
sbbl
jo
sub
jl
call
lcall
mov
push
fcmovbe
adc
xor
or
faddp
in
pop
popa
mov
icebp
xor
outsl
pop
outsb
cs
add
mov
or
inc
sub
cmp
xor
pmaddwd
fcomps
mov
sarb
scas
pop
inc
out
ss
mov
hlt
inc
addr16
mov
mov
add
aaa
adc
xchg
addr16
sahf
ficoms
scas
sarb
jnp
roll
dec
adc
ja
add
dec
xor
inc
ljmp
dec
fcompl
push
or
loope
pop
loope
and
fsubs
add
sbb
aad
inc
or
pop
ficomps
xor
stos
dec
xchg
rol
in
add
into
ror
dec
pusha
pop
test
loop
fisubl
fs
ds
pop
mov
mov
cmpb
insb
nop
out
and
mov
fs
add
pop
xor
sub
loopne
and
sbbb
aas
ja
push
and
fucomp
pop
dec
test
add
and
loope
adc
cwtl
rcrb
out
jae
les
repnz
xchg
cmpsb
das
pop
xchg
or
test
std
xchg
lret
out
mov
movsl
mov
dec
call
jle
stos
fucomp
push
pusha
adc
dec
rcl
loopne
add
sub
sbb
pop
jns
ja
mov
lea
mov
xor
dec
and
lret
xor
je
push
repz
aam
popa
test
pushw
sub
aad
inc
pop
mov
adc
shrl
jne
jp
sub
jo
jbe
or
mov
pop
cld
inc
icebp
loop
xor
cwtl
lods
lahf
outsl
popa
inc
add
aaa
add
lods
scas
sub
mov
inc
lret
pushl
or
adc
lods
aad
jg
sahf
mov
shlb
in
cmpl
mov
popa
in
sbb
jno
push
mov
std
mov
addr16
in
sbb
and
out
shrl
and
push
adc
add
js
rorb
out
mull
dec
cli
loop
mov
repz
stos
roll
mov
add
daa
mov
mov
shr
int
iret
pop
shll
xor
sar
xor
xchg
jecxz
add
es
clc
jmp
outsb
aaa
jecxz
out
hlt
add
pop
cmp
mov
xchg
out
lock
mov
mov
nop
mov
out
fisubrl
jbe
push
clc
mov
and
cmp
mov
cmp
mov
cmp
ds
xchg
xor
movsl
xor
dec
jae
add
es
sahf
fsubr
adc
lock
sbb
sbb
fisttpll
push
xchg
mov
enter
out
xor
mov
jnp
add
in
imul
cli
push
jb
dec
mov
pop
sbb
into
ss
sbb
pop
mov
jg
jle
add
or
jne
cmpsb
pop
out
insl
cmp
fstl
pop
sbb
std
cmp
mov
scas
or
adc
and
leave
leave
mov
mov
push
out
out
mov
rcll
dec
fs
pushf
pop
sahf
fsubrs
ds
dec
test
or
cmp
fwait
in
push
dec
test
and
aas
lcall
mov
sar
add
dec
sbb
les
or
insb
sub
in
sbbl
add
jb
ds
out
adc
mov
xchg
mov
lods
xchg
cmp
xchg
mulps
push
addr16
data16
pop
mov
into
push
fs
and
or
pusha
sub
inc
cmp
lret
adc
xchg
inc
lods
jo
mov
and
jge
mov
xchg
cs
stos
jns
jne
test
xor
sbb
or
outsl
subl
inc
cmc
lds
pop
aas
jl
sbb
rclb
push
outsb
outsl
imul
aaa
hlt
cld
int
dec
ss
shlb
cmp
inc
popa
sbb
enter
push
mov
cltd
dec
rcl
mov
pop
testl
cmp
xchg
ror
outsl
xchg
popa
pop
jge
mov
cld
cmp
insb
mov
in
xor
mov
push
xor
stos
nop
test
jle
in
push
fsubp
push
call
push
lods
cli
es
rcl
dec
mov
and
push
jge
sbb
mov
mov
pop
imulb
std
xchg
jb
cld
mov
pop
stos
pop
lahf
imul
inc
fwait
xchg
int3
inc
add
pusha
pop
add
xchg
push
outsb
adc
jno
iret
cmp
push
lcall
adc
shll
les
out
insl
cmp
adc
mov
sbb
dec
xor
insb
aas
lock
test
inc
push
mov
pop
std
shl
out
lods
pop
mov
mov
push
sub
jae
rcll
loop
loopne
cmp
shrb
jno
mov
je
push
arpl
jl
flds
lea
outsb
sbb
inc
pop
stc
inc
fstpl
sub
jp
mov
sbb
sub
pop
call
xor
sahf
xor
push
shrb
sbb
out
dec
add
push
stc
mov
sahf
pop
gs
les
xor
insb
pop
sub
push
imul
dec
rorl
dec
add
or
or
mov
jne
pop
jae
fidivs
outsl
push
push
les
push
lea
scas
bound
insl
je
sti
sarl
jecxz
out
push
mov
nop
ljmp
or
ficomps
test
or
xchg
sti
mov
in
dec
nop
jg
and
inc
pop
loop
adc
xor
pop
and
imul
scas
nop
cltd
xor
pop
loop
mov
jle
jo
mov
inc
mov
jmp
cmp
out
fsubl
inc
ret
cmp
les
pop
add
pop
adc
iret
push
sub
ret
mov
adc
inc
or
out
or
mov
add
push
xchg
test
xchg
mov
fsubrs
sbb
mov
jo
adc
adcb
out
fs
in
lds
inc
jae
jl
xor
fisttpll
mov
sub
aaa
sti
das
pop
dec
xchg
jmp
adc
call
pop
lods
dec
addr16
lcall
mov
mov
pop
sbb
pop
jb
jne
int3
xor
cld
push
xchg
and
lahf
jg
mov
xchg
sbb
cmp
repnz
fistl
std
outsl
jg
pushf
push
or
lods
mov
and
add
out
roll
aaa
adc
callw
sub
sti
pop
jnp
imul
arpl
xchg
pop
cli
jb
fcmovnu
inc
jmp
xchg
mov
andb
mov
enter
cmc
pop
daa
jae
test
orb
mov
test
fildl
out
mov
sbb
pop
jmp
cltd
leave
in
sub
fcoms
shld
in
xor
and
xchg
dec
add
mov
mov
mov
mov
testl
or
lcall
or
aad
inc
mov
lods
std
ja
jbe
repnz
cmp
lods
lds
pop
jo
jb
sbb
mov
cmp
iret
mov
movsb
sbb
loope
cltd
mov
lods
adc
add
stc
jp
cmp
jbe
lea
je
stos
sub
loopne
addl
push
pop
ret
jg
cmp
stc
fnstsw
rolb
shl
outsb
int
fcompl
ret
pop
popf
cmp
fwait
cmp
inc
scas
mov
std
in
add
mov
jecxz
scas
fwait
pop
testb
in
stc
xchg
jo
sti
xchg
mov
and
pop
insl
rcrl
lar
data16
out
sbb
mov
sub
adcb
xchg
push
sub
adc
lods
fbld
push
xchg
pop
dec
repz
or
out
dec
push
addr16
ss
dec
mov
jmp
enter
jg
imul
out
lds
daa
sub
test
or
outsl
pop
jmp
push
xor
adc
cmpl
xchg
cmpb
popa
adc
jge
xchg
dec
add
outsb
nop
rorl
mov
jae
lea
ljmp
hlt
pop
cmpsb
and
cld
loopne
mov
xchg
dec
sub
ret
mov
dec
push
imul
fs
stc
mov
pop
mov
lea
mov
outsl
cmp
xor
jae
jle
push
mov
sub
out
sti
fidivrl
and
add
lcall
popa
cmp
ljmp
and
mov
mov
insb
and
mov
push
jg
push
and
inc
fistps
lret
insl
sbb
push
jmp
pop
je
mov
push
lock
and
xchg
sub
test
lahf
jecxz
sub
adc
loopne
jnp
and
outsb
sub
popa
and
ret
es
jmp
push
aam
addl
pop
cmp
lret
mov
jae
popa
ss
sbb
sub
fists
mov
repz
push
cmpsl
mov
divl
loope
or
push
repnz
stc
in
out
xchg
xchg
jno
inc
gs
jp
mov
imul
sbb
fcomi
stc
sub
fidivl
outsb
xor
loope
or
pop
mov
push
cltd
ljmp
lock
hlt
cltd
xchg
fisubl
or
mov
pop
or
shll
push
mov
sbb
mov
fistpl
stos
fildl
sbb
test
sarb
xchg
and
faddl
or
test
mov
subb
lcall
push
jnp
mov
xchg
ds
jp
jmp
pop
inc
insb
xlat
pop
mull
mov
mov
sbb
or
sbb
pop
scas
dec
fidivl
jmp
xchg
pop
cmp
outsl
int
push
xlat
loope
mov
push
call
scas
lea
out
out
je
mov
lea
bnd
inc
in
cmp
xchg
divb
pushf
data16
add
cmp
pop
inc
pop
add
push
dec
sub
xchg
cs
repz
inc
pop
mov
sub
imulb
adc
lcall
or
cmpsb
inc
dec
cs
or
xchg
imul
stos
mov
ljmp
imul
movsb
xlat
dec
xchg
stc
dec
jg
mov
inc
xchg
cmpsb
push
ljmp
cmp
xchg
rcl
loope
cmp
adc
jns
or
xor
xchg
jp
jnp
ret
pop
cltd
jge
xor
sub
add
pop
pop
mov
xchg
shll
andl
push
and
cmp
push
mov
lds
lods
mov
imul
or
mov
fbstp
inc
or
jl
add
mov
sbb
cwtl
sub
xor
rcrl
and
sbb
lds
sbb
ficomps
lock
sbb
stos
dec
hlt
fistl
insl
shll
lock
sti
test
test
sbb
mov
xchg
clc
jbe
mov
pop
inc
xor
inc
xchg
jnp
dec
xor
repz
jl
pop
and
inc
test
mov
lods
jg
cmc
cltd
add
mov
cmp
icebp
jmp
je
aad
or
ret
mov
push
nop
sbb
sarb
mov
cmp
mov
xor
insb
and
das
xchg
testl
loope
sub
cwtl
inc
jbe
aam
lock
pop
push
adc
fisttpl
push
ja
inc
dec
jne
loop
aam
testb
adc
push
dec
add
hlt
pop
jecxz
repz
fnsave
lods
jns
inc
add
das
loop
inc
in
inc
les
mov
dec
xchg
ja
jne
out
jae
push
cli
imul
out
mov
adc
loope
mov
inc
mov
or
xchg
push
sarl
call
ret
loope
add
repnz
jns
xor
outsl
rclb
mov
in
cmp
scas
xchg
rorb
pop
adc
ss
in
shrl
jae
insl
scas
out
int
sbb
xchg
imul
inc
adc
ret
outsl
ret
std
imul
push
test
pop
fiadds
clc
adc
int
adc
iret
je
gs
fstps
adc
jb
bndldx
stc
sahf
stos
dec
sub
inc
cmpl
sahf
add
jge
fcoml
and
or
xor
icebp
dec
ljmp
mov
lahf
mov
cmp
cmpsl
adc
sahf
dec
inc
mov
pop
into
cmpb
js
adc
inc
pop
das
push
popf
cmp
test
and
inc
shlb
out
inc
int3
sub
sbb
outsl
inc
mov
fstpl
test
sbb
addr16
enter
push
lret
pop
jge
mov
and
testb
and
mov
pop
pop
mov
sub
xchg
addl
cmp
sub
leave
pushf
out
cwtl
adc
lods
addb
add
and
or
lahf
sbb
pop
jp
push
and
ja
icebp
xchg
cltd
fisttpl
xchg
xchg
sbb
fisubrl
test
cmpsb
dec
push
mov
xchg
subb
popf
mov
sarb
pop
hlt
inc
dec
mov
sbb
movsl
xor
in
adc
jne
xchg
mov
jns
push
xchg
out
or
sahf
mov
mov
iret
insl
xchg
xchg
jbe,pt
pop
das
xchg
insb
fdivrl
sbb
adc
cmp
push
xor
push
clc
imul
pop
mov
xchg
gs
scas
mov
ss
jecxz
sub
mov
sbbb
sub
fsubl
loop
dec
cmpsb
push
movsl
sar
mov
xchg
add
jge
or
xor
push
sbb
shll
pop
lret
pop
pushw
loopne
pop
jo
dec
dec
fld
daa
shr
cmp
jmp
mov
test
push
or
dec
lahf
bound
popf
push
leave
sbb
dec
imul
js
xor
das
ret
stc
cmc
cmp
loope
push
fidivs
mov
push
rcl
push
xchg
or
and
sub
or
pop
rcll
dec
testl
or
icebp
pop
lahf
stc
and
xchg
ret
test
out
dec
mov
ret
push
sub
push
dec
les
insb
icebp
jl
cmpb
xor
mov
std
cmp
push
pop
out
xor
adc
push
mov
lods
adc
test
cli
sub
into
imul
in
scas
imul
cwtl
xor
mov
xchg
mov
pop
mov
xor
xor
dec
movsl
or
flds
cld
and
testl
pop
aas
in
cmp
repz
jns
fadds
pop
mov
xor
and
inc
cmp
lods
fiadds
cmp
or
ror
or
lret
sub
dec
mov
das
divl
jmp
cmp
loop
mov
sub
sahf
or
bound
test
movsb
or
xchg
addb
test
pop
mov
xchg
mov
vmwrite
sub
xadd
rcrl
xchg
pop
iret
fadds
enter
call
cs
out
and
adc
xor
fwait
xchg
xlat
push
flds
dec
push
jb
stos
sti
mov
push
adc
push
cmp
std
add
jmp
mov
adc
pop
pop
mov
push
xchg
sbbl
fmulp
adc
xor
jbe
cwtl
jl
inc
test
out
cmp
pop
sbb
jbe
push
cmpl
push
pop
cmp
sub
movsl
mov
push
icebp
sarl
jp
cmp
inc
shl
xor
or
sbb
rclb
xchg
daa
lea
or
pusha
or
mov
xchg
int3
mov
ret
pop
fbstp
adc
xchg
pop
xor
jae
movsb
push
push
pop
pop
or
xchg
repz
adc
sti
cmpsb
mov
or
subb
and
xchg
and
xabort
ficomps
mov
outsl
pop
push
xlat
jle
into
mov
inc
add
dec
rorl
dec
fcomps
pushf
into
xchg
mov
add
and
aad
push
clc
mov
cmc
test
jl
jl
push
cltd
cmpsb
and
dec
out
mov
jae
mov
inc
sbb
cmp
cmc
ficompl
mov
push
pop
dec
mov
xorl
insl
adc
sbb
jg
outsb
xor
dec
pop
adc
push
jle
pop
fsubs
ljmp
pop
daa
ret
xchg
mov
pop
leave
nop
mov
out
or
pop
mov
fsub
sbb
push
aam
stc
clc
sub
stos
pop
or
push
clc
mov
mov
addr16
or
daa
movq
push
sub
mov
inc
fldenv
xor
das
xchg
fidivrs
xor
jae
aam
jg
dec
and
pop
je
jno
icebp
sbb
xchg
fnstsw
xchg
add
dec
jge
inc
and
xchg
insl
pop
in
dec
popf
aas
ss
sbb
daa
mov
pop
mov
inc
sub
ja,pt
sarl
aaa
inc
push
out
aad
push
int
aam
bound
sbb
pop
sti
push
adc
scas
pop
incl
daa
lock
and
jmp
mov
add
and
pop
mov
xlat
jle
or
xor
stos
push
dec
fcoml
cmp
jecxz
mov
jne
outsl
pop
push
into
or
int
test
out
mov
popa
mov
push
xor
out
cmp
jne
push
push
adc
xchg
sbb
pop
fiaddl
push
rcrb
jbe
push
cltd
popa
cld
std
es
adc
aam
bound
mov
and
test
pop
pushf
mov
shlb
push
sbb
xchg
in
push
mov
sti
and
mov
repnz
xchg
push
loop
test
inc
gs
imull
sbbl
outsl
pop
and
lahf
mov
lods
mov
dec
cs
in
cmp
shrb
push
call
xor
negl
aad
dec
mov
out
jne
mov
std
addr16
pop
lcall
xor
inc
leave
cwtl
mov
xchg
stc
dec
mov
add
nop
in
push
outsl
cs
cltd
or
xchg
arpl
push
pop
frstor
lcall
sub
push
aam
lcall
out
jp
dec
xor
cli
xchg
mov
sub
rclb
pop
dec
cs
adc
movsl
jge
xchg
or
imulb
in
pop
jo
jmp
shl
dec
push
push
scas
xor
aam
dec
add
hlt
popf
mov
and
mov
pop
loope
sbb
adc
xor
insb
inc
inc
mov
loope
inc
inc
or
data16
int
adc
loopne
iret
cwtl
mov
add
roll
cmp
sub
out
jecxz
mov
xchg
test
fldenv
sbb
imul
hlt
jnp
push
lret
mov
lock
sbbb
adc
rcrl
stos
stos
push
dec
divl
scas
dec
pop
aad
sub
inc
insl
pop
out
lret
mov
aaa
inc
lds
scas
outsb
jbe
jo
push
addb
pop
pop
jno
mov
test
mov
ja
adc
imul
lret
pop
cs
mov
adc
sbb
mov
or
into
xchg
mov
inc
bound
push
and
add
je
test
lret
bound
dec
jmp
lcall
out
and
xchg
pushf
sub
inc
push
or
loop
push
insl
cmp
jmp
or
cmpsl
lret
fstpl
rcrb
mov
mov
aas
aas
mov
xor
test
sbb
test
iret
scas
pop
das
jno
adc
mov
xor
jo
sub
sbb
jo
mov
rcrb
sbb
rcrb
mov
out
ret
mov
icebp
rcrb
cmp
adcl
xchg
das
jl
out
xor
mov
cmp
push
adc
mov
outsb
inc
fmuls
decb
jb
roll
adc
xchg
push
andb
xchg
inc
int
push
inc
int3
and
pop
repz
add
mov
pop
lret
push
daa
add
xchg
addr16
jne
fcmove
mov
aam
mov
jbe
les
push
adc
js
ud1
mov
push
arpl
rcrb
xlat
icebp
sub
mov
inc
arpl
inc
cmc
mov
gs
mov
sbb
fsubs
addr16
addr16
test
pop
adc
mov
nop
test
dec
idivl
scas
insl
out
jmp
jnp
cmp
xor
hlt
mov
xor
or
cmp
sub
cmp
mul
andb
les
lds
in
in
cs
mov
ret
jmp
je
test
mov
xor
repnz
hlt
mov
jge
pop
out
fdivl
stc
add
mov
pop
cmp
data16
int3
ret
jmp
imul
push
jmp
popf
mov
nop
das
clc
pushf
shlb
xchg
mov
stos
push
jl
xlat
loop
cmp
push
outsb
adc
lock
xlat
sbb
xchg
cwtl
lods
xchg
cs
imul
hlt
mov
pop
pop
daa
xor
adc
xchg
push
cmp
rcr
ss
stc
xchg
and
sar
cli
pop
daa
pop
mov
jnp
and
jno
notl
es
xchg
dec
clc
std
dec
add
cmc
sbb
jle
and
xor
push
push
sub
xchg
sbb
lods
sub
lahf
fdivrl
xchg
cwtl
pop
fmul
dec
jno
sub
mov
jmp
lahf
xchg
popa
js
test
lcall
inc
add
dec
orb
sbb
fucomi
imulb
pop
dec
ja
mov
cmp
rclb
and
adc
insb
add
mov
xchg
mov
cmpsl
cmp
jmp
lea
xor
and
inc
pop
and
rcr
and
mov
adc
cmpsb
push
push
lods
ret
cmp
push
out
sub
lret
sbb
iret
xchg
imull
pop
pushf
jns
mov
lret
mov
loop
mov
subb
sar
cltd
or
jbe
cmp
cwtl
mov
sub
dec
shll
inc
sbb
arpl
loop
add
andl
testl
xchg
sahf
mov
inc
jl
sbb
sbb
xchg
stos
mov
fstpt
adc
jge
ficompl
or
in
scas
or
fsubrp
sbb
inc
mov
xchg
sbbb
mov
push
xchg
hlt
sbb
dec
fidivl
lcall
adc
sbb
loopne
setp
mov
fs
dec
add
xorl
or
jle
fsubrl
and
popa
cltd
cwtl
jbe
in
add
int
jecxz
and
int3
and
scas
imul
icebp
xchg
testb
sub
repnz
and
rorl
dec
jae
out
or
dec
xlat
fdivrs
test
lahf
iret
adc
jge
orl
mov
dec
cmp
push
sub
pop
push
cmc
dec
mov
std
std
shlb
repnz
mov
lock
mov
out
inc
sub
push
and
mov
inc
pushf
push
ret
mov
cmp
dec
adc
mov
arpl
pop
sub
mov
mov
cmp
enter
inc
dec
mov
loopne
imul
movsl
out
clc
mov
out
push
inc
popf
and
mov
or
jge
push
sti
sbb
cmc
sbb
mov
pop
push
sub
cltd
scas
fwait
adc
sarb
data16
out
mov
inc
movsl
mov
xchg
nop
faddl
mov
lret
mov
push
out
mov
xchg
aad
jg
std
mov
cld
mov
cmpsb
mov
aad
push
repz
sub
xor
into
dec
adc
addr16
sbb
mov
jnp
adc
mov
xor
in
cli
fwait
ret
fiadds
insl
jnp
fdiv
cmp
pop
int
in
jg
andb
push
mov
mov
pusha
cmc
and
daa
pop
lret
ss
xlat
sbb
imul
dec
lret
dec
push
mov
bound
xchg
xchg
mov
mov
jae
andl
sub
into
mov
aaa
out
mov
lret
ret
push
mov
push
jg
pusha
add
inc
dec
cmp
lds
int
int
sbb
mov
mov
int3
push
jecxz
es
lock
hlt
push
xchg
sti
push
loope
inc
inc
sbb
fwait
mov
push
fisubs
jae
ljmp
cmp
clc
push
add
pop
daa
incb
daa
mov
add
mov
jmp
sub
push
mov
fnstcw
mov
add
push
dec
adc
sbb
sbb
and
addl
js
and
jmp
js
push
test
add
xchg
ss
sbb
lods
sbbl
pop
imul
ds
out
out
pop
popl
fmulp
xchg
mov
pop
inc
cmpsl
pop
add
cmp
cld
inc
mulb
lock
adc
call
push
xor
or
and
outsl
or
clc
mov
filds
lcall
call
adc
scas
ret
jecxz
or
mov
inc
lcall
out
cmc
push
mov
jmp
inc
cmp
pop
aad
js
jp
inc
pop
mov
test
xor
sbb
push
in
jne
out
push
cld
push
lock
arpl
and
mov
daa
pop
mov
mov
mov
cli
mov
repnz
cld
lds
push
mov
sub
xchg
adc
scas
ljmp
fucomi
loopne
ret
mov
add
das
inc
fsubrs
inc
and
sbb
add
push
cmp
sbb
push
sub
xchg
sbb
loop
inc
aaa
and
cmpsb
cli
mov
call
inc
dec
jne
xor
rdmsr
rcrl
add
jp
mov
adc
repnz
add
sbb
jmp
sub
popf
jae
jnp
ljmp
add
es
imul
int3
pop
cwtl
lcall
repnz
mulb
ja
pop
jmp
push
roll
subl
dec
pusha
les
and
cmp
mov
out
jg
imul
xor
sbb
add
jmp
dec
rorb
or
fnstsw
inc
cs
mov
loopne
cmp
pop
out
jg
inc
mov
and
xor
jo
push
mov
push
stos
out
hlt
ds
bound
or
dec
ja
rol
xor
in
push
sti
sub
sbb
mov
mov
fcoms
mov
incl
sarl
test
pop
test
pushf
imull
arpl
rcl
addb
outsb
enter
cltd
or
xor
dec
xchg
pusha
xchg
dec
mov
adc
jge
jbe
jg
scas
js
xor
jp
in
mov
pushf
push
sub
sbb
psubq
jmp
push
jne
lret
out
adc
mov
sbb
repnz
jae
fldenv
add
lods
adc
or
fst
mov
popa
push
in
dec
lods
jecxz
dec
or
cmp
test
nop
xchg
stos
dec
call
xor
push
or
dec
sub
inc
adc
sbb
mov
dec
pop
inc
xor
int3
addr16
in
fadds
es
test
pop
insb
pop
sub
insl
adc
test
leave
sbb
xor
rcl
jnp
pop
add
pop
add
cmpsb
out
fldenv
lret
inc
push
inc
test
popf
jae
jne
pop
push
cli
ret
loope
mul
xor
inc
lods
sahf
mov
lds
test
out
out
push
movsb
enter
pop
jmp
xchg
adc
and
xchg
lods
push
mov
insl
mov
xor
add
mov
pop
je
jecxz
jmp
add
lahf
addr16
repz
pusha
pop
adc
or
xor
cmp
sti
shlb
sbb
fmuls
push
hlt
scas
aas
mov
repnz
ss
ja
jle
xchg
push
pushf
dec
ss
mov
pop
out
push
cwtl
push
dec
daa
loope
arpl
add
add
pop
negl
ja
loop
andl
inc
mov
sub
jae
add
or
xchg
or
in
test
jo
pop
je
push
xchg
es
and
push
iret
xor
dec
push
arpl
xor
sbb
pop
subl
mov
push
pop
xor
pop
inc
ds
ret
adc
das
dec
lea
dec
mov
inc
push
dec
mov
fidivrl
test
out
daa
dec
fidivl
pusha
sarb
mov
jle
std
sbb
popf
pop
mov
mov
ret
inc
fwait
das
jmp
jl
xchg
xor
xor
into
xchg
jbe
sbbb
fcomp
cwtl
sbb
pop
aad
sti
xchg
cmp
or
and
sub
pop
or
fwait
mov
imul
pop
jne
cmc
inc
sbb
dec
xor
fucomi
xor
mov
sahf
dec
jns
test
push
cmpsl
cmpl
and
jo
push
pop
movsl
push
or
fdivrl
loop
dec
cmc
iret
mov
or
sti
push
xchg
pop
les
jecxz
xor
xor
or
shll
push
dec
xchg
rcrl
adc
mov
add
clc
hlt
pusha
sbb
sbb
rclb
or
cli
jg
stc
aaa
int3
inc
mov
pop
or
xor
cmp
mov
cmp
je
insb
outsl
ja
fsubl
pop
call
jge
sbb
sub
mov
dec
cmpsl
cmpsb
pop
ds
and
sbb
mov
movsl
and
push
cmp
add
dec
push
add
xlat
cmpsl
and
mov
movsl
add
and
js
cwtl
sbb
movsb
outsb
xchg
sub
loopne
mov
dec
sbb
jl
and
into
cltd
mov
imul
insl
push
pop
imul
arpl
sbb
gs
xchg
popl
test
mov
mov
xor
xchg
jae
mov
rclb
clc
popl
mov
les
push
mov
les
or
adc
push
fwait
pop
or
sub
push
or
sbb
push
push
ja
xchg
in
icebp
icebp
fsts
cmp
xor
into
inc
pop
imul
imul
xor
test
popa
hlt
loopne
ljmp
pushf
lods
mov
rcl
movsl
mov
adc
jbe
dec
clc
pop
cmp
and
jl
add
adc
pop
sahf
push
scas
fsubs
sar
jmp
cwtl
push
out
test
lods
or
xchg
mov
lahf
aam
out
jg
adc
imul
mov
outsl
mov
add
jnp
or
dec
pop
stos
cmpl
shll
loop
je
lods
outsb
cmpsl
jmp
ret
add
cmp
in
xlat
enter
inc
mov
aad
dec
mov
or
mov
notb
xchg
jbe
or
mov
adc
lock
pop
andl
int
outsl
dec
xchg
add
lock
int3
inc
add
pop
addr16
mov
sbb
add
mov
mov
cmp
into
pop
xchg
inc
mov
test
fs
aas
sti
mov
xchg
dec
jmp
sbb
mov
aas
popf
ret
mov
push
xchg
dec
xor
rcr
stos
or
inc
mov
and
mov
xchg
or
fsubl
or
rclb
frstor
pusha
push
cmp
cmpsb
dec
cmp
and
in
jne
push
rolb
sub
aad
push
push
cmpb
mov
pop
xchg
ret
popa
dec
push
ret
cmp
mov
sub
dec
cmp
dec
fmuls
jle
pop
push
rol
dec
lock
js
ja
dec
jle
repnz
cmp
lret
sarb
push
dec
imul
add
xchg
push
pop
gs
xor
rcl
aad
fucom
cltd
aaa
jge
lret
and
push
lods
jae
pop
sub
adc
mov
ret
cmpsb
and
push
mov
cmp
xlat
lds
aas
das
in
mov
lods
stos
adc
sbb
pushw
fnstenv
add
icebp
aaa
repz
jb
sbb
jle
loopne
push
fildl
test
adc
inc
js
mov
dec
cli
or
add
dec
shll
cs
xchg
push
xchg
jnp
or
leave
lea
pushf
and
xor
xor
pop
repz
mov
out
mov
shlb
cmp
insl
adc
out
fisubl
jae
mov
mov
cs
and
out
push
adc
aad
lods
fldcw
push
push
aad
xchg
add
push
cli
inc
inc
xor
pop
pushf
push
jb
bound
fwait
jae
leavew
sbb
dec
in
roll
dec
mov
xchg
mov
sub
je
jae
adc
sub
leave
mov
cld
push
push
lods
adc
stos
push
mov
sbb
xor
mov
add
leave
pop
xchg
push
and
ss
add
adc
mov
dec
sbb
adc
lods
ret
movsb
adc
orb
mov
sub
aas
sbb
and
and
je
ljmp
sbb
sbb
cmpsl
jb
xor
into
mov
fstl
out
aam
aad
repz
dec
lahf
jne
hlt
fwait
mov
xchg
pusha
lahf
and
xorb
xor
adcl
mov
aas
pop
jmp
repnz
clc
and
dec
pop
popa
mov
or
mov
es
push
jns
push
mov
adcl
daa
mov
adc
test
mov
add
faddp
lea
pop
and
fidivrs
mov
scas
je
add
loop
daa
pop
jnp
sbb
stos
dec
mov
fimuls
sub
jp
mov
and
hlt
das
and
cmp
movl
mov
dec
xchg
popf
inc
arpl
mov
ret
fldt
insl
movsb
push
into
loope
pop
in
pop
fistpl
cld
aas
ds
sti
sub
jb
adc
lods
jp
out
cs
insl
sub
aad
adc
sbb
xor
daa
jo
shll
xchg
les
inc
xor
clc
or
mov
xchg
mov
sub
sbb
lret
or
dec
lahf
into
pop
mov
adc
popa
cmp
mov
iret
mov
jl
dec
scas
stos
fadds
or
adc
push
inc
and
push
loope
in
push
jne
ret
pop
in
mov
or
mov
neg
sub
adc
repnz
in
ficoml
fcmovne
mov
hlt
fcompl
xor
sbb
shll
outsb
shrb
and
imul
xchg
lock
xchg
mov
addl
mov
dec
add
movsl
pop
xor
icebp
incl
jnp
dec
enter
pop
pop
les
push
iret
test
adc
push
in
jge
fistpl
std
xchg
and
es
jl
xchg
sbb
mov
jb
and
xor
popf
mov
imul
fidivrs
mov
mov
pusha
shr
xchg
cmpsb
xor
out
arpl
inc
iret
test
pop
rcl
push
cmp
xchg
lret
repz
cli
add
dec
push
or
nop
mov
lods
push
imul
push
pop
dec
mov
and
shlb
filds
in
imul
fnsave
fmull
aaa
inc
push
test
gs
mov
pop
jge
ljmp
ljmp
push
ret
adc
insl
stos
adc
cli
add
mov
sub
push
fs
das
dec
or
arpl
add
fistpl
inc
cmp
shl
repz
jno
mov
loopne
pop
inc
aas
push
iret
cmp
add
jnp
pop
arpl
xchg
stos
popf
xor
mov
icebp
shl
xchg
or
mov
decl
mov
cmp
out
inc
lock
jo
mov
xchg
sbbl
cmp
mov
jnp
and
adc
ljmp
pop
jno
mov
rol
dec
outsb
ja
mov
inc
cwtl
shlb
add
pop
scas
push
inc
enter
and
xor
mov
clc
lcall
mov
mov
cwtl
mov
cmp
mov
xlat
sub
lock
popf
stos
in
push
or
frstor
imul
aas
in
mov
pop
xor
pop
pushf
call
shr
cmpsb
and
test
in
sbb
test
lods
mov
sbb
add
xor
cwtl
rolb
xor
push
xchg
jle
fwait
aaa
push
ret
mov
jg
cmp
push
mov
mov
xor
push
cmp
add
sbb
ret
dec
cld
mov
rcll
in
pop
pop
xchg
mov
aaa
jb
dec
push
mov
push
mov
and
movsb
sub
cwtl
mov
mov
adc
mov
cmpsb
pushl
aad
dec
stos
sbb
cmc
outsb
fnsave
cmp
cmp
mov
movsl
sbb
fcmovnb
shr
lods
pushf
add
lds
incl
fisttps
sbb
int
sbb
push
or
mov
repnz
rolb
lock
sub
scas
dec
js
jb
mov
inc
pop
fldcw
fbstp
movsl
inc
sub
cmp
xchg
or
pusha
aas
mov
push
push
addb
xchg
xor
cli
incb
jbe
mov
lret
loopne
movsl
fs
xchg
loop
daa
and
jno
loopne
mov
lahf
cld
or
pop
xor
mov
bound
push
xor
jne
sbb
stos
lahf
int3
lret
jnp
xor
sub
fbld
les
popa
fdivrl
jle
call
sbb
test
enter
add
sub
andb
test
neg
fisubl
cli
cmp
in
stos
fimull
adc
fsts
mov
mov
adc
xchg
mov
nop
xchg
fstps
bound
mov
sbb
xchg
or
cmp
shld
xor
loopne
push
xchg
ret
dec
das
dec
fs
xor
jecxz
loope
mov
adc
adc
xchg
gs
mov
ret
sub
sbb
inc
and
popf
xlat
outsb
fimull
dec
movsb
sti
sti
push
repz
mov
mov
mov
sub
pop
xchg
addr16
adc
inc
insb
sbb
cwtl
shl
xor
sahf
mov
sbb
pop
les
in
push
mov
mov
leave
repz
sahf
xor
xchg
outsb
ror
mov
xor
pop
hlt
sbb
or
xchg
pop
jp
mov
cmp
mov
adc
outsb
xchg
loopne
cmpsl
sub
cli
xchg
filds
ficompl
sub
test
nop
out
pop
movsb
sub
scas
xchg
movsl
sbb
jb
sub
sub
jg
stos
stc
xor
int3
sub
movsb
lcall
sbb
mov
mov
out
jmp
flds
sti
mov
pop
jle
cltd
pop
les
iret
dec
mov
jg
add
out
test
mov
or
or
lods
dec
lret
jbe
mov
test
cmpsb
ds
lds
ss
rcl
test
sbb
inc
ret
lahf
dec
mov
mov
leave
lea
xor
sub
insb
pop
jne
repz
xchg
xor
push
aam
cmp
leave
xchg
fs
fsubrs
and
sti
dec
fcoml
add
cmpsb
arpl
or
mov
add
push
xchg
or
in
add
xor
inc
shrd
test
mov
leave
out
popf
idivb
xchg
sub
adc
leave
xor
cmc
xor
es
or
xlat
repnz
sar
ss
lock
out
or
and
daa
loopne
pop
fs
aaa
in
pop
popa
stos
dec
adc
ja
mov
stos
xlat
fdivr
sub
sbb
dec
movsl
rolb
cltd
cmc
addb
mov
addr16
xor
divb
inc
stos
out
fwait
adc
ds
pop
xor
outsl
sbb
pop
mov
lds
test
xor
mov
test
fistpll
popf
icebp
xor
fwait
sti
mov
imul
push
or
or
std
xchg
dec
add
xor
or
js
leave
mov
mov
in
sub
dec
addr16
int
mov
sbb
mov
fadd
nop
je
sub
add
test
test
cwtl
and
je
shll
inc
sbb
jnp
bnd
cltd
adc
push
fnstenv
pop
into
dec
mov
pop
stos
leave
insl
mov
sub
leave
popa
cmp
mov
scas
mov
dec
imul
pop
or
or
mov
push
dec
inc
pop
cmc
lock
pushf
xlat
push
inc
cmp
mov
xor
jg
sub
aaa
mov
ljmp
stc
movsl
sub
or
add
in
add
out
adc
inc
sbb
lea
mov
shrb
xchg
insb
push
push
cmc
ljmp
sarl
xor
insl
leave
mov
das
je
test
xchg
dec
jge
in
adcb
iret
inc
mov
xorl
jmp
jecxz
and
jle
imul
aad
bound
mov
nop
mov
inc
insb
fadds
test
mov
inc
adc
xor
aad
xor
cmp
repz
adcl
and
ret
clc
lret
pop
mov
xlat
add
adc
add
movsl
fdivrs
jbe
icebp
adc
xchg
cmpsl
push
sub
jg
inc
in
lea
dec
fwait
push
stos
out
popa
xor
test
dec
push
xor
cmc
cwtl
mov
jbe
xchg
and
sbb
stc
dec
dec
mov
push
jb
data16
test
cmp
data16
lret
aam
xor
loop
std
mov
cli
stc
mov
sub
call
mov
add
fs
popf
fisubrl
or
outsl
xor
fs
iret
cmpb
push
push
sbb
cmp
push
mov
fldenv
jo
and
or
and
aaa
scas
test
rolb
sarl
or
mov
imull
enter
jg
mov
mov
mov
sbb
fsubrl
add
cmp
dec
inc
bound
aas
sbb
sub
sbb
lods
add
sbb
cmp
cmpsb
xchg
cmp
fstps
les
ss
sbb
mov
and
dec
pop
xchg
push
ss
xchg
gs
sub
lea
xchg
cwtl
pop
das
jae
sub
shrb
insl
loop
stc
jae
inc
insl
sub
add
out
fnstcw
jl
mov
pop
cli
mov
push
adc
outsl
movsb
sbb
pushf
shr
push
dec
dec
xchg
inc
adc
push
and
sub
xor
jnp
cmc
sbb
test
mov
adc
add
mov
lea
adc
loop
aaa
test
adc
dec
out
hlt
add
push
andl
and
and
jb
pusha
xor
mov
mov
add
shll
pop
sbb
xchg
in
mov
jbe
push
fisttpll
insb
sub
lods
sub
push
loopne
pop
je
xchg
dec
and
rorl
insl
subb
insl
rcl
and
mov
sub
nop
sub
mov
jle
add
nop
xchg
xchg
dec
pop
movsl
sahf
or
mov
inc
and
mov
push
or
cltd
andb
mov
daa
push
lods
mov
jns
daa
mov
insb
lds
jecxz
mov
in
jno
mov
cmp
adc
sub
mov
cmpsl
clc
xor
and
push
outsb
dec
cmp
inc
mov
cmc
lahf
aaa
pop
icebp
cmp
pop
movsb
pushf
or
leave
js
stos
test
add
nop
sbb
cmp
cwtl
aas
loop
in
adc
jns
dec
jns
mov
out
mov
cs
orl
fdivr
xchg
sti
fsubs
int
jg
adc
sub
lahf
cmp
testl
mov
push
imul
sbb
xchg
adc
ret
rorb
mov
dec
or
in
ret
push
xor
daa
aad
insb
lahf
pop
and
divb
add
sub
das
inc
lock
mov
mov
inc
add
int
pushf
ffree
mov
scas
sub
mov
mov
sbb
ds
push
jbe
mov
add
xchg
and
stos
int3
and
fsub
mov
bound
femms
jecxz
inc
adc
loope
sbb
loopne
cs
out
xchg
in
iret
jne
sub
clc
mov
jo
icebp
or
cli
bound
addr16
xor
stos
pop
pop
test
xchg
mov
jno
fcoms
jae
into
or
push
and
adc
cmpsl
xor
out
fxch
push
xchg
xchg
lds
sti
and
pop
and
or
dec
hlt
test
mov
ljmp
cmp
lock
es
sbbl
fs
xor
push
jl
outsl
jb
aas
mov
inc
orb
int
daa
fwait
popf
lods
hlt
push
push
enter
and
xchg
jecxz
pop
js
ror
push
mov
sahf
scas
inc
xor
and
pop
sti
and
push
mov
xchg
mov
mov
in
or
xchg
xor
mov
imul
jmp
test
or
ds
xlat
iret
pop
or
jle
lods
sti
mov
lods
int3
popa
jmp
lods
sbb
cld
jae
cmp
mov
mov
and
ja
push
movl
mov
or
cmc
push
insb
cmpsb
pop
movsb
lcall
cmp
mov
fcomps
mov
subb
push
fdivr
and
and
push
mov
inc
dec
mov
fidivrs
imul
add
push
lcall
xlat
or
cmp
xor
xor
sbb
or
adc
dec
pop
mov
add
dec
imul
stc
pop
mov
in
pop
add
add
push
fldl
es
xor
adc
add
push
mov
jecxz
xchg
xchg
rolb
test
insl
leave
push
ljmp
or
push
push
call
lcall
xchg
or
jns
leave
stos
cli
loopne
jge
xchg
test
shrl
dec
insl
imulb
xor
or
repnz
inc
sub
mov
xor
add
in
sub
call
jbe
cld
mov
add
sahf
add
addr16
fsubs
jns
xchg
sub
add
ja
push
add
movsb
pushf
fldenv
clc
mov
mov
xchg
movsl
add
cmp
adc
pop
ljmp
mov
or
mov
imul
inc
lds
divl
cmpsl
int3
cs
or
mov
add
mov
into
jns
adc
das
stos
add
mov
cmp
cmovge
mov
pop
and
inc
sahf
or
pop
xchg
popa
cmp
insb
adc
mov
leave
sti
or
dec
mov
push
cld
aad
jg
and
xlat
sti
in
pop
adc
and
adc
adc
push
das
or
inc
cmp
cmp
mov
add
in
inc
repnz
adc
mov
enter
xor
enter
push
pop
pop
stos
popa
add
cld
cmp
aad
sub
cmp
les
mov
inc
mov
inc
popa
lods
rorl
cmpsb
cmpb
ret
xchg
jns
sarl
dec
add
mov
pushf
scas
cmpsl
xor
jne
or
lret
sbb
adc
add
jae
mov
mov
je
mov
pusha
enter
insl
sbb
pop
cmpsb
in
shrb
mov
roll
xchg
fdivrl
pop
lea
cli
call
cmc
test
stos
pop
loop
lret
jmp
dec
jg
test
gs
cmp
jnp
scas
fmull
sub
push
clc
addr16
jp
lret
in
xor
pop
dec
ljmp
xor
rcr
in
xchg
adc
lock
aas
sahf
adc
dec
lcall
out
addl
sub
mov
lods
insb
ret
sub
call
mov
adcb
mov
stos
jo
lret
movsl
popf
stc
sbb
jp
pop
test
addl
xchg
cmpsl
jmp
arpl
bound
pop
ja
push
mov
and
les
lds
dec
jo
ret
bound
sarl
enter
imul
sbb
inc
adc
fildll
movsl
mov
sbb
push
or
push
push
arpl
outsl
repnz
icebp
sbb
jbe
cs
dec
lret
dec
out
push
or
cltd
add
add
xchg
lret
xchg
mov
mov
jnp
mov
mov
jmp
jbe
xor
inc
sub
push
xchg
or
cmp
mov
sarl
sub
xlat
test
test
test
sub
fiaddl
pop
insl
test
inc
movsl
imul
shll
fldt
imul
jb
mov
sub
scas
int3
pushw
repnz
adc
push
out
testl
call
cmp
xchg
jo
jg
fimuls
jb
imul
out
js
push
sti
repnz
jmp
push
sahf
rcrb
mov
add
call
sbb
ffreep
das
mov
shll
add
movsb
repnz
jge
adc
push
idivb
imull
repz
push
fnstsw
xchg
xchg
sbb
dec
mov
inc
sbb
xchg
xchg
and
add
out
mov
xor
xor
sub
lods
mov
insb
xchg
mov
jno
add
out
mov
jno
ret
inc
cld
mov
mov
xrelease
fdivs
imul
jns
cltd
cltd
incb
mov
inc
fadds
add
outsl
out
jae
or
mov
in
rcll
xchg
adcb
jmp
sbb
adc
out
mov
inc
push
into
std
or
sub
and
inc
and
fisubs
sbb
mov
or
js,pt
mov
cmp
cmp
std
mov
jno
adc
mov
push
imul
dec
outsb
js
push
dec
pop
in
out
dec
rcll
pop
xor
xor
or
lods
or
jnp
sbb
mov
hlt
mov
push
cmp
jg
mov
nop
arpl
mov
pop
cmp
cmp
pop
mov
cmpsb
mov
adc
xchg
mov
imul
inc
mov
sub
idivb
xor
add
push
add
imul
xchg
adc
or
cmpsl
lock
sbb
aaa
xchg
adc
inc
and
jecxz
xchg
mov
or
add
loope
push
xor
rol
out
aad
mov
inc
inc
shlb
pop
andl
or
push
lods
push
sbb
fildl
lock
outsl
inc
push
pop
mov
leave
sub
leave
and
xchg
fsubrl
adc
movsb
mov
lret
lcall
je
movsl
shrb
pop
push
add
mov
xor
in
jecxz
loope
push
or
dec
test
jle
psubq
shll
mul
ljmp
pop
cli
mov
add
stos
sbb
mov
sbb
jp
cmpsb
jnp
in
out
xor
test
inc
xor
jnp
adc
mov
push
adc
add
pop
add
daa
rcl
fsub
aad
jne
rcr
jbe
lahf
push
and
repz
rclb
jno
push
pop
stos
sti
sbb
pop
std
js
fbstp
shll
aam
cltd
sahf
roll
xor
mov
movl
fs
lods
lret
mov
lret
xchg
adc
mov
add
outsb
movsl
popf
lock
adc
shrb
jle
mov
mov
xor
loope
sahf
xchg
aas
aaa
scas
xor
in
pop
add
movsl
fwait
cmpsb
inc
adc
xor
add
lea
stc
push
in
arpl
cltd
outsl
xchg
test
mov
jp
lods
jl
sbbb
add
fbld
aas
cmp
push
xchg
sbb
repnz
repnz
push
xchg
rclb
mov
in
pop
rcrl
jne
xchg
mov
scas
in
xchg
inc
push
in
subb
in
mov
sbb
jb
and
mov
sub
js
xor
shrb
xchg
shrl
hlt
inc
adc
sti
jnp
mov
ficompl
call
movsl
pop
mov
xchg
cwtl
xchg
mov
push
call
inc
pop
cmpsl
and
sahf
clc
jnp
dec
movzwl
inc
std
cmpsb
aam
ficompl
ret
and
cmpsl
jge
sub
outsb
insb
xchg
add
mov
popa
mov
fildll
icebp
rcll
pop
mov
sbb
sbb
xchg
mov
sub
addr16
push
lret
jl
xor
xchg
jge
sbb
inc
dec
addl
mov
dec
pop
insl
test
push
sub
imul
xchg
sbb
icebp
out
pop
call
int
xor
sub
shrb
jmp
inc
rcr
add
xchg
xchg
sarl
mov
ljmp
xchg
xor
std
fwait
jae
push
sbb
imul
xor
adc
subl
cmpsl
add
mov
jns
out
stc
nop
dec
out
pop
int3
mov
dec
push
sahf
test
les
popf
sbb
test
lods
daa
cmp
movsb
neg
jecxz
repnz
jno
bound
aaa
pop
cmp
xchg
pop
sarl
pop
test
add
jle
repz
rol
in
xor
add
sti
inc
ret
pop
ljmp
mov
dec
mov
lret
movsl
into
addr16
out
into
pop
call
shll
fldl
ret
jae
sbb
aaa
fs
cmpsl
or
imul
push
xchg
sub
subl
add
frstor
adc
mov
jae
xorb
shrb
imul
adc
movsb
xchg
adc
fisubl
clc
outsb
out
dec
leave
int3
negb
push
xchg
pop
jecxz
jno
inc
pop
decb
cmc
movsb
add
mov
xor
jne
jne
pop
sbb
cmp
xor
jge
mov
push
pop
jno
mov
fnstsw
pop
sahf
mov
aam
cmp
mov
or
out
push
inc
fbld
rolb
in
add
scas
movl
pusha
pop
jge
adc
div
outsl
or
lock
xor
in
mov
inc
jb
enter
in
pop
push
jno
sub
inc
jno
loope
rcrl
jne
inc
sbb
mov
lea
mov
xchg
ss
fs
dec
or
and
lret
cmp
inc
mov
imul
push
add
sbb
arpl
pusha
push
dec
out
movsb
sub
aam
cmp
dec
cmpsb
ljmp
das
out
aad
and
sbb
adc
mov
rol
dec
fmull
aad
out
adc
inc
clc
aam
subl
test
mov
test
mov
inc
mov
cli
xlat
jp
ret
imul
jne
inc
jne
cmp
or
lcall
fisubrs
dec
pop
imul
lahf
mov
imul
push
rcrb
loop
or
pop
mov
test
jb
push
and
imul
inc
ja
cmp
rcr
xor
aaa
mov
mov
pusha
sbb
mov
xor
sub
shr
adc
sub
add
push
dec
sahf
cli
jno
pop
sbb
inc
cltd
fs
inc
lcall
enter
filds
mov
lea
xchg
jae
int
int3
mov
add
mov
popf
fidivs
imul
sub
neg
pop
fwait
ss
ljmp
push
out
push
or
sbb
sub
xchg
sbb
or
test
jl
push
sbb
fisttps
xchg
hlt
enter
fildll
dec
repnz
push
call
push
aaa
jl
dec
jo
mov
loop
jmp
nop
subb
jecxz
dec
jno
dec
movsl
test
mov
adc
cld
xor
mov
lods
ja
cld
out
fnstsw
test
js
adc
cli
and
pop
fwait
dec
shll
ja
and
lods
fbld
test
imul
imulb
and
mov
mov
mov
cld
out
jg
jg
movl
scas
xchg
xorl
mov
or
and
not
fisubs
test
dec
out
cwtl
jnp
jle
ss
ljmp
and
or
jno
jecxz
or
cs
jg
mov
ror
orb
xacquire
sarl
push
sub
xor
sbb
dec
xchg
adc
jp
and
jg
mov
aam
inc
imul
sbb
sbb
xor
mov
dec
add
imul
in
or
or
in
pop
mov
jne
or
loope
pop
and
jle
inc
push
push
outsl
cmp
sub
test
push
and
adc
pop
dec
push
aas
pop
dec
add
bound
ljmp
pop
emms
sub
push
cmp
lret
loop
fwait
sbb
pusha
pusha
and
pushf
pop
aad
icebp
pop
jae
mov
push
xor
leave
or
cmp
add
mov
push
in
sti
mov
mov
mov
sbb
gs
fiaddl
nop
in
mov
pop
xor
cmpsb
iret
jmp
es
jmp
or
inc
push
out
sahf
adc
jo
dec
out
pop
outsl
adc
loop
shl
test
stc
popa
sahf
movsb
or
inc
add
imul
mov
push
pop
stos
xor
cmp
movsl
lret
pop
mov
add
mov
pusha
insb
xchg
leave
shl
roll
add
inc
xor
or
imul
add
in
ret
enter
add
incb
inc
aad
sub
andl
mov
adc
out
push
repnz
cmp
bound
cmp
and
inc
in
stos
test
cmp
adc
sbb
fwait
andb
das
adc
cmp
and
sub
or
jae
mov
jae
sbb
fdivr
sub
cs
aas
pop
iret
mov
cmc
lret
aas
jecxz
xchg
scas
xor
jge
add
adcl
lds
jp
loop
inc
mov
insl
rcrb
mov
and
inc
ret
push
orb
je
mov
push
inc
nop
aas
int
xchg
dec
sbb
bound
push
mov
xchg
sub
sbb
add
xchg
push
mov
outsl
lahf
imulb
shl
sti
jne
imul
cmp
pop
sub
dec
les
dec
sbb
sbb
mov
push
adcb
pop
and
in
xor
rcrb
sbb
addr16
fstpl
dec
xor
cmp
adc
rorb
sti
push
xchg
dec
cmpsb
adc
iret
sarb
popa
and
jno
rorb
sti
mov
jae
arpl
test
adc
out
sti
mov
rdpmc
add
pop
sbb
mov
push
data16
adc
adc
xchg
and
int
pop
shl
push
inc
pop
insb
adc
xor
dec
cmp
test
xchg
stc
mov
jb
fstpt
jle
mov
mov
std
popf
pop
fwait
arpl
mov
add
add
add
es
adc
popa
inc
sub
jno
popf
fistps
dec
xchg
out
lea
or
adc
mov
lahf
sbb
lahf
ljmp
loopne
push
mov
incl
lret
dec
call
mul
jge
mov
pop
aad
or
or
xlat
push
and
lret
add
out
add
mov
aas
mov
testl
xchg
inc
jne
xor
push
mov
and
pop
movb
push
push
cmc
dec
push
aad
and
cmpsb
sub
sbb
lods
fadds
dec
fildl
fidivrl
and
xorb
insb
in
pop
mov
in
int3
jno
in
jecxz
test
ret
lret
dec
std
outsb
cmp
and
push
xchg
sbb
add
push
push
pusha
push
or
add
pop
add
sahf
pop
dec
sbb
inc
pop
add
cltd
cltd
incl
rol
xor
cmp
pop
jo
jbe
xchg
in
and
mov
lods
or
call
mov
fisubs
jg
outsl
and
test
insb
pop
rcl
xchg
and
mov
lods
pop
mov
sub
cmpsl
cld
mov
push
pop
pop
call
in
fs
repnz
jl
adc
popa
lods
xchg
insl
mov
mov
pop
mov
sbbb
lds
inc
sbb
loop
jns
js
es
push
sub
fcoml
xchg
pop
dec
add
dec
insl
cld
cltd
add
stc
in
aaa
mov
xchg
std
inc
xor
and
rclb
mov
insl
test
leave
jbe
mov
and
or
mov
mov
sbbl
sub
inc
pop
js
es
jb
mov
adcb
pop
xchg
rcr
xchg
jb
mov
and
mov
in
or
cmp
ljmp
mov
ret
and
lcall
lret
ficomps
or
or
mov
xor
dec
fdivrl
adc
dec
imul
mov
lahf
pushf
mov
and
xor
adc
das
mov
pop
sub
pusha
fistl
mov
jne
divl
fldcw
push
or
xor
outsb
push
add
or
insb
cmpsb
jae
push
mov
negl
test
flds
popf
scas
pop
enter
leave
or
inc
iret
clc
add
adc
int3
mov
mov
xchg
stos
xor
fsubs
aas
icebp
mov
inc
jmp
aad
test
or
les
push
leave
jg
addr16
inc
jb
int
imul
mov
jne
sbb
push
shl
lahf
or
mov
aas
rcrl
and
fbld
adc
pop
cmpsl
xchg
add
cwtl
es
in
or
mov
dec
xchg
iret
fwait
js
lret
add
mov
jns
and
inc
sti
inc
testl
ret
xor
mov
pop
add
dec
clc
or
js
mov
mov
dec
lock
mov
sarl
dec
sbb
push
rcrb
sbb
pop
push
popa
pop
rcll
push
sbb
pop
and
inc
mov
cmpsb
push
xor
lret
mov
inc
enter
aad
sti
pop
popf
aas
mov
sub
mov
xchg
popa
pop
mov
fcomi
push
out
mov
jo
movsb
mov
std
clc
mov
and
xchg
idiv
jo
mov
movsb
mov
push
into
push
push
add
mov
cmpsb
xchg
add
dec
jp
mov
mov
lret
xchg
fld
jp
ret
stc
jl
imul
or
rcl
scas
lcall
mov
pop
mov
jle
mov
add
jnp
imul
xorb
adc
std
sub
loop
mov
dec
xor
xor
cld
ljmp
popf
fcomps
fnstsw
mov
gs
lock
mov
mov
push
outsb
out
inc
les
pop
mov
jmp
xor
ja
or
dec
test
addr16
jae
cwtl
cmp
call
mov
pop
push
mov
add
xchg
add
add
push
xchg
mov
es
stc
faddl
lahf
daa
adc
fmull
ljmp
jae
out
iret
mov
mov
add
pop
mov
mov
cwtl
push
idivb
pop
or
daa
call
test
mov
fldl
sbb
insb
inc
ror
pop
xchg
jb
je
std
mov
jbe
jge
add
lds
out
in
fsts
pop
mov
inc
not
rorl
add
fwait
pusha
xor
xchg
sub
xlat
ljmp
ficoml
mov
andl
cs
adc
or
sarb
cmp
mov
sub
xor
mov
mov
aam
out
movl
sbb
loop
ficoms
jbe
inc
add
cs
or
call
clc
cmp
popa
jno
add
mov
jae
arpl
sbb
gs
insl
enter
xor
fcoml
or
call
ja
inc
cmp
pop
ds
push
fsubr
enter
sbb
popa
dec
mov
sub
lds
nop
pushf
jle
dec
movsb
mov
push
xchg
mov
mov
cltd
mov
loop
lds
sub
idivb
and
mov
daa
sahf
movsl
enter
sarb
les
pop
push
outsb
pop
ljmp
add
and
sti
fiadds
repnz
dec
js,pn
add
dec
ret
sti
mov
andb
push
sbb
mov
jno
inc
pop
loopne
fdivrs
out
jmp
test
out
mov
stc
xchg
aas
rorl
xchg
inc
jg
lret
inc
mov
mov
rcll
sbb
out
push
inc
xchg
fstpt
jecxz
jns
xlat
dec
out
lds
es
fisttps
add
mov
cmp
xor
outsb
pop
mov
jae
and
mov
adc
stos
pop
int
jle
mov
divb
jne
push
es
adc
ja
or
or
es
call
sub
dec
ds
fs
decb
ret
xor
ror
add
clc
add
aas
sub
fdivl
dec
repz
cltd
pop
aam
pop
es
push
std
lcall
inc
fstpl
lds
or
push
shrl
xchg
and
sbb
lcall
mov
insb
xlat
call
rolb
stos
xchg
xor
popl
inc
sarb
enter
stos
rcll
mov
mov
xchg
pop
mov
jmp
clc
jl
mov
insl
lds
cs
mov
xchg
adc
cmpsb
jnp
movsb
stos
call
in
movsl
mov
nop
push
pop
mov
bound
fimuls
rcrl
pop
xor
mov
popf
add
sbb
jecxz
or
xor
dec
xor
inc
subl
fnstenv
outsl
pop
ret
pop
jbe
mov
fnsave
cmpl
insb
arpl
sbb
push
imul
fadds
inc
aas
xor
aaa
xchg
sbb
ljmp
fmul
inc
push
jg
jb
add
pop
inc
in
xchg
cmp
push
jne
ja
add
inc
jno
pop
lea
addr16
test
rclb
sar
push
pusha
jp
scas
ret
cmp
scas
pusha
or
mov
repz
loop
and
adc
xchg
sbb
ja
cmp
aad
ds
jge
insl
or
cltd
lea
xor
sbb
mov
test
sub
lret
pop
cmp
mov
lret
pop
mov
pop
jecxz
push
pop
lock
xchg
push
cmp
icebp
jp
ror
mov
or
into
jp
stc
adc
sub
push
sti
sbb
sar
xor
out
sub
js
sbb
sbb
cmovl
add
mov
cwtl
test
out
jno
push
or
test
cltd
dec
out
imul
push
rclb
xor
cmp
outsb
and
dec
mov
xor
sub
arpl
std
push
mov
pop
in
sub
inc
mov
xor
mov
and
dec
cmp
add
adc
cli
or
pop
mov
push
dec
push
pop
dec
or
sub
movsl
add
frstor
add
pushf
fs
or
fisubs
out
mov
dec
lds
push
jne
xchg
pop
cmp
jl
push
sbb
push
jbe
mov
test
daa
setbe
sub
std
xchg
mov
add
shlb
mov
cmpsb
sbb
push
mov
lcall
loopne
jb
mull
pop
sub
ljmp
dec
sub
aam
cmpl
std
jo
cmovbe
jmp
pop
push
and
sub
push
cltd
xor
lcall
in
lret
into
or
out
fdivl
mov
sub
lock
cltd
sub
pusha
jecxz
dec
imul
sbb
bound
scas
les
pop
mov
leave
cmc
int3
rdpmc
or
hlt
gs
outsl
mov
sub
adc
pop
xchg
pushf
insl
add
mov
add
add
into
shll
mov
lods
mov
mov
outsb
jmp
cmpsb
out
jl
push
cwtl
mov
test
aaa
lret
pop
nop
popf
fwait
cmp
inc
or
mov
lock
in
and
jl
sub
decl
mov
xor
add
or
jecxz
or
scas
shll
stos
jle
push
adc
push
mov
or
in
jne
insl
adc
arpl
jle
xchg
jbe
sbb
dec
mov
jg
cmp
test
andb
push
gs
push
stc
jno
orl
ficoml
sbb
rcrb
popf
andb
mov
mov
in
stos
mov
sub
add
div
dec
insb
cmp
xchg
and
inc
pop
cltd
pushf
aaa
cli
icebp
shlb
jo
iret
xchg
enter
push
add
cmp
inc
jne
iret
mov
scas
insb
popa
outsb
lret
lret
ret
bound
fistps
cmp
ja
sbb
or
cli
inc
pop
mov
andl
std
std
jle
hlt
adc
mov
mov
repz
testl
dec
push
jp
inc
jb
lea
outsl
in
loope
push
cmp
daa
adc
outsb
dec
pop
cmpsb
xchg
cmpsb
inc
jb
cltd
cld
sbb
mov
xchg
test
push
popa
popa
push
testb
decb
lret
loope
jno
sbb
fstpt
cltd
addr16
add
push
dec
xchg
push
push
push
push
in
fs
mov
insl
adc
test
mov
test
js
hlt
cmpsb
arpl
arpl
jno
pop
xor
popa
mov
mov
xchg
inc
mov
jp
and
lods
pop
mov
dec
add
imul
ror
cmpsl
or
std
fwait
movups
bound
int3
mov
or
jbe
jp
lods
or
jge
dec
sub
faddl
cwtl
mov
outsb
jg
xor
jne,pn
or
inc
repz
subl
std
mov
mov
addl
shl
loope
ss
mov
mov
xor
jno
popa
jns
out
cmp
lahf
mov
out
stos
dec
xchg
in
mov
test
sbb
xor
scas
pop
mov
jl
mov
fwait
hlt
dec
or
pop
test
dec
mov
adc
xchg
jne
xor
mov
xchg
sub
and
sub
xor
mov
dec
mov
dec
stc
call
in
inc
pushf
mov
ss
dec
or
push
and
aas
mov
mov
cmpb
cmp
xchg
mov
mov
sub
lods
add
mov
daa
push
cmp
xchg
andl
repz
or
scas
loope
cmp
xchg
pop
shlb
or
jmp
sub
dec
stc
push
lea
aaa
outsb
xchg
test
mov
adc
fimuls
orl
cmp
das
ret
pop
popf
inc
les
mov
mov
sub
iret
pop
mov
sbb
mov
js
or
cmp
and
in
mov
lret
push
inc
scas
stos
lahf
sub
cmp
jns
dec
lock
rcrl
sbb
adc
into
mov
ds
lods
xchg
jne
test
or
sbb
mov
leave
arpl
into
nop
dec
and
daa
sbb
aas
lcall
js
inc
leave
js
xor
mov
repnz
data16
pop
pop
or
scas
mov
sbb
imul
in
mov
daa
filds
mov
dec
add
xchg
jmp
adc
cltd
mov
mov
mov
dec
jp
ja
cmpsl
push
and
or
cmpsb
xchg
push
mov
popf
or
lret
and
and
bound
and
fists
xor
gs
jne
cli
pop
push
adc
xchg
mov
jb
jg
mov
stc
jne
adc
adc
out
add
in
les
sbb
in
cltd
in
pop
out
add
and
test
lods
mov
lea
nop
jge
mull
dec
inc
aas
mov
iret
mov
xlat
mov
test
dec
bound
cmpsl
push
into
inc
push
and
ljmp
cmpsb
push
aaa
cltd
or
cmp
iret
add
lcall
jbe
dec
dec
lret
cmp
js
loopne
adc
mov
sbb
mov
pop
xor
mov
and
movl
inc
in
push
push
sbb
ss
pop
fdivrl
out
cmpsl
shll
ljmp
aad
lcall
std
fisubl
cmp
jbe
mov
fstps
mov
mov
std
and
pop
and
test
outsl
in
ret
jb
inc
push
xor
push
pop
and
dec
or
xor
stos
push
aas
add
and
push
hlt
js
xor
repz
hlt
or
ret
push
push
decl
pop
jecxz
ror
sbb
jge
or
pop
mov
push
xor
add
mov
and
cwtl
das
test
loopne
fwait
mov
aas
inc
jg
mov
inc
lret
cmc
sti
pop
inc
popa
call
imul
cmpsb
dec
push
xchg
sbb
pop
and
iret
jo
outsb
mov
call
fwait
je
xchg
dec
lahf
sub
cmc
pushf
dec
adc
jnp
cmpsl
stc
lahf
mov
sbb
int3
xchg
inc
sub
out
add
test
sti
aaa
xchg
lret
pop
jbe
cmpsl
inc
popf
ss
xchg
push
cmp
jne
or
xor
xor
rolb
es
lock
addr16
mov
pop
adc
mov
jns
xchg
jo
sarl
inc
push
pop
adc
lds
loop
movsb
xor
out
decb
sahf
mov
mov
dec
jge
xor
das
mov
push
cmc
inc
adc
loopne
dec
mov
lock
je
and
shlb
adcl
inc
xchg
imul
rorb
fisubrl
arpl
mov
ja
pop
cs
mov
add
mov
loopne
adc
lret
shl
sarl
hlt
test
sbbl
or
push
push
in
cmp
loopne
je
push
aad
xor
enter
jo
jl
jno
ja
sub
fcmovnu
stos
lret
mov
mov
xlat
mov
sbb
mov
dec
lods
push
movsb
xor
je
pop
pop
jne
sbb
dec
ds
inc
in
xor
popa
ja
cmp
lret
jmp
and
movsb
sti
jge
jae
jno
rorl
int
inc
xchg
sbb
mov
cmp
and
xchg
lret
adc
inc
xchg
mov
cmc
xor
xchg
xor
movsb
xor
mov
add
push
pop
shl
popa
dec
aam
and
test
bswap
push
jecxz
add
push
je
jb
jne
xchg
mov
das
sub
daa
lea
iret
out
shrl
jae
push
xchg
dec
lds
dec
movsl
jnp
push
add
int
iret
push
testl
inc
adc
ret
xor
mov
loopne
imul
cmpsl
or
jns
mov
pop
mov
mov
icebp
data16
inc
in
fucomi
fwait
inc
mov
test
jge
cmpsl
add
push
cwtl
ret
xchg
xor
xor
add
rorb
xchg
int3
mov
jg
adc
lods
fcmovnu
pop
inc
push
lock
adc
imull
pop
lcall
int3
js
cmpb
jmp
sbb
call
xchg
pop
test
mov
xor
loope
fstpt
dec
pop
fsubl
lcall
mov
out
pop
mov
dec
mov
lcall
push
dec
lcall
stc
lea
mov
loop
xor
sbbb
cmpsl
fs
and
push
pop
pop
arpl
ljmp
nop
std
jle
fwait
int3
xlat
mov
push
adc
stc
dec
mov
mov
int
nop
add
jns
inc
or
inc
jae
cld
add
sbb
jbe
xchg
cmpsb
jl
mov
loope
xor
nop
cld
stos
jo
cld
cmc
mov
xchg
rcrl
leave
mov
add
or
cmc
push
jb
jae
popf
and
rolb
xor
pop
js
repnz
loope
mov
add
mov
pop
ja
test
mov
fwait
hlt
mov
push
mov
inc
dec
into
adc
mov
mov
ljmp
mov
fldcw
jecxz
in
pop
mov
pop
repz
add
fidivs
adc
cmpsb
push
outsl
sub
popa
in
loopne
mov
es
ret
cmp
or
les
pusha
repnz
mov
stc
cmpl
sub
cs
jb
sbb
out
inc
xchg
fdivr
lock
sub
mov
ds
mov
inc
ret
data16
in
fidivrs
jns
ret
push
sub
pop
inc
cmp
dec
ja
inc
dec
xor
dec
mov
repz
outsl
nop
dec
imul
cmp
addl
repnz
in
dec
repz
shrl
pop
test
les
mov
cmp
scas
mov
sti
add
shlb
and
cwtl
sub
mov
xchg
push
cmp
sbb
test
ror
dec
add
jno
mov
loop
xor
mov
pop
lds
mov
aam
pop
ljmp
leave
fbstp
lods
ret
fnstcw
jno
sbb
cmp
rolb
js
pop
jg
leave
fnstenv
mov
push
in
cmc
xchg
inc
lock
rcrl
mov
mov
pop
adcb
add
or
ljmp
les
out
adc
hlt
xchg
loopne
into
xchg
xor
lods
cmp
das
xchg
movsl
pop
fdivs
add
repz
push
cmpsb
into
inc
orl
push
lret
outsb
sbb
cli
jp,pn
ret
xor
jmp
cmpb
imul
gs
decb
jae
lock
cmp
sti
cmp
fnstenv
dec
daa
jp
dec
cmpsl
adc
inc
push
pusha
inc
test
roll
lods
mov
hlt
addr16
jmp
lret
stos
push
insl
test
cmpsb
push
daa
cli
sti
std
mov
pop
popf
inc
mov
mov
leave
ljmp
call
int3
leave
sbb
stos
pop
cmpsl
sub
mov
jecxz
mov
jo
mov
push
clc
testl
mov
js
adc
xchg
fcompl
aam
mov
mov
rorb
jecxz
cmp
in
add
loop
outsb
out
in
push
pop
adc
jmp
mov
adc
leave
or
sub
not
stc
add
icebp
test
pop
mov
stos
in
mov
mov
enter
dec
pop
lcall
pop
xor
push
cmp
movsb
stos
pop
test
add
mov
xor
into
pop
jmp
xor
dec
cld
cld
lahf
div
sbb
push
into
leave
cmp
mov
and
nop
stos
sub
roll
andb
xchg
sub
insb
data16
add
jo
mov
insl
xchg
xchg
clc
mov
or
test
sti
fs
dec
lock
pop
and
jbe
push
test
sub
mov
add
mov
test
sub
ret
fmuls
mov
jns
lock
adc
pop
clc
pusha
push
push
ret
mov
pop
cmp
cmp
lods
pop
dec
fbld
pop
lret
dec
pop
xor
and
adc
testb
dec
sbb
mov
dec
inc
movsl
popa
icebp
int
lahf
mov
les
adc
or
jnp
in
mov
add
or
rorb
cmpsb
mov
movsl
loopne
push
cmp
dec
out
cmpsl
cmpsl
loop
mov
movsl
push
sbb
or
or
aaa
pop
sub
xchg
jns
into
lret
jno
iret
test
push
jmp
cmp
fs
or
mov
inc
or
push
ljmp
or
mov
push
or
fistpl
jns
adc
mov
push
stos
sbb
jmp
mov
addr16
out
and
xor
movsl
mov
push
inc
or
imul
or
push
ljmp
and
inc
mov
add
fnsave
push
icebp
lret
imul
out
xor
jg
test
xchg
push
aam
xor
xchg
pop
mov
jge
cltd
idivb
sar
jae
sbb
pushf
sbbl
popa
mov
push
cmp
jo
ljmp
mov
int3
fstl
xchg
lods
pop
xchg
mov
push
cmp
jae
int
popa
lret
idivb
scas
into
ja
sub
mov
cmp
cmp
sub
bound
cmp
movsb
push
cmpsb
andb
sbb
insb
adc
pop
xor
dec
ret
add
in
jg
js
xlat
lods
and
inc
jno
mov
cmpsl
sbb
cmpsb
ja
add
dec
sub
inc
nop
or
cmp
addr16
push
inc
in
dec
cltd
push
sbb
addb
inc
pop
stc
adc
adc
rcr
test
sbb
pop
sbbl
adc
addl
pushf
dec
dec
inc
mov
pushf
push
test
cmpl
ffree
sbb
dec
mov
mov
icebp
in
scas
inc
sar
dec
xchg
jo
lcall
pop
lahf
jae
jo
hlt
ljmp
aaa
aad
lcall
cmp
bound
cmp
jmp
imul
mov
and
loop
cmp
leave
loope
fistpl
mov
into
cmc
cmp
sti
push
out
pop
std
addr16
fildll
xchg
sub
data16
test
out
cmpsb
dec
sbb
sub
sbb
and
pop
jne
nop
test
push
push
jns
fisttpll
std
cmp
push
mov
dec
test
test
ds
int
xchg
clc
jns
fadd
mov
mov
mov
inc
cli
sbb
sbb
outsb
cli
loop
fisubl
addr16
scas
pop
dec
adc
int3
adc
test
pusha
and
sub
clc
mov
fstpl
hlt
mov
aaa
mov
lds
sahf
inc
popa
mov
add
adcb
gs
or
cmp
in
pop
sub
pushl
bound
ja
sbb
pusha
sbb
into
sub
add
test
hlt
or
and
or
sarl
pop
lods
xchg
adc
sahf
enter
push
ret
int
movsl
sub
inc
xor
insb
xchg
and
std
sbb
mov
add
repz
test
adc
and
adc
push
int3
push
fistpll
movups
jbe
jle
and
mov
or
cmp
mov
lea
loop
mov
pop
or
loop
outsb
mov
sarl
push
scas
popf
sbbb
ss
add
jno
add
lds
xchg
push
loopne
or
push
dec
test
je
ljmp
aad
inc
cltd
notb
mov
pop
mov
mov
lcall
pop
outsb
fwait
insl
mov
xchg
mov
and
lock
cs
push
add
test
dec
dec
jle
pop
inc
subl
aad
mov
push
enter
jg
movsl
add
scas
sub
jmp
shrl
scas
icebp
ja
and
test
loope
inc
fs
dec
hlt
push
mov
mov
add
sbb
loope
mov
sub
test
pusha
mov
mul
sbb
xor
jle
adc
dec
lret
fimuls
out
adc
aad
jne
icebp
scas
mov
cmp
lock
push
mov
xor
mov
rcrl
test
cmp
lahf
jns
movsl
cmc
sub
mov
insl
mov
mov
xchg
jnp
int3
inc
pusha
push
xor
sti
shrl
xchg
pop
adc
cmp
repnz
sbb
out
push
fisttpll
inc
pop
pop
xchg
std
loop
mov
outsb
mov
inc
addr16
pop
xchg
push
inc
and
gs
leave
lods
dec
in
dec
push
mov
sbb
xor
dec
dec
cmpsb
scas
add
lret
sub
mov
xchg
cmp
pop
add
lret
repnz
mov
aas
pop
lahf
pop
xchg
xor
pushf
sti
out
sub
pop
cs
lret
and
cmp
jecxz
mov
test
jle
orl
aam
sbb
rcrb
enter
test
adc
incb
inc
mov
and
in
retw
xchg
jg
lahf
mov
cmp
loope
gs
sbb
dec
add
pop
cwtl
dec
cmp
test
xchg
fisubl
scas
sti
rcr
jp
sbb
cmp
jno
jne
shrl
or
movb
sub
jle
or
movl
jno
ret
add
xchg
pop
add
xchg
mov
and
adcb
inc
push
shrd
aas
sub
daa
xchg
popf
ja
xor
movsb
sub
and
in
inc
cmp
jecxz
mov
test
sub
jge
jne
repz
stos
lea
scas
sbb
movb
and
push
shlb
sub
pushf
mov
in
mov
inc
mov
popf
jne
testl
stc
fstl
sbb
aad
aaa
fisttps
sub
aaa
xor
cmp
fldt
repz
push
lds
loopew
fstps
ljmp
sub
out
sub
shlb
dec
mov
cmc
inc
inc
adc
dec
cs
loopne
xor
dec
lock
les
jge
mov
pop
dec
mov
push
mov
jno
mov
or
inc
pushf
sub
in
jbe
jne
mov
jmp
xor
dec
pop
and
mov
sbb
es
les
push
xchg
fs
jle
int3
test
pusha
mov
xlat
repnz
mov
mov
add
lods
pusha
mov
jecxz
shl
movsb
fwait
shl
std
and
lods
fcmovnb
lret
jp
mov
aaa
mov
stos
push
dec
mov
mov
mov
stos
rcrl
mov
jmp
ds
add
pop
js
mov
lret
sub
enter
push
mov
loop
fiadds
sub
lock
outsl
stos
lahf
idivb
ret
fs
mov
pop
mov
insl
cmp
lock
psubb
dec
dec
and
jnp
fwait
stos
jne
mov
dec
popa
imulb
push
pop
push
mov
xor
adc
enter
adc
iret
pop
mov
adc
gs
and
fwait
xchg
cmp
mov
sarl
cmp
and
add
imul
sbb
test
cmc
push
mov
mov
not
jnp
jae
sbbl
jb
lock
xor
xchg
mov
ret
xorl
jl
ret
rcrb
in
dec
test
dec
fwait
arpl
or
and
shrl
cmp
push
lods
mov
fdivl
addl
fwait
add
leave
or
pop
lcall
lock
add
jp
leave
mov
in
jmp
pop
cmp
cmpsb
and
out
out
inc
jle
jle
cltd
cwtl
cmp
inc
cmp
pop
sahf
sub
mull
mov
scas
xchg
andb
sti
jns
sub
sub
in
inc
stos
add
jge
mov
dec
inc
gs
mov
adcl
xchg
xor
cmp
cs
inc
jns
push
and
mov
cmp
mov
movsb
stc
sbb
in
ljmp
xor
mov
mov
aas
adc
nop
xor
mov
adc
mov
adc
jmp
fisubrs
sub
dec
decb
push
aaa
mov
xchg
fldenv
xor
cmc
rcll
sbb
in
add
mov
jl
push
sbb
or
lret
cmpsb
pop
push
push
jne
lret
sbb
add
mov
outsl
sbb
push
and
in
add
dec
aad
pop
push
or
and
flds
dec
pop
imul
insb
in
sub
js
mov
cmp
cmc
and
in
dec
lods
push
push
insb
dec
push
loop
ja
sub
push
jne
inc
push
test
jb
cmp
jb
bound
xchg
cmp
xchg
xor
in
out
inc
or
cmp
and
push
out
imul
xor
ficoms
lret
clc
sub
push
mov
popa
in
lret
jns
lret
jecxz
xchg
pushf
bnd
sub
xchg
ret
xor
jl
xor
ja
mov
ret
out
cmp
or
sahf
cmp
fsubrs
bnd
mov
pop
test
xchg
cld
cmp
adc
xchg
ffreep
push
daa
xchg
popa
xchg
push
jecxz
cmc
fisttps
mov
fmul
clc
mov
add
mov
movsl
test
jmp
fnsave
cmp
lock
mov
out
sub
sbb
xchg
cltd
insb
out
jecxz
mov
stos
dec
dec
push
repnz
mov
mov
mov
push
mov
inc
mov
or
das
add
mov
jle
pop
out
std
lods
jbe
mov
inc
negl
insl
jae
sbb
rcr
fs
dec
push
sbb
mov
test
fcompl
sbb
dec
test
fs
pop
scas
pop
call
and
fdivs
lods
enter
imul
in
imul
sbb
imul
aad
out
mov
sbb
mov
push
jbe
xchg
stos
faddl
leave
sahf
and
les
xor
mov
fimull
xor
push
mov
sbbl
dec
daa
sbb
xchg
sbb
push
cwtl
mov
mov
dec
cmp
push
ljmp
scas
pop
mov
cmp
leave
push
jge
adc
sub
into
inc
pop
fistpl
inc
push
negb
and
xchg
or
daa
cmp
xchg
ret
aas
xlat
call
ss
int3
or
jle
enter
and
sahf
mov
mov
fmuls
icebp
mov
or
adcb
outsl
daa
xor
pusha
push
iret
ror
fldcw
ret
outsb
push
ljmp
xchg
mov
jl
xchg
jb
sub
inc
jae
fcmove
call
aaa
add
add
mov
push
adc
in
add
dec
xchg
in
xor
dec
ret
xchg
stos
sub
scas
dec
adc
lds
push
in
movsb
sbbb
jecxz
leave
in
insl
mov
mov
mov
shll
fnstenv
cmp
push
add
cmpb
sub
cmpsb
dec
insl
push
out
pop
adc
mov
fstps
repz
push
into
ret
lcall
push
stos
lods
dec
xor
pop
je
dec
mov
fs
test
mov
lret
jle
cmpsl
mov
div
movups
push
ljmp
xor
push
mov
cmp
daa
jg
mov
out
mov
ret
pop
fsubrl
leave
lcall
ss
lcall
movsb
push
rcrl
addr16
push
mov
mov
aam
cli
es
adc
sbb
lret
sti
outsl
push
sarl
loope
or
mov
jmp
push
and
mov
out
bnd
fwait
mov
adc
sub
lahf
popa
in
fcoms
fsubrp
pusha
add
mov
jle
stos
mov
jno
xchg
mov
ds
sbb
ljmp
adc
mov
mov
cli
outsb
lods
fdivrl
xchg
lret
xor
cmpl
xchg
xchg
sbb
addr16
and
ss
jge
sbb
mov
jg
imul
xchg
fisubs
jnp
aas
mov
xor
xor
inc
mov
stc
lock
add
cmpsl
lret
rclb
cmp
shll
sub
imul
int3
xor
arpl
add
xchg
pop
mov
jl
ljmp
mov
std
les
in
dec
mov
add
cmp
bound
inc
pop
dec
jnp
mov
jge
jmp
outsb
pushf
pop
xor
mov
sbb
sbb
popf
icebp
popa
push
or
xchg
btr
mov
jae
sar
cmpsl
and
insb
repz
rcrl
movsb
stc
cmp
dec
push
shll
xlat
repnz
test
xchg
test
dec
repnz
add
pusha
sbb
cmpsl
push
inc
mov
mov
mov
jle
aas
push
push
push
lea
mov
push
aam
pusha
movsb
fists
mov
mov
and
ret
sub
sbbb
xchg
dec
fistpll
pop
mov
ds
rcl
test
int3
add
or
sub
ret
or
out
cmp
popa
and
lcall
pop
pop
mov
jns
ret
in
popf
cli
shlb
or
jae
out
xchg
and
repz
loopne
sub
jle
or
push
enter
ret
into
shlb
xchg
insl
ja
nop
fs
mov
shrl
mov
mov
adc
xor
cmc
xlat
rorb
jmp
addr16
pop
loop
dec
push
cmp
ret
dec
jbe
pop
xor
xchg
scas
loop
decl
hlt
xchg
pop
repz
xchg
shll
xorl
frstor
aaa
pusha
lahf
or
or
dec
inc
cltd
sub
in
add
daa
loopne
nop
mov
adc
inc
xchg
leave
mov
into
stos
pusha
xchg
sbb
orl
lds
in
mov
mov
pop
pop
push
addr16
aas
addr16
mov
push
add
dec
je
mov
xor
dec
jl
int3
and
xchg
test
push
push
fildl
fidivrl
inc
cwtl
pop
cmp
and
xlat
loop
outsl
aas
scas
ret
outsl
or
sbb
loope
jmp
clc
cmp
cmc
cld
pop
inc
push
or
jo
ffreep
into
mov
aad
mov
sub
and
push
inc
cmp
enter
mov
push
test
push
add
stos
dec
call
pop
sbb
cmc
icebp
xor
cmp
inc
nopl
or
movsb
mov
nop
add
out
fwait
jae
jle
in
push
jne
cmpl
xor
push
pop
lds
mov
add
mov
in
or
sub
adc
and
mov
mov
les
sub
test
xchg
in
ret
mov
dec
rol
and
mov
lods
test
hlt
mov
adc
mov
xor
sbb
pop
popa
outsb
sub
insl
cmp
inc
fdivrs
add
addr16
mov
imulb
aad
je
aaa
jbe
or
aas
inc
push
call
int
pop
es
fcmovu
in
lret
cmp
cs
mov
imul
outsb
inc
cmpl
jg
xor
ljmp
jle
adc
xor
lea
cmp
inc
enter
out
jp
mov
bound
nop
dec
into
je
push
pop
adc
roll
divl
out
fwait
xlat
xchg
xchg
daa
clc
sub
or
inc
push
inc
fldln2
clc
dec
lods
adc
dec
bound
adc
test
das
mov
inc
or
fldl2t
dec
inc
and
add
fprem1
jmp
xchg
shlb
dec
mov
push
push
loopne
or
je
repnz
add
int
adc
xchg
dec
mov
sub
or
cmp
int3
cmpsl
xor
pop
and
pop
xor
in
lock
cmp
adc
xor
sub
xor
jne
jae
cltd
xchg
cmp
js
mov
inc
pop
mov
inc
test
add
or
push
push
xor
dec
adc
jmp
in
xchg
dec
jge
cmp
loope
pop
cmp
rcrb
repnz
sbb
fldenv
repnz
xor
cmp
lahf
bound
es
sub
mov
stc
lcall
adc
mov
xchg
pop
sub
in
mov
fistl
sbb
jae
pop
sub
add
filds
xor
pop
push
push
leave
push
cltd
int
jb
mov
mov
push
sub
negl
mov
clc
pushf
push
xchg
inc
dec
pop
xchg
adc
hlt
shrd
cmp
in
xor
push
mov
cmp
hlt
jecxz
pop
pop
cmp
lods
arpl
add
pop
loopne
popf
rolb
repz
scas
and
faddl
insb
mov
cmp
jecxz
mov
lret
xor
outsl
mov
mov
push
or
insl
xchg
sbb
test
outsb
aad
cmpsl
mov
mov
or
pop
cltd
inc
ret
call
es
xor
pop
cmpxchg
lock
shll
and
jg
lahf
jp
out
mov
pop
dec
dec
insl
mov
fisttpl
or
inc
popa
push
gs
sub
scas
loope
xchg
mov
adc
or
sub
dec
and
cmpsl
xchg
out
dec
sub
mov
leave
jp
cmpsb
adc
cmc
push
fcomps
outsb
lods
sub
sub
pusha
jecxz
jge
sarb
lods
call
mov
xchg
xchg
and
loopne
lahf
lea
es
inc
in
lds
jae
add
inc
dec
xchg
scas
mov
cltd
hlt
es
dec
jecxz
aam
test
xchg
xchg
pop
in
xchg
add
loope
or
mov
out
and
mov
outsl
jno
or
jae
cli
push
outsb
test
xchg
fucomip
jnp
pop
push
sub
stos
ss
ljmp
stos
mov
jp
mov
cmp
lret
push
jo
lock
ja
pop
pop
fcoml
xor
jo
in
scas
out
cmp
and
roll
aam
aaa
xor
add
fidivl
inc
ficomps
push
cmp
sub
jle
pop
mov
and
push
aad
add
addr16
mov
mov
cli
mov
das
mov
cwtl
faddl
jl
push
xlat
inc
fisubrl
hlt
dec
pop
out
test
loopne
jo
ja
or
cld
mov
enter
hlt
aam
adc
enter
les
adc
mov
dec
cli
cmp
jo
jp
xlat
leave
fadd
cmp
cmp
testl
add
sbb
sub
and
lds
dec
in
jge
jle
cmp
bound
jl
cwtl
cmpsb
mov
das
dec
jp
outsb
shrb
xor
aam
mov
inc
scas
pop
xor
adc
enter
inc
xor
jp
xor
movsl
mov
insl
xchg
stos
mov
sub
sub
pop
in
adc
pop
mov
dec
insl
sub
mov
xorb
cmpsl
dec
lods
mov
cltd
pop
and
es
js
aaa
push
imul
das
inc
or
test
or
imul
dec
loopne
pop
pusha
jmp
mov
outsb
pop
pop
out
sub
insb
movsl
push
xor
repz
or
mov
cwtl
mov
dec
sti
std
mov
pop
inc
or
cwtl
sarb
idivb
xchg
cld
xlat
rorb
and
mov
int
or
add
lds
scas
aas
sbb
sub
and
jge
inc
xor
mov
or
clc
leave
dec
lret
repnz
scas
sub
jne
cmc
daa
pushf
inc
mov
adc
jno
ja
dec
jae
push
jecxz
js
pop
add
sub
das
scas
inc
mov
mov
je
inc
lods
lahf
fistpl
orb
ja
lea
ret
jle
dec
push
dec
and
pop
xchg
inc
lret
nop
or
hlt
lret
ja
push
loopne
icebp
add
in
idiv
mov
mov
daa
lods
mov
jle
mov
xchg
pop
mov
movsl
push
loop
clc
into
and
mov
ds
lods
adc
dec
fdivrp
dec
psubb
jecxz
fldt
lret
movsl
jo
outsl
mov
shrb
cwtl
sbb
pop
mov
xor
int3
mov
mov
xor
adc
push
aaa
xchg
xlat
mov
fdivrl
es
in
mov
into
push
mov
or
adc
jno
inc
add
mov
mov
and
das
and
jno
outsb
loopne
xor
adc
ljmp
mov
insl
stc
cmp
mov
push
pushfw
sub
addl
cmpsb
scas
cmp
dec
divb
aad
push
mov
leave
sbb
mov
arpl
mov
adc
cmp
rcrl
outsb
mov
mov
jp
xor
sbb
sub
push
cwtl
push
inc
or
mov
rolb
movb
pop
iret
fcmovbe
mov
dec
in
jno
enter
inc
cmp
jge
ljmp
lret
hlt
pop
mov
clc
ret
or
sub
mov
and
daa
mov
fnstcw
int3
pushf
add
cmpsb
mov
rorb
push
jecxz
xchg
imul
test
or
dec
push
das
mov
jp
clc
sahf
mov
pop
aam
mov
adc
and
in
inc
push
les
push
sbb
das
outsl
in
daa
das
adc
sub
push
xchg
add
dec
std
lcall
add
mov
and
sub
dec
xchg
dec
pop
and
or
loopne
xchg
incb
mov
jmp
cmp
add
or
test
mov
jge
pop
xor
add
pop
push
add
insb
jno
sarb
mov
movsw
xchg
jle
sbb
inc
push
adc
or
sbb
or
cmp
mul
fcoms
xchg
jo
xchg
mov
cwtl
cwtl
inc
sarb
out
int3
mov
mov
out
mov
scas
jo
lock
xor
or
or
cmp
mov
dec
mov
jp
or
popf
stos
mov
xchg
sub
dec
loope,pt
xor
out
xor
hlt
xor
outsl
jg
cmpl
mov
mov
and
adcb
stos
push
cmpsl
js
mov
adc
push
adc
js
aas
adc
js
js
adc
xor
sbb
sbb
cmpsb
dec
inc
inc
ss
mov
adc
mov
out
mov
cltd
add
xchg
lret
loopne
or
mov
mov
xchg
ds
or
inc
mov
fcom
out
rolb
arpl
into
xchg
lock
lahf
cld
mov
and
das
mov
xchg
call
leave
popa
stc
push
addr16
outsl
push
mov
insl
mov
fcoms
inc
jb
in
dec
icebp
stos
inc
xchg
push
mov
mov
imul
iret
lea
xorb
test
pop
lret
jae
jbe
pop
test
and
sbb
jae
loopne
arpl
cmpsl
push
cmp
out
dec
push
jno
push
cmpsb
test
jbe
push
mov
lcall
divl
rclb
cmpsb
sti
sub
insb
iret
pop
inc
scas
push
stos
int3
negl
dec
cmp
sbb
mov
inc
adc
mov
out
arpl
pop
mov
sbbb
pop
data16
aas
in
stos
push
addb
jb
addr16
inc
out
push
fwait
call
popa
add
popf
fisttps
repnz
mov
sbb
pop
adc
vsqrtss
movsb
sbb
int
int
cltd
pop
add
jmp
cmp
cmc
addr16
xor
mov
or
rorl
jp
jb
xchg
sub
out
jne
xchg
loope
jne
leave
mov
sub
push
fildll
imul
mov
je
aas
out
sbb
inc
ret
push
in
jnp
fidivs
and
lods
dec
xchg
les
xchg
std
in
sub
mov
sub
xor
aaa
rcl
pop
sahf
adc
push
test
dec
push
icebp
stc
xor
pop
mov
into
cld
jns
fcompl
mov
data16
loop
pushf
lahf
ja
xchg
out
adc
push
pop
gs
aam
push
lcall
dec
push
enter
test
jp
inc
jecxz
pusha
out
xchg
xor
fsubrs
mov
inc
cmp
pop
and
and
test
mov
or
test
rclb
in
cmpsl
or
cmp
iret
pusha
push
dec
adc
push
movsb
addr16
pop
lods
mov
add
in
bound
outsl
cmpb
rcrl
test
and
call
inc
es
push
jle
out
rcl
dec
adc
mov
lock
out
cmp
lahf
jb
lock
mov
mov
pop
sbb
into
movsb
data16
addb
mov
xchg
inc
xor
pop
fisttpl
arpl
inc
lret
sbb
popf
repz
sbb
addl
jg
lds
icebp
cld
hlt
jb
mov
xchg
cmp
pop
jnp
fs
push
aaa
mov
aam
test
aas
repz
cwtl
imul
inc
xchg
and
adc
outsb
cltd
jo
inc
push
mov
jmp
loop
and
mov
mov
adc
out
mov
mov
adc
and
jmp
push
popf
xor
cmp
mov
lahf
add
aam
dec
outsb
adc
sbb
xor
out
push
mov
sbb
cmp
insl
push
xor
add
mov
jnp
mov
dec
gs
adc
or
aas
push
mov
in
repz
push
int3
pop
mov
call
and
push
sbb
outsb
jle
lcall
adc
ja
push
sbbl
push
mov
mov
icebp
pop
xor
xor
xor
xor
mov
loope
aaa
push
sub
movsl
daa
mov
jnp
aad
fwait
pop
loop
jbe
fldenv
pushf
cmc
clc
fisubs
cld
and
mov
dec
fidivs
jo
lahf
fdivrl
rcr
mov
shll
hlt
sti
mov
icebp
mov
popa
and
ficomps
dec
fnstcw
sub
ret
mov
test
cs
push
push
leave
ret
divl
cmc
xchg
scas
xchg
inc
test
cmpsb
stc
sub
push
mov
sbb
pusha
inc
into
outsb
decl
insb
xchg
das
ret
imul
xchg
aam
rolb
xor
dec
push
ffree
sbb
push
adc
sahf
int
mov
mov
pusha
pop
sbb
lods
adc
repz
cwtl
xchg
and
mov
sub
int3
jge
inc
imull
sbb
sbb
insl
lcall
test
mov
xor
xor
push
inc
inc
ss
fisubrs
and
sbb
sub
cli
int3
iret
popa
imul
out
aad
pop
imul
lret
mov
call
inc
out
lock
mov
ds
add
int
frstor
fldenv
clc
cmc
popf
js
pop
cli
or
lock
dec
test
sbbl
loope
arpl
pushf
in
popf
push
inc
add
in
out
mov
xchg
andb
cwtl
pusha
test
xchg
dec
sti
mov
sbb
xor
out
cs
xor
rcll
loopne
jns
add
out
sub
hlt
lret
scas
cmp
mov
mov
stos
push
jb
mov
mov
scas
scas
jg
ja
cmp
les
cmp
and
adc
dec
jb
push
adc
pushf
sub
pusha
cmp
mov
mov
xor
fs
sahf
sub
inc
push
std
icebp
xor
fidivrs
or
xchg
ret
sbb
out
scas
stos
sbb
out
out
ljmp
scas
stc
gs
lret
sarb
xchg
pushf
nop
fldz
jo
inc
sub
dec
sbb
push
ret
dec
push
or
inc
cwtl
test
in
cltd
cmp
mov
or
mov
subl
nop
test
jg
jmp
test
fisubl
add
add
outsl
jecxz
jnp
push
and
cli
push
push
lock
leave
outsb
xor
push
mov
test
aad
not
dec
add
cmp
arpl
movsb
pop
cmpsl
les
movsb
push
insb
sbb
mov
adc
je
sbb
push
lret
negl
jmp
jnp
stos
stc
push
fs
inc
outsl
pop
aaa
inc
arpl
xchg
int
out
xchg
pushf
outsl
mov
repz
addr16
mov
adc
emms
iret
jbe
and
scas
lds
inc
xor
shrl
and
mov
add
movsl
je
jge
jmp
cmc
dec
add
xor
sti
roll
mov
sub
mov
and
xor
into
mov
or
ss
enter
jg
iret
les
xchg
jmp
mov
sbb
je
push
jmp
dec
cmpsb
mov
clc
mov
aaa
pop
inc
testl
je
fdivs
fwait
sbb
loopne
ret
rcr
es
stos
xlat
fldl
jge
out
addl
mov
sbb
and
push
aas
lods
ret
fnsave
jg
pop
sub
xor
mov
test
cmp
mov
push
mov
inc
inc
iret
sub
pop
push
adc
push
in
ljmp
fstl
inc
jae
mov
daa
xlat
movsl
mov
outsb
clc
mov
mov
in
andb
jl
rcrl
push
notl
xlat
pop
aaa
jecxz
cmp
cmp
mov
lock
sahf
rorl
sahf
inc
bound
lea
in
inc
mov
cwtl
mov
dec
mov
aad
test
xor
cs
aam
mov
jno
mov
mov
stc
stc
mulb
mov
cld
dec
aam
push
mov
test
sbb
push
adc
push
mov
or
push
jae
leave
jecxz
stos
ja
notl
fisttpll
mov
mov
jno
or
mov
mov
sbb
sbb
mov
imul
mulb
ja
jecxz
or
sahf
pop
push
or
jb
jmp
movsb
insl
and
out
sub
enter
mov
mov
popa
imul
icebp
push
adc
jle
cmp
adc
roll
pop
lcall
mov
mov
mov
outsb
xor
iret
jecxz
cmp
aam
lret
inc
or
aaa
lret
dec
inc
jg
cld
test
loope
push
mov
rcll
insl
addl
add
iret
shl
dec
pop
jns
cmp
jmp
out
inc
push
lret
stos
test
es
push
cld
push
mov
or
popa
sub
bound
popf
std
subl
ret
push
ds
ret
scas
cmpsl
das
cmp
pop
or
dec
arpl
cmovbe
in
nop
popa
pop
push
lock
sbb
lods
in
out
jnp
sub
fwait
jmp
jno
and
outsb
push
cmc
inc
mov
cmp
hlt
in
lea
ss
fimuls
mov
shlb
mov
inc
dec
and
lret
and
pop
mov
inc
mov
jno
cmp
insb
mov
sub
inc
test
dec
in
fwait
icebp
icebp
scas
stc
xlat
push
loopne
jno
movsl
add
jl
mov
pop
shrb
lret
jp
pop
and
shlb
leave
cli
adc
sbb
div
add
lds
jns
sahf
mov
and
mov
sbb
push
in
mov
xchg
mov
andb
cmc
and
inc
fldcw
sbb
xor
adc
fiadds
outsl
mov
pushaw
loopne
inc
scas
ret
lods
mov
dec
mov
sti
movsl
jle
jnp
lcall
sbb
mov
mov
sub
sbb
addr16
pop
add
imul
mov
cmpsb
sbb
sti
popa
adc
arpl
popa
into
lock
adc
dec
dec
test
inc
jl
outsl
push
mov
push
jp
xor
int
aad
mov
mov
lcall
adc
int
lret
and
cmp
mov
fcmovnbe
fiadds
cli
adc
mov
sub
add
in
scas
cwtl
cmp
out
cmp
aaa
movsb
leave
sub
in
imul
es
insl
push
mov
in
cmp
fdivr
and
adc
out
mov
xor
sti
mov
leave
xor
aam
daa
or
lret
mov
mov
mov
adcb
stos
jo
leave
dec
push
push
dec
cmc
sahf
ret
push
test
retw
fs
out
rclb
scas
adc
push
in
ficoms
aas
lahf
push
aas
stc
outsl
addl
xchg
dec
dec
pop
lret
fmull
aad
fsts
push
imul
loop
jle
stc
rcrl
jnp
scas
sbb
sub
lcall
inc
testl
mov
xchg
pop
stc
imul
cmp
int3
out
shl
or
pop
popf
pop
aas
ja
fadds
dec
xor
xor
jg
cmpsl
data16
push
adc
xchg
sbb
fwait
and
push
sbb
loopne
pop
scas
mov
lcall
nop
call
sub
loope
xchg
cmpl
test
push
cld
stc
push
hlt
lods
int3
add
push
ret
and
popa
xchg
mov
pushf
es
mov
or
inc
mov
push
xchg
mov
addr16
lahf
dec
xlat
ljmp
jecxz
roll
fbld
test
out
pop
xor
mov
movsb
cmpsb
test
push
push
adc
lahf
stc
loop
subl
enter
dec
push
jbe
outsb
out
add
inc
mov
xchg
push
push
pop
dec
sbb
mov
hlt
inc
or
imul
cli
jmp
shl
xor
dec
mov
mov
scas
or
xor
into
out
jae
mov
xor
ret
stos
outsl
pop
mov
xchg
cli
dec
inc
xchg
mov
bnd
adc
ret
inc
fimull
stos
js
loope
cmp
mov
sbb
shll
div
cmpl
xor
in
jle
mov
push
gs
sbb
adc
jne
js
js
mov
jb
cli
and
xchg
xor
leave
pop
xchg
dec
xchg
xor
mov
cli
out
lret
jo
cmp
xor
in
rorb
test
add
mov
cmpsb
negb
pop
sub
inc
pop
inc
sar
movsl
insb
push
jns
cmp
xlat
mov
sbb
xor
or
lea
cmpsl
test
push
icebp
mov
mov
jns
fldcw
testb
dec
adc
jne
jae
xorl
cmp
test
in
mov
enter
jbe
cmp
sbb
nop
popa
pop
jecxz
aas
icebp
inc
in
shll
mov
call
jge
pop
pop
mov
xchg
pop
ret
test
ret
jbe
imul
cmc
pop
jle
jne
or
pop
xchg
out
dec
mov
shll
cmp
test
sub
mov
dec
jp
pusha
pop
mov
jg
mov
mov
jno
in
ljmp
ss
in
daa
sub
shl
sub
popa
jb
cs
push
adc
xor
lcall
leave
imul
mov
push
dec
pusha
pusha
adc
jge
mov
sub
jmp
fisubs
mov
sub
jnp
sbb
test
repz
jno
stos
xor
out
jbe
xor
jg
loop
dec
fisttpl
dec
mov
mov
dec
outsb
movl
push
aas
shrb
pop
mov
in
pop
push
imul
fcompl
cwtl
in
out
jbe
movsl
push
dec
insl
mov
cmp
mov
sub
in
rcll
adc
push
mov
iret
in
xorb
push
ss
insb
mov
test
clc
pop
pop
call
mov
fcomps
adc
rclb
repz
mov
or
jp
sti
movsb
dec
leave
push
add
mov
int
daa
mov
dec
cmpsl
sbb
inc
inc
push
rcl
fildl
iret
sub
mov
mov
jb
cmp
cmpsb
pop
lods
mov
and
lahf
sbb
pushf
mov
cmp
int
dec
bound
mov
ss
jmp
push
inc
loopne
adcl
js
stos
jmp
popa
scas
loope
repnz
into
pushf
fistpl
mov
push
outsl
cmc
out
scas
push
test
js
aaa
repz
dec
popf
lods
adc
cs
push
in
std
lcall
pop
imul
cmpsb
xchg
xchg
dec
cmp
fwait
push
adc
jg
jecxz
cli
sub
shlb
dec
test
nop
and
sbb
push
ljmp
and
mov
jmp
stc
test
dec
jl
loope
pushf
je
pusha
jl
repz
sbb
ljmp
xor
out
mov
add
mov
out
cmpl
sub
mov
ss
mov
mov
cmp
adc
or
outsl
xor
jl
mov
dec
sub
xor
push
int
inc
and
mov
in
aas
adc
cltd
testb
lods
mov
mov
xchg
shl
int3
add
sub
adc
fstpl
sbb
mov
je
mov
dec
mov
out
cld
jle
mov
and
in
loopne
push
xchg
pop
mov
sbb
jl
fsubrl
loopne
test
sub
cmp
xchg
pop
cs
or
call
pushf
jecxz
sub
mov
xchg
out
xchg
loopne
inc
js
test
je
add
cs
inc
outsl
fsub
xor
xchg
jns
jo
push
mov
mov
in
es
jl
mov
sarl
mov
jnp
xchg
leave
repnz
pop
hlt
or
imul
movsl
add
cmp
cmpsl
sub
fldcw
daa
adc
jns
mov
and
mov
push
mov
push
and
jmp
xor
popf
push
sbb
mov
push
dec
inc
mov
xchg
push
dec
push
cmp
xor
shl
ret
je
test
adc
jo
inc
scas
hlt
or
or
rorb
push
lds
xlat
hlt
push
pop
test
push
cmpsl
sub
test
push
std
dec
adc
xor
xor
clc
outsl
jno
dec
aaa
push
add
pushf
fstl
dec
dec
sbb
dec
outsb
inc
ljmp
scas
jmp
mov
push
in
out
inc
fldcw
inc
mov
out
mov
jp
jo
xchg
jo
repz
sbb
pop
xchg
pusha
test
add
cmp
addr16
enter
xor
mov
inc
fldenv
push
mov
jne
push
add
cli
js
and
subl
pushf
pop
mov
nop
xchg
imul
xchg
inc
aad
pop
xor
je
xchg
repnz
cmpsl
adc
cmp
in
xchg
pop
push
adc
adc
dec
mov
ret
cmpsl
cmp
popa
and
sub
dec
or
xor
mov
into
inc
cmp
cld
cmp
dec
xchg
loopew
imul
sub
sub
inc
push
iret
mov
ljmp
das
xor
cmpsl
jns
imul
cmp
sbbl
in
insb
orl
ds
testl
imul
ret
pushl
mov
clc
inc
sbb
jecxz
insb
sub
rcrl
aaa
rolb
adc
xor
test
sbb
and
pop
inc
inc
cmp
js
push
pop
sub
xor
xor
imulb
or
gs
and
inc
dec
std
push
or
add
call
gs
xchg
cmpsb
push
pushf
lods
ja
les
popa
pop
cmp
lahf
bnd
es
jg
inc
xor
in
cmp
cmc
pop
sbb
jle
adc
cmp
dec
stos
or
pusha
test
pusha
lds
cmpsb
cmp
pop
cltd
lea
pop
arpl
mov
jl
mov
mov
jne
fimuls
push
dec
cmpsb
xlat
mov
or
popa
loopne
adc
shll
outsb
mov
data16
xor
xchg
hlt
sbbb
mov
shr
xchg
sti
jecxz
iret
insb
insb
cltd
in
mov
mov
dec
mov
subb
mov
push
dec
movsb
hlt
and
xor
xor
adc
sub
and
cmp
push
pop
xchg
cmp
sbb
mov
daa
lea
stos
push
mov
jnp
pusha
lahf
mov
clc
pushfw
roll
jbe
into
jae
xorb
xlat
stc
fwait
or
aas
sbb
inc
pushf
push
int
sbb
ret
jmp
in
lea
int
sub
mov
mov
ret
in
push
orl
or
loop
rorl
jmp
sub
lea
jl
scas
shll
xor
xchg
pushf
cmp
enter
push
cmp
popa
cltd
into
sbb
out
shlb
test
fwait
imul
test
mov
mov
mov
decl
repnz
or
pop
jg
arpl
fwait
and
jae
popf
testl
or
jge
sub
sbb
xor
dec
push
jge
int3
mov
xor
rcrb
xchg
pop
enter
mov
sbb
inc
inc
xor
mov
add
jnp
and
fsin
add
push
nop
shll
dec
iret
push
inc
cmp
repz
mov
mov
mov
sbb
fwait
sahf
out
jecxz
pop
add
jo
scas
jecxz
inc
fsubrs
inc
cltd
pop
aad
jae
mull
jg
and
je
fstpt
je
cmp
xor
inc
add
or
mov
bound
icebp
ss
fsubr
stc
xor
pop
xchg
dec
sbb
cld
lahf
mov
and
cmpsb
dec
push
test
rorb
sub
or
pusha
fldenv
mov
dec
cmpsb
lock
lea
pop
inc
not
xchg
sub
sbb
add
lret
outsb
outsb
addb
and
add
cltd
mov
rorb
out
mov
jb
add
and
mov
or
out
inc
xor
arpl
ss
movsl
mov
xchg
sub
je
pop
sub
mov
push
or
push
xchg
lret
daa
sti
stos
cmp
xchg
loop
ret
mov
clc
outsb
and
mov
cmpsb
pop
test
mov
lret
inc
outsb
mov
js
jne
jmp
iret
xchg
pop
mov
push
inc
lock
data16
dec
insl
shll
daa
cmp
inc
fbstp
out
push
inc
jns
mov
add
mov
push
enter
ret
jmp
and
pop
sub
or
add
mov
mov
out
cli
pop
sub
cmp
cmpl
cmp
xchg
cmpsl
jnp
mov
lret
int
mov
cs
sbb
cmp
cmp
mov
push
cld
mov
mov
rclb
int
xor
inc
addr16
je
pop
fsincos
or
cld
adc
mov
mov
mov
push
fisubl
xlat
pop
fiadds
mov
mov
push
cmp
add
xchg
pop
inc
jle
mov
fcomps
mov
inc
ror
sub
and
jecxz
aaa
test
iret
push
arpl
dec
ds
test
sbb
std
dec
mov
add
mov
mov
inc
sbb
inc
xchg
mov
xchg
lods
enter
mov
test
jecxz
mov
enter
push
inc
pop
mov
and
adc
adc
jne
idivb
pop
and
shll
lock
int3
sub
test
and
orb
out
pop
jg
xor
sahf
push
shlb
repz
sahf
or
sahf
dec
or
bound
mov
sub
sub
filds
mov
cmp
in
jmp
push
sbb
xchg
add
imul
push
jnp
fsub
mov
mov
mov
jge
mov
test
mov
mov
jle
fmuls
xchg
push
xor
jb
outsb
lock
les
dec
dec
inc
fdivr
mov
jnp
repz
pusha
cmp
jns
inc
pop
fiaddl
enter
loop
lret
cmp
aam
stos
jne
push
clc
subb
incb
cmp
js
ja
leave
ds
xor
sub
pop
sbb
jnp
call
mov
leave
jb
fs
shll
sbb
xchg
nop
pop
mov
into
inc
push
cmp
mov
jb
scas
lods
ja
sub
cld
pusha
xchg
test
jo
jno
cmp
sbb
dec
jo
lock
mov
mov
push
push
pop
daa
lea
test
pushf
icebp
xor
mov
cmp
inc
test
or
inc
addr16
dec
les
inc
lret
mov
movsb
or
daa
xchg
jecxz
outsb
orb
rorb
xlat
push
loopne
mov
mov
out
negb
je
pop
imul
and
enter
add
frstor
int
fsubs
cltd
leave
fistpll
add
pop
or
sbb
mov
std
inc
dec
xchg
mov
popa
outsb
push
in
mov
into
rcrb
vpcmpeqw
inc
cmp
repz
add
inc
addl
inc
inc
mov
repnz
mov
ja
je
jecxz
outsb
fdivrs
push
ljmp
xchg
pusha
cmc
xor
mov
dec
jmp
out
sbb
adc
push
pop
mov
clc
test
sti
imul
pusha
xchg
cmp
jmp
or
xor
hlt
dec
inc
out
sub
sbb
or
mov
push
call
icebp
cli
aad
or
and
sbb
out
pop
mov
mov
inc
mov
cmpsb
pop
dec
push
test
xchg
jmp
rorl
rorb
out
imulb
xchg
sub
in
enter
loopne
inc
add
pop
rcrl
mov
dec
mov
xchg
rolb
mov
jns
fcomps
sub
dec
mov
das
test
daa
sbb
not
xor
sub
test
mov
jo
icebp
dec
jecxz
faddl
adc
inc
push
lods
jbe
leave
xchg
xor
add
movl
mov
mov
movsb
in
subl
inc
jae
pop
add
aam
jp
loop,pn
pop
popf
out
adc
xchg
stc
sub
data16
xor
fwait
aam
sbb
jnp
hlt
pop
loopne
mov
or
addl
orl
bswap
xchg
jp
js
movsl
mov
mov
leave
in
add
pop
loop
icebp
pop
mov
fdiv
mov
xor
mov
adc
mov
mov
idivl
testl
cmpsl
add
adc
mov
and
mov
mov
lds
push
ret
sub
rcl
mov
daa
test
out
mov
cmp
jmp
or
xchg
adc
cmc
popf
lcall
dec
ljmp
push
sub
js
lret
ror
xlat
sahf
dec
cmp
pop
fdivl
ljmp
rorb
mov
cmp
int3
out
mov
ffreep
out
or
adc
out
fldenv
shll
push
push
dec
jmp
mov
ret
scas
push
xorl
add
shll
sub
inc
cmpsl
jmp
add
test
mov
filds
push
fs
mov
add
es
das
lret
mov
and
cmpsl
xor
testl
mov
imul
add
sub
orb
push
fists
mov
outsl
and
pop
jmp
dec
push
dec
push
ja
call
pop
in
cmp
cwtl
pop
xchg
hlt
dec
push
aam
adc
rolb
pop
jo
push
popa
xor
push
mov
out
lods
or
fcomi
push
mov
cmp
mov
sub
and
xchg
push
icebp
pop
fstpt
fdivrl
bound
add
lcall
dec
mov
nop
lods
and
cmp
mov
mov
push
sub
test
in
fsubrp
pop
lods
mov
imul
inc
adc
mov
pop
pushf
adc
push
out
loop
ret
add
scas
xchg
mov
repz
out
jg
xchg
sarl
sbb
jl
fdivrp
lock
pop
sti
cwtl
lcall
cmp
jle
int
inc
out
fisubrl
sbb
mov
imul
loop
movsl
loope
mov
in
xchg
bound
cmp
repnz
outsb
cmp
mov
push
lret
sarb
xchg
mov
jl
enter
dec
inc
mov
movl
lea
cmp
push
jbe
sub
mov
add
mov
and
sbb
push
cmp
cmp
scas
xchg
imul
ss
jle
sbb
fcomip
inc
mov
inc
sub
or
dec
aaa
cmp
mov
stos
push
ss
pop
rcr
inc
fdiv
dec
and
mov
mov
inc
arpl
xchg
adc
or
xchg
shll
and
fsubs
fs
mov
jo
and
mov
mov
out
dec
mov
adc
cltd
enter
xchg
jae
aad
loopne
xchg
ja
sbb
jle
xor
cmp
neg
ja
repz
pop
nop
mov
data16
xor
and
in
shlb
pop
aas
stc
push
sbbb
ja
cli
adc
stos
movsb
mov
add
popa
movups
fcmovnu
sub
mov
sub
ret
out
mov
add
orl
pop
call
stc
mov
and
mov
jbe
inc
adc
pop
pop
ss
or
into
or
js
adc
scas
jnp
mov
icebp
movsb
and
jg
push
into
xor
adc
sub
xchg
pop
cmp
add
insl
pop
pop
xor
mov
lods
aam
lock
dec
mov
push
bound
push
notl
sub
insb
xchg
das
mov
orl
sahf
shr
mov
dec
mov
push
scas
rcrl
xchg
add
sbb
cwtl
mov
in
mov
iret
insl
push
cwtl
mov
stos
sub
jl
mov
push
loope
int3
or
sahf
cmp
test
inc
movsb
jl
sbbl
gs
lods
loope
xor
push
sbb
dec
cmp
les
lcall
dec
das
lea
fisttpll
out
pop
dec
arpl
lods
jb
pop
out
stos
xchg
loope
or
pop
das
ret
push
notb
cld
mov
pusha
mov
mov
xlat
cwtl
pushf
lret
sbb
out
push
scas
and
inc
mov
pop
dec
mov
aam
stos
outsb
xchg
mov
cmp
or
mov
mov
int
xchg
inc
and
loopne
mov
sbb
out
jmp
push
add
iret
push
sbb
inc
out
sbb
mov
cs
push
xchg
mov
adc
insl
nop
xchg
cmp
cwtl
sub
jg
decb
loope
mov
ret
clc
push
xchg
and
fs
cmp
dec
adc
js
jnp
ss
sbb
and
and
sub
insb
repz
dec
push
push
push
jno
cmp
das
stos
or
cld
add
xor
icebp
or
or
insl
aam
in
add
xchg
cmp
xlat
adc
push
xchg
ds
push
sub
jg
data16
cmc
rcll
movsb
lahf
sti
cmpsl
sub
cmp
mov
loopne
sbbl
cli
ret
int
xchg
mov
mov
jbe
lea
in
sbb
pop
jo
popf
and
sbb
xor
sahf
fcmovnb
cmp
insb
es
jp
int
iret
orb
cltd
push
xchg
xchg
push
add
aaa
xor
loope
cmpsb
push
sarb
jns
repnz
sbbb
imul
push
pop
cs
sub
mov
mov
dec
daa
push
jl
imul
fdivrl
pop
xchg
lods
sarb
dec
mov
fstl
mov
je
div
jae
xor
inc
xlat
sti
ss
out
xchg
roll
jge
leave
fstps
xor
sub
adc
add
int3
sahf
mov
push
mov
les
sub
addr16
push
loopne
jne
sahf
or
lret
ret
push
aad
mov
mov
mov
insl
xchg
aaa
pop
adc
cld
int
sub
mov
fmuls
fadds
jbe
mov
in
sub
sbb
sbb
arpl
les
push
xchg
xorb
sahf
sbbl
jecxz
inc
sbb
icebp
out
fnstenv
clc
cmp
loop
fdiv
mov
mov
lds
lret
pop
rol
add
lods
cs
and
mov
mov
arpl
dec
push
das
rclb
push
jnp
mov
jg
ret
sub
and
push
mov
dec
mov
adc
das
inc
popf
pop
jmp
add
test
mov
sbb
push
cmp
inc
and
cltd
stc
mov
pop
or
mov
lret
and
jecxz
leave
hlt
mov
add
gs
data16
fists
mov
std
aad
or
lcall
xchg
mov
fistpll
pop
cmpsb
ss
xor
loope
adc
jmp
movsb
xor
add
sub
xchg
inc
into
lods
inc
push
push
xchg
and
add
mov
push
mov
push
xchg
arpl
xchg
sbb
sub
mov
push
pushl
je
dec
gs
subl
dec
cwtl
mov
add
test
mov
inc
scas
mov
movsl
test
and
push
pushf
stos
mov
cld
fstpt
fidivs
jle
call
xchg
cmc
arpl
push
push
enter
push
push
jns
int
jg
xorb
lahf
addl
add
mov
lahf
fdivs
setle
mov
out
testl
mov
arpl
push
stos
sbb
and
or
push
jecxz
add
lcall
nop
jno
ds
fdivl
and
addr16
xchg
sbb
jb
fsubrl
in
fs
pop
shrb
dec
push
cmp
adc
mov
mov
add
xlat
call
sub
jmp
dec
pop
sbb
pop
cs
or
mov
fldl
jmp
mov
cmp
inc
enter
dec
cltd
mov
ret
dec
test
jl
jns
adc
test
mov
dec
jp
fcom
insb
mov
sub
insb
push
mov
cmp
movsb
stos
div
jnp
and
jno
mov
mov
fcompl
stos
fstps
addr16
mov
out
mov
mov
inc
scas
imul
clc
mov
jo
and
ret
xor
je
or
xor
fmull
lret
jnp
sub
push
enter
pop
adc
push
mov
out
fs
adc
scas
test
ss
sbb
adc
dec
in
sub
je
fstpl
mov
fnsave
add
inc
jbe
adc
shl
inc
lret
jg
dec
data16
stos
notb
fildl
sub
and
stos
clc
aam
cmp
sti
aad
or
rcr
cwtl
push
push
shlb
loop
or
or
jl
sub
mov
add
call
and
imul
pop
xor
adcl
enter
cli
or
adcl
pop
pop
sub
xchg
sahf
adc
sub
mov
lret
dec
pop
fwait
insl
es
jno
inc
addr16
mov
in
nop
pop
jbe
xchg
scas
add
mov
or
dec
fistpl
cmp
andb
xchg
jne
adc
mov
mov
gs
xor
sub
push
cmp
ja
inc
xchg
not
int
subb
js
lret
jmp
jbe
xchg
jbe
jge
clc
and
sbb
and
adc
flds
and
push
add
shlb
push
jae
jb
ret
lea
push
sbb
andl
xchg
push
lret
sbb
fmull
cwtl
cli
push
jae
pusha
jmp
aad
sti
adc
dec
cmp
imul
inc
adc
add
into
mov
es
add
mov
sub
shlb
orb
insb
rcrl
inc
push
mov
xchg
sbb
das
fcoml
mov
iret
es
xchg
cmp
push
lcall
push
test
push
cmp
jecxz
imul
or
cmp
jo
adc
test
rcrb
scas
push
cmp
iret
subb
into
push
sub
xor
inc
stos
mov
dec
jp
and
popa
rol
and
in
mov
add
pop
and
or
aad
pop
call
movsl
rclb
fcmovnbe
nop
sub
jo
add
cwtl
lock
adc
mov
in
sub
mov
shl
incl
fwait
or
test
inc
rorb
test
aaa
jg
out
and
and
adc
inc
test
cld
jo
mov
pusha
repz
syscall
jne
repnz
repz
add
push
jg
rorl
inc
ficomps
cli
fstpt
cld
xchg
flds
in
push
fwait
pop
repnz
and
cmp
orb
rcrb
xor
aam
ds
roll
addl
pop
xchg
push
movsb
xchg
movsb
cmpsl
mov
iret
jg
divb
in
mov
hlt
mov
dec
sbb
sub
or
add
pusha
lods
repz
jecxz
push
jbe
in
imul
xor
sbb
mov
fistpl
mov
mov
sbb
outsl
or
loopne
push
bound
push
inc
call
pusha
push
or
outsb
push
adc
jecxz
mov
mov
jno
or
sbb
div
test
bound
sub
addr16
push
or
mov
add
repnz
push
sbb
sbb
cmc
sti
cmp
xchg
movsl
sbb
xchg
aam
mov
xchg
subl
mov
cmp
dec
lret
cmpsb
and
pusha
movsl
jmp
pushf
stc
or
mov
pop
jb
mov
lcall
sub
pop
xchg
jno
jnp
jbe
mov
idivl
insl
mov
xchg
rclb
mov
addr16
mov
xchg
push
push
repnz
test
push
leave
mov
or
jbe
movsl
cld
ss
and
jo
shlb
or
lahf
mov
and
xchg
sar
lods
jl
mov
mov
pushl
add
mov
cmpl
pop
loope
or
push
test
pushf
fs
or
sub
ss
and
push
and
dec
sbb
popa
imul
imul
in
stos
in
hlt
icebp
fldt
in
lahf
or
xor
adc
popa
mov
lods
cmpl
cmp
xor
out
mov
and
mov
xor
mov
and
pop
cmp
jnp
xor
pop
xor
out
inc
add
mov
cwtl
xor
nop
xchg
fcmovnb
inc
xchg
lcall
mov
shlb
clc
cmp
sub
clc
push
push
mov
mov
arpl
push
cli
out
fwait
or
pop
xor
loopne
into
push
mov
sbb
jmp
arpl
addr16
sub
jl
xchg
inc
cmp
dec
shrb
mov
or
mov
insl
mov
nop
clc
lds
lret
out
pop
test
test
push
sub
test
dec
inc
fimuls
outsb
or
mov
dec
adc
add
fcmovnbe
add
enter
or
or
int
imul
inc
push
inc
pushf
xor
cmp
ds
cmp
pop
fstpt
lcall
mov
ljmp
fisttps
push
push
rclb
sub
mov
jae
pop
sti
inc
adc
outsb
and
pop
inc
aam
fldcw
mov
setg
cmp
adc
mov
stos
sub
mov
dec
inc
fldcw
or
aaa
mov
push
mov
aas
cld
loop
jl
sbbb
xchg
mov
stc
mov
sbb
push
test
leave
into
test
adcl
dec
into
pop
sbb
pop
cld
mov
arpl
cltd
add
push
sub
cmpb
mov
jmp
mov
adc
jg
push
adc
sti
cmp
out
dec
dec
lcall
cld
aad
lods
xor
imul
push
push
pop
cmp
mov
mov
in
push
pop
ljmp
das
mov
stc
mov
push
stos
add
pop
mov
repz
inc
push
jns
xor
add
ret
aad
sub
jge
bound
jb
fcoms
mov
xlat
adc
pop
xchg
aas
jnp
into
jae
ret
cld
test
pop
push
sbbl
lret
cltd
dec
fucomi
decb
pop
ja
push
call
adc
shrl
sbbl
dec
or
bound
sbb
jb
mov
push
inc
pop
shrb
popf
aaa
scas
testl
icebp
mov
sub
pushf
jo
add
and
mov
outsl
lret
jmp
sahf
xchg
test
aas
mov
outsb
pop
pusha
push
ret
xor
popa
mov
psrad
sub
lods
lret
je
rcll
shl
jl
xchg
stc
jb
sub
push
and
pop
test
sub
test
xchg
orb
mov
mov
xchg
adc
sbb
pop
cmpsb
mov
jle
push
mov
rcll
xchg
mov
scas
int
push
fs
in
dec
loopne
loop
lea
repnz
xor
jecxz
dec
add
in
mov
lods
cld
and
sbb
loopne
sti
pop
bound
mov
mov
ljmp
testb
dec
jno
jns
clc
xchg
inc
cli
sbb
hlt
dec
push
mov
xlat
out
cli
xor
mov
xacquire
mov
push
out
xor
pop
insb
push
iret
cs
dec
push
sahf
mov
xchg
ret
test
dec
test
cld
jae
cmp
or
mov
push
stos
and
ljmp
aad
cmp
js
loope
inc
daa
stos
mov
pop
fadds
ds
scas
sub
movsb
jo
pop
mov
xchg
nop
popl
idiv
lret
insl
ret
out
xor
or
push
adc
jl
mov
arpl
imul
jmp
jl
cld
testl
enter
aad
outsl
adc
push
movsl
cmp
inc
inc
xlat
arpl
in
leave
std
pop
cwtl
scas
mov
js
mov
and
dec
and
adc
aam
ja
mov
push
inc
fsubl
xchg
aaa
outsb
sar
fsubr
pop
jno
mov
mov
push
stos
dec
push
ficomps
push
adcb
and
pushl
mov
xlat
sub
scas
mov
das
subb
cmp
addr16
adc
repz
xchg
push
xchg
and
pop
lods
jge
pusha
xor
mov
push
xchg
out
cwtl
test
xchg
xor
rclb
mov
dec
sub
sub
inc
push
shr
pusha
push
jb
mov
adc
inc
cltd
jmp
je
femms
sub
movsb
push
fdivl
push
out
inc
xor
dec
clc
jne
lods
mov
enter
jg
pop
adc
dec
sbbb
aas
ficompl
or
lret
outsb
dec
rorl
jno
and
pop
aaa
inc
gs
lret
jns
roll
and
sbb
pop
lret
fcoms
mov
mov
js
adc
xlat
mull
xlat
jle
insb
mov
lock
xchg
inc
int
mov
fcoms
push
adc
int
scas
cmc
xchg
das
inc
nop
je
cmp
inc
jge
xchg
dec
jb
sahf
adc
dec
xor
inc
addr16
mov
loopne
iret
pop
aaa
scas
mov
rorl
adc
aas
jmp
fwait
push
mov
adc
inc
in
ret
repz
rorb
and
lds
sahf
jnp
adc
in
jb
jmp
in
jb
lret
mov
or
pop
cmovae
mov
fisubrl
push
mov
mov
iret
jl
fmul
out
test
sahf
adc
outsb
pop
mov
rcrb
dec
lods
dec
daa
sbb
ds
or
pop
or
cmp
mov
das
mov
inc
jge
fsts
sbb
push
mov
outsl
or
daa
inc
jnp
ds
fiaddl
push
mov
sub
pop
or
push
cmpsb
pop
fs
cmpl
lret
sub
jbe
cmp
mov
mov
xchg
lock
daa
nop
lock
sbb
scas
ret
test
xor
lret
in
fdivp
inc
push
sti
inc
mov
mov
mov
clc
mov
mov
xchg
enter
dec
cmpsb
sbb
arpl
mov
or
sub
fmuls
ret
out
outsl
add
or
inc
mov
stos
ficomps
cmpsb
in
loopne
daa
xchg
inc
jns
push
leave
jb
fimull
and
mov
adcl
cli
sti
push
mov
ss
pop
push
mov
addl
xchg
mov
jmp
mov
sub
inc
jmp
popa
jae
test
and
cld
inc
cld
loope
pop
or
jbe
dec
push
mov
cmp
or
lea
or
adcb
ret
loopne
out
mov
adc
inc
pop
js
mov
sarl
mov
add
mov
push
lea
and
in
sbbl
xchg
and
dec
not
lret
push
inc
adc
xchg
mov
push
lret
addr16
jns
stos
lret
pusha
lea
subl
shll
hlt
inc
ljmp
cmp
dec
imul
inc
dec
pop
and
or
rorb
dec
imul
fwait
ffree
hlt
add
addr16
cmpb
pop
ret
inc
mov
mov
ja
mov
lret
and
sub
or
inc
out
cmp
call
or
pusha
fstl
out
dec
into
push
jnp
pop
jge
out
mov
jne
bswap
aaa
push
lock
sub
sub
icebp
sub
rorl
xor
aam
xchg
pop
jbe
out
push
sub
andl
xchg
test
mov
imul
xchg
jmp
jle
inc
bound
test
fmuls
lds
jno
lods
das
dec
aas
jne
add
out
rcrb
xor
bound
insb
popa
sbb
wrmsr
fisttps
das
rclb
fsts
mov
pop
fldenv
mov
lret
andl
mov
mov
push
fcoml
data16
loope
sbb
mov
icebp
or
cmp
aas
inc
sti
aas
adc
mov
inc
adc
bound
inc
dec
adc
leave
mov
mov
ficomps
or
repnz
popf
bound
test
in
sbb
je
pop
or
inc
xchg
pushf
test
cmpb
addr16
testb
fcmovnu
in
scas
mov
inc
insb
daa
cmpl
pop
pop
push
jle
dec
xchg
push
fists
loopne
fwait
adc
popf
fists
fdivl
sub
xlat
push
test
inc
push
cmp
cmp
jno
and
in
xchg
xor
pop
loopne
xchg
test
cmp
jnp
sbb
sub
stos
iret
les
cmc
push
scas
pop
gs
push
pop
mov
dec
sbb
pop
cmp
xchg
ret
sbb
fsts
mov
out
mov
mov
push
das
repnz
jb
add
mov
sbb
xor
ret
xchg
iret
andb
cmc
movsb
pop
dec
sub
les
enter
lea
adc
mov
cmp
jge
jbe
shll
sbb
mov
pop
add
lret
jns
scas
inc
xchg
pop
or
js
xor
mul
scas
mov
push
jnp
std
test
inc
pop
sbb
add
push
nop
xor
pop
cltd
mov
mov
xchg
imulb
and
sbb
mov
cs
mov
lods
sbb
xchg
stc
add
add
inc
push
mov
movsl
imul
pop
outsb
mov
ss
add
icebp
mov
pop
mov
cmp
cs
mov
push
jge
pop
fiaddl
je
addr16
sti
outsl
cld
mov
mov
sbb
xchg
adc
lock
int3
adc
or
adc
sub
fdivs
push
stos
and
and
dec
ljmp
int3
mov
and
dec
mov
push
daa
sbb
dec
ss
xor
shl
add
push
aas
div
mov
out
testb
jge
out
jno
pushf
xchg
pop
arpl
mov
outsl
pushf
pop
lcall
outsl
or
dec
loope
adc
dec
sbb
loop
adc
mov
inc
outsb
pop
sbb
sbb
cli
sub
in
xchg
jmp
addr16
enter
xchg
push
aad
and
es
lock
inc
imul
popf
fidivrs
and
insl
cmp
cmc
adc
mov
data16
pusha
mov
push
sbb
in
cmp
jmp
xchg
pusha
pushl
sbb
je
rorl
fldenv
inc
scas
fcomps
add
gs
enter
pop
ljmp
dec
aas
xor
xchg
jge
push
dec
repnz
add
pushf
jo
xchg
lahf
leave
adc
push
inc
mov
mov
sub
cli
cmp
lahf
push
xor
add
ret
pusha
mov
lea
out
lcall
xor
sbb
or
mov
adc
popa
cmp
sahf
pop
jne
lods
inc
fstps
fisubs
and
sub
sbb
pop
add
add
in
aaa
leave
adc
and
xor
dec
jge
push
shl
gs
pop
cmc
mov
cld
add
outsl
inc
and
fidivl
push
mov
out
repz
stos
xchg
andl
out
push
xor
or
test
xor
lea
add
in
add
push
ljmp
add
pop
daa
outsl
fwait
adc
adc
fiadds
jge
aaa
popf
adc
outsb
sub
push
pop
sarb
or
fistpll
cmpsl
add
dec
je
xchg
rcrl
sti
js
pop
inc
cmp
and
jl
xchg
mov
das
xchg
dec
mov
sub
jmp
pushf
popa
cmp
les
xor
push
movsl
imul
inc
dec
int
out
cltd
pop
mov
notl
inc
cmp
mov
fmull
xchg
int3
les
xor
inc
mov
push
scas
pop
leave
lods
lods
xchg
push
mov
jbe
loopne
xchg
push
shlb
out
lret
mov
popa
mov
mov
add
xor
add
adc
lods
in
loopne
in
cmpsl
or
push
xchg
and
imul
lcall
push
in
adc
daa
or
dec
ffreep
popa
in
sarb
inc
push
push
test
sub
pop
lcall
iret
insb
xor
aam
fidivl
stos
inc
test
jb
negb
pusha
inc
adc
out
push
add
sbb
xchg
mov
cmc
push
arpl
mov
xor
mov
or
sbb
jbe
imul
imulb
lret
inc
movsb
inc
frstor
fdivrs
insl
sbb
dec
mov
inc
ja
int
imul
xor
bound
xchg
xchg
cmpsl
add
sbb
repz
ds
addr16
sub
push
mov
rcrb
push
adc
sub
dec
addl
lcall
sarl
dec
repnz
push
adc
or
cmp
xlat
sbb
dec
adc
or
cmpl
fisubrs
xor
outsb
adc
loopne
mov
and
ds
or
stc
test
cli
int3
cmp
add
insb
aam
add
fimull
pop
or
sarb
cli
push
adc
jmp
sub
cmp
loope
pop
jecxz
xor
adc
call
jmp
ret
mov
inc
mov
movsl
in
xchg
xlat
rcrb
lcall
test
in
lahf
push
fidivrs
push
fstpt
xchg
jae
mov
inc
frstor
push
iret
cmpsb
sub
xor
int3
popa
and
clc
mov
push
pop
jns
jne
cld
insb
adc
ja
jo
rcrl
xchg
and
movsb
scas
insl
sbb
push
icebp
bound
out
movl
cwtl
test
mov
inc
adc
pop
enter
cmp
pop
dec
rdtsc
xor
or
xchg
xchg
out
arpl
lahf
gs
repz
push
xor
add
mov
insl
pushf
std
pop
xlat
push
insb
push
add
xchg
mov
mov
push
sbb
sbb
add
jecxz
add
dec
decl
aas
cmpsl
gs
push
pop
or
pop
xchg
orl
std
into
push
sarl
cld
sub
xor
outsl
fldt
bound
pop
add
inc
daa
out
cmp
nop
sbb
ss
cmpb
pushf
pop
xorl
lret
push
pop
lahf
mov
push
pop
inc
and
es
mov
ds
jbe
imul
aas
adcl
fs
sbb
in
mov
xchg
test
mov
adc
popa
mov
cltd
test
call
push
in
or
pop
fisttpll
sar
mov
sub
test
in
mov
sbb
or
push
dec
or
fisubs
push
push
fs
pusha
xchg
cmc
push
adc
cmp
leave
das
jg
and
rcr
or
daa
pushf
dec
dec
xor
decl
or
pop
int
mov
test
mov
les
mov
fbld
std
adc
std
test
dec
add
push
das
mov
insb
jns
jecxz
fldl
scas
xlat
pop
jecxz
dec
lahf
mov
or
pop
inc
xchg
out
test
je
les
push
ret
scas
mov
adc
pop
jge
mov
bound
xchg
mov
rclb
cmp
xor
mov
xor
test
jae
test
lret
xchg
js
arpl
fcomps
cmpsl
adc
adc
ljmp
out
outsl
sti
scas
loopne
movsb
adc
shl
push
push
jno
mov
aas
aad
jp
pop
or
cmp
xor
fdivr
in
or
js
add
arpl
inc
jno
mov
mov
pop
in
push
mov
insl
jle
jno
adc
push
out
repz
sbb
xchg
lods
or
pop
pop
popa
loope
and
cmp
fisubs
and
xchg
outsb
rcl
test
push
pop
pushf
dec
xor
leave
sub
stc
or
sbb
jp
cmp
push
popf
testb
lds
ss
ss
das
andb
add
and
out
cmp
out
mov
jmp
insb
jp
mov
fsts
pop
bound
inc
scas
fnstenv
mov
pop
or
cltd
mov
fwait
mov
popf
xchg
decb
mov
roll
sti
je
xor
iret
in
mov
das
in
stos
adc
mov
jae
or
and
xlat
jns
lock
dec
js
iret
pop
add
mov
and
fisttpll
pop
movsl
test
dec
stc
data16
cmp
gs
sub
pop
pop
jns,pn
push
in
dec
sub
mov
stc
push
subl
sbbl
and
pop
mov
clc
sti
fcoml
xlat
int3
inc
shrb
inc
jg
xor
in
sub
mov
std
lock
movsl
mov
adc
push
jb
sbbl
and
jo
rcrb
sbb
add
cli
inc
jg
clc
jbe
movsl
mov
stc
stc
mov
notb
repz
inc
stos
inc
jl
inc
pop
cs
dec
outsl
add
push
gs
cmc
push
scas
mov
jecxz
mov
dec
sub
mov
mov
cmp
sete
repz
repz
or
or
repnz
or
cmpb
sti
addr16
les
mov
add
add
mov
pop
mov
mov
push
repnz
and
in
sub
jmp
cmc
sarl
jo
fisubs
adc
cli
into
pop
sub
int
cmp
dec
mov
xor
push
orl
add
mov
ret
insb
adc
jo
fcompl
dec
and
outsl
cmpsl
pand
into
or
in
mov
push
and
push
mov
out
enter
pop
ss
pusha
inc
in
xchg
roll
jle
mov
repnz
es
ljmp
ja
lahf
adc
insl
cmp
dec
lods
or
mov
mov
mov
hlt
test
mov
mov
pusha
in
insb
adc
pop
pop
scas
mov
dec
mov
popa
arpl
iret
push
mov
lods
insb
in
nop
sub
aad
dec
fistpl
xchg
or
inc
mov
out
sbbb
sar
xor
sahf
or
xchg
popf
add
xor
mov
xchg
shll
mov
cltd
jb
ds
mov
jnp
sar
ds
pop
mov
imul
clc
mov
fwait
imul
push
xor
adc
int3
xorb
in
or
andl
ret
pop
mov
jecxz
lea
shll
les
mov
faddl
call
ficoms
cld
out
loope
fstps
mov
or
mov
sub
push
lods
insb
sub
addr16
enter
jo
repnz
mov
mov
ret
mov
inc
add
into
ret
xor
push
cmp
mov
jmp
sbb
out
ja
pop
fcomi
pop
scas
daa
pop
and
push
xor
shrb
push
cmc
inc
pop
test
dec
lea
adc
and
add
sub
lret
add
mov
inc
push
js
into
sub
cmp
pop
jo
mov
shll
jae
mov
pop
mov
add
repnz
jb
add
xorl
xchg
les
push
jp
add
enter
pop
jmp
cmp
jmp
in
mov
or
mov
mov
ds
inc
sub
and
shll
and
sub
int3
push
daa
sub
push
mov
mov
push
adc
inc
sub
cmc
cltd
add
sub
ljmp
sbbl
mov
mov
bound
in
xchg
jb
push
lret
pop
pcmpgtd
pop
cmp
and
enter
cmpsl
jp
jbe,pt
scas
add
mov
pop
mov
add
rcrl
ret
inc
fistpll
pop
cltd
out
mov
inc
adc
push
jl
bound
sub
cmp
or
add
stc
rcrl
mov
mov
and
sahf
xor
inc
jo
test
fldenv
add
aas
stos
mov
and
fucompp
push
roll
fisubs
mov
imul
dec
fstps
subl
stos
adc
mov
sub
testb
sbb
pop
stc
adc
jno
aam
sbbb
ret
es
jnp
ss
xchg
out
push
push
jecxz
jle
repnz
sahf
inc
cmp
or
cmp
je
loope
mov
or
in
aaa
adc
or
in
mov
push
fiaddl
mov
lods
movnti
shrb
jmp
imul
fwait
ret
jns
aas
sti
push
add
outsl
dec
sub
sub
cmp
out
pop
mov
mov
std
stc
cmp
dec
jae
lcall
dec
rcll
mov
push
mov
add
jmp
xor
xchg
add
ss
cmp
pop
mov
stos
lock
or
inc
xchg
xor
jmp
adc
sbb
ja
push
imul
dec
sub
aaa
adc
ret
sarb
fdivrl
mov
sbb
pop
xchg
lret
pop
rcrb
mov
repz
mov
jno
sbb
push
add
sub
xor
adc
mov
cmp
popf
jb
jae
pop
adc
sbb
fstpl
in
mov
push
sub
popaw
mov
shr
cmc
xchg
mov
adcb
aad
pop
int3
xchg
sbb
push
arpl
in
mov
pop
inc
inc
adc
add
adc
cmpsb
push
mov
xchg
inc
mov
cmp
mov
jb
and
loop
fadds
stos
pushf
xchg
int3
dec
inc
les
sub
mov
mov
adcl
mov
repnz
shlb
pop
test
clc
dec
sub
sbb
sub
mov
cmpsb
mov
movsl
mov
out
inc
das
dec
add
and
les
fistpll
inc
jecxz
push
jp
or
call
dec
push
in
pop
xor
sbb
in
int3
add
mov
mov
loopne
das
mov
and
cmp
sbb
leave
and
das
sti
mov
aam
sub
ffreep
sarb
fs
sbb
cltd
pop
mov
mov
repnz
and
sbb
stos
and
mov
xor
clc
adc
xor
call
ret
test
push
jecxz
xchg
dec
dec
xchg
and
pop
nop
lea
inc
imul
pop
mov
xor
syscall
pusha
xor
xchg
and
in
cmp
sbb
loop
mov
mov
xor
iret
xchg
sub
jp
rolb
mov
popa
outsl
inc
and
add
push
and
inc
ja
dec
add
push
iret
lcall
mov
pop
adc
push
jno
push
cli
cmp
test
pop
cmpsl
pushl
adc
daa
cli
bound
or
push
jnp
lods
stos
scas
add
out
jl
xor
adc
out
gs
insl
repnz
adc
xor
cmp
mov
pop
and
jnp
das
fisubrl
xchg
aaa
inc
cld
rcrb
pop
testl
ret
cmpb
inc
fisttps
cmp
cltd
push
lods
sahf
and
mov
mov
and
call
int3
imul
ret
ja
cmpsb
adc
and
mov
add
xchg
repnz
and
out
mov
jge
fldl
std
mov
push
ds
leave
dec
cmp
push
cmc
sbb
add
or
push
xchg
pop
jmp
fmulp
sub
test
cltd
call
inc
test
pop
outsl
push
aaa
adc
gs
sbb
shlb
sbb
cwtl
xor
inc
fwait
imul
addr16
int3
pushl
fs
pop
loop
or
or
mov
or
lcall
adc
lods
outsl
orl
jg
adc
dec
clc
iret
lret
fldt
mov
js
shr
stos
cmp
jo
jnp
in
mov
mov
lea
icebp
inc
dec
xor
push
pop
clc
test
sbb
mov
in
movsl
out
insb
jmp
inc
dec
pop
out
inc
pop
mov
dec
adc
inc
add
ja
xchg
aas
inc
jmp
sub
sub
jle
insb
les
cmp
adc
gs
das
pop
mov
int3
fidivrl
push
rcl
psraw
lret
or
outsl
jl
test
mov
imul
mov
shr
jno
bound
jmp
ja
int
aam
in
sub
cltd
inc
js
jecxz
cli
addr16
jmp
divb
xchg
and
adc
fs
ds
test
push
adc
ds
mov
cltd
out
add
xchg
pop
cmp
add
gs
jmp
lods
pop
call
mov
fwait
jb
scas
mov
inc
inc
mul
notb
mov
pop
push
mov
xchg
pop
pop
sahf
bnd
stos
and
popa
pop
pop
adc
mov
repz
push
dec
adc
mov
sbb
cmp
popa
fucom
dec
add
mov
push
fadds
jg
pop
jae
movsl
jg
test
movsl
sub
dec
aam
nop
mov
cs
jp
push
aas
cmc
call
xchg
leave
xchg
and
mov
pusha
push
mov
sbb
icebp
subb
or
test
insl
pop
cmp
jb
loop
sbb
das
lahf
ret
xor
push
lcall
jg
ljmp
or
orl
mov
mulb
lods
pop
mov
and
lock
sub
or
jmp
xor
push
data16
push
test
cmp
imul
push
out
and
cmpb
js
movsb
int
pop
xchg
fistpll
xor
sbb
lods
sub
pop
mov
xor
and
dec
mov
stc
fmull
cmp
xchg
add
sbb
lock
fsubl
jmp
mov
sub
out
loopne
adc
sbb
rcll
jl
dec
test
cmp
addr16
push
scas
test
cmp
and
cmp
xor
loop
cltd
mov
adc
pushf
imul
in
cli
daa
xchg
mov
inc
xchg
frstor
iret
or
cmc
insl
orb
addr16
mov
int
into
jl
jmp
inc
push
mov
push
in
adc
enter
sub
rolb
xchg
cli
sbb
pop
cmc
sbb
or
sbbb
out
aaa
xor
and
dec
rcl
fdivs
mov
mov
xor
and
fbstp
and
js
inc
loop
add
mov
dec
adc
xor
mov
sbb
jmp
jbe
adc
adc
or
cmpsb
stos
dec
xchg
jno
popa
into
jp
pop
mov
pop
and
popa
adc
sbb
rclb
push
enter
push
jge
cltd
popf
adc
fnstsw
push
shlb
mul
jg
outsb
jae
mov
adc
or
in
add
and
xchg
or
cmp
inc
pop
mov
or
bound
stos
rorb
jge
inc
jo
push
pusha
add
sahf
es
inc
pop
sub
cli
fstpl
adc
lret
xchg
cld
mov
inc
int
push
lcallw
leave
lods
fists
jnp
dec
in
cwtl
jno
div
out
in
cmp
sti
xor
mov
mov
mov
lahf
loopne
cmc
mov
adc
pop
jecxz
fisttpll
mov
and
jl
mov
jns
mov
adc
xchg
out
div
adc
imul
divb
or
fwait
jl
push
repnz
jge
in
add
js
or
js
pop
add
sbb
and
clc
fidivrs
cmpb
ja
xlat
das
push
dec
loop
aas
dec
pushl
mov
push
aaa
jo
jp
jb
adc
sub
sub
cmp
out
rorb
pop
shlb
push
lret
adc
adc
out
aad
push
ja
leave
es
cmp
dec
in
and
mov
jmp
mov
sub
lcall
loop
test
loop
xor
adc
sub
out
test
pop
fists
push
add
imul
push
call
adc
out
xor
cmc
not
cmpsl
int3
push
fwait
ljmp
cmpsw
jecxz
mov
sub
idivb
adc
lcall
in
jo
dec
icebp
pop
movsl
or
sahf
test
adc
testb
mov
adc
xchg
loop
repz
fisttpll
outsl
repnz
xor
sbb
add
daa
insb
xchg
shr
aam
push
scas
movsb
cmp
rcl
and
stos
jmp
cmp
jnp
sub
pop
sarb
rcrb
mov
mov
aam
lcall
fidivrs
jg
jecxz
lcall
mov
int
into
jnp
push
push
lahf
jnp
push
mov
popf
xchg
cmp
dec
push
push
jae
ficoms
mov
and
sub
add
sub
popf
push
cmp
adc
push
mov
cmpsl
pop
mov
pushf
adc
rcll
inc
inc
stc
or
pop
das
enter
stos
out
adc
or
fidivrs
aad
das
insl
stos
jg
lods
ljmp
adc
or
sub
adc
mov
lret
gs
mov
fisttpl
je
lahf
xchg
fnstenv
dec
incb
adc
push
mov
cli
test
orl
adc
aad
pop
cmpsl
fcomip
mov
mov
mov
xchg
push
es
in
xchg
jmp
xor
aaa
xchg
inc
pop
fisubl
mov
push
xchg
mov
lds
pusha
hlt
jp
mov
outsl
xchg
js
rol
xor
fmuls
aam
loopne
jecxz
adc
jo
aas
push
lret
lds
leave
adc
mov
cmp
xchg
sub
pop
cltd
call
mov
cmp
cmp
push
push
xchg
pop
xor
push
fmulp
jg
mov
dec
push
lea
fs
mov
xchg
mov
cmp
adc
xlat
mov
movb
repnz
add
xor
call
adc
mov
fsubl
and
repz
test
pop
sub
and
push
xlat
mov
mov
ficoms
lahf
push
push
aad
mov
in
adc
loopne
jle
jecxz
ret
popf
add
fldt
xchg
jg
ljmp
nop
jg
arpl
dec
lcall
fmuls
lret
es
xchg
cs
push
dec
es
mov
xchg
movsb
stc
fldcw
ds
xor
lea
insb
or
mov
mov
repz
ja
xchg
stos
mov
inc
rolb
add
lds
xchg
ficoms
pop
in
mov
test
in
mov
push
inc
aad
mov
cmpxchg
xchg
sti
clc
mov
cmp
lds
mov
jmp
pop
xor
scas
lods
mov
jo
push
pop
jl
xchg
mov
dec
call
clc
mov
sbb
daa
and
sub
pop
fists
fsts
cltd
hlt
cmp
pop
pop
sbb
mov
xchg
rorl
pop
movsl
jb
jecxz
lods
jge
ret
jmp
or
adcl
and
out
gs
loop
push
je
sbb
xorl
jg
lret
scas
or
int
popa
movsb
adc
mov
pop
jle
insb
xchg
jg
mov
fildl
mov
mov
push
orl
jecxz
sub
pusha
cs
sbb
pushf
jle
xchg
lock
xchg
xor
xor
push
shr
lds
hlt
xor
out
cs
sbb
sti
mov
add
stos
xor
mov
addr16
cmpb
out
mov
push
mov
jns
mov
dec
aaa
pop
or
int
dec
lret
mov
cmp
lods
xor
ror
div
popf
adc
stos
les
andb
imul
test
cld
sbb
and
decb
rorl
test
jb
cs
lods
cs
push
enter
or
fistpll
fmull
bnd
dec
cmp
mov
loop
repnz
and
out
or
aad
mov
out
sub
cmp
js
push
mov
adc
scas
mov
cmpsb
push
es
push
sub
stos
js
sarl
ja
cs
adc
gs
sti
filds
push
dec
pop
adc
mov
movsl
bound
inc
xchg
jmp
mov
nop
sahf
mov
xor
sbb
mov
stos
sti
jne
scas
lods
clc
cmpb
pop
push
inc
cli
loop
mov
jmp
test
es
mov
cld
and
jecxz
pop
inc
int
nop
inc
cmc
jo
lock
fnstenv
sub
and
filds
pop
rorb
lret
xor
push
and
jnp
mov
test
lcall
lret
xchg
or
push
push
jb
std
pushf
std
xchg
dec
xchg
mov
sbb
cmpsb
cmp
xorl
dec
aad
stc
and
pop
push
hlt
and
ja
xlat
jno
lea
xchg
sbb
call
aam
lahf
inc
in
int3
divb
adc
cmp
xchg
xchg
jo
push
imul
and
jno
aas
popa
xchg
xchg
xchg
pop
sti
nop
cmp
movsb
add
xchg
sahf
rorb
int
push
mov
mov
push
cmp
imul
jmp
xchg
rcrb
jo
xor
dec
ja
scas
fs
clc
jmp
lahf
and
out
mov
cld
loope
push
push
outsb
sbb
sbb
fwait
xchg
cmp
push
out
jae
mov
mov
in
lea
xor
adc
fsubrs
fwait
push
add
push
inc
fadds
addr16
push
xorl
call
dec
xor
int3
imul
cmp
arpl
push
movsl
sbb
mov
fisubrl
and
jo
push
es
divl
aad
inc
arpl
test
lods
in
jmp
ds
cld
mov
icebp
pop
pop
xchg
inc
negl
pop
pop
into
jnp
fcmovnu
xor
xchg
shlb
mov
mov
push
in
and
pop
push
pushf
xchg
jo
pusha
mov
pop
daa
mov
cmc
or
xor
cmp
dec
pop
mov
add
mov
pop
jp
scas
mov
dec
lahf
pop
add
xchg
lock
aas
push
daa
sub
mov
lcall
ja
adc
sahf
mov
mov
jnp
push
sub
cltd
leave
mov
sbb
notl
cs
daa
lret
push
mov
scas
push
les
mov
sub
mov
aas
sbb
sub
loopne
addr16
roll
jne
cmp
push
lea
and
jo
xchg
fwait
lcall
pop
mov
push
push
aam
shlb
es
dec
inc
push
mov
mov
or
mov
adcl
je
dec
pusha
and
cmp
pusha
ret
in
cmpsl
mov
dec
jmp
mov
loop
leave
mov
enter
adc
or
cmp
push
dec
xor
loop
aaa
inc
xor
cmp
test
subb
mov
adc
xchg
fs
adc
in
xor
cli
cwtl
cmp
cmpsl
xchg
pop
cmpsl
pop
cmpsl
jp
fsts
mov
rolb
xchg
xor
stc
push
jne
scas
into
ljmp
xchg
and
mov
adc
adc
fildll
imul
inc
xchg
push
cmp
cmpsb
stos
inc
orb
sub
lds
bound
dec
jmp
scas
in
movsb
push
jle
fadds
sti
arpl
fucomip
ds
push
es
jns
in
leave
or
insl
scas
hlt
sbb
push
sbb
lods
adc
fcmovu
sbb
xor
cli
mov
fisubl
in
cmpsb
outsb
and
rcr
pop
fs
std
sbb
xor
push
outsb
test
push
xor
je
push
jecxz
repnz
data16
push
push
subb
into
out
loop
leave
mov
in
rcll
dec
mov
cli
les
adc
push
dec
inc
sahf
push
xchg
test
sub
lret
stos
jnp
inc
lret
jne
xchg
mov
pop
cmp
mov
fwait
pop
mov
insl
imul
or
leave
jecxz
inc
sbb
mov
int3
jg
mov
mov
dec
dec
push
mov
dec
cld
adc
cli
int
sbb
fisubl
adc
or
adc
popf
mov
gs
lret
mov
insl
test
movsl
dec
in
and
dec
scas
xor
and
loopne
pop
lret
aas
mov
inc
popf
in
in
ss
aam
mov
fs
shll
dec
in
or
iret
das
push
pushf
inc
cld
pop
sub
jmp
lret
pusha
push
cld
popf
popa
push
sbb
mov
xor
cmc
cmpl
xor
cmp
cld
dec
lock
xchg
push
mov
mov
inc
adc
and
insl
sahf
mov
push
inc
dec
dec
push
aas
push
fucomi
dec
aam
ds
ret
insb
lcall
mov
aad
or
out
imul
test
fildll
xor
and
cld
mov
sub
dec
repnz
jnp
call
stc
pop
hlt
cmp
xchg
and
js
in
sbb
cmpsb
push
xor
lds
mov
scas
mov
stc
lock
frstor
and
cmc
sbbl
dec
xor
mov
inc
inc
es
int3
call
inc
mov
js
out
cmc
ja
das
insl
and
dec
mov
jl
mov
dec
inc
and
jge
cmp
rorb
cmp
insb
sbb
push
stc
movsl
sub
and
or
mov
sbb
push
mov
icebp
fmuls
rorb
sbb
mov
inc
inc
jl
sub
push
mov
pop
popa
cmp
xor
jbe
and
xchg
insl
daa
mov
pop
mov
pop
addb
cmp
sub
ljmp
cmp
pusha
mov
adcb
cmc
push
push
push
jp
enter
shlb
mov
out
sbb
test
push
in
daa
push
mov
fs
adc
add
pop
shrb
cltd
fisttpll
jae
jae
push
push
cld
js
push
scas
sahf
mov
jns
fstps
ja
pop
xor
sahf
imul
pop
inc
or
xchg
lret
inc
add
movsl
lods
pop
adc
lea
test
push
xchg
leave
int
sahf
imul
andl
sub
cld
mov
cmp
int3
mov
test
cwtl
incl
test
mov
push
call
and
push
sahf
mov
and
cltd
rorl
aad
sub
mov
mov
jbe
ja
inc
inc
push
jp
aaa
add
and
cmp
lret
popa
sbb
xor
dec
in
push
mov
jne
push
fcmovne
pop
mov
dec
imulb
add
add
cmc
loope
jecxz
cmp
cmp
in
in
and
mov
sub
lods
loop
out
test
push
lret
leave
divb
cmpsl
bswap
sbb
sbb
sbb
pop
sarb
jmp
mov
shrl
jns
pop
add
sbb
push
jne
out
xchg
pop
mov
or
fldl
sbb
mov
lds
adcb
ljmp
pop
xor
dec
fwait
gs
lods
mov
mov
xchg
and
add
cmc
decl
lret
mov
clc
and
mov
sub
sti
iret
dec
sub
enter
push
adc
mov
cmp
xor
xchg
jns
ss
in
outsl
lret
and
mov
loope
adc
cmp
bound
pop
xchg
sub
data16
mov
das
adc
and
push
xchg
stc
pextrw
inc
and
mov
int
lahf
out
mov
enter
push
in
mov
pop
rcll
inc
and
jo
cmp
mov
push
das
mov
mov
dec
inc
jo
or
sub
inc
push
mov
leave
add
and
ret
mov
sbb
out
push
add
daa
inc
rcrb
xchg
aad
ficoml
test
mov
subb
sbb
add
jle
bound
leave
or
std
jns
pushf
xchg
xor
fwait
push
sti
mov
sbb
fwait
lods
arpl
push
jne
jmpw
or
scas
arpl
lahf
add
test
jmp
adc
push
or
mov
xor
cld
sbb
enter
or
mov
pop
test
jmp
inc
mov
getsec
adc
and
insb
jl
and
sti
psrlq
add
pop
sbbl
dec
lcall
popa
cmpsl
or
imul
xchg
mov
stc
pop
fldl
test
mov
dec
xchg
or
sub
repz
insb
fisubrl
dec
stc
lret
mov
xor
testl
mov
pop
ds
mov
push
push
js
xor
mov
dec
mov
mov
cwtl
lcall
cmp
imul
jmp
in
jle
cmpsb
ret
punpckldq
test
mov
test
pop
call
in
jnp
xor
xchg
push
dec
rorl
push
dec
jge
xor
add
insb
nop
cmp
push
sbb
lods
mov
push
cwtl
cmpsb
jae
ret
mov
xor
sub
dec
icebp
xchg
push
data16
dec
add
or
ss
xchg
stos
imul
int3
cmp
mov
scas
or
adc
test
cmc
scas
divb
out
sub
inc
adc
xchg
cld
mov
jns
push
jecxz
mov
mull
add
pop
mov
inc
pop
inc
mov
cmpb
or
and
adc
daa
xor
lods
mov
imul
std
iret
jmp
mov
xchg
mov
aas
pop
pop
add
cltd
pop
and
jns
int3
inc
shr
loope
jb
mov
in
lods
jp
scas
pop
fcomps
aaa
and
ljmp
shll
or
jecxz
popf
adc
fs
test
les
mov
sub
mov
aad
stc
lret
mov
add
xlat
aaa
lret
ud0
sbb
jo
push
or
loop
pop
mov
or
jp
sarl
jge
push
add
dec
pop
dec
jae
ds
add
sti
mov
inc
popf
push
dec
mov
cld
outsb
sbbb
ljmp
sbb
or
and
data16
into
mov
inc
pop
inc
outsl
in
lahf
push
les
pop
mov
and
out
je
sbb
scas
mov
sub
xchg
xor
data16
jnp
jae
imul
popa
add
or
jl
sbb
jmp
popf
addl
fninit
notl
sub
addl
aad
ficomps
popf
iret
xchg
adc
call
outsb
add
inc
cwtl
xchg
or
int
dec
sbb
pushf
lcall
sbb
xchg
mov
xchg
add
mov
test
push
lds
lock
jo
bound
fstpl
lods
pop
lock
xchg
and
xchg
mov
scas
jmp
jns
xlat
mov
lret
pop
aam
rorb
shl
imul
in
mov
add
jge
jne
jne
xchg
in
stos
pop
mov
int3
pushf
loope
xor
ret
add
int
cmp
and
popa
imul
mov
lock
out
test
pop
pop
outsl
adc
loope
aaa
in
in
xchg
jns
mov
xchg
inc
adcl
decb
add
jae
pop
xchg
jl
jbe
jae
cltd
cs
ret
xor
push
out
or
lods
aad
inc
xchg
and
pop
scas
push
sub
sbb
sbb
dec
dec
repnz
xor
adc
fdivs
inc
push
mov
jo
addb
inc
and
adc
sbb
pop
sub
scas
jbe
xchg
lret
pop
pop
sbb
mov
lock
lods
adc
cli
lret
mov
icebp
inc
aas
fidivrl
and
scas
add
xlat
pop
push
mov
ret
xor
imul
mov
jo
add
ljmp
loop
rolb
enter
sub
sub
push
jmp
arpl
fisubs
xor
int
mov
or
xor
pop
std
das
xchg
fst
mov
into
or
dec
in
loop
adc
jae
in
scas
call
shrb
jne
pushf
push
mov
or
push
pop
and
idivl
inc
lock
mov
cli
and
cmp
clc
sahf
lahf
fnstenv
sbb
popf
lahf
mov
lods
dec
dec
and
insl
mov
addr16
sub
les
adc
imul
fsubrs
adc
jmp
ja
mov
data16
mov
add
inc
cmpsb
mov
inc
mov
fstpl
cmpb
pop
or
dec
mov
cmc
fdivrl
jmp
shrb
pop
xor
mov
pusha
hlt
shlb
ret
inc
fcomps
sbbb
and
push
clc
je
mov
int3
push
aas
xor
sub
mov
fldenv
xor
mov
mov
inc
dec
push
jecxz
fisubs
jnp
xor
adc
negl
xor
dec
mov
outsb
mov
rorb
cmpsl
test
jns
int3
pop
sarl
int
inc
out
add
pop
and
mov
add
jns
nop
mov
icebp
movsl
mov
js
sub
sahf
cmp
rcl
jl
ret
mov
jge
test
fmul
push
sti
jl
shll
fnsave
iret
daa
xchg
out
cld
sub
ja
xor
jmp
lret
stos
pop
add
xlat
adc
xchg
xchg
xchg
sbb
sub
sub
inc
xchg
shrl
mov
hlt
or
xchg
aas
xchg
subb
aas
dec
xchg
dec
fnstenv
fsubrs
sti
xorb
xchg
xor
in
rcl
push
mov
sbb
scas
cs
push
testl
testl
mov
lods
es
xchg
mov
add
inc
dec
inc
mov
xchg
sub
push
mov
add
or
rcrb
dec
xor
in
js
xor
cmp
mov
iret
scas
jl
mov
mov
movsl
cmp
roll
inc
test
and
rol
ja
fsub
push
add
je
fidivs
ret
pop
ret
movntps
les
or
cmp
pop
insl
data16
pop
enter
mov
pop
mov
sub
pop
mov
xor
sbbb
add
jg
shlb
mov
aad
push
and
pusha
cmp
shrl
mov
xorl
cmpsb
cmc
jmp
and
mov
test
pop
insl
jecxz
int
andl
mov
jbe
mov
jp
push
mov
js
lcall
push
sub
ds
aaa
divb
int3
enter
push
pop
fcmovb
imul
sub
cwtl
push
pop
inc
notl
jno
aam
mov
pop
sub
ja
movl
ret
in
outsl
jecxz
mov
sbb
ret
pop
outsb
cmp
outsb
repz
jb
scas
ret
sbb
sbb
adc
cmp
arpl
mov
mov
lret
sub
int
dec
imul
iret
inc
aam
cwtl
addl
cmp
inc
cmp
les
std
movb
jecxz
icebp
in
repnz
dec
fwait
test
mov
push
in
mov
inc
and
or
and
sub
pushf
adc
mov
and
imulb
lret
cmp
fistpll
scas
fistps
nop
scas
inc
dec
pop
sub
outsl
cmpb
fnstenv
sbb
daa
jo
repz
jae,pt
jo
out
adc
mov
mov
test
push
or
cmp
jb
stc
rorb
mov
pop
arpl
jg
cmp
ja
inc
pop
add
mov
inc
dec
adc
stos
stos
adc
push
imul
xlat
or
in
insb
xorb
std
jae
dec
lods
lock
or
int3
mov
testl
lds
mov
mov
add
mov
cld
arpl
mov
xchg
inc
popf
nopl
sti
jnp
push
loopne
dec
bound
cmp
inc
cmpsl
fwait
in
sbb
sub
ss
adc
jns
loop
push
jecxz
cmpsl
faddl
jae
pop
in
jae
sub
lea
ja
adc
mov
jbe
push
bound
push
and
jmp
ljmp
inc
xor
add
scas
pop
test
mov
popf
ffree
imul
sar
cmp
pop
lahf
inc
cs
fwait
cmp
loopne
cld
sbb
xor
stos
push
movsb
dec
xlat
cmp
fcomps
sbb
xor
in
jb
xchg
imul
int3
mov
and
dec
pop
cmp
adc
rcll
xor
push
add
lock
dec
or
mov
nop
sub
fistps
popf
fwait
aaa
lock
dec
in
add
dec
rcrl
popf
xor
xchg
adc
xchg
shlb
insl
insl
repnz
in
mov
imul
test
enter
popa
pop
mov
sub
or
jp
cmp
pop
cmp
inc
dec
mov
xor
imul
fistps
lods
lahf
clc
xor
les
sbbb
mov
xchg
or
add
push
fidivs
and
mov
cwtl
push
mov
xchg
fidivrs
daa
fcompl
sub
pop
mov
repz
fcmovne
into
arpl
repz
es
add
je
into
mov
push
movsl
ret
cwtl
fs
imul
in
mov
stc
mov
mov
cmp
insb
ret
add
sbb
ficoms
and
imul
sti
fwait
add
sbb
clc
mov
mov
imul
adc
mov
cmp
sbb
or
cmp
and
or
loop
jge
aam
xor
aaa
sub
sub
push
push
cmp
nop
cli
ret
inc
repz
repz
rcr
data16
mov
jecxz
adcl
dec
or
push
mov
cmpl
pop
scas
jp
inc
xchg
clc
idivb
popf
mov
arpl
cmp
and
mov
mov
cltd
fstpt
in
xchg
jne
shlb
ret
xlat
cmp
push
ljmp
imul
fnstenv
xchg
in
mov
xor
mov
jns
jl
adc
data16
pop
mov
lahf
cmp
in
cmpsb
outsb
lea
pushf
add
sbb
sbb
aad
outsb
enter
in
loop
outsb
aas
xchg
addr16
or
mov
or
idivl
xor
and
sub
int
jns
dec
sahf
add
lock
ljmp
pop
push
icebp
lods
int3
sbb
xchg
call
shr
mov
imul
pusha
and
testl
pop
jmp
lock
dec
aas
adc
or
sbb
sub
dec
pop
test
imul
add
data16
push
push
push
pop
insl
iret
inc
cmp
rclb
xchg
int
decb
jmp
addr16
mov
nop
iret
xchg
arpl
lret
adc
test
aad
sbb
mov
dec
adc
or
jp
add
idivl
loopne
mov
scas
cmp
jle
push
lods
shll
pop
and
pop
push
notb
aad
mov
pop
loopne
dec
push
movsb
in
add
mov
test
mov
jb
xorl
cmpsb
inc
dec
mov
test
xchg
mov
push
xor
pushf
adc
dec
or
lods
xor
subl
lahf
mov
mov
push
push
xlat
lahf
enter
jb
xchg
fisttps
push
sbb
jp
shrb
sub
mov
dec
lahf
push
pusha
aaa
insl
out
xor
ds
insb
and
fimull
mov
pop
repz
ror
sub
lock
int3
testl
bound
jge
push
stc
nop
lret
roll
cmp
ljmp
pop
fcmovnu
jl
outsl
cli
cmp
sahf
push
mov
repnz
or
jle
les
cmp
mov
gs
xor
pop
jne
les
rorl
jle
inc
xor
stos
mov
and
fimuls
aad
xchg
adc
mov
mov
clc
fnstcw
aam
jbe
scas
cmp
pop
test
lret
pop
addr16
and
push
int3
aaa
sub
ss
nop
push
pop
cld
adc
mov
xchg
and
mov
sub
jne
orb
repnz
dec
fisubrl
cltd
fldenv
inc
xchg
dec
pop
dec
and
pop
mov
dec
ljmp
push
push
jl
cmp
je
jge
popa
pop
lcall
fs
inc
js
aas
insl
pop
mov
andl
dec
stc
bnd
inc
jmp
push
bswap
scas
xor
idivb
add
mov
push
in
in
call
das
icebp
pop
popf
insl
push
jb
cld
pop
sti
mov
cmp
rol
repz
clc
popf
pop
jb
or
xchg
aaa
inc
flds
push
adc
add
rcl
cmp
mov
cmc
push
push
iret
mov
cmc
fldenv
repz
push
shl
xchg
iret
notl
lock
push
pop
je
jnp
xor
addr16
mov
aad
push
int3
test
ja
dec
icebp
fstpl
lds
lahf
push
lods
or
sub
sahf
pop
dec
dec
lcall
push
scas
shr
pop
inc
mov
pop
mov
in
repz
sahf
ds
mov
push
mov
push
push
fldpi
sub
insl
sub
lret
xor
loopne
movsl
lret
mov
inc
mov
push
addr16
push
and
inc
outsb
cmpsb
jg
xor
scas
jbe
mov
int
fldl
je
subb
nop
sbb
mov
in
insl
adc
cmp
int
mov
stos
xor
or
jne
xchg
imul
push
pop
push
insb
add
lret
fwait
dec
popf
cmp
sbb
adcb
cmpsl
leave
mov
lock
enter
popa
xchg
or
xorb
test
xchg
in
or
mov
mov
push
inc
in
dec
into
dec
lds
into
lret
mov
outsb
adc
add
push
cltd
sarl
ja
push
sub
and
dec
pop
sbb
sub
cmp
and
out
in
cli
mov
rorl
mov
inc
jmp
mov
pop
or
clc
test
pop
stos
subl
mov
pop
mov
daa
popf
enter
in
and
mov
jp
mov
mov
lock
pushf
movsl
insl
arpl
ja
push
iret
addr16
mov
inc
xchg
or
jp
inc
sub
mov
jae
xlat
push
sub
loop
dec
test
in
xchg
dec
shrb
adc
push
insb
push
mov
lcall
mov
push
pop
shll
mov
aad
mov
dec
and
add
xchg
loop
orl
ss
mov
sbbl
xor
push
mov
in
dec
aas
lods
dec
scas
jp
inc
xchg
test
cmp
adc
xlat
in
in
ljmp
nop
out
fldlg2
jbe
lods
add
aaa
inc
push
shll
sbb
outsl
sti
je
out
mov
lea
cmp
popf
mov
mov
gs
adc
xchg
pushf
inc
out
mov
pop
rcl
fbstp
popa
dec
xchg
or
movsb
adc
fimull
dec
aam
lds
push
pop
sbb
imul
jecxz
enter
bnd
cmp
xchg
sub
fucomip
pusha
ljmp
add
push
push
out
adc
out
in
daa
sub
fwait
sub
pop
test
repnz
popf
sbb
push
cs
push
mov
cmc
cltd
adc
popa
in
xchg
or
jecxz
jl
dec
aam
imul
mov
pop
xchg
incb
or
pop
and
cwtl
mov
rcll
cld
mov
push
push
mov
adc
mov
into
inc
dec
fstpt
popf
mov
fbld
add
inc
push
dec
jge
jae
mov
mov
shl
lea
push
sbb
xchg
imul
jnp
push
daa
mov
jp
sub
cmp
add
ret
cltd
inc
imul
aad
or
scas
jmp
pushf
mov
or
cwtl
imul
bound
xchg
mov
inc
and
push
cmp
xchg
adc
sbb
loop
add
sbb
add
push
mov
roll
fcoml
xchg
pop
or
sbb
fistpll
in
stc
insb
jb
loop
scas
scas
push
das
sti
xor
fwait
or
fwait
stos
inc
jns
adc
mov
mov
lock
in
mov
sbb
outsl
mov
pop
shll
int
cmp
mov
shrb
ret
cmp
loope
loopne
push
je
test
adcb
mov
mov
outsl
inc
insb
mov
mov
cmpsl
gs
sub
push
arpl
pop
lods
or
inc
fidivl
pop
mov
mov
mov
shl
movsl
repnz
push
xchg
pop
pshufw
or
xorb
js
adc
sbb
mov
inc
or
mov
sub
adc
pusha
out
and
fldcw
js
adc
xchg
out
add
adc
shll
xchg
adc
fsubrs
lcall
and
ss
outsb
ret
ret
mov
jge
adc
push
xchg
nop
xor
inc
shl
push
pushl
mov
nop
imul
ds
or
jbe
js
leave
push
test
arpl
jl
add
int
mov
sbb
sti
xor
inc
loope
insl
push
test
outsb
xchg
jecxz
pop
or
fdecstp
fnstsw
mov
push
jo
repz
lock
inc
jae
add
popf
xchg
add
rcl
filds
adc
mov
addr16
pusha
sahf
bound
and
cmpsb
mov
pop
mov
fcomps
push
pop
mov
jo
call
call
or
rcr
cmpsb
adc
sub
pop
frstor
out
fldcw
dec
insb
rol
insl
and
push
xchg
xor
out
filds
cli
pop
or
xor
cmp
mov
push
cmpsl
add
push
inc
cmp
fwait
andnps
fldcw
aas
std
xlat
std
dec
gs
bt
jne
add
xchg
sbb
pop
dec
sub
and
sub
cltd
in
mov
ret
pushf
sub
das
mov
test
out
in
pop
dec
pop
mov
mull
dec
int3
xlat
pop
iret
xchg
pop
outsb
xlat
fdivrl
pop
dec
scas
fnstcw
add
sbb
jbe
std
pop
jno
jns
adc
mov
mov
dec
sbb
fsubl
cmp
icebp
add
pop
outsl
in
and
sbb
std
call
stos
mov
sbb
jl
sbb
insl
daa
xor
mov
lcall
outsb
cltd
cld
sub
popa
jo
pop
lret
cli
jge
mov
pop
mov
ret
sub
dec
repz
and
ss
push
dec
or
cmp
mov
xchg
pop
mov
push
jne
mov
cmp
aas
pop
hlt
adc
js
add
add
dec
push
pop
inc
mov
je
xor
cmp
mov
movsb
mov
mov
dec
ret
insb
sti
cmp
add
rcrl
pop
add
das
ret
jle
fadds
inc
xor
aad
add
orb
and
pushf
test
outsl
fwait
repz
add
cmp
pop
aad
jb,pn
sub
imul
jns
mov
inc
or
cmp
jecxz
add
clc
fsubs
mov
jecxz
iret
push
rcrl
and
stos
jbe
es
and
and
sti
adc
aad
pop
je
int3
dec
daa
cmpsl
and
push
lret
or
fdivs
push
mov
mov
cmpsl
and
xor
daa
test
cli
cmp
movsl
dec
sbb
push
cmp
xchg
sbb
mov
xor
pop
push
inc
ja
lret
loope
push
ljmp
loope
mov
aad
vhaddps
mov
cmp
mov
mov
lods
xor
cld
mov
mov
loopne
int
xchg
and
cmp
rolb
push
dec
lret
ret
ja
cmp
add
fucom
shl
cld
dec
out
imul
mov
ss
lea
sub
add
pop
push
xor
sti
adc
add
sar
sub
roll
push
mov
mov
mov
inc
rol
aad
subb
cmp
pop
push
adc
sbb
das
sahf
lahf
inc
in
ficompl
sub
xor
dec
jge
mov
pusha
ret
mov
sub
pop
cmp
cwtl
push
stos
sahf
aas
es
mov
and
cmpsl
jg
push
mov
bound
pop
jl
mov
jp
sarl
cld
and
xchg
jnp
lods
das
jno
pusha
inc
shll
fwait
lods
cmpsl
cmc
mov
cld
into
popf
cltd
xor
sub
sbb
inc
and
cmp
add
jmp
mov
imul
jnp
xchg
int3
pop
push
out
mov
mov
lahf
jmp
clc
and
mov
sbb
add
test
ret
inc
push
aad
js
sub
fsts
ret
int3
push
daa
mov
inc
mov
sahf
adc
das
add
and
in
std
mov
outsl
aaa
jnp
push
or
dec
pop
sub
outsl
xchg
loopne
mov
xchg
jb
dec
or
jmp
fwait
and
add
sbb
push
jg
adc
in
pop
push
notl
hlt
jb
xchg
repnz
pop
push
pushf
imul
inc
sub
popa
stos
and
stos
mov
mov
xchg
mov
and
jl
push
xchg
pop
inc
adcl
and
popa
jno
inc
xchg
sbb
and
sbb
in
fwait
dec
das
lods
lock
out
inc
loop
lahf
les
cltd
xor
inc
mov
fdivrl
test
inc
imul
adc
sbbl
push
int
rclb
pop
dec
pop
arpl
mulb
cmp
pop
movsl
or
ret
add
xchg
loop
js
pop
outsb
aaa
movsb
in
xchg
adc
dec
xchg
cwtl
cmp
cmpsl
sti
and
push
inc
push
cmp
sub
jge
pop
addl
outsb
je
xchg
sbb
adc
sub
fidivs
xchg
push
or
adc
clc
push
add
stos
loopne
mov
test
push
adc
cltd
sub
mov
xchg
int3
aas
cwtl
and
fsub
xlat
lea
push
daa
js
jb
xchg
cwtl
imul
inc
inc
push
mov
jmp
mov
out
adc
or
or
mov
jno
cmp
lret
pop
js
pop
mov
mov
sarb
fisubs
lcall
dec
dec
stos
das
mov
test
mov
jo
lahf
mov
call
lret
iret
jp
jo
lods
and
dec
loopne
hlt
and
xor
das
das
aad
sbb
xor
mov
cmpsb
or
arpl
xchg
push
jge
loope
popf
lods
lret
addb
xor
out
or
mov
mov
or
xchg
sub
inc
adc
inc
emms
push
mov
jmp
push
mov
ret
mov
push
arpl
pop
lahf
repnz
cld
cmp
add
jl
enter
dec
jge
adc
pop
pop
push
into
jmp
fisubrs
rcl
xchg
cmp
cmp
xchg
jo
outsl
lcall
jo
das
ret
or
js
jae
shrb
push
push
sub
sbb
aaa
push
mov
repz
mov
clc
lods
xchg
adc
jge
test
jmp
js
nop
cs
pop
lret
out
or
push
push
in
outsl
adc
int3
and
xchg
addr16
dec
mov
movsb
mov
xor
push
scas
cmp
mov
push
loop
xchg
outsl
inc
push
ljmp
mov
mov
test
push
mov
in
xchg
lods
cmc
cmp
sub
cld
pusha
mov
jo
std
xor
icebp
push
repnz
rolb
sub
xor
std
push
sub
dec
out
sub
cmp
lret
daa
faddl
mov
bound
push
enter
inc
xlat
and
mov
mov
push
arpl
xchg
shl
add
xor
cmc
xchg
rcrb
push
ljmp
rolb
jecxz
pusha
sarl
daa
mov
push
dec
pop
in
sub
push
jo
mov
pop
or
push
or
adc
pop
movsl
mov
push
cs
push
adc
in
pop
pop
test
and
outsb
outsl
pop
fistl
in
and
push
flds
xchg
xor
movsl
lods
sub
enter
insb
fwait
lods
call
in
sahf
decb
mov
aaa
xchg
dec
cltd
jmp
push
and
inc
jb
sub
pop
out
pop
subl
fldcw
fsubrl
or
or
xchg
pop
xchg
or
repnz
xchg
rclb
gs
clc
data16
bound
pop
sbb
outsl
sti
add
pop
xor
sub
push
out
cmp
test
push
test
mov
adc
xadd
in
and
xor
cld
xor
inc
add
pop
dec
pop
and
jge
push
xor
mov
mov
adc
aam
and
xchg
loopne
popa
push
rclb
mov
sbb
scas
popa
fsubs
inc
fmull
sub
cmpb
xchg
jb
nop
mov
testl
in
cld
les
fstl
shrl
xor
pop
mov
cwtl
jge
sbb
push
gs
push
out
divb
mov
jns
pop
inc
enter
and
or
arpl
xor
out
lods
lods
mov
icebp
fdivl
inc
xchg
outsl
lock
pop
imul
mov
dec
out
repz
fldt
inc
pop
ds
cld
arpl
and
leave
pop
shlb
insb
sub
mov
pushf
push
outsb
sti
sub
test
fnsave
icebp
mov
ljmp
mov
pop
js
sbb
in
push
add
xchg
xchg
push
aaa
mov
ret
jno
adc
arpl
mov
adc
insl
outsl
push
push
mov
lock
push
push
mov
xchg
in
int
fcomp
ror
mov
jp
fimuls
ret
je
aad
lcall
jg
adc
push
adc
xchg
pop
push
and
push
adc
xchg
lods
pop
adc
xor
stc
jmp
mov
lock
add
inc
adc
aaa
mov
fisubs
mov
adc
ja
mov
jg
add
mov
cmp
pop
outsl
std
inc
or
inc
add
push
popl
push
cmpl
xchg
or
push
xchg
or
and
jp
pop
push
mov
dec
sbb
rcrb
imul
lods
pop
mov
daa
sbb
jb
cmpsb
or
or
pop
pop
and
adc
inc
pop
fistpll
rcll
xchg
iret
mov
push
mov
fisubl
push
daa
cli
add
dec
movsb
cwtl
dec
sbb
and
dec
repz
fnstenv
cmp
faddl
add
dec
iret
push
pop
xchg
lea
sub
pushl
dec
dec
jae
xchg
or
pop
xor
pop
sub
fsts
add
cld
and
roll
dec
sbb
cmp
out
jge
sbb
or
scas
and
mov
in
push
leave
sahf
lahf
xchg
stos
pop
push
bnd
aas
loop
pop
bound
orb
sbb
js
mov
nop
lret
je
mov
mov
pusha
lret
pop
jne
mov
jge
fiaddl
scas
cmp
mov
vpackuswb
fldenv
mov
mov
rclb
into
jle
jmp
in
pop
clc
xorl
xchg
out
lret
pushf
shrl
repnz
sub
push
pop
sbb
jne
movsb
cmp
arpl
mov
mov
push
adc
xor
cli
lea
xchg
push
dec
cmp
cmpsl
loop
pop
adc
or
insl
bound
add
mov
sbb
xchg
cmpsb
test
sbb
and
clc
ja
xchg
jge
hlt
cmc
cmp
pop
dec
in
inc
mov
shll
lret
lret
push
fwait
out
xlat
cltd
mov
repz
ja
or
mov
push
dec
ja
popf
pop
fdivl
or
icebp
and
ja
int
or
test
dec
rcll
fcmovne
aaa
in
push
mov
or
jbe
cmpsl
pop
xchg
std
leave
movsl
je
xchg
sub
icebp
aas
add
sub
out
inc
xchg
and
div
dec
insl
mov
mov
adc
sub
fistpll
sbb
ret
pusha
test
adcb
mov
jg
jo
sbb
sub
mov
adc
adc
dec
cs
mov
mov
movsb
pop
arpl
sbb
mov
adc
cmp
pushf
add
xchg
popa
mov
cmp
sub
into
pop
sbb
les
lahf
fs
mov
cs
pop
add
lods
push
addr16
push
fistps
xor
idivl
imul
popf
aas
ficoms
add
or
inc
scas
inc
test
fldenv
inc
mov
cwtl
outsl
lods
and
mov
cmpsb
adc
mov
sarb
out
jmp
repz
repnz
pop
scas
mov
ja
mov
mov
mov
sub
pop
jae
mov
lea
push
inc
inc
pop
ret
dec
and
xchg
add
sti
cs
shrb
mov
movb
jb
lods
push
imull
fdivp
andl
popa
mov
sub
fsts
out
int3
jmp
js
sbb
pop
dec
add
rclb
out
out
push
xor
xor
xor
xchg
cmc
xchg
xchg
or
paddq
lds
add
push
rolb
jmp
mov
jp
or
in
jp
stc
shrb
stos
mov
loop
and
and
push
sbb
push
lcall
outsb
adc
xchg
or
push
lret
xchg
hlt
pusha
mov
scas
xor
and
fstpl
clc
aam
push
sub
xchg
jne
aaa
jb
add
xchg
push
xor
nop
sub
hlt
dec
jns
pusha
mov
mov
jo
jno
mov
out
lahf
jb
js
cltd
leave
inc
xchg
shrl
jne
pop
and
ljmp
ljmp
cltd
mov
dec
or
xchg
xlat
cmp
jno
mov
sub
push
push
sub
lcall
cld
cmp
or
adc
mov
je
push
das
fdivl
in
test
xor
xchg
mov
pop
enter
mov
fistpl
push
les
pushf
push
adc
jg
gs
xchg
lahf
inc
push
mov
pop
adc
popa
mov
in
add
xchg
imul
cmc
mov
sub
pop
pop
cmp
rclb
jns
lds
aam
adc
std
ror
imul
aad
xchg
loope
aam
in
fwait
das
push
pop
xor
dec
lock
addr16
jl
repnz
icebp
popf
in
pop
mov
inc
or
xor
std
and
or
pop
mov
add
iret
shlb
in
imul
ljmp
mov
dec
lods
popf
push
loop
outsb
cmc
and
pop
cmpsb
xchg
jge
or
addr16
test
stos
add
xor
push
push
aad
sub
shrl
js
xchg
cwtl
fcoms
mov
in
mov
jnp
mov
cmp
adc
mov
dec
and
and
sub
inc
fwait
in
sahf
pusha
mov
outsl
scas
dec
push
xchg
cmp
add
mov
push
adc
cwtl
out
xchg
out
imulb
mov
ficomps
lret
or
sbb
mov
test
mov
rorl
and
icebp
cltd
insl
in
hlt
scas
xor
out
data16
adcl
add
cwtl
fs
mov
cmp
jae
push
dec
mov
stos
dec
fstpl
das
mov
scas
test
cmp
dec
mov
jo
jnp
je
inc
testb
dec
insl
daa
sbb
fmuls
lahf
insl
dec
loopne
in
out
mov
clc
inc
lret
negb
mov
mov
push
cmpsl
shlb
fldl
ljmp
and
lahf
inc
dec
in
daa
or
cmp
scas
fs
and
adc
jl
push
dec
inc
jp
aam
pop
cmpsl
dec
test
xchg
cmc
pop
out
xor
ds
or
rclb
popa
jb
sbb
sbb
mov
cltd
sbb
out
les
push
loop
mov
fiadds
mov
lret
insl
sbb
clc
pop
push
inc
gs
inc
sahf
mov
mov
pop
movsb
stos
insb
shl
lahf
je
sbb
push
outsl
pop
push
jb
int
cmp
fs
sbb
pushf
inc
adc
dec
inc
int3
pop
xorl
xchg
and
rcl
cmp
and
xor
popa
sub
bound
fs
dec
repnz
ljmp
xchg
pop
mov
mov
adcl
lods
nop
xor
inc
aaa
hlt
pushf
sahf
or
shlb
lea
push
fs
or
jne
cwtl
daa
sbbb
int3
pushf
pop
clc
cmc
lock
enter
jmp
jecxz
adc
pop
mov
mov
mov
lock
mov
lock
xorl
or
dec
cmp
cmp
popa
cli
shrb
es
jnp
in
xor
and
mov
faddp
jno
lock
add
clc
dec
cli
out
sbbl
jge
addl
mov
jp
nop
es
scas
jl
dec
aas
nop
js
pusha
iret
adc
les
ficompl
cli
xchg
cmp
movsl
rol
jb
add
jae
mov
xor
mov
sub
jo
xorps
mov
gs
daa
pop
imul
pop
ss
push
jp
loopne
int
mov
outsl
sbb
scas
cs
jno
into
popf
push
pushf
addr16
mov
int
cwtl
cmc
dec
enter
and
inc
stc
int3
xchg
jbe
or
xor
in
sub
adc
test
outsl
inc
iret
xor
je
fisttps
cmp
sar
into
cltd
add
out
cmpb
cltd
imul
sub
lret
jae
popf
adc
stc
insb
inc
or
cmpl
xor
adc
ret
mov
sub
pop
jns
arpl
pop
sbb
loop
cmpsb
xor
and
roll
fidivrs
add
or
test
es
mov
xor
and
xchg
mov
andnps
dec
mov
mov
in
popa
repnz
cmp
xchg
repz
in
mov
mov
sub
inc
mov
daa
mov
mov
dec
outsb
ret
call
scas
mov
xor
or
or
cwtl
test
test
int3
fs
mov
test
sti
ljmp
dec
cmpsb
xchg
jl
cmpsb
sbb
lret
sbb
push
jmp
inc
xchg
mov
hlt
add
ljmp
xchg
sti
jl
ret
push
jge
xor
addr16
xchg
addr16
adc
cmp
jae
into
cmp
jl
scas
iret
sub
xor
popf
test
fcmovb
xchg
jo
adc
iret
xchg
lret
mov
fcmovbe
repnz
ljmp
loope
lea
scas
or
dec
out
xchg
jne
shll
xchg
imul
fisubrs
ja
push
dec
mov
xchg
adc
rcrb
dec
aas
sbbb
insl
and
lret
or
imulb
mov
fwait
test
stc
test
sbb
outsl
aam
fiaddl
loopne
jnp
lcall
jecxz
mov
jg
enter
ljmp
push
inc
arpl
lret
or
cs
lret
and
pop
pop
repnz
movsl
xchg
xchg
jnp
in
xor
sbb
mov
in
push
add
pushf
scas
out
lret
push
out
mov
inc
sbb
inc
mov
je
add
pop
mov
popa
call
test
out
aas
jp
mov
mov
add
leave
rorl
out
loopne
sub
fldcw
into
push
repnz
or
cwtl
sub
outsl
jle
xor
pop
fbld
stc
roll
push
sub
mov
cmc
dec
lods
pop
inc
cmp
cmp
push
mov
fldenv
fsts
add
sbb
dec
mov
xchg
aam
adc
mov
test
add
frstor
imul
mov
mov
xchg
or
mov
inc
call
in
cmp
pop
mov
pop
xchg
outsl
add
mov
call
or
icebp
testb
jnp
cli
mov
cwtl
dec
leave
out
bnd
outsl
stc
fldl
sub
shrl
enter
cmp
inc
orb
mov
insl
cld
adc
xor
in
mov
clc
in
enter
xor
aam
jnp
xor
imul
ffree
jae
pop
push
jb
cmp
aaa
outsb
mov
mov
cmp
movsl
mov
repz
push
pop
outsl
jno
mov
jmp
add
mov
daa
movsl
jno
mov
pop
push
and
sbb
cmp
jo
std
adc
inc
popf
fcomip
xor
sub
sub
ss
jns
adc
push
pop
xchg
js
scas
dec
rol
imul
mov
arpl
sub
push
daa
jmp
mov
loope
jecxz
sub
inc
push
shll
cmp
pop
cs
lret
push
cs
push
adc
ja
stc
pop
sbb
lods
cld
push
rolb
lret
jo
and
xlat
push
mov
out
pop
jae
leave
std
mov
mov
dec
pop
cli
std
push
dec
scas
xchg
in
in
sbb
les
jae
jge
out
outsl
hlt
call
stos
cmpsl
cwtl
adc
cmpb
in
adc
nop
fptan
jb
test
add
movsl
cs
xor
xchg
inc
fdivs
repz
roll
pop
dec
push
inc
sahf
mov
xchg
jbe
ljmp
cwtl
xchg
mov
xchg
sub
insl
jmp
int3
mov
mov
lcall
rorl
sbb
adc
jbe
std
push
bound
stos
mov
test
mov
repnz
sub
push
dec
pop
pop
jge
jmp
and
push
sbb
sbb
insl
mov
aaa
xchg
inc
in
mov
in
adc
or
ret
adc
fidivl
sub
xor
dec
jmp
jge
add
sahf
ret
push
shrl
and
lods
fsubrl
push
inc
sbb
sahf
dec
sbb
xor
ja
inc
pop
loopne
fbld
gs
jl
push
inc
mov
adc
scas
jge
jns
divb
sbb
pop
insl
cmp
je
stos
cmpsb
xchg
roll
adc
rcl
ljmp
add
push
not
push
cmp
lcall
or
pushf
xor
pop
mov
int3
jle
out
mov
and
adc
fstl
pushf
iret
jecxz
stos
and
add
mov
leave
dec
mov
clc
nop
jl
and
fwait
jns
inc
ja
push
fs
repnz
in
pusha
add
mov
test
sub
push
push
shlb
aam
xchg
mov
mov
mov
push
jl
fmull
fildl
mov
jb
add
repnz
xchg
push
pop
sbb
inc
and
jnp
sti
xchg
mov
out
leave
xor
ret
xchg
push
repz
ss
nop
dec
xor
mov
test
in
mov
push
dec
test
cmp
pop
cs
xchg
icebp
cmp
scas
gs
xchg
rcl
out
add
or
int3
sub
roll
aad
lahf
mov
sub
mov
rclb
xchg
pop
movb
pop
pop
scas
stos
cld
sbb
aas
andb
lcall
dec
jle
jecxz
lock
and
push
mov
mov
ror
scas
dec
sub
outsl
testl
nop
push
sbb
jecxz
pop
ss
sub
dec
ds
imul
mov
mov
and
ret
jmp
mull
aaa
sbb
mov
call
popa
jae
fwait
jns
arpl
pusha
in
push
int
cmp
popf
jne
insb
test
mov
mov
loop
push
cmpsl
sub
inc
inc
jle
adc
scas
cmp
cmp
adc
jle
mov
out
lahf
jecxz
flds
lock
sbb
xchg
leave
xor
mov
int
jle
mov
bound
int3
cmp
adc
pop
fldl
xor
fdivrp
inc
scas
andl
movsl
xor
sbb
add
pop
movsl
int
add
pushf
ret
dec
aad
mov
dec
or
push
scas
inc
sub
mov
xor
icebp
adc
rolb
add
sub
and
nop
adc
fstpl
cltd
pcmpgtb
ret
pushf
cmp
dec
adc
cmp
or
loop
xchg
pushf
loop
push
roll
adc
jno
cs
rcrl
add
daa
jl
std
mov
inc
cmc
aaa
test
inc
stos
and
or
xchg
scas
dec
xchg
in
lods
jecxz
das
adc
jns
jne
or
cmc
cltd
xchg
in
mov
lret
cmp
outsl
pushf
and
push
or
into
addr16
sbb
ret
clc
ds
cmc
dec
imul
dec
loop
cs
or
mov
outsb
jbe
call
sub
pop
cmp
fistpll
sti
add
xchg
sub
je
sub
jne
inc
repnz
insb
es
leave
lock
stos
fildll
adc
mov
pushf
sbb
dec
test
mov
ss
cmp
inc
adc
mov
jno
add
jl
or
inc
loopne
jmp
xchg
lods
push
sahf
int
pop
cld
scas
in
clc
orb
adc
adc
fldl
pop
pusha
cmp
cmp
mov
push
mov
std
mov
push
pop
cli
or
in
fisubl
push
dec
loopne
shlb
mov
stos
mov
push
pop
inc
jo
pop
mov
xor
loopne
push
push
lcall
or
fldt
jge
out
sub
int
push
inc
pop
ljmp
jecxz
dec
inc
jg
or
sub
push
inc
inc
sub
jnp
repnz
push
daa
sahf
int3
push
adc
sub
aad
push
fstps
jle
pop
mov
adc
adc
xchg
mov
sub
jb
inc
es
in
mov
push
mov
cmpsl
addb
sbb
pop
mov
jge
out
jo
mov
and
dec
mov
aas
repnz
stos
div
sub
push
fildl
xor
cmpsb
fcoml
or
mov
les
lods
xlat
inc
aam
push
push
xlat
loope
in
sub
js
fidivrl
test
add
out
sub
sub
dec
cltd
mov
and
pop
push
das
pop
push
cmp
clc
xlat
loop
inc
jp,pn
mov
push
jnp
xor
jl
and
mov
pop
outsl
daa
icebp
add
je
fmuls
sahf
into
inc
ret
mov
and
aaa
pop
xor
outsl
cmp
cmc
call
subb
out
and
in
into
dec
pop
int
add
xor
mov
cmpsl
fstpt
push
dec
mulb
mov
int3
rolb
imul
jg
pop
mov
je
jg
std
xor
sub
jmp
daa
cmp
cmp
cmp
dec
dec
lea
sub
out
fisubl
cmp
inc
or
lret
repz
ret
nop
inc
nop
hlt
test
call
pop
js
pop
mov
loopne
cmc
sbb
xchg
mov
mov
mov
stc
inc
repz
imul
movsb
or
fwait
pop
mov
out
push
test
jo
xor
repz
add
sbb
mov
aad
mov
cwtl
sub
fcoms
adcl
jne
sbb
adcl
mov
jl
xchg
ja
cmp
push
clc
sbb
mov
push
mov
fldt
sbb
jl
sub
jb
xor
pushf
push
xlat
adc
mov
jle
or
aad
cmp
sbb
les
fwait
sarl
mov
nop
inc
xor
bound
xchg
enter
xor
aad
out
xor
push
and
sbb
mov
sbb
insb
mov
xlat
pop
fisttpll
pop
shlb
sbb
repz
adcb
mov
push
xchg
fnsave
xor
enter
xchg
addb
rcl
jbe
test
jns
inc
sbbb
insl
loopne
sbb
loope
push
loop
into
or
std
pushf
mov
mov
cmpsb
inc
inc
popf
jo
imul
push
fdivrs
pop
fimuls
mov
pop
or
mov
mov
cmc
stc
pushf
clc
rcll
les
xchg
test
cli
xor
jbe
fidivrl
jne
adcl
push
xchg
popa
out
sub
or
adc
pop
mov
mov
jecxz
imul
jbe
mov
fildl
mov
jge
sbb
cltd
mov
cmp
inc
imul
pop
ficoms
mov
popf
loope
push
jmp
mov
cmpsb
leave
rcrb
fisubrl
mov
dec
in
sub
adc
test
lea
shlb
lret
adcl
cmp
insb
fcmovbe
mov
test
addr16
and
in
shll
ret
and
test
mov
push
std
test
sub
jno
pop
scas
mov
mov
cmp
ss
lret
add
sbb
rolb
ficoms
jo
push
mov
or
test
jne
je
rcll
inc
pop
or
mov
popl
imul
fimull
imul
loop
jbe
mov
sbb
int3
ljmp
rclb
add
inc
xor
andl
and
sbb
or
shlb
jb
adc
out
xchg
mov
int3
mov
mov
lds
iret
push
dec
popf
je
mov
mov
cmpsb
xchg
sub
shlb
adc
inc
sub
push
adc
in
push
test
jnp
pop
pop
cltd
inc
dec
loop
int3
jbe
xchg
mov
inc
xchg
push
pop
dec
rolb
inc
fisubl
mov
mov
dec
test
dec
cld
jl
mov
jo
jecxz
incl
pop
dec
in
cmpsb
pop
inc
js
inc
jb
sbb
pcmpgtb
mov
jnp
add
sti
sbb
fcoml
gs
pop
jns
jle
mov
cmp
cwtl
xor
sub
loopne
sbb
sub
ds
test
push
addr16
add
push
dec
scas
xchg
push
ret
mov
dec
outsb
mov
out
aad
pop
xor
mov
push
dec
dec
pusha
shlb
pop
hlt
mov
outsl
pop
xor
scas
pop
jnp
ljmp
sti
fs
shll
jnp
add
jns
jae
push
add
cmp
repz
nop
mov
dec
and
lds
das
sub
outsb
xor
sbb
insb
sysenter
cmpsl
mov
cmp
movsl
bound
sahf
stc
loope
cmp
outsb
push
and
xor
icebp
dec
imul
inc
xchg
mov
js
mov
daa
jle
mov
xchg
xchg
cmp
ss
dec
jnp
out
xchg
subl
sbb
xchg
dec
and
lods
fldt
add
xchg
jo
fwait
das
add
xor
jno
negb
in
jae
and
ljmp
cmp
push
cmp
mov
push
js
and
enter
lds
ljmp
scas
lcall
out
enter
gs
mov
inc
mov
pop
adc
outsl
xorl
mov
popa
inc
cmp
jne
add
xor
mov
in
fcomps
and
xchg
pop
add
loope
sahf
mov
repnz
add
cmp
xchg
aad
xor
pop
fdivs
outsb
pop
add
cmpsl
and
lahf
call
cwtl
push
ss
test
cmp
pop
int3
mov
mov
leave
pop
dec
jmp
add
mov
outsl
xchg
adcb
jmp
add
in
inc
pop
in
dec
aam
imul
shll
cmpsb
inc
sub
pushf
adc
ljmp
mov
or
cmc
lret
push
std
mov
ret
pop
rcrb
pop
xor
loop
mov
mov
loopne
rclb
xchg
and
cmp
movsb
sbb
out
fists
xchg
mov
mov
lea
aaa
push
inc
xorb
daa
cmc
mov
pop
jns
and
into
call
hlt
lret
xchg
je
adc
pop
pop
cmpsl
outsl
mov
jp
jg
xor
adc
stos
pop
insl
in
dec
cmp
sub
jecxz
stos
xchg
cltd
aad
inc
inc
mov
sub
sbb
push
lea
push
adc
das
mov
push
pop
sub
shrl
fcomps
popa
adc
lock
and
repz
dec
rcrl
shll
inc
fidivl
cltd
ljmp
jbe
and
jp
jnp
rcrl
jbe
pop
mov
add
in
dec
xor
dec
mov
rcl
push
cmp
mov
rcll
xchg
hlt
inc
inc
cmp
fnstcw
push
inc
pop
rcrl
jge
dec
xor
jo
rcrb
test
mov
aas
mov
ja
test
mov
les
cmp
sub
test
fistpl
dec
fchs
fst
sti
push
adcl
jns
add
imul
cmc
jl
fsub
xor
cld
add
add
shlb
and
jno
xor
xchg
dec
add
sub
lock
push
inc
data16
or
fxch
pop
or
inc
mov
lcall
pop
xor
int
jb
fimuls
mov
aam
clc
pop
mov
add
xlat
jns
mov
mov
inc
jmp
jb
pop
icebp
xchg
outsb
lds
repz
in
jl
test
stc
mov
lds
lods
jmp
pop
repnz
rolb
fcoml
mov
loop
sbb
out
int
or
mov
cmp
mov
aad
in
repnz
test
out
movsl
int3
fistl
dec
lods
and
jmp
sbb
pop
lahf
jg
xor
and
sbb
or
sub
mov
xor
stos
push
scas
inc
mov
fisttpll
outsb
sbb
cmpl
das
mov
xchg
mov
xchg
add
xorb
ds
sbb
push
scas
dec
mov
fbstp
add
xchg
jecxz
jle
or
inc
cmp
xchg
sub
dec
std
jo
jp
and
cmp
jmp
mov
loopne
shll
arpl
inc
pop
test
je
jle
sub
sub
add
aaa
jl
aad
mov
insb
pop
mov
cmpsb
adc
mov
or
insl
in
sub
ret
divl
outsb
or
roll
sub
iret
sti
out
sbb
dec
scas
rclb
and
jg
daa
jbe
pop
repnz
add
cmc
mov
incb
mov
dec
cmp
out
fistpll
mov
jae
lods
lret
push
mov
mov
aaa
xchg
nop
dec
pop
mov
xchg
cmpsb
aaa
jne
jns
ss
push
push
pop
into
sbb
adc
mov
mov
sbb
sbbl
sbb
cs
xor
es
sub
or
mov
in
jb
aam
xor
xor
movsl
incl
orb
pop
xor
push
fwait
adc
adc
xor
iret
sub
shrb
cli
jle
cs
xor
enter
inc
cli
cmp
lods
dec
in
mov
loop
lds
aam
add
das
inc
test
mov
jl
lock
sub
out
loop
mov
pop
adc
mov
call
rorb
fists
xchg
mov
or
cwtl
mov
sub
mov
pop
cmp
or
ret
insl
nop
stos
outsb
and
add
pop
cmp
sub
push
push
icebp
push
mov
imul
lea
cli
jne
scas
sbb
gs
mov
shll
imul
cmp
sbb
sub
push
test
clc
hlt
jnp
or
or
xor
fstps
or
and
sbb
sub
mov
push
mov
and
push
jnp
adc
adc
pusha
and
push
jns
aaa
jbe,pn
aaa
dec
or
dec
cmp
lahf
aad
movsb
adc
test
cmpsb
push
jbe
pop
xor
sbb
pop
dec
mov
pop
pop
ret
add
push
xchg
adcl
test
mov
dec
push
es
or
sbb
andb
repnz
pop
push
sar
lret
mov
jg
test
lea
idiv
inc
ljmp
push
or
adc
cmp
roll
jg
push
arpl
fstpl
fbld
mov
xorb
mov
stos
cmpsb
xchg
out
aad
mov
add
lock
ds
pop
mov
in
aam
gs
sub
addr16
insb
jb
mov
imul
mov
pop
mov
push
js
popf
pop
fcmovnu
adc
and
or
pushf
cmp
mov
mov
mov
cmpsl
fidivl
dec
inc
dec
mov
fsubrl
push
mov
pop
or
test
jle
or
aam
dec
stos
cs
enter
xor
pop
popa
and
mov
clc
and
cmp
mov
scas
push
mov
xor
jecxz
push
sti
sub
sub
push
mov
iret
xor
xor
mov
gs
aam
lahf
cmpsl
jno
push
push
jge
hlt
or
or
push
adc
lock
xchg
or
sbb
mov
fnsave
std
push
inc
cmpsl
pop
push
aad
and
sub
cmpsb
mov
lcall
sbb
ret
pop
push
pop
lcall
shl
xor
push
jle
push
into
sub
xor
add
dec
pop
shrl
fcmovnb
mov
int
bound
pop
data16
lea
shr
stos
les
mov
inc
mov
clc
movl
stos
cmp
jecxz
fnstcw
gs
adc
insl
cmp
and
in
dec
iret
enter
mov
cmc
iret
outsl
sbb
xor
lock
aaa
lds
sub
mov
cmc
ret
jl
out
push
insl
sub
nop
subl
push
sub
out
sbb
mov
adc
push
jnp
inc
call
rcl
adc
shl
mov
inc
pop
cmpb
push
ds
cmp
fs
mov
push
sub
push
adc
jmp
inc
dec
jo
stos
sub
pop
stos
mov
and
mov
in
xchg
call
cli
sbb
fwait
xchg
push
sbb
pushf
xchg
jge
xor
add
mov
mov
js
mov
adc
cli
cli
addr16
cmp
cltd
sti
push
iret
jge
imul
arpl
daa
faddl
aaa
push
adc
xor
inc
sub
rclb
call
jge
outsl
lds
or
jb
push
enter
int3
pop
iret
sub
jmp
xchg
stos
xchg
test
lods
hlt
xor
add
fxch
jnp
stc
mov
push
icebp
sbb
push
test
inc
movsb
sbb
out
movsb
insl
and
mov
sub
mov
push
rclb
cmp
sti
dec
pop
jnp
repz
aad
cltd
ficoms
jp
dec
pop
cmp
push
lcall
pusha
push
jae
push
xor
fstpl
jae
xor
and
cld
int3
repnz
in
xchg
imul
out
sub
out
xor
aaa
testl
xchg
movhps
in
fldenv
sub
add
adc
xor
add
sub
fdiv
addl
lods
jl
push
push
and
out
leave
xor
dec
cmp
jo
clc
fdivs
imul
es
std
jae
scas
cmp
inc
movsl
out
mov
cmp
flds
dec
sub
popf
setns
into
xor
sbb
mov
adc
sbb
jo
xchg
push
jg
sbb
cmp
ss
mov
jnp
popa
jns
rclb
jne
cmpsb
call
xor
jne
xor
sti
pusha
repz
jnp
in
test
mov
es
punpcklwd
sahf
loop
push
mov
rcl
jo
mov
lock
mov
dec
negl
mov
mov
xchg
idivb
test
jecxz
sub
dec
mov
mov
in
push
or
mov
insl
fs
testl
in
imul
xor
mov
lds
les
cmp
cmp
push
sbb
movsb
ret
fs
mov
jbe
pop
sti
pop
xchg
pop
int3
add
dec
roll
movsl
sbb
mov
fld
jge
sbb
dec
sbb
dec
in
push
je
cmpsb
cmp
test
fbld
jp
shll
sub
outsl
push
push
cmp
test
repnz
push
adc
mov
ljmp
fcomps
test
sbb
sub
inc
scas
push
dec
mov
mov
cmpsl
popw
push
aaa
das
cmpsb
inc
inc
sub
aaa
fs
hlt
dec
pop
lret
ds
cmp
push
insb
daa
idivl
cmp
in
inc
in
fisubs
xor
in
push
or
icebp
iret
jno
aam
test
ret
loope
in
dec
mov
push
push
adc
sbb
mov
ficoms
pop
push
sarb
fsubrs
arpl
mov
sbb
mov
mov
mov
shrl
fdivrs
adc
jnp
jmp
loop
shl
shll
scas
dec
enter
in
inc
jl
jge
cmp
divl
fs
mov
jecxz
pusha
ds
insl
scas
inc
mov
cmpsl
aam
inc
sub
cmp
test
and
enter
inc
dec
push
or
cs
outsl
aaa
test
dec
divl
cmc
icebp
sub
pop
cmp
xor
orl
jno
pop
jecxz
lret
mov
jge
enter
notb
mov
push
pop
popa
push
jb
or
cmpsl
into
or
fcomi
mov
pop
aas
pop
pop
adc
xchg
cli
or
or
jne
insl
or
jae
shrb
adc
mov
lods
xchg
arpl
and
or
rorl
pusha
add
jl
jg
xor
pop
jns
jns
das
jmp
inc
lahf
xchg
in
test
lods
fmulp
sbb
hlt
scas
cs
je
sbb
xor
aaa
cmp
movsl
in
shlb
adc
cmp
fcoms
in
pop
or
clc
push
mulb
sub
lods
stos
cwtl
add
xor
popf
rcrb
pop
mov
mov
movsb
or
sub
xorb
push
push
call
outsb
loop
dec
sub
lret
jge
in
sbb
ljmp
adc
into
or
adc
jge
jge
jnp
mov
sbb
pop
add
sbb
leave
pop
mov
inc
sbb
sbb
clc
add
add
xor
sti
jmp
mov
lret
sub
and
xor
call
fcompl
movsl
lret
jecxz
adc
sub
lods
dec
add
dec
sbb
mov
les
rcrl
lock
adc
inc
xor
out
cmp
call
cmpsl
dec
out
mov
inc
inc
fistl
mov
hlt
cmp
stos
push
and
fcmovu
mov
sbb
lods
imul
push
pop
hlt
lret
mov
sbbb
mull
ds
xchg
mov
cmp
out
popf
and
jb
sbb
popf
stos
not
rol
jno
rcr
inc
cld
sbb
scas
mov
enter
call
pop
xor
add
dec
or
lcall
ss
mov
jne
or
jbe
fwait
pop
leave
jmp
xchg
fsubp
pop
cwtl
clc
push
ret
sbb
clc
in
lret
sub
mov
mov
cli
push
cwtl
cmc
inc
int3
adc
xchg
jne
pushf
pushf
add
shl
inc
adc
cmp
lods
gs
xor
dec
push
add
lret
add
xchg
pop
push
mov
popa
sub
mov
jae
add
clc
imul
dec
std
pop
inc
sbb
sub
jg
sbb
test
jp
cld
inc
mov
aas
jb
notl
jg
xchg
shrl
jnp
dec
fsubrl
stc
push
sbbl
pop
and
enter
jmp
ja
movsl
pop
adc
fisubrs
and
xchg
cmp
pop
movsb
mov
insb
aam
fdivp
out
int3
mov
enter
fsubs
fstpt
push
ret
loop
xchg
inc
repz
stos
mov
scas
pushl
or
add
xor
or
in
ret
mov
inc
sub
adc
inc
adc
sbb
hlt
outsb
addl
mov
in
ficomps
jae
shll
xchg
xchg
sbb
loopne
jbe
mov
mov
xchg
mov
popl
repz
xchg
adc
xchg
cmp
aaa
dec
sbb
push
into
enter
jo
adc
adc
xor
jg
mov
icebp
adc
dec
jp
into
adc
scas
repz
lret
pop
pop
inc
ret
daa
cmpsl
dec
test
pop
sbb
push
mov
dec
mov
mov
repz
sub
lret
xchg
push
jnp
or
int
mov
notl
mov
rcrl
pop
push
cmp
test
roll
cli
xchg
mov
scas
aam
fwait
pusha
divb
gs
pop
mov
je
scas
fdivrl
add
addb
cmp
in
shl
decb
or
in
cmp
fstl
lret
mov
add
outsl
jnp
ljmp
dec
inc
arpl
fwait
add
pusha
lret
ret
fisttpl
stos
hlt
mov
inc
inc
das
repnz
push
shl
pop
jl
loopne
sahf
mov
fmull
pushf
sahf
outsl
sbb
or
iret
xor
xchg
out
lahf
jae
mov
leave
dec
push
cli
push
cmp
out
fnstenv
data16
inc
mov
sbb
fsubrl
ja
sub
xchg
fdivrl
push
shll
pusha
dec
stc
adc
inc
or
int3
leave
ffree
cs
sub
inc
xchg
jbe
mov
in
lock
mov
xchg
pop
jmp
adc
xor
mov
xor
sub
aam
cmp
inc
cmpsl
dec
loop
sub
fisttps
into
shlb
test
addb
mov
add
jb
dec
shr
mov
inc
xchg
dec
jp
mov
je
cli
mov
insl
ss
mov
js
ja
mov
jg
mov
repz
cmp
arpl
xor
leave
pop
jmp
push
stos
repz
decb
mov
call
sarb
je
pushl
xor
pop
adc
fistpl
inc
cmp
xor
fiadds
scas
mov
cmp
jnp
jp
scas
sub
lea
pop
xor
shll
mov
mov
imul
sub
stos
stos
jmp
stos
scas
pop
push
inc
scas
pop
dec
inc
and
sti
pop
mov
cmp
mov
ret
hlt
or
inc
push
push
cmpsb
mov
sbb
rcl
lret
sti
cmp
loopne
adc
out
sbb
out
push
sahf
pop
je
dec
xor
in
push
mov
sti
inc
inc
repz
mov
push
je
into
not
xor
mov
mov
add
dec
fcomip
rorl
std
mov
mov
mov
mov
clc
mov
std
mov
jp
add
mov
in
bound
sbb
rcll
sbb
rorb
dec
cmp
ficoms
sub
sub
mov
cmp
ljmp
mov
clc
push
arpl
dec
xchg
cmpsl
daa
dec
pop
dec
mov
dec
add
in
sub
pop
mov
dec
fdivr
dec
scas
cmp
or
outsl
sub
pop
in
xor
jno
out
dec
xchg
xor
lret
mov
xchg
fdivs
in
loope
and
rorl
mov
aad
jecxz
roll
pusha
jne
and
ret
sbb
sahf
cmp
adc
jb
lea
inc
dec
xchg
mov
outsl
sub
fcomi
pop
and
icebp
mov
adc
mov
jp
repnz
into
adc
push
push
out
jnp
push
daa
test
enter
add
mov
cmpsb
cmp
xchg
fiadds
inc
inc
fstps
adc
mov
js
divl
in
jne
mov
mov
popf
int
adc
bound
inc
push
pop
shlb
shll
xchg
cli
lret
dec
or
fisttpl
pushw
mov
jno
pop
aad
pop
xchg
pop
test
add
movsl
inc
mov
movsb
or
cmovle
adc
in
stc
outsb
add
int
fwait
outsl
repz
rolb
fwait
mov
jge
shr
xorl
xchg
mov
mov
add
test
out
sbb
je
mov
pop
push
xor
xor
test
subl
mov
popf
mov
xor
jle
mov
push
jl
cwtl
sbb
xchg
lods
out
ljmp
in
mul
dec
dec
cmc
sti
in
mov
insl
cmpl
idivb
jbe
sbb
push
xor
aad
xchg
mov
incl
inc
xchg
popf
stc
xor
xchg
or
adc
into
and
scas
sarl
adc
add
stc
xchg
jae
jecxz
loopne
xchg
sub
xorb
jb
dec
mov
jne
fildll
mov
mov
cs
je
cld
mov
adc
jp
jecxz
jns
xor
xchg
aam
lds
aam
clc
call
mov
dec
pushf
pop
fmuls
movsb
je
sub
test
icebp
cmc
cmp
push
xchg
mov
loopne
mov
sub
sbb
pop
inc
dec
jge
xlat
xchg
push
sub
mov
pop
es
fstpl
xchg
dec
fdivl
jp
add
in
jbe
dec
pop
or
lods
in
cmovnp
push
int
lods
call
xor
test
out
andl
push
hlt
repnz
mov
pop
into
fiaddl
add
mov
mov
sbb
sbb
fcoms
add
and
int3
fcmovne
xchg
stc
into
push
imul
jo
and
leave
test
sbb
mov
pop
in
movsl
scas
inc
pop
or
mov
insl
adc
aad
int
lea
pop
add
pop
sub
call
adc
outsb
adc
mov
ret
adc
sbb
mov
jns,pn
sbb
subl
fiadds
adc
mov
sbb
xor
xor
nop
movsl
stc
and
cmp
push
sub
or
push
dec
sub
sbb
mov
leave
xchg
jo
xchg
pop
into
or
jmp
test
stos
mov
pop
sub
jne
stc
jge
mov
jecxz
mov
cmpsb
jb
in
jg
cwtl
mov
jl
addr16
fistl
mul
dec
sbb
lds
out
int3
scas
mov
cmp
xor
add
test
hlt
in
dec
fistpll
inc
pushf
rcrb
pop
into
popa
ds
dec
xor
lcall
lret
call
pop
xchg
jle
xchg
repz
outsb
paddusw
push
fidivrs
push
out
sub
stc
fsubrl
pop
popf
mov
into
pop
mov
add
insl
fcoml
mov
dec
ja
icebp
iret
pop
cmp
ret
out
jecxz
mov
dec
enter
xcrypt-cfb
cmpsl
arpl
jle
mov
jg
fwait
push
push
jge
arpl
sbb
je
jl
add
loop
mov
test
cli
imul
add
fcomps
mov
nop
mov
jbe
rcr
mov
dec
xchg
jl
shll
xor
inc
xchg
fimull
mov
popa
popa
ret
inc
leave
jecxz
dec
ja
mov
and
mov
idivb
sub
cmc
xchg
sti
int3
orl
test
into
fdivp
mov
xor
inc
imul
in
lods
stc
dec
push
mov
fs
ja
adcl
loope
adc
cmp
dec
scas
mov
inc
xor
outsl
fcoml
ret
push
add
in
scas
insl
inc
sbb
filds
out
pop
jg
popa
je
int3
cwtl
mov
popf
aam
inc
hlt
pop
fwait
cmp
and
sbb
stos
add
ljmp
repz
add
adc
dec
inc
push
xor
sarl
insl
push
jmp
mov
adc
jmp
ds
std
aas
mov
pop
push
adc
mov
hlt
jmp
or
dec
aad
fdivs
pop
pop
rcll
jecxz
cmp
in
loopne
call
dec
jge
inc
xchg
push
sbb
in
cli
add
jp
addr16
mov
mov
or
mov
test
mov
test
mov
cmpsl
adc
jecxz
push
out
sbb
and
leave
xchg
enter
inc
cwtl
adc
in
or
lods
inc
inc
in
notb
push
sub
std
aam
scas
incl
cmp
enter
cwtl
aaa
sub
es
xor
jno
repnz
and
xor
push
jbe
mov
dec
cmp
push
outsl
jb
stc
repz
ja
leave
hlt
xor
ljmp
mov
cmpsl
push
and
scas
add
icebp
xor
or
filds
in
int3
jl
and
jmp
inc
mov
xchg
test
scas
sbb
ret
jns
pop
jnp
xchg
loope
push
fldl
cli
mov
imul
andb
shr
ds
cmp
aam
dec
mov
mov
add
jl
mov
cmp
mov
in
cmp
jmp
jmp
movsb
inc
lds
jmp
dec
cmp
and
sbb
out
fsubrs
push
dec
sub
test
es
jo
or
ret
int
jns
dec
dec
xor
push
ds
in
push
jp
adc
cld
into
pop
repz
pop
lock
and
test
adcb
push
mov
fnstcw
sti
inc
jmp
pop
push
sub
add
pop
ficoml
jno
or
push
xchg
add
imul
ret
sbb
mov
jmp
insl
test
mov
mov
sahf
push
pop
aam
mov
loope
push
mov
cmp
out
ja
jg
sub
mov
inc
shlb
mov
add
or
fs
test
sbb
dec
movsl
cld
es
dec
mov
pop
rclb
push
popa
out
ljmp
outsb
cmp
shr
out
push
mov
mov
jo
btc
fdivrs
sub
ficoms
mov
jmp
xor
pop
pop
lret
xor
dec
scas
dec
mov
sahf
mov
jg
ja
mov
orl
test
add
jg
lods
mov
push
push
mov
repnz
pop
addr16
daa
add
mov
xchg
cmpb
mov
ret
popf
clc
hlt
push
adc
dec
loop
int
cmp
aas
test
inc
pop
movsb
xor
mov
and
push
jp
add
pop
mov
lcall
sbb
pop
pop
mov
jl
loopne
cmpb
or
arpl
lock
lea
mov
cwtl
cli
cmc
mov
inc
std
adc
ret
roll
sub
aas
test
add
mov
inc
dec
and
fnstcw
notl
lea
push
inc
out
cmp
inc
and
mov
mov
sub
push
vandps
mov
jnp
xchg
cld
adc
mov
cli
arpl
push
inc
int3
pushl
dec
pop
into
out
mov
sbb
jp
jmp
add
xchg
adc
fwait
xor
xchg
lcall
insb
push
sbb
jno
imul
xchg
adc
mov
sbb
pusha
sub
repz
inc
arpl
sbb
mov
xchg
dec
leave
pop
and
dec
movsb
repnz
jno
loop
incl
push
rcr
cld
xchg
fwait
xor
out
bound
lcall
dec
dec
xchg
imul
mov
and
rclb
sub
cld
loopne
sbb
push
push
clc
jbe
stc
pop
dec
andl
lock
sub
cmp
das
mov
xor
icebp
nop
out
clc
orl
and
call
xor
mov
mov
in
loope
movsl
sbb
nop
outsb
jl
imul
inc
fadds
cwtl
int3
dec
adc
cmp
push
fsubrs
xlat
mov
test
test
test
mov
into
xchg
rorb
mov
dec
mov
xor
ljmp
jns
and
inc
inc
inc
insb
ja
imulb
mov
sub
jnp
sub
push
lahf
gs
cli
leave
adc
fwait
es
xchg
dec
outsb
mov
jp
aam
shl
xchg
into
or
push
gs
jge
mov
lock
cmpsl
mov
insb
out
enter
rolb
loopne
ljmp
mov
push
add
out
jge
aam
clc
mov
jns
negl
mov
stos
iret
jns
movsl
lock
pop
sub
jnp
cmp
cltd
mov
jmp
sub
or
mov
adc
pop
xlat
xor
nop
inc
push
fidivrs
notl
push
ds
test
push
sbbb
lea
mov
je
gs
and
shrl
loop
dec
push
repz
mov
insb
sti
jg
sub
xchg
lcall
in
dec
outsb
pop
outsb
ret
stos
mov
mov
sub
gs
xchg
stos
jb
fadd
rcl
mov
adc
ret
rcr
dec
stos
pop
int3
std
outsl
or
sub
nop
push
movsb
pop
adc
cld
loope
outsb
jns
adc
push
push
movsb
or
aas
not
cmc
mov
push
cs
out
bound
pop
cmp
subb
bound
dec
sub
aas
leave
jo
ja
xchg
push
inc
fwait
int
or
rcl
sahf
xor
xchg
in
push
inc
shll
push
inc
xchg
dec
mov
scas
dec
mov
sub
test
stos
ret
lea
mov
xchg
xor
and
inc
mov
out
loop
stc
popa
fdivrs
sbb
or
mov
sti
test
das
mov
ret
sub
ficomps
inc
push
shrl
xlat
lds
clc
mov
and
xor
rcrb
dec
call
xor
aam
jno
mov
pop
je
sub
hlt
imul
pop
sub
inc
jp
inc
daa
cwtl
xchg
xor
xchg
push
fisubrs
sahf
loopne
std
adc
sti
push
movsb
repnz
inc
orl
out
or
ds
in
jp
mov
stc
decl
ja
xchg
sti
das
mov
mov
dec
pop
mov
pop
sub
fs
test
mov
push
sbb
adc
sbb
pop
cltd
inc
pop
mov
jne
sbb
add
fs
test
xchg
jle
inc
dec
outsb
pop
lds
pop
and
xor
sbb
aad
fs
or
sbb
call
and
dec
mov
sub
and
aaa
dec
mov
je
imul
es
lahf
xlat
inc
fisttpll
pushf
hlt
rorb
and
ret
and
cltd
or
les
cmpsl
das
sbb
mov
xor
jno
inc
dec
cmpsl
jae
sbb
adc
push
pop
mov
out
mov
in
in
stos
inc
xor
cmp
dec
push
shl
mov
mov
pop
pop
pop
lods
out
out
jb
mov
add
and
push
lods
xorb
hlt
sbb
push
loop
inc
cwtl
test
fidivs
mov
je
pop
ret
fucomip
pushf
out
add
sbb
adc
or
repnz
add
insl
adc
cwtl
pop
bound
mov
int
push
push
push
xchg
add
mov
pop
cmp
std
jg
sub
pop
fisubrl
rcll
mov
add
mov
and
xchg
add
mov
movsl
addb
pop
xor
inc
cmpsl
mov
jo
jo
cwtl
push
movsb
pop
outsb
aaa
mov
ret
inc
xor
aas
fwait
push
pushf
inc
pop
mov
lock
arpl
xor
in
mulb
dec
sbb
adc
adc
cmp
mov
lock
ficoml
arpl
xor
sbb
inc
mov
inc
in
mov
popa
mov
cmp
add
lds
out
add
adc
data16
cmp
push
in
xchg
sbb
mov
enter
cmpsb
aad
sti
jle
fcmovbe
push
mov
or
outsb
sub
and
xor
cld
les
and
and
push
subb
jle
mov
mov
inc
sub
js
add
and
mov
sbb
xorl
or
in
mov
inc
and
cld
mov
push
cmpsl
addr16
sbbb
rorb
xchg
sbb
cltd
stc
out
cld
push
dec
sbbb
adc
jns
jne
and
int
adc
xchg
push
out
pop
lds
pushf
shrl
das
push
inc
cmp
in
sbb
testl
dec
add
das
sahf
outsl
jns
and
ds
cmpb
adc
xchg
adc
lea
mov
xlat
push
ljmp
or
cmc
or
in
add
adc
lret
sbb
dec
dec
in
push
out
dec
mov
add
add
jne
nop
or
pop
mov
lret
inc
sbbb
inc
call
shll
pop
js
xchg
xchg
pop
jg
mulb
add
sub
sub
dec
push
mulb
xor
jns
das
mov
push
adc
arpl
fnstenv
sti
push
je
xchg
jecxz
out
xchg
adc
add
jle
dec
daa
jno
aam
lock
data16
in
jno
jge
je
insb
in
or
mov
in
inc
lock
adc
aaa
fwait
cmp
add
jne
jp
jg
in
imul
faddp
or
mov
mov
pop
or
jnp
mov
mov
push
jge
cltd
inc
ljmp
jb
daa
push
lock
ficompl
and
cli
cmp
icebp
mov
jmp
mov
xchg
fstl
movsb
in
sbb
sbb
xchg
push
das
lock
ljmp
sar
imul
push
out
test
fdivl
dec
pop
sub
lret
ficompl
movsl
into
stos
arpl
adc
ror
dec
pop
ja
mov
push
push
call
xor
push
mov
adc
scas
das
stos
cmp
inc
paddd
jle
inc
xor
push
ret
ja
repnz
sbb
mov
mov
movsb
pop
scas
push
ljmp
cmp
jle
xchg
inc
gs
and
add
pop
loope
insb
jp
int3
imul
lea
mov
fldl2t
enter
pop
inc
mov
mov
outsb
rclb
cmpsl
orb
test
sub
pop
lretw
xchg
pushf
data16
adc
lds
xchg
jge
enter
pop
sbb
aam
pop
test
mov
sub
hlt
hlt
shl
cwtl
test
fisubs
sub
xchg
cld
adc
out
push
sub
xorl
jnp
loope
mov
dec
mov
sub
sahf
adc
inc
aam
add
fstpt
jp
fists
sub
xor
rcrb
enter
call
jl
jnp
jl
push
inc
xchg
xchg
ljmp
hlt
stos
jge
pop
pop
lds
sti
cmpsb
mov
jge
adc
cmpsl
roll
mov
cwtl
daa
cmp
sbb
sbb
add
testl
test
iret
repz
ja
popa
stc
incl
sbb
imul
popa
sub
xchg
adc
out
jp
sub
adc
mov
insl
dec
adc
pop
addb
ror
xor
loop
out
mov
and
cmp
mov
cmp
inc
push
ret
jno
test
insb
int
sub
or
jp
cltd
arpl
sbb
sti
scas
cmpsb
shl
push
out
pop
dec
stc
aas
sbb
and
pop
cmp
dec
push
adc
enter
mov
and
in
dec
testl
outsl
pop
push
mov
faddl
in
ficoml
jns
mov
js
mov
adcl
outsb
test
mov
push
ja
lret
loope
test
cmp
jle
push
sbb
add
icebp
addb
aam
xchg
inc
sub
call
sahf
into
jne
rcrl
movsl
lahf
mov
incb
outsl
insl
jns
dec
dec
out
and
push
lret
mov
jp
pop
ss
setp
sbb
cmc
jg
test
pop
out
jno
push
inc
dec
or
pop
mov
xor
mov
scas
xor
fs
out
out
cmp
mov
insl
and
aaa
jo
pop
rorb
xchg
add
xorl
movsl
cmp
cmp
xor
mov
sti
add
call
loop
mov
inc
lret
aas
mov
sbb
into
mov
sarb
mov
jmp
mov
mov
jge
xchg
add
cmp
shr
jecxz
lods
ret
cmp
ret
cmp
dec
mov
jmp
scas
xor
nop
or
shrb
jne
xor
bnd
addb
andb
pop
out
xor
add
adc
sub
jl
jo
nop
dec
addb
inc
aad
mov
testl
jo
adc
aas
xor
push
in
or
pop
aad
stos
add
bound
xchg
iret
fwait
jae
fwait
dec
lock
mov
lods
mov
in
cmp
negl
rolb
fists
inc
mov
cs
out
jle
cmp
mov
lods
rcrb
push
cli
inc
push
fs
fists
inc
popa
lods
cmp
dec
pop
mov
in
xchg
dec
aaa
adc
push
xchg
jmp
mov
sbb
mov
stos
je
imul
pshufw
sahf
add
sti
aam
cmpsb
pop
test
call
lods
in
mov
or
cmovne
fnstcw
sbb
sub
mov
pop
hlt
andb
cmpsb
inc
inc
leave
push
fadds
ficoms
pop
addb
cmp
in
mov
jbe
mov
jle
xchg
int
mov
fisubs
mov
call
or
lods
inc
and
cwtl
mov
and
out
push
shlb
ficompl
jl
call
xor
sub
push
mov
imul
sbb
std
loopne
cmc
jns
pushf
mov
shlb
je
xchg
dec
mov
hlt
pop
ret
sti
mov
in
bound
dec
pushf
adc
mov
les
sbbb
bound
fistl
popf
or
lret
adc
movsl
lock
or
push
pop
add
dec
insb
lds
sahf
xor
repnz
jecxz
call
gs
jle
mov
sti
adc
ror
in
xchg
cmp
sahf
inc
call
shll
pop
sti
lcall
pop
push
sbb
pop
sahf
fiaddl
filds
mov
cmp
inc
and
jnp
inc
mov
and
pop
add
outsb
aad
or
sbb
xchg
sbb
pushf
jecxz
jmp
imul
imul
inc
jp
adc
pextrw
dec
jne
in
or
fidivs
adc
popa
fsubrs
into
into
mov
test
push
sbb
inc
adc
outsb
jp
cmpb
xrelease
stc
mov
xchg
xchg
fdivl
mov
pusha
js
xor
rcll
je
sbb
jne
jg
imul
loopne
pop
cmpsl
sarb
pop
add
aas
rcll
lea
push
push
in
jle
xchg
adc
cli
push
push
int
pushl
enter
insl
push
sub
out
inc
ds
outsb
jns
push
sbb
ja
mov
jle
sub
push
adc
rcrb
add
in
adc
jmp
jp
sti
pop
mull
sbb
inc
or
adc
push
add
mov
jns
fisttpl
rorl
in
add
dec
pop
mov
ror
cmpsb
inc
adc
lea
sbb
scas
ret
test
jge
ss
cwtl
jae
mov
sahf
repz
icebp
jbe
leave
jo
mov
int3
mov
jns
popf
mov
aam
pop
lods
and
jno
repz
in
mov
xchg
dec
sbb
fdiv
mov
mov
repz
sub
negl
adc
mov
mov
lods
arpl
inc
pop
lock
ror
dec
cltd
ret
mov
test
stc
mov
sub
sbb
dec
rorb
js
or
cmpsb
dec
movsl
mov
lahf
aam
pop
cmpsl
lret
inc
mov
popa
rclb
xor
add
test
cld
push
and
inc
pop
adc
dec
imul
sbbl
decb
mov
jle
or
jns
cmp
or
hlt
les
xchg
int
push
jno
sahf
xchg
push
push
call
loop
shll
add
fs
mov
xchg
xor
xchg
mov
fildll
or
mov
and
mov
dec
in
mov
stc
lock
jmp
xorl
inc
sbb
push
icebp
jno
mov
loop
out
ret
in
int3
test
inc
cmpsb
mov
js
xor
adc
cmp
jge
lcall
stc
fldcw
add
out
cltd
hlt
dec
lods
or
rorb
jnp
jno
cmpsb
sbb
outsb
andl
js
cmp
out
fadds
call
mov
lds
or
sbb
cmp
clc
mov
das
stc
jno
adc
xchg
icebp
xchg
xchg
push
popa
and
stc
fbstp
loopne
or
sub
add
mov
inc
inc
xor
mov
stc
das
repnz
mov
xchg
ret
hlt
loopne
mov
incb
mov
add
push
std
pop
mov
out
mov
and
test
loopne
sbb
movsb
xor
fwait
mov
cmp
in
std
das
pop
shlb
ja
sub
dec
adc
fdivrs
aaa
mov
sub
data16
cmc
and
inc
jae
add
iret
outsb
loop
push
push
out
mov
nop
test
loop
mov
sbb
inc
adc
sbb
fisttpll
pop
out
adc
push
jno
es
les
subb
lret
std
imul
inc
jne
or
call
mov
cbtw
mov
push
mov
in
mov
orb
mov
loope
push
xchg
in
inc
pop
jmp
and
hlt
cmp
shlb
fsincos
dec
mov
jne
fdivrl
aam
or
push
daa
jns
sahf
hlt
dec
xlat
or
sub
sbb
xor
push
pusha
dec
stos
mov
jmp
mov
stos
mov
imul
xor
cmc
dec
inc
out
gs
enter
mov
sbb
into
push
dec
scas
jno
fstl
adc
push
pop
popf
cmp
xchg
orl
inc
jo
sbb
in
cli
aaa
int
mov
insb
cmpsb
mov
and
movsl
jge
inc
push
pop
pop
adc
push
cwtl
in
test
push
and
adc
stos
or
xchg
jb
ror
dec
int3
lahf
cltd
push
sub
add
je
cs
xchg
mov
clc
cmc
mov
pop
repz
jae
mov
add
xchg
cmp
out
js
aaa
jne
jns
or
jmp
add
stc
shr
push
mov
cltd
add
sbb
xchg
jp
daa
pop
mov
jl
push
add
inc
push
das
icebp
filds
test
jne,pt
jecxz
xchg
lods
in
icebp
pusha
adc
divb
stc
out
and
add
sbb
mov
xchg
call
cltd
or
outsb
std
pop
mov
stc
push
mov
das
mov
adc
push
dec
mov
insl
notb
repnz
shrl
push
cmp
mov
fnstcw
sbb
jno
push
sbb
mov
imul
sbb
sbb
stos
mov
nop
daa
mov
or
out
lods
popf
xchg
aaa
mov
push
xor
lods
xor
sub
shll
mov
out
mov
jge
cld
inc
cwtl
fsubrp
cmp
lret
mov
push
cltd
xchg
aam
pop
dec
movsl
mov
push
sbb
push
mov
dec
scas
mov
inc
xor
fists
or
pop
push
ret
jo
mov
xchg
ret
xchg
pop
mov
cmp
lods
popa
push
je
dec
fdivrl
mov
xor
cmp
mov
iret
pushf
repnz
add
add
push
shll
dec
xchg
xchg
rolb
ja
ret
mov
xchg
decb
mov
xlat
incl
shlb
cmp
scas
lods
lret
mov
ja
les
mov
dec
mov
xchg
sub
jg
ss
push
incb
dec
dec
stos
fxch
pop
jo
fcmovne
mov
and
add
fwait
xlat
pop
add
jg
pop
in
mov
mov
xchg
push
fucom
imul
pop
mov
and
sub
jl
stos
add
cmp
arpl
and
fidivrl
jae
mov
xor
loop
aas
rorl
clc
inc
xchg
add
sahf
xchg
add
sbb
es
movsl
pop
push
divb
addr16
js
decb
cwtl
aaa
pusha
xchg
adc
mov
insb
mov
xor
add
mov
fistpl
inc
test
sbb
mov
loope
ds
ret
xchg
mov
or
movsl
arpl
pop
dec
in
ficoml
je
stos
les
mov
addb
pushf
or
dec
fs
dec
or
xchg
sub
call
ret
mov
loope
jns
adc
lods
in
dec
sahf
mov
jns
sub
mov
fs
es
mov
ret
adc
scas
cltd
lret
xchg
sbb
test
icebp
pop
jg
and
dec
dec
mov
or
pop
mov
cmovp
inc
sub
or
sbb
imul
adc
jl
sub
jecxz
in
sbb
mov
sub
cmc
jne
jl
xor
jle
test
ret
adc
mov
jbe
add
inc
inc
mov
adc
je
mov
insb
mov
mov
fstp
add
push
pop
test
push
xchg
pop
cmc
cmpsl
pop
and
add
sbb
sub
scas
scas
mov
cmp
jp
pop
cltd
mov
adcb
into
movsb
xchg
add
cmp
cmc
sbb
sub
xchg
das
xor
jle
jb
push
mov
sbb
inc
insb
sti
out
imul
cmovnp
or
in
cmp
int
mov
orl
mov
pop
pop
xor
loope
bound
mov
sbb
xchg
outsl
jnp
sbb
jno
test
ljmp
pop
mov
ficoml
jg
je
add
sbb
test
ficoml
in
nop
ss
sbb
jmp
lods
jge
add
pop
jecxz
imul
daa
pop
aam
mov
mov
mov
xlat
xchg
loopne
shl
cvttps2pi
std
xor
push
push
in
jmp
popa
lods
int
jbe
or
out
jno
in
cmp
jae
sbb
jns
push
add
loopne
mov
andb
andb
dec
jns
imul
add
in
pop
inc
push
xor
inc
dec
jecxz
jae
in
or
arpl
leave
mov
and
insb
test
lcall
dec
test
pop
pop
xchg
push
add
cltd
sti
jne
and
adc
sub
cltd
outsb
jp
repz
cmp
and
pop
sbb
fistpl
xchg
ds
test
jb
mov
fcomp
int3
pop
jle
and
pop
fsubrl
xchg
shll
movsl
pop
testl
lcall
jp
push
mov
mov
mov
adc
push
js
cmp
mov
cmc
mov
or
sbb
cmp
loope
sub
imul
mov
addr16
test
mov
pop
xlat
or
enter
popf
lret
pusha
xchg
cmp
jl
push
inc
out
pop
adc
mov
movsl
insb
sub
lret
and
dec
mull
xchg
push
jne
jmp
sahf
loop
out
je
icebp
push
xchg
push
lods
push
test
and
mov
addr16
push
mov
aas
xchg
and
mov
pop
mov
popf
pop
repnz
arpl
cwtl
sub
cmpsb
pop
repz
and
out
pop
mov
lcall
jbe
popa
xor
push
cmc
jp
cli
sub
push
add
aaa
movsb
addb
imul
insb
pop
add
and
mov
mov
out
shll
jmp
mov
shll
filds
mov
fists
xchg
cmp
mov
or
stc
add
jp
mov
and
jmp
popf
sahf
mov
jmp
test
js
ljmp
vcmppd
pop
lcall
outsb
mov
pushw
sbb
out
mov
and
adc
lods
jb
mov
mov
dec
pusha
out
xchg
push
jmp
loope
sbb
jbe
push
mov
outsl
scas
fisubrs
inc
fstpt
loop
push
movb
rol
fldenv
add
add
nop
pop
addr16
testb
lea
lods
das
dec
popa
cmp
std
push
pop
dec
jno
push
lret
xchg
lret
dec
sbb
je
fsts
or
mov
mov
inc
loopne
iret
xchg
xchg
mov
rorb
jb
cmp
iret
lock
sbb
push
pop
inc
jae
mov
outsb
xchg
cwtl
fwait
mov
inc
pusha
pop
xchg
nop
xor
pop
mov
int3
push
xchg
ret
or
add
jp
sub
inc
lods
or
add
or
xor
mov
xchg
push
gs
orl
sbb
inc
js
lods
mov
shr
aam
adc
mov
popf
inc
cmp
and
adc
dec
stos
aaa
sbb
fistl
fildl
lret
jae
and
lock
testb
ss
fsts
decl
lods
xor
mov
pop
mov
popa
and
and
icebp
and
xchg
mov
sahf
mov
dec
int3
pusha
push
add
mov
pop
imul
cmp
dec
sub
cmp
loopne
lcall
jae
inc
mov
leave
je
fwait
mov
orl
and
adcb
call
repnz
inc
pop
inc
dec
pop
scas
mov
jbe
adcl
jp
jbe
adc
in
sbb
lret
push
aas
inc
and
rcrb
daa
outsb
mov
aaa
push
loope
inc
sbb
cld
add
leave
push
out
jg
hlt
outsl
and
push
repz
pop
lods
jb
xor
lods
stc
add
pushf
gs
dec
leave
es
pop
sarl
outsb
jno
stos
outsl
das
push
hlt
lods
aas
jmp
pop
jle
inc
sarb
stos
push
or
or
jne
ret
xor
mov
sahf
inc
jne
or
ljmp
sub
sub
loopne
inc
out
jb
fwait
and
cmpsl
fsubr
int
cmp
cmp
push
mov
push
fcom
dec
push
dec
nop
mov
lds
xor
ljmp
cmc
jp
jbe
xchg
sub
xchg
das
dec
std
test
fiadds
and
jb
inc
icebp
sbb
adc
and
in
ss
lahf
cli
jbe
mov
out
das
or
out
in
ret
mov
push
fadds
jle
and
sbb
dec
in
inc
cmp
divb
pop
jge
cmp
sub
out
inc
mov
fdivp
sbb
je
rcrb
adc
xlat
inc
out
sbb
rclb
data16
add
push
pop
add
testl
leave
pop
xor
mov
inc
pop
pop
fwait
pop
push
shrl
insb
outsl
push
ja
mull
push
icebp
mov
bound
dec
fs
adc
mov
xchg
xchg
and
push
mov
and
xchg
in
jne
or
test
jae
adc
xor
xchg
mov
or
mov
or
test
in
lret
inc
je
or
mov
push
cli
add
mov
arpl
pop
enter
adc
xor
pop
popf
cmp
lock
dec
fcoml
addr16
in
xlat
test
negb
inc
jns
rclb
xchg
es
ja
std
mov
or
outsl
cltd
mov
or
cmp
cld
daa
bound
push
mov
mov
int
dec
jns
cs
insl
pop
cmpb
mov
push
dec
fdiv
jp
nop
roll
ror
out
sub
cmpsb
sbb
jmp
cld
lcallw
push
fadds
lea
jno
inc
das
jns
bound
call
and
jecxz
loope
jno
jns
mov
cmpsb
btr
xor
test
mov
movsl
sub
xor
in
pop
insl
cltd
mov
push
xlat
push
movsb
or
xchg
imul
repz
mov
push
add
xchg
imul
add
loopne
xor
push
lcall
test
popf
aad
movsb
cmp
shrl
leave
pushf
adc
jnp
push
jle
lcall
sub
cs
sti
dec
sub
mov
gs
jp
fisttps
outsl
sbb
adc
out
pop
cli
add
enter
push
pushf
xchg
push
cmpsl
jmp
inc
lock
mov
cmp
data16
sub
mov
fs
jne
push
pushf
push
cmpsl
bound
aas
xchg
lret
or
jns
movsb
adc
xchg
jle
mov
setl
jmp
xchg
mov
rcrl
xor
out
sub
cmp
pop
enter
jnp
xchg
inc
lds
mov
xchg
test
ljmp
dec
jle
cmpsl
pop
lea
xchg
pop
xlat
xchg
lahf
dec
sub
mov
jge
stos
mov
std
push
test
push
cmc
mov
ret
lret
push
shlb
int3
data16
mov
pop
jl
add
and
cmpsb
cmp
mov
lock
push
and
mov
pop
js
repz
dec
sub
adc
mov
aas
cwtl
inc
cs
fstl
mov
ljmp
nop
std
in
cmpsl
rcl
xor
or
mov
dec
iret
xor
scas
mov
stos
jecxz
test
das
les
enter
push
jmp
mov
pop
repnz
push
das
dec
movsb
stos
mov
inc
mov
es
jge
roll
inc
xor
add
inc
adc
dec
sub
mov
adc
mov
mov
adc
pushf
ja
inc
push
loope
outsb
pop
int3
add
repz
stos
mov
xchg
jecxz
dec
int3
cmp
mov
xor
xlat
daa
mov
out
addr16
pop
mov
movntps
mov
cmpsl
test
mov
clc
icebp
jle
xor
or
mov
insb
cli
or
xchg
or
jmp
sbb
nop
ret
dec
add
inc
xchg
xor
orb
push
dec
sub
out
sbbb
pop
adc
addr16
or
sub
sub
inc
lods
nop
jle
adcb
add
xor
xor
mov
jae
mov
movsb
pop
aas
inc
push
xor
bound
jb
dec
lahf
dec
sbb
push
jmp
xor
daa
das
pop
push
shll
fsubrl
ljmp
cltd
in
mov
push
pop
out
sbb
int
cli
in
scas
jae
cld
push
or
adc
int
inc
sub
push
dec
lock
mov
repz
jecxz
invd
adc
flds
pop
mov
push
ds
cmp
ficoml
cltd
jo
out
push
lds
jecxz
xchg
lods
les
mov
or
outsb
lahf
push
ret
inc
inc
dec
mov
daa
std
stos
xor
pop
mov
and
popa
daa
loope
add
xchg
add
xchg
mov
loop
mov
mov
sub
or
inc
cs
cltd
stos
mov
pushf
mov
mov
sbbl
mov
mov
bound
inc
mov
inc
xor
fidivs
shll
adc
mov
mov
push
nop
rcll
or
sbb
xor
sbb
xor
jae
xor
push
cs
and
dec
clc
cli
inc
mov
mov
fldenv
dec
mov
jge
dec
lds
pop
negl
inc
bound
jno
mov
add
xchg
sbb
push
xor
cmpsb
insl
outsb
mov
jle
sti
mov
mov
sub
adc
and
and
mov
jecxz
add
xchg
lods
sbb
adc
data16
push
scas
arpl
and
push
out
mov
pop
mov
mov
out
shlb
lahf
das
outsl
int
push
bound
test
test
pop
jmp
sub
cmpsb
or
addb
inc
jns
mov
jnp
push
cmp
sarl
push
xchg
aam
lahf
out
rcrl
inc
dec
mov
fldcw
dec
fnstenv
aam
xchg
push
imul
pop
nop
mov
xchg
rcr
ret
js
jmp
repnz
fsubl
cmc
push
mov
jl
insl
inc
inc
cmpsb
flds
jge
mov
add
jnp
imul
test
jns
lods
jb
jae
ljmp
xchg
or
push
mov
xchg
js
inc
or
lahf
inc
xor
xchg
rcl
mov
jbe
sbb
rolb
pusha
lods
in
cmp
shrl
mov
jb
popa
cltd
lods
insb
jmp
fistpll
sub
mov
repnz
aas
aaa
xlat
sub
sarl
mov
cmc
add
ljmp
push
imul
sbb
jb
mov
mov
push
or
push
outsl
jle
sarl
and
lock
pop
addr16
cli
pop
and
cmp
jns
xlat
ja
insb
jle
in
dec
jle
lods
stos
push
ljmp
push
outsl
mov
jae
aaa
jne
jl
sbb
push
call
je
or
insl
jmp
xchg
push
sub
pop
insb
pusha
into
cmp
in
inc
mov
mov
mov
and
add
dec
popa
clc
popa
pop
mov
mov
adcl
mov
ja
mov
pusha
out
ds
push
inc
and
test
mov
rcl
xchg
mov
xor
hlt
setl
inc
add
outsl
repnz
sbb
pushf
mov
add
lahf
sbb
push
add
movsl
test
xor
mov
in
dec
jns
mov
addb
testl
dec
push
dec
xor
lods
xor
xchg
xchg
and
rcrl
or
daa
push
cltd
shr
rcrl
cmp
outsl
insb
aas
jl
aaa
dec
sbb
add
decl
cmp
ljmp
mov
cltd
jecxz
and
call
mov
xchg
and
popa
pusha
adc
adcl
mov
mov
jns
jle
adc
sub
cmpsl
data16
push
pop
fistps
loope
in
decl
loop
imul
jne
das
and
addb
or
int3
pop
mov
and
xor
dec
punpcklbw
aas
inc
adc
test
mov
jnp
gs
xlat
jge
lret
iret
adc
xchg
push
mov
sbb
cmp
dec
cld
jl
mov
cli
and
ret
ja
lret
jb
scas
rorb
scas
push
call
mov
nop
xor
sub
divb
arpl
out
inc
shlb
mov
pop
loop
add
sbbb
push
jp
mov
out
pusha
cs
lock
js
int
dec
inc
xchg
fisubl
orl
ljmp
cmp
push
inc
cmp
pop
pop
andnps
sub
jmp
xor
mov
call
jg
aad
adc
in
xor
xor
add
outsb
sbb
add
xor
loopne
out
sub
aam
adc
ljmp
in
cmp
fcmovu
aaa
adc
outsl
aam
xchg
cmp
sub
add
inc
fcomps
mov
rcrb
lods
in
lea
ficoml
fcmovnbe
test
es
and
mov
xlat
inc
sbb
mov
cmp
dec
adc
and
cmp
in
xor
adc
stos
bound
cmpsl
sbb
inc
jmp
lods
dec
pop
inc
fidivs
inc
aas
jno
cmpsl
test
sbb
mov
adc
gs
and
mov
aaa
pop
pusha
aas
inc
hlt
dec
add
dec
push
xchg
loop
in
sub
push
outsb
aam
fistpll
movb
push
into
push
xchg
int3
repz
fwait
sub
mov
rcr
test
in
inc
stos
jle
sbb
hlt
js
mov
in
aam
add
mov
push
jns
jbe
out
xchg
rorl
jl
fisttpll
sbb
push
adc
sub
aas
sub
push
or
stos
inc
loop
insl
cmp
orb
push
add
jle
push
jno
mov
dec
dec
in
rorl
scas
cwtl
or
jne
sbb
cmp
mov
out
nop
icebp
adc
lret
sub
and
outsb
mov
mov
add
out
int
fistpll
insb
mov
mov
sbb
jle
push
mov
and
or
fisubrs
hlt
fsubl
repnz
jle
adc
sub
aam
mov
pop
addr16
imull
inc
inc
js
repnz
cmpsb
push
out
jmp
push
decl
jb
lcall
mov
jb
xchg
inc
adc
mov
ret
arpl
mov
fistps
xor
sub
push
stos
imul
pop
cmp
push
pop
or
mov
dec
cs
cmp
sbb
pusha
mov
mov
pop
inc
mov
icebp
sahf
sbb
cmp
or
mov
jae
lret
sbb
outsb
enter
push
daa
pop
mov
testb
jo
aaa
je
sti
arpl
test
movsb
mov
mov
or
dec
xchg
repz
inc
inc
and
pop
sub
das
insb
cwtl
stos
sbb
and
xlat
pop
or
lret
in
jl
xchg
cmp
fdiv
pop
mov
fcoms
fnstenv
mov
and
fstpt
xchg
push
outsb
add
test
pop
popa
adcb
stos
loopne
xchg
inc
jnp
test
fcmovne
ret
mov
fistl
mov
mov
lods
insl
pop
fldenv
in
xor
and
sbb
mov
pop
or
or
or
sti
xchg
sar
shlb
sbb
leave
mov
scas
or
lcall
xor
pop
sbb
ljmp
pop
mov
call
pop
test
pop
in
mov
fcomip
cwtl
add
jle
sbb
out
add
push
cld
push
push
jbe
pop
cld
jb
inc
stos
cmp
paddsb
loop
leave
mov
jnp
jecxz
push
shlb
out
mov
aaa
scas
cmp
test
jl
ret
lods
rcl
ja
or
fs
adcb
push
push
es
test
icebp
test
gs
pushf
push
les
inc
mov
xchg
out
inc
cmovbe
xor
lods
jns
xor
jae
mov
or
bound
fcmovb
pushf
mov
inc
inc
mov
jb
sbb
mov
icebp
cld
mov
pop
jns
cmp
or
sbb
ror
imul
sub
add
push
and
add
rolb
dec
mov
out
out
fcompl
inc
mov
cmp
dec
push
ret
sbb
orb
xchg
in
stc
movsl
jns
not
jne
push
fsubl
pop
or
lret
enter
int3
dec
pop
lds
andb
jo
dec
cmpsl
xor
or
scas
mov
add
sbb
je
addb
or
push
xchg
loop
out
jp
rcrl
or
sbb
aam
je
or
push
lret
mov
xchg
shr
dec
sti
mov
xorl
cmp
ja
dec
add
cs
les
outsl
leave
cwtl
inc
in
cmp
jnp
inc
add
pusha
sbb
insl
in
xchg
inc
mov
add
lret
repz
add
mov
bound
jb
jnp
inc
jmp
movsl
jbe
test
jo
sub
icebp
cli
imul
lahf
push
sbb
pop
inc
addr16
sub
adc
jge
mov
ss
cmp
lea
cli
test
adc
loope
sub
nop
js
mov
xchg
cmc
ret
inc
adc
mov
aaa
push
or
add
sub
test
dec
xor
icebp
mov
cmp
cmpsb
sbb
xchg
xor
ljmp
add
lock
int3
dec
mov
sub
and
sbb
lret
sub
jns
add
aaa
roll
iret
sahf
nop
clc
push
or
loop
or
add
int3
cmp
daa
jecxz
lahf
popa
or
adc
stos
js
or
push
ret
pushf
hlt
xor
xor
jg
adc
js
addr16
repnz
sahf
nop
sub
inc
fisubrl
pop
das
sub
and
inc
mov
cmp
out
push
out
mov
inc
shrl
pop
adc
dec
cwtl
pop
sub
add
push
cs
out
push
orl
cmpl
jle
xchg
sub
sarb
mov
fmul
rclb
rclb
jae
std
in
sahf
or
add
ljmp
push
hlt
mov
leave
dec
mov
xor
cmp
mov
push
sbb
pop
test
adc
nop
sub
push
jo
xchg
pop
arpl
adc
orl
repz
addb
rclb
xlat
and
xor
nop
icebp
pop
test
add
ljmp
adc
mov
aam
out
pmaxub
cmpsl
cmpsb
and
into
mov
xlat
xchg
push
enter
icebp
shrl
repz
inc
cmpsb
inc
mov
into
xchg
jp
test
inc
inc
nop
xlat
inc
nop
xor
pop
in
dec
pop
dec
cmp
adc
fcmovne
push
fcompl
mov
mov
or
xor
aad
sbb
add
das
add
sarl
lea
repnz
jno
mov
inc
dec
test
push
mov
mov
dec
fs
fisttps
aad
jne
jg
stos
add
xchg
filds
loop
xchg
sbb
jge
arpl
pop
arpl
xor
dec
lret
sub
cmpsb
es
std
sub
cmc
xchg
mov
and
aaa
dec
pusha
aad
cmp
subb
lahf
ds
mov
ror
ss
sahf
data16
das
and
ljmp
mov
mov
cmp
xchg
cmp
loop
andl
test
dec
xchg
pop
pop
pop
inc
insl
add
cmp
pop
push
addr16
pop
mov
push
and
aaa
mov
xchg
and
cmp
leave
shll
xor
cmp
push
dec
jb
enter
jle
jge
pusha
sbb
cmp
and
lods
inc
je
cltd
mov
dec
inc
and
imul
sub
je
adcl
int
gs
aad
jp
push
inc
rcll
in
in
cltd
mov
add
and
inc
pop
dec
sub
sub
test
cmp
lock
add
call
xor
scas
insb
dec
sbb
cmp
daa
out
add
cmp
ds
mov
int3
insl
add
pop
insl
nop
out
adc
push
addr16
mov
pop
aaa
or
push
xor
xchg
fwait
mov
fildl
data16
adc
inc
rolb
jg
pop
dec
jno
jmp
pop
jg
imull
les
ret
jmp
stc
cmp
jns
sbb
push
popa
jge
in
popa
arpl
hlt
inc
or
adc
in
fcoml
sti
lret
fldt
movsb
cmp
cltd
or
cmpl
cmp
dec
or
pop
movsl
mulb
pushf
and
in
push
fdiv
out
int
adc
sahf
cmp
lods
mov
jbe
pop
out
enter
push
subb
lock
inc
xchg
divb
out
push
mov
adc
fidivl
arpl
jl
outsb
hlt
call
or
lods
andb
leave
call
fisttpl
cmp
lret
fs
push
mov
ljmp
cmp
or
aam
xor
xor
mov
rclb
sbb
ljmp
les
inc
push
adc
xlat
adc
in
push
fsubl
nop
sub
shrl
push
or
clc
aas
cmp
sub
sar
int
in
lcall
faddl
lahf
mov
movsl
push
sbb
push
in
add
mov
test
div
subl
add
push
cmp
loop
push
bound
dec
test
fsubrl
fwait
insb
cmp
movsl
sbb
repnz
xchg
dec
test
cmp
lods
push
mov
sub
in
pop
sbb
testb
pop
loopne
jo
mov
xor
into
mov
push
pop
adc
or
stos
pop
aas
and
push
lock
pusha
xchg
cmc
call
and
mov
ret
test
mov
cmc
cmp
mov
je
pusha
xor
clc
out
iret
push
cmp
aam
sbb
outsb
jno
cmp
pop
ja
imul
in
mov
push
pop
push
int
loope
jg
testb
ret
mov
shll
mov
dec
aas
imul
cs
bound
insb
add
push
ja
inc
mov
stos
data16
cmp
out
lcall
divl
mov
cmp
into
int
dec
mov
lahf
push
insl
push
pushf
add
pop
mov
arpl
adc
cmpsl
mov
ret
cld
mov
into
hlt
mov
imul
xorb
add
cmc
adc
push
mov
dec
add
mov
xchg
add
lock
jno
jne
inc
xchg
inc
fistl
leave
add
jp
push
movsb
mov
repnz
xor
mov
rcrb
and
mov
iret
mov
sbb
lret
xchg
leave
mov
outsl
mov
js
pop
mull
loopne
and
fcmovb
push
lcall
outsb
pop
lret
loopne
cmp
jmp
insb
mov
test
push
ror
mov
insb
mov
mov
sahf
fistpll
rolb
sbb
jp
pop
loop
cmp
xchg
in
data16
jo
shld
out
lock
inc
push
jo
ds
inc
and
je
je
cmp
mov
insb
fwait
mov
aam
and
xor
pop
loopne
mov
inc
pushf
inc
movsb
pop
ja
jns
pop
or
inc
std
adc
cld
repnz
sbb
push
dec
xchg
ja
insb
dec
mov
das
fldt
mov
scas
inc
adc
and
ss
sub
and
sbb
iret
add
bound
xchg
jbe
dec
push
or
inc
fwait
adc
ret
inc
shlb
in
lods
push
pop
and
add
loop
loopne
xchg
cmp
push
out
inc
imul
push
sub
fcompl
test
xor
aam
jns
cmp
imul
cmp
mov
adc
in
jnp
cmp
mov
cmp
rcrb
add
push
sbb
lcall
fidivrl
das
pop
sbb
cmp
shrl
mov
clc
and
mov
or
loop
pinsrw
mov
pop
idivb
popa
rorb
das
icebp
add
movb
jo
rorb
loope
pop
stc
sbb
mov
or
in
cmp
xchg
mov
cmp
pop
jl
jl
leave
test
jno
aas
adc
dec
xor
cmpsb
hlt
test
mov
ljmp
outsl
inc
dec
jns
or
in
lcall
fsubrl
jmp
icebp
sub
loopne
pop
ret
pop
jle
in
fdivs
xchg
jb
mov
mov
popa
test
sub
pop
les
inc
bound
jmp
aaa
xchg
xor
or
fldl2e
data16
outsb
jbe
adc
xorb
sbb
in
add
movsl
pop
jne
in
rcll
inc
insl
addr16
push
scas
adc
mov
push
call
movsb
and
std
cmp
and
mov
push
jp
xchg
or
popa
cmp
xor
push
rolb
mov
mov
add
mov
iret
hlt
loop
sbb
fxch
xchg
es
test
jle
cmp
pop
loope
aam
sbb
ja
orb
out
sub
pop
adc
outsl
into
jecxz
out
ds
popf
push
stos
mov
das
mov
xor
sub
test
test
sbb
push
mov
std
insb
loop
ret
pop
inc
adc
test
loopne
xchg
push
int
push
dec
mov
xor
sbb
jmp
les
cld
sbb
enter
lcall
push
xchg
jb
mov
ss
cmpsl
jno
mov
xchg
cmp
shrl
roll
add
std
pop
or
cmpb
mov
inc
jge
add
lret
loopne
test
xor
mov
or
testb
sbb
cs
leave
cmpsl
cmp
sub
outsb
jb
leave
push
outsl
je
mov
icebp
lods
mov
dec
call
std
mov
clc
dec
sbb
mov
cmpsl
ljmp
cmp
inc
push
mov
out
xchg
imul
dec
pop
xor
add
xchg
mov
xor
jbe
jne
mov
or
mov
inc
test
daa
inc
nop
sub
fdivrl
pop
jle
sbb
mov
mov
adc
iret
mov
int3
sbb
aas
xchg
lods
repz
pop
pop
in
out
cwtl
adc
jae
sub
or
jle
mov
sbb
jne
jo
mov
fwait
clc
icebp
jle
mov
ficompl
cltd
mov
ja
lahf
and
lret
cld
mov
add
ret
mov
pop
in
lret
pop
out
incl
jb
pop
mov
jb
push
push
call
and
dec
sbb
lods
mov
cmp
imul
daa
mov
stc
lds
in
pop
mov
adc
xchg
negb
sbb
ret
int
icebp
mov
fildl
adc
fcom
mov
es
data16
aaa
sti
pop
rcll
jl
sub
jecxz
aas
push
xchg
cmp
cld
cmpsl
imul
imul
mov
or
add
cltd
mov
dec
push
addr16
inc
dec
sub
xor
adc
addr16
mov
lret
lods
rcr
ret
clc
negb
mov
push
stc
int3
xchg
roll
mov
imul
mov
pop
mov
push
mov
jae
dec
data16
lahf
dec
movsb
ss
mov
cmp
push
sub
mov
mov
out
sub
filds
mov
js
and
add
adc
or
inc
sahf
lcall
cld
pop
movsb
loope
xor
mov
adc
push
lret
mov
push
push
adc
lods
in
push
mov
and
sbb
out
fs
in
jbe
mov
insb
pop
jmp
and
dec
sarl
and
std
cmpsl
js
shll
lds
lock
lret
cltd
jg
stc
sub
pushf
mov
pop
inc
sbb
xchg
cmp
mov
scas
mov
shlb
or
inc
ret
push
jl
or
fmuls
mov
mov
or
shll
andl
push
jnp
jmp
add
push
sub
add
lea
push
xchg
jle
sbb
push
pop
sti
test
mov
pop
decb
stos
xchg
into
sub
inc
dec
imulb
test
aad
aam
andl
mov
dec
pop
ds
pop
test
mov
add
stos
outsl
xchg
dec
jl
inc
cmpsl
mov
insl
call
mov
xor
lods
icebp
sahf
outsb
and
js
cli
sahf
je
sbb
dec
cmp
or
inc
mov
loop
lahf
test
inc
fists
jmp
push
dec
and
sub
int3
xchg
add
arpl
stc
sub
std
and
sbb
sub
inc
mov
add
xor
jle
xor
add
xchg
adc
test
rcrb
aad
pop
mov
jns
adcl
adc
int
dec
mov
lret
add
xor
movl
and
fsubrs
ret
rcll
rol
imul
imul
outsl
adc
dec
or
pop
sahf
sub
popf
or
sub
inc
loop
insb
jp
mov
dec
das
jnp
pop
nop
out
fdivrl
cmpl
stos
xchg
dec
mov
mov
mov
mov
xchg
lock
mov
mov
ds
or
mov
push
add
je
xchg
push
mov
sti
loope
cltd
insb
mov
test
scas
movsl
jmp
data16
cli
cld
mov
xor
mov
andl
loope
aas
push
cmp
sbb
jb
mov
pop
and
std
pop
add
std
cltd
sbb
cmp
je
lret
clc
into
mov
xchg
loop
jne
add
mov
repnz
stos
jns
pop
pop
mov
dec
or
fwait
pop
sub
cmp
popa
lea
dec
lret
xchg
out
test
dec
dec
lret
jns
jns
add
push
push
cs
sub
outsl
and
push
in
je
sub
popa
aad
mov
lahf
rcrb
push
roll
lret
lahf
fwait
mov
jecxz
rep
push
leave
cld
movsb
test
shl
jmp
xchg
clc
mov
xchg
xor
adc
mov
arpl
mov
sub
bound
les
bound
mov
shlb
daa
arpl
xor
push
out
mov
cmp
dec
jle
xor
sub
cmc
cltd
shlb
movsb
push
inc
jne
fnstsw
mov
and
adc
icebp
lret
jmp
movsb
xor
outsl
lret
xchg
sub
push
sbb
jle
jne
fdiv
arpl
xchg
jg
cltd
repnz
sti
ds
insl
jmp
int3
not
repz
sbb
aas
out
and
das
sbb
loopne
cmp
mov
inc
stos
xor
fidivrl
mov
mov
pop
cmpsl
loopne
push
push
xchg
mov
in
scas
jge
sbb
or
pop
gs
lods
adc
jmp
mov
pop
and
push
jns
addb
mov
mov
add
fs
cmpsb
mov
cmp
pushf
dec
pop
rorl
pop
int3
mov
insl
inc
xor
pop
mov
iret
popa
mov
sbb
cmpl
xor
push
cmp
cmp
dec
popa
fdiv
dec
fldt
fs
shr
test
lcall
lods
adc
mov
loopne
test
mov
push
rclb
rclb
stos
and
mov
lret
scas
fisttpl
adc
push
push
xchg
inc
and
out
lcall
jmp
jnp
fs
in
mov
int
in
loopne
in
xor
xorl
mov
push
arpl
nop
xor
dec
inc
pop
mov
xchg
push
loope
mov
sub
xor
repnz
pop
cld
popw
adc
ret
stc
adc
and
rcl
cli
fs
and
inc
sub
pop
add
lea
popf
or
pop
cs
push
push
ret
cmpsb
mov
add
lret
mov
fimull
push
mov
fstl
add
imul
iretw
roll
mov
mov
add
cmpsl
sbb
cltd
outsl
das
cmpsl
dec
int3
xchg
xchg
or
out
int3
bound
mov
std
jnp
sbb
divl
xor
mov
sub
xor
cmp
cmp
sbbb
test
inc
inc
leave
insl
mov
jno
cs
pop
sub
bound
add
mov
data16
adc
and
or
insb
ss
adc
fiaddl
call
into
and
inc
dec
add
jecxz
rol
fadds
cmp
pop
pop
movsb
mov
ds
lds
mov
cmpsl
and
adc
cmc
cmpsl
xlat
repz
loopne
inc
aad
sbb
push
adc
pop
sbbl
lods
push
mov
or
mov
mov
test
jb
jno
cwtl
mov
fmul
jl
insb
xlat
in
xor
adc
jo
xorl
sahf
and
dec
in
adc
push
dec
mov
adc
mov
rcl
mov
stos
lret
xchg
mov
cltd
push
or
inc
mov
js
xor
jle
cmpsb
push
and
adc
lea
loop
imul
pusha
outsl
cmpsb
sub
push
lods
cmp
xlat
int3
and
jo
push
pop
push
jmp
js
pushf
jbe
pop
xchg
prefetch
or
pop
icebp
out
sbb
sub
add
call
lret
shl
movsb
pusha
js
push
push
in
pop
jnp
loop
sbb
dec
dec
test
repnz
push
push
mov
daa
ret
or
push
sbb
pop
pop
jb
or
das
ljmp
push
into
mov
add
nop
sbb
inc
pushf
jnp
xchg
fisubrl
add
jg
jmp
xchg
test
jns
movsb
push
cmc
pop
daa
das
xor
push
sbb
jae
fisttpll
pop
cwtl
outsb
mov
jmp
cwtl
test
xor
xchg
push
inc
data16
sbb
xchg
jge
popl
dec
data16
sarl
lret
and
cli
icebp
and
push
nop
add
sub
jge
mov
mov
int3
lods
andb
lret
inc
dec
leave
hlt
mov
imul
push
cmp
sub
lcall
cli
dec
adc
mov
subb
das
movsb
sbb
cwtl
stc
ja
int
loop
mov
sahf
mov
in
pop
xchg
push
in
cwtl
add
mov
out
mov
cmp
sbb
js
or
and
jp
repz
push
clc
decb
imul
mov
sub
xor
add
inc
jne
mov
ljmp
lret
stos
xor
jb
lea
cmpsl
xor
scas
add
xchg
inc
push
roll
xchg
int3
pop
adc
xchg
push
sbb
push
es
inc
jne
mov
shlb
add
divb
dec
scas
xchg
testl
push
je
dec
lret
push
dec
mov
fdivr
add
adc
lock
push
xchg
loope
sub
imul
in
inc
jl
aas
xchg
lret
arpl
dec
xor
out
outsl
fwait
dec
sbb
mov
leave
fcmove
fcom
into
jmp
cwtl
rcll
enter
lret
jge
test
mov
fs
cmpsl
fmull
cmpsl
int
iret
mov
lods
fsts
out
jecxz
cmc
call
int3
xlat
push
xchg
inc
jp
imul
cmc
mov
fcomp
sahf
sub
push
je
inc
mov
sub
push
pop
sti
mov
xor
xchg
cwtl
sbb
cmp
mov
jnp
mov
cmc
cwtl
xchg
ds
inc
inc
int3
xlat
stos
mov
xor
data16
hlt
cmpsl
movsb
pop
js
outsl
nop
xlat
insl
sbbb
jae
loop
xchg
jmp
lock
dec
ficomps
mov
push
sub
and
jno
les
mov
dec
fmul
pop
inc
scas
das
sti
sub
adc
div
push
daa
gs
cmp
push
out
dec
xor
lret
cwtl
leave
addr16
jae
popa
jp
or
lret
fmuls
cmpsl
adc
pop
test
mov
test
shl
xchg
int
imul
cmpb
inc
movsl
cmc
mov
mov
jo
push
mov
mov
xchg
add
inc
adc
lret
jp
int3
jae
rcrl
lds
pop
fcoml
imul
or
ficompl
loopne
int
push
out
iret
ffree
mov
jmp
sbb
outsb
mov
stos
push
mov
jae
mov
adc
sti
lahf
mov
popa
jle
das
pop
repnz
repz
data16
rorl
outsl
insl
cwtl
fucomi
sbb
loopne
mov
push
addr16
xchg
adc
fcoms
dec
sub
aas
xorb
loope
cmc
dec
xlat
orl
dec
test
nop
out
mov
mov
xchg
shrb
mov
dec
cmp
mov
hlt
sub
jno
jge
add
jge
sub
xchg
or
ret
jnp
imul
mov
out
ret
mov
popf
add
mov
enter
int
aad
jmp
gs
jne
fdivl
cmp
testb
mov
cmc
insl
and
jg
mov
sub
test
out
test
ja
pop
sti
int
and
cmp
loope
add
cmp
rep
shr
cld
call
or
jmp
movsb
fisttps
add
fisubl
mov
std
outsl
stos
sub
in
iret
sub
outsb
push
int
inc
test
mov
std
mov
bnd
sub
out
or
insl
cli
loop
jb
aad
dec
aaa
dec
push
jge
jl
jl
cmp
mov
rcll
in
jnp
ja
addl
xorl
jge
jb
mov
jne
mov
pop
sbb
and
imul
les
cmpsl
fistl
mov
cli
fstpt
sbb
inc
repnz
xor
test
je
mov
rol
out
movsl
lahf
in
mov
mov
in
data16
mov
mov
cld
mov
xor
test
dec
push
cmp
mov
scas
push
pop
movsb
rolb
push
and
push
jno
fyl2x
in
and
mov
imul
pop
lock
pushf
addl
stos
pushf
xchg
pop
clc
jno
cmp
and
ljmp
mov
leave
rcr
dec
in
mov
and
pop
push
in
inc
and
jmp
dec
sub
push
xchg
jne
dec
sbb
xchg
mov
dec
push
je
ss
mov
push
lods
rdtsc
mov
scas
push
inc
cld
mov
clc
imul
mov
jns
aad
fisttpll
xor
jno
and
out
stos
push
dec
ss
lods
movsl
shll
idivl
shl
lahf
je
sbb
push
addr16
addl
xlat
enter
cld
fidivrs
arpl
sbb
push
inc
push
cld
aas
xorl
inc
add
loope
dec
push
fld
mov
cltd
imul
push
jbe
ret
sub
es
or
add
cwtl
inc
movsb
sub
mov
imul
mov
push
push
les
fwait
xchg
icebp
cltd
pop
outsb
xchg
jg
testl
int3
dec
outsl
insb
sub
lea
rcrl
dec
xlat
mov
pop
stc
xchg
and
clc
daa
mov
divl
gs
xor
add
add
sahf
push
xchg
mov
dec
imul
xchg
jns
xchg
sbb
and
inc
fs
jno
fsts
jmp
push
addl
test
scas
sub
ret
lea
push
aaa
cmp
jl
push
aam
cmp
sub
or
push
fsubrl
bound
je
xor
aas
adc
inc
push
and
jb
daa
xor
out
mov
mov
cli
push
cmp
adc
out
imul
fisttpl
or
std
or
and
sarb
stos
ret
cwtl
and
dec
ficomps
and
xchg
mov
mov
fcomps
push
pop
fstl
push
fnstsw
mov
cli
repnz
or
lret
xor
jle
mov
jno
sbb
fsubs
add
mov
sar
pop
scas
mov
cmp
mov
out
dec
out
mov
gs
lahf
jae
xchg
lret
inc
rorl
pop
scas
xchg
cmp
pop
out
js
test
mov
jb
stos
fwait
lret
mov
dec
aas
js
insb
sarl
xor
test
je
ds
pop
popa
pop
cmp
repz
add
das
dec
sbb
xchg
mulps
enter
int
stos
sbb
ss
es
jne
shll
sbb
mov
sub
adc
into
scas
cltd
loopne
out
data16
ret
jnp
pop
xchg
fstpt
push
or
lods
stc
repz
mov
xor
sub
pushf
ret
and
push
or
sub
xor
cmp
stos
jae
xchg
and
cmpsb
jl
iret
xchg
fisubrs
or
shr
stos
sub
pop
pop
jne
inc
mov
frstor
and
fsubp
pusha
dec
xchg
push
mov
or
sahf
in
in
sbb
xchg
pop
xor
clc
repz
adc
xchg
adc
lahf
and
mov
sbb
sub
sub
daa
lret
lods
lcall
icebp
inc
mov
jecxz
imul
cmp
push
jne
mov
adc
mov
adc
aas
out
push
jnp
cltd
subb
add
and
xchg
pop
push
popa
pop
sub
shlb
mov
push
outsl
std
pop
int
pop
cmpsb
sbb
data16
xchg
stc
mov
push
mov
or
iret
and
ja
cmpsl
idivb
jle
sti
mov
scas
insl
sub
aam
jl
add
jmp
sub
fildl
sbb
mov
mov
cmpsb
sub
xor
test
mov
dec
jg,pt
push
sub
arpl
aas
cli
lock
pop
hlt
xchg
fmuls
xor
rolb
mov
mov
inc
sub
sub
sub
mov
sub
or
mov
mov
inc
sub
sbb
sub
ja
movsb
sub
mov
xorb
loopne
mov
cmpsl
mov
jle
jno
jg
mov
or
jmp
jg
mov
push
add
pop
mov
pop
cmpsb
or
js
pop
aas
jmp
adc
daa
xor
mov
popf
insl
js
jle
in
inc
cld
adc
pop
test
das
popa
push
daa
loope
leave
ret
loop
das
icebp
pop
cmp
js
mov
sub
les
test
or
and
sbb
icebp
xchg
push
mov
or
xchg
pop
imul
mov
dec
hlt
inc
add
mov
push
dec
das
enter
aad
sub
mov
imul
xchg
push
repz
xor
test
jge
cmc
outsb
jge
pop
lds
or
rcl
pop
iret
push
xchg
icebp
push
mov
mov
xchg
adcl
in
scas
daa
sub
in
mov
ja
lds
push
inc
add
ja
or
cmpsl
and
outsl
xlat
pop
and
enter
jne
call
push
xchg
pop
fld
in
and
mov
push
mov
jmp
or
push
inc
xor
flds
hlt
aas
sahf
leave
loope
repnz
cs
mov
in
xchg
push
mov
stos
mov
jg
in
sbb
das
ss
hlt
jmp
add
incb
adc
cli
xchg
push
mov
inc
pop
fwait
clc
std
mov
inc
jnp
cmc
jae
cmp
dec
jae
and
jle
mov
dec
iret
cmpsl
repz
mov
dec
int
out
mov
testb
movsl
ds
outsl
stos
test
lcall
pop
add
outsl
mov
daa
jg
aaa
cmp
xchg
push
lahf
outsl
push
jge
sub
push
dec
insb
inc
lret
enter
dec
mov
jae
mov
cmp
popa
cld
pop
pop
es
sub
pusha
sbb
jae
cmpsl
and
ret
loop
shlb
xor
pop
int3
xor
in
adc
mov
push
and
cs
push
pop
inc
xor
wbinvd
ficompl
mov
js
cmp
mov
jnp
movsl
add
pop
pop
and
pop
fisttps
jp
popf
ja
mov
and
int
bound
pop
mov
adc
mov
fiadds
cli
pushf
loope
xor
mov
bound
xchg
xor
les
ja
lret
xchg
cwtl
jnp
leave
mov
addr16
add
mov
cs
fwait
xor
call
jmp
sbb
ret
repnz
xor
filds
mov
mov
push
repnz
repz
rorl
mov
adc
jb
mov
test
cmp
sbb
xchg
xor
out
adc
add
add
jge
xchg
mov
cmp
lahf
xor
and
lret
mov
shr
or
mov
nop
cmp
insl
mov
push
addb
push
sub
stos
fcomp
clc
mov
mov
mov
or
jle
imul
popa
ljmp
imul
sti
add
mov
int3
rcrl
mov
cltd
jl
je
pop
xchg
and
std
mov
xor
iret
adc
call
pop
lods
call
iret
lea
inc
sahf
xor
icebp
popa
loopne
push
xchg
inc
push
xchg
scas
fcomps
pop
or
mov
cmp
fsubs
mov
das
pusha
insl
mov
sub
stc
fimuls
fs
scas
aaa
push
mov
scas
mov
shr
ds
fcmovu
pusha
xor
subb
xchg
adc
xchg
popa
jmp
xchg
mov
mov
mov
arpl
leave
sub
push
jge
push
fidivs
lret
daa
mov
pop
dec
xchg
fstl
cli
mov
pop
jg
scas
inc
adc
mov
imul
hlt
ret
scas
xor
push
scas
adcl
pop
popf
mov
pop
dec
movsl
add
nop
xchg
fstl
push
bound
stc
int
call
jno
das
cmpsb
lds
inc
aaa
ljmp
imul
movl
bound
inc
inc
lcall
pop
xor
pop
cmp
repz
mov
bound
mov
xor
das
pushf
scas
aam
imul
adc
push
xor
xchg
stos
cmp
xchg
fidivl
test
lret
lret
ljmp
lcall
ret
pop
adc
sub
js
jle
fcmovnbe
lret
loopne
int3
mov
jge
xor
mov
push
scas
out
adc
pop
test
xor
mov
mov
sti
movsb
les
cli
inc
fiaddl
sub
es
iret
and
mov
push
and
or
jno
imul
insb
lcall
mov
pushf
std
idivl
pop
stc
or
pop
jns
into
mov
push
push
lret
cmp
sbb
inc
xor
js
sub
stos
ffreep
testl
fucomp
jne
xor
cmpsl
pop
pop
and
sub
pop
test
push
ss
adc
dec
xor
adc
jbe
popa
outsl
pushw
cmp
arpl
pushf
scas
icebp
lock
imul
xchg
lds
popf
fs
and
mov
cmp
cmpl
lret
gs
sbb
mov
idivl
daa
lret
mov
data16
adc
jne
cmp
mov
sbb
xchg
add
leave
cli
xor
fucomp
mov
xchg
cld
lds
rcll
or
xor
and
cwtl
sahf
lods
scas
test
popa
sub
test
dec
and
jb
lea
add
mov
cmp
mov
inc
lret
shll
and
cwtl
inc
inc
movsb
sbb
add
call
pusha
push
hlt
fbstp
out
jg
imul
xchg
add
insb
or
in
or
cmc
rcr
sub
sub
fidivrs
xor
push
stos
jae
addr16
cmp
sbbl
pop
or
xor
and
push
mov
inc
or
sarl
cmp
imul
call
das
mov
mulb
int3
cmp
mov
int
sti
pop
sbb
mul
sub
xchg
aam
sbb
cwtl
ss
mov
stos
adc
jne
cs
aad
mov
into
fadd
stc
jg
popf
sub
cmp
movsl
lret
cmp
movsl
mov
pop
nop
jg
gs
pop
inc
xchg
out
mov
ret
push
jne
scas
xchg
fidivl
out
add
inc
jo
or
inc
mov
mov
pop
addr16
popa
cmp
stos
out
sti
rorl
push
mov
out
sub
sub
nop
sub
nop
mov
aas
out
out
or
sbb
pop
inc
insb
and
movsl
mov
xchg
push
or
xchg
cld
test
push
inc
insb
pop
mov
cmc
std
stos
jp
xlat
and
leave
jno
icebp
gs
xor
inc
adc
das
mov
popa
push
in
fdiv
mov
jmp
add
loopne
ljmp
loope
icebp
jae
cmc
test
jne
mov
mov
ret
pop
cmp
add
incl
pusha
mov
cmp
sub
lcall
and
cwtl
je
jbe
je
pop
rcll
scas
mov
popf
mov
cli
add
insb
sbb
push
xchg
add
push
cmp
jg
sbb
lock
push
mov
out
imul
ja
cmp
fucomp
insl
dec
pop
mov
in
lods
dec
adc
xchg
insb
inc
ret
adc
dec
into
pop
push
pop
cs
adc
mov
mov
and
xor
incl
fs
push
jo
jo
cld
stc
stos
jge
popa
jle
cmpsb
pusha
mov
mov
sbb
aas
jns,pt
and
lds
lods
push
insb
dec
int
and
mov
push
dec
imul
mov
ds
push
stos
data16
ja
cmc
outsl
cltd
or
jnp
mov
push
xor
sbb
jg
jg
fnstenv
xchg
sub
xchg
imul
or
mov
inc
xor
stos
and
mov
xor
push
jo
fistl
jle
ja
and
or
push
lcall
dec
lcall
jns
stos
ss
call
test
mov
aam
test
inc
add
add
adc
mov
add
mov
jb
mov
daa
jle
mov
or
imul
or
or
lods
je
jae
sbb
mov
dec
jbe
js
xchg
pop
jno
mov
jbe
cwtl
aas
sub
dec
das
cmp
mov
insl
in
cmp
out
aaa
fmuls
out
out
in
mov
push
cmp
cmp
or
adc
lock
xor
dec
dec
int
idivb
ss
popa
lea
test
mov
push
lds
addr16
jno
adc
push
nop
ds
out
pop
inc
and
ljmp
push
xorb
in
loope
insl
mov
mov
arpl
stc
adc
loope
data16
mov
ss
popa
sbb
inc
lcall
fcoms
push
xor
lcall
test
fldcw
xchg
mov
repz
orl
pop
in
and
adc
cmp
cmc
mov
pusha
call
test
dec
cwtl
shrb
xor
in
popf
daa
sub
sahf
flds
xor
insb
mov
mov
repnz
pop
std
rorb
pop
or
jb
and
lret
xchg
push
and
scas
or
test
cli
jns
out
pushf
notl
and
pusha
push
pop
dec
into
imul
adc
xor
lods
and
es
divl
aaa
in
das
idivb
insl
or
jae
in
cmp
jno
outsl
lods
sub
sti
out
inc
mov
mov
jl
push
fwait
test
movsl
out
lret
sahf
out
lods
cs
in
popl
clc
or
inc
mov
mov
sbb
je
push
jl
ja
not
ret
dec
pop
out
out
cmpsl
hlt
or
inc
sbb
mov
mov
jno
xchg
stc
shl
jns,pn
and
jnp
push
or
or
je
push
pop
cmp
lods
lds
lds
pop
adc
xchg
out
inc
mov
jbe
pop
lock
shr
sbb
fwait
jno
scas
cmc
adc
in
leave
ret
add
push
xchg
and
aad
pop
jbe
pop
sub
jnp
ja
xor
jne
stos
int3
lea
and
cs
and
mov
push
js
push
sbbb
int3
movsb
jne
jbe
movsb
dec
mov
gs
sti
xor
or
inc
lods
or
ret
jo
mov
mov
andb
movsl
test
jbe
loopne
sti
out
push
loop
inc
mov
or
nop
add
aam
pushf
out
xchg
dec
mov
jge
or
pop
int
jl
test
ss
fsub
ds
mov
lcall
arpl
mov
gs
add
and
add
sbb
dec
outsl
sarl
fwait
mulb
fidivrs
fsubl
dec
inc
mov
mov
int
gs
ds
and
adc
shll
sahf
imul
shrl
rclb
addb
movsb
and
cmpsb
jbe
xchg
push
inc
in
mov
add
ja
jl
in
sbb
int3
mov
movsb
push
stc
xchg
sub
sbb
cltd
bound
ret
jp
pop
jnp
mov
add
pop
in
add
mov
adc
ficoms
xchg
test
mov
clc
test
lret
lods
pop
jecxz
mov
daa
jge
test
or
iret
bound
jle
ret
push
dec
loop
dec
sub
sub
mov
or
pop
push
mov
and
aad
inc
cmp
mov
loope
loope
pop
mov
push
daa
int
sahf
jle
push
jbe
sub
ss
mov
sbb
mov
xchg
stc
repnz
sahf
xchg
xchg
mov
cld
in
sbb
jo
push
add
cmp
cmp
nop
stos
hlt
dec
xchg
mov
dec
jle
pusha
push
lret
lods
sbb
jae
hlt
gs
add
jle
mov
push
xor
pushf
mov
jnp
imul
sub
inc
daa
lock
sub
insb
or
sbb
sahf
test
adc
fldl
idivl
sti
lahf
movsb
xchg
pop
lea
mov
dec
mov
push
lcall
stc
imul
jo
aad
sub
out
pusha
js
outsl
bound
inc
and
mov
clc
flds
je
stos
scas
es
jbe
dec
dec
daa
adc
push
jnp
inc
arpl
lret
out
and
movsb
pusha
mov
sub
jns
mov
add
lods
xchg
and
jge
sarb
sbb
sbb
sub
cld
imul
testb
fwait
test
inc
ret
cmp
je
in
sbb
movsl
stc
ljmp
imul
push
addr16
mov
movsl
pop
or
mov
ljmp
cmp
test
cmpsb
sbb
dec
jb
fnstenv
sbb
inc
add
add
mov
ficomps
mov
cmpsb
mov
sarl
adc
mov
cmp
xchg
mov
xchg
cmpsl
dec
xlat
ret
shll
fcoms
loope
jmp
icebp
add
inc
add
mov
add
push
cmp
xchg
ljmp
fstps
enter
dec
cli
ror
incl
std
push
mov
push
or
jb
and
dec
dec
mov
push
mov
leave
add
pop
call
ficomps
dec
dec
fst
in
or
les
rol
pop
xchg
fstpt
les
xor
fnstenv
jg
jl
mov
inc
jge
aas
mov
andb
push
xor
rcrl
aaa
and
arpl
and
fs
sahf
fs
cmpsb
adc
xchg
dec
pop
pop
dec
sahf
mov
mov
pushf
inc
dec
ret
fimull
inc
nop
ret
gs
lret
iret
fsubs
inc
add
out
enter
and
out
lea
scas
dec
push
push
outsl
stc
lds
pop
or
sar
scas
gs
push
es
lret
add
imull
test
lds
push
lock
in
test
mov
iret
sbb
pop
lea
cmp
or
xchg
aad
xor
stos
les
ffree
cmc
mov
xchg
pop
dec
and
jmp
std
mov
sbb
outsb
sub
sti
mov
inc
cli
cmp
int3
incl
dec
cwtl
jno
aad
jge
lcall
adc
mov
inc
mov
decl
mov
arpl
fisubl
aaa
stos
imul
jmp
cmp
add
cmpsl
mov
outsb
into
je
mov
inc
inc
or
inc
ds
sub
jl
out
fnstcw
push
shl
and
fistps
in
mov
dec
test
nop
jle
add
popa
push
dec
sarb
loopne
fstpl
test
pop
inc
not
mov
cwtl
jae
adc
fildl
loope
dec
pop
jns
push
adc
sbb
or
notb
fidivs
nop
xor
mov
pop
stc
mov
xor
cltd
pop
imul
adc
neg
mov
push
pushf
sbb
int
fdivrp
frndint
iret
xchg
mov
sub
dec
scas
lods
add
imul
pop
inc
sub
cmc
sbb
jo
and
jl
sub
jbe
and
int
loop
push
imull
test
inc
pop
fidivrs
fadds
dec
jmp
and
mov
aas
sub
push
inc
sbb
daa
pop
movsb
js
aas
mov
lock
push
jae
mulps
testl
out
jno
fists
psubsb
add
mov
stos
imul
dec
fwait
mov
push
iret
inc
rcll
fcmovnbe
jmp
push
jl
pop
out
sub
iret
leave
cmp
jbe
je
cmc
xor
mov
divl
or
ret
testb
push
cmp
into
mov
clc
xchg
dec
vpand
ss
xchg
cmp
or
xchg
cmp
arpl
xor
in
cmp
stc
jp
jnp
mov
cli
fstps
xchg
cmp
test
rcrb
fcmove
jge
pop
cmp
cmp
sbb
fcompl
movsl
cmp
push
xor
cltd
sbb
les
fimull
outsb
call
mov
push
xchg
out
jae
sub
es
jp
enter
loopne
cs
repnz
fwait
jnp
dec
ficompl
fdivl
add
pop
or
lea
ficoml
iret
push
aaa
mov
xchg
xchg
mov
push
aaa
inc
add
test
push
sub
sub
in
je
cmp
and
fcmovnbe
insl
cmp
lahf
jecxz
push
or
pop
repnz
add
and
popf
lcall
push
xchg
mov
mov
out
dec
out
shl
sbb
mov
testb
pop
xchg
add
push
insl
scas
ljmp
fisubs
rorb
loopne
daa
adc
sbb
pop
scas
imul
adc
imul
xlat
in
xchg
mov
ss
push
mov
fstps
jno
jle
pop
mov
stos
mov
int3
mov
lods
outsl
mov
mov
push
scas
fs
pop
dec
imul
add
pop
aaa
and
jecxz
imul
inc
mov
sub
adc
lods
into
lahf
pop
dec
adc
fdivrs
inc
pop
fstl
ja
lcall
addb
in
mov
sub
jnp
sbb
int3
loopne
adc
push
cmpsb
inc
shr
mov
icebp
cmp
ss
xor
imul
clc
push
adc
sbb
and
and
push
or
movsb
loope
mov
aad
cmpsl
je
mov
push
mov
popf
or
jecxz
imul
xchg
inc
mov
push
icebp
je
mov
dec
faddl
stc
imul
push
add
push
stc
adc
sti
ret
push
adc
xor
call
mov
add
lret
add
cmp
push
xor
jge
test
mov
jmp
cmc
jbe
leave
subb
pop
ja
xchg
fstps
in
int
or
dec
scas
cmp
jae
cmpsb
or
xor
mov
or
xorb
sbb
pop
lahf
mov
out
sub
bound
adcl
hlt
mov
mov
js
and
mov
jp
scas
push
arpl
adcb
dec
in
loope
dec
xor
push
adc
pop
mov
jmp
push
pop
mov
pop
ficoms
lret
nop
push
js
mov
mov
mov
cmp
add
and
cmp
pop
jmp
test
sub
dec
pop
sahf
pop
in
daa
test
ret
mov
mov
mov
divl
adc
dec
pop
push
insb
pusha
loop
mov
clc
cmpb
inc
jae
mov
inc
popa
dec
ljmp
sbb
sahf
leave
jne
jnp
popa
loop
fisubrs
push
xor
aas
daa
imul
out
mov
movsl
sub
call
pushf
inc
mov
jne
jne
or
sbb
mov
push
lcall
les
ficoml
mov
ret
js
or
xchg
aaa
fs
test
push
pop
dec
roll
ljmp
jmp
add
xlat
mov
mov
sub
scas
push
icebp
or
mov
sub
mov
test
cmc
leave
sti
mov
mov
aas
sub
out
movsb
add
loope
and
jecxz
cmp
aaa
or
movsb
pop
inc
jae
inc
loope
pop
dec
mov
movsb
les
pusha
mov
push
pop
inc
ret
mov
in
cmp
mov
test
lahf
sub
fbld
mov
sarl
xchg
in
std
lret
aas
push
ret
ret
add
pop
adc
jns
ljmp
loopne
jge
add
hlt
shlb
adc
mov
jmp
test
push
out
dec
mov
xlat
adc
ret
imul
imul
repnz
mov
pusha
xchg
cmp
cli
in
sbb
bswap
xorl
push
fs
or
xchg
cltd
stc
data16
xor
jecxz
sbb
aad
mov
fsubr
add
fwait
pusha
cmpsb
xchg
imul
mov
jle
jecxz
idivb
push
std
mov
pop
lods
arpl
adc
pop
lds
push
jbe
into
xchg
inc
stc
es
icebp
inc
mov
repz
push
xchg
popf
movl
rep
pop
xor
dec
pop
jg
lret
sub
xchg
mov
mov
divb
mov
jl
popa
ret
push
in
jl
js
sarb
cmp
mov
push
in
popf
mov
xor
inc
mov
cmpsl
mov
sahf
nop
jp
pop
mov
clc
adc
out
push
mov
call
shll
stc
inc
test
in
jns
adc
lods
js
xor
outsb
test
imul
pop
movsl
pop
add
add
xor
cmpsb
cmpsb
and
cs
cmpsl
out
into
push
orl
lds
aas
insb
repnz
ds
push
out
movsl
or
pop
jmp
xor
gs
sbb
jmp
mov
das
sbb
pop
cmp
or
dec
xchg
inc
sub
out
pushl
dec
dec
setae
mov
xchg
stos
sbb
push
jp
lods
ds
mov
push
ja
add
jo
lahf
mov
out
call
shrb
xor
adc
mov
fnstsw
cld
xchg
and
lods
shlb
ljmp
shl
push
out
enter
mov
jne
add
xor
and
and
cmpsl
pop
dec
std
push
iret
shlb
ret
mov
aad
sbb
jg
adc
ret
ret
push
jmp
jae
cwtl
sbb
mov
je
sub
outsb
lret
mov
lds
bound
dec
sbb
push
cs
aas
add
in
rol
ds
jno
and
imul
dec
jp
mov
mov
fsubl
outsl
push
sbb
dec
fsubp
xor
scas
sub
insb
xchg
testl
iret
call
subl
pop
sub
fucomip
add
ja
ret
push
push
fs
xchg
icebp
dec
adc
jns
xchg
push
lahf
mov
fwait
xlat
sarb
lret
jp
sub
jnp
adc
fcmovnb
sti
fistpl
push
or
ljmp
out
lret
cmpsb
add
iret
out
or
pusha
dec
cmp
and
out
lods
xor
cmp
add
mov
jg
pop
xlat
cli
repz
out
ret
adc
lods
dec
int
leave
jg
mov
push
les
lcall
mov
cli
push
adc
fisubs
sbb
mov
cmp
mov
xchg
in
mov
imul
cmp
stc
cli
roll
sub
incl
andb
shrb
pop
mov
mov
jle
or
or
xchg
lret
or
enter
cmpsl
mov
addr16
push
fistpl
push
popa
mov
mov
add
sbb
test
push
inc
mov
mov
xchg
fmul
imul
dec
imul
push
repz
mov
mov
adc
add
mov
cmp
pop
mov
aam
adc
imul
mov
out
out
cmc
inc
out
pop
stos
test
or
jnp
outsl
jno
mov
mov
jae
jge
sti
xchg
fcmovnu
adc
stc
bound
ret
mov
dec
aaa
pop
into
jns
push
jne
pop
jge
data16
ret
cmpsb
jle
ds
mov
stos
sbb
pop
and
adc
mov
lcall
ja
inc
in
ja
mov
aaa
inc
pop
sbb
js
mov
loope
rcl
mov
je
in
rol
call
push
ficomps
mov
cli
pop
xor
mov
fpatan
inc
xchg
shlb
xchg
rol
sub
add
add
aad
shlb
sbb
cmp
imul
fisttpl
jge
mov
mov
and
xchg
jne
sub
mov
fidivrl
or
mov
fwait
and
int
pop
mov
mov
in
in
inc
sarl
inc
push
xchg
or
cmpsb
jle
stos
dec
xor
in
cmp
lahf
jmp
add
xchg
mov
cmp
cmp
adc
enter
fsubl
stos
orb
shl
sbb
inc
dec
stos
mov
stos
in
stc
movb
adc
xchg
sub
and
sub
imul
fbstp
inc
sbb
cmpsl
inc
outsb
lods
sbb
jo
xlat
jmp
xchg
pop
push
test
daa
add
mov
inc
mov
add
sub
scas
adc
dec
mov
push
aad
xchg
ficoms
mov
pop
jmp
sub
mov
jl
push
sub
push
mov
or
xchg
jno
int
int
decb
add
jne
ret
sub
sub
xchg
rcll
addb
and
add
mov
add
scas
std
aas
lretw
xor
or
es
in
dec
pop
push
fwait
idivb
and
gs
scas
dec
dec
faddl
push
into
mov
cmc
jns
xchg
outsb
bound
popa
dec
shrb
loopne
xchg
dec
daa
movsl
pop
and
adc
push
cmc
xchg
push
xchg
push
sub
std
dec
jb
fcmovu
cwtl
push
xchg
dec
insb
mov
mov
pop
aaa
and
sbb
dec
adc
cmp
mov
push
mov
sub
xor
ljmp
sub
cmp
jmp
es
out
dec
mov
cs
lcall
es
rcll
jno
loop
dec
je
xor
or
add
test
sahf
mov
ds
push
popa
mov
jl
cld
cmp
mov
mov
mov
inc
sub
sahf
push
inc
lret
es
cltd
icebp
dec
stos
aam
pop
lea
inc
decl
push
sbb
into
lcall
iret
sbb
mov
sahf
cmp
sbb
stos
in
mov
xor
sub
mov
and
inc
push
add
test
mov
fildll
cmc
rcrl
push
les
dec
cmpsb
xor
into
loop
or
mov
or
cmp
cmp
xchg
out
sub
dec
xchg
stos
xlat
dec
imul
rcrl
inc
jecxz
shrb
push
in
iret
cli
push
push
xchg
sbbl
dec
in
jne
enter
pop
xchg
and
bound
sub
xchg
jle
cmp
inc
mov
or
sbb
adc
cli
lcall
sub
dec
pop
pop
popa
add
sti
mov
jne
rolb
jle
push
leave
rorb
cmp
data16
jmp
mov
shl
mov
in
xor
ss
iret
inc
mov
test
cmc
cmpsl
ret
lods
fwait
jmp
dec
in
mov
dec
pop
sbb
push
sub
cmp
nop
jmp
pop
inc
lcall
inc
jle
in
lods
push
pop
mov
idivl
cmc
mov
aas
jmp
mov
mov
cmp
clc
loop
aad
cli
sub
clc
sub
sub
mov
fwait
pushf
cmpsl
outsl
push
push
jecxz
cltd
hlt
jmp
or
pop
cwtl
loope
mov
push
dec
mov
divl
jnp
inc
or
loop
dec
xor
or
cmp
push
sub
sub
imull
roll
ret
hlt
mov
mov
mov
cs
insl
repnz
pop
outsl
or
pushf
fs
jb
shlb
push
adc
cmp
and
cmpl
or
mov
ror
das
sbbl
das
xor
loopne
mov
or
push
add
sti
mov
cmp
mov
mov
sahf
mov
jecxz
or
popa
ljmp
fstpt
xchg
dec
js
cmp
test
cli
jne
adc
mov
inc
jle
sti
pop
mov
cmp
ljmp
das
jge
push
dec
in
popa
callw
mov
loope
iret
sti
in
shl
or
pop
xor
andb
xchg
sub
jge
or
sbb
out
or
lret
push
rorb
mov
add
xorl
jmp
pop
pop
ret
push
jae
cmpb
lahf
xchg
jo
ret
mov
ja
insl
push
incl
dec
insl
cmp
lock
in
inc
jmp
dec
dec
jno
sti
testl
adc
loop
js
movsl
movsl
inc
mov
xor
pop
add
fwait
jmp
cli
cmpb
aad
xchg
xor
pop
and
sbb
addr16
sbb
mov
repz
jae
mov
rol
sbb
xchg
insb
in
sub
stos
stos
jmp
lcall
jbe
pusha
sahf
jae
mov
testb
insl
or
xchg
jb
xlat
xor
pop
push
rolb
outsl
enter
mov
sarb
mov
dec
mov
xchg
sbb
adc
mov
push
fstpt
and
shlb
shlb
sub
mov
add
daa
jle
repnz
roll
jb
add
frstor
mov
add
outsl
out
pop
ljmp
fnsave
or
mov
cltd
dec
ret
stos
or
cli
in
lret
and
sbb
andb
pop
push
jecxz
cmp
pushf
lahf
ds
outsb
mov
cmpb
js
and
push
push
push
mov
cmp
dec
mov
push
lcall
jp
push
fsts
fwait
and
jns
push
xchg
inc
leave
cmc
xchg
imul
rep
fs
inc
std
out
cmpsl
aas
int3
jp
cld
jne
outsb
loop
xchg
or
jbe
mov
mov
push
mov
xchg
cmpsb
mov
mov
dec
lcall
sub
sub
mov
mov
js
push
into
or
mov
inc
and
insl
enter
cli
inc
insb
and
add
add
mov
mov
mov
add
iret
lea
insb
xchg
fsubrs
push
mov
in
jne
scas
pop
sarb
or
iret
xchg
xlat
jge
mov
mov
xchg
shrl
and
mov
push
rcrb
lea
rcr
push
out
fwait
sub
sbb
in
lahf
shlb
std
pop
icebp
loope
dec
mov
dec
jecxz
pop
jb
stc
sbb
pop
and
sti
sti
imul
dec
sbb
jmp
out
insb
ds
fisubl
movb
push
nop
sti
push
mov
inc
fs
lret
js
imul
sbb
leave
pop
dec
pop
push
adcb
pop
inc
sbb
scas
sub
jno
dec
aaa
iret
adcb
mov
dec
aam
add
orl
scas
not
and
mov
jae
or
mov
inc
stos
sbbb
ss
xor
test
outsl
addr16
push
loopne
stc
xor
xchg
stos
lea
jecxz
mov
ret
push
pop
inc
addl
and
fstpl
add
xchg
cmpl
mov
inc
jl
into
adc
dec
or
jbe
xor
sti
fmull
in
pushf
push
and
daa
mov
adc
lret
lods
jmp
mov
inc
push
testb
xchg
xorb
clc
inc
jae
pop
mov
lds
push
fbstp
insb
adc
mov
mov
stos
sbb
push
ljmp
sub
mov
popa
and
adc
cmp
cmp
das
or
adc
stos
pop
and
movsl
in
test
gs
cmpsl
hlt
inc
cmp
inc
ljmp
mov
pop
test
cmp
addl
stc
sub
gs
enter
or
cmp
fsubrs
es
xchg
xchg
sti
xchg
gs
jle
mov
sbb
dec
pop
shll
pop
pop
jp
and
push
or
dec
and
jbe
add
sbb
stos
mov
sbb
sbb
push
dec
pop
ljmp
data16
xlat
aaa
and
push
int
adc
jge
into
push
outsl
push
jbe
inc
push
lods
cli
aas
dec
or
mov
xchg
mov
imulb
mov
std
scas
push
sqrtps
ljmp
in
push
insl
dec
outsl
sbb
stos
jno
int
int
sbb
mov
cld
pop
or
and
std
xor
pop
outsb
push
cli
test
ret
clc
dec
popf
adc
cmpsl
in
outsl
inc
lds
xchg
mov
pop
daa
jmp
adc
addl
or
out
icebp
jno
ret
shl
xor
or
dec
push
and
leave
popf
or
lods
lods
in
push
ja
repnz
sahf
movsb
sbb
fidivs
jb
fnstcw
test
sub
cmp
ljmp
mov
cmp
or
pop
dec
arpl
xchg
sar
pop
fs
mov
iret
dec
je
adc
dec
pusha
cmc
cltd
mov
fnstsw
xor
mov
fisttpl
dec
jle
lret
xor
inc
std
ftst
cmp
out
adc
jg
sbb
out
push
scas
pusha
sahf
lods
lret
add
cmpsb
insl
filds
fcmove
sub
jp,pn
lock
lock
mov
fs
testl
idivl
mov
icebp
rcrl
cmp
mov
stos
sbb
and
cld
cmpl
lods
lea
mov
cmp
mov
sbb
lods
and
mov
cmpl
jb
rclb
adc
or
loop
sub
jo
sub
addr16
mov
mov
icebp
xor
push
sbb
test
imul
daa
cmpsb
iret
pop
loop
add
push
cmp
aaa
daa
outsb
mov
add
mov
out
inc
fs
popf
push
stos
das
das
aad
xchg
lea
popf
inc
jnp
scas
push
out
xchg
sbb
js
cmpsl
jno
or
adc
cmp
ljmp
xor
movsl
enter
sbb
push
pop
stos
inc
dec
hlt
into
push
dec
mov
dec
mov
lahf
clc
dec
in
ret
mov
push
mov
xchg
mulb
inc
xor
mov
xor
hlt
icebp
sub
cmc
xor
mov
pop
mov
ss
jmp
pop
sbbb
dec
pop
outsl
jbe
dec
cmp
xchg
xchg
popa
sbb
add
subb
push
cltd
mov
xchg
aam
mov
add
cmc
cmpsl
sahf
icebp
sub
inc
xchg
loopne
clc
in
xabort
subb
mov
sub
jno
pop
sub
mov
out
stc
notb
push
mov
mov
int
cmpsb
icebp
std
pop
add
or
in
dec
adc
cmp
sarl
dec
ljmp
sub
jno
cmpsl
jmp
push
and
ficoml
loope
inc
das
cwtl
sti
insl
push
adc
xor
das
cwtl
push
sbb
lods
repnz
jmp
sbb
jmp
insl
fstpl
fsubl
cmp
icebp
fs
pop
cmpsl
mov
mov
gs
adc
int
aas
jae
stos
orl
inc
leave
repz
aas
push
dec
adc
xor
test
mov
frstpm(287
fldenv
pop
lahf
and
adc
shlb
sbb
bnd
icebp
fadds
in
cwtl
mov
dec
lods
pop
adc
lea
int3
push
ljmp
add
lcall
mov
aas
sbb
pop
and
daa
xlat
mov
push
mov
xor
es
je
fbstp
sbb
dec
les
addb
dec
fwait
mov
fldt
in
sub
sbb
dec
dec
pushf
dec
cmp
lahf
add
sub
push
xor
cmp
shll
mov
ds
inc
lret
mov
jg
mov
and
mov
push
push
xchg
xor
les
pop
icebp
or
icebp
repnz
outsb
mov
out
push
loopne,pn
pop
rclb
data16
mov
xchg
mov
or
or
add
dec
insb
ret
push
xchg
outsl
aaa
ret
sub
jmp
clc
sahf
sbb
std
mov
or
push
mov
scas
adc
push
sbb
cmp
das
jge
jmp
sbb
pop
ja
jns
jae
or
inc
cmp
insb
push
and
popf
jecxz
dec
leave
icebp
lock
aad
or
xor
movsl
mov
ds
jge
xchg
dec
or
inc
push
adc
dec
mov
popf
iret
jmp
adc
out
outsb
pop
dec
fdivrp
test
jno
push
daa
mov
cmc
xchg
aad
or
jae
mov
xor
dec
cmc
pop
ret
xor
xor
mov
adc
xchg
stos
lods
fimuls
fcmovne
data16
pop
xchg
mov
mov
xor
push
adc
clc
and
mov
xor
or
scas
push
punpckhwd
jno
movl
out
xchg
or
and
insl
js
dec
adc
sub
nop
xchg
or
push
jg
or
das
pop
movb
jb
xchg
mov
xchg
adc
mov
sahf
sbb
sbbb
lea
cmp
mov
mov
xor
pushf
fbstp
lock
scas
dec
test
jns
imul
fcmovnbe
mov
cs
test
divb
imul
adc
call
mov
pop
addr16
pop
mov
and
dec
insl
and
pop
adc
ljmp
push
push
push
ljmp
adc
sbb
aam
je
and
xor
in
jp
fldcw
insl
pop
fs
insb
gs
mov
lcall
ss
nop
nop
lock
minps
push
add
jmp
jl
push
xlat
std
push
mov
ret
mov
pop
sbb
and
les
ljmp
sub
aad
add
add
push
outsl
arpl
sub
addr16
mov
fisubl
test
ret
and
testb
leave
orb
inc
call
xlat
sub
call
dec
ja
rcrb
mov
mov
add
xchg
cwtl
or
test
jl
mov
add
mov
lods
int
loopne
iret
outsb
cmp
mov
rclb
divl
inc
and
push
cwtl
fdivp
mov
or
addb
inc
fcmovbe
cmp
xor
faddl
imulb
sbb
mov
cld
cltd
loopne
push
pop
andl
mov
dec
mov
cmp
jl
mov
and
jmp
xchg
data16
call
xlat
ljmp
cmpsb
int3
call
gs
movsl
jp
int
stc
les
sub
cwtl
mov
dec
scas
outsb
push
mov
dec
fdivrp
inc
dec
push
popl
popa
dec
fidivrs
cmp
fs
cld
mov
ret
call
loopne
mov
xchg
mov
dec
push
rolb
aad
pop
xor
mov
sub
mov
lods
push
jnp
cmp
insl
cmp
je
aaa
sbb
ret
mov
xor
push
add
test
and
loop
repz
push
cmpb
int3
push
cltd
test
add
pushf
cmp
rolb
xchg
cmp
and
add
jo
movsl
cmpsb
popf
xchg
cld
sahf
inc
mov
add
dec
add
adc
xchg
in
fcmovnbe
sub
sub
or
add
jle
and
je
xchg
pop
pop
sbb
pusha
leave
std
cli
lock
dec
aam
cmc
stos
or
mov
insb
stos
or
in
orb
aad
testb
in
mov
xchg
test
cs
jnp
inc
insb
lods
fdivl
add
scas
mov
add
loopne
push
mov
inc
sbb
push
mov
mov
push
xor
fcmovne
in
imul
push
xor
sahf
cmp
jne
scas
in
leave
ljmp
sahf
mov
cli
int3
lds
mov
mov
mov
pop
arpl
cltd
mov
movsl
xchg
pop
jp
xchg
xchg
mov
loopne
push
lcall
fildll
mov
popa
stc
mov
leave
clc
mov
sub
js
das
jnp
loop
lahf
pop
add
fildll
aas
xorb
fdivrs
sub
das
xchg
aad
pop
xchg
jno
movsl
fs
xor
hlt
fstps
jle
movsl
or
cld
lds
sbb
addr16
int
add
hlt
sub
jp
aad
ror
mov
mov
idivb
dec
xchg
movsl
ds
sub
out
pop
out
mov
cmp
in
push
xlat
dec
inc
pop
popa
mov
adc
sub
es
lret
cld
mov
mov
stos
fdivs
test
mov
add
repnz
mov
pop
mov
pop
dec
dec
xor
out
jge
jmp
and
inc
in
push
sbb
nop
cmp
sbb
ficomps
and
xchg
jecxz
pop
dec
aaa
movsl
daa
cmpsb
mov
adc
mov
dec
psllq
sbb
arpl
inc
add
mov
mov
insl
ljmp
mov
pmulhuw
mov
add
insb
mov
jmp
lret
fnstcw
and
fstpl
fbld
dec
mov
jns
fsubrl
jmp
push
sbb
cs
xor
pop
ja
movsb
shrb
fcmovnb
movsb
pop
outsl
jae
sub
sbb
xor
push
movsl
sub
call
mov
xor
push
sub
clc
clc
push
out
pushf
or
sar
add
mov
cmp
arpl
add
pop
ljmp
orb
jbe
bound
pushl
xchg
inc
jg
jl
adc
xchg
lock
sbb
mov
adc
sub
xor
sub
mov
stos
js
sarl
cld
in
loope
pop
pusha
test
lds
js
repz
es
adcb
add
sbb
fwait
and
jle
neg
stos
fidivs
push
mov
mov
cltd
cmp
jo
mov
push
mov
xor
popf
jmp
cmp
xor
mov
cld
cmpsb
push
iret
les
cwtl
xchg
push
fldenv
mov
mov
ljmp
movsl
inc
dec
fldt
ljmp
push
pop
scas
jge
roll
iret
loop
and
or
test
ret
rcrl
dec
ret
mov
lods
jbe
and
push
notl
inc
out
dec
xchg
mov
xchg
fildll
andl
imul
dec
push
test
pop
rorb
vorps
sbbb
les
mov
popf
inc
mov
lock
stc
int
sti
mov
pop
dec
fcmovnbe
ljmp
lods
outsb
stos
movsb
mov
pop
pop
jo
lods
daa
push
mov
outsl
cli
push
cmp
jge
daa
add
lods
push
test
inc
push
mov
lea
cmp
mov
loop
fwait
mov
mov
cmp
mov
cmp
ja
mov
pop
popf
mov
mov
icebp
push
ljmp
stc
jmp
mov
xchg
loope
cwtl
js
and
testb
aas
mov
mov
push
and
cld
cs
lock
mov
mov
inc
dec
adc
pop
movsb
mov
mov
mov
and
sub
mov
sub
dec
out
mov
and
jae
rorb
rcrl
mov
and
mov
jbe
gs
stc
push
or
xor
mov
xchg
lret
push
sbb
lret
lods
mov
js
rcrl
sti
das
or
sub
rol
sbb
mov
call
mov
add
xchg
repnz
push
mov
adc
adc
stos
sbbb
scas
hlt
cs
dec
cmc
pop
and
insb
xlat
mov
data16
fdivs
xchg
add
add
into
or
hlt
jp
loope
xchg
movsb
and
pop
or
jo
sub
or
out
data16
pop
pop
gs
mov
inc
mov
jg
mov
cmp
sub
inc
inc
sbbb
sarb
jge
fimuls
pusha
inc
test
xchg
lret
lret
rorl
and
lahf
dec
cld
sar
mov
aam
mov
pop
mov
push
fistl
xor
jne
push
jo
push
push
adc
fildl
dec
xchg
push
push
sub
sub
arpl
cwtl
fnstsw
cmp
push
cltd
lock
loope
push
add
adc
pop
pop
fisttpl
sub
dec
push
fcmovu
pop
or
fimuls
push
movsb
sti
int
sub
in
jno
mov
in
loopne
mov
jp
mov
adc
arpl
and
pushf
pop
lock
mov
faddl
divl
cmp
in
into
stos
icebp
adc
adc
popa
xchg
cli
mov
fadds
adc
xchg
repz
ja
mov
mov
jmp
sub
out
rcl
mov
rcrb
push
stos
out
into
adc
insl
fnsave
in
push
dec
pop
and
cmp
fimuls
xlat
mov
mov
jbe
pop
cwtl
xor
outsl
mov
sbb
das
out
jno
out
lret
lcall
push
ret
and
pop
dec
pop
xchg
faddl
mov
xchg
je,pn
aas
and
mov
mov
scas
leave
fstps
out
and
inc
mov
dec
jle
mov
push
test
aam
mov
push
add
mov
sbb
cmp
pop
jns
and
fchs
lods
pop
push
or
js
out
or
jbe
pop
inc
mov
adc
xor
and
jbe
js
mov
inc
int3
arpl
data16
jp
mov
mov
cmc
loopne
lds
mov
add
or
xchg
adc
push
mov
sub
jo
stos
leave
xchg
jg
cmp
rorl
callw
cmp
xchg
mov
xchg
subl
mov
adc
add
mov
pop
jl
mov
sub
adc
jno
mov
push
or
iret
lods
add
sbbb
sub
mov
movsb
rcrl
xchg
sub
insl
loopne
mov
dec
pusha
fcmovnu
ss
push
inc
xchg
adc
pop
addr16
sbb
mov
arpl
lret
ds
sarl
push
sbb
loope
inc
add
mov
shl
int
es
push
mov
or
or
push
adc
out
hlt
xor
test
mov
pop
lahf
inc
inc
sti
repnz
arpl
mov
fcoml
mov
cli
jp
mov
cmp
jns
sub
pop
cmpsl
cmc
add
inc
sub
cld
adc
jnp
and
add
pop
lock
xchg
stos
and
mov
xor
ljmp
pop
movsb
inc
insb
js
push
pusha
jae
lcall
ror
icebp
shll
mov
fnstenv
incb
out
adc
cwtl
inc
mov
adcl
into
out
pop
bound
jno
xchg
push
hlt
mov
lcall
push
rorb
insb
loop
aas
jp
add
sub
cmp
aas
jecxz
mov
cmp
cmp
dec
ret
push
inc
pop
or
inc
or
push
xlat
push
paddsw
push
mov
js
pop
pusha
cmp
lods
jecxz
mov
mov
push
adc
mov
or
movsb
inc
ret
mov
mov
inc
xorb
push
push
jecxz
popa
mov
arpl
add
xchg
clc
xchg
dec
mov
sub
fwait
or
mov
dec
pop
ja
loope
and
mov
mov
cmp
or
shl
jae
int
shl
or
ret
in
mov
dec
aas
faddl
loop
mov
sub
loope
mov
stos
jecxz
les
lods
fs
ss
addr16
mov
sub
cmp
inc
mov
sub
data16
fsubl
add
add
adc
sahf
scas
cltd
nop
inc
dec
pusha
adc
pop
pop
call
ds
movl
push
mov
add
inc
cmp
pop
fsubrs
aad
cld
movsb
dec
out
inc
cmp
xchg
rorl
fidivrl
cmpsl
pop
fidivl
and
mov
mov
jg
push
pusha
and
lcall
bnd
add
cmpl
test
sarb
jge
addl
cmp
stos
mov
cmc
call
jns
mov
mov
adc
xor
ljmp
loopne
fucomip
sbb
inc
lods
and
add
jo
mov
mov
xchg
test
shl
jp
sti
outsb
xchg
loopne
stos
mov
mov
int
lods
dec
and
orb
inc
mov
aas
rcrl
cmpsl
mov
insl
xchg
push
dec
jo
je
in
xchg
enter
test
jne
xlat
push
out
and
je
cmp
pop
pop
xor
pop
mov
mov
add
xor
xchg
cltd
rcl
ret
push
cmpb
loope
movsb
mov
cmpl
pushf
pop
int
adc
ja
jg
test
insl
icebp
fcomp
inc
sub
sub
add
hlt
lret
inc
dec
shll
clc
fimuls
mov
orb
icebp
out
aad
adc
xchg
ret
push
data16
jmp
andb
and
jmp
or
daa
loope
lret
incb
sub
lret
fwait
insl
adc
cmp
mov
cwtl
aaa
xchg
mov
xor
int3
adc
cltd
mov
sub
mov
clc
cmp
xlat
stos
jae
incb
shl
ds
out
insl
addr16
cmpsb
add
mov
stos
inc
cltd
inc
fs
scas
cltd
movsb
sub
daa
jbe
lods
add
sbbb
adc
push
pop
cmp
sti
cmp
mov
push
jecxz
mov
ret
jnp
scas
mov
inc
xchg
mov
fldl
das
je
xor
sub
lock
lahf
pop
mov
cmpb
sub
lret
push
lock
arpl
es
xor
fbstp
push
in
mov
jae
out
stc
in
pop
mov
loope
std
shl
mov
sbb
xchg
call
adc
pop
cmp
jb
pcmpeqw
or
enter
in
leave
adc
sub
push
xor
fistpll
and
jb
lret
lret
xchg
js
cmp
hlt
pshufw
enter
hlt
das
int3
stc
xchg
cmp
sti
xchg
in
fs
outsl
das
test
imul
out
sub
add
lret
dec
in
jbe
xchg
dec
loopne
sahf
popa
push
and
add
cmp
out
add
or
pop
push
push
addr16
dec
xor
push
lahf
mov
pop
inc
popf
rcrl
daa
rol
pop
push
hlt
adc
pop
xor
pop
into
leave
das
pop
loop
xor
inc
pop
gs
or
or
fwait
je
enter
dec
push
pop
cmp
sbb
pop
outsb
push
mov
data16
lcall
inc
sbb
sbb
or
lock
fstl
testl
inc
push
test
push
adc
add
ret
bound
arpl
or
xor
xchg
shrl
adc
cmp
dec
xor
std
pusha
pop
les
mov
ss
cmp
pop
jge
addr16
sub
mov
push
out
cmp
lret
pop
pop
push
mov
and
push
in
test
lea
xchg
addr16
sbb
and
ret
and
idivl
scas
sbb
fmul
pop
lods
jb
adcl
mov
testb
daa
jbe
std
xor
jecxz
insl
aas
xchg
fwait
enter
shr
lds
les
cmp
lock
push
pop
es
jae
cltd
push
aas
movsb
lock
xchg
mov
mov
inc
pop
sub
mov
pop
into
xchg
subb
mov
or
xor
sub
dec
xchg
les
daa
cli
popf
repnz
fnstenv
lcall
das
addr16
and
push
test
dec
or
jecxz
push
xlat
out
mov
repz
xor
ljmp
and
mov
gs
add
pushf
add
mov
fsubrp
sahf
inc
lea
aas
mov
and
das
or
cmp
es
bound
les
cltd
push
push
fnstenv
xor
es
rorl
repnz
cmp
pop
test
dec
lcall
sub
je
inc
test
rcll
mov
idivb
lahf
or
int3
inc
imull
enter
insl
jge
adc
sbb
into
in
mov
frstor
jns
push
cld
inc
insb
or
push
mov
xchg
movsl
or
shll
jmp
aam
ds
ja
jae
gs
lock
xorb
je
sub
xchg
icebp
loopne
fstpt
xor
loop
and
mov
in
dec
hlt
shrl
test
cli
add
mov
fsubs
testb
mov
jnp
jmp
mov
sbb
adc
push
jbe
xchg
mov
mov
cmp
xchg
push
sahf
add
iret
mov
cmp
mov
mov
cmp
mov
dec
and
dec
ret
dec
pop
sub
dec
adc
push
int3
out
scas
mov
mov
dec
or
leave
pop
xor
dec
mov
iret
test
icebp
mov
daa
mov
xchg
movsb
jae
lret
ss
mov
pop
push
mov
jl,pn
sub
cmp
je,pn
shr
nop
stos
sub
xchg
lahf
ficomps
and
sbb
inc
in
sub
nop
testl
mov
outsl
jo
jge
lock
or
popa
sub
dec
push
inc
sbb
adc
pop
mov
push
push
or
push
jns
ss
mov
dec
or
fisubrl
repnz
pusha
loop
xlat
jp
push
imul
inc
mov
fld
fildll
mov
mov
out
cmc
mov
xchg
xorl
xor
out
cmc
data16
ss
sub
mov
aad
nop
mov
sub
fmuls
lret
dec
divl
push
dec
or
dec
push
xchg
push
daa
push
rcrb
cmp
out
ret
gs
mov
test
xchg
test
out
fimuls
or
addr16
inc
clc
xor
mov
mov
push
add
mov
loop
cld
cmp
ja
cmpsb
mov
imul
lock
inc
mov
pop
scas
xor
fcomi
cli
aam
lea
outsb
movsb
pushf
or
and
dec
xchg
push
xor
aas
pop
add
rcrl
sbb
repz
in
pusha
inc
out
movd
mov
adc
fimuls
test
aaa
sbb
lret
inc
jne
loopne
jecxz
push
and
sahf
loope
and
adc
lret
shrl
sub
mov
jl
push
mov
das
mov
pusha
out
jno
and
data16
inc
shrl
pop
fstpl
fmul
outsb
repnz
mov
lahf
pop
push
xchg
lods
push
sbb
outsl
add
ffree
mov
lods
xor
pop
pop
pop
mov
mov
aad
xorl
shl
clc
sahf
int
push
test
mov
lret
mov
test
ror
push
or
mov
inc
pop
pop
push
arpl
cmp
push
cmp
add
and
ss
nop
xchg
pushf
pusha
fcmovbe
push
pop
sub
and
outsb
dec
push
loopne
jp
pop
aam
dec
mov
addb
repnz
sahf
lcall
ret
push
pop
jle
hlt
lahf
pop
mov
int
daa
call
roll
adc
ds
outsl
inc
stc
adc
mov
insl
int3
fmull
outsb
mov
jne
dec
lods
out
ljmp
nop
xor
int3
lods
sub
data16
dec
repz
push
push
sub
fsts
inc
push
mov
popa
cmp
fs
ficoms
push
inc
mov
out
or
push
xor
pop
lock
xor
into
fistpl
sbbl
cld
jp
sub
fwait
jle,pn
sub
aam
or
sbbl
and
scas
jp
clc
mov
popf
push
xchg
sub
jmp
int3
outsb
shll
adc
or
in
or
xchg
xor
adc
scas
mov
fs
sbb
lret
dec
jmp
mov
xor
mov
in
mov
je
cld
test
ljmp
fwait
and
mov
mov
dec
imul
cwtl
dec
test
cli
cmp
sub
pushf
xchg
mov
push
push
fidivs
aam
xlat
aam
lock
xor
cs
push
dec
xchg
mov
frstor
sbb
pop
push
pop
ficoml
and
mov
add
or
ss
push
movsl
mov
stos
and
xchg
in
dec
loopne
sbb
divl
aaa
loopne
nop
cmp
jge
fucom
jmp
and
mov
or
mov
cmp
push
lods
movsl
cld
mov
repnz
mov
push
or
insl
pop
loop
fidivl
jbe
xchg
orps
mov
lahf
sub
das
adc
inc
ja
arpl
into
and
loopne
nop
in
std
sbb
adc
out
xor
negb
repnz
sbb
jecxz
lock
jle
push
push
inc
pop
xor
lods
cld
lahf
push
dec
rorl
fisubrs
movsb
pushf
pop
sti
leave
xor
jbe
jle
int
dec
int3
dec
data16
aaa
or
clc
push
sub
imul
push
xor
rclb
lods
add
dec
jns
dec
lea
in
xchg
ret
push
xchg
jne
mov
fdivl
shl
jo
push
jle
jbe
int3
inc
fidivs
add
mov
dec
repz
inc
xchg
xlat
lea
xlat
push
bound
sub
test
inc
outsb
out
add
outsb
inc
mov
test
and
addr16
add
adc
std
dec
inc
rcl
rorl
jg
pop
jne
jns
mov
jge
int3
cmpl
cs
icebp
push
mov
in
and
mov
or
je
jge
fs
daa
ret
cmc
inc
mov
lods
lods
fistpll
cmpsb
jmp
fcompl
movsl
cmc
test
inc
aad
gs
sub
rcl
cwtl
ret
dec
imul
mov
dec
fxch
dec
push
lret
xor
pop
repz
sbb
jno
idivl
push
mov
jne
push
cmpsl
sub
mov
imulb
je
and
test
mov
inc
mov
test
mov
iret
jno
pop
xchg
and
cmp
xchg
jle
xor
in
mov
dec
shll
cmp
mov
cmp
mov
mov
inc
and
or
adc
iret
mov
push
pop
or
fwait
add
xor
pop
je
in
push
out
push
sub
ret
loopne
cwtl
adc
in
push
rcl
mov
mov
sbb
js
in
mov
lds
push
xchg
adc
mov
lods
or
pop
adc
add
sub
or
mov
repz
mov
add
insl
cmpsb
xlat
jbe
mov
mov
push
add
outsl
xor
ret
sbb
jecxz
mov
xchg
or
fcmovnbe
mov
and
ret
cld
aaa
inc
cmpsl
sbb
roll
pusha
pusha
cmp
dec
add
fldenv
or
test
ret
jno
std
cltd
mov
adcb
lock
inc
lods
imul
jno
lret
mov
lods
testb
push
sbb
data16
pop
negb
cmp
mov
pop
or
stc
push
xchg
imul
and
sub
xorb
add
lea
xchg
jbe
push
add
mov
stos
xorb
mov
das
in
scas
or
mov
ljmp
test
pop
jno
loope
xchg
sub
add
and
or
push
jg
mov
ljmp
out
or
xor
xchg
popf
or
jno
xor
mov
adc
xchg
lret
xchg
cmpb
add
jb
xor
popa
pop
sub
jbe
mov
ds
cs
pop
mov
fwait
or
mov
adc
imul
mov
testl
jmp
adcb
js
mov
xchg
lock
stos
daa
into
es
mov
popf
loop
leave
mov
fistps
mov
dec
or
dec
dec
jecxz
in
lcall
sub
xchg
mov
lret
adc
test
and
loopne
or
imul
out
mov
stos
jbe
sbb
out
and
cmpsb
lea
mov
inc
andps
mov
jmp
inc
pop
xor
adc
pop
bndldx
dec
mov
roll
ret
jo
jecxz
mov
xchg
sub
js
fiadds
xor
bound
outsb
in
xchg
sbb
ret
sub
insl
dec
adc
ljmp
jo
cmp
xor
push
out
or
dec
pop
sub
adc
mov
mov
add
in
das
push
pop
dec
mov
rolb
mov
cmp
fadd
xlat
arpl
cmp
loop
pusha
lods
out
xor
mov
dec
addr16
into
or
imull
push
scas
sbb
movsb
popa
mov
push
jle
cmp
arpl
xor
mov
mov
xor
movsl
dec
add
fidivl
dec
pop
test
pop
scas
dec
mov
inc
lret
jl
clc
cmc
js
xchg
loope
das
ret
xor
out
ds
nop
iret
mov
loopne
addr16
cmp
dec
bnd
jmp
sub
mov
xor
ss
xchg
or
ja
stos
add
cmc
jae
leave
inc
ficompl
adc
xchg
xor
mov
jae
stos
mov
xchg
popf
pop
inc
sub
mov
xchg
xor
notl
mov
pcmpgtd
mov
out
or
movsl
pusha
cmp
test
scas
add
sbbb
shlb
testl
jae
pop
dec
iret
xchg
pop
fistpl
loop
xchg
pop
hlt
cmp
daa
scas
out
jno
fnstenv
fs
mov
and
stos
push
negb
sbb
xor
inc
lock
ds
into
mov
pop
sti
je
es
movsb
push
jecxz
loop
jecxz
dec
jecxz
int3
stos
loope
out
dec
stc
stos
incb
cmp
jecxz
and
test
push
xor
notb
js
mov
das
jecxz
loopne
popa
lock
mov
pop
inc
rclb
les
ljmp
or
pop
popf
mov
lcall
gs
hlt
mov
in
pop
gs
dec
push
subl
icebp
gs
sarl
fiaddl
icebp
sub
mov
in
out
pop
add
push
enter
pop
and
mov
push
repz
or
divl
es
lods
cmpl
pusha
mov
push
jnp
push
popa
or
jge
lods
pushl
mov
rcrl
xor
jae
xlat
or
xchg
into
cld
shll
fistps
xchg
jg
aas
mov
pop
pop
mov
push
imul
call
mov
imul
or
xor
inc
sub
pop
leave
sub
cwtl
sbbl
je
pop
jb
movsl
push
fwait
outsb
mov
into
ljmp
cmpsb
mov
in
sti
push
movsl
sub
push
les
test
je
add
adc
filds
mov
fdivp
ja
sbb
mov
repnz
jle
sbb
jno
cli
lods
xor
xchg
mov
xlat
into
and
out
inc
jecxz
stos
mov
jno
mov
mov
dec
int
mov
ret
push
pop
mov
inc
jno
xchg
lahf
mov
sahf
push
adc
and
cmc
xchg
push
xor
in
mov
push
sbb
cmc
arpl
jns
dec
loopne
test
sbb
inc
jl
lret
jge
cmp
cwtl
test
mov
cmp
fcompp
bound
dec
xchg
jle
push
insl
push
test
inc
je
outsl
sub
mov
pop
or
inc
xor
or
jno
loope
fsubrs
insb
je
or
call
mov
mov
mov
sbb
mov
jns
movsl
mov
aas
repz
push
mov
adc
incb
ret
dec
cmp
movl
or
mov
mov
adc
adc
lahf
dec
xchg
arpl
cmp
xor
push
out
iret
outsl
push
pop
xchg
popa
and
mov
fcmovne
arpl
xorb
cmpsl
mov
jne
cs
ffree
pop
fmuls
mov
and
movq
cld
mov
in
lret
jmp
je
jne
test
jnp
pop
mov
outsl
pop
lcall
std
lret
out
xor
negb
mov
shlb
scas
arpl
cmp
cmpb
push
push
mov
push
iret
fmull
push
dec
nop
test
xor
movsl
mov
adc
or
mov
ja
add
test
inc
dec
int3
mov
inc
or
test
pop
jnp
pop
imul
sub
push
xchg
fiaddl
jne
ror
adc
mov
mull
pop
outsl
call
add
daa
popa
cwtl
movsl
es
jge
arpl
and
xchg
fisubs
fstl
and
mov
xchg
mov
mov
mov
outsl
pop
push
xchg
sub
andl
rorl
pop
xor
nop
cmp
jg
pusha
out
aam
ret
dec
jmpw
xor
or
out
incl
into
test
xlat
lret
repnz
sbb
xchg
fstpt
sbb
xchg
adc
stos
mov
adc
adc
lea
fstpt
xor
xchg
loope
outsl
rcr
mov
dec
sahf
cmp
inc
ja
dec
mov
lret
lock
adc
xor
lea
and
inc
inc
rcr
cs
cli
push
jecxz
xchg
fisubl
push
inc
es
not
jae
dec
push
fsubl
dec
adc
bound
pop
iret
ja
out
add
stos
dec
popf
dec
mov
inc
enter
xchg
push
in
outsl
xchg
cli
int3
inc
pushf
mov
xor
mov
push
fbstp
adc
out
mov
lea
jbe
inc
aam
xchg
inc
add
call
mov
je
stc
sbb
jno
push
aam
mov
fdivrs
pop
sub
jo
loop
xchg
push
mov
daa
data16
push
aam
fwait
lods
out
mov
out
sbb
pop
push
xor
inc
lods
mov
pop
daa
xor
arpl
xor
dec
dec
dec
jmp
cwtl
sbb
aam
out
out
jl
xorl
xchg
pop
lea
stos
push
adc
add
test
pop
jb
jle
push
addr16
dec
push
test
jbe
push
add
jns
movsb
push
stos
pavgw
adc
adc
dec
mov
push
sbb
test
or
ficoml
das
cmp
imul
and
jno
or
jg
loopne
push
jo
mov
and
lods
jl
pop
shrb
loope
dec
lods
ljmp
fldl
cs
push
je,pt
pop
dec
arpl
scas
or
stos
call
sub
inc
shll
and
daa
mov
int3
in
inc
ja
push
fldl
push
stc
mov
and
dec
cmp
enter
je
hlt
arpl
xchg
jae
mov
dec
scas
sub
mov
jno
lea
in
flds
call
aas
stos
loopne
lcall
test
cmp
and
push
pop
mov
cmc
mov
mov
aam
cwtl
daa
xchg
rorl
and
pop
lahf
dec
jae
rcl
testb
out
mov
outsb
pop
icebp
push
div
sub
sbb
lahf
lds
out
popl
lea
mov
xchg
ss
cli
lahf
leave
out
inc
pop
inc
jmp
test
or
mov
and
leave
addr16
push
shl
in
mov
cld
inc
int3
in
fisubl
fwait
mov
int
mov
jge
pop
mov
sbb
sti
sti
sbb
push
mul
jp
enter
cmp
cmpsl
xor
cmp
pop
jle
popa
add
inc
xchg
mov
pop
mov
imull
stc
imul
xor
mov
xor
loopne
dec
rorb
and
mov
adc
add
and
inc
mov
rorl
repnz
test
aas
xor
dec
fcompl
stos
jle
out
pushf
subb
test
pop
mov
inc
xchg
inc
bound
pop
shlb
mov
inc
test
ja
dec
sarl
popf
inc
add
jl
xchg
shrl
cmc
mov
sbb
inc
xor
iret
dec
lods
rolb
into
jge
ljmp
xchg
xchg
mov
pusha
mov
outsl
sbb
fiaddl
sub
inc
addr16
ss
dec
int3
cmp
mov
std
bound
and
add
jo
inc
clc
scas
popl
in
outsb
sbb
daa
insl
in
pop
dec
cmpb
ficomps
push
jne
mov
sub
jb
jae
inc
xor
inc
cmp
cmp
adc
sarl
push
lahf
shlb
jno
inc
iret
xchg
push
shr
xlat
stos
adc
cmpxchg
jl
xchg
jnp
push
out
jnp
jg
sub
incb
jno
mov
cltd
or
insl
sarb
pop
adc
fwait
sbb
aaa
lcall
mov
jb
push
and
dec
ffreep
fildll
stc
xor
xor
and
pop
cmc
js
cmp
orb
outsl
loopne
cwtl
lock
stc
or
inc
loope
imul
subl
movsl
cld
add
in
dec
jle
rcrb
dec
lahf
jp
cli
jbe
mov
loope
fs
out
hlt
mov
rolb
mov
icebp
sbb
jns
sub
push
jp
loopne
daa
mov
mov
push
lock
mov
out
mov
movb
mov
shlb
call
ja
movsb
jg
jp
mov
addl
xor
aad
add
and
pop
cmp
mov
and
cmpl
aad
xchg
aam
add
lods
cltd
push
xor
inc
cmp
test
incl
mov
not
inc
mov
pop
xor
inc
les
arpl
adc
pop
sub
adc
and
sub
out
inc
aad
add
add
push
jmp
xor
inc
and
xor
iret
mov
popf
cmp
mov
lock
add
xlat
jmp
mov
in
ljmp
sub
add
pop
ds
dec
outsb
call
pop
jns
std
fildll
fbld
pop
jno
inc
jo
jecxz
cmp
loop
xchg
es
in
adc
cmpsb
mov
jns
sub
lds
loopne,pt
rolb
xchg
js
xchg
push
sbb
out
movsl
pop
pop
push
rcl
in
add
xchg
out
cwtl
sbb
mov
iret
push
nop
cmp
sub
mov
aas
out
pop
ja
adc
mov
loope
scas
fadds
pop
or
outsl
repnz
hlt
divl
or
xor
xchg
and
bnd
add
xchg
rorl
das
ss
outsb
dec
inc
leave
out
jge
ret
dec
mov
pop
adc
rclb
shlb
mov
arpl
xchg
nop
icebp
adc
add
in
ss
psrld
push
mov
xchg
cmc
pop
leave
mov
inc
xlat
mov
popa
push
sbb
in
mov
lock
xlat
add
add
sbb
cmp
xor
stos
push
mov
fmull
sarb
lea
jno
xchg
orl
lods
xchg
sub
or
push
out
shrb
mov
ljmp
rep
sub
outsb
xchg
es
test
adc
cld
pop
fimull
popf
jbe
and
add
inc
jp
pushf
pop
cld
push
xchg
jbe
push
xchg
push
jae
and
inc
pop
loope
out
sahf
jb
add
and
test
push
mov
lds
repnz
mov
cwtl
cmp
push
fcoml
jno
je
vmread
insb
mov
rcr
js
sarl
popa
adc
pop
movsl
push
fbstp
pop
clc
mov
repnz
int
adc
cmp
sar
xor
jns
scas
mov
pop
mov
mov
pop
adc
mov
dec
pop
sarb
dec
je
cltd
ljmp
jmp
mov
loop
int3
fs
and
loope
addr16
inc
cmc
mov
xchg
add
mov
sub
das
fsubrs
and
fwait
idivl
arpl
imul
jns
mov
sti
jae
cmp
addr16
cmpsl
movsl
aas
and
cmp
sub
and
idivb
or
mov
push
test
and
aas
push
mulb
jge
cmpsl
pop
pop
fdivrl
std
lods
int3
sti
dec
imul
sbb
sbb
sbb
mov
mov
lcall
fcompl
dec
mov
xchg
mov
mov
rcrb
ret
pusha
sub
jge
jmp
mov
cmp
fstl
mov
in
jl
stos
cli
repz
in
gs
sbb
js
cmpsl
into
mov
sub
jbe
push
imul
fxch
inc
jbe
ror
lds
jecxz
xor
lahf
bound
sbb
insl
jmp
xchg
imul
sbb
pop
add
in
cmp
inc
cmp
mov
jb
dec
sbb
adc
inc
xor
pop
rcrl
mov
pop
lea
nop
int3
cmp
xor
pop
mov
xchg
insl
sub
push
leave
and
test
sub
test
sahf
rcrl
push
in
cltd
in
pop
pop
mov
aaa
sub
mov
or
and
xchg
mov
cmpb
push
cltd
xor
ud2
adc
mov
push
stos
jmp
arpl
aas
lods
pusha
test
dec
adc
xor
inc
nop
dec
outsb
fldl
xor
inc
xor
jmp
mov
js
sub
pop
xor
data16
pusha
das
jg
add
cmpl
cmc
sub
pop
dec
scas
push
out
shlb
cld
je
int3
sub
lods
push
pop
and
lods
inc
nop
and
scas
xchg
cmp
aas
movsb
outsb
xor
mov
dec
pop
enter
mov
or
ljmp
or
fsubrs
stos
push
int
sbb
in
pop
jae
sbb
dec
or
mov
cltd
shrl
testb
daa
mov
cld
pusha
rcll
xchg
out
dec
insl
ret
enter
xor
int
enter
jae
jns
rorl
aad
inc
in
in
mov
add
outsl
movsb
jecxz
fsubl
mov
int3
xor
addr16
ljmp
pop
adc
call
mov
lods
jl
xor
fidivl
in
and
jns
shll
shll
pop
xchg
pop
dec
mov
nop
das
and
loopne
push
or
arpl
push
in
lret
sahf
jmp
sub
cwtl
cs
adc
lret
iret
stos
and
mov
ss
scas
dec
hlt
lcall
mov
sub
pushf
mov
ja
cwtl
lds
es
jbe
loope
xchg
dec
rcll
sar
mov
push
jbe
mov
add
or
ds
push
test
test
leave
add
in
mov
fdivl
mov
sub
mov
sub
addr16
mov
fcomps
pop
out
jle
push
fwait
xor
aad
arpl
cld
pushf
js
cmpsb
mov
jbe
mov
daa
cmpl
push
scas
mov
or
push
or
rorb
scas
imul
sbb
dec
jae
lods
insl
dec
add
dec
out
je
jbe
add
arpl
and
mov
adc
sahf
and
lods
mov
ljmp
daa
jbe
aas
push
out
and
mov
mov
sbb
push
fisubrs
xor
or
mov
mov
add
or
jmp
js
jp
inc
mov
xchg
jbe
mov
mov
js
fsubr
cmp
cwtl
cmp
push
jae
pushf
push
mov
int
test
inc
sahf
mov
fwait
enter
dec
ljmp
das
aad
jle
in
jb,pn
push
ja
mov
add
inc
dec
sbb
mov
repz
or
rcr
jbe
fsub
add
adc
sub
mov
shlb
mov
dec
dec
dec
gs
push
mov
loope
jecxz
cmpsb
adc
sub
gs
mov
cli
inc
adc
jbe
sub
daa
test
mov
fld
mov
mulb
push
pusha
xor
jno
btr
dec
shrl
cmp
in
push
leave
or
mov
push
push
sub
pop
loope
sahf
call
push
mov
shl
ljmp
stc
and
int
mov
xchg
lods
pop
imul
das
mov
mov
and
movsb
xchg
test
hlt
addr16
mov
and
stc
dec
sbb
xchg
lret
ja
push
incb
mov
xor
mov
imulb
pop
orl
xchg
setae
xor
xor
jecxz
jo
dec
mov
daa
in
outsl
lock
add
pop
cmpsb
pop
adc
jb
mov
lds
lahf
jnp
adc
hlt
xchg
ja
pop
mulb
aam
cmp
sub
cwtl
outsb
leave
pop
shll
jge
jne
cmpsl
std
xlat
std
into
shlb
cli
xlat
add
mov
out
icebp
mov
rclb
jns
outsb
cmp
inc
stos
xorl
push
psllq
cmc
or
push
loopne
sub
xchg
imul
lds
or
push
bound
jnp
xchg
enter
and
and
mov
add
fimull
jge
xchg
adc
sbb
ret
cli
daa
pop
xor
pop
out
jge
mov
iret
adc
es
xlat
and
ljmp
fistps
add
sub
sub
add
leave
inc
fiadds
test
adc
sub
sarl
or
out
ds
hlt
cmp
mov
sahf
data16
in
jno
jae
pop
int
and
dec
movsb
jns
inc
xchg
and
inc
fisttps
icebp
iret
lcall
ret
adc
adc
hlt
jg
loope
and
mov
movsb
jo
xor
testl
push
pop
xchg
std
xor
enter
arpl
sbb
mov
fnsave
lods
mov
leave
add
ficompl
adc
xor
mov
and
inc
shlb
mov
sub
mov
sub
clc
rol
mov
pop
daa
push
jbe
mov
cmp
loopne
pop
enter
testl
inc
push
cli
addb
into
jg
jnp
testl
js
adc
push
and
int3
mov
test
or
xchg
aam
inc
sub
imul
mov
xor
into
test
dec
in
jl
jbe
fsubs
std
pop
iret
mov
adcb
mov
mov
cmpsl
mov
into
and
cs
pop
popf
shlb
shll
xor
cmp
in
sub
push
nop
rolb
fs
inc
fmull
mov
mov
jae
clc
stos
add
gs
repnz
push
iret
repnz
repnz
pop
je
scas
jno
fucomi
or
jae
dec
popa
fidivrl
clc
add
repz
mov
aam
xor
movsl
sbb
pop
add
xchg
mov
xlat
sbb
and
jp
sbb
sbbl
xor
add
mov
insl
mov
imul
lods
lcall
xor
ret
je
xor
adc
call
mov
inc
out
and
xor
insb
mov
pushf
in
fcmovu
jo
fwait
lcall
sbb
jne
sub
ds
cmp
push
rol
push
adc
inc
push
test
loop
loope
jbe
pop
movsb
fisubrs
pop
mov
jle
jae
movsb
and
pop
in
cmp
push
std
pop
jo
sub
inc
test
lea
aam
popa
shrb
xor
fidivrl
inc
mov
dec
jmp
sbb
dec
xor
fdivrl
in
shrb
mov
push
bswap
adc
jbe
jecxz
mov
loopne
xor
inc
mov
in
js
insb
in
dec
mov
bsr
inc
lret
mov
xchg
cmpsb
inc
lds
dec
cmpsl
adc
lea
nop
jne
shrb
or
mov
adcl
jbe
pop
cmpsb
mov
ds
sub
xor
mov
xchg
stos
xor
stos
mov
lahf
or
out
out
out
psubusw
inc
dec
ds
out
pop
jo
gs
jno
daa
in
fsubrl
mov
addr16
sub
sbb
inc
jle
lods
cld
ret
lcall
lret
ret
ret
dec
sbbb
out
bnd
mov
pop
mov
pop
pop
mov
movsb
mov
sbb
xor
in
mov
imul
add
loope
aam
sbb
leave
and
mov
cmp
or
sub
xchg
outsb
push
push
push
mov
sub
enter
aaa
xchg
testb
in
xchg
popa
xor
sti
jo
call
loope
jno
std
xchg
ret
mov
cmpsl
xchg
or
enter
mov
adc
je
push
adc
cmpsb
outsl
mov
or
sti
lret
xchg
mov
dec
out
data16
jl
loope
cmp
xor
lret
cmc
sub
mov
mov
icebp
lcall
xor
cmp
out
mov
mov
adc
jne
lock
shlb
icebp
mov
jo
ljmp
bound
scas
push
outsb
add
inc
dec
and
xchg
imul
lcall
mov
mov
out
jne
scas
mov
jle
adc
dec
sub
stos
cmp
mov
push
cli
test
lds
and
mov
inc
in
cmp
xchg
lods
enter
int
outsl
adc
dec
imul
int
adc
jl
pop
mov
cmc
add
sbb
jecxz
sbb
out
mov
mov
out
and
jne
addr16
dec
mov
lret
jmp
push
xor
call
jge
jbe
dec
sbb
leave
in
rcrb
pop
ds
mov
loop,pt
push
dec
je
gs
idivb
dec
push
aas
aam
or
push
dec
mov
arpl
mov
arpl
and
and
pop
push
pop
push
mov
test
jmp
outsl
sub
cli
int
jne
mov
push
jb
sahf
and
push
push
mov
dec
pop
movsl
in
adc
push
sub
push
movsl
stos
loope
aad
xchg
xor
rclb
lods
and
dec
inc
mov
cmp
ljmp
idiv
inc
add
xor
aaa
sbb
pop
cs
les
xchg
mov
cmp
xchg
sbb
inc
lods
mov
jmp
repnz
ljmp
loopne
fwait
pop
mov
push
lret
insl
xchg
sub
or
mov
pushf
je
fisubs
or
sbb
push
mov
cmp
fbld
cmp
add
sbb
jbe
out
cs
mov
mov
mov
int
mov
nop
sbb
rol
mov
push
in
movsb
lods
lahf
xchg
xor
cltd
sahf
add
outsl
int3
or
cmp
sub
shrl
bound
loop
mov
jb
inc
push
dec
das
pop
hlt
loopne
inc
out
adc
lret
test
stos
mov
fdivl
cmp
insl
jg
push
ret
pop
push
dec
bound
jle
push
enter
fsub
shl
jmp
dec
sub
cmp
mov
jnp
xchg
xchg
popf
leave
mov
xchg
je
add
fisttpl
sub
mov
add
mov
aam
repnz
inc
icebp
jl
cli
daa
icebp
pop
cli
movsb
cli
pop
je
xchg
push
adc
aaa
test
scas
jle
into
or
sub
daa
dec
cli
dec
or
cmp
outsl
pop
push
mov
cwtl
cmp
mov
pusha
pop
pop
and
xor
mov
ss
mov
and
cmp
and
cltd
movsb
sarl
xchg
dec
xchg
stos
rorl
orl
cwtl
mov
int
movsb
sbb
xorb
sti
pop
inc
aam
push
jg
mov
les
mov
ss
jbe
pop
inc
cld
push
fs
int
imul
into
push
jns
popf
packssdw
adc
xor
ljmp
test
cmp
sarb
cltd
cmpsl
push
push
and
pop
pop
add
je
inc
mov
popf
insl
ss
sbb
adc
xchg
xchg
xor
add
dec
sub
sbb
dec
push
adc
data16
pop
sbbl
inc
sub
loopne
pop
addb
mov
aaa
dec
add
push
push
ret
sbb
gs
insl
cmpsl
stos
dec
adc
into
out
into
test
out
sub
push
mov
fcmovu
mov
out
xor
test
leave
aam
add
addl
xchg
inc
mov
sbb
leave
mov
or
leave
icebp
mov
nop
movsl
sti
xchg
xlat
outsl
mov
dec
and
jns
push
xor
pop
and
mov
scas
push
jae
sti
fdivrs
push
jl
push
push
testl
sbb
or
and
fsubrl
push
mov
mov
pop
cmpsl
sbb
adc
mov
rol
or
fdivl
je
dec
movsl
and
mov
fstpt
stos
jbe
call
inc
push
mov
aas
push
mov
and
les
xor
decw
dec
loope
mov
xor
pushf
aam
xor
pop
daa
out
cmp
adc
push
stos
xchg
adc
in
rol
push
push
fisttpll
mov
push
jno
pop
rclb
or
add
sbb
cmp
pushf
mov
ffree
push
mov
and
add
shll
lahf
mov
daa
dec
xor
ficoms
ret
nop
or
add
loope
and
inc
insb
mov
inc
lds
dec
push
mov
sbb
cmp
sarb
dec
test
imul
add
jo
or
fcmovbe
and
or
push
shll
xchg
pop
cmp
into
aaa
stos
dec
pop
jl
test
add
xchg
mov
ret
jnp
popf
outsb
out
lods
sub
lcall
jg
cmp
andl
xor
or
sbb
inc
imul
inc
and
pop
mov
sbb
xor
cmp
push
sub
sub
sub
loope
inc
xor
or
gs
pop
shll
out
jmp
cmpsb
xlat
mov
outsb
lret
bound
mov
sbb
jmp
pop
xchg
fisubrl
clc
adc
outsb
mov
adc
and
ss
aaa
jg
sahf
push
push
mov
dec
rorb
push
inc
movsl
mov
shlb
fsubl
dec
cmp
jmp
push
scas
out
loope
and
xchg
mov
sbb
cmp
xlat
xchg
add
mov
jb
bound
popa
js
cmp
dec
mov
xchg
repz
and
push
and
pop
sub
mov
fbld
jmp
mov
pop
mov
adc
stos
push
dec
cli
sub
mov
mov
std
fsincos
cmc
add
loop
sbb
add
ss
cmp
fsubr
xchg
jmp
jle
xor
cmpsl
sbb
cmp
fldl
aad
mov
pop
mov
lock
aas
incb
dec
push
sub
imulb
mov
push
adc
in
push
sbb
and
mov
or
les
cmpsb
outsl
data16
mov
cwtl
lret
scas
or
out
shlb
mov
call
scas
push
pop
push
adc
rorl
jno
lods
fnstsw
sbb
jecxz
ljmp
sub
flds
or
adc
xchg
sbb
stc
das
mov
add
fs
test
inc
mov
mov
sahf
int
in
ret
imul
mov
mov
jbe
xor
jecxz
fs
inc
mov
aaa
inc
test
aaa
out
xor
sub
xor
pop
iret
mov
cmp
arpl
mov
shl
sub
jno
dec
ljmp
push
repnz
shlb
cmp
and
xor
test
ja
movsl
outsb
xchg
das
fcoml
mov
dec
xchg
out
movsb
lret
sahf
cld
xorb
into
or
and
sub
dec
pop
insl
xlat
and
sbb
xchg
mov
sti
inc
adc
dec
repnz
dec
scas
or
mov
aas
mov
orl
enter
cmp
fisubrs
call
inc
cwtl
jae
and
push
xchg
xchg
fldenv
out
mov
roll
mov
jns
xlat
jge
dec
gs
fcomp
xchg
add
sub
mov
pop
add
mov
imul
cmp
movsb
lret
dec
xlat
adc
cli
jbe
inc
mov
xlat
aaa
fisubl
dec
in
lods
push
lea
mov
test
shll
pop
push
mov
movsb
pop
cmp
popf
jecxz
sub
cmp
dec
add
dec
lret
dec
mov
inc
jae
mov
pop
outsl
xchg
sbb
aad
insb
js
mov
faddl
imul
or
mov
sahf
movsl
xchg
icebp
sbb
mov
mov
or
fadd
fs
in
inc
daa
mov
imul
lods
nop
xor
pushf
or
mov
jmp
shr
pop
pop
adc
xor
push
popa
xchg
pop
int
jg
pop
pop
inc
cli
mov
ljmp
jge
mov
inc
xor
jno
arpl
ss
fs
push
sbb
mov
hlt
cmpl
std
mov
shlb
mov
push
test
and
or
jnp
std
mov
mov
mov
dec
cmpb
lock
mov
pop
outsb
movsb
sbb
or
scas
sbb
or
loopne
jge
push
or
lods
jl
mov
call
xchg
rcr
test
jl
cli
ss
pop
jb
dec
lock
ja
fnstsw
repnz
fsubl
in
ret
pop
mov
inc
cmpsb
mov
mov
adc
out
arpl
xor
dec
mov
leave
jb
cli
out
xlat
lret
inc
jg
fldenv
push
dec
je
sub
mov
into
loopne
hlt
es
leave
mov
addr16
outsl
add
mov
push
cmp
push
xchg
mov
cmpsb
repnz
or
sub
stos
cmc
dec
xchg
inc
adc
jns
push
add
jg
xor
add
rol
lret
ds
int
jns
fisubrl
mov
mov
in
xorl
iret
cmp
fidivrl
pop
movsl
cmc
jnp
inc
daa
dec
out
jb
pop
or
in
dec
or
shll
test
dec
ja
js
loop
push
aad
sub
pop
mov
jle
call
outsb
xchg
scas
cli
sub
push
pop
fisttpl
movsl
xor
xchg
pop
les
mov
shrl
mov
sarb
or
mov
test
sbb
mov
pop
pop
mov
push
mov
mov
in
mov
andb
dec
xor
push
sbb
insl
dec
xor
sub
aaa
mov
pop
adc
push
dec
icebp
lcall
xchg
jp
inc
clc
iret
sbb
xchg
lret
jae
pop
push
jmp
or
test
jg
shr
inc
popf
test
dec
push
cltd
lods
stos
sub
push
lds
loopne
jg
arpl
ret
into
pop
push
out
or
xor
fcoml
push
orl
and
jno
inc
out
outsb
jge
in
aas
fsubrl
sahf
inc
out
in
sub
sahf
ret
lock
mov
aad
adc
cmp
popa
stos
sbb
test
fidivs
lret
adc
lret
or
push
dec
sbb
ret
xchg
jno
comiss
pop
or
insl
fwait
out
mov
push
fistpll
push
mov
andb
pop
cli
dec
je
mov
hlt
push
mov
jmp
movsb
sub
je
in
test
pop
sub
lea
loop
and
repnz
stc
xchg
inc
cmpb
mov
adc
iret
sub
push
push
cmc
cmp
ffree
add
mov
mov
push
push
fists
jo
and
test
push
xor
ja
jno
lock
repnz
sub
insb
push
jl
mov
mov
add
push
lret
lret
push
mov
mov
movsb
inc
popa
ja
cmp
les
cmp
sub
dec
cltd
mov
data16
ja
mov
xor
and
insl
clc
sub
cli
cmp
les
sahf
std
dec
push
push
in
sub
mov
clc
std
or
and
repz
jne
gs
leave
cmp
push
xlat
push
pushf
mov
sbb
lahf
add
fsubrl
xchg
dec
mov
dec
inc
mov
les
mov
test
push
jnp
cmp
mov
es
mov
test
addr16
out
adc
fwait
inc
mov
add
in
inc
adc
repz
jbe
clc
adc
dec
dec
sub
jbe
cmp
mov
push
arpl
jg
push
in
pause
pusha
adc
xor
imul
popa
call
into
jae
loope
stos
mov
imul
popa
push
mov
fwait
in
pop
shll
je
adc
out
addr16
movsl
push
enter
pop
xor
nop
mov
leave
in
iret
mov
mov
adcl
adc
es
xor
xchg
lret
pop
in
push
fs
sarl
jecxz
neg
jg
arpl
hlt
jmp
std
xor
push
mov
mov
jg
mov
mov
test
in
ds
xor
inc
sub
sti
mov
fidivrs
push
sbb
lcall
cmpsl
sbb
dec
push
add
push
jg
jl
jo
xlat
stc
mov
jge
mov
lret
js
arpl
xchg
adc
push
pushf
and
add
xchg
cmpb
mov
into
jns
or
inc
jne
add
lds
icebp
dec
fsubl
std
jns
lret
xor
lods
mov
mov
ucomiss
mov
roll
push
cmc
adc
xor
lock
sbb
enter
sarl
mov
movsl
pop
int3
nop
add
cwtl
shll
sahf
gs
and
mov
cmp
and
mov
xor
cli
cmp
xor
ljmp
emms
ret
sub
sbb
push
les
call
rcl
int
js
lret
dec
dec
inc
and
cwtl
notb
lock
movsb
sbb
in
adc
mov
mov
mov
out
sub
aaa
and
mov
push
and
stc
mov
cmp
xor
jb
fimuls
and
mov
repz
jmp
cwtl
mov
cmpsb
pop
mov
push
bound
pusha
xchg
jl
leave
or
out
dec
cmpsl
jae
mov
loopne
cmpsl
push
pop
mov
dec
add
jl
andb
out
es
push
ds
push
divl
add
cmp
pop
mov
sub
xchg
adc
bswap
fcmovnu
add
dec
jne
bnd
push
xchg
in
stos
repnz
and
sbb
sub
adc
lds
stos
jecxz
mov
sub
dec
sarb
add
jbe
mov
sbb
nop
mov
sbb
popa
sub
cmpsb
jp
cwtl
std
mov
nop
insl
fnstcw
sub
in
negl
push
and
and
mov
mov
and
in
fnstcw
push
jae
push
in
popa
sub
and
pop
pop
pop
fwait
pushl
gs
jnp
sub
xlat
pop
inc
lock
mov
je
or
popf
popa
dec
insl
outsb
rcrb
ljmp
lock
ret
cwtl
int
stos
stos
push
or
cwtl
sub
jnp
or
lods
jmpw
jo
leave
gs
xor
dec
sub
fisubrs
out
xor
scas
fnstenv
call
jg
aad
or
adc
test
jae
and
nop
add
shlb
ss
pusha
mov
lcall
and
into
fbstp
sub
popf
mov
adc
out
add
mov
inc
pop
pop
les
inc
scas
imul
mov
and
fdiv
bound
mov
out
sbb
shr
movsl
or
jg
mov
movsb
scas
xchg
test
stos
inc
mov
sbb
inc
cld
aad
lds
pop
outsb
lods
pop
xchg
or
fwait
arpl
jl
inc
mov
mov
sbb
jnp
scas
cmp
pop
pushf
popf
cmp
push
fcompl
insb
add
jp
mov
scas
repz
jmp
xor
inc
outsl
pop
inc
push
arpl
mov
adc
or
pop
jne
and
leave
insl
jbe
jle
or
testb
xchg
pop
or
add
cli
pop
test
and
and
inc
or
cmp
pop
cwtl
mov
xchg
push
push
jge
mov
lock
push
push
negb
aam
push
jge
pop
into
push
lret
mov
lret
xor
inc
lods
popf
out
push
jg
lahf
mov
icebp
cwtl
adc
mov
adc
push
xor
sbb
push
push
or
mov
xchg
and
dec
sub
sub
xchg
push
cld
mov
mov
gs
inc
add
add
sub
mov
out
pop
xorl
clc
inc
sti
push
fistpll
jp
nop
add
add
sbb
xlat
xchg
jl
sbb
cs
mov
jl
xchg
insb
jmp
dec
sbbl
lock
xor
popa
inc
popf
movsl
les
dec
and
arpl
push
push
xchg
lea
repnz
xchg
mov
cmp
jb
mov
int3
mov
xor
adc
or
mov
shrb
into
inc
mov
inc
lcall
pop
add
rclb
sbb
loope
movsb
cltd
pop
iret
jmp
jg
inc
pop
xchg
push
js
loopne
hlt
insb
imul
push
inc
jb
stos
pop
xchg
loopne
pop
sbb
lea
es
pop
fidivl
xor
mov
sbb
sub
fwait
lret
ljmp
push
lcall
pop
aaa
and
push
mov
mov
dec
mov
xchg
getsec
sub
pop
and
fbld
ss
or
popa
push
mov
mov
imul
push
stos
push
push
test
js
or
mov
stos
adc
adc
cmc
in
dec
sub
daa
xor
jmp
inc
sub
fisttps
mov
es
and
or
mov
sti
mov
sub
xorb
scas
push
xor
inc
and
dec
add
pop
jecxz
add
mov
dec
dec
aam
repnz
sbb
lock
adc
pop
mov
xor
in
push
sub
add
or
sub
std
pusha
pop
mov
rclb
into
cmp
sbb
pop
or
cmp
push
sub
aad
jo
push
jnp
sarl
inc
cmpsb
mov
imul
scas
int3
or
adc
adc
and
jg
std
orb
cli
jb
nop
fucomp
loope
cmc
jmp
or
push
or
lds
ljmp
mov
mov
rcrb
dec
dec
sub
sub
mov
sub
shr
idivl
mov
xor
push
arpl
xor
mov
cmp
fildl
xor
shlb
xchg
cwtl
call
out
cli
roll
lret
test
sub
lods
xchg
inc
into
cli
dec
fimuls
test
aaa
adc
mov
leave
ljmp
mov
push
enter
scas
rol
mov
push
loop
cmc
add
xchg
sarb
les
push
call
jo
cmpsb
push
fcom
lret
jp
xchg
out
and
shll
dec
std
ds
sub
pop
dec
inc
mov
icebp
data16
sub
addb
adc
leave
int
clc
mov
xor
or
push
mov
pop
lcall
or
sub
outsb
pop
in
test
xor
inc
scas
push
dec
cld
bound
je
jl
das
mov
cmpsl
mov
imul
std
sbb
lea
pop
jo
pop
xchg
divb
cmp
imul
sbb
icebp
fidivs
jmp
cmpsb
sub
loop
sub
xchg
popa
in
dec
scas
xchg
inc
data16
mov
push
jns
cmpl
cmp
mov
mov
mov
inc
xchg
fucom
lock
test
imul
addr16
test
mov
repz
shlb
cltd
pop
cltd
lret
sahf
add
les
test
subb
mov
push
add
sti
ret
mov
ja
into
ror
pop
lret
mov
mov
lea
daa
movsl
and
cmp
add
sub
or
popf
orb
adc
jecxz
es
leave
jb
push
mov
nop
js
int
dec
imul
dec
pusha
test
dec
mov
dec
jmp
adcl
xor
sbb
sub
dec
inc
push
mov
jmp
std
pop
jle
pushf
adc
in
je
push
cmpb
sub
pop
test
fidivs
fwait
mov
mov
mov
xchg
mov
adc
jbe
mov
jecxz
jae
scas
movsl
icebp
addl
cmp
jbe
unpckhps
sbb
adc
dec
xchg
mov
lahf
jb
pop
stos
fistpll
xlat
movsb
push
xorl
adc
mov
inc
lea
dec
mov
mov
lods
out
pop
rol
pop
lods
cli
sub
jl
add
loop
call
lods
jno
and
mov
push
push
pop
loope
adc
sub
xchg
jp
ret
outsl
orl
add
xchg
andl
xchg
cmp
xchg
mov
jbe
fistl
andb
scas
mov
dec
cmpsb
inc
enter
cmc
iret
in
sbb
iret
pusha
ds
mov
mov
popa
fsubr
popa
sub
lds
or
fnsave
pushf
cs
in
adc
mov
mov
inc
jmp
and
dec
movsb
mov
xor
inc
and
jae
xchg
jg
xchg
inc
int3
mov
xchg
xchg
ljmp
push
push
and
imulb
loop
add
pop
sarb
inc
cmp
inc
mov
sahf
testb
mov
push
xor
jge
cmp
add
imull
xlat
mov
dec
jl
xlat
scas
xchg
leave
repz
inc
xlat
inc
lret
jl
pop
xlat
sahf
loop
push
femms
adc
jae
cmc
mov
mov
add
xor
mov
cmp
aaa
fabs
dec
jae
call
dec
dec
jge
dec
pop
mov
jb
scas
mov
imul
pop
adc
add
cli
aas
push
int
inc
dec
mov
pop
jne
cmc
add
inc
test
in
cmp
std
cmp
gs
popa
scas
lcall
add
movsl
mov
dec
xchg
jl
ficomps
pop
xchg
cmp
mov
mov
outsb
mov
fwait
xor
pushl
ja
ret
sbb
jp
mov
out
popf
push
insl
jle
adc
out
jnp
mov
pop
mov
mov
add
pop
es
mov
fstps
inc
pop
mov
dec
popf
fs
mov
in
pop
mov
sub
or
mov
ret
idivl
enter
inc
jno
sbb
cmp
sub
xlat
repz
mov
inc
add
and
xor
into
cld
icebp
jp
dec
mov
and
pusha
rcr
lret
sbbl
xchg
adcb
and
add
loope
jmp
aas
sub
stc
sub
clc
xor
inc
add
stc
mov
push
sbb
or
cmpsl
out
inc
outsl
sub
pop
cmp
fwait
sub
push
sahf
or
lret
add
dec
inc
bound
decl
pop
dec
cmpsb
cmpsb
cmp
aad
jmp
aam
jmp
xchg
shll
xchg
in
dec
inc
and
ss
dec
pop
jmp
ss
fwait
mov
xor
scas
lea
out
subb
in
fldt
pop
pushf
xchg
testb
aam
lahf
jle
add
dec
test
lret
movsb
out
xor
mov
adc
out
stos
and
popf
pop
jns
push
xor
cmp
enter
in
loope
push
lahf
les
mov
stos
pop
push
push
aaa
sbb
addb
repnz
add
fstl
cmp
jp
in
sbb
fdivrs
pop
push
sub
mov
imul
call
mov
or
mov
insb
fwait
pop
es
jb
xchg
fdivrs
imul
test
push
mov
pusha
loopne
mov
push
fnstcw
out
cmp
jne
and
push
lcall
adc
inc
mov
inc
cmpsb
xor
lods
push
xchg
ljmp
inc
xchg
outsb
jnp,pn
sub
add
pop
add
and
ret
and
icebp
cmpsl
sbb
movb
and
mov
lahf
mov
and
test
ds
mov
insl
cwtl
cmp
rcrb
hlt
mov
in
in
mov
stos
clc
inc
popf
and
mov
je
js
std
and
sbb
push
adc
add
mov
out
stos
sarl
leave
test
jmp
push
cmp
ds
ret
push
ljmp
jp
pushf
mov
jle
insb
ss
or
scas
fistl
cmp
outsl
mov
out
dec
xchg
and
sub
inc
imulb
inc
and
jmp
aas
mov
fadds
adc
call
icebp
movsl
pop
test
dec
pusha
dec
mov
sbb
jp
aam
lahf
mov
mov
ret
xlat
sbbb
mov
stos
loopne
ret
mov
enter
imull
fsubr
jmp
das
std
repz
xchg
sbb
icebp
addb
mov
fisttpl
jb
mov
cmp
scas
push
inc
jmp
mov
push
outsb
shll
push
inc
fidivs
push
std
sbbb
dec
mov
imul
mov
pop
lods
fcmovnu
in
rorl
mov
push
push
pop
push
outsb
stc
cmp
test
xlat
sub
inc
pop
dec
in
mov
dec
jmp
test
dec
mov
dec
fbld
xor
lods
addb
out
test
mov
push
sbb
sti
push
out
pop
xor
or
mov
and
mov
clc
pop
dec
jae
daa
sub
rcrb
jl
loope
movsl
subl
sub
mov
call
lods
imul
sub
cmp
pop
iret
loopne
aam
xchg
mov
cltd
xor
jmp
pushf
out
fdivrs
fdivs
dec
movsl
stos
pop
inc
xchg
in
cmp
push
aam
mov
mov
fcmovnu
stc
dec
cmp
push
ja
rorl
outsb
jno
insb
pusha
mov
push
pop
arpl
jbe
not
jae
mov
inc
inc
arpl
fs
cs
stos
jecxz
pop
pop
cmpl
inc
jno
insl
push
jnp
xor
daa
lds
addr16
cmp
pop
sub
mov
call
sbb
add
pop
push
adcl
popf
inc
sbb
aad
pop
jle
inc
add
push
repz
sub
scas
jne
add
scas
lods
mov
test
sti
jmp
rolb
out
aam
scas
mov
fsubrs
loop
pop
xchg
lods
adc
jge
jp
pushf
inc
mov
adc
mov
push
and
xchg
or
sub
and
subl
mov
mov
leave
js
rcrl
loope
ss
sub
or
out
pop
clc
adc
xor
addr16
pusha
ds
mov
xor
mov
and
cwtl
testb
rcrl
andl
mov
in
repz
or
sti
out
push
sbb
pop
cmp
ret
adc
cmp
push
insl
jg
mov
mov
fsubrl
sub
ja
and
and
stos
xchg
jbe
mov
pop
filds
or
mov
adc
jne
in
or
xor
jnp
popf
pop
inc
popa
jmp
sbb
xor
stc
scas
fs
cmp
sub
int
out
out
xor
in
push
sarl
por
sub
popa
pop
mov
aam
pop
fsubp
cltd
ret
or
loop
xor
enter
inc
mov
and
leave
xchg
inc
push
das
jge
cmpsl
outsl
push
rorb
aam
loop
pushf
lret
data16
call
or
pop
push
sbb
and
sub
das
mov
jmp
sbb
push
ja
sbb
lahf
cli
cmp
sub
scas
ja
les
iret
in
testb
shll
jno
xchg
pop
scas
int3
adc
daa
flds
testb
into
arpl
mov
sub
add
xlat
pushf
lods
loope
push
pop
inc
fidivs
jo
in
cmpsl
fs
insb
xchg
sbb
scas
or
sub
add
xor
stos
arpl
in
dec
fs
insl
inc
pop
cwtl
mov
push
scas
xchg
lret
xchg
mov
xor
test
mov
jle
xchg
mov
xlat
inc
push
push
outsb
shr
sub
jns
sbb
fadd
dec
mov
add
icebp
xor
jno
sub
xchg
je
ret
aaa
fsub
mov
sarl
movsl
movsb
pop
dec
mov
outsb
dec
dec
cli
xchg
mov
ja
fstl
stc
data16
push
xlat
aaa
jnp
mov
inc
xchg
lret
cmp
inc
in
or
jne
cmp
and
adc
push
cmp
or
fnstenv
scas
sub
lds
fs
xor
mov
data16
or
sbb
loopne
adc
mov
cs
stos
pushf
je
inc
fdiv
dec
pop
sub
cmp
ret
mov
xchg
xor
sbb
nop
lea
aad
or
fsubl
lods
sbb
mov
sub
movb
nop
xchg
push
in
and
aad
cmpsl
cltd
dec
pop
xlat
dec
test
stc
test
xchg
mov
mov
nop
loop
mov
rclb
cmpsb
sub
fstpt
xchg
and
mov
push
pop
adc
imul
data16
cmpsl
imul
and
mov
scas
fwait
dec
and
jo
cmp
scas
hlt
pop
adc
push
imull
pop
lret
jle
daa
into
jecxz
xor
leave
push
push
jae
insb
pusha
pop
je
sub
pop
jecxz
ss
sub
inc
enter
mov
aam
push
add
insl
or
jnp
pop
outsb
and
mov
pop
add
lock
out
pushf
push
mov
hlt
ret
gs
sarb
fcmovnu
addr16
adc
out
test
jnp
sbb
xchg
loopne
das
cmp
push
lahf
repz
push
nop
fsts
xor
xchg
fcomip
test
cmp
xchg
xor
sub
out
rcrb
xor
roll
mov
dec
lds
cli
xchg
js
add
lock
sub
jmp
sub
xchg
outsb
mov
or
shl
mov
shrb
jp
loopne
into
mov
mov
shll
sub
out
test
mov
mov
sbbl
rcrb
loope
or
mov
add
lods
cmp
fcomps
ja
pop
cmc
xchg
mov
loop
mov
imulb
fnsave
add
jle
and
cltd
out
mov
mov
add
mov
pop
and
decb
jp
lea
ja
addr16
or
movsl
push
nop
ja
mov
inc
lahf
lret
and
mov
scas
std
sub
gs
inc
clc
test
sub
mov
cmp
or
aam
andb
cmpsb
rcrl
rcl
adc
or
stc
test
orb
cmp
add
ss
fs
pushl
repnz
inc
stos
repz
lods
repz
sub
cmp
dec
dec
adc
aam
dec
divb
scas
daa
push
xchg
jecxz
mov
leave
jnp
cltd
mov
movl
clc
xchg
sbb
sbb
or
xchg
mov
stc
add
pop
mov
popa
in
insl
lahf
lock
cmp
in
shl
jb
mov
std
sbb
ret
sub
add
je
sub
dec
adc
push
sbb
addr16
out
test
add
pop
out
mov
call
inc
daa
push
pop
adc
sub
test
rcll
cmp
bnd
mov
imul
adc
das
push
fstl
push
and
out
cmp
or
test
jae
ss
lods
out
out
loop
iret
filds
sub
add
stos
das
imull
xor
mov
in
jp
push
dec
in
loope
add
andb
int
xchg
xchg
ficomps
push
daa
cmp
sub
jno
jmp
loop
mov
and
pop
aam
hlt
hlt
xchg
adc
push
insb
pop
pushf
dec
cli
cmp
test
xor
fdivrl
jle
push
ljmp
cmc
jmp
shrb
pop
orl
jecxz
lret
out
mov
inc
jns
and
mov
xor
aad
dec
testl
add
call
sbb
xor
test
rcll
incb
in
jbe
ss
and
loope
mov
pop
enter
and
fsubr
aaa
pop
jge
cmpsb
push
dec
lcall
pop
dec
push
pop
push
sahf
nop
sbbb
flds
stos
jg
popa
gs
out
out
or
movsb
das
mov
clc
ljmp
mov
jecxz
xchg
adc
iret
or
push
outsl
loopne
xor
addr16
movsl
cmp
aad
repz
mov
mov
sahf
mov
mov
mov
mov
cmp
push
push
push
mov
pop
mov
rclb
subb
jmp
inc
out
mov
and
loope
stos
fsubrs
sarb
cs
push
jecxz
pop
test
je
rorl
movsl
nop
ror
lret
pop
xor
lock
cmp
add
test
pop
jp
jmp
xsave
inc
popa
mov
push
add
adc
mov
stos
add
jnp
xlat
xchg
mov
ja
out
in
cmc
adc
cmp
pop
push
rcr
adc
fwait
xor
shll
xor
xor
pushf
dec
or
adc
nop
insb
lods
push
scas
adc
lds
clc
adc
pop
xchg
int3
ljmp
clc
adc
je
movb
out
outsb
add
mov
xlat
push
lock
test
xlat
inc
cmpsb
lds
sbb
push
aad
add
mov
lds
pop
into
pop
jg
outsl
pusha
push
lret
pop
push
movsb
into
leave
sbb
outsl
mov
loop
leavew
ja
and
enter
adc
xchg
or
aaa
cmp
das
pop
adc
hlt
cmp
pop
insb
mov
imul
adc
stos
aaa
jb
int
in
adc
lods
add
movb
scas
xor
aad
in
xor
cmpsl
jg
jg
or
mov
mov
jg
and
inc
ror
mov
ret
sub
xchg
addl
xchg
inc
mov
ret
adcl
add
dec
sti
push
repz
mov
dec
repz
popa
add
leave
xchg
call
xchg
aaa
enter
in
dec
imul
inc
and
test
popl
negl
and
jbe
test
ss
mov
test
xchg
adc
outsb
jmp
mov
out
iret
scas
data16
sub
enter
das
cmp
push
sub
in
jmp
or
sbb
sbb
mov
jl
cs
push
mov
std
icebp
repnz
dec
inc
insb
loope
ret
aad
inc
add
leave
and
int
inc
xchg
sti
jmp
add
ret
sub
lods
vmread
xlat
jne
cmp
add
fnstcw
fnstcw
push
std
dec
dec
add
xor
push
sub
repz
mov
push
adcl
sub
push
xchg
push
sbb
mov
sarl
js
loopne
insb
sub
pop
rcrl
lock
pop
jmp
and
adc
pop
jecxz
sub
sbbb
fs
fistps
dec
push
xchg
cmpsl
sub
clc
mov
xor
pop
fisubs
cmp
out
ret
out
movsl
add
and
das
les
mov
out
push
lods
stc
in
dec
leave
xor
jnp
lcall
hlt
inc
in
pop
pop
jmp
xchg
adc
mov
mov
push
inc
js
dec
xlat
cmpsl
in
inc
adc
push
fists
ljmp
data16
std
mov
push
and
jne
insl
pop
and
add
push
mov
xchg
jecxz
xor
divb
adc
add
call
inc
mov
push
inc
add
das
sahf
fstpt
xchg
xchg
dec
repnz
rol
mov
jmp
and
or
cs
sub
pop
sub
ljmp
js
dec
es
ljmp
test
adc
jno
inc
ds
dec
mov
out
rol
cmp
fdivrl
adc
aaa
shll
pop
sbb
dec
add
push
sahf
sub
sub
sub
sahf
ret
cld
sahf
xchg
call
loope
lahf
outsb
or
vpunpckhwd
negb
daa
arpl
andl
jns
rorb
cmc
insl
inc
lods
rolb
and
fildll
popf
cmp
xor
mov
repnz
cmp
sbb
push
xor
cs
pop
and
lret
out
xchg
add
push
fs
fs
or
inc
arpl
push
inc
mov
adc
jbe
fildl
mov
add
imul
stc
mull
xchg
dec
dec
mov
idiv
repnz
lock
push
scas
mov
xor
cmpsb
and
clc
xchg
pop
push
testb
sub
fdivrs
jo
mov
jp
ja
and
inc
push
jnp
icebp
lods
jg
aas
loop
nop
or
psubq
out
je
pop
adc
movsl
mov
jmp
test
loopne
call
and
in
dec
not
sub
mov
mov
jns
add
jnp
aam
std
ret
insb
mov
push
ss
notl
fcmovb
aaa
lds
mov
out
icebp
xchg
imul
xor
test
sti
popf
jp
lret
hlt
fnstsw
jbe
inc
or
push
push
mov
pop
mov
dec
fsubrs
js
insb
shl
jno
sbb
movsb
rclb
movsb
lods
sysexit
pop
sbb
lret
pop
cld
int3
sbb
js
popa
das
or
or
push
and
inc
jecxz
ficompl
out
in
pushf
or
add
and
ja
out
sbb
sbb
test
push
mov
pop
test
and
orw
sbb
and
int3
xor
jl
loopne
leave
fmuls
fdivl
xor
pop
mov
cmp
or
xchg
repnz
or
cmpsl
cmp
test
fwait
scas
mov
inc
mov
push
add
push
daa
jmp
gs
pop
add
mov
cld
hlt
fnstcw
lods
int3
mov
jne
insb
lods
push
into
xor
data16
leave
sbb
cmpsb
sbb
dec
pushf
jmp
mov
ja
sub
mov
mov
in
aas
fiadds
ss
pop
aam
dec
xchg
mov
bound
mov
loopne
adc
add
sbb
loop
sub
and
les
js
or
shll
cld
out
call
mov
sub
mov
je
jg
sub
bound
pusha
push
aaa
push
cmc
sub
fs
outsb
xlat
repz
and
cmp
inc
dec
ret
pushf
sbb
xchg
jne
cltd
scas
or
xor
lret
loope
lahf
clc
sar
adc
and
mov
xor
and
scas
cmp
outsb
and
es
outsl
shlb
push
js
call
loop
dec
xrelease
jg
testl
xlat
popf
int
xor
and
lods
mov
ja
jge
sbb
or
inc
cwtl
jge,pt
shrb
push
sub
repz
dec
dec
ds
fnstenv
cmpsl
mov
pop
rcll
rcl
icebp
icebp
in
pop
xchg
sarl
mov
int3
je
lods
adc
cmpl
xor
pusha
jg
mov
pop
cmp
dec
mov
dec
add
jo
pop
xchg
in
cmpsb
subb
pop
cmp
loope
iret
rcrb
movsb
push
xor
andb
cmpsl
test
cli
mov
in
mov
out
adc
jmp
inc
repz
shll
add
mov
push
loope
add
ljmp
adc
cmp
inc
int3
or
lds
push
mov
sbb
cmp
leave
nop
mov
fucomp
cmp
fidivrl
jo
mov
sub
mov
lcall
pusha
enter
adc
sahf
cmpsl
jle
divb
jae
pop
mov
je
int
cmp
les
pop
fiadds
inc
pop
sub
and
xlat
out
lea
jno
das
mov
inc
add
mov
jmp
mov
sbb
sti
js
pushf
shlb
stos
pop
sti
push
fwait
add
icebp
popa
lret
shrb
mov
xor
push
adc
push
sbb
mov
gs
mov
sbbl
xchg
data16
nop
mov
sbb
imul
daa
ss
daa
xor
mov
in
out
cmpsb
xchg
test
pop
test
mov
out
xchg
test
jns
xor
hlt
mov
int3
pop
xchg
or
ret
out
ds
sub
lods
out
aaa
and
push
push
xchg
testb
loop
popf
jmp
cmc
movsl
push
inc
ror
push
inc
dec
jbe
push
int3
and
jo
faddl
jmp
fadd
jle
aaa
imul
ficomps
and
xlat
fcomps
and
sysret
ret
cli
lahf
cmp
cs
cmp
and
jl
xchg
mov
rcr
xlat
pop
adc
inc
ljmp
xor
adc
cmpsb
mov
rcrb
sbb
adc
cs
push
lds
setp
mov
adc
push
mov
mov
pop
bound
lret
jns
add
or
xrelease
pop
pusha
int3
cmp
insb
jecxz
ss
sub
xchg
fisubl
mov
dec
and
mov
push
inc
pop
pusha
mov
scas
or
push
xchg
cld
cld
mov
lds
jns
jl
cmp
dec
adc
imul
lret
test
mov
and
arpl
in
fldcw
add
pop
jecxz
mov
sub
adc
mov
scas
push
fs
sub
cmp
addr16
aaa
ds
or
or
mov
jecxz
mov
fistps
sbb
ljmp
je
sub
shl
mov
addr16
negb
in
xchg
sub
pop
xor
rcrl
adc
loop
movsl
adc
cli
inc
push
daa
mov
or
sbb
sbb
mov
jae
aas
mov
push
andl
xlat
sub
outsb
ret
sahf
out
aas
repz
jle
ror
xlat
lds
in
add
js
ja
inc
xchg
cmp
fiaddl
or
inc
popf
movsl
addl
negb
pop
ret
mov
and
xchg
outsl
inc
and
xor
call
and
sbb
inc
push
dec
clc
jns
idiv
movsb
xor
lcall
jp
xchg
cmp
mov
les
js
cmpsb
icebp
xor
test
rep
sub
outsl
sub
jns
mov
iret
lds
xor
or
xchg
lods
dec
cltd
xlat
lret
dec
push
movsl
loop
pextrw
andl
xor
fndisi(8087
shll
xchg
aad
mov
shlb
sub
pop
pusha
and
imul
xor
mov
sub
xchg
aam
inc
cmpsl
daa
into
hlt
xor
lea
fsubr
mov
sub
sbb
xor
lds
sub
pushf
lock
aaa
inc
sub
push
loope
ja
dec
cmp
sbb
sti
mov
femms
dec
testl
push
fldenv
dec
dec
lods
jnp
ss
fdivl
sbb
sahf
icebp
mov
xor
ret
insl
sub
fadds
mov
int3
cmp
adc
sbb
mov
push
cmpsl
mov
sub
mov
jg
xor
mov
das
or
js
insl
xchg
cli
gs
pop
fmuls
add
lds
xchg
add
jle
mov
mov
sub
ret
pop
or
out
clc
inc
stc
clc
adc
ds
mov
pop
lods
fisubl
ret
fwait
xchg
cmp
pusha
mov
stc
or
scas
rol
test
int3
inc
or
or
pop
popl
and
and
aas
mov
out
adc
movsb
inc
fndisi(8087
or
cmp
pushf
fwait
inc
push
dec
mov
jb
xchg
enter
mov
cmpsb
fsubr
mov
or
mov
imul
movsl
andl
repz
sbb
out
stos
push
or
jecxz
sti
insb
jge
ja
cmp
outsb
or
popa
fisubl
test
mov
ja
ficomps
sbb
insl
mov
sti
cltd
mov
aas
jle
lret
mov
pop
pop
pop
movsl
sbb
adc
mov
dec
sub
xor
cmp
or
xchg
mov
clc
jnp
lods
dec
xchg
or
push
push
jge
pop
jne
repz
xchg
rorl
sbb
or
inc
or
ds
sub
sahf
call
ret
cmpsb
imul
inc
gs
xor
stc
stos
or
xor
adc
push
cmp
add
mov
and
out
scas
xchg
int
f2xm1
mov
xchg
sti
pushf
test
jnp
or
and
and
fucomip
jecxz
cmp
enter
imul
ret
jae
jae
imul
push
rolb
or
xchg
movsl
push
xchg
mov
loopne
xor
mov
fimuls
jne
dec
jg
mov
xchg
xchg
into
dec
add
popf
aas
xor
mov
and
arpl
inc
loopne
push
jle
int
jo
add
add
xor
inc
es
push
cmpl
scas
ficompl
sub
cmpsb
test
loop
push
aas
xchg
shr
aaa
jecxz
lcall
push
lret
mov
inc
cs
adc
jge
jbe
sub
popf
pop
push
and
imul
mov
lea
jecxz
or
push
mov
adc
pop
call
xor
aam
pop
xchg
imul
fs
mov
mov
sub
pop
leave
std
mov
push
push
div
push
sarl
sbb
xor
inc
add
ret
arpl
push
or
pop
es
xor
mov
add
and
sbb
stos
dec
out
lcall
push
push
pop
les
arpl
les
add
mov
test
mov
inc
sub
pop
ficoml
mov
mov
fs
fst
leave
or
and
mov
sbb
mov
fwait
jl
inc
aaa
pop
dec
jle
je
fistpl
je
rcrb
stos
outsb
sub
mov
mov
repnz
ja
jns
pop
addr16
push
mov
xor
cmp
sbb
insl
mov
popw
stos
aaa
scas
adc
dec
mov
ljmp
push
int3
dec
popf
mov
jno
sub
mov
push
mov
pop
or
jmp
mov
pushf
jne
xchg
mov
insl
xchg
xchg
cmp
push
les
add
dec
mov
jmp
adc
or
daa
mov
push
jo
push
pop
mov
and
je
mov
xor
xchg
daa
sub
sub
mov
adc
mov
ss
pop
loope
int3
iret
incb
sub
cmp
xor
push
and
xchg
jg,pn
fwait
test
test
or
hlt
adc
mov
rolb
or
ffree
mov
and
mov
mov
fstps
sub
dec
add
out
push
mov
xorb
andl
dec
into
jae
mov
movsl
cmp
xchg
mov
pusha
lret
pop
les
mov
or
mov
in
and
int3
repz
cmp
pop
jns
fs
aaa
cmp
shrl
or
roll
cmp
loop
pop
rep
fsubrs
pop
inc
mov
sbb
lcall
arpl
lahf
sub
std
mov
xchg
aad
imul
sti
sbb
outsl
sub
mov
cli
pushf
outsb
sbb
xor
lahf
cld
xor
push
andl
std
xor
outsb
mulb
leave
xorl
sub
cmpsb
lock
sbb
xchg
cmp
pop
xor
xchg
gs
adc
rol
jbe
enter
scas
int3
or
lret
icebp
and
ja
xor
test
mov
enter
adc
aad
aam
js
jp
test
fbld
jg
pop
sub
inc
push
jmp
jmp
stc
arpl
dec
mov
sbb
jp
sub
ss
mov
cli
jg
sub
inc
lods
xor
aas
pop
xchg
dec
dec
cld
popa
mov
loopne
popa
movsb
mov
add
or
dec
jne
mov
inc
imul
push
adc
ljmp
push
push
dec
push
adc
mov
mov
mov
push
enter
jbe
mov
repz
push
out
inc
cmpsb
enter
mov
push
js
inc
pop
popf
jp
push
mov
inc
repnz
xor
enter
cmpb
cmp
fcom
test
ret
ficompl
pop
mov
insl
mov
jae
addr16
jae
cwtl
loop
xchg
inc
dec
jecxz
jns
mov
sti
mov
bound
jno
add
or
mov
xchg
pop
inc
xchg
in
mov
pop
mov
in
aaa
ss
loop
xchg
jns
jo
jae
das
sbb
movsl
add
lcall
insl
jns
mov
push
mov
push
shll
imul
daa
cmp
enter
rcr
icebp
xchg
xor
sbb
pop
fst
into
xchg
inc
leave
and
or
pop
out
add
arpl
sbb
pop
adc
bound
mov
enter
cwtl
pop
pop
jl
xchg
lods
loope
inc
jg
fs
or
push
or
push
pusha
loope
cs
rorl
repz
cmp
mov
xchg
fs
xchg
out
mov
mov
fiadds
lods
xchg
xchg
ljmp
or
xor
lds
push
push
jmp
push
loopne
mov
cmc
sub
std
decb
pop
cmp
outsl
mov
push
mov
pop
jmp
outsl
sbb
cmp
addr16
inc
push
and
fdivrl
jns
jbe
sti
cmp
or
pop
xor
pop
mov
mov
push
sub
lret
xchg
mov
push
xor
sub
mov
and
sbb
jnp
sbb
cld
mov
pop
in
push
aam
cld
push
notb
mov
jb
xchg
cmpsb
push
push
int
pop
ret
cmpsb
xor
mov
cmpsb
cmp
fcoms
mov
pop
jne
js
leave
mov
and
mov
out
jnp
inc
mov
fcoml
jg
lock
cmp
cltd
nop
mov
stos
adc
pop
push
mov
dec
mov
adcl
xchg
mov
push
fs
popf
inc
test
popf
fadds
mov
jmp
rcr
jmp
pop
dec
mov
jne
xchg
clc
sub
scas
ja
das
jp
mov
repnz
mov
adc
xor
push
cltd
std
inc
or
inc
adc
testb
div
neg
mov
addr16
sbb
testb
or
jmp
loope
or
jmp
mov
pusha
jo
dec
movsb
pop
dec
mov
es
fbld
push
pop
scas
mov
lds
mov
mov
ja
test
leave
rol
lods
lcall
movsb
or
adc
and
sub
fimull
cmpsl
popf
ffreep
jno
scas
push
adc
or
aam
mov
fs
iret
sub
inc
ja
add
test
popa
repnz
ljmp
mov
jno
and
xchg
in
stos
js
inc
fwait
insb
xchg
ds
sub
push
int
mov
lods
movsl
mov
ret
or
lcall
aad
movsl
sub
inc
das
push
jg
inc
xchg
mov
ror
add
lret
out
int
in
add
fsub
in
call
jae
and
addr16
xchg
jecxz
inc
or
pushf
test
test
and
sub
call
scas
inc
push
jecxz
out
mov
pushf
pusha
mov
xlat
je
mov
and
push
inc
sti
lods
fdivp
jne
sub
ficomps
gs
mov
arpl
sarb
and
sub
or
dec
or
out
xchg
dec
xor
loopne
pop
ljmp
in
add
jno
ret
sbb
pushf
fcoms
sbb
lds
mov
iret
mov
and
in
lret
mov
lahf
pushw
out
sbb
sahf
mov
dec
cld
aad
scas
std
inc
lahf
call
shl
stos
jl
pop
jne
sub
mov
add
xor
arpl
test
fwait
inc
cmpsb
gs
mov
inc
into
adc
mov
jo
repz
imul
gs
stc
or
cwtl
cmp
fidivrl
pop
js
jecxz
push
popf
sub
jnp
dec
jge
mov
pop
mov
mov
jmp
imul
call
mov
mov
add
mov
and
bound
scas
add
sub
stos
mov
filds
mov
stos
sub
nop
mov
out
inc
sbb
pushf
sbb
and
fs
inc
xchg
mov
mov
arpl
lret
sarb
in
pop
bound
iret
dec
xchg
cmp
out
arpl
icebp
cmpsl
lea
out
cmp
into
cmp
jmp
ljmp
test
cwtl
lods
int
sub
adc
gs
out
xchg
or
jmp
dec
rcl
cmp
jo
jmp
xchg
sbb
jbe
cmp
cs
push
push
pusha
imul
mov
xlat
mov
mov
fsts
and
lret
or
xchg
movsb
ficompl
mov
fstpt
sub
fcmovnu
jg
xor
jae
inc
xchg
sbb
ds
hlt
lods
add
out
sbb
push
cltd
cld
cmc
push
ds
les
lret
or
or
sahf
rcrl
nop
push
test
and
xor
push
and
sahf
mov
xchg
adc
into
lahf
cmp
std
imul
cs
dec
psraw
mov
cmp
or
cwtl
jg
mov
adc
sbb
in
pop
lds
jb
std
ljmp
mov
push
xchg
or
ret
xor
cmpsl
das
push
in
and
dec
mov
xchg
ret
mov
rorl
in
add
pop
ljmp
scas
gs
mov
mov
js
jge
fbstp
lea
cmpb
in
rorb
jl
fcmovbe
sub
pop
dec
andb
das
and
cli
std
dec
mov
jno
xchg
cld
jle
in
lcall
jp
ja
jae
stc
popa
es
movsb
scas
push
xor
mov
inc
xchg
cltd
out
inc
adc
and
loope
mov
movsl
daa
je
dec
clc
dec
insb
sti
jae
test
out
mov
cmp
bound
fnstcw
xlat
mov
daa
inc
push
and
lock
enter
ficoml
or
xchg
inc
pop
cmp
sbb
cwtl
push
mov
test
int
and
sub
add
insb
addr16
cmp
pop
sbb
rcll
dec
lock
stos
add
pop
cld
jmp
mov
call
repz
loopne
js
xor
cmc
sbb
xchg
mov
fadds
pop
outsl
fcoms
jae
ja
jb
xor
add
ljmp
imul
cmp
js
inc
fsub
test
push
clc
mov
push
sbb
ret
fdivrs
adc
movsb
int
xor
std
cli
jno
cmpsb
cltd
addr16
pop
jmp
imul
mov
adc
bound
fcoms
jecxz
cli
pop
ret
sbb
mov
sub
adc
mov
push
lods
pop
or
jmp
mov
cmp
movsb
xlat
data16
aas
in
cmp
push
mov
in
jae
inc
mov
dec
xchg
add
cmc
out
xchg
inc
mov
mov
imul
jmp
adc
cli
jmp
sub
lds
cmpsb
repnz
ja
popf
shrl
aam
jns
and
scas
sub
sub
mov
jnp
loopne
and
push
pop
mov
sbb
and
cmp
mov
fwait
mov
or
lock
cmpsb
xchg
add
out
cmp
inc
leave
out
test
aam
pop
lea
gs
push
test
js
adc
push
xor
out
cmp
leave
mov
push
sbb
pextrw
insb
push
mov
shll
and
lret
add
inc
xor
and
dec
push
jle
jne
jge
outsb
sub
sbb
and
xchg
xor
push
outsb
sti
mov
imul
adcl
and
jns
arpl
push
arpl
mov
push
push
insb
in
flds
sub
ss
xor
adc
sbb
dec
push
jno
jnp
sbb
lods
outsb
outsb
pusha
fst
mov
jnp
fmull
mov
cld
call
shlb
jle
test
xor
fnstsw
sti
cmp
div
ja
test
add
cmpb
in
jge
mov
xlat
cmp
mov
fwait
adc
insl
jbe
js
arpl
xorb
shll
sarb
lcall
sbb
in
out
out
out
iret
aas
test
cmc
push
clc
leave
jbe
cli
sbb
inc
iret
jg
pop
aam
int
loop
pop
inc
jge
adc
jmp
sbbb
divb
xor
or
dec
std
dec
ret
rolb
pop
rolb
ret
xor
mov
xchg
cmp
divl
stc
push
push
in
push
push
xor
xchg
jae
mov
repz
dec
inc
out
neg
push
push
mov
push
insl
jbe
xchg
push
xor
or
cltd
cwtl
lahf
inc
pop
pop
push
sbb
test
mov
adc
jmp
pop
jle
dec
insl
out
fistps
inc
or
out
clc
mov
sti
leave
das
cmp
jecxz
stc
push
leave
and
adcb
mov
dec
dec
inc
nop
cmp
outsl
test
rcll
push
iret
adc
xor
rcrb
scas
push
pop
and
shrb
xchg
stos
insl
dec
imul
rclb
ljmp
frstors
mov
scas
stos
mov
std
cmpsb
inc
sub
mov
jns
jo
bound
sahf
mov
add
imul
in
cmp
mov
and
jg
jns
add
jbe
fucom
arpl
ret
mov
das
xor
add
jg
ja
imul
cwtl
adc
cmp
or
push
and
pop
cmpsl
scas
dec
push
rclb
adc
lds
push
stos
push
adc
icebp
or
cmpsl
push
pop
or
fists
clc
cmpl
xor
mov
cmc
sbb
bnd
loop
fs
jp
dec
pop
pop
dec
in
mov
hlt
mov
ljmp
fists
test
xor
fsubrl
icebp
fsubrs
outsl
mov
add
jge
sub
mov
jne
pop
cmpsb
sbb
sbb
leave
xchg
add
data16
in
outsb
addr16
js
pushl
mov
pop
je
pop
popf
scas
add
push
dec
out
jnp
push
imul
push
test
pushf
pop
out
loope
ljmp
fildl
pop
cmp
xorb
popa
mov
daa
lret
cld
cmpsl
insl
inc
add
std
imul
in
fldcw
aam
mov
gs
les
mov
in
cld
adc
and
mov
test
xor
inc
pop
loope
sahf
mov
jb
fstps
fstps
daa
pop
and
jp
je
pop
sub
mov
subb
jb
or
push
pop
cmp
jae
sbb
mov
pop
repz
cmp
mov
insb
dec
ret
xor
iret
pop
or
dec
cli
pusha
cmp
cmp
std
xchg
mov
cmp
pop
sbb
jmp
insb
sub
stc
add
shlb
lcall
les
mov
dec
mov
and
sub
jno
lcall
sbb
sbb
enter
cmp
in
mov
aaa
sub
jecxz
repz
jb
in
sarb
fs
in
jg
cli
popa
stos
fisttpl
daa
dec
scas
push
sbb
xchg
ja
sub
jecxz
or
inc
clc
push
and
push
repz
mov
aaa
popf
lock
sub
sbb
daa
clc
int
jg
in
cmpsl
imul
inc
add
pop
push
cld
mov
inc
dec
jle
mov
ret
mov
and
roll
adc
adc
push
fwait
clc
xchg
dec
push
dec
out
push
pusha
add
sbb
js
mov
hlt
sbb
cmpb
sub
jmp
xor
mov
push
ficomps
push
bound
cs
scas
jecxz
sahf
lea
in
iret
lock
mov
mov
mov
push
sbb
jp
daa
mov
add
cltd
push
push
fildl
stos
imul
es
push
loop
xchg
imul
mov
jecxz
push
cmp
sarl
dec
inc
pop
inc
rcl
push
hlt
pop
xchg
ror
popa
cwtl
arpl
hlt
lea
ret
mov
shlb
jns
fstps
push
pusha
cmp
jecxz
rolb
out
shll
jp
lods
movsb
or
sub
inc
fistl
movsl
xchg
movsb
push
ds
xchg
pop
jae
xchg
mov
leave
pop
dec
dec
int3
xlat
inc
and
stos
mov
pop
dec
icebp
or
insl
jle
cmp
shlb
jp
cli
pop
adcb
das
cltd
pop
scas
ret
ret
push
or
xor
pusha
xor
xchg
mov
inc
loopne,pn
mov
push
dec
insl
std
shll
mov
or
jne
xchg
stos
push
mov
mov
lahf
int3
sbb
mov
ds
jle
jle
jmp
jecxz
xchg
jecxz
add
movsb
mov
fs
mov
dec
ljmp
add
mov
rorl
adc
imul
mov
sti
aaa
sbb
ds
fwait
xchg
pusha
dec
gs
jg
arpl
das
dec
jns
cld
pop
outsl
rclb
sarb
add
cmpsb
xchg
ret
adc
sub
mov
stos
add
ret
aad
xchg
xlat
insb
fs
cmp
out
jno
sarb
pushf
push
or
out
and
mov
or
mov
or
lods
push
bound
inc
pop
popf
pusha
lds
aas
push
les
dec
subb
inc
sbb
mov
decb
and
pushf
mov
dec
stos
icebp
mov
pushf
mov
jae
pop
popf
lock
mov
mov
mov
mov
xchg
subb
imul
inc
jo
lea
lcall
dec
ljmp
jo
sbb
inc
hlt
xor
int3
sarl
jns
dec
mov
fwait
push
push
or
jle
sub
xchg
ret
fucomi
loopne
and
mov
outsb
push
mov
inc
push
loop
push
ja
fcmovbe
stos
stos
imul
inc
xchg
or
inc
sbb
push
sbb
popaw
jnp
cmpl
or
arpl
and
ret
mov
xchg
fistpll
call
cmpsl
sbb
insw
ss
push
xchg
subl
xor
cmpsb
pop
mov
test
stos
jne
jnp
adc
fsts
test
or
ds
jmp
mov
fimull
add
and
push
add
mov
das
orb
add
enter
add
inc
cmp
pop
ret
loop
or
sbb
dec
mov
jne
ja
nop
jge
mov
mov
fadds
mov
insb
outsb
push
inc
jg
jmp
and
sub
imul
and
push
stos
mov
or
cs
pop
jns
push
notb
addl
inc
sbb
fsubl
test
pop
pop
mov
pop
out
ret
fs
pop
xor
mov
jns
rcrb
push
fimuls
mov
mov
cmp
std
mov
mov
push
mov
mov
sbbl
pop
es
push
xlat
int
dec
add
repz
ds
test
xchg
xor
repz
aas
sahf
adc
jge
or
imul
xor
mov
addr16
mov
cmpsl
jb
in
mov
pop
inc
movsl
push
dec
pop
je
shrl
ja
mov
cmc
cmp
dec
mov
call
jne
scas
pop
inc
and
arpl
mov
xchg
jne
cmp
cmp
dec
add
jne
and
sbb
push
bound
imul
sub
pop
and
out
adc
sub
and
repz
test
dec
jl
and
and
push
and
pop
fwait
xor
cmpsl
cmp
int3
xor
or
xchg
jl
enter
mov
push
cmp
add
pop
xor
or
sti
cmp
bound
pop
xchg
jl
inc
and
arpl
add
xor
sti
leave
adc
shl
ret
outsb
fsts
jge
adc
and
mov
mov
subb
jle
mov
test
or
dec
pop
push
mov
cmp
mov
pusha
ja
mov
inc
jo
iret
orl
mov
dec
mov
push
add
jp
int
cwtl
int3
push
sub
lea
test
pop
mov
ret
in
mov
adc
stos
out
andb
xor
fmul
fstpl
sub
in
scas
sub
xchg
inc
mov
stos
aam
aas
aad
fcmovne
addr16
mov
push
pop
enter
fsubrs
inc
cmp
inc
xlat
add
inc
add
sub
mov
xchg
add
fisubl
subl
cmp
push
and
jmp
lret
es
xchg
test
aam
cmp
sub
xor
loopne
jo
add
adc
xor
xor
stos
push
xor
loope
popa
dec
nop
add
inc
adc
dec
mov
cltd
imul
out
inc
lods
call
gs
dec
xchg
mov
cltd
dec
push
add
repz
xlat
imul
mov
int3
scas
lds
push
sub
mov
and
loopne
push
jecxz
xorl
ljmp
outsb
nop
mov
add
mov
je
ss
jnp
push
aam
pop
les
aad
js
mov
out
dec
fs
out
push
cld
test
pop
inc
inc
sbb
lods
pop
shll
call
push
test
or
aad
fimull
jbe
mov
cmp
ret
pop
lods
cs
mov
inc
cmc
or
in
fcomi
push
sbbl
jb
aad
stc
pop
aaa
xchg
aaa
add
push
xchg
rclb
pop
push
mov
in
cwtl
aam
push
mov
lods
out
sti
sbb
insb
rol
js
inc
push
loope
popf
add
fdivs
idivl
xchg
int3
fldenv
les
loope
aaa
sub
xchg
je
lock
mov
mov
xor
insb
adc
test
lock
xlat
sbb
inc
or
adc
sbb
mov
cmpsl
mov
xor
sub
aam
les
leave
adc
ljmp
cmp
mov
and
pushf
inc
fistl
imul
sti
movsb
or
inc
jne
call
dec
dec
jge
mov
dec
pop
fwait
iret
jle
pop
hlt
mov
fs
cli
jle
popa
pop
xlat
mov
add
xor
insb
xor
pop
mov
mov
mov
mov
leave
jl
jns
mov
push
adc
jmp
aaa
pop
mov
mov
rolb
push
xchg
mov
xchg
adcb
loop
add
add
lea
gs
cltd
mov
jo
fnsave
mov
mov
xchg
mov
cmp
mov
sti
test
mov
cs
sti
adc
jbe
rorb
dec
jge
pop
testl
jmp
mov
mov
xchg
pop
adc
leave
xor
cltd
iret
xchg
inc
jmp
int3
mov
pop
jae
mov
or
push
insb
xor
cmp
pop
mov
dec
rol
push
xchg
stc
mov
pop
add
js
jl
xor
sti
push
push
cmp
je
cmp
push
ja
clc
sbb
lea
hlt
mov
sub
ja
out
call
cld
sbb
scas
lea
adc
pop
cltd
subl
dec
mov
pop
mov
sub
outsl
and
cwtl
push
inc
mov
push
pop
fxch
loope
jae
xchg
movsb
outsl
dec
mov
mov
jmp
lahf
mov
sti
test
jns
sti
andb
fdivs
pop
je
xchg
loopne
push
and
push
ror
push
mov
daa
sub
adc
cli
sahf
test
sbb
mov
andb
xchg
icebp
adc
jbe
sti
pop
scas
xchg
jo
pop
mov
jp
jecxz
inc
push
ds
mov
xorl
or
notl
or
inc
pop
xchg
sub
sti
dec
in
add
cmp
out
jnp
call
loope
adc
and
sbb
push
dec
mov
dec
sub
out
es
iret
leave
or
dec
lds
mov
or
jbe
out
or
cmpsb
mov
xchg
sub
dec
mov
daa
lret
pop
pop
into
pop
jnp
xor
mov
repz
call
call
fiadds
jle
inc
shrb
in
in
push
mov
popa
cmp
stos
xchg
ds
mov
into
shrl
aad
int3
subl
sub
jge
mov
test
jbe
adc
lea
sarb
cmpsl
movsl
inc
dec
stc
and
ja
dec
data16
cmc
cmc
ljmp
pop
ret
mov
inc
xchg
loopne
pop
jle
loopne
push
in
ret
push
mov
mov
mov
fidivrl
orl
push
pop
shrl
shlb
aaa
mov
scas
ja
jno
pop
fdivp
leave
pop
pop
ret
es
popa
enter
loopne
or
dec
fwait
imul
and
pop
mull
int3
pop
fistpl
dec
push
push
addr16
cmpb
mov
sbb
popa
scas
jecxz
stc
cmp
adcl
inc
nop
mov
inc
shll
fiadds
movsl
cmp
xchg
lcall
and
out
adc
xchg
mov
fdivrl
cmc
sub
mov
mov
data16
xchg
js
push
push
hlt
sbb
lahf
ljmp
loopne
xchg
mov
cwtl
sbb
loopne
mov
adc
cmpsl
xor
loop
xchg
andl
sti
push
dec
add
daa
aam
jbe
bound
add
scas
stos
inc
leave
mov
addb
lock
scas
jne
mov
aad
mov
sub
pop
fdivrl
cmpsb
lret
xor
adc
imul
movsl
mov
loopne
mov
arpl
sub
arpl
xchg
hlt
jbe
push
scas
iret
mov
and
cmpsb
sub
test
adc
lcall
jecxz
push
jp
inc
xchg
addr16
cmp
in
bound
insl
adc
pop
sahf
test
fwait
mov
dec
adc
xor
pop
push
addps
adc
loopne
pushf
sti
shlb
loope
movsb
push
lds
xor
ror
mov
mov
cltd
or
dec
xor
sbb
jmp
or
inc
cltd
xor
bound
std
xchg
and
movsb
in
push
fwait
mov
mov
xlat
push
ja
leave
inc
adc
add
daa
or
sub
push
sbb
imul
data16
pop
clc
mov
andb
aaa
adc
jg
addr16
xchg
fwait
in
pop
mov
sahf
fstps
orl
sbb
fistps
outsb
test
test
fsts
fwait
add
cmp
add
jecxz
neg
mov
cltd
inc
cmp
or
sub
push
pop
fs
pop
jnp
xchg
lahf
out
fistpll
or
flds
dec
adc
lcall
pop
cld
and
daa
xchg
scas
sbb
xor
daa
cmp
adc
subb
dec
adc
negl
push
fsub
push
xor
rcll
xchg
loope
adc
lcall
or
mov
mov
sbb
or
inc
inc
xchg
les
sub
fiadds
lods
int
js
cs
inc
idivb
daa
or
mov
js
sub
sub
mov
inc
dec
scas
sub
pop
mov
mov
lea
adcb
adc
int
test
out
sahf
nop
or
push
xchg
lea
xchg
inc
in
rcr
ss
imul
sub
lret
push
pusha
xor
sub
jno
push
mov
ds
not
hlt
dec
inc
outsb
xchg
xor
hlt
in
push
sbb
loopne
in
cmp
xorb
mov
leave
and
dec
jge
scas
rcll
mov
mov
sbb
or
out
jle
xor
push
mov
call
mov
into
xchg
orb
and
ret
mov
xchg
push
jle
out
mov
mov
inc
stc
cmpsl
pop
mov
pop
xor
int
jge
aad
sbb
push
rcr
add
sbb
daa
mov
sub
jnp
sbb
int
pop
lods
push
out
xchg
inc
xchg
cmp
lock
inc
lret
js
fwait
fwait
sub
sub
lahf
and
pop
scas
ds
cmpsb
mov
xchg
cmpsl
jle
or
hlt
or
xor
arpl
clc
xor
in
roll
mov
push
bound
lcall
repnz
sti
jnp
pushf
inc
call
sub
mov
mov
jbe
sub
dec
fcoms
clc
mov
pop
fistps
dec
inc
scas
push
inc
push
test
in
aam
inc
std
or
into
mov
xchg
rcl
filds
loop
popl
jge
pusha
data16
add
jge
push
sbb
rolb
lods
lods
lret
sub
dec
or
test
popf
jns
test
sbb
aad
or
enter
jecxz
fsubp
xor
xchg
popf
rorl
ds
and
icebp
sbb
test
test
mov
jp
dec
xchg
and
pop
jae
pop
push
mov
pop
push
mov
and
lods
push
sbb
inc
test
sub
test
daa
ja
stc
mov
aaa
pop
jns
push
lock
fstp
orl
clc
data16
push
sbb
stos
mov
test
cmp
out
rolb
in
outsb
pop
lds
cltd
daa
stos
dec
sub
and
mov
repz
cwtl
mov
fdivrp
add
stc
sbbb
xchg
test
inc
mov
stos
das
dec
pop
pop
push
sbb
in
test
sub
fdivrp
sbb
inc
mov
lods
add
aam
test
cld
cmp
xchg
mov
dec
push
ficompl
push
dec
or
cmpsb
mov
stc
aaa
lcall
loopne
xchg
loope
arpl
nop
mov
pushf
jle
or
jo
bound
mov
push
mov
out
mov
stos
nop
sbb
fisubrl
not
push
xor
movsl
sbb
inc
rcll
push
cmp
cmp
push
cmp
inc
xlat
push
xor
adc
sbb
pop
fsubrp
test
pop
imul
pop
mov
sti
mov
stc
mov
inc
jns
enter
in
mov
ljmp
sub
push
xor
aad
pop
out
sbb
fisttps
pop
cmp
rcrl
xchg
sarl
je
jb
mov
cmp
loop
shll
mov
sub
loope
lods
push
mov
push
push
add
loopne
jbe
negb
stos
rclb
push
sbb
ret
lea
pop
sub
mov
jl
lret
rorl
inc
cwtl
xchg
or
jp
pop
push
sbb
jl
mov
dec
daa
jbe
shrb
mov
jno
jae
mov
cmp
dec
and
adc
lret
inc
mov
mov
cwtl
out
jmp
cmc
mov
clc
cmp
lods
jl
shrl
js
mov
sbb
sahf
imul
das
jmp
sbb
shlb
in
jo
nop
jnp
cmpl
and
pop
outsl
repz
data16
xchg
push
sub
push
ds
cwtl
mov
addr16
ret
mov
xlat
hlt
aam
jno
jp
dec
cld
mov
and
add
ret
test
push
push
fmull
xorb
xor
adc
cld
pop
pop
jo
mov
cld
cmp
hlt
inc
out
xor
into
jp
aad
into
pop
psrad
test
jl
or
mov
push
xor
sub
push
mov
inc
stc
roll
sbb
lock
xor
inc
and
dec
sbb
arpl
hlt
mov
cmp
insl
add
shll
fsubl
xchg
pop
ss
mov
add
aam
lods
dec
adc
outsl
cmpsb
sub
add
ret
xchg
pop
nop
push
dec
loop
mov
adc
jle
mov
push
xchg
push
cmp
aaa
in
loopne
stc
pop
mov
aaa
dec
jo
dec
cld
fcom
aad
mov
pop
jno
xor
test
push
ror
xchg
outsb
push
test
dec
mov
rcll
lock
jmp
dec
cmp
push
mov
int3
cmp
pop
jmp
scas
sbb
xor
arpl
pop
hlt
data16
and
xor
inc
push
jg
adcb
notb
scas
or
insl
and
gs
xchg
jle
int3
pop
test
adc
imul
ret
pop
iret
out
lret
push
cmp
and
das
xor
cmpsb
jp
xchg
sub
pop
lods
in
mov
fcomps
dec
lods
jae
jno
or
imul
pusha
sbb
push
inc
repnz
or
mov
push
daa
decb
add
adc
push
jp
repz
incb
mov
aas
divl
enter
gs
pop
ljmp
shll
push
xor
mov
fwait
add
xorl
nop
xchg
lret
mov
lcall
jnp
mov
dec
adc
je
cmp
scas
dec
and
scas
push
and
arpl
add
cmp
fs
movsb
push
cmp
adc
mov
inc
das
mov
jne
sub
lea
cmp
std
lahf
lret
sub
inc
loopne
loopne
pop
das
rorb
adc
into
push
in
stos
push
jb
mov
decb
adc
inc
jle
lods
pusha
aas
add
add
dec
scas
xchg
mov
es
shl
push
adc
xor
ror
lock
xchg
and
insb
aad
xchg
shr
into
cmp
mov
icebp
and
xchg
adcb
pop
mov
stos
out
adc
xchg
inc
in
jne
test
sbb
lods
mov
xor
dec
sub
cmpsl
mov
rcrl
not
fcompl
adc
sub
stos
aaa
cmpsb
loopne
adc
or
lods
jbe
xor
data16
or
cli
sub
mov
pop
ljmp
mov
mov
roll
fstl
inc
add
adc
mov
ds
push
bound
fsubrs
sub
shrl
mov
push
push
aaa
xchg
sbb
shlb
dec
loopne
jae
and
test
test
adc
iret
fwait
je
aas
dec
sti
dec
xchg
lcall
int
test
dec
mov
mov
or
insl
movsl
cmp
or
mov
pop
cmpsb
loopne
arpl
loopne
push
sbb
xchg
enter
nop
std
ror
aad
jle
jae
inc
stos
fists
and
mov
aaa
mov
fists
pop
adc
daa
lcall
jns
out
iret
cmp
pop
notb
push
lahf
push
mov
mov
mov
mov
lret
lret
lcall
scas
inc
mov
sarb
cmc
cmpsb
lods
in
mov
and
add
adcl
xor
test
mov
sub
cmp
fnsave
mov
mov
adc
shr
jno
sbb
mov
add
mov
sarl
xchg
push
xchg
arpl
imul
add
pop
jo
and
and
cmp
out
adc
mov
jb
push
loope
xchg
addr16
adc
inc
cmpsl
inc
inc
ret
mov
gs
jg
pop
out
inc
add
xchg
push
mov
or
or
into
mov
rcrl
push
mov
inc
movsb
es
sub
test
in
into
xchg
mov
je
cmpsl
jno
in
mov
and
dec
mov
loopne
aas
dec
gs
sub
jp
mov
jp
fidivrl
out
and
dec
inc
add
xor
inc
push
jl
repnz
and
inc
cmp
clc
dec
out
in
pop
xor
aad
data16
lret
lea
jns
test
icebp
scas
adc
in
cwtl
xor
inc
inc
cmp
out
inc
orb
fidivl
and
addr16
lods
push
jg
add
inc
popa
xor
arpl
loope
popa
lods
fs
cmp
xor
testb
jle
notl
xor
adc
jge
es
pop
mov
inc
mov
scas
push
and
and
jo
mov
cmc
cltd
jb
pop
cmpb
push
dec
imul
jl
mov
mov
mov
pop
cmp
xchg
es
repnz
repz
jo
int3
adcb
xchg
mov
pop
jecxz
mov
xor
inc
cli
imul
out
or
and
icebp
xor
movsl
xorb
and
negb
outsb
and
cmp
mulb
out
es
sbb
out
mov
xor
mov
jp
fwait
push
pop
jno
ficoml
clc
xor
mov
aad
adc
outsb
adc
mov
inc
jo
mov
pop
nop
jmp
xchg
jno
mov
fstps
cmp
movsl
push
jns
jbe
push
sub
pop
loop
pop
cmpsb
bswap
paddw
outsl
or
pop
incl
sahf
stos
pop
rorb
fldt
imul
or
mov
fistps
in
and
dec
sbb
dec
scas
cmp
and
sbb
cmp
jne
dec
cmp
add
cmp
fidivl
imul
cwtl
fldl
push
mov
sub
sbb
sbb
pop
push
test
xchg
inc
jae
and
fwait
and
jne
outsl
sub
imul
movsb
or
outsl
fdivrs
test
inc
inc
sti
ret
jmp
push
movsb
paddusw
xchg
add
lret
out
sbb
and
jmp
cmp
mov
adc
movb
push
insb
inc
pop
je
xchg
in
ds
dec
fstpt
aaa
movsb
test
ret
inc
push
sysenter
ficoms
cmp
push
and
jmp
fwait
dec
in
cli
das
and
fcmovu
add
pusha
popa
add
ret
or
and
push
xor
mov
push
jmp
fucomp
fdivl
int3
jb
dec
or
mov
push
or
daa
push
push
inc
cli
xor
mov
ljmp
mov
aad
out
fs
cmpb
sub
pushf
test
test
jno
je
jbe
push
dec
imul
les
mov
fldt
mov
add
fisubrl
repnz
push
lods
mov
add
or
push
icebp
xor
out
xchg
lods
and
push
pop
cmc
pop
imul
pop
popa
push
xchg
icebp
cmpsb
jmp
dec
mov
push
repz
xchg
or
mov
loop
dec
shl
inc
stos
jp
mov
mov
repnz
cmp
fnstenv
rclb
iret
sub
mull
adc
gs
mov
cli
and
in
cmp
mov
fdivrl
loopne
insl
out
call
cmpsl
sahf
daa
sti
adc
xlat
cli
mov
es
inc
jl,pt
add
inc
dec
sub
mov
push
or
lahf
add
pop
push
hlt
add
fdivrl
push
fidivrs
call
or
mov
ss
sbb
mov
or
jo
adc
lcall
xchg
mov
fiaddl
adc
pop
mulb
popa
rolb
out
sbb
ss
xor
mov
mov
mov
mov
repnz
test
or
mov
ja
push
shll
shlb
outsl
mov
fisttpl
jecxz
cmp
or
popf
std
mov
pusha
dec
fidivrl
inc
add
cld
jo
stos
and
mov
insl
js
push
pop
jbe
or
and
sbb
or
sub
movsb
int3
lods
out
loopne
dec
stos
xorb
shrb
cmc
pop
pop
outsb
mov
mov
lds
cmpsb
int3
pop
ds
ret
sub
add
fstps
mov
lret
inc
lods
cmc
les
or
loope
jb
ficoms
stos
std
mov
inc
lock
jb
pop
cld
lcall
movsl
dec
cld
inc
mov
pop
mov
ds
js
jno
mov
jb
jno
mov
shr
mov
lret
lret
or
pop
mov
stos
dec
inc
mov
push
jge
sbb
jne
push
or
iret
clc
loop
inc
sar
mov
jecxz
dec
test
inc
xchg
aad
andb
ret
int3
mov
mov
mov
sub
dec
fildll
cmpsb
cmp
arpl
and
push
ud2
xor
mov
or
or
inc
add
adc
in
ror
test
sbb
sbb
lcall
push
fs
mov
dec
fldt
mov
cmp
mov
add
fsub
pop
xchg
insb
mull
in
jg
adc
or
cli
mov
fs
mov
popf
popa
adcb
in
in
and
jae
push
insl
pop
sbb
sbb
xor
push
sub
sti
rcrl
in
sbb
cli
add
mov
loop
cwtl
mov
into
xchg
icebp
in
testl
xchg
mov
mov
int
jp
popa
jl
ret
outsl
repnz
repnz
push
pop
imul
stos
sub
je
and
add
cmp
int3
mov
in
pop
or
in
xchg
push
cmpsl
dec
adc
loope
pushl
push
dec
mov
pop
iret
imul
inc
cmp
cmp
push
sbb
fnstcw
ds
xchg
jb
adc
imul
sbb
daa
xchg
pop
and
stos
repnz
gs
movsb
push
push
sbb
stos
and
ret
insl
sub
push
aaa
dec
scas
dec
and
dec
rol
fadds
jno
enter
lret
jmp
int
fwait
sbb
add
and
test
lods
icebp
and
add
outsl
imul
mov
dec
js
dec
push
xchg
cmc
inc
mov
mov
sub
pop
lret
pop
fisttpl
repz
jno
dec
movb
es
mov
cmpsb
sbb
sbb
dec
shrb
cmc
pop
xor
test
shll
out
fsubrl
sub
jnp
inc
mov
jmp
int3
scas
jl
out
test
lret
jae
inc
pop
hlt
cmp
jge
jg
add
dec
cwtl
inc
sti
or
push
dec
cmpsl
mov
ret
clc
movsb
stos
pop
stos
test
inc
fucomp
lcall
pop
out
mov
add
jle
test
xchg
dec
scas
outsl
jecxz
cmp
fsubr
fwait
jl
adc
popf
cli
xchg
sub
xchg
or
stos
ret
mov
sub
push
loop
out
push
dec
cmp
mov
xor
int3
add
aaa
hlt
mov
imul
push
sbb
out
test
xchg
ret
adc
xor
push
or
xchg
ds
cld
mov
and
sbb
xlat
shlb
cmp
popf
in
sub
adc
jp
or
inc
add
cs
jp
in
jmp
ja
pop
dec
or
jae
jl
lret
rcl
mov
xchg
cmpsb
frstor
or
incl
frstor
and
push
jae
pop
mov
cmp
push
inc
into
push
sbb
push
fldcw
cmp
cwtl
scas
divl
xchg
int3
lret
adc
cmpsb
jl
outsb
out
lret
into
or
mov
rol
sub
push
push
push
mov
add
clc
in
or
fisubrl
in
in
push
cwtl
mov
in
rcrl
into
inc
add
push
and
lea
shll
sbb
sbb
mov
andb
xor
inc
jns
in
pop
push
mov
roll
mov
fisubs
pushf
scas
add
ret
add
pop
push
flds
aam
mov
ret
dec
stc
cmp
push
scas
lea
xor
in
rclb
jbe
mov
sub
sub
xlat
mov
popf
rol
jg
sbb
jecxz
inc
adc
lods
sahf
rcll
cld
cmp
pop
cltd
in
inc
loopne
jmp
xchg
js
fnstsw
adc
in
and
mov
lods
aad
popl
adc
cmp
enter
ljmp
fmuls
ret
fistpll
sbb
scas
enter
add
in
mov
cmc
lods
clc
xchg
pop
cmp
push
enter
orb
cltd
inc
cmpsb
dec
sahf
or
cmpsl
sub
pop
les
mov
iret
pop
sbb
cmp
jle
dec
inc
loop
xor
test
out
sub
hlt
int3
pop
xor
dec
int3
add
pushl
sub
mov
fisubrs
dec
sub
xchg
pop
mov
sub
and
movsl
push
stc
inc
mov
cmp
imull
aaa
out
sub
and
add
gs
pusha
sarb
xchg
aam
inc
sbb
lret
inc
pop
mov
xor
adcl
dec
test
movsb
iret
bnd
int
int
cmpsb
aad
pop
jae
outsb
jae
push
movsb
adc
imul
repz
andb
out
lahf
aad
lods
mov
loopne
pop
sub
sub
aam
xor
or
or
cmp
cs
bound
push
or
enter
push
add
jnp
les
andl
test
repnz
ljmp
outsl
xchg
ret
lock
jg
jle
xor
jl
add
adc
nop
pushf
andb
pop
mov
add
xchg
imulb
and
push
mov
fcompl
mov
sarb
imul
les
icebp
cmc
sub
movsl
fsubr
mov
icebp
addr16
mov
rorl
mov
jae
or
and
lea
mov
xchg
jp
jl
xchg
repz
mov
scas
faddl
inc
jae
lods
arpl
out
loope
fmuls
xor
mov
xchg
xchg
push
iret
insb
aam
loop
mov
xor
xchg
push
movsb
cmpsl
fdivs
mov
sbb
lea
lods
xchg
xor
mov
inc
inc
push
aad
or
incb
icebp
adc
xor
out
fs
lret
mov
add
ret
and
xor
dec
jp
in
xchg
hlt
sbb
in
xor
lea
add
ja
dec
insl
fiaddl
fstl
sub
inc
mov
jmp
sbb
imul
inc
fstl
std
fsubs
jmp
push
push
lods
mov
dec
add
jmp
mov
ljmp
fcomp
mov
imul
mov
dec
add
mov
xchg
xchg
pinsrw
pop
xchg
push
dec
or
int
pop
push
and
jb
repz
mov
dec
pop
cmp
sbb
test
inc
or
xchg
mov
test
cmp
cmp
mov
fistpl
int3
addl
cmpsb
xchg
jmp
insl
movsl
inc
sub
dec
mov
div
push
and
add
sub
in
push
and
or
dec
repz
mov
dec
dec
ss
in
cmp
jne
mov
subl
in
and
sub
repz
adc
inc
es
test
cmpsb
mov
and
ja
sahf
lret
dec
pop
roll
add
imul
cmp
shl
call
xor
call
int
push
loopne
sti
push
jecxz
nop
xor
jb
pop
jnp
inc
lock
add
stc
gs
call
jno
cmp
repz
sub
in
add
mov
sti
sub
xchg
cs
inc
imul
jbe
in
adc
repnz
cmp
stos
sti
rolw
sbb
ror
xor
mov
adc
dec
lret
lret
movsl
inc
in
and
or
mov
jne
nop
es
mov
xchg
clc
mov
mov
nop
test
fisubs
mov
int3
xchg
jae
mov
cmp
lahf
xor
cmp
test
add
lea
pop
lods
xor
insb
pop
push
fistl
add
xchg
outsl
scas
mov
ss
push
cmp
cmp
imul
and
cs
add
or
jg
xor
jge
imul
out
push
xor
pusha
xor
stos
dec
mov
insb
stos
cwtl
dec
scas
pop
out
pop
pop
lods
sbb
mov
out
arpl
movsb
xchg
in
fyl2x
sarb
lock
mov
pop
cmp
loop
clc
mov
push
shrl
ud1
inc
aas
std
xchg
xor
xchg
lahf
jb
and
cmp
jle
pop
roll
addb
pop
xlat
imul
jns
or
shlb
mov
notl
xor
pop
das
in
adc
jbe
dec
sti
stos
cmpl
cs
jecxz
in
mov
mov
jg
jmp
push
and
dec
push
popa
add
xor
mov
aad
inc
push
dec
sbb
shl
sub
in
dec
rorl
inc
pop
xchg
lret
out
pop
mov
mov
divl
mov
xchg
add
mov
es
imul
inc
inc
xchg
int3
sbb
dec
lds
stc
adc
push
push
call
mov
fwait
jns
adc
pop
adc
mov
cmp
pop
xchg
xchg
inc
outsb
repz
mov
push
cmp
addl
or
test
std
cmpsb
sbb
rolb
push
pop
in
inc
sarl
pextrw
adc
rorl
or
movsl
add
std
out
cltd
lea
mov
pop
cmp
xor
xchg
subb
gs
shll
or
push
mov
jl
jo
scas
sub
out
test
in
int
add
xor
adc
lock
stc
sub
popa
or
or
ret
repnz
and
pushf
xchg
jne
in
lock
sub
mov
jecxz
mov
inc
rcrl
xchg
cmc
inc
pop
pop
cmp
adc
xlat
movsb
aad
dec
insl
mov
xor
jg
jo
ret
pop
sub
lods
ds
inc
pusha
sub
int3
push
das
loop
inc
mov
lcall
inc
and
pop
push
es
hlt
push
xor
sub
pop
pop
clc
rorb
loopne
popa
ret
inc
adcb
inc
pop
jge
push
dec
push
add
adc
lret
imulb
mov
lahf
in
mov
scas
and
mov
jb
add
jnp
ret
mov
js
pop
enter
and
std
addr16
jmp
ret
sbb
lret
mov
jne
fcompl
mov
in
pop
jmp
xchg
lcall
movsl
mov
sbb
cmpsb
les
jp
pop
xchg
lcall
xor
push
scas
sbb
rcrb
ret
and
fisttpll
cmp
cmpsb
call
sub
cmp
cli
out
mov
fimuls
push
fbld
push
call
sbb
cmp
mov
pop
push
test
ret
pushf
add
dec
sbb
xlat
add
lds
cmpsb
adc
mov
mov
dec
icebp
push
movsl
cmp
sbb
imul
mov
test
adc
daa
negl
fisubrs
stos
in
dec
loope
dec
xchg
push
sbb
addl
in
popa
sbb
int3
mov
out
flds
push
sub
fwait
jmp
xor
push
mov
sub
stc
sahf
push
add
lea
and
movsb
sbb
add
nop
mov
mov
xlat
cmpsl
pop
rclb
icebp
out
and
sub
fdivl
mov
stos
mov
add
add
xor
inc
xor
cwtl
negb
adc
xor
pop
and
jmp
mov
aad
mov
inc
mov
cltd
cli
xor
popa
cmp
pop
sbb
push
das
jbe
lea
adc
rcl
test
cmp
in
and
push
xchg
hlt
add
pop
and
jne
inc
lods
mov
cwtl
pop
push
sub
sbb
das
mov
push
out
adc
dec
gs
pop
in
add
adc
vphaddwd
rcrb
cmp
dec
leave
or
lods
aas
scas
into
xor
or
push
jae
fldt
ljmp
sub
jae
mov
test
xlat
ret
inc
in
and
popf
popf
sarb
scas
int3
add
adc
in
cs
cmp
push
lods
adc
jl
mov
roll
or
sub
sahf
mov
pop
pushaw
adc
push
repz
mov
sahf
call
sub
mov
cvtps2pi
xchg
in
adc
xor
jmp
xchg
push
fsin
test
fwait
pop
icebp
pop
mov
insl
xor
call
cmp
scas
not
cmp
add
sub
xchg
enter
mov
mov
testl
inc
popl
or
fisubrl
push
jg
push
pop
xlat
and
mov
push
jge
mov
xlat
bound
push
push
sbb
mov
and
loope
cld
pop
call
jmp
lahf
aas
pop
call
test
sbb
mov
mov
popa
jg
and
imul
push
dec
sbb
imul
ret
pop
pop
push
sbb
fnstcw
ja
sarb
mov
xchg
cmp
jb
bnd
xchg
pushf
pop
add
and
adc
dec
mov
cmovbe
aaa
sahf
mov
nop
push
in
xor
or
mov
cmp
pop
sub
aas
aam
popa
scas
out
push
adc
mov
mov
icebp
fnstcw
out
mov
scas
es
xor
mov
scas
outsl
xor
mov
sub
pop
icebp
fisubl
jns
jnp
lods
or
ret
mov
int
and
xchg
bound
pop
sbb
fs
mov
ljmp
cmp
das
mov
xor
jmp
ret
pushf
fnstsw
daa
pop
push
mov
popf
cmp
std
push
dec
dec
xor
xchg
jle
test
mov
into
loop
mov
push
sub
in
jg
in
push
adc
aam
andl
pop
sub
sbb
jbe
push
cmp
cli
sbb
jbe
lret
ret
push
jo
subb
data16
cmp
mul
iret
adcb
cld
jp
clc
mull
cmp
pusha
dec
fimuls
xor
daa
mov
popa
nop
adc
sbb
insl
pop
and
fldenv
jns
out
ret
aas
xor
mov
je
and
fimull
push
adc
cwtl
pop
jo
dec
jp
outsb
sub
movsl
push
aam
unpckhps
mov
cltd
lock
jnp
add
jnp
pop
xor
mov
lcall
xchg
nop
repnz
adc
push
sub
xchg
inc
xchg
ret
pop
clc
mov
aad
lret
fiadds
xchg
cld
fcmovne
hlt
testb
mov
js
push
push
stos
and
or
add
adc
inc
sbb
mov
xor
mov
push
cmpsl
pop
mov
call
mov
in
inc
cmp
test
and
ljmp
shll
push
push
sub
jns
or
xchg
jo
dec
xor
aas
sti
dec
inc
jmp
arpl
xor
pop
data16
dec
sbb
mov
addl
xor
into
inc
adc
je
popa
fnstsw
pusha
sub
adc
push
add
lea
xchg
push
lret
fidivs
mov
push
xor
and
pop
sbb
xchg
lock
stos
adcb
xor
scas
jecxz
imul
xorl
add
in
pop
push
enter
cmp
insb
push
push
or
dec
insl
inc
pop
or
or
cld
xchg
loope
pop
add
xchg
jl
jns
clc
mov
inc
aaa
mov
push
ljmp
insb
cwtl
subb
cmp
out
jae
lret
notl
int
add
pop
cmp
dec
or
jns
add
mov
lods
mov
adc
mov
testb
fyl2x
jns
imul
xor
stc
push
cld
mov
and
sub
fimull
repnz
push
sub
orl
fcmovb
test
push
xchg
add
mov
add
daa
scas
mov
cmp
jg
mov
repnz
iret
cmc
xchg
sbb
xchg
fisubrs
pop
rclb
imul
lea
cltd
in
sub
lret
mov
out
push
insl
cmp
scas
hlt
rclb
jp
cmp
add
jl
push
ret
movsl
addl
je
sbb
dec
movsl
es
sub
cmc
fdivrl
into
into
ret
mov
or
pop
and
daa
sub
cmp
mov
cmp
dec
pop
loope
sbb
test
daa
pusha
fiaddl
das
sbb
jmp
pusha
iret
cmp
mov
repnz
fs
jge
pop
fidivl
fstpl
push
in
xor
orb
inc
xor
shlb
jl
popa
lea
push
lods
and
leave
in
add
int
mov
stc
fucomip
in
cs
insl
in
mov
and
out
imul
in
fiaddl
pop
int3
fs
xor
stos
adc
jle
pop
incb
in
int3
mov
xchg
mov
push
scas
push
jmp
push
push
sbb
ret
jecxz
xchg
daa
xor
push
inc
dec
adc
or
repnz
sub
sti
test
pushl
add
cltd
into
cmp
jge
sub
out
lods
cmpsb
cmpsl
sub
pop
push
out
push
dec
dec
and
and
cmp
jo
mov
jne
adc
push
fst
mov
inc
outsb
mov
dec
out
jl
push
andl
mov
xor
in
xchg
lahf
add
or
jle
jbe
outsl
sub
lods
jno
scas
mov
or
pop
jbe
repz
adc
cmc
push
fsubp
loopne
inc
xor
in
xorl
mov
dec
call
lea
pop
dec
inc
and
mov
xchg
out
mov
lock
jnp
mov
dec
lods
cmp
jnp
pop
and
cmp
shl
jne
int
sti
es
jmp
xchg
or
repnz
sbb
pop
dec
stos
pop
pusha
enter
stos
leave
std
mov
xchg
loopne
push
mov
lea
adc
pcmpgtd
dec
sub
ds
fisttpll
sub
jl
test
cmp
cmp
shl
cltd
mov
add
sbb
aas
shrl
bound
mov
pop
mov
out
pop
hlt
rcll
lods
mov
loope
rcll
bsr
sub
xchg
scas
lahf
insl
fstps
xor
stos
inc
iret
jp
push
fldt
pushf
lods
ret
daa
imul
push
add
and
mov
fmuls
imul
outsl
lods
sbb
jae
xchg
add
mov
int
lahf
lret
add
fimuls
repnz
mov
idivb
or
rcrl
imul
insl
outsb
pop
add
shrb
mov
pop
mov
aad
cmc
or
popf
adc
loopne
pop
adc
push
mov
dec
data16
mov
fucomp
ret
mov
add
mov
cmp
mov
sub
jmp
jo
pop
shr
mov
daa
fldl
inc
dec
sbb
sahf
pop
jecxz
ljmp
mov
lahf
adc
lret
mov
xor
adc
and
add
inc
out
mov
cmpb
ljmp
mov
mov
mov
movsb
aaa
clc
test
icebp
lods
xor
outsb
dec
test
mov
push
bound
xor
ret
bound
inc
cmpb
cmovs
test
cltd
pop
jecxz
cmp
test
mov
aaa
jmp
pop
fwait
scas
outsb
insl
cmc
adc
rcr
filds
inc
xchg
repz
push
add
add
test
inc
mov
and
mov
shrb
insb
pop
add
bound
mov
sti
into
inc
jo
sbb
fadd
rorb
es
xor
imul
call
mov
int
rcl
push
adc
sub
adc
rorb
icebp
test
aaa
xchg
rolb
jno
pop
cmpsb
sub
mov
mov
and
xor
fnstenv
fmuls
or
fmul
or
rorb
push
add
inc
out
into
sti
cmp
jb
inc
xchg
rorl
pmaddwd
ds
cmp
pop
or
jecxz
push
mov
gs
fdivrl
mov
outsb
imul
adc
fwait
mov
push
mov
daa
stc
xchg
xchg
and
inc
jae
jge
lds
mov
imul
lock
lds
nop
lods
push
outsl
mov
or
std
jle
adc
mov
punpckhbw
mov
in
aam
icebp
mov
fwait
je
mov
stos
jmp
inc
mov
rsqrtps
out
scas
mov
or
mov
xchg
test
cmp
cmp
daa
outsb
inc
jmp
dec
daa
mov
lret
loopne,pt
and
imul
and
mov
enter
pop
push
iret
mov
je
rolb
ret
mov
cmp
mov
adc
out
repz
test
jp
fdivs
add
mov
push
test
dec
xlat
add
xchg
dec
cmp
sub
in
or
adc
push
jno
sub
mov
or
or
pop
mov
icebp
mov
xor
cmc
xor
dec
adc
sbb
sbb
xchg
sti
in
jmp
je
stos
test
insb
negb
or
sub
cli
xor
leave
jle
sti
cmp
lcall
scas
push
es
fwait
fs
sub
add
in
movl
pop
xchg
xorl
mull
xchg
cmp
wrmsr
ret
rolb
lahf
aad
mov
cltd
icebp
add
into
scas
sub
out
leave
aas
sbb
loop
sarl
mov
lds
mov
dec
cmpsb
pop
pushf
mov
jae
int
inc
ljmp
jnp
pop
cmp
xchg
testl
dec
xor
xor
adcl
out
inc
adc
xchg
enter
jno
xchg
push
pusha
mov
aaa
xor
push
stos
xchg
mov
das
mov
inc
xchg
push
fisttpl
add
jno
adc
xchg
and
cmc
push
sub
lret
stos
jns
imul
pop
mov
in
jg
cmp
push
aaa
xlat
push
pop
clc
mov
inc
lret
add
in
xor
int3
cwtl
mov
jecxz
js
test
fstpt
adc
lods
data16
mov
xor
scas
jbe
push
sarl
mov
shlb
xchg
lea
sub
push
daa
hlt
jbe
int
shl
lods
jne
push
add
daa
xchg
sbbb
push
sub
sub
sub
mov
mov
pop
mov
xor
push
inc
mov
popf
sbb
sahf
sti
and
adc
aam
xor
test
mov
push
clc
mov
fnstenv
xchg
sti
outsb
or
jno
and
push
and
test
cld
dec
and
xchg
mov
cmp
repnz
push
push
xchg
jbe
test
jo
pop
daa
inc
or
pop
push
xchg
mov
lret
cmp
add
jnp
gs
lcall
xor
xchg
dec
mov
rcll
jb
inc
sti
and
xor
rorb
push
addb
xchg
push
mov
pushf
mov
jge
mov
mov
pop
hlt
xor
push
cmp
adc
inc
jns
hlt
mov
lret
aad
hlt
sub
mov
dec
sbb
push
enter
mov
lds
cs
add
xchg
dec
jb
dec
cvtpi2ps
push
xor
fidivl
leave
subb
jg
sbbb
xchg
inc
sahf
movsb
jge
xor
inc
popa
mov
or
mov
rcll
dec
addr16
out
inc
stc
sub
xchg
cli
mov
push
fs
add
mov
add
test
xor
sbb
add
add
int
adc
xchg
stc
lea
push
mov
outsl
es
call
inc
fsub
lock
jl
jb
movl
jp
loopne
mov
sbb
pop
int
mov
ret
cmpsl
sub
xchg
sub
mov
adc
loope
repz
jne
ficoms
inc
arpl
stos
sub
push
into
or
jbe
push
in
std
or
xchg
push
bound
add
inc
cli
sbbl
stc
cwtl
mov
dec
movzwl
dec
test
jns
mov
xchg
jmp
push
or
inc
arpl
xchg
sbb
xchg
mov
jp
lods
ja
xchg
xchg
call
cltd
test
jne
mov
cmp
fmuls
mov
push
push
gs
je
addb
stos
xchg
subl
mov
or
add
loopne
xor
loope
daa
mov
mov
inc
pop
jge
mov
std
jns
sti
mov
mov
out
repnz
jmp
sub
mov
xchg
out
js
dec
push
addr16
push
adc
shr
nop
dec
test
lcall
cli
pusha
add
nop
xchg
jl
cmpsb
jg
mov
xor
addl
lock
jno
xor
cld
jp
jb
bound
jp
push
sbb
mov
stos
or
iret
add
pusha
push
out
or
stos
jne
movsb
pop
lea
test
mov
push
push
popl
js
mov
xor
jmp
xchg
pushf
fwait
sbb
mov
xor
sbb
xor
loope
lcall
popa
scas
into
outsb
push
cmpsb
xlat
ret
dec
lret
push
inc
mov
and
popa
ljmp
lock
sbb
rep
stc
sahf
cltd
int3
xchg
mov
sbb
out
pop
cmp
es
add
nop
inc
mov
pop
mov
rolb
lea
push
and
pop
int
out
mov
sbb
in
leave
mov
cmpl
mov
stc
lea
xor
outsl
sbbb
xor
movsb
cmpsb
xor
addr16
jns
in
in
fisubrs
invlpg
dec
push
lahf
push
cmpsl
fldcw
sub
xor
lods
sbbl
ret
fimuls
lods
mov
push
aam
enter
add
loope
jno
push
pop
push
push
test
sbb
out
lahf
iret
test
sub
ja
inc
mov
mov
in
test
and
jne
add
inc
lcall
cmpsl
je
xchg
and
adc
adc
call
daa
stos
shll
jg
add
fimuls
push
int
jns
sbb
test
das
test
adc
aas
pop
sub
loope
jge
inc
jp
push
add
es
push
mov
dec
aaa
jns
mov
mov
adc
repz
movsb
push
int3
xor
aas
sarb
cmp
mov
fidivs
push
sbb
pop
push
push
ret
inc
sahf
aas
mov
int
sub
mov
mov
subb
or
xchg
aas
test
inc
inc
cmpsb
add
xchg
mov
scas
test
mov
pop
ss
ds
xchg
lret
mov
dec
lret
cli
xchg
jns
leave
movsl
sbb
int3
ja
inc
lock
xor
xlat
or
arpl
dec
cmpsb
repnz
add
mov
leave
test
gs
sbb
pop
cmpsl
in
push
add
adc
movsb
in
ret
mov
shr
jp
in
sub
dec
push
xchg
ret
adc
xor
gs
mov
cmp
lods
push
ja
dec
pop
dec
or
jp
sbb
xchg
mov
sbb
in
mov
pop
daa
sti
push
enter
adc
imul
outsb
mov
add
outsb
call
test
sub
addr16
mov
test
cmpsl
push
dec
jle
mov
iret
out
adc
inc
shrb
stc
cld
mov
jae
bound
in
int
ja
daa
mov
jl
adcl
xor
rol
in
jne
ja
call
jle
and
push
sub
int3
push
inc
outsb
mov
jne
lahf
lret
jb
cmc
int3
pop
jl
or
outsb
out
movsl
mov
decl
mov
jp
cld
addr16
mov
push
pop
fisttpll
out
sbb
pop
stos
sub
add
mov
push
mov
test
out
dec
movsl
or
fcoms
pop
stos
push
call
mov
push
lea
mov
in
mov
push
xor
xchg
out
pop
cmp
and
mov
popf
lret
int3
inc
mov
shlb
out
rclb
jbe
push
pop
fdivrl
adc
andb
inc
push
test
pushf
cmp
jbe
xchg
push
test
or
lea
mov
inc
jmp
sti
pop
lahf
dec
xor
mov
mov
aaa
dec
inc
cmpsb
cmpsl
dec
xchg
dec
add
sub
xor
add
aaa
xchg
mov
jns
out
cmp
loop
lods
mulb
cmp
test
icebp
or
mov
sub
in
push
pop
xor
movsb
push
repz
lret
push
into
add
pusha
inc
les
xchg
mov
xorl
xchg
call
jo
popf
jno
mov
cmpsb
aaa
and
and
add
pop
out
inc
imul
adc
ds
sbb
cmpsb
xchg
or
cwtl
daa
je
sbb
jge
aas
popf
mov
not
ret
cmpsb
std
jp
rolb
out
or
push
aaa
mov
cs
cmp
test
inc
sbb
rcrb
out
popa
clc
adc
cmp
cmpb
enter
aam
clc
pop
stos
das
push
mov
xchg
mov
sub
lds
daa
je
pop
scas
mov
fiadds
std
or
sub
xchg
mull
cmp
lahf
pop
out
inc
andl
mov
jecxz
inc
leave
add
dec
jnp
test
in
dec
arpl
test
in
and
pop
add
bnd
or
cli
add
cmpb
fmuls
jmp
sahf
mov
loope
mov
cmc
add
adc
dec
mov
dec
leave
in
in
outsb
adc
jne
shrl
imul
cmc
jg
adc
mov
test
in
mov
xchg
loope
mov
dec
adc
jl
mov
test
pusha
stos
outsl
or
push
push
sbb
mov
insb
call
cld
repz
scas
mov
ret
mov
jle
lock
iret
sbb
cwtl
out
sbb
popf
test
sub
daa
ficomps
in
mov
pop
das
les
and
testl
fwait
pop
daa
mov
fists
int3
add
mov
adc
popf
lret
cmp
xchg
cmp
mov
jbe
imul
xchg
ljmp
into
lahf
pusha
sahf
jl
cmp
loopne
sbb
lock
pop
cmp
test
mov
sbb
inc
inc
adc
xlat
rep
xor
into
inc
scas
popa
fstpt
adc
xchg
iret
dec
push
shrb
fisttpl
cmc
push
mov
lods
mov
and
cmpsb
push
add
cmpsb
leave
int
cmp
push
jge,pt
nop
subb
mov
pop
test
cmpsb
xor
jno
in
and
jge
adc
arpl
mov
subb
inc
xor
xor
inc
pop
push
pusha
or
popa
jno
dec
pushf
adc
dec
mov
arpl
iret
xchg
stos
sub
dec
and
sub
mov
das
jne
fsts
push
xor
add
shl
cmpxchg
and
cmp
fucom
mov
stc
int3
inc
sbbl
andb
enter
test
sbb
ds
pop
insb
lcall
and
movsb
mov
addr16
shrl
sbb
dec
rcrl
dec
mov
sbb
rcll
cwtl
or
ss
repnz
and
out
jo
cmpsb
bound
loopne
xor
mov
dec
daa
lcall
lret
ds
mov
xchg
cmp
ret
inc
lods
sub
push
adc
and
ror
push
dec
mov
fnsave
ja
add
cli
enter
cmp
repz
rcr
out
inc
or
adc
and
xlat
aam
dec
inc
arpl
pop
mov
jge
ja
aam
insl
repnz
pop
jae
add
js
mov
fidivl
call
hlt
xor
aaa
dec
loopne
fcmovb
inc
or
lret
das
dec
test
loope
adc
bnd
test
jp
push
dec
and
jg
movsb
sub
aaa
or
negl
adc
xor
xchg
jb
jge
imul
jbe
xor
sub
mov
je
xchg
pop
imul
mov
in
push
movsl
inc
or
xor
hlt
sbb
mov
call
loopne
out
aad
std
adc
ja
and
cmp
sub
inc
push
test
dec
mov
jae
repnz
jns
cmp
loope
mov
frstor
jle
xlat
adc
bnd
push
fstpl
pushl
push
in
fisubrs
insl
jmp
fidivrs
sbb
xor
repz
aas
xchg
and
xor
inc
in
xor
lret
pushf
mov
pop
fbstp
jns
inc
xlat
sub
test
sub
or
rcll
in
add
fisubrl
adc
sub
outsb
fst
ret
lcall
push
roll
mov
clc
str
pop
andl
popa
andb
sbb
imul
cld
sub
push
or
mov
lock
test
sbb
inc
and
push
inc
lahf
cld
lods
xchg
mov
fistpll
hlt
xchg
ret
repnz
sbb
jecxz
sub
ss
jno
pop
push
lret
pop
pop
popf
sbb
xor
push
icebp
inc
ljmp
in
popa
nop
loopne
jne
add
popa
ja
add
push
jb
xchg
xor
xchg
subb
lret
xor
sub
mov
mov
clc
mov
es
int3
ret
and
mov
and
mov
test
int
in
mov
les
shll
repz
push
int
adc
leave
cmp
adcb
fildl
sbb
mov
add
jge
or
push
xchg
nop
pop
mov
push
jg
jb
dec
ret
bnd
sbb
mov
adc
and
ret
push
clc
movsl
loope
mov
loop
pop
sti
and
dec
lcall
rorl
bound
xlat
pop
mov
leave
out
dec
inc
fwait
cld
inc
imul
push
lret
adc
pop
fldt
aas
and
clc
or
mov
xchg
mov
adc
sub
pop
cmp
pop
pop
in
stos
loope
aas
in
icebp
pop
jns
in
pop
test
dec
adc
adc
enter
cmp
mov
mov
popf
ret
in
xor
jecxz
je
jns
xor
or
sarl
dec
xlat
je
inc
outsl
js
data16
jb
iret
out
mov
push
xor
loop
jmp
xor
lcall
pop
mov
insl
mov
xchg
fwait
mov
jge
mov
jne
sbbl
and
cli
and
mov
les
fidivs
mov
ror
sub
into
lret
loopne
js
shl
aaa
jb
jmp
inc
test
xchg
mov
pop
pop
pop
popf
mov
es
push
loopne
xor
push
pushf
add
dec
cmpsb
loopne
mov
xchg
mov
xchg
push
lahf
jbe
hlt
ret
sbb
aad
cmp
lret
rcr
push
mov
xchg
leave
mov
sarl
daa
xorb
stos
and
xor
pop
hlt
cli
jg
mov
jmp
or
inc
ss
xor
fisubl
adc
cmp
dec
pop
xchg
sub
mov
shrb
aaa
mov
cmp
jp
xchg
jg
fdiv
jp
in
je
sub
sbb
ja
jns
adc
addr16
es
movsb
inc
je
xor
pop
xor
daa
sbb
stos
fucomi
rolb
push
and
outsb
enter
ja
push
jbe
mov
xchg
in
int
jnp
jnp
xchg
nop
fsub
mov
hlt
stos
loope
sub
push
add
mov
insl
push
fwait
jae
mov
push
repz
je
movsb
xor
inc
adc
pop
jno
mov
cs
add
ss
das
cmp
dec
pushf
jl
mov
insb
lahf
or
sbb
mov
stos
add
inc
adc
lahf
aam
cltd
push
aas
adc
inc
pop
push
sub
sbb
add
cmp
stos
ffreep
shrl
add
scas
cmp
sarb
mov
negl
cltd
ljmp
push
sub
imulb
add
test
popf
popa
add
cmp
dec
scas
out
sbb
push
xor
push
rolb
in
dec
imul
je
faddl
adc
dec
addl
jmp
pop
orb
aas
lret
rcl
push
pop
enter
repz
push
xor
cmp
xchg
lea
sahf
xchg
jne
dec
cmp
dec
mov
push
jbe
push
push
popa
aas
stos
push
push
btrl
xor
dec
inc
push
movsl
imul
xchg
xchg
cmp
outsb
cmp
popf
cli
pushl
repnz
enter
notl
xchg
leave
xchg
jmp
cltd
jnp
dec
push
leave
fistl
rorl
outsl
int3
hlt
flds
mov
mov
test
movsl
and
std
pop
shlb
mov
arpl
push
outsb
test
inc
movsl
jns
xor
imul
xchg
jmp
jbe
xor
stos
cmp
mov
fdiv
dec
lock
repz
pusha
pop
mov
fnstenv
lahf
cmp
clc
lea
ror
mov
mov
lock
mov
lahf
sarl
scas
cmpsb
push
ret
test
jns
jl
popf
pop
lods
dec
xchg
jno
movsb
push
rcl
mov
xor
cmpsl
in
mov
add
sub
and
mov
aam
mov
adc
add
fwait
cltd
test
pop
hlt
and
sub
dec
rcr
data16
sbb
insb
xor
xlat
adc
sub
xlat
and
and
pop
or
jno
mov
movsl
cmp
or
add
lods
ljmp
jb
dec
pop
sub
lea
loope
jmp
mov
insl
sub
or
inc
xor
jg
cmp
pop
insb
mov
in
sbb
daa
add
inc
push
lds
mov
fdivl
out
addr16
insb
mov
push
inc
push
xor
int
xchg
sub
sub
fwait
xchg
jnp
nop
mov
fdivl
inc
imul
sub
gs
xchg
cmp
adc
jnp
cmp
arpl
inc
push
cmp
fiadds
push
cmc
sti
jb
test
addr16
add
shll
and
pop
shl
sub
fstpt
das
dec
xchg
out
imulb
ret
cmp
xor
sbb
insb
mov
fdivrl
imul
xor
pop
and
sub
add
xor
in
sub
xlat
frstor
bound
lahf
xor
push
jae
mov
mov
cmp
add
add
push
mov
push
push
in
popf
pop
sbb
in
leave
ficoms
imul
cmp
mov
or
into
fwait
leave
les
or
add
jge
outsl
xor
lods
and
cmp
mov
mov
sub
subps
fwait
xchg
test
test
and
movsl
jmp
mov
push
lods
push
addb
into
fisubl
stos
mov
mov
push
adc
imul
shl
outsl
ja
in
imul
sub
push
push
pusha
jl
repz
mull
push
jno
mov
push
test
push
jle
mov
adc
inc
dec
mov
mov
std
mov
sbb
ffreep
sbb
fisttps
jns
call
push
cwtl
pop
js
out
subb
lds
cmp
cs
imul
fidivl
rcrl
push
sbb
jae
adc
in
xor
jbe
xchg
ljmp
inc
mov
push
jo
mov
mov
fstp
cld
push
rol
cs
inc
push
mov
rcrb
cltd
call
cli
mov
cltd
dec
and
loop
mov
and
lea
mov
sti
jmp
test
notb
jmp
int
xlat
std
pushf
inc
and
jmp
mov
xchg
das
mov
mov
xchg
movsl
fdivl
lret
subps
mov
shll
mov
fidivrl
fistpll
lock
jns
jg
jge
or
dec
xchg
sarl
insb
mov
sbb
imul
in
outsl
lea
jb
adc
mov
fdivrl
mov
xchg
jmp
mov
sbb
es
push
xchg
nop
call
mov
cs
dec
pushf
cmpsl
sbb
xchg
fcomps
pusha
mov
adc
stos
sub
xlat
mov
stc
mov
aam
outsl
pop
sbb
lods
rcll
jle
mov
sarl
jbe
add
adc
mov
scas
sahf
stos
sub
pop
mov
jl
shr
sti
loope
std
xchg
xchg
jns
mov
out
mov
daa
lock
lret
mov
aaa
sbb
ss
cmc
bound
nop
xchg
aas
adc
cwtl
dec
add
ret
dec
jmp
mov
data16
sub
mov
loopne
lods
push
jno
inc
dec
iret
clc
cmp
inc
jb
jno
fistpl
push
add
mov
add
adc
das
shl
push
cltd
jb
cwtl
jmp
das
stos
and
pusha
imul
pop
fcomi
or
dec
sub
ljmp
or
std
add
aam
add
dec
scas
out
fnstcw
jbe
jmp
lret
or
add
addr16
fistl
inc
push
sahf
scas
rclb
stos
mov
push
lods
les
lcall
and
fs
jp
pop
movsb
imul
jmp
fldenv
es
push
aaa
push
iret
scas
mov
and
xchg
test
daa
mov
cmp
pop
sub
movsb
test
aad
add
or
lods
push
mov
insl
mov
xchg
dec
cmp
lcall
push
jno
jno
scas
stos
sub
mov
leave
lret
mov
mov
lods
push
je
or
or
stos
imul
pop
dec
cltd
test
popa
imulb
pop
imul
insb
and
es
cwtl
arpl
pusha
repnz
jl
sub
xor
dec
cmc
orl
sub
stc
jo
add
enter
cmpsb
mov
dec
mov
mov
add
xchg
sub
add
pop
inc
mov
inc
or
mov
test
xchg
push
mov
jnp
mov
and
inc
jo
out
mov
stos
mov
mov
roll
fstpl
xlat
loopne
outsl
sub
mov
xor
pop
pop
imul
xchg
es
lods
cmp
inc
push
testl
push
mov
inc
dec
mov
inc
xchg
scas
mov
add
insl
fbld
fldt
lahf
adc
into
sub
cmp
aas
ficompl
sbb
cltd
cmp
jb
idivl
sub
add
addr16
test
mov
ds
fwait
pop
shll
repz
add
mov
add
jg
and
fcompl
inc
bound
mov
dec
adc
fsubl
jl
adcl
pop
dec
xchg
mov
jbe
lahf
sub
push
mov
out
sti
test
ss
ret
add
js
cmpsb
test
pop
mov
and
xchg
xchg
addr16
pop
es
in
or
daa
repz
adc
bound
add
cmp
push
gs
xor
xor
push
ffree
lods
or
jbe
sub
inc
cmp
inc
insb
lahf
cli
mov
outsb
bswap
xchg
sbb
xor
xor
cmpsl
test
mov
test
inc
xchg
and
daa
pop
or
int
pop
ret
pop
pop
loop
jge
mov
dec
pushl
inc
xor
push
mov
test
cli
sarl
lods
dec
std
inc
repnz
stos
mov
jns
sub
test
shr
movsl
sbb
jp
dec
js
push
xor
cld
and
popf
pop
mov
add
xor
or
fisttpll
push
call
push
or
add
sbb
mov
dec
sub
adc
add
test
popf
out
scas
inc
inc
jg
mov
push
shrl
fildll
call
ffree
arpl
sub
sub
sbbb
xchg
rorb
pshufw
testl
add
in
popf
iret
pop
shlb
fmul
sahf
in
add
and
sahf
mov
cmpsb
xchg
out
scas
data16
mov
lret
mov
sarb
rol
call
inc
in
ljmp
adc
push
pushf
mov
push
ds
gs
xor
push
sahf
push
sahf
add
or
mov
xchg
push
std
out
je
out
mov
movsl
mov
mov
pop
scas
push
add
cltd
inc
fadds
insl
cmp
xchg
stos
add
aam
lea
mov
add
or
fmuls
dec
or
sti
jo
sub
cmp
fwait
add
bound
mov
pop
mov
pop
iret
add
das
es
mov
mov
push
fisttps
add
and
out
push
imul
pop
mov
mov
jne
popf
add
sub
lcall
mov
mov
push
rclb
dec
outsb
cmp
imul
sbb
or
in
into
jecxz
mov
sub
and
jo
faddp
into
cwtl
xchg
jo
call
sbb
pusha
cmp
rorb
push
xchg
pop
sbb
shrl
pop
movsl
test
cwtl
aaa
dec
rcl
cmp
into
sub
in
adc
inc
and
aaa
or
test
inc
inc
or
and
push
das
scas
mov
mov
jp
hlt
ljmp
push
mov
mov
scas
mov
adc
mov
dec
jnp
dec
mov
mov
arpl
push
jne
inc
inc
addl
add
adc
mov
sub
nop
add
aam
and
lahf
sub
push
andb
sbb
shll
add
mov
push
arpl
mov
cwtl
imul
xchg
push
push
out
adc
pop
pushf
fldcw
roll
xchg
dec
adc
jmp
cltd
test
or
or
inc
je
sub
jb
ret
sub
dec
mov
arpl
dec
inc
mov
push
add
addb
push
lahf
mov
push
rcl
mov
inc
hlt
std
scas
repz
ret
dec
iret
jmp
inc
push
xor
stos
jg
loop
jg
sbb
adc
cmp
popf
push
adc
ret
jge
popa
jbe
sub
xor
stos
fdivs
mov
cmp
stos
mov
xchg
loop
dec
pop
mov
add
xor
imul
popf
mov
xorb
out
movsb
popa
shrb
jg
shll
outsb
movb
repz
adc
sub
aas
cmp
adc
push
jnp
cmp
and
jmp
daa
dec
inc
bound
mov
in
aas
ja
jb
stos
sahf
mov
cli
sarl
stos
dec
and
adc
xchg
jmp
out
repz
inc
jecxz
int3
xchg
mov
test
adc
add
mov
pop
call
mov
lcall
or
sbbb
xchg
sbb
rclb
xor
add
cmp
or
ljmp
enter
and
insl
adcb
fildll
lods
and
push
shl
testl
jge
and
loop
push
popa
shlb
xor
jnp
adc
call
imul
fcmovb
movsl
sbb
push
iret
sbb
test
xchg
dec
andb
sbb
and
mov
jp
daa
pop
out
mov
xor
sarb
dec
bsr
mov
dec
fistpll
push
xor
or
sti
inc
shrl
and
push
mov
fmull
repz
pop
dec
aad
xchg
mov
pop
xchg
jmp
insb
int
push
pop
shl
adc
rolb
into
notb
mov
mov
adcl
movsl
cmpsb
and
out
and
jg
sub
adc
add
hlt
jl
sbb
pop
pop
in
mov
push
sbb
and
xchg
enter
test
sub
jl
aas
lods
sbb
pop
imul
or
inc
or
mov
and
sub
jnp
jns
fnstenvs
test
out
pop
lahf
mov
in
fimull
lock
or
jns
inc
inc
ds
fidivrl
fistl
ss
mov
mov
gs
pop
inc
mov
adc
lods
cmp
pop
pusha
pop
jecxz
mov
sbb
or
std
add
cmp
fadd
pop
ja
popa
aaa
imul
jecxz
fcoml
push
dec
lret
loopne
ja
or
and
mov
xor
ljmp
cwtl
mov
ret
mov
xor
pop
mov
test
push
push
jnp
jbe
daa
or
insl
outsb
and
neg
push
in
hlt
cltd
sub
orb
fimuls
jge
inc
ljmp
cmp
sbb
xor
push
jnp
pop
or
sbb
cwtl
fs
call
stos
and
xor
hlt
mov
adc
stc
fsubrp
xchg
imul
inc
cmp
mov
out
shl
loope
sarb
adc
vsubps
jae
pop
or
pop
pop
inc
or
xchg
xor
mov
dec
imul
mov
sarl
dec
seto
jp
fisubrs
xchg
fisttpl
xor
ss
mov
clc
jbe
sbb
jecxz
sbb
and
or
jmp
popa
mov
jecxz
fbstp
jge
or
in
sub
fadd
mov
in
in
sbb
in
push
sarb
cli
push
js
pop
in
in
mov
loop
loopne
iret
pop
and
ja
cwtl
add
xchg
stc
popf
scas
std
dec
mov
and
jg
and
mov
sub
in
mov
add
push
or
fstps
sbb
inc
sbb
pushf
mov
test
jb
andb
in
in
mov
mov
dec
mov
pop
sub
enter
xor
lahf
repnz
scas
fcmovnb
cld
fiadds
pop
mov
dec
and
addr16
data16
jmp
and
push
mov
jne
cmpsl
mov
nop
scas
std
xchg
subps
push
push
fcomps
xor
into
sub
xor
jmp
inc
inc
push
cmpsl
lcall
rcrl
das
fs
jmp
jbe
mov
and
push
sahf
movb
adc
pop
sahf
jmp
and
inc
fwait
imul
pop
mulb
mov
mov
mov
cwtl
repz
sub
sub
jnp
mov
push
mov
push
fdivr
and
mov
stos
ja
and
push
cltd
xchg
inc
push
xchg
push
dec
outsb
or
xchg
js
arpl
sbb
push
cmp
adc
push
clc
nop
add
mov
and
insb
rorb
cmp
cmp
inc
jae
inc
push
bound
push
jno
xchg
mov
push
insl
out
cltd
ret
mov
bound
mov
mov
jp
push
lcall
xchg
mov
mov
sbb
cmp
or
pushf
pop
inc
add
daa
outsl
aam
push
fstpt
and
or
test
lods
push
les
idivb
dec
push
pop
pop
jle
cmpl
pop
lret
into
and
jmp
adc
adc
out
sbb
pop
negl
mov
and
add
pop
cld
pop
and
push
sar
push
add
dec
mov
adc
loop
mov
or
add
movsl
mov
imul
aam
mov
cmpb
aas
or
fwait
cmp
xchg
hlt
in
xchg
aad
pop
push
xchg
iret
mov
stos
sub
push
call
jb
jb
arpl
shr
jecxz
mov
mov
ja
mov
inc
sub
scas
insb
and
dec
ret
mov
adc
inc
roll
jl
sub
adc
xor
cld
ret
mov
dec
pop
xor
cmp
test
mov
jns
adc
xor
lahf
stos
or
inc
jl
lret
cmp
jae
inc
fiadds
lds
fmuls
les
ljmp
xchg
sbb
imul
iret
fadd
in
es
sbb
push
push
cmp
sbb
pop
lret
daa
fsubr
divb
pusha
sar
mov
pop
pop
test
rcrb
inc
adc
add
push
mov
cs
cmpsl
sub
jnp
addr16
ret
rclb
add
bound
mov
fistpl
pop
arpl
pop
jmp
loope
sbb
cmp
leave
into
jecxz
sub
add
and
mov
or
or
dec
xor
hlt
pop
add
test
sub
les
jl
popa
insl
frstor
pusha
sbb
dec
pop
shlb
nop
int3
std
adc
loope
ret
incl
xchg
movsl
and
xor
or
add
cmp
push
lock
cmc
mov
nop
pop
rol
outsl
cmpl
mov
out
pop
mov
popf
adc
std
je
push
je
lcall
mov
xchg
pop
sub
push
fisubs
data16
xchg
jmp
or
negl
gs
int
or
mov
in
test
pop
loop
mov
xor
imul
mov
fcmovu
cmp
xor
pop
mov
xor
shll
std
push
mov
das
fcomps
mov
cmpsl
pop
scas
out
mov
cmpsl
sahf
ret
mov
stos
clc
pop
jp
sbb
mov
imul
jae
or
and
mov
orl
mov
and
mov
loop
cmp
into
fcompl
aad
and
hlt
fs
lret
testb
stos
rcl
and
fs
test
lds
xor
mov
add
pusha
and
movsb
push
sbb
dec
test
fstp
xchg
lods
jl
lcall
and
imul
sbb
mov
inc
scas
cld
add
sar
ds
pop
xor
imul
pop
adc
xor
mov
lods
jmp
das
jp
pop
out
jbe
es
xchg
adc
add
sbb
xchg
in
dec
sti
xorb
push
mov
xchg
jne
jecxz
dec
out
sub
push
lods
fiadds
data16
jge
in
xchg
add
xor
jne
lock
mov
jo
xchg
fsubrp
add
sbb
mov
hlt
imul
bound
push
pop
xor
inc
mov
and
cmpl
movl
fs
dec
mov
mov
fs
popf
and
movsb
cld
sbb
bound
movsb
inc
mov
scas
jmp
lret
pop
bound
cmp
xor
mov
push
inc
xchg
ja
adc
movsb
mov
cli
sbb
repnz
ja
and
aaa
and
mov
les
xlat
stos
push
push
jno
loop
jno
sub
cmpb
mov
cltd
lahf
sbb
cwtl
sub
in
test
mov
jle
dec
jl
inc
or
mov
cltd
movsl
mov
cs
decb
data16
mov
int3
fst
popf
inc
in
push
movsb
mov
or
mov
fildll
popa
arpl
movsb
mov
pushf
orb
xchg
sub
insb
xchg
jmp
ja
mov
adc
cmp
cld
lock
pushf
nop
rorb
push
popa
imul
mov
ljmp
pop
push
mov
push
gs
and
add
xchg
pop
adc
popf
stos
push
jmp
dec
fcomps
dec
sub
mov
dec
aaa
rcl
dec
sbb
pusha
xchg
lcall
lret
mov
mov
popa
sbb
outsb
sub
fstps
shrl
pop
add
sbb
out
out
jp
das
jmp
inc
roll
sbbb
fbstp
lret
ljmp
inc
lcall
inc
adc
jecxz
cs
int3
sbb
xchg
sbb
adc
push
mov
ret
jae
scas
fadds
inc
stc
jmp
adcl
pop
mov
cmp
jno
mov
enter
xchg
xor
inc
imul
cld
dec
mov
sub
cmp
sub
lcall
cld
ret
and
adc
sbb
xor
adc
push
sbb
sbb
or
sar
out
and
out
out
enter
sub
les
mov
jnp
or
or
add
mov
in
sub
rcrl
popf
add
adc
call
jl
scas
pop
pop
pushf
xor
cwtl
mov
jae
mov
out
mov
movsb
dec
rcrl
xchg
add
stos
add
jmp
mov
inc
cmp
cmp
add
jp
xchg
or
cmp
push
add
psubb
jnp
push
push
lret
xchg
mov
js
cmp
pcmpgtd
fidivrs
cmp
jge
cld
leave
push
clc
mov
jae
mov
add
iret
add
lea
test
inc
xchg
sub
stos
push
mov
imul
adc
cmpb
imul
loope
rolb
inc
shr
cmpsl
pop
stos
cmc
pop
mov
mov
or
test
cmc
and
jp
xchg
jnp
int3
adc
mov
or
out
inc
les
nop
inc
js
inc
cmpsl
sbb
push
subb
lahf
test
mov
xchg
dec
std
mov
or
repnz
cmp
dec
push
sbb
xchg
test
mov
adc
pop
and
pop
pop
jne
xor
leave
lds
repnz
orb
in
data16
pop
xchg
dec
mov
es
sbb
cmp
cs
and
cmp
pop
push
pop
or
inc
jns
andb
sub
xchg
add
push
xlat
cmpsb
fdivrs
into
adc
shlb
gs
lods
dec
or
cmp
pop
push
inc
or
cltd
push
dec
mov
sarl
xlat
hlt
mov
and
jnp
pop
paddusb
sbb
ds
sbb
sbb
stos
ret
xchg
sti
fsubl
jno
push
xlat
push
and
xor
add
test
push
push
jnp
cwtl
push
mov
bound
push
mov
vpackuswb
mov
test
mov
push
test
test
mov
jo
push
shl
icebp
js
or
sbb
jns
mov
ja
lcall
call
jbe
cwtl
int3
in
sahf
and
loopne
jp
jb
enter
jno
into
test
scas
dec
push
mov
xor
sub
into
jmp
push
xchg
sbb
jo
test
inc
cmp
idivb
rol
imul
das
pop
fmulp
push
clc
cmpsb
pusha
lret
mov
mov
movsl
ss
mov
mov
xlat
mov
mov
loop
cvtps2pd
push
mov
pop
lock
push
negb
test
test
hlt
jae
sarb
add
popa
ds
cmp
or
fs
outsb
sbb
mov
pop
es
or
icebp
inc
fldl
inc
std
filds
out
in
push
jge
mov
fsubrs
add
push
xchg
sbb
testl
int3
rclb
stos
out
seta
xchg
add
cmc
cmp
xor
or
ja
push
cmpsb
std
popf
rol
arpl
cld
jns
popf
xlat
ss
popf
scas
int3
jne
dec
nop
pop
out
jae
icebp
mov
mov
add
repz
cmp
icebp
mov
daa
mov
xor
inc
jp
test
push
scas
sub
mov
mov
push
jbe
jnp
movsl
mov
pusha
in
jo
mov
adc
lret
std
jb
bound
daa
sbb
adc
movsl
jle
and
loopne
cmp
mov
cltd
push
ret
mov
dec
cmp
mov
fninit
cld
or
or
add
jl
inc
or
addr16
mov
xchg
imul
fstpt
pop
jae
out
jns
sti
sbbl
pop
xchg
aas
and
jp
loope
aam
sub
sub
test
pushf
sbb
aas
inc
push
xorl
int
xor
rcrl
and
movsl
loop
and
repz
pop
add
inc
xor
aas
iret
jo
test
cld
cmp
loopne
xor
test
push
sti
push
clc
stc
dec
imul
jne
or
cwtl
pop
shlb
sub
mov
stos
sbb
sarl
inc
stos
dec
dec
pop
popa
xor
fs
and
fmuls
dec
dec
scas
dec
push
xchg
mov
sbb
pop
add
xchg
jecxz
cmp
mov
int
push
mov
lods
sti
jl
filds
pop
into
mov
fidivrl
push
dec
xlat
scas
mov
mov
push
imul
cwtl
ss
icebp
xchg
pop
jle
adc
sbb
add
into
cs
xchg
test
les
pop
pop
xchg
into
movsb
and
ds
hlt
mov
or
lods
mov
jg
mov
fdivl
xor
push
mov
pop
cli
push
repz
cmp
jnp
rorb
sbb
sub
loopne
and
cltd
pop
pop
add
fdivr
mov
loop
out
or
sbb
cmp
push
mov
cmpsl
es
lds
sub
xchg
test
cmpl
xchg
stos
movsl
lods
jl
push
inc
mov
gs
jge
arpl
stc
jp
loop
jl
pop
or
sbb
stc
push
mov
adc
nop
push
ret
jg
in
add
out
cmp
or
or
cmc
inc
push
cmpsb
std
sahf
std
cmp
pop
add
and
add
dec
inc
or
adc
je
push
xchg
mov
pop
push
sub
cwtl
pop
mov
mov
insb
fldenv
outsl
push
loope
pop
jmp
jp
push
push
push
out
sub
mov
sbb
icebp
and
push
jp
aam
popf
jle
xchg
xor
lods
lods
cltd
pop
movb
push
shll
dec
in
add
xchg
jns
xor
aaa
fs
mov
jno
pop
addr16
ljmp
jge
popa
lods
lret
pop
dec
and
xchg
movsb
std
jae
ljmp
pop
testl
adc
pusha
mov
sub
std
sbb
or
out
push
jno
adc
fsubs
push
jmp
adc
inc
mov
sahf
cmp
stos
push
mov
lcall
in
sub
inc
test
hlt
jns
mov
pop
test
out
rcrl
imul
lret
aam
dec
adc
xchg
mov
clc
mov
pop
adc
inc
add
push
mov
cld
mov
jae
and
adc
adc
ja
push
xchg
frstor
push
cltd
in
into
xor
sub
fbld
adc
xchg
repnz
xor
add
icebp
movsb
adc
jmp
add
sbb
cltd
insl
add
mov
or
push
push
cli
testb
jle
add
push
or
cmp
pop
outsl
dec
mov
mov
daa
es
xchg
dec
rorl
inc
xchg
lret
mov
in
xchg
les
dec
test
push
mov
rorb
out
mov
mov
incb
lret
jle
ljmp
jmp
outsl
jb
lcall
insb
xor
sub
lock
jae
jp
xchg
mov
sbbl
cmc
and
andl
xor
jno
jle
mov
aas
and
bound
mov
jp
fsub
enter
rol
mov
mov
lock
push
or
faddl
dec
xchg
adc
sub
aam
cli
dec
sti
sub
gs
in
ret
aad
xchg
mov
push
sub
nop
loop
cmp
cmp
ljmp
std
adc
cmp
xchg
pop
push
push
pop
sub
adc
push
sbb
jae
push
push
lds
inc
fnsave
fbld
aaa
imul
mov
fimull
push
xor
jbe
iret
and
aam
pop
aad
mov
mov
repz
or
xlat
xchg
jmp
jmp
insl
je
loope
push
hlt
mov
mov
push
dec
inc
push
gs
jge
data16
das
push
push
fmul
push
nop
repz
pop
pop
imul
sti
sbb
or
cmp
mov
cmc
mov
mov
mov
push
push
sahf
sarb
loopne
addb
mov
insb
adc
sbb
sahf
jb
in
in
inc
in
pusha
mov
in
iret
outsb
inc
dec
dec
mov
mov
inc
inc
cmpsl
mov
shll
ljmp
popf
ficoml
cli
or
in
sub
adc
mov
insb
lcall
outsb
adc
mov
sbb
pusha
ret
xor
scas
inc
lcall
push
roll
add
ss
mov
mov
ret
push
movsl
mov
xchg
sar
dec
dec
and
sbbb
aad
cli
es
adc
or
bound
pop
out
sarb
sub
dec
xor
lret
repz
cmc
push
adc
addl
sbb
test
sbb
mov
call
inc
test
dec
mov
dec
add
jne
icebp
sub
or
aad
mov
cs
nop
ja
mov
jmp
push
or
sub
xor
push
add
rdmsr
mov
mov
dec
mov
add
mov
dec
pop
adc
push
bound
sbb
fidivrl
pop
sbb
mov
mov
arpl
add
loope
sub
mov
fwait
mov
repnz
push
jl
stos
adc
sub
jbe
cltd
xchg
adc
inc
or
in
icebp
add
mov
dec
aaa
mov
sbbb
cmp
insb
fidivrs
leave
mov
dec
lret
and
std
mov
frstor
popf
pop
nop
mov
adc
mov
mov
pop
in
xchg
lock
cmp
fildll
mov
mov
mov
rcll
stos
sbb
mov
sarl
cld
aaa
les
fisubl
sub
mov
inc
outsl
jp
outsl
scas
mov
pop
mov
mov
addr16
pop
aam
call
mov
movsl
loope
fstpl
inc
jns
dec
fnstenv
cli
mov
jl
and
xchg
or
adc
frstor
shll
popf
mov
adc
cmp
pop
sub
sbb
inc
push
mov
adc
jle
cmp
add
in
in
test
sub
int3
push
and
int
pop
in
dec
push
loop
push
xor
sahf
fisubrl
cmpsl
push
ss
lea
fistpl
pop
pop
rcrb
and
mov
add
inc
aam
stos
mov
jmp
xor
sub
addr16
int3
pop
and
inc
mov
adc
mov
pop
cmp
mov
ret
fsin
jbe
aam
or
cli
cld
adc
ds
aad
push
xchg
jle
push
mov
sbb
pop
pushf
add
inc
jmp
movsb
popf
sbb
lds
ror
call
xchg
pushw
push
jmp
adc
mov
fidivl
jl
jl
add
mov
adc
sbb
add
jmp
int3
xchg
popf
or
cli
sub
fistpll
xchg
mov
lret
mov
test
rcrl
cltd
and
pop
gs
fs
dec
inc
mov
push
stos
add
jp
je
push
fwait
xor
add
sub
repnz
sahf
xor
dec
out
int3
ss
out
dec
outsb
push
pop
cltd
outsl
mov
sbb
mov
sub
rcll
inc
cmpsl
sahf
gs
or
in
push
push
adc
popa
xchg
pop
mov
push
idiv
ret
xchg
cld
adc
inc
loope
xlat
push
lods
lahf
xor
out
mov
jo
popa
cld
jmp
adc
out
xlat
lea
cltd
sbb
inc
popf
enter
lods
cwtl
xchg
mov
outsl
adc
lret
and
lret
lret
mov
mov
sbb
xor
into
sub
jge
rcrb
outsb
test
mov
repnz
jmp
in
push
loop
jmp
push
xor
add
xor
ret
testb
outsl
out
inc
cld
cwtl
mov
mov
xor
insb
push
xor
mov
adc
roll
cld
int3
xorl
mov
pushf
lahf
adc
andb
jle
or
sti
inc
imul
test
pop
cltd
std
stos
adc
inc
aaa
in
push
insl
push
inc
pop
mov
jns
xchg
jmp
jp
aam
xor
push
inc
adc
loopne
idivl
cwtl
mov
imul
cmp
pushf
insl
ret
out
cmp
mov
fidivrl
stos
push
mov
lret
loope
mov
cmpb
popa
cmp
mov
dec
dec
cmp
aaa
pop
div
cmp
mov
lods
fimuls
xor
pop
adc
arpl
push
lods
outsb
inc
dec
cmp
out
xlat
lods
mov
test
idivb
popf
fwait
inc
cltd
das
sub
bound
cwtl
pop
sarb
add
mov
std
test
aam
outsl
xchg
iret
pop
adc
test
or
or
xor
pop
pop
mull
cmp
shl
mov
xchg
rolb
sbb
hlt
jmp
mov
mov
xor
lret
lahf
imul
push
in
dec
inc
inc
arpl
adc
cld
xor
fs
shl
jae
jecxz
inc
xor
inc
insl
aaa
shrl
dec
cmp
add
add
xchg
xchg
sub
cmc
pop
cmp
pop
inc
rcll
dec
push
pop
push
fwait
std
push
adc
addl
xchg
pop
lods
fwait
xor
orb
xchg
or
mov
inc
and
je
cmp
call
dec
nop
scas
in
std
add
sysexit
mov
xchg
ja
int
lret
add
push
imul
mov
cs
lock
test
movb
mov
push
gs
sub
test
mov
add
in
jecxz
jno
push
mov
push
dec
sbb
lods
hlt
cld
sti
dec
clc
sti
and
dec
mov
outsb
mov
xor
loope
inc
mov
repz
dec
mov
scas
rolb
js
push
and
movsb
das
mov
out
aas
les
cld
cmpsl
pop
popf
xchg
sbb
ret
int3
lods
cltd
out
add
mov
adc
jle
sub
jbe
ljmp
repnz
add
ds
pusha
js
cmp
mov
adcl
sub
sbb
inc
stos
lret
add
pop
jae
adc
mov
in
int
push
sahf
sub
cmp
fidivrl
jo
in
and
dec
mov
or
add
and
test
push
movsb
and
mov
mov
jge
inc
ds
cmpsb
mov
orl
rclb
adc
aad
aaa
lods
jmp
shll
push
push
shll
sbb
gs
imul
in
imull
pop
mov
sti
jmp
shrl
mov
rclb
mov
fs
mov
mov
jns
into
adc
pop
xor
bound
sbb
or
les
or
lahf
mov
addl
lret
sub
and
sub
mov
mov
adc
mov
sub
cmp
clc
insb
jmp
mov
jmp
xchg
mov
mov
mov
es
pop
in
xor
sub
js
xor
mov
aaa
sbb
mov
xchg
out
mov
outsb
jae
push
call
cwtl
mov
aad
iret
lods
pop
mov
mov
shl
cmp
iret
adc
rcr
mov
int3
push
mov
jo
pop
or
fs
adc
mov
cli
shrl
mov
mov
cmp
fabs
scas
jl
cli
cli
cmp
and
sub
cli
das
dec
sub
lock
xor
std
prefetch
or
inc
adc
cmp
imul
rorb
mov
jle
lods
arpl
aaa
in
scas
js
lret
jle
cmp
jge
int
scas
or
ss
inc
mov
iret
xor
aam
inc
mov
aam
or
fldenv
jmp
push
and
loopne
xor
sahf
jg
stos
xor
mov
pusha
ret
add
rol
stos
xchg
jecxz
mov
and
dec
mov
dec
mov
or
pushf
lods
adc
cmp
jge
pop
inc
aad
jo
popa
lods
mov
push
mov
xor
repz
jo
mov
dec
pop
das
xor
ret
into
ss
cwtl
les
mull
adc
ds
push
dec
mov
lock
popa
xor
jg
mov
lahf
cmp
cmp
push
fwait
pop
repnz
repnz
sbb
sti
adc
mov
xchg
xchg
inc
push
and
imulb
xchg
test
lahf
cwtl
and
or
push
sbb
xor
cmp
sti
popa
jae
adc
dec
mov
mov
push
cli
loope
or
rclb
mov
mov
sbb
pop
adc
inc
dec
hlt
push
rorb
cmpsb
cmp
push
fimull
pop
push
mov
stos
pop
sti
dec
fstpl
jl
out
mov
mov
into
int3
sub
call
push
cmp
dec
xor
mov
paddw
sysret
xchg
lcall
fcmovnb
fcoml
jp
mov
lods
mov
xor
pop
or
loopne
mov
shr
outsl
jnp
pop
and
call
add
xchg
xchg
dec
add
sahf
out
mov
clc
jl
imul
es
jnp
ds
adc
dec
shl
and
mov
out
xor
adc
sub
pushl
out
mulb
js
popf
aad
dec
das
aad
xchg
pushf
sbb
pop
jl
push
idivl
jne
ret
or
mov
dec
mov
repnz
test
shlb
pop
movsl
mov
inc
lods
cmp
jge
ds
xor
mov
xor
icebp
mov
add
dec
mov
xor
cmpsl
cmpsl
ficomps
adc
jl
add
loopne
out
jno
std
cmpsb
push
imul
sahf
bound
ficomps
sahf
lahf
movl
mov
push
scas
cmpb
or
insb
mov
in
or
pop
das
push
sti
jnp
enter
jecxz
ffreep
inc
aad
icebp
loop
cmp
xchg
sub
cmpsl
cmp
mov
sti
cwtl
stos
pop
ds
jle
mov
add
fs
stos
mov
mov
jne
mov
clc
adc
call
stos
inc
mov
mov
cmc
dec
out
addr16
std
pop
push
ds
lods
inc
xor
add
ret
or
mov
insb
enter
xorb
cmpsb
rcll
daa
and
dec
stos
cli
scas
in
push
scas
dec
mov
jl
loop
roll
dec
add
insl
add
and
or
jmp
inc
int3
ljmp
adc
push
int3
inc
xchg
or
or
mov
fisttps
inc
pushf
jnp
adc
cmp
push
jb
mov
punpckhwd
and
inc
cmpsl
xchg
fstpt
aas
mov
or
scas
mov
out
cmp
push
popa
mov
mov
aaa
cmp
jg
xchg
add
cmpsb
xchg
cld
loop
mov
ljmp
jnp
testl
push
mov
out
cmc
push
ja
ret
xor
jb
cmp
ss
ficomps
es
cmp
lcall
sub
jmp
pop
hlt
sbb
adc
arpl
rcl
leave
xor
dec
add
dec
xchg
inc
or
xor
push
lea
xchg
add
outsl
mov
adc
mov
stos
dec
mov
movsb
negb
daa
lea
aad
lcall
pop
mov
or
lods
rcrb
test
or
pushf
pop
pop
and
sub
xor
jge
test
sti
ljmp
test
in
pop
mov
pop
out
cmp
subb
andl
push
xchg
arpl
push
xor
out
inc
out
rcll
in
inc
in
fwait
mov
adc
push
or
pop
lret
ds
test
es
shll
jne
aad
cmp
jo
mov
cs
adc
fldt
xor
cmp
pop
cld
gs
add
mov
addb
loope
hlt
notl
pop
sub
test
repz
ljmp
daa
sub
fisubrl
mov
jae
xchg
or
mov
cmc
ret
bound
push
repz
popa
mov
nop
xchg
aaa
hlt
jg
andl
daa
mov
test
inc
movsb
mov
inc
jno
or
adc
scas
sbb
xor
or
clc
push
bound
cmpb
push
or
inc
shrl
xor
test
pop
or
mov
loopne
jecxz
mov
xchg
popa
jae
push
cmp
ss
inc
push
popa
ret
lcall
inc
adc
xor
orl
divl
cmpsl
xchg
cmpsl
ja
outsb
and
mov
sbb
int
in
int
add
out
add
aaa
jg
xor
jns
adc
bound
out
mull
mov
in
js
pushf
into
mov
add
add
insb
inc
cs
or
sbb
pop
and
je
into
xchg
imul
ds
hlt
call
pop
rolb
lcall
mov
jg
clc
into
bound
out
dec
push
sub
pop
insb
cmpsb
mov
add
push
sbb
push
mov
fsubp
out
dec
add
out
inc
push
jg
movaps
es
or
pop
jmp
xchg
mov
pop
push
mov
or
lahf
orb
out
add
inc
test
mov
call
mov
jbe
xchg
popf
and
jl
ds
stos
mov
arpl
jl
cmp
aaa
push
mov
xchg
cmp
movsl
mov
addb
mov
pop
sub
adc
loop
or
xor
jo
jns
mov
rorl
test
cmp
sbb
loope
sti
jnp
adc
lods
adc
in
mov
inc
sbb
push
xchg
xchg
or
repz
mov
test
pop
or
mov
xor
xor
scas
push
push
adc
mov
aam
fsubrs
gs
inc
cld
ss
enter
mov
das
lret
add
rcrl
daa
stos
xlat
mov
je
push
jo
jl
clc
push
mov
enter
sbb
popf
push
pop
fwait
xor
push
adc
mov
inc
cmp
leave
aas
jg
popl
loope
cmpsb
call
ja
lret
lods
jno
or
outsl
sbb
es
pop
mov
mov
xchg
pusha
nop
mov
es
mov
cmp
nop
xchg
adc
psubq
push
shr
es
sub
xor
pop
je
sub
arpl
arpl
xchg
pushf
pusha
and
sub
movsb
xor
mov
or
ja
sbb
xor
filds
add
ficompl
mov
pushfw
out
lcall
mov
ret
mov
repz
lret
aam
sub
sbb
mov
imul
ss
jg
jle
stc
repnz
mov
syscall
iret
sbb
sub
xor
jmp
adc
mov
push
hlt
sahf
jae
or
outsb
rcll
sub
add
dec
lahf
push
fnsave
push
int3
loopne
int
fidivl
in
mov
xor
in
inc
xor
push
sub
lods
popa
pusha
into
push
mov
xchg
aam
imulb
nop
xchg
or
and
shlb
mov
xchg
shll
mov
adc
lcall
das
or
sbb
rolb
lock
ja
popa
movsl
cmpb
loop
inc
mov
int3
repnz
mov
scas
subb
mov
push
pop
sti
out
xor
in
cmpsb
inc
lcall
imul
pop
jmp
xchg
jbe
and
pop
ss
push
clc
cmp
cmpsb
adc
and
sub
jbe
test
les
or
call
int3
xchg
ret
sahf
jmp
test
xchg
fadds
rcrb
scas
inc
jns
jmp
jb
pop
pop
out
cmc
sub
pop
mov
pusha
enter
mov
xchg
icebp
fimuls
subl
std
xor
xchg
call
aam
mov
and
push
shll
xor
out
push
jmp
jecxz
sbb
mov
mov
sbb
loope
lods
cmpsl
fs
xchg
lret
or
lds
out
pop
mov
out
push
jo
mov
sbb
aaa
adc
mov
cltd
subb
or
xchg
popa
scas
cltd
ss
stos
out
mov
add
pop
mov
pop
pop
cltd
sbb
and
cmp
sbb
ljmp
sub
sbb
outsb
sbb
stos
add
idivb
daa
dec
pusha
cltd
xlat
divl
clc
pop
pop
out
adc
or
push
cld
or
and
lds
push
mov
mov
push
dec
dec
fucomip
or
cmp
jecxz
jmp
add
nop
mulb
sbb
shrl
lahf
je
into
lret
into
les
cmp
out
jecxz
icebp
ret
loopne
call
arpl
mov
cmp
lea
pop
xchg
loop
cli
je
inc
cmp
or
jno
inc
das
and
adc
pop
xor
push
testb
ret
pop
push
lret
gs
pusha
jl
rclb
mov
rcr
imul
adcl
push
adc
outsb
bswap
pushf
fsubrl
pop
mov
out
outsb
add
or
scas
mov
fnstenv
mov
sub
mov
insl
push
mov
outsl
fstl
mov
lret
xchg
dec
shll
lret
loop
cmpsl
addr16
push
fsubrs
xlat
mov
or
adc
je
push
imul
adc
imul
mov
cmpsb
dec
mov
xchg
mov
repz
test
jns
push
repz
lds
dec
icebp
mov
xchg
nop
fimuls
lahf
or
fnsave
xor
jg
stc
add
faddl
les
leave
incl
hlt
cwtl
adc
cmp
add
and
cmp
adc
gs
dec
bound
pop
xchg
movb
xor
adc
sub
pop
dec
add
nop
adc
clc
xlat
lock
hlt
lea
movsb
xchg
mov
xor
hlt
std
or
push
sub
xchg
ss
bound
pop
shlb
test
pushf
push
fidivrs
mov
cltd
push
xchg
jmp
xchg
in
sahf
in
sbbb
pop
imul
cmc
gs
jl
xor
mov
jnp
call
pop
add
hlt
int
outsb
enter
divl
and
shrl
daa
insl
movsb
pop
das
dec
dec
jl
mov
adc
adc
lods
cmp
rcrl
pmullw
pop
add
inc
sbb
mov
es
and
xchg
lcall
mov
leave
dec
inc
and
jl
aad
cli
fcoml
jae
mov
popf
pushf
in
stc
push
dec
push
cli
mov
std
cmp
addb
jae
aaa
xchg
in
dec
sbb
dec
adc
jmp
adc
orl
iret
aas
idivl
cmp
xchg
add
mov
mov
or
mov
lahf
xchg
pop
in
pop
insb
inc
and
jecxz
es
jb
mov
mov
sti
jb
mov
test
jbe
lcall
inc
xchg
les
mov
in
jmp
sbbl
pop
movsb
cltd
sbb
xchg
mov
xor
push
mov
inc
adc
xorb
push
add
xor
xchg
sub
in
xchg
bound
push
outsb
sub
lcall
pop
mov
inc
xlat
insl
test
divb
push
mov
imul
xchg
es
push
jmp
mov
insl
arpl
sti
push
imul
push
sub
out
cmc
xor
mov
cmp
mov
call
fildll
dec
jno
mov
or
xchg
sbb
mov
cld
pop
cmp
daa
out
lret
mov
js
push
jno
or
xor
jb
aad
mov
sbb
sbb
test
rolb
cmp
mov
add
outsl
test
mov
cmp
mov
fprem1
pop
mov
stos
jge
into
ficoml
nop
adc
xor
stos
int
xchg
test
test
sub
push
lods
cmp
cli
push
lcall
incl
in
mov
icebp
cmp
mov
mov
out
push
push
inc
and
repz
mov
xor
nop
lret
xor
inc
pop
ljmp
xor
sarl
jae
push
lcall
popa
imul
pop
clc
cmp
ret
divb
cmp
jbe
jl
adc
or
pop
jb
and
dec
and
arpl
lcall
mov
insl
or
movsb
push
xor
xor
xor
jnp
jae
mulb
xor
or
cltd
scas
jo
in
mov
ja
xlat
icebp
cmpsl
push
pop
add
mov
xchg
je
xor
pop
sub
and
fildl
out
push
fadds
les
lods
rcr
mov
fldcw
adcl
cmpsb
mov
out
cwtl
mov
lock
or
adc
popa
mov
jmp
xchg
xchg
jg
ljmp
lock
inc
push
aaa
loope
mov
mov
dec
or
arpl
mov
test
int3
sbb
jp
bound
or
lock
scas
pop
stos
nop
addr16
jne
icebp
loop
push
push
xchg
mov
dec
mov
sbb
iret
insb
dec
shll
mov
inc
outsb
mov
pop
addr16
scas
sbb
shr
add
and
clc
mov
xchg
fcmovu
int
mov
push
inc
testl
sti
dec
push
jno
pushf
ss
insl
dec
jmp
xor
insl
xor
ss
mov
jo
dec
inc
and
mov
imul
cmp
mov
xchg
dec
repnz
insl
push
cwtl
ret
jnp
test
adc
sbb
jmp
imul
nop
fs
add
mov
xor
jbe
lret
mov
push
dec
mov
pop
cwtl
cld
leave
xchg
cmpsl
pop
add
ret
sahf
insl
cmpl
fisubrl
ds
mov
push
adc
insl
xchg
xor
je
fwait
cmp
aad
jge
loop
mov
fdivr
pop
push
stos
mov
mov
jne
mov
or
sbb
add
aas
or
add
mov
scas
cmpsl
sbb
and
xor
fisttpl
sub
mov
mov
pop
inc
lret
cmp
arpl
add
pop
gs
lea
add
and
fwait
movsl
xor
lcall
pop
pop
inc
cmpl
shrb
jbe
cs
outsb
push
or
fidivrl
mov
lock
loopne
mov
out
adc
mov
outsb
mov
fcom
pop
bnd
jno
or
xchg
jecxz
xor
add
sub
sbb
and
push
aad
cmp
push
outsl
in
mov
adc
adc
addr16
dec
and
xchg
or
mov
add
lret
pop
push
inc
xchg
mov
loope
xlat
call
imul
std
ds
jl
jnp
mov
jb
pop
ror
hlt
insb
repz
push
xor
push
inc
ret
jmp
add
jp
insb
inc
cmpb
into
scas
add
leave
push
xor
xchg
dec
cwtl
xorb
jp
mov
pushf
push
add
dec
add
inc
xor
sub
testl
ja
mov
jecxz
inc
ror
sbb
rolb
mov
fidivl
inc
rcl
pop
mov
rorl
jne
outsl
in
das
push
dec
leave
pop
sbb
xchg
out
xchg
xchg
icebp
xchg
repnz
or
leave
cmp
jg
add
std
lret
cmp
and
jae
adc
fcoms
pop
jl
xchg
jne
push
int3
mov
ret
shll
mov
mov
ja
and
pop
mov
pop
das
sbb
mov
mov
cs
mov
out
mov
nop
push
lods
dec
cltd
mov
pop
sub
xor
lahf
adc
mov
jg
jmp
push
clc
sub
lock
aad
fwait
out
inc
jbe
push
mov
in
inc
dec
enter
iret
mov
pushf
pushf
cmpsl
rorl
and
xor
ss
mov
fisubs
jno
jge
push
add
aam
ret
bound
loop
insb
enter
xor
cmp
add
add
mov
xchg
testb
or
xor
sub
fbld
insb
rcrb
xchg
or
xchg
lea
loop
es
add
push
jns
xchg
mov
jns
xor
popa
jbe
inc
ret
in
xor
mov
cmp
out
mov
cmp
fistpll
cld
mov
pop
scas
push
iret
mov
jb
inc
xchg
cli
adc
ret
cld
mov
inc
pop
jo
adc
lea
call
test
filds
push
jmp
cmp
sarb
das
and
adc
stos
mov
inc
test
and
push
sti
insl
fstp
lcall
mov
int
hlt
cmc
inc
popa
adc
frstor
out
push
and
xorl
clc
pop
adc
xchg
mov
inc
movsb
cmp
lock
pushf
popa
pop
out
pop
sarb
popf
sub
xchg
mov
adc
pop
mov
sbb
cld
cmp
sbb
popf
arpl
dec
repz
push
mov
push
inc
insb
and
std
jo
ja
xchg
loope
stc
mov
xor
jne
mov
push
or
dec
jmp
leave
push
jae
aaa
mov
fs
cld
sbb
and
inc
cmc
cmp
or
pop
movl
dec
loope
in
jp
out
lcall
outsb
cmp
lret
mov
inc
div
movsl
insl
push
inc
jne
out
adc
movsl
test
enter
movsl
aad
lds
int3
inc
or
dec
les
and
insl
hlt
sbb
icebp
lods
dec
and
push
outsb
aas
sbb
idivb
mov
fildl
pop
ja
imul
das
sahf
adc
mov
dec
rcrb
out
lds
sbb
jbe
sahf
loopne
fsubs
pop
xorl
mov
pop
mov
rdmsr
jl
xchg
mov
xor
pop
adc
addl
fdivs
xchg
push
in
fiadds
sbb
repnz
shl
cmc
push
or
pop
jae
cmpsl
fneni(8087
or
les
add
inc
push
mov
les
pop
mulb
loopne
loopne
movsb
cmp
sub
dec
adc
std
mov
popf
xchg
jmp
outsb
xchg
gs
jg
xchg
push
movsb
jg
adc
xchg
lds
add
sbb
aas
fsts
adc
shl
adcl
inc
int3
adc
aad
and
ljmp
into
xchg
shlb
push
stos
test
adc
cwtl
sub
shl
pop
leave
mov
fidivs
scas
mulb
fcoml
gs
arpl
mov
mov
push
call
popf
jge
in
das
daa
repnz
ja
std
lods
fnsave
and
adc
das
loop
or
sub
jecxz
stos
sbb
daa
mov
icebp
ret
or
mov
iret
cmp
jae
lods
int
push
cmp
dec
inc
test
mov
sti
or
mov
lock
iret
es
push
sub
mov
in
xor
shrl
insl
popa
fwait
jecxz
into
sub
loopne
loop
push
or
adc
xor
nop
dec
mov
adc
test
push
mov
xchg
movsl
ret
and
into
cmp
sbb
mov
or
testb
push
add
aaa
jne
cmp
pop
lods
mov
or
pop
adc
lret
lods
jb
out
pop
lds
imul
into
sahf
insl
xlat
jae
aam
in
mov
mov
leave
mov
cwtl
in
mov
and
iret
adc
ds
test
mov
jne
fbld
outsl
sub
lret
lret
push
inc
mov
jmp
shl
rorl
xchg
add
cmc
mov
call
mov
cmp
or
cs
fistl
fldcw
fwait
imul
in
movsb
mov
mov
inc
loope
mov
subl
roll
testb
or
mov
add
xchg
out
xchg
nop
leave
xor
pushf
fdivrs
mov
stos
push
insb
out
sbb
jno
cltd
or
shrl
ss
jno
nop
fimuls
enter
cmp
bnd
pop
ds
cmp
inc
ja
test
in
mov
in
in
jbe
pop
fcmovb
shr
xchg
and
das
add
fisttps
jg
es
mov
jmp
ficompl
sbb
cmp
in
push
jno
xchg
ds
fmuls
js
jb
int3
push
jne
xchg
addb
xor
pop
xchg
stos
int3
notl
lret
sti
sub
xchg
jge
movsl
leave
xchg
jecxz
sbb
push
lahf
loop
sbb
jg
fnstcw
jmp
ljmp
and
fildll
stos
test
sbbl
scas
push
fs
or
dec
mov
xchg
push
sbb
bound
jne
mov
and
rcrl
or
or
or
jmp
add
adc
lret
test
les
inc
fcmovne
andb
pop
mov
jle
and
in
out
lods
inc
mov
lret
and
inc
cwtl
iret
mov
xor
mov
dec
ret
push
jae
lods
pop
inc
popf
pop
loopne
sub
push
sub
cli
jb
sti
in
addr16
push
mov
adcl
lock
icebp
lock
or
leave
lahf
insl
pusha
lods
incl
mov
sbb
outsl
sbb
push
mov
add
push
push
jbe
jg
inc
stos
adc
adc
lahf
mov
push
test
push
leave
xor
mov
lea
dec
jl
pop
jecxz
cld
xchg
fs
cli
xchg
sbb
dec
and
int3
sbb
sahf
push
mov
mov
sbb
outsl
cmpsl
pop
xchg
pop
push
push
add
fstl
push
mov
xchg
xor
in
out
jmp
add
dec
cltd
jle
mov
jl
sahf
lock
dec
mov
jecxz
out
sti
jbe
dec
jo
and
loopne
sbb
insb
cmp
or
xchg
push
cltd
dec
and
or
or
mov
ljmp
sub
sub
ljmp
dec
push
add
test
fistl
fs
sub
addr16
mov
cs
dec
sbb
test
push
dec
mov
pop
jo
inc
cmp
cmp
je
out
sub
scas
pop
cltd
pop
aad
mov
add
insl
cmp
imul
stos
cs
imul
pop
adc
pop
push
sub
sub
xchg
loopne
repz
mov
es
dec
sub
xor
mov
adcb
or
aam
mov
xor
push
cltd
jne
add
mov
fstl
cmp
mov
fwait
cld
adc
xlat
push
mov
mov
lods
fs
push
push
sub
dec
imul
test
sub
cmp
or
xor
out
sbb
outsb
xor
pop
inc
sbb
dec
push
gs
jge
mov
dec
xchg
sahf
data16
mov
movsl
imul
aam
mov
out
lea
das
fs
or
inc
sub
jmp
fiaddl
popa
pop
dec
dec
jae
pop
les
sahf
push
popf
xor
cmp
sub
sub
mov
outsl
adc
test
pop
pop
mov
repnz
das
jne
js
lcall
stc
mov
sub
dec
and
data16
sbb
cmc
dec
dec
data16
or
mov
cwtl
mov
jl
mov
out
or
or
movsb
inc
enter
ret
ret
jne
jle
pop
stc
mov
push
lds
sub
aam
outsb
into
sbb
adc
jmp
push
jl
dec
mov
movsb
imul
mov
lret
sahf
clc
lcall
xor
data16
lret
sub
test
mov
mov
add
mov
aaa
mov
sbb
cltd
inc
sbb
inc
jnp
cmc
push
add
mov
stos
jmp
ljmp
pop
sub
xlat
and
xor
les
or
lock
pop
rorl
mov
push
or
adc
xchg
fs
pushf
imul
idivl
pop
sbb
mov
adc
push
cld
jne
fdivrp
test
into
xor
in
adc
fwait
jno
test
jmp
movsl
mov
rcrl
aaa
adc
xor
dec
scas
push
add
out
pop
mov
aaa
cli
add
call
stos
adc
loopne
pop
icebp
sbb
lret
insl
cmp
jno
xchg
xor
push
inc
scas
sbb
jge
aad
mov
jbe
mov
mov
or
pop
hlt
cs
jae
sbb
lahf
jbe
push
inc
xchg
fnsave
jae
cmp
leave
das
dec
xorl
shr
cmp
dec
push
lahf
add
aas
lea
jnp
pop
dec
sbb
aam
sub
in
jns
mov
loope
xor
dec
fidivs
push
les
rclb
and
xchg
inc
popf
or
sbb
stos
jle
int3
push
jo
jae
lods
xchg
shlb
lods
test
xchg
fwait
push
cmp
sarl
iret
inc
mov
adc
mov
push
jne
adc
iret
jae
push
xor
xchg
sub
je
lcall
int
xor
sbb
fwait
divl
pop
and
es
dec
cmp
cltd
lods
fimuls
ret
mov
jle
scas
data16
push
push
or
xchg
mov
and
sqrtps
lahf
ret
jns
popa
mov
cwtl
lds
repnz
sbb
int
xor
push
pop
add
out
test
clc
jns
insb
imul
pop
mov
rcr
mov
into
stos
xchg
repz
fbstp
dec
loopne
jle
nop
xchg
xor
ja
cltd
call
test
aam
or
push
sub
insl
popf
fstpt
pop
push
add
je
xlat
movsl
cmp
nop
or
mov
dec
cmp
fisubrs
cwtl
clc
adc
mov
aam
adc
test
lahf
jg
gs
int3
cmc
std
loope
mov
ljmp
xchg
sti
iret
xor
push
pop
test
in
mov
movsbl
int
imul
mov
mov
fidivs
or
or
lahf
fldenv
adc
dec
shll
dec
sarb
or
cmpsb
testb
push
xor
mov
pop
in
fisttpll
lcall
mov
xchg
push
or
inc
insl
mov
mov
cwtl
and
into
mov
jge
int3
and
dec
outsl
rdtsc
fwait
push
inc
dec
jbe
ss
pop
mov
cmpsl
es
mov
push
add
loop
pop
push
adc
hlt
stc
fdivrs
and
or
adc
outsl
push
lods
mov
dec
lret
icebp
fistpl
jmp
lcall
fnstsw
shrb
aaa
imul
insb
cmp
mov
jno
push
pop
push
aaa
lcall
pop
rcrl
f2xm1
jbe
popa
adc
pop
cmp
je
bound
lds
mov
dec
jmp
scas
mov
jae
test
adc
mov
and
inc
mov
sbb
pop
pop
push
dec
test
and
leave
out
mov
or
out
jmp
adc
loop
inc
lret
mov
pop
xchg
lcall
sbb
shll
and
daa
cmp
mov
push
out
pop
mov
lods
jp
rcrl
push
inc
enter
stc
jnp
pop
and
in
imul
loop
pop
cmp
mov
jno
push
jno
xchg
push
mov
loope
cmp
repnz
shll
xchg
sti
xchg
dec
jae
pop
ss
xor
sarb
push
lret
adcl
or
cmp
fnstcw
cld
out
or
ljmp
movsl
jge
js
ror
add
push
rorb
lret
mov
pushf
scas
sub
lds
mov
sub
ror
xchg
mov
or
or
in
mov
xor
sub
pop
push
je
xchg
xchg
std
das
repnz
scas
fdivl
clc
add
stos
pop
rorl
pop
cltd
push
xchg
test
arpl
sahf
je
out
push
or
in
aad
mov
ss
lock
pop
jbe
sbb
jp
arpl
jns
xor
or
nop
mov
inc
or
dec
mov
lret
sti
clc
fidivrl
enter
fld
loope
scas
rclb
push
jmp
fmuls
jle
das
dec
sbb
inc
faddp
push
adc
pop
push
cli
push
push
or
adc
arpl
shll
pop
push
pop
inc
aam
mov
cwtl
test
ja
scas
sbbb
add
stc
push
fadds
xor
or
mov
into
fidivs
xor
insl
sbb
pop
mov
cmpsb
xor
cmp
test
cmp
cmp
inc
mov
aam
mov
sub
push
xor
cmp
mov
arpl
adc
imul
dec
fidivl
into
fs
and
mov
mov
mov
push
pop
push
ja
mov
aas
ja
jmp
push
push
rorl
xchg
icebp
pop
mov
pop
mov
fildl
inc
cwtl
daa
pop
lods
or
jnp
repz
dec
push
jge
aam
fisubs
xor
xchg
inc
data16
mov
cld
lret
and
dec
sahf
pop
mov
jo
mov
out
icebp
bnd
cmp
push
loopne
mov
mov
push
pop
push
cld
sub
pop
jmp
or
push
into
jecxz
push
mov
fwait
mov
lcall
xchg
cmpsb
aaa
and
pop
pop
rcrl
stos
xchg
int
negb
pop
adc
mov
sbb
inc
fiaddl
inc
xchg
and
inc
mov
pop
cwtl
roll
push
pop
xchg
xlat
shll
jne
xor
cmp
out
add
and
add
lahf
cmp
fsubrp
enter
xor
mov
add
lcall
jne
cmp
lods
clc
and
jnp
les
push
loopnew
push
leave
jbe
popf
in
pop
or
mov
xor
lods
cmp
frstpm(287
mov
dec
jo
sbb
push
rcrb
dec
xor
in
repz
in
loop
mov
cmp
jae
je
jo
je
mov
lods
arpl
pop
push
lret
imul
insl
jge
lds
int3
add
or
jecxz
ret
out
into
fnstsw
and
jl
jno
pop
push
pop
add
test
mov
adc
aad
decl
movsb
adc
add
or
inc
or
mov
jecxz
or
sbb
mov
lods
xlat
jb
cmp
movsb
jns
dec
int3
nopl
xlat
jmp
mov
pop
mov
inc
xor
pop
pusha
sbb
inc
jmp
push
scas
addr16
lods
popf
ret
pop
out
jae
aas
xor
int
pop
rclb
call
je
and
mov
hlt
aad
test
push
mov
xlat
jg
insl
ja
repz
push
mov
xchg
dec
int3
cli
das
clc
dec
out
inc
lods
jb
fldenv
adc
dec
fwait
cmp
cwtl
mov
xchg
mov
push
out
insl
repz
fcmovnu
mov
push
mov
mov
and
sbb
dec
btc
jl
insb
cli
lods
into
jge
xchg
repnz
popa
mov
ja
lods
sbb
loopne
dec
rol
nop
mov
cmpsb
out
push
xchg
mov
adc
xchg
push
cmp
cmp
mov
xchg
data16
fwait
and
mov
xchg
sub
adc
call
aas
arpl
xor
in
and
scas
in
xor
jl
test
popf
mov
adc
outsb
push
or
push
shlb
cld
insb
jmp
pop
ds
les
loope
sub
notl
jmp
test
push
xorb
or
cmp
sbb
pop
jns
and
test
cwtl
cli
jbe
mov
test
lcall
lods
mov
cmp
lahf
mov
cmpsl
inc
jns
mov
aas
and
sbb
ljmp
jecxz
imul
push
aaa
push
mov
cwtl
popa
dec
jecxz
jg
jmp
xor
cmp
out
xor
das
sub
xor
inc
daa
mov
push
jl
mov
cli
lahf
stos
aam
fstpl
imul
mov
mov
popa
or
and
pop
repnz
push
in
pop
sub
loop
push
fstps
cmpsb
ljmp
nop
dec
pop
push
negl
mov
dec
rep
sti
jnp
mov
adc
imul
sub
lcall
cli
mov
pop
push
push
and
es
pop
jne
pop
lock
xchg
xlat
xor
mov
cwtl
outsb
test
ja
imul
xchg
inc
out
mov
or
mov
jp
pop
xor
xor
mov
shrb
insb
add
push
cmp
pop
pop
jno
aas
test
push
sbb
je
sub
loop
jmp
mov
sub
sbb
adc
mov
mov
ret
pop
shrl
subb
rcll
jne
je
test
jmp
xchg
push
fdivrs
sahf
jae
xchg
iret
add
xor
insl
mov
ljmp
push
ja
pop
sbb
or
push
cmpsb
es
mov
push
xchg
and
adc
cmpsb
imul
in
sbb
push
dec
cmp
in
outsb
sahf
repnz
test
push
and
mov
scas
inc
loop
scas
sub
or
pop
push
mov
add
xchg
shrl
in
jo
xor
mov
call
fidivs
out
dec
and
sbb
jp
out
in
inc
in
jns
xchg
xor
enter
cmp
inc
push
add
rorb
in
jle
out
gs
cmpsb
xor
xchg
cmp
inc
insb
pop
scas
xor
in
sbb
inc
js
push
test
mov
test
cmp
fisubrl
sbb
fistpll
cmp
push
ljmp
aas
fsubs
lcall
add
push
xchg
and
jle
mulb
mov
xor
mov
xor
sarb
hlt
mov
mov
shlb
xchg
iret
test
pushl
mov
idiv
add
push
mov
aaa
inc
jle
insb
cmp
aas
mov
push
arpl
xor
lret
adc
mov
mov
shrb
loop
and
mov
in
aaa
out
mov
pop
push
adc
and
sbb
dec
xchg
push
push
sti
dec
test
test
mov
movsl
and
pushf
loop,pt
insl
pop
dec
mov
mov
adc
gs
sbb
jge
push
out
push
adc
mov
popf
adc
mov
add
add
bswap
push
xor
push
xchg
adc
xor
fiadds
add
sub
lahf
dec
jmp
hlt
xchg
add
push
push
es
daa
std
movzwl
push
dec
popf
dec
jecxz
dec
xor
icebp
adc
es
into
pop
test
push
js
cli
mov
pop
push
mov
or
jae
xchg
jb
out
aaa
shll
xorl
iret
icebp
iret
and
inc
or
bnd
fwait
rcl
fmuls
or
popa
shrb
daa
les
cltd
shl
fdivs
pop
mov
es
aaa
or
dec
rol
enter
dec
pop
xchg
ljmp
popa
dec
in
iret
sub
mov
jle
mov
jge
inc
in
fadd
movsl
xor
arpl
xchg
xchg
mov
sub
inc
loop
mov
mov
jne
push
jmp
push
inc
sub
or
test
add
push
cmp
sub
xchg
jmp
test
push
jbe
jno
dec
sbb
cmp
pop
cli
jg
gs
aaa
shrb
shlb
jecxz
xchg
push
aam
fcompl
mov
cmpsb
lock
cmp
mov
lock
add
loopne
jmp
xchg
arpl
dec
in
cmp
insb
loopne
mov
jns
clc
mov
mov
test
jmp
jl
in
dec
cmpsl
js
or
in
inc
jne
jno
stc
mov
mov
out
dec
push
cltd
inc
dec
push
lods
lock
test
mov
cmpsl
dec
sub
mov
xchg
push
push
sbbb
iret
lahf
decb
mov
and
or
xlat
mov
popa
dec
shr
cltd
inc
xchg
andb
outsl
clc
rcll
jno
cwtl
dec
pushf
and
xchg
dec
lods
test
fnstsw
mov
je
sub
fwait
inc
jns
or
or
push
rcrb
mov
xchg
inc
je
push
cmpsb
pushf
mov
pop
imul
xor
sub
lret
and
movsb
or
add
inc
es
push
mov
jne
ret
mov
or
mov
lods
ljmp
add
or
cmpsl
movsb
xor
pop
or
pusha
mov
loope
lret
loopne
rcll
popf
fs
lock
or
in
mov
mov
idivb
popf
pop
add
mov
or
shr
les
call
cmp
sbb
ret
sbb
mov
jne
enter
xchg
stc
mov
add
int
mov
push
sbb
fidivs
add
xorl
es
gs
mov
xchg
xchg
inc
cli
ret
dec
jl
cld
xor
push
leave
jns
ds
add
pop
adc
xchg
jge
and
mov
sub
dec
push
push
xchg
movsl
imul
lcall
xchg
mov
mov
inc
sbb
std
enter
stc
gs
add
or
inc
jmp
pop
sbb
add
shll
fiaddl
pop
sbb
jo
stc
inc
sub
push
lret
lret
mov
xchg
mov
std
sub
sbb
adc
inc
aad
arpl
scas
ret
dec
es
outsl
inc
xor
sahf
aam
or
xchg
clc
ret
incb
sub
mov
shrb
jp
push
dec
jb
outsb
shll
popa
shll
pop
inc
jnp
mov
std
xchg
inc
call
test
sub
mov
std
lds
repnz
lea
mov
pop
mov
xchg
dec
call
sub
cmp
sbb
fiaddl
or
add
jl
leave
cmpsl
sub
xchg
in
mov
cmp
sub
mov
cmc
loope
xor
adc
pop
scas
mov
dec
push
mov
mov
jmp
jb
sbb
jno
sbb
lea
gs
orl
mov
xor
cmc
adc
mov
ss
cmpb
stos
jnp
arpl
shlb
fdivl
jl
pop
mov
leave
pop
idivb
mov
add
mov
mov
loope
pushf
ret
jmp
lret
xchg
sub
mov
mov
aaa
sbb
inc
mov
dec
out
push
jp
jns
xor
arpl
testb
movl
push
scas
lahf
sbb
or
push
xor
test
sub
adc
popf
dec
out
rorl
mov
test
mov
pop
lea
inc
lahf
mov
jge,pn
jg
sub
mov
or
int
aaa
rolb
repnz
jb
fldpi
or
out
adc
cmp
lahf
push
adc
aad
lret
adc
cmp
orb
and
lret
cld
mov
jg
ja
jmp
sub
dec
test
adc
lret
lods
loop
xor
mov
pop
shl
inc
cs
aad
bndstx
push
xchg
inc
xor
jne
hlt
lds
adc
aam
mov
out
dec
fidivrs
pop
push
sbb
jae
stos
aam
adc
dec
mov
xor
int3
loop
xor
cwtl
outsl
outsb
int3
jae
and
xlat
cmpb
cld
pop
sub
sbb
fstpl
xchg
mov
and
pop
ret
imulb
lds
fsubrl
adc
stos
mov
imul
adc
daa
insb
pop
sub
xchg
test
jle
rcrl
sbb
aam
call
inc
jb
sub
inc
xchg
rorb
fisubs
fsubrp
movsl
rcrl
rcrl
in
mov
pop
addl
out
mov
cmp
jno
and
lods
inc
aaa
mov
sbb
fisubs
cmp
and
mov
push
jge
pop
fidivs
adc
xlat
pop
stc
loopne
and
call
test
iret
aas
cli
xor
jbe
loop
mov
jl
jecxz
sbb
lret
fildll
xchg
cltd
pop
xchg
negb
daa
mov
lcall
out
je
adc
and
xor
stc
out
jge
inc
mov
and
jmp
ficompl
cmc
movl
or
xchg
push
aad
xchg
cmp
aas
lods
cmp
add
dec
xchg
cmc
pop
dec
lret
loope
int3
gs
daa
loope
adc
xor
xlat
hlt
mov
dec
push
lock
adc
jb
jp
and
neg
and
jp
das
out
inc
lahf
ret
pop
xor
jecxz
push
mulb
loop
imul
xor
jge
ss
jo
xor
fucom
cs
mov
fildll
je
mov
mov
jb
test
test
sahf
ljmp
push
fisubrl
add
cmp
ret
das
lret
cmpb
dec
adc
push
insl
cmpsb
inc
mov
dec
inc
aas
sub
dec
iret
outsb
fldt
push
int3
fistps
lds
jmp
cltd
and
jecxz
pop
jns
push
inc
int3
std
cmpsl
pop
dec
jae
xchg
push
push
dec
jns
jp
aas
mov
cmp
mov
push
into
lret
and
mov
out
push
fldenv
mov
jl
inc
or
cmpsl
pop
sbb
lret
subl
adc
out
dec
out
fs
pop
pop
xchg
fs
int3
out
or
adc
push
cmp
mov
or
jb
arpl
mov
sbb
in
or
mov
adc
outsb
scas
add
repz
sub
sub
or
nop
and
pop
mov
shr
jo
pop
fcoms
jp
rclb
xor
std
sarl
or
push
daa
sub
sbb
push
or
pop
xchg
dec
lahf
xlat
shlb
fucomip
adc
dec
out
jo
stos
push
out
push
std
mov
aas
std
cmp
addr16
push
ljmp
pushf
push
mov
pop
clc
je
and
jb
mov
dec
pop
test
push
push
aam
or
sahf
int
mov
lcall
arpl
orl
out
cmp
and
popa
fsubrs
lods
lret
pop
inc
inc
inc
nop
in
mov
adc
sub
cmp
pop
cs
imul
sbb
dec
lcall
pop
jne
sub
fsubrp
shrb
aam
leave
sub
and
sbb
adc
insb
sbb
mov
xchg
dec
fsubr
inc
push
lahf
cld
cmpb
movmskps
inc
adc
dec
xor
push
push
sbb
sub
pop
add
stos
data16
aas
ljmp
jecxz
imul
sarb
aaa
js
clc
jge
call
test
test
ficoms
lock
sub
in
add
jmp
lods
movsl
add
inc
je
shlb
jmp
repz
nop
outsl
enter
and
scas
push
ret
movsb
icebp
push
shll
mov
and
in
jp
xor
mov
in
mov
lret
add
fstpt
jge
push
aas
mov
lret
dec
and
loope
mov
and
adc
push
setb
xchg
add
mov
xor
pop
aas
sbb
adcl
pop
mov
add
add
or
cmp
or
arpl
out
cmp
popf
cs
bound
out
mov
push
xor
movsl
sbb
pop
leave
stc
and
lea
aas
leave
insl
or
push
rcl
xlat
pop
mov
push
add
and
push
mov
out
mov
fimuls
inc
xor
xchg
fcoms
and
std
jns
jle
dec
dec
test
gs
sub
arpl
shrl
jno
sbb
xchg
cmp
push
je
loopne
popf
sub
inc
dec
mov
sahf
mov
in
aam
jle
adc
pop
xchg
pop
ds
sub
movb
shlb
lods
loope
sbb
sbb
je
sti
mov
rcrb
lods
out
jge
cmp
mov
inc
jmp
xor
outsl
aaa
call
daa
adc
aaa
fisubs
test
loopne
or
pushf
xor
inc
or
adc
popf
dec
and
pop
dec
lret
mov
and
jbe
sar
dec
call
mov
add
aas
or
adc
nop
hlt
xorl
mov
pop
repnz
notb
incl
mov
sbb
mov
xchg
jb
fldcw
inc
das
imul
fcomp
xor
into
gs
inc
test
popa
mov
push
cmc
or
mov
out
xchg
xor
mov
sub
mov
xor
fisttpll
testb
push
daa
xor
filds
pop
mov
imul
sbb
lds
and
push
sub
repz
mov
test
cmc
dec
cmpsb
xchg
xchg
iret
jecxz
jo
es
sbb
lods
mov
mov
dec
lods
aas
xchg
jo
divb
push
xchg
push
arpl
jno
jns
jnp
into
jl
in
pop
shll
loop
cs
cmpsb
fimuls
idiv
stos
jno
xor
cmp
dec
inc
hlt
dec
sbb
inc
imul
aam
push
adc
leave
dec
push
sbb
xchg
popf
in
daa
insb
out
mov
aas
test
stos
push
push
rcrb
xlat
in
out
nop
mov
loope
outsl
pop
rolb
in
or
and
cltd
jl
mov
paddsw
adc
or
dec
not
ds
mov
dec
fldz
jnp
test
sbb
mov
adc
js
add
mov
add
test
icebp
out
stos
inc
movsb
pushf
out
or
mov
jne
movsl
fstp
fsubl
cmpsl
add
daa
push
adc
cmp
pop
call
mov
mov
cmp
enter
inc
sbbb
jecxz
in
vmread
lods
lahf
fstpt
fs
or
out
std
lgs
and
push
or
rolb
ffree
in
sbb
or
incl
dec
jae
scas
fnstenv
adc
sub
ljmp
mov
mov
mov
int3
inc
pop
loope
mov
and
mov
mov
dec
jnp
inc
or
cmp
bound
jle
mov
push
dec
pop
js
cmp
mov
loop
addb
mov
stos
jo
dec
test
ret
aam
push
xchg
jl
jo
mov
out
loop
cmpsl
enter
dec
in
mov
scas
or
test
data16
insw
mov
fists
xchg
dec
cmpsl
mov
test
negl
xor
sti
scas
jecxz
pop
mov
popf
push
ret
add
repnz
sahf
lods
aam
jecxz
fstl
scas
lcall
ret
nop
mov
out
subl
enter
cmp
and
inc
mov
mov
sti
lret
ret
push
out
adc
push
jmp
sub
lcall
repz
cmp
xor
dec
push
mov
jmp
shll
andl
lret
sbb
jl
addr16
sti
lcall
dec
mov
push
stc
cmp
inc
sbbl
mov
call
iret
xchg
aad
cmpsl
lcall
mov
mov
push
fstpt
shl
sub
inc
lret
test
cs
sbb
or
shlb
pop
lods
mov
or
ds
pop
outsb
or
aaa
cwtl
push
push
mov
cmc
ret
jecxz
movnti
lret
sbb
dec
lods
xor
nop
push
dec
fcoml
adc
sbb
sub
fldcw
es
cmpl
push
cmp
or
fisttpll
inc
loopne
repz
or
loop
out
hlt
sub
sub
mov
push
mov
nop
mov
inc
push
mov
aaa
arpl
mov
mov
pop
mov
dec
mov
sub
adc
popl
fisttpl
icebp
enter
cmp
ficompl
inc
call
jle
stos
in
or
lret
mov
sbb
pop
xchg
jnp
jl
in
iret
insb
andb
cmp
shrb
mov
pusha
scas
pop
insb
jae
adc
pop
sbb
sbb
in
sub
lret
jl
xor
or
test
stos
aam
dec
cli
mov
lahf
adc
pop
sbb
push
lcall
out
add
add
shll
outsb
xchg
ljmp
inc
stc
cs
in
aaa
test
or
sub
push
adc
stos
mov
xchg
mov
mov
mov
repnz
xor
daa
push
sar
dec
leave
pop
jge
mov
in
mov
das
out
sub
lea
cltd
sar
jecxz
sahf
mov
imul
out
pop
call
cmp
sbb
ja
or
fcompl
outsb
mov
xchg
aas
stos
dec
mov
inc
push
in
pop
cmc
jbe
xor
xchg
pop
int
dec
jne
push
aas
or
enter
lahf
and
sbb
jge
jl
aam
fildll
xchg
mov
cmp
add
insb
sahf
in
adc
jl
jns
mov
mov
cmp
pop
popa
xchg
mov
cmpsb
ja
push
dec
loop
xchg
sbb
xchg
js
sti
addr16
jnp
dec
pop
ljmp
cltd
jns
nop
and
mov
add
aaa
adc
and
imul
popf
dec
je
or
dec
add
cmpl
mov
movsl
and
xchg
cmc
or
dec
xlat
ret
push
pop
mov
call
cmp
fucomp
xor
fstpl
fsubrl
sbb
lcall
inc
and
fsubrl
mov
aad
notb
mov
sub
arpl
loop
js
xor
cs
add
xchg
push
or
xor
sbb
sbb
cmp
push
jo
movsb
clc
add
mov
arpl
call
je
into
jg
or
xor
imul
and
or
xacquire
mov
pop
rclb
jmp
ret
lea
xchg
iret
adc
je
pop
icebp
ret
lods
int3
push
pop
add
and
pop
inc
div
cmp
sub
loope
inc
xchg
mov
scas
movsl
mov
rcrb
sti
sub
loop
jnp
pop
or
bound
stos
gs
pusha
or
adc
push
xchg
mov
enter
xchg
outsb
dec
scas
fmuls
out
sub
push
mov
aam
inc
mov
mov
push
inc
cs
stc
push
sub
cmp
mov
icebp
out
cmp
jae
imul
mov
xchg
pop
pop
iret
fidivrs
roll
clc
mov
loope
jbe
js
pop
fldl
stos
fs
pop
xor
add
int3
cmp
jg
pop
imul
repz
jp
js
in
sahf
xchg
push
cmp
sahf
jg
fmull
dec
addr16
dec
pop
or
xchg
js
push
and
sub
fs
roll
push
xchg
mov
fwait
movsl
fstps
sarl
mov
pop
mov
gs
stos
mov
adc
inc
or
jo
mov
adc
or
pusha
add
cli
sub
xchg
repz
sahf
push
loop
sbb
iret
mov
pusha
add
xor
xchg
daa
or
call
shll
rep
xchg
dec
push
mov
dec
stos
mov
inc
xchg
add
dec
mov
lea
idivb
loope
adc
lcall
inc
sbb
xchg
sub
test
mov
fmul
filds
adc
xor
ret
pushf
pop
jge
inc
pop
jbe
jnp
mov
cmpsl
mov
cmp
aas
xor
cmp
testl
add
addr16
cmpsb
jle
lahf
int3
movsl
nop
aam
sub
mov
adc
test
and
jb
push
jae
xlat
pop
mov
fwait
sti
ljmp
mov
push
shrl
push
cmp
mov
mov
pop
sti
in
testb
mov
aam
adc
push
dec
mov
jge
push
pusha
loop
mov
jae
add
mov
jns
inc
xchg
sub
jp
iret
dec
popf
or
sbb
push
xchg
and
sbb
addb
jmp
mov
fstpl
xchg
rclb
scas
inc
jmp
xchg
int3
adc
mov
jg
dec
xchg
add
push
cmpsl
insb
out
mov
mov
repnz
popa
add
adc
jnp
insl
bound
cmp
jp
in
push
jge
incl
nop
inc
jae
std
sbb
mov
mov
sub
pop
and
shrl
push
adcl
adc
inc
nop
cmc
xchg
cmpsl
jmp
dec
xorb
push
lret
mov
sti
lods
lock
mov
push
or
aaa
imul
into
sahf
xchg
sub
sbb
pop
rcll
rcr
pop
ret
push
push
into
std
lret
pop
xchg
dec
adc
jg
shlb
cmpsl
repnz
cmp
cltd
call
cmpsb
test
shrl
iret
and
scas
scas
fildl
or
dec
pop
xlat
mov
arpl
add
in
sarb
daa
mov
mov
roll
inc
push
notl
loopne
aaa
mov
sbb
outsl
out
sbb
add
xor
xchg
fidivs
sub
mov
addr16
mov
in
dec
dec
int
push
inc
adc
mov
inc
lret
pop
jl
xchg
jno
xor
xor
mov
or
mov
mov
push
push
arpl
into
sbb
dec
arpl
movsb
popa
jns
pop
shrb
mov
je
push
pop
scas
sti
aad
mov
aad
rcrb
dec
mov
mov
jp
fisttps
mov
adc
push
cmp
mov
aaa
sub
dec
adc
and
mov
pop
dec
jo
inc
out
inc
insl
pop
ret
ds
and
movsl
imul
mov
inc
add
aaa
call
out
je
adc
dec
fucomi
xchg
enter
frstor
mov
cltd
adc
pushf
push
and
xor
aad
loope
sbb
add
rcr
sbb
data16
cmp
divb
inc
loope
jns
imul
push
nop
es
inc
or
pop
push
xchg
xchg
cld
and
add
rcr
lds
cmc
push
enter
test
shlb
or
sub
cli
mov
das
xchg
pusha
xchg
mov
fwait
xchg
imul
mov
pop
mov
and
ficoms
lds
cmp
cwtl
rclb
jns
jno
negl
shl
mull
adc
shll
push
out
mov
lods
aaa
mov
cmp
mov
xor
adc
bound
add
jp
lock
cmp
jle
pop
or
sbb
movsl
imul
ljmp
and
sub
mov
movsl
inc
mov
pop
cmp
ror
sahf
jnp
test
sar
xchg
outsb
sbb
into
inc
adc
mov
or
mov
aaa
inc
add
lcall
jecxz
push
or
adc
outsl
mov
or
cs
imul
mov
push
adc
outsl
fcmovnb
jne
movsl
sarl
stos
mov
pop
dec
je
ljmp
inc
push
cmp
push
adc
aad
ss
in
xor
incb
jbe
dec
hlt
inc
sub
imul
iret
push
cmp
and
cmp
mov
pop
xchg
in
les
cld
inc
js
xor
xor
je
jae
addl
sbb
sahf
int
shl
mov
mov
mov
cmpsl
adc
xchg
inc
jp
insl
mov
aad
push
mov
or
jmp
imul
scas
xor
push
mov
dec
shll
lret
insw
imul
cmp
call
rolb
push
push
hlt
jo
es
popa
mov
mov
jb
or
xchg
test
pusha
xchg
dec
cmp
and
sub
jecxz
rclb
cmp
psubusb
mov
mov
push
sbb
sub
pop
and
xchg
dec
mov
and
and
jno
lcall
std
inc
aad
add
xor
inc
aas
mov
into
inc
repnz
imul
je
cmp
pop
bound
cmp
sbb
std
dec
js
ja
jge
jl
or
movsb
xor
enter
mov
add
jmp
or
ficomps
addr16
mov
mov
inc
and
push
lcall
mov
test
ds
pop
into
lods
aas
mov
xor
dec
incl
std
jbe
int
sub
and
sahf
out
gs
pop
dec
add
dec
in
adc
mov
dec
push
jp
ja
sbb
dec
fs
insb
aas
mov
or
xchg
xchg
shr
out
sub
cmp
test
and
add
sub
mov
repnz
xchg
out
add
inc
xor
sub
sbb
rdtsc
push
pop
inc
dec
mov
cli
adc
call
push
in
out
fucom
cs
ret
shr
scas
loopne
cli
jae
repnz
out
inc
vmovupd
sbb
test
lret
pusha
adc
popf
dec
pop
mov
sub
clc
pop
movsb
and
and
xchg
daa
cwtl
pop
jl
loope
sbb
imul
ds
mov
sbb
and
pushf
fiaddl
sbb
mov
jmp
fdivr
inc
pop
stc
insl
ficomps
pushf
fnstenv
jmp
arpl
cwtl
das
out
loopne
sbb
stos
lahf
aaa
cmp
pop
jb
add
jae
shll
in
cwtl
sbb
inc
shrl
cmpsb
lds
lock
aaa
ror
leave
inc
or
popa
test
cltd
add
push
jecxz
popf
fldenv
and
jle
dec
sbb
push
out
push
adc
bound
lret
fidivs
stc
lret
repnz
jne
scas
into
fstl
daa
lods
adc
nop
mov
xchg
add
bound
and
inc
push
lods
enter
scas
fiadds
fstpl
ror
loopne
test
out
cmpsb
test
add
cltd
call
arpl
add
lods
call
push
out
sub
push
xorb
pop
mov
int3
popa
stc
adc
cmp
lret
inc
enter
pop
repnz
fimull
std
cmpsl
lds
rclb
sti
ficoms
sbb
mov
cwtl
cli
mov
cmpsb
mov
imul
enter
jne
iret
jno
xlat
movaps
push
hlt
scas
lock
and
addl
js
jecxz
push
bound
lods
pop
push
dec
fcomps
jecxz
sub
pop
and
enter
push
gs
xchg
pop
outsb
pop
sub
jbe
inc
imul
adc
nop
les
sbb
sub
inc
mov
int3
or
adc
mov
mov
fists
sbb
or
sub
rclb
fdiv
andb
or
xor
xchg
push
xlat
popf
out
fcomip
inc
cs
lcall
icebp
idivb
ss
pop
clc
pop
and
mov
pop
adc
into
fwait
lcall
pop
aad
aam
jmp
push
mov
into
sahf
adc
mov
fimull
out
push
popf
clc
xchg
imul
daa
fidivrl
mov
iret
xor
xor
mov
lahf
daa
insl
loope
fmulp
js
push
loope
xchg
push
sbb
lock
mov
pop
ljmp
lds
or
int3
push
stos
jno
xor
mov
add
dec
inc
popa
mov
fsubl
inc
call
lods
int3
xchg
int3
int
aas
gs
in
in
add
outsb
subb
inc
jns,pt
jo
pop
jecxz
dec
stos
fstpt
sub
xchg
cwtl
sub
stos
inc
mov
sbb
sub
icebp
mov
jp
push
cs
pop
scas
xchg
mov
sbb
out
cmpsl
mov
iret
dec
dec
mov
xchg
sbb
dec
push
mov
mov
aaa
sbb
xchg
push
aam
pop
pop
stos
and
jmp
mov
aam
push
shrl
or
shr
lahf
jo
pop
cmc
adc
sub
or
inc
outsb
call
cli
pushf
int
pop
push
push
inc
test
call
push
pusha
adcb
leave
imul
cwtl
cmovg
or
arpl
je
stos
cmp
mov
dec
imul
mov
dec
mov
jbe
dec
fildll
xchg
pop
stc
cwtl
xchg
ret
sahf
fmul
push
mov
cmp
inc
xorl
mov
sub
inc
push
nop
sbb
lcall
ret
push
cwtl
cmp
sbbl
in
fsubs
add
xchg
daa
push
repnz
mov
mov
jb
sub
pop
mov
enter
jnp
fwait
popa
push
daa
and
cmp
sbb
jecxz
push
scas
sbb
mov
ret
aaa
mov
fwait
int
fnstenv
and
and
mov
sbb
iret
dec
and
or
lock
popa
xor
cli
mov
outsl
lret
or
movsb
std
and
pop
mov
lcall
inc
or
les
dec
lods
inc
mov
jo
fadds
mov
stc
mov
ret
out
bnd
mov
insb
pop
mov
loopne
jg
mov
orl
mov
jmp
vphadduwd
lds
fucomip
cmp
and
fildll
lcall
add
sub
fisubrl
test
sbb
xchg
cmpl
and
les
stc
ja
inc
insb
shll
lret
or
xor
arpl
aad
mov
out
insb
adc
cmc
push
bound
mov
push
jg
adc
push
sub
loopne
xor
stos
aad
movsl
andl
insb
push
dec
fildll
insl
out
cwtl
add
subb
iret
ja
mov
mov
gs
or
insl
int
cli
lds
ja
addr16
mov
dec
test
je
shrl
jno
mov
cld
sbb
pusha
dec
mov
add
ljmp
mov
and
inc
fisttpll
fs
push
popf
jnp
mov
aad
mov
rclb
add
inc
jp
adc
pop
icebp
or
in
jge
rcr
mov
out
ljmp
add
sti
cmpsb
add
push
mov
add
int3
popa
mov
jb
sbb
xlat
dec
push
mov
push
jbe
cmp
mov
inc
mov
mov
hlt
sbb
mov
cli
nop
pusha
or
inc
push
adc
xor
fwait
lcall
mov
shll
jmp
mov
add
inc
and
lock
add
arpl
rolb
cmp
pop
aaa
pushf
fistpll
jp
add
or
ret
push
je
pop
ljmp
mov
jmp
or
xchg
dec
xchg
lret
cs
inc
int
mov
out
xchg
push
pop
loope
jbe
and
jmp
fdivrp
jmp
xchg
aad
clc
loop
test
mov
mov
mov
repz
rdrand
fidivs
fidivl
xchg
inc
and
mov
outsl
bound
jmp
xchg
shrl
xor
out
sbb
xchg
nop
outsb
stos
cmpsb
ljmp
lods
cmp
xlat
shlb
or
test
xor
cltd
add
xor
jecxz
fldenv
mov
into
xchg
or
repnz
sub
es
popf
enter
mov
jns
xchg
push
lods
mov
negl
xchg
inc
into
movsb
shrb
mov
dec
movsb
inc
stc
mov
cmp
aam
or
jne
and
mov
jae
movsb
dec
pop
dec
lcall
daa
adc
xor
repnz
pop
pop
stos
punpckhwd
push
test
pop
sub
mov
mov
scas
pop
xchg
cmp
pop
xor
xlat
or
les
int3
jmp
cmp
push
mov
imul
test
test
push
xchg
xor
inc
dec
and
roll
mov
adc
dec
pop
ret
and
sbb
sbb
lds
insl
mov
mov
test
js
mov
jne
decl
add
in
cmp
sti
into
push
imul
sbb
adc
sbb
test
fidivrl
hlt
fpatan
and
pop
cmp
ljmp
mov
lret
push
mov
test
fdivs
jns
into
lock
scas
sub
mov
inc
fnsave
data16
sub
loope
pop
push
movsb
ss
jne
rcrl
es
dec
movsl
repnz
cwtl
and
pop
int3
fadd
arpl
pop
ja
mov
mov
adc
iret
pop
xchg
xorl
push
insb
loopne
daa
xorb
mov
cmp
cltd
lcall
inc
push
leave
nop
mov
sti
push
fistpll
leave
jl
cmpb
dec
xor
inc
cmpsl
cmp
sub
xchg
dec
xchg
fs
xchg
push
jb
sarl
dec
pop
mov
and
mov
ret
data16
or
sbb
cwtl
push
pop
sbb
sub
cmp
fst
pop
dec
out
pop
into
data16
jno
into
iret
sub
mov
insb
mov
shl
mov
mov
adc
test
pushf
xor
mov
push
fsubrl
mov
pop
push
pop
int
and
repz
inc
popa
lds
fstps
clc
add
clc
jecxz
movsb
xor
aaa
xor
out
in
dec
sub
inc
pop
push
adc
fisubl
jl
dec
and
xchg
lea
push
and
hlt
push
stc
pop
cld
sub
adc
adc
idiv
adc
lcall
out
test
sbb
jmp
xlat
add
lock
pop
mov
ret
rclb
popf
mov
lods
neg
inc
das
and
jbe
lret
sbb
lahf
xchg
sbb
adc
pop
and
or
pop
ss
xor
xor
popa
in
xchg
jo
js
mov
pop
lcall
addr16
std
das
mov
push
sub
test
mov
hlt
sahf
xchg
xchg
adc
ds
shrl
adc
nop
movsl
test
mov
cmp
xchg
dec
cld
cs
jbe
or
aam
push
pop
push
loope
jae
jecxz
hlt
pop
adc
or
enter
and
in
mov
push
pop
dec
add
es
jno
mov
add
inc
iret
mov
iret
fstpt
dec
out
cld
jnp
imul
fs
mov
push
lds
dec
movsb
pop
jns
sti
and
popa
cmp
es
mov
and
inc
nop
rol
lods
imul
fwait
arpl
pop
aam
outsb
dec
bound
pop
test
outsb
test
inc
popf
jle
sar
sbb
lahf
popa
push
or
and
inc
jb
pushf
aas
mov
inc
push
xor
fbld
les
scas
pop
mov
cmp
xor
mov
and
xchg
push
aas
push
pushl
ret
fstpt
jnp
int3
dec
xchg
inc
leave
cmpb
mov
cmpsb
sub
pop
jae
fnstsw
sub
iret
mov
mov
adc
pop
icebp
mov
xchg
xor
cmp
push
not
cs
mov
pop
pop
jge
stos
adc
jge
mov
int
fcomps
cld
dec
lcall
sbb
inc
scas
std
notl
sbb
into
sahf
daa
arpl
or
sahf
jmp
cld
aad
sub
xchg
enter
mov
fcoml
adc
adc
iret
lds
ret
jne
data16
ret
int
scas
mov
push
or
ja
pop
push
xchg
sub
mov
and
adc
clc
cli
dec
fadds
insb
pushf
mov
xchg
lcall
jb
cmp
imul
jbe
out
adc
sub
mov
faddl
sbb
in
mov
xchg
test
pop
insl
inc
sub
xor
rcll
push
mov
shrl
xor
mov
ja
hlt
push
lret
mov
add
daa
lcall
nop
call
and
xchg
or
xchg
in
adc
jge
sbb
fmulp
aaa
push
jle
mov
push
call
cmc
loope
add
mov
push
ljmp
ror
mov
das
imul
fstpl
and
lock
jl
sbb
push
aam
sub
sbb
stc
mov
ret
cmp
pop
mov
and
mov
inc
and
fstps
cmc
lods
jge
popf
bound
cld
pushf
ret
mov
outsb
scas
aas
adc
push
aam
lock
inc
divb
add
mov
shrb
int
pop
out
stc
es
fnstsw
out
mov
lret
fs
mov
push
mov
and
jecxz
repnz
jg
cmpsb
xor
add
leave
mov
dec
cmpsb
mov
imul
jne
movsl
xchg
stc
dec
mov
adc
subl
ror
push
jmp
mov
jbe
inc
pop
pop
sbb
fnstenv
rcrl
cmpsl
fistpll
push
mov
mov
push
mov
jae
lea
sar
daa
jl
and
sbb
in
lret
out
add
xlat
push
mov
loopne
lock
pop
or
cmp
inc
xor
cwtl
mov
pop
in
add
jnp
xor
or
lods
xchg
cmp
adc
insb
das
inc
stos
mov
inc
pop
daa
fstp
jb
xor
outsb
push
inc
mov
sbb
jae
incl
outsb
movsl
cltd
sbb
clc
dec
mov
adc
lret
das
xlat
mov
sbb
cmp
ret
cmp
dec
and
inc
pop
fimuls
scas
jge
add
push
sub
sbb
or
fiaddl
pop
xchg
dec
jle
sbb
in
sub
lcall
jmp
sbb
pop
jo
fwait
pop
pop
popf
pusha
cmpsb
add
sub
mov
ficoms
cli
out
arpl
js
pusha
out
mov
les
mov
or
cld
xor
cmp
mov
mov
sbb
jnp
pushf
fmuls
sarl
sub
add
les
mov
dec
int
pop
or
xlat
fcmovb
and
repz
lret
shlb
xor
dec
lods
xchg
sbb
and
cmpsl
xor
dec
insl
cmp
mov
dec
in
inc
and
cmp
jl
sarb
fisubrs
push
in
or
or
out
lods
adc
sbb
xchg
xchg
daa
out
pop
jno
mov
xchg
push
in
rcr
ud2
rcrl
sub
insl
clc
and
in
aad
fnstsw
imul
push
xchg
jl
inc
loope
ljmp
negl
cld
cmp
and
pop
xchg
and
jbe
rorl
enter
push
mov
not
testl
outsl
xchg
xchg
in
push
push
jns
rorl
insb
inc
movsl
ficoms
icebp
jmp
add
pop
push
xor
xchg
jae
sbb
lahf
pop
xchg
and
add
shlb
pop
lods
push
mov
cmp
test
js
push
dec
cltd
pop
fstps
idivl
imul
imulb
xchg
nop
in
adc
hlt
xlat
in
std
out
pushf
or
mov
or
call
push
enter
push
or
int
insb
xor
or
dec
push
lods
out
dec
push
dec
push
mov
test
jnp
adc
mov
pop
inc
imul
push
pop
mov
inc
dec
inc
sbb
out
mov
out
repnz
dec
in
cmp
cmpsb
ds
push
push
sti
sbb
sbb
inc
ret
mov
xchg
push
scas
push
andl
pop
loopne
or
cmp
lods
idivb
push
insb
movsl
shlb
fsubrs
push
test
xchg
mov
test
test
xor
iret
mov
jno
call
jecxz
mov
cwtl
mov
adc
pushf
mov
ja
jg
stc
clc
out
cmp
pop
mov
sbbl
xlat
dec
adc
jb
sub
fs
adc
adc
mov
push
xchg
nop
lret
dec
or
mov
ljmp
sbb
jmp
pop
lret
orl
jg
js
enter
jg
push
add
and
ret
lods
mov
cmp
add
sub
push
xchg
int
add
dec
sbb
aas
leave
push
ret
out
loope
mov
lahf
movsb
jo
xor
add
popa
decb
xor
stos
push
push
imul
dec
loope
mov
cmpsb
insl
jne
cmpl
sbb
mov
ror
inc
dec
cmp
mov
test
pop
inc
mov
movsl
inc
or
stc
sub
lahf
lods
imul
lock
dec
sub
xchg
adc
test
cmp
inc
cmpsl
decb
popa
add
and
mov
lcall
sbb
and
pop
jb
sti
or
fsub
repz
fmull
lahf
adc
fistpl
addr16
cmp
lods
mov
add
test
repz
or
ret
jb
out
testb
sub
sub
fnsave
ss
push
sti
mov
cli
mov
clc
jle
mov
and
rcrb
or
xchg
mov
cli
mov
test
dec
add
cs
jnp
popa
dec
push
fildl
jmp
cmp
cmpsl
sti
xlat
push
push
adc
add
dec
and
pop
sbb
mov
and
add
mov
xchg
mov
call
bound
mov
iret
andb
mov
ss
mov
div
pushf
scas
xor
inc
imul
cltd
out
pop
jns
sahf
lret
cld
dec
fs
addb
add
dec
dec
jecxz
mov
into
mov
or
cld
lods
push
cs
dec
shlb
mov
push
inc
and
xchg
cwtl
popa
loopne
sbb
jnp
and
push
push
mov
leave
mov
pop
imul
mov
and
rclb
movsl
push
ret
jae
jmp
mov
sti
jl
sbb
cld
mov
pusha
jecxz
push
insb
scas
out
fdivl
insb
push
adc
sbb
das
ret
xchg
dec
cmp
and
mov
insb
faddl
popa
and
pushf
inc
dec
pusha
mov
mov
sub
icebp
cmp
lahf
outsb
jmp
fs
bound
xchg
xchg
and
add
jle
cmp
mov
mov
stos
lods
cmp
push
out
aad
mov
out
jecxz
jo
pop
or
sti
ret
lahf
or
and
pop
cltd
outsb
addl
outsl
and
test
cli
fcoml
imul
dec
cmp
mov
mov
xor
pop
pop
int3
jae
inc
sub
lret
jg
rorl
std
outsb
push
shll
cmpsb
data16
testb
aam
or
ljmp
xchg
jb
dec
sub
xor
ss
push
imul
add
daa
pop
dec
mov
std
popf
or
xchg
or
xchg
xor
pop
clc
aad
testl
out
das
frstor
xchg
icebp
push
jne
sub
push
mov
inc
jno
add
lret
in
mov
ljmp
hlt
and
jge
fildl
imul
xchg
mov
pop
add
mov
inc
lock
cmp
jp
out
iret
fsubrl
cmp
jnp
lret
jae
out
jns
test
sbbl
ret
hlt
roll
or
or
in
cs
outsl
lahf
adc
dec
stc
mov
jo
lods
pop
cmpb
mov
push
je
dec
imul
mov
push
arpl
mov
or
mov
xor
test
mov
sarb
pop
js
and
add
mov
ret
negb
or
cmp
outsl
je
std
add
add
or
sbb
out
jge
mov
mov
in
push
bound
clc
clc
ss
push
and
lret
je
jl
sub
mov
dec
popa
std
xchg
jae
sbb
fwait
pop
sbb
xlat
lds
pop
and
fwait
mov
mov
mov
and
outsb
clc
aam
inc
pop
cltd
inc
dec
mov
mov
pop
push
dec
lds
pop
test
mov
fsubs
int
push
jg
inc
fidivrl
xchg
push
mov
cmp
aas
pop
jle
mov
ja
rcll
dec
mov
pop
fbstp
jb
mov
pop
cmpsl
lods
sub
cmp
lret
shll
pop
dec
int3
int
and
or
aad
jecxz
je
push
adc
repz
loop
pop
rcrb
ficompl
sub
sbb
in
inc
adc
push
ret
push
popf
mov
dec
aam
pop
faddl
mov
shlb
iret
pop
aas
and
clc
icebp
ret
mov
cmp
xor
popf
clc
mov
cmp
inc
popa
and
dec
in
iret
dec
mov
aas
shl
data16
insl
jo
lods
jge
lret
sub
sub
insb
ret
xchg
shr
leave
inc
push
pop
cmc
add
xor
lds
adc
sar
sbb
stos
sbb
inc
aad
sub
xchg
add
add
repnz
clc
andb
ljmp
jb
subl
mov
je
jb
rcrb
iret
test
xor
cmp
push
jg
adc
adcl
sahf
xchg
mov
xor
xor
and
mov
inc
dec
incb
movsb
push
iret
out
dec
add
and
jge
daa
popf
cli
or
outsl
mov
popf
insl
xchg
scas
lret
mov
insl
pop
cmp
push
jecxz
fldenv
xchg
mov
addb
mov
pop
pop
jnp
mov
xchg
mov
and
pop
inc
push
pop
mov
xor
xchg
push
add
or
cmp
inc
lret
push
inc
jnp
add
das
in
xor
sub
xchg
mov
jne
mov
push
dec
rcrl
push
popl
sti
rolb
mov
out
inc
fadds
jb
xor
xchg
fcompl
divl
jmp
push
adc
pop
out
lcall
xor
imul
mov
shll
cwtl
xlat
mov
dec
pop
jl
test
imul
jecxz
mov
push
cmp
sub
dec
in
lods
mov
jne
sub
xchg
fcomp
mov
push
aad
bound
xchg
pop
cmp
xchg
pop
int
pop
cmovge
imul
sbb
stc
mov
mov
mov
lahf
sti
xor
push
push
lock
xor
add
sub
sahf
pop
lea
xor
out
dec
rcl
cli
daa
sub
hlt
call
int
cmp
ficoml
in
push
lods
push
daa
jo
stc
jmp
pusha
pop
mov
mov
fisttpll
cmp
xchg
sbb
pushf
xor
inc
mov
std
mov
xchg
pop
cmp
cmpsb
scas
cs
scas
mov
mov
fdivp
clc
ret
stos
lea
xlat
insl
add
icebp
out
fdivl
dec
mov
jg
push
xor
mov
cs
mov
fdivrl
jle
cmp
push
cmpsb
jp
andb
out
push
pop
sbb
lcall
pop
mov
inc
xor
jl
xchg
pusha
outsb
es
dec
in
mov
xchg
jg
cmpsb
pushf
sub
outsl
fisttpl
add
or
mov
enter
push
cmp
sub
adc
add
dec
jmp
dec
pop
push
repz
cmp
sarb
xchg
mov
test
and
xchg
and
mov
and
xor
filds
loop
push
sbb
push
popa
popa
adc
mov
scas
adc
push
ss
sbb
out
xchg
sub
enter
outsl
dec
jge
sbb
push
dec
popf
mov
dec
lds
xor
cli
push
mov
mov
outsl
pop
pop
and
cmp
je
and
incl
jae
sub
in
in
xchg
cld
sbb
jbe
jne
imul
mov
jne
mov
add
pop
test
sbb
add
cmp
inc
js
gs
sbb
stos
pop
es
call
movsb
je
mov
adc
mov
push
mov
cmp
cmpl
sti
sub
imul
push
das
xchg
xchg
dec
mov
or
cmpsb
aaa
psubusb
jns
mov
pop
jno
mov
push
cli
inc
ror
pop
cmp
in
mov
jp
xor
aad
adc
add
stc
outsl
mov
inc
mov
xlat
scas
add
loopne
mov
movb
icebp
in
jp
arpl
repz
jge
sbb
push
fimull
dec
mov
mov
addl
mov
rcll
mov
lret
test
iret
mov
mov
fs
ficomps
sbb
and
pop
inc
stos
lds
arpl
cmp
add
or
jae
inc
ret
xchg
sub
imul
jae
outsl
xchg
jmp
rorl
push
and
adc
bound
test
mov
adc
mov
rorb
shl
mov
pop
jns
pushw
test
sub
ljmp
sti
or
into
add
clc
and
into
mov
pop
fnstenv
mov
insb
aaa
data16
fistps
push
stos
dec
xor
into
mov
shrl
xchg
jb
cmp
lods
sub
frstor
fdivl
sbb
aam
dec
nop
xor
dec
test
in
lret
pop
iret
sub
fcoms
mov
ffreep
ficompl
stos
lds
or
or
adc
xor
ss
mov
pop
sbb
or
in
movsb
xor
ret
call
sub
orb
sbb
or
cli
mov
add
jo
stos
lcall
add
lea
xor
insl
mov
push
out
lock
dec
dec
add
pop
jnp
popf
dec
out
lock
loope
cmp
mov
mov
shl
das
inc
sti
cmp
imul
inc
cmpsb
daa
rolb
push
bound
subl
pop
addr16
ret
cltd
dec
scas
pop
pop
and
test
incl
jno
je
sub
pop
std
mov
int3
adc
push
aaa
sbb
cmp
or
inc
mov
ret
jb
xor
or
rcll
popf
jns
gs
xor
pop
shll
popf
and
add
mov
fwait
pop
notl
or
sbbb
xchg
shrb
jp
pusha
and
arpl
sarl
in
and
test
in
ss
fdivrs
push
xchg
and
fstl
jmp
dec
push
inc
repz
xchg
fists
xorb
das
test
pop
jnp
sbb
sub
dec
mov
sahf
inc
or
les
xchg
inc
xor
out
sub
and
jp
sbb
xchg
add
lahf
notb
stc
loope
fnstenv
cld
stos
cmp
inc
fbstp
inc
add
inc
dec
inc
popf
jl
inc
shrl
call
loop
stos
inc
xlat
sbb
sub
mov
test
fbld
pop
std
ja
fcomps
out
sbb
les
mov
movsb
test
push
pop
lock
xchg
jo
xor
push
inc
cs
ds
call
mov
js
ret
out
pop
lods
add
es
xor
adc
mov
stos
jne
into
push
push
mov
dec
sub
sbb
aaa
add
pop
xchg
bound
sbb
or
mov
and
jae
mov
adc
lret
aas
jle
vpsadbw
gs
and
dec
stos
dec
pop
mov
or
dec
cmp
add
imul
lock
add
enter
pop
jmp
shl
mov
out
push
fisubrs
cmpl
imul
mov
mulb
imul
out
mov
cmpsl
push
decb
test
mov
mov
mov
ret
xor
flds
sbb
sti
pop
mov
int
rcrb
xor
lods
and
mov
sub
nop
jbe
aam
jns
les
orb
pop
outsb
cmpsl
mov
leave
sbb
mov
repz
pop
loope
and
pop
xchg
adc
jecxz
xor
pop
outsl
jne
dec
push
andl
iret
outsl
out
insb
mov
aaa
addl
loopne
sbb
out
xor
sub
jmp
inc
insl
imul
add
mov
adc
lcall
adc
fldl2e
ljmp
mov
cwtl
gs
clc
arpl
add
dec
les
jmp
xchg
sbb
pop
mov
mov
mov
add
xlat
jp
nop
data16
add
lods
push
and
pushf
insb
aad
inc
ja
xchg
jb
outsl
jb
xchg
adc
call
add
xchg
lcall
xor
pop
cmc
add
data16
push
mov
pop
cmpsl
test
sti
pop
dec
addr16
cmpsb
push
push
iret
adc
cmp
sub
adc
xorl
inc
imul
test
in
adc
mov
pop
std
out
and
push
dec
xchg
pusha
ret
cmp
addr16
pushf
sbb
out
mov
mov
mull
sbb
push
std
es
mov
lret
sbb
dec
jmp
cmp
sbb
pop
data16
stos
jo
adc
mov
mov
push
jb
pop
adc
int3
pop
sbb
sti
jbe
xchg
das
or
cmp
sub
aas
je
es
fiadds
bound
jns
repz
inc
stos
outsb
pop
xchg
mov
stc
xchg
mov
ret
imul
mov
fimull
imul
fs
and
pop
xchg
xchg
std
or
fildll
enter
andl
push
cmpsb
movlps
cmp
cmp
inc
and
push
aas
pop
clc
aad
icebp
cmc
adc
loopne
push
or
incl
popa
mov
mov
clc
xor
enter
dec
jecxz
push
insb
jp
pop
xor
add
mov
test
or
mov
insl
xchg
idiv
pop
xchg
mov
adc
lea
enter
out
stos
push
or
mov
jae
fs
and
add
js
cld
neg
or
insl
lods
cwtl
test
iret
aam
in
es
jecxz
cli
inc
pushf
adc
adc
or
or
ss
cmp
mov
cs
lret
scas
jo
xchg
xchg
je
hlt
cmp
dec
push
push
into
leave
out
dec
cwtl
popf
and
hlt
and
xchg
jo
addr16
in
xor
lahf
mov
test
push
fstpt
dec
inc
jae
iret
add
pusha
ljmp
sarb
imul
out
xor
aas
xor
dec
cmp
jb
add
lahf
mov
pcmpeqb
test
in
mov
sub
pop
mov
int
jl
jnp
and
mulb
repnz
sti
sbb
cli
cmp
sarb
and
push
pop
ficoms
in
push
in
mov
mov
std
iret
mov
int3
xchg
aad
jns
sub
insl
xacquire
bound
idivb
inc
add
or
ss
lods
dec
add
fcomi
pop
add
hlt
lds
mov
in
xchg
cmp
cmpsl
out
aad
out
mov
add
daa
sarl
test
mov
fnsave
outsb
and
mov
and
aas
cmp
cmpsl
stos
xor
lea
sbb
inc
rcrb
and
sub
mov
movsl
stc
mov
incb
mov
push
call
mov
inc
lods
test
lods
mov
jnp
jge
pop
stos
adc
rcll
icebp
push
cmp
mov
outsl
xchg
add
fadd
ja
cltd
dec
scas
pop
add
and
lret
test
out
sub
stos
or
adc
mov
sub
int
pop
and
sti
and
daa
lods
cmp
fsubrs
xchg
adc
mov
scas
jb
dec
jl
das
orl
out
adc
dec
add
out
es
inc
inc
push
daa
dec
push
mov
xor
insl
in
scas
ja
dec
cmpsl
popf
push
int
or
push
ret
pop
stos
rcl
aas
or
or
inc
xchg
sahf
and
mov
pop
inc
push
stc
pop
sbb
icebp
dec
jb
in
icebp
cwtl
test
xor
sti
push
std
shlb
testb
pop
and
fs
mov
insl
mov
xor
and
in
nop
push
pop
or
ljmp
pop
adc
fstpt
out
pop
xchg
adc
das
dec
iret
xor
adc
aad
idivb
stos
inc
mov
and
rcl
nop
push
xchg
mov
cmc
pop
andb
lods
mov
in
subb
cmp
adc
sub
cmpsb
jg
ret
incl
mov
sbb
adc
insb
shlb
push
mov
jecxz
mov
ja
cmp
cli
mov
mov
or
jo
test
pop
mov
xor
cmpsl
sub
gs
sub
inc
jmp
pushf
mov
sahf
mov
rol
imul
xor
dec
inc
push
sub
ss
shlb
jmp
xchg
cltd
ror
jge
xchg
cmc
iret
fcmovne
lcall
mov
ds
sbb
aad
dec
das
sahf
xlat
mov
add
pop
or
enter
je
cmp
jg
mov
dec
cmp
aad
fs
pushf
cltd
dec
xor
cmp
es
int
inc
stos
jmp
cltd
lea
fistpll
mov
int
dec
xchg
mov
sbb
xchg
pop
pop
dec
pop
shlb
sub
into
int3
cmp
sti
inc
inc
mov
mov
es
aaa
popa
sbb
movsb
mov
loop
jo
pop
mov
sbb
mov
mov
mov
inc
push
or
push
pushl
data16
scas
stc
dec
mov
sub
popf
cld
xor
int3
ljmp
and
dec
int3
xchg
iret
fistl
jge
inc
cmp
test
sbb
decl
xor
cmp
ficompl
movsb
test
faddp
enter
push
xchg
mov
xor
test
sub
jp
das
aaa
and
pop
aam
adc
lds
fmul
xor
or
sbb
mov
jns
or
jge
cli
hlt
jp
dec
dec
clc
sub
dec
lock
cmc
and
hlt
in
jns
hlt
add
inc
addr16
lcall
jge
int3
cmp
std
out
cmp
pushf
rolb
xchg
iret
out
or
push
enter
mov
popf
mov
push
jno
daa
test
mov
pop
stos
mov
dec
cmp
negl
sahf
shl
inc
int
in
push
cmp
adc
pop
pop
nop
ret
insb
adc
in
xor
je
and
mov
mov
push
dec
outsl
stc
push
pop
mov
lret
stos
lcall
mov
rcrb
sbb
sahf
jmp
fscale
dec
test
mov
insb
push
mov
jp
push
bound
mov
jno
cmc
pop
mov
adc
js
push
andl
xor
insl
fisttpl
or
loop
cmp
cmp
lock
leave
outsl
jecxz
mov
push
or
stc
sbb
jl
jle
ds
into
test
adc
push
lods
dec
push
movsb
inc
das
lea
push
call
in
mov
pop
cld
aam
ljmp
cmovb
test
clc
pop
mov
inc
test
outsl
sbb
mov
dec
and
pop
and
lcall
shrb
adc
int3
adc
lahf
lcall
popa
sbb
idiv
sbb
ret
xchg
int
dec
push
xchg
fidivrl
push
pop
lods
ret
inc
sbb
in
je
bound
sub
les
or
mov
push
adc
cltd
mov
aam
sub
mov
or
je,pn
adc
in
fimuls
sti
add
test
jb
jb
loope
data16
or
mov
lahf
into
jnp
adc
shrb
mov
loopne
inc
cmp
inc
fsubrs
in
mov
jg
pop
sbb
push
pop
in
in
call
adc
fldcw
pop
int
jne
loop
movsl
cmc
jne
mov
ljmp
fdivrl
add
xchg
shlb
arpl
mov
mov
out
sbb
xor
jnp
jae
xor
aam
sti
pop
cmp
out
pusha
or
movsb
fwait
push
push
sub
add
jge
pop
adc
lds
lods
or
pop
and
push
adc
lods
shlb
mov
cld
icebp
pusha
mov
arpl
in
ret
jae
rorl
loope
js
inc
adc
xor
lods
ja
mov
loope
xchg
mov
or
mov
fisubl
loope
outsl
pop
xchg
ds
cmp
fwait
mov
aas
xor
fcomi
cmovns
push
movsl
mov
mov
enter
dec
push
cltd
leave
pop
mov
xchg
dec
je
mulb
ss
bound
push
mov
popf
mov
imul
imul
jl
aad
int
xchg
fs
leave
scas
fwait
jo
sbb
cli
push
sbb
pop
ja
push
lahf
in
xor
sbb
jle
dec
stc
arpl
mov
sahf
xchg
out
xor
subb
fnstenv
shlb
lret
and
jbe
loopne
ds
sbb
add
add
sti
ljmp
dec
orb
jmp
xchg
jne
mov
js
add
fdivr
insl
fldenv
push
jns
and
inc
fcmovnb
mov
mov
cwtl
std
lods
loopne
scas
push
adc
cs
fimull
inc
out
cmc
xlat
push
adc
fwait
adc
adcl
scas
cmp
into
mov
mov
jecxz
sti
dec
and
call
test
iret
and
shl
or
jmp
sbb
sbb
jo
imulb
jns
mov
bound
sbb
lcall
adc
cmp
push
jmp
mov
push
adc
fldz
les
mov
xchg
add
dec
cmp
js
mov
aas
lahf
mov
call
insb
sub
cld
sub
add
js
cli
cmc
cltd
and
shrb
call
sub
pop
data16
mov
mov
dec
icebp
outsb
cmc
cmp
test
pushf
aas
jl
lret
mov
sub
fs
or
adc
mov
jecxz
xor
mov
xor
inc
pop
ss
fcoms
pop
pop
maxps
ret
fcomps
lahf
sub
std
dec
jp
jo
sub
cmpsl
dec
mov
out
push
or
lret
and
pop
ret
cmp
jmp
das
xchg
out
mov
mov
push
fisttpll
mov
dec
mov
fidivrs
push
mov
aad
daa
cmp
mov
mov
addb
test
or
cli
lock
pop
add
out
cmp
mov
jae
inc
loop
lahf
adc
xchg
mov
mov
or
jb
inc
repz
xor
xchg
sbb
andb
xchg
dec
pop
test
jbe
cli
cmpsl
dec
fs
scas
loopne
mov
sub
imul
test
jecxz
cltd
or
fsubrl
sbb
cmp
add
popa
dec
loop
es
add
cmc
fstl
or
xlat
test
push
mov
and
repnz
outsl
out
mov
int
mov
pop
sub
xchg
mov
mov
pop
ljmp
cmp
push
stos
or
mov
jne
movsb
xlat
pop
push
mov
jp
mov
jno
fs
inc
xchg
ss
icebp
es
mov
pop
jge
mov
fcomps
test
int3
lahf
mov
add
mov
mov
xchg
icebp
shlb
jns
add
pusha
dec
scas
dec
mov
shl
sub
push
add
sbb
add
sbb
ror
xchg
mov
ret
stc
jnp
cmpsb
and
dec
jo
ja
out
ret
mov
xchg
push
out
pop
mov
and
mov
out
xor
or
lahf
insl
jne
cmpb
cmc
shlb
outsl
mov
inc
mov
sbb
jno
xor
aam
inc
mov
call
aad
add
and
ljmp
test
test
fcoml
aam
mov
dec
mov
mov
jl
sub
xchg
test
pop
pop
jecxz
iret
cmpsb
out
jecxz
adc
cmpsl
jp
jl
into
jbe
lret
xchg
mov
sbb
daa
cmpsl
jns
sbb
fcomi
fdivr
mov
fildll
test
sbb
sahf
out
in
loope
xchg
mov
mov
mov
or
add
aaa
and
push
dec
les
movsl
imul
jnp
push
aam
std
cmc
or
inc
scas
das
imul
pop
jnp
mov
pop
imul
loop
xor
fidivl
sub
inc
adcb
mov
jb
jmp
call
jmp
jne
outsl
push
dec
sub
mov
ficoml
mov
push
xor
adc
arpl
notb
aas
test
cmp
cs
dec
test
mov
sub
add
lock
sti
mov
movsb
enter
test
pop
imul
shlb
test
xchg
or
xchg
mov
mov
xchg
pop
in
push
xor
roll
and
insl
jbe
mov
rol
rcrb
cltd
jecxz
loope
out
jbe
leave
and
test
hlt
or
ret
sbb
nop
pop
add
scas
xchg
stos
por
fimull
mov
inc
jp
mov
incl
sub
stos
ret
push
xor
and
ds
xor
jb
dec
xchg
jnp
pop
in
shll
jmp
mov
gs
stc
and
pusha
lahf
cli
pop
add
daa
push
hlt
rol
test
add
dec
add
mov
add
cs
mov
fcom
sub
pop
mov
mov
bound
xchg
xchg
mov
sahf
inc
mov
insl
shll
loopne
sbb
push
mov
xchg
sbb
ret
lahf
sbb
cmpsl
inc
sti
cmc
xor
out
sub
imul
mov
xlat
pop
push
pushf
test
icebp
xlat
fwait
ret
movsb
mov
int3
imulb
dec
dec
mov
data16
adc
les
out
or
inc
jmp
out
lods
loope
movsl
loop
inc
cmp
cmpsb
sti
mov
add
xchg
enter
ja
and
icebp
inc
insl
ds
movsl
iret
xor
iret
sbb
fmuls
dec
xor
inc
sub
cwtl
fsts
xchg
into
mov
add
in
mov
pop
aad
or
and
outsl
adc
lock
pop
xor
test
adc
mov
fists
adc
sarb
jae
aaa
div
nop
mov
pop
or
mov
and
jno
jmp
aaa
rcl
cmp
hlt
sar
xor
or
pop
and
mov
fwait
lea
das
or
fisttps
sub
fldenv
mov
mov
mov
lds
out
and
adc
adc
xchg
mov
mov
ret
rcr
fnstsw
out
xor
das
xor
cltd
pop
pusha
int3
xor
jns
push
movsb
cmpsl
cmp
mov
popf
push
or
dec
pop
scas
mov
stc
dec
sbb
sahf
fnstenv
leave
shrl
stc
shll
sbb
and
sbbb
inc
into
aas
dec
mov
out
pop
mov
repz
imul
das
sbb
enter
rcl
mov
js
xchg
xchg
pop
lahf
aas
ret
rclb
icebp
sbb
or
fdivrs
popf
xchg
mov
jecxz
lcall
enter
cmp
insl
stos
add
pop
movsl
fldenv
repnz
jp
fbld
mov
xlat
lock
push
push
mov
xchg
jnp
cwtl
jb
jmp
pusha
outsl
mov
mov
ljmp
imul
cmpsb
out
jb
aam
xchg
add
mov
shll
pushf
je
and
pop
rol
adc
and
and
push
pop
cmc
xchg
sti
notb
and
fmuls
les
dec
xorl
and
stos
pushf
pop
addr16
pop
popf
push
es
inc
mov
mov
xor
jp
decb
xchg
jns
sbb
sub
mov
stc
arpl
mov
xchg
xor
sub
push
mov
pop
shrl
lahf
in
xorb
iret
cmp
xchg
push
sbb
bound
enter
movhps
sub
cs
jmp
jns
icebp
sahf
lods
xorb
movsl
jecxz
cmpsl
pop
imul
movsl
cs
inc
xchg
pop
dec
rcrb
aas
int3
sbb
sub
imul
int
or
shrb
inc
cltd
in
adc
movsl
ds
push
outsb
mov
aas
push
sbb
stos
xchg
inc
clc
lods
cmp
rcr
adc
in
xor
fisttps
enter
fidivrs
js
mov
ljmp
pop
imul
mov
lds
icebp
mov
push
movsb
out
mov
pop
test
ljmp
div
lahf
and
test
xchg
dec
mov
mov
in
int
xchg
imul
inc
sahf
pop
add
out
lock
push
sub
shr
xor
jle
dec
in
dec
popl
imul
sti
scas
out
mov
lods
fsubrp
adc
ja
or
inc
mov
sti
sbb
lea
es
mov
std
mov
popf
xor
cmp
push
xchg
jg
pushf
xchg
enter
int3
xor
imul
add
sbb
repnz
leave
sbb
js
faddl
ret
push
idivb
ds
cwtl
stos
ficomps
mov
sub
out
rorb
xchg
xor
jne
inc
xor
dec
mov
call
fidivl
out
outsl
jmp
cmp
loopne
pop
mov
ret
enter
dec
mov
outsl
ja
pushf
leave
push
ret
ss
std
pop
dec
test
std
test
mov
test
sbb
and
cltd
jge
std
pop
hlt
fs
fnstsw
or
cld
sbb
inc
in
cmc
aas
cmp
jns
jle
or
daa
jmp
jle
loope
pop
mov
mov
mov
out
jae
scas
pop
jmp
dec
xchg
add
sub
frstor
sub
cmpsl
mov
mov
mov
jae
clc
push
xor
stos
pusha
push
sarb
mov
fnstsw
mov
mov
dec
xor
adc
xchg
shll
or
add
mov
es
jb
test
nop
jno
push
xor
pushf
lcall
add
mov
mov
sub
mov
and
push
in
outsb
jmp
xor
test
push
jge
xor
adc
sub
test
mov
sub
dec
lahf
adc
adc
stos
int3
jp
pop
push
sub
jne
fstp
and
dec
int
jo
sarb
data16
push
shll
int3
mov
cmpsl
jge
aas
pop
inc
jae
xor
or
xlat
cmp
test
rcl
lahf
mov
aaa
xchg
ret
jns
inc
mov
dec
mov
lea
es
ficompl
jae
jmp
pop
jle
insl
cmp
push
fcmove
jmp
add
push
mov
sbb
push
adc
cwtl
lcall
mov
pop
mov
shl
aad
flds
add
subl
test
pop
push
sbb
mov
icebp
pop
fcomip
in
dec
rcll
sub
lock
lahf
jae
xchg
andb
aas
fwait
stos
popa
roll
in
in
rolb
mov
pusha
jp
jns
and
mov
mov
mov
pop
imul
adc
loop
pop
adc
ret
cmp
dec
pusha
mov
jae
pop
inc
aam
push
into
in
and
add
sub
mov
mov
jmp
mov
fs
jne
jle
jmp
dec
cwtl
outsb
dec
test
jnp
add
cltd
jne
push
jp
bound
adc
pop
andl
xchg
add
inc
or
call
adc
xchg
fs
movsb
or
ret
cmp
in
sbb
enter
pushf
dec
out
scas
xor
xor
in
mov
add
pop
cmpsb
repz
mov
pop
lret
mov
or
jae
pop
sbb
scas
mov
adc
aad
mov
mov
mov
add
xor
push
cli
daa
or
repz
or
and
inc
outsb
xor
ret
mov
je
lds
xchg
xor
jl
fstl
or
lahf
rcrl
out
cmp
xchg
xchg
add
fldlg2
test
pop
test
imul
outsb
aas
xchg
sbb
test
mov
cmpsl
out
add
adc
mov
or
adc
or
inc
mov
mov
fdivrl
inc
and
jge
add
inc
loopne
inc
or
rcrb
lods
mov
and
nop
sbb
sbb
mov
and
test
mov
hlt
sub
std
rcr
pop
inc
outsb
test
inc
dec
ja
push
add
pop
pusha
sub
pop
enter
sub
xlat
paddsw
cld
vxorps
ja
push
jp
mov
xor
in
pop
icebp
test
es
popf
pop
cs
ss
negl
enter
push
lock
jle
pop
shlb
add
mov
scas
and
jbe
jecxz
nop
push
adc
shrb
jbe
pusha
and
cmp
sub
sbb
mov
testl
push
rcrb
cmc
sbb
int3
jp
jo
cmp
dec
call
out
or
sub
sbb
push
subb
and
inc
push
cmp
in
fidivrs
cmp
popf
sarb
xor
jo
jecxz
and
sbb
dec
pop
push
push
dec
out
mov
xor
repz
pop
dec
push
sub
daa
pushf
sbb
dec
sbbb
push
ffree
jl
imul
dec
movsl
lods
xchg
imulb
mov
mov
out
dec
clc
xchg
mov
inc
popf
jne
adc
push
into
and
jnp
popw
push
xor
lods
sub
mov
inc
fs
pushf
jbe
mov
pop
sub
sub
xchg
scas
out
fsubrl
jmp
clc
mov
test
sbbb
pop
lea
push
and
cmp
sub
mov
aam
and
jns
lret
mov
xchg
call
scas
faddl
adc
iret
lret
leave
es
dec
lods
cmp
mov
mov
addr16
mov
adc
push
insb
adc
mov
loop
mov
andb
mov
adc
fildl
xor
je
unpckhps
aas
cmpsb
mov
ljmp
daa
mov
jmp
or
mov
loopne
mov
test
sbb
jl
xor
pushl
inc
stos
test
mov
and
xchg
repnz
jae
inc
fsubr
cmp
inc
lret
lock
and
movl
gs
xor
cmc
ss
out
mov
xor
cmpsl
insb
aad
mov
lods
mov
fnsave
mov
outsl
arpl
and
cli
jecxz
imul
pop
in
add
jb
call
cwtl
xlat
push
mov
imul
xchg
jno
adc
mov
je
sub
dec
sub
xchg
mov
lods
dec
rclb
jo
loopne
out
jnp
adc
outsb
aam
out
inc
jmp
leave
mov
xor
lret
mov
and
adc
iret
or
loopne
idivl
fbstp
in
cmp
addr16
les
inc
stos
fsubrl
push
xor
pop
popa
lahf
aam
out
jo
popl
shrl
fs
add
push
or
inc
jno,pn
movsl
push
jbe
and
sub
repz
orb
xor
arpl
iret
lret
outsl
int3
test
xor
push
fisttpll
loop
out
pop
call
aam
idiv
xor
sbb
inc
ja
mov
icebp
mov
adcl
fisttpll
adc
ror
jg
sub
pop
jnp
inc
pop
mov
xchg
mov
mov
int3
arpl
sbb
clc
int
jno
inc
fsubrs
dec
inc
fistps
jg
test
lds
sbb
fld
cltd
sbb
xchg
mov
sub
pop
idivl
repnz
add
mov
sub
dec
fdivl
shlb
mov
dec
fxch
frstor
ret
adc
add
bound
in
pop
in
out
sub
mov
mov
data16
xor
ja
mov
pop
cmpsb
cltd
xchg
or
imul
lock
jae
add
mov
cmp
xor
push
cs
sub
out
xchg
inc
movsb
mov
and
sub
nop
mov
lds
es
cmp
je
cmp
icebp
std
addl
cmp
call
arpl
sbb
or
lea
cmp
xchg
dec
dec
enter
pop
jecxz
push
push
jnp
pop
cmp
mov
loopne
add
jno
mov
std
jbe
cmpb
push
pop
dec
imul
cwtl
sbb
dec
int3
pop
negl
sub
mov
or
sarl
popf
orb
push
clc
push
add
mov
xchg
movsl
xor
push
ss
ret
lcall
xchg
aam
out
sbb
cmpsb
cmc
js
hlt
cwtl
pop
adc
or
and
clc
push
movsl
js
jb
push
cld
addr16
xchg
jle
mov
xor
mov
jge
addr16
test
loope
std
sub
cmp
sbb
mov
data16
cli
mov
mov
ja
sub
lods
stc
xorb
out
popa
mov
cmp
jns
dec
mov
xor
iret
inc
shlb
push
mov
addr16
out
adc
stos
leave
cwtl
sbb
jecxz
ja
stos
sbb
test
inc
adc
mov
sarl
sbb
cmpsl
push
movsl
and
pop
cmc
mov
mov
jmp
add
repnz
or
out
mov
test
jae
jnp
sbb
cmc
stos
cli
stos
mov
rcrl
ljmp
scas
stos
lock
mov
test
xchg
into
ljmp
pop
add
cmc
repz
imul
and
movsb
adc
and
xchg
cmp
sarb
xchg
inc
loope
inc
das
add
xlat
xchg
sahf
mov
add
fadds
popa
xor
and
popa
mov
out
stos
rcrl
ret
cmp
cmpsb
dec
push
jnp
je
mov
lret
pop
sahf
xchg
push
sub
insl
mov
adc
call
add
dec
cwtl
dec
sub
mov
daa
mov
data16
xchg
sbb
out
pop
mov
jo
and
stos
loopne
lret
loop
test
pop
push
sbb
sub
jl
pop
and
mov
pop
xor
outsl
lds
neg
jns
push
jno
sbb
hlt
andb
fs
sbbl
imul
jg
aam
ja
jp
sbb
sbb
add
mov
dec
dec
mov
cmpsb
sub
adc
mov
lods
pop
out
jne
mov
or
aad
fisubrs
xor
jno
cmp
inc
cld
inc
imul
inc
out
cld
jle
mov
jge
sbb
push
push
jbe
iret
sbb
out
or
and
jb
call
pop
xlat
pusha
mov
lods
dec
dec
jl
ds
and
pop
xchg
dec
jns
in
arpl
insb
ja
xchg
aas
icebp
dec
hlt
jne
ror
cmp
imul
jecxz
stc
pop
pushf
scas
mov
ja
je
fldl
test
push
mul
std
adc
shlb
ror
add
xor
daa
movsb
sbb
inc
outsb
sbb
aaa
mov
xchg
andl
cmpsb
or
data16
jp
add
or
in
sbb
in
xor
jne
jmp
enter
cli
in
mov
jecxz
dec
cld
mov
sbb
xchg
or
inc
stos
rcll
and
fsts
ret
and
dec
mov
mov
fisubrl
cwtl
and
inc
idivb
xchg
mov
mov
xor
fstps
scas
pop
rorb
lods
mov
mov
jo
fwait
mov
cli
xchg
sbb
xchg
and
cmp
hlt
mov
pop
imul
out
das
sbb
repz
mov
movsl
mov
into
cmpsb
test
int3
xor
fwait
pop
add
out
les
popf
mov
adc
xor
push
mov
lret
fcoms
mov
jnp
shr
or
mull
mull
dec
outsl
push
fstps
pop
fbstp
xor
daa
add
jp
iret
or
add
dec
test
mov
jmp
add
mov
mov
mov
out
call
out
push
loop
pop
rcll
push
testb
adc
dec
jnp
cli
add
aad
and
fiadds
movsl
ds
cmp
repnz
fisttps
pop
shl
or
js
les
dec
es
in
arpl
adc
imul
add
leave
or
push
std
shrl
xor
adc
ljmp
pop
xchg
push
scas
mov
cmp
jb
ja
cld
inc
dec
mov
test
repz
xor
cltd
test
jge
bound
pop
mov
xlat
dec
mov
dec
sbb
cmp
or
mov
fsubrs
jne
pop
jno
shll
imul
jle
pop
add
sbbl
ret
adc
mov
mov
push
pushf
sbb
in
inc
stos
inc
jp
push
outsb
mov
pop
xchg
fcmovu
sbb
cmp
add
hlt
cs
cmpsb
mov
out
push
ret
out
or
jnp
scas
jg
dec
testl
mov
fiaddl
sbbb
fucom
sti
and
sbb
ret
mul
ret
adc
mov
jecxz
loopne
ljmp
rolb
andb
cmpl
dec
mov
fbld
sbb
mov
stos
lods
cmp
mov
mov
pop
in
mov
call
push
xor
jbe
das
out
or
fildll
xchg
and
sub
imul
aad
dec
mov
mov
adc
pop
dec
js
fwait
arpl
dec
lret
lock
test
push
cmpsb
cs
adc
pop
or
ja
loopne
daa
mov
test
mov
xchg
mov
inc
adc
xchg
sub
imul
ds
push
inc
xchg
add
adc
mov
in
xor
cmp
subl
fcmovb
imul
xor
pop
dec
xchg
jg
and
or
cwtl
sbb
cmp
and
lds
xchg
es
jnp
mov
in
int3
jo
add
push
mov
mov
and
aad
add
cmp
add
loope
and
mov
aas
das
sbb
call
popa
cs
xor
imul
inc
shlb
inc
xor
lea
mov
jno
mov
add
push
out
cmp
cltd
mov
sti
xchg
mov
jo
inc
jp
enter
dec
fwait
lcall
aam
add
mov
or
xor
into
fwait
jbe
mov
push
and
pop
out
je
sub
lods
push
fcompl
inc
mov
mov
push
xor
icebp
call
fs
loope
sbbl
fmull
das
sub
jl
mov
lds
lock
ss
icebp
push
inc
rolb
in
jno
jno
iret
push
cmpsl
adc
lds
movsb
pop
and
jp
xor
mov
cmpsl
test
pop
in
inc
push
push
sub
mov
or
add
sub
movsb
clc
aad
mov
or
mov
push
push
pop
cmp
mov
daa
jne
dec
jbe
idivb
addl
jns
or
jge
xlat
outsb
inc
dec
aad
mov
mov
dec
or
cltd
inc
jbe
inc
push
push
sti
mov
ds
les
mov
sbb
push
sub
fisubl
idivb
push
dec
add
sub
push
pop
push
loope
inc
push
test
stos
push
sub
out
iret
adc
movsl
mov
stos
mov
divl
push
aad
sbb
ds
xchg
daa
in
lea
push
mov
inc
sub
jecxz
addr16
jno
cli
mov
cmp
mov
xchg
inc
in
cmpb
cld
mov
push
cmpsl
aad
sahf
pop
xor
cli
push
and
cmp
andb
lods
xor
jo
lahf
out
or
sbb
js
movsb
push
xchg
or
push
insl
inc
xor
icebp
xchg
out
dec
cmp
push
push
mov
fucomip
xchg
mov
mov
fimull
xor
dec
jl
push
xchg
pop
jecxz
xchg
jnp
hlt
pusha
popf
lods
inc
stos
std
push
cli
cltd
sub
stos
insl
xor
jbe
sbb
xchg
shll
fidivrs
aas
je
stc
xor
xchg
push
jg
inc
outsl
xor
aaa
outsb
gs
lods
icebp
aam
pop
cmp
in
mov
xchg
pop
cmp
pusha
lahf
cmp
test
aaa
aad
mov
inc
movl
mov
sub
into
iret
fs
or
lods
jg
adc
test
sbb
loop
xchg
add
es
ds
cmp
and
mov
jge
xchg
int
jmp
mov
shlb
imul
test
test
ds
into
mov
or
nop
fxch
mov
mov
push
ret
fsubl
mov
sub
lcall
fidivs
repnz
add
ja
mov
xor
or
iret
stos
mov
sbb
jo
or
nop
or
pusha
popa
xor
pop
cmpb
mov
sbb
cmpsb
jb
movsl
mov
mov
pop
ss
mov
test
cmp
icebp
mov
movsb
ss
in
popf
cmp
xchg
xchg
aas
sbb
or
cltd
xor
lahf
outsb
test
arpl
lcall
jb
and
sub
inc
enter
fucomp
fisttpl
repnz
das
cmp
out
popa
stos
jg
sahf
adc
adcb
push
popa
loop
in
insl
or
xchg
jb
or
sahf
or
inc
xchg
mov
lahf
mov
cmp
lret
inc
and
xor
add
leave
sbb
inc
mov
jns
xchg
mov
lcall
cmp
aam
movsl
je
cmp
xchg
sub
pushf
iret
sub
push
dec
lret
sbb
push
cmp
xor
jmp
je
lcall
mov
lods
jl
jmp
inc
in
and
sbb
dec
xor
insl
out
jne
arpl
clc
lret
adc
aaa
cmp
out
jb
into
sbb
pop
outsl
push
mov
std
xlat
xchg
sbb
test
dec
push
rorl
pop
leave
sbb
call
cmp
pop
fsubs
pop
sbb
sbb
imul
add
pop
inc
jbe
mov
pop
out
sarl
hlt
jae
push
or
dec
push
lock
test
cmp
add
inc
je
ficoml
mov
mov
xor
stc
popa
mov
nop
out
cmc
sahf
pop
bound
add
jl
lret
test
jg
pop
or
fwait
mov
xor
inc
ret
inc
adc
lahf
jp
pop
ret
test
mov
mov
push
push
dec
ret
sbb
gs
addr16
mov
repnz
push
xchg
xchg
jecxz
in
test
and
or
push
scas
sub
pushf
adc
jnp
inc
dec
pop
adc
sub
outsb
pop
imul
dec
dec
jle
jnp
mov
xchg
movaps
sbb
mov
or
mov
pop
ds
sbb
pop
mov
aas
mov
scas
xchg
dec
inc
inc
pop
cli
add
addr16
movsb
sahf
test
test
mov
sbb
cmp
shrb
cmpsb
in
xor
sti
or
mov
mov
push
or
xchg
xor
rorl
out
dec
int
in
mov
sub
jno
imul
dec
adc
jae
sbb
or
outsl
lcall
mov
out
enter
daa
push
ds
xor
pop
add
xchg
outsb
sub
adcb
lret
inc
xor
cli
adc
out
dec
iret
mov
mov
jns
stos
and
pop
jnp
mov
or
fcomps
jns
mov
lea
jp
pop
pop
in
movsl
dec
lds
jmp
xorb
fs
adc
cmp
cmp
stos
mov
imul
xchg
movsl
shlb
test
test
int
sbb
sahf
loop
scas
ljmp
mov
popf
bound
into
pop
call
jnp
ja
dec
push
in
fst
xor
dec
iret
pop
pop
icebp
sbb
sbb
jle
jmp
adc
push
push
xchg
stos
or
sbb
test
adc
xchg
dec
add
cs
test
dec
add
mov
adc
in
mov
mov
pop
shll
enter
js
push
inc
xorl
pusha
sbb
xorb
stc
mov
or
inc
mov
cmp
test
out
sub
or
jp
adc
cmp
xor
jg
das
jg
mov
mov
repz
cld
stc
aas
mov
pop
pop
sub
nop
cmp
out
adc
jno
jmp
pop
das
gs
adc
test
and
negb
xchg
lds
push
cwtl
ret
add
pop
ss
sti
sub
test
adc
jne
addl
lods
orb
aad
mov
mov
mov
add
les
mov
ret
iret
lcall
add
pop
movsb
dec
pop
shrl
sbbb
xchg
xchg
or
testl
cs
ret
and
in
gs
jnp
out
cmc
xchg
and
int3
or
push
aas
jo
scas
add
or
add
arpl
fstp
and
incl
mov
push
add
cmp
push
lea
and
mov
push
int3
insl
and
repz
add
or
stos
pop
pop
pop
jl
sbb
mov
and
adc
sahf
sub
xor
pop
loope
stos
scas
dec
fdivrs
stos
pop
loope
sbb
adc
hlt
mov
xchg
and
jns
pop
test
repz
fsts
sub
xchg
mov
shlb
std
popf
push
xchg
mov
lcall
incl
mov
jmp
inc
cmp
jb
testl
loop
nop
frstor
ljmp
lds
sbbl
fwait
scas
or
mov
out
mov
dec
dec
loop
jp
popf
test
jmp
xor
and
scas
lret
in
cmp
leave
pusha
loopne
lea
cmp
pop
movsl
cmp
push
into
fwait
add
dec
jmp
or
dec
mov
sti
loop
jno
lahf
add
test
lret
xor
sub
mov
jb,pt
add
pop
ficoms
and
sbb
js
jp
jmp
clc
cltd
adc
xchg
mov
and
je
adc
imul
dec
lcall
adc
add
xchg
adc
pop
imul
cmp
arpl
js
cmc
divb
xchg
mov
mov
cwtl
cmpb
in
or
push
std
enter
cmp
dec
ret
mov
imul
and
mov
hlt
repz
and
movsb
ret
xor
mov
test
mov
mov
push
inc
fnsetpm(287
jle
xlat
mov
mov
int
jmp
jb
mov
jns
into
push
or
pop
xor
pop
sbb
idivl
pop
mov
and
pop
mov
insb
fbstp
movsl
mov
sahf
dec
mov
push
push
sub
sub
or
loop
orb
jae
jg
or
imulb
subl
cmc
aas
cmp
cmp
cmpsl
mov
mov
mov
fnstenv
sbb
dec
subb
jb
cltd
dec
cmp
lret
loop
cld
aaa
dec
out
pop
push
jle
cmp
xor
inc
mov
mov
cmc
jns
mov
dec
mov
adc
xor
movsl
jno
in
push
lret
fimuls
adc
push
fbstp
outsb
jnp
dec
cwtl
xor
inc
xorl
and
add
and
add
popa
repnz
add
mov
adc
lret
psubb
mov
fst
mov
fwait
adc
sub
stc
mov
mov
stc
jge
setge
jae
fmull
and
dec
enter
pushl
roll
faddl
cld
mov
and
push
mov
jb
adc
lds
push
jmp
push
and
dec
sub
add
arpl
mov
cmp
pop
daa
mov
scas
dec
or
aaa
int3
mull
adc
popa
sub
addr16
stos
sbb
and
ret
lcall
mov
loopne
stc
ss
sbb
push
push
and
push
mov
mov
mov
stc
shlb
cmp
sub
fsubrs
inc
lcall
adc
xor
cmpl
into
xchg
push
inc
mov
fwait
shl
outsl
or
into
adc
ret
movsb
outsb
repz
mov
mov
push
jns
enter
pop
ret
sti
dec
jmp
popa
xchg
enter
ljmp
and
call
pop
xlat
xchg
lcall
lahf
mov
aas
or
jmp
inc
mov
add
inc
push
or
js
dec
or
mov
clc
mov
pop
push
jmp
sub
mov
inc
add
mov
mov
mov
jae
fcoms
adc
les
xchg
xor
std
xchg
xchg
scas
nop
fsts
push
loop
or
fdivrl
mov
imul
mov
adc
adc
adc
xchg
dec
sbb
sti
adc
jne
push
jb,pt
es
cwtl
data16
das
stc
push
jle
popa
repz
imul
xorb
mov
aaa
shrl
pop
int
pop
sbbb
xor
test
cmp
and
mov
mov
out
mov
stos
push
mov
call
push
and
lea
xlat
leave
jge
loope
xchg
gs
mov
xor
mov
mov
fcoms
cs
outsl
add
sbb
push
mov
arpl
cwtl
push
jno,pt
dec
std
inc
ja
jmp
mov
mov
push
jecxz
jne
fcmovnu
sub
cmp
adc
cmp
mov
jg,pt
mov
jae
cmp
imul
add
rcl
arpl
and
loope
call
sbb
les
and
cmp
mov
cmc
cmp
cmc
sub
loop
push
adc
insl
jg
jnp
int3
shll
inc
and
call
xor
repnz
lea
xchg
cmp
pusha
push
pop
push
lea
in
testl
mov
adc
lret
sbb
push
push
ljmp
xorl
dec
fnsave
push
ljmp
pop
push
jns
mov
rorb
pop
jnp
fwait
sbb
jmp
ljmp
int
std
pop
out
scas
pop
mov
cwtl
jp
push
xor
mov
lahf
dec
and
popa
lods
push
push
push
icebp
mov
pop
push
and
leave
lret
jge
push
js
push
cmp
stc
enter
cli
pop
rolb
ds
insl
in
stc
fsubrs
cmp
in
in
movl
inc
add
inc
shll
inc
jl
jne
cli
icebp
stos
clc
cmp
cmpsl
gs
sub
test
imulb
dec
js
adc
add
or
mov
cmc
xchg
lock
xchg
lods
imul
mov
mov
icebp
daa
mov
xchg
dec
xchg
stos
and
mov
pop
or
roll
sti
xor
imull
outsl
lahf
scas
shlb
and
jmp
jo
test
daa
xchg
xchg
cmp
jne
pop
push
push
in
movsl
lret
inc
mov
hlt
and
loopne
into
dec
and
lret
cltd
fadds
dec
sub
les
push
fisttpll
dec
add
jmp
lahf
ficomps
inc
inc
or
add
mov
mulb
pop
push
subb
adcl
loopne
fimuls
bnd
test
jge
call
insb
jp
jg
mov
nop
loope
jle
les
jge
and
and
pusha
imul
mov
shr
imul
loope
in
gs
test
lcall
xorl
repz
mov
in
outsl
pop
mov
enter
cli
dec
repz
add
lds
sub
cs
pop
hlt
loopne
mov
push
aad
shrb
imul
dec
insl
or
cltd
in
inc
nop
sub
cwtl
mov
dec
sub
xor
cmp
lahf
xorl
popf
dec
nop
popa
data16
aam
pop
sbbb
xchg
nop
pop
lds
ljmp
inc
adc
adc
xchg
nop
dec
jmp
xor
cs
roll
lret
es
pusha
outsl
stc
jno
jmp
mov
mov
mov
push
push
add
mov
je
add
mov
jge
inc
inc
int
in
xlat
arpl
lods
mov
add
xor
cmp
mov
inc
add
jecxz
fsubl
cmp
dec
mov
mov
loopne
jo
imul
inc
cmpsl
mov
cmp
adc
cmp
adc
pop
in
test
xor
data16
cmovns
lahf
xor
jae
push
out
adc
in
jae
jl
data16
cmc
outsb
lds
cltd
adc
pop
ljmp
adc
cmp
push
sub
nop
cmp
sti
testl
and
xor
adc
and
mov
jg
dec
mov
and
and
ljmp
das
jns
or
push
popf
push
add
rcl
fildl
jo
jecxz
lods
dec
in
pop
dec
lock
mov
invd
lret
sub
inc
pop
push
or
pop
shll
mov
sbb
and
pop
orl
mov
xchg
or
jle
cmp
sbb
xchg
in
adc
jbe
fidivs
mov
out
ficomps
movaps
rclb
movsb
xor
adc
add
popa
test
pop
sub
sub
pop
test
fs
rclb
xor
xor
dec
and
jecxz,pt
and
call
jg
imul
aas
shl
pop
ljmp
divb
add
das
adc
leave
push
outsb
imul
lds
lahf
icebp
xor
je
fcmovnu
test
sarl
or
test
popf
enter
jge
pop
out
aam
movsb
lds
repz
push
cs
aam
les
dec
mov
push
xor
inc
test
add
dec
dec
rcll
sbb
cli
das
lods
aam
pop
jno
add
bound
fsubs
stos
out
dec
add
test
lea
or
testb
aam
jl
pop
xor
inc
pop
in
pop
fidivs
xor
jecxz
lods
sar
xchg
in
lods
sbb
xchg
loope
ret
jo
or
fwait
or
jns
icebp
int
cli
or
in
out
adc
jne
or
add
dec
adc
inc
add
and
mov
pop
icebp
pop
push
lods
lock
or
push
cmc
cmp
and
mov
cltd
nop
pop
mov
das
movsb
or
loope
mov
add
push
inc
dec
pop
adc
jo
sbb
pusha
push
movsl
dec
cli
les
lds
add
pop
mov
xchg
cmp
incl
pop
outsb
int
aas
adc
pushf
icebp
push
push
sbb
dec
scas
push
xor
vcvtsd2si
ret
inc
out
or
leave
andb
enter
sbb
jecxz
pop
push
test
cmp
int3
insl
jge
mov
bnd
divl
ss
and
add
mov
dec
xor
js
lret
lret
xchg
pushf
xchg
sub
sub
fcompl
jns
scas
inc
sub
fidivl
push
fsts
mov
shlb
mov
hlt
cmpsb
dec
rclb
mov
adc
cmp
cmc
stc
scas
push
push
fstps
stos
pusha
push
stos
dec
bound
add
insl
ret
push
mov
rcrl
push
dec
inc
mov
out
adc
jns
mov
inc
add
lds
jl
int
or
dec
dec
jb
mov
inc
cli
pop
shrb
or
pop
add
cmp
pop
scas
arpl
insb
insl
mov
add
mov
inc
pop
ss
int
fwait
mov
cmp
cwtl
push
cmp
pop
in
sub
xchg
icebp
icebp
add
or
xchg
inc
decb
and
sbb
push
push
ret
orl
xchg
loop
jge
and
stc
fisubrl
repnz
pop
les
inc
jp
insb
mov
ja
jbe
sub
je
lret
adc
scas
mov
dec
add
lods
sbb
cmp
jno
push
jns
pop
stos
ret
pop
mov
xchg
pop
lret
mov
adc
dec
mov
mov
lret
xchg
in
cmp
gs
rcrl
enter
mov
aaa
cld
stc
jbe
outsb
xor
sub
js
pop
pop
or
inc
inc
nop
gs
dec
mov
mov
in
inc
sub
mov
push
push
cmp
adc
mov
pop
test
xor
pop
scas
inc
mov
jns
xor
and
or
out
and
jne
inc
or
je
jb
xchg
nop
lahf
jg
and
leave
jb
jne
adc
mov
mov
xor
pop
sub
add
sub
fcomps
pop
dec
cmp
iret
cmp
mov
jb
icebp
mov
loop
jg
pushf
stc
dec
add
dec
and
xchg
cmp
add
push
jg
into
movsb
mov
arpl
lea
mov
mov
aas
nop
push
imul
sub
andb
inc
inc
mov
adc
add
lcall
int
mov
ret
notl
mov
mov
mov
or
ds
mov
ds
push
mov
ret
or
test
mov
lock
bound
xor
and
outsb
arpl
add
test
rorb
sbb
clc
inc
add
mov
xor
rorl
fucomi
pop
daa
push
adc
rcrl
cmp
xor
mov
repz
idivl
fmuls
push
mov
fnstenv
hlt
insb
xchg
xchg
imul
mov
push
addr16
adc
lcall
jecxz
scas
lret
shr
test
sbb
cld
push
mov
in
add
and
inc
and
lret
xchg
stc
xor
xchg
pop
mov
mov
scas
dec
inc
movsl
adc
daa
aad
or
rcrb
adc
xchg
pop
and
cltd
movsb
cs
push
lcall
add
adc
dec
and
inc
fwait
inc
std
pop
sti
pop
call
cmp
mov
shll
adc
sbb
sub
push
mov
adc
cmpsb
insl
fnstsw
pushf
mov
addr16
jmp
lret
dec
orb
push
cmc
imul
mov
into
hlt
dec
jge
dec
push
mov
jmp
mov
push
je
pop
movsl
and
dec
adcl
dec
sub
testl
dec
and
and
fcmovu
ja
je
data16
push
add
pop
ja
mov
pusha
fst
xor
or
repnz
cmp
push
movsb
mov
add
cmp
loopne
pop
xor
arpl
pop
scas
xlat
push
cmc
sbb
rcll
mov
push
inc
inc
fs
adc
pop
cmpsl
jae
sub
outsl
enter
pop
adc
xchg
xor
and
imul
adc
outsl
sub
inc
fsub
and
or
ret
cwtl
inc
sbb
cmp
movsl
adc
nop
lods
mov
out
push
cltd
mov
dec
aam
cmp
or
scas
addr16
sarl
out
cmp
jbe
test
adc
mov
mov
mov
out
sbb
loope,pn
and
push
fcomps
add
sarl
orl
ficomps
inc
mov
cwtl
push
dec
lods
xor
frstor
lret
jg
sub
push
ja
aad
leave
inc
subb
jno
das
ljmp
sbb
jmp
or
mov
xlat
aam
fldt
rcrl
mov
les
ret
dec
jbe
or
jae
cmp
dec
mov
insl
imul
sti
inc
xor
cmp
arpl
fcmovbe
inc
in
mov
inc
stc
sub
pop
je
cmp
lea
pop
mov
push
add
rorl
jle
push
shrb
cmp
jle
mov
rcr
add
pusha
je
adc
into
sbb
xchg
imul
adc
imul
insb
test
inc
xor
in
or
cli
movsb
addb
pop
mov
inc
push
insl
adc
insb
jmp
adc
shl
xchg
insl
les
sbb
stc
fucomp
add
repz
mov
inc
sub
sub
shlb
lods
push
push
jb
nop
push
add
test
xor
sbb
mov
test
fnsave
add
push
lock
pop
cmp
sbb
mov
data16
idivb
mov
ljmp
mov
stos
scas
sbb
or
push
pop
sub
pop
or
shl
leave
jp
sahf
dec
add
inc
add
xchg
or
add
jg
movsl
dec
adc
ror
xchg
or
je
pop
lea
jo
cli
loope
mov
das
fsubrp
repz
shll
dec
lods
sbb
add
inc
xor
sub
jbe
jmp
loop
adc
adc
scas
jns
movsl
loope
and
ret
inc
mov
mov
lahf
add
lods
cli
cmpb
xchg
mov
push
push
mov
sub
lods
bound
clc
push
pushl
fwait
jl
cld
cli
iret
lret
xchg
xchg
xor
ja
mov
in
mov
out
mov
data16
mov
lret
icebp
sub
cmp
adc
mov
test
pop
fs
xor
or
frstor
cmpsl
mov
cmpsb
cmp
sbb
nop
fs
jl
xchg
jne
dec
mov
mov
cmc
push
dec
pop
lods
pop
inc
jne
test
xor
mov
xor
stos
ret
push
inc
inc
mov
and
pop
mov
jmp
and
sbb
or
jg
pop
in
fidivrs
ss
mov
add
cwtl
jp
mov
push
dec
fldenv
pop
ret
in
pushf
lret
dec
jb
jle
cmc
fcmovne
xor
js
test
dec
sbb
mov
testl
push
mov
loope
aaa
ljmp
dec
adc
mov
cmp
mov
or
or
jmp
into
xor
roll
enter
cs
and
sti
movsl
jmp
pop
dec
jnp
sbb
dec
mov
push
fwait
adc
pop
cmp
sti
data16
addl
int
push
outsl
cld
cli
jmp
mov
arpl
ror
jno
xchg
jl
xor
insb
mov
mov
xchg
sbb
cmp
lea
xlat
in
pop
adc
dec
stc
mov
xchg
cmp
cmc
dec
sbb
cmp
jno
mov
inc
iret
mov
xchg
push
cmp
gs
rorb
leave
outsb
or
add
pop
dec
mov
cmp
mov
lcall
in
test
fsubrp
sbb
push
aas
rcrl
inc
jmp
fucomip
jne
scas
fdiv
xor
xlat
arpl
stos
inc
adc
rclb
lods
movsl
addl
lds
jo
pop
lock
mov
call
repz
lods
out
or
or
and
iret
or
addb
push
data16
or
inc
arpl
ret
sub
jns
lret
aas
adc
mov
xchg
push
enter
mov
fimuls
ss
cld
repnz
pop
jle
fwait
mov
xchg
jle
inc
jp
femms
push
arpl
and
in
xor
xchg
mov
adc
xchg
imul
pop
jge
aaa
std
sub
lods
xor
and
mov
adc
fwait
mov
out
test
js
fisttps
mov
xor
and
in
test
cwtl
ljmp
adc
mov
jae
aas
xchg
adc
rolb
pushf
outsl
mov
lea
dec
fisubs
cmpsl
cs
popa
cmp
cmp
sub
xchg
testb
std
push
aas
cmp
and
lea
sbb
xor
arpl
xchg
daa
dec
lods
and
loopne
or
mov
sub
push
jmp
or
lea
outsl
int
bound
movsb
mov
inc
xor
xchg
cmp
in
push
and
or
in
and
in
fbstp
das
or
aam
arpl
jle
xor
inc
test
pop
push
lods
lcall
mov
or
pop
dec
aad
inc
sbb
int
or
idiv
xor
jbe
dec
pushf
mov
push
xlat
dec
push
inc
js
das
mov
push
cltd
pop
or
fsubrl
into
fsts
incl
inc
aad
outsl
mov
ja
test
ror
popf
cmpsb
pop
clc
sti
cwtl
push
mov
imul
leave
mov
pop
push
xchg
push
cmp
fs
mov
data16
add
push
jae
insl
pop
mov
push
sbb
aad
pop
xor
imul
and
adc
pop
mov
mov
in
jne
adc
sub
and
mov
lret
jbe
inc
jae
jl
sub
cmp
repnz
in
mov
ljmp
and
fdivrl
data16
es
stos
pushf
adc
out
jp
mov
fsubl
mov
pop
xchg
fsub
dec
mov
cmp
xor
sbb
clc
cltd
mov
pop
aad
push
in
or
lea
add
mov
js
mov
cmp
mov
ja
dec
and
add
pop
push
mov
negl
sub
xchg
dec
cli
mov
adc
pop
mov
pop
pop
push
lods
inc
aad
repnz
les
out
dec
and
stos
mov
add
cmc
or
fstp
mov
lock
stc
sahf
nop
iret
out
lcall
mov
es
aad
dec
in
mov
and
ljmp
out
mov
xor
xchg
pop
rclb
iret
cwtl
jb
iret
push
sbb
ss
jnp
inc
lahf
xor
jmp
adc
or
dec
cmpsl
mov
mov
jnp
jmp
add
jbe
cmp
out
mov
stos
add
pop
invd
mov
lods
push
and
and
cwtl
jmp
or
ftst
mov
jmp
pushf
into
imul
cs
sbb
mov
push
nop
fbstp
or
sub
loope
imul
mov
fmull
inc
call
xchg
js
lcall
loop
cmp
xlat
mov
sbbb
jmp
loopne
dec
fdivr
scas
mov
adc
js
xor
movsl
mov
fisubrl
test
cltd
inc
pop
ret
xchg
cld
mov
ret
add
pop
add
lods
push
cwtl
scas
mov
test
jmp
add
incb
mov
mov
mull
push
jg
mov
mov
mov
mov
iret
mov
outsb
sbb
test
pusha
aaa
cs
mov
aaa
inc
and
fsubl
in
loopne
and
dec
fisubrl
xchg
pop
in
mov
adc
or
gs
pop
rolb
lds
dec
stos
and
jae
ss
dec
lcall
jb
enter
mov
jo
mov
inc
mov
xor
jmp
lock
addr16
xor
scas
push
mov
ljmp
in
jno
adc
push
adc
js
pusha
repnz
dec
push
push
sahf
std
cmp
jno
es
imul
subb
cld
sub
cmp
or
jecxz
mov
push
lock
add
or
jle
mov
mov
scas
inc
and
sub
mov
adc
repz
sub
push
dec
loop
dec
ljmp
shll
pop
jmp
cmp
scas
mov
adc
jno
pop
dec
pcmpeqd
aaa
aas
sti
ficompl
in
sub
xchg
lcall
std
popa
mov
fsub
fmul
xor
dec
loop
adc
movsb
shrb
divl
fwait
ret
jl
xchg
fmull
lret
cmp
jno
or
jo
mov
cmpsb
xorb
js
jo
sti
xchg
xchg
insl
insb
add
iret
ret
test
aad
or
jl
dec
dec
rcrb
test
subb
jl
pushf
pop
divb
lahf
aas
dec
xor
mov
dec
xchg
lea
scas
scas
outsl
fists
repz
jmp
push
rcl
loope
jecxz
fs
cmc
out
mov
mov
fldt
mov
gs
lret
pusha
cmp
ret
leave
rorl
insl
jmp
stos
xchg
sbb
cmp
mov
je
cmp
pop
repz
push
lahf
mov
pop
ret
cli
pushl
iret
sarb
jmp
int
pop
das
out
lret
xchg
popa
imul
jecxz
cmp
fistpl
pusha
sub
mov
sub
fucomp
push
add
mov
pop
leave
push
gs
mov
dec
fcmovne
mov
jbe
sbb
cmp
cwtl
xchg
sub
xlat
dec
xchg
cmp
scas
adc
sub
adc
xchg
add
aas
dec
fmuls
call
in
xchg
test
fnstcw
pop
int3
mov
popf
shl
fwait
cmp
pop
stos
shl
cmpsb
jno
jb
cmp
enter
jno
xchg
or
xor
iret
arpl
push
clc
mov
cmpsl
and
je
mov
test
stos
lods
aad
mov
cmp
lea
or
inc
sarl
jb
jno
divl
add
adc
fidivs
mov
and
ljmp
xor
andl
xor
pushf
lahf
add
stc
std
dec
fnsave
dec
mov
xchg
mov
xchg
xor
adc
fs
and
je
mov
add
out
jae
cmp
movsl
gs
popa
aad
out
xor
jge
fwait
pop
pusha
pop
and
scas
mov
jg
cmp
pop
jl
aas
mov
mov
or
pop
aas
outsl
cmc
in
popa
sbbb
iret
insl
mov
mov
std
popf
sub
stos
or
cmp
pop
test
xor
xorl
lods
dec
cli
add
pop
sar
dec
xchg
js
std
inc
inc
out
inc
lcall
jecxz
mov
int
js
clc
mov
mov
pop
nop
fwait
xchg
scas
push
inc
shlb
call
push
fmull
jle
jnp
cmp
jbe
mov
sub
imul
mov
stos
cmpsl
ljmp
fisubs
nop
jo
fcom
scas
adc
add
pop
inc
pop
or
mov
dec
or
xor
test
in
push
mov
inc
aad
sbb
jmp
jb
and
in
cmp
fucomi
nop
cmp
add
andb
mov
cmpsb
xchg
mov
popf
xor
out
inc
xchg
xchg
jae
adc
out
cmp
jmp
or
in
or
cmp
mov
add
mov
ret
mov
cltd
orl
xchg
add
shlb
sbb
jo
mov
jno
cli
mov
sub
int
aas
add
or
popf
sti
fdivr
mov
out
cmp
rcrb
data16
xor
jno
leave
int
push
aad
or
roll
mov
test
xor
or
fldcw
les
pop
dec
int
loope
lret
add
test
mov
inc
icebp
or
imul
xchg
lcall
or
outsl
sub
je
pop
dec
cmp
cmp
sbb
loopne
in
jge
loop
xchg
push
push
lds
cltd
jecxz
mov
mov
out
sbb
add
mov
fwait
cli
jle
jae
jno
inc
sub
pusha
addl
subl
imul
or
sbb
mov
sbb
lret
cmc
sub
cmp
mov
in
call
or
mov
adc
pop
pop
xor
inc
lds
lret
in
dec
add
stc
add
mov
in
test
scas
cwtl
pop
xchg
divb
pop
stos
mov
push
cmpsb
sbbl
inc
add
sbb
leave
push
lcall
lret
frstor
les
lahf
jbe
fsubrs
or
dec
jle
in
xchg
es
mov
mov
push
push
sbb
xchg
es
adc
popa
iret
xor
mov
mov
jns
push
inc
std
andb
adc
mov
test
jle
jbe
rcll
adc
inc
cmpsl
pop
push
adc
mov
test
push
dec
xchg
mov
mov
sbb
aaa
repz
mov
ret
and
aam
movsl
mov
xlat
jnp
push
mov
inc
add
jne
test
sub
imul
mov
repz
call
or
aas
cli
xchg
sub
aad
adc
bound
ss
cmp
test
fucomp
jb
xchg
rol
jns
add
andps
inc
int3
push
jp
inc
arpl
xor
out
xchg
pop
sahf
aas
xchg
mov
roll
jb
mov
xchg
cltd
sub
push
lcall
pop
dec
pop
jg
out
imull
loopne
lahf
pop
in
in
ljmp
out
push
pop
sub
push
frstor
xlat
cs
sarb
mov
xchg
fistpl
rcll
lahf
cmp
sub
test
rorb
cli
int
test
and
dec
mov
out
bound
idivl
dec
or
inc
out
add
mov
xor
adc
movl
iret
popf
dec
or
and
movsb
mov
shll
mov
or
pushf
pop
ret
mov
dec
call
lock
sbb
dec
ds
bound
jle
mov
sahf
repnz
mov
cmc
adc
clc
jle
cvtps2pd
mov
orl
fdivrl
mov
and
push
cmpsl
insl
jae
dec
sub
lcall
divb
leave
lods
dec
addl
or
imul
mov
in
xor
jae
addr16
loope
mov
sbb
into
out
rcrb
sub
dec
jl
orb
ja
sbb
test
xchg
add
nop
decl
pop
sbb
jnp
xchg
lds
ret
xchg
movsl
add
mov
mov
out
jb
cmp
mov
mov
jno
add
push
frstor
sbb
sub
aad
inc
jp
jno
pop
aam
cmp
pusha
scas
loop
cmpl
pop
push
subl
fcompl
mov
jnp
sub
pop
out
push
cmpsl
sti
mov
pop
push
sub
lret
js
int3
loope
push
in
mov
movsb
hlt
clc
repnz
sub
out
rorb
jge
insl
or
lret
adc
icebp
enter
enter
cmpsl
shll
pop
shrb
push
push
andl
push
sbb
cs
out
js
cmp
shr
and
pop
lcall
mov
lea
and
pop
dec
cld
daa
push
daa
mov
sub
dec
call
bound
lods
aam
inc
test
js
rcl
lret
inc
lahf
push
pushf
data16
shrb
jl
mov
ja
sarl
data16
mov
enter
nop
repz
hlt
inc
dec
adc
jecxz
std
out
cltd
arpl
sbb
mov
jns
jmp
mov
mov
stc
outsl
inc
dec
jle
pop
jl
es
dec
ljmp
scas
dec
outsb
lds
xchg
and
mov
movsl
push
not
jne
jnp
cmpb
xchg
outsl
jbe
or
cltd
add
outsl
mov
sbbb
xor
mov
xchg
cli
fistpl
add
mov
cmp
stos
inc
jmp
je
cmpsb
aad
repz
sti
cmp
adc
fwait
xchg
sbb
or
test
cli
jmp
jno
xorb
xor
div
dec
test
movsl
ss
xchg
cmpsb
mov
in
lock
iret
sub
cwtl
imul
sub
lahf
and
std
fimull
or
inc
cltd
movsl
pop
out
lcall
adc
inc
mov
push
push
mov
aas
xor
sahf
sbb
xor
jb
fisubrl
fldenv
daa
mov
pushf
insb
push
shlb
insb
push
inc
data16
iret
dec
inc
sarb
dec
and
xor
out
std
cmpsl
add
mov
add
jne
daa
dec
arpl
mov
lret
fsubrl
loope
movsb
mov
add
xor
mov
scas
cmp
dec
test
and
sbb
sbb
and
mov
gs
mov
in
out
mov
inc
and
and
int
insb
shrl
into
cld
jmp
jb
loopne
pop
ja
inc
inc
imul
dec
mov
jl
and
cld
scas
jbe
and
xchg
stos
cmp
mov
jo
cmp
popf
pushf
jecxz
inc
mov
mov
js
inc
mov
mov
into
sbb
xchg
int
roll
xchg
pusha
ficomps
push
das
dec
mov
fistps
shlb
dec
sbb
dec
addr16
jno
xlat
dec
lcall
xor
stc
adc
out
sub
mov
jo
iret
dec
into
sbb
stos
add
clc
inc
addl
fwait
loopne
ds
jo
out
sub
call
les
jmp
jle
aam
jge
xchg
mov
inc
lret
enter
sub
insl
mov
mov
daa
and
in
xor
icebp
sahf
jns
xor
mov
ja
lea
dec
mov
call
mov
lods
inc
outsb
fstpl
shrl
sbb
sbb
mov
in
clc
push
adc
cmp
ret
xchg
in
mov
in
jne
bound
loopne
add
dec
lahf
mov
popa
xor
mov
cli
sarl
jo
mov
scas
shrl
outsb
fsubl
xchg
fdiv
adc
or
jnp
ficompl
jne
and
repnz
mov
fwait
and
in
push
std
mov
dec
nop
out
std
fcmove
mov
cmpsl
dec
mov
shrb
push
cmp
xchg
iret
les
mov
adc
xchg
pushf
sbb
push
mov
inc
mov
fs
sub
or
push
ds
lea
lret
xchg
das
xlat
loop
dec
out
cmp
rcr
sarl
xlat
cmpsb
mov
arpl
daa
je
adc
adc
sbb
jle
mov
push
jmp
adc
mulb
fisttpll
inc
and
loop
ret
stc
lret
outsl
or
ljmp
aam
sub
inc
sub
mov
test
inc
je
adc
push
cmp
loop
cld
mov
adc
icebp
daa
jmp
gs
xor
andb
adc
inc
push
cmp
addr16
mov
jmp
fcmovnbe
cmp
fwait
push
enter
out
inc
mov
test
scas
stc
and
sub
xchg
jne
flds
ljmp
out
mov
sbb
dec
mov
sbb
jo
shrb
pop
jmp
mov
inc
scas
mov
dec
test
aaa
and
inc
rol
or
aas
fsubs
mov
push
pushf
hlt
mov
ljmp
cmpsb
fwait
outsl
cld
mov
fidivs
push
push
pushf
data16
cmp
leave
dec
loop
jge
xchg
and
clc
inc
cli
cwtl
fcoms
inc
pop
pop
inc
mov
sub
ror
xchg
cli
ss
adc
add
adc
leave
out
sbb
cld
jp
int3
out
shr
jmp
push
flds
add
lock
and
dec
xchg
call
or
int3
sarl
sub
lock
pop
push
lock
push
jg
mov
cli
inc
aaa
in
cs
jecxz
adc
dec
movsb
cmp
rcrl
je
push
mulb
mov
rcrl
or
sbb
ror
rcrl
xor
pop
mov
mov
fimuls
dec
mov
jae
pop
pop
test
nop
pushfw
popa
icebp
sub
lret
inc
push
ficompl
pushf
fwait
lret
jb
xor
in
sub
add
in
xor
pop
dec
xor
sbb
jbe
loopne
push
push
pop
push
mov
divb
pop
fcomp
xor
ss
scas
dec
pop
or
sbb
jmp
sub
adc
les
inc
leave
popf
cmp
cmp
jl
push
sbb
cmp
nop
or
movsb
inc
out
and
pop
daa
mov
loop
xor
leave
jg
ror
xorl
pop
shl
pop
cmpsb
negl
cmpsb
mov
shl
faddl
call
cmp
cmp
mov
jns
lahf
stos
xor
insl
adc
xchg
call
jl
add
data16
dec
fildll
ljmp
xchg
es
pop
pop
sbb
and
jge
adc
mov
push
jns
jbe
insl
xor
pop
je
imul
pop
aad
sbb
aaa
adc
and
jns
lahf
push
fdivrs
imul
icebp
leave
outsl
jbe
js
adc
adc
xchg
les
inc
push
lret
push
xor
adc
dec
sbb
and
test
loope
lret
mov
fists
cmp
pop
jmp
push
data16
and
jl
xchg
lds
xchg
dec
inc
imul
insb
or
shll
sahf
adc
imul
adc
incl
mov
fimull
sbb
pop
insl
add
loope
adc
mov
in
mov
add
mov
or
cld
add
pop
data16
adc
repnz
fisttps
xchg
pop
push
pop
mov
sbb
arpl
inc
cwtl
ret
add
daa
mov
jle
cmp
movb
repnz
adc
cmp
lcall
mov
mov
adc
inc
pop
adc
xor
pop
mov
or
pop
jmp
sub
sbb
inc
jecxz
and
mov
xchg
push
push
pop
sub
cltd
or
repz
xor
nop
enter
cld
dec
ljmp
and
dec
daa
xor
es
out
les
sub
int
mov
int3
shlb
cld
in
pop
push
jne
in
inc
ds
movsb
loope
jp
xorb
cmp
lar
sub
jecxz
aad
pop
xchg
popf
dec
sub
repnz
hlt
dec
cld
ficoml
or
dec
mull
xchg
adc
int
sti
and
and
test
xor
jecxz
stos
stos
rclb
xchg
sbb
cltd
adc
out
adc
icebp
push
inc
pusha
stc
mov
mov
add
cmp
push
insb
adcb
mov
add
jo
fnstsw
repnz
mov
pushf
mov
xchg
idivb
rcrl
xor
mov
push
fcompl
mov
push
test
in
jo
data16
adc
pop
cmp
lods
lods
pop
imul
pop
fmul
sbb
jb
in
dec
in
cmpsl
mov
cmpsb
cmp
je
or
mov
imul
popa
fxch
sbb
aaa
ret
push
pop
mov
sarb
push
mov
test
ja
sub
jg
mov
xchg
mov
cmp
cmp
lret
aaa
mov
or
push
xchg
lods
enter
cmp
xchg
add
popf
xchg
jo
test
pop
mov
mov
ret
sbb
sub
jle
pop
cld
lods
ja
mov
and
repnz
mov
jle
stos
daa
cltd
iret
jnp
and
dec
mov
bound
push
dec
stc
jmp
or
push
mov
in
xchg
repnz
add
rclb
mov
jo
dec
jo
sub
mov
pushf
xchg
sbb
addr16
bnd
lahf
pop
lock
fmulp
mov
mov
push
cmpsb
stc
mov
dec
mov
cmc
mov
jno
adcb
add
push
cmp
cmp
push
iret
andl
pop
and
mov
jno
or
cmp
jb
pushf
test
sbb
icebp
sbb
sub
rcrl
test
ss
push
andb
mov
inc
cmpsb
mov
push
and
dec
dec
mov
cld
aad
lea
in
popa
xor
pop
into
enter
push
fdivs
xchg
mov
mov
mov
arpl
xorl
cmc
sub
or
fadds
jne
inc
std
gs
xor
negb
out
movsb
insl
ljmp
test
sub
out
push
dec
lock
dec
test
rcl
jge
xor
adc
pushf
mov
repz
add
xor
jo
popa
testl
jecxz
sbb
sbb
mov
insb
mov
adc
pop
popa
out
fidivrl
jg
clc
aam
out
jecxz
outsb
bound
adc
movsl
pop
lds
cli
clc
and
jl
inc
push
roll
pushf
xor
aaa
pop
imul
enter
popf
jp
orb
fcmove
mov
sub
sbb
shrb
out
and
mov
dec
orl
mov
jb
movsb
cmpsb
add
push
leave
lock
mov
push
xor
cld
ret
cmp
cmp
inc
arpl
insl
lret
movsl
outsl
pusha
leave
xor
les
call
int
pop
mov
stc
stos
popf
push
cmpsl
pop
test
pop
push
xor
jp
test
dec
scas
out
xor
sub
dec
aas
repnz
movsb
clc
pop
fisttps
rcl
cmp
pop
cmp
mov
xchg
xchg
push
jg
dec
and
or
sbb
in
outsl
outsb
lods
mov
mov
push
addr16
ret
fptan
outsl
xlat
vpaddw
sub
sub
sbb
or
jo
out
jno
lea
xorb
lods
test
test
jbe
push
loopne
pusha
and
hlt
rcl
clc
mov
mov
lret
test
js
arpl
sbbb
stc
loopne
shr
lahf
add
push
scas
push
mov
jae
insl
frstor
inc
jge
mov
addb
out
popa
es
comiss
mov
ja
or
adc
add
mov
jg
mov
outsl
scas
sub
push
mov
enter
or
icebp
lods
jg
xchg
push
lret
out
aad
pushf
ja
and
subb
sbb
std
xlat
out
popf
add
ret
cmpsb
movsb
push
add
sbb
sub
sbb
call
mov
lret
adc
mov
mov
jnp
mov
loopne
test
arpl
mov
pop
mov
mov
lahf
mov
xor
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
mul
mov
lahf
mov
and
mov
xor
popa
push
pop
jge
cmp
into
fdivrp
repnz
jg
pusha
popa
sub
pop
fs
push
daa
jg
mov
je
test
inc
insl
push
mov
test
xor
into
mov
stos
cmpsb
mov
or
out
pop
xchg
lsl
mov
mov
inc
popf
push
jae
lret
dec
pop
and
push
sub
cmp
dec
mov
roll
pop
sub
push
ret
or
arpl
js
push
test
mov
pop
sarb
cmc
fidivrl
btc
pop
pop
add
pop
pop
push
lods
stos
loop
iret
bound
sub
inc
out
insl
aad
rcrb
ljmp
push
sahf
fdiv
sub
enter
push
ja
in
push
cmpsb
push
add
add
sub
jecxz
mov
lods
fwait
cld
aaa
dec
mov
in
cmpsl
jmp
sub
popf
stc
lods
adc
pop
divl
shll
mov
sub
ss
cmp
cmpb
inc
cmpsb
or
xchg
in
mov
fisttps
in
mov
pushf
ds
mov
add
daa
jae
in
movsb
add
orb
push
dec
loopne
leave
js
dec
loopne
xchg
add
add
add
add
inc
xchg
dec
sub
sub
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
leave
insl
add
add
pop
insl
