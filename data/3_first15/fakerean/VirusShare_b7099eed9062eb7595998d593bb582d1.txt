push
mov
sub
push
push
push
and
mov
shl
neg
push
neg
mov
xchg
mov
mov
not
mov
adc
rcl
xor
mov
mov
neg
ret
shl
xor
lea
lea
lea
xchg
xchg
mov
xor
mov
not
xor
mov
mov
rcr
shl
not
xor
ror
lea
mov
add
not
call
rol
lea
lea
ror
lea
adc
neg
mov
not
xchg
not
not
mov
mov
rcl
call
mov
lea
not
mov
rol
not
mov
mov
xor
rcr
xor
shr
and
xor
neg
push
mov
xchg
xor
and
xor
xor
rcr
xor
push
mov
xor
mov
xor
mov
call
push
xor
mov
neg
shl
lea
mov
xor
xor
shl
pop
rcr
mov
xchg
xor
not
lea
add
xor
xor
xchg
not
lea
rcr
xchg
xor
neg
mov
lea
mov
xor
xor
lea
mov
rcr
lea
shl
lea
xor
cmp
je
lea
mov
rcr
or
je
xchg
xor
xor
rcr
mov
mov
not
xor
xchg
rol
neg
adc
xor
xor
mov
xor
rcr
xor
not
not
rol
mov
rcl
mov
lea
add
xor
mov
add
xor
and
xor
neg
adc
not
lea
xchg
mov
mov
xor
neg
mov
mov
ror
xor
mov
ror
shr
mov
xor
lea
lea
and
not
mov
neg
xor
shl
xor
shr
rol
cmp
je
xor
xor
mov
add
rol
rol
neg
add
rcr
mov
mov
rcr
adc
xor
lea
shl
lea
xor
not
mov
push
call
and
not
rol
lea
xor
not
mov
not
adc
mov
mov
xor
mov
not
neg
not
lea
mov
xor
lea
xor
mov
shl
xor
lea
mov
mov
shr
not
movl
add
rcl
shl
neg
movl
xor
shl
mov
rol
mov
and
neg
xchg
not
xor
not
ror
xchg
shl
neg
mov
ror
mov
lea
xor
rol
adc
mov
not
lea
adc
push
rcr
xor
shr
mov
adc
push
mov
xor
lea
add
pushl
mov
mov
neg
add
neg
not
pushl
neg
mov
not
xor
xor
call
neg
xor
xor
xor
mov
not
lea
mov
xor
xor
lea
xchg
not
rcr
and
adc
mov
mov
mov
shrl
mov
lea
lea
lea
mov
lea
mov
lea
not
lea
mov
add
mov
mov
xor
add
mov
not
not
not
xor
xor
mov
mov
xor
lea
mov
add
lea
push
neg
shl
ror
mov
xchg
and
xor
xchg
mov
xor
and
xor
lea
neg
lea
xor
ror
rcr
lea
mov
neg
not
lea
xchg
neg
popl
xchg
neg
lea
add
lea
rcr
mov
not
not
xchg
mov
adc
mov
xchg
mov
shr
ror
ror
xor
decl
jne
xor
and
neg
xor
not
neg
rol
xor
adc
xor
lea
rol
and
mov
mov
lea
neg
lea
mov
not
not
xchg
mov
not
mov
xchg
shr
lea
xor
rcr
not
mov
mov
jmp
lea
xor
mov
xor
lea
xor
lea
neg
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
mov
sbb
pop
ret
ror
sub
pop
jo
jl
jbe
sub
jl
das
inc
imul
jb
enter
add
pop
aad
into
pop
sub
enter
test
jmp
popf
push
mov
insb
ret
mov
mov
loope
sbb
pop
jnp
cli
icebp
mov
in
out
sub
sti
and
sti
nop
mov
js
sahf
and
popf
xlat
lcall
sbb
enter
xlat
jns
inc
dec
cmpsb
fs
xlat
pop
sub
sub
enter
scas
push
jmp
lret
mov
inc
sub
xchg
mov
xchg
xchg
sub
sbb
dec
and
jb
cs
insb
paddusw
lods
xor
sub
jb
jne
sub
insb
xlat
imul
hlt
xlat
imul
cmpsb
imul
pop
sub
enter
arpl
xchg
out
mov
call
aaa
aaa
mov
pop
negb
mov
pushf
sbb
mov
mov
pop
in
inc
dec
rorb
pop
sub
aam
shlb
int3
js
pop
in
pop
call
xchg
mov
mov
inc
sbb
pop
pop
out
sti
xchg
ret
jge
pop
sub
outsl
jmp
xchg
pop
sub
mov
in
cmp
xchg
ficompl
repnz
sbb
pop
add
mov
pop
sub
loopne
cli
icebp
mov
inc
mov
mov
jo
sbb
popa
sub
pop
adc
cs
mov
pop
pop
xlat
out
stos
leave
or
mov
sbb
cs
ficomps
cmp
or
pop
and
loop
das
mov
call
nop
mov
aaa
js
sahf
and
popf
xlat
lcall
push
sbb
mov
inc
mov
aad
adc
pop
sub
enter
xor
sbb
pop
sub
inc
adc
jae
xor
sub
pop
jp
enter
push
push
ret
in
mov
cmpsb
stos
cmp
sbb
xlat
xchg
test
mov
mov
inc
out
test
fdivrs
sahf
mov
in
mov
imul
fldcw
enter
sarb
mov
loopne
icebp
outsl
mov
fists
or
xor
pop
sub
outsl
mov
xor
mov
fcompl
sbb
mov
or
push
scas
sbb
pop
sub
cmp
pop
sbb
pop
fdivrs
lret
and
sbb
dec
dec
nop
cmp
bound
mov
and
xor
out
add
fs
in
inc
xchg
sub
xlat
bound
clc
mov
and
jmp
or
sahf
or
push
adc
mov
add
ret
pushf
fdivs
mov
mov
in
lret
and
ljmp
leave
aad
sub
jno
inc
inc
jp
mov
out
xlat
mov
cli
scas
xlat
mov
enter
xchg
push
mov
insl
sahf
pop
pop
adc
in
ret
test
or
and
rcll
in
mov
cmp
lret
sbb
icebp
and
mov
inc
pop
sbb
sbb
pop
mov
jnp
mov
mov
in
mov
test
fdivl
mov
and
cwtl
cmp
stos
dec
sub
fists
sbb
cwtl
mov
negb
adc
das
lcall
xchg
insb
pop
adc
mov
aas
and
mov
pop
rcrb
enter
dec
clc
sub
enter
add
mov
cli
xchg
xlat
cwtl
fxch
pop
sub
mov
ja
lcall
sbb
and
std
xor
aam
xchg
pop
inc
movsb
test
enter
sahf
push
in
sbb
pop
sub
inc
push
stos
or
lret
sub
xchg
mov
dec
xchg
or
cmp
lea
enter
mov
mov
jge
insb
sub
enter
inc
sbb
xchg
addb
gs
mov
adc
insb
cmp
jo
lret
add
nop
nop
inc
mov
sub
sahf
das
sbb
dec
push
icebp
scas
mov
jno
lock
dec
sbb
push
pop
out
in
mov
sbb
or
lods
and
enter
jmp
push
jg
mov
cs
jle
cmp
inc
push
xchg
int3
jnp
repz
xchg
les
mov
push
dec
lret
xor
jb
nop
ret
pop
lret
popf
xchg
sbb
movl
sub
mov
lret
call
fidivrl
rclb
push
jg
js
divb
dec
mov
mov
fwait
lcall
dec
cwtl
sbb
lock
ja
push
faddl
push
pop
and
into
dec
dec
fsubrl
mov
ret
dec
and
xchg
push
fcomps
sub
pusha
inc
pop
sbb
adc
adc
popa
push
pop
cli
hlt
xchg
pusha
leave
xor
adc
mov
jno
dec
jb
jl
xchg
or
jge
mov
sbb
pop
sub
cs
js
lret
sbb
mov
jne
adc
outsb
imul
iret
or
mov
fdivl
xlat
push
inc
jbe
adc
xchg
dec
leave
mov
fcomps
or
insb
rcrb
rep
and
pop
fimull
test
pop
push
xlat
sub
les
sbb
sbb
fistl
shl
mov
inc
test
mov
adc
sub
and
and
pop
xchg
pop
cwtl
mov
xor
sbb
sbb
adc
repnz
repz
jnp
mov
in
xor
pop
add
inc
jecxz
inc
jb
xor
sbb
test
sbb
ljmp
jecxz
out
and
dec
pushf
push
add
iret
push
mov
fsubs
mov
clc
aam
stos
rclb
das
scas
and
cmpsb
mov
sub
aad
sub
pushf
adc
lret
sbb
lahf
mov
mov
push
pop
or
fidivrl
xchg
cmp
push
sbb
insb
pop
ss
sbb
jae
mov
adc
mov
xchg
xchg
js
sbb
lods
lret
testl
sbb
imul
or
jno
mov
daa
cmc
fldl
lret
mov
insb
cmp
sub
sub
and
mov
xchg
mov
xor
push
cmp
dec
jge
fstps
mov
cwtl
sub
ds
pop
fmuls
add
or
cmp
pop
int3
dec
xor
mov
out
sub
dec
jl
jge
mov
adc
aas
push
cli
cwtl
or
jp
sbb
out
mov
pop
cmp
inc
inc
outsl
xor
push
or
stos
aaa
inc
or
push
sbb
dec
dec
xor
cmc
adc
or
sbb
clc
dec
jl
lret
cltd
dec
stos
sti
push
jo
ljmp
sarb
jno
cmp
jo
push
ret
daa
pusha
test
insl
cmp
je
int
pusha
iret
or
lods
xor
jbe
int
enter
cwtl
pop
xor
jmp
loope
mov
cmp
pop
ror
bnd
stos
cmp
cmp
sahf
loop
loope
push
imul
jnp
mov
rclb
dec
adc
adc
cmpsl
dec
les
jo
cltd
adc
push
jp
sbb
aaa
mov
mov
dec
mov
sbb
shl
dec
sti
and
jp
add
jp
dec
push
cmp
or
icebp
adc
sub
xlat
jg
aad
adc
push
repnz
adc
scas
push
adc
push
and
sub
mov
mov
mov
add
ds
sub
lea
push
aam
rcll
enter
and
ret
mov
add
pop
mov
movsl
data16
and
or
insb
adc
push
outsl
icebp
mov
icebp
or
inc
lods
and
roll
jo
jp
jp
aaa
mov
or
cli
inc
sub
imul
int
dec
dec
jno
popa
or
fcoms
mov
fstps
test
jo
or
in
and
xor
jmp
inc
mov
mov
or
or
or
inc
sbb
cmp
insl
mov
popa
stos
and
cltd
rcr
pop
sbb
add
xor
movsb
aam
pop
mov
pushf
sbb
jmp
gs
fmuls
push
mov
inc
pop
mov
jge
pop
mov
orl
sbb
cmp
xor
aaa
xor
lret
adc
lods
xor
in
std
xor
jp
dec
sarb
pop
movsl
jnp
pop
adc
pop
in
jno
fistpll
sarl
lea
push
and
leave
adc
stc
inc
fwait
pop
in
into
jno
stos
andb
dec
sub
rclb
test
sahf
ss
cld
cltd
lock
mov
lds
dec
xchg
mov
xor
rcll
cmpsl
jle
xchg
xlat
popf
popa
aam
ljmp
xor
std
mov
insl
dec
test
aam
and
and
or
mov
push
lods
movsl
movsl
insl
and
mov
mov
lods
lret
in
out
test
fcmovnbe
and
repz
mull
add
ret
loope
aam
lods
cmpsl
mov
dec
and
mov
or
aaa
dec
insb
cwtl
outsb
add
jmp
fisubs
jo
bound
xchg
mov
inc
cmpsl
jp
add
idivl
imul
dec
iret
xor
or
xchg
dec
mov
mov
imul
add
or
sub
sub
roll
and
je
and
push
scas
fidivrl
dec
andb
icebp
sbb
ds
adc
sarl
sbb
cmp
push
rcll
dec
cld
bound
hlt
inc
add
push
pop
inc
sbb
push
pop
push
xor
mov
sub
int3
jbe
pop
mov
mov
sub
call
push
rcrb
int3
sub
in
adc
fldt
insl
in
xchg
popf
xchg
adc
rolb
pop
test
ja
lret
sahf
push
icebp
addr16
sub
adc
rcrl
jb
cwtl
cmp
insl
sarl
xchg
divb
pop
push
leave
test
sbb
sbb
lds
mov
jg
add
mov
xor
fsubs
cld
test
sti
cmc
mov
ja
jp
out
cmp
rorb
xor
rolb
dec
outsb
stc
pop
adc
rol
je
add
pop
pop
pop
inc
pop
xchg
lods
or
jb,pn
js
mov
arpl
xor
ds
stos
jo
xchg
not
and
xor
mov
xchg
fincstp
fnstcw
cmp
in
cmp
cmp
sbbb
or
aam
sahf
or
or
jmp
sub
add
inc
xor
and
popf
xchg
js
xchg
mov
inc
aam
dec
data16
cmp
dec
pushf
sub
arpl
inc
push
repnz
add
lret
dec
dec
inc
sbb
das
or
ret
dec
js
cmpsl
push
adc
rolb
inc
xor
mov
sbb
jl
loop
cmovno
ljmp
icebp
mov
test
cmp
xor
in
jg
movsl
xchg
repz
inc
and
cli
lcall
cmp
fsubrs
jecxz
or
jo
dec
loopne
sti
dec
push
call
push
pop
cmp
jnp
jp
cmp
or
shr
jo
repnz
test
lret
sti
pop
inc
sbb
push
scas
hlt
pusha
hlt
add
mov
sti
or
rcrb
outsl
filds
in
cltd
clc
aam
fidivl
inc
mov
pop
mov
jl
sbb
stc
xchg
lock
add
jno
aam
mov
adc
pop
mov
fldcw
ja
mov
and
push
lds
mov
mov
adc
lcall
mov
fmuls
push
xchg
and
sub
mov
sbb
add
push
inc
jl
popa
sar
jne
popa
mov
mov
mov
out
popl
mov
xchg
pop
xchg
mov
mov
sarb
jecxz
out
je
mov
out
inc
or
pop
push
mov
and
inc
jnp
xor
mov
fmul
pop
pushf
insb
int
mov
xacquire
addr16
out
sub
mov
in
mov
outsl
out
mov
xor
idivl
push
push
or
pop
out
inc
xor
mov
andb
mov
xchg
xor
jnp
jno
rcl
pop
test
and
ljmp
ja
fcmovb
push
flds
adc
out
std
sbb
push
push
adc
xor
bound
lahf
outsl
pushf
mov
sub
push
shrl
pop
ret
fiadds
test
xchg
mov
add
pop
add
mov
mov
stos
loope
lods
movsl
mov
in
popa
dec
jge
or
pop
div
pop
pop
sub
cltd
pop
fdivrl
pop
mov
lds
mov
shr
mov
pop
mov
mov
adc
shr
movsb
or
push
dec
shlb
adc
out
jmp
pop
lret
sub
mov
and
mov
mov
das
xchg
jp
scas
scas
sbb
pop
or
mov
daa
iret
cmp
stc
sbb
fldcw
dec
mov
sub
xchg
cwtl
inc
outsl
loop
into
and
in
fbld
sbb
mov
ds
and
insb
outsb
cs
repnz
pop
in
xlat
sub
pop
mov
mov
sahf
push
andl
scas
mov
mov
adc
nop
xor
sahf
xchg
or
sbb
cmp
sub
push
ret
movsb
shll
adc
mov
pushf
push
push
xor
into
fnsave
and
popf
aam
or
adc
sub
out
aaa
sbb
fwait
mov
sub
mov
loop
jb
aam
and
out
mov
scas
jp
xchg
shll
ja
out
xchg
mov
scas
adc
jl
insb
pop
push
mov
xor
adc
in
sub
dec
leave
pop
dec
push
lret
and
sbb
repnz
or
adc
inc
adc
out
xchg
outsl
icebp
stc
dec
sub
mov
jl
insb
xor
push
adc
dec
pop
jbe
jne
mov
add
in
mov
lock
js
movsb
mov
push
and
xchg
aad
xchg
adc
add
or
popf
push
sbb
push
inc
lock
lds
outsb
jo
icebp
rcrl
mov
cs
mov
ljmp
mov
movb
bound
test
rcll
dec
sahf
cmpb
xchg
or
sbb
cmp
cwtl
stos
mov
xlat
ret
testl
sbb
dec
cmp
fsubrs
push
and
pop
sub
lds
cmp
sbb
dec
test
pop
and
pop
sub
pushf
ds
jne
or
js
lcall
popl
push
cmp
lods
inc
in
loopne
int
push
cld
clc
inc
add
int3
mov
xor
and
scas
push
and
enter
js
out
pop
xlat
loope
movsb
adc
xor
and
xor
aas
or
mov
popf
scas
shlb
int3
call
imul
cwtl
push
inc
or
arpl
push
out
inc
fabs
stos
push
ss
xchg
dec
xchg
subl
pushf
daa
test
mov
lcall
mov
cwtl
dec
push
sarb
or
cmc
jg
jge
pusha
rcrl
inc
jo
mov
clc
lea
call
jb
jl
add
push
lcall
adc
mov
sbb
out
movsl
mov
xor
push
jecxz
inc
and
push
mov
popl
repnz
addr16
sub
adc
hlt
mov
lret
xor
dec
fs
push
test
mov
inc
jne
and
outsb
sbb
sarb
aam
dec
arpl
adc
pusha
js
xchg
clc
sub
mov
mov
sbb
iret
adc
sbb
dec
or
push
paddd
rcrb
xlat
and
int
imul
leave
je
insl
addb
out
addr16
xchg
paddusb
xor
ljmp
cmpsb
jle
inc
push
jl
jecxz
aaa
or
dec
push
dec
adc
mov
add
addr16
fadds
lret
push
or
sub
iret
rclb
aaa
lods
adc
mov
mov
pop
push
push
or
int
sti
mov
pop
pop
pusha
rorl
sahf
push
cmp
aad
aaa
add
fmuls
es
cmp
repnz
mov
loopne
sbb
adc
adc
inc
sbb
out
ret
fisubrl
adc
repnz
sbb
leave
xchg
adc
jo
fwait
and
adc
lret
rcl
aas
and
sub
mov
cmp
mov
call
jp
stos
and
mov
push
inc
dec
fistpl
daa
lcall
fbstp
lret
mov
adc
leave
addl
outsl
adcb
pushf
add
cs
shr
call
sub
cltd
ret
jcxz
fisubrs
xchg
shll
fldl
int3
sbb
adc
xchg
es
addr16
inc
stos
lahf
and
mov
adc
scas
lahf
push
into
and
test
push
es
out
push
xor
or
sub
lcall
push
ficoms
inc
inc
stc
pop
out
sbb
call
aas
pop
dec
in
pop
loope
nop
sub
lock
aam
dec
pop
mov
pop
and
lcall
cmp
pop
pop
jg
ret
in
add
and
sub
aad
popf
and
in
jl
inc
pop
and
or
jle
repz
addr16
dec
std
and
sub
cltd
pop
in
push
cmp
loopne
sub
push
scas
adc
push
pushf
dec
mov
add
add
cld
mov
lret
aad
adc
test
out
xlat
add
and
insb
mov
shlb
push
xor
loope
mov
mov
lret
pop
fisttps
nop
fadds
shlb
movsl
and
push
dec
adc
push
mov
int3
pusha
repnz
mov
imul
addb
push
dec
adc
in
push
pop
jb
dec
ficompl
adc
jge
in
enter
pop
aam
les
cmpsl
inc
das
ret
cmc
dec
pop
lret
fsubrl
lea
rolb
push
dec
mov
leave
mov
or
inc
inc
mov
pusha
jge
test
insb
ret
minps
jmp
push
add
fimuls
mov
rcrl
add
jge
nop
lahf
sbb
imul
jae
xchg
pop
jno
cmpsl
insl
xchg
and
ret
ja
add
popf
mov
aad
icebp
pusha
cmp
jnp
push
je
and
jge
sub
dec
sbb
cmp
incb
dec
scas
ret
daa
sahf
jmp
pop
imul
in
mov
lods
sub
fsts
jg
mov
push
or
pushf
dec
and
cmp
das
dec
and
mov
test
xchg
fdivl
fsubrp
dec
jb
push
lcall
iret
push
mov
add
cwtl
cltd
call
dec
fadds
ficoml
fistpll
jl
movsl
insl
ret
mov
insb
push
addr16
imul
xchg
adc
sbb
test
loop
pop
call
xor
mov
sbb
rcll
lahf
dec
jb
pusha
adc
and
fisubrl
leave
push
add
mov
and
mov
fimull
hlt
clc
mov
aam
push
mov
sahf
jae
jecxz
inc
push
fs
cmpl
sub
push
pop
jl
xchg
pop
jge
or
shl
adc
pop
ja
xchg
pop
test
mov
rolb
lea
lahf
mov
jo
in
inc
or
inc
and
iret
shll
loopne
dec
lret
fnstsw
aad
sbb
jp
cmp
xor
popf
rcl
jbe
sub
pop
push
xchg
fs
mov
dec
xor
pop
fwait
mov
add
xor
jae
cwtl
sti
mov
sbb
imul
adc
adc
pop
leave
dec
add
popf
rcrl
in
dec
and
or
pop
xchg
and
fadds
stos
inc
jge
sub
adc
sub
hlt
mov
add
das
lret
and
test
je
jl
jge
push
push
dec
ficompl
jbe
cltd
lods
xchg
push
or
aad
aas
lcall
gs
mov
enter
mov
inc
sub
insb
sbb
movsb
cltd
or
dec
mov
pop
inc
test
dec
sbb
repnz
or
out
fadd
arpl
rol
jecxz
xchg
dec
sbb
and
jmp
dec
cmc
cmp
dec
xor
sub
in
or
pushf
loope
dec
adc
scas
movsb
push
add
cwtl
pop
xchg
cli
dec
sbb
ret
mov
fucomp
mov
dec
or
inc
inc
negb
push
xor
cmp
sti
jo
ds
xor
sbb
daa
dec
inc
or
addr16
aam
pop
aam
jae
sarb
add
iret
add
cmp
mov
out
push
sbb
mov
mov
mov
faddl
in
pop
sbb
ljmp
sbb
out
and
pop
or
sbb
pushf
dec
rcll
xchg
sub
add
cmp
and
jl
push
and
push
mov
cmc
add
and
sbb
sbb
xchg
adc
mov
mov
repz
pop
dec
dec
imul
or
out
inc
test
sbb
repnz
incb
pusha
lods
or
orl
and
mov
shrb
pop
mov
fimull
inc
dec
outsl
cmp
sub
les
jge
aaa
add
add
imul
ret
jae
dec
lret
test
mov
into
iret
inc
repz
jnp
add
movsl
dec
gs
lret
cmp
and
jecxz
jmp
mov
pop
mov
pop
mov
outsb
ucomiss
imul
fcmovnbe
cmpsb
rcl
lahf
ds
int3
add
mov
dec
add
adc
xor
mov
cwtl
xchg
pushf
push
jl
inc
out
cmp
jne
push
cmp
mov
mov
repz
mov
ljmp
adc
or
and
pop
dec
push
push
je
into
loope
stc
cs
xor
pop
fidivrs
cmp
mov
shld
mov
cwtl
les
cmp
fists
cmp
pop
cmp
ljmp
or
xchg
pop
int
andl
out
xchg
and
pop
push
sbb
fsub
js
or
stos
aaa
mov
les
mov
and
or
shr
jmp
fisubrs
add
dec
movsb
xlat
mov
jae
jge
scas
sub
cmp
ret
arpl
or
and
mov
add
cmp
aaa
mov
inc
push
push
cltd
jle
dec
xchg
jns
and
adc
cs
pop
stos
stc
add
adc
pop
in
adc
push
xchg
push
jo
fnstenv
mov
iret
es
addr16
pop
mov
dec
in
cltd
mov
pop
mov
dec
and
pop
mov
inc
mov
and
mov
icebp
mov
test
sub
out
sbb
jo
pop
mov
add
lahf
gs
pop
adc
cmpsb
push
es
loopne
popf
mov
push
mov
scas
jo
inc
push
jle
loope
push
xor
jno
fisttps
jb
mov
push
or
mov
mov
ret
aam
scas
or
dec
aad
out
daa
jge
lret
or
fsubrl
insl
or
aam
cmp
inc
push
xchg
test
pusha
xor
add
cltd
jne
mov
sbb
jno
jp
and
mov
cwtl
arpl
loop
cmpsl
or
push
loop
dec
mov
cmpsl
xchg
cmp
outsl
into
mul
bound
psllw
add
push
divb
test
or
mov
in
sub
jl
lret
loopne
lret
insl
or
adc
mov
sbb
sar
xchg
ljmp
push
flds
cmp
add
pop
mov
jmp
fldt
icebp
or
and
scas
mov
icebp
test
sub
cmp
jns
jb
enter
shl
adcb
mov
xchg
js
inc
loopne
jge
enter
push
or
sbb
sub
sahf
outsl
fisttpll
test
mov
pop
cmp
out
xchg
jnp
fstps
mov
and
push
lcall
push
cmp
pop
xor
pop
push
pop
in
popf
xor
xchg
sbb
and
push
xchg
add
pop
pop
mov
fmuls
repz
jns
adc
mov
shlb
jp
mov
clc
mov
dec
jp
xchg
mov
add
mov
mov
cmpsl
lods
orl
out
jg
sbb
aaa
je
push
orl
push
cltd
jg
adc
push
stos
xchg
sbb
gs
js
pusha
jb
popa
ja
es
in
push
jnp
mov
arpl
icebp
pop
pop
cmp
pushf
cmpsl
xor
xchg
add
cwtl
icebp
fldl
or
outsl
aam
mov
add
test
inc
mov
fprem
adc
fwait
cmc
or
adc
mov
mov
movsb
adc
fidivrl
xor
ljmp
mov
pushf
or
xor
cmc
adc
and
cmp
adc
add
or
add
addr16
and
jb
mov
sub
and
cmpsb
mov
jae
mov
sub
push
mov
mov
xor
push
and
jb
pushf
faddl
int3
sub
das
jno
pop
push
shl
mov
mov
adc
fwait
inc
jno
sti
cmp
sti
mov
shr
pop
das
pop
aas
inc
adc
arpl
std
cmp
push
mov
or
jle
icebp
lret
sti
mov
xor
imul
inc
or
jmp
dec
cmp
xor
std
ss
and
and
mov
lcall
and
negl
imul
or
fadds
push
sbb
jmp
dec
jp
sub
dec
std
sbb
fs
pop
pop
xchg
pop
fldcw
jnp
push
jo
sahf
mov
adc
mov
mov
push
mov
das
insl
sub
xor
adc
fcomp
pop
movsl
into
fnstcw
sbb
xchg
std
inc
mov
mov
leave
inc
std
xor
rcrl
sbb
push
leave
nop
ffreep
dec
les
adc
xchg
dec
hlt
cwtl
xchg
xlat
aad
std
pop
out
stc
adc
pushf
jmp
mov
mov
pop
sbb
mov
xor
mov
or
adc
gs
mov
movsl
and
jecxz
ficomps
ljmp
dec
push
lahf
fwait
test
das
sahf
pop
icebp
les
addl
insb
js
mov
cli
cmp
push
and
sbb
jnp
mov
cmp
or
aad
adc
sbb
aam
sub
xor
and
mov
les
mov
jbe
jne
shlb
add
mov
jp
insl
mov
cli
adc
lock
jle
jno
fcmovne
cmpl
insb
rclb
stc
mov
stos
sbb
push
shrb
jno,pt
lods
nop
pop
bound
loope
in
mov
pop
or
cltd
leave
xchg
jae
dec
mov
xor
faddl
call
les
rclb
ljmp
adc
jecxz
cmpsb
fmull
leave
fdivs
adc
movsl
or
mov
and
adc
push
out
mov
mov
sbb
sbb
add
roll
sbb
jmp
and
out
inc
and
rcll
cmpsb
bound
sti
in
popf
ja
cwtl
shrl
or
or
rorb
push
subb
xor
or
mov
push
sbb
or
mov
test
dec
mov
lock
mov
cmp
push
scas
andnps
dec
sub
clc
loop
lcall
mov
sub
xchg
cmpsb
mov
imul
lahf
shll
xchg
inc
cmpsl
push
jnp
xchg
mov
push
testl
into
cltd
aam
mov
in
xor
cmp
jecxz
push
sub
xchg
sub
rorl
pushf
iret
adc
outsl
sbb
jb
sub
call
into
mov
orl
xchg
leave
stos
out
jmp
stos
push
insl
sbb
push
cld
sbb
sbb
jbe
and
cltd
hlt
loope,pn
aam
mov
xor
cmc
pop
out
push
adc
fs
sub
cmp
and
or
xor
ret
ret
dec
montmul
fdivl
adc
or
test
rorl
nop
sbb
fstpl
or
sub
rolb
cld
dec
mov
mov
xor
mov
lock
add
dec
rorb
sbb
mov
aaa
icebp
jns
imul
jne
xor
popf
xchg
mov
inc
inc
cmp
pop
xor
adc
cld
jb
mov
and
mov
fwait
jno
sbb
xchg
mov
xor
mov
pop
and
or
jno
shll
nop
das
imul
push
shl
ss
insl
inc
and
mov
lahf
int
lock
cwtl
sub
out
lret
cmp
add
jecxz
popa
dec
jnp
cmp
movsb
mov
add
xchg
gs
addb
dec
sub
pop
sub
lret
push
sub
and
or
sbb
xor
xor
xor
testb
jl
sarl
adc
leave
dec
mov
pushf
xor
sahf
aam
je
jle
adc
mov
dec
in
int3
ret
or
shrl
or
aam
mov
xor
sbb
dec
iret
push
cmpsl
pop
or
movsb
push
clc
daa
adc
les
or
jnp
pop
faddp
hlt
inc
jp
pop
cmp
rorl
xor
lods
ret
inc
test
xchg
mov
dec
cmpsb
mov
cmp
sbb
xchg
pop
sbb
cmpsb
jle
add
cltd
daa
adc
leave
js
pop
sbb
lahf
dec
loopne
cmp
or
movsb
mov
mov
iret
push
scas
wbinvd
and
sub
jl
int3
outsb
sub
mov
mov
add
lahf
mov
shll
cltd
stos
dec
jno
mov
mov
sbb
ja
aam
andb
mov
inc
jg
inc
mov
mov
sbb
outsb
cli
dec
or
sub
mov
xor
mov
gs
push
inc
add
rclb
pushf
jg
ror
mov
sub
mov
inc
stos
mov
adc
mov
fwait
mov
sbb
lds
in
pop
cmp
adc
mov
in
adc
xor
xchg
sub
movsl
pusha
xor
mov
sbb
aas
ficomps
pop
out
cmp
or
dec
mov
and
fcomps
or
orb
pop
jbe
mov
pop
fbstp
ret
cwtl
xor
or
push
roll
sub
mov
fcoml
inc
shrb
push
int
sbb
in
mov
mov
popf
mov
pushf
and
repnz
inc
mov
loope
cmp
outsb
pop
or
out
leave
arpl
and
lods
cmp
add
pushf
push
add
inc
je
fwait
mov
push
mov
loope
cmp
inc
or
jg
inc
ret
xchg
xor
xor
fnsave
or
push
xor
fadd
pop
leave
nop
pop
or
mov
ficoms
test
sbb
std
jbe
pop
inc
loop
push
enter
mov
mov
sub
push
jge
rcll
out
jo
lcall
adc
add
popa
ljmp
gs
sbb
cs
lds
fmull
xor
testb
jno
push
sbb
inc
nop
mov
outsl
mov
fcompl
mov
rcr
ret
push
xchg
fldcw
or
lret
and
cld
jmp
fsubrs
ds
mov
or
rcrb
sub
or
push
inc
int3
rcrl
jecxz
xchg
pop
pop
popf
xor
or
ficomps
push
fdivl
add
cs
arpl
sub
and
push
and
jge
push
adc
cmp
jmp
pop
ss
inc
mov
or
mov
mov
sar
jbe
adc
je
leave
fisttpl
or
clc
push
inc
add
jp
adc
pop
mov
popa
and
jge
inc
pop
dec
ret
pushf
push
xchg
mov
jmp
ds
scas
mov
cwtl
aad
int
sahf
push
pop
lods
xlat
cmp
orb
mov
cmp
scas
push
pop
push
jae
mov
and
cmp
adc
push
scas
xor
rcrl
cs
and
loop
lea
lods
insb
in
xchg
push
xor
fst
cmp
xor
mov
pop
das
cmp
imul
sbb
push
inc
out
or
push
fisubl
insb
sbb
jb
jmp
ror
repnz
mov
cmc
or
and
xor
xor
sub
add
lock
repz
aas
or
mov
movsl
inc
in
andl
or
loop
xor
adc
rolb
fwait
jno
mov
cltd
cwtl
js
adc
sbbb
dec
dec
or
daa
call
add
dec
dec
mov
das
mov
add
lret
cld
out
icebp
xchg
jnp
mov
xlat
insl
lret
sbb
daa
dec
cmp
outsb
insl
test
popf
mov
in
mov
xchg
sbb
cmp
lea
int3
add
dec
sbb
sbb
rcrb
xor
adc
xchg
cmp
cld
add
pop
push
dec
jge
jae
mov
and
mov
pop
pop
xchg
push
and
mov
sbb
dec
lcall
sub
pop
pop
jne
lcall
ret
or
fistpl
jno
pushf
mov
inc
sub
cmp
adc
mov
stc
cmc
add
in
mov
sbb
mov
push
int3
sbb
insl
inc
jle
xchg
mov
scas
insl
decb
jbe
sub
mov
out
push
jmp
xchg
sub
repz
rolb
inc
lods
or
test
pop
movsl
call
in
inc
mov
gs
jp
mov
int3
movsl
push
aaa
fiadds
jno
pop
and
fsub
sub
or
push
xor
dec
dec
outsb
dec
stos
jmp
or
push
mov
psrld
mov
test
fnstcw
mov
pop
xor
into
add
into
aas
jmp
pop
or
jmp
idivb
fcmovnu
add
add
dec
and
xor
jle
or
fisttpl
add
xor
push
mov
cmp
dec
sub
int3
lock
icebp
lds
sub
xor
and
push
or
jge
jle
or
stos
popf
shrb
mov
mov
sti
xchg
push
ret
push
ds
mov
outsl
test
shll
ljmp
pop
inc
mov
fnstcw
push
jbe
sbb
or
sbb
dec
push
stos
pushf
inc
push
push
push
clc
test
and
sub
mov
mov
sti
push
inc
jb
test
pop
pop
or
jge
add
mov
dec
sub
enter
dec
dec
xchg
test
iret
loope
clc
mov
insl
in
add
ret
xor
cmp
pop
std
jb
mov
test
cmp
jnp
pop
or
cmc
movsb
and
cmp
orl
mov
or
imul
mov
cmp
cwtl
jg
xor
push
setb
lods
mov
lods
jnp
jns
xchg
xor
int3
jg
xor
lods
mov
shl
insb
div
mov
jne
dec
sti
inc
inc
sbb
lcall
mov
stc
shrb
jmp
mov
sbb
inc
or
int3
push
int3
cvttps2pi
add
jo
cmp
int3
shrb
out
les
jae
fidivrs
test
mov
das
inc
mov
xchg
sbb
cmpsb
push
in
xchg
mov
mov
iret
pop
cmp
shl
call
pmullw
ja
or
rcrl
push
out
mov
mov
fdivs
aam
jnp
insl
sub
cmpsb
adc
dec
das
push
adc
mov
cmp
and
insb
sahf
je
xor
sbb
rcr
std
aaa
pusha
push
aaa
dec
call
repnz
decb
sub
cltd
mov
fnstcw
in
inc
jbe
mov
fmul
das
ja
lock
cmp
fadds
xchg
lea
ds
adc
or
in
add
neg
xchg
adc
mov
mov
and
or
mov
sbb
fwait
inc
mov
push
dec
int
je
dec
push
push
pop
iret
andl
pushl
mov
rorb
inc
jns
mov
ljmp
repnz
pop
inc
in
and
inc
push
push
pop
cmpb
loope
roll
sbb
inc
mov
push
mov
scas
or
adc
imul
dec
mov
pop
pop
cmp
push
adc
xor
js
mov
push
ret
mov
jb
cmc
cld
add
js
and
dec
xchg
icebp
sti
jl
es
xchg
lret
inc
pop
push
push
lods
imul
mov
cmp
adc
push
jl
movsb
pop
lock
push
dec
xor
movsb
push
push
fstpl
test
and
mov
adc
dec
cwtl
inc
adc
sbb
fisubrs
fs
icebp
and
scas
stos
leave
add
int
mov
xchg
xlat
mov
fwait
lret
xchg
mov
push
and
pop
pop
mov
or
xchg
push
dec
xor
pop
stos
jae
xor
in
lret
or
icebp
jne
xchg
mov
int
mov
mov
cmp
pop
dec
pusha
ret
jl
xchg
jle
xchg
test
icebp
mov
xor
xchg
insb
mov
push
cld
mov
jo
cvttps2pi
jl
sbb
shlb
jge
popa
popa
dec
push
adc
ja
in
icebp
mov
hlt
ret
adc
sbb
lret
flds
pop
dec
cmp
push
cmc
xor
js
es
sbb
outsb
sub
sbb
mov
out
loopne
rcll
std
scas
mov
pop
dec
jae
out
jmp
push
mov
lods
das
jmp
int3
xor
xchg
add
jmp
repnz
xchg
cmpsb
or
jb
cmp
popf
data16
push
sbb
push
lods
push
push
add
cmp
mov
mov
icebp
repnz
jmp
push
sti
pushf
mov
movsb
popa
jb
scas
pop
pop
add
dec
mov
fstl
inc
mov
leave
in
push
js
lret
and
pop
pop
fimuls
inc
int3
pop
mov
pmulhw
or
dec
xchg
aam
addb
pop
mov
ret
std
repz
insb
aad
xlat
add
jb
mov
dec
mov
or
sub
test
shll
mov
test
cld
add
and
inc
push
sbb
dec
sbb
inc
push
mov
xor
cli
aam
and
lret
icebp
or
les
fs
pop
aas
add
sbb
add
and
push
into
xchg
imul
inc
fsubl
cmpsl
pushf
mov
push
xor
in
idiv
dec
fldt
iret
pop
ret
pop
call
xchg
shll
clc
add
gs
mov
dec
jg
inc
push
ss
scas
cmp
ss
loopne
nop
rorb
mov
jmp
loop
mov
xchg
cmp
loope
dec
lret
mov
leave
push
outsl
enter
fists
jl
icebp
ljmp
jmp
and
popf
out
andb
loop
sub
cwtl
cmpsb
xor
push
push
pop
mov
jg
imul
stos
fisttps
rcll
mov
sbbl
sub
je
jecxz
jbe
adc
cmpsl
sub
sub
pop
leave
cwtl
repnz
mov
push
add
inc
add
or
cmp
jl
sbb
xor
pop
inc
sub
adc
adc
push
push
cs
bound
sub
cmp
lea
inc
cltd
stos
ljmp
mov
add
call
shlb
sub
add
mov
and
jp
daa
icebp
inc
push
jno
xor
dec
sub
ljmp
lahf
fdivs
iret
pop
cmp
stc
inc
cmp
push
xchg
pusha
enter
stos
inc
mov
js
or
fisubs
or
push
mov
test
cmp
jle
push
and
rcrl
xchg
test
rolb
pop
xor
mov
lds
out
xchg
push
repnz
pushf
mov
xor
icebp
xchg
in
popa
inc
pop
rcrb
jno
sahf
xlat
mov
and
pop
inc
loop
sbb
mov
fwait
adcl
enter
sbb
jmp
lods
stos
xor
imul
sub
lods
ljmp
dec
cmpsl
push
lret
sahf
imul
pop
dec
nop
inc
sbb
add
aaa
sbb
test
fldln2
pop
or
dec
mov
push
dec
sahf
sbb
xor
sbb
cmp
xorb
sub
ja
inc
loop
outsl
pop
mov
xchg
pinsrw
ja
adc
mov
mov
jnp
jno
mov
pop
adc
in
jne
cmp
je
cmc
inc
xor
cmp
rcrl
cmp
aam
out
imul
jns
dec
sbb
fistps
mov
daa
or
ret
or
add
fdivl
mov
fsts
out
sub
pop
stos
aad
outsl
cmc
inc
jmp
push
or
or
and
cmc
insb
xchg
push
push
sub
push
adc
sti
add
dec
add
mov
cmp
cs
fmuls
adc
jmp
das
mov
mov
icebp
mov
inc
jns
jl
xchg
sub
subl
pusha
int3
push
hlt
adc
mov
adcl
or
loopne
mov
faddp
fadds
call
je
sbb
jmp
loope
xlat
ds
xchg
fists
cld
insb
dec
sahf
or
mov
push
mov
lret
repnz
push
es
loopne
adc
cmc
adcl
add
sbb
lds
push
mov
add
jnp
mov
sub
popf
jle
loopne
insb
dec
jno,pt
adc
mov
addr16
loop
pop
sbb
mov
jle
xchg
dec
adc
mov
aas
test
lcall
cs
lock
xchg
lods
leave
or
adc
outsb
lods
xchg
sbb
cmp
aas
mov
shl
and
pop
sbb
cmpsl
stos
pop
dec
xor
or
or
xchg
stos
cs
mov
test
movsb
push
xor
les
adc
push
jbe
fcomps
mov
sti
data16
mov
sbb
cmpsb
push
mov
dec
mov
leave
push
dec
jmp
xor
or
out
sub
jns
mov
adc
outsb
cmp
or
arpl
dec
mov
mov
push
out
inc
pop
icebp
jnp
movsb
mov
addr16
mov
mov
jbe
pop
fstpt
mov
pop
mov
js
inc
sbb
decl
jbe
dec
adc
call
loop
call
xchg
ret
outsb
mov
add
push
test
stos
into
test
repz
add
std
aaa
jnp
lret
loopne
dec
in
scas
gs
push
sbb
dec
mov
nop
pushf
sub
fldcw
addb
push
cmp
test
xchg
mov
iret
pusha
loopne
mov
xchg
add
mov
jecxz
or
jge
jg
icebp
stos
push
xor
enter
rorb
or
or
out
xchg
mov
fistl
jbe
frstor
push
sarl
and
lods
and
jae
adc
adc
add
pop
loop
xchg
xchg
jo
push
xor
mov
adc
xorb
cmp
xchg
push
ljmp
add
test
inc
dec
dec
call
and
cmp
mov
push
cwtl
or
xchg
cli
add
inc
cli
or
call
gs
mov
hlt
ret
icebp
cmp
int
inc
or
and
push
dec
cmp
and
fdivl
push
sbb
ret
jle
outsl
jle
aaa
rcl
insl
out
vpmacssdqh
xchg
cmpsb
mov
mov
out
add
push
push
dec
mov
lahf
pop
sbb
xchg
pop
pop
movsb
cmpl
ret
insb
bound
push
mov
or
or
add
or
fisttps
daa
pop
pop
mov
mov
outsl
icebp
das
dec
add
add
ret
xchg
shrb
imul
dec
sub
mov
dec
imul
push
add
pop
lods
cmp
pop
add
add
jnp
test
scas
bswap
inc
test
fcompl
cmpsb
mov
inc
jne
loope
cmp
cli
ret
lret
int3
ja
cmp
mov
mov
inc
xchg
push
pop
cwtl
push
icebp
lcall
in
lcall
std
movsb
and
sub
outsl
fbld
data16
cmc
std
mov
imul
cmpsb
and
add
movsb
je
xchg
out
pop
stc
adc
andl
lock
shl
or
cwtl
mov
and
lret
lods
ljmp
insl
sbbl
icebp
in
repz
stos
into
out
pushf
in
rorl
fstps
pop
sub
mov
andb
cmc
mov
jae
int
bound
sub
mov
dec
ss
test
xchg
inc
mov
nop
mov
mov
cmp
js
fs
dec
push
xor
cmp
mov
cmp
mov
add
jecxz
ret
dec
lods
cwtl
push
jmp
dec
and
add
scas
sti
push
jnp
or
or
lea
jecxz
int3
lret
lds
leave
adc
mov
lret
test
insb
aaa
insb
xchg
in
xor
pop
pop
add
ljmp
ja
cmpsb
cli
pminsw
cmc
int3
sub
cmp
dec
xchg
pop
lods
outsb
lret
and
lods
cmpsb
addr16
and
imul
sarb
xor
cli
daa
imul
ss
lock
sbb
xlat
adc
pop
add
clc
daa
jnp
int
mov
cmpsb
into
and
test
xor
adc
jo
sub
sub
shl
and
xchg
enter
dec
aas
add
xchg
mov
or
lods
pushf
gs
add
out
sbb
mov
or
pop
lods
mov
sbb
jmp
add
insb
push
or
pushf
inc
or
insb
push
push
pop
lock
lods
pop
hlt
jge
sub
sbb
sub
or
and
fs
xchg
add
dec
jno
xor
sbb
ljmp
xchg
andb
xchg
cli
les
mov
add
adc
aas
mov
mov
pop
int3
popa
or
adc
lea
cld
mov
sbb
lds
pop
cs
repz
sbb
adc
push
clc
xorb
or
adc
adc
subb
dec
jmp
out
out
add
fnstenv
aas
ret
inc
inc
aad
or
xacquire
aas
sbb
fistpl
pop
ja
adc
cmp
lods
sbb
or
or
mov
jno
mov
std
notl
mov
jmp
jo
aaa
sub
gs
mov
or
and
adc
xchg
mov
gs
fmuls
stc
xlat
clc
icebp
dec
push
stos
out
mov
cltd
push
pop
add
les
sub
or
call
dec
in
mov
pop
mov
or
pop
mov
inc
inc
outsl
adc
dec
in
cwtl
fstpl
fs
insl
sbb
and
fwait
jns
mov
addb
stos
cld
ss
fisttps
insb
cmp
dec
mov
pop
mov
xchg
push
pushl
push
adc
sarb
mov
sbb
ja
mov
xchg
inc
ja
dec
lock
cmpsb
out
or
xchg
pop
stos
inc
xchg
jp
out
jo
or
fdivrs
mov
pop
inc
pop
pop
inc
adc
hlt
bswap
in
pop
pusha
pusha
mov
dec
es
mov
mov
ss
sar
cwtl
icebp
xchg
lcall
xor
pushf
outsl
jg
call
fs
aas
inc
push
add
out
push
push
sub
sbb
push
mov
jg
or
ret
outsl
pop
aaa
add
lret
notb
push
insb
jg
inc
xchg
adc
push
iret
inc
out
jp
testb
xor
lds
in
dec
movsb
xchg
dec
imul
mov
and
adc
inc
ds
fcmovu
fistl
and
mov
fmulp
push
out
xor
and
aad
stos
shl
popa
sub
scas
sub
and
dec
mov
iret
jl
sbb
out
dec
and
mov
adc
hlt
das
pop
icebp
shlb
repz
mov
test
or
stos
push
into
nop
sub
das
add
inc
mov
sub
xor
jnp
arpl
xor
das
sub
cli
out
scas
addl
add
push
decl
push
icebp
add
lret
ret
cltd
repnz
push
lret
addr16
addr16
ja
popa
mov
push
sub
cmp
daa
sub
jcxz
push
sub
loope
push
hlt
out
add
cmp
insb
mov
loop
outsb
xor
mov
sub
sbb
or
mov
icebp
jno
sbb
pop
in
icebp
sub
and
xchg
mov
xchg
xor
push
pop
lea
int
cltd
lret
fwait
xchg
aas
push
fs
pop
push
cwtl
sub
mov
mov
mov
decl
dec
aam
pop
repz
and
sti
push
test
mov
inc
and
lods
mov
and
movsw
loop
sahf
sbb
adc
jl
cmpsb
adc
les
jmp
or
adc
js
lahf
dec
sub
clc
push
rorl
cmp
pop
push
jmp
inc
fsubrs
add
pop
mov
and
int3
cmpsb
pop
or
push
ret
dec
fdivs
mov
in
inc
jae
cwtl
xor
movsl
sub
jnp
and
push
xor
pop
js
and
jmp
and
mov
sub
mov
pop
sbb
dec
sub
leave
push
mov
push
cltd
fiaddl
aas
repnz
pop
out
fsubrs
movsl
mov
gs
lret
shlb
push
in
mov
addr16
mov
sub
inc
and
push
mov
mov
lods
daa
or
lahf
jge
lods
adc
pop
mov
popa
sbb
push
dec
cwtl
mov
out
add
clc
fnstsw
cs
nop
cwtl
or
cmp
dec
mov
sbb
cmp
xchg
push
es
lods
adc
xlat
in
test
inc
and
mov
aas
subb
icebp
loop
test
test
fdivl
pop
or
inc
ss
js
fsts
xchg
outsl
loope
fcmovb
sbb
push
orl
insb
imul
scas
jo
lret
ror
pop
rorb
and
inc
mov
std
adc
mov
push
jge
scas
mov
orb
lods
cmp
daa
daa
mov
xor
shrl
inc
add
or
stos
and
jmp
xlat
mov
xor
pop
jbe
cmp
and
push
jmp
hlt
and
push
xor
cmp
push
or
mov
lds
andl
sub
dec
adc
dec
clc
testb
xchg
pop
cmpsb
or
push
dec
sub
sbb
push
and
xor
outsl
sbb
sahf
mov
in
push
push
xchg
les
subb
cmp
or
push
jnp
xchg
xor
in
dec
das
hlt
outsl
pop
and
cmp
lret
pop
jo
or
mov
popf
call
xchg
dec
jno
fimuls
cwtl
nop
fdivl
xchg
add
adc
fwait
insl
rcrl
and
fnstcw
push
shrb
movsbl
dec
and
jmp
popf
int3
jmp
int3
insl
push
sbb
lahf
add
pusha
das
mov
sahf
out
in
push
divl
std
ds
mov
xor
pushf
pushl
int3
push
inc
sub
jmp
mov
inc
test
sahf
fisttps
aad
sub
shrl
aas
dec
inc
push
or
mov
inc
pop
sub
add
int
fsubs
cmp
pop
idivl
iret
mov
add
push
icebp
out
xor
dec
pop
add
add
cmp
orb
je
rclb
arpl
ja
cwtl
sbb
and
push
scas
lret
ret
stc
popf
dec
in
call
lds
insb
lahf
cmpsb
imul
fmul
daa
cmp
mov
cmc
xor
fnsave
sti
mov
bound
sub
fcomp
loope
fisttpl
jge
lret
cld
adc
push
cmpsl
test
or
stos
jb
or
int3
lahf
pop
lahf
pop
push
pop
mov
inc
idivb
ror
pop
inc
jecxz
leave
cmc
and
lcall
in
into
push
dec
dec
xchg
or
bound
mov
dec
sub
int
xchg
adc
cs
rol
mov
loop
add
fstpl
jno
mov
add
add
int3
xor
sub
jecxz
xor
cmc
rolb
jecxz
ss
rorl
jp
in
inc
jns
shlb
jns
jecxz
ror
je
subl
push
cmpsl
lret
push
js
inc
adc
adc
pop
xchg
jg
jmpw
daa
xchg
push
dec
push
shl
pop
xor
mov
pop
and
or
pop
mov
cmpb
out
cmp
out
roll
adc
xchg
sahf
fcoml
xor
psubb
or
daa
sahf
fsubp
inc
sub
mov
rcl
shll
or
scas
loopne
addr16
lds
call
mov
dec
inc
stc
data16
push
and
or
and
mov
outsl
fnstsw
jb
pushf
adc
cmp
or
pop
or
sbb
nop
and
jno
dec
out
rolb
mov
jecxz
lock
xor
push
ljmp
fnstcw
cmp
insl
testb
test
cmp
jnp
aad
lret
and
int
lahf
fisttpl
imul
adc
push
mov
call
adc
pop
ss
jl
sahf
push
cmpl
js
xchg
sbb
out
mov
xchg
push
push
jge
cwtl
push
pop
fwait
xor
xchg
mov
cmp
inc
mov
sti
inc
arpl
bound
ret
icebp
xchg
jae
pop
nop
jg
std
les
faddl
dec
aas
jle
cmp
popa
lods
lret
sbb
rcll
sbb
sub
push
les
pop
and
jne
push
out
movsl
sub
sarb
mov
test
arpl
les
dec
in
and
jmp
lcall
fistpll
inc
cmp
mov
adc
subb
dec
adc
push
call
jmp
test
dec
popl
mov
mov
loope
mov
mov
xchg
les
xcrypt-ctr
cmpsl
cwtl
cld
out
xor
cmpsl
and
mov
std
jae
adc
test
mov
cmpsb
dec
fstl
pop
push
pop
and
pop
mov
jl
mov
adcl
pop
insl
cli
pop
sbb
js
inc
shl
addr16
xchg
inc
jp
jp
and
std
ret
pushf
loopne
xor
outsl
icebp
shr
mov
arpl
filds
shr
xchg
adc
pop
adc
ret
push
push
or
adc
mov
mov
cmp
outsb
stc
add
cmpsb
testb
adc
sti
mov
bound
in
push
insb
loopne
mov
sub
ss
jl
dec
call
les
aad
test
leave
dec
cmp
int3
emms
dec
sbb
cli
imul
mov
gs
adc
arpl
cwtl
inc
lret
jb
dec
repz
adcl
shrl
mov
cld
cltd
sub
push
and
stos
pop
jp
and
sbb
adc
fisttps
dec
jne
in
mul
fdivrl
rcrl
andl
add
xor
add
pusha
pushf
loop
movb
push
push
mov
sbb
add
ljmp
push
add
pop
sub
jl
rol
or
jmp
and
push
mov
getsec
lahf
stc
dec
insl
fnsave
push
ret
int3
cmc
dec
into
dec
mov
adc
fadds
ljmp
ret
adc
test
xor
aam
cwtl
or
and
les
add
xor
and
in
aad
dec
andl
inc
add
shl
iret
add
jp
outsb
scas
test
imul
sbb
push
sub
imul
loop
js
sti
mov
or
push
test
xchg
scas
inc
sbb
ret
imul
aaa
or
rorb
xor
cmc
jmp
adc
clc
dec
and
push
add
mov
mov
dec
xchg
jnp
and
mov
xchg
out
adc
push
push
test
pop
imul
mov
arpl
addl
jl
outsl
pop
jae
or
adc
cltd
mov
fsub
and
pushl
jecxz
data16
cs
andl
iret
cmovb
mov
adc
fimuls
sti
sbb
mov
in
pop
out
cld
push
test
cld
lcall
pop
das
adc
cmp
clc
cwtl
xor
push
sbb
js
lock
and
sarl
rcl
call
or
jmp
andl
lcall
clc
dec
jle
jne
jb
jno
js
push
cltd
test
and
inc
sub
inc
cmp
and
mov
fs
fistpll
xchg
cmp
ss
push
pop
sub
rcll
cmpsb
add
je
jne
outsl
nop
sbb
dec
pop
or
mov
addr16
or
ljmp
mov
mov
pop
dec
pop
sahf
mov
xchg
pop
jge
sub
int3
pop
outsb
xchg
icebp
je
stc
add
or
loope
mov
push
dec
outsb
cwtl
push
adc
xor
movzwl
mov
daa
enter
mov
cmpsb
cmp
sub
out
pop
xor
lahf
lret
jl
adc
push
addr16
rclb
outsb
jle
inc
push
and
mov
mov
adc
ja
das
and
sar
fwait
nop
and
sub
mov
mov
adc
and
call
fildl
rorl
sub
pop
xor
int3
jo
fiaddl
int3
cltd
push
add
mov
loopnew
sub
loop
shll
adc
and
mov
lret
xchg
xor
jecxz
fcoml
pop
lcall
jle
sbb
cmp
adc
xchg
jnp
das
sti
jae
and
and
insl
dec
das
out
gs
cmc
jo
xor
mov
mov
ljmp
mov
jno
jo
icebp
dec
xor
xchg
or
add
cld
fbstp
adc
mov
mov
pop
icebp
pop
push
lds
mov
dec
fiaddl
jns
and
int
or
int3
test
xorl
dec
mov
cwtl
scas
jmp
mov
dec
inc
add
mov
cltd
mov
fs
add
xchg
movb
pop
inc
adc
pop
test
mov
and
jo
or
sub
and
out
inc
scas
lods
xchg
movsb
jge
lcall
mov
dec
sbb
pushf
popa
in
sub
inc
pop
aaa
clc
insb
push
xlat
into
fsts
sub
loope
std
fiaddl
and
adc
cli
fcmovbe
and
pop
xor
pop
dec
adc
mov
imul
mov
cli
fwait
cli
mov
inc
hlt
jne
jmp
cli
adc
push
and
adc
dec
sub
push
sbb
or
arpl
aaa
push
loop
dec
outsb
mov
inc
in
and
popf
lods
mov
cltd
pop
stos
mov
push
adc
jbe
lahf
pop
fistpll
loope
bound
ficoms
and
outsl
push
cmp
call
or
dec
dec
add
inc
int3
cmp
jge
dec
inc
cld
jbe
xor
sub
lahf
jl
sbb
or
or
pop
inc
or
dec
daa
jo
scas
cmp
movsl
jecxz
xchg
cmp
mov
push
das
adc
fdivs
clc
dec
out
inc
jecxz
cmpsl
popf
pop
cmc
cmp
adc
lcall
xchg
or
inc
orl
clc
icebp
in
adc
mov
cwtl
and
push
dec
cmpsb
aas
jmp
out
sub
andb
imul
sbb
lock
pop
cmp
dec
add
push
ret
sti
int
jnp
inc
pop
pop
dec
and
ds
lods
ds
mov
call
and
pop
adc
mov
mov
sub
pop
jl
push
and
and
sbb
lcall
cmp
les
xor
mov
mov
fsubs
mov
mov
aad
bound
pop
sub
imul
fiaddl
addl
jp
dec
dec
mov
stc
and
sbb
sub
and
jo
and
call
jg
sbb
shl
je
addr16
rclb
pop
or
ds
in
xor
dec
sbb
filds
mov
insb
jmp
fnsave
leave
ficompl
cmp
push
outsl
or
push
mov
dec
dec
lock
jo
sub
fcmovnb
add
sbb
mov
lock
iret
pop
lahf
xchg
adc
mov
pop
insb
jnp
in
sbb
jmp
add
outsb
out
pop
roll
js
sbb
sub
mov
dec
jae
aaa
sbb
out
inc
jae
es
cmp
test
mov
pop
addr16
shl
imul
xchg
add
jae
push
loope
lods
pop
nop
je
dec
pop
mov
add
mov
in
lretw
je
cmp
fs
sbb
dec
xchg
xlat
dec
insl
mulb
icebp
pop
inc
mov
or
cmp
jle
dec
rclb
jns
test
and
lcall
jmp
stos
mov
push
and
add
lds
jae
sarl
insb
sub
call
in
mov
xor
out
cs
aas
dec
or
loop
mov
xor
pop
and
or
lds
repz
cmp
popf
addr16
push
add
loopne
fldenv
sub
sub
or
sbb
xchg
lea
mov
test
ja
dec
fwait
aad
cmp
sti
or
mov
mov
outsl
and
pop
and
dec
cltd
enter
inc
xor
adc
xor
fmull
inc
jb
movsb
je
add
pop
dec
shrb
jecxz
sbb
push
push
push
sbb
jmp
or
mov
xchg
push
lea
xchg
xchg
cli
jecxz
pop
jae
fidivl
sub
xor
pop
test
lea
loopne
popf
add
jae
sub
lods
popf
and
pop
sahf
jnp
and
xchg
pushf
push
movsl
and
repnz
xchg
imul
cld
adc
sbbb
sbb
sub
xor
loope
aas
outsl
fidivrl
loope
mov
paddusb
stos
in
dec
push
imul
imulb
xchg
enter
fdivrl
push
jo
adc
adc
jne
jg
jae
leave
cs
stc
lahf
mov
and
push
testb
mov
fisubrl
mov
std
jbe
push
push
xor
dec
lret
inc
cmpsb
fldcw
push
aam
rcl
ss
add
or
mov
out
push
dec
rorl
adc
cli
int
add
mov
pop
test
jp
mov
out
adc
arpl
fs
jae
adc
cmp
cltd
repnz
xor
dec
icebp
lret
cmp
aas
xchg
sbb
sahf
sbb
push
jl
sub
sahf
addr16
dec
stos
mov
sbb
jge
or
mov
pushf
xor
push
insl
pushf
call
jecxz
push
sub
in
xchg
mov
pop
push
stos
call
and
sub
jno
stos
mov
lcall
icebp
dec
dec
jp,pt
dec
clc
mov
dec
lcall
call
mov
sub
sti
daa
add
movnti
lahf
icebp
ret
pop
fsubl
push
lret
xchg
mov
xor
enter
loopne
dec
pop
push
shlb
and
pop
and
mov
iret
mov
sbb
lea
lahf
mov
icebp
outsb
dec
pop
jae
sbb
lods
int3
and
mov
pop
mov
lret
push
cmpsl
cmp
sqrtps
push
adc
mov
and
push
popf
inc
fldt
dec
mull
loope
fwait
shll
or
mov
jbe
lret
sbb
je
jmp
fiaddl
mov
mov
adc
mull
call
jb
push
lock
lods
leave
mov
lock
jle
xor
int
xor
dec
orb
cs
or
lds
lds
mov
mov
dec
add
adc
jne
lret
int
cmovae
and
xor
cmp
mov
pop
jne
inc
jl
add
push
jb
icebp
imul
loopne
shr
dec
imul
lcall
xchg
bound
dec
int
std
or
mov
or
mov
pusha
icebp
movsb
mov
adc
std
sarl
adcl
movsb
mov
sbb
or
lea
out
inc
fimull
ss
std
sbb
adc
jmp
sbb
insb
add
push
pop
andl
sahf
xor
leave
das
sbb
mov
inc
sbb
pop
mov
xchg
push
and
js
pop
mov
pusha
xchg
js
add
add
or
pop
jmp
push
testb
hlt
insl
lds
out
xor
add
inc
loope
push
aad
sub
xchg
xor
xor
adcb
addr16
lds
test
setp
jb
orl
cmp
dec
aam
xchg
jl
push
das
ds
xor
ret
sbb
bound
pop
and
or
adc
or
sub
call
or
mov
sbb
stc
lea
aam
fists
pop
cli
add
lods
hlt
jns
ss
push
cmp
or
mov
mov
daa
xchg
push
rorb
pop
mov
jb
imul
adc
ja
sahf
cmp
pushl
mov
insl
mov
adc
js
mov
or
cmp
insl
fldt
mov
clc
nop
mov
cmp
pop
inc
rcl
add
fidivs
movsl
xor
cli
pop
ds
sahf
jnp
xor
popf
xchg
or
in
fs
test
mov
jg
or
test
pop
shrl
jmp
call
cmp
pop
sub
jmp
fdiv
or
cltd
test
or
icebp
inc
mov
rcrl
pop
je
enter
jbe
flds
pop
pushf
lret
add
xor
fadd
xor
es
jns
jns
cld
mov
mov
pop
cmp
leave
stos
xchg
and
mov
pop
dec
imul
mov
nop
mov
mov
add
mov
sub
sub
mov
push
push
mov
dec
sbb
js
push
cmp
daa
shlb
xor
lcall
sub
ljmp
jl
dec
daa
mov
fcoml
int3
repz
or
push
inc
bound
dec
jl
cli
or
lock
sub
xlat
test
push
mov
or
or
lret
xorb
shll
nop
mov
test
and
ljmp
dec
popa
xchg
outsl
jl
push
shll
or
add
popa
syscall
jb
sbb
inc
out
outsb
push
bound
das
sbb
mov
push
inc
fstl
aaa
and
add
lock
loopne
xchg
and
jno
or
dec
push
xchg
dec
push
sbb
xor
and
xchg
enter
loopne
lahf
neg
sub
xchg
mov
iret
out
adc
dec
icebp
jns
or
push
loop
in
adc
mov
nop
mov
aas
fsubl
pushl
mov
sbbl
leave
lahf
pop
jecxz
or
cmp
xorl
inc
sub
test
push
and
cmp
insl
std
into
mov
xor
aaa
push
jb
mov
cmp
sbb
and
add
and
push
data16
cmp
xchg
ljmp
cmpsb
shr
inc
insl
mov
bound
adc
push
xchg
inc
jne
les
shr
lock
or
cmp
dec
mov
int3
xchg
add
sbb
mov
add
out
xchg
lods
test
rcr
js
pop
pop
ret
cmp
rcrl
mov
and
push
adc
dec
cmpb
std
pusha
movsb
je
mov
ja
inc
sub
inc
inc
dec
daa
stos
xor
xor
pop
gs
shl
mov
test
jp
cmpsb
xorl
xchg
cld
mov
push
push
cmp
dec
inc
jae
cmp
xchg
mov
pop
aas
dec
xchg
push
or
test
pop
ljmp
jp
jge
loop
xor
inc
cmp
jl
mov
shlb
inc
push
mov
mov
insl
daa
negl
cmp
les
andps
dec
shll
in
dec
sub
jmp
push
gs
pop
mov
subl
and
nop
je
test
call
jge
stc
and
dec
mov
orb
inc
rorl
and
push
mov
jp
and
mov
fwait
aas
inc
mov
push
jle
pushf
or
sbb
lods
dec
test
andb
sarl
pop
fadd
mov
cmp
cwtl
mov
jno
push
adc
fwait
sbb
sub
mov
lahf
or
fwait
jle
or
lret
jne
pop
jnp
push
pop
inc
and
mov
sbb
in
adc
dec
pop
daa
xor
test
cmpsb
jl
enter
jmp
daa
fcompl
out
dec
aam
in
mov
jnp
out
test
adc
pop
out
in
stos
add
data16
or
cmp
jae
lea
int
hlt
cmpsl
mov
or
int3
jecxz
push
push
mov
js
cli
xchg
adcl
pop
jns
aad
aad
pop
pop
sbb
sub
or
mov
loopne
fsts
bound
or
dec
mov
push
adc
addr16
shrb
inc
fisubrl
arpl
shll
iret
movsl
mov
jecxz
xchg
lds
std
or
and
int
test
dec
icebp
call
xchg
add
jbe
je
les
aas
in
fdivrl
sbb
rcr
pop
xlat
cmp
mov
push
pushf
or
dec
stc
and
dec
arpl
dec
jb
rol
sbb
sub
dec
inc
and
lcall
pop
in
pop
fmull
daa
inc
repnz
mov
loop
out
jp
out
flds
imul
lcall
push
xchg
and
shr
add
xchg
push
inc
xchg
inc
mov
test
ret
jb
stos
adc
mov
out
and
fmull
daa
xor
sbb
sub
sbb
clc
das
add
rcrb
out
or
xor
jge
xchg
test
and
or
or
loopne
out
movsl
sub
adc
adc
clc
out
push
out
frstor
sub
or
push
repnz
push
stos
jl
test
call
xor
add
jl
fcmovnbe
push
in
lods
ficompl
inc
pop
dec
fsubs
pop
or
mov
or
jbe
add
or
or
sahf
or
inc
dec
xor
mov
arpl
mov
pusha
nop
xor
xor
inc
or
in
push
adc
test
outsb
jno
ds
pop
xor
daa
jne
fidivrl
cwtl
int3
dec
sbb
sbb
mov
loope
sbb
stos
sti
popf
int
cmp
mov
and
push
or
pop
pop
lds
loope
inc
dec
jne
and
adc
add
or
fldenv
ja
loopne
lret
cmp
push
jne
add
pop
outsl
add
aad
add
sar
and
mov
and
xchg
outsb
aam
arpl
test
andl
test
xor
xor
arpl
mov
cmp
stos
mov
push
mov
lcall
add
mov
push
sub
outsb
mov
je
xor
imul
pop
arpl
pop
cmpsb
inc
sbb
aaa
leave
inc
adc
pop
pop
lret
push
push
in
pop
cmp
stos
cmp
push
clc
jmp
push
push
fwait
lcall
and
adc
add
push
push
fimull
sub
mov
mov
mov
fbstp
adc
fsubrp
nop
sti
pop
push
mov
adc
mov
sar
cmp
loope
push
lcall
jp
bswap
xchg
push
add
inc
adc
xchg
adc
arpl
adc
nop
cs
mov
inc
lods
ret
stos
insb
mov
jg
stos
adc
cwtl
mov
xor
cmpsl
sub
adc
rcrb
aas
fidivrl
inc
mov
in
push
mov
ljmp
xor
aam
dec
popf
xor
sarl
and
dec
pop
aad
into
js
repz
push
inc
mov
ret
adc
dec
inc
ds
sub
mov
xchg
add
or
in
sbb
adc
sbb
rcl
leave
jmp
mov
push
xlat
jne
xchg
or
add
pop
sub
shrb
das
scas
cmpsl
push
orl
dec
leave
cmp
mov
jp
inc
shrl
cmp
fs
dec
std
or
adc
sbb
xchg
gs
dec
sub
xchg
xlat
inc
sbb
mov
lret
adc
addr16
cmp
dec
xor
rcrl
fwait
cltd
dec
cmpsb
int3
lods
negb
dec
inc
inc
mov
pop
pop
hlt
mov
push
mov
cld
push
cld
rorl
ds
out
lea
clc
add
xor
test
mov
loop
dec
xchg
mov
nop
cwtl
xor
pop
and
jbe
fs
es
jmp
rorb
jo
add
or
fbld
and
fistl
add
dec
or
loop
jnp
xchg
lea
xor
sub
adc
and
sbb
loop
out
and
sbb
int3
leave
push
addr16
call
push
mov
psrad
sbb
mov
aad
cli
adc
add
loop
sbb
fldt
aas
dec
inc
in
and
sbb
icebp
cwtl
mov
testb
jbe
je
mov
xchg
dec
sub
dec
repnz
fcomps
test
rclb
pop
es
sub
sbb
lahf
daa
es
adc
and
jmp
imul
call
mov
dec
adc
sbb
insl
leave
nop
and
neg
ds
fstpl
adc
fstl
adc
fdivrl
sbb
xor
or
cs
pop
jb
or
mov
out
inc
add
call
inc
stos
fdivp
pushf
js
lahf
cmc
mov
clc
adc
and
xor
xchg
and
xor
lcall
stos
or
lods
sub
adc
sbb
xchg
xchg
test
and
data16
jne
adc
icebp
test
adc
pop
test
jae
aas
mov
sbb
mov
add
cmp
jns
sbb
adc
xlat
and
push
dec
mov
push
dec
out
jmp
repnz
jb
in
cmp
js
scas
in
push
sub
xor
insl
xorb
or
and
xchg
xchg
push
mov
xchg
mov
out
pop
jo
jle
push
inc
loopne
rclb
adc
das
push
cmp
daa
pop
fwait
sub
stos
lods
aaa
iret
pop
mov
jp
sub
in
into
movsb
add
push
sbb
mov
cmpsb
mov
repnz
adc
jge,pn
hlt
xor
mov
inc
and
push
mov
jb
xor
ljmp
and
inc
stos
mov
fsubrs
outsl
lds
cmp
loop
popf
mov
mov
arpl
lock
pop
mov
ss
mov
or
jno
jle
daa
cmp
push
jbe
loopne
mov
jno
popf
cs
lret
into
adc
jle
pop
xor
push
shlb
js
jae
and
shrl
or
mov
loop
inc
mov
adc
adc
repnz
loope
sub
cld
inc
test
cmpsb
push
and
inc
and
icebp
in
shll
addb
xchg
dec
pop
mov
inc
jne
xchg
std
mov
loope
sub
inc
or
lods
mov
push
push
imul
pop
or
xchg
push
ret
xor
xor
aas
ja
jl
enter
push
pop
push
push
fcmovnbe
sbb
mov
mov
sahf
test
mov
push
ja
orl
mov
lret
lods
int
mov
cwtl
mov
enter
mov
gs
mov
ret
xchg
pusha
dec
insb
sbb
dec
add
lret
mov
inc
cmp
xchg
sub
or
inc
psllq
mov
xchg
sarl
sub
std
adc
pop
dec
jae
dec
outsb
xchg
sub
bound
xchg
pop
aam
inc
xchg
outsl
dec
pop
das
jmp
mov
xchg
ja
sub
mov
addb
jp
mov
popa
mov
flds
data16
fldcw
dec
mov
dec
test
loop
lahf
shrl
nop
mov
push
cmp
jp
or
in
sbb
sbb
jne
test
nop
testl
insb
or
push
out
add
je
sub
push
pop
inc
in
lods
sbb
add
jmp
outsb
jle
stos
inc
xor
cld
mov
rclb
test
xor
add
movsb
mov
dec
sbb
cs
cmovne
mov
fwait
negl
les
mov
or
mov
adc
cmp
mov
dec
xor
dec
cmp
imul
pop
out
push
mov
data16
insl
ror
fwait
inc
je
push
scas
loop
js
in
jecxz
outsl
cmp
add
aaa
popf
xor
push
dec
fbstp
inc
lods
popf
xlat
push
mov
sbb
nop
aad
sbb
or
inc
dec
in
and
outsb
push
mov
sub
add
xchg
iret
xchg
mov
arpl
lcall
sub
es
lea
dec
lcall
in
lods
fwait
add
in
mov
sub
mov
repz
add
mov
cmp
cmpsb
push
rorl
nop
in
insl
enter
gs
rorb
and
or
xchg
pop
dec
or
adc
loopne
adc
ret
push
ret
mov
pusha
adc
dec
push
dec
out
outsb
adc
add
add
loop
jg
ds
lret
loopne
nop
push
ljmp
mov
adc
addr16
in
test
or
adc
mov
mov
lods
imul
scas
inc
push
fwait
aas
mov
mov
mov
pop
insb
push
jbe
push
mov
popa
ret
div
and
xchg
push
or
insb
cmpsl
jns
aad
stos
mov
mulb
fisubrs
xlat
jmp
fstps
adcb
xor
jae
in
ds
mov
ja
jle
xchg
rcll
cld
xchg
loope
inc
adc
lea
inc
adc
int3
jmp
sbb
cwtl
pop
dec
adc
iret
push
and
jnp
nop
leave
popa
es
mov
mov
xchg
dec
ja
cs
fdivs
fisttpll
insb
push
inc
aam
add
std
sub
ja
push
inc
cmc
adc
outsb
mov
jle
jno
adc
push
repz
inc
sub
mov
bound
or
push
or
pop
inc
sbb
loopne
push
fistps
or
pop
or
add
push
jo
cwtl
sbb
out
out
mov
aas
sbb
mov
insb
test
add
or
cmp
add
mov
dec
add
std
adc
pop
and
ss
frstor
stos
or
clc
lret
xor
mov
mov
dec
and
lret
pop
gs
out
pop
std
mov
mov
mov
negl
push
jge
sub
inc
sbb
adcl
gs
and
push
dec
ljmp
loopne
je
sub
push
xchg
jle
in
sbb
xor
xor
xchg
add
aaa
mov
pop
aas
pop
ljmp
add
sbb
out
jmp
dec
and
lcall
jl
in
je
dec
sub
sbb
mov
rorl
jecxz
das
push
fcoms
jmp
mov
pop
test
cli
and
jge
jge
jo
xchg
mov
imul
dec
int3
pop
stos
mov
push
or
add
jb
ret
jg
xchg
int3
push
fisttps
add
jns
test
pop
mov
insl
ficomps
ret
pop
mov
fiaddl
inc
mov
sahf
adc
xchg
or
fldcw
mov
icebp
lcall
xor
aam
or
or
je
clc
sub
test
out
imull
inc
clc
repnz
pushf
dec
aas
add
aad
scas
rol
in
pop
mov
fsubs
jb
fmull
pop
repz
jp
rcr
xchg
xchg
sub
sbb
lahf
push
jle
mov
jge
aam
ds
cmp
mov
pop
or
jge
out
sub
push
adc
jnp
sbb
sbb
lods
sbb
and
test
lods
push
pushf
enter
mov
dec
inc
jns
jne
add
jecxz
or
adc
jl
and
js
icebp
adcb
pop
pop
mov
lods
lods
in
sbb
dec
adc
scas
dec
cmc
mov
mov
add
mov
dec
push
sbb
fldcw
add
das
xor
inc
out
add
out
jb
and
jno
insb
lock
lods
std
xor
cwtl
andb
mov
mov
inc
adc
out
popa
sbb
mov
or
push
lods
enter
xchg
jg
inc
push
jecxz
loopne
jnp
imul
add
mov
out
dec
xor
mov
mov
mov
jno
add
and
mov
lea
sub
add
push
and
cld
cltd
frstor
outsl
lret
lods
dec
in
sub
sbb
fcoml
daa
ljmp
testl
inc
fstps
les
mov
xchg
mov
jo
cli
arpl
cmpsb
sub
mov
mov
stos
nop
pusha
repz
in
fidivs
add
orl
push
ret
out
and
or
xchg
test
jnp
and
pushf
xchg
push
jmp
jae
aaa
inc
mov
and
mov
sbb
adc
push
mov
loope
push
out
adc
incb
jo
cmp
adc
mov
inc
or
std
lock
aam
imull
dec
cmc
cmp
test
in
and
sbb
or
lods
int
imul
outsl
mov
cltd
or
js
push
sub
fildll
mov
sbb
movsb
jle
pop
inc
clc
mov
js
sbb
repz
pop
enter
and
ljmp
or
mov
pusha
int
cmp
sbb
stc
inc
movsb
cmp
sub
add
jl
sub
adc
adc
xchg
cmp
lods
pop
aad
or
int
cmp
sbb
cmc
mov
and
cmpl
rclb
int
or
mov
ja
aam
nop
cmp
hlt
lret
out
mov
lds
int
or
fneni(8087
and
jg
cmp
das
add
add
pop
push
sarl
sbb
roll
mov
pop
push
fimuls
jge
jle
dec
in
sbb
push
stos
int
cmp
cmp
pop
xchg
icebp
mov
in
push
dec
mov
insb
pop
inc
jg
sub
adc
and
push
sub
clc
repnz
push
add
dec
xchg
nop
mov
out
sub
aaa
sarb
or
push
jge
stos
js
push
mov
lods
sub
cmp
arpl
sbbb
jmp
nop
jp
roll
fisubl
push
addb
jne
and
xchg
xor
mov
ficoml
jecxz
cmp
adc
adc
mov
xchg
pop
outsb
ret
fcoml
addr16
dec
inc
adc
aaa
cmp
jp
dec
xchg
sarl
mov
or
and
into
dec
lret
invd
sub
int3
in
inc
fwait
sbb
sbb
adc
gs
cwtl
push
jp
fwait
or
enter
test
cmp
mov
xor
cmpsl
sub
imul
push
pusha
mov
sub
cli
outsl
pop
sub
imul
icebp
ja
dec
call
pop
cli
or
sub
xchg
mov
cmc
mov
leave
fld
jnp
xor
push
or
push
scas
adc
insl
or
dec
sub
pop
and
fdivrs
sub
bound
mov
int
jge
mov
outsl
into
insl
shlb
rcrl
or
mov
push
push
js
dec
in
mov
push
mov
ret
jecxz
xor
pop
inc
out
jecxz
ja
shll
adc
push
sbb
jecxz
sarl
jmp
mov
cmpl
xchg
inc
mov
xchg
jae
clc
xchg
arpl
hlt
xchg
add
repz
pop
pop
inc
or
mov
or
jle
mov
pop
mov
bound
pop
adc
xor
mov
push
inc
int
cmp
jl
mov
arpl
mov
test
mov
negb
dec
imul
fdivs
call
lret
mov
loop
int
scas
or
insb
sbb
jp
xchg
cmp
sbb
xor
pop
repz
mov
sbb
roll
pop
int
int3
lods
arpl
pop
aaa
mov
rcl
mov
adc
mov
push
jns
cmpl
mov
cmp
xchg
loope
and
dec
cmpsl
and
adc
outsl
mov
lret
call
mov
imul
rcll
sbb
sub
adc
mov
mov
dec
sub
inc
and
push
and
sbb
lret
push
test
cli
lcall
mov
lds
test
repnz
imul
ret
mov
xchg
fnstenv
das
imul
or
pop
push
add
pop
ja
ja
out
clc
jne
addr16
jne
and
jb
cmp
lods
nop
push
shrb
in
inc
lea
fs
add
xchg
add
ret
cmp
add
sbb
shll
push
aam
xlat
fisttps
jmp
cmp
dec
mov
push
jmp
ja
sbb
cmp
shlb
and
cmp
xor
dec
or
insb
add
leave
dec
outsl
adc
pop
fldcw
leave
pop
mov
andb
mov
lcall
adc
call
pop
jge
aam
jne
xor
sbb
mulb
sbb
mov
xor
jb
sbb
sbb
inc
test
pop
add
cmovg
lods
jb
popf
test
ss
dec
ljmp
ret
or
mov
mov
sbb
out
inc
bound
sbb
in
leave
cmp
jge
fcoms
cvttps2pi
or
int
jmp
bound
jl
sub
movsl
arpl
mov
leave
xor
or
pop
sub
jp
leave
jl
mov
mov
or
jnp
cld
push
and
imul
je
std
and
hlt
popf
dec
dec
sbb
movl
xor
jnp
mov
xor
dec
and
stc
jne
pusha
js
and
imul
xchg
add
dec
xor
call
aam
repz
cmp
pop
push
cli
xor
dec
daa
cmp
push
pop
pusha
jae
cmp
jnp
das
sbb
in
pop
sub
pop
jo
and
inc
dec
aad
test
mov
fildll
sbb
and
icebp
cmpb
mov
daa
jns
sub
inc
vsqrtsd
sbbl
pop
test
jno
cmp
stos
and
add
jle
xor
xor
xchg
les
jecxz
insl
psrld
or
je
sub
ja
je
mov
movsb
pop
das
mov
xor
cmp
mov
pop
inc
rcrl
xchg
das
push
pop
jno
js
cmp
pop
mov
add
or
loopne
xor
push
sub
dec
inc
aad
das
mov
mov
test
or
cmp
stos
and
dec
mulb
pop
adc
xor
pop
bound
jge
rorb
mov
fildl
mov
mov
sbb
mov
xchg
cmp
ds
pusha
add
ficomps
ja
sub
sub
inc
xchg
xlat
pop
call
and
out
xchg
or
push
clc
adc
mov
dec
and
mov
popa
mov
sub
cmp
sbb
dec
adc
mov
fldlg2
mov
faddl
sbb
int
or
in
or
inc
mov
adc
push
mov
rcrb
dec
rcr
inc
adc
sub
js
jmp
xchg
sbb
fdivl
call
rorl
or
adc
or
sbb
pop
loopne
lods
add
shrl
cmp
subl
cmpsl
pop
movsl
adc
ljmp
cmp
int3
push
sub
cmpsb
adc
jo
sbb
push
inc
mov
pushf
js
xchg
in
jl
xchg
ror
adc
cli
imul
inc
dec
cwtl
notb
xor
jge
adc
xor
jp
and
insl
lret
scas
pop
mov
mov
push
xchg
adc
push
aam
mov
mov
sar
or
stc
jnp
pushf
lcall
inc
jle
test
xor
push
jle
test
sbb
push
hlt
push
out
mov
rcrb
insb
rcr
lods
pop
movsb
sub
fdivr
in
push
fwait
repnz
pop
lcall
aaa
push
sub
leave
cwtl
xor
in
ja
xchg
add
pop
mov
jns
mov
sarw
je
std
dec
loop
filds
out
imul
cs
lret
shl
or
sbb
sbb
cmpl
or
mov
cmp
or
adc
sbb
pop
lea
or
jge
repnz
lods
inc
push
insl
sub
in
lock
push
sub
add
cltd
insb
mov
jge
pop
mov
out
aam
mov
jb
sbbb
adc
fwait
sub
cli
push
stc
push
and
xor
add
or
leave
icebp
inc
inc
cmp
xor
mov
jne
pop
xchg
jnp
push
push
push
sbb
push
xchg
cmp
into
xchg
sbb
dec
jbe
stc
icebp
roll
das
pop
mov
pop
dec
pop
sbb
jl
stos
dec
fwait
repnz
inc
sbb
jp
sub
mov
mov
mov
xchg
mov
out
or
dec
dec
sub
das
int3
lret
imul
push
jno
cbtw
lods
or
sahf
adc
sub
gs
push
pop
bound
lahf
push
add
outsl
pop
rcll
lock
xor
scas
cmpsl
sbbl
jecxz
andb
push
adc
leave
cmpsb
cli
xor
cltd
icebp
dec
fsub
lcall
mov
add
movsb
fst
jb
xor
in
add
sbb
jae
xchg
xor
sarl
add
mov
lock
cmp
or
cmp
sbb
push
inc
dec
fwait
cmp
inc
ja
sub
add
pop
pop
push
scas
jb
hlt
or
fisttpll
adc
popa
push
push
aaa
sub
push
stos
ss
in
call
arpl
mov
jo
hlt
dec
mov
mov
shll
or
xor
jl
leave
jnp
test
repnz
dec
cltd
dec
pop
fwait
sbb
jge
sub
sbb
sbb
dec
and
mov
mov
outsb
js
pop
or
inc
dec
stos
shr
out
psubb
mov
cmp
fdivs
pop
xor
jnp
outsl
pop
out
sbb
fmuls
insb
insl
mov
push
enter
sub
xor
insl
sbb
je
jp
dec
add
movsl
gs
std
cmpsl
xor
cmp
cmp
ja
inc
xchg
xor
adc
dec
jb
ljmp
ja
adc
pusha
iret
mov
lea
add
int3
pop
or
test
push
push
mov
or
xchg
pop
notl
sti
pop
and
jle
stc
cmp
jae
add
jg
loopne
jl
cltd
xchg
outsb
pop
popf
or
data16
dec
xchg
rcl
pushf
sub
push
jbe
xor
test
lret
dec
mov
addr16
push
push
cmp
or
bound
aaa
push
inc
cmp
jl
es
jl
fiaddl
sbb
cmp
mov
lea
ljmp
aam
das
or
rep
dec
outsb
cmpsl
or
jmp
loop,pt
push
jne
xor
push
jp
push
gs
stc
inc
jnp
push
adc
inc
push
xchg
daa
sbb
add
stc
mov
pop
xchg
inc
lods
add
dec
mov
nop
push
in
jne
add
mov
push
jo
dec
pop
divl
pop
fcmovne
arpl
ret
and
movsb
sub
andl
pop
jmp
dec
loopne
xchg
dec
jns
inc
std
bound
mov
mov
cmp
pop
cmp
xchg
cmp
sub
cmp
pop
cmp
push
pop
sub
dec
pop
sbb
adc
xor
popa
mov
mov
popf
js
pop
clc
insl
adc
inc
adcl
aam
add
ds
pushf
adc
repnz
ret
fisttpll
jae
orl
out
divb
cmp
arpl
lea
add
pop
lds
dec
sbb
js
stos
xchg
mov
aaa
rcrb
adc
jne
aas
jo
inc
xcrypt-cbc
cmpsl
lds
adc
and
dec
and
lock
xor
insb
sbb
pop
je
sub
lds
ret
xor
cmp
repz
fcom
scas
dec
mov
or
and
sub
add
adc
push
xor
sub
inc
pop
inc
mov
call
jp
imul
ljmp
scas
in
inc
ljmp
lea
iret
int3
je
or
pop
dec
pop
pusha
loop
add
mov
lds
imul
call
imul
shlb
mov
adc
dec
shrb
adc
pop
inc
push
cmc
push
pop
mov
sbb
dec
mov
fisttpll
ds
xchg
cmpsl
jbe
icebp
cld
fmul
sub
cli
jne
fsubrs
xor
push
cmp
push
inc
pop
jge
jp
add
xchg
inc
outsl
call
pop
dec
imul
cmp
push
add
mov
jns
addl
js
sub
out
add
jae
jg
fs
push
add
xchg
sub
mov
fsubrl
sub
popa
push
inc
lcallw
and
push
popf
dec
test
jbe
mov
adc
popa
lods
inc
daa
outsb
mov
add
mov
js
cmp
cli
ds
pop
cld
int3
pop
sarl
fcompl
cmp
in
dec
cmp
ret
cmp
jle
hlt
rcrb
sub
mov
sbb
adc
push
mov
pop
add
ja
lds
sub
add
fmull
test
data16
pop
call
push
popf
lock
sbb
cmp
mulb
inc
xlat
pop
outsl
pop
jno
xor
cmp
mulb
orb
fisttpll
mov
xchg
adc
mov
pop
dec
mov
cmp
jecxz
fmull
or
xor
loopne
mul
sbb
push
aam
cmp
adc
outsb
rorl
cmp
add
add
out
xchg
popf
or
imul
xor
pop
sbb
fildll
push
aas
jmp
sub
sarl
xchg
out
data16
icebp
faddl
outsl
jmp
aam
cli
enter
aam
fs
les
inc
mov
lods
and
jp
add
and
jb
scas
stc
dec
cmp
roll
jo
pop
xchg
push
cmp
jno
ljmp
out
inc
cltd
cmp
mov
xor
lret
adc
sub
and
or
inc
xor
mov
push
jp
cwtl
inc
iret
mov
movsl
daa
cwtl
mov
lock
js
mov
stc
push
push
popf
ja
or
imul
sbb
loopne
dec
mov
and
xchg
sti
adc
add
imul
or
adc
pop
xchg
aas
sbb
mov
and
loopne
sbb
pop
pop
dec
or
in
pop
add
ret
jmp
mov
aad
push
or
xchg
add
pop
sbb
push
push
pop
insb
pop
pushf
rcrb
cmp
clc
add
pushf
jne
xchg
pop
adc
emms
push
pusha
sub
outsb
mov
and
out
loop
push
xor
aaa
sbb
cmp
jo
sbb
or
and
jae
imul
inc
adc
movsl
fwait
dec
and
imul
or
inc
xor
mov
add
jae
outsl
in
xor
jg
cld
pop
or
cmp
or
and
aas
movsl
das
enter
arpl
adc
out
idivb
je
sbb
mov
mov
xor
pavgw
push
inc
imul
push
mov
mov
fisttps
fildl
and
rorb
xor
push
push
hlt
dec
push
lea
loope
sbb
adcl
fsubs
inc
rorl
jge
jge
push
ja
insl
fidivs
pop
cwtl
pop
pop
push
mov
adc
jns
leave
adc
and
push
ja
jmp
cs
mov
cmp
cmp
adc
xchg
sub
sahf
add
shll
xor
pop
adc
mov
adc
fwait
jmp
mov
pop
jae
in
push
test
jg
test
and
xchg
cmp
sti
adcb
inc
in
and
aam
sub
mul
adc
xchg
sbb
fs
aam
adcb
jmp
or
dec
icebp
pop
test
push
sub
test
or
cmpsl
div
mov
ror
jbe
mov
je
aam
pop
jmp
push
cld
nop
popf
dec
dec
pop
insb
dec
sub
inc
sbb
decl
sbb
in
xchg
dec
jp
js
loopne
ds
or
push
jge
loope
mov
fisubl
leave
in
sub
push
sub
into
mov
mov
lahf
hlt
cwtl
adcl
mov
nop
cwtl
push
mov
shrb
or
cmpsl
mov
ror
faddl
sub
mov
aad
xor
flds
push
jbe
sub
pushf
mov
push
fadd
cmc
test
pop
xor
outsl
add
mov
rclb
or
aad
or
js
dec
cmc
adc
loope
xor
dec
mov
jp
dec
aas
js
outsl
jl
stc
adc
jg
fcoml
jne
xor
cmp
pop
dec
mov
stc
sbb
or
int
cmp
sbb
inc
aam
cmc
in
cld
arpl
pop
in
cmp
sbb
sub
das
sbb
push
or
or
in
dec
xchg
and
push
adcb
cmp
aad
and
int3
inc
sbb
mov
imul
and
cmp
andb
cmp
les
pusha
scas
xchg
push
pop
xchg
xlat
rorl
es
fucomi
add
jge
loopne
push
jecxz
mov
jae
mov
aam
std
push
arpl
mov
in
roll
and
cmp
pop
iret
je
imul
xor
push
fwait
mov
cmp
jl
arpl
mov
mov
push
jnp
cmp
push
sahf
aaa
push
add
sub
sbb
xchg
xor
cmp
xor
cmp
pushf
out
cwtl
je
adc
stos
and
mov
xlat
data16
clc
push
imul
mov
loope
lret
sub
int3
pop
xor
dec
and
or
lea
lret
or
hlt
dec
aaa
cmp
pop
lahf
dec
push
dec
mov
or
imul
dec
mov
call
out
cltd
inc
pop
sahf
sbb
dec
imul
pop
pushfw
xor
test
in
cli
pop
pop
inc
inc
mov
and
sbb
mov
ss
jo
sbb
test
dec
or
add
xor
es
imul
sbb
inc
dec
dec
int3
adc
pop
inc
jne
adc
decb
test
imul
jb
cld
std
test
push
inc
push
xor
rcrl
sbb
shll
cmp
ss
cli
jge
js
leave
aas
cmpsl
lods
dec
jge
lcall
push
insb
pop
addl
ljmp
movsl
or
cmp
jp
mov
orb
adc
adc
fadds
popa
loope
and
movl
cmp
stc
stos
popf
lcall
or
popa
xor
hlt
mov
pop
pusha
xor
pop
loopne
outsb
or
mov
cmp
sbb
jmp
xor
jbe
push
or
loopne
scas
sbb
out
jo
push
sbbl
stos
in
cwtl
add
xor
lcall
fnstcw
sub
or
mov
push
cld
icebp
dec
pop
scas
lahf
xor
imul
pop
fs
ret
xor
mov
dec
inc
and
push
insl
sub
mov
shll
test
dec
shr
jge
dec
std
subb
sub
leave
jbe
std
popf
mov
lahf
test
aaa
popf
divl
aam
fadds
cmc
pop
pop
jecxz
cmp
or
ja
in
pop
mov
mov
mov
xchg
mov
mov
icebp
insl
jno
dec
ret
in
jmp
rolb
lcall
sbb
pop
ss
cmc
stos
movsb
mov
or
push
loope
xchg
adc
ss
jb
push
sub
and
push
int
into
inc
fsubrs
push
addr16
sti
bound
lds
xchg
sbb
mov
pop
and
or
cmp
sbb
push
push
iret
mov
xlat
or
cwtl
scas
or
xor
adc
fadds
jmp
faddl
jns
mov
cmp
mulb
test
sub
in
mov
sarb
fdivp
int
cld
dec
adc
stc
sub
shll
sub
add
jae
inc
sub
loop
aaa
jg
leave
push
adc
dec
gs
in
sbb
ret
lods
iret
cld
leave
mov
cmp
xchg
gs
inc
data16
pop
outsl
xchg
xlat
je
scas
inc
dec
mov
test
mov
mov
jnp
lods
inc
jnp
and
mov
mov
fcmovb
dec
ljmp
mov
jnp
js
pop
mov
lods
jb
xchg
adc
loop
lea
inc
aad
inc
sbb
adc
xchg
and
arpl
into
gs
inc
mov
gs
inc
mov
gs
push
rorl
jge
cltd
lods
outsb
mov
mov
or
leave
xor
xchg
pop
je
ja
xchg
and
je
arpl
stc
dec
repnz
into
in
std
clc
pop
inc
cli
repnz
popf
stos
roll
ret
scas
sahf
test
test
pop
daa
lods
mov
scas
cltd
stos
lock
idivl
in
sti
pop
xchg
test
insl
add
push
jge
fcomps
in
fsubrl
cld
repz
mov
mulb
test
push
dec
cmc
inc
test
mov
mov
pop
mov
fiaddl
pushf
push
cmpsb
add
cmc
add
mov
bswap
inc
cmp
pop
out
mov
sbb
enter
xor
sub
pop
adc
lds
ret
sti
das
fs
inc
scas
cmpsb
jmp
xor
mov
stc
mov
pop
fdiv
outsl
orb
mov
lds
sbb
call
inc
dec
fstps
sub
jecxz
loopne
movsl
and
loopne
test
lock
xchg
xor
push
sbb
loope
ds
stc
push
push
out
pop
mov
fdivrs
lea
imul
jl
sbb
mov
sbb
sarb
addr16
dec
je
xor
outsb
mov
adc
inc
out
pop
jge
xor
es
add
pop
push
outsl
lock
adc
cmp
jns
push
in
ds
outsb
imul
or
dec
fidivs
sahf
stos
addr16
xchg
or
bsr
jl
movsb
arpl
mov
into
sub
imul
popf
adc
adc
jge
js
sbb
pop
cmp
scas
scas
mov
leave
sub
fidivrl
sti
stos
mov
pop
mov
es
mov
rdtsc
call
inc
xchg
add
adc
popa
imul
fstp
pop
repz
aam
movsl
xchg
mov
jmp
xchg
fwait
cmp
lahf
xchg
popf
dec
popf
mov
jo
or
push
fisubs
cmp
push
scas
fwait
xchg
pop
jnp
fwait
mov
stos
scas
rcr
mov
sub
add
bswap
mov
mov
sub
cltd
fwait
sarb
ret
iret
pop
dec
int3
stc
sbb
enter
push
sbb
int3
leave
fsts
dec
ja
sar
cmp
addl
mov
imul
add
ret
and
pop
jge
lret
dec
sub
or
xlat
ret
lock
fnstcw
fsubl
hlt
pop
push
jg
inc
jp
in
or
mov
cmp
xor
or
rorl
test
ja
xchg
cmp
lea
fiaddl
inc
xor
mov
cmpsl
xor
jmp
popf
push
and
push
cmp
sub
sbb
jbe
pop
rorb
cwtl
dec
popa
cmp
mov
test
pop
and
pop
adc
inc
mov
out
aam
sbb
fnstsw
lods
aam
mov
ljmp
rorl
sbb
popf
out
sub
cmp
aam
mov
or
call
mov
push
mov
dec
int3
jnp
add
addr16
int
dec
jg
sub
cmp
stos
mov
xchg
call
sti
sub
add
jmp
xchg
rclb
mov
adc
cmc
stos
call
pop
xor
jbe
xchg
xor
imul
pushf
leave
out
lea
rolb
add
push
popa
lret
inc
add
mov
pop
xor
push
pop
into
cli
push
pop
xlat
lea
inc
or
popl
addr16
mov
and
sarb
ljmp
bnd
push
filds
pop
sar
adc
fdivrs
mov
lea
movsl
jb
fimull
cmp
mov
lret
mov
jbe
cmpsl
mov
fnstcw
add
in
xchg
aam
loopne
sub
cltd
cltd
mov
aaa
pop
sbb
xlat
mov
mov
int3
fldt
stos
mov
mov
fcmovb
in
out
mov
sub
add
jge
xor
pop
popf
sub
xchg
and
lock
mov
stos
rol
sbbb
pop
inc
call
inc
jne
int
inc
ljmp
pop
stos
dec
jmp
cltd
loope
add
jno
imulb
cmp
outsl
mov
push
das
fcoms
stos
jne
aaa
push
or
repz
push
sahf
test
sub
mov
cltd
pop
mov
cmpsl
xor
ljmp
shl
in
cmp
inc
inc
scas
ljmp
adcl
adc
xchg
jl
push
pop
nop
out
adc
stc
lods
dec
dec
fs
loope
hlt
pop
adc
and
sbb
sub
lret
fxam
test
enter
in
hlt
push
movsb
ret
mov
mov
fsubr
not
sbb
sub
dec
sbb
adc
xor
ljmp
das
pop
or
in
ja
xor
pop
push
sbb
jmp
mov
ds
fdivs
sbb
insl
stos
addr16
mov
xor
mov
test
std
aam
dec
cld
roll
lock
sbb
in
sbb
int3
aam
pop
lret
fdivr
fnsave
push
jnp
fs
movsl
mov
sub
fidivl
push
adc
repz
shrl
jnp
fcmovu
test
and
aam
loopne
call
js
fcomps
shr
bound
aad
push
aad
gs
pushf
data16
mov
ror
sub
notl
xor
sbb
test
call
int3
xor
loopne
insb
leave
push
stos
xchg
pop
outsb
fldl
fsubrl
cmpsb
mov
push
xor
jmp
aaa
jmp
mov
aaa
icebp
mov
dec
xor
insl
jg
xor
scas
jns
sub
enter
data16
lret
int3
mov
call
movsb
jno
jne
and
popa
stos
push
outsl
outsl
scas
pop
push
fcoml
pop
inc
jl
je
rolb
sbb
xchg
lret
je
jmp
popf
sub
or
lock
addl
sarl
add
movsb
sbb
movsb
push
mov
xor
push
and
cmp
clc
lret
sahf
sbb
shrl
xchg
pop
add
ret
cltd
shl
sbb
movb
dec
or
mov
mov
loopne
cmp
fdivr
stos
enter
outsb
in
out
lcall
jne
cwtl
sub
les
sbb
lods
je
popa
xor
inc
mov
and
xorb
test
fsincos
sbbb
test
mov
test
add
lret
jle
aaa
loop
jo
out
push
gs
pop
push
adc
cltd
xlat
rorb
sbb
lret
insl
cwtl
fs
pop
inc
cmp
jl
mov
jne
xorb
jo
vpackuswb
mov
pop
stc
add
aam
inc
aas
jle
test
jmp
call
ret
clc
mov
daa
and
test
lea
xlat
shll
lcall
ret
cltd
rol
adc
rcll
pop
sbb
adc
sub
sbb
xchg
in
xchg
outsb
clc
lods
cltd
sti
dec
xchg
pop
stc
sbb
aad
add
icebp
shll
sbb
sahf
cmp
lahf
or
sbb
in
testb
sbb
sbb
adc
mov
out
cmc
mov
dec
shl
mov
add
test
fsubs
dec
in
int3
mov
dec
shll
pop
xchg
cmpsl
add
inc
lock
sbb
mov
or
push
or
call
xorl
xor
cmp
mov
mov
shrl
push
jae
pop
pop
pop
mov
adc
ljmp
ds
sub
adc
les
aas
popf
int
adc
xchg
mov
lock
jge
mov
imul
addr16
aam
inc
sbb
inc
in
das
cltd
jge
stos
sbb
mov
adc
clc
xchg
jge
lahf
sbb
rcl
lahf
mov
fs
in
andb
aas
jb
mov
xor
cltd
rcrl
fwait
lock
pop
cwtl
mov
jle
aas
cmp
pop
sti
mov
mov
or
and
sbb
jne
in
aas
inc
repz
adc
pop
add
push
or
mov
jecxz
test
jae
sub
pop
lahf
mov
and
sub
jl
fisttpl
adc
sub
aam
popf
or
popf
sub
iret
scas
shll
in
das
test
dec
iret
mov
dec
sub
fmul
push
imul
aas
std
or
mov
aaa
push
loopne
adc
add
aam
int3
sarl
sub
mov
loope
add
cld
mov
in
or
icebp
lcall
pop
imul
bound
in
out
shr
sub
movsb
mov
sub
mov
lret
repz
aam
gs
push
mov
lret
aad
pushf
push
pop
cmp
mov
call
pop
cmpsl
fiaddl
lret
mov
mov
leave
loope
cltd
fwait
adc
xlat
or
lea
in
fsubs
hlt
push
sub
pop
imul
xchg
jnp
mov
mov
mov
stos
fisttps
or
and
xor
sbb
int3
ljmp
lods
ret
mov
out
ds
hlt
push
lret
out
jo
clc
inc
push
out
leave
xor
arpl
test
sub
js
cld
mov
pop
fsubs
filds
mov
fcmovnu
out
scas
xchg
js
and
mov
sub
scas
ffreep
rep
sub
xor
mov
incb
sar
nop
loopne
addr16
sbb
or
cmp
iret
jnp
or
or
movsb
pop
cmp
sarl
scas
or
and
mov
aam
xchg
xor
and
mov
std
sub
mov
fcomps
mov
jns
push
xchg
add
test
lahf
lods
mov
in
sub
cmpsb
mov
lret
das
cs
icebp
rcl
cmpsb
rorb
leave
ds
mov
mov
pusha
int3
push
mov
rcll
ret
and
roll
cmp
ds
push
pop
nop
movsl
xchg
rorl
fists
push
mov
add
pusha
shl
jbe
or
adc
jp
xor
stc
test
adc
jns
out
movsb
jns
jl
cmpsb
sahf
insl
xor
sub
sbb
hlt
imul
mov
out
jb,pt
sub
adcb
rol
xor
xor
ret
pusha
fnstcw
sbb
jbe
ss
outsb
imul
mov
movsl
xchg
pop
fstpl
scas
pop
test
pop
sbb
rep
sbb
adc
jecxz
das
dec
ds
aad
xchg
cmp
dec
sub
jp
jo
jb
sub
pop
bound
sub
mov
loope
mul
mov
aam
xchg
lods
mov
dec
lods
jno
mov
sub
lock
cs
addr16
adc
mov
cwtl
cmp
inc
xchg
insb
movsl
pop
xor
pop
sbb
sub
imul
mov
stos
dec
mov
cmc
dec
or
inc
stc
jmp
daa
fwait
cli
push
push
lahf
mov
xlat
or
lret
pop
and
adc
xor
shll
mov
std
outsl
adc
xchg
add
out
fisubrl
mov
bsr
fwait
xchg
popf
adc
xchg
aam
sub
out
or
loope
adc
call
pop
jnp
jns
daa
push
adcl
rolb
jl
gs
mov
adc
cmp
dec
jbe
pop
mov
hlt
outsl
iret
sub
leave
add
int
and
dec
cs
adc
mov
mov
xchg
int3
pushf
ss
inc
aas
leave
cltd
adc
dec
icebp
nop
out
icebp
inc
shlb
lret
in
daa
pop
fst
enter
cmc
cmp
jo
push
test
decb
iret
out
shll
iret
loop
inc
or
rclb
sub
cmpsl
fimuls
subb
cld
jnp
cld
sub
fld
inc
hlt
adc
mov
out
ret
cs
jae
jbe
sub
fxch
psubusb
push
add
in
mov
sub
or
mov
jae
or
adc
adc
cmp
test
jne
jo
adc
scas
fxch
movsb
xlat
push
das
shl
mov
sbb
xor
gs
xchg
mov
clc
jae
inc
mov
push
mov
mov
adc
mov
cmc
stos
cmpl
stos
sub
dec
in
adc
xchg
and
push
mov
out
imul
or
fucom
imull
aam
push
pop
ja
cmc
and
ret
aam
inc
push
cmp
push
or
fldenv
dec
and
lret
xchg
inc
cmp
pop
mov
test
mov
mov
or
or
sub
imul
stos
jecxz
jno
adc
push
cmp
cmp
sarb
sub
test
sub
mov
mov
mov
pop
popa
push
jg
daa
xor
cmp
or
xlat
sub
push
ljmp
movsb
arpl
frstor
out
enter
xor
mov
ljmp
mov
lea
addl
shrl
sti
jecxz
out
mov
mov
jo
rcrl
popf
aad
sub
mov
int3
xlat
sti
cmp
sarl
aaa
inc
loopne
js
outsb
cmp
xchg
gs
out
mov
and
xchg
add
mov
test
xchg
cwtl
add
mov
pop
shlb
inc
pop
loopne
data16
sbb
mov
out
stos
and
fucomip
adc
sbb
mov
adc
mov
push
inc
add
aas
add
sbb
loopne
add
xchg
add
call
dec
icebp
stos
push
fwait
ret
mov
jnp
repnz
mov
cltd
push
stos
mov
jmp
movsl
je
stos
fldt
in
mov
xchg
xchg
rclb
mov
insb
pushf
dec
pop
xchg
cmpsb
daa
dec
rcrl
add
stos
das
add
pop
cmp
sbb
lret
pop
imul
ja
imulb
xchg
repz
fwait
cmp
and
addr16
mov
inc
in
pop
xor
shll
loop
loope
test
push
fisttpll
or
ret
popa
stos
mul
stos
out
mov
xor
fistpl
call
push
push
fiaddl
icebp
mov
dec
in
lcall
jmp
xor
in
lret
or
inc
fwait
mov
sbb
scas
pop
nop
out
adc
loop
mov
movsb
dec
push
lods
cmp
addr16
shrb
sbbl
ljmp
ja
xchg
xchg
pop
addl
repz
fcoms
xchg
shrl
dec
test
sbb
outsb
jmp
negb
rcll
pushf
lea
add
inc
or
or
push
xor
leave
dec
fmuls
dec
jp
xchg
xor
mov
inc
dec
xor
sub
pop
dec
enter
mov
mov
mov
sbb
dec
dec
cmp
mov
jmp
mov
test
sub
or
ljmp
push
fcmovne
nop
sub
mov
int3
jle
dec
push
xor
cmc
dec
jne
movsb
into
xor
jle
popf
ret
int3
les
xchg
xor
mov
adc
mov
jle
das
mov
cmp
sbb
repz
lea
mov
rorl
sbb
aas
mov
jb
stos
leave
or
add
pushf
pusha
sar
dec
insl
pop
mov
add
mov
loopne
mov
loopne
stc
stc
jge
out
mov
jmp
les
jnp
aas
faddl
dec
adc
lock
adc
jp
sub
nop
mov
jmp
inc
lcall
lcall
and
push
lcall
js
jp
sbb
mov
call
adc
pop
mov
adc
or
cld
call
push
jns
fwait
movsb
loope
jae
mov
and
insl
iret
add
or
test
or
pushf
or
inc
add
cltd
lea
aas
jmp
jb
call
ljmp
sbb
repz
sub
xchg
inc
roll
rcll
insl
xchg
mov
push
sub
popa
adc
mov
xchg
add
jmp
sbb
pushf
cmpsl
cwtl
mov
in
fcomi
adc
xchg
push
and
mov
leave
aas
stc
jecxz
rol
aad
adc
scas
mov
ficomps
or
adc
cmpb
adc
fidivrs
push
xchg
pop
dec
jle
jnp
in
or
je
ds
inc
fwait
mov
sub
out
cltd
fstl
xchg
int3
add
xchg
jnp
movl
sub
push
cmpsl
or
bound
lcall
shlb
jecxz
imulb
xor
icebp
mov
pop
in
orb
sub
negl
aad
dec
or
fstpl
mov
sbb
std
push
mov
scas
or
xchg
ret
xlat
inc
enter
cwtl
dec
push
daa
inc
cmc
rorl
xchg
fwait
dec
loope
lret
shlb
cmp
mov
shrl
sbb
bound
cltd
lods
nop
sub
push
or
sub
sbb
loop
jecxz
movsl
add
fdivs
pop
fcomp
testl
lods
cmp
inc
pushf
rorb
js
lds
mov
mov
sub
pop
insb
sti
lret
insl
cld
pslld
fwait
rcrb
sub
adc
inc
mov
in
adc
cmp
bound
mov
dec
aad
pop
aas
mov
push
xchg
fs
jmp
jp
mov
stc
out
popf
inc
cmc
ret
mov
ds
sti
cli
ss
lods
in
sbb
mov
push
xor
cli
mov
fsts
and
dec
jne
push
out
mov
call
lods
pop
or
fistpl
sub
xor
into
dec
xchg
xor
fmull
das
std
jns
dec
jp
fldcw
mov
ss
xchg
fimuls
sub
in
cmpsl
lods
pop
out
xor
jge
int
bound
and
pop
mov
xchg
jns
mov
xlat
movsl
push
test
leave
pop
ret
jmp
sbb
push
fwait
decl
movsb
mov
xor
xchg
pop
jmp
fs
lret
ja
lock
popl
xchg
sub
ljmp
test
lret
or
std
arpl
jbe
xchg
sbb
sbb
daa
cmp
or
popf
dec
icebp
dec
sti
mov
sub
xor
cwtl
push
jecxz
cmp
jns
sbb
cmp
les
por
adc
fdivrp
xchg
sbb
out
fucom
test
pop
pop
or
mov
xchg
jo
stc
shlb
dec
mov
incl
sarb
lods
pop
sbb
lahf
popf
subl
push
fidivrs
push
push
add
jne
lret
mov
aas
adc
test
in
adcl
xor
sbb
loope
ror
bound
ljmp
inc
lret
dec
in
jl
fsubs
dec
xlat
sarb
loop
or
out
adc
outsl
push
hlt
loopne
jae
ds
loopne
dec
adc
xchg
push
lcall
push
mov
jnp
xorb
mov
sub
pop
int3
lret
bound
jbe
xchg
pop
or
xchg
pushf
jge
pop
out
adc
negl
in
jl
push
mov
nopl
and
jns
xorl
adc
dec
lods
enter
pop
mov
pop
sarl
mov
dec
dec
aaa
test
pushf
call
ss
leave
loope
fcomps
pop
sub
push
mov
xchg
mov
scas
adc
fsubs
js
xlat
mov
mov
inc
lea
pop
push
or
in
add
add
dec
push
repz
jns
sub
shll
sub
imul
pop
mov
iret
push
mov
or
mov
pop
lret
or
fdiv
imul
fs
xchg
aad
xor
insl
clc
mov
ss
sbb
inc
lahf
sbb
in
jbe
inc
out
mov
in
push
jg
mov
dec
jns
adc
cmp
push
cwtl
mov
int
mov
mov
cli
jbe
mov
mov
adc
mov
and
sbbb
jnp
sbb
ja
mov
loope,pn
dec
or
jo
fcoms
scas
adcl
leave
fsubs
cld
sbb
or
popa
sahf
iret
ret
cld
int
jge
sti
push
stc
hlt
into
cmp
cmp
push
jge
fistpll
ja
fimull
push
sbb
mov
insb
mov
xor
in
insb
push
pop
push
mov
xchg
rcrl
inc
mov
addr16
sub
sub
adc
adcl
stos
stc
movsb
fwait
pop
xlat
add
push
mov
mov
sbb
out
jmp
out
popa
xchg
push
jmp
rorb
jae
cmpsl
lcall
mov
push
pushf
addl
jmp
ljmp
adc
stos
and
push
add
sarl
lock
imul
test
mov
dec
stc
mov
xor
pushf
sti
cmc
sub
ficoms
aad
mulb
push
outsb
mov
ja
pop
fsub
pusha
test
jmp
inc
jp
mov
ficoml
andb
fmull
push
or
ficompl
cmc
lds
faddl
call
ret
rclb
and
mov
das
loope
nop
adcb
xchg
shll
or
mov
jl
mov
call
loop
lods
push
push
xchg
aad
loopne
enter
int3
ss
dec
lds
sahf
sub
mov
xchg
cli
or
mov
shlb
lret
xor
push
shrl
add
jmp
inc
jne
jne
fwait
ljmp
push
and
mov
daa
mov
sub
insl
and
or
add
or
or
or
jns
imul
adc
or
hlt
jp
xchg
xor
xchg
and
sub
and
xchg
pusha
xor
rclb
mov
jo
out
sbb
outsl
fildll
dec
hlt
adc
hlt
mov
mov
xchg
pop
enter
fmuls
adc
loop
adc
das
pop
insb
outsl
sub
loop
imul
and
int3
cmpl
fnsave
mov
add
loopne
arpl
xchg
fsubs
or
inc
xor
push
das
loope
call
xchg
roll
add
adc
xchg
cltd
sbb
mov
push
mov
jg
jl
stc
xor
lods
push
mov
cwtl
add
mov
cmp
dec
jo
jne
mov
lea
inc
mov
jecxz
cmpsb
gs
test
fiaddl
cmpsb
pop
push
repz
jnp
or
addr16
mov
lret
imul
cwtl
and
mov
jmp
cmpsb
and
jge
pushf
cmp
pop
xlat
xchg
push
jmp
push
popf
fimuls
push
add
or
fstl
repnz
sbb
fcmovne
and
std
jmp
xchg
pushf
mov
cld
repz
dec
xchg
arpl
pusha
jecxz
sbb
cwtl
lods
jbe
dec
je
ftst
movl
xchg
aas
lcall
rolb
les
adc
push
and
push
sub
sbb
inc
dec
mov
cmpsl
fwait
or
sbb
and
lock
fcmovnbe
mov
aas
int
in
lds
das
stc
and
clc
arpl
or
sbb
xchg
xor
jl
std
mov
inc
fsubr
pusha
dec
loop
scas
cli
popf
scas
and
sbb
pop
fcomps
mov
lcall
pop
adc
mov
test
or
ret
sub
sbb
sub
mov
sbb
pop
test
xlat
dec
mov
cld
jmp
pusha
cld
mov
jg
sub
jp
imul
cld
jbe
mov
xchg
cltd
jl
shl
xchg
arpl
stos
andb
adc
iret
stos
push
das
xchg
mov
mov
add
fnstsw
sbb
dec
mov
popf
out
mov
push
shll
mov
lock
scas
outsl
jecxz
xor
hlt
sub
das
cltd
stc
jb
ss
loopne
pop
or
je
add
xor
mov
adc
cltd
out
stos
adc
sub
or
adc
shl
sbb
mov
push
pop
jecxz
dec
jmp
movsb
rolb
xchg
push
lret
add
cmp
jl
pushf
pushf
cmp
ret
dec
inc
lods
cmp
push
in
ljmp
ret
pop
fcomps
subl
hlt
xor
pop
ds
sub
sub
dec
push
pop
sbb
sti
dec
lret
je
xchg
je
push
rcrb
fadds
xchg
aad
xchg
std
cmp
adc
xor
or
xorl
cmp
cli
or
pop
mov
gs
lret
push
ficomps
mov
ja
jp
jns
adc
xchg
ja
int
mov
cmovno
int3
fadd
imull
aad
data16
or
fists
jb
xchg
or
pushf
cmp
or
jle
jb
mov
and
pusha
rcr
rcrl
or
ja
sbb
add
std
out
mov
or
mov
les
scas
add
ret
xchg
push
aam
cmp
ret
cld
cli
mov
or
fmull
inc
sti
sbb
mov
mov
pop
push
jnp
or
ja
dec
push
pusha
addr16
fildll
shrl
jae
xchg
add
lods
inc
push
loopne
fstl
loopne
mov
adc
mov
adc
inc
mov
inc
daa
pop
lea
sahf
arpl
or
movsl
add
leave
and
enter
ror
lods
andl
je
push
jo
lahf
enter
lret
jg
mov
bound
fnsave
xchg
in
pusha
cmpl
loopne
push
test
xchg
mov
cmp
mov
mov
cwtl
dec
test
mov
rclb
cs
sbb
fdivrl
xor
xlat
loop
sbb
xchg
cmpsb
pop
pop
xor
xor
adc
in
and
mov
shr
jecxz
movsl
mov
mov
loopne
lahf
leave
in
loope
xor
sub
mov
jmp
jnp
loope
jno
and
jbe
adc
in
lret
cmp
jp
leave
lahf
adc
loop
rclb
add
and
xchg
lods
sub
sti
cmp
ficomps
mov
and
sbb
and
data16
sub
mov
in
test
shrl
shlb
inc
js
mov
cmc
test
mov
leave
adc
or
js
fwait
sub
xor
adc
cmp
pushf
mov
fcoms
mov
sub
lods
mov
icebp
stc
sbb
mov
mov
ja
mov
scas
mov
xlat
mov
repnz
out
clc
das
mov
leave
jecxz
test
lret
sbb
mov
mov
cld
rcrl
sbb
cwtl
into
mov
pop
les
in
test
sbb
stc
into
icebp
aaa
sub
hlt
cld
mov
and
jmp
cs
jns
out
lea
jno
sahf
sub
xchg
lock
sarb
jge
dec
jmp
cltd
das
mov
out
int3
cmp
or
push
jp
pop
or
inc
in
cmp
inc
adc
aad
xchg
adc
das
into
int
int
fucomp
fmul
outsl
pop
add
adc
jnp
sar
dec
add
cs
int3
mov
mov
leave
les
sub
lret
sbb
fisttpll
repnz
pop
sar
int
stos
lcall
loop
or
jns
dec
mov
sbb
inc
and
std
test
or
sar
inc
sbb
hlt
adc
fs
jl
inc
lret
out
ret
movsb
aam
dec
cltd
aaa
or
popf
add
cmp
lods
pusha
and
xchg
clc
in
aad
mov
lret
mov
dec
push
sbb
push
aas
jno
pop
jae
pusha
cmpsb
stos
lret
pop
leave
mov
cs
add
or
mov
add
or
sbb
mov
cmp
int3
sub
ret
dec
jno
inc
aad
sbb
leave
lret
stc
sub
lret
hlt
stos
aam
push
sub
scas
xorb
sbb
jg
or
pop
fs
lds
lods
sbb
push
fnsave
imul
cmp
js
sub
pop
mov
fstpt
rorl
add
add
dec
jmp
test
mov
js
push
mov
adc
pop
js
push
xchg
ror
jnp
sbb
mov
push
int3
pop
outsl
and
popf
das
sub
leave
mov
sbb
sbb
cld
in
or
out
movsl
push
lret
ret
mov
sub
pop
pop
rorl
popa
mov
aaa
mov
fisttpll
jl
das
cmp
stos
imul
xchg
mov
fisubs
sbb
lret
pop
ds
pop
shll
mov
rorl
inc
imul
pop
std
dec
ds
mov
mov
outsl
popa
sbb
iret
jns
cs
xchg
cmp
inc
ret
ror
or
xor
leave
inc
sbb
int3
mov
cli
mov
push
mov
fwait
das
pop
jnp
int3
jno
sbb
cmp
push
dec
subb
loope
lret
sbb
pop
das
popf
out
aad
into
stos
and
push
push
mov
and
push
fildl
mov
or
stos
lret
daa
call
jae
leave
inc
fs
imul
inc
adc
cmpsl
sbb
arpl
jns
stos
insl
add
sub
cmp
std
mov
mov
push
fists
mov
jmp
inc
mov
inc
mov
ficoms
inc
lret
mov
imul
sub
mov
xor
mov
pop
sub
aam
arpl
mov
sbb
jmp
cmpsb
fdivs
inc
jl
repnz
mov
cwtl
jmp
jne
in
fmuls
in
fisttpll
and
clc
xor
loope
shl
xor
push
int3
sub
jns
pop
rol
dec
rcrl
or
lahf
mov
pop
xchg
loopne
cmp
and
pminsw
adc
orl
mov
lods
pop
loopne
test
sti
shll
push
push
xchg
jns
xchg
test
cmp
push
and
ret
sbb
js
inc
pushl
lahf
mov
out
sbb
push
mov
sbb
cmc
test
shlb
aam
mov
jo
add
push
insb
sub
movsb
rcll
cmp
cmpsl
andb
mov
mov
push
lcall
xlat
out
push
mov
xor
adc
scas
frndint
stos
push
out
xor
shr
add
sar
loope
bound
mov
rorb
push
lcall
ja
in
rorl
inc
push
das
push
loop
cld
fcoml
dec
add
dec
sbb
mov
psrlq
leave
sbb
fmul
lret
fcomps
emms
insb
pop
or
cmp
jg
je
sub
shr
mov
pushf
lret
cmp
test
lds
push
imul
mov
jg
inc
stos
push
cmp
push
jecxz
shl
cmp
mov
popf
faddl
cmpsl
xor
stos
xor
hlt
mov
add
pushl
decl
cltd
push
sbb
xchg
mov
and
xchg
sub
ficoml
lret
js
stos
loope
pop
xlat
add
mov
jnp
imul
sub
and
mov
sbb
and
adc
stc
insb
sar
mov
mov
mov
adc
mov
fwait
xchg
js
cmp
sbb
sub
xor
scas
shlb
jmp
cwtl
jmp
mov
stos
mov
cwtl
sub
or
les
stos
popf
cltd
scas
mov
fcoml
mov
sahf
arpl
out
add
xchg
inc
sbb
out
jmp
sbbl
dec
add
rolb
loope
ds
mov
int
lock
enter
insb
shl
shll
sub
leave
ret
dec
test
adc
xchg
cmp
mov
stos
shl
lds
push
dec
insl
pop
lea
out
test
test
add
imul
out
inc
fcom
out
gs
pusha
mov
shll
or
mov
xchg
adc
push
leave
xchg
xchg
jecxz
xor
test
data16
arpl
xchg
ljmp
iret
jmp
pushf
cli
roll
jle
jle
inc
add
aam
mov
jg
sbb
mov
mov
pop
gs
divl
lods
enter
push
cmc
and
mov
fildl
in
lret
popa
std
imul
push
leave
mov
dec
fidivs
out
inc
ljmp
or
mov
call
aam
jno
or
sub
movsb
loopne
ret
xchg
mov
or
sbbl
push
aam
loope
cmpsl
sbb
fnstenv
ret
pop
and
loopne
and
lods
repnz
lods
shr
fstl
inc
dec
fnstsw
mov
loop
ljmp
adc
ucomiss
fmull
aad
test
jno
lret
pusha
mov
xor
mov
rcll
cmp
das
outsb
fnstcw
pushf
cmp
push
fdivr
scas
sub
mov
sub
aas
fiadds
inc
sbb
ja
bound
mov
negb
xchg
rcl
in
dec
jecxz
mov
mov
loopne
xchg
ftst
cmp
mov
xchg
into
sbbl
jne
outsl
inc
nop
jl
lods
cwtl
fs
dec
inc
adc
jnp
push
mov
js
out
sub
mov
cmp
mov
xchg
or
movsl
xchg
cmp
and
movsb
daa
test
mov
stos
cmp
pop
popf
mov
mov
dec
fsubr
lret
mov
or
and
sbb
mov
jns
add
and
jp
ds
push
mov
sub
stos
add
dec
jne
shll
mov
pop
and
sarb
cmpsb
cmp
cltd
xchg
mov
fdivp
sub
sti
lods
ja
mov
mov
sbb
fcomip
sbb
fmul
ret
sbb
out
inc
insb
out
cltd
out
dec
imul
sub
stos
cmp
insb
insb
fadds
sbb
mov
sub
jae
fsubrl
jecxz
pop
add
push
sbb
std
mov
or
push
mov
in
push
cmp
fdivs
ret
cld
mov
dec
stc
cmp
pop
push
ss
cmp
icebp
into
rcrl
pop
sub
pusha
adc
rcr
xchg
cltd
rol
push
jbe
lock
push
fs
adc
ficomps
and
jns
icebp
cmp
cli
in
push
jmp
pop
push
subl
push
mov
mov
in
mov
xorl
push
jmp
into
mov
leave
shrl
scas
adc
idivl
push
xor
jg
dec
cmpsb
xchg
adc
rcll
aas
xor
sub
fimuls
xchg
insb
add
pop
fisubs
jmp
stos
ficomps
xor
out
adc
das
aam
pop
in
int3
xchg
sbbb
in
cmp
push
scas
scas
cwtl
cltd
mov
shll
in
push
pop
inc
add
dec
in
fmull
sbb
mov
pusha
cltd
insb
pop
rcl
test
out
repz
in
pushf
inc
push
jecxz
xor
mov
cmp
test
jp
shrl
pop
addb
jl
and
loope
out
fsubp
push
pop
out
fld
pop
stos
mov
adc
jecxz
adc
cli
fsts
push
fdivrs
test
test
mov
sub
dec
dec
mov
sub
push
xchg
dec
fisubrl
cltd
stos
std
jp
nop
sub
adc
adc
mov
jl
xchg
scas
sbb
push
pop
je
mov
push
das
aas
je
cmp
in
scas
sbb
cli
fdivrl
mov
aad
mov
fistl
sub
jge
pop
adc
adc
jle
clc
sbbb
aaa
xlat
mov
arpl
fcom
xchg
and
sub
adc
cld
int3
imul
das
cmp
andps
mov
enter
mov
mov
lret
add
ljmp
xchg
adc
push
jno
sahf
fs
ds
adc
push
cwtl
xlat
sbb
mov
bound
fs
std
inc
sbb
adc
popf
push
fdivr
popf
pop
dec
xor
fstl
aas
dec
push
mov
adc
cmp
and
dec
push
xlat
cmc
outsb
and
xor
pop
mov
aas
imul
sub
divb
lcall
ret
add
adc
shl
pop
xor
rcrb
jl
sub
rol
dec
test
inc
icebp
cmpsl
call
inc
out
inc
sub
adc
out
jl
inc
push
cmp
jno
addr16
popa
fcomp
popf
sub
sbb
adc
xlat
xchg
outsb
pop
mov
insl
movsb
cli
add
cmp
lods
pop
pop
sbb
imul
sahf
push
or
jg
jns
mov
imul
or
push
int3
xchg
mov
push
lea
sti
and
push
push
inc
push
pop
inc
dec
add
cli
xchg
aam
xor
fistpl
cltd
stc
cli
sbb
dec
lock
test
out
popa
mov
mov
and
cmp
ret
repnz
lea
adc
sbb
insl
push
adc
pop
insl
out
jge
mov
js
dec
cld
or
call
in
and
shrb
loop
ljmp
push
roll
fs
pop
and
adc
cmp
fptan
pusha
jo
pop
out
or
xchg
in
ds
movsb
bound
adc
jmp
daa
dec
push
fcompl
and
xor
mov
jo
popa
or
xor
test
jp
push
repnz
les
mov
outsb
loopne
dec
imul
push
and
xor
push
rol
out
pop
xor
mov
das
pop
pusha
out
mov
lods
add
pop
arpl
aaa
jp
das
or
sbb
cmp
je
pushf
add
std
lea
dec
jbe
and
into
dec
xchg
push
xlat
punpckhbw
and
and
mov
push
aas
pop
jo
and
cmp
xchg
fiadds
das
push
es
jnp
sub
cmpsl
jg
in
jae
and
int
jl
in
test
out
inc
cltd
dec
je
fst
insb
mov
in
jle
pop
dec
stos
test
mov
jb
xchg
sbbb
inc
mov
jmp
adc
scas
and
outsl
call
je
sahf
into
xor
ret
es
pop
and
insl
loope
mov
imul
pop
incb
add
scas
outsl
jmp
scas
mov
push
gs
pop
jge
jg
dec
popw
pop
inc
pop
and
and
lahf
movsb
loopne
or
insb
fwait
inc
cli
add
jle
xor
cmp
fdivr
push
pop
test
pop
xor
mov
pop
mov
xor
jecxz
rol
xor
fnsave
je
add
insl
lods
xchg
pop
in
or
push
ljmp
lock
push
inc
ss
popa
imul
inc
pop
add
inc
xchg
imul
pop
xor
sbb
xor
inc
push
cmp
dec
jno
mov
xchg
test
add
jmp
pop
xor
fdivrl
test
jb
sub
pop
mov
lcall
push
xor
mov
jg
enter
out
aas
push
mov
cs
insb
mov
fstpl
dec
out
push
inc
inc
fwait
jb
insl
pop
and
xchg
and
adc
popf
fcmovbe
popa
mov
cmp
xchg
dec
cmp
testb
xor
pusha
arpl
bound
dec
jmp
mov
pop
lret
shl
jl
add
fidivs
mov
cmp
sbb
lret
stc
dec
jmp
mov
sub
andl
das
nop
cmp
dec
jne
icebp
aaa
aas
data16
in
push
push
pop
imul
push
pushl
sbb
jecxz
xchg
movsl
sbb
push
jp
imul
dec
add
sub
insb
in
sbb
inc
jge
and
xor
lret
ss
sbb
call
into
or
imul
xor
lret
cmp
js
jmp
addr16
mov
pop
fmuls
nop
bound
cmp
movsl
xchg
or
sbb
jg
jge
sbbl
outsl
sarl
xor
push
sub
es
sbb
adc
lea
repnz
add
pop
adc
dec
mov
push
or
sbb
arpl
xor
mov
fildl
pop
inc
pop
aas
fstpt
fs
add
and
mov
push
out
loope
mov
dec
scas
aam
mov
xor
inc
jg
lret
mov
xor
mov
loop
out
loope
lds
jp
ja
andl
cli
push
xchg
xchg
aas
mov
xchg
ror
cmp
jno
xor
ret
pop
dec
jp,pn
add
aad
cmp
mov
insl
pop
loopne
fisubrl
test
aam
cmp
push
rcll
sbb
call
pop
xchg
rcll
je
addr16
mov
stc
imul
sub
jo
and
aad
cmp
insl
pop
pushf
xchg
or
rcrb
xchg
lcall
adc
sahf
xorl
inc
and
popa
jae
sbb
sub
adcl
hlt
jp
sub
adc
xchg
sbb
sub
bound
in
std
ret
push
dec
mov
scas
icebp
add
pop
pushf
cmp
rol
dec
out
pop
and
cmp
adc
aaa
dec
imul
sbb
inc
sbb
stos
outsl
sbb
insb
movsb
fsubs
cmc
push
inc
andl
cmp
and
xor
mov
and
pushf
jns
add
out
xor
pop
inc
add
add
bound
sbb
or
jne
and
std
pop
imul
out
xor
push
mov
jge
dec
loope
pop
jbe
jno
imul
cltd
xchg
pushl
jge
sbb
sti
imul
jb
add
mov
adc
cwtl
jecxz
mov
xor
pop
sbb
pop
xchg
pop
jns
pop
dec
dec
pop
mov
cmp
dec
imul
xor
nopl
lods
adc
cld
clc
adc
ja
cld
mov
lret
icebp
insl
js
cli
jns
in
icebp
adc
hlt
std
pop
add
scas
dec
pop
lock
insb
cld
subb
aam
or
xchg
push
sub
mov
push
bound
or
lods
mov
lods
js
sbb
dec
hlt
lock
or
jnp
pop
scas
push
jl
adc
imul
jne
out
push
f2xm1
cmp
mov
mov
dec
push
sub
stos
xor
mov
lock
iret
xor
mov
insl
or
jl
sub
stc
outsb
or
xor
add
add
jge
dec
mov
fsubs
roll
mov
mov
imul
mov
loope
dec
push
mov
ja
cmpl
rorb
push
imul
xor
sbb
add
out
lea
cmp
sub
inc
adc
ss
mov
cmp
lods
inc
stc
stos
inc
dec
insb
stos
jp
jmp
push
xchg
inc
lret
rcll
iret
lret
or
lods
adc
push
xor
fildl
imul
mov
iretw
scas
mov
xlat
fimuls
bound
add
dec
repnz
lods
jmp
sarb
pop
add
mov
or
sti
insb
mov
aaa
repnz
jge
sbb
mov
shlb
outsb
loop
out
push
adc
aam
jg
mov
jns
bound
lds
shr
dec
clc
inc
mov
push
imul
sbb
sbb
add
inc
xchg
pop
cmpsb
adc
jno
repnz
subb
lods
ffreep
add
andl
adc
into
call
fistl
xor
pop
les
dec
mov
sar
pop
adc
mov
push
push
repnz
adc
in
bound
xor
mov
pop
sbb
rcr
insl
push
pop
dec
xor
cltd
sub
pop
mov
jae
mov
fistpl
insl
or
sub
aam
dec
mov
rcrl
imul
pop
scas
dec
stos
inc
add
mov
mov
or
out
lret
lahf
adc
fistpll
jmp
hlt
push
mov
xor
ret
pop
pushf
fisttpl
push
mov
js
pop
fdivrl
iret
push
outsb
mov
leave
js
out
add
or
sub
jo
cli
cmp
xor
sarb
pop
pop
cmp
cmp
mov
inc
aad
lret
mov
inc
xchg
mov
enter
mov
inc
andl
push
xlat
pop
scas
icebp
test
jge
lcall
pop
mov
cmp
xchg
xor
rcrl
adc
test
gs
push
ja
jg
dec
inc
and
push
or
roll
into
push
and
adcl
gs
inc
sub
pop
int
adc
rclb
adc
rol
popa
dec
mov
sbb
pop
pop
push
mov
adc
pop
inc
test
inc
outsl
push
shrl
pop
cmpsl
cmp
std
inc
and
sbb
pop
push
fdivrl
out
adc
testb
add
mov
gs
pop
sbb
stos
movsb
push
sub
cwtl
data16
div
sbb
call
loopne
out
mov
arpl
adc
test
out
mov
sub
fiaddl
out
repnz
adc
test
cwtl
cmpsb
jp
out
je
sbb
add
adc
out
ficoms
aaa
mov
repz
fisttps
fdivrs
mov
test
lret
enter
scas
lcall
add
pushf
lret
dec
repnz
sbb
dec
out
sub
sub
ret
fisubrs
sub
inc
repz
sub
sbb
sbb
lock
push
xor
xchg
rcrb
xor
mov
lods
stos
iret
jecxz
enter
pop
cltd
mov
fstpl
jmp
das
and
sbb
xlat
out
inc
jl
subl
mov
push
xor
fwait
rorb
lock
sub
xchg
ret
lods
pop
in
xor
add
mov
add
or
push
test
popf
inc
fldenv
fldcw
mov
aam
rcll
mov
stos
insb
sub
pop
adc
push
jmp
gs
insb
daa
out
fcoms
dec
es
or
shr
mov
aas
gs
mov
mov
mov
xchg
pop
sub
imul
jb
push
push
stos
dec
ret
jg
pop
rcrb
aad
and
xor
and
cmp
jge
incl
clc
pop
mov
lret
rcrl
pop
sub
inc
icebp
pop
outsb
imul
mov
mov
loopne
cmp
and
xchg
mov
cwtl
jle
aas
or
data16
sbb
test
sbb
enter
mov
arpl
sbb
and
cmc
xor
inc
jnp
ficomps
cmc
push
xchg
sub
in
imul
xchg
sbb
jne
pop
sub
ret
sbb
test
pop
shlb
jae
jbe
cmc
fisttpl
cmp
movsb
stos
dec
cmpsl
sbb
fnstcw
enter
popf
fsubrp
sbb
xor
sub
xchg
fiaddl
pop
cmp
xor
or
cli
dec
ss
add
sub
scas
or
cli
test
jo
mov
inc
ret
sbb
sbb
shll
mov
inc
popa
xor
add
add
imul
leave
pop
ficompl
clc
je
loop
cmp
nop
cld
dec
pusha
xor
add
pushf
inc
jo
mov
cmc
and
mov
insb
xor
jl
shrl
repz
sbb
pop
push
cmp
out
gs
enter
cmp
mov
cmp
xchg
ret
and
jbe
xor
hlt
dec
push
mov
jns
pop
aas
add
enter
lea
mov
popf
in
imul
add
mov
and
lea
pop
fmul
ror
js
xchg
aas
inc
lret
push
fldt
add
push
inc
stos
sbb
mov
rcrl
fsts
in
sub
lock
sbb
js
xor
jmp
inc
rcr
sub
cltd
pushf
in
push
pop
ret
adc
pop
sub
std
pop
std
inc
cmp
arpl
mov
sub
and
gs
lds
sarb
out
sbb
leave
lods
add
push
pop
rcrl
insl
lea
outsb
movsb
add
mov
je
jae
xchg
dec
sub
sub
sbbl
pop
adc
inc
out
clc
push
test
adc
mov
pop
fldenv
lcall
pop
sbb
pushf
test
mov
shlb
xchg
push
push
in
pop
hlt
adcl
or
lods
sbb
inc
ja
leave
adc
imul
bound
call
and
push
pop
jge
xchg
or
adc
lea
leave
fcompl
sub
cmp
sub
mov
sbb
aaa
pop
inc
pop
lods
mov
sub
or
stos
push
sub
out
mov
sbb
leave
jg
test
xlat
pop
ljmp
dec
mov
mov
and
push
pop
stos
jae
loope
shll
insb
vmovntpd
xor
lret
dec
inc
pop
dec
outsl
adc
xor
stos
das
test
push
sbb
inc
stos
int3
push
xchg
stos
sbb
setg
inc
in
in
lret
push
rol
lret
jae
into
daa
push
mov
dec
adc
mov
push
mov
or
faddl
jmp
inc
dec
adc
sub
jb
ds
inc
jnp
test
adc
and
out
fdivl
ljmp
daa
fisubl
push
jecxz
sbb
jae
imulb
out
and
xor
lds
mov
cmp
cli
ret
sbb
fstpl
lods
pop
and
add
add
inc
and
adcl
add
fstps
jl
inc
sbb
push
sbb
xor
aad
stos
mov
imul
shl
fcomps
aam
pop
and
popf
or
mov
pop
xchg
and
cwtl
int3
push
fsub
movsl
test
ret
lods
sub
inc
sub
sbb
ds
pop
dec
clc
ficomps
add
adc
fldcw
es
imul
dec
insl
sbb
les
cmp
dec
push
aas
outsl
adc
pusha
push
nop
mov
pushf
and
push
push
ljmp
int3
sub
rclb
jmp
ds
pop
outsl
ret
mov
int3
int
mov
mov
icebp
push
or
mov
aam
enter
insl
dec
adc
cmp
stos
sub
add
pop
sbb
hlt
popf
sub
push
ret
repz
xor
inc
inc
adc
push
pop
das
sahf
testb
push
fwait
adc
in
xchg
scas
mov
pushf
dec
cmpsl
jb
mov
test
bound
inc
push
sub
and
push
lock
push
xchg
in
in
adc
sbbl
rcrb
test
jle
iret
fdivrs
clc
push
sbb
out
dec
jl
jle
pusha
ss
push
mov
in
insl
ds
lret
addr16
mov
dec
pop
cmp
lcall
cmp
jmp
push
sub
aas
out
test
lea
mov
pop
and
shrl
inc
sbb
adc
sbb
mov
push
daa
and
and
stos
add
mov
test
xor
and
push
mov
pop
sahf
lock
out
cmpsl
pop
les
call
int
sbb
sti
pop
loopne
clc
test
mov
pop
xor
cmp
mov
rcll
mov
xchg
je
sub
lret
bnd
das
cmpl
inc
iret
jmp
and
mov
in
add
daa
cltd
test
xchg
in
or
mov
pop
fstpl
inc
idivb
adc
enter
sub
je
mov
sti
lds
sbb
sbb
xchg
outsl
pop
cli
mov
inc
das
xchg
sbb
or
call
cltd
cmpsb
dec
add
or
faddp
mov
and
int
jmp
das
mov
sbb
pushf
popa
inc
and
and
mov
mov
jns
lret
ret
sub
jne
mov
mov
fidivs
pop
jecxz
imul
xor
hlt
ss
shll
stos
pop
sbb
and
cltd
test
mov
sbb
testl
bts
xor
mov
xor
and
xor
or
add
sub
stos
dec
push
push
sub
adc
add
sub
popa
loopne
cmp
xchg
lretw
dec
lock
out
dec
pop
sub
je
mov
inc
pop
cld
arpl
jg
xchg
in
push
ss
and
sub
sbbl
xchg
xor
fimuls
adc
iret
dec
popa
pop
xorl
sbb
je
sbb
sbb
mov
mov
fcoml
inc
fnsave
out
xchg
shrl
int
inc
fs
loope
cli
rcll
push
and
ret
pop
scas
dec
mov
push
daa
lret
fs
jb
and
inc
xor
lret
test
pop
sub
xchg
xor
sub
ret
push
inc
or
and
xchg
insb
adc
das
mov
rcrl
aaa
cwtl
lret
mov
ret
pop
sbb
jp
inc
and
es
pop
sub
loopne
aas
iret
fdivp
sub
cld
insl
sub
movsb
imul
and
pushf
pop
jg
enter
sbb
lea
cmp
sbb
sub
jnp
ds
out
pop
mov
cmp
fisttpll
pop
sti
sub
jmp
or
jmp
adc
pop
testb
dec
fdivrl
mov
pop
sub
inc
pop
test
sbb
or
push
dec
cmp
fs
loop
mov
adc
pop
jp
sti
in
sbb
jae
int
add
xchg
shlb
inc
repnz
inc
test
sbb
scas
add
jmp
xchg
aad
lcall
enter
iret
leave
loopne
push
mov
wrmsr
jbe
enter
gs
test
pop
shrb
cli
fadds
inc
call
orb
mov
sbb
jge
pop
fcomip
jb
sbb
stos
loope
pop
fldl
fiaddl
test
and
fidivs
sub
dec
xorb
cltd
cwtl
ret
and
into
sbb
inc
adc
lret
int
mov
add
xchg
movsb
stos
xchg
sbb
movsl
jb
fucomip
jp
enter
scas
ss
inc
mov
push
clc
int
outsb
in
stos
repz
ja
sbb
pop
sbb
or
push
jmp
jo
inc
cmp
jmp
scas
into
ficoms
popa
dec
call
sbb
stos
mov
inc
gs
cmpsb
jmp
add
popf
ljmp
push
dec
ret
shlb
push
or
jb
outsl
dec
sbb
imul
mov
in
mov
sub
sbb
xchg
pop
sub
sti
dec
iret
lret
adc
jne
mov
icebp
pop
movsb
es
xor
aad
sub
sahf
pop
icebp
movsl
stos
outsl
cmp
sub
lods
pop
hlt
jle
lret
and
or
xor
movsl
add
stc
cmc
mov
mov
popf
ficoms
mov
sub
xchg
add
loop
mov
add
sub
mov
das
fdivr
push
addb
adc
inc
cmp
inc
sbb
enter
cmp
je
mov
enter
and
shlb
and
cmp
inc
cltd
fnstcw
mov
stc
adc
test
add
sbb
negb
inc
sbb
cmc
cltd
rcrl
lret
sub
sub
push
test
std
in
nop
std
cmc
rcrb
push
jmp
fistps
add
fdivr
or
icebp
lea
repz
in
or
sahf
push
out
pop
lcall
mov
xor
jns
adc
fsts
popa
aam
cmp
movsb
and
incb
sbb
fs
and
test
cmp
pop
xchg
sbb
mov
push
popa
inc
pop
mov
sbbb
mov
and
popa
sub
imul
xchg
je
mov
fisttps
lock
mov
icebp
sub
aas
and
cmp
mov
jl
mov
and
stos
mov
outsl
or
imul
movb
out
lret
std
inc
cmpsl
mov
cmpsl
div
or
scas
pop
mov
or
push
lret
scas
icebp
scas
xor
xlat
es
inc
popa
xchg
sub
cmp
jl
push
lock
repz
popa
dec
or
push
sub
add
enter
inc
push
test
or
lods
and
jmp
mov
imul
lret
popa
mov
int
pop
pop
icebp
pop
push
mov
loopne
mov
jnp
pop
pop
sub
fdivrl
or
pop
sub
int3
in
inc
iret
sahf
fldt
sbb
dec
sub
and
pushf
stos
or
scas
sub
sbb
addr16
ret
gs
xor
outsl
xchg
and
push
cmpsb
sub
scas
xchg
stc
inc
fcoms
bound
mov
cmpsb
movsb
mov
das
cmp
aam
pop
sub
push
clc
pop
cmpsb
nop
out
sbb
test
dec
mov
mov
cmp
cli
sub
fsubrl
xor
ss
jne
push
imul
aaa
lods
sti
pop
pop
add
push
hlt
jecxz
aas
sub
scas
pushl
call
mov
imul
test
inc
sub
sub
xchg
jnp
sbbl
lock
jmp
jecxz
mov
mov
push
sbb
sti
jo
xor
xor
fs
xchg
xor
out
addr16
sbb
and
dec
aad
mov
sub
dec
mul
cmpb
or
sbb
int
inc
sbb
outsl
dec
add
lsl
mov
ret
adc
lahf
imul
enter
pop
sub
pusha
repnz
xchg
imul
lret
sarb
mov
ja
mov
pop
mov
ss
fists
mov
or
sub
imul
cltd
xlat
std
outsb
sbbl
mov
pop
push
xchg
cmp
mov
cmp
mov
adc
mov
xor
cltd
adcb
int
sub
jns
jbe
rcrl
mov
pop
mov
test
inc
fidivrl
cmp
int
loope
mov
data16
test
fcoms
jge
hlt
insl
clc
xor
sbb
sbb
pop
jnp
insb
rcrb
sub
jp
pop
xchg
mov
xlat
pushf
xchg
sbb
rclb
scas
je
sbb
ficomps
inc
aas
pop
push
push
rclb
into
sbb
cmp
jl
mov
shl
mov
pop
pop
push
enter
subb
imulb
sbb
mov
xor
shl
cmp
fbld
jge
inc
in
push
xchg
or
not
jae
sub
ljmp
ret
push
div
cmp
dec
xlat
ds
xor
das
cwtl
outsb
int
lcall
cmpsl
adc
or
mov
inc
outsb
call
pop
mov
push
data16
pop
test
jne
jmp
loop
xchg
pop
add
fisubrl
and
gs
fs
jmp
xor
jecxz
das
mov
rolb
and
jb
mov
sbb
mov
loope
cmpsb
sbb
mov
inc
pop
push
fsub
cmp
and
ja
jne
shrb
cs
jo
push
popf
inc
dec
push
push
lock
xor
cmp
mov
cmp
xchg
mov
lea
in
mov
xchg
das
loope
mov
aad
cli
pop
movsb
xor
cmpsb
outsl
js
lds
adc
out
ror
adc
mov
ds
pop
lods
insl
mov
dec
aas
push
lea
cmp
rorb
or
inc
sub
adc
xor
pop
movsb
das
fs
or
add
imul
out
mov
adc
cmpsb
inc
and
loope
pusha
jne
in
mov
jmp
cmpsb
test
push
test
mov
test
mov
mov
cmpb
jp
sti
dec
xor
dec
das
shl
shr
pop
ljmp
repnz
sbb
or
cmp
dec
pop
sbb
or
sbbl
or
mov
push
pop
and
outsl
pop
ret
xor
sbb
fnstenv
cwtl
push
mov
jbe
fwait
in
adc
inc
xlat
lods
dec
cmp
sub
cs
aad
imul
jl
and
push
pop
lods
in
seto
mov
sbb
call
test
les
sbb
cltd
repnz
rol
mov
fimuls
int
and
xor
ret
inc
and
dec
mov
xchg
sub
mov
inc
andb
cs
sub
popf
jbe
stos
push
pop
inc
les
adc
rcrb
cwtl
test
jnp
ja
aas
out
ljmp
add
fbstp
mov
imul
popa
addr16
push
rcrb
add
in
adc
dec
cmp
or
daa
cmp
lea
adc
jne
pop
xchg
xchg
push
neg
pop
sub
push
push
xor
xor
lret
or
clc
imul
ja
add
rcr
lods
mov
int
ficoml
bound
sub
sbb
xchg
ja
inc
add
sub
outsl
fsubr
sub
je
sub
fwait
xor
sbb
fwait
jl
xchg
xchg
in
stos
sbb
fwait
loope
hlt
test
sbb
loopne
add
rcr
and
jmp
shr
adc
in
std
or
push
pop
xchg
int3
mov
mov
or
fsub
lock
sbb
in
shlb
or
mov
arpl
or
rolb
dec
or
into
ror
mov
pop
scas
pop
sbb
adc
pusha
enter
imul
mov
push
sub
xchg
out
mov
clc
sub
test
lods
xor
jg
insb
push
out
pop
and
dec
sub
jnp
icebp
sub
ljmp
ret
iret
sti
adc
les
pop
pop
push
cmp
imul
add
aas
icebp
je
lea
cmp
sub
mov
sub
xchg
pop
xlat
ss
loopne
jno
leave
loop
and
cld
ljmp
mov
jmp
sub
ret
mov
sbb
fimuls
mov
push
clc
shlb
push
clc
loop
out
adc
pop
jmp
jnp
mov
xlat
lock
add
xor
mov
or
mov
add
sub
add
filds
mov
mov
aas
imul
and
or
xchg
inc
sahf
or
ds
popa
adc
jp
or
lea
ja
loope
xchg
shl
testl
inc
into
cltd
fnstcw
dec
push
mov
push
enter
cmp
xchg
das
add
das
je
fbstp
jo
fimull
in
mov
sub
pusha
test
mov
incl
sub
inc
in
pop
sbb
add
imul
out
lret
pop
popa
xchg
add
fucomp
sub
iret
div
mov
repz
jle
mov
and
dec
and
sub
or
cmp
shl
or
cld
dec
int3
or
int3
mov
jecxz
or
aam
xchg
out
bound
push
sti
jl
cmpsl
fistl
mov
scas
lcall
sbb
and
mov
sub
sub
lcall
fwait
jl
ret
cmp
xor
cmc
ret
xchg
call
add
xor
stos
dec
push
cli
rorb
ds
xchg
andl
sbb
lea
mov
imul
in
xchg
pop
enter
lahf
cmpsb
in
ja
and
movsb
testb
mov
nop
sub
outsb
test
xchg
mov
fiadds
and
adc
adc
push
cmpsb
xchg
stos
stos
sbb
in
or
cmpsb
and
pop
imul
das
aad
call
stos
mov
rcll
mov
pop
xor
enter
cwtl
mov
cli
xchg
mov
leave
lahf
outsb
mov
add
dec
push
sbb
in
ret
cmp
and
std
subb
inc
sbb
adc
das
int
add
sub
frstor
sub
jg,pn
pop
jp
ja
fs
xchg
pop
lock
shll
or
and
sbb
cmpsl
sub
jns
aas
inc
inc
or
in
xchg
clc
int3
push
mov
push
lods
out
xchg
push
roll
test
adc
mov
jl
out
adc
es
ds
jmp
inc
xchg
mov
ss
mov
out
mov
out
insl
dec
fstpl
xchg
shlb
les
add
xor
sbb
jbe
push
or
test
negb
xchg
mov
cmpsb
in
aam
aam
lock
pop
jb
jo
jns
push
in
fsubrs
pop
jle
stos
mov
rcll
cmp
mov
pop
lcall
lea
or
fistpll
insl
in
pop
pop
int3
into
dec
sub
mov
sahf
cwtl
lret
lcall
push
dec
fwait
enter
stos
push
test
cmpsb
lea
and
dec
pop
sbb
mov
push
pop
jp
js
cmp
cli
sahf
js
jge
cwtl
ljmp
sbb
nop
repz
adcl
cmpsb
pop
xchg
jno
pop
addr16
sub
imul
sbb
sbb
mov
push
sub
cmpsl
xlat
xor
jl
cmpsl
cmp
cmp
mov
sub
es
push
call
loopne
pushf
and
loope
je
adc
fdivrp
xor
sub
test
scas
inc
mov
add
sub
adc
int
and
out
arpl
fidivrl
ret
add
adcl
inc
cmp
inc
vminps
jg
add
popf
mov
push
dec
test
imull
enter
lods
aas
jl
push
pop
cld
insl
and
pop
cmp
xor
js
scas
inc
sbb
and
mov
or
dec
inc
jo
mov
sbb
adc
inc
ret
imul
repnz
lods
ret
into
lahf
push
mov
fwait
ds
mov
dec
add
daa
pusha
or
jns
jb
pop
pop
ja
rcll
xor
aad
fst
enter
fcmovb
jge
adc
add
sbb
fwait
imul
sbb
loopne
xor
setne
out
bnd
push
das
gs
push
enter
outsb
mov
dec
fdivs
les
xchg
fcmovb
xor
push
in
cs
outsb
in
nop
imul
js
sbb
adc
rcll
lea
cmp
xchg
dec
xchg
add
ja
nop
push
jbe
ss
lds
fidivl
icebp
sub
and
mov
cltd
mov
pushf
push
les
rcl
sub
lods
ss
mov
pop
cli
pushf
jno
pop
in
ja
or
in
jno
aam
bnd
imul
ja
and
pop
jge
dec
pop
aaa
iret
xchg
andb
inc
lods
mov
dec
ja
in
pop
xchg
xchg
clc
xor
pop
lret
add
loope
test
push
jne
xchg
in
inc
out
adc
movsl
cmc
pushf
nop
cmp
add
inc
lret
lods
xchg
gs
cmpsb
dec
cld
jg
push
mov
mov
xor
in
pop
and
rcrb
test
xchg
rolb
adc
test
mov
adc
cmp
daa
mov
fldenv
inc
out
and
xchg
adc
xor
pop
or
adc
xchg
add
push
mov
int
enter
mov
movb
scas
and
mov
push
xchg
add
xchg
cmp
roll
sub
and
jge
ljmp
lret
mov
dec
push
mov
dec
mov
sub
call
pop
sbb
push
and
out
adc
mov
sub
jb
xor
loope
outsl
jb
in
dec
sbb
cs
int3
mov
outsl
or
in
bound
pop
cli
shrl
test
fnstenv
and
add
std
xchg
mulb
and
cli
mov
repz
sbb
mov
mov
mov
and
sub
pop
test
pop
fdivs
sbb
inc
int
adc
xchg
pop
adc
pushf
ret
test
rcll
sbb
xchg
sbb
mov
enter
inc
mov
lds
mov
data16
mov
mov
inc
cmc
xor
push
enter
inc
stos
loopne
cmp
pop
popa
ret
cmp
scas
rolb
sub
pushf
add
xchg
jnp
or
sbb
sbb
je
addr16
or
jle
js
inc
imul
xor
cmp
loop
mov
arpl
ret
shll
pop
das
int3
pop
pop
jno
cld
xchg
cmp
sahf
int3
insl
cwtl
xchg
das
inc
xor
push
test
cli
jne
xor
test
xor
or
mov
leave
out
loope
push
mov
iret
arpl
mov
or
push
and
jmp
add
jb
sub
out
pop
dec
sbb
fsubl
sbb
daa
in
sub
dec
movsb
mov
cmp
jne
js
out
enter
xor
mov
dec
push
xor
inc
movsl
cmpsb
jecxz
jmp
out
inc
nop
pop
adc
mov
popf
fwait
rcr
lret
cmp
int3
pop
inc
adc
repnz
repz
lret
mov
inc
sti
fwait
and
int3
scas
stc
lahf
push
cmpsb
xchg
adc
sbb
pop
cld
lret
addw
popa
mov
mov
es
popa
mov
push
pop
xchg
push
arpl
rolb
js
sbb
pushf
stos
sbb
push
sub
add
xchg
hlt
pop
fidivs
shlb
dec
shll
or
push
ja
bound
inc
push
arpl
ret
adc
sub
aam
fldl
pop
and
sbb
and
ss
insb
shrb
scas
arpl
scas
daa
jns
sbb
pop
sub
xor
add
cmp
mov
mov
sbbl
fdivl
jnp
movsb
cmp
pop
inc
xchg
cmc
adc
pop
push
test
sbb
adc
mov
mov
enter
into
push
dec
xor
xchg
sub
daa
xor
mov
jmp
repnz
pop
cld
or
cmp
aam
sahf
pop
sbb
cmp
iret
sbb
stos
not
mov
int
icebp
bound
and
rorb
stos
mov
adc
mov
xchg
mov
popa
notb
gs
adc
add
insb
xchg
xchg
mov
clc
sarb
adc
lea
cmp
mov
ret
xor
fcmovne
sbb
je
int3
jns
add
pop
jg
mov
push
pop
call
xchg
jp
loope
push
ss
jns
sbb
rorl
sub
jp
sub
pop
in
loop
mov
add
cwtl
and
out
mov
das
test
dec
fisttps
call
lds
push
out
xchg
add
pushf
in
test
icebp
inc
int3
mov
gs
xor
cmp
mov
cmp
and
fwait
jl
popa
aaa
add
pop
xor
xor
jbe
lds
inc
and
pop
loop
subl
lahf
insb
xchg
jmp
insl
cld
sub
mov
cmpsl
repnz
rorl
xor
xchg
pop
sbb
sub
ret
mov
pop
div
xor
sarl
pop
fcoml
sub
cmp
or
inc
push
movsl
cmp
push
push
add
insb
or
call
popa
inc
test
xor
mov
flds
inc
test
mov
test
inc
xchg
movsb
hlt
mov
dec
shlb
cmpl
jnp
in
ret
out
sbb
mull
and
leave
test
cmpsb
test
int
mov
mov
insl
je
xchg
mov
inc
push
pop
fstpl
sbb
lahf
sub
xor
pop
jecxz
push
mov
jns
xor
lock
push
mov
cltd
aas
imul
out
push
shll
jb
xchg
rol
mov
push
or
dec
cltd
stos
dec
arpl
enter
icebp
out
repz
pop
movsb
clc
and
sub
jnp
imul
js
adc
inc
push
or
jns
aam
enter
jle
inc
mov
test
enter
adc
mov
mov
sti
jle,pn
sub
push
dec
hlt
push
shll
shrl
stos
xor
mov
ds
jno
call
fsubl
inc
cwtl
in
xchg
pop
dec
test
push
fdivl
test
ljmp
sbb
sbbl
or
mov
xchg
push
cmpsl
jl
cmp
divb
adc
repz
pop
pop
pop
xchg
pop
add
shlb
popa
ljmp
rcrl
adc
jmp
test
and
ljmp
movsl
add
mov
cmp
jb
ret
pop
lcall
lods
sub
push
jg
fxch
aas
sbb
xor
fstl
push
in
fsubr
xor
add
and
dec
mov
repz
adc
xchg
pop
add
inc
lret
add
mov
mov
mov
hlt
xchg
jge
cmp
jg
ljmp
shrl
or
pusha
xchg
xchg
test
mov
imul
in
sbb
mov
add
inc
rolb
adc
mov
xor
lcall
sbb
mov
ret
imul
mov
pop
xchg
mov
dec
insl
push
lods
movsl
or
out
es
adc
jp
les
scas
sub
mov
cs
adc
divb
sub
mov
insb
mov
mov
push
nop
mov
jb
push
push
hlt
imul
ret
imul
fmull
popf
clc
outsl
bound
pop
xchg
sahf
in
loopne
mov
xchg
or
imull
sub
pushf
jmp
mov
lret
popa
sub
mov
sti
sub
adc
or
pusha
and
pusha
cmpl
into
adc
push
jp
cltd
or
jecxz
mov
movsb
xor
pop
sbb
das
xor
and
jns
mov
adc
jb
add
mov
aad
jno
or
xor
xchg
xor
xchg
push
xor
sub
rorb
or
scas
lret
mov
jb
sbb
or
lock
ds
xlat
in
mov
or
inc
add
pop
and
out
dec
sbb
repnz
ljmp
orl
adc
pushf
fwait
out
cmp
enter
dec
jle
xlat
cltd
or
sbb
xchg
fcomps
mov
sti
fisubrl
adc
pop
add
sbb
push
xchg
or
in
jnp
jb
dec
loope
cmp
int3
int
pop
dec
mov
movsb
or
mov
push
sub
ss
mov
cmp
pop
popa
and
xor
adc
pop
push
pop
jp
adc
jns
decb
popa
or
mov
push
or
mov
mov
enter
sub
popa
addr16
jno
mov
movsl
cmp
fdivl
es
fdivl
mulb
push
daa
jle
mov
xor
sbb
addr16
sarb
iret
lret
int
pop
pop
icebp
or
jl
xor
enter
loopne
loop
jp
popa
sbb
lea
mov
pop
fstl
add
imul
mov
mov
lcall
xchg
and
mov
outsl
mov
xor
rclb
pop
mov
nop
cmp
filds
pop
lcall
int
or
sti
push
subl
int
cld
mov
leave
lea
fsubl
mov
in
int
dec
xchg
push
aas
fildl
movb
popa
sbb
dec
sbb
outsb
arpl
pusha
push
pop
jnp
jl
jnp
fsubl
int
fisttpll
cmp
push
lods
xchg
bswap
pusha
gs
add
lods
ss
ret
xlat
data16
sbb
int3
mov
push
jp
cwtl
fucomi
scas
lock
jge
lea
movsl
ret
cmp
push
add
adc
jmp
lahf
sarb
cmpsb
lock
sbb
mov
add
push
jg
and
mov
negb
les
shrb
jg
lods
pop
test
pop
xor
push
sub
jae
and
push
inc
das
inc
pop
arpl
xchg
test
push
cmp
xchg
jp
jno
ljmp
fimull
and
adc
mov
cmp
dec
mov
sbb
out
cmpsl
cli
mov
call
mov
push
addr16
bound
stos
pop
adc
inc
push
push
mov
sti
movsb
and
adc
fcmovb
jl
mov
lret
push
mov
mov
xchg
mov
fisubrs
jge
pop
stos
xchg
and
sbb
dec
mov
aad
adc
fildll
and
jb
pop
lret
or
cmp
aas
outsl
mov
or
pop
nop
cmp
dec
ud0
mov
fwait
es
dec
and
sarl
les
xor
push
gs
lods
add
pop
movsb
pop
dec
lcall
aaa
bound
dec
push
dec
dec
dec
adc
or
je
push
push
push
js
data16
push
lods
sbb
repz
subl
dec
sti
popf
fsub
inc
int
inc
sbb
dec
lods
mov
pop
sbbl
popa
out
in
ja
jl
xchg
loop
sbb
add
fistl
daa
dec
jns
sub
test
nop
sbb
dec
fstpl
lock
lahf
push
pop
loope
je
or
jbe
xchg
cmp
cmp
xchg
xor
shr
arpl
and
mov
sub
jae
xchg
pop
subb
mov
data16
sub
and
adcb
add
out
mov
mov
xor
mull
add
mov
loope
adc
shrb
subl
sbb
jle
mov
dec
clc
stos
and
add
xor
aad
das
pop
mov
cmp
or
sub
xchg
mov
inc
pop
sbb
nop
testb
je
push
ficoml
in
adc
das
sbbb
lcall
jnp
sub
cmp
enter
mov
out
popa
jne
scas
sub
sub
rorl
cmp
mov
jns
cmp
stc
loopne
push
sbb
and
outsl
add
xchg
and
and
stc
xchg
mov
movsl
clc
jecxz
aaa
jmp
add
sub
xchg
pop
aad
scas
lods
lock
sub
cmpsb
jle
cmp
les
dec
adc
cmp
sub
mov
sbb
fldl2t
repz
lahf
hlt
loopne
out
lods
xchg
lahf
inc
xchg
test
pop
jbe
sbb
ret
aas
xor
inc
imul
jg
xor
ret
es
or
inc
xlat
cltd
hlt
sub
call
or
xor
xchg
aas
scas
pop
cmp
push
bound
in
out
mov
mov
stos
mov
mov
pop
xlat
jle
daa
cld
sbb
jmp
aam
vcvtsi2ss
aaa
shlb
jae
lock
pop
outsb
loopne
stc
push
cmpsb
mov
das
sbb
sbb
xchg
jae
dec
cmp
jns
mov
sbb
mov
aad
loopne
test
cld
push
xchg
adc
jp
mov
jp
repnz
shl
xor
add
add
fidivrs
xor
sbb
fstps
sub
pop
loope
push
adc
dec
cmp
and
fwait
and
add
loopne
xor
mov
push
icebp
movsb
imulb
pop
xor
sbbl
inc
out
push
hlt
cwtl
loope
jmp
sbb
add
fs
push
test
add
cmp
leave
sbb
pop
xchg
mov
sbb
and
in
mov
shrl
mov
and
pop
adc
dec
mov
cltd
pop
mov
divb
enter
mov
mov
xchg
mov
push
inc
scas
adcl
lds
inc
adc
movsb
enter
fwait
call
das
sbb
mov
push
mov
cmp
daa
lret
rclb
jae
add
pusha
enter
mov
int3
push
mov
jge
sub
jae
inc
mov
sub
aad
cmpsl
dec
and
outsb
jno
add
enter
push
pop
ja
sahf
jl
jge
and
repz
imulb
jge
dec
or
ljmp
jno
xor
jge
cwtl
mov
mulps
gs
es
add
jle
push
add
adc
mov
in
rolb
mov
repnz
jmp
and
sbb
push
es
lock
jns
lods
aam
addr16
movsl
bswap
adc
imull
rclb
aam
pop
pushf
mov
movsb
dec
popa
loope
adc
shrl
jg
stos
xchg
js
jns
cwtl
mov
nop
popa
fildl
jns
fdivrl
jge
test
or
pop
dec
push
or
mov
cli
jle
mov
mov
sbb
jno
in
mov
or
ret
ret
sbb
cld
fxch
lods
push
or
inc
ljmp
fcompl
idivl
mov
pop
or
mov
mov
sub
push
mov
sub
push
ja
pop
add
xor
mov
push
push
iret
push
leave
loope
pop
sbb
inc
xchg
or
lahf
inc
mov
hlt
sub
pop
pusha
cltd
aad
fwait
mov
fstpt
popf
jnp
pop
in
adc
fdivrl
dec
adc
cmp
cs
pop
add
js
mov
sahf
sbb
sub
adc
hlt
pop
mov
sub
mov
sub
jb
push
pop
adc
faddl
mov
pushf
push
jo
mov
or
loop
pop
mov
push
insl
cmc
push
adc
divb
in
es
aas
data16
mov
jg
dec
test
mov
cwtl
lahf
icebp
shrb
cmp
insb
mov
dec
dec
jne
sti
int
or
scas
mov
fisubrs
loopne
sahf
dec
or
jecxz
dec
push
add
sub
ret
fisubl
xor
cmp
fs
mov
test
js
jo
lods
loopne
mov
in
sbb
lcall
loope
pop
adc
fs
inc
add
and
ret
pushf
fisubs
sbb
push
lahf
xor
loopne
pushf
jbe
icebp
dec
sbb
mov
add
push
jns
shrl
repz
cmpsb
enter
xchg
push
push
daa
cmp
fldl
test
dec
mov
lods
cld
imul
enter
pop
stos
sbb
cs
push
mov
roll
fbstp
cltd
iret
jl
ret
iret
cmp
jle
rcrb
add
pop
push
enter
jne
push
jg
int3
xor
fistps
fmull
xor
pop
icebp
push
mov
jb
in
mov
loop
cmp
xor
sbb
out
cmp
cmpsb
test
ja
adc
cmp
push
stc
in
or
scas
fldt
das
inc
lock
push
jns
out
mov
pop
mov
or
push
cmp
xchg
gs
lcall
jo
pop
imul
or
cmp
mov
aam
push
test
lods
xchg
pop
jbe
add
mov
into
push
sub
sub
sub
and
pop
dec
fnstenv
enter
pop
and
divb
mov
push
ljmp
test
out
lret
test
xor
and
loope
jb
and
mov
fidivrs
clc
mov
into
popf
lret
jp
dec
es
push
cmp
repz
lea
mov
inc
movsl
ja
sbb
push
ret
cltd
pop
cld
cs
and
stc
sub
fidivs
insl
inc
pop
mov
mov
mov
enter
jl
test
movsl
shll
out
sub
jecxz
xchg
dec
xor
lods
mov
sbb
jb
xchg
jo
fldt
xor
int
fldenv
adc
std
int3
push
nop
push
repnz
or
outsl
bound
jae
arpl
mov
and
add
mulb
pop
shr
mov
or
test
ret
xchg
xor
and
in
sbb
hlt
xchg
sub
setne
int
xor
repnz
stc
jns
mov
das
xor
or
fadd
xorb
lret
lds
mov
pop
test
mov
jbe
or
pop
cmp
push
js
out
push
int3
aaa
inc
mov
cmc
clc
inc
aas
pop
xchg
addr16
std
mov
test
jb
outsl
adc
cld
xor
aaa
mov
lock
cld
jb
fdivrs
inc
lods
jne
mov
sbb
mov
rorl
leave
adc
testl
cmp
sub
push
and
enter
fwait
hlt
fwait
xor
cmp
enter
add
outsb
cwtl
pop
mov
pop
adc
sahf
mov
xchg
inc
mov
int3
nop
mov
jb
ficoml
push
cwtl
int
inc
cmp
popa
or
push
push
add
nop
mov
test
and
fcmovnb
cmp
xchg
sbb
add
addr16
lock
negl
mov
and
test
ja
xor
outsb
dec
or
xchg
testb
mov
add
mov
outsl
lret
daa
cmp
adc
or
jnp
cmp
xchg
cmp
inc
ret
dec
rol
mov
movsl
xor
daa
int
fildl
enter
dec
ret
sub
and
inc
in
xchg
or
int
insb
movsb
mov
shrl
scas
daa
adc
ljmp
sbb
bound
adcl
xor
cltd
arpl
xchg
sbb
test
mov
sub
fs
shlb
mov
aaa
xchg
cs
cmp
cmpsb
sbb
cmp
push
test
and
pop
xor
sub
sbb
movsb
xchg
mov
adc
push
xchg
jns
xchg
int
sbb
sti
adc
pop
adc
pushf
sub
cld
cltd
mov
push
stc
sbb
iret
out
jle
je
sahf
test
imul
jno
cld
cmp
dec
inc
rcrl
enter
push
add
test
inc
decb
mov
in
jbe
clc
mov
adc
aad
push
lock
pop
aad
push
adcb
sub
sbb
and
adc
out
jno
ret
cmp
xor
xchg
fs
dec
in
add
jae
je
cmp
adc
push
mov
dec
and
sbb
cwtl
mov
ds
and
rorb
fldt
push
pop
pop
mov
pop
int3
xor
subb
sbb
stc
jp
and
jl
test
popa
aaa
lcall
or
shlb
cmp
inc
mov
out
sti
adc
mov
hlt
aaa
cmp
jne
or
and
and
outsl
add
push
test
cmp
and
sbb
inc
and
aam
adc
push
das
adc
dec
call
xchg
rcrb
shl
stc
mov
pop
fdivs
fldenv
xchg
enter
push
jl
push
sub
mov
cli
pop
or
dec
push
dec
pop
movsb
loop
pusha
push
sub
pop
ret
imul
notl
sar
xor
fucom
push
jnp
ror
jne
pop
jns
int3
pop
pop
xor
adc
jmp
repnz
add
loopne
frstor
sarb
and
jecxz
mov
xchg
mov
mov
fwait
pushf
inc
or
sub
pop
mov
jl
loope
push
sbb
movsb
cmpsb
out
pop
stos
sbb
sub
or
fisubrl
ljmp
mov
sbb
jno
pop
aaa
aad
dec
and
pusha
push
bound
add
imul
mov
daa
nopl
mov
pop
push
cmc
mov
js
jbe
xlat
xchg
mov
adc
dec
stos
add
pop
xchg
sbb
cmpsb
add
mov
pop
or
adc
lods
test
insl
fwait
cmp
rol
out
push
mov
jmp
in
shll
push
jmp
sbb
mov
push
lcall
push
out
je
jge
lcall
pop
sbb
cld
xor
aam
jae
or
jle
push
mov
mov
pop
add
cmpsb
fsubs
adc
pop
inc
mov
pop
jmp
gs
in
adc
xchg
xchg
popa
inc
xor
stos
imul
dec
push
lcall
fst
je
or
sub
jp
xor
rcrl
push
mov
mov
push
cmp
insl
pop
push
pop
adc
sub
or
call
pop
cli
or
pop
dec
sub
dec
sarb
out
dec
mov
or
cmp
movsl
mov
sbb
mul
je
stos
aaa
hlt
add
push
divb
or
push
sbb
sub
insb
iret
imul
adc
imul
lret
gs
sbb
arpl
shll
outsl
cmp
call
mov
lret
dec
add
inc
jg
jb
outsb
push
dec
adcl
jns
pop
push
jp
push
sub
mov
nop
cld
jo
mov
inc
sbb
in
into
and
mov
sub
mov
aas
dec
mov
inc
ret
test
sti
sub
aaa
outsb
int3
loope
scas
lea
and
pusha
mov
pop
push
aad
mul
cmp
pop
rcrl
out
xor
mov
lea
enter
or
jge
add
lret
add
dec
ja
js
inc
cwtl
out
pop
push
std
jo
repnz
xor
fbstp
push
bound
iret
insl
icebp
sbb
sub
out
add
pop
mov
sub
cmp
daa
mov
sub
mov
ja
and
pop
cmp
test
or
out
inc
pop
sar
mov
mov
shrl
test
push
add
dec
lret
mov
add
jp
xor
jge
leave
push
in
out
jg
mov
mov
arpl
sub
aaa
push
out
adc
xchg
test
xchg
sti
or
arpl
aad
lods
outsl
shl
add
and
cli
push
xchg
hlt
fistpl
mov
push
push
jne
or
sub
push
jae
int3
hlt
aad
fs
xchg
sbb
cmp
outsl
pop
add
dec
or
sbb
out
add
pop
movsb
sub
xchg
lret
enter
inc
xor
imul
xor
fsub
cmp
das
in
sbb
lock
push
aaa
sbb
inc
and
icebp
xor
shrl
stc
adc
ret
lds
push
cmp
aaa
shll
rol
insl
mov
movsl
imul
repz
dec
lock
push
das
cwtl
sbb
pop
aaa
rcll
and
mov
or
call
adc
mov
stos
nop
movl
jl
adc
xchg
fisttpl
adc
in
push
sbb
mov
lock
in
stc
das
enter
jmp
pop
daa
or
cmp
outsl
jp
js
bswap
lds
aad
into
dec
loope
bound
cmp
imul
out
shrl
pusha
int3
sub
jge
and
insb
mov
leave
add
sub
or
inc
aam
sbb
imul
sub
sahf
inc
in
dec
push
dec
lcall
sub
icebp
orl
push
lds
sbb
xor
sbb
sti
inc
ljmp
std
inc
arpl
and
adc
loopne
aas
mov
stos
add
out
jbe
inc
adc
pop
sbb
in
jb
in
jns
cmp
jecxz
aad
into
jns
mov
pop
mov
dec
loop
push
jne
test
xor
fisubs
and
das
mov
fwait
cmp
stos
xor
push
push
mov
iret
fldenv
adc
in
fmull
jo
mov
pop
or
int3
imul
sbb
mov
add
int
mov
adc
jmp
xor
in
ret
fistl
push
add
or
mov
add
mov
pop
aad
lds
sti
sub
push
or
mov
pop
sub
push
lcall
adc
and
push
push
mov
sbb
pop
cs
push
imul
adc
sub
lret
adc
push
and
mov
mov
pop
add
mov
pop
cmp
jmp
pop
and
fcompl
sub
dec
dec
cmp
mov
jns
mov
cld
and
or
out
mov
sub
lea
sbb
aas
add
xor
cmp
test
pop
pop
scas
jl
out
call
and
data16
xchg
repnz
xorb
sbb
mov
or
cli
mov
jge
pushf
mov
or
xchg
lcall
sbb
xchg
cld
enter
and
fsub
xor
das
or
dec
sbb
push
out
jnp
cmp
jmp
pop
or
mov
aas
push
pop
pop
ds
imul
jnp
popa
pop
sub
dec
lret
jns
sbb
cltd
aas
enter
sbb
ret
lcall
dec
insb
ret
popf
dec
in
dec
ljmp
out
int
test
mov
sub
pop
dec
and
lcall
dec
lret
mov
jg
cld
aas
adc
jno
and
andl
shll
addl
xacquire
sbb
movb
xor
sub
mov
pop
clc
add
pop
jo
test
sub
neg
fadd
insl
xchg
sbb
adcl
or
hlt
cli
and
cltd
sbb
add
enter
push
scas
les
enter
cmp
out
sub
pop
enter
icebp
sub
mov
test
mov
inc
ljmp
cmpsl
mov
mov
dec
push
stc
rcrl
dec
test
sbbb
mov
xchg
enter
lods
es
rcrl
mov
mov
push
inc
xchg
pop
pop
in
testb
popa
das
shrl
inc
xchg
rorb
pop
rolb
mov
lods
jnp
mov
aad
or
and
adc
out
mov
cmpsl
int3
cmc
outsl
pop
les
jne
nop
in
sbb
sub
aad
insl
movlps
icebp
inc
pop
negb
adc
sub
lds
call
out
sbb
daa
dec
outsl
and
ret
lods
xor
sub
push
stc
pop
iret
jle
sbb
inc
jecxz
or
adc
stos
and
inc
in
pop
or
adc
dec
sbb
shl
sub
and
pop
sbb
inc
mov
jns
out
mov
mov
cmp
jp
inc
sbb
add
or
loop
subl
jno
dec
cmp
pop
fldl
cmp
sub
imul
das
out
add
add
mov
dec
jecxz
pop
test
icebp
mov
cwtl
insb
jno
idiv
jne
outsl
and
mov
and
pop
leave
and
movsl
jno
push
sub
dec
in
xchg
and
fnstenv
jecxz
clc
push
loopne
test
xchg
or
jecxz
lods
lds
push
in
out
in
test
xchg
enter
cmp
pop
xchg
xchg
dec
xchg
push
push
cwtl
sub
or
popa
cwtl
outsb
pop
adc
push
jecxz
sbb
std
adc
and
mov
xchg
and
in
out
lcall
movsb
rcl
scas
fisubs
and
stos
cmc
xchg
adc
movsb
movsl
push
hlt
arpl
sbb
lahf
ljmp
lret
out
push
pop
cltd
or
or
adc
pop
mov
sub
lret
fstpl
rol
adc
jnp
pop
cmp
cltd
mov
cwtl
cmp
daa
jl
cmpsb
add
dec
enter
pushl
inc
adc
push
negb
or
insl
stos
push
leave
push
pop
ffree
pusha
add
rclb
mov
enter
adc
in
loop
push
xchg
mov
jnp
xchg
call
mov
sub
pop
ds
movsb
repnz
cmc
jbe
repz
ret
repnz
shll
add
pop
mov
test
sub
and
mov
pop
cmpsl
pop
lret
icebp
cmp
in
push
mov
push
int3
dec
fs
push
jecxz
or
xor
sub
mov
mov
out
pop
sarb
inc
sahf
add
mov
dec
int
sub
or
add
lods
mov
in
sub
mov
stos
adc
sub
rcrb
rcrl
pusha
sub
push
and
sub
mov
aad
and
es
movsl
repnz
push
sbb
xor
pop
jo
mov
faddl
enter
data16
out
addb
enter
adcl
jecxz
cmp
and
aaa
and
negb
test
in
jo
dec
jge
pusha
add
inc
pop
add
rcl
fiadds
shld
sub
call
sbb
pop
xchg
or
dec
mov
cmp
lods
negl
stc
scas
sub
or
sub
push
shlb
mov
push
sbb
mov
adc
enter
idiv
popl
and
dec
test
lret
sub
sti
jo
mov
cli
sbb
sbb
cmp
fcmove
xchg
ss
mov
sub
or
fs
cld
cld
cmp
dec
cwtl
fucomip
jbe
pushf
rol
cmp
push
int3
mov
in
in
or
sub
movsl
mov
pop
sbb
into
leave
pop
xchg
enter
jle
jno
inc
pop
out
mov
stos
sub
pushf
cmp
std
mov
faddl
gs
xor
pop
jmp
je
or
pop
mov
dec
fsubl
mov
cs
mov
jne
fdivs
scas
lods
sub
or
shrb
mov
xor
sbb
imul
jo
mov
sub
sbb
add
enter
daa
ljmp
dec
xlat
or
jb
sub
mov
test
lcall
mov
fnsave
mov
push
sbb
push
rclb
lods
push
jns
cwtl
sub
fwait
sub
cmp
jmp
aaa
mov
inc
dec
adc
ds
jp
sbb
cld
movsb
jl
daa
loop
mov
jnp
mov
sbb
xchg
enter
pop
dec
cmp
dec
sub
pop
mov
shrb
and
cwtl
sbb
sbb
shll
sub
sbb
cmpsb
dec
rcl
cmp
add
enter
adc
cmc
xchg
pop
in
iret
xchg
mov
sub
xchg
jno
ds
add
xor
stc
adc
ret
adc
fsubrl
xchg
outsb
and
mov
rcl
xlat
xchg
adc
or
pop
loop
ja
add
jo
mov
std
mov
jmp
fcoml
ja
je
cmpsl
fistl
sub
lret
inc
pop
adc
dec
les
cmpsb
push
movsb
insb
leave
xor
mov
into
pop
mov
dec
nop
push
sub
mov
push
sbb
mov
gs
push
push
dec
test
sub
mov
out
adc
aaa
into
cmc
iret
imul
sarl
and
flds
je
in
and
dec
mov
pop
pop
adc
mov
mov
cmp
add
ss
cwtl
scas
mov
enter
xchg
aad
mov
jl
das
scas
mov
fdivrs
std
fisubl
mov
mov
sbb
stc
push
xor
mul
popa
pop
hlt
enter
out
call
insb
add
dec
jbe
fnstsw
jnp
mov
ret
sub
dec
mov
jb,pt
and
xchg
dec
mov
mov
repz
gs
repz
xchg
jmp
push
inc
les
enter
sbb
jp
xchg
das
inc
adc
js
mov
sbb
sbb
jo
aas
mov
cs
jo
xchg
adcl
push
sub
mov
pop
cmpsl
call
pop
adc
mov
dec
pop
scas
xchg
aam
aas
mov
sbb
not
mov
inc
lret
stos
push
ja
add
mov
inc
xchg
xor
inc
lds
jns
mov
sbb
mov
into
popa
inc
sub
mov
hlt
scas
and
fistpll
std
mov
sub
das
sbb
mov
stc
adc
jb
imul
mov
popf
movb
and
jl
stos
sub
pushf
push
out
sti
js
mov
loop
jns
fstps
adc
leave
scas
and
cmc
bound
inc
or
cld
repz
vmovdqu
clc
je
xchg
mov
adc
pop
cmp
xchg
add
inc
cwtl
and
outsb
sbbb
pushl
xlat
mov
jne
or
clc
ds
mov
loopne
mov
xor
sub
push
jmp
mov
sbb
pop
and
addr16
jae,pn
mov
mov
mov
movb
nop
enter
test
pop
lcall
ds
hlt
xchg
cs
ss
dec
rcrl
pushf
das
in
daa
inc
adcl
iret
xorl
addb
sbb
xor
pop
cltd
stos
int
sbb
leave
cmp
or
push
pop
test
ss
lret
pop
xchg
inc
rorb
pushf
cmp
cltd
hlt
inc
push
enter
popf
mov
enter
push
int3
pop
jnp
sub
in
fstl
sbb
out
je
sbb
movsb
jge
out
enter
xchg
shld
pop
pop
inc
into
out
lcall
ja
mov
lock
data16
insl
pop
pop
and
jg
push
xchg
sub
rcll
mov
in
movsb
and
int
gs
jp
je
mov
add
mov
inc
and
xchg
cmp
jno
add
adc
hlt
lods
pusha
daa
cmpsb
mov
sbb
inc
lods
sbb
mov
and
cmp
leave
push
mov
or
mov
rolb
addr16
imul
mov
in
jge
cmpsl
mov
and
sub
lahf
stos
fsubrl
out
xchg
or
sbb
pop
xchg
jge
xor
sub
jns
adc
sub
and
scas
pop
es
rorl
xor
and
outsb
rcrl
sbb
daa
mov
adc
pop
clc
das
icebp
pop
adc
lcall
jmp
pop
ror
pop
pop
sbb
sub
pop
shlb
mov
cmp
test
aas
cltd
push
mov
pop
or
cmc
sbb
mov
push
inc
sbb
std
mov
stc
fbstp
jne
popf
sub
movsl
ss
sub
sub
xchg
mov
push
jl
xchg
xor
sub
les
sarl
add
sub
inc
mov
iret
lea
push
enter
mov
pop
cld
out
pop
push
xchg
adc
dec
ljmp
cmp
addr16
xor
repz
sbb
fmuls
and
adc
lds
cld
not
jmp
daa
fistl
cmc
jnp
shrb
icebp
pop
adc
fdivl
pop
or
add
push
scas
and
and
jne
movsb
mov
mov
xchg
outsl
sbb
fldcw
hlt
aam
sbb
xchg
pop
or
out
pop
int3
inc
out
pop
popf
test
or
pop
sub
in
jb
decb
or
fsts
int
cmpl
loopne
pop
sbb
cmp
xchg
cmp
dec
enter
imul
rclb
and
push
in
adc
imul
cmp
push
mov
pop
fxch
jb
leave
rol
insl
cltd
popf
xchg
push
es
dec
push
cmp
pop
add
push
mov
pusha
sub
add
scas
cmp
push
mov
jecxz
stos
mov
mov
sub
sbb
pop
stos
sub
cld
jb
loopne
shll
xor
repnz
test
push
mov
xchg
sub
shrb
test
fdiv
test
ss
rcll
int
mov
cmpsb
dec
sub
sbb
orl
mov
and
popa
add
sbb
dec
mov
inc
enter
mov
pop
adc
movsb
adc
movl
enter
jg
fdivrl
movsb
insl
cwtl
push
cmp
notl
sub
loop
rcrb
mov
adc
divb
scas
syscall
mov
and
pop
lods
cld
xchg
flds
hlt
jbe
jp
ss
clc
repz
cmc
dec
adc
cmp
sti
sub
sbb
and
loop
inc
xchg
sbb
and
xor
add
xchg
js
enter
xor
push
in
les
sbb
lret
sbb
fsubr
test
inc
fstl
adc
fiaddl
sbb
sub
cmp
and
sbb
scas
mov
jmp
ret
int3
jns
push
pop
add
insb
aas
mov
xchg
idivl
arpl
in
mov
fs
pusha
jecxz
jmp
sbb
xchg
divl
in
mov
pop
cli
mov
jns
and
outsb
leave
or
clc
adc
loopne
aaa
sti
add
fdivrl
iret
ret
jle
xchg
adc
popa
orl
imul
push
or
fsubrp
mov
ds
push
mov
sbb
cmpsb
rcrl
xchg
and
int3
cmpsl
in
sbb
pop
fistpll
dec
clc
mov
data16
dec
bound
in
into
push
jmp
das
mov
mov
pop
xor
clc
cmpsl
ss
cli
sub
out
lods
movb
push
mov
mov
sahf
ret
mov
xchg
lds
pop
mov
mov
outsb
clc
cmpsb
xchg
stc
addr16
in
pop
cmp
cmpsl
jl
sub
jae
movsb
jno,pn
inc
cmpsb
out
in
or
jo
push
movlps
mov
jmp
test
test
lea
ja
movsb
repz
ja
dec
je
mov
sbb
xchg
fucomp
enter
mov
data16
int3
dec
popa
call
cmpl
jl
ret
sbb
hlt
enter
mov
loop
or
mov
pop
lds
adc
cmpsb
enter
das
das
cmc
out
add
jb
lcall
aaa
push
push
pop
outsb
lds
add
scas
or
pop
mov
bound
xchg
icebp
rorl
mov
sbb
stos
cmp
enter
cwtl
add
or
aaa
inc
fsub
cmp
mov
loopne
out
fisubrs
push
sbb
loop
and
mov
pop
xchg
pop
mov
movsl
mov
shlb
adc
inc
inc
pop
lret
int
cmpsl
pop
xchg
pop
xchg
enter
es
jg
lcall
add
rolb
les
jo
ds
leave
sbb
adc
push
push
pop
pop
cmp
pop
push
jl
ljmp
jb
jbe
in
imul
push
das
or
outsl
xlat
sbb
push
mov
fadds
shr
ret
sub
insl
test
sbb
xchg
cmp
mov
jg
pop
or
sbb
mov
xchg
cmpsl
sub
fiaddl
adcb
jecxz
outsb
pop
dec
push
jecxz
out
cmc
sti
sahf
pop
mov
cltd
outsl
and
fcomp
push
jne
adc
daa
out
mov
imul
adc
stc
push
das
lds
bound
lock
cltd
ret
or
push
sbb
jecxz
xor
enter
inc
pop
mov
push
add
daa
inc
icebp
sub
pop
pop
mov
out
xchg
sbbb
mov
lods
or
sbb
hlt
dec
lret
aad
daa
or
dec
das
int
or
aas
dec
movsb
testb
test
adc
std
mov
dec
out
test
or
int
sti
inc
mov
sub
faddl
outsb
int3
mov
or
hlt
popa
arpl
lock
jne
lret
incb
in
ss
xchg
or
jne
mov
jmp
mov
push
enter
push
cmc
daa
jmp
out
hlt
stc
not
popa
and
sbb
and
inc
jl
icebp
dec
mov
lret
or
int
inc
shll
sar
bound
or
clc
movsb
gs
jmp
fcomip
loope
mov
iret
shlb
shll
dec
lcall
cwtl
add
cmc
vpmacsdqh
and
adc
scas
enter
shlb
sub
in
in
lcall
mov
outsl
in
sub
cli
das
or
mov
mov
inc
cmp
cmpl
pop
xchg
rcll
loopne
and
pop
das
rcrb
inc
pop
lock
aaa
pop
xchg
leave
popf
mulb
push
jbe
test
das
inc
jne
sub
adc
cwtl
sub
mov
jle
adc
dec
in
adc
sub
and
int3
shl
mov
mov
pop
push
mov
adc
pop
pop
scas
pop
dec
ret
sahf
movsb
jle
mov
sbb
pop
pushf
adc
shl
cmp
add
dec
shrl
clc
pop
xchg
xchg
mov
repnz
repz
mov
in
fst
cmp
cltd
sub
popf
movsl
int
orl
add
sub
cmp
clc
xlat
pop
outsl
movsl
movsb
cmpsb
ret
enter
mov
pop
push
mov
add
inc
icebp
add
ja
les
lea
dec
cmpsb
mov
inc
js
or
pop
jecxz
std
adc
sub
repz
pop
jno
dec
xor
mov
push
mov
or
test
dec
lods
and
in
mov
jp
lahf
or
jl
negl
cld
popl
or
sarl
sti
and
movsb
int
mov
and
stc
push
out
aad
lcall
in
lcall
fstl
mov
mov
stc
daa
testb
inc
loopne
scas
add
data16
insb
ljmp
and
inc
push
ja
pushf
mov
jp
bswap
outsb
pop
adc
push
inc
sbbl
push
mov
in
das
pusha
jle
sub
stos
jl
fisttps
pop
dec
mov
mov
mov
sub
pop
test
jecxz
rcl
icebp
das
mov
mov
cltd
dec
adc
mov
shlb
mov
adc
push
loopne
push
test
push
lahf
pop
pop
imul
in
pop
and
adc
lret
jp
push
pop
cli
adc
and
popa
jbe
adc
add
xchg
lret
mov
stos
aad
sub
xor
and
lods
loopne
scas
cmp
movsb
pop
inc
xchg
test
ficoms
movsb
sub
jmp
dec
stos
or
gs
add
lret
cmp
rol
cltd
pop
sub
mov
cmpsb
std
int
mov
out
pop
add
pop
mov
lods
push
xchg
sub
mov
dec
mov
jmp
sub
jl
addb
arpl
icebp
dec
mov
mov
sub
pop
cmp
push
pop
mov
mov
imul
loopne
sbb
rorb
sti
dec
inc
fildll
hlt
ret
adc
xor
push
xor
notb
xchg
mov
xlat
lcall
enter
inc
gs
les
adc
xchg
push
add
movsl
sbb
xor
sahf
inc
jecxz
out
enter
jb
xor
aad
in
loop
push
aad
call
fbstp
lcall
call
push
sbb
int3
add
push
xor
cmpsb
sahf
daa
arpl
stc
bound
mov
jge
inc
jecxz
push
and
imul
xor
push
pop
cs
lret
fbld
sub
sub
nop
dec
mov
stos
test
fmuls
xor
inc
mov
cli
mov
pop
jns
inc
sahf
inc
movsb
sahf
lahf
aam
and
mov
xor
xlat
sub
es
mov
cltd
pop
add
in
loop
mov
nop
sbb
notb
mov
sub
xor
add
or
ret
imul
and
mov
cltd
movsl
push
xchg
jbe
insl
addr16
add
lahf
xchg
jbe
imul
mov
xor
stc
sbb
pushf
pop
mov
xchg
mov
mov
ss
pusha
and
dec
lods
jnp
fucomip
pushf
and
jns
test
cwtl
outsl
xchg
arpl
xor
jge
jmp
sbb
lea
pop
movsl
and
add
jg
sbb
aaa
mov
popa
test
in
cwtl
xchg
pop
xchg
lock
mov
adc
or
mov
and
test
jl
addl
pop
pushf
push
ss
add
adcl
add
mov
stos
enter
popa
fdivrs
popf
test
sbb
or
or
lret
pushf
jge
sub
xor
in
shl
add
sub
bound
repz
andb
push
push
sbb
sub
push
pop
lods
clc
int
movsb
add
fdivrp
mov
outsb
imul
and
mov
jno
pop
lds
mov
mov
add
or
lcall
jp
movb
cld
or
mov
sbb
cmpsl
cmp
sbb
sub
sti
je
push
mov
push
pop
imul
je
mov
es
subl
jecxz
pop
pop
or
mul
stos
jmp
lret
sahf
push
mov
mov
jno
sub
aaa
sbb
popa
bound
pop
and
jmp
sub
gs
mov
addl
fsubl
sti
push
loop
fbstp
pop
sbb
movsb
movsl
jl
out
iret
mov
jmp
stos
xchg
sbb
sbb
pop
push
jbe
sub
inc
push
xor
jg
lods
mov
pop
test
aaa
arpl
daa
imul
jbe
insb
jo
subps
out
sub
lret
mov
lods
cmpsl
call
js
dec
xchg
and
push
clc
cmpl
dec
mov
or
mov
sub
adc
fcmovne
hlt
ss
sbb
xor
fdivl
imul
enter
xchg
mov
xchg
sbb
ss
mov
adc
dec
jno
xor
and
sbb
popl
dec
push
icebp
sub
mov
sub
adc
insb
sbb
mov
jge
inc
jae
dec
ja
fsubl
add
inc
dec
sub
sub
adc
pop
repz
fldcw
movsl
adc
push
mov
and
pusha
adc
mov
add
jnp
mov
inc
push
mov
ficoml
popf
pop
pop
enter
imul
push
adc
jmp
cmpsl
and
pop
jbe
jp
pusha
loop
ds
in
sub
sub
aam
sbb
cli
and
packssdw
cmp
and
xchg
xor
jo
sbb
xor
pop
inc
push
ds
pusha
enter
int
push
cltd
pop
mov
dec
add
and
enter
movsl
mov
sarb
cs
dec
inc
ret
mov
pop
mov
sbb
mov
lock
sbb
inc
test
pop
sbb
inc
push
insb
mov
das
pop
jae
add
sbb
sbb
add
mov
inc
pop
sub
cmp
lds
loopne
or
inc
jnp
and
jmp
mov
xchg
dec
add
arpl
call
push
jmp
pop
jg
xchg
pop
popf
pop
fidivrl
dec
add
xor
fidivl
jbe,pt
push
enter
pushl
outsb
jb
jns
push
stos
out
lret
out
mov
lcall
add
sub
sbb
pop
inc
cmpsl
jae
push
cmpsl
les
sbb
stos
clc
scas
pop
movsl
pop
sbb
fsubr
aam
fxch
dec
push
test
stos
cmp
xchg
pop
rolb
jns
adc
aad
sub
cmpsb
push
in
cmp
leave
cmp
sub
and
pop
lods
jbe
repz
xchg
lds
adc
adc
insl
in
pop
xchg
mov
enter
das
jmp
mov
div
adc
sub
xchg
fcoml
dec
es
xchg
divb
xlat
mov
icebp
add
inc
stos
pushf
jne
stc
jl
ficompl
mov
dec
sahf
movsl
in
mov
jne
lret
test
and
lods
sbb
rcl
in
leave
jp
mov
adc
jle
lcall
adc
lret
sub
insb
mov
in
push
jmp
loopne
mov
aaa
mov
lret
insb
cmpsl
pop
xchg
mov
xorl
xchg
bound
leave
mov
cmp
enter
loopne
mov
cs
out
pop
cmp
xlat
out
insb
cmovs
repz
adc
dec
dec
testl
fwait
dec
mov
push
push
pusha
stc
fstps
mov
or
push
sbb
pop
fildll
xorb
enter
xor
push
icebp
pop
pop
lods
fs
repnz
inc
popa
sub
jo
lret
push
shll
push
xchg
dec
testb
xor
sub
fcoml
mov
pop
jo
movsb
mov
stos
or
mov
pop
mov
adc
loop
inc
pop
mov
loope
stc
sbb
or
cmp
es
sbb
cmpsl
test
jle
cmpsl
push
repz
sbb
testl
xlat
fnsave
pop
shrl
mov
fisttpll
push
popa
out
sub
std
enter
lret
rcrl
push
lods
mov
and
frstor
jbe
sbb
sbb
mov
pop
sub
xchg
pop
rcrb
stos
stos
mov
scas
dec
int
lcall
jns
add
mov
mov
testl
xor
je
lods
inc
js
jae
iret
xor
xor
inc
aas
sub
pop
lahf
mov
dec
add
fs
std
xchg
pusha
xlat
orb
push
pop
inc
idivl
inc
les
enter
sti
ret
fucomip
fisubs
daa
jbe
sbb
add
xchg
xor
xor
out
xchg
lcall
sub
shl
sub
inc
xor
rcrb
mov
sub
mov
and
sbb
fstpl
insb
ret
xchg
sub
sub
mov
cmp
adc
mov
push
stc
lahf
and
addl
in
add
aas
inc
ret
imul
pop
enter
cmpsb
jae
jnp
sbb
and
cmp
add
imull
and
jns
jmp
ror
hlt
sbb
lock
movsl
jae
dec
enter
hlt
mov
inc
jecxz
push
fs
cli
notl
sbb
imul
cltd
cmp
adc
and
lahf
ret
inc
mov
push
lahf
xor
iret
or
sbb
loope
lods
sub
shll
out
pop
pop
push
push
rorl
stos
nop
push
pop
push
push
inc
sbb
jb
in
push
das
pop
enter
jbe
and
insl
pop
xchg
sti
push
scas
loopne
jg
xchg
std
pop
es
enter
mov
js
sub
lret
add
adc
or
sub
push
sub
cmc
pop
fmull
adc
gs
loope
jmp
ret
sahf
adc
orl
mov
mov
sub
ror
sbb
out
or
sub
push
lods
xor
mov
adc
sub
mov
inc
rcrb
adc
jl
adc
in
subb
call
push
sbb
dec
xor
out
cwtl
loop
jno
fs
pop
cld
enter
mov
shll
imul
out
pop
fcoml
inc
sub
adc
inc
mov
and
shr
shll
dec
pop
cs
cmc
sub
or
or
stos
mov
sub
sbb
hlt
xor
add
subl
push
mov
js
jae
mov
lahf
shrb
or
call
gs
pop
xor
cmp
push
jbe
fisubrl
pop
out
and
aas
adc
stos
and
cmp
pop
jae
mov
test
xor
pop
push
outsb
dec
faddl
addr16
inc
pop
pushf
in
mov
imull
loopnew
push
test
sbb
mov
stos
or
cmp
sbb
adc
lods
insl
repz
push
pop
xchg
out
sub
repz
ret
jg
dec
ja
movsl
pop
ds
jmp
loop
inc
call
pop
add
mov
cmpsl
sub
cmp
test
jb
and
and
push
ss
scas
cltd
icebp
lret
in
stc
inc
sub
and
mov
data16
outsb
jecxz
push
mov
sbb
push
xchg
lret
lea
and
ret
xchg
fs
ds
mov
xor
push
inc
xchg
jp
lahf
imul
pop
jo
sub
mov
sbbl
jp
ja
and
ret
bound
dec
mov
add
pop
bound
xchg
mov
xchg
scas
add
pop
xchg
test
inc
cli
fisubrl
mov
cltd
loop
fcmovne
nopl
pop
out
mov
shll
mov
adc
sub
xchg
dec
sub
xchg
xchg
dec
add
movl
loop
pop
inc
test
fsubl
sti
sub
mov
mov
jmp
adc
lret
das
pop
sub
test
test
jnp
iretw
mov
xor
mov
or
stos
aaa
and
xor
cmp
hlt
push
int
insl
sub
orl
ds
movsb
enter
adc
lods
sti
xlat
pop
addr16
in
div
stos
fldl
sub
bound
orb
ret
sti
and
pop
ret
or
lret
push
addr16
enter
or
call
ss
int3
lds
test
mov
jle
inc
mov
sbb
insl
pop
js
push
insl
xchg
enter
arpl
xor
repz
stos
pushf
mov
imul
loopne
subl
es
outsl
not
rcrb
push
fsubr
mov
lret
ja
adc
lret
sbb
jnp
pushf
pop
mov
push
or
in
jle
insb
jl
jns
push
or
enter
add
dec
push
push
sbb
or
mov
ss
into
xor
sbb
fsts
mov
daa
movsb
lods
enter
jne
mov
fldenv
add
fisubrl
aaa
mov
cwtl
popa
aam
pop
mov
jbe
jnp
cltd
clc
jno
fisubs
and
cmpsl
addr16
aam
pop
stos
adc
mov
sub
fisubrl
imul
push
test
in
adc
xchg
sbb
xor
enter
push
sbb
jb
pop
bound
int3
daa
loopne
js
stos
push
scas
dec
jmpw
mov
stos
sbb
sbbl
jo
push
mov
shl
push
lret
add
cmp
into
sbb
pop
in
adc
mov
inc
sub
adc
pop
fistps
push
sti
or
inc
push
mov
scas
mov
xor
pop
test
lcall
gs
add
pop
arpl
cwtl
pop
push
cmp
sub
loope
in
mov
pop
sub
and
mov
lret
pushf
clc
dec
xor
andl
jp
les
pusha
test
cwtl
cld
leave
fwait
mov
jg
jbe
stc
and
sub
pop
inc
inc
outsb
pop
pop
pop
das
data16
inc
inc
xlat
arpl
mov
sub
xor
aas
scas
rolb
ficoml
mov
lods
xor
fs
sbb
add
outsb
mov
repnz
sbb
outsb
sahf
jae
ret
sbb
enter
dec
jge
enter
jmp
pop
xchg
adc
push
outsl
inc
insb
out
hlt
loop
sub
pop
add
insb
adc
and
test
xchg
test
loope
push
push
pop
je
pop
movsl
xor
add
add
sbb
js
stos
sbb
sti
pop
or
mov
les
xchg
mov
popf
sbb
adc
stos
and
push
mov
fcomip
scas
add
fwait
push
xchg
pop
xchg
sbb
lods
repnz
xchg
enter
jne
pop
xchg
jno
push
xlat
adc
popl
xor
sub
cld
into
rcrl
jg
mov
out
scas
int
inc
cmpsl
add
mov
push
pop
aas
js
fucomi
pop
mov
sub
fistps
mov
jp
aad
jmp
and
popf
imul
nop
sub
insl
or
push
in
xor
pop
sbb
lock
sub
or
sbb
or
ret
gs
sub
xor
pop
js
pop
add
repnz
andb
sub
pop
in
push
push
sbb
dec
stc
mov
enter
add
out
and
inc
xchg
sub
dec
cwtl
subb
imul
fldenv
insl
dec
xor
insb
fldl
loop
push
xchg
loopne
movsb
rcrl
mov
idivb
and
stos
add
mov
xchg
hlt
jne
pop
add
movsb
inc
xchg
shlb
xor
xor
jg
jmp
mov
iret
daa
xor
fsts
das
std
les
adc
psubd
xor
xchg
push
aaa
insb
ret
enter
pushf
xor
or
add
jbe
sub
data16
mov
xchg
lock
andl
mov
and
enter
ret
enter
jno
xor
testl
cwtd
lahf
jo
pop
sub
call
jno
mov
fsubl
imul
lea
dec
int3
lcall
fisubrs
inc
js
fwait
nop
loop
in
pop
add
mov
fwait
pop
je
pop
jmp
lret
pop
ret
mov
add
sbb
testl
mov
ja
in
sbb
mov
loopne
and
iret
je
pop
cwtl
jno
push
sub
inc
aaa
movsl
jbe
jge
or
test
jmp
das
xchg
imul
cmovb
faddl
inc
and
push
imul
push
and
mov
ds
sub
jmp
push
sahf
arpl
and
sti
pop
jnp
xor
loopne
es
gs
shlb
mov
push
and
sub
dec
ja
in
fcmovnu
inc
sarl
push
mov
adc
js
ret
movswl
xlat
sub
inc
pop
mov
je
xor
or
xchg
cmpsl
pop
jns
mov
andb
loopne
incb
loope
add
dec
xchg
and
arpl
test
pop
mov
jno
sub
add
inc
bound
mov
lahf
push
fadds
scas
leave
lds
sarl
int3
orl
adc
pop
jae
leave
push
inc
out
stos
adc
ficompl
jb
ja
jg
mov
xchg
add
jge
lea
pushf
pushf
insb
scas
popa
sub
add
popf
or
pop
shrb
mov
lret
sub
jl
mov
popa
das
movsb
subl
rep
int
sub
loope
cmpsb
aas
push
mov
mov
mulb
pop
jne
inc
icebp
clc
test
nop
ljmp
adc
push
insl
or
dec
and
mov
inc
mov
push
out
sbb
cmp
ds
adc
adc
push
and
push
sbb
push
jle
enter
mov
and
jo
mov
push
repnz
and
aam
or
dec
int3
clc
cmp
enter
add
movsb
xchg
dec
fwait
out
pop
dec
nop
and
mov
mov
imul
pop
sbb
jl
data16
arpl
mov
out
or
pop
pushf
stc
cmpsl
mov
sub
mov
popa
in
lods
xlat
push
push
pop
mov
fsubrl
lea
add
sti
mov
xor
push
sub
xchg
jle
insl
sbb
bound
mov
out
adc
jp
gs
jbe
pop
cmpsb
mov
cli
push
sub
add
dec
and
shrb
xchg
cwtl
into
into
mov
fcoms
addr16
ret
arpl
cmp
stos
leave
xchg
dec
cltd
jns
or
movsl
sbb
in
fnsave
enter
push
or
mov
loop
imul
jle
inc
loope
mov
cmpsb
cmc
pop
xorb
add
sub
pop
and
xchg
sbb
inc
inc
ja
and
mov
scas
xchg
call
pop
jg
in
cmpb
cwtl
sub
push
and
jmp
pop
popf
subb
dec
cmpsl
or
mov
jmp
pop
out
adc
mov
dec
mov
mov
fmull
dec
clc
aam
xchg
iret
sub
or
stc
pop
pop
add
addr16
sub
or
imul
nop
xor
sbbl
mov
int3
push
adc
leave
fsubrl
inc
pop
lea
aam
pop
pusha
dec
into
mov
ror
aaa
sub
sub
or
sbb
js
movsb
and
out
mov
mov
imul
sub
lret
dec
sbb
negl
cmp
cmp
cltd
xlat
cmp
movsl
dec
in
jecxz
divb
cmp
scas
and
push
stos
mov
add
repz
fsts
sub
xor
out
xor
jnp
inc
mov
push
jp
leave
xor
loopne
in
out
pop
nop
ja
lods
fsubrs
lea
jg
cmc
sbb
inc
imul
cmp
add
or
movsb
or
call
sub
jmp
xchg
and
daa
push
inc
imul
outsb
mov
mov
lret
pop
pop
pop
dec
rcl
lods
jbe
fwait
sub
or
or
pushf
fmull
addr16
jmp
dec
int
movsl
pop
jno
add
into
ja
cmp
out
pop
mov
add
in
fimuls
call
pop
pop
mov
repnz
arpl
enter
add
leave
sub
jbe
inc
add
sbb
insl
cmp
sbb
mov
xlat
enter
scas
add
push
popa
pop
xchg
das
mov
jne
imul
xor
push
clc
loopne
mov
jns
pop
inc
dec
daa
popa
call
cltd
hlt
call
mov
ljmp
mov
mov
xorb
and
int3
not
call
inc
ja
lock
mov
adc
pop
cmpsl
in
xchg
adc
pushf
push
sbb
xlat
push
mov
or
sahf
sbb
int
pop
mov
in
or
std
and
lret
push
mov
xchg
push
sti
test
push
fnstenv
adc
add
shrl
or
enter
shll
sub
jg
test
xchg
subl
cmp
sub
mov
push
and
inc
push
das
inc
inc
mov
pop
scas
and
sbb
cmpsl
inc
mov
add
dec
mov
inc
ss
int
push
ror
push
mov
dec
fsubs
pop
sarb
cs
jp
sub
notl
or
sbb
sbbl
jl
sub
rolb
gs
adc
sbb
xchg
mov
mov
imul
lahf
icebp
push
sbb
test
adc
fldenv
mov
lods
inc
cmpsb
rcrb
mov
cmp
cmc
sub
add
fdivl
pop
cld
pop
mov
movl
imul
dec
bound
ss
pop
jnp
out
sub
inc
hlt
jbe
jmp
mov
sub
std
mov
sbb
ds
jecxz
mov
sbb
ljmp
rclb
xor
test
or
adc
cmp
add
add
inc
and
mov
in
pop
in
xor
shl
cli
sub
rorl
xchg
stc
and
fwait
lods
sbb
push
xchg
enter
jns
popf
mov
inc
xor
sbb
fstl
sub
adc
pushf
loop
out
inc
xchg
loop
jne
push
fs
call
loope
in
cwtl
sub
enter
adc
subb
icebp
leave
das
sub
pop
jmp
divl
mov
jmp
rcrb
push
jecxz
pop
mov
movsl
mov
mov
mov
and
fiadds
xchg
and
sub
jns
dec
mov
addl
and
fnstcw
xlat
mov
dec
mov
mov
cmc
iret
jp
and
sub
ss
out
mov
test
or
mov
out
sub
fnstcw
jmp
pop
xor
sbb
cmp
lret
lock
enter
xlat
call
outsl
cwtl
aas
loope
dec
mov
fisubrs
enter
outsb
pop
adc
inc
jnp
and
stos
sub
cld
test
and
mov
or
cli
mov
lcall
and
iret
rorl
mov
pop
push
lock
jecxz
mulb
dec
loopne
sahf
push
sbb
in
enter
xchg
stos
push
pop
pop
jmp
std
mov
and
cmp
int3
rcl
pop
pop
repnz
jle,pn
pusha
sub
fbstp
inc
jnp
les
js
enter
sub
ja
sti
sub
out
cs
in
mov
stos
sub
sbb
scas
fnstenv
addr16
in
xchg
repnz
sub
stos
add
lock
sbb
mov
lock
dec
mov
js
push
stos
lea
loop
stos
cli
dec
mov
fdiv
pop
add
cmpsl
xchg
stos
lock
xchg
sbb
cmp
jns
adc
mov
aad
pop
sbb
mov
enter
repnz
ret
lods
aaa
mov
add
adc
pop
xchg
jo
inc
inc
enter
subb
sbb
jno
add
cmp
mull
ljmp
imulb
cltd
pop
sbb
cs
mov
ret
cld
sbb
mov
js
dec
and
gs
enter
sub
hlt
cmp
jo
cmpsb
inc
mov
mov
sarl
sbb
xlat
xchg
mov
leave
int3
sarb
xor
sub
ja
in
jno
movsb
pop
fimuls
and
push
dec
cwtl
push
int3
sti
jne
pop
mov
cmc
and
sub
xor
cmpl
cmpsb
mov
push
and
push
sbb
popa
rcrl
push
out
jae
inc
std
aam
aad
enter
and
pop
ret
push
cltd
into
rcll
aad
insb
push
pop
bound
mov
or
and
flds
cltd
sbb
inc
rol
inc
jg
shlb
ret
dec
lods
das
lods
ror
or
dec
leave
pusha
adc
outsb
in
aad
add
sbb
stos
arpl
mov
adc
and
arpl
jo
sub
dec
mov
jp
mov
inc
sbb
nop
or
sbb
adc
aas
ficoms
and
xchg
fists
push
push
jno
mov
jecxz
xchg
fstpt
into
pushf
out
cmc
jbe
sbb
orb
jns
push
loope
mov
lods
sbb
or
mov
jl
mov
pop
xor
push
xor
mov
xchg
dec
test
pop
pop
rcrl
mov
xor
inc
sbb
lods
pop
mov
cwtl
or
lahf
jecxz
mov
sbb
cs
push
or
movsb
mov
inc
push
leave
fs
ss
xchg
cwtl
and
jle
and
adc
mov
inc
addr16
sub
movsb
loop
daa
fisubl
fidivrl
mov
and
inc
cmpsl
mov
mov
pusha
movsb
inc
ret
sbb
xor
sbb
jno
stc
mov
iret
arpl
mov
into
aaa
and
and
adc
cli
xchg
mov
ja
nop
pop
call
addl
mov
inc
je
sub
mov
mov
mov
fsubrl
scas
sub
mov
out
in
inc
cwtl
xchg
cs
enter
and
mov
int3
mov
sbb
aad
idivb
pop
mov
mov
jb
sbb
adc
cli
mov
cmpsl
sbb
mov
sbb
pop
jge
and
inc
lret
xor
ss
xchg
pop
or
xchg
lahf
push
jge
cmpl
lods
ja
add
daa
test
mov
or
loope
xchg
pusha
cmpsl
jl
dec
mov
sbb
lea
sbb
push
sahf
arpl
leave
out
sub
decl
pop
lods
mov
adcl
repz
hlt
aad
pop
in
enter
mov
jnp
call
in
push
cmp
aad
fwait
cmpsb
rol
push
frstor
jnp
out
inc
pop
xchg
hlt
and
insl
sub
fwait
dec
cld
sbb
loopne
shl
ja
iret
cmp
inc
or
insb
xor
iret
stos
aad
out
sub
mov
out
push
sbb
lock
gs
outsl
enter
subl
adc
pop
ror
push
sub
dec
aam
rol
push
lds
cmpsl
loope
lods
enter
pop
pop
fcoms
mov
and
int
adc
outsb
fsubl
sub
das
jp
lahf
pop
mov
pop
mov
icebp
insl
negb
pop
sbbl
push
xchg
stos
enter
testb
stos
jecxz
mov
cwtl
mov
sub
mov
js
sbb
jecxz
pop
cmp
cmpsb
iret
sbb
fmuls
pop
rolb
lods
popa
incl
pop
cmc
mov
jns
mov
pop
inc
out
jecxz
add
je
data16
aam
cmp
decl
and
scas
ds
enter
push
rcll
mov
xchg
mov
test
fisubl
jno
adc
xchg
ret
pop
sbb
push
popf
push
imul
rcrl
outsb
cmpsb
ror
stc
xchg
inc
xchg
mov
pop
mov
sbb
mov
js
mov
test
mov
int3
push
popa
inc
mov
inc
mov
ss
stc
cltd
arpl
popa
in
add
gs
pop
in
sbb
cli
push
inc
or
inc
loop
cwtl
sbb
jb
cmp
sub
inc
loope
aad
pusha
pop
xor
pop
push
out
sbb
mov
jb
fisubl
sub
xlat
in
ret
pop
ja
adc
enter
jne
js
mov
xchg
xor
mov
adc
mov
push
mov
dec
and
push
test
movsl
scas
xchg
pop
mov
pop
cli
xor
mov
push
repnz
je
mov
enter
cmp
addr16
movsb
push
jge
cld
push
mov
fsubl
and
and
and
hlt
xor
pop
sub
xor
ljmp
push
sub
fs
xor
and
movsb
scas
cli
repnz
js
mov
cmpb
cltd
cli
jecxz
or
jns
jmp
leave
lds
shll
mov
in
lods
and
mov
and
stos
sbb
popf
loopne
sbb
dec
add
out
mov
jle
ja
cmp
sub
dec
sub
ret
push
mov
loopne
pop
mov
dec
ret
adc
jmp
or
inc
aad
mov
mov
pop
loopne
sahf
test
mov
icebp
clc
dec
adc
pop
lods
sbb
sbb
mov
adc
add
enter
ss
fcmovu
or
repz
notb
int
jbe
lret
pop
cmp
push
inc
or
neg
mov
mov
and
xor
dec
idivb
mov
cltd
aaa
mov
iret
pop
push
int
pop
sub
cmc
mov
sub
adc
sbb
cmpsl
inc
fdivr
pushf
pushf
es
sub
sbb
fwait
in
mov
xchg
test
xor
jbe
cmpl
add
or
leave
bound
push
sub
pop
push
jnp
negb
mov
push
adc
stos
xchg
test
pop
xor
mov
sbb
mov
sti
shlb
cmc
lret
xor
sub
ja
fsin
addr16
jae
imul
aam
cmc
cmp
daa
sub
jno
xchg
push
imul
fdivrs
xor
cmp
push
sbb
lret
movsl
sub
sub
or
nop
pop
rclb
es
sub
dec
mov
call
adc
sub
sub
push
js
jns
nop
cmpsl
insl
aam
mov
cwtl
inc
mov
push
and
jae
mov
test
mov
mov
out
xchg
add
insb
jg
mov
aad
xor
shll
mov
dec
cltd
pop
sub
jbe
cltd
xor
icebp
sbb
fdivrs
pushf
jnp
enter
xor
pushf
xorl
repz
sbb
sub
mov
mov
jmp
negb
adc
jo
cltd
push
enter
jmp
push
cmp
add
imul
aad
hlt
push
adc
dec
and
das
fistl
fdivrl
mov
shr
fstpl
and
int
pop
and
mov
aad
inc
loope
fdivl
insb
inc
fimuls
outsl
mov
stos
out
repnz
jecxz
ja
lcall
push
mov
das
cmpsb
loope,pt
cmp
test
test
shll
mov
fidivs
xchg
jecxz
cmp
cld
pop
pop
imul
sub
pop
sub
mov
aaa
jno
jg
adc
push
mov
cmp
jmp
movsb
popa
shll
stos
jbe
outsl
adc
call
lds
call
pop
xor
leave
arpl
icebp
jecxz
mov
and
movsb
or
push
dec
add
lcall
adcl
leave
test
lds
xchg
sbb
fidivl
sbb
stc
xchg
fdivs
pop
xchg
dec
jmp
push
shrb
pop
std
adc
or
aas
std
lds
rcr
sbb
stos
jl
fisubs
mov
mov
dec
mov
fcomp
fisttpl
mov
call
notb
arpl
cmp
test
test
sbb
xchg
inc
dec
shr
sbb
stc
cmp
or
sbb
push
outsb
pop
imul
sub
cmp
orb
test
mov
sub
jmp
divl
sub
push
fwait
test
pop
fistps
leave
gs
adc
imul
or
pop
dec
cmp
adc
test
add
adc
push
arpl
cmp
pop
inc
pop
rcrb
mov
ljmp
and
mov
pop
pop
pop
ret
cmp
jnp
xor
add
gs
cmpsl
push
test
dec
aaa
hlt
mov
inc
lock
inc
gs
arpl
lods
sbb
jecxz
sub
popl
ret
pop
mov
adc
pop
dec
fs
cmpsb
loope
cltd
inc
cltd
add
push
pop
adc
js
pop
clc
clc
arpl
sbb
add
xor
cmp
inc
jp
mov
mov
push
push
push
sub
push
and
insb
and
gs
push
das
test
lcall
jmp
dec
push
subb
and
aam
lret
mov
and
test
or
jmp
icebp
add
sbb
cs
outsb
lea
call
fisttps
orl
jo
jle
xor
push
push
mov
ljmp
addps
ja
les
sbb
and
lods
push
fxch
and
sub
xor
dec
leave
push
jno
dec
sbb
pop
hlt
es
mov
and
add
mov
andb
xchg
outsl
in
mov
push
and
cwtl
loope
std
pop
mov
pusha
xlat
std
xor
andl
lret
inc
testb
adc
or
or
popa
fwait
aaa
int3
sub
idivb
mov
stc
shll
mov
inc
add
xchg
imul
loopne
sahf
aam
push
out
outsb
mov
mov
pop
test
call
lea
xlat
xorl
add
jle
mov
sbb
je
push
xchg
rclb
push
fs
xchg
jecxz
pop
jne
inc
js
es
sub
xchg
sub
mov
incb
mov
dec
xor
movsl
xchg
push
jo
push
xchg
pop
fwait
sub
and
leave
cmp
fcoms
pop
fsts
pop
test
inc
sarl
adcb
lea
inc
xor
aaa
movsl
sbb
in
and
enter
rcrb
add
xchg
or
xlat
addb
aaa
jge
int3
pop
test
push
into
mov
adc
inc
rorb
test
push
sbb
das
dec
fistpl
pop
call
pop
sub
push
xor
int3
dec
push
push
lcall
push
lret
decb
add
popa
xlat
sbb
adc
aam
js
mov
arpl
insl
jnp
int3
pop
lret
cmp
xor
int3
cmp
test
lcall
jge
adc
es
adc
test
aaa
dec
imul
sbb
xrelease
pop
push
dec
sub
pop
xchg
or
xlat
out
arpl
cmp
push
pop
pop
bound
mov
sar
mov
mov
dec
in
or
and
sbb
mov
xchg
push
cmp
jne
adc
aas
dec
lret
bound
popa
cltd
or
leave
mov
cld
stc
aas
and
or
jno
xor
dec
adc
popf
xchg
or
sbb
jbe
outsb
jp
or
jo
test
mov
jmp
cmp
inc
and
insb
xchg
sub
dec
ds
js
cmp
iret
cmp
xor
sbbl
fs
cs
push
pop
sub
dec
cltd
leave
pop
lahf
xor
dec
jl,pt
add
cmp
data16
adc
xchg
cmp
out
pop
push
aas
mov
aad
jns
loopne
mov
mov
fadds
notl
cmp
call
push
push
nop
inc
dec
dec
cmp
cmp
imul
sbbb
shl
lcall
mov
gs
fucomp
sub
rclb
out
rclb
mov
add
or
dec
dec
addl
adc
xor
cwtl
jnp
js
sub
std
add
cltd
jne
pop
xchg
inc
js
pop
js
mov
enter
cwtl
inc
adc
jl
xor
cld
arpl
rdmsr
jle
cld
adc
cmp
ss
mov
push
cmpb
fdivrs
hlt
fsubp
push
andb
lods
and
pop
push
test
je
jne
pop
sti
add
out
cmpsb
adc
stc
imul
pop
shrl
fsubl
fdivrl
sbb
push
push
mov
divl
xchg
xor
push
and
scas
movsl
and
and
push
cwtl
inc
xor
pop
iret
sub
mov
sbb
mov
sbb
outsb
or
jno
dec
cwtl
adc
and
test
aad
aam
movsb
aam
add
mov
sub
adc
out
jp
sub
dec
test
sbb
fisttpll
mov
cmp
dec
or
fldt
lods
std
mov
pop
mov
jb
sbb
cmp
arpl
dec
jecxz
cmp
stos
mov
lods
rcr
add
subl
mov
jbe
inc
add
out
sbb
movsl
or
fwait
sub
mov
mov
xchg
loope
clc
scas
fists
pop
xchg
pop
or
call
cwtl
push
adc
mov
gs
bound
sbb
mov
ret
mov
sub
xchg
insb
clc
cwtl
sub
mov
enter
or
xor
sub
cld
dec
xor
cwtl
push
pop
popa
push
or
adc
scas
sub
outsl
cmpsl
inc
pop
stos
inc
vmovaps
out
shlb
jle
jg
or
sub
jae
mov
mov
cmp
je
inc
dec
cmp
int3
sbb
test
cmc
mov
fs
icebp
lds
lods
pop
ret
into
jbe
adc
cwtl
jp
lret
iret
lea
jae
jnp
or
dec
sbb
mov
insb
mov
push
fldenv
call
add
pop
jbe
add
mov
mov
arpl
pop
add
adc
adc
movsl
or
pusha
mov
nop
sub
out
sbb
js
neg
insb
xchg
enter
push
mov
in
pop
push
ss
pop
icebp
in
enter
ss
cmpsb
in
pop
sbb
dec
push
addr16
leave
std
cmpsl
fstpt
js
adc
or
jbe
lahf
sbb
sahf
adc
ds
outsb
fisubl
mov
mov
push
sbb
sbb
cmpsl
jecxz
jnp
enter
xchg
or
xchg
cmp
lds
jne
fsubr
inc
cld
out
pop
jle
sbb
sub
adc
cli
jne
pushf
sbb
dec
std
inc
movsl
lret
cs
stc
les
fisubs
inc
inc
add
sbb
inc
mov
in
xchg
dec
xchg
sbb
scas
dec
insl
and
xchg
std
push
not
xchg
in
sbb
adc
aaa
andb
leave
push
popw
xor
mov
xchg
in
sub
ljmp
xchg
pusha
gs
aaa
in
inc
lods
jno
shrb
sub
dec
aas
adc
push
cmp
adc
lahf
movsl
lahf
adcb
and
mov
insb
jp
sub
stos
nop
fldt
lahf
mov
lret
aas
stc
or
push
cmc
popa
popa
test
pop
aas
adc
and
sbb
cld
adc
dec
add
cmp
add
xlat
adc
inc
cmp
fildl
mov
arpl
into
js
pop
pop
add
xchg
and
fwait
lds
enter
pop
cmp
icebp
fimull
push
imulb
push
dec
push
nop
xchg
sub
mov
adc
cli
cmc
dec
xlat
enter
ss
in
lahf
push
push
pop
or
es
pushf
imul
fdivrp
sub
add
aas
orl
pop
push
adc
loopne
jno
and
inc
faddl
xorb
movsl
push
sub
sbb
jecxz
rorl
xor
ret
cwtl
add
pop
push
pop
adc
fstl
aas
pop
sub
sbb
xor
out
dec
or
fnstenv
push
in
jo
movsb
mov
loop
lods
xchg
lret
mov
imull
xlat
in
movsl
andb
mov
pushf
or
adc
mov
or
mov
or
cwtl
xchg
jno
test
sub
xlat
fnsave
fwait
out
jmp
dec
je
mov
sbb
fildl
jne
sbb
and
mov
lods
test
pop
repnz
sbb
pop
popf
jae
fs
sarl
pop
mov
push
test
call
cmc
xchg
pop
data16
enter
cmp
xor
and
add
gs
fs
adc
pushf
leave
xlat
fs
test
pop
test
jle
jne
mov
push
sub
push
out
xchg
rcrl
enter
pop
lods
push
lret
lods
and
lret
das
and
jp
pop
xor
cmp
jae
sbb
xchg
jge
fnstsw
icebp
stc
push
sub
andb
rcrb
lea
mov
jb
mov
mov
pushf
pop
cmc
aas
test
cli
enter
popa
or
push
sbb
je
insb
cmp
lods
pop
stos
pop
jg
pop
adc
enter
mov
mov
pop
lods
insb
fstp
add
rcrl
pop
mov
push
stc
jne
or
sub
roll
and
mov
pop
pop
inc
in
adcl
add
loop
adc
adc
jno
xor
mov
mov
mov
push
rol
push
xor
jae
inc
pop
inc
mov
xor
das
jb
ja
addr16
dec
dec
xlat
add
xchg
pusha
pusha
aad
and
in
cs
decl
jg
iret
les
rcrb
cmp
sbb
jp
icebp
outsl
dec
or
lret
popl
leave
cli
pop
andl
out
pop
cmpsb
mov
mov
in
xchg
aam
cmpsl
mov
ljmp
mov
xor
mov
inc
mov
and
and
fiaddl
dec
ds
jo
ss
shrb
jmp
call
into
sub
cmpsb
push
imul
shlb
cmp
mov
andb
pop
pop
jle
insb
int
enter
adc
jp
and
negb
shr
adc
push
sti
testl
dec
arpl
or
sub
je
adc
pop
sub
stos
and
pop
loopne
or
inc
xor
adc
push
or
push
push
xor
jb
aad
sub
and
sub
pop
pop
into
lock
out
lahf
lods
je
xor
shlb
mov
mov
sbb
inc
scas
push
mov
stc
enter
cmpl
xchg
hlt
inc
ljmp
jb
jp
decb
adcb
icebp
pop
cmpsb
adc
mov
popf
xchg
lret
aas
cmpl
jae
cmp
sbb
enter
cmp
mov
mov
aad
pop
sub
enter
jl
push
cld
pop
inc
test
pop
pop
pop
lahf
iret
ret
sbb
sar
or
lds
fcompl
aaa
arpl
cs
push
leave
popa
dec
dec
push
ret
pop
pop
and
adc
out
enter
push
js
popf
ficomps
loopne
jbe
shrb
stos
jns
mov
xor
pop
mov
mov
test
imul
sub
aaa
mov
lcall
push
and
ret
je
jns
mov
jg
into
lret
pusha
call
int
adcl
mov
sbb
sbb
out
daa
lret
test
mov
sbb
out
mov
xchg
lret
and
pop
fs
mov
dec
jmp
inc
push
mov
call
push
sub
push
es
and
mov
pop
aam
cli
push
mov
cmpsl
adc
fdivl
sbb
sub
into
test
adc
mov
pushw
inc
fistpll
stos
mov
shrb
test
sbb
imul
shlb
push
jae
je
dec
pop
xchg
jae
xchg
enter
lds
into
push
or
scas
subb
in
imul
pop
mov
mov
pushf
out
adc
mov
aas
jg
and
jne
mov
test
xchg
notb
loope
sbb
mov
fdivl
pop
enter
lea
push
and
inc
pop
pop
add
jecxz
mov
fsubr
sbb
pop
enter
and
pop
mov
xchg
cmpsb
sub
adcb
cwtl
sbb
xor
add
enter
jge
ljmp
xor
fwait
xor
clc
lret
data16
fwait
jmp
mov
dec
push
sbb
sbb
in
sti
lods
icebp
repnz
adc
cmp
pushf
outsl
scas
and
pushf
dec
jmp
sahf
pop
add
inc
push
fsubs
pop
lea
les
sub
mov
mov
adc
jae
pop
or
dec
sub
scas
inc
adc
xchg
mov
or
leave
sbb
andb
fimull
fs
cld
push
fs
and
jne
scas
jnp
xchg
sahf
enter
pop
shl
mov
xchg
shrl
mov
push
mov
pushf
dec
subb
fwait
ss
adc
cs
cmpsb
cmp
push
orb
pop
adc
xlat
sub
sub
fsubrs
inc
add
ss
jbe
lret
out
sub
bound
outsl
leave
push
cmp
and
scas
dec
xchg
ret
pop
enter
inc
loope
cmp
int
or
rcrb
inc
push
loope
aaa
sbb
repnz
push
or
mov
xor
stc
xchg
orl
jbe
lret
inc
push
jb
cmc
lret
mov
lock
push
jbe
lahf
mov
lcall
sub
sub
das
and
pop
nop
mov
cmp
sub
fisubrl
gs
pop
shlb
push
je
sub
jo
and
lcall
sub
mov
cmp
popf
arpl
pop
inc
fcoml
jl
mov
enter
jmp
pop
mov
mov
mov
cmp
sub
inc
inc
ds
add
jns
xchg
pop
mov
sub
lret
push
sbb
inc
stc
aas
icebp
push
and
sbb
or
push
sub
add
sub
mov
fwait
mov
sub
nop
bound
mov
xchg
mov
sub
xchg
add
cmp
aaa
orl
inc
sbbb
mov
ss
inc
xchg
in
out
jl
ret
mov
mov
adcl
data16
mov
and
pop
sahf
pslld
pop
ljmp
push
sub
jo
test
sbb
sub
jae
outsb
lahf
or
in
cmp
xchg
mov
pop
cmpsb
popa
adc
imul
jl
or
or
popf
dec
sbb
sub
sub
jge
pop
adc
arpl
sbb
dec
dec
inc
jns
xchg
sub
cmpsl
ret
out
xor
insl
enter
cmpsb
rcrb
fsubrp
scas
or
test
sub
and
xchg
neg
loope
outsb
add
sbb
das
addr16
and
dec
lds
sbb
fcompl
out
push
arpl
lcall
lcall
or
adc
enter
xor
pushw
fistl
mov
rcrb
jle
arpl
test
fcom
repz
decb
aad
and
pop
stos
xchg
cmp
mov
sbb
xor
jns
cwtl
insb
lock
shrb
mov
lock
or
out
sbb
imul
dec
and
or
mov
sub
stc
stos
push
xchg
pop
repnz
sbb
loope
int
fnstenv
sub
push
sub
les
sbb
stos
pop
xor
out
aas
mov
pop
sub
dec
stos
lods
mov
and
sbb
sti
mov
sbb
pop
xchg
pop
orb
enter
add
mov
and
sbb
adc
lahf
jge
pop
repnz
addr16
cltd
jecxz
add
sub
sti
ffreep
sbb
stc
jns
or
aas
repz
sbb
daa
add
fs
out
push
repz
pop
sahf
inc
scas
xor
pushf
mov
movsl
aas
les
push
out
js
pop
in
testb
adc
addr16
int3
pop
aas
jo
outsl
stos
outsl
shr
cmp
xor
push
in
clc
fnstenv
enter
mov
loopne
sbb
cmc
mov
dec
cmp
enter
rclb
stc
and
icebp
mov
shll
pop
pop
pop
push
sub
dec
out
xchg
push
shl
inc
fsub
cltd
test
lea
mov
or
pop
dec
sbb
push
mov
xor
xor
xchg
inc
mov
mov
xchg
cmp
enter
or
pop
cmc
jl
sbb
sub
insl
jns
mov
scas
mov
and
ret
sbb
mov
notl
shrl
movsb
sbb
ret
sub
sub
cmp
pop
push
and
add
dec
sub
jecxz
push
sbb
dec
lea
adc
loop
loopne
jae
cmpsb
cmp
jg
cmp
dec
or
and
add
mov
dec
pop
add
outsb
mov
xor
nop
mov
or
subl
xorl
lods
jns
outsb
addr16
and
stc
xor
dec
cmpsl
jp
aad
dec
jge
jne
push
gs
das
dec
lods
js
push
inc
pusha
sub
stos
mov
enter
cmp
mov
es
push
fldenv
push
mov
dec
test
mov
shr
inc
rep
cltd
pop
imul
pop
push
shll
pop
rclb
push
xor
aas
sbb
leave
out
sub
dec
jno
cmp
add
fs
ficompl
sti
mov
insb
cmp
lea
ss
les
jle
pop
xor
cmc
lock
pusha
inc
cmp
shrl
sub
cwtl
dec
ds
add
mov
cmpsl
and
sub
mov
iret
mov
xchg
or
add
lods
arpl
daa
dec
pop
lret
mov
or
add
arpl
outsb
pop
or
or
cwtl
sub
sub
pop
push
inc
rcll
insl
sub
das
sub
xchg
add
or
xchg
or
add
push
std
ss
push
push
inc
or
push
sub
jle
repz
insb
inc
mov
mov
mov
push
xorb
pop
lret
nop
mov
sub
push
enter
cld
jnp
popa
add
mov
lcall
fcmovnbe
mov
xor
loop
shrb
add
mov
dec
pop
cmp
or
jo
push
pop
mov
lret
sti
stos
out
sub
repz
mov
jecxz
push
cs
in
sarl
mov
repz
out
sbb
in
pop
cmp
hlt
or
sub
jae
push
mov
pop
sub
enter
jb
fisttps
push
pop
mov
in
arpl
cmpl
push
lcall
sbb
outsb
push
cmpsl
xchg
sub
or
dec
bound
jp
cmpsb
pusha
in
es
scas
roll
enter
daa
inc
add
jmp
aad
jecxz
cli
imul
pop
movsl
enter
and
and
adc
sub
mov
jp
sbb
jecxz
ja
push
fscale
mov
sbb
lret
ja
popf
push
jmp
pop
sbb
lret
push
js
dec
xlat
pop
cmp
push
push
mov
add
xlat
sub
adc
push
dec
inc
loope
jns
mov
sbb
mov
pusha
enter
mov
push
mov
rcll
xchg
fldt
sbb
flds
push
fwait
outsl
inc
repnz
lds
push
adc
jns
test
ret
jo
mov
add
ror
add
sub
inc
sbb
push
lods
call
push
pop
push
push
pop
es
mov
sub
add
adc
sbb
call
mov
enter
ss
mov
pop
inc
push
fwait
jns
lret
orb
sbb
or
movl
scas
mov
sbb
cmpsb
add
xchg
ret
cltd
dec
inc
mov
or
mov
ss
loop
jo
pop
int3
in
aad
and
sbb
xchg
mov
int
jecxz
mov
or
bound
pop
adc
sbb
ret
sub
pusha
or
push
mov
cwtl
mov
mov
pop
or
ret
mov
push
mov
adc
out
leave
loopne
mov
hlt
pop
cmp
cmp
jg
inc
inc
ffree
movsl
or
mov
lahf
inc
sub
sbb
cmp
out
enter
push
pop
mov
jns
mov
lock
fs
inc
mov
xchg
in
mov
outsl
stos
inc
mov
rcll
cmp
shrb
imulb
mov
sub
jne
lods
push
cmpsl
addr16
dec
pop
enterw
rcll
test
and
sub
lret
jbe
das
adc
sbb
jle
lahf
std
sarl
aaa
jle
xchg
jbe
repnz
shrb
idivl
jb
enter
lea
lea
pop
mov
cmpsb
mov
xchg
inc
call
sbb
cmc
push
insb
enter
addr16
sbb
sub
inc
mov
and
sbb
jmp
and
bound
sub
sbbb
pop
daa
push
sbb
inc
add
mov
idiv
mov
jge
push
mov
inc
dec
xor
outsl
xlat
fnstenv
dec
jae
into
and
int3
lds
sub
sub
inc
lods
ljmp
xlat
insb
popl
dec
enter
adc
js
xor
cmp
jnp
insl
in
scas
sbb
mov
mov
sbb
sti
inc
push
pop
iret
and
test
data16
int
sti
cli
xor
jecxz
pop
push
mov
push
in
sbb
shrl
xor
sti
insl
js
ret
dec
mov
push
lahf
imul
daa
daa
mov
pop
push
mov
adc
pushf
xchg
leave
dec
and
xchg
mov
xor
pop
sub
pop
out
addr16
stc
aaa
xchg
dec
push
inc
push
sbb
pop
scas
cmpb
lret
stos
rcl
pop
icebp
outsb
push
es
xorl
cld
sbb
xor
outsl
mov
int
sti
push
sub
sub
enter
jg
mov
sub
clc
mov
inc
dec
enter
mov
pop
leave
jns
clc
in
dec
test
or
sbb
test
mov
push
adc
jmp
mov
lret
mov
pop
aaa
lahf
or
shrb
inc
mov
je
dec
es
pop
cmpsl
addr16
and
test
ret
sarl
in
push
icebp
jbe
xchg
mov
and
pop
mov
push
outsl
leave
inc
mov
jne
pushf
dec
lea
jns
ja
ds
pop
icebp
frstor
dec
pop
xor
sbb
sub
test
lcall
push
mov
repz
add
enter
jp
daa
pop
int3
pop
mov
jnp
js
lret
or
push
add
gs
int
xchg
outsl
enter
out
xchg
jmp
pop
jnp
push
daa
adc
ds
cmpsl
cmp
mov
shl
inc
pop
insb
mov
inc
ret
fcomps
jns
lea
push
gs
push
outsb
je
scas
ss
enter
movsb
frstor
cmp
mov
inc
daa
sbb
push
cltd
fstl
mov
push
pushf
ror
out
iret
and
pop
fwait
adc
mov
mov
hlt
getsec
and
xchg
sub
lods
xchg
xor
or
stos
je
lods
sti
mov
push
addl
cld
jnp
je
adc
push
leave
sub
loope
or
sbb
dec
sub
add
inc
xor
sub
pop
out
pop
enter
lods
arpl
pop
xor
jbe
inc
fisubrs
or
dec
imul
dec
repz
and
ja
pop
icebp
jne
sub
jecxz
mov
repz
sbb
xor
jns
xchg
mov
hlt
xor
sbb
int
mov
mov
inc
bound
out
cmp
and
ds
sub
ret
mov
adc
push
out
jl
fcomps
aad
xchg
xor
cmp
dec
add
out
xchg
js
repnz
mov
xlat
jb
out
aad
sub
mov
out
sub
adc
xchg
mov
enter
pop
lcall
inc
push
cmp
scas
imul
ja
enter
test
sbb
cmp
clc
inc
test
pop
mov
jp
inc
daa
mov
push
mov
movsl
push
shrb
xor
inc
xchg
lahf
or
jbe
mov
or
enter
pop
loope
mov
adc
pop
and
arpl
pop
push
xor
mov
adc
mov
fwait
sarb
sarl
jp
fadd
call
out
push
fs
int3
hlt
movl
and
mov
dec
pop
scas
mov
sbb
mov
ljmp
mov
xchg
cltd
xchg
cmp
enter
inc
push
clc
inc
pop
push
scas
jno
add
addr16
popa
mov
fnstsw
cld
cmpsl
inc
xor
cwtl
data16
fists
or
xorb
sub
cltd
or
xor
out
cmp
mov
push
leave
or
and
cmp
lret
nop
cltd
mov
inc
fmuls
cmp
enter
cli
clc
jmp
xor
sub
sub
sbb
movsb
out
sbb
bndldx
xor
iret
hlt
inc
sub
dec
add
adc
sbb
add
fistps
insl
dec
cltd
jno
imul
imulb
mov
lcall
stos
fildll
or
xor
or
adc
sub
test
and
outsl
push
xchg
icebp
ficompl
xchg
xchg
dec
icebp
inc
jle
mov
xchg
pop
xor
cmc
pop
add
stos
sub
dec
adc
push
fmul
xor
adc
jmp
xchg
push
je
xor
cli
popa
dec
pop
lods
cmp
shl
insl
xchg
pop
and
sub
xor
mov
mov
movsb
sub
imulb
xor
lock
aas
lcall
js
cmpsl
pop
sub
aaa
jb
pop
sbb
push
inc
stos
push
and
cltd
mov
cli
sub
into
cmpps
adc
mov
pop
mov
bound
sub
hlt
lahf
adc
cmp
mov
mov
sbb
mov
inc
sbb
jle
inc
sub
sbb
pop
fwait
imul
jp
xor
cld
int3
sbb
add
gs
jmp
jae
xchg
pop
out
sti
addl
xchg
push
sub
push
dec
push
stos
ret
sbb
adc
js
popa
pop
rcll
push
data16
mov
js
aaa
mov
mov
xor
mov
adc
or
testb
cmp
test
mov
adc
test
dec
pop
xorb
or
and
sbb
push
dec
push
enter
push
cmp
xlat
dec
in
inc
sbb
mov
mov
push
and
aaa
dec
outsb
inc
sbb
sub
xchg
aaa
sbb
es
sub
bound
sub
jns
lea
loopne
mov
push
sub
dec
adc
daa
and
sub
inc
dec
aas
minps
sbb
pop
iret
int3
js
sub
mov
data16
adc
loope
add
int
sub
mov
sbb
fwait
and
repz
and
sub
call
es
sub
jecxz
push
and
mov
xor
test
mov
sti
je
push
sub
cmpsb
or
cmp
mov
sbb
xor
jl
xchg
mov
out
pop
in
xchg
push
sub
cmp
or
shrl
enter
dec
aam
lods
adc
sbb
lea
sbb
imul
cmc
xor
mov
cmpsl
icebp
pop
notl
pop
pop
in
inc
and
aad
push
sub
mov
fstpt
pop
sub
pusha
push
scas
les
fsubrl
mov
mov
enter
outsb
xor
add
pop
pushf
fwait
dec
das
inc
sub
mov
ret
lods
dec
sub
dec
ljmp
leave
arpl
push
or
add
jmp
jno
push
inc
out
mov
dec
pop
push
out
mov
loope
jge
insb
sub
jl
leave
push
divl
sub
stos
and
dec
stos
nop
sbb
mov
adc
pop
mov
mov
test
lock
jge
inc
sahf
or
inc
andb
shll
mov
cpuid
sub
sbb
int
xchg
daa
rep
ret
pop
in
inc
inc
test
int
enter
loope
lret
jecxz
pop
fwait
lret
sti
into
xchg
adc
or
or
push
fisubl
pop
fnstenv
fcomps
dec
ljmp
or
sahf
fdivrs
xchg
push
insl
sbb
jnp
je
ret
das
xor
jb
aas
std
sbb
mov
lods
xchg
adc
lcall
sbb
mov
movsl
and
aaa
cltd
jmp
or
and
xchg
sub
or
fisttps
fs
push
insl
xlat
mov
js
test
mov
push
lcallw
inc
test
sbb
sub
in
in
sub
lea
test
sbb
into
mov
jg
stos
xchg
xlat
bound
cwtl
incl
sub
or
test
loop
jns
dec
fs
pop
in
pop
and
sbb
push
jne
lods
inc
mov
xchg
mov
xchg
enter
xchg
cmp
or
ficompl
sub
loop
mov
sub
shrl
or
ficompl
dec
and
xlat
or
mov
add
ret
mov
lcall
xor
pop
push
test
js
sbb
jb
nop
mov
dec
enter
inc
xorl
loop
loopne
sub
and
daa
fidivrs
cmpsb
das
xchg
mov
mov
aaa
enter
mov
pop
insb
test
scas
out
add
pop
cmc
out
cli
sbb
pop
dec
lock
xchg
stos
push
or
outsl
popf
sahf
enter
or
dec
and
movsl
xchg
xchg
or
cmp
cmp
sbb
inc
xlat
sbb
and
stc
jne
enter
outsl
mov
pop
sub
out
fcmovne
push
pop
xchg
adc
push
pop
jg
sbb
loopne
lods
icebp
xchg
add
cmpb
dec
add
cmp
pop
test
cld
scas
stc
add
and
cltd
pop
pushl
aaa
cmc
mov
inc
jno
bound
fs
test
scas
add
pop
mov
dec
mov
sub
cmc
in
add
dec
pop
mov
ret
jmp
jg
sbb
pop
jge
push
es
mov
add
inc
out
fstpl
sub
inc
in
cs
and
cli
mov
sub
pop
cmc
call
dec
pop
in
je
sub
push
mov
stos
sbb
arpl
std
lcall
sarb
mov
push
test
ja
push
jl
scas
or
pop
xchg
jae
lods
das
add
lcall
sub
gs
inc
roll
pop
fyl2xp1
ljmp
pop
in
push
mull
mov
ja
rclb
xor
ret
xchg
pop
pop
dec
mov
sbb
movsl
jge
enter
dec
cmc
sahf
sbb
and
push
enter
inc
iret
dec
mov
iret
push
ficoml
or
in
enter
adc
repnz
std
repz
fxtract
adc
mov
sti
js
xchg
cmp
in
faddl
je
movsb
cs
popa
add
insb
add
sub
popf
lret
jb
mov
push
iret
mov
pop
lcall
mov
movsl
sub
jle
mov
sbb
in
mov
fimull
pop
outsl
pop
rcrl
fidivrs
ja
mov
and
icebp
jl
xor
aas
push
xchg
jl
mov
lret
hlt
jle
aaa
sbbb
jmp
xor
cmp
pusha
popa
inc
mov
pushf
jmp
and
in
ds
cmp
lods
push
mov
jne
out
mov
cmpsb
lret
pushf
loope
inc
pop
outsb
sbb
xor
movsb
enter
loop
add
bound
enter
adc
push
insl
pop
cmp
or
popa
ljmp
gs
rcrl
xor
pusha
clc
jo
repz
int3
outsl
shrl
sub
shl
sbb
out
popa
outsb
inc
and
xlat
sub
andb
xor
cmp
xchg
cmp
xchg
lods
aam
or
sub
daa
mov
pusha
sbbl
shll
cwtl
inc
sbb
jae
je
mov
lods
enter
dec
scas
pop
jmp
aad
mov
iret
push
mov
pop
loope
xlat
sbb
mov
int
bound
pop
add
lea
sub
mov
inc
stos
outsb
neg
or
je
adc
xlat
mov
nop
dec
mov
cs
mov
xchg
mov
fsubs
and
inc
or
nop
inc
push
push
icebp
addr16
sub
lods
adc
sar
jl
lcall
sub
cwtl
sbbb
mov
xchg
js
pushf
fs
gs
fildl
sbb
sbb
enter
mov
dec
shlb
insl
pop
add
cs
out
lods
sub
dec
ficomps
sbb
or
iret
fiadds
xchg
lds
mov
inc
sub
sub
iret
sahf
mov
sub
fldl
sbb
jbe
xchg
xlat
out
enter
jno
in
pop
push
mov
out
mov
mov
xor
loope
mov
pop
and
outsb
lock
cmpb
jge
cmp
sahf
xor
sbb
in
ror
cmp
mov
and
shlb
sub
push
inc
popf
stos
push
in
pop
mov
sub
lods
aas
add
xlat
cltd
or
ffree
sub
imul
push
sub
or
sbb
sub
inc
xor
ja
pop
add
or
rol
stc
fcomip
sbb
push
push
ret
dec
and
mov
and
pusha
enter
pop
jb
push
pop
cmc
les
push
and
mov
clc
xor
test
gs
jecxz
pushf
add
mov
loopne
fwait
sub
inc
clc
cmp
popf
push
or
daa
push
aas
leave
loopne
push
pop
daa
mov
adc
adc
es
outsb
sbb
fistpl
cmp
dec
nop
mov
rorl
adc
mov
sbb
dec
les
add
loopne
loopne
sub
xchg
lcall
icebp
inc
sahf
push
push
jnp
out
rcll
insl
push
cmp
mov
xor
enter
sub
mov
das
jnp
sbb
adc
mov
repnz
xchg
outsb
xchg
sub
jns
lods
lcall
and
lock
and
mov
std
loopne
sbb
sub
pop
fbld
sbb
fs
push
mov
pop
mov
fsubl
push
jne
inc
lahf
mov
mov
xor
shlb
xchg
pop
dec
xor
fiadds
jns
xchg
jp
inc
mov
lret
in
dec
or
pop
sbb
pusha
lods
xor
push
xor
sub
push
dec
pop
loopne
into
sti
pop
sub
pop
ret
enter
xchg
and
call
mov
jmp
cmp
repnz
sub
dec
mov
adc
dec
gs
xor
xchg
enter
incl
sbb
xchg
pop
xchg
loopne
cmp
push
jne
insl
mov
adc
lods
adc
pop
jle
push
lea
add
insb
outsl
sbb
xchg
jno
enter
cmp
pop
dec
movsl
xor
scas
pop
inc
enter
jnp
loopne
inc
pop
pop
sbb
add
repz
jns
sbb
push
pop
in
outsl
in
jl
sbb
std
ret
mov
inc
cmpsb
push
in
pop
iret
popf
cmpsl
push
sbb
cmp
pushf
sub
js
loope
test
dec
push
sbb
pop
cmp
cwtl
imul
daa
or
push
lds
xchg
ds
jecxz
sbb
inc
sub
or
adc
sbb
repnz
in
enter
dec
lods
mov
loope
je
xor
inc
into
fcoml
sbb
xorb
cli
mov
add
sbb
xlat
enter
adc
mov
aad
pop
scas
addr16
adc
int3
add
imul
enter
sbb
and
frstor
rorl
xchg
cld
aad
mov
pop
xor
test
xor
jno
in
int3
mov
int
popa
movl
popa
out
dec
enter
in
sub
andl
mov
xchg
sub
sbb
fdivrs
sbbb
cmp
sti
xchg
cmc
test
mov
pop
jmp
ljmp
adc
dec
sub
or
mov
outsl
je
fisttpll
sub
icebp
pop
or
push
jecxz
add
jg
push
pushf
aaa
fcompl
pushf
mov
clc
adc
in
outsb
sbb
hlt
ss
scas
inc
js
inc
jp
sub
repnz
mov
mov
lea
data16
push
push
or
xchg
sbb
gs
stos
fisubrl
push
mov
inc
mov
dec
cli
inc
loope
sbb
ss
cmp
jmp
fs
pop
fidivl
shrl
mov
lods
loopne
sub
hlt
pushf
rorl
xor
in
pop
sbbb
or
xchg
mov
add
stc
sbb
dec
add
sti
inc
pushf
and
sub
and
out
xlat
sub
insl
jl
stos
hlt
xor
enter
flds
dec
xchg
cmpsb
out
mov
add
ds
pop
lock
jecxz
mov
mov
out
mov
pop
sbb
subw
push
filds
into
add
mov
xchg
push
sbb
and
subb
xchg
gs
movl
jp
xchg
loopne
mov
iret
loop
sub
out
xor
rcrl
jg
test
inc
adc
dec
cmp
mov
mov
aam
ds
and
shrl
mov
dec
mov
cwtl
inc
push
cmpsl
push
fdivr
pop
mov
xorl
scas
pop
pop
lret
addr16
and
push
fisubl
mov
xor
fwait
jno
insl
addr16
mov
pop
test
sub
enter
pop
sub
mov
ja
xor
mov
xor
pop
pop
or
repz
jp
fldt
add
push
or
lock
popa
mov
mov
dec
mov
je
jb
or
push
mov
xchg
xchg
or
mov
or
xor
jecxz
sub
pop
fisttpl
push
xchg
lds
cmpb
mov
xor
cld
xchg
adc
cltd
jecxz
and
jae
imul
dec
lahf
sub
cmp
ltr
roll
push
or
rorb
xchg
cmp
test
push
mov
sbb
and
or
mov
out
xor
push
addb
adc
mov
sub
pop
xor
adc
pop
vpshab
sbb
dec
fimull
add
mov
sti
mov
lds
rcr
add
nop
test
mov
pop
jno
or
xchg
fiaddl
cwtl
popa
ret
pop
push
les
enter
mov
enter
lods
shlb
cld
sbb
sub
push
inc
fs
dec
sbb
js
out
add
xchg
cld
fs
cmp
nop
lds
inc
or
in
aas
inc
cs
sbb
jmp
xchg
sub
ficomps
std
inc
lds
sbb
call
ss
jno
pop
incb
and
mov
add
in
xchg
aas
scas
repz
mov
stc
jmp
pop
sbb
fisubrs
faddl
mov
sbb
sarl
lea
push
icebp
pop
repnz
cmpsl
push
push
sti
shr
enter
jae
arpl
pop
rcll
rcr
dec
jno
sub
std
adc
lock
pop
notb
out
pop
sub
ret
sti
mov
insl
inc
or
jp
enter
mov
sub
pop
imul
push
ljmp
adc
push
fisubl
push
imul
inc
enter
mov
mov
sbb
sbb
sub
push
int3
cmp
jl
pop
ss
and
sub
cmp
test
xchg
sbbl
mov
cltd
pop
icebp
adc
jecxz
and
or
jmp
cmp
mov
xor
push
mov
xchg
fisttpl
pop
and
cmp
dec
sub
xlat
pop
and
jb
fisubs
js
stos
mov
dec
imul
adc
and
cmp
xor
mov
test
add
or
pop
es
in
pop
xor
cmp
data16
rolb
dec
popa
add
pop
outsb
push
sub
cltd
xchg
cmp
add
or
pop
movsb
xchg
xor
adc
push
fs
icebp
popa
sub
inc
nop
sbb
jo
fists
and
adc
pop
mov
jge
jmp
xchg
xor
pop
outsl
push
enter
mov
mov
cmp
stc
lods
jmp
enter
mov
outsb
lret
incb
repz
pushf
adc
dec
cltd
and
scas
jb
mov
jns
inc
dec
cli
add
adc
outsl
aad
std
pop
lret
jb
sub
pop
loopne
and
or
mov
enter
mov
pop
insb
out
inc
xchg
push
jl
sub
push
mov
jle
inc
and
jg
lock
and
pcmpgtw
jmp
adc
jnp
pushf
and
cwtl
adc
outsb
aas
mov
mov
mov
mov
pop
ss
loopne
inc
and
sbb
mov
enter
adc
sub
pop
mov
daa
mov
sub
and
mov
mov
gs
jb
lret
repnz
sub
movsb
sbb
inc
addl
pop
sub
in
adc
ss
sbb
mov
cli
push
imulb
xor
enter
fisttps
insl
ret
mov
jg
or
add
dec
fcom
push
enter
jae
cli
dec
jnp
lret
insl
sbb
lea
aam
jge
repnz
out
nop
pusha
aas
fnstenv
add
inc
enter
fadds
enter
loopne
and
inc
je
or
sti
cs
inc
leave
mov
xor
icebp
mov
mov
fldcw
xchg
scas
add
fidivrs
mov
ss
jmp
xchg
test
xchg
pop
fisttpll
mov
inc
fnsave
arpl
in
int3
leave
sbb
test
push
popf
addl
leave
incb
les
loope
clc
int3
mov
sbb
cmpsl
push
pop
add
fcoml
nop
and
sbb
arpl
mov
add
push
out
mov
or
jecxz
inc
jae
or
ret
dec
enter
mov
adc
and
popf
fisttpll
aam
rcr
int3
mov
mov
iret
jg
sub
mov
xlat
mov
sti
ret
sub
cmp
sub
andl
inc
xor
enter
inc
sbb
push
test
mov
mov
ja
sbb
or
sbb
and
outsl
pop
jg
pop
es
sarl
xchg
xor
sub
jp
sbb
jne
xlat
mov
fidivl
dec
popf
test
enter
pop
pop
roll
pop
xchg
lea
pop
stos
stos
push
aaa
iret
out
sub
xor
and
mov
popa
sbb
push
outsl
adc
add
std
loopne
fs
cmp
fistps
fadds
iret
jne
pop
pop
sbb
push
mov
imul
stos
mov
aaa
arpl
in
cmp
mov
and
stos
js
nop
lock
movsb
loope
leave
out
sbb
jle
push
and
jmp
xchg
xor
lods
jl
xchg
or
mov
jmp
int
xor
data16
jecxz
pusha
pop
jp
pop
push
sub
mov
popa
sbb
push
mov
mov
je
enter
cs
or
pushf
xchg
sahf
sbb
movntps
int3
xor
mov
es
insb
xchg
iret
das
pusha
call
push
push
into
hlt
mov
repz
enter
imul
sbb
fcompl
iret
mov
pop
push
sbb
fidivrl
jae
dec
dec
lods
mov
push
sub
pushf
in
mov
je
sbb
and
bswap
push
adc
mov
pop
pop
and
ficoms
sbb
xchg
mov
cltd
pusha
xlat
adc
lret
cmpsb
sbb
std
int
fldcw
mov
adc
in
mov
and
and
pop
into
jb,pn
loop
lret
sub
sub
inc
pop
and
sti
scas
xchg
in
int3
inc
sub
jl
mov
sbb
xlat
sub
pop
test
gs
gs
cltd
sub
xchg
or
pushf
pop
adc
je
push
je
sti
pop
call
pop
loop
sub
mov
pop
arpl
sbb
stos
ljmp
mov
fs
and
cmp
sar
sub
and
xchg
int
testl
sbb
orb
leave
std
mov
dec
pop
pop
sub
rorb
add
sub
dec
mov
mov
arpl
cli
nop
cmp
sbb
stc
adc
adc
sbb
mov
divb
imul
loop
add
xchg
inc
in
pop
aad
enter
or
cmp
inc
int3
inc
sbb
or
icebp
or
stos
mov
push
imul
pop
inc
cmc
jmp
imul
enter
icebp
fwait
mov
and
mov
sub
push
inc
adc
pop
mov
js
shrb
imul
cmp
pop
mov
push
mov
out
and
xchg
inc
dec
jns
lods
jmp
pop
inc
add
sti
fbld
test
sti
sub
data16
lret
sbb
jnp
jmp
push
dec
fdivrl
dec
push
xor
stc
inc
out
dec
leave
xor
inc
sub
sbb
out
xor
roll
mov
nop
push
out
sti
adc
pop
lods
xchg
mov
sbb
mov
xlat
bound
pop
mov
sbb
sub
hlt
and
mov
jbe
mov
inc
add
shll
jge
enter
mov
adc
sbb
pop
das
mov
push
mov
or
lock
sbb
dec
repz
mov
call
sub
pop
sub
rorb
xchg
test
push
jbe
sub
sbb
inc
insl
mov
fs
inc
repnz
popf
sub
icebp
pop
push
sbb
arpl
lret
jge
dec
pop
pop
push
in
lcall
xor
jecxz
pusha
and
sub
inc
into
lock
sub
stos
int3
xchg
data16
lds
outsl
dec
mov
loope
mov
add
cmp
cltd
cmp
xor
mov
dec
les
pop
cwtl
mul
sbb
lds
inc
sub
insl
pop
clc
mov
adc
push
jl
pushf
add
sub
nop
repz
xchg
stos
dec
lods
enter
inc
xor
fs
pop
sbb
daa
fadds
cmc
rcrl
sbb
in
imul
outsb
sti
pop
and
xchg
push
add
lods
sub
push
or
pop
sub
push
adc
add
loopne
popf
push
arpl
int3
mov
inc
xchg
test
ret
jge
js
or
add
mov
jle
outsl
xor
pop
sbb
xchg
inc
sub
imul
negb
jecxz
or
push
push
addr16
sub
cmp
lods
xchg
adc
push
ljmp
jg
mov
xorb
xchg
jp
mov
rol
jge
pop
popf
sub
test
outsl
sti
dec
pop
jg
out
icebp
leave
in
cmc
clc
sub
je
push
loopne
movsl
shlb
dec
adcb
sarb
sahf
push
out
mov
mov
add
sub
pop
cs
pop
add
sti
pop
inc
mov
pop
sbb
sub
lahf
enter
xchg
inc
icebp
cmp
fs
arpl
pop
sahf
pop
jbe
inc
mov
lods
popa
je
cmp
sub
xor
sub
push
or
push
push
dec
cld
dec
loope
mov
and
xlat
jbe
test
cmpsl
sbb
shlb
aam
cmp
cli
scas
cmp
cmpl
push
sbb
mov
in
bound
ds
stc
je
dec
add
in
mov
in
sbb
push
rcll
mov
sub
dec
inc
pop
add
xchg
pop
pop
fistpl
popf
dec
jno
insl
ret
pop
push
sbb
push
sbb
loop
sub
cmp
lcall
ds
xchg
hlt
dec
xlat
pop
test
sub
cmp
mov
sbb
sub
inc
mov
idivl
in
pop
nop
outsl
sarb
movsl
xor
mov
jmp
pop
pop
sbb
pop
mov
pusha
sbb
fwait
mov
shrb
aas
movsb
xchg
test
cld
repnz
push
mov
or
pop
push
popa
fisubrs
or
sbb
add
xor
loop
iret
push
xchg
and
lea
popa
outsl
dec
sbb
inc
push
push
jg
filds
mov
push
pop
and
aaa
push
aad
mov
ja
adc
push
clc
ja
pusha
enter
sbb
pop
xor
lds
ja
fistps
cmpsb
sub
adc
test
sti
sub
xchg
lret
and
or
sahf
cmp
mov
sub
adc
inc
cmpsb
inc
movsl
hlt
jecxz
out
pop
sbb
dec
push
pop
pop
and
mov
mov
xor
jb
enter
in
xor
push
and
jae
or
push
sbbb
or
sbb
sbb
fisttpll
jecxz
mov
xor
push
movsl
ja
movsb
icebp
add
xchg
aad
out
mov
sbb
xchg
jae
loop
ds
mov
push
and
mov
cmp
sub
sbb
mov
jl
mov
adc
enter
arpl
shlb
lahf
jmp
iret
rol
int
push
stos
leave
xor
subps
pushf
xchg
call
sbb
cmp
adc
fs
xor
and
sbb
out
scas
mov
mov
pop
cmpsl
jno
lret
fcompl
sub
and
or
add
mov
push
daa
out
jnp
es
sbb
and
jns
les
push
iret
in
cltd
jge
adc
jne
inc
add
sbb
fwait
lea
icebp
xor
cld
stos
rorb
mov
sub
jle
fbstp
and
jp
cmp
push
loopne,pt
mov
add
mov
sub
mov
call
mov
in
adc
inc
ret
pop
mov
pop
lock
lcall
push
cmp
nop
movsl
pop
mov
xor
lret
out
sub
jb
jns
cltd
mov
ret
xor
movsb
mov
adc
jp
inc
lahf
mov
pop
icebp
xchg
add
nop
add
into
mov
data16
push
sbb
ja
aad
int
pop
mov
sub
je
inc
inc
out
sbb
lahf
pushf
popa
lods
add
and
pop
cmp
mov
xchg
pop
add
fldenv
add
pop
xor
pop
daa
insb
cltd
sub
pop
daa
or
jns
shlb
cmpsb
movsl
sub
xor
je
fdivrl
fstps
sbb
sub
shlb
mov
decb
paddusw
add
call
movsb
pusha
jg
negl
jb
xorb
enter
iret
xchg
mov
sti
lahf
fisubl
fsubs
mov
sbb
clc
dec
ss
sbb
dec
pop
jae
mov
movsb
push
push
pop
int3
xchg
loope
pop
rcrb
shlb
leave
sub
sbb
and
shll
mov
enter
adc
push
clc
aad
mov
inc
mov
or
mov
inc
loopne
sub
jle
xlat
adc
pop
sub
mov
or
or
xor
lea
subl
pop
clc
pop
cmp
xchg
push
outsl
dec
and
ret
push
jne
stos
repnz
xor
fstps
in
aam
cld
sbb
sub
int3
or
mov
gs
inc
push
sbb
mov
cmc
std
inc
and
push
mov
add
ret
push
enter
out
cmc
inc
fadds
sub
fdivr
outsb
sahf
push
int3
popf
enter
bound
or
stos
mov
out
lods
pop
loope
enter
push
adc
xchg
pop
lahf
lret
insb
stc
and
mov
pop
lods
inc
sbb
pop
mov
enter
mov
push
mov
inc
divl
or
jge
shrl
pop
inc
cltd
sub
adc
add
test
xor
sbb
sub
lock
pop
mov
cmp
ret
cmc
jb
cmc
fcmovnbe
testl
xor
and
pop
pusha
add
hlt
cmc
add
lds
jmp
pop
andl
jge
inc
nop
incl
jb
dec
mov
lret
cmc
ss
push
xor
jnp
or
test
aad
mov
sub
cltd
movsl
imul
mov
rcrl
mov
in
inc
dec
rorl
inc
fcoml
jl
mov
push
cmpb
stos
dec
push
push
and
pusha
push
cmp
lret
daa
dec
jge
jg
jae
es
dec
imul
scas
fisttpl
push
mov
je
pop
xchg
cs
mov
or
outsl
test
dec
test
inc
pop
xchg
pushf
sbb
sub
fs
add
mov
cmp
lret
sbb
xorl
test
jb
fcmovne
or
lock
sbb
in
pushf
add
out
fidivrs
jnp
sahf
add
adc
loop
push
push
fdiv
inc
ss
sbb
sbb
add
pushf
cmc
push
stos
jmp
loop
jns
pop
and
mov
shrl
out
out
mov
inc
fstp
push
es
jecxz
sub
push
loope
movntps
and
sbb
mov
sub
xchg
lret
and
dec
sub
or
stos
dec
sahf
push
dec
sti
jl
sub
jmp
lea
sbb
push
sti
push
enter
imul
push
jmp
cmp
loopne
cs
xchg
push
in
cmpsb
push
in
jno
sarb
cmp
out
add
loope
insb
jmp
cmpsl
inc
inc
pop
sbb
sbb
addb
pop
cwtl
je
inc
imul
ret
adc
mov
mov
loop
mov
inc
dec
call
mov
out
jae
xor
orb
enter
je
icebp
incl
pop
scas
fstl
daa
enter
cmpsl
adc
orl
outsb
fildll
aaa
arpl
scas
pop
sbb
add
in
mov
jp
pusha
bound
jo
jecxz
adc
mov
push
test
xchg
fadds
xorl
fdivl
mov
push
sub
cmpsb
lds
and
sbb
in
pusha
sti
lahf
sub
gs
out
movsb
aam
sbb
add
or
xchg
fs
leave
leave
test
cmpl
jle
iret
cltd
xlat
pop
adc
add
cmp
stos
repz
test
mov
mov
inc
cmp
out
test
lret
cmp
cmpsb
sbb
cmp
aaa
test
les
fwait
xchg
sbb
rclb
sub
or
orl
sbb
sub
sub
pop
add
jo
incl
and
popa
or
ss
cmp
push
jns
in
int
inc
mov
cmp
js
fwait
sub
pusha
in
into
scas
adc
iret
popa
fnstenv
sub
mov
and
mov
lock
outsb
pusha
fbld
jb
mov
movsb
inc
jle
data16
into
sub
sbb
cmc
icebp
add
cmp
pop
out
pushf
lods
shll
movsb
and
icebp
fcoms
xchg
inc
add
add
push
popa
sub
jmp
pop
pop
nop
and
sub
lcall
cltd
lock
add
xlat
movsb
pop
pop
roll
pop
sub
dec
mov
iret
jecxz
outsl
or
sub
and
imull
sub
popf
popa
jecxz
stos
enter
add
into
and
test
rorb
enter
xchg
movsb
enter
bswap
das
cmp
push
inc
inc
repz
int3
xor
lods
hlt
jmp
hlt
pop
cwtl
jmp
add
negb
ds
dec
push
icebp
mov
jne
mov
cmp
mov
in
scas
push
jecxz
pusha
sub
jg
pushf
cmp
loop
and
imul
push
in
add
sahf
sub
jg
rcrl
cld
popf
pop
testl
enter
push
jns
mov
pop
add
push
xor
data16
filds
das
push
add
pop
nop
adc
enter
adc
mov
cmp
lea
pop
xor
mov
shrb
dec
jle
ja
mov
pop
jp
pop
popa
push
movsb
inc
add
xor
stos
test
sub
mov
xor
fsubl
scas
adc
and
cmpsl
cmp
dec
sbbl
sbb
sub
aad
mov
inc
loop
sbb
xor
push
jnp
push
adc
lcall
mov
pop
inc
bound
sub
adc
inc
dec
subb
addl
std
mov
enter
mov
pop
pop
mov
inc
sub
and
icebp
xor
lcall
mov
loopne
rcl
sub
or
enter
mov
stos
enter
xor
sub
push
inc
jb
fs
jge
addr16
lods
outsl
adc
xor
mov
xchg
sub
sbb
dec
movsl
repnz
dec
xchg
enter
div
out
mov
movsl
sbb
sbb
pushf
and
xor
fistps
fsubrl
mov
leave
inc
ss
and
sub
into
cmp
mov
fninit
andl
inc
sub
xor
cmp
jns
or
jb
mov
and
push
jmp
clc
xchg
xor
jmp
leave
std
fsub
pop
cmp
add
sbb
dec
pop
push
neg
xchg
jae
ret
dec
shl
sub
das
mov
in
fistps
je
shr
mov
push
pop
xchg
adc
and
rclb
cmp
xchg
and
sub
ja
mov
jno
adc
sbbl
hlt
fdivl
xlat
jae
jnp
loop
call
daa
mov
jb
cli
in
pop
loopne
js
and
push
cmp
loopne
js
enter
xchg
mov
inc
or
div
inc
or
adc
mov
add
pop
mov
sbb
inc
test
enter
test
outsb
rorb
aam
jae
jl
dec
testl
xor
and
imul
sbb
pop
and
rcrl
sbb
push
jmp
aas
jl
mov
enter
xchg
xor
jbe
pop
jle
xlat
push
out
movsb
sub
outsl
xchg
loop
add
fdivs
test
cs
imul
and
in
pop
adc
mov
cmp
cmp
bound
mov
xchg
aas
icebp
loopne
out
int3
xor
dec
out
push
pop
xchg
mov
test
xchg
push
sbb
cmpsl
fwait
add
flds
inc
in
mov
popa
fs
xor
imul
mov
cmpsl
xor
push
ret
pop
xor
xor
sbb
out
sub
bound
out
push
out
xchg
cmc
sbb
in
inc
stos
mov
or
outsl
sub
cmp
fisubrl
fistps
sub
aas
push
jle
lods
sbb
or
ds
outsl
jne
jo
push
out
out
leave
sub
or
aad
sbb
sbb
inc
dec
pusha
add
leave
push
lock
clc
cltd
mov
das
sub
push
xlat
mov
ror
gs
int
lds
mov
ror
jl
repz
mov
fsts
rorb
mov
roll
iret
inc
cmpsl
in
adc
dec
imul
aad
pop
test
hlt
xlat
jge
push
sbb
pop
and
cltd
mov
push
je
je
pop
jae
pop
add
xlat
cmp
pop
loopne
fiadds
sub
gs
out
sub
pop
pop
or
xor
aam
cmp
fwait
ss
inc
jo
and
pop
aad
xor
sub
insl
xchg
scas
pop
or
push
cld
test
enter
call
mov
rclb
inc
repz
fwait
lock
pushf
push
adc
push
fcmovnbe
sub
cmp
pop
fwait
dec
or
sub
xor
lcall
pop
push
push
insb
insb
rcrl
sbb
adc
and
xchg
sbb
lds
shll
or
mov
js
test
pop
data16
shlb
out
push
add
sbb
inc
pop
inc
dec
xor
mov
sbbb
push
fsts
xor
sub
cld
call
pop
fisttpl
xchg
ret
sbb
imul
mov
sbb
inc
xorb
insl
push
pop
repz
cmp
aas
mov
sbb
cmpl
jno
or
movsb
cwtl
fs
pop
mov
mov
xchg
je
jl
mov
out
call
pop
mov
stos
stos
test
add
sub
inc
mov
sbbl
cmp
dec
imul
pop
mov
xchg
inc
pop
pop
add
mov
or
sbb
add
pushf
clc
mov
cmp
and
sub
adc
jg
sbb
dec
mov
enter
sbb
push
loop
lahf
mov
lret
in
sub
cld
sub
nop
js
sbb
xor
movsl
les
sbb
push
sbb
jne
ret
leave
mov
add
rorb
sbb
mov
es
repnz
xchg
stos
ret
sbb
lahf
lret
sbb
or
cmp
sub
mov
std
cmp
or
or
je
mov
cli
jo
cltd
fistps
add
ds
mov
pop
loope
jl
into
mov
add
push
loope
sbbb
shrl
rol
mov
sbb
dec
idivb
xor
mov
lcall
push
lret
inc
mov
sub
leave
dec
adc
sbb
push
cltd
enter
cmpb
jg
mov
stos
mov
pop
lcall
es
das
shll
sub
xor
sbb
inc
inc
cmc
mov
dec
inc
lahf
dec
pop
mov
ljmp
int3
pop
enter
inc
jmp
mov
loope
out
jge
dec
sub
sbb
push
mov
sub
pop
and
sbb
out
lahf
je
fstps
lret
inc
imul
mov
popf
imul
call
inc
sub
mov
pop
int
push
push
and
testl
in
cwtl
mov
enter
daa
fwait
push
hlt
rcrl
sbbl
fstps
lods
jg
pop
xchg
xor
jle
ja
sub
jle
sub
mov
xor
push
jge
int3
xchg
subl
shrb
pop
add
pop
test
testl
cltd
scas
jl
sbb
dec
jl
sub
mov
pushf
mov
stos
ljmp
xchg
jle
or
add
incb
sub
ret
push
xlat
adcb
std
ret
mov
fnstcw
enter
pop
push
dec
xor
pop
xchg
rclb
dec
jbe
popf
aaa
or
and
xchg
push
stos
and
adc
sub
les
sbb
add
fs
out
xor
daa
inc
mov
adc
mov
bound
pop
pop
fucomi
fldenv
xor
lret
mov
mov
adc
pop
add
sti
pop
daa
jecxz
js
scas
jno
sub
in
loope
lds
xchg
or
stos
je
sub
ret
fisubl
sbb
repz
xchg
pushf
call
inc
xor
xchg
pop
sub
dec
sbb
sbb
enter
nop
clc
jmp
in
sub
add
jle
mov
pop
pop
sub
das
xor
mov
pop
xchg
or
mov
sub
movsl
pop
icebp
mov
mov
pushf
outsl
int3
ja
ret
and
dec
in
enter
shl
cld
je
nop
inc
inc
sub
lea
loop
pop
mov
test
nop
mov
push
mov
sub
out
in
in
or
enter
cmp
aas
dec
leave
enter
into
push
sbb
xchg
xchg
out
ds
aam
sbb
leave
lret
les
xchg
outsl
cltd
jg
pop
scas
mov
and
jge
fmull
mov
cs
cmc
cmpsb
nop
cmp
cwtl
mov
mov
xchg
iret
dec
roll
cmp
loopne
ljmp
movsb
or
mov
sbb
inc
lea
leave
clc
adc
das
bound
push
cwtl
xchg
test
jb
nop
in
lods
and
data16
pop
iret
cld
mov
sbb
inc
stos
pop
and
sub
xchg
pop
cmpsl
das
inc
dec
sbb
dec
xchg
sub
xor
add
push
xchg
cmp
iret
ds
insl
mov
clc
cmp
adc
rcrl
mov
fsubl
cwtl
xor
add
aad
test
sub
and
mov
enter
xor
hlt
into
mov
sub
nop
mov
xchg
je
sbb
cmp
cmpsl
mov
add
lahf
out
cltd
scas
push
imul
addr16
mov
dec
pop
dec
clc
das
mov
enter
std
push
inc
adc
and
icebp
jl
jns
xchg
movsl
arpl
pop
jo
cmpsb
insl
pop
push
jnp
sub
mov
out
mov
adc
mov
mov
xor
or
nop
mov
inc
clc
clc
sub
xlat
test
adc
imull
pop
xor
jg
lret
stos
or
icebp
mov
rcl
dec
outsl
cmp
ja
out
mov
dec
repz
xchg
cld
push
fsts
or
pop
sbb
psadbw
enter
data16
insb
pop
stos
mov
fisttpll
daa
mov
mov
mov
sub
cmp
sbb
sbb
mov
enter
lock
pop
or
jo
cs
pop
fistps
adc
inc
enter
fisubrs
out
jg
jns
pop
lds
xchg
xor
push
push
mov
cltd
ror
cmp
push
lret
adc
push
push
add
push
fildl
or
dec
fists
pusha
pop
adc
xor
and
and
and
sbb
mov
pusha
push
pop
or
enter
adc
addb
inc
imul
pop
xorl
lock
mov
push
push
icebp
movsb
sub
in
jae
and
adc
lahf
sahf
xor
ds
push
pop
test
outsb
jge
mov
in
stc
data16
push
cmpl
inc
dec
sbb
mov
insl
rolb
mov
mov
inc
sahf
push
push
pop
mov
dec
movsl
pop
aas
pushf
sub
adc
and
cltd
inc
pop
stos
out
mov
lahf
imul
popf
mov
cwtl
and
sbb
int
inc
xchg
mov
push
int3
jns
pop
ds
sub
add
test
enter
jmp
call
hlt
push
sahf
or
sbb
mov
sub
icebp
inc
lods
cmc
subps
mov
mov
sub
or
clc
shll
movsb
mov
sbb
mov
lds
xchg
aas
xor
test
lret
lcall
je
test
dec
out
mov
jge
rolb
cmp
mov
or
sbb
fldenv
sub
imull
jno
leave
pop
sbbl
lret
jnp
lahf
test
sub
pop
lods
in
das
mov
ret
add
cltd
imul
jno
cwtl
sbb
enter
and
pop
fwait
lods
add
in
inc
and
out
bswap
cmpsl
sub
or
jl
pop
sbb
outsb
in
pop
mov
adc
jmp
pop
call
in
cmp
das
sub
pop
push
cltd
adc
ret
sbbb
sub
insb
mov
sbb
sahf
pushf
or
sub
iret
lods
sbb
out
inc
pop
sbb
cmp
es
mov
insl
mov
mov
jmp
dec
aad
clc
and
sbb
xchg
xchg
or
stc
enter
mov
pop
inc
mov
push
imul
lret
sar
cmp
test
pushf
dec
js
mov
fcoms
lods
sub
mov
das
sbb
ss
xchg
fnsave
rcrb
mov
popf
sub
pop
xor
xchg
push
add
test
js
enter
jecxz
mov
loopne
lods
in
movsl
iret
push
push
sub
cs
loop
pop
jp
cmp
out
test
es
imul
sbb
rolb
imul
outsl
movsl
ss
cmp
daa
sbb
xchg
cwtl
adc
or
fcomip
mov
push
daa
cli
xchg
scas
pop
lcall
dec
jo
sbb
jle
sbb
sub
sub
sbb
ja
in
ss
leave
mov
pop
mov
pop
adc
jl
in
mov
cld
cmp
mov
cmpb
int
jo
or
xchg
xchg
and
inc
sbb
dec
fnstsw
or
dec
push
stc
pop
jl
cld
jno
rorl
push
push
mov
fldt
pop
mov
test
mov
jg
mov
rol
ljmp
pop
shlb
add
lods
out
and
sarl
cmpsb
gs
and
cwtl
pushf
pop
adc
xor
dec
xchg
call
scas
sbb
xor
es
xchg
scas
faddl
pop
mov
add
dec
pop
cltd
dec
mov
sbb
sub
aas
add
adc
jnp
bound
pop
test
mov
andb
ret
mov
jne
inc
ror
cmp
xor
pop
pop
imul
mov
jno
test
push
sbb
xor
and
enter
or
cs
sbb
jge
pusha
test
push
ror
xchg
cmc
push
xor
sub
push
fwait
pop
pslld
out
adc
and
popa
sub
test
stc
pop
or
rcr
adc
xor
inc
mov
jmp
mov
in
and
inc
and
lahf
xchg
mov
and
sbb
dec
js
dec
push
outsb
mov
ss
negb
cltd
push
test
xchg
dec
aam
lods
orb
and
sbb
adc
dec
cwtl
aam
xor
mov
dec
arpl
mulb
mov
pushf
out
add
pop
ja
or
ds
icebp
cmp
jge
pop
dec
xchg
sub
mov
call
in
add
vprotw
outsb
xor
or
cmp
pop
sti
mov
sar
pop
add
jge
lock
icebp
out
xchg
out
js
push
je
xchg
in
enter
or
rcll
lods
or
and
imul
push
xor
pop
in
ror
jo
adc
sub
mov
sbb
xchg
inc
or
cmc
data16
push
dec
sbb
aaa
push
pop
das
jmp
xchg
and
inc
dec
lcall
sbb
rorl
mov
adc
addr16
sbb
lods
mov
test
cltd
iret
in
cwtl
notb
outsb
enter
xor
iret
push
cmpl
aaa
cmp
sbb
fwait
scas
shrl
push
mov
out
pop
cmp
call
dec
loopne
mov
icebp
in
xchg
cltd
stos
lods
and
outsb
or
pop
insb
das
gs
sub
mov
and
cltd
sahf
jecxz
pop
popl
ret
lret
jae
int3
xchg
lds
add
stc
sub
mov
shrb
lds
fisubs
lods
cwtl
and
sub
mov
cwtl
xor
mov
inc
xchg
lock
mov
mov
dec
xor
lret
mov
jmp
push
pop
pop
inc
mov
cmp
inc
mov
into
in
mov
jge
arpl
push
test
cmc
pop
leave
outsl
incb
pop
int3
push
fidivl
cmpsl
inc
dec
pushf
pop
ljmp
test
mov
iret
jge
push
ss
stos
jge
sahf
insb
xlat
loop
rorb
pop
add
ja
xchg
ds
push
sub
jg
push
xchg
jp
out
sub
enter
pop
push
div
loope
fstl
mov
stos
xchg
pop
pop
sbb
sbb
ret
call
xchg
test
nop
aad
inc
rorl
imul
inc
xchg
sbb
mov
inc
pop
push
jp
cmc
cld
jnp
imul
sbb
mov
mov
mov
mov
mov
sahf
dec
rcrb
in
icebp
sahf
xorb
xor
inc
jae
adc
cmp
xchg
push
lret
mov
outsb
hlt
sub
adc
xchg
lcall
pushf
aaa
sbb
shl
mov
push
mov
fcmovb
aam
dec
and
enter
mov
je
pop
iret
imul
bound
cltd
sbb
out
cld
or
frstor
sub
enter
sbb
and
xor
cmp
cmp
cltd
jge
cwtl
sbb
fcmovnu
mov
lret
js
jmp
fsubrs
sbb
mov
leave
mov
call
jne
jl
adc
fsubrl
dec
push
inc
je
sahf
jno
and
std
sub
mov
pop
push
enter
ficomps
cmp
pop
outsb
outsl
into
xlat
sub
inc
dec
mov
pop
movsb
scas
dec
and
icebp
ror
ljmp
xchg
nop
je
or
mov
aas
bound
test
lcall
cmc
sub
sbb
imul
fistpl
loop
js
inc
jg
sub
ffree
iret
ds
bound
sbb
mov
into
add
sbb
mov
inc
pop
push
lret
or
jmp
scas
ret
push
scas
sbb
adc
xchg
addr16
mov
sbb
jno
xor
xchg
das
xor
sub
das
daa
jbe
or
sbb
fs
ret
orb
sub
ss
cmpsb
jmp
aaa
stos
dec
fcoml
sub
add
into
pop
sbb
adc
adc
sub
push
push
push
fdivrp
movsl
sub
mov
xor
ret
ss
sahf
jne
cmp
xchg
stc
mov
xlat
mov
sti
out
pop
cmp
pop
gs
xor
xlat
lret
pop
cmp
enter
hlt
in
stc
add
test
jmp
fstps
sub
imul
push
imull
ret
jl
notl
sub
mov
aas
mov
jb
rolb
sub
pop
mov
and
cmpsl
mov
push
int
dec
mov
inc
dec
inc
lret
negl
fcoml
xchg
mov
imul
adc
test
out
repnz
sub
mov
pop
pop
jae
adc
sbb
mov
out
pop
jbe
pop
ret
mov
aaa
inc
push
inc
pop
subl
in
aaa
fisubrl
xor
or
adc
mov
jecxz
rclb
xchg
and
loopne
fstpt
aad
sub
pop
mov
push
add
add
ret
mov
enter
dec
sub
mov
pop
sbbb
jg
aaa
sbb
call
adc
mov
outsl
iret
ljmp
cmpsb
push
mov
mov
iret
sbb
sbb
pop
out
into
stc
cmp
pop
dec
pop
pop
xor
sub
push
fcompl
aas
or
and
lret
shll
mov
mov
jge
and
mov
ds
sub
pop
xor
xchg
or
pop
rcll
stc
xor
mov
icebp
icebp
pop
adc
mov
push
and
push
mov
jnp
incb
cltd
xchg
aam
gs
jae
dec
push
rolb
xchg
or
lcall
gs
mov
pop
pop
add
add
xor
jo
cld
sahf
pop
lock
mov
mov
or
out
xchg
dec
mov
sar
aas
outsb
inc
pushf
int3
mov
hlt
sbb
xchg
jp
shl
test
mov
cmp
push
pop
cmp
lret
xchg
mov
push
leave
add
popf
or
testl
in
jo
pop
sub
pop
pop
xor
jns
cmc
cs
jae
mov
jp
push
or
inc
jl
rcl
pop
xlat
sub
das
or
sbb
jecxz
mov
lods
push
pop
mov
test
or
mov
aam
mov
cmp
enter
cmpb
adc
pushf
pushf
jne
and
push
sbb
xchg
stc
imulb
lahf
je
enter
scas
cld
imul
ss
lret
inc
mov
mov
jp
mov
test
loopne
mov
shll
jmp
lahf
lods
sbb
cli
lahf
cmpsb
jne
dec
sub
std
ficompl
pop
sbb
in
sub
jne
pop
addr16
mov
popa
mov
mov
and
stc
jo
daa
fnstsw
cmpsb
out
enter
popf
jle
mov
xchg
xor
add
mov
lret
mov
and
cmp
pop
sbb
mov
add
sub
mov
int3
push
movsl
orl
cs
adc
push
cmp
jno
adc
mov
mov
outsl
sub
sub
enter
nop
push
lods
enter
test
dec
out
push
jge
addl
mulb
xchg
xchg
sbb
fsub
inc
xchg
add
xor
lret
imull
pop
ljmpw
pop
jno
dec
adc
xor
ficompl
insl
out
bound
bound
xor
enter
test
std
insl
sti
pop
cmp
pusha
sub
add
les
in
stos
mov
jl
sub
pop
push
jo
in
icebp
cs
jbe
and
mov
out
xor
xor
sub
loopne
dec
imul
pop
pop
dec
push
shrl
test
cmp
pop
je
dec
add
adc
mov
call
enter
xchg
jg
imul
mov
pop
pop
adc
xor
dec
addb
leave
call
scas
addr16
les
push
scas
dec
enter
lahf
leave
pop
in
cmp
sub
push
mov
je
push
inc
pop
sub
cmpsl
sub
jg
fbld
mov
cli
cmp
pop
lock
lods
nop
or
push
jbe
mov
sub
dec
fstps
sbbb
mov
jmp
sbb
mov
mov
or
pop
add
mov
test
sbb
cwtl
out
jl
sbb
insl
cmp
lds
movsl
test
das
mov
pop
out
inc
inc
pop
mov
rcrl
in
aas
mov
dec
adc
sub
dec
or
mov
aad
jp
outsl
sbb
enter
inc
push
cmp
jle
sbb
inc
inc
mov
inc
hlt
popa
inc
lods
stc
push
and
pop
xchg
and
cli
mov
call
das
sar
jae
imul
in
xor
jne
clc
push
rcll
adc
sub
or
sub
push
adc
pop
mov
adc
hlt
mov
fsubl
ret
sbb
mov
in
xchg
sub
iret
fcompl
pop
or
adc
sub
pop
and
jge
or
clc
or
push
dec
leave
inc
push
shlb
es
pop
and
lahf
loope
sub
inc
js
push
ljmp
jmp
push
iret
call
push
enter
mov
popa
popa
movsb
lret
xchg
xchg
mov
push
movsl
mov
ret
loopne
pop
jecxz
and
test
arpl
repnz
insb
hlt
or
aad
enter
test
or
sub
sbb
popf
rol
xor
sti
sub
pushf
sbb
jae
mov
pop
jle
cmp
pop
add
mov
sub
xor
cli
sarb
push
int3
nop
or
mov
dec
cmp
jae
xchg
pop
sahf
fcomps
test
movb
push
inc
sub
out
jbe
loop
sbb
cmpsl
cmp
leave
xor
adc
outsl
fadds
test
pop
dec
pop
movsl
lea
aaa
idivb
push
add
pop
aas
cmp
pop
pop
sbbw
ror
jge
faddl
movsb
sahf
adc
push
push
adc
jnp
dec
fbstp
into
enter
neg
insb
sbb
push
lds
popa
call
xlat
mov
pop
aad
mov
inc
adcb
inc
ja
rcll
xor
sbb
sub
adc
leave
iret
loope
repnz
cwtl
sbb
cmp
push
push
aad
ret
subl
add
pop
jb
cld
pushf
mov
mov
int
shrd
mov
cmp
cmp
or
push
jge
shl
pop
jmp
lods
pop
push
aam
add
addr16
aam
cli
lret
enter
cltd
in
rcr
pop
mov
in
inc
ja
add
fcoml
sbb
and
pop
test
and
loope
mov
cmp
imul
dec
enter
jge
insb
jge
pop
cmp
mov
and
jmp
cmp
orl
and
icebp
into
icebp
pop
addr16
lods
mov
cmp
sbb
and
fidivrl
mov
push
adc
cmp
lds
mov
seta
cmp
pusha
cld
cltd
xchg
xor
std
inc
sbb
push
loope
subb
imul
and
sar
daa
test
sbb
mov
das
sub
or
adc
mov
mov
xchg
test
mov
hlt
mov
mov
lahf
cmp
pop
cmc
idivl
sbb
or
push
sub
mov
push
in
pop
fcomps
cmpl
pop
dec
dec
push
pop
jle
movswl
xor
aaa
mov
lret
mov
pop
xor
arpl
fisubrl
push
xor
fidivrl
dec
fs
enter
pop
push
pop
daa
pop
rorl
sub
sub
js
jne
fists
mov
xchg
repz
dec
lods
cltd
xchg
xor
ljmp
adc
enter
clc
pop
out
insl
adc
mov
and
pop
popa
andl
mov
cmp
push
adc
pop
add
scas
dec
scas
adc
adc
pop
dec
mov
cmp
cmp
adc
pusha
sbb
sub
xchg
xor
jo
insb
jg
gs
mov
adcl
pop
jns
adc
cs
and
es
xor
movsl
pop
mov
cmp
sub
out
sub
outsb
hlt
lods
xchg
insl
add
xchg
inc
stos
xchg
push
or
dec
addr16
pusha
dec
addl
add
cmp
mov
dec
vprotd
pop
inc
fstpt
mov
ljmp
mov
icebp
sbb
cmp
test
jne
jb
mov
cs
ljmp
xor
sub
in
iret
lret
cmpb
add
add
cmpsb
addb
adc
adc
sbb
xchg
in
dec
lret
negl
sub
fdiv
imul
cmp
scas
mov
mov
mov
push
sub
lods
mov
stos
shl
add
xchg
ljmp
adc
lds
imul
xchg
test
out
xor
enter
into
pusha
fcomps
adc
lret
dec
stos
jle
jge
js
sbb
push
xor
sti
sbb
icebp
sub
sbb
push
cmp
fcmovnu
int3
hlt
sbb
xchg
stos
icebp
and
pop
shll
rcl
les
sbb
sub
mov
test
sub
push
mov
pop
pop
js
jle
jnp
sahf
sub
adc
sbb
mov
test
lret
push
mov
out
dec
test
jecxz
jle
aad
cltd
lret
das
add
pushf
cmpsb
ds
test
ljmp
je
stos
and
faddl
xchg
ss
fwait
pop
andb
loope
shlb
cmp
gs
stos
sub
xchg
jg
sbb
xchg
dec
int3
lcall
idivb
xchg
orb
push
sub
pop
enter
in
push
mov
pop
rolb
and
mov
add
sub
lcall
sbb
pop
or
in
cmp
test
xlat
add
jo
fildl
inc
out
incb
nop
pop
scas
xchg
xor
out
test
call
sbb
sbb
movsl
daa
mov
sub
push
clc
mov
sbbb
stos
xchg
inc
sbb
adc
enter
or
xchg
push
rcrl
in
dec
xchg
stos
popa
mov
lods
test
into
ja
jmp
sub
pop
mov
jnp
iret
repnz
push
insb
fnstsw
enter
fnstsw
test
test
pop
dec
loopne
or
ja
stos
frstor
sub
lds
mov
mov
sbb
fprem
pushf
sbb
cmc
and
inc
cmp
adc
dec
and
fld1
inc
imul
add
sahf
jae
mov
pop
scas
lret
adc
out
push
dec
add
lret
adcl
ss
lods
cmp
mov
push
add
push
sbb
sbb
mov
imul
stos
push
rolb
pop
sbb
inc
aas
sbb
pop
add
mov
js
jnp
jne
mov
addr16
fnstsw
sbb
std
mov
enter
and
add
rcrb
arpl
sub
lock
sbb
fistps
xor
mov
leave
lcall
xor
inc
mov
cmp
sbb
stos
fs
adc
jg
jo
in
jg
aaa
pop
push
fwait
cmp
sbb
loope
test
push
pop
je
xor
or
mov
sbb
and
imul
jp
pop
negl
cmp
pop
xchg
enter
into
adc
sub
lret
adc
and
clc
pusha
cld
adc
cs
cmpsb
jnp
jg
mov
mov
lock
insl
adc
leave
hlt
add
sub
enter
mov
add
pop
daa
fucomp
push
lods
mov
enter
icebp
js
adc
xor
dec
or
jae
lret
pop
lods
sbb
pop
aad
ret
imul
push
fcompl
push
mov
cmpsl
dec
adc
pushf
and
push
sahf
popf
dec
lret
mov
push
mov
ss
pop
fnstenv
enter
sbb
into
pop
sbbb
push
pmuludq
lcall
mov
std
loop
mov
lret
int3
sbb
sbb
mov
sbb
mov
sub
in
push
shrb
jns
shlb
add
pop
jnp
jle
inc
hlt
sub
sub
pop
xchg
jne
dec
mov
shr
mov
ds
push
or
scas
push
std
xor
cmp
push
movsl
movsb
cld
clc
xor
sbb
push
cmp
test
test
mov
mov
sbb
shlb
mov
sub
adc
mov
int
int3
xchg
sbb
test
pop
sbb
hlt
rcrb
mov
out
sbb
push
gs
incl
sbb
xchg
jg
sbb
orb
movsl
ret
sub
and
push
xchg
test
pop
xor
or
test
xchg
xchg
mov
and
mov
xor
lea
pop
movsl
call
imul
add
pop
cli
loope
cltd
cmpsb
lods
loopne
xchg
sbb
das
sbb
xor
xchg
adc
xor
out
and
sub
mov
jns
add
pop
rcrb
popa
pop
fwait
nop
scas
ror
xor
sub
push
out
and
push
jne
nop
test
leave
sub
adc
movsb
outsl
data16
jl
cmc
sub
fucomip
cmpsl
xor
and
popf
out
test
or
enter
push
push
cwtl
sbbl
adc
adc
sbb
mov
mov
sub
inc
adc
movsl
sub
mov
or
jne
rorl
cmp
sub
pop
out
mov
idiv
sti
int3
loope
jae
imul
ds
add
out
cmp
cmp
and
mov
leave
std
outsl
fmul
sub
push
es
test
jnp
les
pop
mov
xor
iret
aam
mov
std
negl
mov
push
adc
imul
sbb
andl
cmp
add
scas
into
mov
xorl
dec
adc
arpl
sub
and
in
cmp
sti
sub
repnz
cmp
xor
aam
icebp
xor
sub
jp
repz
dec
sbb
pop
mov
sbb
add
xchg
cmp
out
sbb
stos
jl
push
jns
repz
sub
jecxz
stc
pushf
push
inc
inc
lcall
mov
repnz
int3
cmpsb
jbe
adc
and
shl
int3
dec
insb
and
add
inc
sahf
xor
jmp
push
or
stos
jns
push
fsub
sbb
mov
hlt
popf
test
ret
rclb
mov
subb
jecxz
mov
push
mov
inc
daa
fisttps
ds
mov
sub
sub
popa
mov
sub
fcompl
das
outsb
iret
cmp
filds
push
imul
jno
adc
inc
adcl
in
cld
adc
push
xor
jp
pop
hlt
sarl
push
dec
icebp
imul
push
stos
ljmp
jmp
stos
jge
enter
jmp
pop
xchg
cmp
mov
into
outsl
xlat
loop
push
loopne
sbb
repz
xchg
sub
sub
fistpll
rclb
mov
fcmovne
pusha
fdivl
or
in
cmp
sbb
mov
cli
scas
xchg
aad
sbb
das
xor
inc
sbb
fs
lret
lods
sub
call
enter
in
loop
push
dec
and
xchg
addr16
or
xchg
rolb
enter
test
cltd
call
jo
insb
cwtl
mov
das
aaa
cltd
add
dec
repz
pop
pop
loope
test
arpl
or
sub
cmpsb
test
mov
pop
jecxz
push
inc
or
je
test
push
cmp
inc
cmpsl
mov
ret
out
inc
outsb
rclb
pop
cltd
test
jne
hlt
pushf
enter
aas
pop
js
pop
fwait
jns
ret
fistl
or
dec
out
in
mov
dec
or
scas
mov
ljmp
xor
les
sbb
mov
and
out
fwait
insl
cmp
out
adc
pop
popa
test
dec
adc
clc
lods
outsb
cmc
hlt
sti
stc
cltd
xor
roll
out
sub
sbb
sub
fisubrl
add
subb
push
push
pop
scas
inc
push
lods
fisttps
cwtl
sub
enter
addb
pop
test
inc
mov
lret
mov
js
mov
fisttps
testl
outsb
or
pop
aas
sbb
sbb
js
add
subl
fiaddl
and
shlb
mov
and
enter
filds
jo
pop
jle
mov
mov
insb
outsl
mov
std
sub
fisubrs
aas
sahf
xor
cs
leave
scas
movsb
mov
pop
in
call
jl
repnz
mov
xchg
js
sub
pop
mov
mov
inc
push
pop
lods
rol
mov
pop
arpl
fistpll
push
push
xchg
cmc
adc
pmaxsw
mov
data16
enter
jb
repz
lods
push
ret
adc
sbb
cmp
sbb
and
into
sbb
sbb
mov
lcall
pushf
pushf
loope
dec
scas
push
sub
shll
inc
ret
rcr
icebp
imul
cmp
loopne
ret
int3
and
cmp
or
icebp
mov
or
insb
and
call
adc
adc
sub
and
jb
jnp
rcrb
das
pop
ret
ss
enter
in
in
mov
add
sub
int3
rcrb
cmp
in
adc
mov
mov
data16
lret
sub
nop
and
fistps
outsb
test
or
scas
nop
mov
dec
test
movsb
adc
enter
decb
dec
pop
icebp
inc
fidivl
cltd
xchg
push
cmp
xchg
ds
ret
test
adc
adc
mov
sub
lahf
icebp
sub
mov
push
pop
inc
mov
and
sbb
call
cltd
sbb
pop
lret
and
pusha
jae
adc
and
pop
xchg
mov
cli
pop
fsts
and
sbb
decb
int
daa
pop
scas
or
adc
lds
es
shll
pushf
fstpt
les
inc
ss
pop
jns
adc
enter
adc
outsb
inc
pop
pop
push
adc
push
pop
lcall
fdivr
rorl
push
mov
or
and
sub
and
in
push
mov
cmp
push
fsubrl
pop
aad
inc
vpcomud
pop
dec
sbb
out
daa
cltd
cmp
jnp
push
in
sub
dec
sub
pusha
out
add
out
out
or
movsl
enter
adc
idivl
out
sub
push
ss
or
out
pop
cmpsl
xchg
and
stos
and
inc
loopne
leave
sbb
dec
add
pop
enter
shl
roll
mov
ficompl
mov
hlt
mov
gs
call
scas
data16
sahf
addb
sub
cmpsb
mov
int3
ljmp
imul
in
nop
sbb
dec
xorl
jmp
dec
or
pop
push
add
fwait
js
fldl2t
sub
push
pop
dec
fldcw
std
outsl
push
lods
jecxz
fnstenv
or
sbb
lock
arpl
mov
aaa
mov
bound
cmp
dec
adc
push
sahf
adc
int3
xor
daa
sahf
sub
add
pop
insb
sbb
cmovnp
repz
out
xchg
out
sub
mov
popf
cmp
inc
pop
in
push
aad
enter
leave
dec
in
in
pop
xor
xor
cmp
cmp
sub
adcb
sbb
inc
pushf
xchg
fldenv
std
cmp
inc
pop
xchg
and
testl
nop
push
lds
insl
pop
pop
fwait
jmp
mov
sub
mov
add
pop
fs
out
add
xor
leave
mov
call
pop
shrb
sti
cmpl
lcall
cmp
jge
lret
inc
and
push
out
pop
xor
pop
insl
pop
cwtl
sub
bound
imul
leave
lahf
popl
lret
push
stos
imul
sbb
in
jns
mov
dec
scas
dec
pop
sub
faddp
ret
addr16
or
dec
orl
mov
outsl
es
icebp
repz
sbb
push
push
and
ret
cmpsl
or
and
jle
push
cltd
cmpsl
js
push
in
pop
xchg
arpl
sub
scas
dec
hlt
and
dec
sbb
out
stc
sub
jnp
ret
movsl
out
sub
dec
pop
mov
adc
sub
sbb
adc
popa
or
pcmpeqw
lahf
dec
movsb
leave
in
jg
sbb
mov
add
jp
xchg
mov
out
sub
filds
cmp
push
pop
inc
popa
inc
bound
push
shl
iret
pop
outsb
add
mov
mov
outsb
stos
jae
pop
pop
je
pop
je
pop
mov
sar
mov
mov
fisubrl
shl
mov
dec
jp
std
mov
arpl
insb
enter
adc
cli
sbb
les
dec
pop
sub
or
notb
pusha
xchg
loopne
mov
add
xchg
pushf
sarl
sbb
jmp
movsb
movsb
sub
arpl
out
shrl
jns
or
xchg
xor
mov
loopne
add
sub
cmpsb
cmovs
push
cmp
fcoms
lds
dec
dec
out
mov
into
lock
pop
xchg
daa
enter
leave
arpl
enter
dec
mov
ljmp
push
enter
outsb
pop
fwait
adc
nop
jne
dec
cmpsl
sub
loopne
rcl
xlat
fildl
cltd
nop
sbb
fs
xchg
sub
sahf
adc
fcmovnu
or
mov
xchg
xor
les
bound
push
int3
mov
test
lret
jecxz
pop
push
cmp
dec
sbb
decb
push
dec
adc
jb
fs
or
cmp
pop
loope
inc
ljmp
shl
cli
mov
fstps
mov
dec
lret
mov
outsl
sbb
divl
xchg
cltd
jb
jb
sbb
sti
imul
popa
pop
ss
fistl
jmp
and
pop
ss
icebp
lret
js
sub
push
loopne
and
pop
xor
out
imul
pop
or
xor
cmp
enter
add
jbe
dec
insb
enter
cmpsl
enter
out
fistl
sub
or
bound
pop
lea
mov
pop
mov
out
nop
gs
push
hlt
and
add
into
add
das
enter
test
and
adc
xchg
leave
push
movsb
lret
push
inc
scas
push
add
xchg
sbb
push
lcall
sub
dec
movntq
push
inc
test
fs
jge
adc
outsl
xchg
xor
pushf
cli
pop
mov
sbb
inc
out
cwtl
jg
add
push
or
inc
dec
push
lret
mov
cwtl
xor
enter
rclb
popf
js
adc
fyl2xp1
dec
or
shl
mov
xchg
sti
movsb
enter
out
fwait
inc
negb
push
hlt
push
adc
push
test
push
pop
in
lret
mov
pop
movsl
add
pop
lahf
es
jmp
pop
xchg
inc
and
aad
push
cli
cmp
and
loope
add
pop
adc
lods
sahf
jle
and
enter
and
stos
outsl
inc
insl
fcomip
pushf
lret
pop
ljmp
dec
stc
les
mov
xchg
add
push
adc
fsubr
fwait
mov
int3
or
pop
mov
xchg
fucom
or
mov
cmp
sub
loopne
adc
sbb
lcall
enter
push
inc
inc
sub
rcrl
out
jnp
outsl
jmp
mov
xchg
or
lcall
outsl
xchg
enter
mov
push
jle
clc
pop
add
fwait
xchg
ret
shll
xor
dec
pop
sbb
pop
and
mov
jns
out
push
sub
adc
add
and
sbb
cmpsb
mov
jp
ret
enter
xchg
cmc
cmp
movsb
js
adc
sub
rcl
shlb
mov
push
xor
into
dec
sbb
lret
fstpt
or
sti
push
loope
xor
scas
aad
inc
push
sarb
outsb
pop
jle
sbb
fsubrl
jmp
pop
sub
push
mov
shll
shlb
and
jl
mov
cwtl
sub
ret
adc
xchg
cmc
leave
jb
sub
mov
push
enter
mov
pop
dec
div
and
loop
sar
pop
out
ret
leave
xchg
mov
push
out
ss
xlat
sbb
jno
mov
inc
push
icebp
sarb
jl
push
orb
mov
out
aad
sub
jns
sbb
xchg
mov
inc
mov
aad
push
ret
test
fdivrs
xor
inc
pop
enter
and
fcomip
adc
xor
out
jo
scas
popf
sbb
add
pop
pop
cwtl
dec
jns
cmpsl
cltd
fwait
sub
mov
inc
fwait
loope
dec
cmp
loope
add
xchg
lock
adc
cmp
dec
sbb
sbb
push
aaa
mov
enter
sub
imul
jmp
ret
lods
mov
lcall
xlat
sbb
iret
test
loopne
bound
xor
je
mov
insl
lcall
pop
push
in
stc
lods
cmc
aam
inc
out
movsl
jp
jmp
pop
popa
rcrb
pop
repz
or
or
inc
movsb
lea
dec
or
sub
das
cmp
pop
push
sub
push
rorb
lahf
les
lods
adc
enter
pop
clc
mov
mov
inc
xchg
mov
cmp
push
push
fcmove
pop
sbb
add
out
repz
loope
mov
add
inc
sbb
adc
lret
lahf
inc
pop
int
pop
aaa
mov
scas
sub
stc
and
es
lcall
pop
xor
push
out
or
rol
pop
int
pop
sbb
popa
pop
and
and
ds
xchg
shrl
ljmp
dec
lods
gs
inc
pop
xor
sub
xorb
fcomps
xchg
lret
jge
pop
fwait
stc
xchg
hlt
dec
xchg
dec
aam
bound
add
inc
adc
mov
adc
pop
cltd
aas
sbb
xchg
popa
add
mov
enter
sub
cmpsl
cmc
xchg
add
jmp
les
nop
clc
movsb
xor
lret
add
dec
test
and
fstps
int3
scas
daa
out
push
stos
jg
xchg
fld
ljmp
xor
jecxz
pop
rcll
test
xchg
or
sub
ret
jl
cwtl
flds
repz
adc
popa
fsubr
cltd
jecxz
nop
xor
mov
sub
jmp
cmp
daa
pop
jmp
fdivr
sub
popa
mov
add
arpl
mov
ficoms
mov
inc
fsubs
jge
sbb
stos
enter
in
inc
mov
mov
adc
dec
sub
xchg
fbld
outsl
cmpsb
mov
inc
mov
les
adc
cmc
enter
mov
pop
test
dec
unpckhps
test
mov
xchg
lea
pop
jmp
pushl
add
lcall
and
dec
and
jp
jno
and
pushf
and
int3
lahf
and
mov
es
scas
xor
es
cltd
push
out
lret
mov
mov
xor
and
mov
mov
jns
jbe
mov
lcall
jo
aas
enter
ds
repnz
cmp
leave
popa
push
sub
movsb
in
mov
mov
shrl
inc
lea
sbb
push
lret
adc
orl
push
push
pop
jge
jmp
pop
lret
pop
mov
leave
mov
inc
insl
stc
js
or
push
sub
mov
test
pushf
pushl
mov
sub
mov
sbb
add
jae
cmp
outsl
and
ja
addr16
pop
xor
xorb
mov
imul
cld
lret
jmp
push
cwtl
test
or
scas
mov
sbb
adc
sub
adc
es
mov
xor
lahf
fdiv
lret
fimull
aad
mov
out
repz
rclb
pop
push
pop
popf
test
sub
dec
pop
mov
rcl
sbb
ds
dec
jcxz
cmpl
xchg
xchg
sahf
imulb
xlat
sub
pop
mov
add
sbb
adc
icebp
sub
dec
adc
xor
dec
shrb
xchg
sbb
aaa
sbb
push
in
sub
jbe
jno
dec
and
jge
repnz
or
nop
cmp
cmpsb
sbb
mov
or
fmul
mov
xchg
daa
notl
jns
push
fstl
pop
fsubl
test
mov
pushl
and
and
push
shl
sahf
fimuls
cmp
cmp
mov
add
mov
arpl
stos
subb
cmpb
jg
cmp
stos
mov
add
ds
mov
push
xchg
insb
xchg
and
and
test
std
dec
sbb
pop
jb
push
pop
cli
sbb
push
insb
cmpsb
lret
jnp
outsb
xor
fcoml
jne
dec
add
lcall
inc
mov
fsts
jnp
mov
lahf
sub
pop
and
ss
push
popf
and
pop
popa
in
mov
xor
push
jge
sbb
push
lret
xchg
push
sub
pop
jns
je
sub
pop
sbb
push
ljmp
popa
test
mov
sbb
jno
push
ret
add
enter
leave
mov
mov
mov
jl
inc
fsts
mov
xchg
pop
sbbb
sub
and
scas
adc
adc
mov
ljmp
insb
sub
adc
dec
pop
bound
sbb
add
push
sbb
add
sahf
jmp
pop
sub
sub
fimuls
imul
pop
adc
rolb
mov
jp
sbb
iret
and
pop
xor
ret
aaa
lcall
bound
sub
sbb
sbbb
enter
mov
cmpl
outsb
divb
subb
mov
and
out
sbb
stos
add
sbb
aam
and
and
jecxz
or
popa
add
sub
sub
cmc
shr
xchg
push
in
insb
cmp
jnp
movsl
in
add
sarl
iret
mov
orl
pop
jnp
sub
dec
mov
loop
lods
movsb
push
gs
frndint
in
lahf
xchg
push
out
mov
or
jg
push
movl
enter
and
ds
xchg
pop
cmp
andb
movsb
stos
test
inc
mov
dec
sarl
or
ret
add
sub
mov
pushf
jo
inc
and
shll
xchg
cmp
mov
push
sbb
stos
loop
call
push
adc
jno
jae
pop
aam
xchg
xchg
aam
loopne
outsl
mov
mov
jecxz
das
sbb
and
or
and
push
pop
push
sub
testl
xor
pop
outsl
in
daa
or
and
scas
stc
push
sub
movnti
sbb
out
mov
enter
out
lcall
cwtl
inc
lods
mov
cmpsb
negl
dec
sbb
mov
in
pusha
cmp
mov
xlat
movsb
enter
sbbl
repz
lock
scas
mov
pop
sbb
push
out
fxch
adc
cld
rolb
pop
or
fmul
cli
es
sub
adc
inc
push
add
push
cli
popa
adc
aaa
stos
push
shrl
or
jecxz
mov
cmpsb
das
sbb
test
cs
aaa
enter
jmp
sbb
pop
outsb
data16
ja
popa
xchg
adcb
sub
and
repnz
mov
sbb
xor
jmp
dec
or
rolb
insl
adcb
and
jl
sti
mov
mov
lret
mov
push
pop
pop
std
pop
dec
push
pop
inc
data16
stos
cmc
rcrb
dec
orb
ffree
sub
mov
sub
lcall
add
bound
mov
mov
lret
std
popf
fnstsw
outsb
sub
push
outsl
pop
daa
and
sub
shrb
cld
mov
mov
push
and
bound
sti
int
cmp
adc
sbb
je
cmpsb
sub
add
sbb
pop
int
push
pusha
jp
aas
rcrl
imul
push
enter
sub
add
insl
out
pop
mov
mov
enter
sbb
js
xor
jns
inc
iret
sub
std
or
jmp
aaa
pop
movsb
inc
mov
dec
cmpsb
xor
ja
addb
enter
lods
push
sbb
or
rorl
mov
hlt
mov
je
sbb
call
dec
data16
adcl
sub
pop
add
sub
fnstsw
xor
stos
pop
bound
xchg
xchg
in
aaa
and
add
dec
outsl
inc
pop
or
cmpsb
shrl
stos
xor
pusha
and
repnz
js
or
mov
bound
repz
jb
outsl
stos
aas
or
je
mov
or
lcall
in
mov
shrb
scas
mov
sub
push
leave
sbb
ss
mov
jp
enter
dec
lds
and
pop
cld
fidivrl
push
leave
mov
sub
shll
cwtl
sti
pop
add
loope
xchg
enter
pop
push
ja
mov
and
std
xchg
xchg
pop
in
xor
clc
enter
sub
cmp
pop
add
cli
std
fsubs
sbb
out
jae
jne
mov
outsl
enter
daa
lds
insb
or
push
sbb
cwtl
mov
pop
enter
mov
pop
jo
pop
rcr
add
jb
xchg
enter
and
inc
dec
xor
pop
aam
enter
iret
push
cmc
in
pop
inc
xchg
stos
push
adcl
shlb
stos
adc
xor
inc
inc
xchg
pushf
and
sbbb
in
dec
fistpl
inc
dec
mov
mov
pop
jge
push
lahf
xor
ds
sbb
ljmp
das
mov
mov
xchg
pop
jp
pop
adc
sub
fwait
sub
and
or
cmpsb
out
push
push
mov
dec
mov
push
dec
jmp
pop
and
mov
push
in
lret
fstl
loopne
xor
repz
aas
loopne
sbb
mov
daa
sahf
loop
and
sbb
jmp
mov
enter
mov
in
jne
dec
jb
mov
push
push
pop
shlb
pop
push
xchg
jb
xchg
out
cmpsl
mov
fisttpll
sub
push
push
cmp
lods
cld
jno
inc
dec
cmp
dec
jae
jge
inc
push
mov
cmc
pop
das
into
or
mov
popa
enter
movsl
inc
cmp
in
test
in
push
mov
leave
push
mov
adc
sbb
pop
mov
inc
jbe
mov
aas
outsb
pop
pop
or
cmpsl
or
cmp
pop
popa
pop
enter
sbb
push
enter
mov
or
mov
mov
cmpb
pop
inc
sub
insl
cmp
loopne
insb
jecxz
xorl
jp
je
repz
jmp
lea
jl
adc
sbb
xor
xchg
cltd
jbe
xchg
das
dec
movsl
pop
push
jecxz
adc
xor
jmp
cmp
subl
loopne
lods
lea
xor
pop
mov
cmp
ja
mov
add
in
cld
or
sub
mov
mov
sub
pop
cld
test
dec
xchg
pop
inc
jae
out
test
sub
sub
sub
push
push
enter
cmp
and
mov
adc
mov
adc
mov
push
loop
out
lret
xchg
cmpsl
sbb
loop
mov
push
push
sub
pop
dec
pop
dec
jl
xchg
sbb
movsl
sahf
cmp
inc
cmp
sub
and
mov
addr16
pop
push
add
pop
pop
pop
cltd
jge
xor
data16
add
imul
cld
jle
cmp
popa
pop
jmp
push
stc
inc
lcall
add
lret
push
or
jne
mov
add
outsb
mov
les
fistpl
push
xor
push
cmp
das
roll
enter
ret
dec
out
orl
inc
outsb
mov
scas
sub
mov
jl
cmpsb
or
pop
mov
out
ljmp
sub
popf
js
fsubr
pop
ret
aaa
sbb
and
lret
lret
imul
insb
test
divl
sahf
stos
push
loope
scas
popf
mov
lock
data16
mov
mov
mov
test
clc
js
xor
cmpl
int
jmp
jb
xor
js
mov
pusha
sub
jne
enter
and
xor
cmp
jne
cld
mov
aam
test
loopne
dec
enter
xor
jo
pop
adc
mov
mov
xchg
cltd
pusha
dec
scas
dec
and
lret
or
sbb
mov
rorb
cld
movsl
repnz
roll
fisttpll
rclb
fwait
jbe
js
inc
movsb
setp
pushf
sub
daa
xchg
adc
mov
lret
mov
movsl
ja
xor
lahf
and
sub
data16
dec
mov
stos
scas
outsb
sbb
cmpsl
or
mov
enter
aas
mov
lods
or
push
mov
enter
out
in
sub
push
xchg
sub
lret
ret
scas
sbb
mov
sarl
incb
xchg
jp
lock
sub
xor
into
jbe
out
les
adc
mov
dec
xor
lods
xchg
and
mov
repnz
addr16
ss
add
cmp
mov
mov
fstps
and
pusha
inc
mov
inc
hlt
sub
xchg
inc
xchg
loopne
and
sbb
insb
xchg
add
aam
push
cli
sbb
in
dec
xchg
js
test
dec
imul
in
pop
jmp
and
js
push
lods
mov
popl
int3
mov
cs
xchg
jns
pop
dec
push
enter
sti
pop
loopne
adc
enter
adc
xchg
movsb
inc
sub
pop
in
test
pusha
rcl
xor
cmc
testb
xchg
data16
xchg
xorl
adc
mov
cmp
mov
adc
xor
sbbl
fdivl
add
xchg
sbb
jne
or
sub
aaa
push
cmc
hlt
jo
cmp
stos
mov
xchg
addl
int
mov
xor
add
sub
jg
mov
xchg
jb
and
and
add
mov
rcrl
or
dec
push
test
jecxz
cld
adc
or
dec
lock
jnp
inc
push
bound
dec
cltd
out
mov
addr16
jle
daa
lret
push
sbb
jge
es
push
sbb
adc
push
das
cmp
xchg
lret
pop
aad
jo
leave
stc
xlat
jns
sbb
sub
and
push
and
xchg
adc
mov
pusha
ljmp
insb
xor
mov
movsl
jmp
jne
mov
push
movsl
cld
stc
or
cli
xor
cmp
mov
adc
jne
in
es
imul
jmp
and
pop
outsb
fs
push
rcrb
sbb
or
out
sbb
sbb
push
scas
loope
outsl
sub
ffreep
int3
lea
and
inc
xchg
sbb
in
dec
cmp
jno
enter
add
je
pop
ret
pop
movsb
aad
mov
jmp
cs
jae
movsl
lret
dec
pop
fiaddl
pushf
sbb
pusha
imul
jnp
sub
inc
jl
pop
sbb
fsubs
outsl
xchg
or
mov
mov
test
fimull
enter
pop
fisttps
pop
lea
add
sub
push
movsl
and
sub
fidivl
ret
jmp
sbb
pop
pop
xor
out
sub
fldpi
pop
movsb
sbb
and
xchg
enter
ja
pop
imul
in
and
push
cvtdq2ps
mov
fsubr
into
ficompl
cmc
sbb
push
or
xchg
dec
xchg
jno
push
push
pop
pop
mov
lods
sub
ret
nop
xor
outsb
sbb
mov
dec
and
jne
out
shl
enter
imull
jecxz,pn
sbb
ljmp
shr
sbb
mov
xor
icebp
cmpb
fcomps
jo
dec
loopne
mov
adc
push
pop
int
or
jno
xchg
repz
punpckhbw
sbb
je
add
pop
push
add
mov
sub
pop
int
fstpl
mov
clc
dec
out
xchg
sub
sbb
call
cmp
out
popf
out
enter
mov
iret
in
cmc
pop
cs
add
dec
or
add
cmc
lahf
and
fcom
pop
xchg
jne
rcl
jb
imul
call
pusha
and
cmpsb
adc
jmp
pop
jp
pop
or
cltd
sar
cld
sub
pop
arpl
sbb
or
sbb
aas
enter
rcrb
js
pop
add
mov
sub
xchg
pop
cmc
sub
les
pop
in
ret
xchg
push
adc
and
es
pop
sarl
out
data16
sub
fwait
into
ss
pop
movsl
nop
xor
xchg
test
push
fcmovb
lds
enter
daa
push
xchg
sbb
inc
mov
and
out
sbb
je
push
fidivl
cmp
push
jns
sbb
nop
jg
pop
sub
mov
sarl
int3
and
xor
call
xor
xor
pop
arpl
xchg
outsb
jnp
push
sub
mov
push
push
stos
cmpsl
mov
push
fsubl
out
sahf
inc
in
faddl
mov
scas
cld
sbb
dec
mov
jno
mov
dec
loop
shl
jmp
cwtl
gs
inc
enter
mov
pop
xchg
jle
dec
mov
xlat
sub
and
jno
int
pop
pop
xchg
sbb
push
cmp
and
ffree
enter
mov
sub
rcrb
mov
std
cmp
pop
outsb
add
pop
pop
loope
sub
inc
xorb
and
push
xchg
fstpl
nop
stos
pop
repnz
out
lret
cmp
decl
sti
bound
xchg
fs
das
mov
jmp
push
add
push
jno
dec
push
sbbb
jo
inc
aam
ret
mov
mov
and
les
fdivrs
sbb
and
cmc
repnz
sti
mov
outsb
xchg
sahf
mov
mov
jo
mov
out
or
addr16
xchg
outsl
loopne
push
cs
into
movsl
enter
dec
jge
sbb
test
mov
enter
bound
outsb
pop
inc
subl
push
push
enter
dec
jmp
lea
addb
mov
pop
xchg
mov
dec
xchg
pop
and
xchg
mov
out
xchg
or
dec
mov
cmp
mov
mov
in
pop
mov
push
cmc
dec
sub
push
mov
adc
cmc
imul
jg
ja
sub
sar
pop
rcrb
daa
xchg
sbb
sti
pop
sub
bound
call
or
inc
adc
rol
mov
roll
enter
sub
or
mul
popf
jg
xchg
mov
inc
cwtl
sub
icebp
rclb
push
fldenv
popa
insb
lret
fists
pop
daa
dec
cmpsb
shll
push
add
shlb
sub
pop
inc
pop
mov
xchg
sbb
outsl
negb
or
sarb
mov
adc
sub
xor
clc
add
sub
xchg
adc
inc
mov
pop
add
add
stos
sub
mov
fdivs
pop
iret
sub
mov
das
add
sbb
pop
xchg
and
ret
push
js
lcall
testb
inc
pop
fwait
cmpsb
dec
nop
sub
pop
leave
subl
jmp
xchg
push
mov
pushf
aad
jmp
mov
xchg
rcrb
loop
push
and
jg
dec
xchg
inc
loopne
mov
mov
mov
push
gs
inc
pop
jbe
enter
sub
dec
xor
xor
xchg
negb
scas
gs
cld
pop
push
push
outsl
mov
adc
mov
std
mov
out
inc
aad
push
push
jno
je
xchg
fimull
mov
lods
sahf
nop
aad
and
lret
sbb
out
push
std
lret
sub
push
jns
loopne
popl
cmp
and
mov
jo
mov
imul
push
pop
xor
adc
cmpsb
mov
mov
pop
repz
dec
fisttps
scas
cmp
loope
mov
pop
dec
dec
adc
push
sbb
cmpsb
push
jae
nop
ljmp
imul
sbb
dec
push
movsl
imul
dec
add
xchg
dec
rcl
jge
ds
inc
enter
movsl
mov
insb
mov
das
pushf
xchg
imul
jae
mov
xor
cmc
sub
sub
xlat
mov
sbb
jmp
stc
cli
cmp
punpcklbw
mov
pop
xchg
in
adc
adc
and
sub
inc
add
lock
arpl
jg
pop
iret
cmp
inc
pop
ret
jl
mov
out
fistps
jo
inc
jns
out
mov
js
lcall
fdivrl
repnz
sbb
add
aaa
sbb
insl
cmp
cmp
cli
adc
dec
pop
loopne
insb
outsl
outsl
or
stos
or
push
lret
pop
mov
dec
pop
rcrb
pop
pop
or
jecxz
aaa
lret
loop
sbb
pusha
pop
pop
das
inc
pop
sub
ret
dec
lods
test
pop
jbe
xor
stos
inc
jecxz
sbb
cmp
push
push
fwait
add
outsl
in
jmp
ljmp
mov
enter
sbb
mov
flds
adc
in
sub
sub
in
xor
and
cmc
das
mov
pop
mov
sub
outsb
rol
xlat
test
ljmp
outsb
push
mov
add
cmpsl
scas
sbb
cmp
cmp
pop
movsb
xor
loopne
sub
cmp
les
adc
inc
jb
jle
sbb
push
lea
jns
pop
fildll
icebp
je
dec
xor
sub
jne
mov
jae
mov
popf
shrl
movq
add
lea
cmp
cmp
adc
popf
and
cmpsl
sbb
mov
push
movsl
pop
into
mov
popa
mov
cli
in
sub
xchg
sub
push
add
xchg
fst
in
fsubrp
xor
sub
mov
lret
dec
adc
adc
cmp
lds
outsb
jnp
mov
pop
scas
imul
nop
or
test
fistpll
subl
adc
mov
leave
movsb
mov
xchg
icebp
pop
xchg
jnp
adc
cmp
ljmp
out
daa
fimull
push
or
sub
mov
in
adc
ja
cltd
int3
add
sbb
push
or
outsl
cmp
stc
push
pop
sub
jnp
jne
mov
inc
mov
fwait
jl
and
aad
sub
jne
je
aam
aas
sub
jne
push
or
dec
les
xchg
or
sub
gs
push
push
cs
push
adc
mov
sub
js
sub
mov
xchg
sbb
popf
cmc
and
sub
dec
enter
dec
loopw
sti
pop
sbb
xchg
les
enter
xchg
insl
stos
jnp
pop
mov
mov
sub
mov
mov
mov
scas
sbb
mov
sub
push
fstps
dec
or
jb
or
pop
adc
inc
cltd
inc
enter
sub
mov
jnp
aam
rdpmc
sub
insl
add
imul
in
jle
pop
and
pushf
sub
dec
in
outsb
pop
inc
loope
inc
scas
les
lcall
add
mov
ja
es
cmp
pop
into
repnz
xchg
pop
jl
ss
iret
fsub
sub
push
mov
push
inc
nop
mov
xor
popf
cmp
sub
mov
cmp
cwtl
add
push
mov
sub
jbe
mov
mov
pop
mov
popf
clc
dec
sub
mov
sbb
mov
popa
faddl
test
xchg
testb
gs
mov
clc
stc
loopne
mov
shlb
in
fisttpl
ds
stos
push
ds
and
out
sbb
mov
push
je
mov
sub
out
iret
xor
adcb
mov
or
movsb
jo
ret
popa
test
xor
dec
jae
sbb
imul
xchg
inc
and
sbb
add
xchg
mov
adc
or
adcb
sub
hlt
jne
xor
fcoms
loopne
cld
jnp
inc
sub
cld
mov
mov
shlb
fsts
hlt
jne
ds
adc
in
popa
xor
popa
or
push
ret
xorb
mov
inc
dec
cld
shlb
pop
mov
insb
out
push
sub
adc
mov
xchg
in
push
jl
push
sbb
loop
daa
sub
mov
push
mov
repz
pop
jl
and
inc
sub
popa
inc
sub
mov
jge
data16
enter
inc
pop
dec
fsub
push
mov
sbb
movsb
cmp
sub
sub
inc
mov
sbb
jecxz
pop
xchg
push
lcall
js
xor
in
sub
jb
mov
les
dec
lods
fimull
hlt
mov
push
repz
insb
enter
inc
ja
mov
pop
push
int3
pop
in
addr16
nop
sub
mov
scas
mov
jg
jecxz
or
cld
enter
ljmp
shrb
enter
or
adc
xchg
cmpsb
inc
sbb
jecxz
jp
mov
or
int
cltd
test
rorb
adc
jns
dec
ficomps
roll
aad
leave
insl
pop
jmp
xor
push
sbb
movsl
repz
js
sub
ds
lahf
jmp
adc
mov
test
mov
jp
inc
mov
mov
lret
shl
push
pop
mov
pop
mov
cmp
jno
xchg
xlat
pop
mov
mov
jnp
xor
rcr
sbbb
mov
push
out
mov
cmp
test
loop
or
lcall
inc
stos
daa
push
and
jmp
mov
xchg
ds
shrb
sub
rcll
sbb
outsb
cli
lods
inc
test
lcall
loopne
sbb
shrl
jp
lds
out
pop
sbbb
xchg
sbbb
push
insl
mov
sub
mov
cmovle
ret
sbb
xchg
push
fs
jmp
xchg
movsb
sbb
lods
sub
enter
adc
out
aad
xchg
mov
push
enter
pop
xor
incl
pop
jo
out
xor
fbstp
aas
sbb
cltd
fs
sub
test
sub
jl
push
mov
mov
jnp
jg
divb
shl
add
mov
mov
daa
jbe
inc
pop
scas
sbb
and
in
enter
outsl
mov
les
xchg
ja
inc
mov
dec
lock
adc
cmp
ret
xchg
bound
xchg
movsl
dec
mov
jle
enter
push
ret
cli
pop
divb
iret
jne
je
sub
cmc
aad
adc
in
jo
insl
xor
inc
dec
xor
cmp
fldcw
dec
inc
stc
insb
and
imul
dec
and
outsw
sub
cmc
dec
or
mov
mov
xchg
dec
in
lret
les
sub
popf
or
cmc
scas
mov
inc
enter
sbb
pop
pop
jmp
mov
sbb
xlat
lret
push
dec
dec
stos
mov
cltd
push
in
pop
in
jmp
pushf
pop
adc
push
out
xor
pop
in
pusha
jmp
sbb
cli
sti
enter
add
mov
mov
in
sbb
sub
jno
es
int
inc
sub
pop
mov
outsl
mov
and
sub
mov
mov
hlt
sbb
sbb
pop
mov
xor
call
gs
iret
into
ljmp
je
out
sub
add
push
dec
jno
xor
fldenv
enter
pop
stc
jg
pop
xchg
and
xchg
fsubs
and
push
inc
imul
jb
daa
repz
addr16
xchg
jmp
pop
push
push
shlb
jo
adc
pop
jl
sbb
and
lock
dec
enter
js
adcb
test
inc
xor
mov
aas
xor
and
mov
jle
sub
sub
sbb
mov
mov
sbb
fwait
iret
mov
fstpl
mov
cmc
mov
sub
leave
data16
in
mov
lock
cmpsl
mov
fadds
aas
iret
push
xor
adc
int
in
andl
mov
push
sub
sub
push
fsubl
scas
push
dec
mov
and
lret
orl
push
pop
add
mov
movsl
das
xchg
xor
lcall
xor
incl
or
rorl
sub
fcomip
adc
cmc
pop
dec
push
orl
fists
fmul
mov
in
sub
mov
ret
pop
arpl
inc
fwait
cltd
push
mov
sub
mov
adc
inc
das
out
jge
and
xchg
push
adc
rol
cvttps2pi
mov
push
iret
mov
and
sub
je
lcall
test
or
mov
push
in
sub
aad
xor
aas
test
int
fwait
and
sbb
mov
dec
pop
push
cmp
arpl
mov
stos
fldt
jl
sbb
jle
xor
and
js
loop
push
aad
dec
out
mov
ret
scas
aad
stos
sbb
pop
cmp
adc
out
lret
push
aad
std
xchg
push
leave
mov
pop
xorl
xchg
sub
mov
push
sbb
ds
aad
add
fidivl
mov
in
jmp
leave
decb
jge
imul
in
popa
out
int
insl
addr16
insl
test
jnp
fidivrl
mov
lcall
mov
jmp
xchg
pop
and
cmp
sbb
sub
mov
aam
aaa
adc
and
cli
and
inc
enter
fidivrs
xor
push
call
dec
test
aaa
pop
dec
aad
icebp
inc
pop
adc
test
mov
clc
sti
or
jns
xor
mov
or
call
scas
and
mov
pop
int3
fldl
lcall
add
pop
jmp
xchg
push
sti
add
leave
mov
cli
ss
push
sbb
sbb
jecxz
xlat
cli
pushf
mov
dec
clc
inc
jno
sbb
adc
dec
push
fildll
pop
pop
inc
mov
or
cmpsb
xor
pop
jno
sbb
sub
sbb
shrl
inc
mov
enter
push
sbb
sbb
pop
cld
in
std
scas
ljmp
adc
test
fs
xor
lret
insl
adc
cmp
das
sahf
lods
fldpi
add
sbb
push
scas
ja
daa
movsb
dec
adc
add
pusha
lret
sbb
test
sub
push
jp
stc
mov
mov
out
andb
outsb
lods
jmp
mov
ss
xchg
or
lock
lcall
stos
lods
insb
loopne
daa
and
pusha
pop
inc
cmp
mov
jmp
mov
mov
out
aas
inc
inc
sub
stc
and
add
aaa
cmp
lock
cltd
pop
cmp
ja
adc
pushf
add
jmp
mov
sbb
xchg
test
mov
adc
shlb
xor
sbb
xchg
or
insb
pop
sbb
int
loop
jae
sub
cmp
sub
ja
imul
mov
xor
aad
and
arpl
jmp
or
shl
pop
mov
sub
xchg
sub
sahf
inc
pop
add
xchg
aad
sbb
add
xchg
and
cwtl
bound
or
divb
out
stos
sbb
stc
lahf
gs
cmp
sbb
int3
xor
andb
sbb
pop
popf
and
pop
mov
push
sbb
mov
push
jns
adc
orl
loope
stc
sahf
int3
jge
popa
inc
and
fstp
push
push
and
push
pop
in
jno
leave
jg
jge
push
jae
pop
arpl
dec
mov
add
pop
xchg
ja
jno
jae
sub
cmc
mov
sbb
inc
cwtl
pop
enter
push
aam
cmpsl
popa
mov
and
fdivrs
test
enter
jl
inc
push
lret
xlat
mov
das
daa
subl
pop
js
inc
insb
repnz
add
movsb
sub
jo
xlat
and
mov
pop
mov
pop
iret
dec
xor
test
push
dec
pop
enter
push
add
lret
pusha
sbbl
add
cmp
fwait
js
popa
mov
jne
xchg
cmp
dec
in
sub
inc
sub
mov
fwait
cmp
dec
popa
or
sbb
hlt
imul
lret
push
outsl
int
daa
xor
cli
cwtl
shl
fs
enter
ret
jmp
adc
inc
xor
aad
mov
sbb
cmpsl
popa
inc
jns
and
and
call
xor
push
or
and
stos
popf
push
pop
mov
mov
cmp
xchg
cs
dec
cmp
clc
call
jb
xchg
xor
enter
mov
ret
lock
mov
stos
jg
popf
js
or
stos
sbb
add
test
mov
icebp
add
jge
pop
push
and
jp
test
add
push
rcrb
mov
inc
add
dec
lret
mov
or
sbb
mov
ljmp
cmp
push
adc
lods
das
sbb
int3
adc
dec
insb
pop
and
mov
hlt
xor
inc
jbe
xchg
pop
sub
outsl
loope
lahf
mov
and
jle
stos
ret
pop
mov
jnp
pop
fmul
dec
or
lret
xchg
xor
bound
push
stc
push
dec
pop
out
mov
and
fstp
pushf
shl
mov
xchg
ret
clts
test
add
mov
adc
jno
jecxz
orb
decb
or
push
mov
and
enter
stos
or
shll
cli
enter
cmp
fisubl
clc
jmp
nop
sub
push
sbb
rcl
dec
sub
jecxz
cmpb
sbb
shll
enter
mov
push
inc
inc
leave
std
faddl
out
ja
xchg
inc
push
jecxz
xchg
jns
xchg
xchg
loop
lret
jmp
xchg
imul
in
mov
jecxz
data16
ljmp
xor
enter
es
cmpb
mov
leave
mov
push
aas
ljmp
xchg
mov
dec
daa
lds
pop
enter
push
orl
pop
cmpl
pop
push
dec
sbb
enter
cmp
xlat
rcll
das
and
pop
in
notl
faddp
sub
and
xor
pop
sub
insb
test
sbb
jb
push
dec
scas
lea
les
cmpsl
xor
mov
mov
enter
pop
lea
dec
xor
cmp
sbb
jo
jae
fcompl
pop
das
packsswb
sbb
fcoml
lret
fcoml
pop
pop
shll
loop
sub
xor
push
pop
lods
mov
das
dec
sub
lea
sbb
mov
dec
mov
sub
in
lcall
data16
jmp
sub
outsb
ja
call
pop
ret
call
mov
in
cwtl
dec
mov
mov
imul
mov
lods
pop
imul
shlb
hlt
cld
test
xor
imul
in
push
stos
jnp
fwait
mov
fcomp
xchg
inc
insl
and
sbb
inc
sbb
pop
mov
inc
gs
mov
cmp
mov
lods
dec
and
shl
fmul
sub
mov
xchg
push
pop
or
inc
dec
aad
add
data16
pop
mov
leave
cmpsb
cmp
scas
add
bound
sub
nopl
fndisi(8087
xor
bound
pop
pop
mov
lods
xchg
sub
jae
stos
add
es
push
adc
daa
aas
subl
imul
sbb
mov
pop
lods
jb
rorl
mov
sub
data16
cltd
sti
mov
aaa
test
ljmp
insb
pop
outsl
cltd
add
sub
add
sbb
pusha
pusha
ss
rolb
leave
or
pop
int
mov
jmp
cmp
lds
adc
movsb
and
mul
mov
or
mov
jb
sub
cmp
push
addr16
add
push
or
or
inc
ror
std
jl
pop
jnp
push
push
sub
inc
enter
xchg
mov
mov
and
repnz
sub
jo
or
sbb
mov
and
xchg
stos
dec
enter
mov
and
pop
in
ror
je
ficoml
dec
sub
xor
shl
hlt
sbb
xchg
sub
enter
adc
mov
jl
jmp
mov
mov
xor
je
or
adc
mov
jnp
sti
sub
mov
dec
mov
adc
icebp
sbb
test
cmp
lods
bound
xchg
ljmp
fwait
mov
jge
add
in
xchg
sbb
mov
stc
out
out
cmpsb
pop
arpl
pop
ret
mov
enter
inc
stos
push
and
mov
push
jns
test
call
mov
cld
push
cmp
adc
mov
mov
popa
rcrl
dec
lret
push
xor
or
adc
enter
pop
aaa
loopne
push
int
pushf
cmp
loop
mov
cmp
adc
aaa
dec
inc
pop
das
arpl
dec
loop
lock
cmp
dec
aam
pushf
dec
jmp
cmp
pop
hlt
imul
push
and
mov
outsb
aaa
xor
or
test
fs
test
inc
mov
adc
cmc
xchg
mov
add
ret
sbb
xchg
xchg
out
sbb
enter
jg
adc
mov
xor
test
pop
outsl
mov
xchg
push
jp
movsb
in
jmp
dec
sbb
push
sbb
fdivrl
xchg
in
movsl
or
repz
pop
cld
loope
pop
out
xor
xchg
mov
mov
icebp
or
push
sbb
mov
cltd
iret
lcall
sbb
rorl
sbb
dec
cmpb
aas
push
jae
imul
pop
xchg
jbe
xchg
jmp
addr16
jmp
ja
test
sbb
jno
jnp
fidivrl
push
jae
cs
mov
stos
sbb
divb
dec
sub
les
jp
ret
in
cli
pushf
mov
out
and
fmul
cwtl
sub
aad
pop
inc
push
int3
and
dec
enter
mov
pop
and
daa
add
ficoml
stos
loop
xchg
imul
aad
gs
jl
daa
loope
xor
push
fsubl
repnz
pop
and
leave
xchg
ljmp
or
cli
mov
pop
mov
lret
pop
mov
out
fadds
dec
push
sub
sarl
ffreep
lock
mov
pop
and
cmp
xchg
hlt
cli
cmp
push
add
mov
lds
or
xor
mov
fisubrs
fsubl
mov
xchg
outsb
loop
int
rol
fdivrs
aam
fdivrl
sub
pop
mov
aaa
sbbl
pop
ficomps
and
sbbb
sub
pop
addl
mov
jl
addb
leave
hlt
shlb
or
inc
jb
add
ret
sarb
push
inc
divb
jns
test
jecxz
pop
mov
xorl
mov
aaa
movsb
mov
and
ficompl
cmp
add
clc
dec
in
aas
aas
fs
adc
mov
xchg
sbb
leave
xchg
into
push
adc
out
add
hlt
rcrl
sbb
inc
nop
out
xor
pop
ljmp
lods
mov
sti
xchg
in
pop
sub
leave
pushf
cmp
sub
push
pop
cmp
mov
repz
mov
jnp
mov
lret
xor
xchg
sbb
hlt
pop
cmp
frstor
or
stos
sbb
add
mov
cltd
mov
and
shll
push
aaa
pop
sub
push
jmp
addr16
ss
cmp
cli
push
das
ret
arpl
inc
imul
sub
dec
pop
aam
aas
out
inc
inc
sbb
insl
cwtl
sbb
sub
and
xor
cwtl
ficompl
scas
mov
mov
pop
mov
pop
push
test
in
mov
test
sbb
dec
xor
jb
enter
and
in
and
insl
fimuls
add
sbb
dec
xchg
sbb
sbb
mov
pop
js
add
enter
mov
pop
xchg
gs
push
dec
in
enter
lret
jle
pop
push
loopne
pop
mov
fadds
lcall
cwtl
in
lahf
ret
movsl
cmc
test
cmpsb
cmp
jne
add
loope
xchg
lods
nop
or
addr16
ds
in
sbb
push
cmp
repnz
loope
data16
dec
std
imul
inc
mov
scas
sub
fldl
enter
dec
in
outsl
pusha
lcall
movsl
lods
push
fldcw
lret
push
ret
or
dec
add
xchg
jo
xchg
movsb
insb
fisttpl
xchg
xchg
scas
repz
gs
xor
repz
les
inc
sbb
lods
enter
dec
jns
fs
push
cmpsl
enter
stc
fdivr
mov
shlb
in
fiadds
mov
sbb
dec
stc
mov
stos
cmp
lahf
rorb
pop
imul
insb
pusha
mov
cs
movsl
sarl
push
cmp
adc
enter
push
lea
scas
gs
inc
fisubl
sub
inc
pop
sub
adc
pop
in
int
in
mov
pop
mov
scas
xor
jp
mov
loop
mov
fwait
inc
jecxz
in
or
les
or
sbb
lds
pushf
filds
test
sub
int
pop
cli
negb
xor
sbb
add
out
stos
add
ret
lock
pusha
insb
jl
outsl
pop
aam
inc
aaa
pop
cmp
clc
jg
loopne
scas
sub
insl
shll
push
mov
sti
fs
mov
jl
cmp
pop
scas
lret
outsl
jne
cmpsl
xlat
loopne
mov
cwtl
dec
int3
shrl
bound
cmp
int3
push
jns,pt
aam
or
and
pop
mov
adc
lods
mov
and
or
dec
imul
enter
pop
xor
xchg
repnz
rclb
lret
mov
dec
les
sbb
jl
ror
ret
pop
push
aam
sbb
push
lret
xchg
mov
mov
pop
enter
cmpsl
inc
pop
mov
mov
sub
dec
mov
pop
insl
cmp
push
pop
adcl
imul
leave
fwait
sti
cmp
adc
call
cmp
xchg
jnp
pop
adc
jnp
jmp
dec
cmp
pop
not
fstp
dec
loop
ficoml
jecxz
dec
neg
rcrl
mov
sub
xchg
int
jl
add
in
shlb
hlt
jge
mov
pusha
les
jns
pop
pop
xor
stos
or
js
das
ror
lret
add
scas
sub
sbb
mov
sub
sahf
loope
jae
hlt
mov
xor
or
scas
lods
pop
flds
stos
enter
push
in
enter
out
mov
out
jnp
lds
leave
sub
bnd
mov
addr16
inc
call
jmp
xchg
push
sbb
hlt
pop
unpcklps
jp
lock
cmp
frstor
mov
sbb
pop
stc
nop
mov
sbb
lahf
sub
mov
aas
sub
dec
pop
inc
pop
data16
loope
repz
lea
aad
sub
pop
sbb
xchg
or
in
sub
hlt
mov
jb
out
or
pusha
ret
repnz
je
add
enter
jno
stos
inc
mov
aam
sbb
test
cmc
pop
mov
xor
add
mov
pop
push
xor
popa
push
mov
jo
jno
fiaddl
mov
lret
mov
xor
mov
lret
or
and
pop
clc
sub
rclb
clc
jle
repz
pushf
sahf
out
ss
xchg
dec
dec
and
rolb
inc
enter
fdivp
filds
add
sahf
push
push
dec
mov
data16
inc
ret
xchg
pop
test
xorb
xchg
fincstp
xchg
and
and
sbb
ret
jns
mov
sbb
sbb
ret
and
cwtl
leave
enter
inc
psubw
sub
sbb
arpl
icebp
pushf
addr16
sti
roll
cmc
roll
out
pop
out
repz
adc
enter
inc
jp
daa
jp
test
lret
mov
push
imul
call
pop
sbb
pop
and
sbb
push
inc
shl
insl
sbb
push
orl
pop
test
ret
insl
sub
cli
mov
insb
out
cld
pop
ljmp
je
sbbl
bound
jge
jl
sub
mov
pop
sub
inc
int
xorb
inc
pop
pop
xchg
in
cmpsb
pop
cmpsb
pop
adc
les
fsubrl
cld
inc
cmp
pop
adc
add
ds
pop
mov
aad
fisttps
push
cmp
add
mov
icebp
pushf
mov
jmp
pop
pop
sbb
pop
jle
ljmp
sub
ret
inc
inc
aam
cmpsl
and
lret
pusha
aas
sub
push
sahf
inc
push
mov
fstpl
iret
fadds
mov
or
hlt
inc
pusha
cld
cmp
pusha
mov
inc
push
push
arpl
lds
sub
mov
pop
inc
push
lds
sub
jecxz
sub
inc
jne
add
cmc
sbb
xchg
das
movsl
pop
mov
lret
sti
imul
pop
fimuls
xor
add
fildl
mov
sbb
jnp
sahf
lret
clc
jns
cmp
cmp
pop
inc
movsb
in
jle
cld
xor
imul
arpl
sbb
adc
pop
dec
enter
je
pop
cwtl
js
inc
mov
push
sub
xor
enter
jl
jae
mov
push
push
lcall
aaa
gs
sbb
divl
add
pop
enter
mov
adc
fwait
pop
out
and
bound
lea
sbb
push
jne
xchg
jne
inc
nop
xor
push
dec
jo
movsb
mov
insl
sub
sub
or
mov
sbb
or
clc
dec
roll
sti
pop
pop
adc
daa
out
jne
pop
cld
and
sbb
int
sbb
mov
insl
xchg
cmp
push
inc
jp
push
add
sub
sbb
mull
and
mov
stc
mov
fidivrs
dec
rcl
adc
enter
shll
mov
pusha
mov
inc
movsb
adc
sbb
mov
out
enter
in
int3
xchg
pop
dec
hlt
xor
pop
mov
jmp
into
lcall
mov
ljmp
jge
add
sub
loope
or
ret
popa
inc
fwait
lds
scas
inc
mov
adc
push
jg
enter
push
add
mov
fistl
sbb
dec
ds
cld
pushw
jno
popa
or
fmul
fucom
and
mov
jl
orb
sbb
movsl
inc
add
ss
lret
push
sub
add
lds
daa
pop
mov
push
add
test
aad
xchg
lcall
into
je
push
out
aaa
pop
dec
scas
inc
pop
inc
sbbl
movsb
push
clc
pop
gs
das
fstpl
scas
enter
cmp
adc
pusha
mov
sub
adc
sbb
sbb
jae
inc
jl
es
pop
pop
jo
ljmp
push
jge
push
and
mov
sub
sub
xchg
call
cmp
cmpsl
das
icebp
mov
dec
sahf
arpl
inc
cmp
xlat
sti
or
nop
xchg
pop
mov
enter
into
pop
cmp
mov
mov
and
cmp
jle,pt
dec
cmpsb
movsl
dec
jecxz
push
addr16
dec
dec
pop
pushf
mov
rcrb
out
addb
lahf
sbb
push
lock
mov
sub
pop
mov
sbb
sub
xlat
xor
cmp
aad
jl
rep
orl
mov
sbb
mov
aad
pop
faddp
rcll
push
jb
push
aad
jbe
andb
pop
add
mov
adc
push
dec
movsl
in
jmp
jmp
jmp
shlb
pushl
es
sbb
es
sub
push
lock
bound
arpl
inc
adc
push
test
lcall
lock
stos
or
fldt
aaa
fbld
addr16
jae
mov
mov
pop
lret
pop
mov
sahf
inc
test
dec
xor
dec
stos
rclb
ret
aad
xlat
push
inc
lret
add
inc
hlt
stc
lds
sbb
decl
inc
fisubrl
or
rclb
push
push
and
xchg
xchg
aaa
cmp
fisttpll
push
shrl
jb
sbb
cli
repz
orb
adc
loope
dec
mov
fnstsw
ss
sub
inc
scas
push
arpl
push
jmp
lahf
or
sub
sbb
fmulp
sbb
fsubs
outsl
clc
dec
xchg
mov
dec
stos
add
sub
xor
sahf
and
outsb
fcomi
and
sub
mov
pop
push
push
inc
add
enter
cld
jg
es
loopne
sbb
and
stos
das
xor
cmpb
pop
addb
icebp
or
pop
xchg
mov
and
lods
sub
sub
insl
push
inc
pusha
and
adc
rorl
inc
pop
int3
jae,pn
cwtl
pop
push
add
out
lahf
sub
idivl
cli
test
xchg
jb
stos
sub
sbb
mov
and
negb
xlat
pop
in
in
loope
adc
push
scas
lret
mov
sbb
xchg
pop
cmp
add
or
sub
adc
popf
test
jp
lret
pop
mov
jp
fbstp
pop
or
mov
scas
loop
imul
and
pushf
xchg
mov
pop
adc
in
mov
sbb
insl
aad
mov
lock
pop
and
xchg
fwait
mov
fs
push
out
mov
inc
sub
cli
lods
push
and
xchg
jns
add
push
pushf
pop
movsb
mov
push
or
lcall
loopne
test
jl
adcl
dec
push
dec
addr16
adc
call
mov
fbld
in
ljmp
sub
dec
sbb
in
jg
sbb
pop
cmp
loope
mov
cmp
das
adc
dec
nop
sub
test
or
sbb
sbb
data16
inc
orl
movsl
mov
inc
mov
movsb
or
stos
aas
mov
xchg
cmp
mov
cmp
bound
out
dec
mov
cwtl
cmp
and
insb
push
pop
sbb
mov
sub
idivb
adc
mov
rorl
xor
rcrl
xor
loope
sub
into
pop
pop
xchg
clc
imul
sbb
xor
inc
outsl
int
push
cwtl
mov
ror
add
call
iret
cld
add
and
pop
pop
xor
cs
or
aaa
xor
sub
sbb
movsl
sahf
sbb
and
popf
imul
enter
lds
cmp
add
out
sbb
ss
stos
cmpsb
sbbl
lea
fsubrl
cmp
push
sub
sahf
push
outsl
and
out
cmp
mov
int
cmp
adc
inc
xchg
dec
xchg
mov
hlt
packsswb
gs
repz
add
dec
out
cli
xor
pop
sti
roll
mov
std
ret
adc
add
insl
jp
jmp
dec
sti
stos
sub
adc
aas
negl
incl
repz
dec
mov
inc
nop
mov
and
and
cwtl
cmp
mov
mov
testl
mov
shrb
aad
mov
cmp
dec
sub
jne
ss
or
adc
sub
out
pusha
mov
out
sbb
lret
fidivs
insl
test
or
dec
mov
add
mov
jbe
xlat
or
jle
cmp
sub
subb
mov
dec
mov
sub
inc
pop
pop
aam
jno
or
popa
sub
inc
xor
pop
pop
cltd
aad
add
sub
ret
xchg
mov
or
rol
sub
xor
xor
sbb
nop
jl
cmc
jl
sub
sti
pop
xchg
xor
in
mov
mov
sbb
jg
and
ja
lods
adc
lods
ds
outsb
adc
mov
jecxz
iret
test
pop
ss
mov
out
or
dec
xor
push
sub
out
xchg
sub
sbb
lcall
aad
jbe
or
int3
xchg
dec
sbb
jb
aam
jbe
dec
mov
mov
mov
sub
and
test
lods
lea
dec
add
jae
stos
mov
push
loop
adc
lcall
insl
jmp
sbb
sub
cmpsl
ror
jp
push
les
mov
repz
nop
sub
lret
mov
iret
pop
push
mov
add
or
std
mov
out
dec
adcb
pop
jmp
sbb
mov
int
and
ljmp
lahf
fisttps
mov
fs
inc
adc
jecxz
lahf
adc
xor
mov
adc
lds
adc
ret
and
fbld
ss
dec
push
ret
sub
das
lods
sbb
pop
inc
jo
xchg
xchg
xchg
repz
lcall
xchg
inc
xchg
cmpsl
test
fidivs
sub
adc
push
dec
cmp
sarl
inc
push
pop
aam
sub
rcrb
sub
insb
mov
pop
lea
pop
add
hlt
loopne
dec
mov
stos
sbb
cmp
and
pop
push
lret
leave
pushf
sub
sub
rcrl
cmp
pushf
enter
jge
jmp
jg
negl
jo
mov
enter
lahf
mov
adc
fcomps
cmpsw
xlat
clc
pushf
ret
adc
cmc
xchg
sbb
hlt
imul
cmp
add
outsl
fiadds
sti
pop
fdivr
cmpsl
jbe
sub
aas
ret
xor
testl
cwtd
and
mov
scas
add
inc
jno
fdivr
xlat
jnp
jl
enter
test
cltd
icebp
cmp
adc
cmp
data16
fistpl
sti
push
pop
inc
xchg
addr16
inc
pop
cmp
jmp
mov
dec
aad
lods
add
jne
push
sub
or
jl
sub
ud0
xor
mov
xchg
divl
add
movsl
or
scas
xor
mov
adc
fcmovnbe
fstpt
data16
sarb
adc
ja
xor
faddl
shrb
fcmovnbe
mov
mov
jae
mov
adc
lret
adc
pop
jno
sarl
lret
sbb
inc
in
xor
mov
pop
pop
les
or
or
mov
adc
in
loop
and
fwait
cwtl
mov
jno
sbb
fcompl
mov
inc
ds
or
aad
add
andl
jb
out
cwtl
dec
and
mov
mov
inc
mov
adc
push
cmpb
xchg
cmpsl
out
fucompp
mov
or
mov
mov
inc
dec
std
das
test
push
loope
xchg
ret
sub
outsb
shll
jge
jmp
dec
divb
xchg
mov
sub
inc
leave
sbb
push
sbbl
pop
sub
shlb
rclb
sub
cmp
push
push
mov
xchg
push
pop
pop
jne
call
mov
jg
xor
cmp
leave
cli
aad
xchg
mov
pop
lds
jne
iret
fsubs
int
push
lret
cmc
cmc
sbb
fiadds
sbb
nop
arpl
mov
sub
add
sbb
sub
ss
lahf
jne
mov
push
add
sbb
ljmp
sbb
enter
xor
sbb
js
pop
jmp
rcrl
cmpsb
xchg
adc
cmp
xlat
lahf
push
sub
scas
scas
fimuls
pop
imul
and
mov
and
jle
xor
add
inc
aaa
data16
dec
inc
arpl
enter
mov
push
ficompl
loopne
dec
mov
sbb
mov
lret
repz
pop
xchg
fnstcw
push
fldl
test
sub
xor
mov
mov
add
loop
jmp
push
iret
push
nop
mov
mov
jae
iret
xchg
sbb
cmp
dec
xchg
mov
cltd
xchg
mov
iret
push
iret
dec
fmulp
xor
lds
aaa
jecxz
hlt
push
cmp
inc
push
pop
lret
aam
lahf
mov
into
sarl
jbe
fidivs
mov
enter
sub
push
mov
sbb
inc
or
stc
cwtl
sub
adc
iret
mov
add
xorb
xchg
pop
fnstcw
out
sbb
out
add
test
stos
mov
sbb
lret
movsb
enter
cltd
xchg
mov
inc
cs
sti
ret
and
xor
and
fstl
aas
sub
cmpsl
lret
enter
mov
pop
clc
jecxz
xor
push
push
daa
mov
add
into
mov
fisubs
ljmp
jo
jnp
sbb
add
mov
dec
sub
negl
cltd
std
ret
lds
xor
xor
je
scas
mov
fcomps
fisttps
addl
sub
adc
negb
push
test
sahf
ss
daa
or
les
popa
pop
in
dec
or
mov
or
test
mov
add
lea
out
dec
cmpsl
pop
mov
cld
enter
repnz
sahf
out
pop
and
loopne
push
mov
push
inc
sub
mov
mov
push
loop
sbb
std
stc
sub
ja
or
test
pop
xchg
pusha
sbb
push
ret
inc
enter
outsb
add
cmp
cld
xchg
out
daa
fiaddl
jns
sahf
mov
lock
sub
out
mov
sbb
or
pop
mov
sub
or
ficompl
dec
loopne
dec
sub
arpl
mov
pop
test
xor
or
sub
mov
sbb
jns
lds
xor
mov
das
das
rcrl
cmp
cld
xor
pop
jb
sub
addl
fwait
outsb
pop
push
ret
mov
je
repz
into
mov
push
cmc
ja
jae
aam
or
inc
rcll
insl
add
scas
jmp
and
sub
jbe
jmp
imul
sub
imul
stos
pop
mov
aas
jae
dec
xchg
dec
fstp
repz
or
pop
outsb
out
xor
js
sbb
push
sbb
mov
enter
jg
or
dec
ja
push
pop
in
push
sub
enter
jmp
push
sbbb
test
cmp
iret
fildl
fcoml
pop
movsb
popf
data16
jnp
out
cwtl
iret
pop
sti
lods
mov
gs
jge
clc
jecxz
sub
sub
bound
cmp
jbe
int3
fadd
sarl
push
push
mov
jge
push
add
and
dec
mov
das
sbb
inc
int
in
jecxz
inc
dec
sub
push
call
sub
popf
mov
clc
leave
insb
add
mov
cmp
dec
int3
movsb
xlat
lods
add
iret
fsubs
shll
pop
pop
and
and
push
popa
or
jne
cmpsl
jg
push
push
imul
adc
push
jbe
popf
je
mov
pop
mov
ret
lock
mov
pop
out
jae
sbb
hlt
jmp
sbb
enter
mov
sub
mov
das
loopne
xchg
mov
stc
loope
mov
insl
pop
jne
inc
push
stos
inc
enter
pop
cmpsl
or
pop
push
sbb
movsl
addl
push
sub
out
inc
sbb
jecxz
add
loopne
push
in
dec
push
cld
push
pop
xor
fs
inc
int
enter
test
lret
pop
test
push
sbb
pop
push
xlat
loop
insb
xchg
sbb
in
mov
leave
sbb
fsts
and
mov
dec
call
mov
shrl
test
fisttpll
pop
cmpsb
xchg
mov
ss
mov
or
jmp
test
out
call
jbe
mov
mov
jge
sbb
mov
add
pop
sbb
enter
idiv
fstl
xor
roll
add
xor
adc
xor
cmp
sbb
pop
add
fimuls
cwtl
jne
leave
insb
sbb
dec
sbb
iret
stc
adcb
push
pop
pop
lcall
shlb
push
mov
dec
enter
jg
lods
addl
js
lcall
leave
mov
jno
mov
leave
daa
lahf
out
subb
cmp
mov
hlt
mov
sub
add
adcl
dec
xlat
imul
sub
cltd
sahf
std
dec
mov
loopne
lock
lods
int3
jno
mov
outsl
mov
sub
mov
add
sbb
ret
jae
lahf
jmp
jnp
or
sub
and
stos
imul
inc
mov
dec
adc
jo
pop
add
pop
push
pop
cltd
ret
dec
cld
push
test
pop
mov
push
pop
int3
xor
js
or
adc
in
fcoml
cmp
pop
pop
mov
inc
fwait
inc
or
adc
dec
fsubl
push
ss
xlat
adc
jle
and
dec
sub
pop
inc
sti
push
push
sbb
out
stc
fistl
or
sbb
aad
mov
add
imul
cmp
or
jg
sbb
and
data16
xor
xor
jmp
les
and
mov
pop
push
out
hlt
mov
push
int
enter
imul
jl
leave
pop
icebp
sub
rcrl
hlt
fs
addl
xor
adc
cmpsb
push
mov
xorb
sbb
or
loope
in
jmp
jmp
fsubl
pop
outsl
sub
push
jnp
mov
aas
fldt
pop
ss
imul
in
xchg
sub
mov
dec
faddl
cmpsl
push
mov
adc
pop
repnz
addr16
out
pop
xchg
lods
bound
push
or
xor
adc
out
jb
imul
mov
sbb
fildll
sbb
xor
jno
cs
lahf
mov
sub
imul
sbb
jl
lcall
dec
adc
mov
jbe
xor
loop
mov
push
cld
in
dec
xchg
or
and
push
cli
dec
enter
sbb
cmc
dec
scas
aas
cltd
mov
fstps
mov
sub
adc
fiadds
lret
or
inc
fistpl
pop
outsb
pop
dec
in
dec
sbb
sub
and
ret
les
adc
pop
cmp
enter
and
mov
lahf
pop
xchg
cwtl
xor
push
sti
aas
add
sub
mov
inc
jmp
movsb
inc
roll
lock
sbb
add
sbb
and
pop
pop
test
lods
add
or
push
pop
fsubrl
sub
add
jl
test
dec
insl
mov
cs
jl
jno
fists
mov
addl
hlt
or
outsl
aam
clc
testl
inc
ret
sbb
adc
xchg
xlat
mov
and
pop
fs
in
shl
xor
xchg
add
sub
lods
inc
ja
std
dec
out
enter
fbld
sahf
insl
pop
scas
pop
stos
fimuls
dec
push
cmp
enter
push
loop
dec
pop
insl
inc
jecxz
addr16
mov
jns
enter
dec
pop
push
lret
negb
mov
mov
push
mov
fnsave
xor
push
or
xchg
rolb
sbb
test
test
dec
mov
mov
enter
fldl
mov
sbb
fwait
iret
dec
sub
movl
ss
ficoms
insb
lret
les
ret
push
and
or
sub
pop
shlb
movsl
rorl
subb
enter
das
dec
jecxz
jl
cwtl
out
fcompl
xor
or
mov
mov
pop
push
stc
or
jmp
lahf
call
push
sbb
push
add
xchg
shll
pop
out
jne
sbb
push
ljmp
outsb
jno
add
outsl
jp
mov
fs
push
pop
enter
loop
mov
fistps
pop
inc
mov
aad
es
bound
and
sbb
mov
shlb
inc
push
mov
shll
mov
cli
scas
bound
mov
or
jae
enter
aam
pop
stc
xorl
nop
or
iret
mov
cmp
push
popf
jmp
push
cmp
adc
and
sub
push
sbb
movsl
pop
pushf
test
mov
inc
adc
aas
outsb
xchg
adc
bound
mov
mov
xor
mov
loop
push
enter
movsl
fldcw
xchg
sub
ret
and
and
sub
jle
jo
xor
rcrb
push
clc
inc
fisttpll
push
jnp
bound
add
js
mov
in
jmp
sti
or
inc
ss
out
adc
test
aad
ja
and
bound
adc
mov
js
pop
push
in
sub
mov
in
lea
mov
pop
aam
and
xchg
pop
leave
stc
inc
mov
mov
pop
insb
jmp
sub
subb
and
mov
daa
and
leave
jae
cltd
fcmovnb
fldcw
mov
pop
jge
loope
push
push
mov
and
fists
enter
xor
mov
mov
imulb
mov
xchg
and
dec
sub
call
add
sub
popf
es
sbb
jnp
xchg
jne
into
dec
aam
sbb
xchg
clc
sbbl
sub
cmpb
lcall
in
adc
lock
xor
and
loop
gs
sbb
insl
or
xchg
fldln2
cmp
test
aam
push
pop
imull
lds
mov
sub
adc
test
and
cmp
pop
in
mov
daa
cmp
sbb
imul
les
nop
enter
dec
rclb
call
lds
int
mov
xor
add
ds
lret
enter
and
shrb
and
mov
insb
pop
lret
pop
idiv
mov
sub
lcall
pop
xor
aam
jmp
cmp
pop
scas
repnz
cmp
inc
push
fsubrl
and
ffree
mov
xor
fwait
test
iret
sub
jmp
sbb
into
or
adc
push
cmpsb
lret
jecxz
sub
push
sbb
mov
lret
repnz
add
leave
mov
stc
sub
sub
adc
pop
enter
call
pop
mov
and
mov
inc
sub
sub
mov
mov
jno
and
inc
cli
cltd
jo
sbb
mov
pop
in
je
jle
ljmp
mov
xlat
pop
pop
mov
cs
aad
sub
shrb
sbb
sbb
xor
scas
popa
sahf
cli
rclb
adc
cmpsl
imul
dec
sub
xchg
sbb
mov
shr
insl
sbb
cwtl
bnd
fisubrs
mov
scas
arpl
dec
sbb
ja
mov
sub
pop
arpl
push
push
xchg
and
scas
adc
out
bound
in
ja
dec
repnz
jno
and
iret
int3
lret
or
stc
pusha
inc
aaa
loopne
sub
stos
inc
insl
push
rorl
adc
jl
pop
into
test
les
xchg
jne
out
mov
ret
pop
pop
das
insb
leave
or
ss
notl
jno
dec
pop
push
ret
cmp
or
cmpsb
dec
std
je
mov
dec
xlat
faddl
sti
mov
mov
inc
xchg
push
cwtl
ds
or
daa
ret
mov
js
pop
jmp
popa
and
stc
negb
js
jns
xchg
jns
mov
or
mov
das
cmp
mov
aad
dec
mov
insl
enter
and
pop
mov
push
jge
cmpsl
push
mov
push
inc
leave
mov
pop
sub
bound
mov
push
adc
enter
lret
adc
pop
mov
ret
sub
mul
and
pop
jbe
mov
icebp
movsl
add
push
pop
inc
movsl
push
imul
cmpsb
push
out
sub
es
sub
push
aaa
push
push
sti
push
lods
sub
dec
fistpl
daa
lds
insb
sub
ret
leave
add
sahf
cmc
push
sub
int
roll
pop
fldt
push
xchg
pop
or
xchg
ljmp
pop
pop
aas
pop
test
adc
and
outsb
lea
push
pop
jno
stos
sbb
shr
std
adc
addr16
cli
arpl
shr
jno
pop
imul
test
jg
aam
dec
jg
mov
arpl
insb
fimull
mov
scas
sub
pop
insl
out
outsb
cmovnp
jp
sub
scas
sarb
inc
pop
mov
lret
mov
xchg
fstps
xor
arpl
cmp
inc
mov
xchg
xor
outsb
test
and
sub
mov
add
push
inc
jecxz
pop
out
aam
mov
outsb
imul
dec
and
mov
les
push
imulb
pop
lret
imul
cmpsb
jge
mov
pop
mov
outsl
add
jmp
enter
mov
adcb
push
xchg
test
inc
ret
enter
jp
push
pop
mov
movsl
mov
out
xchg
sub
ds
jecxz
pop
shlb
dec
mov
cmp
hlt
out
mov
xor
pop
jmp
xor
sbb
cmpsl
shl
jp
iret
sbb
lock
fadd
nop
leave
test
push
cli
scas
mov
xor
roll
fsincos
rorb
sub
test
pop
pop
inc
xor
dec
cmc
fwait
or
subl
pop
adc
imul
sub
popa
pop
xor
and
inc
lods
cwtl
int3
push
pop
adc
cli
popf
sbb
test
movsl
outsb
adc
xorl
sub
sbb
stos
aad
push
adcb
leave
test
push
sbb
out
sub
cmpb
dec
inc
lods
sub
xlat
mov
sbb
jo
push
cld
cli
xlat
enter
add
fsts
jb
testl
jae,pt
mov
push
mov
add
dec
shlb
movsb
xchg
jp
add
sbb
mov
popa
jnp
test
ret
pushf
iret
in
movsb
sbb
loopne
repz
mov
mov
fwait
insl
sbb
arpl
adc
mov
shll
and
lcall
test
dec
loop
jbe
pop
push
aaa
into
and
pop
xchg
sub
cmp
pop
mov
addb
in
jbe
ja
add
and
xchg
push
sbb
aad
ljmp
ss
shr
inc
in
xlat
jmp
orl
aaa
fsubr
push
pop
lret
sbb
sbb
adc
shlb
fs
jb
pop
add
push
sub
out
imul
cltd
adc
insb
test
or
dec
jecxz
sub
jg
or
rcrb
push
call
clc
fwait
les
and
arpl
ud1
inc
incb
push
mov
testb
and
sbb
mov
sub
jnp
rcrb
mov
rcrl
loop
iret
shl
lock
enter
mov
insb
and
pop
dec
stc
ret
xor
sub
adc
adc
pop
lock
stos
push
and
xchg
and
xchg
dec
fsts
daa
ss
mov
pop
xchg
hlt
ret
sti
xor
pop
inc
leave
pop
adc
adc
data16
lcall
xor
bound
outsb
add
js
cld
jnp
fcmovbe
push
imul
enter
xchg
cmc
and
mov
in
xor
push
cmp
jl
inc
mov
sbb
xchg
pop
fidivrl
imul
pop
jae
pop
in
dec
out
jno
push
outsl
pop
pop
adc
add
cmp
movsb
pop
out
outsb
mov
lret
std
cmpsl
scas
or
add
sti
pop
es
sub
sbb
pop
sub
loop
mov
dec
jo
bound
pop
inc
jg
hlt
cmpsb
push
test
adc
stos
notl
push
xchg
or
movsl
jl
leave
jns
sbb
ss
dec
mov
cmc
cmp
inc
fbld
out
mov
sbb
lea
mov
jmp
and
pop
xor
out
das
pop
cmp
adc
or
xchg
lds
lea
cmpsb
push
iret
sub
and
sub
movsb
rcll
int
jmp
mov
sub
mov
jp
aad
outsl
cltd
notb
sub
mov
bound
cltd
jg
out
mov
ss
pop
mov
or
pop
outsl
jb
aad
pop
shrb
adc
enter
sbb
add
pop
iretw
xchg
dec
leave
xchg
punpckldq
fs
xchg
test
cld
and
jecxz
mov
bound
mov
and
cmpsb
fidivl
push
cmp
xchg
pop
mov
xor
mov
sbb
js
ret
rcrb
out
cli
push
lcall
loopne
sti
push
out
adc
mov
lret
adc
pop
add
mov
sbb
mov
pop
and
rolb
stc
or
xchg
add
cmp
pop
movaps
fs
pop
mov
out
je
adc
mov
pop
cmc
into
and
mov
ljmp
sbb
push
pop
out
pop
or
mov
test
inc
push
sub
rcl
stos
and
jecxz
dec
mov
adc
lods
je
mov
cmp
sbb
mov
icebp
mov
add
add
mov
fstps
xlat
and
stos
pop
push
enter
xchg
or
jmp
xor
add
and
push
xor
ja
mov
mov
sub
fldl
lret
fcoms
repz
adc
cli
pop
xchg
mov
jmp
mov
in
dec
jecxz
shlb
cld
int3
adc
cmpsl
add
lods
popa
xor
sub
dec
sar
loop
pop
mov
mov
mov
fimuls
pop
repnz
mov
sarb
mov
push
out
sbb
insl
sub
jl
nopl
dec
roll
stos
xchg
sbb
sbb
into
fcmovnu
shll
arpl
and
jns
nop
jecxz
pusha
pop
jns
and
mov
jp
xchg
add
adc
mov
push
push
jae
mov
and
in
repz
push
fisttpll
push
mov
sbb
clc
cs
add
sbbl
cwtl
es
and
lret
xchg
mov
cld
fdivrl
pushl
mov
enter
cmp
test
pop
iret
xchg
movsb
jae
ds
mov
sub
popa
gs
sbb
lret
jo
scas
inc
pop
enter
mov
sub
mov
mov
inc
ret
xchg
enter
jns
add
push
leave
inc
push
mov
arpl
jne
adc
pop
lret
pop
les
jg
or
mov
je
adc
jp
rorl
sub
ja
inc
and
xchg
aaa
jg
sub
lock
repz
lret
inc
adc
sbb
push
movsl
jl
inc
sub
sbb
jecxz
push
sub
ja
pop
pop
mov
fdivl
int
es
insl
fldcw
push
arpl
stos
movb
add
mov
pop
inc
sarl
dec
sbb
imulb
xlat
ds
mov
mov
out
xchg
sub
mov
sti
inc
pop
pop
insl
imul
rorb
push
sub
insl
pushf
cmpsl
push
cmp
outsb
loopne
outsb
movsl
lahf
inc
rcrl
mov
cs
add
or
in
sub
pushf
call
dec
dec
sbb
fisubs
xor
sub
xlat
inc
in
jp
insb
es
stos
xchg
or
cmc
sub
mov
adcl
xchg
mov
xor
xchg
sbb
push
push
sbb
xor
enter
into
enter
mov
dec
mov
repz
or
js
dec
icebp
mov
test
out
push
dec
testb
sahf
stos
imul
mov
mov
sbb
shl
ss
xchg
mov
sub
or
out
sbb
mov
pop
or
cmp
ja
sbb
and
push
mov
icebp
hlt
inc
inc
je
sbb
notl
push
sub
jns
cld
dec
jbe
repnz
sarb
mov
push
clc
lea
pop
dec
lret
mov
negb
ret
stos
sub
dec
sbb
xor
iret
in
out
pop
sbb
dec
jge
and
sub
fwait
aad
clc
xorl
jnp
mov
or
repnz
jns
ja
lcall
leave
sbb
sub
mov
arpl
dec
sbb
jns
cld
mov
lea
adc
jne
std
test
xchg
mov
or
pop
cld
call
mov
pop
lea
sbb
push
addr16
pop
cmp
int3
pop
aad
jbe
jmp
bound
mov
dec
jmp
icebp
and
or
add
mov
pop
in
sub
sub
lods
mov
pushf
in
inc
mov
fidivs
mov
lret
lock
neg
icebp
jmp
cltd
pop
xchg
mov
sub
loop
sbb
pop
aad
pop
dec
stos
inc
ret
pop
jmp
cltd
out
fs
fsubl
cmp
leave
jo
inc
jno
add
mov
pop
cltd
sar
mov
xor
in
push
push
push
lret
pop
mov
sub
arpl
call
clc
enter
mov
ja
aam
jl
cmpsb
ret
and
push
sub
jl
or
push
pushf
in
out
enter
cmp
test
pop
sbbl
mov
or
and
jne
repnz
xor
outsb
cld
xchg
cmpsl
pop
xchg
enter
ret
notb
dec
sub
mov
addr16
into
sti
jge
adc
adc
pop
in
add
hlt
sub
daa
mov
cltd
in
push
lods
pop
aad
int3
push
or
insl
sbb
pop
cmp
lods
lret
dec
pop
inc
adc
inc
jge
ja
cmp
hlt
shlb
outsl
enter
mov
out
loopne
xor
mov
cmp
mov
xchg
daa
mov
lds
mov
repz
pop
mov
pop
and
cld
push
js
mov
pop
xlat
jb,pn
mov
call
iret
mov
add
jge
enter
sbb
inc
ja
push
mov
gs
pop
mov
popa
negl
pop
xor
jne
sbb
jmp
adcl
mov
and
clc
fwait
jmp
imul
cltd
sti
cmp
push
pop
sbb
dec
push
call
xchg
cld
dec
cld
sbb
int3
sbb
int
jae
sbb
xchg
cmp
icebp
sub
dec
mov
ficompl
push
rorl
dec
push
fisttpl
test
std
inc
stos
pushl
push
cmpsb
jns
cmp
sub
dec
push
and
push
enter
push
pop
and
jae
push
negl
push
push
fsubrs
hlt
outsb
shll
adc
outsb
push
daa
cmp
call
push
add
icebp
xor
sub
sub
sti
add
sbb
fsubl
gs
rcrl
pop
jns
enter
jge
inc
sbb
mov
xor
test
mov
and
rcrb
mov
dec
mov
push
adc
pop
popa
jae
aaa
pop
adc
inc
mov
lcall
add
pop
or
or
xor
fmulp
pop
pop
popl
out
stc
push
cwtl
fdivrl
fcmovnbe
inc
mov
gs
mov
out
pop
xchg
clc
enter
mov
ljmp
mov
sub
adc
cmp
mov
data16
enter
dec
popf
xorl
es
out
or
imul
in
leave
pushf
or
nop
inc
jno
and
das
test
or
adc
stc
inc
xchg
repz
les
push
test
mov
shl
or
and
stos
jmp
aad
mov
cmc
mov
adcl
inc
adc
in
jae
insb
sbb
push
xor
popf
and
fidivl
lret
lock
add
aaa
mov
jnp
sub
mov
or
pop
pushf
imul
arpl
pop
jmp
sbb
add
enter
sub
pop
cmpb
loop
arpl
mov
lcall
ja
insb
pop
pop
mov
mov
aaa
adcb
stos
add
mov
lds
movsl
sahf
loop
push
push
push
aaa
lret
shl
sbb
xchg
icebp
enter
dec
testb
jmp
lds
add
je
mov
int
cwtl
push
icebp
jae
lock
in
pop
outsb
int3
out
and
lods
push
movsb
fstpl
mov
push
xchg
std
jno
lret
leave
in
mov
sbb
cmpsb
fsub
enter
cmp
shrb
pop
call
push
mov
and
enter
add
sbb
ret
mov
repnz
and
adc
aam
sbb
imul
pop
test
sbb
iret
stos
push
or
jl
scas
andl
xlat
xchg
push
mov
sub
out
sub
push
das
testl
sbb
dec
sbb
rcll
dec
xchg
les
mov
fcmovnu
in
sub
xchg
mov
cmp
ret
mov
std
mov
inc
pop
sbb
pop
nop
mov
sub
and
mov
inc
mov
sub
rclw
and
mov
inc
shrb
shrb
pop
xchg
jae
push
dec
sbb
pop
lahf
xorb
es
mov
mov
jl
icebp
push
sub
pushf
jae
xorl
fstps
iret
mov
dec
out
cli
add
or
add
test
iret
sub
cmp
mov
pop
add
cmp
jle
xor
imul
into
sbb
cmp
enter
loop
clc
addr16
adc
rsm
imull
sbb
inc
fwait
and
daa
jbe
cmp
mov
pop
aas
in
enter
xlat
ret
inc
pop
sbb
iret
test
mov
sub
jmp
sti
les
push
sbb
inc
xor
add
cmp
cmp
pop
pop
in
inc
push
aam
enter
ljmp
jg
pop
xlat
push
movsl
ret
leave
jbe
cmp
data16
test
ret
jge
movsl
xchg
pop
adc
ja
adc
enter
ret
sbb
push
sub
lcall
or
enter
or
stc
aad
jnp
push
mov
sub
lea
mov
xor
pushf
mov
shll
push
xor
lret
push
add
jb
les
leave
push
dec
cld
push
aam
mov
inc
stc
imul
mov
lcall
int
stos
in
xor
mov
inc
lret
int3
mov
or
and
push
mov
lea
pop
int3
inc
lcall
push
sbb
add
orl
fmuls
sub
or
pop
mov
js
lret
or
push
jns
mul
xchg
sahf
aad
and
mov
sbb
pusha
das
iret
sub
inc
lahf
iret
cmp
jne
imul
popa
fsubrl
pushf
mul
mov
incl
push
push
inc
imul
push
dec
mov
in
mov
inc
push
xor
lret
sub
scas
jns
shlb
cmp
daa
mov
push
mov
mov
xchg
mov
enter
adc
in
test
pop
pop
sahf
and
or
daa
sub
fldcw
dec
test
cwtl
jmp
cmp
leave
dec
movb
mov
inc
adc
test
and
je
cwtl
rcrl
xchg
roll
mov
cmp
sub
insl
push
add
mov
mov
sub
loop
xor
imul
repnz
pop
imul
add
int3
enter
fistps
inc
and
movsb
nop
fmul
xchg
xchg
pop
xchg
push
mov
mov
popf
xchg
fidivs
cli
xlat
push
loopne
dec
inc
insb
lcall
notb
cltd
lods
or
enter
imul
fs
loop
ffreep
test
sbb
cld
sahf
sub
jae
orb
and
xchg
cltd
loope
xchg
sub
mov
mov
ret
aam
ljmp
les
arpl
cli
and
sbbl
or
faddl
rclb
add
mov
cmpsl
call
enter
sbbb
bound
cmp
outsl
aad
ds
lock
mov
je
icebp
sub
mov
sub
push
xchg
test
aaa
cld
and
mov
or
jge
repnz
cli
sub
jae
mov
aas
sub
xlat
push
and
pop
adc
movsb
rorb
push
insb
aas
pop
les
mov
sbb
jne
xor
jno
inc
mov
fidivl
dec
fdivs
rcrl
sbb
pop
cli
jge
fdivl
pop
aad
jae
mov
push
nop
ds
sbb
sub
sti
push
test
xor
inc
enter
sub
pop
add
insl
xor
div
adc
pop
or
lds
insb
int3
out
scas
sbb
lahf
sub
push
mov
and
xchg
out
scas
fbstp
jl
or
sub
jp
inc
mov
add
mov
mov
sub
push
in
sbb
sub
popf
bound
xchg
in
mov
dec
mov
mov
mov
addr16
cmpsl
pop
mov
adcl
dec
inc
in
push
inc
xchg
sub
mov
gs
dec
jnp
pushf
push
jp
inc
imul
dec
popa
push
pushf
aaa
jo
pop
jmp
sbb
imul
scas
sbb
jnp
cld
mov
mov
repz
jle
pop
loop
mov
sbb
stc
add
pop
mov
or
mov
repz
shll
ljmp
pusha
stc
add
cmp
xchg
cmp
push
push
dec
lea
lret
out
cltd
in
add
push
push
adc
ds
sbb
mov
cmp
in
out
insl
rorl
dec
or
cmp
pop
and
lock
dec
push
in
sub
in
dec
add
sti
mov
sbb
mov
mov
xchg
loop
lock
mov
push
adc
aaa
adc
sbb
cmp
sub
xor
push
fldenv
push
pop
clc
lahf
jp
and
sbb
inc
adc
mov
pop
add
lds
mov
mov
xor
clc
pop
cmp
xchg
mov
add
xchg
in
mov
pop
pop
pop
xchg
push
repnz
mov
cli
jmp
adc
mov
fsts
push
jg
add
scas
sbb
lods
cmp
pop
push
mov
mov
cmp
popa
movsl
movsl
mov
jle
xorl
jnp
ret
xchg
stos
dec
sub
sub
xlat
xlat
dec
fldl
sub
jbe
xchg
rolb
pop
xlat
add
adc
sub
out
jp
jmp
sub
mov
sub
xchg
push
lret
outsl
popf
shl
fsubrs
iret
loop
adc
pop
xchg
out
lcall
lcall
push
jle
pop
fisttpl
cli
xchg
out
scas
sub
leave
mov
out
sub
add
dec
icebp
jnp
pop
fcompl
or
stos
sub
fs
or
gs
push
sbb
add
mov
mov
mov
insb
rol
loope
mov
jp
aas
int3
pop
fnstenv
pop
addr16
xchg
jnp
inc
loop
out
popf
imul
pop
adc
clc
inc
fisttpl
xchg
or
rcll
negb
sbb
jg
jle
or
or
add
push
xor
out
nop
xchg
imull
sbb
fsubrl
jp
js
adc
pusha
movsb
cmp
xchg
push
adc
push
sbbl
test
ret
sbb
aam
call
adc
movsb
or
lcall
stos
sub
pop
data16
sbb
push
cmp
flds
sub
adc
ret
and
insb
sbb
sub
jns
xchg
in
aad
mov
sbb
cmpsl
pop
inc
dec
push
or
jmp
mov
scas
pop
pop
pushf
mov
out
pushf
mov
sub
lahf
mov
and
stos
mov
mov
mov
in
lock
int3
push
push
pop
xchg
outsl
adc
mov
mov
mov
sub
adc
sti
sbb
or
lret
fldenv
shr
mov
imul
fwait
cmpsl
test
in
stc
pusha
pop
mov
fcoms
sub
pop
lcall
mov
gs
shrl
push
and
in
or
sbb
jne
pop
or
sub
cmpsl
out
int3
inc
cmp
dec
in
cmp
sub
xchg
out
repz
sbb
push
mov
hlt
add
inc
jg
adc
lret
fstl
sbb
hlt
imul
pop
mov
mov
popa
std
out
sarb
sbb
sub
mov
pushf
push
mov
andb
je
sbb
idivl
lock
pop
push
mov
sub
andl
add
cs
lds
cmp
pop
sarb
adc
adc
sub
es
adc
cwtl
mov
pusha
sub
sbb
insb
or
shr
aad
leave
pop
jb
sbb
push
and
mov
dec
sub
ss
pop
sub
jae
rclb
lods
inc
adc
lcall
scas
mov
inc
repz
leave
popa
lret
xchg
pop
sub
xor
clc
sbb
mov
xchg
lods
pop
xchg
test
into
cwtl
cs
jns
cwtl
push
dec
fs
mov
imul
jl
cltd
enter
xchg
inc
and
loope
lcall
cld
mov
test
aam
push
xchg
enter
xorb
and
stos
and
clc
out
jle
cmp
sbb
mov
fwait
cmc
jge
cltd
xchg
scas
out
in
out
shl
pop
or
and
or
inc
enter
xchg
and
hlt
or
mov
or
mov
push
push
or
pop
and
fcmovnu
sub
jmp
lds
es
cmp
jl
enter
pop
push
push
or
or
into
nop
sub
dec
pop
ljmp
andb
int3
scas
clc
cmp
and
xor
adc
lcall
in
decl
jmp
aaa
scas
stos
stc
pop
cvtpi2ps
testb
dec
jmp
inc
cs
divl
sbb
mov
sub
mov
int3
inc
sbb
jecxz
inc
loopne
out
hlt
or
sbb
in
mov
pop
sbb
and
inc
test
js
nop
pop
leave
rclb
and
test
push
pop
sar
js
and
sbb
nop
shll
daa
addb
pop
pop
sahf
mov
fldcw
icebp
rcl
pop
dec
outsb
arpl
rorb
enter
mov
pop
dec
pop
mov
xchg
sub
ljmp
sbb
sbb
jns
mov
xchg
sbb
repz
shl
xor
enter
out
pop
or
mov
push
popa
sub
jle
icebp
sbb
test
movsb
ja
xor
ljmp
test
pop
and
adc
push
or
add
lcall
cmpsl
sarl
push
mov
fcoms
cmpsl
and
stc
push
syscall
pop
enter
fidivl
pop
add
pop
ret
sub
mov
mov
mov
loopne
lock
xchg
xchg
testl
or
xlat
sub
shl
out
cltd
pop
lods
or
inc
pop
fbld
cltd
xchg
lds
aad
cmp
jns
jecxz
sub
rorl
jp
rcrb
jb
xchg
stc
roll
mov
xlat
add
sub
adc
sbb
imul
enter
hlt
fcompl
mov
outsb
std
mov
sahf
pop
push
jle
cmpsl
or
mov
xor
pop
push
adc
iret
pop
addr16
arpl
add
enter
movsl
dec
das
mov
test
cltd
sub
sarb
enter
js
dec
clc
pop
jns
jno
fisttpll
pusha
and
fsts
scas
imul
cmc
aas
push
ja
iret
fwait
lret
push
je
loopne
lahf
mov
pop
xchg
stc
outsb
push
mov
cmpsb
mov
je
lods
jge
and
inc
mov
or
pop
out
xor
push
sbb
cmpsb
cmpsb
push
or
xchg
popa
or
data16
enter
je
cltd
xchg
imul
push
push
ss
fs
mov
sbb
xchg
inc
shll
cltd
sub
inc
add
dec
xchg
pop
push
xor
mov
mov
xor
mov
cmp
mov
repnz
jb
mov
fidivs
loop
ljmp
cmp
sbb
lds
int
ja
es
fptan
mov
mov
push
pop
call
or
and
jg
pop
jne
mov
dec
fldcw
and
scas
cmc
mov
push
gs
addr16
dec
add
aas
add
lea
scas
repnz
stc
mov
cmp
test
pop
and
or
sub
fiaddl
jge
scas
sbb
arpl
cli
mov
movsl
iret
scas
ja
lret
pusha
mov
or
sub
inc
xorl
sub
das
inc
sarl
dec
inc
adc
add
pop
xor
dec
mov
push
loop
mov
mov
xchg
mov
xchg
ds
and
imul
or
sub
push
sub
sbb
pop
jnp
pop
sub
enter
push
inc
hlt
arpl
pop
test
mov
jae
and
aad
mov
lret
ja
inc
test
call
sub
sub
mov
xor
push
std
cltd
sbb
xlat
jecxz
pop
inc
paddsw
inc
and
ret
ss
mov
jl
into
cld
mov
repnz
push
inc
arpl
mov
cmpb
jnp
sub
rcll
inc
inc
out
or
stos
std
and
mulb
imul
push
push
add
sbb
adc
or
mov
xor
sbb
in
push
sub
mov
mov
pushf
xor
inc
icebp
mov
scas
mov
loop
add
dec
int
xchg
pop
dec
cmp
sub
fsubrl
adc
xchg
pop
aad
mov
arpl
sahf
mov
mov
std
out
in
scas
aam
cmp
xor
and
add
mov
or
dec
insl
inc
sbb
imul
cmp
or
lret
jo
cltd
sub
ja
mov
rcl
push
daa
dec
fsubp
xchg
or
mov
cmpsb
lret
xor
movsb
test
orl
lds
cmp
sub
ret
cltd
xchg
and
stc
and
lahf
dec
nop
sarl
adc
jmp
add
pop
rcrb
lcall
jmp
stc
mov
sub
lret
popa
faddp
je
stos
pop
insl
aad
aam
leave
push
imul
sub
or
loopne
push
into
incl
jmp
mov
jae
and
popf
sbb
and
mov
xor
sub
pop
xor
fisubl
cmpb
pop
xchg
add
mov
jb
sub
pusha
xor
movsl
sbb
push
mov
sub
inc
mov
pop
cmc
orl
adc
jmp
push
dec
arpl
outsl
fdivrl
push
mov
insl
mov
pop
push
mov
sbb
ficomps
lcall
in
je
sub
xor
sbb
push
das
test
daa
fistl
pop
push
or
sbbb
jno
enter
inc
in
nop
push
adc
xor
and
dec
int3
cwtl
jp
out
fldenv
fstps
sub
test
shufps
or
jmp
mov
and
inc
xor
data16
push
mov
stc
roll
pushf
cmp
inc
dec
fimull
inc
shl
adc
xorl
cli
push
movsl
lods
shl
add
sbb
pusha
sub
cmp
lcall
inc
add
hlt
cmp
pop
mov
test
cmp
test
sub
pop
lcall
pop
and
sub
pop
scas
jno
js
push
sbb
pop
dec
int3
dec
add
xlat
push
xchg
add
cmpsb
mov
stos
sub
adc
fnstcw
dec
sub
notb
xchg
mov
sti
push
jp
gs
push
out
sub
dec
pusha
cmp
fcmovnb
enter
popf
insl
dec
lcall
mov
addr16
stc
iret
jl
bound
and
popf
adc
int
mov
xor
shll
lods
stos
hlt
push
insl
jecxz
sbb
push
sub
jp
and
rcl
sub
out
lea
scas
mov
push
add
adc
add
push
lock
jb
imul
mov
or
mov
mull
pop
inc
push
loope
xor
out
push
push
mov
pop
roll
add
mov
into
push
cmp
xchg
enter
and
shll
cltd
leave
mov
je
stos
mov
rcrb
dec
aad
adc
xor
popa
dec
loopne
ret
pop
lods
lods
pop
subb
lock
daa
in
pop
adc
lods
mov
leave
sub
sbb
inc
aaa
mov
sub
fidivrl
test
pop
and
stos
jb
scas
sub
push
fldt
add
mov
sbb
repnz
pop
insb
or
call
enter
push
gs
mov
sub
push
mov
loope
xchg
scas
mov
fwait
jno
jnp
iret
mov
stos
lcall
repz
leave
sub
jbe
mov
push
roll
mov
in
rorl
out
push
sbb
roll
es
test
cmp
rorl
in
cmp
mov
pop
pop
add
cmpsb
ljmp
sbb
jg
outsb
pop
inc
xor
es
scas
cmp
mov
sbb
jae
addr16
std
nop
xor
push
mov
sbb
dec
inc
ja
pop
sbb
imul
xor
pop
incl
push
sahf
jmp
fistps
push
sbb
xor
aas
sbb
mov
add
dec
andl
pop
sbbl
daa
rcll
pop
cltd
dec
mov
mov
mov
sub
adc
jne
mov
or
btr
shl
sbb
push
pop
daa
movl
inc
aas
enter
add
loope
pop
addr16
ret
jge
xchg
pop
mov
ret
aad
inc
loop
stos
mov
incb
dec
jae
dec
push
mov
ss
in
xchg
enter
pushf
sub
in
aam
xlat
fabs
dec
in
dec
jne
sub
lods
or
xor
lcall
lahf
sbb
outsl
pop
cmp
add
mov
pop
or
inc
ds
pop
push
mov
das
mov
out
cmpsb
adc
ljmp
inc
jo
mov
test
addr16
or
pop
sbb
adc
arpl
dec
mov
andl
push
cmpsb
test
push
sub
push
xchg
add
filds
fsubrp
pop
stc
nop
faddp
mov
repnz
or
addr16
cmc
mov
pop
out
dec
pop
outsl
xlat
std
mov
or
es
pop
lea
push
aaa
outsb
push
int
mov
and
dec
add
and
sbb
cmp
pop
xor
bound
adc
dec
or
pop
push
repnz
fimuls
shlb
sub
jle
mov
js
and
outsl
inc
popa
dec
xchg
call
push
sub
das
and
cmp
arpl
movsl
sbb
xor
fdivrl
cmc
xchg
loop
push
jecxz
xchg
dec
js
pop
mov
pop
pinsrw
enter
and
xorb
pop
popf
sahf
add
xor
cltd
out
inc
jbe
lcall
std
adc
scas
enter
pop
mov
aas
leave
aad
arpl
out
shlb
lcall
sub
cli
cmp
scas
fwait
and
pop
pop
pop
int3
jge
jmp
sub
sub
jge
sbb
pop
push
rcrl
pushf
enter
sub
pop
adc
cwtl
mov
and
cmp
lret
cmc
imul
sbb
and
jae
jbe
mov
add
loop
mov
push
xchg
xor
out
jmp
sub
nop
cld
in
jle
xchg
pop
arpl
jns
lods
cmp
cmp
inc
js
pop
xor
out
adc
scas
cmp
cmpsb
mov
iret
aam
push
sub
mov
add
jno
mov
adc
sbbb
or
pushf
xor
leave
movntps
divl
movsb
xchg
cmp
cli
mov
mov
and
pop
dec
jg
and
aaa
push
stos
push
bound
dec
pushf
mov
rcll
cmp
sub
pop
dec
push
and
sbb
orl
in
cmp
mov
stos
fs
cs
ljmp
adc
daa
jmp
movsb
fisubrl
pop
test
xor
cld
stc
les
notl
cmp
add
mull
shll
cmp
inc
add
push
dec
cld
out
jae
fcomps
sub
ucomiss
out
xchg
pop
or
push
xchg
jecxz
decl
adc
push
enter
sub
sbb
nop
nop
lds
out
adc
test
sbb
lock
insl
dec
lods
and
dec
inc
or
ret
pop
sub
adc
add
scas
imul
xchg
das
insb
repz
cltd
cmp
pop
out
dec
enter
sub
dec
xchg
xchg
sbb
enter
sub
lea
cmc
add
in
add
push
mov
sub
adc
lahf
int
pop
sbb
pop
shll
cli
iret
dec
cli
xchg
aam
fistpl
mov
aad
dec
pop
mov
outsb
and
aam
fcom
or
pop
rorl
sbb
cwtl
lods
nop
enter
lods
mov
cltd
pop
sbb
sub
pusha
sub
js
pop
or
mov
aam
aad
ljmp
or
mov
out
jmp
cltd
sub
xor
ss
loop
out
jecxz
or
in
jp
imul
fidivrl
testb
daa
out
imul
cmp
and
jle
push
call
call
xor
rol
ror
lods
xchg
xor
mov
mov
in
mov
sbb
daa
es
jg
scas
subb
ljmp
and
lret
aas
adc
xchg
jo
sub
bound
dec
xchg
and
test
lcall
lods
int3
mull
or
lods
push
iret
cmp
cmp
push
add
repz
pop
mov
sub
int
sbb
xchg
sbb
sbb
mov
add
pop
lock
sbb
push
jae,pt
mov
aaa
and
int3
push
lahf
orb
jmp
inc
in
fisttpl
pop
stos
negb
ret
mov
test
filds
repz
adc
sbb
sub
fcmovb
sbb
sbb
lods
stos
outsb
mov
fisubrs
pop
lret
insb
inc
or
xchg
sub
sbb
addr16
daa
pop
mov
mov
push
imul
imul
lahf
push
dec
inc
test
pop
pop
fcoms
mov
pop
sub
add
pop
pop
mov
mov
add
insb
orb
and
dec
lock
aaa
repz
punpcklwd
inc
fistpl
testl
push
leave
and
in
scas
sbb
sub
mov
int3
jmp
inc
inc
daa
into
out
popa
pop
imul
xchg
sbb
rcrl
cmp
sbb
stc
cmpsl
loopne
cmc
adc
ret
pop
rcll
out
adc
cmp
or
pop
xor
jg
or
not
popf
xlat
cltd
dec
pop
cltd
scas
test
push
cmc
push
aam
sbb
mov
movsl
or
mov
lock
sbb
test
stos
inc
push
jl
dec
push
add
out
push
xchg
scas
mov
sbb
insb
sub
test
mov
or
lret
sbb
push
sub
add
fnsetpm(287
sti
jge
iret
push
push
adc
in
jmp
pop
fwait
rorb
shrl
jecxz
test
ret
mov
sub
mov
inc
leave
daa
movsl
out
pusha
imul
or
sbb
lret
shll
ret
inc
movsl
sub
pop
mov
push
clc
dec
call
into
xor
adc
popa
mov
ret
mov
sbb
lock
enter
inc
sub
movsb
pop
cs
mov
push
push
enter
push
sub
jbe
mov
push
fwait
aam
repnz
dec
push
and
add
jno
jne
push
ret
pop
out
lock
mov
insl
out
insb
push
pop
addr16
sbb
or
neg
dec
sbb
cmpsl
out
mov
in
punpcklbw
hlt
push
jo
pop
fmul
fwait
push
push
cli
jb
inc
sbb
imul
loop
sub
ljmp
sbb
ds
push
jbe
mov
ss
push
jmp
testl
pop
das
jge
sub
mov
ror
divl
dec
pusha
adc
ficomps
into
icebp
mov
sub
or
cld
lods
sbb
add
xchg
jmp
mov
js
ret
push
mov
jmp
xchg
aad
test
mov
jo
add
xlat
xlat
loop
jl
mov
sbb
scas
mov
outsl
clc
mov
in
xor
leave
cli
mov
nop
pop
push
cli
lea
in
popw
inc
bound
fldl
xchg
addr16
hlt
fsub
cmp
stos
xchg
mov
enter
repnz
in
es
sub
fwait
imul
sbb
hlt
xchg
pop
aaa
sbb
inc
enter
jp
cmc
jb
push
sti
mov
mov
insb
dec
movsl
imulb
mov
lock
push
add
test
sbb
mov
ficoms
pop
jecxz
sub
add
lcall
add
xlat
cmp
pop
aas
js
mov
sbb
sub
aad
and
or
cmp
int
rol
in
sub
nop
or
mov
mov
sub
sub
faddl
inc
cmp
adc
inc
jp
pop
jae
lock
xchg
add
push
and
into
pusha
int3
insb
es
lret
mov
pop
jo
jle
xor
mov
das
xchg
lret
enter
mov
pop
ljmp
pusha
ss
mov
jmp
lret
jmp
xor
sub
pushf
pop
push
pushf
and
xchg
cmc
pop
sub
cmp
mov
and
movsb
sbb
push
int3
sarl
out
aas
stos
push
jae
sub
sub
push
and
testl
jge
push
and
mov
mov
nop
insl
cld
ficomps
idiv
enter
pop
push
adc
cmc
adc
enter
dec
xor
scas
pop
shlb
or
dec
decb
mov
aaa
dec
and
stos
mov
nop
pop
pop
bound
push
repz
mov
add
mov
mov
pop
enter
arpl
imul
pop
ja
sub
adc
xchg
fsubrs
sbb
sahf
cmpb
shlb
pop
mov
mov
in
shlb
mov
imul
nop
sbb
xchg
cmpsl
inc
pop
fistps
scas
fstps
xor
ret
andb
stos
inc
push
call
sbb
mov
movl
std
and
cltd
jno
adc
sub
mov
inc
fcomps
test
jg
inc
test
shll
pop
cmc
sbb
insl
pop
xchg
cwtl
sar
stos
pop
mov
nopl
rcrb
call
incl
pop
ljmp
jecxz
xor
mov
outsb
sbb
push
ds
xchg
mov
sahf
popa
fs
neg
repnz
xor
mov
sbb
int3
push
push
into
out
sbb
lea
int
ljmp
xchg
push
icebp
fcoms
out
cs
imul
aas
xchg
enter
pop
test
mov
jp
mov
fdivrl
cmpsb
pop
aam
add
enter
sbb
cltd
jo
mov
mov
js
mov
rcrl
enter
rcll
ficoml
pushfw
ss
repnz
inc
test
fsubl
push
and
cmpsb
xchg
aas
xorl
int
inc
scas
inc
xor
xchg
push
lods
inc
or
pop
insl
and
mov
fxch
mov
negb
aad
cmp
mov
shll
xchg
ss
inc
rcrb
mov
mov
sbb
imul
pop
xlat
repz
dec
push
pop
repnz
mov
lock
or
stos
pop
xorl
enter
out
ja
sub
xchg
fcomp
mov
mov
ret
xchg
int
add
out
pop
je
xor
pushf
mov
lcall
popf
cmp
popf
fsubl
lret
mov
pusha
xchg
inc
fistpll
scas
aas
jns
sti
sbb
in
sti
pop
stos
jle
xchg
test
inc
mov
adc
test
xchg
ds
push
or
out
pop
insl
aaa
rcr
push
push
fsubrs
mov
insl
fistl
popf
mov
pop
jae
and
subl
or
add
cld
aas
repnz
inc
in
out
fwait
outsb
and
lods
inc
cmp
inc
xlat
enter
leave
in
push
shll
es
xchg
or
lea
cmpsl
stos
enter
and
mov
pop
cmp
add
cmpsl
push
aaa
sub
jg
in
test
mov
sbb
mov
mov
leave
js
andb
loopne
lods
or
sub
sbb
ret
add
fadds
mov
add
sbb
xchg
xchg
or
sbb
cmp
pop
xchg
push
mov
and
pop
fdivrl
dec
rcr
xor
ss
cmpsb
mov
xlat
lds
aad
clc
movl
adc
icebp
test
outsl
sbb
adc
enter
stos
push
cmp
in
jae
call
xchg
lret
push
inc
out
or
stc
lret
sbb
dec
sti
mov
or
mov
cwtl
dec
mov
sbb
cmp
loope
pop
ljmp
outsb
popf
iret
les
test
inc
xor
int
push
adc
pop
pushf
pop
or
das
cmc
mov
adc
mov
daa
cld
or
sbb
and
inc
dec
in
jg
pop
hlt
pop
incb
icebp
sub
sub
mov
sbb
sub
stc
pop
fldl
pop
cmp
push
cltd
xor
inc
sub
clc
mov
push
rcrb
jecxz
divb
jb
outsb
cmp
arpl
sbb
jb
xor
jae
call
push
dec
sahf
or
out
push
or
push
enter
sbb
addb
push
out
ret
inc
add
repnz
test
daa
pop
mov
and
cmpsb
lcall
adcb
sti
adc
adc
dec
adc
lea
lock
test
out
dec
mov
sti
inc
pop
fs
dec
imul
sbb
push
sbb
mov
cmp
lock
loopne
sub
clc
xor
cmp
pop
lods
xor
mov
push
pop
mov
mov
push
dec
test
or
movsl
shll
sbb
cmc
out
xor
daa
pop
and
mov
or
mov
or
push
nop
addr16
outsb
fwait
ret
call
sub
and
nop
xlat
sub
inc
pop
sahf
cmc
jbe
pop
mov
aam
inc
and
mov
sbb
enter
mov
lods
leave
xor
adc
and
cmpsb
enter
hlt
xchg
push
es
pop
mov
ret
xchg
js
movsb
movaps
gs
das
ljmp
fxch
mov
pop
jge
mov
pop
rol
sbb
in
xor
xchg
pop
sub
sub
mov
aaa
push
jbe
fcmovnu
int
jle
pop
add
xor
mov
and
roll
add
movsl
mov
mul
adc
jne
adc
dec
loopne
sbb
lea
repz
mov
or
aas
bound
xor
sbb
enter
nop
push
inc
inc
divb
repnz
mov
lock
sbb
aad
pop
xchg
xlat
and
adc
pop
mov
stos
jae
pop
popa
sbb
sahf
into
and
adc
aas
lcall
mov
loope
pop
mov
sbb
aaa
nop
adc
mov
sub
int3
sbb
dec
add
test
jmp
adc
stos
stos
fisubrl
push
ret
jbe
je
sbb
data16
scas
add
outsl
and
pop
daa
sti
adc
bound
sub
test
popf
dec
loop
dec
fmull
or
cmpsb
sahf
fs
cmp
fcoml
inc
imul
sub
inc
inc
and
mov
lea
stc
push
lret
test
and
or
sbb
dec
adc
xchg
ljmp
insl
out
test
mov
sti
pop
enter
inc
push
jl
adc
mov
cmpsb
orb
add
or
clc
pop
popf
cltd
xlat
test
movsb
or
sbb
sbb
inc
jae
loope
enter
movsl
jmp
jae
inc
mov
int3
push
xchg
in
loope
lahf
ret
jle
frstor
testb
std
das
jmp
push
cmp
sub
mov
fmuls
dec
push
imul
fcoml
ljmp
pop
pop
mov
adc
jae
and
out
and
ss
call
and
test
notb
out
and
std
fidivrl
int3
inc
pop
test
push
lcall
pusha
pop
mov
inc
out
sub
push
pop
lds
mov
mov
lahf
sbb
push
popa
decb
jae
jne
std
ljmp
daa
fmul
loope
inc
cmp
sub
xchg
cmp
int
jno
push
sbb
fbld
sub
push
push
insl
adc
pop
cmp
xor
cmpl
adc
dec
pop
cmp
mov
pop
clc
pop
out
ret
mov
fmull
pusha
cmp
xchg
pop
cwtl
lret
adc
dec
cmp
and
adc
xor
pushf
cmp
js
leave
loop
cmp
jo
mov
sub
adc
cltd
sub
and
jecxz
xor
negl
sub
mov
ja
inc
enter
push
stos
jle
mov
outsl
data16
sti
subb
js
sarl
shl
repnz
sbb
pop
leave
frstor
pop
adc
enter
out
les
pop
adc
cmp
jne
ja
adc
xchg
adc
or
push
cmp
adc
mov
mov
sbb
call
ljmp
cwtl
mov
jge
lds
sbb
jl
xchg
or
ficoms
adc
pop
mov
cltd
nop
mov
scas
es
cmp
sub
jne
hlt
pop
fistpl
lcall
inc
popa
and
jp
aam
ljmp
dec
lea
shrl
mov
xchg
iret
sub
xchg
jge
loope
xchg
ja
movsb
pop
jno
popa
lds
jbe
add
clc
jns
push
pop
pop
mov
inc
test
dec
std
aad
ja
mov
adc
add
jge
sti
sub
pop
scas
mov
sub
and
stos
jmp
inc
rolb
cld
adc
jle
daa
sub
sbb
xor
and
inc
or
filds
addr16
pop
lahf
xchg
jp
enter
jb
jno
mov
dec
and
ret
jbe
pop
or
or
lcall
pop
sub
loop
shll
insl
and
sbb
fwait
bound
jae
xchg
lds
sub
pop
inc
scas
push
cmpsb
mov
iret
pop
test
xor
data16
lods
loope
mov
xchg
fmull
add
aas
mov
inc
mov
and
faddl
fdiv
fdivrl
and
pop
adc
and
dec
sub
cmpsb
inc
lret
xchg
sbb
mov
and
pop
movsb
enter
add
outsl
push
pop
xor
scas
mov
sub
pop
aaa
sub
cmpsl
push
jle
mov
outsl
inc
xchg
enter
push
pop
andb
pop
cs
push
bound
xlat
sbb
sub
test
inc
outsb
stos
xchg
sub
mov
mov
pop
push
out
leave
jns
sub
lds
push
cmp
and
push
pop
scas
rolb
xchg
fcmovb
popa
xchg
loope
icebp
sub
mov
enter
inc
pmaddwd
push
aaa
out
mov
int3
rclb
adc
ret
aaa
dec
xchg
xor
lods
xchg
xlat
int3
movb
sti
test
add
outsb
ret
cmp
sbb
or
outsl
imul
lods
pop
stc
enter
dec
pop
test
or
push
mov
jno
mov
and
cmp
add
or
push
sbb
enter
leave
movd
lds
aas
pop
sti
adc
push
push
cmp
and
loope
ret
es
test
or
fwait
sub
inc
das
mov
inc
aas
add
scas
sbb
in
ds
add
jo
or
xchg
push
push
push
nop
fwait
push
push
add
pop
mov
dec
sub
add
das
fwait
notb
in
sub
sarl
adc
or
dec
loop
jno
mov
jb
call
sbb
bound
sub
jbe
ljmp
dec
lcall
pop
mov
ja
mov
push
andb
daa
push
mov
mov
jo
fwait
mov
cltd
inc
pop
add
add
in
pop
mov
pop
sbb
lcall
enter
lods
jecxz
dec
iret
call
xchg
outsl
ret
sub
pusha
orl
sub
out
push
dec
pop
xchg
mov
shll
outsl
sub
movaps
fwait
sbb
shl
les
adc
xchg
mov
fcomp
inc
jge
cltd
jg
jp
fstps
pop
push
push
xor
sub
mov
pop
cwtl
inc
add
push
inc
iret
out
push
inc
mov
fnop
or
add
inc
inc
sbb
cld
es
sbb
leave
faddl
and
cs
pusha
lods
jmp
or
push
adc
jmp
fstps
adc
and
mov
jmp
mov
icebp
mov
xor
and
sbb
inc
pushl
mov
data16
mov
mov
call
pushf
cli
cmc
hlt
pop
cmpb
sub
inc
imul
lea
cmp
stos
jno
or
insl
jo
add
and
push
pop
jge
jmp
loope
adc
in
lods
jo
mov
xor
ss
sbb
cmpsl
sub
adc
or
push
popa
iret
in
in
push
and
sbb
mov
arpl
imull
fxch
aam
mov
lahf
or
add
aas
das
jle
jns
sbb
out
in
fstl
call
out
pop
bound
pop
popa
lea
adc
rcrl
into
mov
movsl
sbb
mov
int
inc
sub
sub
jno
stc
pop
sbb
cld
ret
inc
call
cltd
cli
not
add
xchg
sbb
xor
int
stos
bound
and
mov
enter
cmp
mov
dec
mov
mov
lahf
loopne
out
les
or
int3
pop
cld
sarl
jg
loope
sub
push
ja
imul
mov
inc
scas
pop
pop
sbb
jo
scas
mov
or
ret
lea
sbb
xchg
iret
aaa
cmp
pop
popa
lcall
ss
lods
fs
add
mov
jb
int
test
xor
cltd
testl
filds
enter
jge
sar
fbld
movsl
insb
icebp
sbb
ja
dec
xchg
and
fs
movsb
xor
jb
and
cmc
inc
stc
cld
mov
addl
push
sub
inc
aam
push
mov
pop
pop
xor
adc
les
inc
das
jns
xor
xor
push
leave
int
loope
lods
mov
cmp
cli
or
jl
in
sti
push
iret
pop
mov
popa
or
dec
mov
mov
idiv
xchg
enter
mov
push
mov
push
dec
outsb
fwait
lret
dec
sub
das
ljmp
sbb
jmp
push
cmpsb
push
int
adc
lcall
sub
jo
inc
call
hlt
add
add
fildll
jp
sti
jecxz
pop
cmp
pop
jmp
imul
sbb
add
int3
movsl
mov
scas
push
loop
fistl
fmul
mov
or
sub
loop
xor
mov
jecxz
pushf
dec
adc
addl
fwait
mov
jno
xchg
out
repz
pop
inc
pop
std
hlt
adc
loope
mov
mov
adc
cmp
or
pop
adc
dec
pop
rcrl
adc
cmp
and
in
stc
jecxz
enter
outsl
jle
sbb
mov
repz
hlt
push
enter
aas
add
xor
scas
outsl
in
arpl
pop
pushf
fcomps
rcr
push
dec
es
xor
aam
hlt
mov
sbb
xor
test
pop
stc
mov
repnz
sub
incb
ja
insb
pop
ficomps
lock
pusha
adc
mov
add
inc
insb
xchg
aad
pop
cwtl
pusha
or
adcb
sub
mov
pop
sub
fisubrs
in
dec
xchg
sbb
mov
or
movsb
std
jg
aaa
or
out
pushf
mov
sbbb
fldt
fmul
sbb
jp
sahf
sbb
aam
mov
mov
xchg
out
in
popf
mov
mov
in
insb
pop
pop
repnz
shll
ja
cld
sbb
stos
add
cmp
jbe
pop
xor
imul
sbb
loope
in
outsl
or
adc
jb
sbb
xor
inc
faddl
lcall
xchg
iret
and
test
popf
xor
andl
pop
mov
pop
shrl
enter
hlt
sub
cmp
pop
sbb
cmp
mov
shl
jo
sbb
pop
mov
ficomps
mov
mov
xchg
push
dec
ret
fwait
sbb
sub
jae
sbb
mov
in
dec
jne
pop
ja
test
add
xor
shll
sub
add
and
popf
ss
in
sbb
loop
jmp
sub
cs
test
xchg
aaa
pop
fdivrl
scas
enter
push
mov
mov
sbb
cld
pop
pushf
out
xrelease
sbb
out
mov
lds
iret
pop
ja
jns
jg
enter
cmp
add
mov
fwait
pop
pop
add
mov
out
sub
add
mov
add
call
jne
enter
leave
inc
xchg
pop
lock
mov
push
test
add
int
pop
xadd
sub
out
call
fldt
pop
test
insl
mov
xchg
sub
sbb
xor
xchg
cli
sbb
js
lcall
sub
mov
xchg
les
ret
sub
pop
test
xchg
xchg
enter
jns
pop
repz
pop
imull
dec
or
adc
fistpl
sbb
or
enter
gs
cmp
daa
pop
xchg
mov
mov
push
into
enterw
jne
fildl
dec
xor
mov
int
in
ds
loopne
sbb
pop
cmp
icebp
add
hlt
fs
stc
inc
xor
clc
lods
in
xchg
shl
sbb
sbb
enter
aam
aad
pop
jne
mov
int3
cmpsb
or
pop
mov
xchg
popf
sbb
dec
movsl
pop
mov
or
fldt
xor
int3
push
ficompl
aaa
push
sub
inc
cli
mov
or
xor
xor
adc
enter
fiadds
fimull
push
xor
int
mov
sbb
decb
fwait
daa
cli
sub
sub
xor
dec
pop
andl
mov
sub
sbb
ljmp
bound
gs
shrl
push
insb
out
pop
lret
xlat
pop
fimuls
ds
dec
ds
cmp
mov
call
cmp
push
enter
std
gs
jbe
mov
lret
shrl
adc
push
xor
pusha
adc
icebp
nop
fwait
adc
fcmove
mov
negl
mov
jns
icebp
in
outsl
mov
sbb
test
cmp
add
inc
mov
aad
subl
add
cli
xor
notl
imul
lods
in
mov
and
in
subl
es
andl
or
inc
fnstsw
add
mov
mov
movsl
sbb
pop
pop
sub
std
push
pop
mov
lds
jmp
xor
adc
sahf
popf
mov
xor
sti
push
jge
or
in
sub
cmp
cmp
mov
scas
int
imul
fstl
mov
mov
imul
test
inc
jbe
or
or
in
iret
test
cmp
inc
sbbl
sbb
xor
insb
std
ljmp
je
sbb
pop
fdivrl
enter
std
mov
sbb
lahf
jecxz
xor
sub
rcr
les
cmp
push
lods
inc
mov
enter
mov
pop
leave
pop
ficomps
xor
pushf
cmpsl
insb
fistps
enter
inc
ss
orb
idivb
bound
in
and
push
sarl
pop
adc
in
pop
imul
adc
enter
and
cmp
cmp
repz
ja
sub
cmpsl
sbb
add
arpl
enter
add
call
sub
sub
mov
loope
xor
mov
lahf
dec
fsubr
movsl
addr16
pop
shll
cltd
jl
sub
fsincos
mov
js
mov
aaa
cwtl
pop
stos
mov
or
push
imul
mov
mov
sahf
jbe
cld
imul
pop
lods
push
sub
sbb
lock
xor
lret
stc
pushf
pop
loopne
fsubp
pop
cs
ret
enter
xlat
jle
jecxz
inc
iret
ljmp
mov
push
mov
lret
jns
sbb
dec
mov
loope
mov
mov
pop
icebp
fcompl
clc
sub
jns
enter
sahf
sbb
pop
add
cmpsl
lret
rclb
xor
xchg
out
sbb
jl
mov
jecxz
push
or
in
imul
mov
sbb
lret
inc
pop
jb
xchg
enter
scas
fmull
cmp
mov
lods
push
out
or
xchg
popl
ds
adcb
pandn
sub
notl
xchg
add
mov
add
test
ljmp
jb
stos
and
out
pop
lahf
or
cwtl
and
push
int3
enter
xchg
and
xchg
push
mov
xor
mov
and
sarl
icebp
cltd
mov
pusha
nop
enter
gs
sub
pop
ds
push
lock
sbb
mov
movsb
in
push
xor
mov
test
bound
inc
mov
push
jne
cmc
cwtl
sub
mov
xchg
jmp
push
stos
xlat
in
and
jnp
mov
test
in
arpl
pop
inc
mov
adcb
stc
add
clc
sbb
sbb
daa
adc
jecxz
jns
adc
rorb
sub
sub
sti
sbb
dec
pop
jge
mov
jno
push
push
les
rcrl
inc
sbb
xchg
insb
popa
adcb
enter
push
sub
pop
mov
mov
pop
subl
lock
sahf
pop
std
cld
sbb
mov
push
lret
enter
xchg
inc
addr16
mov
stos
dec
fs
sub
adc
xor
hlt
mov
lods
add
sub
repnz
xchg
xor
ret
xor
and
jne
aas
sbb
or
pop
push
ret
mov
pop
fldl
xor
mov
jb
fisubrs
ds
pop
dec
adc
in
xlat
test
rcrb
inc
lcall
and
xor
sbb
dec
jne
paddd
jbe
adc
mov
imul
sbb
jmp
aad
add
cmp
inc
mov
les
add
mov
jae
out
mov
push
lds
mov
in
sub
xor
rorb
pop
cwtl
lock
mov
fcoml
sub
fcmove
jns
sub
fildll
es
test
mov
pop
jmp
push
ss
aaa
jns
add
and
mov
mov
enter
add
cs
nop
les
test
mov
jns
mov
lock
loope
fcompl
or
and
sbb
test
repz
lock
xor
aas
cwtl
inc
pop
into
and
adc
pop
loop
add
pop
inc
lea
rcrl
dec
jnp
push
sub
lret
lods
sahf
outsb
sub
filds
cmc
jge
sbb
jg
or
and
mov
cmp
dec
stc
stos
dec
mov
sub
not
xor
aad
rorb
xor
sbb
mov
cmpsb
enter
mov
pop
inc
cmp
sub
data16
sahf
leave
sbb
add
jg
mov
jecxz
add
test
rcr
lds
rcl
push
mov
sbb
pop
in
stc
dec
test
adc
push
insl
out
pop
nop
mov
pushf
cmp
xchg
enter
lret
es
push
push
pop
cmp
in
sub
add
jo
and
sbb
xor
lock
in
enter
lahf
fnsave
es
enter
sub
fwait
jle
sbb
mov
push
enter
mov
fldl
dec
imul
in
dec
mov
xchg
js
push
cwtl
test
stc
mov
andb
mov
adc
arpl
dec
pop
leave
int
pop
jns
sbb
fwait
dec
fwait
jmp
aaa
dec
test
in
pop
push
ficomps
std
xorb
fsubl
aaa
mov
mov
dec
pop
xchg
popa
insb
push
xchg
idivb
and
xchg
call
xchg
xor
into
push
enter
je
push
std
cwtl
dec
push
mov
xchg
sub
movsb
inc
dec
push
dec
sbb
test
nop
mov
sbb
aad
cmpsl
mov
xor
adc
repnz
add
xchg
enter
cmp
sbb
sub
adc
cmc
cwtl
sbb
and
mov
icebp
shr
psrld
movsb
enter
push
out
mov
push
popf
cmpsb
sbb
sub
or
and
mov
add
push
pop
shl
dec
pop
enter
and
adc
int3
fstps
rolb
inc
xchg
inc
addr16
lcall
push
fstpl
add
test
xor
ja
pop
stc
stc
shlb
arpl
enter
mov
push
andb
in
pop
mov
jle
outsl
out
dec
sub
mov
lret
xor
sbbb
sub
push
push
push
xchg
inc
enter
mov
shl
inc
out
leave
fdivrl
xchg
adc
jnp
sbb
into
sbb
push
stc
enter
lds
jecxz
inc
or
xlat
adc
push
repnz
lret
jmp
and
test
lods
cwtl
gs
jecxz
enter
outsl
mov
je
mov
sbb
xor
decl
or
daa
enter
rcrl
and
lahf
je
xchg
das
pop
stc
jns
inc
mov
add
xor
pop
mov
test
sbb
repnz
jg
sub
add
cli
pop
sbb
movsb
sbb
jmp
mov
enter
add
mov
push
mov
push
mov
das
and
xor
add
aaa
bound
jg
in
jmp
enter
cmp
gs
pop
aam
inc
sub
push
pop
cli
mov
xchg
loop
cmp
add
sbb
mov
pop
popa
adc
and
pop
call
and
arpl
lods
mov
out
movsl
outsb
cwtl
lret
mov
or
mov
cwtl
cs
loope
xchg
mov
fistps
cld
push
stos
mov
mov
mov
pop
loop
jmp
aaa
pop
and
sbb
sub
mov
push
rol
sbb
push
movsb
pushf
mov
lret
dec
int3
mov
loopne
inc
mov
pop
adc
mov
dec
lods
cmp
fxch
and
dec
fbld
sbb
ret
addr16
pop
int
adc
loop
mov
sub
add
push
fldt
stc
mov
sub
mov
or
out
jb
pop
mov
loope
cmp
mov
inc
in
or
lret
inc
mov
cmp
jbe
sub
lds
inc
divl
xor
ret
repz
xor
mov
pop
andb
mov
jne
jl
out
out
sbb
xor
enter
pop
xchg
ficoms
fadds
popa
jnp
xor
rcrl
cmp
stc
sub
push
sbb
enter
pop
jmp
sbb
les
cmp
cld
adc
sbb
insb
mov
fidivs
fldcw
mov
and
negb
lahf
fistps
fcomps
sub
sbb
mov
fwait
enter
out
jo
push
pop
dec
xchg
insl
dec
push
xor
addb
sub
pop
pop
pop
movsb
push
shl
movb
fstpl
stc
pop
sbb
sbb
stc
das
fs
and
call
add
loope
insb
icebp
and
out
pop
sub
mov
jno
or
test
jo
mov
sub
sbb
and
movsb
lret
and
ret
dec
pop
outsl
xchg
imul
xor
pop
mov
lret
sti
mov
call
fadd
enter
sbb
pop
pop
cs
mov
mov
shl
cltd
lret
out
adc
cmpl
dec
dec
xor
jecxz
pop
sbb
popa
adc
mov
sbb
xchg
dec
pusha
add
push
cmp
lahf
pushf
enter
fsubrs
leave
mov
fistpl
adc
jo
repz
adc
add
and
sbb
sub
sbb
cld
fmulp
negl
inc
test
or
push
add
mov
pop
inc
jnp
ret
movsb
lret
sub
cli
mov
test
aas
sbb
cmp
mov
fmuls
sub
or
aad
inc
outsb
jmp
mov
stos
push
and
jge
fsub
sbb
popa
xchg
xchg
mov
jnp
stos
ret
inc
or
jnp
jo
rcr
cmpsl
mov
sbb
xor
outsb
mov
add
fcomps
sub
cld
pop
popf
jecxz
sub
lock
enter
dec
inc
popl
stc
xchg
repz
cmpsl
push
sti
inc
cmpl
dec
and
adc
mov
push
call
xorl
hlt
je
test
lahf
lods
jl
pop
sti
pop
stos
dec
push
sbb
int3
dec
in
clc
sub
dec
jg
xchg
fsubrs
inc
enter
popa
insb
xor
enter
cs
push
mov
pop
dec
add
jb
or
cld
cmpsl
aam
mov
pop
mov
adc
push
sub
mov
loop
mov
jl
inc
push
incb
and
mov
pop
cmp
cltd
inc
xor
ja
arpl
dec
scas
xchg
push
vmovntps
add
mov
mov
aad
mov
ret
push
fsubp
shrl
pop
sbb
push
in
in
and
pop
lahf
jl
popa
jbe
mov
mov
sbb
push
je
dec
out
leave
lcall
sub
and
stos
sbb
mov
sub
or
and
popa
out
test
push
loope
xchg
mov
pop
cmp
sub
cmpsl
clc
jg
or
out
in
or
sbb
out
daa
push
or
lods
pop
andb
mov
xchg
cltd
sub
pop
lret
cmp
xchg
movsl
pop
repnz
loop
leave
stc
fisubrs
xchg
lock
mov
pop
aam
lods
xor
arpl
inc
or
movsl
fisttps
cmp
inc
sub
hlt
sbb
jo
in
xchg
dec
push
cmp
add
jne
lret
mov
mov
mov
repz
in
pop
and
xor
ds
sub
sbb
mov
mov
jo
inc
out
xchg
mov
leave
xor
adc
mov
inc
pop
in
sub
aaa
xchg
mov
sub
jl
pushf
mov
and
dec
invd
cltd
pop
jne
out
pop
lock
dec
lcall
pop
pop
outsb
add
fldt
push
fdivr
xor
ss
mov
jb
pusha
push
pop
sub
cmp
sbb
sbb
cmp
hlt
inc
arpl
sub
clc
loopne,pt
insb
mov
in
enter
lea
sti
adc
pop
push
jp
mov
das
mov
sbb
push
adc
std
enter
addr16
movsl
cli
lret
int3
jmp
imul
es
cltd
sbb
sub
repnz
push
popa
sbbl
push
scas
int
sbb
pop
sub
ret
enter
sbb
pop
insl
aad
mov
mov
and
in
mov
inc
jno
iret
imul
iret
hlt
pop
setae
mov
inc
std
gs
fildl
rcrl
pop
mov
lock
xlat
jge
sub
sub
sbb
inc
insb
cld
dec
jnp
enter
inc
and
andb
mov
dec
enter
neg
xor
in
sbb
ljmp
mov
and
mov
rcrb
call
cmp
rolb
xchg
jl
add
dec
pop
aam
push
fcompp
std
dec
mov
enter
test
pop
jl
icebp
pop
int
sub
mov
dec
out
movsl
cwtl
sbb
stos
std
insb
mov
mov
inc
dec
fstpl
das
adc
pop
mov
movsb
movsb
enter
nop
pop
inc
mov
mov
add
inc
loope
pop
mov
call
pop
push
pushl
enter
pop
rolb
pop
mov
mov
sub
and
repnz
mov
enter
cmpb
les
stos
jecxz
jo
pop
bound
push
sbb
add
scas
or
enter
in
mov
mov
mov
or
or
pop
sbb
xor
mov
sub
mov
pop
fs
inc
scas
sbb
lahf
pushf
cs
or
push
xchg
and
popf
sbb
ss
enter
repnz
aaa
cmp
in
fdivrs
push
mov
mov
or
scas
push
add
adc
push
subb
fcomip
pop
out
in
dec
rolb
push
lods
mov
xor
mov
sub
mov
push
pop
mov
pushf
popa
push
pop
xlat
adc
sub
and
fbld
xchg
mov
push
pop
add
cmc
inc
cltd
push
testb
aam
pop
sbb
ja
cmovne
mov
test
mov
mov
sbb
js
out
mov
sub
jb
ja
inc
xor
inc
fwait
and
roll
ficompl
lods
push
sub
cmp
push
je
enter
dec
sbb
pop
sbb
push
mov
lcall
push
lods
mov
movsb
mov
sub
push
stc
mov
cmp
ss
andl
out
and
lods
pushl
mov
cmp
fwait
fwait
stos
push
sbb
test
aam
mov
sub
mov
lret
out
xchg
mov
fstpt
das
es
add
sbb
sub
inc
push
ror
dec
daa
xchg
pop
mov
sbb
sbb
cmp
cmp
in
sub
mov
or
lret
jne
sbb
lret
es
push
popf
pop
in
cwtl
fldenv
in
or
xor
sysret
jecxz
cmp
fs
iret
or
pop
add
jne
insb
arpl
or
xchg
cmp
pop
rclb
lcall
xchg
add
xchg
mov
call
jp
iret
sti
cwtl
or
push
jno
or
mov
pop
adc
xchg
fstpl
daa
or
mov
pop
cmp
addr16
xchg
mov
sub
or
and
lret
sti
xlat
inc
sahf
rcr
pushf
aaa
adc
push
xchg
enter
cmc
addb
dec
fmulp
inc
cltd
inc
mov
ret
inc
lahf
sahf
cmp
push
aad
dec
stc
cmp
int3
or
out
mov
leave
stos
imull
xor
and
stos
lods
arpl
jp
insb
push
inc
mov
insb
scas
dec
push
jp
lcall
mov
sbb
pushf
repz
pop
sbb
sbb
and
cmp
fwait
shll
mov
jno
mov
pop
incb
cs
jle
test
mov
ret
and
outsb
sbb
out
lcall
enter
sub
or
nop
pop
pop
push
mov
inc
jmp
pop
fwait
sub
xorb
jl
ret
les
pop
lds
lret
repnz
jo
cld
fcomi
aas
push
int3
enter
int3
cwtl
imulb
mov
ss
adc
repz
jne
push
inc
es
inc
sbb
aaa
mov
jmp
shl
mov
mov
pop
xchg
pushf
imul
repz
xorb
pop
mov
cld
push
jmp
push
scas
ds
mov
push
outsb
push
data16
sti
lea
sub
data16
int
sbb
cmp
dec
mov
and
imul
push
push
fidivrs
roll
es
rol
enter
and
pop
je
stos
push
hlt
not
add
fcoms
call
ljmp
or
js
push
lods
pusha
push
ljmp
mov
jecxz
mov
sti
jns
push
fldl
cltd
add
cmp
push
cmp
sub
inc
sbb
inc
int3
sbb
fistl
in
enter
sahf
mov
mov
pop
jae
adc
cmp
fidivrs
pop
push
mov
outsl
dec
bound
sub
std
inc
adc
fadds
cmp
enter
push
pop
xchg
imul
push
inc
mov
xchg
out
add
test
mov
xor
push
or
and
clc
outsb
ss
popf
jmp
pop
xchg
cmp
in
lods
mov
jno
mov
and
gs
imul
cmp
daa
or
pop
push
aaa
xchg
add
and
sbb
clc
mov
adc
or
sbb
cld
push
dec
leave
mov
orb
outsl
jmp
iret
pop
push
lock
sbb
pop
mov
ret
cmp
sub
sub
mov
cli
mov
jae
sbb
pop
mov
int
test
stos
int
stos
sbb
mov
ja
xor
out
or
pop
and
jbe
pop
ds
xchg
lahf
mov
sub
mov
jns
push
sbb
sbb
fxam
in
push
pop
push
sbb
std
fidivs
mov
push
imul
adc
mov
pushf
sbb
xchg
sbb
arpl
jb
sub
add
sbb
jmp
aad
lcall
out
cld
into
pop
mov
addl
cltd
enter
pop
rol
xor
pop
sub
cmp
loop
pop
int3
inc
mov
pop
sub
add
fdivrl
jns
pop
jnp
sub
movsl
push
out
jae
sbb
push
inc
xchg
xchg
lret
jle
enter
ret
push
sbb
call
outsl
sub
push
inc
ret
dec
inc
jl
sbb
sbb
dec
stc
dec
lock
xor
ljmp
pop
cli
fbld
or
and
add
add
and
adc
out
nop
test
subps
adc
test
in
shlb
or
pushf
sub
xor
data16
xor
xchg
jmp
sbb
cli
add
leave
and
jne
cmp
stos
mov
fwait
sub
add
fs
hlt
cmp
rcrl
iret
jb
sub
inc
adc
adc
sbb
clc
push
dec
aam
in
leave
cmp
xor
push
test
xlat
sbb
mov
ja
enter
lret
or
jns
mov
jg
pop
popf
enter
scas
xor
push
push
pop
jae
push
fisubrl
sub
loop
popa
xor
and
repz
je
sub
or
dec
sub
scas
xor
xchg
fwait
mov
jl
ret
jne
jl
xor
ret
sub
mov
jmp
jne
int3
adc
fs
and
aam
lahf
in
push
dec
push
sbb
mov
aaa
inc
sub
xor
fistps
out
int3
sbb
sub
loope
stc
mov
out
js
shll
mov
cmp
push
enter
vcvttss2si
pop
push
or
push
adc
inc
enter
pop
jge
and
mov
sub
std
adc
loopne
lcall
repz
push
nop
sbb
sub
andl
in
fwait
sub
and
adc
jb
pop
or
add
sub
shrl
ljmp
add
int3
iret
imull
scas
lods
sbb
in
insb
cmpsl
sub
pop
jmp
sbb
inc
stc
xor
mov
push
enter
dec
mov
mov
icebp
pop
aas
int
add
push
enter
push
jbe
inc
xor
jno
ja
cmpsl
bound
inc
scas
mov
inc
js
inc
imul
lock
sub
adc
sbb
je
jg
mov
icebp
lret
adc
cmp
dec
lea
add
insl
sbb
shll
daa
lock
sub
adc
pop
add
adc
dec
ficompl
divl
mov
in
jae
pop
mov
pop
pusha
xlat
ficomps
push
add
mov
push
mov
movsl
inc
fists
lret
mov
xorb
fwait
aam
or
mov
loopne
std
daa
push
sub
in
out
stc
cmp
jmp
bound
insl
or
shr
out
jg
call
movsb
push
pop
xchg
mov
test
and
sbb
xchg
inc
mov
push
das
xor
ret
dec
or
sti
stc
lret
das
enter
jge
test
pop
pop
aas
lock
icebp
dec
cld
mov
push
mov
sub
dec
fisubl
push
xchg
hlt
push
mov
rcll
nop
mov
jno
dec
aas
nop
jns
mov
cli
mov
pop
pop
enter
ss
nop
adc
mov
and
ss
test
push
inc
push
mov
lahf
sub
leave
dec
sbb
hlt
xchg
sarl
sub
mov
enter
stos
lock
dec
and
dec
test
dec
xor
shrl
scas
fsubrl
mov
out
enter
mov
xlat
push
mov
push
sbb
pop
add
pop
and
xchg
dec
mov
arpl
sbbl
in
fs
pop
daa
mov
mov
ljmp
cmp
jl
mov
pop
sbbl
jp
sti
loope
cmp
enter
jge
test
mov
adc
subl
cmp
mov
sahf
xor
insl
scas
lea
or
in
or
rorl
pop
sbb
mov
enter
out
mov
mov
out
iret
mov
cmc
xorb
sahf
push
js
jg
inc
aas
pop
xor
aad
enter
push
mov
mov
mov
fsts
jecxz
mov
pop
and
sbb
or
ror
cwtl
dec
idivb
ror
sbb
xchg
rclb
adc
adc
cmp
hlt
dec
imul
insb
enter
out
push
jmp
lods
dec
jg
addr16
xlat
loopne
and
and
cmpsb
ljmp
and
push
and
push
mov
int
pop
dec
aas
imul
jg
mov
pop
les
pop
insb
and
push
push
sbb
xor
pop
iret
add
enter
imul
add
mov
call
inc
mov
lods
jae
add
inc
xchg
jecxz
aaa
pop
add
adc
add
adc
test
pop
lret
sbb
mov
cmp
dec
cwtl
or
jo
adc
pop
es
fldenv
hlt
in
pusha
add
push
sub
adc
aam
cltd
sbb
pop
pop
jns
repz
xchg
mov
xlat
les
iret
bound
adc
cmp
pop
pop
in
xchg
enter
pop
in
mov
scas
ds
jae
inc
enter
cli
ljmp
jg
enter
dec
sub
orb
ds
jnp
xchg
loopne
das
push
jb
lds
adc
sub
push
add
repz
or
dec
mov
dec
hlt
cmp
iret
sbb
fldcw
call
sub
popf
jns
inc
lret
lods
mov
leave
shlb
imul
xor
lds
adcb
lods
enter
call
pop
inc
cli
pop
mov
pop
sbb
jg
and
sub
push
xor
sub
cmp
jl
insb
push
sbb
notb
hlt
clc
fstps
cmpsl
pop
test
pop
mov
mov
je
dec
fdivr
jne
jmp
sub
mov
mov
cmp
adc
nop
dec
test
inc
cwtl
pusha
xor
or
pop
fcompl
sbb
test
scas
push
adcb
gs
jmp
jp
enter
sti
ja
mov
push
mov
test
mov
clc
into
fisubs
or
inc
hlt
jbe
test
xchg
sub
jmp
xor
mov
imulb
loopne
pop
jmp
test
and
xor
xchg
dec
sbb
lods
jae
aad
enter
sub
or
pop
push
pop
xchg
pop
inc
movsb
jge
sub
dec
mov
pushf
scas
sbb
mov
jmp
pop
aam
cli
not
mov
lock
gs
ds
sahf
stos
inc
imul
enter
stos
pushf
inc
push
pop
dec
sbb
sub
sub
inc
xchg
push
int3
push
xchg
movsl
push
jns
cli
inc
mov
repnz
and
and
ja
pop
jl
out
dec
cli
mov
adc
cmp
call
mov
imul
jne
das
jb
sub
dec
popf
pop
mov
cwtl
aaa
das
xorl
das
fwait
pushf
out
pusha
gs
sbb
inc
mov
mov
jbe
mov
ret
test
sbb
xchg
and
lds
inc
subl
enter
xor
add
sub
or
mov
outsb
cmp
aam
cs
dec
add
mov
pop
mov
outsb
jl
jp
sub
repnz
out
add
mov
dec
cmp
pop
add
jno
adc
lea
pusha
rcrl
xor
lods
aas
mov
mov
add
and
mov
dec
sub
inc
pop
push
and
inc
movsb
jnp
in
adc
leave
sbb
fs
cmpsb
jno
xchg
stos
sub
iret
sub
call
cmpsl
xchg
stos
pop
sbb
xor
popa
sub
dec
test
popa
nop
hlt
sub
adc
negb
jne
outsb
push
dec
out
adc
in
xor
iret
or
and
lahf
sbb
ss
mov
clc
aaa
xchg
dec
xchg
stos
lock
aas
mov
adc
rcrl
mov
push
enter
ret
mov
lods
cld
sbb
aas
sarl
xor
inc
lods
test
xchg
sti
mov
or
pop
in
sets
fwait
mov
ffree
mov
mov
imul
lahf
test
loope
dec
outsl
mov
and
les
sbb
sub
mov
bound
sbb
rorb
rcr
mov
enter
movsb
dec
sub
pop
int
dec
push
jg
mov
jb
enter
js
mov
pop
cmp
push
sbb
gs
cmp
push
adc
cmc
femms
xchg
sbb
mov
popf
lods
mov
in
lea
sub
xor
aad
iret
mov
sbb
stos
pop
out
push
cmp
jo
fcoms
push
cmp
mov
les
xor
mov
sub
imul
cmp
lcall
call
aas
mov
pop
mov
mov
xchg
adc
adc
lds
sub
adc
xor
out
fldt
fnstsw
aaa
addl
scas
pop
sbb
jl
js
addl
enter
sbb
sarl
cltd
add
cmp
and
pop
test
cmp
push
loopne
orb
stc
insl
sbb
xor
xlat
jle
inc
gs
les
sbb
xor
adc
imul
dec
sub
fsub
jae
xlat
push
add
mov
test
shrb
mov
or
or
repnz
or
pushf
xchg
sub
in
xor
adc
lret
xor
and
adc
bound
or
in
inc
cltd
mov
leave
xor
inc
jns
clc
jp
fidivl
push
sub
into
lcall
outsl
lcall
mov
rclb
enter
push
mov
or
pop
into
daa
icebp
and
imul
fldcw
arpl
jecxz
or
mov
ljmp
lods
out
ficompl
arpl
and
aad
mov
jle
call
in
pusha
mov
pop
aam
out
mov
sub
in
pushf
push
rcrb
fistps
mov
je
lock
cmp
into
or
movsb
call
push
push
shll
xchg
stos
adc
pop
aad
sub
jns
je
xor
call
inc
lock
sbb
test
pop
jae
jns
cwtl
pop
loopne
xchg
adc
pop
ds
sub
dec
dec
adc
in
aas
pushf
or
insb
inc
adc
fmul
enter
aaa
pop
push
xchg
mov
adc
mov
test
imul
mov
lea
mov
pop
xor
mov
fldcw
ret
les
movsb
enter
add
add
push
mov
sbb
fcmovbe
jmp
pop
arpl
xchg
insb
sbb
mov
xor
test
cmpsl
cmpsl
mov
es
sub
cmp
bound
adcb
xchg
pusha
orl
inc
fwait
lcall
nop
je
sbb
xlat
inc
push
repnz
sub
enter
or
scas
xor
shr
jp
mov
pop
add
sbbl
scas
xor
and
aad
jge
or
mov
and
in
sbb
sti
adc
leave
pop
pop
cmp
gs
test
jae
mov
mov
enter
sub
lock
repnz
sub
rolb
mov
push
sbb
mov
cli
jae
mov
leave
adc
add
cltd
mov
adc
aad
and
cltd
out
or
xor
mov
mov
outsb
sub
xchg
cmp
cltd
mov
mov
inc
sbb
call
pop
vorps
xor
scas
insb
pop
xor
xchg
enter
lods
jp
jb
pop
insb
dec
inc
pop
cmp
cwtl
iret
sub
xchg
pusha
sbb
shll
inc
mov
mov
sub
pop
ljmp
mov
and
lret
shrb
js
rcrl
cvtdq2ps
jnp
xorb
test
clc
pop
inc
sub
shlb
imul
popf
or
pushf
into
not
mov
sti
xor
add
mov
mov
push
xlat
jge
cli
xchg
dec
imul
mov
ret
push
cltd
aaa
arpl
mov
sub
les
sti
jl
lds
pop
sub
scas
loope
clc
pop
and
pop
ret
mov
push
cmp
jnp
xchg
xchg
lcall
mov
pop
pop
push
push
cmp
test
cmp
xchg
inc
lds
decl
xchg
jge
inc
pop
shrl
mov
dec
xchg
mov
in
js
aas
adc
or
pop
push
push
adc
rcl
mov
lods
sbb
mov
jne
popf
add
add
fldenv
bound
add
call
mov
push
sahf
mov
lret
cmp
mov
sub
popf
xor
xchg
fwait
sbb
iret
mov
xlat
addr16
into
or
jmp
or
out
ljmp
jp
dec
shlb
pop
cmp
in
jle
in
sbb
sbb
jp
sbb
je
sub
addr16
iret
pop
and
sub
pop
aam
lret
fidivrl
std
push
lcall
and
fisubs
repz
shll
cmp
xchg
or
xor
inc
ss
stos
xchg
sar
sbb
pop
xor
int
mov
repz
enter
into
or
xor
sub
stc
xorl
test
mov
daa
xor
sub
fwait
push
sub
mov
mov
or
sub
aas
and
lcall
das
sbb
pop
jnp
sub
inc
mov
mov
inc
adc
pop
push
lret
or
add
iret
cli
rcrb
fisttpll
pop
popf
sbb
sbb
pop
or
mov
or
xlat
pushf
mov
jle
jb
or
pushl
mov
push
cwtl
jbe
lcall
mov
jle
movsw
sbb
sub
je
add
xlat
sub
or
inc
jle
mul
pop
xchg
jb
cmp
fldcw
xor
or
mov
cwtl
dec
push
enter
add
aam
scas
xchg
repz
pop
bound
shlb
pop
cltd
push
inc
sbb
inc
shrb
xchg
cmp
fisubl
jle
add
mov
fs
add
repnz
mov
aaa
scas
push
jb
mov
aad
adc
enter
addr16
cmp
jl
and
xor
mov
cmp
pop
inc
adc
push
jo
mov
imul
jb
pmullw
or
xchg
jbe
test
out
mov
sbb
pushf
add
daa
aaa
aam
jne
mov
lea
imul
push
sub
push
cmpsl
ret
xor
cli
or
nop
mov
sbb
inc
out
dec
ret
push
sub
sbbb
pop
dec
sub
jne
xor
xchg
ss
pop
inc
sub
call
push
mov
loopne
fisubrl
fisubs
into
pushf
push
icebp
sub
cmpsb
push
push
nop
fs
cli
sub
sbb
lods
punpckhdq
imul
mov
adc
adc
loopne
jl
enter
pop
repnz
ja
movl
cmp
es
cmp
pop
ss
push
mov
add
jecxz
sbb
sti
pop
push
xchg
enter
fcompl
xchg
lods
daa
mov
notl
push
fcmovnbe
mov
sar
lret
cmpsb
inc
sub
sbb
das
jp
shlb
ja
xor
jmp
push
pop
jecxz
and
out
inc
jo
daa
popf
sub
jno
enter
lods
sbb
and
ds
and
xchg
fstps
popa
pop
add
mov
sti
sbb
mov
cmp
out
les
xchg
sbb
sahf
cld
test
inc
test
pop
fdivs
orl
icebp
and
mov
pop
fistpll
decb
jb
subb
inc
push
sti
mov
es
sbb
jmp
ret
enter
mov
push
nop
data16
lret
dec
cmp
mov
xchg
iret
enter
test
pop
mov
mov
popa
aad
jg
stc
jecxz
mov
mov
cli
out
testb
sub
dec
mov
subb
ret
dec
out
sub
dec
jmp
test
inc
push
jne
seta
sub
das
adc
inc
addr16
sub
lahf
call
push
sub
daa
aas
scas
rcl
popa
sbb
xchg
dec
dec
addl
cmpsl
add
add
adc
push
jle
jne
insb
fdiv
fstpl
loopne
sub
adcl
push
mov
cmpsl
pop
dec
pop
mov
fildll
xor
push
add
adc
pop
mov
in
lret
pop
sub
nop
loop
in
lock
scas
xchg
jle
pop
jnp
lahf
pushf
loopne
or
std
fcom
pop
inc
jno
sbb
loop
sbb
enter
fstpt
incb
pop
push
enter
xchg
or
sub
int
mov
sbb
mov
lret
mov
in
or
test
aam
mov
adc
pop
mov
cs
pop
insl
fistl
es
lods
push
stos
mov
push
mov
in
in
pop
inc
cs
sahf
iret
sbb
sub
movsb
mov
jae
aas
pop
dec
mov
or
repz
sub
jbe
sbb
sarb
mov
mov
sti
pop
jno
sbb
xchg
enter
cli
mov
icebp
adc
jmp
popf
add
lock
mov
ret
and
xor
popa
jne
sub
add
or
cmc
mov
pop
or
mov
pop
dec
enter
pop
data16
mov
jno
adc
ror
repz
push
push
push
push
leave
mov
push
gs
jns
lahf
or
cmp
adc
scas
pop
mov
sbb
das
xchg
mov
enter
pop
add
pop
dec
js
dec
fcmove
int
sbb
mov
aas
lds
or
dec
cmp
push
loop
and
fsubl
fucompp
mov
jmp
sti
mov
es
add
cld
les
aam
loop
push
and
flds
dec
xor
pop
and
mov
mov
sub
fsubrs
mov
mov
aam
dec
out
pushl
repnz
mov
push
mov
sub
mov
and
sbb
insl
rol
xor
sub
sub
das
dec
push
inc
push
hlt
sti
and
out
int
mov
enter
call
jcxz
dec
and
outsb
cmpsb
popf
push
sub
mov
ret
js
sbb
test
repnz
cld
cmp
pop
aas
sub
sbb
lock
fwait
mov
cli
sub
pop
fadds
cli
daa
test
xor
dec
ret
enter
in
loopne
fstpl
addr16
xchg
dec
cmp
ss
stos
daa
clc
sbb
mov
mov
loope
sbb
sbb
gs
loope
popa
or
outsb
jne
insb
pop
and
cld
mov
xchg
xor
shrb
pusha
pop
sub
ss
push
in
cmpsb
fbld
cltd
mov
insb
incb
scas
add
cmp
mov
test
pusha
out
pusha
outsl
lret
mov
jns
sub
inc
mov
push
pop
inc
and
daa
adc
imul
insb
scas
jge
cmc
sbb
sub
xchg
jnp
pop
enter
rcrb
or
sub
xorb
repnz
sbb
pop
add
enter
fs
gs
ljmp
imul
mov
sbb
xchg
lret
mov
or
aas
cs
mov
mov
test
jno
sahf
sub
pushf
or
jns
loopne
sbb
push
das
pop
out
repz
fnstenv
icebp
je
leave
aas
inc
lret
pushf
adc
xor
idiv
and
fcomps
stos
jb
pop
mov
loopne
mov
adc
sbb
inc
inc
scas
nop
adc
enter
pusha
push
arpl
aam
fcoms
mov
enter
lds
dec
push
pop
xchg
mov
sub
pop
sti
or
and
mov
movb
push
sbb
jno
mov
enter
adc
jecxz
cmp
data16
ljmp
jne
pop
dec
mov
pop
sbb
ret
fs
xor
cwtl
xor
popa
test
fs
jns
jo
ss
test
movsl
cmp
cmp
fadds
or
and
sub
lods
fidivs
lcall
xlat
in
leave
cwtl
shlb
cwtl
stos
pop
add
sbb
sbb
dec
sub
cmc
sub
incl
mov
lods
mov
pop
mov
xor
into
les
sbb
jbe
push
cmp
pop
enter
mov
repz
fwait
nop
js
xorl
push
jmp
pop
mov
and
sbb
leave
sbb
popl
jmp
or
cld
inc
jcxz
adc
imul
mov
into
xlat
out
shll
shrb
mov
fdivs
int
out
jp
cmp
int3
lret
dec
enter
mov
int3
enter
stos
gs
pop
mov
sub
arpl
scas
push
mov
lret
sub
fidivrs
adc
sub
data16
sbb
pop
cs
xchg
je
mov
pop
ss
scas
aad
pop
cmp
cmp
or
leave
adc
sahf
pusha
scas
pop
cmp
jnp
sbb
push
sbb
cmp
dec
jge
pop
std
xor
clc
mov
xor
inc
jmp
popa
js
sbb
aad
xchg
jle
pop
subl
pop
jnp
sbb
sub
lret
insl
sub
xor
lock
bound
jne
inc
leave
out
fidivl
fiadds
push
mov
pop
sbb
jno
sub
inc
scas
pop
mov
jecxz
or
int3
adc
and
jbe
stos
sub
out
cmp
lret
push
loope
lea
cltd
inc
in
and
jae
or
insl
mov
jns
push
pop
push
sub
imul
shll
sar
or
sbb
lea
pop
xchg
pop
lods
sbb
inc
mull
mov
or
push
sbb
mov
mov
ficoml
dec
mov
sub
outsl
enter
stos
xlat
rcrb
pop
inc
subb
push
stos
jno
mov
movsb
jo
into
pusha
cs
sbb
sbb
or
jns
cld
sub
shlb
mov
jl
mov
movsb
mov
pop
push
push
inc
enter
scas
mov
aaa
pop
fbstp
fnstcw
push
add
stos
scas
mov
mov
dec
push
pop
lds
inc
mov
inc
popa
out
adc
mov
iret
int
lods
mov
pop
leave
add
das
lahf
std
addr16
imul
adc
jae
push
or
mov
xchg
icebp
dec
jl
fdivrl
lock
data16
and
adc
sbb
jle
enter
mov
cmpsl
mov
sub
cli
ret
pop
cltd
mov
loopne
mov
jns
fs
stos
adc
mov
mov
cmp
pop
dec
movsl
jl
jp
cmp
in
enter
test
sub
sarl
test
pop
adc
pop
push
mov
lret
sub
add
int3
xlat
cmc
mov
cmp
sbb
or
call
xchg
sub
leave
inc
mov
xor
cmpsb
ja
lret
jbe
or
aaa
lods
pop
scas
sbbb
add
dec
dec
pop
ja
fisubrs
jl
lret
das
adc
js
pop
push
jae
aas
dec
ljmp
jnp
aaa
inc
shlb
les
leave
pop
enter
add
imul
fsubrs
lock
leave
in
dec
ss
jmp
inc
dec
mov
or
mov
insl
fistl
add
add
lods
mov
sahf
sbb
or
sbb
add
rclb
enter
mov
stos
jne
test
ret
or
fsubp
sbb
sbb
sub
adc
cmp
out
cmp
add
and
xlat
sbb
or
mov
pop
mov
pop
ret
jp
aad
dec
xlat
jle
outsb
mov
addr16
pop
lcall
insl
pop
sbb
leave
je,pn
adc
push
cli
dec
movsl
cs
pop
rcrl
leave
bound
cmp
mov
adc
and
imul
loope
pop
add
dec
dec
leave
stc
jns
clc
leave
lret
test
mov
jge
mov
mov
mov
xchg
pop
icebp
pop
fsubl
and
scas
stos
mov
bound
addr16
xchg
stos
stos
call
sbb
inc
lahf
mov
insb
sbb
aas
xlat
in
fldcw
fidivrl
mov
sbb
xor
test
xor
mov
jno
ljmp
dec
xor
mov
loop
pop
pop
dec
xlat
in
pusha
int
rcrl
scas
icebp
jnp
aaa
dec
xor
mov
outsl
cli
lds
pop
sbb
movsb
sub
sub
dec
loop
jo
imul
pop
adc
data16
mov
mov
enter
clc
xor
lcall
mov
inc
pop
or
adc
repnz
sub
int3
cmp
aas
inc
inc
and
adc
sub
mov
popf
dec
cs
push
and
dec
shr
push
sti
push
or
adc
jecxz
call
aas
lcall
sahf
adc
fsubrs
xchg
ret
insb
imul
cltd
and
out
out
call
popf
repnz
sub
lds
xchg
sbbl
paddd
xor
pop
test
and
fdivl
dec
in
sbb
les
adc
std
pop
imul
pop
push
fisttpl
fs
outsl
insl
fisubl
pop
pop
cli
mov
iret
cmpb
adc
adc
mov
inc
jns
dec
pop
inc
jbe
cmp
imul
cmp
pop
pop
movsb
add
mov
dec
imul
push
aas
pop
mov
pusha
mov
lret
pushf
push
sbb
adc
and
lahf
dec
add
adc
and
lds
lods
push
shl
pushf
push
jge
movsb
adc
dec
mov
xchg
push
and
es
cld
fwait
jns
and
pusha
ds
jle
mov
sub
call
push
or
out
mov
jno
dec
data16
test
pop
in
or
ficomps
jl
and
adc
in
xor
jl
ja
inc
sbb
adc
cmp
inc
incb
icebp
mov
adc
sub
xchg
dec
push
add
xor
push
mov
sub
jp
add
jl
test
or
xchg
enter
pop
out
ret
das
xlat
fiaddl
movsl
inc
pop
push
in
cmpsb
xor
lods
sub
outsb
int
sbb
into
dec
add
ret
jnp
jge
cltd
dec
lods
subl
sti
inc
loopne
add
testb
dec
pusha
push
adc
mov
dec
cmpsb
and
sub
aaa
mov
int
pop
out
xlat
sub
dec
push
xor
push
push
sub
lcall
or
add
and
and
adc
std
gs
xchg
inc
adc
jbe
push
cmp
ds
xor
mov
int
test
pop
je
enter
clc
loope
lock
push
push
sbb
jl
pop
or
add
adc
sbbb
xchg
add
insb
es
inc
.byte
mov
pusha
