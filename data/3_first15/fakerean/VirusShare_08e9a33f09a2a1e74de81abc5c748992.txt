add
cmpl
je
push
push
pushl
call
mov
mov
call
ret
cmp
jne
jmp
incl
add
add
incl
add
add
incl
add
add
rolb
nop
nop
nop
nop
mov
push
mov
push
push
pushl
push
call
add
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
test
jne
cmpl
jne
xor
test
jne
cmpb
je
mov
andl
leave
ret
xor
inc
jmp
nop
nop
nop
nop
nop
mov
push
mov
mov
test
push
mov
movb
jne
call
test
mov
je
mov
mov
mov
and
inc
add
cmp
jne
mov
cmp
jne
mov
testb
jne
orl
movb
mov
pop
pop
ret
nop
nop
nop
nop
nop
mov
push
push
call
mov
call
pushl
pushl
call
call
mov
test
je
push
call
pop
mov
pop
ret
nop
nop
nop
nop
nop
call
mov
xor
ret
nop
nop
nop
nop
nop
mov
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
testl
je
call
test
je
xor
inc
pop
leave
ret
xor
jmp
nop
nop
nop
nop
nop
push
push
call
andl
movapd
movl
movl
mov
call
ret
nop
nop
nop
nop
nop
nop
incl
add
add
incl
add
add
cli
mov
inc
add
call
push
movl
mov
movb
call
pop
ret
nop
nop
nop
loopne
inc
add
loop
add
jecxz
add
inc
add
inc
add
mov
push
mov
mov
call
push
movl
mov
call
pop
pop
ret
nop
nop
nop
scas
adc
add
or
out
or
decl
inc
add
or
mov
or
rorl
inc
add
sub
push
sub
nop
nop
nop
nop
nop
push
push
call
andl
mov
push
call
pop
test
je
mov
sub
push
push
call
pop
pop
test
je
mov
shr
not
and
movl
call
ret
movl
xor
jmp
nop
nop
incl
add
add
incl
add
add
incl
inc
add
add
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
test
push
lea
jbe
mov
mov
cmp
jb
mov
add
cmp
jae
pop
pop
pop
pop
ret
xor
jmp
nop
nop
nop
nop
nop
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
push
call
pop
mov
ret
nop
nop
nop
nop
nop
push
push
call
call
mov
mov
test
jne
push
call
pop
andl
mov
jmp
adc
inc
add
test
jl
add
inc
cld
call
test
je
mov
call
ret
nop
nop
nop
nop
incl
add
add
incl
add
add
incl
add
add
roll
nop
nop
nop
nop
push
call
pop
ret
push
call
test
je
mov
and
cmp
jne
orb
push
lea
push
call
pop
pop
test
je
orl
jmp
inc
inc
jmp
dec
incl
cmpl
mov
je
cmp
jg
mov
incl
movb
jmp
test
jne
jmp
cmp
jl
jmp
pushl
call
pop
push
pushl
call
jmp
push
pop
jmp
xor
jmp
movl
pushl
pushl
pushl
call
mov
mov
cmp
je
mov
cmp
je
jmp
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
jne
mov
add
jne
mov
test
jne
mov
test
jne
lea
movl
cmpl
jne
cmpl
jne
add
decl
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
mov
test
je
jmp
cmp
jne
push
call
jmp
xor
jmp
call
jmp
nop
nop
nop
nop
nop
mov
push
mov
cmpl
je
cmpl
jne
push
pushl
mov
call
test
je
pushl
pushl
call
call
mov
pop
push
pushl
pushl
call
pop
call
pushl
call
mov
cmp
je
push
push
call
pop
ret
nop
nop
nop
nop
nop
push
push
call
mov
test
je
mov
test
jne
mov
test
jne
mov
test
jne
mov
test
jne
mov
test
jne
add
test
jne
mov
test
jne
mov
test
jne
mov
test
jne
mov
cmp
jne
push
call
pop
andl
mov
outsl
les
push
call
test
je
movl
call
push
call
pop
movl
mov
test
je
push
call
pop
cmp
jne
movl
call
push
call
pop
call
ret
nop
incl
add
add
incl
add
add
incl
add
add
incl
add
add
nop
nop
nop
nop
push
call
pop
ret
nop
nop
add
nop
nop
adc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
inc
add
dec
inc
add
inc
add
dec
inc
add
addl
iret
dec
inc
add
imul
push
inc
push
inc
pop
dec
push
push
push
dec
inc
inc
push
dec
push
inc
push
push
add
std
push
sar
mov
inc
mov
mov
and
push
inc
add
push
inc
add
pop
inc
add
push
inc
add
inc
add
outsb
inc
add
add
imul
push
outsl
add
insb
add
add
jae
pop
add
insb
add
jae
jae
xor
xor
add
nop
nop
add
add
add
xor
push
push
inc
add
add
test
mov
test
push
push
inc
add
add
mov
adc
inc
add
inc
add
imul
push
inc
add
test
push
push
inc
add
mov
inc
add
addl
nop
mov
push
mov
mov
test
je
lea
mov
inc
inc
test
jne
sub
sar
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
movl
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
mov
add
push
call
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
mov
add
push
call
pop
ret
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
mov
push
mov
push
mov
mov
test
je
pushl
push
pushl
call
test
jne
pushl
push
call
pop
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
cmpl
jne
mov
jmp
pushl
mov
add
mov
push
push
call
pop
ret
nop
nop
nop
test
out
mov
add
imul
pop
nop
nop
nop
nop
nop
subl
jmp
add
call
in
mov
add
push
call
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
mov
add
push
call
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
pushl
mov
pushl
add
push
push
call
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
sub
mov
xor
mov
push
push
mov
push
pushl
call
andw
push
mov
lea
push
push
call
add
push
lea
push
push
call
test
jne
mov
pop
mov
xor
pop
call
leave
ret
nop
dec
add
pop
add
push
add
inc
add
dec
add
push
add
add
mov
push
mov
pushl
pushl
push
pushl
call
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
push
pushl
push
pushl
call
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
pushl
push
push
pushl
call
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
movzwl
push
pushl
push
pushl
call
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
sub
push
lea
mov
push
pushl
call
test
je
mov
cmp
je
mov
mov
cmp
je
mov
push
mov
push
pushl
call
test
je
andl
push
push
pushl
call
push
pushl
mov
call
push
pushl
push
lea
push
call
test
pop
je
xor
cmp
push
pop
je
mov
sub
mov
sub
push
push
push
push
push
push
pushl
call
pop
pop
leave
ret
nop
nop
nop
nop
nop
mov
push
mov
push
pushl
push
pushl
call
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
lea
push
push
mov
call
mov
orl
add
lea
push
push
movl
mov
movl
call
lea
push
push
push
pushl
call
pop
leave
ret
nop
nop
nop
nop
nop
mov
push
mov
sub
mov
xor
mov
push
push
push
xor
xor
mov
lea
stos
stos
push
stos
lea
push
push
mov
mov
call
mov
add
cmp
je
push
lea
push
push
push
call
mov
lea
push
push
push
pushl
call
mov
sub
xor
push
pushl
push
pushl
push
mov
sub
push
pushl
lea
pushl
push
push
push
push
call
push
mov
call
push
push
mov
call
push
push
pushl
call
pushl
pushl
call
pushl
call
mov
mov
xor
lea
stos
mov
lea
mov
inc
inc
test
jne
sub
lea
push
sar
push
pushl
pushl
call
mov
sub
mov
sub
cltd
sub
push
pushl
sar
lea
mov
sub
mov
push
push
pushl
pushl
call
mov
test
je
push
push
lea
push
push
pushl
push
call
push
pop
mov
xor
lea
add
call
mov
or
inc
add
jbe
movl
movl
mov
call
pushl
call
pop
pushl
pushl
call
mov
pop
pop
xor
pop
call
leave
ret
nop
push
add
add
add
add
nop
nop
nop
nop
nop
mov
push
mov
pushl
pushl
push
pushl
call
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
mov
mov
lea
test
je
mov
mov
mov
pop
ret
mov
cmpl
jne
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
pushl
call
mov
not
and
or
cmp
je
push
push
pushl
call
mov
xor
cmp
jne
xor
inc
pop
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
push
push
mov
push
pushl
call
pushl
call
mov
andl
xor
inc
pop
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
mov
push
mov
andl
lea
push
push
mov
call
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
lea
push
pushl
call
andl
pop
ret
mov
jmp
nop
nop
nop
nop
nop
xor
lea
inc
lock
lea
ret
nop
nop
nop
nop
nop
mov
push
pushl
lea
sub
push
push
push
mov
mov
mov
xor
push
pushl
movl
lea
mov
ret
nop
nop
nop
nop
nop
mov
push
pushl
lea
sub
push
push
push
mov
mov
mov
xor
push
mov
pushl
movl
lea
mov
ret
nop
nop
nop
nop
nop
mov
push
pushl
lea
sub
push
push
push
mov
mov
mov
xor
push
mov
pushl
movl
lea
mov
ret
nop
nop
nop
nop
nop
mov
push
mov
mov
push
push
push
xor
cmp
je
mov
cmp
jbe
mov
cmp
je
mov
movzwl
mov
inc
inc
inc
inc
cmp
je
dec
jne
cmp
je
xor
pop
pop
pop
pop
ret
neg
add
mov
xor
mov
mov
rep
mov
mov
mov
add
sub
push
push
push
call
add
mov
jmp
nop
nop
nop
nop
nop
mov
test
je
cmpl
je
addl
js
mov
mov
addl
movzwl
cmp
je
incl
ret
nop
nop
nop
nop
nop
mov
push
mov
push
mov
cmpl
jg
pop
pop
ret
cmpl
jne
jmp
nop
nop
nop
nop
nop
mov
push
mov
testb
push
push
mov
mov
je
cmpl
je
cmpl
jg
pop
pop
pop
ret
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
push
mov
mov
push
xor
inc
cmp
jb
cmp
ja
push
call
test
jne
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
push
pushl
mov
push
call
xor
test
setne
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
mov
push
mov
andl
test
jne
mov
pop
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
push
mov
mov
push
call
test
je
pushl
lea
push
mov
push
call
cmpl
je
cmpl
jne
pushl
call
test
je
pushl
mov
mov
call
pop
pop
ret
xor
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
mov
andl
cmpl
jne
mov
test
jne
add
inc
pop
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
cmpl
jne
push
push
call
mov
test
je
pop
jmp
nop
dec
insl
popa
addr16
imul
dec
popa
jae
gs
mov
push
mov
call
mov
push
push
call
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
mov
xor
cmp
mov
je
mov
test
je
mov
cmp
jge
push
pushl
call
mov
cmp
je
inc
jmp
mov
test
jne
xor
pop
pop
mov
pop
pop
ret
xor
jmp
xor
jmp
xor
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
push
mov
xor
push
inc
xor
mov
test
je
mov
cmp
jge
push
pushl
call
pushl
pushl
call
test
je
inc
jmp
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
pop
nop
nop
nop
nop
nop
mov
push
mov
pushl
push
call
push
call
pop
ret
nop
nop
nop
nop
nop
subl
nop
nop
nop
nop
nop
mov
push
mov
mov
add
push
call
pop
ret
nop
nop
nop
nop
nop
subl
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
lea
push
call
mov
test
jle
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
subl
nop
nop
nop
nop
nop
mov
push
mov
pushl
pushl
push
pushl
call
pop
ret
nop
nop
nop
movsb
push
inc
add
add
add
jae
add
add
xchg
test
and
add
test
add
jl
inc
add
add
add
sub
xchg
ja
cltd
fs
rclb
call
in
sub
andl
push
mov
push
push
xor
lea
stos
stos
stos
lea
push
push
mov
push
pushl
call
incl
call
neg
sbb
and
add
mov
push
mov
call
mov
sub
push
pushl
mov
push
pushl
push
mov
sub
push
pushl
pushl
push
push
push
push
call
push
push
mov
call
push
push
pushl
call
pushl
call
mov
test
pop
je
push
push
lea
push
push
pushl
push
call
push
pop
mov
xor
lea
rep
lea
push
push
push
pushl
add
movl
movl
mov
call
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
mov
push
mov
pop
nop
nop
nop
nop
nop
mov
push
mov
pushl
push
call
push
call
pop
ret
mov
or
jne
lea
sub
inc
testw
mov
mov
jne
cmpl
jne
mov
test
jne
mov
mov
sub
sub
testb
jne
pushl
lea
push
push
call
add
pushl
mov
lea
lea
call
testb
pop
jne
cmpl
jne
test
jle
mov
mov
pushl
decl
lea
push
push
call
add
test
mov
jle
mov
mov
lea
call
add
cmpl
jg
cmpl
jl
testb
jne
cmpl
jne
mov
mov
jmp
nop
nop
nop
nop
nop
mov
push
mov
sub
mov
xor
mov
mov
push
mov
push
xor
cmp
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
cmp
je
movzwl
cmp
mov
mov
mov
mov
add
je
push
pop
add
xor
cmp
mov
jl
lea
cmp
ja
movzwl
movzbl
and
mov
imul
movzbl
push
shr
pop
cmp
mov
je
cmp
ja
jmp
mov
lea
movl
call
movzwl
test
mov
je
mov
jmp
nop
nop
nop
nop
push
addb
add
add
adc
add
test
xor
or
sub
cmp
addb
add
xor
push
push
mov
add
and
orb
pusha
pusha
pusha
push
pop
js
jo
jo
or
add
or
or
pop
or
incl
je
cmpl
jne
mov
mov
pop
pop
xor
pop
call
leave
ret
xor
orl
mov
mov
mov
mov
mov
mov
jmp
orl
jmp
call
jmp
call
push
push
push
push
movl
push
call
add
or
jmp
movzwl
sub
je
sub
je
sub
je
sub
je
sub
jne
or
jmp
orl
jmp
orl
jmp
orl
jmp
or
jmp
cmp
jne
mov
add
test
mov
mov
jge
orl
negl
jmp
mov
imul
movzwl
lea
mov
jmp
andl
jmp
cmp
jne
mov
add
test
mov
mov
jge
orl
jmp
mov
imul
movzwl
lea
mov
jmp
movzwl
cmp
je
cmp
jns
inc
add
cmp
jne
orl
jmp
cmpw
jne
add
orl
jmp
orl
jmp
orl
jmp
movzwl
cmp
jne
cmpw
jne
add
orl
jmp
cmp
jne
cmpw
jne
add
andl
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
andl
jmp
je
cmp
jg
je
sub
je
sub
je
sub
je
sub
jne
add
movl
mov
orl
cmpl
lea
mov
mov
mov
jge
movl
jmp
testw
jne
orl
jmp
testw
jne
orl
cmpl
mov
je
mov
add
testb
mov
mov
mov
je
test
jne
mov
mov
andl
test
mov
jle
mov
test
je
movzbl
push
call
test
pop
je
inc
inc
incl
cmp
jge
jmp
sub
je
sub
je
sub
je
sub
jne
movzwl
add
xor
inc
testb
mov
mov
mov
je
pushl
mov
lea
push
lea
push
movb
call
add
test
jge
mov
jmp
mov
lea
mov
mov
jmp
mov
add
test
mov
je
mov
test
je
movzwl
cmp
jb
testw
movzwl
je
xor
mov
not
inc
test
je
mov
not
test
je
mov
shr
mov
jmp
andl
mov
jmp
mov
mov
lea
mov
inc
test
jne
sub
jmp
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
jne
testb
mov
je
orl
jmp
orl
movl
jmp
add
mov
mov
jmp
jne
cmp
jne
movl
jmp
cmp
jle
mov
mov
cmp
jle
mov
add
push
call
test
mov
pop
mov
add
mov
mov
jmp
mov
jmp
mov
testb
je
orl
mov
pushl
mov
pushl
add
mov
mov
mov
movsbl
push
pushl
lea
push
push
mov
call
add
cmpb
jne
orl
incl
mov
lea
mov
inc
test
je
jmp
sub
je
sub
je
sub
jne
movl
jmp
mov
add
movw
mov
mov
jmp
test
mov
je
movswl
jmp
movzwl
cltd
jmp
cltd
jmp
test
jg
jl
test
jae
neg
adc
neg
orl
jmp
movl
jmp
mov
jmp
and
jmp
test
je
mov
cmpb
je
decl
mov
movb
inc
jmp
test
jne
mov
mov
mov
movl
jmp
dec
cmpw
je
add
test
jne
sub
sar
mov
jmp
test
je
movw
jmp
test
je
movw
jmp
test
je
movw
movl
jmp
testb
jne
push
push
push
lea
call
add
or
cmp
decl
call
test
sti
call
pop
jmp
pushl
lea
push
push
call
add
jmp
pushl
add
mov
mov
pop
jmp
movl
xor
push
push
push
push
push
jmp
cmp
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
inc
add
bound
movzwl
cmp
jle
cmp
jg
jne
mov
movl
testb
movl
jne
mov
test
js
test
jne
add
test
jne
test
mov
jne
xor
mov
test
jne
testw
mov
mov
jne
xor
cmpl
jl
andl
mov
cmp
jg
mov
or
je
lea
mov
decl
test
jle
mov
cltd
push
push
push
push
call
add
cmp
mov
mov
mov
jg
mov
dec
jmp
add
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
push
lea
call
test
je
push
add
push
push
call
pushl
push
pushl
push
pushl
call
pop
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
push
push
call
mov
test
je
mov
push
mov
push
mov
mov
call
push
lea
push
mov
call
mov
push
push
push
call
pushl
pushl
pushl
push
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
push
mov
cmpl
jne
call
test
mov
je
cmpl
jne
cmpl
jne
xor
inc
pop
pop
ret
pushl
mov
pushl
call
jmp
nop
nop
nop
nop
nop
mov
push
mov
mov
mov
mov
sub
push
sub
push
movl
movb
mov
call
push
call
xor
inc
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
sub
mov
xor
mov
mov
push
push
mov
push
mov
mov
xor
push
mov
lea
push
push
mov
call
mov
add
cmp
je
push
lea
push
push
push
call
push
push
mov
push
movl
push
lea
push
push
mov
movl
pushl
mov
call
lea
push
mov
mov
call
push
mov
call
push
mov
call
xor
mov
movl
movb
mov
mov
mov
mov
lea
stos
movl
movl
movb
mov
mov
mov
mov
lea
stos
movl
movl
movb
mov
mov
mov
mov
lea
stos
mov
movl
movb
movb
mov
mov
mov
lea
stos
call
test
jne
fldl
call
mov
add
movl
movb
movb
mov
mov
mov
lea
stos
mov
movl
movb
movb
mov
mov
mov
lea
stos
call
test
jne
fldl
call
mov
xor
movl
movb
movb
mov
mov
mov
lea
stos
mov
movl
movb
movb
mov
mov
mov
lea
stos
call
test
jne
fldl
call
mov
add
movl
movb
movb
mov
mov
mov
lea
stos
mov
movl
movb
movb
mov
mov
mov
lea
stos
call
test
jne
fldl
call
mov
push
xor
movl
movb
movb
mov
mov
mov
lea
push
stos
call
cmp
mov
je
push
push
lea
push
lea
call
lea
push
push
push
pushl
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
push
push
mov
call
mov
push
pushl
call
push
pushl
call
mov
call
mov
cmp
je
push
pushl
call
mov
push
pushl
call
mov
push
pushl
call
mov
push
pushl
call
mov
push
pushl
add
cld
pop
pop
xor
xor
pop
call
leave
ret
nop
nop
nop
nop
nop
add
add
add
cs
add
add
add
adc
cmpl
je
push
mov
sub
and
fstpl
cvttsd2si
leave
ret
cmp
mov
mov
je
mov
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
xor
cmp
mov
jne
mov
cmp
je
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
je
add
cmp
je
mov
cmp
je
add
cmp
je
mov
cmp
je
inc
cmp
je
xor
pop
pop
pop
pop
ret
lea
push
pushl
xor
pushl
inc
push
mov
mov
call
jmp
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
push
pushl
mov
pushl
mov
push
movl
pushl
call
lea
push
pushl
call
mov
pushl
dec
mov
call
push
mov
call
push
lea
push
push
call
push
pushl
call
mov
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
mov
push
mov
push
mov
mov
test
je
mov
push
call
test
jne
pop
pop
ret
mov
call
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
push
mov
movl
xor
mov
test
je
mov
cmp
jge
push
pushl
call
mov
test
je
mov
push
call
test
jne
push
mov
call
andl
mov
pop
pop
pop
leave
ret
xor
jmp
inc
jmp
adc
add
inc
add
imul
push
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
mov
push
mov
sub
push
mov
push
mov
push
push
pushl
lea
pushl
push
pushl
call
mov
push
lea
push
pushl
lea
pushl
mov
mov
push
pushl
mov
call
mov
xor
cmp
mov
jne
cmp
je
mov
test
jne
mov
pop
pop
pop
leave
ret
cmp
jb
cmp
jbe
cmp
je
cmp
je
cmp
je
cmp
jbe
cmp
ja
mov
mov
jmp
pushl
push
pushl
call
jmp
lea
push
push
pushl
push
mov
call
mov
mov
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
cmpl
push
push
push
mov
jne
mov
xor
inc
cmp
je
cmp
je
mov
mov
lea
cmp
jbe
cmp
je
cmp
je
mov
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
je
mov
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
mov
cmp
je
mov
cmp
je
mov
cmp
je
mov
cmp
je
cmp
je
xor
pop
pop
pop
leave
ret
andl
jmp
mov
test
jne
mov
andl
xor
inc
jmp
nop
nop
nop
nop
nop
mov
push
mov
cmpl
jne
cmpl
je
cmpl
je
cmpl
je
xor
pop
ret
push
call
mov
mov
jmp
lea
push
pushl
add
pushl
push
call
mov
mov
xor
inc
jmp
nop
nop
nop
nop
nop
mov
push
mov
cmpl
push
push
jne
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
pop
pop
ret
lea
push
pushl
add
pushl
push
call
jmp
outsb
mov
add
in
sub
andl
push
push
push
xor
lea
stos
stos
stos
lea
mov
push
pushl
call
mov
mov
call
add
push
neg
sbb
and
add
mov
sub
push
mov
sub
push
pushl
pushl
pushl
call
sub
mov
lea
movsl
movsl
movsl
lea
movsl
call
mov
mov
mov
mov
push
lea
push
lea
call
pop
pop
xor
pop
leave
ret
nop
nop
nop
nop
nop
mov
push
mov
sub
andl
push
push
xor
lea
stos
stos
stos
lea
push
push
mov
push
pushl
call
mov
sub
sub
incl
call
test
jne
mov
dec
dec
lea
cmp
mov
jge
mov
sub
push
mov
push
push
pushl
pushl
push
pushl
call
call
test
jne
fldl
mov
sub
push
push
call
push
pushl
mov
lea
push
pushl
add
pop
mov
call
pop
pop
leave
ret
nop
nop
nop
nop
nop
mov
push
mov
push
call
test
jne
lea
push
pushl
movl
call
xor
cmp
sete
leave
ret
or
inc
add
and
into
das
inc
xchg
test
adc
nop
nop
nop
nop
nop
mov
push
mov
pushl
pushl
push
push
push
call
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
push
mov
xor
cmp
je
mov
cmp
je
mov
cmp
je
cmp
je
cmp
jne
add
push
mov
call
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
push
push
push
mov
movl
call
test
je
push
pop
lea
mov
rep
mov
mov
mov
mov
mov
mov
mov
mov
andl
cmpl
mov
jne
push
push
lea
push
call
mov
mov
push
pop
lea
push
mov
lea
rep
mov
push
push
call
test
mov
jne
push
pushl
call
mov
pushl
call
xor
cmp
je
mov
mov
mov
mov
pop
pop
pop
leave
ret
xor
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
mov
test
je
cmpl
je
push
pushl
call
movzwl
lea
push
lea
mov
call
mov
pop
pop
pop
ret
xor
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
mov
mov
mov
cmp
push
jne
test
je
lea
test
jl
cmp
ja
push
push
pushl
call
add
test
je
mov
mov
pushl
mov
pushl
call
incl
xor
inc
pop
pop
pop
ret
xor
inc
jmp
xor
jmp
testb
je
mov
push
mov
push
pop
xor
lea
rep
mov
lea
push
mov
push
push
push
movl
movl
call
test
jne
andb
testb
jne
lea
push
push
push
pushl
call
pop
jmp
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
mov
cmp
je
cmp
jne
cmpl
jne
mov
pushl
call
test
je
andl
push
pop
xor
and
lea
push
lea
rep
lea
mov
push
push
movl
movl
call
mov
test
je
mov
lea
push
push
push
call
mov
mov
push
call
test
je
pushl
call
mov
test
je
mov
push
call
pop
xor
pop
leave
ret
nop
nop
stos
dec
sub
enter
js
rorb
mov
add
into
call
test
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
xorb
jmp
nop
nop
nop
nop
mov
push
mov
push
push
mov
xor
test
je
cmpl
je
pop
mov
pop
pop
ret
call
cmpl
jne
mov
andl
jmp
nop
nop
nop
nop
nop
mov
push
mov
cmpl
je
pushl
pushl
call
mov
mov
pop
ret
nop
nop
nop
nop
nop
cmpl
push
je
mov
cmp
je
mov
sub
push
push
push
call
add
fiadds
jmp
xchg
xchg
out
ljmp
pop
in
lret
add
mov
in
add
scas
add
inc
in
push
push
push
push
push
call
pop
mov
add
add
add
mov
out
jecxz
stc
pop
out
outsl
outsl
add
insl
mov
call
lock
lcall
push
push
lea
push
push
call
add
out
sbbb
aad
add
add
clc
add
in
mov
add
add
ljmp
xrelease
mov
xorl
add
hlt
repz
pop
add
xchg
enter
add
add
sub
pop
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
dec
mov
aam
pop
movsb
add
mov
test
inc
insb
fwait
inc
xchg
int3
stos
clc
ja
add
jno
inc
jmp
dec
add
mov
add
lret
add
xchg
fimull
lods
mov
shlb
inc
jg
je
add
cld
add
push
push
push
push
call
cld
push
call
add
out
add
push
push
add
in
dec
test
mov
sahf
add
lret
fxam
pop
dec
popa
push
mov
fucom
mov
movsl
cmpsb
xchg
lock
lcall
add
xor
push
push
call
addr16
add
dec
inc
inc
add
testl
arpl
xchg
in
add
add
add
add
out
add
add
enter
mov
call
ret
inc
inc
add
rorb
push
push
push
push
call
add
lods
pop
add
test
rorl
pushf
pop
add
lcall
push
xlat
xchg
inc
test
add
loop
sub
pop
xor
push
push
push
push
push
push
push
push
lea
push
call
add
dec
insl
dec
pusha
add
add
mov
scas
lret
mov
add
add
add
add
add
add
movsb
rolb
dec
clc
aad
lahf
jb
add
cwtl
hlt
add
pop
scas
rclb
in
fdivr
lcall
inc
lock
push
push
lea
push
lea
push
push
call
iret
mov
add
jecxz
add
add
fists
idivb
jo
js
repnz
in
xchg
xchg
inc
add
mov
jmp
ja
cltd
add
sub
pop
call
xor
push
push
push
push
push
push
push
push
push
call
jl
int
pop
xlat
jp
add
js
add
inc
add
insb
jnp
inc
rolb
cli
testl
add
sbbl
orl
in
fcompl
inc
cld
push
push
lea
push
push
call
loop
add
mov
jle
mov
loopne
test
cld
jmp
mov
out
push
add
outsb
xchg
shl
sahf
mov
mov
mov
add
xchg
std
into
add
cmpsb
xchg
xchg
lock
sbbb
add
cwtl
test
lock
lcall
rorb
sbb
sahf
push
push
call
cmpsl
pop
sarb
roll
insl
xchg
cmc
scas
add
rcll
pushf
mov
pop
push
xchg
repnz
add
mov
add
insl
mov
dec
into
hlt
rolb
xchg
mov
test
ljmp
pop
add
stos
add
data16
cwtl
in
mov
add
into
dec
add
pop
lds
push
dec
fs
pop
dec
jne
jmp
push
push
call
repnz
add
std
jge
lret
add
lea
xchg
mov
incb
add
cmpsb
jge
xchg
loopne
add
enter
rcrb
icebp
add
jl
sub
pop
xor
push
push
push
push
call
enter
mov
imul
add
test
addr16
xchg
add
add
push
add
mov
int
add
push
test
ret
xorl
add
call
ljmp
fiaddl
ret
incb
mov
in
lock
ret
push
lea
push
lea
push
call
aam
add
in
je
dec
push
push
repz
mov
add
add
insb
dec
outsb
add
stc
insb
add
outsb
push
lcall
fwait
mov
ret
add
inc
push
dec
sub
pop
call
push
lea
push
push
push
push
push
call
cld
add
xchg
outsb
push
loopne
mov
in
repnz
test
add
lods
lods
mov
mov
out
clc
leave
add
mov
add
mov
jbe
in
call
enter
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
lds
add
pop
xchg
add
add
dec
jge
add
inc
add
je
xchg
add
add
loopne
js
add
add
test
add
addb
add
add
movsb
lock
add
add
add
inc
jbe
mov
add
call
lea
push
lea
push
push
push
push
push
push
push
call
jns
inc
fwait
add
pusha
icebp
inc
add
incb
jg
jge
rolb
inc
mov
lods
mov
mov
add
mov
add
add
int
nop
add
add
add
inc
add
add
in
mov
add
loop
outsb
add
add
je
add
std
add
stos
shrb
out
sub
pop
ret
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
repz
add
loop
dec
jae
in
add
add
cli
test
cltd
pop
jl
inc
call
fwait
fs
nop
jle
cli
out
sub
pop
mov
mov
push
lea
push
lea
push
lea
push
push
push
call
pop
cwtl
loope
push
into
add
fldl
xchg
pop
pop
push
addb
inc
add
pop
jo
sti
inc
dec
mov
in
add
xchg
jb
add
nop
test
popa
out
mov
test
xchg
add
add
rolb
in
call
add
push
lea
push
push
push
push
lea
push
push
push
push
push
call
xchg
dec
mov
lret
in
out
in
add
arpl
outsb
mov
test
jg
mov
dec
jl
pop
add
xchg
ror
add
roll
add
pop
mov
rclb
mov
push
add
add
xlat
mov
add
sub
pop
add
push
push
call
lods
add
push
sti
js
addl
add
push
out
out
add
leave
sti
call
add
add
enter
filds
jp
je
mov
enter
movsl
mov
in
clc
pop
mov
push
push
push
push
lea
push
call
inc
loop
pop
mov
rolb
add
add
mov
lahf
mov
lods
add
fadds
inc
fmul
faddl
lahf
shl
push
jb
jge
addr16
mov
lock
lcall
sbb
push
push
push
lea
push
push
push
push
call
out
inc
movsl
push
add
add
add
enter
test
add
imul
add
add
mov
cld
inc
add
stos
ret
stos
test
add
add
add
add
add
inc
add
ret
add
mov
push
jnp
popa
add
in
in
lcall
les
add
push
push
inc
lea
push
or
not
add
sub
shl
shl
sub
add
pop
lea
lea
rol
pop
push
push
lea
push
push
lea
push
push
call
push
add
add
bound
push
out
mov
add
add
inc
lret
lcall
mov
add
icebp
add
add
add
add
stc
gs
mov
fbld
mov
add
sarb
pushf
add
shl
inc
add
jecxz
in
call
pushl
push
lea
push
lea
push
push
push
push
push
call
outsb
je
add
insb
ja
in
add
lea
mov
add
add
add
jae
outsb
add
add
inc
popa
push
iret
add
add
nop
repnz
mov
mov
in
mov
add
add
je
sub
pop
call
push
push
push
push
call
add
sarl
xchg
in
add
push
lds
add
in
push
test
int
add
loope
in
pop
add
add
mov
mov
pop
gs
add
fwait
int3
pop
clc
add
fwait
add
in
jge
int3
add
insl
pop
sub
pop
mov
push
push
push
call
add
dec
call
inc
fistps
arpl
add
add
fistl
sub
pop
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
mov
jmp
scas
jg
inc
mov
jbe
pusha
inc
aad
add
jmp
mov
add
add
rep
add
loopne
lcall
jne
push
push
push
push
push
push
push
push
push
lea
push
call
shl
add
stc
gs
add
add
in
add
roll
add
in
fisubs
add
in
jbe
incb
insb
inc
add
lcall
jne
push
lea
push
lea
push
push
push
push
push
push
call
clc
inc
test
mov
cmpb
xchg
add
mov
loopne
pusha
add
dec
les
jo
fnstenv
outsl
add
dec
xchg
out
dec
test
mov
ljmp
xchg
imul
jle
xchg
add
lods
jo
add
popl
add
jno
add
fdiv
sub
pop
call
push
push
push
push
push
push
call
negl
pop
add
aam
inc
add
xchg
in
add
add
jmp
jge
add
jns
flds
cmpsl
sub
pop
pushl
push
push
push
push
push
push
call
ret
mov
outsb
add
push
mov
push
cmpsb
jmp
add
repz
inc
mov
inc
add
mov
in
jne
call
addb
icebp
lahf
xchg
add
lcall
jne
call
push
push
shr
dec
sub
push
and
add
sub
ror
xor
ror
sub
sub
shl
pop
shr
lea
pop
push
push
lea
push
lea
push
push
call
add
dec
mov
add
dec
add
sti
lods
int
leave
push
mov
add
dec
dec
jae
add
mov
in
pop
pushl
push
push
lea
push
call
add
rolb
cmpsl
xchg
pop
add
add
add
scas
dec
sti
inc
call
mov
test
cld
add
lcall
lds
push
push
push
add
ror
lea
push
and
add
inc
sub
sub
add
sub
shr
sub
pop
add
rol
inc
sub
pop
push
push
push
push
push
push
push
push
push
push
call
push
inc
add
add
add
xchg
je
lds
add
add
out
add
add
xchg
gs
add
add
jnp
fcoml
loop
faddl
push
push
push
call
pusha
test
scas
cli
test
into
push
outsl
add
add
cmpsb
add
pop
add
cli
add
scas
push
neg
add
arpl
jne
push
rol
push
out
add
jb
add
add
sub
pop
call
push
push
call
add
fimuls
xchg
add
rorb
push
movsl
enter
lds
ja
xchg
add
xchg
mov
add
add
pop
inc
mov
add
add
mov
rorb
lock
ret
loopne
add
jns
add
in
clc
pop
mov
push
lea
push
push
push
push
push
lea
push
push
push
push
call
push
jmp
mov
push
out
flds
je
cli
dec
dec
ret
jo
rolb
push
add
mov
xchg
pusha
imul
jl
xchg
add
push
cmc
add
ret
in
fsubrl
jl
add
add
in
fcomps
push
push
push
push
push
push
push
push
push
call
int
add
add
inc
lcall
sti
add
add
movsb
add
out
lea
lret
dec
addr16
add
popf
ficoml
xchg
add
xchg
add
sub
pop
push
push
push
push
push
call
dec
test
shlb
clc
imul
add
jns
add
mov
ja
add
lret
lods
lds
inc
add
mov
mov
sub
pop
mov
push
lea
push
push
push
lea
push
push
call
fadd
add
fwait
lahf
add
add
add
in
addb
dec
cwtl
push
add
outsl
push
cmpsl
add
add
add
fiadds
js
les
add
mov
add
add
out
add
mov
dec
mov
loope
test
cld
add
jo
test
sahf
call
pop
inc
insb
lods
stos
add
testb
add
push
push
push
push
push
lea
push
push
push
push
call
pop
inc
mov
scas
stos
movsl
cmpsl
add
popf
mov
add
stos
push
add
dec
add
outsl
dec
mov
aad
rcl
out
stos
pop
add
mov
cli
subl
add
mov
mov
cmpsb
sti
mov
add
jae
ljmp
sub
pop
add
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
jno
int
add
stos
mov
xchg
scas
jp
lods
push
stos
mov
mov
fwait
popa
fnstcw
xchg
add
xchg
lcall
loopne
js
aam
push
add
in
shll
sub
pop
add
push
lea
push
push
push
lea
push
push
call
rolb
les
rcl
popl
xchg
sti
in
lods
add
mov
add
clc
lcall
mov
gs
sti
add
jle
orb
add
add
add
call
add
dec
add
add
sub
pop
mov
push
push
push
call
js
add
idiv
dec
add
jge
arpl
add
add
ljmp
mov
fildl
in
clc
pop
xor
push
push
lea
push
push
push
push
call
add
jge
pop
mov
pop
lods
cmc
add
repnz
add
xchg
inc
push
mov
mov
xchg
int3
add
pop
leave
mov
outsb
jle
jp
add
mov
jp
add
lds
push
icebp
scas
dec
cmpsl
pop
add
pop
inc
add
mov
mov
cltd
fcmovne
mov
add
push
push
push
call
add
add
push
imul
stc
add
add
sbb
add
add
add
add
mov
add
jo
outsl
mov
add
filds
int3
cmpsb
leave
xchg
lea
in
add
aam
mov
add
lcall
jne
push
push
push
push
push
push
push
lea
push
call
jne
inc
mov
call
in
inc
add
mov
shr
cmpsl
add
inc
add
in
mov
movl
add
pop
lahf
add
movsb
mov
add
in
mov
add
add
cmpsl
pop
mov
add
shll
data16
scas
dec
add
fmul
sub
pop
push
push
push
push
push
push
push
push
push
call
stos
scas
cmpsb
fnstenv
movsb
mov
fisttpl
mov
mov
cmc
add
loopne
rcrl
jno
rcll
js
pop
out
jl
cmp
dec
fadd
imulb
scas
add
mov
add
xchg
push
roll
outsl
xlat
subl
stos
ja
in
loopne
lcall
inc
or
pop
daa
xor
lea
push
push
push
push
push
push
push
push
call
movb
cmpsl
mov
xchg
js
add
add
inc
js
pop
in
enter
pop
add
cltd
mov
dec
add
popf
cli
push
out
mov
add
pop
test
add
add
xlat
push
mov
ja
add
xchg
imul
out
sub
pop
xor
push
push
lea
push
call
into
inc
mov
add
jge
add
imul
stc
add
testb
hlt
mov
jge
add
add
lds
outsb
jg
add
cmc
fildl
xchg
pop
fldenv
pop
jb
addr16
out
sub
pop
add
push
push
push
push
push
call
cltd
add
cmc
inc
add
testb
stos
add
inc
xchg
ja
inc
cli
add
pusha
inc
lret
sti
add
xchg
jbe
add
test
faddl
lods
fbstp
popa
imul
in
in
pop
add
push
push
push
push
push
lea
push
push
call
jnp
inc
lods
stc
lods
enter
dec
movsb
add
jmp
into
lods
push
in
jns
gs
subl
lret
popf
out
ljmp
repnz
nop
add
add
add
xchg
mov
pushf
add
out
xlat
int3
xchg
add
outsb
inc
roll
loop
test
add
add
add
mov
cwtl
add
sub
pop
pop
push
push
push
call
test
inc
add
jae
add
add
add
fdivrl
push
add
nop
add
scas
fistpll
add
add
mov
sub
pop
mov
xor
push
push
lea
push
push
lea
push
call
out
iret
xchg
add
add
add
in
movl
stos
cmpsl
int3
stos
add
add
mov
push
jecxz
add
aad
xchg
dec
jnp
add
xchg
add
mov
outsb
icebp
iret
add
dec
test
mov
jno
lods
js
std
add
filds
xchg
sub
pop
push
push
push
lea
push
push
call
add
outsb
add
mov
add
jp
mov
mov
pusha
clc
push
push
fdivr
dec
movsb
fldcw
lcall
scas
lods
pop
pop
mov
out
scas
aam
xchg
iret
lock
loope
xlat
pop
icebp
sti
mov
add
mov
addr16
test
fwait
dec
sub
pop
mov
xor
push
push
call
pop
repz
add
mov
add
out
mov
lret
add
ja
pop
add
add
jg
mov
lcall
imul
gs
aam
add
add
jmp
bound
stos
jnp
add
add
in
clc
lcall
enter
lea
push
call
rol
push
add
jmp
in
dec
add
xchg
add
add
mov
lea
mov
add
aad
gs
inc
rolb
inc
jmp
mov
pop
sbbl
imul
push
dec
lret
popw
out
mov
mov
dec
sub
pop
pop
rep
push
push
lea
push
push
push
lea
push
push
push
push
push
call
dec
push
push
repnz
add
nop
lods
pop
in
int
add
jge
in
add
bound
dec
add
test
add
add
decb
std
int
sahf
cltd
mov
mov
push
xchg
aam
add
sub
pop
pop
push
push
push
lea
push
push
push
push
call
ffreep
add
add
xchg
add
pusha
leave
add
mov
mov
stc
cmpsb
sti
sahf
roll
dec
iret
ja
scas
jbe
add
aad
out
mov
jnp
mov
jne
cwtl
fmuls
pop
mov
add
push
push
call
lock
jmp
imul
add
in
mov
ret
neg
out
add
cwtl
out
cmpb
lcall
ret
add
add
add
push
push
lea
push
push
call
add
mov
fs
add
add
mov
jb
shl
int3
ret
jmp
pop
mov
inc
add
dec
add
fidivs
ljmp
outsl
add
pop
inc
mov
faddl
inc
and
pop
daa
xor
add
xchg
mov
stos
push
push
call
outsb
add
inc
jnp
iret
add
mov
add
mov
addr16
pop
mov
stos
add
add
mov
cmc
cmpsl
cli
add
add
rcr
push
in
lock
lcall
add
push
lea
push
push
push
push
lea
push
push
call
add
cwtl
addb
add
out
insl
add
push
cmpsl
in
mov
out
js
mov
cwtl
test
add
dec
jmp
stc
add
push
mov
jae
aad
mov
add
repz
add
jbe
mov
mov
lods
orl
pop
add
push
lea
push
call
roll
add
add
add
rcrl
stc
add
jmp
mov
in
fdivl
add
add
fiaddl
js
stos
out
out
add
stc
add
pop
mov
xor
push
push
push
push
push
lea
push
push
call
push
mov
xchg
xchg
add
add
aam
add
neg
jmp
add
add
add
sub
pop
mov
xor
push
push
call
mov
inc
insl
pop
jmp
add
ret
jge
add
add
loop
dec
inc
lret
add
hlt
popa
les
nop
jne
dec
add
fiadds
xchg
jbe
mov
fiaddl
lods
push
insl
mov
scas
outsl
out
add
add
imul
add
push
push
lea
push
lea
push
push
push
call
fcoms
in
add
pop
test
add
dec
add
add
jge
mov
add
add
fwait
add
testl
call
push
push
lea
push
push
push
push
push
push
call
push
flds
xchg
add
testb
add
jne
imul
aad
andl
rcrl
iretw
add
fsubrs
repnz
ret
and
ret
sbb
lea
not
rol
sub
ror
dec
pop
dec
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
add
add
add
add
in
add
add
lahf
fiadds
add
xchg
xchg
rcrl
ret
mov
add
gs
add
add
add
add
sub
pop
pushl
push
push
lea
push
call
xchg
in
test
not
add
test
data16
roll
jo
add
stc
add
add
lret
xchg
add
push
roll
xchg
outsl
add
jp
roll
stc
jl
flds
nop
mov
ljmp
sub
pop
call
push
push
call
mov
xchg
add
mov
scas
mov
add
add
mov
clc
pushf
stc
xlat
mov
dec
mov
nop
add
int3
cmpsl
cmpsl
std
clc
test
insb
add
xchg
xlat
mov
pop
add
add
incb
add
out
rcll
add
add
in
clc
pop
push
push
push
not
push
xor
add
add
inc
sub
shl
not
add
pop
ror
pop
push
push
lea
push
push
push
push
push
call
dec
jg
xchg
add
add
add
add
lods
add
add
mov
jns
rolb
sub
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
jmp
test
add
ret
movsl
aam
into
lcall
mov
cmpsl
add
jo
add
out
mov
loop
sub
pop
call
mov
push
lea
push
push
lea
push
push
push
push
push
lea
push
push
call
ja
jns
add
bound
stos
hlt
lahf
inc
dec
push
js
add
cmc
jb
add
movsl
imul
lcall
push
push
push
push
push
push
push
push
lea
push
lea
push
call
out
add
xchg
add
push
addr16
add
add
lcall
add
dec
in
int3
jae
mov
jle
add
add
jecxz
jo
cld
lret
add
repnz
add
outsl
popa
add
outsb
jnp
sub
pop
push
mov
push
push
push
push
lea
push
call
addr16
movsb
inc
scas
add
test
sahf
inc
add
add
mov
gs
push
mov
add
jne
push
add
mov
push
add
repnz
add
add
add
jns
mov
addl
in
add
push
shl
sub
xor
add
pop
add
push
pop
mov
push
push
push
push
push
push
push
lea
push
lea
push
push
push
call
add
inc
inc
dec
lret
add
mov
jbe
push
out
iret
mov
add
in
fdivrs
lcall
add
add
mov
fwait
add
mov
mov
add
add
nop
xchg
jne
mov
fcomps
xor
push
push
push
push
call
sti
dec
ja
fs
inc
pop
xchg
test
push
add
roll
add
jg
cld
mov
add
filds
lods
push
faddl
add
sub
pop
add
push
lea
push
call
push
pop
repz
inc
inc
ror
xchg
mov
out
ja
lcall
mov
stc
addr16
mov
jecxz
outsb
xchg
add
add
add
cli
add
dec
sub
pop
add
push
push
lea
push
push
lea
push
push
call
add
add
dec
lahf
cld
push
mov
add
fildl
bnd
add
add
mov
fwait
out
mov
add
add
jle
add
rorl
sti
in
movsb
lea
push
push
push
push
push
call
popa
lods
imul
cltd
cltd
lret
dec
pushf
add
dec
jp
testl
add
bound
out
icebp
lock
add
add
mov
add
sub
pop
mov
xor
push
dec
sub
rol
shr
pop
add
pop
push
inc
xor
pop
mov
xor
push
push
push
lea
push
call
in
mov
add
add
add
push
shrl
add
addb
test
lahf
add
mov
lcall
add
lcall
movsb
push
push
lea
push
push
lea
push
push
push
push
call
mov
inc
mov
testb
lahf
cli
fidivl
test
mov
shr
add
mov
add
add
sub
pop
mov
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
popl
popa
inc
lock
add
add
mov
dec
xchg
addl
add
add
jns
dec
xchg
push
mov
aam
addb
add
fsubp
add
into
mov
lock
push
fildl
fs
shll
sub
pop
xor
push
push
push
lea
push
call
push
add
pop
add
add
mov
test
add
fildl
add
lcall
in
lock
add
push
push
push
push
push
push
push
push
call
roll
outsl
mov
xchg
mov
xchg
xchg
xchg
mov
add
add
pop
cwtl
add
pop
call
pop
enter
dec
mov
shll
jno
add
push
addl
outsb
scas
rolb
add
add
out
lea
sub
pop
or
je
push
sub
pop
mov
xor
push
push
lea
push
push
push
lea
push
call
add
iret
pop
add
movsb
arpl
lcall
jns
test
clc
ret
add
add
test
pop
aad
lea
loopne
out
data16
lods
jle
into
pushf
enter
pushf
subb
lcall
push
sbb
pop
daa
xor
adc
ja
lret
xchg
in
add
adc
call
mov
xchg
add
jbe
fwait
jle
mov
pop
jns
add
jno
arpl
popl
xchg
xorb
sahf
cmpsl
enter
rolb
mov
mov
mov
add
je
add
add
mov
int
in
imul
add
rcll
sub
pop
xor
push
push
push
push
push
lea
push
call
add
mov
xchg
mov
add
adc
test
dec
add
add
hlt
push
in
mov
dec
jns
jns
hlt
add
outsl
dec
push
add
gs
inc
std
xchg
jnp
stos
dec
add
inc
repnz
ljmp
lcall
les
push
lea
push
push
push
push
push
call
dec
add
pop
mov
mov
add
add
lcall
dec
add
aam
add
add
add
add
add
arpl
lds
add
repnz
push
push
push
call
inc
shrb
leave
add
xchg
fisubrs
repz
std
int3
jns
add
fbld
cld
out
scas
add
cli
rcrb
add
hlt
jmp
in
mov
add
mov
sub
pop
push
push
push
push
push
push
push
push
call
inc
test
add
rolb
mov
xlat
pop
scas
inc
add
iret
xorb
add
add
arpl
add
icebp
pop
add
addl
xchg
add
jno
repz
in
lcall
inc
or
xor
xchg
sahf
outsb
les
push
push
push
lea
push
call
add
add
std
xor
mov
jg
stc
hlt
add
inc
jp
add
add
mov
inc
add
mov
pop
pop
add
push
loope
xchg
push
pop
mov
insb
lds
jno
ret
pop
sub
pop
add
push
rol
not
add
pop
pop
push
sub
pop
rep
mov
push
push
push
call
mov
add
aam
add
fidivrl
inc
add
subb
popf
in
mov
add
jae
mov
incb
pop
jl
icebp
insb
add
add
add
add
add
jno
add
dec
popl
push
add
loop
add
add
dec
cmc
xchg
jl
dec
add
in
clc
pop
xor
push
push
push
call
fimuls
addl
aam
add
add
jne
add
add
test
mov
add
xchg
add
add
iret
mov
add
push
push
in
in
hlt
lcall
les
lea
push
push
lea
push
call
add
cmpsb
jo
mov
gs
adcb
add
pop
add
subl
add
test
sahf
imul
mov
add
mov
push
pop
xchg
pusha
inc
mov
andb
add
add
aam
xchg
data16
jl
outsl
icebp
sub
pop
or
je
push
push
lea
push
push
push
call
fldenv
xchg
add
test
add
add
jmp
loop
add
out
jne
pushf
sti
arpl
add
add
mov
outsb
add
lahf
arpl
add
jno
test
jnp
icebp
mov
sub
pop
mov
push
push
push
call
movsl
outsb
mov
mov
mov
jg
mov
jmp
stos
jo
inc
imul
mov
inc
arpl
inc
push
mov
push
scas
andl
in
mov
mov
lret
add
xchg
xchg
inc
mov
add
stos
dec
add
add
add
mov
clc
iret
ljmp
sub
add
lea
pop
rep
push
push
push
push
push
push
lea
push
push
push
call
pusha
add
add
iret
dec
push
cltd
lret
out
faddl
xchg
add
add
add
add
mov
aam
int3
lahf
mov
add
test
lret
ja
andl
mov
xchg
mov
lcall
push
push
add
xor
push
and
add
dec
rol
sub
sub
pop
sub
dec
pop
push
push
push
call
out
in
mov
je
loop
jmp
in
andb
add
fcmovne
bound
jno
inc
add
fiadds
loope
pop
leave
jmp
add
add
sbbb
in
hlt
pop
pop
push
push
call
mov
mov
flds
xchg
add
add
negb
add
inc
add
ja
scas
add
add
imul
mov
insb
movsl
repnz
rcrb
add
mov
in
clc
pop
mov
push
inc
pop
mov
push
sub
pop
mov
push
lea
push
push
lea
push
push
push
lea
push
push
call
mov
mov
addr16
fdivrs
testb
jmp
push
cli
iret
add
add
push
lret
outsl
jns
lea
add
add
pop
imul
lcall
loopne
push
add
sub
lea
add
pop
mov
push
xor
ror
rol
ror
pop
add
push
push
push
push
push
call
add
dec
add
add
repnz
add
add
popf
pop
addl
jae
add
loopew
add
clc
add
roll
gs
ja
testl
add
sub
pop
push
push
pop
push
push
push
push
push
push
push
push
push
lea
push
push
push
call
roll
cmc
test
int
mov
mov
jbe
inc
cmc
add
bound
add
jg
lcall
add
inc
add
mov
in
add
cwtl
lcall
xchg
jecxz
add
test
xlat
jns
add
add
in
fcomps
push
push
dec
sub
shr
push
xor
add
sub
xor
sub
shl
sub
inc
pop
add
ror
pop
push
inc
pop
pushl
call
push
push
push
lea
push
push
push
call
add
inc
lahf
rcll
test
add
inc
pop
add
add
lahf
jg
add
add
iret
add
lcall
add
out
push
inc
add
call
call
push
push
add
push
push
pop
add
dec
rol
sub
shl
inc
pop
shl
inc
pop
push
pop
pushl
push
push
push
push
call
mov
add
out
add
jbe
test
repnz
mov
mov
pop
jg
pop
mov
xchg
add
jmp
subl
push
test
push
movb
test
lcall
xchg
add
push
push
push
push
push
call
lds
add
pop
in
jmp
add
cmc
aad
imul
loopne
add
adc
in
jbe
mov
mov
mov
lcall
shrb
cmp
push
add
sub
push
xor
add
sub
shr
dec
sub
shr
xor
rol
pop
add
shr
pop
push
push
push
call
out
test
outsl
add
lcall
xchg
pop
xorl
popf
pusha
pusha
add
test
call
test
sti
add
xchg
add
add
inc
jmp
ja
sub
pop
pushl
push
push
push
push
push
push
lea
push
lea
push
push
call
dec
js
data16
js
test
lods
lea
jl
fildl
mov
xchg
in
xchg
mov
addr16
add
jecxz
add
frstor
dec
jno
add
mov
stos
mov
inc
mov
mov
ret
loop
in
fdivr
lcall
sbb
dec
rol
pop
call
push
push
inc
shr
rol
sub
push
sub
add
xor
dec
sub
xor
shl
sub
dec
pop
sub
sub
pop
push
add
ror
pop
pushl
call
push
lea
push
call
add
pushf
add
add
insl
mov
mov
inc
stos
pop
add
loop
mov
in
add
add
add
lret
popl
xchg
dec
add
jbe
add
test
add
imul
add
xchg
mov
pushf
cld
push
xchg
add
add
lcall
shrb
or
iret
push
lea
ror
push
xor
add
sub
sub
shr
xor
pop
inc
sub
ror
add
pop
push
push
push
push
push
push
lea
push
push
call
loopne
je
cld
sti
push
xchg
int3
push
add
add
add
add
testb
jnp
jae
add
inc
popa
inc
add
bound
add
add
mov
xchg
jl
in
loopne
pushl
push
push
push
call
add
shrb
test
add
add
add
inc
add
add
out
aam
lea
jmp
hlt
lcall
mov
add
call
push
push
push
lea
push
push
call
add
test
repnz
test
nop
aad
dec
jl
inc
out
call
mov
add
push
jo
add
push
inc
add
ret
fwait
mov
insl
pop
iret
lcall
pop
add
mov
in
in
pop
mov
lea
push
sub
lea
lea
pop
sub
push
push
push
lea
push
call
mov
add
mov
add
pop
std
lods
add
stc
data16
test
in
add
data16
mov
add
movsb
repnz
cmc
stos
jnp
nop
sub
pop
mov
shr
push
dec
ror
sub
pop
add
mov
push
push
call
add
add
add
dec
fwait
cmpsl
add
test
add
add
xchg
mov
jo
inc
addb
scas
out
int3
out
dec
add
in
clc
pop
mov
add
push
push
lea
push
push
push
call
dec
add
int
repz
jnp
add
add
rcrl
scas
push
pop
add
in
out
lds
cld
add
add
shlb
push
push
push
push
call
stos
imul
add
jmp
fildl
stos
jae
push
add
lods
push
xchg
add
loope
sti
add
mov
add
lcall
xchg
add
mov
loopne
sub
pop
mov
mov
push
push
lea
push
push
lea
push
call
mov
subl
cli
subb
inc
pop
mov
add
loop
mov
add
cmc
mov
xchg
dec
add
add
addl
add
pop
add
add
add
add
add
std
cltd
loopne
in
in
lcall
sbb
test
add
add
mov
sbb
stos
cs
call
inc
add
jae
popf
add
std
pop
mov
push
outsb
mov
mov
ret
add
mov
pop
test
icebp
movl
push
add
roll
lcall
pop
fs
push
lea
not
rol
not
pop
mov
push
xor
pop
movl
jmp
push
push
lea
push
call
pushf
pushf
addl
push
icebp
js
cld
push
lods
shll
aam
xchg
out
lcall
add
push
sub
pop
mov
push
push
push
push
call
jbe
mov
add
xchg
cmpb
add
mov
add
addr16
mov
icebp
mov
mov
lds
jnp
flds
mov
add
pop
mov
push
push
push
push
push
push
call
push
icebp
jmp
add
add
cli
data16
mov
xchg
jnp
pusha
add
inc
popf
mov
lods
add
add
xchg
repz
dec
add
mov
gs
add
inc
add
pop
lods
lods
xchg
icebp
out
xchg
mov
add
fs
add
mov
insl
sub
pop
sub
jne
push
push
push
push
push
push
call
xchg
mov
add
mov
jp
add
jle
clc
lret
andl
call
mov
push
push
push
push
push
push
push
push
push
call
insl
out
add
cli
mov
add
insb
dec
faddl
jge
add
pop
popf
call
pop
out
xlat
dec
cwtl
add
sub
pop
movl
jmp
push
sub
lea
shl
pop
mov
mov
push
dec
pop
cmp
jne
push
push
push
lea
push
push
push
push
push
push
lea
push
call
dec
lret
add
mov
insb
add
arpl
add
add
lahf
add
mov
dec
fmull
js
sahf
mov
inc
ret
int3
add
loope
lahf
mov
add
add
lcall
inc
adc
add
add
add
fadd
jecxz
add
pop
jmp
push
push
push
push
push
push
push
push
lea
push
push
call
repz
pop
addl
add
leave
addr16
jle
out
pop
add
add
mov
xchg
mov
mov
inc
in
add
add
icebp
ret
push
add
repnz
add
dec
sti
add
movsb
insl
add
fdivr
lcall
pushl
push
push
push
push
call
add
mov
mov
imul
mov
add
add
cltd
cld
push
fidivs
jo
popf
cwtl
xorb
stos
add
jmp
addb
add
sar
roll
inc
jns
push
add
add
add
cli
add
mov
push
sub
xor
lea
xor
pop
mov
mov
push
push
rol
add
shl
push
and
add
sub
shl
sub
ror
sub
xor
pop
pop
push
push
push
push
push
lea
push
push
call
dec
faddl
gs
movl
add
inc
imul
scas
data16
add
add
sti
xchg
add
cmc
cli
add
data16
add
add
add
add
add
add
mov
testl
add
in
push
call
push
shl
inc
sub
sub
pop
cmpl
je
push
push
push
sub
add
ror
xor
not
sub
not
pop
dec
shl
pop
push
pop
push
push
sub
dec
pop
call
push
push
push
push
call
testl
xorl
cli
cltd
addl
add
dec
dec
add
add
shl
cmpsb
xchg
scas
jl
je
mov
jbe
mov
aam
aam
popf
jnp
add
push
mov
mov
mov
add
add
lcall
cmp
add
add
test
lea
fmuls
ror
push
xor
add
shl
shr
lea
sub
pop
pop
push
lea
shl
add
pop
push
call
push
lea
push
push
call
lds
add
xchg
test
add
xchg
addl
out
jge
push
rol
lea
ficomps
mov
test
add
jp
inc
ret
push
fs
jle
dec
add
add
lcall
cmp
rol
je
push
push
push
and
add
shl
sub
ror
dec
pop
xor
pop
push
ror
ror
add
pop
push
call
push
lea
push
push
push
push
push
push
lea
push
push
call
ret
add
add
push
imul
enter
rol
out
icebp
popf
fistpll
mov
inc
popf
xchg
je
dec
clc
jae
out
jae
std
xchg
mov
bound
divb
inc
push
add
xchg
xchg
add
jg
repz
mov
add
cmpsl
inc
lods
cwtl
dec
mov
add
test
mov
inc
test
js
ret
int3
je
push
push
dec
rol
push
sub
add
xor
not
inc
rol
sub
xor
add
sub
pop
shl
sub
add
dec
pop
push
push
push
lea
push
push
push
push
lea
push
call
dec
out
jmp
lock
mov
repz
lea
add
add
js
jno
add
mov
stc
inc
enter
lock
pop
push
xchg
mov
fldcw
add
add
mov
int
mov
repnz
fildl
shr
jp
add
add
add
sub
pop
push
push
inc
pop
call
push
lea
push
call
push
xchg
dec
push
js
add
mov
jecxz
jae
mov
rorl
add
popf
imul
push
add
add
pushf
lcall
xchg
sahf
repnz
add
pusha
pop
outsb
inc
add
insb
add
cmpl
je
push
push
lea
add
push
push
pop
add
rol
not
sub
add
pop
shr
not
pop
push
not
sub
shr
pop
push
push
shl
not
shl
dec
pop
call
cmpl
je
push
not
inc
not
pop
cmpl
je
push
push
rol
push
xor
add
ror
sub
sub
ror
dec
pop
ror
inc
ror
pop
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
jp
add
mov
push
push
iret
add
add
aam
pop
shr
ljmp
mov
lahf
out
mov
add
pushf
mov
add
loop
test
aam
add
sti
shll
test
jns
ret
add
stos
dec
in
add
add
lcall
push
lea
push
lea
push
lea
push
push
push
push
lea
push
call
rolb
pop
push
repz
out
add
cmpsb
lahf
add
xchg
add
scas
roll
add
iret
xchg
inc
out
cltd
push
inc
dec
push
int3
inc
out
xchg
jbe
mov
inc
add
add
add
in
loopne
lcall
jge
add
cmpl
je
push
push
sub
push
and
add
lea
add
lea
sub
shl
add
rol
pop
add
xor
dec
pop
push
ror
pop
push
call
push
push
lea
push
push
call
add
add
add
add
imul
out
dec
add
add
xchg
push
jmp
dec
cltd
stos
ja
add
jecxz
out
add
mov
add
add
in
lock
cmpl
jne
push
dec
pop
mov
push
push
push
push
call
cmpsb
cmc
mov
insl
add
popa
cmpsb
mov
add
movl
inc
mov
stc
pop
add
sarb
clc
out
pop
sub
pop
movl
push
rol
add
xor
pop
jmp
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
push
jbe
add
cli
popl
in
enter
add
push
movsl
dec
add
add
addr16
test
mov
outsb
test
push
jmp
repnz
imul
mov
orb
shl
xchg
add
ret
nop
jecxz
add
add
add
dec
sub
pop
xor
pop
push
push
push
push
call
xchg
pop
shrb
js
xchg
add
lds
cli
push
clc
aam
add
add
imul
add
add
into
dec
add
push
dec
add
test
aad
jns
jb
in
push
inc
add
add
add
mov
lcall
push
push
push
call
add
dec
add
add
fs
add
push
mov
lea
std
jecxz
mov
arpl
test
ljmp
sbbl
pop
pop
pop
push
xor
pop
leave
ret
push
sub
pop
push
push
ror
shr
add
pop
mov
push
push
call
add
push
add
push
add
loop
add
jg
add
add
xchg
add
incb
hlt
push
xor
pop
cmpl
jne
push
push
inc
add
push
xor
add
lea
dec
sub
rol
shr
pop
sub
add
lea
pop
push
not
pop
pushl
push
push
push
push
push
push
call
ja
add
inc
add
stos
add
faddl
pop
cmpsl
pusha
pop
mov
lods
testl
add
jp
add
add
nop
push
inc
dec
xchg
fcom
add
add
pop
xlat
js
add
lods
add
movb
cli
add
mov
dec
add
test
call
push
push
lea
push
push
call
sti
pusha
fcmovnb
pop
shl
test
push
ret
jno
add
addl
arpl
push
in
lods
add
pop
pop
jno
jb
sub
pop
push
push
push
lea
push
push
push
push
push
call
mov
test
add
jl
add
jecxz
cmc
sarl
jb
lahf
ret
jle
out
mov
add
dec
sahf
shl
dec
xchg
scas
add
mov
in
filds
add
add
jmp
in
ret
aad
xchg
sub
pop
call
jmp
push
push
lea
push
lea
push
push
call
sahf
pop
add
test
push
xorl
insb
iret
rclb
pop
add
jnp
add
xlat
add
add
in
sub
pop
cmpl
jne
mov
push
push
push
push
push
push
push
call
fadds
xchg
in
mov
fadds
jmp
add
add
clc
push
les
lret
add
add
cmc
je
clc
jo
sbbl
add
test
std
add
fimull
out
scas
cmc
add
popa
into
ror
mov
add
push
inc
add
nop
add
cmp
mov
movsl
aas
lea
push
lea
push
push
push
push
call
cmpsb
fs
jne
in
dec
mov
push
mov
fistpll
in
inc
lods
add
xchg
add
add
inc
icebp
fwait
jo
imul
add
test
mov
add
push
outsl
lcall
add
cmpsl
lea
mov
pop
jmp
cmpl
jne
push
push
sub
inc
not
push
xor
add
sub
inc
lea
xor
pop
not
sub
pop
push
push
push
push
lea
push
push
push
push
call
pop
add
std
repnz
add
dec
pop
xchg
stos
mov
cld
scas
mov
inc
fcomip
mov
dec
dec
outsl
pusha
pop
fdivrp
add
in
add
add
sar
cli
sarb
jo
lcall
loopne
lcall
jne
push
inc
inc
sub
pop
call
push
push
push
call
jns
jno
ja
arpl
mov
push
icebp
cltd
push
jle
imul
dec
add
movsl
add
mov
mov
call
gs
mov
lock
add
lcall
bound
add
mov
add
push
iret
enter
div
add
add
add
rclb
jmp
cmpl
jne
push
not
sub
pop
mov
push
shl
lea
pop
mov
push
add
shr
lea
ror
pop
push
push
lea
push
push
push
lea
push
push
push
call
add
rcll
add
lock
add
in
mov
add
addr16
jl
mov
jne
inc
out
add
xchg
add
add
lahf
jp
hlt
add
add
add
pop
insb
gs
add
int3
add
add
add
lock
pop
lea
push
push
shr
dec
lea
push
or
inc
add
shl
shl
shr
sub
shl
xor
ror
pop
dec
shl
lea
pop
push
lea
push
call
lock
sahf
fs
stos
rclb
nop
sahf
test
orb
mov
cld
outsb
add
mov
test
dec
add
pop
fsubrs
push
push
push
fxtract
add
inc
jno
enter
ret
add
dec
pop
popa
sub
pop
pushl
push
dec
add
pop
call
push
inc
not
dec
pop
push
push
push
push
push
push
push
push
push
call
test
dec
cmpsb
out
add
mov
add
add
inc
into
fsubrl
cld
cli
bound
jg
ret
fldl
add
add
sub
pop
call
push
push
add
add
push
sub
add
add
dec
sub
pop
shr
add
shr
rol
pop
push
push
push
push
push
push
call
aad
dec
lret
add
repnz
ljmp
arpl
push
mov
add
add
add
shl
add
ret
add
lcall
jne
call
push
push
call
mov
dec
ret
mov
add
jge
pop
sti
lret
cmpsw
jecxz
ret
add
xchg
add
add
push
addr16
add
jle
outsl
out
insl
mov
add
add
mov
add
add
imul
call
mov
push
push
sub
sub
inc
lea
push
or
not
add
sub
sub
inc
pop
xor
add
add
pop
push
push
push
lea
push
call
add
add
jbe
lcall
inc
add
add
sahf
lret
add
add
add
lahf
add
mov
rorb
add
push
js
add
add
test
test
loope
rolb
add
lahf
add
mov
sub
pop
pushl
push
lea
push
lea
push
push
lea
push
call
add
add
add
xlat
add
mov
xchg
jl
addb
push
out
stos
push
loop
add
mov
push
xchg
cmpsl
leave
jle
add
fstl
imul
sti
add
arpl
xchg
out
mov
jle
add
rolb
imul
int3
sub
pop
call
push
ror
sub
pop
mov
push
push
push
push
push
call
add
pop
push
add
xchg
jne
mov
add
fs
add
add
into
mov
add
imul
rolb
imul
je
roll
int3
jno
jbe
mov
lea
add
dec
jne
cmp
sub
pop
lea
push
push
sub
push
or
not
add
add
lea
not
sub
add
ror
inc
pop
add
pop
push
sub
pop
pushl
push
xor
add
dec
pop
call
push
dec
inc
pop
push
push
ror
pop
push
push
dec
sub
add
pop
push
push
push
push
call
iret
add
fdivs
pushf
inc
testl
add
test
repnz
pop
add
jmp
fcompl
jo
ljmp
out
add
add
xchg
add
mov
insl
add
lcall
jne
push
push
shl
pop
pushl
push
push
push
ror
add
push
or
not
add
shl
lea
sub
sub
inc
sub
pop
sub
xor
pop
push
push
push
push
push
push
push
push
call
cld
aad
mov
cld
dec
xlat
add
in
jne
popa
add
pop
fisubl
pop
cwtl
jae
testl
shl
xchg
add
mov
ret
inc
rolb
mov
gs
bound
filds
add
lcall
shrb
faddl
aaa
push
sub
push
sub
add
xor
ror
ror
sub
add
pop
sub
rol
dec
sub
pop
push
push
push
push
push
push
push
call
add
fldl
je
popl
dec
movb
dec
in
loop
add
mov
stc
add
add
inc
xchg
add
pop
insl
jl
ret
shl
mov
add
bound
add
rclb
mov
add
jmp
add
in
in
pushl
push
push
lea
push
push
push
call
into
push
cmpsl
mov
ja
fbstp
mov
test
add
mov
cld
dec
add
out
add
vpsrad
add
inc
jno
fwait
xchg
add
push
xlat
js
push
fsubp
loope
add
add
in
in
lcall
test
add
push
push
lea
push
push
call
add
outsb
repz
hlt
add
add
jo
hlt
shll
mov
enter
mov
imul
add
int3
dec
pop
add
xchg
add
cltd
mov
ret
shl
cmc
add
shrb
cmpsb
aam
push
lea
dec
push
xor
add
add
sub
xor
rol
shl
pop
dec
pop
push
shr
lea
pop
pushl
call
push
add
lea
shl
pop
lea
push
add
xor
pop
push
push
sub
pop
call
push
push
sub
xor
sub
push
xor
add
sub
pop
add
not
pop
push
not
ror
pop
pushl
push
push
call
stos
mov
aad
push
push
repz
dec
add
mov
loope
rcl
in
pop
into
dec
repz
imul
mov
mov
add
lcall
push
sbb
add
call
xchg
ja
cmp
sub
push
testl
add
pop
mov
dec
mov
out
pop
mov
xchg
mov
add
dec
add
mov
scas
mov
stos
jo
inc
stos
push
inc
rolb
add
add
inc
add
insl
add
add
push
jmp
mov
in
arpl
lcall
push
lea
push
call
loop
in
add
iret
xchg
inc
mov
push
imul
mov
fstpt
add
add
mov
mov
dec
outsb
fs
jmp
add
jo
mov
add
add
mov
cli
ljmp
loop
lret
mov
jne
repnz
shrb
push
imul
inc
push
or
not
add
sub
sub
sub
pop
rol
shr
sub
pop
push
push
lea
push
lea
push
call
insl
fs
push
dec
addr16
aam
inc
fadds
dec
add
pop
push
mov
test
push
cmpsl
add
add
add
pusha
rol
add
add
mov
pop
dec
out
cmpsb
mov
in
lock
pushl
push
sub
inc
pop
call
push
lea
push
push
push
push
push
push
push
call
stos
inc
faddl
add
stos
in
add
push
outsb
dec
add
jnp
ret
dec
xchg
add
add
dec
popa
imul
popl
shll
loopne
in
addl
dec
add
addl
mov
add
add
ljmp
in
loopne
lcall
shrb
sub
xor
or
not
add
shr
sub
inc
pop
inc
pop
push
ror
pop
pushl
call
push
lea
push
push
call
jne
add
push
xchg
jge
mov
add
sti
add
add
add
inc
inc
jo
add
add
repnz
pop
mov
mov
mov
add
mov
icebp
add
js
add
mov
sub
pop
call
push
push
xor
ror
xor
add
push
push
pop
add
add
sub
shl
inc
shr
pop
inc
dec
lea
inc
pop
push
inc
not
dec
pop
pushl
push
sub
ror
pop
call
call
push
inc
sub
pop
pop
dec
jne
push
push
push
push
push
push
lea
push
push
call
lods
jno
shr
pop
pop
je
add
xchg
add
jno
neg
add
mov
xchg
inc
in
pushf
push
cli
iret
add
cld
fldlg2
add
cld
lret
pop
add
stos
into
mov
pop
nop
add
sub
pop
lea
push
ror
ror
pop
lea
push
push
add
inc
dec
push
sub
add
inc
rol
sub
shl
not
pop
rol
shl
add
shr
pop
push
lea
push
push
push
push
push
push
push
push
lea
push
call
int3
add
out
clc
add
add
movsl
leave
pop
notb
repz
pushf
je
mov
movsl
add
mov
mov
mov
cltd
add
fmul
rcr
add
in
fdivr
lcall
jne
call
push
lea
add
pop
mov
call
push
xor
ror
pop
lea
push
push
add
push
or
inc
add
add
lea
sub
not
dec
pop
lea
add
xor
add
pop
push
push
lea
push
call
mov
add
rolb
mov
inc
add
jbe
ja
ljmp
add
add
orl
mov
add
add
pushf
push
xchg
orl
add
mov
mov
ret
add
clc
add
js
add
mov
inc
add
push
mov
aad
sub
pop
pushl
push
lea
shl
pop
call
push
push
lea
push
push
push
push
call
loope
movsl
dec
mov
cmpsl
xchg
add
mov
mov
jl
aam
popf
inc
add
add
add
out
add
cmpsl
repz
mov
hlt
dec
arpl
divb
rcl
add
ret
sub
pop
push
push
pop
call
push
push
push
sub
add
ror
sub
rol
sub
xor
pop
sub
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
add
add
add
mov
cmpsb
loopne
loopne
arpl
mov
add
jb
mov
mov
jno
movsb
sti
inc
aad
jno
add
std
add
xchg
add
add
mov
xchg
inc
movsb
rorl
int
mov
arpl
in
xlat
popf
mov
pop
sub
pop
pushl
push
inc
pop
call
push
shl
pop
call
mov
push
push
call
lods
add
mov
add
add
cmpl
out
aad
mov
add
loopne
xchg
iret
add
scas
addb
ja
xchg
pop
shl
push
push
popl
cmpsl
mov
mov
add
xchg
rolb
xchg
lret
pop
fiadds
add
fmul
sub
pop
lea
push
push
lea
dec
xor
lea
push
or
not
add
shr
sub
rol
shr
sub
pop
pop
push
xor
shl
inc
pop
pushl
push
add
dec
pop
call
lea
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
lea
push
call
int
data16
outsb
enter
jae
xchg
push
scas
add
add
add
jg
add
mov
test
add
popf
sti
ret
fldl
fiaddl
add
sub
pop
push
push
push
push
call
add
ja
mov
xchg
xchg
xor
loope
dec
add
mov
lahf
int
add
add
add
sub
add
add
add
mov
inc
add
push
sub
pop
push
push
sub
sub
shl
pop
pushl
push
push
shl
push
sub
add
inc
sub
lea
sub
inc
ror
pop
shr
add
pop
push
lea
pop
push
push
push
call
inc
pop
call
push
insb
int
add
push
jns
add
popa
call
faddp
add
add
scas
sarb
cwtl
add
add
push
push
mov
dec
in
add
ret
add
add
lds
pop
mov
mov
sub
pop
call
push
push
push
lea
push
push
lea
push
push
call
repz
pop
xchg
je
mov
jo
inc
mov
mov
add
push
pop
cmpsb
scas
fcomi
push
add
add
add
enter
jle
stos
icebp
lcall
mov
lcall
pushl
mov
push
lea
sub
pop
jmp
push
push
xor
add
ror
push
and
add
ror
inc
add
sub
inc
sub
pop
lea
pop
push
push
lea
push
push
call
add
rcl
hlt
jae
jb
xchg
inc
lods
mov
pop
add
mov
repnz
mov
add
sub
pop
pushl
push
lea
push
push
push
push
push
call
lods
add
jg
leave
mov
lret
dec
mov
mov
inc
in
dec
inc
add
inc
in
jg
add
pop
imul
dec
add
inc
cli
cltd
mov
add
pop
add
lcall
loopne
add
push
pop
push
push
sub
xor
inc
pop
call
push
push
add
sub
push
and
add
dec
shr
shr
sub
sub
rol
pop
ror
pop
push
xor
pop
pushl
push
push
push
call
add
ret
pop
pop
aam
je
add
mov
add
insl
add
movsb
jb
loope
mov
add
data16
mov
add
lcall
pop
loope
lcall
int
fadds
out
clc
sub
pop
call
push
xor
rol
pop
push
push
xor
add
ror
pop
call
leave
push
push
push
call
add
popf
add
push
add
repz
test
add
jge
add
add
add
jmp
int
jmp
add
mov
movsb
insb
lret
movsb
xchg
jo
lods
jecxz
addr16
add
xchg
addl
jecxz
lock
jb
add
js
add
in
hlt
lcall
les
push
push
lea
push
call
loopne
cwtl
ret
insl
jns
gs
lcall
sti
add
out
add
jo
add
lock
xchg
pop
sahf
fildll
push
out
add
add
lea
repz
pop
pop
pop
push
lea
push
call
shrb
movsl
mov
mov
imul
inc
scas
add
add
dec
repnz
icebp
mov
push
fldt
sub
pop
pop
xor
push
lea
push
call
outsb
mov
add
add
js
mov
add
cmpsl
in
add
hlt
add
iret
lods
ljmp
popf
pop
lcall
fcomip
rol
add
add
mov
push
adc
add
mov
enter
int
mov
dec
cli
addr16
xchg
dec
sahf
add
clc
lcall
push
push
push
push
push
push
push
call
jg
movb
add
outsb
add
push
loop
clc
add
mov
sarl
fdivr
add
add
dec
dec
add
lcall
or
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
push
out
outsb
cmc
rcrb
rcrl
in
pop
nop
mov
movsb
outsb
data16
ret
ret
add
add
iret
jb
dec
mov
lret
insl
add
add
shrl
fldl
xchg
push
insl
add
add
add
ret
mov
jb
add
push
inc
pushf
sub
pop
leave
push
sub
xor
pop
ret
push
lea
rol
pop
push
mov
push
push
push
push
push
call
fs
add
jae
cmpsb
push
pop
roll
jne
aad
add
add
add
pop
mov
outsl
mov
cwtl
in
hlt
leave
add
addr16
add
add
mov
pushf
out
cltd
pusha
add
add
les
enter
add
xchg
repnz
push
dec
add
jge
add
test
add
mov
push
push
push
push
lea
push
push
call
add
mov
push
xchg
int
rol
mov
add
add
jmp
add
add
in
add
push
dec
fildl
loop
add
dec
xlat
bound
outsl
add
iret
add
lcall
push
add
add
push
pop
icebp
pop
mov
push
push
push
push
push
push
push
lea
push
push
call
cmpsb
dec
add
cld
insl
mov
add
jno
add
imul
rolb
lcall
add
add
in
fcompl
and
push
lea
pop
xor
xor
push
ror
dec
add
xor
pop
add
xor
push
push
lea
push
lea
push
push
call
add
dec
andb
je
cltd
jbe
jbe
in
loopne
ret
pop
jb
inc
cmpsl
gs
add
add
lds
cli
movl
out
push
add
mov
jp
xchg
add
repz
add
jne
enter
rclb
fisttps
int3
add
nop
testb
pop
dec
sub
push
lea
push
push
call
xchg
jae
movsb
pusha
xchg
push
push
lea
call
push
sahf
scas
mov
add
out
inc
add
add
mov
in
hlt
lcall
jbe
add
push
inc
not
ror
not
pop
sub
pushl
push
rol
pop
pop
sub
push
push
lea
push
push
lea
push
call
nop
fldl
add
add
add
add
fdivr
xchg
sarl
data16
ja
dec
repnz
cmpsl
pop
lock
xlat
add
add
ret
add
mov
sub
pop
cmp
jne
push
push
push
call
movsb
mov
lret
add
jmp
xchg
add
add
lock
pop
arpl
cmc
outsl
leave
test
rorb
add
add
iret
pop
jmp
pop
add
mov
add
scas
inc
add
pop
add
add
lret
addl
pop
mov
lea
push
lea
push
push
push
lea
push
lea
push
call
push
pop
xchg
add
add
dec
mov
jp
ljmp
out
scas
lods
add
pusha
add
ret
mov
adcb
push
mov
sar
mov
add
scas
add
add
in
hlt
hlt
add
fsts
add
ja
add
mov
add
aad
add
test
pop
sub
push
xor
sub
pop
mov
push
push
push
push
push
push
push
push
push
push
call
mov
mov
enter
hlt
inc
add
add
shlb
xlat
outsb
rolb
xchg
mov
mov
incb
stos
cmc
icebp
popf
pop
add
jg
test
mov
ret
jle
add
fwait
jnp
pop
adcl
lea
inc
std
add
sub
pop
shr
add
push
push
lea
push
push
push
call
add
push
add
mov
inc
add
add
repnz
add
add
cld
add
jae
ret
lds
inc
outsb
xchg
in
add
mov
add
add
add
add
in
in
lcall
jmp
push
push
push
call
push
in
add
dec
dec
jbe
add
les
add
in
add
ret
add
test
mov
add
add
outsb
enter
addr16
mov
add
xchg
data16
jmp
fiadds
repnz
je
add
add
add
lcall
mov
in
add
shlb
imul
pop
sub
pop
pushl
pop
push
dec
rol
pop
shr
push
lea
push
push
push
push
lea
push
push
push
call
pop
add
add
popf
push
addb
add
mov
xchg
mov
dec
in
lods
add
add
out
sub
pop
and
sub
push
lea
push
push
call
mov
jae
add
hlt
add
pop
inc
jo
gs
add
mov
push
pop
stos
filds
add
add
jae
mov
mov
add
fildl
add
xchg
pusha
clc
add
lcall
test
push
push
fmuls
add
out
push
push
mov
lcall
stc
add
decl
test
call
pop
leave
push
add
add
xor
rol
pop
ret
push
add
pop
push
push
xor
add
not
rol
pop
mov
push
push
push
push
lea
push
call
jb
mov
andb
mov
pop
pop
inc
add
int3
push
add
mov
add
mov
jb
insl
jne
add
add
mov
bound
xchg
add
sub
pop
add
push
shr
dec
dec
pop
push
push
dec
lea
pop
push
push
push
lea
push
call
jo
add
mov
mov
fwait
leave
sarl
mov
inc
xchg
cmpsb
ret
fisubrl
out
mov
lahf
add
lcall
push
rol
pop
push
push
push
not
pop
mov
push
dec
pop
lea
sub
push
lea
push
push
push
call
subb
bound
insl
movsb
lcall
cltd
sti
mov
xchg
xchg
sti
leave
mov
add
add
add
flds
mov
clc
cltd
inc
push
add
cli
add
ja
push
jnp
add
je
sarb
lcall
adc
ljmp
sub
pop
add
push
push
push
lea
push
call
pop
jb
ljmp
add
push
ja
arpl
add
out
add
mov
add
gs
rol
cmpsb
imul
addb
add
add
push
push
call
jbe
add
dec
add
mov
dec
mov
add
inc
in
roll
add
dec
addr16
test
scas
jl
xchg
loope
stos
stos
ficomps
loope
add
add
fbstp
aam
ljmp
add
jg
mov
clc
lcall
jnp
push
push
push
push
push
push
lea
push
call
icebp
add
add
jo
add
ljmp
inc
mov
lods
mov
jl
addr16
insb
push
mov
lock
pop
add
xor
push
sub
pop
mov
push
inc
shl
sub
pop
and
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
enter
test
add
add
dec
mov
insl
add
and
mov
add
idivl
add
add
les
add
add
dec
sarb
sub
pop
rol
push
not
pop
rol
push
lea
push
push
push
lea
push
lea
push
call
inc
mov
add
mov
mov
inc
add
test
inc
inc
mov
add
rclb
pushf
mov
in
imul
mov
ret
sahf
pop
cld
jo
in
dec
mov
add
add
mov
lcall
lcall
add
shl
pop
cmpb
jne
add
push
dec
pop
cmp
je
add
push
pop
cmpl
jne
push
shr
sub
shr
pop
xor
push
lea
push
push
push
push
push
push
push
lea
push
call
mov
mov
xchg
outsb
test
pop
notl
add
enter
jl
inc
add
outsl
mov
push
insb
pop
add
add
mov
add
dec
mov
sub
pop
pop
pop
push
lea
push
lea
push
call
add
inc
add
repz
lea
rcrb
add
mov
xchg
pushf
loope
add
shlb
inc
mov
mov
sub
pop
pop
push
push
push
push
call
outsb
add
mov
push
out
add
add
mov
dec
add
nop
add
nop
jns
dec
lret
add
rolb
ja
lahf
js
mov
pop
pop
push
push
call
push
jb
dec
inc
imul
add
add
add
add
mov
addl
jl
jle
js
xchg
xlat
mov
clc
lcall
push
lea
push
push
lea
push
push
push
push
push
call
add
leave
xchg
in
add
add
cld
nop
push
nop
mov
cmpsl
add
xchg
std
lret
add
add
loopne
addb
dec
pushf
jns
in
arpl
add
addb
int
lock
jg
pop
subl
fbstp
cli
add
aad
add
add
loope
in
loopne
leave
ret
push
sub
shr
shr
not
pop
mov
push
dec
pop
add
push
lea
push
push
push
push
push
push
push
call
insl
push
testb
add
xchg
add
test
add
add
inc
add
push
movl
shll
stos
in
loope
mov
add
push
push
les
jp
cwtl
outsl
jo
add
add
jl
scas
test
jno
add
sbb
jl
in
add
add
sub
pop
mov
push
push
push
push
push
push
call
add
add
pop
inc
scas
mov
lret
mov
imul
out
cmc
add
pop
mov
push
lcall
mov
shrb
pop
jne
push
loopne
add
mov
jnp
aad
aam
sti
dec
lahf
pop
add
xchg
pop
fiadds
rolb
ret
call
dec
add
pop
xor
push
xor
sub
pop
pop
push
ror
sub
not
pop
pop
push
lea
push
push
call
add
dec
ljmp
mov
add
add
add
xchg
jg
fs
icebp
add
jnp
js
add
add
xchg
mov
add
add
addb
add
into
mov
jecxz
push
fnstsw
hlt
pop
pop
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
call
sti
add
add
mov
add
jmp
popf
fdivrl
lret
fisubrl
add
add
xchg
pusha
pop
mov
xchg
enter
outsb
fldenv
cmc
add
ret
mov
fstps
rorl
pop
add
fdivr
lcall
push
push
push
push
push
call
mov
jle
add
mov
add
in
addr16
pop
fwait
add
add
add
inc
jp
pop
add
pushf
in
movsl
add
addr16
lods
fucom
add
pop
imul
enter
aad
stos
xchg
mov
pop
leave
push
ror
rol
add
dec
pop
ret
push
sub
shl
shr
pop
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
clc
push
add
lret
stc
lock
xchg
stos
dec
jp
mov
add
sti
out
inc
lahf
add
add
sub
pop
mov
push
push
lea
push
push
lea
push
call
add
dec
dec
aad
add
add
inc
inc
mov
test
jl
call
inc
fwait
add
push
add
add
mov
out
add
mov
mov
add
sub
pop
add
push
push
push
lea
push
push
lea
push
push
push
push
call
add
data16
insb
iret
add
add
out
mov
sahf
mov
push
cli
out
xchg
sahf
jmp
add
lods
lret
xchg
pop
push
pop
add
add
jl
sahf
stos
pop
rcr
clc
adcl
add
les
neg
sub
pop
push
push
push
ror
ror
add
xor
pop
push
push
lea
push
push
push
call
add
flds
int
shrb
sahf
add
addr16
lea
xchg
add
jb
roll
add
add
add
in
lock
push
push
push
call
stc
lea
sti
mov
lcall
les
jae
movsl
stos
add
add
xlat
clc
fcmovnu
jno
cmpsb
inc
add
add
add
in
clc
pop
mov
push
lea
push
push
push
push
push
lea
push
push
push
call
outsb
in
lcall
jmp
add
cli
stos
scas
addb
push
jg
in
add
lahf
mov
xchg
add
mov
jmp
inc
inc
add
shlb
loopne
pop
add
popa
test
sub
pop
push
push
push
lea
push
lea
push
push
call
mov
add
int3
add
lahf
add
mov
lock
fldl
stos
add
arpl
cmc
notl
in
mov
addb
push
add
xchg
in
pop
pop
push
push
call
out
lahf
add
mov
out
rolb
rol
jae
popa
cmpsb
jnp
jmp
lds
fwait
add
repnz
ljmp
add
loop
add
inc
xchg
pop
add
add
lea
sub
push
rol
rol
pop
mov
push
push
lea
push
push
push
lea
push
push
lea
push
call
aam
add
divb
xchg
lods
filds
push
add
inc
lea
add
jecxz
test
aam
addb
aad
dec
insb
je
mov
dec
jne
add
add
cmc
popf
nop
hlt
inc
addr16
popf
add
shr
add
push
add
add
pop
mov
add
push
lea
push
push
push
lea
push
push
lea
push
push
push
push
call
add
mov
add
pop
mov
add
xchg
int
add
add
imul
hlt
add
mov
add
iret
clc
jecxz
lret
add
pop
inc
repz
inc
add
cld
insl
add
jae
push
push
call
lods
xlat
add
push
adcl
add
xchg
cmpsb
fcomps
xchg
mov
mov
add
add
push
divl
add
push
popa
mov
iret
movb
gs
add
push
dec
into
add
pop
shll
sahf
jns
sub
pop
popl
push
sub
pop
mov
push
sub
inc
add
pop
add
xor
push
push
push
push
push
lea
push
push
lea
push
push
push
call
arpl
addb
scas
mov
add
sahf
popf
add
jle
addl
sahf
adcl
subl
add
out
add
mov
addb
cwtl
add
push
pop
pop
les
std
inc
xchg
inc
sub
pop
lea
push
push
push
push
push
push
push
call
mov
jae
movsl
test
rorl
fldenv
xlat
add
in
dec
fimuls
pop
test
add
mov
add
cmpsl
mov
pop
push
sub
pop
mov
add
push
add
add
sub
pop
xor
rol
push
push
push
push
call
mov
out
dec
out
lret
arpl
outsl
add
scas
shll
inc
popa
out
loopne
pushf
bound
sti
jae
je
dec
jg
in
lock
nop
push
shl
rol
shr
pop
nop
push
shr
shl
pop
xor
push
add
add
pop
nop
push
push
push
push
push
push
call
jnp
jecxz
push
inc
gs
test
lods
scas
int3
iret
add
pusha
add
dec
iret
add
cmpsl
dec
add
les
inc
dec
std
jp
dec
cmc
jecxz
roll
xchg
add
sub
pop
nop
push
ror
pop
inc
push
dec
pop
nop
nop
push
push
push
lea
push
push
call
lock
add
dec
mov
push
imul
mov
add
add
scas
push
in
inc
add
mov
pop
add
stos
in
rolb
insb
add
lcall
cmp
jne
push
not
shr
lea
pop
add
push
push
lea
push
lea
push
call
xchg
enter
imul
add
add
mov
add
add
pop
call
add
lret
add
lods
sarl
pop
add
push
insl
add
add
add
mov
add
out
add
outsl
repz
in
test
pop
add
call
nop
nop
push
shr
rol
shr
pop
cmp
je
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
jnp
add
rorb
rolb
add
dec
pop
mov
mov
dec
mov
inc
call
out
test
gs
mov
add
mov
mov
test
add
add
fimull
mov
pop
js
add
repz
push
add
mov
add
in
fcomps
nop
push
rol
inc
sub
pop
inc
push
lea
pop
nop
push
not
pop
nop
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
call
mov
push
mov
ljmp
add
popa
jmp
mov
lds
add
icebp
jl
mov
mov
arpl
jmp
rolb
in
loopne
cmp
jb
push
shl
add
pop
xor
push
lea
push
lea
push
call
xlat
xchg
add
aad
dec
sahf
pop
outsb
add
inc
pop
inc
roll
add
pop
add
outsl
inc
cli
inc
add
popa
mov
inc
roll
add
add
jbe
mov
subb
add
out
xchg
jo
mov
out
faddp
add
in
hlt
lcall
dec
add
add
xorb
add
push
call
add
add
fisubl
add
icebp
add
mov
stos
inc
test
inc
je
add
jae
jo
add
movsb
addr16
add
fidivl
add
pushf
add
insb
fwait
jge
push
inc
mov
jo
jns
jecxz
sub
pop
mov
push
lea
push
push
push
push
push
push
push
push
call
dec
fidivs
cltd
add
push
add
add
ljmp
add
add
les
xchg
add
add
mov
sahf
mov
add
in
add
rorb
mov
add
movzwl
push
lea
push
push
push
push
lea
push
push
lea
push
push
push
call
movb
mov
add
add
dec
pusha
add
data16
add
pop
jb
jle
fwait
icebp
add
mov
add
pop
mov
add
push
dec
not
sub
pop
mov
add
push
add
pop
pop
pop
push
push
push
push
push
call
ret
add
pop
add
add
lods
add
pop
loopne
sahf
inc
outsb
add
pop
jge
lcall
mov
mov
jle
add
add
icebp
jnp
lahf
icebp
add
scas
push
inc
sahf
push
jno
jle
int
in
in
pop
pop
push
pop
pop
leave
push
ror
pop
ret
push
push
push
push
lea
push
push
push
call
pop
jmp
jnp
fldl
add
add
add
add
inc
mov
pop
push
into
add
mov
add
out
add
add
sub
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
add
nop
aam
fnstcw
add
pop
dec
jnp
in
push
jo
add
enter
cmpsl
cwtl
into
fwait
ljmp
xlat
push
fucom
addl
cmpb
add
inc
mov
jbe
add
add
imul
jbe
sub
pop
mov
push
push
push
lea
push
push
call
arpl
pop
orl
mov
add
add
add
add
add
lds
lcall
add
movsl
add
add
add
cmpsl
add
add
dec
pop
add
xchg
pop
push
inc
pop
add
add
add
xlat
add
mov
sub
pop
push
push
push
not
pop
push
push
push
lea
push
push
push
push
lea
push
call
mov
inc
add
loopne
pop
jl
inc
add
add
jmp
roll
loopne
jl
ret
add
add
mov
mov
lods
jnp
add
pop
add
insl
addl
iret
add
fbstp
add
add
inc
in
push
add
aam
fldl
lcall
push
push
call
cmc
add
lahf
add
inc
inc
add
fs
push
hlt
mov
jl
fadds
out
lret
add
jb
mov
iret
adcb
mov
add
mov
add
clc
lcall
dec
or
shr
rol
add
sub
pop
mov
push
not
sub
pop
mov
test
je
push
push
call
fistpl
jb
add
add
sti
add
add
jae
add
dec
loope
aam
jbe
dec
fildll
lock
xchg
xchg
add
bound
aam
cmc
mov
inc
push
add
clc
lcall
jno
test
je
push
inc
xor
xor
pop
mov
mov
push
pop
mov
inc
push
push
push
push
lea
push
push
push
push
push
push
call
bound
popf
add
push
pop
add
cmpsb
popa
lods
inc
cmpsb
add
xorb
ljmp
ficompl
lods
xlat
int
add
clc
xchg
outsb
js
mov
inc
xchg
call
ret
pop
lods
add
jecxz
add
in
push
jne
mov
dec
fildll
in
fcomps
rorb
test
add
add
xchg
rcll
ljmp
daa
add
add
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
call
js
pop
inc
add
add
mov
ljmp
nop
push
pop
add
xchg
movsl
outsb
cli
movsl
jno
dec
xchg
inc
arpl
sahf
add
mov
inc
mov
add
in
fwait
add
xchg
mov
mov
push
fstps
mov
mov
push
jge
mov
add
jb
lahf
jmp
mov
rorb
test
add
push
push
push
push
push
lea
push
call
add
repnz
cwtl
add
fcomi
add
push
lods
jb
mov
addb
add
add
lret
les
roll
xchg
add
xchg
ret
mov
add
mov
add
lret
fimuls
add
pop
loop
add
add
add
flds
fwait
out
add
call
in
call
test
jne
xor
push
add
pop
pop
push
lea
push
push
push
lea
push
call
add
fildl
stos
outsl
fadds
stos
push
mov
mov
xchg
into
cli
pop
icebp
popf
imull
mov
add
addl
in
lcall
push
dec
lea
add
pop
pop
push
push
push
push
push
lea
push
call
push
add
mov
add
xchg
add
jecxz
add
push
lret
push
inc
add
add
clc
add
xchg
lods
cli
icebp
cltd
jle
ret
jns
into
add
fdivrp
les
add
mov
add
jecxz
ror
pop
outsb
push
pop
add
mov
add
mov
sub
pop
pop
push
not
pop
leave
push
sub
shl
sub
pop
ret
mov
push
push
push
push
push
call
jnp
mov
dec
inc
add
push
pop
into
add
add
add
lea
push
mov
bound
mov
xlat
jae
add
add
jb
imul
mov
jne
add
add
add
std
jmp
orb
add
jmp
inc
push
shl
pop
cmp
jne
lea
push
push
push
push
lea
push
push
push
call
add
push
add
mov
jb
stos
pop
mov
out
inc
jg
mov
test
dec
imul
dec
add
data16
lock
mov
in
in
in
lcall
popa
add
add
push
push
call
call
cld
cmc
pop
scas
test
mov
add
mov
add
jae
cmpsl
jae
push
ror
loop
add
add
mov
add
fiadds
out
add
clc
pop
mov
add
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
pop
lds
stos
add
add
add
push
stos
add
jl
addb
inc
add
inc
xchg
lods
lret
add
lcall
mov
call
add
dec
stos
pop
inc
repnz
lock
fucomip
add
bound
flds
insl
into
out
add
jmp
add
add
sub
pop
cmp
jne
mov
push
push
push
push
push
push
call
add
add
lods
fistpl
add
mov
push
ret
and
movl
mov
scas
inc
jno
aad
mov
data16
push
add
add
add
xchg
data16
jae
xchg
test
add
out
add
inc
test
add
in
add
fiadds
test
je
push
rol
not
lea
pop
mov
push
push
lea
push
lea
push
push
push
lea
push
push
call
loopne
out
lds
add
xchg
mov
mov
icebp
add
int
jo
dec
push
add
out
add
dec
js
mov
idivl
rcrl
add
add
add
insl
mov
out
mov
add
add
inc
add
loopne
add
push
push
lea
push
push
lea
push
lea
push
push
call
add
mov
out
jg
jae
pop
test
imul
push
add
add
cmc
add
icebp
ret
add
xlat
cmpsl
shrb
sub
pop
cmp
je
jmp
push
not
lea
pop
xor
push
xor
sub
not
pop
pop
push
add
sub
add
pop
pop
push
push
lea
push
push
call
in
jmp
outsb
loop
add
lahf
jl
dec
jne
rcr
test
push
add
mov
stos
xchg
sar
add
mov
fwait
xchg
sahf
mov
stc
jb
mov
add
in
lock
lcall
pop
push
inc
ror
pop
leave
push
shl
shr
pop
ret
push
inc
add
lea
inc
pop
lea
push
push
push
push
lea
push
call
mov
add
mov
cld
mov
jno
imul
pop
cli
jecxz
xchg
test
ja
add
add
add
mov
sub
pop
pop
push
lea
push
push
push
push
push
push
push
push
call
add
dec
add
jnp
sbbl
add
add
nop
add
xchg
add
inc
add
jecxz
add
push
outsb
sub
pop
pop
push
not
sub
sub
pop
pop
push
shr
pop
pop
push
lea
shl
sub
pop
leave
push
sub
pop
ret
push
sub
pop
mov
pop
push
ror
pop
pop
push
sub
add
ror
pop
pop
pop
push
dec
pop
leave
ret
pop
stc
xor
cltd
es
push
xor
cmp
pop
sbb
xor
ss
xor
daa
xor
mov
xor
andl
in
pop
insb
pop
cli
dec
imul
lret
xor
mov
icebp
leave
repz
mov
daa
jge
dec
and
dec
sub
and
xor
fcmovnb
add
cmp
xchg
jno
rorb
shld
mov
clc
std
pushl
xchg
stos
push
shlb
mov
sub
imul
xchg
stc
mov
shll
dec
ret
add
ret
xor
mov
cmp
adc
test
insl
in
mov
sub
aaa
stos
out
cmp
xchg
mov
inc
mov
inc
xlat
divl
hlt
xchg
into
rcr
add
repz
xor
adc
inc
push
es
sub
mov
adc
aas
jb
push
adc
sub
xor
loopne
js
cmp
repnz
ret
mov
sub
cs
mov
and
ret
repnz
mov
jnp
int3
stc
repz
add
lahf
sub
imul
mov
dec
push
fisubl
dec
push
cmp
fsin
or
js
push
xor
xchg
mov
push
mov
inc
mov
pop
fdivl
mov
pop
lods
ds
dec
mov
or
les
frstor
sahf
cmp
mov
adc
js
dec
xor
aas
push
inc
mov
pop
mov
roll
sub
push
sub
popa
repnz
ss
adc
push
outsl
adc
dec
push
xor
mov
sbb
outsl
jns
xchg
es
jns
jns
push
xchg
push
out
jbe
fsubs
mov
aad
pop
inc
mov
inc
cltd
mov
cmp
movsb
ret
pop
out
pop
sahf
push
fisubrl
pop
or
and
popf
or
jecxz
fnsave
test
ljmp
mov
jbe
push
xchg
jmp
push
shll
icebp
mov
into
frstor
rorl
pop
adc
add
loop
or
mov
scas
fs
cmpsb
cld
outsl
jp
lea
insl
pop
cmpsl
arpl
jmp
mov
scas
mov
push
out
dec
cltd
loop
int
std
or
test
das
add
and
rorl
aad
sbb
cltd
xor
jb
decb
jns
adc
xchg
nop
aas
xchg
add
inc
out
and
inc
addb
jp
sub
idivl
leave
inc
or
aad
ficompl
sbb
push
lret
jmp
pop
cli
loope
push
add
fs
xchg
pushf
repnz
push
vxorps
add
in
std
mov
push
jns
icebp
ss
aas
push
mov
sub
out
adc
xchg
adc
jb
add
loop
sbb
in
lea
jge
xor
aas
and
test
shlb
out
cs
loop
xor
aad
push
fwait
sub
xlat
fisubs
jnp
jp
in
pop
gs
movsl
test
cmp
adc
lock
jno
fldt
scas
and
pop
dec
mov
hlt
fistl
in
push
mov
or
cmp
in
push
jp
fldenv
loopne
mov
ja
jle
lods
push
mov
iret
imul
jmp
je
enter
ret
ficomps
push
sub
xchg
mov
pop
mov
mov
test
pop
mov
mov
vpaddsw
xor
mov
mov
mov
js
mov
mov
xchg
xchg
in
div
call
mov
les
mov
xchg
loopne
inc
inc
inc
mov
ja
cmpl
jge
pop
sbb
mov
inc
out
sti
pushf
data16
stc
out
mov
aam
dec
test
push
mov
adc
lock
ja
mov
xchg
decb
mov
xor
out
mov
push
inc
out
and
and
jne
inc
scas
es
and
fisubrl
mov
fstpt
add
js
xor
push
imulb
or
in
ss
push
jbe
sub
ja
addr16
mov
pop
push
inc
pop
jle
xlat
jo
pushf
jecxz
aas
sbb
fisubrl
aas
sbb
push
inc
add
push
sub
outsb
jmp
xor
and
sub
or
jmp
sub
cmp
push
jge
inc
movsb
inc
outsl
xchg
outsl
enter
rcrb
std
xor
mov
inc
fscale
dec
xor
pop
cs
pop
pop
repnz
or
push
pop
add
sub
cld
mov
lahf
xor
lahf
fisttpll
push
sub
sub
push
sub
std
mov
or
and
or
sti
xor
imul
es
out
mov
adc
sbb
push
adc
pop
sbb
mov
jb
pop
mov
mov
mov
mov
push
and
jl
das
cmpsb
and
pop
inc
xor
jle
dec
jb
jae
outsl
pop
add
out
ror
push
ja
mov
xor
push
push
jno
sub
lcall
aas
cmpsl
xor
icebp
jnp
loopne
push
sub
les
shr
and
scas
jecxz
cmp
sub
dec
inc
rolb
ret
bswap
data16
xchg
xchg
xchg
dec
ret
or
dec
aas
xchg
test
stos
pop
pop
mov
mov
fst
loope
mov
dec
lret
inc
cmp
xchg
push
ljmp
aad
add
std
xor
cmc
lods
xchg
jge
push
enter
ss
mov
movsl
pop
push
pop
push
jecxz
adc
and
repz
mov
out
sti
outsb
pop
cs
jo
add
cmpsl
mov
stc
fs
adc
lcall
sub
push
movb
adc
or
sbb
add
pop
in
das
mov
out
and
push
call
stos
dec
fdivl
mov
scas
xchg
mov
or
lahf
adc
paddb
dec
xor
fisttps
jno
jb
mov
das
xor
mov
cmc
jns
jg
xor
and
repz
pushf
in
movsb
gs
add
sub
jne
dec
fistpl
xchg
int
and
lods
test
jl
daa
jns
mov
cmp
sub
fnstenv
push
cmp
xor
data16
dec
jne
xor
pop
cwtl
sbb
cmpsl
lcall
fistpl
push
cld
not
cmp
inc
sbb
jg
insl
fnsave
jnp
ret
sbb
jle
stos
inc
pop
fldl
jg
mov
mov
leave
es
push
pop
ja
dec
pusha
out
and
std
jns
pushf
dec
dec
divl
movsl
or
jp
stc
mov
sub
or
xchg
sbb
rcl
cmp
jns
lods
lods
add
sbb
inc
call
and
out
inc
ret
xchg
cwtl
mov
jmp
xor
lods
jge
adc
cwtl
mov
push
aad
jmp
ret
mov
aas
hlt
repz
mov
popf
pop
mov
mov
mov
inc
dec
jl
push
push
leave
mov
outsb
pusha
or
cmp
dec
inc
sbb
fsubrl
sbb
out
mov
repz
icebp
movsb
fidivrl
les
fs
mov
and
mov
das
inc
into
mov
adc
rcrl
ljmp
mov
scas
repnz
cmp
test
inc
adc
mov
jg
enter
sub
mov
test
pop
mov
sbb
mov
xchg
sbb
in
shlb
je
cwtl
push
int3
mov
pop
inc
xchg
xchg
mov
ret
pop
mov
mov
jbe
cmp
sarb
add
dec
jp
mov
mov
lret
push
aam
sbb
cltd
pop
sbb
insl
add
cld
in
rcrb
subb
sub
mov
fucomip
mov
pop
push
ds
out
lret
jb
out
adc
cmpsb
xor
push
xor
xor
cmpl
dec
jnp
imulb
rolb
pop
xchg
cmpsl
pop
inc
pop
inc
popf
sub
arpl
xor
jne
sub
into
mov
add
je
jle
xor
testb
or
ret
jae
dec
outsl
jle
ror
jl
movsl
movsb
push
daa
in
aam
mov
cld
hlt
fcoml
jnp
dec
mov
sub
bound
cmp
lcall
js
xchg
popa
das
pop
nop
xchg
shl
dec
insb
pop
push
xor
mov
or
pop
xor
stc
push
cli
pop
mov
xchg
lea
out
mov
push
xor
aam
test
jns
hlt
mov
out
sbb
mov
clc
add
or
hlt
inc
sbb
icebp
fs
inc
inc
imul
mov
fldz
std
xchg
xchg
xchg
dec
in
scas
sub
loopne
inc
jae
dec
fistpl
aam
sub
adc
cmp
mov
pop
lcall
dec
cmp
pushf
std
jnp
insb
or
rcll
sub
xchg
test
test
jmp
daa
dec
ds
loopne
stc
out
int
xchg
mov
push
test
cltd
add
ret
cmp
mov
cmc
popf
push
ss
cmpsl
add
xchg
mov
scas
jns
lret
imul
jae
xchg
xchg
and
inc
mov
lds
lds
loopne
mov
ds
es
repz
and
jg
cmp
mov
scas
data16
fwait
xchg
push
mov
push
mov
pop
and
mov
jne
pop
sub
pushf
jnp
addb
mov
and
add
jno
decb
insl
mov
adc
popf
mov
sub
jbe
ret
cmp
adc
push
adc
mov
fs
push
and
ds
xor
sbb
pop
jbe
ljmp
jle
jmp
jae
outsb
rclb
dec
cmp
and
xor
and
sahf
jp
push
fsubrl
lea
and
fldcw
sub
push
bound
sbb
add
scas
pop
mov
enter
aad
cmc
pop
jns
test
jl
pop
sbb
push
shl
jle
gs
movsl
fiaddl
sbb
mov
inc
pop
and
sub
jbe
cld
imul
sub
in
and
rclb
lds
movsb
daa
les
int3
jle
adc
push
test
cmp
jnp
push
mov
idivb
into
xor
push
loopne
sbb
push
sbb
or
repz
push
mov
ror
movsb
push
fildl
leave
outsb
filds
adc
mov
xchg
shrl
jecxz
cmc
jl
cmc
aad
dec
cmp
cmp
nop
insl
sub
paddsb
jbe
scas
je
push
xor
pop
aad
out
and
adc
jg
sub
mov
xor
sbb
aam
xchg
jge
js
cmp
cmc
xlat
sbbl
xchg
dec
int
xchg
sbb
dec
mov
mov
test
cmpsl
lcall
and
testb
xchg
int3
xchg
movsb
jle
mov
cmpl
mov
bound
int3
cmpsl
inc
push
mov
push
test
pop
adc
bound
inc
es
fmull
mov
sub
hlt
xlat
jmp
cmpsb
in
jl
push
sbb
sbb
xor
hlt
jg
clc
stos
jns
sub
mov
incl
jnp
pop
outsl
adc
dec
jae
jg
imul
rorl
loopne
or
add
xchg
pop
xor
inc
jns
jg
or
repnz
ljmp
shll
outsl
ret
add
adc
sbb
dec
pop
jno
mov
pop
stos
ret
daa
sub
addr16
or
fcmovbe
push
test
push
cs
dec
cltd
jp
jne
inc
aad
jmp
rolb
inc
sub
dec
fcmovnb
or
dec
cld
std
push
dec
movsl
fwait
or
lods
int3
ficoml
jbe
out
aas
xchg
imul
jecxz
push
fidivrs
cmc
jno
dec
stc
dec
mov
jno
sub
imul
mov
mov
mov
cmpsb
inc
mov
popa
mov
jo
and
insb
popl
aaa
nop
std
das
push
mov
rol
mov
rol
sub
les
sbb
addr16
pop
sbb
add
stc
rolb
and
cmp
stc
jno
xchg
mov
cmc
add
cmp
je
mov
sti
pop
loope
scas
mov
pop
sub
fnstcw
sbb
xchg
adc
daa
jl
xchg
inc
and
xchg
test
sub
sbb
rorb
or
xchg
lcall
add
ret
pop
adc
sub
ror
xchg
sbbb
mov
in
ja
mov
inc
cmc
movsl
mov
mov
cmp
xchg
popa
fnstsw
sti
mov
ja
pop
or
sarb
bound
out
stos
xor
scas
inc
xchg
xchg
cmp
jbe
aad
nop
fistpll
cmp
xchg
adc
dec
mov
sub
enter
cmp
outsl
cs
push
lock
jno
sar
cmpl
pop
inc
cmp
sbb
mov
ret
pop
outsl
cmp
lods
cmp
and
mov
sbb
jge
mov
movsl
fdivl
addr16
cwtl
test
aaa
rorl
sub
or
push
and
dec
xor
dec
lea
sbb
into
imul
test
inc
lods
adc
sub
imul
sub
out
xchg
loopne
mov
movsl
dec
fcmovnbe
jns
or
dec
sbb
insl
outsb
and
imul
cwtl
pop
jecxz
dec
and
jne
hlt
cmpsl
push
mov
shlb
pushf
pop
in
ss
mov
sbb
dec
jp
imul
ljmp
or
daa
movsl
push
mov
cmp
jno
sbb
jle
push
xchg
dec
cltd
mov
data16
adc
and
push
ret
mov
sbb
xor
insb
in
mov
jge
sbb
mov
xchg
add
test
and
jae
loopne
cmp
je
xchg
xchg
mov
mov
sarl
sar
ret
ljmp
push
bound
and
pop
mov
jp
out
and
inc
ret
lahf
insl
scas
mov
jae
test
ficomps
dec
fsts
cwtl
js
jb
jns
imul
or
out
shr
xchg
cld
and
cmpsl
dec
bound
fwait
subl
stc
jne
push
or
pop
jb
mov
jle
pop
rorb
jle
mov
add
les
xchg
repnz
stc
pusha
in
sub
arpl
dec
mov
pushf
adc
pop
addr16
ja
movsb
inc
adc
mov
and
in
mov
loope
leave
or
mov
push
jo
add
mov
ror
test
push
jbe
jle
shll
xchg
mov
xchg
cwtl
mov
in
pushf
dec
and
push
xchg
scas
loopne
push
movsb
enter
mov
pop
stos
jle
xlat
lret
nop
je
lea
xchg
push
adc
inc
insb
xchg
push
ret
movsb
and
cltd
mov
jmp
inc
mov
dec
mov
mov
pop
xchg
repnz
dec
xchg
jns
fldl
or
iret
cld
cld
sub
stos
xlat
jns
mov
add
mov
add
out
push
fstpl
in
cmpsb
rcr
xor
add
movsl
pop
mov
out
cltd
fidivrl
fwait
jmp
popf
mov
mov
andl
cmpsl
xor
shll
xchg
mov
out
lret
mov
fwait
aas
stos
test
das
divl
fsubs
jno
push
cmp
ret
jmp
fidivl
and
xor
loopne
fimuls
push
jne
add
mov
in
bound
lods
mov
jno
es
jbe
popa
xlat
push
push
lea
imul
pop
ret
nop
test
dec
adc
jno
inc
paddusw
lds
in
cmpsl
fwait
inc
sbb
sbb
rcl
jle
es
mov
pop
adc
scas
jb
xor
mov
sbb
ss
cmc
xchg
jmp
adc
pop
jmp
jecxz
dec
jecxz
int
xor
ds
xchg
cmc
push
push
jbe
test
inc
mov
loope
gs
mov
fxch
cmc
mov
sbb
pushf
rorl
cwtl
jmp
jbe
fs
arpl
cmpsb
rclb
and
ss
scas
fcomip
pop
mov
xchg
in
xchg
lds
fiadds
int3
stos
push
mov
push
mov
pusha
sbb
jns
push
imul
adc
adc
add
mov
push
jg
fcmove
mov
shrl
movsl
mov
outsb
and
mov
dec
imul
sub
ja
add
jo
fiaddl
adcl
lahf
dec
xor
sbb
dec
cmp
push
push
cmp
gs
xchg
mov
and
sub
dec
aad
scas
mov
addb
ret
xchg
sub
lds
lds
and
movsl
dec
push
das
nop
adc
or
push
ljmp
repz
cmpsl
movsl
cld
fcos
mov
stos
mov
sbb
inc
sbb
mov
inc
sbb
shrl
fwait
insb
lahf
enter
pop
inc
lret
inc
and
jge
xchg
mov
push
push
scas
add
lret
lods
into
mov
lcall
push
add
mov
inc
push
fsubs
shrl
call
out
mov
sbb
lods
and
ds
scas
jne
test
rorl
xchg
orb
push
dec
jl
add
mov
fidivrl
testb
stc
mov
dec
jp
lods
aaa
inc
sub
sti
sbb
push
pop
loope
aaa
mov
test
jge
js
loopne
cmp
outsb
xchg
add
cltd
icebp
insb
sub
lret
stos
out
add
lret
stc
push
push
inc
or
sbbb
leave
push
sub
mov
push
pusha
sbb
das
cmp
push
pop
sub
mov
push
cmp
or
push
or
pop
cmp
and
xlat
pop
mov
pop
iret
mov
or
ret
or
mov
lods
sbb
mov
in
bound
addr16
loopne
adc
cmp
rcr
cmpsb
test
rcr
mov
stos
sbb
sbb
jno
sub
das
xlat
fmuls
in
pop
mov
jo
add
daa
mul
mov
andl
xchg
pop
into
std
inc
es
es
sahf
pop
push
sbb
jb
test
or
cmp
xchg
out
pop
in
and
dec
adcb
dec
sub
sub
gs
add
dec
sub
idivb
inc
adc
push
mov
and
dec
and
mov
outsb
mov
test
and
mov
call
pop
cli
orb
xor
mov
scas
rclb
shlb
test
xchg
pop
dec
jb
mov
mov
dec
sbb
adc
aaa
cs
adc
mov
imul
push
insl
gs
lret
das
shrl
mov
test
int3
rcr
das
cmp
mov
sbb
jp
dec
jmp
lcall
loope
xor
jmp
xlat
and
inc
cmpl
mov
jbe
iret
dec
mov
jb
fldl
jns
push
jg
and
jle
cltd
lods
dec
sub
mov
adc
int
push
hlt
mov
ficompl
ret
xor
inc
daa
mov
in
cmp
cmp
jecxz
push
sbb
inc
pop
mov
jns
cmp
cld
in
mov
sub
sub
xchg
cmpsb
in
adc
gs
jecxz
daa
orl
cltd
push
inc
fs
lods
leave
push
ret
sbb
fildl
xchg
lods
jl
pop
fwait
inc
push
inc
mov
cvttps2pi
stc
stc
adc
add
sbb
test
ljmp
cmc
xchg
out
call
inc
popf
pop
out
outsb
and
cmp
xchg
repnz
push
cwtl
pop
pop
les
aad
cmp
jmp
push
push
mov
jle
jle
test
pop
xchg
or
mov
fstpt
push
xor
sub
mov
dec
cmp
push
outsl
xchg
jg
js
or
add
pusha
fisttpl
mov
rcrb
sahf
jbe
cld
repz
leave
mov
in
in
mov
mov
js
bnd
outsl
lea
mov
pop
icebp
ja
test
xchg
pop
lods
in
fldl
and
out
addl
fisubl
mov
cmp
in
in
rcr
push
sbb
jecxz
subb
jnp
sbb
sub
lds
add
pop
leave
mov
outsl
pusha
push
pop
jae
xchg
shr
sbb
arpl
push
xchg
stc
mov
add
jmp
cmpsl
fwait
arpl
stc
xor
cltd
and
jne
popa
inc
or
mov
movsb
cmp
push
insb
mov
es
loopne
push
fadds
add
sbb
nop
test
jnp
pop
inc
mov
loope
addr16
cmp
outsl
andb
imulb
sbb
cmpsl
and
fsubr
icebp
jle
jle
mov
xor
jmp
xchg
pushf
dec
addl
pushf
pop
cmpsb
in
jmp
sbb
ret
lods
sbb
sbb
mov
mov
dec
rorl
cmp
lock
and
mov
inc
aad
xchg
lock
add
jecxz
mov
dec
test
pop
stc
mov
adc
mov
je
stc
cmp
add
cmp
xchg
ret
or
fmuls
stc
adc
xchg
es
adc
sbb
ret
rcrb
jb
and
rolb
fdivs
push
pusha
push
dec
test
sub
dec
xor
lods
pop
dec
pop
andl
dec
xor
lods
cmp
cmp
jmp
movsl
or
push
fsts
test
in
pop
add
popa
sbb
ljmp
stc
push
dec
int3
add
ret
scas
xchg
xchg
xlat
test
sbb
xchg
loopne
sub
mov
js
xor
xchg
jb
and
fcoms
mov
sbb
daa
fistpl
and
shlb
mov
test
out
lcall
das
fidivrs
sqrtps
inc
cmp
mov
or
sub
insb
xchg
mov
jl
sti
cmp
fwait
mov
sub
xchg
or
arpl
mov
jb
test
fdivrl
jecxz
xchg
andb
rcrl
testl
jo
daa
lret
fcmovnu
out
xor
adc
jcxz
sar
jns
stos
sub
xor
pop
or
outsl
xlat
sub
jle
pop
dec
and
cs
sbb
push
loopne
fisubrs
push
je
mov
lods
test
repz
into
jbe
or
out
sbb
add
into
pop
sbb
fsubrs
mov
or
and
lret
lods
push
in
mov
sub
xchg
dec
lret
cli
fistps
test
test
push
test
xor
dec
mov
add
dec
sbb
dec
jl
mov
cmp
cmp
jae
xchg
mov
lock
inc
push
dec
mov
xchg
sbb
hlt
les
xchg
sbb
push
sbb
fs
lret
pop
mov
mov
dec
sub
sahf
push
pop
mov
cmc
sbb
pop
xchg
or
outsb
xchg
xchg
imul
or
insl
imul
sub
repz
adc
ds
pop
ffreep
je
dec
bound
ret
lret
or
stc
adc
push
inc
sub
mov
std
out
std
sbb
ljmp
sahf
jg
or
pusha
loop
pop
xchg
xor
js
cmp
cmpsb
xor
scas
insb
sbb
sub
cmp
jo
imul
test
loop
fwait
in
mov
or
and
push
les
aas
mov
xlat
mov
add
es
nop
jae
repnz
cli
ret
mov
xchg
xchg
jb
pop
lea
shrl
mov
lock
sub
mov
sti
imul
mov
scas
adc
sbb
ds
or
jle
and
daa
aam
flds
pop
xchg
js
adc
popf
dec
jmp
sbb
ret
daa
sub
inc
xor
sub
in
lea
adc
inc
jbe
push
jae
mov
mov
pop
or
push
mov
aas
xchg
jge
pop
mov
jmp
or
or
adc
fucomip
add
pop
adc
mov
dec
mov
and
adc
test
not
cwtl
sahf
mov
movq
bound
inc
outsb
clc
inc
movups
lods
adc
pop
sub
adc
pop
adc
inc
jl
push
adc
ficompl
and
dec
xlat
and
insl
sti
into
adcl
lods
neg
or
loopne
xchg
repz
int
push
test
or
int
or
push
xor
jne
mov
inc
or
xchg
call
mov
mov
mov
push
dec
std
xor
xchg
xor
xchg
popa
push
pop
shll
andb
imul
dec
mov
fstps
inc
mov
cmp
and
xchg
dec
std
outsl
mov
sahf
jmp
jne
imul
cmpsl
mov
jbe
xchg
and
add
xchg
adc
popa
or
call
pop
sti
hlt
movlps
and
cli
cld
xor
mov
dec
sub
es
pop
les
cmc
xchg
in
fistl
sbb
cmp
lock
popf
sbb
jge
cld
lock
xchg
int3
jno
cmp
cmpsl
repz
jo
jle
push
subl
jge
in
sub
cmc
aas
daa
xor
fsubrl
fs
xor
push
adcl
mov
sti
mov
pop
jle
fdivl
out
jge
dec
cmpsl
popf
adc
inc
sub
ret
cmpsb
mov
fstpl
int
adc
test
mov
or
mov
loop
mov
sahf
mov
pop
jne
xchg
mov
loop
rclb
jecxz
lds
mov
mov
cld
xor
cwtl
sub
push
pop
js
lock
adc
cli
lds
pop
das
mov
insb
or
or
and
ret
fs
dec
dec
frstor
jbe
sub
jecxz
incb
add
pop
xor
dec
lds
loopne
movsl
adc
mulb
lret
cmp
add
cmp
popa
iret
xchg
push
pusha
mov
push
test
jecxz
mov
sbb
mov
add
inc
into
imul
std
dec
jp
push
add
jecxz
pop
pushf
cmp
dec
xor
imul
push
dec
mov
add
mov
aam
mov
sarl
jecxz
test
repz
js
xor
inc
in
sub
add
cmp
cld
sbb
hlt
int3
or
jne
in
lret
cltd
arpl
shlb
pusha
mov
out
jl
xor
movsb
xor
push
clc
and
pop
shrb
pop
cmpsb
adc
jne
push
dec
and
or
icebp
inc
ljmp
sub
arpl
mov
or
movsl
add
int3
and
out
addl
push
jae
mov
xor
pop
xchg
cli
sti
jle
sub
js
enter
or
push
jns
jge
xor
mov
insb
or
mov
add
test
mov
fldt
push
test
sub
decl
jno
xor
roll
roll
leave
scas
push
movsl
test
jmp
out
lahf
or
mov
xchg
mov
cltd
jecxz
cmp
roll
rcrl
movhps
popf
loop
insl
lds
fldcw
repnz
outsl
fs
lahf
out
lock
loopne
adc
mov
jl
cli
pop
mov
mul
mov
stos
iret
sub
xchg
out
sbb
jno
cmp
xlat
popf
scas
and
cmp
pop
pop
dec
xor
jae
mov
xlat
clc
inc
or
fmul
or
jg
sub
imul
add
dec
out
dec
jl
imul
scas
jl
fimuls
shll
mov
call
mov
xlat
mov
add
mov
mov
dec
xchg
sub
mov
in
mov
bnd
add
jbe
lods
jp
scas
lahf
in
cmpsl
xchg
mov
push
xor
popa
or
cli
lods
inc
loope
mov
inc
push
int3
mov
add
in
cs
or
ja
int
data16
sbb
add
push
adcl
dec
ljmp
mov
jne
pop
negl
dec
and
loop
add
add
add
sbb
mov
out
fnstcw
push
adc
xchg
inc
jnp
push
rdpmc
push
shrb
gs
mov
and
cmc
stos
jb
cmp
or
sbb
ret
push
mov
add
and
jge
in
inc
add
mov
cli
push
and
fstpt
dec
inc
jge
push
shrb
in
inc
jno
xor
fidivl
dec
mov
cmp
push
add
imulb
in
jnp
adc
cmp
sub
xrelease
jecxz
insl
or
sbb
inc
and
pop
imul
mov
lds
mov
push
push
lock
lods
frstor
mov
daa
ds
pop
and
xor
xchg
lods
and
rolb
lock
daa
loopne
stos
xor
add
mov
loop
lods
cmpsl
pushf
sbb
popa
aad
stos
rdmsr
mov
subl
dec
pop
aad
and
xchg
push
or
push
mov
repz
lcall
loop
dec
in
adc
pop
jne
test
xor
out
gs
test
xchg
inc
arpl
or
mov
push
in
cmc
cmp
shrb
rcll
lahf
inc
fistps
cmc
fs
sahf
mov
jne
push
push
cld
mov
pop
or
jae
stos
in
mov
icebp
add
andl
mov
shlb
xchg
fs
lret
push
cmpb
rcr
push
or
xor
lock
orb
and
les
daa
lea
cwtl
pop
sbb
sbb
popf
je
ds
mov
stos
scas
lcall
cmp
andb
pop
iret
jo
cmp
stos
into
fld1
mov
dec
jp
mov
pop
push
popa
pop
imul
scas
sahf
cmpsb
dec
test
test
test
and
fisttps
push
push
adc
push
aam
lret
ret
fsubs
sub
adc
sbb
insl
daa
pop
fcmovnb
stos
and
addr16
cwtl
stos
push
mov
aam
roll
push
sahf
jmp
or
jmp
in
in
arpl
out
fs
jno
pushf
sub
or
je
sahf
xchg
rcr
stos
mov
pop
or
add
movb
popa
hlt
xchg
push
loopne
push
pop
bound
mov
fcmovnu
rorb
xchg
fcom
pop
in
xchg
cs
adc
out
cmpl
inc
xchg
out
xor
sbb
sub
nop
mov
sub
nop
popf
fnstsw
push
int3
pmuludq
xchg
cwtl
push
sti
push
sbb
mov
in
filds
cld
sahf
lahf
dec
sahf
lock
aad
mov
icebp
stos
inc
repz
xchg
adc
xlat
sbb
test
push
and
sbb
pop
mov
pop
mov
push
fwait
ds
xchg
scas
sbb
add
mov
sbb
push
or
inc
cmpsl
adc
icebp
out
sarl
addr16
add
es
outsb
and
daa
push
loope
pop
mov
pop
mov
adc
mov
imul
test
rclb
mov
mov
std
js
mov
repz
sbb
and
sub
addr16
gs
sub
loop
incl
test
int
call
xchg
push
and
ficoms
pop
jle
jl
int3
testb
pop
es
jl
lods
testl
gs
data16
bound
mov
out
jno
push
lcall
push
fistpl
xor
sbb
outsb
inc
std
cli
cmp
fidivrl
or
out
mov
jle
inc
lods
mov
jge
fisubl
lahf
cmp
jne
cmp
test
mov
insl
add
fiadds
shrl
cmp
por
jns
mov
pop
lea
xchg
lods
hlt
add
mov
enter
nop
sub
cwtl
scas
adc
push
jl
mov
mov
sbb
adc
or
pop
adc
jne
adc
jne
insl
inc
lods
mov
fsubr
or
dec
out
mov
insl
xor
and
popl
sahf
cli
xchg
pop
sub
mov
cmc
adc
push
mov
pop
mov
test
sub
dec
jge
mov
push
push
loopne
add
push
mov
inc
and
push
and
or
push
sub
lock
xor
and
repz
outsb
ljmp
jge
mov
add
jecxz
dec
push
mov
cmc
call
mov
push
clc
lcall
lds
mov
inc
cmp
mov
lds
aad
lret
jbe
ss
cmp
xchg
scas
ss
and
lock
mov
xor
push
adc
push
pop
inc
inc
aas
subl
lahf
ret
lds
push
out
mov
fsubr
pop
mov
sub
add
ljmp
or
sbb
inc
or
fidivrl
shll
cld
jecxz
fmul
or
repnz
js
sbb
lret
dec
jmp
inc
adcb
imul
inc
push
out
push
xor
lret
xor
cmp
sbb
lret
into
stos
push
mov
adc
andb
mov
adc
jecxz
push
setl
test
aam
jmp
outsb
leave
sub
dec
adc
add
leave
adc
xorb
sbb
popl
mov
inc
dec
pop
scas
out
xadd
jg
dec
leave
scas
fcmovb
cld
inc
in
mov
jge
lock
aam
xchg
lods
stc
push
iret
jnp
or
int3
pop
push
les
adc
xor
mov
xchg
xor
pop
leave
rorl
ret
clc
push
adc
jg
mov
push
pop
mov
push
scas
shll
popf
movsl
lcall
pop
mov
mov
fcmove
cmp
inc
mov
dec
sub
jo
js
push
inc
stc
jmp
cld
dec
sub
imul
add
push
ss
flds
sti
repz
iret
lods
add
mov
add
cmp
cwtl
xor
mov
imul
cmp
cmp
mov
call
bound
fdivp
lea
test
jg
ret
sub
cmp
lret
les
je
lods
into
xchg
pop
aaa
pop
mov
movsl
cmc
xchg
xor
cmp
jb
inc
push
negb
inc
xchg
test
movsb
arpl
push
sub
mov
rol
andl
and
jnp
sbb
bound
mov
jnp
mov
and
push
mov
das
nop
cwtl
pushf
cmp
cmc
fildll
addl
dec
cmp
popf
push
pop
pop
ret
je
stos
add
sub
adc
loopne
mov
jns
jecxz
clc
inc
inc
je
mov
and
inc
leave
sub
cli
mov
push
adc
lock
lods
aad
mov
or
aaa
lret
das
mov
out
sub
lret
xchg
sub
push
cmpsl
out
pop
in
and
mov
enter
je
ja
mov
jae
mov
loop
nop
fnstcw
sub
xchg
mov
mov
jno
push
fs
shll
mov
or
and
inc
repnz
xor
pushf
jb
inc
lds
fs
cmp
xlat
xchg
cmp
xchg
xor
icebp
xchg
mov
and
inc
dec
adc
mov
cli
push
repnz
nop
roll
in
fadd
mov
pusha
enter
fisubrs
stos
jmp
adc
das
sub
lods
and
rcrb
iret
js
mov
mov
rcrb
cmp
ljmp
jo
cmp
inc
push
dec
rorb
mov
jmp
iret
lcall
dec
ret
std
sbb
push
lock
pusha
movsb
repnz
fstpl
and
adc
xor
loopne
pop
lods
xchg
dec
loopne
scas
mov
sub
pop
add
movsl
imul
dec
fs
lret
fwait
xorb
xchg
lret
sti
in
jb
sbb
cmp
fwait
or
xlat
mov
movsl
lock
pop
pop
int3
pusha
test
mov
xor
jnp
mov
into
testl
arpl
mov
jnp
fistps
mov
jg
add
or
jge
inc
andl
sti
ficoml
xor
mov
data16
daa
sub
test
mov
fwait
loopne
cmc
aaa
pop
xor
jne
mov
adc
int3
xlat
jo
sub
jp
inc
push
call
xchg
cmp
mov
ret
mov
jae
adc
cmc
leave
cmc
pop
pop
cld
xchg
sbb
mov
jmp
mov
mov
test
je,pt
in
and
mov
ret
sub
mov
and
sahf
sbb
or
dec
sahf
repz
ljmp
out
jle
fwait
sahf
add
mov
adc
dec
lods
mov
outsl
pop
xor
mov
test
inc
lds
cmp
pop
jmp
mov
sub
lret
xchg
lods
pop
mov
and
mov
lret
dec
cmp
inc
js
ja
jns
cltd
inc
testl
mov
pop
jae
pop
sub
test
loope
cmpsb
lea
sti
push
repnz
sbb
fisubrs
xrelease
dec
divl
mov
cmp
in
xor
in
stos
cmp
adc
dec
sti
jne
sub
inc
imul
dec
hlt
shrl
push
idivb
mov
inc
stos
das
xor
jge
jo
cli
lds
push
aam
mov
js
sarb
mov
xchg
repz
sbb
bound
fdivr
sub
into
aam
js
jmp
leave
push
dec
ja
sub
and
imul
jns
and
lock
mov
fisttpll
mov
lret
and
stos
rclb
lds
arpl
outsb
or
inc
test
stc
mov
sub
cmp
lahf
ss
jne
mov
ss
andl
iret
sub
pop
xchg
push
cltd
mov
sbb
and
je
scas
lods
pusha
xchg
and
fdivp
or
ret
sarb
mov
cmp
lods
int3
je
mov
adc
frstor
pop
fistpl
mov
cmp
mov
xchg
pop
adc
test
scas
inc
and
mov
iret
cmp
sub
xchg
ljmp
popa
inc
or
enter
fstps
jne
and
repnz
mov
leave
xchg
sub
push
pop
sbb
mov
mov
xchg
or
not
jmp
mov
ds
lods
cmp
dec
inc
inc
add
sbb
stos
out
lahf
pop
inc
sbb
jnp
pop
in
dec
loopne
ret
mov
aaa
test
sbb
sub
push
pop
ss
and
scas
pushf
or
mov
mov
fadd
push
pop
call
push
cmpsl
bound
cltd
mov
scas
pop
fsub
dec
fsubrp
flds
xchg
scas
adc
jge
push
inc
movsb
cli
sbb
out
out
test
jl
sub
pop
imul
add
pop
movsl
or
mov
or
es
loopne
jo
dec
or
rcll
jno
mov
inc
js
ret
popf
or
sub
xchg
bound
lds
iret
sbb
adc
adc
fmull
adcl
mov
inc
in
insb
test
and
ret
es
dec
cmpsl
cmpl
mov
push
lret
add
inc
jae
iret
stc
popf
mov
in
jbe
mov
sbb
imul
push
jge
jns
push
pop
mov
jp
cmc
adc
push
add
push
sahf
and
cmc
jecxz
inc
cli
loope
data16
jge
movsb
mov
jmp
mov
adc
mov
sbb
subb
push
sub
testb
scas
jb
ss
inc
inc
test
and
mov
ja
dec
aam
inc
pop
movsb
xor
pop
cmpsl
xor
lock
scas
bound
pop
push
mov
stos
mov
and
ljmp
jp
dec
xchg
flds
xor
mov
adc
adc
sbb
mov
mov
dec
in
pop
sbb
push
sbb
or
push
adc
aad
fisttpl
add
add
xor
dec
lcall
inc
push
sbb
dec
lret
js
xchg
jno
jle
fwait
xchg
hlt
imul
sbb
xor
sub
popf
xchg
add
nop
in
mov
add
push
xor
addl
push
inc
jnp
js
data16
sahf
cltd
pop
mov
sbb
cmp
xchg
test
mov
mov
and
mov
ret
stos
push
cmp
lret
into
inc
scas
xchg
sub
sub
dec
nop
loopne
mov
fwait
cli
rcll
bound
je
push
xchg
mov
mov
and
mov
jns
or
movsl
ja
cmc
pop
dec
push
fildl
enter
aas
mov
xor
addr16
and
andb
out
dec
lcall
out
pop
int3
push
mov
leave
mov
ja
into
mov
arpl
dec
xchg
push
ret
push
aaa
lea
nop
or
adc
fdecstp
out
cmp
or
sbb
mov
imul
aad
pop
stc
inc
popf
imul
bound
pop
clc
sub
jae
jae
xchg
lea
fcmovnbe
cmc
or
add
adc
cmc
ljmp
data16
cmpsb
adc
addr16
clc
pushf
push
mov
xchg
cli
shrl
adc
add
outsb
adc
ljmp
jecxz
xchg
mov
inc
in
pop
test
les
inc
mov
aas
fs
in
mov
push
inc
push
out
inc
fistl
lea
lahf
xchg
pusha
pop
sub
jno
int3
icebp
push
xor
fcmovnbe
mov
sbb
dec
loopne
out
icebp
iret
or
jecxz
incl
repnz
xor
push
push
lock
dec
jno
mov
mov
outsb
pop
cmc
imul
lahf
inc
es
add
and
or
adc
cltd
pop
lahf
aas
sub
popa
or
lock
pushf
mov
sbb
jne
andb
ja
mov
out
outsb
in
int
sub
sbb
andb
popf
and
mov
out
mov
mov
add
ss
push
pop
dec
push
lret
sbb
out
add
arpl
add
enter
out
pop
xor
lds
test
int
aas
incl
push
sbb
je
push
xchg
mov
test
jg
lods
testb
sbb
out
xchg
lds
sub
pop
add
push
gs
cmp
xchg
mov
add
inc
jns
out
ja
inc
addr16
repz
adcl
int
and
mov
dec
stc
fs
add
xchg
or
pop
ds
push
xchg
inc
out
out
ljmp
hlt
aam
scas
aaa
or
cwtl
popf
andl
movsb
loop
pop
mov
cld
pop
mov
ficoms
fidivrl
mov
cmc
fnstsw
aad
nop
pusha
ss
xchg
mov
shll
jae
xlat
das
xor
fdivl
call
jo
lret
jmp
cld
decl
inc
fdivr
fimull
pop
dec
ljmp
js
into
and
lret
jl
adc
mov
int
push
rcrb
imul
xorb
clc
pushf
push
fnstcw
jne
jne
xor
mov
into
mov
mov
mov
mov
fwait
jg
pop
ficompl
cli
out
inc
iret
push
lods
pop
out
outsb
jl
adc
inc
cwtl
ror
xchg
repz
ret
sub
decl
dec
sahf
movsl
and
test
mov
xchg
jbe
dec
push
loope
mov
in
loopne
inc
lea
ret
mov
ds
sub
mov
xlat
and
mov
adc
test
dec
cs
fmul
rorb
call
pop
jns
out
mov
cmp
dec
sbb
scas
fldl
cmp
stos
dec
std
xor
mov
xchg
jmp
xchg
sbb
fsubrl
mov
ljmp
ret
jle
cltd
pop
dec
jg
push
or
mov
mov
lret
mov
inc
das
pop
cmpsl
rorl
aaa
sub
xor
pushf
fs
mov
rcrl
add
dec
and
adc
fadds
mov
jmp
daa
loop
daa
loopne
push
sub
mov
xor
mov
cld
les
jecxz
sbb
or
sti
pop
hlt
cld
mov
clc
popf
shll
pop
test
and
shll
loop
dec
lods
xlat
arpl
mov
jne
jb
pop
inc
in
test
cmp
dec
or
nop
mov
xchg
out
outsb
cwtl
dec
fcomi
fstps
fwait
jne
psubusb
icebp
loopne
pop
dec
push
xchg
stos
fwait
cmp
sub
add
add
in
arpl
mov
pushf
ljmp
xor
xor
push
sbb
mov
dec
nop
sbb
or
ss
jecxz
rclb
insb
je
loop
stos
std
add
cmpsl
sub
mov
and
xchg
pop
pop
rol
int3
push
or
pop
push
xor
or
dec
inc
iret
bswap
add
dec
jbe
movsb
pop
inc
adcb
or
lcall
icebp
jo
xchg
mov
mov
cmp
adc
pop
scas
fdivrl
fs
sbb
cmp
push
movsb
in
add
xchg
sub
mov
test
xchg
lds
pusha
mov
lock
pop
sub
cmp
mov
andl
pop
orb
aad
dec
mov
sti
xchg
fidivrl
test
sbb
or
cmp
xchg
fistps
icebp
std
or
dec
repz
cmp
sbb
call
bound
inc
xchg
call
inc
lock
dec
mov
rcl
and
sub
cltd
mov
xor
dec
jmp
sbb
scas
stos
jb
std
leave
outsb
mov
in
jmp
jae
sub
clc
cs
ficoml
ja
mov
movsl
cmp
scas
push
adc
xchg
fidivrs
xchg
pop
xchg
movsl
in
repz
inc
in
fnstenv
cmp
rcl
mov
out
inc
movsl
inc
sub
int
sti
jg
shll
mov
dec
das
dec
mov
fsubrs
mov
adc
ja
ds
xchg
xor
sub
push
adc
cmpsl
cmpsb
jns
ret
js
pop
hlt
sub
ret
xchg
mov
inc
insb
repz
leave
pop
pop
outsl
test
ss
jg
adc
nop
cmc
loop
pop
xchg
mov
imul
mov
sti
outsb
add
jp
jns
inc
insb
mov
fisubrs
imul
xchg
jecxz
mov
leave
cwtl
in
add
inc
les
mov
fnstenv
dec
inc
stos
ja
call
mov
in
pop
adc
mov
cs
jbe
cld
add
stos
inc
cmpl
nop
xchg
outsb
ja
icebp
xchg
adc
xchg
arpl
ljmp
decl
mov
jns
xor
pusha
and
mov
adcl
and
add
jae
ret
pop
push
xchg
in
xor
addr16
ret
repnz
inc
jmp
stc
and
push
xor
jae
adc
push
inc
mov
mov
ficomps
movsl
jl
loopne
in
mov
fcompl
push
jae
hlt
lock
outsb
cmp
clc
test
outsl
jp
cmp
inc
es
jp
daa
push
outsb
shrb
shll
rclb
fldenv
or
cmp
inc
test
loope
pop
mov
mov
dec
xlat
mov
jne
mov
movaps
out
inc
mov
fiaddl
inc
dec
add
mov
mov
push
add
iret
jge
jae
aam
mov
jp
or
push
cld
mov
xlat
jmp
jnp
inc
cmpb
imul
jge
test
movb
sbb
orb
adc
sbb
out
xor
in
dec
cmpsl
negl
stos
xchg
jg
outsb
cwtl
leave
data16
xchg
cmpb
mov
lea
ja
sbb
loop
push
psubusb
sahf
daa
outsb
push
repz
dec
mov
and
dec
stos
and
faddl
sub
jbe
sub
inc
xchg
out
sub
mov
rorb
test
js
dec
popa
and
movsl
sub
mov
dec
imul
sub
in
nop
cmp
and
xchg
loop
imul
stc
xor
jb
xor
dec
mov
repnz
xorl
jg
jns
xchg
notb
lea
add
cmc
outsb
or
ret
inc
and
push
adcl
xchg
loop
xlat
outsl
mov
aam
mov
ret
rolb
xor
lds
dec
and
mov
repz
xor
and
dec
push
int3
xchg
into
xor
inc
and
aam
mov
sbb
orl
lahf
std
mov
dec
and
gs
je
and
cmpsl
es
test
cmp
pop
add
insl
mov
cmpsb
add
pop
inc
cmp
out
cmp
ficoms
sub
cli
and
sbb
fs
add
fidivrl
stos
repz
pop
push
ja
mov
pop
pause
movsb
shlb
push
lods
out
lods
pop
push
or
aaa
ss
jle
outsl
cwtl
movsb
add
hlt
dec
xchg
cmp
bound
jl
xchg
std
sub
pusha
push
fstl
xor
dec
ret
cmp
mov
mov
or
sub
lahf
call
inc
inc
mov
stc
lock
loope
inc
sbb
inc
jg
out
jo
js
psraw
inc
clc
mov
mov
mov
mov
xchg
inc
mov
mov
push
scas
inc
les
mov
jp
loopne
jle
std
addr16
leave
iret
push
push
je
dec
pop
fdivrl
hlt
lock
addr16
inc
pop
shl
popa
jbe
das
rorb
pop
cs
sbb
or
scas
loope
fimull
cmp
pushl
cmp
pop
rcrb
xor
add
adc
xchg
mov
sbbl
xor
inc
pop
pop
or
stc
je
adc
dec
outsb
mov
and
ficomps
xor
mov
int
push
cmpsb
add
lcall
adc
test
out
push
fwait
dec
sub
je
mov
ss
cld
repnz
adc
mov
push
daa
cs
sub
ds
das
add
xchg
xor
in
mov
push
mov
pop
fidivs
ret
bound
mov
mov
sub
and
lahf
mov
push
dec
mov
add
push
aad
pop
push
lea
push
sub
cmpsl
xchg
stc
sub
lcall
lods
jae
mov
dec
test
pop
movsl
sub
push
dec
sub
add
dec
aaa
sbb
rclb
icebp
or
or
or
and
and
jo
in
ja
add
outsb
and
push
xlat
in
std
repz
inc
movsl
popa
sarl
push
adc
sbb
test
aaa
movsb
in
in
sbb
sub
je
and
in
nop
cmpsl
sbbl
jmp
ja
cli
int3
std
lret
jmp
test
mov
xor
arpl
xchg
fildll
les
jns
lretw
outsb
out
jae
xchg
push
sbb
sub
sbb
js
and
adc
movsb
xchg
adc
enter
or
ffreep
xorl
into
pop
or
aam
test
mov
xchg
mov
insl
pop
enter
out
stos
push
in
jo
pmaxsw
pminub
mov
cmc
cmp
cmp
cmpsb
xchg
sbb
pop
aaa
outsb
imul
jnp
clc
dec
add
inc
aas
ret
fdivrs
scas
shl
pop
stos
jne
mov
xor
and
xor
testl
dec
lret
xchg
mov
sbb
inc
cwtl
cmc
pop
inc
leave
outsb
ss
jl
int3
or
ja
push
push
push
mov
and
lea
jo
mov
jge
sbb
cmp
push
adc
adc
loopne
pop
or
pop
out
add
lods
mov
test
movb
sahf
jg
andb
je
jmp
xor
imul
leave
test
add
push
imul
fisttpll
cmpsb
cmp
iret
test
and
mov
pusha
jg
jno
jg
xorl
dec
dec
inc
or
sbb
xchg
dec
push
out
icebp
xchg
or
mov
ss
fcomps
pop
cs
pop
sub
mov
mov
inc
dec
or
rep
ret
xchg
and
xchg
loop
leave
adc
subl
jle
pusha
bound
or
lret
out
dec
divb
arpl
into
shll
gs
cmp
ja
imul
inc
or
std
and
push
imul
mov
cmc
cli
aaa
lea
sbb
mov
gs
ret
out
mov
lret
ret
les
push
mov
mov
pop
sbb
daa
cmp
xchg
insl
adc
out
xchg
and
inc
xchg
les
repz
jno
jne
push
dec
lods
loope
addl
cmp
xor
aam
xor
pop
add
test
adc
or
outsb
jns
outsb
or
push
cs
xchg
fst
xor
add
ret
popa
jl
andb
pop
ljmp
fnstenv
les
push
jnp
pop
out
leave
out
push
rcrb
jle
add
in
stc
pop
idivl
sahf
xchg
in
sbb
jo
mov
xorl
insl
jg
adc
loop
inc
sti
mov
ds
xor
mov
mov
xlat
push
mov
stc
jp
lea
mov
xchg
adc
xor
mov
dec
push
pop
ja
call
xor
repnz
sbb
iret
movsl
fcmovu
jl
in
lea
add
arpl
jmp
lcall
inc
std
shrl
push
mov
xor
mov
cmp
dec
sub
fldt
ds
sbb
and
or
mov
popf
call
xchg
or
dec
xchg
push
pop
lods
test
xchg
pop
mov
sbb
int
mov
mov
js
ljmp
sbb
out
sub
cmp
pusha
mov
inc
test
test
repz
testl
or
jl
inc
sbb
stc
cmc
das
loop
sub
push
repz
or
outsl
mov
push
popa
scas
xchg
ljmp
mov
xchg
or
arpl
dec
jecxz
dec
les
xor
pop
xchg
icebp
fdivl
cmp
cli
lds
decb
mov
inc
add
jo
dec
mov
push
test
lret
fdivrl
jb
clc
xchg
xor
inc
xor
scas
int
push
test
and
push
leave
inc
lods
dec
push
pop
push
add
dec
in
push
iret
add
sub
std
pop
imull
leave
pop
and
jmp
fildll
dec
or
or
fwait
cmp
push
adc
aaa
shrl
imul
ds
xor
test
push
xchg
sbb
nop
lock
jno
xchg
lcall
push
clc
fs
call
out
sub
dec
fistpll
fiaddl
inc
sub
jl
and
push
dec
push
mov
jbe
pop
cmp
sbb
pop
jno
xor
fimull
mov
idivl
xchg
cmpsl
and
xchg
dec
sub
mov
arpl
xor
and
gs
sti
inc
popf
mov
and
push
jg
and
in
iret
jb
rcll
fdiv
les
xchg
push
rcrb
sahf
test
sub
ds
add
push
jb
movsb
pop
aad
loop
jae
dec
sbb
xchg
movsb
sub
inc
int3
fcomps
inc
int
orb
adc
add
lds
cmp
add
ja
scas
dec
aam
bound
inc
pop
mov
cmpsl
mov
add
mov
jge
sub
jecxz
mov
fdivl
push
add
xchg
out
jno
dec
xchg
lss
js
inc
ja
xchg
pop
test
je
cli
jae
scas
cmp
mulb
xchg
pop
jmp
je
cmp
in
dec
xchg
xchg
les
xor
adc
divb
outsb
stos
jle
sbb
out
mov
jnp
lret
jp
inc
test
inc
imul
daa
mov
xchg
push
adc
mov
sahf
stos
or
pop
mov
loopne
sub
lret
ret
lahf
add
jl
mov
mov
pushf
jg
cmp
inc
mov
adcl
xor
pop
sub
sub
and
mov
xchg
loopne
das
loope
inc
mov
add
fucomp
mov
call
xor
movsb
dec
mov
fsubrs
sahf
add
push
sub
xlat
bts
pop
push
shl
mov
fcmovne
xlat
fiaddl
ret
jne
xchg
in
inc
and
fs
dec
sti
out
push
mov
adc
arpl
in
xlat
test
adc
pushf
mov
mov
jge
xchg
subl
sbb
rcll
ljmp
das
ljmp
pop
or
pop
xchg
xchg
std
xchg
and
and
inc
lods
addl
sub
fsubp
xchg
cmp
push
or
push
test
out
pop
insb
xchg
lds
das
fcomi
nop
repz
ljmp
dec
and
dec
insl
push
cmpsb
mov
push
addl
mov
cmp
cmpsl
dec
insl
test
lods
xchg
notb
sub
fcompl
jecxz
mov
adc
mov
cmp
mov
test
dec
rcrl
sbb
lock
mov
pop
inc
or
lea
icebp
ud1
movsb
movl
mov
adc
clc
mov
and
subl
mov
push
sbb
loope
push
fdivs
call
jle
and
adc
mov
data16
fdivr
inc
sbb
push
fcmovne
xor
int
daa
add
sbb
jecxz
jbe
jb
xchg
pop
lret
enter
pop
lods
cmp
insl
repz
pop
xlat
jge
movsl
mov
in
pop
clc
test
mov
sahf
xchg
cmp
xor
sbb
mov
loopne
lret
lcall
xchg
insb
imul
and
add
lcall
insl
mov
mov
jns
pop
gs
scas
popa
ret
push
aas
hlt
rcrb
jae
mov
les
xchg
xchg
dec
test
orb
jae
scas
mov
loop
add
hlt
mov
faddp
pop
test
adc
ljmp
cs
jnp
xor
sbbb
and
xchg
xchg
ja
mov
mov
add
popf
add
ret
xorl
in
rclb
iret
dec
lcall
lahf
xor
lds
jp
or
dec
xchg
cmp
testb
mov
or
mov
adc
mov
jecxz
lock
lea
push
in
mov
dec
and
loopne
lahf
xor
repz
xor
std
jg
mov
hlt
push
pop
movsb
xor
hlt
add
shll
xor
cmp
test
lret
mov
icebp
push
jmp
jecxz
adc
inc
decl
cmc
ljmp
lahf
loope
rorb
or
aaa
sahf
mov
in
xchg
loop
xor
pop
jnp
sub
scas
shll
ljmp
insl
lods
movsl
sub
sub
stc
pop
fmull
enter
gs
cmpsb
pop
lret
push
and
out
pop
fmuls
sti
pop
lods
outsb
rorl
cwtl
cmp
mov
lods
sbb
sarl
divl
flds
lcall
jge
or
sbb
cmp
mov
stos
mov
pop
lds
jg
mov
pusha
add
xor
adc
loope
or
test
js
inc
aam
push
push
mov
jbe
mov
push
or
mov
mov
enter
mov
and
jne
aad
ljmp
xor
sbb
or
or
dec
pop
nop
cmp
dec
mov
pusha
out
xor
mov
cmp
leave
sub
daa
push
mov
cmp
push
dec
in
mov
jbe
mov
lret
lds
inc
daa
lcall
into
dec
or
sub
adc
scas
enter
mov
push
sbb
outsl
aad
movsb
sbb
fldl
cli
fisubrs
push
push
pop
and
xor
stos
mov
push
mov
xor
sarl
add
das
les
fwait
jmp
add
dec
sbb
sahf
sbbl
repnz
mov
fwait
jnp
stc
icebp
loop
rcr
push
in
sbbb
imul
mov
int3
sub
es
mov
and
mov
push
das
in
mov
dec
fst
lcall
jecxz
sarl
movsb
inc
mov
loope
xchg
insb
fidivrl
ljmp
jl
rcr
mov
or
xor
loope
rorb
mov
imul
lea
out
nop
sub
iret
rol
jb
aam
in
mov
pop
adc
dec
int
cmp
pushf
mov
std
xchg
shrb
push
mov
movsb
data16
cmp
pop
inc
aas
cmpb
loop
push
aad
inc
lds
nop
cmp
xchg
in
mov
ljmp
ret
sub
sub
or
insb
scas
imull
int3
out
xchg
leave
mov
fbstp
dec
mov
insb
fbld
ja
mov
inc
sbbl
icebp
pop
xchg
and
scas
mov
clc
mov
pop
pushf
cmp
adc
cmp
pusha
mov
pop
cmp
adc
mov
hlt
jbe
or
or
adc
rcrl
aam
sub
ffreep
mov
or
lods
cmpsl
pop
dec
imul
mov
jl
shlb
out
outsb
sub
jnp
push
js
jbe
dec
scas
add
jmp
icebp
sub
data16
xchg
dec
pop
dec
lcall
and
xor
pop
jmp
xlat
mov
adc
mov
dec
jo
lea
push
inc
push
adc
or
adc
xchg
imul
cli
add
dec
adcb
jo
sub
jb
pop
cmc
mov
cmpsl
je
sbb
faddl
mov
je
out
jle
jg
ljmp
sbb
mov
or
jge
hlt
cmp
into
test
cmc
jmp
add
or
push
xchg
sub
and
orb
mov
inc
ljmp
push
div
inc
pop
ss
mov
sub
fsubrp
xchg
imul
sbb
inc
pop
jb
mov
jmp
lds
std
xlat
mov
jo
mov
repz
scas
std
nop
shrl
adc
in
repnz
out
fsubr
sbb
nop
xchg
pop
leave
rolb
xor
jg
push
fcoml
dec
xorb
lds
push
rcrb
push
mov
mov
shll
std
lret
xor
movsb
nop
and
pop
push
in
test
pop
xchg
shlb
or
mov
mov
push
roll
and
into
ds
leave
xor
in
cmpl
mov
ljmp
or
shrl
in
dec
cmp
gs
or
push
or
pop
daa
out
mov
pop
add
daa
sub
or
sub
inc
sub
mov
sbb
aaa
jle
xchg
sbb
add
jae
ror
jns
je
adc
fnsave
add
sbb
push
xchg
sub
add
xor
aaa
cmp
and
imul
sbb
subl
sub
nop
xor
jg
xchg
sub
cltd
clc
push
js
arpl
notb
sbb
shlb
test
sub
and
xor
adc
mov
stos
stos
mov
outsb
mov
or
or
mulps
and
mov
cmp
dec
stc
cmp
xchg
sbb
sbb
push
ret
sub
xchg
shlb
or
xor
imul
pop
adc
xor
lahf
sbb
cmp
insb
ret
xor
aaa
push
nop
push
and
add
cmpsl
lock
xor
out
leave
ficomps
sbb
test
ljmp
and
mov
and
mov
std
shrb
jb
lods
js
or
ja
mov
mov
pop
sti
loop
adc
test
ret
mov
icebp
sti
cmp
sub
lods
mov
aas
into
int
movsl
sbb
lcallw
or
add
leave
lds
sbb
enter
jne
add
rorb
xchg
repnz
pusha
inc
mov
push
mov
and
mov
xor
push
xchg
cmpsl
sub
sti
mov
adc
mov
inc
fstl
mov
xor
sbb
pushf
xor
mov
jne
push
rcll
sar
std
pop
lds
xor
dec
sbb
into
sub
jle
loop
stos
mov
and
lahf
cwtl
push
ds
repz
mov
std
outsb
testl
cwtl
fs
aas
scas
ss
xor
xchg
dec
mov
mov
lret
pushf
jl
xor
pop
ljmp
xchg
leave
jmp
mov
rcr
lcall
cs
bnd
sub
jbe
dec
fnsave
add
rclb
daa
ficoms
adc
sub
jb
sbbl
sahf
movsl
sub
pushf
stc
jae
cli
int
and
xor
lcall
jmp
dec
pop
rol
seto
mov
loopne
rcl
frstor
dec
and
xchg
add
inc
fildll
and
lahf
mov
sbb
popa
test
xor
jmp
scas
in
jl
jb
xchg
iret
dec
fcoms
push
push
push
loop
add
pop
xchg
call
ljmp
sub
in
or
fwait
mov
xor
or
fnsave
and
sub
and
cld
lret
dec
fwait
fs
adcb
xor
in
sbb
movsl
ja
mov
je
jp
cmc
mov
pop
sbb
bound
xor
sbb
push
clc
xchg
sti
mov
push
or
adc
lret
lret
inc
popf
xchg
jmp
xchg
clc
scas
jns
cli
mov
mov
adc
cmc
out
loopne
js
push
mov
mov
add
lds
mov
xchg
cmp
in
cwtl
mov
push
daa
aas
sub
pop
or
and
jne
fimuls
xchg
jb
add
arpl
dec
dec
add
xchg
ja
cwtl
ret
sahf
xor
in
call
sub
test
and
loopne
inc
cmp
inc
jb
das
js
jge
loopne
mov
notl
in
push
loopne
sbb
mov
or
shl
xchg
push
or
cwtl
mov
jg
das
push
add
push
jmp
cmpb
pop
pop
cltd
fdivs
mov
and
aaa
ja
mov
mov
push
push
scas
enter
add
sbb
pop
sub
mull
cwtl
and
adc
jb
cmpsb
sahf
dec
and
inc
bound
adc
push
js
addr16
pop
xchg
popf
ret
jne
or
setp
divb
imul
aaa
cmp
pop
test
iret
and
jnp
mov
mov
adc
cmp
push
mov
push
int3
sub
push
std
sbb
loope
xor
mov
inc
cmp
aad
test
xchg
ss
xchg
cmp
mov
dec
dec
push
adc
cltd
adc
inc
lods
pop
mov
inc
decb
fs
es
mov
xchg
xlat
std
pusha
sbb
cli
inc
int
xchg
inc
scas
aam
mov
ja
cs
mov
iret
xchg
jge
roll
fistl
and
cmpsl
int3
out
mov
add
arpl
xchg
add
inc
and
inc
mov
inc
aas
js
push
gs
or
adcb
sahf
xchg
inc
cmp
fistl
stos
mov
je
sub
jg
pop
xchg
push
in
push
pop
cltd
sahf
out
stos
icebp
push
push
out
lods
adcl
xchg
inc
and
shll
arpl
jle
fidivrs
ljmp
adc
pop
popa
mov
shl
sub
bound
lods
lret
fwait
mov
dec
mov
xor
sbb
test
jae
adc
or
adc
push
enter
inc
fnop
sahf
arpl
pop
jecxz
rcl
mov
mov
and
ljmp
mov
shrb
es
push
push
push
mov
jb
hlt
into
int
xchg
out
jbe
pop
bnd
jbe
inc
push
in
add
das
fucompp
sarb
pushf
mov
loop
mov
arpl
movsb
and
jno
jp
enter
lods
imul
sbb
mov
xchg
ja
enter
out
test
pop
inc
lcall
mov
mov
popa
jl
mov
mov
xchg
dec
pop
cmp
xor
int3
or
xlat
lret
xor
insb
inc
or
bnd
push
sub
mov
in
add
jae
or
pop
test
mov
icebp
stos
cs
dec
jp
enter
mov
scas
pop
rcrb
jno
inc
dec
xor
cs
pop
lods
out
cmp
adc
pop
mov
outsl
jbe
jne
mov
fdivp
fcmovbe
jnp
lock
in
push
xchg
push
pop
pop
add
pop
cltd
push
jb
push
into
sbb
mov
jbe
pop
cmc
mov
xchg
imulb
sbb
fisubs
sahf
outsb
bound
rcr
push
dec
std
push
xchg
sub
sub
ret
xorb
outsb
xor
daa
adc
cmc
jns
adc
frstor
dec
cmp
sti
leave
push
mov
mov
push
mov
call
jl
push
mov
push
push
lds
mov
push
bsr
adc
nop
lods
and
insb
or
sahf
fsubs
insl
jp
and
pop
fsubs
ret
shlb
ret
js
pop
xor
dec
sub
insl
mov
lods
jno
inc
cmc
adc
pop
push
xchg
mov
pop
pop
mov
icebp
popf
rcr
pop
mov
sti
push
into
mov
inc
xchg
mov
lods
lret
insl
pop
pop
aad
sahf
lret
cwtl
adc
xchg
and
sub
dec
jmp
inc
dec
ficomps
or
adc
push
adcb
out
pop
jl
mov
push
add
dec
aas
into
cmp
mov
inc
sub
or
mov
and
fildl
inc
lods
sub
adc
sbb
pop
push
bound
dec
ror
push
sbbl
fs
push
lds
xor
loope
sub
fstpl
je
xor
add
in
jl
mov
jo
add
cmp
push
add
js
fstps
xchg
movsl
imul
nop
xchg
mov
test
dec
inc
in
orb
jecxz
mov
mov
mov
xor
xchg
popa
cmpsb
insl
add
loopne
mov
add
call
xor
mov
inc
out
lea
or
sarl
sti
aaa
into
cmp
int3
fmul
lcall
fsubrs
dec
out
push
mov
js
jle
popa
cs
add
push
jbe
or
pushf
lds
xlat
fs
mov
fs
loope
cwtl
inc
pop
pushf
mov
fcoml
leave
fldl
push
negl
lods
lods
inc
dec
pushf
sub
into
sub
pusha
sbb
and
cmovl
mov
inc
jno
outsl
outsb
push
je
sbb
xchg
push
mov
inc
cs
pop
loop
add
pop
dec
sub
dec
mov
mov
pushf
cmpsl
and
inc
jle
push
loope
cld
push
enter
lods
es
lret
mov
sbb
adc
jmp
pop
push
pop
gs
testb
movsl
mov
pop
std
jno
sahf
aas
add
aam
inc
xchg
and
bound
rorl
cs
inc
lret
fidivrs
inc
jp
sub
xchg
fwait
cmp
into
shll
cwtl
sbb
cmp
enter
xor
mov
cmpsb
push
das
int
sub
pop
jg
sbb
mov
icebp
lcall
loopne
xchg
push
lock
sbb
jae
aad
scas
jge
sbb
jl
outsl
add
incb
int
insb
mov
cmp
and
jae
jmp
dec
es
je
jae
push
cmp
fldcw
adc
mov
mov
test
adc
insb
inc
stos
cli
in
push
roll
mov
adc
ss
in
les
xor
xlat
cmp
jns
and
pop
outsb
push
bound
mov
in
xchg
xchg
es
in
int
dec
mov
adc
sub
addr16
mov
lcall
jns
std
dec
and
fnsave
pop
sbb
adc
test
dec
or
mov
add
push
sub
sti
shlb
xchg
adc
aas
cli
push
aad
jg
loope
imul
cmp
inc
call
test
xchg
add
call
push
ret
loopne
rcl
adc
push
sub
cmp
adc
jl
sub
roll
imulb
lcall
iret
fstps
cli
pushf
xor
jno
inc
call
movsl
add
in
ljmp
sbb
cltd
mov
push
or
inc
fildll
push
in
and
xchg
mov
bound
cltd
jno
xchg
cmpsb
cmp
jecxz
jecxz
xchg
dec
ljmp
mov
mov
btr
inc
jns
mov
test
fcomip
movsl
inc
mov
rclb
call
cld
leave
hlt
fldenv
adcb
fildll
or
mov
insb
dec
inc
dec
ds
std
jns
pop
fwait
xlat
add
repz
lods
adc
repz
xchg
ds
dec
lahf
mov
imul
arpl
push
lock
xchg
xchg
lea
xchg
adcb
in
repz
jbe
pop
sub
cli
dec
cmpsb
mov
adc
in
inc
cmp
pop
push
aad
dec
lret
out
xchg
pop
je
ficoms
push
xchg
jo
cmc
mov
int
iret
cmp
mov
test
or
push
fs
or
mov
scas
inc
push
insb
jle
pushf
sbb
negl
adc
sbb
jecxz
bound
stc
mov
daa
mov
mov
outsb
in
cmp
mov
adc
ljmp
pushf
or
stos
lds
add
cmc
ret
enter
adc
imul
inc
test
scas
fimull
lea
scas
call
jp
sbb
insl
mov
xchg
es
cmpb
insl
adc
pop
push
xchg
popa
andb
bound
repz
sub
in
jns
adc
ret
sbbb
mov
gs
dec
adcb
fisubrl
fisttpl
test
inc
xchg
lea
in
cli
pushf
mov
fistps
add
cmpsb
and
inc
and
jmp
shrl
cmpl
push
jb
fcoms
sahf
xchg
inc
fucomi
jecxz
pop
add
pop
iret
imul
jge
clc
mov
aam
xchg
imul
push
mov
mov
in
jmp
iret
movsl
js
outsb
push
or
aam
inc
std
loopne
mov
or
mov
sahf
xor
fwait
push
rorb
sbb
clc
sarl
jecxz
add
int
xchg
sahf
aam
ds
dec
je
and
pop
and
inc
inc
pushf
adcl
sbb
aaa
or
or
mov
jl
sbb
mov
hlt
hlt
loopne
lret
cmp
jne
nop
ja
addr16
and
vpsubsw
sub
sbb
arpl
stos
mov
inc
sub
dec
mov
mov
movsl
daa
add
mov
or
das
sub
or
inc
jle
adc
sbb
loop
pop
ja
sub
lret
cmp
js
sub
mov
add
out
inc
jno
leave
xor
aad
mov
xchg
jns
mov
rorl
ljmp
add
dec
lock
pop
cmp
popf
js
push
push
sub
pop
fisubl
std
pop
cmc
cmc
cld
out
mov
arpl
fwait
cld
mov
icebp
xchg
pusha
push
outsl
je
jecxz
aas
ror
jl
sti
add
sarb
fdivrl
push
inc
test
sub
popf
bound
jb
orb
dec
je
adc
out
aaa
in
idivb
jl
je
jb
xchg
lock
out
mov
les
jl
repnz
cli
xchg
iret
shr
testb
shll
mov
mov
push
pop
or
scas
add
mov
adc
scas
es
fs
add
pop
aaa
test
or
jp
or
mov
mov
pop
pop
loop
inc
ds
orb
lock
dec
jne
std
les
andb
daa
roll
mov
sbb
mov
das
rcrl
test
mov
and
sahf
push
out
out
add
outsb
scas
popa
jg
xchg
xor
push
dec
push
sub
or
fstl
nop
fisttps
dec
fdecstp
inc
cli
insl
es
jbe
pop
xchg
scas
xchg
jbe
arpl
fimull
stc
jae
push
adc
xchg
push
inc
jbe
bound
or
addr16
mov
gs
in
mov
mov
lret
scas
je
push
sti
les
sbb
rolb
repz
cmp
jmp
sbb
mov
mov
xlat
xchg
xchg
adc
and
jmp
cmp
ret
repz
sbb
movsb
mov
mov
test
sahf
push
jg
idivl
aaa
cmp
rcrb
adc
cwtl
adc
or
idivl
cmp
sub
lock
dec
gs
enter
loop
pop
insl
cld
movsb
and
rorl
cmp
int
les
xchg
and
ret
mov
repnz
mov
mov
mov
into
push
cmc
add
push
addb
fisttpll
movlps
in
pushf
repnz
fs
xchg
jg
into
fcoml
xchg
adc
lea
xchg
test
sar
xchg
nop
cmp
lret
loopne
mov
hlt
jg
push
mov
mov
mov
push
mov
ret
pop
push
mov
sub
dec
std
in
mov
mov
cmc
arpl
and
pop
cmp
sbb
out
adc
jbe
add
adc
cmp
ljmp
push
sub
push
je
push
imul
or
sbb
sub
mov
inc
xchg
ficoml
lds
pop
les
fldl
outsl
xchg
rcrl
push
add
mov
add
jmp
in
ja
push
in
pop
inc
mov
sbb
dec
mov
cmp
movb
insb
mov
add
lods
mov
les
cltd
jno
call
add
iret
cmpsb
jne
adc
movsl
and
sub
mov
ljmp
iret
cld
inc
mov
ljmp
popa
ret
lods
jne
ficoms
xchg
std
dec
popf
out
push
sbb
fwait
imul
push
addr16
and
stos
xchg
push
jns
insb
xchg
mov
cmp
mov
jl
add
daa
push
mov
add
arpl
movsl
mov
shll
pop
pop
daa
cmpb
mov
sbb
cmpl
clc
ds
aaa
xorl
push
jno
js
inc
arpl
xchg
xchg
clc
jl
stc
mov
in
adc
push
iret
push
adc
sarb
popa
and
lds
push
xorb
jg
int3
mov
hlt
insl
mov
inc
or
inc
inc
inc
adc
stos
add
rcl
or
mov
popa
xorb
arpl
lret
xor
adc
das
and
repz
dec
xchg
test
scas
test
cli
mov
into
sub
aad
push
jns
js
cmp
ret
lret
xlat
int
adc
inc
movsb
cmp
loope
pop
aam
and
adc
mov
aam
into
mov
mov
loop
inc
lcall
push
dec
scas
or
shrb
ljmp
popf
rcl
mov
adc
insl
mov
cmp
out
ds
cwtl
sub
mov
cmp
push
lods
call
imull
fsubs
mov
int3
mov
push
dec
sar
mov
jbe
pusha
call
into
aas
test
cmc
dec
lahf
es
testb
cs
xchg
mov
push
mov
jecxz
ret
lea
movb
xor
sbb
ja
add
jle
test
sub
or
add
pop
and
push
xor
je
out
loope
shlb
loopne
rcr
lea
dec
andb
jmp
lret
leave
adc
out
or
pop
loope
movsl
mov
xchg
cmc
push
or
ds
lock
nop
leave
jle
cmp
cld
adc
sbb
mov
add
xlat
gs
sbb
xchg
daa
lret
aaa
imull
icebp
out
xor
add
dec
das
adc
mov
dec
mov
add
subl
adc
jge
addl
ror
je
pop
sahf
ds
push
out
pop
imul
inc
scas
adc
xchg
mov
sub
outsl
jp
add
xlat
sti
cmp
stos
push
aaa
mov
push
cltd
mov
xlat
mov
test
sbb
movsl
sub
add
push
cmpsl
push
sbb
nop
es
mov
divb
sbb
jbe
out
loopne
mov
popf
jnp
pop
ficompl
shrl
mov
pop
cmp
notl
pusha
clc
mov
repz
fisubrs
ljmp
stos
shll
mov
xrstors
pop
lea
add
add
js
imull
or
adc
outsl
cs
ljmp
scas
xchg
adc
adc
add
pop
cmpsb
mov
cmpsl
cmp
push
xor
pop
or
aas
movsl
inc
xchg
aaa
sub
ja
cmpsl
or
add
xor
push
jmp
out
clc
lret
mov
jp
fcoml
sbb
mov
sub
test
pop
dec
xchg
adc
mov
lock
nop
cli
sbb
cmp
addl
and
cmp
adc
xor
push
mov
jns
xlat
sub
cmp
jl
push
and
stos
cld
dec
repz
cmpsl
lds
shll
pop
rcl
notb
lods
rcll
les
out
xchg
jb
jo
fs
dec
xchg
inc
or
out
dec
icebp
shlb
stc
faddl
add
lods
arpl
add
add
mov
xor
cmp
adc
inc
ret
mov
inc
cmp
dec
cmpsb
inc
sub
mov
mov
push
rolb
sbb
or
subb
xor
bound
fwait
mov
sbb
call
outsl
ljmp
xor
lahf
dec
jge
xchg
incb
leave
loopne
shlb
inc
mov
lret
sti
out
inc
rcll
adc
lret
inc
mov
pop
cld
push
lret
sbb
sub
push
test
sti
xchg
and
jns
push
div
adc
or
xor
mov
xor
popw
ds
mov
xchg
jp
scas
pushf
adc
das
sbbl
xlat
enter
xor
fwait
sbbl
test
push
jnp
mov
mov
mov
xchg
xor
jo
add
mov
orl
ljmp
pop
pop
ljmp
bound
push
cmc
cs
inc
xor
pop
push
out
repnz
cmp
movsl
jns
test
orl
mov
xor
or
xchg
insb
adc
fcompl
enter
outsl
mov
in
pusha
lds
test
movsb
jo
int
lock
jnp
sti
push
ret
inc
jne,pn
push
rcrl
shr
push
and
ja
push
dec
sti
ljmp
mov
and
mov
and
mov
jbe
mov
mov
fnstcw
xchg
imul
jg
sti
jle
jb
add
lret
sbb
jg
into
insl
xchg
push
jmp
sbb
cmp
sub
push
popa
mov
jge
inc
sub
jb
sub
pop
dec
and
mov
int3
or
adc
mov
imul
or
subb
cwtl
pop
push
insl
rcrl
inc
ja
push
dec
push
push
fisubs
repz
pop
push
mov
aaa
out
xchg
fbstp
cltd
icebp
in
push
push
mov
hlt
js
fmul
scas
test
inc
cmpsl
rclb
push
popa
mov
push
sub
pop
inc
sahf
shll
pop
cmc
andb
push
aaa
mov
popf
xchg
and
xchg
cmp
clc
xchg
xchg
das
xchg
jge
jnp
fcmovnb
filds
inc
cmpsl
mov
push
icebp
jae
push
movsl
cld
pop
add
or
fwait
js
sub
jle
outsb
filds
sahf
push
push
nop
in
shll
jmp
inc
mov
mov
sbb
jnp
iret
fnstenv
scas
dec
ss
xor
movsl
sub
push
sti
jb
leave
repnz
and
adc
mov
jmp
cltd
bound
dec
addl
in
pop
xchg
add
mov
scas
fdivrl
or
ja
pop
push
out
push
jo
movsb
mov
sub
xchg
pop
add
xor
sub
in
mov
pushf
in
jnp
pop
jbe
jmp
pop
xchg
xchg
push
sbb
xlat
xor
push
pop
adcl
clc
lea
xor
mov
sub
sbb
pop
clc
in
addl
push
idivl
xor
adc
sub
jg
push
pop
xorb
push
pop
inc
and
inc
and
sbb
loopne
push
adc
dec
cld
mov
mov
aad
mov
xor
mov
sbb
mov
out
scas
xlat
loope
or
mov
sbb
adc
and
inc
stc
inc
inc
out
mov
push
adc
mov
xchg
outsl
scas
and
ljmp
or
dec
outsb
adc
cltd
mov
leave
or
lds
cmp
push
inc
cmp
fimuls
ret
cmc
adc
add
fnsave
loopne
adc
test
outsb
xor
mov
outsb
mov
lea
mov
repz
hlt
enter
jbe
cmp
lds
in
stc
inc
lods
inc
ja
fnstsw
mov
test
mov
push
pop
lahf
or
lret
inc
dec
test
mov
cwtl
lcall
lea
loope
enter
jg
pop
mov
int3
cltd
popf
jl
mov
cmc
shll
or
mov
cld
pop
sub
orb
ljmp
das
iret
pop
jg
cmp
xchg
test
add
mov
rorb
divb
fwait
xor
lahf
or
and
fldcw
fistps
xchg
test
sub
mov
push
shlb
les
xchg
push
or
mov
ss
jmp
xchg
jo
shlb
push
aas
shrb
testb
mov
pop
ljmp
lahf
mov
mov
ret
cmc
pop
shrl
loope
push
jae
add
jnp
xchg
jmp
es
or
jmp
rcl
outsl
xchg
cmp
inc
and
aam
sbb
rolb
dec
out
iret
xchg
inc
xor
cmp
stos
dec
pop
es
fcmovu
rcll
cli
fs
das
lahf
cmpsl
and
jg
mov
test
rclb
mov
push
mov
popf
aam
inc
dec
sub
push
jo
loop
mov
cwtl
rclb
cwtl
add
mov
popf
push
inc
xchg
lods
push
sub
and
ret
sub
mov
pusha
scas
sbb
pop
push
loopne
pushf
and
pop
sbb
jae
xchg
sub
ljmp
ficoms
call
ljmp
test
leave
fdivrl
ret
xchg
and
lahf
or
rcrl
inc
mov
popf
pop
xchg
cli
mov
ljmp
push
movsb
and
jg
adc
gs
jecxz
cld
int3
push
push
xchg
mov
or
daa
add
out
jb
sbb
mov
jecxz
sbb
imul
xchg
lret
dec
sbb
push
lret
outsb
inc
outsl
repz
mov
ds
push
add
xor
rcrl
pmulhuw
movsb
sub
pop
mov
mov
jne
fmull
push
les
cli
sbb
in
test
loop
mov
jae
jne
inc
or
push
sbbl
push
loopne
xor
int3
lcall
sbbl
and
addr16
push
xchg
jecxz
notl
inc
xor
addr16
rol
sub
out
fsubrs
lahf
mov
fldenv
sti
add
push
push
mov
fs
mov
sahf
int
ja
pushf
jmp
cmovp
pop
mov
out
out
shll
out
pop
repz
push
jb
mov
jg
adc
test
pop
pop
out
push
sub
mov
cmpl
lods
cwtl
jp
fs
mov
aaa
cmpsl
test
mov
add
adc
rcr
push
inc
adc
orb
mov
and
cs
inc
or
cmp
mov
cmp
punpckhwd
push
xor
cli
loope
std
sub
jmp
cmp
xor
js
in
icebp
sub
cmp
inc
loop
popf
or
loop
out
outsb
cmpsl
popf
std
jno
add
les
inc
cmp
adc
dec
shll
inc
xchg
fs
jbe
xlat
gs
je
js
cwtl
vshufps
cmpsb
and
out
adc
mov
mov
push
cmc
add
xor
popf
xchg
mov
inc
js
data16
fnstsw
mov
mov
add
pop
stc
push
sahf
stos
mov
gs
sti
orl
jbe
xchg
pop
jmp
imul
inc
mov
xor
imul
mov
mov
cli
and
push
xor
or
fmuls
imul
notb
dec
testl
xchg
lcall
in
and
in
ja
add
subl
push
cmp
jp
adcl
cmp
loopne
mov
add
stc
push
push
push
mov
xor
repz
sbb
stc
mov
xchg
stc
mov
xor
mov
push
or
jle
jo
push
popa
stc
imul
jl
adc
shll
push
xchg
shlb
or
dec
mov
movsb
in
dec
or
out
fwait
je
sbb
loop
das
jmp
dec
mov
xchg
jns
clc
insl
out
xor
and
mov
push
loope
adcb
push
cmp
sub
jae
leave
push
sub
jmp
or
loope
ret
xchg
jmp
orl
inc
lock
aaa
mov
push
data16
jl
cmp
xchg
fdivr
fdivs
jae
int3
loope
rclb
fs
xchg
xchg
subb
lods
inc
popf
cltd
inc
incl
repnz
pusha
subb
jge
cmp
and
jo
sub
subl
push
test
and
js
mov
pop
addl
in
pop
sub
push
mov
adc
jge
push
mov
dec
negb
fbld
xchg
sub
mov
pushl
cmp
xor
inc
xchg
or
inc
imul
fcmovbe
mov
xor
imul
push
add
jns
mov
or
mov
das
clc
decl
xor
sbb
sub
imull
scas
xchg
pop
loopne
jg
loope
xor
arpl
sbb
jno
bswap
sub
std
dec
mov
push
adcl
mov
adc
push
movsb
jg
stos
push
scas
mov
gs
fcomi
jmp
decb
ja
inc
inc
and
cmpsb
adc
add
decb
cmc
lahf
cli
out
inc
cld
inc
mov
fildl
cmpsb
fisttpll
cld
sahf
xor
icebp
shlb
cld
iret
adc
sbb
cwtl
push
xor
sti
mov
scas
lret
aaa
xor
adc
jne
add
inc
mov
cld
jnp
outsb
stos
pop
mov
mov
call
mov
das
pushf
sbb
mov
dec
lea
add
sub
pop
or
lahf
xchg
pop
jmp
dec
incb
ret
in
lds
cmp
das
fisttps
aaa
push
popf
jl
add
dec
pop
cmp
aas
clc
loop
ja
xor
ja
jnp
imul
out
nop
lahf
iret
add
mov
or
repz
pop
xchg
mov
add
sub
shl
jecxz
dec
insb
push
in
cltd
lea
mov
xchg
xor
dec
lret
mov
inc
fldt
ret
out
subl
or
daa
xor
sbb
mov
pop
xor
add
jg
fwait
es
insl
cmp
fwait
push
mov
fwait
std
fisttpll
push
aad
iret
sub
cmc
imul
xchg
push
daa
push
mov
shl
dec
sarl
in
movsb
sbb
push
cs
pop
test
rcll
gs
lahf
inc
hlt
mov
jnp
mov
pop
pop
icebp
lods
sub
xor
sbbl
das
pushw
mov
xchg
sbb
sub
pop
adc
and
loope
jl
inc
data16
lods
xchg
push
out
dec
insl
push
dec
push
decl
jge
loope
lock
sbb
jae
inc
mov
sub
xchg
or
inc
enter
jmp
dec
add
push
mov
and
xchg
or
and
idivb
mov
sahf
xor
inc
and
insb
pop
out
in
mov
sbb
adc
jo
add
jmp
stos
or
daa
das
lods
dec
xchg
dec
sbb
movsb
arpl
in
cmp
out
dec
sbb
xchg
cmpl
xchg
push
jno
xor
and
pop
xor
dec
push
bound
push
dec
push
out
inc
or
cmp
lahf
or
dec
lock
and
test
adc
jmp
and
and
and
std
and
lock
jp
shrb
imul
mov
xchg
and
stos
xor
jmp
sub
aaa
out
mov
ja
stc
int
ret
adcb
in
xchg
sub
lcall
dec
xchg
in
je
jle
out
mov
adc
lock
ret
inc
cwtl
lret
mov
fwait
sti
ret
jge
xchg
xchg
out
pushf
mov
cmp
inc
jne
cld
cltd
loopne
std
loope
mov
add
js
and
and
xor
xor
loop
mov
push
xchg
lret
xor
push
fdivs
adc
jecxz
shll
xchg
negb
push
fimull
std
cltd
inc
sbb
or
xorl
or
push
cld
icebp
and
rcrb
scas
and
jecxz
sub
push
mov
add
mov
mov
xor
in
add
popf
xchg
bnd
test
test
aad
cmp
ret
repz
mov
pop
jg
dec
negl
js
stc
jns
ret
mov
cltd
stc
sub
xor
rorl
pop
pop
xor
sbb
ja
jmp
mulps
nop
aas
mov
call
ret
pop
adc
sub
mov
lods
loop
popa
sarl
push
push
push
push
and
ret
add
xchg
mov
pop
mov
lahf
dec
in
xor
xchg
test
fisttpl
test
push
mov
xchg
enter
daa
nop
enter
dec
aad
mov
ficomps
inc
inc
jmp
sete
loope
push
mov
rcrl
cli
fbstp
fs
and
pusha
je
sbb
aam
iret
cltd
push
in
cmc
inc
or
adc
int
inc
cltd
push
cmp
pop
sub
push
iret
add
adc
jp
dec
js
adc
int
mov
call
jmp
jo
mov
push
push
in
lods
ret
cmc
imul
xchg
repnz
andb
mov
jbe
jnp
ja
dec
jne
cmp
adc
jecxz
lret
lods
jo
ja
mov
repnz
sub
pop
jg
mov
cs
cmp
hlt
lock
ror
xchg
hlt
mov
jo
push
outsl
add
xor
cmp
loopne
push
in
sysenter
jecxz
mov
xchg
sub
dec
jb
adc
inc
sub
jg
fsub
cld
xchg
dec
or
lcall
xor
pop
sbb
dec
inc
jns
out
mov
dec
nop
into
cmp
pop
lods
mov
fcom
or
mov
sub
add
dec
sub
popf
jne
jno
enter
and
bswap
cmpsb
jbe
dec
je
mov
hlt
cmpsb
insl
sbb
aas
mov
mov
xchg
adc
mov
mull
sub
jnp
stc
out
dec
test
add
lock
cmp
mov
jae
pop
sbb
jle
lret
pop
push
mov
fimuls
push
ja
and
fcompl
jg
pop
pop
loope
pushf
imul
jecxz
mov
mov
in
es
sarb
cmp
imul
inc
push
push
pcmpgtw
pop
xor
aad
fcompl
xchg
push
mov
push
push
dec
incb
inc
fcoms
push
sbb
enter
stos
iret
out
or
sbb
jns
mov
adc
push
cmc
pop
adc
cld
inc
into
imul
sarb
movsl
out
sahf
scas
mov
xlat
jno
std
rcll
cmp
pop
js
and
sub
movups
add
sti
stc
jno
fs
add
int3
and
jge
mov
cmpsb
pop
sbb
pop
lahf
insl
icebp
adc
cmp
nop
push
test
insl
fadd
lods
sbb
sub
lods
pop
add
sarl
add
insl
lret
dec
pop
sbb
rcr
mov
dec
mov
mov
xchg
test
jbe
mov
cmp
or
arpl
push
mov
orb
lock
sbb
fistps
xchg
and
inc
insb
xchg
subl
pop
mov
cwtl
pop
rclb
dec
adc
add
loopne
dec
add
call
stos
xchg
cmpsl
cmp
sbb
xchg
fidivrl
arpl
mov
cltd
mov
sti
int
das
sbbl
decb
aad
cmp
cld
repz
mov
inc
mov
jne
cmp
ret
pop
jecxz
es
mov
mov
adc
insb
jmp
dec
mov
pop
inc
mov
daa
push
negb
mov
push
push
lods
jmp
std
insl
bound
aaa
cmp
or
and
mov
stos
out
notb
fdivr
call
jp
pop
imul
cmp
faddl
xchg
inc
hlt
pop
aad
data16
mov
js
add
cmp
sub
add
dec
repnz
aam
je
in
or
add
and
cwtl
push
sub
cwtl
add
aad
mov
pop
pushl
popa
pop
enter
jmp
repnz
push
jb
jmp
data16
loopne
inc
pcmpgtw
sarb
sti
or
negb
popa
aam
aas
adc
ja
test
sbbb
ss
sbb
cld
adc
cmp
pop
sbb
popa
fnstsw
mov
cmpsl
sahf
enter
jg
jge
push
inc
inc
jno
and
xor
sub
cmpl
cltd
mov
mov
shrl
insb
mov
cmovo
lret
inc
dec
xor
outsb
cwtl
adc
mov
push
add
pop
outsb
in
mov
mov
vmread
and
and
incl
jle
dec
cltd
out
xchg
out
mov
shr
mov
mov
jbe
xchg
cli
dec
pop
inc
jb
fildll
insl
repnz
adc
roll
rorl
popf
aaa
les
dec
sbb
dec
out
cmpsb
lods
add
xchg
stc
mov
movsb
sahf
push
icebp
std
pusha
add
clc
lock
pop
mov
pop
mov
cmc
sub
test
pop
jecxz
mov
pop
add
mov
mov
push
xor
bound
pushf
xor
add
cmpb
cmp
popa
push
fsub
and
jg
std
sbb
loope
in
pushf
shrl
xchg
movsb
mov
imul
rorl
push
repnz
cmp
pop
dec
jae
and
sbb
fcmovu
aaa
push
push
lea
test
inc
pop
sti
mov
ljmp
mov
pop
insl
mov
adc
push
mov
xchg
hlt
add
aad
in
inc
xchg
sub
shrb
sub
rcrb
xchg
jo
imul
sbb
mov
cltd
cmpl
insb
notb
cmp
shlb
bound
xchg
test
pmulhuw
dec
xlat
or
test
and
lds
sub
inc
ja
pop
test
push
and
mov
mov
mov
mov
xchg
fisttpll
insl
pushf
dec
inc
fisubrs
ja
jle
inc
sub
adc
jl
sub
int3
loope
dec
mov
or
daa
cmp
mov
shrb
lret
pop
je
dec
push
jle
fnstsw
nop
lods
xor
xchg
add
mov
shll
fistpl
shl
mov
std
iret
adc
adcl
ret
dec
out
cmp
mov
arpl
mov
insb
jge
fimuls
sbb
jmp
sbb
push
jbe
in
add
jmp
mov
jle
dec
out
lods
popa
je
jl
rclb
xchg
test
lock
aaa
adc
and
sbb
loope
movsl
daa
scas
insb
inc
aaa
xor
jae
loop
daa
into
insb
inc
fwait
fs
and
sbb
push
insl
lods
sbb
mov
xor
sbb
ret
sbb
outsb
mov
mov
xchg
aad
dec
movsb
inc
nop
jns
insb
pop
in
fsubrl
rcrl
add
fbld
out
stos
jae
mov
jecxz
push
cltd
inc
mov
lcall
jmp
fisttpll
cs
cmp
push
ret
pop
loope
insb
sahf
xchg
mov
dec
sub
fidivs
mov
mov
mov
xor
sti
mov
inc
jnp
pop
insb
out
mov
in
pop
mov
test
repnz
arpl
pop
shll
jmp
jno
ljmp
call
test
inc
fdiv
cwtl
icebp
sbb
fs
or
push
xchg
dec
inc
jnp
outsb
mov
jno
outsl
jmp
cmp
lods
add
push
bound
jle
les
test
mov
je
mov
sbb
push
stos
popf
pop
sub
push
sbb
xchg
lds
and
pop
sahf
rcrb
push
arpl
push
push
dec
mov
xchg
aaa
push
mov
cmp
in
xor
inc
adc
jmp
mov
push
add
xor
inc
push
test
mov
or
xchg
in
movsb
push
test
and
mov
lea
xor
movsl
or
sti
jnp
jg
pop
cld
xchg
inc
jo
push
fcompl
ss
ret
mov
or
inc
push
outsb
mov
mov
jecxz
data16
data16
pop
cmp
fldt
push
mov
xchg
mov
scas
push
fildl
test
jbe
cmpb
mov
fcoml
sbb
mov
cmp
and
add
out
jecxz
jg
sub
mov
pop
jbe
mov
sbbb
mov
push
push
xchg
pusha
xchg
jo
insb
hlt
jge
loop
sarb
sub
sbb
inc
add
jno
shrl
loop
cmpsl
inc
stos
repz
adc
dec
fsubl
inc
subl
cmp
andb
push
dec
xlat
and
or
mov
repnz
pop
sub
mov
mov
fisttpl
es
jno
sub
ret
adc
cmp
jg
xlat
cmp
ret
mov
mov
pop
divb
call
ljmp
call
xchg
insb
mov
adc
inc
inc
iret
dec
xchg
jmp
inc
push
mov
and
icebp
sbb
mov
pushf
loop
inc
out
pop
push
daa
icebp
outsb
xchg
inc
into
cmp
and
cs
adc
dec
int
les
pop
stc
mov
mov
cwtl
pop
mov
mov
idivb
add
or
insl
dec
gs
repnz
pop
nop
sub
jp
ret
jne
icebp
rcrb
rorl
pop
pushf
sub
inc
add
or
inc
ljmp
pushf
arpl
and
pop
inc
fldt
ja
popa
jno
mov
mov
pop
and
sbb
pusha
push
sbb
push
xor
scas
lea
ficomps
adc
daa
out
sub
xchg
inc
pop
cmc
fs
pop
inc
or
mov
fcompl
jo
pop
cmp
pop
test
daa
mov
ljmp
mov
pop
movsb
rclb
adc
jns
repz
movsl
inc
or
and
add
push
movsb
test
pusha
lret
xor
leave
scas
iret
std
or
test
movsb
mov
int3
nop
mov
adc
call
es
pop
and
xchg
fstpl
cs
lret
add
test
sub
adc
sub
aas
loop
lret
pop
fisubl
filds
jg
adc
mov
fimull
mov
fists
mov
popa
bound
nop
xlat
xchg
jb
dec
loop
cmc
daa
es
int
enter
xchg
xor
insb
in
jno
push
in
jnp
xor
cmp
out
cmpsb
push
es
addr16
and
jmp
or
and
inc
cmp
push
pop
punpckhdq
push
and
add
and
mov
fildll
sub
insb
aam
lret
mov
roll
stc
cmp
mov
fwait
mov
loope
mov
sbb
sahf
lahf
dec
mov
or
jae
cli
idivl
faddl
jge
popa
shll
ljmp
xchg
divb
negb
std
or
add
and
cmp
pusha
cli
mov
sbb
pop
pop
inc
nop
ss
lahf
fistps
js
mov
imul
push
add
lret
lds
cli
neg
push
cli
mov
ljmp
mov
lock
or
mov
je
inc
test
or
push
ret
inc
push
into
jge
dec
sti
xchg
xlat
xor
out
push
orl
push
inc
inc
cmp
pop
idiv
mov
adc
inc
leave
in
fcoms
jmp
mov
int
cmpl
rcrl
popa
mov
in
add
jae
test
fstpl
mov
leave
jno
jg
mov
shrl
adc
mov
lcall
jmp
shrl
mov
pop
sti
cmp
imul
ja
jns
mov
sahf
mov
push
daa
cmp
cmp
push
stos
and
xchg
testl
out
xchg
mov
mov
aaa
push
mov
fisubl
int
add
hlt
sahf
mov
push
rol
xchg
mov
repz
aad
and
fimuls
dec
rol
sbb
sbbb
jnp
inc
xor
and
mov
ss
mov
icebp
roll
es
orl
ret
inc
mov
push
jg
test
sbb
lea
lods
outsb
jmp
adc
mov
mov
repnz
scas
xchg
mov
hlt
push
mov
xor
mov
lahf
adcl
mov
jb
dec
repnz
shl
lret
ljmp
cld
mov
ljmp
ror
fdivrl
add
icebp
or
leave
mov
add
lods
adc
inc
fstpt
fstps
addr16
sub
ljmp
inc
and
aas
xchg
adc
mov
mov
adc
push
dec
clc
loop
pop
insl
ret
jl
sbb
aas
ds
lock
xchg
je
jns
xorb
jno
jo
add
insl
aam
mov
test
and
dec
das
pop
aad
and
xor
bts
cmp
or
cwtl
sbb
ds
push
jp
or
in
les
mov
add
fsubrl
orl
pusha
adc
stos
sbb
jae
inc
dec
lret
das
pop
stc
scas
dec
fwait
sahf
adc
pop
jmp
fucomp
lock
sub
mov
gs
rcrl
cmp
sbb
leave
push
rorl
and
cmp
push
push
jnp
mov
add
pop
pop
test
adc
sbb
jns
shll
cwtl
or
or
mov
xor
daa
add
in
sbb
and
cmp
insl
insl
push
jmp
fsubr
mov
push
lock
rolb
loopne
mov
xorb
fwait
add
sbb
lock
and
xchg
jo
jp
iret
xor
outsb
push
or
mov
ja
movsl
nop
sub
add
cmp
js
cltd
pop
les
andb
mov
push
sbb
je
aas
sbb
adc
push
daa
jge
adc
loope
push
push
xchg
ficoms
inc
sbb
std
push
xor
loopne
and
push
in
out
and
aas
cmp
sub
jg
xor
ljmp
mov
daa
out
pop
lahf
lret
addr16
ret
imul
leave
testl
mov
aad
fdivs
mov
jp
std
arpl
gs
mov
repz
mov
mov
inc
frstor
jmp
mov
test
nop
mov
dec
out
mov
or
scas
idivb
or
push
dec
push
stc
scas
lcall
push
or
test
cmpl
cmpsb
sarb
fldt
pop
leave
lods
adc
outsl
dec
adcb
mov
jo
push
jge
dec
aaa
sub
mov
jbe
add
jl
leave
inc
push
mov
mov
hlt
jg
or
ds
out
cmpsb
je
imull
outsl
les
fs
in
sub
enter
jno
pop
aam
mov
mov
jle
xchg
repnz
arpl
fsubl
mov
mov
add
cmp
lea
cwtl
and
pop
pop
dec
fs
jp
cmp
pop
popa
and
sahf
cmp
cmc
mov
dec
push
imul
addr16
xchg
xor
cwtl
popa
adc
sbb
cmpsb
outsl
or
in
cmpsl
sbb
xchg
aas
add
pop
inc
push
push
jae
call
xchg
scas
mov
fwait
cmpsl
mov
or
dec
icebp
adc
xchg
push
xor
mov
mov
sbb
int
ror
nop
xor
lea
jb
sti
hlt
mov
pop
push
fmuls
inc
inc
dec
jne
xchg
lcall
fisubl
shl
xor
aad
clc
notl
ret
jae
mov
sub
pop
mov
out
push
sbb
jo
aaa
xchg
cli
sbb
cli
mov
adc
int
mov
adc
in
js
inc
jp
sti
fcomps
sub
jle
mov
testb
in
mov
mov
dec
xlat
mov
cli
and
push
fisubl
in
cmp
mov
mov
out
adc
test
and
gs
jg
add
cld
sbb
and
mov
shlb
movsl
aad
xor
push
ja
leave
daa
outsb
bound
lock
addr16
jmp
fstps
xchg
dec
lcall
inc
scas
sahf
fidivrs
in
mov
pop
dec
cmp
inc
pop
inc
xchg
int
mov
fwait
sbb
mov
adc
fcoml
pop
and
idivl
mov
ss
stc
stos
negb
xor
rorl
xchg
imul
orb
inc
jge
data16
mov
das
jne
fldcw
int
adc
flds
jl
jb
lcall
add
push
std
xor
or
xchg
int3
sbb
xchg
lret
pop
loope
push
push
insb
sahf
jno
lcall
mov
sbb
sub
sbb
jbe
dec
jbe
push
and
xor
push
insb
fwait
insb
adc
inc
aas
orb
sbb
mov
lahf
xchg
into
leave
xchg
mov
stos
and
cld
pop
stc
sbb
loope
xor
mov
test
mov
mov
adc
xor
dec
fadds
loope
je
pop
jae
sbb
add
cmp
jb
or
loopne
and
push
mov
leave
roll
outsl
dec
jmp
mov
out
push
aad
repz
mov
pop
jno
mov
xchg
stc
pushf
adc
int3
and
out
outsl
fmuls
stc
adc
cmp
xor
jge
pop
fdiv
arpl
xor
aaa
push
test
dec
xchg
push
jecxz
lcall
pop
shrb
icebp
push
adc
xlat
ror
mov
adc
mov
dec
pushf
repz
xor
jne
lds
rcll
icebp
add
nop
mov
cltd
push
ljmp
es
cld
ret
jnp
add
shll
and
les
mov
or
int
xor
xlat
push
lods
adc
xchg
addl
aad
mov
ja
cmp
xchg
inc
cltd
push
dec
stos
mov
push
movsb
icebp
sbbl
pop
lret
adc
mov
aam
mov
jl
daa
fimuls
xor
in
shll
jo
mov
or
xchg
mov
jb
xlat
push
sub
mov
rcll
das
pop
sub
mov
jmp
cmp
fiadds
imul
icebp
pop
inc
cmp
test
push
mov
js
imul
mov
pop
idivl
cmpsb
add
pop
insl
int
jmp
pop
stos
idivl
jo
inc
sbb
cmp
arpl
lock
loopne
xchg
pop
push
cs
mov
cltd
mov
mov
loopne
test
jb
popl
or
xchg
lds
stos
or
loope
xorl
lcall
pop
pop
push
fs
pop
xor
cli
dec
mov
xlat
pop
pop
sbb
xchg
loopne
push
outsl
shl
mov
mov
cmp
pop
dec
cmp
push
sti
add
js
out
aaa
xchg
inc
jo
cli
inc
xchg
fcoms
or
mov
xchg
inc
sub
cmp
aam
fbstp
lret
rorl
or
repz
cmp
xchg
mov
push
inc
xchg
insl
pop
pop
push
push
sbb
jg
das
mov
rclb
mov
inc
out
aad
outsl
scas
imul
and
push
rorl
jecxz
fists
into
xor
mov
adc
addr16
mov
daa
pop
cld
adc
fildll
not
xchg
jmp
mov
mov
scas
xchg
pop
dec
xchg
pop
add
adc
jg
sbb
jmp
push
jg
cmp
jg
add
or
xchg
aas
out
stc
mov
cs
mov
fistpl
mov
push
outsl
jo
out
loope
jge
call
fidivrs
mov
in
pop
add
push
lahf
data16
push
mov
push
lods
inc
mov
xchg
pop
ss
dec
sub
cmp
int3
int
xchg
int3
mov
bound
mov
mov
add
out
mov
ficompl
repnz
sbb
add
int
pop
xor
inc
test
cmpsb
inc
bound
or
enter
or
and
loopne
ja
or
and
movsl
lret
lcall
into
sub
test
sub
xor
fs
fdivrs
aam
dec
jl
xor
push
imul
in
pop
pushf
shrl
aam
xor
mov
outsl
jge
add
pop
out
sub
inc
and
subb
dec
xor
cmp
push
hlt
sti
jo
pop
outsl
mov
sbb
jecxz
out
jae
sub
mov
dec
jno
and
aam
dec
lods
in
mov
inc
outsl
adc
daa
fstpl
xchg
stos
sub
push
inc
xor
add
stos
mov
mov
int
jns
cmp
bound
leave
stos
sti
xor
daa
mov
xor
stos
xor
pop
je
or
out
mov
testb
in
std
cld
sbb
dec
or
testb
xchg
cmpsb
dec
jne
imul
xchg
out
jno
dec
dec
inc
add
aaa
sub
cmpsb
or
mov
mov
out
push
xor
cmc
and
lods
jne
fisubrl
jno
inc
insb
cmp
add
lock
and
leave
add
ds
and
int3
mov
add
fadds
sbb
sub
add
out
fstps
hlt
cld
sti
movsl
pop
daa
mov
lcall
subl
push
aaa
add
imul
dec
les
in
js
or
stos
cmp
movsb
mov
mov
xchg
stos
ljmp
xchg
pusha
mov
out
inc
add
sarl
push
outsl
aad
call
popa
xor
rclb
push
jae
notb
pop
je
jle
and
jne
sub
out
mov
pop
imul
sub
mov
cmp
stc
fsubrl
subl
pop
pusha
into
push
dec
aas
popf
sub
mov
add
lods
push
repnz
push
in
sub
stc
add
into
jns
rcrb
ret
mov
mov
lcall
inc
push
sub
sbb
adc
pop
les
or
test
and
out
test
int3
xor
inc
jae
rorl
repz
shlb
out
mov
ljmp
jb
lock
ret
mov
in
and
pop
xlat
push
push
into
out
adc
mov
dec
xor
sti
aad
mov
inc
inc
hlt
adc
xchg
das
add
arpl
xor
jge
repz
inc
daa
jecxz
dec
in
xor
jno
pop
xor
dec
pop
push
div
and
cld
enter
sar
inc
notl
cwtl
cli
mov
jecxz
add
xor
popf
call
xchg
out
hlt
jecxz
hlt
jg
xchg
dec
adc
mov
sbb
adc
outsl
in
push
cwtl
and
mov
ret
push
add
cmp
int
call
nop
adc
lock
lods
ret
mov
imul
cmp
andl
cltd
sbb
add
mov
adc
adc
call
inc
jb
adc
sbb
sbb
popa
test
cmpsl
insl
adc
adc
icebp
scas
mov
enter
imul
sub
imul
cli
cmc
push
xchg
dec
popf
fistpll
mov
mull
adc
jge
cmpsb
cmpsl
int3
dec
inc
or
pop
lods
xor
packssdw
push
insb
mov
inc
mov
or
jmp
push
outsl
pop
add
mov
fadds
xchg
ja
das
icebp
loopne
sbb
inc
jnp
cmp
rclb
jns
push
cs
dec
lea
push
adc
or
push
sub
push
out
arpl
push
test
mov
ficoml
sub
sbb
imul
lods
adc
push
cs
test
sbb
cmp
push
es
jbe
jle
or
xchg
pop
xor
xor
scas
leave
scas
add
dec
stos
pop
pusha
lea
adc
test
fnstsw
lds
dec
je
lahf
xor
jmp
dec
mov
sub
mov
aaa
fdivrp
mov
pop
ss
dec
loop
nop
jb
mov
jbe
movsl
dec
jnp
ficoms
repnz
gs
cltd
es
movsl
std
fidivl
sbb
dec
pop
insl
add
testb
inc
imul
test
xor
enter
popa
push
pusha
inc
jmp
enter
iret
add
fsts
movsl
stos
sub
int3
mov
outsl
loopne
cwtl
and
xchg
arpl
loop
loope
pusha
cmpl
dec
sbb
pop
xor
imul
inc
mov
mov
push
cmove
push
cltd
mov
ljmp
in
fs
daa
push
nop
push
xor
cs
dec
fcoml
arpl
std
sub
ds
mov
cltd
push
scas
adc
arpl
iret
inc
push
jl
fimuls
dec
pop
inc
mov
ja
xor
adc
andb
adc
dec
and
adc
stc
fcompl
stc
pushf
aas
aam
outsl
mov
int
or
add
aad
mov
test
popa
daa
pop
mov
push
pop
lods
mov
ja
shll
jg
mov
lods
and
cltd
dec
sbb
jecxz
push
pushf
mov
lods
sub
and
in
inc
pop
or
inc
cld
push
jo
aaa
dec
mov
mov
in
out
push
testb
inc
xor
and
lods
test
sub
loop
or
dec
test
iret
mov
mov
jp
imul
push
mov
xchg
clc
mov
arpl
lods
pusha
cmp
mov
sbb
push
dec
jmp
lock
push
nop
sub
out
jne
loope
movsb
hlt
test
xor
cmp
popa
mov
stos
cwtl
lods
adc
call
test
scas
jns
popf
and
mov
xor
mov
fistl
cmp
rcrb
addr16
push
sti
cmpsb
popa
ljmp
inc
bound
insb
push
xor
frstor
push
pop
jge
test
or
repz
cmp
ss
shll
jge
mov
mov
cmc
ds
xchg
and
and
mov
mov
repnz
jno
into
addr16
bound
int3
sub
lahf
call
addl
mov
or
pop
loop
out
outsl
xor
aas
xchg
xor
imul
add
out
loopne
inc
and
xchg
sbb
in
fmulp
cmp
add
pop
jne
mov
jge
fwait
mov
lds
lret
inc
out
adc
std
add
int
lods
div
lock
testl
cmpsl
xchg
jnp
lds
add
shlb
sub
in
bound
rcl
mov
fimuls
or
cld
xor
test
es
mov
push
cmp
lcall
cmpb
xor
in
push
ret
mov
pop
imul
or
ja
scas
push
nop
sbb
jbe
mulb
int3
int3
mov
inc
adc
leave
mov
and
mov
jp
loop
mov
cmp
js
jbe
xlat
fdivrs
adc
fdivs
mov
mov
cmp
and
mov
lods
out
push
dec
les
xchg
ljmp
outsb
icebp
sbb
cli
into
sbb
bound
mov
pop
aam
daa
lea
arpl
jo
jne
add
push
pop
cmp
cmp
jecxz
mov
inc
movsl
sub
xchg
xchg
add
push
outsb
fs
inc
inc
inc
arpl
addr16
in
popf
pop
dec
pop
shrl
push
mov
sub
movsb
pop
adc
ret
jno
or
pop
or
or
pop
jle
dec
cmp
cmp
xchg
inc
push
inc
dec
jbe
pop
int3
or
jmp
in
inc
insb
out
push
pop
loop
ret
sbbl
icebp
daa
inc
movsl
ror
stos
mov
inc
pop
and
push
pop
jno
negl
or
arpl
xchg
dec
cmp
mov
mov
in
outsb
test
lods
lcall
test
mov
cwtl
xchg
xor
movsl
ss
dec
adc
in
sub
cmp
add
popf
lcall
xor
addl
jo
cld
imul
addr16
rclb
push
xchg
pop
sub
in
daa
mov
movsb
loopne
push
mov
push
pop
sbb
es
sub
push
mov
popf
sbb
enter
in
outsl
xlat
mov
cmp
inc
test
dec
stc
xor
incb
jnp
in
dec
fwait
leave
bound
pop
mov
rclb
out
dec
and
aam
cmp
mov
cmp
shll
jo
push
pop
and
cmp
mov
fldl
cmc
or
js
inc
std
rorl
aad
sbb
imul
pop
ret
mov
xchg
std
mov
push
pop
adc
mov
scas
xchg
xchg
jg
xchg
xchg
scas
xor
push
xor
jl
stc
mov
mov
push
push
dec
sbb
add
push
aaa
dec
ret
xor
stos
mov
adc
and
add
test
stos
xor
popa
je
push
push
mov
jbe
jl
fiadds
inc
es
add
jae
pop
fwait
aas
lahf
mov
scas
fstps
cmp
xchg
cltd
fcmovu
and
pop
fisubrl
sub
sub
out
pop
ror
sbb
pop
fmul
insb
pusha
sti
cmpl
add
insl
jecxz
out
sub
in
stos
jecxz
fbld
mov
adc
aas
das
pop
fistpl
loope
gs
push
jle
adc
mov
sahf
or
dec
jmp
stos
sub
pop
mov
mov
xchg
cmp
daa
imul
lcall
mov
inc
inc
push
push
mov
mov
or
gs
loop
inc
xor
sub
xor
test
loop
rcl
leave
jbe
mov
mov
pop
addb
fnsave
jge
outsl
inc
mov
sbb
mov
cmp
lds
dec
adc
pop
cmpsl
xor
imul
mov
mov
movb
pop
xchg
xlat
xchg
cld
cmpsb
repnz
mov
inc
mov
scas
pushf
fisubrl
jp
jbe
or
fdivr
jno
jb
or
and
push
pop
lcall
sahf
sub
roll
add
outsl
cmp
rorl
mov
shrl
xchg
or
out
mov
aam
mov
shll
popa
jle
dec
mov
mov
test
pop
inc
fdivrl
adc
stc
dec
inc
jnp
push
dec
and
cs
scas
adcl
jbe
xchg
fisttpll
xor
daa
addr16
ds
jmp
add
mov
add
mov
ljmp
jae
mov
std
pop
dec
and
sub
pop
adc
mov
dec
dec
repnz
loope
scas
aaa
push
and
dec
push
and
push
push
in
dec
xchg
push
sub
and
sub
les
je
lods
scas
push
cmp
in
movsl
nop
mov
shlb
mov
pop
jnp
dec
pop
jmp
into
test
js
cmp
mov
push
sti
out
pop
lret
and
or
and
jne
push
scas
cld
bound
push
ret
inc
sbb
and
shl
pusha
ret
mov
mov
sbb
outsb
arpl
outsb
leavew
jb
adcb
mov
in
pop
mov
pushf
clc
mov
push
loope
test
xchg
push
shlb
daa
daa
fsubr
negb
cmp
loope
xchg
push
mov
xor
and
add
in
fiaddl
xchg
sbb
sbb
aas
adc
out
dec
outsb
repnz
or
xchg
iret
inc
es
jo
pop
cmpl
add
iret
ja
or
jg
mov
dec
xchg
xchg
cmp
fdivs
add
pop
movsb
test
scas
or
xlat
repz
cmp
mov
out
mov
inc
daa
cs
test
test
fs
xor
cltd
inc
arpl
scas
in
mov
popf
xor
push
ljmp
xchg
lret
loopne
inc
inc
xorl
adc
jle
fisttpl
mov
push
rcll
lret
sbb
test
adc
enter
orl
jmp
out
or
lcall
std
push
hlt
iret
fs
sbb
clc
clc
or
mov
push
push
daa
cli
or
scas
pop
dec
push
mul
daa
into
mov
mov
adc
fsubp
dec
pop
pop
pop
inc
je
sub
pushf
imul
mov
movsl
jno
add
jl
inc
push
adc
and
out
test
roll
mov
mov
inc
push
and
sbb
mov
adc
mov
lock
xchg
cltd
mov
sbb
cmpsb
xor
jno
inc
movsb
cld
mov
pop
dec
dec
aaa
rcll
and
inc
push
mov
or
stos
cmp
sub
jmp
xchg
mov
mov
adc
or
mov
jp
cwtl
jp
arpl
or
int
jae
daa
rorl
call
mov
rcrb
sbb
lcall
pop
push
daa
ljmp
mov
je
aaa
call
je
inc
or
dec
fsub
stos
and
mov
and
mov
aad
dec
lea
imul
scas
adc
cmp
dec
scas
mov
pop
mov
mov
icebp
xor
ss
sub
mov
adc
jecxz
outsl
sub
cmc
add
ret
push
aad
shlb
jg
and
push
iret
mov
rcr
add
lahf
push
push
push
div
negl
xlat
or
roll
dec
out
fistps
sbb
and
imul
cltd
loopne
in
add
add
shld
enter
xor
clc
pop
test
dec
arpl
repnz
sub
es
sub
jbe
push
sbb
cmp
push
mov
sbb
mov
cmp
test
sub
lds
lcall
aas
cmp
pushf
inc
adc
aam
adc
idivl
lea
mov
dec
jb
inc
scas
js
test
or
dec
push
push
adc
jbe
ds
mov
mov
imulb
int
rorb
iret
pop
out
pop
push
arpl
dec
ret
dec
jp
pop
sbb
mov
mov
mov
sbb
ret
adc
push
fldt
inc
mov
dec
jnp
mov
mov
push
repz
mov
sub
imulb
roll
clc
notl
jo
pop
addr16
mov
lret
subb
pop
pop
stc
aad
movsl
pop
or
mov
aaa
push
adc
je
push
inc
or
out
ds
fdivrl
jno
hlt
pop
add
in
jmp
cwtl
loope
or
push
jno
mov
add
sbb
fsqrt
cli
xor
fcoms
in
mov
nop
lds
sbb
aaa
scas
stc
out
mov
sbb
push
stos
inc
xchg
jnp
mov
xchg
lods
jns
xchg
xchg
mov
inc
es
pop
xchg
aam
les
cmpsl
fiadds
dec
mov
in
lret
dec
jns
cmp
in
mov
imul
negb
inc
inc
scas
insl
jo
mov
test
jb
mov
pop
outsl
mov
push
imul
adc
stos
push
jb
addl
pop
push
test
aad
pop
es
test
jne
push
orl
out
daa
xchg
mov
dec
jmp
nop
or
mov
mov
testb
inc
mov
mov
in
inc
mov
test
push
mov
imulb
mov
xchg
dec
jle
pop
xchg
outsb
aad
mov
and
dec
popf
lea
fwait
xchg
and
pushf
iret
jp
insl
test
aas
xchg
jbe
and
mov
out
lret
mov
lods
lock
cmp
jbe
scas
bound
movsb
xchg
adc
sub
adc
aam
pop
ss
out
mov
jg
sub
enter
jbe
or
ja
in
sub
lret
clc
inc
jp
mov
es
movsl
and
cmp
scas
outsl
sub
das
ret
sbb
pop
int
sbb
lcall
pop
shlb
inc
push
shll
sbb
push
ds
out
mov
popa
xor
mov
push
lds
aas
adcb
and
push
mov
jo
mov
faddl
insb
lcall
mov
data16
push
lea
add
aam
jp
cmp
sub
nop
push
pop
cwtl
aad
cmp
mov
in
and
xchg
sub
lcall
push
xor
add
xchg
cltd
adc
and
pushl
adc
xchg
inc
outsl
das
cli
cmpsl
pop
movsl
sbb
inc
loope
dec
mov
xchg
adc
insl
jb
mov
sub
pusha
int
ljmp
add
repz
push
sbb
add
pop
pop
sub
jns
in
add
jle
jmp
mov
jecxz
mov
sub
lods
xor
into
mov
stos
xor
xchg
out
mov
adc
cltd
das
adc
jmp
mov
cmp
xchg
lock
mov
inc
cmp
mov
or
jl
jns
xor
mov
dec
lahf
adc
pop
mov
adc
outsb
inc
push
ret
repnz
daa
ss
lret
rclb
shll
add
leave
xchg
xchg
test
xchg
js
dec
iret
xor
sbb
adc
rol
pop
test
sub
jno
and
mov
dec
in
out
push
fcomps
mov
js
mov
cmp
outsl
jmp
sbb
mov
shrb
into
arpl
xor
not
iret
mov
je
out
jg
jbe
mov
aas
lds
xchg
push
push
cmc
rcl
or
push
fdivs
aaa
daa
adc
ror
shlb
push
inc
pop
push
jbe
xor
mov
dec
sub
dec
cwtl
mov
jb
mov
out
xchg
cld
sbbb
aaa
lock
sbb
mov
lahf
sbb
inc
sti
fiaddl
push
sub
movsb
adc
lock
cmp
pop
aas
add
push
lea
push
dec
cmp
lret
out
pop
std
mov
mov
xchg
int3
mov
or
stos
adc
inc
jle
hlt
dec
push
rolb
pop
outsl
int
iret
std
or
shll
or
in
mov
lret
cmpsl
xor
int
rolb
adc
hlt
rorb
mov
fstpt
and
sub
nop
inc
jns
loopne
mov
sarl
inc
loopne
scas
pop
cmp
xchg
push
jg
xor
inc
sub
lcall
outsb
jmp
and
push
mov
jne
jle
insl
cmc
pop
ljmp
lds
outsl
movsl
int
and
xchg
in
movsl
popa
push
xchg
repnz
jmp
into
inc
jns
cmc
add
cmpsl
lret
push
test
xchg
cmc
int3
outsl
or
call
leave
add
push
jle
jg
imul
sbb
imul
lods
lahf
rorl
into
push
repnz
mov
sbb
xchg
repz
cmp
cmp
stos
dec
cmpb
xchg
and
xchg
test
and
or
aaa
mov
nop
xchg
test
lds
add
dec
inc
cwtl
pop
sbb
data16
fs
gs
fnstsw
mov
andl
ret
cmp
outsb
pop
mov
in
fdivl
out
adc
filds
xchg
adcl
stos
jmp
lea
cmp
xorl
push
jns
xchg
ljmp
mov
add
jge
cmp
cmp
sbb
xchg
xchg
mov
fiaddl
mov
popf
mov
xchg
jo
lcall
lea
mov
cmp
jg
mov
push
jl
xchg
mov
mov
mov
movsl
insb
mov
stos
cmp
xchg
out
test
cmp
decb
sbb
mov
push
pop
outsb
es
rcll
arpl
data16
stos
iret
jne
out
cmp
sbbl
dec
orb
and
mov
mov
sbb
loopne
repz
pop
mov
std
shl
push
or
cs
mov
aam
rol
and
lcall
dec
push
insb
repnz
pop
cltd
inc
add
mov
push
xchg
add
sub
movsl
mov
push
sbb
into
jae
scas
sbb
out
push
popa
mov
fldenv
pop
jb
repz
jns
lock
sub
sbb
push
cmp
jo
push
push
cmp
xchg
scas
mov
inc
loopne
mov
add
adcl
aad
mov
or
lock
jp
add
or
mov
out
jle
mov
ret
jecxz
mov
jp
scas
pop
pop
out
out
or
cld
add
cmp
jnp
cmp
jge
es
pushf
bound
cld
test
cmp
popf
dec
loope
or
sub
cli
xor
push
mov
test
movsl
lds
push
rclb
mov
mov
rolb
les
test
cmp
add
ds
into
push
popf
int3
rol
ljmp
sbb
js
xlat
dec
repnz
es
rcl
sbb
movsb
test
pop
sub
sti
inc
inc
mov
sub
int
outsl
mov
lret
lcall
add
cli
xcrypt-cfb
cmpsl
and
add
jecxz
push
jp
mov
xchg
and
sbb
test
inc
sbbb
pop
fisubrl
bound
cli
in
add
ret
or
repz
stc
inc
cs
jl
sbb
dec
inc
cltd
cld
je
loop
cmp
mov
mov
or
and
lss
lea
mov
pop
popf
xor
lods
or
es
push
or
or
scas
mov
fldln2
cmpsl
fidivrl
loope
in
and
and
gs
jno
sti
insb
js
ret
iret
dec
push
jmp
add
scas
test
sbb
mov
inc
aad
arpl
clc
iret
adc
mov
scas
aam
adc
dec
js
fwait
std
fdivr
sti
aas
dec
fstpl
in
imul
add
cli
jle
xor
lret
call
negb
xchg
cltd
cs
stos
lods
sbb
orl
mov
mov
nop
cli
add
in
jnp
dec
and
cmc
lds
cmc
xor
lock
jae
cmc
sub
cwtl
scas
adcb
or
stos
cmp
subb
sub
mov
jb
rorb
imul
cs
incl
popf
mov
mov
leave
mov
dec
add
lds
and
hlt
shll
loop
fsubs
sub
mov
pop
ret
mov
data16
lret
xchg
nop
xor
push
pushf
or
xchg
dec
pop
xchg
lds
imul
xlat
mov
xchg
xor
in
dec
int
jmp
or
stc
xor
push
cwtl
pop
das
mov
push
orl
mov
mov
mov
xorb
sbb
cli
mov
stos
add
mov
js
xor
sub
lcall
lds
lea
adc
lret
mov
fsubl
in
lods
push
push
sarl
cmc
and
add
sahf
in
rolb
pop
adcb
mov
call
std
mov
or
xor
orb
mov
xchg
or
outsl
std
push
pop
nop
pop
in
jmp
pop
xchg
mov
jnp
shr
push
cli
fisubs
or
or
cwtl
mov
add
xor
mov
scas
xchg
cmpsb
cmp
jmp
shrl
lock
fwait
cmp
pop
fists
xor
ret
mov
jb
lods
xchg
shl
add
movlps
dec
cmc
sbb
mov
cmc
xor
mov
jb
sbb
bswap
nop
repz
imul
pop
out
out
push
jle
inc
inc
xor
adc
shlb
les
and
mov
stos
sbb
into
xor
in
jne
xchg
jno
test
dec
push
sbb
mov
and
push
clc
sar
mov
jo
cltd
jbe
lods
mov
mov
pop
jnp
test
inc
icebp
inc
out
push
pop
arpl
aam
outsl
mov
sarb
dec
adc
test
mov
out
xor
ret
daa
add
fs
xor
gs
hlt
mov
mov
loope
loopne
dec
dec
das
out
add
faddl
sbb
xchg
mov
and
jecxz
je
pop
or
add
sbb
jbe
or
dec
jne
push
mov
mov
mov
bound
mov
pop
and
mov
loopne
popa
mov
cmp
jmp
sub
dec
adc
shl
sbb
xchg
inc
fstl
dec
mov
xchg
hlt
jb
mov
sbb
mov
and
scas
outsl
fs
out
sub
lcall
cmp
mov
push
dec
sbb
pop
fiadds
subb
pop
mov
jmp
cmp
mov
sub
cmpl
out
mov
popa
push
adcl
sub
add
cs
dec
iret
xor
je
mov
js
in
or
addr16
xlat
addb
loop
xlat
sar
jg
cmp
mov
movsl
insl
and
repz
or
mov
pop
pop
int3
xchg
jmp
imul
push
or
and
cmp
test
xchg
sub
fcomps
mov
cmc
add
mov
dec
fcomp
push
in
aad
xchg
rclb
pop
mov
inc
mov
push
rcrl
xor
insl
iret
aam
push
and
mov
push
repnz
push
mov
xchg
cld
aam
sub
cld
int3
lods
pop
or
mov
sub
mov
rcrb
pop
fldenv
fwait
add
je
add
pusha
sub
sub
cmp
repnz
outsb
sbb
adc
dec
jns
lcall
adcb
pop
daa
pop
cmp
std
lea
mov
push
or
data16
adc
mov
pop
xor
scas
adc
adc
jle
fidivrs
jb
jge
xchg
jle
dec
dec
unpckhps
sub
add
cmc
icebp
inc
push
and
mov
xchg
ds
mov
push
dec
push
push
icebp
jae
and
jmp
ficompl
popf
cmp
xchg
xlat
cs
mov
and
stc
sbb
xor
andb
gs
cmp
add
cmp
mov
cs
jns
mov
push
sbb
mov
cmp
jne
pusha
cmpsb
aam
repnz
cld
dec
jge
fnstcw
lahf
icebp
xlat
fstps
ss
pop
cmp
xchg
xchg
enter
incb
out
ss
adc
in
jle
and
xor
or
jbe
dec
dec
ret
mov
daa
lea
pushf
xor
inc
cmp
pushf
inc
shl
mov
pop
shrb
enter
or
imul
bound
cmp
ljmp
dec
or
and
push
les
and
inc
mov
or
sbb
add
pop
jmp
ret
jge
movsb
inc
cmp
popf
and
mov
push
add
or
loop
pop
sbb
push
outsl
push
bound
out
cmp
xchg
adc
mov
push
jno
das
dec
sbb
int
mov
arpl
push
push
sub
mov
movsl
outsb
cmp
dec
adc
fidivrs
mov
pop
pop
cwtl
adc
xor
sub
fisubrs
dec
scas
je
cmp
movsl
stos
jbe
lods
push
jns
idivb
xlat
test
xchg
loop
adc
fmuls
lahf
ss
cmpsl
js
mov
pop
lret
jg
cmp
cmp
leave
scas
fwait
mov
adc
cltd
and
or
lods
jo
dec
les
shrb
mov
cld
pushf
aaa
push
and
cs
test
push
push
jecxz
mov
xchg
jne
repnz
out
addr16
or
mov
mov
stos
push
fsubrl
push
test
movsb
xchg
mov
mulb
std
scas
aad
ljmp
sahf
popf
cmp
hlt
cmp
mov
cmp
es
jb
or
dec
cmp
in
fsubrp
mov
adc
mov
mov
andb
movsl
sub
fnstcw
ss
cli
lods
movsl
je
fisubrl
pxor
call
fucomp
jae
cmc
dec
adc
sub
sub
rol
movsb
xchg
stos
mov
insl
pop
pushf
cmp
and
and
into
push
dec
lods
push
cwtl
in
add
aas
push
test
dec
pop
xchg
test
orb
fcmovne
jmp
cmp
cld
fwait
insb
loop
jns
sub
movsb
imul
jne
ja
lahf
in
jbe
cmpl
jae
pop
pop
faddl
lret
and
cmpsb
out
aad
mov
mov
pop
xchg
xchg
decb
cmp
cwtl
pusha
lock
or
pop
dec
adc
xchg
movsb
fs
push
push
cld
mov
in
fnstcw
int
out
mov
mov
push
jno
and
and
outsl
movsl
pop
scas
inc
repz
and
mov
push
cmc
sbb
pop
cmpsb
dec
mov
das
loopne
mov
adc
int
sahf
call
lcall
dec
mov
fwait
stc
popa
cmpb
aas
test
sub
faddp
loope
push
xor
add
lret
addr16
pop
fnstsw
cmpsb
leave
pop
mov
loopne
fdivrp
mov
and
mov
or
add
and
adc
in
hlt
dec
jmp
mov
sub
rcrb
pop
lods
pop
sbb
cltd
mov
in
mov
mov
xor
sbb
cli
cmp
jns
cmpsl
pop
dec
ficoml
mov
into
popa
faddp
pop
outsl
push
es
lea
pop
adc
cmovb
and
xchg
outsl
inc
imul
aam
adc
mov
jge
aad
push
insb
adc
repnz
cmc
mov
data16
imul
add
xor
cwtl
push
stc
stos
stos
sbb
pop
push
cmc
add
out
mov
inc
ret
dec
mov
adc
jg
inc
mov
pushf
inc
push
push
jbe
and
loopne
adc
call
jg
mov
push
scas
mov
cmp
repz
daa
test
je
in
mov
mov
or
xchg
sub
and
subl
sub
rolb
clc
fsubs
mul
mov
lods
lods
cmp
jecxz
push
clc
stos
ja
and
cli
fcoml
push
out
clc
sarl
fldl
lahf
hlt
addr16
loop
shrl
pop
stc
pop
inc
hlt
add
aad
int3
mov
push
xchg
test
dec
pop
mov
je
push
lret
push
mov
inc
cltd
ret
popa
or
popf
mov
mov
xchg
std
mull
js
out
shlb
insl
sub
repnz
divb
insb
xchg
pop
leave
int3
xorb
scas
pop
divl
test
pop
sbb
add
jg
mov
out
jns
pop
push
sub
dec
jno
or
pop
addr16
cmp
adc
icebp
jb
cltd
andnps
scas
pusha
cmpsl
and
pusha
adc
cwtl
call
xchg
pop
push
mov
xor
ljmp
mov
jne
cmp
mov
popa
push
add
pop
and
call
out
fnsave
cmpsl
jno
test
cli
dec
or
cmc
pop
test
movsl
popl
adc
adc
jl
cmp
insb
insb
mov
adc
add
pop
enter
pusha
xchg
mov
push
shlb
mov
in
out
xchg
xor
sub
je
fucomip
ret
bound
mov
fistpll
push
pop
movsb
and
int
ljmp
push
add
inc
mov
push
fdivr
dec
lods
lret
lods
dec
movsl
std
and
stc
inc
sbb
push
bound
insb
cmp
clc
xchg
ffree
or
adcl
imul
test
aas
cld
add
jg
or
jnp
outsb
sbb
psubd
scas
adc
push
pop
or
shrb
xchg
jno
adc
pop
xlat
or
mov
sub
scas
aad
xorb
cmp
pop
in
jmp
mov
adc
xor
cmp
js
xor
jo
ficoms
test
in
push
call
fucom
ja
pop
inc
mov
and
loopne
mov
ja,pn
push
cs
jae
leave
or
push
inc
jl
in
test
lock
xor
dec
xor
loop
mov
out
sarb
shlb
sub
ds
insl
cmp
mov
jge
inc
jns
and
bound
data16
xchg
and
testl
push
out
push
cwtl
adc
rep
outsb
adc
jge
add
pop
jne
in
jo
ss
outsl
mov
xchg
inc
mov
cwtl
mov
lahf
test
pop
mov
out
xor
cmp
mov
imul
xchg
arpl
and
mov
xchg
int3
jmp
jmp
and
adc
xchg
fiadds
shrl
lahf
dec
adc
movsl
movsl
std
fnstcw
cmp
aas
mov
push
xor
jecxz
fdivl
mov
or
sub
pop
cmp
popf
scas
push
push
cmc
xor
mov
cmp
mov
pushf
jnp
add
pop
clc
sub
sub
inc
fs
mov
insl
xor
sahf
in
out
adc
lret
push
dec
arpl
test
lea
inc
cli
lcall
xor
fdivrs
fstpt
push
xchg
cmpsl
or
aam
push
xor
mov
push
pop
mov
jge
iret
scas
fsubrs
or
mov
jbe
xchg
mull
jmp
daa
sub
and
inc
or
mov
xchg
cmp
jge
mov
cltd
xchg
shl
test
xchg
mov
mov
push
sahf
push
fcomip
leave
xchg
sub
test
je
add
mov
mov
add
cmp
jmp
add
push
xchg
shll
pop
sbb
sbb
daa
lret
mov
jns
push
fsts
sub
jne
sub
sbb
mov
iret
adc
test
pop
xchg
cmp
ja
sahf
in
inc
mov
cli
loopne
popf
or
test
mov
mov
stos
inc
and
pop
adc
push
add
ja
rolb
pop
pusha
cmp
add
pop
add
jns
jae
scas
or
cmp
xchg
sbb
in
mov
sbb
out
lods
pop
mov
cmp
fwait
int
out
xchg
mov
les
mov
divb
pop
push
test
xor
push
stos
cmp
lods
xor
fsubrs
cwtl
sub
jg
or
je
scas
mov
les
nop
inc
fs
pop
repnz
mov
sub
sub
push
hlt
es
mov
inc
add
push
mul
sbb
jns
addr16
pop
and
bound
or
xchg
push
cmpsb
mov
int
and
or
xchg
sub
push
in
sbb
fimuls
push
leave
scas
add
pop
loope
stos
xchg
into
mov
stc
movsb
lds
push
and
mov
xorb
call
xchg
add
xchg
ja
sub
pop
imul
divl
adc
stos
loopne
imul
sbb
push
lods
xlat
fdiv
jecxz
xor
in
aas
add
mov
sub
rcll
ljmp
push
or
loop
inc
xchg
cmp
shlb
loop
sti
push
fcomi
popa
mov
jmp
cmp
sbb
and
jg
mov
cmp
sub
orl
mov
add
xchg
loopne
fidivrs
xchg
pop
and
add
cltd
pop
test
mov
xor
dec
stc
push
or
stc
in
dec
std
jbe
jae
mov
outsb
sti
insl
mov
jae
push
pop
pop
jp
test
scas
jge
xchg
repnz
enter
test
outsl
sahf
outsl
add
mov
jnp
sbb
xor
cld
xor
out
adc
fisubl
mov
loopne
in
push
add
pushl
or
xchg
enter
sub
xchg
rcrb
mov
loop
inc
shrb
or
mov
out
adc
jp
dec
cmp
jns
in
sbb
push
push
insb
jo
rorb
jno
mov
xor
cmp
aas
rcrb
idivl
in
jl
jbe
cld
les
push
lods
iret
in
dec
test
xchg
call
test
insl
pop
mov
loope
mov
test
jae
mov
stos
and
mov
in
jp
movsl
outsb
fcoml
jl
mov
jno
mov
loop
out
mov
mov
jge
xchg
in
xchg
pop
int3
leave
jmp
mov
clc
filds
mov
xchg
stc
lahf
mov
jbe
cs
fisttpl
dec
and
adc
mov
sub
dec
and
jp
lret
jo
pop
xor
pop
lret
mov
in
cwtl
jl
adc
sti
es
insb
or
nop
outsb
stos
mov
xchg
cmp
dec
rorb
jge
jmp
cld
mov
aas
jge
mov
frstor
movsb
and
mov
adc
data16
cmpsb
sub
fidivrl
fistl
int
inc
aas
dec
cmp
jmp
add
and
sahf
test
sub
xor
push
loope
xor
or
mov
xchg
not
cmpsl
jne
call
sub
xchg
cmp
fists
ja
push
loop
lods
fstps
loopne
fnsave
mov
movl
push
outsl
rcr
xor
adc
add
in
mov
push
dec
jle
sti
das
jle
ret
outsl
stos
inc
jmp
sahf
sbb
lcall
call
dec
in
jmp
test
int3
in
mov
jmp
setge
cld
mov
test
ret
jb
push
mov
cmpsb
inc
mov
cmp
mov
fxch
in
adc
das
jbe
test
nop
iret
cmp
push
rcll
mov
fwait
lods
xor
and
stos
jae
sahf
push
xchg
xor
fdivl
icebp
popf
ljmp
sub
and
inc
sar
xor
lahf
inc
jecxz
dec
xor
lods
leave
jnp
addr16
nop
sub
cli
pop
das
test
fldt
sahf
jb
test
adcl
xchg
mov
dec
mov
cwtl
mov
fildll
arpl
inc
ljmp
mov
jmp
and
pop
inc
push
pusha
cs
popa
repnz
mov
cld
mov
adc
cmp
in
ljmp
xor
jbe
xor
fwait
cld
scas
cli
pop
and
enter
adc
idivl
push
sbb
ret
int3
jmp
add
mov
repz
mov
scas
and
push
push
nop
fs
rcll
pop
rclb
lret
aas
push
insl
push
pop
add
orl
mov
sbb
push
lods
mov
add
scas
scas
and
sbbl
sub
jo
sub
mov
daa
cld
sbb
lea
xchg
roll
sub
pop
jb
hlt
push
ret
mov
or
hlt
rorl
or
call
add
das
jnp
add
leave
push
dec
ret
jecxz
lock
sub
sti
test
add
inc
div
push
push
negl
and
mov
gs
clc
les
out
cmp
or
dec
and
jno
cmpsb
cmpb
lret
sbb
shl
ds
rcr
out
aaa
outsl
je
inc
movsl
daa
in
jns
inc
dec
outsl
add
adc
ds
int
gs
cmpsb
sbb
jne,pn
and
into
ret
mov
sub
clc
jg,pn
or
mov
jmp
inc
sub
rcll
sub
or
pop
bound
sbb
mov
push
testb
in
and
aas
ret
out
test
push
jg
iret
sub
inc
sbb
push
aas
cmpsl
mov
push
lea
jbe
ror
fstpl
insl
stc
roll
jo
lods
jnp
xchg
gs
add
push
inc
in
mov
into
in
cmp
cmp
mov
dec
and
push
xchg
dec
cltd
cltd
shl
stos
insl
and
push
pop
cwtl
xlat
mov
lahf
inc
mov
in
inc
cmpsb
call
shr
dec
fcompl
cld
popf
ficoml
std
cmc
xor
xor
or
jle
sbb
cmp
mov
je
sbb
aam
xor
jl
aam
or
jae
xchg
mov
pop
xor
jmp
xchg
xor
adc
sub
fimull
sub
push
stos
inc
loope
mov
in
fcmovnb
stos
mov
mov
loope
sub
inc
jp
ja
sahf
pop
push
jbe
pop
mov
inc
mov
cmp
sbb
insb
fcomps
outsb
and
pusha
decb
icebp
xchg
lods
loop
bound
xchg
movsb
dec
jne
xor
dec
sbb
and
je
add
add
stos
push
xchg
jne
fdivl
mov
jnp
adc
loopne
inc
inc
and
fcmovb
and
jae
adc
das
aam
adc
notb
arpl
inc
ljmp
sbb
pop
cld
push
ret
mov
fcomi
subl
daa
test
pop
scas
cld
push
out
sbb
pop
xor
mov
test
mov
in
or
xchg
mov
aam
in
je
insl
inc
add
sub
scas
sbb
inc
lock
xchg
xlat
inc
cli
mov
js
aam
test
cmp
dec
jge
jp
ret
push
pop
inc
iret
mov
and
and
lds
push
mov
xchg
mov
mov
sub
int3
int3
mov
push
insl
int
imul
psadbw
xchg
outsl
adc
daa
cli
xlat
or
push
xor
mov
inc
fsubrs
mov
hlt
mov
mov
add
mov
scas
outsb
stos
std
das
cli
push
pop
xor
mov
rclb
xchg
adc
xchg
cltd
xor
mov
mov
xor
insl
xchg
les
add
pop
pop
mov
ret
jmp
xchg
adc
push
dec
cmp
add
cltd
gs
ficoml
push
and
fs
iret
movsl
pusha
adcl
rol
hlt
into
jne
xchg
xchg
jecxz
repz
cmpl
out
mov
inc
out
cmp
mov
fstpl
or
add
mov
inc
sbb
shrl
andl
in
sub
or
fdivrs
and
movsb
cmp
push
fwait
sbb
xchg
jno
xchg
or
insb
xchg
sbbl
js
dec
add
aam
call
sbb
jb
jo
sub
inc
sti
divb
adc
mov
mov
stos
arpl
addb
pop
stos
xchg
pusha
dec
out
or
pop
outsl
jae
test
scas
sbb
dec
add
mov
repz
push
xchg
mov
pop
aad
out
mov
ds
jb
test
ljmp
sbb
jbe
into
mull
insb
push
inc
xchg
dec
das
mov
popf
into
jno
ret
and
mov
mov
sbb
sub
pop
iret
cmp
iret
inc
jb
jl
add
push
xor
xchg
lahf
ret
rcll
cmp
dec
scas
pop
push
les
push
xchg
and
out
jecxz
mov
inc
push
push
jle
mov
and
in
in
push
sti
test
out
outsl
fwait
arpl
dec
xorl
adcb
leave
ljmp
int
push
or
loopne
subb
clc
out
fsubrl
outsb
lahf
sbb
cmpb
or
adcb
jns
lods
les
rcrl
sub
mov
imul
dec
mov
inc
sbb
in
xor
sbb
lcall
adc
mov
mov
cmp
loope
pop
add
or
add
xchg
repz
add
dec
sahf
adc
fwait
arpl
js
lcall
jecxz
inc
jle
movsb
cltd
sbb
mov
sub
clc
push
out
fwait
xor
in
pop
mov
pop
and
jb
mov
mov
mov
inc
pusha
enter
cmp
mov
cmp
xchg
cmpb
fs
sbb
add
punpckhdq
inc
jg
and
fnstenv
xor
xor
popf
cmp
sub
mov
cmp
mov
xchg
push
cmovno
adc
daa
imul
cmp
imul
mov
cmp
popa
cmc
popf
sub
cmp
insl
dec
push
lods
ljmp
cmpl
pop
shl
sub
push
or
pop
popa
jge
mov
cli
negl
jne
jle
dec
push
mov
and
cmp
add
int3
and
adc
jmp
inc
scas
mov
mov
adc
pop
jmp
sub
arpl
mov
cmp
mov
mov
imul
pop
pop
fdivs
ja
xor
mov
stos
icebp
iret
sbb
pop
mov
in
fadds
push
xchg
push
in
fcoml
pop
push
and
daa
push
pop
push
jnp
out
in
push
xor
movsb
sub
cmpsb
imul
arpl
pop
sbb
pop
push
sahf
mov
mov
push
inc
outsl
push
repz
push
rolb
mov
fdivl
aam
jecxz
rorb
mov
stc
test
stos
cmp
inc
aad
xlat
pusha
lods
and
in
or
push
jl
ret
sbb
arpl
xchg
sub
xchg
push
movsl
push
orl
repz
ds
movsb
xor
in
in
xor
mov
jno
pusha
ja
dec
pop
add
pop
dec
sbb
push
pop
ja
or
repnz
fildl
or
dec
es
xchg
insb
xor
icebp
inc
xchg
xorb
mov
stos
dec
pop
out
dec
popw
dec
pusha
rorb
mov
scas
das
mov
push
cli
loop
xchg
lret
mov
mov
mov
mov
adc
movsl
mov
shll
bnd
cwtl
mov
mov
mov
pop
shrb
stos
shrl
pushf
ds
jno
call
push
loope
push
int
fildl
or
mov
nop
inc
ds
das
adc
or
mov
rcl
lret
mov
xor
lea
lds
ds
dec
or
out
gs
mov
notl
test
cmp
icebp
push
mov
lcall
and
or
leave
nop
clc
push
or
sub
mov
xor
fcomps
jg
fdivrl
jp
ret
push
sub
les
sahf
push
sqrtps
jb
adc
repz
dec
movsl
lds
mov
ret
icebp
js
dec
fildll
popa
rorb
enter
aad
lds
push
add
lods
push
aam
js
pop
fmul
push
inc
inc
pop
stos
popf
ret
cld
lahf
jecxz
shlb
pop
outsb
lcall
fisubs
loope,pt
jmp
insl
or
add
adc
test
and
icebp
pop
push
stos
negb
stc
in
ret
xor
sbb
insl
cli
cmp
insl
xchg
test
stos
fwait
call
and
fs
sti
bound
sbb
ja
xchg
divb
loope
sub
movsl
jno
fstpl
push
das
in
jo
inc
jnp
push
add
pop
mov
pop
dec
sti
aad
sbb
cmp
push
lcall
push
adc
ds
jo
push
sarl
dec
mov
rorl
in
sbb
adc
enter
ret
add
jmp
and
mov
cmp
cmp
jg
aam
fstps
ret
xchg
jp
push
pop
and
push
dec
lcall
out
lods
jecxz
xchg
cs
into
daa
outsb
sbb
outsb
lock
mov
addl
pop
js
cmpsl
sub
lods
and
cmp
out
xor
push
mov
movb
test
sbb
mov
ret
jle
clc
cmp
dec
aad
ljmp
xchg
int
lret
sbb
sub
popa
mov
gs
in
repnz
push
sar
push
jmp
inc
out
loop
mov
jb
scas
and
pop
fildl
mov
push
xchg
fldcw
xor
fldt
mov
out
inc
dec
arpl
data16
add
inc
out
insb
xchg
xchg
jge
xchg
mov
add
in
outsl
jp
repz
jecxz
imul
pop
cmp
adc
call
add
ja
add
sub
jno
adc
outsl
push
rclb
and
lcall
imul
mov
jne
loope
insl
or
xor
js
inc
and
sahf
sti
xor
loop
sbbl
ja
xor
or
jecxz
xchg
pop
pop
cmp
push
sbb
loop
xchg
lea
stc
idivb
aad
xchg
dec
out
addr16
bound
mov
inc
lret
mov
ljmp
pop
xchg
mov
xchg
divl
dec
ljmp
jle
xor
sbb
dec
and
jo
idivb
fisubrl
mov
jae
or
adc
add
cmc
cmp
xor
pusha
rolb
enter
mov
fisubs
fwait
pop
ljmp
sbb
cli
fstpt
in
xchg
rolb
mov
mov
test
mov
fadd
add
iret
scas
test
sub
fwait
jnp
fcomps
dec
data16
pop
xchg
jmp
mov
enter
dec
sub
gs
jecxz
cmp
push
movsb
imul
adc
std
or
jle
sbb
cmp
mov
popf
and
jbe
repz
add
push
icebp
insl
test
adc
add
inc
ficomps
cmp
cmp
pop
loope
add
adc
mov
jmp
mov
mov
adc
mov
daa
mov
push
xor
clc
mov
loope
orb
mov
incl
pop
pop
mov
add
push
pop
mov
sbb
lods
xor
pop
lret
sbb
push
mov
pop
iret
add
ljmp
push
pop
dec
mov
inc
sbb
test
pop
push
repnz
aaa
cmp
mov
mov
clc
mov
sahf
mov
adc
inc
xchg
out
mov
jle
loop
push
pop
lods
loope
aas
add
andl
add
dec
inc
outsb
push
int
sub
pushl
test
mov
xor
pop
pushf
adcb
and
icebp
inc
dec
mov
and
dec
enter
mov
insl
mov
jmp
mov
and
push
hlt
inc
xor
xchg
daa
lcall
push
or
sub
xor
icebp
in
jns
jnp
jnp
das
fdiv
jb
sbb
pop
mov
pushf
ret
mov
jp
sahf
sahf
pop
sbb
pop
adc
jbe
orb
and
push
pushf
outsl
mov
inc
rclb
ds
pop
and
outsb
xchg
test
jns
pop
jns
fwait
das
icebp
sub
sbb
sub
test
mov
popa
je
inc
xor
call
testb
jl
dec
nop
push
fstpl
jmp
sti
push
aaa
loopne
mov
sbb
jmp
scas
jae
mov
outsb
std
inc
cwtl
xchg
and
jmp
push
pop
cs
insl
out
push
mov
lea
lret
add
or
inc
cmp
mov
jo
rcll
inc
jns
jmp
pop
adc
enter
adc
call
ja
fmuls
ja
rcrl
fsts
and
ret
dec
mov
jmp
push
paddq
iret
sub
out
loop
xchg
or
bound
add
sub
and
repz
sbb
xchg
mov
push
rcl
push
sbb
mov
ret
push
or
dec
dec
lahf
lret
sbb
clc
pop
imul
ss
xchg
rcrl
and
inc
dec
stc
movsb
push
mov
jb
adc
xchg
jno
push
push
xchg
pop
mov
mov
inc
xchg
aas
movsl
repnz
push
mov
pop
mov
mov
cs
js
inc
in
lock
cmpb
xchg
xor
cli
push
mov
xlat
or
dec
jnp
setp
cmp
int3
inc
repnz
aam
cmp
loop
or
push
enter
cmp
jo
mov
add
add
xchg
jns
fs
jmp
ljmp
xchg
jbe
imul
sbb
test
aaa
and
or
jge
pop
or
cmp
push
xor
mov
push
pop
cli
fmul
fcomp
mov
jge
jmp
pop
into
cld
sbb
inc
stc
and
and
insl
add
and
and
test
xor
mov
fwait
sahf
mov
xchg
fisttpll
hlt
sbb
movsb
xchg
jmp
loope
lret
dec
inc
roll
mov
xchg
das
loopne
popa
mov
jl
jge
aaa
je
stos
pop
or
fidivl
das
or
in
jbe
stos
mov
mov
and
xor
xchg
xlat
das
cmp
sub
lds
js
cli
lods
pop
dec
add
test
fisubrs
pop
cmp
cld
popf
pushf
push
cmp
push
jle
fstl
adc
aad
mov
cmp
xor
xchg
inc
sub
adc
push
fidivrl
out
sub
orb
mov
add
pop
push
repz
adc
dec
shll
ret
call
cli
push
adc
out
sub
pop
xchg
jle
imull
lods
sub
mov
leave
sub
xchg
stc
hlt
cmp
xchg
out
loopne
fisubs
xor
cmpsl
mov
fisubs
filds
pop
iret
out
xor
mov
adc
xchg
hlt
loop
xor
lds
pop
pop
lcall
mov
cmovbe
jmp
es
pop
jo
add
ds
xor
adc
push
mov
inc
xchg
sub
mov
int
dec
push
push
inc
pop
xchg
outsl
cmovp
scas
push
inc
stos
out
fistpl
ficomps
cld
adc
cltd
ret
push
or
loop
out
push
xor
outsb
cld
inc
mov
add
push
push
lock
aam
fwait
xor
arpl
mov
gs
jbe
adc
into
outsb
rclb
sub
sbb
mov
daa
outsb
mov
clc
orl
inc
icebp
repnz
xchg
fnsave
jbe
push
xorl
popa
shr
inc
jecxz
or
sub
and
or
sub
mov
dec
cmp
push
mov
test
rcr
mov
out
scas
sbb
int
mov
cmp
outsl
fstpl
pop
push
cltd
enter
push
xchg
lret
sarb
mov
in
aad
sbb
adc
push
popa
fstl
mov
push
fisttpl
mov
flds
sbb
mov
add
dec
call
jl
adc
aam
dec
sub
xchg
jmp
cmp
mov
int
add
push
gs
out
pop
outsl
push
inc
loope
inc
jb
out
outsl
mov
pop
daa
jno
cmp
inc
outsb
adc
dec
gs
pop
mov
sbb
popl
int3
lret
xor
push
pop
cmp
mov
xchg
ja
aad
xor
jns
aad
mov
icebp
push
fisttps
jmp
cltd
rol
and
mov
icebp
cmp
cwtl
xchg
pop
popa
es
push
fisttpll
xchg
sub
rcrl
jp
iret
adc
loopne
or
rcrl
mov
hlt
hlt
or
lds
sub
icebp
lcall
pop
xchg
cmpsb
movsl
cmc
sti
cs
ret
jl
not
mov
xchg
xchg
mov
adc
negl
xlat
push
imul
sub
mov
int3
add
xchg
jge
sub
aad
mov
mov
cmp
mov
fcomps
dec
fmull
daa
rcl
pop
pop
push
adc
into
jo
add
push
lcall
push
push
sub
cmp
out
adc
pusha
fadds
push
das
testb
clc
lret
frstor
je
rcrl
push
adc
xchg
lods
mov
jnp
mov
cld
xor
rolb
divl
push
std
cmp
pusha
adc
push
cmp
lea
mov
and
jmp
mov
jmp
mov
pusha
lret
xchg
imulb
std
pop
ljmp
xchg
dec
mov
testl
lret
fsubrs
jne
adc
pop
hlt
mov
test
mov
push
das
iret
gs
xchg
or
aas
out
call
rorl
mov
adc
jl
adc
out
fs
xchg
or
mov
ja
fimuls
or
xchg
testb
adc
fnstsw
mov
mov
xchg
mov
in
js
sub
insl
pushf
in
cmpsl
stos
sbb
rcrb
xchg
hlt
jns
xor
fisubrl
push
xor
test
fcoms
xor
lods
or
jbe
jp
cltd
mov
pop
pusha
push
push
cs
mov
cmp
test
cmpsb
mov
outsb
mov
mov
xor
xchg
vmovshdup
add
adcl
test
sarl
sub
shr
push
mov
movsb
pop
mov
rcrb
jecxz
sub
sub
iret
les
test
jl
sub
xchg
inc
cmp
dec
test
fwait
in
fs
adc
aam
adcl
xchg
and
daa
outsl
dec
mov
mul
push
out
sbb
adc
sahf
mov
notl
hlt
loop
sbb
mov
movsl
lret
jmp
mov
fsubrs
jo
scas
in
sbb
shl
test
or
leave
xchg
shlb
sbb
psubusb
lds
cmp
push
jecxz
sub
stos
pop
sbb
jle
incb
fs
cltd
ret
adcb
push
fldl
ljmp
fisubs
inc
js
cmpb
addl
inc
dec
mov
ljmp
enter
adc
insb
subl
fwait
cmpsb
mov
mov
fwait
push
pop
std
ds
into
lods
mov
push
hlt
sbb
or
and
xchg
out
pop
enter
xchg
jo
bound
xor
sbb
stos
xchg
mov
jmp
and
cmp
subl
in
jmp
pop
shrb
lret
mov
push
dec
hlt
xchg
daa
xlat
loope
mov
subb
dec
xor
arpl
mov
mov
xchg
jb
cmp
cmp
out
push
add
in
dec
insb
adc
imul
pop
gs
lods
jb
cli
je
sub
sub
add
push
mov
testb
fimuls
hlt
mov
jno
mov
xchg
push
jmp
push
js
fistpl
insb
mov
sub
adc
lock
jnp
inc
sbb
mov
scas
jo
xchg
mov
and
inc
mov
mov
addb
cmpsl
insl
je
jb
adc
mov
inc
xchg
push
pop
or
and
add
push
int3
imul
dec
loop
test
test
xchg
test
jg
pop
jnp
cmp
scas
pop
mov
xor
xor
cmpsl
add
hlt
cs
shll
test
enter
sbb
cmp
dec
jb
sbb
ret
sarl
fmuls
sub
add
repz
sbb
push
fs
mov
pushf
loopne
push
stc
gs
cmpl
and
push
mov
fcoml
dec
fwait
ds
aam
pop
inc
icebp
or
sub
sbb
adc
lea
lahf
push
mov
sbb
fsubrp
sub
xchg
adc
imul
sub
xor
and
test
inc
mov
mov
cld
hlt
loopne
push
ss
call
push
shlb
das
rorb
and
mov
loop
mov
cwtl
arpl
lock
push
pop
cmp
jns
sti
into
aaa
sti
repnz
add
and
xor
pop
sbb
xchg
xchg
mov
ljmp
mov
iret
leave
xor
jge
xchg
fisubs
adc
loopne
xor
sbb
dec
into
js
in
test
repz
bound
mov
mov
adc
mov
ljmp
push
ficoml
jp
sbb
pushf
test
cli
popf
negl
adc
dec
xor
out
or
aas
scas
je
pop
fwait
xchg
mov
jle
popa
or
lea
cli
inc
xor
dec
jl
ret
pop
test
dec
sbb
scas
in
pop
arpl
jne
ljmp
cmp
fcomps
scas
xor
adc
adc
in
push
pop
in
or
jno
add
scas
dec
xor
mov
fld
inc
scas
imul
aas
ds
push
enter
ljmp
lods
lds
cmpsl
adc
addr16
dec
lds
add
fistpll
in
daa
jecxz
ljmp
movsl
cwtl
outsl
out
insl
fs
clc
imul
mov
out
and
in
sub
push
call
fwait
jae
popa
jmp
push
inc
sub
and
pop
sarl
jle
push
loop
xchg
movsb
mov
adc
or
imul
dec
mov
sahf
outsb
lods
push
inc
movsl
and
xchg
xor
fs
sbb
sbb
or
jp
xchg
ljmp
xor
sub
sub
mov
repnz
ja
aam
shll
mov
inc
out
sub
sub
jo
xchg
mov
sub
add
sbb
negl
lods
dec
fwait
jg
fiaddl
push
aam
mov
iret
mov
je
push
xchg
xchg
popf
stos
cli
jp
push
imul
push
stos
sub
push
push
rclb
mull
popa
in
dec
xchg
les
aad
mov
cmc
jmp
ds
jg
mov
pop
or
mov
add
lret
xor
lea
in
hlt
push
movsb
ds
cmp
je
push
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fisubl
add
call
inc
cmpsb
enter
bound
jecxz
push
jecxz
mov
fbstp
inc
cmpsb
push
movsl
test
pop
rdpmc
ret
push
cld
push
add
dec
mov
fbstp
inc
cmpsb
push
movsl
test
pop
rdpmc
ret
sahf
std
sub
pop
cmp
push
inc
cmpsb
push
movsl
test
pop
rdpmc
ret
sarb
loop
je
push
inc
cmpsb
push
movsl
test
pop
rdpmc
ret
pop
pop
and
jp
shll
inc
cmpsb
push
movsl
test
pop
rdpmc
ret
mov
mov
cli
and
cli
fbstp
inc
cmpsb
push
movsl
test
pop
rdpmc
ret
insl
xchg
out
aam
inc
lahf
loopne
push
mull
adc
push
inc
cmpsb
push
movsl
scas
sarb
jp
je
push
inc
cmpsb
push
movsl
jb
fwait
enter
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
int
sti
sbb
add
mov
sub
cmpsl
clc
fldenv
jge
xor
fucomip
ljmp
sbb
inc
inc
and
out
push
mov
std
int3
es
pop
aad
mov
ficoms
inc
imul
int3
xchg
das
push
aaa
call
ret
jb
aad
jg,pt
push
jge
mov
jae
into
lret
out
mov
sar
pop
clc
dec
xor
stos
cs
fimuls
negb
and
dec
xchg
and
add
adc
pop
loopne
mov
call
insb
xor
stc
mov
shlb
sahf
sub
mov
jmp
je
sar
les
jmp
fidivrs
and
dec
push
scas
and
movsb
jno
push
icebp
in
test
xchg
jbe
int3
mov
cmp
xchg
mov
adc
mov
mov
cmpsl
pop
sub
cmpsb
sti
jno
ret
xchg
lea
mov
xor
out
push
add
int
mov
insb
fisttps
mov
push
loop
nop
sbb
xchg
mov
mov
sbb
daa
sarl
sbb
xor
fisttpll
cmp
addr16
add
in
call
test
jl
mov
adc
nop
jb
jb
push
stos
leave
mov
xlat
pop
sti
jns
pop
push
sahf
loope
xor
aas
adc
loop
sub
dec
sbb
mov
mov
insl
xorl
cmp
sbb
mov
rorl
repz
or
dec
add
out
negb
sahf
push
movsl
lds
add
and
jne
aaa
push
sbb
adc
mov
ljmp
mov
xorb
outsb
mov
outsl
aaa
decb
jle
paddusw
sahf
mov
mov
inc
sbb
testl
mov
xchg
and
ret
fcmovb
xor
scas
dec
mov
aam
les
or
fnstenv
pop
insb
pop
repz
xchg
in
enter
lcall
sub
sarl
mov
gs
adc
mov
or
into
cltd
sbb
dec
fwait
jno
gs
sub
add
arpl
jmp
adc
add
shrl
sub
xchg
sbb
and
xor
arpl
push
sarl
and
faddp
or
jecxz
adc
pop
cmp
push
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
dec
cmp
pop
ljmp
sub
ret
mov
adc
inc
sarl
roll
lock
and
mov
xor
rorb
out
repnz
add
push
cmp
push
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
filds
mov
xchg
cwtl
xor
or
rcrb
jae
ja
mov
int3
pop
sbb
add
cmpsb
hlt
loopne
xor
adc
or
fdivp
aas
aam
outsb
push
in
call
sub
movsl
push
xor
fsubr
fbstp
inc
cmpsb
push
movsl
sbb
fsubr
fbstp
inc
cmpsb
push
movsl
sbb
fsubr
fbstp
inc
cmpsb
push
movsl
shrl
pop
out
mov
dec
xchg
outsl
sti
push
add
ret
aam
sbbb
mov
mov
test
rcll
fimuls
lds
pop
into
sti
cmp
add
pop
mov
push
rcll
notb
sar
rolb
nop
outsb
stc
push
lds
rcrb
std
and
inc
mov
xchg
jge
outsb
cmp
mov
andb
push
push
sub
and
outsl
fstpt
adc
mov
insb
jns
mov
cmp
jo
ror
mov
mov
call
lods
push
gs
sbb
mov
enter
adcl
pushf
mov
sbb
mov
mov
out
and
sub
dec
loop
push
cmp
push
dec
enter
and
sub
dec
xchg
dec
ficoml
sbb
dec
xchg
dec
ficoml
inc
clc
push
inc
pop
dec
in
jo
dec
ficoml
add
int
cmpsb
and
rorl
aam
aas
push
inc
xchg
xchg
xchg
mov
push
mov
add
dec
sub
cmc
popa
push
shlb
push
gs
sbb
mov
xor
xchg
gs
inc
pop
sbb
pop
mov
xor
sarl
into
cmp
lcall
adc
push
pop
shll
mov
repz
xchg
lahf
and
mov
ja
jns
add
fwait
das
pop
cmpsl
rcrb
push
mov
inc
push
add
idiv
inc
incl
mov
dec
dec
push
mov
and
xchg
mov
xor
add
movsl
inc
aaa
or
dec
xchg
aam
inc
nop
ljmp
ljmp
jp
sbb
mov
jp
sbb
mov
pop
mov
ret
dec
inc
push
gs
xor
js
cli
mov
test
pop
out
outsb
push
inc
xor
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
fbstp
inc
cmpsb
push
movsl
