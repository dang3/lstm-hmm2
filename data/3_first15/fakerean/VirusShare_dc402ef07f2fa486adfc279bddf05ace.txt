sbb
add
pop
arpl
addl
and
sbb
loope
stc
dec
repnz
jmp
push
inc
mov
add
push
leave
mov
dec
xor
arpl
movsl
sbb
cmp
movsb
pop
rcl
inc
mov
cmpsb
inc
jmp
lods
aas
xchg
dec
mov
lock
add
jae
push
sub
add
jge
jns
add
mov
sarb
insb
popf
xor
jno
pop
lods
mov
add
xchg
xchg
insb
and
hlt
popf
ja
shll
mov
cmp
into
push
nop
cmp
push
push
adc
pop
ss
mov
ret
add
mov
mov
mov
fwait
add
jnp
jbe
and
addb
dec
and
xchg
dec
subl
xchg
lock
fs
roll
ficompl
outsb
inc
sti
xor
mov
push
scas
mov
ret
clc
push
aad
test
xchg
add
pop
stos
jbe
hlt
or
mov
shrl
adc
xchg
mov
mov
xchg
movsl
xor
adc
pop
push
push
fsubs
pop
push
inc
fildl
dec
mov
mov
ret
pop
aam
es
testl
movsl
addl
nop
int
add
out
inc
jmp
push
cmc
loop
shll
push
pop
pop
mov
cmc
ds
dec
mov
cld
rcrb
mov
pop
aaa
dec
adc
lea
mov
add
inc
cmpsl
lods
repz
mov
add
insl
aad
mov
aaa
sub
stc
mov
jmp
jle
testl
xor
ss
pop
test
push
sub
jae
sbb
lahf
dec
imul
sbb
or
xor
stos
adc
pmulhrw
rcr
sti
out
pop
mov
and
imul
jne
sbb
das
xchg
imul
inc
adc
mov
jmp
fimuls
and
flds
cmp
movsb
adc
popf
jg
out
out
pop
lock
mov
pop
push
jle
jp
call
xchg
jb
push
dec
mov
fsts
jl
mov
cmc
inc
push
sti
shl
iret
leave
inc
fs
sub
fiaddl
fwait
jle
hlt
push
dec
sub
push
sahf
push
add
xor
push
xchg
xor
xchg
sbb
jg
xor
mov
mov
pop
icebp
pop
stos
lret
xchg
in
jge
insl
lcall
sub
push
cmp
ss
mov
pop
in
fwait
lret
and
pop
pop
icebp
daa
insl
mov
xor
out
leave
addl
out
pop
jbe
repz
jbe
xchg
fwait
adc
nop
repnz
push
sub
inc
and
dec
pop
decl
idivb
in
data16
or
push
jecxz
cmpl
in
pop
leave
push
xchg
sbb
pop
sbb
lods
lret
mov
or
std
mov
add
pop
sbb
call
out
pop
mov
movb
data16
lret
mov
xchg
insb
push
outsl
mov
int3
sbb
fsub
sahf
sub
mov
sub
xor
xlat
inc
xchg
adc
movsl
xchg
add
movsb
mov
pop
push
mov
add
lea
mov
mov
fs
outsl
or
aam
jae
in
inc
js
push
insl
imul
jne
cmpsb
cmpsl
aas
mov
test
or
adc
movsl
or
shrl
sbb
mov
push
testl
int
cmp
inc
ja
pop
notb
xchg
mov
es
mov
popa
dec
call
jae
jge
ret
es
int
and
push
mov
push
push
lret
cmpsb
insb
pop
dec
push
dec
pop
mov
push
push
add
aam
shrb
pop
adc
loope
mov
mov
pop
push
dec
dec
jnp
fnstcw
ss
pop
xor
stos
arpl
cmp
insb
mov
inc
imul
in
jbe
mov
sbb
in
dec
xor
adc
mov
push
cmp
popa
jnp
sti
movsb
mov
subl
mov
sbb
adc
sub
sub
xor
dec
fisubrs
cmc
mov
inc
pop
xchg
out
ljmp
mov
sbb
adcl
bound
add
dec
shll
ret
ficomps
xchg
push
les
fsubrl
ja
sub
call
sbb
push
hlt
mov
cmpsl
jg
stos
dec
leave
add
fwait
leave
mov
add
sahf
shrb
stc
sbbb
rcrb
sbb
int
adc
jae
jecxz
fwait
xchg
xchg
jmp
jmp
jo
sbb
mov
cmp
mov
adc
cltd
dec
mov
adc
aas
push
jo
mov
addl
mov
adc
lock
jmp
outsl
push
mov
outsb
sub
xchg
push
jb
aam
sbb
nop
iret
outsl
cwtl
clc
dec
sub
in
out
loop
out
jnp,pt
mov
std
push
cmp
pop
int3
aas
xchg
and
je
mov
addl
leave
or
je
or
jge
lods
mov
mov
in
loope
out
mov
or
inc
jnp
add
sub
out
or
or
test
jle
push
adc
fildll
pop
out
or
popf
sub
dec
or
jge
pushf
pop
jmp
mov
into
cmp
add
push
in
js
or
lods
sbb
jne
sbb
out
rolb
leave
rclb
dec
sub
jns
cs
cmp
lret
daa
sub
mov
daa
push
lahf
rol
adc
shll
xor
mov
push
push
pop
push
and
aaa
pusha
cmp
pop
cmp
jecxz
jecxz
and
insb
int
jge
mov
sbb
icebp
cli
cld
and
add
outsb
push
pop
in
out
push
mov
int3
std
jp
mov
sub
push
insb
idivl
fdivs
add
sub
cwtl
xor
pop
inc
or
int3
add
mov
jecxz
xlat
or
mov
fld
dec
mov
sar
jno
stos
cmp
out
xchg
and
sub
or
mov
push
in
jge
mov
insl
jge
add
idivb
into
xchg
scas
lods
pop
movsb
adc
push
test
add
sbb
mov
lcall
xchg
jge
mov
jl
or
test
dec
cmp
clc
mov
arpl
dec
sub
pop
sub
popf
rcll
out
jl
inc
cmp
pop
push
std
pop
cmp
mov
pop
shrb
fmuls
add
lret
test
out
xchg
dec
repnz
fisttpll
push
lcall
xor
shrb
rcrb
xor
mov
mov
js
inc
adc
mov
mov
std
iret
cs
sub
pop
jmp
std
pop
push
fs
ror
xchg
inc
bound
jle
or
divl
jle
dec
mov
inc
pushf
popa
xchg
and
push
cmpsl
dec
addr16
es
add
push
in
cmp
popa
mov
xchg
xchg
mov
imull
dec
cltd
mov
adc
mov
mov
xor
aam
fidivl
mov
mov
add
outsb
sub
repnz
jne
adc
mov
push
sub
divl
fstps
cmpl
insb
test
push
scas
mov
pop
jl
orb
clc
mov
sub
imul
pop
push
popf
mov
sub
xor
mov
fmull
mov
mov
push
pop
movsb
pop
dec
jmp
xor
gs
test
push
push
notb
xlat
jns
loop
dec
test
dec
pop
and
scas
adcb
add
and
test
adc
adc
and
xchg
loopne
ds
inc
push
in
mov
xchg
mov
mov
testb
icebp
add
add
out
dec
shr
aam
push
push
test
test
test
fwait
jo
decl
mov
lcall
sbb
inc
sub
scas
dec
mov
mov
int3
xchg
and
pushf
in
pop
push
or
lods
test
sub
icebp
cmp
stos
jecxz
dec
xor
mov
push
rorb
dec
repnz
outsl
cmp
jnp
daa
mov
sbb
les
jnp
ret
scas
inc
icebp
filds
loopne
mov
dec
inc
jg
fldt
push
test
sbb
lods
stos
inc
sbb
pop
rol
repz
popa
lret
addl
dec
cs
sahf
out
icebp
adc
or
sbb
jl
xchg
sarl
push
cmp
push
mov
xlat
mov
in
mov
pop
xchg
pop
mov
push
das
pop
jmp
lods
lahf
jne
cwtl
fcmovnb
cmp
jge
rcrl
inc
loop
adc
xor
xor
scas
mov
std
dec
nop
cmp
and
ds
or
pop
inc
inc
insb
sbb
sarl
scas
mov
or
mov
cmp
sub
cmc
dec
jmp
arpl
popa
shrl
fisttps
dec
xchg
pop
in
mov
out
cmpsb
jge
jo
or
xchg
sbb
inc
pop
gs
cwtl
push
inc
insb
dec
push
push
fsubr
in
rcrl
xchg
cmp
aam
xchg
lret
or
mov
xchg
mov
popf
xchg
or
shr
insl
sahf
nop
pop
iret
sub
jae
outsl
pushaw
lods
xor
mov
xor
xchg
mov
jno
in
adc
sbb
add
pop
and
sbb
pushf
arpl
mov
test
and
lods
jmp
pushf
push
fisubrs
in
sub
pushf
loopne
lret
push
test
imul
pop
push
and
fwait
outsb
xor
jp
arpl
xor
jl
aad
pop
dec
mov
out
xchg
lahf
and
stos
out
mov
dec
add
addr16
das
push
dec
mov
cli
fs
hlt
hlt
push
test
scas
repnz
mov
mov
cld
pushl
mov
adc
xor
or
mov
jl
inc
xchg
mov
aaa
test
in
in
push
arpl
inc
push
sbb
sbb
ret
mov
dec
dec
lahf
lods
and
loopne
outsl
adc
or
fisttpll
sbb
imul
daa
test
mov
xchg
fnstcw
mov
popl
mov
lods
dec
add
lret
xchg
aaa
and
jb
push
and
clc
inc
sub
jmp
jnp
paddsw
mov
jno
xor
xchg
dec
pop
inc
add
add
xlat
xor
insl
daa
je
stos
pop
xor
in
cmp
jno
leave
sub
pop
je
add
or
adc
addl
cltd
fistpl
lock
lea
xor
jo
loope
fisttpl
mov
out
fs
aad
daa
dec
mov
cmpb
and
pop
inc
xchg
sbb
inc
xchg
pop
repnz
jmp
jo
lret
aad
sub
ja
xchg
fcomps
mov
push
push
insl
fstl
fwait
add
out
iret
gs
jmp
cltd
sub
jl
pop
popf
xchg
or
cmpl
xor
pop
mov
icebp
mov
mov
pop
imul
add
icebp
clc
and
add
enter
push
jo
out
mov
or
jne
stos
xor
push
xor
int3
push
test
push
call
std
arpl
andl
rep
rorl
cmp
inc
aaa
push
mov
out
aam
pop
mov
out
sub
movsl
sbb
into
push
lret
loopne
fisttpll
push
neg
std
mov
cmp
fisubrl
fimuls
inc
cmpsb
out
jp
cmp
test
imul
mov
in
xchg
push
jp
inc
nop
jnp
xchg
test
xor
loope
fbstp
push
and
dec
cs
jge
int3
pop
aam
cmp
jno,pn
mov
mov
aas
or
dec
sub
lods
adc
xor
push
lret
adc
fsubl
xor
enter
mov
ret
lret
mov
ja
lock
jge
gs
js
cmp
fsubrl
dec
xor
test
xchg
xor
pop
arpl
repz
cmpl
stos
mov
add
and
shl
xor
xchg
inc
xor
cmc
in
dec
addr16
fidivl
jno
out
loop
cltd
out
out
shll
das
lods
mov
adc
push
push
adc
adc
jns
inc
fs
jecxz
push
std
dec
jns
sbb
aad
push
movsb
ret
sbb
push
adc
cmc
ficoml
or
call
push
mov
or
mov
xor
xchg
rolb
mov
mov
mov
adc
sbb
xor
lock
adc
rorl
dec
les
dec
stc
pusha
jbe
inc
push
loop
pop
push
cmp
mov
adc
jl
mov
mov
jnp
and
es
fbstp
sbb
sbbb
dec
xor
jbe,pt
or
negb
xchg
scas
jo
xchg
mov
pop
fistps
mov
or
jp
xchg
inc
mov
push
jg
xchg
jae
addr16
repz
insl
scas
test
fiadds
pop
and
rcr
cmp
cmp
out
lock
xchg
shrb
cmp
mov
mov
lcall
popa
loope
out
dec
inc
add
pop
out
sbb
add
ljmp
in
ljmp
sub
mov
int
das
in
ljmp
aas
ds
fwait
push
push
stos
add
cmp
xor
ss
js
mov
xchg
xor
sbb
and
je
shl
cmp
es
cmp
repz
xor
sub
mov
imull
inc
icebp
flds
mov
outsl
dec
arpl
mov
negl
mov
cli
inc
and
jns
aad
movsb
inc
inc
pop
int3
cltd
inc
inc
in
lahf
stos
add
subl
repnz
in
fdivs
sti
ja
mov
cmp
cmp
xchg
push
mov
push
subl
jecxz
sub
pop
in
xor
sub
pop
push
jecxz
das
lds
sub
aad
std
shlb
out
adc
imul
sub
ds
out
mov
pop
cmpsl
rorb
dec
pop
sub
stc
dec
repz
add
aas
cwtl
push
fnstenv
test
loopne
std
jno
dec
mov
adc
arpl
mov
cli
cmp
mov
es
push
arpl
lcall
not
adc
imul
bound
sbb
loope
mov
sbb
outsl
je
mov
jnp
lea
push
mov
in
aad
xchg
sbb
outsl
push
clc
loop
popa
std
add
pop
dec
jecxz
mov
lds
lcall
imul
pushf
lcall
in
push
mov
lcall
enter
cmc
in
addr16
fisttpll
xchg
int3
adc
xor
mov
push
loope
xchg
jle
repnz
or
mov
inc
mov
xor
or
dec
mov
or
adcl
inc
into
ss
sbb
cmp
and
cli
std
sbb
cmp
test
test
incl
iret
push
xchg
dec
std
sub
jnp
inc
xchg
add
adc
push
mov
dec
sbb
push
pop
mov
inc
pop
repnz
pushw
lock
xchg
out
mov
xor
fwait
sub
pushf
insl
sub
jmp
nop
js
imul
and
testl
lods
mov
and
ds
jle
imull
insl
jno
out
jo
fnstcw
add
xorb
mov
xchg
mov
rcrl
dec
mov
sbb
stc
je
lods
mov
mov
pushf
ficoml
xchg
cmp
cmp
cli
and
int3
sarl
push
aad
js
xchg
mov
ret
gs
jae
stc
xor
enter
xchg
pop
int
push
out
mov
pop
push
cwtl
stos
aaa
addb
orl
movsl
cmp
fdivs
sub
push
cs
xor
dec
fnstsw
ror
leave
daa
scas
and
and
fmull
jg
fistl
addb
jge
ret
push
cmp
ljmp
sbb
mov
inc
pop
jl
mov
add
jle
and
mov
cmp
jno
aaa
inc
jo
in
pop
scas
mov
push
mov
xchg
push
sbb
iret
in
sbb
mov
iret
incl
push
pop
mov
movsl
jb
outsb
es
lods
rorl
repz
and
outsb
fwait
push
mov
lahf
jne
outsl
pop
scas
lods
mov
mov
or
xor
pop
dec
mov
dec
pusha
stos
lret
andb
shll
and
mov
jl
and
add
mov
nop
sbb
lds
xor
mov
lcall
dec
scas
jmp
lock
or
cwtl
sbb
xor
scas
cli
pop
unpckhps
fadd
imul
xor
mov
adc
cmp
or
repnz
mov
dec
lea
dec
mov
cltd
out
rorl
inc
cltd
std
jge
and
arpl
inc
mov
adc
in
mov
and
sbb
push
in
jb
jnp
jno
push
adc
call
mov
jmp
jns
stos
dec
in
cmp
fsubrl
xor
fistps
push
subl
mov
mov
fidivrl
ds
or
test
xor
in
pop
mov
and
repz
aas
add
xlat
add
mov
loope
nop
out
aas
and
scas
sub
jl
mov
push
fistl
aam
xchg
pusha
pop
loop
insl
jl
inc
cmpsl
adc
inc
icebp
cltd
ret
cwtl
mov
out
sub
add
mov
jp
and
arpl
leave
je
sbbl
fst
and
xor
dec
xchg
adc
movsl
test
dec
stc
add
sub
jae
inc
sbb
adc
sub
add
ja
test
insl
jns
add
mov
jge
fildll
das
or
sbb
cmpl
pushf
xchg
andl
nop
mov
and
lret
xchg
xchg
pop
add
cmp
and
lods
adc
test
sbb
pushf
mov
xchg
cmp
xchg
xor
mov
mov
mov
inc
push
adc
pop
dec
sbbl
xchg
sti
push
jp
aam
mov
adc
sbb
jmp
push
xlat
sub
test
mov
mov
jbe
enter
cmpsb
loopne
ret
or
sbb
mov
addr16
pop
mov
push
daa
push
inc
sub
fsubs
pop
insb
test
adc
add
lcall
popa
imul
inc
fdivs
orl
stos
ja
nop
int3
jl
dec
fisubl
sbb
mov
jge
cmp
sti
icebp
xor
arpl
mov
or
or
sbb
cli
adcl
roll
or
cmp
sbb
xchg
add
mov
insb
lcall
xchg
mov
out
sti
sub
or
dec
out
xchg
xchg
leave
dec
jb
ja
mov
fisttps
cli
stc
imul
push
cmc
cmp
or
pop
mov
aad
xchg
xor
pop
fmuls
stc
push
adc
inc
fstps
scas
repz
imul
inc
add
int3
or
ljmp
shlb
data16
out
hlt
mov
stc
stos
sbb
int
cmp
hlt
cmpsl
mov
add
push
push
xchg
pop
jle
lret
sub
mov
sti
push
leave
clc
in
jb
pop
into
out
and
push
jb
aad
dec
xchg
sar
xchg
push
bound
cmc
sub
dec
sbb
mov
add
lret
pop
fbld
out
cmp
sub
xchg
add
cmc
pop
arpl
and
jp
popa
jle
fnstenv
cli
dec
mov
mov
cltd
insb
insb
and
sbb
xor
adc
addr16
jmp
jo
ss
dec
test
mov
pop
inc
loopne
jecxz
lea
pusha
aas
fstpl
cs
popf
and
jl
jbe
dec
stc
data16
sti
pop
mov
jmp
push
insb
sahf
lods
lea
loop
cmc
cmpsb
cli
jmp
cmp
movsb
aaa
jo
dec
or
daa
jne
in
cwtl
sahf
dec
cld
dec
imul
adc
mov
ret
jae
cmc
inc
ljmp
into
adc
pop
jb
popa
push
jnp
arpl
jo
dec
xor
cmp
xor
orb
and
std
xchg
cmc
ja
jbe
xor
inc
xchg
or
mov
les
mov
push
test
mov
or
dec
sarl
dec
sbb
dec
mov
rclb
imul
insl
out
xchg
add
in
vmovaps
repnz
adc
daa
loopne
in
xchg
inc
dec
mov
insl
or
mov
push
sbb
sbb
pop
call
add
mov
dec
or
scas
outsb
jno
movsl
movsl
pop
jb
imul
adc
dec
jno
or
sbb
mov
sbb
mov
jp
lea
add
cld
ljmp
push
or
mov
jno
adc
jae
aaa
push
in
dec
mov
clc
cli
clc
cmpsb
mov
xor
movsb
adc
mov
cwtl
jge
in
and
stc
lret
cmp
imul
dec
lods
mov
dec
xchg
push
mov
and
cmp
cmp
cmp
in
shlb
fldl
mov
push
popf
xor
aas
scas
mov
stos
ljmp
push
lock
sub
addl
faddl
rolb
cmp
mov
mov
mov
insl
les
mov
cmpsb
ds
push
jnp
sub
scas
push
int
sbb
loopne
jg
xor
push
mov
aaa
pushf
mov
sbb
or
sub
and
sbb
stos
test
sbb
loopne
das
icebp
fwait
sub
cmc
inc
ret
in
movsb
pop
xchg
stc
and
cltd
jnp
sub
inc
scas
mov
shlb
sub
add
push
mov
addb
pop
aad
sbb
int3
mov
xchg
xor
sti
dec
mov
pusha
ss
dec
fistpl
sbb
mov
das
xor
add
je
orl
mov
addr16
insb
test
jne
idivb
mov
cli
add
daa
push
xor
bound
xchg
inc
test
dec
jle
push
lds
dec
sub
daa
mov
or
out
adc
push
repnz
lock
adc
xchg
mov
sbb
and
cmpsl
sbbl
adc
jns
mov
xor
in
and
js
lea
or
add
shrb
stos
out
fidivs
movl
mov
js
push
jbe
inc
fdivrl
inc
add
cmp
shll
movb
repnz
push
daa
and
sub
mov
add
pop
test
outsl
pop
lea
out
inc
add
and
jmp
inc
rcl
pusha
push
pop
sbbb
movsb
push
lcall
nop
xor
sbb
loope
pop
lods
imul
pop
test
push
and
test
or
fisubrl
negb
fsubrs
ret
jb
iret
pop
es
fldl
jbe
cmpsl
mov
adc
mov
repnz
adc
sbb
pop
adc
pop
lret
inc
stc
push
ret
negl
cmpsb
dec
loop
mov
adc
dec
inc
adc
jge
and
cmc
rcll
sbb
jl
lods
cmp
fstl
inc
lds
dec
xor
xchg
in
stos
mov
mov
push
outsl
hlt
or
divl
adc
inc
imul
imul
jle
cwtl
jmp
push
cld
negl
imul
aam
fwait
or
push
mov
mov
js
sti
ret
ret
ds
iret
sub
out
mov
fsubs
aad
mov
inc
jg
dec
lea
pop
sahf
iret
into
frstor
and
movsb
jae
test
xor
pop
popf
test
hlt
subl
jmp
pop
testb
pop
adcl
lahf
dec
dec
dec
aam
lea
adc
xor
sbb
inc
cmp
sbb
push
cmp
cmp
push
cmp
jbe
inc
clc
jp
clc
dec
xchg
out
cs
out
imul
and
ja
and
jecxz
inc
mov
sub
imul
lret
push
or
xchg
xchg
xor
push
inc
aam
xchg
loopne
xor
sub
imul
pop
fisttpl
iret
mov
pushf
cvttps2pi
fwait
icebp
pop
adcl
xor
loop
xor
mov
es
loope
aad
sub
pop
cld
popf
mov
xor
cmc
and
push
mov
subb
mov
push
inc
arpl
pusha
mov
mov
mov
push
pop
mov
pop
jno
int3
lret
xchg
push
aas
subl
cld
cmc
dec
cmp
fistl
or
sub
in
mov
push
arpl
xor
bound
jns
push
icebp
insb
xchg
std
xchg
lahf
lods
push
add
test
mov
or
xor
jno
stos
adc
and
mov
clc
cmpsb
sub
pop
inc
fsubp
xchg
or
jo
sub
cli
sbb
mov
dec
pop
subb
adc
cmp
ret
xchg
pop
and
mov
sub
movsl
sbb
push
fdecstp
int3
cmpsb
fwait
jmp
jmp
inc
mov
mov
lahf
mov
jae
movsb
xchg
lret
mov
mov
push
push
iret
xchg
push
out
je
pusha
jmp
stc
sub
lcall
cld
lods
pop
into
stc
lds
pop
dec
and
stos
jb
ss
pop
adc
shl
mov
mov
adc
or
jl
cmp
jg
xor
pop
sub
jmp
sub
cmp
movsb
xchg
cmp
aam
ds
dec
sbb
fcmovb
ret
add
gs
lcall
and
iret
stos
insb
xlat
inc
pop
pop
insl
popf
mov
out
jge
bound
cmc
push
es
leave
dec
mov
adc
xchg
enter
lods
inc
dec
cmp
nop
dec
in
cmp
cmp
or
cltd
jge
int
pop
lcall
aas
dec
push
dec
outsl
sti
jmp
sub
mov
jnp
pop
pushf
adc
pusha
jnp
daa
inc
test
sbbb
pop
mov
sbb
xor
lods
xchg
std
mov
stc
adc
add
jp
add
jle
mov
ds
insl
jns
add
lock
ss
sub
out
out
sti
push
jp
jne
ret
out
lods
daa
fidivrl
push
enter
jecxz
cmp
inc
aad
cmpsb
xchg
xor
fnstenv
jge
mov
mov
pop
scas
shlb
imul
into
xchg
pop
js
add
sbb
inc
mov
aas
push
mov
fwait
test
cmpsl
je
lods
les
jne
and
psubb
shl
sbb
je
push
outsl
aad
jge
lcall
inc
sar
imul
pop
test
loop
movsb
mov
jb
mov
xchg
sbb
stc
push
push
shl
loopne
test
sub
bound
dec
in
ljmp
fidivrl
pop
mov
dec
sarl
aad
aaa
mov
sub
xchg
push
dec
pop
adc
cli
sub
adc
sbb
scas
popa
cmp
and
mov
mov
in
adc
mov
std
xchg
popa
lock
or
test
sahf
sub
and
test
push
jb
imul
ss
movsl
jns
jg
dec
lret
adc
and
in
jle
sub
add
nop
xchg
je
dec
adc
ret
leave
outsl
mov
leave
adc
repz
push
cmp
cmp
sti
dec
sarl
xor
push
inc
loop
cmp
lcall
leave
lret
xlat
ror
jno
mov
mov
arpl
mov
cmp
sub
inc
mov
adc
inc
faddl
push
les
or
push
cmp
iret
inc
mov
out
push
icebp
xor
fadds
mov
outsb
mov
call
jl
xchg
and
mov
jmp
int3
or
xchg
lds
loopne
push
gs
xchg
lds
mov
lcall
lahf
sbb
lea
shll
and
sub
jb
sbb
dec
rcll
xlat
jmp
adc
mov
shrl
push
movsb
jno
mov
lods
sbb
nop
imul
mov
cmpl
std
mov
xchg
popa
into
aam
push
xchg
loopne
shll
test
mov
pop
addr16
outsb
push
movsl
push
repz
je
push
mov
mov
fldt
int3
jno
push
fwait
mov
fstps
and
sahf
pop
sub
lret
aad
xchg
or
icebp
and
lock
lock
out
int3
sbb
jl
repnz
add
pop
or
bnd
push
inc
scas
cmpsl
lret
and
rclb
lcall
push
mov
lods
orb
or
test
pop
lret
inc
repz
add
or
pop
push
popf
or
sbb
mov
mov
pop
dec
dec
and
fmull
mov
lds
sub
shll
popf
dec
bndstx
sbbl
pusha
xchg
imul
ret
adc
pop
adc
xor
je
mov
pop
jl
aas
inc
dec
mov
dec
xchg
or
es
xor
mov
mov
test
aaa
mov
ja
push
xchg
icebp
sbb
jnp
pop
arpl
icebp
aam
cmp
pop
jb
das
fists
out
test
mov
rolb
cli
pop
in
mov
pop
outsb
push
cmp
out
dec
add
adc
push
and
stc
push
int
push
lods
in
jae
decb
jge
xlat
mov
out
jp
sub
cmp
shrl
adc
xchg
dec
out
cli
outsl
mov
imul
outsl
jbe
sbb
in
std
and
xor
call
add
inc
imul
insl
dec
mov
jo
push
andb
push
lret
loope
int
jb
pop
sahf
cwtl
in
xchg
jge
ret
mov
mov
adc
sub
xchg
mov
inc
add
fldcw
xor
loope
insl
dec
lods
insl
rclb
cli
or
cmp
arpl
shl
dec
mov
lods
push
mov
xlat
adcl
push
pop
aad
push
cltd
adc
jl
jle
ss
adc
add
push
sub
mov
mov
outsb
inc
aaa
and
mov
pushf
lock
mov
sub
loope
aas
aaa
ret
mov
in
and
aaa
jmp
cwtl
mov
mov
xchg
in
lock
mov
in
leave
aaa
pop
cmp
xchg
ret
icebp
mov
aaa
js
mov
aaa
pop
inc
js
sbb
ret
dec
call
xchg
mov
dec
addb
push
mov
push
pop
mov
xor
add
push
out
dec
push
test
loope
movsb
lods
insl
stc
dec
dec
test
inc
or
mov
mov
mov
les
cltd
xor
fldl
dec
dec
mov
or
jl
fists
iret
mov
sub
shll
jle
iret
ljmp
cli
push
fs
sbb
lret
clc
cmpsb
sahf
int3
cli
inc
or
and
push
adc
into
inc
out
mov
enter
push
sub
push
stos
test
pop
pushl
faddp
sbb
stc
scas
jno
testb
push
dec
in
sti
sub
push
movsl
pop
out
in
cs
mov
mov
xor
xlat
lret
scas
mov
pushf
jecxz
repz
cmp
in
dec
inc
mov
mov
cmp
mov
sbb
jnp
loope
jge
ds
pop
call
cmp
jl
test
jge
sub
add
push
ja
mov
mov
mov
aad
push
ret
fidivrs
lret
movsb
cmpps
pop
scas
fwait
in
fucom
sarl
in
mov
scas
sub
sub
jnp
imul
out
mov
add
aad
cmpsb
mov
push
mov
xor
mov
adc
ljmp
sub
repnz
adc
jp
fs
pusha
inc
sub
jno
fwait
sbb
lret
jecxz
push
and
loop
iret
add
mov
mov
jecxz
outsl
loop
xchg
mov
mov
cltd
dec
stc
arpl
testb
xchg
fwait
push
pop
xor
and
pop
xchg
dec
sub
xchg
cmpsl
xchg
lret
or
fsubl
xor
dec
or
xchg
or
mov
in
popf
jo
jb
mov
cmp
or
or
push
in
gs
popa
mov
dec
jne
or
cmpsb
mov
das
jo
movsb
in
jae
rclb
fstpl
gs
ror
lods
mov
jbe
adc
mov
mov
sarl
lods
xchg
pushf
out
push
cmc
sahf
leave
iret
je
push
lock
data16
push
in
addr16
add
fdivr
imul
sub
sbb
test
cltd
push
sub
and
loope
jno
sbb
stos
nop
shl
imul
sbb
sub
push
shl
repnz
mov
rcrb
test
inc
add
mov
sub
fwait
adc
jnp
outsl
movsb
mov
jge
jg
out
mov
pop
mov
cmp
fs
push
gs
sbb
mov
mov
es
sarl
cs
mov
jl
gs
sbb
xor
stos
mov
jb
xchg
stc
lods
addb
out
test
fistl
pop
popa
jnp
pop
add
adc
or
unpcklps
xor
push
xor
xchg
stc
mov
mov
fiadds
scas
lret
fsubrs
femms
dec
sbb
jne
xor
fwait
aam
xor
scas
jp
jno
mov
cmp
leave
mov
push
mov
cmp
not
sub
and
xlat
icebp
in
scas
jne
mov
jmp
enter
es
jns
lret
mov
cs
repnz
pop
call
test
out
movsb
movsb
xor
call
scas
jbe
ret
pusha
sub
fisubrs
or
dec
enter
pop
lret
cmpsb
mov
adcb
leave
add
ret
sti
sub
push
stos
sub
lods
addr16
mov
pop
jg
push
inc
in
das
int
dec
push
in
jmp
adc
out
sbb
and
fistpll
dec
das
dec
insl
add
and
pop
mov
popf
aam
cmp
les
cmp
sti
push
mov
pop
sub
sbb
add
test
or
jne
es
hlt
cmp
jmp
jmp
ja
mov
das
popf
out
fists
icebp
popa
xchg
out
test
sarl
push
and
and
mov
add
add
arpl
and
and
sub
scas
nop
prefetcht2
mov
push
test
adc
insl
in
clc
es
pop
dec
out
outsb
adc
inc
gs
push
cltd
fildl
stos
es
push
aad
or
xchg
dec
xchg
popf
mov
dec
fs
push
pop
enter
enter
push
push
sub
test
ret
mov
stc
inc
mov
divl
ror
mov
cmp
ret
inc
les
push
pop
lcall
pop
xchg
les
sub
jg
shll
or
ljmp
ret
inc
pop
push
xchg
add
outsb
out
cmpsb
aam
or
stos
aad
xor
add
fcmovne
and
dec
outsl
lods
dec
fisttpl
or
push
and
lahf
push
outsl
test
mov
outsl
pop
leave
push
inc
dec
lds
and
repz
test
shrb
out
adc
mov
xchg
fidivl
add
pop
pop
jne
sbb
aam
adc
loop
xorl
ds
or
pop
repz
icebp
pop
lret
pop
popf
adc
xor
sbb
in
mov
repnz
adc
xor
sti
mov
push
mov
lods
add
loop
jnp
cmp
xor
jns
push
inc
or
testl
xor
mov
cli
jae
xchg
flds
inc
daa
in
dec
adc
pop
inc
push
in
mov
inc
movsb
mov
fimuls
rcl
repnz
xchg
jb
arpl
jmp
jbe
rclb
sbb
lods
cwtl
popa
xor
or
or
push
cs
lcall
push
sub
insb
mov
xor
xor
icebp
out
jnp
test
std
sub
push
int
fiaddl
and
cmp
cwtl
mov
or
jns
inc
jge
ja
push
add
cld
sub
adc
sbb
jae
and
cmpsl
mov
cmp
iret
stos
fisubrl
mov
pop
pop
dec
in
jmp
lea
xorl
mov
sarb
add
addr16
inc
pop
mov
mov
add
add
xchg
and
loope
sbbb
mov
or
add
push
test
les
lret
test
addps
add
into
adc
jo
fstps
movsl
in
and
enter
pushf
jmp
xor
imul
dec
pusha
xchg
fadds
cmpsb
mov
cmp
in
push
outsb
into
add
push
mulb
mov
addl
jmp
xor
lds
jecxz
push
clc
sbb
dec
fs
fprem
xlat
movsl
lahf
mov
push
mov
sub
test
xabort
icebp
xlat
cmp
in
shrb
inc
pop
mov
jle
mov
cmp
push
in
mov
into
dec
xor
lea
sbb
jge
in
xchg
cmpb
xlat
scas
adc
push
push
notl
repz
stos
lret
adc
pop
lods
insb
test
scas
push
stc
les
call
roll
test
sub
sahf
or
jb
scas
and
cvttps2pi
add
lea
pop
pop
into
dec
loope
inc
out
mov
dec
test
sti
jnp
add
dec
sti
inc
jno
dec
pop
pushf
out
daa
mov
pop
movsb
push
sub
ret
out
je
cmpsb
in
aad
icebp
push
jb
stc
sub
js
shlb
lds
or
test
mov
lock
cmc
add
adc
scas
and
inc
faddl
lock
int3
les
mov
adc
sbb
movsl
lods
addr16
mov
push
mov
outsl
push
jg
enter
fisubs
nop
arpl
mov
aas
ss
cltd
lahf
shlb
popa
test
sub
mull
xchg
inc
pop
cld
pop
cmp
lcall
sub
mov
xor
add
out
hlt
sub
push
jnp
xor
push
loopne
jl
sahf
mov
in
or
addl
push
sbb
clc
push
lcall
push
xchg
add
push
sbb
push
and
stos
bound
es
pushf
test
adc
push
es
test
and
adc
enter
adc
insl
lret
js
and
es
and
outsb
sub
or
fstps
out
mov
and
sub
sub
sbb
mov
add
push
mov
and
sahf
adc
sbbb
adc
cwtl
out
shlb
cltd
sub
push
mov
jno
cmpsb
or
je
jns
in
sbb
data16
fbstp
cmpsb
subb
adc
mov
adc
ror
jmp
lods
xchg
ljmp
push
or
into
out
fs
adc
jne
clc
xor
loopne
push
xchg
pop
xchg
dec
adc
sbbb
jge
sub
shll
ror
cltd
xor
testb
pop
cmc
sbb
add
mov
xchg
iret
inc
xlat
add
in
adc
and
js
mov
stc
or
aaa
movsb
cmp
push
dec
add
lods
pop
jnp
in
inc
rorl
push
pop
mov
outsl
pusha
add
and
int
adcl
pop
xor
jp
push
enter
cmp
sbb
xchg
hlt
ss
xchg
repz
negb
or
lcall
mov
in
aaa
divl
mov
outsl
xchg
add
mov
jmp
adc
adc
leave
popa
push
in
loop
ds
add
cmpsb
jne
sar
and
jbe
cmovns
xchg
mov
dec
aam
popa
rdtsc
push
adc
lahf
jo
notl
arpl
or
sahf
dec
sahf
punpckhdq
pop
in
data16
jbe
clc
aaa
or
fstl
push
lds
xor
sbb
jp
fidivs
and
ret
fcoml
pop
and
dec
push
mov
jmp
ds
dec
insl
popf
outsl
mov
jecxz
adc
dec
lahf
mov
sbb
mov
push
mov
pop
push
mov
pop
adc
jnp
mov
jge
jbe
fsubrs
or
sub
jecxz
push
adc
or
xchg
inc
pop
test
push
mov
stc
loopne
movsl
enter
adc
movsb
or
mov
in
ret
jmp
arpl
fcoml
stos
leave
jae
sbb
icebp
mov
jns
adc
xchg
xor
pop
xor
jg
mov
cli
pop
aas
je
pop
push
xchg
test
mov
push
fs
rcl
scas
xor
lock
out
icebp
jp
int
jno
adc
jo
cmp
jecxz
fnclex
ret
test
ret
xorb
stc
ss
xchg
mov
inc
xor
push
andb
andb
add
lock
mov
jbe
cmc
out
mov
cmp
mov
lods
movsb
jle
jo
cli
cli
mov
arpl
shrl
movsl
popa
cmp
xor
ds
in
js
pop
dec
sub
insb
and
sbb
outsl
stos
mov
daa
outsl
aam
cmp
shr
adc
dec
inc
xor
jb
xor
stos
int
mov
arpl
and
icebp
dec
lods
xor
add
jo
mov
mov
jno
xchg
cmpsl
push
cmpsb
add
fstps
in
pusha
pop
shl
mov
ljmp
mov
inc
adc
push
push
bound
divb
push
mov
mov
push
adc
and
out
inc
mov
dec
jg
lret
pushf
fisubl
ret
jae
xchg
enter
mov
lods
jge
lahf
lret
int
mov
push
dec
shrl
nop
in
push
fadd
sub
int
and
stc
ljmp
stc
jb
aaa
fmuls
and
mov
es
nop
sarb
push
dec
gs
mov
fbld
pushf
outsl
adc
ret
add
sub
mov
and
lods
pop
sar
mov
xchg
pop
add
stos
push
fs
mov
lret
shr
cmc
push
pop
add
outsl
out
mov
es
int
popf
daa
insl
mov
lds
std
repnz
lds
stos
movsb
rorl
xlat
pop
in
add
pop
cli
testb
or
pop
in
xor
iret
test
ret
cli
cs
call
xchg
pusha
cmp
jmp
leave
add
cmpsb
pop
jp
mov
jl
cmpsb
push
inc
push
add
dec
adc
shr
sub
jnp
imul
jnp
pop
pop
out
pop
je
and
mov
mov
sub
int
inc
push
je
mov
pushf
fdivl
negb
sbb
aam
mov
sbbl
dec
mov
and
loopne
inc
cwtl
pushf
inc
call
imul
xchg
aam
xchg
cmp
ljmp
cmp
sbb
repz
adc
hlt
add
jp
inc
lock
test
mov
scas
dec
popa
mov
add
aad
lods
pop
fldl2e
aam
pop
add
aaa
sub
mov
dec
fs
idiv
adc
adc
test
push
pusha
xlat
in
imul
and
ljmp
loop
test
daa
mov
mov
inc
loopne
sub
fwait
cmp
inc
scas
std
call
sub
sub
add
or
cltd
dec
jns
test
sub
gs
stc
xor
sub
sbb
sub
icebp
incl
sbb
push
mov
sbb
mov
gs
test
inc
in
movsl
mov
and
lds
xor
cmpsb
cmc
js
add
addb
inc
xchg
incb
add
pop
dec
enter
jmp
addr16
jg
mov
sbb
fsts
lcall
cwtl
pop
xchg
fidivrs
in
mov
or
add
jecxz
fwait
and
outsb
pop
shrl
xor
xor
vmaxsd
xchg
jae
xor
xchg
call
fdivrs
cmpsl
mov
loope
sbb
cltd
xor
in
xchg
lret
lds
cmp
jnp
std
or
arpl
cmp
add
shll
or
pop
repnz
inc
xchg
hlt
cld
imul
int
jnp
push
cmpsl
adcl
aas
jle
sbb
insl
dec
cmp
andb
and
aam
js
shll
shrb
fwait
nop
aas
sarb
mov
mov
and
imul
mov
sahf
mov
add
jl
sbb
cmp
shll
mov
mov
in
and
jne
outsb
mov
cld
push
imul
test
imul
mov
or
or
push
stos
pop
add
jg
xorb
dec
mov
cld
lret
testl
mov
and
pop
test
in
hlt
dec
xor
fldt
mov
outsb
push
cmp
pop
lcall
in
sahf
jl
mov
or
mov
not
jecxz
aaa
jns
and
pushf
repz
adc
bound
jo
dec
enter
sbb
and
daa
lret
inc
xchg
cmp
mov
sbb
adc
in
adc
inc
mov
aaa
pushf
dec
loopne
mov
xchg
enter
cmp
inc
xchg
or
pushf
mov
xor
cmp
and
insl
test
stc
push
pop
nop
jl
jle
jge
mov
ret
jb
dec
xchg
rcr
adc
testl
push
lcall
or
call
sub
in
repz
cmp
xchg
mov
mov
mov
das
arpl
lods
and
push
cmp
xor
int
shlb
push
sbb
fwait
das
nop
jge
rcl
iret
dec
sub
gs
push
cmp
notl
mov
and
cld
cmp
push
out
jae
sub
aaa
xchg
inc
jp
pushf
and
xchg
jp
popa
jne
push
lcall
shrl
test
data16
std
sahf
mov
lret
and
ja
or
rcl
cli
pop
adc
test
push
dec
push
fisubl
dec
pop
mov
mov
sub
push
mull
popl
cs
or
out
int3
je
inc
push
xor
outsb
jp
mov
xchg
and
or
insl
adc
inc
xchg
movsb
jp
shlb
les
or
sbb
aad
inc
pushf
jbe
scas
xchg
push
clc
popf
clc
dec
imul
push
and
xchg
scas
inc
rcll
outsl
test
pop
pop
push
es
daa
subl
ret
insl
jecxz
xchg
xchg
shll
xchg
jge
fsubrl
jo
mov
je
mov
xor
sbb
lods
add
in
cmpb
test
cmp
movsl
icebp
lea
shlb
cmp
fneni(8087
stos
std
lods
ss
cmp
clc
mov
jl
jge
fldt
insb
enter
or
iret
xor
lahf
out
gs
movsb
shll
sub
cmp
xorb
scas
es
fucomi
loop
or
int3
faddp
mov
sbb
les
out
sbb
sbb
aam
cvtdq2ps
pop
lods
add
or
aas
sarb
jp
sub
xchg
inc
sub
out
fwait
arpl
mov
aam
jle
xchg
and
fs
push
out
repnz
mov
loop
cmpsb
insb
push
popf
mov
push
jecxz
pop
cmp
xor
pusha
loop
rcr
pop
xchg
insb
insl
les
in
loopne
cmp
jle,pn
pop
mov
sbb
adc
test
ret
std
sub
cld
jl
push
pusha
in
stc
mov
loop
mov
aas
outsl
adc
addr16
sti
pop
fstpt
xor
div
cmp
jnp
sarl
ja
jmp
incb
inc
cld
dec
fimull
sbb
sub
ffreep
xchg
addr16
push
add
leave
xchg
push
shrl
push
push
mov
cmpsl
cmp
sbb
xchg
int
clc
push
sti
jle
mov
inc
lods
sub
and
bound
and
insl
cmp
arpl
icebp
test
inc
pop
adc
pop
shll
sbb
cmpsl
shl
in
push
mov
push
adc
loopne
mov
pop
pop
xchg
in
mov
jmp
loopne
adc
add
push
jne
ljmp
adc
xor
push
in
fcmovb
jnp
pusha
cmc
ljmp
sahf
xor
int
sarl
lds
imul
lahf
imul
push
add
add
das
fwait
pop
int3
mov
xlat
clc
pop
daa
inc
or
scas
loopne
in
push
fdivr
repz
dec
push
adc
movsb
not
jecxz
jne
lret
out
dec
adc
fwait
mov
jae
pushf
xchg
prefetchwt1
or
jno
sahf
out
add
cmp
loope
and
mov
nop
ja
xchg
fidivs
mov
int3
adc
sbb
jne
cmp
push
imul
cmp
fbld
xchg
mov
mov
insl
aaa
out
sbb
aas
and
repz
std
inc
sub
inc
cmp
lahf
cld
and
sub
icebp
push
sbb
xorl
cmp
adc
sbb
mov
shr
pusha
sbb
out
loop
mov
les
data16
test
jb
in
fsts
xor
mov
cs
pop
das
pop
notb
push
pusha
rcrl
jl
cmp
xor
lods
lret
test
loopne
test
jge
lea
mull
lahf
or
mov
sarl
xchg
popf
adc
inc
inc
sbb
pop
rcrl
andl
adc
aad
jnp
fidivl
push
ljmp
sub
repz
cmpsl
pop
xor
push
add
xor
push
adc
xchg
testl
outsb
push
jg
in
out
mov
mov
test
push
sub
addb
pushf
clc
and
pop
in
push
xchg
mov
lcall
aaa
sbb
out
push
sub
rcrb
scas
shrl
pop
xchg
mov
cli
outsl
sbbl
fiaddl
jb
push
adc
and
sub
mov
fwait
sub
call
jl
xchg
rcll
testl
adc
xor
cmpsb
jb
jmp
imul
push
fwait
rorl
push
inc
sub
aad
lods
fmuls
addb
mov
mov
jg
or
sbb
pop
adc
fstpt
push
jg
push
mov
xchg
pavgw
cwtl
inc
lret
mov
leave
data16
pop
jbe
xchg
and
or
cmc
xor
sub
or
inc
dec
cld
xchg
loopne
lods
leave
out
mov
lock
jno
push
aaa
add
aad
fnstsw
arpl
jp
and
pop
test
in
jnp
mov
push
sub
or
mov
pop
movsb
cmp
pop
xchg
ret
sub
push
stc
pop
dec
dec
das
mov
xchg
repz
cmpsl
nop
add
sub
imul
addr16
xchg
pop
setge
xor
mov
imul
mov
ja
sahf
jle
ss
pop
sub
xchg
xor
fwait
sahf
push
inc
in
jb
push
mov
fildll
dec
ret
dec
xchg
sub
lret
pop
pop
mov
mov
adc
nop
into
sti
stc
push
or
stos
pop
pop
outsl
mov
cld
in
dec
pop
into
aad
out
dec
pop
lret
pusha
fcmovu
lahf
lods
sub
nop
sub
sub
push
fldl
cwtl
sub
cs
sahf
sbb
mov
mov
scas
xchg
jmp
cmpsb
icebp
lret
add
aam
pop
imul
xchg
add
dec
pushf
push
ja
sbb
lcall
xor
push
filds
mov
mov
pop
cli
pusha
xor
call
mov
aad
bound
cmc
aas
out
shlb
cmp
pop
pop
sarb
or
mov
jg
dec
fdivs
cmc
aad
and
cmp
cmp
or
push
leave
enter
pop
dec
or
jne
cs
xor
cmpsb
stos
dec
popa
jae
out
pop
sahf
inc
push
mov
mov
shrb
out
jle
or
push
dec
push
inc
mov
mov
add
out
mov
insl
mov
cmp
sbb
popa
nop
mov
in
fdivrs
inc
mov
int3
popf
xor
stos
xor
cwtl
das
shlb
push
and
notl
cli
popa
lock
xchg
or
inc
push
rcr
clc
data16
ficompl
je
lds
or
lret
jo
ret
jg
insb
cmp
xchg
test
jae
fcmovnu
push
mov
and
or
xchg
clc
push
das
mov
test
testb
sub
int
lds
mov
adc
and
jb
lods
dec
or
scas
xchg
jo
pop
mov
aaa
adc
ret
cmp
inc
sbb
xchg
getsec
adc
stc
lock
jmp
call
inc
int3
hlt
scas
sub
adc
dec
cs
push
mov
sub
inc
fmull
addr16
jl
stc
xchg
ljmp
pop
push
mov
ds
inc
lods
inc
pop
insb
mov
add
lahf
out
mov
pop
jno
rcl
cmp
shrb
std
js
je
mov
or
lds
mov
mov
leave
aaa
xor
shl
adc
cmc
cmp
pushf
fidivrs
add
pop
sub
repz
mov
movsb
inc
leave
rorl
pop
aas
notb
inc
adcb
xchg
mov
sub
mov
scas
and
hlt
mov
sub
pop
xchg
fsts
xchg
rcr
jge
lahf
inc
rcrl
inc
xchg
xchg
hlt
mov
inc
insb
xchg
insb
out
gs
sbb
cmp
xlat
jo
mov
out
jne
test
cs
pop
sub
addr16
xor
sub
add
xchg
add
add
loop
sub
xorl
inc
mov
cs
cmpsb
xlat
mov
xchg
gs
add
notb
js
or
rorb
jne
push
jmp
pop
mov
cmpsl
add
lcall
push
jo
leave
mov
dec
lret
mov
loopne
mov
inc
and
dec
shlb
xchg
jmp
push
mov
icebp
inc
and
dec
sbbl
subb
cmpsb
daa
idiv
mov
add
out
xor
jle
icebp
lahf
push
push
arpl
ret
sbb
mov
dec
out
outsb
pop
arpl
pushf
nop
and
or
je
jge
sbb
stos
das
shlb
in
outsl
inc
jnp
subb
jl
popf
jnp
movsb
repz
push
pop
push
lret
pop
push
in
pop
lret
icebp
imul
cmp
outsl
pop
shl
cs
adc
cmp
mov
outsb
cld
shl
daa
movsl
mov
hlt
xor
sbb
cmp
inc
cwtl
sub
adc
fdivl
xchg
fcmovne
add
and
mov
xchg
adcb
cmp
add
jne
jg
xchg
jg
and
jb
fdivl
and
push
xlat
data16
jae
lahf
sbb
and
xor
and
mov
daa
pusha
int3
ficoml
pop
xchg
sub
dec
lahf
icebp
adc
fs
subl
pop
or
cld
jno
arpl
push
aad
xchg
repnz
lret
movsl
jbe
fwait
out
jmp
mov
pop
test
mov
jg
mov
imul
arpl
jle
pushf
inc
sbb
lock
lds
push
jae
outsb
shrb
jg
gs
inc
out
ror
cmc
cmpb
int
and
mov
dec
ljmp
pop
mov
or
cli
bnd
insl
daa
cs
or
lahf
aam
loope
les
and
pop
and
adc
sahf
mov
cltd
xchg
sub
push
mov
jg
mov
cmpsl
dec
scas
ret
icebp
movntq
mov
out
jb
gs
pop
pop
imul
out
inc
frstor
int
or
js
pop
inc
gs
lcall
sub
nop
and
into
sbb
and
das
les
pusha
push
jns
mov
sbb
cmpsb
pop
add
stos
jp
loopne
cwtl
pop
sub
xor
js
cmp
sbb
das
das
call
and
pusha
pop
jo
add
xchg
iret
int
test
stc
push
mov
aad
enter
aad
je
xchg
pushf
pop
adc
add
fcomi
mov
mov
es
in
xor
test
dec
sbb
sbb
mov
sbbl
sub
and
shll
loope
fsubs
fsubl
lcall
mov
adc
jg
add
or
out
pop
jbe
int
es
lahf
loopne
andl
pop
push
out
add
adc
mov
js
int
add
scas
roll
push
push
xor
xchg
aas
inc
and
stos
mov
lods
mov
pop
pop
test
cld
imul
jb
lahf
pop
mov
lcall
ljmp
mov
adc
fbstp
lds
std
aaa
xchg
inc
sub
sbb
imul
pop
les
cmp
add
popa
out
int3
xchg
and
cmpsl
mov
or
fucomi
add
pop
enter
cltd
shrb
repz
fnsave
sub
loopne
mov
fnstcw
scas
lret
inc
inc
into
movsl
aad
mov
xlat
xchg
push
sti
es
jge
xchg
popa
fs
test
and
mov
aaa
lods
xchg
push
sbb
fs
push
jge
or
cs
fnstsw
sbb
loope
xor
pop
mov
pushf
dec
nop
cmc
push
add
fmulp
sarb
inc
ficoml
jmp
pop
das
sbb
sbb
cmpsb
les
mov
test
inc
cs
shl
loopne
les
dec
xor
cmc
mull
cmp
in
adc
push
sub
xchg
mov
daa
xor
out
lret
lods
jo
fwait
lahf
add
sub
leave
add
adc
dec
pop
ss
mov
or
ja
push
jmp
push
mov
mov
outsb
popa
dec
out
xor
popa
adc
xorl
sub
sub
ss
cltd
push
and
xchg
add
test
push
lahf
data16
mov
push
jo
std
cmp
adc
pop
pop
fwait
loopne
jmp
scas
jmp
loope
cmpsb
cmp
push
cli
and
pushf
js
inc
mov
ds
ja
mov
and
push
and
sub
fwait
stos
pushf
out
and
ret
push
daa
jnp
inc
inc
hlt
dec
movsb
add
mov
in
fisttps
shrl
mov
xor
aam
inc
mov
xchg
mov
mov
mov
adc
fidivrs
xchg
mov
jl
inc
dec
lahf
push
xchg
cmc
js
sub
adcb
pushf
and
xchg
lds
cli
outsl
mov
shrb
or
push
out
xchg
movl
xor
or
movsl
xor
outsb
sbb
sbb
mov
sbb
xchg
cmp
or
cmc
mov
inc
pop
xlat
cmp
xor
xchg
test
les
in
into
imul
dec
mov
gs
jle
pop
jp
dec
push
jnp
xchg
je
in
sbb
cmp
add
outsl
sbb
aas
mov
pusha
jg
je
lods
sbb
fs
mov
int3
out
cltd
jnp
stos
push
push
inc
adc
xchg
pop
nop
add
xchg
xor
sbbb
dec
movsl
iret
roll
in
imul
xor
mov
test
jp
dec
imull
fdivr
push
test
push
int3
xchg
out
into
ret
es
ret
les
lds
add
mov
inc
leave
in
cmc
lahf
mov
jg
mov
add
rorb
shlb
stos
lods
sbb
test
jecxz
fninit
mov
scas
jne
add
sub
in
aas
gs
dec
adc
xchg
and
xor
lods
jge
mov
scas
mov
jb
popf
daa
xchg
lods
insl
bound
mov
jae
movl
adc
jecxz
stos
xor
test
mov
jno
scas
jge
mov
sbb
mov
pop
and
lods
pop
push
ja
push
sub
push
lods
mov
clc
pop
xor
adc
sbb
add
dec
adcl
mov
push
nop
sbb
sbb
movsb
fwait
stos
imul
arpl
mov
ds
lea
add
inc
pop
mov
lcall
jnp
jns
dec
addr16
and
lret
mov
sbb
jecxz
lret
call
add
mov
add
pusha
mov
call
push
and
sub
inc
mov
loope
push
arpl
cmpsb
dec
lcall
movsb
orb
pop
subb
or
out
fsubrs
test
sbb
add
mov
dec
test
sbb
ficoms
clc
mov
sub
repz
mov
int3
push
pop
xchg
add
adc
sub
adc
mov
or
sub
dec
mov
mov
inc
adc
sub
xlat
and
sbb
sub
int
bound
push
mov
sub
xor
push
bnd
pop
mov
push
mov
inc
jno
sbb
and
pop
inc
stos
pop
in
push
xchg
rol
jb
xchg
mov
idivl
int
cmp
fsubrl
outsb
or
pop
ja
pop
push
sub
mov
xchg
jbe
scas
push
sbb
in
popl
sar
sahf
ss
or
mov
ret
cmpsl
xchg
push
and
dec
nop
dec
fcmovbe
push
inc
mov
movsl
adc
lea
test
je
movsb
das
aaa
jns
add
or
das
cmpsl
stc
bound
mov
adc
pop
mov
scas
mov
push
pop
in
sbb
stc
add
jmp
cmp
jge
xor
inc
popf
fs
les
mov
sbb
int3
js
arpl
pop
and
mov
fdivrp
pop
popf
in
pop
out
fs
dec
or
lods
xorb
test
repz
stc
imul
nop
ja
shl
mov
fwait
in
hlt
push
jp
aad
int3
pminsw
outsb
push
cmp
loopne
hlt
fdivs
loope
pop
xor
daa
nop
pop
fsubl
imul
push
sti
dec
xor
sbb
int
mov
ret
notb
adc
xchg
call
and
adc
test
sbb
les
rolb
jecxz
out
roll
scas
sbb
ret
mov
cmp
mov
dec
push
mov
or
and
fnstcw
pushf
inc
fwait
pop
xchg
cmp
into
pop
pop
add
sub
repz
inc
and
inc
add
adc
test
jno
jmp
dec
aad
cmp
sbb
out
adc
fadd
das
loopne
not
je
adc
add
xor
lea
insl
mov
xchg
inc
rolb
jb
sbb
xchg
ss
or
bound
inc
mov
je
cld
popf
shll
dec
inc
aam
xchg
loopne
dec
lods
cmp
xchg
movsl
subl
add
cmp
repnz
repz
mov
cmp
sub
adc
or
mov
push
pop
pop
xor
sahf
int3
sbb
mov
retw
out
out
bound
push
std
test
xchg
add
cmc
int3
cmp
sti
cmpsb
je
fimuls
inc
xchg
fstp
fs
dec
adc
fidivrs
mov
mov
aad
jl
cltd
or
dec
fidivrs
xchg
movsb
dec
jle
sar
jg
and
jns
xor
adc
xchg
cs
fiadds
cltd
leave
mov
push
xchg
lret
iret
sub
mov
xchg
cli
stos
and
adc
mov
push
dec
mov
xchg
dec
cmpsb
outsb
ss
pop
dec
push
repz
adc
rorl
adc
ret
jle
mov
in
jnp
and
mov
into
add
jb
js
dec
mov
mov
pushf
mov
fadds
lret
ljmp
xor
mov
out
dec
andb
out
push
in
sarl
push
mov
inc
sbb
jae
jns
xchg
inc
cwtl
adc
roll
push
sub
fdivl
into
cmp
movsb
jp
stos
int3
xchg
cmp
push
ficompl
ljmp
pop
adc
dec
lea
arpl
lods
hlt
js
jbe
jne
in
inc
mov
mov
stos
sbb
imul
inc
shrb
shlb
mov
cltd
adc
mov
popf
pop
mov
mov
sub
xlat
push
pop
mov
mov
xchg
lock
leave
add
stc
push
adc
jo
into
jp
sub
ljmp
mov
out
call
sub
push
mov
add
outsb
cld
shll
mulb
sbb
push
insb
sarb
lcall
mov
out
cltd
inc
mov
inc
insl
or
insb
sbbl
jmp
pop
lcall
sub
pop
fmuls
jno
andl
xchg
mov
stos
pop
dec
pop
adc
sub
cltd
adc
or
cmp
and
pop
popa
sub
mov
stos
xor
jne
adc
fstpt
out
sahf
xchg
fsub
cmp
mov
stos
lods
push
push
adc
lds
cmp
mov
ret
test
test
xor
lods
sbb
cltd
xor
mov
lret
add
dec
xchg
xchg
mov
inc
pop
push
notb
outsb
mov
scas
das
addb
jg
jg
std
fs
pop
in
mov
rcrl
push
in
scas
sub
jne
xor
stos
notl
pop
sbb
in
xchg
jg
mov
outsb
inc
sarb
or
andl
cs
xchg
inc
insl
test
mov
into
dec
mov
mov
decl
jecxz
adc
rcr
or
inc
sbb
jg
mov
add
push
xchg
roll
fnsave
add
fistpll
jmp
sub
and
jo
loopne
outsl
mov
enter
push
xor
das
dec
gs
movsl
jge
rcrb
in
clc
das
jl
hlt
test
add
rorl
mov
pop
add
pop
movsl
xchg
mull
mov
cs
push
xor
add
add
mov
movsl
add
mov
cmp
orl
cpuid
push
pop
insl
dec
and
pop
call
jb
lahf
mov
xchg
imul
test
pushf
add
loopne
ljmp
mov
sbb
fcmovbe
mov
and
sbb
mov
adc
or
sbb
in
fsubl
insb
adc
mov
pop
mov
lds
cmp
rcll
dec
sbb
loop
xor
fucomp
insb
mov
xchg
lcall
test
xor
mov
hlt
mov
pop
jnp
repnz
jb
xchg
enter
adc
lret
inc
cli
mov
mov
mov
mov
push
xor
jp
sbb
push
lcall
arpl
push
cmp
mov
out
out
lods
pop
xor
jge
lods
div
or
mov
lret
xchg
nop
scas
shl
daa
adc
rol
mov
movsb
jo
inc
fldcw
pop
negb
ds
jmp
xor
in
rorl
shrb
jmp
in
test
xorb
add
repnz
lods
jne
mov
cld
jno
stos
sub
lds
stos
sbb
pop
push
popf
push
arpl
scas
fdivs
cwtl
lahf
inc
adc
lea
or
int3
xchg
sub
pop
shlb
dec
imul
mov
outsb
pop
or
mov
adc
jl
cmp
push
repnz
jbe
mov
or
mov
push
xor
repz
jge
jl
movsb
or
insb
scas
pop
cli
cmp
mov
jl
mov
mov
adc
cltd
jbe
imul
int
or
fcompl
sub
mov
push
sub
mov
outsl
mov
cmp
clc
or
stos
sub
mov
mov
shll
ds
xorb
jl
and
fistl
mov
push
popa
xchg
test
movsl
xchg
cmp
stos
cli
and
stos
push
add
mov
aam
mov
add
mov
add
dec
data16
dec
jne
fimuls
pop
push
out
xchg
xchg
xor
movsb
popa
imul
xchg
cmp
jg,pn
mov
jbe
cli
xchg
adc
loopne
cmp
xchg
loop
data16
loopne
mov
arpl
shll
and
xor
jge
loop
inc
pop
mov
repz
or
pop
imul
jbe
inc
push
jne
mov
pop
int
xchg
mov
sti
and
mov
adc
mov
sub
xchg
mov
insl
or
jle
or
xor
call
aaa
adc
call
test
das
scas
popa
or
jae
push
mov
pop
or
inc
mov
mov
xchg
push
jge
loop
xchg
jl
mov
cltd
jae
push
xchg
xor
lock
sub
and
push
xchg
sbb
jno
shl
dec
shl
cld
pop
movsb
and
adc
aaa
repz
popa
jle
or
movsl
mov
in
jge
jecxz
in
pushf
add
mov
aaa
neg
push
fildll
and
lods
mov
adc
orb
fucomp
insl
ljmp
aas
inc
pop
insb
int
pop
adc
mov
out
add
scas
add
push
ficompl
insb
cmp
push
mov
push
sbb
out
out
cmp
xlat
roll
xchg
movsb
inc
add
mov
pop
in
pushf
sbb
movsb
mov
mov
push
cld
jecxz
mov
mov
into
jmp
scas
push
mov
mov
jbe
pop
add
xor
dec
lret
dec
inc
stos
mov
jle
fbstp
cmp
sbb
mov
ret
test
inc
inc
mov
loop
mov
call
adc
jbe
dec
rol
jnp
es
shl
jne
xchg
int3
cmp
dec
call
loop
test
scas
xor
mulb
inc
xchg
repz
push
jmp
xchg
add
bound
in
loop
push
add
ss
in
cmp
loopne
mov
in
out
cs
jns
xchg
mov
mov
scas
lds
mov
mov
repz
nop
and
daa
sbb
clc
cmp
in
dec
inc
loope
and
stos
pop
test
push
imul
sub
pop
out
cmpb
and
movlps
lods
out
loop
sbb
adc
push
fldt
push
repnz
xlat
ficoml
dec
dec
jae
mov
xlat
test
xchg
xchg
dec
lds
adc
push
adc
dec
cmpsl
sub
adc
movsl
in
sub
jne
xchg
xor
mov
or
repnz
aam
ss
in
push
dec
mov
mov
push
cltd
out
and
fistl
mov
mov
jl
popf
cmpsl
stc
jecxz
sub
out
lock
stos
ljmp
cs
mov
outsl
enter
fstl
jns
pop
sub
cmp
in
ror
pushf
push
cmc
repnz
push
je
pop
leave
sbb
push
int
andb
test
dec
outsl
xchg
mov
addr16
push
push
push
dec
jno
pusha
jnp
xchg
pop
das
sbb
xchg
cmpsl
mov
test
jb
add
cltd
mov
mov
inc
pop
cmpsl
jo,pn
dec
ds
and
inc
and
and
mov
js
sbb
fiaddl
in
ret
jp
popf
mov
adc
mov
in
mov
stc
out
ficompl
addr16
lret
ja
das
add
xor
out
adc
rolb
js
int
mov
jo
shl
xor
fcmovnu
pop
icebp
cmp
movsl
adc
push
loop
mov
aas
lds
movsl
popf
mov
mov
out
fdiv
mov
divl
gs
jp
lock
ljmp
out
xchg
mov
orb
mov
ret
popa
xor
push
sbb
mov
dec
lea
pop
xor
outsl
or
aas
rolb
fisubrl
or
or
dec
and
jns
or
les
cld
insl
into
out
test
movb
cmc
int3
adc
sub
out
movsl
neg
xchg
inc
dec
xchg
mov
mov
adc
and
aaa
jl
push
mov
cwtl
andl
push
in
push
pop
sbb
rolb
fildll
mov
loope
aam
movsl
roll
xlat
push
xchg
add
out
inc
sbbl
cmpsl
jo
fsts
mov
shl
sar
sbb
xor
nop
sbb
or
std
movb
pop
fcomps
fs
mov
mov
adc
pop
movsl
stc
xchg
inc
mov
rcrl
rcrl
clc
lods
fildll
clc
push
push
mov
xchg
sub
aad
jne
inc
les
mov
xor
cmp
mov
jbe
add
xlat
in
xchg
xchg
enter
pop
inc
pop
push
sub
xor
add
lret
push
add
push
int
sbb
pop
sub
enter
dec
sub
add
pushw
stc
pop
mov
orb
xchg
pop
aaa
mov
mov
mov
jecxz
push
mov
jno
or
mov
cs
pop
cmpsl
insl
jle
ljmp
sbb
scas
pushf
mov
fucomp
lret
cli
jns
inc
das
mov
and
outsl
out
cli
ret
ret
mov
ret
fwait
inc
inc
sub
mov
shll
enter
pop
add
inc
lods
fcomps
aad
ret
fsubrl
mov
pop
pop
jnp
icebp
lret
and
fsubl
xor
cmc
cli
sub
and
roll
daa
lret
shrd
in
jbe
fisubrl
dec
xor
cmp
inc
and
mov
rorl
inc
test
adc
mov
xor
add
in
xchg
add
sti
mov
in
and
or
or
cmp
lcall
arpl
imul
dec
add
aad
cmpsl
pop
ret
add
inc
jne
shrl
into
fnstenvs
bound
xor
int3
adc
xchg
sbb
push
cmp
enter
xchg
bswap
lods
and
sbb
mov
test
ljmp
pop
cmpsb
adc
pop
nop
dec
jno
insb
or
cmp
xchg
mov
ja
sahf
lock
insl
addr16
int3
push
cwtl
pop
fstps
aaa
std
pop
dec
or
or
or
addr16
out
or
push
sub
hlt
into
cmp
out
mov
lret
push
gs
jno
fwait
and
sub
push
aam
into
cmpl
jae
cltd
push
cmc
xor
mov
inc
insb
pop
das
xorb
outsb
inc
push
xchg
adc
bndldx
push
jb
xor
insl
scas
aaa
ljmp
mov
xchg
int
cwtl
nop
ss
sub
imul
inc
cmp
out
cltd
js
push
inc
xchg
mul
daa
jb
cmp
mov
scas
xor
push
sub
xchg
out
cmp
shrb
or
out
aam
out
mov
ficompl
ss
movsb
fistps
push
mov
std
std
cmpsb
lcall
pop
jecxz
inc
xchg
lods
lahf
inc
test
push
mov
inc
pop
mov
mov
std
push
das
out
pop
sahf
les
push
in
lods
loope
mov
jo
cmp
cmpsl
into
mov
inc
or
stos
and
push
les
rcrl
mov
aas
das
cmp
adc
mov
xor
jecxz
pusha
iret
push
adc
inc
gs
in
shlb
shl
rcr
je
and
add
outsb
pop
ljmp
and
fisubrs
fwait
arpl
jmp
bound
clc
pusha
inc
shrl
repnz
iret
adc
push
pop
xor
mov
fldt
sub
mov
and
push
sub
add
cmp
xchg
daa
and
cbtw
pop
repnz
shl
das
popf
lret
xchg
sarl
cmc
push
stos
bound
in
out
mov
mov
inc
xchg
movb
mov
aam
es
sbb
and
xchg
jo
dec
cli
pop
or
inc
cmp
pop
insb
sub
push
dec
pop
test
arpl
push
ja
in
pusha
inc
sahf
rcll
lock
imul
js
imul
jmp
sbb
lock
add
or
xchg
pop
cmp
lea
xchg
gs
ret
xlat
test
gs
in
pop
sahf
cmp
insb
subb
nop
pop
cwtl
out
mov
xchg
mov
in
in
add
sbb
cmp
pop
test
mov
bound
dec
jne
pusha
cmp
int3
mov
and
ret
adc
adc
ret
sub
std
sub
pop
or
fldl
xor
add
fistps
pop
dec
dec
mov
fnstsw
and
call
test
cld
imul
outsb
sub
out
stos
adcl
mov
mov
insb
out
hlt
pop
div
and
ret
sbb
adc
adc
inc
mov
in
xchg
sbb
cmp
pop
mov
sub
in
hlt
cmp
xchg
or
push
insb
jo
lods
stos
shl
sub
pop
push
cmc
enter
enter
popa
inc
cmp
and
sarb
ds
jmp
lcall
rorl
pop
mov
pushf
mov
cmp
lds
and
xor
stc
loop
cmp
xchg
push
mov
xchg
pop
inc
div
jmp
in
rcr
andb
scas
stos
js
push
push
std
add
push
push
fisttps
pop
aad
cwtl
out
inc
addr16
leave
popf
xchg
adc
push
aas
dec
inc
jecxz
dec
js
jbe
xor
lea
scas
push
data16
xchg
pushl
cwtl
fwait
lret
inc
jle
das
or
jl
cmpsb
flds
push
inc
aas
das
shl
add
push
jl
add
in
in
test
out
xorb
test
mov
inc
mov
or
push
js
xchg
dec
or
dec
mov
pop
xchg
lcall
sbb
mul
inc
mov
jne
pop
divl
jg
out
daa
inc
mov
int
mov
aam
lret
sub
lock
mov
imul
push
push
pop
xchg
shlb
aad
add
int3
ds
in
movsb
dec
std
adc
mov
gs
out
pusha
xor
lcall
mov
or
jge
and
scas
lret
mov
and
adc
xchg
hlt
or
and
ret
adcl
or
lret
push
inc
imul
jmp
adc
push
sub
add
loope
pop
iret
leave
int3
mov
test
lods
fmul
cmpsb
ja
mov
stos
push
std
sar
in
pushf
repz
stos
xchg
or
movsb
jg
cmp
sub
add
inc
jno
es
rep
lods
pop
jecxz
jae
pop
jp
es
fwait
lret
or
jge
insb
mov
or
and
cmp
push
pop
dec
es
test
dec
int3
sub
jl
sbb
movsb
mov
cmp
pop
pop
loope
mov
cli
add
ja
pop
sbb
push
fcmovbe
mov
xchg
shll
xor
push
lods
lods
jge
jl
and
insb
enter
jmp
cmpsl
or
push
call
or
push
rep
popl
pop
sub
lret
dec
xchg
or
in
xchg
add
lea
test
inc
addb
sub
int3
mov
add
into
push
aas
mov
out
clc
push
sub
xchg
mov
fstpl
daa
xchg
lea
mov
inc
add
mov
or
jo
xchg
scas
inc
inc
cltd
ret
cs
bound
es
jnp
dec
jnp
push
xor
inc
xchg
dec
test
sub
sub
push
scas
or
or
mov
pop
pop
movsl
xchg
mov
adc
add
fadds
bound
and
insb
jl
add
inc
push
insl
jp
dec
andl
mov
xlat
sbb
call
sbbl
ret
push
test
das
jmp
rcll
repz
xchg
icebp
cld
popf
mov
ret
mov
popa
sub
pop
dec
dec
outsb
ss
mov
sarl
lock
test
add
cwtl
mov
sub
dec
cmp
je
inc
js
adc
push
ja
add
xchg
mov
iret
dec
stc
cmp
shl
xor
cwtl
xor
imul
outsb
mov
lea
and
fldl
cmpsb
adc
les
xchg
add
loope
sub
cmp
mov
fcomip
adcl
mov
and
pop
add
push
xchg
lock
cwtl
mov
xchg
imul
lret
dec
out
popa
xor
pop
dec
icebp
mov
sahf
js
icebp
fs
imul
sti
inc
cmpsl
aam
stc
sub
mov
add
push
mov
fisubs
mov
pushf
dec
lods
arpl
inc
jg
mov
es
bound
jge
in
daa
or
aam
add
mov
jle
lea
and
ret
addr16
dec
movsb
repz
cmp
push
pop
sub
stos
and
xchg
jno
or
cld
aad
or
andl
cmp
push
data16
out
aaa
and
enter
jne
roll
orl
xchg
adc
dec
push
in
pxor
int
mov
stc
mov
aad
test
mov
ljmp
inc
cwtl
inc
jmp
xchg
adc
test
xor
pop
mov
scas
mov
mov
test
ror
dec
divb
je
loope
into
pushf
sbb
and
mov
outsl
in
and
imul
insl
adc
loop
pop
xor
clc
inc
das
add
enter
addb
cwtl
add
mov
xor
test
adc
pop
add
cmp
loopne
test
xchg
test
push
inc
add
roll
subb
daa
ljmp
pop
mov
or
push
js
fisubl
andl
sti
push
orb
adc
cs
leave
pop
stc
in
out
jle
aad
fsubrp
cmpsl
ds
dec
das
inc
adc
add
aaa
test
pop
mov
and
aam
scas
cmp
xchg
rcll
push
in
cmp
inc
inc
dec
mov
fstpt
filds
ret
jecxz
test
js
int3
cs
pop
adc
mov
pop
sbb
xchg
pop
add
enter
jle
testl
cmp
add
add
arpl
jno
jo
mov
flds
lds
jae
jle
jo
sbb
ret
sub
mov
rorl
mov
add
jmp
and
arpl
repz
cmpsl
add
cld
sub
pop
pop
fiadds
stc
jl
or
jg
xor
push
dec
push
cmp
icebp
xchg
je
pop
loop
dec
cmpb
and
out
xor
int
iret
cmpsb
jbe
xor
ljmp
or
lods
xchg
inc
pop
jae
int3
and
fldl
test
sub
sti
arpl
jge
pop
fwait
les
ja
xchg
xchg
sbb
mov
jae
jg
pop
sbb
sbb
addr16
orb
xchg
mov
scas
repz
cld
test
in
jecxz
ss
sti
loop
sub
sbb
lret
pop
inc
movsb
fmuls
andl
loope
mov
xchg
mov
sahf
in
lods
bound
mov
dec
jl
clc
icebp
sub
sub
lds
sub
pop
mov
sbb
subb
xor
nop
shrb
cmp
xor
ss
jge
adc
adc
insb
sti
leave
cltd
push
inc
xor
push
adc
xchg
pop
es
mov
dec
sbb
das
loope
out
fldl2t
dec
jp
xchg
mov
or
and
cmp
pop
jo
add
popa
xor
mov
push
push
xchg
xchg
sub
adc
dec
jge
and
out
push
push
es
fisttps
cmp
call
movsl
mov
repnz
pop
jg
jl
xlat
or
add
arpl
je
push
or
adc
mov
cltd
xor
xor
shr
dec
pusha
pop
push
jb
adc
lock
div
mov
cs
subl
pusha
xchg
cli
adc
imul
push
sar
cltd
out
or
cli
and
cmpsb
add
jge
and
adc
lods
dec
lock
jno
test
lret
jne
xor
je
and
jnp
into
arpl
or
mov
push
clc
fcmovnu
movsb
lcall
sbb
xor
push
cmp
stos
scas
es
repz
push
lock
loope
aam
push
dec
lret
rcr
mov
testl
xor
daa
rcrl
aaa
in
mov
int3
insb
push
stc
cld
pop
jne
fildll
jle
cmp
popa
xor
push
xchg
jo
jbe
xchg
mov
or
imul
add
dec
xor
sbb
xchg
inc
mov
loopne
loop
outsl
arpl
arpl
add
push
xor
repnz
sub
mov
jbe
int
es
jecxz
ret
outsl
adc
inc
setle
cli
mov
sbb
lcall
scas
lods
insb
mov
pop
fadd
mov
sub
add
mov
loope
ficoms
adc
cld
mov
outsb
inc
push
push
inc
daa
push
mov
mov
pop
sbb
dec
lret
nopl
sub
aaa
push
cmpsb
mov
sub
pop
and
std
scas
mov
sbb
movsl
inc
mov
filds
sbb
addr16
rolb
pop
cli
scas
sbbb
push
imul
jg
popa
popa
imul
repnz
sub
xor
mov
cmp
xchg
sub
and
fisubrs
pop
mov
out
je
add
mov
testl
test
xchg
push
jbe
fwait
jmp
lret
lret
push
xchg
lods
enter
daa
fwait
mov
in
scas
fdivs
inc
mov
rcrl
sub
lret
xchg
pop
iret
push
sub
loopne
in
vpcmpgtw
int3
cltd
jae
xchg
jmp
push
arpl
pcmpeqb
data16
and
push
cltd
xchg
dec
popa
sub
jecxz
pop
ljmp
dec
pop
loopne
movsb
icebp
xchg
icebp
mov
bound
out
scas
sbb
daa
lock
outsl
inc
inc
aam
sahf
pop
bound
cmpsb
add
pop
add
cmp
pop
into
out
lods
xor
imul
pop
shl
das
xor
pop
mov
push
and
movsb
cmp
cmp
out
repz
test
lea
test
xchg
out
sbb
lret
loope
dec
or
iret
mov
xor
sub
pop
pop
int
movsb
mov
add
push
mov
lcall
xor
cwtl
shl
mov
fsubs
out
inc
aam
mov
cmpsl
mov
hlt
lods
and
mov
mov
mov
notl
movsb
mov
add
test
pop
xchg
mov
cli
fbstp
push
bound
mov
adc
rol
int
sub
jnp
pop
sbb
sbb
adc
or
mov
and
mov
push
sahf
and
pop
leave
adc
adc
and
fisubrl
xchg
call
mov
ds
enter
adcl
pop
mov
fdivl
mov
repnz
std
sbbl
lret
sub
test
scas
enter
push
jbe
mov
xlat
sub
mov
enter
cmp
es
jge
add
aaa
dec
imul
and
js
push
or
adc
inc
shlb
lcall
push
mov
sbb
jmp
mov
pushf
sti
leave
add
ficoml
jecxz
push
in
sbb
mov
mov
lods
mov
aaa
jle
das
ret
xchg
fstpt
pop
pop
cmp
lods
cli
xorl
jae
sub
sahf
out
mov
mov
push
pop
dec
sub
sbb
test
xor
mov
dec
insl
xchg
cmc
mov
in
or
mov
je
mov
lret
out
sahf
xchg
imul
mov
mov
sbb
imul
xor
lahf
mov
popa
sbb
aas
fisttpl
into
test
dec
aaa
inc
xor
inc
jg
sub
lods
ja
cmp
cld
stos
leave
ror
es
scas
fcmovnb
popf
shlb
push
rcl
lret
mov
lahf
int
mov
lock
test
xchg
cmp
and
jmp
loopne
add
sub
dec
mov
push
add
je
xlat
inc
daa
and
loopne
lret
pop
sub
fwait
push
mov
or
gs
ljmp
add
clc
out
out
sbb
mov
jle
aas
adc
xorb
jo
or
bnd
inc
imul
les
add
lods
cwtl
std
inc
lea
insl
sub
sub
mov
cmp
push
mov
loop
pushf
push
mov
add
push
fdivl
out
mov
jae
movsb
repz
test
insl
out
insb
shll
dec
mov
insl
mov
arpl
dec
push
int3
movsl
ret
push
push
xor
pop
cmp
jl
int
imul
and
fsubl
sti
mov
out
jmp
mov
lcall
push
jge
movsb
into
movd
push
push
dec
enter
add
jns
outsb
jmp
mov
lock
out
sub
push
pop
std
cs
and
sbb
sub
pop
sbb
sbb
sub
ffree
mov
cli
mov
dec
sbb
pop
test
clc
push
jb
fistps
je
adc
outsl
dec
popf
xorb
call
dec
xor
insb
insl
push
jo
lret
andl
sti
sub
mov
jl
sbb
lahf
insb
lret
ds
popf
stc
cmp
pop
jle
push
or
sub
test
pusha
lods
in
push
outsb
and
mov
stos
jae
enter
sarb
adc
decb
outsb
or
mov
inc
mov
lret
fucomi
sbb
cmpsl
pop
inc
stc
adc
add
sub
imul
sbb
push
mov
dec
dec
gs
jno
int
push
pop
inc
mov
jb
cltd
shlb
inc
test
mov
out
mul
sbb
int3
mov
sub
ds
sbb
xchg
push
incb
cltd
stos
into
push
or
push
xor
cld
xchg
push
arpl
jns
and
stos
jne
pop
cmc
testl
push
jne
cmpsb
dec
les
pop
push
add
add
sub
adc
push
or
pop
add
xchg
enter
les
in
pop
repnz
sti
xchg
mov
or
cwtl
mov
inc
or
jl
push
paddusb
or
loope
pop
movsl
xor
ja
inc
mov
cs
cmp
hlt
aad
xchg
mov
jb
push
sbb
rcrl
inc
test
ss
mov
idivb
push
push
inc
and
and
cmp
out
int
repz
aad
push
dec
dec
lahf
sbb
daa
lcall
ss
insb
xor
jecxz
add
pushf
shl
in
adc
lret
inc
add
and
es
leave
jmp
mov
gs
dec
cmpsb
cmp
rcr
fwait
mov
mov
insb
pusha
mov
sbb
or
cli
xor
movsb
ficoms
stc
lock
cs
xor
dec
mov
stos
inc
jl
push
add
push
sub
dec
mov
imul
dec
loopne
xchg
aaa
pop
lods
lods
imul
rorl
cli
dec
and
mov
iret
mov
push
enter
shll
cmp
scas
test
int
mov
fs
xchg
mov
mov
inc
sub
mov
out
and
mov
int3
bswap
mov
shll
mov
cmpsl
dec
push
or
mov
push
sub
dec
xor
mov
lcall
arpl
sarb
sub
xchg
loope
push
sub
rcrb
orl
testl
cmp
mov
push
loop
outsb
xabort
mov
mov
dec
jnp
pop
or
sbb
pop
and
mov
dec
jb
clc
add
out
mov
jle
jnp
mov
xchg
inc
mov
jg
cmc
call
fidivrs
add
inc
imul
jmp
sbb
and
repz
add
mov
add
popa
mov
pop
push
adc
fadd
addb
mov
imul
or
and
ja
aam
faddp
je
dec
shll
repnz
sbb
push
sbb
mov
imul
mov
std
mov
cmp
dec
push
jmp
and
add
push
leave
iret
lcall
xchg
xchg
mov
xlat
scas
jge
repnz
call
and
es
movsb
adc
push
and
push
lret
nop
mov
push
or
sahf
inc
hlt
xchg
push
cmp
jle
fwait
xchg
lods
inc
dec
sub
fnstcw
mov
sub
aam
and
push
jne
cmp
xchg
mov
xchg
movb
add
inc
lret
out
mov
cli
mov
jle
pushf
mov
mov
es
sbb
and
pop
imul
or
int
lea
mov
je
popf
dec
jne
lret
rcll
loop
ret
lahf
in
movb
xor
leave
outsb
int
sbb
cltd
xlat
sub
rcl
xchg
cmpsl
xchg
in
jne
shl
mov
aaa
and
daa
dec
pop
adc
push
add
xorl
shlb
mov
arpl
lods
mov
push
hlt
imul
jae
jns
imul
and
rcll
mov
mov
popa
xchg
adcb
daa
add
push
out
call
lahf
ret
sub
divl
add
add
and
cmpsl
add
data16
sub
pushf
sub
out
sub
int3
jnp
mov
xchg
lods
mov
mov
xor
insb
das
mov
jmp
in
cmp
movq
insb
pop
adc
loopne
and
push
movsl
mov
sti
pop
leave
lods
fimuls
adc
aad
rcrl
ljmp
or
mov
jb
inc
add
sarb
jg
hlt
mov
mov
jno
fcomps
jne
sbb
in
arpl
scas
jp
dec
rcr
movsl
loope
xchg
sbb
out
mov
dec
fwait
xor
add
cmpsb
or
adc
or
push
inc
dec
inc
adc
inc
leave
aas
push
sub
ds
fdivs
or
enter
xor
or
inc
adc
arpl
push
mov
add
cmpsl
xor
popa
dec
jg
int3
shll
inc
xor
imul
mull
adc
xor
cmp
xor
pop
xchg
repnz
repz
push
pop
insl
popf
aad
push
ss
lods
int
in
and
ja
inc
mov
fildl
je
jo
data16
ret
pop
cs
cli
cmp
cs
mov
jge
dec
call
pop
dec
mov
mov
cltd
mov
inc
pop
sub
and
pop
adc
xchg
xor
mov
adc
sbbb
pop
and
push
cmp
and
jle
cmp
scas
jecxz
bound
pop
inc
scas
fnstsw
hlt
add
shll
pop
clc
in
ret
sti
test
aaa
inc
imul
sbb
mov
or
cwtl
ret
add
adc
sbb
insb
outsl
inc
pop
ja
je
mov
or
push
inc
inc
xchg
pop
es
pop
sbb
jmp
push
mov
mov
push
inc
fimull
dec
repnz
pop
cs
xlat
and
rcll
add
add
or
rolb
ljmp
push
mov
xchg
mov
or
divl
push
pop
mov
jg
rorb
mov
push
push
dec
xchg
add
add
fldenv
mov
mov
mov
data16
or
mov
aaa
cs
cmp
in
mov
sub
pop
fcomps
lods
push
ljmp
inc
pop
push
push
mov
aam
push
lret
rcll
fistl
enter
sti
jne
adc
leave
and
sub
adc
mov
leave
mov
mov
ljmp
pop
add
fdiv
call
das
sbb
mov
enter
in
cmpxchg
data16
mov
loopne
mov
pop
shll
mov
mov
mov
cmp
dec
out
es
mov
mov
jp
std
dec
xchg
sub
sbb
mov
mov
mov
enter
cwtl
jl
mov
add
jp
lods
sbb
pop
and
push
das
inc
gs
dec
test
adc
pushf
xor
movsb
clc
aas
sahf
or
mov
mov
lds
mov
mov
aad
fsubs
mov
mov
gs
xchg
mov
mov
push
adc
cmpsl
insb
clc
in
sub
shrb
iret
pusha
popf
nop
in
cmp
ss
adc
test
ret
or
aam
add
mov
rorl
out
lea
sub
push
hlt
test
mov
and
xchg
push
scas
xchg
loopne
pop
je
outsb
add
ljmp
sarb
adc
adc
sub
add
cmp
or
fidivs
mov
jae
jne
subb
test
enter
in
mov
xchg
insb
test
js
sub
sub
adc
js
lret
sub
fwait
sub
adc
test
dec
stos
sbb
iret
mov
test
jecxz
add
cwtl
shlb
not
fldenv
pop
scas
cmpsb
inc
and
mov
and
dec
inc
fcomps
xchg
fwait
xor
stos
cmp
xor
shlb
loop
push
int
dec
loope
rclb
fwait
int3
lods
lods
loope
pushf
push
rorb
mov
imul
or
xlat
pop
repnz
fcmovnu
jns
scas
xor
push
dec
add
daa
lahf
cmp
ja
inc
nop
outsb
popa
fnstsw
mov
pop
mov
aas
shlb
into
popf
mov
sub
inc
int3
movd
mov
sti
cmp
push
shrl
push
add
adc
imul
and
cmp
xchg
inc
test
mov
jmp
and
jno
push
in
ret
in
inc
cmp
cmp
pop
test
fprem1
jns
fsubrl
adc
jmp
outsl
lcall
fistl
rolb
add
adc
popf
aaa
stos
jp
loope
adc
jmp
popl
mov
pop
sub
push
dec
in
mov
inc
mov
inc
add
xchg
mov
inc
xchg
mov
mov
lock
leave
loope
and
adc
test
adc
mov
and
push
xchg
in
js
dec
adc
insb
enter
daa
cmpsb
fidivl
pop
sub
sub
je
xchg
roll
in
or
inc
jp
fistpl
push
sarb
popa
roll
dec
std
xchg
jle
push
xor
adc
into
pop
inc
xor
fidivrs
mov
pusha
sub
xorl
xchg
inc
lds
lret
mov
lods
push
ja
enter
repnz
rorb
enter
flds
mov
adc
push
or
xor
mov
iret
in
jmp
dec
dec
inc
cmp
sub
or
jg
jne
outsb
jp
inc
inc
mov
lock
adc
or
adc
and
push
mov
adc
popf
iret
xor
inc
xchg
push
push
and
jns
icebp
enter
fisttpll
adc
test
push
xor
jp
leave
cmp
jg
clc
stos
lods
ss
push
cmp
mov
sub
mov
pushf
add
incl
xorb
add
mov
data16
mov
pop
ss
std
sub
jle
loop
inc
sbb
sbb
push
sub
aad
ja
aam
add
sub
jae
aad
dec
add
mov
insl
cmpsl
jecxz
pop
push
push
ljmp
in
jp
dec
cmp
xchg
fwait
icebp
dec
xchg
xchg
sti
lods
pop
cli
ja
fstps
aad
jg
pop
push
fwait
inc
dec
mov
sub
xchg
and
or
cltd
dec
mov
pop
push
push
lea
push
scas
pop
sahf
call
jecxz
jg
mov
cmpb
cs
imul
cwtl
mov
fsubs
inc
sbb
clc
leave
push
adc
add
fsubrl
stos
jge
sub
adc
inc
ret
inc
in
daa
popa
out
das
jecxz
inc
cmp
test
pushf
in
int3
xor
fs
lret
inc
cmp
mov
and
scas
dec
bound
cld
adc
sub
test
int
shll
jae
xor
or
movsl
adc
pop
add
pop
arpl
data16
cmp
daa
push
xor
imul
xchg
push
mov
fwait
lock
fistps
xchg
mov
mov
loopne
sub
dec
es
clc
insl
loopne
fwait
movsb
shlb
mov
sahf
bound
je
cltd
call
hlt
add
sti
subb
into
adc
scas
cmp
add
add
out
xchg
push
movsb
scas
and
je
xchg
mov
cmp
pop
out
push
push
pop
dec
xchg
sbb
xor
or
call
push
add
push
je
mov
dec
shll
outsl
dec
push
fidivrs
scas
jns
repz
add
fnsaves
or
or
jg
add
pop
in
cld
fistpl
addr16
sub
test
sbb
addl
out
jl
xor
pop
push
or
cs
into
add
out
sub
dec
lock
hlt
xchg
push
pop
aad
xchg
cmc
and
js
mov
sub
cmp
adc
push
xchg
mov
mov
jb
imul
xlat
aaa
sbb
cmp
pop
out
mov
mov
es
inc
jbe
aad
or
mov
and
movsb
sbb
push
jmp
xchg
bound
and
cltd
and
out
int
push
into
add
fsubrl
pop
enter
dec
mov
mov
cwtl
adc
push
jno
inc
pop
or
push
fwait
mov
stos
stos
mov
mov
mov
add
in
pop
push
cmpsl
sub
aas
arpl
inc
mov
cmc
fistpl
inc
aas
xchg
insl
dec
and
push
push
xlat
jae
and
push
mov
mov
and
sub
out
ret
or
pushf
call
and
pop
int3
lahf
xchg
cmpsl
push
xchg
push
cmp
pop
std
sti
jecxz
testl
pop
cmp
int3
scas
push
lds
sub
adc
mov
shrl
pop
jns
getsec
clc
in
pop
pop
fstl
sbb
xor
ja
jmp
xor
or
pop
dec
pop
mov
test
jbe
fucomip
decl
cmp
in
inc
outsb
jp
jb
std
sub
mov
mov
arpl
ja
test
test
iret
jp
add
inc
sub
scas
pop
jo
js
or
outsb
cmp
cmp
fidivrl
das
pop
dec
bound
scas
gs
ss
xchg
bound
mov
es
xchg
mov
enter
loope
adc
pop
arpl
aas
push
sbb
jle
mov
dec
inc
ret
jge
mov
mov
mov
adc
xchg
sbb
sbb
push
int
shrl
push
aam
in
pop
das
shll
insl
idivb
stc
je
pop
jmp
push
mov
hlt
scas
cli
pop
popf
leave
sub
mov
pushw
cmp
and
mov
andl
stos
lds
in
jae
ret
jae
outsl
dec
push
ss
pop
cmp
cmpsb
pushf
shrb
jbe
ret
aas
lock
dec
cmp
fisubrl
sub
mov
shr
aam
hlt
imul
inc
and
daa
sbb
mov
mov
add
xor
fdivrs
jno
cmp
sbb
fistl
lock
sub
mov
jle
push
pop
cmc
jno
add
cld
lea
push
icebp
scas
push
cmp
in
or
push
mov
xlat
stos
mov
inc
pop
pop
dec
jns
sbb
fwait
pop
mov
add
sbb
fiadds
fmulp
leave
les
notb
stos
arpl
dec
jge
add
mov
in
mov
repnz
lods
jle
dec
ret
jmp
arpl
ja
in
std
sbb
aam
adcb
push
xlat
mov
push
add
adc
lret
xchg
adc
outsb
mov
pop
pop
push
cltd
jg
pop
sub
adc
mov
pop
cld
push
pop
shl
mov
ret
jb
popa
mov
lea
fmuls
sub
mov
lret
and
divl
movsl
fbstp
fld
jne
mov
ret
dec
sbb
gs
int3
sub
jo
mov
jp
popf
outsb
je
imul
fmul
or
cld
cld
jg
adc
sub
inc
imul
and
or
cmpsl
pop
fnstcw
std
and
loope
cld
fbstp
jo
push
xchg
pop
clc
clc
out
and
adc
movsl
out
sub
scas
inc
or
add
shrl
imul
fldt
js
stos
and
sahf
lods
mov
insb
decb
mov
sbb
mov
xor
aad
mov
dec
inc
cmpxchg
sub
aad
in
les
iret
mov
shll
sbb
je
out
adc
push
jge
add
cmp
jbe
hlt
cmp
xor
pop
dec
dec
scas
sti
add
std
ljmp
jg
push
xchg
roll
pop
jno
repnz
lods
aam
data16
mov
scas
outsl
pop
pop
call
movsl
mov
dec
ss
adc
xchg
gs
lret
mov
dec
nop
hlt
push
xor
sbb
popa
dec
inc
xchg
sub
repnz
xchg
aam
cmp
or
cmp
sub
scas
push
daa
mov
idivb
popf
sahf
mov
into
aad
or
test
jge
rcrb
cwtl
xchg
pop
xor
mov
xor
adc
nop
aad
jp
xchg
mov
stos
les
es
inc
jbe
fsts
mov
dec
into
test
pop
push
iret
xchg
push
imul
sbb
xchg
in
and
aam
mov
cld
xor
in
sti
mov
cld
add
scas
aas
pop
rorb
xchg
mov
lea
test
mov
std
sub
iret
xor
xor
clc
add
inc
das
shlb
xor
mov
inc
icebp
fidivrs
push
xchg
push
loopne
les
aaa
jnp
cmpsb
cmpsb
xor
ja
mov
pop
cmp
das
push
adcl
add
push
inc
fistl
test
pop
fisttpll
push
xchg
cld
inc
mov
ret
mov
mov
xor
addr16
sbb
stos
or
aas
sti
rdtsc
movsb
jmp
inc
inc
cli
pop
push
pop
insl
pop
xor
je
roll
out
or
scas
lea
jp
jb
fcmove
sub
jbe
stos
negl
fcoml
jecxz
xchg
insb
outsb
outsb
mov
and
mov
lcall
pop
sub
sahf
jne
push
push
push
ljmp
test
loope
mov
lods
cmc
int
add
outsl
dec
push
push
int3
fmull
jmp
ja
aad
jg
push
dec
adcb
imul
mov
inc
pusha
ja
aaa
sbb
fstpt
in
dec
sub
ret
sbb
lods
ret
pop
dec
rcll
lods
sub
arpl
push
fmul
ret
and
pop
movsb
add
xor
jle
subb
out
bound
repz
dec
sbb
and
xchg
push
adc
inc
aad
xor
das
push
ffreep
inc
test
stc
leave
mov
outsl
out
es
add
clc
jmp
adc
out
sti
push
mov
outsb
inc
xor
ljmp
adc
push
push
aam
cmpsl
push
lods
sub
and
cmc
adc
mov
jecxz
sbb
and
nop
lds
scas
mov
rcll
inc
push
mov
cmp
mov
jns
pop
pop
sbb
mov
xor
cmpsl
incb
out
notl
xchg
jle
xchg
and
add
std
scas
fistl
add
xchg
jnp
cmpsl
cmpsl
imul
mov
mov
xchg
shll
pop
in
sub
pop
jno
cmp
sahf
or
push
int
movb
ljmp
arpl
xor
inc
leave
xorb
vpunpcklwd
das
mov
jno
dec
arpl
movsb
je
jge
enter
pop
xor
mov
repnz
call
xchg
sub
mov
add
sub
arpl
dec
push
add
sub
cmp
xor
pop
sahf
mov
dec
sub
jno
mov
imul
repnz
or
sbbl
in
inc
not
popf
es
mov
xor
jne
inc
xchg
fdivr
cltd
sbb
sbb
ljmp
in
sub
loop
push
ficomps
sub
ja
push
repnz
or
adc
adc
push
push
or
sub
adc
add
cmp
les
mov
fst
int
enter
bnd
aam
roll
rcrl
add
in
data16
movsl
int3
sbb
cmp
fdivl
push
cmp
jl
pop
loopne
ja
or
lds
mov
popf
push
repz
scas
dec
cmp
int3
lret
cmp
inc
shrl
add
add
int
aas
insb
scas
xchg
add
cmp
mov
popl
out
dec
lds
and
outsb
int3
or
bound
mov
aas
mov
jecxz
les
push
repz
not
or
pop
and
push
imul
add
in
fsubl
mov
sbb
insl
fistl
les
out
push
mov
mov
enter
jecxz
cmp
test
lcall
movsb
sahf
ss
js
add
icebp
out
mov
dec
sub
addr16
aas
pop
std
jp
fstcw
lds
or
jge
add
flds
or
mov
dec
mov
nop
xor
add
adc
lret
push
xor
mov
sbb
fistps
es
fs
pusha
or
cmp
cmpsb
xchg
enter
aad
int
xchg
adc
lea
fsubrs
rclb
jmp
movsb
xchg
pop
enter
mov
add
pop
mov
hlt
add
in
xor
jne
fucomi
mov
mov
adc
or
data16
push
jecxz
cmp
insb
sbbb
cwtl
jb
mov
inc
xchg
xor
xor
pop
imul
jb
push
xor
clc
cs
or
sub
lcall
ss
std
nop
push
in
jb
aaa
push
add
fwait
cltd
ljmp
pop
xlat
add
add
dec
sub
fucomip
mov
out
fsubrs
fcompl
add
pop
enter
mov
testl
xchg
xor
ja
ret
test
cmp
loop
and
cmpsb
adc
int
out
je
sbb
insb
push
jmp
jecxz
dec
push
aam
push
popf
and
in
aad
jg
jne
out
jb
inc
or
push
jno
mov
push
scas
mov
add
sbbb
movl
adc
sbb
or
and
cmp
lret
sub
inc
pop
add
loopne
xor
adc
dec
loope
gs
sub
cmpsl
mov
lahf
sub
jbe
lea
sbb
cmpsb
xor
lods
xlat
andl
pop
repnz
xchg
bt
int
or
sub
and
jbe
fs
xor
xchg
int3
int3
lret
les
cmp
add
mov
into
subb
shll
sub
mov
in
mov
mov
push
fistl
push
jns
xor
sbb
adc
cmp
mov
out
fcmove
ret
in
and
pop
pop
mov
shlb
mov
xlat
xor
lock
call
sub
lods
fldenv
cmc
shl
rcll
cld
push
mov
inc
mov
loope
push
aam
stc
pushf
and
sbb
mov
or
test
mov
jnp
shlb
add
cmp
mov
pop
dec
add
cmpsl
mov
lcall
ds
sub
push
and
push
jmp
add
mov
iret
push
pop
lcall
cmc
roll
es
mov
ficomps
mov
pcmpgtd
fistps
cmp
cmc
pop
xchg
lcall
mov
fisubl
dec
and
stc
in
bound
dec
pop
mov
int3
xor
xor
lret
mov
insb
and
push
mov
xchg
imul
xchg
sti
movsb
mov
je
out
fcmovnbe
cs
push
ret
cmpsb
pop
fld
nop
sub
mov
and
testb
sub
adc
mov
push
jnp
dec
push
and
lret
add
shlb
xor
cmp
or
push
lea
leave
mov
sbb
mov
loopne
fs
dec
xchg
mov
adc
cs
fidivs
fsubrs
out
cmp
sbb
sub
xchg
lss
mov
xchg
or
imul
xor
sti
sub
cmp
dec
aad
loope
not
notb
mov
dec
xchg
add
adc
fucomip
jmp
xor
jg
daa
cmp
jnp
pop
test
push
ss
mov
jl
and
xchg
sub
mov
jnp
adc
leave
enter
jp
mov
repnz
push
rcl
sbb
js
sbb
scas
cltd
mov
repnz
dec
push
jno
mov
sar
pop
lret
mov
ror
push
jo,pn
mov
enter
out
sarb
lods
xchg
and
ljmp
mov
hlt
fadds
pop
mov
imul
aaa
cmp
pop
insl
repz
int3
in
fs
inc
aas
push
adc
bound
sub
xchg
cmp
dec
shlb
pop
xchg
pop
ret
mov
ret
loop
fwait
xor
imul
push
push
addr16
repnz
pusha
sahf
out
stos
fcom
inc
arpl
adc
dec
dec
popa
pop
add
movsl
and
cmp
mov
lcall
pavgb
test
cli
test
arpl
dec
xor
jecxz
push
pop
sub
out
mov
cmc
aam
xchg
mov
movsb
leave
mov
movsl
lods
iret
lcall
pop
mov
cs
xor
das
fwait
xchg
negl
jge
lret
out
ja
add
das
ret
scas
rcrl
popa
push
aaa
add
fcoms
adc
bound
stos
mov
test
add
lahf
test
push
jnp
jae
push
cwtl
out
xchg
jns
cltd
dec
shll
add
mov
cmp
push
sub
mov
push
cwtl
mov
scas
rcrb
das
add
or
dec
ret
call
or
adc
xor
and
jecxz
pop
mov
xor
cld
xchg
xor
scas
jnp
dec
fwait
gs
sub
xchg
out
shrb
or
inc
clc
jp
in
push
jle
stc
popl
xchg
push
jge
sub
cmpsl
push
pop
repnz
or
xchg
ret
ret
cmc
or
and
sub
cmp
testl
fldlg2
js
xchg
call
mov
push
inc
aam
inc
mov
xchg
insl
icebp
jno
enter
push
mov
das
xchg
sub
stc
mov
sbb
mov
cmp
pop
mov
xor
push
int3
ss
rclb
dec
xor
mov
mov
adc
and
xchg
fucomp
or
mov
adc
movsl
fimuls
xchg
fiadds
push
mov
arpl
das
aaa
xchg
aaa
mov
mov
mov
in
add
bound
cmp
and
loopne
jecxz
fcoml
hlt
cmpb
sbb
sbb
ret
jle
test
mov
loopne
das
adc
sbb
cld
dec
or
jnp
xchg
dec
in
sub
sahf
mov
fcom
sub
aam
xor
daa
testl
and
push
jmp
out
add
cld
inc
in
pop
dec
xchg
jne
test
xchg
lret
sti
inc
cli
sti
inc
int3
mov
gs
out
and
add
mov
dec
push
adc
add
int3
shlb
stc
and
dec
mov
pop
in
out
xor
push
xchg
cld
or
stos
dec
test
test
lahf
dec
adc
insb
mov
ret
jbe
cwtl
imulb
xchg
dec
inc
jb
lods
fwait
inc
inc
xor
or
jae
mov
popf
pushf
sbb
addr16
mov
cmp
pop
lods
cld
xchg
inc
mov
jns
leave
mov
push
jnp
popa
add
or
leave
jbe
rcrb
arpl
scas
dec
ja
or
rolb
inc
mov
push
fwait
insl
lret
push
js
fiadds
sbb
lcall
leave
or
mov
sub
in
and
xor
and
jo
pop
dec
dec
push
cmp
sbb
cld
repnz
adc
mov
mov
push
out
fwait
push
mov
in
xlat
push
in
fsts
rol
mov
cmp
call
push
mov
pop
jb
insl
scas
fsubrl
push
inc
add
jae
mov
mov
pop
pop
int3
push
pop
mov
mov
ret
adc
imul
movb
out
addr16
mov
repz
cmp
inc
loope
mov
cwtl
adc
xchg
es
lock
dec
enter
xor
pop
and
stos
lahf
stos
mov
ds
pop
divb
imul
sbb
and
mov
inc
mov
rorb
sahf
movsb
sbb
jbe
push
iret
lods
jp
outsb
lret
imul
lcall
in
ds
out
or
jns
lea
mov
mov
adc
mov
xor
fistl
repz
jno
shll
pop
sub
test
imul
cltd
xor
ret
push
insl
int3
dec
lods
sahf
mov
leave
pop
push
movsl
push
in
int3
push
out
je
shll
add
es
fs
stc
sbb
mov
outsl
test
mov
jge
in
adc
shl
outsb
jmp
es
popf
sbb
dec
iret
nop
inc
es
lret
lret
cmp
adc
pusha
push
stos
outsb
mov
sub
jmp
pusha
push
loop
sbb
sbb
xor
daa
es
jne
mov
js
sbb
mov
subl
sarl
imull
out
add
pushf
popa
xchg
add
in
sti
gs
jge
pop
insl
adc
stc
fcmovb
push
and
sub
and
cmp
jg
ss
int3
dec
push
fistpl
xchg
clc
or
insb
out
dec
xor
jne
mov
xchg
cld
mov
clc
bound
mov
adc
out
jns
iret
int
imul
aam
jns
xchg
aaa
xchg
xlat
pop
fildl
cmp
jp
imul
push
aam
mov
lcall
pop
shl
loop
jmp
pop
pop
idivb
sub
jp
les
and
shld
lea
push
iret
fcomps
in
ret
cli
aad
or
fistpl
cltd
push
sub
cld
mov
jno
mov
jbe
jnp
cmp
mov
jno
hlt
xchg
push
cmp
les
pop
int
icebp
or
ja
loop
decl
mov
pusha
push
adc
loope
bound
sub
push
push
aam
jbe
cmp
adc
dec
imul
psubb
ja
push
sbb
cli
inc
pop
inc
loopne
xchg
jge
pop
cmp
adc
lret
pop
and
aad
adc
fs
into
mov
xchg
shl
pop
cltd
popa
sbb
out
shrl
push
xchg
sbb
inc
out
fbstp
xor
xchg
dec
inc
and
pop
aam
xchg
and
ja
cmc
dec
jnp
mov
sti
addr16
rclb
cmp
test
lret
adc
add
inc
scas
enter
orb
or
inc
rcr
sub
jno
mov
and
mov
imul
mov
push
cmp
scas
loop
sub
mov
add
adc
lcall
mov
imul
sbb
cwtl
add
imul
adc
repnz
iret
dec
movsl
or
push
xor
sahf
mov
cli
pop
sbb
in
sbb
cltd
inc
sub
mov
mov
fadd
pushl
inc
jmp
shlb
lret
push
push
xor
outsb
mov
and
push
mov
ret
jmp
out
imul
shll
pop
cmp
inc
dec
inc
roll
push
jb
cwtl
fimuls
sub
iret
into
adc
push
hlt
or
insb
push
xchg
lock
sub
and
xchg
jns,pt
mov
mov
dec
mov
dec
loope
adc
rcl
std
add
loope
dec
push
and
cmp
pop
xchg
in
xchg
sbb
imul
cmpsl
outsl
mov
push
inc
int3
lods
in
in
mov
lock
push
lock
push
or
pop
pop
fsubr
subl
imull
adc
xor
mov
cli
xor
jbe
pop
movsl
sub
stos
jmp
popf
nop
sub
jno
test
add
test
push
addr16
lea
pusha
sarl
int
daa
cmpb
in
jo
mov
ret
cmp
or
loope
adc
lods
ret
add
dec
sbb
es
cmp
adc
sbb
jae
jle
test
lahf
xor
rcll
imul
mov
cwtl
call
outsl
call
out
int3
xchg
mov
mov
sahf
jl
test
add
sbb
dec
dec
dec
pop
aaa
xor
das
shlb
sub
fmuls
adc
test
inc
int3
flds
into
sbbb
pop
mov
jg
fadds
arpl
stc
in
cmpl
xor
push
out
mov
dec
aaa
or
and
ret
pop
aaa
fcmovb
cmc
cld
xor
in
mov
mov
movsl
inc
mov
pop
ret
and
xchg
and
push
mov
mov
fsubrs
rcll
add
cmp
mov
aas
sbb
xchg
stos
sbb
or
push
lds
ljmp
filds
mov
xchg
imul
movl
fmull
int3
andl
jo
or
shr
loopne
in
out
dec
mov
add
dec
push
shrb
mov
lods
shrb
mov
sbb
inc
jae
stos
rcrb
aas
insb
jns
xchg
lds
and
xchg
push
gs
mov
int3
jns
fmull
xchg
roll
fcomp
cld
pushf
les
in
adc
jl
fwait
and
scas
jbe
cmp
xchg
sub
xchg
icebp
fwait
cs
inc
mov
xor
inc
jle
lret
orl
rclb
mov
out
pop
lcall
mov
stos
or
aas
repnz
xchg
ds
sti
imul
mov
in
xchg
loope
pusha
push
fbstp
mov
lods
int
icebp
inc
cmp
imul
cmp
pop
addr16
loop
cmp
push
rcr
xlat
std
push
xor
bound
out
in
dec
inc
jle
sti
ret
jb
icebp
xchg
bsf
enter
imul
jecxz
cmp
dec
lret
push
out
sub
xor
or
jbe
andb
dec
sub
movsb
mov
pop
and
push
test
mov
ljmp
jo
repnz
inc
cmp
add
cli
or
int3
mov
push
jnp
sbb
mov
xchg
pop
sub
popl
sbb
outsl
and
aaa
push
mov
jo
out
pop
inc
add
sarb
subb
dec
adc
pop
cmp
mov
xchg
pop
fdiv
sbb
sub
insb
ljmp
and
jbe
js
mov
int
loopne
pop
mov
push
movsb
mov
lahf
jns
insl
push
cltd
mov
ret
arpl
mov
mov
lahf
nop
xchg
jno
fisttpll
stc
or
iret
pop
pop
inc
cmpsl
xor
repnz
mov
stc
pop
push
mov
loope
das
es
flds
mov
add
pushf
mov
or
in
pop
xchg
mov
lock
arpl
jbe
lret
sub
sbb
mov
out
adc
xchg
clc
call
add
iret
inc
pushf
dec
ret
xchg
jno
push
pop
and
cli
xchg
fildll
stos
pop
adc
push
push
sub
add
mov
xchg
mov
jmp
mov
testl
dec
lahf
xor
jnp
mov
sbb
jno
xchg
jnp
xchg
lahf
mov
inc
xchg
xlat
sub
stos
push
cltd
into
rol
ja
cli
add
push
mov
out
rorb
or
mov
jnp
and
pop
xchg
insl
aam
sarb
xchg
out
pop
adc
cmp
jge
add
shlb
sbb
pop
mov
push
pushf
das
shll
aad
cs
outsb
push
aas
inc
inc
lods
out
and
mov
cwtl
cmpsl
add
dec
xor
ja
jecxz
pop
cmp
add
pop
sti
fwait
call
daa
sub
popf
sahf
jbe
adc
cmp
int3
lret
popa
jmp
or
xchg
in
xchg
pop
pop
inc
dec
pop
into
mov
jg
jmp
jecxz
dec
xchg
mov
aaa
and
xchg
push
sbb
mov
daa
lock
aad
test
into
xchg
or
pop
sbb
sub
repnz
cmp
push
scas
xchg
pop
cmpsb
cmp
pop
mov
mov
mov
out
int3
shll
je
adc
out
ret
xor
stos
dec
in
xorl
xchg
ret
xchg
movsb
xchg
ja
mov
insb
xchg
pop
icebp
inc
dec
and
jae
outsb
lahf
arpl
aad
ja
xchg
jmp
mov
popf
xchg
adc
cmp
testb
scas
dec
mov
inc
add
fwait
ret
jne
dec
adc
scas
loopne
mov
jne
in
push
scas
mov
inc
xchg
hlt
or
movsl
mov
or
aas
les
aas
mov
lods
notl
jmp
pop
orb
imul
iret
scas
mov
imul
addr16
adc
lods
ljmp
ljmp
push
stc
add
shr
push
ljmp
fidivrs
lds
shll
mov
popf
jo
aaa
inc
cltd
cs
loop
fadds
push
sub
jge
aam
notb
in
add
mov
inc
ds
pop
pop
jae
adc
push
enter
movsl
push
pop
sub
cmp
ja
arpl
and
loopne
mov
outsl
mov
std
fdivs
addr16
loopne
mov
cmp
mov
ss
lcall
ficoms
jnp
and
jg
inc
int3
in
in
push
pop
call
leave
dec
xchg
js
mov
mov
xchg
in
push
adc
pop
dec
pop
and
repz
insb
push
xor
add
adc
cmc
push
jle
inc
pop
dec
movsl
test
jl
rolb
cmp
xor
test
pop
in
mov
pusha
aam
cmp
inc
inc
inc
loop
mov
xchg
push
mov
push
popa
or
sbb
ss
outsb
mov
mov
mov
jne
les
popa
scas
mov
dec
inc
pop
dec
inc
jl
jge
push
dec
inc
cmpb
clc
outsl
ret
sub
test
sbb
inc
cmp
outsb
xor
test
jb
in
xlat
fisttpl
out
pop
packsswb
test
push
cld
inc
and
ret
push
int
pop
jge
push
add
call
mov
imull
js
sbb
orb
dec
inc
cmp
negl
mov
test
iret
mov
stos
sbb
ret
enter
xor
cld
fs
repnz
adc
sub
xor
imul
xchg
hlt
rcl
xchg
das
aam
sahf
inc
daa
pop
xchg
or
scas
dec
sub
push
add
and
sub
push
mov
mov
jle
push
gs
cmpl
cmp
jmp
mov
test
leave
xor
sub
nop
mov
enter
adc
fidivs
les
ja
jmp
xlat
imul
jg
ret
dec
test
push
js
dec
pushl
jbe
fwait
push
xchg
imul
ret
push
xchg
mov
aas
xchg
jae
rcl
in
push
mov
inc
push
and
add
mov
clc
mov
rcr
sbb
mov
fisubl
mov
push
mov
dec
iret
lock
ss
jge
sub
dec
pop
xor
iret
loop
dec
mov
shll
out
inc
ljmp
fdivrs
popf
mov
xchg
pusha
jmp
movsw
icebp
push
push
rcrl
cmp
loope
movb
jbe
data16
cmp
std
dec
cmpsb
vpsubsw
push
jecxz
mov
fwait
push
and
xchg
cmp
clc
enter
lea
mov
or
lods
dec
add
cmp
sbb
push
cs
jne
cmpsb
jl
mov
dec
stc
aaa
jecxz
cmpsl
jns
jno
hlt
mov
and
sbb
lds
push
fwait
xchg
jle
add
mov
je
mov
ljmp
ror
lods
rolb
xor
imul
enter
gs
add
fs
add
in
xchg
mov
mov
xchg
es
outsb
mov
sub
inc
xchg
das
cmp
and
out
sub
adc
adc
aaa
sbb
or
enter
add
xchg
decb
outsb
outsl
test
xchg
add
clc
das
push
cltd
mov
cmp
cltd
xchg
mov
xchg
adc
jp
mov
frstor
cmp
inc
test
mov
cwtl
outsl
mov
mov
cmp
sub
pop
iret
divl
shlb
sbb
lret
mov
testb
std
jbe
mov
jno
mov
add
xlat
popa
jbe
divb
insl
xchg
push
cmp
mov
leave
mov
mov
jmp
aaa
fildll
xchg
jmp
add
cmpsb
mov
jl
adc
inc
xchg
scas
push
loopne
jp
push
insl
mov
cmp
jp
fmuls
adc
dec
sahf
cmp
mov
sbb
mov
sahf
imul
aas
aam
ret
stc
jecxz
ljmp
add
faddl
jbe
add
add
outsl
mov
push
push
shl
outsb
pop
push
jp
adc
sbb
and
je
leave
push
push
push
scas
jge
xor
adc
fimull
jno
je
push
xor
xchg
cmp
sbb
xor
lret
push
test
mov
addb
push
jp
adc
test
icebp
push
push
inc
pop
jb
popf
mov
incl
mov
lock
mov
repz
sub
cmp
mov
ds
and
xchg
aaa
fisttps
mov
ret
xlat
jge
nop
mov
or
mov
out
xlat
test
push
icebp
outsb
push
stos
dec
addr16
adc
rcll
fbld
cld
bound
out
or
fs
loopne
jae
fcoml
mov
sbb
add
leave
adc
push
or
sub
adc
jne
test
shr
mov
xor
js
add
popf
fcomip
dec
mov
mov
add
mov
ljmp
or
dec
hlt
daa
ljmp
lods
not
xchg
orb
aaa
add
mov
arpl
cwtl
sbb
movl
jae
xchg
lods
mov
inc
inc
dec
nop
inc
or
aaa
fwait
addb
dec
pop
shll
pop
arpl
push
cmp
enter
lock
and
and
jb
jecxz
sub
adc
adcl
loopne
sub
lret
and
jae
sbb
xchg
lret
cmc
dec
mov
push
xchg
xchg
inc
movsb
mov
mov
push
and
inc
popa
push
xchg
dec
xchg
lods
cmpsl
js
in
jl
and
int3
push
repz
rcrl
adc
scas
scas
pop
rep
dec
push
and
inc
jnp
lret
int3
push
sbb
jo
xchg
mov
andb
dec
mov
inc
xor
daa
insb
mov
mov
jg
mov
movsl
cmp
sbb
and
xlat
mov
mov
jo
insl
fcompl
and
out
cwtl
loop
or
sub
xchg
xchg
xchg
repnz
or
cmpsl
ja
jg
rcrl
inc
cltd
push
in
pop
cmp
jno
push
add
or
jbe
dec
jnp
sahf
adc
push
ljmp
jbe
clc
loop
pop
rorl
idivl
mov
adc
rol
popa
or
testb
inc
subb
cmpb
sub
adc
das
sub
sub
inc
inc
scas
mov
rcrb
and
lods
sahf
push
adc
add
in
dec
aas
jbe
clc
in
dec
push
lods
lods
loop
ljmp
mov
mov
fbld
dec
loopne
push
in
dec
cli
and
iret
ljmp
and
or
call
fbld
daa
cmp
in
mov
sbb
sbb
inc
repz
xor
in
fs
ss
shrb
lock
inc
test
adc
xor
jg
enter
and
mov
add
mov
lahf
xchg
ljmp
xor
cmpl
je
mov
mov
inc
jmp
imul
sahf
sbb
das
test
lret
outsb
cltd
mov
enter
movsl
jge
pop
pop
imul
call
fs
jbe
clc
test
cmp
sub
ss
sub
sub
push
adc
sbb
pop
jbe
and
and
or
sub
pop
cmppd
je
sub
cmpsb
xchg
xor
push
js
cmc
jmp
arpl
or
adc
div
cmp
fld
cmp
shlb
stos
adcb
dec
sub
inc
jbe
lock
popf
sub
mov
xor
fxam
shll
movsb
es
out
insl
cmpsb
stos
or
sbb
stc
jnp
mov
add
pushw
icebp
cltd
adc
mov
ljmp
or
lods
stos
fidivs
shll
pop
dec
mov
mov
popf
and
xor
ss
out
pop
push
js
shll
dec
push
ds
dec
jns
mov
push
xchg
cmp
dec
sarl
xchg
jp
xor
test
and
sbbl
aaa
imul
dec
push
insb
mull
testl
pop
push
ficomps
fwait
cmp
sbb
movb
mov
int
jo
int
and
mov
and
xchg
mov
xor
scas
lret
mov
dec
les
into
jmp
push
fisttpll
push
and
add
inc
push
or
cmc
sbb
and
jns
mov
push
test
rcl
jno
int
leave
jae
pop
pop
xchg
mov
jo
shll
adc
std
sbb
sbb
das
add
rolb
outsb
shrl
jno
mov
stc
hlt
jg
inc
in
or
aam
cmp
stc
jbe
ret
rcll
inc
repz
mov
dec
lds
push
pop
mov
sub
xchg
rolb
enter
or
jnp
rorb
or
scas
push
outsl
or
jge
in
push
in
int
clc
popa
adc
push
js
xor
bound
lds
adc
pop
in
sbb
and
loopne
or
mov
mov
mov
xchg
pop
xor
jge
rol
mov
sub
aaa
cmp
xor
pop
jle
sub
cwtl
lock
xchg
call
ret
bound
mov
push
dec
push
gs
cmp
adc
int3
jo
lret
mov
fs
jle
ss
jmp
add
repz
icebp
fimull
push
loope
jmp
xrelease
ret
sub
bound
push
or
mov
sbb
xchg
cs
fadd
pop
pop
popa
adc
or
repz
stos
sub
push
call
xchg
xchg
mov
int
xchg
adc
js
mov
aad
out
or
jb
enter
in
jmp
push
jmp
sub
lret
dec
addr16
sub
icebp
push
pop
popf
das
jp
mov
rorb
jp
cmpsb
jecxz
sahf
arpl
push
add
cli
dec
or
cmp
xor
mov
data16
jge
hlt
dec
mov
rolb
xchg
ljmp
fmulp
pop
stos
ror
push
inc
scas
test
movb
enter
fwait
imul
out
mov
outsb
dec
cmpsl
rorb
inc
into
arpl
lods
popl
cmpl
sbb
add
repz
mov
cs
inc
orb
jp
call
adcl
sahf
repz
lods
cld
sar
xchg
nop
mov
sti
stos
fistl
leave
adc
test
sub
mov
clc
push
cmp
int
aas
pop
dec
sbb
in
jp
mov
cmp
sbb
cmp
adc
mov
jnp
mov
adc
inc
sbb
adc
cli
jae
pushf
mov
cmp
testb
ret
sub
test
aad
or
nop
leave
and
push
dec
mov
insb
lcall
sub
dec
sub
cmpb
sbb
cwtl
mov
in
and
addl
jno
in
xor
jg
and
mov
adc
sbb
push
add
lcall
push
dec
in
imul
jb
sbb
jmp
es
jb
adc
mov
cmpsb
mov
mov
in
jp
test
fs
mov
aas
jmp
mov
shl
test
adc
test
jno
enter
fcmovb
xor
xchg
or
xor
testl
push
or
inc
arpl
jg
lret
addr16
imulb
or
sahf
push
ds
cmp
es
gs
xlat
ljmp
adc
shll
cld
outsl
movsb
lea
pop
cltd
loope
lret
call
pop
push
movsl
cmp
cmp
scas
imul
add
shlb
mov
push
push
popa
dec
jne
sub
pop
jne
iret
and
ror
mov
out
jb
inc
push
inc
xchg
xchg
jg
mov
jo
enter
aam
or
cmpsb
xorl
sti
stos
lret
aam
mov
jle
lcall
ds
jns
adc
repz
mov
pop
xor
in
push
push
mov
mov
xor
in
loop
mull
pop
ss
loop
rcll
sbb
sub
or
jmp
or
lods
add
jl
loope
pop
fwait
pop
stos
xor
fsts
pop
adc
aad
dec
mov
jo
notb
sbb
les
lds
jmp
cmc
std
out
scas
cmpsl
mov
mov
push
mov
hlt
ficomps
pop
mov
fs
leave
push
jp
add
and
add
adc
in
js
stos
addr16
cld
adc
inc
ret
dec
jl
lock
mov
in
jne
xor
cmp
mov
repz
pop
sti
mov
aaa
in
cltd
xchg
push
jecxz
sub
lea
test
inc
xor
test
aam
enter
mov
add
push
out
xor
enter
xchg
pop
shlb
popa
into
cmpsb
lods
jle
test
loopne
xlat
mov
repz
cmp
inc
clc
test
pop
lret
sub
xor
lret
dec
insb
cmp
in
inc
cli
add
mov
pop
dec
inc
cli
xor
data16
fstp
inc
mov
ja
cmp
mov
ljmp
gs
dec
loopne
jne
lret
cmp
inc
xchg
xchg
sbb
cmp
xchg
push
push
loope
ss
push
mov
js
in
cmpsb
xchg
jb
cmpsl
xor
mov
hlt
pop
sbb
mov
popf
mov
xor
mov
sar
pushf
cltd
mov
and
scas
inc
add
js
in
js
and
dec
fbstp
xchg
jae
stos
push
test
fwait
enter
sub
sbb
mov
imul
les
xor
fcompl
pop
or
test
mov
loope
inc
mulb
mov
xchg
pop
loop
les
push
gs
cmp
adc
dec
dec
push
test
mov
sahf
fsubr
jbe
jmp
sub
push
popf
scas
xchg
jno
sub
mov
sub
xor
imul
xchg
pop
dec
pop
int3
rorl
push
and
jl
xchg
outsb
jp
cmp
stos
jns
fnstcw
mov
data16
jmp
xor
inc
mov
lret
mov
pop
daa
rcrb
cld
jns
in
jge
cmpsb
push
xchg
push
fisubrs
mov
test
sti
cwtl
add
cmpl
cltd
ljmp
push
fwait
dec
lahf
cmp
adc
imul
repz
das
and
aad
xchg
ljmp
mov
mov
popa
ds
cmc
test
pop
std
std
pushf
adc
repz
sbb
sub
movsl
test
inc
xor
stc
mov
dec
push
scas
mov
stc
ret
jae
scas
cmp
xchg
inc
cmp
jae
lret
pop
sub
mov
push
inc
xchg
cwtl
mov
fsubp
push
mov
adc
cld
jl
mov
testl
push
sahf
movsl
sub
jle
push
lcall
aas
jg
xchg
cmp
or
bound
int3
sbb
xchg
xchg
pop
jg
ret
mov
or
outsb
fildl
cmp
pop
inc
mov
or
jp
outsb
mov
jne
out
dec
cld
jns
pushf
mov
mov
dec
adc
push
stos
jae
jae
mov
adc
or
sbb
add
xchg
in
popa
sub
loop
push
adc
int3
dec
add
jl
sub
jle
sub
negl
fsin
lock
clc
add
xchg
lock
test
jnp
xor
inc
xchg
mov
inc
stos
dec
mov
cmpsl
lods
les
jo
test
jbe
push
ficompl
fld
sbb
outsb
in
mov
mov
ss
in
mov
js
push
jle
std
xorb
fcmovb
sbb
and
in
inc
mov
xchg
das
jo
mov
adc
lret
pop
rcl
into
xor
push
arpl
mov
movsl
push
push
lret
push
mov
fisttpll
inc
lods
mov
jle
call
cmp
cld
push
nop
inc
pop
popl
xchg
out
pop
js
lods
loope
call
jmp
mov
pop
arpl
jmp
inc
cmp
rolb
push
jg
cmp
ds
xchg
jp
inc
inc
fxch
mov
and
push
int
mov
or
cmp
rclb
push
and
adc
xchg
sbb
imul
push
sbb
lock
insb
mov
out
jp
imul
mov
lea
mov
out
ret
push
test
int
add
mov
pop
or
mov
sub
mov
pushf
inc
lea
adc
cli
jmp
adc
mov
xor
ret
push
cmc
stos
lds
mov
cmp
sub
adc
push
pop
sub
pop
push
jmp
cltd
mov
pop
aam
loop
add
inc
sbb
stos
lods
jp
loop
lret
pop
aaa
mov
inc
int3
mov
sub
push
and
adc
and
or
xchg
ficoms
das
rolb
xchg
ds
pop
pop
mov
pop
dec
sti
inc
and
adc
out
push
pop
push
jge
sbb
sbb
xchg
daa
mov
lds
in
fsubl
ja
les
imul
cmp
jne
shrb
lds
out
and
repz
pushf
repz
adc
add
imul
and
xchg
push
dec
repnz
dec
insl
repnz
mov
xchg
or
stc
cmp
or
sbb
mov
jne
lea
inc
dec
jbe
cmpsb
bound
aam
data16
dec
movsl
repnz
xorl
xor
cmp
fadds
adc
insb
das
call
sti
mov
xchg
push
es
mov
jae
hlt
outsb
sahf
int
push
jl
out
sbb
aas
fs
xchg
pop
cld
mov
push
es
aad
lret
popf
test
adc
mov
sbb
mov
test
adc
loop
insb
sub
clc
inc
mov
add
or
ret
xchg
jb
and
jne
outsl
inc
or
inc
fnstsw
out
mov
fwait
cmp
sbb
jmp
std
push
inc
jnp
clc
lds
sahf
js
mov
pusha
in
cld
mov
mov
cli
push
out
test
mov
lret
push
xorb
xlat
mov
lret
mov
sbb
xchg
arpl
mov
es
mov
sbb
cmp
adc
movsb
mov
and
inc
mov
mov
jo
push
in
mov
xchg
out
push
iret
xor
inc
mov
cmp
xchg
mov
test
push
test
cmpsl
push
xchg
stos
jb
jl
les
xchg
gs
jg
mov
and
sub
inc
or
adc
movsb
rorb
push
js
push
jno
stos
sub
xlat
push
and
test
push
or
jmp
jecxz
xchg
int
xchg
inc
insl
lds
sbb
jae
mov
pop
pop
or
imul
insb
push
stos
icebp
pop
and
pop
mov
sbb
mov
shlb
or
xor
adc
pop
xchg
jo
in
arpl
mov
mov
sti
cmpsl
push
dec
xor
das
fistps
enter
shlb
push
push
cwtl
sbb
repnz
sbb
adc
jmp
dec
lock
jae
cmp
push
mov
inc
mov
lea
lock
shrl
popl
adc
push
mov
leave
lret
xchg
roll
lods
xchg
sahf
into
lea
lcall
mov
dec
mov
and
cwtl
adc
adcl
test
sbb
fdivrs
mov
divb
add
jmp
cld
jae
xchg
bound
in
out
push
stc
das
neg
ljmp
xor
push
mov
popl
lret
addb
inc
inc
test
idiv
js
lahf
jne
adc
scas
fcom
into
fsubs
in
lret
jne
jae
and
leave
loope
push
stos
adc
nop
cmpsl
sub
mov
push
test
lea
lods
fstps
xchg
mov
into
fistpl
push
cmp
push
in
fdivrs
push
jae
cmp
gs
or
insb
mov
sti
adc
lret
enter
cwtl
add
pushf
sbb
jge
cmp
dec
push
mov
and
mov
jo
add
mov
xchg
xchg
adc
mov
xchg
aam
popa
lods
fnstsw
jno
sti
cmpsl
repz
mov
jno
sub
call
repz
lods
lea
jbe
mov
mov
out
loope
in
nop
ret
insb
pop
fisubrl
je
movsl
sub
push
jnp
pusha
ds
inc
enter
pop
arpl
sbb
dec
addr16
push
daa
adc
jmp
clc
test
lahf
popa
pop
sbb
jb
and
push
dec
bound
aam
outsb
out
mov
push
insl
pop
out
push
mov
pop
sti
ret
jbe
pop
rcll
dec
daa
inc
push
pop
lea
stos
or
pop
xchg
popa
mov
mov
cmp
decb
push
jg
fcomps
std
push
hlt
or
push
xchg
popa
dec
push
xchg
repnz
mov
clc
cmp
mov
lret
out
mov
inc
push
sbb
fisttpl
lods
sahf
mov
mov
testl
jbe
lcall
test
jg
lea
lcall
jg
stc
inc
out
aad
pop
xchg
mov
cmp
xchg
das
mov
js
inc
adc
adc
pop
adc
scas
adc
stc
mov
ret
stc
fstps
mov
inc
fisubl
lds
stos
push
fistpll
pop
test
push
mov
pop
pop
and
outsl
insb
cltd
sbb
mov
scas
cmp
jne
xchg
je
mov
loop
mov
fldenv
cmp
es
xor
fistps
ljmp
fwait
mov
pop
sti
cmpl
cmp
pop
jbe
xchg
ret
stc
idiv
jg
xorl
and
stc
pop
jecxz
jae
ds
dec
sub
rclb
daa
mov
cs
mov
mov
pushf
test
repnz
mov
out
and
scas
mov
inc
mulb
nop
outsb
enter
mov
push
ret
dec
push
cld
fsts
imul
fisttpl
fwait
stc
in
sub
stos
fstps
mov
shll
movsl
loop
sub
sbb
pop
or
mov
jle
notl
xor
mulb
pop
xchg
mov
cmp
mov
divb
push
pop
add
dec
mov
jl
cmc
and
sub
push
pop
jo
lock
dec
and
iret
and
or
insl
sahf
mov
adc
cmp
jnp
sar
les
aas
and
aad
cwtl
xchg
mov
adc
cld
test
cltd
pop
pop
inc
xchg
jge
push
mov
sub
adc
push
stos
cmpsl
adc
mov
orl
imul
fwait
jp
pop
imulb
or
and
mov
jbe
arpl
cmp
adc
cmp
fldt
fisubrs
lcall
scas
cmpsl
jg
mov
pop
xor
xor
mov
shll
in
xor
insl
dec
aaa
xchg
dec
aam
or
pop
lods
mov
jmp
inc
sbb
jb
cmc
push
push
std
adc
test
mov
pop
jne
adc
jbe
cmp
out
ja
mov
shrl
ret
loopne
in
cmp
leave
or
xchg
fucomip
rcrb
push
pop
add
add
mov
bound
xchg
scas
int
pushf
mov
sub
inc
sets
mov
test
imul
push
sbb
cs
inc
std
inc
cmp
cmp
cmp
jae
in
jmp
sbb
loope
push
mov
fs
iret
jnp
addr16
xchg
cmpsb
mov
das
out
pushf
and
mov
andb
jns
out
scas
cmp
pop
shrl
and
add
outsl
stos
arpl
insl
outsb
xor
lret
pushf
push
jmp
mov
push
fs
push
pop
and
test
push
movsb
js
xchg
jge
rorb
lock
loopne
inc
dec
pop
insb
shlb
loop
push
cmp
fcoms
xchg
ret
inc
outsb
pop
aad
dec
cmpl
aas
push
out
repnz
fwait
mov
inc
push
es
sbb
sbb
hlt
pop
mov
out
aaa
cltd
cs
lds
fsubr
fiaddl
jns
inc
jb
mov
adc
push
fnstenv
test
push
jbe
sub
push
dec
add
jno
mov
jecxz
movsl
add
outsl
shlb
push
stos
adc
out
push
jmp
sub
lock
cmp
iret
dec
out
cmp
setne
loope
push
ljmp
loop
push
cmpsb
cld
cs
clc
ds
pop
push
jno
and
adc
mov
frstor
jns
push
mov
call
inc
inc
pop
ret
ljmp
cmp
daa
aas
or
pushf
lods
mov
stc
les
mov
or
dec
outsb
jae
xchg
es
cltd
dec
jle
jae
popa
or
and
xchg
lods
stos
loope
and
xchg
sbb
fidivrs
and
dec
pop
fsubl
incl
adc
popa
iret
xchg
movsb
pop
fidivl
ja
adc
cli
dec
movsb
cmc
sub
rcll
inc
push
adc
int3
lea
scas
sbb
xchg
pop
pusha
mov
add
inc
mov
add
mov
jns
mov
pop
adc
push
sti
sub
scas
push
or
push
out
xlat
cld
outsb
xchg
outsl
mov
fwait
jae
adc
ret
xchg
lea
mov
mov
out
and
xchg
xchg
sbbb
jecxz
sub
push
popf
adc
inc
popf
rcrb
mov
hlt
mov
fs
in
jbe
movb
jb
push
push
imul
addr16
daa
rclb
mov
sti
dec
adc
pushf
outsl
push
mov
vshufps
imul
stos
pop
jne
or
xchg
mov
pop
sub
add
lods
mov
cld
push
ret
mov
xor
mov
mov
xchg
xor
mov
mov
jbe
pop
mov
frstor
push
xorl
or
xor
test
ljmp
flds
stos
push
jb
das
or
loop
out
imul
dec
jae
loopne
mov
inc
push
mov
cwtl
sarl
faddl
add
xchg
pusha
xchg
adc
push
lahf
popf
es
outsb
testb
cwtl
daa
shr
jae
lea
rcr
or
repnz
sub
cmp
sbb
stos
arpl
or
and
mov
mov
xor
fldenv
out
add
test
fcomi
jno
mov
test
lahf
lea
es
dec
jp
adc
cmp
iret
sbb
add
das
lods
es
jmp
scas
inc
fs
imul
dec
pusha
rcrl
push
or
test
aas
adc
xorl
mov
jb
xor
jp
dec
scas
pop
jo
pusha
or
addr16
cmp
lock
dec
inc
adc
dec
jbe
dec
mov
jge
mov
xor
add
arpl
pop
jno
rep
fsubrs
arpl
pushf
jle
out
inc
xlat
inc
decb
inc
adc
push
cmp
out
mov
sti
add
mov
sub
and
push
add
pushf
mov
in
xor
movsb
fs
lods
loope
mov
adc
pushf
ss
mov
addr16
lret
jns
lods
das
push
and
add
xchg
arpl
cmpsb
arpl
out
dec
je
fnstenv
imul
xor
in
pop
cmp
inc
push
hlt
into
mov
jbe
rcrl
pop
out
xchg
sub
mov
lahf
pop
shlb
push
jg
sub
jbe
negb
add
push
and
jne
das
ficompl
ficomps
dec
sbb
cmp
sbb
movsl
cmc
lret
inc
dec
add
inc
imul
in
pop
xchg
xor
dec
std
xchg
mov
enter
sub
add
es
and
int3
jne,pn
iret
leave
test
xchg
jns
jae
xchg
sub
out
in
sub
mov
add
mov
push
adcl
and
cld
inc
mov
adcb
xchg
pop
jno
or
jnp
js
fbld
mov
pushf
mov
mov
inc
lret
push
inc
push
les
jmp
andb
adcl
dec
out
xabort
inc
fistpll
inc
aaa
dec
iret
pop
pop
and
les
jg
cmp
addr16
mov
xlat
adc
out
inc
sub
sbb
jmp
mov
movsl
push
ljmp
and
push
fdivl
stos
shlb
sbb
xor
outsl
pextrw
mov
add
and
push
shll
jmp
lahf
or
outsl
xchg
jne
data16
into
push
sbbl
pop
cltd
es
adc
popf
jmp
adc
pusha
push
jmp
cmpsl
imul
aad
arpl
aad
imul
jle
aad
sbb
ret
mov
mov
or
cmp
and
inc
fdiv
cmp
repz
inc
mov
fiadds
push
pop
xchg
mov
dec
push
data16
cs
pop
out
or
lahf
lods
repz
mov
enter
push
leave
adc
imul
loopne
add
sbb
cmc
call
mul
xlat
add
fdivrl
out
in
enter
pusha
dec
in
jle
inc
push
mov
push
mov
push
into
in
hlt
sub
push
mov
push
outsl
add
mov
adc
pop
cli
icebp
mov
adc
aas
push
stos
test
jns
jmp
ret
scas
loope
iret
mov
fcmovb
xchg
sti
cwtl
addb
adc
adc
fidivl
or
mov
pop
mov
imul
adc
xchg
cmp
xchg
cmc
mov
sub
jbe
std
push
push
inc
ja
xchg
in
adc
loopne
aam
push
in
pop
xchg
jae
push
popf
xchg
insl
mov
or
adc
rcrb
mov
repnz
lahf
and
sbb
dec
pop
jbe
jge
scas
jmp
jns
dec
push
lea
test
es
sub
sub
and
dec
icebp
push
push
jo
push
test
in
jp
or
push
and
sti
sbb
lahf
xlat
sub
jb
mov
fstps
adc
decl
ljmp
shlb
sub
ret
sbb
lock
mov
pop
sbb
hlt
xchg
sbb
scas
mov
and
ja
movsl
mov
ds
sti
mov
clc
fcmovbe
pop
addb
ret
clc
xor
pusha
cltd
dec
loopne
mov
jle
sub
into
adc
sub
arpl
xchg
and
je
arpl
pop
in
js
cld
mov
insb
lds
mov
sub
push
idivb
mov
cli
jg
jbe
sbb
clc
movsl
pop
pushf
addr16
jmp
mov
mov
lcall
push
lods
mov
push
in
scas
sbb
pop
mov
and
fldenv
movsb
sub
imul
stos
int
in
int
out
in
cli
add
jl
mov
lock
xchg
leave
sbb
fucom
and
mov
sbb
push
and
push
push
les
aas
mov
movsb
andl
or
sub
ljmp
mov
mov
sbb
int3
sahf
les
cmpsl
aaa
push
sarl
pop
push
leave
test
stos
cmc
push
push
ret
ljmp
shrb
cltd
imul
mov
lods
and
shrb
jnp
stc
jbe
cmp
lret
xchg
mov
jp
mov
fdivrl
gs
lret
jb
and
je
insl
jle
or
in
jns
test
xor
mov
dec
xchg
leave
mov
push
xchg
or
push
gs
fsub
aaa
push
stos
lods
mov
adc
mov
adc
cmp
neg
and
test
xabort
incb
and
mov
mov
clc
cmpsb
stc
out
cmpsl
ret
rclb
imul
pop
or
jg
leave
push
cmp
jb
jg
movsb
jb
lods
push
aam
lods
testb
xchg
loopne
hlt
aas
or
pop
fimuls
rclb
dec
dec
adc
or
inc
push
inc
xchg
shrl
sti
jmp
xor
sub
dec
repnz
pop
push
pop
lcall
sub
add
xor
adcl
inc
rcrb
xchg
dec
pop
jecxz
aam
movsl
call
lahf
lret
ljmp
lock
and
out
sbb
mov
mov
jno
and
bound
in
or
mov
cmp
das
aad
mull
cwtl
iret
sub
mov
jno
inc
mov
ret
imul
jb
xchg
hlt
add
or
scas
adc
sahf
loop
fs
aam
scas
dec
scas
and
ficomps
ja
movsl
pop
mov
cmp
or
dec
aas
ret
je
cmp
test
push
arpl
out
xchg
mov
mov
cmpsb
xor
popa
inc
nop
sbb
pop
mov
sub
mov
and
sub
popa
stc
or
and
inc
inc
vcomiss
mov
or
dec
shlb
nop
scas
inc
or
mov
cmpsl
push
push
sbb
and
lret
cmp
xchg
mov
mov
int3
xchg
xchg
out
and
push
mov
loop
cld
mov
call
mov
jl
rorl
pop
push
stos
mov
pop
add
mov
mov
fnstenv
pop
or
aam
stos
fwait
pop
add
xchg
jmp
jge
je
adc
mov
fs
mov
adc
mov
cld
les
jg
rolb
repnz
inc
cmc
sar
mov
dec
inc
xchg
ffree
sub
cmp
fwait
jb
pop
or
je
dec
mov
inc
cmp
jns
cmpsb
in
es
into
insl
test
stos
xchg
or
psubsw
sub
push
fidivs
call
push
and
test
mov
ficoml
mov
pusha
push
pushf
outsl
rcll
jbe
xor
push
fidivrs
fs
imul
pop
push
popf
lea
pushl
lods
mov
jae
outsb
xor
adc
popa
inc
dec
fwait
push
xor
jecxz
mov
mov
xlat
fs
es
outsb
mov
aas
jae
push
out
sub
sbb
cmp
das
jbe
mov
push
out
adc
out
push
clc
scas
test
inc
mov
mov
shl
sbb
jne
and
push
cmp
dec
hlt
shll
repnz
rcrl
mov
add
mov
mov
xlat
ja
pop
or
cmp
push
sub
es
imul
stos
mov
jmp
into
mov
shll
insl
adc
and
test
dec
cmp
test
sti
in
dec
and
jp
pop
cmp
mov
mov
leave
xchg
frstor
cs
repnz
jne
jl
cmpsl
les
hlt
jo
push
pop
jecxz
cmp
and
and
push
imul
shlb
sti
jle
cmp
and
jle
mov
cli
popa
push
out
inc
pop
xor
xchg
roll
iret
cld
mul
or
idivl
jo
add
sub
ror
test
push
scas
lahf
insl
and
gs
lods
lods
adc
mov
fwait
sbb
push
in
cli
sbb
add
pextrw
mov
xor
jmp
mov
loope
or
mov
jl
sbb
dec
xchg
imul
inc
imul
pushf
popf
or
insl
leave
xchg
pop
xchg
call
xchg
and
lods
test
aam
or
add
push
stos
push
mov
and
test
ret
loop
les
adc
sbb
lods
loop
jbe
aad
cmovae
popa
jecxz
leave
jae
test
cmp
add
sbb
cmp
aad
mov
dec
ret
repz
mov
scas
mov
lds
lods
cli
jmp
sub
dec
fwait
jp
mov
xor
ds
inc
mov
jg
jmp
xchg
dec
je
pop
adc
adc
jg
sub
je
call
or
shrd
clc
dec
pop
ss
xchg
aaa
push
ficompl
stc
xor
xor
push
in
dec
cmp
fsubl
xor
stos
dec
aas
dec
xchg
mov
jae
fcompl
xlat
mov
xlat
dec
addr16
sbb
fwait
inc
loope
lret
sbb
xorb
pop
les
ret
mov
xchg
mov
popa
cli
xchg
out
mov
daa
jne
cmp
xor
adc
sub
mov
mov
pop
aam
inc
test
stos
jp
sub
rolb
movsl
dec
outsl
and
out
and
mov
stos
mov
into
ljmp
ficompl
movsb
inc
sub
mov
mov
mov
faddl
fs
nop
lods
lods
push
inc
clc
pop
bound
add
pop
sbb
xchg
xor
push
or
xchg
adc
popf
sbb
pop
jl
xchg
pop
jp
frstor
in
jae
out
pop
jne
pop
lock
adc
mov
jmp
xlat
and
rorb
push
out
or
cmpsl
add
rcl
dec
sbb
push
iret
jge
jl
jge
and
data16
in
fbld
jle
or
inc
sub
mov
popa
dec
mov
in
sbb
dec
es
mov
aam
push
ja
test
xchg
jne
mov
push
pop
lods
imul
xor
and
jbe
dec
xor
sti
cmpl
mov
push
add
and
add
add
jne
pop
jmp
addr16
add
pushf
sbb
mov
adc
jl
cmp
xchg
test
xor
and
pop
loope
pop
fldl
pop
sbb
cmp
aas
mov
cli
mov
mov
cmp
lock
std
mov
push
hlt
test
mov
cmpsb
sbb
out
xchg
fs
xchg
sub
pop
aaa
dec
pop
shr
popl
aad
filds
mov
jae
rcrb
jnp
lahf
and
mov
push
mov
in
pop
sub
loope
sbb
sbb
jmp
push
jl
inc
cs
jo
pop
jns
fdivs
arpl
xchg
mov
ret
scas
and
dec
xor
lret
rorl
scas
cli
jo
lock
add
or
fidivrl
or
lret
call
mov
jecxz
and
lods
adcl
mov
cmp
jl
int
xor
stc
icebp
lock
jle
scas
adc
and
cmpsl
fidivl
push
test
adc
movsb
cmp
cwtl
cltd
xchg
jecxz
pop
pop
test
pop
mov
scas
fcmovnbe
mov
pop
or
ficoms
mov
mov
mov
sbbb
sub
xor
jns
rcrl
js
dec
xlat
dec
xchg
xchg
fsubrp
repz
mov
inc
sbb
sbb
stos
mov
xchg
test
mov
in
and
ds
enter
push
call
push
adc
insb
push
test
xchg
xor
push
pop
push
scas
lods
fcom
shll
push
mov
cwtl
xchg
enter
gs
sbb
call
xlat
pop
mov
cmp
add
sbb
xchg
movq
sub
outsb
push
add
mov
bound
mov
out
pop
cmpsl
rclb
pop
in
aas
stos
dec
hlt
idivb
mov
or
in
fdivs
xchg
mov
stc
xchg
ds
mov
cmpsl
pop
cmp
mov
movsl
fildl
cmp
mov
add
ljmp
xor
dec
sub
das
adc
and
cmp
jl
rcrb
inc
mov
in
inc
movsb
dec
xchg
jne
mov
xchg
movsl
fs
and
inc
ljmp
cmc
shrb
and
adcb
inc
cmc
inc
adc
mov
fwait
xlat
in
lock
and
test
jae
pop
and
outsl
and
mov
addb
fnstcw
rorb
dec
divl
mov
cmp
pop
pop
mov
ja
xor
in
push
sahf
sbb
les
push
ret
xor
xor
add
push
and
add
and
sbb
aad
pop
sub
shll
movsl
sbbb
je
or
setl
jns
inc
adcb
lret
sti
repz
mov
mov
dec
aas
cmpsb
push
mov
adc
shlb
sahf
inc
jne
and
dec
dec
lret
test
add
pop
sbb
dec
loop
or
leave
gs
and
sub
or
dec
adcb
scas
ror
jnp
jbe,pt
ljmp
loopne
and
cmp
jp
in
into
mov
js
in
aam
fidivrs
mov
test
repz
sbb
mov
mov
pop
inc
inc
xor
call
sub
cmp
cmp
cs
mov
ret
sbb
leave
subl
out
xchg
add
adc
jl
sub
out
add
push
sar
mov
mov
aad
xchg
mov
jecxz
inc
inc
vmovups
ret
fstl
pop
cmp
popf
repnz
out
aaa
push
dec
cwtl
sahf
fs
scas
fildl
mov
fstl
mov
pop
in
icebp
mov
adc
dec
iret
das
mov
clc
or
or
push
mov
das
sub
pop
repnz
mov
sbb
ljmp
dec
mov
mov
enter
pop
mov
dec
popf
adcb
or
sbb
incb
scas
fwait
mov
mov
push
xorl
sub
jle
out
adc
ljmp
inc
daa
mov
stos
cwtl
push
sbb
sbb
dec
fsubrs
cmp
lods
mov
ja
leave
sar
mov
mov
mov
jecxz
cmp
mov
scas
add
shll
push
idivb
leave
push
popa
idivb
sbb
adc
movsl
push
dec
jge
scas
lret
or
bound
sub
cmp
sbb
adc
pusha
incb
jae
add
das
adc
jne
sbbl
mov
and
test
push
outsl
pop
aaa
sbb
dec
aas
fmuls
movsb
outsl
sbb
cmp
pop
add
xchg
popf
dec
in
adc
nop
cmpsb
subl
scas
aam
cmc
mov
nop
xchg
xlat
jae
mov
ficoms
adc
lods
mov
hlt
sti
cmpsl
adc
add
xor
xchg
insl
aas
pop
jo
shl
sbb
pop
jb
and
mov
cmp
sbb
push
ja
es
inc
movsb
xchg
insb
jmp
popf
adc
cmp
iret
aam
jge
mov
std
in
sbb
mov
inc
cmpsb
mov
jns
sbb
dec
mov
mov
or
ret
push
cmc
sub
dec
inc
xchg
les
xchg
shrb
movswl
insb
dec
pop
jecxz
add
cli
fsubs
enter
insl
lcall
cmp
jnp
xchg
sbb
cmp
fidivrs
push
leave
pop
pop
testl
test
mov
pop
sbb
cs
fmull
inc
rcr
dec
xor
cld
ud1
push
and
int3
add
or
mov
and
push
jge
push
fs
int3
shr
jle
shlb
mov
dec
mov
mov
jo
arpl
push
pop
dec
lahf
pop
fstpl
arpl
push
and
inc
mov
out
xchg
loop
xchg
cmc
cmp
adc
out
popf
adc
adc
pop
dec
ds
andl
pop
add
ret
mov
and
cwtl
lds
insl
js
movsl
in
jb
aam
jmp
shll
fs
scas
lock
fsubs
xor
arpl
mov
push
xor
push
repnz
rcll
mov
inc
outsb
adc
or
jge
scas
push
mov
fdivp
adc
gs
cmp
test
pushf
leave
inc
cmc
mov
popa
adc
test
lret
dec
out
xchg
dec
inc
mov
add
dec
fwait
loope
cmp
push
and
dec
ss
lcall
cmp
fs
out
shlb
xlat
xor
push
or
dec
jmp
or
iret
outsl
add
jne
mov
mov
les
or
mov
pop
les
mov
adc
lds
popa
xchg
dec
or
test
ss
adc
sbb
inc
jmp
mov
sbb
lahf
mov
nop
test
ficoms
cmp
icebp
inc
nop
loopne
lcallw
sbbb
or
loop
or
fsubs
push
or
nop
in
in
cmp
lahf
push
xchg
js
xor
movl
jnp
in
fdivrl
sarb
xchg
mov
mov
sarl
mov
testb
clc
mov
xorl
loopne
cmp
shll
cli
jo
push
sbb
fisttpll
jle
cmp
aad
out
jbe
xor
mov
push
or
orb
out
popa
cli
in
ja
out
lock
and
jecxz
filds
pop
ljmp
jmp
les
jecxz
stc
addb
cli
in
andb
sub
daa
lahf
adc
shrd
lret
shrl
push
mov
inc
push
pusha
jb
loop
adc
call
xorl
std
xchg
fnstsw
or
hlt
imul
pop
or
jne
sbb
and
nop
sub
es
push
mulb
jno
mov
dec
add
repz
fstl
pop
push
mov
in
add
jae
inc
cld
std
pushf
call
mov
jp
mov
jb
adc
inc
int
fdivs
dec
fiaddl
xchg
push
pop
mov
jne
loope
and
mov
data16
cmpsb
mov
outsb
xchg
popf
push
insb
lahf
cs
add
add
loope
in
movsb
mov
inc
xor
jo
jp
xlat
cmpsl
movsb
cmpb
mov
inc
cs
mov
jmp
and
lds
xor
jle
outsl
nop
ja
xchg
int
add
pop
ret
out
into
dec
flds
mov
ljmp
jmp
xchg
dec
jg
pop
pop
xchg
sti
push
sbb
push
ret
sbb
xchg
jecxz
mov
cmp
insl
or
lret
fnsetpm(287
sub
or
add
icebp
test
jno
jbe
and
mov
hlt
ret
pop
xchg
xchg
or
fistps
mov
lock
leave
shll
dec
mov
cmc
leave
or
jg
xchg
push
fs
sahf
data16
pop
pusha
mov
test
loopne
xor
loopne
sbb
jb
push
or
lahf
imul
xor
mov
mov
cmp
jl
adc
out
lock
xchg
xchg
enter
punpckldq
xchg
push
lea
mov
push
lcall
test
or
ficoms
inc
fstps
jb
insl
daa
jae
cmp
sbb
outsl
scas
hlt
push
pop
mov
mov
add
stos
cmc
cmp
cmpsl
inc
jne
stc
ds
jmp
inc
adc
push
jmp
aad
add
mov
cmpl
outsb
or
jb
jno
push
inc
xchg
xchg
jno
ds
xor
cmp
and
cltd
inc
flds
cmpb
jmp
orb
arpl
or
and
pusha
and
insb
inc
iret
int3
xchg
mov
imul
jno
xchg
inc
lock
jns
sbb
loopne
push
push
in
loope
push
xchg
or
outsb
int3
jnp
in
insl
loope
pop
subl
insb
rcr
adc
sub
repnz
addr16
lods
xlat
repnz
in
iret
or
push
add
cld
jno
dec
daa
loop
mov
pop
add
pop
insb
mov
pop
jg
dec
aaa
add
int3
sbb
ret
mov
mov
ret
sti
xchg
addb
call
mov
inc
outsb
inc
mov
ja
jne
cmp
fwait
cmpl
pop
mov
mov
jmp
popa
int
fs
mov
insb
pop
in
mov
cmp
push
xchg
enter
enter
sub
mov
cli
mov
sbb
push
dec
mov
fs
arpl
arpl
cmp
rcr
mov
ret
out
push
fldcw
jne
je
popf
xchg
js
inc
and
ljmp
mov
adc
fnstenv
sub
aad
mov
pop
mov
popa
not
xchg
cmp
int
rcl
dec
dec
dec
aam
scas
hlt
les
into
icebp
xchg
cmp
push
rorl
cwtl
popa
out
lods
jp
les
gs
push
dec
andl
imul
insl
and
int3
repnz
add
mov
push
into
push
ror
cs
out
pop
pop
lahf
xor
in
xchg
adc
sbb
inc
je
aad
lock
insb
mov
stc
das
lods
mov
fcompl
xor
adc
mov
mov
jae
mov
fisubrl
xor
outsb
dec
add
dec
and
in
outsl
mov
add
mov
test
lahf
in
push
cltd
xchg
inc
mov
xor
out
mov
push
cmp
adc
sub
shr
es
push
push
cmp
test
daa
int
movsb
lods
rcl
imulb
ficoms
in
pop
add
adc
ds
pop
sub
mov
and
andb
je
push
fsubrs
cli
push
arpl
lods
jl
mov
rol
dec
and
cmp
clc
cmp
ljmp
ror
sbb
xor
push
sub
das
or
es
xchg
jl
mov
mov
add
or
xor
popf
add
mov
sbbl
fadds
test
jp
cwtl
outsb
sub
bound
int3
or
lret
xlat
int3
dec
aaa
mov
enter
jmp
mov
cltd
les
adc
dec
cmp
jae
inc
out
mov
push
shll
scas
leave
test
and
shr
lds
cmpb
pop
inc
cwtl
cmp
mov
fistps
test
mov
lahf
lcall
dec
pop
cmp
fldenv
cwtl
xchg
imul
cmc
dec
inc
sbb
mov
sub
rcl
jnp
fcomps
inc
push
idivb
xor
push
adc
data16
sbb
cmpsl
les
inc
xchg
rcrb
testl
flds
lods
fistl
push
cli
enter
lock
xchg
pop
cli
mov
mov
add
test
or
or
xchg
jne
inc
mov
insl
addl
stos
add
xor
xor
dec
outsl
inc
leave
cmc
add
xor
test
pop
jle
sub
xchg
std
pusha
jno
or
repnz
int3
jle
push
cld
ss
out
sbb
adc
add
sbb
cs
inc
icebp
xchg
sbb
xor
add
jb
adc
or
aam
jge
cmpsl
inc
or
fwait
lcall
insb
rcll
lea
lea
out
jnp
shlb
xchg
mov
pop
jnp
adc
push
mov
std
push
push
data16
mov
sahf
clc
icebp
out
jecxz
movsb
cmp
pop
cmpsb
int
ss
mov
push
adc
dec
sbb
adc
lcall
jg
rorl
loop
or
adc
shrb
xor
sbb
mov
repnz
sbbb
ret
adc
adc
cmp
push
je
pop
or
out
out
out
fldl
xchg
mov
jmp
sbb
test
fdivs
and
aad
popa
negl
in
sarl
scas
addr16
call
jmp
and
and
xor
cmp
xor
fisubrs
xlat
mov
je
push
xorl
add
inc
cwtl
fcoml
mov
mov
repnz
outsb
js
test
pop
sahf
jecxz
mov
mov
pop
jo
adc
orl
sbb
dec
push
or
daa
gs
mov
mov
push
adc
mov
sbb
xchg
mov
xor
add
popa
cmp
inc
rcll
sub
fiaddl
and
pop
mov
inc
aas
repnz
mov
xchg
mov
pop
insl
aas
sub
popa
sti
leave
loope
fdivl
mov
push
sarb
jno
or
xchg
pop
pop
mov
mov
into
outsl
pop
bnd
int
pop
mov
hlt
adc
xor
adc
lahf
test
rcl
xchg
inc
cmp
jge
mov
aam
ds
and
xchg
adc
hlt
ss
ror
cltd
mov
pop
pop
sahf
pop
lahf
xchg
adc
push
test
pop
dec
mov
and
mov
das
ficoml
iret
fisubs
xorb
or
ret
js
inc
notb
daa
icebp
jp
sbb
pushf
les
xchg
in
sub
into
fdivs
imul
int3
inc
ror
dec
pop
je
pop
pushf
xchg
mov
es
mov
adc
or
daa
aam
in
mov
add
inc
pop
fcomi
push
jl
cmp
std
ja
xchg
sub
lea
shll
or
jnp
stos
lret
test
scas
mov
cmp
or
jb
pop
and
subl
into
cs
cmp
mov
pop
or
aaa
stc
insb
jne
sbb
sbb
adc
adc
bound
add
repnz
leave
pop
add
inc
ret
lds
xchg
test
ljmp
mov
add
push
out
and
xor
bound
stc
pop
cltd
mov
daa
push
imul
out
inc
jne
loopne
push
out
fnstenv
ljmp
mov
iret
lret
outsb
inc
cld
cmp
add
insb
cmp
inc
imul
lcall
sbb
addb
cltd
push
or
iret
mov
sti
decl
xor
aaa
push
addr16
jo
nop
out
sbb
add
cmp
jg
sbb
jo
popl
aad
mov
cmpsb
dec
js
out
aaa
shr
or
push
outsb
mov
popf
dec
and
sbb
cmp
repnz
push
push
mov
cmpsl
scas
cmpb
add
lcall
addr16
sahf
ds
in
mov
cwtl
dec
pushf
jnp
sarl
push
add
cmp
xor
aad
movsb
neg
outsl
jge
xchg
popf
fistl
xlat
pushf
repz
jne
data16
aam
lret
adc
jb
xor
cmp
and
imul
int3
cwtl
movsl
aaa
outsb
loopne
sub
fsubrl
jo
pop
pushf
adc
clc
lret
andb
cli
jns
push
imul
imul
into
test
sub
push
pop
aad
mov
sbb
fsubs
jmp
icebp
aaa
dec
pop
xchg
repz
sub
int3
and
inc
rcll
push
mov
rcrb
aad
repz
dec
enter
mov
imul
xchg
fcoms
mov
inc
pop
cmp
mov
and
add
loope
ficomps
lds
popf
arpl
inc
loop
stos
int3
std
and
jecxz
sbb
fstpt
enter
outsb
fadds
adc
mov
popf
add
movsb
bound
xor
fwait
idivb
mov
add
xor
in
xchg
pushl
add
mov
enter
mov
mov
mov
ljmp
xor
xlat
out
mov
lods
dec
mov
fmuls
in
dec
cli
xchg
imull
jmp
insl
mov
test
add
sbb
cwtl
add
cmp
dec
or
inc
addr16
push
jns
movsl
jp
ds
push
dec
enter
jns
movsl
mul
negb
push
xchg
pop
in
add
xchg
mov
or
leave
fstpl
inc
fchs
mov
cs
pop
or
lods
and
inc
je
dec
movsb
pop
imul
call
inc
mov
mulb
dec
push
inc
xlat
sub
push
sub
or
and
js
mov
test
push
inc
ds
daa
dec
fwait
mov
mov
xchg
aam
push
ss
stos
add
mov
popf
adc
pop
inc
pop
insl
mov
dec
sbb
mov
adcb
sub
sub
jmp
sti
sbbl
xor
pop
add
loopne
lds
xchg
movaps
dec
inc
sbb
das
push
xor
out
into
fwait
inc
imul
jno
nop
dec
daa
loopne
add
sahf
std
faddl
pop
flds
pop
mov
pop
push
cmpsb
leave
inc
pop
icebp
push
inc
mov
cmp
pop
mov
test
inc
push
xchg
push
jnp
or
dec
out
je
pushf
arpl
mov
mov
aad
fists
push
int
push
ja
jnp
lea
cmp
xorl
mov
cmpsb
jne,pn
dec
inc
mov
aad
fwait
xor
call
in
mov
das
mov
and
out
adcl
pop
sbb
cltd
inc
push
or
and
inc
rclb
push
loope
cltd
mov
sbb
sub
mov
sub
in
xchg
outsl
xor
add
xor
sbb
dec
sbb
out
cmpb
push
sbb
lods
cmp
dec
jecxz
inc
das
and
pop
movsl
or
loope
leave
and
or
mov
cmp
cmp
lea
xor
stc
mov
push
pop
jp
mov
je
stos
fcmovbe
fs
sbb
add
mov
enter
jbe
inc
xchg
sub
jne
aad
pop
xor
mov
stc
insb
loope
ljmp
or
xchg
jne
das
aad
push
rcl
int3
sarb
ds
movsb
xchg
jge
cld
lods
jmp
push
subl
loop
daa
or
rcll
pop
shl
cmpsl
cmp
mov
aad
xchg
in
adc
in
cmpsb
dec
sub
hlt
adc
dec
add
call
sbb
loop
data16
adc
rorl
inc
aad
pop
pop
pop
lods
mov
aad
jnp
lock
and
pop
push
inc
ja
mov
roll
xlat
sbb
rolb
dec
mov
pop
sbb
xchg
xorb
jge
repnz
jmp
cwtl
push
push
int3
mov
lods
out
xchg
mov
jo
vandnps
add
in
ds
gs
sub
fs
push
dec
add
cltd
sysexit
mov
and
mov
mov
xchg
cmp
into
cs
aaa
xor
push
add
dec
jno
push
imul
mov
rol
jnp
mov
sbb
sub
fsub
mov
push
inc
bound
mov
jo
push
xchg
loop
pusha
test
mov
cmp
cli
shrl
bound
das
icebp
inc
push
cltd
push
lcall
stc
in
push
cmc
movsb
mov
stos
and
and
fistps
andl
test
mov
fmull
out
dec
mov
frstor
mov
js
mov
loop
ss
lods
jge
dec
int
leave
arpl
shrl
popa
pop
clc
sub
sahf
sbb
lret
lret
jmp
iret
loop
jae
and
jmp
sub
mov
push
mov
sbb
add
or
fbstp
arpl
into
xchg
test
movsb
jg
lds
mov
lods
lock
mov
inc
in
orb
inc
jnp
fcmovb
loope
xor
or
push
addr16
mov
or
leave
xor
repz
push
xchg
out
lea
xchg
push
and
shlb
inc
lods
and
xchg
ljmp
addb
fcmovnbe
mov
inc
ss
or
sub
adc
dec
popf
mov
pop
xchg
pop
inc
dec
dec
sub
insb
and
jmp
int
or
ret
subl
jmp
xchg
inc
adc
dec
outsl
arpl
pop
aad
call
cmp
andnps
aad
fldcw
mov
xchg
pusha
test
nop
fidivrs
fisubs
jo
jne
add
es
jo
packssdw
dec
enter
cld
push
enter
cs
sub
negl
xor
testl
cld
add
jle
jge
fistl
sub
lods
in
into
jecxz
inc
add
xchg
in
int
pop
cld
sahf
popf
and
ds
xlat
xlat
cmp
push
shrl
pop
leave
testb
and
mov
hlt
cmpsl
nop
and
xchg
push
outsl
ja
xchg
and
add
jecxz
dec
int
fidivrl
movsb
stos
sbb
inc
ja
jnp
add
or
cwtl
cmp
std
and
push
sarl
xchg
testl
or
push
xchg
fsubrp
and
scas
jnp
adc
sti
scas
adcb
sub
cmc
mov
xchg
loope
divl
push
out
jbe
mov
mov
mov
pop
in
mulb
cld
aad
dec
pushf
mov
mov
push
adcl
nop
or
popa
add
fnstsw
xchg
into
pop
cmp
lods
xchg
daa
or
loope
or
ss
test
jle
dec
xorb
pusha
int
mov
fnstcw
sbb
mov
and
or
call
and
add
fistps
ja,pn
jl
cmpb
add
jae
call
inc
mov
ljmp
mov
dec
int
lea
cmp
adc
sub
dec
in
mov
jge
or
cmp
or
insl
and
sti
pop
mov
jl
test
lret
and
mov
mov
test
push
ret
push
inc
pop
gs
or
ret
aam
xchg
into
jb
cs
dec
add
dec
xor
roll
or
pcmpeqb
inc
push
xchg
sub
dec
sub
stos
sub
lret
add
xchg
int
sub
push
lahf
sub
lods
ficoms
xchg
mov
cmp
cmpb
ret
dec
pop
ficoml
jbe
dec
in
xchg
jmp
aam
cmc
loope
lea
into
repnz
mov
xor
sbb
and
std
mov
stc
sbbl
mov
sarb
addr16
sar
repz
sub
fldt
imul
and
lahf
push
in
cmp
icebp
mov
imul
inc
das
add
inc
sub
mov
loope
arpl
aad
lret
scas
daa
faddl
loop
xchg
dec
stc
fstl
push
adc
shld
xchg
add
daa
jecxz
xchg
imul
movsb
loop
sub
repnz
or
aaa
and
fstps
loopne
push
enter
nop
sub
cmpsb
cmp
lods
shl
push
jg
xor
sahf
mov
hlt
out
hlt
mov
daa
dec
jge
jae
mov
cmpb
mov
sbb
movsl
stos
ljmp
pop
aam
push
outsl
ja
xchg
cs
sub
mov
movsl
sub
hlt
out
cltd
out
sub
cmpsb
pop
cmpsb
inc
push
mov
pop
fwait
andb
inc
imul
jbe
push
xchg
outsb
mov
xor
dec
imul
imul
inc
push
fs
xchg
std
test
lock
push
pop
xchg
adc
test
mov
push
das
sar
bound
faddl
sub
stc
mov
mov
scas
xchg
lret
pop
adc
repz
arpl
pop
scas
push
mov
dec
mov
sub
ljmp
movsb
mov
bound
cmp
push
mov
mov
imul
outsl
xchg
fsubrl
pop
fstps
or
sub
sahf
iret
adc
dec
pop
sbb
rclb
cmp
insl
cmp
fdivl
inc
rcr
pop
nop
or
cmp
sub
mov
in
test
leave
int
pusha
enter
add
lds
inc
in
mov
popf
in
mov
sbb
mov
cmc
ss
insl
jle
lods
cmpsb
aas
insb
fprem1
jle
push
lahf
sbb
aam
pop
je
inc
fwait
pop
int3
cmp
push
push
lea
mov
out
and
jl
test
in
nop
aas
dec
mov
out
cmp
jbe
push
mov
ret
mov
push
mov
fistpl
mov
mov
pop
inc
mov
pop
add
mov
dec
enter
pop
xlat
xchg
cltd
test
pop
imulb
fsubrl
repnz
mov
xor
stc
imul
jae
adc
sub
push
test
imul
mov
test
lods
adc
rcrl
mov
mov
fcomps
mov
pop
sub
add
fistps
inc
pop
fmull
jp,pn
fcmovne
enter
or
mov
pusha
push
pop
jae
xor
lods
rolb
std
repz
call
lods
pop
mov
pop
pushf
jo
adc
push
sbb
mov
lods
in
xchg
push
loope
xchg
out
ret
mov
loope
mov
fidivl
adc
sub
add
sub
push
sti
cmpb
hlt
and
push
sub
or
xor
xor
or
call
lret
pop
jb
fsubp
ret
pushf
sarb
dec
pop
sub
iret
daa
gs
jo
rolb
jns
jbe
insb
jg
xchg
aaa
js
sti
pop
gs
stc
roll
sub
fiadds
pop
push
sarb
fmull
aam
sbb
out
jle
mov
sub
bnd
fdivl
addr16
cmp
leave
mov
mov
xlat
sub
xlat
pushf
mov
out
or
es
mov
mov
cmpsl
jecxz
int3
loope
clc
xchg
jbe
push
lods
xchg
imul
xchg
mov
and
add
sti
bound
sub
out
stc
pxor
pop
xchg
sub
inc
add
repnz
mov
push
fucomip
cld
xor
adc
ret
cmc
jo
mov
lods
sub
cld
xor
sbb
dec
xchg
bound
invd
mov
dec
js
lock
movsb
mov
mov
mov
scas
push
stc
out
imul
sub
in
sbb
mov
adc
sbb
cmp
adc
and
je
mov
out
xorb
std
imul
hlt
data16
sbb
les
orl
mov
repnz
mov
cld
sbb
and
mov
cld
insl
shl
shlb
jmp
mov
sarl
lcall
add
lcall
sbb
pop
inc
sub
xor
imul
movsl
inc
and
push
or
inc
dec
jns
xor
jle
push
mov
dec
jp
adc
out
xchg
cltd
sub
mov
lret
inc
stc
sar
inc
repnz
sub
in
push
in
jb
add
pop
fdivp
lahf
mov
xchg
cmp
insb
jle
cmc
ss
movsl
fistl
sub
repz
add
and
inc
and
stos
mov
xlat
rolb
cmp
mov
repnz
adc
sti
mov
xlat
insb
ret
xchg
leave
int
xchg
shlb
lock
rorl
ljmp
in
mov
push
fiadds
mov
jg
sub
lret
xchg
loope
sbb
pop
jge
xchg
jne
xor
lds
shrl
fldl
fwait
add
and
lahf
jno
aas
adc
lea
outsb
shll
sbb
shrl
out
dec
add
imul
mov
loopne
add
mov
fdivs
fsubrl
cmp
jmp
jno
mov
lods
pop
fiaddl
mov
xchg
sysret
gs
cmpb
dec
xor
ret
add
out
fsubl
decb
outsb
cmp
push
popa
mov
adc
aas
aaa
adcl
repz
inc
idivl
jno
or
movsl
jbe
int3
jae
mov
xchg
dec
in
push
mov
daa
frstor
mov
mov
jbe
test
mov
add
xchg
out
push
test
push
mov
pusha
xor
xor
jo
push
mov
cmp
mov
pop
ficomps
jl
pop
loope
add
lcall
jae
popf
aad
jb
in
mov
push
test
sub
jnp
cmp
jp
hlt
les
enter
loopne
or
cmp
xor
in
dec
pop
adc
adc
and
mov
or
in
sahf
jne
pop
mov
mov
pop
and
push
or
mov
dec
or
gs
es
inc
test
in
sub
adc
xchg
jbe
push
pop
add
out
sahf
cmp
rol
je
mov
sbb
dec
movsl
jae
stc
das
mov
sub
inc
xchg
jbe
jo
push
jno
sub
jae
mov
cli
icebp
js
sahf
sub
adc
pop
jg
pusha
in
mov
mov
sti
jbe
stc
mov
mov
mov
pop
imul
out
scas
insb
inc
fxch
lea
mov
adc
rorb
std
adc
fsubrl
xchg
das
pop
test
push
jmp
dec
gs
shll
lock
adc
jmp
in
fildl
add
rclb
dec
ret
push
dec
hlt
aaa
pop
in
imulb
mov
xchg
in
fs
aaa
adc
fsubrl
cld
mov
sub
cmpsb
in
and
test
movsl
dec
and
mov
cltd
jg
pushf
iret
adc
or
xchg
test
adc
in
sub
call
outsl
stos
in
fldl
mov
inc
or
sub
mov
je
lret
subl
pop
cmp
cli
mov
or
xor
dec
jo
xchg
les
push
std
inc
sub
fadd
movsb
pop
stc
adc
cmp
cs
dec
stc
fcmovu
pop
mov
mov
arpl
popa
dec
sub
push
push
pushf
xchg
xchg
mov
jb
mov
into
scas
out
in
xchg
mov
dec
in
mov
inc
in
fwait
stos
fs
and
aam
adc
mov
andl
mov
stc
push
cmp
dec
ja
mov
pop
add
mov
mov
sbb
xchg
out
push
xor
movsb
push
mov
sbb
cltd
int3
cmpsl
jns
dec
aad
pop
out
fistpl
jae
jae
in
sub
mov
adc
dec
inc
push
out
movsb
push
cld
mov
jae
inc
mov
cmp
sub
mov
dec
into
bsr
mov
inc
testl
popa
call
fdivs
dec
adc
ja
adc
push
gs
les
cmp
cmp
xchg
bound
pop
sub
fmul
out
mov
mov
out
push
mov
out
or
outsb
movsl
push
rcl
in
scas
mov
dec
ss
cmpsb
icebp
imul
imul
pop
sub
inc
stc
mov
adc
out
lret
jb
sbb
mov
movsb
pop
adc
cs
subl
or
shr
aaa
pop
inc
pop
scas
inc
inc
xor
andb
iret
adc
insl
not
xor
dec
lret
dec
shrl
lahf
cmp
push
outsb
xchg
push
repz
cmpsl
push
ret
rolb
insl
pop
js
push
inc
xchg
jnp
push
mov
cmp
sub
ss
je
clc
test
out
mov
mov
rol
lds
sub
fwait
ss
imul
jo
or
cmp
mov
and
or
jo
pop
push
pop
and
in
ljmp
dec
pop
mov
insl
jns
mov
mov
and
aaa
add
pusha
sbb
jo
sbb
int
iret
push
cmp
mov
shrl
xor
in
pusha
in
xor
lret
mov
es
xor
mov
cmpsb
mov
inc
in
loope
mov
loopne
mov
inc
mov
inc
lret
repz
mov
mov
jae
adc
lret
lods
pop
addl
mov
xchg
push
stos
mov
jo
imul
cmc
fs
xor
ss
jo
shrb
push
push
cli
das
cltd
add
and
insb
pop
add
mov
fstl
fwait
inc
cwtl
xchg
rep
insb
pop
inc
add
std
hlt
shll
enter
pushf
cmc
fstl
addl
push
mov
call
imul
movsb
int
fstpl
xor
lret
int3
cmp
pop
jo
loope
mov
addb
dec
adc
daa
push
aaa
sbb
dec
sub
xchg
adc
fildl
icebp
call
and
dec
pop
jae
test
jae
adc
inc
cmp
or
shlb
push
decl
xor
fcmovb
push
dec
cli
rep
data16
ret
push
cmpsl
das
cs
adc
jno
push
mov
inc
scas
lahf
or
mov
lret
dec
aam
mov
cmp
jb
push
pushfw
sub
dec
loop
inc
clc
inc
push
sarl
push
adc
adc
push
div
cli
daa
or
aad
xchg
repz
int
inc
and
lods
dec
sub
xchg
or
xchg
mov
jno
scas
dec
push
cwtl
xchg
popl
shll
fildl
test
outsl
sar
ret
out
sbb
mov
cli
or
mov
icebp
fldl
inc
movsl
mov
inc
fsubrl
mov
enter
and
lea
loop
push
iret
add
loope
outsb
cmc
inc
sbb
sbb
mov
xchg
scas
test
jmp
lea
xchg
push
lahf
cmp
xchg
test
js
adc
push
movsb
pop
mov
mov
dec
mov
stc
mov
mov
mov
adc
sarb
stos
sti
mov
clc
or
jno
jg
test
push
pop
add
or
or
ror
or
xor
mov
jmp
dec
cmp
lahf
fs
and
sub
push
bound
xchg
aaa
adc
out
and
push
dec
push
pop
xor
lcall
push
pop
push
dec
and
pop
adc
xchg
xchg
xchg
push
insb
arpl
daa
pop
push
scas
maskmovq
testl
lock
xchg
push
test
lock
push
lret
add
notb
xor
divb
mov
push
in
and
mov
cmpl
lcall
and
mov
or
sbb
lret
push
mov
rclb
push
cmpl
sbb
jl
jle
insl
imul
outsb
cmp
sub
mov
pop
or
cmp
repz
sarb
inc
adc
pop
sbb
aaa
add
jo
subb
jmp
cmp
in
pop
repz
dec
mov
jbe
sub
add
push
addr16
loope
mov
lret
mov
sbb
sub
rcl
sub
stos
jae
in
jp
or
rclb
cwtl
add
enter
adc
je
test
enter
push
pop
int3
push
aas
fs
inc
out
lock
loope
and
js
ret
in
push
push
and
fimuls
call
and
lret
in
and
xlat
add
lods
repz
stos
dec
add
test
mov
sti
push
mov
add
xchg
rorb
movnti
dec
dec
pop
adc
in
movsb
ss
cwtl
out
cs
lds
xor
insb
repz
das
out
mov
call
rcll
mov
mov
cmpsl
stos
and
iret
add
test
jo
mov
dec
push
ret
ljmp
mov
jae
addr16
mov
aam
fcmovb
call
int3
in
mov
dec
sbb
mov
inc
lods
stos
pushf
lods
push
lret
in
mov
aam
pop
inc
jle
adc
fdivs
push
stos
ds
dec
scas
popa
js
rcrl
sti
mov
add
repz
call
notb
fs
or
pop
inc
push
fwait
cld
add
mov
fnstenv
push
mov
xchg
mov
jge
test
sbb
dec
add
into
mov
push
push
mov
lods
cmp
pop
das
iret
cmp
push
je
push
jp
mov
dec
les
push
pusha
leave
mov
repz
push
jl
xchg
push
popa
add
push
and
test
ljmp
test
bound
pop
dec
mov
std
mov
mov
outsb
mov
jp
lods
sarl
shl
xchg
or
shl
mov
jno
xchg
les
lods
xchg
out
rorb
data16
xchg
or
cmp
mov
add
sbb
jno
mov
int3
movl
adcl
fisttpl
and
adc
inc
vcvttss2si
enter
daa
mov
or
cltd
clc
adc
adc
popf
pop
push
nop
loop
xchg
sub
pusha
dec
lock
jbe
lahf
jae
mov
push
cmp
aas
cmpsl
mov
stc
loopne
mov
fcmovu
and
inc
lret
sbb
daa
adc
int3
sbb
mov
lcall
ror
shrl
mov
pop
addr16
mov
or
clts
call
jl
xor
fwait
je
sarb
inc
xchg
xor
xchg
cs
lcall
inc
test
out
das
stos
or
push
sbb
and
cmc
aam
lea
pop
add
pop
add
inc
pop
jns
xchg
pusha
lock
cmp
pop
movsl
sub
lret
xlat
sub
xlat
sub
sub
iret
pop
pushl
xchg
addl
test
insl
dec
push
fcmovnbe
xor
mov
cltd
and
xor
adc
popa
bound
mov
add
xchg
jnp
jg
aas
sbb
cs
pop
mov
rcrb
add
jle
cmpsl
jae
insl
stos
ret
adc
mov
mov
jg
xor
xor
movsb
out
jnp
xchg
mov
enter
mov
aaa
add
inc
mov
out
cmpsl
ljmp
repnz
and
mov
dec
adc
fldcw
ror
repz
iret
jl
std
aad
xchg
pop
jmp
aad
outsb
scas
add
sbb
add
subb
setl
push
fsubl
int3
lods
adc
mov
and
push
daa
inc
movsl
dec
test
sbb
pushf
popa
lock
jne
and
fwait
dec
lea
stos
mov
and
xchg
xlat
rcr
fcmovnu
out
je
ja
inc
lahf
adc
mov
or
push
and
adc
stc
add
stos
and
mov
or
lcall
mov
cmp
and
das
dec
lods
fnstenv
cmpsb
sub
inc
sub
insb
out
sbb
nop
cmp
cltd
add
cmp
push
or
or
lret
sarl
sbb
ja
mov
xor
pop
sub
dec
sub
push
sub
sahf
pop
outsl
adc
das
seto
jno
adc
jno
inc
mov
mov
push
adc
and
mov
int3
fsub
in
cmp
repz
push
stos
lea
mov
xor
dec
adc
fstpl
mov
sahf
xor
dec
adc
clts
jo
mull
loope
mov
in
cs
jp
repz
push
clc
ja
stc
jmp
mov
sbb
cmpsb
repz
enter
arpl
lds
mov
loopne
inc
js
out
fisubl
pop
and
mov
xchg
aas
lds
inc
nop
aam
sbb
cmp
mov
nop
xchg
inc
jge
test
add
repnz
push
xor
mov
jecxz
scas
iret
lret
int3
inc
sub
stc
mov
fcomps
lock
inc
clc
pop
lret
lock
dec
data16
cmp
cld
push
xchg
jmp
inc
outsl
xor
sti
ret
int
test
sbb
mov
stc
rcrl
pop
adc
xchg
rcll
arpl
enter
sarl
pop
imul
adc
test
aas
jo
push
and
mov
xor
ret
or
sub
mov
jno
jb
push
add
rcrb
dec
call
aam
jecxz
ljmp
das
add
int3
or
ljmp
int
in
cmp
arpl
jo
mov
jp
pop
mov
mov
lea
jmp
sub
adc
mov
es
mov
xchg
mov
and
test
push
fdivp
outsl
sti
sbb
xor
cld
push
fisubl
hlt
call
test
iret
push
cltd
sbb
sub
add
rcl
dec
sahf
adc
mov
fidivs
repz
in
adc
mov
xchg
inc
mov
pop
test
mov
sti
testb
mov
andb
loop
mov
dec
add
pushf
dec
testl
adc
xchg
inc
xchg
xor
addr16
or
js,pt
xor
jge
add
push
pop
js
xor
pop
ja
jo
movsl
push
nop
fiadds
jp
jno
setbe
push
das
int
pop
iret
jbe
fsubrl
pop
push
xchg
and
and
or
mov
jp
aaa
push
mov
ret
pop
repz
loop
add
mov
addr16
cmp
dec
insl
sub
mov
scas
add
jo
inc
xchg
xor
or
in
out
push
push
lcall
add
push
xchg
inc
outsb
jle
jl
adc
subb
dec
xor
push
cs
outsl
loope
sub
xchg
cmp
cmp
cli
popa
test
adc
dec
pop
clc
orl
and
push
leave
dec
stos
pop
cmp
push
adc
sub
or
inc
cwtl
xor
pop
push
cmp
fistpl
and
fmull
push
pusha
inc
je
xchg
cmpsb
or
divl
fcmovnbe
insl
add
pop
sarb
cmp
jl
fcmovbe
call
jge
jecxz
femms
push
lds
int3
fidivrl
aad
mov
insl
int
push
xor
lock
push
fdivl
xchg
test
mov
adc
pop
cmp
inc
cs
shll
pop
orl
sbb
pop
clc
pop
xchg
or
nop
adc
stos
mov
xor
fistpll
inc
lea
cmp
je
test
cltd
mov
icebp
jecxz
or
addr16
scas
ds
adc
push
xorb
jg
pop
jecxz
ljmp
mov
mov
cmp
pop
push
mov
xchg
scas
mov
paddusw
dec
jg
test
movsl
fadd
pop
int
push
stos
clc
mov
xor
insb
loop
in
sbb
and
pop
or
dec
mov
sbb
stc
jl
mov
mov
pop
mov
fsubrl
sub
fistps
mov
pushf
in
mov
xchg
push
mulb
push
pop
mov
mov
iret
push
test
dec
testl
in
mov
cmp
ret
sub
aaa
jge
movb
mov
test
cmp
xchg
cltd
addr16
add
xor
aad
dec
inc
mov
xor
adc
xchg
inc
push
add
cmc
ret
pop
sub
xchg
sbbb
rorb
or
mov
addr16
test
mov
sbb
and
leave
xor
push
sahf
std
loopne
sti
jp
xor
movsl
inc
out
dec
jg
pop
mov
jecxz
mov
add
out
fcompl
imul
cmpsb
in
sub
jo
mov
mov
push
cs
std
push
std
pop
and
test
fwait
orb
daa
sahf
in
add
mov
dec
lods
sub
and
je
stos
fldt
test
scas
mov
mov
inc
xchg
adc
push
and
mov
outsb
adcl
call
js
or
push
adc
jg
shll
fisubl
int3
dec
out
insb
or
int3
adc
stos
stc
inc
jbe
lds
adc
and
mov
adc
fidivrl
sub
fstpt
lret
cmpsl
bound
mov
jns
lods
lds
scas
mov
jbe
sti
es
xor
mov
sub
lret
mov
and
jbe
sarl
pushf
xor
mov
xchg
lcall
mov
pushf
rcrl
cli
dec
push
ss
scas
rcrb
testl
add
add
fldenv
cld
mov
cmp
sub
xor
push
pop
sarb
or
push
js
cmpl
in
jbe
mov
mov
jae
dec
push
xor
mov
adc
mov
lods
mov
xchg
es
cmp
fldl
arpl
jae
das
lods
push
inc
movsl
into
sub
xlat
jns
cmpsb
jmp
mov
ret
test
push
es
xchg
inc
mov
das
inc
repnz
fstpl
dec
fldt
mov
sbb
je
pop
fdivrs
das
ret
call
xchg
pop
das
inc
jle
rcr
call
and
cmp
mov
jno
cmpsl
int
pushf
pop
push
and
lock
mov
inc
add
jle
loopne
jp
adc
add
insl
mov
ljmp
das
mov
lcall
mull
xchg
daa
fcmovne
push
jnp
sub
xchg
dec
loopne
pop
out
and
fcoml
icebp
les
inc
mov
mov
bnd
xlat
fwait
into
pop
fs
shll
nop
loop
dec
cmp
push
ret
ret
mov
inc
dec
scas
stos
cli
mov
subl
loopne
dec
xchg
loopne
ds
ja
cmc
dec
faddp
mov
xor
in
mov
adc
push
mov
xchg
and
push
clc
lret
clc
ret
cmp
mov
dec
fs
dec
aaa
push
and
sbb
sbb
xchg
pop
dec
xor
aaa
das
and
roll
dec
mov
jp
gs
rolb
popa
aam
mov
push
dec
jge
jmp
xor
movsl
fcoml
fidivrs
daa
mov
movsb
add
psadbw
addr16
inc
dec
out
xchg
pop
cli
xchg
inc
pop
or
dec
hlt
mov
pop
adc
mov
movsl
pop
les
dec
fstl
mov
mov
jge
imul
mov
mov
dec
scas
fwait
mov
inc
addl
mov
mov
push
lsl
sbb
adc
mov
test
push
push
jle
std
push
ljmp
je
lcall
cmp
mov
repnz
adc
cmp
jns
stos
mov
pop
adc
pushf
jo
inc
xchg
jb
push
push
cltd
push
pop
es
xchg
repz
mov
cmp
add
mov
or
adc
add
cmp
fs
pop
adc
cmpsb
mov
pop
xchg
ljmp
inc
ljmp
fildll
js
mov
or
fimull
add
xchg
out
pop
js
add
pop
outsl
jae
inc
sti
pop
mov
ljmp
data16
adc
and
out
mov
test
loope
fmuls
sar
xchg
or
imul
push
cmpb
loopne
xor
rcl
push
pushw
ret
mov
mov
in
shrb
add
cs
mov
mov
fcoms
ret
fbld
pusha
jns
out
es
jmp
in
xor
dec
lods
push
cmp
daa
inc
mov
xor
sub
inc
sub
mov
push
in
lcall
sahf
mov
test
fs
push
xor
shrb
inc
mov
es
aaa
mov
fcoms
xchg
repz
push
mov
and
lahf
cld
les
xchg
sti
out
mov
xchg
push
syscall
xchg
ret
sti
jg
or
loop
and
and
cld
jmp
mov
hlt
cmpsl
repz
dec
lcall
add
nop
push
cli
sahf
mov
jb
cmp
aam
mov
sarl
cwtl
enter
sub
in
das
aad
fwait
into
pop
outsl
fsubrl
je
mov
lods
xchg
cmc
je
loopne
test
and
andb
push
negb
or
mov
data16
shrb
sahf
mov
in
pop
aaa
inc
gs
push
add
fildl
cmp
shll
out
leave
in
adc
push
push
cmpsb
loope
mov
pop
and
xor
fmul
int3
fistpl
outsl
mov
mov
mov
mov
jbe
in
xchg
mov
sub
jne
pop
mov
cwtl
enter
stos
movsb
sub
push
out
test
fsubl
scas
in
jb
sti
ret
stos
popa
sub
pop
leave
sub
xor
push
rcrb
mov
scas
adc
jge
in
pop
dec
popf
push
push
jg
fadd
rcll
mov
dec
addr16
cli
popa
jb
mov
or
xchg
mov
sbb
xor
aam
cmpsl
les
inc
push
mov
cmpsb
loope
jae
or
in
cmp
jnp
shl
sbb
lock
mov
cltd
shl
sbb
inc
cmp
sub
int3
loopne
pop
in
imul
out
xor
enter
sbb
pop
fidivrl
xor
mov
dec
es
div
xchg
and
inc
imul
ss
cltd
scas
mov
cmp
punpckhwd
mov
push
lock
adc
jge
scas
lret
jg
std
sub
and
loop
push
fwait
cld
and
cs
pop
sti
hlt
jl
cmc
js
leave
cmp
xor
mov
xchg
test
outsb
sarl
pop
sbb
daa
mov
cmp
popf
cmc
dec
nop
test
das
lahf
mov
add
dec
xchg
js
push
out
lods
rclb
and
fs
pop
cmpsb
fwait
xor
fstps
adc
pop
incb
ja
push
sub
dec
sbb
jecxz
adcl
mov
imul
sub
cmpsl
sti
jge
mov
out
jge
cwtl
bound
add
inc
add
mov
fisttpll
dec
jns
fbld
sti
scas
xchg
xchg
and
out
cmp
adc
cmp
out
in
xchg
pop
pop
inc
popf
pop
xchg
sub
push
stos
ret
mov
push
jns
fisttpll
dec
sahf
mov
inc
shrl
pushf
test
mov
and
xor
dec
nop
xchg
loopne
lods
enter
mov
sub
sub
fisubrl
xchg
sbb
sbb
jp
or
test
test
cmpsl
orb
xor
mov
mov
aaa
in
inc
aaa
cmp
call
filds
add
nop
push
jl
in
cmc
jecxz
inc
fwait
sbb
pslld
bound
scas
js
loop
xchg
sub
pop
mov
and
mov
repz
mov
ss
scas
sub
push
aam
ret
ret
pop
pop
mov
cld
andl
fisttpl
jecxz
call
int
je
dec
sub
int3
rcr
xor
mov
imul
pop
into
push
sub
dec
clc
out
shrb
sbb
push
sarl
outsl
aad
test
lret
arpl
out
mov
add
cs
inc
enter
push
add
cmp
sbb
shlb
mov
xchg
push
inc
and
int3
push
xchg
int
push
decb
xchg
iret
sbb
add
dec
je
cmp
test
adc
jg
pop
jno
mov
outsb
insl
sti
popa
mov
mov
sub
outsl
push
mov
sub
mov
inc
or
andb
and
fbstp
je
mov
inc
scas
xchg
fsubrp
ret
pop
in
je
daa
outsb
or
lret
enter
dec
fistl
aas
adc
fcmovnu
in
cmp
push
mov
push
mov
hlt
add
pop
sub
mov
push
test
cwtl
call
jns
iret
and
add
repnz
stos
fldenv
mov
sub
cmp
movsb
jae
cmp
inc
fdivl
ds
je
pop
mov
mov
or
cmp
cmpsl
mov
ficoms
pop
mov
inc
stos
xor
jbe
push
faddp
inc
dec
js
loopne
sti
adc
sub
or
pop
pop
lahf
jp
int3
xchg
test
sbb
pop
sbb
mov
push
xor
test
jne
out
repz
push
mov
movsl
jle
and
inc
mov
dec
subb
xor
inc
loope
in
imul
loope
sbb
sub
lods
loop
lods
insb
stc
push
xchg
data16
adc
jl
test
or
into
push
mov
mov
push
sbb
clc
cld
mov
aad
jmp
fsubrl
fistl
mov
jecxz
mov
fwait
popa
pop
int
aas
xchg
addr16
dec
sbb
outsl
jbe
jmp
mov
cmc
cmp
pop
jbe
ja
lret
adc
ror
jle
arpl
lea
aas
push
inc
test
push
mov
and
push
cli
xchg
and
lods
cmp
jne
call
dec
addr16
push
bound
xchg
cmp
cmp
jne
inc
in
cs
dec
mov
imul
xor
jbe
jl
add
xor
in
xor
fsubrp
jle
fwait
push
jle
jmp
mov
and
jmp
outsb
fmulp
mov
inc
mov
jecxz
insl
jecxz
pop
iret
in
mov
mov
cmp
sub
push
xchg
in
add
inc
outsb
sahf
sbbl
jne
cli
inc
je
push
test
mov
andb
dec
loopne
es
adc
shll
jmp
loope
sbb
aad
cmp
dec
lcall
pop
jo
mov
sarl
movsb
ret
mov
cmp
xchg
shrb
rorl
stc
outsl
repz
push
lods
mov
jecxz
add
ja
cmc
pop
mov
lahf
xor
push
lods
pop
cmc
sub
loopne
or
ss
add
jp
push
sub
dec
ficoml
out
faddl
and
jl
inc
jnp
cmp
and
inc
imul
inc
xchg
cmp
bound
or
insb
frstor
mov
jns
inc
leave
or
pop
adc
mov
rcl
or
jo
pop
inc
xorb
rcr
push
cld
arpl
or
fsubl
or
xchg
movsl
push
cmc
add
and
bound
push
stos
je
fs
xor
mov
inc
xor
add
cltd
outsl
aam
out
add
lahf
js
mov
insb
jp
push
push
jg
hlt
fnsave
adc
popa
add
pushf
scas
mov
sbb
sub
mov
pop
push
ds
or
mov
icebp
mov
ds
outsb
test
xor
fstl
add
loop
cli
dec
jns
ljmp
in
add
clflush
jbe
aam
or
leave
js
pop
fucomi
fwait
push
cmp
jbe
test
loope
les
pop
shlb
scas
mov
dec
dec
loopne
jo
shl
mov
lcall
and
push
subl
dec
je
or
nop
aas
push
insl
xchg
and
and
cltd
xor
int3
sbb
pop
leave
sbb
loopne
mov
lcall
xchg
scas
jle
jbe
movsb
shrl
jo
in
adc
jbe
outsb
mov
cmp
xchg
cmpsb
or
mov
mov
lret
mov
aam
in
jne
pusha
mov
xor
out
enter
sub
xor
mov
xchg
hlt
imul
sub
enter
into
fcomps
and
mov
and
sub
adc
imul
lahf
jecxz
or
scas
arpl
inc
dec
notl
push
xchg
in
dec
jne
xchg
ret
xchg
aam
sti
jmp
roll
loope
xor
leave
ror
mov
pop
xor
ret
push
popa
inc
shrb
fisttps
xlat
inc
mov
and
jl
idivb
adc
mov
and
jb
outsl
stos
add
ret
push
clc
das
add
fidivl
and
jp
lods
jb
pop
pop
shr
mov
xchg
stos
clc
les
add
mov
xchg
ja
jg
stos
push
mov
pop
push
jmp
inc
sub
mov
mov
out
sub
cmpsb
cmpsb
enter
cmove
lcall
clc
xchg
sub
ror
push
mov
or
rcrb
jae
js
je
imul
sbb
xchg
popa
mov
daa
fidivrs
decb
cmp
cmp
push
fisttpll
or
in
dec
mov
mov
and
inc
imul
and
pop
cwtl
testb
enter
xchg
xchg
pushf
mov
pop
push
and
rcll
pop
adcb
mov
and
xlat
mov
addr16
add
inc
adc
dec
mov
dec
push
add
out
fnstsw
mov
cmpsb
dec
loope
inc
dec
mov
movsl
or
jle
movsb
jb
adc
fdivl
push
and
or
add
sub
cmpsb
jg
push
int
fistpll
adc
xor
add
arpl
test
and
lea
cmp
mov
loopne
repz
dec
xchg
subb
mov
adc
sbb
cmp
sbb
xlat
push
fxch
js
pop
call
mov
ljmp
int
mov
neg
ficoml
lds
mov
cmp
ss
sbb
mov
arpl
orl
mov
xchg
decb
lds
fldl
pop
imul
jnp
cmpsl
mov
std
pop
xor
mov
mov
iret
jbe
pop
cmc
pop
mov
xor
cmp
mov
inc
xchg
dec
fisubl
xchg
mov
popa
fsubrl
push
adc
push
jb
repnz
jns
sarb
lods
iret
movsl
fistpll
or
in
in
in
in
push
cmc
mov
push
or
bound
repz
out
notb
incb
dec
or
jo
mov
cmpsl
imul
xor
test
add
pop
cmp
or
fstpl
pop
sbb
mov
imul
sbb
pop
xchg
fucom
lahf
nop
ljmp
add
dec
cwtl
test
cmp
sbbl
inc
mov
out
js
out
imul
je
xchg
or
sbb
dec
in
mov
test
stc
out
pop
push
es
xorb
add
jle
and
jns
push
sbb
add
mov
sbb
movsb
mov
scas
sub
pop
cs
xor
or
int
xchg
mov
add
sub
lcall
into
or
in
cmp
int
cmpsl
rorb
lods
jl
or
sbb
push
xchg
dec
in
lods
ficomps
fiadds
mov
call
inc
cmc
mov
je,pn
bswap
int3
cmc
jmp
repz
mov
pop
mov
in
pop
xlat
aaa
lret
pop
aam
xchg
in
movsl
cmp
or
lahf
rclb
xchg
xor
add
lea
rol
sub
js
sub
push
iret
jle
push
loop
sarl
and
jp
out
push
shr
and
gs
xor
in
jmp
inc
into
xchg
ds
movsb
enter
mov
cltd
and
cmp
stos
xchg
cmp
cmp
add
push
mov
jmp
in
insb
dec
or
movsl
push
shll
cmpsb
xor
sub
pop
and
jge
clc
in
cmp
pop
imul
dec
xchg
rcr
inc
incb
push
rorl
addr16
jb
mov
xchg
mov
adc
and
pop
xchg
cmc
pop
mov
dec
sbbb
mov
movsb
mov
mov
ljmp
lcall
daa
mov
fdivr
jmp
dec
popf
ljmp
lret
or
fs
inc
xor
xchg
mov
inc
jl
icebp
lock
mov
push
insl
mov
add
jo
jb
jl
pop
mov
or
mov
mov
mov
jae
xorl
fld
mov
push
scas
dec
in
orl
lods
flds
fs
and
add
jbe
div
adc
add
jg
mov
pop
add
cmp
stos
dec
loopne
push
mov
fwait
push
divb
popf
inc
pop
outsl
cli
scas
fcompl
ret
scas
fidivrs
mov
mov
rorl
inc
jecxz,pn
sbb
jl
cli
js
jns
pop
and
sub
push
in
in
stc
adc
mov
jb
xor
nop
jo
sti
clc
add
jmp
imul
lret
sbb
sub
adc
stos
hlt
sti
jnp
push
lret
fs
fisttps
xchg
imul
xchg
pop
adc
outsl
int3
flds
cmpsb
mov
les
pop
aas
inc
xchg
cmp
pop
and
fldcw
cwtl
test
and
lds
xor
call
ret
aad
imul
mov
xor
fists
or
push
loope
adc
mov
xor
xor
rcl
lea
adc
js
jno
in
hlt
mov
mov
shll
test
out
pop
aad
mov
add
insb
loop
dec
and
out
popf
or
or
cmp
adc
lret
scas
popf
and
int3
mov
popa
mov
cmc
mov
testb
out
sbb
jne
les
fistps
pop
adc
mov
sub
popa
sub
xor
or
jnp
cwtl
fidivrl
mov
cltd
push
mov
loop
fwait
rcll
inc
lcall
push
ds
xor
fs
push
fmuls
pop
sbb
mov
jnp
xor
jb
or
push
faddp
fcmovne
fbstp
shl
mov
mov
xchg
push
popf
out
jno
stc
movsb
call
adc
adc
js
imul
push
insl
dec
out
bound
sti
jmp
addr16
cmp
adc
divb
cmp
cmp
mov
sbb
push
loopnew
push
dec
aad
dec
add
or
bound
pushf
shlb
xchg
jecxz
vrcp28pd
jbe
sbb
or
sbb
imul
fcomps
stos
inc
pop
pop
xor
insb
ljmp
push
test
cmc
mov
xor
pop
and
aad
pop
cmpl
clts
push
push
push
sub
pop
and
clc
cmp
add
sahf
les
jp
sub
daa
mov
fsubl
mov
adc
int
and
cmp
divb
pop
mov
stos
sub
pop
cmp
hlt
xchg
mov
push
cmpsb
cwtl
sbb
push
aas
mov
fcom
add
dec
inc
stc
aam
inc
cltd
imul
fidivrs
scas
roll
cmpsb
jg
cmp
pop
fwait
lds
dec
dec
cld
iret
icebp
stos
insb
jne
cvtpi2ps
loope
in
imul
in
xchg
push
pushf
xchg
jne
push
push
mov
mov
insl
dec
push
sbb
aas
mov
add
mov
mov
movsb
frstor
insb
mov
dec
mov
int3
cmp
rcr
cmp
pusha
out
loop
add
rol
divb
int
in
jl
push
pop
iret
sub
push
stc
bound
xor
xor
xor
jo
inc
ss
mov
xchg
ret
mov
sbb
push
pop
inc
cld
cli
pop
jns
es
mov
adc
dec
xchg
push
mov
and
sbb
jno
decb
int
cld
arpl
nop
es
adc
pop
mov
aas
inc
shrb
sbb
stos
mov
lods
jg
sub
pop
pop
cmp
lds
inc
aas
rorb
pop
push
movsl
xorl
xchg
std
mov
sbb
mov
mov
add
dec
pop
inc
sahf
xchg
test
int3
jle
scas
mov
pop
adc
add
add
mov
lcall
cmc
fs
out
cmpsl
mov
pop
mov
enter
pop
loop
push
dec
leave
shl
inc
mov
out
es
inc
in
jbe
hlt
rclb
in
loope
iret
icebp
popa
test
ds
or
adc
fldcw
cli
bound
jb
sbb
nop
xchg
cmp
ret
sbbb
pop
mov
fldl2e
in
cmp
xlat
shlb
push
mov
stos
xchg
test
xchg
mov
insl
sbb
dec
imul
or
aam
lods
pop
movsb
fdiv
push
push
cmc
out
push
sbb
test
es
lret
mul
stos
and
mov
test
std
pop
add
shrb
lods
push
movsb
ds
mov
jmp
jge
or
cmc
clc
addr16
or
fnstenv
add
lret
pop
lock
xor
in
add
testl
ljmp
add
jbe
imul
and
stc
xchg
not
inc
mov
mov
dec
ffree
sbb
inc
push
jae
jp
xchg
shl
pop
add
bound
inc
push
aaa
ror
or
leave
movsb
les
cmp
mov
xchg
out
test
lcall
adc
pop
mov
aam
jg
divl
roll
or
sub
movl
lret
pop
shll
orl
pop
jno
mov
add
mov
icebp
icebp
mov
sbb
mov
mov
adc
shl
xchg
pop
dec
cmc
mov
leave
xor
xchg
push
stos
add
inc
push
mov
out
lret
outsb
cmp
mov
inc
xchg
clc
dec
jb
test
xor
push
loope
xor
out
out
dec
xchg
xchg
jl
jg
push
xor
fildl
adc
lret
lods
xchg
cmp
enter
test
mov
aam
movsl
mov
push
fdivl
int3
dec
jo
loopne
push
cwtl
cs
jo
cmp
mov
pop
xlat
mov
sub
mov
jge
call
add
icebp
xchg
inc
add
imul
pop
int
insb
ss
dec
push
pop
das
mov
mov
adc
or
cmp
stc
inc
push
xchg
test
adc
aaa
test
aad
sub
or
mov
leave
push
das
add
mov
clc
insl
sbb
jle
lret
stc
je
nop
call
push
movb
jnp
xchg
sbb
pop
and
imul
push
push
mov
jo
bound
mov
sbb
mov
into
rcrb
mov
mov
sbb
call
jno
mov
push
xchg
mov
and
jne
andl
jbe
lock
lret
cmpsb
add
lret
mov
mov
push
stc
push
sbb
mov
sbb
std
and
stos
mov
mov
inc
sub
sub
ret
dec
pop
pop
xor
dec
shll
inc
mov
lods
xor
jle
mov
dec
inc
stc
pop
neg
jnp
loopne
fidivs
insb
pop
cmp
cmp
and
cmpsl
mov
mov
in
shlb
sub
fsubs
add
pop
and
mov
jne
mov
pushf
jecxz
mov
push
add
leave
xchg
jne
jp
rcrl
push
mov
sbb
jns
push
test
aam
push
lods
popa
jg
rclb
dec
data16
dec
push
mov
mov
je
xchg
into
clc
jae
add
xchg
xchg
in
pop
xor
js
cmp
pop
into
popa
je
pop
dec
mov
decb
pop
ret
push
mov
mov
mov
lret
jnp
mov
mov
add
mov
jl
or
pop
es
jg
adc
bound
cmp
dec
pusha
test
or
sbb
xchg
out
pop
push
adc
mov
jb
jge
dec
sbb
jns
rcll
lods
xchg
int
add
push
fmull
jnp
loopne
jle
jno
push
pop
fwait
push
fisttpl
push
add
lret
pop
ret
add
rolb
push
lock
icebp
and
aaa
jl
mov
pusha
jg
stos
pusha
mov
inc
mov
cld
add
xor
sub
cld
lret
pusha
sbb
in
pusha
mov
aad
push
dec
pop
in
inc
aam
scas
out
pop
das
std
inc
dec
sbb
xor
inc
xor
sarl
test
int3
mov
addr16
dec
push
fcomip
push
inc
lea
pushf
mov
mov
jnp
jno
arpl
fisubs
push
adc
push
test
or
pushf
inc
push
xor
or
aaa
movb
sub
sbb
mov
mov
mov
xchg
stc
or
and
jo
mov
repz
push
xorl
repz
inc
gs
xchg
add
std
sbb
or
mov
cmp
push
stc
sti
cltd
jmp
cmp
mov
xchg
add
mov
jmp
jne
mov
xor
or
jle
xchg
sahf
mov
test
popf
and
popa
mov
sarl
out
or
repz
hlt
add
dec
lret
leave
mov
ret
ds
fists
stc
cs
jecxz
mov
hlt
mov
inc
jae
hlt
scas
push
loopne
pusha
jo
popf
dec
test
call
icebp
jl
out
rolb
jl
mov
adc
cmpsl
mov
jno
rol
xchg
add
xor
xlat
dec
in
jne
div
pop
inc
xor
push
push
les
imul
pop
cwtl
push
out
push
jmp
dec
test
faddp
jge
or
test
out
or
sahf
mov
arpl
pop
mov
addl
mov
cld
out
jno
xor
lock
xlat
cld
add
xchg
hlt
cmp
cmp
or
and
jns
aas
arpl
jne
add
aam
lock
pop
fstps
es
lods
gs
test
mov
push
lcall
enter
lds
inc
and
inc
lret
lcall
fwait
mov
iret
leave
inc
test
xor
pop
divb
xor
adc
mov
adc
ss
fdivrs
mov
pop
jbe
dec
clc
mov
lret
daa
mov
rclb
or
xor
adc
rorb
mov
mov
dec
cmc
cmc
push
cld
cwtl
pop
mov
adc
push
xchg
jecxz
cmp
push
jg
cmp
mov
imul
push
popa
dec
orb
xchg
mov
dec
rclb
and
mov
ss
sti
mov
stos
fwait
sub
sbb
adc
insb
pop
int3
gs
clc
push
dec
sub
and
adc
jge
xor
in
es
mov
shl
jp
mov
add
je
add
into
mov
test
add
mov
sti
sub
jae
lods
gs
cmp
xchg
xor
push
push
sub
mov
push
mov
loopne
adc
bound
or
icebp
jne
cmp
xchg
and
inc
adc
push
pop
pop
adc
mov
or
int3
jnp
fidivl
jae
dec
sub
cmp
in
stos
mov
fistl
test
mov
pop
xor
lock
jle
test
and
push
idivb
mov
xchg
mov
add
xchg
loop
aas
adc
and
fninit
jo
movsl
iret
adc
pop
ret
push
cmp
cmp
push
push
push
adc
in
lods
xor
pushf
repnz
pop
cmp
mov
push
and
inc
or
push
cwtl
mov
xchg
mov
dec
aad
hlt
cmp
sbb
rorl
imul
fimuls
mov
mov
add
push
out
jmp
sbb
and
scas
idivb
dec
jl
xchg
imul
sbb
cmp
xchg
push
sbb
in
inc
out
mov
hlt
in
xor
shll
push
jno
mov
fcomp
stos
rol
scas
pop
divb
aad
add
fldt
imul
or
mov
movsl
ljmp
cmc
push
mov
test
std
cmpsl
ja
jl
les
cmp
movb
sbb
cmp
in
mov
adc
push
xor
jae
mov
jl
aam
inc
pop
cmp
ds
push
enter
nop
adc
sbb
mov
fucom
pop
xchg
pop
out
aad
in
sbb
xor
dec
sbb
add
pop
jo
stos
sub
sbb
xchg
lock
adc
imul
mov
mov
pop
xchg
pop
out
imulb
mov
sub
outsb
push
int
or
pop
xlat
cmpsl
mov
mov
jb
and
xor
lahf
inc
in
imul
dec
dec
mov
add
dec
out
aad
sub
pop
xchg
fwait
das
jno
mov
mov
sbb
sub
push
movsl
sbb
cmp
repnz
pop
imul
xor
and
push
inc
sar
scas
cmp
ret
cmp
addr16
xchg
neg
ret
add
adc
inc
push
cmp
pushf
xchg
and
lds
or
mov
ror
loop
insl
and
not
push
push
in
dec
mov
and
xor
andb
mov
test
push
xor
mov
jno
fiadds
xlat
inc
ljmp
cmp
xor
cld
mov
mov
imulb
xor
push
jo
insb
push
inc
cs
in
xchg
test
and
push
xchg
out
daa
movsb
sub
loop
lock
add
or
aam
add
pop
add
stos
jo
sbb
jl
fmull
ret
inc
insl
movsb
test
insb
sbb
ljmp
out
movsb
lds
sub
jne
xchg
outsw
in
aas
sbb
jmp
ret
sahf
jle
jb
jns
add
imul
adc
and
jbe
pop
hlt
pop
bound
push
call
int
imul
icebp
and
jae
inc
in
lret
xchg
lock
cmp
loope
and
jnp
cmpsb
cwtl
push
lods
push
sbb
xor
sbb
push
insb
mov
fists
inc
mov
dec
xchg
cmpsl
jb
into
xlat
or
ret
lcall
cmp
xchg
lock
mov
mov
in
mul
xchg
shrl
add
das
movl
push
or
iret
add
fsubl
hlt
push
rclb
arpl
call
loop
mov
popf
mov
xchg
push
inc
adc
test
ret
inc
mov
mov
xor
inc
fprem
loop
inc
sub
fdivrp
push
mov
out
dec
ror
cld
cli
xchg
ds
test
or
xchg
adc
jge
repz
lods
andl
dec
pop
and
xor
pop
or
cli
std
sahf
mov
adc
mov
sbb
and
sub
jl
lods
scas
sub
stos
call
pop
imul
jno
loop
mov
loop
dec
fmull
jbe
pushf
fisubrl
outsl
int
ja
scas
add
push
lret
jl
cwtl
inc
cld
adc
js
xor
test
mov
cmpsb
mov
imul
jnp
pop
pop
and
or
mov
pop
add
int3
mov
inc
dec
or
cmp
int
inc
inc
fwait
pop
push
mov
push
je
iret
mov
popf
or
and
dec
mov
or
in
adc
jg
xchg
out
mov
xor
xlat
sub
mov
mov
repnz
in
cs
sub
mov
jb
push
leave
push
mov
pop
mov
mov
aam
inc
pushf
pop
xchg
dec
adcb
fildll
xchg
mov
leave
xchg
pushl
sub
std
aad
lds
mov
sbb
pop
or
bound
fnstenv
mov
mov
sub
insb
push
in
cld
mov
mov
pushf
pop
fldt
jbe,pn
scas
jb
xchg
sbb
insb
adc
jbe
test
daa
mov
mov
mov
in
inc
mov
xchg
sti
xor
shrb
lret
pop
push
sahf
daa
test
test
pushf
and
push
mov
cmpsl
xchg
je
test
and
push
lods
mov
mov
ljmp
mov
enter
movsl
mov
cmp
lret
push
pop
jns
and
ror
dec
cmp
mov
insb
cmp
fwait
sti
aas
add
dec
adc
inc
sbb
mov
sbb
jmp
ja
aad
roll
push
cmpsl
cmp
movsl
lret
test
repz
dec
in
popa
movsl
xor
repz
loopne
push
and
sub
inc
clc
jbe
adc
mov
outsl
mov
mov
sub
mov
sti
es
popf
pusha
dec
cwtl
pop
loope
lock
cld
dec
push
sbb
lret
jnp
ret
orps
inc
js
fs
jecxz
mov
add
add
jbe
xchg
mov
jae
add
cmp
outsb
push
and
scas
outsl
adc
xor
adc
rcr
mov
cmp
xchg
insl
cld
sub
scas
jmp
jmp
out
icebp
mov
add
xchg
add
insb
mov
mov
mov
pop
jns
adc
push
xchg
lock
dec
sbb
pop
lds
sub
dec
push
mov
lret
mov
shl
mov
imul
add
scas
sbb
pop
imul
pusha
mov
into
out
sbb
mov
and
clc
shrb
push
jmp
sbb
sarl
pop
push
stos
fistps
or
repnz
divl
cmpsb
sub
nop
mov
jb
cs
push
adc
add
test
clc
hlt
add
cltd
inc
mov
mov
jge
std
sub
pushf
out
in
shl
fwait
push
sbb
iret
cli
jnp
ret
push
push
jecxz
mov
jge
push
or
ja
hlt
mov
xlat
and
push
pop
repnz
xchg
jnp
add
addr16
jno
xor
sub
mov
repnz
inc
testb
movsl
das
xor
ljmp
dec
mov
into
mov
mov
xchg
insb
inc
inc
cmpsl
sbb
adc
call
adc
xor
inc
jns
jl
lock
icebp
fbld
sbb
das
inc
shlb
es
movsl
repz
and
inc
les
sub
push
pushf
ja
stos
hlt
sub
sub
cmp
mov
clc
cmc
sti
and
outsb
shrl
adc
push
scas
xchg
cmpsb
fs
cmpsl
pop
iret
arpl
ret
pop
jge
popf
imull
icebp
or
push
mov
sbb
lret
imul
ret
cmp
lock
repnz
cmpsl
jge
adc
mov
repz
and
hlt
std
push
xor
stc
sbb
push
or
cli
and
out
xchg
shll
sub
lea
fwait
or
sbb
stc
bound
and
pop
cmp
rorl
cmp
push
repz
pop
mov
ret
ret
jmp
or
xor
add
add
loopne
or
mov
mov
les
xor
jmp
int
sbb
add
dec
jnp
mov
sub
stos
ret
gs
lcall
fisubs
stc
out
pop
inc
sbb
mov
push
inc
daa
jbe
rcrl
jns
add
subl
xchg
pop
loop
pop
sbb
jg
cmp
out
mov
push
fsubrl
or
xor
outsl
imul
stos
xor
lcall
mov
pop
jno
arpl
sub
sub
xchg
pop
repnz
jmp
inc
mov
push
les
sti
scas
int3
pop
inc
mov
mov
cmpsb
xlat
fwait
pop
scas
pop
sub
xchg
hlt
push
scas
std
push
mov
dec
fisttpl
nop
mov
jns
xchg
cmc
fisubrl
lea
dec
mov
xchg
lahf
inc
push
push
jae
push
mov
scas
dec
and
jge
xorb
mov
idivb
movsb
pop
pop
and
xor
popa
test
cmc
and
xor
push
sarb
out
lcall
into
cltd
cmp
cltd
inc
pop
inc
adc
mov
xor
fdivr
inc
out
lock
sbb
ret
xchg
push
orl
adc
andb
fistpll
adc
push
aad
jb
test
or
popfw
jb
mov
xchg
sbb
nop
push
cmpsb
inc
cmpsl
repnz
or
cld
iret
outsl
jo
sub
mov
fimull
xchg
pop
jle
ljmp
push
inc
rcl
inc
bound
pop
je
ljmp
xchg
mov
outsb
add
jle
and
sti
jae
add
dec
cmpsl
je
ret
add
dec
popf
or
inc
inc
or
pop
push
arpl
rorb
adc
in
mov
lcall
in
clc
sub
inc
mov
sub
jb
jl
jmp
outsl
popf
sbb
and
mov
cmpsl
push
and
shl
cmovno
sub
int3
int3
jno
mov
shlb
out
mov
push
clc
push
fadds
mov
sbbb
aaa
adc
outsl
push
cmp
std
mov
cmp
mov
mov
rcll
xchg
in
clc
scas
outsb
xchg
scas
push
mov
mov
pop
sbb
push
lock
sbb
das
pop
aas
stos
je
les
shlb
inc
addl
jbe
jecxz
bound
pop
dec
push
mov
leave
sahf
les
jbe
aam
jne
add
jge
push
sbb
mov
jmp
pop
mov
std
jbe
jecxz
jge
lahf
imul
cmp
sub
jge
popf
push
jmp
jl
or
pop
mov
jne
jb
or
mov
sbb
or
test
or
rcll
mov
sbb
adc
cmpsl
fidivs
mov
push
or
dec
and
xor
jo
addr16
push
dec
pusha
mov
lret
es
mov
adc
mov
pop
stc
call
sub
dec
rorl
call
call
sbb
sub
ds
pop
pop
fsubs
mov
xor
loopne
js
loope
adc
pop
sahf
jmp
add
loop
rolb
iret
dec
roll
lahf
mov
xchg
mov
push
adc
test
ret
add
pop
dec
mov
sub
test
insb
sub
sbb
inc
fists
ficoml
sbb
je
jecxz
int
cmpsl
sahf
orl
nop
cmc
push
xor
les
adc
mov
cmpsl
ret
mov
jne
inc
aam
iret
in
arpl
mov
mov
jecxz
dec
ljmp
fdivrl
lret
xlat
jnp
bound
out
mov
fidivrl
pop
and
and
or
into
es
lods
scas
scas
or
int
ret
addb
lahf
mov
jne
sbb
daa
addr16
jbe
push
std
or
sub
insb
mov
movsb
add
and
mov
mov
call
std
aam
lahf
xor
xlat
inc
cmp
mov
xorb
or
inc
outsb
cmc
adc
cld
mov
xchg
imul
lea
fnstsw
push
out
int
leave
dec
aaa
mov
mov
test
mov
push
jae
aad
clc
les
ficompl
pop
popl
sbb
push
rcrl
cmc
fildl
leave
imul
mov
inc
and
pop
xor
or
mov
sti
push
testb
repz
add
das
stc
sub
mov
mov
lea
push
add
push
in
andl
fldl2t
notl
mov
xor
scas
mov
adc
cmpl
lahf
cmp
push
cmp
dec
pusha
je
cltd
ss
jmp
repz
aaa
xor
cmpsl
jbe
inc
movsb
sbb
shlb
inc
lcall
sbbb
mov
lcall
xchg
shl
insb
cmp
inc
daa
arpl
dec
pop
lods
dec
lahf
jmp
scas
cmp
js
xor
loop
inc
ret
popl
sbb
rclb
cmpsb
lcall
xchg
stos
les
xchg
imul
mov
pop
fucomi
out
ret
out
xchg
js
aad
pop
shl
incb
out
out
push
mov
rclb
adc
jno
outsl
add
les
pusha
addr16
mov
mov
and
imul
pushf
pop
aaa
das
and
cmp
daa
sub
out
push
and
push
add
xchg
ljmp
insl
pop
mov
push
mov
xchg
pextrw
movsl
or
xchg
jp
pop
into
push
pop
jae
xor
xchg
lea
push
into
fimuls
push
sbbb
push
mov
imul
mov
in
sbb
push
xchg
and
mov
shr
push
test
fstl
ss
sbb
xor
hlt
fsubp
enter
push
dec
sub
push
lret
adcb
dec
rcrb
dec
lcall
adc
andb
add
mov
jmp
and
mov
mov
or
into
out
or
jno
in
lahf
test
pop
lods
mov
cmp
xchg
aam
pop
pop
outsb
and
ret
mov
adc
lods
sahf
add
test
adc
icebp
hlt
movsl
in
xchg
stos
fldcw
inc
fxam
std
add
imul
jg
in
std
push
push
cmp
ljmp
xchg
mov
push
jnp
cmp
pop
xchg
popf
mov
pop
cs
pop
iret
pop
int
insl
movsl
mov
sbbl
not
ret
inc
xchg
stc
mov
xor
int3
rcr
in
sbb
cmpsl
mov
push
pop
dec
outsb
push
movsb
and
iret
cmp
and
push
pop
in
repnz
in
xor
jb
lds
or
mov
in
mov
pop
jne
mov
or
push
test
sbb
subl
mov
lret
xor
mov
jmp
add
in
pusha
rep
cmp
xchg
xchg
sbb
push
pusha
xchg
test
fbstp
notb
in
or
push
les
clc
inc
pop
add
adc
ds
iret
mov
ss
ss
in
in
push
xor
pushf
cwtl
xor
pop
mov
scas
sti
push
movl
xor
mov
call
xor
inc
addr16
xlat
pop
xchg
pop
mov
jg
cmp
es
nop
or
nop
rol
jecxz
neg
jl
sbb
ret
iret
outsb
adc
cmpsb
aaa
jge
outsb
jge
scas
hlt
imul
test
jge
pop
mov
in
pop
jecxz
out
aad
and
test
divl
out
pop
insb
les
pop
xor
out
dec
orl
push
jg
cmp
xor
pop
mov
adc
and
repnz
jecxz
cld
fmull
shll
test
jl
pop
jle
xchg
aas
jno
jae
xchg
packsswb
xor
push
sub
xor
mov
add
jmp
xlat
inc
xchg
rorb
push
rorb
sbb
xor
mov
lock
push
push
in
test
mov
sub
es
loopne
mov
fidivrs
jae
xchg
push
test
int3
scas
cmp
mov
push
mov
cli
pop
jge
jecxz
mov
mov
cltd
jns
mov
nop
sbb
or
or
sbb
movl
cmp
repnz
adc
lea
jnp
xchg
lret
insl
fsubl
mov
jmp
cmp
iret
aad
sbb
xchg
mov
sub
out
lods
dec
std
cmp
ret
fists
popa
xchg
jnp
mov
stos
testl
xchg
test
test
xchg
sbb
and
out
sub
xchg
insl
cmpsl
jp
outsb
outsb
pop
dec
ljmp
sub
in
clc
mov
out
insl
jle
and
hlt
arpl
ret
dec
out
mov
jne
dec
pop
jbe
je
in
popf
mov
in
and
push
cwtl
mov
sahf
or
sbb
jae
test
fs
inc
fcomps
mov
add
xor
shll
push
movsl
adc
loope
dec
sbb
fstps
jbe
jns
adc
leave
mov
add
mov
aam
or
movsl
jbe
or
cli
std
data16
cltd
jg
mov
jae
sub
dec
push
cltd
add
call
ja
jecxz
cmpsl
arpl
out
shr
sbb
jae
adc
in
sbb
cld
shll
subb
or
test
int
pop
xchg
clc
add
mov
add
lods
inc
loopne
inc
pop
or
pop
xchg
xorb
sub
jmp
testl
in
push
mov
xor
fdiv
repnz
or
xchg
in
push
add
imul
ret
aam
pop
xchg
enter
ss
repnz
lods
ljmp
push
ret
cmpsb
cmp
popf
jmp
repz
pop
lret
xchg
fs
or
mov
dec
mov
leave
jecxz
enter
add
push
out
rorb
out
push
fs
enter
push
loope
aas
push
pop
stos
push
mov
jmp
into
loop
test
in
push
sub
sub
movsb
movsb
or
mov
mov
fidivrl
cmpsb
lcall
sti
lods
xchg
and
lods
mov
bswap
xchg
sbb
cmpsl
movsb
xor
mov
push
add
jg
xchg
mov
clc
pop
xlat
fstpl
aam
daa
adc
adc
push
lahf
das
ret
xor
adc
lea
mov
xchg
push
push
notl
cmpsl
xchg
lahf
push
mov
jge
mov
inc
in
cmpsb
stos
dec
sbb
sti
inc
jne
mov
mov
xor
jl
xor
roll
subl
inc
jge
pop
gs
mov
jl
dec
repnz
inc
daa
mov
hlt
mov
sahf
les
popfw
jb
sub
pushf
or
in
pushf
cmpb
mov
add
push
jb
jb
pop
std
data16
and
xchg
mov
out
dec
xchg
rcrb
adc
adc
inc
loop
enter
and
xor
push
adc
ret
in
shrl
add
imul
sub
adc
jno
clc
outsl
sbb
test
lret
mov
xchg
inc
mov
aaa
cwtl
xchg
imul
sbb
pop
cmp
in
mov
push
pushf
adc
jo
mov
inc
xchg
add
cmp
jo
nop
push
xlat
out
xor
cwtl
jns
lock
mov
xchg
sti
inc
sbb
mov
push
dec
aad
out
jns
sub
jp
jo
adc
lods
xor
sbb
jg
sti
mov
jae
and
push
xchg
imul
inc
test
outsb
lods
dec
loop
pop
xchg
jg
iret
sub
pop
mov
push
cmc
or
lea
inc
fmul
aas
add
and
addr16
vmovaps
or
sarl
lret
rcll
add
aam
sub
mov
pop
push
in
mov
repnz
push
pop
xor
lods
push
push
jecxz
sarl
mov
fwait
xor
push
movsl
iret
dec
lds
stc
ja
pusha
inc
aas
mov
jge
mov
test
and
push
mov
and
sbb
mov
jns
add
push
jle
cltd
and
cmp
sbb
push
adcb
mov
fwait
mov
push
sub
mov
pop
ljmp
inc
cmp
andb
jb
shlb
and
outsb
shl
jnp
repz
out
test
mov
add
mov
push
sbb
fbld
jp
gs
sbb
jge
addr16
cmp
sub
mov
fstl
mov
mov
mov
imul
mov
xlat
fidivl
notl
sub
pop
insb
insb
jbe
and
adc
cwtl
out
xchg
mov
jae
push
adc
xor
mov
cmp
mov
imul
outsl
andb
das
movsl
test
xlat
sbb
dec
pop
and
jle
in
and
add
xchg
mov
cmp
popf
jle
mov
xor
or
call
ret
pop
arpl
mov
mov
arpl
int
jp
cmp
data16
dec
mov
pushf
xlat
lods
xor
xchg
inc
xor
test
push
hlt
xor
or
or
mov
loopne
cmp
xchg
xchg
mov
fcoms
mov
cmp
incb
inc
add
repnz
insb
or
sbb
sub
arpl
sbb
or
mov
out
loopne
pop
pop
jb
adc
test
sub
mov
lahf
lret
cmpsl
adc
add
int
pop
aam
fbstp
jne
arpl
pop
out
insl
add
push
push
pop
mov
jo
cld
mov
sub
push
shl
aaa
hlt
push
mov
sarb
mov
inc
xchg
hlt
stos
cld
xchg
cmp
iret
adc
cwtl
outsl
or
outsb
add
and
pop
pop
rcl
std
mov
jge
test
xchg
icebp
mov
popa
mov
push
xchg
xchg
xchg
sarb
filds
xor
icebp
sub
xchg
dec
pop
out
cmpl
fstpl
lret
pcmpgtw
cmp
and
repz
sbb
dec
mov
dec
es
push
jnp
out
jp
mov
cmp
cltd
pop
test
pop
mov
les
push
rcll
dec
mov
xchg
jbe
pop
sbb
adc
into
mov
out
mov
stos
cltd
popf
in
mov
test
jbe
inc
xor
call
sbbl
sub
push
pop
aad
cmp
std
push
sub
pop
icebp
adc
aad
pop
add
pop
push
mov
iret
xrelease
add
inc
mov
or
dec
stos
std
mov
pop
sub
sub
iret
insl
fstl
mov
popf
insb
cmp
mov
pop
mov
jns
sbb
lea
or
mov
mov
xchg
push
test
adc
xor
dec
icebp
aaa
clc
mov
call
mov
rclb
pop
mov
sbb
cli
testl
dec
fcomi
iret
ret
clc
ljmp
xchg
xchg
es
in
je
mov
repz
pushl
push
mov
inc
and
xchg
adc
xlat
xchg
mov
enter
xchg
test
inc
jle
add
adc
adc
xchg
test
dec
xor
lods
xchg
rclb
jo
int3
cmp
mov
mov
push
fisubs
mov
jecxz
pop
lea
jo
scas
es
lret
aaa
jbe
push
xchg
ret
fdivs
outsb
push
sub
or
mov
xchg
push
incb
or
mov
shrb
mov
js
sbb
cmovle
in
test
add
sub
mov
mov
or
or
and
addr16
ljmp
mov
mov
jbe
loope
xlat
enter
icebp
enter
or
dec
arpl
jl
jns
xor
pop
pop
lret
push
adc
adc
xor
imul
cmp
adc
xor
xor
push
fistpl
adc
fmuls
mov
mov
in
cwtl
mov
cmpsb
sahf
leave
push
aam
mov
push
jnp
mov
lcall
inc
leave
and
pop
adc
sub
fisttpll
in
add
dec
add
stc
lods
or
jge
cs
adc
test
jns
das
sbb
jno
repz
sub
jo
pusha
dec
stos
push
fildll
and
cmpsl
ljmp
mov
pop
pushf
dec
int
add
sub
ljmp
scas
xor
je
fwait
out
inc
movsb
pop
dec
and
xchg
repnz
je
cmp
insb
mov
add
xor
popa
xlat
stc
push
xlat
faddl
ret
paddq
loop
lods
fidivs
fistps
jle
test
dec
sub
or
cmp
nop
mov
mov
js
push
sub
dec
mov
xchg
mov
mov
pop
lcall
cmp
xchg
int
jbe
mov
out
mov
pop
test
mov
gs
add
push
inc
inc
jo
and
ja
sbb
sbb
ret
push
dec
jp
push
scas
inc
out
loope
adc
or
movsb
movsl
stos
push
enter
add
ljmp
popa
pop
sahf
pop
mov
pop
xchg
adc
mov
repz
and
push
gs
mov
mov
aaa
insl
rcrb
test
xchg
xchg
js
inc
jge
and
dec
clc
sti
xor
leave
mov
enter
roll
icebp
pop
lds
cltd
stos
jno
push
jo
rcll
or
add
inc
aam
loopne
lods
cmp
sub
ljmp
mov
pop
popa
sub
fisubrs
test
sbb
dec
mov
inc
mov
pop
pop
lcall
adc
nop
mov
roll
cld
pop
out
pushf
and
ljmp
in
xchg
inc
adc
mov
pop
stos
xor
imul
sbb
rorl
sarl
mov
jge
push
inc
aas
cmp
jb
dec
or
or
fnsave
cmp
fwait
mov
push
les
into
cltd
pushf
mov
popf
mov
out
mov
in
and
std
adc
adc
daa
xor
sahf
sub
int
jae
jne
mov
rcrl
sbb
jg
nop
outsb
add
pushf
or
pop
sbb
aas
sub
pushf
in
xchg
xor
pop
int3
sbb
mov
dec
ret
aas
bound
cmp
ret
repz
or
gs
sub
movsb
pop
adc
pop
cmp
jecxz
adc
data16
push
out
sub
push
in
sahf
lea
shr
push
or
loope
dec
xchg
mov
lods
es
xor
jle
scas
pop
xchg
xchg
inc
pop
cmp
push
pop
mov
movsl
loopne
xlat
in
add
adc
std
aas
cmp
add
dec
mov
add
and
adc
sarl
cmp
cmpsb
ret
add
xlat
loop
stos
adc
sub
jl
dec
inc
outsb
stc
adc
sahf
pop
adc
decl
pop
pop
pop
insb
fldt
pop
cmp
ljmp
pop
xor
scas
jae
rcll
push
mov
mov
sub
pushf
pop
push
test
sub
iret
fs
int
jp
mov
fiadds
push
test
xor
add
in
out
push
xchg
inc
pop
stos
lret
cli
adc
dec
loop
push
stc
aas
insb
inc
jno
pop
insb
and
dec
mov
test
mov
insl
jne
subb
cld
ret
mull
shll
add
or
sti
jne
test
cmp
ja
filds
ror
inc
dec
lds
das
jns
cli
jge
mov
mov
adc
ret
rcrl
aas
mov
repz
std
movsb
jb
pusha
js
rcll
bound
xor
stos
pusha
clc
push
aaa
xchg
mov
inc
mov
or
push
jno
cwtl
xor
add
xor
imul
push
mov
xchg
sbb
adc
xchg
xor
lcall
pop
popa
bound
out
cmp
arpl
cli
adc
aam
stos
inc
cmp
pop
xor
and
xor
jp
dec
into
adc
adc
cld
jmp
and
push
jge
mov
mov
mov
fcomps
divb
out
xchg
mov
lahf
imul
push
clc
mov
frstor
mov
test
sub
loope
hlt
cmp
xlat
xchg
xchg
push
adc
xchg
xchg
jp
push
add
enter
adc
pop
gs
leave
or
push
sahf
cltd
icebp
into
cmp
loope
push
cmp
je
out
pop
sbb
push
cltd
adc
add
mov
pop
fs
ret
mov
mov
test
outsl
xchg
gs
lock
xor
push
negl
mov
xor
mov
shlb
push
jl
fs
sti
aaa
arpl
xor
mov
sbb
and
sub
test
and
jle
xchg
stos
jecxz
push
hlt
nop
test
aam
sub
jg
loope
mull
lret
in
ss
sti
cmp
sbbb
cmc
pop
bound
mov
aad
scas
aas
inc
fld
xchg
cmp
mov
decb
add
pop
ja
ficoms
fucom
dec
ljmp
cmc
subl
jmp
mov
test
loope
int3
in
lock
lret
repz
ret
ja
test
inc
jl
sub
xor
mov
das
mov
mov
xor
xchg
insl
mov
jecxz
dec
mov
push
jne
mov
rcll
sub
adc
hlt
sub
aaa
inc
mov
shlb
insl
sbb
in
xchg
roll
mov
xchg
ljmp
xchg
jecxz
fiadds
pop
inc
dec
add
pop
inc
inc
adc
xchg
dec
inc
movsl
dec
emms
insl
negb
mov
lea
jg
iret
cmc
shll
adc
fldenv
xchg
and
push
repnz
xchg
inc
xchg
pop
pop
cmc
imul
mov
sbb
lods
out
dec
jp
ljmp
inc
sbb
xor
jmp
cmc
ljmp
ljmp
scas
stc
cmp
push
test
mov
inc
repz
idivb
in
out
orb
gs
cmp
pop
inc
out
lods
out
pop
pop
adcl
cwtl
test
repz
addr16
ljmp
aam
mov
lods
lret
bound
inc
xchg
popa
inc
xchg
pop
pop
mov
out
sbb
fldl2e
mov
and
addr16
nop
pop
xor
loop
xchg
adc
jg
insb
call
loopne
frstor
shll
rcl
scas
js
test
inc
in
sub
mov
lds
add
movsl
cli
repnz
jg
inc
fildll
subl
pop
repnz
push
roll
fwait
outsl
or
std
scas
je
ret
xor
jmp
jle
inc
xchg
inc
int
cmp
jns
das
lret
sub
ds
idivb
mov
cmpl
sub
cmpsl
cli
test
aad
popa
sub
movsb
sahf
fwait
shll
or
cli
or
dec
inc
insb
cmp
mov
fsubrl
dec
xor
mov
cmp
and
mov
shrb
mov
pop
clc
fbld
mov
mov
mov
fstps
pop
add
dec
xchg
add
push
mov
lods
enter
cli
xchg
xchg
xorl
inc
js
mov
mov
mov
mov
mov
lea
scas
sbb
push
pop
int3
ljmp
sub
push
mov
mov
mov
fadd
mov
cmp
mov
cmpsb
sti
sub
and
sbb
sahf
jle
sub
fs
adcl
sbb
cmpsb
mov
mov
sub
xchg
adc
into
mov
dec
xchg
push
je
jmp
jl
inc
sbb
add
jns
xchg
inc
mov
cmpsb
sbb
aad
ds
mov
sub
scas
xchg
xor
data16
pushf
pop
mov
or
mov
mov
cltd
incb
xor
dec
push
enter
xchg
or
insb
mov
fwait
rclb
testl
jns
and
sub
fs
cmp
lea
mov
inc
sub
div
cmpsl
aam
and
mov
das
in
fmul
mov
cltd
daa
jo
xor
stos
push
mov
test
mov
mov
mov
jae
mov
jge
out
arpl
jmp
fsubp
mov
rcrl
mov
and
xor
insl
push
mov
dec
push
jmp
xchg
push
mov
mov
and
mov
aas
or
jle
mov
insb
popf
bound
pop
xchg
cmp
ficoml
jl
cmp
test
mov
pop
nop
test
rcrl
lcall
pop
movsl
xchg
mov
pop
pusha
movsb
inc
jb
adc
sub
mov
in
imul
push
add
adc
jp
sbb
stc
xor
mov
scas
adc
mov
xchg
test
push
stos
and
or
mov
dec
jmp
ficoms
fimull
adc
dec
in
rolb
add
and
sub
xor
repnz
movsl
pop
popf
mov
inc
inc
inc
xchg
clc
lahf
xchg
pusha
jecxz
mov
xchg
pop
loope
add
xchg
pop
pop
lock
mov
jg
xchg
das
repnz
lea
inc
and
repz
pop
movsl
xchg
cmp
xor
jl
push
fdivrl
push
and
in
mov
lahf
mov
rclb
scas
add
add
push
rcl
popa
mov
es
cmp
cmp
sti
and
sbb
sub
in
push
sub
add
adc
xchg
or
xchg
pop
mov
xor
push
jle
cltd
inc
nop
movsb
data16
sub
testl
xor
push
stos
pop
int
xchg
inc
add
sbb
nop
push
push
cwtl
add
cltd
das
mov
testb
sbbb
sar
pusha
xchg
loope
push
in
dec
int3
fs
into
add
adc
dec
cmp
or
mov
dec
into
leave
adc
imull
iret
sbb
arpl
dec
dec
fists
shrb
dec
adc
jne
sarb
pop
inc
into
push
pop
test
aad
and
ljmp
ljmp
or
shll
mov
mov
mov
inc
lods
js
adc
mov
icebp
adc
mov
mov
inc
jae
xchg
das
mov
orb
mov
daa
jne
cmp
subl
lods
repz
stc
aas
mov
pop
or
pop
outsb
andb
inc
loop
cmp
out
ret
push
paddd
outsb
mov
jno
frstor
dec
loope
inc
in
xchg
pop
imul
sbb
je
cmp
xor
ljmp
sub
clc
xor
daa
jl
xor
sub
ja
insb
inc
jmp
jl
psubsb
inc
movsb
loopne
stos
jge
mov
xchg
mov
mov
push
xor
mov
mov
lret
lods
push
and
lret
cmpsl
dec
xchg
jle
std
push
sub
cmp
test
shlb
int3
bound
fisttpll
xor
or
mov
push
inc
call
push
xor
pusha
jae
cli
push
in
cmp
clc
outsb
push
loop
sahf
icebp
mov
cmp
push
push
repz
out
push
pop
cs
inc
jl
rolb
ss
adc
adc
fidivl
add
jne
push
mov
adc
jb
sub
fisttps
xlat
xlat
xchg
add
aaa
and
testb
jbe
cmp
and
and
test
outsb
fldt
mov
jno
xlat
lret
in
pop
sub
rorb
cli
dec
push
lock
lret
mov
jmp
icebp
dec
xchg
mov
push
lea
das
je
in
add
sbb
mov
xchg
stc
addr16
out
and
adc
mov
jl
mov
addr16
lret
fsub
xchg
je
lahf
mov
xchg
movsl
and
cmp
movsb
inc
fxch
pop
mov
mov
mov
std
stos
in
in
push
rcr
stos
push
or
std
adc
push
lret
pop
adc
and
sub
cltd
adc
mov
addr16
push
mov
sub
das
sahf
in
mov
inc
push
pop
loop
add
mov
push
cs
aad
testl
push
jl
mov
pop
sub
rcll
or
sub
cmp
gs
xchg
in
push
pop
or
scas
cmp
xchg
loopne
adc
lds
fbstp
push
neg
xor
stc
cmpsl
inc
jmp
into
or
add
daa
xor
jle
addb
nop
sbb
cmp
shrl
aad
mov
fwait
xor
cmp
xor
add
pushf
push
jle
fimull
add
arpl
ds
xor
stos
cs
mov
xchg
push
lds
mov
jnp
mov
fdivrl
xchg
cmp
sbb
lock
push
lret
mov
sbb
and
jb
sti
mov
div
mov
adc
push
push
and
jl
daa
gs
rorb
xor
sbbb
inc
push
dec
mov
sbb
sbb
add
inc
ss
sub
inc
push
xchg
pop
popf
mov
push
and
fnstcw
mov
or
pop
mov
pop
lahf
adc
push
iret
adc
mov
cmp
inc
adc
punpckhdq
scas
sub
loop
xchg
out
push
insb
and
push
arpl
movsl
jecxz
je
testl
inc
xchg
and
dec
rolb
rclb
or
fdivr
sbbl
or
test
adcl
xchg
fldcw
jae
pop
cmp
in
ret
rorb
repnz
inc
cmp
dec
shrb
jge
inc
rol
mov
inc
jne
pop
mov
out
loop
pop
clc
test
icebp
jb
fsts
jae
pop
inc
mov
push
mov
fnstcw
adc
imul
or
adc
fnsetpm(287
mov
lcall
loopne
mov
pop
sub
sahf
dec
std
push
mov
iret
add
outsl
jno
sbb
dec
popf
sub
daa
dec
and
mov
xor
mov
nop
dec
int
cli
push
mov
aaa
test
js
repnz
out
mov
test
aaa
sbb
lds
in
jo
jl
fstl
adc
xor
cmp
fs
mov
test
jecxz,pn
cmp
cli
fwait
jmp
out
or
adc
xchg
push
lock
adc
inc
push
pusha
mov
xchg
sti
mov
fidivl
popa
dec
dec
frndint
popf
movsb
mulb
mov
inc
jmp
add
mov
mov
je
ret
xchg
and
scas
push
in
add
sbb
stos
pop
dec
xchg
vmovmskps
push
mov
je
mov
lret
fwait
add
pop
inc
xchg
push
mov
aaa
subb
aam
repz
mov
loop
sub
lods
xor
aaa
rcrb
jns
cmp
test
test
ret
imulb
scas
sub
sbb
jecxz
dec
pop
adc
mov
cwtl
jno
fldcw
jne
or
mov
aam
dec
mov
inc
mov
mov
xchg
pop
cmp
sbb
fisttpl
js
and
out
sbb
xor
mov
mov
adc
xchg
mov
sub
cmp
adc
lret
jle
xchg
cs
aas
cltd
adc
test
lret
stos
pop
cltd
xor
cmp
test
mov
add
jns
pop
mov
ret
pop
pop
xor
aas
add
in
xchg
mov
cmp
add
in
jl
out
lcall
ds
repnz
popa
push
adc
into
rolb
stc
add
repnz
repz
pop
outsl
call
push
and
push
cmc
bswap
insl
inc
in
lods
ja
push
sbb
mov
fsub
fwait
lds
repz
inc
orl
mov
xchg
jle
daa
mov
pop
sub
jo
popa
int
or
xchg
aad
faddl
xchg
int
and
adc
sahf
stc
ds
je
xor
in
xchg
leave
xor
jecxz
add
mov
xchg
in
outsb
xor
mov
or
cmc
daa
xchg
data16
bound
call
test
push
adc
shl
sbb
push
add
fcoml
mov
addb
jno
divl
lahf
cld
pop
lahf
gs
rorl
mov
imul
or
in
xor
pop
push
xor
xorb
cwtl
scas
push
dec
insl
sub
xor
push
sub
mov
mov
dec
and
insl
push
add
mov
jecxz
repnz
clc
cmp
pop
ja
and
pop
pop
sub
in
sbb
aas
repnz
jg
das
jb
mov
mov
or
xlat
mov
inc
push
out
aas
sbb
inc
movsb
test
cs
add
dec
and
insl
jbe
cmp
dec
repnz
xchg
std
out
adc
mov
push
mov
roll
fwait
and
cld
dec
lock
adc
mov
loopne
fldcw
leave
iret
gs
mov
sbb
loope
pop
xchg
fwait
lcall
pop
pop
addl
les
mov
repz
out
push
fists
sbb
xchg
hlt
jnp
mov
int
data16
ret
ret
rcl
and
pop
outsl
mov
fstp
ficomps
jne
std
xchg
sbb
data16
enter
jg
push
pop
sbb
mov
adc
outsb
xor
xor
pop
repz
push
in
adc
jle
or
mov
xchg
mov
adc
sbb
stc
sbb
addr16
aas
mov
xchg
lahf
sbb
mov
aam
pop
cwtl
stos
or
imul
test
and
pmuludq
sbb
repz
inc
cmpsb
jl
xor
xchg
repnz
hlt
mov
stos
repnz
je
sub
sub
call
aaa
aaa
push
jno
flds
ss
mov
in
jecxz
cld
jge
ds
call
fs
aas
leave
test
xchg
or
xchg
sbb
ds
push
pop
pop
jne
leave
xor
out
movsb
scas
xchg
mov
in
cwtl
das
pop
sbb
arpl
cli
iret
outsb
cwtl
push
cmpsb
push
mov
sub
ja
dec
jns
rolb
int
pop
arpl
ficoml
test
ds
jecxz
cwtl
jo
jnp
iret
xor
lds
or
sbb
sbb
push
repnz
mov
push
out
addl
mov
mov
jb,pn
sbb
shll
nop
pop
cmpsl
dec
addl
enter
cs
sub
dec
jge
xchg
push
cli
pop
shlb
inc
sub
cli
hlt
jno
lcall
lcall
in
mov
ja
or
cmp
xor
cli
xchg
jg
pop
push
les
pop
cwtl
or
and
jno
sar
sub
lcall
lcall
and
xchg
das
adc
xlat
push
in
jp
jecxz
fsubs
push
sti
pop
fldt
adc
xchg
push
call
jno
sarb
leave
lds
scas
mov
lret
mov
mov
inc
les
rorl
ja
xor
rorl
test
push
rcrb
in
outsb
es
push
xor
fwait
les
fidivs
in
dec
popf
dec
setp
fidivl
jno
popa
out
sahf
or
imul
jecxz
sub
cmpl
sub
push
popa
add
lds
add
xchg
int
nop
aad
call
cmp
mov
jmp
pop
inc
mov
rorl
sub
push
aad
pop
scas
out
jnp
stc
xor
mov
pusha
es
aaa
cmp
fcmove
or
jae
jno
add
and
inc
dec
push
or
pop
xchg
iret
add
popf
imul
popa
frstor
dec
imul
lods
push
cmp
push
sbb
outsl
pusha
pop
jecxz
movsb
popa
dec
cwtl
pop
test
push
aam
repz
or
and
scas
loopne
arpl
pop
push
fldl
mov
loop
out
in
clc
mov
fmulp
movsb
aam
jbe
pop
ds
push
jns
xorl
add
je
jbe
out
sti
daa
jb
sub
pop
daa
sti
inc
mov
sub
movsb
addb
sbb
inc
jbe
shr
scas
inc
mov
add
bnd
sbb
jmp
push
push
cmpsb
mov
ja
mov
in
add
xchg
xchg
arpl
jg
inc
fidivrs
push
fisttpll
sbb
sbb
or
xchg
test
ret
jecxz
ret
pop
mov
enter
xchg
pop
inc
push
mov
pop
xchg
jg
push
jge
add
mov
jl
inc
in
mov
jmp
adc
xor
je
in
popf
push
pop
outsb
pushf
in
dec
inc
rorl
push
inc
in
dec
shlb
mov
test
or
sahf
mov
push
jmp
or
push
pop
mov
lock
shl
std
inc
jl
jecxz
fisttps
shll
pop
testb
jl
loopne
xchg
nop
xchg
or
sub
adc
daa
cvtps2pd
mov
dec
jmp
pop
add
xor
arpl
jmp
cmpsb
xor
sbb
lods
sbb
jns
fdivrs
imul
push
sub
gs
dec
sbb
and
jb
xchg
xlat
in
outsb
or
cltd
mov
xorb
and
inc
xchg
cmp
add
aaa
test
cs
fwait
add
xor
daa
xchg
adc
stos
mov
and
cmp
sub
cmp
and
xlat
test
test
pop
insl
loop
out
les
insb
add
test
bound
adc
add
enter
repz
scas
stos
sbb
lds
or
testl
movsb
add
ds
push
pop
cmp
test
push
ja
in
rorb
adc
cltd
ds
jb
in
sbb
es
enter
data16
sahf
dec
xchg
fstps
lods
pop
movsw
xor
es
mov
xchg
ljmp
push
aaa
stos
mov
sub
mov
insl
or
and
push
outsb
loope
in
loopne
sbb
inc
ret
push
adc
lds
dec
bound
xchg
and
lret
and
testb
sbb
jp
lock
inc
sbb
push
and
gs
fstl
inc
jmp
pushf
fs
lahf
cld
mov
fmull
aaa
or
dec
push
dec
dec
call
hlt
inc
adc
xchg
adc
adc
movsb
repnz
out
in
cmp
jnp
jo
inc
lret
or
loope
hlt
jns
pop
pop
pop
push
mov
std
lret
loopne
or
ffreep
push
sbb
and
les
testl
aaa
movsb
xchg
rcl
lcall
scas
push
push
fwait
mov
xchg
pop
xor
add
push
cmpsb
mov
les
mov
jge
testl
pop
out
imul
dec
push
leave
sub
lcall
inc
insb
pop
in
ror
adc
daa
or
pop
addl
cs
lcall
sbb
fbstp
lds
cmp
bnd
addr16
dec
or
insb
outsb
test
ss
cmpsb
je
cs
dec
js
mov
inc
dec
hlt
push
add
stos
aaa
mov
jg
cmc
fisubs
adc
inc
bound
xchg
xchg
jns
push
mov
dec
or
sbb
es
push
xchg
cli
sbb
pop
rcll
addl
sub
ss
inc
xor
out
aam
xchg
addr16
cmp
or
mov
in
scas
jo
or
loope
cmp
mov
lea
cs
test
outsl
jp
int3
aaa
mov
cld
mov
in
int3
ret
and
lcall
mov
sbb
add
aas
dec
rcr
lret
lahf
add
xchg
sub
mov
xor
movsl
jnp
cs
lods
inc
xor
fistpll
mov
mov
loope
adc
pop
cmp
jmp
cmp
pushf
fmuls
notb
insb
outsl
in
fistl
or
imul
test
push
add
pop
lcall
scas
mov
mov
add
scas
call
jnp
daa
hlt
mov
hlt
push
in
aas
inc
xchg
mov
dec
ret
enter
mov
imul
push
leave
in
ret
out
mov
cmpl
addl
xchg
aaa
pop
pop
cmp
lahf
shl
xchg
mov
outsb
div
and
repnz
insb
test
sub
pop
ljmp
cmp
mov
imul
arpl
inc
push
inc
mov
jmp
popf
fists
mov
fdivp
lock
push
lods
xorb
mov
hlt
dec
mov
stc
out
add
xchg
or
arpl
stc
xlat
sti
cld
pusha
pop
cmp
aas
push
jno
pop
cmpb
popa
out
lret
xchg
or
vphaddwq
pop
popf
loope
out
mov
lds
faddl
dec
xchg
push
decl
jo
pop
insb
repnz
jnp
cwtl
je
stos
jno
test
nop
out
je
lahf
imul
dec
out
cwtl
jl
stc
mov
stos
je
lret
mov
lcall
std
cmpsb
jmp
pop
stc
cmp
lcall
nop
xchg
and
sub
bound
data16
stos
dec
cmp
cmc
push
mov
adc
pop
mov
stos
testl
push
inc
fsubrs
mov
fwait
lods
fldenv
sbb
testl
mov
mov
es
mov
or
push
pop
push
mov
jg
addr16
mov
add
insl
stc
mov
sbb
popa
sub
sbb
and
jecxz
dec
jnp
xchg
ret
fwait
cwtl
imul
ss
pusha
cltd
mov
sub
shlb
test
fistps
mov
xchg
iret
pushf
jmp
aas
in
adcb
fucomi
mov
test
and
pop
mov
insb
jns
fidivrs
or
jbe
mov
cmp
fs
ret
loop
test
xchg
xchg
inc
xchg
push
lods
sahf
add
jg
loopne
insl
or
sbb
test
daa
scas
ss
fdivr
xchg
jp
xchg
sub
pop
movsb
repnz
js
or
pop
mov
pop
dec
lcall
insl
popa
dec
scas
inc
cmc
ror
ss
jbe
mov
lods
lea
mov
dec
cs
pop
movsl
dec
popw
and
movsl
sti
insl
sti
xchg
mov
pop
or
notb
out
pop
leave
mov
shl
mov
je
popa
fbld
roll
lods
sub
mov
mulb
sub
mov
daa
cwtl
mov
mov
stos
fisubrs
and
pop
add
jg
pop
adc
aaa
and
cmp
sbbl
inc
push
hlt
and
mul
xchg
enter
jg
je
loop
add
push
dec
sbb
sbb
inc
ss
ljmp
roll
sub
cwtl
inc
cmpsb
cmp
xchg
xlat
inc
pushf
imul
and
pop
sbb
testl
jl
mov
das
lock
xchg
mov
push
rcll
sbb
scas
or
mov
out
out
fdivl
xchg
jg
push
out
lret
push
and
adc
rcrb
pop
lods
pushf
xlat
nop
mov
push
push
and
daa
stos
out
test
aaa
cli
dec
fs
adc
mov
cmp
xor
jmp
inc
cwtl
xchg
mov
push
stc
push
add
stos
adcb
jo
roll
jg
test
ljmp
icebp
push
jno
in
pop
stos
sub
mov
outsl
call
inc
scas
push
inc
add
pushf
push
pop
cmp
fnstenv
fwait
ja
stc
add
std
mov
xor
cmc
and
adc
push
scas
and
mov
mov
ja
rolb
enter
in
pusha
xchg
lods
dec
and
or
cmp
inc
bound
push
sbb
add
lahf
sbb
int3
inc
test
fstpt
in
mov
push
into
fmull
das
das
call
mul
mov
sbb
jnp
or
mov
sbb
fldcw
push
push
cwtl
repnz
fdivrl
das
mov
insl
cwtl
int
pop
sahf
nop
xchg
ret
inc
and
das
and
xor
mov
and
jb
je
push
push
jp
aam
jae
loop
insb
cld
ds
cmp
mov
int3
scas
ss
cmp
jns
pop
dec
xchg
inc
into
pushf
data16
push
push
sbb
adc
test
and
cmp
xchg
and
push
test
dec
data16
add
adc
dec
test
sub
sti
adc
dec
mov
leave
sbb
xchg
or
movsl
push
sub
sub
insb
or
mov
bound
mov
cmp
inc
xor
and
pop
int3
lahf
xchg
sbb
jle
imul
or
cmp
arpl
les
mov
sub
sub
std
lock
pop
mov
icebp
repnz
or
andb
jg
and
cmpsb
push
adc
in
data16
xlat
mov
adc
imul
shlb
stos
lahf
mov
add
sub
dec
out
cmp
lahf
leave
fistpll
repnz
lea
ret
jmp
pop
cmp
mov
jnp
mov
lock
lods
sarl
sahf
sub
sub
or
aas
ds
stos
xchg
mov
adc
adc
gs
cmp
inc
cltd
and
mov
push
push
mov
test
repz
pop
jl
sahf
adcb
pop
enter
mov
roll
aas
int3
in
sub
and
xchg
loopne
shll
push
sub
dec
xchg
mov
cli
sahf
push
jmp
stc
ret
or
sahf
outsl
jp
or
cmp
mov
mov
jbe
mov
sbb
dec
xchg
sbb
fsts
or
sti
xchg
ficoms
ret
mov
pop
xchg
in
lods
push
jl
xchg
xchg
les
or
pusha
push
sbb
add
mov
aaa
pop
mov
jae
aad
rol
push
adc
xchg
lahf
xor
into
cs
jmp
mov
push
xchg
push
cmp
dec
sbb
in
int
daa
mov
xchg
jo
std
jmp
xor
mov
out
test
mov
inc
dec
aad
mov
shlb
icebp
dec
mov
add
or
aam
sub
stc
lcall
pop
add
push
mov
push
cmp
xchg
cmp
hlt
dec
scas
or
push
sbb
adc
andb
xchg
jmp
data16
sahf
xchg
cltd
xor
cmp
sub
andl
or
xor
mov
ljmp
scas
cli
movsl
mov
int3
push
imul
sbb
outsb
xor
pop
and
mov
mov
sub
cmp
push
dec
jbe
std
imul
je
out
mov
maxps
nop
sub
or
inc
xchg
inc
sahf
sti
aad
push
lods
sub
ja
jge
je
xor
aad
add
scas
loopne
lret
mov
pop
push
int
pop
fidivl
mov
sub
cld
mov
cmpsb
mov
cmp
loopne
cmp
adc
pop
insl
negl
lock
inc
xor
xchg
out
ret
inc
sar
and
mov
mov
jmp
test
cmp
adc
jp
push
insb
mov
jle
adc
mov
mov
pop
ss
sti
aad
or
negb
dec
dec
sub
lods
mov
sahf
lods
jmp
lcall
dec
ret
inc
pushf
jo
insb
aas
fwait
adc
movsb
pop
xchg
add
inc
sbb
pushf
mov
stc
cmp
add
fdivrs
inc
xor
adc
out
jno
cmc
mov
adc
sub
sub
cld
inc
xchg
pop
pop
adc
jge
mov
adc
mov
icebp
dec
pop
aas
sub
mov
push
cmp
or
test
inc
dec
pop
mov
dec
inc
pushf
sub
scas
andl
xor
shl
icebp
jg
mov
outsb
sbb
push
and
aaa
das
dec
or
shll
test
ret
xchg
jae
and
pop
inc
jp
mov
orl
lret
or
clc
or
push
cs
dec
jns
cmp
lods
mov
enter
jae
je
push
dec
adc
mov
push
or
lea
int
inc
pop
pop
dec
rorl
mov
cmpsl
aam
add
test
out
incl
dec
sahf
mov
hlt
clc
dec
sub
jge
je
loope
dec
fildl
outsl
loopne
insb
orl
add
and
imul
mov
mov
cs
pop
adc
push
clc
xor
pop
insb
shlb
rorl
xchg
pop
fdiv
jecxz
pop
pop
or
test
es
mov
and
adc
push
xor
push
mov
movsl
inc
xchg
ja
mov
scas
rorl
push
repz
ds
inc
cwtl
add
hlt
rorb
jg
flds
mov
cltd
int
inc
test
cltd
inc
jg
push
popf
sbb
adc
mov
shrl
ss
jns
cwtl
pop
xor
bound
and
jge
jno
jns
enter
repz
js
sub
inc
sub
mov
lret
xor
lods
jae
sti
jne
out
jmp
aas
mov
sbb
es
in
inc
rorl
popa
lret
pop
push
cmc
pop
mov
fyl2x
adc
and
xor
out
imul
cmpsl
mov
dec
inc
or
mov
cmpsb
mov
call
xchg
ljmp
pop
add
andb
in
xchg
cltd
test
popa
imul
jge
jle
roll
sub
mov
icebp
sbb
dec
lods
enter
inc
pop
test
inc
cmpsb
cmp
cmp
push
data16
dec
xchg
nop
cmp
and
add
mov
and
dec
scas
int3
dec
movsb
cwtl
in
movsb
into
dec
adcl
lahf
clc
sbb
pop
mov
pop
adc
jnp
repz
mov
jl
xor
push
sub
push
lahf
sub
dec
jg
mov
cmp
lock
pop
sub
xor
mov
insb
arpl
out
ljmp
mov
sub
scas
jge
lret
and
leave
ds
aam
mov
mov
ss
mov
lret
cmp
mov
das
in
mov
jmp
jp
pop
push
push
das
dec
mov
lahf
es
fdivl
sbb
in
sbb
cmp
shrl
sub
push
mov
outsb
pop
outsl
mov
movsl
sbb
lds
int3
jl
loope
push
imul
stos
adc
mov
or
inc
iret
dec
add
xor
scas
xor
push
js
aas
pop
push
daa
sbb
andb
in
mov
ss
nop
ret
mov
or
sbb
cmpsl
dec
movq
push
inc
ljmp
and
aas
test
lcall
pop
jg
lods
push
lret
fcmovnu
dec
jbe
je
adc
pop
in
jle
cli
mov
pop
dec
mov
dec
xor
mov
lock
mov
dec
dec
stc
pop
fwait
sbb
push
fs
xchg
xlat
pop
jae
dec
sar
push
faddp
push
loope
cs
fiaddl
icebp
aam
hlt
popa
push
or
inc
popf
mov
popa
push
leave
dec
mov
dec
mov
or
sbb
mov
iret
sbb
xor
leave
pop
mov
lea
lret
jnp
leave
mov
ljmp
jno
pop
data16
pusha
xchg
insb
rcll
fcmovnb
mov
xlat
pop
mov
pop
loopne
xor
or
xor
gs
test
xchg
pop
dec
xor
xor
sbb
push
pusha
or
lret
mov
test
testl
push
adc
sbb
push
inc
pop
sar
call
in
jne
arpl
lret
add
fwait
fs
out
mov
mov
xorl
lret
cwtl
imul
cmpsb
cmp
xor
lods
inc
popa
jecxz
aad
mov
loopne
aaa
dec
or
popf
je
mov
or
cmc
mov
dec
pop
sub
in
scas
xchg
xchg
imul
sub
adc
mov
stos
add
sub
in
in
mov
lock
xchg
outsb
pop
mov
adc
pop
repnz
test
xchg
dec
stos
insl
push
popa
sbb
pop
jge
cmp
js
popa
mov
mov
fcoml
mov
sub
and
xchg
inc
mov
sbb
inc
and
scas
das
popa
mov
inc
sti
or
lret
pop
cmc
sahf
and
fcmovnb
lock
jnp
adc
cmpsl
jg
call
into
jns
jne
pop
lcall
lods
test
push
inc
mov
cli
jmp
shll
jns
rolb
cli
push
sbb
sbb
cmp
ja
and
lcall
jnp
push
cltd
std
test
jmp
in
dec
push
xchg
or
das
lods
iret
in
add
inc
mov
push
test
sub
jge
das
movsb
shlb
xchg
aad
add
lahf
out
inc
cmpsb
mov
inc
or
mov
dec
dec
pop
outsl
fiaddl
stos
and
pop
jnp
jbe
aas
push
data16
dec
adc
stc
adc
dec
xchg
pmovmskb
stos
mov
sub
mov
jp
dec
mov
jg
loopne
mov
imul
pusha
lret
sahf
cmp
mov
jne
jecxz
xlat
aam
fs
into
test
sti
test
jle
fs
or
dec
xor
mov
ret
jns,pn
iret
add
dec
enter
sahf
out
jmp
xor
dec
iret
ret
enter
jmp
xlat
lret
mov
inc
cmp
push
das
and
es
pop
push
mov
push
mov
mov
dec
shl
aam
xchg
loop
fwait
jb
xchg
mov
mov
or
and
pop
jno
cmc
je
sub
imul
nop
mov
mov
push
cmp
ljmp
cs
iret
xchg
mov
lock
out
xor
fs
loopne
out
ret
dec
jmp
movsb
stos
call
xchg
ficoml
inc
leave
inc
cltd
dec
popf
popf
push
xchg
cli
jbe
lods
mov
mov
andl
pop
enter
outsl
adc
or
pop
dec
mov
xor
cltd
sbb
les
sbb
and
mov
inc
bnd
out
push
jmp
push
movsb
sti
cli
fidivrs
lods
xor
adc
out
lret
adc
in
shll
test
icebp
xor
mov
sub
cmp
sti
mov
adc
lahf
adc
push
clc
lds
aaa
mov
and
adc
mov
pusha
rcl
pop
xchg
test
sti
xor
mov
xchg
imul
daa
mov
adc
aad
mov
pop
popf
sbbb
fsubrp
mov
test
dec
int3
jmp
inc
inc
cmpsl
jmp
insb
mov
xor
mov
jo
fldl
sbb
shrl
aas
pop
push
jmp
inc
push
lds
jmp
js
icebp
ds
add
adc
and
sbb
gs
pusha
jne
sbb
dec
cmp
sub
lahf
in
cmc
bound
out
mov
js
jg
fdivrl
das
adc
or
sbb
aas
movsb
movsb
jmp
pop
es
xchg
xor
jg
lret
shll
ret
mov
jl
jg
fs
jl
aam
mov
or
out
push
mov
test
jl
out
jae
sbb
push
mov
out
jmp
push
popa
lea
subb
les
in
stc
mov
cs
outsl
xchg
and
clc
lods
push
jne
sbb
psubusw
push
inc
cmpsl
cs
popa
cmp
addr16
sar
sbb
mov
mov
movsb
cwtl
dec
mov
xchg
xchg
sahf
dec
push
sbb
pop
inc
aad
cld
repz
pop
jmp
mov
pop
push
in
push
add
adcl
or
lahf
or
icebp
xchg
ror
int
mov
cmp
pop
pop
pop
cmc
mov
int3
and
stos
jmp
cmp
orb
and
sbb
mov
jne
outsb
outsl
lahf
orb
sbb
sbb
cwtl
cwtl
push
dec
aad
and
push
cmp
inc
fcomps
loopne
mov
rorl
xchg
movsb
test
cltd
outsb
and
xchg
xor
dec
inc
loope
ja
sbb
or
lret
adc
and
bound
out
xor
movsl
sbb
in
sub
filds
dec
or
push
das
inc
mov
ljmp
fs
or
jmp
cld
lods
outsb
cli
in
jnp
cwtl
fstpt
fidivrs
jp
lcall
cli
std
call
cs
test
dec
lods
sub
jae
fnstcw
jo
ja
nop
jge
je
xor
xor
les
add
mov
jle
scas
cmp
or
daa
jmp
jmp
hlt
js
lahf
push
sahf
insl
cmp
push
adc
xor
or
fsubs
push
push
jge
push
adc
add
jl
clc
mov
int
push
outsl
or
add
int
in
mov
xchg
push
addr16
imul
push
cs
mov
add
dec
inc
mov
cmpb
outsl
popa
pop
fcoml
frstor
mov
cmpsb
adc
mov
and
rorb
mov
fisttps
inc
in
or
xor
mov
js
jno
nop
notb
insb
pop
inc
fiadds
xlat
lret
xchg
jl
adc
mov
pop
dec
popf
jno
ret
cs
adcb
or
stos
mov
outsl
mov
jno
mov
add
rol
sub
mov
jg
iret
adc
mov
jle
pusha
inc
pop
mov
inc
sbb
cltd
mov
test
js
cld
xchg
mov
dec
inc
stc
rorb
mov
mov
mov
rcrb
push
cmpsl
xor
jbe
out
pop
cmp
mov
cwtl
jo
jge
mov
add
cmpsl
mov
loop
xchg
jg
mov
and
add
xor
int3
in
add
and
test
mov
hlt
lods
aas
jns
insl
sbb
mov
xor
loopne
xor
addr16
aam
mov
xchg
repz
pop
ljmp
pop
sbbl
je
mov
lret
pusha
xchg
sti
pop
sub
sahf
inc
iret
mov
leave
popa
mov
pop
jb
and
mov
pop
xlat
xchg
dec
fisubl
call
lahf
test
xlat
mov
int
lods
int3
xor
sbb
cmpsb
or
into
inc
dec
faddp
jae
or
fsts
add
mov
or
jmp
push
or
adcb
leave
jns
or
jl
stc
dec
fistpll
sahf
and
xchg
icebp
mov
incl
shlb
loop
sbb
cld
and
jne
cmp
or
pop
inc
push
sub
or
shlb
cli
or
out
in
add
jp
pusha
fsubl
int3
sub
mov
push
pop
or
jecxz
sub
xor
fisubrs
xchg
mov
pop
jae
subps
out
dec
or
dec
push
test
sub
imul
aas
cmp
mov
mov
pop
jmp
pop
pop
jbe
imul
loopne
cmc
mov
cmp
jl
or
fstpt
xchg
cmp
cmc
clc
scas
in
shrl
cltd
movl
jbe
cmpsl
imul
je
jg
jo
ret
jo
sub
ficompl
ljmp
daa
scas
cmp
cmp
jecxz
outsb
xchg
int
daa
in
sub
ret
cmp
ja
mov
push
les
inc
xchg
or
imul
cmp
dec
dec
lcall
sbbl
popa
shlb
fnstenv
cmpsl
fstps
ss
xor
out
pushf
cmp
out
xchg
or
sbb
dec
sbb
xchg
jns
out
scas
movsb
adc
mov
pop
imul
add
imul
add
mov
filds
repnz
dec
repnz
stos
stos
push
xorl
daa
xchg
repz
jnp
xchg
jge
jbe
ds
cmc
sub
cmp
add
pop
inc
and
les
pop
sub
mov
data16
test
lret
daa
mov
xchg
cmp
call
cmp
and
movsl
insl
je
adc
cmp
popa
out
mov
push
mov
or
or
shlb
mov
enter
sbb
repnz
shlb
pop
sbb
ret
out
push
or
ds
call
sti
pop
mov
and
je
inc
add
movsl
push
lahf
jle
jbe
fildl
aas
push
sarl
xchg
aad
pop
add
mov
add
adc
lahf
push
and
lods
cmp
xchg
nop
and
cmp
stos
or
ds
mov
pop
pop
outsl
add
das
pushw
push
adc
add
pop
scas
pop
in
sub
cmp
ret
inc
mov
mov
add
mov
push
mov
adc
pop
and
or
hlt
add
mov
ss
js
mov
cs
mov
xchg
pop
push
into
add
js
mov
cmp
mov
subl
adc
lods
sbb
scas
xor
adc
mov
cmc
mov
idivl
jne
and
mov
movsb
bound
loopne
mov
adc
mov
loop
mov
jo
lds
inc
jl
cmp
dec
or
fsts
sarl
inc
fnstcw
rclb
ret
outsb
sbb
pop
push
mov
cmpsb
jmp
push
jmp
mov
dec
or
int
fidivl
aad
or
jb
neg
mov
bound
pop
xchg
mov
test
jbe
scas
jnp
jge,pn
mov
fwait
cwtl
or
sub
cltd
sbb
mov
push
xchg
js
imull
mov
jbe
sub
xchg
xchg
jp
mov
cmpsl
leave
or
adc
jmp
test
mov
pop
rclb
int
dec
mov
jbe
outsl
outsb
xchg
fistl
test
inc
jge
movsl
cs
jl
pop
clc
mov
insb
and
mov
repz
ja
mov
lods
xchg
pop
and
out
mov
out
adc
leave
and
pusha
xor
mov
frstor
jmp
pop
mov
add
ret
push
xchg
xor
adc
push
loope
stc
cmp
es
xchg
add
pop
add
xor
cmp
xchg
xlat
test
out
cmpsb
repz
stc
jnp
hlt
mov
out
sub
js
orb
pop
cmpsb
shrb
push
fwait
sbb
adc
add
inc
cmp
mov
sub
push
lcall
iret
pop
in
xchg
add
out
pop
imul
into
cmp
mov
or
pushf
lea
sbbl
or
idivb
sbb
stos
mov
xor
cmpsb
dec
into
divl
dec
jae
sbb
pop
jo
or
loope
cli
or
inc
cmpl
lahf
call
jmp
fdivr
cs
or
loop
push
movsb
push
or
mov
scas
push
pop
stos
mov
push
mov
imul
cwtl
sbb
adc
mov
xor
fstpl
das
dec
mov
inc
lahf
add
push
or
add
fdivrl
adc
sub
ficoml
jbe
pusha
cmp
enter
fstpl
sahf
sbb
xchg
icebp
in
lods
pop
test
mov
fisttpll
mov
mov
mov
js
out
sbb
out
inc
dec
jecxz
push
aas
and
mov
mov
mov
movsb
shll
popa
xchg
jno
and
cmc
cli
xchg
sub
and
popa
xchg
sbbb
and
sahf
sarl
lret
mov
mov
inc
pop
in
imul
popf
jne
sahf
cmp
pop
xchg
test
stc
and
jno
push
cs
adc
jg
mov
pop
bound
arpl
jo
repz
xor
cs
ficomps
sbb
cmp
mov
out
adc
and
push
sub
jns
pop
xchg
inc
repz
inc
insb
mov
mov
hlt
fcoms
imulb
test
add
xor
mov
iret
imulb
push
rcrb
das
dec
cmp
ret
xchg
sub
mov
and
dec
arpl
int
mov
or
and
pusha
mov
fldt
lret
jae
cwtl
mov
or
out
lods
ss
cmpsl
sets
movsb
lret
xor
test
out
cld
popf
pop
aad
aam
test
push
js
xchg
cltd
and
jmp
popf
out
dec
xor
ret
cmp
lcall
or
mulb
loop
cmp
lods
mov
jp
adc
cmpsl
sub
out
push
sahf
mov
jg
cmp
jo
adc
sbb
cmpsl
mov
icebp
fistpl
sbbl
jle
pusha
js
push
cmpsl
fmul
add
enter
mov
nop
jno
mov
xor
imul
movsl
std
pop
and
mov
jne
repnz
push
inc
xchg
adc
adc
or
stos
mov
pushf
aad
mov
popa
pop
push
mov
xor
push
mov
lret
shll
push
dec
dec
fists
sti
jmp
in
mov
ret
addl
cmpsb
and
lret
jb
mov
imull
jle
jb
jae
sar
aad
sbb
popf
push
jmp
or
mov
sbb
mov
sbb
mov
cmpsl
mov
xchg
inc
je
outsl
rcl
mov
sti
inc
movsl
xchg
jecxz
sbb
ss
movl
push
sub
push
cmp
das
cmp
cmp
mov
cmc
dec
das
dec
mov
mov
sub
add
out
push
in
add
xor
adc
ret
or
sub
jbe
cmpsl
inc
adc
and
scas
push
dec
je
cmpsb
sbb
mov
pop
adc
pop
repnz
inc
mov
xchg
lods
xchg
push
cwtl
xor
dec
mov
loop
test
mov
stc
daa
std
fwait
xor
pusha
ret
repnz
shlb
aad
bound
div
out
and
loope
ljmp
sub
test
pop
data16
mov
aas
or
in
bound
push
adc
mov
cmp
lret
inc
add
imul
sub
inc
mov
fdivrl
adc
into
movb
mov
xchg
daa
jg
inc
insl
adc
mov
subb
jl
pop
push
pop
adcb
xchg
add
cmp
cmpsb
mov
outsb
jnp
cld
dec
or
aaa
mov
xor
aad
rcrb
shlb
adc
mov
mov
imul
cs
push
sub
orb
cmp
jl
insb
orb
push
add
fldenv
fisubrs
loopne
or
repz
scas
je
pop
inc
mov
push
cmp
pop
lods
outsb
xor
cmpsb
fisttpll
pop
push
mov
pop
movsl
enter
stos
scas
rcrl
stc
jl
mov
jp
mov
js
pop
xor
arpl
pop
and
adc
aaa
sbb
adc
fs
lahf
je
mov
cmp
pop
shr
testb
cmpsl
push
test
fbstp
inc
xor
lock
jl
sahf
je
pushf
cli
inc
and
xchg
clc
jnp
pop
and
imul
inc
lds
ret
push
aaa
cmp
mov
mov
dec
mov
xchg
push
mov
inc
xor
mov
push
scas
jle
les
test
scas
shlb
cmp
mov
xor
cli
pop
sub
and
mov
pop
and
out
rcll
push
push
lret
sarl
add
pop
cmpsl
scas
test
data16
mov
mov
mov
outsb
jg
enter
scas
andl
in
xor
insb
dec
push
mov
aad
xchg
fidivs
aaa
mov
imul
ret
movsl
iret
mov
dec
ja
loopne
jnp
push
pop
gs
lods
test
outsb
jno
dec
stos
out
repz
pop
iret
mov
mov
addl
pop
mov
adc
dec
lret
jmp
mov
fsubr
out
xor
inc
test
sub
inc
dec
cmpsl
and
cmp
xor
cs
inc
mov
addr16
mov
dec
mov
aas
mov
dec
mov
jmp
hlt
loope
lods
cmpb
pop
aad
enter
fdiv
mov
dec
xchg
adc
ret
cld
cmp
outsb
push
in
fucomp
incl
mov
xor
push
js
ret
sub
cmpsl
fmull
ret
inc
mov
stos
pop
addr16
cltd
mov
ja
and
sub
lahf
mov
mov
or
xor
inc
xor
mov
jmp
and
and
imulb
jo
out
cmp
add
popa
jg
insl
jnp
lock
in
divl
std
mov
fcoml
jmp
jbe
rolb
lahf
adc
sbb
mov
fmul
mov
dec
mov
xchg
ficoms
jnp
out
push
loope
dec
addr16
jno
mov
sti
out
push
xchg
in
mov
xchg
fcmove
push
add
in
adcl
rolb
push
cwtl
cltd
js
dec
in
mov
xchg
xor
push
scas
mov
jb
pop
lret
pop
out
jle
ja
push
lcall
jle
daa
pop
aam
push
and
test
cmc
out
mov
jmp
outsl
dec
adc
in
lds
add
push
or
iret
lahf
adc
imul
xchg
mov
push
rorl
aam
and
mov
ds
cmpsb
jns
xchg
sub
mov
push
in
stos
push
into
insb
loop
jg
subb
jecxz
call
add
sbb
inc
cld
lahf
mov
stos
or
cmp
inc
ljmp
xchg
mov
call
into
mov
add
inc
iret
ret
xlat
adc
rorb
or
push
pop
ret
outsb
mov
dec
push
inc
rclw
jne
pop
xlat
cli
push
int
pop
mov
imul
dec
fnsave
push
jne
fcompl
and
mov
xchg
mov
loop
pop
sub
add
fs
push
aaa
lods
mov
dec
icebp
pusha
lret
pusha
jns
push
outsl
mov
xchg
outsl
adc
icebp
pop
pop
dec
js
pushf
push
xchg
movsb
xchg
repnz
jnp
out
or
and
and
out
test
ljmp
jnp
lock
mov
ss
aad
mov
mov
cmp
sub
fstl
movsl
xor
cmp
movb
jp
popa
inc
sbb
out
into
jmp
or
test
not
mov
xor
xchg
js
repnz
scas
ss
int
sti
xchg
sbb
sbb
mov
lahf
cmc
not
xlat
das
xor
mov
mov
and
inc
addb
push
repnz
jmp
fsubl
mov
or
and
add
daa
mov
aam
pusha
jmp
stos
loop
leave
pop
sub
push
dec
sub
je
sub
into
pop
push
add
aaa
loope
popf
fwait
out
or
sbb
mov
fsubs
daa
inc
mov
fmuls
mov
lea
addr16
jp
movsl
adc
aam
jb
lret
sub
adc
ret
aad
mov
pop
lcall
xchg
cmp
mov
jecxz
mov
out
into
je
sbb
fistl
aaa
sbb
lods
es
push
mov
sbb
or
cltd
rcrl
stos
push
pop
push
inc
dec
adc
cmp
mov
cmpsl
sbb
inc
sti
dec
fadds
push
mov
ret
jp
pop
scas
mov
jo
out
mov
push
push
adc
test
push
xchg
lea
push
jno
mov
jg
mov
in
dec
lret
sbb
push
mov
or
jmp
leave
mov
sbb
and
ja
push
and
sub
xor
flds
rorb
sbb
pop
testb
xchg
shrl
mov
ss
fisttpl
push
aaa
lods
or
jl
fiadds
push
dec
ljmp
mov
xchg
cmp
pushf
in
frstor
xchg
clc
popa
xorl
mov
add
pop
xchg
mov
gs
push
dec
inc
and
mov
add
dec
loop
sub
fadd
cli
in
rolb
and
push
loop
xchg
aam
sub
sbb
adc
xchg
loopne
std
jmp
jae
mov
mov
mov
rorl
addr16
cli
divl
and
imul
in
sarl
mov
loop
xchg
outsl
pusha
sub
mov
and
cmp
pop
loope
incb
inc
stos
cmp
pop
adc
repz
add
daa
and
movsb
pop
cmpsb
and
sub
sahf
adc
pop
mov
xchg
mov
pop
push
jns
mov
push
xor
cli
imul
cmpsl
adc
inc
and
inc
jmp
jmp
std
push
in
in
stos
mov
daa
jbe
out
insb
mov
sti
cwtl
xorb
and
xorl
add
mov
and
cmp
call
cwtl
lods
test
mov
sarl
lds
and
or
fdivrp
lds
pop
jmp
sbbb
lea
jb
or
test
shr
sub
cmpsl
sub
push
add
inc
pop
inc
mov
inc
sbb
loope
push
mov
and
inc
subb
add
or
cmpsl
push
mov
shlb
push
cwtl
aam
aad
leave
mov
inc
adc
xchg
cmp
pop
jb
fcompl
jb
out
lea
xor
negb
push
in
push
mov
sar
jl
xor
pop
add
push
sbb
or
cmpsb
pop
rorl
dec
mov
push
arpl
loope
clc
leave
in
xlat
mov
push
mov
in
int
fistpl
cmpsb
loop
pop
and
loopne
pop
fdiv
xchg
call
push
and
in
or
sar
jmp
mov
add
out
rcrl
sbbb
xchg
dec
daa
in
xor
mov
inc
mov
cmp
popf
inc
and
sbbl
sub
js
xor
cwtl
fnsave
pop
dec
mov
jmp
mov
sbb
in
jp
add
ja
fcoms
in
scas
inc
mov
xchg
add
rcll
xchg
loop
or
test
js
mov
test
mov
daa
stos
loopne
in
hlt
xchg
into
push
gs
popf
cmp
ffree
out
xor
and
or
push
push
mov
jle
ja
lret
mov
sub
repz
shll
and
nop
fdivl
xchg
jle
mov
xorl
push
adc
adc
and
icebp
in
mov
push
lea
inc
dec
call
rclb
mov
sbb
push
add
xor
xchg
scas
stc
aad
sbb
mov
aaa
xchg
fidivs
addr16
stos
adc
jmp
cwtl
cwtl
or
jecxz
xlat
in
clc
insl
mov
pop
sar
jmp
lahf
sbb
mov
ljmp
sbb
mov
sbb
mov
movsb
fisttpll
add
and
lea
push
popa
pusha
imul
mov
sub
loopne
leave
aas
add
inc
dec
push
rcll
jge
xchg
lds
mov
imul
mov
je
out
fldenv
inc
jp
dec
jb
pop
mov
aad
pusha
das
xchg
cmp
cmp
aas
jge
or
xor
pop
insl
pop
je
fisttpll
jmp
in
lds
fdivrs
mov
cltd
xor
xor
in
sbb
dec
cs
sub
mov
sbb
inc
jmp
lods
in
in
repz
xor
test
in
out
repnz
xchg
out
fldt
inc
xor
insl
mov
out
jno
and
mov
lds
mov
xor
imul
pop
inc
xchg
or
clc
or
stos
push
inc
movsl
mov
jno
dec
in
pop
popf
jmp
jbe
fists
sbb
pusha
push
sub
aad
or
out
in
sbb
ja
pop
pop
stc
test
iret
jmp
cmp
push
sub
sub
psllq
adc
int
aaa
outsb
dec
lock
out
fdivr
jnp
pop
cmpsb
push
out
mov
lret
pop
mov
push
nop
shrb
cmp
in
jle
push
andl
les
arpl
decb
dec
and
das
sbb
bound
adc
and
add
push
sti
test
add
xchg
sarl
xchg
adc
outsl
fwait
sbb
es
push
push
outsl
pop
inc
adc
add
lds
mov
mov
outsl
and
mov
xor
or
pop
jecxz
arpl
push
xchg
dec
in
fs
pop
jg
adc
sbb
stc
or
or
out
xor
cmpsl
cmp
sahf
mov
fs
mov
push
das
sahf
cmp
sub
jmp
movsb
inc
jge
jae
fwait
js
jle
add
pop
jo
jo
pop
mov
andb
xchg
xchg
push
imul
xchg
incl
ljmp
roll
call
sub
out
jmp
cwtl
mov
jp
nop
jg
add
xor
push
addr16
daa
inc
idivb
pop
mov
mov
fistps
or
rolb
addb
lods
nop
call
dec
aad
push
or
cmpsb
leave
loope
stos
push
mov
jg
sbb
cmpsl
int3
jae
sub
je
imul
enter
repnz
in
mov
jne
movsl
inc
and
iret
cld
jle
es
daa
ret
fwait
sbb
fsubr
in
loop
call
jo
rorb
mov
call
lret
sbb
cmpsb
and
mov
push
push
mov
stos
sub
inc
jmp
popa
sahf
mov
lock
xchg
aam
mov
sub
clc
test
sub
dec
out
and
cmp
cmp
add
pushf
and
mov
out
cs
cmp
mov
cwtl
xor
lds
pop
stc
in
mov
jne
lcall
inc
insb
mov
fwait
mov
push
add
hlt
sbb
inc
cmc
inc
push
pop
xor
push
sbb
push
sub
negb
jl
pop
imulb
inc
or
mov
imul
loop
and
shrb
scas
hlt
enter
cmpsl
mov
shrl
ljmp
sub
into
cltd
cmpsl
adc
ds
nop
fistps
fwait
push
jecxz
mov
pushf
repnz
cltd
jo
aad
and
xor
push
pusha
xchg
mov
mov
adc
push
mov
cli
jo
dec
sbb
mov
and
cmp
push
mov
icebp
fadds
add
dec
ror
push
in
outsb
leave
mov
scas
add
inc
fdivrl
out
mov
mulb
ds
repz
jno
idiv
pusha
outsb
fstpt
sbb
aas
call
test
cmp
push
lds
sub
mov
std
sbb
push
push
xchg
and
daa
mov
psubsb
rolb
pop
mov
mov
repz
fdivl
dec
xchg
stos
xor
popa
scas
js
dec
shlb
pop
popf
push
movsl
sub
or
sbb
pop
lahf
sub
cmp
sub
insl
popf
int
jl
outsb
jg
or
adc
in
scas
iret
jle
mov
mov
lods
in
fisttps
std
pop
daa
push
xor
js
inc
add
movsl
sub
fistpl
test
scas
jmp
stc
dec
jne
push
int3
fcoms
pop
mov
dec
mov
insl
imul
fs
push
adc
bound
mov
gs
aas
into
mov
inc
xlat
call
pop
sbbb
adc
je
mov
inc
in
push
dec
out
cmp
popf
mov
mull
push
mov
adc
adc
dec
xor
xchg
xchg
data16
jb
jnp
adc
sub
pop
xchg
add
sub
lds
dec
iret
lods
adc
mov
xchg
sub
mov
imul
iret
inc
sub
jne
lcall
cld
dec
sub
fnstenv
pushf
inc
lea
dec
inc
popa
iret
cli
add
mov
jge
mov
adc
adc
pop
lods
jns
pop
jmp
sub
movsb
jae
xor
scas
or
mov
imul
mov
and
mov
and
adc
xchg
jle
aas
repnz
shlb
movsl
xchg
dec
dec
outsl
in
icebp
jbe
sbb
js
mov
ret
in
add
fadd
scas
pop
add
xor
bound
test
out
push
rcll
or
inc
xchg
jmp
inc
adc
loop
push
push
lahf
lret
or
mov
call
push
mov
dec
xor
rolb
push
ja
sub
addr16
aas
push
and
cs
loop
test
jns
xor
repz
dec
push
sbb
sub
loop
arpl
xor
out
cmova
sbb
sub
jecxz
cmc
data16
in
popa
rorb
sbb
mov
or
pushf
xor
sbb
add
dec
adc
inc
pop
vrcpps
pop
mov
mov
sub
and
test
jmp
mov
sub
fildll
das
pop
es
sbb
aad
inc
ficoml
fucomi
mov
mov
lods
mov
mov
mov
adc
or
out
dec
into
jge
ds
dec
xchg
sbb
mov
cs
push
add
xor
xchg
adc
sbb
adc
xlat
push
jle
iret
lock
sub
xor
or
loope
aad
shrb
jns
rol
scas
pop
data16
cmpsb
das
dec
jnp
pusha
mov
cmpsb
lret
lcall
loope
stc
pusha
jo
ljmp
addr16
int
les
lea
jmp
jmp
push
mov
lods
mov
xchg
adc
pop
mov
shl
xor
pop
pop
dec
subl
push
imul
cwtl
adcb
in
data16
cmc
mov
mov
push
xchg
addl
jae
test
cmp
push
inc
adc
ja
outsl
and
push
test
pop
add
xchg
clc
aas
popa
pop
dec
push
push
jecxz
leave
stc
repz
mov
and
clc
dec
xchg
adc
sub
cmp
in
and
push
sti
popf
and
shll
shl
xor
jbe
pop
test
ljmp
adc
jnp
mov
pushf
fidivs
add
int
fildl
loopne
sub
and
xor
jo
inc
loopne
shlb
lds
mov
and
xchg
pop
jmp
and
clc
sub
in
pop
fbld
add
and
int
sbb
and
jne
dec
xchg
sbb
fildll
jle
imull
adc
test
je
or
pop
stos
inc
subb
jno
dec
ret
js
jge
push
dec
jno
add
mov
pop
xchg
sti
adc
jmp
dec
cmpsl
lret
xchg
fsubl
mov
inc
mov
aas
arpl
pop
mov
mov
bound
mov
adc
dec
or
mov
fdivrs
pop
inc
pushf
je
xor
push
popa
dec
shll
lods
leave
xor
aam
test
push
fs
inc
pop
movl
mov
or
mov
pop
mov
sbb
int
inc
push
and
xor
pop
lcall
cmpsb
push
mov
subl
dec
jno
imul
pop
or
mul
fsubl
in
jo
xor
sarl
xchg
call
adcl
inc
push
movsb
mov
xor
xchg
pushl
mov
jo
test
sub
dec
lds
jne
add
cmp
add
cltd
mov
mov
movsb
adcl
shrl
insl
outsb
rclb
mov
imul
push
xchg
adc
ds
add
pop
mov
jge
stos
dec
mov
in
loop
mov
iret
sub
pop
out
ja
in
repnz
jg
mov
lcall
jbe
xchg
dec
jge
sub
mov
ret
mov
stos
push
dec
stc
lcall
mov
sbbl
pop
and
or
scas
aad
pop
incb
lahf
push
stos
test
pusha
adc
mov
and
pop
es
jne
fcomi
mov
stos
bound
scas
mov
aam
sub
rcrl
inc
and
js
push
push
mov
mov
fcomps
pop
xchg
insb
cmpl
cs
rcrb
js
xchg
sbb
xchg
out
std
fucomp
xchg
icebp
bnd
mov
jbe
hlt
cmp
xchg
in
mov
xor
inc
mov
adc
mov
pop
ss
or
inc
js
push
mov
mov
mov
fidivrs
enter
lea
fidivl
std
push
popf
test
or
enter
xlat
or
out
mov
push
sub
and
stos
pop
test
iret
lret
fstpt
pop
sub
push
xchg
xchg
add
dec
push
adc
cmp
jecxz
out
lret
xchg
cwtl
imul
adc
lea
ret
jnp
aad
movsl
andb
inc
xor
push
and
sbb
push
rcr
inc
xchg
shl
xchg
pusha
and
into
fwait
clc
popf
jno
rcrb
cld
mov
add
xchg
pop
push
xor
int3
mov
mov
bound
ss
xor
mov
repnz
and
xchg
inc
movsl
pop
mov
lods
fbstp
add
fsubs
jne
sbb
pop
sbb
cmp
sub
inc
adc
fstpt
in
arpl
cmpsl
jne
fistl
call
xchg
sub
movsb
or
int
insb
enter
into
das
and
adc
cmp
pop
ljmp
aam
lds
lock
repnz
pop
or
cmp
and
mov
ja
adc
call
gs
mov
ror
jmp
jmp
sti
pop
mov
cmc
cwtl
dec
sub
push
sbb
lcall
sbb
jnp
lahf
and
out
rcrl
or
cld
xchg
fdivs
aam
mov
ja
push
push
insb
xor
xor
aaa
int
pop
leave
outsl
push
dec
ljmp
daa
xor
je
mov
push
leave
xor
lds
popa
mov
outsl
xlat
lds
out
xor
scas
push
adc
and
nop
jne
push
sub
lahf
cmp
push
fidivl
and
push
jno
pop
std
mov
inc
out
sbb
add
xlat
xor
jne
and
mov
jae
int
dec
xchg
sarl
mov
mov
hlt
inc
ja
popfw
bound
mov
frstor
add
addr16
fisttps
dec
loop
pop
sub
into
insb
dec
movsl
out
loop
cmp
xor
test
pop
adc
enter
cmp
stc
aad
test
aaa
bound
push
inc
add
mov
inc
jl
adc
cmp
sbb
sbb
mov
cmc
lods
jbe
jbe
adc
dec
sub
ds
xchg
mov
push
jg
loopne
mov
jne
ret
cmp
mov
jmp
dec
xor
sbb
lods
xchg
scas
and
popa
js
pusha
std
ja
sbb
iret
call
lea
add
lock
mov
xchg
ljmp
cmp
mov
inc
cmp
jp
push
leave
mov
fdivs
mov
addr16
sub
push
add
mov
sbb
and
xor
push
cltd
icebp
inc
stos
nop
jnp
sub
loope
ljmp
mov
sub
lods
mov
mov
repnz
cmpsb
imul
sub
lock
sub
pusha
fs
add
loope
xchg
sub
push
inc
cwtl
rcll
push
pop
dec
cmp
out
loop
or
inc
xor
es
mov
inc
cmp
dec
sbb
push
sahf
xchg
push
mov
es
and
movsl
movsb
test
mov
xor
inc
push
xor
subb
mov
jecxz
in
sbb
xchg
mov
lahf
adc
lahf
mov
push
aam
mov
pop
add
sub
mov
cwtl
cmp
dec
pop
jl
mov
pop
das
test
sbb
test
stos
loope
add
push
cmpl
inc
pop
xor
xchg
ror
dec
xchg
xlat
insb
mov
cmp
loopne
leave
loopne
imul
sbb
fiaddl
xor
push
loop
out
mov
fwait
jl
loope
inc
js
mov
dec
lret
stc
test
into
jg
rcll
pusha
popf
pop
rcrl
or
lods
imul
or
gs
enter
jp
dec
lods
mov
sbb
or
je
xchg
outsb
lea
dec
js
mov
aas
dec
mov
enter
adc
movsl
mov
aad
cmp
inc
push
rolb
in
pop
or
and
sbb
repz
aaa
stos
mov
or
sbb
or
or
jbe
loop
pop
stc
filds
push
sarb
cld
mov
pusha
les
incb
cmp
cmp
or
shlb
xor
adc
add
lds
sbb
sbb
inc
mov
stc
into
xchg
jne
push
mov
fbstp
rorb
fwait
cmp
imul
sti
xchg
cs
int3
lahf
test
inc
sahf
sub
shll
inc
decb
fisttpl
mov
mov
arpl
repnz
sbb
xorl
iret
imul
mov
pop
dec
xor
pusha
int
mov
inc
pop
ss
imul
out
mov
push
jae
in
fstpl
aam
lret
js
and
mov
test
addr16
out
sti
addr16
fcmovnbe
outsb
sub
jno
xor
enter
inc
int3
daa
cmp
inc
mov
xchg
mov
mov
icebp
das
imul
leave
push
xor
insb
jg
dec
push
jae
fistpl
sub
jle
daa
and
mov
and
jns
sbb
aad
scas
jne
and
fldt
pushf
and
push
xor
fcmovu
fistps
mov
dec
pop
jno
dec
aam
imul
xchg
fstpt
dec
addr16
mulb
xchg
xor
mov
adc
push
push
mov
xor
les
std
add
js
clc
jmp
dec
aaa
daa
jne
cwtl
sub
call
inc
mov
pop
jecxz
test
pop
inc
xor
add
mov
or
cmpsl
fnsave
sahf
mov
cmpsl
ret
xor
mov
loope
push
fsts
sbbl
mov
dec
in
cld
aam
repz
je
outsb
dec
ljmp
xor
std
adcl
sbb
sbb
mov
mov
stc
insl
nop
loop
xchg
dec
sub
out
mov
jno
mov
scas
mov
mov
mov
xchg
xchg
push
push
lds
dec
lds
mov
sbb
je
out
pop
dec
rolb
or
fstp
loope
call
push
pop
inc
leave
movsl
bound
mov
pop
add
or
jecxz
push
repz
xchg
jle
aas
jmp
aam
cmp
dec
or
stos
icebp
cli
rolb
imul
aam
mov
mov
push
adc
daa
or
ds
and
sti
movsb
mov
mov
cmp
pop
lds
outsb
push
pop
gs
pop
sbb
fdivrs
mov
cmp
mov
sbb
xlat
aas
xor
sahf
lods
mov
mov
je
push
mov
push
mov
push
nop
and
cli
jg
loopne
loop
push
inc
mov
sub
xor
out
in
sbb
jp
push
fbld
aas
std
and
nop
inc
fxch
inc
sbb
and
insl
fdivrs
mov
jg
fnstcw
cmp
adc
rolb
push
es
repnz
sub
in
notl
pop
pop
das
inc
popa
lock
mov
fwait
cmc
adc
clc
lahf
mov
sub
fsubrl
fmulp
jle
ds
dec
xlat
addr16
pop
inc
jb
ret
packuswb
mov
mov
mov
fists
loop
out
out
movnti
shll
outsl
xor
into
jnp
mov
sub
add
icebp
jae
push
scas
cmp
jecxz
fsubrl
popa
cld
push
scas
xchg
cmpb
jns
subps
and
mov
cwtl
mov
jle
mov
sbb
ret
dec
jae
call
xor
leave
add
xchg
jb
fmuls
repnz
jmp
xchg
movsl
jo
lcallw
decb
cmp
cmp
fbstp
dec
jg
outsb
jmp
inc
cli
call
lea
aad
xchg
push
dec
test
or
xor
jp
pop
or
push
aam
jecxz
daa
lock
or
int
xchg
shrl
push
xlat
mov
mov
cld
fisubl
inc
int
aas
fistpl
fmull
ss
stos
cmpsl
stos
or
shll
jl
shlb
aad
push
nop
hlt
mov
cmp
sbb
clc
jb
call
test
in
xor
out
and
into
pop
mov
cwtl
pushf
xor
test
loop
add
mov
adc
push
mov
or
pop
push
test
adc
jno
and
xchg
scas
out
push
mov
ret
faddl
sti
icebp
inc
lods
xchg
test
and
cltd
iret
add
xor
adc
pop
or
aaa
out
insl
xor
xor
arpl
cltd
cmp
imul
repz
lock
cmp
add
into
xchg
jg
jg
cs
ds
push
mov
jns
push
sub
mov
and
cltd
popa
popa
arpl
std
fidivl
repnz
mov
addl
and
push
mov
icebp
in
sbb
mov
push
test
xchg
xchg
sbb
dec
shlb
sub
push
std
cmp
popa
in
mov
stos
mov
mov
fwait
bnd
ja
xchg
das
out
enter
out
loopne
stc
mov
jmp
xor
dec
pop
xchg
pop
mov
xchg
mov
pop
xor
outsb
ficomps
dec
clc
leave
das
std
xlat
xchg
add
xchg
loope
lcall
mov
add
std
enter
stos
add
ret
ja
mov
xchg
push
pop
and
push
sti
push
aaa
cmpsl
enter
pop
out
xchg
ds
nop
scas
xchg
mov
out
adc
push
push
addr16
and
dec
clc
das
adc
imul
loope
mov
inc
sbb
xchg
sub
xor
cmp
sbb
mov
cltd
inc
inc
xchg
stos
shll
jl
arpl
frstor
testl
fiaddl
ja
cld
or
or
cmpsb
sub
fsubl
lret
ret
or
jae
je
mov
divl
cmpl
cld
or
or
out
dec
jle
mov
push
xchg
les
call
jmp
es
out
loop
ja
dec
lods
rorl
test
inc
dec
push
fidivl
xchg
into
sbb
pop
xchg
push
lods
push
mov
nop
adc
sti
test
mov
lds
outsl
call
add
mov
push
or
sbb
dec
mov
das
pop
gs
xchg
jle
aad
pop
add
shlb
shr
shl
dec
lahf
outsb
pop
pop
or
dec
js
xchg
inc
push
and
aad
andb
outsb
sub
jecxz
shr
cmp
addb
lahf
cld
push
imul
lahf
sbb
pop
jg
leave
push
fwait
xor
cli
sbb
rcr
push
mov
or
inc
dec
dec
adc
inc
aas
data16
mov
xor
bound
jl
xor
jl
mov
dec
cwtl
mov
cmp
hlt
pop
fisttps
lods
sub
add
iret
aam
jmp
mov
add
dec
sbbb
outsb
xor
ss
xor
cld
pop
movsb
enter
ljmp
ds
not
sar
or
scas
jecxz
imul
inc
mov
in
sbbb
fstpl
dec
push
lods
scas
pop
adc
dec
out
or
xlat
dec
cmp
xchg
or
out
pushf
jne
jae
push
cli
mov
fsub
data16
int3
cmpsl
adc
push
sbb
pop
mov
and
imul
pop
scas
mov
add
repz
sbb
jl
xlat
pop
inc
push
decb
ljmp
fadds
adc
pop
cmp
cmp
jle
and
or
push
aaa
cmp
sbb
mov
or
cld
setp
cmp
sub
inc
arpl
push
xchg
cwtl
shlb
int
xor
daa
loopne
sbb
insb
mov
xlat
es
xchg
or
ds
pop
or
cmp
mov
inc
shll
push
stc
push
dec
rcr
mov
das
jbe
xor
mull
xlat
mov
or
std
push
mov
in
pushf
mov
call
pop
cltd
out
jne
sub
push
xlat
movd
out
mov
enter
rcll
int
mov
xchg
jl
ljmp
clc
hlt
popf
mov
sub
fmull
pop
mov
add
xlat
mov
fcmovb
lcall
pop
mov
sub
test
xchg
mov
pop
cmc
inc
mov
icebp
imul
mov
dec
dec
pusha
cmpsb
sahf
adc
cs
inc
cmp
add
sub
loope
out
and
out
addr16
jmp
mov
adc
aaa
sar
test
mov
push
lods
mov
pushf
movsl
outsb
push
jne
dec
enter
repnz
inc
addr16
and
mov
push
xchg
out
loop
leave
sbb
rclb
cmp
or
std
pop
bound
or
xor
adc
fucomp
scas
pop
stos
jbe
cmp
mov
jle
stc
test
cwtl
push
xor
pop
gs
subl
xor
and
sahf
rcr
mov
pusha
leave
sub
mov
call
xchg
add
lock
dec
mov
aad
mov
push
lret
dec
or
shrb
enter
js
sub
lret
pop
lock
sarb
sub
cs
popf
je
mov
jecxz
add
subl
mov
sub
js
add
out
lret
and
mov
in
das
arpl
pop
and
sub
and
in
add
nop
add
push
rclb
and
xchg
cmp
mov
pop
insb
dec
dec
sbbb
daa
popf
je
jno
leave
push
dec
nop
jb
or
inc
daa
insb
push
jbe
adc
pop
mov
icebp
insl
rorl
or
out
xor
out
jbe
cmp
mov
popf
xor
inc
mov
xor
dec
in
aam
std
or
inc
aas
pop
pop
sarl
adc
jo
cmp
adc
repz
cmpsl
xchg
out
push
mov
or
lcall
push
test
jmp
push
roll
lock
in
test
pshufw
push
dec
nop
sbb
xor
xchg
push
add
adc
inc
add
out
xchg
mov
popf
and
mov
js
and
sub
push
mov
ds
inc
hlt
cli
fisubrs
iret
aaa
popa
mov
lret
push
mov
adc
data16
shrl
lods
jl
add
and
stos
or
imul
dec
clc
sub
aas
pushf
cwtl
out
in
adc
add
test
mov
cmp
or
mov
mov
xchg
mov
inc
xchg
xor
gs
dec
loop
pop
xlat
mov
mov
mov
adc
test
cs
gs
mov
mov
mov
fcmovnb
lods
mov
dec
das
mov
jbe
mov
int3
pop
cmpsl
cmc
jg
das
mov
pop
pop
inc
and
mov
aad
mov
lods
sbb
push
xor
jns
jmp
insl
adc
mov
push
lods
dec
sahf
pop
sbb
xchg
dec
repz
jbe
in
dec
pushl
ror
iret
into
dec
clc
xor
jb
xor
push
out
and
mov
add
sub
xchg
xchg
dec
addr16
out
xor
neg
nop
stos
cmpsl
xor
push
rcrl
mov
sbb
jnp
push
cmpl
mov
popf
adcb
fistps
pop
add
dec
mov
pop
xor
adc
xchg
shl
std
cs
dec
push
popf
ret
aad
dec
cmpsb
mov
mov
sub
hlt
xlat
sti
mov
pop
xchg
shlb
push
lahf
cmp
out
xchg
mov
ds
mov
mov
outsb
std
cli
sub
adc
mov
idivb
mov
pop
insl
cmp
pop
bound
int3
push
push
hlt
add
pop
enter
cltd
sub
jp
sbb
push
cmpsb
out
push
enter
or
arpl
pop
inc
dec
fwait
pop
mov
push
lock
es
push
xor
gs
sbb
cmp
ljmp
sub
outsb
sub
adc
sti
repnz
lock
ret
inc
pop
addr16
pushf
jo
cwtl
add
into
dec
mov
push
and
jge
jb
xchg
jg
inc
mov
mov
shl
subl
jae
lahf
jae
cmpsl
orl
push
sub
into
mov
xor
aad
mov
imul
enter
sbbb
jb
sub
call
fsubrl
pop
pop
mov
cltd
stos
dec
pop
loopne
jle
movsb
xor
lahf
dec
aam
in
push
aad
xchg
sub
popa
xchg
out
fsqrt
mov
or
jns
sbb
dec
pop
cmc
mov
mov
bound
shll
js
nop
adc
sbb
popf
lret
loop
cmp
ja
pop
jae
rcl
fisubl
pusha
mov
lcall
add
or
inc
xor
xor
ficompl
ror
out
mov
or
push
fdivr
sahf
cmp
inc
pop
repz
out
dec
push
test
cmp
dec
addl
add
sbb
adc
int
sbb
mov
bound
rcll
lret
sti
addl
dec
mov
imul
sti
add
nop
sub
mov
test
sbb
cltd
fwait
push
dec
and
xor
dec
jnp
dec
cld
js
mov
clc
data16
ds
leave
inc
cmp
fs
dec
inc
test
into
inc
cltd
fs
add
lods
scas
or
dec
dec
or
inc
pop
int
push
lcall
jmp
nop
sub
push
sbb
mov
push
ret
xchg
div
push
mov
dec
mov
les
push
inc
adc
sbb
push
xchg
movsb
cmp
in
adcb
push
cmp
stc
lret
scas
leave
sbb
add
in
cmpsl
xor
and
lds
xor
pop
lods
push
pop
fsubs
insl
fstl
push
mov
xchg
xor
sbb
jmp
rol
sbb
mov
pop
mov
loopne
add
and
adc
mov
aad
xchg
xchg
pop
jnp
into
xor
push
ret
out
mov
out
dec
cmp
stos
std
insl
jo
cmp
out
ss
xchg
ret
cli
mov
xlat
stos
add
push
ret
push
xor
sbb
mov
push
jp
aas
adc
add
and
jno
ret
jge
adc
sbb
dec
je
cli
gs
pop
ljmp
pop
in
cmp
sbb
mov
cmpsl
lods
shrb
hlt
nop
lcall
sbb
shrl
fadd
xor
js
in
or
daa
fisttpl
jno
xor
data16
repnz
push
dec
xchg
xchg
pop
push
mov
or
mov
jae
push
sarl
jge
mov
jae,pt
xchg
xchg
sub
xchg
into
lret
sbb
cwtl
add
data16
lea
ljmp
sub
adc
mov
inc
cmpsl
fs
xchg
aad
outsb
aas
xor
push
jae
adc
in
out
or
inc
jnp
ret
insl
jns
xchg
dec
cmp
les
clc
mov
and
repnz
cmp
sbb
xchg
pop
fstl
xchg
add
and
movsl
add
inc
jb
sbb
mov
xor
js
jb
xchg
fwait
and
subb
rcrl
ss
bound
xor
ljmp
inc
mov
fidivrs
sbb
sub
fiaddl
pop
xor
lock
xlat
dec
mov
dec
sub
out
jg
jns
cmc
mov
push
idivb
cmp
jbe
pop
movsb
xchg
imul
out
add
ficompl
or
incl
loop
ljmp
je
shll
sbb
sub
les
mov
in
dec
int
push
dec
out
in
cmpsb
inc
xchg
imul
xchg
jge
mov
jge
xor
dec
sahf
or
or
adc
xchg
nop
dec
mov
inc
jnp
pop
imul
mov
fiadds
imul
mov
sub
push
scas
sarl
lea
sbb
pusha
jmp
lods
repz
and
mov
cli
mov
dec
mov
cld
gs
dec
shr
sub
je
std
dec
hlt
in
push
test
xchg
add
push
out
mov
jbe
cmp
jp
sub
cs
xchg
xlat
or
inc
mov
or
sahf
pop
int
dec
ds
xor
jb
adc
xchg
xor
dec
inc
jnp
loope
inc
mov
inc
stos
xor
dec
ja
fidivrs
mov
fcmovnb
xchg
xor
imul
xchg
mov
inc
sbb
gs
cmp
les
lret
enter
pop
cld
std
faddl
pop
jle
jp
inc
xchg
mov
rorb
sbb
dec
inc
filds
jp
mov
sbb
dec
insl
push
sahf
pxor
lods
jecxz
popf
mov
aas
sbb
repz
mov
sub
fistpll
xchg
lahf
pusha
shlb
mov
pop
lret
icebp
cmpsb
jmp
orl
lock
push
mov
movl
leave
fdivp
mov
incl
or
or
in
cmp
test
inc
cmc
test
out
xchg
in
push
repz
mov
out
leave
addl
xchg
jecxz
push
bound
sbb
ror
or
popw
cmp
inc
lea
out
lcall
call
xchg
or
ficompl
ret
sbb
mov
mov
fnstcw
pop
dec
mov
lret
dec
or
dec
pusha
and
add
xchg
dec
lahf
dec
mov
push
cvtps2pd
push
mov
push
push
dec
clc
sbb
mov
ljmp
mov
insl
xor
jbe
mov
int3
and
xchg
outsb
and
imul
and
sub
mov
cmc
adcl
sbb
mov
xorb
lods
or
outsb
inc
jbe
inc
mov
inc
sub
xchg
sahf
pop
lods
add
ret
pop
dec
imul
adc
mov
in
leave
lods
push
push
dec
mov
les
mov
jmp
and
outsb
cmp
xchg
and
mov
fst
mov
sarb
das
mov
fisttpll
add
imul
fiadds
addps
aas
rcrl
test
mov
into
mov
std
jle
je
jbe
and
pop
mov
xor
jb
pushf
xchg
daa
push
in
das
cli
sub
push
mov
xchg
aaa
test
cmp
lea
sub
negb
les
pop
in
adc
sarl
mov
and
imul
mov
insl
xchg
jo
cmpsb
mov
fsts
daa
add
daa
and
push
push
cltd
das
jecxz
fs
daa
sbb
jbe
push
aaa
bound
xchg
sbb
iret
inc
cmc
clc
hlt
add
and
fsin
mov
inc
jb
cld
or
cmp
xchg
pop
jbe
jecxz
adc
sub
ljmp
ds
xchg
cmp
or
mov
fwait
inc
loop
fstpt
out
js
xor
or
dec
jb
xor
mov
fsubl
pop
or
in
addb
bound
adc
xor
cmpsl
mov
in
nop
rcll
data16
mov
jge
je
xor
shll
stos
pop
mov
lods
lea
stos
mov
ret
push
xor
shll
dec
adc
cld
fsubrs
test
leave
sbb
and
into
cmpsb
mov
imul
lods
test
mov
dec
outsl
in
dec
clc
mov
cltd
scas
addr16
sub
cwtl
inc
xchg
mov
sbb
outsl
lock
xchg
push
cmc
add
add
data16
outsl
mov
cs
outsb
push
inc
aaa
inc
dec
fwait
sub
xchg
mov
stos
jae
int
sbb
loopne
push
and
cld
insl
mov
xchg
sbb
add
sti
fldt
xchg
pop
push
push
je
inc
int3
sti
aam
jge
fistpl
sbb
dec
inc
adc
push
adc
pop
jg
push
cmp
push
icebp
sub
lods
insl
pop
in
jle
jecxz
adc
mov
or
mov
sahf
jecxz
loope
stc
hlt
ffree
or
add
scas
sbb
out
fwait
sbb
lret
fisubs
or
mov
das
jnp
pop
cmp
daa
loop
rcrl
jno
mov
jne
xlat
fwait
xor
add
xchg
sub
inc
cwtl
mov
dec
mov
and
inc
jmp
cmp
out
lds
xor
mov
jl
iret
sbb
divb
idiv
push
cwtl
jo
dec
jo
popa
pop
mov
xchg
mov
add
or
mov
xor
fsubr
das
nop
mov
adc
push
mov
lahf
lods
jae
pop
fldl
addl
test
lock
dec
cmp
imul
rcll
push
outsb
insb
xchg
push
xlat
jp
insl
or
jg
pop
and
push
and
cs
adc
mov
icebp
mov
loop
pop
jmp
dec
sub
cmp
xchg
lahf
pop
push
cli
cltd
and
mov
shll
mov
xor
cwtl
inc
dec
mov
add
xchg
jmp
xchg
or
fcompl
or
jmp
pop
sbb
bound
gs
push
cmpsl
pop
cmp
jge
lea
or
jmp
push
popa
sub
push
fistpll
sar
xchg
cmp
mov
cli
imul
lods
adc
imul
test
cmp
mov
hlt
les
sbb
sub
cmpsl
iret
adc
add
pmaddwd
nop
stc
sarb
sbb
xchg
and
and
scas
js
add
or
cli
dec
mov
fisttps
cmpb
sbbl
push
jns
xor
jge
push
sbb
in
mov
out
and
adc
and
aam
loopne
adc
jae
push
insl
ss
and
sbb
cmp
stos
pop
cmp
add
push
out
in
and
lea
data16
sbb
es
cmp
mov
jns
aas
add
or
sahf
mov
pop
sbb
mov
xlat
sar
pop
std
inc
stc
or
inc
outsl
pop
rcl
std
insl
xor
push
out
pushf
jl
lock
pop
lahf
out
jmp
sbb
add
mov
pop
movsb
sbb
pop
xor
pop
jecxz
inc
lcall
test
clc
jbe
hlt
add
xchg
jo
jns
sbb
fdivl
push
js
pop
jne
imul
pushf
pop
lea
pusha
jmp
in
and
and
xchg
cmp
inc
inc
fs
cmp
leave
sub
daa
mov
jns
xor
inc
sub
mulb
lods
mov
loopw,pn
pop
jns
push
lods
ret
outsl
in
loopne
mov
imul
xor
in
pop
xchg
inc
repnz
pop
pop
inc
ss
add
dec
xchg
push
pop
pop
int
in
lds
ficompl
es
je
sbb
fldcw
mov
push
or
and
lret
pop
xor
aaa
jo
inc
jno
popf
inc
testl
mov
add
cmp
dec
and
daa
je
jl
inc
test
mov
adc
dec
scas
daa
cli
pop
dec
shl
fcmove
inc
fisttpll
mov
mov
xor
mov
fcoms
and
sub
xlat
ret
dec
stc
pop
xor
adc
adc
movl
sbb
das
rolb
mov
xor
sub
sub
clc
mov
and
in
ja
add
popa
pop
in
daa
mov
fsubrs
sub
push
fs
xor
aam
pop
xchg
add
inc
xchg
jg
rcr
std
mov
pop
pusha
dec
leave
mov
data16
rolb
push
or
mov
adc
mov
pop
push
cmpsl
es
cmp
xor
js
sub
lods
mov
lea
push
jno
push
mov
fwait
shr
mov
sbb
daa
and
mov
adc
nop
or
rcl
inc
dec
shlb
mov
daa
push
sbb
sahf
ss
dec
inc
negl
insl
rcl
in
ss
sbb
sbb
adc
jmp
mov
cld
cli
into
inc
pop
or
push
xchg
pop
inc
fldenv
push
mov
cmp
pop
gs
aaa
adc
mov
mov
push
lea
rorl
fsqrt
push
imulb
push
pop
cmpsb
pop
fwait
aam
or
mov
mov
inc
adc
in
and
add
and
mov
sub
enter
icebp
mov
int3
nop
push
xor
adc
int3
mov
sbbl
es
mov
outsb
cmp
ss
jp
sub
jl
fwait
mov
lcall
inc
aam
sub
add
push
daa
outsb
mov
cwtl
mov
sbb
lock
mov
or
mov
in
nop
add
popf
rol
mov
xlat
cmpsb
pushf
pop
xchg
sbb
rcll
and
pop
bound
xchg
lods
push
jbe
jns
sbb
cltd
cmp
sub
mov
inc
adcb
pop
xor
pop
sub
xorb
xor
push
mov
sbb
and
push
mov
dec
lret
mov
mov
loopne
fcompl
lea
mov
cmp
or
hlt
in
inc
pop
fiaddl
sbb
add
dec
dec
mov
mov
pop
int3
stc
test
jae
aaa
inc
push
sbb
loope
dec
cmp
lret
lods
push
bound
bound
rcrb
rolb
mov
mov
sarb
xchg
mov
push
mov
mov
add
push
dec
iret
repnz
loopne
xor
mov
mov
ja
jl
xorl
dec
lahf
std
pop
mov
aaa
rcrl
repz
xchg
sub
jmp
lcall
cli
pop
test
xor
cmp
je
repz
adcb
inc
mov
pop
outsl
es
dec
mov
lods
mov
aam
xor
or
cmc
pop
push
add
enter
xorb
mov
inc
pop
mov
std
aad
jg
sbb
sub
lret
xchg
jo
stos
addl
mov
iret
lods
cli
out
fsubrl
call
lods
add
pop
into
sbb
cmp
cwtl
mov
pop
adc
pusha
pop
mov
or
xchg
repz
or
jmp
lea
jnp
mov
repz
das
dec
xchg
sarl
test
sub
mov
pop
mov
mov
imul
test
in
mov
inc
jmp
and
lock
out
sub
inc
xor
fwait
out
lret
sbb
test
jp
test
add
gs
push
leave
mov
mov
mov
or
pop
sub
lret
push
push
imul
mov
stc
and
cmp
mov
in
mov
or
add
cltd
stos
les
mov
sub
jge
std
mov
cmc
cmpsb
push
in
or
call
cmp
outsl
mov
xchg
inc
and
sbb
les
xchg
incb
mov
rorl
int3
icebp
sub
jae
sub
repz
and
and
pusha
je
outsb
pop
pop
cmpsb
adc
mov
jge
xchg
push
xchg
or
and
out
push
and
cli
push
lahf
jnp
lods
xor
shr
adc
cmp
fstl
xor
stc
inc
ss
leave
dec
inc
and
xor
outsb
roll
add
mov
pop
adc
and
andb
and
fisubl
push
mov
test
xchg
movsl
aam
mov
lds
mov
repz
cmp
insl
xor
popf
and
or
jae
dec
sbb
dec
int3
aad
fidivs
test
aad
and
mov
std
sub
mov
cmp
lret
pop
mov
outsl
and
mov
aad
in
flds
out
aaa
xchg
dec
fs
sbbb
ret
in
jecxz
gs
lds
repz
dec
cwtl
or
or
cs
movb
les
flds
push
lds
adc
cld
lock
cld
or
sti
popa
les
sub
jbe
jle
sbb
mov
xlat
sbb
xchg
mov
in
lea
repnz
mov
into
mov
push
or
mov
subb
sub
or
and
mov
rclb
push
mov
mov
stos
lock
std
adc
xchg
stos
dec
les
add
int
shrb
fdivrs
cmp
ret
jmp
ja
sbb
mov
dec
call
jne
imul
lock
aad
jbe
mov
cmp
xor
imul
jnp
xlat
int
sub
sub
repnz
fidivrl
mov
loop
adc
out
xor
jnp
nop
int
xchg
xchg
mov
les
pushf
ss
inc
add
jp
cmc
pop
repz
bound
fcomps
loop
inc
and
inc
mov
int3
popa
mov
out
and
mov
inc
xchg
and
mov
mov
add
jp
mov
push
repz
call
push
cltd
or
lea
jnp
mov
mov
pop
dec
push
out
dec
insb
fld
jecxz
bsr
add
sarb
jne
sarl
leave
or
mov
into
cmp
xor
mov
fbld
adc
cli
clc
sub
xor
jae
pusha
push
scas
mov
rolb
mov
adc
dec
loopne
xor
mov
dec
out
xchg
bound
jg
or
inc
sbb
mov
movsb
push
push
repnz
xor
imul
pop
push
xchg
xor
pop
aaa
sub
adc
lods
add
int
adc
and
stos
mov
jne
inc
inc
imul
loopne
stc
addr16
rorl
loope
movsl
pop
mov
fld
fs
or
cmpsb
subl
stos
and
imul
or
xchg
push
cmc
inc
and
mov
scas
lds
push
or
push
pop
push
lahf
lods
mov
ss
mov
mov
xchg
jb
int
inc
push
cli
pop
enter
sbbl
jb
out
cwtl
inc
jp
sbb
and
xchg
shrl
inc
in
imul
or
add
pushf
add
aad
push
daa
and
fists
aad
ss
iret
xor
int3
testb
cmpsb
in
std
je
test
out
and
cmp
mov
push
mov
push
jne
mov
std
inc
addb
or
pusha
daa
pop
pop
rorb
scas
mov
lret
and
addr16
test
fildll
jo
cmp
xchg
cli
lock
in
adc
icebp
inc
jno
sub
ret
clc
and
cmpsb
and
cld
inc
es
jmp
push
iret
mov
rorl
js
ret
or
mov
imul
mov
jp
dec
push
cmp
stc
jle
jmp
dec
xchg
lods
outsl
lcall
xor
cwtl
gs
mov
add
in
loope
inc
cmp
ss
fwait
ljmp
sub
std
adc
cs
loop
std
mov
pop
fs
push
cmp
xchg
inc
sbb
push
push
jbe
inc
and
dec
std
outsl
or
pop
mov
dec
jmp
xor
sub
or
lret
xchg
dec
push
les
lahf
iret
fsts
int3
cmp
testb
xlat
xorl
adc
dec
jbe
pop
xor
popf
add
fwait
sbb
jnp
inc
std
cmpsb
cwtl
sbb
mov
sarb
mov
sbbb
mov
or
cmp
call
inc
out
or
bound
leave
mov
lds
add
or
sub
dec
xchg
mov
out
jns
nop
imul
pop
repnz
jne
inc
mov
add
test
push
sbbb
push
out
out
inc
lock
push
mov
and
ficoms
pusha
adc
mov
pop
sahf
fwait
sarb
add
add
dec
or
mov
jmp
cmpsl
xchg
pop
repz
jbe
inc
xor
xchg
xor
jns
cmp
ficomps
xchg
and
mov
fs
jae
out
mov
js
and
push
cld
adc
scas
imul
jae
dec
mov
out
sti
ljmp
imul
sub
sbb
sub
jno
daa
jno
pop
sti
cld
jmpw
rorl
cs
into
push
push
push
jno
shrb
and
dec
or
and
shrl
mov
dec
cltd
mov
imul
jl
mov
cwtl
sbbl
cmpsb
or
cld
mov
jbe
jecxz
nop
mov
xor
in
ljmp
roll
test
out
pushf
imul
sbb
imul
loop
faddl
test
jo
mov
cwtl
dec
std
sar
std
bound
je
gs
outsl
pop
sbb
outsb
lea
pop
inc
mov
lahf
test
icebp
fnsave
mov
mov
push
inc
jo
fbstp
js
and
adc
push
repz
push
mov
leave
mov
test
and
cmc
divb
mov
orb
jl
add
ja
mov
scas
jnp
data16
lahf
ret
fsubrl
sub
or
add
jns
sub
mov
sub
adc
xchg
inc
jbe
and
sbb
lret
push
jg
push
or
out
and
pop
shrl
and
mov
sbb
push
jae
mov
mov
mov
or
pop
test
les
mov
jmp
stos
mov
ret
imul
mov
sub
mov
pmaddwd
jb
ret
push
std
mov
cmp
cmp
loope
lret
dec
adc
push
repnz
inc
lahf
punpckldq
mov
pop
mov
cmpsl
in
fildl
roll
mov
lahf
or
stos
push
fs
mov
xchg
mov
xchg
negb
mov
pushl
or
fbld
aam
dec
rol
cltd
jl
stos
dec
sbb
stc
arpl
and
mov
push
pop
iret
mov
mov
or
push
loop
push
cmp
insb
jno
imul
push
in
or
xlat
adc
or
dec
adc
pop
inc
push
and
push
inc
in
cmp
mov
add
jns
inc
pop
jns
jne
sub
or
adc
jo
cs
xor
sub
adc
pop
jne
mov
call
div
das
popa
pop
adc
mov
jle
rolb
inc
lds
cmc
xor
inc
jbe
pop
dec
es
lret
jle
icebp
popa
stos
sbb
int
inc
push
and
fs
pop
cmp
jb
dec
mov
pop
aad
push
mov
lock
arpl
loopne
mov
ds
push
push
mov
cs
add
push
int3
lock
dec
sub
out
push
daa
push
jmp
or
sub
cmp
dec
inc
test
mov
in
mov
repz
out
movsl
jmp
jae
rol
jno
into
fs
stos
arpl
jnp
cmp
arpl
in
pushf
cmp
mov
inc
inc
xchg
cld
ret
call
adc
push
mov
pop
pop
cmp
xchg
addl
aas
lds
inc
mov
or
stos
mov
sti
pop
cmp
leave
into
out
cmp
arpl
add
ret
push
xchg
cmp
mov
add
jmp
shl
push
ljmp
das
push
in
dec
test
cmc
jmp
mov
lcall
repz
sbb
mov
cld
push
jae
adc
jmp
movsb
cmpsl
clc
mov
mov
repz
lods
xor
pop
fcoms
std
cli
sahf
inc
stos
scas
xor
icebp
dec
jmp
sahf
push
das
movsb
sti
ljmp
mov
stos
xor
pop
or
push
add
sbb
fsts
iret
iret
rcrl
fs
dec
dec
loope
mov
lahf
sbb
aaa
fldl2t
add
push
icebp
or
dec
pop
hlt
inc
or
lret
imul
mov
cld
push
stos
sbb
shlb
mov
xchg
cwtl
je
xor
aad
xchg
add
mov
popf
aad
add
fsubrl
scas
cmp
fs
pop
mov
mov
inc
mov
pusha
popf
lcall
push
cld
mov
ret
pop
mov
push
mov
loop
cmp
pop
pop
mov
enter
aad
cmp
pop
mov
and
xchg
inc
cmp
jno
repz
dec
in
mov
sahf
into
cmp
inc
dec
push
dec
scas
ficoml
xchg
lods
jbe
lcall
loope
pop
ja
push
jl
andb
and
cmpsl
mov
daa
rol
add
dec
shlb
inc
pop
jg
subb
jg
adc
shlb
cmpsb
popf
mov
xor
test
gs
inc
adc
in
pop
mov
pop
out
jnp
dec
mov
arpl
xchg
js
aaa
sub
jno
es
xchg
js
dec
test
push
arpl
xor
cli
loopne
push
lea
push
iret
xor
push
ljmp
mov
and
in
les
fisubl
jg
mov
leave
and
mov
xchg
or
and
mov
movb
iret
xchg
repnz
jbe
dec
shlb
mov
dec
mov
sub
push
or
mov
and
outsb
mov
pop
les
test
fbstp
mov
bound
mov
push
jg
je
add
out
dec
daa
aad
popa
lea
das
int3
add
lods
lcall
das
add
adc
insb
loopne
xchg
clc
push
xchg
push
add
xchg
push
lcall
sarl
push
mov
popa
mov
minps
pop
cwtl
in
dec
lods
movsl
push
xchg
xchg
sub
fdivl
movsb
push
lock
sbb
mov
xlat
stos
push
loopne
gs
pop
push
out
mov
sbb
and
or
push
push
xchg
lret
xchg
aas
movsl
ljmp
push
popf
cmc
fwait
lock
sbb
jmp
adc
cmp
pop
dec
shrb
test
dec
and
enter
sbb
jg
cmp
mov
out
mov
xchg
in
cmpsb
pop
jp
pop
dec
adc
je
push
inc
mov
mov
mov
mov
test
xchg
in
add
push
cmp
mov
jge
cmp
xchg
xchg
cmp
lret
mov
divl
jb
sbbl
bound
jl
adc
in
fmul
cli
in
sub
pop
push
jo
lea
push
adc
cmp
mov
mov
cld
jnp
mov
dec
popf
sub
ds
adc
push
mov
sarb
pop
cmp
roll
cs
sub
mov
daa
sub
sahf
mov
shr
orb
mov
lret
and
push
test
enter
lahf
jg
fcomp
inc
mov
xor
ret
adc
mov
mov
ds
in
jno
lods
inc
dec
mov
xor
sub
pop
dec
test
rorb
fisubrl
leave
outsl
movsb
iret
dec
cs
jge
jae,pn
xchg
dec
adc
cltd
add
aam
das
cmp
aaa
dec
iret
insb
arpl
push
xor
xchg
bound
pop
adc
loop
icebp
negb
and
push
fidivrl
shl
lret
mov
pushf
mov
in
mov
les
loopne
mov
inc
dec
push
sahf
call
aad
sub
sbb
pusha
push
stos
inc
jl
hlt
fstps
icebp
ret
out
adc
push
das
add
movsl
jne
or
xor
dec
fs
mov
dec
xor
pusha
and
dec
add
sub
sub
cltd
lcall
push
mov
in
sbb
add
inc
xchg
jne
xor
dec
jg
adc
aam
fwait
push
cmp
test
push
mov
lret
and
cmp
lret
outsb
push
adc
mov
jmp
push
push
xchg
push
cmp
lahf
or
inc
inc
in
push
ss
dec
push
sbb
popf
dec
push
inc
divb
sub
xlat
pop
inc
fsubrl
or
vmovaps
dec
jns
push
inc
lock
cmp
or
sub
jbe
add
or
xchg
pop
pushf
adc
fsts
fwait
or
mov
pop
add
sub
push
mov
push
cmp
loopne
pop
mov
cmp
idiv
dec
addr16
ss
rorl
inc
fdivrs
jge
mov
dec
adc
mov
inc
sub
repnz
lcall
fbstp
lret
mov
je
xchg
out
pop
mov
xchg
push
mov
arpl
sar
sbb
xor
fcoms
adc
sti
lcall
ret
cld
ds
xchg
pop
cmp
inc
xchg
mov
es
gs
xor
sub
lcall
sub
enter
mov
mov
cli
psubw
fcomps
jno
int3
gs
stc
add
pop
roll
jmp
imul
xchg
loop
das
repnz
movl
lcall
leave
push
les
lret
add
xchg
sub
jbe
mov
insl
test
adc
push
xor
sbb
adc
mov
scas
fcompl
mov
pusha
mov
das
push
sub
dec
test
xor
inc
out
les
in
ja
imul
repnz
stc
or
lahf
add
push
test
and
frstor
into
repnz
push
add
scas
sub
sub
lds
inc
cmp
in
rcl
sub
enter
fcoml
push
add
test
mov
mov
int3
mov
or
sbb
and
repz
and
pop
loop
or
push
mov
mov
cmpb
jne
js
mov
push
pop
push
mov
add
push
in
je,pt
movsl
loopne
scas
stc
sub
mov
loopne
cmp
loop
ret
or
lret
fstl
xchg
mov
pop
rcrl
sti
xor
mov
cmp
test
push
gs
push
insl
out
pop
idivb
sti
ret
int
cmp
jnp
mov
ja
xchg
push
add
adc
movl
cmc
test
loope
inc
dec
clc
cmp
daa
fs
inc
inc
and
shll
or
cltd
outsl
ljmp
and
mov
lea
je
cmpb
popf
test
scas
je,pt
das
push
xor
xor
sbb
in
jns
mov
mov
jmp
cmp
call
xor
add
shll
xchg
rorb
or
fldenv
xor
cmp
repz
shrb
xchg
add
and
and
fistl
dec
or
outsl
fs
inc
pop
pop
pop
hlt
or
adc
fldenv
push
pop
cmp
and
push
jle
loope
fisubl
fisubrl
sub
sbb
insl
lock
and
push
das
mov
leave
sub
insb
sti
mov
loopne
jge
call
mov
mov
mov
mov
jg
cmc
in
lds
mov
aaa
repz
aad
adc
mov
pop
in
inc
inc
inc
popl
mov
and
pop
and
pop
jecxz
int3
outsl
ret
dec
mov
outsb
sbb
in
out
and
and
sub
and
outsb
sbb
imul
or
loop
ds
mov
notl
scas
loope
add
cli
pop
repnz
ds
lods
bt
fcoml
jns
insl
cmpsb
mov
mov
jae
push
mov
and
fildll
lea
lret
lds
movsb
mov
jae
xor
pop
insl
cmp
mov
in
jp
xor
outsl
dec
pop
mov
xchg
shr
xchg
mov
mov
lods
cmpb
pop
sbb
mov
pushf
stos
mov
inc
in
xchg
loopne
mov
add
test
or
mov
test
add
and
jne
pop
lahf
ss
jle
imul
fnstenv
push
add
insl
jne
xor
loope
xchg
int
jp
adc
xchg
mov
stc
mov
std
in
mov
mov
lods
stos
je
xchg
xchg
stc
jb
repz
push
cmp
cmp
stos
pop
dec
add
xchg
sbb
mov
jns
mov
push
jne
xchg
and
cmp
dec
sahf
pop
adc
mov
xor
sbb
jp
sbb
in
lcall
fmull
mov
inc
inc
add
sahf
inc
scas
sub
cmp
jmp
cmp
pop
stc
shld
jg
data16
daa
or
cmc
aad
imul
test
movsl
adc
fnstenv
insl
lods
loopne
mov
fnstsw
lret
sbb
mov
mov
pop
shl
xor
daa
out
das
jg
ljmp
decl
dec
int
jnp
dec
aaa
mov
jecxz
mov
xchg
pushf
into
sub
jle
clc
cmp
inc
pop
fcmovb
negl
stc
loop
call
movsl
xor
dec
stc
and
dec
cld
or
dec
dec
adc
xchg
mov
sub
lahf
xchg
lds
mov
imul
aad
xor
loopne
mov
lds
lcall
inc
cwtl
pop
rorl
xchg
cmp
mov
sarl
inc
icebp
and
pop
fdiv
push
lods
pop
lret
cs
dec
mov
mov
out
cmpsl
imul
mov
sarb
pop
fadd
xchg
adc
mov
xchg
flds
imulb
mov
or
mov
jg
inc
movsbl
mov
xchg
rcl
out
or
push
mov
aad
jge
push
popa
lods
fildl
aam
xchg
lcall
arpl
sub
sub
mov
into
jg
pusha
dec
and
mov
popa
scas
add
roll
sbb
mov
dec
inc
int
icebp
popa
xchg
ret
es
popa
daa
negb
jnp
or
imul
cmp
shr
loop
pop
jp
lahf
fwait
lret
loop
fucomp
cs
jmp
mov
push
add
sub
mov
jmp
jae
mov
mov
imulb
add
mov
mov
pop
mov
lds
push
pop
filds
mov
mov
mov
in
jae
mov
add
mov
jae
lds
cmp
enter
lock
lea
daa
leave
pop
das
ficomps
orl
hlt
subb
push
pop
cmp
or
roll
aam
xor
cmc
dec
data16
pop
inc
scas
add
aad
xchg
pushf
sub
sub
sub
stc
inc
dec
int
xor
inc
mov
call
inc
stc
mov
idivb
push
and
test
std
sahf
xchg
in
loop
outsb
pusha
pop
call
pop
and
xor
sbb
push
sarb
imul
jno
xor
sbb
jb
loop
aaa
mov
inc
sbbl
cmpsl
mov
mov
imul
jno
cmp
enter
fldl
fistl
imul
inc
imul
sbb
arpl
fildl
out
dec
xor
fwait
cmp
shll
sub
or
xchg
jp
and
pusha
daa
out
jle
sti
les
pop
popa
pusha
pop
stos
js
addr16
repz
and
jmp
fidivs
add
dec
cmp
inc
lods
pop
aad
xor
daa
scas
mov
out
fs
cmp
cmpsl
into
je
push
cmp
rol
push
jg
mov
sub
add
sahf
pop
pop
jns
pop
stc
or
shl
pop
sahf
mov
arpl
xchg
shl
cld
test
cmp
xchg
roll
xlat
adc
jo
sti
add
jns
popf
stc
negb
loopne
cmp
push
out
in
pop
adc
imul
and
xchg
cmp
pop
lea
aas
add
fdivrl
push
cs
xor
les
sahf
std
mov
inc
aad
mov
push
dec
xor
pop
pusha
loope
repnz
dec
mov
adcb
mov
scas
push
ret
ja
in
jmp
pop
sbb
das
adc
in
mov
sbb
rcrl
lret
xchg
shrb
jle
cmpsb
js
or
bsr
int
fstpt
cltd
imul
test
out
les
fwait
mov
and
insl
push
loopne
dec
shrl
mov
jo
mov
jl
fldl
cltd
add
mov
jle
cwtl
pop
inc
jae
roll
adc
xor
cwtl
sbb
loopne
cmpsl
dec
ja
xor
mov
stos
mov
pop
shll
ljmp
push
or
lahf
add
sbb
mov
decl
and
lret
inc
cmp
insb
add
stc
jp
stos
pop
jg
test
mov
call
cmp
pop
mov
test
sarl
add
adc
ja
out
mov
mov
sbb
and
faddp
adc
cwtl
test
sar
call
dec
sbb
jl
mov
ds
jecxz
jmp
xchg
test
std
mov
jae
gs
enter
frstor
cmc
cmpl
jmp
outsb
sbb
push
andb
out
jae
rdpmc
adc
adc
pop
sti
dec
rcrb
mov
js
ljmp
or
xadd
sbb
in
xor
dec
xor
xor
jle
inc
or
test
das
out
std
sub
or
test
popf
addr16
ds
sar
sub
dec
cmp
out
mov
fwait
loop
fwait
clc
movsl
loopne
sub
mov
inc
inc
test
mov
jl
fdivl
insl
jnp
imul
stos
rcll
cmp
mov
lret
pusha
in
outsl
pop
lret
mov
sub
inc
leave
loop
jnp
sub
xor
inc
push
pushf
test
jns
xchg
xor
idivl
ret
cmpsl
sbb
aad
jne
or
push
loope
test
mov
dec
int
inc
pushf
adc
and
xchg
popa
push
nop
inc
jle
cmpsl
movsb
mov
jp
out
jg
add
or
outsl
inc
mov
popa
nop
pop
nop
push
ds
push
cmp
icebp
jae
sbb
add
loopne
aam
or
jae
notb
loopne
clc
outsl
sbb
adc
out
mov
adc
dec
xlat
pop
in
cwtl
popf
outsl
xor
jle
push
mov
sub
mov
lret
inc
das
mov
push
push
dec
jl
insb
ss
dec
scas
sbb
neg
push
push
push
cli
cmovle
push
mov
stos
cltd
or
pop
popf
loopne
in
or
daa
xchg
pushf
and
je
mov
fwait
jbe
cmp
inc
mov
shl
out
cwtl
das
xor
loope
mov
aam
xor
xor
sbb
arpl
and
mov
pcmpeqb
xchg
mov
mov
imulb
es
inc
pushl
nop
dec
insb
dec
add
ret
ljmp
push
jp
mov
cli
rolb
lods
push
clc
scas
cmp
mov
in
insl
xchg
sub
shll
mov
xlat
test
mov
adc
shrb
mov
adc
adcl
test
out
lret
imul
xlat
subl
shlb
int3
lret
int3
aas
cmp
mov
and
ret
cmp
loope
xor
out
aam
fsubrl
jns
fadd
or
jmp
imul
xlat
pop
and
cmpb
insb
lahf
inc
add
mov
dec
mov
and
sub
pop
dec
mov
mov
ja
frstor
sub
sub
bound
dec
sub
mov
cli
movsb
cli
mov
and
inc
mov
cmp
lret
jns
mov
pop
mov
xchg
cs
push
sarl
and
xor
fcmove
dec
cmp
ja
mov
popa
add
mov
push
cmp
lea
je
cmp
xchg
ljmp
test
xor
ficomps
xchg
stos
xchg
xchg
pushf
xchg
stc
lds
outsl
adc
and
push
stos
std
out
enter
pop
repz
jge
xchg
cmpsb
mov
jno
fnstenv
mov
sub
lcall
lret
movsb
insb
add
adc
jb,pt
fldcw
out
in
jbe
js
enter
int3
dec
mov
in
mov
push
sub
hlt
jno
pop
dec
xor
xlat
imul
xor
pop
inc
and
popf
inc
ret
jle
add
dec
fnsave
lods
jnp
ja
xchg
jle
inc
cmp
std
js
fistl
repz
dec
inc
lret
jbe
fsub
xor
mov
push
aas
les
shlb
jl
lret
dec
and
scas
js
out
std
xchg
push
ljmp
xchg
and
push
shll
inc
out
imul
add
jle
xor
mov
push
nop
and
outsb
adc
and
mov
mov
das
cmpl
xchg
mov
out
ja
bnd
mov
in
hlt
movsb
pop
inc
aam
add
xchg
cmp
sbb
andb
test
aam
aam
setb
std
pop
cmc
scas
jo
mov
mov
cmp
and
loop
pop
negl
pop
leave
xchg
add
push
pop
sarl
dec
add
aaa
xchg
jbe
pop
push
stos
andl
outsl
xchg
cltd
jle
cltd
addb
ret
inc
mov
stc
add
jge
popf
pop
std
fwait
sti
rcrl
xchg
mov
jo
mov
jecxz
xor
jmp
mov
and
popf
dec
push
mov
xchg
add
fadd
lea
dec
adc
cli
subb
jb
fs
push
lahf
outsb
enter
leave
and
fwait
mov
sti
xor
lods
into
js
pop
push
pop
xchg
nop
jo
fs
and
pop
sbb
cmpsl
cld
cs
outsw
cmp
jge
sub
or
push
jge
je
in
mov
das
pop
inc
cmp
xlat
mov
fsubp
and
aad
rcl
aas
jo
pop
jne
fsubrs
xor
incb
jge
fcomip
mov
or
in
fcomi
pop
sub
or
sbb
adc
les
cld
push
jge
stc
bound
mov
in
lcall
cmc
in
jmp
mov
rclb
or
xchg
sub
loop
shll
fdivp
jnp
addl
out
aaa
rorl
or
test
outsb
pop
mov
loopne
sbb
dec
movsb
iret
sbb
aam
incb
repnz
inc
pop
xchg
lret
mulb
and
xchg
sbb
mov
xlat
or
xchg
out
outsb
jge
mov
imul
xchg
sbb
or
pop
pop
out
clc
test
popa
xchg
aam
cmp
sbb
xor
mov
add
enter
mov
or
ds
mov
out
jg
dec
movsb
xchg
jmp
enter
dec
nop
lds
ljmp
popf
bound
adc
dec
or
inc
shll
daa
add
vmovaps
jno
lret
or
enter
stos
or
or
add
sti
and
and
jae
push
jns
pop
shlb
mov
xor
ds
push
sar
xor
inc
pop
adc
shlb
pushf
or
xor
pushf
push
ficoms
call
in
fxam
mov
pop
ret
imul
xchg
cmpb
adc
jae
mov
bound
lods
jb
add
push
pop
xchg
cmp
or
mov
xor
ljmp
mov
mov
inc
rcrl
js
xchg
std
xor
xlat
loopne
fcoms
cli
or
inc
push
or
insl
imul
loop
das
add
mov
int
mov
pop
adc
inc
inc
arpl
test
pushf
mov
insl
adc
or
imul
jp
cmc
xchg
mov
cmp
push
sub
xchg
mov
movsl
repnz
xchg
dec
out
sub
lret
popf
pushl
cli
mov
out
jns
les
sahf
dec
shrl
out
pop
lcall
and
or
rclb
xor
popf
rclb
pop
js
sub
mov
fidivrs
dec
rorb
lahf
int3
ja
ret
outsb
and
sbb
push
scas
jmp
bound
jg
in
outsb
popf
clc
xchg
not
push
fistpl
xor
pop
ds
inc
jae
ljmp
xchg
adc
enter
xor
popf
mov
test
pop
imull
add
insl
ss
repnz
inc
mov
mov
sbb
mov
cmp
sbb
fisubl
xchg
xor
xlat
out
fstpl
out
rcrb
addl
add
pop
lods
movsb
mov
mov
lahf
aaa
repz
iret
xor
cwtl
test
lods
jnp
in
xchg
mov
outsb
jae
int
or
push
test
jnp
ljmp
mov
adc
rcr
cmp
adc
sbb
add
arpl
mov
xchg
mov
enter
popa
dec
sbb
pushl
mov
xor
or
cmp
stc
push
cmpsb
mov
aaa
imull
pop
mov
mov
ret
mov
push
clc
add
rcrb
push
dec
pop
cmpsl
push
mov
mov
insb
or
xchg
loope
enter
imul
fisttpll
popa
inc
mov
sahf
or
dec
push
bsf
mov
xor
pop
sub
aas
in
cmp
std
into
xchg
jmp
scas
mov
xor
test
jg
add
movsb
les
or
leave
inc
cmp
iret
push
jns
lahf
in
mov
mov
jp
enter
lds
inc
or
outsl
hlt
out
lods
imul
clc
pop
cli
mov
xchg
adc
sub
push
inc
inc
mov
imul
scas
in
xor
ret
and
dec
dec
add
nop
inc
imul
cmp
rcll
inc
adc
mov
sub
mov
bound
mov
ljmp
scas
xchg
fcompl
outsl
jnp
int
inc
pop
cltd
incb
inc
lret
push
in
out
jle
and
pusha
mov
enter
lret
hlt
jb
and
mov
jno
or
add
aad
cwtl
popf
ds
outsb
movb
xor
add
jmp
lock
adc
ret
xchg
mov
inc
gs
inc
leave
mov
stc
jge
test
lods
push
push
inc
xchg
dec
das
sub
popf
pop
inc
cmp
adc
stos
mov
into
adc
cmp
test
push
adc
sub
mov
adc
mov
popl
shll
pop
shl
pop
movsl
movsb
rcrb
add
fldenv
inc
lods
dec
and
sbbl
aaa
vfmadd231pd
in
adc
push
fisubrl
xchg
ret
xor
xchg
jo
mov
cmp
cmp
xchg
cltd
or
add
int3
repnz
mov
pop
or
movsl
ficomps
xor
add
sbb
loope
fs
sbb
adc
jge
imul
add
lods
sti
cwtl
cmp
rep
es
rcrb
sub
lea
cmp
stos
lods
push
ds
filds
dec
insl
cmp
fadds
int
dec
cmp
mov
mov
cmp
in
popa
nop
subb
int
add
xorb
inc
jmp
leave
mov
add
dec
pushf
xchg
call
jecxz
int3
fwait
aas
movsb
xchg
and
cmc
ret
std
pop
andb
in
pop
mov
xor
mov
in
sub
cmc
out
neg
iret
push
out
sbb
xlat
and
jecxz
xor
in
dec
jae
loop
xchg
lods
xor
push
or
imul
and
movsl
inc
push
mov
dec
mov
lret
jnp
or
jg
xor
fnsave
push
push
int3
stos
mov
stos
xchg
pusha
or
outsl
cmp
xlat
jge
fiaddl
int3
call
push
mov
adc
arpl
sti
clc
push
je
adc
imul
stos
int
push
jb
xor
xchg
sti
movsb
add
cmp
gs
sub
das
inc
cmpsb
adc
mov
sbb
aaa
xchg
stc
inc
icebp
adc
jmp
ja
jecxz
adc
fcmovne
push
aaa
rcll
cmc
lods
push
jae
push
lea
lods
cs
dec
mov
jbe
cmp
push
jns
lds
xchg
cmc
jge
hlt
push
mov
jo
mov
ret
mov
dec
sbb
sub
movsl
pop
sbb
imul
mov
or
adc
cmp
aas
loopne
stc
xchg
sub
jbe
fdivs
jmp
or
pop
movsb
pop
mov
ret
push
push
es
adc
cmp
test
jbe
xchg
push
dec
jle
sbb
jae
pop
cmp
and
pop
or
cmp
jae
hlt
push
mov
scas
shrb
fwait
cmp
stos
jmp
mov
mov
gs
jmp
call
lock
fcmove
stos
sbb
pop
lea
test
sbb
xlat
addr16
mov
inc
push
and
out
ret
cli
inc
ret
pop
popf
mov
je
fbld
subb
sub
in
push
sub
inc
and
sbb
xchg
adc
inc
xor
pop
push
scas
and
adc
cmp
jge
mov
xchg
test
push
inc
mov
or
add
xor
push
js
ficoms
aas
xchg
pushf
popf
adcb
dec
xlat
sbb
movsb
push
sbb
popf
lret
pushl
popf
xor
rorl
sbb
dec
test
inc
inc
jb
cmp
dec
mov
xchg
dec
imul
mov
adc
mov
imul
xor
inc
ds
adc
mov
daa
or
popf
sbb
in
fptan
push
cmpsl
fbstp
lds
push
or
push
adc
shll
popf
cwtl
movsb
mov
jb
inc
cmp
jnp,pn
push
xchg
and
jmp
data16
jecxz
inc
pop
inc
jnp
mov
mov
mov
cld
imul
sahf
pop
or
rorb
or
xchg
pop
aas
aam
mov
push
rorl
sti
xchg
mov
mov
adc
lahf
fnsave
sahf
test
xchg
leave
rclb
pushf
jg
arpl
push
adc
mov
pushf
or
xorl
add
lret
lcall
jmp
add
test
xchg
or
cmc
aad
test
test
mov
adc
in
cmp
push
add
mov
mov
rcll
das
mov
push
or
xor
shlb
mov
sti
pop
xchg
call
jp
sbb
mov
mov
fscale
ds
into
jno
fildl
out
jns
dec
lods
in
push
ss
xchg
ret
jns
jg
nop
sahf
enter
mov
cmp
rcrb
xor
cmp
loop
jg
mov
add
add
outsl
mov
aad
orb
jns
ror
dec
adc
aam
xor
sbb
or
popa
ja
sbb
loope
cmp
dec
inc
add
out
inc
test
adc
jb
push
cmpsl
outsb
cld
jo
fwait
cmpsl
in
pop
inc
loopne
movsl
int
jl
xlat
mov
pop
jmp
scas
or
sbb
ss
into
cwtl
mov
sub
ja
shrb
or
repnz
icebp
cmp
and
mov
or
daa
into
aas
mov
adc
mov
xor
sbb
mov
and
out
xor
cmp
lahf
mov
std
fcomi
sub
cs
adc
sub
mov
sti
xor
inc
stos
inc
mov
cmp
mov
pop
sbb
in
adcb
inc
sti
ret
out
popf
xchg
cmp
jne
and
ret
cmc
mov
sub
in
cmp
scas
mov
push
testb
rcr
pop
pop
xlat
pop
sbbb
cmp
lret
pusha
add
jb
cld
imul
data16
repz
push
dec
mov
data16
das
stos
fsts
cli
xchg
or
fildll
movsl
adc
out
lods
daa
cwtl
dec
jbe
xchg
imul
data16
flds
fld
je
xchg
sbb
xchg
xchg
jle
sbb
mov
cmp
rolb
out
popf
pop
lods
sbb
dec
xor
mov
xchg
sub
in
mov
push
imul
fisubrl
sbb
insl
rclb
loop
cli
xchg
lods
xor
dec
jl
mov
mov
loope
dec
adc
lret
pop
orl
ror
inc
insl
and
xor
cwtl
add
jne,pn
mov
mov
pop
adc
stos
pop
push
clc
mov
push
cmp
pushf
pop
pusha
sub
cli
fdivs
jnp
movb
push
sub
cmc
xor
fidivrs
gs
stos
divb
loop
sbb
gs
repnz
dec
or
and
jge
mov
fimuls
jge
data16
cwtl
scas
les
outsl
jae
mov
gs
ret
sahf
in
mov
sar
test
fisttps
cmpsb
insb
cmpsb
push
mov
ds
add
mov
or
xchg
push
scas
inc
les
mov
push
adc
sbb
jns
rcl
outsb
jb
decb
xor
rcrb
cmp
rcrb
cmpsl
push
into
icebp
test
or
sub
pop
push
mov
insb
sub
int3
mov
lock
les
sub
shlb
and
fldenv
shll
out
xchg
call
jne
mov
xchg
addr16
sbbl
lcall
mov
fldl
mov
xchg
ja
jnp
mov
push
hlt
cmc
push
mov
aam
mov
lahf
neg
mov
sub
icebp
sub
jae
mov
dec
pop
mov
out
add
dec
insb
cmpsl
mov
push
arpl
fsts
and
xchg
pop
mov
roll
jp
pop
pusha
iret
out
cmp
cmp
add
ljmp
xchg
dec
pop
mov
rol
push
repnz
sahf
mov
xor
adc
add
pop
call
pop
std
in
cmp
jecxz
jbe
mov
push
and
sub
dec
xchg
adcb
fsubr
arpl
hlt
pushf
inc
inc
pop
pop
pop
sub
ficomps
mov
test
sahf
hlt
inc
das
or
push
jbe
sbb
in
xchg
and
sbb
sbb
pop
rorl
shr
mov
add
cwtl
jno
xchg
movsl
jno
iret
fisttpl
movsb
add
rcrl
cmp
xchg
dec
inc
lret
popl
mov
jo
daa
lret
mov
mov
add
ret
sub
mov
pusha
mov
clc
inc
jg
mov
orb
arpl
xor
andb
cwtl
xor
repnz
add
jl
push
dec
mov
mov
data16
jnp
ss
cmpsb
test
xor
sub
xlat
out
and
inc
add
xchg
pop
or
imul
inc
lods
out
mov
loopne
cld
out
inc
iret
les
and
xchg
mov
sahf
call
movsb
push
cmp
jmp
xchg
add
xor
adc
and
lods
iret
adc
mov
scas
push
in
or
call
int
xor
pusha
call
arpl
jnp
in
dec
pop
out
into
jb
mov
repnz
jne
hlt
mov
sar
arpl
lret
mov
inc
and
mov
sahf
add
sbb
cmp
repz
nop
fldl2t
cmp
push
fisubl
add
add
push
push
xlat
sbb
std
cmc
in
pop
inc
fildl
jae
icebp
pop
lods
sub
mov
js
mov
fsub
cmp
sub
jno
or
lcall
mov
jmp
pusha
mov
notl
into
hlt
fisubrl
imul
mov
sub
leave
ret
add
push
jmp
js
ret
pushf
and
ljmp
xchg
and
xchg
pushf
into
pop
into
lahf
push
inc
sub
sbb
test
test
add
jb
or
inc
das
xchg
mov
adcb
sahf
mov
add
xchg
sbb
xor
es
xchg
rorl
and
mov
mull
dec
push
xor
push
sbb
pop
mov
arpl
mov
mov
fucomip
sub
mov
into
add
into
ja
das
push
test
fistps
dec
popf
jno
cmp
ret
mov
adc
cmp
outsl
inc
pushf
cs
sbb
add
jns
cmpsb
fisubl
stos
push
jns
push
pop
test
push
into
adc
xlat
lods
cld
mov
jo
es
das
cli
dec
hlt
dec
push
jge
lea
movsb
rcl
add
xor
sbb
adc
daa
xor
xchg
push
das
mov
stc
xor
insb
push
sub
pop
movsl
mov
imul
dec
xor
fwait
sub
ss
xchg
mov
adc
shr
xchg
stos
cli
fnsave
mov
test
icebp
dec
adc
inc
daa
push
into
ljmp
sub
stc
add
mov
jae
xor
xchg
xchg
sub
filds
out
dec
mov
frstor
inc
push
jb
pop
jp
jp
adc
test
lcall
dec
cs
aad
pop
sbb
ljmp
or
or
push
incb
das
cs
in
mov
inc
fcomi
test
xchg
std
xchg
ss
cmp
xor
push
push
xor
js
adcb
scas
or
adc
out
push
xor
rorb
mov
pandn
add
js
push
pop
xor
adc
sbb
mov
call
mov
sbb
pusha
aam
pushf
jns
jb
jl
rclb
lret
js
ficoml
mov
repnz
ss
pop
outsb
test
cmc
ja
je
push
ss
lods
fidivl
int
cs
test
insb
and
lock
insb
rcl
movb
fsubrl
adc
adc
dec
cli
mov
das
repnz
dec
test
mov
dec
xchg
pop
idivb
mov
jmp
in
lods
or
dec
cltd
xor
scas
out
jp
push
inc
cmp
outsl
pop
jnp
int
jmp
stc
push
mov
rorl
mov
mov
xor
push
cwtl
enter
mov
adc
mov
lcall
out
jmp
stos
mov
pop
and
jle
dec
push
sub
stc
and
andl
dec
loope
add
jbe
cmc
xor
inc
sub
insb
mov
push
sbb
adc
mulb
cmpsb
dec
ljmp
and
std
insl
dec
cmpsl
repz
mov
ror
in
fstpl
dec
mov
pusha
jg
int3
jg
add
aas
or
cmpsl
insl
and
sub
inc
xor
lock
mov
mov
dec
addr16
imul
dec
stos
mov
sub
and
push
aad
inc
xchg
cltd
or
jno
scas
jnp
jle
in
cmp
movsb
xchg
xlat
pop
inc
mov
adc
push
sub
fs
outsl
mov
or
movsb
inc
imul
in
mov
lret
jmp
jg
lods
loopne
xchg
sbb
sarl
xchg
aas
inc
scas
pop
and
nop
xchg
icebp
pop
mov
pusha
mov
mov
push
add
outsl
mov
imul
test
jg
mov
sub
cmpsl
aaa
lock
ficompl
cltd
adc
in
mov
and
push
cmp
clc
ja
pop
xchg
data16
mov
ffree
push
and
jge
sub
add
fimuls
push
xchg
and
inc
in
repz
lds
js
sub
shll
xchg
lret
daa
xor
lahf
ret
lds
push
or
cmp
pop
inc
aaa
ss
pop
push
negb
test
xchg
fdivrp
fldl
fidivl
faddl
mov
jae
lea
test
dec
in
sbbl
mov
adcb
rcrb
jp
iret
add
adc
test
in
push
mov
stc
lods
push
out
xor
adc
std
sbb
push
dec
test
clc
push
xchg
xchg
sarl
and
fildl
out
or
outsb
shll
jecxz
push
loopne
rorb
pop
out
rclb
xchg
cmpsb
nop
cmpsb
lret
pusha
in
jae
in
imul
pop
xchg
std
cli
dec
in
testb
mov
pushf
in
ss
call
add
jp
or
test
inc
add
and
mov
dec
jno
jnp
test
jbe
adc
mov
xor
das
mov
ja
cmc
push
add
xchg
jbe
push
cmp
cli
cmpsb
dec
xchg
push
fwait
xor
shlb
call
cmp
push
out
push
and
in
or
or
dec
adc
iret
aam
jmp
test
sub
xor
flds
aad
jl
dec
mov
push
and
aad
rcrl
sub
fs
adc
outsl
insl
addr16
sub
mov
testb
cmp
es
mov
mov
imul
xchg
xor
repnz
int
mov
loope
jae
out
add
lock
xor
rclb
mov
adc
or
or
shl
push
cmp
in
popf
lahf
push
xchg
int3
mov
ret
int3
sar
dec
cmp
xlat
pop
cmp
je
add
mov
mov
sub
ret
dec
outsl
pop
push
stos
lret
cs
cmp
stc
xchg
mov
mov
lret
mov
mov
mov
mov
es
mov
pop
in
in
jbe
cmpsl
aaa
mov
arpl
leave
cmpsl
inc
iret
jo
gs
or
bound
dec
dec
add
mov
insl
add
lahf
outsl
movsl
mov
pop
in
shll
addb
popf
int3
ffree
lods
nop
das
jmp
xchg
adcb
sub
push
adc
cmp
mov
stos
stos
xchg
test
mov
cmpsb
stos
lea
push
sub
ljmp
add
push
push
or
lods
jbe
repnz
pushf
mov
movsl
test
cld
mov
insl
sahf
fcomip
out
je
sub
stos
sub
jecxz
adc
imul
or
mov
cwtl
scas
hlt
sub
cltd
pop
inc
fsubs
call
dec
lds
fldt
jb
pusha
popa
push
dec
ja
icebp
gs
lds
sbb
hlt
xchg
les
ret
mov
sti
pop
mov
push
out
imul
xlat
push
mov
dec
cmpb
push
imul
mov
pop
ja
fildl
pop
ss
mov
xchg
aaa
lretw
insb
adc
cs
aad
aam
fistpl
or
notl
dec
push
fstp
pop
xor
xlat
daa
mov
adc
pop
repz
stc
sub
mov
xchg
xchg
xchg
add
mov
adc
cmp
push
inc
test
push
pop
lahf
stos
int
outsl
outsl
mov
push
call
push
pop
test
test
icebp
mov
sub
jg
fcmovbe
mov
out
and
lea
jle
sub
test
imul
mov
inc
scas
sbb
adcb
xor
outsb
imul
mov
lret
push
jb
pushf
jo
jmp
repnz
pop
and
mov
pop
shlb
ja
rolb
mov
movsl
sbb
out
outsl
js
popl
mov
jbe
loop
out
lock
and
outsl
fstpt
or
or
int3
ljmp
mov
shrl
pop
int3
out
mov
cmp
jmp
or
push
shlb
fwait
mov
aas
ret
xchg
add
iret
jp
and
add
inc
cs
xor
pop
stc
pop
pushf
mov
adc
pusha
xchg
mov
jnp
ds
pop
dec
test
adcl
es
in
lret
pop
stos
adc
clc
in
mov
and
push
cltd
cmp
jge
mov
js
dec
mov
shlb
jp
or
lock
sarl
out
das
mov
insl
cmp
push
push
fwait
ret
in
pop
dec
enter
push
push
out
xchg
xor
fildll
inc
dec
push
push
xor
pop
push
jp
cmp
cmpsl
adc
ja
insb
scas
pop
push
clc
ror
wrmsr
cmp
xchg
sar
ret
orb
or
xor
xor
mov
sahf
je
add
mov
outsb
imul
adc
stos
sub
aam
mov
ljmp
dec
cltd
pop
mov
or
mov
call
sti
rclb
or
mov
fmuls
mov
cmc
cwtl
shlb
aas
cltd
cmp
xor
jo
fisttpl
jp
xchg
jmp
push
mov
enter
inc
mov
push
bound
movsb
xchg
into
cmp
mov
pop
mov
popa
aad
xchg
xchg
test
ja
jecxz
cmpl
mov
lret
jmp
push
dec
jno
cmpsl
add
cmpsb
jl
cli
and
ss
push
verw
pushf
inc
daa
int
cmp
push
adc
outsb
add
inc
add
pop
divb
movsl
jl
pop
lods
fiaddl
xchg
and
out
mov
scas
xlat
add
pop
aas
dec
cmp
in
sub
je
push
int3
shrb
sbb
loope
xchg
mov
iret
gs
or
out
jb
imul
mov
mov
lock
sub
dec
dec
cmpsb
insb
or
pushf
mov
adc
les
fldl
adc
or
std
rcl
jae
test
fs
jmp
push
arpl
lret
push
push
xor
insb
and
jecxz
rorb
pop
xor
add
inc
jmp
loop
popa
addr16
das
aad
push
jmp
popf
xchg
test
cmc
into
je
inc
nop
mov
mov
andb
in
out
xchg
xchg
enter
pop
dec
push
or
dec
iret
jge
xor
cmp
jge
xor
out
lret
dec
mov
outsl
lea
jbe
ret
sub
popa
gs
cmpsb
or
pop
or
lds
and
out
fwait
adc
mov
xor
cltd
cwtl
push
xor
loope
sbb
jg
push
popf
sbb
icebp
mov
pop
pop
and
or
pop
adc
and
lods
imul
sbb
repz
idivl
cmp
inc
xor
adc
jp
mov
mov
fidivs
decl
jge
cmp
push
sahf
mov
xchg
ljmp
sbb
int3
push
shlb
push
stc
gs
lcall
loop
xor
scas
cmp
dec
mov
mov
das
stos
sbb
std
jg
icebp
imul
stc
and
inc
cmpsw
ret
pop
icebp
adc
xor
or
dec
mov
inc
add
xor
lret
inc
es
pushf
jecxz
add
outsl
dec
scas
and
mov
push
push
and
cmp
popa
rolb
fbld
dec
sbb
inc
clc
cmc
cwtl
out
loop
adc
or
ja
mov
add
sti
or
or
stc
sub
or
and
jns
repnz
dec
jg
jnp
scas
mull
test
fcompl
es
sbb
jge
fidivl
cmp
jp
out
sbb
in
mov
pushf
clc
fisubrs
jg
shr
pop
insb
dec
lods
adc
sbb
xchg
jnp
push
add
cs
mov
sti
adcl
inc
adc
insl
sbb
lea
jmp
shll
push
gs
jo
add
cmp
popa
pop
dec
ret
lds
data16
orb
cmp
mov
cmp
cmpsl
jl
fs
dec
mov
add
movsl
push
mov
scas
aad
icebp
out
and
fimuls
jnp
jne
lock
push
les
sbb
roll
mov
mov
push
xchg
sub
out
mov
push
std
cmp
cmp
loope
or
jmp
jnp
hlt
xor
cmp
repnz
mov
cmp
adc
test
aas
jb
lds
pusha
add
cmp
jl
test
test
push
sbb
stos
jge
push
and
enter
add
jbe
jbe
out
test
add
sub
int
mov
sarb
js
jno
aas
or
lods
mov
add
adc
std
pop
repnz
mov
pushf
repnz
mov
fldt
arpl
fisubrl
loopne
jl
lods
adc
lea
jb,pt
data16
inc
add
sub
adc
pop
mov
cwtl
add
aad
aaa
mov
fimull
arpl
insl
loope
dec
testb
inc
es
pop
std
jmp
push
adc
pop
pop
lds
inc
mov
out
ss
inc
popf
scas
not
push
in
push
adc
addr16
sbb
in
mov
pop
loope
sbbl
add
jo
out
jae
sarb
mov
mov
cmp
loop
pop
jp
insb
or
popa
cli
push
jb
out
push
ljmp
push
add
cli
cmp
jns
mov
pop
and
stc
repz
sbb
inc
mov
enter
mov
cmpl
push
xor
mov
loope
rcrb
mov
rol
shlb
fisubrl
std
ret
cltd
xchg
adc
xchg
xchg
mov
sbb
inc
inc
mov
push
adcb
clc
cmp
or
add
mov
sbb
shll
mov
pop
data16
inc
pop
sahf
jae
hlt
fisttpl
fldt
mov
cli
add
mov
fcompl
jns
mov
sub
movb
adc
mov
shrb
lds
inc
and
sub
xchg
fistps
push
pop
movsl
fsubrl
testb
inc
mov
mov
mov
mov
jns
pop
mov
test
mov
nop
aad
inc
fs
je
cmpsl
test
sbb
outsb
in
notb
pop
ret
sbb
fadds
push
in
lds
mov
adc
sti
jbe
jg
out
enter
adc
mov
push
insb
out
push
pop
pop
or
sbb
mov
rcrl
dec
fs
push
pop
or
outsb
cld
xchg
sbb
mov
scas
mov
ds
mov
enter
out
cli
jnp
sbbl
and
adc
pop
ds
adc
lds
jle
and
lea
and
jnp
cmc
dec
sub
cmp
mov
mov
dec
mov
fcomps
js
add
mov
adc
xchg
stos
and
dec
pop
shrl
stos
rclb
adc
sub
aad
push
and
js
lods
mov
rclb
xor
out
jl
cmp
pop
mov
mov
xchg
or
adc
add
fistpll
pushf
sbb
sahf
enter
sbb
inc
pop
sub
sub
insl
stc
rolb
jo
loop
rcrb
xlat
jbe
ror
sbb
mov
and
repnz
in
jp
popa
inc
xor
shll
mov
or
ja
popa
outsb
aas
pop
bound
inc
jecxz
shlb
push
ja
ds
mov
mov
rcl
stos
sahf
ret
subl
nop
stc
sub
lods
pop
and
and
ja
sbb
sub
in
push
pop
pop
es
xchg
cmp
inc
add
inc
in
andb
fdivl
jns
dec
mov
jecxz
in
pop
dec
andb
movsb
pop
sub
or
arpl
icebp
test
dec
mov
outsb
add
popa
insl
in
cmp
dec
aaa
je
cmpl
loope
or
xchg
scas
pushf
jno
sarl
or
add
out
pop
testl
adc
sbbb
sbb
pushf
dec
and
inc
nop
push
dec
cs
mov
mov
sbb
or
cmp
sti
inc
leave
loope
lods
pop
insb
xor
xor
daa
jae
lret
ficoml
aad
ss
xchg
movsb
xor
pop
stos
push
and
aaa
xor
sti
sbb
mov
mov
js
dec
jne
lock
and
pop
fdivrs
ja
movsb
decb
xchg
sub
add
mov
enter
push
daa
in
fsubrl
pop
pop
xorl
lahf
bound
es
shrb
or
xchg
cmp
int
orl
xchg
push
out
pop
sbb
jp
icebp
test
sub
repnz
dec
test
fcoml
hlt
pop
mov
jns
ds
push
push
sahf
pop
mov
push
ljmp
cmp
lods
stos
sub
popf
push
fs
push
push
xchg
shl
mov
in
lahf
push
test
adc
mov
lret
sbb
movsb
fmull
inc
pop
int
aam
iret
arpl
add
arpl
loop
mov
rorb
addb
mov
xchg
mov
fdivrl
add
nop
push
or
jg
lds
jmp
add
cs
je
inc
push
movsb
pop
lods
add
jl
gs
pop
cli
cmc
out
imul
les
sub
mov
ds
inc
pushf
mov
inc
xchg
xor
fimuls
into
add
xor
push
mul
xchg
jo
out
fidivrs
lcall
int3
pop
cli
ljmp
into
aam
mov
int
mov
mov
cltd
add
cmc
adc
rol
sub
fs
leave
pop
pop
mov
push
stc
movsl
jno
and
call
cld
xchg
out
inc
je
xor
adc
xor
out
stos
fsts
movsb
aad
fdiv
mov
pop
hlt
push
lds
les
jns
imul
out
int
subl
insl
fsubr
mov
inc
loopne
jno
lods
and
fsubp
lret
push
sbb
xchg
jecxz
nop
mov
in
xor
push
push
xchg
jnp
jnp
addr16
cli
rcrb
sbb
push
add
pop
int3
repnz
or
das
loop
pushf
lahf
cmp
add
cmpsb
in
mov
ficomps
daa
mov
or
mov
mov
jmp
xchg
aad
test
mov
add
cwtl
pop
stos
insl
sbb
lahf
add
or
push
pusha
std
insb
das
loopne
cmp
xor
adc
out
insl
push
stos
sbb
cli
es
adc
adc
or
movzbl
rclb
mov
repnz
mov
lds
in
xchg
jle
scas
dec
test
fninit
mov
and
iret
add
mov
adc
or
xchg
pop
les
xor
sbb
mov
mov
ja
mov
mov
mov
mov
nop
push
add
ljmp
sbb
insb
outsl
push
cld
add
jnp
fisttpll
pop
xchg
outsl
adc
or
xchg
test
lea
xor
dec
adc
lds
or
sti
int
out
lret
cmc
test
and
out
scas
pop
les
mov
mov
shrl
inc
dec
out
inc
mov
xor
jns
js
or
fcoms
jnp
xor
lods
cmp
cmc
xorl
in
inc
mov
shrl
movsb
outsb
jmp
pop
mov
neg
movsl
popf
cmp
icebp
aam
or
push
xchg
arpl
call
in
or
out
imul
hlt
sbb
repz
icebp
push
and
adc
clc
push
mov
das
cs
xchg
push
pusha
sbb
sub
xor
mov
in
cmp
mov
loopne
jl
les
test
jmp
mov
cli
mov
jae
xchg
push
xlat
iret
test
shlb
lahf
ficoml
mov
imul
dec
inc
xchg
xchg
cmp
std
add
dec
sbb
rorl
xlat
sbb
pop
or
mov
cltd
cmpl
push
ficoml
ja
ds
pop
jg
add
bound
push
jl
leave
xor
call
cmp
sub
mov
push
sbb
mov
push
push
dec
clc
cmp
out
gs
or
mov
xchg
jno
inc
adc
in
xchg
xor
fsubrs
data16
xchg
movb
inc
sbb
fwait
adc
push
push
pop
enter
xlat
pop
mov
xlat
repz
push
push
xor
fidivrs
aad
out
add
das
inc
sbb
and
int
xchg
adc
push
gs
push
dec
in
sti
mov
dec
lcall
pop
sbb
push
insb
xchg
adc
cmp
cmp
lods
mov
and
and
int3
cmp
adc
lock
cmp
add
push
push
imul
nop
aas
xor
fdivr
dec
sbb
mov
cld
cmc
and
jl
rolb
and
inc
pop
or
daa
sti
push
sub
sbb
jnp
and
lret
rol
std
mov
std
arpl
inc
ljmp
test
in
lahf
cwtl
jb
les
fadd
push
loop
sbb
cmp
mov
popa
cli
cmp
lcall
dec
cli
jbe
int3
adc
aas
clc
push
cmp
inc
push
inc
ja
call
insb
data16
mov
popa
loop
fstpl
sbb
jo
sub
mov
xor
ja
jb
enter
sub
fs
pop
pop
push
lea
nop
pop
out
sub
xchg
popa
outsl
cmp
lods
call
jns
pop
push
dec
fimull
dec
sub
cmp
add
lea
jbe
add
jp
sti
sbb
xchg
lods
sti
and
imul
sahf
inc
ficompl
in
and
je
jl
test
insl
dec
mov
dec
out
fs
push
and
push
xor
in
insb
xchg
rcl
push
push
aaa
cli
dec
mov
jns
jle
mov
idiv
stc
sti
rcll
mov
push
cmp
add
stos
mov
mov
adc
adc
addr16
sub
rorb
rcll
lret
fadd
ljmp
orl
jp
lret
loopne
adc
pop
out
cs
lret
ja
cmc
mov
movsl
add
int
cmc
ss
mov
sub
mov
inc
ret
push
int3
fmul
mov
sbb
roll
rorb
mov
push
pop
mov
lods
sbb
xchg
lods
mov
xor
add
push
loop
cmpsb
mov
mov
xor
sbb
mov
into
nop
aam
cmpsl
mov
leave
xor
sbb
push
imul
add
cmp
xrelease
icebp
stos
push
mov
loop
fbld
mov
cltd
gs
orb
xchg
cmp
mov
mov
adc
out
dec
and
out
jo
push
and
or
sbb
sahf
and
fiadds
es
xchg
mov
inc
xor
inc
mov
and
dec
fstpt
in
push
jne
in
cwtl
lea
flds
sti
sbbb
or
mulb
xchg
bound
push
pop
sbb
mov
and
in
or
mov
in
mov
and
pop
xlat
ret
and
xor
and
call
xchg
insb
fwait
cmp
stos
adc
or
imul
lret
mov
outsl
inc
jae
setle
nop
ret
inc
rorl
ficoms
ja
sub
sub
pop
push
scas
jmp
xchg
push
lock
inc
icebp
jp
dec
cmpsl
pop
mov
adc
std
mov
jnp
xchg
daa
xor
push
mov
pop
sub
pop
pop
xchg
push
stc
mov
aad
add
es
inc
push
mov
add
sub
adc
cmp
push
lods
push
test
rcl
xchg
mov
pop
fisttpll
push
sbb
test
cmp
in
cwtl
ds
cli
push
js
cwtl
mov
inc
xor
fsubs
mov
imul
mov
pusha
mov
loopne
or
add
dec
sbb
push
inc
mov
add
pop
push
pop
int
lahf
push
insl
mov
fsubl
xchg
fsubr
sub
pop
lods
mov
sti
push
mov
inc
ss
into
mov
xchg
loop
outsl
mov
mov
movsl
mov
ljmp
mov
roll
mov
xor
adc
nopl
lods
out
fadd
test
aad
cli
popf
mov
test
xor
add
mov
enter
popa
mov
loopne
mov
cmp
popa
pushf
stos
pop
jno
fistps
adc
call
pop
rcrb
test
or
sarb
pop
inc
and
lock
mov
jns
mov
or
add
jecxz
movsb
pushf
popf
fildll
test
cmp
mov
outsl
rcr
test
or
sub
mov
movsb
push
mov
push
add
aad
cmpsb
fbld
in
repz
popa
xchg
push
stc
xor
sbb
rcrb
pavgw
int
dec
rclb
hlt
and
pop
push
inc
les
ss
xchg
or
xchg
insb
scas
test
flds
jmp
fdivl
add
inc
mov
stc
ja
mov
pop
imul
fcoml
cmp
out
pop
pop
test
push
ljmp
cmc
or
push
mov
call
inc
je
ja
lcall
sub
cmpsl
repz
sbb
addr16
shl
pop
in
and
sub
push
xchg
imul
neg
adc
int
xor
jbe
mov
incb
into
jge
inc
je
fsts
mov
enter
xadd
ret
insb
push
test
mov
leave
rorb
adc
cmp
mov
mov
ss
daa
popf
push
imul
push
or
pop
or
out
aaa
adcb
xlat
data16
rcr
stos
repz
in
out
outsb
mov
leave
ret
push
outsl
loope
cmp
aaa
cmp
pop
fstpt
addr16
loopne
and
push
mov
dec
mov
fsts
jmp
xor
subb
movsl
insl
sub
call
push
push
jmp
jae
in
les
int3
pop
bound
cwtl
daa
imul
fimull
test
orb
dec
mov
push
ret
popa
lfs
out
or
mov
inc
add
js
push
jb
lcall
dec
mov
icebp
mov
mov
aad
cmp
divb
lock
icebp
mov
cs
mov
and
loope
mov
push
xchg
out
xor
int
xchg
out
mov
icebp
aaa
jle
cmpsb
jo
in
sbb
xor
popf
cmpsb
mov
xchg
aam
jbe
bswap
int3
push
fwait
sbb
pop
mov
and
lea
jg
sub
cmp
or
xchg
int3
addl
push
sarl
out
stc
iret
mov
pop
in
imul
adc
push
xchg
mov
jecxz
cmp
int
sbb
jecxz
and
xor
cmc
rcll
stc
or
add
push
pop
jns
nop
and
add
adc
aam
clc
sub
idivl
daa
mov
mov
and
xor
push
mov
test
pop
popf
imul
popa
adc
inc
jb
lds
ret
xor
jl
mov
fistpll
jo
clc
outsl
out
sbb
jo
std
div
scas
cmpsl
add
xchg
fistpll
popf
imull
xor
mov
push
mov
xor
pop
loope
movsl
jnp
dec
dec
and
ss
xchg
jae
jb
adc
fistpl
nop
pop
ret
enter
adc
and
pop
mov
movsl
inc
mov
xchg
mull
je
fdecstp
leave
xchg
insl
inc
xchg
imul
sbb
dec
ljmp
or
testb
repz
mov
adc
dec
pop
cltd
in
lret
fldl
mov
imul
ljmp
jge
and
lods
hlt
ljmp
in
jle
test
rolb
jecxz
fnstenv
xchg
adc
outsl
sub
push
xchg
mov
aad
and
pop
jmp
push
dec
mov
pop
dec
xor
loope
add
mov
inc
bswap
std
fistl
sbb
loop
les
clc
push
popf
sbb
jb
or
mov
loopne
dec
mov
mov
lods
mov
push
enter
xor
sub
sub
sti
mov
or
cmp
sahf
mov
ret
mov
loop
push
push
sub
jmp
movsb
stos
pop
push
js
cli
push
call
cmp
sub
or
repz
fmul
rcrb
xchg
pop
cltd
cmpsl
ja
mov
sbb
adc
xchg
pop
outsb
cmp
inc
fs
sti
jle
movsl
testl
mov
movsl
movsl
inc
xlat
or
jbe
stos
daa
iret
or
inc
imul
jbe
push
orl
bound
sub
aad
mov
mov
xchg
lods
rorl
test
jb
std
sub
adc
inc
out
fldcw
push
pop
aam
shl
mov
xchg
mov
imul
or
jg
popa
jns
and
xchg
inc
repz
adc
loop
addr16
outsl
xchg
mov
ljmp
or
fisubrl
addr16
movsb
pusha
movsb
cmp
loope
rclb
mov
js
mov
js
test
shlb
jno
pushf
mov
mov
lods
mov
xchg
imul
ljmp
cmp
mov
push
jmp
xor
pop
xchg
push
pop
mov
pop
cmp
cmpsl
fmull
pusha
adc
stos
jecxz
leave
adc
sbb
sti
fcoms
push
or
dec
movsl
inc
popa
les
inc
test
sahf
mov
lcall
mov
insb
push
xor
xchg
pushf
mov
or
sbb
ss
pmaxsw
lods
mov
pusha
shrb
cmp
cmc
cmp
cltd
xchg
shrb
adc
jbe
sub
sub
cmpsb
aas
add
push
jmp
inc
loope
addl
scas
lods
outsl
pop
jp
push
mov
mov
jp
mov
pop
pop
popf
jmp
push
dec
sbbl
gs
shrl
inc
adc
push
jo
imul
insb
xchg
fs
and
outsl
push
cmp
int
fcompl
or
jmp
push
xchg
jns
lcall
popf
js
adc
jne
cmp
pop
imul
ret
mov
push
dec
sahf
mov
push
sti
mov
and
mov
out
loopne
inc
or
shll
imul
bnd
ficomps
pop
cwtl
cltd
adc
dec
push
xchg
shll
cmc
iret
fldcw
pop
es
jg
and
fs
add
cmpsl
xlat
outsl
or
dec
xchg
in
xor
inc
out
popf
stos
jg
daa
lods
push
js
fidivrl
loope
ljmp
nop
jne
sbb
out
sub
push
data16
out
xlat
sti
jecxz
or
xchg
mov
cwtl
test
push
xchg
adc
sbb
xchg
dec
clc
xchg
xor
shl
fs
stos
dec
dec
jl
shll
jp
jmp
andl
loop
inc
aas
leave
outsb
xor
and
lret
add
aaa
mov
arpl
mov
adc
mov
ficoms
mov
shrb
xor
mov
sub
push
inc
nop
inc
jae
or
adc
mov
jnp
add
sbb
in
testl
stos
push
and
hlt
cmp
push
ja
xchg
xor
lret
fmul
ret
push
dec
push
xor
inc
mov
xchg
and
aaa
mov
scas
orl
adc
clc
stos
insl
movsb
mov
xchg
imul
sbb
leave
ljmp
xchg
add
dec
xchg
sub
lret
mov
jge
lret
cld
ja
aaa
mov
pop
shl
xchg
xor
cmp
mov
xorb
and
loopne
flds
sub
xorl
dec
int3
inc
mov
push
andl
xor
out
sbb
je
ficomps
xlat
pop
out
repz
cli
mov
xor
outsl
dec
xor
mov
fnstenv
sbb
movsb
dec
mov
add
aaa
insl
out
push
ss
mov
and
mov
xchg
sbb
xor
lcall
adc
push
fsubr
arpl
addr16
imul
rolb
pop
cmp
ret
int
ret
xchg
cmp
aam
ficompl
jns
or
in
ss
cli
jmp
push
pop
inc
jo
push
out
xor
dec
xor
add
inc
xchg
inc
sti
les
pop
call
xor
cltd
sbb
les
stos
mov
leave
dec
stc
call
popl
out
jmp
cmp
popa
adc
es
popf
hlt
fldt
xor
cmp
pop
push
jecxz
sub
push
mov
mov
sub
or
mov
mov
enter
shr
or
mov
test
adc
jo
jns
fdivp
mov
add
inc
imul
xchg
and
jnp
dec
mulb
mov
fmuls
xor
push
push
push
outsb
adc
js
xor
mov
push
cmp
mov
xchg
mov
jno
push
sub
bound
pushf
xorb
mov
pushf
jl
cltd
negl
shlb
adc
repnz
mov
dec
es
inc
xchg
out
cmp
sbb
push
jb
jno
or
dec
jle
inc
mov
sarl
adc
push
cmp
xchg
push
add
xchg
cmp
in
rcll
xchg
and
outsl
or
lcall
pop
push
mov
loop
fprem
movsl
mov
stos
xchg
popl
cmpsl
cmp
mov
dec
loope
mov
cmpb
dec
add
mov
pop
shll
jp
cli
ss
mov
push
lcall
call
cmp
mov
in
and
daa
and
test
clc
adc
nop
sar
std
pop
jne
adc
or
mov
call
mov
mov
xor
popf
mov
cld
dec
dec
movb
cltd
mov
push
dec
mov
aad
inc
decb
sbb
mov
push
lahf
pop
ret
jmp
mov
mov
fldenv
pushf
add
stos
andl
hlt
std
sti
in
pushl
pop
xchg
scas
addr16
jmp
bound
mov
mov
dec
outsl
adc
cs
dec
shrb
adc
jp
aaa
dec
fstps
mov
add
addr16
push
popa
jne
and
daa
cli
adc
jg
pop
data16
loopne
aas
inc
fnstsw
jge
mov
out
mov
push
sub
imul
out
cmpsb
outsb
push
push
cmpsl
pop
test
jge
inc
push
fldenv
outsl
call
mov
outsb
stos
aam
sub
hlt
loop
adc
cmp
in
jl
push
pop
mov
movl
ja
push
lds
xlat
fwait
lods
adc
leave
in
enter
mov
and
pop
hlt
push
arpl
in
sbb
out
pop
dec
inc
ret
test
or
ss
lods
cmc
popf
mov
lret
arpl
repz
int3
addr16
stc
sarl
inc
dec
jae
in
sar
xchg
push
or
xor
cld
or
mov
in
jmp
test
addr16
add
outsb
lds
sbb
or
cmpsb
int3
loopne
std
bound
xlat
pop
sub
cmp
add
lods
sub
out
jl
imul
jmp
pop
sti
insl
jge
das
dec
cmp
mov
ret
push
dec
push
push
add
lods
mov
lods
mov
ss
jle
outsb
stos
sbb
xlat
pop
adc
bnd
sbb
mov
cli
cmp
jecxz
cs
cli
pop
jecxz
leave
cmp
xchg
add
xor
jecxz
outsl
xor
push
out
outsl
push
adc
sti
cmp
cmp
or
mov
add
cmp
test
and
xor
jmp
test
stos
xchg
xlat
pop
pop
int3
and
outsb
aaa
sahf
sub
mov
xor
in
jns
lret
mov
leave
or
lock
jnp
rcr
pop
les
jno
sti
inc
js
push
in
imul
dec
fld
cmpsb
sti
notl
cli
leave
sub
idiv
or
mov
push
js
sbb
inc
not
in
data16
aas
xor
xlat
ds
push
pusha
sti
xor
outsb
sbb
lock
xor
int3
pop
push
jecxz
jmp
xorb
sub
scas
xor
pop
pop
push
addr16
icebp
mov
cltd
add
loope
loop
push
xchg
inc
rorl
shrl
cld
cmc
std
arpl
movsb
jl
and
clc
insl
adc
mov
push
add
in
dec
es
mov
mov
das
sbb
sbb
addr16
mov
sbb
xor
shr
push
mov
jl
cmp
leave
dec
imul
and
popf
inc
sub
xor
push
ja
dec
mov
sbb
sbb
jge
cmpsb
and
add
cli
jecxz
jns
clc
mov
movsb
dec
fdivrs
mov
inc
in
adc
mov
add
mov
inc
inc
in
shlb
popf
xchg
ss
es
or
inc
jnp
dec
cmp
ja
mov
mov
shlb
mov
adc
jnp
out
xchg
jnp
jl
mov
dec
or
cmp
dec
mov
or
mov
push
insb
dec
ret
xor
adc
cwtl
outsb
adc
test
adcb
xor
xchg
push
lcall
add
fistpl
and
stos
cmp
cld
out
pop
repnz
mov
dec
mov
mov
jb
cs
hlt
inc
fisttps
cmp
sbb
jae
jo
pop
lods
ret
jb
lock
mov
jp
mov
mov
ja
cmovs
adc
cmpb
xchg
fldcw
adc
ficompl
sub
pop
out
fst
mov
inc
dec
and
test
push
cmp
outsl
sti
shrb
mov
scas
ja
in
cmpsl
es
sbb
gs
ds
jl
xchg
cltd
fcomi
fwait
sbb
fistpl
decb
lcall
pop
adc
dec
andb
sub
mov
scas
pop
sbb
pop
aaa
mov
scas
push
pop
int3
aaa
mov
dec
xor
adc
add
arpl
pop
dec
pop
mov
push
enter
cmpsl
sub
cmp
adc
lret
sub
cmp
addl
xchg
mov
and
lods
mov
inc
shlb
ljmp
pop
cmp
mov
mov
pushf
or
push
sbb
jbe
mov
arpl
pop
rclb
mov
test
sub
pop
lock
fmull
and
jnp
insb
mov
adc
test
nop
mov
jecxz
dec
jno
shlb
sub
insl
mov
popf
inc
loop
cmpsl
and
jge
dec
cmp
subl
js
inc
push
sbb
push
add
cwtl
jmp
aaa
push
or
mov
data16
inc
imul
cmpsl
lahf
add
jne
imul
xor
es
ret
fsubrp
cwtl
imul
aas
or
test
xor
adc
mov
mov
cli
popf
repz
inc
imul
adc
pop
pop
imul
push
ss
fiadds
jo
sbb
mul
xor
mov
fnstenv
sti
xchg
lret
inc
in
and
data16
cmp
outsb
adc
mov
inc
divb
lock
jl
pop
ret
mov
xchg
or
mov
movsl
mov
stos
leave
cmpsb
in
lods
xor
enter
rcl
jmp
inc
dec
in
xchg
lahf
adc
push
and
xchg
into
cli
mov
imul
mov
ljmp
add
ja
int3
sub
repz
call
xor
sub
push
mov
xchg
outsb
loop
jae
pop
in
or
pop
mov
int
pop
sub
es
iret
imul
push
out
xorb
push
ja
mov
pop
loope
dec
pop
fstl
das
call
xor
insl
shrl
sub
in
ret
and
sub
xchg
outsb
repz
jb
lea
inc
lcall
cltd
add
movsb
addr16
fxam
cmp
pop
aam
dec
mov
imul
iret
test
xor
or
xor
jecxz
jp
in
sub
jne
in
std
xlat
test
jns
sub
fidivrs
jge
lds
call
cmp
outsb
fcoms
jg
mov
add
adc
popf
sarl
js
sub
or
subb
pop
xor
mov
mov
hlt
and
dec
sub
or
out
sarl
je
sbb
sbb
adc
pop
fdivs
xchg
lret
or
repnz
dec
int
gs
out
sub
mov
ret
sbb
hlt
pop
subb
inc
push
dec
stos
push
aam
xorb
into
das
inc
roll
jo
xchg
xor
cmp
jg
cmpsb
int3
scas
xchg
iret
inc
and
xor
rcrl
faddl
filds
cld
call
push
mov
pop
mov
mov
scas
jmp
xchg
stos
sbb
je
sbbl
or
nop
repz
stc
push
ret
nop
mov
inc
inc
jmp
movsb
push
cld
imul
inc
pop
and
push
adc
lock
repnz
mov
pop
mov
enter
dec
xor
inc
ret
mov
pop
cli
fstl
jno
sub
movsb
pop
and
clc
adc
xlat
sub
push
push
xchg
fimuls
mov
push
subb
hlt
fcomps
sub
push
repnz
aaa
popf
and
out
sub
add
dec
fcoml
loopw
call
sub
mov
mov
xor
push
or
leave
es
push
arpl
mov
enter
je
movsb
in
out
and
leave
rcrb
sub
xchg
xchg
add
mov
jb
sti
or
shlb
es
cmp
xchg
in
xor
adc
loopne
jge
call
push
sub
mov
or
js
or
icebp
enter
push
or
out
mov
pop
sub
push
sbb
push
sahf
sub
adc
push
cltd
daa
jnp
mov
loopne
xor
mov
push
loope
shlb
cltd
inc
lods
jl
shll
leave
jns
jb
xor
insb
loopne
xor
push
jl
lret
or
sub
out
push
or
shlb
dec
arpl
xor
mov
push
mov
gs
mov
loopne
test
sub
lea
mov
or
pop
cmp
sbb
insb
mov
outsb
sub
jge
cmp
stc
leave
jl
sahf
adc
loopne
xchg
inc
and
or
jb
pop
lret
xchg
outsl
lea
scas
iret
cmp
rcll
insb
scas
mov
lods
sarb
rcrl
mov
xor
sbb
xor
mov
mov
and
sbb
and
stos
sub
inc
xchg
or
sub
clc
add
scas
js
inc
data16
iret
fistps
dec
addr16
js
scas
cmp
loop
mov
xchg
pusha
jg
out
into
aas
shll
push
addr16
clc
jge
adc
pusha
xor
cmp
les
xor
stos
lds
mov
push
shll
sti
lea
rolb
sarb
aam
mov
push
aaa
cld
divps
push
test
in
movsb
lret
or
push
xchg
repz
mov
mov
jle
fsub
repnz
imul
repz
fcmovnu
arpl
scas
lea
das
push
fiaddl
test
jno
xchg
inc
repnz
inc
cmc
les
mov
outsb
adc
jo
push
mov
loop
insl
int3
gs
xchg
inc
pop
and
mov
fwait
mov
fdivl
rorl
adc
mov
jecxz
push
or
xor
rorl
jle
nop
cmp
add
psrlq
adc
insb
repz
bound
inc
repnz
xchg
fisubl
mov
sbb
add
jge
xchg
ja
test
pop
sbb
maxps
lds
xor
lret
or
mov
sub
pop
inc
sbb
jnp
jle
sub
loop
dec
filds
dec
outsl
lcall
sbb
mov
stc
frstor
mov
js
arpl
mulb
sti
jmp
mov
mov
repz
mov
jecxz
push
inc
xchg
xor
rcr
test
xchg
mov
xchg
sub
and
cmc
in
xchg
mov
sbb
pusha
inc
or
cmp
stc
aam
lock
movb
fisubl
jns
dec
push
lds
jb
call
xor
sbb
rorb
fs
lea
out
imul
adc
add
push
jnp
loopne
mov
adc
in
mov
fidivs
sbb
movsb
hlt
mov
daa
cli
rol
lea
adc
js
xchg
enter
lds
adc
sub
pusha
pushf
test
mov
inc
mov
inc
imulb
and
lock
test
sahf
icebp
adc
cltd
or
xchg
lahf
push
dec
jo
adc
xchg
stos
scas
data16
xor
mov
hlt
inc
jl
lods
dec
jp,pn
jbe
mov
sub
inc
lea
pop
add
lahf
and
leave
jae
inc
ss
push
add
movsl
movsl
mov
jno
movsb
flds
cmove
cmpsb
shlb
adc
adc
xor
das
inc
jmp
inc
xchg
add
inc
inc
pop
loop
pusha
dec
xchg
fs
pop
aam
adcb
push
cmpl
sbb
jge
das
jecxz
in
pop
adc
xor
mov
dec
pop
mov
xor
in
add
in
aas
xlat
pop
in
pop
mov
sub
outsb
cvttps2pi
jp
dec
xor
mov
test
fistps
mov
mov
pop
mov
jmp
repnz
push
pop
adc
bound
cmpsl
in
mov
test
push
push
and
push
mov
jl
sbb
out
in
std
loop
jo
repz
push
sub
rcr
xchg
fs
les
adc
and
loop
jmp
mov
fcmovb
xchg
mov
aam
mov
pop
and
mov
push
subl
inc
pop
push
repz
fidivrl
pop
push
aaa
mov
cwtl
addr16
xchg
leave
es
gs
xor
movsl
cmp
push
loopne
dec
cmp
ret
mov
add
dec
stc
outsb
fisubrs
push
cmc
pop
mov
push
pop
fdivrl
adc
push
sub
fcompl
dec
mov
fstps
in
xor
sbb
sbb
ja
and
cli
mov
or
add
cmp
sub
lods
push
repnz
outsl
in
insl
int3
repnz
repz
pusha
push
mov
add
cmp
loop
pop
js
xchg
mov
jae
push
xchg
or
and
inc
or
mov
mov
sahf
sbb
cmp
movsl
mov
ret
repnz
stc
jp
pop
out
ja
lea
mov
mov
rcrl
mov
xchg
mov
fistpll
cmp
sbb
jbe
or
cmc
mov
push
test
scas
mov
andl
cwtl
dec
stc
out
cmpb
sub
xchg
pop
shlb
arpl
cwtl
fsubp
out
cmpsb
les
adc
cmp
sbb
shl
xor
push
stos
ja
cmp
mov
lods
mov
cmpsl
je
sahf
das
test
adc
shll
and
andl
fidivrs
cmp
mov
lahf
addl
lret
pop
inc
xor
aam
xor
in
movsl
sbb
mov
subl
sub
js
fisubs
pop
imul
sti
and
mov
scas
add
mov
mov
add
decl
stos
cmp
mov
sub
push
inc
xchg
adc
sbb
dec
loope
int3
cmpsb
push
jmp
icebp
jnp
dec
dec
add
push
sub
inc
dec
pushf
inc
or
arpl
lods
sub
test
adc
in
xchg
movsl
push
jl
inc
incl
popf
aas
hlt
paddw
mov
in
dec
add
inc
rorb
or
jmp
add
xchg
mov
jnp
mov
push
mov
fildll
das
mov
arpl
cmp
sub
cmc
loopne
and
push
js
neg
mov
jge
repnz
and
mov
adc
shl
aas
iret
jnp
xor
xchg
pop
dec
push
ret
mov
sbb
jns
pop
in
add
mov
sub
xor
mov
sarb
mov
out
lret
lock
xchg
jae
adc
xlat
stos
jno
pop
jo
cmp
rcrb
dec
dec
cs
cltd
popa
jne
roll
test
rcrl
movsb
imul
pop
scas
add
or
xchg
stos
mov
loope
loop
lds
fidivs
add
lret
rorl
push
mov
adc
daa
fldt
xlat
nop
icebp
in
ss
subb
lock
rcrl
scas
or
add
mov
xor
pushf
sub
mov
repz
nop
xchg
inc
lds
sti
push
arpl
fs
adc
dec
mov
jecxz
sub
ljmp
jp
lock
fadd
roll
jno
sub
dec
add
cmp
ljmp
ret
xchg
or
pop
aam
mov
repz
int
cwtl
out
or
or
ja
jecxz
fs
dec
cmp
lea
and
aad
sub
mov
nop
fwait
jb
and
adc
out
scas
in
imul
scas
stc
stos
xor
outsl
jae
in
jl
imul
test
cmp
test
repnz
sub
shld
mov
cmc
cmpsl
sbb
mov
nop
sbbb
or
add
fdivs
sti
negb
mov
pop
cwtl
fucomi
sti
int3
loope
addr16
cli
mov
and
jne
cld
inc
or
cmp
inc
sbb
adc
xlat
shl
sti
xor
mov
cmp
jg
enter
lods
aaa
jge
push
jl
pop
push
shll
sbb
icebp
arpl
sub
dec
inc
add
dec
adc
or
mov
sub
jo
leave
or
sysret
negb
fdivrp
js
mov
fnstcw
scas
pop
subb
pop
lcall
add
lcall
fdivrp
mov
scas
mov
sub
mov
bound
xchg
imul
adc
sbb
cmp
jle
push
fmuls
sub
hlt
dec
fcompl
and
jmp
cmp
jge
pop
xchg
mov
mov
cmpsl
fistpl
pop
hlt
cltd
shl
mov
push
lahf
sbb
jmp
pop
xchg
adc
add
test
push
lret
shll
fistpl
lock
and
mov
pushf
mov
ja
test
sub
inc
push
cmp
mov
notb
push
pop
hlt
sub
push
cmpsl
push
daa
xchg
rorb
mov
mov
nop
lcall
inc
cmpsl
inc
or
adc
leave
jle
loope
sbb
xchg
pop
xor
dec
xor
pop
data16
arpl
lods
xor
sti
xor
sbb
iret
add
rcrl
mov
dec
cmp
xchg
test
lock
adc
sbb
imul
jbe
fdivr
jnp
loope
xor
fistpll
aas
les
in
add
jp
rolb
pop
sti
lcall
test
fiaddl
rcrl
xchg
dec
adc
push
into
sbb
xchg
xlat
pop
mov
sbb
imul
push
mov
es
mov
pop
xchg
stos
adc
mov
and
xchg
jnp
xchg
daa
sub
lahf
adc
inc
jl
and
mov
dec
testb
rcl
fidivs
adc
scas
cmp
cmc
mov
not
iret
add
pop
mov
pop
xor
es
push
jp
add
cmp
inc
in
sbb
in
test
add
fwait
popf
fstl
add
aas
sub
mov
pop
cmp
pop
popf
xchg
mov
jbe
mov
adc
mov
mov
les
xor
mov
inc
outsb
hlt
jo
push
or
sti
aad
and
mov
pop
push
pop
pop
inc
shrb
push
fdivrs
in
shll
mov
sbb
mov
frstor
sub
mov
int
cmpsb
cmpsl
sub
mov
sbb
xchg
adc
jmp
dec
pusha
ljmp
les
iret
outsl
cmp
es
pop
std
jae
out
std
clc
dec
imul
and
jb
dec
int3
cmp
insb
in
pop
aad
jmp
jmp
inc
dec
fdivrs
dec
pop
je
in
aam
xchg
sbb
and
sub
push
into
pop
cmpsl
mov
jg
insb
adc
jp
divb
jl
sub
mov
inc
mov
cmp
fimull
lds
or
adc
sbbb
mov
or
shll
sahf
pop
repnz
jne
fs
lahf
test
jmp
mov
fldl
loope
lods
into
stos
sub
fs
inc
mov
jmp
in
ljmp
add
test
ret
adcb
push
xchg
out
xchg
mov
imul
cmp
movsl
pop
es
idivb
pusha
in
mov
iret
popa
testb
pop
scas
mov
sub
jo
cmp
sarb
ja
rolb
or
xchg
aam
mov
data16
sbb
and
in
jno
dec
adc
xor
ja
scas
lock
lcall
fiadds
lods
xlat
push
push
fdivp
push
jecxz
jl
aas
cmp
pop
mov
lock
sub
arpl
jae
inc
push
jp
xor
pop
rclb
adc
cli
loop
and
push
fmuls
mov
dec
sti
mov
cmp
xchg
cwtl
sahf
aaa
xorl
scas
ret
or
push
bound
sbb
and
lahf
push
cltd
call
mov
stos
jge
mov
sub
xlat
dec
dec
mov
mov
add
bnd
jno
lret
enter
lcall
sbb
cmc
cmp
es
ret
es
addr16
xor
sub
pop
xor
adc
pop
repnz
mov
lahf
int
inc
jb
sbb
stc
pop
sar
mov
pushf
enter
imul
shlb
cmp
push
sbb
cmp
dec
rorb
cmp
es
push
and
shlb
imul
stos
push
xor
iret
pop
or
mov
pop
fwait
into
or
rclb
test
test
ljmp
mov
mov
dec
imul
fs
mov
arpl
sub
ss
add
mov
inc
fnstenv
mov
mov
pop
pop
add
cmc
aam
push
sbb
inc
lea
movsb
mov
dec
mov
enter
test
xor
out
sub
jmp
inc
xchg
lcall
jg
pop
loop
sbbb
addl
stos
push
xchg
pop
push
pop
pop
fcom
loope
dec
and
jno
xor
pop
adc
scas
nop
mov
xchg
push
fistpl
int3
mov
sbb
sub
lret
rcll
stos
mov
repz
xchg
pop
push
adcl
lods
pop
rclb
adc
inc
out
pop
dec
mov
scas
movl
pop
push
sahf
addr16
jmp
sahf
sbb
inc
scas
jmp
repz
daa
jno
or
push
cld
icebp
sub
cli
cli
push
mov
push
jle
scas
arpl
or
fldcw
lret
pop
dec
fdivl
leave
scas
aaa
aas
cmp
in
repz
lea
cmp
lahf
cld
popl
jle
loop
ret
jg
scas
push
pusha
in
mov
cmp
popf
cmp
mov
dec
mov
and
sub
pop
pop
shll
push
push
outsl
jg
pushf
sbb
lea
xlat
push
js
add
mov
and
sahf
ljmp
jle
jmp
fdivrp
lock
jmp
test
inc
dec
sub
mov
es
xor
sub
and
in
imul
adc
pushf
push
xchg
lea
dec
cs
adc
push
pop
cmpsb
push
bound
xor
ds
add
adc
pop
push
xchg
push
and
cmc
cmpsl
lcall
mov
adc
mov
jecxz
adc
fisttpll
sub
ja
push
out
xchg
fnsave
lods
out
sub
mov
push
test
loope
pop
mov
mov
sbb
add
and
pop
mov
scas
pop
sbb
cmp
mov
les
add
push
adc
cmp
mov
ret
adc
inc
in
pop
hlt
dec
mov
xchg
add
scas
cli
dec
pop
push
int
fistps
push
sti
outsb
loop
ds
sub
orb
ret
mov
adc
pusha
out
out
inc
xchg
inc
add
add
test
inc
ret
sahf
cmpsb
ret
cli
mov
xchg
mov
jne
mov
xchg
bound
ret
cmp
xchg
push
xchg
xchg
mov
lret
aad
roll
jmp
into
test
push
nop
mov
movsb
mov
ret
sub
lods
test
push
ja
aam
rcrb
rorb
enter
arpl
std
test
mov
cmp
lret
xor
xchg
imul
xchg
dec
mov
xchg
sbb
jno
cmp
or
or
xchg
add
jmp
mov
mov
test
out
jl
add
mov
movsl
jno
lock
xor
lahf
mov
test
mov
dec
cltd
mov
loop
xchg
ret
or
rclb
aaa
xor
ror
jmp
popa
lods
scas
push
ljmp
push
negb
dec
mov
inc
aaa
repz
push
in
jo
xchg
pop
lods
push
mov
add
aaa
movsl
sarl
icebp
jg
jae
push
mov
inc
cwtl
sbb
inc
cmpsb
xor
loopne
je
jp
jmp
sub
int
adc
out
inc
jg
jbe
adc
push
xor
jb
jp
std
inc
pop
ljmp
insb
sahf
stos
mov
in
jecxz
pop
inc
test
jl
shl
inc
xchg
js
je
mov
adc
test
std
insl
pop
mov
rcl
out
shl
jo
divl
aam
or
xacquire
adc
push
ror
dec
int
fnstenv
jo
xchg
in
ss
pop
push
adc
loop
repnz
insb
jnp
xor
rcr
pop
out
sub
mov
jl
xor
sub
gs
inc
stos
push
cli
inc
adc
addb
jno
test
sbb
sbb
loopne
sti
leave
into
adc
cmp
inc
jno
or
lcall
les
out
outsb
les
mov
dec
jbe
mov
jne
dec
sbb
or
movsl
pop
xchg
mov
je
loop
pushl
and
call
enter
lcall
ja
pusha
inc
cmp
or
mov
imul
inc
scas
xchg
fwait
push
enter
shll
add
jg
cmp
xchg
aam
push
es
mov
fcmovne
mov
lret
lret
xlat
hlt
xchg
popa
xchg
mov
shlb
arpl
sahf
jmp
xor
and
in
roll
and
in
clc
out
insb
push
mov
int3
out
dec
bound
mov
xor
xchg
repnz
and
mov
scas
dec
dec
xchg
mov
jle
jnp
lret
sub
cmp
arpl
pusha
push
daa
dec
out
pop
pushl
and
dec
sbb
xchg
sub
mov
lods
stos
jp
cmp
mov
xchg
adc
fistl
xchg
add
subl
outsb
or
outsl
outsl
sbb
and
fwait
inc
mov
xor
add
jg
lock
xor
pop
int3
insl
popa
imull
scas
test
cltd
cmpsb
clc
aad
sar
imul
sub
sbb
fwait
xchg
xchg
les
test
scas
popf
adc
in
xor
cmp
sbb
jg
dec
lods
data16
pop
pop
cmp
or
repnz
xchg
push
mov
clc
pop
push
lahf
push
out
sub
cmpsl
outsl
iret
and
mov
shlb
out
xchg
add
aaa
mov
into
iret
fstps
xchg
add
in
inc
or
mov
icebp
fldcw
rolb
inc
cmpsb
lea
cs
xor
xor
pop
push
lods
mov
sub
and
pop
xor
cmpsl
sub
shll
add
xlat
pop
cs
repz
sbb
fcompl
sub
fs
adc
repz
xor
lret
jnp
aad
mov
xor
push
ret
ljmp
mov
clc
jae
ljmp
push
out
mov
push
xlat
int
mov
jmp
bound
sbb
icebp
aas
scas
jnp
fnstenv
sbb
mov
roll
cmpb
je
push
push
sub
les
mov
jp
cmp
and
mov
in
mov
mov
cli
lcall
stos
jle
stos
or
mov
jae
jmp
sub
add
xor
pop
xchg
inc
inc
lods
pusha
jmp
pop
sarb
push
cmpsl
test
in
cmp
insl
sbb
lret
cltd
sahf
dec
push
gs
fisubrs
lods
mov
clc
out
ja
jp
aaa
leave
push
sahf
jmp
mov
dec
lret
pushf
jns
icebp
and
lret
das
shll
or
mov
push
adc
jns
xor
mov
rcl
iret
jmp
imul
bswap
add
inc
mov
leave
loope
or
in
dec
outsb
aaa
enter
push
cli
movsb
pusha
push
push
es
push
pusha
movsb
outsl
mov
xor
mov
mov
leave
mov
sbb
xor
pop
roll
mov
hlt
es
xor
or
fs
jle
invd
sub
sub
jo
js
sub
inc
sbbb
popa
ss
xor
add
sub
cmp
or
xchg
movsl
int
sbb
shrb
and
pop
jbe
sub
push
idivl
adc
mov
loopne
sti
jb
xor
lcall
inc
in
fcmovnb
dec
mov
push
and
pusha
and
loop
cmpsl
dec
lret
sahf
inc
loope
fisubs
lret
jb
mov
in
in
inc
outsl
push
stos
push
inc
fs
imul
cwtl
xchg
mov
and
cwtl
mov
mov
bound
xchg
xchg
cmp
ret
mov
push
add
jne
enter
sarl
lahf
scas
ret
add
adc
mov
mov
adc
fucomi
push
les
std
mov
imul
fwait
scas
adc
mov
add
mov
xor
iret
cmpsl
and
dec
push
mov
dec
cmp
jl
mov
int3
xchg
mov
repnz
xchg
push
sbb
add
jl
cmpsl
jge
cmp
enter
add
and
push
jp
xchg
mov
leave
and
inc
xchg
sub
iret
int3
std
gs
sar
movsb
pop
add
call
add
repnz
pushf
sahf
or
adc
das
push
cmp
or
popa
ds
stc
mov
cmp
push
fnstcw
gs
movb
jnp
lock
loope
ret
inc
and
fcompl
adc
xor
jp
fidivrl
bound
into
push
aaa
movsb
inc
leave
inc
push
ljmp
dec
or
cmp
mov
rclb
out
lahf
cmp
jle
cmp
and
out
lea
dec
sbb
push
jl
add
lea
add
cltd
mov
inc
popf
cmpsb
push
jnp
adc
and
cmp
or
adc
subl
in
jnp
data16
pop
mov
pop
lods
test
sbb
mov
jne
mov
jge
lock
dec
xor
jae
int
loop
push
dec
push
dec
xchg
arpl
gs
insl
outsb
xlat
mov
icebp
inc
movsl
rol
mov
aas
lock
ret
dec
or
push
outsl
jnp
cmpsb
pop
mov
lock
push
lods
fwait
int3
dec
and
hlt
pop
sub
int
scas
and
mov
mov
mov
pop
mov
fucom
call
sar
int3
jg
add
jnp
xor
sbb
mov
sbb
pop
lods
sub
and
sbb
sti
jp
push
in
inc
jne
xchg
push
mov
cmp
jmp
and
xor
jo
aaa
orl
xchg
imul
mov
mov
xor
xchg
movsl
out
stc
ljmp
jnp
addr16
mov
jecxz
out
xorl
ret
fistpl
arpl
jno
sahf
minps
and
or
jo
scas
xchg
js
xlat
pop
add
push
cmpsl
insb
jae
inc
jmp
hlt
loop
xor
or
stc
mov
not
inc
jge
xor
int
xchg
dec
lcall
insl
cmpb
bound
jmp
jae
fadds
sbbb
cmpb
inc
mov
inc
test
arpl
insl
lds
dec
xor
adc
movsb
and
repz
dec
cmp
mov
jbe
mov
inc
sbb
add
dec
popf
aad
cwtl
lock
insl
pusha
iret
mov
mov
loopne
jl
stos
pop
sub
mov
aad
pop
sbb
xor
push
or
daa
dec
jo
pusha
pushf
xor
mov
lods
mov
mov
xlat
call
cmp
push
adc
cmp
and
cmc
pushf
inc
jae
scas
mov
xchg
push
jns
stc
sbb
loopne
cs
push
cmp
pop
bound
ds
cmovne
cmp
jp
jno
insl
and
pusha
sub
pop
in
sarl
inc
jbe
stos
cmp
jne
or
cmp
xchg
xor
cld
mov
addr16
jns
or
push
ret
lods
push
ja
roll
lcall
imul
sti
or
mov
jbe
mov
push
mov
cmp
das
mov
or
aam
mov
xchg
bound
and
int
mov
out
stc
iret
movups
dec
movsl
repnz
cli
orb
push
push
lock
cmpsb
mov
aad
xor
cmp
sub
push
mov
adc
or
test
fimuls
jge
cmp
test
cmp
fbstp
call
pop
arpl
pop
xlat
cmp
notl
scas
push
les
out
inc
loop
mov
adc
mov
xchg
into
nop
pop
push
push
mov
pushfw
push
adc
mov
jge
lds
notl
adc
xchg
outsl
aad
mov
dec
enter
test
adc
xchg
add
inc
cmpsb
mov
or
mov
jnp
add
mov
add
jbe
push
mov
add
pop
call
inc
jge
dec
jne
pushf
add
and
aas
xchg
mov
js
lods
adcb
push
jb
pop
mov
or
pop
cld
xchg
ds
in
sub
cmp
icebp
jp
rclb
push
nop
std
movsb
sub
rol
sbb
mov
adc
jns
cmc
or
jne
lea
dec
xchg
movsl
gs
repz
mov
sub
leave
outsl
aaa
pop
add
inc
shll
jo
mov
inc
loopne
out
clc
sub
push
in
andl
stc
xor
or
cltd
mov
inc
insl
xchg
lods
in
cmp
stos
lret
icebp
test
jno
jge
std
incl
inc
add
and
mov
and
xor
xor
out
mov
mov
add
mov
inc
inc
push
add
ret
ds
xchg
mov
jl
fchs
add
mov
push
repnz
data16
loope
push
in
pop
mov
inc
mov
mov
gs
push
xchg
mov
rorl
clc
jmp
adc
add
fcmove
inc
mov
add
fs
mov
insl
add
adc
jecxz
adc
out
imul
insb
xchg
jo
imul
ds
cmpsl
inc
or
sbb
mov
jnp
and
sub
shll
loop
sub
inc
push
push
cmp
in
push
pop
xchg
sub
out
dec
mov
mov
adc
in
mov
jo
push
in
popf
sub
xor
mov
jl
addr16
pop
lock
sub
cmpsl
hlt
sbb
fdivs
rcrl
xlat
xchg
push
lock
inc
je,pn
sbb
icebp
out
cmpl
lahf
imul
ja
mov
mov
add
jp
mov
pushf
mov
sub
jg
sbb
insb
fcmovu
jge
inc
jne
mov
xor
sbbb
add
or
jne
add
jle
or
sbb
adc
mov
push
movsl
call
fwait
dec
ljmp
pop
add
pop
adc
sahf
jmp
out
pop
or
sub
jnp
mov
inc
and
inc
pop
lahf
cmp
imul
in
jmp
mov
pop
inc
adc
out
push
std
jg
xor
sub
add
sbb
popa
ret
mov
fdivl
aad
ljmp
test
cs
orl
xchg
les
test
adc
outsl
pop
cltd
sbb
mov
or
fisubrl
adc
int3
and
nop
popf
push
lret
out
push
sbb
pop
sub
pop
xchg
insb
dec
and
sbb
add
das
imul
stc
das
aad
sahf
ja
mov
and
sub
push
mov
pop
cli
scas
repz
mov
dec
inc
ja
push
or
jns
lahf
push
xchg
ds
adc
pop
add
mov
mov
pusha
out
mov
xchg
mov
data16
or
xor
adc
test
js
mov
dec
je
or
adc
cmp
or
push
adc
fisttps
sbb
nop
cmp
mov
rorl
les
out
or
cli
leave
cmpsl
in
mov
dec
inc
add
add
jg
mov
ficompl
dec
cmp
inc
or
or
fstpt
das
js
sti
lret
sub
scas
in
and
jg
cltd
popa
jo
jnp
movsl
iret
mov
repz
dec
cli
pushf
xchg
dec
fldt
mov
add
fstpl
pop
fsub
daa
jmp
sarb
pop
sbb
cmpl
adc
add
pop
or
adc
daa
adc
push
fnsave
dec
mov
mov
or
sub
popa
addr16
out
es
addr16
mov
push
mov
jmp
adc
outsl
into
ljmp
dec
sbb
in
je
leave
fistpl
lret
int
mov
cli
mov
ljmp
hlt
icebp
test
push
xchg
subl
shrd
in
xor
mov
push
gs
leave
xchg
inc
in
xchg
stos
pop
jo
dec
hlt
and
inc
xor
and
jo
jge
push
les
mov
int3
xor
cld
and
and
jle
add
xchg
xchg
sbb
ret
pop
mov
repnz
inc
adc
xchg
fwait
out
pop
aad
mov
nop
ficoms
mov
xchg
push
jno
into
dec
inc
rorb
hlt
add
mov
test
xchg
push
fchs
mov
stc
lds
sbb
shll
lret
inc
cmpb
jle
push
xor
pop
push
gs
push
push
mov
repz
jecxz
movsb
mov
mov
aas
dec
add
jo
xor
inc
js
pop
incb
xlat
stos
sbb
sbb
out
in
call
into
jle
dec
push
xlat
pop
cmp
sub
sbb
jp
xchg
add
icebp
inc
roll
stc
hlt
add
outsl
mov
xchg
dec
sahf
mov
scas
cmp
fistpll
dec
mov
pusha
aas
mov
inc
push
popf
stos
pop
jge
cmp
add
repz
test
dec
cld
adc
rcrl
sub
inc
sbb
hlt
and
in
jmp
pushf
notb
add
jae
outsl
jo
ss
xchg
jbe
fdivrl
dec
jl
or
inc
inc
popf
test
int3
fcmovnb
xor
add
dec
sub
inc
mov
repz
fldl
inc
cs
pop
sti
xor
enter
out
pop
adc
push
jb
mov
or
fmull
add
sbb
mov
xchg
sbb
lea
and
push
push
dec
xchg
and
nop
in
subl
sarl
and
lcall
fcoml
xor
xchg
aad
jb
in
xor
test
adc
xor
push
inc
inc
in
je
cs
cwtl
pop
or
test
loope
sub
push
in
and
inc
fnstenv
int
mov
push
mov
sub
add
arpl
mov
dec
push
nop
cmp
sbb
sarb
aas
loopne
jne
pop
outsb
outsl
gs
xchg
std
stos
sbb
jns
loopne
mov
pop
jp
rcl
js
lods
xor
aam
repz
and
jecxz
mov
xchg
fnstenv
or
es
test
dec
xchg
test
sbb
imul
push
lds
mov
pop
inc
test
adc
sbb
add
xorb
or
dec
fnstsw
push
cli
mov
sbb
xchg
nop
cmp
jb
inc
xchg
jne
adc
sub
cwtl
xor
xchg
jmp
xchg
adc
pushw
scas
xlat
push
push
iret
cmp
fucomip
or
jnp
sub
sbb
xor
mov
rcr
shl
sub
add
sub
inc
ret
lds
pop
mov
xchg
je
cs
outsl
jmp
add
push
sahf
mov
pop
push
dec
negb
cmp
sub
ror
and
and
xor
push
jae
pop
insl
enter
arpl
lret
sti
and
mov
fcompl
xchg
test
xor
ds
pop
sub
sub
lods
xor
stos
scas
fadds
loop
fists
push
pop
lods
pushf
jp
aas
xchg
xor
xchg
popa
fnstsw
adc
lds
aaa
lcall
pop
cltd
push
bound
andl
and
xor
cmp
jp
xor
pop
inc
rolb
shrl
stos
adc
jne
addr16
test
jbe
stos
cmc
jp
lock
nop
sti
mov
and
mov
imul
sub
add
ljmp
call
ss
cmpsl
inc
mov
jns
push
push
test
imul
insl
sbb
gs
pop
inc
cmp
xlat
dec
push
cli
push
jecxz
scas
sub
and
je
fcoms
add
push
mov
cmp
outsl
fs
rorb
arpl
adc
add
xchg
adc
mov
xorb
imul
addb
lds
push
pop
cmp
adc
cmc
cmpsb
roll
or
xchg
out
lods
jb
pop
xchg
movl
xchg
push
lret
xorl
push
pushf
sbb
ljmp
idivl
mov
sub
push
insl
inc
dec
or
dec
pop
sar
jns
xchg
push
lahf
or
andl
sub
dec
push
add
jae
add
arpl
or
dec
cmpsb
push
jge
in
stos
dec
shl
or
jne
push
lods
shll
xchg
je
fnstsw
imul
out
scas
and
or
or
push
cltd
mov
cmp
imul
and
and
lds
jmp
sub
ss
pop
and
aas
loope
rcll
add
mov
push
cld
jo
or
outsl
popa
push
cmp
xchg
sub
out
movsb
imul
in
mov
add
push
movsb
push
adc
jb
cmp
mov
or
jo
add
and
xor
or
xchg
sub
add
cmp
icebp
jmp
sub
inc
je
dec
xlat
lds
in
push
leave
pop
xlat
outsb
add
mov
dec
dec
rclb
push
aad
outsl
pusha
xchg
xchg
in
mov
adc
mov
pop
or
bound
inc
enter
pop
jp
cs
daa
pop
jo
mov
sbb
fbstp
cli
scas
sbb
mov
dec
mov
xchg
sbb
mov
mov
sahf
sub
imul
test
dec
push
iret
rcll
movsb
cmp
ret
mov
gs
push
mov
repz
gs
cwtl
repnz
int
rclb
ss
mov
dec
cli
pushl
cli
leave
pop
inc
fwait
shrl
lods
xchg
js
sub
aaa
call
push
sbb
jno
cs
dec
xchg
inc
insb
or
sub
sub
adc
push
cmpsb
insb
iret
cmp
inc
adc
std
jl
ja
ret
mov
xchg
xchg
call
aas
xor
testb
imul
push
push
shrb
ss
loope
jo
jno
dec
outsl
adc
hlt
iret
imul
xor
stos
stc
dec
addr16
inc
jl
cmp
or
lret
or
jne
adc
sub
popa
xchg
iret
pop
ljmp
cld
out
mov
add
sub
push
mov
rcrb
test
pop
outsb
lret
insl
mov
addr16
adc
pop
pop
test
sub
mov
scas
sub
sbb
iret
mov
fldenv
sbb
das
stos
jp
or
jmp
or
insb
rcl
shll
fs
in
stos
int3
icebp
vcvtsi2ssl
jle
xchg
loope
push
add
push
mov
adc
into
sub
fwait
mov
sub
aam
mov
xchg
sbb
inc
addb
mov
cmp
sbb
sarl
orb
sbb
jge
fimuls
decl
in
pop
cmp
lea
and
dec
dec
jnp
xchg
mov
sub
scas
xor
loop
fstpt
jl
clc
or
pop
fcompl
mov
xor
mov
rcrl
jmp
leave
loopne
xlat
push
push
mov
jae
pop
les
lods
popa
jle
dec
jnp
mov
pop
mov
inc
jo
sbb
jle
push
inc
stos
inc
sub
cld
ljmp
mov
cmpsb
fnsave
jns
adc
ja
sarl
inc
jns
aad
pop
jo
xor
stos
or
mov
inc
aad
rcrb
out
jecxz
loopne
and
and
imul
xlat
xchg
idivl
shrl
push
push
push
push
out
or
les
mov
jno
sbb
mov
jo
dec
inc
ja
xchg
in
push
mov
sbb
xchg
xchg
ds
in
out
iret
sar
mov
inc
test
jecxz
add
adc
fsubs
or
mov
icebp
pop
dec
es
push
cwtl
aas
iret
sbb
rorl
mov
lods
mov
add
ficoms
mov
cmp
stos
mov
jno
dec
cltd
or
cltd
add
mov
jge
inc
fdivp
xchg
push
inc
xor
in
dec
adc
and
mov
mov
cs
push
inc
dec
add
dec
push
sub
aad
mov
imul
pop
push
lds
mov
aas
dec
shlb
data16
push
rcll
iret
nop
inc
xchg
testl
inc
push
xor
cmp
adc
xchg
cmc
into
icebp
aam
mov
cmpsb
gs
jg
insb
inc
sub
inc
push
pop
dec
mov
sbb
gs
dec
dec
lcall
nop
xor
lods
add
xlat
jnp
or
stos
mov
push
sahf
xchg
pop
ret
jecxz
enter
lret
add
stc
add
pop
jmp
mov
or
xchg
xor
sub
lahf
sti
mov
mov
vcmpss
and
orb
fwait
xor
jl
cwtl
outsl
cmp
push
sti
sbb
inc
int3
cmp
jecxz
imul
mov
adcl
and
mov
leave
dec
or
enter
pop
es
push
je
stos
lds
enter
cwtl
pop
or
jae
fiaddl
jne
jo
aam
adc
gs
dec
mov
repnz
shlb
mov
mull
jmp
mov
xchg
out
imul
test
outsl
and
test
xchg
add
ja
sbb
add
lock
sbb
adc
daa
xor
jecxz
or
fwait
sub
dec
nop
cwtl
stos
cmp
inc
in
mov
movsb
rol
sbb
sub
movsb
lds
mov
mov
or
or
and
add
fs
test
aad
xlat
add
test
fstp
ret
xchg
dec
mov
add
mov
dec
fdivrl
push
mov
xchg
call
mov
shl
icebp
pop
cmp
pop
iret
cmpsl
sub
mov
sub
lods
cld
fidivrl
jae
cld
push
inc
pop
mov
sbbb
cli
idivb
push
sbb
mov
pop
aad
sbb
imul
add
xor
xchg
cmp
push
insl
aad
out
push
pop
jl
loope
mov
pop
xchg
lods
push
ja
jp
cmp
hlt
lea
or
rolb
cmp
mov
add
lahf
push
pop
add
cmp
pop
mov
mov
hlt
popa
lea
arpl
mov
insl
mov
mov
movsl
push
push
mov
subb
add
ja
mov
jge
movsb
cmc
adc
lret
xor
mov
in
test
iret
cmp
pop
subl
clc
addl
or
push
or
inc
out
sahf
inc
jg
in
jbe
scas
rcrl
jp
xchg
cwtl
mov
sub
cmp
mov
shrl
dec
xchg
lea
pop
rcr
enter
arpl
dec
and
ja
pushf
push
imul
subl
adc
imul
fbld
call
jp
lock
or
adc
movsb
add
dec
arpl
cmpsb
cwtl
icebp
sbb
sarl
or
push
inc
mov
stos
repnz
push
sarl
mov
cmp
pop
icebp
lods
shlb
roll
add
jnp
movsl
jp
push
mov
jmp
test
popf
inc
or
sub
xor
in
ret
in
mov
aaa
add
enter
imul
out
loope
addr16
xchg
jo
div
add
push
test
mov
outsb
out
mov
jp
jnp
dec
or
jnp
jecxz
lods
xor
mov
cld
inc
push
pusha
add
add
aam
sbbl
adc
and
xchg
cwtl
jl
aad
fiaddl
cmp
xchg
in
cmpsl
sarb
test
mov
out
adc
fcmovb
outsb
push
out
test
push
pop
ror
xor
jmp
add
mov
bound
lret
sub
rorb
xchg
inc
pusha
sub
fsts
out
jbe
repz
push
movsl
push
daa
ljmp
mul
and
adc
in
in
fisttps
pop
lcall
adcb
out
and
loopne
mov
inc
gs
into
add
movsl
fsubr
lret
es
insl
ljmp
xchg
push
lcall
mov
push
mov
mov
aas
sub
mulb
push
mov
addb
outsl
xchg
adc
in
xor
lock
es
popa
sub
push
xchg
movl
jnp
xor
pusha
push
push
pop
dec
mov
mov
pop
sbb
or
dec
fstps
mov
shll
int
mov
bound
jg
cmp
frstor
negb
lock
ret
stc
adc
jp
push
mov
xlat
mov
inc
ja
and
or
negb
insb
lds
sahf
sub
cwtl
inc
pop
inc
pop
loopne
scas
ret
mov
movb
jl
xchg
outsb
push
xlat
add
adcb
test
push
jg
mov
cmc
clc
aad
pusha
mov
loop
and
pop
lahf
test
xor
cmpsl
pop
dec
push
sbb
cmpsl
or
sbb
and
movl
push
in
fs
mov
leave
inc
xor
jl
dec
sub
jno
jnp
ja
idivl
aad
push
mov
cmp
or
xchg
sahf
push
jge
lods
je
aad
sub
xlat
jne
xor
sti
push
lret
pop
jl
movsb
jo
loop
aas
push
mov
or
mov
outsl
jno
xchg
sub
cltd
push
push
jecxz
es
in
jbe
daa
sub
push
pop
pop
jg
fcompl
sbb
or
pop
out
adc
ljmp
push
and
mov
imull
orl
into
shrl
mov
icebp
fcmovnbe
push
mov
test
push
incb
mov
pop
cmp
aas
add
test
movsl
inc
testb
scas
aad
std
mov
xchg
push
fildl
inc
leave
idivl
xor
xchg
mov
cmp
call
push
mov
xlat
fs
out
xor
mov
outsb
xchg
jns
test
test
or
rcl
loopne
sub
cmc
cmp
pop
js
and
jg
sub
sbb
inc
ljmp
and
les
jne
xor
rorl
cmp
push
out
sub
aad
int3
movsl
das
icebp
xor
pop
pop
push
inc
pop
cmp
mov
js
loope
lahf
mov
cmp
add
xlat
out
sub
sub
hlt
inc
xchg
pop
or
lret
clc
pop
fstpt
xchg
mov
mov
adc
xchg
xor
push
dec
popa
movsl
fs
mov
xchg
dec
rcrb
mov
mov
loopne
push
cmpsl
pop
mov
lret
fsubl
dec
movsb
or
cmp
sub
test
fwait
aas
xor
jnp
xor
xchg
popf
pop
pushl
stc
insb
xchg
push
lahf
ret
xor
mov
mov
sbb
mov
and
xor
dec
ljmp
pop
cmpsl
add
in
daa
arpl
push
lds
test
inc
in
mov
sub
mov
push
into
pop
sbb
jg
cmc
scas
pushf
movsb
in
inc
gs
pop
dec
aaa
push
xor
cmc
arpl
ds
xchg
in
or
cli
push
pop
lods
mov
popa
ss
outsl
mov
xchg
mov
out
ljmp
in
push
dec
mov
pop
xchg
mov
mov
and
push
push
add
je
test
dec
shll
movsl
hlt
pop
jne
cltd
inc
fimull
in
dec
mov
test
int3
xchg
in
adc
pop
mov
mov
inc
adc
out
fstl
pop
roll
cmp
outsb
or
call
mov
int3
mov
cmpsl
sub
icebp
ds
scas
aas
arpl
cmp
popf
or
sub
lods
lret
fs
sub
dec
lahf
add
iret
fsubrs
xchg
mov
push
push
into
xorl
pushf
jne
iret
dec
js
adc
push
fstpl
ss
rol
inc
hlt
cs
shll
js
xchg
dec
mov
cmp
mov
xor
jp
jnp
mov
cli
mov
popf
rcrb
shr
sub
push
mov
outsl
lods
mov
sbb
dec
xchg
mov
dec
loopne
cmp
leave
xor
sahf
fsub
js,pt
test
in
mov
add
xor
out
cmp
js
cmp
mov
into
sub
push
mov
das
or
push
lock
cmpsb
cmp
in
xchg
popf
test
or
mov
jo
cmp
in
data16
and
ret
ror
xchg
test
adc
daa
rorb
mov
mov
sub
mov
mov
inc
sbb
fistps
xchg
in
sbb
pop
ds
aam
cli
sbb
inc
jecxz
ret
jmp
ljmp
mov
fldl
out
jmp
ret
mov
out
ret
lods
out
pop
rorl
ret
pushf
daa
cli
jnp
push
clc
jp
lcall
sbb
push
pop
dec
cltd
dec
lock
and
sbb
xchg
xor
out
xchg
rorl
outsb
mov
in
or
iret
or
inc
cmpsl
cmp
scas
test
xor
arpl
test
das
clc
stc
xor
jbe
imul
fdivs
loop
repz
sub
fsubs
pop
inc
add
pushf
es
xor
adc
outsb
jns
fs
xor
js
lret
iret
enter
daa
fistpl
lods
int3
mov
sbb
pop
in
nop
cli
inc
mov
mov
adc
and
sbb
je
ret
cltd
sbb
sub
repnz
push
lcall
fninit
dec
lock
aaa
insl
xor
or
and
popa
outsb
sub
aas
shll
adc
mov
add
outsb
test
scas
fsubl
mov
add
adc
cld
fiadds
mov
fstpl
push
les
cmpsl
inc
pop
cwtl
or
sbb
jnp
stos
push
sub
test
in
dec
fcmovnbe
xchg
inc
and
xchg
or
jns
mov
loope
xor
lea
and
push
dec
xor
pop
sbb
inc
mov
pop
nop
imul
mov
lock
stos
jne
lock
mov
xchg
adc
jmp
xchg
insl
lds
push
and
push
dec
add
jae
es
jnp
push
mov
sbb
push
xchg
or
out
loop
inc
outsl
jb
imull
mov
pop
jl
ja
mov
cmp
pop
leave
sbb
or
cld
mov
lea
mov
clc
cmpsl
inc
mov
and
xor
pop
mov
icebp
mov
push
xchg
pusha
jmp
cltd
inc
je
jns
xor
iret
push
out
rcr
jge
xchg
jle
aas
xchg
enter
lods
mov
cwtl
shl
mov
loope
test
cs
jmp
xor
das
repnz
popf
lcall
mov
lock
xchg
jmp
lahf
xchg
xor
pop
ja
push
push
lock
pop
xchg
or
xlat
in
or
inc
sbbb
mov
dec
mov
pop
cld
mov
test
xchg
ja
xchg
sbb
daa
jb
and
push
sub
sub
and
add
fisttpl
dec
fmuls
sbb
xchg
cmpsl
out
cmp
scas
mov
cmp
cmp
fxch
xchg
push
and
icebp
pop
mov
jb
loope
push
add
aam
pop
fsubrl
ds
into
lods
mov
sbb
js
subl
ret
pop
xor
add
test
sub
mov
lahf
jmp
loope
loope
movsl
insl
jno
jnp
mov
inc
pop
outsl
ds
push
add
shll
shr
and
cmp
jmp
adcb
lcall
jmp
jmp
stos
cltd
shll
mov
cmp
fwait
jae
push
dec
mov
lret
repnz
xor
and
arpl
cmp
cs
push
mov
cld
mov
iret
sbb
mov
xor
mov
repnz
push
test
stc
pop
xor
xchg
js
rorb
xchg
inc
and
jae
repz
fwait
nop
neg
mov
scas
popa
xchg
ss
pop
int3
adc
pop
push
fbld
pop
pop
xchg
dec
xor
push
push
imul
sub
int
cmpsb
lret
jae
jge
repnz
jg
lret
lahf
xchg
inc
data16
stos
aas
push
dec
bound
fstpt
dec
jl
xlat
andl
add
das
jnp
jmp
mov
xchg
push
push
and
cmp
push
inc
pop
or
fsubrs
arpl
stos
mov
xchg
inc
sbb
fildll
shll
iret
loopne
jmp
scas
push
int
jmp
bnd
test
and
push
sub
insl
mov
ret
push
lods
xchg
jl
add
lds
inc
outsl
cmp
jnp
pop
fs
jmp
fdivrs
stos
dec
push
adc
pop
insl
clc
arpl
test
push
dec
lcall
je
pop
cwtl
xor
and
imul
loopne
daa
imul
pop
dec
in
xlat
mov
lds
jg
xchg
mov
add
bound
lahf
cwtl
add
xor
scas
jp
insl
and
stos
test
iret
xchg
outsl
jmp
stos
push
jno
sbb
mov
and
sbb
jmp
mov
dec
inc
test
aam
xor
pop
xor
pop
cld
inc
xchg
fldl
xor
scas
push
cltd
cli
scas
cmp
faddl
mov
mov
lock
lret
xchg
and
xchg
shll
outsl
xchg
push
fimuls
inc
xchg
inc
pop
push
mov
loope
stc
or
dec
int3
push
xchg
mov
adc
ljmp
loope
rcrb
enter
inc
iret
dec
jge
aaa
lods
stos
aaa
or
cmp
mov
mov
mov
subb
and
dec
cmpsb
mov
push
ss
jmp
sahf
sub
repnz
push
clc
mov
dec
fs
mov
cmp
inc
and
lock
mov
jnp
stos
and
push
cld
mov
mov
jmp
cmp
or
jmp
xchg
ljmp
jae
ja
xchg
dec
in
jle
xor
ja
add
ret
push
sub
adc
adc
xchg
inc
sub
lcall
divl
insl
ret
das
jae
popf
xchg
test
jle
dec
xor
dec
dec
lcall
dec
leave
push
mov
pop
mov
mov
aad
xor
fsts
clc
push
js
arpl
mov
outsb
xor
cs
ret
mov
jnp
pop
orl
cld
and
sub
shrb
sub
xor
imul
xchg
cmp
icebp
jb
data16
sbbl
in
lea
mov
sub
js
or
mov
sahf
cmp
inc
pop
mov
insl
in
sti
jae
movsl
jne
dec
xchg
xor
lock
xchg
cmpsl
adc
scas
push
mov
push
push
adc
cmpsl
fistpll
bound
adc
outsl
push
es
xchg
test
xorb
xor
in
mov
jg
int
push
popa
dec
pop
call
sbb
cmc
aaa
push
mov
fisubrs
fwait
mov
fistpl
movsl
aad
xor
push
mov
add
mov
lret
xchg
cmc
xchg
mov
test
test
cmp
or
xchg
cld
jae
and
sti
dec
mov
lahf
and
in
lds
fcoms
mov
jge
push
fwait
dec
jbe
lods
mulb
aaa
mov
lea
cmp
jno
xchg
out
dec
and
shrl
dec
push
cmp
and
movsl
push
dec
jl
test
in
xcrypt-cfb
cmpsl
loop
sbb
jge
or
addr16
testb
je
jg
in
stc
adc
ffree
je
or
inc
stos
cmc
into
pop
push
test
add
pop
leave
xchg
mov
xor
notb
push
mov
adc
int3
jl
and
ficompl
ss
fadd
cmc
enter
mov
cmp
mov
aam
shrl
sub
jecxz
and
test
xchg
out
arpl
mov
add
jmp
in
sbbb
out
pushf
inc
xor
cmp
popa
push
dec
xor
in
cmp
pop
std
dec
sar
adc
insb
jmp
aaa
jle
xlat
lock
sbb
lahf
xor
icebp
cltd
lahf
xor
mov
jmp
mov
cmp
sbb
jne
mov
ret
dec
mov
xor
sub
mov
cmp
and
lock
inc
out
or
adc
and
xor
out
pop
pop
xor
loope
mov
in
test
and
shll
xchg
pop
int3
aam
jg
dec
pop
rcrl
cmpsb
out
fiaddl
cmp
mov
lret
and
and
add
test
jl
cmc
scas
std
pop
stc
sub
fdivrs
out
outsb
or
xadd
mov
rcll
xchg
adc
pop
enter
loop
xchg
push
mov
bound
mov
dec
insb
arpl
mov
mov
inc
mov
dec
lea
and
shrl
push
dec
rclb
push
cltd
fldcw
sub
pop
add
inc
sub
enter
data16
das
push
ja
sub
fldl
and
mov
stos
jns
and
pusha
lret
cli
fldcw
movsl
aam
jb
adc
push
jle
adc
push
mov
fsubrl
add
inc
pop
pop
push
ds
out
pusha
adc
and
test
mov
data16
or
scas
fsts
mov
jb
dec
scas
lds
sbb
and
cmp
bswap
pushf
inc
insl
fsubl
in
sarb
inc
fldcw
jge
add
push
dec
popa
adc
push
roll
enter
cltd
mov
add
adc
xor
popf
cmp
pop
nop
inc
cmpsb
and
into
fidivrl
dec
push
push
pusha
ret
push
cwtl
sbb
rorl
inc
inc
cmp
inc
test
add
pop
mov
ds
xchg
or
fmulp
out
loop
xchg
sub
movsb
sbb
mov
push
mov
push
mov
sarl
add
stos
stc
ret
and
rolb
jne
adcb
dec
rorl
sub
ss
push
inc
sarb
pusha
mov
xor
mov
cltd
or
jmp
xchg
arpl
add
and
fcmovnu
aam
or
push
mov
xlat
xlat
orb
arpl
mov
cmpsb
mov
out
push
jg
cltd
pop
xchg
fstpt
dec
jnp
loop
cmpsl
sarb
movsl
repnz
sub
lea
cmp
mov
rol
push
imul
int3
cwtl
and
es
or
fwait
mov
shrb
out
dec
sub
pop
stos
outsl
outsb
mov
lods
mov
scas
sbb
call
es
std
jae
subl
fstpl
and
adc
out
mov
sub
sub
cli
subl
jb
push
sub
mov
ret
insl
push
add
sti
lea
fsubrs
les
pusha
fimull
ljmp
mov
mov
lret
xchg
fsubp
mov
pop
pop
bnd
dec
sbb
aaa
jp
sub
push
xchg
in
jnp
scas
push
std
add
push
rclb
mov
es
dec
in
adc
xchg
fsubr
xor
push
or
dec
jo
andl
mov
add
aad
cwtl
inc
ret
rcrl
stc
add
call
insb
sub
or
andl
or
nop
rcrb
lods
mov
int3
stos
imul
jmp
int3
and
aas
mov
or
sbb
cmp
and
mov
shlb
sub
xchg
and
push
jno
scas
loopne
mov
loop
sub
outsl
loope
lret
testl
mov
adc
out
mov
loope
cmp
dec
cmpl
enter
movsb
push
shll
xchg
jne
pop
hlt
inc
sarb
int3
push
adc
xchg
ficomps
push
mov
jne
xor
cmp
xlat
xchg
xorb
jmp
inc
frstor
and
cltd
jecxz
pop
mov
dec
popa
test
push
mov
push
mov
aas
jl
inc
lea
xor
xchg
lock
out
sbb
xchg
fs
fistps
repnz
jno
iret
xchg
in
push
test
mov
or
loop
dec
jl
jmp
call
aas
xchg
jge
rorb
push
add
mov
fisubl
aad
ljmp
xlat
jl
iret
push
adc
hlt
sbb
or
ret
das
lods
loope
push
dec
dec
or
iret
mov
push
mov
sahf
mov
xor
mov
pop
outsl
outsl
ficoms
cmpsl
or
xchg
mov
lret
jae
rclb
shl
test
cmp
hlt
adc
cmpb
mov
in
call
aas
test
out
lcall
push
sub
inc
add
xorb
repz
add
stos
out
lret
cmp
jnp
pop
xlat
xchg
sbb
jl
pop
pop
sbb
jl
faddl
mov
mov
addr16
jl
and
punpckhbw
jbe
bound
cmc
mov
fdivrs
repnz
dec
popf
jle
jbe
lock
mov
stc
pusha
jae
out
mov
shrl
or
daa
cmp
mov
test
mov
js
addr16
xor
ds
sub
das
adc
dec
mov
mov
lods
lahf
pop
in
es
hlt
and
and
fiadds
pop
ret
mov
add
mov
pop
jne
push
pop
mov
outsl
in
xchg
icebp
adc
xchg
inc
mov
inc
loope
faddp
jb
mov
subl
lds
in
shlb
push
pop
aam
out
jno
sbb
in
fnstenv
ds
mov
mov
dec
or
fsubs
dec
mov
leave
cmpsb
ja
loopne
adc
sti
xor
and
or
fcomi
aas
fdivrp
fcompl
mov
sbb
lock
cmp
pop
daa
push
sarl
repnz
xor
iret
loope
pusha
push
fiadds
shlb
dec
lret
jmp
lret
inc
or
adc
fidivl
push
mov
pop
dec
test
in
das
sarl
les
adc
stos
fisubl
cmp
mov
ja
mov
adc
insl
iret
push
fnstenv
push
cmp
xor
fcom
imul
ds
dec
into
movsl
xchg
out
imul
lods
pop
dec
sbb
cwtl
mov
loopne,pn
sub
or
loop
test
or
fcmovu
out
inc
adcb
outsl
xor
mov
fldl2e
inc
mov
iret
repz
loopne
in
sub
push
push
xor
sub
add
xchg
shll
insl
xor
cmp
mov
push
shr
insb
xor
int
dec
mov
or
cs
xorb
push
cmc
mov
inc
cld
add
cmp
into
in
sbb
insb
jno
mov
sbb
popa
scas
adc
push
jbe
out
in
imul
stc
jp
or
adc
mov
call
out
jae
pop
jo
dec
in
in
lock
mov
sbb
mov
fidivs
mov
mov
inc
and
push
xchg
inc
cmp
outsb
mov
and
cmc
clc
mov
add
lock
addr16
outsl
pop
add
fbld
and
and
out
or
iret
aas
cld
sub
or
je
cmc
in
ds
arpl
cltd
outsb
xlat
je
lea
cld
aam
or
dec
int
and
lret
cmp
mov
lods
xor
movsb
in
and
sbb
imul
mov
and
mov
xchg
aam
adc
fbld
popf
adc
test
push
sub
jmp
stos
xor
jne
aad
inc
loop
jl
repz
add
pop
pop
imul
std
add
cmpsl
pop
sub
shll
adc
xchg
scas
adc
ficompl
jne
aaa
cmp
mov
enter
cld
add
xor
stos
frstor
pop
add
push
mov
mov
sbb
inc
jmp
xor
pop
cmpsl
dec
popa
stos
pop
cmp
adc
and
leave
mov
xchg
jmp
rolb
pop
ret
xor
pop
mov
ds
xor
sbb
cmpb
test
pop
inc
mov
mov
lds
jl
and
mov
sbb
and
push
pop
lret
sub
mov
test
lret
pop
inc
bnd
lret
hlt
mov
mov
cld
stos
inc
push
cs
test
dec
add
sarb
sbb
cli
inc
dec
loopne
cmp
mov
mov
pop
int3
ret
int3
cmpsb
sbb
movsb
jo
mov
in
jg
mov
ret
arpl
addr16
jns
fadds
sbb
jne
shrl
cmp
fdivl
sub
cwtl
inc
bound
sti
ss
test
arpl
movsb
pushw
pop
pop
imul
mov
inc
data16
mov
pushf
pop
fdivr
mov
addr16
add
or
ja
pop
jno
or
lahf
dec
cmpl
sub
pop
ss
sbb
push
test
push
push
inc
leave
mul
fucomip
cmp
lods
test
mov
mov
or
icebp
cmpsl
inc
lock
jno
out
inc
repnz
push
adc
mov
dec
jmp
or
mov
sub
add
inc
jge
add
hlt
mov
cli
and
push
andl
dec
out
das
outsb
sarb
xchg
dec
enter
inc
gs
insb
std
xchg
or
add
aaa
and
int3
aam
lea
add
stos
and
test
imul
sbb
popa
shlb
adc
jb
fisttps
pusha
push
sti
stc
inc
cmp
xchg
flds
pushf
sub
leave
repz
imulb
add
cmp
and
hlt
jb
mov
popf
and
adc
push
bound
or
and
push
mov
cmp
pop
dec
push
mov
inc
jle
in
aas
nop
arpl
mov
or
dec
lods
aaa
mov
dec
or
je
pop
aam
stc
inc
sahf
bound
ja,pt
mov
sub
push
loop
in
cwtl
imul
cmp
add
and
add
and
inc
repnz
mov
inc
mov
or
lods
pop
in
jmp
movsb
mov
pop
or
loope
lcall
scas
push
add
daa
mov
mov
mov
rcr
hlt
mov
out
fidivl
and
add
test
andb
dec
push
mov
pop
mov
push
ret
mov
or
enter
lds
adc
dec
ss
mull
shlb
out
or
jmp
mov
fsub
cmpb
stos
cwtl
fldenv
cli
push
jecxz
lcall
cmp
pop
inc
or
mov
ror
sti
fsubs
test
mov
cli
clc
jns
lret
mov
mov
adc
lock
push
test
subb
movsb
test
cmp
inc
inc
clc
decl
cltd
ja
rorb
sub
dec
adc
lea
shlb
popa
jle
mov
jmp
inc
mov
cmc
test
push
sti
in
mov
adc
or
jae
call
pop
aaa
test
mov
insb
inc
mov
divl
mov
push
stos
push
sub
add
fsubs
je
push
lods
add
xchg
ret
mov
jb
cmpl
jno
or
xchg
mov
mov
push
sbb
push
sbbl
sub
sub
sahf
movb
in
cmpb
pop
movsl
xor
push
enter
dec
push
frstor
bound
scas
push
dec
xor
loopne
cmpsl
push
mov
adcb
xor
das
and
push
cmp
sbb
mov
jo
or
icebp
notb
repz
pop
sbb
rcrl
inc
push
mov
jg
icebp
loope
inc
es
push
cli
adc
add
mov
lea
adc
and
mov
es
dec
jle
and
jno
xchg
or
dec
lock
adc
dec
insl
test
test
scas
out
call
sub
push
fildll
mov
dec
cmc
repnz
pop
mov
mov
dec
popa
js
jecxz
insl
push
dec
jle
cmc
pop
repz
std
mov
pop
or
jb
inc
cmp
pop
pusha
lahf
aas
or
pushf
movsb
insb
xlat
pop
push
into
adc
pop
mov
cltd
sahf
or
jae
imul
outsb
cld
js
cmc
push
mov
push
loope
or
pusha
pop
test
sbb
pusha
pop
pusha
ss
jmp
adc
mov
stc
lods
in
add
cld
xchg
dec
xor
add
sub
std
in
frstor
sbb
mov
pop
push
addr16
push
rol
dec
incb
lods
in
xor
in
sbb
subl
push
movsb
mov
ret
dec
push
jle
adc
jecxz
rep
jne
sub
pop
adc
add
add
jmp
out
sbbl
mov
push
arpl
and
addr16
insl
push
fs
dec
jae
adc
insl
add
jno
in
and
jecxz
push
mov
shl
dec
das
mulb
push
hlt
push
bound
jge
sbb
imul
sub
mov
xor
inc
pushf
sub
jno
push
cs
mov
mov
das
inc
jecxz
adc
leave
add
cmp
inc
add
das
int3
push
enter
js
adc
mov
aam
xor
mov
les
sub
out
iret
cmp
icebp
sbb
cmp
dec
cltd
sti
or
push
jge
jg
lods
jecxz
add
xchg
jo
loopne
rorl
dec
cltd
popf
ljmp
js
ret
lds
outsb
daa
dec
inc
mov
pop
loop
cmp
ja
icebp
out
mov
call
movsb
cltd
mov
das
sub
lds
sub
push
push
mov
inc
push
or
mov
fsts
jge
jg
lret
mov
pop
fisubrl
mov
addb
in
mov
adc
pusha
mov
sbb
sbb
and
iret
mov
and
mov
adc
aad
pop
xchg
or
mov
xor
std
or
dec
sti
in
mov
add
inc
call
dec
push
push
gs
ja
daa
mov
insb
push
sub
add
rcl
push
jne
sub
mov
jp
imul
imul
xor
in
cmc
cmp
sbb
or
iret
insl
and
cltd
inc
pop
test
mov
jo
jo
aas
jno
lea
xchg
inc
mov
mov
test
roll
imul
inc
es
sti
and
push
pop
mov
das
out
leave
add
mov
pop
fsub
sbb
in
sub
dec
and
mov
pop
mov
add
mov
lcall
sbb
sub
dec
mov
in
push
push
and
shll
inc
cmpsl
daa
insb
lret
and
enter
push
or
mov
xor
fimuls
lret
nop
call
mov
push
lcall
ds
jmp
xchg
push
mov
nop
jmp
mov
xchg
mov
sub
cmp
pop
dec
push
cmc
push
shr
out
stc
inc
sbb
push
ljmp
lcall
or
push
and
mov
or
imul
test
push
xor
pop
mov
sti
xor
lods
scas
sbb
in
inc
mov
in
cs
stos
das
inc
mov
lahf
test
outsl
jge
mov
add
movsb
mov
jns
or
rcrb
adc
jmp
xor
scas
add
test
adc
arpl
adc
sbb
fnstsw
mov
cmp
enter
mov
push
test
hlt
stos
mov
jmp
cltd
dec
mov
arpl
sti
sti
dec
xor
jbe
and
aas
shrb
rcrb
cmp
ja
hlt
inc
pop
mov
mov
dec
nop
sbb
sub
push
in
stos
pop
cmp
sbb
dec
lret
mov
pop
xorl
das
inc
cmc
mov
fwait
lods
lds
push
popf
scas
adc
adc
lahf
addb
jns
aad
call
adc
pop
les
xchg
in
lahf
test
lret
or
and
fcoms
xchg
mov
push
push
cmpsl
mov
aas
xchg
sbb
mov
les
pop
mov
cwtl
fsubp
lahf
int3
test
sub
push
fwait
xchg
loopne
pop
lahf
pop
ljmp
mov
dec
cmpsl
imul
lahf
dec
imul
scas
pushf
push
sub
filds
lret
sbb
call
add
shrl
mov
ret
cmp
inc
mov
dec
mulb
int3
sub
dec
js
mov
enter
pop
jbe
jle
push
sub
js
out
test
fs
sbb
fadd
cmp
push
push
mul
and
int3
sub
addr16
jl
flds
mov
sbb
sub
xchg
cmpsb
bts
cmp
imul
pop
mov
gs
xor
mov
sarl
lea
jge
sub
xor
ss
sbb
in
aad
adc
gs
test
fstpl
inc
push
stos
gs
lds
inc
mov
and
sub
fnsave
add
hlt
lret
push
pop
movsl
jnp
rorl
push
jl
and
push
das
adc
ds
leave
pushf
cltd
out
push
pop
cmpsl
push
sub
cmpsb
arpl
jbe
arpl
mov
xor
jg
fcompl
aad
sbbl
sub
sbb
int
cmp
addl
cmpsl
negb
adc
mov
lret
in
mov
jp
xchg
je
outsl
dec
pop
imul
jl
fcompl
sbb
mov
bnd
sub
jle
fsts
add
sahf
fcmovnbe
insl
xchg
pop
and
pop
test
shlb
and
pop
out
and
mov
mov
mov
shlb
ja
add
inc
inc
push
mov
or
mov
shll
gs
and
push
pop
and
cmp
aam
inc
xchg
lret
lds
dec
ror
leave
pop
xor
imul
or
daa
sub
mov
xor
push
in
fiadds
xor
out
or
test
js
inc
int
lcall
inc
sbb
mov
mov
xchg
cmc
xchg
push
std
or
test
mov
mov
ret
outsl
dec
into
add
xchg
mov
in
ljmp
mov
cli
fcoml
pop
sbb
nop
xor
shrb
fmull
nop
fwait
add
call
fdivs
mov
icebp
loope
je
push
dec
popf
add
cmp
hlt
pusha
popf
mov
add
mov
test
popf
push
dec
hlt
adcb
xchg
inc
daa
out
int3
add
cmp
push
hlt
int3
int
mov
fcmove
mov
inc
pop
sbb
mov
jp
mov
enterw
gs
sub
pop
jne
andl
mov
push
pop
movsb
pusha
sti
insb
sti
mov
pop
mov
repnz
test
mov
inc
mov
and
rcll
repnz
int3
leave
mov
lret
jmp
ret
mov
or
push
mov
xor
and
and
sbb
out
mov
stos
loope
dec
mov
shrl
mov
clc
das
add
insb
push
imul
js
xchg
mov
pop
clc
lcall
xchg
clc
and
xor
clc
dec
add
jecxz
mov
cwtl
sub
cmp
lock
adcl
in
imull
jno
push
mov
ljmp
out
push
pop
push
push
aad
enter
dec
jmp
je
jle
mov
out
les
and
or
mov
add
inc
popf
ja
xor
cmp
inc
jge
sub
xorl
incb
je
xchg
cmp
aam
mov
ret
fs
jnp
loop
dec
scas
inc
repz
bound
adc
je
addr16
xor
mov
dec
bsr
daa
fmull
inc
aaa
xchg
mov
cmpsb
dec
imul
push
sbb
test
dec
clc
cmc
jge
adc
ficoml
add
xchg
pop
add
push
testl
out
loopne
jne
sahf
xor
imul
xchg
call
rcrl
jmp
dec
jb
sti
stos
add
dec
push
shll
stc
jno
push
inc
or
enter
addr16
push
nop
jno
cmp
pop
ficoms
mov
add
popl
jne
cld
push
rcrb
jnp
in
test
fiaddl
in
inc
imul
inc
outsb
cmc
dec
mov
adc
addr16
mov
and
ret
mov
imul
cmp
movsl
mov
les
jb
push
daa
cld
dec
or
add
test
inc
pop
xor
jnp
sub
loop
dec
xchg
cld
scas
jmp
stos
xor
mov
out
sbb
divb
fstp
dec
movsl
lcall
jp
les
pop
stc
daa
cs
fcmove
adc
dec
mov
sbb
loopne
mov
mov
xor
pop
repz
cmpl
cld
insl
pusha
sbb
mov
add
adc
loope
xchg
xchg
mov
fsts
xchg
or
bound
mov
incb
scas
push
push
or
out
xchg
fadds
xchg
imul
sub
mov
or
dec
nop
mov
inc
dec
cmp
xchg
fsub
pop
mov
cmp
cwtl
push
jmp
mov
lcall
sub
ja
sbb
ds
cli
cs
std
fwait
mov
sub
dec
dec
pop
dec
sbb
pop
push
cli
test
das
sub
test
sarb
or
adc
jle
adc
ljmp
lods
push
mov
into
out
popa
in
sti
daa
push
addb
lock
mov
loop
push
out
mov
outsl
mov
stos
push
mov
in
and
fidivs
xor
pop
sahf
push
out
cmpl
fs
sti
sbb
push
jbe
mov
cmp
js
jg
bound
inc
add
pop
shr
xchg
or
mov
jnp
pop
dec
enter
cmp
cmp
stos
out
or
mov
jmp
sbb
cmp
pop
inc
inc
loope
cli
stc
fwait
lds
repnz
and
sub
rcrl
lret
push
aam
stos
mov
add
leave
out
push
cmp
insl
ret
dec
rolb
ja
daa
insb
iret
and
ja
int
loope
add
push
or
pop
push
imul
rol
repnz
daa
lahf
imul
mov
dec
stos
stos
jne
scas
mov
arpl
sbb
cmpsl
daa
pop
mov
xor
jo
xor
dec
std
fwait
mov
sub
aaa
xchg
out
jo
imul
ret
lds
mov
xor
push
cli
inc
aaa
les
clc
in
enter
inc
cwtl
mov
cmpsb
cmp
lods
ljmp
or
jno
pop
and
push
fldt
js
sbb
aam
pop
gs
add
xchg
iret
mov
gs
and
push
cltd
in
test
stc
movsb
and
cmc
mov
aaa
dec
mov
popa
or
pop
fnstsw
cmp
pop
mov
xchg
xchg
xor
push
inc
std
data16
fcmovne
xor
mov
xlat
loope
adc
mov
fsubs
in
jg
loop
mov
lock
clc
cmp
imul
cmp
inc
jns
enter
imul
mov
aam
jmp
stos
mov
jge
scas
adc
fstpt
loop
daa
xchg
into
push
jns
test
mov
xor
addr16
jae
push
mov
arpl
outsb
div
push
add
inc
mov
mov
or
xor
mov
into
imul
pusha
pushf
pop
adc
pushf
lcall
cld
stc
fadd
adc
mov
sub
mov
lret
pop
imul
pushf
ds
jmp
aam
icebp
pop
insl
jb
push
mov
xor
and
cvtps2pi
or
or
cmp
es
push
lods
mov
add
adc
add
lret
mov
cmpb
scas
push
push
push
cmp
pop
test
jecxz
mov
cmpsb
loop
orb
fldl
cmp
into
enter
mov
add
rolb
xchg
inc
ret
jno
andl
sbb
add
dec
xchg
xchg
pop
mov
mov
sub
mov
fwait
cmpps
or
and
lock
push
and
stos
inc
and
dec
outsb
xchg
arpl
mov
out
sbb
insl
repnz
negl
xchg
out
cmp
add
sbb
rcl
stc
or
pop
cmc
lret
cmpsb
jg
pandn
insb
cmovne
sub
sub
nop
imulb
sub
jmp
mov
enter
aad
cmp
add
mov
adc
lahf
rep
in
ret
filds
sti
pop
addr16
pmaddwd
pusha
add
fwait
mov
icebp
mov
shlb
pushf
pop
cmc
fnstenv
cmp
mov
mov
fstpt
push
cmp
test
and
jne
add
dec
or
adc
adc
aam
in
test
push
pop
arpl
call
ljmp
inc
xor
cltd
loopne
mov
jno
in
push
mov
mov
jnp
test
out
adc
cmc
stc
sub
lret
repz
mov
das
jo
pusha
xor
sbb
add
add
imul
pusha
dec
stc
stos
out
add
cwtl
inc
cmp
jp
jo
pop
dec
int3
clc
xchg
jae
pop
movsw
leave
imul
mov
push
jbe
andb
sub
movsl
adcb
loop
dec
mov
adc
pop
xor
repz
idivl
les
push
add
mov
jns
sbb
push
out
cli
pop
xor
lcall
fiaddl
mov
nop
dec
mov
ja
pop
cmc
xchg
sub
lcall
or
push
lock
and
stc
ljmp
rcrb
mov
lods
push
dec
lock
and
xor
dec
cmc
aam
cld
and
push
jns
inc
in
pop
jecxz
xchg
sbb
mov
adc
sarb
and
jae
int
fnsave
mov
pop
dec
xchg
xchg
iret
xor
subl
cwtl
add
stc
inc
setge
lcall
sbb
adc
cmpsb
ds
movsl
and
mov
lock
cmc
mov
lods
inc
pop
aad
movsb
jl
lea
repnz
xchg
ret
daa
mov
mov
sub
sub
daa
arpl
enter
mov
aam
outsb
outsb
cmpl
jecxz
xor
pop
mov
cmp
cli
les
jg
in
sbb
jnp
adc
popa
cli
adc
cli
mov
rorb
sub
mov
push
and
or
subb
shr
xchg
cs
cli
dec
adcb
out
test
cltd
nop
gs
or
sbb
cmp
sub
inc
out
sub
adc
mov
outsb
stos
jmp
inc
pushf
jl
stos
insl
pop
xlat
imulb
pop
enter
fsub
pop
out
pop
jne
add
sbb
and
movsl
push
and
jne
sbb
sbb
mov
pop
sbb
lock
xchg
sti
inc
lret
cltd
jb
jmp
inc
push
mov
push
sbb
sbb
lcall
or
xor
mov
adc
aas
mov
lea
stc
aam
jl
mov
fs
ja
ret
outsl
bswap
cwtl
add
pop
ljmp
orl
mov
or
cmp
cmpsb
add
dec
int3
fistps
dec
cmp
adc
out
push
push
in
add
arpl
fildll
rorb
xchg
or
js
pop
jecxz
add
sbb
mov
pop
inc
lea
js
or
out
fwait
add
loope
scas
and
push
and
mov
and
and
imul
js
adc
lahf
imul
into
pop
add
rcr
repnz
xchg
xor
sub
imul
lahf
fwait
cmp
imul
push
mov
enter
dec
sbb
add
shll
push
pusha
pop
sbb
bound
adcb
out
leave
fbld
mov
outsl
out
mov
jb
pop
inc
lock
jnp
out
test
fdiv
mov
je
sub
add
add
daa
aad
ret
lea
ds
mov
decb
inc
aas
lret
xchg
pop
inc
addl
stos
push
addr16
cli
je
jno
setnp
sub
dec
jo
or
push
lods
or
popf
pop
in
out
loop
repnz
pop
lea
cmp
fiadds
dec
das
mov
sbbb
xor
push
mov
fidivs
cmp
pop
dec
xchg
pop
mov
pusha
in
cmp
pop
or
lods
into
arpl
shl
mov
rol
adc
pop
adc
lret
nop
jo
or
in
push
popf
xor
fdivrs
sub
add
inc
iret
inc
imul
jle
push
iret
pop
jbe
and
jb
pop
in
aad
shll
cmp
bnd
ds
adc
or
test
mov
ficompl
mov
inc
out
push
cmpsb
ret
sub
mov
in
ss
ret
fdivrs
nop
cmpsb
dec
adc
loopne
gs
into
add
aam
add
cld
or
xor
push
mov
outsb
stos
inc
mov
scas
call
pop
gs
sub
in
cmp
xor
jb
sbbl
mov
add
xchg
cmp
loopne
adc
fildl
dec
fwait
mov
mull
sbb
xor
pop
cltd
hlt
in
in
adc
push
lret
dec
push
xchg
leave
inc
dec
das
mov
add
movsb
aas
nop
int3
stos
ss
pushf
mov
mov
roll
and
mov
push
ljmp
jmp
imul
daa
mov
pcmpeqw
mov
movsb
push
push
lds
add
jp
mov
rol
cmp
pop
mov
xor
jo
data16
jns
jb
push
dec
mov
clc
andb
xchg
movsl
xlat
cld
sub
daa
mov
cmp
mov
dec
xchg
out
jp
xchg
push
shll
loope
jnp
dec
cmc
clc
into
sahf
pop
sub
sti
addb
aam
jae
popf
pop
js
fdivl
mov
test
aaa
jp
je
lcall
xor
insb
enter
add
jnp
xor
clc
loop
fsubrl
dec
sub
in
add
fldt
ja
xchg
shll
mov
push
filds
ret
adc
push
loop
mov
outsl
jg
xchg
loop
add
bound
push
imul
push
sub
popa
mov
cmp
repz
fs
aas
lret
push
insb
shrl
idivl
js
popa
dec
repz
or
jbe
lods
or
cld
or
test
movsl
or
leave
mov
sarl
jnp
mov
shll
jmp
js
cmp
mov
or
shrd
inc
movsl
sub
mov
push
mov
pop
jge
mov
shrl
out
cmp
push
icebp
sbb
and
fisttpll
in
int
jge
mov
ljmp
icebp
stc
aaa
mov
js
leave
xchg
mov
cwtl
addb
scas
xor
or
imul
pop
mov
push
mov
cmp
xchg
and
push
push
test
fsubr
or
aad
mov
repnz
imul
cmp
push
mov
pushl
jo
sub
test
into
mov
inc
sbb
xchg
cmp
mov
out
cld
mov
pop
mov
inc
pop
or
mov
sub
ss
inc
nop
das
xchg
gs
aam
mov
push
out
pop
jns
xor
popa
data16
pop
jno
add
aad
adc
addr16
in
jmp
arpl
cmc
gs
bound
mov
cwtl
mov
outsb
mov
lds
cltd
cli
movsl
mov
lods
push
add
nop
or
dec
jnp
or
ljmp
dec
pop
add
jae
into
cmp
or
in
dec
push
xchg
popf
aaa
sub
push
add
xchg
cmp
add
fistps
jo
mov
imulb
inc
popa
mov
clc
push
and
es
notl
add
jl
adc
push
jno
mov
shl
sub
loop
and
push
adc
xor
sbb
push
xchg
pop
movsb
in
xchg
add
jg
and
mov
push
das
adc
xor
rorb
push
imul
out
xchg
sar
std
shll
xchg
mov
jb
mull
imul
scas
mov
in
and
mov
leave
loop
repz
ss
int3
test
adc
jp
imul
popf
ja
clc
push
leave
ficoms
or
fwait
or
cmpsl
sbb
popf
rclb
pop
or
jae
pop
mov
and
or
cmp
adc
scas
lret
push
push
dec
les
mov
int
mov
pop
addr16
leave
mov
mov
adc
push
or
movsb
mov
push
sub
xchg
out
call
out
jg
dec
cmp
adc
enter
mov
or
dec
cmp
push
cmpsl
icebp
push
les
outsb
xchg
adc
ret
cmp
inc
mov
dec
and
cltd
dec
mov
sub
sub
jmp
jg
sahf
jecxz
mov
or
xchg
mov
stos
loop
lret
fidivl
cmpb
mov
test
cmp
sbb
loop
imul
pop
sbb
pop
adc
push
enter
sbb
lds
mov
xor
cmpl
jp
mov
fs
out
decl
in
lea
lret
sub
inc
divb
xor
or
idivl
in
gs
ds
lea
adc
addl
outsb
negl
and
nop
aaa
outsl
dec
push
addb
xor
xlat
in
loopne
cmpb
andl
pop
xchg
pop
ds
mov
add
jmp
inc
test
add
cmp
shrl
pushf
out
les
aam
enter
lret
push
stos
outsb
mov
jmp
ffreep
int3
dec
loope
dec
lahf
fldenv
andw
mov
lret
imul
mov
out
clc
lods
push
jnp
push
ror
outsb
loop
dec
rcrl
mov
fcompl
xchg
pop
rep
in
sbb
aam
sub
adc
adc
xchg
sub
ds
xlat
cmpsb
add
lds
xchg
inc
bound
mov
insb
add
insb
mov
sti
insb
inc
inc
xchg
cmpsb
mov
jnp
pop
pop
cmp
ljmp
mov
adc
xor
pop
lcall
ljmp
jnp
mov
lods
jmp
insl
incl
dec
lret
cmp
sarl
add
pushf
dec
fisttps
push
push
int3
movsb
mov
pop
loopne
inc
stos
addl
mov
scas
cmp
dec
jecxz
scas
and
mov
jge
cmp
dec
lcall
pusha
sbb
insl
xor
sbb
movsb
int
sbb
cmc
aaa
sarl
mov
fnstenv
mov
in
mov
scas
sbb
pop
jle
repnz
add
mov
mov
and
cmp
std
shlb
loopne
out
jecxz
test
sbb
imul
dec
mov
and
xor
call
clc
cmp
mov
loopne
mov
bound
lods
aam
ficoms
jae
insb
arpl
cmp
dec
mov
stos
jb
inc
cmpsl
fwait
aad
sahf
jg
bound
xor
push
out
loopne
push
xlat
pop
orl
xchg
mov
cmp
stos
push
outsb
fbstp
cmp
inc
adc
loopne
fimull
stos
dec
lods
mov
fbld
xchg
pcmpeqw
sbb
sahf
add
ds
push
je
mov
jb
xorl
and
cmc
imul
xchg
mov
push
xor
in
xor
and
sbb
cltd
mov
or
jle
sbb
loop
jne
jg
dec
cmp
mov
lret
xchg
push
add
xchg
inc
scas
imul
pusha
mov
ret
imul
mov
inc
inc
fwait
ds
mov
jle
push
or
fisttps
adc
in
in
pop
jb
sub
sti
out
xchg
fadds
testb
adcb
movsb
fdivp
ret
pop
lahf
testl
test
xchg
shrb
sub
mov
mov
mov
cmp
xor
sahf
dec
xor
fnstenv
and
mov
push
xchg
sub
push
and
enter
hlt
push
ss
xor
mov
test
pop
lods
lahf
nop
test
test
stc
add
and
sub
ss
lret
loope
add
cmc
xor
or
xchg
cmp
repnz
maxps
push
cld
aad
push
inc
lahf
pop
sub
lea
mov
shl
outsb
xchg
shlb
lods
arpl
lret
enter
sbb
cli
and
push
add
imull
cmc
fcmovne
or
daa
add
rorl
mov
push
add
push
xchg
and
push
pop
and
ret
inc
lcall
add
ja
call
in
dec
push
sti
adcb
pop
adc
loop
aad
and
icebp
out
mov
jmp
push
stc
mov
and
shlb
iret
inc
pop
add
add
xor
pop
mov
test
and
and
dec
das
jp
outsb
ss
adc
fbstp
inc
outsb
test
jge
or
rcl
sub
ljmp
loope
and
fdivrl
pop
dec
lcall
sub
xor
sbb
dec
mov
daa
add
lret
mov
loope
sub
push
or
aaa
ljmp
mov
std
loope
mull
mov
addl
push
test
inc
xor
imul
in
or
pop
mov
aad
sbb
les
shlb
mov
faddl
movsl
sbb
jnp
lret
xor
jno
jle
push
jae
cmp
fisttpl
aas
clc
fildll
pop
test
lods
lcall
imul
mov
je
xor
mov
in
dec
je
add
xchg
inc
addr16
inc
xchg
bound
pop
adc
dec
pop
and
cmp
xchg
insb
pushf
out
inc
xchg
dec
mov
xlat
dec
fmuls
fimull
lahf
inc
sub
add
or
inc
cld
fldcw
mov
mov
add
cmp
sub
mov
aad
icebp
paddsb
sub
jmp
fcomps
dec
ja
sarl
add
mov
or
fisttps
adc
xorb
out
sbbl
sub
out
loope
jmp
das
sbb
int
jnp
stos
leave
sbb
cmp
pop
jl
inc
push
xor
loopne
fcos
push
daa
jecxz
movsl
adc
flds
fistl
in
enter
adc
js
xlat
xor
mov
ljmp
or
xchg
xchg
sbb
sbb
rclb
ds
pop
incl
mov
xchg
jmp
cs
repz
cltd
clc
inc
mov
push
loope
and
mov
and
lret
lret
and
invd
push
in
loope
mov
xchg
shrl
push
xchg
pop
xlat
sub
xchg
test
add
jmp
add
fcoms
std
jns
fsubrs
in
cmpsl
pop
inc
push
adc
jnp
jo
sub
mov
jle
dec
mov
fstpl
lret
imul
mov
outsl
or
push
jno,pn
jmp
xchg
mov
mov
out
mov
leave
cmpl
imul
fucomi
xchg
imul
add
ficompl
scas
cmpsb
add
cwtl
test
mov
out
data16
xchg
fs
pop
fidivs
rorb
pop
out
mov
mov
ja
outsl
ds
rcll
mov
or
in
mov
sub
sub
mov
ret
cmpsb
or
sub
sub
dec
push
mov
cmpsl
lods
jo
jl
fwait
ja
loope
jo
xchg
hlt
sbb
lret
jecxz
cs
loope
sbbl
cmpsb
adc
in
or
or
fisttpll
sahf
pusha
pop
clc
pop
filds
push
cmp
cmp
xchg
cmpsb
adc
mov
mov
lods
insl
lcall
enter
testb
adc
jo
lahf
xor
xchg
push
out
lea
push
sub
xchg
popa
dec
dec
shlb
xor
mov
xlat
jnp
cltd
aad
icebp
push
fildl
cmpl
stos
mov
and
xor
and
push
jb
fldenv
mov
dec
in
sbb
fisubrl
ljmp
fprem
ret
in
mov
outsb
loope
mov
or
cmp
or
mul
ror
cld
push
dec
push
icebp
xor
push
in
mov
loope
jg
test
mov
shl
fcomps
popa
sarl
push
lods
mov
fistl
les
mov
pop
add
mov
aaa
add
fisttps
stc
shll
pop
xor
jl
cmp
mov
mov
imul
push
sub
push
push
test
push
out
pop
cs
mov
lea
imul
out
xor
jl
cmpsb
in
lock
pop
xchg
sub
cmp
pop
std
push
xor
fnstenv
mov
sub
push
mov
test
pop
dec
movsb
mov
sar
lcall
or
push
sub
inc
test
jg
stos
popa
lahf
pop
mov
insl
aas
mov
jp
and
loope
dec
jae
out
insb
xchg
mov
aas
clc
xchg
dec
daa
sub
pop
xchg
pop
cmp
fldcw
das
push
lds
aaa
xor
inc
pop
push
fmuls
pop
fbstp
mov
fidivl
mov
in
sub
out
inc
jne
fisttps
cmp
rcrb
aas
or
scas
cs
add
out
pop
outsl
idiv
popf
adc
jmp
lret
outsb
out
mov
mov
add
inc
inc
sti
lods
inc
ret
cmp
setle
mov
jns
fsubl
cli
and
arpl
dec
adc
in
inc
std
mov
int3
sub
cmc
and
sub
jp,pn
pop
out
mov
outsb
cmp
cltd
sub
stos
add
pop
data16
or
add
out
mov
scas
test
or
out
push
push
mov
outsl
mov
or
xor
mov
test
push
fwait
inc
dec
sub
mov
popa
adc
ds
fisttpll
orl
frstor
mov
dec
xor
xchg
xchg
popa
pop
repnz
xchg
jge
outsl
mov
gs
stos
sub
shll
inc
cmpsl
cs
aaa
aam
shl
mov
mov
push
xchg
ror
test
cli
jno
adc
and
popa
adc
sbb
mov
das
imul
insl
sub
lcall
push
xchg
ret
mov
cli
inc
int
xchg
ret
iret
rcr
pop
and
adc
bound
int3
lods
stos
dec
idivb
xor
mov
xor
adc
ret
adc
in
sub
out
push
and
ja
les
iret
adc
and
adc
jecxz
test
xor
ja
popa
and
push
xchg
fstl
clc
es
jo
les
mov
js
int3
pop
jmp
je
in
inc
lret
dec
fwait
cwtl
or
push
mov
outsl
add
adc
lods
fistpl
mov
push
in
push
add
jae
lret
sti
in
insl
fldenv
jmp
cmpsb
jmp
sbb
inc
mov
sti
repz
roll
dec
and
mov
ret
enter
cmc
inc
rcr
dec
aas
mov
divl
add
loop
es
pop
lods
fcomps
inc
or
gs
or
ficoml
sub
test
negb
dec
cltd
mov
add
popf
sub
repnz
or
cld
push
fcompl
adc
xchg
push
mov
mov
stos
xor
outsb
loop
test
in
ret
or
sarb
imul
sbb
stos
pop
xchg
ljmp
xor
pop
add
xor
loope
dec
sbb
mov
insl
dec
adc
stos
mov
xchg
sahf
jmp
sub
mov
dec
loop
fnsave
add
jno
mov
mov
mov
ds
mov
aad
popf
pop
adcb
les
jne
xchg
lods
cs
jnp
pop
js
mov
lods
xchg
push
iret
adc
cmp
test
insl
cmp
mov
xor
xchg
fs
push
popf
repz
or
add
or
pushf
ja
icebp
mov
das
mov
in
test
xlat
push
mov
add
sbb
icebp
cld
jecxz
mov
inc
test
ljmp
hlt
scas
xchg
int
mov
aas
scas
cwtl
dec
adc
pop
popf
push
sub
sti
jb
push
icebp
cmp
rcr
push
outsl
xchg
fists
shrl
das
pop
jno
jo
rcrb
mov
sbb
outsl
push
icebp
aam
mov
adc
sbb
xchg
push
fisubrs
mov
pop
into
out
pop
iret
push
dec
cmp
jl
roll
aas
addr16
inc
arpl
sarb
aad
push
fsubs
jge
fcompl
push
les
incb
pop
repz
arpl
mov
adc
push
es
or
mov
xchg
movups
push
lahf
mov
add
lods
es
xor
sbb
sti
out
cld
mov
hlt
movsb
pop
or
and
xor
push
shrl
rorb
mov
push
sub
icebp
sti
iret
and
nop
xor
sbb
and
fisubl
in
sub
push
addr16
mov
shll
stc
cltd
push
cmc
xchg
int
in
add
pop
in
push
hlt
sub
in
call
dec
cs
rcll
out
pop
sti
push
loop
mov
jmp
mov
mov
sbb
mov
stc
push
jl
jbe
or
xor
push
push
mov
movsl
push
cli
push
cmp
lds
stos
mov
pop
dec
bound
cltd
and
and
cmc
movsl
int3
adc
or
sub
xchg
lcall
leave
repz
rorb
pop
scas
xor
fnsave
jne
push
mov
add
pop
mov
je
sub
mov
sbb
mov
pop
les
in
sbbl
fdivrl
dec
movsb
lcall
rcr
or
popf
in
or
dec
insb
out
hlt
leave
dec
push
jmp
shlb
mov
mov
pop
pusha
inc
addl
mov
sbb
fdivs
mov
cs
cmpsb
into
jp
fsubrl
jnp
sbbl
jb
stc
das
inc
test
jae
push
lods
inc
cmpsb
add
add
stos
imul
push
aam
and
lcall
cld
inc
sub
in
adc
inc
inc
inc
mov
push
sub
push
pop
or
sub
jno
inc
inc
loopne
sahf
jmp
cmp
loop
mov
pusha
add
sbb
stos
iret
imul
xor
fst
add
push
cmp
xchg
icebp
call
mov
sarb
inc
cltd
dec
lea
push
daa
xchg
lret
xchg
push
mov
pop
pop
cmp
jl
cltd
adc
sahf
mov
mov
and
adc
je
jg
cltd
xor
lock
fisubrs
mov
ss
mov
adc
aam
in
lret
mov
cld
jl
xor
scas
int3
aas
dec
int
pop
push
les
in
cmpsl
daa
mov
or
in
lret
bound
divb
add
stc
inc
das
cmpsl
insl
sbb
adc
mov
cmp
and
mov
mov
shlw
sbb
aam
xor
jl
mov
cmp
je
dec
mov
fbld
cmpl
xor
test
std
repnz
gs
pop
add
out
pop
sbb
cltd
pop
scas
out
in
mov
insb
adc
xchg
popf
adc
stc
and
nop
and
inc
in
adc
cmpsl
out
je
push
fidivl
std
in
std
mov
mov
imul
sbb
lahf
add
add
inc
add
or
jo
out
xor
gs
pop
ret
sub
cmc
fistpll
in
mov
sub
pop
push
enter
ret
testb
ljmp
adc
or
adc
movsl
imul
movsb
test
clc
fistl
dec
push
add
jb
ficomps
stos
call
and
clc
fwait
inc
cli
int
inc
add
sub
loop
mov
push
out
mov
lds
shll
adc
pop
mov
insb
mov
xchg
fcomps
inc
sub
jl
inc
or
outsl
cmp
ret
ss
and
xchg
xor
sbb
pop
sbb
mov
sbb
dec
fcmovnb
mov
das
xor
jg
and
push
dec
mov
shl
cmpsb
popa
jne
mov
das
or
movq
out
and
mov
sbb
scas
mov
mov
mov
lock
stos
jge
dec
cs
sub
popf
xchg
in
fnstenv
mov
add
jle
pop
std
dec
inc
shlb
test
cmp
leave
add
sub
pop
ja
xor
loop
aaa
data16
sahf
scas
in
sub
loopne
movsb
xchg
cltd
adc
div
cmc
add
adc
jb
push
jg
jge
cmp
inc
inc
ret
inc
pushf
movsl
push
rcll
sub
or
mov
and
out
sahf
fs
and
call
jne
push
or
inc
pop
aaa
fwait
es
sbb
cmpsb
into
frstor
jns
arpl
fstpl
pop
sbb
jmp
cwtl
xchg
xor
int
sbb
dec
fisttpll
mov
and
xor
fwait
ret
mov
sbb
and
pop
dec
xchg
fs
daa
push
jg
adc
int3
pop
push
into
dec
loopne
iret
and
mov
jmp
sbb
aas
pop
dec
negl
js
inc
jns
loopne
subl
sbb
pop
ret
push
in
andb
outsl
and
inc
aad
scas
hlt
icebp
mov
or
cmp
add
repnz
test
pop
mov
sbb
pop
pop
mov
jecxz
pop
dec
addr16
mov
lds
out
sbb
movsl
pop
mov
cltd
mov
test
je
addr16
fistps
aad
sub
call
into
cmc
inc
mov
push
sub
xor
scas
bound
sarb
ds
xor
popa
repnz
xor
jbe
push
ljmp
xor
pop
mov
jno
inc
jecxz
lock
repnz
add
in
xchg
mov
and
xor
dec
adc
dec
xor
jne
push
mov
mov
xor
inc
cmp
cld
js
jle
jne
sbb
stos
movsl
call
mov
adc
push
jne
ss
loope
mov
shll
into
cmc
cmpsb
inc
lds
daa
data16
ficoml
sub
lret
and
mov
jb
lods
adc
mov
and
add
xchg
xor
jb
add
xor
loopne
lret
fdivl
xchg
bnd
test
test
push
xor
js
test
mov
call
test
stos
inc
jmp
scas
loopne
sbb
pop
jge
and
rcll
add
call
fwait
sbb
aas
stc
bound
add
push
lahf
sbbl
inc
adc
sarl
and
xchg
inc
ss
adc
sarb
pand
dec
add
mov
dec
pop
add
jl
xchg
and
ret
fwait
push
jmp
cmpsb
loop
xlat
ficomps
jo
ficomps
nop
inc
fsubrl
sti
jne
push
loope
dec
orb
imulb
sub
jp
mov
jle
push
jle
aad
cmp
xchg
std
ss
test
mov
lahf
shlb
stos
jae
nop
mov
xor
cmp
push
mov
lock
dec
rorb
fidivl
sub
mov
and
mov
sbb
jne
xchg
mov
out
leave
pusha
cmp
mov
ffreep
cli
pop
xor
loopne
repnz
scas
sub
test
add
cmp
int3
lret
sbb
sbb
push
xchg
jge
test
inc
stos
inc
sti
gs
aam
cmp
and
rolb
cs
adc
dec
mov
or
and
cmp
out
push
aam
icebp
cwtl
ljmp
js
mov
sbb
mov
test
addl
push
out
adcl
leave
jae
mov
cmc
scas
jle
pop
fstpt
std
jo
xchg
mov
sbb
mov
or
push
out
mov
or
adc
mov
cmp
xchg
jmp
xchg
out
pusha
sbb
xchg
sub
mov
jno
xchg
repz
or
jno
push
mov
aaa
mov
xor
into
sub
repnz
sub
repz
jne
mov
mov
orl
lahf
ficompl
int
add
jle
outsb
push
out
and
fcmovnbe
adc
cmp
nop
subl
mov
push
xchg
sub
jg
sahf
mov
mov
repz
call
cmp
mov
faddl
mov
and
gs
lcall
enter
int3
fmull
push
loopne
or
ficompl
mov
fs
push
xor
shr
pop
and
pop
popf
sbb
dec
xchg
js
mov
pop
jno
inc
aad
ds
in
pop
int
adc
les
jbe
mov
in
jmp
cmpsl
in
add
loope
dec
xchg
xchg
cmp
sub
pop
sbb
lret
or
dec
fwait
and
jg
and
insl
mov
or
xor
lods
hlt
daa
int3
arpl
xchg
dec
notl
push
dec
stos
mov
mov
je
cmp
lods
add
das
xor
push
add
in
ret
cld
sbb
push
es
in
mov
addr16
scas
iret
add
sub
adc
push
push
sbb
jno
jno
jg
pop
lods
xor
test
push
jle
leave
pop
and
cmc
shrb
call
mov
outsb
pop
add
mov
add
sahf
rorl
dec
mov
pop
stc
shlb
loopne
add
inc
loop
xchg
pop
repz
cli
xchg
aam
adc
sbb
inc
inc
mov
mov
test
inc
xlat
push
inc
lds
jns
inc
xchg
jnp
mov
ss
xor
mov
mov
add
shl
stos
sub
pop
orl
out
xorl
and
inc
iret
ret
ret
mov
cmpsl
sbb
fsubs
int3
test
sahf
mov
sbb
mov
or
xchg
dec
mov
mov
es
test
std
stos
xchg
aaa
mov
outsl
test
push
sti
stos
ficoml
jb
lret
xor
sbb
fisubs
jbe
test
lret
ret
sarl
add
fstps
xor
jecxz
xor
cmpl
sahf
push
sub
push
lret
pop
ret
cmpsl
dec
pop
aad
lahf
cmc
or
push
sub
sbb
dec
jecxz
dec
in
ret
push
ja
mov
in
add
jecxz
mov
xor
dec
sub
lret
test
mov
dec
cld
jmp
movsb
mov
ja
test
mov
mov
in
test
jae
ja
push
inc
jle
xor
xchg
inc
adc
sahf
fdivl
sarl
rcrb
lods
add
pop
sub
adc
test
leave
xchg
jae
sub
dec
add
and
nop
mov
lret
js
lods
mov
stos
daa
pop
jecxz
jae
push
mov
jmp
sbb
bound
aad
dec
pop
jns
jl
mov
das
xor
pop
int
insb
data16
xchg
pop
and
cmp
shlb
scas
dec
imul
das
push
xor
je
in
inc
cwtl
in
data16
cmpxchg
in
push
mov
aad
sbb
enter
push
sti
mov
add
jne
lods
int
cli
mov
loop
dec
ud0
jnp
mov
xchg
mov
push
inc
fs
outsb
pop
or
aaa
add
push
fnsave
repz
mov
repz
lds
push
jl
xchg
pop
push
dec
jbe
or
es
pop
sub
call
push
minps
cmpsb
add
and
adc
scas
cmp
dec
xor
mov
sbb
push
sub
or
xchg
mov
jge
pushw
aas
pop
mov
sub
gs
adc
dec
mov
jns
and
jl
push
cmp
or
fdivrl
cmc
in
xchg
in
mov
dec
ficompl
or
loopne
or
adc
and
gs
test
pop
loopne
xlat
ds
sbb
in
sub
jne
iret
mov
scas
pop
adc
cmp
mov
sbb
pop
pusha
clc
or
faddl
dec
cmpsl
cmp
es
test
jno
outsb
jno
push
mov
sub
out
addr16
mov
lods
test
cmc
leave
sbb
adc
mov
push
cmp
push
fadd
push
dec
outsl
pop
mov
inc
jge
jbe
inc
sub
sub
stos
pusha
sahf
in
rolb
insl
push
je
test
adc
push
int3
les
call
lds
xchg
lea
or
adc
and
sub
icebp
dec
adc
mov
jnp
pop
or
cmp
pushf
scas
xchg
sahf
int3
rcll
test
jns
mov
mov
pusha
notl
insl
push
cmpsl
pop
or
out
jecxz
cmp
mov
xor
das
jb
pop
jns
pop
sbb
jmp
loop
mov
loope
jne
pop
pusha
int3
out
push
pushf
xchg
jbe
jle
lea
mov
iret
fidivrs
je
leave
jp
cmpsl
or
sbb
and
xchg
cmp
dec
sbb
cmp
js
aas
fistps
enterw
jae
mov
dec
inc
orb
push
xchg
inc
std
cmp
or
data16
addb
cmp
push
and
push
call
test
jecxz
push
fbstp
xchg
clc
test
pop
dec
cld
sahf
inc
sbb
loope
outsb
pop
cmp
shrl
loope
mov
xchg
sbb
stos
jb
mov
test
stc
in
push
mov
shrb
sub
add
in
adc
test
pop
fs
sahf
sub
hlt
mov
test
sbb
inc
out
pop
adc
jnp
or
lods
loopne
cmpsb
test
fnsave
fs
push
push
scas
imul
pop
mov
mov
icebp
xlat
aam
add
xlat
loope
repz
xlat
in
add
xchg
fimuls
sbb
dec
notl
popf
sub
pop
push
xor
jp
push
add
pop
out
xchg
mov
mov
rcrl
hlt
mov
jge
push
xchg
in
jno
test
imul
aaa
outsb
push
popa
add
outsl
imul
inc
fwait
dec
xor
inc
jmp
xor
test
jecxz
in
sbb
sqrtps
xchg
pop
insl
dec
loop
arpl
popf
inc
pushf
test
nop
sub
movb
and
xchg
shll
test
jnp
js
xchg
loope
or
push
sub
add
xchg
inc
sbb
mov
shrb
stc
cmp
sub
add
out
mov
xchg
das
add
mov
lods
test
dec
xorb
add
sbb
jp
jp
pop
jae
cmpsb
jmp
jg
ja
sub
mov
data16
loop
mov
outsl
shll
loopne
sbb
or
nop
pusha
aas
lcall
push
cmc
pop
jno
leave
add
cmpsb
jb
cmp
pop
imull
aam
orl
fcomps
jge
push
stc
fsubrs
js
adc
fld
cmpsl
in
pop
dec
test
out
push
aaa
cmp
adc
mov
lods
mul
sub
jne
mov
les
dec
mov
int3
lods
inc
fstpl
lcall
xchg
add
jns
ja
movsl
fs
push
aam
inc
or
aaa
jl
ss
cs
fiadds
in
xchg
test
mov
push
les
fdivrs
jae
repz
ret
enter
out
jno
mov
shlb
jae
leave
outsl
out
das
sbb
cmp
or
dec
adc
pop
xchg
xor
xor
jg
mov
cli
lods
mov
inc
into
aad
sub
jecxz,pt
test
icebp
mov
sahf
adc
jge
fidivs
jmp
pop
leave
add
cmp
ss
xor
and
adc
push
sbb
xchg
add
xchg
aad
popf
fs
icebp
clc
pop
and
gs
and
enter
xor
icebp
insb
and
ret
test
and
cmp
ja
out
arpl
pushf
adc
jnp
int3
sbbl
in
mov
and
cmpl
mov
dec
xlat
push
mov
push
loope
adc
pop
xor
in
repnz
into
lret
sub
aad
test
add
mov
test
arpl
cwtl
jns
and
jl
dec
adc
push
xchg
pop
stos
testl
mov
inc
or
mov
outsb
jmp
dec
mov
inc
fsubrs
push
jmp
mov
mov
arpl
mov
inc
xor
mov
xadd
sub
ss
xchg
lahf
iret
push
das
push
push
cmp
mov
imul
orb
or
pop
scas
jle
mov
inc
test
jp
call
lret
sbb
addb
xchg
popf
jg
fisttpll
xor
loop
inc
xlat
add
mov
lret
mov
iret
mov
aam
sarl
pop
push
xor
mov
pop
fs
ffree
pop
push
fs
pop
push
call
es
popf
std
mov
adc
test
or
in
not
mov
andb
push
cmp
cmp
out
pop
iret
xor
mov
xor
jmp
ss
lock
ljmp
xor
jae
lea
popf
sbb
xorl
dec
cmp
jecxz
mov
std
mov
jl
test
mov
push
jle
lret
cmpb
or
jno
jl
push
inc
mov
cmpsl
mov
jle
mov
in
stos
out
sub
lods
das
inc
jnp
cltd
test
jns
mov
jnp
xor
push
or
push
push
inc
jp
xor
mov
push
xor
pop
cli
addr16
mov
leave
jo
mov
sbb
sti
pop
fstpl
data16
mov
adcb
jge
das
daa
in
lods
or
scas
js
call
ret
rorb
sbb
mov
cmp
leave
test
xor
xor
add
ds
aam
or
push
fnsave
imul
adc
out
arpl
mov
push
aas
lcall
je
lret
outsb
jp
jnp
pop
sbb
and
ss
or
andl
pop
adc
push
scas
push
inc
lahf
and
xor
and
cmp
sbb
fcoml
adc
mov
inc
mov
adc
fidivs
push
push
push
in
ficomps
adc
test
dec
std
mov
mov
push
dec
mov
fcoml
cmp
add
sub
fstps
sbb
mov
add
shll
cmpsb
lds
adc
xchg
dec
dec
push
mov
sub
test
pop
jle
into
outsl
out
in
sub
mov
mov
jge
dec
push
mov
dec
aam
mov
neg
push
fildl
popf
xor
mov
mov
push
inc
or
and
inc
and
sahf
adc
or
sub
pop
aas
inc
pushf
jp
mov
fsubs
and
pop
in
or
dec
sti
sub
idiv
push
sub
sub
or
subl
mov
dec
jge
stc
sub
ds
rclb
aas
mov
add
jbe
mov
jmp
pop
fstpl
and
hlt
aam
jno
dec
movsl
cmp
enter
jecxz
inc
xor
push
cmp
out
xlat
js
movsl
in
ja
or
out
mov
repz
sub
jns
mov
dec
or
in
lret
jp
xchg
in
push
push
gs
nop
inc
dec
cmp
mov
arpl
and
cmp
mov
xchg
sti
dec
dec
xchg
aad
in
addr16
mov
add
mov
push
sahf
insl
mov
fsubl
les
cmp
call
adc
div
rclb
cmc
xor
pop
loope
mov
jge
xchg
hlt
fsubp
fcmovne
enter
sub
add
cmp
cmp
pop
mov
mov
and
pop
shlb
jle
jle
pop
gs
mov
dec
mov
divl
fstp
xor
dec
imul
xchg
cmp
fistps
and
jge
pop
clc
sub
or
inc
jl
or
inc
mov
mov
lock
notb
fiaddl
ja
into
popa
xchg
cmp
orb
pop
test
push
xchg
push
ds
in
insb
ret
mov
lds
es
adc
xchg
xor
pop
inc
mov
cmc
or
sub
add
lcall
cwtl
dec
out
sti
inc
xchg
ficomps
push
push
repz
mov
cwtl
sti
dec
std
or
sahf
loope
sar
dec
dec
pop
dec
leave
cs
cltd
ljmp
sub
mov
add
cli
mov
dec
or
mov
enter
mov
ret
pushw
lock
push
rolb
insb
or
scas
mov
mov
stos
add
adc
pop
xor
pushf
xor
add
das
sbb
add
xchg
bnd
inc
clc
testl
iret
adc
or
stos
mov
or
imulb
sbb
mov
mov
into
xchg
shrl
rorb
pushf
add
push
or
push
mov
jge
gs
repz
inc
popf
mov
or
mov
sarl
jno
addr16
pusha
test
pop
xchg
jne
std
test
mov
and
xor
xchg
test
xor
mov
in
flds
fisubrs
outsl
mov
mov
mov
movl
lock
sti
filds
sub
fwait
pop
mov
fisubrl
pushf
ret
or
sbb
lahf
mov
mov
xor
cwtl
rcr
jg
cmp
pushf
xchg
shll
fbld
adc
jle
or
repnz
and
push
cmp
std
cmpsl
outsl
data16
xor
lret
test
sbb
jl
stos
lods
jl
push
xor
movsb
inc
push
popa
dec
sbbb
mov
push
test
mov
dec
jp
iret
repz
and
dec
push
lea
cs
add
xchg
pop
rorl
adc
fldcw
xchg
in
les
mov
mov
rolb
shr
jmp
mov
sub
dec
fucomip
and
mov
cltd
dec
jmp
inc
mov
outsb
stos
jne,pt
push
push
insl
xchg
jle
test
jmp
xchg
fidivrs
jg
inc
push
insb
shll
and
out
inc
ss
das
push
mov
and
fucomip
cmp
adc
out
push
rcrb
push
mov
movsb
sbb
jbe
insl
push
push
mov
fwait
jns
aam
and
xor
xchg
pop
jo
insb
xor
xor
movsb
sub
stos
loop
jl
mov
mov
push
jne
arpl
mov
mov
or
cmp
je
inc
mov
test
testl
mov
xor
and
cltd
pop
push
stos
ret
mov
bound
mov
sarl
das
or
test
ret
imul
fidivrs
xchg
daa
lods
dec
pushf
jae
lahf
push
std
shlb
and
in
mov
cmp
stc
jno
sbb
xchg
adc
outsb
mov
pop
mov
jmp
loopne
push
shrl
lahf
and
addr16
je
in
mov
lds
iret
jne
mov
ret
push
das
stos
int
pusha
shlb
lret
and
orb
lods
push
sbb
xchg
rcll
in
push
adc
lcall
mov
ret
outsl
and
adc
and
adc
scas
cmp
cmp
or
xor
fwait
push
lea
aad
movsb
mov
inc
pop
inc
cli
lods
clc
and
bound
mov
inc
ja
lcall
xor
adc
and
sti
inc
push
leave
les
testb
fldenv
jo
sti
imul
sahf
add
lea
mov
sub
fs
mov
inc
ja
add
xchg
je
xorl
mov
push
out
or
push
cli
xchg
xchg
sbb
dec
icebp
mov
jns
call
movsb
adc
je
pop
cmp
out
dec
bound
jb
sbb
lods
andb
jp
cmp
das
scas
push
xchg
dec
inc
dec
cld
loop
icebp
ljmp
push
sub
push
or
fnstsw
scas
mov
aaa
arpl
pusha
xchg
cmpb
mov
cli
pushf
add
and
mov
je
ss
mov
popa
or
lahf
fimull
ss
int3
lret
add
test
push
mov
mov
sti
jo
sub
mov
sbb
jne
mov
sub
adc
test
cld
fsubl
movsb
aaa
dec
mov
rclb
iret
fildl
adc
push
cmp
das
jb
mov
cmp
imul
or
jno
add
out
stos
mov
cli
dec
bound
fwait
dec
sub
nop
mov
rcl
les
mov
push
lock
cmp
fst
movsb
leave
inc
ss
sbb
dec
lock
ja
aas
cld
insl
subb
daa
stos
cmpsl
pop
pop
ja
sub
sbb
das
out
fists
ret
lret
in
add
scas
mov
sahf
pop
fsubrp
dec
cwtl
adc
adc
daa
stos
lock
jae
jmp
mov
mov
mov
test
in
int
jo
roll
sub
call
loope
sbb
push
popf
pop
xchg
cs
dec
cmc
adc
dec
ret
les
mov
mov
add
test
gs
je
mov
xchg
mov
sbb
xor
xchg
dec
xchg
shll
or
inc
xchg
dec
add
nop
sub
or
out
sbb
xchg
push
ss
movsl
mov
bound
adc
and
xchg
sahf
mov
lret
fwait
iret
sub
das
xchg
or
mov
or
bound
es
popa
xchg
dec
sub
lods
in
cmp
sahf
ds
popa
add
xchg
clc
out
jge
test
xorb
mov
mov
ret
xchg
inc
repz
xchg
scas
fs
push
insl
shll
mov
jae
clc
lock
test
mov
xchg
mov
cmp
mov
pop
test
repz
mov
push
push
jno
jo
jmp
jne
jbe
stc
dec
les
mov
cld
rcr
mov
pushf
arpl
sti
xchg
jnp
addl
in
push
jmp
mov
add
push
jge
pop
pop
std
push
sbb
push
aam
push
or
jg
pop
repz
mov
punpckhdq
aaa
pusha
mov
push
inc
xor
jecxz
hlt
scas
cmpsb
dec
and
dec
sahf
into
aad
iret
fldt
sbb
dec
pop
adc
xor
xor
mov
fidivs
pop
push
push
or
stos
sahf
ret
js
dec
test
cmc
test
dec
aam
sub
aam
in
mov
out
cwtl
push
mov
jbe
xor
imul
stos
fistpll
iret
adc
jns
int
jae
mov
pop
bswap
and
or
cwtl
mov
jmp
stos
xchg
je
cs
cltd
cmp
jmp
cmp
inc
add
or
lret
adc
jge
sub
or
cs
nop
jnp
ret
test
or
pop
or
mov
fs
lock
pop
lods
add
ljmp
stc
lods
ljmp
or
adc
jp
dec
xlat
sbb
pop
mov
sar
pop
jecxz
movb
mov
cltd
pop
push
sub
push
adc
in
fisubs
daa
xlat
cmp
xor
leave
fildl
jns
mov
lret
pushf
insl
lret
out
in
mov
pop
popa
jbe
or
pop
sbb
inc
xor
ficoml
adcl
aad
shrl
mov
or
je
jno
scas
imul
xor
mov
in
daa
dec
loop
jne
dec
out
sub
jo
xchg
lahf
dec
jmp
fwait
rorb
or
add
xor
sub
xchg
ret
out
or
lea
mov
cmp
in
mov
mov
mov
xchg
popa
loop
xchg
ret
dec
test
lret
inc
mov
adc
fildll
scas
scas
pop
push
dec
xchg
or
cwtl
jge
push
inc
jl
xor
call
lret
fdivs
mov
and
leave
out
cmp
gs
movsb
ja
and
cmp
test
popf
ja
scas
scas
insl
cmp
push
lahf
leave
imul
out
scas
jno
lcall
iret
inc
pusha
sti
sti
or
mov
and
xchg
mov
fistpll
mov
int3
fisubrs
dec
mov
mov
cltd
das
xchg
int3
ret
pop
jno
sub
and
lods
insb
pop
mov
mov
cmpb
lret
test
jg
daa
les
jp
pusha
rorl
aas
out
push
or
mov
sbb
xchg
or
sbb
sub
mov
pop
lock
rolb
ja
lock
push
xlat
and
out
mov
adc
insb
push
cmp
nop
ret
push
aaa
stos
push
jle
xchg
cmpsb
roll
jge
into
stos
lret
sbb
sub
push
hlt
popa
test
rcll
pop
scas
xchg
jae
sbb
int3
adc
mov
sbb
mov
in
mov
ds
cmpsl
stos
sbb
inc
daa
mov
pop
jecxz
mov
test
adc
adc
jl
xor
dec
pop
lea
pop
or
in
lods
fcomip
das
jne
aaa
pop
andb
mov
xchg
lock
jbe
xchg
lahf
test
cmpsb
mov
adc
xchg
rcrl
cmp
and
mov
stos
add
cs
add
sub
or
dec
sti
popf
mov
jns
dec
lret
scas
jno
jo
stos
jbe
push
pop
lock
sysexit
dec
push
inc
bound
mov
in
clc
xor
jl
loopne
inc
mov
adc
ds
enter
add
pop
and
pop
dec
add
jl
pushf
mov
push
pop
dec
out
jb
mov
out
xlat
adc
nop
insb
mov
rcrb
xchg
mov
cmp
sub
push
sub
mov
int
hlt
subl
adc
dec
fistpl
adc
ret
into
cmpsl
pop
inc
in
or
and
loopne
in
jbe
xor
shl
fwait
xchg
into
jg
dec
cmp
cmpsb
jge
cwtl
xlat
mov
mov
adc
xor
cs
loopne
out
stos
mov
dec
or
add
lock
pop
lods
pushf
outsl
sub
pop
mov
mov
aas
ror
idivb
xor
cmc
inc
mov
dec
pop
xchg
icebp
stc
imul
xor
pop
lahf
insl
push
dec
out
shr
fwait
cs
xchg
addr16
inc
and
xchg
push
xchg
push
fs
rcl
pusha
ret
ret
js
fisttps
mov
rcll
repnz
imul
push
push
jl
add
jle
out
movsl
scas
jg
add
lret
out
fwait
push
fstpt
jno
mov
inc
and
cltd
loop
mov
aas
cli
das
jnp
jo
int3
jp
adc
icebp
mov
add
or
push
int
jg
sbb
xchg
or
scas
xor
adc
pop
pusha
xor
add
cmp
add
push
inc
arpl
xchg
inc
dec
movsl
insl
dec
jb
stos
add
fwait
lods
push
xchg
imul
gs
and
pop
adc
add
sub
ljmp
lods
leave
sbb
and
mov
daa
loope
std
mov
pop
testl
jne
push
sub
je
jg
jmp
popf
lods
lods
mov
subl
popf
mov
inc
push
sub
outsb
mov
cmp
scas
adc
testl
inc
inc
js
pop
mov
pop
icebp
inc
out
sbbb
mov
inc
scas
lahf
add
adc
mov
push
loop
insb
cld
jge
push
cmp
push
cmc
sbb
movsb
mov
inc
mov
add
add
add
mov
pop
lcall
pop
orb
cmp
icebp
cmp
insl
loop
popf
pop
in
inc
cmp
push
int3
push
add
push
xlat
scas
adc
call
mov
jbe
rcrl
sbb
push
or
ljmp
stos
dec
inc
xchg
cmp
bound
sti
call
jge
lret
add
clc
xchg
jp
shrl
aas
cmp
fdivs
and
mov
pop
and
mov
mov
fwait
ds
hlt
lock
addr16
jne
sbb
adc
insb
jge
sub
shlb
lret
cltd
ficompl
add
jl
pusha
add
adc
or
sub
mov
inc
cmp
xchg
loope
test
repz
pop
mov
in
xor
xchg
jns
push
movsb
push
mulb
popf
jmp
enter
sub
sub
mov
and
sbbl
jne
icebp
imul
xchg
imull
mov
pop
push
out
jne
imul
dec
cmpl
sti
jecxz
fwait
and
outsb
push
jg
clc
stc
and
dec
es
mov
in
ds
imul
xor
and
imul
fisttpl
inc
test
loopne
aaa
leave
andl
mov
and
xor
push
jnp
popf
fmull
add
or
dec
adc
sub
or
adc
sbb
pop
je
fstps
pop
cmpb
jnp
iret
int
out
mov
sub
ficoml
mov
jg
imul
adc
int
adc
mov
or
imul
jae
stc
leave
ss
pop
adc
decb
fwait
js
and
mov
jno
iret
jns
cmp
fildll
cld
sarb
sub
fistpll
mov
rorl
das
sbb
fwait
mov
fiaddl
insl
push
inc
mov
adc
fwait
pop
mov
ficompl
ror
pushf
pop
pop
in
inc
dec
xchg
lds
xchg
sbb
mov
lock
stos
jmp
sbb
in
addr16
pop
add
les
add
pop
sub
clc
mov
aad
mov
jg
sbb
outsb
pushf
sbbb
jp
mov
cmp
add
and
ss
mov
pop
fnsave
xor
lret
dec
insb
inc
mov
jns
test
adc
jne
jecxz
imul
mov
cmp
inc
daa
push
sbb
imul
fdivl
sbb
xchg
clc
gs
push
xor
wbinvd
xchg
jne
pop
fisubrl
popa
inc
mov
jg
mov
cwtl
sub
jns
leave
inc
push
out
ret
fwait
push
pop
inc
inc
stc
jle
dec
push
outsb
out
dec
mov
decb
jns
int
sub
xor
cld
push
leave
sbb
adc
mov
fimull
xor
add
sbb
pop
stos
outsl
pop
repnz
dec
nop
stos
inc
sbb
fxch
sub
dec
aad
xchg
jnp
push
mov
fstpt
ss
adc
pop
mov
shll
cmc
lock
jecxz
xchg
or
mov
mov
xchg
inc
test
jmp
xchg
dec
cmc
sbb
lods
pushf
lock
rcrl
es
jne
roll
push
test
jg
pop
mov
xor
mov
cmp
in
jp
lea
aam
add
sub
pop
and
lea
ret
out
sbb
push
pop
bound
sbb
aaa
and
and
outsb
popa
repz
push
mov
or
insl
dec
pop
int
cmp
jno
outsb
out
inc
add
dec
jbe
xor
stos
out
lcall
test
inc
or
das
adc
mov
xchg
push
push
imul
addr16
adc
xchg
cmpsl
dec
flds
imul
or
je
cmp
imul
jp
adc
movl
cmc
adc
adc
stos
xor
adc
add
in
fidivl
jp
in
pop
bound
push
ds
pusha
mov
pushf
ret
and
std
les
fcoms
or
xor
inc
pop
jmp
push
inc
dec
inc
mov
aaa
and
mov
inc
dec
add
int
adc
nop
mov
pusha
cld
xchg
iret
xchg
aaa
xchg
jl
sub
inc
pop
jns
jmp
je
sbb
enter
inc
jb
lock
push
test
ss
lds
or
addl
push
lock
fsubs
aaa
scas
inc
sbb
nop
mov
push
add
testl
cs
sbb
add
sbb
adc
push
xchg
jnp
ret
ret
jl
lea
roll
push
mov
sbb
leave
test
shlb
mov
call
dec
dec
scas
push
xchg
leave
in
push
iret
pop
ret
adc
xor
aam
enter
dec
cltd
add
faddl
mov
cwtl
xchg
inc
scas
popf
test
pop
pop
shrl
and
mov
jg
stc
mov
add
std
cmp
call
or
lods
rorl
jmp
xchg
mov
lods
pop
xor
ret
xchg
mov
insl
stos
push
sbb
imul
divl
mov
bound
testb
pushf
jle
pop
imul
push
data16
dec
jnp
jge
jge
cs
out
cs
inc
leave
pop
add
popa
repnz
push
push
rol
dec
mov
lret
test
pop
push
aas
pshufw
jno
xor
push
or
adc
sbb
push
out
jno
push
psubusb
sub
popf
jg
cmp
push
jae
insl
xchg
inc
pop
sbb
sbb
or
out
cwtl
jae
fwait
pop
cmp
xchg
and
roll
xchg
or
xchg
mov
lret
dec
daa
fwait
pop
lea
sbb
sbb
or
jo
add
movsl
xor
js
jnp
xor
fmull
cmp
adc
test
mull
push
mov
popa
xchg
and
cmpsl
adc
inc
xor
xor
rcll
and
in
add
pop
xchg
pop
push
sub
mov
mov
sub
sbb
fidivs
sbb
add
rcl
sub
dec
push
jecxz
add
xchg
pop
addr16
dec
lock
dec
lds
jmp
mov
das
jb
mov
xchg
xor
in
fcmovnb
mov
mov
mov
and
enter
aas
popa
stos
and
xchg
loope
and
mov
aam
and
out
in
call
pusha
pop
into
or
mov
mov
int3
into
sbb
popa
outsl
or
xor
adc
fisttpll
cmpl
sub
mov
mov
push
xchg
push
fisttpl
xor
jne
mov
aad
addl
cmpsb
xchg
jo
pop
or
fildll
push
ja
or
mov
into
fidivl
loopne
or
pop
in
xchg
roll
pop
into
stos
mov
scas
pop
rcll
inc
push
int
clc
adc
lods
out
adc
flds
sarl
inc
add
nop
jnp
lods
pop
inc
or
push
mov
stos
in
dec
and
movsb
push
movsl
sahf
xor
pop
push
neg
jae
dec
xor
nop
add
repz
sub
xor
cmp
pcmpeqb
fistpl
std
repz
clc
pop
pop
jg
insb
mov
push
inc
sub
sbb
or
xchg
mov
mov
inc
mov
push
in
push
pop
xchg
add
fidivs
jns
lods
dec
lcall
dec
jbe
xchg
or
mov
test
mov
sbb
cmpsb
jno
sahf
int3
and
cmpb
jl
dec
add
popf
loopne
fstpt
sub
sub
gs
mov
repz
xor
test
mov
clc
xor
mov
adc
adc
fsubrs
mov
xorl
mov
or
push
mov
sbb
movsb
inc
ficoms
inc
sub
in
push
mov
lea
movsb
xor
jns
mov
sub
mov
subl
xor
addr16
or
dec
pop
jo
adc
out
push
lcall
pushf
cmp
shll
add
icebp
dec
jo
fs
push
out
add
rcr
lret
daa
das
cmpsl
sbb
pop
gs
insb
lahf
mov
jecxz
cmp
push
int
jb
sbb
cmp
je
dec
aam
xchg
adcb
dec
mov
out
dec
xor
and
out
fdivp
jmp
test
mov
in
push
dec
shrb
push
cmpsl
shrb
cmp
and
rcrl
ja
test
rorb
xor
int3
cmp
sahf
xchg
cwtl
das
insb
out
sbb
adc
add
rcrl
xchg
js
in
jo
loopne
mov
mov
data16
sbb
insl
pop
mov
jecxz
xorl
and
data16
inc
into
cmp
pop
jle
popf
push
pop
sbb
mov
jecxz
mov
jle
in
je
sub
cmc
movsl
mov
out
mov
test
dec
xchg
and
daa
cltd
push
or
in
and
mov
fstps
insl
dec
sub
rcll
jmp
push
flds
jb
fsubr
flds
lods
mov
mov
jmp
fmuls
outsb
mov
cmp
pop
scas
fbstp
push
inc
lret
ds
mov
pop
jne
subb
das
mov
xor
mov
mov
and
loop
out
or
sbbl
jnp
dec
imul
and
mov
mov
add
rcll
jbe
sahf
push
cmp
cmp
subl
xchg
in
cltd
jnp
bound
pop
sub
pop
sbb
push
mov
mov
sbb
divb
cwtl
inc
test
imul
push
icebp
add
fsubrp
pop
add
cmpsl
nop
repz
xchg
mov
stos
sbb
repnz
push
in
loop
repz
and
push
loop
mov
xlat
imul
lds
push
aaa
pop
lods
push
and
mov
daa
in
push
mov
cmpsb
mov
push
int
add
mov
lcall
leave
sbb
jle
pop
ficoml
pop
mov
mov
ja
inc
fcompl
dec
ds
push
push
adc
push
xor
xchg
pop
add
add
adc
pop
loopne
roll
daa
std
cmp
hlt
mov
popa
push
sahf
aad
push
push
inc
or
pop
repz
scas
jg
dec
arpl
push
sub
cmc
jbe
push
and
insl
inc
and
aas
or
or
push
jl
mov
mov
push
adc
les
dec
push
pop
das
or
sbb
lcall
pop
movnti
stos
mov
es
mov
push
sub
sub
test
outsb
inc
jmp
add
loope
xor
xor
iret
into
xchg
adc
or
lea
cmp
xchg
loope
mov
xor
mov
scas
add
inc
push
inc
lods
rorb
pop
cmp
mov
push
sbb
movsl
xchg
xor
cmp
aam
cmp
mov
clc
mov
int3
mov
or
int3
adc
test
and
adc
ret
imul
inc
or
sub
inc
xor
andl
fistl
lods
mov
cld
pop
sti
loop
stc
out
lock
dec
sub
push
adc
jns
lret
mov
out
push
adc
adc
inc
sti
cli
test
jae
into
mov
out
xchg
cltd
subl
cli
pushf
ret
xchg
pop
int
mov
mov
xor
pop
adc
xchg
ja
adc
jno
jb
popa
cltd
fdivl
sub
push
jl
les
lahf
mov
or
test
adc
xor
cmp
dec
pop
add
and
jnp
loop,pt
pop
pop
push
mov
stos
lret
std
bound
fcomip
mov
lds
pusha
dec
adc
je
adc
orb
fsubrl
sbb
lahf
mov
xchg
icebp
xchg
hlt
adc
int
xor
in
mov
push
sub
mov
mov
roll
push
outsl
sub
and
push
fwait
push
or
dec
jp
cmp
aaa
inc
aas
lahf
push
into
test
mov
icebp
lahf
cmp
gs
mov
int3
mov
mov
sti
aas
lock
add
pop
in
adc
mov
pop
addl
xchg
ja
aas
mov
leave
dec
fsubrs
je
bound
test
rcrl
mov
sbb
fs
xlat
addr16
in
and
xor
stos
jl
inc
mov
out
jp
cmp
jmp
into
push
int
addr16
fcom
pop
cmp
add
addb
stos
push
mov
mov
push
xchg
mov
test
out
dec
mov
push
mov
xchg
lea
xchg
out
repz
push
mov
adc
out
mov
out
add
das
jbe
push
js
cmp
push
out
sub
or
flds
fistl
jge
loop
jecxz
in
add
pop
cmpsb
mov
xchg
cmpsl
sbb
popf
jmp
imul
dec
out
call
inc
lret
cmp
lods
jp
mov
cmpsl
and
push
xchg
pop
pop
mov
std
or
mov
jecxz
je
addr16
out
inc
pop
and
dec
mov
mov
xlat
sar
inc
sahf
inc
jnp
jge
lea
inc
scas
mov
jae
add
aas
nop
loop
orl
int3
sub
pop
test
int3
icebp
and
xchg
in
fcomps
out
xorb
add
mov
lcall
sub
scas
mov
in
loop
pop
ror
loope
stos
mov
xor
repnz
scas
cmp
mov
rcll
imul
or
xchg
push
sbb
jecxz
sbb
rolb
shlb
jae
sub
jmp
das
fisubrs
and
rolb
std
fnstsw
jl
sbb
add
or
sti
in
adc
push
push
inc
xor
xchg
out
jb
imul
andb
repz
insb
and
faddl
add
loope
and
out
daa
xchg
adc
jecxz
jo
pusha
add
xchg
dec
ja
aaa
cmp
jno
add
out
xor
jecxz
add
scas
call
imulb
cmp
xchg
stc
mov
dec
out
push
pop
jnp
xlat
daa
stc
xchg
loop
out
bound
sub
icebp
xchg
subl
imul
or
pcmpeqd
add
sti
xor
test
repz
in
pop
mov
out
fsub
ret
movsl
pop
jnp
hlt
jb
test
cmpsb
push
xchg
popa
das
call
gs
adc
inc
mov
mov
cs
sbb
outsb
mov
test
inc
cmp
or
mov
inc
xchg
add
popf
shr
xor
clc
xlat
or
sbbl
call
scas
ficomps
js
faddl
int3
or
les
pop
push
push
pop
mov
rcll
cmp
inc
dec
nop
daa
cwtl
nop
push
and
adc
insl
jno
rcll
xor
jae
inc
dec
out
lret
lds
shlb
mov
shrb
mov
stc
push
rorb
sbb
jbe
mov
jb
pop
add
xor
popa
in
or
mov
incl
movsb
es
sbb
inc
dec
notl
jle
shrb
sbb
and
aaa
test
add
xchg
cltd
inc
mov
aas
jmp
ret
stc
pop
imul
out
call
test
lahf
mov
xchg
mov
pop
mov
push
or
xchg
xchg
xchg
subl
popa
lcall
inc
sbb
lds
ds
rcr
sub
add
je
dec
dec
cmpl
sub
push
sbb
mov
xchg
daa
pop
cwtl
mov
movsb
jae
cmpsl
rolb
fists
out
adc
daa
sub
push
stos
inc
lcall
das
lret
gs
mov
sub
jns
jmp
mov
clc
jmp
mov
mov
pusha
int3
sbb
cwtl
hlt
mov
mov
or
sub
incl
inc
mov
xchg
lcall
cmp
fcoml
iret
rol
adc
nop
sbb
fsubrs
sbb
mov
xor
out
clc
movsb
inc
jno
scas
std
rorl
push
push
or
adc
adc
dec
jge
in
pop
leave
lahf
out
pop
ja
and
mov
mov
outsb
imul
adc
xchg
mov
dec
pop
jge
ss
adc
push
sbbb
pop
dec
push
pop
in
or
call
lcall
shr
out
js
ret
jne
loope
sbb
andb
mov
jae
push
lods
in
adc
lods
mov
cwtl
pop
into
hlt
xchg
test
inc
sbb
inc
mov
push
gs
sti
mov
aaa
in
int3
fsubl
sar
int3
dec
cmp
aas
mov
add
addb
insl
ljmp
dec
repz
push
or
bound
aam
cs
orl
mov
pop
pop
lret
mov
or
test
xor
push
adc
in
jbe
aad
fs
aam
std
mov
addr16
mov
add
mov
test
adc
jnp
push
cld
add
mov
cltd
push
in
ds
xor
call
jbe
push
fdivrs
mov
push
xor
enter
nop
repnz
fcomp
jl
fsubl
fmulp
in
daa
into
mov
inc
add
dec
scas
lds
ds
in
add
sub
idivl
out
adc
or
inc
pop
xchg
mov
fld
sbb
sbb
mov
and
aaa
leave
out
xor
and
inc
stos
pop
sbb
pop
ret
cmp
cmp
adc
js
jecxz
adc
inc
pushf
mov
cwtl
sub
push
xor
sub
add
aam
inc
mov
mov
stos
push
xor
popf
aam
les
and
push
cmpsl
mov
sbb
push
lods
outsl
repz
xchg
push
cmpsl
stos
aad
xor
xchg
mov
dec
mov
push
xchg
lods
repz
sub
inc
aam
pop
into
mov
ljmp
insl
insl
or
stc
xchg
pop
cmp
and
jb
sbb
mov
inc
das
ds
xlat
push
xchg
jle
or
and
aam
pop
mov
inc
pop
adc
outsl
inc
lods
std
insb
jo
into
out
lret
sub
daa
pop
lret
jmp
add
sub
out
push
out
or
xlat
xchg
xor
or
inc
jno
add
push
cwtd
fstl
jge
pop
pop
roll
xor
lret
adc
or
neg
loop
hlt
mov
pop
xchg
lret
sub
xchg
int3
out
cld
inc
clc
stc
idiv
fstpt
push
jo
enter
loop
xor
pop
and
mov
pop
sbb
cmc
ja
ljmp
and
in
es
movl
dec
push
push
dec
and
jg
fs
outsl
testb
outsl
mov
push
cltd
or
and
mov
mov
enter
mov
push
cmpsl
mov
sub
sub
pop
es
add
in
xchg
or
jp,pt
outsl
mov
loope
movsb
imul
push
inc
cli
dec
stc
clc
jge
or
xchg
aad
pusha
sbb
sti
cmovno
faddl
nop
repnz
add
aas
or
dec
mov
and
sbb
flds
mov
or
std
mov
sbb
add
push
test
lock
in
nop
jno
mov
ret
sbb
jno
std
shll
jg
push
inc
movsb
jmp
cmpl
shlb
mov
adc
int
push
jo
push
mov
out
inc
cmpsl
mov
inc
cmc
inc
aad
push
sbb
mov
fcmovnbe
jp
rclb
sahf
shl
jno
rorb
jg
push
sbb
sbbb
lods
lods
les
xchg
inc
inc
mov
adc
stc
push
dec
orb
adc
push
jnp
cmp
mov
dec
loope
scas
adc
mov
or
leave
addr16
xlat
pop
xor
cld
mov
imul
mov
sbb
push
mov
loop
leave
fwait
shl
js
sbb
sub
xchg
adc
xor
fs
lahf
in
dec
leave
push
add
push
scas
daa
cmc
sbb
cmpsb
pop
or
cwtl
ss
rcll
pusha
stos
fmull
mov
mov
in
xchg
sahf
sarb
arpl
dec
pop
inc
jmp
dec
pop
and
cld
movsl
jbe
xor
adc
cmp
fistpl
movsb
sub
xchg
xchg
in
cltd
mov
push
push
cmp
xor
addr16
dec
jl
add
xchg
adc
push
mov
enter
cmc
mov
jmp
pop
loope
pop
xchg
xor
cmp
nop
adc
mull
jne
pop
out
pop
add
fistpll
shrb
mov
push
out
stos
ds
mov
xchg
inc
mov
es
das
ret
pop
test
mov
xlat
scas
ss
cmp
sti
je
and
jne
jecxz
stos
push
xorb
call
pop
imulb
cs
xchg
insl
jo
out
pop
dec
sbb
ret
jns
mov
lock
ret
insl
mov
push
cmp
fsubl
xor
jns
lcall
cmc
and
xchg
test
pop
enter
pop
imul
out
leave
sbb
rclb
mov
push
push
ds
cmc
adc
lret
lods
in
das
aaa
jae
jle
int
or
cmp
push
mov
push
repnz
cwtl
outsl
and
cmp
push
pop
popl
add
and
mov
xchg
fsubl
test
pop
jecxz
cmp
mov
dec
mov
sti
shrb
push
jbe
add
mov
push
ds
mov
or
lds
push
fs
xchg
fcomi
push
arpl
neg
and
add
cmpsl
push
idivl
xor
mov
stos
stos
test
lock
lods
std
inc
inc
mov
dec
add
pushf
jae
ss
out
rorl
and
in
cmpsb
sbb
js
in
mov
fisubrs
outsl
stc
adc
jnp
sbb
dec
ret
pusha
or
inc
cs
add
add
pop
loope
scas
pusha
mov
data16
rorb
fwait
cmp
hlt
jbe
call
incl
arpl
orl
lods
mov
push
std
pop
shll
and
dec
sbb
stos
mov
xbegin
xchg
inc
sarl
sahf
jp
movsb
mov
adc
xchg
cltd
loopne
sub
or
mov
loope
repnz
mov
popf
je
cmp
dec
mov
sub
in
pop
fstpt
aas
mov
sbb
and
push
sub
jle
imul
cmc
mov
push
insl
loopne
fcmovnbe
scas
hlt
fisttpl
mov
sbb
int
das
and
jbe
mov
mov
pop
ja
fnstenv
andb
notl
inc
cli
cmp
xchg
roll
addr16
or
adc
cwtl
movsb
pop
insl
roll
mov
mov
lret
lea
push
bnd
mov
jg
pushf
clc
jno
mov
push
push
push
hlt
int
mov
push
loopne
pop
stc
cltd
ret
xchg
push
xchg
or
data16
icebp
mov
adc
mov
data16
inc
repnz
mov
adc
icebp
das
or
dec
fwait
sub
fiaddl
push
repz
jae
in
notl
and
add
push
jo
fisttps
fldt
and
dec
cmp
mov
xor
sbbb
add
mov
or
push
insl
hlt
pop
or
jno
ja
stos
cmp
andl
mov
std
fcmovnb
mov
cmp
cmp
or
inc
loopne
and
jecxz
sarb
pop
fcmovb
js
out
jno
add
dec
sbb
pop
dec
pusha
lcall
sub
ljmp
mov
mov
mov
sbb
rorl
pop
imul
mov
in
js
lock
mov
call
stos
mov
xor
inc
hlt
xor
xor
push
cmp
or
adc
into
ficomps
xchg
inc
int3
iret
jle
std
dec
test
loop
jnp
rcrl
jb
xor
jl
mov
adc
push
popf
fmuls
sub
sbb
ret
divl
or
imul
loope
outsl
inc
xor
movsl
or
lods
mov
out
int
call
icebp
clc
call
mov
fcoms
sbb
test
jecxz
ja
or
xor
nop
in
mov
sub
in
ret
push
xchg
mov
test
cmp
mov
pop
add
jl
ds
in
add
cmpsl
cltd
in
sti
push
fidivs
mov
pusha
lahf
mov
lcall
out
lock
mov
cmpsb
mov
fwait
enter
jl
leave
das
out
cmp
leave
jb
pushf
jge
lret
repnz
sbb
and
mov
push
add
jmp
cmc
test
adc
jecxz
cmc
add
les
stc
push
push
rcrl
sbb
add
loope
xor
pop
lds
clc
mov
pop
push
push
jecxz,pt
jae
add
cmc
aam
mov
jge
mov
and
mov
test
pop
hlt
add
loope
loop
and
icebp
mov
js
jmp
inc
fldcw
inc
aas
out
sub
arpl
mov
push
xor
pop
mov
adc
lahf
fsubl
iret
popa
add
push
pusha
and
scas
or
dec
dec
lret
dec
mov
add
sub
leave
lods
pushf
pop
xor
imul
mov
push
mov
stos
pop
fs
leave
cmp
call
cmpsl
clc
test
xlat
mov
adc
adc
mov
dec
sti
inc
loope
mov
sti
mov
jp
loop
sub
mov
add
inc
xchg
inc
pop
add
repnz
push
push
xor
mov
or
aaa
lret
bound
push
cmp
insb
jmp
pop
mov
into
scas
jp
je
not
cmc
mov
imul
and
sti
xchg
clc
xor
mov
loop
sbb
sbb
mov
xchg
or
movsb
adc
orl
iret
xor
pop
lret
dec
xor
and
insb
sub
or
mov
pop
scas
cmp
dec
sbb
addr16
pop
jmp
push
mov
xor
inc
stos
inc
inc
sbb
in
pop
cmp
mov
mov
cld
aad
push
outsl
icebp
jg
and
fldl
add
xchg
int3
inc
add
inc
mov
or
loopne
imul
lods
dec
in
dec
inc
mov
decl
outsl
push
jno
sbb
cmp
jb
out
test
lcall
rcrb
lods
sbb
in
imul
cld
jecxz
jbe
scas
mov
push
aad
outsl
mov
pop
push
mov
dec
lods
jnp
pushf
lahf
loop
cli
aaa
jge
cmp
hlt
jo
test
lock
xchg
mov
rcrl
sbb
cmp
test
mov
ret
inc
add
pop
sbb
andb
jg
mov
jnp
fsub
imul
xor
cmp
call
mov
dec
mov
into
pop
cmp
jbe
xchg
pop
xchg
repz
jb
push
movsb
fwait
mov
iret
test
fwait
mov
rcr
push
adc
int
stos
and
push
je
push
popf
ret
call
sub
add
inc
mov
pusha
sbb
out
inc
mov
fyl2x
xor
sti
cli
into
pop
sbb
lret
xchg
arpl
mov
negl
inc
sahf
repz
mov
outsl
outsl
mov
cld
cs
mov
cmc
pop
jmp
in
jmp
lea
pop
cmp
mov
in
mov
jbe
sub
test
jecxz
inc
jle
inc
stc
jg
jg
dec
outsl
inc
inc
fnsave
xchg
ds
test
xchg
ret
repnz
sub
sahf
cmc
fisttps
std
es
and
fidivrs
pop
sub
jl
andb
ds
loope
mov
adc
sbb
cwtl
icebp
push
mov
ss
sarb
sbb
js
jae
inc
mov
cmp
arpl
pushf
incl
inc
and
xor
or
adc
cmpsl
je
nop
and
out
clc
cmpl
mov
cmc
dec
lods
xor
push
jnp
cmp
xchg
inc
jns
pusha
cmp
in
sbb
sbb
push
xchg
mov
sti
jl
xchg
stos
jge
into
push
rolb
leave
shll
push
mov
sbb
sub
xchg
rolb
ret
cmpsb
scas
xchg
cs
in
pushf
jecxz
nop
sbb
repnz
lods
arpl
sub
sub
test
push
mov
or
lret
adc
push
fadds
addl
imul
fwait
dec
stos
in
dec
pop
jp
and
or
js
test
aam
adc
call
dec
and
mov
aas
mov
and
addr16
je
sub
jne
sbb
bound
or
dec
add
dec
subb
test
adc
lock
repnz
adc
xor
ss
fdivrl
pop
ret
and
pushf
lahf
dec
out
divl
rolb
jle
inc
cwtd
jg
lds
loop
cmpl
jae
les
pop
mov
sbb
bound
popa
mov
pop
and
push
movsl
cmp
adc
push
enter
cs
mov
sbbl
sbb
sbb
lods
fwait
mov
or
stos
stc
sub
inc
pop
mov
xor
lock
outsl
shll
push
xor
lahf
cmc
or
fists
mov
jno
dec
push
aas
add
jns
enter
dec
int
xor
sbb
cmp
pop
push
xchg
sahf
lods
jnp
insl
fbld
lock
scas
test
cs
sub
int3
shlb
in
lods
std
or
scas
mov
xlat
js
in
push
jg
lods
cmp
lret
dec
out
in
jae
data16
xor
mov
mov
jge
lret
pop
xor
mov
push
idivl
and
push
subb
idivl
scas
addr16
pop
mov
mov
xor
aaa
cmp
jmp
pop
pop
ds
inc
int
dec
cli
cmp
test
lea
pop
and
push
fdivrs
enter
push
fstl
jae
sub
mov
lods
fisubl
inc
and
shll
sbb
mov
mov
in
rclb
sbbb
test
inc
push
mov
cmpsl
movsb
lea
pop
sbb
ficompl
mov
nop
inc
sbb
add
push
bound
jne
cmpsl
mov
or
fisubrs
xlat
add
popf
aam
xor
adc
or
adcl
call
addr16
scas
les
pop
sub
jp
pusha
inc
push
out
out
stc
push
jl
pop
jp
push
pusha
data16
adc
mov
in
mov
or
xorb
push
and
or
ds
jmp
xor
cltd
outsl
jle
adc
and
fucomi
mov
push
xor
loop
mov
cmp
adc
sub
cli
fdivs
out
push
ja
aaa
push
or
test
sub
aad
nop
ja
fdivl
add
subl
sbb
outsb
lret
dec
jmp
pop
pop
push
imul
aaa
pushf
gs
push
sub
adc
push
mov
inc
lret
in
imul
cld
jno
mov
xchg
xchg
mov
hlt
mov
add
pusha
cmpsl
xor
ret
push
outsb
je
add
imul
shrb
scas
mov
fs
gs
cwtl
sub
dec
shl
xor
dec
cld
fiaddl
ret
mov
push
rcr
sahf
loop
sbb
mov
xchg
pusha
lret
cmp
cmpsl
jmp
daa
je
push
sbb
mov
loopne
pop
adc
lret
fcmovu
inc
cli
cmp
adc
push
std
adc
mov
lret
push
pop
cmp
dec
mov
push
mov
popf
inc
cwtl
mov
xchg
jne
mov
add
or
xor
pop
add
div
add
aaa
loop
into
clc
out
jae
clc
cmpl
lret
push
xor
clc
imul
dec
fs
faddl
insb
and
add
inc
mov
stos
shlb
std
jbe
sbb
mov
test
inc
xchg
or
mov
mov
add
push
cmp
ljmp
js
pop
aas
pop
aad
insl
xor
bound
or
pop
ds
xchg
rclb
inc
aad
leave
ret
sti
jne
outsl
adc
add
into
jbe
rcl
loope
in
mov
nop
push
scas
push
pop
push
mov
cmp
dec
or
pcmpeqd
lret
scas
inc
aaa
arpl
jb
das
xchg
mov
sbb
stc
sbb
or
jmp
or
fs
out
lock
addr16
sub
push
fstl
loope
mov
repz
pop
pop
sbb
sub
rolb
inc
dec
aas
sbb
les
jb
add
ljmp
push
cmp
inc
dec
call
cltd
xor
fmuls
xlat
out
xchg
or
loop
in
bound
test
movsl
xchg
jecxz
cltd
clc
cmpb
pop
inc
add
scas
mov
dec
hlt
inc
sub
adc
jecxz
in
es
jae
mov
popa
add
nop
and
cli
pop
dec
pop
bnd
adc
mov
bound
push
test
dec
pop
imul
lret
mov
adc
cwtl
aaa
sarb
xchg
pop
adc
dec
int
leave
aad
jle
imulb
int
inc
aas
xchg
sbb
out
cli
ss
or
scas
xor
repnz
call
sahf
loopne
in
rol
push
lods
mov
outsb
jno
dec
cs
aam
test
repnz
fimuls
idivb
adcb
movsl
into
ja
push
insb
popa
jl
or
mov
jb
jmp
add
xchg
mov
int
in
adc
ror
in
shll
push
dec
jo
je
cs
push
xor
mov
push
sbb
jnp
dec
lahf
fildl
pop
xchg
push
lea
xchg
out
imul
adcb
in
loopne
pop
mov
pop
sbb
push
inc
jecxz,pt
xor
test
lock
hlt
bound
and
scas
test
outsb
ret
sbbb
arpl
orl
push
insb
in
aam
out
bound
pushf
push
jae
icebp
and
shlb
clc
xchg
xchg
add
and
xchg
es
mov
and
addr16
mov
shlb
cs
cmp
mov
icebp
hlt
negl
mov
shll
cli
test
xor
or
sahf
or
std
outsl
out
rcll
sub
adc
cmp
in
mov
data16
xchg
adc
ret
pop
cmpsb
cmp
pop
aaa
push
das
adc
test
loope
mov
ret
leave
das
cmp
cmp
cmpsl
jmp
ret
jns
pop
shll
add
dec
mov
inc
insl
adc
jne
arpl
adc
mov
sti
ljmp
test
ret
inc
fstl
fwait
xor
and
out
mov
fildll
or
iret
jg
inc
pop
xchg
mov
sub
and
cmp
lret
jnp
inc
sub
push
mov
jl
pop
xlat
cmpl
stc
sub
andl
adc
cmc
adc
mov
cmpsl
sti
adc
and
mov
or
or
pop
and
mov
out
jbe
stos
in
rorl
in
stc
pusha
fistpl
push
mov
push
dec
pop
adc
sbbb
jne
cmp
gs
push
xchg
add
out
jne
xchg
and
adc
mov
aas
add
adc
mov
lea
sub
mov
lahf
jmp
icebp
out
repnz
push
push
adc
mov
and
shl
mov
pusha
xchg
jge
and
data16
push
mov
dec
mov
in
shl
xchg
pushl
lods
ret
mov
lret
idivb
push
sbbb
adc
mov
jnp
repz
orb
pop
fcmovb
xchg
mov
fcoms
pop
popl
fsubs
mov
jmp
in
push
inc
jae
cwtl
sti
push
jle
or
pop
shlb
mov
enter
faddl
addb
xor
xchg
shll
mov
pop
int
xor
jl
fcmovb
push
pop
rclb
mov
bound
pop
ffree
clc
stos
mov
and
and
loopne
imul
sti
sub
xor
push
cmpsb
ret
mov
test
es
pop
int
jmp
addb
cmp
ret
xor
shll
sub
in
sahf
icebp
cmp
negb
sub
imul
push
inc
adc
mov
mov
xor
add
mov
jo
out
pop
fstpl
bound
je
daa
add
out
nop
pop
es
fcmovnu
rorl
arpl
add
dec
pop
mov
inc
and
clc
push
sub
loop
fcom
rcrl
mov
and
mov
test
roll
xor
lods
mov
fldenv
pop
or
les
xlat
cmp
fldl
lods
push
inc
gs
loop
in
cmp
mov
and
sbb
popf
test
inc
xor
jg
jecxz
cmpsb
lret
test
jbe
mov
cwtl
push
test
inc
in
jge
iret
loope
pop
jl
repnz
stos
aas
loop
pop
pop
sbb
and
fldcw
sub
mov
sbb
adc
insb
mov
jnp
add
jmp
mov
pop
arpl
mov
inc
jno
shll
ss
movsl
sarb
jno
bound
xchg
iret
test
in
sub
pop
mov
nop
jg
mov
clc
mov
js
and
sbb
fsubr
repz
jg
dec
out
rcrb
sub
push
dec
movsl
inc
mov
fxch
mov
xor
cmp
xchg
dec
xchg
pop
test
and
ja
and
and
sub
inc
push
cld
push
xor
aam
push
push
je
mov
sbb
lods
or
mov
adc
or
shll
jbe
mov
cmp
or
ljmp
clc
adc
xor
push
mov
inc
lods
scas
add
fs
xchg
loopne
jns
scas
stos
loop
popa
lds
or
arpl
out
and
dec
adc
pop
arpl
xchg
xchg
lds
or
pop
aam
pop
or
or
sub
icebp
imul
cltd
lret
pop
out
cmp
fiaddl
push
fistl
mov
inc
out
push
das
dec
inc
gs
mov
aam
in
sub
ds
inc
mov
out
lock
jo
lea
das
stos
sbb
mov
cltd
test
vmovlpd
jge
inc
pop
aad
shrl
lea
loop
in
sbb
add
dec
xorb
push
adc
cmp
pop
fwait
sub
lahf
sti
aaa
test
jo
leave
repz
mov
imul
or
xor
into
cmp
bound
xor
fnstsw
lahf
std
imul
lret
enter
pop
pushf
pop
jne
mov
cmc
out
aad
inc
pop
add
cli
out
cli
mov
out
hlt
xlat
je
dec
add
shll
icebp
pop
mov
add
cmp
fistpll
pop
cmpsb
imull
leave
imul
je
adc
pop
and
add
and
push
xchg
push
mov
push
jle
cmp
rorb
test
adc
adc
and
test
js
xorl
pop
bound
mov
js,pt
lock
sub
jp
das
fildll
push
or
pop
xor
mov
jge
loop
icebp
cli
ja
je
leave
or
ficomps
add
mov
add
inc
ds
mov
leave
cmp
mov
cltd
int3
imul
in
shl
ret
inc
stos
mov
mov
and
stos
outsb
out
lock
nop
add
and
das
xchg
movsb
test
and
mov
scas
test
dec
mov
pushf
leave
aad
xchg
icebp
mov
pop
in
daa
push
popa
jp
call
pop
inc
xorl
pop
aam
cmc
cmp
or
jg
hlt
je
cld
out
repz
aam
cwtl
sub
and
fcomps
mov
les
mov
mov
out
sub
dec
mov
pop
lret
jb
scas
fidivs
or
mov
mov
fdivrl
imul
mov
fcmovnu
in
movsb
popa
mov
jo
popf
pop
not
push
in
incl
loop,pn
negb
cli
inc
sbb
imul
in
rcll
test
addr16
inc
xchg
fidivrl
jge
fmul
pop
xor
ds
pop
sarl
inc
into
and
mov
jne
xor
or
and
sbb
pop
lods
scas
push
mov
jnp
das
test
in
hlt
sti
adc
ljmp
and
inc
fldt
jecxz
std
xchg
mov
add
gs
and
hlt
repnz
dec
push
out
lcall
xor
cli
scas
sub
inc
push
dec
jno
rcrl
lods
jo
mov
pusha
shrb
sti
xor
cld
xchg
fldl
push
or
arpl
inc
mov
lret
mov
push
add
in
popa
loopne
negl
scas
jmp
das
mov
push
or
add
push
mov
and
inc
jg
push
jbe
mov
cmp
mov
sbb
js
cmpsl
adc
mov
push
jp
and
dec
in
test
pop
cltd
add
subl
and
fmull
add
or
mov
and
or
js
inc
pop
pop
pusha
cltd
xchg
or
jb
mov
mov
dec
mov
out
xchg
xor
dec
cmp
addr16
sahf
cs
cmpsl
shl
mov
push
xor
pop
push
in
jns
adc
xchg
push
aaa
pop
ss
or
leave
dec
es
dec
sub
push
mov
jmp
mov
mov
add
daa
int3
add
test
int3
test
sbb
stos
stos
cld
add
popf
jbe
jecxz
push
xchg
aaa
arpl
orl
or
sti
sbb
inc
dec
cwtl
xchg
sub
or
int
inc
mov
test
mov
into
lret
xor
movsl
pop
stos
xlat
sbb
fs
int
cli
cltd
pop
mov
sbbb
scas
call
sub
sub
mov
ret
pop
inc
sbb
out
loopne
jno
cli
jnp
or
or
inc
subb
dec
adc
adc
add
jo
push
imul
insb
push
cmp
js
or
fcomi
aam
into
sub
dec
dec
cmpsl
int
jmp
out
push
adc
add
cmp
mov
adc
js
mov
xchg
dec
jns
xchg
scas
jnp
hlt
leave
ljmp
cmpsl
adc
sub
icebp
push
push
sarl
xchg
mov
aam
xor
inc
rcll
notl
lds
and
jns
cmp
cmpb
jle
add
and
jp
dec
mov
aad
inc
sarb
jbe
xchg
inc
push
mov
push
rclb
xor
addr16
xchg
les
sbb
icebp
js
push
dec
cmpsl
pusha
pop
dec
lahf
fnstcw
out
push
stos
jnp
jb,pt
mov
jle
rol
inc
adc
mov
test
mov
mov
lds
insl
xchg
push
mov
sbb
cmp
pop
mov
cltd
xchg
das
push
fwait
je
cltd
stc
cwtl
sub
mov
xchg
negb
lock
dec
inc
lahf
dec
and
mov
mov
outsb
cli
fistl
inc
pop
loop
and
dec
and
and
cmpsb
addr16
xchg
or
out
jge
fs
gs
sbb
sub
int
xchg
es
mov
ss
das
sbbb
hlt
xchg
fldcw
mov
pop
bound
fs
adc
stos
mov
jmp
jno
fsubrl
or
adc
pop
push
je
push
out
movsb
jae
in
cs
adc
bound
adc
das
mov
xchg
push
mov
addr16
mov
mov
sub
ret
pop
repnz
inc
test
stc
pop
inc
ficompl
mov
jno
aas
sub
scas
push
cmpsl
push
xor
pop
in
mov
push
aaa
jecxz
xchg
push
test
xchg
mov
cmp
mov
ficompl
lds
popf
sbb
repz
sbb
mov
cmpsb
mov
lods
fldl
lret
xchg
cmp
stc
push
sbb
je
push
out
cmp
cmp
mov
adc
jo
or
pop
fnsave
xchg
sub
imull
cmpsl
jle
push
pop
rcrb
setle
icebp
push
push
inc
shlb
adc
inc
sti
shrb
push
pushf
jg
rorb
dec
mov
mov
addr16
pop
mov
ret
int3
lea
mov
jae
push
or
fsubr
cmp
pushf
lods
test
fdivs
jp
or
lcall
shll
cwtl
outsl
jb
rclb
mov
jne
mov
fbld
xor
insl
fwait
sbb
adc
ds
add
cli
lods
jl
jmp
lods
jp
into
xchg
push
xchg
sbb
pop
adc
inc
iret
xchg
sbb
in
and
scas
mov
fucomi
adcl
pusha
mov
lret
cmp
jbe
mov
sti
sahf
jg
xchg
subb
jp
lcall
mov
jmp
or
aas
pop
add
jb
adc
icebp
jl
aam
pop
in
sbb
loope
aam
int
ret
out
out
out
or
xor
hlt
in
data16
lcall
cmpsb
in
xchg
jno
outsb
pop
jge
pop
int3
and
push
mov
aad
gs
mov
add
push
sub
sahf
imul
cmc
cmp
enter
cmp
sahf
inc
scas
push
xchg
xorl
mov
fnstcw
inc
push
cmc
adc
arpl
jle
sub
mov
stos
aas
aas
cmovne
dec
xchg
aas
and
push
divl
stos
push
push
scas
into
dec
sbbb
imull
sahf
xchg
rorl
cmp
pop
push
push
adc
arpl
bound
push
lahf
adc
and
lods
int
jge
test
adc
jle
dec
in
pop
ja
loop
cmp
ljmp
inc
mov
arpl
adc
icebp
imul
test
sub
xchg
cmp
data16
pop
push
mov
scas
inc
dec
stos
out
testl
and
mov
push
into
les
inc
lods
inc
out
adc
stos
pop
fsubr
stc
jge
add
les
pop
jbe
fdiv
jo
mov
sub
scas
aaa
and
rcll
xchg
inc
ficoml
xlat
mov
xchg
ss
mov
mov
ret
iret
sub
stos
popf
in
adc
movsb
sbb
enter
jecxz
add
push
sub
inc
pop
dec
pop
out
xor
sbb
iret
lods
cltd
dec
cltd
xchg
and
lahf
std
xor
mov
inc
mov
movsb
lcall
repz
inc
lahf
xchg
dec
jno
aam
loopne
jo
xchg
push
test
cli
gs
out
repnz
int
loope
aad
inc
push
ss
in
outsb
cs
mov
pop
pop
push
and
jb
popf
inc
fldlg2
lock
out
push
sub
dec
je
stos
mov
xor
add
xchg
hlt
call
mov
inc
mov
popf
or
dec
jne
fbld
mov
cmp
std
sbbl
jbe
loope
add
mov
daa
lods
add
or
les
insb
jae
jg
loop
in
ss
insl
add
and
xchg
push
iret
jns
mull
popa
addr16
shlb
and
cwtl
ss
call
lahf
jo
jecxz
int3
and
scas
push
cld
sub
loopne
pop
loope
push
jo
add
cmc
push
and
push
int3
aad
out
jnp
ss
push
xor
gs
and
mov
xchg
leave
mov
push
popa
pushf
ljmp
xchg
stos
test
mov
cmp
and
mov
inc
shr
or
shlb
shlb
lret
addr16
dec
jp
cmpsl
fnstcw
ljmp
and
xchg
je
adc
insl
test
rolb
pop
mov
repnz
mov
loopne
insb
negl
popa
jns
mov
insb
mov
cmp
leave
push
popfw
jns
sahf
dec
or
xchg
or
mov
out
sbb
test
dec
inc
cmp
cltd
cli
jmp
jo
xor
jbe
dec
fnstsw
sbb
push
add
daa
inc
xor
mov
les
pop
pop
inc
or
sbb
mov
xchg
mov
fmull
pushf
in
fdivrl
push
insl
cli
sub
dec
mov
adc
mov
test
in
pop
lods
inc
pushf
popf
dec
dec
ds
mov
mov
cli
test
cld
mov
and
cmp
inc
iret
cmp
sub
cmp
dec
mov
fisubl
loop
je
or
pop
push
fstl
add
jnp
jle
add
lahf
ds
gs
fimull
das
jge
pop
fwait
stc
rcrb
imul
js
inc
xor
add
adc
inc
and
xor
inc
cmp
sbb
fwait
jle
jnp
lea
xchg
cli
lock
daa
pop
outsl
dec
pop
ja
je
dec
push
cmp
jmp
adc
shll
and
cmp
jg
movsb
loopne
jg
xchg
stc
mov
addr16
dec
dec
and
and
ficompl
add
push
inc
ja
cmp
cmpsb
gs
imul
mov
sbb
je
jns
clc
xor
fldl
or
sub
inc
xchg
mov
sbb
xchg
test
mov
cmpl
mov
or
testb
dec
cwtl
mov
pop
mov
xchg
mov
enter
xchg
stc
sbb
xlat
clc
negl
test
mov
add
rolb
sbb
idivl
fxch
inc
daa
in
inc
xor
test
daa
mov
inc
gs
pop
addr16
xchg
cmpl
cmp
inc
sbb
cli
mov
or
cltd
mov
xchg
cmp
and
and
jg
or
sbb
fsubrl
jecxz
or
repz
stos
xchg
js
add
pop
loopne
daa
and
sub
push
xchg
aaa
test
into
pop
jnp
xchg
dec
cmp
clc
sbb
sub
add
push
cld
sbb
test
stc
int
fildl
xchg
inc
orb
cmp
xchg
dec
push
sub
adc
pop
out
das
movsb
lret
pusha
xor
and
repz
pop
jp
sub
movsb
cli
or
jne
mov
sti
and
and
dec
xchg
mov
test
jl
xor
lret
mov
mov
xor
pop
push
inc
cli
fidivl
fwait
mov
nop
fcmovb
or
addr16
push
inc
imul
stos
lcall
xchg
mov
dec
adc
iret
sbb
jnp
loopne
jo
out
in
lds
gs
pop
xchg
lret
pop
cltd
in
stos
mov
pop
jle
and
inc
dec
addr16
and
xchg
outsb
add
xchg
push
xorb
lcall
xchg
inc
inc
rclb
cmc
sahf
movsb
aaa
sti
push
mov
clc
mov
xchg
xor
jb
pop
cmpsb
inc
aas
mov
int3
push
push
xchg
jp
mov
push
pusha
les
call
fmull
sub
xchg
mov
cmp
xlat
jns
cwtl
jnp
adc
pop
je
ret
mov
ja,pn
add
inc
mov
push
adc
addr16
xor
xor
jle
lahf
popf
shrb
mov
das
insl
push
or
out
mov
cld
mov
cmp
std
lods
stc
sub
push
cli
xchg
clc
xor
dec
mov
outsl
out
pop
jne
loopne
cwtl
out
jb
pop
pushf
insl
pop
dec
loopne
cmp
inc
inc
std
and
aas
add
adc
shr
aad
aaa
loopne
call
xchg
adc
call
sub
std
stos
pop
lahf
pop
xor
sub
leave
pop
pusha
fsts
jns
cmp
sub
add
stos
stos
test
mov
push
dec
ror
pop
vphsubbw
add
xor
ret
addr16
clc
inc
mov
xor
xchg
ret
dec
out
mov
push
cwtl
xor
lahf
and
out
sub
aaa
test
stos
sbb
addr16
aaa
mov
cmc
pusha
or
aam
stos
mov
inc
arpl
jmp
mov
xchg
mov
push
sub
push
push
movsb
test
pop
hlt
push
push
xchg
mov
call
ret
jl
pop
mov
xorb
stos
dec
pop
mov
loope
jae
inc
push
jns
rep
clc
mov
ja
and
or
mov
pop
imul
mov
inc
mov
xchg
and
or
push
je
fs
jnp
adc
pop
dec
lds
nop
cmp
outsl
shlb
jne
imul
pop
and
loop
adc
push
dec
aaa
sti
dec
das
incb
inc
bound
or
cmpsb
dec
rclb
and
add
dec
dec
fldt
cmp
call
in
dec
or
mov
mov
push
xchg
or
sbb
lret
or
dec
in
repz
cmp
pop
pop
shlb
loope
addb
lock
daa
mov
hlt
movsb
adc
add
adcl
jmp
mov
push
mov
aas
mov
jne
mov
xchg
push
mov
test
cmp
mov
addl
add
enter
cmp
pop
mov
data16
stos
mov
data16
int
inc
test
sarb
adc
xchg
xchg
mov
test
push
ret
hlt
and
pop
xchg
fprem
orb
leave
and
inc
mov
add
repnz
cmc
push
push
int3
or
mov
mov
mov
bound
cmc
jge
inc
jno
leave
fidivl
sbb
mov
cmp
repz
mov
xchg
push
clc
xlat
aas
sbb
add
out
mov
mov
add
inc
es
ljmp
jb
cmp
inc
inc
aad
cmp
xchg
inc
std
ja
add
loopne
xor
movl
mov
cmp
jle
pop
ss
sub
xor
adc
int
jnp
scas
push
xchg
repz
mov
mov
cs
cli
mov
lds
popf
pop
dec
pusha
xchg
ljmp
into
ds
dec
mov
addr16
lock
pop
sub
pop
xor
pop
subb
push
cmp
addb
dec
pop
pusha
pop
add
inc
jno
xchg
mov
ljmp
xlat
mov
dec
dec
adcb
jno
cwtl
inc
lods
test
jl
imul
stos
sbb
sub
loope
mov
out
insl
adc
iret
xor
dec
mov
out
nop
pmullw
out
jbe
mov
cld
or
cmpl
inc
ret
pop
loop
xchg
stos
test
ljmp
movsl
lret
mov
dec
mov
iret
inc
imul
mov
dec
push
xchg
outsl
sahf
out
dec
das
dec
pop
pop
lds
fdivl
int
inc
lahf
push
adc
sbb
lret
mov
mov
loop
or
fldt
stos
jle
test
fnsave
inc
ror
popf
pop
mov
mov
xchg
lea
push
pop
lcall
mov
movsb
dec
jge
test
jo
mov
sub
and
fcomip
dec
mov
jp
ja
lret
js
jg
cmc
dec
ss
das
in
sbb
jae
enter
mov
fidivl
mov
test
xlat
inc
push
aad
lods
mov
sbbb
jmp
xchg
or
jmp
cmp
stos
mov
mov
ljmp
icebp
xor
push
pop
sub
je
mov
nop
push
flds
mov
outsb
fstpl
cmpsl
ret
sub
dec
das
roll
xchg
xor
inc
sub
enter
fdivrs
ficomps
test
fst
dec
or
leave
insl
and
mov
out
repz
fiaddl
inc
mov
push
pop
notl
jge
and
mov
cld
iret
les
loop
fwait
pushf
aaa
lods
fisttps
jle
push
inc
mov
sbb
sbb
jnp
cltd
mov
je
imul
push
ret
mov
bound
js
jp
sub
sub
xor
sbb
add
ror
decb
inc
ss
xor
outsl
xchg
loope
loop
popa
dec
mov
mov
in
iret
loop
movsb
test
into
mull
jae
iret
mov
mov
mov
inc
dec
aam
out
mov
sub
xor
xchg
adc
out
popf
add
xor
sub
jmp
out
sbb
mov
dec
hlt
xchg
adc
into
dec
mov
insb
xchg
sar
dec
push
sub
scas
insb
cmp
dec
mov
out
sub
das
mov
xor
mov
out
xor
scas
dec
pop
hlt
lcall
sbb
rolb
inc
flds
loop
push
jbe
int3
mov
or
jns
ret
fcoms
imul
dec
mov
and
test
push
add
xor
mov
mov
pop
xchg
cmp
xchg
jmp
xchg
lea
in
popa
xor
cltd
adc
mov
push
cmp
aad
xchg
pop
insb
pop
bnd
vcvttsd2si
imul
mov
daa
mov
sub
test
mov
jno
mov
sar
mov
out
into
pop
dec
lea
dec
subb
lock
sbb
jle
jnp
mov
scas
dec
push
mov
adc
lods
sbb
add
int
cmpsb
lods
xchg
and
add
and
faddl
xor
repz
and
push
push
mov
daa
push
adc
add
inc
sub
push
xchg
mov
popf
mov
push
ret
push
inc
shl
sub
jne
nop
mov
mov
mov
xor
cmpsb
fidivrs
or
loope
push
cld
dec
shll
in
pushf
bound
xor
push
jg
pop
aad
push
pop
sarl
cmp
pop
popf
cmp
in
popf
imul
pop
out
mov
jns
mov
xchg
inc
aam
push
mov
ljmp
add
fdivs
jge
in
icebp
das
mull
fnsave
jno
call
int
mov
movsl
fwait
int3
sub
push
icebp
rol
inc
fadd
xor
cli
ss
clc
jg
or
mov
test
repz
add
mov
sahf
in
mov
cmp
sti
fisubrl
leave
sbb
jo
mov
sub
cmp
push
ljmp
sub
fistpl
int3
daa
movsb
mov
jl
lret
fimuls
mov
call
test
imul
sbb
outsb
cmp
push
inc
and
cltd
sub
mov
insb
mov
push
sbb
movsl
shll
and
and
sbb
mov
out
sub
xor
xchg
pop
divl
scas
into
out
rorb
fisttps
fwait
or
cld
xor
std
fsqrt
rolb
lahf
mov
jge
pop
scas
mov
pop
dec
jne
pop
leave
testl
push
call
and
test
push
jg
jp
fildll
inc
leave
push
into
imul
int3
repnz
jg
ljmp
into
out
aad
int3
sub
inc
loop
into
inc
lea
testl
loope
jbe
adc
stos
int3
inc
loop
jno
pop
ljmp
lret
dec
leave
jno
in
and
mov
dec
xlat
repnz
dec
sub
xchg
and
test
sub
jbe
test
and
or
dec
jmp
enter
cmc
mov
add
fiaddl
sub
jle
outsl
sbbb
cwtl
subl
inc
clc
push
xchg
in
xchg
bound
xchg
jmp
dec
push
sbb
mov
cltd
and
imul
mov
xlat
dec
adc
cmp
xor
jae
filds
iret
push
mov
dec
mov
or
or
stc
in
mov
mov
ficoms
xor
into
dec
mov
jns
add
and
adc
add
inc
add
arpl
jo
lds
xchg
pminsw
adc
push
mov
cli
cmp
or
add
lods
push
mov
rcl
pop
out
sbb
mov
sbbb
or
into
mov
fs
popa
lock
in
add
addb
imul
mov
sub
cs
popf
ds
inc
out
es
add
dec
imul
mov
in
les
cmp
inc
cmp
cld
fistl
addb
stos
or
cmp
addr16
sub
bound
mov
and
sbb
jo
lods
cmpb
mov
inc
adc
xchg
dec
incl
dec
adc
adc
imul
or
addb
test
das
cli
inc
out
cmp
mov
push
mov
mov
bound
jecxz
or
cmp
mov
cmp
pusha
fsubs
pandn
cmp
imul
xchg
mov
aas
test
addl
sahf
in
fimuls
roll
out
adc
cmpb
sar
jge
jmp
pop
dec
cmp
lea
clc
scas
push
xor
inc
neg
stc
push
dec
pop
in
jno
mov
or
leave
push
movsl
cmpsb
add
movsl
lods
sub
gs
sbb
pop
pop
lret
cmp
jg
jno
imul
lret
jg
movsl
sbb
rclb
mov
dec
cmp
imul
mov
mov
andl
jg
ret
cmp
or
pushf
xor
ds
rcll
jno
js
cltd
pop
mov
pusha
jecxz
mov
xor
insb
stos
lea
shlb
cltd
fmuls
push
mov
std
inc
mov
call
push
and
push
pop
shl
and
mov
cmpsb
jae
fistl
mov
out
pop
fistpll
cmp
fldenv
sarb
adc
adc
mov
and
scas
sahf
in
jge
ss
out
hlt
daa
jbe
jnp
pop
mov
bound
cld
mov
dec
xor
sub
cmp
xchg
es
fdivr
dec
add
lods
push
into
mov
std
inc
jge
sub
inc
shlb
adc
inc
jo
dec
mov
sbbb
jb
adc
shl
aas
inc
mov
jns
mov
add
xchg
js
xor
std
ja
out
int3
push
test
mov
in
inc
cs
xchg
sub
mov
movsb
movsl
adc
test
int
fidivrs
fiaddl
and
sub
mov
dec
or
shl
xchg
loope
inc
and
jecxz
dec
mov
stos
leave
bound
mov
jmp
loope
pop
or
mov
pushf
push
cmp
lea
call
enter
enter
test
mov
loop
mov
and
ret
sbb
orb
lods
xor
loop
and
jecxz
inc
jmp
ja
aad
pop
mov
push
mov
add
movsl
sti
into
cmp
andl
inc
insb
xchg
ret
sub
in
and
push
add
pop
movsb
mov
cwtl
lods
sbb
adc
inc
push
xlat
push
js,pt
stos
shrl
std
and
je
xchg
dec
jns
inc
xchg
and
pop
pop
lret
cmpsl
popf
xchg
sbb
jnp
test
out
mov
sub
pop
mov
mov
or
lahf
adc
add
pop
mov
add
and
std
cmp
lock
aaa
lret
cmp
out
add
xchg
out
scas
cmp
insb
mov
mov
cli
pop
or
and
data16
mov
cs
jp
inc
ss
out
cmpsb
pop
xchg
outsb
inc
jae
jecxz
icebp
rclb
int3
fnsave
mov
pop
mov
loop
adc
hlt
repnz
mov
movsl
loope
fdivrs
pop
sbbl
mov
mov
pusha
jne
push
fcompl
js
ficompl
dec
dec
test
bound
push
push
jbe
jbe
jg
hlt
sbb
imul
bound
mov
mov
out
popf
xor
mov
outsb
int
inc
dec
aas
lret
mov
jne
inc
in
enter
mov
push
mov
or
mov
repz
sbb
rcr
inc
cmc
aas
fidivs
cli
aaa
sub
lret
faddl
or
aas
out
movsl
pop
fstps
mov
cs
and
xor
and
pop
test
movsb
sub
sbb
inc
es
xor
shll
cld
adc
stc
sbb
int
scas
in
push
xchg
xor
or
addr16
shlb
or
or
ljmp
or
and
sbb
out
inc
call
jno
mov
mov
test
dec
enter
test
imul
pop
subl
lock
or
mov
sub
bound
xor
aad
insl
mov
pop
das
sbb
lods
sub
pop
popa
adc
lcall
outsb
sub
pop
jecxz
pop
add
xchg
rorb
shrl
in
mov
icebp
xchg
push
or
icebp
cmp
scas
popf
jne
lcall
faddl
and
aad
stos
call
mull
scas
mov
mov
iret
xchg
popa
xor
mov
xchg
outsl
lock
adc
jbe
enter
add
push
in
adc
pop
jns
das
js,pn
and
add
in
or
rcll
jmp
movsl
fstpt
and
mov
in
or
out
aam
pop
fistpll
push
call
iret
push
pusha
lea
fwait
movsb
in
cmpsl
movsb
arpl
or
push
rcrl
movsb
jp
roll
xchg
xchg
sub
popa
inc
and
test
es
dec
scas
sub
mov
in
sahf
pop
dec
or
je
pop
mov
pop
inc
xor
push
mov
sbb
mov
pop
sti
cmc
push
adc
aas
aas
add
cmp
sub
insb
cmp
fcoml
clc
dec
mov
xor
sarb
push
adc
push
mov
push
lret
sbb
pop
cld
lds
add
push
push
nop
and
or
mov
mov
lock
xchg
loop
shl
or
mov
movsl
in
orb
in
xlat
push
pop
daa
sub
in
loop
xorb
adc
and
cmp
dec
ljmp
jmp
push
push
leave
jnp
and
or
fidivrs
jno
arpl
jl
mov
inc
idiv
adc
mov
sahf
fimuls
mov
dec
test
dec
out
pop
pop
jge
jno
xor
cmpsl
xor
mov
push
repnz
cmp
lahf
ret
cmp
incl
sti
mov
lock
insb
sbb
fists
lock
sub
inc
dec
lahf
pop
mov
dec
xchg
mov
jbe
pop
jae
push
pop
pop
xor
mov
pop
fisttpll
sbb
fisubrs
mov
frstor
xchg
cli
mov
cs
mov
xor
xchg
fldenv
enter
adc
int
fidivrs
insl
xchg
loop
or
push
lret
push
in
lods
in
je
pop
pop
and
mov
mov
xchg
das
or
push
andb
sbb
sub
sahf
icebp
in
rcll
inc
pop
pop
mov
add
sub
int3
or
pop
mov
and
scas
fdivrl
dec
ftst
pusha
sbb
mov
cli
rcrb
or
push
push
lret
mov
pusha
or
mov
insb
push
cmpsl
mov
out
leave
imul
subb
test
and
sti
jno
lret
jno
jmp
in
setle
clc
ljmp
stc
lds
sbb
fnsave
mov
sbb
jmp
aad
fistps
pop
xchg
out
scas
lret
aaa
popa
rcr
ret
les
or
sbb
sbb
jns
cwtl
jb
test
and
mov
shl
xor
aam
daa
ds
push
jno
out
lret
ja
pusha
pop
ret
mov
repz
mov
repnz
add
aam
loop
data16
xor
idivl
mov
jmp
rol
nop
jne
pusha
push
inc
out
push
cmpsb
outsb
cmpsl
mov
jae
aas
ljmp
sub
dec
js
in
mov
jb
call
xchg
jnp
mov
pusha
aam
fildl
bound
les
cmp
scas
cmovp
push
lods
xchg
or
push
mov
push
pop
rcrw
subl
jae
cmp
ja
into
dec
xor
jle
mov
push
xchg
dec
lret
inc
mov
adc
cmpsl
or
loop
in
push
movsb
sub
pop
xchg
sbb
popf
inc
aas
mov
push
repz
mov
pushl
pop
aas
jno
into
pop
mov
repz
cmp
ret
add
cmp
jecxz
and
sbb
xor
pop
adc
xchg
pop
mov
stos
fs
xchg
loope
mov
iret
arpl
and
mov
es
subl
jge
and
dec
sarb
sti
jae
push
insl
outsb
pop
fnstenv
outsl
adc
adc
in
lret
and
out
push
mov
lret
inc
fisttps
movsb
emms
lods
faddl
cmp
ljmp
push
lods
jecxz
int3
jp
or
xchg
lret
inc
cwtl
add
pop
idivl
xor
mov
and
sub
adc
jns
and
scas
cmp
fmuls
rclb
or
push
and
xchg
inc
ds
popa
cmp
adcb
jp
jp
cmpsb
ja
and
xor
adc
aad
ljmp
loope
xor
xchg
add
das
std
daa
lods
stos
mov
nop
test
outsl
push
dec
shl
outsw
add
test
push
adc
mov
mov
movsl
stc
sbb
iret
imul
pop
mov
mov
mov
dec
mov
jl
push
mov
push
je
jns
and
fisubrl
mov
int3
cmp
ror
sbb
xorb
sub
fildl
das
imul
ljmp
ret
xchg
xor
test
jne
fcmove
xor
aam
cmp
shlb
aad
arpl
das
and
xchg
push
pop
cld
stc
sbb
jecxz
xchg
mov
mov
in
add
sub
popf
inc
cmc
orl
in
insb
jecxz
test
xchg
ret
mov
inc
mov
cmp
insl
xor
testl
inc
sbb
ds
adc
pop
mov
pop
mov
mov
mov
sbb
jl
xchg
or
adc
nop
aad
mov
mov
fsubs
ret
je
cmpsb
xor
or
and
cltd
mov
pusha
jmp
and
dec
jmp
scas
and
int3
mov
fwait
mov
outsb
enter
in
into
enter
xchg
repnz
leave
int
mov
icebp
test
sub
lahf
adc
repz
scas
push
test
jl
fidivrl
cmpl
or
movb
cld
jp
pop
jecxz
add
rclb
addr16
cltd
loop
adc
xchg
adc
repnz
cmp
mov
psrld
cmp
fbstp
mov
int
ja
data16
mov
out
js
fistpl
push
in
pop
out
in
fwait
inc
jbe
shl
out
fstpl
test
movsb
mov
mov
mov
int
sbb
cmp
mov
dec
jg
or
test
xor
lock
cmp
or
sbb
orb
testl
mov
add
imul
sub
and
lea
cmp
lea
stos
jp
inc
pop
out
jb
jge
xor
xchg
and
inc
insl
call
inc
ja
push
pushf
jp
test
es
adc
mov
lds
test
push
jae
test
sub
int3
or
jb
leave
sub
sbb
das
stc
cmp
shr
std
sbb
cmp
or
fimuls
loopne
sub
rcl
pop
je
push
pushf
sti
out
sbb
fstpl
mov
out
adc
shlb
xor
outsb
lods
pop
clc
add
icebp
icebp
dec
mov
sub
cmp
orb
xor
mov
inc
jno,pn
dec
mov
pop
pop
push
movsb
dec
pop
daa
adc
aam
addl
cmc
pop
stc
mov
out
fwait
or
rclb
xor
sbb
xchg
add
fildll
mov
push
outsl
mov
enter
pushf
inc
inc
lds
mov
cmpsb
sbb
int3
ss
xorb
xchg
std
aad
pop
mov
inc
mov
in
inc
roll
xchg
ss
ljmp
or
out
or
cli
dec
mov
pushl
adc
jp
test
push
test
clc
and
pminsw
nop
popa
mov
inc
ljmp
mov
xor
cltd
int
cmpsb
pop
test
subb
das
sub
inc
mov
out
dec
cli
jg
or
add
fnstcw
imul
ret
mov
aaa
bound
les
or
mov
loop
enter
mov
xchg
lds
je
jmp
pop
aad
dec
mov
cmp
jns
orl
in
rorb
aad
roll
jnp
jle
out
jae
stos
push
orl
mov
shll
cs
mov
mov
jmp
sbb
gs
jnp
jle
sub
xchg
scas
inc
lret
and
mov
pop
test
pop
dec
cmc
out
cmc
pop
mov
lahf
inc
mov
or
shr
outsb
pop
pushf
in
rcr
push
in
cli
push
add
jg
or
cltd
pop
sub
lcall
xor
mov
adc
ja
icebp
xchg
punpcklbw
js
mov
dec
lods
cmp
sbb
idivb
inc
nop
outsl
add
int
push
popf
push
out
dec
test
push
inc
insl
in
test
leave
shl
bound
sub
std
jb
je
xchg
bound
mov
lcall
xor
nop
loop
in
iret
cwtl
pop
in
and
pop
mov
push
jecxz
adc
test
mov
divl
xlat
xchg
jns
fisubrl
mov
sbb
push
mov
push
cmp
mov
rol
push
push
ja
sahf
fidivl
fidivs
mov
int
lock
in
inc
jo
cli
in
pop
cwtl
xchg
mov
shlb
jmp
jae
push
and
out
mov
jge
out
in
push
es
and
inc
xor
xchg
dec
inc
clc
test
popa
jp
clc
in
in
fistl
lret
cmpb
repnz
clc
shrb
jle
cmp
add
cli
pop
fimull
sub
jno
lock
test
and
cmp
in
popa
decb
mov
push
mov
mov
cmp
daa
adc
or
das
sub
lret
dec
stc
ljmp
pop
inc
rcl
repz
ljmp
push
or
dec
cmp
fmull
push
jns
stc
das
les
roll
ds
rcll
fwait
cmp
out
adc
adc
call
jb
jp
xchg
sub
xchg
shll
cltd
movsb
repnz
and
sub
dec
out
xchg
imulb
xor
or
add
stos
outsb
adc
pushl
call
loop
fsub
aas
inc
lret
aas
repz
out
jne
sbb
out
and
or
push
shll
jl
xlat
cmpsb
jge
mov
jp
inc
mov
mov
xchg
and
stc
aad
ja
push
push
xor
mov
pushf
add
std
pop
mov
jecxz
push
shlb
jns
cmc
xor
and
cmp
test
lret
div
out
xor
subb
pop
enter
xorb
cmp
pop
shlb
scas
mov
sahf
popa
pop
fisubrl
add
xchg
andl
jne
add
and
jne
mov
clts
cmp
add
popa
movsl
jge
subl
cmp
xor
and
inc
inc
push
jg
push
xchg
xchg
dec
mov
aaa
xor
fwait
jecxz
and
or
sbb
mov
das
testb
sahf
pop
stos
mov
imul
pop
sbbl
adc
sub
xchg
in
xchg
sbb
dec
mov
pop
add
int
out
pop
sahf
xchg
dec
pop
mov
inc
pusha
cld
push
cmp
jecxz
stc
xchg
push
lods
fcmovbe
fnstenv
xchg
sbb
dec
and
add
push
sub
push
enter
pop
adc
and
fs
xchg
xlat
dec
inc
cmp
jl
mov
dec
fsubrs
std
adc
mov
cmc
loopne
mov
ja
push
das
pop
loop
dec
jg
inc
adc
add
rcr
es
pop
fsts
mov
and
xor
fwait
cld
test
push
pop
dec
inc
cmp
test
imul
dec
cmpsl
cmpsb
pop
lds
add
push
aaa
mov
mov
addr16
fisttpll
pop
jmp
aaa
jno
scas
repnz
mov
lock
aaa
in
adc
mov
jmp
push
cmc
notb
cmpsl
or
cmp
mov
sub
ljmp
sbb
popa
ret
sub
insb
xchg
or
mov
cmpsb
shrb
jp
aad
in
dec
pop
or
dec
cmp
inc
lds
pop
das
push
mov
das
icebp
xchg
mov
sahf
push
icebp
cmp
adc
mov
fwait
stos
mov
cli
inc
cmp
arpl
lods
fmul
mov
out
jb
imul
and
in
scas
shlb
std
cwtl
jb
test
inc
inc
cmp
fsubrs
addr16
rcll
lcall
sub
out
push
popf
mov
pop
fmull
sbb
daa
leave
jge
xor
mov
jg
call
popa
sub
jecxz
xchg
add
sub
ret
xlat
cmp
fdivrl
xchg
jno
cmpsl
xor
enter
cmp
pop
sbb
in
push
mov
test
das
cmpsl
inc
dec
jge
sbb
add
jb
test
push
stc
aas
mov
das
or
mov
sub
fistpll
test
mov
pop
movsb
hlt
and
jmp
xor
push
cltd
mov
xlat
addl
jne
aad
lods
popa
inc
adc
aaa
es
jns
inc
xchg
dec
divl
dec
inc
mov
mov
repz
arpl
cmp
add
scas
sub
sub
dec
outsl
jbe
mov
repnz
flds
jp
out
cmpsl
push
adc
sub
xor
cmpb
dec
lock
movsl
xchg
sub
scas
mov
outsb
mov
push
adc
mov
jo
out
hlt
pop
fnstsw
dec
out
aaa
mov
mov
add
stc
pop
and
mov
cwtl
xor
incl
add
inc
mov
push
pop
mov
pop
movsl
adc
inc
pop
xchg
sub
or
inc
push
pop
add
bound
xchg
or
shll
jno
ljmp
sbb
cwtl
subl
lea
mov
or
mov
pusha
adc
add
and
aas
lret
ljmp
imul
ljmp
loope
sub
xchg
in
cmp
and
mov
mov
adcl
fisubrs
stc
pop
inc
push
xor
addr16
jnp
movzwl
out
sarb
aad
sub
int3
xchg
and
sub
ljmp
cmp
ss
cs
pop
bound
shrb
push
lds
push
sub
jg
adc
lods
std
std
push
and
ja
xchg
je
sbb
mov
adc
mov
dec
or
js
fbstp
adc
fsubr
pop
sub
sbb
xchg
es
sub
cs
mov
cmp
jb
push
and
xor
cmc
in
jb
jnp
sub
mov
sti
sub
out
dec
imul
mov
fwait
sbb
fsubrs
mov
mov
out
mov
rcll
leave
cmp
fst
popa
int
ret
sub
pop
in
lret
jnp
call
imul
pop
bound
ljmp
push
sub
sbb
jge
imul
stc
inc
add
adc
sub
insb
lods
fcmovnbe
inc
gs
sbb
ds
push
sti
cs
repz
fstpl
mov
call
mov
stos
int
mov
out
mov
movsl
xlat
add
adc
data16
fnstenv
test
in
push
jnp
faddp
dec
sub
mov
subb
pop
arpl
imul
jge
fld
add
in
xor
pop
test
cld
mov
shl
stos
sub
aam
test
mov
in
shl
clc
mov
mov
adc
mov
fisubs
add
mov
mov
in
jg
arpl
fsub
lcall
jbe
adc
xchg
dec
lret
repz
push
fsubl
add
push
fcmovb
lahf
fsubl
inc
cwtl
das
mov
mov
push
jecxz
push
jle
cmp
and
lcall
jle
dec
clc
clc
cwtl
daa
cmp
test
scas
and
inc
orb
dec
xchg
or
jl
into
dec
and
mov
xchg
outsl
dec
add
push
fdivr
dec
mov
mov
cmp
xor
std
mov
xchg
push
shll
scas
repnz
or
arpl
xor
das
fcomp
cltd
xchg
fs
mov
cmp
jb
les
xor
or
repnz
mov
mov
mov
cmp
ret
pusha
mov
xchg
jo
pop
cmpsb
add
pop
mov
arpl
push
mov
je
lods
movsl
mov
xor
mov
pop
aaa
xchg
jle
lods
fisttpl
and
lds
inc
addb
mov
jo
arpl
mov
add
pop
xor
fidivrl
jb
jmp
js
cvtps2pd
gs
shlb
xor
daa
lods
int
shrl
add
inc
xchg
fildll
xor
lock
sub
sbb
mov
push
adc
pop
leave
mov
or
aad
leave
jg
cmc
adc
mov
xchg
cmc
fisttpl
loope
lods
mov
icebp
xlat
mov
sub
out
test
fwait
push
out
add
fs
scas
cltd
fsubr
pop
call
xchg
xchg
cltd
lock
add
dec
sbb
xor
cmpsl
push
std
in
xchg
lods
jo
int3
scas
inc
stos
stos
push
gs
cmp
hlt
dec
sbbb
adc
mov
dec
jnp
mov
pop
out
push
push
rcll
push
inc
stos
fwait
ja
inc
pop
scas
fld
lock
lods
rcrb
push
pop
or
mov
rcrl
cmp
sub
in
pusha
cld
int
pop
sbb
out
mov
js
mov
mov
jns
dec
jmp
jbe
bound
leave
or
test
out
xlat
adc
pop
xorb
or
xchg
dec
and
push
jne
imul
fadds
adc
dec
jl
cmp
xchg
mov
popf
xorb
stc
mov
jl
movd
cmp
jns
mov
add
add
dec
lret
popf
xchg
ds
add
or
movsl
lods
jo
add
mov
divl
arpl
jae
xchg
out
aad
cwtl
lods
jns
dec
or
mov
mov
lds
rol
and
dec
aam
mov
mov
or
dec
inc
mov
std
jp
addl
add
repnz
xchg
int
dec
insb
cmc
loope
xchg
xor
call
dec
es
test
add
push
lods
daa
sbb
fstp
mov
xchg
call
outsb
ds
add
call
add
and
push
sbb
pop
icebp
or
lret
repnz
cmp
ljmp
cltd
sbb
add
push
mov
mov
lock
aad
decb
mov
sbb
jecxz
jecxz
bound
aad
fwait
xchg
ss
jns
sarl
mov
nop
push
xor
lret
or
out
sbb
repz
mov
dec
enter
pop
aam
push
setp
lret
sbb
in
xor
stc
dec
stc
jbe
and
adc
inc
cltd
or
in
inc
mov
inc
cmp
scas
testl
leave
or
addr16
es
pop
xlat
mov
in
cs
push
fistpll
pop
sbb
jl
sbb
push
sbb
adc
lret
mov
mov
movsb
or
push
rcrb
mov
push
adc
incb
lock
mov
adc
dec
movsl
mov
xchg
pop
idivb
mov
stos
sti
push
pop
xor
pop
add
repz
mov
or
jp
montmul
cmpsb
cmpl
cmp
mov
fwait
mov
mov
jle
adc
popf
in
lret
jb
adc
inc
popf
clc
sbb
daa
outsl
in
push
or
dec
out
mov
cmp
lret
xor
call
dec
and
push
les
jmp
mov
ss
jo
mov
inc
jbe
xchg
aas
mov
int3
jl
dec
adc
lahf
dec
lds
mov
loop
inc
loopne
jmp
xor
push
out
pop
ja
push
add
or
out
movsb
out
dec
aas
cmpsb
adc
jecxz
mov
daa
movsb
jg
pop
int
stos
cmpb
das
nop
add
add
fcoml
lods
jmp
jo
aas
add
xchg
cmpsb
aam
xchg
or
dec
sbb
test
aaa
or
bound
or
popa
je
pop
push
ret
lods
out
push
leave
adc
push
dec
sub
or
adc
or
mov
mov
stc
adc
test
data16
push
push
das
pop
sbb
and
sub
dec
ret
stc
jp
push
testb
pop
hlt
adc
push
sub
loope
xor
popf
sbb
test
pop
and
in
adc
repz
dec
pop
dec
pop
adc
or
fistpl
and
xlat
int
jle
sti
cmp
jecxz
je
ljmp
push
inc
dec
shlb
xor
jecxz
sub
and
imul
cwtl
jbe
cmp
out
xlat
cmp
sbb
pop
popf
jle
shlb
inc
sbb
clc
lea
enter
int3
dec
pop
adc
lods
mov
jmp
sub
stos
aad
xchg
stos
mov
ja
dec
arpl
fs
pusha
lods
cld
or
jae
in
mov
mov
out
inc
mov
mov
scas
xor
fidivs
or
add
add
cmpsb
dec
stos
imul
adc
aaa
cld
dec
nop
push
sbb
adc
push
xchg
repnz
repz
shrb
lcall
cmp
pop
and
sub
mov
inc
add
xchg
sub
inc
ljmp
pop
aad
out
adc
push
push
push
push
out
push
in
dec
lods
mov
in
push
negl
xor
mov
inc
je
mov
mov
mov
cmp
sbb
cmp
or
jns
addl
mov
mov
mov
push
mov
mov
sub
xchg
add
jae
stos
popf
push
faddl
jmp
push
ja
es
and
rorl
push
inc
adc
addl
mov
push
fistpll
lock
mov
lret
lea
aad
mov
movsb
hlt
lcall
sbb
mov
pop
out
jmp
mov
popf
rolb
jg
xlat
fisubs
jb
mov
sub
adc
hlt
cwtl
aam
lods
sahf
cmp
bound
cmp
adc
ljmp
leave
pop
int3
icebp
mov
rorl
insb
std
sarb
xor
push
loopne
mov
je
mov
popf
in
bound
lock
or
sbb
sahf
push
adc
cltd
jp
orl
dec
jecxz
jp
xchg
icebp
lea
push
testb
pop
inc
sbb
mov
dec
cmp
enter
dec
fimuls
pop
cmp
pushl
in
es
out
inc
stos
xor
add
mov
dec
mov
jp
jo
int
jo
iret
mov
pop
movb
jle
cmpsl
mov
cwtl
inc
aad
sbb
xchg
popf
negl
cld
inc
or
rclb
jl
je
dec
inc
faddp
out
mull
sub
or
xchg
in
clc
les
xchg
jns
mov
pop
int
dec
sbb
add
mov
push
or
aas
or
ret
dec
mov
and
cld
lret
sbb
cltd
outsl
push
rclb
jp
xor
pop
scas
fmul
rclb
cs
jns
jbe
pusha
fsubr
inc
jp
dec
cs
imul
dec
call
jg
cmpsb
xlat
mov
jbe
xor
adc
jge
lcall
out
lret
hlt
sub
cld
push
imul
cli
sbb
int3
int3
cltd
repz
fidivl
clc
outsb
sub
jne
nop
ljmp
fiadds
add
jno
jmp
ret
insl
loope
in
jp
lods
outsb
pop
dec
xlat
movsl
xchg
xchg
lret
sub
pop
mov
cmp
cmpsb
and
movsl
adc
mov
push
adc
dec
sti
sub
cld
mov
insb
dec
das
cmc
in
sbb
sbb
mov
sahf
loope
mov
scas
xchg
xchg
cmp
xor
negl
inc
aam
sub
jle
pushf
lahf
push
inc
icebp
gs
fisubrs
inc
pop
lods
test
inc
in
sahf
cld
inc
push
aad
dec
and
cmp
sub
mov
cmpsl
and
inc
js
repnz
stc
and
or
and
clc
push
cmp
adc
mov
or
inc
enter
pop
push
mov
popf
add
sbb
pop
adc
pop
jae
dec
jns
lcall
mov
xchg
movsl
aam
jmp
pop
push
std
adc
cli
movsl
xchg
adc
mov
fstpt
cmpsb
and
inc
jl
mov
in
cmpsb
ficoms
in
push
adc
mov
xor
cltd
jnp
mov
pop
fildll
icebp
loopne
push
jg
or
dec
sub
fnsave
sahf
xlat
sub
mov
sbb
loope
mov
dec
insb
sbb
cli
mov
scas
xor
pop
rcrl
sbb
xchg
fsubs
popl
jb
push
loop
mov
outsb
fistl
enter
push
xor
cmp
faddl
push
int3
jecxz
sbb
subb
fmuls
ficoms
jno
aad
lahf
pop
fs
and
out
clc
xlat
outsb
and
push
xor
aad
sub
jmp
test
sti
jecxz
mov
mov
bound
or
aas
fidivl
cmp
xor
test
lods
pop
jbe
mov
inc
jge
mov
xchg
xchg
xor
sbb
fiadds
xchg
add
cmp
into
pop
jp
outsl
ret
cwtl
xor
das
std
push
std
inc
mov
push
xor
or
dec
outsb
or
sbb
sbb
out
cmpb
cltd
imul
int3
decl
js
ljmp
inc
push
sub
and
imul
outsl
pop
and
and
jns
jmp
in
fildl
pop
cmp
lahf
xchg
ds
pop
movsl
in
or
and
cmp
jge
scas
mov
sbb
or
ljmp
lods
lea
sub
pop
aas
dec
dec
mov
cmp
jecxz
shrl
outsb
call
inc
jge
or
aad
test
shlb
das
test
push
iret
hlt
iret
mov
adc
xor
cmp
cmpsl
into
mov
mov
cmpsl
ret
popf
fs
adc
and
stc
add
stc
repnz
je
movb
outsb
adc
jmp
inc
dec
jb
push
mov
loope
jp
loop
mov
push
gs
pop
xor
or
scas
push
sub
dec
mov
fdivrs
fwait
out
push
mov
lds
add
sub
dec
jnp
push
fucomip
add
lahf
mov
mov
out
in
inc
popf
in
mov
adc
mov
jo
outsb
lret
out
stos
sbb
adc
addr16
mov
jecxz
aad
aas
sti
dec
aam
and
lret
into
dec
icebp
int3
mov
pusha
das
adc
mull
xchg
sbb
push
jle
pop
jge
leave
outsl
stos
inc
lahf
adc
popf
mov
divb
push
sbb
insl
clc
jns
imul
sbb
mov
sub
sub
leave
mov
popf
xchg
jnp
xorl
and
cmpsl
add
mov
cmc
sbb
cmp
lds
inc
push
push
inc
push
addb
lea
sbb
inc
push
push
mov
cmp
mov
insb
mov
popa
add
enter
aad
movsl
aad
adc
xlat
mov
test
xor
mov
into
subb
jle,pt
dec
shlb
ja
cwtl
or
xchg
ljmp
addb
push
in
push
inc
scas
cli
inc
ret
cmpsb
rcll
mov
imul
mov
fadds
mov
hlt
cs
mov
loopne
sbb
pop
and
lahf
adc
addb
leave
outsb
adc
add
mov
push
into
push
sub
hlt
popf
scas
add
pop
xor
jbe
outsb
icebp
cld
and
mov
repnz
aas
xor
loop
roll
xlat
mov
adc
xchg
mov
inc
adc
dec
pushf
xchg
dec
sbb
pop
add
leave
ret
sub
int3
movsb
push
inc
push
mov
xchg
pushl
dec
icebp
idiv
dec
iret
fnstsw
jle
cmpsl
pushl
lcall
xchg
jge
and
adc
jbe
xchg
mov
leave
addr16
mov
dec
mov
xchg
lcall
inc
mov
nop
cmp
addl
gs
bnd
loope
xchg
xchg
dec
repz
call
jns
out
jbe
je
aaa
sahf
mov
cli
cmp
inc
pop
hlt
jge
ficompl
adc
hlt
sub
mov
dec
scas
ljmp
cmp
data16
data16
aad
adc
imul
arpl
loopne
shlb
jnp
xchg
aas
mov
or
jge
mov
icebp
fcompl
and
insb
cs
pop
cmp
enter
loopne
call
mov
clc
movsl
mov
es
push
cld
ds
dec
pop
pop
out
adc
ljmp
insl
lock
inc
pop
aaa
pop
mov
mov
dec
bound
outsl
push
xchg
into
add
inc
push
mov
nop
fimuls
xchg
test
or
and
shrb
mov
adc
dec
clc
cmc
mov
inc
ficompl
cmc
inc
jbe
mov
loop
inc
les
outsl
pop
mov
leave
lahf
add
mov
add
lret
sbb
sarl
das
jle
fdivr
pop
jns
ljmp
sub
add
lods
fcmovnb
jle
cwtl
fistpl
divl
hlt
cmp
adc
test
loope
jge
mov
js
inc
pop
sub
and
jno
xor
int3
pusha
jge
add
sbb
push
scas
xor
xchg
xchg
mov
or
add
inc
ret
scas
cmp
mov
fnsave
icebp
pop
pop
fcmovb
mov
orb
push
test
mov
xor
repnz
repz
insl
out
mov
repz
sbb
jecxz
sub
push
std
cmp
insb
pusha
pushf
or
inc
mov
cmp
enter
push
xchg
pop
push
jae
lret
push
iret
add
stos
iret
cmpsb
cwtl
dec
push
cmp
movsl
push
mov
fs
outsb
divl
test
mov
cmp
or
lahf
pop
rolb
sti
pop
push
bound
push
repz
or
sbb
loop
hlt
or
and
repz
inc
xchg
mov
scas
cwtl
int3
es
dec
jl
pop
cmp
and
in
dec
jo
ret
bnd
jae
push
xchg
shlb
dec
pop
push
sbb
push
nop
push
mov
neg
push
scas
push
xor
mov
ret
popa
cmp
xchg
mov
int3
imul
xor
lcall
push
sub
xor
mov
nop
cmp
mov
sub
pop
std
test
add
adc
add
mov
mov
sub
pop
andb
cmp
inc
lds
mov
adc
in
pop
push
nop
mov
xchg
cmp
loop
pop
sarl
jns
fwait
xchg
out
loope
dec
mov
ret
and
stc
jae
jle
mov
out
cmpsl
and
or
inc
fs
roll
xor
or
int
into
mov
xor
cmp
sub
js
repz
sbb
xrelease
imul
stos
jne
movsb
or
mov
call
mov
cmp
fsubrl
repnz
aad
fstp
ror
call
pop
lahf
outsl
jns
bound
mov
dec
inc
in
orb
and
roll
divl
and
jecxz
sub
jle
outsl
lret
pushf
jge
aam
jp
f2xm1
or
sbb
mov
jno
pop
divps
mov
roll
sbb
xchg
jge
lret
pop
jmp
jl
pop
fldz
mov
dec
das
dec
bound
aaa
insb
pop
fisubrl
insb
popf
xchg
or
cld
lods
in
popa
adc
fcoms
jl
xorl
popf
daa
lahf
adc
jo
xor
daa
cltd
adc
dec
jmp
daa
in
dec
sbb
xorb
mov
xor
rorb
int3
test
psubb
or
push
clc
int3
jecxz
insb
xor
fidivs
mov
call
aaa
sub
arpl
push
adc
int
xchg
xor
leave
jae
adc
popf
cwtl
ficompl
out
cmp
in
test
or
jg
sahf
pop
pop
cmpsl
cmp
xor
clc
mov
imul
popa
out
cld
icebp
cmc
or
inc
dec
mov
cli
mov
stos
sti
ljmp
cmp
out
xchg
push
xor
movsl
mov
lods
push
std
dec
testb
test
sub
inc
mov
out
jle
mov
jnp
mov
mov
sub
xor
pop
adc
push
lret
notb
lea
pop
enter
rclb
or
test
mov
mov
roll
xchg
pop
hlt
inc
shrl
ss
sbb
mov
dec
xchg
fistps
sub
cmp
inc
inc
scas
mov
cmp
imul
pop
cltd
out
xor
aaa
test
jg
int
and
jmp
pop
mov
lods
ffree
sub
out
jecxz
and
imul
rcll
push
and
jp
leave
lock
cltd
outsl
lcall
pop
push
out
insb
cmc
addr16
inc
test
int3
mov
and
orl
dec
push
notl
cmpsb
ret
mull
and
rcrb
cmc
inc
mov
xor
subb
aaa
dec
outsl
xchg
imul
jbe
daa
js
push
pop
mov
add
fisttpll
test
test
enter
inc
jo
pop
addl
cli
cmp
in
dec
lcall
adc
inc
adc
push
aas
or
mov
push
mov
xchg
and
mov
lret
xchg
adc
rolb
mov
pusha
mov
push
or
repz
in
jns
push
mov
imul
out
dec
cs
inc
push
ljmp
mov
cmp
aaa
in
aas
adc
out
shrl
outsl
pop
roll
inc
jle
movsb
dec
mov
sbb
sarb
popf
fmull
jae
arpl
pop
cltd
pop
ret
cmp
repz
inc
fnsave
pop
iret
jg
adc
les
loop
xchg
and
jg
push
aad
stos
inc
clc
pop
xor
xlat
push
div
inc
jne
arpl
xchg
sahf
jb
inc
jmp
sub
xor
rorb
into
dec
nop
inc
xchg
cmpsl
push
into
push
sub
inc
mov
mov
and
mov
xchg
jbe
jo
mov
mov
cmp
or
or
lcall
sbb
sbb
adc
fisubl
mov
stc
int3
icebp
out
mov
or
out
seto
mov
jmp
xorl
lcall
inc
cltd
adc
clc
lea
adc
adc
mov
and
clc
daa
lock
es
inc
inc
xor
jo
rclb
xchg
std
push
dec
cmp
mull
cmp
mov
or
pop
test
std
iret
xchg
iret
out
xchg
out
int3
cmp
dec
mov
push
adc
pop
inc
cli
push
jb
aad
insb
popa
ljmp
sbb
pusha
testl
out
movsb
mov
sub
or
xchg
jmp
pop
mov
addr16
js
cmp
insb
sahf
jmp
or
fsubrp
cli
mov
mov
mov
push
lods
cmp
xor
test
mov
enter
xchg
sbb
jo
jae
mov
aad
test
inc
in
and
mov
push
fimull
out
rcl
hlt
and
push
or
loopne
jb
push
ja
repnz
rcr
sub
icebp
std
push
ds
out
push
or
icebp
roll
mov
inc
pop
test
les
movsl
rcr
shll
adc
xchg
mov
ret
jge
out
xchg
pushf
push
mov
in
xor
inc
out
inc
das
test
inc
fiaddl
mov
fwait
das
xchg
cmpsl
push
or
add
daa
cltd
movsl
stc
sbb
arpl
fcoml
and
lods
insb
xor
js
decb
iret
or
and
mov
std
lods
mov
clc
xlat
dec
sahf
mov
bound
inc
js
pop
cmp
stos
xchg
mov
and
test
aas
fwait
sub
jmp
ror
xor
mov
mov
jp
ret
xchg
in
cmp
pop
mov
pushf
iret
bound
lds
jo
mov
and
lods
pop
xchg
dec
pop
adc
in
outsb
sbb
inc
mov
call
and
arpl
ds
jg
cmpsl
xor
mov
sbb
out
sbb
cltd
jne
or
mov
loopne
and
popa
insb
xor
xchg
scas
icebp
dec
scas
fwait
jp
dec
decb
stos
loop
imul
aas
pop
adc
cmp
push
push
cld
daa
jb
dec
xchg
fsubr
mov
inc
mov
shlb
mov
and
mov
rcrb
daa
inc
jnp
rcll
sub
rcl
ja
stos
nop
push
push
cli
ficoms
inc
aaa
or
jmp
xor
out
bound
adcb
insl
xor
mov
test
pusha
int
cmp
jmp
or
and
add
imul
iret
jnp
insb
adc
adc
cmp
inc
fistps
mov
jno
xor
and
xlat
push
inc
sahf
pop
pop
inc
pop
mov
sbb
js
pop
outsl
add
clc
lcall
arpl
sub
jb
das
je
je
push
dec
adc
test
xor
pop
lock
clc
cmpsb
inc
pop
inc
dec
xor
sbb
or
insl
ja
aas
pop
cli
sub
and
jp
push
xchg
fidivrl
jae
mov
push
test
xchg
jo
pop
out
lods
in
jne
cmpsb
or
mov
hlt
dec
dec
jg
vmwrite
inc
leave
js
sar
mov
dec
mov
loope
pop
adc
test
cmp
fs
popf
push
lods
push
lea
js
scas
lds
add
or
push
lock
enter
sbb
and
gs
out
call
push
adc
dec
sub
inc
rcll
push
mov
mov
flds
int3
loop
into
and
daa
and
sbb
in
push
outsl
inc
roll
and
add
fidivrs
out
push
out
enter
movsl
sbb
inc
xchg
pop
outsl
fs
fisttpll
xor
and
popa
jns
mov
push
or
shl
jne
xchg
inc
fs
adc
imul
xchg
lret
ds
xchg
xchg
outsl
push
pusha
lock
dec
arpl
xor
ret
pop
clc
test
std
and
ss
add
mov
test
mov
sahf
sub
das
clc
movsl
adc
xlat
mov
lods
pop
mov
mov
fisttpll
ljmp
in
push
loope
pop
adc
sti
jle
or
xchg
xor
jno
pusha
shrl
jmp
lret
cs
xchg
mov
adc
and
mov
ds
pop
cmpl
movsl
adc
sbb
lods
dec
in
outsb
shlb
sub
cmp
mov
and
and
fmuls
dec
or
call
and
mov
ret
in
and
pop
aaa
xor
div
jbe
inc
ret
nop
fnstsw
cld
push
out
push
jo
in
mov
mov
add
fistps
cmp
stos
out
mov
inc
in
lret
xchg
shrb
add
pop
add
mov
scas
push
adc
inc
push
scas
adc
loope
bound
push
shrb
mov
outsl
jne
and
mov
cmpsb
xchg
push
jnp
push
int
jl
testb
clc
sub
pusha
aad
xor
shl
cli
add
mov
bound
jno
jmp
sub
sbbb
push
and
push
sub
mov
mov
xorl
mov
or
jecxz
xlat
cmp
sub
or
scas
xchg
and
fisttpll
les
cmp
in
test
sahf
mov
popa
pop
aad
xchg
and
imul
icebp
fucomp
lret
inc
cmp
push
xor
xor
mov
mov
push
pushf
pop
sbb
lret
push
shrb
nop
out
mov
xchg
push
arpl
pop
xor
inc
les
lahf
mov
sti
loope
daa
lea
mov
or
dec
insb
lea
sub
cmpsb
dec
and
cwtl
mov
hlt
stos
dec
cmp
dec
shrd
and
dec
sti
sub
out
pop
pop
mov
cmp
lret
out
mov
mov
loope
repz
nop
xchg
xor
es
mov
sub
and
jns
jne
jbe
pop
shlb
mov
or
jp
cltd
inc
vmwrite
mov
sahf
aam
push
cmp
pop
sbb
mov
mov
test
cmp
in
rcr
lock
add
sarb
jmp
adc
cmp
into
sbb
and
dec
sti
fs
les
push
jae
ss
inc
jmp
xor
clc
cmp
cs
leave
lock
bound
mov
inc
loopne
pop
test
xchg
fmul
dec
push
push
cmp
inc
mov
in
add
cwtl
out
mov
cmpsl
movb
cmp
aaa
push
orl
add
out
xchg
pop
cli
xlat
add
pop
xlat
adc
xchg
push
mov
ret
xchg
dec
mov
push
les
inc
insl
lock
push
fwait
cmp
test
int3
lock
add
ss
shlb
mov
aas
daa
ret
shlb
inc
jnp
inc
lcall
inc
sbb
jbe
mov
movsb
out
adc
pushf
dec
jmp
dec
insl
mov
xchg
rcrl
mov
pop
cmp
sahf
frstor
movsl
fldcw
pop
cmp
xor
add
lods
mov
sbb
fisubs
mov
lahf
fildl
sbb
pop
jb
sub
cmp
push
xorb
or
lock
xchg
arpl
adc
push
cmp
sbb
xchg
jg
imul
movsl
fnsave
lcall
add
adc
in
mov
je
push
shrb
adc
mov
cld
adc
adc
mov
movsl
xchg
and
inc
and
jg
mov
adc
xor
jmp
and
scas
mov
stc
repnz
je
sub
push
cmp
int
push
data16
iret
fcomps
xchg
cmpsl
leave
dec
or
mov
mov
addr16
out
ljmp
push
add
jl
push
testb
rcrl
cld
call
dec
push
mov
mov
push
fistps
sbb
dec
lahf
xchg
movsl
pop
imul
xchg
aaa
ds
jno
pop
xchg
push
movsl
mov
mov
pop
cmp
xor
mov
testl
xor
ja
or
repz
insl
clc
int3
add
sbb
pop
mov
push
scas
push
cs
repz
mov
inc
mov
xor
data16
xor
aam
ret
int
data16
iret
movsb
fs
mov
lock
sub
movsb
test
pop
mov
data16
mov
xchg
ds
pusha
mov
jg
shl
jge
mov
add
nop
adc
or
daa
inc
and
in
inc
sbb
jb
xor
dec
xchg
scas
imul
adc
dec
imul
bound
mov
jg
xchg
jge
incb
sahf
mov
inc
sarb
mov
mov
ret
xchg
xchg
das
mov
adc
push
fisubrs
and
sub
rcrl
jbe
daa
ficoms
xchg
push
or
lds
xchg
cmp
mov
mov
enter
push
nop
dec
stc
sbb
jne
mov
mov
repz
lea
mov
jnp
gs
lret
pop
mov
jecxz
adc
jmp
jae
cmp
lods
mov
pop
push
aam
mov
out
call
push
xchg
imul
loopne
sbb
push
sbb
fs
mov
lock
mov
mov
scas
pusha
clc
or
and
mov
push
xlat
dec
in
adc
popa
pop
aad
jl
jo
mov
lret
lock
sbb
adc
xchg
cltd
push
in
and
sub
mov
test
fdivs
adc
push
es
mov
and
ds
xchg
jg
dec
shll
dec
lods
pop
outsb
push
fisubs
in
sbb
lcall
xchg
dec
sub
sbb
xor
adcb
cmp
xor
lahf
inc
adc
ret
sar
shlb
push
sub
sbb
rcrb
push
cmp
xor
mov
sub
call
push
mov
shr
stos
sub
sub
push
adc
adc
dec
jae
dec
cmpsb
cmp
in
pop
pop
and
mov
jbe
loope
scas
je
in
js
add
mov
inc
jne
mov
es
jns
daa
mov
mov
pop
jmp
in
in
es
add
cmc
lcall
push
fdivl
fcomps
cli
cmp
test
pop
dec
mov
sub
jmp
dec
int3
xchg
imul
lahf
mov
sbb
cmpsl
adc
ret
je
stc
ucomiss
push
ret
ds
and
lods
inc
daa
push
inc
insl
sub
mov
inc
mov
in
into
in
add
dec
popa
jb
push
dec
jae
outsl
jbe
popf
mov
jae
sub
movb
test
shlb
xchg
and
bswap
add
rolb
inc
pcmpeqb
fcomps
aas
lods
xchg
add
lea
mov
js
movsl
dec
cmp
incl
jp
out
js
adc
outsb
ret
idivb
pop
xor
and
pop
or
ret
add
jl
or
or
fisubl
cmp
stos
push
pop
mov
stos
jl
inc
lock
add
mov
enter
repnz
mov
repz
je
addb
xchg
into
pushf
loop
sahf
adc
push
popf
div
pop
notl
cmp
clc
ljmp
xor
adc
lock
mov
jae
sub
nop
sbb
loop
inc
gs
mov
sub
jne
xchg
push
pop
pop
fimuls
shll
in
add
addr16
es
jne
lods
add
cmp
xchg
ficoms
and
out
insb
aam
mov
scas
js
std
lret
sbb
cs
dec
inc
je
push
jmp
sarb
cmp
inc
lock
nop
loope
leave
inc
jge,pt
je
nop
or
xor
cmp
mov
rcr
push
jmp
idivl
ret
imul
jp
add
xchg
mov
mov
mov
dec
ss
mov
aaa
shll
out
je
pop
push
stos
sti
sub
xchg
enter
fld
pop
cmpsb
es
dec
sbb
loopne
into
out
data16
push
jge
jnp
mov
inc
imul
jp
imul
aas
cmpsb
arpl
cmpsl
nop
pop
xlat
push
sti
jb
add
lea
mov
iret
js
cltd
shrb
aas
cli
add
addr16
push
mov
aaa
lea
sub
jle
inc
inc
mov
sub
jl
mov
sbb
out
xor
fcompl
adc
insl
addl
sub
into
push
dec
mov
ds
dec
mov
xor
lcall
jae
fwait
pop
enter
test
cs
cmpsb
push
and
add
jae
mov
push
jns
mov
and
fnstenv
dec
ret
lock
inc
cli
sahf
imull
fcoms
aam
lock
xchg
mov
mov
fsubrl
lock
call
mov
jns
push
cltd
imull
or
popf
rolb
jp
filds
pop
imul
cld
lahf
ljmp
mov
mov
cmc
lahf
rol
outsb
xlat
loopne
push
jge
fldenv
fildl
fnstsw
mulb
inc
xchg
rcll
nop
push
jp
dec
jp
push
xor
add
dec
lahf
fisttpl
xchg
push
pop
das
outsb
mov
cmpsb
shlb
out
mov
imul
mov
std
dec
cltd
mov
pop
fadd
movsl
lret
lods
inc
lret
push
jae
adc
push
aas
mov
pushf
in
push
push
sarb
mov
mov
mov
push
push
movsl
xchg
cli
mov
stos
ljmp
adc
push
into
pushf
pop
in
mov
or
mov
mov
sbb
scas
dec
pop
xchg
out
dec
or
push
out
out
scas
bound
arpl
mov
cmpsl
xchg
out
jle
mov
inc
push
xchg
ss
jae
pusha
lahf
adc
lahf
pop
fnstcw
jae
rol
push
inc
mov
and
sub
dec
sbb
movsb
jae
mov
dec
test
lret
inc
inc
enter
push
pop
or
add
pop
xchg
data16
stos
jo
mulb
sbb
pop
leave
add
jmp
sub
orl
jns
scas
sbb
jge
fadds
cmp
movsl
mov
xor
ljmp
push
sarb
cmp
jecxz
mov
add
shl
fxch
xchg
in
sbb
mov
mov
icebp
ja
sahf
arpl
pop
icebp
divb
test
adcl
cli
in
adc
iret
pop
or
xchg
mov
mov
aaa
sub
std
popa
fcompl
sub
stc
mov
loope
add
mov
pop
in
stc
jg
fdivrs
andb
call
sub
dec
jbe
xor
cwtl
push
mov
push
cmp
in
negb
fldt
shrb
xor
and
rcrl
lret
and
popf
push
sbb
mov
ljmp
mov
int3
ss
inc
in
adc
cmpsb
dec
cld
pusha
push
push
and
repz
mov
pusha
aam
fildl
lods
adc
clc
push
inc
movsl
mov
insl
mov
arpl
dec
pop
pop
push
stc
orl
xor
arpl
imul
mov
mov
push
mov
mov
mov
mov
addr16
adc
test
movsb
comiss
lcall
xchg
shll
imul
pushf
sbb
cmp
push
adc
into
jne
inc
cwtl
mov
ss
nop
mov
push
fsubr
leave
pop
shlb
lahf
inc
std
fidivrl
and
sub
mov
insl
cwtl
sub
xor
dec
mov
and
jbe
imul
sahf
aam
mov
daa
cli
inc
jl
out
sub
inc
jle
dec
push
push
xchg
hlt
pusha
repz
xor
or
cwtl
sub
scas
maskmovq
xor
bound
lods
mov
bound
fdivrl
mov
sbb
adc
jmp
inc
nop
adc
mov
jp
inc
pop
fstpl
aaa
jecxz
out
aaa
stos
stos
jno
pop
sbb
jecxz
iret
int
xchg
pop
dec
cltd
cld
sub
hlt
stc
addb
outsl
fimuls
cltd
or
cmp
nop
dec
pop
push
lods
jbe
ficoml
movsb
adcl
xorb
xor
lcall
sbbl
scas
call
loop
scas
imull
add
arpl
sub
scas
fs
nop
mov
lds
js
popf
jbe
je
dec
xchg
cmc
enter
push
inc
movsb
pop
mov
add
push
test
nop
or
shll
ja
add
in
divl
mov
movsl
xchg
out
ja
mov
push
das
loope
push
jbe
std
andb
or
das
and
test
push
stos
jbe
sbb
loopne
in
push
jmp
imul
in
test
add
rorl
cmp
xor
je
sbb
lock
adc
jb
xor
je
loopne
jmp
pushf
or
roll
lds
cmovno
mov
mov
pop
sub
mov
fwait
xchg
sbb
or
daa
lods
lcall
adc
inc
mov
lock
mov
shr
mov
mov
lret
fwait
mov
leave
sub
dec
pushf
and
dec
test
out
in
stc
lahf
es
sti
cld
daa
add
pmuludq
dec
fidivrs
xchg
loope
lahf
mov
cmp
mov
dec
mov
jecxz
inc
and
clc
or
jmp
roll
or
les
pop
dec
gs
adc
jb
dec
jnp
ret
jge,pt
dec
xor
leave
scas
xchg
sbb
fcoml
mov
pop
imul
out
push
notb
jae
mov
cld
fdiv
lret
mov
push
clc
xchg
dec
test
push
xchg
sbb
out
pusha
jne
push
fidivl
repnz
dec
loope
inc
xor
cmpsb
add
mov
push
movsl
xchg
mov
inc
and
adc
inc
dec
pop
jo
dec
pop
mov
fcom
mov
popf
xchg
mov
mov
xchg
test
add
repnz
js
shl
lret
icebp
pop
fldcw
inc
xor
push
lea
ret
mov
lret
aas
loop
sbb
lock
cmc
lods
mov
push
fbld
jmp
push
mov
aaa
mov
push
dec
outsl
xchg
xchg
dec
pop
xlat
mov
pop
push
xor
out
sub
inc
pop
dec
idivl
cmc
or
pusha
pop
push
push
sub
sub
cs
xchg
jl
xorl
adc
jo
scas
loopne
and
inc
jns
jl
lock
icebp
cmp
push
fimuls
rclb
inc
cmp
xor
cmpsb
scas
hlt
jl
inc
mov
pop
sub
inc
or
fildl
jecxz
sub
xchg
sbb
pop
jl
sbb
popa
out
push
mov
lods
pop
jne
sahf
sbbb
adc
cmpb
cmpsl
pop
inc
pop
sub
cmp
inc
adc
inc
fs
sti
and
mov
dec
and
xchg
arpl
cmp
xor
mov
mov
sti
push
cmpsb
insl
dec
test
lods
roll
mov
pop
inc
js
xor
mov
pop
movsb
loopne
outsl
xchg
movsb
cmp
cmp
fldt
pop
hlt
mov
stos
jmp
flds
lods
cmc
pushf
push
xor
iret
out
jp
in
mov
leave
mov
jp
pop
out
add
js
aam
sub
xchg
mov
xor
stc
xor
lcall
std
and
popf
jl
repz
ja
ja
iret
stos
out
loopne
pop
jle
lods
into
sarl
sub
mov
insl
xchg
jb
inc
cltd
xor
sbb
aaa
or
or
mov
adc
pop
mov
outsb
push
mov
mov
arpl
or
pop
xorb
test
adc
cli
adc
cmp
cltd
mov
or
lock
mov
mov
push
aam
arpl
subl
inc
mov
lea
shrl
stos
movsl
cmp
sub
into
sbb
rcr
int3
xor
mov
push
push
jnp
push
imul
jmp
add
xchg
dec
in
shll
lods
lret
xchg
jle
mov
jp
sti
out
notl
repnz
clc
enter
or
xor
aas
push
int3
in
sbb
and
inc
push
aam
cmp
aad
rorl
int3
sarl
popf
into
jae
mov
sbb
int3
es
cmp
adc
jmp
jb
add
outsl
push
sub
push
leave
xchg
insb
add
bound
sbbl
add
lcall
ja
push
insb
loope
mov
scas
jo
mov
int
stos
add
pop
sub
mov
and
je
pop
mov
mov
cmp
adc
cmp
add
sti
subb
in
fsubr
and
sbb
shl
dec
lods
popf
ljmp
lret
cmpsl
xchg
and
decb
andl
ret
int3
mov
cmpsl
jle
sub
cmp
lock
fdivrs
or
dec
mov
repnz
inc
add
popa
loopne
fisttps
cmp
flds
mov
pop
inc
push
mov
les
movsl
and
scas
add
pop
push
mov
push
divl
insl
notb
insb
fldt
icebp
stos
add
pop
dec
or
int
ja
add
or
xchg
push
movsb
inc
sbb
ret
cmpsl
sub
cwtl
pop
add
fildl
inc
stos
scas
pop
rorl
sbb
inc
adc
xor
add
cmc
lea
push
lahf
mov
insl
mov
cmp
aam
xor
subb
pusha
aas
or
ret
pop
lcall
iret
leave
mov
mov
push
inc
cli
or
movsb
sahf
add
insb
gs
and
data16
or
aam
loope
xchg
inc
mov
cmc
adc
xor
sbb
xor
mov
adcl
pushf
gs
xor
jg
aam
cmpsl
outsl
push
inc
das
popf
cmpsl
int
mov
pop
repz
repz
jg
aam
dec
popf
xor
enter
xor
cmp
xor
jno
test
xor
mov
xchg
xor
cmp
jecxz
aaa
rcl
cmp
loop
push
pop
sbb
cmp
sbb
and
fsub
inc
aaa
in
clc
push
out
xchg
out
aas
fldcw
cltd
test
pop
add
lods
pop
scas
pop
adc
into
inc
cmp
pop
in
out
inc
jne
xchg
pop
or
xor
popa
push
xor
sub
sub
stos
outsl
incl
or
stos
loopne
dec
out
mov
jle
push
xlat
pop
scas
daa
and
fwait
mov
lock
jl
inc
std
xchg
nop
repz
dec
jae
jge
daa
movsl
pop
pop
mov
mov
pop
push
cmp
scas
mov
inc
ljmp
pop
jge
les
leave
int3
cs
push
fwait
into
repnz
mov
mov
mov
push
mov
dec
push
mov
add
fldcw
ss
imul
insl
xor
enter
inc
or
cmpsb
xor
aam
popf
jno
mov
lds
in
push
push
pop
push
orb
push
jge
jbe
xchg
jbe
ljmp
sahf
testl
call
xchg
inc
sub
loopne,pn
and
push
ja
out
or
cmp
sub
jae
int
sbb
nop
dec
shll
xchg
pop
push
mov
and
aaa
dec
cwtl
xchg
or
ljmp
xlat
pop
shll
sub
mov
add
jno
cmovp
out
jne
dec
dec
sbb
test
inc
je
outsl
imul
out
loopne
sub
xchg
pop
push
add
mov
bound
xchg
dec
test
cmpsl
pop
lret
popf
lds
pop
fnstsw
rol
addr16
dec
stos
insb
shlb
stos
add
mov
add
mov
jnp
jae
test
and
ljmp
push
adc
loop
dec
mov
jmp
imul
sti
dec
daa
xchg
push
rcrl
jp
jae
jg
pop
jne
mov
sub
out
xor
jb
das
rorl
fcoms
scas
lods
orb
push
xor
popa
das
push
push
bound
inc
std
fdivs
pop
sub
addr16
xadd
pop
pop
xor
dec
pop
pop
sbb
test
aaa
movsb
add
add
cmp
xor
hlt
or
pop
xchg
aaa
push
pop
inc
push
fnsave
inc
sub
sub
mov
dec
insl
repz
mov
out
push
sub
mov
sbb
xchg
out
sti
and
cmpsl
in
adc
cs
cmc
aaa
jmp
cmp
sbb
push
inc
mov
adc
leave
add
fdivrl
inc
or
jl
pop
test
ret
arpl
in
dec
add
mov
movsl
insl
jl
cmp
ss
jle
cmpb
lds
fsubrp
mov
dec
imul
pop
fbld
int
leave
mov
xchg
ret
imull
lcall
jns
hlt
xchg
mov
pop
out
pop
shrl
aaa
xlat
push
mov
movsb
sbb
stos
and
ja
fabs
sbb
jmp
out
loopw
add
test
push
adc
lret
loopne
in
xchg
stc
and
mov
mov
aam
aad
adc
in
lahf
push
repz
inc
fwait
xchg
aaa
lods
mov
and
loope
xor
and
inc
xorl
cli
dec
add
push
adc
xor
xor
jp
outsb
out
cmpsb
add
sub
ja
sbb
iret
inc
inc
lock
aaa
mov
cmp
popa
push
stos
pop
adc
lret
lcall
xchg
jo
push
jno
mov
mov
push
icebp
or
mov
rcrb
xlat
and
fcoml
push
fidivrs
add
dec
pop
pop
xchg
dec
ret
mov
add
jae
mov
ja
es
pop
jno
inc
outsl
fcmovb
xchg
ret
call
loope
sbb
jb
dec
jp
sti
jae
mov
lret
shl
xchg
adc
lret
pop
sub
xor
cmp
mov
inc
pop
shl
loopne
xor
enter
jmp
and
in
movsb
out
insl
int3
inc
mov
sub
ds
lret
movsl
push
push
test
cmp
lods
xchg
pushf
push
mov
int
mov
xor
stc
or
stos
xor
ss
test
loop
movsb
push
lret
add
sub
sbb
in
je
adc
pusha
sbb
xor
cmc
filds
pop
pop
repnz
lcall
aas
lds
dec
sarb
pop
stc
push
adc
xchg
cmp
xchg
insl
xchg
sarl
xor
xchg
cmp
arpl
aam
xor
movsl
jl
xor
add
stos
jo
icebp
aaa
cmpsl
ds
stos
xchg
dec
fisttps
leave
xor
mov
fcom
add
dec
add
and
adc
fisubs
lock
movsl
sbb
aam
addr16
sbb
ljmp
xorl
fnstcw
dec
pushf
rorb
jp
cwtl
pop
ret
insl
cmp
loop
scas
xor
jmp
adc
add
into
xor
fdiv
lret
adc
and
sbb
imul
jb
sbb
movsl
cmp
out
icebp
adc
lret
and
mov
scas
pop
in
push
sarl
cmp
inc
clc
cld
insb
movsb
imul
unpckhps
cmp
push
sbb
and
loope
stc
insl
lret
xor
lock
xchg
mov
xor
inc
dec
and
test
shll
ret
jl
lret
mov
pop
les
cltd
xchg
fisubrl
inc
sbb
push
jno
mov
orl
push
mov
scas
mov
and
cmpsl
ror
shlb
divl
out
test
scas
pop
out
cmp
and
xor
inc
push
and
test
inc
jns
dec
push
jne
mov
popa
cmp
pushf
std
dec
mov
out
psubsw
arpl
fimull
push
scas
adc
and
aad
jg
inc
dec
fidivl
test
and
pop
pop
or
cs
pop
ljmp
xchg
xchg
pushf
std
orl
jp
mov
adc
in
add
mov
xchg
push
divl
sahf
cmp
cld
test
add
adc
inc
daa
xlat
adc
leave
mov
xchg
add
nop
and
jecxz
subl
jg
dec
sbb
pop
std
cmp
push
mov
adc
testl
ljmp
mov
movsl
jmp
jge
jbe
sub
decl
mov
inc
fcoml
pop
scas
clc
loope
mull
int
into
sub
dec
pushl
fildll
xchg
aam
pop
gs
jbe
pop
mov
xor
and
testl
xchg
cmp
mov
lcall
aad
movsl
mov
jbe
mov
lods
icebp
push
dec
loope
or
test
fsubr
mov
and
pop
ss
pop
inc
sbb
pop
loope
test
andb
lahf
push
push
into
mov
adc
mov
push
mov
dec
mov
fwait
repz
or
rcrb
adc
repz
popf
push
jnp
dec
fildll
out
push
ja
inc
fsubl
shlb
xchg
push
clc
negb
inc
out
push
lcall
or
push
mov
dec
jbe
push
loopne
pop
ja
xchg
add
cmp
imul
push
dec
xor
add
push
loopne
andl
sbb
ja
or
jne
or
mov
ret
xlat
pop
and
cs
orl
or
xorb
insb
shll
shrb
out
mov
or
pop
fdivrs
inc
repz
sbb
xor
dec
and
mov
pushf
outsl
or
sub
outsb
repnz
ljmp
inc
movsb
aas
lds
and
pop
rcrb
jno
sub
js
leave
mov
stos
shufps
dec
xchg
dec
pop
add
pop
adc
mov
shll
cmpsl
pushf
imul
in
fcmovne
mov
inc
cmp
insl
stos
or
adc
nop
or
sub
mov
push
test
sub
lods
dec
dec
shr
jl
loop
fucomi
fwait
daa
lock
int
xor
add
and
int
lods
in
loopne
cmp
test
addr16
outsl
push
lcall
data16
cmpsb
push
lahf
sub
fwait
sub
inc
lret
xor
push
testb
dec
push
xor
cs
mov
mov
pop
push
jno
inc
and
pop
xlat
and
xor
lea
sbb
mov
jb
test
cld
push
lret
push
decl
jp
push
xchg
subb
fimuls
mov
jg
and
xor
push
jno
cwtl
jmp
add
xor
das
adc
adc
cmpsb
fwait
mov
add
xor
inc
mov
mov
out
jp
addl
out
or
in
cwtl
sub
jle
cmp
jmp
or
ss
inc
inc
ss
xchg
and
sbb
outsl
mov
jmp
lds
and
and
lods
insb
cmp
pusha
lret
in
gs
add
jno
sub
out
mov
repnz
cmp
fdivrl
jne
dec
jge
mov
sub
sub
adc
xchg
test
imul
pop
repnz
std
mov
xlat
mov
sub
rolb
mov
xchg
int3
pop
lock
xlat
xchg
in
jae
inc
inc
jnp
mov
aam
fildl
nop
lret
daa
add
cmpsl
adc
push
stos
pushf
jle
xor
mov
cmp
cs
mov
lods
inc
pusha
xor
or
xor
xchg
pusha
or
shrb
js
stc
testl
hlt
xchg
xchg
imul
je
data16
clc
aam
mov
xor
rcrl
jno
loop
out
cmp
outsl
push
lcall
fistpll
fwait
jae
jmp
pop
ds
aam
and
popf
loop
jbe,pt
aaa
loopne
xchg
add
and
xchg
repz
les
add
out
cmp
lret
cmp
test
jmp
mov
loopne
mov
mov
aas
jnp
xlat
imul
push
testb
out
xor
pop
into
push
cmp
inc
mov
push
sub
out
insb
inc
sub
xchg
fadds
lret
arpl
inc
scas
sbb
inc
adc
data16
popf
sbb
jo
nop
rol
mov
inc
subb
cmpsl
popa
adc
shlb
scas
daa
or
mov
mov
or
mov
xchg
xchg
imul
js
std
xchg
cwtl
out
je
jo
xor
dec
inc
test
xor
jl
jmp
sbb
fcompl
xchg
jmp
push
imul
repz
mov
movsl
push
mov
xchg
adc
pop
popa
data16
pop
mov
in
scas
adc
daa
cltd
fwait
mov
sti
je
and
in
aaa
mov
cmp
mov
sub
adc
or
inc
mov
shrl
jae
shlb
cs
xor
in
mov
je
fisubrs
and
loope
aas
add
stos
js
mov
adc
adc
mov
dec
or
pop
mov
lcall
push
js
aas
inc
das
jnp
adc
outsl
or
inc
mov
outsl
adc
and
pusha
vcvttpd2dqy
pop
jp
xchg
mov
cmp
mov
daa
cmpsb
jle
into
cwtl
adc
sub
lods
outsl
in
mov
pop
xchg
sub
rorb
mov
popa
stc
sahf
inc
data16
mov
xor
push
int3
jmp
pop
add
ja
fnstcw
push
repz
or
cld
adc
push
sbb
cli
adc
movl
cmp
lahf
jp
popf
fwait
push
pushf
or
mov
jae
aam
jle
out
mov
mov
aad
jle
popa
icebp
mov
sub
and
pop
mov
xchg
popf
mov
repz
adc
and
out
mov
lcall
sub
mov
cmp
fstl
popf
movsb
aas
mov
mov
leave
mov
sub
push
xor
push
sub
and
add
mov
int
dec
mov
jmp
sub
jp,pt
push
pop
in
and
into
insb
gs
lods
dec
std
daa
aaa
lret
clc
cld
inc
and
mov
and
imul
dec
loope
fdivl
cs
adc
push
xor
rcr
mov
pop
es
insb
push
fwait
add
daa
testl
inc
mov
push
arpl
test
pop
or
in
ljmp
push
jg
jge
inc
pop
lcall
cmc
jb
push
xchg
add
movsb
jg
push
cmp
sbb
lock
mov
dec
push
popf
es
test
cmp
add
dec
sbb
in
push
push
call
or
fists
addr16
xor
and
push
lahf
leave
cld
stos
data16
retw
xchg
shrl
shl
test
data16
push
xchg
sarb
jg
push
fnsave
mov
sarb
fs
push
gs
xor
cmc
dec
stos
push
add
in
lock
pop
nop
inc
inc
nop
scas
mov
jl
mov
mov
adc
aas
repz
hlt
xlat
mov
or
and
cs
mov
cmp
std
mov
xor
dec
adc
pop
xor
lcall
out
cmp
pusha
insl
xlat
xchg
lods
adc
repnz
sbb
cmp
xchg
adc
add
pop
call
das
sub
scas
push
add
stos
fistpl
es
popf
mov
outsl
inc
xchg
pop
xchg
push
sahf
sub
lret
push
lods
push
cmc
push
aad
push
je
pop
ficompl
jecxz
and
dec
flds
sub
jl
add
jne
out
push
mov
inc
xchg
aas
inc
lds
xchg
sub
pop
pop
std
repnz
sub
sbb
xor
into
stc
xchg
aas
mov
jge
aas
xor
andb
ja
jne
loope
arpl
mov
push
pop
fists
fiadds
in
push
das
inc
mov
popf
and
jae
stc
daa
in
aaa
out
sbb
repnz
jbe
inc
mov
sarb
cmp
xchg
cmp
sti
mov
jns
ror
cmp
xor
xchg
mov
and
xchg
and
cmp
jl
cmp
insb
jg
outsl
cmp
lahf
push
test
sbb
test
test
jns
daa
sub
outsl
icebp
xor
fninit
cwtl
fwait
fwait
stos
sar
push
out
push
es
inc
mov
loop
insl
mov
stos
data16
mov
insb
test
bound
push
mov
les
mov
rorl
mov
lods
pop
add
neg
push
scas
out
xor
dec
jne
mov
xchg
clc
sahf
addb
pop
cltd
and
and
dec
lret
ret
dec
sub
cmpsl
sbb
pop
add
sarl
out
jp
enter
mov
mul
loopne
repz
inc
shrb
mov
fildll
idivb
mov
js
add
push
vmread
jne
mov
and
dec
stos
inc
sar
sbb
add
in
mov
das
sbb
ds
pop
lcall
call
repz
cmp
cmp
ret
mov
push
js
insl
inc
cmc
inc
and
lret
negb
push
jno
call
and
mov
sub
push
sbb
push
int3
mov
int3
jb
and
sub
pop
mov
push
cmpsb
dec
fistps
rep
sbb
inc
sub
aaa
push
cli
push
xchg
stc
sbb
push
pop
subb
int3
sbb
mov
in
andl
jecxz
mov
cwtl
arpl
push
lcall
mov
or
inc
or
out
cmp
sub
popf
leave
cmp
imul
fstps
fsubrl
xchg
sahf
inc
jl
inc
notl
call
jb
and
lea
jmp
dec
aaa
or
fists
and
mov
and
lds
jl
sub
mov
mov
leave
movsl
push
mov
into
xor
jmp
out
xchg
iret
sub
mov
pop
insl
push
jecxz
es
sub
cmp
sbb
add
sub
lock
scas
add
lret
jecxz
push
cmpsl
lea
pop
loop
jg
pop
or
std
ret
mov
subb
addr16
arpl
pusha
lea
lds
mov
add
std
lods
sbb
sub
xchg
sub
movsb
push
xor
mov
dec
int3
jmp
push
add
test
dec
fadds
dec
das
iret
push
popf
xorb
fldl
rorl
testl
repz
shlb
into
mov
movsl
loopne
fmull
dec
addr16
iret
imul
mov
push
mov
or
and
jp
push
xchg
pop
neg
or
jns
xchg
bound
cmpsl
push
lret
test
out
xchg
fwait
jno
dec
mov
std
pop
ja
or
ret
notl
repnz
pop
andb
mov
mov
mov
push
xor
and
ds
in
mov
lock
sahf
dec
push
enter
lahf
lods
xchg
sbb
nop
pop
mov
bound
mov
shll
adc
enter
dec
lret
inc
fstps
sbb
repz
ds
or
dec
clc
fs
fcompl
lods
pop
push
mov
mov
in
mov
insl
imul
cwtl
and
xlat
inc
outsb
int
jle
fucom
and
in
mov
mov
cmpsl
pop
aam
cmp
dec
incl
outsb
jae
addl
in
push
mov
mov
out
sub
adc
pop
mov
out
addr16
outsb
fabs
jo
shrl
sbb
jbe
scas
shl
popa
fdivrl
inc
mov
inc
push
je
pop
pop
pop
pop
ret
lea
and
mov
xor
pop
rorl
out
fucomi
add
data16
scas
call
pop
test
push
sbb
das
shll
outsl
into
xorl
push
jne
ss
xchg
dec
outsb
cwtl
xchg
lock
pop
dec
mov
sub
pop
adc
insb
loope
out
iret
enter
aad
out
in
int
sbb
mov
adc
cmp
lea
sbb
out
pop
orl
mov
dec
inc
mov
rep
inc
gs
aad
addr16
rclb
cmpsl
mov
pusha
mov
cmc
scas
pop
push
xchg
in
test
ret
jg
out
push
ss
fs
cwtl
push
test
push
and
mov
mov
or
mov
inc
sbb
cmpsl
inc
cmpsb
stos
sahf
lods
and
sbb
xchg
lahf
cs
js
rorb
cmp
outsl
push
popa
out
xor
jmp
mov
lcall
push
insb
pop
inc
pop
cmp
push
cwtl
mov
xlat
imul
fiaddl
popf
sub
add
mov
iret
mov
enter
adcb
jecxz
hlt
clc
dec
jle
jne
lret
xor
fisttpll
sub
test
hlt
pop
leave
fdivs
cmp
movsb
movsl
jns
sub
push
mov
pusha
add
in
inc
call
push
hlt
ss
negb
or
insb
hlt
fdivr
push
fistps
add
mov
dec
push
adc
dec
shll
rclb
movsl
clc
fldcw
addr16
sbb
or
add
xor
sub
or
add
call
in
sub
dec
or
imul
bound
loop
shr
push
out
and
addr16
jb
sub
or
jnp
dec
adc
xchg
mov
cmovs
scas
pop
bound
mov
sbb
les
pusha
xlat
scas
push
fdivrl
add
shlb
insl
out
lods
sub
leave
inc
int3
gs
fcompl
cmp
pop
cwtl
loope
movsb
pop
lods
pop
shlb
xor
cltd
ljmp
pop
lret
pop
pop
add
bound
sbb
test
stc
jecxz
and
push
clc
push
aam
js
or
cmpsl
roll
hlt
ficoml
out
ja
pop
stos
test
mul
push
int3
pop
inc
jnp
test
std
cmp
pop
inc
loopne
hlt
aad
imul
jo
dec
imul
std
or
xchg
ficompl
data16
test
cmp
cwtl
jmp
mov
out
sbb
pop
bound
cmpsb
adc
loopne
cld
ficompl
fstpl
dec
cwtl
xchg
jo
out
or
add
icebp
or
je
aam
pusha
jmp
in
push
mov
mov
add
mov
mov
faddp
pusha
xlat
mov
lret
pop
pop
nop
ret
mov
mov
lret
in
dec
lcall
mov
clc
push
bound
pop
jo
std
sbb
stc
pop
push
pop
ds
sub
loop
rdmsr
cli
out
setns
clc
rcrb
cmp
xchg
xchg
in
fsubrp
repnz
push
inc
cmp
jle
xchg
dec
ljmp
inc
aam
adc
std
and
push
icebp
cltd
sbb
insl
and
test
ljmp
xchg
fdivp
mov
add
cs
xchg
cwtl
dec
mov
imul
int3
mov
dec
xchg
popf
pop
cld
jae
mov
mov
cmp
or
mov
mov
jno
fisubl
daa
enter
aad
sbb
imul
ss
pop
lea
aaa
icebp
lahf
or
inc
scas
imul
movsb
push
aam
nop
sbb
cmp
das
in
dec
jecxz
mov
fs
push
int
or
test
cmpsb
pop
data16
push
ficompl
jmp
pushl
cs
imul
mov
adc
es
pop
cmc
jcxz
dec
test
sbbb
jne
cmp
mov
int
les
les
mov
or
in
mov
and
sub
ljmp
ljmp
push
mov
pop
stc
repnz
lock
inc
mov
es
or
lea
ss
cwtl
xlat
pop
bndstx
js
dec
les
pop
addr16
dec
rclb
jnp
hlt
push
les
scas
cld
stc
dec
lret
fs
lcall
jle
fwait
xor
xor
aam
popa
sbb
dec
add
inc
int3
stc
nop
pop
das
mov
push
push
ja
out
cmpl
xchg
fdivrl
aaa
cwtl
loopne
subb
xchg
rcrl
xchg
mov
adc
xlat
mov
inc
adc
jo
pop
notb
lds
adc
sub
mov
mov
stos
push
xor
pop
aad
pop
es
cwtl
cs
cli
stc
aad
loopne
test
sub
add
inc
jbe
dec
shlb
ss
sbb
xor
imulb
jmp
sbb
push
and
mov
ret
mov
sbb
and
pushf
mov
mov
daa
lods
add
popf
fwait
stc
clc
loop
fildl
pop
data16
inc
add
dec
lods
pop
adc
pop
inc
sub
pop
test
cmp
pop
das
mov
stos
pop
repz
pop
add
data16
pop
jp
mov
in
decb
pop
jl
rorl
cmp
repz
gs
adcl
popf
cs
mov
lahf
nop
stos
add
cmp
pop
clc
mov
jae
aam
ret
ljmp
xchg
stc
pop
mov
aaa
cwtl
js
sub
fiaddl
lds
pop
aad
xchg
fcmove
jnp
lods
jecxz
lods
cmp
arpl
adc
lds
cmp
imul
aas
sti
push
rcr
mov
mov
fimull
mov
int
or
mov
repz
lock
into
pushl
mov
jnp
daa
fmulp
cwtl
inc
inc
cmp
push
loopne
aad
notb
aad
cwtl
pop
mov
and
cmc
mov
ret
adc
insb
popa
and
dec
je
inc
cmp
outsb
adc
ret
imul
push
insl
aad
ret
jne
xchg
lret
call
arpl
dec
cmpsb
movsb
pop
xor
mov
lock
sub
ds
mov
test
xchg
jecxz
out
cmpsl
mov
adc
ret
scas
pop
scas
call
jns
cli
icebp
leave
lods
and
fldcw
mov
mov
mov
rorl
popa
outsl
fsubrs
imul
mov
cmp
ds
mov
mov
mov
andl
cmp
lret
jmp
mov
add
push
test
in
pop
mov
iret
data16
seto
cmp
pop
fmul
dec
repz
and
lahf
mov
jecxz
loopne
mov
jo
pop
cs
enter
and
push
cmp
outsb
out
jge
scas
and
in
addr16
pop
adc
test
pop
push
test
outsb
mov
cmp
push
mov
pop
xchg
fcmove
iret
pop
adc
sub
ja
sub
je
outsl
sahf
xor
dec
popa
das
cmp
shl
add
dec
scas
and
arpl
fistps
das
stc
or
jne
movsb
push
cltd
test
scas
js
lahf
popf
outsl
std
out
pop
clc
scas
xor
push
arpl
push
es
test
out
pop
mov
push
in
mov
cld
dec
inc
roll
inc
and
push
fidivs
cmp
push
pop
jle
jbe
ret
mov
mov
std
mov
cmp
shrl
jmp
jb
push
jo
xchg
and
pop
lock
or
popf
loope
dec
dec
xchg
and
adc
inc
or
push
mov
dec
outsb
fwait
into
dec
je
sub
xchg
mov
mov
call
fs
aaa
push
les
mov
shrl
pop
leave
xor
adc
xchg
or
pop
cwtl
jne
rcrl
jecxz
xchg
ljmp
mov
enter
test
mov
xchg
mov
mov
stos
iret
dec
add
mov
mov
mov
and
inc
jecxz
cmp
test
shlb
dec
cmp
adc
mov
mov
sti
push
test
outsl
data16
or
adc
inc
das
cld
ret
rorl
call
cld
cmp
lods
test
dec
sub
inc
push
std
mov
in
je
mov
cmp
dec
push
mov
and
imul
and
jge
jmp
mov
jbe
and
push
test
cmpsb
mov
sti
rol
inc
mov
dec
mov
sub
dec
mov
out
add
pop
in
mov
mov
stc
dec
xchg
cld
push
adc
and
cld
int
push
or
add
lret
and
daa
add
add
cmpsl
addr16
mov
or
loope
out
xor
fstl
bound
popf
adc
cmp
roll
mov
dec
fwait
mov
sub
ds
adc
lret
leave
aad
mov
adc
lods
jecxz
sarl
push
pop
enter
mov
aas
and
inc
lods
dec
inc
jae
dec
inc
das
lea
repz
and
movsb
cwtl
jne
add
pop
jns
mov
arpl
xchg
aaa
jo
mov
xor
mov
push
or
pop
or
or
sbb
xlat
sub
inc
mov
pop
or
stos
push
sbb
xor
fimull
ret
sarl
rcrb
inc
cmpsb
mov
mov
outsb
sbb
call
pop
pop
test
push
xchg
outsl
es
aas
rcll
mov
mov
adc
sbb
jne
xchg
mov
scas
or
mov
xchg
ret
mov
das
jae
insb
add
xor
sbb
out
adc
or
stos
fstpt
jae
mov
and
push
and
dec
pshufw
out
aad
or
ret
int
es
mov
lods
push
mov
loope
mul
ja
or
fwait
sbb
inc
push
sti
sbb
xor
push
imul
sub
lock
and
mov
iret
sti
push
inc
mov
pop
jg
out
lcall
je
adc
push
in
fs
aas
push
mov
test
jl
jmp
jae
mov
mov
mov
pushf
lock
push
mov
ret
out
emms
dec
in
into
vrcpps
xchg
pushf
and
mov
jg
adc
fwait
lods
mov
adc
out
ret
orl
imul
mov
pop
xlat
pushf
iret
jbe
jge
dec
aad
jp
pop
test
pop
out
pop
pusha
mov
xor
sar
pop
adc
jb
sahf
jp
ss
mov
sbb
add
push
cmp
mov
pop
int
jnp
outsb
ret
nop
cmpsl
or
ret
sbb
inc
lea
fistl
mov
sbb
add
stos
and
mov
fs
stos
mov
sbb
scas
jl
mov
xchg
mov
jecxz
push
push
pop
sbb
xchg
adc
push
inc
mov
rclb
ljmp
in
repnz
push
aas
xor
test
pop
icebp
and
mov
push
jbe
jp
mov
mov
pop
xchg
cld
in
sub
scas
jl,pt
sbb
movsl
addr16
hlt
inc
cmpb
push
out
lahf
ljmp
fucom
cld
push
jno
inc
or
add
xchg
sub
cmpsb
fnstenv
jnp
inc
cmpsb
pop
add
sub
jmp
dec
cmpsb
cmpsb
mov
sbb
mov
mov
cmc
fsubl
in
out
ljmp
imul
rol
mov
mov
jbe
jo
mulps
dec
setge
jecxz
outsl
push
stc
test
test
jne
scas
adc
jbe
dec
popa
cld
jmp
in
clts
dec
push
dec
fwait
pop
dec
mov
outsb
push
inc
inc
jl
mov
je
adc
rolb
daa
inc
das
and
xchg
pop
rcll
cli
cwtl
cmpsl
adc
dec
dec
addb
jg
hlt
mov
scas
cs
jmp
nop
add
lcall
in
cli
ds
leave
ss
int3
jecxz
push
lahf
jmp
in
addl
mov
aaa
repz
repz
aam
adc
add
push
les
test
mov
pop
mov
repz
cmc
adc
push
or
push
pop
xchg
cmp
push
mov
cmp
or
adc
or
out
jno
xor
movsb
push
mov
mov
cli
push
in
cmp
mov
stc
flds
jae
pop
fldl
jmp
pusha
fwait
mov
fidivrl
scas
lar
mov
sub
jge
lcall
mov
cmpsl
xor
sbb
fs
out
dec
call
stos
dec
sbb
jg
in
push
enter
aas
push
ja
lock
lds
stos
mov
xorb
mov
jns
adcl
das
add
sti
xchg
xchg
fildl
push
movsl
jbe
xchg
jne
aaa
and
popa
xchg
out
test
xor
mov
push
sub
sbb
insb
int
js
insb
dec
mov
out
cmp
inc
jl
mov
out
inc
or
out
dec
mov
les
pop
insb
aad
xchg
call
mov
scas
xchg
jo
fmuls
icebp
or
mov
push
mov
fwait
mov
scas
push
inc
in
pusha
jnp
mov
jle
add
push
insl
je
xlat
scas
pusha
scas
sbb
test
sti
or
dec
sub
jmp
sbb
pop
in
ds
push
sahf
sbb
leave
pop
mov
xor
or
int3
mov
pop
push
or
sbb
out
dec
pop
adc
mov
mov
mov
es
mov
sub
and
and
pushf
addl
adc
cld
jl
jbe,pt
out
mov
jg
adcb
into
sub
pop
push
daa
cli
pop
or
stos
push
xchg
mov
and
mov
sub
enter
movsl
and
mov
mov
daa
lahf
lret
mov
scas
bound
pop
or
dec
pop
dec
movsl
rcrl
and
or
xor
dec
xor
sbb
ret
add
callw
cltd
cli
in
lcall
sub
cmpps
jl
add
xorb
ficoml
push
lahf
test
cwtl
jnp
mov
adc
mov
ss
ret
cli
xchg
add
sar
push
mov
cld
fisttpl
pop
cltd
ret
or
mov
lret
loop
insb
pop
cs
and
push
shlb
adc
xchg
loop
xor
mov
mov
dec
xchg
push
dec
aad
sbb
iret
test
mov
jecxz
cmp
pop
mov
mov
mov
adc
cli
mov
dec
push
div
pop
jl
loop
lock
cwtl
jp
jb
cmp
xchg
std
mov
xor
jae
add
je
jo
xchg
mov
pop
enter
push
aad
jns
and
inc
outsw
aam
rcll
popa
dec
sub
xchg
push
iret
lcall
mov
lds
cmc
adc
sbb
xchg
ror
inc
mov
or
gs
xchg
into
ret
push
lahf
pop
and
push
and
dec
cmp
or
movsb
adc
inc
sbb
inc
call
cs
add
outsb
inc
mov
xchg
loop
xchg
inc
push
push
fnstcw
ja
cmp
std
stc
lret
addr16
dec
xchg
int
mov
in
lret
sahf
movsl
pop
mov
and
push
scas
orb
lds
in
jno
repz
arpl
in
fs
adc
jmp
push
test
or
out
loopne
jns
mov
inc
sbb
lret
mov
pop
dec
loopne
inc
leave
lcall
cs
addl
fistpll
cmpsb
xchg
in
mov
hlt
stc
mov
notw
icebp
push
repnz
leave
dec
test
pop
rcll
sbb
or
ffree
adc
jecxz
jp
xor
inc
test
data16
pop
inc
dec
sbb
push
pop
xor
popf
push
add
inc
cmp
push
bound
mov
add
mov
push
pop
jg
fs
mov
push
mov
out
xchg
dec
pop
cmp
mov
inc
call
rcpps
adc
pop
loope
sbbl
rclb
or
lea
cld
sub
das
sub
inc
into
movsb
adc
adcb
mov
jb
dec
sbb
insl
jg
into
cmp
xchg
popa
int3
scas
dec
cmp
push
clc
jmp
adc
xor
test
sbb
sub
cmp
push
or
test
sbb
insl
xchg
jecxz
push
outsl
jg
mov
loop
fdivl
fsubrs
sub
add
add
xchg
fdivs
int
sub
mov
fs
add
xor
test
mov
mov
addr16
cbtw
incb
in
cmc
flds
jge
adc
xchg
in
fwait
cmp
loop
divb
mov
outsb
clc
enter
adc
sub
xchg
or
adc
sahf
arpl
sbb
cs
adc
data16
daa
ss
and
cmpsl
stc
inc
mov
push
jnp
and
lret
ja
pop
mov
inc
jb
fwait
push
xlat
mov
xor
dec
jbe
and
insl
adc
mov
fisttpl
add
orl
enter
or
push
mov
js
dec
mov
je,pt
ret
mov
dec
je
inc
out
pop
imul
inc
mov
sbb
lret
es
lret
xchg
lods
es
xor
push
push
push
in
mov
cmpsl
xchg
cmp
loop
mov
rep
sub
imul
arpl
hlt
push
or
dec
push
repz
arpl
mov
repnz
pop
mov
xchg
iret
sbb
push
push
push
stc
cmp
inc
cmp
outsl
cwtl
lea
pop
mov
lcall
jne
dec
aad
mov
mov
cld
add
adc
push
mov
mov
cmpsb
mov
pop
stos
inc
jbe
sub
mov
sarl
or
push
das
add
xor
arpl
xor
mov
outsl
lock
dec
mov
out
xor
dec
out
enter
pop
idiv
aad
pop
push
or
invd
data16
xchg
jl
mov
cmp
imul
lret
fcmovb
rclb
jnp
lds
lret
popf
add
iret
fidivrs
sbb
and
sub
cs
push
dec
ret
push
arpl
jle
dec
cli
xor
pop
leave
add
jnp
fiadds
xchg
lret
jle
scas
mov
or
or
mov
adc
pushf
mov
idivl
xor
mov
mov
jl
outsl
pop
out
repnz
sub
fists
loop
cwtl
fidivrs
popa
les
mov
lret
pusha
je
cmp
fdiv
add
adc
xchg
mov
in
scas
popa
jle
std
hlt
mov
push
pop
add
xchg
push
add
jg
dec
xchg
and
aam
fdivs
fucomp
sub
inc
pop
pop
cld
jg
adc
in
push
loopne
push
sub
out
clc
inc
inc
outsb
xor
mov
inc
sbb
enter
repz
in
pop
fstl
push
xor
pop
ret
rcll
push
mov
lret
fdivs
aad
lret
jnp
mov
inc
adc
pop
xor
into
mov
inc
inc
push
test
dec
jns
hlt
fsubl
adc
fdivl
in
mov
daa
insb
add
mov
gs
lret
jns
test
dec
hlt
stos
adc
dec
mov
mov
mov
mov
test
dec
loope
ret
in
pop
lahf
pop
enter
push
fistpl
jg
jg
jg
ja
pop
pop
fnstsw
jnp
pop
push
addr16
outsb
insl
pop
sub
fistl
jmp
mov
movsb
mov
jne
sbb
aad
xchg
and
rorl
es
hlt
inc
xchg
mov
lahf
stos
les
aaa
push
pop
call
loope
pop
cmp
xor
xor
mov
mov
sti
sub
outsb
mov
cmp
adc
cmp
imul
test
je,pn
xor
out
adc
data16
das
and
js
lea
fmulp
dec
xor
add
add
lds
ret
mov
dec
push
cmp
and
lret
pop
xchg
or
jge
pop
dec
sbb
lret
cmp
std
jle
outsb
dec
mov
mov
mov
test
push
movsl
int3
ret
rorl
es
aas
mov
dec
sub
loope
xor
xchg
jno
call
push
add
push
mov
in
insb
xor
mov
das
or
mov
repnz
cmpb
outsl
pop
push
push
stc
push
mov
inc
cli
test
jb
adc
mov
mov
test
rolb
addl
cmp
repz
pop
xchg
push
repnz
push
cwtl
add
outsl
out
jno
lock
sub
sub
jbe
cvtps2pd
mov
pop
xchg
xor
and
cmc
xor
stos
lret
mov
mov
in
inc
adcl
pop
std
shrb
repnz
int
in
xchg
push
stc
or
jge
mov
jmp
inc
jo
mov
push
pop
dec
adc
in
scas
inc
push
in
out
cld
stos
movsl
push
fs
jae
mov
pop
adc
mov
sbb
sbb
and
cmp
incw
popa
adc
cmpsb
xor
out
jb
outsl
mov
inc
sti
mov
imul
or
push
and
pop
sbb
inc
repz
mov
ljmp
pop
jmp
pop
sahf
sbb
movsl
cmc
cmpsl
dec
xchg
rorb
pop
icebp
mov
push
sbb
je
mov
or
popf
inc
xchg
push
pop
popf
push
jg
jae
pop
fstl
sub
movb
mov
mov
fiaddl
sub
xlat
scas
dec
ljmp
arpl
add
sahf
push
pop
jg
or
sub
pop
mov
out
or
popf
mov
sub
inc
xor
sub
bound
jg
nop
dec
loopne
cltd
jg
jp
lret
or
inc
pop
ret
jmp
xchg
pop
imul
pop
stos
mov
loope
fwait
and
add
pop
sti
and
sub
mov
clflush
fidivrs
push
inc
ss
xchg
bound
cmp
push
scas
out
sahf
loop
inc
sub
or
in
dec
incl
mov
xchg
mov
mov
lods
pop
repz
scas
pop
repnz
subl
dec
dec
mov
fdivs
jno
jo
es
lret
insl
cmp
add
add
cmp
jge
add
test
mov
adc
add
mov
sub
xchg
inc
movl
and
scas
sub
xchg
xadd
dec
xor
mov
xor
add
rolb
lods
out
jmp
ret
pop
mov
in
push
outsb
jp
pop
iret
into
cwtl
fldl
es
insl
test
sub
lods
lret
inc
rorl
aaa
test
push
rol
adc
test
int3
decb
lods
push
movsb
or
mov
jp
fwait
arpl
xlat
or
push
add
adc
add
xlat
xchg
lods
dec
js
dec
cmovg
imul
out
add
xchg
mov
les
add
mov
or
cs
enter
add
jae
adc
enter
dec
mov
lret
mov
inc
cmpsb
hlt
sarl
pop
jae
lods
insb
inc
pop
and
test
sbb
scas
mov
xchg
cmp
cli
mov
cmpsl
mov
jno
enter
xor
pop
bound
push
xchg
add
mov
mov
shrb
pop
pop
xchg
cmp
adc
xor
xchg
mov
arpl
movsl
and
inc
jmp
and
shrb
adc
daa
mov
daa
pop
push
mov
insb
std
xor
xchg
rorl
mov
in
mov
ljmp
mov
insl
aam
sub
outsb
pop
ficomps
xor
daa
outsb
fcom
sub
inc
inc
aad
or
pop
xor
sub
ljmp
add
inc
mov
jle
pop
aam
out
fsubr
cmp
xor
xchg
sub
enter
sub
and
ja
outsb
call
repz
frstor
jmp
out
ja
fsubr
adc
xor
jl
mov
lods
jp
adc
arpl
icebp
lds
fwait
adc
in
xlat
xlat
jmp
add
in
xlat
cs
mov
cmp
jne
rorl
mov
popa
clc
cmp
push
fistps
mov
add
add
cli
jmp
loopne
pop
add
cmpsl
jno
dec
push
xor
ret
adc
loop
push
andl
pushf
xor
cmp
jne
pop
mov
enter
jmp
jno
loope
popa
call
inc
pop
test
outsb
mov
call
fisubl
xorl
xchg
dec
gs
adc
dec
test
call
mov
jae
and
xor
insb
call
ljmp
jo
ljmp
jns
add
daa
jno
lret
pop
push
sbb
add
inc
jbe
repnz
sbb
xor
sub
sbbb
insb
and
lahf
jne
arpl
fnstcw
mov
loope
std
out
sub
outsl
xchg
data16
inc
flds
loope
cmpsl
dec
mov
inc
push
inc
jo
mov
cmp
lods
sbb
mov
or
lods
ficomps
dec
les
int3
mov
xchg
sbb
repnz
ss
scas
add
adc
outsl
dec
loopne
jo
call
lods
xchg
pop
ljmp
sub
mov
xor
or
pop
in
jne
mov
mov
cmp
icebp
movsb
rclb
sub
inc
scas
lcall
movsb
pusha
sub
dec
and
icebp
add
xor
xchg
addl
dec
sbb
scas
mov
mov
sub
fstp
add
xor
xorl
mov
cmpsl
push
mov
or
cwtl
pop
stos
daa
mov
inc
push
je
roll
pop
cltd
push
add
dec
push
or
or
push
push
pushl
pop
mov
lret
inc
add
push
cltd
and
loopne
pop
mov
mov
adc
add
fwait
shlb
int
push
and
and
dec
xor
and
jecxz
mov
cmp
pop
stos
mov
sbb
loopne
ret
dec
mov
sbb
int3
popa
mov
repz
test
popf
xchg
sub
pop
mov
or
lcall
shufps
sahf
loop
test
mov
call
cmpb
adcb
jno
add
xchg
cmpsl
and
sti
lret
sbb
dec
rorb
mov
cmpsl
fdiv
or
adc
or
andl
test
int
fnstenv
pop
stc
mov
mov
mov
ret
mov
mov
push
adc
adc
les
and
inc
dec
lahf
xor
gs
jnp
add
out
lods
loop
dec
mov
pushf
les
fmull
cmovs
icebp
je
and
mov
ljmp
and
ljmp
cmpsb
mov
sub
jg
push
push
aam
cmp
aas
stos
sub
pop
sti
add
xchg
pusha
pop
mov
adc
or
int3
xchg
fmulp
ds
xchg
and
test
gs
movb
stos
pop
movsl
rcl
adc
faddl
hlt
and
jg
fdivrs
repnz
out
cli
dec
idivl
sbb
jge
xchg
stc
mov
xchg
mov
pop
xlat
add
jnp
incb
cli
push
add
sahf
cmp
push
xchg
dec
sub
mov
jns
test
vcvtsd2si
push
leave
mov
es
popa
scas
jno
mov
lea
nop
jb
lcall
lahf
inc
adc
mov
enter
hlt
inc
insl
cmpsl
fdivl
jmp
mov
or
scas
fisttpll
out
mov
xor
lret
mov
dec
cmc
inc
or
push
dec
call
divl
lcall
insl
inc
mov
pop
push
sbb
sbbb
pusha
out
pop
push
push
jmp
sub
movsb
lret
fcoml
mov
xchg
jbe
xchg
mov
push
dec
les
data16
aad
pop
jl
push
shlb
out
sbb
dec
clc
cltd
rorb
popf
xchg
xlat
lods
jns
sbb
inc
pop
inc
into
jle
or
cs
sub
add
mov
lret
dec
adc
stc
push
push
xchg
leave
dec
out
mov
icebp
cld
in
popa
stos
jp
mov
repz
pushl
cmp
repnz
inc
cmp
pop
bswap
xchg
jl
in
mov
mov
jbe
in
sahf
cmpsb
imul
cli
xchg
in
dec
leave
cmp
mov
or
divb
shll
and
push
les
push
cld
cmc
or
mov
mov
ret
cmp
nop
push
push
or
xchg
mov
cwtl
and
jb
xchg
mov
dec
mov
fwait
icebp
into
lock
sahf
cmp
jo
pop
adc
mov
dec
dec
fisttpll
xchg
dec
push
movsb
pop
mov
mov
lds
test
sarb
test
sub
xor
sbb
push
fidivl
mov
repz
sub
std
insl
push
lock
fiadds
pop
mov
fwait
jecxz
lods
lcall
inc
gs
add
outsl
hlt
adc
dec
cmpb
cmp
and
outsl
pop
add
movsb
push
push
mov
mov
in
ljmp
or
in
je
push
mov
fidivs
mov
pop
mov
insl
orb
and
dec
add
mov
data16
std
inc
rol
push
jns
test
mov
test
xchg
test
mov
popa
stc
iret
push
inc
in
add
orb
enter
ficoml
cld
sbbl
repz
inc
pop
lcall
rcll
mov
xchg
xchg
mov
int3
xchg
jo
adc
popa
mov
fbstp
jb
dec
sub
sub
enter
flds
movb
inc
cmp
imul
aad
sbb
shr
add
mov
mov
out
add
mov
pop
inc
add
jle
in
cli
fcoms
mov
gs
std
int
in
outsb
and
aam
mov
xor
ljmp
or
xorb
mov
sti
mov
pop
cmpsl
pop
cmp
mov
adc
rcrl
push
adc
cmpsl
inc
in
mov
ret
outsb
pop
mov
jns
rolb
mov
jb
lods
nop
ja
das
push
mov
jge
dec
insl
fsts
insl
add
sub
lea
jb
sub
sahf
es
pushf
cmp
rolb
mov
sbb
mov
add
ficompl
fistpll
pop
inc
cwtl
fidivrl
mov
divl
roll
sub
or
xchg
and
lret
icebp
test
add
sub
pop
fldcw
stos
jo
and
jmp
cmpsl
dec
and
out
mov
mov
mov
into
xchg
inc
or
mov
aas
pop
lds
mov
mov
push
jge
push
xlat
cmp
jo
loop
or
imul
xor
inc
pop
mov
daa
lahf
sbb
pop
dec
sub
push
movsb
or
xor
cmp
aaa
mov
sbb
aam
xchg
adc
and
inc
cmp
adc
add
int
fdivrs
js
lret
sbb
pusha
inc
adc
shl
test
jae
and
dec
xor
dec
dec
jno
clc
dec
cmp
adc
pop
fistps
sar
add
sub
jno
shl
add
out
mov
pop
push
lcall
mov
cmp
rcrb
mov
push
aad
push
pop
loopne
push
scas
xchg
or
mov
jne
push
sbb
les
jne
push
rorl
enter
imulb
out
or
pop
pop
inc
xor
stos
sahf
fldcw
sub
push
mov
testb
sbb
dec
jp
pop
pop
sbb
cmpsl
sbb
and
adc
out
xchg
add
xchg
lret
inc
mov
mov
cmpsl
push
movsl
clc
xchg
lea
jns
lds
call
loop
cmc
push
cwtl
push
je
add
mov
pop
add
mov
sbb
sbb
sti
xlat
adc
shl
sti
inc
push
pop
hlt
and
and
mov
inc
xor
lcall
add
and
adc
pop
push
test
dec
shll
ret
jg
xor
arpl
adc
icebp
fildl
fidivs
pushf
jne
pop
cli
or
fistpl
sub
leave
jmp
mov
mov
call
sub
pop
mov
adc
push
inc
push
fwait
mov
jnp
mov
dec
paddusb
hlt
adc
shrb
scas
pop
fwait
lods
fs
out
sbb
insb
stos
push
push
dec
clc
ja
cmp
push
cmp
loop
xchg
in
mov
xor
imul
sarb
mov
add
xor
inc
jmp
xor
pushf
pushf
daa
dec
repz
mov
rorb
or
lret
dec
outsl
mov
in
jbe
ud2
xchg
inc
pusha
mov
jnp
ds
mov
inc
mov
jne
sbb
inc
fisttpll
idivl
push
push
mov
loope
iret
xchg
xor
sbb
jnp
jo
cmp
insb
fcmovnu
daa
jmp
ds
pop
movsl
jmp
jae
dec
push
adc
loopne
pop
bound
pushf
jmp
or
add
hlt
imul
dec
jecxz
stos
jnp
cmpsb
loop
mov
jb
or
sti
movsb
daa
cwtl
cmpsl
jae
in
mov
lods
mov
loop
mov
inc
andl
or
cmc
xor
fstpl
cmp
cmp
lret
les
mov
add
cmpsl
cmp
xchg
in
pusha
cli
xor
adc
mov
mov
cmpb
xlat
int3
mov
and
dec
adc
outsb
inc
mov
inc
cmp
test
and
loopne
xchg
jge
pop
les
lock
fistpll
sub
jmp
jno
mov
push
stos
iret
outsb
sarl
into
sbb
jbe
nop
xor
mov
popa
outsb
test
mov
fwait
adc
mov
hlt
cmp
or
mov
pop
gs
comiss
addr16
stos
add
pop
test
jno
mov
add
imul
ret
idiv
mov
push
ds
ss
pushf
adc
in
popa
xchg
mov
pop
movsb
lcall
js
orb
cmc
loopne
xchg
dec
out
imul
not
xchg
mov
outsb
addb
stos
push
sub
mov
lds
aam
lods
xchg
jne
xor
xchg
jne
push
rcr
fistps
lahf
in
cwtl
test
sbb
cmp
xor
pop
fisubs
ret
and
xchg
pop
cli
jno
ljmp
outsb
pusha
repz
pop
cmp
sbb
stos
fisttpll
loopne
nop
push
roll
pop
outsl
mov
xchg
inc
les
xor
fs
hlt
mov
test
pop
and
scas
sub
insl
dec
int
pop
iret
ja
pushf
cmpsl
mov
loope
cld
cmp
mov
cli
roll
adc
add
out
mov
rolb
pusha
or
cld
lret
dec
pop
cmpsb
imul
int
sti
sbb
int3
imul
push
and
cmpsb
jno
into
push
into
pop
mov
xchg
mov
or
dec
inc
pop
ljmp
jmp
lret
bound
jmp
mov
gs
loopne
xchg
test
xor
mov
and
push
imul
sub
rcll
push
mov
jmp
or
outsb
cmpsb
mov
stos
cmp
pop
orb
repz
ret
mov
test
sbb
mov
pusha
xchg
daa
sbb
pop
fstpt
fwait
je
sbbb
jb
aam
pop
cltd
lahf
sub
mov
push
stc
scas
jns
mov
fstpt
mov
into
sbb
scas
cltd
push
fadd
cld
int3
loop
bound
sbb
dec
push
ret
inc
adc
pop
rclb
inc
out
cmc
mov
jmp
aam
mov
inc
mov
jmp
mov
sub
xchg
push
shl
cltd
lcall
mov
push
jbe
cs
xchg
jns
dec
int3
adc
or
inc
mov
push
xlat
push
repz
mov
fisttps
es
adc
dec
dec
sub
mov
xchg
or
cmp
pop
sub
push
or
pop
sub
pop
mov
cwtl
xor
inc
clc
cmc
cmc
or
ret
inc
imul
mov
aaa
outsb
xlat
push
iret
test
cs
jne
inc
imul
loope
out
adc
push
cmpsl
popf
push
mov
test
mov
sub
jg
out
mov
push
fsubs
push
mov
push
jg
or
aas
jnp
int
and
xchg
jbe
loope
aad
sub
test
pop
sahf
mov
mov
cli
arpl
push
ss
xor
cmc
repnz
into
jne
or
ds
inc
adc
repz
pop
and
sahf
lods
fmull
clc
call
dec
mov
daa
cmp
fdivl
xchg
ret
xlat
or
stos
dec
sahf
lcall
fdivr
pop
xchg
cltd
ror
jo
and
ds
pop
and
sti
cmpb
mov
mov
inc
sbb
sbb
es
popa
addr16
xor
xorb
sub
fwait
icebp
or
jo
adcl
stos
mov
add
into
ret
addr16
call
xlat
cwtl
inc
mov
add
sbb
pushf
push
mov
int
loopne
xor
xor
xchg
push
test
jmp
inc
mov
arpl
adc
jo
rol
in
sub
mov
mov
call
test
pop
mov
and
pop
movsl
in
xor
dec
aam
push
sub
pop
cwtl
and
mov
xor
repz
ja
or
add
sub
pop
icebp
stos
push
dec
jle
sahf
into
int
aam
mov
sbb
cmc
pusha
scas
mov
xchg
and
xor
push
js
mov
jns
pop
jge
lods
jmp
sbb
sarb
sbb
iret
into
jle
clc
es
mov
xor
or
pop
test
arpl
mov
inc
push
mov
stos
out
xor
mov
sub
addr16
mov
subl
jp
dec
sbb
dec
add
cli
stos
int3
gs
mov
mov
jg
andl
mov
das
scas
addr16
bound
shlb
out
lods
hlt
mov
push
inc
dec
pop
cmp
mov
js
adc
mov
fwait
jae
jno
adc
jnp
das
pop
leave
mov
mov
mov
mov
ss
rcl
orb
negb
mov
loope
je
ret
and
mov
or
sub
mov
xor
leave
adc
loop
ja
sub
jge
sbb
gs
sub
xor
add
in
cmpsl
and
mov
stos
repz
je
mov
xchg
sub
inc
mov
loope
dec
out
mov
mov
lea
sub
mov
inc
mov
inc
push
pushf
cmc
adc
or
and
mov
mov
cmpsl
inc
dec
xor
aad
pop
std
stos
add
sbb
cmp
sbb
xor
aad
jns
xchg
xor
scas
lods
shr
out
imul
add
inc
xchg
dec
hlt
adc
pop
adc
bound
aas
add
cmpsl
test
and
out
mov
lahf
and
cwtl
scas
sbb
pop
mov
imul
xchg
ss
sbb
pop
repnz
push
scas
ja
lods
dec
sbb
rcrb
xchg
lcall
cmpsl
mov
imul
dec
cld
es
dec
mov
inc
cmp
or
jno
andl
fs
pusha
movsb
sub
addr16
jne
out
aaa
test
addr16
inc
ret
push
push
sub
mov
iret
or
in
out
lcall
push
stos
dec
mov
dec
mov
sub
pcmpgtd
ja
rol
sub
mov
mov
sbbb
iret
xor
push
sub
nop
aas
mov
mov
nop
push
mov
xor
cmp
inc
fisubl
xorb
mov
rcrl
outsb
stos
ret
push
addr16
jge
sub
aad
aam
dec
icebp
inc
adc
xlat
jb
out
lea
adc
jmp
gs
leave
lock
sbb
loop
cmp
mov
mov
pop
push
lods
je
or
sarl
iret
jnp
or
icebp
shll
lret
jns
sub
xor
cmpsl
xchg
lods
mov
adc
sub
pop
and
lock
push
mov
movsl
add
insw
ret
fistl
xchg
daa
loopne
ljmp
pop
out
jmp
inc
imul
pusha
insb
and
out
mov
jp
adc
mov
pop
es
push
or
in
int
das
mov
es
test
dec
neg
sub
dec
cmp
enter
xlat
and
sbb
repnz
pusha
pop
aad
push
adc
add
fdivrl
sbb
loopne
inc
notl
mulb
aas
mov
mov
bound
pop
in
aas
dec
into
mov
movsl
test
or
mov
bound
xchg
call
insl
lret
push
dec
daa
mov
dec
outsl
insl
int3
iret
or
clc
sarl
mov
add
sti
adc
lret
xlat
mov
test
push
imul
sbb
lds
int
mov
cmpsl
sub
add
arpl
sar
test
sbb
rorl
xchg
jno
mov
inc
nop
imul
stc
cs
sahf
mov
adc
data16
rolb
jmp
push
mov
jp
in
sub
ja
adc
pop
push
fs
in
outsb
dec
ret
and
push
outsl
push
push
cmpsb
pop
xchg
cmp
adc
stos
jecxz
shlb
push
shll
scas
dec
dec
dec
xchg
xchg
pop
sbb
pop
adc
dec
imul
push
push
cmpsl
push
jae
aaa
sub
jno
pop
jnp
shll
mov
mov
add
ret
xchg
inc
dec
xor
lods
mov
jecxz
into
sub
jo
and
cmpsl
or
inc
cld
imul
fisttpl
adc
frstor
je
xor
jnp
jnp
and
dec
sbb
jl
jecxz
push
xchg
sbb
outsb
pushf
xchg
lret
dec
mov
sbb
xchg
subl
mov
ret
jecxz
pop
jecxz
jnp
loope
jmp
pop
repnz
icebp
movsb
inc
add
cmp
nop
loope
adc
sbb
sbb
pop
sarb
pop
inc
push
pop
popf
add
shl
mov
xchg
mov
jne
push
dec
pop
in
lods
inc
popa
jl
cmc
out
inc
and
subb
insl
push
pop
addb
bound
inc
jg
jne
sbbl
cmp
or
lret
sbb
pop
int3
pop
and
ret
xchg
aam
repnz
push
in
cmpsb
push
flds
call
sysenter
adc
jae
inc
cmp
inc
int
push
push
jo
mov
loope
shlb
aad
inc
or
mov
pop
call
icebp
movsb
add
jb
ja
scas
and
mov
cmpsb
into
jbe
xor
stos
mov
std
cli
test
call
pop
call
xchg
mov
fcmovb
mov
repnz
clc
add
test
mov
aam
xchg
inc
xchg
inc
pop
jg
test
mov
test
sub
je
out
dec
pop
inc
into
add
decl
or
jg
insb
lahf
push
int
dec
jo
stos
movsb
and
icebp
mov
fcoms
es
xor
imull
orb
ljmp
mov
in
inc
adc
stos
icebp
mov
lock
dec
lcall
das
xchg
xchg
pop
mov
jno
cmp
push
and
arpl
lret
mov
lods
sarl
in
push
jg
pushf
ficompl
pop
shlb
jae
imul
xor
std
fmuls
sbb
outsb
or
cmpsl
cmc
jnp
lods
mull
push
and
aaa
sbb
test
push
negb
inc
shlb
loope
dec
shll
fistpl
dec
xchg
mov
mov
mov
xor
mov
in
imull
mov
mov
xchg
mov
sub
roll
jo
sti
sbb
add
shrl
loopne
dec
lock
mov
mov
xor
cld
out
mov
cmpsl
mov
dec
stc
fsts
hlt
mov
ljmp
push
inc
inc
test
push
adc
lret
ret
daa
dec
inc
arpl
jp
mov
sbb
sub
rorl
scas
sub
push
jno
aam
cmc
jne
lret
cli
and
xor
dec
enter
loop
dec
outsl
sahf
leave
inc
js
push
jae
adc
xchg
xchg
jl
jge
mov
fnstenv
aas
adc
mov
jnp
sbb
push
jle
cs
out
loopne
popa
fwait
shl
pop
dec
mov
add
inc
cmp
js
mov
int
scas
lods
clc
push
push
mov
inc
sar
sub
enter
cmp
lods
je
push
jne
mov
sbb
leave
outsl
addr16
mov
lret
test
push
xchg
and
outsl
jb
mov
addl
push
sub
std
inc
cmpsb
and
xchg
mov
adc
pop
sbb
es
or
mov
ret
pop
scas
lret
iret
adcl
add
cmp
ds
mov
es
xchg
sub
push
push
ret
inc
negl
fmul
xlat
in
in
xchg
and
decl
stos
pusha
jb
push
pushf
adc
inc
lock
sub
lods
push
xor
inc
xor
stos
ret
lret
sbb
in
jl
sub
imul
xlat
mov
insl
imul
mov
hlt
movsb
sbb
leave
and
adc
ljmp
clc
mov
lods
js,pt
mov
jno
and
icebp
xchg
cmp
push
outsl
cli
add
jle
js
or
rcrb
pop
inc
jmp
lock
ficoml
clc
cmpsl
in
inc
inc
xor
inc
adc
iret
and
xchg
imul
stos
lcall
cmpsl
stos
dec
cmp
xchg
jle
enter
fldl
dec
cmp
mov
xchg
clc
pop
xchg
add
lret
mov
call
stos
push
repz
das
std
mov
xchg
xchg
or
push
jecxz
into
cli
adc
adc
mov
cmp
je
outsb
scas
jo
jne
leave
adc
push
or
adc
sbb
xchg
pop
out
mov
sbb
outsl
clc
pop
pusha
sbb
out
mov
movsl
jmp
mov
lahf
ljmp
ffree
push
aam
icebp
notb
repz
push
push
subb
add
aad
jbe
imul
dec
xchg
movsl
pop
jae
pusha
imul
xchg
cmc
lret
mov
xor
pop
cltd
pop
push
lahf
outsb
loopne
sub
pop
jg
shlb
inc
xchg
in
mov
cmc
jns
bound
pandn
and
jae
xchg
loope
outsb
inc
outsb
lcall
xor
popa
bound
pop
inc
add
mov
dec
mov
mov
aaa
adc
push
push
sti
scas
cmp
imul
xchg
mov
cmpsl
gs
dec
fimuls
or
or
push
cmpsl
mov
shrl
imul
sti
lret
xchg
sub
mov
jmp
outsl
xor
mov
sub
dec
std
or
mov
push
lds
dec
daa
lds
subb
ljmp
inc
je
mov
std
shlb
into
sbb
orb
push
mov
pop
mov
sti
or
jae
enter
in
out
pushl
les
sbb
cmp
psllq
mov
lahf
cld
mov
adc
add
int
sbb
dec
jmp
stc
push
popl
jo
outsl
mov
clc
out
stos
and
inc
dec
jmp
ss
adc
xor
pushf
pop
sub
js
mov
in
cmc
std
push
jno
pop
or
mov
imul
mov
aam
dec
cmp
xlat
mov
sub
adcl
pushf
mov
sub
dec
jge
insb
and
in
inc
mov
movsb
test
push
lcall
adc
cltd
sub
jae
hlt
adc
jecxz
sahf
sub
insb
aaa
jmp
nop
mov
or
negb
lods
popf
sbb
push
stos
repnz
hlt
sub
sub
adc
scas
inc
ds
mov
fndisi(8087
mov
lds
add
sbb
pop
cmc
dec
ljmp
jbe
or
pop
push
pop
inc
rclb
fcomps
in
mov
int
mov
outsl
cli
or
sbb
adc
ss
fdivr
rcrb
scas
cmp
test
adc
sub
sub
cs
sbb
jne
icebp
xchg
shlb
push
popf
push
int3
xorb
popf
push
cmp
mov
jbe
movsl
bound
in
push
pop
sar
pushf
lcall
iret
stc
dec
pop
lods
xchg
jnp
aaa
fwait
ljmp
sub
pop
push
jmp
lret
in
in
mov
in
repz
cmp
ret
mull
add
add
sti
loope
push
fwait
jne
jmp
jmp
rorl
mov
xchg
xchg
mov
push
adc
in
mov
dec
mov
jmp
mov
cmc
jl
add
xchg
push
adc
mov
negb
jne
andl
filds
outsb
fsubr
scas
inc
adc
std
lods
fwait
xchg
dec
xchg
dec
push
stc
imul
mov
ds
inc
or
mov
dec
test
xchg
arpl
cmp
push
fistl
cmp
or
dec
std
xchg
sub
dec
imul
mov
fsub
fs
mov
jle
jno
imul
xor
loopne
push
add
arpl
in
ss
stos
test
icebp
stos
pop
mov
cli
pop
bound
dec
mov
je
enter
pop
shrb
mov
cld
and
and
inc
daa
mov
out
adc
mov
hlt
xchg
fimuls
adc
mov
sbb
rcrl
dec
out
cmc
jns
xchg
insb
xchg
xor
ss
mov
imul
inc
jge
imul
pop
xchg
pop
outsb
inc
fildl
add
ds
sub
mov
push
lock
pop
jns
pop
test
jecxz
loope
insb
das
or
mov
bound
jp
mov
fdivr
sbb
popa
xchg
mov
and
daa
sbb
push
lahf
push
movsb
cld
daa
mov
adc
popa
jmp
jg
cld
dec
stc
sbb
cmp
xchg
out
and
push
lret
icebp
adc
mov
jp
repnz
inc
nop
out
xor
pop
outsb
mov
or
mov
ja
jg
pusha
push
xchg
cmp
fstps
jns
aaa
adc
push
mov
out
xchg
sub
subb
push
movb
cmp
dec
and
jnp
arpl
push
xor
add
fisubl
out
sbb
sbb
leave
and
lcall
lret
xchg
cwtl
adc
inc
icebp
lods
or
mov
scas
ss
test
loope
cld
mov
mov
jle
icebp
mov
stos
xchg
in
jg
sub
loopne
or
lcall
mov
outsl
dec
ret
cmpsb
inc
fimuls
push
out
mov
adc
in
es
cmp
mov
sbb
fisubs
xchg
outsl
data16
loop
jnp
pushf
data16
fisubs
inc
cli
pop
inc
je
dec
es
push
movsb
inc
mov
and
xlat
xor
cmpsl
xchg
mov
mov
jl
dec
push
adcb
sbb
lods
gs
inc
xor
jnp
ja
push
dec
mov
insl
adc
imul
cmp
bnd
int3
int3
fwait
cmc
or
cmp
inc
xor
orb
inc
push
jle
lret
std
cmp
incb
mov
jecxz
push
jne
xor
jne
ret
aaa
insl
jne
mov
mov
sbb
push
cld
mov
push
xor
sbb
mov
test
pop
popf
arpl
push
out
nop
insb
in
in
mov
leave
notb
test
shlb
push
daa
and
push
mov
xor
nop
shll
out
insl
jmp
jne
sbb
mov
stos
ja
jg,pn
jbe
dec
dec
mov
out
mov
pop
pop
dec
sbb
xchg
jle
subl
dec
mov
mov
scas
loop
pushf
jne
push
out
jns
rcll
sahf
aas
push
mov
lea
xlat
sub
jmp
or
mov
sub
pop
add
inc
adc
fdivrl
pop
or
push
xchg
cmp
pusha
in
push
xchg
push
cs
cmp
xchg
inc
sub
adc
xchg
jb
scas
js
notb
pop
mov
movb
cmp
inc
cmp
sub
mov
pop
push
xor
mov
movsb
hlt
ret
dec
sub
pop
sti
cmp
mov
jmp
inc
repz
lcallw
sbb
dec
out
arpl
or
psubd
pop
xchg
mov
dec
sub
inc
sarl
pop
testl
or
xchg
adc
nop
std
rcll
push
pop
mov
push
jl
inc
loopne
hlt
mov
out
test
push
rcl
fs
fidivrs
mov
dec
cwtl
jle
data16
in
push
sub
mov
xchg
fwait
stc
mov
cmpsb
xor
add
scas
mov
jmp
inc
add
sub
xlat
outsl
jmp
xchg
cld
mov
mov
mov
aam
sbb
push
pop
out
push
mov
shrb
jle
fdivl
cld
je
movb
mov
sbb
sbb
or
iret
and
arpl
sbb
rcrb
jns
fs
aad
in
jb
icebp
xchg
sar
arpl
arpl
push
sahf
aam
and
sbb
mov
fwait
ret
imul
or
cmp
cli
fdiv
repnz
add
push
inc
icebp
aad
lret
pop
fwait
gs
pop
vmsave
testb
ljmp
dec
shll
pop
bnd
gs
in
sub
mov
push
je
mov
add
ljmp
sbb
stc
daa
mov
ret
cmc
jae
cmp
xor
mov
inc
jb
xor
xchg
js
ret
es
sub
repnz
test
mov
into
notl
fs
add
adc
push
movl
mov
mov
out
mov
repnz
inc
test
lcall
int3
xchg
mov
dec
lcall
and
je
adc
ja
insl
in
fistps
xor
adc
in
inc
into
xchg
pop
xor
arpl
scas
or
or
mov
xchg
add
outsb
xchg
push
shrl
sti
push
aas
or
xchg
or
outsb
sti
push
jmp
insl
mov
loope
or
arpl
stc
sahf
shl
push
mov
jne
mul
into
std
push
jbe
jb
fwait
sbbl
outsb
call
inc
xor
mov
and
xchg
jmp
rclb
popa
cld
push
mov
dec
jno
leave
cwtl
rcll
or
push
push
scas
imul
dec
push
int
cmc
imul
out
dec
pop
daa
and
popf
sub
testl
repnz
sub
add
add
mov
out
mov
cmpsl
nop
adc
lahf
push
rorb
cmp
pop
neg
mov
xor
lods
gs
mov
rcrw
hlt
push
sbb
outsl
in
cmp
into
in
into
cmp
mov
lahf
dec
push
mov
dec
insl
fsub
push
rcr
hlt
pop
out
mov
popf
sti
sbb
sbb
pop
mov
sarb
xchg
mov
cld
mov
pop
loop
cmpsb
xchg
inc
mov
jbe
mov
in
xchg
insl
faddp
dec
outsl
jg
ret
sti
sbb
call
lds
rorb
dec
and
je
or
lret
stc
add
adc
in
mov
jbe
bound
jmp
inc
pop
cmp
cld
movsl
dec
sar
mov
and
xor
addr16
xor
inc
push
test
push
xor
repz
push
bound
sbbb
pop
mov
fidivrs
xchg
xor
inc
fstpt
adc
fnstsw
lea
stc
aam
xor
out
fsubrs
scas
sub
add
adc
pushf
rorl
inc
xor
cmp
xchg
mov
xor
cli
mov
stc
leave
arpl
inc
arpl
repnz
dec
pop
enter
into
jl
lcall
and
scas
cld
in
ret
test
stos
cwtl
outsb
negl
arpl
xor
pop
es
mov
add
mov
repnz
ret
adc
es
cmp
xor
xor
mov
jl
int3
push
andb
inc
mov
and
ds
add
sarb
cmp
ficoms
iret
out
pusha
fbstp
lret
adc
sbb
sub
out
sub
cli
rclb
adc
xchg
test
mov
insl
stc
inc
das
push
mov
xor
clc
mov
cmp
in
enter
aad
pop
scas
aaa
adc
mov
inc
jo
iret
mov
cmc
test
rolb
adc
sub
push
movsl
cmp
scas
mov
das
adc
insb
cli
dec
mov
bnd
call
add
xchg
xchg
jns,pt
icebp
mov
pop
test
mov
sbb
jmp
int3
dec
xchg
fnsave
repz
cmpsb
or
push
jl
sub
iret
das
ljmp
insl
jecxz
sub
push
in
pushl
mov
xchg
push
stc
push
dec
mov
jge
dec
lock
in
mov
xor
jge
mov
and
pop
cmp
inc
scas
inc
je
mov
pop
inc
incl
fstpt
les
inc
inc
cmc
mov
xchg
jp
dec
cmp
hlt
mov
push
stos
dec
dec
clc
sahf
cs
cmp
andl
aaa
scas
ljmp
dec
or
rorb
pop
in
jl
sub
pop
add
pushf
pop
subl
sbb
mov
cmp
sahf
orl
push
mov
pusha
out
pop
sahf
dec
mov
popf
pop
mov
rcrl
imul
inc
dec
mov
rol
mov
loope
adc
xchg
sub
out
mov
fistpll
pop
sbb
inc
ret
lods
sbb
inc
jne
loopne
icebp
dec
fs
shrb
mov
sub
jle
lret
lcall
les
pop
jg
out
cmpsb
mov
ficomps
fdivp
in
outsb
push
inc
outsl
mov
stos
ret
mov
jae
jg
int
mov
push
add
jnp
sub
insb
xor
xor
in
jge
outsl
mov
sti
xchg
xchg
dec
mov
xchg
icebp
out
add
jnp
dec
jns
call
test
jo
mulb
nop
cwtl
push
outsl
aam
lahf
add
into
mov
add
imull
jmp
pop
jb
push
inc
stc
lret
add
mov
cmp
xchg
pop
xor
mov
sti
icebp
roll
int3
sub
and
in
jb
pusha
leave
sbb
popf
xor
push
xchg
jne
mov
xor
mov
sub
or
subb
jae
pop
subb
push
shrb
fidivrs
sbb
adc
and
pop
xor
cmp
inc
lock
fimuls
roll
out
adc
pop
sti
adc
add
aam
loopne
jl
dec
sub
dec
addr16
stc
fistpll
mov
pop
lock
xor
jp
movaps
bound
sub
add
sub
cmp
bound
loop
lret
bound
lret
mov
xchg
std
movsl
test
mov
jmp
mov
inc
mov
inc
push
mov
cmp
stos
fldcw
out
repnz
mov
test
inc
int3
and
pop
xor
mov
imul
or
add
and
lcall
pop
in
aaa
add
jge
stc
push
dec
pop
jnp
in
cmp
iret
es
bound
cmpsl
lock
mov
outsl
out
pop
insb
in
stos
cltd
sub
cmp
rclb
push
fnstcw
push
pop
xor
xor
inc
scas
jb
mov
mov
xor
dec
sbb
test
sbb
jg
jecxz
adc
pop
push
in
inc
pushf
cmp
and
mov
insl
out
loopne
jp
dec
xchg
inc
jmp
and
sbbb
mov
ret
mov
negb
cmp
aas
pop
push
int
pushf
sub
xchg
testb
mov
xlat
mov
cs
clc
xchg
cmp
nop
jge
xchg
lods
jb
rorb
cld
mov
in
pop
in
jmp
mov
or
add
rorb
aas
add
repz
xchg
and
sarb
sub
sub
loopne
loopne
add
sbb
sub
push
add
xchg
xchg
mov
push
dec
mov
lea
mov
sarb
and
mov
jae
pop
mov
jb
xor
adc
sbb
or
add
mov
pop
add
loope
push
inc
or
cli
push
stc
loope
sarb
aam
test
bound
xor
and
sti
inc
push
pop
jne
lock
sub
data16
xlat
nop
decl
inc
inc
pusha
ds
mov
xor
fxch
sbb
sub
rorb
fcomps
out
fnstenv
adc
mov
dec
arpl
sub
cmc
loope
push
lcall
loope
add
and
mov
addr16
cld
insb
pop
or
inc
filds
test
lret
movsb
fucomip
call
mov
mov
lock
xor
sub
je
jbe
sbb
add
mov
xlat
in
aam
sbb
fldcw
sbb
testb
imul
fdivrs
lcall
std
push
jne
out
imul
lret
stos
mov
mov
ret
leave
mov
pop
xchg
sub
movsbl
pusha
out
imul
push
pop
aas
subl
dec
add
cmp
jnp
mulb
je
outsl
sbbl
ljmp
ret
mov
cmp
adc
fwait
movsb
lcall
iret
pop
fldt
pop
mov
mov
sbb
test
mov
dec
sbb
data16
inc
movsl
fwait
sub
shr
cs
lret
ss
sahf
inc
inc
icebp
lods
rclb
loop
insb
xchg
xor
adc
outsl
pop
arpl
and
and
sbb
cmp
push
push
dec
jno
fists
in
ret
pop
es
mov
cld
aam
mov
data16
clc
xchg
mull
xchg
xchg
repnz
sub
std
ljmp
dec
inc
ret
mov
xchg
jae
lods
inc
movsl
cmp
pop
cmp
aas
roll
mov
sbb
in
add
add
int3
loope
or
push
in
pop
inc
sub
jb
xor
jl
push
adc
cli
push
xor
mov
roll
or
add
clc
in
mov
sbb
jp
ss
pop
and
push
dec
jb
mov
mov
mov
insl
cs
lcall
scas
jmp
sti
xchg
or
add
mov
rcrb
js
inc
aaa
in
jp
push
es
sahf
data16
add
sub
inc
popf
pop
inc
js
shlb
ljmp
push
dec
or
fstpt
or
aas
iret
cli
cmp
sahf
or
and
lret
cmp
adc
in
dec
cwtl
test
sub
xor
sub
xchg
push
sub
pop
sbb
hlt
and
lcall
inc
cmp
xor
push
dec
jg
imul
jp
gs
iret
xchg
das
mov
dec
mov
or
stos
mov
in
xchg
sbb
sub
push
jo
test
leave
cmp
fcoml
cltd
and
xor
test
pushf
sbb
jg
and
pop
sub
pop
jp
adc
pushw
insl
popf
cmpsl
stos
sub
insl
mov
leave
cmpsl
sarb
pop
stos
sbb
inc
shll
jl
pop
call
push
idivl
jne
outsb
addr16
jne
ret
jg
pop
dec
stos
dec
mov
jmp
mov
sbb
sub
sub
nop
daa
in
out
cmp
das
cs
hlt
pop
mov
es
dec
and
in
es
mov
ds
xlat
or
movq2dq
pop
push
les
in
mov
mov
and
inc
mov
cmp
inc
fs
xchg
ficoml
push
cmpsl
dec
out
popf
mov
or
lea
test
dec
ljmp
push
push
cmp
inc
add
and
fadds
clc
clc
inc
jnp
sbb
xor
pop
imul
mov
mov
mov
sti
inc
push
push
jnp
imull
rcrb
and
adc
test
jno
test
mull
push
and
mov
stos
ror
mov
sbb
inc
ss
leave
sub
sub
jg
outsb
shll
call
cli
sbbl
pop
inc
mov
ja
pop
mov
and
push
ja
shlb
cmp
test
sahf
mov
fs
xchg
dec
pop
pusha
lret
fisttps
std
lods
iret
mov
out
enter
jb
ret
inc
mov
les
mov
das
and
add
scas
std
push
jl
mov
sbbb
lea
xchg
pop
test
or
push
mov
mov
std
cld
and
pop
enter
cmpb
mov
mov
fwait
push
pop
adc
aam
mov
fstp
jge
jns
aad
add
cmp
icebp
into
cmpsb
mov
xchg
sbbl
dec
fildll
or
xor
mov
and
cmova
ja
sub
add
icebp
xchg
push
xchg
add
jmp
lcall
xchg
push
subl
jae
mov
dec
pushf
inc
inc
xchg
pop
mov
in
cld
repnz
pop
dec
es
popa
nop
out
sahf
subl
xchg
pushf
sahf
daa
xor
jecxz
cs
push
sbb
repnz
cmp
or
add
xorb
push
call
leave
add
fisttpl
sub
mov
sub
cmp
nop
mov
rcll
push
int
xchg
jb
inc
lret
xlat
pop
mov
add
sbbb
pushf
jne
adc
inc
and
js
jne
pop
inc
mov
or
xchg
jle
or
mov
scas
jg
arpl
xchg
push
jge
fwait
jb
icebp
subl
add
outsb
pop
dec
fnstcw
cmp
sub
lea
lret
into
mov
xor
test
xchg
add
mov
stos
sti
pop
add
insb
jno
xchg
push
lret
addl
lods
and
int
sbb
adcl
shrl
cmp
ljmp
icebp
sbb
dec
cli
test
out
jecxz
cmpsb
mov
inc
lock
cli
and
mov
sub
into
and
pop
inc
lock
test
aad
add
xchg
add
mov
fs
fnsetpm(287
push
repz
jnp
push
lret
daa
push
xchg
scas
fcmovu
in
pop
iret
jnp
xchg
xchg
pop
fbld
push
mov
push
mov
ret
shrl
dec
mov
loope
incb
adc
popa
xor
cmp
add
lds
pop
push
loop
jno
imul
push
ja
mov
or
push
sub
addb
and
cmp
in
push
push
cmpsl
jge
or
lcall
cmp
lret
popf
loope
dec
les
test
inc
push
mov
ja
into
xchg
xchg
fs
mov
ljmp
lcall
dec
pmaddwd
or
push
and
add
push
out
or
aaa
fxch
and
xchg
inc
js
xchg
leave
cs
int3
in
stos
ja
jmp
add
cmp
mov
add
mov
scas
data16
fistpll
jno
insl
fs
jmp
int3
std
inc
imul
js
jno
inc
popf
add
mov
dec
je
mov
jecxz
add
inc
lods
or
push
inc
fbld
fildll
lret
xchg
daa
rorl
lds
dec
add
and
jle
sbb
adc
push
repz
sbb
in
and
aas
and
lret
push
lods
and
and
fwait
push
mov
inc
mov
lret
hlt
sub
lods
lock
xchg
loopne
out
in
jmp
sbb
jle
in
insb
arpl
insb
inc
add
pop
pop
dec
xchg
jmp
test
inc
push
into
cmp
or
popf
xorl
xor
out
stos
icebp
push
cmc
jo
pushf
xchg
popa
outsb
inc
push
fistl
data16
xor
mov
pop
lcall
mov
ljmp
in
mov
outsl
in
dec
jb
jns
out
mov
pop
xlat
or
movsl
int3
rorb
ljmp
pop
sbb
and
fcmovbe
shr
jae
adcl
cwtl
ret
cmp
xor
dec
sub
das
stos
adc
shlb
rcrb
shll
in
push
popf
or
dec
xchg
fwait
lods
jge
cmp
jbe
iret
fiaddl
xchg
pop
mov
lock
iret
insb
mov
mov
jge
pusha
mov
shll
rcrl
adc
sbb
pop
xor
mov
daa
test
mov
cmpsb
mov
pop
mov
jmp
or
jne
je
repz
out
and
ss
lea
push
xchg
push
cli
out
clc
movsb
sub
pop
mov
push
inc
mov
movsl
pop
mov
jg
out
pusha
sbb
xchg
adc
push
aad
sbb
mov
sti
mov
jo
add
sbb
dec
or
pop
or
sbb
cltd
jo
xchg
icebp
mov
adc
vpmulhuw
adc
rclb
rcrb
jg
jp
adc
andps
pushw
hlt
mull
hlt
jle
test
jecxz
int3
into
mov
popf
and
lret
jo
in
mov
pop
clflush
out
into
xchg
mov
fnstcw
dec
pop
or
cltd
js
cmp
inc
xchg
into
loopne
scas
test
push
movsl
inc
pop
push
iret
ja
jo
repnz
lods
inc
dec
cmp
sub
cmpsb
push
sbb
jno
out
test
push
popf
jmp
fcoml
sbb
in
test
jo
sbb
mov
ja
das
lcall
xchg
sbb
xchg
addl
cmp
mov
cs
mov
mov
xchg
jge
call
add
mov
xor
sti
jb
and
lahf
dec
xor
pop
mov
call
test
hlt
fists
mov
mov
sbb
cmp
add
add
jp
mov
test
call
and
out
xor
cmp
mov
jg
inc
aam
aam
or
jl
pop
imul
sub
mov
js
mov
mov
or
ljmp
arpl
or
sbb
enter
mov
jl
lret
dec
movsb
psraw
dec
repnz
and
inc
or
push
aam
leave
fisubrs
stos
sbb
mov
fdivr
in
cld
xchg
add
or
shlb
fildl
bound
aam
cmp
push
sub
add
fildll
fmuls
pop
mov
sub
jnp
xchg
out
mov
lret
push
dec
subb
cmpsl
mov
js
xor
pop
push
inc
and
push
iret
mov
stos
and
sub
and
popf
fdivs
decb
xlat
scas
and
inc
lret
cld
dec
loop
stos
cmp
mov
lret
gs
fstpl
scas
sti
cmp
add
jg
dec
std
push
mov
out
repz
fcomp
popf
outsl
xor
stos
inc
fwait
test
xor
mov
aas
jne
test
xor
mov
sbb
ljmp
enter
mov
inc
dec
les
xchg
mov
movsl
cld
mov
fcompl
les
adc
and
test
xchg
jl
xlat
mov
lret
call
add
or
mov
fmuls
in
fimuls
out
xor
adc
fmuls
xchg
push
sbb
add
inc
dec
out
shl
push
push
movsl
enter
lods
hlt
pushf
and
insb
jmp
ret
or
sarl
lret
mov
inc
pmaxub
sub
mov
test
or
mov
push
cli
pop
jnp
jg
subb
add
dec
cmp
les
mov
pop
sbb
lcall
or
adc
pop
arpl
out
iret
and
mov
and
xchg
sbb
leave
test
popf
les
xchg
or
ficompl
rol
clc
into
and
lret
xor
fdivp
dec
scas
cmp
scas
and
clc
pop
adc
cmp
xor
iret
stos
les
cmovs
sub
jbe
sbb
leave
rorl
fnstenv
sbb
ss
mov
sub
sub
es
out
lahf
outsl
push
adc
inc
insb
jae
push
jne
fxch
jne
jo
jle
enter
movsl
jecxz
adc
and
outsl
xchg
test
push
jmp
adc
sbb
jae
dec
mov
fwait
ret
pop
movsb
cmp
bound
adc
mov
insb
ja
lret
xchg
cs
push
sub
insl
or
aam
adc
pop
or
stos
fwait
or
pop
incb
out
jecxz
dec
xchg
mov
mov
test
sub
addr16
smsw
jecxz
mov
mov
pop
jae
data16
test
loop
or
mov
jg
sub
fnstenv
out
pusha
dec
add
inc
imul
in
push
adc
sbb
sbb
aam
js
push
pop
cwtl
pusha
add
jp
out
popa
icebp
inc
dec
fldcw
lods
test
mov
jns
inc
jge
pop
enterw
jb
sbb
sbb
push
and
xchg
ret
lret
enter
lcall
adc
aad
fnsave
mov
ror
pop
fnsave
cld
popf
mov
jg
mov
inc
add
cmp
pop
sub
in
inc
jg
dec
xor
lret
dec
add
in
xor
mov
mov
outsb
xchg
popl
pop
mov
add
or
jmp
pusha
xlat
xchg
cmc
cld
xor
mov
cmpsb
fsts
mull
cmc
stc
sub
jecxz
ds
jnp
pushf
mov
loop
xchg
movsl
xlat
xchg
mov
aaa
mov
mov
in
stc
or
sub
stos
xchg
adc
mov
stos
testb
repz
mov
arpl
hlt
mov
lret
sub
fdivl
mov
xchg
cmp
jmp
stos
mov
fxch
int3
pushf
jp
cwtl
sbb
in
mov
stos
xor
in
push
jo
inc
enter
mov
jecxz
insl
jae
test
and
sbb
or
push
cld
inc
imul
fwait
push
jb
mov
xchg
cmp
jo
push
mov
cmp
ret
mov
mov
and
mov
js
sbb
adc
adc
divl
cwtl
cmp
sbb
adc
or
mov
call
sub
imul
jge
lret
pop
jle
or
fisttpll
inc
xor
xor
adcb
sbb
add
out
push
insl
or
mov
repz
push
int
jle
inc
mov
and
push
mov
aam
leave
mov
mov
rcrb
pop
inc
sbb
pop
in
add
dec
or
xor
sub
aad
test
mov
ljmp
and
xor
sub
pop
test
in
int3
mov
lretw
pop
std
fisttps
mov
dec
sahf
and
push
pop
push
loopne
mov
push
mov
push
outsb
dec
movsb
xlat
loope
pop
and
lods
lds
adc
adc
mov
jb
xor
por
adc
mov
pop
xor
adc
push
push
xchg
sarl
enter
sahf
or
fisubrs
add
xor
jg
enter
and
sub
int
cli
adc
pusha
test
or
sbb
xorb
fstpt
jp
lds
aaa
imul
add
adc
and
js
mov
jbe
lea
jle
push
inc
cmp
push
adc
mov
dec
or
in
movsb
jnp
imul
aad
pushf
xlat
pop
add
adc
leave
cs
lcall
jl
das
out
pop
cli
mov
mov
sbb
insb
ljmp
lds
xchg
push
add
jmp
ret
and
inc
sti
scas
jp
outsb
lds
pop
subb
call
push
pop
rorl
jle
inc
sbb
sub
mov
sbb
cltd
ja
xor
sbb
pop
and
cli
out
pop
dec
pmaddwd
mov
mov
mov
inc
movsl
imul
loope
imul
mov
mov
push
ret
sub
aaa
xchg
or
dec
inc
lcall
cmp
les
imulb
pop
mov
cmpsb
mov
push
clc
enter
hlt
cmp
mov
aam
xlat
daa
push
xor
xchg
pop
and
cmpsl
inc
sbb
insb
jp
icebp
pop
cmpl
loop
movsb
out
mov
sbb
mov
add
scas
push
xlat
and
sbb
loop,pn
fisttpl
inc
cwtl
test
dec
cmp
jbe
mov
incb
cmpsl
pop
adc
cmp
mov
or
mov
mov
add
hlt
into
in
lahf
nop
pop
and
cld
aam
sbb
filds
jp
pop
adc
mov
push
sti
add
or
lret
push
push
ja
sbb
cmp
pushf
and
orl
and
jno
pushf
cld
test
dec
push
cmc
adc
call
aam
mov
inc
cmpsb
sub
sbb
dec
les
cmpsl
fistpl
inc
faddl
mov
icebp
push
arpl
lret
add
mov
enter
mov
int
jnp
fstpt
scas
ljmp
pop
push
xchg
mov
addr16
cli
or
jns
push
adcb
dec
dec
ja
in
cmp
lock
or
and
das
in
xchg
in
insl
dec
and
mov
fwait
sub
xor
dec
jge
jecxz
mov
cli
xchg
pop
sbb
add
push
mov
in
jecxz
jae
subb
filds
int3
pop
or
pop
push
and
or
cmp
mov
inc
ljmp
inc
les
mov
sbb
mov
lahf
push
mov
and
xchg
and
jl
push
cld
enter
fs
cwtl
mov
aad
popf
or
mov
sbb
adc
push
clc
divl
and
repz
aaa
push
or
popa
ds
out
push
notb
int
pop
xchg
outsl
lret
into
roll
std
js
xchg
clc
inc
movsl
addr16
sbb
xchg
lret
jg
repnz
fnstcw
inc
call
cld
movsl
repnz
and
fdiv
dec
mov
adc
or
lods
lret
ret
fdivs
ja
mov
in
inc
jnp
mov
loopne
mov
out
inc
das
insb
add
sti
jl
int
aam
or
cmpsb
stos
or
das
outsb
outsb
bound
mov
xchg
jge
leave
mov
les
push
outsb
adc
and
les
dec
sti
xchg
movsb
push
sbbl
mov
icebp
dec
clc
xor
inc
push
lods
jle
sbb
cmp
lret
popa
jecxz
js
pop
adc
rcrb
cmpsl
cs
lahf
sub
push
rolb
xchg
inc
dec
push
mov
stos
sub
jecxz
loop
stc
loop
imul
mov
loopne
dec
cmpsl
test
cmc
das
push
loopne
mov
scas
adc
mov
xor
mov
or
test
cmp
sbb
xor
fsubs
iret
xchg
out
xor
mov
shrl
pop
orb
inc
push
in
adc
mov
pushf
inc
xor
out
idivl
jle
loope
xchg
flds
adc
push
rclb
into
aad
dec
adc
inc
push
cmp
xor
nop
mov
mov
add
inc
or
and
lods
ljmp
xchg
and
mov
mov
xchg
sub
mov
pop
movsl
dec
jl
add
mov
out
pusha
xor
and
mov
ds
cmp
call
loop
and
mov
outsb
imul
shrb
dec
sar
je
xchg
sti
ret
popa
mov
xor
sub
pop
inc
sar
cmp
icebp
pop
push
inc
negb
lret
fistpll
cmp
insl
ret
push
xor
notb
jp
mov
in
ljmp
pusha
lahf
cltd
in
out
add
push
jns
movsl
cmp
push
or
xchg
data16
outsl
sti
sub
add
sahf
or
repz
jg
out
aas
in
adc
pop
lock
pop
rcll
mov
cwtl
lahf
mov
pop
push
sbb
sbbb
cmpb
lea
push
mov
popa
jge
movsb
sub
push
call
pop
inc
jbe
lcall
repz
xchg
or
lret
movsl
xor
sub
mov
jp
dec
aam
fsubp
lock
ficomps
pusha
dec
mov
jb
or
mov
repz
pop
ffree
aas
cmpl
inc
adc
mov
xchg
add
xchg
out
inc
mov
sbb
in
ret
add
aas
pop
out
sub
gs
outsb
xor
push
movsb
mov
or
imulb
fcomi
push
push
dec
into
mov
jno
add
cmp
cwtl
mov
mov
cmp
push
mov
inc
sub
jp
mov
hlt
sbb
outsl
jl
dec
orb
cmpl
cmp
stos
fstps
popf
xchg
mov
incb
out
cmp
mov
mov
scas
loop
repz
or
sub
mov
adc
lret
popf
cmp
or
cmp
lods
push
rclb
push
add
push
adc
or
push
mov
sbb
sbb
pop
xchg
xchg
lea
shrd
je
pop
cmp
xchg
fnstsw
ret
cltd
mov
ja
dec
mov
adc
dec
mov
mov
mov
subl
add
pop
jmp
jmp
rcll
stos
push
sbb
or
adc
daa
movsb
test
sbb
sbb
pusha
or
lods
mov
rcl
inc
cmpsb
int3
jg
pop
pop
in
xchg
mov
pop
xorl
shr
jl
rcrb
mov
inc
and
push
xlat
mov
mov
mov
je
scas
mov
iret
rcrl
das
add
out
xchg
sahf
dec
jne
pop
jge
addr16
xchg
fs
push
popf
sbb
scas
ljmp
shlb
popf
mov
push
sar
ror
rcll
dec
dec
ss
mov
cmpsb
je
and
icebp
outsl
test
adcb
lods
scas
ds
and
mov
or
insl
sbb
sbb
sub
jg
or
popf
iret
fidivs
sbb
test
mov
in
xchg
push
cmpsb
ds
ret
push
mov
jns
ja
lahf
pop
sti
cld
loop
mov
sahf
in
and
xlat
mov
inc
loopne
loope
imul
popf
jl
lret
aaa
das
popf
pop
or
repnz
xchg
loopne
pop
add
lcall
test
dec
lret
lcall
mov
inc
aam
lds
test
fnsave
mov
imul
mov
movsl
adc
rcr
shr
cmp
add
or
fbstp
sub
mov
mov
loop
mov
mov
pop
xor
rorb
mov
and
loop
push
jno
xchg
decl
sahf
push
scas
lock
leave
pushf
in
sub
xor
add
sbb
inc
add
popa
shl
mov
or
push
shl
mov
mov
sbb
ds
fdivr
ret
adc
sbb
in
fcomps
jnp
in
aas
or
push
testb
cmp
lret
jecxz
and
sub
sub
mov
xchg
push
out
jo
mov
sbb
cs
out
jae
inc
int
nop
dec
out
mov
xchg
scas
ffree
idivl
cmp
mov
inc
cs
mov
xchg
imul
sub
dec
in
arpl
in
ret
mov
push
pop
mov
adc
sbb
pop
rcll
stc
test
mov
fidivrl
sbb
pop
sbb
lea
lods
or
out
mov
rolb
loopne
cmp
fstps
pop
lret
sub
in
xor
lcall
xchg
jmp
jmp
adc
repz
enter
cmp
movsb
out
jno
cmp
jg
sbb
cs
enter
jno
mov
pop
inc
mov
xchg
xchg
cmp
add
and
popa
repnz
ds
add
and
push
loopne
mov
mov
adc
vmaxpd
add
or
aam
dec
out
mov
pop
hlt
leave
stc
inc
mov
mov
xchg
shlb
mov
sbb
xor
icebp
shrb
sbb
popf
pop
ret
inc
cwtl
or
shlb
xor
jge
pusha
js
test
out
jae
or
xlat
mov
dec
push
clc
inc
cmp
ljmp
aaa
jb
adcl
or
into
std
dec
shlb
nop
aad
out
fmul
inc
sbb
out
fwait
cmp
in
in
mov
repnz
adc
out
enter
rol
lods
jge
xchg
das
repz
inc
not
lret
push
and
push
cld
sbb
and
push
sbb
stc
pop
mov
and
popf
mov
repz
pop
aaa
xchg
sub
sahf
cmc
sub
mov
popa
ret
frstor
sbb
adc
pop
ljmp
jno
mov
inc
dec
xor
enter
lds
icebp
mov
inc
je
adc
jb
jge
movsb
aaa
sub
int
stos
pop
mov
cltd
adc
or
cwtl
mov
movsb
inc
mov
repnz
add
sbb
or
jg
in
jmp
or
pop
mov
lret
xchg
fistpl
mov
xor
pushf
pop
pop
movsb
mov
jae
mov
ljmp
or
ss
into
pusha
jae
out
mov
loopne
push
push
outsb
pushf
add
andl
mov
lea
movsb
add
add
inc
or
sub
movsl
insl
ret
mov
jmp
imul
int
test
dec
insb
jbe
gs
fidivrl
sub
mov
push
add
add
movsb
cltd
sub
lcall
data16
push
test
mov
js
mov
xor
dec
clc
or
inc
imul
jbe
push
iret
dec
xchg
lods
test
cmp
mov
imul
jb
ret
loop
jecxz
xor
ja
xor
push
mov
out
mov
insb
in
movsb
mov
dec
pop
scas
mov
decb
adc
inc
xchg
and
sbb
sub
pop
jb
loopne
lret
sbb
adc
fistl
lea
xor
clc
in
dec
push
fisttpll
adc
mov
arpl
stos
add
rorb
or
mov
mov
sub
sti
add
inc
ljmp
out
in
push
sbb
mov
dec
adc
incl
xchg
outsl
sahf
inc
test
adc
dec
or
cmp
pop
dec
lods
jb
mov
movb
push
mov
cwtl
pop
jp
xor
sbb
jbe
cwtl
pop
mov
fwait
leave
mov
repnz
lret
mov
mov
adc
mov
adc
or
jo
mov
out
and
xor
arpl
xchg
lods
sub
fwait
sbb
push
sub
sub
jno
iret
mov
mov
cmp
xor
mov
shll
add
inc
inc
add
scas
and
loop
add
sbb
ss
inc
jae
push
es
out
sti
fdivl
dec
iret
nop
lret
push
popf
push
sahf
pusha
jno
dec
sub
push
push
dec
xlat
andl
and
jecxz
xchg
ficomps
mov
in
inc
fdivrl
adc
mov
ljmp
jb
jl
or
sbb
adcl
pusha
scas
sbb
pop
cli
icebp
adc
sub
jle
jp
mov
pop
cltd
xor
cmp
lahf
fdivrs
jne
inc
iret
test
pop
test
clc
stc
es
xor
repnz
ljmp
lods
aaa
cltd
sbb
popl
jp
sub
stc
jae
jae
and
xlat
xchg
test
push
ss
push
data16
add
sbb
sub
in
adc
cmp
xor
jae
movsl
sarl
cmp
xchg
sti
inc
mov
add
push
movsb
or
dec
jne
adc
in
xor
rcr
ret
mov
adc
mov
sbb
xchg
push
inc
xchg
sbb
inc
iret
xorl
xchg
leave
xchg
mov
push
inc
adc
push
in
fwait
out
les
or
add
sbb
outsl
add
jnp
test
pusha
pop
push
fstpt
xorb
andb
lahf
imul
lds
push
mov
daa
mov
fnstsw
xor
or
orl
and
sbb
lock
xchg
shrb
jp
inc
shrb
out
pushf
mov
mov
mov
jp
inc
out
pusha
sub
pop
insb
fdivl
xor
push
inc
iret
sbb
test
imul
jo
sub
ljmp
fs
xchg
je
or
pop
jb
out
and
icebp
lret
cmp
in
loopne
push
mov
fwait
or
pop
adc
loop
xchg
ss
pop
pop
fmul
mov
insl
sub
cmp
pushf
scas
fidivrl
in
jo
fimull
sbb
test
dec
xchg
push
xor
push
mov
sahf
pushl
nop
shl
jg
xor
lahf
repnz
or
pop
and
cs
in
subl
sti
push
daa
fimull
xor
cltd
lahf
adc
addr16
xchg
leave
push
dec
mov
cmp
push
lcall
stc
xchg
iret
jns
mov
sbb
mov
mov
inc
mov
xchg
fistl
lods
mov
fcmove
outsl
inc
insl
push
jne
jb
add
and
adc
rcrb
ficomps
lods
or
add
jb
popl
hlt
stos
rolb
imul
ljmp
pop
dec
mov
jb
popa
mov
adc
mov
sub
lret
int3
jle
arpl
adc
je
or
imul
mov
mov
scas
xor
gs
cmp
or
and
mov
sar
nop
mov
inc
pop
cmpsb
xorl
movsb
xlat
mov
loopne
cwtl
adc
ljmp
stos
cmp
enter
mov
inc
adc
push
mov
aaa
repnz
mov
arpl
push
icebp
mov
dec
daa
xorl
xchg
lret
sbb
cmp
xor
push
lret
push
stos
scas
popa
es
ljmp
pop
shl
dec
push
fsubs
mov
xchg
lods
jne
arpl
or
cmp
xor
and
pop
aaa
mov
sbb
out
mov
adc
cmp
fwait
and
mov
jb
mov
enter
push
inc
inc
push
pop
mov
dec
fs
stc
cmpsb
int
insb
mulb
sub
test
lea
outsl
dec
mov
mov
pop
test
enter
or
out
xchg
push
jmp
clc
adc
je
push
test
xor
loopne
add
jno
xchg
mov
and
std
addb
icebp
lahf
mov
xor
push
push
and
loop
icebp
mov
lahf
mov
cs
fcmovbe
mov
or
or
push
xchg
mov
pop
fdivs
push
out
pop
ljmp
stc
lcall
mov
ficomps
repnz
push
rorl
cmp
or
xor
dec
inc
fisttpl
lcall
std
jno
xor
push
loop
popf
sub
mov
sbb
pop
xor
out
adc
cmp
jns
or
mov
movsb
cmp
xchg
xchg
xor
or
push
addr16
xchg
enter
aad
sub
lea
push
sub
pushf
pop
out
xchg
or
adc
es
pop
into
push
imul
mov
xor
repnz
xchg
arpl
jae
int3
ret
cltd
cmp
out
sbb
std
cld
sbb
es
shlb
mov
fs
pop
push
mov
lock
fcmovne
mov
dec
pop
or
cmp
or
xor
movsl
addr16
dec
xor
fwait
dec
dec
push
xchg
and
outsl
xlat
mov
shll
das
pop
or
push
cmp
cmp
or
or
inc
in
ret
push
lret
sub
ret
rorl
sbb
ljmp
push
out
scas
push
adc
jbe
sbb
fucomip
pop
mov
inc
xchg
mov
std
push
mov
push
repnz
test
sarl
adc
out
push
or
inc
pop
das
push
mov
loope
or
lods
xchg
in
pop
push
or
mov
fisubl
pop
repnz
stos
dec
inc
insb
cmp
push
lds
cltd
shl
cld
xorb
sub
xchg
dec
sub
scas
sub
xor
or
xchg
sub
decb
aam
and
test
mov
lcall
sub
lock
mov
add
xor
mov
insb
jecxz
push
mov
jl
push
add
in
ds
sbb
sub
out
repz
cmp
add
fists
sub
sub
fwait
aad
lds
icebp
sbb
inc
out
rcrl
scas
sahf
mov
jg
jae
sub
loop
shrl
sbb
sbb
jl
jmp
scas
jae
clc
cwtl
scas
mov
xchg
xchg
aam
sub
inc
sbb
cmp
lds
xchg
clc
sbb
adc
inc
cmp
xchg
xchg
mov
inc
jno
ljmp
push
mov
jne,pn
xor
ljmp
mov
das
out
add
jne
lahf
cmpsb
xor
mov
cmp
and
push
fiaddl
mov
int
mov
inc
int3
das
insb
ss
fstpl
insl
aas
push
cmpb
js
mov
sub
xchg
add
insl
das
ss
cmp
sbb
arpl
jno
mov
in
ficomps
mov
mov
aaa
icebp
repz
std
dec
aad
outsb
pop
insl
pop
pop
fidivl
cmp
add
pusha
cmc
xor
push
or
cmpsl
ljmp
xchg
mov
and
sahf
push
leave
sub
shll
in
xchg
pop
movsl
outsb
aaa
imul
pushf
je
nop
xchg
xor
ss
mov
push
fists
or
jo
xor
push
sub
jle
push
inc
iret
add
andl
test
add
mov
jp
in
xchg
xor
mov
popf
jbe
in
fcompl
push
bound
and
call
sbb
fsubl
js
lds
clc
pop
out
in
arpl
cmp
xor
cmpsl
jb
sbb
xchg
pop
inc
pop
xchg
cmp
cmp
cmp
fildl
call
sbb
add
outsb
imul
and
hlt
cmp
leave
outsb
inc
mov
ss
adc
inc
hlt
call
in
dec
push
dec
jp
cmc
aam
insb
ljmp
das
adc
mov
push
popa
dec
mov
ret
aad
cwtl
insl
jae
arpl
outsl
jnp
sahf
xchg
nop
pop
inc
daa
pop
loop
mov
xchg
xor
leave
ds
test
rolb
mov
fisttps
inc
mov
andl
add
das
stos
shl
push
jo
adc
insb
jno
popa
stos
mov
xchg
and
ja
dec
jp
mov
nop
lret
bound
sbb
cld
mov
scas
push
and
std
mov
rcrl
mov
mov
std
cmp
es
push
push
fcmovnu
das
lds
outsb
into
pop
sbb
xchg
test
in
cwtl
xchg
mov
sbb
jns
imul
mov
xor
pop
dec
stos
fwait
or
ret
bound
mov
mov
lret
mov
lea
cmpsb
mov
sar
pop
cmp
movsb
add
or
fldl
push
add
bound
mov
push
hlt
sbb
xchg
jle
mov
mov
lods
inc
xor
in
adc
push
or
stos
scas
lret
dec
xchg
decl
adc
push
push
lahf
xchg
jbe
cli
adc
sbb
addr16
andl
hlt
lods
rdmsr
cmp
and
mov
cmpsb
or
add
inc
xchg
or
jmp
mov
push
cld
cs
ficomps
movsl
xchg
jae
cmp
sub
xchg
fs
pop
in
das
std
fdivrl
or
inc
add
inc
mov
adc
cmp
jmp
mov
and
lret
pop
das
insl
mov
test
xchg
shlb
out
fldt
fs
or
push
movsb
push
adc
stos
push
nop
in
aad
and
idivb
pop
mov
sti
ficoms
cmpsl
cmpsb
cmp
lock
mov
rorb
dec
mov
mov
mov
lret
xchg
dec
scas
dec
aam
push
cld
push
fadds
ret
xchg
mov
loope
jb
enter
insl
pop
sub
mov
jl
clc
cwtl
add
jge
push
je
mov
roll
cmpsl
cmp
mov
cmc
mov
js
in
xor
in
xchg
sbb
out
or
lret
movsb
and
imul
sub
dec
into
mov
mov
xchg
mov
mov
imul
cmp
inc
sbb
push
das
mov
mov
cli
pop
mov
ds
mov
sbb
notb
dec
push
jge
fimuls
xchg
clc
mov
xlat
push
shlb
cmp
lcall
pop
sbb
into
dec
ds
cltd
lahf
mov
in
insl
push
sbb
or
push
jb
sub
dec
sahf
pop
sbbl
orl
cmpsl
sub
lock
jge
cmp
stos
out
test
mov
jmp
fdivs
mov
lea
int3
ret
fs
mov
and
cld
xor
push
push
push
mov
jp
adc
cmpsl
inc
dec
xchg
dec
sbb
dec
or
repz
in
enter
test
sbb
xlat
jg
rcr
push
in
mov
fimull
movsl
push
jns
mov
mov
in
xchg
test
cmp
pop
adc
push
dec
or
and
dec
lock
mov
and
and
sbb
and
daa
out
lret
js
xor
lcall
sub
shll
cwtl
cmp
sub
cltd
pop
call
xchg
inc
push
lods
sub
push
clc
jnp
aad
push
xor
aam
pop
fistl
mov
ja
iret
imul
daa
adc
rol
into
aaa
pop
stc
aaa
pop
push
inc
adc
cli
mov
jl
rcl
adc
xchg
mov
xchg
inc
pusha
jmp
mov
adc
fnsave
add
xchg
sbb
sub
xor
push
pop
and
out
pop
mov
outsl
adc
pop
ret
aas
sahf
or
rolb
or
fsubs
add
jle
repnz
ficoms
mov
mov
xor
pop
add
clc
mov
adc
sub
inc
mov
xchg
jb
sahf
das
add
push
aas
nop
push
out
loop
in
xchg
mov
or
fsubrl
push
and
imul
sub
push
pop
ror
dec
adc
jae
in
sti
pop
cmp
divl
pop
mov
movl
xor
idiv
mov
mov
fsts
out
jg
stos
xlat
or
mov
ret
cmpsl
daa
loope
lret
test
fsubp
mov
and
cli
imul
inc
int3
push
ret
stos
sahf
cs
mov
cmp
pop
test
lods
insl
imul
aad
xchg
cmovne
iret
xchg
outsb
or
xor
cmc
cwtl
bound
in
cmc
shrb
shlb
lock
test
lret
es
aam
adc
rorl
or
repnz
push
jnp
mov
jmp
xorb
std
sbbb
add
addl
lods
aad
jl
and
aaa
pushl
ss
in
and
movsb
aam
scas
mov
cmp
int
rcr
push
pop
das
test
adcb
pusha
inc
add
inc
pop
push
xchg
inc
add
sbb
or
arpl
jg
popa
inc
push
bound
loop
ret
movsb
mov
imul
outsb
push
jle
mov
fidivrs
jne
fwait
jo
ja
xor
and
or
inc
cld
sbb
gs
adc
mov
lods
push
popf
xchg
es
fistpll
mov
imul
dec
pusha
and
mov
push
pusha
mov
in
cmp
jb
sub
cmp
mov
or
mov
dec
xor
cmc
stos
add
mov
std
pop
cmpxchg
dec
fwait
scas
dec
lret
or
dec
inc
dec
stc
nop
test
ljmp
and
xchg
cmpsb
dec
sahf
outsl
inc
loopne
mov
mov
cmp
mov
cmp
inc
mov
stc
out
test
cmp
jnp
and
add
xchg
adc
sbb
or
sbb
iret
push
movl
or
lds
out
push
fsubrl
dec
mov
push
les
pop
mov
sbb
iret
jle
dec
icebp
scas
adc
jnp
add
addr16
sbb
decb
and
in
xor
pop
aam
pop
xor
js
fisubrs
mov
mov
xor
aad
push
cli
pusha
dec
mov
icebp
add
inc
pop
push
or
xchg
xor
jge
sub
push
dec
dec
lods
and
andl
adcl
or
fldcw
idiv
push
mov
mov
fildll
pop
cs
cwtl
xchg
inc
jne
test
cmp
jae
dec
dec
fsubrl
cmpsb
bound
xchg
and
imul
inc
sbb
push
pop
call
mov
std
ljmp
test
pop
and
call
cmp
add
das
push
fwait
rcrb
or
frstor
push
popf
add
mov
mov
sub
sti
imul
sahf
cwtl
xor
xorb
sbb
andb
mov
inc
hlt
mov
push
lods
jp
xor
fistps
dec
adc
jb
push
cmpsb
dec
roll
add
cmp
push
shll
stc
es
xchg
mov
cs
adc
and
ret
mov
or
out
les
adc
lds
or
jo
mov
shlb
xor
pop
jno
jbe
xor
mov
push
cwtl
cld
test
sub
and
jecxz
scas
xchg
dec
fldt
mov
push
inc
xchg
sahf
rolb
cmpsb
popf
push
dec
data16
aam
cmpsb
lock
fcoml
test
cmc
shrb
dec
aad
xchg
jns
adc
pop
ljmp
in
adc
cmp
cmpb
mov
pop
xchg
cs
pop
add
mov
or
hlt
test
aam
or
out
mov
push
dec
push
jecxz
enter
icebp
iret
movsb
pushf
repnz
cli
jg
pop
fnsave
jmp
sahf
ja
add
movsl
int3
test
dec
sbb
pusha
mov
mov
mov
mov
inc
jbe
stc
outsb
push
dec
lcall
mov
xchg
loop
fsubs
lcall
cltd
sbb
xor
dec
bound
insl
add
jbe
inc
lret
add
pop
jae
rorb
push
push
mov
mov
inc
push
adc
pushf
push
out
dec
xchg
add
insl
cmp
repnz
das
dec
dec
sub
mov
shl
add
mov
cmp
pop
shrl
dec
lods
movsb
movsb
imul
data16
pop
ljmp
cmp
mov
mov
push
les
jecxz
push
in
outsb
xchg
popf
adc
xor
xor
ret
cmp
div
mov
inc
je
icebp
leave
in
leave
insb
inc
cli
xor
jle
cmpl
movsl
sub
xorb
push
xchg
dec
pop
mov
in
adcl
push
jnp
pop
mov
inc
xchg
sti
add
rorl
xor
and
pusha
jp
jle
mov
push
add
add
xor
sbb
idivb
pop
mov
mov
add
in
into
or
not
fwait
mov
and
jle
jg
mov
js
push
pop
fs
add
sbb
xor
les
jl
cli
into
out
icebp
inc
rcrb
pushf
or
mov
repnz
lds
add
lea
out
imul
out
es
pop
jno
adc
dec
addr16
inc
loope
subb
xor
stos
mov
mov
das
sbb
rclb
and
ds
sti
outsb
adc
stos
and
adc
or
and
pop
mov
jne
cmpsb
mov
cmp
lcall
pushf
addb
aad
lret
ss
out
pop
inc
mov
pop
pop
aaa
mov
je
pop
hlt
cli
sub
scas
cmp
mov
adc
jmp
out
sahf
add
cmp
pop
ficompl
std
mov
out
pusha
jp
out
or
imulb
dec
ds
rcrl
add
push
and
in
iret
mov
cmpsl
mov
pop
mov
sbb
pushf
pop
test
ja
xchg
or
insl
ljmp
inc
mov
push
lock
subb
push
mov
aam
push
dec
test
xor
iret
outsl
inc
aas
and
jno
pop
cmp
or
jp
psadbw
lock
fs
pop
cmpl
dec
scas
xchg
and
ds
jno
nop
ret
outsb
scas
pop
fdivs
push
mov
int
stc
test
push
mov
mov
mov
sbb
leave
movsb
test
push
mov
xchg
int3
aam
mov
adc
jns
mov
insl
cwtl
mov
imul
in
pushf
inc
jp
sub
xor
mov
repz
jmp
stc
shrl
fimull
lcall
call
inc
out
sub
lock
adc
jle
push
pop
adc
push
push
inc
dec
repz
mov
sub
daa
dec
mov
push
lahf
scas
loopne
add
insb
or
xchg
and
or
ss
mov
pusha
cld
sbb
sub
out
repz
cmp
xchg
out
xchg
rcll
addl
std
in
fimull
aas
stos
das
popf
stos
xchg
dec
dec
mov
mov
aam
mov
push
test
loop
je
bound
aam
idivb
lock
xchg
sarb
mov
adcl
dec
sub
and
es
xchg
mov
ret
pop
das
fs
test
movsl
outsl
cltd
adc
cmp
in
in
adc
je
and
data16
push
cwtl
lcall
shlb
loop
lods
pop
aad
movb
sbb
sahf
iret
ret
xor
movsl
aam
cmp
jae
and
mov
ss
xchg
jb
cmp
cwtl
mov
enter
sti
push
int
lcall
int3
xor
pop
into
pop
push
imul
and
and
scas
cld
lcall
icebp
fiaddl
movsl
outsl
int3
ss
insl
nop
push
pop
sub
jnp
popf
xor
add
aas
add
ds
fwait
in
fs
add
inc
adc
sahf
imul
mov
sbb
xchg
add
adc
lds
jo
mov
pop
inc
push
mov
out
add
mov
sub
and
les
ss
test
and
movsl
sub
or
cmp
sbb
push
sub
mov
imulb
fisubl
mov
push
or
add
and
testw
fcmovb
ja
int
pop
jnp
popf
mov
mov
lods
or
mov
sbb
sbb
add
shlb
rcr
scas
fwait
mov
add
sbb
push
fisttps
add
add
ret
repz
inc
pop
mov
repnz
in
cltd
stos
rolb
xor
mov
pusha
jmp
pusha
idiv
fcmovu
mov
add
pop
repnz
add
jnp
sub
push
mov
inc
push
int
push
mov
cli
sub
loopne
sub
jmp
push
rorb
xchg
inc
and
jp
pop
cmp
jl
sub
mov
sbb
add
gs
cld
sbb
mov
out
or
call
decb
cmp
gs
dec
sbb
inc
lahf
mov
add
jmp
sbb
xchg
fdivs
and
cmp
iret
cltd
fiadds
pop
imul
mov
jne
lds
andl
push
loop
dec
rolb
sbb
push
mov
xchg
movsb
rclb
push
xorl
ror
jb
xchg
xchg
insl
mov
mov
adc
arpl
xchg
rol
dec
adc
sbb
cmp
stc
call
call
or
addr16
mov
xorl
shr
dec
push
popf
dec
cs
arpl
scas
popa
and
pop
xlat
inc
jge
cmovbe
inc
in
mov
and
cltd
add
loop
je
lds
push
test
pop
xchg
push
lea
pop
stos
imul
insl
mov
mov
jg
xor
mov
cmp
xchg
test
sbb
add
clc
sbb
inc
imul
pop
das
or
lcall
insl
mov
out
cltd
fwait
mov
pop
cmp
scas
out
adc
clc
test
cmp
xchg
xchg
cltd
push
push
out
scas
imul
imul
xor
inc
sti
mov
fcmovb
in
out
pusha
adcl
divl
mov
pop
je
sahf
jg
adc
cmp
xchg
cli
inc
ja
and
stos
clc
xlat
insl
in
mov
data16
sbb
int3
loope
mov
mov
and
jle
or
jo
jno
in
lcall
loopne
insl
leave
dec
mov
jb
aam
jecxz
clc
fisubs
mov
imul
dec
pop
add
and
inc
dec
fdivs
lret
push
out
push
mov
pop
mov
ja
imull
fisubs
xor
in
mov
jle
push
and
int3
xor
inc
add
pop
inc
mov
cmpsl
push
je
leave
cmp
decl
mov
repz
jmp
mov
test
mov
rcrl
pusha
sbb
das
hlt
daa
pop
and
sub
add
bound
mov
mov
dec
clc
jbe
mov
gs
push
jo
jp
mov
clc
xor
fcompl
push
out
xlat
sub
test
out
jp
pop
xchg
push
lret
mov
lds
lret
xor
pop
add
lahf
jle
or
cli
out
xor
mov
clc
paddd
std
dec
cmpl
mov
jae
push
xchg
cmc
insl
lret
and
shl
add
xor
mov
dec
sahf
mov
push
mov
mov
out
push
adc
or
jmp
dec
test
push
inc
mov
dec
pop
dec
lds
xchg
adcb
out
mov
daa
add
jp
and
nop
xchg
cs
jne
scas
popa
arpl
sbb
gs
xchg
mov
dec
sub
cmc
cmpsb
mov
sbb
jo
cmp
cwtl
ss
inc
daa
or
jp
jae
cmp
and
rcll
stc
jp
fisttpl
fdivrl
repnz
inc
fdivp
xchg
mov
adc
add
mov
push
test
and
test
out
push
mov
or
and
stc
gs
jae
mov
mov
or
movlps
or
jg
jle
push
push
jno
xchg
test
jmp
mov
sbb
xchg
ljmp
push
lods
push
mov
subb
sbbl
lahf
in
inc
add
mov
gs
inc
jle
jne
aad
sti
mov
scas
int3
cmpsb
jg
mov
test
stos
rolb
lods
les
hlt
xor
jns
fnstenv
int3
xor
xchg
in
mov
jecxz
es
loope
or
pop
nop
add
pushf
int
pushl
or
clc
mov
push
add
sub
stc
sarb
lret
movsl
stc
andl
dec
add
loopne
inc
rcrb
jns
hlt
in
icebp
add
xor
xlat
mov
cmp
mov
or
xchg
icebp
dec
add
sub
lahf
lea
in
inc
inc
sti
xor
cmp
add
mov
cmp
int3
in
mov
in
aaa
or
jae
sbb
dec
pop
push
js
jmp
adc
xor
ja
cs
push
outsl
sub
das
pop
mov
inc
or
dec
jmp
lret
fisttpll
inc
das
in
cli
dec
push
mov
fsubr
pop
clc
lods
loope
aaa
out
fmuls
lods
add
ljmp
sub
adc
jmp
divl
arpl
lret
pop
adc
outsl
stos
push
sarl
into
out
arpl
shll
loope
pop
jne
insl
mov
and
fistl
stos
shr
and
rolb
cmp
sub
les
test
mov
les
aaa
mov
js
jp
lods
dec
ret
cmp
rcr
out
inc
lahf
sub
inc
icebp
pushf
dec
popf
mov
std
lret
shlb
dec
jmp
pop
jmp
inc
xchg
mov
mov
sub
mov
cmp
push
int
pop
or
in
testl
push
sbbb
xor
fdivrp
ret
mov
and
jbe
xor
pop
pop
loope
xor
mov
mov
dec
mov
jo
jg
fcoml
mov
out
xchg
xor
inc
imul
nop
inc
in
mov
dec
jno
cltd
or
and
sub
lds
cmp
mov
jge
lods
jecxz
push
jmp
sbb
inc
push
mov
xchg
xor
imul
adc
movsl
aam
xchg
pop
mov
jle
pop
jno
dec
mov
adc
ljmp
mov
mov
xor
and
push
outsb
cmp
out
xchg
out
out
sbb
in
loope
and
cmp
sub
jmp
xchg
xchg
and
data16
cmp
pop
repz
cmpsb
xor
xor
push
inc
int3
push
mov
xchg
aad
mov
imull
fs
imul
mov
cmpsb
jno
hlt
fadds
in
in
pop
pop
fiaddl
jae
adc
adc
inc
jne
sbb
icebp
fs
jl
hlt
in
and
jle
sbb
das
mov
cmp
push
mul
sub
and
fnsave
and
dec
out
sub
jmp
jnp
or
xor
adc
jnp
and
inc
lock
jne
aam
inc
fistpll
lahf
push
inc
in
test
push
pop
out
pusha
in
icebp
adc
movsb
pushf
fstpl
es
lods
not
cmpsb
mov
jl
fldt
mov
pop
sbb
lock
cmp
out
imull
repz
push
sbb
jmp
xor
pop
loop
cmp
outsb
aas
jb
adc
inc
sbb
pop
pop
cmovae
out
cwtl
pop
test
out
jnp
ljmp
inc
sti
negl
pop
sbb
fcmovnbe
sbb
inc
jl
out
xor
mov
mov
mov
mov
fidivrs
stc
jp
enter
mov
sub
lods
cmp
mov
adc
push
sti
std
in
dec
out
bound
mov
daa
outsl
pop
arpl
lods
inc
jg
xor
movsl
jecxz
fisubs
cmp
sbb
test
icebp
pusha
test
mov
mov
dec
cli
pop
push
repnz
int3
jo
push
push
rol
ret
push
cmc
sbb
imul
mov
loopne
push
incl
xchg
mov
outsb
inc
in
mov
pusha
into
jnp
loop
or
xor
push
jno
aas
and
fiadds
cs
movsb
push
cli
cmp
in
adcb
jle
das
pop
adc
mov
mov
sub
push
inc
stc
andl
es
push
push
cmp
addr16
pop
aad
inc
popf
sub
clc
ljmp
in
fcompl
test
mov
jns
dec
hlt
in
cmc
xchg
popf
int3
iret
mov
xor
jbe
fisubrs
inc
xchg
xchg
lods
test
pop
movsl
out
dec
push
ss
nop
lods
sbb
stos
outsb
repnz
inc
lods
gs
sahf
xchg
orl
test
ret
xor
ss
aam
test
push
in
dec
sbb
or
loopne
push
cmp
adc
mov
aad
lahf
sbb
stos
mov
movsb
mov
mov
sub
sub
or
push
mov
mov
pop
aaa
jns
xchg
pushf
popa
push
jbe
push
push
push
insl
jne
push
in
std
mov
mov
pop
in
outsl
mov
pop
hlt
stc
mov
rolb
ret
pop
call
inc
fcoml
rclb
dec
test
repz
mov
dec
pop
ret
push
and
mov
push
mov
jp
xchg
xlat
lods
cmp
cmpsb
xor
testl
sub
mov
pop
xor
mov
pop
push
fcoml
cli
imul
and
bound
xlat
push
insl
sub
push
cmp
mov
add
jl
sbb
sub
mov
xchg
jle
cmp
int3
and
loop
ret
lret
mov
xor
jae
imul
and
mov
dec
mov
imul
pusha
scas
mov
repnz
scas
xor
daa
jecxz
aad
mov
in
mov
shr
idivb
fcompl
rorb
mov
pop
in
mov
pop
or
xlat
push
icebp
xor
adc
and
xchg
sub
adc
xchg
and
xchg
jge
xor
insl
mov
imul
and
cmp
jmp
mov
sub
jge
mov
rcr
cltd
sbb
push
jle
cmp
mov
sbb
and
nop
adc
js
mov
sbb
stc
fsubrs
xor
mov
and
or
push
or
xlat
mov
mov
xchg
fprem1
es
stc
adcb
stos
insw
or
pop
mov
mov
cli
push
data16
ud2
sbb
dec
inc
aas
inc
sbb
xlat
cld
push
jbe
pop
dec
mov
nop
dec
sub
lock
mov
inc
pop
imull
sbb
xlat
pop
pop
fmuls
xorb
push
sub
hlt
imull
nop
sti
jmp
cmc
movsb
xlat
sahf
lock
imul
lcall
mov
rclb
dec
test
int
dec
shll
jp
insb
push
addl
ljmp
jno
repz
push
outsl
push
push
outsl
xchg
jnp
sbb
mov
push
pushf
insb
mov
sbb
or
sbb
movsl
insb
gs
rorb
rorl
sti
insb
outsl
pusha
jp
clc
ja
repz
adc
lret
push
and
out
outsb
rol
mov
loopne
shll
jns
sbb
jnp
repnz
xchg
pop
test
ret
fdivl
inc
lret
sbb
adc
adc
sub
jp
lds
dec
pushf
rcrl
add
adc
daa
lcall
mov
movsl
push
fsubr
test
leave
cmovns
dec
lcall
dec
mov
test
movl
sbb
cmpsb
mov
dec
sub
call
pop
mov
or
iret
out
inc
lock
inc
aad
iret
jmp
clc
and
fs
stc
sub
movsb
push
jge
js
sub
outsl
cmp
pushf
or
mov
xlat
xor
sbb
and
ljmp
inc
das
jp
mov
cwtl
xor
sbb
push
mov
lcall
add
pop
nop
push
xor
adc
call
xor
mov
and
push
pop
adc
shll
and
push
imul
sbbb
in
mov
push
dec
dec
ljmp
andps
outsl
jge
push
adc
test
xor
add
aas
push
stos
pop
sbb
jg
sbb
lcall
dec
aaa
test
xor
bndstx
or
pop
add
rcll
cmp
je
sub
push
cltd
mov
arpl
jo
insb
dec
movsb
jns
pop
loop
stc
cmp
mov
test
hlt
fucom
mov
out
in
cwtl
cmp
or
nop
mov
scas
test
mov
imul
pushf
push
mov
int3
or
test
cs
outsb
ret
push
pushf
fdivr
aas
loopne
push
icebp
out
test
pop
or
push
out
inc
testb
xchg
mov
repnz
add
xlat
jecxz
insb
inc
sbb
xor
adc
sbb
loopne
cltd
test
and
mov
adc
cmp
push
test
mov
jecxz
aam
pop
pop
scas
inc
sar
popa
adc
sub
xor
imul
lcall
je
daa
fistpl
or
icebp
gs
lret
imul
aas
add
adc
in
push
or
inc
arpl
in
xchg
or
dec
pop
cs
gs
scas
add
sub
xor
andb
mov
inc
pusha
xchg
sar
jns
aas
push
pop
sbb
jns
cmc
mov
pop
sbb
jo
ret
xor
or
lods
das
adc
jns
or
faddl
inc
or
mov
scas
add
inc
mov
jg
mov
mov
pop
ds
pop
fs
push
insb
jecxz
out
leave
icebp
push
mov
cmp
jno
aas
push
pop
mov
sbb
lea
inc
mov
call
data16
ficoms
icebp
ds
xor
or
jmp
xlat
and
cmpsl
data16
push
leave
add
je
fbstp
dec
ja
xchg
mov
or
push
fstpt
daa
cmpb
in
adc
das
sub
mov
and
mov
dec
add
bound
sarb
ret
lods
lahf
pop
push
pop
xor
inc
shr
jo
push
add
aam
stc
in
lods
jb
jge
stc
clc
out
mov
push
sub
lods
mov
and
aam
test
cmpsl
repnz
dec
or
and
and
jp
inc
ret
xchg
push
cwtl
gs
xchg
mov
mov
es
xchg
pop
xchg
rorb
xchg
mov
in
jno
mov
stos
fdivrp
mov
sarb
in
aad
jmp
sub
mov
add
test
ficoms
jo
rorb
enter
jb
dec
addr16
push
sub
out
adc
popa
mov
vphaddwd
xchg
or
pop
repz
stos
pop
cmp
mov
loope
push
mov
in
mov
inc
int3
aad
into
out
imul
test
or
jno
dec
mov
mov
movsb
xchg
std
cli
or
xor
gs
daa
fldl
movl
or
cmp
push
jp
lea
push
adc
cmpsb
adc
shlb
mov
pop
cmp
out
andl
pop
mov
adc
pushf
and
nop
inc
jmp
mov
outsl
or
pop
push
blcic
test
mov
hlt
fstpl
daa
mov
mov
shlb
movsb
lea
fwait
sbb
ljmp
jo
in
out
popf
fstps
push
lret
pop
es
leave
jl
inc
jl
sub
xor
add
fwait
out
lahf
arpl
adc
repz
or
adc
cmpl
mov
sub
jns
sub
movsl
enter
mov
pop
xchg
pop
lcall
push
or
add
mov
es
cwtl
outsb
sbb
cmp
xchg
sbb
cmpsl
mov
lcall
sti
mov
xchg
push
lahf
int
sbb
repnz
or
xchg
sub
push
adc
testb
insb
test
mov
push
lods
in
vcvtdq2pd
js
push
repnz
js
lahf
sbb
sarl
mov
cmp
lret
xlat
stc
push
movb
sbb
pop
cmc
push
mov
lock
aas
pop
push
mov
stc
lods
sub
ret
test
xchg
ficomps
lock
mov
lret
xchg
sahf
fnstsw
hlt
nop
adc
out
arpl
xor
sub
or
xchg
stc
cmp
pusha
xchg
repz
outsl
mov
fidivl
pop
dec
pop
scas
jb
and
sub
cmp
pop
fstps
imull
push
mov
fidivs
sti
mov
call
lcall
clc
hlt
outsb
add
jl
mov
sub
pop
inc
mov
mov
cmpsl
pop
stos
mov
xor
imul
mov
sbb
mov
inc
mov
jmp
out
out
sbb
lret
gs
sub
aam
into
mov
dec
loope
aaa
mov
jb
dec
sub
out
xor
and
sbb
adc
mov
cmp
test
ret
jnp
repnz
and
mov
pushf
lods
sbb
fcom
outsb
pop
xchg
xchg
mov
jno
mov
pop
push
sbb
sbb
and
scas
push
movsb
or
cmpsb
pop
push
test
xor
sub
dec
clc
inc
pop
jbe
dec
loop
cmp
adc
int3
jae
dec
dec
mov
push
lcall
lods
or
push
mov
inc
sub
xchg
mov
push
sub
mov
ljmp
rclb
jge
gs
sub
loopne
mov
xor
ljmp
shll
dec
nop
pop
jg
test
dec
dec
js
cld
pusha
pop
and
mov
ss
sti
inc
xor
cltd
or
cmpsb
or
mov
mov
lahf
psrld
ret
cwtl
sbb
jecxz
jne
mov
mov
jle
xchg
sub
sub
icebp
cmpsb
or
outsb
adc
mov
das
mov
scas
mov
cwtl
jg
pop
sbbb
fisubs
adc
stos
add
rolb
mov
xchg
pop
ds
cmp
sub
lret
mov
adc
sub
sbb
leave
test
mov
aaa
xor
xor
jnp
xor
inc
jno
sub
sub
imull
or
cmp
js
adc
icebp
xchg
fisttps
pop
sbb
mov
sbb
sti
sbb
es
mov
lods
aad
fisttpl
xor
and
int
add
dec
and
inc
add
aas
nop
and
adc
ja
xchg
xor
mov
mov
cmp
sbb
dec
enter
xor
fcomip
mov
pushf
addr16
mov
dec
cwtl
js
jo
data16
mov
jo
rolb
aam
pushf
imul
inc
add
and
jp
in
add
fcoms
dec
cmp
push
dec
sahf
and
popa
mov
mov
jo
mov
ds
inc
adc
imul
stc
cmp
aas
jae
xchg
fisttpl
sub
add
loop
push
xor
cmp
and
ret
sbb
leave
out
mov
jns
aaa
repnz
or
mov
sahf
scas
mov
pop
and
mov
sub
rcrl
cmpsl
out
and
jb
inc
popa
fimull
push
add
inc
imul
inc
in
decb
xor
pop
xchg
adc
addr16
mov
movsb
fxtract
sub
out
insb
jp
enter
stc
adc
dec
rclb
movsb
pop
lds
aam
ds
les
imul
sub
xor
xor
mov
sub
sbb
aam
mov
inc
lret
xchg
add
jg
std
rorb
mov
push
rolb
jg
test
pop
dec
sbb
leave
push
dec
adc
in
rclb
int3
or
shl
and
jnp
int3
fcoml
adc
push
lret
sub
xchg
in
cmc
in
mov
push
fwait
stos
ret
adc
repnz
mov
loop
cmc
add
xchg
lret
mov
icebp
in
stos
xchg
add
sar
imull
sub
insl
or
dec
xchg
icebp
shrb
out
cmp
jno
imul
sub
jle
mov
cmp
cmp
das
movsb
pop
xchg
call
jle
mov
popf
or
fisubl
mov
push
mov
push
jmp
cltd
adc
enter
inc
jle
adcb
add
pop
addr16
testb
lret
rcrb
cmpsl
lods
pop
xor
push
mov
jl
push
mov
inc
out
out
imul
add
mov
test
mov
mov
push
stos
pusha
gs
iret
std
imul
add
dec
in
sahf
outsb
sbbl
mov
xorl
pop
xor
outsl
sahf
gs
imul
inc
mov
scas
movsl
xchg
xchg
xor
test
mov
or
lahf
mov
xor
mov
hlt
cmp
mov
mov
adc
scas
testl
jmp
idivl
push
rep
data16
movsl
daa
lods
inc
mov
arpl
in
pop
ret
mov
out
pop
js
dec
cmp
dec
or
xor
sarb
fstps
mov
fiaddl
test
sub
ss
adc
push
xor
cltd
dec
xchg
cmp
jge
ret
push
cmc
sti
in
mov
adc
pop
add
or
push
sbb
pop
shll
xor
push
hlt
add
das
aam
aam
cmp
mov
jmp
movsl
push
xor
pop
mov
dec
fs
and
xchg
jp
mov
push
and
jg
mov
js
mov
xor
mov
fwait
roll
andl
fdivrs
pop
fsubrp
xor
mov
dec
lea
mov
sbb
fldcw
jmp
pop
xor
push
sub
mov
lea
frstor
shll
cli
sub
cltd
stos
aas
sarl
arpl
int3
imul
cmp
rcrb
cmp
jnp
jecxz
scas
loope
mov
and
icebp
sbb
xchg
adc
xor
das
sub
pop
test
mov
and
mov
mov
inc
mov
xchg
scas
out
cli
call
add
add
fisubs
pop
fnstcw
push
dec
stos
cmpsb
shrl
movsb
mov
testl
dec
add
dec
add
add
mov
lret
mov
outsb
in
rclb
cmp
aad
in
xor
add
pop
lcall
in
jp
pop
ja
add
aam
pop
jecxz
jmp
xchg
dec
hlt
ds
sbb
jl
lods
loope
pushw
stos
cs
jle
mov
sahf
or
sbb
push
test
push
fdivp
inc
push
adc
in
sbb
cmc
scas
push
decl
or
xchg
sub
inc
add
pop
ljmp
lcall
xor
mov
xchg
aas
and
pop
mov
cmp
mov
pop
mov
cmc
mov
adc
repnz
mov
orb
adc
in
xor
stos
push
push
sbb
push
jbe
add
stos
adc
push
pushf
dec
stos
shlb
dec
xorb
sbb
xchg
pop
sub
jle
call
jns
out
jae
stos
inc
lock
inc
xchg
dec
dec
push
mov
mov
add
cmpl
mov
call
add
lds
jmp
test
imul
mov
xor
inc
mov
aas
mov
cli
sub
pop
xchg
das
pop
adc
inc
xlat
pushf
bound
rcr
aas
push
xor
or
out
add
or
aas
xchg
outsl
adc
sbb
xchg
pop
fisubrl
dec
cmp
push
movsl
std
xor
gs
test
in
mov
pop
dec
movsb
fiadds
enter
mov
push
insl
push
mov
push
sub
xor
loope
ss
mov
mov
mov
sbb
cmpsb
jle
pusha
pop
push
sub
in
enter
cmp
xchg
xchg
pop
xchg
fistpl
sar
inc
pop
sbb
adc
mov
add
popf
sahf
lahf
push
inc
xor
int
loopne
into
xchg
int
push
mov
adc
mov
lret
pop
int3
sbb
vmovhpd
and
or
pop
jnp
mov
inc
pop
sub
daa
insl
jb
fnstcw
xchg
inc
sbb
cmc
daa
stos
cs
das
cltd
push
xor
lock
mov
idiv
dec
movsl
xchg
and
add
add
jg
dec
fdivrs
add
scas
jecxz
xor
inc
negb
scas
xor
push
repz
movsl
push
and
es
xchg
jg
call
rcrb
sbbl
outsb
popf
enter
pop
sbb
jne
mov
jnp
lret
shlb
gs
jmp
pop
jle
add
pop
lahf
or
pushf
int3
jo
jp
push
add
push
insl
test
inc
lahf
fcmovne
out
insl
add
lock
sbb
and
lahf
mov
dec
lahf
xchg
xchg
push
lahf
subl
icebp
mov
jns
call
cmovnp
arpl
xchg
inc
push
inc
inc
sub
push
or
lret
xor
dec
mov
xor
leave
mov
ficompl
ja
mov
jg,pt
sahf
push
jns
sbb
out
outsl
movsl
jg
mov
pop
pusha
insb
sub
sahf
mov
addl
jns
xor
fs
movsl
insb
push
mov
out
mov
push
test
shlb
addl
bound
push
push
and
adc
ljmp
addr16
cmp
mov
addl
adc
jle
push
in
sub
push
push
lret
fdivp
cmpsb
mov
das
mov
cmp
sbb
add
stc
xor
testb
dec
adc
mov
inc
sbb
mov
push
xchg
push
loopne
stos
push
push
fcmovnb
adc
mov
addr16
bound
enter
mov
mov
stc
xchg
cmp
fsubrl
loopne
sbb
fisubs
push
stos
pop
pusha
mov
or
cmpsb
push
jno
mov
out
xor
movsl
aam
cmp
das
cld
or
rcrb
xchg
rclb
fnstcw
xchg
call
test
add
xchg
pop
inc
mov
int
loopne
je
xor
jge
sbb
pop
loop
gs
scas
pop
mov
cwtl
popa
mov
dec
divb
dec
fcomps
jnp
sbb
and
aas
xchg
dec
scas
sbb
pop
fnstenv
dec
jg
ljmp
jp
sbb
or
push
xchg
subl
lcall
imul
jg
ret
cmp
not
xchg
rcr
test
bound
jbe
pop
push
pop
mov
cmp
xchg
mov
call
pushf
fsubs
cwtl
push
mov
pop
adc
test
inc
arpl
gs
repz
xchg
push
ja
push
pusha
xchg
ret
pop
adc
lret
or
nop
mov
int
xchg
inc
dec
adc
shrl
test
popa
ljmp
out
xchg
in
popa
stos
pop
mov
sbb
fisttpll
jg
mov
mov
dec
pop
stos
sar
push
addr16
arpl
nop
adc
lds
cli
lret
fsubl
inc
movsl
outsl
test
popa
dec
les
xor
subl
and
mov
pop
sub
test
pop
jo
lea
jnp
adc
mov
or
dec
fnstcw
inc
inc
mov
push
sarb
mov
xor
repnz
out
int
add
test
push
push
sub
in
adc
or
sbb
dec
lret
cmpsl
test
add
mov
mov
cmp
arpl
sub
xor
cmp
dec
dec
mov
cmpl
push
jle
cmp
fistps
jbe
rcll
cmp
pop
out
out
jg
test
adc
jge
lds
out
mov
scas
and
xor
jnp
or
mov
imull
inc
int3
pop
dec
push
xor
pushf
lods
into
shrb
fnstsw
and
and
sbb
in
or
addr16
rclb
mov
sbb
aad
out
cmc
adc
push
cs
imul
sub
jne
add
lock
loope
or
push
mov
push
clc
pop
sbb
fsts
sub
shl
shll
fwait
mov
mov
ret
jns
out
insb
lea
xchg
in
mov
cltd
lods
mov
lds
adc
jnp
cld
dec
repz
add
orb
aam
adc
sbb
cmp
mov
mov
and
pushf
xor
ja
iret
push
mov
inc
das
add
fdivr
stc
in
lahf
jp
test
mov
and
cmc
or
jecxz
sbb
add
dec
push
in
int
jge
push
dec
loop
push
rcr
ljmp
call
sbb
and
aas
shrl
pop
pop
and
mov
push
inc
clc
dec
fwait
popf
fcomi
gs
js
push
mov
mov
sub
jecxz
add
lret
das
ds
iret
outsb
jmp
pop
sbb
cmp
pop
cmp
out
icebp
imulb
mov
pushf
scas
mov
ljmp
push
in
or
push
and
xor
dec
add
adc
scas
gs
push
icebp
xchg
call
int
xor
into
push
lret
mov
sbb
jb
pop
imul
mov
pop
and
jnp
or
cwtl
negl
cmp
fcompl
adc
sub
ret
cmp
xchg
cld
repz
lcall
std
jle
adcb
dec
outsl
jg
jge
outsb
jnp
mov
jmp
push
jno
sbbb
jg
fs
sbb
lock
loope
push
inc
in
sbbl
in
or
push
and
xchg
sbb
mov
sub
outsb
repz
lret
cmp
test
adc
shlb
je
in
pop
cld
push
fadds
insb
leave
or
jecxz
xchg
sbb
cmp
mov
or
dec
xchg
pushf
data16
jle
shll
jb
lock
aas
dec
and
or
sub
or
push
andb
xor
mov
mov
ja
mov
jb
shll
stos
fs
pop
push
adc
out
test
pop
xor
ret
lea
jp
jno
or
inc
sbb
mov
dec
sub
mov
adc
push
jb
pushf
dec
int
paddb
ret
pop
cmp
pop
icebp
xchg
sti
sub
jne
test
xlat
insl
int3
cmp
data16
push
and
cmp
ja
pop
push
or
test
adc
xor
enter
clc
imul
inc
faddl
cltd
dec
cld
jmp
dec
addl
cmc
dec
js
adc
adc
mov
dec
dec
test
aaa
fimull
sbb
out
loopne
in
fsubrl
ds
dec
ja,pt
jo
sbb
insb
pop
mov
xchg
cltd
and
pop
mov
pop
or
negb
dec
repnz
jmp
push
jecxz
sbb
std
cltd
xchg
aad
inc
mov
inc
pushf
gs
mov
jo
adc
mov
xor
jge
roll
outsl
movsl
jge
outsb
fwait
lea
in
mov
out
mov
in
xlat
nop
sub
rcrb
push
sbb
push
inc
cmpl
adc
ret
movsl
pop
sbb
int3
mov
test
xlat
jae
cld
rol
dec
das
idivl
push
pop
push
sub
pop
out
ds
ds
ret
sti
jno
sbb
inc
or
filds
dec
incb
and
imul
inc
jno
into
lret
sub
or
jno
lret
nop
mov
les
cli
out
push
ret
rcr
inc
jae
lock
stos
movsb
push
nop
aam
scas
rcrb
jne
xchg
shrb
cmp
pop
cmp
popa
or
ficoml
test
sbb
lods
sub
adc
push
dec
sbb
jns
push
idiv
sub
fbstp
or
mov
push
lods
add
lahf
bound
test
jl
sub
out
adc
hlt
test
imul
or
out
mov
rcl
pop
aad
lds
loopne
in
push
cli
pop
cmp
mov
sbb
mov
lret
dec
sbbb
mov
push
mov
adc
mov
rorl
mov
mov
cmp
push
test
sbb
idivb
xor
cmpsb
and
mov
outsb
pop
and
xchg
out
in
add
mov
mov
int3
rcrl
add
sub
gs
and
mov
shll
rol
jo
jp
xor
mov
mov
add
shrl
movsl
jns
icebp
mov
add
in
jnp
cmp
mov
and
imull
adc
sub
inc
fildll
insb
pop
faddl
and
ficoms
ficomps
jb
test
cmp
jns
lock
xchg
adc
incl
cmp
jp
mov
out
push
sub
sub
mov
fwait
popa
ja
dec
mov
fldt
mov
int
add
jo
jmp
in
xor
fisubrl
in
imul
cmpsl
pop
out
fs
mov
inc
scas
adc
scas
dec
dec
dec
sub
and
mov
xor
cmc
inc
mov
mov
adc
or
repz
cmc
mov
xlat
xchg
mov
adc
addr16
mov
hlt
push
push
insb
fsubr
mov
cwtl
sahf
shrl
movsl
ds
aas
hlt
or
jp
sti
addr16
sti
inc
cmpsl
xor
xchg
shlb
xor
arpl
add
in
jne
jp
push
dec
xchg
shr
mov
pop
addb
dec
push
jno
mov
jmp
test
mov
xlat
mov
jnp
es
xchg
stos
idiv
repz
mov
clc
ret
jmp
add
popf
xor
test
rorl
in
test
mov
sbb
aas
loop
dec
add
nop
shlb
lods
nop
jne
or
das
sub
mov
xchg
push
lret
mov
pushw
jo
inc
das
imul
jne
clc
xlat
add
pusha
add
lret
or
test
addr16
mov
iret
rclb
and
push
test
push
or
loop
adc
mov
mov
mov
and
xchg
sub
mov
stc
cltd
pushl
and
je
xor
jo
xor
sub
xorb
jl
mov
cmc
dec
push
mov
xchg
jle
sbb
in
mov
in
mov
pushf
sarb
aam
lahf
cwtl
sbb
aam
ljmp
dec
scas
or
sub
movsl
mov
add
ret
cwtl
xchg
pop
in
imul
stc
test
jp
dec
loope
xchg
in
dec
es
pop
inc
and
andl
sub
sub
inc
loope
sbb
mov
enter
cmp
cmpl
mov
mov
adc
push
enter
pop
fists
pop
insb
xor
or
inc
push
inc
xchg
popa
lds
mov
sub
in
outsl
outsl
decl
in
imul
jle
mov
dec
repz
lock
jecxz
mov
in
xchg
mov
les
mov
pop
xor
pop
mov
and
jae
loop
push
enter
testl
call
ja
orl
mov
add
repz
test
push
fists
add
std
add
lret
fisttpl
stos
mov
ljmp
adc
data16
mov
push
mov
or
adc
stc
dec
xchg
dec
add
scas
sahf
or
filds
adc
movsl
sbb
sub
fs
mov
adc
and
scas
mov
sbbl
test
xor
in
movsl
and
mov
xchg
pop
aam
xor
sahf
and
lock
test
les
idivl
inc
cmp
inc
call
mov
inc
es
adc
xor
iret
ljmp
movb
popa
cmp
dec
je
add
sbb
xchg
out
lret
adcl
insb
mov
in
cmpsb
and
ret
repz
out
and
sub
inc
aad
xchg
fsts
cmp
sbb
leave
fdiv
sti
ja
mov
loopne
sbb
bound
pop
mov
mov
mov
push
les
enter
hlt
sub
nop
adc
sbb
dec
push
test
mov
aas
push
xchg
test
stc
add
jle
movsb
rcrl
mov
mov
sbb
ss
push
pop
push
pop
pop
out
jno
add
rcll
adc
add
sahf
jbe
push
mov
inc
mov
cmpsb
icebp
mov
idivl
movl
inc
adc
ret
aad
inc
mov
mov
dec
jbe
in
cmp
xor
jge
pop
sbb
shrl
dec
stc
hlt
cmp
add
push
ljmp
in
xor
push
int3
in
inc
shll
fwait
pop
xor
lret
stos
xor
adc
push
cmp
mov
subl
dec
int
aam
into
jo
sbb
cmpsl
frstor
lret
sbb
stos
adc
out
and
sub
in
call
dec
in
push
xchg
or
mov
or
lock
or
sub
aaa
icebp
lahf
pop
shll
dec
dec
push
sbb
xchg
subl
push
sbbb
cmpsb
sub
pop
stos
int3
cmc
mov
outsl
notl
adc
pop
mov
mov
mov
jge
add
out
xor
cltd
test
inc
sub
xrelease
or
pop
outsl
inc
ljmp
fnstsw
das
sbb
xor
icebp
je
cmp
pop
popa
std
push
push
lret
insb
or
enter
push
testb
pop
sbb
sbb
mov
and
mov
lea
sti
mov
mov
push
ret
std
mov
inc
xchg
pop
in
push
dec
jl
mov
sub
andb
js
sbb
int
imull
cwtl
fdivs
push
fldenv
movsl
mov
mov
jbe
cmpsb
mov
outsl
jecxz
jae
sub
inc
xor
ss
iret
sbb
xor
adc
inc
jnp
movsb
add
or
or
mov
repz
lods
lret
push
mov
call
lock
jg
dec
sarb
xchg
mov
xor
sbb
xor
imul
cmp
cmp
in
adc
mov
int
jecxz
jne
movsl
pop
lds
add
cltd
dec
enter
nop
dec
insl
pop
aas
inc
popa
in
mov
pop
jle
scas
inc
loop
push
cmp
add
mov
sub
sub
fnstsw
outsb
mov
jg
or
jae
push
xor
cmpsl
enter
or
ss
scas
xchg
dec
dec
mov
or
sbb
or
xchg
aad
icebp
push
sbb
and
std
in
cs
insl
imul
scas
mov
int
mov
stos
int
lahf
sub
loop
pusha
lahf
mov
add
cmpsl
lret
andl
imul
cmp
mov
fistpll
nop
dec
pop
enter
call
movl
jno
jnp
cwtl
dec
movsl
mov
out
lods
movsb
repz
mov
sbb
mov
pop
notl
jl
sub
mov
cmpsl
xor
stos
mov
pop
icebp
add
dec
les
xor
mov
sbb
sahf
sbb
push
cmp
mov
mov
pop
push
btc
scas
rcrl
push
outsl
cltd
imul
pop
sub
sbb
mov
xchg
dec
push
pop
dec
iret
jbe
or
xchg
mov
and
xor
mov
xor
outsl
mov
pop
mov
xchg
dec
or
mov
xor
sahf
mov
dec
test
sbb
dec
push
sub
cmpsb
mov
js
and
into
ss
dec
mov
movsb
xchg
out
jae
inc
lret
stc
add
lcall
add
pusha
in
pop
dec
addl
mov
inc
fistps
xchg
mov
lock
mov
xlat
cs
xchg
pop
mov
jle
inc
js
bound
rcll
push
lret
and
adc
jo
mov
xor
ss
add
xchg
or
pop
out
cmpl
cmpsl
loop
or
jp
pushl
sub
out
cmp
pop
dec
enter
push
sub
movsb
jle
mov
pop
out
in
leave
movsb
loopne
and
imul
daa
jb
push
mov
orl
aaa
aas
cltd
jmp
jae
xor
dec
pop
push
mov
push
je
add
jecxz
roll
rolb
roll
xor
std
mov
push
jmp
sbb
insl
mov
outsb
add
es
mov
test
sbb
xchg
jg
dec
clc
adc
das
subl
mov
sti
adc
jo
xor
or
sbb
jae
mov
adc
lret
sbb
xchg
stos
dec
mov
fnsave
xchg
jne
inc
mov
xchg
les
xor
arpl
je
aad
lods
cwtl
push
jg
cmp
or
jg
dec
mov
inc
out
mov
cmp
adc
mov
out
mov
sbb
and
test
arpl
push
notb
xchg
mov
gs
loopne
push
push
lods
mov
dec
pop
xor
outsl
mov
ds
icebp
call
sbb
push
icebp
insl
ss
ss
push
xor
xchg
adc
push
xchg
mov
outsl
jns
mov
pop
std
dec
adc
rcrl
cld
xor
push
out
jbe
fisubl
mov
jp
jno
dec
out
ds
push
std
xlat
sub
mov
ljmp
ret
pop
push
fwait
push
flds
mov
rolb
mov
xor
mov
inc
xchg
dec
in
pushf
shlb
jns
mov
pop
mov
inc
xor
mov
ret
pop
in
push
fsubl
lock
lds
pop
popa
shl
jo
notl
xor
inc
cld
stos
mov
cs
repz
lock
ja
xor
add
push
push
mov
inc
js
xchg
punpckhdq
sub
test
int3
divl
mov
xor
bound
cli
xor
jae
mov
xchg
sti
dec
mov
inc
xchg
clc
add
lret
mov
fnstcw
cmpsb
fstl
mov
popa
das
pop
loop
aad
fcompl
mov
pop
adc
xchg
repnz
cltd
cmpsl
das
popf
pop
pop
ds
fimuls
dec
cmp
popa
jo
faddl
push
nop
ja
lahf
xor
pop
cld
icebp
inc
xchg
dec
inc
ret
fidivrl
nop
in
jae
sbb
pusha
push
mov
add
mov
lock
idivb
mov
sub
and
or
push
mov
es
jns
les
mov
shll
shlb
cmp
adc
add
fwait
es
test
pop
cmp
ljmp
sbb
std
jne
enter
arpl
mov
stos
adc
in
lcall
sbb
xchg
add
pop
mov
popf
out
imul
test
add
push
xchg
mov
xchg
insl
mov
and
in
lods
cli
js
test
jge
pop
imul
fdivrl
cmp
inc
dec
mov
popa
mov
bound
out
pop
or
and
or
mov
push
aam
or
mov
dec
jg
push
lcall
mov
das
jb
cltd
stos
ja
dec
lods
xor
mov
enter
ret
call
adc
jecxz
fisttps
mov
adc
nop
xchg
inc
jno
cwtl
js
push
jle
leave
lea
test
das
nop
cmpsl
ss
out
xchg
pop
btc
lods
ret
cmpb
sub
jge
dec
arpl
movsl
std
mov
subl
mov
inc
mov
icebp
jnp
xor
lret
stos
push
or
pop
mov
stos
xchg
loop
pop
push
push
xlat
xor
jl
or
lock
repz
dec
sbb
inc
scas
insb
pop
lds
dec
insl
sub
inc
sahf
cmp
adc
adc
fs
dec
xchg
inc
popa
ret
sbbl
jle
adc
scas
and
mov
nop
dec
xor
idiv
mov
xor
pop
popa
scas
test
mov
movsl
dec
dec
jbe
mov
and
pop
pop
mov
xor
xchg
mov
xchg
dec
lret
mov
imul
dec
mov
rorb
shll
es
sbb
jge
xchg
fsubrl
cwtl
enter
pminub
nop
push
pop
mov
push
cli
dec
cmpsb
rorl
mov
nop
test
mov
shll
inc
rorb
cmp
lret
mov
iret
cmp
fidivrs
xor
jbe
xor
inc
imul
fisttpll
lea
cltd
pop
push
std
dec
jae
xchg
push
insl
xchg
dec
cmc
cmp
std
jne
cmpsl
xchg
add
shlb
cmp
mov
sbb
sahf
notl
xchg
inc
pop
and
mov
xchg
sbb
bound
mov
or
negb
je
sbb
inc
cs
mov
repnz
mov
call
negl
pop
jmp
jbe
cld
daa
stos
mov
jl
and
sub
addr16
out
insb
lcall
add
mov
xlat
imul
dec
fcmovnbe
in
or
cmp
push
je
cs
jge
jecxz
rorl
sbb
rorb
dec
pop
lahf
xchg
arpl
jo
push
test
shll
and
adc
vmovd
push
cltd
loopew
jle
cmp
pop
adc
cmpsb
adc
outsl
mov
pushf
test
or
adc
inc
divl
xor
jg
arpl
mov
mov
cmpsb
lret
pop
xor
mov
xor
add
imul
je
adc
xchg
arpl
enter
xchg
pop
pop
jne
add
inc
dec
cmp
fidivrl
js
testb
push
mov
loopne,pt
das
out
cmp
and
sarb
lret
outsl
push
xor
out
or
out
mov
clc
push
adc
inc
jg
cmpsl
stc
fdivrl
or
cmpsl
outsb
sahf
xor
mov
mov
jecxz
pop
or
xor
sub
cli
sub
sub
pop
sbb
clc
adc
sbb
dec
outsb
push
dec
xor
subl
cltd
jge
movsl
cmp
jae
xchg
jle
ss
adc
shl
mov
out
push
add
popf
sbb
pop
add
enter
mov
sbb
test
icebp
lret
jl
idivb
mov
xchg
aam
lcall
mov
jge
scas
fisubs
lahf
movsb
cmpsb
jmp
mov
mov
jp
adc
ret
test
fwait
arpl
add
sahf
or
add
sbb
addr16
dec
push
xchg
mov
pop
push
cmp
shll
mov
into
inc
shr
mov
int3
inc
mov
mov
popf
dec
sarb
or
push
cmc
scas
imul
outsl
pop
inc
or
sub
jge
cmpsl
cmc
loope
push
insl
stos
cmp
stc
sbb
fstp
dec
xor
leave
out
jle
sub
jne
loope
fisttpll
es
jge
pop
test
and
inc
mov
insl
outsl
sub
jp
and
out
jmp
mov
add
adc
pop
lret
popa
adc
shlb
add
insl
xor
jbe
adc
icebp
lret
dec
dec
out
mov
sub
arpl
or
inc
mov
mov
fcmovbe
lods
mov
and
xor
jge
ljmp
mov
xchg
adc
jl
cli
mov
jp
pop
stos
daa
ljmp
shr
or
push
in
fdivl
lahf
mov
stos
ljmp
lock
or
mov
mov
or
dec
sub
dec
adcl
pop
pop
subb
lcall
pop
in
push
and
sub
andl
mov
movb
out
xchg
movsl
xchg
call
jnp
lods
xlat
arpl
je
add
xor
jl
test
adc
cmp
xor
pop
xchg
pop
cwtl
adcb
mov
mov
int3
pop
pop
add
lret
mov
shrl
jnp
jecxz
inc
out
pop
sbb
push
enter
or
dec
sahf
pop
aam
ja
sbb
fsub
cli
cwtl
xchg
lds
or
cld
sbb
dec
ljmp
stos
pop
aas
out
idiv
in
sub
bound
jp
cli
daa
in
jecxz
lret
iret
in
pusha
roll
mov
inc
push
mov
jmp
sub
add
ja
rcrb
in
xchg
inc
pop
stc
outsb
and
xor
inc
in
shll
ljmp
dec
adc
dec
jae
outsb
dec
sub
divl
es
ficoms
lods
fld
push
xchg
mov
jmp
in
dec
inc
sbb
enter
test
jmp
add
add
xchg
xchg
aaa
add
cwtl
pop
mov
loope
leave
sahf
dec
adc
data16
or
mov
and
sahf
loopne
mov
test
iret
rcrl
test
inc
mov
iret
xchg
cmp
cmp
xchg
and
mov
mov
roll
jg
mov
lds
divb
pop
xor
cmp
into
inc
fmuls
inc
mov
mov
xchg
loopne
push
push
add
mov
roll
stos
mov
mov
jp
adc
sub
imull
rol
insb
dec
jbe
sbb
push
mov
inc
fbld
sbb
aas
pop
sub
xchg
pop
sbb
adc
in
lods
and
inc
cmp
cltd
pop
sub
xchg
push
sub
cmp
loop
push
clc
and
cld
iret
and
in
test
add
fbld
mov
add
clc
imul
subb
rclb
test
in
mov
jg
xchg
cli
push
aaa
int3
ret
fcoms
pop
data16
lods
mov
lret
shll
mov
cmp
std
cmp
and
jg
cld
sahf
bound
xchg
popf
pop
jecxz
mov
nop
or
ds
test
add
ss
and
jno
cwtl
dec
adc
rcll
mov
xor
jnp
in
add
ja
xor
loopne
cwtl
imul
cs
or
or
sbb
lret
ja
inc
test
neg
xor
jecxz
sahf
dec
mov
pop
test
inc
push
adc
iret
inc
repz
inc
pop
aam
jbe
and
enter
fwait
pop
or
xchg
fldl
mov
xchg
push
lea
int
and
scas
incb
and
cmp
ret
inc
faddl
test
add
jb
mov
orl
imul
shl
imul
les
sbb
dec
mov
filds
inc
and
push
shlb
push
mov
lcall
xor
push
sub
mov
sbb
push
sahf
pop
test
gs
fisttps
fcmovne
popl
mov
pop
pop
les
add
xchg
jne
pusha
xor
sub
js
mov
xlat
cltd
shrl
idiv
loope
inc
inc
ljmp
add
testl
cmpsl
add
rolb
fldln2
incb
stc
popf
arpl
frstpm(287
movsb
rorl
es
mov
iret
out
leave
jecxz
clc
aam
xchg
mov
push
out
sbb
fdivs
inc
jg
xlat
fs
jmp
in
int
cmpsl
inc
jno
bound
sahf
pop
mov
mov
movsb
mov
fwait
dec
insb
xor
and
inc
ja
push
mov
cwtl
mov
jl
out
lcall
imul
sbb
cmp
lcall
pop
xchg
pop
push
jbe
ljmp
scas
push
sub
sub
dec
cmpsb
cmp
add
or
rcll
fiaddl
xchg
andb
sub
rcrl
push
inc
int
sbb
pop
jbe
push
mov
inc
sub
dec
jo
in
mov
inc
iret
fisubrl
scas
xchg
and
jne
adc
inc
insb
in
cld
aas
mov
jnp
sbb
sbb
sbb
ljmp
pop
movsb
mov
dec
pop
pop
test
into
out
leave
rcrl
cmc
push
fistpll
add
shl
scas
jae
jae
sub
and
pop
xchg
inc
sbbl
std
nop
cmp
scas
xchg
cltd
add
inc
mov
negl
push
loop
mov
pop
int3
add
daa
addr16
mov
pop
xor
jne
adc
scas
mov
out
cmp
pop
sbb
or
cltd
sub
in
out
fnstenv
pop
stos
je
pop
and
dec
fbstp
jb
xor
jl
mov
cli
or
ja
pop
loopne
inc
insb
pushf
sarl
jae
bound
insl
mov
fcom
cld
pop
mov
jle,pt
rcr
shrb
sti
lds
add
stos
adc
sbb
jo
dec
scas
rorb
inc
arpl
sub
mov
insb
xor
repnz
xlat
clc
cmpsl
pop
insb
rcll
mov
push
push
std
adc
out
insl
mov
pushf
and
orb
arpl
fcmovnb
out
mov
popa
and
je
call
popf
xchg
divl
dec
push
sbb
in
xchg
out
rorl
mov
fstpt
xor
rol
push
pusha
mov
fsubr
or
movsb
mov
push
imull
mov
bnd
sbb
subb
mov
and
call
sbb
idivb
mov
mov
pusha
pushf
hlt
cmp
sub
xchg
jnp
test
addr16
xor
arpl
mov
add
cmp
shrb
out
xor
xchg
and
loope
pop
sub
adc
lcall
cmp
adc
bound
sbb
test
testb
mov
lds
aad
pop
movsb
sub
insb
pop
test
push
cmp
mov
fstps
cmp
mov
mov
xor
sbb
faddp
outsl
mov
bound
pop
scas
dec
jp
cmp
test
sub
int3
inc
mov
outsl
in
pop
push
dec
pusha
aaa
mov
int
jne
sub
imul
les
jnp
jnp
fmul
shr
push
lds
fdivs
push
ja
loope
add
pop
jp
cmc
fstl
outsl
or
sti
jmp
mov
outsb
xor
ret
pop
jns
mov
push
jnp
mov
imul
scas
dec
loopne
icebp
xchg
int
inc
add
sbb
movhps
sub
dec
xchg
imul
fbstp
dec
cmp
jl
pop
into
add
stos
mov
dec
ja
add
pop
jnp
cmp
sub
xchg
lahf
loopne
inc
aas
lds
mov
xchg
hlt
stos
jo
adc
loop
lret
cmpsb
xchg
scas
mov
das
xor
mov
scas
pop
mov
fcomip
mov
lret
icebp
outsb
outsb
stos
or
mov
stc
test
rorl
adc
dec
stc
sahf
inc
lret
mov
in
testl
fcomps
jp
pop
sub
loop
das
inc
dec
movsl
lock
imul
aaa
or
daa
mov
and
dec
jo
and
mulb
inc
loopne
lcall
test
xor
test
pop
mov
loope
push
pusha
hlt
subl
sub
add
dec
repnz
inc
sahf
sti
pop
test
shll
bnd
movsl
popa
in
adc
mul
notb
data16
mov
popa
jmp
lock
jo
sbb
mov
ja
lds
loope
das
dec
inc
mov
xor
pop
sbbl
test
outsl
or
mov
xchg
add
or
popa
enter
mov
pushf
aaa
idivb
mov
fwait
imul
pushl
xlat
or
das
add
rcrb
icebp
add
pop
hlt
into
test
shlb
lret
popa
adc
mov
movsl
jl
inc
stc
mov
das
filds
pop
std
jb
je
cmp
lods
jo
mov
adc
cmp
stc
pop
xor
fs
jne
nop
addr16
mov
lcall
jg
or
fisttps
xlat
pop
jnp
pop
xchg
imul
push
mov
dec
xor
or
add
leave
jmp
adc
pop
cld
rcr
lcall
shlb
xor
add
loope
mov
stc
cmpsl
stos
in
mov
xchg
sbb
xlat
popa
push
dec
cmpsb
jmp
jbe
or
sarl
inc
flds
jp
add
cs
filds
xor
mov
mov
mov
inc
sub
fimuls
fdivp
cmpb
jp
jne
outsb
fimuls
or
mov
and
sbb
jp
push
cmp
cmp
out
or
cs
jo
in
jne
ja
push
pop
je
outsb
fadd
pushf
clc
cmp
in
aaa
mov
xlat
lock
bnd
jo
ret
jbe
sub
bound
ljmp
xor
ret
xor
fwait
out
test
cmp
movsb
pop
jne
push
js
adc
mov
cs
sbb
jle
cltd
and
scas
dec
fmull
jae
sub
mov
xchg
std
fisubs
test
or
push
dec
mov
lds
cli
enter
nop
and
xchg
int3
jmp
fstpt
pop
cli
int3
push
into
cmp
fiaddl
sub
fstpt
mov
xchg
decl
lret
pushf
movsb
in
ret
out
stos
cmp
rolb
pop
push
test
inc
popa
pop
roll
icebp
ss
sbbb
xlat
scas
jae
sbb
mov
xlat
sbb
mov
inc
in
jp
mov
pop
inc
stos
cmp
in
roll
push
xor
sarb
mov
mov
pop
push
xor
pop
pop
mov
jmp
in
sub
mov
add
jmp
jnp
jmp
imul
dec
mov
and
addr16
xor
jge
mov
out
jmp
sbb
pop
sbb
mov
pop
call
test
test
in
cmc
push
jb
jbe
sub
lcall
inc
mov
mov
lock
rolb
cld
inc
fiaddl
xlat
jno
cmp
fisubrs
bound
mov
mov
sbbl
lock
xchg
test
and
xchg
inc
scas
mov
inc
xor
popa
push
adc
rcrb
sbbb
mov
loop
test
push
dec
movsb
and
cwtl
stos
push
sahf
pop
mov
mov
jne
lcall
sbb
adc
cmp
dec
mov
stos
pop
jecxz
mov
fldenv
cs
xchg
in
std
iret
out
or
aam
out
int
mov
jecxz
xchg
jb
and
sbb
insl
fwait
arpl
in
clc
adc
jg
push
inc
sti
and
push
add
jle
test
aam
inc
pop
jmp
and
aas
xor
xchg
pop
insl
push
cs
jno
in
xchg
enter
mov
adc
fs
nop
mov
out
xchg
pop
push
imul
push
push
stos
in
sbb
les
mov
fstps
mov
mov
push
out
pop
push
out
or
mov
add
fwait
ret
xchg
cmp
jge
repnz
add
cmp
int
test
imul
xorl
popa
int
pop
sti
in
test
lcall
mov
jge
mov
or
sub
mov
out
inc
aas
ljmp
std
cld
xchg
scas
or
fcos
je
xor
fdivl
out
pop
pop
stos
testb
cmp
cmp
dec
imul
push
and
andb
les
cmp
adc
xor
pop
lcall
gs
in
daa
and
aaa
loope
or
jp
xchg
or
sbb
sarl
repnz
int3
scas
imul
bound
xchg
enter
push
mov
or
inc
out
add
das
inc
jmp
inc
in
dec
lods
lock
inc
sar
and
cmp
sti
aaa
ljmp
test
fdivs
push
and
or
sti
sub
mov
mov
mov
and
bound
fnstenv
dec
or
inc
or
jne
daa
leave
adc
xchg
inc
fwait
sahf
aas
mov
dec
lret
inc
fisubs
fadd
fs
test
out
sahf
xchg
loope
jbe
and
out
mov
lret
mov
xchg
xchg
jne
and
pop
jg
sahf
pushf
add
dec
mov
xchg
push
addl
mov
hlt
lcall
cmp
sbb
test
insb
add
inc
adc
gs
push
jnp
sti
sarb
imul
sbb
pop
inc
mov
push
ss
mov
addr16
cwtl
push
fstl
inc
mov
sbb
mov
pop
and
xlat
adc
ffreep
mul
push
rol
sub
movsl
pop
adc
sub
adc
dec
scas
stc
cli
and
rcrb
movsl
arpl
pop
dec
push
mov
fucomp
adc
fs
iret
andl
outsb
mov
std
push
gs
cltd
and
mov
jae
daa
pusha
test
lcall
popa
push
cmpsb
pop
mov
add
push
sbb
xor
fs
inc
popa
push
fnstenv
pop
movsb
daa
aaa
push
loop
jl
inc
mov
mov
cmp
jmp
arpl
or
in
in
cmp
imul
jmp
lds
dec
pop
sub
test
or
shl
fs
mov
pop
or
lahf
ljmp
mov
inc
scas
movsl
sti
popf
cmp
enter
pop
stc
sub
push
test
pop
int3
and
ja
cld
and
mov
ljmp
jae
or
inc
push
dec
in
pusha
rolb
lret
nop
and
repnz
add
cmp
loopne
rclb
sub
adc
fwait
sbb
xchg
rcl
fsubrp
sub
ds
jge
dec
testb
cli
cltd
adc
mov
mov
sahf
rcll
fwait
shr
add
outsl
daa
pop
cld
adc
sti
sbb
dec
nop
insl
repz
repz
sbb
mov
inc
cld
jo
jns
xor
mov
or
xor
push
cmpsl
sti
adcl
add
stc
sahf
mov
bound
ret
inc
stc
jg
pusha
jp
or
cwtl
cmp
sbb
shrb
jae
jecxz
jmp
cmp
pop
add
xlat
push
sbb
shlb
jo
clc
test
mov
xchg
and
jae
pop
cmp
xchg
mov
push
or
out
cmpsb
pop
xchg
fsubrs
mov
lock
xchg
dec
adc
and
and
inc
jno
sub
xchg
pop
leave
dec
movzwl
mov
jp
cld
sbb
sbb
jle
cmp
jo
out
adc
insl
inc
jbe
aad
sub
leave
add
repnz
fcmovnb
cmpsb
mov
dec
rclb
hlt
jg
and
mov
mov
aaa
das
cmpsb
inc
mull
mov
jns
xchg
push
loope
arpl
xor
mov
push
mov
in
jbe
add
pop
sbb
leave
xchg
pop
fiaddl
mov
or
pop
dec
jle
xchg
xor
or
js
mov
lret
dec
cmpsb
xor
mov
xor
pusha
loope
xor
mov
arpl
dec
xor
pop
mov
testb
cmpsb
push
loop
dec
jg
cld
xor
mov
int3
cmp
push
es
cs
dec
add
mov
pop
gs
sub
push
mov
xchg
mov
outsl
das
jns
movsb
cli
sub
shrl
add
dec
sbb
cmpsl
test
sarl
push
push
gs
mov
sub
xor
cmp
pusha
fwait
push
fmuls
xchg
push
adc
or
push
imulb
in
add
cmc
aas
jmp
icebp
mov
ficoms
jbe
inc
ret
arpl
div
in
cmpsb
je
hlt
mov
inc
fcomp
jecxz
cmpsb
xchg
cmp
mov
dec
test
das
fistl
jp
sub
lret
out
add
jo
mov
inc
mov
mov
xchg
dec
pop
cmp
or
sbb
cld
dec
lock
sbb
add
js
and
rclb
flds
mov
addl
mov
push
ja
popf
out
daa
stos
and
add
push
adc
dec
fwait
push
mov
xchg
or
popa
sub
stc
add
imul
inc
xchg
inc
or
mov
add
push
and
pop
shl
outsl
faddp
xchg
sub
add
loop
xor
loope
xor
aad
jo
add
xor
loopne
ret
push
xor
insb
pop
js
jmp
shl
inc
aaa
add
stos
jb
mov
mov
add
mov
jne
cmp
out
xor
andb
push
push
jge
ds
and
pusha
and
roll
out
add
or
inc
decb
or
imulb
push
mov
pusha
lret
dec
mov
out
xor
shll
mov
sub
loopne
fiadds
jge
lret
enter
filds
push
push
hlt
xorb
or
mov
test
and
frstor
shr
imul
lock
sti
add
in
loop
sub
add
mov
sarb
pop
cld
imul
es
movsb
call
lret
inc
lahf
enter
cs
jg
xchg
push
dec
push
mov
clc
sub
pop
mov
and
inc
mov
stos
inc
iret
fildl
test
sub
ljmp
or
aas
imul
xor
fstpl
pusha
daa
or
inc
imull
jp
push
xchg
cmp
mov
popa
pop
push
loopne
daa
inc
cmp
adc
fisubrl
mov
ja
leave
adc
dec
inc
mov
fwait
push
jnp
fldt
movsb
gs
cmc
xchg
popf
pop
outsl
aaa
mov
push
sub
fdivrl
dec
pop
lds
cli
mov
pop
test
fs
xor
jb
iret
inc
cmp
jno
mov
add
pop
cmp
orb
pusha
aas
aam
imul
pop
or
xchg
repz
add
cmp
xchg
add
repz
cs
lods
shll
mov
dec
dec
enter
test
dec
ror
jo
cmp
mov
sub
repnz
aas
xchg
and
stos
push
hlt
iret
xor
push
jg
ficoml
adc
inc
xor
push
cmp
jmp
lods
xor
cmc
or
push
jl
adc
dec
hlt
cmpl
push
push
mov
mov
mov
les
adc
fnstcw
nop
and
test
or
or
adc
xchg
push
pop
fnsave
dec
pop
mov
xor
in
lock
pop
pop
and
xchg
mov
pop
bound
add
cltd
cmpsb
movsl
ja
sbb
adc
add
shr
mov
cmp
jp
call
nop
mov
outsl
dec
mov
dec
mov
subl
mov
lcall
jp
lea
xchg
and
mov
jo
xor
orl
hlt
xchg
sbb
or
repz
fadd
or
mov
mov
push
insl
fdivrl
xchg
insl
fistps
movsb
out
imul
xor
push
fisttpl
add
lea
sub
xchg
mov
mov
xchg
mov
cltd
in
mov
inc
roll
pop
mov
mov
test
pusha
xor
sub
add
inc
ret
add
fbstp
pop
lea
xorb
int3
dec
jge
cli
inc
adc
dec
cmpsb
xor
push
mov
hlt
mov
adc
xchg
iret
scas
and
fisubrl
mov
jp
jno
cmp
fs
push
adc
sahf
adc
push
mov
and
sub
ds
stc
stos
xchg
test
cmp
or
les
popf
pop
or
or
call
push
jae
loopne
cltd
clc
ficompl
sub
or
or
dec
xchg
shrb
je
int3
jo
in
jge
imul
sub
xchg
inc
enter
movsl
pop
leave
push
sarl
and
int3
rcl
pushf
sti
cmp
push
push
cmpsb
mov
push
or
dec
pop
mov
add
jbe
test
add
dec
mov
or
sbb
sub
push
icebp
sub
push
cmc
and
sbb
shll
insl
outsb
mov
xchg
xchg
pop
add
imul
fisttpll
mov
loop
insb
shrl
popa
imul
adc
jnp
test
addr16
es
mov
push
mov
inc
loopne
sub
test
fdivl
dec
pop
jno
xchg
lds
sbb
stc
inc
or
xor
aad
xor
add
cmp
les
inc
xor
jnp
mov
cmp
add
or
xor
push
mov
dec
and
adc
xchg
dec
movl
cld
loope
cmp
push
lds
dec
fsubs
jo
pop
jmp
rorb
sub
int3
pop
dec
lahf
loope
dec
sbb
xchg
addr16
das
outsl
iret
cwtl
jp
mov
cltd
bound
pop
mov
push
sub
in
rclb
cmp
push
jmp
sub
pop
xor
in
and
mov
cmp
dec
stos
push
movsb
movsb
in
jp
out
jp
ss
pop
rcrb
aam
mov
sahf
test
stc
pusha
xlat
dec
jnp
shlb
adcl
cmp
lods
jnp
pop
popa
pop
add
hlt
push
xor
stc
gs
and
iret
sub
shrl
daa
mov
lods
lret
sbb
xor
cwtl
inc
cs
jo
mov
sub
or
pop
xor
pop
movb
jo
divl
orl
jbe
imulb
add
ret
mov
mov
testl
sub
in
mov
dec
push
scas
cli
push
xchg
push
push
repnz
jns
mov
cld
mov
cltd
push
push
jl
push
xor
lods
pop
push
clc
mov
jmp
mov
dec
repnz
xchg
jecxz
mov
mov
in
pop
in
loope
xchg
and
sub
add
fsubl
mov
test
jmp
repz
and
mov
xchg
jns
jno
nop
jb
xchg
cwtl
stos
or
and
inc
lock
test
mov
cmp
pop
lret
cmpsl
inc
and
rorb
and
mov
ret
int
mov
mov
and
jge
cmp
mov
les
ds
outsl
push
sarl
or
sub
ljmp
into
push
xchg
pop
sbb
mov
lret
dec
xchg
in
rclb
cmp
pop
scas
into
lcall
in
in
xchg
xchg
lret
fs
mov
inc
mov
fistpl
xchg
jge
cmp
into
xor
sub
mov
cli
shrl
and
rorb
adc
xchg
es
js
fmulp
lcall
xor
movsb
mov
int
push
adc
dec
push
jns
jae
rorl
mov
fadd
scas
nop
jbe
fwait
and
ret
loop
jno
mov
lahf
mov
cmp
jmp
ss
xchg
out
pause
inc
push
jmp
lods
or
lea
leave
sbb
sbb
add
fwait
add
pushf
bound
shlb
fs
xlat
outsl
pusha
outsl
mov
xchg
stos
add
out
xor
rorb
test
shlb
and
in
in
aad
sub
add
movl
dec
outsl
shl
mov
mov
push
pop
cmp
int3
push
xchg
mov
pop
scas
mov
repz
cmp
les
loop
data16
adc
inc
lret
adc
stos
outsl
xchg
mov
cmp
mov
outsb
jns
dec
or
aad
sahf
outsb
xchg
cmp
or
sub
mov
pop
lds
xchg
mov
push
jno
sbb
dec
ja
mov
cli
sets
sub
movsl
jecxz
pmaxsw
mov
push
in
mov
das
jbe
stos
inc
jae
sarb
test
mov
pop
daa
sbb
inc
cmp
loope
add
popa
cmp
pop
dec
jle
pop
mov
push
mov
push
inc
scas
sub
negl
in
fsts
pusha
cwtl
les
sti
push
ficompl
aam
jb
push
cld
jae
adc
sub
or
out
cmpsl
repz
insl
lret
inc
dec
jne
pop
adc
xchg
imul
mov
imul
mov
movsl
add
je
inc
insb
cmc
xor
shrb
shrb
xchg
es
push
das
add
lret
cwtl
cmc
fsub
cmp
mov
xchg
xchg
mov
cmc
out
sub
fadds
imul
ds
jl
lret
inc
xchg
pop
xchg
cmp
icebp
mov
or
add
mul
or
scas
mov
inc
out
rolb
in
adc
push
jl
push
xchg
xchg
call
sub
xor
ljmp
ficoms
and
jno
pop
rcrl
pop
cld
arpl
shll
lret
lea
jle
scas
sarl
lret
sbb
push
or
lock
mov
repz
std
lods
lock
pop
rclb
dec
inc
fsubl
push
into
in
dec
or
imul
cmp
xlat
cmp
push
dec
lods
insl
andb
call
cmp
mov
out
sub
sbbl
fucom
daa
jne
iret
mov
cs
push
mov
or
std
cs
aad
add
dec
mov
dec
pushf
sub
outsl
popf
push
pop
popl
add
pop
xor
push
sbb
cwtl
aam
jns
push
sbb
bound
and
sbb
sbb
cwtl
cltd
sahf
push
add
and
addr16
adc
data16
in
jge
call
js
mov
sbb
int3
js
lret
mov
lea
lods
or
daa
mov
aaa
imul
out
inc
mov
insl
iret
dec
pop
es
xchg
or
pop
repz
mov
xor
add
and
inc
mov
out
notl
popf
imul
call
mov
or
mov
mov
je
and
pop
inc
fisttpl
call
or
jecxz
or
sub
test
adc
in
jge
dec
adc
mov
dec
jns
sbb
jae
call
xor
adc
cmpsl
divl
xchg
mov
mov
divl
mov
pop
or
push
mov
inc
add
xlat
sub
je
lods
xchg
pop
lret
mov
in
aad
pop
mov
push
or
dec
inc
cli
lock
test
jae
popf
jo
push
adc
iret
dec
adc
loop
dec
test
mov
add
pop
bound
lret
jo
int
pusha
scas
in
adc
pop
mov
jne
add
pop
shlb
add
sub
punpckhdq
roll
imul
jne
cmp
push
cmpsl
lret
sub
jne
push
cmp
fsubs
out
mov
push
cmp
int
imul
push
in
shrb
xchg
jecxz
inc
pop
fnsave
jns
xlat
xlat
stos
mov
or
mov
cmp
loop
xchg
loopne
in
pop
pop
js
cli
loop
mov
ficompl
shlb
or
xchg
dec
mov
add
or
add
push
xor
out
push
lods
test
jae
push
jns
or
xchg
xlat
adc
andl
gs
sbb
sbb
inc
xor
mov
push
xor
rorl
xchg
sti
dec
mov
fbstp
les
cmp
dec
scas
jecxz
dec
sbb
sub
push
xchg
mov
mov
insl
cmp
and
idiv
mov
pusha
je
insb
add
aam
add
repnz
fcoms
push
cwtl
aas
mov
push
enter
or
mov
push
mov
jns
adc
and
aam
xchg
inc
lcall
jb
cmc
add
js
and
xlat
test
fstpl
cmpsb
push
add
jae
leave
push
jecxz
dec
lods
mov
push
dec
push
add
mov
enter
add
or
inc
pop
int
push
adc
pop
push
lret
xchg
dec
aad
mov
imul
stos
sbb
out
inc
inc
jecxz
sub
pop
jns
inc
pop
movb
in
sti
movsl
or
cmp
sahf
add
test
push
rol
xchg
movsl
ret
xchg
dec
pop
in
adc
xor
xor
lea
and
or
jns
push
jmp
jo
aam
jmp
dec
xor
int3
cs
mov
add
jecxz
sub
jle
sti
mov
outsl
add
add
fwait
sbb
push
ficoms
and
cld
and
int
inc
push
lret
std
adc
or
dec
mov
fiaddl
lds
and
push
icebp
subl
sbb
mov
mov
jnp
dec
mov
adc
cmp
sbb
and
pop
mov
sti
mov
ret
loop
sbb
xor
dec
xor
push
xchg
fnstcw
inc
sub
inc
xlat
pop
pop
out
push
cli
mov
or
int3
xchg
or
notl
ljmp
cltd
or
xchg
push
pop
or
sub
cmp
shlb
outsb
jecxz
jecxz
adc
psrlq
sub
sbb
xchg
cmp
bound
pop
sbb
das
push
cwtl
std
repnz
daa
pushf
push
out
inc
cmpb
xchg
or
loopne
hlt
inc
adc
push
dec
jge
sub
inc
int3
xchg
filds
push
push
lock
pushf
fcom
jns
cmpsl
test
or
or
xor
rorb
sahf
adc
lods
and
sbb
xchg
mov
push
loopne
icebp
pop
rclb
adc
ret
sub
mov
mov
sub
mov
and
pop
and
mov
ret
cmpsl
mov
add
mov
lds
xor
ret
out
cmp
jp
add
mov
dec
clc
xchg
js
movsl
jp
arpl
lea
ret
js
stos
loop
cmp
movsl
pop
or
pop
xor
and
mov
mov
imull
out
xor
lahf
rcrb
push
inc
jmp
js
sahf
push
dec
insl
mov
lret
cltd
cli
or
out
lods
jae
lahf
cmpsb
iret
insb
es
xorb
jg
stc
adc
nop
adc
inc
repnz
test
xor
lds
in
test
div
nop
aaa
push
cmpb
mov
or
adc
rclb
test
mov
pusha
mov
inc
push
xor
push
shl
jmp
cmpsb
or
pop
and
cs
das
ds
push
repnz
or
les
mov
fisubs
int3
rol
jle
sbb
sti
jmp
mov
cld
inc
push
adc
mov
inc
ret
jg
mov
jbe
push
shrb
sub
and
add
sbb
fs
mov
pop
rorl
dec
data16
mov
test
cltd
popf
addr16
and
xchg
sbb
and
ja
pushf
mov
stc
mov
rcrl
dec
xor
orb
push
ucomiss
xchg
and
faddl
mov
es
inc
es
sbb
int3
pop
lcall
scas
adc
push
xchg
out
push
or
lret
xor
and
pop
lds
divl
arpl
rorl
inc
fisubrs
push
or
lret
cmpsl
leave
bound
mov
or
mov
add
bound
cmc
mov
mov
or
loopne
xlat
jmp
and
jge
iret
and
call
push
rcrb
mov
lea
icebp
mov
ja
xor
cmc
xchg
and
arpl
sahf
ss
xchg
dec
push
or
push
mov
xor
push
sbb
cmc
subb
sub
jo
mov
dec
outsb
or
jae
pop
fbld
cltd
shr
and
pop
xchg
dec
imul
dec
and
mov
aad
js
lret
testl
nop
hlt
mov
ret
fnstcw
push
pop
sbb
jne
mov
cld
inc
push
loopne
xor
fmul
daa
in
aam
mov
sbb
mov
ja
push
loopne
inc
out
push
idiv
mov
xor
fisubrs
sbb
lcall
sub
jg,pt
push
stos
out
mov
jnp
add
dec
adc
push
mov
or
push
push
fistl
xchg
mov
in
mov
clc
pop
xchg
and
mov
dec
sbb
shl
rcrl
lods
and
sbb
andl
outsl
mov
pop
pop
cmp
jbe
aad
inc
nop
sbb
add
mov
xchg
jecxz
repz
test
adc
push
jnp
mov
and
mov
lods
jnp
dec
add
xor
int
jae
adc
push
and
in
lret
dec
aas
negb
cmp
add
xor
and
imul
xchg
shrl
and
jo
stc
dec
out
in
fmull
lret
cmpsb
push
cmp
arpl
and
fsubs
repnz
mov
push
cli
inc
xchg
scas
insl
dec
icebp
push
aaa
cmp
cltd
mov
daa
cmpsl
int
repz
enter
mov
loopne
mov
jmp
add
cmp
dec
pop
dec
jmp
add
mov
mov
jne
fimuls
mov
mov
or
mov
dec
in
pop
adc
sub
rep
jno
out
push
push
orl
test
ss
cmpsb
inc
mov
xor
and
aad
dec
pop
gs
pop
inc
mov
inc
ret
or
inc
xchg
mov
push
jne
lods
mov
push
adc
nop
mov
sbb
fs
xor
fidivrl
xchg
xor
mov
push
push
or
xchg
hlt
aad
lock
pop
mov
inc
mov
fistpl
cmp
jo
pop
xor
sbb
or
movsb
movsb
jp
push
mov
inc
dec
mov
mov
mov
sub
xchg
out
fnstsw
std
in
xor
jae
adc
stc
out
divl
dec
mov
adc
lahf
xchg
xchg
outsb
int
arpl
mov
push
jge
arpl
mov
ja
stos
dec
mov
or
xor
mov
sti
stos
lcall
aad
xchg
sbb
push
pop
sbbb
push
pop
ja
outsl
mov
jge
fsubl
in
insl
addr16
jo
fwait
scas
cmp
in
popa
add
adc
lds
sub
std
je
pusha
ret
les
outsl
add
scas
stos
mov
lods
fidivrl
jo
or
push
push
pusha
xor
jo
rorl
xchg
mov
les
inc
bound
pop
xchg
pop
fmuls
shl
adc
js
loope
jns
add
int3
dec
lock
pop
dec
sub
adc
stc
sarl
rcrl
adc
test
out
mov
daa
mov
daa
cwtl
sbb
aad
popf
add
cmpsb
in
xor
mov
inc
push
call
je
cwtl
mov
sub
test
out
pop
aas
mov
pop
and
mov
pop
xchg
jmp
mov
push
push
rcrl
add
mov
inc
movsl
into
mov
adc
push
dec
dec
loopne
icebp
ffreep
dec
stos
dec
adc
sbb
push
clc
lahf
ret
xchg
mov
dec
call
xor
popf
and
push
cltd
cmpsb
xchg
push
scas
inc
call
ja
push
popa
mov
xor
into
mov
popl
mov
stos
inc
lds
rcl
iret
mulb
arpl
mov
lods
push
icebp
pop
jmp
lock
adc
movsb
inc
xor
mov
sarb
in
mov
aad
cmc
xchg
pop
aas
fnsave
adc
and
clc
cmc
ss
movsl
pop
stos
mov
mov
cli
dec
pop
cltd
insl
into
or
cmp
mov
xchg
sti
pop
mov
out
xchg
mov
fwait
adc
test
sbb
push
xor
inc
inc
out
sub
sub
fxch
xchg
jle
lock
sbb
js
lods
in
cmp
jp
rorl
aam
jne
shll
dec
cli
pop
push
mov
lret
outsb
inc
fidivrl
xchg
xchg
mov
pushf
aas
sub
rcl
dec
pop
pop
mov
xchg
testl
pop
lock
je
xchg
push
xchg
imul
sub
cmp
ds
or
das
lahf
cmp
mov
fnstsw
xor
ljmp
aam
dec
mov
adc
cmp
testl
incb
mov
inc
or
lret
faddp
repnz
adc
xchg
faddl
add
mov
lods
stos
add
or
push
push
jno
fmull
or
jmp
loopne
inc
jns
cmp
dec
movsb
lret
movsb
mov
mov
les
testb
xchg
jecxz
mov
testb
shlb
fnstsw
mov
mov
sarb
in
and
add
cltd
mov
arpl
cmp
js
jno
mov
and
orl
mov
xchg
cmc
cmpb
mov
divb
xlat
sti
xor
addr16
mov
mov
in
pop
ds
and
xchg
jbe
add
xchg
mov
mov
xchg
mov
test
dec
repz
push
sub
pop
lcall
fucom
dec
shrb
push
mov
je
pop
notl
jge
popf
or
nop
xchg
add
ja
sarl
sahf
add
fdiv
es
adc
movsb
movsb
out
push
push
lock
into
adc
mov
jo
inc
lret
xchg
addb
pop
or
cmp
or
loopne
hlt
movsb
stos
sbb
lret
lods
push
xchg
jae
adc
push
or
aam
test
ret
pop
mov
lods
lret
xor
push
dec
adc
bound
scas
jo
lock
pop
scas
pusha
sbb
sbb
lret
pop
push
leave
jb
test
mov
sbb
inc
mov
xor
push
push
jae
xchg
adc
jg
scas
push
mov
daa
push
ljmp
xor
shlb
mov
lock
divb
decb
or
je
lods
in
mov
iret
and
pop
jge
int3
sub
mov
aad
aad
adc
in
or
dec
cmp
movb
stc
mov
cmp
cmpsb
sbb
mov
mov
mov
inc
xchg
je
ljmp
mov
test
insb
aas
dec
sbb
add
stos
cmp
pop
test
mov
lcall
pop
pushf
adc
stc
outsb
sub
ret
adc
scas
fcmovnb
xlat
inc
test
mov
out
sub
cwtl
sbb
out
imul
dec
and
push
imul
lret
sub
mov
xchg
lods
test
fcoms
jne
mov
out
out
jne
sub
cmp
xor
out
xlat
push
std
shl
mov
sbb
mov
xor
fcomps
int
mov
push
cmp
repz
les
or
dec
push
adc
sbb
sarb
adc
fsubrl
subb
mov
or
call
mov
adc
ret
in
mov
jo
mov
and
cltd
shll
imul
outsb
xor
xor
dec
xchg
xchg
fidivl
add
int
xchg
push
leave
repnz
mov
lds
cwtl
xchg
int3
adc
rcll
mov
jp
outsb
push
imul
repz
pop
into
fldenv
push
ret
in
mov
and
cmpsb
push
mov
or
cld
sbb
ficoml
xchg
adc
cmp
mov
pop
in
inc
je
mov
daa
aam
pop
in
sub
jne
mov
jno
adc
loopne
testl
cltd
jmp
in
stos
push
pop
or
cmp
sbb
sti
and
imul
inc
les
pushf
imul
add
mov
inc
and
add
push
aam
push
dec
call
jbe
aam
or
fistpll
xor
cmp
je
dec
mov
fwait
outsb
icebp
mov
xchg
xor
jl
xlat
inc
push
pusha
lret
fs
and
jg
ja
arpl
fisubl
add
pusha
lock
sbb
out
inc
movsl
jp
sbb
and
test
jg
inc
and
shll
pusha
lods
pop
sub
push
test
sbb
in
mov
pop
inc
add
adc
xchg
dec
fimuls
enter
sbb
dec
test
inc
xchg
sahf
pop
cmp
mov
sub
or
js
push
pop
stos
mov
int
aaa
push
into
jno
push
and
add
mov
cmp
mov
sbb
out
addr16
ficoms
adc
rcrb
nop
ret
push
adc
mov
loop
out
mov
push
xchg
inc
mov
push
push
jg
xchg
fs
fadds
xor
or
jle
arpl
mov
movsb
leave
loop
jmp
dec
shrb
fsubl
jg
add
jl
popa
fsubrl
pop
xchg
shl
sub
pop
mov
jbe
gs
adc
std
iret
inc
pop
call
push
cmp
push
cmp
addr16
out
inc
scas
scas
add
adc
out
ror
inc
push
cmc
scas
push
sbb
jp
mov
bound
insl
imul
mov
out
stos
ljmp
sahf
in
pop
pop
or
andl
and
pop
or
addr16
aam
stc
push
xchg
xchg
xchg
push
shll
pushf
jb
in
push
mov
imul
add
enter
scas
mov
mov
add
aas
inc
mov
stos
and
jb
testb
push
pop
mov
mov
mov
test
sub
adc
sti
mov
cmpl
mov
ret
cmpsb
cld
inc
or
add
sbbl
xchg
stos
leave
dec
add
in
push
xchg
enter
jno
jmp
aad
nop
inc
sub
pushf
les
cli
jl
push
mov
inc
test
iret
dec
lahf
xchg
xchg
xchg
push
in
jnp
mov
fistpll
lock
cmp
xor
mov
mov
je
add
adc
lret
pop
inc
hlt
cmpsb
add
inc
movsl
pusha
inc
enter
add
sbb
fs
mov
push
pop
jmp
xchg
mov
or
xor
mov
in
aam
icebp
or
rorb
mov
dec
jbe
faddl
mov
push
fs
ds
sbb
lret
pop
or
popw
jae
dec
repz
mov
xchg
out
push
ret
out
das
js
sarl
push
pop
in
or
sub
jg
inc
dec
je
adc
sahf
mov
mov
je
jae
adc
scas
or
lock
mov
roll
push
pop
dec
dec
sub
test
or
and
pop
sti
push
das
or
rcrb
mov
push
repz
addb
shll
cmp
mov
adc
or
pop
push
rcr
subb
out
inc
mov
into
icebp
repnz
sti
imul
ficoml
repz
insl
add
or
je
test
inc
imul
mov
ss
fldenv
ljmp
cmpsl
push
sbb
mov
xchg
ss
xor
pop
in
lods
loop
push
jl
cmp
add
jg
inc
cmpsb
popa
xchg
hlt
in
subb
gs
inc
mov
cmp
jle
cs
adc
scas
sbb
jae
sbb
push
or
pusha
add
inc
and
adc
cmp
mov
filds
fucomp
mov
hlt
mov
xchg
inc
sbb
fldcw
fdivrp
pop
cltd
test
mov
or
xchg
aam
mov
pop
inc
test
test
out
mov
insl
push
push
dec
push
ja
cmp
fadd
cmp
ret
aam
pop
mov
sbb
imul
lods
add
jne
and
push
add
out
jno
mov
push
scas
iret
out
jmp
lahf
movsl
or
adc
sub
fdivl
jp
add
mov
das
jle
sbb
cltd
pushf
in
loop
adc
adc
out
cmpl
stos
xor
sub
dec
add
dec
jl
cmp
or
cmpb
cmp
or
out
sbb
or
jnp
adc
lock
mov
out
leave
lcall
jl
pop
xor
jae
add
dec
icebp
ja
ret
ffree
and
mov
adc
sti
mov
cmp
push
pop
jb
inc
jl
push
inc
mov
ja
cwtl
call
push
cmp
or
xchg
jp
out
mov
movsl
fsubr
hlt
add
push
fists
or
push
notl
in
subb
fldt
sbb
fisubs
ja
or
arpl
jno
add
and
add
mov
sahf
inc
and
xchg
pop
or
jne
out
cmp
xchg
pop
mov
cwtl
sub
loop
and
xor
insl
pusha
movsl
pushf
mov
test
ret
leave
dec
arpl
mov
mov
xor
xchg
daa
push
adc
xchg
sub
pop
jne
ror
test
je
mov
pop
and
loope
pop
icebp
mov
stc
iret
xchg
sub
pop
pop
jns
popf
push
mov
pop
dec
scas
bound
mov
cmp
shrl
es
out
mov
repnz
test
int3
lods
dec
mov
pop
dec
xchg
hlt
push
push
icebp
orb
push
xchg
sub
jbe
xchg
fiaddl
clc
lods
jge
hlt
sti
shl
push
sub
dec
add
clc
testb
into
sub
movsb
pop
loopne
aaa
icebp
inc
roll
sub
mov
nop
dec
ljmp
cmp
imul
dec
fcoms
adc
rcll
nop
cwtl
dec
scas
sahf
imul
dec
cmpsb
loopne
sub
cltd
sbb
dec
bound
pop
dec
subps
inc
std
orl
lahf
pop
mov
shr
popf
fidivrs
sub
inc
cmp
pop
je
jno
push
jbe
pushf
jo
outsl
adc
sarl
aam
xchg
jle
cmp
jo
push
lods
je
push
out
cmp
clc
inc
pop
mov
leave
repz
jns
test
sub
push
pop
pop
sbb
in
pop
daa
pop
dec
shr
add
jno
fsubrp
adc
and
js
xchg
stc
stos
pop
and
pop
aad
imul
dec
nop
pop
jo
popa
sbbl
xor
out
call
push
mov
add
dec
xor
xlat
sbb
pusha
cmp
sbb
cmpl
pop
cs
xlat
stc
sub
inc
jecxz
scas
std
sbb
addr16
ljmp
imul
adc
mov
pop
mov
jge
pop
pop
shlb
out
ret
xlat
jb
mov
sbb
cmp
mov
dec
imul
mov
inc
or
sbb
xor
stc
ljmp
sub
sub
jl
popa
push
adc
icebp
mov
sbb
sbb
jo
pop
dec
imul
scas
adc
cmp
loopne
test
loop
adc
inc
loopne
pop
jno
cli
pop
mov
add
jecxz
push
inc
stos
cltd
shlb
lret
leave
out
cld
ds
or
push
pop
lods
xchg
mov
sbb
jp
mov
cmp
aaa
cmpsl
sub
push
test
ss
aaa
mov
arpl
adcl
idivb
pop
dec
mov
inc
or
std
jmp
mov
push
sbb
jnp
sub
adc
aas
push
xchg
mov
push
fmull
xor
lock
mov
js
push
test
push
pusha
pop
rclb
leave
dec
fsubl
sbb
lahf
sub
mov
out
mov
rcl
pushl
popa
mov
push
push
add
test
pop
and
inc
into
pop
rol
repz
jae
outsb
rol
insl
divb
data16
inc
pop
into
jg
adc
cltd
test
xchg
cmp
inc
scas
xor
jae
xchg
jmp
xor
sbb
xchg
xor
test
dec
push
js
mov
push
add
or
into
jo
outsb
mov
sarw
lret
mov
mov
fnstcw
popa
idiv
sub
aam
xor
lods
push
and
scas
add
push
sti
sbb
loop
push
test
lock
dec
dec
mov
xchg
add
aam
dec
xor
out
xchg
int
push
dec
lret
push
imul
cs
adc
pop
rol
std
lods
and
leave
dec
mov
out
out
das
insb
jb
mov
jp
xlat
jne
sbb
iret
arpl
inc
and
sbb
dec
or
dec
dec
inc
rcrl
mov
sti
sbb
sub
jp
dec
inc
ds
add
add
stos
jbe
pop
notw
arpl
xchg
dec
cltd
push
push
aad
out
pusha
fiaddl
inc
sbb
and
clc
or
call
xor
xor
or
aas
mov
es
outsb
xorl
pop
or
pop
jbe
jge
jbe
in
fsubl
mov
iret
ja
std
pop
xchg
fdivl
jb
pop
imul
mov
mov
xor
adc
rorl
aas
ret
adc
out
mov
shrb
and
jnp
adc
and
fidivrs
dec
adc
mov
or
dec
cld
inc
xorb
out
ja
cmp
mov
lret
mov
xchg
shl
sub
fistpll
xchg
bound
mov
mov
jle
push
mov
icebp
xchg
dec
or
es
in
xchg
xor
xchg
aad
addr16
mov
movsl
jp
mov
mov
movsl
jp
fsub
movsb
xor
pop
loop
xchg
test
xchg
cmp
out
push
mov
mov
cs
shrb
dec
jne
mov
icebp
std
ss
push
pop
pop
les
or
and
add
mov
mov
arpl
lcall
or
rcrb
or
dec
inc
xchg
out
push
jns
push
jge,pt
inc
jo
mov
sbb
push
jo
in
cltd
add
ss
testl
test
loop
pop
lcall
adc
and
xchg
popf
xchg
inc
cmp
out
pusha
jl
sarl
mov
loope
sbb
adc
jno
xor
cmpsl
loope
rclb
insl
inc
or
ljmp
or
cmpsl
inc
pop
xchg
in
add
inc
cltd
inc
popa
and
rcll
iret
push
js
mov
hlt
test
rorl
hlt
jbe
mov
or
push
dec
mov
aaa
push
test
push
mov
adc
mov
and
hlt
xchg
inc
add
cli
jae
xlat
shr
pop
push
cmp
add
loope
mov
pop
xchg
lods
movsb
cmp
pop
outsb
imul
cmpsl
add
push
xchg
stc
xor
pop
andb
lret
mov
sbb
lods
enter
fbld
rorl
xor
sub
jl
push
fisubrs
dec
mov
adc
stos
jns
mov
loope
xor
push
sbb
int3
mov
jne
test
cmp
sbb
or
cmp
inc
xor
lds
add
adcl
jno
ljmp
xor
movsb
jmp
enter
pop
mov
pop
icebp
pushf
jb
mov
movsl
mov
mov
inc
mov
mov
xor
inc
xchg
andl
sub
push
sbb
js
fadds
push
fdivrl
jge
ds
imul
dec
cmp
movsl
xor
in
arpl
call
je
inc
or
es
pop
in
xor
sub
inc
sub
jo
lret
faddp
jmp
movsl
inc
push
insl
mov
pop
jnp
push
pop
mov
outsl
mov
adc
es
sar
rolb
js
mov
mov
lods
pop
mov
adc
cmp
sub
mov
cmp
ljmp
mov
inc
call
pop
clc
into
inc
or
sub
adc
xlat
push
imul
ret
lds
lods
pop
fsubrl
andb
jecxz
cs
xchg
out
cmp
or
ret
pop
ja
movsb
jle
pop
add
xorb
xorl
in
adc
jle
sti
jecxz
sbb
mov
adc
push
test
lcall
push
dec
ret
js
xor
add
aas
mov
lods
inc
movsl
jecxz
fisttpl
pop
cmpb
insl
rcrl
std
mov
movsl
fmuls
test
jnp
jl
mov
cmp
iret
mov
movsl
es
call
jne
mov
in
nop
sub
imul
dec
stc
test
mov
push
and
fisubl
loopne
sbb
das
cmpl
add
insb
arpl
ljmp
mov
xor
adc
inc
fwait
ret
push
and
mov
cmpsb
rcrl
cmc
pop
in
cmp
xchg
sbb
cmp
sbb
jmp
movsb
shrb
dec
sub
lcall
cmp
jmp
xor
fwait
dec
cmpsb
push
pop
lcall
clc
jle
pop
mov
xlat
xor
dec
les
xchg
mov
mov
inc
nop
pop
outsb
xchg
dec
adc
in
cmc
mov
out
fildl
pop
icebp
or
gs
test
js
lcall
push
les
aad
xor
cmpsl
mov
jg
loope
jae
in
jl
sbb
shlb
fdivrl
cli
add
xchg
sub
movsb
lods
movsl
pop
mov
inc
mov
push
and
lahf
lds
fisubrs
mov
mov
ret
push
pop
pusha
or
pop
add
pop
adc
push
dec
mov
add
adc
fwait
andl
jo
inc
and
out
push
xor
sbb
sbb
rcrl
xor
xchg
or
ljmp
sub
mov
int
xlat
ret
rcll
push
push
mov
dec
jle
xchg
jns
jg
jno
push
fwait
mov
ret
pushf
popa
pushf
push
test
xchg
aas
les
loopne
je
iret
xor
js
addr16
jle
or
loope
in
iret
sub
push
xchg
adc
iret
sbb
pop
jecxz
icebp
popf
bound
and
lods
sbb
or
dec
mov
rclb
or
outsl
cwtl
inc
ja
jp
daa
sarl
mov
subl
shrb
fiadds
xchg
in
lods
les
ret
or
mov
or
popl
call
lock
add
push
js
adc
lods
xlat
lea
stos
push
orl
pop
xor
sub
jmp
repnz
dec
das
outsb
inc
inc
ffree
pushf
push
cmpsb
iret
or
pushf
or
test
int3
jp
fwait
ja
jno
in
add
cltd
fucomi
push
mov
test
subl
arpl
or
dec
rol
nop
push
int3
addr16
outsl
imul
mov
jl
stos
push
push
lcall
mov
inc
cld
iret
clc
loop
out
inc
hlt
xchg
lds
subl
into
ja
mov
xlat
push
test
pushf
or
inc
sub
mov
or
adc
std
js
fs
sub
push
shrb
inc
mov
xchg
dec
xchg
call
jae
xor
add
and
je
decl
xchg
adc
mov
fnsave
stos
bound
roll
aam
clc
and
mov
pop
mov
test
mov
xor
xchg
jmp
jb
repz
repnz
hlt
frstor
push
ljmp
push
dec
les
scas
xchg
mov
lock
push
cmp
iret
movsb
addl
ja
in
mov
adc
ja
and
in
testl
ja
dec
dec
sbb
sub
insb
js
cltd
movsb
rcrl
std
imul
movsb
sbb
or
je
and
push
cltd
pop
mov
dec
mov
or
cmp
xchg
sti
mov
enter
jmp
dec
mov
sbbb
cmp
push
inc
cmc
aaa
jg
loope
or
pop
das
inc
mov
push
shrb
outsl
push
mov
adc
mov
mov
aad
add
sarl
push
sarl
sbb
lds
and
xor
and
les
sbbb
repnz
push
push
sub
jno
inc
sub
hlt
push
jbe
ret
aad
mov
addb
or
testl
cmp
gs
adc
pop
sub
jbe
ret
ja
out
xchg
cmpsl
fadd
ljmp
fdivrs
test
test
push
in
in
daa
or
or
and
adc
mov
jle
inc
mov
add
std
xchg
shll
clc
pusha
rclb
ret
sub
dec
or
sub
aad
aaa
sub
test
mov
sbbl
testl
xlat
test
pop
sub
or
jbe
add
inc
inc
sarl
std
jmp
or
dec
icebp
jbe
test
sbb
out
sbb
mov
xchg
cld
sub
sbb
mov
gs
sbb
stc
adc
or
pushf
cmp
dec
lods
fbld
cmc
mov
imul
mov
dec
adc
aad
jb
jnp
js
test
fadd
and
sub
xor
push
jb
mov
mov
push
shlb
sub
lcall
and
les
lea
in
mov
lret
jmp
cmpl
jl
or
addr16
and
cwtl
xchg
aaa
sbb
pop
adc
xchg
add
and
jmp
mov
das
dec
dec
cmp
into
inc
mov
dec
lods
jb
pushf
adc
add
sahf
mov
xchg
xor
call
mov
adc
leave
dec
xchg
mov
sti
repnz
in
loopne
pop
xor
pop
pusha
lret
pop
dec
lds
imul
hlt
mov
xor
and
mov
inc
push
imul
mov
push
cmp
test
and
xchg
inc
iret
cmpsb
push
mov
and
push
sub
movsb
adc
inc
lea
dec
push
aaa
sbb
pop
pop
sahf
lret
or
test
inc
in
lea
mov
cmc
popa
cmp
loop
aad
sti
sahf
sti
int3
test
xchg
sar
push
lcall
loop,pn
ror
pop
dec
out
stos
mov
push
xlat
dec
inc
dec
and
push
lods
fcmovb
inc
or
idivl
clc
xchg
fmull
imul
stos
jecxz
mov
aad
out
js
add
pop
dec
subb
movb
adc
les
cmpb
outsb
sbb
aad
icebp
xchg
cmp
aam
or
scas
push
cmp
stos
ret
pop
les
movsl
repnz
adc
jb
jecxz
ds
sub
test
aaa
inc
mov
aad
jne
in
dec
inc
jae
mov
dec
cmp
and
mov
fdivr
push
in
mov
ss
jbe
add
sbb
mov
fmull
vmovntps
mov
sub
test
jge
outsl
adc
ret
inc
and
mov
sub
cmp
imul
and
loopne
or
push
daa
add
aaa
sarl
xchg
test
pop
cmp
dec
stos
pushf
stos
std
fdivl
fwait
insl
mov
fwait
sub
fidivs
lds
xchg
icebp
cmpsb
fidivrl
ret
test
aas
nop
mov
cld
mov
sub
lcall
dec
in
jb
xor
and
scas
addl
push
add
xor
inc
hlt
and
imul
adc
inc
push
int3
push
call
cmp
and
cmp
mov
roll
adc
mov
add
jp
push
popa
hlt
xor
pop
dec
xor
sub
adc
pop
jne
in
sbb
fsubs
and
cmpsb
dec
ss
jle
jnp
in
out
sub
adc
aas
fwait
adc
rolb
test
arpl
loope
ljmp
mov
jae
sub
adc
mov
inc
mov
stos
xchg
jno
lods
or
pop
rorb
or
aam
daa
fdivl
xchg
outsb
jne
inc
mov
aaa
gs
imul
negl
and
jo
mov
jbe
pushf
mov
notb
and
call
lds
in
cli
sbb
adc
setg
add
stos
inc
in
mov
fmull
mov
and
int3
jecxz
adc
fimull
je
or
mov
and
pop
sub
inc
pusha
pop
pop
push
dec
into
sti
out
stc
push
xchg
fidivs
jne
cli
pop
in
jo
sub
and
insl
sbb
cltd
lret
lret
out
add
aad
and
add
mov
ss
xchg
repnz
fs
stos
sub
lret
push
push
lea
push
fnstcw
push
pusha
push
mov
iret
fisubl
das
daa
mov
repnz
cli
lret
xor
aad
out
mov
insb
divb
add
dec
jl
adc
aaa
popf
cmpsl
add
add
data16
out
pop
fidivrs
lods
sub
shl
pop
add
loopne
out
mov
out
popf
hlt
and
outsl
pop
sarl
add
out
insl
mov
mov
jmp
xor
stos
mov
ret
sbb
out
lds
fists
sbb
ljmp
nop
or
shr
lret
xor
pop
out
pop
testl
sti
mov
jno
jge
xor
popf
cmp
pop
and
ret
adc
lret
fisubs
inc
mov
and
xchg
add
sub
xor
pop
or
pop
cmpsl
lahf
bound
movsb
mov
shrl
stos
or
cmp
pop
dec
andl
adc
mov
cli
into
push
mov
and
xchg
push
inc
sub
bound
jo
fcmovnb
cmp
es
aas
stos
mov
jno
mov
in
cli
ja
push
mov
and
inc
mov
mov
inc
dec
push
inc
sahf
mov
cmpsl
lret
adc
js
lcall
inc
gs
movsl
push
data16
inc
ss
sbb
inc
inc
mov
roll
jae
loop
adc
xchg
xor
mov
out
jno
jge
push
test
xchg
push
xchg
lock
aam
jg
xchg
jnp
aaa
incl
xchg
mov
fwait
arpl
mov
cltd
jb
arpl
test
pop
dec
repnz
adc
sub
sub
mov
es
dec
mov
repnz
std
into
scas
loope
jp
adc
stos
dec
lods
xor
push
jge
scas
sub
stc
sahf
fwait
fwait
sub
mov
lock
sub
push
xchg
inc
jge
lock
loope
out
adc
int3
in
pusha
stos
cmc
mov
and
mov
daa
in
dec
push
sbb
fisttpl
sbb
or
sbb
dec
aas
shll
pushf
hlt
sbb
inc
sbb
scas
cmp
addr16
xor
lret
leave
add
es
and
jl
mov
mov
icebp
xor
fcmovu
dec
shrl
repnz
mov
and
dec
subl
xchg
jle
je
test
inc
pop
jae
jp
or
pushf
lret
in
cld
fs
lahf
ret
insb
or
imul
shrl
popf
cli
mov
xchg
mov
fdivp
cmp
mov
sub
enter
jbe
inc
jp
jb
push
mov
hlt
sbb
mov
stos
or
xor
sub
pop
cmp
jno
xchg
or
or
adc
in
mov
inc
outsl
jno
scas
pop
sub
scas
sub
push
and
loopne,pt
fildl
out
and
pushf
movb
cwtl
add
in
add
popfw
or
inc
stc
mov
cli
mov
pop
ds
xchg
in
fstps
mov
xchg
xchg
outsl
addr16
adc
jbe
stos
stos
cmp
sbb
mov
shlb
xchg
addr16
ja
ja
scas
mov
mov
dec
inc
pop
es
and
dec
clc
idiv
lret
popf
aas
xchg
andl
cwtl
xchg
cwtl
adc
in
fildll
jg
test
dec
scas
lock
out
test
fs
dec
inc
in
fadd
dec
inc
es
mov
cltd
outsb
insl
xchg
xor
test
out
pop
ret
outsb
test
mov
or
or
popf
pop
jecxz
out
mov
mov
call
add
inc
fdivs
inc
fstl
mov
adc
hlt
scas
adc
xchg
sub
mov
push
cmpsl
or
repnz
mov
negb
mov
push
and
inc
jl
xlat
add
fldt
mov
cmp
sti
inc
jecxz
cmp
push
cld
and
or
int
aad
loopne
subl
xor
mov
jo
ljmp
push
les
pop
xlat
js
cmpl
push
notl
jno
sub
sbb
jle
into
dec
rclb
loope
in
pop
rclb
in
jle
cmp
lock
adcl
dec
xor
leave
loope
arpl
jp
cmpsl
dec
cld
jl
sbb
xchg
sbb
add
or
in
jo
loope
stc
jne
and
xor
in
ret
xor
popa
ret
dec
inc
pop
sbb
lret
loope
xchg
or
push
cmp
or
flds
dec
dec
xchg
test
push
add
mov
aam
inc
jp
adcl
push
std
leave
es
in
jmp
stc
add
lods
mov
mov
sbb
sub
xlat
or
mov
jb
lcall
lock
adc
fstpl
and
inc
adc
push
mov
pop
adc
imul
out
mov
push
or
popa
mov
scas
shll
pop
out
lea
lret
xorb
mov
lods
mov
lret
ja
adc
inc
and
sub
mov
cmp
loop
pusha
push
pcmpgtw
out
xchg
or
push
enter
aam
fisubl
insb
stos
in
pop
push
fnstcw
push
or
inc
xlat
add
sbb
mov
or
inc
fldenv
dec
es
add
ljmp
pusha
xchg
mov
stos
mov
popf
or
cltd
dec
pop
jl
into
js
mov
outsl
repz
mov
and
int3
icebp
mov
adc
cmc
cmpsl
lahf
insl
fidivrs
jmp
cmpsb
clc
fistl
ljmp
outsb
dec
push
popa
xchg
out
fwait
out
les
iret
and
rcrl
push
cmp
adc
adc
sbb
lcall
lods
add
gs
in
cltd
xlat
aad
cmp
dec
push
loop
movsb
mov
cmp
push
or
loopne
dec
sbb
cwtl
push
cmp
xchg
sti
inc
jae
jb
nop
pusha
adc
or
push
sbb
enter
bound
cmp
pop
xchg
repz
scas
mov
jb
mov
xor
dec
cmc
sbb
aad
shlb
sbb
push
xlat
pop
jmp
outsl
mov
sti
in
sub
lahf
cmpsb
je
jnp
movsb
test
aaa
lret
xor
cld
fsubr
pop
lods
sbb
or
test
sahf
adc
pop
or
ljmp
test
nop
test
scas
adc
fdivrl
pusha
notb
sub
aad
dec
xchg
inc
pop
int
cmp
adc
adc
mov
icebp
aam
lods
mov
ret
stc
ficomps
fmuls
and
movsb
jbe
dec
pop
xor
andb
fdivrl
inc
or
ret
fldl
pusha
insb
push
push
inc
int3
loopne
in
mov
push
ljmp
ss
shlb
cmp
mov
pop
jno
cs
dec
push
jg
orb
pop
xchg
mov
shlb
pop
sub
out
stos
rcr
enter
aaa
fidivrs
mov
dec
adc
push
mov
rolb
inc
mov
fimull
sahf
mov
inc
aas
out
adc
repz
or
dec
arpl
fistpll
pop
mov
out
ss
subb
daa
xor
jae
dec
test
xorl
aam
and
jno
js
adc
mov
imul
fcmovnu
inc
mov
or
and
rclb
stos
cmp
cmp
inc
shlb
ja
or
and
sbb
insl
push
js
sahf
mov
es
in
fdiv
or
data16
push
sbb
xchg
rcll
or
daa
inc
cmp
cmc
mov
clc
mov
daa
movsl
test
xor
or
stc
xor
add
enter
add
ret
push
into
popf
rcll
fldz
push
pop
std
cli
adc
and
rcl
das
jmp
sub
test
and
cmp
mov
inc
out
lods
cld
cltd
cmp
xchg
pop
js
mov
sbb
jno
fsubrs
rcrb
out
push
stos
int3
mov
sbb
pop
repnz
jp
sub
xchg
cmp
sbb
mov
sbb
lret
cmp
fnclex
fcoms
inc
out
sbb
xchg
mov
bsf
imulb
aam
fmuls
icebp
movsb
int3
mov
adc
xor
daa
sub
mov
fnstcw
jecxz
dec
mov
mov
jnp
jg
es
mov
add
or
sahf
lods
imul
push
push
jo
mov
aaa
mov
fnsave
and
insb
pop
cmp
and
adc
push
sub
pop
fidivl
addl
repz
aad
test
popa
dec
mov
sbb
jecxz
jns
aam
adc
jmp
fnsave
mov
pop
imul
push
in
scas
or
sub
scas
xor
aaa
cld
add
pop
js
lock
pop
sbb
mov
jne
jg
xor
pushf
lret
and
roll
jb
dec
adc
jg
insb
mov
lcall
xchg
or
btr
xor
addr16
mov
loope
cmp
clc
sti
push
aam
lea
jae
arpl
ja
pop
iret
fcmovb
test
das
sub
in
call
es
dec
aad
fiaddl
mov
iret
repz
test
mov
fnstcw
sbb
xor
rolb
sqrtps
jmp
jb
stc
out
out
lret
mov
cli
addb
xor
cmp
xor
jbe
pop
or
rcrl
ficompl
mov
push
lret
sub
cmp
sbb
cmp
test
inc
popa
ljmp
jnp
sub
outsb
pop
aaa
mov
flds
jb
rcrb
push
cmc
ror
xchg
or
cmp
scas
jne
pop
push
lea
loopne
test
pop
les
push
cmpsl
jp
pop
and
adc
mov
sbb
into
leave
leave
push
stc
pop
aam
rorl
push
xchg
std
pop
add
dec
negb
sahf
mov
fwait
mov
or
std
lcall
flds
icebp
xor
mov
pop
sub
es
daa
mov
jle
fnstenv
cld
sarl
push
ret
or
mov
mov
inc
in
jge
jae
scas
jae
das
repz
mulb
pop
ds
add
and
outsb
mov
scas
mov
out
jno
push
mov
out
out
insl
aaa
fs
cs
sbb
cli
push
add
hlt
jmp
frstor
dec
aam
das
imul
stos
dec
rorl
inc
mov
cltd
dec
jne
xor
es
sub
out
fildl
adc
lock
sbb
mov
gs
xor
xchg
ljmp
stos
mov
mov
jnp
xor
jne
mov
push
add
push
es
out
fistps
es
icebp
test
pop
pop
push
cld
sub
xor
mov
lods
xor
andb
mov
cltd
and
adc
call
inc
adc
mov
repz
xchg
xchg
loopne
jns
sub
sbb
repnz
mov
dec
push
pop
dec
jns
add
add
inc
das
mov
mov
mov
rorb
mov
cmp
fdivrl
testl
cmp
orl
jg
enter
cmp
cmp
repz
icebp
incb
in
lret
in
movsl
in
push
loopne
xchg
cmp
jg
mov
jmp
inc
jle
or
shr
outsl
or
push
and
sti
sbb
sub
add
sbb
jle
push
les
adc
mov
dec
shrl
insb
xor
insb
cmp
movsl
xor
xor
push
outsb
fcoml
dec
mov
ljmp
outsl
pushf
inc
enter
scas
stos
adc
pop
rcr
mov
inc
xor
cld
pop
je
push
push
enter
xor
push
cmpsl
icebp
cli
adc
addr16
fs
xchg
shl
sub
adc
sub
sub
dec
push
pusha
xor
push
or
fisubs
push
shrl
fldcw
in
push
cwtl
lds
cmpsl
imul
ljmp
jno
fnstenv
cli
cmp
and
cld
adc
and
push
jne
adc
mov
mov
imul
add
add
test
xchg
outsb
mov
add
xchg
shll
in
sub
cmp
and
sbb
pop
pop
cld
fildl
daa
sub
clc
push
mov
sbb
fnsave
dec
add
out
jecxz
pop
loope
int3
iret
or
out
or
jnp
mov
repz
adc
cmp
ror
sub
pop
lret
or
cmc
cmp
nop
nop
mov
iret
sahf
jecxz
sub
je
gs
mov
lea
hlt
adc
or
repz
pop
jecxz
inc
xor
adc
push
or
xchg
and
popa
daa
mov
sub
repnz
mov
pop
in
add
pop
mov
stos
les
xchg
mov
fcmove
out
repnz
testb
iret
lcall
aaa
push
fs
adc
jecxz
les
enter
cmc
cmp
ret
sbb
mov
cli
mov
sub
jb
pop
cmp
scas
mov
xor
and
jo
in
daa
inc
pop
lahf
mov
enter
push
lds
push
popa
lods
or
loop
pop
sub
mov
pushl
cmp
add
adc
mov
scas
cmp
mov
or
mov
mov
test
mov
ja
test
mov
lods
les
ret
es
and
cmp
arpl
cwtl
jo
paddusw
jnp
cmp
lods
in
in
shl
push
call
idivl
jns
adc
ret
pop
lea
test
mov
loope
xchg
js
stos
add
push
fisubl
cli
push
stos
rcrl
jmp
jle
jl
inc
xor
xchg
or
add
in
insb
cwtl
push
mov
adc
xor
pop
cld
scas
aas
pop
outsb
mov
ds
mov
testb
push
loope
ja
pop
cmc
or
cmpsl
stos
test
push
inc
pop
pop
lahf
push
push
cli
mov
mov
mov
cs
mov
sub
cs
ds
pop
mov
je
out
xchg
testb
jne
notb
les
int
stos
ds
xor
xchg
mov
mov
mov
movsb
cmp
int
push
jecxz
call
or
imul
nop
pop
imul
or
frstor
xor
dec
popf
iret
mov
sbb
bound
cmp
das
mov
jmp
mov
inc
imul
mov
lds
jbe,pn
dec
inc
adc
adc
pop
out
dec
lds
std
mov
mov
xlat
pop
cli
cmp
outsb
cmpsb
scas
jb
pop
dec
add
mov
mov
insb
and
les
jae
mov
push
mov
insb
pop
lds
jnp
stos
sahf
mov
mov
and
mov
inc
cmp
cli
mov
pop
inc
lcall
add
aaa
in
dec
aad
aam
fldcw
dec
ret
stc
lods
loopne
inc
add
mov
nop
cmc
sub
repnz
fimuls
lahf
dec
pop
xchg
xor
mov
fxch
jle
in
adc
nop
out
pushf
xorb
sahf
sbb
xchg
outsb
mov
push
sbb
lock
pop
push
sub
push
pop
jge
sbb
mov
cmp
scas
test
mov
inc
cmp
addr16
rorl
out
addr16
adc
cmp
and
sti
inc
sub
dec
xor
leave
aad
add
jo
cmp
ja
test
bound
adc
jo
sbb
mov
push
push
pop
ljmp
daa
cwtl
mov
fistpl
jae
mov
out
push
shlb
test
add
mov
push
idivb
jb
out
cltd
je
imul
add
divl
push
jno
mov
aad
cmp
mov
xchg
inc
fiadds
rorl
dec
stos
aad
xchg
cld
stos
imul
jnp
ds
cli
rol
push
jmp
pop
push
into
sbb
cld
and
iret
popf
pop
inc
sub
ret
in
xor
mov
and
shlb
enter
ficoms
mov
add
or
sub
test
cmp
dec
pop
lock
xor
xchg
arpl
push
xchg
xchg
jo
xor
or
push
fidivrs
xchg
and
dec
mov
std
das
pop
out
adc
div
dec
rolb
cmp
mov
sub
test
or
das
fisttps
push
push
shrb
adc
cmpsl
insb
xor
and
movsb
mov
subl
sbb
push
push
mov
lret
lret
mov
cwtl
pop
ljmp
pop
inc
push
xchg
in
daa
sahf
cmp
nop
inc
cmp
stos
xchg
dec
test
call
mov
jae
push
add
jns
loope
sub
outsl
pop
jl
repz
add
es
xlat
data16
in
sub
es
push
mov
cmpsl
cwtl
xor
mov
cmp
int
out
xor
xor
out
push
xchg
fwait
sub
sti
mov
fstps
loope
pushf
and
xchg
pop
jge
aas
rcr
pushf
mov
clc
xor
das
xchg
sbb
rclb
inc
lods
xchg
lcall
jae
idivl
bound
cmp
fsubl
pop
push
mov
cmp
and
shlb
push
mov
adc
test
insl
stc
xchg
in
pusha
inc
mov
jg
sub
sbb
jmp
insl
outsl
lods
sarb
dec
jp
cwtl
inc
ds
loope
mov
push
pop
mov
adc
cmp
outsl
mov
sbbl
repz
outsl
and
inc
pop
inc
stc
dec
sbb
fisttpl
adc
lret
loopne
iret
mov
leave
hlt
lds
or
adc
and
or
cmpsl
mov
lods
cmp
movsl
mov
jecxz
push
adc
ljmp
mov
subps
gs
pop
cmc
test
test
popf
aas
xor
pop
outsl
cmpsl
sbb
cmp
stos
nop
cli
push
sbb
jp
test
fwait
orl
add
push
ficoml
xor
dec
aad
mov
loop
das
jle
jecxz
jnp
movsl
je
sub
iret
xchg
fldl
or
jge
repz
mov
test
inc
inc
xchg
test
inc
mov
rcll
or
sbb
cmp
cmp
xor
mov
insb
ret
dec
mov
jmp
xchg
sub
or
add
sti
fsub
lock
dec
aas
push
sahf
inc
shlb
xchg
fstpt
jne
into
sbb
iret
insb
fstpl
aas
or
scas
add
repnz
jns
roll
mov
repnz
push
push
mov
dec
neg
mov
fistpll
and
ret
cmp
scas
add
cld
dec
std
call
jns
out
call
bound
addb
or
dec
sahf
out
jecxz
jno
outsl
loop
sub
sub
and
mov
mov
fwait
mov
rcrb
sub
sub
or
fmuls
mov
push
lods
movsl
mov
arpl
negl
loopne
pop
clc
pop
or
mov
ljmp
in
cmp
in
aaa
cltd
js
adc
inc
jge
test
adc
jo
mov
jnp
cmp
mov
arpl
sbb
add
or
cwtl
sub
les
mov
xor
cmp
mov
ja
pushf
stc
xchg
inc
dec
rcrb
lds
mov
adc
cmp
es
in
pop
jl
mov
fstpt
sub
mov
or
add
movsl
lods
mov
sahf
xchg
xchg
adc
cs
mov
pop
out
aad
int3
dec
jbe
mov
jle
pop
or
sub
inc
push
sub
jb
dec
ss
rcr
nop
pop
aaa
mov
loopne
xchg
sti
pushf
sbb
stos
movsbl
pop
inc
sbb
adc
cmpl
push
push
shlb
pop
dec
push
scas
sbb
sbb
test
addr16
xchg
pusha
push
mov
leave
xchg
dec
pop
cwtl
xor
mov
andl
sti
outsl
xchg
lds
mov
scas
and
add
les
mov
jnp
lret
arpl
sub
jle
arpl
cmp
or
pop
adc
orl
outsl
loope
adc
xchg
pushf
mov
shll
and
cli
stos
out
mov
mov
call
aas
cmp
xor
sub
pop
mov
or
and
push
sbb
add
mov
lods
imul
loop
push
mov
xchg
mov
xor
shr
mov
les
lret
dec
dec
imul
xor
aam
push
xchg
mov
and
jge
sbb
cld
jbe
add
jg
adc
jle
mov
cwtl
xchg
sub
out
push
jmp
jl
arpl
or
cli
and
jbe
mov
notb
jne
jne
jmp
lret
add
addr16
mov
push
jmp
lock
stos
ljmp
pop
subl
es
test
in
dec
mov
pop
sub
clc
jo
xor
add
gs
popa
dec
push
cmp
jecxz
int
pop
loop
lea
cltd
lcall
in
je
movsb
movsb
in
out
push
data16
inc
cmp
stos
addr16
mov
xchg
cmc
outsb
adc
test
dec
and
lcall
sub
es
cmovae
mov
inc
push
cmp
add
out
add
dec
outsl
mov
lea
xor
orb
iret
scas
jp
pop
popf
push
ss
jge
aad
jmp
sub
jle
jle
inc
imul
into
cmp
fs
lods
mov
pop
aaa
scas
cltd
int
sub
test
xchg
inc
adc
rcl
gs
aas
insb
pushf
cwtl
ret
mov
cli
fistpl
cwtl
mov
inc
lds
fnsave
ret
inc
scas
fwait
mov
dec
aaa
mov
adcb
dec
xorl
add
or
mov
fldz
sbb
add
jnp
popf
push
and
sub
push
aas
mov
cs
out
pop
aad
stos
add
pop
jecxz
dec
int
adc
lods
jl
jnp
je
adc
push
push
into
cld
pop
out
xlat
stos
or
roll
jl
adc
inc
jecxz
jo
arpl
adc
gs
cmpsb
cmp
mov
mov
movsl
xchg
jnp
mov
iret
pop
ficompl
mov
pop
inc
add
xchg
inc
adc
in
cmp
shrb
in
pusha
das
daa
add
bound
push
jmp
jg
lret
orl
rolb
or
out
cltd
mov
fsts
add
pusha
inc
gs
int3
stos
scas
lret
adcl
inc
nop
cmpsl
push
xchg
add
js
xchg
ror
addr16
push
test
inc
cmp
add
xor
add
call
push
add
lahf
push
adc
inc
jmp
pop
cmp
cmp
rcll
call
push
int
dec
daa
xchg
sub
add
jbe
lods
pushf
sbb
andl
sbb
arpl
punpckhdq
sbb
insl
xor
and
xchg
xcrypt-ofb
cmpsl
sub
or
fldcw
jg
sub
fcmovu
push
shrb
xchg
loopne
fsincos
cli
ret
mov
xchg
in
mov
fldenv
fcomps
xchg
loope
and
js
in
js
outsb
mov
lret
xchg
pop
mov
jno
push
cmc
jno
ret
and
loope
popa
in
and
addl
or
jmp
or
aaa
lret
out
xor
jmp
out
cs
inc
cwtl
mov
je
imul
loope
leave
jmp
sbb
addr16
push
xor
adc
gs
stos
outsb
lds
jg
test
mov
mov
into
xor
dec
stc
or
mov
and
xchg
outsb
mov
jae
enter
mov
popa
pop
push
mov
and
pop
inc
and
aas
lret
mov
push
clc
enter
pop
repz
fcomps
das
sub
cmp
lret
cmp
xchg
leave
cld
fdivrs
decb
and
into
sub
clc
and
pop
idiv
aas
dec
lahf
pop
cwtl
add
cmpsl
dec
pop
daa
daa
stc
inc
or
mov
pusha
jae
jnp
insb
mov
js
or
cmp
into
mov
xor
clc
testb
add
cmp
jmp
in
inc
sbbl
xor
cs
xlat
into
xlat
sub
test
jg
std
xlat
flds
jbe
int3
icebp
repnz
mov
xchg
out
repnz
jge
adc
mov
inc
cmovns
push
bound
sub
scas
ficoms
xchg
pop
in
inc
movl
and
jbe
pop
dec
enter
cli
sbb
sbb
push
clc
push
aaa
push
sar
lods
icebp
imull
scas
jmp
inc
dec
stc
inc
daa
fwait
adc
imul
add
jge
cltd
pop
push
push
repnz
mov
lcall
fprem1
and
fcomi
add
rclb
mov
or
aad
or
cmp
add
repz
mov
lods
iret
cmp
ljmp
push
lods
push
and
push
fisubrs
jecxz
cmpsl
mov
mull
test
adc
ja
and
push
push
mov
pop
xchg
das
dec
sbb
in
fs
je
pop
nop
mov
lcall
mov
movsb
lcall
add
sub
mov
dec
andl
inc
mov
mov
pop
jp
and
inc
stos
insl
je
fimull
fiadds
mov
jge
push
insb
test
addr16
mov
sbb
out
jb
das
movsb
arpl
and
sub
in
pop
jg
test
jbe,pt
jl
lret
lock
fstl
push
cmp
jle
xor
shl
fdivrl
addr16
lret
aad
pop
mov
jl
ljmp
shll
lods
scas
dec
adc
testl
push
jo
sub
js
not
test
aam
es
cmp
test
jo
jns
mov
cli
push
cmpsl
dec
mov
ret
sbbb
xchg
add
dec
shll
cmpsl
jecxz
lahf
rorb
push
or
adcl
mov
fsubrs
mov
xorb
daa
inc
sub
ljmp
fisubs
jne
stc
mov
cmp
sarl
xor
in
pop
sub
inc
xchg
and
mov
icebp
fidivs
push
sub
ljmp
pop
mov
push
rolb
xor
outsl
in
jge
fmul
fisttpll
loop
inc
std
cmp
cmp
inc
mov
hlt
pop
shrl
dec
and
lds
test
pusha
or
push
ja
push
mov
mov
lret
inc
cmp
sub
ljmp
xchg
sahf
test
repz
mov
and
aas
loop
stc
inc
dec
dec
push
loope
dec
add
sub
ja
fldt
mov
push
repnz
in
mov
sahf
add
jl
bound
add
bound
jmp
insl
xchg
fisubl
mov
push
dec
xorb
mov
fcos
ret
sti
aaa
repz
push
leave
in
dec
in
lcall
andl
jl
mov
or
sub
add
insb
adc
aam
sub
push
sarb
jmp
lods
nop
pop
adc
mov
lea
jb
push
fiadds
xchg
lahf
jge
xchg
jbe
xor
test
inc
mov
cli
xor
mov
mov
shrb
lock
inc
dec
imul
cmc
mov
lock
pop
xlat
dec
int
xchg
test
push
mov
pop
jmp
addb
scas
jg
mov
mov
pop
inc
into
inc
add
ja
call
inc
div
mov
mov
call
shll
out
inc
add
xor
insb
mull
mov
out
js
add
fcomp
shll
or
lea
loop
pop
enter
test
xor
addl
sub
add
scas
adc
fisttps
fsts
lea
movsl
jp
add
dec
jmp
popa
rorb
imul
add
movsb
lds
fbld
sbb
scas
sub
pusha
movsb
mov
mov
push
fldt
push
cwtl
loop
and
cmp
inc
push
sbb
and
cmp
jnp
xor
pop
mov
xchg
push
xchg
insl
mov
sti
xchg
and
shrl
lea
pop
ss
mov
mov
jp
jno
jno
jne
cmpsl
xlat
pop
mov
inc
jne
adc
pop
sbb
js
add
push
popa
lock
xchg
mov
adc
nop
push
cmpsb
xchg
pause
leave
leave
je
add
scas
push
cmp
adc
xor
fucomi
fsubrs
dec
repnz
out
inc
aad
int3
pushf
int
mov
fbld
pop
and
popf
lods
and
call
dec
clc
jle
adc
insl
push
and
movsl
lods
dec
in
xor
dec
sub
sbb
stc
cs
mov
nop
shrb
push
jle
in
movsb
xchg
xchg
add
cld
ja
addb
lcall
clc
pop
and
xor
mov
pop
sbb
xorb
cmp
mov
dec
sahf
sub
xchg
sub
daa
in
push
inc
xchg
inc
dec
pushf
repz
push
pop
rorl
push
push
out
push
jns
repnz
dec
stos
lret
in
dec
fs
dec
lea
adcb
rclb
insb
xchg
mov
add
xor
stc
jecxz
rorb
xchg
push
aad
dec
jno
sbbl
push
xchg
insb
mov
xchg
popf
jbe
mov
mov
mov
sub
xor
sub
mov
mov
pop
insb
inc
notb
call
or
pusha
fistps
cmp
sub
inc
lods
cmpsb
movsl
hlt
sub
mov
ficompl
enter
jle
jp
push
lea
pop
push
add
test
cld
fcomip
inc
mov
mov
shrl
xor
add
stos
sbb
push
fbld
sbb
sbb
adc
add
aam
jbe
push
int3
loop
xor
out
pushl
push
add
and
aad
mov
sbb
aad
sub
fstpt
add
xchg
xlat
in
sbb
xchg
dec
loopne
inc
xor
iret
aas
mov
jp
add
cmc
mov
in
fdivrl
fdivs
hlt
sbb
lret
mov
sub
xchg
xchg
and
add
xchg
repz
pop
outsb
pop
popf
fwait
idivb
xchg
incb
lea
fwait
xor
sbb
popa
push
xchg
jg
add
mov
sbb
fcomps
imul
pop
test
scas
lret
adc
push
pop
aam
inc
and
push
cwtl
addr16
jmp
adc
inc
fmull
mov
add
gs
clc
and
xchg
mov
pop
pop
cltd
lahf
sub
xchg
cwtl
in
inc
push
dec
jne
gs
and
negb
and
loopne
nop
add
push
mov
ret
inc
sti
cwtl
hlt
mov
sub
lods
lock
sbb
sbb
jecxz
and
rcrl
cli
xor
jb
jb
loop
jle
outsl
or
fldenv
prefetch
mov
pextrw
aaa
and
inc
mov
and
or
or
cmp
jo
stos
in
rcrb
jecxz
pop
lock
daa
sbb
inc
xor
adc
out
mov
sbb
jl
lock
imul
mov
mov
jnp
push
mov
dec
dec
insl
lods
arpl
test
movsb
sbb
or
jge
jbe
cmpsl
mov
add
pop
jae
into
push
in
rcrb
dec
sahf
dec
fbstp
jle
push
leave
scas
dec
cmc
inc
or
test
pop
pop
push
push
aaa
mov
adc
lret
xlat
xchg
mov
dec
mov
std
outsb
fistps
or
sub
and
je
cs
outsl
add
push
aas
lea
inc
into
pop
das
ljmp
pop
repnz
xchg
sbb
adc
jb
test
shlb
mov
pop
fstps
subl
loope
imul
pop
pop
sbb
aad
icebp
pushl
aas
adc
xchg
repz
adc
lahf
leave
je
dec
dec
mov
inc
xchg
in
add
dec
dec
inc
addb
add
pop
xor
mov
cmp
mov
jmp
mov
push
mov
jecxz
xor
cwtl
mov
jns
push
stos
jbe
lods
push
and
cs
pop
movsl
out
stos
pop
push
aad
xchg
jp
movsb
ja
mov
arpl
js
jmp
js
jg
jp
push
mov
aad
fcoml
inc
dec
push
xor
pop
xchg
add
in
sub
cmpb
enter
xor
adc
cs
shl
iret
out
lods
popf
or
icebp
in
and
cmc
pusha
jge
sub
sbb
sar
mov
hlt
jns
iret
inc
pop
gs
pop
jge
test
inc
icebp
pop
mov
jae
insl
push
add
int
jb
addr16
ss
inc
cli
fisubl
ja
cmp
fnstenv
jbe
sbb
dec
pop
fwait
adc
sahf
shl
cmpsb
push
int3
pushf
dec
cs
jle
pop
nop
jp
inc
xor
test
sub
repnz
out
xchg
xchg
mov
or
fnstcw
cltd
cmpsb
test
cs
jb
out
sub
test
movsb
and
lret
jae
in
stos
stc
icebp
mov
or
xchg
loope
sbb
pop
lret
icebp
jo
adcl
loopne
pop
sarl
inc
pop
insl
std
mov
leave
aas
dec
test
jo
outsl
jl
hlt
dec
loope
mov
outsb
cmp
lret
cmp
adc
xor
popf
cmc
clc
jp
jp
rcll
inc
pop
mov
adc
mov
nop
and
into
stc
xor
shlb
cs
push
repnz
shl
test
push
jle
imul
ret
cmp
add
lods
or
mov
outsl
dec
mov
pop
mov
lods
jle
jge
inc
cmp
int3
out
xchg
adc
fwait
jae
mov
popf
jmp
stos
repnz
test
inc
pop
int
mov
mov
in
ss
push
loopne
sub
loopne
faddl
icebp
pop
subl
jne
rol
mov
mov
sub
in
dec
in
insl
cs
in
loopne
cli
repnz
xor
dec
test
mov
xor
jns
ret
push
out
imul
xor
ss
jcxz
lret
sub
pop
and
or
in
icebp
jge
bound
add
jb
adc
aad
push
jo
fcompl
inc
mov
sub
push
mov
mov
out
sub
mov
movsb
mov
push
push
adc
mov
int3
movsb
and
mov
push
jnp
or
repnz
push
cld
das
data16
ficoms
sahf
add
cmp
in
call
mov
xchg
sarb
enter
add
xorl
mov
and
push
data16
call
mov
rorl
adc
subb
and
sar
bound
inc
lret
movsb
inc
xchg
out
xor
decl
in
push
subb
loopne
mov
mov
jle
notb
xor
jecxz
jbe
cmp
cmp
cmp
lock
and
stc
push
stos
bswap
mov
sub
iret
add
inc
js
mov
xchg
ss
ja
mov
dec
xchg
or
dec
insb
lods
adc
lcall
adc
pop
dec
imul
and
pop
ret
stos
clc
outsl
mov
or
in
loop
xchg
popf
lods
sti
dec
sbb
shl
jns
leave
sbb
arpl
xchg
xor
dec
movsl
or
ds
movsb
sbb
dec
out
xchg
sbb
or
aam
or
aad
xorl
add
outsl
jp
push
push
std
cmp
popa
scas
fwait
cld
leave
pop
sarl
pop
mov
jmp
mov
lret
ja
fistl
out
xor
pop
mov
push
notb
popa
push
fists
pop
inc
in
pop
addr16
insb
mov
and
cmp
cld
jae
push
pop
pop
pop
inc
popa
adc
ret
xchg
pop
mov
mov
into
adc
jg
jg
notb
cmp
das
getsec
popa
aam
das
dec
stos
mov
push
pushf
repz
sti
cmpsb
mov
sub
jnp
push
sbb
mov
lahf
fdivs
inc
shll
lret
pop
repz
dec
mov
push
call
jns
cmp
inc
rorl
inc
mull
push
movsl
ljmp
mov
ljmp
insb
popa
lret
mov
xor
loopne
push
push
adc
lock
mov
imul
movsl
sbb
mov
mov
lds
idiv
mov
push
stos
imul
sahf
dec
cmp
adc
loope
je
sahf
shlb
ja
into
cmp
dec
or
xchg
jle
mov
and
outsb
loopne
jne
shl
inc
xor
pusha
and
jo
imul
mov
pop
daa
and
or
les
and
mov
das
push
push
add
loope
cmp
mov
push
and
lea
xchg
mov
mov
pop
imul
pop
inc
xor
mov
adc
aas
xchg
add
push
xor
or
bound
mov
jb
dec
sbbl
fcomps
movsb
in
xchg
icebp
pop
mov
mov
lea
lods
or
adc
dec
jae
jno
mov
stc
int3
fistl
sahf
mov
sub
sub
outsl
sub
shll
test
ret
jl
data16
pop
cwtl
movsl
push
test
mov
dec
or
xchg
dec
cmp
xor
mov
test
dec
add
fs
push
lods
aaa
into
mov
popa
and
dec
jae
mov
mov
dec
stos
std
mov
pusha
push
lahf
mov
mov
pop
dec
scas
inc
js
repnz
push
out
add
inc
sbb
daa
test
sub
sub
sbb
jae
push
push
leave
mov
jl
mov
cmpsb
sbb
or
lcall
inc
fcmovu
pop
outsb
mov
mov
dec
add
xchg
pop
push
xchg
cltd
aaa
std
mov
inc
lret
xchg
pop
popf
pop
clc
cwtl
fmuls
jle
mov
jno
iret
cmp
lcall
lss
dec
dec
jmp
ljmp
addr16
dec
and
mov
mov
push
push
add
jp
pop
jg
dec
rorb
push
push
data16
scas
int3
or
insb
loop
push
inc
push
je
cmc
push
rclb
es
out
jae
lds
imul
arpl
into
mov
lods
mov
or
ljmp
dec
mov
sub
negb
mov
xchg
jmp
xor
add
and
jle
jne
jp
inc
mov
xor
movsb
pop
rorb
sub
push
stos
fcompl
lock
add
lcall
leave
popa
pop
inc
jl
js
inc
push
lods
push
or
fcmovbe
cmpsb
outsl
pop
cmp
iret
adc
xchg
xor
movsb
cmc
test
incb
lcall
push
in
repz
lahf
inc
or
add
je
jnp
fldcw
lods
cld
cld
mov
inc
push
adc
insl
cmp
lcall
push
rcrb
addr16
jbe
xchg
ja
test
fdivr
mov
mov
test
adc
lret
mov
inc
push
lret
mov
push
scas
cmpsl
and
mov
daa
popf
imul
cmc
mov
sub
pop
and
push
fldenv
sarb
insl
fsubl
enter
lret
pop
mov
jmp
push
jb
and
sub
aam
xor
jmp
or
jae
leave
in
xor
adc
cltd
mov
adc
ret
adc
mov
jmp
jge
sbb
mov
lahf
popa
xchg
mov
and
push
daa
iret
nop
mov
call
sub
jle
fnstenv
popf
icebp
xchg
cmc
mov
rolb
mov
jno
addl
inc
push
xor
in
in
push
xor
jne
iret
mov
pop
jmp
sbb
sbb
pop
jne
pop
cmp
push
xor
sub
ficompl
imulb
lahf
pcmpgtd
pop
push
mov
xchg
aas
mov
lret
out
movq
fisubl
pop
ja
dec
mov
jne
popf
iret
cmpsl
xchg
aas
mov
mov
adc
and
mov
in
outsl
xor
add
push
sub
mov
out
fsubrl
jle
testb
push
int3
into
jnp
inc
xlat
popa
movsb
push
aad
cli
test
adcl
pusha
mov
test
xchg
in
dec
jmp
outsb
adc
outsb
and
pop
cmpb
push
xlat
jnp
cmp
mov
arpl
in
adc
js
sub
adcl
mov
xor
dec
dec
aaa
outsb
pop
popl
pop
cld
lods
mov
or
add
mov
push
xor
loope
out
ret
in
adc
xchg
add
test
leave
mov
scas
in
pop
jae
sub
mov
mov
mov
inc
jnp
add
adc
or
cmpsl
or
pop
mov
lret
in
lods
xor
negl
mov
stc
sbb
loopne
xchg
mov
sbb
outsl
out
in
sarb
push
mov
insl
imul
movsb
push
mov
push
sub
inc
adc
xchg
lea
call
in
xchg
inc
mov
mov
into
and
pop
cmp
push
xchg
xchg
add
dec
xchg
and
xchg
pop
mov
shlb
movsb
mov
movsl
popa
jb
xchg
call
repz
mov
inc
mov
sbb
xchg
ret
xchg
add
incb
jbe
idiv
mov
in
jb
pop
lahf
inc
pop
dec
not
add
push
test
sub
loop
xor
push
add
xor
pusha
aas
pop
orl
push
loope
pop
shlb
int
fdivs
andb
mov
and
push
movsb
sbb
fdivs
lds
mov
icebp
jo
loop
popf
push
es
xchg
cmpsb
push
jg
shl
mov
loop
cs
outsl
fadd
cwtl
jmp
jl
jae
xchg
pop
sbb
pop
mov
sti
mov
sbbl
repz
lods
lahf
nop
jmp
and
jno
data16
mov
add
jae
push
mov
int3
cmc
dec
mov
into
mov
or
idiv
or
sbb
or
shrb
mov
int
lods
xor
adc
xchg
inc
shll
mov
mov
pop
ja
pop
pop
shll
loope
push
das
fdivl
enter
mov
adc
xor
jecxz
into
xor
inc
out
sbb
bound
dec
testb
cltd
adc
jmp
jle
ret
ds
sub
pop
imul
sub
xlat
insb
hlt
in
jnp
dec
or
insl
pushf
mov
cs
aad
jae
loope
jne,pt
ret
leave
mov
std
mov
fnstcw
jl
aad
adc
rcl
xor
push
test
movsb
pushf
movsl
popa
stos
lods
std
stos
jle
cmc
add
out
imul
sub
mov
pushf
in
fisttpl
fidivrs
jge
push
and
orl
jnp
mov
cld
enter
mov
mov
mov
in
cmp
lahf
shll
fstl
mov
mov
cmp
test
fsubp
lods
sbb
pop
mov
aam
jg
test
leave
dec
subb
inc
add
lahf
out
scas
out
sbb
sbb
jae
stc
mov
cltd
mov
xor
and
dec
inc
and
push
xchg
pop
stc
xchg
hlt
ds
ja
lcall
nop
add
clc
in
insl
adc
adc
inc
sub
aam
cmp
and
fnstcw
add
dec
sbb
mov
mov
test
movl
cmpsl
xor
hlt
jbe
pop
xlat
lret
stc
jbe
mov
fsubl
lcall
add
lea
push
xchg
adc
sbb
and
test
and
inc
and
arpl
xor
pop
mov
jne
add
loope
mov
popa
adc
scas
cmp
add
push
adc
mov
ror
mov
jmp
out
cmp
cltd
sub
dec
pop
inc
pop
loopne
into
push
or
sub
push
rorl
sti
adc
movsl
sahf
mov
mov
add
jbe
hlt
out
bnd
or
mov
mov
xor
pop
fidivrl
addr16
inc
ret
sti
mov
call
add
negl
push
pushf
mov
out
ficomps
ljmp
cmp
add
jno
sub
jo
xchg
les
sub
push
out
loopew
int3
push
xchg
jb
dec
in
jmp
cmp
in
sub
xchg
idivl
mov
inc
inc
mov
inc
xor
cmp
or
in
xor
imul
inc
mov
or
add
sbb
int
bound
and
jb
fisubrl
jne
adc
jmp
aas
test
rep
inc
add
add
sarl
pop
das
or
in
mov
sub
dec
push
addr16
jbe
shl
sub
pop
adc
and
push
mov
adc
lcall
inc
push
xchg
xchg
dec
shlb
int3
or
xchg
lods
lret
add
sub
jecxz
fidivs
or
shl
outsl
xlat
add
jno
mov
sbb
xor
pop
mov
mov
insb
cld
or
ret
cltd
cmpb
imul
lds
push
inc
xor
push
cld
int3
pop
in
arpl
jae
int
dec
cwtl
dec
imul
cmpl
mov
inc
push
pop
pop
push
jo
scas
test
sbb
mov
shlb
ds
aam
test
outsl
sbb
inc
data16
std
ror
in
pop
mov
cmp
ret
pop
andb
leave
xor
addr16
aam
sti
leave
aad
dec
or
xor
loope
and
enter
shlb
dec
or
xchg
sub
mov
adc
and
jne
fnstcw
sbb
and
inc
gs
fdivrl
mov
cmp
in
enter
add
lret
mov
lret
mov
leave
and
je
add
pop
flds
pop
in
out
ds
nop
pop
mov
push
push
mov
adc
stos
inc
imul
xchg
dec
adc
cmpsl
jnp
mov
inc
mov
ret
aas
and
and
mov
sbb
adc
ja
cmp
fs
push
inc
shlb
mov
insl
in
sbb
mov
xor
mov
pop
lret
inc
pop
sub
or
sarl
std
pop
loopne
sbb
shrl
in
arpl
pop
js
push
cmp
xor
sub
hlt
inc
rdmsr
sbb
add
mov
jae
xchg
jg
sbb
pop
cmp
cmp
or
hlt
hlt
mov
mov
ljmp
jg
test
mov
in
fadds
jns
scas
enter
adc
ja
int
add
loope
xchg
dec
adc
inc
xchg
mov
pop
mov
dec
pushf
daa
jae
push
loopne
cmp
les
dec
add
cmp
stc
adcb
into
add
icebp
sub
jmp
repnz
outsl
rcrb
dec
out
add
ficoml
call
cmpsb
add
mov
cs
cmpsl
xor
cmp
out
fistps
mov
out
movsl
jge
xchg
pop
jp
addr16
call
fbld
fidivl
cld
stos
mov
sub
xor
ljmp
mov
ds
dec
mov
scas
inc
testl
outsb
cmp
xchg
ja
flds
sub
fiadds
or
sub
mov
daa
in
pop
loope
xorb
lret
mov
dec
test
dec
outsl
fwait
jno
dec
pop
push
les
out
inc
jmp
and
sbb
dec
movsb
sarl
push
dec
std
jae
cltd
cmp
xor
adc
fstps
cltd
aas
jns
fcomps
fcmovnbe
test
pop
xchg
cmpsl
lds
ficoms
loope
adc
cs
or
sub
js
frstor
adc
cmpsb
test
dec
inc
sub
ja
mov
adc
sub
sbb
mov
jmp
jmp
pop
bound
and
push
pop
add
inc
push
or
nop
inc
data16
in
mov
scas
or
bound
sbb
jle
mov
jno
movd
out
mov
ja
mov
sbb
mulb
addb
pop
and
lahf
into
inc
mov
jns
mov
ds
dec
jae
ss
sub
lahf
and
mov
inc
jmp
mov
fs
nop
pop
daa
inc
sbb
iret
rcrl
imul
mov
lret
dec
jg
inc
mov
jp
rcrb
inc
sbb
pushf
jnp
jne
mov
std
lock
addr16
add
into
and
mov
leave
das
mov
pop
scas
jnp
int3
jl
lods
mov
push
add
adc
push
fs
sub
pushf
outsb
lret
sti
fstp
cltd
or
outsl
outsl
mov
rcr
out
and
jmp
int3
xor
mov
add
sti
xor
push
testb
xorl
cmpsb
xchg
insb
repz
inc
out
jge
jb
out
mov
inc
rorl
mov
pop
ret
adc
pop
out
mov
mov
aaa
inc
sub
cmp
mov
mov
test
xor
stc
stos
cmp
adc
mov
clc
hlt
fs
xchg
add
in
or
fcoml
jp
pop
cmp
adc
adc
fs
xor
hlt
adc
xchg
add
jns
cwtl
mov
stos
adc
adc
adc
nop
ret
pusha
xor
scas
pusha
cmp
cmp
xchg
cmp
lcall
cmpl
loop
insl
faddl
jbe
pop
cmc
outsl
lret
imul
cs
fmuls
std
jb
fldenv
add
mov
dec
jg
xchg
leave
aam
lahf
popf
test
movsb
jnp
clc
and
sbb
out
lods
adc
and
cli
inc
mov
jno
push
mov
push
fs
cli
scas
out
hlt
movsl
lock
es
pop
pop
push
or
xchg
aas
fcmovne
pop
pop
inc
mov
add
pop
push
and
push
loopne
mov
dec
sbb
dec
push
dec
insl
orb
sbb
or
and
movsb
dec
scas
push
cmp
mov
xchg
adc
inc
jo
nop
push
leave
push
jl
call
mov
push
mov
mov
mov
jno
shr
mov
fstpt
xchg
pop
pop
insb
mov
movsl
leave
sub
in
sbb
in
dec
adc
arpl
xlat
loopne
cmp
fistpll
call
push
popa
bound
xchg
ss
pop
popa
idivl
jno
jp
cmpsb
push
jne
aaa
sub
dec
mov
sub
insl
insl
fnstcw
adc
ficoms
mov
ljmp
insl
push
ja
not
dec
data16
outsl
in
cwtl
neg
adc
out
bnd
scas
pop
lahf
repz
lods
movsl
pop
inc
add
fimuls
test
mov
inc
insb
xor
outsl
pop
nop
mov
stos
pop
repnz
jecxz
movsb
dec
iret
jnp
jle
cmp
ljmp
jns
inc
loopne
or
or
xchg
jnp
sub
pusha
scas
dec
push
pusha
and
int
es
pop
push
leave
lea
stos
sarl
adc
in
ds
insb
add
push
les
cmp
outsb
aad
fstps
and
subl
sub
xor
mov
jne
cmpsb
push
pop
pop
sbb
in
push
mov
inc
arpl
pop
dec
ljmp
insb
jns
test
cmpsl
add
add
outsb
xor
pop
jg
mov
sbb
jns
imul
add
dec
and
or
insb
lock
movsl
sbb
aad
in
xor
ss
push
adc
inc
inc
mov
inc
inc
dec
mov
inc
pop
xor
popw
cwtl
rcl
popa
iret
xor
mov
push
mov
test
aas
call
cmp
sti
call
mov
insb
out
xor
pusha
aad
or
clc
popa
shlb
push
cs
xchg
imulb
push
dec
jmp
das
cmp
xor
pop
and
push
insb
dec
pop
pop
cmp
mov
jnp
fs
push
push
nop
mov
xorb
xchg
shll
repz
pop
mov
dec
sti
rclb
sub
cmpsl
fwait
aas
cmp
stos
sbb
enter
pop
int3
dec
inc
pop
pop
mov
stos
ret
and
dec
out
dec
hlt
or
cmpb
adc
sub
xorl
pop
divb
lret
lock
insl
loopne
out
jnp
scas
aaa
stos
loope
int
lea
inc
sub
ret
and
mov
lea
lods
mov
xchg
adc
pop
adc
imul
fcmovne
sar
pusha
pop
jbe
add
dec
rcl
mov
push
scas
and
loop
fdivp
out
fs
and
cmp
imul
notl
mov
std
cmpsb
and
mull
mov
mov
sbb
jmp
fwait
mov
ljmp
pop
lcall
fisttps
call
inc
leave
xlat
test
fcmovne
pop
lock
sub
pop
popf
std
adc
mov
push
cs
popa
xor
in
xor
pop
push
cmp
sbb
int
jae
stos
lock
jg
ret
push
jp
sub
mov
int3
jp
gs
mov
cmp
cmp
add
jbe
mov
aad
fisttpll
ror
jo
jle,pt
cmc
xlat
jmp
push
inc
push
push
xchg
sub
mov
test
lret
test
ja
sub
inc
jno
dec
push
in
jg
rorb
and
mov
pop
add
pop
mov
int3
mov
jnp
add
sub
sub
and
lods
insl
and
int3
aad
cmp
mov
cmp
xchg
cltd
jmp
sbb
jo
mov
push
xchg
movsl
andb
mov
mov
cs
mov
cmp
pop
lcall
or
stos
jmp
in
xor
push
xor
icebp
adcl
xor
lock
imul
in
mov
cs
cltd
or
add
sbb
or
fs
xchg
xchg
lods
xchg
fnstsw
int3
xlat
and
adc
push
push
addr16
push
lret
sub
add
mov
fisttps
aaa
aas
push
stc
inc
leave
mov
jp
imul
fucomp
dec
test
jnp
pop
push
or
xchg
outsl
cld
in
out
mov
mov
mov
pop
cmpsl
adc
pop
and
mov
out
dec
fincstp
and
push
ja
xor
lods
or
in
and
pusha
jne
xchg
popf
popa
pushf
add
or
cmp
sbbb
es
xchg
fisttps
push
sub
push
popf
xchg
cmp
push
enter
adc
xchg
jmp
jns
adc
xor
gs
scas
dec
mov
and
mov
and
jae
add
push
and
mov
jecxz
stos
loop
push
sub
push
jp
mov
mov
dec
sti
movsl
and
sub
in
mov
lea
adc
cmp
mov
clc
mov
lret
ljmp
adcb
sbb
mov
std
sub
push
cmp
lret
add
xchg
cmpsl
insb
xchg
cli
dec
je
jbe
push
adc
xchg
push
add
add
stc
data16
pop
sbb
mov
addr16
jle
jmp
and
mov
enter
and
mov
xchg
sub
fstps
pop
adc
daa
int
ror
jmp
popf
popf
sbb
testb
and
mov
aaa
jge
adc
xchg
lods
mov
xor
insl
out
pusha
cmp
jne
pop
fidivs
pop
outsl
gs
gs
xor
push
arpl
adc
loop
pop
aas
pushf
fistpl
iret
mov
dec
ret
loope
fnstenv
jbe
jg
ss
push
mov
push
lcall
scas
das
pop
push
insl
mov
shl
cmp
js
jae
test
jmp
loopne
arpl
scas
shlb
lahf
push
sarb
cs
jmp
jns
inc
dec
inc
xor
push
test
cli
push
test
mov
int
mov
add
mov
stos
cmp
cs
std
mov
outsb
test
push
rcll
pop
and
ret
ficoml
xchg
rcr
xor
repnz
lock
lds
or
and
or
inc
inc
loop
inc
push
shrb
mov
sahf
clc
pop
xchg
jmp
sahf
sbb
xor
fwait
mov
jl
lret
aaa
add
push
adc
out
sbb
lds
xchg
in
inc
leave
inc
std
aas
mov
loope
jl
mov
test
movsl
inc
push
mov
sti
repnz
push
scas
cmp
inc
fwait
push
dec
std
mov
aad
std
bound
insb
sahf
xchg
cld
mov
stos
das
mov
sbb
js
fists
es
shrl
dec
movsb
add
shlb
mov
add
dec
mov
xchg
hlt
xchg
mov
sub
mov
add
xor
inc
or
push
fs
cmp
std
mov
in
mov
lods
call
lds
ret
sbb
jmp
inc
add
lret
jp
aam
pmaxub
loop
jp
push
push
jg
and
pop
and
jmp
test
mov
mov
cmp
sbb
dec
mov
adc
add
shrb
fwait
sub
aad
mov
mov
cmp
nop
mov
mov
and
ja
lret
xchg
inc
out
mov
lods
mov
stos
and
and
xor
xor
cwtl
shl
add
pop
add
jecxz
mov
outsb
xchg
mov
push
aas
shll
pusha
lods
lret
stc
dec
in
mov
dec
rol
or
or
jge
push
ljmp
jmp
cmp
notb
stos
mov
sarb
inc
popa
lds
mov
nop
mov
fcoms
addr16
sbb
dec
push
inc
fisubl
cli
icebp
sub
adc
shlb
jno
shrb
xor
cmp
mov
pop
lea
cmc
adc
stos
mov
cmp
pop
daa
inc
test
aam
jae
xor
shl
into
pop
cmp
iret
lret
aam
mov
push
xor
dec
and
cmp
inc
int
mov
pop
jge
cld
lcall
mov
jg
dec
add
addr16
push
out
sbb
fsubs
xor
cld
aaa
sub
push
insb
pushf
out
push
mov
xor
push
mov
sbb
stos
mov
pop
aaa
pop
rol
cmp
dec
inc
sarb
or
push
add
xor
rol
mov
fisubrs
xor
sbb
cmp
dec
push
outsb
xor
cli
pop
arpl
adc
rcl
mov
add
movb
adc
pop
inc
fldcw
and
ljmp
aaa
iret
pop
and
or
inc
ror
gs
xor
iret
mov
lods
fwait
sti
dec
mov
addr16
fidivl
cmp
sub
cmp
and
pop
adc
daa
test
xchg
dec
pop
xor
mov
xor
cmp
and
aas
xor
out
mov
lcall
cmp
loope
mov
xchg
popa
int
mov
insl
call
aam
stc
mov
add
or
scas
or
rol
hlt
out
inc
ret
lret
inc
out
pop
int
popf
addl
mov
nop
xor
bswap
mov
push
pop
movsl
fstpt
arpl
out
cmpsb
in
dec
aam
mov
ljmp
icebp
or
std
push
das
gs
sub
sub
pop
cmp
in
adc
sbb
sbb
adc
jge
clc
xor
or
aaa
in
mov
stos
push
insl
pop
jecxz
jb
cmpsb
push
aad
imul
xchg
xlat
push
sbb
dec
movsl
mov
test
loop
sbb
adc
sbb
sub
and
dec
jae
ljmp
mov
insl
subb
push
cmp
std
insl
adc
and
inc
pop
rorb
mov
test
mov
dec
lea
or
cmp
add
pop
jl
sbb
in
jo
ds
repz
orb
pop
pop
xchg
push
jmp
pop
pop
test
inc
push
idivb
int
lods
xlat
jmp
sarl
cmp
sbb
repz
mov
jge
aam
push
movsl
in
mov
into
pop
bound
xor
addl
inc
loope
mov
ret
jo
repnz
xchg
out
xor
ds
inc
inc
loope
cmp
outsb
es
mov
adc
mov
dec
jecxz
cmc
inc
mov
jl
jns
xor
mov
or
inc
jns
loope
mov
ds
lcall
in
ret
lret
les
xor
loopne
stos
jo
mov
jnp
cmpsb
je
into
pop
sub
pop
iret
and
dec
addr16
xchg
pop
sub
decb
inc
xor
jge
clc
mov
and
mov
push
push
xchg
mov
daa
dec
xlat
mov
loope
jecxz
and
dec
aam
jmp
test
push
loope
jae
dec
imul
jl
cmp
xchg
lods
lds
or
mov
addr16
pop
dec
pushf
add
pop
sbb
in
cli
add
xor
in
push
cltd
sbb
clc
icebp
mov
mov
call
push
loopne
xchg
xor
imul
adc
jns
std
and
xchg
push
sbb
out
mov
add
pusha
jecxz
push
dec
movb
jne
mov
inc
mov
js
push
mov
fsubrs
inc
pop
or
pop
xchg
fildl
imul
mov
fists
scas
mov
sub
push
jnp
insb
xor
popf
test
mov
inc
xor
jle
push
pop
sub
data16
cmp
pop
js
jle
lret
enter
push
or
sbbl
lock
loop
je
jo
lock
gs
xor
mov
add
xor
les
pushf
mov
adc
pop
test
insl
dec
sbb
rcrl
push
daa
jnp
and
ljmp
inc
addl
test
int
xchg
dec
and
push
pop
ret
loope
movsb
xor
out
xlat
js
sub
scas
data16
sbb
inc
popa
stc
shrl
test
mov
lods
jnp
add
cmp
popa
bound
or
xchg
sbb
stc
sub
mov
incl
mov
cwtl
cld
icebp
pop
adc
incb
cmc
mov
lods
les
sub
pop
imul
inc
mov
pop
fwait
or
pop
add
dec
cmp
insb
xor
and
push
lock
xchg
xor
sbb
add
repnz
stos
data16
sbb
adcb
or
dec
sub
adc
cmpsb
mov
mov
das
mov
mov
mov
pop
mov
int
cmpsb
ljmp
mov
jp
aaa
pop
or
sub
fsubrs
lahf
adc
xchg
dec
cmc
xchg
jne
adc
xlat
dec
ficompl
xchg
mov
outsb
test
subb
mov
in
xor
and
xchg
dec
mov
push
roll
sahf
lret
out
add
lea
icebp
pop
xchg
iret
into
push
inc
loopne
mov
and
pushf
faddp
or
adc
jo
cli
adcb
pop
dec
iret
xor
xchg
repnz
mov
cmp
stos
jecxz
inc
out
repz
sbb
sti
rcrl
sub
lds
mov
sbb
or
adc
push
sub
xchg
cltd
orb
ss
mov
and
aad
jmp
push
andl
fmull
mov
aas
cld
pop
in
sub
pop
aas
mov
lea
imul
inc
fwait
in
lret
inc
scas
xor
enter
rcr
rorl
pushl
mov
js
xchg
jge
push
pusha
inc
in
movsl
xchg
inc
decl
mov
push
jae
sub
cs
movsl
adc
inc
inc
repnz
pusha
sub
xchg
and
ret
in
pushf
aas
adc
repnz
adcb
das
ss
cwtl
popf
subl
gs
sub
xchg
pop
loopne
cmp
jno
xchg
shll
pop
fsubrs
jnp
xlat
out
xchg
sub
mov
mov
addr16
mov
mov
movsl
mov
repz
out
scas
hlt
dec
int3
cld
fstpl
mov
mov
into
push
push
lods
xchg
sahf
lahf
pushf
int3
into
icebp
dec
jp
outsl
stos
cmp
les
pop
fistps
sbb
arpl
dec
sti
inc
in
cmpsl
lahf
icebp
int
lret
lds
lds
arpl
mov
sub
ss
addr16
aaa
scas
popa
lock
in
jns
adc
adcb
in
pop
jecxz
jb
sbb
fisttpl
out
aam
ret
add
rorl
xor
shrl
adc
mov
scas
mov
sub
xor
inc
stos
hlt
mov
pop
xchg
fldt
data16
xor
cltd
sarl
lcall
pop
loop
repnz
adc
gs
mov
outsl
inc
jge
sti
xorl
mov
or
pushf
arpl
jmp
jb
ret
movsb
inc
add
pop
add
inc
add
xchg
in
jo
cmp
popa
mov
push
out
xorb
sbb
subb
xor
inc
jnp
call
and
dec
icebp
pop
outsl
jge
in
scas
fbld
stc
je
jge
mov
mov
inc
and
out
stc
sbb
xor
xchg
emms
ffree
inc
dec
cmp
loopne
pop
pop
sbb
push
inc
clc
or
mov
dec
push
jnp
add
sbb
and
sub
cli
pop
mov
ds
dec
lret
xchg
dec
sahf
in
ret
push
xor
push
xchg
cmc
cltd
push
pop
imul
xor
cwtl
mov
xchg
and
xor
jg
or
fsts
mov
inc
cmc
push
mov
add
inc
arpl
cld
xchg
sbb
jmp
sbb
jns
push
mulb
mov
sbb
adc
push
pop
mov
xchg
dec
pop
subl
icebp
sub
lcall
test
into
mov
sbb
add
ret
jmp
xor
mov
out
xor
add
mov
add
push
fidivrl
and
sbb
std
sub
leave
clc
divb
aaa
pop
data16
mov
pop
or
lds
test
cmp
lcall
cmp
mov
in
shll
push
int
call
test
xor
outsb
outsb
and
jl
stc
add
xor
xor
sub
or
lods
mov
xchg
mov
xor
movb
jmp
mov
stos
int
mov
ret
push
cs
mov
es
xor
mov
and
ficomps
adc
inc
jae
or
mov
inc
pop
decl
outsl
jmp
lcall
mov
jmp
xchg
xchg
jno
and
shl
nop
xchg
mov
xor
stc
mov
aad
push
mov
aad
push
idivb
xchg
repz
push
repnz
imul
test
pop
popa
bound
or
icebp
inc
push
jo,pn
stos
insl
pusha
movsl
lret
mov
test
aam
xchg
cmp
pusha
lcall
push
bound
xchg
decl
bound
jb
dec
int
jns
dec
and
adcl
xchg
ret
dec
fdivp
or
pop
cmp
xchg
sbb
and
aam
xor
popa
jno
repnz
repz
inc
rcr
orb
pop
xchg
sub
ss
stc
inc
aad
mov
pop
out
mov
shrl
jbe
inc
xchg
andl
test
loope
xchg
cmp
pop
ret
fildl
mov
cmp
mov
mov
scas
pop
ljmp
rcrb
andl
and
insb
xor
lock
sub
sbb
push
pop
mov
andl
or
xchg
or
mov
popa
xchg
sti
xchg
cmp
or
mov
mov
sub
inc
int3
loope
icebp
jle
scas
jno
iret
dec
xor
or
je
je
jnp
jle
cmpsb
jg
lock
or
add
xchg
rorl
xchg
inc
dec
fsubr
and
in
repnz
cmp
xchg
lcall
cmpsl
dec
mov
inc
gs
sahf
repz
push
cltd
out
pusha
add
sbbl
jecxz
in
push
mov
or
int
mov
bnd
cmpsb
insl
ficompl
aam
mov
aaa
cmp
dec
xor
pop
iret
xchg
jecxz
jmp
inc
mov
or
loop
pop
leave
addb
cmp
push
xor
in
jo
sub
out
sub
repnz
pop
jmp
mov
jmp
fistpl
cmp
repnz
jmp
stos
je
xor
pop
lcall
mov
xor
add
insb
clc
arpl
jns
mov
cmp
iret
mov
jg
inc
leave
adc
lcall
jno
pop
cmc
sbb
pusha
mov
pop
inc
lock
lods
ds
sar
push
loope
sub
out
shr
lods
icebp
in
xchg
div
mov
test
inc
jo
insl
hlt
insb
lret
mov
mov
enter
test
push
push
out
int3
ret
pop
fdivrp
mov
fsubrl
xor
xchg
adc
cwtl
out
jle
addr16
bound
mov
aas
negl
add
mov
aaa
lahf
cltd
push
cli
pushf
push
in
lea
sub
popf
js
aam
cmp
mov
test
andb
je
or
cltd
das
mov
imul
jo
insl
outsb
push
pop
xor
jmp
jmp
or
stos
sbb
fildl
xor
roll
jne
cmp
sti
mov
test
addb
sub
mov
shlb
out
adc
hlt
or
add
mov
push
and
cwtl
mov
scas
je
push
std
addl
add
push
hlt
sbb
clc
sar
jp
arpl
xor
push
testl
idivl
hlt
sub
xor
insb
inc
push
andb
das
stos
or
popf
jne
sti
cmp
pop
les
mov
mov
insb
cmp
sub
pop
js
subb
call
cmp
nop
lahf
xchg
sub
ss
or
orl
and
scas
jle
loope
mov
and
fstpl
mov
dec
sbb
xor
or
ret
test
jmp
leave
xchg
cmpsl
sahf
loop
testb
pop
mov
inc
xchg
push
int
loopne
sub
push
add
push
bound
pushf
push
pop
outsl
and
pop
fldl
or
xor
mov
xchg
repnz
mov
cwtl
shll
jg
ds
call
pop
inc
mov
enter
add
int
std
add
out
dec
add
movntq
cmp
push
seto
out
adc
aaa
push
jnp
lcall
sub
and
test
ja
dec
call
js
inc
call
enter
andb
sti
aam
out
inc
cmc
inc
xchg
addl
or
dec
nop
jmp
dec
in
add
scas
les
inc
int3
ljmp
pusha
mov
pop
dec
loop
push
xchg
mov
sbb
cltd
push
push
xchg
pop
lock
jb
pop
fsubp
fwait
add
mov
movb
out
rcl
sti
adc
les
je
lock
or
cs
fistpll
bound
movsl
inc
stc
dec
mov
into
push
out
lds
push
scas
scas
dec
ss
shlb
js
or
xchg
mov
sarl
leave
dec
subb
pop
pop
ds
mov
sbb
pop
inc
arpl
jnp
and
inc
mov
mov
add
xor
add
stos
aaa
inc
mov
aaa
shll
cld
adc
loop
fidivl
sbb
in
xor
stos
sbb
sub
mov
add
and
mov
pop
in
subb
rolb
es
jbe
sub
nop
dec
lcall
jp
loope
in
push
xor
cmp
sbb
test
push
mov
je
fwait
out
dec
cltd
adc
ljmp
loope
mov
and
in
xor
fcomps
repz
stos
dec
fs
jno
fisubl
mov
sbb
cmpsl
mov
adc
mov
subb
ret
cld
in
js
and
mov
lahf
cltd
fmulp
mov
mov
imul
cmp
test
hlt
jbe
lock
sbb
mov
cmp
loopne
xor
mov
mov
xor
mov
inc
test
mov
daa
dec
dec
pop
inc
bound
push
xchg
bound
add
jge
popa
daa
adc
mov
addr16
mov
inc
sarb
ror
ja
cli
ret
ljmp
sbb
or
push
sub
jle
jb
push
mov
jns
mov
inc
jge
and
xchg
clc
pop
jo
sub
pop
addr16
push
orl
mov
jne
popf
push
push
lahf
cld
xchg
push
sbb
and
add
cmpsb
mov
inc
in
or
sbb
jns
scas
jae
imul
cwtl
inc
pop
aad
xchg
mov
or
xor
shll
jge
add
inc
stos
jge
mov
inc
popa
xchg
push
xor
cmpb
lock
mov
pop
les
jne
iret
adc
xchg
pushf
inc
mov
push
jl
hlt
and
jne
nop
data16
sub
enter
xchg
jne
insl
aad
xchg
sub
out
mov
mov
sbb
add
iret
xor
sbb
dec
movsl
int
mov
mov
inc
mov
sub
lret
dec
mov
push
add
nop
mov
mov
pop
jle
mov
inc
jno
pusha
dec
movsb
mov
dec
and
das
pop
push
add
scas
fucomip
sub
xorl
xchg
dec
negl
cli
cmp
cmpsl
fwait
xor
adc
scas
cmpl
arpl
insl
mov
xor
cld
and
in
aaa
cltd
sbb
or
mov
gs
push
movsl
test
adc
mov
cmc
sub
push
popf
inc
shrl
cmc
into
pop
push
mov
xchg
dec
ret
lods
rclb
rolb
gs
pop
add
jl
mov
add
push
jle
jmp
xchg
mul
sub
filds
and
popf
je
cmp
ret
dec
insl
xchg
push
aad
xor
jl
jp
inc
jbe
lds
test
insb
xor
sub
sub
test
cs
add
jge
jle
xchg
mov
fld
out
xchg
dec
and
push
adc
cwtl
sahf
mov
jno
and
addl
mov
add
dec
addl
sbb
stc
mov
outsl
cmpsb
pop
adc
push
add
scas
mov
mov
xchg
fwait
cmpsb
cmpsb
repz
xor
mov
leave
cmp
mov
aad
shr
gs
pop
divl
call
or
pop
sub
into
jno
inc
jb
rcll
cmpsl
shlb
and
cmp
ret
or
inc
dec
lods
cmpsl
int
xadd
cmp
ljmp
dec
mov
mov
xchg
sub
bound
popf
or
leave
movsb
loop
sub
sub
das
fimuls
cmp
push
xchg
xchg
out
repz
push
fisubrl
push
add
xor
stos
pop
adc
adc
pop
dec
insb
xchg
movsb
leave
ljmp
lcall
inc
xchg
dec
leave
loope
adc
jae
mov
lret
in
pop
ds
out
push
in
out
sbb
mov
add
push
and
inc
nop
push
pop
mov
adc
xor
insb
push
fwait
leave
cwtl
push
ret
sub
call
lcall
mov
rcrl
cmpsb
jbe
cmp
xor
cmp
dec
mov
ljmp
ficompl
mov
adc
push
inc
mov
mov
imul
jnp
cld
and
ss
mov
test
sub
dec
xchg
sub
out
lods
std
xlat
dec
hlt
filds
jg
and
dec
dec
clc
fcom
mov
pop
notb
adc
scas
frstor
adc
test
and
mov
xor
mov
push
or
xorb
sub
sub
dec
mov
clc
cmp
movl
imul
dec
and
or
mov
gs
push
into
xor
ss
push
push
stos
out
push
mov
jno
mov
jle
ret
xchg
add
xchg
push
adc
insl
repnz
and
or
and
cmp
jg
lret
mov
pop
cld
aam
aaa
or
mov
adc
jb
cmp
mov
jae
movsb
or
movsl
jmp
lods
adc
xor
ret
pop
push
mov
sub
icebp
loope
inc
mov
ret
push
cs
fdivl
mov
es
scas
xchg
sbb
js
repnz
cli
dec
je
inc
pop
xchg
mov
mov
xchg
int3
fs
inc
jne
mov
cmpsl
mov
mulb
and
test
dec
inc
mov
loopne
jg
mov
mov
jge
dec
mov
outsl
xor
repnz
repnz
mov
adc
dec
lret
out
rcrl
xorps
xor
hlt
mov
int
in
lret
aas
sbb
adc
jle
mov
add
xchg
inc
pop
fldt
gs
mov
push
ja
xchg
mov
dec
xchg
sub
push
test
nop
popa
push
movsl
xor
jecxz
hlt
aad
in
bound
mov
dec
lcall
rorl
or
addr16
bound
dec
cmp
int3
adc
movsl
pop
mov
jmp
cmp
pop
dec
fdecstp
inc
cmpsb
mov
jmp
lret
jecxz
loopne
out
loopne
mov
push
hlt
daa
add
jnp
stos
pop
stos
add
push
daa
clc
cs
idivl
ja
movsl
ss
push
fidivs
shl
js
xchg
test
xchg
cltd
jecxz
cmc
mov
cmpl
lret
mov
in
mov
sbbl
lret
and
paddw
data16
in
and
jnp
push
mov
jno
arpl
pushf
stc
push
pop
lea
shr
jno
test
jecxz
adc
mov
mov
xchg
pop
loope
mov
adc
add
ljmp
loopne
dec
jo
dec
daa
jecxz
xchg
push
sbb
xor
call
xor
lds
sub
or
mov
fisubs
fldenv
gs
jle
outsb
frstor
mov
cmpsl
add
xor
imul
and
scas
xchg
js
outsl
in
fcmovnbe
cli
arpl
jo
shr
pop
les
mov
push
adc
out
fnsave
xorl
inc
gs
int3
invd
fdivl
xor
ds
adc
lret
sbb
iret
mov
lods
fidivrs
mov
pop
gs
jb
add
insb
aad
out
xor
inc
iret
cs
push
hlt
clc
sbb
sbb
ds
frstor
jo
test
mov
shlb
lret
popa
and
cs
cmc
out
jp
aam
mov
xlat
add
std
call
dec
inc
cmp
out
inc
jno
adc
test
or
sahf
mov
lahf
add
jnp
or
sbb
repnz
pop
in
loopne
aad
push
call
sarl
push
stc
rcr
inc
mov
test
xorb
leave
xchg
jge
cmp
cmp
add
jmp
outsl
mov
push
adcb
filds
mov
sub
mov
jp
test
adc
mov
daa
or
mov
je
fcoms
dec
or
fldl
mov
out
sub
push
mov
inc
cld
test
por
cmp
rcrl
mov
mov
aam
mov
jmp
stc
mov
rolb
sbb
ret
lcall
jb
or
sbbl
cmpsb
out
mov
push
mov
cmp
sub
or
das
sbb
or
in
dec
addr16
mov
mov
mov
mov
xlat
sbb
out
mov
jns
outsb
mov
jae
fmull
add
xchg
outsb
iret
mov
pusha
mov
push
mov
clc
clc
movsb
xchg
or
or
mov
inc
cltd
repnz
mov
adc
cltd
push
xchg
or
sarb
shlb
scas
test
pop
sub
xchg
stos
and
dec
pop
test
cmp
js
mov
pop
popf
mov
xchg
out
xor
incb
and
arpl
mov
rclb
xchg
daa
in
mov
das
in
inc
nop
adc
or
or
jnp
jl
rcrb
addr16
inc
inc
jecxz
mov
xchg
mov
sub
faddp
test
mov
cmp
adc
leave
fildl
and
mov
dec
cltd
sbb
mov
js
stc
pop
pop
roll
pop
daa
push
inc
aad
fldcw
and
xorl
sbb
test
ljmp
lock
mov
rorb
inc
jge
jae
pushf
ret
lcall
mov
cmpsb
enter
mov
gs
fsubrs
inc
sbb
sbb
call
jbe
lahf
push
pop
sbb
aaa
les
dec
scas
sahf
stos
fcomip
pushf
or
push
fcmovnu
sub
inc
mov
jg
and
push
mov
xchg
mov
mov
xor
and
ror
adc
sbb
pusha
mov
div
push
jb
jmp
pop
enter
cmp
jg
lea
mov
push
fbld
test
in
sbb
shll
inc
out
imul
push
icebp
repz
cmpsl
lret
jl
inc
add
xchg
push
dec
sbb
jne
mov
aas
push
adc
cmp
loope
es
cmp
mov
and
ffreep
das
pusha
rclb
shld
into
cmp
aam
ja
scas
inc
push
pop
int
mov
jmp
pop
loopne
dec
mov
fcoms
enter
xchg
cmc
push
push
repz
xchg
test
sbb
mov
sub
adc
jae
iret
pop
shrb
or
inc
test
rcr
testb
sub
pushf
fcmovne
jg
iret
shll
std
bound
dec
pop
or
mov
mov
sar
mov
cmp
cmp
inc
cmp
int3
nop
add
ds
imul
add
jb
movsb
sub
sbb
push
arpl
cmp
jecxz
cs
xor
or
mov
imul
cli
push
popf
mov
sub
fidivl
scas
hlt
inc
jmp
pop
adc
mov
sbb
push
jmp
loopne
sbb
loopne
xchg
test
je
aas
mov
mov
out
scas
aas
stos
mov
jb
les
push
or
sub
mov
test
mov
mov
xchg
enter
loope
mov
xchg
pop
mov
clc
imul
imul
in
mov
lock
stos
clc
insl
das
sub
jp
fs
sbb
push
loop
sbb
sub
sub
and
je
into
dec
mov
sub
push
testl
lods
mov
mov
fdivl
push
sub
adc
sbb
js
pop
add
popa
dec
outsl
iret
js
nop
add
mov
xor
rclb
out
call
enter
cld
faddl
add
xchg
dec
sti
add
mov
insb
ljmp
mov
sub
mov
psllw
notb
add
lods
push
jmp
lock
rorb
add
clc
lods
xchg
jg
clc
out
mov
scas
push
dec
out
inc
xor
in
xchg
movsl
cmp
xchg
cmpsl
cli
xchg
scas
popf
sti
insl
xchg
dec
fst
cltd
aaa
push
idivl
fsubrl
imul
mov
mov
lods
cltd
int
test
test
es
xchg
cmpl
into
jo
push
sub
inc
pop
adc
and
test
push
jnp
shlb
in
movsl
or
dec
inc
sbb
imul
pop
addr16
or
mov
in
jl
jle
or
in
xor
shl
adc
or
inc
les
inc
xlat
jbe
pop
inc
dec
sub
add
push
xor
mov
pop
pop
mov
jle
icebp
mov
push
shlb
imul
pop
xchg
mov
insl
leave
inc
sbb
in
xchg
insl
pop
mov
sub
jecxz
mov
inc
mov
jns
mov
adc
adc
dec
jmp
cmp
dec
inc
out
or
daa
lcall
je
pop
psllw
mov
sbb
fldz
push
xchg
scas
das
cmc
mull
pop
lods
aam
adc
fisubrs
sbb
fsts
nop
stos
nop
fcomi
mov
push
in
mov
lods
mov
stc
cmc
xchg
arpl
mov
in
call
bound
out
mov
jg
leave
std
mov
sub
jmp
icebp
mov
mov
es
sub
mov
push
cmp
sarb
and
lods
xchg
fmulp
jmp
dec
mov
cmc
mov
xchg
dec
int3
inc
cmpsb
jl
shrl
inc
movsb
xor
lds
or
inc
and
pop
subb
les
jecxz
data16
fcoms
data16
pop
outsl
inc
adcl
sbb
ret
bnd
xchg
outsl
sub
popa
xchg
andl
call
inc
pop
rcrl
aas
hlt
mov
jb
push
jmp
fcoms
notl
add
add
dec
lds
clc
fdivrl
outsl
jp
popf
pusha
sti
scas
mov
xchg
mov
push
adc
mov
addr16
mov
popf
jmp
clc
cmpsb
aas
dec
inc
xor
sub
sbbb
cmp
pushf
movsl
fsubs
shr
ret
sub
rcll
lahf
mov
ret
pop
jae
jl
pop
or
test
jnp
inc
mov
mov
dec
mov
cmp
sbb
das
xor
add
fcoml
fisubs
cld
test
xchg
daa
push
add
xchg
xchg
pop
mov
xchg
xor
cs
sub
or
popf
loopne
nop
xor
mov
xchg
imul
adc
fstl
in
fisttps
pop
movsl
sahf
movsb
push
pop
sti
pop
mov
daa
ret
mov
jge
shlb
rorb
popa
adc
adc
shlb
outsl
add
adc
xchg
pop
dec
and
sub
mov
dec
inc
and
adc
cmpsb
lds
lea
adc
aam
mov
inc
hlt
aaa
pop
lds
ss
xchg
pusha
js
add
jbe
push
cmc
aad
stos
cmpsb
lret
push
test
cmp
jns
jecxz
pop
push
icebp
cltd
or
mov
ret
jno
mov
mov
std
insl
test
pop
aaa
mov
aaa
out
pop
push
fwait
mov
xor
hlt
jo
jp
lret
adc
inc
lahf
test
inc
push
int
xchg
inc
stc
sbb
sbb
push
daa
push
dec
jb
sub
sub
pop
call
mov
in
dec
add
push
pop
pushf
or
ret
dec
lds
sbb
mov
dec
mov
mov
mov
sub
sbb
outsl
cmp
bndcu
call
add
jno
testl
push
fsubrs
pop
push
adc
aam
mov
push
fyl2x
call
out
pop
cltd
hlt
or
pop
sbb
mov
scas
shlb
repnz
cmc
adc
dec
mov
add
sahf
mov
cmp
and
lcall
add
out
fs
daa
jne
movsb
mov
sahf
arpl
dec
or
clc
mov
pop
clc
ja
inc
adc
and
lret
cmp
rorb
xor
shrw
repz
jge
sahf
xor
add
jmp
adc
push
test
mov
xor
aad
push
mov
arpl
arpl
xor
addr16
pop
cmpsb
mov
mov
jmp
les
xchg
jmp
mov
lret
out
xchg
pslld
add
cs
mov
repnz
sub
xlat
add
into
popa
scas
mov
xchg
out
stos
in
push
es
sbb
lret
xor
push
sub
push
xchg
push
xor
xchg
mov
or
popa
xchg
mov
stos
ja
data16
imul
push
popa
ret
add
push
xor
icebp
jg
adc
lds
push
push
cli
jmp
in
mov
and
jge
fwait
clc
xchg
mov
aad
es
divl
pusha
lods
mov
lock
inc
filds
pop
inc
inc
filds
aam
mov
jmp
pop
and
scas
mov
movsl
inc
aam
jmp
inc
enter
xchg
or
xchg
sub
jnp
jmp
push
loope
filds
jb
and
mov
xchg
xchg
or
sub
inc
icebp
pusha
adc
cmp
push
testb
sbb
jp
cmp
and
jle
push
hlt
push
mov
out
add
push
fadd
bound
into
jb
das
xchg
icebp
push
mov
xor
pushf
mov
or
fs
or
or
push
inc
in
mov
pop
add
xchg
dec
je
rorl
push
dec
mov
or
loope
icebp
jp
xchg
fnstcw
xlat
lret
xor
xchg
xchg
cmp
ret
inc
sub
out
aam
jns
mov
andl
lcall
xor
mov
cmp
mov
int3
or
adc
fstpl
push
sub
lret
pushf
das
pop
lcall
add
insb
frstor
push
lahf
sbb
xlat
ficoms
movsb
sub
je
stos
cmp
enter
lods
hlt
movl
adcl
movsb
mov
mov
add
sub
pop
test
orl
sub
fildll
adc
int
push
mov
push
ja
xchg
or
lods
popa
push
sbb
out
mov
mov
jge
push
inc
lahf
mov
fs
push
lods
test
xor
jno
nop
fwait
mov
cli
outsb
and
int
ljmp
push
mov
push
dec
repnz
imul
mov
and
inc
cmp
outsb
mov
insb
xchg
mov
xchg
lret
pop
push
loopne
dec
out
test
pop
xchg
das
idivl
ret
xchg
jns
dec
frstor
je
jp
hlt
sub
jno
or
mov
int3
test
addr16
fsubrl
sub
xchg
sahf
sti
pop
iret
add
push
mov
dec
and
imul
ss
cli
addr16
cmpsl
pop
je
xor
aaa
gs
sbb
push
xor
xchg
in
xchg
shrb
insb
out
push
mov
push
sub
adc
xlat
prefetch
xchg
insl
lods
dec
cltd
mov
test
or
cmp
pop
mov
fcomp
rorb
push
fdivrl
xor
push
jae
xchg
out
add
ljmp
or
push
scas
test
ds
pop
movsb
xchg
adc
lock
cmp
loopne
ljmp
lods
mov
scas
cwtl
and
je
repnz
pop
jns
shrl
adc
aad
inc
jmp
int3
inc
test
testl
movsb
neg
les
xchg
shlb
xchg
dec
arpl
stos
inc
imul
outsb
jne
dec
mov
aas
inc
xor
mov
jecxz
data16
push
repz
sub
and
adc
jb
int
inc
lcall
add
jecxz
inc
jne
es
push
mov
outsb
lds
out
dec
imul
lock
jbe
xchg
or
xor
fadds
mov
cld
mov
cmp
ja
scas
scas
inc
mov
mov
pop
mov
gs
ss
jns
ss
movsl
and
out
push
cltd
test
dec
dec
out
movsl
movsl
mov
ret
xchg
les
test
adc
xor
pushf
fsubs
push
mov
dec
sub
adc
push
and
imul
sub
cmp
cltd
push
adcb
test
and
sbb
out
or
call
mov
popf
jne
rorb
dec
mov
and
push
mov
repz
and
sub
cmpsl
into
adc
test
mov
mov
lahf
xchg
cmp
lcall
dec
adc
mov
addr16
incb
mov
mov
rolb
cld
ret
je
sub
and
sub
push
dec
insb
addr16
mov
sub
adc
xor
pop
cld
loope
add
jge
xchg
aad
pop
ss
inc
test
cmp
outsl
push
in
in
jo
push
in
mov
nop
scas
pmulhuw
test
or
or
mov
xchg
or
mov
or
dec
mov
add
adc
adcl
inc
and
sti
push
pop
gs
lret
mov
or
mov
or
mov
pushl
inc
or
in
cld
jp
clc
jecxz
xchg
daa
sbb
mov
movsl
jae
push
out
mov
in
loopne
imul
fmul
nop
mov
xchg
jnp
aaa
ret
movsl
imul
ljmp
xchg
pop
lret
push
outsb
in
inc
mov
lahf
sbb
inc
ja
push
js
pop
mov
out
mov
fbld
test
bound
xor
cli
mov
or
mov
xor
outsb
lods
mov
jmp
dec
mov
aaa
test
push
push
and
popa
data16
aaa
push
cmp
mov
shlb
clc
enter
cmpsl
mov
hlt
int3
jno
movsb
dec
cld
roll
subb
dec
jg
xchg
xchg
inc
orl
add
jle
scas
cli
adc
sub
adcb
mov
test
cmp
fbld
mov
inc
mov
xor
push
scas
dec
arpl
or
aas
cli
shlb
cmpb
aaa
fwait
jae
mov
push
sub
fucomip
fcoml
mov
push
xor
inc
pop
ror
pop
mov
mov
scas
mov
dec
inc
jnp
daa
sbb
push
xorb
popf
dec
pop
and
jecxz
in
add
mov
sub
repnz
sbb
sbb
mov
cmpsb
adc
mov
jne
in
ret
iret
sub
jge
inc
or
pop
ljmp
loop
lret
ds
xor
jmp
pop
cmp
in
lret
call
hlt
jmp
sbb
or
stos
sbb
pop
daa
das
cltd
push
jmp
icebp
push
push
call
pusha
lahf
inc
mov
loope
cmp
scas
xor
or
mov
cld
inc
aad
aad
adc
dec
mov
add
sbb
mov
imul
gs
or
jb
push
loope
jno
in
mov
popa
mov
sub
sahf
pushf
cmpl
aas
orl
sub
pop
push
xchg
in
and
aas
cmp
mov
cmp
xorb
hlt
fcmovnb
les
or
mov
mov
or
je
sbb
aas
push
or
bound
imul
pop
enter
and
jns
push
jae
xchg
shll
sarl
mov
jne
in
add
cmp
push
les
sub
mov
mov
jmp
or
orl
push
pushf
add
sub
into
jae
mov
jno
popf
sub
or
inc
xorb
adc
out
sti
mov
xchg
xchg
cmp
pop
mov
push
xchg
test
push
xchg
aas
repnz
xor
jo
pop
enter
dec
sbb
push
or
xchg
sub
into
shrb
jae
mov
push
lock
movsl
add
push
or
xor
mov
add
cmp
pop
sarl
lock
and
add
xchg
mov
out
loope
out
scas
mov
mov
icebp
call
xor
sbb
rcrb
int
xor
and
popa
and
jle
fwait
mov
xor
jg
inc
or
cs
mov
call
jo
ja
enter
mov
int3
stos
scas
mov
fmul
bnd
xlat
pop
xchg
xor
leave
outsb
jbe
xor
xchg
mov
mov
jno
inc
call
ret
and
aaa
cmp
outsl
mov
fistpl
sub
pop
mov
xor
aad
mov
jb
or
mov
dec
fbstp
in
sbb
sbb
notl
sbb
aam
push
xchg
or
aas
testb
cmp
mov
pop
popa
push
and
push
cmc
sbb
mov
lods
test
leave
pop
push
out
pop
aad
sbb
push
pop
or
inc
mov
xor
ss
rcrb
stos
data16
cmp
out
loop
cs
and
and
or
test
ja
inc
in
std
inc
cmpsb
cmp
xchg
sbb
adc
xorb
add
jnp
outsb
rcrl
cmp
mov
jns
mov
sub
shrb
fsubs
das
jl
push
sub
rcr
sub
or
sub
pop
hlt
mov
in
pop
pop
sbb
mov
sbbb
dec
shrb
enter
inc
jae
scas
js
mov
mull
jge
adcb
sub
call
cmc
mov
stos
xchg
inc
shll
pop
push
dec
jo
imul
lahf
push
jno
test
fxch
jne
lcall
xchg
sub
dec
mov
mov
mov
icebp
xor
scas
xor
inc
pushf
fdivl
sub
jae
inc
lahf
sub
cmp
push
fwait
mov
orb
add
mov
inc
cmp
jae,pt
sbb
fsubl
pop
fxch
sar
fsub
std
into
or
addb
ficompl
std
lcall
xor
sub
mov
or
dec
sbb
adc
mov
cwtl
notl
push
cmp
inc
xchg
lods
pop
mov
daa
out
filds
lcall
into
dec
lcall
jno
stos
ficompl
mov
cmp
lods
cli
pop
xchg
fwait
inc
int3
cwtl
sahf
pop
movsb
mov
lods
rolb
sub
lods
out
cwtl
es
repnz
js
cmp
xchg
andb
arpl
test
mov
hlt
mov
and
in
cmp
adc
sahf
adc
mov
xchg
out
fadd
cmp
inc
xchg
cmp
ljmp
in
xor
or
pop
into
or
iret
test
leave
cmp
xor
push
stc
xor
push
jecxz
dec
sbb
in
data16
sbb
nop
dec
testb
sbb
pop
sbb
xchg
mov
int
mov
stos
push
push
inc
push
test
dec
cmpsb
popa
or
lret
mov
in
shr
mov
pop
sbb
pop
and
mov
test
call
loop
les
insl
jge
loope
inc
out
pusha
insb
cmp
sbb
adc
inc
push
pop
sub
sub
scas
lods
addr16
push
xchg
mov
adc
ljmp
xor
stc
addb
fdivl
movq
pop
mov
jg
pop
cmp
inc
icebp
mov
lods
cmovo
aam
inc
dec
sbb
and
sub
pop
loop
arpl
shlb
sarl
xchg
push
pop
stc
cmpsl
dec
adc
ret
lds
ret
add
lods
stc
jne
orb
mov
xchg
flds
inc
pusha
movsl
mov
xor
fldcw
xor
and
imul
pop
and
jno
mov
pop
jbe
outsb
add
mov
ret
xchg
mov
hlt
sub
lds
test
and
stos
mov
xchg
out
fiaddl
test
filds
or
add
imul
sbb
test
sub
cmc
stc
pop
shl
repz
aaa
dec
ret
shrl
movl
cld
sub
pushf
mov
jl
fstpt
out
outsl
xchg
dec
ret
mov
adc
xlat
sub
jno
sbb
fistpll
mov
jno
out
xor
inc
pop
xchg
jecxz
xlat
jp
scas
or
cmpb
aas
push
mov
jnp
sub
stos
dec
subl
pushf
pop
mov
xchg
icebp
and
adc
jl
gs
mov
rorb
xor
call
data16
xlat
out
sub
push
rolb
cltd
xchg
pusha
or
xor
scas
nop
icebp
add
lahf
sub
aam
jnp
out
outsb
in
mov
lahf
push
popf
inc
jae
hlt
stos
ss
rorl
xor
xchg
jmp
setb
cmp
cwtl
jns
mov
aad
sub
fimuls
arpl
ss
pop
cmpsb
stc
sub
xor
sti
out
mov
pop
cltd
sbb
iret
iret
sbbl
xchg
lcall
dec
loope
pop
adc
or
sbb
xchg
lods
xor
cld
push
pop
repz
in
jno
std
outsb
stos
decb
push
je
outsb
add
test
add
xor
outsl
mov
xchg
int3
mov
and
jae
test
adc
jbe
bound
inc
jnp
es
pop
push
mov
dec
xchg
cli
mov
gs
sbb
imul
mov
in
cmpsb
xchg
insb
pop
add
dec
push
sbb
xchg
and
cmp
or
pop
fidivrs
jbe
mov
sbb
mov
pop
cli
aad
js
aad
add
push
jp
ficompl
inc
push
adc
xorb
add
mov
jle
add
dec
arpl
into
ljmp
stc
jbe
xlat
dec
xor
mov
cltd
mov
in
cmp
push
mov
mov
push
nop
aam
and
scas
jne
jno
sbb
push
aas
add
dec
lea
out
mov
out
scas
pop
push
popl
imul
push
mov
add
cmpsb
adc
sub
sahf
stc
icebp
ficoms
lcall
faddp
xchg
pushf
sub
loopne
add
lahf
xchg
sub
test
out
adc
inc
sahf
push
adc
lret
lea
jns
std
sub
nop
push
dec
inc
mov
test
jle
mov
xorb
jecxz
push
lods
test
jecxz
cmp
mov
push
push
js
call
cmpb
repz
mov
enter
adc
and
pop
pop
inc
lods
movsl
fnstsw
xor
sbbl
push
in
ret
movsb
xlat
mov
fsubl
sbb
inc
lret
jo
addr16
push
or
push
mov
vmwrite
jle
or
adc
or
dec
mov
mov
mov
jp
jmp
nop
and
lea
jle
xor
and
push
mov
sahf
movsb
ds
shll
mov
inc
adc
lcall
cmp
xor
enter
arpl
cwtl
jmp
imul
ljmp
dec
lret
jae
xor
js
pushf
mov
iret
cs
popa
lcall
inc
sbb
js
or
cmp
imul
add
sub
push
clc
fmul
ss
test
push
imul
stos
jle
out
mov
leave
push
sahf
mov
pusha
dec
lret
fstps
dec
ljmp
or
sub
sti
ret
xlat
ja
mov
lock
cs
pop
push
ror
adcb
jns
dec
xor
pand
into
and
iret
push
lods
mov
mov
inc
vpaddusb
mov
jp
xchg
fwait
sbb
int
adc
inc
or
mov
fwait
xor
aaa
ss
add
jp
and
push
les
xor
insl
sub
lret
popf
xchg
fwait
int
xchg
sub
xchg
in
jb
push
mov
test
imul
sub
inc
mov
jnp
ret
mov
inc
jle
imulb
rolb
fcomps
lret
fistpl
notl
push
pop
adc
mov
cmp
in
add
loopne
dec
addr16
jl
insb
les
dec
mov
stos
movw
xor
xlat
je
gs
cmp
and
xchg
jne
add
cld
jns
pop
pop
cmp
xchg
lahf
push
or
mov
jp
xchg
pop
aaa
pop
ret
pop
push
mov
stc
std
iret
scas
das
cmp
push
loope
and
dec
add
fnstenv
jle
in
mov
fsub
clc
mov
xor
or
pop
xchg
jecxz
div
pushf
mov
pop
inc
ds
xor
mov
test
lahf
and
or
cltd
adc
mov
pop
xlat
jnp
and
dec
mov
mov
clc
mov
dec
push
daa
pop
pop
es
sub
push
imulb
test
aas
sbb
test
mov
cld
xor
lods
sub
jmp
fisubs
sbb
sub
inc
gs
test
shrb
sub
xor
xchg
adc
loopne
repnz
fsubl
in
or
lods
sbb
pop
aaa
jno
add
mov
dec
fisubl
adc
jns
mov
int3
and
jge
popf
sbb
outsb
das
adc
sti
push
jb
popf
xchg
push
cmp
lock
imul
ret
adc
inc
pop
or
dec
cmp
cwtd
lret
mov
fwait
addl
pop
lods
dec
push
fdivrl
cmpsb
popa
adc
lea
push
jmp
mov
pop
nop
mov
icebp
inc
mov
out
add
in
testb
daa
ficomps
popa
jl
lret
xor
cmp
imul
jle
jb
mov
gs
scas
sbb
stos
adc
pop
mov
mov
sbb
nop
out
out
stc
mov
cmp
mov
ds
jnp
jb
cmpsl
insb
in
and
mov
push
and
jbe
dec
mov
arpl
sub
adc
jge
mov
movsb
mov
ret
dec
test
ret
out
ficoms
sbb
shrb
pop
into
subl
mov
or
inc
and
or
mov
rcrb
xor
cmpl
add
cmp
adc
mov
ffreep
mov
and
movsb
mov
shlb
pop
loopne
pop
push
mov
ss
and
cmc
xchg
xchg
in
pop
hlt
mov
mov
add
int3
insl
shrb
stos
jo
addr16
sub
xchg
enter
sbb
jmp
fnstcw
sub
nop
jg
popa
mov
cmp
or
cmp
jge
mov
push
pop
clc
pop
clc
ss
and
mov
sub
enter
push
ret
es
sub
cltd
ficoml
xor
addr16
pop
adc
sti
aaa
das
dec
xor
sbb
fs
insl
xchg
mov
iret
mov
push
cmp
int
stc
lahf
out
imul
xchg
xor
inc
ljmp
loop
xchg
mov
stos
push
jl
xor
inc
adc
pop
loope
and
add
arpl
mov
into
outsb
out
es
mov
rorb
int3
mov
mov
cmp
scas
dec
xor
ljmp
dec
rorb
pop
bound
mov
push
ja
repnz
sub
roll
fiaddl
lds
rcrl
lret
dec
jg
insb
pop
test
stos
jmp
pop
pop
jb
sbb
jb
lods
cmpsl
sub
inc
mov
stc
ss
xchg
pop
push
adc
rol
mov
dec
xor
fldenv
in
sub
sbb
insb
js
gs
jnp
xchg
pop
leave
aaa
add
cld
add
pusha
dec
push
adc
stc
fdivrs
jae
jle
aam
subl
pop
cmpsl
int
xchg
add
jle
fwait
sbb
xchg
ds
jo
addr16
scas
xchg
adc
pop
mov
fsubl
je
and
out
cmpsb
sub
mov
fldl
pop
cmp
inc
adc
in
lods
mov
jg
mull
arpl
sbb
mov
ja
int3
jno
jns
int3
das
sbb
out
sub
inc
repnz
jnp
mov
xor
addr16
dec
aam
icebp
jp
lods
stos
jo
out
xchg
shll
mov
or
pop
addr16
sub
int3
cmp
push
adc
dec
mov
inc
sub
vmptrst
dec
lds
jp
xchg
add
sti
shlb
into
lock
hlt
xchg
mov
dec
jb
jno
and
push
nop
nop
mov
jmp
test
add
inc
int
mov
and
adc
out
orl
in
xchg
sbb
jg
es
test
ret
xor
jl
roll
xchg
addr16
cmpsb
xchg
sahf
addb
stc
xor
mov
xor
jo
inc
aas
cltd
xchg
repnz
add
push
push
lcall
dec
rclb
jb
dec
inc
cmc
fisubrs
pop
mov
or
test
lock
mul
jo
jnp
repz
sahf
popa
xor
in
loopne
jle
pop
pop
in
outsl
sbb
pop
push
xchg
imul
sub
xchg
mov
rclb
mov
pop
and
ret
dec
pop
fsub
loop
mov
jmp
xor
rcr
fcoms
repz
push
les
stos
fstl
cli
mov
xor
movb
cmp
xchg
jecxz
scas
and
and
in
fsubr
nop
arpl
pop
int3
cmpsl
adcl
sbb
shll
int3
adc
sti
into
pop
lock
or
imul
jns
push
dec
sbb
xchg
and
add
ficomps
repz
rcl
pop
jmp
into
imul
ja
cmpsb
fs
push
or
loop
sbb
push
int3
push
mov
ljmp
repnz
dec
cmc
sub
adc
lahf
dec
cmp
sti
orb
lods
cld
leave
mov
xor
add
dec
mov
mov
test
mov
dec
lcall
shll
inc
add
fwait
and
aaa
inc
insl
or
sub
icebp
xor
in
ret
aas
fsubs
mov
fcom
iret
mov
push
pop
mov
sub
clc
xorb
xchg
and
aam
jge
mov
nop
aad
jns
test
movsb
pop
lea
push
mov
in
pop
ret
ret
daa
aas
sbb
daa
sub
push
sbb
repnz
loopne
bnd
jecxz
jp
aaa
pushf
lds
lahf
mov
push
mov
jg
mov
xchg
pusha
divl
mov
pop
sub
mov
jge
pop
scas
dec
xor
sub
dec
and
lcall
pop
les
xchg
jbe
push
popf
cwtl
lock
mov
notl
jae
into
mov
mov
adc
stos
scas
and
adc
and
in
and
insb
fs
rclb
test
stos
adc
mov
sbb
xchg
cmp
inc
movsb
dec
ja
lea
and
add
sub
fstl
adcl
jecxz
cmpsb
jmp
cmp
or
add
lcall
testl
adc
sub
mov
adc
iret
sbb
mov
test
test
iret
inc
sti
cmp
xchg
jb
test
xlat
jb
movsb
mov
push
iret
xor
scas
mov
and
dec
dec
sub
fs
in
outsb
test
fdivrs
loope
gs
pop
ja
mov
cs
xlat
test
in
push
gs
test
pop
shlb
roll
jmp
dec
js
fcmovu
aad
add
test
enter
imull
ja
popf
dec
imul
in
ljmp
add
mov
jae
icebp
cld
imul
idivb
and
loope
outsl
bound
xchg
adc
daa
mov
aas
pop
adc
mov
outsl
fmuls
daa
jne
fcoml
mov
test
mov
mov
ss
add
push
sub
popa
add
cmp
ss
mov
bound
aas
scas
mov
int
movsl
jae
imul
jle
bound
lods
mov
and
inc
push
lds
jecxz
icebp
inc
stc
push
cmp
mov
pop
mov
scas
fisubrs
and
mov
push
jg
fisttps
into
pop
jns
mov
call
mov
shrl
xlat
ljmp
xor
add
ror
mov
fistl
ret
dec
cmp
addr16
test
mov
xchg
sti
push
fdivrs
les
sti
cmp
push
jnp
sbb
or
or
cmc
cmc
mov
outsb
repnz
imul
bound
ds
pop
jmp
les
ljmp
or
add
jae
and
pop
pop
pop
fistl
dec
pop
xchg
mov
sbb
xlat
xlat
jo
lret
add
or
loop
or
cmp
jae
xchg
pop
outsl
mulb
in
pop
and
ljmp
push
aad
xor
adcl
and
mov
mov
inc
xchg
cld
fdiv
xchg
aam
call
sahf
dec
dec
pushl
sbb
inc
into
addr16
xorl
outsb
inc
mov
jns
in
adc
jecxz
ja
dec
loope
push
dec
mov
pop
jae
jmp
cmp
push
fildll
cmp
stos
jecxz
add
outsb
mov
adc
sub
mov
jo
mov
xchg
out
and
rolb
frstor
or
sbb
clc
mov
lahf
loope
jl
ret
lock
out
cltd
stos
sbb
pushf
pop
lret
imul
push
or
insl
scas
and
test
into
sub
cli
movsb
test
pop
push
div
push
cli
and
dec
xlat
sarl
lcall
inc
adc
cmp
xor
lret
fcomps
out
arpl
add
mov
adc
cmp
pop
fld
jno
out
add
sub
repz
mov
mov
je
test
out
xor
sbb
xchg
jmp
repz
ret
xchg
push
ljmp
sub
sbb
iret
add
adc
icebp
andb
or
popf
ss
sub
bound
push
int
lret
xchg
and
movsl
sub
loopne
sarl
insb
repnz
fdivl
xor
mov
in
addb
or
adc
hlt
outsb
insb
lea
xchg
mov
ja
pop
call
test
mov
mov
adc
psubusb
xor
call
xchg
and
ja
int3
ret
mov
bound
ljmp
sbb
lods
and
jecxz
xor
call
iret
sarl
idivb
jb
insb
xlat
fisttpll
out
xchg
fucomip
jns
push
or
in
xchg
cmpsl
scas
aas
sbb
loop
test
mov
ds
lock
push
ret
adc
mov
int3
add
rol
jb
lea
cmc
shll
cmp
or
movsb
xchg
rclb
aad
aad
aaa
sahf
pop
jbe
mov
int3
jae
or
test
dec
iret
inc
lds
add
mov
sbb
cwtl
adcl
nop
xchg
scas
cmp
out
aaa
fs
jg
dec
adc
data16
addr16
stc
push
dec
adc
jge
add
xlat
xchg
mov
scas
and
mov
and
and
pop
pop
movsl
mov
push
jb
in
test
dec
bound
cmp
mov
mov
add
pop
jmp
rcr
lock
xchg
xor
in
adc
and
xchg
imul
xchg
aaa
pusha
mov
or
hlt
mov
jg
cmp
imul
jle
xchg
xor
aad
xchg
lcall
orl
xor
lcall
dec
les
ljmp
add
arpl
in
push
dec
mov
bound
jge
push
or
lock
les
imul
loope
test
adc
push
cmp
sbb
or
mov
mov
fisttpll
rol
fidivs
arpl
xor
sub
roll
arpl
jb
adc
sub
aad
add
int3
dec
or
jbe
in
mov
mov
testl
test
out
addr16
add
inc
ret
mov
in
adc
jp
adcb
cmpsb
xchg
cmpsb
push
push
in
xor
movsl
xchg
and
aas
xor
push
dec
inc
outsb
lods
dec
jb
gs
xchg
inc
inc
adc
ret
xor
and
cltd
jbe
loop
in
and
mov
xchg
test
xchg
movsb
in
push
test
push
sub
testl
movsb
jp
dec
mov
out
int3
ljmp
pushf
and
cmp
and
jg
jecxz
inc
sub
scas
clc
scas
mov
dec
push
inc
int3
jmp
fadd
test
pop
dec
out
and
sbbl
out
popa
cltd
mov
cmp
das
jmp
js
hlt
jmp
scas
aad
fisubl
icebp
aas
adc
mov
sub
scas
pop
add
mov
insl
cmp
pop
pop
xlat
and
and
lcall
dec
xor
mov
adc
cmp
sti
inc
push
jg
test
dec
jb
xor
loopne
std
pop
jb
ja
aam
lds
ret
outsb
in
mov
or
sbb
loop
push
int
cmpsl
test
xchg
sub
or
ret
adc
sbb
pop
and
and
jno
pop
arpl
lahf
mov
pop
sbb
add
rolb
jnp
pop
imul
pop
jle
outsl
pop
mov
add
inc
or
fnstcw
sbb
mov
dec
jp
lods
scas
mov
jecxz
adc
mov
fnsave
jno
jno
xor
xchg
jno
imul
addr16
out
pop
fwait
push
sub
cmp
cli
ficoml
out
pop
cmp
in
xchg
aam
push
in
stc
jo
xorl
fs
scas
cltd
jnp
push
nop
push
xchg
into
sub
into
push
pop
xor
and
and
and
add
cmc
cmp
mov
adc
ds
dec
jno
ljmp
fisubrs
mov
adc
sbb
insl
ret
sahf
dec
xchg
stos
cs
xor
jbe
sbb
and
enter
mov
push
pop
imul
dec
test
add
into
push
lock
inc
outsl
jmp
jp
mov
negb
out
mov
jle
xor
sti
adc
xlat
sbb
cmp
xor
xchg
push
cmpsl
out
sub
jae
lahf
jno
fimuls
outsl
add
pop
dec
mov
xchg
sbb
add
mov
mov
mov
xchg
cmpsl
push
ds
js
sub
cmp
ljmp
dec
lcall
fstpt
mov
out
jno
cmpl
xchg
add
sti
mov
into
mov
loope
dec
mov
jne
in
ret
mov
iret
dec
pop
ja
movb
mov
sub
mov
adc
xchg
fs
cmp
fs
sub
inc
cltd
loope
sbb
movsl
or
xchg
inc
push
out
mov
shlb
xchg
jle
jb
mov
les
clc
inc
fistpll
mull
mov
jb
pop
xchg
daa
xchg
sub
bnd
test
std
stos
and
loope
fsubs
pop
stc
popa
outsl
sahf
sbb
jnp
sti
daa
pusha
xchg
add
sbb
mov
out
add
aas
cmpsl
jg
sub
rolb
aam
aaa
addl
fcmovne
das
adc
add
cmp
sbbb
jge
lock
push
xchg
cld
ret
add
mov
fs
dec
add
nop
add
insl
aas
add
repz
sub
in
movl
je
cmp
xchg
fldl
out
fsts
sahf
inc
or
nop
adc
mov
mov
cmp
scas
jmp
dec
push
push
lds
dec
inc
cmp
sbb
jo
pop
aaa
inc
cmp
xor
in
inc
mov
jns
and
sub
lret
pusha
into
xchg
mov
or
sbb
cli
rorl
out
cli
sbb
mov
fucomip
or
push
add
push
push
sti
sti
ret
jo
lret
aaa
sbb
movsl
and
jmp
or
popf
xchg
aam
mov
out
jle
xor
out
sbbb
push
mov
cmpsb
sub
out
faddl
mov
call
popa
cmpsb
addb
sbb
pushaw
lahf
and
rolb
sbb
lret
sti
stc
arpl
dec
shll
or
dec
test
test
jno
or
cmc
js
cld
call
ror
das
movsb
pop
loopne
inc
into
out
mov
adc
lea
mov
jge
jle
adc
shrb
jmp
ljmp
and
ret
int
insl
cmpb
or
lahf
sub
mov
mov
xchg
enter
arpl
cld
mov
loop
lcall
imul
pop
push
mov
cmpsl
sbb
stos
into
fcmovnbe
jns
int
pop
loopne
hlt
das
xorl
push
in
out
lret
je
cmp
cmpsl
inc
scas
roll
push
mov
cld
test
scas
sub
mov
out
out
dec
fldl
adc
inc
enter
int
mov
mov
jno
push
or
mov
stc
adc
fbld
or
loop
mov
pop
xor
mov
mov
jne
xchg
ja
mov
and
sbb
test
jmp
insl
mov
xchg
cltd
stos
loopne
lret
lods
test
push
push
test
push
pop
inc
and
xchg
dec
idivl
mov
das
les
jp
fadds
or
mov
enter
jns
adc
call
add
xchg
push
es
mov
add
mov
adc
shll
andb
iret
in
mov
lods
out
cld
sbb
scas
mov
push
push
inc
mov
cmp
ror
test
fnstsw
arpl
mov
cmp
and
in
int
movsl
jo
cmp
int3
xorl
ss
sti
dec
sahf
push
loop
lock
in
and
imul
push
or
sbb
push
testl
sub
xor
sbbb
ds
movsb
inc
mov
andb
dec
scas
jne
and
push
xlat
out
xor
repz
xchg
jg
aad
push
mov
sub
xchg
sub
push
inc
inc
sti
data16
cli
js
cmp
xor
jo
adc
into
push
push
in
fs
repnz
mov
pushf
daa
insb
and
xchg
pop
cwtl
and
sbb
add
push
cmc
push
cwtl
loope
test
inc
xchg
out
int3
xor
sbb
fisubs
push
in
mov
pop
scas
xchg
pop
adc
idivb
ss
mov
lock
rcr
clc
rolb
mov
insb
lods
add
push
inc
inc
in
mov
xchg
and
js
test
push
repz
inc
out
sub
cltd
xchg
add
js
jno
out
pop
rcrb
add
adc
or
pusha
cltd
dec
and
movsb
fmuls
xchg
cmpsb
xor
sbb
xor
add
fwait
jbe
push
cltd
xchg
not
pop
xchg
lret
mov
sbb
push
jae
jl
out
jne
mov
or
lods
fs
in
jg
and
lret
xchg
imul
adc
mov
data16
repnz
cld
in
imul
adc
icebp
adc
test
lcall
mov
xchg
sub
cli
cmpsl
loope
pop
xchg
inc
addb
cmp
pop
xchg
jecxz
insl
or
jl
inc
dec
push
cmpsl
loopne
stos
or
out
pop
stos
cmp
cmp
xchg
cmpsl
cld
sub
cmp
ret
dec
mov
dec
aad
lods
hlt
in
sbb
inc
cs
gs
test
mov
imul
and
lahf
mov
icebp
mov
add
cs
stc
insb
pop
mov
stos
xor
push
xchg
and
pop
cmpsl
sub
adc
xchg
and
mov
adc
stos
mov
or
mov
notl
lahf
cmpsb
ljmp
pmuludq
inc
in
push
xchg
call
aas
jno
xchg
mov
andb
mov
pushf
xchg
xchg
adc
cmpsl
inc
out
call
jne
int3
call
cmp
mov
pop
fnstcw
leave
or
inc
int
or
icebp
pop
push
and
sahf
inc
jb
dec
scas
mov
cmpsb
fcompl
test
mov
or
pop
jb
jmp
je
inc
and
cmovle
aam
cwtl
xchg
jae
push
sbb
gs
out
fsub
rcrl
mov
push
add
in
or
mov
dec
outsl
fiaddl
clc
cmp
out
es
or
out
xchg
sub
push
insl
outsb
in
xor
out
sbb
and
sar
sbb
lds
lahf
mov
cli
push
and
out
stos
loopne
repnz
inc
jbe
addb
jne
sub
scas
and
sbb
mov
cmp
inc
and
ja
jae
cmp
xchg
frstor
lods
rcrb
dec
rorl
imul
and
fbstp
sub
icebp
jl
popa
xchg
out
call
subb
push
xchg
fimull
pop
test
mov
xlat
outsl
jb
pusha
shll
pop
xchg
or
loopne
cli
push
xchg
popl
mov
outsl
push
out
and
cltd
stos
ds
sub
cmp
jle
and
mov
in
inc
sti
add
sbb
sbb
movsb
or
inc
push
mov
xchg
mov
dec
inc
andl
aaa
inc
sub
idivb
pop
inc
jb
or
jg
adc
xchg
sbb
mov
xor
xchg
popa
lods
shll
in
in
mov
and
mov
xchg
movsl
adc
sahf
movsl
jl
push
and
jne
gs
scas
cmp
ret
dec
lret
sbb
arpl
dec
push
neg
xchg
mov
pop
and
adc
out
push
imul
adc
pop
jno
jmp
xchg
xchg
mov
dec
mov
sbb
and
push
arpl
outsl
scas
add
call
scas
pop
cltd
mov
insb
mov
push
in
mov
daa
pusha
je
ret
popf
push
jno
push
inc
mov
cmpsb
adc
push
adc
inc
mov
rcll
sub
adc
daa
or
adcb
in
inc
popa
adc
mov
call
pop
popa
aad
mov
jno
adc
divl
inc
sbb
xor
jnp
mov
pushf
imul
push
mov
adc
cmp
insl
dec
mov
out
int3
mov
push
push
repnz
adc
test
jae
out
pop
push
insb
jge
xlat
cltd
pop
jae
popf
je
insb
cmp
jb
std
dec
mov
test
sbb
fistpll
sub
inc
or
cmp
out
or
cmp
pop
mov
dec
mov
adc
aaa
cld
xor
lret
test
mov
dec
inc
adc
mov
rolb
mov
push
push
sub
cs
pushf
mov
add
outsl
in
and
aam
addr16
stos
and
add
push
repnz
aaa
mov
jnp
lock
leave
std
rolb
sahf
xor
and
jbe
pop
lods
movsb
pop
lcall
stos
ror
jmp
sbb
cmp
dec
push
inc
jo
mov
pop
popa
mov
orl
adc
add
xlat
in
xchg
dec
dec
jb
fisttps
aam
movsb
mov
popa
les
adc
mov
or
adc
jge
lods
cli
sbb
sbb
push
xlat
lods
ljmp
ljmp
push
dec
cwtl
scas
mov
lods
std
repnz
lods
inc
data16
push
frstpm(287
inc
inc
add
push
cs
jno
mov
ja
mov
fdivs
mov
or
aas
mov
test
outsl
xor
pop
xor
inc
les
push
mov
out
loop
daa
add
sahf
gs
jae
dec
nop
imul
xlat
in
clc
ret
xor
pop
xchg
sub
lret
movsb
push
out
insb
cwtl
mov
jne
rol
outsb
xor
add
pop
xrelease
aas
pop
scas
sub
sub
int
js
push
sbb
filds
popa
xchg
movsb
mov
adc
jl
pusha
lahf
cmp
sbb
fsub
clc
jo
jno
cwtl
ja
mov
mov
push
rclb
out
xchg
movsl
xor
xlat
xchg
mov
lods
lcall
mov
or
ljmp
lahf
pslld
sbb
jl
mov
outsl
outsl
stos
xlat
int3
pop
insb
dec
xchg
js
and
cltd
or
pop
lods
arpl
ja
out
test
mov
xor
cmp
mov
fildll
daa
lods
xor
and
xor
int3
mov
inc
adcb
mov
jne
xchg
dec
mov
inc
mov
js
lret
sbb
pushf
mov
mov
xchg
out
repz
movl
cmp
push
adc
out
pop
cs
xor
mov
movsb
pop
fsts
rcl
xchg
xchg
xchg
mov
sbb
and
xor
push
mov
dec
test
or
push
xchg
fiadds
lock
and
scas
cmp
punpckhbw
fcom
push
xor
mov
test
or
addr16
insl
cli
ret
pop
jl
ret
xorb
inc
int3
jp
xor
stos
pop
jg
stos
int3
lcall
int
lahf
xchg
cmpsb
fwait
jmp
stos
popa
dec
mov
sahf
sbb
lods
lock
inc
or
push
adc
scas
add
mov
add
lods
cmp
popf
or
lahf
std
pusha
jl
adc
jg
mov
scas
xor
sti
scas
xchg
js
pop
jmp
add
xchg
cmp
rorl
les
sbb
adc
xchg
and
ljmp
jp
test
mov
movsl
sti
iret
sub
outsl
or
and
out
inc
or
in
into
cmp
mov
inc
add
pushf
fimuls
inc
push
push
push
cmp
stos
mov
enter
mov
jecxz
sub
aam
divl
xchg
insb
and
cld
in
adc
xchg
cmp
and
mov
mov
ret
dec
ret
add
shrd
inc
int
lret
mov
add
pop
in
stos
xor
cmp
lret
lret
xor
dec
rcrl
lods
test
or
js
jg
test
xor
imul
xchg
sub
pop
dec
pop
sub
sub
popf
add
clc
cmp
jno
dec
jno
xchg
push
call
cmp
mov
mov
pop
rep
add
add
shl
aaa
lret
test
jge
jo
cmovo
sub
lods
fistpll
cmp
sub
xchg
out
xchg
xor
mov
pop
dec
sahf
cmc
gs
xor
push
dec
out
or
sbb
icebp
xchg
popf
repnz
mov
rcll
xchg
jmp
insb
dec
fstpl
mov
cmc
outsl
out
clc
sbb
jo
loop
jge
leave
dec
mov
sub
sbb
pop
cld
cmp
aas
lock
jae
insl
scas
out
test
cmp
iret
jg
mov
test
jg
jge
push
mov
clc
mov
push
lods
mov
dec
pop
enter
xchg
movsl
push
push
push
or
add
cmp
fxam
sub
mov
xor
sbb
test
pusha
push
and
xchg
xchg
cmp
std
jbe
push
jmp
and
jecxz
and
jnp
fstp
fnstenv
sub
push
or
out
lahf
add
arpl
cmc
fcmovnbe
nop
movsl
xchg
ret
xor
mov
lods
test
mov
pushf
dec
jae
and
dec
add
fcomps
movsl
mov
pusha
test
lods
inc
sbb
in
sub
cmpsl
mov
cmp
xor
imul
dec
pop
outsb
incl
xor
popf
or
sbb
mov
out
into
pop
je
and
xlat
inc
cltd
add
mov
jmp
jno
frstor
aas
mov
inc
dec
bound
pop
jno
shlb
mov
mov
inc
int
out
push
into
jge
mov
jns
mov
clc
movsl
jge
cwtl
sbb
pop
mov
std
loop
movsl
or
nopl
jecxz
mov
sub
sbb
lods
outsb
and
xchg
jmp
sbb
jmp
inc
ja
cmp
inc
dec
mov
repz
pop
pop
mov
sub
sarl
test
mov
int3
add
les
call
orb
mov
loope
lahf
sub
iret
fisttpl
loope
bound
push
test
mov
rolb
xchg
movsb
xorb
test
xor
sub
in
std
inc
out
std
leave
andl
inc
rcll
sub
jg
xlat
icebp
mov
shlb
subb
jae
aas
mov
jno
addr16
outsb
push
test
mov
and
fldl
pop
push
push
jmp
cmp
adc
pop
fildl
push
push
mov
xchg
cmp
ds
mov
lret
clc
stos
cmpb
sbb
dec
fidivl
sbb
add
push
mov
and
cltd
xorb
adc
stc
dec
les
ret
mov
jbe
or
lds
cmpsl
dec
lods
leave
jecxz
mov
push
insb
andl
and
cltd
inc
mov
sbb
inc
iret
mov
in
and
cmp
popa
xor
decl
cltd
test
ficoml
test
mov
adc
fwait
out
movsl
push
into
jb
sub
sbb
mov
cwtl
cwtl
test
ret
stos
in
inc
mov
or
ja
sub
jg
jae
out
insb
push
pop
mov
clc
xchg
xchg
mov
sub
mov
or
fcompl
insb
cmpsl
push
inc
xchg
push
int
mov
fdivrl
outsb
pop
xor
or
loop
jmp
imul
int
cs
shlb
cmc
incl
lret
mulb
sti
xor
in
pop
sbb
mov
sbb
out
dec
test
popa
insl
pop
loopne
lock
sbb
nop
divb
aas
adc
bound
inc
push
lahf
bound
mov
cld
fcomps
in
in
xor
dec
je
rcrl
xor
enter
xor
or
mov
or
scas
int3
ud2
mov
mov
and
sbb
fldl
into
mov
les
arpl
sub
repnz
and
imul
sti
shl
add
xchg
xchg
insl
xor
pop
repnz
repnz
cmpsb
cmpsl
int3
js
aas
lock
and
add
push
jnp
pop
sub
test
movsl
sti
mov
sub
mov
sbb
mov
rcrl
stos
xchg
and
sub
adc
mov
push
jg
and
stos
pop
mov
shll
jo
xchg
push
xchg
jecxz
or
cmp
cmpl
dec
pusha
xor
out
sbb
cli
mov
xor
scas
outsb
inc
mov
iret
mov
outsb
ljmp
or
inc
mov
fbstp
mov
enter
inc
stos
es
mov
lods
test
lea
mov
daa
mov
pop
je
out
add
xchg
pop
pop
mov
scas
loopne
aas
and
pop
ret
xor
cmpsb
mov
divl
sub
imulb
sbb
push
pop
mov
sarl
incb
mov
mov
das
inc
mov
test
jne
les
loop
test
xor
add
popa
adc
aad
stos
jb
pop
arpl
cld
bound
out
ret
push
dec
lea
dec
fistl
shrl
stc
in
pop
jle
faddl
test
out
jo
rcrl
js
pop
sub
lds
cmp
fsts
mov
or
lock
iret
neg
push
xor
mov
pop
lcall
fistpll
xor
mov
adc
cmpsl
sub
jnp
xor
fcomps
xchg
mov
pop
loope
pop
stos
in
out
mov
cmp
ror
cmp
jp
mov
cltd
pop
inc
mov
push
inc
sbb
mov
mov
das
cmc
jl
mov
mov
and
cmp
mov
cld
in
jb
test
imul
movsl
mov
jo
and
test
push
mov
xor
loope
das
add
xor
add
xor
and
xchg
adc
jmp
divl
testl
jns
push
pop
pop
add
cmp
stos
inc
mov
jmp
insb
js
cwtl
outsl
pusha
insl
shl
int3
push
and
lret
push
repnz
mov
cmp
and
lock
and
movsb
in
sub
out
mov
inc
idivl
push
dec
xor
jp
cmpsb
dec
inc
hlt
ds
and
jle
add
pusha
es
push
icebp
adc
xchg
adc
pushf
xchg
add
adc
int3
push
add
pop
cld
sti
mov
cmc
pop
adc
and
test
xchg
lods
cmc
fimull
je
inc
test
inc
shll
rol
sub
push
ret
pop
mov
adc
cmp
shlb
jmp
int3
pop
push
mov
cmp
mov
adc
mov
push
and
jne
outsl
dec
fdivl
xor
mov
sbb
dec
aad
and
movsl
xor
das
jae
cmpsb
fbstp
int3
mov
xchg
hlt
mov
add
adc
rorb
mov
adc
popl
stos
js
addr16
mov
adc
mov
popf
fmulp
push
push
les
test
adc
cmp
cli
xlat
icebp
hlt
stc
cmp
pop
repnz
cmpsb
pop
test
xor
lcall
stc
xchg
shlb
icebp
adc
and
or
mov
pop
out
in
push
xchg
xchg
repnz
push
movsb
xor
mov
daa
lock
cmp
jle
fiaddl
stc
add
push
int
sbb
mov
or
lods
push
push
fdivrl
pop
mov
push
push
sbb
gs
adcl
dec
pop
fistl
repnz
cmp
cld
jl
cs
adc
les
sahf
cltd
fdivl
add
xchg
cmp
xor
xchg
sub
rorb
jnp
or
jl
pop
rcr
test
xor
data16
or
xor
cs
adc
daa
sub
sbb
dec
inc
push
inc
lret
div
add
fldenv
dec
sbb
and
push
dec
cmp
or
icebp
sbb
pop
lea
ret
jl
jno
leave
or
fisubl
pop
mov
jmp
stos
jge
fiadds
stos
add
pusha
int
sub
push
inc
cmc
cs
mov
arpl
mull
stos
outsb
push
and
mov
into
mov
xchg
sbb
adcb
sar
mov
enter
enter
fistl
cmp
jno
rorb
shll
les
jecxz
ret
sar
fs
mov
or
bound
dec
mov
sub
and
arpl
add
jne
popf
test
sub
loopne
ret
jl
jmp
cld
stos
inc
xor
rcll
insl
xor
repnz
mov
sti
leave
cli
jecxz
scas
jnp
outsl
adc
or
addr16
jae
pop
lcall
mov
icebp
addr16
mov
mov
mov
inc
sub
lahf
insl
adc
fcoms
sbb
rolb
adcl
add
pop
add
mov
xchg
xchg
ret
sahf
rorb
dec
cmp
sbb
out
xchg
ret
pop
inc
jge
mov
pop
nop
ljmp
cltd
mov
rcrl
or
enter
and
stos
jp
fistpl
xchg
add
mov
or
scas
fildll
inc
and
out
push
cmp
rcll
into
enter
xchg
imul
pop
rcl
mov
adc
es
divl
cmp
movq
pop
and
testl
cli
mov
loope
push
fcmovb
imul
ds
pop
inc
and
clc
jle
mov
and
jp
push
lods
push
pop
mov
iret
lcall
les
xlat
jg
rcll
cmp
add
and
sbb
cmp
shrl
mov
imul
jns
xor
addr16
mov
lds
jmpw
test
jne
clc
insb
push
ljmp
pop
mov
ja
cwtl
mov
je
or
sbb
add
jb
movsl
sbb
mov
or
push
pop
mov
push
sbb
xor
ds
ljmp
add
mov
xor
or
sub
fistpl
jnp
cs
dec
mov
pop
outsl
nop
test
out
mov
mov
xor
xlat
loopne
ljmp
pop
aas
jnp
aas
mov
int
or
dec
mov
lret
xchg
imulb
jg
push
faddp
js
jnp
and
aam
jnp
jae
mov
mov
scas
mov
jge
mov
xor
fistpll
inc
dec
je
cmpl
push
sub
pushf
leave
xor
xchg
rcrb
outsl
mov
int3
in
lcall
pop
movsl
inc
cmc
test
lds
xchg
in
xchg
or
or
bound
outsb
ss
mov
or
jle
outsl
jne
dec
push
movsl
incb
mov
in
cmp
or
jbe
shlb
pop
mov
adc
add
push
push
arpl
cltd
dec
or
xchg
pushl
or
out
xor
pop
popa
xchg
addb
mov
jno
mov
mov
mov
jg
sbbl
orb
mov
scas
imul
push
xor
mov
icebp
out
out
std
lret
out
xchg
dec
shll
ret
and
push
js
dec
add
lcall
pop
pop
sub
ret
ficoms
divb
push
lret
sti
sub
mov
push
lods
sarb
mov
dec
daa
sarl
movsb
dec
and
leave
fimull
leave
xchg
fistpll
inc
aam
cs
fnstsw
adc
mov
leave
cld
mov
fsubrl
cmp
pop
sbb
cmp
mov
cmc
sbb
sbb
ret
mov
mov
mov
xchg
jge
ret
mov
cmp
dec
pop
cmpsl
test
dec
cmp
mov
sbb
fistpll
sahf
hlt
sub
cmp
les
xor
movsl
and
ret
stos
sub
test
xor
in
iret
or
mov
xor
push
loopne
imul
leave
call
scas
lods
push
subl
adc
and
fwait
pop
std
leave
outsl
sti
adc
push
and
sbbb
daa
sbb
jnp
bound
sarb
outsb
enter
mov
movsl
scas
cmp
xlat
xor
in
fwait
or
adc
cmp
adc
addr16
cltd
in
push
cltd
scas
outsl
xchg
vmovhps
or
mov
arpl
jg
lret
jne
xchg
sub
cmpsb
add
jle
mov
push
sbbl
das
fadd
imul
in
ret
jg
out
testl
xor
pop
ret
jmp
dec
jo
dec
int
jae
icebp
pop
call
outsl
adc
and
cmc
repnz
dec
scas
dec
xchg
xor
into
mov
daa
xchg
push
aam
lods
sub
cltd
xchg
push
insl
jne
into
orl
xlat
loop
sub
xor
int
adc
sahf
repnz
pop
in
xchg
fldenv
mov
mov
xlat
dec
xor
call
cmp
aas
mov
or
pop
jb
xor
adc
cmc
cltd
enter
push
cmpsb
cwtl
lock
mov
adc
push
repz
rol
cmpsl
dec
inc
add
mov
lods
dec
divb
cmc
sahf
jnp
vrcpss
inc
dec
std
mov
push
mov
cld
lret
dec
xchg
cmp
jno
iret
imul
dec
cwtl
xchg
rcl
imul
es
mov
cmp
jmp
push
xchg
push
cli
pop
lods
movzbl
in
je
push
pusha
mov
cmc
jno
jo
cmpsl
andb
cmc
test
mov
xor
mov
cmp
jnp
outsb
hlt
pushf
jle
fisttpll
or
arpl
lahf
xchg
test
sahf
paddsb
bound
mov
jg
ret
mov
fs
xchg
sub
pop
sbbl
in
sbb
mov
shrb
pop
lods
adc
aam
mov
mov
mulb
adcb
shll
fnstenv
and
repnz
fsub
das
adc
test
icebp
push
jbe
inc
mov
js
jmp
or
cmp
outsb
adc
dec
sbbl
insb
dec
mov
into
std
adc
or
pop
in
andl
movsb
sub
in
pop
adc
lds
je
add
and
insb
dec
jo
pushl
lock
les
in
mov
pop
push
cld
in
movsl
cltd
and
xchg
pop
jnp
jns
pop
cmp
inc
cmp
je
cld
cmpsl
cmp
add
fisubrs
pop
sub
xchg
mov
inc
bound
hlt
cmp
ja
in
movb
imul
in
cli
daa
add
bound
cmp
mov
jp
sbb
movsb
movsl
int
xor
mov
xor
push
jmp
adc
scas
test
lds
pop
and
sub
cld
mov
mov
adcb
inc
add
aam
adcl
mull
push
push
popf
add
fdivrs
not
das
and
ja
cmpps
sahf
clc
shll
sub
mov
aas
call
jge
hlt
shl
jae
cltd
ljmp
mov
push
pushf
test
ljmp
fs
sbb
pop
add
mov
dec
adc
in
xor
adc
jmp
rcll
pop
in
movsb
xorb
adc
push
xor
scas
jecxz
xor
cld
mov
shr
sbb
loope
outsb
push
call
xchg
pop
add
and
rclb
div
push
mov
sbb
pusha
js
cld
dec
xchg
jmp
push
outsb
mov
dec
test
inc
into
cltd
add
adc
cmp
pushf
pusha
sub
lds
or
and
insl
ja
fmul
adc
jmp
jl
sub
stos
ret
in
mov
mov
scas
iret
fldcw
fwait
shrl
sbb
test
orl
imul
mov
sbb
jne
mov
and
mov
pop
lods
sbb
add
lcall
jb
pop
adc
jno
icebp
shrl
xor
repnz
add
bound
mov
test
fldenv
sbb
push
repnz
ficompl
lods
and
sarb
push
test
inc
stos
mov
mov
imul
inc
subb
cmp
sub
xor
cmp
mov
divb
pop
adcb
add
cmpsl
addr16
fs
cmc
movsb
mov
pop
shrl
iret
pop
sub
xorb
ss
mov
xchg
std
lret
push
cmpsl
addl
mov
dec
sub
cmp
pushf
push
xchg
xor
mov
in
cld
idivl
mull
xor
fnstcw
sbbl
cmc
testl
aam
xor
nop
movsl
dec
ss
sbb
mov
and
push
dec
frstor
and
sti
ja
dec
cmp
lods
pop
or
ja
aaa
mov
je
test
mov
movl
mov
inc
fidivl
icebp
mov
dec
orl
lods
inc
mov
jge
xchg
or
std
mov
neg
lret
xlat
out
cwtl
lret
mov
outsb
call
pop
and
jl
iret
xor
cmc
xor
ds
inc
mov
sub
jge
mov
mov
das
jns
lret
inc
sub
mov
sbbb
lret
inc
cmp
and
insl
ss
mov
add
mov
pop
test
leave
sub
call
pop
adc
lods
test
and
loopne
movq
push
pop
es
sub
bound
mov
js
js
out
lahf
aam
mov
jl
mov
mov
fsubs
or
mov
pop
mov
sahf
cmp
inc
mov
jle
pusha
add
or
xor
xchg
sbb
pop
mov
pop
jmp
xchg
sti
movsb
mov
clc
repnz
imul
mov
jp
jmp
lock
sub
repz
dec
int3
stc
mov
inc
sbb
mov
pop
lret
out
xor
or
pop
add
dec
push
fistl
out
inc
stc
push
pop
cmp
xchg
nop
cmp
push
push
or
rcrb
jp
repz
mov
pop
push
in
mov
sub
sarb
inc
and
frndint
bound
ror
mov
fwait
addl
xor
mov
pusha
sub
paddd
sbb
xchg
aad
sbb
repz
fsubl
mov
mov
pop
cmp
push
dec
nop
test
fwait
xor
pop
jmp
in
lret
pop
es
inc
mov
inc
lret
movsl
jne
subb
je
xchg
pop
imul
gs
ja
adc
sub
inc
mov
xchg
mov
imul
mov
lods
push
lret
sub
mov
jmp
dec
movsl
into
pop
pcmpgtb
popa
mov
pop
pop
mov
dec
pop
js
mov
adcb
cmpb
xchg
or
mov
lea
loop
repz
push
int3
rorl
jnp
iret
or
int
mov
mov
cmpsb
bound
xchg
or
mov
test
cli
outsl
adc
jmp
push
xor
dec
rcll
adcl
lcall
cwtl
arpl
mov
in
cmpsl
fadds
push
xchg
aaa
inc
in
ljmp
sbbb
sbb
lcall
jle
jmp
not
hlt
cmp
cmpsb
jo
lcall
cmp
or
mov
mov
push
dec
ljmp
pop
add
pop
shlb
mov
mov
mov
rcr
push
lea
scas
cwtl
sahf
jle
in
or
mov
mov
movsb
dec
lods
fcmovnb
xor
mov
js
and
or
sti
shlb
ja
jmp
pop
aad
dec
or
fidivrs
push
test
jmp
in
hlt
iret
cmp
inc
ss
pop
mov
sub
mov
outsb
adc
popaw
dec
push
into
aaa
xor
mov
adc
stos
cmp
pop
mov
mov
aas
mov
cs
sbb
push
push
lret
imul
sbb
test
jae
cld
sub
xchg
ret
fisubrs
mov
rorb
xor
dec
dec
call
or
push
sbb
sbb
or
sbb
mov
sub
cs
mov
imul
loop
test
push
test
and
push
or
sub
icebp
call
ret
test
mov
je
push
mov
lcall
xor
and
ljmp
pushf
mov
ret
mov
pusha
lea
ret
sub
sub
fildll
mov
fldenv
fistpl
cmp
and
popf
xchg
xchg
jo
push
mov
sbb
xor
adc
mulb
shrb
jb
icebp
mov
pop
bound
jns
cmpsb
pushf
or
lcall
ja
pop
adc
popa
adc
adc
mov
dec
xchg
dec
xchg
or
pop
rclb
sarb
push
testb
cmp
add
and
fildl
jnp
or
push
stc
and
test
movsl
cltd
or
aad
pop
enter
nop
leave
int3
imul
sbb
dec
scas
jae
shrl
stos
push
sub
imul
cmp
mov
inc
cmpsb
mov
mov
mov
mov
push
mov
mov
jmp
hlt
lcall
push
int
daa
or
inc
lret
mov
xchg
das
scas
inc
xchg
es
aam
mov
psubb
mov
jge
push
insb
int
aaa
test
out
jge
ds
jge
dec
mov
xor
leave
enter
xchg
out
dec
sahf
fadds
pop
loop
dec
ret
jbe
into
mov
shrl
loopne
call
mov
inc
or
test
pop
jbe
push
loop
xor
xor
and
mov
xchg
inc
and
pop
lods
cmp
jp,pn
pop
or
pop
pushf
mov
imul
xor
and
push
or
sub
shlb
mov
mov
or
addr16
popa
shlb
out
jge
into
ja
movb
iret
or
pop
hlt
mov
ret
loope
lret
hlt
xor
adc
orl
pop
repnz
or
sub
jns
je
cmp
inc
jo
pop
xor
and
pushf
in
jns
pop
dec
scas
sahf
call
lret
pop
cmpsb
xchg
dec
jbe
loope
xchg
sub
imul
adc
mov
cmp
cmp
adc
sub
sub
xchg
adc
or
cmp
out
pop
insl
fisubl
jno
xchg
adc
loopne
inc
inc
daa
std
add
xor
mov
dec
jns
jns
frstor
out
shll
mov
and
jecxz
fildl
pop
cmp
bound
sti
dec
clc
les
lock
fstl
fidivl
xor
cmp
orb
scas
adc
sbb
push
pop
mov
xor
sbb
test
dec
in
inc
jne
aam
add
adc
pop
dec
jmp
stos
cmp
divb
mov
xor
scas
fildl
lds
and
cvtdq2ps
arpl
cmp
mov
fcmovbe
push
mov
insb
call
mov
scas
mov
sti
mov
sti
int
fimull
imul
es
add
and
dec
mov
push
push
sbb
push
aas
bound
adc
dec
js
lds
fbstp
subb
pop
popa
std
pop
ss
xchg
jo
xor
in
rcr
mov
jle
call
jg
sahf
cmpsl
add
xchg
cmp
adc
sbb
mov
arpl
je
mov
adc
ss
inc
xchg
out
sti
arpl
rclb
ljmp
xor
or
fwait
jne
dec
pop
out
repz
js
mov
filds
in
inc
test
xor
in
out
jle
addr16
mov
pop
jae
xor
pop
xchg
xor
cmp
dec
adc
pop
and
lcall
lret
rcll
out
push
sbb
and
sub
aad
add
jno
jbe
xchg
adc
cld
leave
sub
sub
movb
mov
fcoms
jg
orl
insl
mul
out
xchg
adc
cmp
cmpb
sub
in
mov
add
sarb
les
sbb
movsb
out
jg
std
inc
stos
repnz
ret
stc
mov
dec
sub
pop
aaa
das
adc
sbb
jo
and
in
lret
add
or
cmp
mov
ds
and
imul
or
inc
in
xor
leave
mov
xchg
jp
cwtl
mov
inc
lods
int
mov
adc
adc
mov
cmpsl
mov
xor
xchg
jo
mov
xlat
mov
test
rcll
pop
je
sbb
call
icebp
outsb
dec
xor
fnstcw
cmp
inc
lcall
inc
bound
aad
mov
sbb
das
sub
mov
push
frstor
stos
or
test
adc
pop
mov
pop
les
push
das
inc
ds
les
mov
clc
popa
gs
ds
pop
loope
scas
fistpll
aas
sarb
ss
mov
add
pop
lret
xchg
dec
out
push
jmp
imul
pop
sub
xor
and
dec
dec
lea
add
xor
cmp
jge
shlb
loope
gs
sbb
bound
out
fldenv
mov
jnp
outsb
xchg
ret
dec
das
xchg
jge
jo
lds
and
inc
stos
cwtl
les
mov
sub
mov
adc
or
jo
xor
inc
repz
cld
xchg
scas
lret
jge
movsl
cld
sar
jge
out
sbbl
xchg
xchg
cmc
mov
cs
mov
or
mov
fcmovb
jmp
xchg
cmp
pop
js
pop
jns
or
xor
gs
ljmp
push
lods
int
ss
je
mov
ret
lea
sbb
dec
dec
mov
add
push
out
ja
mov
lods
sbb
sbb
or
dec
mov
cmp
stos
out
dec
sbb
inc
sar
lods
fdivr
and
cli
and
xor
cmpsb
or
jl
mov
mov
dec
xor
push
push
mov
jns
addr16
mull
push
lahf
arpl
sbb
sti
stos
lret
mov
sub
repnz
negb
xchg
movb
sti
aad
xor
test
jno
fsubrl
cmp
in
call
and
ror
pop
stos
and
or
shll
pop
dec
pop
cli
adcl
lret
add
jle
cmp
in
outsl
mov
sub
or
mov
xor
mov
push
xchg
adc
test
iret
xchg
fs
or
scas
mov
sbb
xchg
jnp
js
sbb
aas
out
push
add
xor
test
inc
push
push
dec
jp
sub
xor
loope
mov
aad
mov
fucom
daa
cmpsl
jne
loope
loope
inc
jecxz
mov
xchg
mov
data16
xor
push
imul
inc
mov
hlt
hlt
bound
jae
lahf
jae
jl
lods
dec
les
ja
push
das
cmp
aad
mov
out
dec
and
ja
sbb
push
aaa
scas
test
test
iret
add
out
out
outsb
adc
adc
xor
repz
cli
inc
sbb
stos
sbb
mov
fsubrp
les
fldt
jae
xchg
call
jno
cmp
mov
stc
nop
lahf
push
cs
mov
mov
mov
lret
sbb
scas
shlb
adc
nop
movl
lcall
idivl
xchg
test
xchg
outsb
cwtl
sti
xor
pop
pusha
cmp
nop
shlb
fwait
cld
push
std
add
mov
dec
aam
lahf
sbb
mov
push
addb
jo
and
and
imul
lods
add
js
nop
mov
std
jno
push
and
test
add
inc
push
jbe
rorb
xchg
or
mov
push
and
or
mov
sbb
aad
pop
popf
es
lcall
cmpsb
rol
es
shll
xchg
inc
loop
jecxz
rclb
popf
rolb
jge
fisubl
pop
push
fbld
add
mov
lret
add
rolb
in
cmp
jno
adc
hlt
shl
iret
mov
into
mov
cmpsl
mov
out
cmpsl
jge
xchg
in
ds
popa
dec
cmp
mov
clc
adc
sti
jns
lods
push
dec
sbb
add
inc
pop
jno
mov
jge
dec
int3
rcll
jecxz
fwait
mov
jae
mov
ljmp
ss
js
fidivs
out
rorl
pusha
add
mov
test
movsb
inc
add
imul
jbe
dec
mov
in
repz
scas
add
cmp
add
dec
and
rolb
pushf
cmp
aam
test
arpl
xor
inc
sub
rorb
and
cmc
test
mov
xor
aaa
add
mov
std
std
jbe
add
das
cld
adc
into
adc
jnp,pn
mull
push
cmc
into
ss
rcrb
out
aaa
cmc
dec
xchg
stos
aam
rcrb
cmp
push
inc
fmull
shrl
xor
arpl
aad
fisttps
push
repz
jp
js
cwtl
mov
test
cld
xor
test
loop
jo
std
adcl
add
or
je
or
or
xor
gs
push
sub
pop
fmul
add
addb
scas
inc
pop
cwtl
push
loopne
cmpsl
adc
mov
cmp
je
stos
xchg
mov
jnp
shlb
pop
inc
add
add
arpl
jmp
dec
push
push
dec
jmp
icebp
mov
jb
add
sbb
mov
nop
iret
push
int
das
dec
ret
cmp
out
inc
adc
cmp
inc
je
mov
mov
mov
push
mov
pushf
out
mov
sub
sub
roll
and
add
jge
in
push
repnz
fmuls
adc
sbb
es
push
sbb
loope
jo
add
or
or
and
sbb
mov
dec
jo
rol
mov
push
iret
out
je
mov
rorb
pop
lret
fwait
add
loope
test
xchg
and
dec
inc
jo
xor
pop
negl
adc
cmp
pusha
aaa
lcall
stc
test
fistpl
out
dec
jmp
std
fwait
into
cld
sub
sbb
mov
mov
loope
mov
lods
xor
jl
ret
fldenv
stos
insb
mov
dec
adc
out
or
adc
mov
mov
lds
daa
adc
xchg
jo
inc
aaa
dec
jne
jne
je
in
aaa
rorb
aam
jp
mov
cmp
xchg
mov
hlt
out
add
out
pop
adc
dec
imul
and
cmp
pushf
inc
or
cld
mov
out
sub
mov
mov
out
mov
pop
in
add
jno
add
loop
das
xlat
mov
mov
adc
icebp
mov
pop
cmp
mov
sbb
pop
ret
rcll
add
sbb
and
sub
stos
mov
add
aam
and
cmpsl
dec
and
inc
jp
push
cmpsb
mov
mov
divb
sub
push
push
mov
jno
xchg
scas
out
xlat
rolb
cmpsl
loop
in
pop
jp
and
xchg
shll
push
pop
loop
lcall
dec
push
insb
aam
or
rcrb
js
xor
inc
push
aad
fists
insb
jne
jne
ljmp
sub
aaa
out
out
mov
xchg
pop
popf
arpl
addr16
aad
shrb
xchg
fs
cs
pop
dec
mov
in
cmp
shll
pop
xor
movsl
outsb
out
xlat
ss
test
test
sub
lods
sbb
test
mov
mov
les
push
addr16
aam
sbbb
fs
and
lret
mov
xor
ffreep
pusha
sub
fisttps
mov
jp
and
mov
movsb
jle
iret
sti
rorb
fidivrl
xor
lret
rclb
test
push
sbb
push
mov
or
push
dec
ja
push
out
mov
pop
sub
unpckhps
sbb
in
mov
mov
add
lret
xacquire
or
ja
sets
sub
mov
shrb
repnz
and
xchg
pushf
bnd
nop
popf
inc
pop
cmp
jo
in
xchg
jnp
mov
dec
mov
inc
pop
cwtl
sub
sbb
jo
in
stos
dec
add
dec
xlat
mov
dec
fyl2xp1
in
mov
add
mov
es
cs
cmp
jbe
add
pop
cli
mov
fistpl
movsb
add
in
jo
es
out
or
movsb
loop
jno
jnp
fs
fs
pop
scas
into
mov
fs
push
clc
pushf
mov
arpl
push
jmp
cmp
mov
cmp
out
xor
loop
adc
add
pusha
cmpsb
mov
sub
aas
mov
jns
jmp
nop
insb
pop
pop
rcrb
pop
ljmp
mov
outsl
and
pushf
insl
orb
repnz
add
sub
cmpl
mov
adc
in
fnstsw
cmpsl
push
xorl
add
xchg
push
cmp
stos
lds
decb
hlt
inc
cmp
adc
xor
imul
je
cmp
inc
popf
push
mov
cmp
and
adc
scas
cmp
inc
in
jno
or
push
pop
repnz
sbb
push
dec
gs
lahf
jbe
rcrl
xchg
test
gs
mov
push
push
sub
jb
mov
into
pushf
cmp
sub
mov
pop
jnp
adc
mov
lock
sub
imul
gs
out
mov
push
loope
or
mov
std
mov
sarl
ss
test
pop
add
adc
shlb
fbld
mov
jae
loop
adc
push
cmp
mov
xor
ss
jle
int3
push
xor
lcall
mov
sbb
add
cwtl
or
xchg
mov
add
sahf
stos
and
fidivrs
or
rorb
mov
pop
add
clc
pop
out
xor
jmp
cwtl
fwait
sbb
sarl
lcall
mov
insl
sarb
or
pop
and
or
lret
xchg
mov
pop
jb
pusha
jo
xor
data16
mov
pop
cwtl
divb
pop
mov
outsb
fnstcw
js
adc
cmpb
cmp
jle
cltd
add
enter
adc
popl
mov
lret
insb
inc
je
in
repz
xorb
out
inc
mov
inc
ret
rcll
and
mov
cld
mov
fs
hlt
xor
mov
int3
loopne
fdivrs
ljmp
cmp
jno
inc
test
mov
dec
add
shll
inc
into
mov
aam
sub
add
mov
out
dec
sbb
sub
stc
adc
mov
xchg
into
sti
nop
dec
push
shrl
fmul
inc
pop
xor
push
add
movsb
push
stos
scas
ror
cmc
loopne
xor
fisttpll
out
pop
push
pop
out
clc
and
push
fldenv
sbb
mov
inc
mov
adc
cmp
push
mov
lods
fsubl
lret
ds
push
push
and
mov
stos
sbb
fldt
sub
push
test
cmp
lret
es
cmp
push
shlb
notb
xchg
clc
movsl
dec
rcrb
ja
stos
fwait
add
in
inc
and
dec
outsl
pop
mov
pop
sbb
int
hlt
mov
in
shrl
xlat
jp
je
dec
dec
subl
dec
dec
testl
shll
ficompl
cmpsb
sbb
cmpb
mov
cmp
jge
icebp
add
mov
test
cwtl
movsl
or
in
pop
jmp
push
aas
in
dec
cmp
push
cli
movsl
fcmovnbe
xlat
lret
push
push
loopne
dec
call
push
pop
push
mov
mov
outsl
in
jle
and
idivl
pop
adc
fisttpl
xchg
mov
pop
inc
ja
xor
fdivs
add
mov
xchg
sub
ss
pop
jg
repz
out
imul
test
and
fldl
inc
subl
ja
mov
push
out
rorb
jbe
call
in
outsb
lock
aad
or
stos
cmp
gs
xchg
out
hlt
std
mov
ja
das
xchg
addr16
inc
stos
and
jmp
iret
xchg
scas
mov
adc
testl
enter
imulb
mov
ljmp
fldl
fbld
xlat
stos
cmp
pop
lahf
adc
mov
arpl
mov
lds
dec
mov
movsl
fwait
pop
xor
sahf
cmpsl
adc
sub
push
mov
jb
pop
mov
je
and
stos
jmp
dec
pop
xor
stos
push
test
push
push
jne
jae
push
insl
clc
mov
sub
jb
xchg
adc
mov
mov
mov
insl
cltd
repnz
hlt
icebp
mov
or
inc
inc
fsubrl
mov
push
fstpt
test
mov
pop
sysret
push
pop
aaa
adc
add
bnd
sahf
xchg
test
cld
or
in
fiadds
test
mov
lahf
jae
imul
cwtl
stc
cld
sbb
rol
push
jns,pn
add
xor
pop
aaa
fists
fcoml
movsb
lahf
std
out
das
push
mov
pop
cltd
jl
bound
mov
dec
pusha
dec
shrb
cli
pusha
push
xor
xchg
outsb
fwait
jb
xchg
aaa
pop
pop
iret
mov
inc
or
xchg
and
push
pusha
pop
or
push
push
insl
dec
fisubs
rorl
inc
jmp
pop
fdivrp
adc
cli
mov
vpcmpgtb
push
jns
mov
xchg
rcrl
pop
inc
test
insb
cmp
push
data16
js
jge
cwtl
orl
das
test
mov
loop
into
jmp
adc
xor
js
repz
in
ret
pop
fildll
in
jle
flds
dec
pop
xchg
mov
jl
fimull
imul
mov
dec
ret
xor
sbb
mov
gs
pop
call
das
or
pop
adc
fst
lcall
sub
int3
mov
mov
arpl
out
mov
pop
xchg
shll
in
out
inc
ret
js
push
orb
les
pop
daa
jae
adc
xlat
pop
adc
mov
dec
xchg
arpl
mov
out
mov
dec
fdivl
jl
mov
pop
rol
sahf
scas
mov
lock
sar
pop
mov
push
push
loope
sti
push
lret
sbb
std
mov
push
cmp
xchg
adc
sbb
leave
fists
fistl
ret
dec
movsb
rcll
sbb
out
mov
fcompp
loope
leave
ljmp
fwait
push
sub
jnp
js
pop
lret
fs
xchg
push
jns
add
pop
mov
mov
sub
jmp
aaa
mov
pop
sbb
shl
arpl
enter
mov
add
jmp
daa
lret
fstpl
test
jecxz
add
sub
xchg
xlat
movsl
ja
jmp
ds
xlat
out
das
sbb
ret
dec
inc
sub
xchg
or
xor
add
xchg
ds
xchg
filds
xor
lods
lea
mov
aaa
xchg
dec
and
xchg
mov
mov
add
loop
or
mov
arpl
mov
orl
sub
ds
mov
lret
dec
lea
add
xor
cmp
movsl
imul
rol
xchg
cmc
cwtl
sub
les
rcrb
cli
mov
xlat
out
lret
testl
adc
fisubs
add
adc
jmp
or
insl
sub
inc
in
filds
sar
pop
inc
insl
push
mov
call
mov
imul
cmp
lods
xor
sbb
test
xchg
or
ljmp
loope
inc
lock
loope
les
mov
mov
jno
adc
cmpsb
mov
dec
and
in
adc
mov
icebp
lret
add
test
mov
imul
je
js
pop
add
into
mov
sbb
mov
enter
adc
mov
xor
push
and
jp
negb
pop
pop
decl
fisubrl
lock
rorl
out
cmpb
mov
enter
xchg
cwtl
das
xchg
addl
jp
repnz
decb
adc
out
or
add
xor
push
mov
adc
into
add
mov
es
shlb
jmp
push
xor
and
pop
movsb
adc
lret
adc
frstor
push
mov
jp
and
pop
shr
add
mov
add
xchg
imul
inc
das
in
cmpsl
and
adc
fdivrs
cmc
xor
pop
push
inc
xor
sti
in
arpl
pop
sti
pusha
xchg
pop
mov
xchg
jle
and
and
cmpsb
push
nop
test
testl
fildl
adc
dec
add
pop
cmp
mov
mov
pop
jae
jno
or
push
bound
jp
hlt
decl
insb
mov
cmp
xchg
adcb
lret
mov
sar
sbb
sbb
xor
mov
mov
shlb
inc
ljmp
dec
mov
ss
lods
sbb
sbb
xor
movsb
xchg
xchg
testb
in
mov
test
icebp
xor
or
pop
mov
stos
jb
pop
sbb
sub
cli
jb
mov
rolb
add
sub
ftst
enter
mov
sub
mov
jp
aas
sub
bound
adc
jecxz
xchg
pop
jp
push
shlb
pminsw
mov
les
das
or
daa
dec
rorl
int3
test
stos
subb
iret
iret
iret
mov
mov
lahf
ss
stc
lds
xlat
fidivs
pop
fwait
push
xchg
movsb
pop
mov
icebp
aam
insb
jae
mov
fs
or
xchg
lahf
dec
sbb
dec
and
mov
into
pop
outsl
push
sahf
mov
xlat
aad
sub
mov
popa
incb
ret
scas
xlat
es
lret
dec
imul
int
pop
dec
out
in
cmp
popf
aam
loopne
push
cmpsl
mov
hlt
out
mov
xchg
jmp
inc
and
cli
xchg
std
inc
das
stc
insl
inc
cltd
mov
adc
repnz
repnz
jge
sti
mov
mov
or
and
mov
fcomp
loope
enter
xor
dec
cmp
adc
xor
adc
mov
cmp
sbb
cmp
lret
push
sbb
sbb
in
rorb
sbb
add
push
loopne
mov
and
shr
lds
fmull
into
adc
dec
sub
in
jb
sub
mov
nop
int
aad
xchg
mov
pop
pop
mov
stc
and
or
test
push
sbb
jp
push
pop
mov
sub
mov
pusha
lret
fwait
shl
insl
flds
sub
jno
ss
dec
aaa
mov
or
xchg
into
ja
cmp
mov
jecxz
das
xchg
idiv
mov
aas
mov
int3
xor
xor
and
test
mov
add
mov
sbb
dec
in
or
dec
and
test
stos
sahf
push
mov
andl
lock
xchg
xchg
sub
xchg
cmp
cmpsb
pop
mov
andb
andb
inc
cld
mov
ja
xchg
ss
ret
dec
and
cmp
jbe
stos
shll
sti
cmp
lcall
movl
hlt
inc
ret
enter
cmp
xchg
notl
dec
and
cmp
jl
inc
pop
int3
mov
adc
dec
sub
pop
push
adc
inc
les
pop
cmp
jl
or
xchg
out
mov
or
pop
inc
fldt
xchg
dec
pop
nop
or
out
add
pop
negb
ja
fidivrs
out
leave
lret
push
movsb
scas
cltd
jecxz
jnp
add
jo
jmp
fs
mov
sbb
ret
inc
pop
lcall
ds
push
out
xchg
adcl
mov
ret
and
mov
pushf
or
sbb
mov
dec
cmpsl
lea
cmp
mov
imul
cmpl
xchg
stos
mov
ret
push
cmp
pop
xor
aam
pop
fdivl
adcb
data16
pop
sahf
xchg
xchg
sbb
test
add
clc
scas
sbb
inc
dec
or
imul
adc
lahf
in
xchg
outsl
pop
sub
dec
push
popf
lds
xchg
mov
sub
pop
or
test
mov
ret
pop
and
xchg
or
cmpl
sbb
xor
movb
or
fiaddl
orb
inc
jmp
clc
add
sbbl
fwait
xchg
jg
xor
bound
jne
std
and
adc
dec
andb
fs
or
ss
mov
testb
mov
adc
sub
dec
sbb
or
aas
mov
xlat
sbb
inc
popa
fisubl
in
aas
jb
in
popa
test
movsl
movsl
jg
sub
out
imul
js
icebp
push
shll
ret
enter
jg
outsb
sbb
xor
insb
daa
fs
inc
div
xchg
fwait
and
test
dec
loop
push
fdiv
jb
inc
sbb
in
rcrb
out
lcall
mov
stos
lods
bound
fs
decl
ficomps
ja
inc
hlt
test
enter
daa
fcomp
xchg
into
add
push
cmp
adc
or
iret
jno
mov
sub
adc
fdiv
mov
out
sbb
movsb
xchg
pop
mov
add
jb
out
and
lea
pop
push
ret
add
cmp
push
xlat
fadds
jo
mov
mov
jg
sub
inc
or
sub
push
addr16
lahf
push
jns
jmp
mov
ljmp
imul
ds
mov
sub
das
lock
pusha
mov
xchg
aam
mov
sahf
ret
cmp
aam
int3
hlt
fisubrl
jmp
sahf
imul
and
ljmp
lret
inc
popf
adc
subb
fstpl
lcall
clc
pop
dec
das
mov
out
xchg
mov
mov
sbb
aam
nop
xchg
fimull
push
or
aaa
mov
imul
xor
repz
jnp
popf
jbe
xchg
jle
pushf
lods
xchg
and
inc
lods
add
inc
fs
call
fwait
std
cmpsl
popf
popf
fidivl
or
ficomps
xor
aam
xorl
out
push
cmp
fs
mov
cmp
addl
or
mov
or
xchg
sub
jnp
pop
arpl
hlt
fs
jne
imul
sbb
inc
xchg
adc
insb
dec
xchg
rcl
fcompl
inc
mov
ljmp
mov
mov
inc
mov
xchg
out
add
aaa
adc
call
xchg
ja
lods
int
das
mov
mov
lcall
cli
rcr
sub
movsl
iret
cmpsb
ds
imul
sbb
pop
pop
ss
mov
jbe
xorb
hlt
sbb
and
cs
mov
inc
jl
jns
jmp
inc
pop
pop
sbb
andb
out
and
xchg
cmp
pop
mov
jno
ret
aam
mov
aas
mov
inc
outsl
push
data16
push
mov
cmpsb
jmp
leave
lds
test
insl
in
adc
rcll
and
imul
xlat
sub
push
int3
xchg
in
loop
xor
fsts
scas
cmp
pop
stos
lock
sub
fldz
outsl
xchg
cli
cmp
sarl
lods
mov
xchg
sbb
ja
stos
push
nop
sub
sub
ljmp
sub
xor
loopne
addl
imul
xor
loopne
jge
fidivl
mov
mov
les
bnd
or
and
rcrb
mov
add
cbtw
and
cmp
es
jge
jmp
xorb
jne
cmp
pop
or
add
pusha
pushf
call
xor
inc
popf
adc
daa
add
movsb
cwtl
mov
imul
adc
out
test
mov
in
ljmp
mov
cmp
hlt
lret
push
test
pop
adc
rorb
cmp
aaa
dec
daa
and
sub
clc
dec
inc
shrl
out
stc
mov
jge
or
out
lods
fisubl
or
repz
scas
sbb
mov
jmp
rorl
mov
popa
dec
adc
cmp
sbb
xlat
pop
pop
dec
mov
sahf
sahf
stos
xchg
cmp
jg
push
pop
imul
das
stos
es
cwtl
jmp
rcll
sub
or
xchg
loop
fistpl
jns
mov
mov
push
loop
lahf
shll
cltd
cmpsb
pop
or
or
mov
orl
adc
icebp
repnz
pusha
fwait
mov
pop
inc
daa
repz
test
sbb
rorb
jl
out
addr16
test
cmp
xchg
popa
inc
sbb
mov
fimuls
xchg
sub
je
cld
lret
mov
jge
in
mov
shll
iret
xchg
push
rorl
jo
mov
in
push
sbb
dec
cmp
mov
jne
mov
pop
and
sbb
cltd
mov
loop
jmp
push
sbb
out
fs
push
test
nop
or
inc
cmpsb
call
sahf
sbb
das
stos
jmp
inc
in
inc
xchg
leave
jp
movhps
adc
cltd
pop
mov
mov
push
out
jecxz
out
imul
pop
call
xor
clc
xchg
adc
or
insb
sub
ss
das
pop
adc
push
cmp
popa
dec
cld
and
mov
jbe
pop
cmpsl
lock
fsubs
mov
lods
cmp
sti
gs
adc
inc
das
mov
lahf
jge
dec
test
inc
pop
enterw
adc
inc
mov
or
ljmp
daa
push
cmp
ss
rcr
aad
xchg
icebp
lcall
mov
mov
movsbl
stc
ss
add
sbb
out
jmp
jns
xor
daa
mov
pop
rcrl
in
cmp
dec
out
orb
leave
jo
sub
cmp
bound
bnd
xor
sub
inc
mov
enter
and
mov
dec
pop
fs
mov
sbb
das
arpl
push
arpl
and
lcall
out
popa
and
rcll
adc
mov
lods
jmp
mov
push
les
ds
cmp
aaa
add
test
pop
mov
scas
dec
cmpb
inc
cmp
mov
fidivs
rep
mov
lahf
fisubs
push
inc
pushf
lods
nop
xor
mov
in
xchg
sub
imul
xor
xchg
cmp
enter
push
add
push
stc
aas
mov
ret
xchg
adcl
ror
mov
or
and
shrl
cli
inc
call
clc
loope
jae
inc
mov
pushl
sub
sahf
xchg
jbe
push
mov
inc
or
dec
shlb
and
cmp
cmp
push
aam
mov
or
xchg
and
inc
mov
pop
mov
out
scas
dec
cltd
sbb
sbb
sbbl
sbb
push
daa
pusha
loop
lods
xchg
sarl
in
jae
pop
mov
or
push
stc
out
fdivs
adc
cmp
xlat
aas
cld
sbb
dec
sub
dec
xor
lock
dec
cld
in
add
mov
mov
cmc
jle
mov
jno
pop
mov
movb
sbb
iret
mov
cli
mov
scas
dec
adc
inc
sbb
repz
outsl
into
rcrb
mov
rol
insl
pop
pop
stos
repnz
xor
adc
sub
fwait
push
cld
add
fstpl
push
rorl
jecxz
lock
xor
push
lods
int3
xchg
int
push
je
mov
cwtl
dec
dec
stc
push
pop
and
mov
mov
jmp
pop
repnz
xchg
add
push
inc
bound
hlt
scas
adc
adc
dec
dec
in
mulb
shr
scas
xlat
rorl
lods
pop
jge
cmpsl
push
sbb
in
sub
mov
push
ss
jmp
pushf
into
add
add
scas
fcomps
pop
hlt
testb
pop
je
push
test
inc
cmc
repnz
pop
jo
cmpl
jecxz
test
aam
add
push
or
dec
pop
mov
gs
inc
insb
or
sti
cmc
and
mov
jl
nop
xor
mov
dec
int3
mov
arpl
and
and
sub
cmc
push
inc
xchg
xor
arpl
xor
fdivl
mov
mov
inc
sub
and
or
fidivrs
jmp
xchg
xor
aam
in
sahf
cmp
fwait
jecxz
movsl
orb
insb
push
jle
lea
sbb
stc
sub
jmp
in
cmp
add
push
ja
mov
sbb
jg
shl
jmp
test
dec
lods
jmp
inc
pop
lret
dec
aam
shlb
jnp
stos
ja
push
outsl
loop
in
sahf
daa
cmp
stos
pop
pop
pusha
loope
mov
jns
mov
xlat
dec
cmp
or
mov
jo
add
xorl
mov
insb
lret
xor
push
in
idivl
mov
xor
and
mov
test
cmc
out
jbe
in
cmp
jecxz
lods
mov
add
mov
imul
aad
push
push
cmp
scas
or
out
mov
enter
jge
dec
mov
aaa
fisttps
ficomps
stc
jmp
lods
lods
sbb
jne
sub
add
cmp
dec
stc
repz
popa
jl
and
out
loop
pop
push
fsubs
inc
push
push
rorl
push
daa
dec
xchg
mov
js
cmp
and
lock
add
push
mov
pop
fstp
add
mov
imul
cmp
mov
movsb
push
push
mov
ja
sub
sub
stos
sub
push
push
or
data16
stos
jae
imul
movsb
cld
out
sbb
js
adc
jg
push
cmp
lret
out
xchg
cmp
movsl
stc
adc
shrb
mov
sub
scas
stos
in
or
test
test
lock
adc
mov
leave
sbb
cmp
jp
pop
lods
mov
pop
aas
push
int3
movsb
inc
es
aas
inc
pusha
stc
and
inc
cltd
inc
dec
sbb
pop
roll
rol
xchg
jl
bound
in
and
xchg
out
add
jbe
mov
pop
xor
shl
out
mov
movsb
cwtl
pop
mov
or
in
sbb
add
out
cmp
push
insl
lea
outsb
cmp
rorl
test
inc
rol
push
test
and
xor
stos
mov
xchg
out
outsl
and
das
pop
cmp
mov
push
shrl
pop
mov
lret
pop
jle
inc
movsl
mov
incb
pop
mov
xchg
push
jmp
add
lret
dec
and
mov
mov
cmp
mov
xchg
or
pushf
push
imul
jns
xchg
sbb
or
dec
std
or
and
loopne
sbb
sub
in
fcom
stos
lock
jmp
or
mov
dec
cmp
frstor
ret
aaa
cmp
lock
add
or
lret
cmp
lret
sub
xor
sub
mov
out
ljmp
lods
push
xchg
lds
mov
test
cmp
push
sub
adcl
insb
push
sbb
sub
mov
jne
pop
rolb
ficomps
or
icebp
icebp
pop
lret
movsb
pop
ret
sbb
sub
sub
testl
adc
pop
sbb
dec
insl
int3
nop
cs
movsb
push
rcrb
scas
cmp
mov
inc
inc
cmpsb
pop
cltd
push
xchg
add
jmp
in
dec
jmp
push
imul
jo
jae
pop
movsb
push
aaa
mov
cmpsl
int
cmp
xor
or
inc
cmpsl
or
pop
and
mov
mov
cmp
mov
pop
cmp
xchg
mov
sbb
decl
leave
aad
xchg
lret
dec
sbb
jbe
push
sbb
or
mov
add
mov
add
popa
addr16
shlb
mov
test
or
add
clc
jecxz
sbb
add
call
xchg
icebp
cvtps2pd
daa
push
xor
nop
fsts
loop
setb
iret
dec
sbb
mov
cmp
das
add
cs
lret
mov
dec
ljmp
daa
sbb
mov
add
sbb
and
mov
or
outsl
pop
pop
pop
inc
jae
cwtl
dec
cli
gs
stc
shrb
in
xor
js
rolb
repz
jo
add
lock
outsl
out
in
jmp
cmpsl
dec
add
or
int3
xchg
sbb
inc
daa
sarb
pop
sub
out
pushf
mov
cmpsb
ljmp
sahf
mov
lods
pop
cltd
scas
inc
sub
dec
inc
aaa
pushf
dec
fildl
out
leave
mov
pop
inc
pop
cmc
loopne
out
inc
push
sub
icebp
nop
cltd
jns
iret
inc
xchg
push
les
mov
out
fs
fwait
mov
mov
jno
test
pop
lods
jns
adc
cmp
lcall
and
das
xor
xchg
rcl
es
mov
xchg
decb
lret
dec
out
fidivl
fimuls
jge
dec
dec
dec
sbb
popa
cmpb
inc
icebp
mov
das
arpl
hlt
lods
add
xor
push
cmc
pop
cmp
mov
and
pop
shlb
mov
stos
xchg
mov
outsb
hlt
jno
cmc
pop
daa
je
dec
mov
stc
sarb
and
lea
sub
sar
mov
notl
fistpl
jecxz
addb
xchg
fidivrl
aaa
in
out
sub
pop
sbb
aas
jno
fstps
sbbb
jmp
fcomps
sbb
nop
sub
mov
push
into
jmp
fsubrs
xchg
mov
ret
js
xchg
dec
xchg
adc
es
adcb
adc
pop
cmp
pop
push
fcomp
fwait
sbb
ja
mov
inc
mov
mov
in
outsl
ds
inc
aas
lea
xor
rolb
inc
jge
push
addr16
arpl
rcrb
mov
push
add
loop
xchg
cmp
and
pop
mov
test
sub
mov
lret
jmp
sub
loop
sub
dec
sub
movsl
push
sbb
xchg
pop
sbb
add
sti
inc
arpl
cltd
xchg
sbb
adc
pop
sahf
loopne
inc
push
sbb
sti
cwtl
cltd
inc
outsb
ljmp
xchg
div
idiv
outsl
rorb
ds
xor
jmp
jo
pop
jae
xchg
pop
add
and
mov
bound
inc
movsl
jl
test
fcmovne
mov
inc
rcrb
sub
clc
icebp
daa
ret
sbb
jl
sub
fimuls
pop
inc
fistpll
sub
test
xor
mov
addb
pusha
jl
cmp
adcl
movsl
call
jnp
xchg
movsl
or
aam
daa
jb
xchg
mov
jmp
shll
idivb
dec
pop
arpl
add
aam
sbbl
dec
int3
sbb
mov
scas
rol
js
add
push
cmc
mov
pop
outsb
mov
jg
arpl
push
pop
mov
mov
add
mov
mov
sti
mov
leave
fcoms
pop
icebp
dec
in
push
insb
or
mov
mov
push
sbb
mov
dec
sahf
ja
xchg
mov
lods
in
sub
jge
insl
push
xchg
and
inc
push
inc
test
rorb
jb
xchg
out
orl
push
cmp
arpl
loopne
add
xlat
pushf
test
outsl
neg
sub
sub
sub
or
out
push
out
sarb
jns
stos
ja
js
mov
add
jo
popa
cltd
xchg
cltd
mov
and
es
pop
lods
lock
mov
pop
adc
daa
ss
jge
cmp
or
clc
mov
inc
fldt
add
xor
orl
mov
mov
arpl
data16
and
fisubl
add
fwait
cltd
push
mov
jb
mov
dec
test
adcb
dec
fs
insb
rcrb
mov
push
mov
cmpsb
and
sahf
add
xchg
mov
jno
in
sub
mov
mov
je
cli
inc
sbbl
ja
popf
push
sub
mov
loop
xchg
int3
addl
imul
shlb
sti
mov
fnsave
test
iret
pop
insb
push
fndisi(8087
movsl
cltd
shrb
cmp
mov
add
inc
mov
lods
in
and
adc
sbb
bnd
sub
jecxz
xchg
jge
pushf
dec
aad
adcb
and
cmp
cld
lods
mov
and
mov
sbb
arpl
adc
test
mov
repz
cld
xor
out
gs
xor
lret
mov
inc
or
pop
add
dec
cmp
lock
pushf
cmpl
int3
std
int
jl
mov
pop
mov
daa
js
cli
lods
inc
inc
inc
enter
test
push
movsb
rolb
rcrl
out
aas
ds
repnz
repnz
leave
int3
fldl
cmpsb
cli
xchg
mov
pop
jl
sub
ljmp
push
popa
dec
or
xor
fmul
lea
and
fnsave
cmpl
xor
mov
pop
mov
cmp
push
sub
mov
cmc
mov
sbb
enter
mov
xchg
ljmp
arpl
push
js
xchg
lcall
cmp
out
imul
das
jle
push
push
sahf
adc
lcall
cmp
imul
shl
xchg
cmp
rorl
xchg
mov
add
lahf
dec
jle
cmp
jns
cmp
xlat
jae
sbb
mov
mov
sbb
xchg
jae
xchg
movsl
out
sub
imul
pop
bnd
jns
xchg
sbb
dec
mov
ljmp
adc
cmp
lods
add
mov
enter
jge
out
pusha
push
dec
ljmp
inc
or
or
js
push
adc
cld
popf
jg
cmp
inc
sbb
int
incl
insb
or
pop
or
movsl
daa
test
lcall
adc
mov
add
mov
jle
mov
call
out
cld
aad
hlt
pop
std
jmp
outsb
cmp
test
je
dec
sub
addr16
pop
xorb
lds
mov
mov
pop
mov
or
sahf
lea
push
dec
pop
rorl
outsb
mov
push
cmp
dec
push
ret
mov
hlt
push
cld
pop
sub
out
pop
in
xchg
leave
mov
jae
mov
xchg
inc
test
cmp
lret
sub
xchg
andb
and
sbb
adc
push
jle
in
mov
cmp
daa
pushf
or
daa
out
or
jbe
scas
mov
or
inc
gs
popa
add
fwait
pop
leave
sbb
push
pop
lods
adc
mov
gs
mov
sbb
sub
daa
or
aam
or
or
push
test
or
sti
mov
and
aam
push
mov
dec
and
add
in
xchg
cmpsl
fmul
mov
cmp
cmp
xchg
cmc
pop
popf
add
into
mov
sub
es
out
push
fmuls
push
daa
and
push
popa
lret
xchg
hlt
jne
cmp
push
cwtl
stos
push
loop
cli
xchg
cltd
xchg
in
hlt
cs
andl
mov
and
fdivp
das
test
lcall
sbb
adc
rcrl
stos
cltd
cmp
fwait
testb
imul
push
lods
jp
movsl
jnp
push
dec
mov
mov
mov
nop
pop
mov
lods
das
popa
popa
xchg
jp
loope
in
adc
xorl
mov
inc
jecxz
ret
sahf
test
lahf
or
pop
test
cs
pop
cmp
push
push
loop
test
aaa
lcall
ret
push
push
cld
insb
sub
aad
filds
dec
push
notb
movsl
inc
out
js
movsl
ja
pop
add
sub
out
push
xchg
fwait
xor
pusha
lods
or
push
jp
dec
mov
adc
xchg
in
and
lods
mov
imul
ja
xchg
sub
push
in
fstpt
and
aam
add
cmp
imul
add
cmpsb
mov
sarl
aaa
adc
mov
cmp
sub
inc
arpl
inc
add
idivl
fstps
jno
stc
roll
push
pushf
shufps
inc
sub
pop
test
adc
mov
sbb
mov
adcb
sub
out
out
pop
in
jns
add
scas
lods
mov
stos
and
inc
sub
push
stos
loopne
pop
dec
inc
outsl
sbb
sub
fcmove
bound
pushf
xchg
addr16
outsl
ds
xor
in
movsl
or
dec
xor
push
sarb
add
or
mov
lret
adcb
pop
sti
cmp
xchg
push
adc
int3
loop
sbb
mov
add
shl
ja
push
inc
jp
ja
shll
mov
add
in
pop
fwait
pushf
add
mov
in
mov
sbb
fwait
mov
pop
add
lret
loop
ljmp
inc
sub
stos
or
mov
pop
ja
mov
push
js
ljmp
loop
cmp
sti
or
sub
pop
jns
jg
jl
jmp
addl
addr16
and
xor
add
icebp
inc
add
or
jne
and
inc
test
jmp
scas
in
push
add
test
stc
xor
movsl
push
jae
shll
sti
xchg
inc
add
dec
repz
fs
les
mov
mov
inc
xchg
sbb
insl
mov
hlt
inc
ds
scas
pop
ret
outsl
push
subl
sti
ficompl
sub
add
push
das
push
enter
or
mov
mov
push
xchg
fstl
rorb
add
sbb
xchg
mov
ret
ret
cmp
add
jnp
inc
add
lea
push
imul
in
cmovnp
or
pop
hlt
pop
fstps
add
sub
xchg
mov
cmp
imul
shll
pop
pop
add
jmp
ss
movsl
mov
loope
hlt
je
xlat
mov
lret
xchg
xchg
pop
xchg
ret
mov
sub
test
cld
popf
call
das
sub
cmpsl
stos
inc
idivl
xorl
inc
jecxz
rcll
cli
mov
ret
sbb
and
test
aam
xchg
pushf
inc
in
mov
xchg
xor
dec
insl
add
out
lods
gs
mov
in
xchg
hlt
inc
orl
adc
push
mov
sbb
lock
dec
imul
cltd
push
pop
jbe
mov
add
mov
mov
jbe
mov
cltd
fmull
das
jmp
push
and
jmp
mov
mov
jo
test
sbb
pop
xchg
pop
aad
jno
outsb
mov
jo
inc
insb
leave
out
dec
adc
sbb
add
ret
xchg
fst
out
fsts
dec
pushf
xor
cmp
loopne
lock
xor
cld
lods
sarl
ss
add
int3
xchg
in
pop
stc
arpl
mov
lods
imul
in
and
or
cmp
xor
inc
xor
imul
inc
lret
jo
arpl
cs
stos
xor
movsb
in
into
inc
lods
mov
sbb
sub
jecxz
outsb
cld
and
stos
arpl
inc
aas
pop
leave
mov
push
dec
ltr
lods
inc
pop
jmp
mov
dec
icebp
testl
lods
shl
lds
jmp
adc
xor
sbb
loop
in
pop
sub
stos
mov
bound
pop
mov
fidivl
cwtl
outsb
inc
jnp
push
lret
push
loop
cmpsb
scas
dec
xchg
pop
das
das
dec
pushl
cmp
sub
testb
mov
mov
sub
jo
cmp
xchg
hlt
sub
rclb
dec
xor
mov
cld
pop
lea
adc
push
push
or
xchg
int3
loope
sahf
pop
dec
dec
jmp
push
jbe
and
mov
gs
fcompl
sbb
adc
aaa
pusha
xchg
pushf
mov
pop
sub
sbb
push
jl
xorb
stos
inc
inc
in
inc
sbb
in
in
xlat
cwtl
aad
sbb
cmc
mov
testl
mov
cmp
jge
and
add
inc
mov
dec
test
push
scas
into
mov
cmpsl
inc
mov
add
jg
mov
lods
inc
xchg
sbb
jmp
lahf
mov
mov
stc
iret
jp
popa
mov
je
sbb
cwtl
imul
into
lcall
sub
pop
test
sbb
jnp
rorb
das
jecxz
pop
rorb
lods
shrl
push
and
add
xchg
aaa
and
aad
clc
pop
add
jge
xor
testl
sti
inc
int3
and
dec
test
sub
pop
push
add
data16
xchg
mov
movsl
xchg
cmp
or
xchg
push
hlt
aaa
ljmp
push
leave
call
xchg
bound
jnp
jae
pop
gs
test
adc
jecxz
popa
mov
xor
mov
int
or
xchg
and
js
sbb
mov
ret
sub
adc
mov
and
icebp
push
pop
mov
dec
inc
or
dec
imul
adc
jecxz
daa
mov
mov
mov
popa
add
pop
jo
add
clc
fnop
mov
jno
daa
lret
lock
inc
adc
icebp
xchg
std
or
xchg
insb
test
xchg
into
push
jns
mov
lods
fwait
sbb
cwtl
xchg
inc
xchg
xchg
xor
sahf
rcll
push
out
stos
dec
popa
insb
sbb
jge
movsb
fwait
or
pop
mov
pushf
lahf
lock
push
sahf
mov
iret
dec
inc
jle
xchg
lods
loope
mov
notl
cli
lahf
mov
dec
imul
mov
add
lcall
cmp
bound
push
movsl
jp
lret
aam
pop
or
inc
xchg
ja
fstps
cmpsl
les
dec
ret
pop
gs
mov
stc
ljmp
push
cld
jbe
aad
push
push
rorl
xor
fmull
clc
fsubrl
push
scas
mov
cmp
dec
aaa
imul
mov
sbb
mov
lret
push
dec
rcll
inc
xchg
adc
pop
std
lock
inc
imul
jl
push
xchg
test
jg
mov
dec
lea
lcall
mov
mov
sub
and
clc
and
sub
jnp
lds
push
inc
jae
std
shrb
mov
repnz
sahf
sti
sarb
hlt
mov
scas
out
in
sbb
bound
xchg
push
mov
adc
push
jno
movsl
xchg
xor
or
xor
insb
or
and
inc
imull
mov
dec
dec
nop
icebp
cbtw
lret
push
pop
lock
and
scas
jle
scas
lods
jle
test
das
adc
mov
cmp
rorl
mov
repz
mov
jge
or
mov
push
adc
xchg
das
mov
inc
push
lea
push
repz
push
test
xchg
roll
repnz
jle
or
xchg
fistps
popa
ret
es
mov
mov
in
popl
pop
popa
andb
pop
push
push
in
insb
add
movsb
sbb
xchg
sub
scas
dec
xchg
cmpsl
push
push
jno
lock
hlt
sbb
xchg
test
cwtl
or
mov
repz
loope
xlat
pushf
std
aas
int
inc
jecxz
ffree
push
pop
add
daa
das
push
std
pop
push
pop
mov
push
mov
pop
and
inc
data16
clc
popa
int
xor
push
int3
rorl
loope
out
xlat
outsl
push
bsr
into
orl
jns
mov
and
jge
int3
stos
add
std
adc
mov
loop
movsl
test
lods
std
jmp
xor
push
outsl
pop
push
in
ffreep
mov
or
int
sti
push
repnz
fdivrl
adc
mov
inc
xor
in
lcall
mov
or
push
inc
jmp
imul
ffree
ljmp
int
popa
std
and
das
inc
rorl
inc
sbb
insb
mov
push
in
lahf
mov
mov
inc
lea
pop
ljmp
paddsb
or
lret
pop
inc
test
mov
cs
sbbb
std
mov
in
pop
cmp
outsl
shl
mov
push
push
push
mov
popa
add
mov
test
icebp
incl
jae
sbb
dec
push
push
stos
shl
add
sub
push
mov
pop
sbb
dec
int3
adc
inc
sub
xor
mov
enter
fisttpll
rorl
sbb
add
inc
into
stos
ja
std
dec
push
mov
lea
sub
pop
mov
jno
mov
fdivr
andl
scas
xor
adc
mov
sbb
icebp
imul
sub
cmp
ror
inc
jae
pop
dec
mov
data16
lret
xchg
or
mov
cli
fstpt
stos
adc
xchg
fisubrl
in
dec
inc
ja
mul
loopne
xor
repnz
jp
scas
test
stos
fimuls
imul
sbb
and
jecxz
cmpsb
outsl
jno
xor
lods
mov
add
mov
dec
dec
cmpsb
mov
sti
aaa
adc
jmp
out
sbb
ja
fwait
pop
movsb
mov
inc
jb
adc
push
sub
test
add
ds
inc
cmpsb
out
dec
lods
daa
in
mov
dec
xchg
shl
xchg
sbb
sub
mov
popa
lret
test
shrb
aas
inc
aaa
rcll
nop
jp
adc
movsb
ljmp
out
mov
stos
ja
subl
mov
adc
jge
into
mov
rolb
pushf
adc
add
push
jmp
fisttpll
jb
aad
sub
addr16
xchg
stos
ljmp
jnp
adc
into
jmp
xor
repz
data16
rcrb
rol
sub
jb
sub
xchg
ss
mov
push
lods
jo
repnz
cmp
jae
aad
mov
cs
mov
test
popl
pop
cld
xorl
add
dec
mov
cmp
fistpl
aaa
mov
inc
or
adcb
mov
sub
cld
jno
mov
pop
dec
dec
fisubs
sahf
repz
adc
in
fimuls
pop
lret
jae
xchg
cmp
jbe
mov
mov
jb
push
sbb
sub
mov
jno
sub
imul
mov
fsubl
lods
jge
sbb
clc
roll
in
and
inc
push
pop
sbb
push
mov
adc
cmp
out
or
int
mov
push
cwtl
shrb
out
add
add
pop
ja
ja
bound
lods
rorb
sbbb
adc
test
mov
out
adc
rclb
pop
cltd
icebp
inc
out
jg
adc
inc
inc
test
call
subb
pop
hlt
bound
add
shlb
gs
cs
pop
mov
popa
or
sarl
int3
jo
lods
adc
decb
sarl
dec
fsubs
mov
fs
push
xchg
and
inc
xchg
or
test
mov
mov
mov
xchg
xor
out
sbb
dec
fsts
push
dec
push
mov
cmpsl
jl
lds
cmp
cmp
movsl
sbb
push
mov
fdivs
sub
mov
cmc
cmp
test
inc
adc
xchg
stos
aas
sbb
aad
lods
xor
das
cmp
jg
lds
cmp
jl
pop
push
loop
sub
cmp
fsubp
loopne
sub
sbb
mov
jp
xor
icebp
or
mov
or
lret
cs
mov
jns
orl
sahf
cmp
mov
scas
hlt
cli
aad
sub
int3
and
mov
mov
pop
in
jno
lods
loopne
loopne
popa
lret
rcr
aam
sbb
pop
mov
xor
stc
test
ja
inc
or
mov
sub
pop
cs
or
popa
call
in
lea
mov
fidivrs
rolb
in
dec
inc
test
nop
dec
cmc
daa
adc
add
out
mov
push
enter
ficoml
pop
insb
insl
pop
adc
sbb
cmp
jl
mov
push
lcall
nop
xlat
js
fiadds
jmp
cs
repz
dec
mov
xor
loopne
ljmp
mov
pop
das
xchg
ljmp
push
xor
mov
sbb
dec
lods
push
lret
or
sbb
jmp
cmpsl
lret
popa
mov
jne
call
cmpsl
mov
outsb
push
cmp
dec
cmc
addr16
orb
shrl
fmull
mov
push
or
imul
inc
pop
outsb
push
jne
push
loop
cmovno
icebp
or
pushf
jp
popf
xchg
filds
rorl
and
mov
push
mov
mov
dec
mov
negl
aad
movsb
loope
rorl
sbb
sbb
mov
pusha
sbb
loopne
jge
lock
adc
sub
popf
pushf
mov
adc
mov
fs
cld
negb
xlat
iret
xor
xchg
adc
rorl
test
std
fisubl
insb
mov
out
or
test
mov
je
fiaddl
nop
clc
dec
jo
pop
mov
and
imul
imul
idivb
mov
ftst
leave
pop
and
out
sahf
lret
fnstenv
shlb
testl
ror
in
addr16
add
dec
insl
cmp
mov
pop
or
mov
stc
out
mov
and
mov
mov
jns
pop
fbld
insb
pop
push
dec
sbb
jg
ret
shrb
icebp
mov
pushf
or
add
out
andl
sarb
xor
pop
xor
in
dec
aaa
in
cwtl
jbe
pop
mov
sbb
fsubrs
shl
mov
aaa
orl
lret
je
xchg
mov
sbb
mov
enter
sub
adc
mov
dec
mov
roll
or
into
push
popf
mov
cmp
adc
or
fwait
aad
mov
sbb
lods
and
add
cmp
sbb
inc
inc
pushf
sahf
sarb
mov
dec
push
mov
mov
mov
pavgw
shl
dec
or
mov
std
cmpsb
arpl
lock
daa
mov
dec
addr16
mov
pop
mov
inc
pop
mov
cltd
roll
sub
loopne
adc
xor
and
cmpsl
mov
xlat
mov
xor
push
jmp
enter
cmpb
mov
dec
cmpsb
dec
xchg
sub
dec
clc
or
cmp
sbb
xor
aam
jp
add
dec
jbe
loopne
xchg
div
jne
negb
fwait
stos
cld
add
test
push
mov
arpl
sub
xor
mov
cmpsl
xchg
out
sub
pop
mov
fwait
sbb
rorl
push
mov
lock
ficoml
jo
or
inc
dec
mov
xor
fnstcw
fwait
ss
mov
lods
iret
insl
cwtl
test
icebp
sbb
aam
std
out
pop
xchg
sbb
jl
dec
add
adcl
mov
mov
call
mov
xchg
push
subl
in
xchg
arpl
cwtl
in
lret
fs
pop
rcll
les
test
pop
hlt
mov
mov
push
inc
xchg
mov
imul
sub
jno
xchg
push
and
pop
add
lcall
xlat
in
imul
dec
ret
mov
incl
sahf
mov
lahf
test
and
leave
push
insl
daa
pop
iret
pop
and
mov
and
pop
cmp
iret
cmp
jb
testl
jge
cli
xchg
pop
pop
adc
outsl
add
cltd
jp
pop
xor
jg
ret
imul
or
and
cli
mov
cmpsb
mov
lcall
push
dec
cmc
pop
push
addb
cld
pop
jns
jg
mov
inc
inc
test
lods
push
lret
es
hlt
pushf
jae
push
jmp
pop
repnz
dec
cwtl
adc
mov
xor
leave
cmp
sbb
movhps
sti
cmpsb
pop
repnz
repnz
push
lods
dec
orl
subl
add
loope
jge
xchg
fs
test
add
sub
loope
ss
addl
adc
mov
inc
or
push
divb
xor
ja
pop
stos
ljmp
and
push
mov
inc
pop
out
mov
pop
and
insl
mov
mov
hlt
and
aam
mov
enter
push
add
cmp
push
adc
xchg
js
in
sbb
or
loope
cmp
jne
aam
adc
cmc
adc
cli
fadds
ficoml
mov
jbe
fs
es
mov
jl
mov
pxor
jl
sub
adc
stc
dec
jbe
pop
out
add
movsl
dec
adc
sub
loop
inc
les
pop
xchg
out
stos
int
daa
aaa
xchg
xor
out
mov
push
cld
pop
push
aas
cmc
push
xor
jae
test
orb
sub
enter
fisubs
or
insb
in
jle
shll
cmp
push
mov
pop
insb
in
sub
and
orl
clc
mov
stc
push
sbb
jg
int
roll
lret
loopne
dec
movl
loope
or
and
stc
shlb
add
fcomps
shlb
cmp
gs
xchg
pop
imul
dec
dec
mov
lret
xor
pop
fcmovb
pop
sti
testb
jnp
inc
mov
xor
pop
jae
out
xor
icebp
ret
sub
outsl
inc
xor
xchg
xorl
adc
popl
or
cmp
jns
inc
xchg
mov
cmc
push
xor
add
dec
jno
cs
push
mov
xor
cmp
int
and
std
stos
add
movsl
fbstp
rcl
sub
mov
or
fmuls
pushf
mov
mov
push
aam
aaa
pop
jmp
jl
bound
inc
rclb
jbe
mov
sarb
jnp
push
aam
jle
add
js
pop
cmpsl
push
das
jg
and
int
or
or
add
mov
inc
dec
adc
call
icebp
test
sub
out
fst
xchg
xor
push
inc
or
pushf
add
mov
xchg
iret
jp
mov
repz
cmpsl
into
test
adc
push
cmpsl
cmp
add
lret
insl
sbb
data16
and
or
mov
scas
xchg
xchg
gs
adc
cmp
addr16
cmpsb
lcall
mov
xchg
push
sub
fiadds
cmp
out
in
cmp
dec
xchg
lods
cmp
les
or
or
inc
inc
pop
aaa
fcompl
lods
or
mov
sub
ds
addr16
aaa
add
stos
inc
xor
ficompl
popa
test
jno
lahf
adc
jge
movsl
mov
cmp
cmpl
jle
xchg
pop
mov
fistpl
xchg
test
cmp
xchg
cwtl
sbb
pop
push
pop
sbb
in
xlat
je
pop
sub
dec
loope
in
andb
es
out
xchg
in
popf
cli
insb
shl
es
leave
xor
iret
ds
pop
out
mov
and
or
xchg
push
mov
stos
ss
jmp
lcall
ljmp
or
xchg
cmp
adc
mov
sbb
repz
pop
sbb
bound
pop
push
mov
adc
dec
jp
std
arpl
sbb
in
xor
xchg
pop
dec
outsl
arpl
jecxz
outsl
ffree
adc
and
cmp
cmpsb
pop
inc
das
pop
test
mov
js
jmp
xor
mov
jle
pusha
xchg
sub
mov
sti
lahf
or
int
cli
andl
and
adc
sub
imul
rcr
inc
jge
in
out
icebp
arpl
mov
xchg
xchg
out
and
popa
les
shlb
out
cwtl
insb
stos
inc
inc
mov
xor
cmc
push
add
sub
into
mov
push
sub
test
mov
xchg
mov
xor
mov
push
push
and
insl
sub
adc
aam
adc
inc
mov
cmp
push
std
je
cmc
push
in
adc
lcall
mov
andl
decl
xor
cwtl
and
xchg
xchg
mov
xor
aas
mov
dec
cwtl
dec
stc
dec
cs
jle
xor
int3
xor
loop
pop
mov
hlt
xchg
std
jecxz
xor
pusha
lret
and
jo
mov
jb
aas
sub
nop
xchg
or
ret
push
add
ror
adc
fwait
cltd
ja
sbb
xorb
ret
or
xchg
cltd
add
push
jb
sub
push
int3
rorl
loopne
rol
pop
mov
cmp
pushl
testl
addr16
sub
sbb
adc
sahf
jp
out
mov
pop
cmp
mov
inc
push
sbb
xor
outsl
inc
mov
or
and
out
jae
sbb
mov
sbbl
fwait
ret
mov
fsubr
pop
jns
shr
pop
sbb
fldt
sbb
dec
mov
dec
mov
inc
sub
shrl
inc
aad
pop
push
sub
push
and
sbb
mov
add
add
mov
subl
mov
pop
pop
mov
and
push
or
pop
push
fucomp
or
mov
mov
movsb
sbb
mov
filds
fs
mov
lods
fwait
jmp
xchg
adc
adc
sbb
pop
mov
pusha
ret
rorb
fucomp
andl
cmp
mov
adc
nop
sbb
or
jecxz
out
cmpl
loop
pop
andb
push
or
or
pop
ljmp
pushf
mov
dec
rclb
mov
int
rcr
pop
fwait
push
outsl
leave
lahf
fisubrs
cltd
adc
mov
addr16
mov
sbb
std
or
ja
mov
xchg
xchg
ficompl
cmp
inc
sub
jp
test
in
add
imul
jl
dec
jb
test
mov
or
ficomps
fbld
mov
orl
in
fxch
lods
mov
mov
mov
sahf
mov
pop
fnstcw
and
mov
mov
aad
mov
sbb
out
push
cmpsl
fwait
loop,pn
adc
stc
bound
push
mov
dec
jp
in
in
js
int3
movsb
push
sbb
jp
clc
sahf
pop
inc
sub
shlb
jo
outsl
push
inc
outsb
xor
daa
mov
imul
je
cmp
sahf
cli
clc
or
mov
cmp
cwtl
ret
stos
fisubrs
mov
dec
jb
stc
pop
mov
into
dec
js
push
jg
outsl
in
imul
lret
cmp
gs
ret
mov
mov
sub
jge
and
inc
enter
sub
cmp
push
sbb
iret
add
pop
out
stos
cmovnp
mov
xchg
pop
lret
mov
insb
pop
or
sbb
inc
sbb
test
test
jno
lds
jno
xor
jb
arpl
xchg
jmp
sub
insl
inc
xorl
insb
mov
fstl
push
das
mov
add
fsubs
cltd
jle
andb
sbb
push
loop
shlb
sbb
xor
adc
insb
sarl
outsl
pop
cld
mov
jne
test
orl
or
int3
imul
jmp
roll
pop
fisubrs
and
mov
push
sbb
or
push
push
in
loope
push
rcrb
pop
dec
dec
sbb
xchg
movb
fnstenv
jmp
fstpt
fldpi
fadd
clc
fsubr
pushl
jb
js
mov
enter
xchg
nop
adc
dec
sbb
inc
scas
sbb
in
cli
mov
std
cli
test
in
xor
push
push
mov
mov
inc
aad
enter
icebp
aad
rcll
shrb
jae
in
sub
push
cli
pusha
dec
rol
fimull
in
and
jecxz
and
out
pop
or
orl
dec
or
push
les
scas
push
imul
fcmove
repnz
data16
sarb
scas
jecxz
sbb
daa
push
xchg
sub
enter
arpl
out
addl
gs
iret
mov
pop
mov
xchg
aaa
test
pop
cwtl
sbb
xchg
xchg
dec
test
leave
or
bound
mov
xlat
xchg
mov
pop
jecxz
loope
xchg
lret
xor
jae
xchg
xor
call
fldt
leave
jne
in
cmp
sbb
lret
xchg
or
fdivrl
nop
add
sbb
xor
into
dec
xchg
fisubl
testl
mov
ss
aaa
fldenv
add
mov
pop
pop
xchg
repnz
cmp
xor
imul
mov
imul
fstpl
sti
test
push
push
je
mov
mov
addr16
es
mov
lea
fldcw
rcll
dec
adc
cmp
aad
xor
ret
sub
mov
aam
mov
xchg
and
scas
mov
mov
ret
test
inc
gs
jnp
pushf
popa
lods
push
and
in
imul
out
scas
ficomps
ljmp
jne
cmp
mov
ds
adc
loope
or
pushf
add
sbb
aas
sub
xlat
pop
sbb
pop
mov
inc
movsl
popa
cmp
inc
cmp
mov
test
mov
push
cmc
mov
sub
pushf
lods
pusha
jg
fnstenv
popa
cmp
cld
arpl
cmp
pop
push
dec
cmp
jnp
mov
dec
xor
popa
jle
fsubrs
hlt
sbb
mov
mov
xor
jmp
or
mov
pushf
in
out
mov
jnp
sbb
icebp
push
xchg
aaa
out
cmc
lahf
mov
or
push
jbe
aas
mov
addr16
ret
scas
scas
popf
mov
stos
int3
rcrb
cmp
aas
movsb
and
push
inc
insb
adc
je
inc
cmc
jg
icebp
push
lret
xchg
ljmp
js
lods
pop
mov
ds
jno
cmpsl
bound
mov
cmp
inc
lods
push
aaa
add
imul
dec
add
sub
or
daa
pop
rolb
int3
scas
std
xcrypt-ctr
cmpsl
lahf
adc
pop
mov
cs
fwait
dec
call
or
xor
jmp
mov
push
hlt
mov
dec
fcompl
ljmp
lret
adc
mov
cmp
sub
cmp
adc
in
addr16
push
lods
rcr
test
int
or
xor
xor
mov
or
cmp
cltd
pop
divl
lcall
sub
and
lahf
pop
jno
lea
cmp
push
in
inc
push
push
sub
push
mov
fisubs
sub
insl
and
mov
xchg
lret
out
sub
xchg
dec
lods
xchg
lods
sti
adc
fldt
sbb
pushf
rclb
xchg
divb
mov
iret
loop
pop
xchg
sbb
or
gs
stc
push
mov
daa
sbb
sbb
pop
cmp
mov
pushf
push
scas
je
adc
xor
push
sub
push
or
sti
popa
addr16
movsl
or
fildll
cs
cmpsl
push
adc
mov
ja
xchg
test
arpl
add
divl
mov
mov
mov
push
cmp
int3
xor
ret
mov
dec
xor
push
addl
adc
imul
mov
cmp
mov
xchg
lret
sbb
stos
jbe
jmp
mov
ret
jecxz
into
fwait
push
or
sbb
fistpll
fs
cmp
call
mov
leave
push
cmp
pop
dec
inc
or
gs
pop
test
outsb
lods
push
movsb
and
mov
neg
mov
jb
inc
mov
call
pop
mov
adc
test
adc
fwait
mov
stos
hlt
mov
mov
mov
adc
jg
pop
fimull
add
and
inc
jle
pusha
sti
imulb
adcb
repnz
hlt
sub
push
cwtl
inc
sarb
jge
mov
push
into
jge
cmc
scas
sub
in
xor
sub
push
sbbb
adc
je
sbb
push
dec
leave
xlat
scas
out
pop
hlt
dec
frstor
add
sti
xchg
sub
pop
aaa
and
ficompl
and
sub
xchg
pop
test
data16
and
data16
lea
xor
dec
push
jmp
in
iret
jae
pop
sti
jle
std
test
aad
insb
gs
dec
mov
pop
and
pusha
push
add
mov
cld
push
push
popa
add
jno
push
mov
fistpl
mov
or
mov
incl
shrb
iret
lea
cmp
mov
lods
lock
cmpsb
fs
jb
inc
imull
out
ja
fistps
adc
mov
add
inc
adc
dec
into
dec
sbb
sbb
movsl
nop
mov
and
pop
xor
dec
push
aaa
rcr
fs
jnp
in
mov
push
pop
xchg
mov
das
cmpsb
rcrl
icebp
aaa
popa
lea
iret
sub
lods
or
cmp
cmpsb
push
ficoml
adc
jg
mov
or
jp
push
rolb
lods
repnz
adc
int
sbb
stc
mov
gs
inc
push
cmp
pop
js
xchg
ja
push
push
adc
add
push
ret
cmpsb
sahf
imul
cmp
mov
scas
out
push
push
xor
xchg
sbb
shrl
leave
fidivs
pop
sbb
rclb
scas
add
in
inc
sub
clc
jle
clc
adc
jl
pop
cmpb
loopne
jnp
outsl
xchg
dec
cmc
dec
out
mov
mov
sbb
adc
xor
adc
mov
call
add
insb
in
xor
inc
mov
lea
adc
xor
cmpsb
mov
je
push
jns
clc
mov
sti
loopne
inc
inc
lahf
pop
push
call
xor
xor
scas
push
insb
xor
ljmp
insl
mov
movsl
in
jmp
sbb
inc
sbb
dec
mov
daa
lret
lret
add
loope
add
enter
xchg
mov
inc
loope
out
cmp
rorl
or
jg
dec
cmpsl
fidivrs
aad
stc
cmp
inc
nop
outsb
xlat
mov
push
sbb
dec
in
add
test
mov
dec
or
pop
push
inc
arpl
or
mov
cmp
mov
adc
jmp
js
dec
mov
fcmovu
jns
xchg
lcall
jl,pn
push
test
mov
jb
jo
xchg
xchg
pop
xchg
call
pop
int3
mov
push
or
cmp
data16
sub
mov
inc
adc
lahf
gs
test
adc
daa
xor
int3
pop
into
mov
mov
ljmp
push
push
out
mov
fistpll
sub
ficoms
ret
pop
int
sub
xchg
cltd
bound
jle
mov
push
adc
lock
stos
cmp
jmp
and
mov
dec
or
mov
mov
sahf
fst
lret
jmp
or
jns
call
call
mov
lret
dec
xor
and
inc
js
xchg
scas
ja
lea
andb
shl
push
dec
or
lret
mov
pusha
incb
pop
outsb
in
cmp
outsl
arpl
and
push
popa
mov
das
mov
or
inc
add
ds
mov
arpl
pusha
push
mov
xchg
les
xchg
pop
mov
ss
mov
negl
push
inc
push
in
cmpsl
cmpsl
mov
inc
jnp
add
out
lcall
test
iret
cmp
push
dec
jle
inc
add
xchg
fistpl
dec
adc
or
scas
mov
stc
mov
outsl
pop
je
ss
out
add
pop
scas
jg
aaa
cltd
scas
mov
mov
jecxz
inc
sbb
mov
mov
roll
sub
test
push
push
pop
adc
stos
scas
sub
jo
adc
subl
sub
mov
shlb
stc
add
jecxz
mov
xor
shlb
popa
leave
rcll
rol
xor
and
scas
mov
mov
out
mov
cld
rcr
and
cmp
sahf
push
aas
or
sti
xor
pop
lahf
cltd
xchg
ljmp
ljmp
jge
push
add
mov
mov
inc
roll
fiadds
lods
insl
aam
adc
pop
push
inc
xchg
push
in
xor
xlat
das
and
stos
mov
clc
out
nop
add
mov
inc
outsl
arpl
pop
push
cwtl
negl
mov
cltd
gs
out
sbbb
ds
pop
loopne
jnp
adc
xchg
dec
cmc
scas
cmp
mov
imul
mov
fldt
pop
inc
or
les
pop
pop
mov
sub
add
out
std
scas
mov
pop
xchg
fwait
les
test
push
imul
push
cs
shll
mov
popf
cmp
lcall
sbb
or
push
adc
ja
fisubrs
stos
add
dec
imul
aaa
push
insl
fcmovnb
nop
test
and
sbb
or
pop
addr16
repnz
and
pop
ljmp
sahf
in
adc
pusha
xor
push
or
push
sbb
mov
stos
cmp
inc
inc
xor
mov
pop
insl
cmc
pop
sbb
adc
and
subb
rol
and
jo
dec
push
movl
loope
inc
sub
shr
fsts
in
push
cwtl
decl
xchg
cmc
imul
and
push
decb
orb
gs
test
push
add
inc
sbb
mov
stos
pop
call
adcb
out
sub
imul
mov
scas
shrl
arpl
inc
xor
xor
mov
sub
pop
dec
aam
psrad
mov
xlat
and
loope
fdivrl
sbb
pusha
cmp
outsb
fstl
cwtl
xorb
shll
add
fisttps
inc
push
adc
push
push
lods
shr
dec
add
push
iret
push
mov
cmc
mov
adc
pop
or
fsubl
cmp
mov
test
sti
outsb
pushf
and
mov
and
bound
test
jge
inc
stos
popf
mov
sbb
sti
mov
imul
xchg
neg
inc
xchg
push
push
shl
xchg
jns
ja
dec
jne
adc
adc
pop
cmpsb
gs
leave
mov
jmp
sbb
inc
mov
jl
mov
js
mov
pop
hlt
fs
lret
mov
mov
push
std
es
mov
ret
icebp
mov
or
adcb
add
jnp
outsb
pop
mov
loopne
sub
inc
pop
insl
inc
mov
sub
mov
jo,pt
jp
dec
decl
cwtl
pop
repnz
sub
enter
xchg
js
sub
int3
sbb
divb
hlt
jae
pushf
mov
mov
sub
mov
lcall
and
aas
out
dec
aas
cld
call
mov
call
test
xchg
mov
mov
testb
or
adc
test
sbb
push
push
push
test
lcall
out
fninit
lcall
jnp
add
add
xor
leave
ds
sbb
daa
and
cs
xchg
andl
add
xor
mov
orb
push
push
cwtl
loop
push
mov
mov
adc
sbbl
mov
mov
pop
jae
xchg
push
jno
test
test
sbb
mov
mov
mov
inc
mov
or
mov
out
jae
shll
push
adc
inc
lock
inc
int3
js
jns
lret
addl
jecxz
cld
jbe
mov
jnp
push
adc
int3
mov
shrl
fcmovnu
insb
pop
sbb
out
mov
xchg
jg
dec
jge
dec
adc
sti
ret
or
xor
je
sbb
insl
shrb
dec
add
in
into
fiadds
add
stc
sbb
sub
insb
add
jb
push
lods
mov
clc
xchg
stc
mov
mov
xchg
fmul
push
sub
dec
and
add
nop
add
sbb
mov
xor
adc
repnz
sub
idivb
and
fsubrs
lret
popa
sbb
mov
cwtl
loope
popl
jo
loopne
cmpsl
inc
cmp
lret
jae
sahf
push
jne
pop
orb
pop
rcrl
pop
sti
sub
ja
fldenv
lahf
call
out
xor
dec
inc
and
addr16
adc
add
andb
sbb
jo
or
or
add
lcall
pop
call
into
loop
or
addr16
mov
mov
in
pusha
aam
xchg
cmp
mov
xchg
push
lcall
and
add
mov
ret
xrelease
xchg
mov
shlb
mov
cmp
fwait
cmp
mov
iret
jmp
pop
sbb
jg
clc
jl
sbb
loope
push
mov
jns
int
sarb
xchg
push
movsb
fadds
dec
push
ds
shll
incb
addr16
loop
sub
and
xchg
add
into
iret
lret
and
jge
sub
jns
jl
xor
mov
shlb
mov
pushl
xchg
sarl
mov
es
jne
std
mov
pop
adc
fcomp
in
lcall
loope
add
pop
cli
sub
inc
mov
sub
out
xchg
pop
adc
cmp
scas
and
xchg
or
lds
bound
jmp
faddl
bound
mov
aam
popf
lret
xchg
pushf
sbb
lahf
cmp
xchg
popa
lret
adc
lahf
xchg
cli
jns
test
push
frstor
and
test
mov
movl
lods
push
mov
clc
dec
inc
push
not
js
push
inc
out
mov
push
rorb
adc
fst
addr16
popa
fimull
ds
cs
ss
cwtl
mov
pushf
push
shr
movsl
int
mov
adc
aam
push
mov
push
adc
adc
or
jp
daa
mov
lods
sub
mov
sbb
and
mov
cmp
ror
cmc
ret
mov
add
lahf
ja
sbb
push
pushf
pop
mov
or
xor
add
sub
cmp
mov
or
ds
ds
es
adc
cmc
xchg
mov
gs
dec
mov
in
fiaddl
fwait
in
xchg
mov
mov
dec
sub
jge
xorb
fldcw
mov
jb
pop
jbe
xor
xchg
push
xchg
adc
imulb
in
lods
add
sbb
stc
xorl
xchg
xor
lcall
sub
ds
pop
or
xor
xchg
aad
enter
cmp
xchg
mov
movsl
icebp
jge
cmc
das
xchg
lods
jl
repnz
enter
fsubrl
int3
mov
sbb
repz
add
daa
mov
pop
adcb
inc
popa
lcall
jns
inc
jl
int
icebp
push
pop
fmull
lret
and
mov
outsb
int
xchg
mov
aas
in
das
jae
cmp
and
or
or
xlat
sbb
jno
cmp
jb
outsb
adc
icebp
stos
cmpb
adcl
jno
out
xchg
push
mov
add
inc
sub
rolb
call
enter
data16
xchg
and
iret
int3
cmpl
sbb
lahf
loope
or
bound
test
and
in
pushf
repnz
les
mov
jp
fwait
pop
cmp
fsts
mov
test
mov
fcmovbe
jg
add
push
in
push
test
xlat
adc
out
jb
les
mov
fildl
push
xchg
ret
mov
xor
mov
je
outsb
mov
pop
aad
clc
jle
jae
enter
push
add
cmp
cmpsl
mov
fdivs
das
sub
js
call
jecxz
popf
xor
mov
shrb
pop
jmp
sbb
add
js
add
sbb
ficoms
lock
enter
dec
and
jae
jle
arpl
js
push
popa
in
pop
adc
movsl
mov
or
pop
push
or
sub
mov
mov
xorps
dec
xchg
push
mov
sub
pusha
dec
sub
shl
mov
in
sub
push
imul
cli
push
pop
and
mov
mov
sbb
pusha
imul
pop
pop
fidivs
in
dec
aas
or
xor
ret
or
jecxz
and
inc
lcall
in
js
subl
and
push
jo
cmc
mov
mov
lret
cltd
lret
inc
sub
nop
jnp
lret
subl
mov
xchg
inc
mov
jle
jmp
push
push
fdivl
in
stos
test
gs
xchg
sbb
movsw
icebp
dec
test
xlat
out
jle
std
fstps
or
aam
pop
xchg
ficomps
in
push
fsubr
cltd
dec
mov
pop
outsb
or
in
sti
aas
mov
cld
outsl
jb
imul
ficompl
mov
xor
mov
in
dec
out
xor
dec
mov
inc
sbb
int3
dec
mov
repnz
xor
call
push
les
pop
pop
push
jbe,pt
jg
out
and
in
ds
hlt
push
pop
cltd
outsb
les
test
in
clc
pop
test
jg
test
jbe
xchg
mov
call
mov
cmpsb
mov
out
fistps
lock
arpl
aaa
push
mov
outsl
dec
adc
push
lods
jl
lret
push
sbb
popa
test
jne
lods
push
movsl
mov
clc
clc
dec
js
sub
icebp
sti
jno
jbe
ljmp
cltd
mov
jne
sbbl
xchg
pop
fs
daa
cmp
inc
adc
mov
and
adc
dec
push
mov
pop
pop
xchg
cli
sbb
daa
mov
int
push
xlat
add
cmp
cmpsl
jmp
enter
mov
fwait
inc
add
sbbl
cmp
sub
sub
dec
xchg
es
es
xor
pop
cs
xchg
and
sbb
dec
mov
pop
push
sbb
jmp
cmc
push
sbb
scas
mov
adc
xchg
aam
push
push
pop
insb
negb
mov
push
mov
lret
push
data16
push
mov
and
lea
jp
into
dec
cli
sbb
shll
cmp
rcrl
inc
jg
popf
mulb
ja
fldcw
sti
js
xchg
mov
fdivrs
in
push
rcrb
sub
enter
push
or
shll
clc
sbb
mov
sbb
mov
addr16
inc
das
icebp
test
dec
xchg
push
mov
sbbl
shlb
sti
ret
scas
jecxz
dec
dec
mov
insb
test
ja
push
fcomp
leave
sbb
test
xchg
nop
mov
aad
sbb
popf
in
out
push
sub
mov
or
je
add
add
jb
pushf
mov
dec
subl
pushf
call
push
dec
imulb
push
inc
dec
mov
addr16
loopne
lods
sti
inc
addb
sbb
or
das
and
mov
imul
fwait
daa
in
sbb
ret
dec
xor
xor
or
enter
shrl
mov
call
push
push
cwtl
imul
cmp
pop
push
add
mov
ret
dec
sti
or
push
stc
jge
mov
mov
lds
loopne
sub
out
icebp
das
jl
and
lods
or
jae
out
sahf
push
sub
inc
push
mov
cld
data16
xor
repnz
mov
ss
aad
or
inc
or
fimull
dec
pushf
mov
sahf
fwait
insb
pop
hlt
and
fistps
in
mov
pop
and
mov
mov
testl
xor
mov
out
and
add
xchg
addr16
je
push
and
andl
mov
mov
cmpsl
add
js
xor
inc
sub
cmp
inc
into
popf
test
add
add
xchg
addr16
fldl
mov
fiaddl
xchg
pop
sti
mov
inc
and
pop
sub
mov
xchg
shrl
jge
pop
mov
clc
fnsave
xchg
jnp
jg
js
xchg
mov
or
aas
cmc
xchg
inc
pop
clc
pop
loop
pop
xlat
jmp
jmp
ret
jae
and
aam
sbb
clc
cmpsl
mov
imul
sbb
xor
cmp
push
std
psubw
jbe,pn
lcall
les
test
xchg
push
fnstenv
xchg
cmp
scas
and
jbe
xor
xchg
xor
jle
mov
pop
adc
add
fisubl
or
std
cltd
push
and
or
xchg
minps
int3
and
jo
test
int3
loopne
out
push
js
or
sbb
mov
int
das
xchg
jmp
mov
repz
push
xor
push
jb
in
shlb
jno
arpl
leave
test
mov
pop
xor
inc
xor
out
pushf
pop
jno
arpl
adc
dec
inc
outsb
adcb
mov
andb
xor
jge
adc
inc
mov
test
pop
push
xlat
mov
icebp
mov
mov
adc
or
add
lea
xor
fstps
push
dec
cmp
fs
dec
xlat
scas
pop
push
lret
fsubs
xchg
push
jmp
jnp
push
enter
out
out
outsl
les
cmp
sarl
xor
mov
jp
mov
jne
sub
xor
repnz
fbld
xor
xlat
sub
add
fadds
mov
out
xor
daa
jb
lcall
push
iret
adc
sbb
push
jg
push
imul
sub
dec
rorb
sub
cmp
jo
fidivrs
inc
and
hlt
fbstp
repz
xchg
pop
shll
outsb
mov
out
mov
lods
loop
inc
pop
iret
jp
stc
sub
push
pop
jb
fnclex
std
pusha
mov
push
sbb
adcl
imul
pushf
ss
xor
ret
jo
cli
cli
stos
xchg
shrl
clc
subl
out
fstps
adc
dec
sti
jecxz
add
cmpsl
shlb
lret
pop
xor
in
mov
sub
adc
movsb
dec
and
sub
in
mul
pop
scas
mov
repnz
inc
std
xchg
pop
sbb
in
in
dec
xor
cmc
stc
sarl
lds
pop
mov
pop
add
aaa
mov
dec
stc
into
add
and
pop
imulb
push
inc
xchg
cmc
out
cmp
xchg
dec
add
shl
adc
cmp
neg
lock
xor
inc
es
fnstcw
mov
aas
sbb
inc
imul
mov
ds
and
sub
data16
int
mov
xorb
push
out
lret
cmp
cmp
inc
push
pop
xor
inc
clc
push
fs
lods
pop
jge
mov
fcmove
addr16
sbb
jnp
adc
ret
dec
cmp
mov
jecxz
sub
int3
pop
test
push
or
das
xchg
aad
cld
pop
sbbb
pop
lahf
pop
scas
out
out
fsubs
adc
add
ret
push
xor
jle
xchg
jnp
cmc
dec
and
dec
in
icebp
pop
and
ss
pop
loopne
jns
cli
pop
mov
push
loope
push
xchg
jae
cmpsl
inc
and
ret
rclb
jmp
pop
ljmp
pop
pusha
inc
xchg
xor
sub
fdivrs
lea
nop
into
sbbl
sbb
insl
es
aam
cmp
movsb
in
fucomp
jmp
jle
imul
mov
mov
dec
movsb
xchg
pushf
xchg
adc
xchg
outsb
fnstcw
fwait
mov
mov
shr
jo
arpl
fsubrs
call
or
sbb
nop
cmpsl
inc
outsl
call
jns
fcomps
inc
ja
insb
jno
sarb
test
in
es
sbb
sub
xchg
cmp
sbb
out
sbb
jb
jnp
fisubrl
push
inc
cmp
and
push
dec
sbb
jno
loope
add
and
lock
mov
adc
testb
out
cs
mov
aam
in
scas
pop
into
mov
out
cld
mov
fists
out
repz
lock
sub
cltd
pop
pop
cmp
jae
cmp
lahf
fsubl
adc
push
mov
in
int3
iret
test
imul
mov
add
icebp
stc
aad
les
push
cmp
and
jecxz
and
pop
or
sub
imul
ja
and
out
scas
scas
push
pusha
movsl
std
inc
aas
xchg
sbb
mov
xchg
call
nop
outsb
aaa
ret
add
mov
daa
fmull
mov
jmp
icebp
pop
or
sub
cs
enter
cmp
mov
lock
adc
cli
aam
les
sub
push
push
mov
xchg
inc
ds
or
rclb
lret
pop
mov
mov
int3
push
push
dec
das
sub
mov
loop
leave
jns
add
add
mov
add
add
mov
mov
add
jecxz
or
and
jbe
mov
movsb
into
enter
push
shrl
xchg
ljmp
ffreep
dec
mov
scas
or
mov
aad
sbb
loope
dec
lcall
out
push
pusha
cmp
lods
lods
call
lahf
pop
mov
aad
loop
loope
ss
cmp
nop
push
shr
ljmp
inc
or
mov
lret
sbb
sbb
inc
jne
leave
inc
xchg
cwtl
lock
stc
daa
jge
mov
dec
xchg
jbe
out
ficomps
jb
fildl
push
jg
xor
adc
and
xor
cwtl
mov
dec
lret
cmp
add
cld
pop
repnz
xorb
xchg
adc
xlat
fs
and
mov
jo
mov
mull
sub
dec
push
lret
bound
in
xor
pop
std
pop
ss
push
sub
mov
xchg
orb
sbb
sub
add
sbb
scas
mov
imul
cmp
xor
lret
adc
mov
inc
sub
sub
cmp
or
push
push
imul
int3
cmpsb
sub
push
xchg
inc
push
ss
int
mov
push
push
aaa
pop
call
pop
popa
xor
xor
push
xor
scas
xor
shll
cmp
sub
jnp
ficomps
ud1
inc
pop
cli
mov
cwtl
pop
jmp
mov
adc
loope
push
cmp
cmp
cmpsl
repnz
ja
xchg
mov
xchg
mov
es
push
add
stos
or
test
mull
insl
xor
and
dec
add
sub
leave
lods
outsb
mov
repnz
shl
mov
in
xchg
sub
sbb
sbb
inc
in
xchg
fs
add
int3
add
push
and
adc
mov
cmp
sub
xor
rorl
int
xchg
jecxz
jno
lods
jp
das
and
adc
jb
imul
shlb
cmpsb
lods
adc
adc
faddl
fcmovu
fisubl
add
xchg
fwait
inc
jo
popf
rclb
sarb
jl
imul
dec
adc
mov
stos
xor
cmp
cmpsl
cli
add
xor
jnp
push
or
dec
add
ret
aas
insb
das
jb
sub
test
adc
adc
sub
or
int3
das
dec
cltd
lea
mov
pop
mov
outsl
add
mov
xor
pop
repz
cmp
stos
sbb
stos
dec
in
cmp
leave
fnstcw
cmp
or
add
fsub
mov
cmp
std
enter
movsb
std
nop
sub
out
movsl
cmp
enter
jb
jle
icebp
je
daa
pop
xchg
cmp
push
insb
and
mov
js
xorl
int
movsb
sbb
mov
push
mov
into
xchg
iret
loope
incb
loope
es
cs
adc
stos
mov
cld
shl
cmp
mov
push
in
inc
test
cwtl
jp
cmpb
test
push
jl
fs
mov
mov
call
ss
xor
lret
xor
xor
lock
cltd
jnp
ret
push
add
jne
jecxz
mov
mov
iret
adc
inc
mov
inc
and
pop
push
adc
xor
dec
cltd
add
ficompl
push
test
jnp
xor
icebp
js
push
inc
ret
xchg
loop
jle
fucomp
mov
jb
or
icebp
shll
getsec
fnstsw
add
mov
data16
fwait
xchg
sub
sti
mov
fsubrp
xor
adc
ficoms
repnz
pop
dec
dec
dec
xor
lock
add
bound
aad
cmp
icebp
bound
dec
pop
and
ljmp
mov
sub
mull
xor
popf
in
lds
push
sbb
dec
xor
mov
mov
push
jbe
icebp
ficoms
call
not
xchg
adc
loopne
dec
mov
movsb
mov
xchg
or
scas
adc
fstpl
xor
jle
mov
sbb
negb
adc
adc
inc
cmp
popa
sbb
add
ja
inc
cmpsl
mov
mov
cmp
mov
jbe
jmp
imul
sub
dec
dec
sbb
xor
dec
inc
mov
push
dec
push
ja
add
pop
xor
xchg
sahf
movsb
gs
icebp
aam
outsl
push
or
sbb
das
cmp
dec
xchg
jbe
jae
sbb
ljmp
sahf
cmp
frstor
cmp
fdivrs
repz
jb
dec
scas
ficoml
fsubrp
mov
sahf
add
mov
lds
out
jecxz
cmp
jb
rolb
nop
pop
pop
mov
pop
cmp
xor
arpl
stos
mov
ret
mov
sbb
movsl
or
sub
in
out
mov
inc
push
xchg
imulb
imul
xchg
fnstenv
mov
mov
cmp
cli
or
pop
arpl
mov
out
dec
jnp
shll
in
mov
push
aas
and
faddl
mov
or
in
push
insb
repz
jae
xchg
push
lods
sbb
jmp
aam
mov
add
in
neg
outsl
in
sbb
pop
aad
inc
xchg
addl
clc
aad
inc
adc
mov
xchg
sti
lcall
mov
inc
jno
jno
cld
xchg
pusha
adc
jmp
inc
mov
movsl
shl
jnp
je
pusha
pop
sub
mov
lds
ja
jp
jnp
cmc
xchg
mov
mov
dec
popfw
repnz
fildll
fwait
sbbb
pop
ljmp
cmc
xchg
pop
add
pop
dec
out
mov
out
dec
add
loop
ret
pop
sbb
sbb
jl
cmp
lcall
pop
int
arpl
or
mov
icebp
mov
push
pop
loopne
div
ss
ss
data16
cmp
ljmp
push
shl
fdivl
test
clc
in
cmp
xor
xchg
addr16
aam
inc
jge
jns
pop
sbb
loope
dec
outsb
xchg
xchg
mov
into
sub
mov
push
cmp
cmp
cwtl
adc
add
push
sub
imul
shrb
data16
mov
and
call
inc
push
stos
test
push
sbb
push
in
or
mov
lock
ds
out
jne
fsubr
jnp
inc
mov
sbbb
imul
mov
sub
jg
push
and
pop
mov
in
jo
lcall
mov
pop
shl
sub
bound
push
es
jg
int
in
or
cmpl
inc
cmp
jle
stos
popf
jno
in
aam
sbb
and
clc
xchg
pusha
rcrb
cmp
addr16
and
cltd
sbb
cmp
ja
and
test
add
sbb
cld
icebp
incl
jns
and
jg
push
and
cmp
xchg
pop
mov
repz
adc
cmp
xchg
lcall
mov
outsb
outsb
xchg
jl
dec
jb
cmp
dec
ret
adc
inc
out
jg
addr16
sbb
push
push
shr
sarb
fdivrl
sub
je
scas
mov
orl
mov
in
mov
ds
out
pop
jnp
jb
pop
pop
test
push
push
mov
adc
xchg
adc
roll
sub
popf
xor
addr16
push
pop
cmp
sbb
xor
in
aam
movsb
xor
sbb
rorl
shlb
lret
imul
or
ss
mov
mov
dec
popf
cltd
imul
and
or
pop
out
das
shlb
xor
push
ret
enter
scas
jle
pop
pop
inc
sti
jno
and
lods
xlat
out
frstor
cli
cmp
xchg
cmp
es
mov
fcomps
adc
fwait
in
popf
adc
jle
ljmp
test
push
jb
fisubrs
sbb
mov
rolb
movsb
cltd
test
mov
mov
clc
stc
pop
or
fnstsw
jle
add
movsb
and
sbb
pop
inc
inc
idivl
addr16
sbb
out
loope
imul
mov
ja
mov
push
xor
dec
pop
xor
imul
xor
add
addr16
or
hlt
sarb
pop
loopne
dec
mov
shlb
xor
inc
dec
xor
sahf
out
rcll
pop
xchg
lahf
add
cmp
sar
jge
push
xlat
rcr
pop
ret
mov
sub
add
fisttpl
shrl
fwait
outsl
dec
or
sbb
ror
mov
mov
loopne
das
xchg
mov
jb
xor
rcll
sub
mov
bnd
xchg
aad
imul
aam
lock
mov
jge
mov
sbb
mov
cmp
std
es
adc
jno
and
pop
rorl
dec
xlat
or
jg
push
cld
jbe
mov
mov
mov
fisubrs
dec
stc
pop
xchg
pop
sbb
popf
daa
sub
pop
shrb
ja
stos
in
mov
test
clc
sbb
sub
push
jmp
sbb
push
push
and
adc
andl
insl
leave
cltd
mov
sti
add
scas
mov
inc
lcall
popa
jl
and
stc
adc
pop
or
or
lods
xor
pop
push
ja
inc
mov
xlat
and
jmp
xor
jo
or
leave
cs
testl
sbb
cltd
loope
es
fisubs
rcr
outsl
cmc
bound
and
repz
aaa
dec
addr16
mov
aaa
andl
xchg
into
aas
mov
xchg
mov
cmp
or
shrl
jp
and
imul
push
cmp
negl
aas
in
test
insl
stc
int3
ret
fistpll
das
clc
xor
pop
sahf
outsb
sahf
arpl
data16
mov
mov
sbb
dec
mov
and
pop
mov
xlat
mov
aam
pop
sub
jo
mov
rcll
xchg
mov
das
pop
fstp
add
or
cld
inc
add
out
xchg
mov
ficoms
pop
xchg
dec
aad
rolb
mov
push
pop
cmp
lret
call
dec
insb
sbb
xchg
mov
sbb
push
add
mov
pusha
cmp
int3
push
jb
jae
inc
and
sub
dec
inc
cmp
cli
loop
push
sbb
sbb
xor
ret
pop
jmp
inc
scas
dec
inc
xlat
pop
mov
jecxz
movl
cli
daa
jno
sbb
insl
inc
add
push
cmp
and
jmp
sbb
push
mov
psubd
dec
or
mov
movsb
jae
in
dec
bound
loope
lahf
ljmp
outsl
ss
pushf
pop
pop
or
mov
inc
xchg
ret
lock
adc
insl
add
sbb
pop
cmovle
in
fdivrl
xor
in
mov
and
add
daa
loop
es
fwait
jecxz
push
clc
fistpl
xchg
shll
xchg
shlb
mov
sbb
add
or
jnp
movsb
and
mov
xor
loop
and
loop
sub
and
dec
imul
leave
sub
mov
xchg
add
inc
fistl
mov
cmpsb
xor
add
cwtl
push
mov
aas
sbb
xchg
adc
iret
mov
shll
xor
icebp
lds
arpl
rcll
out
rol
mov
sar
mov
das
es
lret
enter
imul
movsl
or
insl
fcmovu
test
repnz
sub
inc
add
push
ret
lea
cwtl
pop
add
cmp
pop
mov
fldcw
clc
pop
or
jo
aaa
pop
jns
scas
dec
jg
mov
push
std
jb
mov
repnz
pop
dec
lret
adc
enter
jo
add
ss
and
in
push
sbb
or
int
mov
cmp
rolb
leave
loope
sub
data16
addr16
mov
dec
jge
ret
test
mov
mov
lcall
cltd
fstpl
sub
mov
ja
fisubs
out
mov
jno
mov
filds
mov
pop
ret
mov
and
mov
inc
xchg
je
or
mov
scas
and
dec
loop
imul
es
fildl
das
sbb
dec
push
push
dec
push
jnp
mov
push
xor
and
bound
sbb
xor
mov
outsl
push
faddl
adc
sahf
xchg
add
push
popf
and
lret
int
in
mov
sbb
lods
xchg
std
in
add
mov
xor
xchg
stc
sarl
and
jns
mov
in
xchg
add
fnsave
in
dec
ret
daa
xchg
lret
sahf
out
sbb
inc
lea
loopne
push
pop
mov
fcoml
mov
stos
push
lods
cs
cmpsb
mov
loop
cmp
aas
dec
add
test
push
scas
outsl
pushf
scas
push
ficoms
aad
or
cmc
push
dec
pop
int3
out
ret
jnp
cwtl
pop
jg
jecxz
mov
lock
ds
out
sbb
mov
mov
adc
stos
adc
dec
dec
stos
movsl
les
xchg
xchg
cmp
sbb
mov
sti
ss
cmp
daa
mov
mov
lret
xor
adc
sub
in
dec
rclb
push
jbe
mov
and
into
iret
dec
inc
stos
adc
and
in
push
xor
inc
jns
dec
lahf
mov
sbbb
jns
lcall
fisttpl
ds
in
fildll
jns
jl
insb
lret
push
test
gs
xchg
stos
push
addb
or
and
jno
inc
push
js
enter
xchg
or
aas
das
das
push
addl
ret
pop
ds
sarl
mov
mov
fsubs
dec
dec
jp
xchg
jge
pop
std
jecxz
fbld
or
lahf
outsl
dec
iret
sub
out
sbb
mov
notl
push
in
sti
lcall
rorb
je
rcrl
hlt
repz
or
cltd
xchg
hlt
sahf
add
add
aad
repnz
mov
sub
add
add
fiadds
add
andb
push
bound
or
pop
fmull
dec
mov
fistpll
ds
dec
cli
pop
in
aaa
inc
jo
add
fs
cmpsl
lds
aas
push
or
jg
rcrl
inc
insl
mov
call
stc
mov
jne
cmpl
rcrb
xor
aas
sbb
jg
arpl
cmp
dec
scas
jecxz
movsb
sub
inc
stos
xor
mov
add
mov
xchg
rcl
ds
notl
xor
and
mov
mov
cmp
lcall
shll
xchg
mov
push
mov
inc
adc
adc
inc
rcrb
adc
push
cmp
lahf
mov
cmp
ja
mov
sub
or
rol
push
lahf
popf
in
aam
cli
jecxz
in
mov
cmp
and
lods
repz
ss
mov
xchg
xor
lods
dec
or
inc
outsl
or
loop
and
push
mov
cmp
aam
insb
push
mov
dec
gs
sar
pop
call
dec
dec
mov
cwtl
push
loop
inc
mov
mov
ss
cld
xchg
stc
filds
sti
inc
mov
push
aaa
mov
sbb
test
push
movsl
add
jae
in
fldenv
cmp
mov
enter
outsl
add
add
pop
cmp
or
jbe
fcompl
push
or
repnz
movsb
mov
jae
lods
inc
test
test
cmp
adc
adc
pop
mov
xchg
jae
out
pop
push
sub
gs
shll
push
push
adc
dec
ja
xlat
mov
jo,pt
sarb
cld
movd
shr
test
mov
pop
jne
dec
mov
testl
mov
shl
cs
mov
loope
sbb
push
imul
xlat
repz
jmp
dec
repnz
repnz
test
and
or
cltd
pushf
ljmp
and
mov
ljmp
jg
add
lds
mov
shlb
push
mov
add
or
adc
in
or
lcall
cmpsb
add
insb
inc
clc
sbb
movsl
sbb
enter
mov
sub
sub
test
insl
xchg
cmp
inc
sub
mov
cmp
or
sub
mov
sbb
pusha
test
jle
movsb
test
les
push
iret
and
add
fstpl
mov
lret
xor
icebp
iret
jae
mov
adc
aaa
inc
sbb
ret
inc
fldenv
jno
fs
loope
sbbb
mov
pop
out
lods
insl
arpl
xchg
shr
cmpsb
push
daa
stos
dec
xor
or
pop
add
jmp
xchg
fimull
cmp
sbb
add
les
loopne
pop
clc
fs
aad
shll
cmp
int3
mov
push
pop
and
imul
cmp
xlat
sub
dec
jmp
dec
sbb
xor
add
xchg
jmpw
add
dec
loop
inc
cltd
mov
xchg
cmpsl
adc
or
out
fisttps
adc
in
je
jbe
push
adc
jle
push
into
xor
jg
rclb
mov
sub
jmp
iret
int
stos
setae
inc
lcall
lods
dec
add
sub
and
mov
in
enter
rcll
shrd
mov
lea
push
out
and
outsb
rcll
jg
outsb
mov
arpl
test
push
stos
mov
and
add
outsb
xchg
adc
imull
loop
adc
fwait
leave
inc
cmc
adc
cmp
call
add
sub
pop
fcmovu
loopne
insl
add
cmp
inc
pop
sbb
stc
in
popa
xor
cmp
mov
xlat
leave
sub
ds
sub
mov
or
ja
cmp
mov
push
push
jne
clc
jb
push
sub
pop
inc
rol
push
scas
and
mov
add
sub
mov
jmp
pop
ljmp
cmp
fwait
dec
mov
add
testb
pop
pushf
and
sbb
dec
inc
mov
cmp
test
jg
fs
jns
fists
inc
clc
je
jns
jle
inc
int
inc
pop
icebp
je
sbb
loope
negb
stos
mov
push
aam
mov
sti
add
popa
stos
outsl
inc
leave
loope
jno
mov
inc
adc
push
aad
je
xlat
adc
je
or
add
std
imul
dec
inc
rcr
lods
dec
add
push
xchg
cwtl
adc
sarb
ret
dec
jl
roll
mov
stos
sahf
arpl
sub
test
cmc
fcoml
ljmp
mov
dec
int3
push
lods
xchg
pop
mov
or
mov
push
ss
outsl
mov
into
sbb
out
andb
shlb
rolb
ss
or
arpl
loope
push
push
scas
pop
pop
outsl
mov
xchg
and
xchg
and
mov
sbb
xlat
or
mov
xchg
pop
pop
pop
and
sar
int3
ret
ss
ja
frstor
xchg
and
inc
fwait
rolb
dec
or
stos
and
xchg
mov
mov
lods
mov
out
jge
lcall
movsb
out
xor
mov
cmpsb
sbb
fs
inc
in
subl
stos
mov
fnsave
repnz
insb
or
dec
in
cmpb
mov
jle
dec
pop
adc
dec
dec
aaa
jp
nop
or
xchg
mov
jecxz
pop
cmp
out
movsl
adc
insb
sub
adc
inc
add
pop
and
aam
pop
jmp
in
add
outsb
mov
inc
stc
cmp
pushf
cli
nop
mov
mov
hlt
or
jle
mov
add
jae
fwait
lock
cmp
es
scas
filds
cmp
adc
lds
nop
cmpsb
push
adc
ds
and
jno
lock
nop
mov
bound
mov
insl
inc
shlb
clc
addb
dec
push
or
cmpsb
push
inc
nop
pop
and
test
sahf
jo
mov
jno
cmp
sbb
out
pushf
adc
push
add
add
dec
cmpsb
xor
stc
int3
pop
fildll
or
rorl
jmpw
cmp
hlt
pop
cmpsb
cmpsl
in
inc
test
xor
sub
xchg
inc
imul
jmp
adc
mov
decl
popa
xchg
notb
outsb
xchg
push
lods
mov
movsb
or
push
dec
sub
and
or
inc
push
mov
jecxz,pt
sbb
mov
dec
adc
dec
push
sti
jo
jno
xchg
mov
dec
arpl
filds
xchg
fstl
adc
mov
mov
inc
jne
pop
mov
cmpl
sbb
rorb
push
pop
push
jae
mov
lea
mov
jle
vcvttss2si
jle
mov
or
insl
add
inc
xchg
lods
fwait
mov
push
or
mov
jb
nop
xor
lcall
orl
ficompl
inc
loopne
xchg
fnstcw
rol
adc
test
rorl
push
int3
adc
pop
sub
les
push
lahf
cli
sbb
mov
sub
inc
add
sub
xchg
lods
xchg
leave
add
mov
or
mov
fsubrs
adc
rolb
and
faddl
jl
and
ret
bound
and
mov
bound
jmp
shrl
stc
push
leave
jno
inc
sub
adc
out
je
jmp
mov
xchg
add
push
inc
pop
jnp
fwait
adc
test
cmc
in
fisttps
clc
adc
repnz
fsubrl
adc
imul
lahf
inc
mov
mov
pop
jne
adc
stos
int3
dec
cmp
popa
mov
push
xchg
jg
bound
cwtl
mov
pushf
mov
cmp
add
cmp
dec
add
imul
arpl
aam
dec
fs
dec
mov
dec
mov
lea
clc
sub
mov
or
loop
xor
adc
push
jns
gs
sbb
ss
sbb
test
push
fistl
mov
xchg
and
je
in
cmpsb
cmpsb
call
cltd
lahf
mov
fprem1
out
xchg
sub
cmp
hlt
mov
lea
mov
fldenv
push
mov
adc
mov
shll
pusha
mov
lret
dec
repnz
inc
sub
xlat
dec
sub
xchg
lcall
ss
cmpb
mov
and
xor
push
sub
inc
xchg
repz
in
cmp
inc
shll
push
arpl
das
push
lret
repnz
mov
cmpsl
mov
outsb
popf
dec
cmpb
xor
push
mov
sub
mov
xchg
rol
dec
xchg
loop
std
icebp
cli
shrb
lahf
clc
add
adc
mov
test
sub
mov
stos
inc
rclb
pushf
fldcw
or
loopne
int
pusha
leave
pop
or
pop
out
jp
sub
and
aad
push
lds
shlb
mov
jbe
mov
or
adc
stos
mov
push
inc
out
cli
push
xorl
loop
pop
es
andl
pop
pop
or
cld
sti
out
jmp
pop
mov
mov
mov
in
sbb
stos
xor
mov
ljmp
inc
inc
rorb
cmpsb
mov
dec
push
mov
jmp
pop
cmp
cmp
fs
mov
xchg
mov
out
xor
sahf
fistps
sub
xchg
or
lret
push
out
enter
imul
lret
jge
add
fldt
subb
test
or
sub
xchg
test
fcomi
arpl
adc
lea
push
addr16
adc
adc
xor
xor
pop
jecxz
sub
mov
lds
scas
fnstcw
add
xchg
sub
popf
or
mov
xor
pop
sarl
sub
push
jmp
mov
pusha
push
pop
and
mov
jmp
test
sub
cmp
ret
orb
shl
roll
jecxz
adc
loopne
dec
pop
in
mov
cmp
or
faddl
ret
outsb
xor
dec
xchg
mov
adc
call
rclb
test
outsb
push
mov
inc
shrl
mov
icebp
xlat
jecxz
jp
rcrb
outsl
or
sbb
sub
stos
aad
push
mov
push
popf
notrack
fs
xchg
cwtl
jp
inc
push
or
and
xor
ficoml
ljmp
incb
cmp
pusha
push
cmpsb
lahf
test
xchg
icebp
es
adc
hlt
out
mov
sbb
adc
pop
sub
xchg
push
cs
fs
xchg
or
ljmp
push
xchg
xlat
cmpsb
mov
xlat
push
xor
xchg
inc
xor
xchg
decb
lods
cmp
insb
divb
pop
pop
sub
dec
jg
fidivl
stc
jecxz
iret
add
gs
call
fld1
outsb
xor
cmp
push
mov
inc
inc
inc
testb
pushf
out
push
lahf
shl
push
std
imul
cwtl
sbb
in
test
dec
cs
fcomp
or
sbb
notl
mov
mov
mov
adc
inc
cmp
inc
mov
test
cmp
enter
xlat
push
dec
dec
add
mov
stc
pop
cmp
filds
in
outsl
inc
or
sbb
fs
orl
add
inc
inc
sub
add
xchg
in
ret
sti
cmp
ret
pop
xor
insl
andb
xchg
fstpt
fldenv
jecxz
xchg
push
mov
mov
gs
mov
jnp
sub
je
nop
movsl
mov
mov
rclb
mov
jo
mov
pop
or
cmp
pop
cmpsb
imul
xorl
xorps
mov
hlt
cwtl
fdivp
inc
into
lret
adc
lds
xchg
js
js,pn
mov
mov
mov
out
mov
mov
imul
add
in
jg
test
xor
loopne
pushf
dec
cmp
cmpsl
iret
jmp
push
and
jle
popf
mov
cmpsl
test
pop
imul
lahf
data16
inc
mov
and
cs
and
test
addr16
fbld
pushf
inc
push
lock
push
xchg
pmulhuw
and
push
test
mov
pushf
fstps
fisttpl
adc
mov
sub
xchg
orl
fimull
js
enter
loop
pop
imul
clc
push
pop
es
dec
inc
shrb
sbb
push
xor
repz
leave
mov
enter
xchg
stos
push
xlat
xchg
lds
in
cld
mov
and
sahf
push
into
or
xor
into
mov
imul
pop
ret
mov
and
insl
lret
sbb
sbb
sbb
push
xchg
fbld
cmp
or
fs
cmpsl
les
dec
fldt
inc
xchg
sub
jno
push
fdivr
dec
adc
lock
ret
dec
fwait
dec
jecxz
and
inc
mov
xor
push
inc
xchg
xchg
cmp
sti
cli
or
add
test
mov
stos
dec
push
inc
mov
stos
cs
movq
pop
mov
adc
vxorps
or
inc
pop
pop
jg
ja
or
xorb
sbb
or
cltd
insl
stos
sbb
test
test
test
bound
and
sub
xor
in
inc
leave
js
aas
jns
sarb
dec
sub
jge
in
jmp
mov
into
stc
xor
fldcw
lahf
into
aaa
pop
xchg
in
mov
hlt
adc
addr16
inc
jg
nop
divl
mov
ljmp
mov
bound
adc
xchg
in
lods
jo
daa
js
lock
and
mov
mov
and
dec
jl
movsl
mov
mov
pop
push
out
das
ja
jge
mov
loop
loope
push
sahf
loope
lcall
pop
loopne
popf
jnp
loope
int3
dec
sub
lret
fcmovnb
inc
jp
test
jmp
insb
xor
push
in
popa
cltd
add
mov
or
les
fsubrl
loope
push
add
inc
or
push
dec
mov
mov
movsl
mov
pop
out
push
and
cmp
fldenv
scas
js
arpl
or
cld
nop
jle
out
loop
ret
xchg
in
aaa
pop
dec
push
push
add
adc
in
jg
adc
lret
js
inc
xchg
lcall
cli
mov
jge
les
int3
xor
adc
or
jp
int3
inc
pop
xchg
push
dec
aam
in
daa
add
and
push
mov
cmc
lock
dec
sub
mov
dec
int3
push
mov
repz
loope
ret
jns
dec
jo
out
cmp
pop
and
mov
add
and
dec
stos
push
dec
outsl
pop
inc
or
mov
data16
pop
movl
sti
ror
mov
inc
test
sbb
cmpsl
adc
testl
sti
push
movsb
push
cmp
pop
xchg
cmp
sub
xchg
lods
inc
jge
push
fldenvs
sbb
xchg
jg
and
fcmovb
mov
in
cmpsb
les
mov
xchg
fnstsw
cmp
pop
pushf
adc
cld
jg
jb
imulb
xlat
int3
repnz
xor
dec
outsb
aad
adc
adcb
pop
lret
enter
jns
inc
push
ret
jne
stc
add
mov
movsb
fldcw
pop
mov
sahf
xor
or
filds
mov
aaa
or
jne
leave
mov
jmp
pop
xor
sub
sub
fdiv
sub
imull
cmpsl
jmp
xchg
scas
fimull
jno
lret
daa
xchg
mov
xlat
cltd
jp
mov
sar
cmpsb
jae
push
hlt
pop
test
lods
movsb
outsl
push
out
mov
inc
fisttpl
lds
sub
cwtl
push
test
ficompl
lahf
addb
icebp
scas
insl
pushf
push
adc
adc
adc
addr16
dec
test
add
in
scas
bound
out
sahf
mov
rcrl
lcall
lret
out
cmp
inc
xor
call
push
mov
pop
sub
ja
push
test
into
pop
pop
dec
dec
xorl
aas
mov
lret
mov
sbb
pop
sub
sbb
jns
jecxz
lret
insb
mov
out
inc
sub
in
in
in
iret
and
sbb
dec
xchg
nop
rcrl
inc
stc
jmp
xchg
or
insb
adcb
dec
loopne
mov
add
rolb
cmp
leave
icebp
fs
and
inc
push
inc
mov
adc
pop
movl
jecxz
jle
fdivl
adc
push
push
sti
cmp
insb
xor
jle
jns
jg
insl
jo
aas
add
scas
test
xchg
or
jp
jno
adc
mov
mov
imul
xor
in
lds
dec
jecxz
add
arpl
push
mov
fwait
data16
mov
and
aad
out
cltd
out
movsb
or
or
xor
ljmp
inc
lods
dec
inc
int
aas
not
cmp
cmc
pusha
jp
pop
scas
clc
or
mov
fsubrs
push
shrb
pop
inc
divl
cmp
lahf
add
fwait
mov
movsl
or
mov
mov
repnz
inc
xor
mov
cmp
sbb
pop
fdivrs
dec
das
fstpt
sub
xor
push
add
into
add
xor
repnz
sti
iret
lret
lea
enter
inc
xor
pop
dec
popf
jge
cmc
adc
dec
add
jmp
jnp
call
test
ja
stos
scas
adcl
sbbb
arpl
add
lahf
aad
into
jno
nop
sub
ret
test
sahf
sti
push
clc
ret
popa
les
mov
or
int
lcall
in
xchg
jns
xor
mov
inc
ret
sbb
jnp
mov
mov
pop
outsb
jp
js
jns
mov
cmpsl
push
mov
jo
out
das
cmpsl
aaa
cmp
mov
imul
test
addb
xchg
pusha
or
cltd
std
outsb
das
popa
nop
mov
int3
mov
cmpsb
push
mov
std
movsl
and
icebp
fcomps
sbb
xchg
lahf
cwtl
xchg
push
lds
je
sub
adc
test
mov
in
adc
shlb
mov
cmpsl
icebp
and
hlt
push
outsb
cmpsb
jne
push
adc
cmp
aam
addr16
dec
fs
outsl
pop
push
cmp
popf
inc
stc
inc
out
rol
lahf
insb
and
push
lea
clc
mov
sbb
push
in
fidivs
test
sti
ljmp
mov
sbb
sub
mov
dec
aas
test
jge
out
xchg
pop
mov
fcompl
inc
sbb
int
cmp
lea
inc
xrelease
pusha
dec
pusha
cmp
mov
adc
mov
loopne
sbb
scas
scas
adc
cltd
lods
gs
loope
mov
cs
cmpsl
mov
out
stos
dec
sub
nop
ds
sbb
inc
pop
and
shll
pop
xor
or
rorb
pop
repz
fdivrl
push
sbb
xchg
push
stos
mov
and
lahf
mov
lcall
dec
dec
daa
inc
imul
jno
adc
lock
xchg
lea
sub
jecxz
xor
inc
jecxz
xor
or
fbstp
push
lcall
in
loope
adc
and
cmp
cltd
dec
cli
leave
jb
jge
sbb
je
push
in
into
add
add
fimull
pop
pushf
insl
aad
push
push
shrb
and
push
sti
arpl
sub
outsl
fidivrs
das
jl
cs
arpl
mov
out
push
mov
push
jbe
and
sub
push
push
jmp
mov
lret
inc
and
sbb
pop
sub
push
outsb
sti
fs
scas
mov
jbe
outsl
cmp
adc
push
js
or
dec
sbb
fmull
call
dec
insl
xchg
mov
mov
mov
inc
stc
aas
mov
jnp
add
fwait
dec
ds
sub
jb
fdivr
jecxz
out
inc
lcall
shrb
mov
movb
fninit
lahf
jbe
inc
pop
and
xorl
sub
or
cltd
sti
sub
jb
fxtract
cmc
add
mov
scas
jg
in
xchg
daa
dec
mov
sub
mov
pop
dec
xchg
pop
jo
add
mov
mov
imul
mov
jl
out
aad
fs
into
not
dec
and
pop
popf
dec
lods
cmp
push
test
js
jmp
enter
pop
mov
sbb
sti
pop
cmpsl
pop
imul
sub
jns
movsl
ss
or
test
adc
adc
pop
mov
inc
sbb
cmc
shrb
cmpsl
push
push
xchg
sbb
add
or
popf
mov
mov
xchg
sbb
aaa
xchg
cvtpi2ps
mov
sub
lea
cmp
xlat
sbb
arpl
pop
ret
dec
jl
dec
ret
sub
mov
lds
sub
jo
test
mov
xor
shr
out
aaa
inc
jmp
fwait
mov
mov
xchg
xor
push
fbstp
test
mov
sub
addr16
call
pop
or
add
pop
adc
mov
inc
std
ds
test
mov
xchg
xor
jl
bound
xchg
cmp
pop
adc
fnstsw
push
ficoml
shlb
mov
lods
push
aaa
mov
mov
shrb
mov
cmpsb
test
lds
lret
movsl
xchg
jmp
cld
mov
lcall
pop
or
fistps
mov
enter
mov
mov
or
or
aas
xor
jp
loop
in
mov
in
into
mov
icebp
loop
mov
mov
cmp
dec
incl
jl
clc
mov
jge
lods
int3
jne
mov
lds
shl
ja
movsb
loopne
stos
sbb
mov
repnz
dec
sbb
fistl
pusha
ret
and
jecxz
imulb
push
ja
gs
test
dec
push
out
push
cld
mov
xor
mov
arpl
jns
fildll
adc
jo
sub
mov
add
mov
cwtl
repz
inc
outsl
xchg
xor
xlat
movsl
jecxz
sarl
push
insb
sti
xor
cmp
fwait
push
xor
nop
pusha
insb
dec
sbb
fiadds
xor
jno
je
and
adc
stos
jb
mov
ret
addr16
and
mov
jns
inc
push
xor
hlt
and
inc
push
fstps
sbb
xchg
adc
lcall
mov
inc
sar
clc
aas
mov
fmull
negl
mov
cwtl
sub
sar
push
cmp
mov
or
repnz
cmp
shrb
mov
xchg
pop
sbb
bound
in
sbb
lock
in
cmpsl
push
jg
lahf
dec
xchg
lret
xor
and
shrl
dec
dec
inc
adc
sbb
pop
js
adc
lods
and
popl
in
and
test
mov
jg
lcall
cmpl
cmpsl
jle
inc
das
cmp
rcl
cli
jle
cmpsb
mov
lods
jmp
mov
int
mov
or
adc
add
filds
out
add
xor
push
jp
xorb
dec
or
adc
jmp
les
loopne
hlt
inc
loopne
fistps
mov
push
pop
sti
mov
imul
push
push
rclb
push
xor
inc
xchg
loop
adc
inc
add
insl
pop
mov
xchg
orb
xchg
cmc
leave
xor
add
pop
cmc
pop
scas
hlt
aas
cmpsb
push
xor
jg
inc
icebp
sub
push
sti
dec
cs
sbb
jp
rcrb
nop
push
mov
sbb
mov
mov
xchg
cmpsb
hlt
jbe
inc
aam
fisttpl
sbb
lds
lods
bound
xor
stos
fisubrl
xchg
add
jns
scas
fldt
or
ret
xchg
ss
mov
roll
in
mov
xor
add
xchg
leave
rolb
into
stos
jle
mov
div
xchg
test
pop
lods
cmpsl
lea
or
adc
fs
repz
cmc
cld
mov
sbb
das
mov
popf
cmp
mov
aas
lock
aaa
mov
scas
ret
and
push
xchg
and
sub
lds
jg
cmp
subb
sahf
jno
fisttps
add
jb
aaa
xchg
shll
pop
mov
push
pop
in
pop
imul
leave
fsincos
leave
negl
shl
movsl
int3
cmpb
mov
xchg
xor
test
xchg
int3
into
int3
cmp
sub
jmp
subb
or
js
adc
or
clc
les
and
jne
outsl
imul
xor
test
push
mov
xor
lret
and
loope
dec
mov
outsb
subb
adc
aad
shr
int3
fcmovnu
int3
jne
jmp
xor
das
loopne
addl
mov
enter
mov
fldl
scas
mov
loop
and
out
mov
and
repnz
cmp
cmc
hlt
fisttpll
or
test
out
xor
loope
ljmp
adc
bnd
std
jno
cwtl
pop
xor
mov
and
push
dec
fs
xchg
and
insl
das
loop
and
push
mov
aaa
mov
push
in
add
std
std
jge
incb
push
sub
sub
mov
xor
enter
mov
fs
dec
jbe
sbb
jae
dec
jne
iret
sbb
sub
daa
sbb
fstpl
push
xchg
xchg
movsl
jg
xchg
jl
pop
fldcw
outsb
mov
add
cmp
pop
clc
jns
jmp
das
push
insb
xor
imul
movsb
stc
stc
in
stc
adcl
inc
lahf
cwtl
addr16
inc
pop
imul
sub
je
xor
das
in
pop
dec
lock
push
loope
into
iret
notb
cmpsb
inc
leave
mov
push
mov
mov
cmpsb
sub
mov
and
xor
adc
push
push
movsl
dec
lods
stos
jno
scas
adc
jp
mov
pop
mov
xchg
ljmp
in
je
mov
push
iret
jp
jge
sahf
push
sub
loop
jbe
push
hlt
repnz
mov
pop
xchg
inc
pop
pop
mov
mov
sbb
xchg
xor
lods
push
jb
scas
mov
mov
push
push
push
negb
daa
and
mov
popa
mov
mov
xlat
mov
shl
test
lret
push
sti
loop
pop
add
pop
cli
comiss
sbb
out
test
out
in
xchg
loope
clc
rorl
imul
punpckldq
lock
clc
flds
xchg
or
stc
pop
fcoms
in
xor
dec
data16
lret
jae
or
das
push
xchg
ss
mov
dec
aad
cmp
xchg
sbb
loope
dec
ja
xchg
cmp
fmul
out
or
xchg
cmc
xchg
jp
pushl
stc
mov
jecxz
cltd
adc
pop
jle,pn
jb
lods
sahf
jnp
aad
dec
out
movsl
jl
pop
sub
xor
inc
sbbb
call
imull
fs
cmpsl
cmp
pushf
mov
push
lods
mov
mov
pop
lahf
add
push
nop
daa
push
dec
adc
int3
jnp
or
cwtl
es
mov
sbb
aas
repz
xor
addr16
cmp
pop
orb
add
xor
inc
and
mov
xor
inc
movl
vmptrld
adc
sub
mov
adcl
cmpb
ljmp
push
push
sub
and
xor
and
xchg
pop
stc
mov
push
xor
pop
sti
test
aad
pushf
pop
sarl
pop
mov
into
in
test
fisubs
dec
cmp
in
add
sbbb
lret
cltd
lods
mov
mov
into
aad
push
cmp
jl
cmp
mov
in
mul
xor
sarb
xor
in
imull
addl
in
mov
sahf
mov
cld
adc
pop
push
jb
adc
outsb
fsts
or
hlt
xchg
je
nop
mov
pusha
or
cmc
out
test
adc
push
add
into
pop
sbb
pop
pop
adc
jge
lcall
scas
or
popa
daa
jno
lock
shll
push
push
imul
mov
test
test
cmp
or
outsb
mov
pop
pop
mov
shll
and
sbb
movsl
inc
je
and
outsb
inc
aas
mov
aaa
scas
in
cli
fcmovu
lret
mov
test
sub
shlb
pop
inc
mov
adc
add
shlb
cmp
incl
aaa
into
mov
add
je
jne
mov
ficompl
ret
shlb
push
lock
int
xchg
mul
mov
clc
mov
lock
js
sbb
mov
movsb
in
dec
in
ja
lahf
push
push
lea
pop
mov
cmpsl
testl
inc
pop
sbbl
cmp
pop
sub
sti
xor
aam
mov
fildl
adc
and
in
or
xchg
and
cmp
mov
rol
sbb
mov
mov
mov
lcall
das
or
je
shl
pop
js
fwait
pop
dec
inc
xlat
mov
jno
jo
sbb
sbb
scas
dec
jge
stc
adc
into
jbe
pop
cwtl
popl
xchg
push
lods
mov
add
xor
dec
lret
daa
or
fwait
mov
xchg
aas
xchg
mov
sub
daa
lea
mov
lcall
mov
xchg
in
neg
cmp
inc
call
lds
addr16
cmpsb
shll
adc
mov
push
ss
lods
xchg
mov
rol
fidivl
jne,pn
and
or
pop
xlat
cmp
aam
and
or
das
fcompl
inc
mov
cmpsl
loopne
xchg
push
aad
scas
pushl
mov
adc
jb
lcall
jae
jae
ss
frstor
or
insl
pop
mov
push
push
mov
cmp
out
fbld
mov
or
xor
jge
pop
jmp
mov
pop
lods
dec
test
test
inc
jp
jecxz
mov
lret
lods
adcb
pop
popf
push
and
test
push
rorb
sarl
cld
xchg
inc
sahf
push
sub
popa
cmp
xor
adc
aam
test
gs
dec
mov
leave
pop
outsl
outsb
xor
pop
dec
adc
cmpsb
jg
adc
cltd
mov
push
adc
pop
cmpl
and
sbb
inc
loopne
xor
inc
xchg
shrb
scas
cmpsb
dec
notb
dec
jae
push
arpl
or
pop
add
outsb
or
mov
lock
in
rorl
cwtl
dec
getsec
push
psubusw
js
cmpsb
repnz
sti
mov
leave
fiaddl
inc
pop
daa
jno
js
mov
sub
sbb
mov
addr16
mov
and
cmp
in
into
xor
xor
xchg
fwait
cwtl
aam
mov
or
jb
adc
popf
sub
mov
rcr
js
sub
jae
movl
cld
filds
push
std
cmpsb
mov
mov
push
stc
es
loope
rcl
jb
or
and
movsl
push
leave
sbb
or
aad
jo
push
add
sbb
repz
add
jns
inc
popa
psubq
aas
sub
xor
leave
sub
into
jno
push
fld
xor
leave
out
insb
and
fmull
out
gs
jmp
lahf
mov
jecxz
mov
mov
cmpsb
imul
in
test
add
pop
xor
in
cltd
push
hlt
mov
sahf
mov
dec
repz
and
sbb
and
jne
mov
or
jo
rorl
jne
mov
lods
pop
fdivrs
scas
lcall
pop
mov
push
lret
inc
cs
xchg
push
and
cmpsl
mov
gs
sarb
outsl
adc
push
push
cmpsb
mov
lahf
adc
insl
pop
pop
jmp
push
mov
mov
sub
fsubl
sub
inc
inc
or
sbb
cmp
aas
or
ret
test
aad
push
jmp
insl
cmp
test
bound
jge
cld
mov
push
mov
mov
ja
xor
cmp
push
clc
mov
mov
jne
push
lods
cmpsb
jns
jo
adc
stc
negl
mov
sbb
fildl
mov
neg
sbbb
sbb
cs
mov
lods
mov
inc
jle
sti
mov
sarl
mov
negl
hlt
jle
add
mov
pop
mov
js
lods
add
inc
and
mov
in
sub
movsl
jle
cmp
gs
add
add
cmp
and
pop
adc
push
adc
mov
ficompl
push
sbb
inc
ret
int3
mov
and
add
xchg
inc
stos
and
pop
test
add
jl
sarl
and
lea
push
inc
cs
mov
or
shll
pop
cltd
js
push
dec
push
dec
mov
mov
imul
hlt
inc
push
inc
fists
sti
mov
and
pop
fistpl
js
or
aam
in
push
test
scas
push
and
xchg
jae
scas
stos
cwtl
mov
out
dec
imul
jb
lea
pop
insl
pushf
xchg
and
ficomps
mov
mov
xor
fisttpl
pop
sbb
ftst
repnz
pushf
or
mov
inc
add
add
test
ret
aas
loopne
pop
cmp
cmpsb
ret
in
ror
xchg
lods
repz
and
inc
and
popf
lea
mov
pop
adc
fdivl
addr16
and
pop
pop
push
add
popf
rclb
xor
imul
stos
pushf
dec
xchg
in
out
mov
cmp
pop
movsl
pop
dec
push
xlat
fwait
je
out
in
in
outsb
jge
mov
jecxz
pusha
pop
ret
icebp
lret
cmpsl
cwtl
xchg
adc
lcall
inc
fcoml
lret
xchg
jl
adc
cltd
das
add
jg
pop
lock
mov
cmp
dec
shll
inc
jbe
cmp
push
fs
and
mov
sbb
stos
mov
push
jmp
add
cld
jns
movsl
call
scas
icebp
cmp
adc
mov
cmpsl
jl
lahf
aaa
and
xor
cmpsl
mov
xchg
xchg
mov
test
nop
mov
jb
push
pusha
enter
and
aaa
int3
cmp
xchg
mov
movsb
pop
sub
std
dec
adc
dec
cmp
mov
mov
inc
in
sbb
inc
sub
sbb
sbb
cwtl
add
in
clc
mov
ds
or
lds
into
jno
call
dec
repz
es
jns
xchg
push
dec
out
lahf
mov
mov
xchg
mov
shlb
sub
mov
test
or
inc
push
lods
cmc
jmp
mov
add
mov
add
dec
pop
add
pop
aas
sbb
and
addb
pusha
arpl
pop
and
aam
pop
leave
xor
sub
enter
push
push
lahf
in
xchg
jle
scas
inc
pop
sub
iret
int3
xor
pop
shlb
mov
aaa
xor
adc
mov
xor
dec
adc
push
xor
lret
and
loop
mov
adc
iret
decb
cmp
xor
jnp
mov
push
pop
adc
gs
popa
pop
and
fidivl
test
dec
mov
lock
sub
out
jl
push
lods
std
dec
fnstenv
js
test
and
mov
ret
mov
fabs
lret
adc
enter
xlat
fnclex
and
out
test
mov
xor
icebp
pop
popa
push
jmp
sub
repnz
mov
pop
jbe
mov
xchg
rcl
lods
or
andl
loop
imul
rorl
ljmp
lret
dec
mov
dec
lea
out
ret
xchg
xor
push
push
das
adc
and
xchg
aad
ljmp
mov
mov
xor
mov
stos
add
clc
dec
rorl
or
cmc
mov
jae
into
rorb
xchg
sub
push
call
fstl
mov
imul
xorl
pop
shrl
fmuls
lcall
outsl
nop
dec
lcall
hlt
sbb
mov
dec
iret
in
pop
les
push
scas
inc
add
mov
add
dec
sub
pop
jno
fsubrl
mov
bound
insl
xchg
fadds
jl
nop
es
negb
sbb
pop
xchg
xchg
pushf
cmp
jmp
outsb
push
dec
push
sub
cli
scas
mov
cmp
cmp
mov
out
daa
bnd
fs
mov
inc
les
mov
push
xor
jbe
addr16
jmp
cmc
jnp
inc
inc
push
idiv
pop
cmp
sbb
xchg
mov
andb
dec
mov
add
pop
fwait
fwait
sub
rcrb
mov
add
lock
rcrl
or
lock
cwtl
mov
xchg
sbb
imul
test
in
dec
cmp
cmpb
xlat
cmpsl
in
jge
or
rorl
mov
xor
int
lods
fildl
out
xchg
add
mov
sbb
sarb
test
ja
mov
imul
shlb
or
inc
jnp
jns
mov
mov
mov
ja
push
jbe
lods
cmp
mov
stos
sahf
jae
sbb
mov
repz
sbb
jmp
insb
adc
jp
inc
mov
test
mov
mov
add
rorb
cmp
imul
test
xchg
and
incl
fistpl
push
xchg
or
std
orps
cmp
aad
pop
int3
mov
cmp
mov
or
jp
inc
adc
cmp
mov
loope
mov
cmp
and
and
xchg
pop
jo
push
add
ja
cltd
repz
cltd
and
jno
xor
orb
sarb
cmp
in
pushf
or
inc
fisubrl
addb
fsts
xor
popf
pop
andb
xchg
jo
dec
dec
mov
mov
pop
out
xorl
fdivs
sub
dec
mov
adc
out
adc
and
insl
sbb
das
fwait
dec
stos
sbbl
imul
cmp
pop
cmp
hlt
repz
add
mov
int3
lods
mov
jae
xchg
pop
fdivrs
in
dec
rol
jne
in
pop
cmp
popf
dec
add
data16
push
mov
insl
inc
lds
cmp
orb
gs
xlat
aad
outsl
in
mov
xchg
stos
push
clc
inc
cmp
int
aam
das
jb
cmp
sbb
pushf
mov
mov
xor
mov
jge
pop
dec
jbe
aad
fs
test
fidivl
shlb
adc
inc
daa
or
test
ss
xchg
mov
in
pop
jecxz
sbb
stos
sbb
xlat
sahf
jne
inc
push
ss
nop
testb
lds
cmp
jp
xor
sbb
shlb
daa
cmp
les
jg
or
mov
shrl
sarl
lea
push
insl
pop
out
sub
sbb
push
jne
adc
mov
aad
cltd
scas
jns
js
stc
int
sahf
xchg
and
imul
test
or
cltd
pop
sub
shlb
push
out
repz
jnp
mov
adc
lret
ljmp
jbe
push
or
jno
imul
jp
lods
mov
addr16
mov
or
ja
fstpt
lock
repnz
insl
or
sarb
jne
pop
mov
stos
ss
xchg
clc
sbb
pop
into
ja
aaa
push
or
into
adc
mov
push
in
push
ss
push
ficoms
mov
push
add
enter
addr16
cmp
jle,pt
imulb
add
jp
aam
out
or
sbb
adc
xor
sarl
add
xchg
testl
push
mov
rcrl
or
lods
mov
call
add
rolb
subl
rolb
aam
jle
xchg
xchg
mov
push
jg
mov
insl
pop
gs
out
push
or
add
jae
movsl
sbb
jp
mov
imul
xor
xor
fiadds
add
orb
adc
test
out
push
jmp
pushf
pop
mov
leave
mov
adc
ljmp
dec
sub
shlb
push
pop
cli
in
dec
sbb
mov
in
call
sbb
jns
mov
cmpl
xor
xlat
pop
subb
pop
inc
sarl
scas
mov
lcall
dec
jmp
js
test
mov
aas
mov
mov
into
pop
xchg
fcoms
das
scas
mov
sahf
rcrl
and
xchg
rcr
fdivl
mov
jo
mov
xchg
inc
cs
mov
mov
repz
nop
lret
xchg
push
call
scas
lea
repnz
les
and
mov
cmp
mulb
sbbb
xchg
dec
andb
and
mov
in
cmpl
xchg
push
mov
sbb
xchg
btc
cwtl
sbb
xor
movsb
mov
jl
cwtl
fcomps
cmp
mov
in
movsl
scas
push
dec
stos
dec
lcall
inc
das
and
sub
lods
lret
xor
insb
inc
adc
mov
inc
js
call
sub
mov
mov
jnp
pop
das
ficompl
insb
inc
shl
mov
hlt
dec
jnp
jecxz
outsb
je
cmp
or
out
sarb
pop
inc
push
imul
push
jecxz
or
xchg
sti
or
mov
cmp
push
xchg
cmpsb
xchg
mov
aam
sbb
push
lahf
into
pop
test
dec
das
les
and
adcl
fidivl
cld
mov
inc
loop
nop
push
aad
mov
test
xchg
xchg
push
jge
nop
jle
mov
mov
andl
xor
lcall
icebp
mov
cmpsb
ljmp
mov
adc
out
xorl
jp
xorl
or
mov
pop
cmp
scas
pop
stc
add
fwait
mov
cltd
cltd
insl
xchg
cs
int
sahf
repz
and
andnps
stc
pop
jo
and
xchg
mov
pop
mov
mov
outsl
cwtl
dec
aad
sbb
sub
gs
cmp
inc
pusha
aam
sub
sbb
popa
jnp
into
aas
incl
cmp
pop
pop
test
and
insb
arpl
adc
pusha
in
lds
jmp
jge
outsl
xchg
and
popw
mov
ret
imul
jle
inc
iret
mov
scas
dec
inc
inc
in
outsb
mov
pushf
shll
gs
out
out
test
rcll
pop
gs
daa
sub
aam
cs
mov
jnp
sub
add
lcall
cwtl
mov
ss
cmpsb
cmp
popf
inc
test
pop
stos
sti
sub
std
push
cmp
jno
and
fcmovnbe
sub
or
out
mov
jmp
scas
jns
icebp
test
fsts
movsl
inc
pop
lret
int3
xchg
cli
cltd
mov
adc
mov
imul
repz
ret
adc
hlt
pop
das
push
and
dec
mov
sbb
ret
sarl
sbb
add
jecxz
xor
cmp
push
cmp
inc
or
imul
mov
cmp
cmc
gs
mov
in
jecxz
mov
cmp
mov
dec
cmpl
mov
cmp
push
nop
xor
cmpsl
les
xor
push
clc
into
cmp
dec
fcom
cmp
add
mov
clc
addr16
push
jge
addr16
pop
cmp
hlt
inc
pop
lret
je
in
push
clc
shl
sub
mov
loopne
sbb
jne
jne
clc
into
out
pop
imul
sub
and
mov
push
cs
pextrw
sub
test
mov
out
sbb
sbb
aaa
jmp
push
sub
mov
in
dec
movsb
fidivl
in
sbb
outsb
push
call
dec
pop
sbb
fldl
and
inc
adc
mov
popa
rep
lea
jp
or
xchg
pop
mov
mov
pop
lcall
call
scas
callw
xchg
pusha
mov
xchg
in
xchg
mov
mov
loopne
test
xchg
pop
xor
clc
daa
negb
call
mov
repnz
inc
mov
lea
and
nop
push
imulb
shlb
jo
rcll
inc
in
xlat
mov
movsl
dec
shll
sbb
ja
in
in
mov
fsubrs
test
insb
fidivs
jg
mov
jo
outsb
out
cmp
rorl
dec
dec
dec
pop
push
lret
nop
std
fistl
and
daa
xor
lcall
mov
add
lods
roll
sbb
and
out
call
mov
call
stc
ret
xor
add
stc
pop
jns
sbb
je
aaa
out
stos
xor
jle
dec
pop
dec
or
mov
cmp
add
outsl
xchg
fisubrs
loop
mov
clc
scas
pop
hlt
popa
jnp
in
dec
sub
cmpsl
in
out
pushf
jmp
fsubs
pop
dec
data16
pop
pop
pop
sbb
lods
mov
pause
loopne
ljmp
adc
push
sub
int3
rorb
inc
test
aad
mov
mov
or
jmp
pop
icebp
jg
cmpsb
addr16
xchg
xorl
scas
push
xchg
mov
xchg
pop
sbb
es
aad
sub
dec
andb
popf
cld
mov
aaa
inc
cwtl
mov
push
push
push
in
das
and
fsubl
repz
std
divb
xor
cmpsl
sub
mov
movsl
cmp
jmp
sti
std
flds
adc
cli
int
add
daa
fs
dec
mov
push
xchg
sbb
jle
jb
out
mov
xchg
lods
push
mov
jnp
mov
cltd
into
test
pusha
icebp
lock
push
xchg
lds
xor
cmp
sbb
aaa
jns
negl
jo
shrl
dec
jecxz
enter
test
dec
cltd
test
cmpsl
out
aas
std
frstor
cltd
out
aam
adc
xchg
dec
mov
mov
jne
dec
lods
movsb
xor
in
dec
dec
arpl
stos
shlb
mov
int3
pop
fs
bswap
inc
sbb
cmp
or
or
loop
arpl
mov
fs
xchg
ss
data16
lahf
adc
cli
imul
cmpl
dec
or
filds
insl
inc
mov
jb
jmp
in
lock
lret
je
lcall
add
mov
dec
jne
outsb
test
xchg
add
ret
outsl
and
pusha
mov
cmc
mov
push
mov
insl
imul
loopne
jge
sub
stos
xor
push
cmp
loope
test
call
out
cmp
bound
add
mov
and
sub
pop
aaa
mov
mov
pop
jmp
loope
enter
les
mov
push
and
aad
stc
ljmp
adc
push
inc
mov
jns
stc
mov
jge
incl
dec
stos
lods
out
mov
inc
xchg
js
cs
jns
ljmp
adc
jle
shlb
aaa
and
jb
das
and
mov
inc
xor
fcompl
data16
jecxz
mov
add
jp
add
cld
sub
cs
repz
push
call
shrb
sbb
icebp
inc
dec
or
jl
fldt
int3
imull
test
pop
xchg
dec
mov
pop
popf
iret
dec
sub
xchg
add
xchg
ja
sub
inc
cwtl
orl
jae
loop
cmpsl
scas
fldt
push
out
xchg
jp
push
dec
sub
and
inc
out
lock
shrb
or
pop
orb
mov
lret
out
addb
push
fs
dec
mov
sahf
shrl
out
mov
mov
lahf
add
cli
divb
xor
jle
repz
mov
setnp
pushf
sahf
push
xchg
repnz
jecxz
xchg
mov
loope
lahf
aas
icebp
pop
xchg
ror
fwait
and
fadds
repnz
lret
jle
xchg
dec
pop
sahf
insl
push
leave
push
icebp
std
aam
in
xchg
lcall
add
lcall
xchg
lea
pop
cmp
cmp
fidivl
add
rcrl
add
mov
and
out
push
xchg
in
mov
stos
stos
fiadds
stc
adc
mov
cs
scas
mov
jns
adc
cmpsb
dec
sahf
icebp
aad
or
inc
lods
outsl
sbb
or
adc
dec
xchg
aad
cld
loopne
push
imul
dec
dec
mov
pop
aaa
imul
test
addr16
mov
bound
shl
add
mov
iret
or
nop
jbe
scas
mov
dec
addr16
movswl
xor
sti
push
inc
out
xchg
orl
repz
fs
pop
fsubs
pop
out
inc
add
jmp
lret
cmp
pusha
fistl
ret
icebp
mov
mov
cmc
outsl
orl
adc
insl
mov
fwait
push
dec
fldl
stc
push
pop
rcrl
imul
pusha
movsl
sbb
mov
or
mov
mull
dec
pop
shll
out
daa
xor
and
lcall
xchg
jb
mov
mov
clc
subl
enter
adc
jns
pop
ljmp
jl
movsb
ret
mov
lods
sbb
jmp
lret
push
je
pop
std
and
add
lret
sbb
mov
test
mov
mov
adc
sbb
das
jge
in
ret
inc
rorb
cmp
pop
ds
adc
nop
mov
sub
test
cli
int
jp
insl
les
sahf
pop
jmp
xor
ss
mov
test
and
pop
cmpsb
popa
fistl
pop
jns
pop
mov
stc
fwait
mov
inc
in
in
pop
xchg
arpl
imul
or
jmp
lods
inc
xchg
pop
scas
loopne
aad
mov
lods
pop
je
rol
sbb
icebp
cmp
ja
roll
enter
and
xchg
adc
push
ror
add
sub
mov
jge
ja
fs
rcr
sti
pop
mov
call
sub
sub
push
add
push
cmp
mov
jg
push
and
sti
and
push
movups
scas
push
lahf
in
ffree
out
bound
popf
dec
int3
mov
test
in
inc
data16
inc
dec
push
pusha
aam
cld
lods
sbbb
mov
js
jnp
outsb
icebp
sbb
in
jno
push
sub
xchg
pop
lret
xor
icebp
pop
push
or
inc
comiss
call
frstor
adc
aam
push
inc
daa
fwait
mov
jle
add
fwait
jecxz
dec
inc
add
out
daa
add
mov
lds
lods
mov
sub
jp
mov
insl
call
sbb
mov
jns
mov
std
and
inc
and
xchg
jnp
subl
mov
lock
sbb
xorb
lcall
cltd
stos
arpl
dec
fstps
shlb
scas
cmp
pop
adc
jecxz
adc
insb
xlat
jge
cmp
mov
in
add
inc
mov
jp
adc
pop
adc
mov
mov
cmp
cmp
mov
push
lret
push
out
jb
lret
scas
or
sub
mov
arpl
movsb
fnstenv
lea
jb
aad
push
rolb
mov
sbb
jns
and
sub
cwtl
mov
xchg
flds
jle
insb
aaa
and
inc
mov
mov
inc
loop
pop
hlt
out
mov
push
sub
cmpb
movsb
ss
jb
mov
and
inc
inc
sbb
jge
mov
jle
pop
test
mov
divb
xor
das
fcoml
lds
jo
lcall
cmp
xchg
cvtdq2ps
mov
cmpl
pop
lock
dec
fwait
mov
dec
roll
xlat
jl
cld
jp
call
push
or
inc
in
or
gs
stos
mov
outsl
mov
inc
popa
aad
dec
xchg
jae
outsb
jb
or
mov
lock
mov
leave
jo
lcall
xlat
data16
xchg
out
test
mov
cmp
das
dec
dec
aas
ja
jmp
fbstp
cmpsl
lcall
mov
ljmp
mov
sbb
roll
ror
pop
add
mov
insb
adc
cld
test
rorb
dec
ret
cmp
rolb
in
or
popf
add
int3
cld
scas
push
fidivrl
sbb
jle
mov
mov
sbb
idiv
mov
xor
clc
and
sbb
cmp
jp
and
or
jle
jnp
or
sub
and
or
push
sub
ret
jg
cs
stos
jmp
sbb
jne
dec
loop
jae
add
rcll
cmp
adc
das
std
mov
stos
repz
stos
sti
xchg
aad
lds
mov
push
mov
ja
sbbl
andl
loop
mov
aad
mov
mov
call
imul
sbbl
les
call
push
dec
adc
adc
daa
movb
fmul
adc
js
fsubrl
pop
or
sbb
inc
int
push
or
push
sbb
xor
dec
sbb
gs
pop
in
faddl
inc
jo
and
or
cmp
ret
aaa
mov
sub
pop
cli
dec
sbbl
aad
clc
int
fcmovb
dec
mov
lods
cmpsb
xlat
or
adc
dec
fdivr
push
gs
mov
lea
cli
inc
je
lahf
adc
hlt
mov
jle
lcall
sbb
sub
scas
xchg
dec
pop
ss
mov
xchg
loope
lds
fisubl
pop
mov
pop
push
lods
sbb
rorb
xlat
fsubrl
xchg
inc
orl
push
or
push
mov
ret
xlat
ljmp
movsb
mov
mov
jecxz
in
cmp
xchg
and
fsubs
xchg
clc
ret
pop
mov
mov
mov
enter
out
mov
imul
xorb
sbb
inc
sti
inc
das
push
and
es
in
cmp
cmpsb
xor
add
add
mov
popa
mov
push
pop
push
push
lret
int3
push
jne
loopne
mov
mov
das
test
out
push
and
out
sub
dec
xchg
in
dec
sub
clc
bound
popf
hlt
insl
in
lahf
adc
and
push
jge
pop
out
cmp
xor
and
mov
lret
xor
mov
cltd
add
pop
pop
inc
xchg
mov
loop
addb
aaa
sbb
mov
inc
lcall
inc
in
pop
and
jl
stos
outsl
xor
cmc
adc
xchg
mov
or
test
mov
sbb
jmp
ret
popa
lret
neg
je
mov
adc
push
mov
outsl
jg
call
js
aas
filds
sahf
sbb
dec
je
into
mov
leave
repnz
sub
and
les
inc
push
loopne
js
xchg
jg
add
daa
inc
xchg
pop
nopl
es
repz
aad
scas
jecxz
inc
fisubs
ds
sub
dec
push
inc
dec
cmp
jbe
call
dec
test
ja
cmp
test
jecxz
fdivrs
jbe
fldcw
xor
fcomip
addr16
xor
call
hlt
out
inc
mov
and
lcall
aas
cwtl
aas
arpl
mov
clc
es
or
outsl
fisubrl
and
dec
jecxz
test
out
push
xor
rorl
fists
popa
cmp
xor
ljmp
xchg
inc
cltd
sbb
xchg
cmc
outsl
out
and
inc
nop
cmpsl
dec
ds
out
xchg
dec
or
popa
stc
sbb
and
xchg
mov
icebp
add
or
shlb
rclb
push
ret
sti
xor
test
push
xchg
test
icebp
imul
add
jl
adc
add
iret
into
inc
sarl
inc
ss
call
out
mov
xchg
push
xor
xchg
mov
hlt
and
xchg
lahf
int3
xchg
enter
test
xlat
mov
push
sbb
lea
call
loop
ret
jns
pop
sbb
in
outsb
dec
fisubs
jmp
outsb
scas
loop
shlb
lods
repz
int3
icebp
xlat
mov
cmc
pop
jg,pt
fistl
fstl
sti
or
pusha
add
push
mov
lcall
test
push
xlat
xchg
cmp
sbb
fmuls
add
in
notb
adc
mov
insb
fs
push
cld
int
mov
jmp
adc
mov
mov
push
mov
xchg
leave
icebp
out
inc
jg
enter
adc
or
pushf
sbb
xchg
scas
in
lcall
jecxz
dec
mov
jae
inc
cli
lock
or
scas
sahf
sbb
pusha
mov
lock
push
in
and
mov
cwtl
xorb
aad
dec
lds
push
add
fs
xor
and
mov
xchg
and
cmc
xchg
jle
ret
sub
loope
mov
pop
cld
repz
test
adc
loope
jno
inc
pop
lar
jnp
cwtl
inc
jnp
cld
mov
testb
xchg
xchg
bound
xchg
ljmp
lahf
lods
pop
mov
mov
cmpb
icebp
ss
mov
popa
mov
jne
mov
popf
xor
in
cmp
push
or
fdivrp
es
adc
shrb
pop
pop
repnz
xlat
sub
inc
push
push
mov
and
insl
push
jb
arpl
xlat
cmpb
cmp
movsl
push
mov
sub
push
xor
mov
daa
xchg
jl
dec
sbb
mov
sbb
cmpsb
or
shrl
scas
add
jge
adc
xchg
cmp
push
jecxz
fcmovnu
cmp
aas
and
cmp
fistps
adc
sbb
sub
add
insb
jbe
dec
lcall
pop
cld
mov
pop
aam
pop
mov
mov
cwtl
test
repz
or
cwtl
aam
or
inc
mov
cmp
sbb
cmp
std
movsl
cmc
mov
loop
cmp
mov
ds
fnstenv
incl
aad
add
out
loopne
test
and
rcll
pop
mov
inc
in
and
cmp
lock
adc
add
in
out
fmuls
push
fs
test
adc
pop
mov
add
xor
sub
data16
lock
xchg
xor
sbb
inc
cld
mov
xchg
je
mov
pop
je
retw
pushf
scas
aad
mov
xchg
fs
and
inc
jae
int
roll
cwtl
insb
stos
insl
rcrl
adc
dec
mov
sub
dec
rorb
pop
dec
pop
mov
repz
pushf
xchg
popa
je
push
test
mov
movsb
int
repz
adc
pop
lahf
xchg
inc
lret
popf
aad
sbb
ret
movl
lods
adc
mov
cli
or
and
mov
lret
in
and
and
push
xchg
jns
popf
imul
insb
xor
inc
add
and
mov
cmp
dec
popa
mov
jecxz
xchg
mov
popl
cli
and
icebp
ja
inc
pop
and
cld
sbb
or
ficoms
adc
xchg
stos
add
pop
aaa
lcall
mov
fisttps
cmpsb
in
mov
test
sbb
jne
sub
jle
insb
out
pop
sub
mov
sbbb
out
dec
lret
push
stc
mov
add
xchg
add
leave
push
pop
mov
jle
out
push
arpl
lret
mov
mov
lea
cmp
jno
dec
ret
lea
mov
pop
pop
fnstenv
lcall
popa
inc
subb
dec
dec
loopne
pushf
push
orl
mov
lret
arpl
test
leave
pushf
xor
xchg
popl
jo
xor
stc
and
movsl
out
add
addl
dec
mov
js
test
sbb
xchg
pop
loope
push
ss
nop
ds
pop
cmp
fidivrl
sbb
push
cmp
cmp
pop
pop
movsb
into
int
aam
push
mov
fidivs
push
outsb
mov
fdivrp
mov
fbld
loope
aas
inc
xor
hlt
iret
repnz
cmp
push
push
cltd
popf
jo
jns
fidivl
sub
testb
cmp
lock
xor
pop
cmp
push
ja
sub
push
or
std
int
push
cs
mov
test
js
pop
sub
stos
in
mov
ljmp
and
sub
jecxz
sti
test
pushf
fcmovnu
sub
jns
dec
mov
insl
push
leave
out
cltd
dec
jl
outsb
dec
cmp
je
ficoms
mov
fstpl
aam
mov
daa
lods
ret
iret
add
lds
popa
in
mov
cltd
ss
and
jge
insb
xchg
loopne
mov
jb
adc
cmc
clc
jbe
mov
int
gs
aas
inc
jno
add
mov
push
cld
cmpsl
and
fdivl
data16
pop
rolb
mov
lret
lods
das
mov
sub
out
fstl
out
mov
mov
xchg
lcall
inc
leave
sbb
es
mov
rorl
pop
and
mov
jnp
push
cmp
ja
push
lea
ljmp
and
adc
repz
fnsave
aad
cmp
sbb
mov
test
stos
pop
inc
aaa
test
jne
rcrb
arpl
cmp
xchg
jmp
pop
push
psllw
out
dec
pop
inc
sub
test
insl
mov
dec
or
lahf
push
inc
lcall
addr16
dec
adcb
and
xchg
loopne
mov
out
pop
nop
push
mov
pop
notl
add
hlt
sbb
mov
pop
or
mov
xchg
bound
insb
pusha
xor
dec
push
cs
sbb
or
xchg
in
pop
fs
jne
sbb
inc
sbb
jecxz,pt
jg
ret
xlat
jne
push
fs
in
out
test
gs
aas
push
ss
inc
jne
push
out
sbb
lods
jmp
out
int3
incl
or
cmp
mov
int
popf
push
xchg
lcall
push
outsb
cld
xchg
mov
lods
add
mov
dec
xchg
dec
aaa
cmpsb
jl
pusha
pusha
call
ret
stos
inc
fcmovne
or
push
adc
dec
xchg
in
dec
repnz
sbb
mov
loop
lods
dec
js
lcall
mov
popf
and
add
data16
rolb
pop
leave
pop
or
cmc
push
js
jnp
jecxz
push
xchg
sub
cmp
adc
scas
inc
insl
xor
adc
in
loop
mov
jmp
daa
lods
cmpl
cmp
mov
cmp
xchg
dec
sub
inc
rcll
rclb
mov
out
and
sbb
scas
negb
int
push
cmp
cmpsb
data16
out
mov
jns
fmuls
dec
adc
or
adc
data16
mov
mov
leave
cmp
out
aas
xlat
mov
adc
test
cwtl
mov
push
iret
mov
sub
stos
adc
pop
push
loop
ret
fs
sbb
xor
xchg
lock
xor
mov
sub
inc
ljmp
mov
mov
iret
cmp
pop
xor
pop
pop
or
sub
icebp
xchg
pop
aas
xchg
aas
jg
mov
adc
jb
push
lea
jo
and
bound
into
or
adc
movsl
testb
pop
leave
pusha
pop
mov
sbb
mov
or
sbb
adc
sub
dec
enter
xor
bound
or
xchg
mov
push
adc
adc
std
pop
and
inc
cmpsl
popf
pop
data16
cltd
jno
jbe
adc
mov
pop
and
or
push
pusha
dec
inc
sarl
mov
out
jne
xchg
stos
stos
movzbl
mov
add
sbb
jbe
dec
or
cs
test
int3
ljmp
add
xchg
jbe
sub
xchg
adc
xorl
cmpsb
inc
dec
sbbl
mov
jns
test
out
mov
loope
cmp
out
fldcw
jp
dec
pop
push
mov
jecxz
add
movmskpd
mov
test
mov
pop
imul
mov
cmp
or
adc
cmc
je
call
in
dec
inc
mov
lret
sarb
mov
mov
repnz
outsb
xchg
loope
cmp
cmp
insl
int3
dec
dec
loopne
sub
imul
cmc
jnp,pn
jae
out
add
iret
test
int
jns
lods
and
test
add
and
insb
scas
mov
mov
repz
pop
sub
je
adc
cmpsb
and
repnz
sbb
push
les
fisubrl
adc
jmp
in
push
add
push
jle
imul
aaa
push
mov
rol
inc
or
xchg
inc
pop
jae
jb
sub
andb
or
lods
jl
call
stos
xor
xchg
enter
inc
mov
pop
cmp
push
xchg
pop
sub
sbb
outsl
jns
jmp
rcr
mov
mov
cltd
pop
jge
xor
movnti
adc
cmpsl
cwtl
mov
scas
push
jae
lods
enter
fsubl
cmp
and
pop
scas
push
push
add
pop
stos
arpl
clc
add
sti
fdivr
xchg
mov
imul
mov
out
loopne
xor
and
sarb
dec
mov
divl
orb
adc
sbb
sbb
cli
lods
push
sub
jbe
stos
xor
jmp
out
push
jbe
enter
popa
push
ja
outsb
fisttpl
cs
imul
gs
test
ficompl
fdivrl
inc
fstpt
jnp
cltd
loope
push
sbb
jge
push
push
xlat
mov
mov
ret
cmp
fildll
xor
out
addr16
or
mov
push
call
and
fimull
push
cld
andb
jmp
in
or
pop
xchg
mov
mov
mov
cmp
push
lds
mov
inc
dec
cmpl
shrb
add
ljmp
jl
sub
xchg
push
shrb
mov
sub
aad
cmc
push
cs
jns
pop
push
fwait
sbb
nop
fbstp
ret
pop
fnstenv
sbb
cli
and
icebp
and
enter
cmp
jb
cmp
push
mov
cli
je
insb
int3
shll
inc
mov
pop
stos
push
mov
push
jmp
sbb
lret
jo
std
sti
fs
xchg
ret
or
jp
mov
mov
or
xchg
sahf
nop
lds
in
aam
jecxz
out
int3
adc
rolb
popf
add
dec
int
std
in
push
out
jecxz
lock
aad
mov
add
icebp
inc
int
dec
cmpsl
repz
sbb
push
stc
stos
pusha
inc
mov
sti
test
mov
mov
mov
fisttpll
or
dec
cltd
mov
inc
dec
subl
fcmovbe
je
pop
gs
cli
cmpsl
ret
push
inc
fstl
cld
push
mov
dec
pop
jmp
movsb
rolb
orl
or
aaa
out
lret
outsb
lahf
fistps
call
adc
scas
mov
jo
adc
jns
sahf
sbb
adc
xor
ja
movsl
es
or
fidivrl
int
push
sub
cli
ret
xchg
jp
in
popa
loop
add
mov
lods
dec
or
lcall
hlt
xor
fimull
mov
pop
cmp
push
loope
or
fiadds
dec
cli
or
les
mov
imul
xchg
jbe
scas
dec
fs
cmpsb
adc
add
movsb
cmc
mov
cld
daa
push
or
dec
daa
test
pop
jmp
std
and
mov
jle
arpl
setg
daa
jne
icebp
scas
in
adc
int3
std
adc
xchg
jno
mov
jns
add
cltd
sarb
push
inc
cmp
cmc
xchg
mov
pushf
pop
xchg
cmp
idivl
xchg
cmp
xchg
sti
sub
xchg
ja
or
push
les
lock
popf
aaa
lock
and
sbb
pop
or
in
aaa
sti
sub
dec
xchg
add
mov
jo
push
jecxz
int3
ss
and
movsl
ret
insl
cmp
cld
add
lret
push
jmp
and
sbb
test
inc
or
arpl
sub
xor
pop
ret
out
inc
cmp
fldcw
mov
icebp
loop
stos
leave
call
sbb
sbb
xor
test
scas
mov
cmp
jnp
xor
sub
pop
ficoms
inc
sti
adc
xlat
in
pop
mov
int3
jmp
adc
mov
lcall
insb
or
pushf
or
leave
sub
push
jmp
leave
pop
jl
cmp
push
or
andb
fidivrs
divb
xor
add
movsl
cltd
jne
cmp
repz
movl
adc
dec
cmp
imul
or
mov
ss
negb
daa
inc
pop
std
sbb
pop
dec
inc
add
data16
adc
fistpll
xor
insb
shrb
cmp
jmp
negb
scas
cmovae
push
adc
lea
pop
iret
ljmp
adc
jge
es
sarb
fstl
xor
or
lahf
push
xchg
sbb
aaa
es
popf
imul
cs
stc
inc
xchg
inc
xor
in
xchg
xchg
test
adc
lods
in
lret
out
out
in
or
in
daa
jl
lea
out
add
inc
popf
out
inc
cmpsb
and
and
rol
mov
push
clc
xchg
xchg
ret
jae
cmp
fsubs
stc
insl
lods
pop
mov
sarl
jge
je
ds
hlt
aad
lahf
jp
fdivrl
out
addr16
sbb
add
pushf
or
push
clc
pop
sub
cmp
cmpsl
push
add
dec
aas
xchg
adc
paddw
std
rol
ret
icebp
pop
adc
inc
push
mov
rcr
push
pop
aam
insl
add
fcmovne
xor
push
pop
fwait
mov
cli
outsl
mov
sbb
jle
int3
and
mov
xchg
pop
jnp
sub
mov
das
add
stos
inc
mov
mov
mov
inc
lods
sub
adc
loopne
icebp
dec
int3
mov
mov
scas
and
mov
cmp
je
adc
frstor
jnp
mov
aad
dec
rcrl
mov
jae
xchg
pop
xchg
int
sti
fdivrs
sub
cld
jl
cwtl
out
lahf
loop
loope
rcrl
inc
test
mov
scas
jne
outsb
mov
movsb
iret
jne
xor
out
mov
mov
mov
nop
sbbl
stos
pop
push
mov
pop
dec
rclb
dec
idivb
adc
sub
movsb
ja
mov
js
xchg
mov
out
sbb
adc
nop
mov
lret
jl
ret
ss
cltd
add
and
mov
sahf
int
mov
jg
stc
adc
fstps
jecxz
outsl
nop
imul
subl
mov
mov
sbb
jb
cmp
outsb
cld
sbb
sbb
cwtl
push
ja
clc
int
cmc
shlb
add
lea
jmp
or
andb
push
inc
lock
in
mov
stos
xchg
out
adc
push
inc
inc
add
pop
pop
mov
cmp
jmp
and
inc
sti
push
pusha
cmc
cmp
hlt
addr16
int
sarb
fisubrl
les
push
add
mov
or
ljmp
add
movsb
mov
rcrb
gs
test
repz
cmp
insl
loop
sub
inc
negb
fsubl
sbb
mov
lds
jo
jnp
jae
push
add
mov
mov
test
in
jecxz
or
inc
popa
pop
or
mov
mov
mov
aas
xchg
pushf
enter
mov
jb
pusha
mov
in
push
or
mov
shll
lods
mov
pop
insl
or
repnz
xchg
repnz
add
mov
js
test
and
outsl
hlt
mov
adc
mov
cmp
or
leave
jb
jmp
hlt
sbb
sti
es
sub
mov
iret
push
mov
test
pop
sub
cmp
paddb
cli
in
xchg
roll
pop
xchg
repz
add
divl
sarb
dec
je
in
dec
ja
bnd
loope
sub
push
push
dec
xor
sub
enter
sub
in
pop
lods
ret
lret
popf
xchg
xor
flds
mov
pop
fwait
sbb
frstpm(287
lret
arpl
and
bound
push
push
dec
pushf
sbb
sarl
sub
mov
sbbb
add
mov
loop
icebp
mov
and
pop
push
movsb
mov
loop
sub
push
movsb
shlb
adc
iret
out
aam
rorl
dec
movsb
pop
das
mov
jne
push
sbb
sysret
jecxz
jp
sub
mov
test
pop
mov
inc
icebp
inc
int
stc
insb
loopne
xchg
ret
or
mov
adc
dec
jp
sti
mov
sahf
pop
sbbb
les
xor
out
clc
xor
aam
jb
xor
popa
in
cmc
js
sub
mov
insl
and
popf
push
jo
repz
push
mov
lret
push
and
movsb
dec
filds
and
xchg
xchg
mov
daa
lahf
pop
jecxz
sti
mov
fiadds
jno
sbb
in
add
shrl
nop
in
mov
push
jo
es
dec
push
adc
mov
mov
or
push
outsl
push
ja
pop
jns
fwait
or
nop
cli
xchg
mov
ja
in
xchg
out
dec
inc
add
loopne
aad
push
out
les
push
inc
dec
fsubrs
xchg
jae
sbb
or
into
js
cmpsb
andl
and
pushf
stos
cmp
mov
sbb
jns
in
scas
es
or
lahf
inc
jg
add
in
mov
daa
cmp
testb
adc
add
adc
dec
mov
test
es
imul
mov
inc
dec
sti
mov
cmp
cltd
es
pusha
cmp
mov
sti
push
push
testl
adc
insl
lea
pop
pop
sarb
stos
gs
cld
sbb
aad
fsts
aas
int
pop
push
mov
pop
ja
ss
shrl
fwait
cmp
loopne
push
dec
cmp
push
in
test
and
push
in
xor
repz
xchg
lods
aaa
pop
add
or
or
fidivl
jmp
outsl
and
imul
xor
jp
or
mov
sbb
lock
lock
push
sbb
sbb
jmp
test
inc
fnsave
jae
mov
pushf
mov
mov
mov
andb
ror
sub
outsb
addr16
mov
loope
pop
pop
call
aad
xchg
pop
mov
adc
and
add
inc
xchg
neg
sbb
mov
inc
cmp
add
cmpl
sub
jo
sub
test
mov
int
pop
dec
sub
dec
mov
dec
add
jg
cmpsb
and
mov
xor
jno
std
pop
adc
mov
mov
shll
jae
movsl
mov
test
push
outsb
push
mov
cmp
inc
sbb
pop
int3
into
mov
xchg
and
into
add
dec
out
cmp
and
stos
xor
imul
jg
jne
lcall
notb
mov
xlat
fwait
or
ss
jl
je
clc
adc
lea
test
xor
mov
dec
mov
xlat
mov
out
fmul
mov
jae
iret
enter
mov
clc
jbe
xchg
das
xor
fwait
clc
dec
pextrw
mov
stc
dec
pop
repnz
lods
icebp
rolb
sbb
bound
jnp
jle
mov
push
push
cwtl
pusha
jg
sub
push
std
mov
sbbl
cmp
xor
scas
xchg
lcall
loop
sbb
jns
fwait
sti
stos
inc
jb
cmp
push
push
scas
pop
test
mov
sbb
push
mov
mov
lahf
jo
cmp
imul
lods
mov
in
fwait
dec
xor
inc
sub
pop
mov
cmc
or
repz
test
in
out
dec
imull
sub
in
stos
lock
rcrl
push
and
in
ljmp
and
out
popf
mov
mov
inc
sub
adc
gs
push
mov
out
lret
sbb
push
mov
mov
jmp
rcll
into
inc
stos
jns
sub
add
add
aad
pop
lret
lea
in
clc
stos
mov
push
rcl
xor
je
ss
pop
sub
sub
cmp
popa
and
pusha
push
dec
pop
call
add
stos
sbb
gs
xchg
shll
push
adc
je
jg
mov
jmp
bound
pop
mov
aas
or
out
xor
pop
push
or
cltd
jb
add
out
or
pop
mov
sbb
and
cltd
adc
jmp
mov
out
inc
lcall
scas
xchg
or
adcb
mov
inc
sbb
mov
xchg
ret
jns
xchg
xor
mov
fmul
push
scas
push
insb
stos
mov
xchg
sbb
and
or
mov
adc
fldl
pop
mov
push
imul
das
lea
add
add
movsl
dec
mov
stos
ret
ret
leave
ret
bound
ret
shl
mov
loope
out
add
call
out
and
inc
mov
ret
cld
jmp
insl
pop
xchg
sbb
mov
pop
adcb
fwait
pop
inc
lret
xchg
sbb
xchg
mov
push
hlt
ja
push
xor
inc
out
movsl
pop
arpl
inc
sub
push
mov
mov
xchg
test
sarl
leave
sub
sbb
jmp
arpl
add
mov
sub
cwtl
adc
in
std
outsl
aam
sbb
sub
andl
sub
push
ljmp
test
push
ss
dec
aam
mov
cmp
pushf
ss
movsb
cld
inc
fsubl
or
sarb
fnstsw
cmpsb
mov
mov
lret
in
enter
xlat
push
scas
sub
aad
add
push
xor
ret
int3
js
test
sub
aas
hlt
imul
mov
out
mov
pop
mov
ljmp
xor
adc
mov
shlb
fs
int
mov
mov
call
fnstenv
lods
adc
mov
ret
out
xchg
dec
out
dec
push
or
sbb
adc
insb
xchg
mov
mov
rorl
clc
and
inc
repz
push
aad
jg
mov
in
rorb
dec
mov
mov
or
das
scas
mov
in
fildll
push
lgs
or
sub
stc
xchg
and
aam
stc
xor
push
movsb
mov
or
sbb
in
push
subb
jmp
xor
loope
ds
adc
arpl
cs
mov
inc
push
mov
cmpsl
data16
iret
push
pop
icebp
mov
dec
sub
jno
sahf
inc
jns
mov
dec
popa
mov
cmp
sbb
push
xchg
dec
lock
enter
fwait
push
jo
loope
mul
jne
mov
scas
sub
sbb
enter
call
divb
cmp
adc
push
add
ret
inc
pop
neg
es
ja
or
insl
daa
fiadds
test
int
ss
inc
pushf
cs
pop
adc
pop
ss
xor
outsb
shrl
pop
mov
mov
std
jge
xchg
enter
push
stos
stos
arpl
and
orb
inc
ret
loop
clc
sub
xchg
sbb
and
pop
enter
pop
xchg
xor
mov
into
or
mov
stc
mov
cmp
mov
sub
xor
loope
lea
je
clc
mov
dec
mov
lods
aad
test
and
xor
cmp
pop
jmp
pop
lea
mov
xchg
push
xchg
fdivl
leave
adc
bound
mov
pop
hlt
stc
sub
mov
add
subl
cltd
mov
inc
cmp
rcll
or
mov
lahf
notb
hlt
outsb
dec
movsl
push
aam
sub
mov
bound
aas
xlat
jnp
clc
popf
std
or
mov
cs
daa
les
dec
rolb
into
mov
lea
sti
je
push
popa
repnz
mov
inc
mov
call
xchg
mov
fistps
xchg
cli
inc
push
lods
inc
popf
jns
subb
mov
movsb
add
add
pop
jg
push
xor
push
insl
adc
mov
out
jg
les
cltd
insl
cmpl
ficomps
push
mov
cmpsb
ds
je
imul
andl
push
mov
fdivl
out
sub
data16
inc
aaa
repz
push
sub
stc
pushl
popa
adc
jae,pt
sbb
cltd
push
fdivl
jmp
push
ret
jnp
push
outsb
inc
push
ds
mov
dec
test
xchg
les
test
ljmp
adc
cmpsl
inc
or
rclb
pop
cwtl
xchg
addl
cmp
data16
jo
int
cmp
jcxz
mov
fs
leave
cmpsl
pop
mov
testb
out
jl
ja
arpl
rcll
mov
es
shlb
clc
nopl
mov
or
or
bnd
or
sub
xlat
mov
mov
sbb
sbb
mov
mov
jmp
mov
aas
jns
cli
jg
ja
dec
cmpsl
test
popa
das
lock
fidivrl
aas
adc
les
xor
and
cmp
and
test
push
pop
sahf
inc
push
adc
out
insb
xor
jne
lods
push
jp
xchg
or
jmp
ja
movsb
sbb
and
inc
pop
enter
pop
mov
pop
mov
sbb
push
dec
mov
ja
arpl
mov
leave
ret
mov
mov
pop
jns
xchg
sbb
jecxz
testl
cld
insb
out
cld
dec
push
ss
rcrl
mov
push
mov
int
mov
sahf
cmp
je
lcall
mov
sbb
cmp
mov
aam
adc
je
loopne
pop
dec
ljmp
in
sub
std
lret
scas
adc
ret
adc
inc
es
das
mov
imul
and
scas
add
dec
mov
mov
iret
mov
leave
clc
lock
dec
xlat
push
mov
add
rclb
jle
cmpl
and
lods
or
xchg
adc
popf
push
call
outsb
stc
ljmp
das
mov
sbb
fs
movsb
cmp
push
add
lds
aaa
mov
sbb
push
add
insl
dec
inc
stc
mov
mov
aam
shrl
xchg
out
sub
xchg
xchg
add
push
cmpsl
sbb
aad
dec
sbb
xchg
xor
popa
aaa
loopne
mov
jge
neg
jmp
fcom
jno
imul
loop
fdivrs
push
xchg
sub
adc
imul
xor
aas
dec
mov
aad
test
push
in
lds
mov
jns
dec
mov
mov
popf
test
out
daa
sarb
sub
mov
xchg
jg
jmp
iret
and
dec
icebp
mov
test
inc
and
mov
cmp
aaa
inc
leave
xor
or
jb
sub
add
mov
scas
xchg
test
and
clc
inc
mov
aaa
imul
pop
inc
sbb
sub
jecxz
sub
sub
mov
fistpll
lret
xor
int
hlt
fwait
pop
loope
movsl
mov
push
std
dec
clc
push
call
mov
hlt
add
std
inc
lahf
pop
xor
stos
jl
mov
or
sbb
clc
pop
decl
pop
add
int3
mov
into
lds
cmpl
shlb
dec
pop
fldcw
insb
lods
cli
rcr
jnp
cwtl
add
or
push
xchg
xorb
and
lock
test
loope
or
xor
sbb
scas
addr16
xor
leave
mov
xchg
jmp
mov
push
dec
mov
mov
xchg
out
aaa
repz
fidivs
lret
xchg
cmp
inc
pop
arpl
and
xor
inc
sarb
ja
inc
push
and
xchg
rcrb
push
fcoml
loop
dec
jg
fistpl
push
outsl
repz
call
or
in
push
pusha
mov
mov
xchg
imul
mov
cwtl
xlat
mov
mov
jb
adc
jo
hlt
lock
lahf
lret
roll
data16
xchg
jle
out
cmp
mov
cmp
and
add
pop
pushf
cmpb
jb
or
or
fucomip
mov
push
jnp
xchg
pushf
adc
out
ret
rcr
sub
in
arpl
xchg
icebp
icebp
loop
aam
lahf
cmpsl
out
push
roll
adcl
stos
insl
mov
mov
adc
and
mov
mov
mov
stos
mov
cld
movsb
cmpsb
sbb
inc
adc
clc
rol
sub
xchg
mov
outsb
test
mov
mov
insb
add
ss
push
pop
inc
in
ror
mov
add
pop
xchg
repnz
es
jp
sub
shlb
sub
sbb
jnp
enter
cmp
andb
and
inc
test
add
and
mov
cmp
call
aaa
test
cmpsl
in
outsl
mov
shll
mov
lods
subl
add
cwtl
jb
add
xor
out
xchg
xor
stos
or
push
iret
ret
test
jae
mov
add
les
xor
aam
ds
xchg
adcl
pop
mov
popf
jmp
test
or
orb
add
decl
xchg
clc
imul
fcomps
std
jns
fdivrl
xlat
pusha
add
cmp
sbb
mov
cmc
repnz
mov
or
pop
les
aam
dec
and
adc
insb
cmp
bound
repz
aad
mov
dec
cmpsb
adcb
jle
lock
nop
jae
cmp
or
xor
sbb
cmp
lea
mov
adc
dec
push
mov
xchg
mov
sbb
lahf
ret
imul
ljmp
lods
and
jo
sub
xchg
int3
popl
sub
in
data16
test
mov
or
mov
fisubrs
cli
mov
sbb
iret
or
pusha
fistpll
icebp
ret
popa
lods
ss
mov
fdivrl
push
sarb
cltd
jae
mov
push
inc
xchg
push
xchg
push
sub
cmpsl
or
enter
push
repz
into
std
fistpll
pop
jge
mov
orb
xchg
adc
fmull
movsl
cld
cmp
push
inc
test
cmp
mov
in
mov
jl
out
push
jg
cld
xchg
lcall
ja
sbbb
mov
dec
loopne
stos
insb
xor
and
push
ret
xlat
mov
cmp
cmp
mov
mov
sub
ja
loope
inc
jnp
cwtl
xor
push
inc
fwait
icebp
or
lret
sbb
es
loop
lods
shrb
and
mov
push
pop
lods
xchg
jp
mov
xchg
xor
add
ja
fcoms
lcall
imul
roll
cli
xchg
mov
jmp
dec
imul
pop
add
bound
ret
push
and
and
sahf
ret
adc
enter
dec
pop
mov
add
je
orl
sub
pop
popa
mov
sub
mov
jmp
int
push
xchg
lds
out
push
lea
scas
rcl
stc
sarb
je
push
idivb
or
fstpl
and
int
stos
mov
xor
gs
in
adc
pop
mov
popf
mov
inc
rcrl
sbb
push
sbbb
xor
cmc
dec
mov
cmp
pop
sub
repz
cmpsb
orl
imul
or
or
cmp
or
and
loop
inc
popf
out
gs
sub
xchg
aam
adc
mov
cld
lea
fcomps
cmpsb
mov
push
out
push
mov
push
movb
mov
ja
scas
xchg
pop
insl
push
fisttpl
rcll
sahf
push
icebp
mov
addl
adc
jno
mov
outsb
cltd
fsts
push
cs
push
lcall
imul
pushf
loope
test
fwait
push
jecxz
xor
loop
das
cmpsl
nop
ja
loopne
xchg
ja
add
pop
les
mov
inc
rclb
xchg
flds
lcall
xchg
xor
rorb
ja
hlt
mov
das
inc
data16
popf
hlt
sub
into
shl
push
pop
mov
shrl
jo
inc
jo
js
dec
xchg
outsb
adc
add
out
rorl
out
rorl
test
mull
xor
std
sbbl
clc
sarb
aaa
jnp
mov
or
outsb
cmp
adc
outsb
mov
sbb
jecxz
jmp
xor
insl
stc
inc
decl
dec
xchg
xchg
sbb
data16
cwtl
and
lds
pop
sbbb
test
enter
jecxz
gs
insl
pop
sti
sub
cmp
add
lock
and
scas
stos
in
fdivp
jbe
movsl
push
sbbb
cmp
push
pusha
or
pop
sub
mov
xchg
dec
fcmovnb
dec
mov
adc
push
and
xchg
add
clc
jb
cmpsl
and
jmp
outsl
int3
inc
loop
pop
into
fdivrl
mov
js
sbb
outsb
push
xchg
in
pop
pop
mov
push
cs
mov
cmp
dec
pop
outsl
xchg
jecxz
insl
xchg
lods
mov
out
ds
push
dec
sbb
xchg
sbb
mov
xor
fisubrs
ret
mov
mov
jmp
mov
and
add
roll
lcall
cld
negb
add
xchg
adc
sub
call
and
sbb
test
arpl
cwtl
mov
pop
into
loopne
mov
enter
lds
stc
fwait
and
gs
int3
repnz
push
int
jle
scas
sbb
clc
xchg
sub
int3
cs
int
sbb
ljmp
in
sti
out
push
fcomp
jge
xor
mov
dec
push
sti
imul
inc
inc
jl
jb
inc
outsb
xchg
jmp
shlb
sbb
ljmp
bound
push
jmp
pop
dec
jbe
repz
xor
iret
movsl
adc
dec
cmc
sub
sub
and
push
jmp
js
push
mov
jne
rcl
repnz
and
jmp
sbb
dec
movsl
pushf
clc
or
sbb
sahf
ljmp
jns
mov
mov
jg
xchg
test
xor
inc
pusha
and
mov
sbb
cmpsl
inc
popa
ret
outsl
loope
xor
shll
push
or
jle
fnstsw
sahf
jl
mov
add
jnp
xor
das
andb
hlt
fsubl
mov
stc
mov
scas
push
sarb
flds
dec
adc
addl
mov
mov
in
or
xchg
mov
ret
imul
jae
fistl
sbb
fsubrl
iret
in
xlat
pop
mov
jno
pop
adc
cmpl
dec
leave
mov
stc
add
push
imul
mov
fstpt
int
add
mov
dec
scas
pop
out
pusha
inc
hlt
add
sub
in
jecxz
out
mov
fstpl
jae
sbb
rcr
inc
pop
sbb
push
mov
cmp
push
xlat
add
loop
mov
sti
sub
mov
pushf
adc
or
push
stos
jae
loope
mov
ds
rorb
fistpl
jecxz
lods
aas
or
mov
insb
sub
lods
jae
fcomi
rclb
sbb
push
fsubp
into
sbb
cmp
add
adc
xor
xor
mov
sbb
xchg
xchg
les
pusha
push
xchg
lock
cmp
test
sub
sub
push
sub
inc
mov
xchg
and
push
inc
cmp
in
adc
mov
xor
dec
sti
push
and
or
shl
push
xor
ljmp
stc
jnp
icebp
stos
mov
push
sbb
popf
jns
mov
jl
movsl
xchg
out
xchg
ljmp
inc
pusha
xor
mov
or
and
hlt
sub
cmpxchg
sti
out
cmpsl
lock
pop
inc
push
cwtl
mov
dec
xchg
outsl
dec
sub
lea
sub
jp
rcrl
mov
add
mov
mov
arpl
repnz
pop
sub
shlb
mov
mov
ja
sbb
fidivs
movsb
mov
out
adc
inc
push
dec
ret
inc
leave
mov
push
data16
mov
push
shlw
xor
ljmp
xchg
mov
xchg
out
mulb
sbb
testl
out
jmp
push
mov
push
push
or
stos
fidivl
insl
pop
mov
mov
lea
in
inc
outsl
lahf
push
shlb
add
xchg
fs
xchg
sbb
mov
sub
cmc
sub
shll
pop
sub
inc
mov
push
fistpll
mov
push
aad
stos
into
fisubrs
mov
push
xor
es
jb
push
add
repz
dec
sbb
cmp
test
inc
leave
sbb
ja
pop
pushf
adc
fsts
mov
sub
loope
mov
add
stos
loopne
shr
shll
out
ljmp
xchg
mov
push
dec
mov
addr16
pop
adc
mov
add
pop
gs
test
pop
popa
loope
test
enter
rol
test
pusha
dec
pop
insb
jg
push
sub
jecxz
mov
lret
int3
sbb
sub
clc
enter
sahf
iret
loopne
outsl
imul
jmp
in
and
pop
xchg
ss
or
fimull
jmp
sbbl
push
loop
inc
repz
sub
sbb
js
adc
push
int3
xchg
sbb
add
adc
xor
xchg
mov
jbe
and
mov
insl
mov
pop
push
mov
xor
jno
dec
mov
movsb
jnp
cmp
jge
sbb
shll
mov
sub
inc
jp
imul
mov
ja
pop
in
orl
cli
jg
hlt
inc
sub
lock
pop
push
cmpsb
xchg
jne
test
imul
fdivrs
mov
int3
insl
js
cwtl
out
jbe
les
inc
push
shlb
fstps
jecxz
mov
sbb
jecxz
in
push
hlt
adc
push
or
xchg
out
xor
cmp
jnp
jns
dec
pop
scas
or
cs
sti
test
add
icebp
fwait
std
into
xchg
addr16
outsl
int
pop
pop
nop
xlat
xlat
adc
bound
out
test
push
inc
mov
inc
aad
pop
pop
mov
andps
subl
fcomps
call
xlat
push
push
ljmp
cmp
or
repnz
push
arpl
mov
lahf
inc
incl
mov
xor
les
or
cli
jle,pn
js
mov
pop
push
leave
test
pop
popa
mov
mov
xlat
imul
mov
sub
hlt
push
popa
xchg
sarb
dec
cmp
cmp
dec
jle
movsl
repnz
leave
popf
ja
popf
or
inc
stos
sbb
sub
je
lahf
push
mov
push
xchg
cs
pop
dec
xor
dec
repnz
push
sub
mov
pop
rorb
mov
lods
fs
mov
sub
push
outsb
dec
sub
lret
icebp
inc
adc
pop
pop
pop
inc
cli
lcall
fistps
lods
or
les
mov
repnz
add
dec
jo
add
adc
sbb
pop
jmp
xchg
cmp
xchg
lret
stos
fwait
push
nop
pop
push
cmc
mov
mov
xor
mov
fmull
pop
and
push
inc
mov
hlt
lcall
cmp
and
or
jp
leave
add
mov
mov
xlat
fs
mov
push
jbe
hlt
scas
sbb
push
sahf
xchg
popa
out
and
push
pushf
cmp
aas
sub
iret
dec
movsb
cmp
dec
cmp
inc
mov
jne
and
test
push
into
or
dec
sbb
pop
pop
inc
adc
add
fnsave
shrb
add
and
adc
lcall
rcrl
roll
inc
cli
add
ret
jbe
xor
ds
inc
xor
xchg
jl
push
sbb
lcall
pop
mov
gs
imul
test
mov
push
arpl
pop
out
mov
lret
lcall
leave
jge
popf
dec
sub
mov
pushf
jae
shr
xor
inc
pop
ret
mov
add
aad
pop
jns
ret
push
popf
cli
outsb
les
push
rcr
iret
xchg
push
push
rorb
mov
adc
xlat
inc
jo
dec
push
jecxz
dec
mov
imull
mov
push
push
add
in
daa
jecxz
push
sub
outsb
outsb
orb
push
or
fdivrl
das
cmp
jecxz
cwtl
sub
insb
mov
fists
clc
lock
jg
cltd
dec
inc
or
mov
inc
dec
aam
fwait
adc
mov
sti
testl
jo
pop
call
insb
call
mov
add
or
aaa
outsl
sub
enter
hlt
mull
fldt
cmovae
int3
div
or
and
push
insb
iret
and
cmp
das
sub
fiaddl
mov
int
adc
ror
movsb
sbb
jb
mov
das
jae
add
cmp
ret
pusha
mov
inc
mov
fs
subb
ds
std
push
dec
mov
test
or
dec
sub
cli
mov
test
js
shl
fs
imul
push
and
in
lods
data16
in
sbb
lret
or
sbb
in
inc
push
push
sub
push
fldenv
in
fisubrs
sub
mov
add
xor
push
pop
int
sub
mov
mulb
sbb
lods
int3
sbb
push
push
push
dec
ret
loopne
and
xor
xor
mov
pop
cmp
dec
shll
lock
mov
mov
add
test
repz
inc
xchg
mov
loopne
inc
aad
sbb
clc
rolb
jge
ds
jb
dec
outsl
mov
js
stc
fdiv
scas
hlt
sub
es
add
sub
pushf
mov
aam
dec
mov
xchg
adc
dec
inc
jg
fs
stc
scas
lock
adc
addr16
pop
jp
nop
add
es
lcall
xchg
frstor
call
pop
pop
push
mov
pop
add
or
addr16
xchg
mov
jecxz
sbb
add
ja
lcall
pop
jge
stc
sub
movb
jecxz
cmp
mov
push
popf
adc
pop
add
shlb
out
leave
mov
mov
sbb
int
int3
mov
and
out
test
jnp
mov
imull
pop
insb
pop
jle
fstp
outsb
xchg
orl
xchg
aaa
nop
xchg
pop
sbb
mov
jb
test
sbb
mov
addr16
push
mov
cmp
pop
subl
cmpsl
push
outsb
inc
xor
mov
popf
push
ds
mov
sub
jno
xchg
les
mov
stos
inc
arpl
sub
sbb
sbb
adc
ds
arpl
cmp
sbb
jb
or
ret
outsb
cmp
in
aam
scas
ljmp
pop
jne
add
pop
aad
addr16
jcxz
sbb
xchg
jge
popf
int3
int3
cmpsl
or
popa
mov
in
xchg
lods
cmp
sti
inc
scas
push
inc
pop
sbb
sbb
test
hlt
add
loope
fwait
pop
sub
push
mov
lods
jle
outsl
mov
mov
xor
pop
xor
fwait
add
mov
pushf
sbb
mov
ljmp
jg
data16
mov
sbb
jnp
imul
jl
ret
cmp
sub
int3
cmc
push
jg
or
dec
pop
in
inc
xchg
sub
into
in
stos
iret
mov
mov
scas
fs
push
popa
das
fistpl
test
xlat
mov
pusha
cmp
ret
pop
pop
jno
in
cmp
lret
fistpll
add
scas
xchg
xor
fs
outsl
dec
fldl
outsl
mov
divb
pop
jmp
aad
imul
shll
data16
aas
jg
mov
inc
xor
loop
fs
mov
add
pusha
lea
push
or
or
cld
or
inc
sub
je
mov
cmp
rol
decb
add
popl
cmp
cmpsl
push
fnstsw
xchg
movsl
inc
dec
cmp
cmp
sub
andl
ljmp
or
outsl
rcrb
add
movsb
out
stos
and
call
xor
or
ret
add
xchg
xor
lods
fsincos
es
mov
adc
sahf
movsl
fcmovnbe
daa
dec
cli
dec
adc
add
and
int3
lahf
aas
or
mov
mov
out
in
fisttps
push
pop
push
lret
cmpl
add
jnp
divl
test
int3
loop
and
inc
jl
ja
adc
push
or
add
testl
cmp
lea
jmp
jecxz
mov
test
mov
fistpl
mov
mov
xlat
add
ds
add
cmp
jecxz
mov
loopne
sarl
push
xchg
and
call
mov
stos
and
mov
in
xchg
jae
insb
shlb
sbb
mov
add
pop
mov
stos
pop
loop
cli
fwait
adcb
fs
repnz
cmp
shll
inc
add
popf
jno
xor
cmpsb
aam
or
lcall
fsubl
xor
pop
dec
out
psubb
roll
or
push
push
lret
jb
inc
cmp
cmp
je
or
inc
mov
sub
push
mov
mov
lahf
orb
xchg
test
mov
cld
ljmp
fisubrs
leave
loope
pop
sahf
and
sbb
cwtl
cmc
out
adc
xor
sub
xchg
sbb
aas
jae
inc
loopne
cmp
pop
mov
or
mov
nop
lahf
add
das
andl
inc
dec
sbb
cltd
sbb
or
mov
adc
push
cmp
fdivrs
stos
daa
sti
clc
out
mov
mov
fstps
bnd
loope
push
mov
adc
lods
lret
inc
loopne
inc
sbb
push
cwtl
xor
lods
aad
in
mov
xchg
jnp
jl
xor
fs
dec
cld
lcall
sbb
arpl
mov
clc
mov
sbb
imul
xchg
cmp
in
pop
sbb
jo
adc
jbe
add
dec
push
adc
mov
and
hlt
faddl
popf
mov
cmp
push
out
lods
nop
push
mov
add
aam
inc
or
leave
push
push
pop
pop
push
dec
and
mov
jmp
cmpsl
addr16
test
int3
pop
push
jle
push
sbb
cmp
adc
jg
imul
and
xchg
sub
mov
mov
jle
mov
mov
sbb
out
push
add
cli
mov
nop
sub
cli
xchg
inc
lahf
xchg
les
pusha
push
or
xlat
fwait
enter
sub
filds
arpl
daa
outsb
repz
das
cmp
sar
sti
addr16
dec
mov
fidivrl
push
mov
cmpsb
jns
scas
pop
jnp
bound
rorb
xchg
lcall
ror
jecxz
iret
lret
cmp
sub
pusha
outsl
insb
inc
je
bound
fistps
sub
hlt
xor
and
dec
mov
add
out
jmp
dec
inc
add
mov
push
loop
enter
gs
test
out
xor
jo
inc
adc
jmp
pop
loope
mov
stc
inc
lock
xor
xor
fnstcw
jno
stc
lock
imul
fists
pop
xchg
and
aam
mov
daa
mov
jge
jo
stc
jae
sub
loopne
ja
inc
and
pusha
mov
push
fadds
icebp
mov
add
fidivl
ret
repnz
xchg
pop
sub
rorb
push
jno
dec
xor
mov
ljmp
pop
xor
insb
push
pusha
push
push
xchg
inc
sbb
stos
jg
fisubl
inc
mov
push
fprem
repz
outsl
add
push
aaa
jl
arpl
mov
push
pop
aas
daa
add
out
int
cld
pop
lret
mov
clc
jo
mov
jnp,pt
out
pop
mov
insb
or
inc
xor
ja
push
shl
pushf
adc
xor
push
mov
rorl
pop
add
movsb
in
mov
adc
in
ds
rcr
lcall
test
jecxz
mov
pop
add
push
add
cld
inc
sarl
into
adc
sub
jae
pop
mov
fisttpll
pushf
sahf
adc
lock
inc
jo
repz
fwait
mov
jmp
icebp
mov
fsubs
rcrl
shr
sub
fwait
jb
add
icebp
shrl
lock
clc
push
aam
cmp
push
pop
aad
mov
mov
test
int
cmove
rcrb
or
ds
stc
push
or
push
dec
test
jecxz
rolb
inc
push
dec
negb
mov
sahf
shl
pushf
mov
sbb
adc
push
les
loop
sub
mov
rcll
stos
xchg
ds
shll
psubsb
xchg
push
sahf
insl
outsb
lods
push
nop
mov
mov
es
sbb
shrb
xor
add
xchg
fisubs
sbbl
pop
loop
jle
jmp
xor
orb
push
cmpsl
out
or
and
testl
sub
xor
gs
leave
xchg
cmovle
cmpsl
mov
xor
test
cmpsl
lahf
pop
push
faddl
dec
mov
hlt
mov
aas
adcb
xchg
add
js
or
aaa
cmpsb
iret
test
push
dec
jge
imul
adc
fwait
jae
mov
sub
mov
dec
inc
andb
pop
jp
in
aad
cmpb
pusha
lock
fwait
push
xchg
pop
push
dec
mov
mov
sub
clc
jecxz
and
sbb
out
dec
jg
cmp
maxps
pop
fs
mov
int3
int
jnp
dec
stos
out
cmp
shll
add
movsb
sub
ljmp
ljmp
mov
test
xchg
adc
repz
mov
ret
mov
iret
cmp
cld
mov
shr
loopne
fs
cmp
addr16
cltd
xchg
pushf
and
or
push
xlat
loopne
iret
orb
test
and
in
adc
xchg
push
hlt
xchg
mov
jecxz
mov
cmp
xor
mov
bound
rcl
cmp
nop
cmpl
add
roll
int3
cli
sub
pop
addr16
and
cltd
faddl
adc
scas
lods
enter
jno
test
mov
mov
stc
mov
and
insl
cmp
jl
adcb
iret
mov
fidivrl
enter
scas
fucom
mov
shrl
or
xchg
xchg
hlt
nop
fstp
push
or
jne
scas
mov
xor
or
xchg
dec
adc
or
mov
pop
out
imul
imul
and
data16
nop
cmp
lahf
hlt
mov
enter
testl
and
push
xchg
xchg
dec
xor
pop
fwait
mov
cli
add
test
movsb
dec
cmovns
cmp
xor
xchg
mov
xchg
mov
dec
or
adc
in
cs
call
pop
sbb
or
mov
dec
sub
mov
bound
mov
push
mov
scas
repz
and
pop
aad
jbe
sbb
add
loopne
movl
out
rcl
lods
mov
cmp
pop
clc
ffreep
shl
and
xchg
stos
jg
jmp
lods
push
lcall
lret
xor
or
into
pop
stos
sbb
pusha
or
jge
mov
cmpsl
mov
lods
pop
add
dec
sarb
rorl
cld
push
cmp
sbb
fstpl
xchg
call
xchg
xor
mov
rcrb
mov
xor
sbb
shrl
inc
jno
movsb
aaa
out
adc
call
mov
js
sub
sub
repz
imul
and
mov
dec
cmpsl
in
in
push
pop
push
lret
push
aad
mov
arpl
les
mov
idiv
xchg
pop
test
jecxz
inc
outsl
sub
jns
imul
adc
pop
dec
mov
mov
sbb
pop
gs
mov
test
dec
adc
lock
mov
mov
cmpsl
call
ja
stos
pop
mov
sbb
popf
pop
sub
adc
push
filds
clc
pop
inc
xchg
lods
sub
jmp
movsb
sub
sbb
push
sub
mov
fs
icebp
pop
jmp
aaa
pushf
repz
inc
or
push
in
repz
mov
cmp
push
arpl
int3
daa
cmc
mov
outsb
push
xor
inc
xchg
icebp
loope
dec
in
jp
fimull
pushf
in
xchg
ds
or
cltd
xor
cmp
pop
rclb
and
rcrl
mov
xor
gs
mov
aas
pop
loopne
jp
repz
test
xchg
dec
or
mov
testl
sarl
ss
outsb
or
and
push
movsl
repnz
inc
ret
rorb
mov
inc
mov
mov
stos
subl
jnp
ljmp
test
xchg
sub
aaa
fcmovne
lahf
mov
sub
cmp
pop
push
xchg
push
xchg
inc
push
out
cltd
scas
enter
inc
lods
testb
pop
push
pusha
dec
mov
pop
stos
push
and
into
les
dec
lret
out
jg
mov
sbb
int3
out
mov
xchg
or
cmp
and
add
inc
dec
xchg
add
dec
inc
push
jp
movsl
mov
dec
inc
jae
jp
add
imull
ss
arpl
mov
fisttpl
pop
and
and
sub
push
mov
and
fdivrs
sub
das
arpl
push
dec
jmp
incl
lret
xchg
push
jecxz
fimuls
psubusb
hlt
xchg
das
adc
push
adc
pop
fs
add
xchg
mov
mov
decb
jne
fwait
sbb
jns
out
pop
push
stc
lret
jns
pusha
arpl
aas
out
fdivrl
and
rol
xchg
rclb
jecxz
dec
inc
xor
scas
pop
or
sub
fs
shll
mov
pop
add
mov
aas
mov
push
movsb
cmp
int3
or
shr
call
inc
repnz
mov
push
adc
lods
ret
cmpsl
fbstp
mull
cmp
add
mov
out
mov
outsb
repz
jnp
adc
and
pop
iret
nop
mov
fwait
nop
clc
inc
cs
jnp
push
cmp
push
enter
sbb
sbb
xor
outsl
push
adc
stos
mov
sub
pop
daa
inc
in
push
mov
push
mov
dec
mov
daa
add
test
jle
movsl
iret
arpl
push
data16
rorl
lds
hlt
add
mov
arpl
add
testb
jecxz
mov
in
inc
dec
push
lods
out
inc
mov
cld
pop
std
addb
lret
aad
loop
push
jns
shll
ret
xchg
fwait
add
test
jo
pop
cmp
ds
clc
xor
dec
sub
inc
pop
dec
int3
push
mov
or
xchg
mov
xchg
enter
add
pop
ljmp
jmp
xchg
jecxz
arpl
imul
sbb
std
push
nop
mov
sbb
inc
pop
testl
dec
lea
daa
pop
and
jbe
xchg
jb
int3
stos
loope
mov
jne
push
push
pop
sub
inc
inc
cs
test
rsqrtps
or
int3
sub
jg
cmp
insb
scas
xchg
lock
sbb
jb
aad
popf
fcoms
inc
aaa
add
sahf
pop
push
push
dec
sbb
pop
adc
es
je
dec
movsb
cmpb
fldcw
inc
push
sbb
out
xchg
pop
add
scas
lods
test
or
push
ja
sub
rcrl
xchg
xor
cld
shrl
jmp
into
mov
mov
stos
popa
ror
mov
inc
mov
in
or
jae
and
lds
add
and
fwait
dec
dec
inc
push
mov
jae
stos
jns
ja
pop
fnsave
pusha
pop
xchg
jno
aam
mov
xchg
fsubl
js
ficoms
push
cmp
pop
xor
mov
mov
jl
cmp
pop
sub
sahf
mov
xor
mov
or
out
add
ror
push
inc
call
arpl
call
or
inc
xchg
xor
add
push
add
mov
pop
lret
mov
jmp
ror
adcb
popf
and
aaa
mov
call
sti
add
sub
lea
mov
cwtl
jbe
xchg
lock
or
or
daa
repnz
rclb
dec
add
ds
cltd
fists
sub
in
and
cmp
cmp
out
je
lahf
mov
roll
lods
xor
jge
mov
pop
sbb
fists
repz
loope
gs
mov
and
pop
mov
dec
push
mov
lds
bound
ret
fwait
mov
jne
je
mov
add
jg
dec
mov
push
les
aaa
test
stos
test
into
sti
mov
ja
insl
cmp
ljmp
cmpsl
jg
out
std
cmp
xchg
loop
lds
sub
lret
in
fwait
pop
or
mov
iret
icebp
xor
sbb
movsl
insb
adc
testb
jp
data16
cld
inc
filds
push
mov
fmuls
and
les
test
pop
xchg
fdiv
cwtl
ljmp
mov
cmp
std
fdivrl
ret
sbb
ficompl
ss
data16
xchg
fldl
fsubrs
call
and
jge
dec
int
orl
pop
inc
or
test
inc
or
rcrl
sub
les
pushf
test
das
fs
test
test
outsl
and
xchg
cmp
mov
and
je
jnp
xchg
mov
xchg
or
sbb
shl
push
mov
xchg
xor
push
lret
fxam
sar
in
mov
inc
mov
hlt
test
out
pop
shrb
dec
pop
mov
add
mov
pop
int3
enter
lock
shlb
jge
mov
xor
mov
lods
ret
daa
fcoms
enter
push
idivb
imul
fnstsw
push
jge
mov
or
sti
sbb
mov
xlat
pop
adc
xor
pusha
push
xchg
in
mov
test
cmpsb
adc
dec
or
inc
jp
adc
pop
sub
test
out
jl
mov
aad
or
jecxz
and
pop
push
mov
insb
ficoms
int3
lret
dec
das
cmp
pop
mov
loope
into
shrl
pop
pop
cld
mov
in
aad
mov
mov
adc
or
mov
fucomp
add
js
ljmp
mov
jp
pop
dec
test
int
mov
pushfw
popa
cmpsl
sbb
fwait
in
sbbb
mov
or
cmp
xorb
push
dec
les
sti
mov
sbb
ds
popa
das
lock
pusha
or
lods
inc
xchg
aam
mov
jp
out
cmpsb
out
mov
or
or
adc
cli
ret
push
lahf
sbb
xor
dec
repnz
jno
js
lret
clc
daa
data16
je
add
orb
cltd
imul
stos
scas
pop
in
mov
cltd
dec
mov
jle
cmpsl
xchg
imul
sub
pop
xchg
jno
add
clc
jl
adc
sub
in
pop
mov
cltd
loope
and
andb
cmp
mov
xchg
push
movsl
rorl
mov
jl
pop
or
in
adc
lret
shl
loopne
mov
sub
jp
in
fs
adc
cli
mov
das
and
inc
xchg
push
lcall
push
inc
std
xchg
pop
xchg
divb
cmc
push
jmp
pop
jmp
fsubrp
cmp
and
sbb
and
inc
jl
divb
ret
loope
fsubrs
inc
sbb
loopne
inc
cmp
repz
jno
add
lret
ret
inc
fwait
fwait
cmpl
das
das
in
or
xchg
push
add
cmc
stos
ss
or
clc
xlat
mov
xchg
jo
lods
mov
out
fcompl
inc
int3
insb
rorl
mov
lock
or
icebp
call
xor
loop
pop
std
jns
dec
in
fcmove
dec
daa
jl
sysret
mov
stos
and
enter
xorb
icebp
cmp
sbb
popf
xchg
inc
ret
mov
and
ja
mov
je
scas
jge
xor
imul
fcom
mov
je
sub
ja
mov
add
add
fisubrl
add
stc
mov
ltr
inc
add
xorb
dec
imul
mov
mov
inc
sub
push
gs
mov
movsb
jmp
out
in
lea
jne
mov
cs
mov
jg
xchg
and
jmp
pop
sahf
jge
sbb
cmpsl
movsl
adc
test
xchg
mov
in
enter
mov
and
pop
dec
sbb
gs
mov
out
xchg
divps
nop
lods
cmc
mov
xor
xchg
test
pushf
dec
lcall
cmp
xlat
inc
fsubrs
mov
mov
shll
orl
push
lahf
ja
cmp
and
mov
ja
xor
jns
int
bound
es
nop
mov
add
cli
pop
dec
xchg
fsub
inc
addr16
push
adc
mov
movsl
mov
stos
pop
sub
outsb
jl
mov
inc
push
mov
pop
das
sbb
push
dec
pop
push
inc
jno
push
repz
xor
daa
mov
scas
jp
push
stc
jns
inc
push
in
fwait
sub
push
pop
in
pop
aam
or
mov
pushf
jnp
mov
jne
lock
lds
sbb
stos
cli
and
inc
lds
sarb
ret
adc
fcmovne
ss
xor
jg
jnp
inc
cltd
sub
xor
inc
sbb
jns
test
pop
xor
mov
sub
or
sarl
das
test
adc
jno
push
xor
pushf
xchg
inc
fsts
andb
aad
mov
cmp
sti
pop
es
das
mov
mov
mov
ret
dec
loopne
test
cmp
dec
inc
xchg
daa
or
clc
dec
mov
and
aad
out
test
out
je
loop
dec
imul
faddp
arpl
ficoms
lock
sbb
dec
bound
aad
pusha
loop
mov
bound
xchg
xchg
push
push
inc
aaa
inc
xchg
fs
repnz
pop
jns
dec
lock
jae
xor
push
es
inc
jmp
hlt
add
and
sub
leave
or
xchg
mov
cmp
daa
xor
pop
push
pusha
cs
dec
jle
test
xor
ja
and
popf
mov
xor
and
xchg
mov
bnd
sahf
adc
mov
in
inc
loop
fsubrp
movsl
add
pop
or
loop
cmpsb
stos
jns
cwtl
and
push
stos
sub
jo
jae
push
and
xchg
mov
mov
popf
adc
lock
jbe
das
gs
push
pop
jnp
sti
subl
jo
insl
push
sti
loopne
push
adc
cmp
das
fcomps
cmp
rcl
cmp
fs
cld
aam
or
push
xchg
lret
and
ret
fdivrl
aam
xor
xchg
stos
push
loopne
push
pop
lods
ror
stc
lcall
cmpsb
mov
daa
and
shll
fadd
aad
sbb
mov
cld
or
dec
sbb
sbb
mov
negb
mov
and
nop
arpl
jae
push
jle
insl
in
notl
leave
xor
push
jns
fwait
sahf
pop
pop
mov
out
cld
inc
adc
addr16
push
sbb
xchg
lds
mov
popf
dec
aas
jno
inc
xor
inc
and
sub
add
mov
insb
jle
lcall
sbb
lock
cli
icebp
lods
pop
sub
and
into
out
adc
ljmp
push
cmpsl
aad
jle,pt
and
jg
push
cld
sbb
mov
sub
mov
sahf
pop
mov
cmp
hlt
jne
aas
enter
mov
test
adc
sbb
jne
bound
jge
lock
arpl
xchg
sub
mov
push
jae
lea
fwait
xchg
adc
daa
out
cmc
inc
imul
insb
loopne
mov
push
adc
pop
mov
repz
xchg
out
adc
adc
daa
pop
mov
leave
cmp
popf
popa
jae
push
push
cmp
mov
fidivl
inc
pop
and
movsl
push
dec
pop
stc
scas
adc
lods
sub
mov
add
sbb
mov
jmp
inc
hlt
fucom
ret
add
shll
xor
in
fsubl
cmpl
push
push
inc
dec
or
inc
xchg
js
pop
insl
shrl
dec
shrl
lods
call
addb
add
xchg
sbb
fiaddl
lods
nop
call
jle
mov
push
add
mov
repnz
sbb
mov
jl
mov
pop
or
lcall
sub
pop
pop
lea
je
inc
lods
test
inc
mov
femms
stos
lea
xor
stc
idivb
lods
loop
mov
add
inc
es
popa
xor
shlb
test
fistps
movsb
imul
loope
xor
das
aad
add
push
inc
xor
or
int
repnz
and
sarb
mov
bound
dec
cwtl
test
lods
ss
xchg
iret
or
out
cmp
outsb
cmp
or
dec
jae
pop
shl
cmp
mov
pop
dec
repnz
push
xor
cmp
movsl
lret
leave
jne
ja
mov
dec
fwait
dec
xchg
out
sbb
mov
stos
push
cwtl
js
pop
fisubl
pop
and
out
cmp
lods
ljmp
cmpl
cs
stos
loopne
repnz
lds
rcrb
lahf
hlt
mov
roll
insl
push
cmpsl
mov
test
movsb
mov
pop
push
and
sbb
ret
lret
lods
sbb
jno
sub
xchg
imul
mov
fidivrs
pop
lods
cmp
adc
lods
mov
push
out
loope
pop
jnp
and
mov
mov
pushf
iret
dec
sub
xor
mov
inc
cli
cmpsl
pop
mov
pop
sbb
push
movsl
cli
push
mov
das
mov
mov
inc
aas
cmp
sub
sbb
out
in
lods
dec
cmp
push
out
stc
and
and
addl
mov
in
retw
mov
jo
movsl
fdivrs
das
mov
add
sub
enter
mov
mov
das
sti
movsb
bound
xchg
fcomi
mov
sbb
cld
push
push
inc
outsl
clc
movsl
mov
cs
repnz
cld
movd
imul
and
fldenv
mov
mov
out
pop
or
pop
mov
shll
clc
mov
xor
pop
pop
mov
adc
cmp
in
stc
shl
pop
jne
and
add
sub
xlat
push
es
dec
fs
xchg
jnp
shl
sub
cmp
sarl
mov
pop
hlt
stc
ds
pop
cmp
shrb
cltd
and
test
push
mov
lahf
insl
fs
fwait
roll
lret
push
inc
notl
jbe
mov
add
cmp
out
lret
out
sub
sbb
dec
mov
cld
pop
fildll
pop
push
sbb
leave
je
mov
imul
clc
pop
lea
fsubs
ljmp
mov
pop
pop
pop
repnz
cmp
shr
push
xor
push
cmpsb
inc
xor
jmp
add
cmp
and
mov
lods
push
xchg
out
pop
mov
add
mov
cmp
loopne
pop
inc
daa
mov
push
or
iret
cmpsb
sub
sahf
mov
fwait
lahf
mov
add
test
outsb
ds
ljmp
xor
and
repz
mov
repz
cli
leave
push
sub
mov
mov
jo
mov
xchg
pusha
sub
jg
repz
icebp
arpl
sbb
enter
xchg
jne
cmp
pop
push
hlt
aas
fsubrl
into
fsts
js
xchg
add
notl
mov
mov
fisubrl
add
push
sbb
jmp
movsl
ljmp
xor
in
push
pop
in
test
jnp
adc
or
add
dec
mov
and
bound
xchg
mov
pop
jg
xchg
mov
push
cltd
add
popf
lock
insl
cmpsb
pop
pop
pop
in
ret
ljmp
xchg
arpl
xchg
gs
test
jne
adc
or
push
push
fucomp
xchg
sbb
pop
and
cmpsb
xor
daa
cmp
lahf
test
lods
jmp
dec
lods
sarl
mov
mov
and
xor
icebp
sub
add
dec
stos
push
lods
dec
jae
lods
mov
inc
sbb
int3
fnsave
in
and
mov
mov
out
jae
addr16
fdivrl
movsl
mov
xor
xchg
into
cmpsl
xchg
sub
and
dec
push
xchg
mov
cwtl
cmp
dec
push
push
mov
and
imul
lahf
cltd
inc
push
aaa
mov
adc
push
jecxz
xor
pop
pop
pop
or
jns
pop
lahf
cld
into
imul
data16
imul
sbb
cmp
lret
out
pop
popa
aaa
pop
and
mov
fnstsw
into
sub
jle
jp
test
pushf
int
hlt
sbb
shrb
inc
xor
nop
mov
dec
imul
mov
dec
outsl
xchg
sbbb
mov
cmp
lock
cwtl
daa
inc
pop
filds
lahf
jae
adc
inc
hlt
data16
mov
rorb
mov
test
sbb
push
add
and
dec
insb
push
dec
mov
xchg
jmp
cmp
adc
cmpsb
xor
addr16
into
enter
and
imul
aam
xor
and
sbb
sbb
test
js
sarb
inc
cmpsl
out
pop
add
incl
jge
mov
das
push
in
pop
mov
dec
test
fnsave
aad
roll
out
jle
xor
sarl
movsl
jecxz
and
fdivrs
cmpl
mov
pop
xchg
femms
aaa
mov
mov
fstpl
jae
dec
push
stc
xchg
sub
mov
outsb
imul
testb
adc
add
cmp
out
test
mov
xor
or
divl
xlat
xchg
nopl
jb
das
xor
adc
pusha
and
jmp
jns
push
xor
sbb
arpl
in
dec
push
test
sub
int3
mov
and
fwait
gs
shl
out
jmp
pop
int
shll
negl
int
lahf
sbb
mov
pop
inc
lea
subl
mov
fadds
cwtl
add
mov
inc
or
sub
js
test
cwtl
jle
ja
add
push
cmp
xchg
mov
cmc
jl
loopne
mov
sbb
lret
mov
xor
loop
popl
test
sbb
sbb
xor
mov
jo
add
dec
ljmp
fsubrs
cwtl
dec
fidivl
loop
cld
xor
je
sbb
lret
mov
pushf
xor
into
mov
mov
das
or
fwait
mov
pop
add
dec
or
mov
jge
add
std
cmp
testl
jne
adc
sti
fiadds
xchg
pop
dec
jmp
push
adc
xor
pop
mov
dec
pop
adc
mov
mov
cmp
dec
push
sub
test
imul
pop
mov
add
fcmovnbe
lock
jne
lahf
mov
push
adc
xchg
mov
mov
cmp
push
mov
pop
mov
rorl
xchg
xor
add
loop
movsb
sbb
addr16
dec
ds
adc
mov
icebp
out
adc
cmp
aam
pop
jne
mov
fsts
push
cmp
cli
adc
add
push
sbb
int3
cmpl
aas
loopne
insl
jne
sbb
cmp
cmc
rcrl
in
mov
dec
push
mov
lret
stos
daa
test
dec
xlat
loopne
je
adcl
scas
or
mov
jo
xor
lcall
ret
sahf
push
loope
push
adc
mov
mov
faddp
scas
adc
xchg
rol
add
cli
or
addl
movsl
push
std
shlb
les
jp
mov
mov
in
jbe
je
mov
cmc
and
jns,pn
fistpll
pop
testl
jge
add
jns
fistl
push
and
push
sbb
pop
shrl
pop
and
nop
mov
push
fs
mov
lret
lds
add
mov
inc
cmp
test
dec
pop
mull
std
repnz
jnp
incb
int3
mov
mov
shrl
jne
mov
cld
mov
xlat
outsl
mov
cli
fwait
dec
adcb
push
es
sarb
insb
popa
push
xchg
and
rcr
sarl
test
pop
xchg
stos
push
fldcw
xchg
ja
adc
and
dec
pop
pop
shll
adc
push
add
out
test
push
cwtl
sub
push
cld
int3
and
popa
xchg
add
mov
mull
dec
fsubrs
sbb
mov
cmc
loopne
and
nop
or
adc
test
mov
and
aaa
jl
ja
inc
aas
mov
push
mov
jnp
js
adc
dec
cmp
aaa
in
jg
pop
lret
xor
xor
sbb
aaa
popf
popa
jg
xor
push
mov
jle
add
push
imul
loope
scas
mov
cmp
pop
stc
ret
jecxz
mov
repnz
pop
movsl
cwtl
or
pop
xchg
test
popa
sbb
or
jle
icebp
adc
aad
dec
fwait
jb
lret
sbb
orl
push
or
push
adc
rcrl
mov
mov
inc
hlt
jle
and
fcmovne
loopne
ficoml
out
aaa
xchg
fcoml
dec
add
mov
mov
or
mov
cmp
cmpsb
test
lods
dec
pusha
push
cwtl
add
rcrl
outsl
add
stc
push
aaa
lods
enter
rcrl
testl
shl
call
clc
push
dec
jl
push
mov
cs
inc
mov
sbb
nop
xchg
andl
insl
sub
dec
mov
shlb
pop
movsb
jg
mov
mov
xchg
test
xor
int
clc
push
or
jae
cmp
push
subb
divl
mov
pop
sarl
adc
xchg
jecxz
sub
sbb
add
add
fwait
dec
jl
mov
sub
xor
pop
cwtl
psubsw
aaa
test
fdivrp
stos
outsb
push
sbb
jl
cmp
sub
jns
mov
cmc
bswap
mov
imul
jge
mov
jnp
mov
mov
add
jmp
loop
stc
cmp
or
out
jae
xchg
ret
iret
add
sub
sbb
add
loope
dec
std
mov
es
daa
or
mov
sbb
scas
fwait
or
lock
cld
leave
fistpl
nop
cmp
addr16
imul
cmp
mov
add
and
mov
and
fs
mov
call
push
incb
js
cmp
jne
and
push
pop
cmpl
dec
pop
sbb
cmc
xchg
shr
clc
jmp
push
pop
fistps
in
push
fwait
je
cmp
aad
clc
out
sub
xor
cmp
mov
ret
pop
or
dec
mov
rcr
jge
int3
scas
int
jno
xchg
pop
push
outsl
cmpsb
loop
out
cmpl
icebp
into
dec
push
and
cmp
scas
pushf
sub
xor
stos
push
fwait
stc
xlat
fcoms
jnp
pop
repnz
mov
arpl
test
std
mov
push
lods
int3
jbe
in
adc
in
into
push
imul
out
fistpll
or
push
xchg
dec
jle
pop
lea
fbstp
push
lock
loopne
push
mov
mov
or
dec
jp
into
dec
dec
ret
or
outsl
ds
push
dec
xor
add
pop
ficompl
cmp
inc
push
push
dec
jbe
xchg
xchg
mov
mov
adc
mov
stos
or
xlat
loope
xchg
or
or
stc
inc
push
jl
fldcw
jge
pop
vcvttps2dq
loopne
out
inc
call
or
lret
mov
sub
idivl
movsl
lods
jnp
clc
mov
xor
std
push
sbb
cmc
out
add
cmp
pop
push
out
popf
xor
mov
and
mov
mov
sub
add
jb
sbb
lea
inc
and
mov
xlat
insl
cmpsb
jmp
pop
pop
leave
ret
or
xor
add
push
adc
pusha
cmp
adc
jbe
fwait
loopne
push
imul
cmpsb
ret
pop
add
mov
jne
stos
mov
mov
adc
lahf
mov
in
mov
mov
or
mov
mov
addb
das
stos
mov
mov
inc
sub
sarl
das
push
sub
popa
out
and
test
dec
ret
xchg
mov
in
clc
sbbb
or
leave
rcrl
inc
iret
sbb
loope
test
lods
pop
and
xchg
je
sub
call
push
call
call
mov
sbb
add
inc
mov
mov
add
fisubl
dec
mov
pop
xor
xor
push
jl
test
out
rol
adc
sub
mov
rorb
dec
xchg
jnp
cli
mov
push
add
pop
out
insb
test
cmp
jns
icebp
dec
sub
or
or
popf
dec
xchg
sbb
lcall
cmp
jge
insl
jp
mov
pushf
das
push
shlb
lret
mov
mov
push
js
fs
out
jbe
out
addr16
hlt
cs
rolb
xchg
push
xor
pop
push
sub
jo
and
fisttpl
mov
lods
xor
cmp
add
cmpl
imul
sbb
sbb
sbb
fsubl
and
bound
rorb
sbb
fsubl
cld
inc
mov
mov
gs
push
xor
loope
push
in
loope
jne
mov
pusha
call
leave
adc
mov
cltd
jp
inc
dec
lret
notl
sti
mov
fisttpll
jno
mov
inc
imulb
dec
scas
dec
inc
scas
and
jb
pop
xorl
fdiv
or
into
xchg
lret
loope
cmp
xchg
jb
cwtl
jne
lahf
stos
dec
pop
or
pop
rorl
arpl
pop
mov
push
adc
and
mov
mov
jle
mov
jno
mov
pop
lahf
push
call
fstpt
dec
mov
aad
stc
out
sub
push
cli
mov
loop
cmp
les
lea
lret
sub
std
jl
pop
fildll
mov
jno
jne
push
inc
out
out
loop
xor
sub
std
daa
push
mov
test
cmp
data16
movsl
cwtl
int
int3
push
movlhps
or
sarb
adc
aaa
sub
aad
cli
ds
push
sbb
aas
nop
pusha
iret
mov
push
pop
pop
push
mov
dec
je
mov
outsl
cmpsl
xchg
outsl
xchg
clc
sbb
stos
std
or
jl
dec
cmp
shl
rsm
cwtl
cmpsb
jge
xchg
lods
scas
or
sbb
dec
scas
sbb
cs
outsb
in
dec
xchg
addr16
test
jmp
stc
adc
cmpb
out
sub
out
xchg
cmp
subb
add
or
push
insl
jg
mov
pushf
insl
repnz
xchg
mov
shrb
or
test
pop
call
pop
pop
roll
ja
andb
sub
das
push
sti
inc
hlt
rep
or
mov
rorl
or
jnp
jl
or
xchg
adc
pop
xor
iret
gs
mov
daa
mov
jge
fs
incl
adc
fbstp
mov
inc
dec
mov
sub
jle
push
addr16
sbb
and
jno
dec
push
jge
adc
mov
pop
test
cld
fsubrl
push
mov
cltd
imull
mov
call
mov
push
inc
rolb
mov
adc
rcrl
xchg
stc
xor
push
or
push
lods
xchg
in
jne
lods
or
inc
pop
adc
push
mov
fs
rorl
jns
ljmp
popa
jmp
sbb
pop
push
or
aaa
dec
push
fnstsw
push
iret
push
aaa
cmpl
push
and
test
je
ja
mov
sbbl
xor
shlb
cmpsl
dec
sub
jmp
mul
lds
rorb
sbbb
aas
push
popa
push
inc
dec
test
cwtl
xlat
mull
dec
push
dec
adc
cmpsb
out
cmpsl
jo
dec
sarb
xchg
xor
sub
or
in
lcall
or
outsl
mov
imul
les
sti
push
rolb
out
mov
and
push
push
call
inc
dec
std
ljmp
or
lds
loop
jge
push
cmpsl
inc
inc
mov
addr16
fimull
repz
daa
ret
add
cmp
jmp
cmpsl
pop
sbb
lcall
or
lds
out
sub
sbb
scas
xlat
imul
pop
mov
adc
push
inc
push
adc
jne
or
sarb
inc
jbe
dec
xor
mov
data16
das
mov
js
inc
fisubl
jo
push
and
inc
iret
jbe
mov
cmp
push
sti
dec
std
inc
inc
mov
mov
mov
imul
es
fwait
imul
jo
cmp
pop
lds
mov
pop
and
or
ss
jbe
int
pop
lods
aas
mov
inc
repnz
mov
mov
push
rcrl
icebp
push
cmpsl
xchg
sbb
fldl
xchg
mov
inc
fldenv
dec
scas
cmpsb
xchg
mov
loope
adc
icebp
test
push
leave
sbb
rorl
lock
xchg
xchg
xor
mov
out
adc
cmpsl
inc
pop
cmpsl
nop
xor
pop
aaa
sub
cmp
sbb
dec
and
jae
aad
push
loopne
inc
mov
iret
push
cmpsl
shlb
mov
jno
cld
mov
stos
dec
cmc
aaa
pop
fdivrl
gs
sbb
hlt
mov
xor
push
lret
fs
setle
and
mov
or
pop
es
mov
cs
mov
test
dec
adc
add
jbe
shrl
pop
mov
xchg
es
mov
in
fcoml
popa
add
lods
push
or
orb
sbb
shl
and
push
xchg
mov
popa
adc
sbb
cmp
push
popa
pop
cmpsb
jo
jge
mov
ret
xor
popf
xorl
out
cmp
rcll
rorb
ja
sti
rcrb
das
test
or
ljmp
and
int
push
ret
push
and
mov
mov
sub
or
or
xchg
cltd
push
int
cltd
in
roll
fldt
jl
sbb
popa
mov
sbb
xor
mov
outsl
fisttpll
cmp
mov
jmp
fdivrs
jge
fisttps
jo
test
inc
nop
pop
test
test
andl
and
gs
scas
test
fsubr
jecxz
push
les
sub
aad
data16
lods
xchg
gs
xor
xor
add
aad
push
mov
jno
dec
sbbl
js
rcrb
cmp
mov
mov
and
fwait
and
nop
pop
dec
sub
mov
mov
lret
sub
sbb
mov
dec
repnz
daa
adc
insb
std
sbb
pop
jecxz
cmp
addl
add
aad
push
jae
dec
out
pop
iret
jp
xor
xlat
andl
mov
mov
lock
inc
mov
enter
mov
addr16
mov
adc
push
mov
shr
in
add
imul
aad
dec
lock
out
dec
mov
or
lods
and
in
ss
pop
mov
mov
or
shl
rcrb
jns
in
dec
repnz
or
dec
and
and
push
out
jbe
fidivrs
sub
inc
mov
jp
pop
cli
not
or
mov
mov
sti
dec
cli
imul
push
xchg
es
int3
test
xchg
adc
add
mov
sub
mulb
fs
out
or
lods
stos
out
adc
inc
test
sbb
add
or
sub
addr16
sbb
cmp
dec
je
out
jae
and
orl
ret
outsl
xor
mov
pop
mov
xor
inc
das
jb
dec
mov
js
test
test
mov
add
mov
xchg
sub
and
insl
imul
aas
insl
fninit
xchg
mov
cmp
cmp
repz
daa
mov
pop
jno
or
lods
and
inc
mulps
je
fwait
orl
jmp
popa
jne
push
sarl
bound
cmp
pop
xchg
outsl
xor
add
rorl
lret
sti
movsl
stos
lds
xor
sub
aam
imul
xchg
call
fwait
ja
dec
lea
arpl
hlt
jb
in
push
enter
jl
ljmp
out
ret
push
mov
xchg
push
cs
cmp
lods
mov
pop
fistps
adc
inc
xor
cmp
orl
adc
mov
in
and
inc
shl
xor
adc
hlt
mov
xor
stos
cmc
repz
pop
sbb
xchg
xor
jp
lock
movsl
ficomps
jmp
inc
inc
aaa
and
jo
lea
lock
fcompl
insl
inc
rcl
jg
fldt
mov
pop
xchg
pop
and
inc
cli
enter
sub
jmp
pop
movsb
js
es
leave
adc
out
mov
fsubrl
xchg
aas
mov
pop
or
pop
inc
sbb
jnp
sub
imul
cmc
jp
cmp
fsubs
sub
xchg
mov
stos
push
iret
nop
add
in
and
andb
pop
xchg
repz
out
insb
add
lret
loop
das
notl
iret
pop
setne
leave
or
adc
pop
push
pop
loopne
ja
push
and
add
cwtl
or
pop
xchg
insb
push
sub
std
sbb
mov
inc
call
dec
sub
filds
lret
mov
push
test
and
jb
loopne
adc
cs
mov
ljmp
cwtl
pop
movsb
jbe,pt
dec
inc
repz
lods
ss
mov
mov
and
mov
push
mov
lods
xchg
jecxz
xorb
ficoms
mov
mov
test
mov
cmp
sbb
sub
into
adc
xchg
xchg
lret
push
sbb
out
pop
jmp
cli
fistps
dec
into
cmp
sbb
repz
xchg
ja
pop
icebp
add
mov
sti
cwtl
jnp
xchg
ljmp
das
fdivrs
push
xor
test
shrl
arpl
lahf
jle
lcall
adc
sbbb
sbb
shlb
jl
jl
cmpsl
iret
mov
daa
mov
dec
lcall
popa
bound
xor
aad
adc
mov
out
cmp
mov
mov
jo
sahf
or
sbb
adc
scas
adc
loopne
mov
jns
xchg
pop
push
mov
push
adc
scas
lcall
cmpl
sub
jle
mov
in
cmpsl
out
das
adc
push
jnp
pop
sbb
fstpl
adc
inc
scas
pop
push
aam
cltd
aam
fstpl
dec
and
outsl
fsubl
mov
pop
fcmove
sub
in
test
push
adc
sub
pusha
rolb
push
fwait
sbb
mov
or
fstl
jp
icebp
push
pop
in
push
adc
ljmp
test
cmpsl
push
pop
subb
sub
ljmp
mov
test
js
add
enter
or
jo
jmp
test
in
sub
andnps
icebp
xchg
mov
test
push
pinsrw
jl
adc
jne
fiaddl
xchg
push
mov
rcl
in
xchg
sarl
repnz
push
bound
aaa
test
lock
mov
outsl
pusha
addb
rcr
arpl
inc
mov
popa
ja
or
xchg
imul
jne
and
jo
pop
mov
not
jecxz
jns
or
shrb
pop
push
call
add
cld
out
or
push
add
jge
test
cmc
pop
jns
push
popa
push
sbb
lret
pop
fldt
fwait
aaa
and
inc
dec
sub
cmp
outsl
fmuls
sbb
shlb
xchg
adc
add
cli
test
cmp
orb
inc
add
mov
adc
cmc
inc
lret
stos
pop
es
ds
jl
shlb
jae
arpl
dec
pop
mov
aad
fsubrs
mov
sahf
stos
ljmp
pop
and
nop
mov
mov
jb
ja
push
dec
in
lahf
sti
shlb
mov
mov
fstpl
movb
daa
aas
insb
pop
inc
fisttpl
aam
mov
out
mov
inc
cld
mov
in
or
fwait
mov
dec
xor
jl
aas
push
mov
ljmp
pop
call
add
lods
mov
mov
cld
cli
push
out
out
pusha
push
sbb
pop
adc
repnz
ljmp
xchg
rcll
rorl
or
mov
insb
adc
or
rorb
push
imul
and
push
mov
sbb
inc
mov
cmp
jg
adc
sti
or
stos
outsb
dec
sbb
daa
mov
xchg
cld
cmp
movsl
add
call
aaa
mov
dec
fwait
inc
mov
jne
xchg
push
add
mov
mov
mov
test
lea
mov
dec
rorl
push
push
jp
pop
cmp
stc
sub
das
adc
icebp
add
jne
mov
das
and
sub
fs
pop
iret
pushf
xlat
ja
int
ds
lock
xchg
rclb
sbb
xor
or
cmpsl
or
or
hlt
popf
in
xor
inc
cmp
and
pusha
cmp
sub
ds
cmpsl
inc
mov
cltd
iret
jne
and
cmp
mov
les
push
mov
pcmpgtw
sbb
out
cs
inc
fs
adc
ja
in
imul
cmp
xchg
insl
out
pop
xchg
js
mov
dec
mov
cwtl
leave
scas
sub
dec
lret
outsb
and
or
es
in
dec
sub
lods
or
ss
pushw
imul
push
repz
dec
cld
pop
repz
jae
xorb
adcl
cltd
lret
fsubl
loop
xchg
lret
ja
shll
or
inc
repnz
sbb
mov
and
jnp
or
push
aad
jae
movsb
sub
lcall
pop
notb
xchg
mov
pop
fdivrs
mov
add
push
push
das
mov
pop
or
dec
out
sti
cs
nop
cld
movsb
gs
stos
or
movsl
dec
pop
pop
sub
inc
mov
pop
test
addr16
inc
and
fstpt
mov
and
fcmovnu
sub
and
inc
in
add
mov
add
push
fldenv
rcll
pushf
fadd
fistps
push
and
and
out
push
enter
nop
xchg
fcoms
push
ret
addb
pusha
jecxz
dec
jno
lcall
mov
xchg
es
in
aad
push
addr16
imul
mov
incl
pushf
xor
pop
in
mov
push
inc
cmpsb
jmp
push
mov
adcb
mov
pop
fucom
push
fldl
jnp
rcr
cwtl
mov
push
push
push
xor
fmull
cmp
adc
lods
xor
sub
aaa
sub
outsb
aad
std
sbb
mov
std
cmp
push
cmp
lahf
subl
and
jb
pop
bound
inc
add
fs
ret
lds
lock
popf
cltd
das
mov
int3
aas
test
subb
stc
sub
mov
addl
or
roll
adc
test
jns
test
ret
mov
add
lcall
fdiv
pop
lcall
or
dec
pop
cmp
push
stos
mov
out
mov
sub
pop
dec
movb
dec
sub
popa
ficompl
push
lock
or
adc
add
push
cmp
pusha
ds
ja
fidivs
and
cmp
fimull
ffree
or
enter
clc
jl
push
pop
call
dec
ss
mov
aaa
mov
cmp
adc
jnp
out
jnp
das
sbb
and
jbe
sub
pushf
hlt
jecxz
aad
sahf
jle
jae
jbe
rorb
sub
iret
pop
xchg
mov
cwtl
shr
adc
lods
lds
dec
mov
adc
mov
inc
xor
mov
enter
scas
arpl
aad
push
jnp
leave
lods
mov
rorb
in
rolb
mov
pop
loopne
jmp
fmull
mov
sbb
jbe
sarl
adc
xor
stos
jno
into
cli
sub
je
or
xchg
jb
ljmp
imul
ja
sbb
ret
mov
lahf
daa
xlat
fwait
push
or
sub
in
jg
push
adcb
es
add
fcmovb
lds
jnp
jp
das
inc
inc
pop
popa
xor
cmp
pushf
push
sbb
sbb
pop
cmpsb
jl
mull
add
leave
jno
aas
xchg
mov
or
cli
sbb
aad
xor
bound
push
fidivl
in
inc
mov
push
lods
fbld
mov
xlat
mov
arpl
inc
sbb
les
sub
repz
cs
out
inc
jbe
cli
gs
jne
push
repnz
int3
ja
scas
mov
or
lods
and
adc
js
cmp
sti
jb
rcll
xor
mov
push
xlat
mov
int3
inc
js
cwtl
and
lock
cmp
xor
dec
jle
push
xor
sbbl
pop
xchg
xchg
lods
lock
jne
inc
stos
cld
dec
xchg
inc
inc
aam
xlat
sbb
out
stc
mov
loope
nop
mov
fcmovnbe
lods
repnz
xchg
push
push
gs
imul
inc
ss
sbb
lea
xor
xor
test
lods
fwait
pusha
shrl
nop
ja
adc
rcr
adc
inc
or
mov
jnp
inc
aaa
ror
jne
idivl
es
ds
push
ljmp
inc
aad
bound
rclb
imul
fisttps
mov
sub
outsb
mov
aaa
pusha
jae
xlat
push
push
leave
push
push
push
test
fcoms
stos
push
jbe
addl
sub
enter
rcrb
in
xor
or
fstl
sbb
mov
loopne
dec
mov
xchg
inc
loop
aaa
or
pop
push
push
mov
outsb
mov
cmp
dec
stos
sbb
lahf
iret
ljmp
push
popa
rcrb
sub
mov
das
popf
loopne
in
sub
mov
or
lods
jno
aam
insb
push
imul
mov
les
cmp
add
dec
xor
test
call
cmp
cmp
sbb
aaa
test
imul
adc
repnz
cli
push
pop
jbe
add
mov
std
add
cltd
jne
imul
and
loope
push
and
inc
sub
pushl
inc
stos
mov
das
ljmp
pop
mov
adc
popf
add
leave
shll
sti
int
test
out
pop
roll
add
inc
or
xchg
push
out
aaa
and
dec
mov
bound
push
or
sub
verr
loope
cmp
or
out
mov
mov
sbb
pop
sub
punpckhwd
test
xor
pop
testb
in
push
jl
cwtl
add
mov
sbb
ja
rclb
pop
in
jne
sbb
fs
ficoml
fwait
dec
mov
lcall
aas
mov
mov
subb
filds
push
pop
inc
mov
dec
das
mov
incb
jmp
mov
pop
jecxz
pusha
or
inc
adc
lret
iret
add
into
jnp
cltd
mov
pop
loop
std
arpl
inc
scas
inc
lds
lock
dec
xchg
rolb
ja
lcall
sbb
add
pop
lret
mov
icebp
pusha
inc
jle
mov
in
push
add
push
rol
mov
inc
lock
or
xchg
inc
xchg
fsubp
mov
xchg
push
add
or
jne
mov
cmc
or
adc
xlat
cmc
dec
pop
int
sbb
bound
call
iret
jmp
hlt
xor
sub
iret
aas
movsb
int3
mov
cmp
shll
mov
leave
push
mov
cmp
mov
xchg
mov
fisubl
pushf
pop
std
xor
leave
ret
sahf
shlb
add
insb
mov
xchg
dec
dec
fists
movsb
or
inc
mov
mov
mov
and
jno
cmp
push
jno
enter
sarl
cltd
bound
xchg
inc
mov
or
scas
jno
dec
not
jo
pop
push
jle
gs
add
sub
dec
ret
test
jl
shrl
fists
outsl
stos
cltd
mov
dec
mov
arpl
cmp
cwtl
les
out
and
stc
aaa
test
call
push
repz
mov
cmp
paddusw
cmc
push
xchg
jle
cmp
cmp
inc
popf
scas
sti
mov
fdiv
pop
add
push
div
inc
mov
lock
sub
pop
pop
pop
cs
adc
add
or
or
adc
repz
or
pop
pop
xchg
iret
fwait
cld
aaa
cmp
inc
lods
xchg
add
pop
sbb
insb
and
mov
into
jbe
jp
inc
aad
lahf
xchg
sbb
push
mov
adc
stos
lret
jae
sbb
push
insb
aas
stos
jmp
mov
or
pop
rorb
or
ret
mov
adc
popf
clc
xor
lds
lcall
or
arpl
daa
pushf
loope
or
mov
jbe
rcl
pop
mov
in
js
jle
out
xchg
dec
xlat
add
jb
sub
ljmp
lahf
mov
pop
mov
jge
xor
lcall
or
mov
nop
stc
push
pop
lods
sub
xchg
xchg
xor
test
orl
xor
inc
sahf
and
shlb
dec
cld
scas
push
xlat
and
and
fistps
andl
pushf
mov
adc
and
mov
pushf
push
mov
je
adc
xchg
testl
pop
loop
rcr
data16
shrb
mov
sbb
movsl
and
and
mov
or
cmpsb
inc
push
or
mov
lret
bound
sub
cmp
mov
in
inc
es
rcl
inc
sbb
ror
mov
movsl
mov
in
add
or
push
pop
imul
adc
pop
add
ja
sti
adc
lock
dec
fnstsw
mov
jne
push
jne
ss
pop
int3
lds
pop
gs
xchg
sbb
push
push
sbb
scas
fistps
pop
ret
push
adc
es
adc
mov
pop
cld
sub
push
adc
repnz
push
or
lret
cmp
add
add
jecxz
xor
xor
inc
cld
add
repz
jae
jns
out
mov
lods
cld
jb
dec
or
adc
jg
dec
push
outsb
nop
and
mov
jl
mov
or
out
xor
adc
jnp
inc
adc
loopne
jmp
mov
aas
pop
out
or
insb
enter
cmp
sbb
je
outsb
adc
leave
mov
push
sub
dec
dec
push
xchg
xchg
pop
sbb
jae
cltd
ret
addr16
ret
push
repnz
paddd
bnd
iret
mov
adc
movsl
fs
ss
icebp
cli
mov
popf
fldenv
push
jno
out
outsl
pop
jg
mov
fisubrl
mov
adc
insb
sarb
pop
xor
xchg
push
push
test
sahf
outsl
dec
jle
mov
jg
sub
aad
out
mov
jl
outsb
xchg
xorb
adc
pop
into
cmp
leave
jl
sarb
inc
adc
ljmp
sub
lahf
jb
cmp
jnp
fsubrs
add
jmp
test
xchg
repz
scas
fistpl
jecxz
clc
std
loop
mulb
inc
lods
xchg
and
sub
inc
sub
dec
and
pop
jg
dec
repnz
lock
push
and
ss
insl
dec
xor
cmp
shlb
adcb
into
ret
mov
mov
mov
out
sub
add
or
adc
leave
stos
or
or
xorl
jno
out
rorb
push
mov
or
int
mov
jge
pop
dec
stos
inc
lahf
or
push
sub
lods
mov
jecxz
je
add
xor
sub
mov
mov
mov
scas
cli
jl
neg
inc
mov
pcmpgtd
cwtl
lds
sbbb
ret
loopne
pop
push
notb
flds
insl
and
and
testl
sbb
inc
daa
pushl
pop
push
fwait
roll
repz
jb
incb
mov
fidivs
mov
aas
jno
lret
data16
xlat
mov
mov
xchg
mov
rcll
jo
mov
cmpsb
xor
movsb
enter
cltd
mov
mov
int
push
mov
out
jo
cmpb
cmpsb
push
mov
add
xchg
adc
sbb
andb
rcl
sub
rcrb
sub
xchg
inc
sbb
mov
mov
cmpsl
xor
and
out
cmp
sbb
sub
mov
adc
mov
jg
nop
loop
pop
sahf
subb
popa
fists
cmpsb
and
jbe
sbb
jne
inc
adc
repz
icebp
or
mov
inc
and
cs
stos
or
repnz
adc
push
popa
xchg
loope
xchg
popa
lret
andl
je
dec
shll
sub
push
fiadds
sub
inc
dec
dec
sbb
mov
stos
lea
outsb
inc
xlat
xchg
jno
jecxz
pop
js
and
dec
gs
ficoml
sub
dec
push
cmpsb
adc
fcomp
add
notl
lock
xchg
sbb
jmp
loope
push
lahf
loope
shrl
into
std
push
insb
in
xor
test
test
nop
lods
subb
imul
push
mov
loop
cld
sub
aad
jg
xchg
stos
mov
call
pop
cmp
dec
ja
inc
lock
sbb
mov
arpl
in
or
mov
pop
out
sub
out
push
fxch
push
aaa
jl
es
rolb
aaa
in
add
pop
jecxz
xchg
push
adc
aas
pop
jle
dec
mov
data16
leave
pop
xor
xor
stc
mov
rclb
dec
cltd
popf
push
or
inc
or
fstpl
add
xor
xor
push
mov
xchg
jbe
mov
or
mov
push
jge
dec
lods
pushf
jo
in
add
out
push
stos
pop
dec
mov
popf
xchg
inc
ljmp
mov
mov
sub
int
rcrb
add
cmp
in
call
sbb
inc
lret
mov
or
dec
jp
ss
adc
scas
push
inc
das
lahf
mov
aad
loope
in
shl
cmpb
js
decb
flds
cltd
lahf
inc
out
ss
imul
add
push
andb
lock
lea
js
pop
aaa
jnp
sbb
movsb
jp,pn
mov
sbb
jb
loopne
dec
dec
mov
inc
pop
mov
popw
out
rcll
fisttps
adc
sbb
icebp
mov
inc
subl
dec
inc
lret
mov
jbe
inc
lea
ja
xchg
jno
sarl
xchg
inc
mov
pop
mov
jmp
test
fs
push
and
imul
push
pop
push
insl
movsb
lds
sbb
add
jnp
sub
or
test
outsb
xor
inc
nop
xchg
push
fdivr
dec
mov
sub
fucom
jnp
pushf
pop
test
ret
adc
in
cmc
push
pop
das
pop
out
insl
rcrl
cmp
mov
mov
mov
fidivl
lea
pop
and
mov
jne
jecxz
xchg
icebp
xchg
lahf
sbb
out
inc
popa
daa
xor
test
sbb
ljmp
sub
pop
sbb
and
shrl
mov
enter
test
jb
jle
sbb
or
adc
sbb
aad
cmp
cmp
mov
jle
enter
xorl
das
jg
xchg
movl
cs
std
pop
nop
cmp
loope
getsec
rcl
lods
push
out
adc
cmpsb
dec
mov
and
dec
in
pusha
jmp
hlt
mov
in
ficoms
mov
in
dec
inc
mov
ss
insl
lods
insb
dec
ljmp
adc
sub
mov
ljmp
cmp
push
fsubrp
or
shrb
call
nop
shll
scas
mov
or
mov
data16
push
xor
and
adc
add
hlt
pop
jecxz
int3
hlt
jge
mov
push
pop
push
jne
cwtl
stos
jbe
or
es
xchg
in
std
cwtl
out
aas
imul
jmp
jecxz
lods
push
mov
ret
es
stos
mov
push
les
mov
jle
das
lods
jne
ret
stos
mov
sarl
mov
xchg
sbb
repnz
xor
stc
cmpsb
lds
sub
xchg
or
cwtl
or
sbb
push
stos
adc
mov
mov
rorl
cmp
fs
xchg
data16
sbb
test
adc
mov
add
push
out
jle
push
mov
push
fistps
jb
lcall
andb
mov
jge
cmpsl
mov
cmp
out
xchg
adc
jecxz
xchg
push
sbb
ja
loop
or
ja
ds
xchg
insb
js
sti
inc
out
movsb
mov
out
mov
adc
and
dec
sub
jp
je
daa
enter
cvtdq2ps
or
push
nop
xor
stos
push
sbb
mov
inc
popa
or
fnstcw
mov
js
cs
mov
inc
jo
hlt
mov
mov
pop
sti
in
arpl
pop
loope
imul
mov
or
pop
dec
inc
out
popf
call
mov
mov
arpl
pop
sub
or
ret
push
mov
xlat
dec
fwait
arpl
dec
aas
call
hlt
lods
push
jbe
insb
dec
push
je
add
mov
les
sahf
into
jb
mull
push
push
cmp
cmp
mov
pop
sbb
pop
icebp
enter
adc
sbb
and
cwtl
scas
add
push
jnp
sub
add
fwait
stc
fsts
dec
and
loope
sub
addr16
out
out
cmp
sbb
adc
sub
test
dec
jae
sub
cmp
je
lea
mov
sti
je
cmp
and
cmp
out
loopne
push
inc
ficompl
lahf
dec
inc
sbb
cmp
pop
xchg
insb
out
jns
mov
ret
mov
les
dec
es
push
sahf
jne
pop
ret
shlb
jp
mov
dec
frstor
push
jo
add
mov
cmp
roll
sbb
ja
adc
jo
popa
and
ret
lret
stos
mulb
and
add
pop
stos
xor
jns
jbe
ficomps
ds
jo
imul
pop
mov
add
dec
mov
insl
inc
mov
addr16
stos
jg
shlb
scas
pop
stos
jae,pn
and
fwait
test
pop
mul
sahf
push
mov
pop
mov
pop
or
int3
jb
mov
addb
xchg
int
ret
ss
and
and
call
lods
xchg
mov
lock
inc
pop
fdivr
sar
mov
push
add
mov
push
xor
xor
jg
xchg
lock
pusha
mov
aas
jne
dec
xchg
adc
pop
fnstcw
sbb
cmp
stc
sub
lock
pop
pusha
shr
or
and
and
ds
outsl
mov
fs
sti
ret
adc
shr
dec
jl
je
fbstp
xchg
pusha
loop
xchg
pop
inc
adc
clc
bnd
enter
popa
sti
xchg
pop
mov
lahf
sub
mov
gs
and
lods
or
in
xor
xor
cld
aaa
gs
int
xchg
dec
sbb
sub
cli
dec
test
push
mov
and
aas
cmp
add
pushf
shrb
adc
jne
cmc
inc
xchg
gs
in
sub
lods
sbb
imul
push
data16
xor
or
sarl
jl
out
or
push
je
sbb
cmp
pop
out
dec
inc
mov
push
jl
mov
into
jae
push
and
mov
cmp
in
aad
rcll
popf
dec
add
aam
imul
add
pop
push
call
inc
xchg
jo
fnstsw
rolb
test
mov
sbb
add
mov
dec
sbb
mov
in
jmp
xorb
addr16
xchg
jb
mov
xchg
enter
rol
sbb
pop
push
and
fwait
or
jno
mov
mov
sti
test
push
xchg
dec
xor
xchg
decl
shll
roll
adc
sub
jmp
jns
pop
xchg
lock
lret
sahf
bound
cltd
mov
dec
jae
fldcw
cmp
lret
outsb
jbe
rcrl
shll
sahf
les
lret
sub
or
xor
iret
pop
xchg
mov
std
add
outsb
int
xchg
sbb
loope
cmpsl
shlb
cmpsl
pop
nop
adc
mov
cmp
cltd
std
imul
and
insl
jle
adc
aad
jne
ret
ret
push
jl
push
adc
andb
or
mull
fsubrs
cs
sub
jns
pop
lahf
movsb
iret
or
in
or
popf
out
int
imul
addr16
fstpt
mov
loopne
cmp
sbb
loope
xor
mulb
mov
hlt
incb
insb
inc
or
insl
xchg
test
jne
ja
mov
cs
jne
test
frstor
pusha
cmc
sbb
mov
cmpsb
lea
mov
dec
push
fs
jmp
daa
cmp
out
pop
or
ret
shll
dec
cmp
xchg
ds
sub
xchg
data16
jg
out
push
lods
push
sub
dec
adcl
inc
mov
mov
in
loop
fdivrs
and
iret
aam
or
aas
shlb
movsb
adc
xor
loopne
ss
or
mov
movsb
pushf
sahf
dec
push
and
imul
lock
out
pushl
jo
sub
aas
aam
lcall
pop
popa
nopl
and
aaa
out
fdivrl
xchg
dec
mov
insl
fistpll
push
stc
cmc
xor
lds
mov
add
aaa
test
mov
adc
ja
stos
clc
jecxz
test
inc
ffreep
dec
jae
les
lods
gs
push
mov
sbb
sbb
mov
sbb
pop
mov
dec
sbb
ss
out
out
add
loope
pop
nop
sbb
outsb
addl
int
aad
jb
and
out
out
adc
push
rolb
fnstenv
lea
mov
stos
movsb
push
xor
cs
lret
inc
sbb
push
adc
bound
in
inc
ljmp
arpl
inc
push
movsb
js
rcr
movsl
mov
sub
loopne
or
loop
jle
xchg
add
es
out
into
std
aas
imul
jnp
fistps
cmp
icebp
data16
enter
sahf
ljmp
dec
inc
inc
mov
pop
fsubp
add
and
add
jg
ss
add
adc
add
sarb
dec
or
adcb
aas
pop
mov
js
pop
xchg
outsl
xor
adc
or
add
mov
add
and
push
call
loop
xor
leave
mov
push
lds
and
scas
adc
mov
adc
xor
dec
add
push
out
adc
cmp
cmp
sbb
aas
adc
pop
js
insl
mov
mov
inc
add
in
pop
imul
aas
inc
out
ss
sbb
popa
sub
dec
cmp
lret
fmulp
orl
xor
mov
and
add
outsb
and
push
cmp
fs
xchg
loopne
xchg
push
jae
jmp
lcall
mov
sub
mov
mov
or
scas
push
mov
jns
xchg
call
data16
push
pushf
lret
rcl
dec
rcl
push
jmp
push
xor
scas
cmova
dec
cmp
jbe
or
rolb
out
mov
sub
jbe
pop
dec
jge
cltd
mov
repnz
or
aam
cli
rolb
sahf
sbb
bound
inc
adc
add
movsl
mov
and
lock
idivl
mov
cmpsl
dec
xchg
lret
popa
mov
lret
testl
push
data16
mov
add
bound
imul
es
ror
or
inc
ret
xchg
test
negb
sbb
sahf
popf
mov
test
into
inc
dec
cmc
mov
jnp
and
in
andl
and
aad
mov
in
pop
push
xor
pop
divl
add
cwtl
popa
jecxz
xor
ror
dec
sbb
scas
jo
int3
test
call
outsb
xor
jo
and
mov
pop
pop
rcrb
jb
mov
leave
repnz
mov
pop
int
std
ret
test
add
cmp
dec
inc
ja
fcoms
dec
mov
sub
xor
jnp
imul
sbb
shlb
insb
test
mov
fistpll
cmpsl
out
popf
addb
mov
push
dec
pushf
sbb
pop
sti
sub
iret
xchg
jecxz
aaa
pop
cmpsb
mov
jle
enter
les
jne
pop
les
push
test
cld
je
lret
ret
dec
fcoml
pop
out
lods
lods
pop
jo
cmp
jo
push
mov
mov
jne
push
dec
sbb
adcl
cmp
cmpsl
fmuls
popf
lock
rolb
dec
or
cmpsl
mov
repnz
push
jle
xchg
movsl
dec
and
imul
mov
push
dec
mov
lods
add
jae
arpl
adc
scas
and
lods
in
xlat
lahf
insb
pushl
lds
jp
push
jge
lret
cli
enter
sbb
mov
ret
xchg
adc
sbb
jae
in
stos
push
cmp
pusha
xchg
andb
fistpl
mov
outsb
sarb
add
out
xchg
push
in
nop
loope
push
push
iret
cwtl
pop
jo
stos
es
xor
pop
push
inc
imul
mov
cmp
std
test
cwtl
push
les
dec
jmp
movsb
ljmp
fimuls
pop
scas
jg
xor
adc
out
jl
or
mov
xor
aaa
hlt
enter
xor
cmpsl
rcl
leave
ret
imul
pop
rcrl
aam
les
mov
sbb
enter
jg
in
in
jp
cli
lods
jmp
and
loop
push
int
push
inc
jle
push
xchg
fiaddl
mov
ss
loopne
and
push
cli
mov
cmp
sub
mov
pop
into
testb
cmp
pop
adc
stos
mov
jecxz
cmp
inc
xchg
dec
pop
sub
fcmovnbe
push
pushf
push
iret
stc
stos
or
adc
fbstp
mov
enter
ja
iret
rclb
adc
test
xor
jnp
icebp
dec
adc
sbb
inc
push
mov
push
inc
pop
push
ret
pop
mov
xlat
incl
mov
jo
test
fstps
fldz
jno
add
ja
jne
rcrl
cmpsl
aaa
jo
xor
iret
lea
filds
jecxz
fstps
mov
adc
in
iret
fcomi
mov
mov
inc
ret
push
call
rorl
adc
lods
mov
adc
out
rorl
cmovb
xchg
ficoms
xchg
outsb
rorb
mov
nop
popa
xlat
inc
xchg
mov
int
dec
and
cltd
lret
push
xor
popa
sub
shll
xchg
mov
mov
test
int3
stc
add
or
mov
cmp
fmulp
pushf
cmp
push
in
xor
call
outsl
insb
sub
sarb
test
lods
sub
cmp
in
mov
and
daa
mov
cmc
stc
xchg
daa
dec
mov
inc
repnz
repnz
xchg
or
rclb
movsl
repnz
inc
mov
xchg
orb
xorl
jmp
push
fwait
pop
cld
movsb
jge
cltd
mov
and
sbb
mov
lock
push
nop
push
loopne
inc
dec
dec
push
add
and
push
ljmp
xor
imul
rcrb
insl
lret
mov
jne
sahf
mov
insb
pop
lahf
dec
orb
cmp
or
call
inc
stos
push
jle
movsl
pop
fisttpl
adc
mov
out
inc
sbb
subb
dec
loopne
out
out
mov
loope
mov
adc
in
pusha
adc
imul
mov
sub
xchg
scas
xchg
cld
sub
out
add
lock
test
push
pop
pop
adc
adc
jns
inc
mov
mov
test
rolb
rcr
les
ljmp
and
xchg
pop
mov
ret
pop
sub
mov
cld
in
pusha
push
into
xlat
popf
or
inc
sbb
push
ret
je
adcl
mov
cmp
fcmovnbe
xor
mov
test
sbb
push
stc
sbb
aam
push
pop
into
cwtl
dec
outsl
push
aaa
sbb
imulb
aam
jp
mov
mov
xor
mov
push
inc
pop
xchg
push
fmull
xor
arpl
jns
sbb
call
mov
aam
add
lock
jnp
cmp
jg
jge
data16
cmpsb
pop
lods
roll
xchg
sub
push
push
es
inc
into
scas
xchg
xchg
jl
or
fldl2e
xlat
addr16
mov
arpl
ss
cmpsb
cmp
and
dec
cmp
or
cmp
aas
repz
mov
inc
cmc
jb
xor
ljmp
xor
push
ljmp
loop
xchg
push
mov
jecxz
sbb
sarb
mov
mov
jge
mov
stc
pushf
xor
icebp
movsb
dec
loope
push
push
cmp
cwtl
lcall
repz
out
mov
ljmp
hlt
loope
movsl
inc
sbb
cmp
xchg
mov
dec
fsubr
sub
cmpl
mov
in
out
mov
add
add
and
rorb
jno
dec
fsts
test
fs
mov
sbb
fldl
ljmp
jmp
sbb
mov
movsb
xchg
add
jbe
cs
pop
adc
pop
fsubrp
mov
stos
lahf
mov
orl
sahf
and
shr
push
pop
subl
inc
adc
push
out
or
rclb
xor
add
adc
subl
mov
xchg
iret
pop
les
jmp
add
mov
in
cmp
push
xchg
mov
out
iret
mov
inc
push
cmp
into
jnp
adc
sbb
sbb
test
nop
popa
mov
dec
fnstenv
fcomip
push
xorl
push
sbb
repz
and
and
in
stos
pop
pop
ljmp
fwait
sub
or
lea
hlt
pop
sub
or
out
sub
push
inc
cmp
xor
lea
adc
jle
push
dec
sti
leave
iret
sbb
jae
dec
ja
js
add
ss
mov
incl
imull
mov
bound
out
movsb
mov
nop
jns
mov
cli
mov
lock
mov
jmp
sbb
enter
and
stos
mov
sub
mov
ret
jnp
call
lahf
lea
adc
and
ror
xor
js
fwait
xchg
mov
mov
lea
fdivs
fists
cmp
scas
inc
push
cmp
jge
aas
scas
jl
jg
xor
inc
test
aam
in
push
add
xchg
ds
outsb
xchg
leave
cmp
int3
xor
inc
add
and
adc
inc
js
xchg
loopne
dec
loope
jp
mov
out
sbb
out
adc
shr
jbe
imul
jno
lret
je
fucomp
xor
mov
jnp
sbb
dec
testl
lret
inc
mov
fisubs
rcrl
jg
push
fwait
dec
in
movsl
divb
add
xor
cmp
pop
dec
push
or
jp
mov
adc
lods
push
je
leave
add
pushf
dec
insl
xchg
stos
cmp
jne
mov
fcompl
xor
sahf
jl
cmp
sbbl
and
pop
addr16
pop
adc
xchg
xor
mov
push
aaa
fisubrl
stos
ret
and
pusha
stos
mov
dec
aaa
cmp
mov
cltd
js
ret
fmull
inc
xor
daa
int3
jae
or
ss
aad
push
es
in
inc
xor
xchg
push
out
leave
push
mov
out
lahf
jbe,pn
mov
popa
xchg
dec
roll
int3
jp
popf
push
add
jbe
lods
pop
fisttps
pop
xor
inc
cli
gs
ss
shrb
pop
mov
and
rorl
mov
pushl
mov
dec
push
xor
push
mov
mov
insl
push
enter
fwait
lret
cmp
test
mov
leave
stc
lcall
aaa
ljmp
call
and
sub
push
faddl
pop
aas
mov
hlt
popf
and
push
orl
sub
cmp
mov
rcll
addb
cli
fcmovnb
nop
outsb
cli
sub
push
test
sar
enter
push
hlt
loop
sti
pop
jmp
mov
xchg
insl
xor
insl
sahf
outsl
push
and
incb
push
lcall
mov
sub
je
or
rorb
jp
jl
add
jno
xor
popa
push
or
repz
ljmp
fwait
sahf
pop
mov
cmp
mov
mov
add
cs
fcmovnb
add
mov
push
dec
aam
scas
shll
push
rorb
jae
adc
xor
and
pop
dec
mov
aas
mov
jns
fwait
or
cmp
xchg
test
mov
mov
and
sub
sbb
or
lock
out
daa
lret
cmp
xor
or
dec
ljmp
cmpsb
mov
call
repnz
pop
gs
addr16
or
adc
or
add
inc
leave
es
jmp
icebp
and
std
inc
mov
fcmovne
mov
and
pop
pop
xor
and
add
iret
fimuls
cmp
ret
cltd
nop
in
xor
sbbl
ja
cltd
sbb
shll
aaa
aad
fwait
movsb
fisubrs
js
lds
adc
inc
push
add
out
call
loope
icebp
arpl
fsubrp
cmpsb
push
mov
bound
hlt
fistps
sbb
cs
test
cld
fdivr
and
sarl
inc
push
and
cmp
aaa
sbb
mov
mov
and
daa
fs
adc
add
and
push
push
sub
cmp
lock
std
push
cmp
push
inc
pop
push
mov
outsl
or
cmp
pop
addr16
fnstsw
outsl
insb
cmp
adc
or
cmp
test
popf
aaa
push
bnd
pop
add
sbb
outsl
out
cmpsb
js
in
scas
lcall
jae
mov
out
push
lret
fwait
pop
pop
icebp
scas
xchg
clc
sub
loop
mov
xchg
loope
sbb
adc
jmp
in
stc
fdivs
orl
scas
popf
pop
push
call
lock
fsubp
sti
cmc
movsb
jno
xor
push
stos
fwait
std
push
incb
xchg
mov
addr16
fsubrl
aam
mov
outsl
xor
out
stc
sbb
cmp
gs
push
xchg
add
dec
movhps
jne
mov
mov
push
dec
inc
lret
clc
jp
push
mov
dec
or
and
pop
and
xchg
lret
sub
cmp
mov
jl
mov
cltd
dec
arpl
imul
insl
jae
cmp
sub
imulb
push
stos
inc
pop
icebp
xor
adc
xchg
sbb
mov
into
push
add
add
mov
jmp
adc
sti
dec
and
iret
mov
and
cwtl
or
aaa
mov
sub
lahf
std
popa
daa
into
pop
in
cwtl
mov
adc
cld
rol
ja
addb
in
push
test
push
cmpsl
sbb
orl
dec
fnstsw
jmp
out
fwait
stc
out
sbb
lea
test
outsb
bnd
rclb
cmpl
xor
mov
cmc
adcb
cmp
in
sbb
inc
gs
cmpl
fcompl
cmp
or
jp
icebp
stos
out
daa
aas
ds
inc
loope
mov
es
stos
adc
mull
xchg
lds
negl
or
sbb
sub
add
and
sbbl
cmpsb
xchg
dec
push
js
outsl
into
ltr
sbb
xchg
iret
xchg
pop
data16
icebp
leave
jne
lret
and
fmulp
ret
int
cmpsb
xchg
inc
adc
lret
jmp
push
sbb
das
inc
cmp
fcoml
add
xor
in
imul
inc
mov
push
stos
fmull
pop
push
lahf
rorl
test
ror
mov
jno
adc
arpl
add
and
sahf
shll
adc
xchg
fstps
push
inc
pusha
xor
mov
stos
test
repz
or
sar
pop
push
cmpsl
lods
jae
jns
mov
ja
and
hlt
adc
in
pop
dec
lods
inc
cld
aam
mov
fstpl
cltd
repnz
clc
pusha
bound
cmp
and
movsl
pushf
shll
lds
mov
jb
in
imul
adc
push
cmp
roll
iret
cmp
push
xchg
dec
loopne
push
sarb
xlat
roll
sbb
clc
adc
xor
sbb
cmpsl
mov
or
mov
cmp
pop
mov
jmp
stos
dec
push
lea
cld
subb
rep
mov
insb
pop
outsb
movsb
outsb
adc
jne
inc
mov
shufps
xor
dec
insl
pop
insl
lock
das
push
push
clc
mov
add
inc
test
lret
lcall
adcb
negb
lahf
mov
cmp
push
push
cmp
js
rorl
pop
mov
sub
pushf
cmc
cwtl
aaa
or
out
addr16
push
notl
daa
aas
stc
dec
ljmp
cmpsl
lret
iret
popa
mov
mov
aaa
in
and
cmp
test
xor
lret
scas
xchg
xlat
mov
or
sbb
cli
fwait
shrb
subb
loopne
in
mov
adc
les
lds
daa
in
mov
xchg
sub
shrb
test
inc
test
lret
dec
jecxz
pusha
adc
xchg
loope
vcvttss2si
cmp
dec
jnp
push
cmpsl
rcrl
mov
cmp
negl
add
das
sub
leave
mov
mov
dec
adc
clc
enter
or
sbb
adc
and
cwtl
xor
pop
push
test
repnz
gs
mov
and
jmp
hlt
sub
loop
xchg
xor
fdivrl
out
hlt
imul
ficoms
sub
pop
pop
and
add
dec
lds
jbe
or
push
sbb
xchg
mov
xchg
cld
out
mov
and
mov
fs
int
sub
incb
push
scas
pusha
mov
popf
pushf
xlat
pop
mov
fsubl
push
add
jns
and
jae
in
dec
or
leave
mov
loop
test
fwait
es
pop
leave
pusha
mov
pop
ss
mov
fwait
inc
cmpsb
xchg
stc
xchg
icebp
xchg
jb
add
mov
xchg
dec
mov
push
repz
adc
dec
popa
mov
dec
push
xchg
fistpl
daa
pop
clc
stc
xchg
popa
shrb
sysenter
nop
shl
sub
aas
or
out
testb
cmp
add
inc
arpl
divl
pop
push
sahf
xchg
sub
xor
xchg
sbb
rcrb
mov
and
mov
lods
dec
sbb
int3
pop
lods
cmp
xchg
jmp
addb
popf
cwtl
cltd
ret
nop
call
inc
aam
sbb
sub
adc
jo
aas
jl
sbb
dec
rorb
mov
jl
mov
push
roll
dec
xor
pop
int3
sbb
mov
test
mov
hlt
dec
xlat
pop
adc
jb
out
jns
mov
jg
rorl
lods
mov
leave
and
inc
lret
rorl
dec
addl
cltd
subl
adc
mov
andb
sub
loopne
fs
xchg
push
inc
sbb
repnz
ds
addr16
and
cld
mov
loop
aas
lods
shrb
int
and
popf
cltd
pushf
mov
dec
orb
repz
pushf
insb
lahf
jne
imul
pusha
repnz
mov
inc
pop
sub
mov
mov
lds
mov
mov
shl
movsb
mov
mov
fisttpll
addr16
pop
mov
pop
in
fwait
rcl
iret
lods
sti
jmp
mov
jmp
adc
ficoms
mov
mov
cmp
fistpl
imul
rcl
push
jne
sbb
fdivl
clc
mov
test
pop
test
mov
iret
xor
xchg
inc
jp
imul
mov
mov
cwtl
pop
dec
xor
in
popf
pop
or
scas
xor
adc
pop
aas
or
mov
bsf
cwtl
cltd
sub
sbbb
jl
dec
inc
push
push
xchg
das
mov
gs
inc
pop
sbb
scas
and
jno
inc
aas
mov
lods
loop
fdivp
int3
fsubrp
leave
jae
in
stos
fbstp
dec
jne
jge
cli
or
push
xchg
mov
cmp
inc
push
push
add
pop
inc
mov
xor
pop
fimuls
push
pop
int
push
out
cmp
xchg
adc
push
stc
cmp
and
rcl
call
pushf
outsb
andl
mov
sbb
lock
pop
mov
mov
aad
stc
inc
jns
loopne
mov
cmpsb
cmp
sti
cmp
add
and
repz
jae
dec
pop
pop
dec
fwait
xsha1
cmpsb
or
cmc
aas
pop
jne
imul
xchg
cmp
repnz
adc
add
dec
aas
xorb
outsb
pushf
xchg
push
rolb
stos
lahf
xchg
sbb
scas
jae
xchg
dec
hlt
aam
mov
pop
mov
pop
dec
adc
shrl
jmp
imul
pop
mov
xor
add
add
pop
sub
inc
xor
pop
xlat
imul
ss
scas
mov
stos
loopne
outsl
push
pop
and
inc
in
rorl
add
add
xchg
daa
notl
push
out
dec
psadbw
stc
int3
and
ret
into
outsl
mov
pop
adc
cmp
mov
dec
xlat
movsl
push
xor
mov
push
sbb
sar
push
fisubrs
xchg
pop
int3
shll
cld
dec
cld
mov
out
aaa
mov
sbb
dec
jecxz
lds
cs
stc
or
aam
adc
sbb
subb
rclb
mov
ret
mov
jmp
std
sbb
ret
in
icebp
bound
inc
dec
sbb
movsb
mov
push
into
js
xlat
incb
mov
pop
shll
pop
lcall
and
xor
inc
jnp
cltd
in
sbb
inc
pop
out
adc
mulb
loope
insb
dec
movsb
jg
ljmp
out
add
sbb
orb
xor
push
aad
inc
repz
sub
insb
mov
stos
sbb
scas
add
cmp
movsl
stos
in
inc
add
int
sarb
cmp
lea
testl
popf
xchg
dec
icebp
or
push
pop
aaa
mov
stos
insb
andb
dec
bound
out
mov
sbb
jo
popa
fimull
mov
outsl
fs
gs
adc
js
lcall
fdivrl
mov
test
and
xor
cld
lcall
lahf
outsb
fisubrl
mov
mov
xor
aad
jecxz
lds
sbb
out
add
inc
xor
test
fiadds
stos
fmul
enter
push
jae
inc
push
pop
mov
push
inc
mov
leave
jp
sub
and
call
sbb
andb
jg
mov
cmpsb
test
and
or
dec
dec
lahf
or
flds
push
push
mov
lret
xor
imull
incl
xor
gs
mov
mov
test
lret
movsl
or
clc
movsb
adc
popf
sub
mov
inc
frstor
ja
cld
or
mov
movsb
xchg
into
pushf
cmp
or
daa
test
rorl
movb
sbb
sbb
xchg
jno
dec
xchg
xchg
ja
loopne
dec
xchg
mov
popf
out
ljmp
lcall
sbb
mov
pop
repz
sbb
jmp
xor
jmp
xchg
adc
repz
add
test
dec
fistpl
daa
push
inc
or
call
xchg
imul
out
dec
and
and
in
sub
pop
inc
in
outsl
fmuls
dec
inc
insb
into
data16
cltd
xor
pop
test
dec
cmp
cmp
mov
fsts
add
mov
adc
xchg
arpl
loop
mov
cmpsb
ret
sbb
ds
jo
push
jmp
adc
sbb
lret
popf
jns
and
or
mov
nop
sub
adc
dec
gs
add
push
das
inc
push
sti
icebp
adc
sbb
mov
loopne
dec
into
or
mov
add
mov
pop
mov
aaa
mov
sarl
andl
push
leave
ds
lret
pop
sti
or
negb
cmc
cs
nop
les
icebp
push
int
sub
cmp
add
add
mov
shlb
mov
and
sub
mov
fdivs
popf
rorb
dec
and
inc
imul
jbe
fsub
mov
ljmp
xchg
cmp
cmpsb
clc
pop
icebp
jl
jmp
pop
sbb
fst
xor
dec
ja
jnp
test
sarl
sbb
push
mov
in
testl
int3
call
je
xchg
pop
jbe
push
inc
sbb
add
repnz
out
add
and
aam
in
mov
push
lahf
sti
test
add
mov
xor
jp
mov
cmp
mov
sbb
pop
sub
mov
cmp
fisttps
cwtl
sbb
sbbl
call
jne
push
lods
sbb
scas
and
add
dec
push
jmp
push
popa
xor
fcomps
mov
or
mov
out
fs
cmp
ds
push
xorb
repz
or
jne
test
sbb
adc
sub
cmpsl
aas
cld
pop
mov
dec
sub
push
fiaddl
fwait
shlb
das
and
xchg
cmp
push
cli
cli
orl
arpl
lds
or
dec
sub
pop
stc
sbb
and
inc
pushf
cmpsb
mov
or
or
in
clc
adc
pusha
and
mov
mov
adc
cli
mov
pop
data16
ret
iret
test
cs
push
sub
push
les
push
stos
sub
or
out
das
dec
js
jmp
lea
std
mull
dec
inc
mov
aad
sub
xchg
fnstenv
aad
mov
or
inc
comiss
xor
sbb
pop
ds
pushf
sub
jl
or
xchg
imul
sub
aad
jne
mov
mov
scas
in
enter
fwait
insl
inc
cmc
pusha
inc
lock
mov
xlat
cmp
sbb
mov
add
fldenv
shlb
and
pop
mov
adc
insl
cld
sub
popf
repz
or
cltd
xor
arpl
aaa
movl
pop
ret
and
sbb
and
cmpsb
pop
lods
pop
xor
and
in
mov
sarl
mov
cmpsl
cli
mov
not
mov
mov
fwait
mov
clc
imul
popa
outsl
mov
aam
jb
adc
xor
fs
sbb
adc
push
pop
out
mov
sbb
mov
or
sbb
in
fstpt
divl
cmp
adc
xchg
mov
jp
push
mov
out
ficompl
xchg
lret
xchg
mov
pop
in
or
in
orb
jmp
sub
push
xor
inc
inc
gs
pop
sbb
lret
jecxz
or
xor
mov
jae
jl
sub
outsb
loop
xor
pop
ds
iret
aam
cli
fucomp
fisubl
enter
arpl
dec
inc
jmp
push
xor
xchg
ret
xchg
mov
mov
sbb
xacquire
sbb
adc
mov
xchg
dec
adc
dec
lret
mov
daa
fadd
data16
or
in
jecxz
pop
and
inc
add
add
rclb
adc
popf
mov
add
xlat
dec
dec
outsb
dec
push
imul
pop
xor
inc
lds
pop
or
aam
adc
xor
push
stos
arpl
mov
mov
std
ret
test
test
or
pop
ret
ss
cs
mov
cwtl
dec
mov
mov
adc
mov
cmp
jmp
incl
pop
sbb
nop
jl
aam
mov
loop
push
std
mov
inc
adc
hlt
ds
out
notb
jns
push
push
in
cwtl
jp
jo
jecxz
push
test
test
arpl
adc
push
jb
xchg
add
arpl
rol
mov
push
pusha
mov
pop
cltd
fucomp
or
arpl
sub
pop
dec
aaa
sub
sahf
movsl
and
mov
push
fucomip
mov
rol
xchg
dec
push
adc
sbb
dec
push
sub
scas
and
dec
fistpl
add
or
sbbl
xchg
mov
inc
lcall
fildl
leave
fildll
sub
add
fisttps
dec
test
aaa
aas
xchg
and
movsb
mov
mov
andl
sub
mov
xchg
mov
cmp
xor
pushf
fwait
mov
outsl
jg
iret
lds
xchg
or
loopne
pop
pop
iret
fidivs
jne
inc
push
pop
dec
pusha
and
iret
cltd
mov
or
xor
sbb
mov
cmc
loope
ja
mov
sahf
mov
adc
adc
test
pop
rorl
insb
or
es
fldcw
out
ret
sub
into
cmp
sti
xchg
or
push
xchg
icebp
in
popa
jns
in
sub
push
push
gs
mov
push
loop
inc
pop
dec
or
notb
push
dec
add
dec
lcall
jmp
xchg
in
adc
and
ds
jmp
push
in
push
mov
dec
rol
orl
test
jo
jmp
lds
push
jecxz
sub
xchg
cmp
fidivrs
js
fiadds
pop
xchg
add
leave
dec
dec
lret
leave
mov
sbb
xsaves
xchg
in
jae
les
xor
hlt
jle
add
sub
adc
fnsetpm(287
test
xchg
mov
add
jnp
push
lahf
dec
aad
stos
push
repz
or
sbb
lods
or
gs
ret
cltd
cmc
mov
inc
pop
dec
addr16
jg
mov
inc
nop
test
in
cmp
dec
mov
imul
xchg
sbb
or
mov
mov
cmc
sub
xor
insb
imul
test
addb
nop
mov
xchg
ret
xchg
daa
or
jg
call
out
dec
mov
dec
xlat
movsl
std
test
sub
adc
int
data16
jmp
inc
adc
mov
mov
mov
jae
mov
push
ljmp
and
or
hlt
add
adc
push
pop
jns
cmp
test
and
dec
and
pop
and
xor
xlat
hlt
inc
leave
adc
xor
aad
ret
dec
xchg
push
daa
repz
xchg
add
jge
sub
jecxz
fildl
dec
fisubrs
adc
push
sub
ret
cltd
sub
in
mov
xor
icebp
orl
cltd
pop
mov
push
nop
jge
inc
gs
mov
jo
jmp
mov
jl
jge
movsl
or
mov
adc
shl
and
popa
int3
outsb
pop
clc
mov
xchg
bound
xchg
repnz
inc
xor
fs
add
sbb
lret
lcall
sub
mov
std
clc
mov
mov
loop
cmp
shll
fstpl
loop
xchg
decl
enter
jg
fsubr
into
mov
out
popf
mov
inc
sub
jecxz
shrl
push
push
pop
out
dec
insl
jb
lock
mov
mov
popf
leave
out
xchg
test
cmpb
jno
lods
lret
inc
push
lods
adc
not
or
sbb
fs
and
in
insb
gs
scas
pusha
unpckhps
adc
nop
loopne
or
xor
nop
stos
pop
imul
mov
push
arpl
mov
xchg
mov
sbb
fldenv
repz
push
cmp
inc
and
call
push
push
inc
adc
jae
incl
or
adc
nop
xor
push
adc
mov
cwtl
ret
rep
push
dec
rorb
in
cmc
sbb
cmp
mov
inc
xor
es
lahf
js
mov
fildll
or
sbb
in
btrl
stc
lret
aam
xor
jo
fimuls
dec
add
into
xchg
jl
and
dec
data16
mov
push
test
in
push
mov
clc
push
lea
lea
pop
dec
test
mov
cmp
dec
nop
mov
js
mov
mov
int
dec
or
fisubl
push
ss
cmpl
imul
repnz
outsb
std
addr16
loopne
fldenv
fldt
lcall
inc
mov
cli
xor
loop
sub
pushf
popf
jmp
jbe
add
jnp
popf
jg
shll
dec
outsb
addl
bound
cmp
loope
gs
out
fnstenv
pop
push
xchg
jecxz
jmp
dec
mov
fldt
inc
push
cmpsw
fdivl
xchg
or
mov
sbb
paddusw
lahf
add
mov
cmc
aaa
mov
addr16
ljmp
mov
lcall
sub
test
and
test
inc
pop
mov
mov
mov
mov
jl
sub
nop
mov
scas
jecxz
inc
cmp
pop
gs
mov
jbe
mov
jb
and
cmp
jmp
pop
test
jp
mov
insl
test
inc
inc
scas
jne
loopne
push
mov
nop
mov
adc
andl
xor
push
out
rorl
ret
push
imul
mov
xor
add
mov
mov
fsubr
push
pop
push
mov
inc
arpl
xchg
repnz
sbb
dec
sahf
or
data16
shll
push
int3
dec
outsl
sub
xchg
aam
pop
je
lock
sub
sti
stos
push
or
sub
xchg
in
cmp
divb
test
ss
or
out
cmp
xchg
sub
mov
mov
negb
arpl
pop
std
xchg
sbb
cmp
add
dec
mov
push
add
arpl
or
ror
int3
dec
mov
mov
inc
mov
xchg
in
cmpsb
cs
lcall
loopne
adc
lret
cltd
out
push
stos
js
enter
sbb
push
mov
inc
call
adcl
cwtl
jae
idivl
mov
jp
pushf
stos
sub
movsl
dec
fmull
enter
daa
outsl
js
adc
aam
cmpsl
out
shlb
int3
sbb
add
mov
je
clc
lods
insl
adcb
push
fst
jl
aam
in
fsubrl
ret
cmpsl
rcll
call
pusha
sub
inc
mov
adc
pop
mov
adc
adc
loopne
xor
xchg
add
or
xlat
sub
pop
xor
mov
shll
pushw
xchg
lock
fcompl
sub
int3
pop
loop
push
mov
flds
pop
inc
xor
or
inc
cmpsb
lcall
sbb
into
xchg
and
ss
dec
aas
xorl
add
scas
das
push
insl
mov
add
negl
or
dec
sbb
pop
add
fsubrl
inc
cld
repnz
scas
sub
dec
int3
pop
push
pushw
jbe
sbb
lcall
xchg
addb
je
in
add
hlt
pop
jecxz
jg
mov
or
cmpsl
jle
ret
js
mov
test
mov
into
pop
lea
adc
xlat
jae
pop
jmp
test
lcall
jo
dec
push
addl
jp
inc
sbb
pinsrw
nop
loope
and
add
scas
dec
pop
add
imul
dec
mov
mov
lock
push
fnstsw
stc
pop
imul
addr16
notl
dec
or
loope
adc
sub
push
dec
xor
push
and
lock
loopne
mov
add
sbb
jae
fbld
and
and
lods
clc
jne
jmp
sub
subb
cmp
imul
dec
jns
mov
pop
jecxz
jns
out
cs
shl
mov
dec
pop
orb
fidivrs
scas
adcb
mov
ljmp
insb
xorl
ljmp
stc
cli
aas
inc
or
shl
stc
sub
inc
pop
mov
fnstsw
dec
mov
incl
lret
ja
cmp
and
lahf
mov
dec
pusha
push
mov
cmp
push
add
dec
call
std
shlb
sub
push
pushf
out
popa
jnp
pop
pusha
hlt
xchg
and
sahf
imul
aaa
push
mov
push
data16
fsts
lods
jg
or
jge
adc
jae
inc
test
jbe
mov
jns
mov
mov
push
push
imul
lahf
push
jno
jmp
test
jbe
pop
addl
mov
jb
addr16
push
movsl
pop
cli
pop
mov
pop
dec
mov
cwtl
out
ret
push
mov
test
sbb
test
test
inc
cs
mov
les
mov
dec
add
inc
jno
pop
mov
pushf
dec
lods
mov
xchg
jg
dec
imul
adc
stc
movsb
sbb
dec
cmpsb
mov
xchg
out
pop
push
data16
inc
mov
dec
fdivrl
xchg
add
stc
fisubrl
repz
xchg
in
xchg
cli
ret
stos
mov
fldcw
add
mov
cmpsb
bound
cmp
push
mov
rcll
test
aaa
loope
ds
cmc
push
pop
data16
sbb
movsb
cmp
ret
shlb
pop
addr16
jno
arpl
dec
xchg
pop
fiadds
jge
daa
in
movsl
mov
adcb
xchg
pop
pop
lods
aas
call
mov
ss
inc
fs
cltd
imul
push
pusha
call
add
xchg
dec
stos
out
psadbw
pop
push
mov
test
call
dec
dec
test
iret
pop
outsb
enter
or
sbb
xchg
insl
and
and
icebp
movsl
or
fcmovnbe
nop
cli
shl
sbb
jmp
inc
sbb
int
mov
jns
or
aas
push
in
das
xorl
fsubp
sbb
dec
mov
push
aad
cmc
addr16
xor
je
fcomp
mov
xchg
sub
mov
fwait
ret
cmp
aas
jmp
add
push
fwait
mov
inc
inc
into
push
lahf
dec
movsb
fdivrs
or
adc
add
negl
jnp
lret
pop
fdivl
popf
dec
pop
sub
paddb
ss
cmp
out
dec
mov
daa
mov
mov
mov
int3
test
mov
dec
push
cmp
mov
jno
xor
fldl
inc
ja
sbb
jg
sbb
ljmp
les
xor
int
loopne
xchg
fcompl
imul
lea
inc
cmp
or
mov
fwait
sub
jl
pop
in
stos
lods
sub
rcrl
icebp
add
subl
in
outsl
sub
sarl
fdivl
push
cmp
lret
add
cmc
cltd
xor
jmp
into
adc
jecxz
lock
daa
cmpsl
sbb
insb
xchg
daa
data16
in
cmp
adc
cmpsb
and
scas
clc
inc
stc
cmp
jecxz
fstpt
out
sub
push
or
mov
js
scas
arpl
lret
dec
cmc
mov
or
add
cmp
ret
scas
mov
pushw
rolb
aas
out
in
in
inc
out
inc
cmp
out
sarl
mov
pop
adc
jl
icebp
loop
mov
data16
push
ss
out
or
fisubrs
ja
popf
movsb
mov
leave
int3
pop
les
push
and
aam
push
dec
sbb
loopne
test
sbb
mov
xor
mov
adc
sbb
xchg
dec
mov
xchg
mov
test
pop
cs
jg
int
xchg
mov
shlb
lods
mov
std
nop
or
cmp
test
sbb
jp
sbb
inc
sbb
xor
mov
adc
sti
aad
adc
shll
cmp
sti
cmp
lods
sahf
and
cltd
jl
lret
test
rclb
jns
or
adc
pop
push
cmpsl
sbb
call
push
mov
add
pushf
mov
jo
xor
movsb
dec
stc
std
pusha
scas
pop
mov
sahf
adc
push
div
es
jp
movsb
xchg
push
mov
cmpsl
push
cmp
imul
imul
mov
sbb
mull
std
loope
int3
fsubr
sbb
shl
repz
push
push
sub
pop
insb
cwtl
in
insl
inc
insl
push
sbb
xor
ret
iret
push
or
adc
push
xchg
add
mov
in
incb
and
inc
sub
pop
je
push
xchg
sbb
jg
stos
adc
jnp
inc
rorb
adc
movsl
jnp
enter
pop
iret
inc
mov
mov
cmc
sarl
and
filds
inc
sbb
xchg
fcmovnb
mov
jno
push
sub
xchg
cmpsl
ficoms
adc
fld
xor
daa
shrb
pop
rcr
cltd
dec
je
popa
sbb
xchg
mov
test
ds
push
add
rclb
adc
int
bnd
ds
sbbb
pop
mov
add
int
loop
andl
sub
fildll
jbe
mov
aad
jno
ficoms
loopne
inc
xchg
inc
lret
mov
xor
sbb
xchg
std
mov
js
inc
or
cmpsb
jmp
xchg
pop
adc
mov
jo
xchg
mov
call
xor
movsl
aad
scas
jle
into
sarb
mov
xchg
daa
xor
add
ds
mov
cmp
or
xchg
lock
cmpsl
add
lock
int
es
sbb
imul
stos
mov
sbb
and
and
pop
pop
and
mov
push
push
xlat
mov
scas
cwtl
fiaddl
sahf
mov
and
jae
push
add
inc
jge
outsl
and
mov
test
adc
dec
mov
jge
add
cld
mov
jns
test
add
enter
hlt
shrb
push
mov
sahf
repnz
pushf
or
or
mov
loopne
pushf
out
stc
pop
xor
add
xchg
dec
dec
aaa
mov
adc
in
bound
movaps
cmc
pop
lcall
pop
push
dec
cmp
sbb
jle
or
outsl
push
mov
lret
les
pop
and
loop
fwait
sub
rcrl
out
out
xchg
sar
std
xchg
stos
popl
cld
cmp
mov
or
lret
pop
movsl
in
test
lcall
std
push
pop
push
or
fucom
xchg
ficoms
xlat
ljmp
leave
adc
fsts
movsl
int3
lcall
add
jge
push
jle
rcll
popf
push
mov
ljmp
mov
and
movsl
or
inc
aam
add
js
xlat
sub
pop
shrl
pop
pop
mov
popf
lods
imul
push
dec
add
mov
in
jo
mov
add
or
faddl
outsb
pop
repnz
inc
mov
jecxz
jae
addb
clc
fstpl
sub
xor
cmp
pop
int3
sub
sar
and
mov
sbb
pop
push
ret
xchg
cltd
xor
push
loope
cli
cli
xchg
add
and
mov
mov
bts
es
iret
repnz
mov
call
stos
pop
mov
lret
nop
or
inc
test
popa
mov
mov
add
popf
mov
push
push
sub
push
jmp
sbb
pop
cmpsl
add
ror
mov
xchg
mov
sbb
lods
iret
imulb
clc
pop
ret
pop
fcmovb
test
out
adcl
iret
cli
jno
rcrb
dec
fidivrl
stos
ja
add
enter
jno
or
movsl
or
cmp
jecxz
insl
add
jl
jnp
inc
mov
push
sub
test
movb
sbb
out
cld
and
loope
ljmp
shll
mov
and
xchg
inc
out
and
aaa
xor
repnz
adc
mov
loop
stos
jmp
out
lret
and
js
jne
pop
mov
cmp
outsl
in
ds
pop
test
sti
or
pop
pop
pop
inc
mov
iret
gs
stos
adc
mov
xor
shlb
xor
int
pop
mov
jg
and
push
sbb
push
push
jg,pn
pop
scas
xor
jl
xchg
stos
cmpsl
std
cmp
cmpsb
cmp
mov
stos
jge
pop
aam
in
jle
lret
or
test
jmp
lret
xchg
mov
stos
adc
aaa
pushf
cld
frstor
aaa
out
mov
fidivrs
sub
pop
stos
adc
pop
jecxz
dec
jge
jle
movsb
jmp
testl
cwtl
sub
cs
iret
shlb
sub
push
add
in
ficomps
sub
xor
sbb
mov
inc
cs
outsl
flds
mov
mov
fs
loop
sub
pop
add
idivb
fst
push
adcb
or
gs
lock
xchg
gs
mov
sub
movsl
and
or
add
and
fimull
test
lea
shl
mov
cmp
mov
mov
cmc
xlat
jmp
sarb
mov
adc
pop
push
les
jmp
roll
rcl
adc
mov
mov
xchg
test
data16
jg
pop
shll
cld
mov
jp
out
mov
or
cmpsl
imul
mov
in
jno
lds
inc
cld
and
addr16
add
push
loopne
dec
gs
rcl
lods
sbb
test
scas
xlat
jb
sbb
pop
xlat
cmc
and
jbe
adc
leave
add
jne
jnp
outsb
jne
lahf
lret
int
lcall
jp
stc
inc
dec
jl
dec
adc
mov
stos
mov
sbb
test
xchg
or
xchg
adc
cld
ds
push
inc
aam
shll
imul
pop
push
mov
jb
fldcw
xor
cmp
cmp
jecxz
jle
push
js
mov
fwait
sbb
in
xchg
add
ficoms
int
les
xor
mov
sahf
sbbb
adc
push
aas
notb
scas
inc
jmp
mov
mov
sbb
into
sbb
sub
push
inc
fwait
outsl
pop
dec
stos
ds
push
fldl
adc
pop
sub
mov
pushf
jo
in
sub
mov
les
call
lods
mov
in
jmp
dec
ret
enter
or
push
jae
addb
push
sub
enter
fisubrl
aaa
xlat
inc
enter
ljmp
shll
pop
inc
rcl
mov
inc
clc
je
push
lret
mov
xchg
push
int
mov
mov
icebp
es
mov
addl
sub
mov
adc
dec
mov
in
popa
aam
daa
xchg
out
inc
inc
movsl
popf
mov
and
fadds
mov
cmp
add
mov
fstpt
xchg
int
xor
lock
je
pusha
xchg
lcall
xchg
push
fld
jmp
fisttpl
jp
xchg
xor
into
mov
in
sub
or
ds
insb
xchg
pusha
cld
roll
pop
sbb
mov
pop
push
sub
ret
cli
mov
idivl
sub
or
xlat
cmp
dec
xor
jl
insb
movsl
in
inc
adc
repnz
cmpsb
sub
aaa
movsb
subl
out
in
cli
xor
into
sub
jbe
pop
push
xor
mov
aad
add
xlat
or
mov
pand
pop
adc
mov
jne
test
cmp
es
scas
sub
mov
push
nop
xlat
lret
cmp
jge
pop
sub
mov
sti
pop
ret
mov
xchg
aad
outsb
aaa
add
lods
pushf
cmpsb
movsl
andl
fdivl
mov
gs
and
sub
enter
push
or
add
inc
repz
push
imul
push
cmp
addl
out
sub
cmpsb
sbb
jecxz
jg
pop
repz
aam
data16
pop
cmp
adc
dec
test
pusha
mov
ss
into
arpl
pop
outsl
inc
xchg
xchg
push
add
dec
loop
call
loopne
pop
mov
imul
push
sbb
adc
lea
and
adc
lock
cli
movsb
push
dec
pop
jle
sbb
stos
test
dec
pop
in
enter
mov
jnp
repz
dec
sahf
scas
pop
popf
jmp
rcr
out
out
lahf
push
sub
mov
mov
clc
aad
xchg
adc
lcall
int
rclb
cmp
in
mov
test
dec
jecxz
or
shlb
in
or
or
jg
bound
arpl
add
out
cld
cmp
ss
sahf
and
inc
mov
int
adc
aas
movsb
cmp
lret
or
orb
ss
loope
adc
mov
or
mov
or
sahf
xor
mov
xor
les
pop
sub
push
fstps
mov
or
in
mov
xor
inc
cmpsl
pop
adc
lcall
ss
add
mov
imull
sub
pop
fnstenv
xor
adc
jg
cli
push
pop
pop
cmc
movsb
mov
mov
fcomps
mov
sbb
das
or
cmc
imul
test
stos
aaa
repz
inc
shrb
rcrl
sbb
leave
inc
inc
mov
sbb
mov
inc
mov
jns
dec
push
pop
adc
int3
jle
mov
cwtl
call
dec
into
xchg
adc
popa
andl
pop
in
and
adc
stos
inc
divl
xchg
or
sbb
stc
mov
ss
mov
inc
sahf
xor
sub
cli
fwait
cli
jmp
push
scas
aaa
and
push
dec
add
in
outsl
mov
bound
jb
iret
and
push
cmp
cmpsb
add
dec
sbb
or
out
imul
dec
aaa
xlat
lea
mov
shrl
sarl
mov
and
adc
xchg
nop
or
mov
inc
orl
divl
mov
mov
fimull
ftst
int3
movsl
cmp
cltd
cmc
scas
jp
addr16
fcmovu
adc
lods
pushf
es
mov
push
xchg
lods
xor
iret
movsb
pop
jp
jle
sarl
ret
push
push
push
dec
decl
js
sti
push
fidivl
sbb
xor
push
inc
movsb
outsb
lock
divb
ljmp
mov
enter
addr16
inc
jmp
cltd
dec
outsb
lret
insb
jo
rcr
jg
pop
adc
mov
jbe
out
mov
ret
push
stos
mov
xchg
insl
cwtl
popf
pop
pop
cltd
lahf
out
dec
cs
out
jnp
mov
sbb
mov
arpl
int3
daa
repnz
into
cmp
jmp
aad
mov
adcl
mov
in
cmp
mov
pop
bt
or
popa
pop
daa
inc
mov
cli
cmp
shl
mov
repnz
lahf
dec
aaa
xor
xor
decl
sbb
jmp
cmp
inc
push
mov
icebp
mov
das
xchg
leave
sub
push
mov
rclb
test
mov
and
jno
mov
pop
xor
mov
xor
dec
adc
and
xchg
lahf
adc
cmp
mov
cmp
jnp
data16
push
fdivrl
in
icebp
inc
sub
popf
sub
aas
out
jae
out
push
xchg
in
inc
jge
mov
inc
std
or
xchg
adcl
jnp
pop
mov
cmp
mov
xlat
aad
xchg
push
cs
out
pop
push
cmp
xchg
mov
or
sbb
fdiv
mov
test
xchg
fwait
xlat
movsl
andl
outsl
add
jmp
mov
add
mov
inc
adc
lret
push
fstpl
jbe
jbe
push
imul
cmp
add
mov
subb
cmc
mov
sti
outsl
loop
jo
pop
xlat
xlat
xor
pop
fsub
daa
add
rcrl
loop
inc
add
mov
test
jge
jb
pop
mov
dec
mov
js
cmp
stc
xor
jne
lret
cmp
push
dec
rorl
jp
push
aad
mov
fstp
or
mov
ja
jg
sub
lret
iret
push
pop
sbb
inc
pushf
and
scas
inc
push
out
aad
cmc
jge
int
shl
addr16
inc
pop
loop
addr16
in
je
std
mov
mov
fiaddl
lods
imul
mov
cmp
imul
sbb
daa
sub
out
lods
mov
sbb
or
jns
cmp
dec
xchg
jno
mov
push
and
inc
lods
xor
mov
add
stos
xor
adc
cmp
mov
jecxz
mov
pop
ret
inc
leave
pop
xchg
out
dec
xor
fs
xchg
xor
xor
sub
imul
loopne
xor
lock
jno
pop
inc
loop
pusha
dec
lret
mov
lcall
adc
bound
fwait
jge
jne
push
aaa
push
enter
sbb
ret
lret
bound
mov
out
insl
jns
pop
xchg
push
cli
imulb
or
or
sub
lea
xchg
inc
test
sbb
mov
pop
test
jne
lahf
fwait
cmc
dec
inc
pop
clc
push
push
mov
int
push
mov
push
das
mov
sahf
insb
repz
rcl
jmp
movl
dec
fstpl
mov
repnz
xlat
shrb
cmpsl
scas
lds
mov
data16
jmp
cmp
ss
push
cmp
add
imul
add
in
aaa
test
test
inc
mov
es
in
sbb
scas
cwtl
xchg
lea
notl
xchg
mov
addr16
xchg
pop
movsl
add
mov
stc
xor
or
sub
js
shrl
sub
bound
mov
je
add
ficoms
lds
jne
xchg
lcall
popa
mov
shll
or
int3
mov
sub
push
jno
lret
out
in
sub
xor
fdivrs
pop
mov
add
cmpsb
stos
dec
mov
hlt
outsl
mov
fabs
fildll
adc
ljmp
aas
xchg
mov
and
push
or
mov
arpl
cmp
cwtl
std
push
fwait
mov
dec
mov
xchg
sub
jae
add
xchg
hlt
mov
adc
test
push
inc
imull
lret
or
arpl
fnstsw
and
lock
cmc
mov
and
cmpsb
adc
push
inc
xchg
xor
and
sub
in
sbb
mov
ret
sub
mov
push
jmp
cltd
iret
filds
adc
arpl
xchg
mov
movsb
cmp
insb
and
xlat
dec
push
cmp
or
adc
xor
pusha
cwtl
insb
shl
xchg
test
out
in
nop
in
jle
and
shlb
fimuls
out
lods
vaddpd
pop
loopne
cltd
mov
jns
outsb
andb
pop
idivb
dec
inc
ljmp
jle
movsb
mov
xor
popf
hlt
shlb
sarb
lret
repz
dec
sbb
add
notl
pop
js
pop
mov
xchg
mov
jae
lods
lea
les
xchg
adc
int3
int
outsb
adc
push
add
push
push
mov
movsb
jnp
pop
pop
cs
inc
cmp
inc
and
mov
fisttpll
cmp
arpl
xchg
dec
in
daa
jbe
jne
in
sub
sar
mov
scas
test
icebp
dec
jo
rorb
lcall
mov
jecxz
dec
jl
mov
add
outsb
fdiv
jnp
ss
and
sub
ret
out
lea
mov
pop
adc
aad
aam
or
and
mov
pop
lock
cmp
inc
jmp
je
adc
aas
sub
push
xchg
sub
cld
enter
lret
or
adc
testl
int
ljmp
cmpsl
mov
testb
jns
add
jo
iret
loopne
and
mov
fs
stos
push
cmovbe
mov
mov
and
imul
out
fisubrl
dec
out
cli
jl
mov
sbb
sahf
add
dec
jae
popa
push
sti
rorb
dec
sub
outsb
dec
fsubs
or
pop
mov
fcomps
jecxz
pop
bound
mov
xchg
hlt
inc
stos
mov
popw
sbb
sbb
pop
xchg
enter
arpl
nop
pop
xor
push
push
daa
mov
push
mov
pop
test
cmpsb
lcall
roll
inc
imul
cmp
fwait
xchg
jmp
cmp
mov
sahf
cwtl
mov
lret
lods
xor
or
cmpsb
dec
iret
mov
aas
outsb
cmp
mov
ljmp
xchg
add
push
push
mov
out
push
and
rorl
push
sub
or
sbb
lret
iret
xor
adc
scas
cwtl
testl
sahf
cmp
mov
fimuls
cmpb
ficoms
daa
fidivrl
loop
dec
sar
adc
pop
xchg
pop
mov
into
js
inc
daa
es
mov
inc
jns
stos
dec
push
sbb
pop
dec
dec
or
xchg
jbe
push
dec
cmpsl
rorb
add
nop
pop
pusha
js
push
mov
or
aas
pushf
cmp
lcall
scas
out
out
in
subl
sbb
iret
test
xor
or
stc
aad
jle
dec
jo
add
jmp
shl
int
loopne
sahf
or
in
sub
lcall
xchg
fmul
fstl
ret
adc
leave
adc
incb
push
negb
out
daa
adc
push
xchg
addr16
add
lcall
mov
fs
mov
ret
ret
addl
mov
sub
movsb
imul
mov
inc
jne
sub
movsb
ljmp
in
popf
lods
and
inc
and
inc
sbb
fcmovnu
movsb
push
jne
mov
jb
push
je
and
jp
cmpsl
out
shlb
outsb
push
in
call
and
mov
movsl
mov
push
jmp
push
fldt
and
andl
xchg
add
clc
and
sbb
xchg
fisttpl
xchg
notl
dec
xchg
mov
pushf
xor
inc
xor
push
in
fcomip
jnp
ss
call
adc
pop
dec
insl
xor
out
lods
rcrl
addl
hlt
jp
idiv
add
pop
xchg
loop
loop
sbb
cld
fsubr
mov
jp
jae
pusha
add
jp
andb
fdivp
xchg
pop
mov
aaa
add
test
jmp
leave
lds
jbe
nop
dec
pop
jns
sbb
push
jp
jmp
stos
lret
pop
xor
pusha
out
sub
in
mov
dec
lea
mov
ja
loope
lret
jmp
mov
or
push
sub
int3
jb
adc
pop
aam
in
scas
test
movsl
xor
fs
testb
daa
sub
jl
sbb
out
aam
movb
stc
adc
cmp
cs
mov
inc
xchg
xchg
add
aaa
dec
xchg
xchg
mov
inc
jmp
jb
push
jbe
inc
dec
jbe
sbb
jge
cltd
xchg
push
jge
movsl
rcll
mov
push
outsb
dec
xchg
iret
cmpsl
xchg
push
add
scas
mov
cmp
test
push
push
jne
inc
cmp
sbb
add
insl
pmaxub
scas
push
icebp
or
mov
test
xor
xor
or
dec
cs
jns
movsl
cmp
sbb
negl
ljmp
test
push
or
xchg
popa
and
mov
cmp
xorb
pop
shr
xor
mov
mov
repnz
enter
sub
mov
das
inc
int3
cwtl
xor
outsl
test
pop
xchg
movdqu
mov
mov
lods
int
sahf
xchg
mov
out
xchg
int3
xchg
ja
and
mov
mov
lods
les
out
jno
call
std
jmp
lods
neg
xchg
jge
fwait
js
pop
jo
bound
xlat
sbb
nop
jo
pop
addb
push
mov
sahf
adc
push
addb
mov
ja
mov
pop
xchg
adc
mov
out
cmp
les
xchg
repnz
or
mov
pop
and
into
test
popf
cmc
and
add
dec
fs
gs
dec
scas
mov
imul
inc
addr16
popl
aaa
movsl
ja
ret
push
fs
idivb
mulb
mov
imul
sbb
hlt
stos
mov
jnp
aad
inc
in
movsb
call
lret
scas
inc
xor
and
nop
jno
mov
xchg
ja
ss
mov
or
or
cmp
clc
scas
addr16
ja
inc
in
ds
fcmovnu
lea
mov
xchg
push
rcll
sub
fnsave
cmp
mov
daa
and
dec
outsl
cmp
xor
jp
inc
cli
dec
mov
jb
mov
sbb
and
jp
leave
mov
adc
clc
dec
lahf
fstps
clc
inc
or
mov
or
aas
fidivl
dec
sar
push
clc
push
sub
outsl
fadds
cs
fs
fisubrs
jg
ds
jp
xchg
cmp
cmp
mov
add
aad
xor
dec
adc
dec
aaa
xor
imul
dec
test
lcall
or
lcall
popl
fnstenv
lret
push
mov
mov
cmp
inc
push
xchg
mov
adcl
xor
fildl
pop
dec
and
jns
xchg
mov
add
fidivrl
add
lea
jns
frstor
jnp
sub
jnp
int3
lods
js
insb
jmp
push
xor
or
in
and
test
cli
int3
sub
pop
sub
aaa
pop
pop
mov
js
mov
das
add
imul
mov
cmpsl
shll
jp
pop
and
lods
mov
xor
test
int3
mov
pop
loope
lods
inc
sbbb
pop
mov
pop
ds
iret
inc
cmp
jne
jae
daa
fs
popf
lds
add
cmp
inc
jae
js
andl
incb
ret
cmp
out
mulb
lock
dec
and
xchg
xchg
aam
lea
lds
stc
xchg
cmp
aad
jns
andl
xlat
add
push
mov
lea
sub
pop
dec
dec
mov
out
sbb
adc
rcll
clc
inc
cltd
xchg
jl
int
ds
xor
shl
inc
leave
fcmovne
inc
inc
fstp
leave
and
xor
je
lock
ficoms
in
cmpl
js
xlat
nop
outsl
pop
cmp
fs
pop
xor
mov
mov
fwait
in
mov
inc
jmp
test
jns
adc
scas
loope
mov
stos
pop
mov
jg
xchg
arpl
cmp
aas
add
mov
lcall
jecxz
imul
xchg
cmp
fmull
fldenv
int3
mov
adc
dec
adc
mov
in
and
jnp
cli
xchg
jno
push
sbb
mov
clc
lahf
dec
adc
scas
cwtl
ss
imul
stos
outsb
clc
mov
inc
lds
mov
lock
push
or
bound
xchg
fistps
or
dec
lods
xchg
or
adc
xchg
sbb
lods
ds
mov
in
rorb
enter
or
fisubrl
ret
mov
fistl
sbb
cs
pop
out
jnp
inc
cli
hlt
push
pop
aad
data16
push
andb
mov
add
xor
insb
inc
sbb
pop
ret
dec
sub
mov
xor
pop
xor
gs
push
xor
add
test
sbb
aas
daa
cmpl
dec
je
and
jge
push
je
sbb
mulb
sbb
pop
jns
imul
sbb
xchg
repz
xor
lret
or
jp
data16
or
popf
sbb
mov
gs
sub
xchg
leave
adc
adc
pop
imul
sbb
adcb
xchg
add
adc
int
rcr
inc
fstpt
add
daa
xchg
shlb
add
cmp
sub
test
sub
cmpl
icebp
dec
lret
or
fadd
cli
jo
jb
cli
jp
ss
inc
xor
sbb
push
adc
ret
flds
sub
sbb
mov
sbb
ds
es
jb
fs
out
pop
test
mov
mov
insl
jl
fwait
pusha
mov
int3
add
push
ret
cmp
sub
into
daa
cltd
mov
je
and
repnz
ljmp
ror
clc
cwtl
aas
gs
sbb
insb
push
test
jns
xor
sbb
rcrb
rcr
popf
mov
push
jge
sub
pop
dec
lods
cltd
xchg
pop
lds
out
ja
and
and
divl
inc
ds
pop
stos
int
movsb
cmp
lods
ret
lahf
les
lcall
xchg
jl
adc
jle
cmp
stos
scas
xchg
test
cmp
cli
nop
test
jne
or
mov
int
pusha
arpl
xchg
push
out
in
test
icebp
mov
jle
jmp
mov
add
ljmp
lret
in
lahf
mov
stos
movsl
xor
in
jae
add
or
aaa
inc
jb
fstps
insb
jle
call
in
or
adc
or
sbb
cmp
sub
cli
xor
aas
xchg
movsl
outsl
adc
xchg
aaa
cmp
lcall
cmpsl
dec
pop
ret
pop
mov
xchg
gs
xor
subps
push
dec
lock
ficomps
cmp
sub
jmp
pop
push
notb
shl
sbb
pop
push
cmp
insb
push
ret
and
adc
pushw
arpl
scas
ds
pop
test
xor
pop
cmpsl
fwait
sub
jno
addr16
mov
and
add
mov
outsb
lret
addr16
rcll
and
or
insb
loope
imul
fnstenv
and
mov
or
aam
sub
and
lods
int
dec
mov
dec
or
and
push
or
sub
xchg
jns
ja
pop
lgs
add
mov
dec
mov
sahf
pop
int
mov
adcb
cmp
jne
inc
test
rcll
cmp
out
loop
jl
cwtl
nop
xor
add
enter
xor
mov
js
bound
mov
lret
mov
jmp
inc
fisttpll
cld
scas
xor
jge
mov
loopne
cmp
test
inc
call
fildl
jb
push
lret
out
outsl
mov
add
out
mov
add
or
inc
notl
pop
mov
jns
xchg
sar
call
icebp
inc
ljmp
jae
shll
arpl
ss
mov
add
and
daa
add
sub
dec
rclb
dec
jb
sbb
cmpsb
enter
pop
out
jle
and
rol
cmp
mov
stc
or
adc
jb
cmpsl
sti
mov
or
xchg
cmp
jbe
push
cmpsl
js
adcl
lahf
dec
movsb
mov
imul
into
fcmovnu
mov
fbstp
mov
orl
in
sbb
xor
adcb
pop
pop
jbe
fsub
jg
add
popl
push
jo
mov
inc
test
ja
mov
mov
jno
out
les
cwtl
add
loope
das
clc
enter
and
fstpl
sub
sbb
dec
rolb
xchg
jmp
jnp
sti
clc
push
and
loop
push
int
cmc
icebp
sub
fidivrs
icebp
cltd
popa
jnp
clc
inc
push
aam
jne
dec
rcr
mov
lcall
cmp
addr16
hlt
push
lods
int
mov
lds
or
insl
mov
das
movsb
jae
mov
mov
sub
cmpsl
inc
bound
cwtl
mov
pushf
dec
aaa
sub
loop
rol
and
stc
jb
xlat
hlt
loope
jo
jle
mov
stc
add
mov
pause
enter
jle
lods
popf
fcoms
in
scas
mov
mov
in
add
int3
outsb
adc
repnz
sub
aad
or
ss
inc
loopne
lahf
mov
add
mov
scas
inc
mov
and
scas
aam
xchg
loopne
aas
shlb
push
orl
mov
sub
ds
fs
enter
js
fstpl
xchg
add
into
ret
fs
or
push
out
lahf
pop
repnz
cmp
pop
ret
jg
push
push
fcomp
push
mov
repz
lods
das
lea
jg
mov
lcall
insb
stos
lea
repnz
in
xchg
or
jp
pop
insl
mov
pop
mov
sbb
loop
cmpsb
pop
dec
cmp
movsb
mov
mov
notb
rol
movsl
ja
call
shrb
sbb
xchg
push
aas
pop
jl
mov
adc
sub
movsb
inc
dec
inc
sahf
loopne
cmpsl
arpl
test
add
and
xchg
add
sbb
mov
pushf
in
xchg
add
stc
or
lret
cmc
test
cmc
mov
push
insl
mov
cmp
into
fcmove
adc
sbb
push
out
jmp
cmp
inc
adc
aad
sub
push
sahf
test
neg
mov
xchg
lods
push
mov
cmpsb
sbb
cs
gs
movsl
xchg
arpl
loope
push
cs
pop
inc
pop
xlat
push
sub
and
je
into
popa
aam
test
int3
ss
test
mov
clc
dec
push
inc
test
stos
fxam
ds
in
fwait
adc
and
jge
nop
scas
and
cmp
dec
dec
mov
jp
cs
sub
jno
or
mov
xchg
insb
ljmp
xchg
insb
xchg
mov
insb
jp,pt
xor
lods
xchg
or
addl
mov
mov
adcb
in
popw
mov
aas
dec
cmpsb
sub
ss
into
lcall
sahf
and
xchg
adc
arpl
cmp
aam
lods
imul
loop
mov
pop
faddl
imul
iret
lahf
inc
movntq
push
rolb
jle
pop
shlb
in
inc
iret
ja
add
push
aaa
aad
or
push
xor
loope
imul
push
adc
dec
cmovo
adc
clc
mov
inc
sub
stos
lods
jnp
adc
cwtl
fwait
pushf
pop
inc
adc
fwait
and
cmp
popf
aaa
jl
or
push
pop
pop
iret
mov
push
dec
sbb
hlt
mov
mov
cmp
out
and
xor
div
shlb
push
jno
out
sub
mov
cmp
stc
loope
out
aaa
sub
xchg
push
outsl
fimull
sbb
pop
jns
mov
call
mov
mov
dec
add
push
xlat
repz
jno
scas
inc
lods
mov
popf
das
lods
or
clc
mov
jae
adc
mov
jb
stos
popa
jge
add
movsb
mov
jge
fs
bound
dec
popf
inc
cs
mov
aad
jecxz
xchg
cmp
adc
xchg
mov
mov
repnz
jmp
inc
inc
sbb
sub
test
mov
pop
pop
push
and
subb
adc
movsl
inc
je
or
mov
pop
lods
mov
adc
xor
dec
dec
sub
sbb
sbb
xchg
xchg
sub
jecxz
out
mov
mov
repz
mov
scas
xchg
sub
xor
cmc
cltd
scas
fwait
pop
fnstenv
inc
adc
out
ja
jne
push
jle
or
mov
xor
xchg
out
dec
aam
jb
jo
inc
fnstenv
adc
push
test
inc
pop
out
jne
pop
cld
mov
jmp
dec
into
or
aaa
outsl
leave
shl
cltd
xor
sbb
movsl
mov
sub
jnp
std
jl
lret
pusha
sbb
ret
xor
shrb
or
es
mov
push
insl
inc
sbb
mov
data16
rol
adc
push
xchg
adc
das
mov
mov
insb
das
push
pop
fistl
dec
sub
ret
mov
bound
jge
mov
imulb
dec
jae
push
jecxz
or
das
jbe
fcomi
sub
xor
inc
fisttpll
cs
lret
mov
push
inc
xor
inc
test
mov
jmp
out
mov
loop
xchg
mov
test
dec
push
bound
jge
sub
add
push
popf
mov
cmp
mov
sub
and
adc
lods
xor
cmp
stos
jbe
push
xor
sahf
inc
mov
pusha
je
xor
mov
hlt
xor
inc
mov
and
push
int
jne
lret
mov
cltd
push
dec
in
mov
fwait
xor
push
arpl
xlat
scas
movsl
push
testb
gs
and
rcll
xor
arpl
shll
lret
mov
or
xcrypt-ecb
cmpsl
into
mov
mov
loop
push
mov
xchg
jno
and
cwtl
hlt
stc
sub
repz
dec
fidivrs
punpckldq
or
shlb
mov
adcb
test
adc
ss
loopne
shlb
into
jle
add
lds
les
sub
leave
mov
pushf
stc
aaa
mov
or
nopl
ss
test
ret
lock
lahf
lods
push
xchg
mov
pop
mov
jecxz
inc
lcall
test
dec
je
mov
pop
xor
inc
push
fsubrl
mov
and
or
inc
mov
inc
imul
mov
faddp
shl
and
sub
fnsave
out
mov
push
pop
test
jb
test
and
mov
inc
mov
jno
mov
or
dec
jge
std
out
jmp
and
and
and
lds
mov
or
insb
ljmp
jo
cmpl
push
in
mov
dec
push
movsb
mov
in
enter
stc
xor
ret
jae
lret
sbb
push
xlat
xchg
enter
cmp
ljmp
shlb
imul
mov
lods
cmp
test
insb
jp
out
cmc
orl
add
movl
dec
popf
je
or
in
jmp
mov
aad
int3
jae
add
and
xor
icebp
mov
fsubrl
pop
aaa
cli
fs
lock
adc
dec
add
cld
push
adc
or
xchg
mov
clc
xor
rorb
mov
test
fwait
xchg
jge
nop
jb
mov
jae
fcmovnu
dec
xchg
mov
jno
leave
xlat
push
pop
lret
or
lcall
dec
and
mov
daa
dec
inc
pop
aas
and
add
pusha
aam
dec
test
shll
loope
adc
xchg
repz
mov
xchg
popf
daa
jle
dec
call
xor
push
cli
scas
pop
mov
mov
out
sbb
jge
fwait
stc
jo
movsl
push
cmp
stos
fsubr
dec
push
add
fldcw
mov
lods
xlat
xchg
loop
push
sbb
pushf
dec
and
loopne
in
stos
js
ljmp
push
insb
mov
jg
enter
popf
pop
setg
fiadds
mov
adc
push
sub
lods
sti
ret
aam
and
hlt
sarb
sbb
add
popa
mov
add
adc
leave
jle
fdivr
fstl
daa
dec
jp
out
pop
push
ret
int
pop
xor
insb
cmpsl
sbb
ret
fidivrl
ljmp
stos
cmp
or
add
and
xchg
jnp
and
adc
ret
enter
fmull
inc
aad
in
test
cmp
bound
pop
loopne
in
in
jae
mov
sbb
repz
js
icebp
dec
jno
adc
mov
add
rcr
mov
and
gs
loope
push
adc
sub
cli
nop
and
jmp
sbb
aaa
lods
push
push
std
push
pop
fwait
in
pop
dec
cmp
bound
out
lods
inc
fldl
pop
stos
cmpsb
cmp
push
test
jg
imul
xchg
jne
sub
mov
jb
cli
xchg
jne
jmp
pushf
cs
inc
pushw
push
inc
mov
nop
stos
jmp
inc
push
and
loope
test
or
aam
jl
mov
data16
xchg
aam
cmp
ss
mov
inc
xlat
ja
xor
xor
loope
je
cld
add
shlb
mov
mov
inc
icebp
cltd
push
mov
adc
bound
out
mov
loop
sub
mov
rolb
push
jle
fstpt
shll
sub
sub
mov
pop
iret
push
pop
sbb
push
dec
out
rcr
jbe
cld
out
cmp
jae
push
sub
in
test
iret
xchg
push
sub
movsl
lods
ret
xor
pop
push
rorb
mov
stc
adc
adc
pop
push
push
rcll
or
mov
clc
xchg
cmc
pop
mov
push
cmpsb
mov
pop
dec
outsl
jl
jmp
inc
mov
fnstenv
sarb
mov
and
xor
movsb
and
sbb
or
into
pop
shlb
ret
push
scas
and
or
sub
adc
jmp
leave
jbe
and
mov
jno
insb
nop
inc
mov
mov
mov
les
add
mov
daa
dec
dec
jnp
fisubrl
sub
cmp
std
fidivl
cmc
dec
loopne
or
jno
sub
inc
jne
and
push
pop
push
xor
add
mov
rcrb
stc
jnp
je
jnp
mov
mov
iret
jge
pop
aad
mov
popa
mov
cmc
dec
add
jns
dec
sub
dec
shr
imul
scas
lret
testb
fwait
xchg
inc
addr16
xchg
mov
arpl
cmc
pop
cmp
pop
cli
pop
pop
and
adc
push
or
push
test
icebp
sbb
push
inc
loope
aam
mov
jne
add
add
inc
mov
dec
and
mov
shl
xor
fs
sahf
xchg
cmp
insb
cmpsb
jecxz
and
or
dec
ja
pop
shl
jecxz
add
loopne
repnz
inc
call
sub
push
adc
xchg
out
xor
js
std
jae
or
inc
cwtl
mov
daa
andl
cmc
movsl
fdivrs
mov
inc
push
addl
pop
adc
lods
cmpsl
mov
rcr
mov
in
stos
negb
loope
sub
mov
pop
and
or
data16
jo
outsl
call
notb
adc
in
data16
in
lahf
xchg
mov
into
stos
test
xchg
adc
mov
adc
es
mov
push
jg
push
xchg
enter
jmp
pop
mov
add
mov
or
iret
cmpsb
imul
in
push
xor
adc
add
divps
cld
es
and
ljmp
push
inc
jo,pt
mov
mov
arpl
mov
cwtl
jb
scas
insl
ror
popa
or
fcmovnbe
push
pop
mov
imul
test
cmp
ficoms
and
cld
ret
mov
in
cmp
sbb
bound
jmp
sub
dec
mov
bound
jl
xlat
fistps
dec
test
stc
adc
stos
mov
cmc
inc
push
les
lret
pop
leave
jo
les
adc
add
dec
mov
pop
dec
sahf
pushf
pop
cli
pop
out
jo
cs
aas
adc
repz
jne
xor
inc
dec
mov
inc
or
add
pop
cs
jecxz
pop
inc
shlb
das
xchg
in
mov
call
or
ret
inc
cmpsl
loopne
sbb
mov
and
in
loopne
xchg
scas
cmp
fs
sub
push
cs
pop
imul
loop
mov
add
ret
test
icebp
xor
fistpll
test
push
jns
push
cltd
sbb
mov
loop
mov
inc
fstl
add
stos
lods
cmp
xor
js
lea
stos
xor
pusha
lret
jae
out
filds
pop
scas
inc
inc
sbb
mov
lds
lods
out
xor
xor
push
rorb
sub
push
pop
lret
negl
sbbl
sbb
mov
jle
push
mov
lea
iret
cmp
inc
lock
imul
cmc
pop
fcmovnb
call
sbb
push
pusha
scas
and
lds
hlt
in
lods
cmpsl
jmp
leave
xorl
ljmp
popa
fcoml
jno
lea
clc
ljmp
lahf
push
jecxz
add
mov
popf
push
mov
pushf
data16
pop
cmp
scas
lahf
sub
fadd
imul
dec
mov
nop
call
loop
jge
movsb
fisttpl
jo
mov
in
lahf
divb
sub
jae
mov
dec
daa
into
and
mov
mov
mov
add
cli
inc
sub
jle
mov
sub
jecxz,pt
clc
pop
jns
and
hlt
call
stc
push
ljmp
push
jge
push
dec
mov
sbb
lods
cs
or
and
lods
mov
jb
jb
cs
inc
fimuls
jmp
in
roll
xchg
or
je
push
outsb
fcoml
rol
sub
shlb
fucomip
add
aaa
sub
cmc
adc
adc
ret
push
jp
jp
lea
mov
sub
or
inc
inc
in
std
xchg
xor
xorb
cld
sub
mov
fcmovbe
and
push
sbb
add
popf
cmc
jg
into
mov
popf
inc
dec
repnz
or
push
push
inc
jmp
mov
ret
into
mov
inc
in
add
inc
xor
mov
xor
pop
lock
push
and
inc
xorb
xchg
mov
cmpsb
notl
pusha
out
mov
dec
mov
mov
inc
pop
in
jl
mov
in
movsl
js
rol
ret
adc
lcall
es
jge
and
and
xor
pop
std
or
and
pop
popa
mov
inc
or
mov
xchg
cli
cmpsl
lret
jecxz
pop
ljmp
lods
les
lods
int3
pop
loopne
cmc
cmp
mov
jbe
daa
push
mull
and
mov
sbb
mov
adc
and
jg
mov
call
ss
mov
stc
jb
leave
push
bound
pop
or
clc
cltd
out
xlat
sahf
mov
bound
mov
in
lret
mov
and
xor
test
or
jge
fucomi
faddp
orb
pop
xchg
icebp
pop
test
sbb
flds
mov
xchg
adc
sub
cld
addr16
mov
movsb
in
rolb
negl
and
lods
jbe
and
test
sub
aaa
cwtl
mov
testl
insl
imul
add
sub
cli
adc
andb
cli
jb
cmp
stos
enter
sbb
dec
test
adc
adc
addr16
int3
fimuls
add
adc
lcall
clc
mov
dec
jge
lret
aam
sbb
fistpll
push
mov
push
jle
outsb
sahf
in
leave
int
xchg
mov
gs
mov
idiv
sub
add
mov
faddl
sub
jb
inc
xchg
mov
icebp
xchg
andb
ret
xchg
icebp
add
push
movsb
fdivrl
cmp
scas
mov
jecxz
fnstenv
ss
arpl
xchg
popf
ljmp
jl
jecxz
repz
outsb
std
dec
dec
daa
cs
cmp
mov
lock
es
mov
outsb
inc
repz
xor
pushf
sbb
cwtl
in
cld
inc
sbb
lret
cmp
cmpsl
in
shll
jno
lock
inc
fsubrs
cld
jb
rclb
jo
xchg
fadds
mov
inc
or
jo
outsl
jnp
repz
fidivl
int
xchg
sub
xchg
push
push
sbb
insb
adc
in
sbb
mov
sbbl
fldcw
div
cmp
in
dec
dec
pop
and
or
jo
sar
cwtl
mov
fwait
fwait
inc
es
into
std
inc
int
popf
adc
and
xchg
faddl
sbb
out
push
or
cmp
xlat
xchg
mov
outsl
dec
scas
jns
mov
call
and
jb
xchg
ficoms
push
in
mov
xchg
fcoml
pop
into
and
mov
mov
scas
out
sbb
pop
xor
lods
sbb
fwait
test
ficoml
adc
out
mov
cmp
pop
out
andl
jg
xchg
and
sub
pop
jl
scas
sbb
xchg
enter
sbb
repz
stc
xchg
push
sbb
and
int
int3
aaa
ss
gs
cltd
frstor
cmp
je
sbb
cwtl
and
mov
ret
push
lahf
pop
mov
jp
mov
xor
inc
push
sub
xor
xor
mov
int
inc
mov
test
fstpl
push
mov
popf
xchg
stc
es
push
dec
pop
mov
inc
jmp
cmp
jb
pushfw
bound
je
call
mov
mov
xchg
mov
out
xchg
test
in
pop
push
inc
fwait
lret
lret
mov
out
ljmp
adc
xchg
cld
ds
adc
lods
sbb
popf
push
mov
mov
outsb
aaa
mov
idivl
inc
cmpl
jae
push
add
xor
in
jecxz
imul
mov
xor
push
aaa
xor
or
mov
add
jecxz
cmc
enter
loop
rorb
stc
jb
ljmp
adcl
shld
rorl
lods
push
sub
push
popa
shl
mov
shlb
aad
std
mov
bound
test
enter
inc
jo
insl
arpl
and
mov
cltd
es
cmp
jmp
movsl
scas
mov
cmc
ret
cmp
push
iret
fsubs
fldpi
cmp
or
movsl
inc
outsb
pusha
mov
jmp
sub
push
pop
dec
xchg
fs
icebp
es
add
and
clc
mov
pop
jnp
out
outsb
mov
fsts
mov
push
inc
adc
mov
inc
lods
sbb
add
repz
mov
js
push
lock
cltd
imul
cmc
jmp
rcrb
sbb
adc
mov
jp
adc
pop
das
xor
insl
sbb
mov
scas
xchg
data16
xchg
jge
cmp
scas
fwait
xor
clc
in
xor
int
adc
cmpsl
aaa
pop
jge
cmp
xorb
xor
pusha
and
arpl
ds
les
jg
xor
xor
sub
adc
pop
sbb
or
sahf
stos
mov
dec
push
test
xor
imul
stc
fwait
sbb
mov
inc
jge
ret
push
adc
jecxz
dec
lahf
and
mov
loope
cmp
push
xchg
subl
or
add
addr16
sti
mov
loope
in
rcrl
fwait
sub
dec
bound
xor
sub
out
nop
or
addr16
in
sbb
mov
aad
xchg
jb
call
popa
movsb
sbb
cmp
es
xor
cmc
lcall
mov
cmp
fistl
mov
cmpsb
sti
pop
jp
es
mov
sub
mov
jg
dec
icebp
call
jns
adc
out
adc
and
repnz
jnp
leave
movsb
sti
ja
repz
or
mov
xor
orb
cmp
push
jecxz
mov
repz
push
shll
jbe
int
push
jp
xchg
pushf
sbb
xchg
push
adc
in
pop
adc
arpl
add
jne
mov
add
cmpsl
lahf
xchg
stos
into
xchg
fsts
shl
pop
mov
fstp
imul
sbb
mov
test
test
insl
scas
jmp
jnp
or
lods
sbb
cli
nop
inc
mov
fldt
jle
sub
jg
imul
ds
mov
push
mov
jne
mov
sbb
or
lret
mov
jle
xor
nop
jmp
hlt
imul
inc
cs
cld
scas
ret
test
dec
adc
cmp
stos
fdivs
lret
xchg
fsubrl
test
sub
adc
mov
xor
jno
outsb
clc
push
mov
dec
mov
repz
gs
cli
mov
mov
mov
push
jecxz
pop
pop
in
cld
inc
in
xchg
adc
xchg
sub
xor
pop
ret
outsl
xor
sub
lahf
cld
sbb
cwtl
xorb
sbb
stos
sub
push
cmc
inc
sti
cli
insb
push
outsl
xchg
push
add
icebp
adc
lcall
je
shl
mulb
xchg
sbb
stos
movsl
xchg
insl
enter
lock
jno
mov
hlt
ljmp
insl
out
jmp
pop
xchg
xor
dec
in
mov
jo
mov
mov
mov
and
out
mov
jmp
or
push
or
daa
stos
addb
and
leave
pusha
inc
test
jns
push
mov
outsb
out
mov
addr16
loope
xor
jmp
fcmovnu
shrb
inc
test
mov
mov
xchg
call
aas
mov
add
flds
divl
pop
out
in
mov
cli
sbb
jle
dec
mov
and
and
xorl
push
xchg
ss
fstpt
xor
test
cwtl
aas
jl
ss
sbb
cmp
dec
cmovb
xchg
stos
sbb
jle
push
jbe
lret
push
sub
mov
stos
shlb
mov
mov
mov
cmp
and
mov
aad
call
adc
movl
or
ss
pop
movq
xchg
and
lds
xor
stos
push
mov
sarb
pushw
push
cmp
roll
loopne
rorb
bound
dec
mov
imul
sahf
aam
pop
or
jno
arpl
push
xorb
movsb
pop
mov
inc
sub
fimull
mov
cmpsl
arpl
subl
mov
pop
imul
mov
test
jmp
aad
dec
inc
dec
aad
inc
dec
xor
bound
std
jbe
mov
cs
xor
or
push
pop
lret
ja
pop
dec
mov
jo
jmp
pop
in
xor
lock
iret
into
cld
mov
icebp
pusha
xor
pop
adc
adc
loop
fnstsw
mov
inc
add
dec
dec
mov
gs
shrl
xlat
aas
ds
pop
xor
test
jmp
xchg
sbb
and
add
add
cmp
cs
cwtl
dec
mov
mov
insb
pop
addr16
jae
orl
or
sub
addl
lahf
sbb
and
xchg
add
add
lret
mov
lret
jne
mov
insl
pop
popa
cmovo
adc
cmpl
sbb
dec
mov
into
and
std
add
mov
dec
and
or
scas
push
mov
in
inc
add
subb
mov
out
mov
pop
xor
fsts
aas
aad
ficomps
mov
push
sbb
aam
idivb
outsl
xor
or
inc
aad
lds
loope
mov
cmp
lcall
xor
mov
loop
push
mov
testl
pusha
cmpsl
into
mov
lahf
push
and
push
or
sbb
and
cs
imul
loope
or
pop
scas
sub
xlat
loop
out
jp
inc
dec
mov
inc
lret
sahf
jg
and
shlb
insl
mov
mov
mov
inc
mov
cltd
ret
mov
push
lds
movsl
jo
or
test
push
mov
xchg
cmp
cwtl
jge
mov
std
adc
jno
or
xchg
xor
inc
jmp
in
rorl
pop
std
imul
sbb
mov
inc
std
inc
xor
stos
out
xchg
xor
inc
pop
dec
push
notl
pushf
or
mov
nop
out
outsl
fyl2xp1
in
pop
push
cltd
inc
jmp
mov
lret
adc
decb
pop
push
pop
sbb
mov
mov
test
ja
sub
ret
fcoms
test
stc
push
cmp
pop
pop
nop
aaa
fcoml
push
in
stos
jbe
sahf
mov
dec
mov
loop
or
pusha
inc
call
xlat
mov
repz
add
mov
jle
test
out
inc
test
xor
cld
jnp
pop
mov
xor
insb
xchg
cmpsl
repnz
dec
int
in
bsr
enter
mov
bound
xchg
mov
push
jne
xchg
lret
mov
test
rcll
dec
mov
ficomps
xchg
js
fs
shrd
js
sub
dec
mov
testb
loop
xor
mov
repz
pushf
in
daa
ss
fisubrl
or
cmp
outsb
dec
inc
fcomi
jns
mov
xor
inc
adc
jge
jbe
cmc
stos
fidivs
or
xchg
negb
mov
inc
scas
dec
shll
sbb
ret
xchg
out
fdivs
sti
leave
add
lea
testb
xchg
lret
xor
test
mov
testb
das
jns
addr16
mov
negb
push
stos
faddp
lock
je
mov
jmp
bound
push
jo
je
adc
sub
sbb
push
gs
xchg
pusha
cmp
movsl
xchg
push
pop
jo
inc
gs
inc
mov
ret
mov
sub
push
jmp
push
jge
out
and
js
test
lea
inc
jbe
punpcklwd
stos
lcall
jmp
fsubrl
stc
xor
mov
adcl
xchg
int
daa
mov
test
inc
jno
stos
shlb
mov
mov
test
and
aas
popf
push
or
imul
dec
xchg
adc
dec
sbb
adc
clc
sub
jb
ficompl
sbb
or
daa
xchg
add
sbb
sbb
push
out
pushf
xchg
cmp
cmp
ret
imul
test
pop
jle
lock
and
mov
jl
aaa
std
mov
lock
pop
clc
test
bnd
popa
jnp
mov
lock
int3
cwtl
cmp
lods
popf
arpl
adc
inc
faddl
push
lock
jns
mov
or
cld
insb
outsl
cmp
jl
fisubs
lahf
pop
add
xlat
xchg
lcall
jns
jp
jno
inc
jl
ret
inc
test
in
cmp
pop
adc
mov
mov
sub
and
fisttpll
test
adc
lahf
xchg
cs
movsl
inc
movsb
push
sbb
frstor
aas
in
cwtl
add
mov
mov
arpl
ja
mov
jnp
dec
or
mov
movl
rorb
ds
stos
jnp
fwait
pop
pop
add
cli
jp
inc
repnz
in
insb
pusha
mov
repz
lahf
jg
test
add
movsl
push
sbb
fmull
sub
lret
push
jle
fistps
data16
cmpsl
push
imul
lahf
scas
pop
scas
stc
push
xlat
push
adc
icebp
xchg
movsl
lahf
lods
sahf
test
jnp
push
cs
and
bound
bound
scas
or
jg
or
lret
jecxz
pop
cli
add
cmpsl
cmp
sbb
sub
and
lock
rcl
xlat
mov
sbb
push
dec
int3
in
push
shrb
leave
imul
dec
inc
pop
lret
outsl
shlb
push
mov
inc
xchg
mov
fcompl
mov
dec
dec
out
bound
xor
and
and
add
pop
xchg
lret
pop
push
mov
or
ret
idivb
sti
fcoml
pushaw
mov
ret
sysenter
add
push
fstps
inc
cmpsl
adc
cmp
insb
push
add
pop
push
adc
mov
scas
add
mov
rcl
cmp
popf
stos
jge
mov
inc
pop
inc
or
or
pushf
pop
inc
aaa
sbb
dec
inc
jge
scas
pop
sbbl
test
rcll
xchg
test
loope
adc
mov
out
push
dec
arpl
mov
inc
push
add
jle
nop
bound
mov
inc
fcmovne
cmp
into
jo
pop
cmpsb
xor
pop
jnp
popf
repnz
sti
repz
stc
add
add
mov
ret
dec
lahf
inc
sub
dec
les
xor
fildll
xlat
mov
push
shrl
adc
push
cli
rcl
push
fadd
inc
push
pop
or
insl
mov
pop
dec
mulb
aaa
cwtl
sarl
adc
cmp
add
jb
mov
outsl
popf
and
gs
adc
stc
sbb
pop
loopne
cmp
mov
sub
mov
fucomp
lret
pop
cmp
jb
pop
push
cmp
jae
faddl
xchg
mov
dec
inc
inc
mov
push
adc
xchg
mov
ljmp
push
and
sub
mov
mov
loop
out
push
xlat
pushf
mov
add
adc
stos
xchg
sbb
sbb
push
add
cvtdq2ps
sub
std
fwait
add
jbe
popf
ret
rorl
push
lods
std
sbbb
or
push
mov
inc
or
jb
xor
sbb
mov
jmp
repz
inc
test
int
stos
out
fdivs
dec
cmc
jno
sub
mov
movsl
call
jmp
fildll
outsl
push
pop
sbb
push
mov
hlt
inc
lcall
pusha
mov
ljmp
mov
adc
xor
sarl
lods
outsl
mov
call
xchg
inc
cmp
cwtl
imul
pop
push
loopne
inc
mov
sbb
mov
dec
sbb
sub
push
mov
jmp
rolb
sbb
movsl
jecxz
mov
ss
cmp
fistl
mov
out
pop
shrb
out
inc
out
adc
add
and
push
hlt
repz
mov
inc
sti
sbb
das
mov
cmp
xor
fdivrl
clc
adc
pop
lods
dec
pop
and
enter
jns
leave
shlb
adc
lret
or
ja
sub
jle
dec
mov
mov
xchg
data16
fwait
lods
ja
adc
and
loope
insb
jmp
leave
cltd
cmp
and
ret
jmp
pop
jle
je
mov
and
sbb
pop
mov
jge
pop
je
add
sub
dec
inc
adc
es
ljmp
xor
jae
push
inc
imul
outsb
cwtl
push
fisubl
mov
lahf
mov
fs
mov
arpl
mov
or
or
push
mov
cmp
mov
loope
std
adc
cmpsb
mov
cmpsl
stc
sub
and
fcmovnbe
adc
scas
scas
or
add
dec
loop
jge
inc
and
mov
ja
mov
sbb
jns
insl
inc
mov
leave
xchg
rcrb
loop
lahf
lret
dec
sti
xchg
dec
loope
mov
dec
lea
ljmp
xchg
mov
imul
js
out
movsl
shll
and
int3
les
inc
cmp
mov
push
xchg
stos
pop
repnz
icebp
adc
cltd
aaa
mov
cli
int
xor
rcrl
pop
aad
icebp
rcll
push
and
ret
mov
stc
inc
insb
sbb
sbb
jmp
push
rorl
xchg
outsb
ljmp
adc
loope
pop
xchg
sub
ds
xor
inc
lds
pop
std
lcall
lret
add
mov
jl
jae
idiv
cmc
mov
popa
repnz
fistl
mov
mov
in
and
lea
ljmp
mov
clc
test
dec
lock
out
hlt
bound
in
xor
push
mov
add
lret
enter
sbb
std
fsub
mov
pop
leave
sbb
sbb
aaa
movsb
stc
mov
jl
test
jo
fs
cmp
or
add
dec
dec
outsl
push
js
mov
mov
les
push
jne
inc
int3
divb
aaa
dec
jb
push
mov
mov
inc
add
ds
pop
pop
insb
inc
inc
mov
adc
fisubs
xchg
xchg
pop
int3
aad
cmp
in
test
mov
sub
or
cltd
test
dec
shlb
xchg
ret
push
out
rol
ret
fadds
xchg
pushf
ret
jbe
sahf
jle
data16
sbb
mov
mov
pop
dec
dec
dec
sub
sub
mov
add
leave
push
pop
ja
inc
add
call
add
cmc
cmc
push
cs
dec
mov
repz
into
stos
xchg
sbb
imul
and
out
or
mov
mov
dec
les
aaa
sahf
orb
pushf
jno
sub
xor
jno
cmc
dec
mov
mov
cmp
fimuls
and
mov
mov
inc
hlt
lods
sbb
rcr
inc
gs
push
jne
sub
add
fisubrs
insl
adc
clc
loopne
fs
jne
and
pop
gs
outsl
xor
add
xchg
push
xor
mov
rorl
mov
inc
sub
push
and
sbb
pushf
push
popf
sahf
add
mov
xchg
repz
mov
ja
aad
mov
and
lret
les
mov
negb
mov
xchg
adc
arpl
dec
mov
inc
dec
jecxz
adc
lods
fists
pop
mov
in
push
mov
nop
pop
or
mov
arpl
mov
js
loope
dec
lahf
ret
insb
mov
movsb
mov
popa
mov
les
cmpsb
imul
push
push
mov
imul
or
test
pop
nop
addb
stos
cmp
mov
lret
pop
data16
jnp
sbb
dec
lahf
test
lea
push
pusha
and
push
dec
test
cmc
or
mov
pop
mov
orb
push
test
aas
test
shlb
mov
sbb
push
test
mov
sti
push
pop
clc
xchg
jg
sbb
in
sbb
cmp
pop
rol
and
mov
imul
test
sub
cmpsl
mulb
cmpsl
gs
sbb
mov
inc
xchg
and
inc
pop
lret
fmull
mov
sub
xchg
and
fiadds
sbb
outsl
cli
ret
cli
push
stos
and
ss
sub
test
pop
fstl
mov
mov
dec
test
add
shrb
test
loope
cmp
popl
nop
inc
or
repz
lods
mov
pop
mov
shlb
inc
pusha
scas
repnz
xor
jl
rcrb
flds
jge
cmp
sti
pop
lret
adc
rcll
jecxz
shrl
pop
rcr
outsl
sub
enter
sbb
mov
mov
imul
mov
or
loopne
cmp
loope
es
imul
cmp
leave
cmp
rorb
xchg
jp
lds
int3
jp
cmp
cli
imul
inc
call
loopne
mov
or
inc
aad
stos
mov
jno
daa
test
mov
in
int3
icebp
sbb
pop
fwait
lahf
jmp
fstpt
mov
jnp
push
inc
clc
mov
scas
jle
push
outsl
lods
out
inc
ja
inc
ljmp
xor
ret
mov
aad
mov
or
mov
pop
push
mov
cmp
enter
int3
push
loope
mov
ja
mov
inc
and
cmp
sbb
mov
notb
sbb
push
and
jnp
call
and
push
fisubs
fnstsw
pop
add
dec
or
sti
xchg
scas
dec
test
mov
cmp
insl
mov
xor
dec
repnz
outsl
in
mov
stos
lahf
sbb
hlt
dec
push
mov
movsb
inc
xor
enter
test
int3
frstor
push
sar
inc
and
xchg
vmread
stos
adcl
clc
addr16
ja
pop
xor
out
outsb
inc
test
nop
adc
mov
popa
mov
cli
les
mov
cmp
dec
mov
dec
test
push
mov
jl
int
push
call
pushf
xchg
mov
lods
mov
mov
and
mov
mov
xor
adc
insl
js
jns
or
testb
cli
pop
repnz
cmpsl
fstl
fidivrl
stos
lods
inc
fwait
jns,pt
sbb
cmpsl
push
int
and
daa
popf
lret
sbb
mov
mov
pushf
ficoms
jne
lods
jb
ret
ds
das
into
call
das
movsl
xorb
jl
lea
pop
xchg
aam
loop
push
mov
jae
add
inc
pop
ljmp
fiaddl
lret
mov
xor
iret
xor
cmp
push
fbld
sbbb
pop
adc
clc
stc
test
xor
sbb
xchg
cwtl
enter
jns
out
stos
mov
loop
and
pop
mov
push
jno
or
mov
mov
xor
ja
jo
add
jno
std
add
xor
pop
pop
pop
lahf
xorl
xor
repnz
cmpsl
push
pop
stc
lret
inc
or
cmp
lods
clc
push
dec
jne
shlb
add
mov
or
dec
and
or
cmc
ss
shlb
addb
dec
mov
sbb
jb
fisttpll
decl
shlb
je
push
xor
popa
xchg
sbb
dec
mov
adc
into
sahf
jecxz
xor
ss
mov
pop
hlt
sub
sub
outsl
xchg
clc
out
dec
jge
lods
and
sub
das
mov
out
insl
mulb
scas
mov
mov
xor
cld
stos
adc
pop
ficoms
dec
es
lret
jno
fcomps
int3
dec
fidivrs
mov
add
loope
arpl
sbbl
cs
repnz
cmp
scas
dec
gs
leave
int3
std
xchg
or
or
ja
popf
dec
mov
lahf
add
cmp
roll
icebp
arpl
sub
in
ss
xchg
xor
fsubrs
cmp
repnz
xchg
adc
jmp
fdivrs
movsl
scas
mov
push
clc
add
xor
cmp
insb
and
sub
icebp
decb
xchg
inc
xor
pop
inc
rcl
cmp
outsb
or
insb
inc
jae
inc
cmp
imul
mov
mov
cmp
shll
aaa
pop
lret
mov
rclb
jae
xchg
jg
clc
fwait
xor
sti
les
es
xchg
lods
popf
xchg
adc
outsl
push
add
inc
jnp
das
lret
std
pop
adc
mov
es
push
sbb
cmc
add
sahf
xchg
push
mov
mov
push
in
mov
cwtl
inc
div
ss
xor
sbb
jp
lock
rclb
jno
inc
cli
fdivrs
and
lods
mov
add
mov
xor
and
and
pushf
cmc
and
sbb
pop
shlb
dec
dec
es
je
dec
pop
dec
adc
fsubs
adc
lock
outsl
inc
push
ret
orl
add
popf
in
pop
pusha
je
cltd
cwtl
inc
scas
mov
jecxz
ja
pop
shrb
mov
jno
into
dec
xchg
jne
xor
imul
or
leave
dec
addr16
cmp
push
movsl
inc
jnp
add
jno
lods
mov
push
fsubp
inc
daa
ret
pop
subl
adc
call
neg
and
jl
ds
push
lahf
cmpsl
test
dec
push
cli
inc
flds
sub
sbb
cmp
bound
cmp
mov
pop
adc
cmpsl
push
mov
adc
jp
mov
in
add
loopne
push
inc
jge
sub
js
push
mov
mov
cli
xchg
shlb
mov
sbb
nop
ret
mov
push
test
popf
dec
or
cmp
je
inc
es
out
fidivl
icebp
in
pop
mov
cmp
push
push
movsb
xchg
cmp
sbb
arpl
cli
mov
inc
scas
dec
test
pop
movsl
push
jb
cli
int
outsl
inc
inc
push
cmp
dec
cmpsb
cld
fsubrs
inc
cmp
add
and
js
sub
popf
inc
addr16
cmpsl
adc
and
div
lds
xchg
fdiv
mov
and
out
lret
lock
aam
test
pop
mov
stos
rcrl
outsl
and
sub
pop
and
mov
insb
leave
sbbl
push
xor
out
jno
xchg
dec
outsl
mov
sbb
adc
jge
dec
push
das
mov
cs
fs
pop
fdivp
push
fidivrs
outsb
xchg
and
inc
push
or
faddl
push
pop
out
ficomps
xor
jbe
cmp
jne
dec
adc
ret
and
xchg
push
sti
pop
ss
xor
push
jl
in
bound
int
push
loope
add
push
jl
test
ljmp
inc
mov
flds
outsb
mov
cmp
dec
add
xlat
int
cmp
mov
jnp
orl
mov
loop
xchg
mov
jg
mov
push
lret
hlt
xchg
lds
add
cwtl
movsb
bnd
je
xor
and
fwait
mov
jnp
ret
pop
imul
fsubs
inc
lods
popa
xchg
sub
mov
xlat
xor
xchg
jle
sub
in
inc
movsl
adc
jmp
pop
add
stos
mov
or
std
cltd
mov
push
nop
xchg
outsl
notl
jecxz
mov
iret
test
daa
mov
repnz
jnp
outsl
outsl
and
add
ljmp
movl
add
popa
aaa
fucomi
iret
loope
leave
sarb
leave
cmp
negl
xor
clc
inc
dec
sbb
add
hlt
jmp
mov
hlt
pushf
fwait
pop
jmp
and
sahf
adc
sbbl
mov
xchg
leave
adc
mov
push
insb
push
inc
mov
xchg
push
xlat
ret
push
adc
aam
cli
shr
push
stos
jmp
inc
jae
mov
subb
jmp
pop
iret
js
jp
mov
ss
mov
subb
nop
in
into
xor
scas
add
je
lcall
in
rcl
arpl
or
sbb
mov
inc
or
divb
push
idivl
lock
lock
test
sbb
fnstenv
xchg
jecxz
mov
mov
push
or
pushf
sbb
movsl
icebp
pop
jnp
cld
push
mov
cmp
movsl
out
fistps
lods
bound
fistpl
jno
inc
lea
mov
mov
mov
adc
out
sti
sbb
mov
in
int3
aad
jns
stos
nop
mov
dec
pushf
jecxz
out
cltd
lods
daa
clc
mov
xchg
push
mov
or
jle
inc
sub
jb
push
cmpsl
addr16
insl
inc
xchg
cmp
sbb
stos
sbb
adcb
icebp
int
sub
ret
adc
cli
icebp
iret
daa
add
ret
dec
ja
mov
xchg
jecxz
xor
pop
scas
cltd
fld
xor
adc
xchg
push
leave
inc
fdivrl
aaa
mov
sbb
push
sub
call
movl
and
in
push
bound
sbb
ljmp
xchg
mov
leave
mov
cmp
frstor
jp
push
sub
sahf
adc
dec
ja
addr16
mov
cwtl
hlt
mov
inc
loopne
in
sbb
adc
mov
sbb
xor
jmp
add
sbb
clc
das
imul
sarl
cwtl
pop
aam
cmp
sub
inc
push
mov
sbb
and
shl
cwtl
pop
adc
ret
lods
sbb
push
mov
gs
mov
and
js
fistpl
mov
imul
push
bound
ds
jns
inc
cmpsb
pop
cmp
aaa
insb
inc
fiaddl
ljmp
push
xchg
sbb
sub
stos
loopne
inc
scas
add
mov
lds
rorl
int
xor
subb
aam
repnz
jno
fwait
xchg
jb
inc
movsl
adc
out
mov
mov
mov
loopne
push
mov
outsb
dec
mov
out
test
add
mov
ljmp
loop
imulb
and
mov
lahf
test
push
push
mov
mov
decl
xchg
testb
out
rorb
repnz
add
cmp
ja
sub
movsb
lret
movsl
pop
and
push
xor
clc
in
movsl
cli
test
test
ret
test
xchg
fs
jp
push
adc
pop
fsubs
sar
mov
push
fildl
adc
out
or
es
push
cmpsl
lds
andl
je
lods
jbe
cmp
jb
mov
push
rcrb
and
imulb
jge
inc
fs
loope
scas
mulb
cmp
outsl
lcall
lret
xor
jns
xor
sbb
jp
loop
jl
ljmp
fmull
jne
iret
lcall
in
or
inc
add
xchg
push
scas
shrd
outsl
movsb
mov
jmp
sub
ljmp
xchg
repnz
sbb
mov
inc
push
insl
mov
std
xchg
jl
mov
loopne
sbb
mov
or
cmpl
cmp
int3
loopne
pusha
jge
inc
fwait
cmp
inc
xor
in
shll
iret
xchg
divb
outsl
xchg
arpl
sub
add
cmp
nop
stos
adc
push
addr16
pop
je
cmp
lods
lcall
loopne
repnz
sbb
outsb
push
loopne
push
mov
shlb
pop
and
out
call
adc
inc
sbb
adc
dec
mov
int3
daa
adc
rcrl
sub
xchg
test
icebp
mov
icebp
mov
cmpsl
xor
sub
test
adc
pop
in
or
je
cmc
mov
out
std
cltd
pop
jno
mov
cmp
mov
mov
pop
imul
mov
and
add
sub
jp
pushl
addl
cmp
mov
out
sub
mov
inc
daa
add
cltd
inc
mov
jp
cs
jne
mov
jg
push
imulb
mov
fisubrs
mov
fdivrp
iret
xor
scas
lret
jb
scas
dec
push
ffreep
push
and
xchg
sahf
sbb
mov
neg
inc
jae
cmpsb
xchg
inc
subl
and
mov
int3
push
sub
enter
mov
sub
js
inc
roll
adc
jae
pop
mov
cmp
sbb
xor
lcall
rclb
push
xor
jb
in
sbb
mov
gs
outsl
pop
hlt
loopne
xchg
shll
dec
cmp
test
mov
sbb
sbb
fsubrs
push
xchg
or
stos
les
out
add
mov
loopne
ja
loop
xor
jecxz
dec
in
pop
pop
pop
popa
imul
movsb
mov
bound
sub
dec
imul
push
inc
mov
loope
cmp
js
add
mov
or
repz
icebp
lret
movsl
cli
mov
jae
jmp
inc
rorl
jo
outsl
fsubl
pop
and
mov
lds
push
call
pop
sub
inc
shl
adc
das
sub
ret
insl
in
aad
out
ds
enter
pop
mov
mov
or
or
out
mov
dec
stos
lds
dec
mov
mov
mov
iret
inc
scas
push
add
pop
push
packsswb
lret
xor
popf
das
or
cmpsb
or
cs
repz
mov
add
stc
pop
subl
mov
insl
add
add
in
outsl
jge
adc
inc
mov
xor
mov
daa
add
addr16
xchg
mov
movsb
cli
sbb
scas
stos
xchg
lret
cmp
aaa
lahf
daa
pop
mov
leave
sti
jge
cld
push
xchg
cli
or
sbb
dec
hlt
add
adc
in
mov
outsb
mov
xchg
cmp
jp
fmull
movb
push
outsb
ficomps
jecxz
lahf
push
sahf
xchg
pop
and
cmp
dec
in
jmp
aam
add
dec
jmp
jae
les
mov
cmc
and
jmp
leave
stos
repz
cmc
fs
jle
movsb
mov
mov
pushf
rcll
pop
lods
or
and
scas
or
ja
stos
aas
fwait
jo
insl
stc
sub
or
gs
cmc
loop
push
add
cmp
and
pop
in
pushf
pop
mov
dec
sub
fs
or
popa
and
push
fmull
aad
dec
mov
add
sub
jmp
insb
xor
inc
xor
dec
aaa
jne
les
mov
call
int
insl
xor
jg
mov
fnstcw
hlt
test
add
sahf
clc
aam
and
xchg
in
lea
push
xchg
push
mov
stos
repnz
or
pop
jae
call
jns
inc
mov
inc
inc
sbb
dec
fldl
movb
sub
rol
push
pop
inc
add
push
movsl
scas
and
dec
outsb
adc
jno
fcoml
jno
in
sub
lds
sahf
out
adc
sbb
cmp
lret
xor
mov
sbb
pop
pop
push
jle
mov
inc
adcl
mov
cmp
loop
or
xchg
xchg
cwtl
ret
cmp
mov
loope
movsl
and
pop
jbe
add
int3
in
inc
std
push
movsl
dec
cmpsl
imul
sub
dec
insl
roll
xchg
aaa
cmp
cli
or
mov
jnp
xchg
xchg
jnp
loopne
xchg
out
cwtl
or
sarl
lock
rcll
pop
fsubp
xchg
pop
into
mov
inc
cmpb
shr
sub
dec
pop
out
cmp
adc
mov
jo
cmp
mov
pop
jbe
mov
iret
or
xchg
jp
mov
sub
mov
lret
icebp
stc
int
ret
aad
adc
push
out
repnz
ret
aad
jp
cmpsb
cli
cmp
rcrl
sbb
sbb
fdivrl
jno
sbb
lcall
or
js
enter
cmp
data16
push
mov
lahf
nopl
mov
sbb
pushf
sbb
subb
pushf
and
sub
dec
pop
cltd
mov
int
fnstenv
mov
stos
push
xchg
inc
and
mov
mov
stos
cltd
sub
out
imul
dec
and
or
cmp
xchg
pop
xchg
sub
out
and
xor
sub
mov
hlt
pop
lahf
sub
outsb
pop
ss
pop
les
pop
xchg
shrl
sti
insb
and
adc
xchg
dec
aaa
shll
dec
cmc
imul
fwait
dec
and
cmpl
lds
lods
xor
jge
xchg
lods
movsl
or
sbb
cltd
mov
jp
andb
xor
jae
mov
cmc
std
xor
adc
mov
cli
int3
in
xchg
dec
and
test
xchg
pop
pop
ret
test
iret
pop
jl
int
pop
push
pop
adc
sub
mov
nop
xchg
int3
fcomps
adc
test
dec
push
mov
dec
ret
or
and
mov
mov
add
inc
adc
or
movsb
push
sbb
mov
mov
adc
xchg
stos
xorb
xchg
add
fldt
int3
dec
rcl
xor
jns
lcall
xor
dec
dec
imul
xchg
movsb
scas
jne
xchg
ret
popf
add
jne
in
xlat
push
mov
mov
mov
nop
cltd
andb
mov
push
sbb
fwait
ret
cmpsl
loop
rorb
sub
dec
sarb
into
fldenv
adc
jg
test
nop
xchg
lret
mov
or
sub
push
hlt
divl
sub
push
inc
popf
push
dec
or
mov
xchg
arpl
jne
or
cs
lds
outsl
popa
rorl
xor
fnstenv
lret
lea
mov
loopne
int3
mov
jae
pushf
inc
mov
xchg
inc
jb
leave
xor
ljmp
ss
into
outsb
in
into
pushl
push
fistpl
je
out
in
xchg
xor
jle
das
mov
jl
sub
nop
loopne
loope
out
not
inc
sub
hlt
mov
dec
mov
and
lock
mov
faddl
xchg
jl
jp
test
stos
xor
adc
mov
lret
mov
xchg
stos
pop
mov
frstor
cli
add
jge
ret
std
loop
sbbl
push
cmpb
popf
mov
out
pop
pusha
fldcw
icebp
xlat
mov
decb
cmp
ficoml
pusha
out
daa
pop
movsb
cmp
sub
lods
addr16
fstl
cltd
std
fprem1
and
adc
dec
pop
call
insl
push
jl
mov
arpl
and
xor
xor
fisttpll
mov
lcall
fsubrs
or
outsb
and
adc
adc
repz
mov
mov
mov
xlat
in
fsubl
cmpsb
daa
jp
sub
loope
mov
xor
rcrl
add
andl
cmc
in
inc
das
jnp
ficomps
add
push
jge
shlb
mov
add
movsl
clts
ficomps
insl
mov
stos
pusha
cmp
std
dec
scas
imul
jmp
xchg
lret
and
add
inc
cmp
loope
shll
cltd
ja
cwtl
xchg
movb
jecxz
lret
pop
mov
sbbb
mov
lods
popa
lea
test
out
inc
adcl
xchg
imul
loopne
xchg
inc
jecxz
add
xor
pop
in
jle
add
imul
ljmp
cmc
stc
ss
fidivl
adc
mov
sbb
adc
outsl
stos
roll
mov
sbb
mov
pop
into
pushf
inc
dec
pop
jge
sbb
mov
jne
iret
xor
xlat
cltd
mov
mov
add
shrb
int
icebp
stos
and
adc
jecxz
inc
jl
loope
cld
pop
adc
mov
in
push
mov
dec
mov
push
shll
mov
inc
ret
pop
sub
adc
sahf
and
jp
movsb
cs
and
push
add
xor
test
or
test
jg
test
fs
mov
cmc
cltd
nop
push
mov
cmp
fcomps
xor
cmp
aas
rcrl
lods
adc
call
dec
xchg
inc
inc
dec
xchg
sbb
pusha
mov
out
int
mov
or
mov
mov
rclb
xchg
lods
and
pop
dec
dec
cmp
subb
inc
fimull
xor
pop
jo
mov
or
cmp
addr16
movb
mov
lods
outsb
insl
jne
out
xor
or
mov
push
sti
sbbb
push
shl
inc
stos
cmp
sub
jo
inc
clc
xor
push
outsb
inc
push
loop
in
test
lcall
pop
xchg
xchg
dec
arpl
cltd
insl
xchg
pop
rorb
bound
cmp
int
mov
dec
rcrl
xchg
jbe
or
adc
or
in
mov
cmpsb
sub
iret
mov
es
add
adc
iret
push
notl
loop
mov
cmp
nop
cmp
lock
enter
lret
add
xor
fistpll
nop
push
iret
xorl
mov
ja
add
mov
mov
pop
sahf
add
sbb
fistpll
popa
hlt
push
das
in
in
insb
pop
xchg
in
adc
xor
push
cmpsl
leave
into
xchg
fstl
cli
mov
xor
jnp
scas
push
xchg
rolb
mov
cmpsb
push
loop
jns
stc
or
and
mov
cmp
xor
mov
dec
into
rol
dec
or
scas
push
cmp
in
daa
in
in
popf
adc
scas
mov
sub
aaa
push
add
adcb
idivb
mov
inc
fimuls
jmp
cmp
mov
push
daa
les
lret
imul
test
mov
jmp
dec
in
mov
sub
mov
ret
xor
insl
jbe
arpl
insb
popa
xor
movsb
ja
sbb
lahf
mov
fstpl
dec
adc
xchg
movsb
mov
jo
dec
mov
jg
lods
lods
mov
jo
lahf
sahf
mov
stos
incb
into
in
mov
pop
inc
sub
xchg
jo
mov
popa
shrl
push
shrb
pop
mov
out
push
lds
sbb
push
add
in
add
icebp
or
fnsave
push
out
pop
xchg
pop
fldt
inc
sbb
movsl
fs
icebp
mov
push
mov
xor
into
andb
cs
cmp
out
adc
flds
test
dec
jne
sahf
sub
inc
icebp
pop
jnp
push
dec
enter
out
fistpll
add
lea
sub
dec
ss
and
pusha
xchg
xor
shr
lock
inc
outsl
jle
les
fidivl
push
sub
adc
xor
cld
cmp
scas
xor
leave
adc
stos
fcomps
sbb
mov
xor
stc
push
cmp
stc
fs
cmpsl
mov
adc
mov
cmp
cs
sarl
addb
mov
jno
mov
in
sbb
outsb
jge
pop
or
repnz
xchg
sub
pushf
jmp
insb
mov
outsl
push
jl
mov
test
or
ss
or
or
fsubl
pushf
stos
push
adc
cli
xchg
mov
add
dec
jge
xor
cmp
int3
cmpsb
test
std
push
inc
rolb
enter
mov
xadd
js
xlat
popa
mov
push
mov
mov
push
mov
push
jmp
sti
pusha
push
mov
mov
enter
jg
jp
mov
pusha
pop
nop
and
stos
jo
ret
jle
sbb
sarb
and
mov
loop
dec
stos
test
adc
adc
cmp
and
daa
imul
sub
jl
insb
out
jae
subl
mov
xor
mov
inc
int
xor
and
pushf
leave
pop
jae
pop
xor
mov
je
dec
sbb
ret
push
or
xchg
ret
inc
leave
out
fildll
cmp
aam
xchg
lret
test
movsl
mov
and
mov
insb
clc
inc
aad
lcall
xor
jle
jge
sahf
pop
dec
adc
movsl
adc
bound
test
les
out
pop
into
and
and
pusha
mov
pop
xchg
adc
jnp
cli
push
or
or
fs
add
lahf
xor
sbb
repnz
jb
in
movsl
sbb
mov
gs
enter
repnz
xchg
jmp
mov
jp
mov
push
cld
pop
hlt
cmp
insl
aam
jl
jge
and
adc
cmp
test
es
cwtl
jno
orl
stos
addr16
pop
push
addb
dec
cmp
ret
and
inc
std
cs
mov
aad
mov
cmc
xchg
mov
cmpsb
clc
jno
jecxz
xor
push
push
scas
push
lods
in
insb
pop
xor
ficoms
dec
movsl
cwtl
and
je
xor
pop
xor
xchg
les
mov
xor
jae
cmp
lcall
and
xor
aas
int3
clc
divb
int
mov
aaa
addr16
jne
sub
push
lahf
cmp
dec
loop
test
add
xchg
jp
or
adc
sbb
pushf
and
jl
outsb
dec
pop
arpl
cmc
push
popf
aad
shrl
movsl
rclb
add
push
faddl
pop
mov
inc
adc
xchg
add
add
lock
cmp
stos
inc
jae
addr16
push
loop
loope
cltd
jnp
mov
cs
jle
and
sub
push
fisubs
pop
dec
fnstenv
push
fs
int3
nop
push
shrb
imul
mov
test
nop
outsb
divb
mov
cmp
leave
sbb
fbstp
sbb
jb
dec
lea
ret
in
adc
xchg
movsb
jno
fnsave
lahf
mov
sub
sbb
ret
sbb
shll
mov
aas
clc
jne
mov
mov
int3
xchg
xchg
mov
push
mov
sub
jo
xor
stc
lods
mov
sbb
cli
and
mulb
outsb
out
jmp
xor
subb
frstor
ja
sbb
jecxz
inc
mov
or
test
cmpsb
cmp
pop
xchg
adc
clc
fistpll
adc
out
leave
imul
inc
gs
lcall
mov
outsl
adc
rcl
sbb
ror
data16
and
inc
daa
movsb
lret
sbb
mov
test
mov
dec
jle
dec
in
sub
fisttpl
mov
ret
shlb
sarl
mov
xorb
out
out
out
aaa
stc
add
fadds
repz
cmpsb
push
ret
xor
sub
out
rol
sub
xchg
push
hlt
pop
and
fldpi
ja
push
shl
and
rcl
sbb
xlat
data16
mov
inc
decl
rcrb
sbb
cmpsl
pop
xrelease
daa
inc
sub
stc
scas
popa
lcall
insb
into
sub
or
dec
arpl
mov
pop
jae
dec
inc
mov
sahf
js
ja
test
shlb
or
xor
and
aaa
test
insl
push
cmp
adc
int3
lds
test
xlat
notb
fiaddl
ss
sub
push
or
xchg
fistl
popf
sbbb
lahf
or
out
pop
out
ror
in
pop
mov
mov
cld
dec
rcll
shrl
mov
cmp
cld
out
int
lea
jl
mov
std
xor
pop
add
xchg
mov
mov
in
fwait
subb
adc
loop
out
jge
inc
js
push
les
imul
jecxz
cld
cmp
adc
push
out
or
ljmp
stos
mov
ret
xor
ljmp
dec
xor
cmp
cmp
in
sti
cs
ja
roll
ljmp
inc
xchg
int3
in
stc
jmp
cmp
rcll
add
call
xchg
mov
add
or
pop
pop
sbbl
arpl
jb
popf
pop
jns
das
mov
mov
scas
push
subl
cld
sub
mov
jb
pusha
cld
sub
fcompl
loopne
stos
inc
jg
mov
xor
cmp
inc
push
xor
mov
int
dec
je
adc
jae
aaa
shl
add
cli
dec
and
test
add
jb
nop
sbb
sti
xlat
insb
mov
cmp
xchg
xor
xchg
dec
in
inc
lcall
in
rcr
stos
push
fcmovne
pop
pop
mov
xchg
and
xchg
cmpb
outsb
test
lret
bound
add
add
inc
add
xor
jbe
xchg
out
adc
outsl
into
pop
jmp
mov
mov
hlt
add
dec
fsubl
or
clc
mov
and
and
leave
xchg
shlb
xchg
das
dec
fcmovnbe
in
test
loop
add
cmc
pop
inc
inc
fisubrl
xchg
dec
xchg
mov
jp
sti
stos
in
sub
inc
dec
sbb
sbb
test
jae
pushl
inc
cmp
test
loop
jecxz
cli
ljmp
inc
or
imul
loopne
outsl
push
insl
cmp
push
mov
xor
addl
pop
xchg
dec
je
das
push
fdivrs
daa
daa
das
cld
cmp
xchg
and
push
inc
daa
dec
adc
imulb
inc
mov
add
inc
xor
cmp
mov
jmp
loop
pop
icebp
in
stc
inc
push
test
cmc
sahf
das
jge
adc
aas
paddusb
loope
lea
add
xchg
push
inc
jno
stc
mov
sub
cmc
out
push
and
push
jg
push
cld
ret
fisttpl
mov
rclb
stc
inc
push
or
negb
inc
cmp
cli
inc
ret
xchg
outsb
ds
add
out
jb
and
in
data16
or
jno
push
das
xlat
and
mov
imul
bsr
add
adcb
gs
arpl
fwait
lahf
mov
imul
out
pop
adc
mov
xchg
aaa
add
sbb
insb
sub
jae
jle
jne
jns
xor
cld
mov
jecxz
mov
sub
ret
inc
repz
addr16
and
mov
mov
add
lods
std
jns
mov
repnz
mov
out
movsl
xchg
daa
lods
unpckhps
cmpsb
mull
jp
into
mov
psadbw
mov
pop
xchg
out
movaps
mov
mov
lods
jb
or
shll
insb
pusha
fsubl
popf
addr16
lret
cmp
popa
test
mov
xor
add
sbb
addb
nopl
pop
int3
daa
jecxz
sbb
bound
movb
sub
and
mov
sar
test
or
cmc
lret
lahf
pop
stos
stos
jnp
rolb
dec
mov
sbb
repnz
mov
loop
push
cmp
ds
std
push
ljmp
loop
pop
xlat
aam
mov
int3
lahf
lds
add
fldenv
inc
add
cmpsb
add
in
push
pop
rolb
inc
in
or
flds
adc
not
push
idivb
lahf
sbb
xor
aaa
mov
sbb
inc
cld
mov
fistpll
movsl
ja
dec
sub
arpl
fsubrl
sub
test
les
mov
push
aas
or
lods
repz
adc
jmp
repnz
xor
dec
adc
test
jbe
test
call
pop
dec
leave
cli
fnstcw
dec
mov
sbb
sahf
sbb
jmp
test
lahf
arpl
leave
inc
push
shll
cmp
cmpsl
dec
test
out
loopne
sub
out
pop
push
fisttpll
ret
push
dec
cmp
test
repnz
mov
cmpb
lods
jg
xchg
and
inc
sbb
fdivrl
pusha
adc
cmp
sub
cmp
cmp
jae
fisttps
mov
jmp
notl
mov
cmp
xor
inc
dec
add
scas
fs
sbb
push
dec
xor
testl
std
and
fidivrs
nopl
fldenv
jmp
mov
addl
fisubrl
mov
aam
mov
xor
inc
test
ret
jae
scas
mov
es
xor
dec
lret
xchg
out
mov
cld
into
cmc
sub
fadd
push
roll
stos
jle
sub
pusha
or
addr16
push
inc
jns
sbb
out
xchg
into
inc
cmp
pop
xorl
in
sbb
pop
fidivl
fstps
add
inc
mov
lea
out
adc
addl
jbe
fdivl
mov
je
aam
jbe
push
iret
and
test
in
mov
lcall
iret
pop
xchg
add
adc
fadds
sub
and
cmpsb
xchg
mov
popa
inc
loop
pop
fcoml
add
xor
jae
pop
lret
and
sub
mov
aad
add
repnz
add
fdivp
sbb
fidivs
pop
push
push
cmp
scas
push
add
scas
push
bound
test
xchg
mov
xchg
and
inc
int3
add
sbbl
sbb
pop
and
loop
and
sbb
int
stc
adc
or
repnz
jle
loop
inc
jbe
adc
cli
mov
and
jb
rorl
mov
dec
shlb
rolb
lret
aad
fwait
ljmp
cs
aas
mov
fsubl
pop
stos
jg
in
cs
stos
push
inc
cmp
movsb
fdivrl
lret
loopne
lret
jmp
repz
lcall
mov
push
xor
mov
out
stos
in
mov
test
xchg
cmp
xchg
inc
adc
fistpll
addb
cwtl
xchg
inc
add
insb
cmpsb
inc
fsub
cmp
mov
in
test
or
stos
addr16
rolb
xor
mov
mov
or
push
adc
push
adc
cmpsb
jp
cli
mov
int3
cmpsb
inc
sbbl
mov
lcall
xor
add
push
out
dec
dec
add
mov
icebp
out
aad
cld
stos
push
inc
mov
cld
mov
mov
divl
or
or
repz
aas
cmp
rol
fidivrl
in
push
mov
jmp
xor
add
aam
inc
sbb
leave
cmp
jp
call
lahf
shrl
add
ret
mov
xor
dec
add
into
lahf
mov
jne
faddl
adc
sub
jbe
cs
scas
lea
das
lds
mov
cmc
aas
popa
jbe
jg
adcl
test
xor
icebp
cmpsl
cwtl
enter
inc
iret
pop
adc
and
jge
fisubl
call
mov
mov
jmp
in
arpl
enter
loopne
sub
in
xor
add
ss
rorl
mov
jbe
daa
ljmp
stos
mov
sbb
in
add
xchg
mov
jno
xchg
insb
or
fistpl
inc
add
and
mov
adc
movsl
mov
jg
and
mov
xchg
es
aaa
sub
scas
xchg
pop
inc
popf
in
mov
orl
cltd
jp
push
push
dec
sahf
add
sub
call
int
xchg
or
lcall
sub
iret
insb
xor
test
fisubl
push
mov
and
fstpl
xchg
mov
xchg
in
jg
inc
inc
xor
mov
ret
jnp
xchg
lret
cmp
adc
xor
adc
gs
xor
sub
xchg
sub
pop
or
pushf
mov
out
jle
scas
andb
cmp
pop
cwtl
add
sti
add
mov
mov
loop
aaa
js
movsl
outsl
adcb
pusha
cmp
mov
imul
and
mov
mov
gs
es
xchg
inc
jl
sbb
xor
xor
mov
loopne
jne
ss
add
out
push
std
movsl
cwtl
fsts
popa
inc
stos
andl
jo
jp
lret
jne
int
cmp
aas
mov
sbb
push
xor
test
xchg
imul
clc
push
subb
and
push
jo
sti
jmp
leave
rcl
mov
imul
xchg
stos
cmp
add
fsubr
or
in
pop
push
cmp
mov
mov
sbb
rcrl
pop
xor
inc
push
lahf
mov
sub
cmpsl
sahf
subl
bound
cli
push
daa
shrl
pop
push
pop
filds
mov
mov
sub
fisttps
clc
mov
jecxz
sbb
fsubr
add
test
nop
cltd
in
int3
aaa
clc
rcrl
and
and
int
cmpsl
mov
push
out
fidivl
mov
movsl
or
jns
jg
and
insl
sub
mov
insb
dec
insl
ret
mov
sub
jecxz
add
sbb
out
lcall
mov
orb
mov
mov
inc
or
sbb
bound
lcall
inc
cmp
sub
fimull
or
inc
xchg
or
sub
lock
xor
pop
jmp
gs
mov
adcb
cmp
sub
cmpsl
jl
sub
pop
mov
test
pop
or
lcall
pop
mov
out
lods
mov
push
cltd
push
pop
shrl
repz
xchg
fisubrl
xchg
xorl
push
lock
hlt
mov
push
dec
test
enter
rorb
mov
js
jbe
out
insl
rcrb
ret
lcall
pop
and
push
mov
test
or
out
add
data16
ss
dec
jle
cmp
mov
sbb
and
mov
into
dec
and
jbe
into
inc
inc
sti
fmull
and
outsb
or
or
mov
cmc
sbb
mov
fcomi
roll
outsb
sub
or
clc
sti
mov
cmp
stos
je
rcrb
sbb
test
mov
insl
aam
or
mov
adc
push
mov
out
test
xchg
or
inc
call
xchg
ss
loope
ret
mov
xor
sub
stos
cld
mov
jecxz
pop
stc
xor
call
sub
mov
stc
xchg
cmp
adc
dec
jg
fmulp
cs
mov
push
ret
and
dec
int3
cwtl
inc
call
fcmove
jns
out
cmp
sbb
pushf
push
adc
push
pushf
xor
stos
mov
sub
out
pop
sub
lea
jae
sub
jns
push
in
cmp
jp
sar
aam
in
loopne
add
test
mov
pop
push
sbb
push
inc
es
dec
icebp
xor
push
pushf
loop
into
decb
hlt
push
sti
pop
sbb
and
jp
fwait
sub
xchg
jo
sbb
pop
inc
aas
scas
int
scas
sub
nop
in
jge
sbb
lret
jnp
mov
scas
stos
cwtl
sbb
push
jp
jecxz
into
leave
add
out
pop
aad
sub
int
jbe
lods
push
xchg
fcompl
les
fwait
std
int
or
into
aas
addr16
lods
orl
sub
test
xor
adc
adc
sbb
mov
add
popf
ret
sub
aas
mov
sub
sub
pop
push
adc
add
enter
movsb
int3
test
in
lea
xor
or
and
frstor
in
pop
add
mov
aam
mov
loopne
js
pop
gs
jle
scas
repz
fnstcw
jne
test
notl
xchg
pop
sti
mov
xchg
pusha
xchg
mov
add
sub
std
insl
je
jno
mov
ljmp
test
aas
push
pop
xor
outsb
jno
sar
cwtl
clc
mov
jmp
fmuls
xchg
out
ret
cld
cmp
xchg
das
scas
inc
adc
mov
fbld
mov
in
pusha
gs
mov
ja
sub
mov
or
mov
ja
mov
or
mov
xchg
xlat
adc
xchg
xor
aam
fwait
and
gs
insl
cmpsl
add
fstl
pop
jmp
inc
cmp
out
xchg
clc
xor
sahf
pop
jnp
and
mov
jbe
shl
int
incl
mov
cmc
hlt
jae
test
int
pop
das
adc
mov
jl
jns
dec
jmp
fidivrs
xchg
sti
pop
imul
adc
mull
jmp
popf
or
fucom
xchg
push
pop
out
out
or
movl
icebp
jmp
lea
sub
int
adc
xchg
fldcw
loopne
adc
dec
adc
mov
xchg
imul
daa
jb
fdivrs
mov
nop
shrb
fbstp
sti
cmpsl
pop
jno
adc
jae
push
lods
pop
negl
xchg
push
test
not
cltd
negl
in
outsl
sub
mov
push
cmp
sahf
aam
sbb
inc
push
lods
inc
insl
addr16
mov
dec
mull
insl
mov
adc
and
loopne
int
mov
mov
cmpsb
sub
loopne
push
jae
lds
pop
xor
imul
pop
in
loopne
subl
testl
addr16
sahf
mov
add
xor
ljmp
adc
mov
outsb
sbb
cmc
cltd
lret
push
mov
mov
cmp
adcl
xor
movsb
stc
push
jo
mov
aad
dec
andl
clc
in
iret
lret
xor
outsl
cld
in
or
jle
pop
call
lods
mov
fistl
negl
sbb
fwait
shrb
rolb
popf
push
jge
sbb
mov
cmp
inc
sbb
adc
int3
jp
orb
mov
adc
or
imul
lods
xchg
lods
addb
jae
fmulp
mov
nop
sarb
and
jo
inc
lret
pop
xor
xor
sbb
mov
fmulp
jl
in
cltd
jge
cli
cmp
add
fildl
jne
iret
jo
fwait
jae
push
lea
mov
cmp
jne
mov
shlb
add
cmp
pop
call
jbe
rorb
xchg
dec
leave
and
lcall
inc
scas
loop
pop
push
popa
pop
into
and
push
and
popl
mov
sarl
in
movsl
jno
add
fs
adc
data16
adc
jmp
in
dec
roll
bnd
cltd
mov
arpl
arpl
pushf
pop
icebp
adc
cmp
cli
popf
out
jnp
mov
cmp
jnp
cmc
push
inc
ss
bound
adc
gs
lcall
xchg
movsl
push
stc
dec
xor
pop
push
dec
shld
mov
rorb
xchg
xor
inc
jno
adc
pop
or
adc
mov
sbb
iret
mov
mov
adc
popf
sahf
sub
pop
lcall
mov
mov
call
xchg
ss
in
lods
gs
mov
add
outsb
test
pop
mov
push
xchg
cmpsb
jae
dec
arpl
shlb
notl
mov
or
add
mov
and
sbb
lea
sub
lcall
cmpsl
subl
popa
mov
mov
leave
in
dec
lea
in
ds
or
sbbb
push
dec
mov
movsl
sbb
cmpsl
dec
aam
or
ljmp
hlt
jb
push
pop
adc
insl
xchg
imul
in
or
gs
hlt
jnp
xchg
test
sbb
mov
stos
pop
sbb
int3
dec
add
lea
xor
cmp
imul
and
pop
inc
cmc
push
dec
lcall
addb
dec
xor
mov
mov
sbb
fst
jb
in
xor
scas
mov
mov
movsl
adc
outsl
outsl
push
xor
cltd
in
pop
adc
push
sbb
inc
lods
inc
push
dec
int
stc
test
push
orl
cmpsl
ljmp
orb
cmp
pop
cmpl
popa
int3
jl
test
inc
or
movsl
pop
imull
or
adc
notb
add
xlat
ret
popf
dec
jno
mov
pop
mov
jo
cmpsb
nop
jb
jl
fiaddl
hlt
push
enter
out
cmc
mov
lds
mov
adc
repz
lods
test
adc
ficompl
divl
pop
or
scas
ss
cmp
xchg
or
mov
lods
pop
out
mov
enter
jne
int
add
or
jmp
adc
cmp
addr16
aaa
sub
lea
ds
and
int3
pop
cmp
outsb
mov
jno
les
and
ljmp
cltd
out
push
es
dec
push
dec
mov
fisubs
cmpsb
jne
es
addr16
pop
add
xchg
inc
mov
outsb
roll
adc
std
push
sbb
popa
jnp
xchg
cmp
in
int3
aad
daa
push
sub
rol
add
jecxz
cs
dec
fwait
dec
fistpll
push
inc
mul
pop
andb
cld
or
mov
jno
jne
stos
push
roll
out
sbb
inc
lods
ret
and
and
inc
fistl
sub
add
out
cli
scas
and
mov
jge
loop
jno
mov
pop
fistl
sub
and
fimull
inc
aas
jmp
push
dec
bound
or
sub
xchg
negb
addr16
icebp
test
pushf
sub
loopne
mov
fdivrs
xchg
dec
dec
into
jae
rorb
and
bound
pop
out
in
orl
jmp
push
or
ficoms
mov
fs
movsl
sbb
sbb
push
mov
in
shll
incb
mov
stos
xchg
dec
push
das
mov
mov
jns
test
dec
adc
xor
push
jge
jmp
jecxz
xchg
add
pop
lcall
lahf
xor
sbb
inc
jecxz
push
add
fisubl
ja
add
hlt
mov
ror
rorl
leave
xor
movsb
aam
into
bound
pusha
testl
ficoms
or
mov
in
jns
or
in
aas
mov
add
cwtl
into
aam
jl
inc
pop
mov
xlat
push
sbb
push
mov
and
adc
sbb
add
ss
jae
cmpsl
mull
xchg
push
cmpsl
push
pop
addr16
mov
repnz
call
mov
cwtl
mov
ret
push
movsb
addl
sbbl
xchg
mov
in
popf
push
stc
fisubs
loopne
stos
in
jae
jb
jo
loop
bound
cld
cmpsl
mov
and
aaa
dec
sbb
push
and
adc
mov
sub
icebp
in
test
push
pop
into
mov
int
lods
cs
mov
sub
sub
jle
jg
mulb
cmp
negl
jno
dec
movsb
call
jb
rcr
lahf
fs
daa
aas
adc
icebp
je
std
das
adc
push
stc
pop
or
push
loope
push
out
cs
stc
cmp
sub
pop
inc
pop
inc
adc
jl
jbe
enter
in
mov
ja
jb
lea
and
xchg
pushw
fistl
mov
mov
in
int3
jmp
lahf
add
cmp
popl
mov
xor
dec
fwait
popf
or
jg
mov
pusha
xchg
inc
fnstsw
inc
fcoms
cmp
mov
rcrl
cwtl
xchg
cmp
call
and
mov
lods
mov
leave
xlat
sbb
pop
call
rcl
imull
scas
ds
jl
inc
xor
out
sbb
aad
adc
out
jle
sub
std
aam
roll
popa
rolb
inc
and
cmp
push
add
adc
movzwl
and
mov
pop
push
cmp
fs
aaa
add
mov
dec
jnp
in
xlat
stos
or
test
push
xchg
xchg
mov
pop
mov
push
pop
jb
fadds
xor
xor
sarb
jle
mov
push
cmpsl
aaa
mov
outsl
pinsrw
lds
iret
outsl
or
xchg
enter
or
xlat
and
cmp
lock
icebp
or
outsb
push
pop
shl
jnp
sub
and
je
cmpsl
pusha
sbbb
jge
je
push
xor
fnstcw
in
mov
popa
fstps
cltd
sbb
mov
sub
dec
outsl
mov
xchg
push
popf
repz
mov
incb
push
jno
lods
fnsave
xchg
xor
xchg
testl
dec
daa
xchg
mov
pop
lahf
mov
jne
cwtl
jo
test
sub
ja
daa
adc
push
inc
or
adc
fsubl
cmpsl
inc
or
pop
mov
add
mov
aaa
jnp
jmp
daa
cmp
or
cs
outsb
out
addb
arpl
shlb
mov
stos
pop
add
cmp
stc
and
loop
sahf
cmpsl
es
sahf
dec
mov
push
inc
imul
or
mov
xor
mov
adc
mov
loope
jecxz
push
cs
xchg
movsb
mov
pop
jle
add
pop
sub
popf
mov
jnp
xor
mov
popa
cltd
dec
mov
push
xor
xchg
xor
call
test
movsb
or
sti
mov
aad
sahf
mov
pushf
outsl
jno
pop
shlb
cmp
inc
out
sub
pop
aas
xchg
xchg
mov
jns
sbb
xor
inc
mov
xchg
enter
jmp
push
mov
cld
jno
xchg
std
daa
fs
imul
repz
cmp
lahf
cmp
outsl
cmc
mov
add
jo
xor
stc
lcall
mov
mov
out
fisttpll
daa
shll
sbb
sbb
fnstcw
push
xchg
jp
dec
popa
inc
ss
imul
stos
dec
adc
jae
inc
xor
xchg
mov
jmp
mov
inc
iret
mov
js
scas
aaa
rorl
cmpsl
xchg
in
cltd
in
adc
push
jp
rolb
mov
mov
push
stos
mov
mov
jecxz
std
ficoml
test
and
xchg
cld
andl
shll
cmpsl
inc
sbb
ss
push
sti
push
pop
in
add
out
dec
inc
mov
popa
inc
lret
mov
mov
mov
cld
das
int
add
loopne
in
mov
cmc
test
jecxz
aam
jb
call
out
adc
push
push
arpl
mov
mov
mov
pop
idiv
loop
cltd
mov
jno
jmp
jns
xchg
pop
mov
sahf
dec
insb
or
cmp
mov
jno
sub
push
shlb
xor
bound
jb
outsl
pop
shrl
jne
out
into
in
in
cmp
stos
icebp
outsl
ja
dec
jne
sti
clc
inc
popa
lahf
add
adcl
mov
orb
test
dec
sbb
push
push
inc
xlat
mov
mov
pop
and
test
in
sbb
stos
ds
cltd
fs
add
rclb
loope
js
xchg
outsb
adc
fldl
lea
xlat
mov
adc
push
dec
sub
cmp
jno
mov
pop
push
shrb
test
lds
shlb
subb
push
xchg
xor
pop
xchg
cwtl
sub
cmpb
loopne
or
pop
mov
or
cmc
cmp
xchg
cli
xor
or
mov
iret
push
xor
xchg
stos
dec
js
loop
enter
sub
xor
into
mov
lock
insl
adc
daa
push
pop
cmp
js
xchg
fdivrs
arpl
lods
dec
or
mov
out
mov
xor
lea
les
pop
loope
sub
decb
jbe
sub
jl
xor
sbb
fs
icebp
jae
add
fisttps
dec
push
jb
in
jmp
sahf
fists
inc
cmp
adc
adc
mov
mov
xor
mov
push
xchg
in
mov
adc
pop
roll
push
aam
hlt
mov
mov
pop
lret
movsl
pusha
push
sub
mov
lahf
fcmove
movb
adc
nop
cs
mov
pop
adc
popa
stos
xchg
pop
sbb
test
xor
cmp
insl
adc
in
fisubl
sarb
sahf
push
pop
push
in
test
mov
repnz
xchg
or
arpl
sbb
dec
xchg
les
adc
das
jae
nop
push
cld
jnp
sbb
pop
out
clc
inc
iret
mov
xchg
js
dec
push
push
pop
adc
xor
or
mov
fisttpl
int
inc
adc
out
cmp
cli
push
cmpsb
adc
lea
cmp
xor
call
jge
mov
cld
xchg
push
aaa
xchg
or
xor
dec
mov
push
pushf
jmp
ja
cli
push
push
adc
or
hlt
dec
dec
in
pop
addr16
or
movsl
sbb
xor
sti
aaa
or
leave
push
fsubl
lahf
rolb
stos
out
and
repz
shrb
xchg
cmpsb
pop
lahf
adc
jg
out
mov
dec
push
mov
push
mov
das
jne
aad
movzbl
xlat
aas
mov
out
sbb
je
adc
jmp
pop
push
mov
hlt
outsb
xchg
jbe
cmp
negb
scas
mov
cmc
xchg
cld
cmp
xchg
sub
scas
adc
jbe
cmp
mov
sub
test
ss
add
jg
mov
leave
in
fs
cmpsb
mov
sub
aam
fsubrs
scas
sbb
fisubrl
jae
flds
lret
loope
mov
jnp
lods
sarb
xchg
cld
jns
cmp
xchg
xchg
mov
add
jae
dec
loop
test
shl
jne
fcomps
push
dec
cmpsl
and
pop
jae
lret
ja
or
mov
xchg
push
shr
dec
sub
popf
nop
sub
xor
mov
cmpsl
jecxz
and
outsl
sbb
fdivl
call
pushf
add
push
or
cli
sub
adc
enter
and
adcb
cmpsb
push
sbb
sbbb
cltd
rol
mov
arpl
mov
mov
push
pop
ljmp
add
leave
popf
cmp
cmp
add
mov
fisttpl
js
data16
dec
pop
xor
jl
cmpsb
pop
movsb
add
add
jno
push
xor
sub
dec
arpl
int3
push
das
fiaddl
mov
xor
cwtl
out
mov
xchg
inc
insl
paddusb
int3
out
and
mov
xor
cs
jmp
and
push
jg
pop
cmp
scas
mov
mov
mov
bound
pusha
push
xlat
jb
and
inc
add
mov
mov
es
outsb
outsb
shlb
mov
mov
imul
cmp
push
fmulp
push
sbb
sbb
aad
js
sub
add
push
std
ret
insl
cmp
xor
add
data16
int3
ja
mov
or
popa
xlat
and
js
mov
out
daa
adc
shl
ja
das
push
popf
into
pusha
das
shll
pusha
inc
xor
fmul
cmpsl
imul
xchg
daa
pop
hlt
je
adc
rolb
rcrb
push
scas
gs
inc
mov
pop
add
sbb
clc
cmp
gs
jne
stc
aas
lods
je
pop
arpl
sti
fldcw
aad
and
dec
or
jo
fstpl
jns
xor
loop
add
xor
and
mov
dec
and
out
aas
and
ljmp
mov
addb
outsb
fldt
clc
dec
adc
xchg
in
pop
and
mov
pushf
sub
stc
adc
dec
add
scas
call
adc
push
dec
imul
mov
add
add
push
sbb
sbb
push
add
mov
cmp
pop
xor
pop
add
xchg
subl
sbb
add
xchg
flds
lret
shlb
andb
and
arpl
or
clts
mov
mov
das
cli
dec
std
loopne
out
testb
or
stos
je
leave
and
outsb
outsb
leave
adc
cmc
cli
gs
pop
jns
push
sub
jnp
mov
cmovg
fidivrs
push
clc
jecxz
mov
cmpsl
ja
inc
xor
or
cmovbe
js
xchg
rcrl
andb
lcall
adc
dec
push
mov
outsl
sub
icebp
sahf
lret
out
fdivr
or
mov
push
cli
aas
sbb
jmp
mov
dec
mov
mov
mov
outsb
popf
and
and
lock
jne
std
xchg
or
jmp
sub
test
bound
adc
sahf
outsb
lret
outsl
leave
sub
dec
cmpsl
fldcw
jecxz
xchg
xor
jno
adc
fdivrs
sub
mov
int3
and
sub
ret
movsl
sbb
mov
outsl
dec
or
add
sbb
push
mov
mov
add
aad
inc
es
mov
imul
or
ret
jnp
and
hlt
imul
push
imul
lods
push
push
js
cmc
cld
cmpsl
or
push
bound
mov
je
loope
int
shr
ljmp
jp
and
loop
faddp
add
cwtl
lret
or
test
cmpsb
subl
mov
pop
mov
add
mov
xchg
into
nop
mov
xor
mov
xor
jns
jl
ds
mov
pop
cmpsl
outsl
pop
cmpsb
std
jp
leave
mov
cmp
jmp
adc
inc
ljmp
and
sbb
gs
add
pop
pop
ss
and
lret
xchg
pop
mov
mov
lret
testl
outsb
cmp
sbb
aad
cmp
fisubl
lret
call
hlt
and
dec
adc
or
in
mov
test
mov
outsl
ds
xor
jge
hlt
loopne
lcall
cmpsl
mov
adc
pop
out
insl
test
jp
data16
cli
sbb
arpl
stos
ljmp
jp
xchg
arpl
imul
inc
cli
inc
push
jns
and
inc
inc
popf
add
push
pop
arpl
cmpsl
jae
fidivrl
lods
push
xor
dec
lds
in
fimuls
mov
orl
shll
pop
cmc
jnp
add
push
pop
cli
pop
inc
or
sub
shl
pop
sbb
scas
es
shll
in
mov
xchg
rcll
aas
xchg
sub
cli
cmpsl
jecxz
jg
xor
pushw
rcl
mov
adc
adc
sub
mov
gs
gs
lock
outsb
pop
enter
xchg
setb
ret
ret
je
cmc
sbb
inc
ffree
jbe
sahf
ret
outsl
push
jg
sub
and
movsb
lods
out
lcall
fs
shrb
jge
mov
mov
xor
jmp
cmp
inc
addr16
sbb
test
xor
cld
sub
or
loope
cmpsb
aad
cmpsl
loop
xchg
mov
push
mov
cmp
mov
jnp
adc
mov
and
push
call
imul
sub
inc
adc
inc
inc
mov
lods
lret
cs
dec
out
dec
xor
shr
ljmp
cmp
sub
jmp
push
add
iret
dec
inc
rcrb
and
push
lret
aas
aaa
xchg
jg
lahf
push
scas
cmp
loope
pop
cli
xchg
jmp
and
and
sbbb
rolb
mov
xor
ds
adc
ds
jo
dec
cmpsb
fcoml
cs
cmpsb
fidivrl
jecxz
xor
xlat
ret
sbb
xchg
xchg
mov
fwait
hlt
inc
aad
leave
push
cmp
mov
mov
ds
ss
and
mov
in
int
subl
repnz
enter
mov
aas
jg,pn
jo
push
fwait
imul
sub
mov
and
pop
jmp
jbe
xchg
jno
push
mov
inc
jne
mov
mov
lds
mov
push
pop
cmc
adc
pop
xchg
jle
loope,pn
mov
in
mov
jbe
jmp
jmp
jb
mov
jb
movsbl
fidivs
daa
inc
dec
aad
push
push
mov
mov
fcomps
leave
mov
mov
cvtps2pi
iret
lods
cmpsl
scas
push
roll
jnp
inc
xchg
push
repz
or
or
adc
adc
jne
std
jle
loope
shufps
and
out
shr
sbb
in
mov
mov
movl
mov
add
ret
mov
jecxz
sub
fiaddl
and
aam
sub
dec
sbbl
xor
dec
out
mov
fdivr
or
push
or
mov
scas
iret
inc
lods
das
dec
push
cmp
movsl
sub
mov
ret
xor
lock
mov
xor
sbb
mov
push
mov
bswap
je
cmc
or
jl
mov
enter
subl
loope
out
scas
pop
sub
movsb
dec
mov
mov
out
xor
sub
sub
les
arpl
add
ja
push
add
jae
repz
cmpl
cmp
in
or
loop
fsubrs
add
xor
sbb
lds
shll
or
cli
sbb
xor
rolb
dec
lahf
mov
cwtl
mov
pop
xorl
xor
int3
cmpsl
push
push
mov
push
ds
pushf
push
outsl
inc
mov
cmpsb
call
cmpb
xlat
mov
fisttps
adc
jl
sbb
lahf
sub
jns
mov
sbb
push
add
test
loope
aam
in
bound
xor
mov
mov
mov
and
adc
adc
js
aaa
push
fwait
cmpb
push
test
dec
sub
push
dec
mov
xor
jg
dec
int
mov
out
push
clc
push
pop
lds
scas
jp
pop
les
add
clc
cltd
scas
pop
or
dec
addr16
cli
scas
mov
push
scas
sbb
pop
mov
jb
jne
xor
pushf
adc
xor
lret
or
outsb
in
arpl
movsl
cmp
inc
and
leave
aas
js
leave
sub
lock
aad
jbe
bound
mov
dec
adc
lods
jg
lods
xor
ret
rcll
in
rcrl
fcmovnbe
mov
icebp
or
push
das
movsl
fnsave
mov
cltd
push
jmp
adc
lcall
add
hlt
lock
out
pop
aaa
or
add
fwait
inc
mov
xchg
ds
add
pop
aas
sahf
sub
or
inc
push
lds
push
pop
aad
test
cli
imul
dec
mov
outsl
call
aas
add
test
mov
inc
push
jo
jne
sub
ret
xor
ss
sbb
andb
shll
adc
popa
scas
dec
dec
int3
sbb
mov
or
int3
dec
pop
rorb
in
frstpm(287
fbld
jb
and
dec
jge
ja
dec
mov
cmpsb
popf
mov
jge
mov
outsb
sbb
add
enter
push
popf
cwtl
adc
xchg
icebp
ss
daa
pop
cmp
jp
mov
sarb
jae
or
andb
scas
sub
sahf
pop
inc
cmpl
sbb
lea
lret
int
sbb
mov
and
push
cmp
pshufw
in
std
movsb
mov
and
cmp
sub
insb
sbb
pop
fwait
mov
inc
test
imul
xchg
inc
mov
xor
mov
pop
cmp
pop
hlt
into
jns
cltd
mov
adc
mov
repz
jecxz
jo
aaa
lock
hlt
inc
das
fildll
dec
pusha
sahf
or
push
mov
loopne
addl
outsl
test
sub
mov
movsl
mov
jb
jns
xor
push
cmp
inc
stc
popf
ss
inc
mov
scas
jne,pn
mov
in
scas
sub
out
jmp
push
testb
fldenv
mov
sbb
push
std
iret
xor
sahf
and
inc
xchg
fdivrs
cmpb
or
sub
sub
push
mov
fldcw
das
adc
sbb
cmp
ja
js
xor
fs
fidivs
out
jae
jl
push
shl
test
push
iret
fmull
mov
movsl
dec
icebp
pop
cltd
das
outsb
stos
hlt
mov
sbb
es
loop
aas
sarb
scas
daa
push
inc
das
inc
cmp
inc
lock
sbb
pushf
hlt
mov
add
xchg
push
out
arpl
fmull
xor
jne
sub
es
mov
mov
fcmovnb
aaa
das
movsb
mov
aas
xor
out
xchg
insb
jns
sbb
jg
add
or
rorl
jp
and
jge
lea
jecxz
xor
xor
pop
xor
hlt
push
stos
sar
and
pop
inc
jge
mov
int3
push
es
lock
jae
mov
rorb
lret
lret
xchg
push
jns
add
sbb
movsb
or
addl
cmp
mov
mov
or
fadd
pop
xor
mov
in
push
icebp
pushf
sbb
leave
mov
dec
outsb
sub
pop
lret
jge
test
sti
sarb
scas
xchg
xor
nop
push
pop
lods
dec
inc
fsub
sbb
jg
mov
xchg
mov
je
sub
jb
inc
add
pop
outsb
mov
repz
jno
xchg
mov
mov
xor
push
js
jg
lock
cwtl
in
sub
cltd
or
xchg
dec
repnz
mov
bound
insb
and
add
jg
stos
cmc
sbb
popa
push
rcrl
lcall
shl
iret
adc
sub
ret
pop
lret
mov
popf
out
mov
shlb
or
inc
fldl
pop
and
pop
push
incl
ss
mov
fildll
pop
loope
movsl
inc
ret
mov
lret
mov
fadds
arpl
jae
lods
fst
mov
ret
pop
fstpt
jb
jecxz
jns
xchg
movsb
jle
add
pop
jg
jne
adc
dec
in
pop
loop
or
lock
sub
sub
push
bound
cmp
push
movsl
pop
jecxz
mov
cmp
cmp
mov
jle
push
mov
and
pop
sbb
xor
fnclex
add
cmc
mov
xchg
or
mull
divl
fwait
jmp
cmp
int3
call
inc
cmp
aad
adc
add
jnp
jnp
in
inc
cmp
or
fcmovnb
sub
iret
inc
mov
push
sbb
mov
ljmp
jg
push
inc
aad
aam
xor
xor
pusha
in
xor
jo
and
cld
or
dec
imul
loop
dec
mov
insl
mov
rclb
push
popf
movsb
and
adc
lds
push
mov
jnp
sti
jge
mov
sub
call
add
sub
lock
int
sub
mov
arpl
shrl
pushl
cmp
stos
add
mov
cwtl
mov
dec
and
xchg
lods
jl
inc
mov
in
out
mov
nop
cmp
repz
or
sub
stos
xchg
cmp
mov
es
faddl
fs
shrl
outsb
mov
cmp
bound
out
push
dec
stos
dec
mov
cld
clc
fs
mov
out
out
fucomi
call
jmp
pop
jle
mov
mov
loop
inc
push
mov
out
jg
xchg
filds
insl
push
int3
in
and
pop
std
cmpsl
jg
popa
cmpsb
fst
mov
in
js
rcr
push
dec
cmp
unpckhps
inc
insl
push
jo
sub
fbstp
inc
shrb
mov
push
mov
add
xor
rclb
mov
js
sub
xorb
fadd
dec
popf
jne
jnp
sbb
jp
sub
xchg
add
cmp
dec
dec
mov
neg
ja
xchg
or
pop
push
xchg
and
mov
or
mov
fdivp
inc
cmpl
pop
cwtl
xor
enter
mov
mov
pop
inc
pop
xchg
mov
jae
repnz
push
outsl
lods
sub
repnz
subb
jbe
mov
add
jge
mov
sub
in
or
mov
stc
and
mov
push
sbb
std
scas
sbb
cmp
sbb
xor
sbb
adc
cwtl
pop
decb
and
in
popa
stos
jecxz
mov
aas
in
fiadds
add
imul
ret
lcall
stos
xchg
mov
jge
xor
push
repz
xor
jae
scas
push
andl
adc
pop
sbb
stos
fldcw
test
sbb
jns
sbb
fildl
push
mov
mov
push
cmp
iret
enter
jbe
jo
ljmp
cltd
test
fsubr
dec
push
pop
fs
pop
clc
dec
push
sub
mov
push
movsl
pushf
push
pop
sbb
jge
adcl
int3
or
rorb
popa
xor
or
das
cmp
cmp
cmpsl
ret
inc
leave
stos
fisttpll
xor
imul
leave
mov
jecxz
in
aam
loope
lahf
lods
pop
movsb
cmp
test
repz
jae
loopne
jp
sbb
test
sbb
lock
or
fimull
cld
repnz
mul
jp
lds
test
jge
adc
das
mov
fistpll
adc
or
outsl
imul
repz
mov
leave
lcall
shlb
test
xchg
std
in
sub
xor
and
lahf
enter
adc
adc
sbb
fwait
xor
sbb
sti
sub
adc
lret
inc
rcrb
sbb
and
and
cmpsb
idivl
push
xchg
repz
mov
aad
sbb
std
xor
iret
xchg
out
pop
xlat
jo
or
test
xor
add
adc
lods
jns
or
arpl
xor
outsl
push
out
cmpl
mov
xchg
ds
mov
pop
je
sub
cmpsw
dec
mull
stc
jp
jnp
dec
xlat
push
test
pop
pushl
les
fcomp
adc
out
lock
mov
pusha
mov
dec
inc
jmp
lds
data16
push
mov
out
cltd
stos
mov
xor
dec
movsl
pop
shrb
sbb
sbb
sbb
and
arpl
and
andb
add
or
inc
xchg
aas
sub
stos
cmpsb
dec
and
sub
out
mov
pop
shlb
outsb
icebp
mov
or
ja
add
into
faddp
fnstsw
fstl
mov
push
cmp
repz
into
dec
push
add
cmp
push
jno
repnz
jmp
push
pop
jecxz
sub
lret
cmp
into
and
addr16
push
pandn
stos
add
mov
inc
and
es
cltd
repnz
clc
add
lock
mov
in
scas
test
push
sub
inc
jge
push
mov
hlt
loopne
pop
pop
jb
out
fnstcw
xor
aas
xor
std
adc
ja
sub
fdivl
jecxz
jo
mov
icebp
aad
sub
fdivs
jb
xchg
adc
inc
jbe
add
movsb
pop
outsb
mov
dec
jbe
addl
scas
xor
dec
sbb
jecxz
sbb
repnz
jg
pop
fnstenv
dec
or
cmp
incl
pushl
arpl
jp
cmc
aaa
repz
lds
and
fimull
adc
addr16
jns
movl
mov
sbb
cwtl
shll
lds
or
mov
fisttpll
or
jb
cmp
adc
addr16
jecxz
addr16
dec
in
ficoml
enter
cmp
dec
lret
xchg
jp
data16
cmpl
repnz
loop
mov
roll
cwtl
int
aad
pop
stc
jecxz
sub
push
loop
call
stc
popf
pop
das
jecxz
daa
outsb
dec
pop
cmp
sti
notl
out
sbb
das
aam
rcl
and
pop
jp
push
mov
addr16
aaa
xor
popa
addl
and
xorb
sub
sub
push
dec
movsl
cmpsb
loope
lock
pop
or
and
popa
push
in
jns
cmp
js
aaa
aam
jle
cmp
mov
fnstcw
sbb
mov
xchg
jmp
int3
imul
aam
adc
jecxz,pt
push
or
lret
xchg
sub
push
mov
sub
inc
cltd
aas
jg
stos
mov
ja
push
imul
pop
jle
xor
pop
xchg
in
popf
repz
out
push
adc
cs
xchg
fidivl
iret
sahf
dec
int3
mulb
or
popf
and
imul
and
lahf
xor
push
sbb
sahf
or
bound
cmp
ret
mov
test
cmp
out
xor
jmp
rcl
imul
push
pop
dec
ret
jae
or
jne
inc
push
adc
mov
mov
xchg
mov
push
sbb
pop
push
das
or
ljmp
incl
add
push
sbb
xchg
fwait
icebp
jnp
pop
cmp
int3
scas
push
leave
loope
push
and
or
cmp
add
and
pop
sub
xchg
dec
das
dec
loop
xchg
jle
ss
cmp
inc
ljmp
and
gs
xchg
or
cmp
mov
pusha
push
pop
loope
icebp
and
pusha
xchg
ds
jae
xchg
lahf
inc
mov
and
loopne
xchg
pop
jns
popf
lds
mov
push
insl
addl
subl
add
adc
loope
dec
pop
and
hlt
xchg
cmp
xor
out
or
sbbl
dec
xor
sub
pop
jno
mov
jmp
sbb
cwtl
adc
add
enter
push
and
hlt
stc
dec
scas
nop
cwtl
push
cmpsl
add
loopne
ja
out
fmuls
int
out
test
pop
in
dec
or
aad
loop
lret
sbb
icebp
push
lret
icebp
ss
sub
jno
out
ror
mov
imul
or
jmp
mov
mov
dec
adc
mov
pop
sbb
mulb
jecxz
xor
jb
ja
std
daa
cmp
sahf
std
mov
jae
fsubs
pop
mov
cmpb
pop
shlb
push
nop
pop
sbb
shr
pop
jge
sbb
pop
loop
jae
mov
push
icebp
mov
mov
mov
cmp
mov
inc
nop
pop
mov
sarl
movsl
leave
inc
xchg
inc
out
dec
push
mov
fs
fsubrs
repz
inc
out
inc
mov
lods
cli
cmc
cmpb
lcall
jmp
mov
scas
stc
xor
mov
jo
lock
mov
and
arpl
pop
test
ret
pop
xchg
xchg
out
jle
pop
ja
push
cmp
mov
mov
adcb
orb
pop
pop
push
sub
out
iret
fdivp
xorb
push
push
outsl
xor
hlt
iret
ficomps
shll
out
jmp
xor
call
jg
mov
mov
pop
lock
mov
pop
sbb
int
sahf
mov
popf
outsl
cmp
ljmp
stos
mov
lcall
lret
jp
outsb
sahf
ja
push
fmuls
cltd
inc
push
jae
adc
jns
icebp
std
sub
xchg
jg
int
fdivrl
aam
scas
js
jle
ljmp
sbb
cmp
mov
js
push
sti
rclb
xchg
cld
jb
or
testl
outsb
imul
in
xor
movsl
popa
jo
fdivp
mov
jns
inc
shlb
je
jle
cli
pop
cmp
xchg
loope
das
fistl
push
out
in
mov
add
mov
addb
jg
dec
stos
jg
sti
pop
pop
xchg
cmp
or
mov
rcll
test
movsl
int3
shl
lock
in
js
call
cmp
jecxz
and
in
rcrb
push
mov
inc
jae
fs
push
loop
stos
aam
outsl
adc
insl
cmp
add
test
xor
jp
gs
fs
ljmp
inc
dec
lea
jbe
int3
xchg
sti
sti
push
leave
mov
imul
pushf
push
fs
ljmp
int
pop
pop
sahf
pop
in
cli
inc
bound
enter
pop
push
jb
test
mov
push
push
lret
ret
push
sub
je
idivb
xor
xlat
push
inc
adc
stc
jmp
dec
or
push
adc
sbb
in
pop
jmp
and
in
adc
js
mov
ja
data16
pop
mov
dec
or
scas
mov
cmp
repnz
lahf
movsb
push
test
cld
in
mov
fnstenv
outsb
xchg
lret
adc
xchg
push
rorl
cmp
roll
nop
dec
mov
gs
push
dec
movsb
lods
stos
mov
dec
xlat
shl
insb
cmc
ret
cs
dec
jne
out
test
dec
inc
jne
xor
repnz
das
js
sti
xor
add
clc
shll
scas
ret
shl
and
xor
lea
into
mov
cmp
jne
jo
fnstcw
adc
jl
lods
or
xchg
int3
push
rcrl
or
pop
mov
inc
push
mov
out
ljmp
cli
ja
push
jle
mov
pop
adc
lahf
pop
jae
mov
sbb
or
mov
push
pop
xchg
test
scas
ret
stos
sub
insb
inc
xchg
in
into
fistl
push
adc
push
imul
or
cmp
stos
cmp
cmp
add
mov
mov
hlt
dec
icebp
andl
roll
fdivs
imul
int3
pop
xchg
mov
jmp
popa
orb
mov
dec
mov
mov
fxch
bound
dec
and
cs
mov
sub
pop
mov
and
pminub
inc
loop
stc
cmp
mov
stc
jns
lret
lret
mov
repz
icebp
push
sbb
pushf
jbe
sub
fdivs
lods
push
icebp
push
mov
xor
push
pop
cltd
sub
xchg
lods
xor
popa
inc
xchg
sbb
or
or
scas
lahf
dec
je
leave
movsb
jp
pop
sub
jno
and
mov
in
idiv
sbbl
ret
lea
push
jnp
inc
repz
xchg
lds
or
cli
push
and
mov
push
push
mov
add
push
mov
jmp
or
out
fisubl
mov
xchg
leave
ljmp
cmp
cld
sub
push
clc
frstor
xchg
dec
gs
rol
lret
push
inc
fstp
scas
add
pop
jns,pt
loope
xchg
mov
xchg
cmc
inc
dec
jmp
popf
lods
push
push
mov
xchg
repz
xlat
loopne
push
and
nop
dec
jl
cmpsb
test
adc
cli
xor
ljmp
jno
cmp
lods
adc
ja
lea
out
cltd
int
mov
sbb
lret
out
roll
shrl
shlb
aaa
stos
rolb
sbb
dec
sbb
cmp
inc
in
dec
jb
mov
pop
and
loope
xor
call
insl
ret
and
jb
fisubl
sbb
push
adc
imul
or
sub
jno
inc
aaa
pop
addr16
out
cli
les
stc
mov
negb
lcall
pop
cmp
lahf
out
pop
jnp
and
repnz
enter
add
out
jl
push
sbb
cmp
sar
in
pop
loop
sub
pop
dec
jp
in
das
mov
inc
pop
in
das
cwtl
fiadds
xchg
push
enter
jae
outsl
stos
jecxz
lods
mov
ret
pop
push
sti
cmpsl
push
iret
pop
sub
ss
fwait
xlat
mov
xor
push
xchg
mov
mov
mov
ss
xchg
sahf
pop
inc
mov
add
dec
std
jle
loope
cmp
shl
sbb
mov
dec
cmpsl
jbe
loop
insl
mov
jb
sti
xchg
fistpl
add
add
lock
adc
push
xlat
test
lods
dec
push
push
sbb
fdivrl
mov
xchg
cs
lods
mov
outsl
dec
pop
clc
rcll
mov
inc
repz
or
sbb
or
ds
fwait
addr16
inc
push
push
aas
mov
jno
fs
cmp
into
add
xor
dec
mov
push
test
test
sbb
sbb
cmp
mov
jo
das
jb
pop
add
add
enter
gs
sub
inc
mov
cmpl
mov
cmp
iret
sub
xor
insb
and
push
push
sbbb
sub
adc
adc
push
leave
lahf
and
ljmpw
jne
jno
rcll
pop
in
mov
inc
int3
sbb
scas
adc
sub
mov
in
pop
in
xor
scas
lods
inc
adc
ret
or
out
sbb
loope
testb
jmp
push
jns
fldenv
xor
xchg
les
push
addr16
pop
jmp
sub
sub
push
fwait
jmp
into
pop
xor
pop
pop
inc
sub
mov
push
jne
and
inc
xor
inc
mov
mov
testl
subl
dec
out
test
aad
add
arpl
aad
jp
aas
sahf
aam
mov
add
test
mov
sub
mov
mov
push
out
aas
xor
call
lea
sbb
fcmovb
shlb
cli
fmuls
shlb
sub
outsl
cs
lock
jnp
pop
jle
repz
lods
loope
bound
adc
cmp
clc
xchg
adc
popa
cltd
or
popa
xor
and
dec
adcl
fidivs
xchg
cli
jo
rcll
lods
movsb
xor
add
test
sub
pop
fldt
adc
arpl
imul
mov
dec
rcll
gs
or
dec
or
testl
pop
inc
mov
mov
cmpsl
xchg
push
pop
adc
push
or
xchg
mov
mov
fdivr
cmp
repz
mov
pop
jmp
mov
add
pop
sbb
adc
inc
cmp
push
push
mov
mov
dec
mov
pushf
rorb
imul
je
ds
pushf
pop
scas
test
stos
outsl
xorl
ret
outsb
enter
or
mov
dec
xor
dec
es
or
pop
pop
or
push
push
je
jmp
subl
cli
xlat
fistpll
xlat
dec
jmp
push
lahf
shrl
mov
insb
pop
sub
xchg
jg
out
xor
in
push
adc
sbb
mov
out
cmp
dec
adc
popa
out
sbb
jle
pop
mov
mov
jb
jno
notl
daa
call
mov
movb
popf
push
xor
orl
jo
hlt
adc
sbb
mov
dec
inc
lret
jne
subb
xchg
filds
cli
cltd
inc
add
lods
pop
lock
out
pop
sub
test
repnz
stos
push
int
and
and
fcmovnb
pop
popf
cld
push
adc
mov
add
mov
addb
xchg
xor
add
push
add
fwait
push
cli
stos
mov
pop
sbb
call
movb
popa
push
imul
push
and
or
jno
pop
sub
sub
addr16
imul
addr16
repz
jns
push
or
movb
adc
mov
xor
xchg
xor
icebp
gs
hlt
sti
cmp
mov
jne
pop
das
sub
jo
adc
pop
jo
and
out
fildll
push
inc
xor
push
ret
pop
pop
iret
inc
mov
imul
sahf
lret
dec
push
int
cmc
sub
shrb
fists
cmpsl
add
jge
mov
aad
stos
outsl
push
in
faddl
icebp
inc
and
jne
pop
cmp
jl
test
cmovnp
push
pushf
push
mov
push
es
mov
int3
adc
jne
push
ds
mov
int3
xchg
idivl
cmp
push
or
test
les
mov
sub
ret
call
ds
mov
sub
dec
rolb
jge
cmp
int3
mov
or
xlat
mov
dec
mov
jae
and
ss
jo
fcoml
sbb
mov
xlat
inc
pop
adc
xchg
mov
xchg
add
xchg
fbstp
push
cmp
lret
fstpt
in
mov
in
adc
out
inc
andb
nop
push
add
adc
fisubrs
mov
loope,pn
and
pop
fwait
jg
and
incb
loope
mov
mov
cld
xor
fisttps
or
lds
in
xchg
pop
lods
int
out
int
int3
cmp
jl
rcll
lret
mov
sub
cmpsb
adc
mov
fwait
divl
sbb
sbb
call
xor
lock
testl
pop
fcmovnbe
sarl
xchg
mov
not
mov
sbb
lock
call
mul
sub
pop
mov
je
call
ret
xchg
and
mov
mov
popa
jecxz
add
inc
inc
iret
add
cmpsl
aam
cmp
mov
cmp
jno
enter
jmp
push
adc
sbb
popa
leave
mov
loop
sub
filds
jno
push
push
jno
into
push
out
xchg
sub
pushf
outsb
out
mov
div
popf
and
xchg
vmread
ja
ljmp
dec
xchg
outsl
mov
inc
and
xchg
imul
push
add
cmp
jg
rolb
idivb
mov
icebp
or
loopne
out
loopne
fldenv
js
mov
jnp
sti
idivl
and
in
rcr
negl
dec
fcompl
fidivl
shll
aaa
unpcklps
int3
mov
test
pop
push
bound
pop
add
mov
fidivrl
sti
sbb
inc
test
adc
ss
pop
xor
inc
and
mov
lret
cmpsb
push
and
js
push
mov
fs
popf
inc
xor
sbb
add
test
movsl
iret
mov
jmp
rclb
ret
rcrb
and
lcall
lds
outsb
cld
xchg
xchg
add
dec
jb
shll
push
mov
lods
movsb
paddw
out
mov
mov
push
out
std
shll
pop
push
xchg
inc
out
adc
mov
pop
mov
insl
ss
dec
mov
shrb
push
inc
in
ficoms
sub
cs
or
cmp
test
loop
outsl
and
jl
out
stos
jmp
test
orl
mov
fistps
imul
cld
stos
test
lahf
pop
or
lret
push
mov
cmpsb
ret
mov
lock
jle
stc
dec
dec
jb
pop
mov
or
xchg
xchg
push
lahf
mov
in
lret
push
cmp
outsb
sahf
dec
or
and
cmpsl
ud2
inc
testl
fiadds
sub
cmp
xor
mov
lock
jno
rep
orl
jne
sub
add
pop
lods
sbb
dec
inc
sbb
je
out
inc
cmp
das
sub
sbbl
sub
lret
lea
adc
jge
jle
xor
icebp
xchg
mov
xchg
push
sub
daa
stc
mov
mov
mov
invd
xor
jle
jo
outsb
cmp
rcrb
dec
fs
outsl
xchg
jns
fisttpl
mov
enter
rorb
cwtl
xchg
add
lret
ret
jl
loope
mov
adc
cmp
pop
loopne
mov
scas
adc
or
shll
cwtl
mov
cli
xchg
imul
test
aas
arpl
scas
ret
or
pop
std
daa
mov
mov
adc
movsl
fs
int3
sahf
fnstcw
scas
daa
pop
inc
enter
imul
lcall
neg
mov
xorb
mov
push
push
push
lret
mov
mov
cmp
pusha
and
mov
int
fdivr
pop
fmuls
sti
dec
into
dec
xchg
push
jmp
lods
mov
lods
int3
push
push
cmp
out
cmpb
in
lahf
or
in
jmp
push
cwtl
mov
enter
sbb
test
push
mov
xchg
jge
out
xor
shl
stos
ficoms
loope
popa
arpl
sbbb
arpl
loopne
sbb
add
mov
adc
mov
and
pop
aam
ret
mov
loop
mov
movsb
add
lcall
add
lcall
mov
inc
stc
mov
xor
adc
iret
push
sub
sti
lea
leave
fwait
inc
jp
mov
inc
push
cmpsb
shrb
mov
movsb
rcl
cmp
loop
push
push
mov
stc
mov
and
jo
cli
jno
ja
ljmp
mov
pop
xor
push
xor
sahf
push
adc
pop
fwait
js
xchg
add
jmp
sbb
fwait
lahf
mov
pmulhuw
je
sub
and
hlt
or
sub
dec
dec
dec
cmp
xor
inc
push
outsb
push
arpl
push
add
mov
cmpsb
fnstenv
movsb
repnz
add
sub
and
and
movsb
mov
jle
jns
popf
dec
and
iret
mov
pop
call
mov
push
iret
and
fstps
mov
insb
ljmp
cmp
icebp
cmpsb
push
add
sbb
out
rclb
xchg
jbe
dec
cmc
push
inc
cmp
sub
xor
add
push
aas
xor
sub
jbe
inc
loope
add
bound
mov
imul
xchg
ljmp
stos
outsl
push
out
mov
push
call
out
fwait
pop
xchg
xchg
jo
xor
or
cld
push
outsb
sbb
pop
cmc
test
hlt
ds
iret
test
adc
dec
xorl
push
xlat
int3
adc
lods
jno
pop
cmp
and
add
in
add
stos
dec
jl
mov
xor
inc
lods
mov
or
xchg
jp
xchg
aam
es
sbb
mov
das
mov
hlt
pop
test
add
ficomps
sbb
shlb
pop
cmp
repz
cmpsb
movsl
mov
lods
loopne
adc
test
sub
aad
mov
dec
fstpt
sub
lcall
mov
mov
cmp
inc
out
jnp
aas
add
insb
rcll
popf
scas
insb
jle
cmp
or
inc
sub
push
imul
insb
fcom
jns
cwtl
dec
ds
push
jo
xchg
adc
test
cwtl
jo
test
loope
sub
adc
scas
xchg
jecxz
data16
mov
mov
sti
aaa
jae
icebp
dec
push
pusha
jbe
in
sub
and
push
mov
cmp
mov
lret
mov
stos
and
jno
bound
jg
add
mov
test
ret
push
mov
stos
or
xchg
xchg
or
sbb
test
pusha
rcr
test
pop
lahf
pop
stc
inc
in
dec
cmpsl
push
pop
push
jae
and
cmp
scas
sub
mov
mov
sbb
out
jp
cmp
jns
cmp
jno
movsb
dec
dec
mov
mov
push
jmp
xor
cs
jl
andb
je
mov
mov
pop
addl
sub
call
jmp
in
rclb
mov
add
mov
xchg
mov
xchg
dec
test
out
push
cmp
sbb
push
rcr
aaa
lret
faddl
es
jae
fldt
call
pop
stc
sbb
ds
adc
push
aaa
sahf
adc
es
fisttps
inc
cmp
in
cmp
sbb
js
xor
daa
jno
pusha
mov
out
fs
mov
cmp
inc
test
sbb
push
bound
data16
ret
mov
dec
dec
nop
push
es
jno
cwtl
mov
dec
cmp
xor
ja
push
outsb
dec
inc
sub
gs
addr16
rep
test
push
add
cmp
pop
push
push
scas
aad
push
in
subb
das
in
cld
xor
stos
test
and
mov
mov
adc
mov
fldenv
aam
subl
fbstp
sbb
hlt
shrl
and
jmp
cmpl
cmpl
frstor
dec
mov
out
scas
pushf
in
out
popa
and
sar
stos
push
sub
test
mov
ret
push
and
mov
inc
add
out
popf
imul
movsl
dec
leave
fs
dec
cmc
in
int3
lea
clc
aad
stos
insl
out
add
sub
repnz
jno
push
pop
mov
loope
adc
push
sub
xchg
cmp
mov
fmull
divl
cmp
bound
mov
dec
lcall
inc
mov
add
outsl
inc
popl
scas
mov
pop
clc
test
lret
popa
xchg
add
icebp
js
pop
mov
out
or
popf
ljmp
xor
outsl
mov
inc
sub
pop
dec
add
aaa
lcall
pop
sbb
mov
loope
and
aas
frstor
mov
sub
mov
fwait
sub
xchg
mov
lret
test
dec
dec
and
leave
jecxz
mov
stc
jo
adc
roll
or
inc
fwait
dec
mov
aaa
andb
mov
mov
xlat
das
mov
daa
aaa
out
popf
fisubrl
in
ret
push
xor
pop
lods
cmc
inc
pop
and
ss
xor
mov
push
sahf
push
pop
inc
cmp
push
movl
es
roll
leave
orb
sbb
loope
mov
push
jb
into
xor
xchg
popf
adc
or
inc
adc
xchg
inc
xchg
roll
ja
negl
popf
and
in
adc
adc
jno
push
nop
mov
js
loope
sub
push
push
mov
lods
sbb
lds
sbb
jmp
lock
mov
repnz
push
insl
out
loope
bound
loop
add
test
jb
popa
inc
cld
fisttpll
jns
loopne
pop
sub
repz
sub
sti
stc
lods
sbb
push
int
gs
hlt
pushf
xor
out
test
in
mov
mov
xor
sbb
ss
repz
pop
jmp
add
fcmovnb
lods
fstpt
add
and
cltd
mov
repz
add
add
popa
sub
sbb
icebp
jmp
or
mov
bndldx
inc
jns
cmp
jnp
cmp
xchg
loop
jne
jg
push
dec
pop
or
mov
sarb
hlt
ret
inc
fcompl
or
cli
xchg
dec
cld
and
sub
leave
and
mov
mov
divb
fs
xor
sub
into
add
dec
andb
shr
sbb
enter
lds
iret
rolb
shll
cmc
std
and
xor
cmpsb
add
inc
dec
mov
mov
andw
xorb
movl
fsubrs
iret
xchg
leave
cmpsb
test
adc
das
push
sarb
cmp
push
fistpll
das
insl
sbb
cmp
and
sbb
adc
fcmovnbe
mov
dec
jb
or
fcoms
jp
movl
push
mov
jae
out
fisubs
sbb
jg
inc
push
fidivs
ds
addr16
lahf
fnstsw
insl
sbb
mov
sbb
push
stos
ret
nop
iret
das
adc
in
add
inc
lods
cmp
sub
scas
testb
je
adc
jo
mov
movsl
sbb
xchg
sub
ffreep
dec
dec
je
sbb
mov
flds
add
add
inc
cmp
repz
stos
pop
sbb
add
sub
xor
cmc
cltd
scas
std
dec
push
push
or
sbb
movsb
push
call
fstl
mov
and
int3
xor
cs
adc
std
mov
or
push
sbb
add
push
gs
sbb
jge
cmpsb
das
push
mov
jge
imul
dec
in
push
repnz
pop
into
into
sbb
addpd
inc
pcmpeqw
popa
stos
shr
mov
sub
xchg
out
rol
dec
pop
rcll
pop
cmpsl
icebp
fucomi
adc
xchg
xor
std
out
xchg
sar
dec
jo
jbe
cmp
xor
repnz
cltd
insl
leave
inc
xlat
dec
xchg
gs
sti
xor
fyl2xp1
stos
inc
xor
push
mov
enter
dec
and
gs
je
sbbl
hlt
sahf
and
popa
xchg
mov
lret
mov
and
shll
stos
popf
jo
push
mov
andb
test
sub
xor
cwtl
fstpt
inc
inc
es
in
adc
mov
enter
lret
sbb
xorl
aam
add
push
fimuls
enter
push
push
or
lret
add
aad
mov
negb
into
pop
adc
es
sub
mov
test
pushfw
imul
inc
and
rdpmc
push
negb
dec
in
adc
xchg
pushf
inc
fisttpl
sub
mov
loop
fwait
cltd
mov
inc
push
subl
or
mov
shl
sub
mov
lods
push
xlat
mov
call
sarl
sub
push
dec
dec
xchg
scas
clc
stc
roll
xchg
pop
fistps
mov
xor
cmp
xlat
testl
movsb
lds
and
sbb
movsb
mov
repz
paddw
movsl
scas
or
loope
dec
xor
mov
xor
xadd
jae
sub
jmp
lret
sbb
clc
push
in
popf
mov
clc
sbb
lods
pop
cmp
aad
inc
std
pop
mov
test
into
or
sbb
inc
xchg
mov
inc
lret
sub
pop
test
cmc
inc
popa
enter
xlat
or
arpl
dec
pop
jge
jge
mov
icebp
jge
add
pop
mov
in
fistpll
jae
in
adc
or
jnp
inc
jecxz
adc
adc
rclb
jne
pop
cmc
mov
cli
xchg
dec
mov
sbb
pop
sti
lds
add
push
inc
ret
loop
push
sbb
fdivl
inc
nop
das
bound
rcrb
ljmp
xor
bound
add
cmpb
mov
xchg
roll
rorb
lahf
pop
shlb
outsl
les
jbe
fs
jmp
mov
jae
icebp
enter
sub
pusha
bndstx
outsl
inc
push
lret
aas
push
popa
cltd
pop
sub
xchg
nop
cmpsb
mov
lods
pop
scas
fcomps
pusha
adc
fistpl
add
jl
push
mov
test
or
xor
jo
cmpl
pop
push
fwait
sahf
cld
out
mov
shl
add
ret
clc
cmpb
pop
sub
jb
lds
loope
je
ljmp
jle
fldl
xchg
loopne
jmp
add
aam
lds
push
loopne
test
lret
ja
lods
sub
and
mov
in
dec
shlb
push
testb
pusha
out
pop
cmpsl
insl
mov
inc
sub
es
repz
pop
or
sbb
sbb
pop
mov
loop
mov
out
ror
add
into
push
nop
pop
inc
pop
lahf
jb
loope
lea
test
inc
inc
cmp
test
mov
inc
nopl
adc
mov
in
sti
xchg
fwait
stc
pop
das
pushf
stc
sbb
stos
int3
shl
or
ljmp
insl
jg
xlat
inc
pusha
mov
mov
add
cwtl
cmpsl
lods
adc
popa
es
int
xchg
xchg
sbb
inc
inc
dec
sbb
pop
scas
lods
cmp
js
fistpl
push
roll
mov
rcrl
and
push
fs
push
or
cmpsb
adc
mov
rcrl
aaa
lods
push
lock
jl
roll
arpl
push
adc
enter
ja
sub
jl
or
shrb
pop
addr16
in
imul
pop
test
mov
stc
std
mov
add
mov
and
fstl
sahf
xlat
scas
or
std
ret
adc
insl
ss
sbb
cmpl
in
xchg
ljmp
fstps
or
inc
or
xor
cld
outsb
bound
mov
mov
jmp
test
cs
ja
cs
and
stos
mov
rclb
push
pop
sbb
mov
xchg
or
push
xor
ret
das
gs
jle
sub
outsb
sub
sbb
sbb
push
pop
dec
scas
sti
in
fwait
movsb
xchg
insl
pop
xlat
pop
cmp
aam
add
aas
cmpsl
rorb
cmc
jg
push
or
inc
iret
sbb
or
sub
icebp
outsl
mov
shr
movsb
cwtl
sub
fsubrs
es
mov
push
dec
fidivrs
push
jmp
out
mov
frstor
movsb
xchg
jl
repnz
pop
sbb
aad
pop
sub
scas
jge
push
pusha
add
js
stos
imul
dec
jnp
out
push
pop
sbb
ja
push
mov
movsb
mov
stc
cmp
add
adc
mov
xor
sbb
aam
sbb
jbe
cli
cmpl
xlat
fucomi
adc
sarl
cmc
cs
imul
ds
dec
fldt
mov
jo
or
cld
ret
pop
jbe
enter
cmp
movsb
pusha
jbe
in
outsb
push
sahf
push
mov
repz
push
cmpsb
dec
xor
dec
inc
sub
xchg
enter
mov
xorl
mov
push
lods
aam
mov
inc
or
imul
aas
cmp
jnp
inc
clc
jle
mov
hlt
std
fadds
popa
or
gs
sbb
push
clc
cmp
loop
sbb
sarl
dec
inc
scas
enter
cmpsb
mov
dec
lcall
add
dec
xchg
ljmp
cwtl
inc
xchg
jno
dec
insl
sbbl
stc
mov
dec
dec
inc
loopne
test
je
push
test
lock
inc
sbb
mov
jb
sbb
jle
cmpsb
cmpsb
sbb
xchg
shlb
repnz
pop
dec
xchg
push
mov
pop
sbb
add
call
jns
mov
cmp
or
xchg
or
inc
mov
xor
or
adc
lock
rorb
lods
dec
and
jb
shrb
ss
adc
jbe
mov
sub
xor
popf
xor
stos
call
sbb
pop
fdivrs
shrb
xor
adc
jle
xor
mov
lret
hlt
cmpsb
jle
xchg
jmp
jmp
sbb
sbb
cmp
cltd
xchg
and
mov
jg
jge
mov
xchg
mov
dec
bound
sbb
dec
mov
mov
daa
xchg
int3
sub
test
das
sbb
pop
fstl
aad
enter
inc
pushf
adc
mov
pop
mov
ficomps
dec
fwait
cmp
loop
pop
mov
sbb
popf
jl
cmp
aaa
dec
or
mov
inc
shl
dec
test
mov
mov
clc
mov
and
insb
mov
hlt
adc
leave
into
adc
mov
cwtl
pop
mov
inc
lods
mov
dec
stc
adc
cmp
and
sub
mov
sbb
lods
sbb
fstps
cmpsl
outsb
pop
shlb
insb
cld
lea
ret
pop
mov
jmp
push
int
ljmp
xchg
xchg
jne
aam
push
add
add
sub
pushf
xor
inc
xchg
imul
xchg
sbb
or
cmp
push
add
aas
outsb
and
inc
inc
aad
jmp
cltd
les
mov
popa
dec
dec
cmpsb
fisubl
mov
lahf
mov
mov
inc
jae
stos
add
rcll
add
adc
popa
adc
push
pop
pop
jmp
jecxz
lds
cmp
mov
cmp
and
xchg
sub
aad
int3
xchg
out
pop
popf
shl
popf
inc
fidivrl
mov
fstps
call
jle
fsubl
push
cmp
adc
or
push
aam
sub
adc
aam
push
sub
aad
arpl
ds
cmp
push
cli
shlb
popa
mov
sub
or
jl
push
fwait
push
outsb
les
adc
movl
mov
xlat
cltd
jecxz
cwtl
or
xchg
fcompl
in
or
xor
scas
inc
pop
mov
and
fdivrl
adc
or
push
cmpsb
je
inc
adc
push
jge
rclb
aam
fildll
ror
lods
aas
inc
rclb
stc
out
mov
inc
ljmp
cmpsl
mov
xor
sbb
adc
test
lret
rcr
sbb
cmp
mov
enter
in
call
jne
cmp
sub
sarl
ret
sbbb
cmpsb
add
inc
insl
mov
fs
in
add
hlt
fabs
inc
imul
das
int
pop
stos
jg
ret
out
adcl
or
cwtl
pop
out
stc
inc
jbe
dec
pop
mov
and
shrb
out
mov
imul
das
lock
pop
les
sub
inc
dec
xchg
cmp
jl
cmpb
sub
add
push
lods
adc
je
pop
imul
mov
sahf
jne
outsb
or
sub
push
pcmpeqd
insb
mov
hlt
arpl
mov
jmpw
inc
sbb
sub
inc
push
sbb
ljmp
rcr
sahf
daa
cmc
mov
dec
movsb
or
adc
cli
cmp
pop
int
mov
pop
push
lods
scas
xchg
dec
cmp
jb
fldenv
jl
cwtl
add
rcrb
das
xchg
les
pop
aas
lds
out
mov
and
cmc
in
popa
insb
or
stos
mov
and
shr
les
jp
es
stc
leave
mov
outsb
sbbb
mov
test
popf
or
inc
lahf
nop
push
pop
repnz
xchg
jl
scas
test
sub
lret
shr
fimuls
add
pop
cmp
mov
cwtl
or
mov
xor
mov
popf
std
lret
and
mov
push
add
push
icebp
sub
dec
adc
cmp
test
and
loope
bound
cmp
mov
inc
cld
repnz
xchg
or
sbb
in
mov
adc
cmp
jg
je
sahf
adcb
jb
inc
cmc
in
jp
dec
sub
dec
in
dec
fcmovbe
pop
and
jecxz
in
jo
adc
test
jle
mov
jbe
mov
hlt
sub
test
lods
jne
sbb
or
data16
in
lock
in
xor
mov
das
clc
mov
pop
in
sbb
push
fisubrl
fnstsw
adc
mov
fnstcw
jmp
lds
stos
stos
ret
or
leave
dec
push
les
repz
shll
ds
mov
or
pop
mov
mov
sub
sti
add
dec
arpl
mov
mov
roll
cmpsb
mov
jno
sub
and
call
stos
xchg
cs
or
jl
mov
mov
nop
fwait
sub
arpl
ss
test
push
andl
cltd
popa
jmp
inc
push
les
push
jmp
jl
jle
pop
cmp
adc
das
data16
mov
xchg
mov
int
mov
or
pusha
mov
jecxz
roll
imul
or
negl
dec
ffree
jmp
and
dec
and
xor
inc
dec
lcall
std
call
fidivrs
xor
jp
and
push
js
stc
int
enter
scas
xor
rolb
pop
mov
in
lods
in
ffreep
mov
loope
xlat
jne
cmpsl
dec
mov
cmc
adc
cmp
out
and
scas
jp
mov
cmp
rcrb
test
xor
cli
or
flds
aam
cmc
cmpsl
jnp
jp
jns
xor
xor
fcompl
mov
xor
loopne
cltd
outsb
push
leave
and
or
mov
add
push
movsb
or
xchg
filds
repz
jbe
out
int3
nop
pop
mov
cltd
sbb
sarl
in
test
inc
aam
dec
push
add
mov
fisubs
je
inc
sahf
cmp
adc
pusha
dec
test
jmp
add
adc
pop
in
outsl
dec
ss
cmpsl
sbb
mov
aaa
push
movsb
inc
test
or
imul
cli
mov
lea
jo
xchg
mov
ret
cmp
push
cmp
repnz
adc
ja
fildl
ljmp
rolb
cld
xor
sbb
xchg
clc
xchg
xlat
je
test
cmp
push
rcr
push
imul
bound
xchg
add
push
inc
jle
shl
jg
or
fisubrl
sub
out
mov
or
or
sub
pop
xor
sub
sub
subl
dec
mov
mov
lods
pusha
fsubl
test
and
cmp
push
in
fwait
inc
enter
jmp
cmp
jg
adc
pop
mov
data16
cmp
mov
aam
lret
and
cli
pop
sarb
xchg
lcall
cwtl
mov
out
fisubl
push
aad
das
pop
inc
lods
add
cs
movsl
inc
inc
js
pop
lahf
ficoml
inc
jg
rcr
xlat
mov
jbe
incb
pop
lret
imul
ficomps
mov
test
inc
int3
or
cmpsl
and
test
mov
and
adcb
mov
inc
scas
loope
push
xor
jo
push
dec
or
mov
pushf
outsb
or
push
adc
int
test
cld
sahf
adc
add
pop
xor
ffree
cli
subl
enter
es
dec
push
stos
pop
ret
fwait
xor
push
popf
mov
ljmp
rclb
mov
dec
inc
pop
push
cltd
pop
pusha
xchg
mov
lds
jbe
ljmp
iret
and
jg
jno
imul
jg
jecxz
sahf
push
jp
pop
ret
test
scas
or
das
lahf
adc
dec
scas
and
or
push
inc
enter
in
pop
push
das
xor
cltd
out
mov
sbb
sub
idivb
std
pop
add
pop
push
sbb
int
frndint
mov
sub
adc
sub
jl
adc
add
mov
inc
sbb
dec
test
pop
mov
mov
scas
mov
out
sub
iret
and
cli
mov
inc
arpl
nop
mov
outsl
cmpsl
adc
jnp
push
test
push
mov
inc
pop
adc
out
mov
arpl
cwtl
aaa
mov
dec
or
mov
pop
sub
stos
popa
ss
pop
jmp
int
xor
arpl
jno
arpl
jnp
add
inc
push
cmc
xor
jns
mov
sarl
and
jl
stc
sub
test
pop
lods
lcall
adc
jecxz
and
loope
push
fcmovne
xchg
nop
jns
cmpsl
pop
ss
and
aad
cmp
push
mov
into
mov
mov
arpl
shr
adc
stc
dec
mov
fs
jmp
lret
fidivs
loope
mov
mov
inc
and
xchg
popf
mov
call
jae
jno
push
add
mov
aaa
dec
fldt
lret
add
cmp
mov
mov
les
push
sub
cld
pop
in
mov
or
imul
sub
rcrb
mov
lcall
jno
fistps
out
outsl
dec
ret
leave
enter
or
or
enter
jmp
gs
call
sub
shl
and
add
sub
mov
push
cmp
pop
int3
into
sbb
cli
inc
jns
xchg
inc
xchg
fcmovne
shlb
adc
incb
jle
cmc
sub
xchg
loop
cltd
mov
jmp
adc
movsb
leave
fcmovbe
je
popa
mov
pop
loope
sar
call
int3
or
jns
or
repz
pop
add
adc
fs
mov
cs
push
jo
cmp
shlw
mov
mov
push
push
icebp
mov
pop
jae,pn
ljmp
xchg
loope
stc
lds
or
mov
pushf
and
aad
push
jne
repnz
mov
push
adc
sub
lahf
xor
and
sarl
mov
jb
xchg
lcall
cltd
leave
shlb
jge
mov
inc
push
popf
dec
pop
mov
lods
addl
sbb
lahf
or
pmullw
mov
and
push
xchg
and
inc
or
mov
inc
pop
adc
je
ret
ret
movsl
jno
dec
push
jae
push
cltd
in
fildll
repz
decl
mov
jge
aam
cmp
mov
cmp
out
in
imul
and
test
imul
loope
sbb
andb
movsl
pop
jg
lds
sbb
cmp
rclb
sbb
inc
dec
xchg
mov
or
sbb
sbb
inc
adc
lds
dec
jg
fdivs
sub
test
ja
fucomp
mov
cmp
pop
stos
xchg
bnd
jp
imul
push
pop
in
fnstcw
popf
or
fsubr
stc
in
fucom
sub
fwait
dec
shrl
ficoml
mov
js
std
add
push
inc
pop
mov
sub
imul
push
and
sub
test
leave
clc
pop
adc
mov
cmc
jb
aad
mov
push
bound
jle
jae
mov
mov
push
pusha
add
test
mov
aam
jo
adc
mov
pop
std
cmpsl
mov
popf
aam
pop
push
mov
enter
es
fcoml
sub
dec
popa
aad
add
mov
pop
pop
lods
inc
xor
xchg
push
insb
sbb
xchg
shrb
cld
mov
and
or
jnp
sub
adc
xor
cld
test
leave
mov
lods
les
movb
adc
inc
out
dec
and
loop
mov
sub
mov
mov
pop
add
pop
push
pop
adcb
mov
push
cld
adcl
shr
movlhps
jnp
rorb
stos
inc
lock
leave
adc
loope
push
jns
loope
repz
movnti
mov
dec
ret
test
sbb
int
dec
or
jo
out
mov
mov
xchg
mov
xor
push
cs
push
test
dec
xchg
add
ss
cwtl
lds
out
or
std
xchg
lcall
cli
jg
ret
gs
push
rcrl
or
push
sub
divl
xchg
cwtl
sub
mov
inc
cs
cs
out
dec
out
outsb
jmp
push
inc
js
mov
xchg
adc
popf
es
aaa
fistps
push
fsqrt
stos
xchg
mov
sbbb
lret
and
jno
push
aaa
pop
js
mov
pop
xlat
in
das
roll
movsl
test
mov
inc
xchg
repz
pop
bound
pop
int3
cmp
sub
je
rcrb
sar
loopne
sbb
outsl
mov
push
fidivl
adcb
add
loopne
adc
dec
jbe
jb
jns
mov
stos
into
ja
fisubs
outsb
popf
outsl
popf
loopne
or
sbb
rolb
js
jecxz
xor
xor
jle
push
pop
dec
addl
popa
jno
add
insb
out
imul
mov
add
sbb
inc
cmovge
outsb
adc
arpl
mov
mov
data16
pop
adc
fwait
lock
bound
mov
push
sbb
jmp
mov
dec
sub
fs
cli
mov
out
iret
insb
jnp
pop
and
sub
dec
mov
inc
cmpsb
int3
mov
xchg
testb
sbb
push
or
ret
cmp
adc
adc
sbb
inc
test
inc
jl
pop
out
ss
fwait
pusha
push
cli
pop
std
out
sub
or
js
xchg
outsb
adc
addr16
ljmp
jl
push
xorl
dec
xchg
mov
inc
clc
adc
jp
mov
outsb
insb
cmp
xrelease
fsubrl
imul
repz
int3
sahf
xchg
xorl
int
lods
or
add
sub
pusha
aad
push
or
sbb
test
daa
push
jmp
leave
mov
out
es
outsl
cmpsb
adc
mov
lret
push
dec
push
andl
lods
js
lds
iret
pop
imul
stos
push
lahf
repz
inc
mov
es
stos
push
out
outsb
cmp
data16
mov
ss
or
sti
mov
jge
imul
mov
dec
std
dec
fwait
mov
je
push
and
inc
dec
cmc
mov
andl
movsb
jge
out
xchg
leave
addr16
inc
fistl
jb
push
push
cltd
sti
imul
test
pop
call
jg
inc
ljmp
push
mull
sub
xchg
and
sub
sti
scas
bound
aaa
ja
inc
or
pop
nop
push
ret
xchg
imul
ljmp
push
stos
mov
push
jl
dec
jne
shrb
adc
xor
sbb
arpl
fadds
push
jmp
inc
jne
jne
jg
rclb
adc
and
push
jmp
xchg
movb
js
js
xchg
cmp
insb
mov
dec
arpl
xchg
xor
adc
mov
test
mov
dec
dec
cld
mov
pop
pop
out
dec
adc
cmpsb
or
notl
ja
arpl
dec
push
sbb
inc
inc
test
loop
jp
jecxz
and
inc
nop
xchg
cmp
call
outsb
xchg
cmpsl
pop
push
movsb
ss
xor
mov
add
jb
inc
aas
jg
arpl
lea
inc
and
inc
dec
xchg
mov
inc
xor
pop
repz
add
iret
cld
pushf
pop
or
outsl
daa
push
ret
into
push
sub
push
lock
dec
fiadds
test
adc
lods
and
lahf
sahf
cmp
jecxz
mov
adc
lret
fisttpll
sbb
jns
push
dec
dec
push
pop
sahf
rcll
sti
data16
xchg
adc
fstpl
mov
addr16
jmp
lret
aas
scas
adc
cld
push
repz
mov
and
pop
mov
out
rorl
icebp
in
add
jl
inc
inc
rcrl
notb
add
in
stos
lock
inc
jl
inc
dec
or
mov
and
pop
and
jg
mov
mov
inc
pop
pusha
mov
sahf
jmp
jl
fiadds
xchg
ja
sub
stos
fcomi
imul
adc
sbb
insl
loope
cmp
pop
pop
sahf
pop
leave
or
ficomps
or
push
and
rcrl
add
xor
xor
orb
sub
lock
ja
out
xor
pop
mov
mov
adc
sub
insl
cmp
xlat
push
push
dec
data16
pop
test
mov
add
sub
test
out
hlt
xor
repnz
fsubs
push
int
mov
fxch
cmpsb
lahf
push
fidivs
sub
fidivrl
aam
in
jmp
add
and
mov
cwtl
js
fwait
es
stos
dec
mov
stc
les
je
pop
ss
aas
ret
rorl
sub
push
outsl
pop
pop
cli
sub
out
adc
jp
dec
mov
movsl
and
cmpsl
loop
push
xlat
jge
or
inc
test
push
mov
push
mov
lock
or
lods
fwait
mov
mov
sbb
movsl
mov
push
mov
or
cmpsl
pop
lock
cmp
and
jmp
inc
dec
pop
or
mov
jg
in
out
xchg
fisttpll
jle
cs
aam
stc
push
jo
jl
cmpsl
pop
inc
xchg
sahf
es
imul
add
ljmp
adc
outsb
add
rcr
add
cmc
cmc
mov
xchg
pop
insl
ss
orl
pop
xlat
sbb
mov
in
mov
daa
popf
push
and
scas
icebp
jmp
rorb
cs
int3
xchg
lods
sbb
lea
daa
dec
pop
inc
push
mulb
push
sbb
aam
xor
mov
jle
cmp
push
and
enter
jge
add
xchg
dec
inc
pop
fidivrl
push
pop
pop
hlt
cmp
loop
dec
stc
cmc
adcl
dec
shll
stc
data16
pop
clc
mov
mov
adc
data16
lea
mov
mov
into
and
inc
or
outsb
shlb
mov
and
push
pop
dec
cmp
or
inc
pop
test
mov
stos
das
sub
jp
sbb
xor
pusha
pop
fisttpl
shrb
cmp
pop
cs
xor
mov
cs
int
push
aas
cmp
test
mov
pusha
push
push
int
adc
test
out
mov
gs
shl
shlb
test
add
xchg
out
inc
mov
pop
xchg
rcll
gs
testb
stc
std
inc
mov
xcrypt-ofb
cmpsl
sub
sbb
pop
pop
or
jne
imul
dec
ljmp
or
gs
mov
xor
pop
mov
mov
scas
mov
ret
imul
sbb
jne
lods
in
aad
or
and
push
cvtdq2ps
adc
xchg
fimull
fwait
or
or
push
and
std
inc
push
inc
push
jae
stc
add
mov
or
lods
dec
and
sub
movsb
js
and
sarb
xor
pandn
cmpsl
mov
insb
movb
js
fcomps
out
dec
out
mov
xchg
sbb
xchg
ret
dec
push
repz
ljmp
mov
adc
xlat
or
cmc
mov
push
push
push
push
or
stos
xor
out
mov
cmpsb
jne
add
add
mov
das
sub
fs
and
fcmovu
movsb
nop
test
pop
add
sahf
shll
insl
and
cmp
dec
in
outsb
mov
add
inc
fadd
lret
test
and
pop
or
push
and
lds
rclb
dec
cmp
pop
into
mov
add
roll
mov
push
stos
sbb
mov
mov
ja
shrb
push
imul
dec
inc
stc
out
mov
add
xchg
pop
fwait
or
jle
mov
and
xchg
ljmp
pop
push
xchg
push
mov
pop
shl
ljmp
xor
add
loop
imul
sub
nop
and
int
jb
mov
lods
out
dec
add
fsubrl
adc
cmpsl
sbb
repz
ljmp
in
jg
adc
lahf
sbb
pop
cltd
or
mov
cmp
js
loop
cmpsb
mov
cmpsb
ss
lcall
sahf
ret
push
add
shrb
int3
cmp
mov
std
test
xchg
push
pushf
jb
mov
mov
push
xor
or
mov
dec
inc
add
iret
into
and
push
jecxz
ds
add
scas
cmp
mov
je
sub
imul
pop
and
and
xchg
aad
mov
push
dec
mov
mov
repnz
test
cmp
loop
adc
pop
sub
rcl
mov
popfw
int
pop
dec
pop
xchg
add
in
sti
cmpsb
adc
fsts
adc
xor
mov
push
dec
outsb
mov
pusha
add
dec
add
loope
adc
out
cmp
mov
iret
ror
das
inc
xor
inc
mov
sub
lock
add
push
jo
cltd
adc
jle
ljmp
inc
add
aam
xor
fdecstp
mov
dec
lods
and
and
or
cmpsl
in
cmpsb
ret
test
or
jle
cmp
jne
fwait
cmp
sub
or
pop
adc
movsl
push
js
jb
sarb
mov
shl
into
daa
sbb
or
xor
lods
stos
bound
jmp
scas
jbe
popf
mov
xor
sar
jne
push
ljmp
aad
dec
xor
in
jg
loop,pn
sahf
fadd
sub
fsts
dec
jmp
adc
adc
in
push
adc
jns
cwtl
cmc
cmp
pop
lahf
fdivl
roll
lcall
jmp
aas
mov
aad
stc
fstpt
fwait
les
sub
in
ja
push
aam
rcrl
push
jl
dec
mov
loopne
jno
aad
pop
xchg
shrl
jmp
fwait
lea
sahf
loopne
adcl
xor
js
xchg
sub
push
rorl
dec
adc
sbb
add
mov
sahf
cmp
xor
movsb
sub
fs
cld
mov
test
lahf
outsb
mov
rorb
mov
icebp
in
adc
shr
or
fsts
lcall
pop
push
xchg
xchg
jb
mov
jo
mov
dec
inc
popa
mov
in
cmc
cld
and
mov
test
jmp
dec
push
out
filds
aas
mov
or
inc
jmp
mov
shll
cmp
lods
add
aam
or
jmp
aam
iret
mov
test
add
test
xor
imul
shrl
into
add
mov
cmp
dec
sti
inc
push
lock
xor
pop
addr16
inc
xchg
dec
aad
mov
or
insb
push
popf
push
pop
dec
sti
pop
bound
push
push
pop
xor
sti
add
les
jl
call
fisubl
aad
daa
stc
pop
pop
mov
jl
test
add
add
rorl
leave
fs
dec
and
mov
imul
fs
call
movsb
je
xor
scas
xor
loop
incb
pop
repnz
js
mov
fdivrp
fisubrl
ljmp
fisubl
add
sub
mov
xchg
xchg
push
pop
adc
sub
data16
fisubrs
jnp
mov
call
decb
pop
rol
call
push
jge
int
shrl
and
cltd
or
addl
xchg
add
inc
jne
int
and
xchg
mov
dec
in
iret
pop
ljmp
cmc
lock
popf
pop
cmpl
inc
cmovg
mov
cltd
daa
mov
jne
pusha
fwait
mov
inc
sbb
mov
pop
dec
out
pushf
fucomp
stos
inc
test
lret
jecxz
push
mov
cmp
push
in
mov
mov
test
sub
or
call
and
int
jl
sarb
test
clc
imul
sbb
push
les
mov
gs
in
shlb
jbe
mov
movsb
outsb
pop
inc
inc
shl
aas
outsl
and
aam
dec
sub
testb
insl
mov
mov
xor
loope
sbb
stos
scas
inc
ret
xchg
aad
scas
test
leave
dec
push
jne
pop
rclb
and
negb
mov
js
stc
adc
or
mov
and
jmp
mov
xchg
ret
adc
sbb
mov
cwtl
jno
jmp
test
sarb
sbb
push
outsl
lods
mull
adc
jns
loopne
xchg
or
xor
iret
xor
add
nop
rcl
sahf
outsl
cmp
ret
sbb
rorb
insb
andb
cmp
xchg
imul
lock
in
pop
pop
std
mov
mov
shrl
push
xchg
xchg
lock
xchg
dec
subl
push
in
gs
adc
in
sub
sti
sahf
popa
and
cs
dec
mov
adc
jge
sub
mov
sbb
call
lock
xor
mov
mov
lds
xchg
pop
xchg
jne
cltd
insl
push
cmpsb
mov
fs
ror
cmp
jns
xchg
fldenv
pop
outsb
mov
faddl
or
out
movl
call
xorb
bts
or
imul
lahf
sbb
adc
pop
iret
jnp
jne
repz
jae
mov
sbbb
mov
pop
cmpsl
inc
and
out
pop
out
lods
mov
enter
jae
pushf
test
xchg
insl
inc
daa
pcmpgtb
lods
test
test
stos
aad
addr16
outsl
mov
mov
sub
ret
aad
aad
filds
stc
jmp
shrb
cli
stc
sbb
mov
imul
lock
cmpsl
sbb
cld
ljmp
push
nop
dec
adc
mov
shrb
cwtl
jne
inc
int
mov
mov
cltd
out
lahf
aam
mov
ljmp
lret
es
test
in
fisubs
sub
or
mov
sub
xor
inc
out
push
mov
ljmp
ljmp
cs
xchg
int3
addr16
pop
cmp
xchg
pop
push
neg
lds
add
or
jl
add
int3
adc
push
ds
jo
or
lcall
test
cmp
mov
in
js
in
dec
add
pushf
out
arpl
in
sbb
jp
jo
je
mov
push
inc
cmp
xchg
je
in
iret
xchg
mov
xor
add
addr16
lods
fs
cmpl
repnz
mov
sbb
mov
xchg
sub
fbld
inc
pop
mov
xor
stos
pop
xchg
lret
call
xorl
cmp
ficoml
cmp
fistpl
lahf
test
inc
ficompl
push
add
add
cmpb
mov
icebp
mov
pop
dec
clc
int3
jno
in
xchg
pop
cld
iret
mov
sbb
ljmp
dec
xchg
out
je
pop
xchg
mov
dec
ret
jmp
cmpl
clc
or
adc
movsl
pop
pop
divl
add
ljmp
fbld
in
jb
pop
test
push
sbb
incb
push
xchg
movl
rcrb
ja
add
mov
popa
sub
stos
and
je
clc
jp
xor
add
imul
jae
add
clc
pop
mov
outsl
sub
pop
stos
xchg
or
jp
addr16
out
imul
xorl
out
mov
insl
and
mov
xor
mov
mov
sub
xchg
add
or
sbb
xor
cwtl
mov
jmp
mov
clc
cltd
aaa
push
loopne
jmp
popf
xor
push
sub
xchg
jno
pop
mov
ret
inc
or
and
ret
jo
je
cmc
xor
adc
and
es
mov
incl
stc
negl
movsl
adc
popa
nop
add
ja
xchg
js
test
iret
mov
sbb
int3
shr
loopne
cld
or
test
aad
add
hlt
push
xlat
ret
cmp
mov
adc
adc
sti
daa
adc
xor
lret
mov
hlt
pop
push
flds
xchg
or
addr16
pushf
or
or
out
mov
xor
call
add
jg
jg
test
or
repnz
iret
stos
mov
jmp
xchg
int3
xchg
fdivs
arpl
loope
out
movsb
pop
xor
push
mov
jp
leave
pop
ret
aad
lods
stos
mull
pop
jb
pmulhuw
mov
add
rorl
xchg
and
testb
push
mov
fisttpl
mov
sub
mov
cmpsb
mul
fdivl
lds
jp
pop
cwtl
fdivrl
cmpsb
pop
stc
mov
fimull
and
mov
inc
mov
lea
imul
repnz
aas
dec
fisubrs
imul
repnz
mov
lret
inc
cmp
bound
inc
aas
or
fisubrl
mov
or
lea
cltd
rcrb
inc
jge
lock
outsb
rcrb
mov
scas
add
inc
xchg
and
je
xor
rclb
adc
pop
addr16
pop
xlat
fildll
cmpl
adc
xlat
cmp
add
std
mov
adc
cwtl
test
rclb
push
in
mov
push
cmp
cmp
stc
cmc
loope
testl
rorl
jno
ret
sbb
pop
jmp
xchg
push
popf
stc
jg
lcall
jbe
dec
fcmovne
sub
xchg
xchg
xchg
add
stc
lds
arpl
push
inc
push
xor
sbb
mov
lcall
stos
adc
mov
xor
inc
sbb
lds
or
or
push
inc
call
mov
rclb
js
loop
leave
movsl
sbb
imul
mov
cmp
aam
pop
cmp
dec
adc
mov
inc
fldenv
cli
test
ret
inc
iret
aaa
push
or
sti
inc
dec
data16
imul
aas
call
dec
add
imul
push
push
inc
pop
cmp
pop
inc
insl
jp
pop
push
xorb
filds
aaa
xorl
insb
push
and
or
sub
adc
inc
mov
or
mov
rcl
pop
push
inc
mov
insl
mov
adcl
mov
cmp
test
mov
and
and
out
addb
lock
sub
jae
sub
xchg
mov
test
mov
mov
mov
cmp
ds
pop
fldz
nop
insb
push
or
icebp
xorb
lock
add
cmp
loope
das
inc
test
mov
add
movsb
sbb
jne
pop
nop
xor
nop
loope
xchg
out
mov
mov
mov
lds
mov
insl
and
and
dec
mov
and
movsb
fcomp
push
mov
aam
sbb
sbb
jno
jle
cmpsl
sbb
movsb
pop
mov
icebp
or
ja
fnsave
aaa
dec
adc
inc
mov
ret
xor
mov
sbb
fsts
mov
pop
into
pop
adc
loop
in
std
mov
mov
or
pop
adc
push
and
mov
sbb
decl
mov
or
insl
sbb
pop
dec
ja
addr16
mov
pop
lock
xor
sub
or
adc
cmc
lods
daa
call
mov
and
sbb
xchg
lret
jo
pop
loop
cmc
dec
push
push
push
cld
xor
test
ja
mov
xor
into
mov
jp
ljmp
stc
mov
pop
mov
in
setg
mov
arpl
lea
pop
sti
add
inc
mov
aaa
in
cmovo
jp
mov
movsb
je
loopne
pop
adc
fidivl
lods
insb
pop
das
sub
mov
mov
xchg
sub
xchg
xor
mov
inc
mov
fisttpl
movsl
mov
shrb
addr16
jmp
mov
inc
aad
dec
xchg
cmpsb
ja
lcall
jmp
in
hlt
daa
mov
xlat
pop
mov
push
test
mov
cli
ljmp
xchg
cld
dec
jno,pt
or
cld
dec
mov
je
fstpl
or
sbb
add
ror
out
dec
pop
in
inc
out
mov
mov
inc
mov
cmp
adc
cltd
mov
mov
cmc
lcall
cltd
push
mov
add
dec
sbb
idiv
sbb
test
leave
xorb
push
pop
sti
daa
test
adc
adc
push
add
push
add
cltd
outsl
bound
pop
in
mov
cld
mov
cmp
lods
int3
push
adc
mov
pop
mov
push
pushf
ja
xchg
fstl
insl
and
movsb
or
cmp
pushf
jns
clc
push
sub
or
pop
sbb
xchg
mov
mov
pop
jl
adc
and
pop
imull
lea
inc
dec
movsl
andl
mov
orb
cli
mov
fdivrs
test
out
rolb
outsl
push
ljmp
out
addb
cld
mov
aam
push
sbbl
and
mov
mov
jmp
fs
movsl
push
mov
std
popa
pop
dec
rcrb
add
testl
mov
lock
ret
aad
xor
mov
out
daa
add
shll
xchg
cmp
cld
insb
xchg
outsb
dec
add
add
sbb
divl
lcall
adc
and
les
mov
repnz
jbe
dec
clc
inc
orb
fisttpl
adc
das
pop
xor
pop
mov
pop
call
outsb
gs
or
jp
fcoml
dec
sbb
dec
out
fdivl
adc
rorl
pop
pop
cltd
lds
xor
aad
inc
xchg
das
ret
mov
rcll
xchg
inc
xchg
test
addr16
addr16
mov
jbe
sbb
movsb
imul
xchg
pop
loop
pop
xor
jp
cmp
pshufw
mov
push
in
add
jp
mov
mov
int
and
ds
adc
int
dec
pop
leave
jmp
mov
xor
inc
and
mov
inc
xchg
jbe
mov
and
loopne
push
pop
pop
lds
lcall
das
or
mov
add
dec
loope
mov
sbb
std
pop
pop
dec
inc
aaa
test
dec
or
xchg
xor
arpl
sbb
rorl
imul
pusha
mull
sub
xor
jecxz
mov
pop
fucom
arpl
data16
add
shr
mov
mov
fimull
inc
js
jns
out
shll
in
in
mov
push
add
pop
mov
fidivrs
rolb
leave
frstor
pop
movsl
pusha
jne
loopne
iret
jo
jnp
add
mov
fneni(8087
repz
pop
pop
cld
int
xchg
in
aad
pop
add
sbb
mov
cmp
push
push
jb
lea
mov
sbb
push
loop
repz
rcrb
add
jp
pop
pop
repz
inc
data16
jmp
cmc
out
lea
ja
std
or
sbb
xchg
and
push
test
cld
int
jecxz
jae
jl
ret
in
aad
orb
test
lock
mov
dec
out
es
push
sahf
imul
outsl
int
sbb
sub
mov
shlb
xor
movsb
jne
and
stos
in
fcomps
sti
and
jno
movsl
ja
inc
sbb
inc
imul
add
sub
lcall
xchg
jp
lahf
inc
rcl
outsl
lds
fwait
xor
xchg
adc
lods
ljmp
jle
mov
aam
or
adc
daa
adc
testl
adc
adcl
jecxz
mov
mov
xchg
fcomi
inc
push
push
mov
adc
mov
daa
rolb
or
das
jo
out
jno
mov
push
out
sbb
pop
roll
test
into
pushf
fnstenv
gs
out
adc
int3
rol
and
pop
incl
mov
jmp
inc
sbb
push
cli
mov
and
xchg
and
icebp
aam
decb
cmp
dec
ss
addr16
and
jns
xchg
imul
ret
iret
and
out
pushf
lock
sti
push
xchg
ficoms
dec
fucomi
sub
mulb
jb
movsb
mov
sarb
fnstsw
outsl
mov
addl
push
out
in
ror
dec
test
lea
or
pop
pop
xor
movsb
push
cmpsb
shr
push
push
add
inc
jb
out
mulb
fldenv
push
mov
mov
dec
std
sbb
ret
dec
imul
outsl
cwtl
cwtl
ljmp
repnz
mov
cltd
imul
cs
xchg
fcoms
xor
cmp
enter
sub
add
lods
dec
pop
xchg
imul
daa
lods
dec
cmc
fwait
inc
push
fcmove
stos
xchg
dec
cmp
addr16
sub
in
cmp
mov
sbb
scas
rolb
inc
inc
loope
mov
dec
sbb
orl
mov
dec
inc
les
or
fisttpll
repz
dec
mov
push
iret
push
stos
int
mov
add
or
xlat
dec
mov
mov
xchg
adc
ljmp
stos
cltd
mov
or
jns
xchg
dec
cwtl
add
lcall
insl
cmp
pusha
into
dec
andb
xor
dec
arpl
jo
dec
sub
mov
jbe
push
push
cwtl
cld
cmpsb
ret
xor
aad
leave
cmp
les
mov
push
addr16
scas
and
daa
pop
pop
leave
mov
vcvtdq2pd
mov
add
subl
lret
sub
push
int3
jmp
dec
dec
mov
rcll
adc
xchg
inc
push
push
scas
cli
mov
xchg
incl
add
and
call
pusha
fwait
enter
jae
bound
jno
lret
lods
aad
mull
mov
mov
in
pop
dec
pusha
cmc
ret
mov
xchg
sub
or
xor
jns
daa
lock
rorb
les
push
je
lods
rorb
adc
stos
imul
js
dec
xor
dec
mov
imul
lds
hlt
dec
adc
outsl
lock
out
andb
adc
xchg
movsb
ds
lret
pusha
jp
shlb
sub
jecxz
out
scas
repz
xchg
stc
adc
xchg
out
mov
pusha
jno
sti
push
sub
dec
dec
rorl
push
lods
fsts
sbbb
and
or
jg
pop
xchg
mov
scas
mov
push
outsl
in
add
shrl
test
fsubrs
imul
cmp
shl
jns
cmp
imulb
test
in
popf
sbb
cmp
iret
jmp
lods
enter
in
ss
in
add
shll
mov
bnd
out
clc
leave
dec
jp
sbb
push
lods
mov
test
jge
jae
and
jmp
mov
mov
pushf
fidivs
cli
movsl
pop
mov
mov
ret
mov
inc
mov
jb
orb
out
or
mov
pop
leave
insb
mov
or
mov
xor
outsb
jbe
sbb
adcl
dec
nop
fisttps
xchg
out
or
rcrl
out
jl
push
std
adc
xchg
jp
out
inc
mov
sbb
loop
lahf
dec
or
push
fistpl
sub
sbb
test
xchg
dec
fsubr
push
test
mov
mov
aad
cltd
fwait
pusha
pop
dec
shrb
aad
test
mov
in
or
pop
mov
outsl
pop
je
push
imul
add
sbb
add
mov
add
inc
stc
jns
iret
rol
loop
add
mov
stos
xchg
dec
imul
aaa
pop
push
popa
jbe
adcl
xchg
daa
test
xchg
jnp
or
dec
mov
call
fs
mov
lds
test
sbbb
je
pop
outsb
or
adc
shll
inc
out
ljmp
cmpsb
pushf
repz
inc
cli
mov
push
dec
jns
and
dec
mov
popa
push
addr16
add
push
sub
arpl
mov
xchg
popl
lret
ds
pop
cmp
cmp
sub
stos
cmp
stc
dec
xchg
add
sub
pop
push
dec
sbb
sub
aam
gs
inc
out
mov
test
gs
stos
push
into
cmp
mov
adc
subl
iret
jnp
cld
enter
jae
push
mov
scas
xchg
out
pop
into
mov
cmpsb
shrb
shrb
push
xor
lcall
cmpsl
insb
push
mov
js
and
and
pop
jbe
sub
shll
js
inc
mov
leave
fsubrs
jmp
push
sti
cmp
bound
mov
sbbl
inc
out
jle
ret
xlat
adc
jnp
stc
push
xchg
and
xor
bound
rcl
inc
and
ficompl
adc
jmp
je
and
fsubs
push
mov
aad
xor
aaa
xchg
mov
hlt
lret
jns
imul
mov
xlat
cmpb
cld
fwait
push
cmc
outsl
sbb
cltd
pop
arpl
sarb
lret
cmp
mov
sub
mov
xor
sbb
mov
es
inc
aas
lock
push
lods
or
sub
dec
jbe
xor
sub
inc
aad
stc
push
insl
shl
notl
jle
clc
xchg
xchg
cmc
dec
lcall
outsl
fs
scas
mov
sbb
out
sub
sbb
pop
stos
jge
xchg
mov
cmp
and
push
das
jne
fs
dec
sbb
shrb
cmp
out
lret
or
mov
mov
pop
adc
shlb
fiaddl
inc
adc
push
and
xchg
add
jmp
ficoms
mov
inc
jecxz
insl
jns
push
outsb
mov
pop
outsb
mov
pop
adc
fneni(8087
pop
mov
dec
int
and
insl
cmpl
int3
inc
fwait
call
xchg
lods
sbb
lock
inc
mov
lea
ss
mov
cmp
loope
cltd
sbb
xchg
in
inc
jg
sub
in
cmpl
in
enter
outsb
xlat
adc
lods
cld
test
add
cmp
sub
mov
cmp
sub
hlt
inc
mov
out
mov
and
sub
push
ljmp
int
xchg
dec
sbb
sbb
add
aaa
insb
cld
stc
aam
in
xchg
imul
test
ljmp
fisubs
daa
test
nop
sbb
adc
cmp
pushf
cmpsb
daa
pop
divl
dec
cmp
add
hlt
sub
mov
mov
mov
cmpsb
jle
xchg
sbb
in
std
xor
leave
jmp
jp
repz
hlt
test
push
out
pop
mov
jle
fstl
mov
xlat
nop
push
push
sub
fistpl
xchg
cmp
out
inc
insb
mov
cld
inc
cmpb
out
cwtl
les
xor
dec
jne
cmp
push
std
aad
fsubrs
xchg
add
test
adc
aaa
push
pop
rolb
sbb
outsb
stos
push
xor
sub
and
mov
inc
mov
lods
daa
fists
and
dec
pop
push
insl
mov
das
in
xchg
pop
imul
fnstenv
xchg
and
cvtpi2ps
push
mov
lods
jg
push
mov
inc
shl
in
insb
nop
stos
pushf
xor
into
mov
pop
inc
push
roll
fucom
cmp
lods
jl
push
dec
mov
mov
cltd
xchg
in
insb
adc
sbb
mov
mov
lea
mov
adc
ret
pop
jnp
ljmp
mov
ffreep
xchg
cli
xor
sahf
adc
cmpsb
jnp
pop
inc
popa
or
jle
lea
push
aam
stos
jae
or
movsb
andb
scas
cld
test
test
idivb
int3
gs
xor
jl
xchg
add
push
ja
imul
pushf
add
sbb
arpl
jns
xchg
cmc
dec
sbb
nop
loope
imul
psubq
in
test
lods
xchg
push
push
loope
xchg
sub
pop
inc
arpl
fnstenv
cmp
adc
ficoml
jmp
call
imul
xchg
cmpsb
and
sti
vpcomb
cmpsl
mov
into
js
cmp
imul
cmp
jno
dec
aaa
jmp
mov
popf
mov
push
pop
ja
int3
lock
mov
and
ficomps
movsl
mov
xor
and
fcoms
cmp
cmp
rolb
data16
jge
cmc
andb
pop
ja
into
sub
mov
mov
jns
xor
pushf
mov
lods
int3
not
aad
ja
adc
mov
mov
into
jae
pop
fwait
clc
push
and
cld
sahf
jge
adc
add
xchg
xor
scas
int
cmp
inc
add
jae
jb
xor
daa
xor
in
push
outsb
cli
sti
mov
mov
dec
sub
sub
jne
into
out
pushf
stc
outsb
iret
cmpsb
or
inc
sub
mov
or
test
ja
and
mov
add
fbld
enter
mov
xchg
mov
fwait
stos
sarl
ficomps
shll
pop
fwait
repnz
mov
jmp
es
xchg
xchg
xor
adc
jns
inc
pop
dec
adc
dec
enter
lods
jmp
mov
loope
push
push
or
ds
sbb
push
jbe
mov
arpl
or
mov
lret
scas
stc
dec
dec
jne
xchg
xchg
pusha
int
popf
insb
lcall
inc
jl
int
enter
popa
push
scas
movsb
xchg
pop
mov
or
fsts
cmp
das
pop
sub
inc
stc
ror
push
stos
les
mov
and
lods
ljmp
or
cmp
dec
mov
gs
imul
jl
inc
fs
insl
shll
int
adc
jmp
pop
sbb
and
int3
add
jle
jmp
popa
in
stos
es
push
outsb
loop
dec
mov
jecxz
cli
or
or
jae
dec
cmp
mov
cs
shl
lds
int3
repnz
add
add
movsb
xor
lods
adc
repnz
sub
mov
mul
lds
mov
test
jg
imul
loope
inc
mov
inc
adc
test
mov
and
add
mov
cmp
dec
int3
mov
or
ja
or
pop
push
fidivrs
in
adc
push
push
mov
sub
fisttpl
cmp
push
jp
inc
repnz
push
sbb
add
jge
push
xchg
test
int
cmp
pop
sbb
cmp
adc
push
test
icebp
js
add
cli
adc
inc
inc
addb
mov
cmpsl
adc
push
pop
in
fdivl
cs
subl
push
arpl
shrl
xchg
sub
dec
or
push
pop
xor
pop
mov
test
jnp
jbe
fimuls
mov
sub
push
inc
add
iret
je
add
aaa
mov
xchg
scas
push
in
jne
cltd
push
pop
xchg
pop
jae
push
out
aaa
push
aas
out
dec
data16
push
std
sti
loop
cmp
pop
pushf
jge
mov
cmpb
xlat
or
and
or
sbb
js
in
test
int3
insb
loop
push
add
mul
mov
push
test
cmp
sbb
xor
adc
dec
dec
lea
mov
mov
sbb
scas
adc
sti
repz
jecxz
sbb
fcompl
and
mov
lock
inc
dec
or
rol
call
sbb
xchg
mov
sbb
jl
scas
sbb
aas
and
inc
lahf
lods
je
jge
pop
sub
sarb
add
lcall
jmp
pop
pop
sub
sbb
mov
sbb
ljmp
cmpsl
dec
outsb
stc
enter
adc
dec
aam
outsl
pop
xchg
sahf
andl
mov
loope
adc
fsts
cs
loopne
pushf
fwait
test
jp
inc
mov
popl
sub
orl
fidivrs
dec
sbb
mov
in
mov
xchg
inc
add
dec
imul
mov
lds
mov
dec
popa
enter
mov
add
cmp
mov
sbb
jno
shr
dec
es
jecxz
es
fsubrs
mov
sbb
xor
ds
and
adc
out
cmp
xchg
fwait
ljmp
push
pop
cmp
pop
dec
int
xchg
mov
in
pop
int3
fldl
lret
ror
testb
rcrb
inc
inc
push
pop
pop
mov
lock
jmp
rcll
aaa
push
stos
add
in
mov
xlat
mov
rorl
out
dec
dec
jne
iret
leave
jb
sbb
cwtl
mov
addr16
enter
cmp
cmp
arpl
mov
lds
inc
push
es
xor
cmpb
in
mov
pop
xchg
or
dec
es
dec
incb
push
cmc
cmp
jmp
rcll
xlat
nop
aas
stos
fisubrs
jp
sub
jg
sbb
fisubrl
add
inc
addr16
mov
sub
add
push
jb
jl
scas
mov
data16
popf
adc
test
flds
sub
fiadds
sbb
in
outsl
mov
daa
mov
nopl
jne
dec
stos
hlt
inc
sbb
in
cmp
mov
sub
mov
cmpsl
xchg
or
mov
add
xor
movsl
and
arpl
or
rcrb
push
insl
push
pop
arpl
sahf
mov
mov
sbb
inc
scas
xor
mov
or
cltd
jne
xor
dec
sbb
loope
mov
cld
push
lods
rcll
and
aaa
in
inc
pop
lea
ja
mov
cltd
fisttpll
aam
out
push
nop
rcr
jl
xchg
cmp
scas
or
xchg
pusha
call
mov
push
sub
lods
mov
pushf
loop
mov
js
negb
jmp
mov
int
cmovnp
pushf
cmp
mov
test
or
ds
mov
loope
int3
jge
addl
stc
out
in
aam
repnz
sub
cmpsl
mov
js
jle
lret
jo
mov
mov
or
mov
xor
ret
aaa
movsl
cmpsl
mov
cmp
inc
jno
idiv
mov
call
xchg
mov
out
push
push
aaa
mov
push
bound
repnz
ss
and
mov
fdivs
repnz
dec
cmp
dec
mov
push
fildll
inc
outsb
jle
jbe
jmp
loop
and
cmp
cltd
adc
jecxz
orps
pop
dec
add
inc
fidivrs
cli
mov
dec
lea
jl
inc
mov
jne
jge
lcall
pop
ret
arpl
scas
in
lahf
inc
incb
bound
mov
popa
out
mov
rcl
adc
fstpt
or
ret
aam
out
jno
out
adc
push
xchg
rcll
mov
iret
enter
dec
mov
fsub
or
into
inc
mov
test
inc
lods
mov
repz
aam
cld
xchg
imul
adc
xchg
xor
jb
adc
imul
mov
notb
fwait
sahf
lea
scas
aaa
fldpi
imul
popa
push
inc
clc
xchg
jecxz
push
std
cmpsl
and
cmp
and
lods
adc
cltd
test
cmp
scas
mov
int3
outsl
mov
sub
push
mov
and
xchg
inc
es
xor
lcall
cmpsl
fcoms
pushf
pop
pop
loope,pt
pop
adc
cwtl
in
dec
std
js
xor
dec
inc
xchg
jge
xor
test
add
and
or
cli
es
and
leave
fcmovu
data16
or
xchg
dec
mov
cmp
jbe
or
shrb
mov
and
sub
divb
sbb
jb
lods
lahf
out
mov
addl
dec
pop
js
and
aad
dec
inc
pop
into
repz
cwtl
sub
and
scas
jnp
dec
cmc
dec
repz
aaa
add
out
arpl
mov
outsb
pop
das
inc
cwtl
call
sub
xchg
sbb
mov
lock
xor
adc
insl
mov
jl
adc
pop
jg
movsl
jb
aaa
sahf
mov
mov
cmp
inc
xor
cs
and
loope
loop
dec
mov
push
jnp
jp
pusha
popa
or
xor
cmpb
mov
push
jne
sbb
test
or
mov
push
out
jmp
rclb
xchg
mov
negl
pop
xor
add
inc
pop
fidivrs
xchg
jne
stos
aad
and
shll
adc
out
cmpsl
xor
inc
gs
dec
push
cwtl
stos
push
jecxz
in
std
adc
mov
scas
addr16
repz
ret
loop
lcall
mov
jb
loop
mov
pop
setbe
add
cmpsb
lods
test
into
xchg
ljmp
or
pusha
mov
sub
and
sbb
pop
sbb
sahf
clc
xchg
mov
jne
mov
xchg
push
xchg
mov
stos
and
adc
mov
dec
xor
pop
mov
in
push
mov
pop
jns
dec
push
dec
add
dec
insb
mov
cmp
outsb
dec
sbb
lret
inc
sub
jge
and
mov
daa
in
les
bound
sbb
sub
inc
jle
fiadds
or
in
sub
push
loop
mov
ror
mov
aas
xor
dec
push
push
test
adc
mov
push
mov
testl
rcll
xchg
fisubrl
repnz
pop
add
ljmp
mov
xor
aad
push
js
mov
stc
xchg
stos
push
and
xor
mov
inc
iret
enter
out
decl
add
adc
sub
or
fidivs
shlb
shll
fsts
iret
mov
mov
pusha
mov
and
pop
inc
mov
push
and
mov
loope
adc
int3
cmp
lods
stc
sbb
lret
xchg
mov
dec
push
test
sbb
in
sbb
fmuls
xchg
orb
cmp
xchg
xchg
sub
sub
add
insl
xchg
in
lcall
inc
movsl
and
into
mov
adc
xchg
rcrb
fucomip
mov
pop
lcall
xchg
mov
jnp
lock
ja
ret
cltd
mov
repnz
cmp
add
xor
int
enter
enter
aaa
dec
in
in
push
dec
add
pop
repz
pop
inc
jl
sub
sub
and
ss
inc
jnp
cmp
mov
pop
stc
outsb
cwtl
outsl
mov
stos
rcll
or
repz
imul
mov
les
rcrl
sub
inc
xchg
jb
push
ds
iret
jmp
dec
mov
ljmp
jp
je
mov
out
in
dec
push
cld
cmp
xor
pop
sbb
inc
cmc
add
or
dec
mov
jmp
jno
adc
adc
lea
leave
mov
ja
ljmp
xchg
fsubl
xchg
inc
dec
ss
sbb
sbb
repz
movsb
xor
bound
mov
sub
mov
push
daa
jbe
clc
or
push
mov
ficompl
in
subl
aas
mov
fldt
jns
fstpl
xchg
mov
add
nop
fcmovnb
mov
cmp
mov
ljmp
addr16
push
inc
int3
mov
cmp
lods
scas
fwait
or
insb
ret
push
fstps
int
ret
adc
in
repz
std
rorb
xchg
movsl
cltd
mov
rcr
enter
mov
pop
ds
int3
lods
sbb
xor
jmp
or
cs
aaa
mov
in
adcb
jmp
or
rorb
es
mov
xor
lahf
fs
fistps
push
mov
mov
mov
bound
adc
push
les
fiaddl
dec
jl
add
sub
mov
sub
sub
lahf
movsb
fsubrp
stos
inc
cmp
icebp
dec
cwtl
imul
aaa
test
push
sbb
mov
pop
dec
rcrb
fcomps
sbb
mov
movsb
sahf
ja
cld
nop
mov
inc
jnp
fnstcw
rorl
or
sbb
test
inc
fisubrs
mov
movsb
mov
xor
pop
mov
outsl
add
jge
addl
mov
dec
xor
or
pop
push
stos
fsub
sti
shl
mov
push
inc
int
xchg
idiv
loope
lret
cmp
mov
pop
stos
clc
daa
popa
repz
jae
xchg
ds
mov
mov
in
call
out
ret
stos
aam
repnz
lds
sbb
gs
adc
or
addr16
sbb
inc
pop
dec
loop
sub
jns
mov
nop
in
sub
stos
xchg
mov
jecxz
lea
add
push
adc
or
psubb
mov
fstpt
inc
sbb
lret
out
out
mov
or
sbb
bound
ret
mov
push
and
mov
mul
cmp
push
shll
lret
mov
dec
mov
jmp
sbbb
inc
mov
mov
lret
loope
enter
scas
div
dec
cmp
test
xor
stc
mov
jl
xor
cs
mulb
lods
mov
mov
mov
push
mov
and
roll
repnz
je
daa
push
inc
in
or
jno
leave
pop
xchg
insl
fwait
icebp
cmp
cmpsb
in
aaa
add
out
popa
xchg
pushf
pop
andb
notb
xchg
stc
sbb
imul
fwait
imul
cld
pop
add
adc
movsl
loopne
aad
mov
loop
out
pop
mov
imul
sub
sbb
mov
int
sub
pushf
frstor
sub
std
jle
jbe
adc
xlat
or
jmp
cld
xorl
div
stc
insb
jne
xor
icebp
negl
sbb
or
movsl
and
mov
lahf
xor
repz
jg
cmp
mov
mov
push
lock
loope
popa
movaps
pop
ljmp
test
push
sti
mov
xchg
fidivl
cmp
out
jmp
sub
sub
cmp
insb
ja
in
repnz
fldcw
jge
xor
adc
in
cmp
mov
int
cli
arpl
repz
or
sub
sub
mov
rcr
xchg
sub
jo
iret
mov
mov
xor
daa
xchg
push
lds
push
test
mov
and
sub
jmp
xor
add
fisubrl
orl
dec
out
jno
icebp
daa
mov
and
mov
movsl
mov
scas
xor
loope
mov
rol
sbb
fdivrs
pop
xor
das
add
mov
xchg
scas
inc
in
push
loopne
in
dec
jmp
or
sar
insb
sti
icebp
aaa
xor
mov
jle
ss
jnp
roll
adc
or
mov
xorb
ds
or
aad
pop
incl
popf
test
lds
jae
mov
test
inc
xor
in
cli
pop
movsl
stos
xor
jg
sub
in
xlat
xchg
mov
xchg
adc
scas
stc
fcoms
in
add
outsb
add
and
add
fldcw
cmp
adc
mov
out
push
xchg
push
mov
ja
fdivrs
mov
fimull
loope
add
push
orl
ds
mov
xchg
cmp
fcompl
cltd
or
adc
add
dec
dec
or
imul
mov
or
sbb
dec
mov
scas
std
mov
sbb
push
add
or
mov
ret
or
pop
push
data16
mov
sbb
orb
adc
inc
ljmp
ret
test
icebp
push
mov
popl
jp
push
dec
mov
sub
adc
sbb
jle
adc
cmpsl
fsubp
xor
in
pop
adc
push
and
cs
icebp
sub
imul
jbe
ds
es
jb
push
sbb
mov
xchg
stos
lods
das
adcb
neg
leave
pop
test
push
xchg
dec
int3
daa
stos
mov
rorl
icebp
push
jecxz
add
pop
mov
push
cli
ja
dec
mov
outsb
lods
fldl
test
xor
sbb
push
dec
mov
pop
or
jne
ss
xor
sub
add
shll
sub
insb
jmp
jmp
or
or
adc
fistl
inc
rorl
int3
push
outsb
inc
jge
cli
mov
add
aas
cmp
inc
fwait
inc
mov
aam
cmp
dec
sub
adc
xchg
sub
mov
xor
cltd
lret
sub
xchg
fadds
movsb
test
std
call
inc
mov
jp
into
decb
mov
imul
adc
sub
fincstp
sbb
hlt
push
dec
xor
inc
pop
insl
cltd
mov
js
leave
jmp
cmp
into
push
cmp
ret
mov
inc
adc
jecxz
lret
mov
adc
xor
pop
lods
mov
or
lods
adc
clc
pop
adcl
sbb
push
test
push
rcl
int3
xor
cmpb
arpl
xor
mov
xchg
sbb
pop
outsl
mov
dec
sbb
fimuls
enter
xchg
pop
sub
fwait
inc
inc
mov
adcl
stos
xchg
adc
cmpsb
jmp
mov
ds
xlat
lahf
movsl
or
insl
jge
push
imul
xor
sbb
rol
mov
jge
inc
jmp
inc
pushf
mov
inc
push
cmpb
and
cwtl
movsb
mov
mov
ljmp
push
in
xchg
add
xor
sbb
cmp
cmp
loope
mov
mov
xor
inc
and
iret
sub
lret
aad
repz
sbbl
js
jp
arpl
xor
add
sti
mov
pop
mov
hlt
adcb
xchg
rolb
xchg
or
jecxz
in
cli
mov
sbb
or
mov
cli
lret
mov
js
jl
dec
jg
ja
xchg
cmp
imul
push
push
jle
adc
leave
iret
ret
out
xor
loopne
dec
jmp
xchg
inc
gs
cmp
add
cmp
push
lcall
xor
sbb
dec
mov
jno
sub
cwtl
mov
adc
dec
fbstp
mov
jp
jle
sub
xor
dec
movsl
mov
cmpsb
int
lock
std
adc
fs
addr16
xorl
add
stc
pop
mov
int3
out
pop
ja
and
fdivl
ds
fcomps
or
adc
jo
andl
add
out
loopne
add
popa
call
cli
xchg
aad
subl
xor
test
shll
sahf
fidivl
mov
mov
lahf
fisubrs
jb
data16
call
faddp
repnz
pop
pop
xchg
mov
shlb
popf
push
ret
xchg
decl
mov
pop
imul
mov
jl
add
or
movsl
aad
gs
ja
cwtl
stc
inc
je
in
xchg
dec
std
cmp
iret
mov
sbb
scas
mov
je
dec
inc
pop
in
add
cld
mov
ds
repz
pop
mov
aas
cld
or
sti
push
mov
icebp
add
sub
outsl
out
cmc
cmp
mov
les
ss
jg
fidivl
mov
push
pop
or
or
lea
fiaddl
xchg
or
fdivs
loopne
in
roll
movsb
push
xchg
out
fcmovnbe
sub
dec
fsubr
xor
insb
arpl
std
cmpsl
scas
sub
or
out
mov
xchg
push
ffreep
and
ds
scas
shlb
pusha
mov
popf
or
xchg
jle
rclb
pop
fs
dec
add
fs
fstpt
outsl
jo
push
and
rcll
aad
aad
push
cmp
jnp
lds
inc
dec
mov
fstp
inc
movsb
adc
and
jne
pop
shrb
mov
and
cli
fisubs
popf
addl
insb
jae
rclb
mov
push
movsb
popf
pop
xor
mov
xor
sarl
ja
xlat
iret
adcb
pop
lahf
ja
mov
loope
mov
pop
lahf
fadd
cwtl
cli
dec
daa
test
adc
ret
cld
aas
int3
xchg
fdivrs
into
inc
and
stc
mov
mov
and
xchg
or
mov
push
and
pop
pop
add
fcmovne
pop
sbb
insb
or
mov
lods
mov
inc
in
push
push
fwait
mov
fisubl
movsl
ds
scas
mov
movsw
fstpl
adc
sbb
push
mov
fcmovnu
mov
movsb
icebp
pusha
mov
mov
lods
insb
jnp
hlt
jg
mov
adc
pop
test
data16
dec
cmpsl
pusha
aaa
lahf
shrl
jp
mov
arpl
dec
lds
inc
mov
xchg
jnp
inc
cmc
adc
loopne
inc
cwtl
aaa
pop
ja
stos
out
add
add
into
mov
lods
mov
push
or
inc
push
out
lahf
outsb
rcr
fisubrl
jb
fdivrs
sti
adc
push
notb
popf
cmp
rcll
movsb
mov
dec
inc
imul
or
push
aad
test
sbb
sbb
ljmp
jne
in
dec
jo
cs
mov
call
ficompl
ret
std
mov
shrl
mov
and
dec
xchg
cmc
and
fisubrl
loopne
cmp
pop
mov
dec
cmp
pushf
cmpsb
pop
push
push
int3
jmp
ficompl
jp
push
pushl
pusha
outsl
pop
sbb
mov
and
call
inc
clc
jl
pop
mov
rorl
cld
lret
rcrb
addr16
xor
fsubrl
adc
push
incb
xchg
dec
adc
pushl
subl
sahf
push
sub
decb
pop
xchg
xor
ret
imul
push
and
push
cmp
cli
xor
int3
push
add
call
or
jmp
cmp
cmp
jnp
fwait
push
push
push
push
mov
sub
fcoml
or
or
xor
dec
test
mov
mov
inc
mov
xchg
ret
mov
sbb
or
pop
cmp
mov
sbb
dec
fiaddl
mov
lock
sub
enter
aas
mov
pusha
in
daa
insl
test
sbb
mov
and
mov
mov
test
pushf
stc
cmpsl
and
data16
add
xchg
mov
notb
push
sarl
dec
ljmp
ss
cltd
add
cli
decb
mov
mov
and
mov
xlat
or
push
xlat
mov
sbb
xor
jae
add
mov
ljmp
xor
adc
cwtl
inc
inc
mov
imul
stos
stc
in
cli
daa
pop
and
insb
cli
or
inc
pushf
out
cmp
mov
sub
push
std
pushf
loope
mov
sub
mov
adc
push
gs
adc
sbb
test
imul
add
add
rorl
fs
sub
xlat
vcvtdq2ps
dec
out
mov
sbb
out
sbb
jo
hlt
add
xlat
outsl
clc
add
push
mov
cmpsl
call
cli
dec
sar
dec
rolb
jae
jecxz
push
stos
and
jbe
out
ret
cmpsl
mov
adc
fwait
mov
mov
or
xor
shr
pusha
pop
test
les
jg
repnz
jns
aad
mov
mov
inc
xchg
push
inc
mov
aad
mov
mov
pop
or
sub
dec
cltd
fcmove
jg
inc
movsb
inc
nop
inc
inc
loopne
sub
jecxz
add
shr
popa
cmp
scas
pop
mov
in
or
ljmp
ds
shlb
ljmp
fabs
sub
call
sbb
mov
or
mov
mov
push
adc
pop
push
mov
or
pop
leave
stos
js
mov
and
rclb
hlt
rclb
sub
daa
inc
leave
imul
add
mov
insb
dec
cld
pop
inc
outsl
insl
xor
aas
bound
cli
cmpsl
out
and
jo
mov
adc
pop
push
shll
sbb
stos
scas
test
imul
mov
lcall
fnsave
or
movsl
sarb
cmp
add
mov
in
or
push
add
cmp
js
hlt
clc
push
cld
into
mov
dec
dec
into
testl
push
and
xor
mov
cwtl
out
mov
push
sub
jp
pop
pop
jl
xor
mov
push
dec
push
cmc
fldcw
daa
movsl
lret
and
push
sbb
xor
mov
jbe
out
cld
xor
call
jo
inc
mov
cmp
arpl
sbbb
jne
sbb
cli
xor
sbb
and
bound
push
into
das
stc
je
inc
jae
imul
xchg
arpl
adc
or
dec
rorl
sbb
xchg
jmp
mov
imul
outsl
xchg
or
pop
idivl
js
sub
sub
inc
xor
mov
pop
and
jnp
xchg
fidivl
and
out
adc
rclb
sub
lret
inc
inc
std
aaa
jge
popa
sub
jnp
ljmp
mov
cmpsl
cwtl
ljmp
data16
insl
pop
xchg
xchg
xlat
pop
dec
mov
cmpsl
push
xor
xchg
fidivrl
hlt
inc
hlt
push
arpl
sub
inc
das
mov
hlt
fsts
mov
sbb
cmpsl
sub
int3
leave
jbe
inc
push
sti
mov
insl
sbb
mov
xor
dec
fwait
adc
dec
stos
sarl
rorb
cltd
pop
imul
mov
inc
push
stos
gs
je
xchg
pop
add
inc
add
out
test
push
mov
imul
jnp
lret
mov
mov
cld
cmpsl
jns
fisubrs
sbb
sub
xchg
clc
fsubrs
adc
shrb
and
mov
sarb
dec
icebp
in
jecxz
mov
add
addr16
imul
fcoml
xchg
sbb
fdivrl
inc
pushf
push
jb
dec
insb
sar
dec
xor
xchg
add
push
aad
lret
aad
cmp
pop
jmp
movsb
mov
mov
adc
sbb
and
movsl
ds
xor
lahf
test
sbb
sub
popf
popa
repnz
je
stc
mov
outsl
xorb
jle
xchg
dec
fiaddl
fdivs
xlat
les
and
push
lock
loop
cmpsb
push
jo
cmp
int3
loopne
sbb
push
out
lods
xchg
pusha
and
jl
in
test
lods
stc
stos
lods
call
sub
xor
xchg
inc
in
fnstenv
fdivl
pop
stos
push
adc
stos
sbb
inc
mov
add
push
lret
and
pop
jo
xchg
mov
mov
sbb
hlt
jb
sub
inc
adc
mov
jp
push
jmp
lahf
mov
push
icebp
cli
not
pop
mov
shl
stos
cld
xor
xchg
inc
push
in
movsb
xorps
addr16
fsts
cs
jne
paddq
scas
jno
mov
popf
and
leave
xlat
je
mov
fs
xor
push
int
roll
arpl
cmp
in
sbb
inc
mov
out
mov
xchg
rclb
and
inc
xchg
daa
push
and
sti
jns
das
aad
out
cli
sti
fdivrs
lds
insl
test
and
imul
shl
insb
and
adc
adc
or
jns
pushf
scas
popa
cmp
jle
lds
andb
pop
lods
pop
push
imul
test
and
sub
adc
neg
insl
xor
cld
xor
mov
mov
fstpl
fldt
je
dec
sub
cltd
sbb
jno
ljmp
push
and
out
cmp
divb
xor
push
mov
ret
adcl
push
lret
adc
cmp
mov
stos
cmpsl
test
test
inc
mov
stos
sti
and
mov
inc
addr16
inc
iret
add
and
cmpsl
insl
cwtl
pop
test
clc
aas
addr16
enter
sti
mov
pop
xchg
push
lret
xor
mov
cmp
sahf
in
inc
testb
xchg
fists
jbe
lea
out
lods
inc
pop
cmp
roll
mov
icebp
and
gs
sub
cmc
push
and
mov
lcall
push
push
iret
mov
repz
leave
in
and
sbb
popa
add
lret
push
push
into
mov
lea
mov
inc
push
stos
ficomps
push
add
mov
int3
ror
popf
mov
fsubrp
popa
xor
ss
int
cld
lock
mov
push
sub
sti
jbe
mov
movsl
fdiv
pop
add
imul
sahf
add
icebp
inc
lea
mov
or
lret
call
dec
xor
pop
out
mov
adc
testb
jge
lods
dec
mov
rorl
out
out
js
call
bsf
lcall
cltd
movsb
add
loopne
fcomip
inc
mov
bound
mov
mov
add
pop
or
leave
rorl
les
or
out
dec
push
sahf
insl
daa
and
je
test
or
cmp
xchg
dec
or
sub
push
das
xor
inc
xchg
adc
inc
cmp
into
dec
imul
fists
dec
icebp
stc
xchg
adc
pop
test
mov
push
sub
push
mov
and
insl
arpl
nop
fimuls
into
ret
sub
je
imul
or
xchg
dec
and
xor
and
std
or
push
ljmp
aas
xchg
or
int3
mov
lods
clc
sub
xchg
sbb
loope
shlb
andl
mov
sti
loope
cli
sbb
xor
dec
sbb
jp
icebp
xchg
cwtl
popf
lret
iret
dec
mov
cmpsb
aaa
and
ljmp
or
add
mov
outsb
mov
pushf
pop
pop
gs
adc
jl
and
fdivr
jle
arpl
push
repz
cmp
sub
jge
mov
mulb
out
testl
cmc
addr16
test
out
pop
xor
fldcw
jl
xor
and
fdivrl
and
ret
mov
dec
push
and
dec
imul
cmc
xchg
mov
or
aam
xor
cmpl
shll
sub
popf
int
daa
sbb
call
pop
or
hlt
mov
adc
call
xchg
jle
lods
jg
cmp
imul
stc
popa
xorb
stc
or
daa
fidivrs
incl
in
popa
sti
ret
icebp
jbe
and
xchg
adc
test
dec
pop
inc
in
loope
int3
adc
lds
and
aad
mov
in
xor
iret
shlb
arpl
push
jle
push
pop
ljmp
dec
pop
xchg
sbb
lock
add
out
dec
ds
mov
and
gs
sub
pushl
scas
mov
daa
ss
aam
ret
push
pop
dec
pop
mov
fwait
or
in
incb
out
insb
or
int
cli
inc
aam
mov
inc
es
stos
pop
inc
shll
push
fcoms
popa
xlat
inc
callw
andb
jne
rol
sarb
inc
mov
sub
sub
stos
xchg
push
in
insb
mov
mov
insb
das
test
push
inc
push
mov
cmp
test
jo
push
or
xchg
sub
and
xchg
and
mov
popf
and
sbb
mov
call
frstor
jno
scas
add
push
filds
insb
xor
sub
and
inc
push
lea
clc
into
jmp
add
cmp
js
enter
dec
pop
ds
mov
sub
cmp
push
jecxz
lea
xchg
and
mov
lods
and
push
in
rcl
push
and
sub
divl
js
push
xchg
mov
push
mov
lret
lea
lods
add
str
std
outsl
add
lahf
ds
jl
dec
lds
cld
iret
inc
andb
cmc
clc
loope
ret
jle
add
dec
mov
sub
adc
mov
xchg
cld
mov
pop
ds
xchg
dec
ja
sahf
cld
subl
hlt
and
je
push
pop
pop
add
cmpl
lods
adc
mov
adcl
inc
loop
xlat
iret
cmp
push
idiv
lret
push
in
inc
xor
or
imul
loope
add
jge
push
pusha
sub
mov
in
enter
pop
sbb
sub
mov
test
mov
fidivl
push
and
cmp
dec
repz
add
push
out
mov
mov
xor
outsl
cmova
imul
test
cmpb
lret
push
xchg
cld
daa
xor
xchg
sbb
or
fidivrs
out
dec
dec
pxor
test
in
dec
mov
push
aad
xchg
and
cltd
mov
or
insl
pop
aad
sub
scas
push
xor
sbb
mov
cmp
sbb
push
shrl
imul
inc
int3
and
outsl
mull
loopne
jle
test
push
mov
and
stos
sbb
mov
imulb
lcall
cs
inc
inc
xchg
ds
lods
aas
xchg
or
iret
and
jo
out
rolb
pop
addb
imul
test
loopne
mov
mov
imul
insb
mov
gs
insl
inc
sub
lock
outsb
and
lcall
inc
mov
subl
test
outsl
push
dec
cmp
xlat
lret
jmp
hlt
movl
or
xchg
cmp
and
ja
jmp
mov
pusha
push
and
lds
push
pop
mov
inc
cmc
daa
int3
mov
adc
repnz
lcall
vmread
cmp
gs
xor
stos
roll
add
cmp
push
psubq
lock
mov
sub
fchs
sub
jne
mov
mov
cmp
cmp
mov
ljmp
out
and
ret
loop
dec
fnstsw
inc
dec
outsb
mov
inc
sub
xchg
inc
xchg
adc
fdivs
ficoms
out
fldt
cmpb
adc
gs
stos
leave
xor
cmp
sbb
pop
push
adc
scas
pop
push
jecxz
movsb
mov
dec
xor
es
ret
xor
orb
movsb
lcall
or
int
enter
sbbb
loopne
shlb
adc
shll
xchg
sub
lcall
mov
ljmp
ds
xchg
and
mov
gs
or
sbb
and
xor
cmp
or
ds
cmpsl
mov
or
je
popa
fsts
pop
orb
and
lcall
pop
xchg
push
in
dec
xor
push
or
mov
xchg
cmpb
outsl
xor
xchg
mov
mov
out
sbb
data16
and
and
pop
jne
dec
adc
fwait
pop
movsb
xor
lcall
andl
test
dec
jmp
xor
loopne
es
enter
fwait
inc
pusha
inc
add
jle
pop
pop
mov
rol
push
js
out
jmp
mov
mov
outsb
fwait
push
out
jo
dec
icebp
xchg
sti
xchg
dec
mov
pushf
jle
fwait
adc
jl
sub
cmp
imul
mov
shrb
pop
mov
jecxz
add
call
push
popa
inc
test
xor
sbb
xlat
cmp
cld
or
xchg
pushl
outsb
test
ljmp
into
ret
mov
xchg
sub
jns
xchg
mov
rol
int3
bound
xlat
notb
lds
es
loopne
fnstcw
js
aas
test
cmc
mov
push
mov
mov
les
cmp
jle
dec
and
adc
in
mov
or
and
pushf
sub
push
out
sbb
imul
dec
popl
lret
inc
add
xor
mov
xor
xorb
adc
mov
lret
jge
ljmp
xchg
jne
push
cmpsb
jmp
out
aam
adc
push
add
sbb
aam
or
lcall
lea
mov
inc
push
shr
mov
lret
cmp
cmp
push
iret
dec
test
out
aam
jnp
dec
pop
in
andb
adc
pusha
aad
push
movsl
cltd
test
mov
mov
pusha
fs
add
loopne
std
int3
cs
mov
xor
or
push
je
jp
cmp
in
les
scas
xlat
mov
sbb
jmp
cmp
enter
and
cmp
sahf
push
mov
stos
push
out
dec
mov
sub
inc
std
inc
inc
jg
call
enter
fiaddl
int
mov
sbb
push
push
in
jo
xchg
loopne
mov
sub
jp
test
aas
mov
ss
cmpsb
rolb
inc
inc
sbbl
testb
mov
push
mov
ljmp
mov
xchg
or
sbb
popa
sbb
xchg
fisttps
push
popf
add
movd
mov
in
leave
je
inc
and
lock
inc
add
pop
push
cwtl
fucomp
int
mov
fldcw
loop
out
fidivl
dec
cwtl
adcb
das
ss
test
sub
nop
loopne
adc
jge
mov
shr
lcall
sar
inc
stos
jp
and
pushf
aas
imul
outsb
adc
jle
aam
lahf
sbb
shlb
mov
jl
dec
push
xor
jp,pn
dec
jmp
inc
sub
xchg
fcom
push
pop
out
subb
out
cmc
or
ror
bound
sub
pop
xchg
jnp
mov
mov
testl
adc
scas
jl
adc
fbstp
clc
add
sti
lods
fbld
nop
ficoml
or
outsl
and
sbb
xor
aam
mov
rorl
mov
cmp
mov
jae
ret
mov
leave
mov
jne
xchg
popf
fdivr
push
mov
pop
xchg
adc
jecxz
adc
dec
or
adc
scas
call
adc
in
scas
dec
mov
and
je
outsl
int3
scas
pop
lret
inc
aam
in
pop
cld
dec
js
mov
jne
sbb
mov
insb
push
push
nop
jmp
dec
mov
ljmp
cmp
fs
push
mov
ja
jg
xchg
rolb
repz
mov
adc
push
mov
aas
stos
and
xor
or
iret
inc
mov
xor
cmp
loop
cmp
and
inc
dec
jge
push
jp
rcll
loope
aas
dec
outsl
loopne
cwtl
ds
fstpl
scas
pop
mov
push
xchg
mov
test
xorl
data16
dec
mov
and
xchg
lods
xchg
add
adc
mov
xchg
or
sbb
push
mov
scas
jbe
ficomps
aam
sti
mov
mov
inc
push
leave
mov
or
popa
sbb
pop
sbb
pop
repz
mov
rcr
push
sarl
bound
leave
add
es
push
mov
push
shl
push
pusha
fs
inc
ds
sbb
nop/reserved
cli
xor
xor
fmul
test
in
pop
add
mov
jle
inc
dec
fstp
sub
pop
ss
mov
jle,pn
aaa
lahf
das
lods
pop
mov
push
xor
aam
add
push
lret
cs
cld
scas
arpl
pop
xlat
pop
xchg
jae
push
mov
push
push
ds
push
mov
aaa
dec
lock
or
cmp
cld
movsb
adc
mov
data16
repnz
insl
xor
xchg
inc
movsb
mov
sub
dec
and
cs
mull
cmp
pop
jno
cmp
xor
ss
dec
pop
cmp
mov
bts
sub
or
or
jle
and
popa
add
pop
cmc
xor
and
out
push
mov
aas
push
sbb
add
xchg
mov
fildll
push
or
popl
sub
fwait
mov
ret
fimull
mov
notl
repz
cmp
inc
ds
pop
push
mov
add
push
insb
out
shlb
mull
in
jns
xchg
scas
and
stos
movsl
jge
adc
stc
or
sbb
lahf
pusha
aam
sar
jp
cmpsb
push
inc
dec
mov
je
shlb
iret
pushf
nop
mov
sarb
lods
xor
jne
sub
aad
cmp
or
icebp
stos
addl
pop
and
popf
add
in
rol
in
mov
les
mov
ret
into
in
xor
imul
push
push
aaa
push
mov
and
mov
aas
outsb
mov
mov
dec
xchg
or
fcoml
sbb
mov
inc
push
mov
sub
cltd
test
mov
add
inc
ljmp
pop
scas
xchg
add
xchg
xor
jns
and
or
ja
ficoml
dec
aad
sbb
or
shlb
inc
lret
fidivl
fcomi
xchg
add
bswap
or
inc
in
scas
mov
clc
lods
outsb
and
add
mov
xchg
in
out
cmp
in
and
std
fs
xchg
int3
adc
imul
sbb
cld
cmp
lea
outsl
cmpsl
mov
out
dec
stc
add
sbbb
cli
jo
mov
jge
sbb
enter
mov
adc
mov
ficoml
std
push
adc
shll
orl
aas
cld
push
mov
and
cmp
dec
cmpb
xchg
sbb
not
push
fdivrl
inc
fcmovu
dec
add
sub
in
mov
pop
ja
add
cmp
mov
iret
sti
stos
icebp
mov
je
mov
jl
sti
sub
outsl
jno
out
sub
dec
push
mulb
scas
cmp
xchg
push
xor
mov
int
cwtl
jp
adc
pushf
sahf
ljmp
push
cld
mov
lahf
dec
mov
add
insb
mov
pop
adc
inc
int
pop
sbb
addr16
fptan
jne
add
add
cwtl
mov
ds
clc
fidivrs
pop
test
int3
pop
adc
fildl
mov
in
mov
xchg
fs
bound
xlat
loopne
push
pop
stos
imul
aas
ret
fdivs
loop
std
add
push
xchg
mov
cmp
push
sbb
aam
mov
sbb
lret
imul
lret
mov
push
jnp
in
in
pusha
stc
mov
pop
sub
xor
addr16
adc
jno
push
mov
pop
mov
fisttps
mov
pop
or
adc
pop
in
xchg
xchg
lret
mov
add
call
xor
xor
loopne
stos
push
loop
ret
out
js
je
pop
add
jnp
iret
jne
push
aam
ret
sbb
out
outsl
ret
mov
insl
mov
jo
aaa
scas
mov
or
lds
test
xchg
into
and
jbe
mov
push
into
insw
pushf
sbb
adc
rorb
orb
jg
cwtl
and
or
cld
jb
or
inc
mov
jl
jmp
and
push
cmp
repz
mov
arpl
mov
sbb
jg
sbb
icebp
gs
sub
shrl
sub
and
data16
sbbl
aaa
xchg
mov
inc
pushf
iret
sbb
test
push
repz
xor
xor
nop
cwtl
fwait
out
daa
fdivrl
outsb
sub
ret
add
imul
fiadds
loop
jge
adc
ss
sub
push
insl
cwtl
ljmp
and
xchg
adc
dec
div
push
frstor
imul
mov
mov
in
nop
add
icebp
mov
inc
or
stos
aam
sub
pop
loope
imul
mul
pop
inc
loopne
pop
mov
lret
and
xchg
xchg
mov
and
stos
mov
and
out
xchg
je
push
rcrl
sbb
pop
fwait
push
movsl
out
mov
pop
xchg
xorl
mov
je
lock
jg
mov
test
cmpsl
push
pop
cmp
rorl
and
push
nop
mov
mov
movsb
scas
mov
rcrb
imul
dec
imul
psllw
inc
xchg
sbb
int3
lock
adc
das
daa
push
loopne
cmp
cmpsb
mov
adc
jge
push
add
enter
mov
sbb
xor
ret
enter
lahf
mov
mov
push
mov
enter
enter
cmpsl
mov
pop
mov
cmp
out
push
sub
jmp
inc
adcl
andb
aaa
adc
stos
cmp
mov
mov
testl
xchg
fcmovnb
nop
dec
pop
ret
ret
in
cmp
sbb
test
cs
hlt
out
cltd
adc
testb
iret
sbb
dec
shl
cwtl
mov
inc
mov
adc
mov
dec
push
clc
mov
mov
lods
dec
js
movsl
sbb
push
xor
sbb
iret
aaa
mov
enter
sarb
lea
sti
pushaw
mov
pop
notb
dec
mov
mov
push
in
pop
into
xor
pushw
or
sbb
cli
mov
mov
insb
mov
loopne
lret
adc
pop
imul
leave
dec
push
lods
sahf
arpl
idivl
mov
js
insl
push
sbb
mov
fstps
add
faddl
cmp
jge
outsb
insl
imul
test
xchg
or
inc
pop
pusha
jno
pop
inc
int
test
mov
xchg
add
sbb
xchg
xchg
mov
fnsave
mov
fmuls
call
rolb
ficompl
repz
mov
cwtl
in
pop
pop
xor
movsl
push
push
pop
call
jbe
sbb
mov
bound
push
sub
nop
lcall
mov
scas
lock
mov
pop
shlb
lods
out
or
dec
adc
cmc
call
shlb
or
jno
lret
imul
xlat
dec
aad
mulb
popl
sbb
rcll
push
sbb
or
outsb
add
pop
xchg
sbb
cmp
icebp
sub
sub
xlat
les
shrb
cmovo
mov
rcrl
xlat
negl
test
jle
xchg
bound
out
bound
pop
movb
out
stos
lahf
adcl
xor
or
or
jne
push
push
fdivrs
add
sbb
sub
mov
push
inc
mov
out
mov
dec
in
xchg
ret
orl
sub
push
xchg
lods
and
add
loopne
mov
test
push
mov
jg
aaa
jp
enter
lret
insl
push
dec
or
cltd
pop
mov
jl
negl
inc
inc
jo
jg
lods
mov
xchg
lds
pop
out
mov
and
sbb
adc
sbb
xor
inc
mov
xor
loop
push
imul
pop
ds
repz
scas
icebp
lcall
sub
xchg
push
hlt
xor
mov
rolb
std
and
mov
ja
jmp
pop
cmp
rorb
xchg
sarb
xchg
jnp
mov
das
xadd
jle
jge
push
movsl
clc
jbe
and
call
dec
lds
cld
pusha
pop
xor
in
xor
cltd
arpl
flds
insl
xchg
sti
ss
jle
pop
ja
sbb
xchg
push
inc
add
aaa
nop
lcall
jno
cli
cmc
and
mov
xchg
in
dec
ret
movsb
jge
icebp
inc
es
xor
push
icebp
dec
push
cmp
jbe
aas
idivb
sub
mov
cmc
cmpsl
adc
sbb
popa
aad
xlat
stos
stos
push
in
insl
push
or
pop
fidivs
xchg
outsl
sti
pop
repnz
imul
xor
lret
dec
out
loope
or
repz
movsb
aam
sahf
call
testl
dec
outsl
push
lahf
ja
cmpsb
lcall
add
mov
ficompl
out
add
xchg
fneni(8087
dec
cld
push
or
lret
int
lahf
inc
pop
ljmp
test
cmp
and
mov
cmp
and
std
push
lcall
stc
jmp
mov
add
jge
into
icebp
cmpsb
cmp
rorb
inc
or
xor
sub
imul
dec
cmpsl
xchg
stos
daa
jle
stos
mov
out
push
xor
and
lcall
push
out
pop
and
inc
pop
add
lret
add
int3
repnz
sbb
add
mov
mov
push
xchg
xchg
push
icebp
aaa
ljmp
adc
arpl
cwtl
out
and
sub
cmp
push
ret
mov
mov
pop
pushf
lock
sub
and
mov
pop
add
cmp
icebp
sub
and
ljmp
mov
xchg
lahf
idivb
jnp
jle
test
cmc
enter
movsb
inc
daa
jb
scas
test
pop
mov
or
and
fmull
stos
in
sub
sbb
and
mov
test
cmp
xchg
pusha
ret
lret
inc
mov
jg
pop
movsl
or
in
jo
adc
dec
dec
xchg
xchg
cli
stos
dec
in
insl
adcb
xchg
cmp
pop
pop
jnp
mov
dec
bound
sahf
insb
shll
push
lods
outsb
in
jae
mov
test
pop
mov
sarl
fadd
incb
enter
mov
pop
xchg
xor
stos
in
mov
gs
push
xor
cltd
aas
xchg
adc
imul
mov
add
or
je
nop
icebp
cmp
mov
mov
mov
jmp
add
xor
adc
pop
lret
xchg
jno
cmp
stc
push
inc
stc
mov
pop
or
mov
mov
add
xchg
mov
scas
dec
or
and
add
mov
iret
jnp
lods
movsl
dec
push
and
sbb
mov
js
xor
xchg
repz
pop
outsl
pop
add
cli
imull
add
popf
jb
jo
mul
movsb
xor
xor
fwait
xchg
insl
ds
sbb
inc
or
je
pushf
push
aam
sbb
mov
jno
mov
js
cltd
mov
fcoml
xor
in
jmp
dec
jg
push
fcmovbe
aam
mov
xor
xor
mov
sahf
cli
incl
inc
test
push
mov
popf
mov
xchg
dec
repz
aam
dec
adc
xor
xchg
mov
push
repz
pop
fmuls
jge
adc
stos
mov
shl
push
xchg
push
cmp
xor
aaa
xor
jb
popf
test
push
std
push
enter
in
mov
mov
xor
lret
shrb
nop
cmp
int
or
xor
mov
lcall
inc
and
test
or
add
cwtl
mov
rclb
filds
popf
out
mov
mov
and
push
fistps
add
dec
out
push
and
lret
sub
adc
cmp
les
popa
jae
ret
std
fimull
icebp
or
mov
add
xor
fnsave
popa
add
ficoms
sbb
push
cmp
negl
jbe
lahf
rclb
adc
inc
pop
scas
adc
xchg
sbb
xchg
push
and
jmp
aam
bound
cmp
das
in
mov
adc
sbb
adc
out
movsl
pop
addr16
and
loop
cmp
xchg
lahf
mov
lret
push
stc
incl
mov
cmp
add
test
xchg
fnstsw
jge
adc
push
mov
ds
dec
sub
das
mov
add
dec
jg
sub
sub
sbb
repz
mov
dec
cmp
inc
or
ret
nop
inc
sbbb
sahf
sbb
adc
jb
sbb
stos
dec
push
mov
out
mov
popl
bound
push
aas
gs
lds
lahf
inc
pop
jne
jecxz
rolb
lock
push
or
in
sub
movsb
jg
jne
cld
mov
rcrb
pop
and
push
lods
xor
and
je
adc
jne,pt
stos
or
push
push
jns
push
ljmp
dec
mov
aam
or
movsl
jbe
adc
stc
hlt
out
pushf
fdivs
jle
loopne
in
aad
iret
jp
insb
aaa
rcrl
cmp
mov
loope
push
test
je
dec
rcll
loopne
mov
jne
mov
scas
loop
xor
cmp
mov
pushf
cmpsl
les
lret
xor
jnp
cwtl
mov
fnstcw
cmp
mov
sahf
lds
jmp
leave
sub
push
daa
sub
test
mov
movsb
sbb
mov
xlat
bound
mov
mov
repz
jbe
mov
out
lcall
adc
aaa
mov
jbe
mov
into
pop
nop
xchg
in
sarb
mov
nop
and
pop
jl
sbb
cmpsl
nop
mov
frstor
loop
and
mov
shl
cmp
cltd
push
jne
gs
cli
xor
call
pusha
inc
hlt
mov
movsb
adc
add
mov
jne
dec
cmp
es
lcall
sub
in
hlt
adc
push
test
cmc
movsl
inc
cwtl
scas
mov
push
aad
adc
sub
mov
outsl
int3
mov
dec
out
sub
xchg
add
mov
mov
aaa
push
ret
push
add
popf
arpl
lahf
push
mov
and
pusha
push
push
jns
jecxz
mov
hlt
jp
mov
mov
jae
shr
xchg
loope
outsl
sbb
outsb
dec
xchg
test
sub
jae
hlt
lret
dec
nop
lds
lcall
sbb
xor
sbb
mov
and
jp
out
aad
push
ljmp
cmp
xlat
cmp
adc
push
add
out
or
mov
and
xchg
jb
xchg
aam
sbb
inc
jo
adc
dec
enter
or
and
mov
adc
adc
dec
jno
inc
pop
dec
pop
pushf
push
int3
pop
jb
mov
lcall
imul
sub
mov
in
add
data16
xlat
add
call
cs
pop
lcall
movsb
mov
pusha
pusha
std
lods
scas
mov
adc
test
or
fsubrs
cmp
fisttpl
inc
es
or
jg
hlt
jg
jp
dec
push
push
add
jbe
adc
es
imul
cmp
or
push
out
inc
mov
ds
mov
out
inc
mov
lea
sbb
add
and
push
insl
movsl
mov
mov
sub
pushl
cs
mov
xor
push
jl
push
mov
mov
test
mov
ds
cwtl
pop
out
adc
pop
nop
mov
fnstsw
mov
mov
movsb
pushf
ror
push
cmc
and
adc
testb
cld
in
and
adc
in
in
hlt
cld
fwait
and
inc
mov
cld
fucomip
dec
add
mov
in
xchg
cmp
xor
mov
add
xchg
jbe
sbb
movsl
add
sti
fsubrs
inc
mov
pusha
sbb
pop
arpl
test
pop
push
enter
push
daa
jl
pop
in
adc
mov
dec
in
ret
out
xchg
repnz
and
push
mov
adc
lahf
out
push
xchg
or
xorl
test
jle
test
shll
mov
push
or
inc
and
clc
and
test
dec
loop
cmp
outsb
popf
jno
dec
inc
jg
cmp
pop
hlt
jns
inc
xor
jecxz
fcoml
jb
cmp
outsb
push
jbe
and
xor
jmp
push
inc
frstor
jp
push
into
adc
sarl
or
fstpl
popl
cmpl
sub
test
xchg
mov
std
adc
or
jg
inc
aas
test
jne
fldl
jl
or
sbb
sbb
stos
cmp
div
or
setbe
jne
pop
shrb
inc
push
jnp
es
sub
mov
pop
int3
mov
lahf
scas
scas
xchg
xor
sub
adc
mov
in
pushf
mov
pop
dec
in
xchg
lds
shlb
rep
bswap
xchg
hlt
sarl
xchg
hlt
cmp
je
adc
xor
add
inc
xor
jnp
pop
xor
inc
mov
test
pop
vaddsd
outsb
les
arpl
pop
mov
mov
test
xlat
adc
fisttpll
xor
or
pop
hlt
sub
and
pop
push
les
and
jmp
jle
inc
mov
shlb
fdivs
mov
lret
add
ret
push
dec
mov
arpl
pusha
jbe
popf
hlt
mov
and
or
repnz
jne
icebp
push
cmp
mov
inc
clc
in
into
xchg
adcl
in
mov
add
std
jl
mov
push
pop
cs
stos
dec
adc
jbe
adc
outsl
jmp
rcll
nop
or
pop
lea
pop
movsl
sarl
dec
mov
call
test
push
das
xor
jnp
jnp
inc
sbb
enter
in
cmc
mov
sbb
dec
cmp
pop
iret
out
js
dec
loopne
dec
and
testb
scas
repnz
test
pop
push
mov
lahf
xchg
dec
scas
xor
cmp
cld
addr16
jo
insl
jno
cltd
mov
jns
addl
mov
ffree
cmp
mov
rolb
lock
lcall
pop
into
lock
jmp
and
popa
pop
xorl
fdivrs
xlat
mov
test
icebp
xor
pop
mov
adc
ret
push
stos
bswap
movsl
cmp
jb
daa
sub
hlt
loop
sbb
inc
mov
or
push
jecxz
jecxz
push
in
push
xlat
aaa
jg
or
xchg
loop
testb
loope
repnz
mull
mov
sub
popa
sub
loope
js
mov
loop
mov
xor
pushf
inc
and
mov
cmp
or
cmc
jl
mov
std
mov
addw
insb
mov
pop
lds
cmpsb
jnp
sti
mov
bound
adc
sub
xchg
pop
js
ret
js
push
and
adc
fdivrl
aas
cli
cmp
movsl
gs
popf
mov
xchg
insl
jg
add
lods
mov
or
outsb
mov
lods
call
shlb
loopne
das
fistl
cmp
add
jae
push
lahf
mov
add
test
insb
testb
adc
mov
mov
dec
mov
int
dec
xchg
push
fisttpl
loop
inc
jecxz
insl
lret
mov
jmp
leave
dec
sti
in
test
jp
xchg
fwait
rcrl
mov
out
rcl
popf
call
dec
sub
and
mov
add
ja
cmc
pop
leave
cwtl
cli
mulb
testb
repz
fwait
cltd
xchg
pusha
xor
cmpsb
aaa
adc
lret
or
shl
inc
and
test
sarb
xchg
lcall
pop
sub
jb
pop
xor
imul
pop
jno
xorl
or
mul
xorl
add
lahf
pop
jo
in
cmp
or
mov
cld
jae
iret
or
sbb
pop
call
jbe
and
enter
test
or
cmp
loop
push
out
mov
imul
inc
ret
test
fcoml
out
imul
adc
xchg
leave
ss
dec
push
les
lods
inc
xor
or
icebp
filds
mov
es
ljmp
dec
arpl
xchg
lret
pop
outsl
sbb
jnp
jecxz
add
sub
in
lret
loopne
dec
cs
adc
fmulp
sub
pop
pop
jecxz
shlb
xchg
fldenv
adc
adc
inc
xchg
sub
inc
std
mov
and
xor
jno
xor
cmp
xor
insl
mov
out
imul
jne
mov
xchg
push
ljmp
xlat
lods
mov
adc
push
add
cmp
movsb
ret
notl
aad
cwtl
and
xor
fs
out
mov
test
lock
mov
push
dec
scas
jl
test
add
sub
xchg
sub
and
stos
rcll
mov
fimuls
push
call
mov
xchg
fwait
push
cmp
cmpsl
out
mov
leave
pushf
daa
imul
hlt
cld
adc
push
mov
xchg
popa
xchg
dec
test
fincstp
cltd
fsubl
xchg
iret
sbb
xor
das
jp
cmp
adc
dec
sub
sub
lahf
sub
xor
push
inc
dec
pop
xchg
insl
ljmp
cmpl
ret
pop
insb
or
in
mov
dec
xchg
push
xchg
adc
cmpsb
in
bound
inc
pop
sti
jmp
pop
jbe
std
add
sbb
dec
jns
sarb
fwait
hlt
push
cmpsl
js
xchg
out
or
stos
sub
cmpsl
dec
repnz
pop
mov
mov
push
xor
inc
lods
jno
mov
out
cli
pop
jne
roll
cmp
mov
imull
push
into
mov
jb
push
sub
jae
lret
inc
dec
int
lods
sub
adc
xchg
mov
pop
jmp
sbbb
outsb
outsl
dec
mov
icebp
test
sub
lods
cltd
int3
or
and
mov
adc
push
pop
cmp
aad
pop
rcrb
or
clc
je
imul
push
es
and
fistpll
push
mov
mov
lcall
mov
xlat
dec
repnz
int3
jge
cs
movsl
sub
xchg
mov
fisttps
aam
and
cmp
pop
adc
jecxz
aam
nop
ja
jmp
lea
leave
pop
adc
sbbl
fucomip
stos
sub
out
outsl
dec
and
daa
outsb
cmp
and
insb
addr16
push
pop
repnz
add
roll
sub
stos
arpl
lock
mov
and
addr16
mov
fisttps
je
jae
lds
fildl
cmp
test
mov
mov
addr16
dec
jg
adc
sub
aam
jl
and
rolb
dec
dec
lods
jge
aas
or
je
jp
int
int
loopne
in
xchg
mov
cli
xchg
inc
pop
cli
sub
dec
or
mov
lods
subl
sub
xchg
bound
call
in
icebp
pop
addr16
push
fadd
ror
push
mov
xchg
xchg
adc
cmpsl
fmul
shll
and
add
push
push
inc
outsb
xchg
mov
orb
xor
cmp
iret
push
push
push
ret
mov
jns
sarl
in
adc
sub
movsl
icebp
lods
pop
mov
adc
mov
add
out
or
jl
xor
subb
dec
addl
aam
shrb
xchg
in
aam
mov
mov
ror
xchg
xchg
mov
repz
sub
out
jne
pusha
push
sub
ficoms
mov
sub
icebp
bound
xchg
andb
cmp
cmp
inc
xlat
popf
push
inc
fcoml
adc
bound
imul
adc
and
mov
loope
jg
lods
rcrb
rorb
dec
hlt
dec
mov
add
in
outsb
or
pop
shll
push
xchg
and
hlt
je
mov
das
mov
cmc
or
scas
inc
add
stos
lret
jns
sahf
enter
fists
jb
push
mov
mov
aas
xchg
mov
push
pop
je
lahf
jp
lods
in
xlat
aad
pusha
outsb
mov
push
or
jmp
lods
sbb
jno
int
ljmp
cmp
orb
jno
jns
pusha
std
mov
fildl
rcl
add
inc
aaa
and
cmp
xchg
shlb
inc
std
lcall
test
pop
ljmp
aam
xchg
sbb
imul
push
xchg
sbb
push
gs
xor
lods
ds
ret
clc
push
xlat
cs
fdivrl
stos
rcrl
mov
divl
pop
cmpsl
sub
sarb
data16
ljmp
jnp
mov
jl
pop
cmp
fs
std
sbb
mov
mov
jle
or
mov
test
daa
rolb
mov
sub
jae
sub
mov
xchg
pushf
testb
xor
pop
adc
or
aaa
jmp
add
mov
popa
loope
xor
or
jp
sub
lcall
test
dec
mov
and
or
jne
mov
push
adc
dec
cli
xor
push
mov
cs
test
push
mov
out
mov
pop
push
adc
shlb
mov
cmp
sar
aad
mov
mov
push
test
out
or
icebp
imul
cwtl
inc
pop
fildll
aad
pop
pop
fcoms
xchg
jle
fwait
repz
lret
jge
jge
push
mov
pop
repz
xor
adc
fsubrs
call
lods
decl
scas
adc
inc
push
jge
xor
push
es
mov
and
lock
inc
fidivrl
mov
clc
mov
adc
iret
jbe
lods
push
push
jb
lods
pop
sar
mov
dec
adc
data16
mov
lods
cmp
and
cld
jns
hlt
mov
and
xchg
rcl
mov
sbb
jmp
cmp
pop
sbb
cld
adc
sub
push
subb
add
push
push
inc
add
out
add
lods
shll
xchg
mov
add
iret
adcb
add
rorb
xchg
call
cmp
sbb
jo
movsb
scas
lds
mov
inc
mov
xor
jbe
sbbl
dec
into
jecxz
scas
push
sti
jo
int
hlt
add
fldenv
scas
out
arpl
mov
or
outsb
enter
xor
out
lock
aad
mov
push
pop
add
xchg
sbb
fwait
jg
mov
jae
push
decl
xchg
jp
mov
lcall
add
flds
mov
dec
call
sbb
add
jle
arpl
shr
nop
push
gs
div
adc
sbb
gs
mov
push
test
pop
jle
mov
imul
sub
xchg
enter
call
arpl
and
repz
std
jge
fsubrl
jge
pusha
testl
insl
sbb
add
icebp
push
add
or
ja
pop
pop
mov
dec
sbb
mov
adc
jl
dec
negl
sbb
or
push
adc
notl
in
push
mov
in
xor
jmp
insb
ret
dec
xchg
les
lock
daa
bound
iret
fcmovb
in
adc
movsl
jbe
inc
dec
jl
aad
imul
cwtl
inc
sbbl
scas
or
movsb
jns
ret
clc
push
jne
inc
cs
add
xchg
jmp
xchg
ljmp
lock
fcompl
xchg
mov
in
int
push
add
mov
mov
xor
xor
les
call
xchg
fnstenv
jne
addr16
insb
cmp
aad
hlt
or
hlt
hlt
pop
push
xchg
cmpsb
xor
popa
push
lods
pop
adc
sub
mov
not
fisubl
mov
fildll
rcrb
mov
lods
arpl
xor
push
mov
jmp
sub
cmc
ret
and
in
lahf
orl
data16
mov
mov
mov
fdivr
ss
aam
push
stc
fnstsw
dec
inc
mov
pop
lods
mov
cwtl
iret
and
jb
jno
popa
push
out
es
movsb
adcl
aaa
push
jle
mov
mov
hlt
hlt
pop
fistpll
outsl
lods
xchg
lods
push
std
mov
push
leave
mov
pop
lahf
mov
shlb
aaa
lods
jns
mov
cmp
daa
iret
cli
dec
sbb
pop
mov
push
ret
xchg
addl
js
dec
sbb
jne
int
mov
lret
lret
addr16
jne
inc
lods
repnz
test
inc
pop
inc
inc
out
xchg
data16
dec
into
sahf
mov
pop
or
shlb
or
hlt
mov
orl
int3
add
fnstenv
aad
dec
mov
and
shll
lods
sahf
rcr
insl
dec
rorl
xor
jae
outsl
arpl
shll
scas
js
lahf
mov
fldl
add
inc
dec
movsl
mov
insb
jne
sbb
outsl
sbb
and
push
cltd
jl
in
roll
ret
loopne
lret
bound
xor
jno
jg
scas
or
ja
fidivl
ficompl
pop
mov
inc
ds
dec
push
mov
stc
push
out
mov
pop
rcll
xchg
inc
scas
jge
pop
lcall
xor
scas
insb
jp
or
adc
adc
add
sbb
xchg
sahf
lock
out
push
sub
lds
in
jmp
lods
or
out
xor
pop
inc
das
sbb
test
leave
inc
mov
stos
add
lods
int
movsb
cmpsb
gs
mov
sub
mov
xchg
and
jp
cmc
test
xchg
je
push
xchg
fsubl
cmp
lds
icebp
mov
ljmp
outsb
add
int3
cmpsb
cmpsl
jne
cmp
stos
sar
cmp
mov
mov
lds
adc
mov
cmpsb
mov
jo
cmp
fisubs
lcall
add
mov
mov
shlb
xchg
cmpsl
and
add
xor
outsl
flds
sbb
pushl
xlat
add
lock
mov
push
leave
icebp
jns
je
ljmp
adc
jmp
mov
ds
mov
jmp
and
loopne
pushf
inc
xchg
aas
incl
dec
sub
das
pop
loopne
daa
cld
mov
adc
icebp
int3
pop
aas
mov
ret
leave
or
scas
fcoms
sub
xor
imull
sahf
sub
adc
push
movsb
aam
ret
push
les
push
push
push
adc
imul
pop
mov
push
fists
push
cmp
popa
pop
jle
inc
cmp
adc
mov
dec
ljmp
cmp
test
and
lahf
popf
and
ja
int3
inc
and
jge
mov
in
daa
adc
leave
scas
cmpb
adc
push
jge
mov
jge
sahf
dec
sub
cmc
test
add
jp
adc
hlt
xchg
mov
xchg
jbe
fiadds
mov
dec
fldt
jge
sbb
cmp
xor
add
or
out
or
mov
xchg
jnp
popa
jnp
jns
xchg
push
xchg
stos
xor
ficomps
pop
insb
cld
push
nop
fcompl
mov
sbb
jns
out
pop
add
pop
sbb
adc
inc
inc
and
sub
fldenv
add
fsts
cmpsb
xor
cmp
inc
dec
pop
lods
fstpl
inc
push
inc
pushf
jg
movsl
jmp
orl
stc
xorb
lds
or
es
pop
push
stos
mov
xchg
adc
xor
mov
aas
add
mov
cmp
loope
push
xchg
in
jge
and
lcall
jg
sbb
inc
jnp
out
inc
decl
int
mov
mov
outsb
es
cmp
mov
repnz
push
lcall
sub
popa
cs
xor
sbb
mov
xchg
adc
aam
scas
lret
fnsave
es
push
and
bound
lods
lods
test
arpl
push
das
enter
pop
or
loop
pusha
fildll
and
lds
add
mov
mov
mov
cwtl
xchg
insl
faddl
dec
jne
pop
sar
lods
push
ret
fcmovb
ja
dec
jle
mov
adc
xchg
cli
xchg
scas
scas
xchg
incb
test
adc
cmp
adc
shrl
dec
jp
mov
aam
dec
int3
jb
mov
push
pop
sahf
push
cmp
or
outsb
test
insl
cmp
cmp
loope
das
imul
adc
pop
sti
push
iret
data16
sti
jmp
clc
lahf
arpl
jno
mov
lret
cmp
lret
sbb
int3
nop
bound
js
jmp
inc
sub
out
in
or
inc
push
cmp
jg
lcall
add
cld
pusha
sub
jge
and
add
movsb
pop
testb
cwtl
das
mov
and
mov
inc
imul
jp
lcall
and
jg
dec
xchg
add
in
cmpsb
cmp
jb
loopne
adcb
lahf
int
iret
xlat
cmp
dec
and
mov
adc
xor
push
mov
and
and
mov
and
test
cs
mov
int3
push
cmp
mov
xchg
jo
dec
stos
int
sbb
jmp
adc
adc
lods
imul
imull
xchg
cmpsl
into
jb
scas
les
jge
add
loopne
imul
adc
shlb
sub
mov
addr16
jp
aam
dec
dec
loopne
int
mov
call
lods
sti
fwait
punpckhwd
rorl
dec
jo
test
cmp
enter
pushf
xchg
test
pop
inc
or
jo
xor
scas
repz
test
sub
call
mov
fdivrl
lods
test
sbb
push
mov
dec
clc
xchg
jbe
jmp
or
adc
xor
out
xor
ud2
jg
rorb
push
sub
jl
cmp
retw
mov
xchg
js
insb
jb
sti
xor
test
add
icebp
sti
imul
push
out
push
xor
fcomi
mov
ret
jge
js
inc
pop
in
scas
inc
std
sub
scas
lahf
cs
adc
pop
out
call
rep
mov
shll
lret
cmpsl
lea
stos
pop
fimuls
out
dec
scas
jo
cmp
push
movsl
jl
incb
and
testb
push
iret
ja
subl
mov
xlat
dec
ss
sbb
and
xchg
subl
dec
vpunpckldq
lds
lods
pop
push
sbb
icebp
fsts
jne
and
cld
mov
les
sbb
and
push
lods
fildl
add
pusha
jl
idivb
adc
mov
out
cmc
shrl
xor
push
aad
adc
mov
fsubr
or
pop
mov
mov
lock
outsb
mov
mov
mov
jbe
test
xchg
xor
mov
fistl
dec
mov
jb
and
cmpsb
les
stc
movzbl
sti
pop
inc
loop
dec
xchg
pop
lods
mov
iret
xor
adc
fwait
mov
xchg
mov
sbb
jge
nop
mov
int
pop
les
insb
test
adc
daa
ss
fwait
add
pop
sbb
cmp
icebp
fstpt
aam
dec
aaa
jl
out
jmp
mov
mov
mov
stc
adc
xchg
jp
mov
sti
adc
xchg
push
jo
jns
sub
cltd
aas
jno
fmull
xchg
iret
aam
stc
adc
inc
xor
es
fisttps
daa
inc
adc
out
xorb
cld
mov
push
mov
adc
in
scas
fsubs
andb
shlb
js
int
scas
mov
orb
into
in
ljmp
ds
nop
cwtl
fs
inc
sti
addr16
loopne
fwait
enter
shl
lds
sahf
inc
repnz
pop
inc
gs
sbb
pushf
mov
dec
mov
jne
movsb
push
mov
dec
repnz
mov
out
aas
out
ljmp
add
xchg
xchg
outsl
ret
mov
jg
pop
cmp
loopne
popf
out
mov
and
push
pop
add
nop
sti
js
and
mov
add
push
adc
iret
sarb
cmpsb
frstor
bound
adc
clc
mov
sub
mov
lods
ror
fwait
mov
mov
es
testb
cmpl
cmc
jns
push
adc
or
push
popf
and
out
sbb
movsl
push
jg
adc
sbb
adc
lahf
shr
cwtl
cmpsb
sbbl
insl
cltd
ret
push
clc
test
ret
dec
movsb
jns
sub
loopne
push
mov
mov
jb
out
inc
mov
pop
in
mov
fsubl
mov
mov
jecxz
adc
mov
push
push
push
xchg
and
mov
adc
pop
adc
pop
lret
pop
lods
popf
pop
push
xchg
cmp
inc
sub
in
int
loope
inc
lods
shll
loop
movsl
sbb
dec
pop
or
push
into
popf
jg
dec
xor
sbb
inc
sbb
rclb
add
cmpsb
fldl
arpl
lods
cmp
and
and
pop
flds
mov
and
and
test
and
clc
dec
sub
out
inc
out
test
xor
mov
and
mov
addb
mov
xchg
in
push
xor
mov
repz
push
ja
mov
movsl
mov
adc
lss
inc
sbb
push
scas
lret
pop
jnp
bound
cmp
movsl
push
jns,pn
mov
lret
jg
push
ss
popf
stos
mov
jge
inc
cmpsb
les
pop
adc
out
and
mov
sbb
xor
sub
mov
sbb
lods
data16
xchg
and
fwait
xchg
rcrb
test
jb
orl
pop
jo
lcall
sti
jp
testb
jne
lahf
aad
mov
mov
out
mov
cmp
mov
and
std
cmp
xor
inc
pushf
jg
jge
xchg
dec
sti
pop
xor
andnps
jecxz
mov
mov
xchg
mov
inc
inc
int
push
cmovl
mov
outsb
leave
clc
cmp
mov
mul
dec
lcall
call
filds
inc
das
adc
and
test
outsl
repz
adc
roll
shlb
push
inc
data16
mov
push
cmp
and
or
insl
pop
je
push
lret
fldl
sbb
mov
rcr
notb
jae
hlt
or
cmc
mov
ret
push
dec
hlt
repz
xor
inc
lret
pusha
ljmp
out
repz
mov
jg
in
movlps
insb
repnz
push
movsl
mov
pop
xchg
or
sti
cmpsb
push
sub
and
cltd
sbb
adc
cmpsl
sub
les
sub
sbb
mov
call
aam
mov
jecxz
lods
mov
insb
mov
sbbl
je
ret
mov
test
arpl
pop
inc
test
cmp
out
arpl
sub
xchg
sub
mov
sahf
das
test
and
insl
jne
cmpsl
movsl
jns
pop
pop
xor
or
mov
roll
or
mov
outsl
sub
lret
jbe
sub
sti
push
mov
call
mov
and
inc
jl
ja
bound
adc
or
mov
ss
fildll
or
push
fildl
or
xchg
xchg
xor
xor
out
mov
test
dec
pop
ret
pop
cmpsb
lahf
lods
insb
mov
xchg
cld
mov
add
dec
mov
adc
cltd
inc
jl
in
sbb
cmp
sbb
xor
fisttpll
fcompl
loop
xchg
sbb
movsl
ja
jp
pop
bound
mov
mov
inc
dec
test
rorb
or
mov
lret
divb
add
pop
shl
inc
cs
cmp
lahf
dec
jmp
mov
inc
pop
lds
push
pop
inc
cmpsb
aad
cmp
aas
sbb
stc
pop
mov
jne
mov
aad
or
cli
clc
jne
cltd
rolb
sub
lock
mov
das
data16
jbe
ljmp
add
mov
and
mov
addr16
adc
xlat
xor
fnsave
push
call
mov
adc
mov
fsubrs
sbb
fcmove
push
push
push
lahf
dec
sbb
pusha
push
cmp
jns
or
int3
xor
aas
cld
cs
add
sbbl
pop
push
daa
loopne
jmp
dec
add
xor
mov
ret
roll
data16
mov
pop
jne
xchg
data16
and
jl
test
mov
cmp
mov
push
mov
je
sub
dec
jno
inc
jno
rcll
cmp
scas
inc
ja
repz
out
push
test
mov
xchg
scas
out
xor
or
in
bnd
add
insb
inc
mov
aad
dec
mov
mov
ds
inc
imul
dec
jbe
add
push
and
xor
in
rcll
jo
ds
jle
cmp
xchg
in
rcrl
mov
add
sub
mov
jne
mov
js
xor
fld
dec
sahf
xor
adc
mov
jecxz
jae
or
xchg
lahf
sbb
add
mov
sahf
pop
cs
ret
xchg
fcoml
inc
inc
xchg
mov
je
dec
cmp
popf
arpl
into
fbld
or
pop
test
imul
sbb
std
fsincos
imul
add
lods
or
ss
iret
push
popf
push
jne
and
fbstp
push
cmp
arpl
pop
cmpsb
push
sub
mov
out
xor
das
sub
xor
and
xorb
sub
pop
scas
call
jns
add
pop
pop
loop
gs
and
test
in
lock
jae
cltd
mov
xlat
fsubl
xchg
notl
or
shlb
negb
pop
inc
and
mov
mov
aaa
test
inc
mov
push
test
fwait
in
cli
fisttpll
popa
stos
mov
shl
iret
xlat
xchg
loope
leave
push
xchg
mov
mov
pop
inc
popa
inc
pop
pop
or
xchg
or
sub
fcomip
dec
outsb
mov
lods
out
jp
mov
mov
movsl
or
jne
jb
pusha
lods
fdivrs
xchg
or
into
mov
xchg
pop
adc
shll
sbbb
jno
dec
and
mov
jp
xchg
xchg
mov
loop
notl
add
pusha
int
sub
or
pushf
jae
test
fildl
mov
cli
jns
mov
pop
lock
jo
push
cmpsb
jp
rorl
inc
lods
push
xchg
ds
aas
inc
repz
fidivrl
jno
sub
lahf
mov
stc
dec
mov
add
in
xchg
scas
in
sar
sbb
mov
icebp
xorl
dec
rcrb
jae
or
add
ret
and
fildl
aaa
dec
push
ficoml
mov
cmp
jp
sub
ss
cmp
mov
addb
pop
cmp
xchg
dec
add
mov
xchg
lock
insl
aas
lret
sbbb
sarl
xor
aas
lahf
dec
aaa
sub
sub
stos
dec
jo
pop
in
gs
loopne
std
push
mov
lods
xchg
sub
sbbl
jne
out
lds
test
lods
scas
sub
daa
cltd
jmp
mov
test
and
mov
into
and
xchg
stos
test
call
subb
xchg
jno
inc
sub
pop
or
or
mov
scas
ljmp
push
stos
movsb
repnz
pop
icebp
stos
arpl
or
mov
insl
or
xor
pop
and
aaa
ret
sub
fcoms
push
xor
pop
pushf
or
scas
add
mov
mov
add
pop
fstpt
repz
add
jno
xor
cmp
sbb
add
repz
in
adc
out
shlb
add
enter
mov
cs
mov
int
lea
and
arpl
mov
add
in
sub
fdiv
sbb
xor
gs
adc
mov
adc
xchg
cmc
dec
mov
inc
and
add
iret
hlt
subl
jmp
out
mov
das
mov
dec
aam
mov
jle
or
push
outsl
push
lret
imul
fs
imul
fiadds
jle
inc
pop
cmpsb
mov
sbb
popf
mov
mov
int
aas
cmpsl
aaa
jecxz
stos
lods
repz
fiaddl
push
subl
xchg
int
ret
lret
les
stos
inc
lea
pop
mov
loope
je
xchg
xor
insl
dec
fdivrs
addb
cmp
xor
es
lcall
in
adcb
mov
xchg
mov
add
es
leave
xchg
insb
pop
dec
pop
mov
es
xor
iret
cmpsl
sub
push
faddl
add
cmp
in
push
jbe
lods
cmp
adc
fidivrl
jl
inc
push
data16
mov
dec
mov
pop
xchg
test
lods
jmp
adc
ja
mov
xlat
adc
mov
sbb
push
or
inc
cmc
iret
xor
inc
xchg
jb
add
sti
xchg
jbe
xor
popa
inc
jmp
addl
into
inc
mov
sub
xor
xchg
test
mov
xor
mov
adc
mov
mov
adc
cmp
sbb
xchg
pminub
cli
push
ror
rorl
or
ljmp
adc
xor
pop
out
add
push
dec
jne
nop
mov
int3
mov
dec
stos
and
out
mov
xchg
aad
repz
pop
or
ds
mov
push
and
push
push
xor
or
mov
int3
and
das
fwait
lea
xlat
test
rorl
dec
flds
pop
adc
aaa
push
iret
mov
sbb
outsl
mov
jb
stos
and
inc
xchg
pushf
mov
jecxz
fadds
test
sbb
cmp
add
or
in
xchg
enter
add
stos
faddl
out
sar
and
inc
sbb
repz
dec
call
shrl
std
iret
leave
mov
or
out
iret
divb
insl
repnz
fdivl
adc
xchg
popf
dec
clc
pop
fwait
cmp
inc
jp
jle
pushf
out
jno
test
gs
mov
into
mov
xlat
stc
push
loopne
out
outsb
pushf
jle
xchg
xchg
jg
aas
shrb
sub
ljmp
popf
xor
jnp
leave
mov
xchg
cmpsb
cmpb
xchg
dec
lahf
lea
jmp
pop
pop
ljmp
and
insb
or
mov
stos
pop
fsubs
mov
ljmp
int3
cld
clc
mov
insb
movsb
nop
jnp
add
ror
mov
cmp
mov
mov
subb
in
mov
stc
pop
push
rorl
in
into
addr16
ffreep
pop
lcall
pop
xor
rorb
lahf
cmpsl
fidivrl
fcompp
inc
aaa
sub
mov
in
fisubrl
imul
xchg
loopne
pusha
mov
call
out
call
cld
jno
and
jb
adc
xor
cmp
sbb
xchg
xor
ret
popf
aam
test
xchg
jle
lcall
cltd
pop
jecxz
cld
mov
jb
ffreep
xchg
adc
pusha
jbe
andnps
jge
gs
lcall
or
jg
insl
out
fs
and
push
sub
cmp
addl
jp
cs
pop
fisubrs
jmp
mov
pop
push
xor
pop
repnz
xor
mov
icebp
outsb
outsl
add
dec
jno
dec
lret
gs
push
inc
mov
jge
pop
cmp
mov
xchg
push
pop
cmp
fcomp
ljmp
lret
pop
int
out
inc
imul
cmp
leave
scas
pushf
ret
sbb
sahf
rorl
dec
addr16
inc
xchg
mov
sarb
jbe
cmp
xchg
int3
and
mov
jmp
cld
in
imul
int
test
sub
cmp
xchg
sub
dec
pop
or
jmp
push
frstor
pop
aad
pop
loop
jns
xchg
pop
push
mov
cld
mov
or
mov
lret
cmpsb
imul
cmp
iret
outsl
cli
test
call
jg
jo
loopne
test
outsb
xchg
mov
pop
cmp
mov
sbb
xorb
fwait
lods
lcall
sub
add
mov
sbb
jecxz
int
repz
jmp
dec
push
decl
lods
in
movsl
adc
mov
mov
or
mov
sbb
push
cmp
inc
and
popf
or
fsubr
aam
mov
sbb
mov
fstps
cmp
pop
mov
hlt
jno
xchg
cmpsl
xchg
stos
xchg
mov
mov
cmpsl
lahf
test
divl
movsb
push
aas
push
add
dec
inc
add
mov
cli
push
in
rcrb
and
lret
test
movsl
adc
or
leave
movsb
push
and
lock
lret
jmp
inc
es
loop
pop
je
outsl
addr16
sahf
aas
push
insl
sbb
js
in
and
daa
sti
aad
fdivl
loop
mov
pop
iret
adc
jge
mov
ss
ss
aad
push
or
ret
lods
sub
dec
repnz
out
cmp
mov
lahf
adc
cwtl
mov
sub
adc
and
das
mov
rolb
inc
pusha
scas
aaa
adc
outsb
xor
mov
subb
fwait
leave
add
pushf
dec
das
andl
call
imul
fdivl
fwait
cli
mov
fwait
mull
stc
cmp
sbb
lods
dec
cwtl
movsl
popa
cltd
sub
mov
dec
mov
pop
call
dec
xor
inc
and
push
and
pop
ljmp
sub
fadds
dec
sbb
mov
movsl
mov
mov
fs
ret
cmp
sbb
test
out
xlat
fsubrs
pushf
dec
nop
sbbb
and
pushf
pop
xlat
mov
cmp
stos
pop
cmpsb
in
cmp
cmp
mov
cld
xchg
rorb
outsb
lret
push
jbe
out
scas
call
dec
jnp
dec
outsb
hlt
push
mov
jecxz
adc
dec
mov
divb
mov
jb
gs
mov
pop
cli
repz
xor
fwait
ds
dec
out
pushf
fistpll
scas
adcb
fwait
je
movsb
ret
mov
mov
cli
mov
fs
push
xchg
mov
cmp
nop
mov
imull
adc
repz
ljmp
clc
add
or
mov
jae
or
push
adc
sub
ds
sbb
mov
cmp
andl
cmp
aaa
scas
xor
sub
add
mov
js
lcall
and
js
pop
mov
dec
lcall
xchg
xor
div
in
jecxz
cmpsb
ret
adc
push
out
inc
dec
mov
or
push
scas
fwait
mov
lret
push
mov
jne
repnz
mov
adc
cltd
in
je
xchg
loop
iret
stos
lds
or
jb
mov
xor
bound
je
sbb
jmp
outsl
pop
jmp
adc
fs
jns
int
mov
out
jmp
mov
fisttpl
sub
inc
pop
aaa
data16
push
mov
daa
cmp
fs
xor
stos
dec
sahf
xor
and
pop
aas
lods
mov
and
pop
es
xchg
mov
insl
cld
mov
pop
mov
testb
mov
cmp
sub
ret
in
push
pop
push
sbb
cmp
je
cmp
repz
xchg
aaa
jge
cmp
ficompl
pop
sbb
push
or
in
stc
fs
xor
cltd
xor
and
sbb
cld
push
push
mov
loope
shrl
lret
pop
mov
dec
xchg
mov
or
add
mov
test
imul
mov
pop
xchg
fsubr
and
shll
push
cmp
popa
gs
lods
xlat
cld
cld
leave
ljmp
popf
inc
mov
cmp
ret
jmp
or
daa
mov
dec
xlat
test
bound
out
or
sub
adc
dec
sbb
call
cld
daa
or
mov
or
ret
scas
mov
nop
mov
imul
cmp
push
or
lds
stos
cmp
pop
repnz
test
fwait
addb
lods
sub
jns
icebp
enter
bound
int
mov
fmull
xor
sbb
jo
sbb
shl
jno
pop
mov
dec
ret
or
jns
jge
testl
into
pop
jbe
sub
mov
ret
sub
add
pop
xor
cwtl
jge
stos
lds
add
subb
pop
repz
idiv
mov
mov
add
mov
leave
xchg
fwait
es
clc
push
mov
loopne
xor
sbb
jmp
push
addr16
lods
movsl
movsl
ret
pushf
stos
mov
sahf
push
aam
mov
outsb
dec
jecxz
cld
insb
jno
inc
pop
scas
inc
fnstcw
sub
jmp
jae
jle
jae
jp
divb
lea
and
lret
mov
mov
push
add
pop
insb
mov
dec
lcall
sbb
in
push
push
daa
jno
aas
in
loope
loopne
push
daa
mov
push
sbb
adc
xchg
mov
push
ret
ret
xor
push
lock
shll
lock
dec
cmpsb
pop
lock
test
mov
sub
lret
mov
mov
dec
andl
pop
sub
push
pop
jno
lock
daa
xchg
inc
adc
iret
arpl
loopne
cwtl
xchg
lods
sbb
and
mull
mov
add
xor
add
shll
xor
xchg
and
pop
cli
push
cld
dec
inc
xchg
fisubl
in
push
inc
call
xchg
insb
mov
les
cs
das
es
xor
cmc
push
inc
or
call
in
test
push
sti
cmpb
lds
cmp
pop
dec
cwtl
jae
fcomi
jne
stos
xchg
xor
cs
cmp
push
in
mov
and
jno
std
or
xchg
lret
int
dec
pop
cmpsb
test
es
or
jg
xchg
fisttpll
push
add
lock
icebp
daa
psllw
mov
cmp
das
hlt
pop
lods
push
leave
mov
sbb
into
int3
out
movsl
popf
pushf
xor
xlat
push
in
add
cltd
movsb
in
pop
popa
xlat
jl
pop
sarb
xor
hlt
out
imul
ror
push
add
mov
cmp
push
cmp
cmpsb
loop
bound
pop
pop
add
jb
aas
addr16
xchg
xor
stc
mov
stos
sbb
inc
test
stos
push
sbb
cmp
stos
lahf
lock
dec
jns
and
mov
andl
enter
or
pop
xor
xchg
inc
ret
xor
sbb
jae
cli
jp
in
pop
jbe
jb
push
call
dec
xchg
or
and
idivl
xchg
push
shll
in
mov
mov
pop
xor
mov
jbe
sbb
inc
jp
rcrl
inc
aas
inc
pop
test
fistl
push
mov
mov
mov
lods
and
sar
dec
jbe
ja
cs
pop
in
cs
xor
je
sub
aad
jge
xor
xor
std
xchg
adc
dec
test
ja
inc
cmpb
mov
popf
daa
rorl
mov
cmp
les
in
mov
rclb
push
loopne
movsb
stos
cmp
into
les
clc
jecxz
xor
repz
stos
popa
out
lcall
stos
cmp
stc
mov
fcoml
push
imul
sbb
data16
sbb
aaa
mov
out
adc
outsl
lret
rcl
ds
sbb
repz
pop
sub
lods
lret
cwtl
inc
rorb
jp
aad
pop
in
sbb
or
mov
lret
inc
idivl
rol
test
mov
ss
xor
add
adc
sub
les
cli
popa
push
js
sub
inc
inc
pop
fidivrs
or
fisttpll
mov
xor
unpckhps
fbld
mov
mov
sub
out
and
push
lds
xor
je
push
jns
lods
adc
in
clc
fistl
les
mov
and
icebp
setp
jmp
ljmp
outsb
sbb
lcall
cmp
add
push
or
mov
and
xor
mov
dec
or
arpl
imul
and
jns
roll
jmp
sbb
std
mov
inc
into
into
ds
xor
push
inc
aam
movsl
xchg
aas
sub
push
and
movsl
mov
jo
icebp
pop
lret
add
aam
ficompl
repz
in
or
lret
iret
cltd
scas
jecxz
hlt
enter
pop
into
push
pop
mov
outsl
pop
repz
dec
or
hlt
fucomi
icebp
lcall
rol
inc
mov
mov
es
insl
inc
in
adc
sub
add
jle
xchg
xor
and
xchg
jns
sbb
inc
pop
lods
mov
in
outsl
pop
or
es
mov
ljmp
in
repnz
xor
adc
stos
sbb
fisttpll
movsb
cmp
loope
roll
push
mov
adc
inc
adc
lahf
dec
pop
and
adc
in
jmp
insb
iret
and
mov
daa
mov
and
push
call
cli
test
mov
inc
add
cli
js
and
mov
hlt
enter
jg
add
jb
divb
mov
hlt
aaa
xor
sbb
add
cmc
push
lds
jae
jne
mov
inc
or
inc
mov
sub
push
ret
dec
pop
jno
push
out
jns
mov
stos
push
mov
ret
pop
xchg
pop
loope
stos
in
xor
xchg
in
inc
loop
les
sti
pop
and
repz
fsub
ds
mov
subb
test
decb
adc
xchg
dec
lds
mov
rorl
rclb
push
out
testl
mov
int
xchg
jns
inc
icebp
or
sub
mov
push
or
pop
sbb
inc
cli
mov
add
and
loope
sbb
add
mov
cmp
dec
cmp
outsb
les
int
aam
push
fsubr
lcall
ficompl
and
je
jne
cmc
rorl
or
lods
ret
ja
into
into
sub
scas
std
aam
fldpi
testb
rorb
push
shl
mov
jge
inc
dec
jbe
xlat
popa
mov
cmp
inc
pop
insb
shr
ja
ret
mov
mov
in
ret
sbb
adc
iret
adc
sub
inc
mov
std
out
cmpsl
dec
xchg
ja
jmp
dec
xor
xchg
xor
push
add
ja
mov
jmp
inc
mov
nop
pop
or
pop
xor
sbb
ljmp
jne
je
in
ss
hlt
vandnps
iret
insl
hlt
sub
bound
mov
push
inc
xchg
dec
ja
ret
in
cmp
sbb
mov
es
fmul
imull
sub
mov
xorb
call
shll
movsl
popf
xor
shlb
scas
mov
dec
xchg
sub
pop
je
xchg
or
push
inc
pop
xchg
sbb
fnstcw
fwait
dec
add
cltd
jle
lods
xchg
movsb
shrb
push
sbb
inc
adc
stos
mov
cmp
rorb
jl
popa
test
or
push
or
repz
xor
enter
ss
rcll
pop
lods
push
push
adc
out
bound
mov
stos
lcall
hlt
sahf
and
incb
mov
jbe
sbb
sbb
outsb
movsl
pop
rcr
pcmpeqb
ja
movsb
les
sahf
sub
imul
test
mov
inc
mov
inc
push
int
push
cltd
loope
movsl
push
mul
fwait
mov
icebp
and
jmp
sti
push
dec
scas
test
and
push
mov
cli
sti
add
repnz
pop
push
cmp
subb
adc
imul
cmp
jp
sbb
pop
xchg
sub
xchg
push
js
adc
mov
and
xchg
enter
es
or
addr16
dec
dec
push
test
test
stc
push
ret
sahf
xchg
insl
sbb
dec
stc
addb
daa
xor
and
test
lcall
sahf
testb
ljmp
in
jg
adc
dec
mov
out
lock
data16
pop
outsl
ds
aas
mull
lods
fsubrl
lahf
hlt
xchg
adc
inc
xchg
daa
dec
dec
shl
in
mov
xchg
stos
subb
loope
bound
mov
je
fucomp
xor
shrb
pop
insl
adcb
inc
rclb
cs
sarl
lret
in
lret
and
aad
xchg
into
int3
sbb
adc
pop
popa
addb
mov
cmpsb
cmpsl
mov
pop
movsb
mov
out
mov
ja
inc
xlat
and
mov
cmp
sub
xchg
jbe
xchg
cltd
mov
xor
dec
inc
orb
lcall
rcl
sarl
out
jae
ss
mov
daa
push
popf
fnstcw
sub
lcall
sti
ljmp
dec
push
or
fisttpll
inc
cmp
push
movsb
and
xchg
in
test
push
jmp
inc
mov
arpl
fildl
ljmp
and
or
mov
dec
or
xchg
aas
hlt
andl
into
cmp
or
and
cmp
test
xchg
xchg
xchg
pop
push
jg
cs
adc
and
icebp
in
push
insb
and
subb
inc
roll
add
add
call
dec
cs
adc
mov
cli
stos
inc
or
dec
ret
rolb
addr16
shrl
adc
sbb
out
push
icebp
pop
ss
mov
negb
addr16
jbe
push
das
push
dec
jo
mov
popa
aaa
pop
mov
mov
and
pop
mov
pop
mov
push
je
dec
addr16
fwait
cmp
or
push
xchg
or
pop
xchg
clc
in
popf
sbbb
fisubrs
sub
sbb
out
and
push
cwtl
push
adc
jg
movsl
aas
adc
cltd
mov
dec
das
ljmp
lahf
mov
mov
mov
sub
push
push
sub
mov
std
mov
mov
pop
mov
sbb
out
pop
pusha
sti
nop
add
loopne
or
int3
cmp
in
lods
mov
out
sub
fstpl
sbbb
push
loop
jge
lahf
adc
stos
adc
stos
insl
cs
push
loop
shll
xchg
popf
repz
jne
and
mov
push
movl
xor
or
pop
hlt
mov
rcrb
xchg
imul
cmp
mov
push
xchg
jecxz
js
les
xor
lods
sub
out
jge
dec
aam
pushw
outsl
sti
mov
push
pop
mov
dec
sub
test
lods
insl
push
jecxz
add
xor
xor
mov
mov
gs
lods
loop
adc
cld
aam
cmpb
mov
addl
mov
inc
sub
jae
mov
icebp
push
jge
xchg
mov
jmp
fbld
mov
inc
pop
and
repz
lahf
xor
lcall
ret
sub
xchg
sbb
in
push
sub
or
push
adc
mov
lret
addr16
sahf
adc
mov
loop
push
hlt
lock
lods
sbb
jb
adc
in
push
mov
sub
pop
fldl
sub
orl
add
push
sahf
cwtl
pop
jno
xchg
jle
xchg
fcmovne
ret
rcrl
mov
pop
xchg
cmpsl
ret
call
nop
xor
jp
daa
sbbl
std
or
leave
adc
sarb
adc
mov
xor
and
cltd
cli
adc
pop
push
lcall
outsl
jp
ds
js
scas
sub
pop
pop
adc
lret
jg
movsb
xor
ja
inc
or
jecxz
xor
push
fistpll
xchg
scas
or
test
out
popa
cmp
pop
xlat
lahf
xlat
dec
loop
mov
ret
pop
mov
andl
orb
in
movd
in
pop
repz
mov
xchg
jg
inc
jnp
test
sbbb
jg
cmpl
icebp
addb
ret
das
cmp
cmp
xor
pop
cmpsl
outsb
dec
cmc
repz
push
sbb
int3
mov
sbbb
pop
xor
cmpsl
pusha
rcll
and
xor
fsubs
dec
cs
or
inc
push
les
pop
mov
lock
push
push
pop
jo
scas
jne
and
push
pop
xchg
imul
sarb
push
push
jnp
push
inc
in
pextrw
pop
xor
dec
add
fcmovb
ja
xchg
mov
mov
pop
imul
ja
aam
or
xlat
outsb
dec
cmp
repz
jne
jmp
je
push
sub
mov
enter
dec
lea
repz
pop
or
fcmovnb
push
jecxz
adc
mov
dec
fs
xchg
or
jg
dec
jge
jg
jae
bnd
in
into
sti
pop
dec
mov
test
dec
cs
mov
jp
aas
sub
int3
and
cmp
fstp
daa
mov
sbb
lods
pop
fsubrs
hlt
xor
ficompl
mov
mov
mov
shrb
sti
fcmovbe
mov
and
sbb
ja
pop
inc
jb
out
mov
jge
mov
add
mov
pop
sbb
xchg
inc
lds
std
push
in
xor
xlat
mov
adc
cmp
xchg
daa
shlb
cmp
lcall
push
sahf
inc
sbb
out
jne
sbb
cli
aas
xchg
jnp
pop
xchg
jle
mov
mov
imul
lahf
sub
sub
lea
int
add
mov
stos
sbb
stc
out
inc
sbb
or
shlb
pop
addl
test
rcll
outsl
pop
dec
jecxz
insl
push
js
out
scas
daa
cld
fcoms
pop
inc
ror
icebp
sbb
dec
dec
push
xor
xchg
cmp
int3
addb
push
mov
fidivs
rcrb
in
addr16
xchg
insl
dec
add
dec
inc
add
addr16
push
push
cmpsl
and
cmc
sbb
in
mov
mov
mov
loop
out
sbb
test
xchg
pushf
pop
addr16
daa
icebp
out
xchg
inc
jg
or
je
decb
xchg
out
and
adc
pop
sbb
sbb
xor
mov
negl
push
loope
add
arpl
push
outsb
push
sarl
and
mov
or
and
test
cs
or
cmp
pop
jecxz
jno
add
outsb
sbb
jl
jno
ljmp
mov
mov
imul
ja
cmp
sbb
in
xor
sbbl
xchg
stos
addb
pop
jne
ljmp
xchg
cli
push
jno
sbb
xlat
mov
mov
int3
jmp
mov
popf
mov
jns
lcall
and
je
dec
orl
add
mov
call
cwtl
xor
dec
lret
ja
arpl
enter
fpatan
push
sub
mov
das
jmp
ss
sbb
pushf
cwtl
xchg
jmp
jno
cmc
jp
cs
gs
mov
push
pusha
mov
mov
out
addl
fdiv
int3
stos
stos
and
xchg
or
or
sbb
repz
mov
xchg
fwait
push
inc
test
ja
cmp
inc
cmp
jg
inc
shrl
nop
cmpb
stc
shlb
cmc
mov
xor
jb
dec
rorb
fcomps
xchg
mov
xor
push
pushf
test
sub
pop
dec
inc
xor
cmpsb
mov
sarl
or
pop
test
scas
pop
lods
rorl
sahf
out
push
test
pop
inc
push
or
sbb
movsb
xchg
push
call
iret
xor
out
pop
pop
push
push
fmuls
lret
sarl
fiaddl
push
mov
mov
adc
pop
aam
into
push
stos
dec
push
leave
inc
imul
outsb
daa
cmp
clc
mov
push
in
mov
sub
xchg
xchg
ror
add
sub
and
outsb
inc
js
stc
pop
dec
lret
sub
sub
xor
xchg
dec
hlt
movl
ss
sub
push
xchg
mov
xchg
cmp
inc
mov
rorb
frstor
jecxz
mov
dec
out
sub
mov
fdivrl
ja
mov
pop
mov
lret
aaa
lret
push
xchg
addb
add
push
bound
xor
pusha
mov
stos
idiv
ffreep
mov
out
cmpsl
mov
and
fsubrl
push
dec
out
insl
mov
out
addb
sub
or
jg
arpl
xor
mov
sbb
stos
mov
mov
test
mov
gs
mov
addr16
jge
xor
jbe
xchg
jbe
push
fldt
outsl
adc
adc
mov
test
push
push
xchg
popa
aam
mov
mov
and
iret
mov
cmovg
lods
xlat
and
das
jae
cmp
mov
scas
cli
push
rcl
inc
mov
dec
mov
jg
mov
loope
hlt
inc
fwait
decb
sbb
and
scas
icebp
push
or
aaa
andb
jecxz
lcall
and
add
sub
inc
push
pop
and
or
mov
dec
sarl
push
mov
popa
jge
je
ret
std
stos
mov
fmuls
push
jae
stc
fcmovbe
sub
je
sub
shlb
fsub
ret
data16
lds
movsb
cld
inc
pop
add
mov
mov
push
mov
cmp
in
ds
fs
lea
pop
add
or
lret
jo
outsb
adc
cmp
and
imul
divl
idiv
jne
pop
xchg
rcll
dec
into
add
imul
push
xor
jge
arpl
fs
aas
adc
jp
sbb
std
xor
addr16
fsubs
iret
call
jp
aas
repnz
or
ja
out
movsl
mov
mov
sbb
call
push
dec
stos
and
and
clc
aas
cmp
mov
adc
pop
nopl
dec
aad
incl
inc
push
addr16
popf
pop
pusha
adc
addr16
cmp
mov
movb
adc
subl
in
lret
inc
jb
lret
insl
jo,pt
repnz
inc
pusha
sub
cmp
jno
sbb
loop
in
pop
and
ss
scas
ja
mov
out
jb
mov
jge
inc
jae
dec
xor
in
aam
pop
pop
adc
sti
dec
jmp
mov
movsb
mov
mov
lea
and
lock
loopne
inc
les
lea
cmp
cmp
xchg
hlt
add
inc
xchg
adc
adc
push
rcrl
push
xchg
push
sub
xchg
xor
pop
fadds
pop
rcrl
mov
hlt
sub
std
adc
fdivrl
loope
popa
xor
int3
and
ljmp
inc
fnstenv
out
test
ja
mov
mov
js
inc
cmp
out
lods
lahf
jecxz
push
mov
mov
fs
jmp
mov
push
aaa
lock
cmp
pusha
jmp
fsub
sub
int
or
mov
xor
dec
sub
int
cmp
xor
mov
xor
and
pop
cmpsb
add
mov
and
jbe
xchg
in
mov
test
jmp
lods
jmp
jge
out
test
jl
std
nop
addr16
add
push
or
xor
inc
test
cmp
push
outsl
daa
and
cld
loopne
repnz
xchg
shlb
jp
mov
dec
mov
nop
aam
scas
mov
or
ja
inc
stc
ja
pop
and
stos
add
int
call
push
adc
cmp
arpl
loopne
fs
mov
ss
daa
jb
dec
daa
test
mov
loope
je
adc
js
repz
pop
sbb
add
imul
divl
fisttpl
lods
sti
jb
mov
inc
and
jbe
cmp
cmp
aam
and
cld
in
bound
jb
addr16
popf
fcoml
popf
dec
test
or
cs
sub
mov
push
and
dec
xacquire
out
int
lahf
iret
inc
loop
push
out
xlat
add
mov
or
inc
jl
std
nop
mov
cmpsb
out
mov
xchg
push
pop
sub
mov
test
xor
dec
jb
xchg
adc
inc
pop
iret
inc
inc
pop
mov
repnz
subl
jne
add
xorl
imul
xchg
adc
sub
sub
fs
jae
imul
in
mov
rcrl
dec
mov
inc
jecxz
sbb
ret
push
mov
xchg
inc
pop
push
or
jnp
lcall
test
mov
push
inc
mov
test
ss
clc
mov
mov
and
movsb
mov
insb
inc
roll
sti
xchg
pop
insb
jecxz
xchg
mov
xchg
add
sti
int
adc
sar
aad
in
sbb
inc
inc
aas
mov
mov
cmp
mov
dec
cltd
mov
not
pop
into
rcl
negl
xor
dec
ds
xchg
push
jge
flds
pop
dec
inc
and
xchg
xor
mov
outsb
popf
mov
xor
dec
and
cmp
xor
push
dec
sub
lods
mov
dec
imul
mov
push
fdivs
aaa
xchg
or
sub
adc
pop
imulb
add
fucom
ljmp
add
push
jo
mov
testl
fwait
jo
xor
push
xor
out
cmp
pop
add
mov
mov
das
jbe
scas
mov
jecxz
push
jns
loope
imul
push
movsl
push
add
sub
aad
jp
add
jge
lods
sbb
cld
cmpsb
inc
mov
jnp
aam
sub
push
repnz
push
fisubs
out
lret
jno
aas
mov
and
idivb
mov
jge
jp
mov
aaa
decl
mov
jecxz
daa
lock
sbbb
jns
outsl
or
jl
out
pop
movhps
mov
jnp
fisttpll
ja
cld
dec
xchg
pop
in
or
and
scas
nop
inc
inc
stc
out
stc
aam
adc
lret
or
pop
scas
push
out
mov
shrl
cli
cmp
adc
xor
or
rolb
sbb
push
mov
add
mov
mov
dec
cmp
ljmp
sbb
fiaddl
ss
cltd
cmp
lcall
mov
dec
inc
test
dec
pop
fs
lds
test
mov
xchg
loopne
fisubl
gs
popf
sbb
mov
jae
pop
jg
sbb
cltd
cmp
les
popf
pushf
test
ret
cli
pop
push
arpl
out
pop
orl
nop
inc
movb
cmpsl
dec
jg
and
push
dec
jbe
loop
adc
mov
jno
push
add
and
xor
ficoms
mov
pop
and
in
addr16
pop
jg
xchg
ret
mov
pushf
push
mov
add
je
mov
gs
sbb
push
orl
cmp
mov
push
pushf
js
addb
mov
push
movsb
inc
adc
pop
mov
add
or
mov
es
or
add
ss
jmp
lret
fadds
jmp
ss
sbb
and
test
int
fucom
and
sbb
or
and
and
in
pop
or
sub
jae
es
test
sbb
jmp
lea
sbb
icebp
cmpsb
xchg
mov
les
inc
adc
mov
sbb
sub
iret
in
jecxz
push
jo
mov
ljmp
push
pop
loop
mov
sbb
push
inc
loop
inc
cmpsl
mov
xchg
popf
and
inc
cmp
xor
sub
jge
inc
jne
push
fidivs
aam
push
fcompl
js
pop
dec
cmp
jo
popa
pop
inc
inc
mov
movsl
mov
fs
mov
xchg
sarl
fxch
std
push
add
jb
ret
sbb
int3
fs
popf
xor
mov
cmp
inc
xor
testl
icebp
adc
mov
movb
shll
das
push
jo
adc
jp
push
pop
jne
mov
or
shll
mov
out
nop
inc
mov
pushf
xchg
loope
or
iret
cmc
jne
into
dec
add
inc
in
jb
cmpsb
gs
pop
mov
fdivrp
popf
pop
stc
xlat
jb
push
repnz
dec
cmp
xor
cltd
fwait
cs
subl
enter
or
push
test
fldt
inc
mov
arpl
lahf
mov
jno
pushf
xchg
popf
ficomps
ss
scas
scas
out
pop
inc
mov
and
add
dec
mov
mov
or
setno
push
xchg
cmp
out
mov
rol
shll
pushf
ret
inc
outsl
mov
mov
lods
jbe
dec
fbstp
aaa
add
ss
cmp
or
push
mov
inc
outsb
ds
cmp
aaa
dec
jno
jmp
in
scas
leave
cmp
sahf
push
arpl
clc
mov
xor
xchg
and
repnz
inc
and
pop
jbe
lock
daa
addl
addr16
pop
cli
test
pop
xchg
ret
pushf
aas
add
pop
imul
in
jbe
push
sahf
sub
aam
dec
movsl
sbb
pushf
gs
aam
vfrczps
ss
push
push
xchg
cmp
addb
pop
out
repz
and
add
inc
dec
notb
and
jns
xchg
insl
adc
gs
pop
mov
add
pop
lods
in
add
xchg
fsub
sub
dec
sahf
lea
pop
push
ret
inc
adc
int
outsl
xor
cmp
xor
push
mov
push
adc
iret
push
fstl
xchg
imul
pop
data16
add
std
push
gs
xor
add
adc
push
jnp
push
sbb
pop
hlt
cmpb
xchg
xor
dec
jb
or
jge
mov
popa
push
mov
movsb
cmp
xor
imul
jnp
xchg
rcrl
ret
idivb
jo
iret
into
jl
add
fcompl
sbb
push
and
jbe
imul
mov
xchg
sbb
dec
or
cli
pop
iret
roll
sbb
sub
int3
add
add
dec
imul
repz
cmc
in
mov
pop
add
sbb
cltd
sbb
mull
dec
pop
push
pop
stos
mov
ret
or
mov
mov
repz
or
stos
mov
imul
cld
add
push
jae
lods
mov
std
es
sti
inc
mov
aad
jns
fimuls
xor
pop
shrl
or
jno
sbb
sub
fs
mov
aas
loopne
pop
imul
aas
pushf
fsts
push
sbb
sarb
sbb
xor
push
mov
pop
shrl
sbb
lret
cmc
sbb
cmp
sub
jecxz
jge
cli
xchg
pop
ret
pop
jbe
inc
aam
movsl
xchg
pop
shlb
and
dec
mov
out
mov
fbstp
sbb
cmp
out
mov
pop
push
aam
daa
push
js
mov
dec
pop
push
addl
add
xor
xor
subl
sub
int3
ljmp
inc
movsl
push
dec
fistps
jne
not
aad
sub
subb
cmpsl
cmp
imul
or
add
inc
aam
pusha
jno
pop
aam
outsl
xlat
xchg
cwtl
rcll
inc
repnz
xor
mov
test
add
lods
pushf
lret
jle
jns
dec
pop
rcll
lock
scas
pop
jp
dec
sub
lret
arpl
mov
dec
push
pop
mov
lds
into
mov
fildll
push
fmuls
mov
cmp
mov
cmp
xor
and
popa
xor
xchg
int3
cmpl
sbb
lahf
pop
mov
xchg
xchg
fwait
arpl
lea
jno
cmp
lods
fdiv
mov
push
fsubl
lret
inc
or
fsubs
faddl
xchg
pop
sub
add
in
inc
out
cs
sbb
out
fcompl
ret
leave
dec
jp
adc
std
xor
inc
jne
arpl
add
push
ds
popa
sub
aad
sbbl
pop
cmp
cmpb
jo
vmovhps
inc
mov
pop
add
mov
iret
cmc
sbb
out
mov
movsb
add
cld
pop
mov
in
outsl
mov
push
stos
aaa
popf
insl
adc
in
fnclex
push
pop
mov
pop
xor
mov
ja
lds
das
dec
icebp
arpl
cltd
add
inc
jnp
jb
data16
fidivl
ja
mov
cs
popl
gs
sti
push
push
fldcw
dec
lcall
test
out
mov
test
sbbl
and
popa
fbstp
insb
pop
lahf
int
pop
mov
mov
scas
loope
addr16
jp
adc
int3
ffree
in
shl
push
pusha
test
ds
stc
xchg
gs
or
dec
mov
jne
lret
pusha
mov
addl
mov
ret
arpl
add
in
in
in
or
pop
test
lods
subl
pop
cld
mov
movsl
cmp
xor
and
loopne
out
sbb
insb
in
xor
push
cld
fimuls
add
and
movsl
mov
popf
dec
shll
or
and
dec
bound
lock
jb
movsl
lcall
push
inc
and
xchg
pop
into
push
sub
imul
out
jbe
hlt
and
push
mov
mov
lcall
cld
mov
arpl
shrl
outsb
lods
lea
hlt
cmp
mov
push
movsb
add
mov
xchg
aam
push
cmc
fld
fisttpll
mov
enter
adc
pop
imul
jne
sbb
lods
xor
into
push
ficoml
mov
jno
cmp
sub
push
or
mov
shl
mov
xor
cli
sub
lods
je
pop
fdivrs
adc
pop
leave
and
cmp
cld
fs
pusha
addl
mov
loope
cmp
repz
xchg
dec
jnp
mov
movsb
push
push
sub
out
push
ret
mov
push
mov
add
xchg
jno
push
in
dec
jmp
inc
fcomps
mov
inc
jne
adc
push
mov
andb
push
adc
dec
cmp
stos
ror
mov
sub
mov
mov
leave
mov
inc
or
adc
cmc
add
sbb
sbb
and
adc
mov
sbb
scas
xchg
jl
adc
ljmp
call
cld
and
push
inc
imul
push
sub
inc
or
cmp
aaa
out
fstpt
mov
imul
mov
sarl
xchg
pop
jp
jecxz
inc
insl
cmpsb
lea
sbb
adc
push
fildl
sti
jns
jmp
cmp
addr16
mov
and
pop
cmp
xchg
xchg
jae
jmp
or
lods
jg
movsl
pusha
push
pop
jl
arpl
cli
mov
std
jb
lds
bound
rcr
jo
mov
push
test
and
ret
jae
mov
daa
push
sub
gs
xchg
pop
mov
adc
sub
pop
lret
mov
cwtl
sbb
pop
push
mov
jae
fmull
cmp
mov
cmovns
xchg
mov
sbb
inc
and
inc
or
fs
mov
ficompl
pushf
push
fcomps
and
or
cmpl
std
and
clc
mov
out
aas
mov
pop
or
cmpsb
sub
outsl
cltd
mov
push
adc
xlat
mov
mov
pop
dec
cmc
shlb
adc
mov
sub
das
dec
lds
push
lret
divb
mov
mov
add
pop
arpl
movsl
in
scas
loope
pop
out
sarb
call
into
xlat
cmpl
push
nop
mov
in
arpl
push
cs
test
inc
mov
scas
mov
imul
add
jl
ljmp
pop
into
sbb
test
test
sub
sbb
arpl
std
mov
push
loope
inc
popa
pushf
jbe
or
cmp
and
lahf
inc
enter
aad
cmp
popa
xchg
xchg
in
mov
loope
lea
jl
call
dec
jecxz
dec
dec
rorb
pop
xor
inc
push
js
gs
inc
js
lods
ljmp
scas
pop
and
cld
mov
js
xchg
pushf
cmp
mov
and
sbb
fwait
mov
dec
lock
shrb
jmp
add
fcomi
inc
test
push
jp
icebp
std
mov
mov
arpl
fxch
xor
pop
jg
or
jl
push
adc
pushf
sub
sub
stc
and
cli
cmp
push
add
fcoms
or
ret
mov
fincstp
push
and
dec
aas
push
inc
cwtl
dec
mov
lcall
pushf
jg
hlt
add
xchg
lahf
bound
or
mov
shlb
and
dec
add
adcl
inc
xlat
icebp
inc
cld
push
fisttpll
jmp
rcll
aad
xchg
rorl
imul
pop
jbe
sub
push
jg
push
pop
orl
cmp
adc
jmp
shr
mov
lret
pop
test
repz
into
les
sub
test
xchg
fdivr
push
add
jne
jle
jnp
mov
cmpsl
jne
mov
decl
mov
xor
jno
sub
inc
cmp
push
jge
cmp
shll
cld
push
jnp
cmpsl
lock
dec
sub
push
jnp
aad
pop
xchg
ljmp
lods
imul
fwait
sarb
and
push
or
jmp
sti
cmpsl
arpl
loop
cli
aam
mov
dec
push
fwait
aas
stc
movsb
loopne
popa
and
jmp
stc
xchg
pushf
xor
mov
js
or
push
mov
cld
cmp
fcmovne
or
loope
ror
idivl
push
aaa
test
or
xchg
or
fidivrl
daa
dec
sbb
sbb
adc
dec
mov
pushf
sub
sbb
sub
out
movsl
sti
mov
sub
adc
push
xlat
in
lcall
imulb
jne
mov
ja
jge
or
enter
sub
idivl
pop
inc
ret
push
iret
add
out
js
iretw
inc
dec
sub
mov
add
mov
dec
push
mov
andl
hlt
imul
add
sahf
inc
push
lret
incl
aaa
and
sub
mov
mov
adc
jnp
imul
mov
enter
fcomi
jg
and
xchg
mov
sahf
int
ja
stos
mov
pop
out
rclb
imul
dec
dec
ljmp
mov
repnz
mov
sub
pop
lds
outsl
imul
out
pop
fsts
sbb
std
pushf
das
xchg
mov
inc
bound
mov
mov
test
fcompl
pushf
std
xchg
or
dec
lret
sbb
pop
dec
stos
mov
mov
jae
int
cmp
arpl
xchg
pop
or
not
xchg
jg
dec
ret
sub
mov
divb
mov
add
fisttps
jl
fwait
cmp
pop
and
adc
mov
ja
add
outsb
clc
xchg
push
popf
xor
cli
aam
fmuls
lahf
sub
mov
and
das
dec
push
insb
movsb
bound
inc
cmp
ss
mov
cmc
lea
mov
mov
jns
adcl
mov
loop
xor
or
cmpsb
ja
fldlg2
test
sbb
out
fisubs
gs
xor
and
xchg
stos
adc
lcall
je
or
ja
popf
lock
push
lea
mov
lods
cmp
rorl
jb
xor
dec
sub
sub
fdivrs
inc
mov
or
push
jg
dec
pop
mov
mov
fldt
xlat
enter
mov
inc
and
push
xchg
sahf
push
xchg
lods
pop
push
je
flds
iret
out
mov
mov
cmpsl
outsb
cmpsl
andl
ss
lds
jo
xchg
sbb
dec
and
jno
xor
lcall
enter
fwait
or
jnp
into
ds
notl
pop
call
test
mov
dec
xor
rcl
int
cld
pop
xor
movsb
xlat
addl
pop
cltd
mov
xchg
xor
xchg
pop
sbb
xor
push
std
add
xor
icebp
imul
adc
mov
enter
imul
mov
adc
movsb
push
cmp
mov
scas
incl
sbb
fistpl
cmpsb
insb
ljmp
lea
push
fiaddl
sar
jnp
xchg
jmp
insb
push
rcrl
add
mov
and
sarb
pop
test
loope
push
leave
pop
and
jbe
sarl
or
std
mov
lds
insl
out
jle
cltd
xchg
jl
mov
mov
sbb
popf
jmp
ljmp
jg
xchg
js
mov
sub
jno
mov
push
xchg
outsb
sub
cmp
pop
adc
or
xor
xchg
cmp
ret
cmp
and
dec
mov
hlt
mov
inc
lahf
into
dec
or
das
push
js
dec
inc
pop
dec
ds
xchg
icebp
test
add
jecxz
cs
mov
xchg
jbe
mov
xchg
cmp
rorb
mov
notb
sub
push
out
addr16
imul
jg
pusha
mov
push
push
add
cmp
jl
or
sub
scas
sub
dec
int
mov
mov
aad
xchg
mov
inc
dec
rol
std
push
xor
test
push
xchg
sbb
inc
xor
xchg
stos
and
jae
push
sbb
add
jno
pop
xor
pop
pushf
or
mov
jp
cld
pop
pushf
and
sbb
stc
mov
sahf
popf
js
cmpl
popf
test
dec
fisttpll
inc
test
call
shlb
adc
data16
lahf
mov
addr16
rorl
in
repnz
cmc
xchg
sub
in
push
pusha
or
jecxz
lret
mov
jb
mov
add
sub
rcrl
aad
dec
sbb
and
mov
pop
imul
mov
scas
in
sbb
adc
mov
jp
sahf
jo
out
out
movsl
push
xchg
cmp
cmp
mov
jle
sub
jmp
push
jae
xor
add
or
mov
fld
or
orb
push
test
out
dec
pushf
out
mov
jge
pusha
jecxz
push
lods
lods
sbb
repz
mov
sub
sbb
sub
jl
mov
mov
gs
push
lahf
int3
pop
jp
stos
push
push
xor
push
fsubl
aas
cmpsb
jp
or
xor
xchg
inc
addr16
or
rolb
lahf
ret
testb
jae
fsubp
adc
jmp
lret
fwait
enter
ja
fwait
and
cmpsb
cmp
jb
stc
pusha
ds
jno
sbb
add
jo
xor
dec
adc
sbb
gs
xchg
test
insl
pushf
sarb
or
mov
aas
icebp
sub
aaa
pop
inc
cmpl
dec
rcll
cmp
sbb
mov
adc
lock
mov
mov
mov
cmp
rol
push
xor
sub
mov
fs
dec
mov
mov
loope
dec
mov
mull
into
aas
or
inc
cmp
stc
ljmp
xor
fnstenv
sub
xor
fsts
adcl
mov
mov
xchg
ffree
dec
outsb
bound
out
shr
pop
push
xor
clc
popa
inc
cmp
jp
test
jns
and
jle
sbb
mov
bound
push
pusha
mov
insl
dec
pop
negl
mov
sbb
mov
sarb
push
es
imul
cmpsb
cmp
add
and
in
mov
mov
pop
repz
mov
sub
inc
push
jge
int3
sbb
mov
dec
adc
testb
stos
fiaddl
pop
aaa
push
je
out
mov
sar
movsl
out
hlt
add
fiadds
pop
push
pushl
rorb
and
ss
jbe
mov
daa
push
cmp
sbb
push
gs
xchg
popf
mov
aam
fstpl
dec
dec
out
fstps
ds
mov
mov
push
and
test
aad
jge
loope
repnz
cmc
xchg
fildll
push
aaa
dec
fwait
inc
add
pushf
jo
ds
sbb
in
push
inc
add
lods
jo
dec
sub
xchg
sbb
or
out
inc
fnstsw
pop
repz
outsl
sahf
sbb
push
sbb
push
and
test
mov
dec
and
xchg
adc
jo
or
inc
testb
push
add
xchg
lock
inc
fcmovbe
add
jle
sti
out
leave
mov
fnsave
pop
js
test
aam
mov
mov
fsubrl
sub
lea
adc
icebp
cmp
push
dec
mull
jmp
mov
loope
push
cmpsb
js
mov
outsb
hlt
popf
arpl
xor
jae
xor
sarb
xchg
outsl
jp
test
pushf
adc
mov
cwtl
push
jmp
xchg
nop
inc
imul
adc
cli
inc
popf
cmp
xchg
data16
in
mov
or
push
sub
lds
sarb
lret
enter
add
and
adc
pop
aad
pusha
cld
test
mov
dec
stos
xchg
int3
inc
cs
daa
ss
ss
cld
dec
pop
jge
pop
pop
inc
or
iret
shl
data16
hlt
notl
jae
pop
andl
mov
in
dec
jp
jmp
xchg
aam
arpl
arpl
sub
fs
sub
and
push
pop
jecxz
add
or
jnp
mov
fsubs
clc
daa
insl
fwait
push
inc
mov
leave
cld
jnp
push
cltd
out
aaa
mov
aad
xorb
popa
jno
jl
rcll
adc
mov
insl
mov
das
sub
mov
pop
sbb
adc
sbb
pop
lds
jne
jl
push
dec
testb
jmp
cmc
push
mov
inc
xor
mov
dec
mov
jle
xchg
shll
mov
xchg
mov
push
mov
icebp
hlt
mov
add
testb
add
push
mov
enter
pop
mov
xchg
pop
fcoml
out
dec
stos
xchg
daa
insl
cmpsl
xor
fsin
mov
add
pop
mov
push
dec
sarl
push
rcr
rclb
mov
mov
lret
sub
cltd
fucomi
mov
pop
out
inc
xchg
adc
push
aad
push
or
mov
jne
lret
idivl
adc
and
fisubl
enter
jo
inc
pop
push
setle
mov
cmpsl
cmpsl
loopne
ret
out
pusha
imul
dec
mov
push
imulb
out
jno
stos
leave
dec
add
imul
or
and
or
push
add
adc
push
sub
out
pop
and
mov
aas
jle
mov
fldl
mov
imull
ret
xor
sbb
sahf
cmc
cmp
in
ss
sub
sbb
into
insb
mov
sbb
popa
ret
mov
pop
fcoml
outsl
push
mov
cmp
push
insl
adc
je
orl
stos
sub
jno
jg
xchg
ljmp
imull
bound
jmp
sahf
mov
cmp
mov
ss
pop
fiaddl
lret
xchg
lods
leave
lods
mov
mov
adc
push
subb
or
adc
cmc
int3
xchg
add
jecxz
mov
cmp
ljmp
bnd
popa
imul
mov
push
cmp
fnop
sub
mov
jl
cwtl
dec
popa
int3
enter
jg
mov
pop
fcoml
out
aaa
cmpsb
pop
ss
fcmovnu
fidivrl
sti
hlt
sbb
jmp
or
push
xchg
sbb
dec
inc
stos
mov
jnp
popf
lods
arpl
ja
mov
cmc
push
cli
out
dec
ds
inc
sub
out
std
push
les
jnp
into
xchg
lock
jmp
mov
adcb
mov
inc
enter
mov
xchg
ret
xor
or
pop
jg
loop
testb
xchg
aam
test
cld
adc
insb
hlt
lret
push
push
jno
jbe
dec
mov
pusha
xor
dec
loopne
imul
sub
lods
jle
loop
in
and
imul
imul
inc
and
js
int
mov
cmp
shll
jg
adc
je
inc
dec
stos
mov
shll
push
and
xor
sub
lods
sub
cmp
stos
inc
es
lods
xchg
mull
push
stos
cmp
pusha
shll
or
dec
scas
sub
add
popa
insl
inc
xlat
push
or
dec
shl
mov
test
push
ficoml
clc
pop
push
or
xchg
sbb
mov
inc
dec
jne
call
dec
inc
rclb
sub
jge
xchg
pop
pop
xor
xchg
call
push
fsts
mov
popa
push
xor
or
sbbb
cmp
and
clc
mov
cmp
push
lea
out
push
xchg
icebp
sbb
mov
push
insl
gs
lret
push
out
ss
and
sub
scas
jmp
mov
sbbl
in
outsb
dec
clc
mov
in
roll
sti
in
sub
and
insl
dec
push
adc
loope
dec
rorl
fsubl
fs
jge
cmc
mov
push
jg
cld
dec
das
mov
mov
and
rorl
arpl
cmp
enter
rcrb
xor
pushf
push
xor
jne
cmp
xchg
call
or
dec
mov
cmp
popl
or
pop
mov
mov
push
aam
stos
enter
lahf
cmpsl
jbe
testl
jmp
dec
fnsave
adc
jo
cmc
push
fidivl
lret
jp
xchg
in
stos
mov
push
rol
adc
lret
shrb
imul
imull
sub
sub
push
xor
pop
pop
inc
rol
enter
std
mov
std
iret
sub
pop
mov
aas
dec
mov
sub
ds
out
mov
jb
mov
gs
sbb
outsb
mov
cmp
inc
fs
popl
xchg
jge
sub
flds
in
icebp
mov
mov
les
jne
xlat
dec
cmp
cmp
mov
add
push
mov
jl
cmpb
mov
cmc
dec
aas
ss
fnstsw
icebp
rcrl
sub
inc
sub
push
out
inc
xor
scas
mov
setle
lods
push
or
sub
pop
lahf
pop
push
sub
dec
pop
mov
cmc
icebp
in
sbb
pop
lahf
gs
push
bound
xor
mov
dec
cmp
or
adc
loope
push
repz
lods
add
sbb
arpl
int3
lods
gs
lods
xchg
push
int
mov
jae
and
inc
lahf
or
scas
out
cwtl
adc
xchg
aad
xor
mov
adc
adc
pop
add
fisttpll
push
or
lock
mov
sub
fldcw
pop
loop
xchg
push
add
inc
jl
sar
xchg
sub
insl
and
cli
fwait
jae
xchg
jl
pop
sbb
addr16
xchg
ficomps
cmp
insb
cmp
out
dec
mov
inc
fcomi
data16
mov
jne
fidivrl
xor
xchg
cmp
jmp
fldpi
push
inc
pop
push
sbb
sbb
cld
inc
and
cli
cs
in
xchg
adc
cmp
sbb
xor
sbb
scas
imul
or
rorb
dec
insb
insl
push
push
mov
sahf
push
push
fwait
aad
movsb
xchg
mov
mov
jle
ja
mov
insl
cld
mov
lods
inc
mov
adc
imul
ss
fadds
and
mov
movsb
lea
inc
ret
mov
outsl
add
mov
add
in
cmp
cmp
xor
in
into
sbb
xchg
jmp
mov
and
outsb
cmp
adc
lcall
mov
mov
into
jle
hlt
lret
adc
pop
fs
addr16
mov
call
sbb
lea
arpl
lock
push
lahf
cltd
int
fmull
stos
fcomps
andl
mov
jae
sub
jbe
xor
and
movsb
xchg
pop
inc
xchg
imul
jnp
dec
cmp
pop
fistpll
cmpl
in
mov
mov
inc
fdivl
push
lds
repz
aad
jbe
call
sbb
push
sub
mov
jp
jno
cmpsl
push
nop
and
rorl
stc
jno
ds
push
cld
inc
pop
repnz
xchg
mov
aaa
sarb
push
add
int
loope
mov
popf
adc
les
ljmp
shlb
mov
cmpsl
sub
sub
push
stos
pop
ljmp
pop
ja
or
sahf
jo
mov
jo
pushf
mov
fiadds
shll
push
jmp
sub
in
faddl
pop
dec
jo
sbb
outsl
dec
stos
dec
jge
push
add
rclb
stos
imul
in
aaa
push
insb
std
cld
cmp
add
repnz
pop
mov
add
test
pop
aaa
mov
out
push
dec
dec
or
dec
sbb
jns
mov
test
dec
jmp
inc
cld
out
jnp
xlat
or
sub
sbb
movsl
fisubs
hlt
aas
pusha
call
sarl
xchg
sub
add
mov
dec
in
ja
dec
jl
pop
imul
sti
inc
inc
mov
cmpb
jno
push
fbstp
dec
inc
aaa
movsb
and
shl
mov
mov
mov
mov
dec
in
rcrb
mov
xchg
push
into
popa
icebp
ret
repz
mov
rorb
sub
stos
xchg
cltd
adc
int3
clc
mov
into
cs
das
shrl
mov
daa
mov
jno
cld
inc
in
cs
cmp
scas
jno
xchg
lcall
xchg
sarb
and
mov
xchg
mov
addr16
xlat
loope
push
aad
cmp
push
repnz
xor
mov
xchg
ficoml
dec
lcall
adc
jle
xor
adc
cmpsl
sbb
cld
xor
mul
mov
fstl
leave
cld
pusha
lcall
cmp
test
incb
jne
jns
iret
lods
out
push
jo
pushf
push
push
cmp
and
enter
xchg
stc
jb
inc
add
out
jp
or
sub
aas
mov
push
mov
jno
fdivs
dec
call
sahf
pop
mov
pop
push
sub
sbb
sbb
pusha
jae
add
cltd
and
cmc
loop
pushf
outsb
or
cmpsl
sbb
add
mov
les
sub
cwtl
icebp
repz
insb
xlat
cmpsb
or
xchg
insl
sahf
sbb
dec
insb
adc
cltd
jmp
jmp
imul
mov
shlb
in
out
push
sub
push
push
gs
mov
test
push
pop
and
push
adc
aad
testl
jmp
cmpsl
dec
fstpl
mov
mov
imul
rorl
xor
js
mov
push
xchg
aas
xchg
scas
or
out
js
pop
insl
inc
out
dec
add
xchg
push
idivl
cmpsb
xor
cli
popa
dec
add
add
mov
push
xchg
loopne
mov
or
jg
je
pop
sub
ret
stos
sbb
mov
ja
mov
pop
clc
lods
or
mov
out
jmp
add
mov
stos
call
xor
repnz
lcall
cmc
add
pop
arpl
dec
xchg
and
jo
ss
xchg
xchg
sbb
pushf
cmp
xlat
div
pop
cmpsl
repz
call
add
lea
dec
in
sbb
in
and
xchg
dec
lock
mov
push
cmpsl
out
es
xchg
adc
repz
leave
sub
xchg
dec
scas
scas
mov
mov
add
or
outsb
sbb
cmpsl
mov
mov
mov
out
adc
jnp
call
ss
fisubs
int3
mov
sbb
pop
ja
les
dec
xor
das
xlat
fisttpl
insl
adc
xor
mov
push
addr16
add
outsl
stc
xchg
mov
mov
xor
imulb
ljmp
cmp
add
sub
add
and
mov
cmp
andb
fstpt
xlat
and
adc
push
movsb
cmpsb
hlt
dec
xor
push
cmp
fisubl
dec
outsl
lods
arpl
sub
leave
lcall
push
push
es
mov
push
pop
jne
out
insl
pop
mov
and
cwtl
dec
jns
fistps
mov
fcoms
and
movsl
cmp
or
and
mov
and
xor
into
cmp
adc
inc
jg
xchg
ret
lods
add
mov
fsubrl
xor
push
cmp
mov
dec
push
clc
test
into
or
add
or
xor
mov
cli
pop
inc
lds
ret
arpl
pushf
bound
mov
jbe
es
popa
pop
cmp
cmp
push
inc
sub
cld
mov
loopne
mov
push
jl
or
mov
lea
inc
daa
stos
xchg
stos
stc
dec
jne
sub
fidivrl
sub
outsb
lret
xchg
mov
jb
xchg
div
cmp
xchg
test
popa
clc
or
pop
nop
push
lret
sbb
cli
cwtl
dec
xchg
inc
scas
mull
cmp
test
std
int3
mov
adc
sbb
pop
roll
rorb
cmp
sbb
daa
test
add
xchg
sbb
jmp
inc
sbb
mov
int3
jae
xlat
mov
cmp
mov
into
cmp
xchg
jb
or
aas
leave
and
sahf
insb
in
popa
int3
sbb
mov
mov
pop
lods
repnz
cs
shrb
cmpsb
sbb
mov
imul
pop
push
mov
out
in
or
inc
ret
clc
and
xchg
mov
cmpsl
jle
add
mov
jb
xor
and
add
subl
jge
ficoml
lret
fwait
inc
jbe,pn
sub
push
bound
mov
pop
ret
stos
and
imull
pop
adcl
sbb
fwait
sbb
jle
test
fidivrl
pushf
orl
cmp
loopne
cs
xor
cmp
sbb
adc
push
adc
mov
imul
jns
lret
mov
and
mov
ja
jge
sub
push
test
iret
in
bound
add
loopne
sub
ss
push
inc
inc
mov
add
bound
xchg
std
pop
push
mov
add
jle
add
jae
aas
imul
fstpt
dec
push
stos
add
jmp
jnp
insb
es
int
fmulp
push
rcl
mov
lods
xor
daa
in
pop
aas
jae
insl
push
in
mov
repz
loop
int
daa
fidivrs
notb
shrb
nop
rcr
and
push
data16
mov
fcoml
xor
sbb
cmp
aam
fsubrp
fidivl
fmull
cmpsb
mov
lea
and
fsubrl
imul
sbb
xchg
adc
addr16
mov
pusha
out
sbb
adc
push
cmp
inc
pop
dec
dec
push
pop
sbb
adc
jns
sbb
or
jp
fcoml
sub
xor
fs
out
inc
mov
cmp
inc
inc
outsl
sub
jne
mov
dec
push
sbb
scas
pushf
movsl
cld
push
push
add
int3
mov
cmp
in
and
je
out
pop
sub
decl
arpl
pop
test
lods
movsb
mov
pop
mov
add
push
and
scas
ret
out
ljmp
lahf
mov
movsb
xchg
xor
das
fs
mov
fldl
sub
push
out
pop
ret
popa
add
jecxz
sub
fdivs
dec
and
mov
cmp
test
mov
jmp
sub
outsl
mov
jge
je
mov
inc
cmp
inc
stos
cmp
outsb
push
mov
jb
out
xchg
shl
scas
pop
cmpb
lods
loopne
jmp
mov
sbb
xor
dec
notb
or
cmp
sbb
jne
cmpsb
popf
clc
xchg
sub
test
cmpsl
dec
and
lcall
inc
js
mov
inc
cmp
test
pop
mov
mov
mov
call
stos
std
add
sarl
es
sub
shlb
xchg
mov
sbb
xor
out
mov
rcll
mov
push
add
and
jge
insl
out
inc
shr
jno
xlat
iret
jp
pushf
xchg
in
subl
daa
xchg
cmp
jbe
mov
stos
fcoms
arpl
mov
repz
inc
and
out
dec
sub
inc
jne
popa
jg
iret
cmp
and
stos
cmp
sub
dec
dec
loopne
sbb
sbb
cmp
xor
outsl
mov
fimull
ja
push
pop
cli
or
mov
pop
push
jle
and
dec
mov
in
cli
mov
in
ds
stos
jb
test
out
movsl
int3
mov
movsl
sets
xor
lock
pushf
cmp
stc
inc
lods
insl
je
push
mov
pop
cmc
bound
ret
jmp
sub
jg
cld
aad
pusha
sbb
push
gs
clc
jmp
or
scas
pop
sbb
sub
mov
mov
add
inc
sub
in
jne
cmpsb
jg
mov
dec
rclb
dec
lock
mov
or
jnp
inc
or
push
aad
popf
or
push
adc
mov
inc
mov
sub
adc
cmp
imul
dec
jle
outsl
add
aas
cwtl
pop
js
pop
sub
out
mov
add
fbstp
out
stos
pusha
xchg
add
mov
pop
jecxz
dec
inc
cmp
add
insl
out
mov
cltd
repnz
imul
dec
les
push
jg
in
or
enter
dec
jnp
fimuls
and
cmpsb
insl
add
xor
imul
mov
dec
mov
push
js
sub
dec
cmp
jg
jmp
aad
sub
inc
jge
jnp
mov
mov
push
cmpsl
addr16
enter
es
les
ljmp
jne
gs
and
je
pop
cwtl
gs
addb
hlt
shlb
jbe
dec
push
ss
mov
loop
jne
inc
jae
call
adc
stos
xor
and
xlat
inc
inc
mov
cwtl
add
fildl
push
lcall
aad
xchg
sub
add
aas
cmc
aaa
sbb
push
cmc
popa
sbb
jg
insb
lock
in
stos
push
outsl
imul
adc
jg
mov
xchg
mov
ss
sub
fucomip
and
into
add
sbb
inc
mov
or
movd
jae
movsb
mov
hlt
je
pushf
addr16
lret
sub
cli
and
aad
lods
pop
xchg
push
ja
jmp
fildl
cmp
cmpl
inc
ljmp
sarl
xor
inc
adc
sarb
mov
push
pop
sub
cmp
adc
inc
inc
adc
out
inc
aam
sbb
lahf
dec
cs
insl
mov
mov
mov
xor
mov
sbb
jp
inc
insb
fwait
in
outsb
les
push
mov
jg
mov
sub
sub
jecxz
mov
push
stc
lock
lods
jp
scas
out
sbb
dec
je
cmpsb
jle
hlt
sbb
icebp
int
push
mov
adc
cltd
jmp
cmpl
into
adc
clc
mov
adc
jns
mov
sbb
aaa
mov
inc
add
mov
mov
mov
lods
movsl
sub
outsb
aam
clc
xor
jo
sbb
sbb
or
mov
js
mov
out
inc
or
jno
aam
pop
lret
addl
mov
xchg
push
jmp
in
div
push
xchg
xchg
mov
roll
xor
xlat
inc
xlat
pop
lret
es
inc
dec
sbbl
aas
cld
push
push
cmp
aam
lea
les
clc
loop
mov
pop
fidivrs
fisubrl
inc
pop
push
sub
fcompl
jb
xchg
popa
push
mov
loope
mov
jno
out
pop
cli
push
jo
cmp
sahf
loop
and
cwtl
lods
mov
cmp
cltd
pop
or
popa
out
gs
dec
sub
pop
sarb
loope
ljmp
movsb
js
mov
stc
lods
mov
mov
fsincos
lods
mov
mov
sub
fcmovnu
or
xchg
loope
in
movsl
sahf
pop
ror
sub
jge
mov
std
repz
cmp
out
out
cmp
stos
lahf
xor
adc
out
loope
out
mov
sbb
hlt
arpl
mov
pop
push
loopne
xacquire
fcmovnb
jne
mov
fimull
mov
push
hlt
cmp
aas
std
mov
lret
sub
mov
popf
or
pop
push
add
std
loop
sbb
outsl
add
aam
jg
imul
cltd
imul
xor
sahf
inc
push
stos
arpl
xor
xchg
mov
add
je
inc
ficoms
jae
repnz
or
or
loope
cmp
xor
push
mov
aas
push
push
outsl
ret
mov
or
inc
pop
add
cwtl
leave
cmpsb
or
repnz
jmp
inc
ret
mov
insl
jo
sbb
std
mov
pop
repz
mov
xchg
mov
in
push
out
ror
adc
cmp
ror
and
sbbb
lds
add
in
add
leave
outsb
jecxz
push
js
and
inc
sub
mov
loop
in
test
push
aas
sub
repnz
stos
xchg
sahf
pusha
fidivl
fwait
inc
inc
jae
mov
push
or
stos
rolb
lods
pop
push
popa
arpl
lcall
gs
mov
psrld
out
pop
aam
rcrb
dec
popl
dec
stos
mov
imul
imul
ret
enter
jecxz
xlat
ljmp
orb
stos
xor
inc
movsb
mov
mov
xor
pop
lods
pop
lcall
fdivl
xor
inc
test
sti
in
or
aaa
clc
pop
xchg
mov
jecxz
sbb
mov
fsubrs
mov
test
push
outsl
pushf
adc
sbb
ds
xchg
mov
adc
or
bound
pop
xchg
dec
mov
xchg
or
or
adc
sub
test
dec
or
cld
xlat
aam
dec
dec
je
mov
lds
rorl
xchg
jbe
mov
cmpsb
inc
lcall
and
mov
sahf
jg
mov
push
ret
mov
popf
dec
fwait
pop
dec
negb
push
mov
test
gs
inc
mov
jmp
out
outsl
test
in
clc
nop
scas
sbb
shrl
lcall
pop
je
push
inc
pop
enter
cmc
adc
mov
cmpb
fists
jbe
movsb
xchg
pushfw
clc
outsl
mov
insl
cmpsl
adc
mov
sub
inc
and
insb
adc
mov
fwait
loop
or
and
xor
adc
int
add
xchg
xrelease
push
sub
jl
xchg
iret
jns
jp
ss
mov
xor
mov
xchg
call
jno
mov
std
jge
imul
ja
cmp
sub
mov
mov
add
fdivrs
call
inc
out
outsb
sbb
rolb
dec
cmp
dec
mov
push
in
icebp
in
loop
loope
iret
shl
ret
imul
or
pop
popa
fidivs
mov
xchg
jl
mov
es
or
mov
add
push
aas
mull
cmp
push
push
sbb
dec
push
lods
mov
aam
add
cmpsl
dec
arpl
cwtl
xor
into
aaa
adc
pop
inc
cmp
into
xchg
jae
aam
inc
in
lret
mov
mov
sub
in
std
jns
pop
or
into
or
xchg
mov
arpl
sbb
sbb
dec
adc
in
scas
ret
inc
push
pop
inc
push
dec
cmp
add
arpl
fdivs
popf
cmp
loop
mov
jno
aas
leave
jge
rorl
loope
popf
jae
xor
rolb
bound
fimull
dec
aas
cld
xchg
jecxz
aad
push
xor
fisttpll
fisubrl
mov
imulb
outsb
lock
leave
push
mov
dec
mov
outsl
notb
sbb
sub
cmp
dec
andl
cmp
imul
mov
sub
and
push
out
add
ja
cmp
repnz
sahf
jbe
cmp
pop
mov
popa
inc
mov
and
cmpsb
lea
das
jge
out
jg
pop
xor
scas
rcr
mov
cmp
xchg
sub
jo
loopne
sub
xchg
repnz
sub
lcall
test
cmp
in
pusha
shufps
addr16
mov
sub
jbe
jno
popf
mov
sub
imul
inc
and
lea
push
push
in
mov
mov
sbb
push
or
sub
fdivl
pop
je
gs
and
adcl
xchg
sbb
inc
ja
mov
push
xor
lds
loopne
jle
test
lcall
inc
inc
cmp
jge
dec
int3
and
sbb
add
cld
sbb
ljmp
jae
add
mov
push
hlt
dec
pop
in
and
push
or
leave
jl
adc
push
mov
push
adc
lods
mov
mov
rcll
hlt
mov
and
push
mov
inc
xchg
push
arpl
dec
in
mov
shrl
jl
daa
mov
dec
scas
icebp
add
stos
fiadds
mov
popa
daa
rcrl
xlat
fnsave
jmp
data16
sub
and
data16
testl
lds
dec
push
pop
repnz
fidivrs
cmpsl
in
fisubl
sbb
mov
orl
in
enter
or
push
mov
test
mov
lcall
inc
sbb
mov
fwait
pop
xchg
jmp
mov
mov
test
mov
icebp
das
cmp
pusha
push
int
divb
cmp
adc
outsb
pop
xor
icebp
ss
enter
loopne
cmp
inc
mov
sbbl
xor
mov
mov
xchg
and
fsubr
xor
jmp
lods
xor
push
fldt
inc
or
lret
mov
xchg
cmp
jne
cmpsb
xchg
sub
daa
mov
jp
pop
sbb
mov
xchg
mov
xchg
rcrl
cltd
js
shlb
sbb
js
sahf
pop
int
pop
faddl
out
mov
leave
and
sbb
sti
push
popa
into
int
fcoml
bound
mov
push
mov
mov
lock
cwtl
push
enter
andl
add
repnz
aaa
in
xchg
jbe
push
in
data16
xchg
int
movsb
inc
xchg
lds
nop
add
mov
shl
push
mov
shll
repz
mov
mov
sbb
mov
mov
gs
aas
sub
sbb
lea
out
xor
lret
inc
inc
add
lret
das
loopne
fldl
mov
mov
lea
imul
les
adc
int3
repz
mov
or
mov
xchg
leave
or
sahf
imul
jge
pop
ss
mov
xor
je
inc
cld
and
ja
and
outsl
jg
insb
xchg
jmp
sub
js
lcall
cmp
je
cmpl
xor
repz
push
and
mov
ljmp
mov
jb
cmp
popl
adc
fcoms
lcall
out
sbb
cmp
addl
sti
dec
jp
dec
add
in
mov
xor
outsb
xor
test
daa
lea
xor
xchg
mov
adc
push
ret
ret
mov
mov
popl
xchg
cmpsb
xchg
adc
and
push
add
fsub
adc
pop
mov
push
les
mov
adc
or
xlat
loop
aad
pop
and
loop
movsl
sbb
fwait
cmpsl
pop
or
lahf
js
movsb
push
repz
xor
jb
pop
mov
pushf
and
call
mov
mov
and
loop
mov
adc
mov
push
lcall
imul
xchg
push
push
mov
mov
jge
inc
lds
rclb
test
inc
mov
xor
lret
xchg
fldcw
push
js
imul
std
negl
inc
imul
ljmp
jno
adcb
in
sbb
add
cmpsb
outsl
or
sub
ljmp
jp
pavgb
mov
nop
hlt
andl
in
outsl
adc
ljmp
sub
mov
xchg
rcrl
jl
aam
xchg
aaa
orb
out
xchg
push
les
mov
dec
icebp
lods
dec
stc
out
out
lahf
inc
cmp
cmp
mov
and
mov
pushw
push
xchg
ljmp
daa
push
pop
xchg
inc
test
jge
add
jbe
push
push
les
or
sbb
ret
xor
fwait
inc
aas
icebp
jns
icebp
in
divb
leave
push
ss
dec
xorl
jne
jno
mov
mov
mov
xor
iret
xlat
or
test
ret
insl
jns
lea
fdivrs
pop
sub
mov
inc
dec
ds
insb
pop
sahf
xlat
dec
icebp
xorl
mov
and
outsl
daa
lcall
mov
shr
das
fmull
mov
pop
jno
jnp
int
jmp
div
jnp
mov
push
and
pop
fcmovne
mov
mov
inc
jne
inc
lea
and
add
xchg
gs
aam
dec
push
je
mov
hlt
imul
ja
ror
push
or
adc
hlt
int
pop
addb
cmp
jns
js
repnz
sub
outsb
mov
add
movsl
cld
mov
scas
mov
fbstp
dec
popf
rorl
adc
clc
out
sub
mov
idivl
jnp
cmp
shl
jns
loopne
mov
lods
dec
inc
rorl
jecxz
and
mov
lock
cmp
and
xchg
fnsave
cmc
sub
mov
cltd
push
enter
and
sbb
lret
xchg
xor
mov
ret
inc
sub
sarb
ja
push
lock
cltd
lahf
scas
sahf
and
xor
push
shr
nop
or
cmpsl
ja
lret
arpl
mov
pop
or
xchg
leave
cmc
pop
pop
cmp
cs
pusha
les
es
mov
jl
stos
out
scas
das
sahf
add
inc
cmpl
adc
or
in
rorl
pusha
sub
cmp
push
rcrb
mov
sub
and
scas
jns
adc
sub
loop
shlb
int3
inc
xchg
movsl
mov
inc
aaa
cltd
xchg
scas
jbe
jle
int3
sbb
std
inc
repz
int
cwtl
stos
repz
cmp
leave
push
aaa
cld
add
cmp
inc
stos
jns
fwait
in
mov
icebp
and
loopne
dec
xchg
clc
out
jb
fsubrp
fdivr
jo
lds
repz
pop
mov
pushf
adc
adc
jae
cmp
inc
xchg
mov
pop
push
xor
loopne
cs
jmp
or
xorl
insb
repz
scas
in
mov
daa
xchg
jmp
ds
rorl
mov
xchg
mov
add
sarb
stos
mov
arpl
sub
jnp
cmpsb
jno
dec
fldenv
mov
mov
push
or
dec
sub
xchg
out
mov
dec
cmp
and
adc
jecxz
jno
push
daa
or
ljmpw
outsb
pop
or
mov
jmp
iret
std
jmp
pop
xchg
in
jae
adc
lret
gs
test
mov
push
fidivs
and
cmp
or
pop
mov
mov
aas
lock
cmp
xor
scas
mov
popa
mov
cmp
and
mov
mov
testb
out
push
mov
fwait
loop
bound
pop
mov
daa
mov
jmp
mov
rorl
pop
cmp
hlt
push
inc
fwait
dec
cmc
and
dec
ljmp
into
jno
mov
stc
aad
cmp
jnp
cmpsl
mov
ds
int
rcrl
sti
scas
push
or
loopne
out
xor
xchg
sub
shlb
inc
jb
cmp
icebp
clc
adc
jo
loopne
mov
jge
sub
pop
jp
mov
or
imul
les
loopne
adc
sbb
pop
push
aam
enter
pop
sti
popf
outsb
xchg
scas
jnp
jecxz
dec
push
mov
and
mov
daa
sbb
ds
lcall
cmp
sti
xor
repz
pop
hlt
lcall
mov
out
repnz
negl
repz
xchg
and
loop
test
xchg
shlb
or
xchg
dec
push
test
pop
cmp
outsb
xchg
xchg
addr16
hlt
cmpsl
add
test
ja
mov
stos
cmp
adc
adc
pop
fs
addb
mov
inc
pop
add
arpl
addr16
fmuls
es
rorl
mov
je
add
in
test
jns
aas
mov
out
inc
stos
sahf
out
scas
pcmpgtb
pop
mov
es
adc
ja
cmp
xchg
fldcw
jno,pn
xor
xor
stc
push
setns
dec
mov
xor
loope
shl
fchs
add
mov
push
test
pop
or
sahf
in
and
xchg
lahf
test
xchg
clc
push
aas
mov
pop
sbbb
inc
hlt
jl
dec
dec
xchg
in
outsb
pop
int3
jmp
das
lods
mov
in
loop
out
mov
test
inc
mov
scas
pushf
push
int3
movsb
push
jns
xchg
imul
dec
add
jno
rcr
xchg
les
or
dec
sbb
or
cmp
mov
xchg
mov
pop
push
inc
fsubrs
inc
adc
rol
mov
rorb
pop
pop
les
incl
in
cld
cli
inc
rcrl
outsb
addr16
pop
loopne
out
lret
pop
call
je
icebp
fistpll
dec
mov
mov
dec
cli
mov
jnp
pop
cmp
or
scas
test
push
cli
pop
mov
mov
xchg
sub
in
cltd
or
jae
das
or
jb
jge
sub
mov
push
dec
adcl
dec
add
mov
into
movsb
in
in
loop
fdivrl
inc
sub
ljmp
imul
ss
pop
mov
sar
lahf
ja
test
inc
cmp
jbe
push
pusha
add
ljmp
outsb
lock
int3
scas
push
push
jne
in
xchg
pop
dec
inc
out
ds
add
or
out
sbb
dec
icebp
pcmpgtb
fmul
aam
fstpt
jmp
mov
sbb
and
pusha
test
mov
dec
mov
cmpsl
mov
adc
mov
shr
lret
pop
or
jo
mov
cmp
sete
xchg
pop
xor
je
adcb
jbe
dec
and
or
pop
mov
movsb
pushf
jnp
jmp
adc
sbb
and
ret
cltd
xor
lret
ss
loope
push
cwtl
xor
lcall
imul
int3
mov
dec
add
mov
call
cmp
nop
iret
mov
jo
jno
sbb
jns
inc
and
jg
pop
into
aaa
in
mov
cwtl
lret
jl
lds
out
jp
stc
and
loopne
mov
lea
decl
cmp
in
xor
call
out
pop
jle
ss
xor
add
mov
aas
insl
jbe
xchg
leave
pop
rorb
ds
and
mov
fcmovnbe
sbb
lock
push
pop
mov
ja
mov
mov
stos
cli
or
mov
insl
popa
rcrl
mov
mov
mov
in
mov
pop
inc
xor
sbb
mov
repnz
addb
movsb
sahf
mov
push
pop
ja
stc
adc
call
popf
insb
negl
xchg
lock
xchg
xor
mov
popa
cltd
aam
push
in
test
outsb
add
or
cmpsw
mov
ss
idivl
cmp
mov
push
loope
lcall
inc
cmp
add
repnz
sbb
pop
loop
stos
dec
fcmovnb
add
je
pop
aaa
scas
pop
hlt
jae
cmp
shl
rclb
sub
in
jge
insb
in
clc
and
jns
call
pop
xor
rcl
or
mov
aas
nop
sub
ret
mov
cmpsl
pop
lcall
cmp
sub
lods
mov
decl
leave
fimuls
test
addl
mov
sbb
inc
imul
repz
mov
sbb
imul
push
adc
test
cwtl
xlat
add
sti
pop
fdivrl
lret
mov
fdivrs
mov
pop
mov
push
jne
mov
sbb
xchg
dec
sub
cs
xchg
mov
clc
xchg
clc
in
in
and
shlb
push
les
mov
pop
rorl
das
es
inc
mov
mov
push
fsubrl
loop
xchg
cmpsb
aad
mov
out
jg
addr16
mov
dec
icebp
dec
push
and
popa
inc
sbb
test
test
mov
cmpsl
leave
out
mov
pop
xchg
push
mov
loope
into
hlt
push
mov
stos
sar
adc
push
aaa
xchg
inc
mov
jo
sub
xchg
js
insb
add
andl
pop
push
sbb
into
cltd
es
push
lds
jne
fucomip
or
jecxz
xchg
out
loope
es
cmpsb
insl
lcall
jno
scas
in
sub
sbb
jl
lret
fnstsw
push
aam
in
xchg
mov
aas
lcall
rcll
mov
pop
xchg
roll
inc
add
cmp
add
cld
jb
shll
mov
fistpl
sub
test
adc
imul
ljmp
sbb
add
mov
xor
popf
jg
dec
sti
fnstcw
push
out
xchg
icebp
test
push
sub
push
jnp
sar
stos
rorl
fisubl
shlb
pop
cmp
sti
adc
jae
or
mov
sub
ficompl
call
lahf
dec
nop
dec
inc
or
out
xor
je
dec
fs
icebp
scas
stos
cmpsl
movsb
mov
pop
jb
in
cmp
pop
lahf
sahf
dec
jno
or
mov
movsl
pop
cmp
push
and
imul
or
jmp
jl
add
filds
pop
popa
rorb
cli
cmpsl
xor
and
push
add
js
rcll
sbb
cltd
jg
mov
inc
lods
mov
test
sti
adc
jbe
mov
xchg
addr16
rorb
enter
mov
roll
cld
dec
lret
inc
addr16
and
jns
mov
cmpsl
mov
arpl
rep
fucom
in
jno
loope
fwait
pusha
adc
jecxz
pop
sarb
xlat
mov
in
notl
cmp
lcall
push
mov
or
cmp
cld
mov
pop
icebp
dec
pop
xor
pop
and
fwait
mov
mov
inc
push
pop
push
inc
fdivs
mov
and
dec
sub
jno
or
add
adc
add
or
mov
rcrb
mov
stos
out
mov
shrb
addr16
dec
xchg
call
not
mov
imul
stos
sbb
fisubl
and
or
std
mov
add
je
adc
mov
icebp
and
adc
mov
mov
sub
adc
shlb
mov
push
xor
pop
sbb
std
imull
movsb
mov
pop
mov
das
fwait
test
es
lcall
stos
js
mov
lds
clc
sub
notb
xorl
jg
xchg
dec
ret
xchg
pop
fldcw
cmpsb
sbb
mov
stos
outsb
jno
xor
enter
cmc
push
mov
test
sub
xor
enter
fdivrs
ret
lds
mov
adc
inc
call
and
dec
mov
xor
mov
xor
es
pop
xchg
mov
sbb
stc
push
jecxz
cmp
inc
sbb
jo
aas
dec
xchg
and
insl
or
fildl
push
ret
pushf
subl
lods
sub
insl
mov
adc
or
jbe
cmp
or
jmp
adc
push
out
rcrb
pushf
inc
adc
xchg
in
jle
dec
enter
push
aad
es
mov
jne
inc
or
add
int3
push
in
out
lea
pop
xor
mov
jle
aaa
je
fisubrs
sub
cmpb
fisubrs
repz
lret
dec
std
or
stc
mov
scas
ud2
push
dec
dec
into
orl
enter
dec
sbb
jnp
xor
in
clc
imul
dec
sub
sub
mov
cwtl
ljmp
repz
sub
rcll
out
pop
pop
inc
scas
bound
sub
mov
cld
cmpsb
and
imul
adc
je
xchg
adcl
push
je
mov
dec
sub
jae
push
pusha
sbb
mov
jg
mov
mov
sub
xchg
in
jecxz
xor
pop
outsl
hlt
pop
scas
xor
mov
pop
mov
outsb
pushf
movsb
xchg
popa
mov
cld
cli
sub
rol
daa
xchg
loop
sbb
dec
and
scas
jo
aad
push
add
rcpps
inc
or
fcoms
enter
mov
sarb
out
lock
xlat
mov
movsl
jecxz
sub
ret
fidivl
ret
pop
add
aas
or
sbb
cmpsl
or
imul
pop
dec
les
cmp
mov
inc
inc
mov
mov
rorl
lahf
mov
icebp
mov
sub
outsb
jns
sbb
xchg
iret
stos
lods
xchg
sarl
lds
mov
fwait
push
mov
int
movsl
or
and
inc
aaa
mov
insb
mov
xchg
sbb
aas
sbb
sub
xchg
insl
stc
cmp
adc
mov
shrb
xchg
jns
lcall
mov
mov
cmpsl
jl
inc
inc
dec
sub
jae
push
movsl
test
cmp
je
in
sbb
mov
mov
fcmovne
iret
lahf
sub
popa
mov
test
lds
jno
xor
mov
mov
xorb
loop
jp
add
cltd
xchg
cmp
roll
popa
ss
push
xchg
xchg
fwait
sbb
hlt
out
push
inc
scas
insb
imul
rcrb
fmull
or
mov
dec
pop
mov
jb,pt
and
pop
xchg
sub
sbb
sbb
dec
rcrl
shlb
inc
rol
repnz
sub
xchg
leave
aas
sbb
repz
push
movl
mov
cmp
push
adc
mov
data16
testb
jl
inc
in
cmp
insl
or
mov
nop
icebp
and
js
jl
lahf
jno
lret
mov
int
sub
clc
arpl
cmp
lcall
lret
mov
mov
leave
inc
sahf
push
jae
pop
das
sbb
ss
jle
clc
push
sub
jmp
call
add
cmp
nop
xor
shll
call
stos
outsb
jns
mov
inc
call
cmp
inc
mov
daa
cli
pop
mov
stos
mov
push
or
xor
mov
pop
xor
lods
icebp
inc
lret
add
pop
loope
mov
jno
jge
adc
jbe
sub
lret
mov
and
sub
ret
stc
ljmp
mov
adc
icebp
stos
cmp
dec
cmp
dec
data16
or
push
cmp
lea
adc
push
fistl
mov
test
push
fldt
pop
xchg
mov
pop
shlb
inc
mov
test
xchg
sahf
mov
adc
push
lods
fcom
jl
push
not
pop
je
lea
sti
inc
enter
and
push
dec
adc
pusha
incb
in
rcrl
call
test
into
jmp
push
imul
les
ja
icebp
xchg
lds
aad
cmp
sti
hlt
jp
jno
clc
shll
fidivrs
outsl
insl
andl
mov
icebp
loopne
cwtl
mov
repnz
or
jp
ss
in
push
fsubrp
inc
or
or
out
shlb
std
out
out
dec
iret
mov
fimuls
add
addr16
add
popa
add
mov
xor
and
imul
jne
and
adc
repz
gs
mov
insb
sbb
jle
rcl
mov
push
jg
shl
mov
jo
subb
je
mov
inc
xchg
out
cmpsb
cmpsl
jae
hlt
fdivp
mov
cli
arpl
inc
js
cld
lret
sub
adc
lcall
lcall
rorb
stc
ja
jo
dec
icebp
sbb
push
or
cmp
inc
int
stc
cltd
push
out
lock
xlat
pop
in
pusha
aaa
cmp
insl
sarl
repz
addr16
mov
int3
xor
jne
ret
pop
in
addb
or
add
pop
fadds
lea
push
mov
adc
or
leave
sbb
cmp
mov
lds
out
repnz
and
or
push
ret
lahf
pop
cmp
jae
jb
loop
jmp
pushf
jmp
sbb
aas
fnstenv
xor
frstpm(287
fwait
sbb
adc
push
inc
push
cmc
cmp
jge
fidivrs
es
stos
inc
cmpsl
cwtl
ja,pn
es
inc
mov
dec
mov
sub
mov
push
xor
fdivr
and
data16
fbld
fucomp
xchg
mov
ret
mov
adc
xor
fnsave
lcall
and
test
mov
xchg
ja
jecxz
addr16
mov
test
gs
leave
dec
out
jg
cmpsl
test
sbb
lahf
pop
pop
mov
jns
jl
lods
sarb
mov
daa
repnz
lea
scas
shll
repz
rclb
mov
mov
ljmp
je
bound
xchg
aas
ficompl
pusha
mov
inc
icebp
hlt
divl
stos
sbb
push
aaa
jmp
fwait
es
jp
push
pop
xchg
dec
pop
inc
mov
cmpb
ja
int3
loopne
mov
or
xchg
adc
rcll
fsubp
addl
push
mov
adc
mov
pusha
jp
les
sbb
lds
and
insl
xchg
fidivrs
iret
arpl
xchg
jle
or
xchg
push
loope
add
sbb
fisubrs
cmp
or
mov
roll
inc
cwtl
mov
cwtl
ljmp
push
sub
insb
shrb
xchg
nop
lcall
add
push
sbb
int
xor
cmp
xor
push
les
cmpxchg
pop
cli
mov
inc
iret
repz
sbb
add
mov
mov
inc
ret
jle
les
mov
in
movsb
adc
mov
xor
mov
je
jge
mov
addb
out
sbb
cmpsl
lods
or
cs
or
push
push
xchg
xor
out
push
dec
mov
dec
loopne
mov
cmp
mov
push
adc
test
std
popa
mov
pop
adc
dec
fidivs
rcrl
xchg
mov
push
or
or
push
mov
jp
fcomps
sbb
repnz
ret
push
dec
adc
insb
xor
jl
jge
stc
outsl
int
lahf
mov
rcrl
push
mov
test
out
subl
subl
jle
scas
ds
movsl
pop
xchg
ret
pushf
test
push
dec
scas
lds
out
xchg
cmc
notb
outsl
inc
xchg
jnp
push
sbb
mov
hlt
andl
xor
dec
sub
add
sar
bound
rcrl
lds
mov
adc
push
mov
add
adc
pop
jnp
xor
jle
stos
inc
in
je
adc
imul
aad
orb
lock
fdivrs
in
mov
ljmp
pop
dec
cltd
dec
bound
sbb
lods
pop
loop
jo
mov
lock
aam
jno
test
lods
cmpb
int3
mov
je
pop
or
push
sub
jnp
clc
push
and
iret
pop
test
sub
xor
pushf
das
inc
fcomp
cmp
jl
inc
sub
mov
dec
jae
sbb
cmp
sub
mov
push
jb
sbb
jns
js
lret
jge
adc
lret
or
push
js
sbb
xlat
push
and
das
inc
mov
not
mov
lret
mov
pop
mov
rol
mov
adc
push
pop
mov
rol
test
pusha
add
cli
shrl
mov
add
std
jl
mov
jecxz
mov
jmp
sub
mov
cmp
sub
dec
shl
mov
pop
jno
xchg
adc
and
sub
jb
mov
sbbb
lret
inc
out
arpl
jecxz
int3
mov
imull
dec
or
in
das
xor
cltd
daa
xor
pop
dec
xor
lock
subb
xchg
fildl
mov
mov
divb
aad
icebp
push
mov
inc
pop
movsb
fwait
push
or
cmp
push
pop
push
jo
scas
push
pop
scas
mov
jae
rclb
and
pop
popa
aas
out
bound
aaa
xor
int
sbb
jno
fnstsw
or
push
or
int3
rcl
mov
sub
mov
push
xor
push
xchg
stos
push
jge
or
fidivrl
sub
sub
filds
bound
push
call
cmpsb
popa
mov
add
pop
xor
adc
rcrl
xchg
jl
add
cmp
popf
fcompl
rclb
pop
jo
inc
or
and
rcrl
fwait
lods
repz
das
cmpsl
insb
in
mov
lar
loop
out
jo
mov
out
adc
pusha
dec
outsl
pushf
mov
mov
push
or
xlat
mov
je
xchg
xchg
popf
stos
mov
int
jnp
ds
cmp
push
jae
and
sbb
pop
push
imul
adc
push
icebp
jmp
xchg
fadds
jl
outsb
mov
adc
aad
jns
and
hlt
imul
inc
popa
and
sbb
sub
inc
into
pop
add
pop
dec
lahf
in
xchg
jne
filds
cmp
movsl
mov
adc
add
cli
dec
mov
xor
jmp
sbb
out
and
dec
adc
les
enter
outsl
xchg
jne
jae
mov
addr16
std
xor
and
pop
pop
ret
outsb
lea
mov
icebp
xor
add
adc
push
xor
test
cmp
mov
inc
hlt
xor
fisttpll
push
addr16
nop
lahf
jge
adc
dec
jnp
mov
and
sbb
sub
mov
and
mov
in
fdivrs
mov
xor
shrl
in
push
scas
add
imul
add
add
jle
cmp
mov
lods
or
jb
inc
arpl
push
jbe
push
mov
jg
cmp
pushl
mov
repnz
jnp
fcos
ds
xchg
add
lret
das
add
mov
das
jae
cmpsb
inc
enter
scas
stos
mov
gs
jbe
adc
andl
jbe
jge
popf
out
shrl
div
dec
adc
jae
jnp
imul
mov
push
mov
sahf
addr16
mov
fwait
sbb
in
push
dec
fsubrp
mov
aam
add
inc
and
pusha
arpl
cmpsl
div
sbb
inc
imul
sub
xor
pop
stos
cmp
mov
notl
dec
pop
movsb
adc
cld
or
inc
pusha
arpl
cli
mov
push
sahf
bound
shl
js
and
push
dec
dec
movsb
pop
std
repz
je
xor
pusha
testl
push
push
mov
sbb
lret
daa
lcall
or
out
imul
jns
out
inc
or
mov
inc
pop
cld
in
aad
movsb
pop
push
xor
scas
adcl
iret
inc
xchg
icebp
and
cltd
cli
mov
nop
leave
daa
xchg
loope
adc
mov
fs
outsl
rolb
shlb
cs
test
mov
cmc
and
xchg
scas
mov
cs
inc
clc
cwtl
pop
push
pushf
sub
aas
sub
sub
pop
sub
sub
push
xor
or
push
or
jo
add
xor
aas
popf
repnz
das
mov
mov
mov
movsl
stos
out
lret
add
and
cmpsl
cmp
add
jecxz
lcall
in
lcall
inc
ljmp
lahf
mov
sbb
nop
int3
bound
dec
adc
cvtps2pi
pop
push
push
aaa
fistl
push
cli
jae
pusha
xchg
push
out
or
inc
mov
and
and
pop
les
js
lods
js
cwtl
shrb
mov
push
int3
ljmp
jo
js
and
push
push
pop
jne
jb
jo
bound
cmp
inc
and
or
and
rcrb
rolb
subb
mov
arpl
pop
sbb
iret
pusha
add
xchg
sub
sbb
movsb
xchg
int3
lahf
add
testb
lahf
mov
xchg
xor
addr16
push
aaa
sub
out
jge
std
mov
xchg
stc
cld
mov
and
pop
cmp
jg
push
out
add
repnz
cwtl
inc
cmp
lods
xor
jae
mov
mov
adc
gs
push
mov
adc
xor
sub
sbb
push
sub
adc
mov
pushf
aam
and
je
pop
pop
je
and
xchg
xor
and
divl
dec
adc
push
fdivrl
adc
adc
add
add
aad
adc
xor
je
inc
test
mov
cs
mov
jmp
push
add
add
or
out
out
sbb
mov
xor
xor
cmp
test
push
filds
sbb
imul
add
mov
push
mov
cli
inc
sub
pop
sbb
xor
jle
dec
mov
mov
xchg
sbb
sbb
jmp
iret
and
mov
xchg
stos
test
loop
cmpsb
sahf
lret
pop
jle
xchg
fisubrl
xchg
pop
inc
jg
mov
sbb
fstps
sar
and
mov
mov
pop
push
std
xchg
sub
mov
mov
lods
sti
in
push
and
test
cmpsb
movb
and
cltd
pusha
mov
mov
push
cmpsl
fbld
insb
mov
push
xchg
push
jne
int
out
out
xchg
mov
push
pop
movsb
push
scas
arpl
out
xchg
negl
push
ficoms
sbb
sahf
mov
sub
xchg
mov
repz
fstpl
sbb
jae
jne
pop
into
frstor
mov
mov
mov
leave
mov
mov
sub
je
pop
repz
xor
xchg
pop
stos
pop
testb
mov
dec
sub
sbb
or
scas
dec
movsb
and
decl
lds
lahf
dec
das
dec
pusha
adc
jp
adc
cmp
cmpsb
aas
inc
dec
in
dec
mov
leave
movsb
xchg
mov
inc
imul
lret
loope
xchg
fistl
inc
inc
dec
leave
and
xchg
dec
xchg
xchg
jne
loope
rorb
jne
in
dec
stos
lds
cmp
pop
jbe
inc
xor
fs
push
lahf
int
dec
je
lea
mov
outsl
mov
cmpsb
sbb
shrl
lods
sub
pop
loop
jnp
ret
jecxz
jns
mov
dec
inc
or
sbb
sbb
mov
and
pop
push
inc
aas
neg
repz
pop
inc
xor
in
les
sar
sti
push
movsl
out
xor
and
fsubrl
xchg
mov
pop
and
jmp
mov
and
mov
clc
psrlw
sub
iret
jnp
ljmp
shll
flds
mov
or
xor
or
negb
popa
aaa
cmp
jbe
je,pt
sub
pop
in
notrack
jecxz
shrl
pop
mov
cmc
in
and
fldenv
xchg
xor
pop
adc
sbb
push
stc
dec
cmp
aam
mov
jns
and
or
and
mov
sub
test
pop
xor
shlb
mov
fisubrl
lcall
pop
decb
in
and
jp
mov
adc
xorb
mov
dec
popl
hlt
and
inc
dec
inc
repnz
in
sbb
nop
sbb
mov
int
hlt
test
shl
push
cmc
shrl
pop
xor
xor
mov
cmp
mov
and
adc
iret
sbb
in
inc
stos
sub
das
popf
push
jl
sbb
dec
add
incb
cltd
fldt
ja
int
mov
ret
inc
jnp
es
cmp
call
sarl
or
test
jecxz
push
jns
imul
inc
xchg
fs
xchg
data16
lock
sti
pop
cltd
cs
test
movsb
push
sti
out
dec
push
data16
cmc
into
sub
ljmp
mov
fnstenv
mov
or
mov
inc
adc
faddl
lcall
xor
ds
xor
dec
fwait
jl
stos
lds
push
leave
jmp
mov
push
mov
inc
push
push
lods
mov
or
icebp
pusha
bound
cmp
inc
add
xor
popa
pop
or
jo
movsl
ds
jg
mov
add
ret
fistpl
xchg
out
stc
fists
mov
jmp
push
lea
mov
jmp
xor
sarl
xchg
mov
fisttps
bound
push
sahf
mov
push
call
aad
out
test
and
pop
or
or
cltd
cmpl
pop
add
scas
gs
push
push
add
add
mov
adc
imul
cld
inc
mov
sbb
sbbb
into
test
in
aaa
addr16
inc
xchg
sbb
jne
mov
lret
cmp
rclb
dec
stos
test
jge
mov
sahf
sbb
xchg
imul
cli
fistpl
sbb
xor
clc
call
mov
sub
jo
rol
lods
cmp
pop
push
mov
std
jp
rcrb
mov
add
andl
loopne
test
out
push
fcmovnb
adc
jb
mov
push
jae
adc
pop
mov
fs
mov
lea
loopne
sub
xlat
sub
mov
inc
adc
into
add
xchg
out
and
test
lahf
mov
jno
in
mov
xchg
subb
sub
push
stos
add
fdivrl
jmp
pcmpeqd
loop
inc
sbb
aad
pusha
into
inc
hlt
xchg
jo
fimull
cmpsl
movsl
inc
je
sbb
push
xor
pop
call
mov
and
out
into
dec
in
inc
add
sbb
repz
sub
pop
cmp
bound
in
pop
dec
adc
jno
scas
sub
sti
mov
mov
das
and
dec
push
mov
lock
jbe
ret
insb
mov
ljmp
mov
rcr
jns
pop
mov
add
dec
sub
cwtl
jnp
mov
adc
inc
mov
aad
int
dec
clc
icebp
push
repz
lods
adc
dec
inc
jnp
jmp
pusha
mov
xchg
rcll
es
push
lret
dec
cmp
pop
dec
mov
int
pusha
mov
in
pop
mov
repz
xchg
adc
jbe
jns
cmp
lea
iret
lret
mov
call
aam
inc
bound
sbb
xor
into
push
pushf
adc
sbb
push
xor
rcl
jae
insl
sbb
cmp
lahf
sub
int
repnz
fidivs
lea
dec
out
es
xchg
push
mov
xorl
popf
mov
xor
adc
xchg
dec
inc
push
push
lret
hlt
cmpsb
jecxz
cwtl
cwtl
js
ja
test
push
xor
mov
lock
jo
int
and
adcl
xchg
pusha
lea
adcl
and
stos
rorb
mov
les
and
or
into
sbb
mov
xor
add
aas
lret
adc
es
dec
xor
cld
inc
ja
pusha
data16
call
in
sub
mov
aam
sbb
adc
enter
push
push
cltd
scas
xchg
scas
sub
pop
mov
and
xor
scas
sub
sbb
aas
push
cld
rcl
scas
mov
push
mov
scas
sar
mov
stos
jns
cmp
negl
jle
fadds
jle
adc
shll
pop
testl
stc
mov
arpl
lds
jo
jae,pn
cltd
mov
lods
xor
inc
xor
lret
sbb
xor
adc
mov
bound
cli
jnp
mov
jmp
pop
add
loop
jle
inc
mov
and
mov
push
inc
mov
mov
or
fdivl
pop
imul
add
sub
cmpsb
dec
push
cli
mov
ficoms
jns
int3
lahf
dec
jge
or
push
popa
je
cmp
jb
fs
push
pop
mov
push
aaa
push
xlat
mov
lock
mov
sbb
push
addr16
add
imul
add
lock
insl
je
inc
push
test
mov
jle
fsubrs
fldcw
aaa
dec
jns
repnz
sbb
jae
mov
pop
lahf
hlt
and
xor
mov
mov
jne
test
jp
push
or
ficompl
push
xchg
mov
add
push
cwtl
push
stc
sub
mov
sbbl
cmp
aaa
cmp
cli
mov
or
aaa
mov
xchg
sub
lea
mov
in
arpl
push
adc
or
lock
loopne
pop
push
fwait
shll
xchg
mov
out
aaa
pop
inc
push
adc
inc
hlt
xchg
xchg
push
or
push
or
lds
sbb
mov
xchg
pop
mov
pop
sbb
xchg
in
sarl
shl
cmp
cmp
inc
mov
inc
and
dec
shlb
es
xchg
jmp
adc
rolb
sarl
jecxz
or
movl
shrb
orl
jno
pop
bound
roll
xchg
sbb
mov
dec
les
mov
sub
dec
dec
push
xor
push
adc
movl
leave
sub
jns
inc
testb
pushf
adc
push
adc
ja
lds
jbe
aad
cmp
movb
cmp
adc
dec
insb
xor
gs
lods
sub
mov
jmp
xor
xchg
fisubrs
inc
in
push
sbb
movsl
ss
jle
stos
aaa
jae
dec
dec
rcll
inc
or
inc
lea
fcoml
and
scas
cld
ret
mov
clc
mov
sub
std
or
adc
cmpsl
out
dec
loopne
mov
pop
mov
outsl
jl
fwait
xor
sbb
cltd
ds
xor
repz
test
stc
inc
inc
sbb
or
nop
xchg
mov
sbb
sbb
in
jno
add
inc
add
daa
mov
pusha
adc
mov
dec
stos
push
call
mull
inc
cld
xor
ret
aam
jns
pop
dec
aad
jg
lahf
inc
mov
lret
fnstenv
xchg
push
and
or
xor
mov
sub
bound
arpl
push
mov
and
imul
inc
xor
jle
and
add
xchg
dec
roll
cmp
out
pop
mov
mov
stos
ret
notb
pop
les
inc
jecxz
adcb
into
int
lds
fst
dec
ficoms
mov
sbb
rcll
int3
aam
sub
mov
adc
outsb
pop
and
test
jl
mov
ret
adc
mov
push
cmp
pop
xchg
pop
popf
xlat
lods
sub
xor
dec
subl
cmp
je
lret
cmp
pop
outsb
aad
mov
scas
ficoms
scas
jecxz
aas
stc
out
int
xchg
adc
lds
cmpsl
pop
jge
mov
push
pop
dec
xchg
in
ret
or
scas
or
movsl
sbb
sub
ret
clc
jge
jmp
push
pusha
inc
and
std
mov
in
cld
imul
jl
gs
push
add
inc
cmp
mov
ret
ds
rcrl
popf
sbb
adc
push
scas
mov
inc
jg
test
jg
stos
or
and
sbb
idiv
rcrl
stos
jno
jmp
in
shll
jnp
cwtl
cli
pusha
pop
mov
jle
hlt
inc
lret
stc
pop
and
mov
fwait
mov
mov
out
xor
shrb
cmp
inc
add
cmpl
adc
inc
adc
adc
in
jns
mov
loop
jo
clc
ljmp
mov
ret
pop
in
test
fwait
bound
sti
repnz
jmp
fldt
inc
mov
addr16
pop
xlat
mov
jns
rol
daa
cwtl
adc
pop
pop
jp
push
or
mov
aad
cmpb
jmp
aaa
icebp
jo
and
fcmove
adcl
gs
pop
addr16
loope
push
add
movaps
jne
fcmove
xlat
cltd
sahf
pop
or
rorl
xor
rcr
mov
xor
sbb
mov
sbb
jecxz
mov
fnsave
pop
add
js
push
int3
mov
jno
or
mov
outsl
je
aas
sbb
repz
jne
push
cmpsb
xor
lea
dec
ret
xchg
mov
xchg
mov
pop
xlat
pop
fsub
lcall
fsubrl
fmul
out
aam
pop
mov
fdivs
ret
lock
addl
daa
mov
mov
pop
jge
jl
pop
xor
jo
or
pop
jo
add
dec
fdecstp
or
es
test
test
push
dec
outsl
sbb
xchg
jae
rolb
pop
shrb
aam
sub
je
mov
nop
mov
dec
push
jle
add
inc
jnp
jl
inc
cltd
aam
movl
scas
lods
les
xchg
xor
stos
stos
jp
mov
cmp
in
cmp
mov
push
sbbb
cs
fcoml
cld
nop
fs
mov
shrb
rep
or
adc
mov
popa
call
sub
mov
add
movsb
cmp
cmp
push
mov
std
sub
clc
or
fistps
cwtl
mov
pop
dec
aaa
jnp
test
loop
in
nopl
lret
aad
and
sbb
add
cmp
insb
cmp
jae
adc
ja
and
sahf
mov
adc
dec
dec
fisubrs
cmp
jle
in
sbbl
gs
popf
decb
mov
mov
test
pop
inc
jmp
sarb
divl
xor
arpl
adc
inc
scas
jb
lar
sbb
sbb
lahf
loope
ret
call
imul
es
test
push
xchg
rclb
orl
movsb
rcrb
dec
push
jg
jle
repz
jecxz
cli
and
in
xchg
and
jmp
imul
dec
mov
loopne
pop
in
sti
out
orl
pop
lea
iret
pop
fcmovbe
pop
push
loopne
adc
lods
push
lahf
xchg
mov
xchg
repnz
inc
in
les
sub
jns
add
mov
inc
xchg
add
push
xchg
movsb
xchg
lret
mov
sub
xor
dec
push
inc
mov
insl
mov
jge
mov
xchg
adc
fimull
jle
push
lock
adc
pop
ret
jbe
ret
fwait
xor
enter
jecxz
add
inc
shlb
adc
fisttpl
adc
sbb
das
mov
jns
mov
cld
sbbb
push
or
xchg
shl
dec
push
cmp
sub
inc
sub
popf
jne
scas
jbe
jne
mov
lods
cli
test
addr16
sbb
jnp
push
mov
shl
sub
sarl
cmp
andl
push
push
jl
fwait
dec
shl
lods
loope
adcb
bt
xor
lret
sub
cmpsl
jno
xchg
add
or
push
jns
cmp
jmp
adcl
pop
repnz
adcl
lods
push
stc
gs
xor
sub
popa
mov
repnz
jmp
sub
mov
addr16
and
and
scas
mul
lock
xsave
fcmovnu
sub
mov
push
pushf
movsb
mov
arpl
test
pop
outsb
shll
add
pop
jne
frstor
mov
push
rcll
in
sbb
add
dec
push
jmp
xor
stos
jbe
sbb
dec
dec
pop
movsb
movsl
cs
adc
fisubs
mov
jle
sbb
pop
subl
sub
mov
mulb
and
loope
add
pop
scas
js
testb
inc
bound
test
aad
push
int
sub
and
insl
js
jge
enter
popf
scas
fs
xchg
pop
ja
shl
out
test
adc
std
loopne
mov
fildll
mov
popf
xor
push
inc
xchg
xchg
xor
mov
ljmp
mov
pop
aaa
adc
fwait
xchg
dec
repz
aad
push
cmp
jp
cli
jne
test
btc
add
stos
decb
les
jmp
xor
stos
cmp
jge
fcoms
ss
pop
add
fistpll
jge
js
nop
fs
jbe
and
and
ret
loopne
enter
adc
add
jl
xchg
movsl
push
sbb
arpl
adcl
pusha
add
out
popa
fidivs
jbe
adc
clc
sbb
shlb
fdivrl
dec
sbb
cmp
and
stc
pop
xor
std
ss
mov
jae
insb
and
in
popa
lods
add
push
adc
lods
insb
and
sbb
popa
int
pop
jns
pushf
lcall
adc
notl
xor
xor
push
not
aam
xchg
outsl
sub
outsb
pop
std
dec
rorl
xchg
push
lods
dec
push
loop
in
into
test
jne
mov
insl
add
mov
test
jmp
in
ds
imul
outsl
jl
push
shl
adc
xchg
es
lods
in
jo
data16
and
pop
fwait
pusha
lret
pop
mov
test
pop
std
mov
push
ficoms
int3
nop
jecxz
inc
cmpsl
mov
mov
inc
sti
jnp
sti
xor
jbe
fwait
and
dec
loope
inc
sbb
jnp
mov
xchg
adc
leave
andb
push
mov
adc
mov
push
and
xor
je
dec
scas
jl
inc
ds
sbb
outsb
add
push
fldcw
push
push
cld
nop
pop
lea
push
lea
les
fimull
test
lock
daa
pushf
sbb
sub
cld
orps
xchg
mov
sbb
enter
mov
movl
scas
sbb
pop
rcll
inc
and
out
sub
push
mov
rcrb
push
ret
mov
loope
ds
cmpsb
sbb
test
outsb
imull
sub
or
fwait
xchg
test
and
push
add
mov
test
and
lods
enter
pop
outsb
dec
je
mov
add
pop
out
jg
xchg
mov
insl
addr16
mov
adc
inc
orb
dec
xchg
setae
mov
mov
and
int
cli
or
sub
lock
xor
js
mov
arpl
jmp
inc
fmull
push
lods
out
xor
xor
gs
cmp
xchg
aaa
std
out
xor
sbb
fidivl
mov
push
mov
xchg
cmpl
push
mov
rclb
sbb
stos
pop
in
inc
pop
pop
adc
das
lods
adcb
push
stos
mov
in
cmc
ret
cmp
cmp
andb
gs
popfw
cs
sub
call
sub
scas
jbe
test
leave
adc
test
ja
pushf
cli
enter
jne
jbe,pn
jnp
inc
sub
inc
fwait
xor
add
sahf
ss
dec
xor
jo
ljmp
in
hlt
imul
lds
cltd
in
stc
fs
dec
jmp
pop
cmp
pushf
negl
pop
mov
xorb
xor
dec
aam
jns
nop
sub
xchg
cmp
jmp
repz
mov
fdivl
push
mov
fsts
mov
mov
pop
add
mov
jo
cli
xchg
xchg
icebp
xor
sub
mov
fisubl
adc
mov
push
inc
loop
out
imul
xchg
xorb
mov
add
scas
cwtl
push
insl
out
sub
out
jmp
clc
pusha
inc
add
bound
imul
mov
dec
flds
test
dec
out
das
outsl
cmp
andl
and
mov
clc
fsubl
xor
cmp
fidivs
xchg
mov
push
in
jecxz
or
adc
pop
cmp
shrb
ljmp
fnstenv
dec
add
arpl
adc
mov
xor
stos
sub
mov
shl
rolb
iret
sahf
iret
push
mov
mov
mov
mov
dec
and
rcr
mov
sub
jae
shr
mov
sbb
mov
enter
adc
fmuls
push
sbb
cmp
test
ret
mov
push
xchg
xor
fisubs
cmp
xchg
rorb
rcr
or
sti
test
sub
ja
ret
xor
insl
cmp
daa
cmp
add
mov
out
xor
sahf
adc
popf
jbe
pop
mov
xchg
out
xor
mov
mov
adc
das
mov
roll
adc
loope
jge
jne
xor
cs
sbb
mov
mov
and
lea
ret
pushf
rcl
pop
jbe
xorb
fbstp
rep
frstor
insl
sub
lret
and
cmc
enter
mov
scas
adc
xor
dec
push
jg
add
les
rcl
icebp
mov
inc
push
stos
add
and
lods
sbb
dec
pop
ds
pop
out
imul
push
insl
mov
stc
and
nop
scas
ja
pop
je
scas
dec
or
mov
mov
sahf
or
lahf
lods
mov
push
loopne
or
add
add
out
dec
adc
cmp
adc
or
cmpsl
and
stc
lds
jne
jns
cmpsb
out
or
inc
lock
dec
test
cltd
mov
sbb
fdivs
scas
sahf
mov
fbld
scas
stos
ret
inc
js
imul
xor
mov
fwait
xchg
jecxz
pop
inc
inc
jbe
push
fnsave
push
mov
push
mul
movb
out
mov
or
inc
dec
mov
sub
pop
xchg
inc
into
inc
and
xor
in
in
pusha
int
cwtl
pop
push
aam
lcall
rcll
add
call
pop
xor
aam
mov
sub
lds
xchg
sub
loope
add
sbb
and
fisubs
xor
in
scas
xor
jno
pop
pop
sti
inc
loope
jle
dec
popa
add
test
mov
mov
bound
inc
frstor
mov
scas
cs
fnstenv
cmp
jno
push
xor
jae
rol
xchg
mov
add
pusha
push
movsl
mull
mov
pop
push
and
outsl
inc
mov
push
push
pop
push
mov
movsb
push
mov
movl
xor
je
pushf
jle
lret
es
es
pop
std
std
loopne
std
mov
sti
in
jae
jno
inc
add
in
aaa
inc
mov
sbb
lock
cmp
fimull
dec
adc
pop
dec
dec
fisubrl
fldl
call
popf
xchg
outsl
push
xchg
mov
mov
xchg
xchg
iret
bound
out
push
mov
mov
imul
xor
pop
aas
lahf
jg
pop
pop
cmp
dec
mov
adc
clc
sahf
sbb
and
sub
rclb
pop
popa
jb
jecxz
mov
fisttps
daa
rcr
dec
mov
iret
mov
ficompl
cmp
mov
aad
adc
cli
xchg
pop
mov
out
enter
pop
add
pop
cmpsb
sbb
repz
fwait
mov
mov
xlat
adc
sub
in
cld
insl
int3
dec
insl
cmp
incb
cmpb
dec
cmp
dec
push
add
push
add
nop
stos
mov
das
loopne
sbb
jmp
jno
sub
mov
dec
mov
cmpsl
jge
loop
dec
jno
and
es
fwait
jns
std
ljmp
pusha
nop
stos
out
fstpl
repz
mov
icebp
test
stos
adc
mov
adc
cmp
inc
jp
mov
jl
xchg
xor
adc
sub
push
add
leave
jle
jmp
shl
dec
sub
shl
scas
mov
push
mov
test
sbb
out
xchg
push
push
pop
push
mov
adc
cmpb
fsub
ret
push
lcall
jnp
mov
sbb
xchg
add
xchg
notb
insl
cwtl
mov
or
or
sbb
test
cs
int
stos
mov
cwtl
lahf
pop
out
into
fistps
fdivl
add
cmp
fs
test
ljmp
mov
outsb
popa
mov
ficomps
push
pop
pop
es
pusha
std
test
pop
loop
or
aad
imulb
pusha
mov
and
push
push
lcall
inc
mov
pop
fwait
push
push
iret
xchg
js
mov
dec
cwtl
imul
adc
dec
lods
aam
ret
inc
test
lds
adc
sbb
mov
pop
mov
mov
mov
xchg
sar
and
mov
je
daa
adc
lea
insb
stos
add
int
mov
imul
outsb
lods
je
lahf
js
xchg
sbb
mov
test
mov
mov
lcall
or
inc
sbb
add
nop
mov
out
cmp
fcoml
flds
lea
mov
sti
push
cmp
add
rcl
andb
scas
movsb
or
inc
inc
cmp
js
int
jnp
lock
das
adc
jge
add
pop
adc
stc
les
out
mov
nop
pop
ret
lahf
fsubl
adc
xor
pop
arpl
in
cmpsl
dec
in
sbb
cltd
lret
mov
lock
jns
dec
jo
std
test
mov
testl
dec
lods
pushf
lcall
lret
cld
test
pusha
or
mov
stos
push
adc
cmp
push
fisubrs
icebp
mov
aas
je
or
mov
outsl
inc
adc
push
ss
cld
jmp
jo
rorb
loope
push
andb
arpl
bnd
inc
add
mov
fsubrs
or
jp
clc
push
test
sbb
lods
jno
sbb
jb
mov
popf
test
mov
ljmp
or
fs
xor
leave
mov
add
enter
pop
mov
mov
inc
and
dec
mov
xchg
gs
jecxz
fisttpll
lock
loope
test
je
pop
push
adc
data16
dec
inc
fdivs
idivb
adc
popf
addr16
xlat
fcmovnb
mov
sbb
cs
sub
cs
inc
mov
pop
sti
pop
adc
popf
jns
imul
pop
mov
push
sbb
out
jge
push
stos
jne
sbb
cmp
inc
out
push
cmp
stos
cmc
arpl
outsl
dec
insb
cmpsb
pop
lcall
add
adcl
lahf
out
mov
rolb
adcb
push
rcl
addr16
std
icebp
cmp
push
add
test
in
push
sub
push
or
or
add
pop
xor
push
loope,pt
pop
pop
sbb
mov
adc
xchg
sub
mov
jb
clc
pop
fiadds
inc
xorb
xchg
ja
push
pop
pop
movsb
mov
mov
mov
cs
mov
movsb
pop
std
push
arpl
mov
cmc
mov
or
dec
sub
inc
out
inc
ret
rorl
sub
xor
in
xor
jl
leave
and
xor
xchg
jg
popa
icebp
jne
lock
es
or
mov
push
loop
fsts
jae
fldl
cmp
pop
mov
shl
int
sub
mov
imul
xchg
dec
add
cli
pop
xchg
or
jmp
and
jl
addl
dec
mov
add
rcrb
mov
test
ss
jg
jge
push
inc
adc
pop
xchg
sbb
mov
cmp
inc
stos
jae
inc
add
mov
dec
add
xor
mov
inc
pavgb
mov
out
out
outsl
fwait
adc
cmp
dec
pop
sub
pop
test
fcomps
mov
lret
sub
clc
sarb
cmp
push
stc
or
int
out
dec
lret
cld
leave
jl
add
sub
dec
xchg
mov
fs
imul
jns
mov
ja
and
nop
ljmp
and
cwtl
in
jl
sbb
pop
adc
inc
sub
loopne
inc
repnz
pop
pop
and
cltd
lds
and
insb
leave
xchg
jle
call
rcl
dec
mov
xchg
movsb
repnz
jle
mov
xchg
shrl
xor
dec
andb
cli
hlt
imul
ljmp
rcl
mov
outsl
js
lock
loopne
jl
add
lret
xor
pop
xor
bnd
lret
mov
inc
lret
and
push
lods
jnp
mov
pop
xor
adc
insb
sbb
xlat
ficomps
out
xor
mov
jle
dec
aam
test
add
mov
xor
loope
ret
add
aaa
dec
xor
leave
inc
pop
jmp
xlat
sbb
fmuls
stos
ret
repz
cmp
mov
fs
iret
test
outsl
div
sbb
sbb
mov
mov
or
push
in
jl
sub
xor
push
int3
mov
sahf
or
jle
sub
and
inc
pop
enter
pop
dec
sub
repz
xor
fs
inc
popa
cmpsl
into
cmpsb
mov
sbb
imul
ja
sub
arpl
jmp
xor
mov
jne
pop
cwtl
mov
or
hlt
shlb
jb
mov
push
and
rcrl
nop
adc
mov
sub
std
xchg
scas
sub
xchg
call
mov
push
andb
pushf
fisubrl
mov
xchg
int3
sti
push
loop
push
das
dec
jnp
jo
imul
mov
sbb
cmp
add
ja
xchg
jge
or
mov
pop
mov
insb
test
push
fsubrp
movb
and
outsl
pop
or
loope
cmp
xchg
xchg
mov
fisubl
add
inc
and
dec
in
cld
mov
mov
sbb
adc
dec
mov
fcoms
mov
push
mov
lods
cmp
fildll
mov
in
loopne
add
pop
mov
sbb
mov
sub
leave
pusha
pop
je
adc
pop
mov
xchg
mov
inc
dec
push
pop
and
mov
xchg
pushf
mov
pop
insb
lea
cltd
push
insb
adc
lret
mov
mov
pop
icebp
loopne
xchg
push
inc
xor
pcmpgtd
jecxz
sbb
dec
jo
fisttpl
adc
cltd
sub
push
rorl
push
sahf
dec
shl
xor
lahf
adc
cmp
sub
inc
outsb
shll
or
lcall
not
fmul
xchg
mov
rol
in
or
aaa
xor
push
shr
imul
adc
lahf
fwait
lods
inc
xor
add
push
pop
mov
roll
cvttps2pi
cmp
sub
and
data16
xor
mov
movsl
pop
lods
bound
xchg
pop
dec
rolb
lret
pop
ficompl
addb
dec
mov
or
pushf
mov
pop
lds
dec
data16
in
or
jb
scas
pop
add
loop
push
fsubr
repnz
xor
cwtl
lcall
in
testb
shrl
loopne
jecxz
cmp
pop
xchg
dec
ljmp
sahf
xlat
jle
jle
fists
imul
add
loop
repz
add
je
sbb
adc
popf
mov
int
mov
dec
mov
dec
imul
pop
pop
sti
push
xor
dec
jp
in
and
ror
mov
xchg
gs
push
lock
mov
jae
call
out
dec
int3
in
jnp
scas
mov
lds
jmp
repz
adc
mov
gs
packssdw
jge
jb
pop
jecxz
mov
mov
into
rorb
sub
and
cmc
mov
shr
rcrl
mov
mov
xlat
hlt
paddb
mov
sub
and
nop
mov
mov
push
push
in
jg
cmp
pop
lea
cmp
xchg
push
int
adc
pop
adc
cmpsl
dec
adc
mov
lods
ret
sbb
fcomps
xchg
fs
jns
add
sahf
lcall
sub
into
loopne
cmpsb
push
out
movsb
add
xor
pop
hlt
xchg
jnp
aam
int
and
mov
jmp
les
sbb
arpl
jge
rorb
stos
mov
call
inc
lock
ret
mov
xchg
sahf
jg
test
dec
lods
loop
sub
stos
dec
je
or
xor
dec
adc
mov
outsb
fists
loopne
dec
pushf
std
in
push
adc
rcrl
out
sbb
mov
aam
je
pop
into
and
xchg
iret
inc
and
repz
ss
je
arpl
inc
repz
mov
addr16
push
loopne
mov
lcall
and
repz
xor
dec
dec
push
clc
jns
sahf
mov
call
or
mov
leave
outsb
mov
push
sbb
xchg
xchg
jae
fsubrl
sbb
addb
xchg
jb
test
pop
out
add
sbb
xor
pop
jp
sbb
cmc
aad
sub
loopne
pop
rol
rorb
mov
xchg
jecxz
mov
test
ficomps
lcall
pop
inc
popa
std
mov
pop
mov
mov
inc
popa
lahf
ret
lret
loopne
inc
jno
test
mov
cwtl
mov
push
nop
or
sub
jne
mov
push
cmpsl
and
fimull
repnz
and
sub
jns
mov
mov
cmp
xchg
scas
fwait
push
sbb
aaa
and
jmp
mov
andl
sub
jae
mov
mov
xchg
xor
cmp
jno
pusha
mov
xchg
outsl
pop
test
in
es
pop
jg
pushf
jl
pop
bound
or
loopne
inc
sub
add
cmp
mov
in
sahf
cmp
inc
mov
insb
dec
or
std
push
fistpl
popa
xchg
adcb
mov
xchg
loopne
add
cmc
stos
in
and
lcall
mov
cmc
cmp
jb
mov
mov
addr16
mov
dec
negl
cltd
pop
dec
dec
loope
insb
and
or
pop
xchg
pop
jae
mov
mov
or
fistps
sub
cmp
jno
cli
bound
sub
push
jmp
push
imul
and
push
push
mov
jbe
push
jnp
out
and
cmp
mov
hlt
jge
mov
add
or
mov
std
rcr
dec
mov
mov
push
bound
sti
inc
mov
add
std
mov
push
pop
fcoml
in
and
mov
lahf
mov
jl
xchg
mov
cmp
cld
sbb
out
or
xchg
push
rcrl
push
loope
jno
sub
ret
enter
xor
dec
test
aaa
shr
je
rorb
loop
jns
sub
mov
pop
int3
jp
pusha
out
jl
jmp
xor
jg
gs
loope
out
dec
insl
xor
int3
dec
gs
push
std
mov
pop
arpl
mov
jl
xchg
cmp
iret
icebp
push
in
xor
stc
pop
out
mov
lcall
jecxz
scas
int3
mov
cs
paddw
mov
cltd
jle
push
sbb
jle
ja
aad
mov
mov
dec
adc
aas
test
push
cld
dec
test
adc
insl
aaa
add
and
shrb
push
xor
insl
add
in
daa
cwtl
push
and
lret
or
xor
movl
fcoml
jb
loopne
pusha
std
fcmovbe
mov
push
cmp
stos
aad
sub
push
outsb
fimull
mov
jp
lret
cmp
jno
jns
cld
mov
rcr
dec
sub
inc
divl
inc
jecxz
vmread
inc
test
shlb
mov
in
add
in
lret
sub
jle
mov
rorl
xchg
mov
enter
and
cltd
bound
push
xchg
mov
cmp
jo
cmp
cwtl
mov
fcoms
mov
mov
les
mov
fldl
add
popf
inc
sub
jns
mov
fbld
mov
stos
xor
cmp
cli
je
adc
es
xchg
jno
or
xchg
dec
and
lret
jae
dec
dec
mov
inc
xchg
or
out
mov
pop
push
ret
pop
xchg
lods
jnp
leave
rorl
jo
arpl
push
pop
loope
mov
cmp
rclb
and
imul
test
out
aam
aas
mov
or
sbb
outsl
add
inc
imul
test
xorb
cmpsb
fldenv
in
out
dec
and
jge
push
mov
add
push
sbb
xor
add
mov
pushf
inc
sbb
js
lcall
mov
add
pop
scas
pop
xor
mov
xchg
jo
cmp
inc
je
scas
iret
lcall
push
adc
sahf
sar
jmp
mov
mov
push
xor
xchg
les
and
mov
fwait
pushf
cltd
mov
inc
test
push
cmp
stos
divb
sub
test
fwait
adc
push
in
rorl
and
sub
dec
lret
fistpll
xlat
lods
mov
xor
sub
add
stos
inc
mov
xchg
fstpl
cmpsl
jne
imul
ljmp
je
out
and
mov
inc
nop
test
outsb
adc
enter
add
dec
sbb
gs
jbe
adc
jo
inc
outsl
outsb
cs
mov
xlat
je
cli
xor
iret
push
dec
mov
adc
jle
pop
jle
push
fcmove
xchg
cmp
mov
sub
adc
shl
xorb
ret
sti
push
xlat
jns
addr16
mov
aam
popa
sub
jae
mov
pop
xchg
mov
jmp
adc
movsb
jle
fmulp
cmp
lcall
aad
clc
mov
int3
pushf
push
int3
movzbl
push
inc
in
pop
repnz
gs
pop
dec
por
outsl
xchg
pusha
xorb
repz
add
push
outsl
jmp
sbb
aaa
ffreep
push
aas
cmpsl
add
or
pusha
xor
push
jp
fwait
mov
sub
test
nop
jmp
mov
push
cmpsb
xor
sub
xchg
xor
push
pop
fwait
arpl
sub
ds
jl
mov
dec
cmpsb
or
in
repnz
cmp
mov
jl
adc
inc
push
jo
sub
cmpsl
gs
out
xchg
xor
add
and
les
sub
sarb
add
xor
nop
jbe
leave
mov
mov
test
mov
rol
outsl
fstl
leave
cmpsb
imul
push
pushf
mov
cmp
lea
mov
xor
push
stos
mov
into
bound
dec
jno
xchg
sub
and
movsl
clc
arpl
dec
sub
daa
dec
push
pop
fstpt
ficomps
jl
imul
lret
into
negb
mov
adc
jo
xrelease
adc
xor
test
adcl
and
pop
in
fistl
add
insb
loopne
and
lock
cwtl
mov
rolb
fiaddl
arpl
mov
outsb
xchg
ss
fwait
add
repz
push
xor
sub
pop
rcll
mov
insl
jge
push
jp
fwait
movsl
xor
mov
inc
push
mov
mov
xor
jnp
xor
adc
jne
aad
cmpsb
cmp
xchg
dec
shlb
add
outsb
cmp
lret
jb
repz
jne
sbbb
aaa
dec
cmpsb
push
cld
inc
enter
xor
xchg
popa
pop
jns
mov
pop
out
outsl
or
stos
pop
enter
cmc
cli
push
test
mov
lret
sbb
pop
inc
cmpsl
pushf
ss
cmp
xor
xchg
xor
pop
lret
mov
xor
or
jbe
mov
mov
jae
jge
push
xchg
cwtl
mov
fisubs
xchg
test
xor
xchg
mov
push
sbb
mov
mov
dec
or
pop
cmp
adc
imul
movsl
mov
sub
xchg
mov
xor
out
aad
stc
and
sbb
mov
std
add
xchg
daa
jmp
or
call
xor
imul
mov
pusha
inc
and
mov
xchg
sahf
dec
inc
mov
repz
push
cli
jo
jl
mov
in
and
pop
pop
add
xchg
repz
mov
js
sbb
pop
loopne
add
es
sahf
jge
add
cmp
stc
lahf
pushf
lods
imul
out
push
and
incl
int
lods
mov
test
or
inc
pop
fbld
mov
push
sti
stos
arpl
imul
dec
cmp
add
sub
sbb
and
int3
test
mov
or
sbb
out
xor
outsl
imul
enter
push
push
pop
mov
dec
das
xchg
dec
push
cli
cltd
jecxz
aam
icebp
sub
mov
push
in
mov
add
mov
out
aad
je
lcall
sbb
ss
jbe
sbbl
loopne
jmp
frstor
mov
sbb
iret
xchg
or
adc
mov
inc
das
sub
daa
or
jge
xor
mov
mov
insl
sbb
jmp
and
jecxz
ds
sbb
repz
icebp
int
push
call
inc
xchg
icebp
push
mov
push
sub
test
mov
repz
xchg
or
or
pop
and
mov
je
xor
insb
mov
adc
and
sbb
insl
pop
jne
sarb
xchg
and
popa
pop
mov
push
imul
into
clc
jge
in
rorl
xor
xlat
add
xchg
out
and
mov
cmp
jo
jp
stos
xchg
jne
mov
mov
imul
dec
int3
ljmp
fisubrl
inc
nop
out
stos
das
inc
xchg
clc
test
jbe
fstps
scas
bound
clc
push
inc
fwait
xor
cltd
pop
jne
sbb
inc
aaa
mul
mov
mov
mov
out
daa
jge
stos
xchg
rcrl
or
movsl
out
ss
popa
adc
in
outsb
push
sub
inc
lock
int
mov
xchg
andb
cmpsb
cmpsb
mov
push
loop
mov
xor
jl
xchg
mov
add
pop
sbb
dec
pop
lret
pop
imul
pushl
aad
jns
jmp
outsl
sbb
mov
popl
js
dec
bound
or
ret
push
jecxz
push
mov
pusha
fs
addr16
sbb
mov
sbb
fsubrs
dec
jecxz
int3
mov
loop
ret
mov
xchg
xchg
push
test
imul
shlb
and
andb
mov
pushf
mov
or
inc
mov
jmp
cmp
cmp
xchg
scas
pop
lcall
ss
shrl
or
mov
mov
adc
imul
xchg
arpl
out
pop
aas
or
icebp
jbe
sub
mov
mov
fmull
lock
jmp
push
xor
jle
push
mov
stc
nop
xor
ret
rclb
inc
cpuid
dec
xlat
rcll
or
dec
div
repz
lret
int3
xchg
dec
imul
sub
addb
jmp
bswap
push
or
rcr
mov
cmp
out
arpl
push
gs
scas
mov
and
aad
mov
repz
mov
mov
movsl
clc
ljmp
or
nop
dec
out
pop
jge
fsubrl
push
js
into
xor
mov
gs
add
jecxz
jns
test
flds
popa
push
std
inc
cld
inc
push
repz
push
adc
and
xor
push
movsb
inc
aas
cmp
test
jnp
stos
loopne
insl
loope
std
jnp
dec
pushf
xor
gs
bound
push
sub
fmull
iret
jne
imul
cmpsl
clc
ffreep
and
jle
push
sub
les
cmp
cmp
clc
cwtl
ret
out
dec
pop
and
adc
cs
cmp
das
out
cmp
push
fadds
mov
cmp
out
leave
scas
das
ss
jnp
jge
add
lcall
mov
std
jge
imul
xor
stc
adc
or
xor
fmul
dec
rcr
mov
pop
push
xor
cmp
jb
dec
push
and
loop
adc
rorb
xchg
push
std
repnz
inc
jmp
sbb
and
xlat
test
xchg
pop
loopne
add
sbbb
iret
out
les
push
gs
jle
loop
stos
mov
test
push
mov
outsl
enter
je
jecxz
jne
jo
dec
mov
scas
pop
inc
mov
add
into
or
inc
fists
mov
fs
call
subb
repz
inc
icebp
cwtl
inc
pushf
test
stos
inc
add
fidivs
cmc
shrb
movsl
sub
lret
mov
sbb
test
inc
xchg
popf
mov
pop
xchg
or
sub
clc
mov
repz
pop
imul
push
test
inc
icebp
es
xor
in
cs
sti
jle
fsubl
mov
repnz
dec
stc
test
int3
xor
pop
sub
int
ja
test
inc
das
shrl
cld
fnstsw
shrl
fucomip
mov
push
or
and
fnstenv
popf
icebp
rcr
fistpl
scas
jae
jno
push
push
or
adc
dec
sahf
dec
mov
cmc
popa
int
mull
je
in
or
jo
pushf
shrl
mov
mov
push
jg
pop
push
push
xor
mov
test
ss
out
cld
fxch
rorl
inc
inc
outsl
lds
xchg
loope
test
fcmovu
cmp
dec
and
ja
sahf
push
mov
add
vpsubb
ret
push
xor
lret
or
mov
xlat
mul
add
xchg
or
stos
push
into
mov
xor
jmp
sbb
xor
xor
sbb
and
test
add
in
and
xchg
cmp
mov
leave
cmp
or
mov
lahf
enter
lods
dec
mov
push
aam
test
mov
adc
adc
pop
xchg
jl
hlt
ret
jnp
jae
adc
push
add
mov
push
mov
xor
add
push
and
in
in
ret
roll
mov
fidivs
mov
mov
cmpsl
test
lret
xchg
adc
popa
sub
and
mov
aad
inc
mov
arpl
arpl
lock
push
jmp
jb
les
pop
jns
das
stc
clc
sbb
cli
add
mull
push
inc
and
xchg
fcomps
jns
ja
xor
jmp
or
idiv
insl
pop
xchg
cs
cmpb
sarb
jae
push
cmpl
hlt
ss
dec
cmc
movsl
and
ss
xorl
ja
gs
dec
negb
sbb
cs
loop
inc
int3
or
dec
jp
rcrl
sbb
sbb
inc
xchg
and
mov
jecxz
add
pop
icebp
mov
dec
lods
push
cwtl
push
and
fwait
lret
and
in
mov
loopne
lret
jae
sahf
sbb
movsl
push
jmp
je
push
rolb
scas
jns
jae
mov
aaa
out
pop
mov
jp
dec
mov
rolb
call
lea
daa
and
add
cwtl
pop
inc
jle
push
pushf
sub
dec
push
and
clc
pusha
in
fs
jne
cmpsl
xlat
jnp
sbb
pop
jno
xor
and
mov
out
ret
int3
js
adc
lds
and
addr16
push
dec
pusha
scas
dec
cmp
mov
mov
jge
ss
std
dec
out
bound
cmp
dec
xchg
dec
mov
jae
xchg
jb
out
roll
imul
js
push
sub
movsl
add
negl
sbb
jg
add
rolb
les
dec
repnz
scas
mov
sub
and
cmpsl
pop
fwait
pop
add
inc
adc
xchg
and
ret
mov
mov
push
jb
sub
ret
push
push
inc
pop
adc
lret
in
sub
sub
and
cmp
pop
sbb
mov
pop
add
pop
and
sbb
push
call
add
rol
mov
mov
cmp
mov
xlat
lret
push
pushf
sbb
std
pop
sub
jl
out
or
cmp
mov
repz
int3
cmc
shrl
xchg
adc
repz
xchg
inc
mov
divl
jbe
xor
xchg
aas
aam
mov
mov
loopne,pn
cmp
mov
stos
dec
addr16
das
adc
in
loope
rorb
xchg
xchg
push
sti
push
and
out
adc
out
pop
mov
adc
pop
or
clc
and
arpl
push
jl
jge
cmp
dec
mov
lret
movsl
rcrl
sti
and
mov
dec
bound
fcoml
xlat
push
mov
jecxz
adc
mov
adc
push
aam
data16
xlat
rcl
daa
bound
mov
jae
jns
cmp
aas
int
mov
mov
aas
daa
inc
dec
push
jle
lahf
lods
pop
xlat
xchg
and
xor
dec
test
push
adcb
push
lcall
sub
test
add
cmpsb
mov
inc
dec
push
jo
sub
in
pop
lahf
adc
lret
clc
movsl
push
test
insb
push
test
enter
dec
sub
fisttpll
mov
popf
lahf
jge
or
jne
subl
add
push
xchg
mov
icebp
pop
test
mov
not
add
fimull
mov
push
push
jne
rcrl
rcll
sbb
js
lods
dec
xchg
cmp
mov
lahf
xchg
or
push
push
cld
jno
mov
popf
je
inc
fstpt
into
cmpsb
inc
cwtl
push
jecxz
pusha
push
gs
repz
sbb
rolb
aaa
push
mov
jg
cwtl
lds
jmp
mov
jl
cmc
loop
sbb
inc
nop
adcb
cmp
xor
adcl
sbb
xchg
mov
pop
adc
adc
mov
xor
fs
xor
pop
mov
std
add
mov
cmp
mov
in
jl
push
out
xlat
mov
fimuls
ds
sub
icebp
clc
ret
loopne
dec
sub
add
scas
sar
sub
shlb
out
jmp
out
push
pop
mov
xchg
out
jle
roll
cmp
push
adc
mov
or
cmc
dec
push
xchg
test
push
fistpl
jno
fwait
mov
mov
es
or
xchg
sbb
jo
mov
outsl
int3
mov
test
sub
cltd
pop
xchg
add
mov
jo
adc
mov
mov
or
and
test
sbb
test
cmp
fs
inc
cltd
cmpsl
mov
add
pop
pop
popa
jno
sub
add
dec
call
cld
movsb
xor
jmp
or
xchg
scas
adc
dec
mov
fcomi
testl
or
scas
das
sub
push
add
rcll
cmp
jne
and
pop
xor
push
in
dec
jnp
dec
sbb
ret
and
push
ds
jge
inc
cld
jl
xchg
sub
loope
jae
push
and
shll
mov
sbb
jg
xchg
sbb
inc
ds
sbb
jl
cmp
jb
lret
insb
stos
sub
push
loopne
add
lcall
js
ss
pop
aas
xchg
mov
out
pop
push
cmp
out
dec
cmp
and
test
mov
and
cli
fs
outsl
mov
ss
lret
mov
mov
and
pop
jbe
popa
dec
frstor
add
mov
test
xor
and
fstp
mov
dec
mov
xchg
std
std
shll
pop
fidivl
insb
add
call
aas
cmp
clc
cltd
mov
pop
and
pushf
xchg
mov
mov
sti
loope
jmp
mov
fstpl
clc
sub
and
dec
push
fistpl
gs
ja
out
lret
gs
inc
testl
lcall
pop
int3
mov
test
mov
push
xor
icebp
lods
pop
adc
pop
inc
sbb
lahf
test
lds
lahf
ljmp
in
stos
sbb
pop
movsl
jbe
cwtl
sub
movsb
xchg
and
pop
outsl
subl
rcll
cmp
fistpl
mov
add
nop
inc
leave
add
dec
xchg
jle
jne
imul
sbb
loopne
fsubrl
cmp
mov
xchg
lock
nop
test
cmc
jp
jle
in
and
jns
push
roll
xchg
xor
mov
shl
and
lcall
enter
mov
mov
dec
stos
mov
mov
lret
data16
jnp
push
push
fmull
pop
aad
sahf
outsl
decl
rcrl
mov
pop
cwtl
scas
mul
add
std
mov
pop
jb
rorl
sub
in
hlt
sbb
in
ljmp
pop
xchg
xchg
subb
or
das
and
lret
fsubrs
lock
dec
adc
in
data16
or
jmp
sub
add
push
mov
mov
push
mov
fsts
mov
enter
mov
mov
dec
shl
mov
push
pop
pop
mov
push
adc
push
or
add
xor
lret
clc
sbb
sbb
cwtl
add
and
add
gs
pop
jb
jno
xchg
adc
xchg
filds
mov
or
mov
xchg
push
ds
sahf
dec
and
add
lahf
not
lds
jle
mov
add
cs
jns
mov
xchg
std
inc
aam
outsb
ljmp
les
call
mov
andl
pop
xchg
arpl
xor
or
and
shl
mov
mov
repz
mov
gs
cmp
mov
pop
imul
jns
cmc
adc
jb
mov
repnz
test
add
in
dec
loopne
clc
pop
mov
mov
or
cwtl
dec
push
adc
test
addl
and
mov
inc
lahf
ret
lret
popf
push
lds
shll
int
lret
jo
mov
sbb
lret
cmp
mov
dec
test
adc
jg
lds
stos
call
mov
mov
mov
imul
push
push
inc
dec
test
lods
rclb
cmpsb
mov
jle
dec
jbe
std
outsl
enter
stos
fsts
fs
pop
outsl
adc
add
xorl
dec
jnp
mov
push
ljmp
call
into
xchg
and
loop
sahf
dec
mov
scas
add
and
adc
gs
movsb
fwait
cmp
mov
xchg
dec
into
inc
inc
pusha
insl
adc
in
xchg
mov
mov
out
xor
jecxz
lds
mov
fimull
mov
push
add
cmpsl
fcmovnbe
mov
adc
mov
test
jecxz
mov
dec
mov
movsb
cltd
push
rolb
and
rol
dec
xchg
jge
inc
out
mov
dec
mov
mov
scas
rcr
lcall
shl
pop
and
data16
loopne
mov
adc
jne
out
subb
jae
sbb
es
leave
das
mov
push
push
fs
loope
inc
in
clc
pop
arpl
mov
jne
mov
cmp
je
xchg
shl
inc
loope
testl
stos
nop
repnz
in
dec
jno
mov
fistps
mov
notl
das
and
pop
or
adc
lods
sahf
dec
aas
cwtl
push
jbe
in
repz
iret
mov
push
aad
adc
pop
outsb
sub
mov
add
cmp
xchg
xchg
pop
mov
sub
add
mov
sub
jae
sahf
push
dec
mov
es
aad
out
sbb
int
sub
dec
mov
push
out
test
sub
sbb
add
popa
push
outsb
mov
cli
movsl
jl
inc
rorl
sbb
mov
jnp
add
xchg
lds
or
lea
dec
push
jae
add
fucom
mov
movb
adc
push
lret
xor
data16
fldl
pop
jns
in
or
xchg
jmp
iret
pop
push
pop
mov
fidivl
lahf
fimuls
ss
clc
loope
iret
nop
inc
mov
or
movups
sbb
stc
xlat
fwait
or
mov
in
insl
andl
pop
pop
sbb
or
mov
dec
enter
addr16
jae
and
aam
and
sti
leave
dec
nop
les
cltd
sbb
sbb
leave
inc
add
clc
dec
or
ss
pmullw
data16
insl
add
mov
int3
jo
adcb
pusha
mov
sub
dec
out
push
iret
pop
daa
in
jecxz
add
jg
ss
mov
ds
push
scas
inc
gs
pop
cli
in
mov
dec
push
push
aam
push
xor
sbb
dec
dec
inc
xchg
push
pop
mov
das
incb
stos
outsb
stos
mov
or
inc
icebp
dec
xor
popf
pop
push
fidivrl
in
repz
int3
fsubr
incb
and
pop
xor
jecxz
push
dec
hlt
shlb
int3
shll
inc
insl
jnp
push
dec
out
jae
mov
dec
jl
popf
cmc
push
push
cmpsb
cmp
lahf
faddl
testl
js
jl
or
or
push
mov
ficomps
clc
pop
push
fldpi
cmp
mov
icebp
mov
sar
pop
or
stos
out
dec
aas
enter
pop
and
mov
shl
mov
inc
jae
into
adc
sahf
popa
mov
push
cmpsb
js
lret
dec
mov
jo
dec
cmp
sub
xchg
xchg
mov
gs
popf
pop
fstl
push
dec
hlt
icebp
aam
rol
fnstcw
arpl
js
jle
xor
ss
out
cmp
and
stos
testb
gs
test
or
adc
test
dec
mov
xchg
push
xchg
fsubs
cltd
clc
sbb
and
inc
push
enter
lods
adc
daa
sbb
adc
ficomps
sar
jbe
add
push
imul
push
sbb
loopne
pop
ret
sahf
cwtl
xchg
pop
jne
mov
jae
mov
sub
repz
push
xchg
xchg
lods
testl
mov
in
dec
cli
bound
rolb
sub
or
pop
inc
clc
xchg
adc
outsl
sti
je
mov
mov
inc
clc
push
push
ja
aam
mov
enter
arpl
sbb
jb
fmul
push
pop
cmpsl
mov
in
add
dec
pop
in
add
fnsave
xor
call
mov
add
and
sbb
imul
add
jg
es
ja
xlat
jle
ficomps
jp
jle
or
sbb
ret
jle
shll
vmovntps
adc
arpl
int3
push
jl
xor
ficomps
movsl
hlt
js
roll
mov
int3
push
or
in
scas
inc
dec
adc
rcll
ss
xchg
mov
mov
jns
push
insb
rcl
jne
sahf
push
enter
roll
xchg
push
mov
daa
pop
mov
inc
lahf
andl
sbb
cltd
mov
out
add
icebp
cmpsb
inc
dec
jns
mov
movsb
loope
xchg
ret
mov
jno
push
cli
loop
xlat
mov
repnz
and
and
mov
mov
es
cld
fldenv
loop
in
push
hlt
in
push
ja
ficomps
inc
mov
sub
sti
out
repnz
pusha
xchg
sbb
shr
fcmovne
push
sub
jns
int3
lods
mov
repnz
aam
mov
mov
lret
scas
jnp
aas
add
fdivrp
or
jns
mov
jo
sbb
leave
push
dec
stos
xor
xor
jne
sarl
xchg
lods
cmp
pop
mov
jle
aad
shlb
jns
inc
imul
or
mov
jne
rorb
sub
dec
mov
stos
mov
in
inc
fdivrl
inc
dec
movsl
and
in
pop
fucomp
jl
xchg
hlt
ret
cmp
dec
pushf
pop
push
stc
and
clc
outsb
jne
call
sub
test
adc
push
xchg
or
inc
cmp
ficomps
add
xchg
mov
movsb
cmpsl
xchg
or
xor
pop
ficoms
in
xchg
das
mov
mov
pop
repz
in
xchg
mov
mov
sub
sahf
imul
xchg
jo
add
and
shl
pop
pop
imul
xchg
sub
iret
xchg
icebp
pop
test
repz
fucompp
cmp
add
add
mov
test
imul
cmp
movsb
repnz
and
divl
test
ds
into
lods
mov
push
xchg
cltd
mov
repz
fnstcw
outsl
leave
in
in
out
mov
inc
repnz
dec
shlb
test
push
icebp
mov
sub
xor
nop
in
xor
dec
clc
stos
mov
jmp
rol
cmp
dec
xchg
or
jbe
lea
jae
gs
ficompl
mov
sbb
test
pop
aaa
clc
pop
dec
pop
icebp
gs
or
xor
rolb
test
sbb
sub
or
jae
dec
sahf
xchg
push
imul
or
push
scas
pop
jg
ss
cmpsb
leave
cwtl
push
jbe
imul
mov
pop
xchg
pop
dec
mov
jp
pop
push
cwtl
mov
mov
mov
inc
mov
mov
push
xor
xor
inc
repnz
cmpsb
or
xchg
inc
jp
adc
xchg
scas
push
scas
pop
inc
ja
inc
sbb
and
mov
mov
idivl
test
scas
pushf
sbb
cmp
movsl
hlt
xor
inc
or
pusha
cmpsb
sbb
fildll
aad
rdseed
aam
or
or
fnstenv
cmp
jecxz
xor
insb
movsb
jmp
add
pop
lds
fcompl
jne
in
psllq
mov
cs
cmp
mov
jo
mov
mov
orl
xor
add
loop
das
mov
and
push
testl
pop
jmp
adc
or
repnz
dec
orl
xor
repz
mov
mov
add
scas
sti
imul
movsb
cmp
icebp
jne
add
loopne
jmp
lods
dec
pop
pop
sub
xorl
fisttpll
push
dec
movsb
lcall
mov
cmc
cmp
insl
enter
lret
lcall
push
das
adc
leave
push
lods
jae
inc
sub
jnp
test
daa
or
inc
aaa
xchg
push
mov
test
xchg
dec
jb
out
adcl
pop
int
popf
or
xchg
push
scas
popl
mov
add
stc
sahf
call
rcr
lahf
push
ds
cltd
loopne
loop
and
shlb
dec
dec
test
pushf
scas
mov
mov
jb
mov
add
not
pop
mov
scas
imul
xor
into
lea
dec
ss
popf
pusha
pop
add
jnp
mov
sbb
scas
mov
pop
mov
imul
mov
mov
sub
aaa
fdivl
cmp
fadds
or
test
pop
xor
movsl
imul
cmp
daa
push
jb
lods
mov
push
cmc
xor
popf
add
imul
dec
xor
sub
adc
xor
adc
std
sbb
lcall
hlt
repz
push
xor
and
cmpsl
sbb
cmp
or
xchg
dec
xor
out
scas
insb
mov
es
jp
aas
adc
data16
xchg
mov
aam
jo
and
imul
icebp
mov
xchg
xor
out
cmp
cmp
sarb
cmp
sub
mov
shl
dec
test
lcall
adc
cmp
add
xchg
repnz
rcl
dec
xorb
jmp
enter
push
xor
fnstsw
lock
loop
inc
jecxz
stc
jae
inc
mov
or
mov
stos
jl
call
inc
mov
xchg
push
push
mov
mov
inc
in
fbstp
pop
ss
fwait
mov
insl
nop
xchg
mov
cs
xor
scas
adc
popf
dec
adc
lret
scas
jns,pt
cmp
stc
adcl
mov
adc
pop
pop
into
fsubr
bnd
adc
xor
dec
ret
jo
cmp
push
mov
xlat
cmpsb
pop
sbb
jae
pop
gs
xchg
sbb
cmp
les
cmpsb
outsb
in
push
aad
cmp
arpl
mov
out
sbb
jno,pt
imul
aam
test
adc
inc
mov
loop
xor
push
adc
fdivl
ret
mov
insb
es
xchg
push
mov
sbb
push
mov
mov
dec
test
movsb
arpl
mov
mov
clc
mov
mov
pop
cmpl
mov
mov
rorb
in
repz
arpl
xlat
mov
les
loop
scas
fs
xor
and
or
into
mov
lock
push
adc
repnz
in
add
push
fistpll
dec
xor
movsb
jns
loopne
pop
repz
adc
or
push
pop
jnp
cmp
xor
add
cmp
cmovno
add
sbb
test
push
stc
cld
ret
cltd
rorl
scas
mov
mov
xchg
in
mov
sbb
mov
jle
jo
or
sub
mov
add
daa
mov
arpl
mov
push
jge
int
daa
dec
in
mov
adc
sbb
jno
adc
jg
roll
push
and
cs
dec
daa
inc
push
push
inc
pusha
add
sub
test
sahf
insb
push
mov
scas
mov
cmc
fxch
xor
inc
enter
mov
mov
sbb
addl
cmp
std
inc
pushf
push
loopne
xor
les
sub
dec
push
cltd
adc
mov
add
cmp
mov
sub
mov
pmuludq
mov
xorl
ret
jb
clc
scas
dec
sarb
mov
and
movsb
jge
dec
cmp
adc
shl
and
mov
stc
rcrb
pop
imul
xor
jo
mov
add
sqrtps
xchg
xor
inc
cwtl
inc
lret
sub
fstps
xor
or
dec
sarl
movsl
mov
negb
xchg
data16
or
lea
cmp
loope
mov
mov
jle
movsl
push
clc
sub
sub
icebp
cmp
adc
sub
sbb
and
push
stos
jp
test
mov
cltd
or
cmc
jecxz
adc
dec
xor
notl
insl
mov
add
adc
mov
push
shll
xor
cli
lds
pop
imul
cld
push
test
jns
leave
adc
inc
add
inc
call
test
bsr
iret
out
cmp
xchg
pop
in
data16
pop
stos
lcall
ds
iret
test
jecxz
mov
add
cmpl
jbe
in
lds
jb
out
mov
jle
mov
sbb
fisubrl
rolb
sub
jne
sbb
xor
xor
out
mov
adc
xchg
bound
mov
add
fs
js
data16
inc
repz
inc
pusha
outsl
imul
icebp
out
lret
inc
ficoml
push
je
outsb
es
or
jne
clc
mov
mov
push
les
sbb
ss
mov
loopne
lahf
cmp
pop
mov
loop
popf
mov
je
mov
xor
push
repnz
jnp
mov
mov
sub
xchg
sub
push
adc
cmpsl
fisttpl
mov
sarb
or
adc
popf
jmp
nop
jno
adc
xor
imul
mov
xor
dec
jge
outsl
jge
clc
add
sbb
dec
mov
mov
inc
adc
fbstp
xchg
sbb
jp
inc
fcoml
push
jmp
push
pop
aad
xor
pop
mov
pop
lcall
and
mov
cmp
dec
int3
cli
aad
xor
je
andb
mov
push
dec
addr16
sub
test
insb
xor
jae
xchg
insl
cmp
mov
fcmovnb
les
leave
nopl
in
into
sbb
jne
fstpt
pushf
pusha
mov
cmp
jle
sub
adc
mov
cs
std
adc
dec
dec
adc
outsl
xchg
xchg
xchg
cmc
outsl
lods
push
pop
test
adc
push
xchg
sub
inc
jmp
add
pop
push
fcoms
dec
jb
mov
push
inc
lock
in
insb
adc
test
push
test
mov
push
mov
or
xor
mov
outsl
test
adc
sbb
sub
lock
std
mov
out
setnp
and
push
push
dec
add
aaa
push
fistpll
cmpsb
movsl
popf
xchg
hlt
jns
cmp
sbb
pop
mov
jmp
into
data16
and
pusha
push
cmpsb
sbb
leave
repz
sub
xor
pop
lock
std
and
sbb
pop
fildll
in
cmp
jecxz
inc
inc
xchg
enter
pop
push
sub
and
xchg
sub
cmp
push
movsb
xchg
out
ret
iret
push
fstps
inc
cs
nop
xchg
adc
mov
sahf
addr16
or
mov
mov
cli
jp,pt
cwtl
sub
cmp
sti
xchg
cld
or
and
sub
push
push
rcll
loopne
mov
test
inc
inc
out
dec
mov
sbb
pop
xor
jbe
xchg
outsb
xor
popf
and
dec
mov
dec
dec
loopne
cmpsl
push
cmp
pusha
shlb
pop
fidivs
push
daa
inc
pop
pop
cld
jmp
cld
adcb
lea
movsl
adc
inc
pop
jle
stc
out
push
dec
mov
cmpsl
mov
movsl
jne
inc
sub
mov
clc
mov
dec
outsl
out
dec
and
mov
stos
push
fucomp
movsb
and
out
lods
shlb
imul
cmp
jp
ret
lahf
sahf
mov
xchg
lahf
cmpsb
and
out
mov
out
push
sub
dec
xchg
xchg
loop
popf
mov
xlat
and
imul
or
jl
fbld
add
dec
jle
jnp
and
imul
and
mov
cwtl
imul
imul
imul
mov
push
jb
notl
sbb
adc
mov
es
inc
lcall
test
rcrl
imul
pop
jnp
inc
sub
enter
sbb
std
push
jae
cltd
mov
cmpsl
mov
mov
cmp
pop
inc
inc
fsubrs
movsl
xchg
in
aas
rcll
fstpl
inc
cmp
inc
inc
xor
pushf
push
add
in
xchg
and
inc
sub
aam
inc
inc
mov
inc
mov
push
arpl
push
adc
mov
lods
outsl
stc
mov
xlat
mov
sbb
or
add
dec
inc
xor
mov
or
stc
dec
xor
jno
mov
stc
cli
cmp
insb
pop
out
cmpsl
fs
enter
mov
dec
loope
andb
aam
or
mov
enter
xchg
repnz
mov
add
xchg
fdivrp
jb
imul
adc
mov
arpl
sub
add
loope
inc
cmpsl
sbb
test
or
mov
test
mov
mov
adc
ret
jns
xor
test
mov
testb
movntps
aam
int
push
cmc
fiaddl
jecxz
jns,pt
push
std
hlt
xchg
push
push
and
mov
aas
aas
xor
shll
or
mov
lahf
push
out
push
imulb
and
jle
jns
pop
rol
gs
leave
and
repnz
addl
loope
jle
xchg
fimuls
popf
add
adc
add
jmp
pop
cmp
scas
adc
and
outsl
jb
fisubs
cwtl
jne
xor
arpl
jb
iret
je
pop
in
leave
mov
cmpsl
xor
lds
and
loop
imul
jnp
test
cltd
jge
adc
sahf
mov
xchg
loope
mov
sbb
sbb
inc
out
je
inc
or
les
xchg
jl
ja
int
add
dec
rolb
push
cmp
mov
inc
lds
imul
dec
out
jg
in
rorb
mov
sub
dec
pushf
fs
and
add
mov
aam
pop
rcll
sub
js
mov
dec
in
cmp
int3
movq
xchg
rolb
push
mov
lret
dec
dec
in
movsb
cli
test
test
sub
sbb
cmp
sahf
sub
pop
mov
mov
orb
mov
and
cli
lods
or
or
adc
push
mov
test
gs
jo
jno
mov
adc
es
cmc
int
fadds
pop
push
or
mov
sbb
das
mov
and
test
out
push
xchg
pop
test
dec
adc
sub
lret
outsl
insl
push
dec
jae
mov
jnp
sub
xor
in
in
xchg
rolb
xor
fsubl
sub
adc
mov
mov
jnp
fimull
int
mov
js
pop
xchg
out
and
fmuls
and
aad
mov
xor
in
movsb
mov
dec
jo
jo
pop
jmp
xor
sbb
push
lahf
aam
jg
fldl
and
mov
adc
cld
fstl
cmpsl
or
jmp
imul
sub
adc
push
pop
out
rclb
xor
mov
and
ss
dec
cmpsl
inc
ja
jl
ret
mov
mov
psubusb
xor
je
mov
cmp
pop
sbb
mov
inc
arpl
jno
jne
setae
rorl
push
jge
faddl
dec
xor
lret
popa
cld
test
fidivrl
mov
add
call
sti
roll
shlb
sti
loopne
push
sbb
and
pop
jp
mov
xor
sbb
or
xchg
or
pop
xorl
mov
cmp
sub
pop
pop
mov
int3
xor
sahf
pop
lock
fsubrs
adc
lret
ret
mul
out
or
jmp
jns
mov
pushf
push
mov
movsb
out
mov
jae
inc
jp
cmpsb
mov
in
adc
daa
not
in
push
xchg
add
daa
sbb
lea
ficoms
cmp
cli
and
cld
dec
clc
lea
and
mul
pop
dec
push
sahf
jnp
jl
mov
jmp
and
fidivs
pop
mov
jge
fdivl
or
add
sub
frstor
lods
push
mov
dec
or
stc
adc
in
jecxz
out
push
push
xor
push
pop
icebp
iret
mov
shll
das
inc
sub
je
dec
dec
pop
stos
or
mov
mov
pop
fisttpl
sub
inc
sbb
int3
jl
xlat
sti
frstor
shll
cmp
mov
sbb
test
push
sbb
js
adc
xchg
outsl
aad
in
js
push
sbbb
push
pop
xchg
and
lret
jg
xchg
xchg
js
xor
stos
sahf
subl
and
mov
fcompl
ficoml
dec
adc
outsb
dec
dec
xchg
lods
call
sub
icebp
push
add
jnp
inc
mov
call
jmp
mov
fucomp
jae
or
xor
lock
jbe
jp
mov
xchg
xchg
mov
loop
add
lds
xchg
shlw
scas
aas
fldcw
cmp
xchg
push
and
and
cmp
xchg
lret
gs
ret
subl
sub
pcmpeqd
or
iret
jle
scas
outsb
and
mov
out
pop
inc
imul
iret
sbb
mov
int
daa
push
das
inc
cmpsb
test
jle
stc
les
adc
mov
rolb
xor
add
sub
scas
les
inc
movsl
loop
sub
bound
or
push
std
test
aam
aas
dec
lea
ds
mov
ljmp
sub
sbb
dec
repz
adc
inc
mov
shl
jo
mov
push
cld
std
dec
or
mov
fs
movsl
push
push
pop
leave
push
imul
ds
pop
pop
adc
jl
add
mov
inc
xchg
das
ss
sahf
xchg
jg
inc
mov
inc
sbb
sbb
ficoms
push
jne
shlb
mov
or
and
sub
xor
dec
sbb
pop
popl
and
dec
pop
aad
fsubr
jbe
scas
dec
dec
cmpsl
out
insl
xor
and
xor
dec
je
in
jnp
dec
pop
lcall
pop
mov
add
cmp
clc
pop
and
es
and
sub
sbb
shll
clc
in
stos
mov
dec
push
cmpsl
fucomi
sub
test
loopne
enter
es
xchg
mov
lahf
and
and
outsb
sbb
sub
add
jne
repnz
test
inc
pop
insb
shlb
lcall
rol
dec
imull
ljmp
mov
dec
aad
fmul
aas
and
pop
movsl
ss
gs
lods
aaa
jmp
fldenv
sbb
jp
fnstsw
rolb
jns
fadds
mov
aas
sbb
xor
pop
ret
dec
movsb
ficoml
lret
xchg
fcmovne
jmp
mov
int
mov
jge
ret
in
jge
add
mov
pop
sahf
add
add
popa
outsb
rorl
movsb
pop
loope
inc
xor
or
cmc
dec
inc
addl
cmpl
sub
mov
lret
pop
sti
ret
push
sahf
sbb
gs
pop
int3
lods
rorb
ljmp
xchg
push
nop
xlat
nop
jae
jne
and
hlt
sub
and
pushf
in
push
outsb
call
xlat
rcll
andb
add
pop
mov
mov
or
xor
xchg
clc
fisubl
sub
cltd
pop
in
adc
and
jne
or
loopne
mov
xor
push
cmpsb
jg
out
aad
and
mov
fidivl
cmp
out
adc
lock
xchg
mov
leave
push
add
lahf
cmpsb
into
imul
xchg
xchg
stc
bound
lods
cmp
aas
xor
sub
xchg
pop
inc
mov
test
rclb
mov
sbb
cmpsb
add
pop
scas
jno
dec
mov
mov
jnp
push
mov
subb
div
mov
andb
pop
inc
data16
mov
jb
push
push
insb
add
xchg
fadd
nop
cs
loopne
sub
or
dec
shr
push
sti
pop
push
xchg
rcr
mov
cmp
jl
shl
iret
xchg
sbb
stc
mov
clc
or
inc
push
mov
sbb
in
xor
ljmp
sub
cmpsl
sahf
leave
xchg
dec
mov
pop
lea
call
pop
enter
lea
dec
cmp
mov
or
ja
xchg
and
adc
sbbl
ja
inc
cli
mov
pop
nop
stc
sub
xchg
jg
lahf
push
adc
ret
or
outsl
sub
adc
jno
sti
adc
xor
xchg
insl
push
dec
js
les
lcall
iret
jnp
cld
xor
dec
lret
loop
imul
movsb
push
lea
adc
lahf
mov
out
out
popa
rcr
arpl
jge
mov
pushf
cmpsl
int3
jbe
add
das
aaa
xor
pop
gs
dec
or
xchg
xor
and
inc
or
add
cmp
out
fldlg2
addl
std
mov
xchg
and
jecxz
jae
negb
aas
sbb
xchg
fdivp
xor
gs
mov
sub
les
mov
fmuls
std
adc
cli
cmp
fsts
push
push
mov
cmpsb
outsl
adc
mov
and
dec
jle
inc
inc
push
mov
pop
or
or
das
lcall
ds
or
xchg
stc
sbb
jae
je
push
pop
cmc
and
dec
stos
inc
xor
shrb
cltd
addl
aas
add
stc
push
fsqrt
dec
sbb
mov
xchg
das
out
subl
loopne
dec
inc
sarl
mov
add
xor
push
inc
inc
scas
adc
jnp
xchg
in
mov
push
adc
int
and
out
sbb
jmp
dec
lds
push
outsl
mov
shrl
stos
dec
fnstsw
orb
or
cli
in
pusha
sub
xchg
xor
pop
dec
cmpsb
clc
mov
test
xor
push
cmp
sbb
scas
shlb
std
sub
das
stos
icebp
pop
ljmp
sahf
adc
jecxz
or
je
xlat
mov
outsb
cmpb
jmp
fcmovnbe
cmp
jmp
jbe
pushf
jns
dec
dec
xchg
dec
and
test
stc
push
in
aam
jbe
mov
add
gs
jbe
xchg
push
cli
in
sahf
mov
mov
jle
cmc
xor
out
cltd
jg
mov
out
or
push
xor
adc
dec
cmp
mov
push
adcb
std
mov
mov
das
add
js
xlat
push
inc
and
sarl
rep
push
push
das
data16
ficomps
nop
mov
cld
xor
jmp
mov
adc
adc
pcmpgtd
xor
pop
stos
jp
loopne
or
push
stos
add
sub
sbb
rorb
mov
xor
shlb
insl
sbb
fdivrl
xchg
es
pop
cmp
mov
test
shrl
in
add
shlb
lret
popf
loope
mov
pop
push
pop
inc
repz
push
or
push
push
lea
movsb
push
shl
sub
pop
call
push
xchg
out
sbb
jae
sub
xchg
pop
inc
add
jle
pop
repnz
and
test
cltd
jge
fidivs
pop
sub
xchg
sbb
sbbb
rep
rcrl
push
jns
lock
xchg
pop
js
lock
push
sbb
inc
out
mov
in
xor
add
xor
test
into
push
push
adc
sub
in
mov
repz
arpl
cmp
cli
daa
shll
dec
aam
aam
push
into
ljmp
out
sbb
lds
loop
dec
xor
iret
fs
scas
ljmp
mov
cmp
ret
aad
push
xchg
mov
pop
adc
outsb
mov
sub
push
sub
jnp
shll
loopne
scas
mov
lock
mov
mov
adc
scas
dec
mov
jle
lret
int3
lock
aam
sbb
fs
mov
push
add
stc
and
ret
add
xor
xchg
icebp
pusha
jmp
mov
cmp
or
in
xchg
jmp
jl
adc
push
adc
in
mov
in
sbb
lods
lds
pushl
arpl
fldt
inc
mov
cltd
lcall
mov
sub
inc
scas
pop
in
xchg
dec
ja
jp
aam
aam
test
sub
xor
icebp
push
fistpll
or
fwait
mov
dec
and
inc
add
popa
mov
push
sbb
ja
lcall
cmp
insb
fisubrs
mov
cmpb
push
mov
aam
testl
fisttpll
lods
popf
jb
xor
sbb
jle
enter
popf
std
adc
imul
rcrl
lock
xchg
jge
or
and
testl
aam
mov
movsb
adc
sbb
ss
sub
xlat
leave
popf
popa
loope
lcall
inc
jae
add
cmp
mov
mov
dec
xor
ret
push
cmpw
add
test
jo
rcr
mov
int
or
adc
sub
or
sbb
bound
insb
ss
xor
pushf
mov
arpl
jno
push
stc
sub
mov
sar
jno
pop
xchg
pop
aas
jl
mov
xor
push
lcall
lret
pop
mov
out
jge
nop
ja
js
and
lds
pop
mov
adc
lret
or
imul
shlb
jae,pn
mov
sahf
push
add
adc
cmp
cmp
xchg
popf
mov
imul
adc
dec
cmpl
mov
add
dec
mov
push
mov
adc
xor
xorb
cli
insl
xor
std
shrb
adc
mov
add
mov
pop
aaa
pop
leave
bt
jno
lcall
cmp
jnp
cmp
mov
movb
or
insl
pop
ficoms
push
pop
cli
dec
mov
cltd
cwtl
mov
aaa
push
push
adc
enter
push
es
fcmovu
push
add
push
pushf
in
in
push
popa
jnp
je
inc
push
sahf
jge
xor
lret
sahf
fcom
jmp
in
mov
and
adc
cmp
ja
pop
pusha
arpl
out
repnz
mov
jne
es
mov
xchg
out
push
push
xchg
ja
lcall
sbb
lods
sti
aaa
xchg
xchg
pcmpeqw
sldt
xchg
leave
es
bound
and
sub
data16
iret
push
shl
sub
ret
inc
pusha
add
dec
sbb
xlat
inc
xor
mov
aad
add
mov
loope
outsl
icebp
mov
xor
xor
sub
outsb
mov
repnz
ds
fiadds
push
mov
fwait
cwtl
jl
loop
adc
mov
sub
inc
jecxz
addr16
mov
mov
sub
xchg
inc
mov
add
pop
xorl
jo
cmc
loope
fsubr
or
xor
pusha
lds
sbb
xchg
shlb
stos
push
test
mov
aad
xchg
out
push
cmp
and
sbb
out
loope
das
adc
sbb
insl
sbb
add
adc
add
push
negb
gs
push
push
ds
mov
mov
inc
add
sarl
ret
lea
sbb
pop
or
xchg
pusha
mov
pop
jae
imull
int
xchg
pop
and
mov
add
mov
xchg
and
and
loopne
es
adc
out
cld
out
mov
add
cld
repnz
push
jns
sub
lret
mov
add
xchg
cmp
test
sti
sbb
popf
js
sti
popf
mov
hlt
xor
cmp
xlat
mov
je
lock
nop
iret
iret
lods
scas
add
pop
jle
inc
testb
outsl
xchg
dec
sbb
shl
pop
sahf
stos
mov
aaa
aam
inc
jns
xchg
aaa
insl
repnz
shrb
aas
popl
test
or
mov
sbb
xor
enter
mov
ret
ds
test
adc
mov
shlb
adc
clc
enter
push
mov
inc
cld
rorl
pusha
push
pop
fildl
adc
xchg
jle
push
adc
in
add
test
roll
cltd
mov
js
sbbl
add
cmc
adc
inc
inc
cmp
ret
sub
das
inc
lahf
mov
lret
xor
loope
adc
and
or
orb
jb
xor
inc
ljmp
sbb
punpcklwd
test
aam
cmp
call
cmpsb
std
bnd
pop
add
movsb
out
fucomi
cmp
jge
ret
push
cmp
mov
dec
adc
inc
insb
shrb
lcall
xor
xchg
test
in
sbb
mov
sbb
pop
lods
or
mov
dec
sarb
rcl
add
xchg
int
and
icebp
lahf
pop
sbb
mov
mov
in
lods
sub
ds
sar
ret
lret
lret
pop
shl
shlb
xchg
rol
sbb
pop
cs
fwait
push
cmp
cmp
pop
sub
mov
sarb
lret
mov
jmp
jns
out
mov
xchg
jae
xor
pop
dec
sub
mov
shll
sahf
ljmp
and
add
jo
sub
xor
loop
mov
jle
inc
jnp
dec
xchg
in
or
cltd
jg
shll
xchg
out
pop
and
cmp
gs
fucomip
ds
in
lock
mov
and
adc
mov
fadd
and
popa
ret
and
jne
mov
pusha
sbbb
mov
xchg
adc
lcall
enter
test
jl
and
mov
or
sbb
ja
adc
inc
dec
fisubl
mov
mov
addl
add
ss
cmp
push
out
jnp
jnp
pop
cmp
xor
mov
jge
add
pop
add
cmp
cmc
js
adc
add
xchg
mov
pop
in
daa
adc
loope
hlt
and
lods
jmp
xor
fs
in
push
lret
dec
jmp
fld1
jb
icebp
outsl
ljmp
fisttpl
or
and
adc
stos
lahf
sub
sbb
test
sbb
and
ljmp
scas
push
psrlw
sti
movsl
pop
xor
scas
and
fidivl
sbb
add
jbe
inc
push
insb
sbb
shll
mov
and
loopne
push
jno
xor
loopne
mov
ret
imul
and
jno
push
inc
mov
test
test
and
test
lahf
ror
xchg
sbbb
pop
add
or
or
sub
inc
insl
or
sarb
dec
les
test
inc
aam
adc
mov
adc
mov
and
adc
inc
das
dec
jae
fwait
jno
cmp
mov
add
push
jmp
cwtl
mov
rcll
mov
fstl
or
bound
xchg
cmpsb
cmp
cltd
inc
fisubrl
fbstp
cmp
pop
in
mov
xor
ja
xchg
add
or
popf
xchg
addr16
aad
insl
and
iret
test
jne
mov
jp
into
je
fs
aaa
mov
inc
fmuls
lods
mov
mov
ljmp
push
xor
mov
mov
cs
lcall
mov
mov
pop
das
mov
movsb
xchg
shlb
out
adc
mov
push
xchg
out
xor
inc
xchg
push
icebp
inc
jecxz
lock
mov
out
dec
jge
xor
mov
or
aaa
lahf
cs
das
gs
std
scas
cmc
sbb
insb
js
fsubrl
and
call
adc
cmp
xor
ljmp
icebp
movl
mov
and
adc
or
or
push
sbb
addr16
mov
inc
adc
int
ret
lock
sbb
icebp
push
out
jns
inc
and
mov
jns
dec
shld
addr16
bound
push
push
out
icebp
jae
movsb
adc
push
and
es
gs
lods
mov
pushf
add
std
adc
sarb
xor
cmpsb
outsb
int
pop
adc
xchg
pop
ss
or
jne
or
pop
inc
mov
xchg
lock
popf
push
inc
shlb
pop
shll
lret
call
jo
mov
fadd
loope
nop
outsb
enter
gs
mov
icebp
je
sub
test
fildl
call
icebp
dec
dec
mov
push
sub
in
ror
inc
out
sarb
push
loop,pn
iret
fcmove
push
mov
push
lods
out
mov
sahf
pop
mov
dec
jne
pop
repnz
mov
jg
sahf
outsb
sub
push
cs
lahf
xor
fnop
jb
call
xchg
orb
dec
sub
mov
push
inc
mov
jbe
aas
pop
xchg
sahf
jp
cs
xchg
cmp
je
fsubrl
xor
cltd
xchg
test
insb
dec
pop
shl
push
inc
andb
xor
fiaddl
test
jns
arpl
in
pop
aam
pop
and
fnstcw
inc
clc
loope
stos
push
mov
xchg
jmp
ret
jmp
enter
or
inc
sub
pop
or
or
lea
lods
subb
mov
sub
lea
in
adc
into
test
js
cmp
shr
push
outsl
inc
sbb
fisubs
and
out
push
insb
inc
sub
and
pushf
out
std
jb
ss
xor
mov
repz
mov
sbb
mov
vdivpd
adc
add
inc
push
cli
daa
popf
inc
xchg
lahf
push
shll
cmp
stos
sahf
push
sub
js
in
and
daa
pop
mov
pop
aam
arpl
cli
lcall
fiadds
sbb
in
shll
or
lea
iret
outsb
inc
das
cld
testb
fs
push
or
jmp
jmp
sub
dec
cwtl
lcall
jg
dec
add
fwait
or
cmc
xchg
mov
pop
xlat
cmp
test
xor
imul
sub
mov
scas
and
jae
mov
inc
andb
adc
xor
divb
cld
es
loopne
push
cmpb
lret
lds
adcl
dec
push
cmp
out
popf
rolb
cmp
pop
mov
xchg
in
add
iret
ret
xor
mov
dec
mov
or
inc
mov
jg
xchg
cwtl
and
rcll
cmp
or
jl
sti
icebp
lahf
or
push
in
loop
daa
or
pusha
insl
std
dec
addr16
push
cmpsl
dec
mov
inc
movsb
and
lret
inc
or
in
dec
in
jnp
mov
lods
ja
lret
xchg
or
lds
xchg
bound
std
nop
addl
inc
lods
xchg
sti
jge
mov
shll
iret
sahf
mov
or
or
and
fimull
pop
dec
pop
sysret
fwait
or
jo
mov
mov
vpmulhw
popf
mov
pop
pop
lret
mov
outsb
cmp
jmp
daa
jbe
pop
icebp
cmp
xchg
jp
out
lods
add
mov
movsl
hlt
cmp
mov
pushf
or
dec
fcoms
popf
jge
popf
sbb
stos
push
add
fnstcw
cmc
andps
inc
mov
dec
push
xor
xchg
adc
jne
hlt
push
mov
xchg
add
mov
mov
test
rcrl
sub
pop
adc
or
jmp
xor
out
lahf
test
clc
xor
mov
enter
arpl
cmpsb
aad
mov
xlat
lods
pop
mul
pop
adc
dec
outsl
nop
lods
push
stos
adc
loop
mov
das
lret
xor
add
mov
xor
push
addr16
push
add
push
sub
out
jl
inc
xor
out
daa
jg
test
push
inc
sbb
mov
or
aaa
lahf
in
sbb
pop
mov
xchg
fstpt
dec
fisubrs
mov
mov
mov
cltd
ret
inc
in
pushf
mov
lea
movsl
push
test
mov
lcall
lahf
stc
mov
sbb
xor
mov
push
imul
and
adc
lods
movsl
sbb
cwtl
or
sbb
and
sti
insl
mov
xchg
pop
outsb
cmp
jo
nop
out
jbe
sbb
sti
ds
repnz
cld
and
stos
aam
rclb
push
jmp
sti
dec
cmpsb
test
lds
mov
xchg
push
jp
inc
or
loopne
push
jo
pop
aad
outsb
xchg
or
add
xor
in
ja
pop
mov
inc
adc
ljmp
xchg
jb
jae
add
aaa
fwait
mov
fcompl
pop
ficompl
jno
xor
mov
pop
lahf
insb
pop
mov
xchg
cmp
add
test
mov
xchg
jle
cmp
or
repnz
push
imul
and
dec
mov
sub
xchg
mov
add
add
movsb
xchg
addl
test
push
or
push
cmp
jo
out
addr16
sbb
popa
add
mov
pop
push
mov
pop
f2xm1
outsl
gs
cmp
dec
ret
dec
pop
imul
pop
sub
int3
mov
mov
outsb
cld
and
or
jno
leave
mov
xchg
insl
sbb
int3
sub
ljmp
mov
pop
mov
fisttpll
cmc
sub
insb
mov
mov
in
mov
insl
mov
call
push
sub
xchg
out
jbe
cwtl
xchg
daa
fs
jns
sbb
jl
sbb
push
es
scas
pop
pop
fs
push
sti
xchg
cmp
sbb
divl
lcall
xor
outsb
je
in
ljmp
lcall
xchg
sub
mov
loope
mov
jg
xchg
xlat
push
jne
icebp
shlb
inc
bound
outsl
sbb
js
lds
inc
adc
dec
inc
mov
and
imul
cli
sbb
fidivrs
icebp
and
jmp
lods
call
pop
jecxz
xchg
mov
test
aas
sub
imulb
jmp
incl
inc
insl
jmp
add
sub
mov
les
push
stos
sub
inc
mov
sub
lods
jno
into
mov
mov
mov
jne
mov
movsl
push
xor
add
in
pop
add
gs
sub
mov
fwait
pop
push
sub
xchg
xchg
cmp
jg
cmpb
xor
faddp
and
aam
repnz
mov
add
cwtl
sbb
out
out
das
stos
mov
fidivrs
pop
jp
dec
pop
sbb
imul
inc
xchg
cmp
ja
call
xlat
and
add
iret
adc
in
add
cmp
pop
nop
stc
mov
sahf
add
fucom
addr16
sub
mov
inc
mov
cmp
gs
xchg
add
je
jmp
mov
fisubs
cld
dec
fisttps
fcmovbe
rorl
sbb
push
sbb
test
dec
mov
je
shll
and
inc
mov
pop
iret
mov
mov
testb
sbb
mov
aas
pushf
sbb
into
test
aad
lcall
lods
jp
cmpl
addb
cmpsl
fdivr
xchg
jl
stos
push
jg
lock
pop
loope
push
mov
outsl
dec
je
movb
cmp
jae,pn
das
testb
repnz
xor
sub
scas
dec
sbb
arpl
nop
sbb
jbe
mov
shr
add
loopne
ret
xor
push
stos
inc
dec
out
int3
push
jge
int3
int3
lea
or
or
jne
push
testl
pop
jl
and
sub
data16
jp
mov
xchg
jmp
outsb
in
lock
inc
cmpsb
subb
jo
sub
pushf
movsl
pushf
aad
clc
xchg
or
imul
leave
jb
cmpl
ror
and
jle
aas
mov
dec
and
fs
or
add
iret
sbb
setp
dec
pop
jno
xchg
dec
fcoml
addr16
cmp
fisubrs
adc
mulb
mov
jno
jg
fildl
adc
lods
lds
neg
mov
nop
popa
repnz
shlb
cltd
out
xor
out
es
sub
sub
sbb
adc
bound
xchg
es
xchg
data16
xlat
mov
hlt
xchg
sbb
adc
jmp
adc
add
lock
sbb
idivl
mov
subl
gs
mov
cli
orb
pop
xor
scas
mov
call
cmp
js
lock
mov
sub
adc
dec
inc
jns
pop
rcrl
test
loop
loope
inc
dec
lahf
mov
outsl
mov
pop
sub
and
scas
xchg
aad
and
sarl
cmp
popa
outsb
cmc
xchg
add
aam
inc
cli
xor
rcl
inc
punpcklwd
adc
popa
outsl
xchg
push
dec
cltd
insl
mov
mov
pop
lret
shlb
mov
dec
cltd
inc
cmp
lods
jnp
mov
enter
inc
dec
adc
jg
or
sbb
adc
punpcklwd
out
insb
popf
mov
add
mov
jbe
sub
icebp
loope
push
inc
sub
xor
jnp
pop
sbb
icebp
ror
ret
ja
call
push
lea
jb
repz
cmp
outsl
dec
arpl
cmp
adc
xchg
scas
pop
pop
loopne
adcl
lock
into
popa
adc
mov
and
xor
fcompl
xor
inc
mov
mov
pop
push
fisubrs
popf
mov
inc
popf
cmp
movsb
mov
cs
add
stos
sbb
in
and
fs
loop
out
pop
lock
mov
std
movsl
scas
adc
mov
popa
out
std
add
bound
xchg
daa
mov
ss
jb
push
sbb
lods
xchg
cmp
cs
lret
sbb
nop
ret
fisttpl
rclb
fsts
adc
or
mov
xchg
or
mov
adc
sub
outsl
lcall
jbe
cmp
push
jecxz
xor
cli
int
testb
adc
imul
push
push
push
jg
or
mov
pop
addr16
jp
ss
shr
pop
inc
adc
pop
loop
pop
adc
ljmp
jl
jle
inc
push
xchg
jmp
das
or
mov
leave
mov
data16
inc
sbb
insb
mov
add
ror
adc
cmp
mov
xchg
mov
xchg
rorb
iret
jmp
stc
fs
scas
repz
sub
sbb
xchg
mov
ficompl
sbb
jae
jle
lds
les
rorb
nop
aad
push
sbb
aam
cwtl
cmc
clc
mov
sti
jg
imul
popf
xor
lds
in
popa
lea
out
les
xorb
es
ds
rorl
inc
xchg
movsl
pop
mov
xor
test
shlb
xorl
movsb
sbb
stos
shr
push
sahf
in
mov
jge
mov
sub
loopne
pop
push
pop
fwait
xchg
in
out
mov
adc
hlt
psubd
add
jmp
repnz
push
outsb
adc
mov
adc
sahf
fldlg2
stos
add
arpl
fcmovb
and
fs
mov
push
loope
out
and
jae
jp
mov
mov
mov
inc
mov
mov
or
ja
push
in
data16
jnp
xchg
lods
xchg
loop
xor
sub
rolb
scas
daa
cli
seto
cmpsb
or
das
mov
cmp
nop
outsl
jmp
xlat
pop
out
mov
mov
pop
jae
sub
decb
add
mov
xchg
cs
mov
in
sub
decb
mov
mov
dec
idivb
outsl
inc
loope
jno
cwtl
adcl
aad
cltd
push
pop
mov
push
stc
je
lret
dec
mov
out
push
jb
fldl
cmp
add
call
aad
repz
mov
psubsw
jmp
out
lret
popa
movsb
sbb
cmp
js
lret
pop
fwait
cmp
movsl
adc
scas
ret
std
jp
dec
pop
mov
mov
mov
mov
outsb
loop
scas
xchg
fsubl
and
cmpsl
call
jl
imul
pop
into
mov
xchg
mov
popa
out
xchg
and
inc
and
pop
clc
ss
icebp
mov
stos
jge
fldl
fcomip
mov
push
cmc
and
adc
stos
or
mov
mov
sbb
mov
jmp
xor
xor
push
fnstcw
lret
push
hlt
jb
cmp
insb
pop
in
xor
jb
cs
repz
pop
cs
jmp
cmp
out
lret
mov
push
pushf
jo
xor
cmp
fmull
fisttpll
fisubrs
pushf
adc
or
mov
iret
and
call
jnp
adc
fs
sub
in
push
fidivrl
sahf
inc
dec
bound
dec
sub
mov
outsl
addr16
pop
lcall
add
cs
icebp
jae
jg
xor
mov
fsts
lds
xlat
dec
dec
ljmp
pop
stos
pop
and
sub
iret
mov
test
jmp
push
push
ja
popa
nop
pop
inc
adc
out
movsl
fmull
cld
loop
inc
stc
cmp
daa
inc
scas
addr16
fwait
push
shrl
and
cmp
dec
jae
call
inc
divl
cmc
arpl
jae
movsb
adc
movsl
pop
arpl
and
xlat
out
movsb
test
mov
lds
pop
fstps
lcall
neg
cmp
cmpsb
add
mov
mov
sti
and
stc
fidivrl
fyl2x
imul
lret
lods
divb
das
mov
sahf
push
addr16
out
pop
movsl
hlt
fcmovnu
mov
cmc
push
daa
and
sub
in
xor
inc
adc
inc
mov
clc
xor
or
jl
jo
pop
in
jb
gs
jge
sbb
sbb
jno
ds
icebp
mov
scas
jno,pt
cld
je
xchg
loopne
fwait
test
xor
aad
jo
cwtl
xchg
mov
lods
mov
mov
mov
mov
cmp
ss
or
pop
loop
flds
pop
cli
add
sbb
addr16
enter
mov
mov
lods
mov
int
pop
lret
shll
aad
insb
sub
lods
repz
jecxz
pop
jmp
incl
bound
mov
movl
push
loope
and
jae
sub
testl
mov
cwtl
and
push
fdiv
aad
movsl
shll
mov
fildl
rorb
add
lahf
imul
mov
dec
mov
addr16
adc
adc
jo
jmp
cmp
dec
loope
clc
sti
loopne
mov
pop
inc
inc
imul
mov
sub
mov
outsl
xlat
cs
ret
cmp
cmp
xchg
sub
dec
jle
iret
sarb
fstps
addl
cmp
xchg
sub
xor
inc
cwtl
pop
sbb
xchg
fisubl
jge
mov
sub
mov
push
cmp
out
push
cwtl
cmp
test
xor
ds
push
mov
or
sub
inc
pop
mov
mov
loope
js
scas
xchg
loope
cltd
mov
psrlw
ret
xchg
mov
inc
or
addr16
mov
test
pop
mov
jge
inc
lahf
bound
test
out
sbb
dec
cmpsl
adc
jmp
inc
insb
ljmp
arpl
fstpt
mov
loope
mov
jge
leave
inc
das
fsubrs
fistpl
push
fisubl
sarl
xlat
inc
sub
jmp
sahf
fchs
gs
xor
test
push
loope
sbb
or
cld
add
rorb
fcoml
into
mov
dec
sub
ja
jo
pop
and
cmp
insl
jb
ja
cs
dec
push
cmpsl
jnp
leave
gs
cmp
or
rcl
in
out
out
sbb
mov
and
mov
mov
je
jp
sbb
sbb
mov
pop
popa
dec
inc
pop
lock
mov
ds
ret
insl
frstor
jp
or
out
in
aas
push
xchg
jns
cli
and
xchg
cmpl
add
xchg
add
add
sub
call
je
loopne
stos
xchg
movsl
lcall
pop
pop
in
sub
push
inc
xor
fstl
fldcw
pop
and
aaa
cmp
movsl
ss
mov
jne
cmp
je
mov
mov
sub
adc
ret
dec
xchg
dec
outsb
mov
sub
sahf
cltd
mov
subb
mov
mov
add
mov
rcl
lret
pop
cmc
sub
inc
add
adc
ret
xchg
das
cmp
ljmp
push
mov
sub
fists
std
cmpsb
cmovb
lea
or
mov
pop
sarl
mov
mov
pushf
into
stos
mov
mov
jo
ljmp
xchg
test
sbb
dec
loop
cmp
mov
and
ret
pushf
iret
jne
and
outsl
into
adc
js
push
mov
pop
cmp
outsl
test
jmp
mov
outsl
rorl
mov
out
loop,pt
call
inc
sub
xor
mov
lahf
sar
dec
cmpsb
mov
into
in
sbb
adc
mov
dec
dec
fsts
movsb
scas
adc
push
mov
or
xchg
mov
sbb
mov
or
test
cmp
mov
inc
xchg
nop
cmc
ficoml
cmp
stos
clc
mov
aaa
push
sbb
xlat
cltd
in
xchg
sbb
jecxz
mov
mov
pop
test
mov
leave
cmp
pop
push
into
dec
lea
xor
mov
sub
xchg
inc
and
mov
in
ret
xor
cmc
mov
movsl
jl
or
pop
add
gs
sbb
xlat
mov
insl
out
incl
dec
push
pop
stos
je
popa
out
jle
gs
fiadds
mov
ret
mov
es
ret
mov
inc
xchg
cltd
xchg
cltd
pop
sub
imul
xlat
and
ss
inc
adc
sarb
jo
dec
nop
cltd
add
sub
sbb
shr
fisttpll
leave
test
mov
shrb
fwait
loop
sbbb
mov
test
iret
fxtract
mov
mov
mov
jp
jbe
sub
aaa
add
loopne
mov
pop
jle
je
insb
xchg
rclb
ja
in
mov
push
movsl
orl
xor
div
jp
cli
or
pushf
es
and
lods
enter
lock
frndint
les
fnsave
mov
jecxz
jecxz
dec
mov
mov
imul
cmp
repnz
dec
mov
out
mov
mov
loop
mov
decl
jo
inc
xor
jmp
iret
jbe
out
in
cwtl
and
je
jecxz
iret
stos
xor
rcl
rolb
test
rolb
sti
add
mov
dec
ja
add
rclb
dec
call
sbb
outsl
push
into
enter
ret
aaa
jno
push
hlt
ficoms
add
popa
out
mov
push
int3
xor
and
fisttpll
mov
xor
push
sbb
loopne
jg
xlat
scas
or
push
sbb
js
jp
and
mov
sub
movsb
cld
mov
jmp
pop
ss
jl
xchg
mov
repnz
into
jo
push
loopne
repz
sbb
adc
or
pop
mov
adc
jl
adc
fistpll
add
adc
sti
cmp
loope
pusha
sub
scas
lcall
lods
push
mov
cmp
adc
popa
inc
cmp
adc
movsl
cmp
jno
mov
sbb
sbb
adc
btc
aaa
xor
cmp
pop
adc
xlat
xchg
push
cli
inc
mov
into
mov
mov
inc
push
push
mov
std
shll
gs
inc
repnz
mov
adc
popa
enter
and
stc
leave
pusha
insb
xor
mov
sti
aad
movsb
cmp
loopne
mov
cltd
ret
insb
call
mov
std
sbb
shll
mov
xchg
and
lret
movsb
push
das
xor
xor
fistps
je
mov
outsb
imull
xor
mov
in
jbe
and
testb
dec
mov
mov
mov
dec
ljmp
xchg
test
sub
popf
loopne
xchg
aas
roll
xor
adc
mov
xor
roll
mov
call
pusha
mov
shlb
mov
jae
popl
add
out
movsl
push
or
inc
out
mov
jmp
pop
sbb
imul
shll
fcoml
imul
stc
jae
sbb
pop
hlt
std
test
mov
fisubs
adc
push
fiadds
and
push
push
mov
rcrl
movsl
adc
adc
cmp
jnp
ret
das
sahf
cli
dec
pop
xchg
jae
lea
test
push
add
mov
scas
mov
in
xchg
or
mov
jmp
leave
fistpll
mov
pop
fidivrl
out
mov
sbbl
mov
cmpl
pop
pushf
fcmovbe
and
sub
jmp
xor
and
jnp
idivl
push
outsl
jne
js
and
es
rcrb
add
push
fsts
xor
in
and
daa
xor
repnz
js
adc
icebp
sti
xchg
gs
jge
pop
sbb
lods
mov
pop
pop
lret
sub
stc
mov
jbe
inc
or
rorb
inc
es
ljmp
mov
dec
inc
or
pop
scas
sub
jl
into
jae
imul
dec
add
out
int3
jae
cmc
xchg
mov
inc
lea
int
popf
mov
sbb
daa
enter
nop
mov
call
push
sub
pop
mov
xchg
xchg
mov
ficoms
jnp
out
push
je
xchg
outsl
mov
cltd
outsb
das
lods
repnz
sbb
int3
daa
outsb
ret
push
shl
mov
icebp
movsl
sub
addr16
lret
dec
ja
std
sbb
divb
pop
and
jo
aam
jge
in
movsb
and
int3
xchg
psrad
loope
iret
jg
dec
lret
mov
cmpsb
lods
test
sub
cmc
xor
sub
in
scas
xchg
test
je
adc
and
popf
pop
push
in
pusha
inc
adc
jge
inc
cmp
or
mov
xchg
shr
mov
dec
fistl
mov
sub
xor
xchg
push
daa
das
lock
addr16
xchg
lahf
mov
add
inc
xor
fcoms
pop
or
or
sub
test
jo
sbbb
imul
xor
mov
loope
pushl
loop
xchg
pop
imul
cmc
lahf
cmp
loope
jne
adc
int3
mov
mov
adc
in
in
insb
ljmp
sub
dec
push
enter
xor
mov
pop
mov
lock
xchg
xor
xchg
mov
sub
or
pop
cmpsl
lock
add
mov
stc
subb
xchg
popf
sbb
aaa
loopne
repz
push
pop
jge
ucomiss
hlt
pop
push
xlat
jecxz
push
sbb
xchg
sarl
mov
fdivl
mov
sbb
mov
cli
xchg
pop
dec
shrl
cmc
and
stos
sbb
int3
test
ret
hlt
pop
fistl
fld
cmp
pop
add
sbb
lds
addr16
inc
pop
xlat
fstpl
and
sbb
pop
lret
pop
daa
fcoms
lock
test
ficoms
lea
push
pop
out
lods
into
sbb
jnp
push
jge
orl
ret
aam
jecxz
js
ret
imul
cmp
add
lret
mov
jbe
js
or
test
out
je
dec
and
rolb
jns
cmpsl
jecxz
add
jl
cltd
testl
pop
or
ljmp
jno
sub
and
adc
mov
aas
add
ss
xor
shll
cmpsl
mov
mov
or
cmp
test
jns
push
xchg
lock
jge
xor
ret
sbbb
cmp
and
sbb
xchg
shl
lret
gs
mov
divl
dec
push
out
sbb
cmpsb
sti
ja
mov
les
loop
mov
imulb
xchg
std
xchg
jne
idiv
cmp
ss
jl
inc
test
or
pop
popa
sub
shr
in
shrb
and
ljmp
out
xchg
shrl
fidivs
outsl
pop
loop
sbb
loop
loopne
pop
add
and
dec
mov
imul
das
or
loop
pop
ret
jg
mov
sahf
add
adc
sbb
xlat
adc
push
cmc
mov
scas
jp
jl
sub
leave
in
adc
cltd
repz
pusha
imul
pushf
bound
stos
cmpsb
and
test
add
sub
mov
lret
lds
into
or
dec
add
dec
out
mov
repnz
fs
dec
and
es
pop
inc
mov
lret
fdivrl
jl
mov
aaa
fwait
or
sbb
lods
test
xchg
movsl
nop
mov
xchg
push
addl
insl
mov
jns
cwtl
lret
inc
jecxz
add
scas
jge
xchg
jmp
and
xor
enter
sub
in
pushf
outsl
movsl
sub
mov
inc
or
movswl
mov
push
cld
mov
xor
push
jno
and
test
sbb
inc
test
mov
cmp
in
sub
lods
sub
dec
cli
jo
leave
dec
lret
daa
adc
mov
pop
dec
mov
adc
rorl
std
cmp
icebp
or
and
pop
and
dec
mov
xchg
add
mov
lods
mov
imul
cmp
inc
pop
mov
lahf
pop
mov
dec
dec
mov
pop
orb
loop
inc
push
ljmp
into
or
insl
and
pop
jp
inc
shrl
pop
and
push
dec
orl
jb
scas
fildl
jmp
daa
mov
je
test
dec
push
daa
pusha
aam
xchg
ds
push
xchg
hlt
cli
xor
or
inc
xchg
push
js
cmpsl
ja
lahf
jo
jge
stc
push
push
repnz
fstl
and
gs
dec
loopne
ret
jle
aam
dec
mov
hlt
gs
sub
pop
dec
sub
out
mov
outsl
xor
xchg
push
bound
mov
or
leave
xchg
std
xor
sub
int3
call
aam
mov
mov
gs
jns
incl
addr16
cmpxchg
cmpsl
inc
adc
leave
add
das
adc
add
xchg
inc
cmpsb
xor
in
and
sub
add
rorl
inc
inc
add
add
test
sub
shlb
mov
push
test
sbb
jnp
or
pop
add
dec
pop
outsb
imul
repnz
out
mov
cmp
fs
lock
f2xm1
pushf
mov
cmpsl
xlat
aas
xchg
and
outsl
mul
jns
dec
lock
scas
ljmp
pushfw
xorl
insl
test
in
jbe
jle
frstor
test
addr16
inc
mov
loope
sub
test
ja
pop
push
idivl
std
add
roll
xchg
int3
adc
mov
outsl
xchg
fldenv
lahf
push
out
out
mov
jae
add
xor
cltd
iret
pusha
hlt
clc
orl
mov
shlb
das
lret
ss
cmp
push
jae
or
shrb
loop
popa
or
sbb
cmc
mov
ss
aam
jg
lods
into
ja
push
outsb
push
movsb
jg
icebp
push
pusha
or
xchg
xor
arpl
push
xorb
mov
cmp
dec
jns
fs
or
jb
push
inc
push
out
popa
adc
hlt
cmpsl
mov
or
setp
push
adc
cld
icebp
cs
pop
fnstsw
jae
or
push
or
push
mov
jl
jg
pop
dec
and
mov
ret
pushf
push
sarb
lds
mov
or
xor
cltd
or
outsl
push
sbb
jbe
sub
movaps
cmp
es
call
movsl
sbb
movsl
test
jmp
ljmp
push
xchg
cmp
pop
or
pop
push
adc
adc
mov
dec
mov
push
adc
push
adc
mov
mov
mov
cmpsl
dec
xchg
sbb
mov
arpl
jge
arpl
cmp
and
cmp
test
cmp
push
das
insl
cmp
push
rcrb
xor
jb
xchg
cli
xchg
je
leave
test
cmpsl
push
into
push
mov
incl
stos
and
icebp
dec
ja
mov
inc
fsubrs
jecxz
popa
lea
xchg
xor
xchg
jb
mov
imulb
mov
push
out
clc
pop
jb
dec
insl
into
in
push
and
fisubrs
jb
xor
stos
jb
lahf
mov
imul
fldl
adc
cmp
and
sbb
leave
jnp
aaa
push
cmp
dec
arpl
scas
jns
pop
fcoms
adc
pop
sub
jp
outsl
jo
sub
mov
mov
push
out
inc
sbb
shrb
testl
out
adc
sub
std
shr
mov
scas
dec
mov
ror
into
add
sbb
cwtl
add
adc
jge
mov
sbb
pop
cmpsb
push
add
mov
jge
addr16
xor
cs
add
mov
loopne
stos
add
xor
fidivl
mov
mov
jne
mov
sar
repz
xchg
mov
cmpsl
xchg
adc
or
ss
push
in
scas
pushf
js
xor
leave
mov
jecxz
les
jle
mov
xlat
jp
out
daa
movsl
cld
xchg
mov
pop
push
xchg
cmp
movsl
push
pop
xchg
std
fldt
and
pop
jge
cltd
inc
repnz
std
xlat
movb
sbb
mov
pop
cmp
mov
dec
push
push
outsb
dec
subb
call
mov
mov
js
repnz
sbb
lods
cwtl
lahf
sbb
jle
mov
mov
adc
das
add
stos
push
scas
inc
adc
mov
pop
in
adc
sub
add
je
mov
inc
mov
movsb
out
pusha
insb
movsb
or
lret
shl
sub
icebp
inc
xchg
cmpsl
add
addr16
add
xor
cmp
test
mov
sub
int3
rorl
js
jae
pusha
cmpsl
pushf
inc
das
fs
jmp
cltd
addb
imul
push
cli
inc
push
dec
mov
xor
faddl
mov
insb
jae
cmp
and
jle
mov
mov
mov
xchg
out
push
sub
addr16
insb
mov
lcall
sti
pop
sbb
cmp
aaa
jp
mov
test
mov
popf
lds
xchg
cwtl
and
xchg
popf
pusha
icebp
repnz
adc
aas
push
push
jge
in
test
mov
xchg
mov
sub
fbld
imul
hlt
sub
ror
inc
nop
int3
or
add
mov
call
xorl
movsb
mov
das
dec
test
in
pop
fwait
dec
fidivl
xchg
neg
les
inc
adcl
jmp
mov
rclb
lcall
mov
rolb
fstps
and
ffree
inc
xchg
cmp
jmp
ret
or
mov
jnp
inc
push
sbb
dec
scas
jno
cmc
mov
das
stc
or
ret
ds
iret
fidivs
out
push
fldcw
sub
mov
sbb
dec
add
cmpsl
loop
xchg
add
test
xor
inc
js
xor
aam
jmp
adc
jmp
sar
cld
sarb
mov
mov
cmp
outsl
mov
cmp
out
and
out
sbb
push
cltd
scas
stos
dec
jns
aas
movsb
push
dec
stos
jecxz
mov
push
std
out
adc
in
xchg
xchg
or
andl
int3
test
movl
or
test
sbb
arpl
jno
pop
mov
aad
out
or
and
dec
repnz
fnstcw
popf
movsl
inc
arpl
add
lcall
mov
pop
cmp
and
pop
add
jne
sub
jo
mov
mov
notl
lret
dec
pushf
mov
mov
mov
out
jns
gs
daa
aaa
cld
cs
pop
xor
mov
movsb
cwtl
sub
sbb
sbb
and
dec
and
add
xchg
adc
jns
mov
inc
push
push
pusha
pop
xchg
insb
xor
jmp
fwait
inc
xchg
sub
out
insb
lret
push
pop
cs
je
add
je
adc
adc
jmp
js
add
add
mov
scas
sbb
inc
pop
sti
cwtl
push
fstp
cmp
repz
fildll
scas
gs
cltd
ljmp
insl
mov
dec
rcrl
sbb
jne
and
int
jb
inc
mov
shr
jle
scas
pop
outsb
jns
scas
push
ljmp
daa
icebp
jmp
push
addr16
pop
pop
leave
arpl
dec
push
fsubs
rcrl
push
test
and
cmpsb
sbb
mov
inc
mov
ja
or
inc
cmc
int
stos
mov
test
ret
out
sbb
sub
incl
fs
dec
jmp
push
mov
sahf
jnp
or
mov
data16
push
adc
mov
cmpsl
mov
mov
cld
mov
sbb
iret
mov
jae
xchg
test
xchg
divb
pusha
jae
jmp
sbb
mov
mov
sbb
xchg
sbb
rclw
fs
hlt
or
jl
int
movsb
cmpsb
push
mov
xchg
jge
inc
push
sub
mov
popf
adc
sbb
mov
mov
cmpl
outsl
add
push
cmpsl
pop
or
pop
sub
push
data16
or
cmp
cmpsb
dec
push
ja
ret
mov
jmp
cs
push
push
dec
mov
push
cs
xchg
enter
and
push
out
jbe
imul
cmpsb
ljmp
mov
add
and
scas
dec
or
and
cmpsl
cmp
scas
mov
pushf
fistps
ja
pcmpgtw
jmp
int3
rorb
cltd
in
into
mov
pop
adc
and
adc
sti
dec
shl
mov
pop
mov
mov
cmp
je
sarl
jg
cmp
pusha
int
out
mov
cwtl
push
shr
pop
nop
cmpsl
jno
or
lods
imul
push
repnz
pop
dec
shlb
stos
jne
inc
xorb
fists
push
adc
cmp
inc
jle
add
or
xchg
or
cs
test
lods
shll
adc
dec
repz
jno
scas
hlt
leave
fsubr
shll
lods
jg
lret
int
push
jo
loopne
imul
cmp
and
cpuid
nop
movsb
cmp
pop
out
aad
sarl
xor
ss
sahf
mov
add
pop
pop
icebp
aam
lds
lock
rcl
mov
and
subl
mov
fmulp
repz
stos
sbb
cld
pop
out
lds
mov
fsubrp
add
jns
add
mov
jns
out
inc
push
mov
add
cs
pop
mov
faddl
push
xrelease
in
decb
clc
int3
std
push
mov
idivl
push
pushf
repnz
mov
cmp
test
test
xchg
mov
stos
imul
in
ds
ret
add
mov
hlt
mov
dec
xchg
sub
adc
jbe
xchg
imul
push
gs
repz
lret
jno
sub
and
xor
cmpsb
and
inc
insl
repz
fisubs
lret
push
jg
lea
outsb
xchg
mov
sub
mov
xor
xor
dec
push
popf
negb
repz
sub
pop
sbb
mov
push
add
cli
lea
push
or
sub
and
notl
popa
fsubs
or
shlb
shrl
push
pop
xchg
int
jns
pop
mov
fisttpl
hlt
mov
jp
dec
mov
aam
loope
mov
sub
add
push
scas
dec
xor
dec
jge,pt
push
xchg
jecxz
xlat
aam
gs
cmp
cmp
dec
push
or
push
fldcw
aam
xor
pop
pushf
loope
stos
dec
in
rcrl
sub
addr16
in
arpl
lods
pop
sub
popa
inc
insb
in
cmpsl
or
cmc
cmp
dec
les
inc
lcall
and
lock
push
cmc
xorb
out
or
movsl
push
ljmp
data16
sbb
push
or
mov
sbb
dec
sub
cmp
arpl
lods
add
dec
push
jne
ror
mov
mov
push
dec
nop
repnz
call
ljmp
mov
ud1
and
or
and
loope
xor
xchg
push
jle
and
and
jp
push
push
xor
push
sahf
mov
sbb
sub
dec
es
pop
mov
stos
jb
xchg
rolb
xchg
mov
scas
je
push
push
sub
call
repnz
enter
imul
aas
push
xor
in
adc
rcll
push
imul
jl
fisubs
and
bound
dec
icebp
and
pop
lds
dec
je
mov
jecxz
leave
jne,pt
inc
inc
push
inc
test
test
mov
test
mov
mov
scas
lahf
inc
and
push
xor
xor
out
cli
sti
ljmp
js
push
imul
jmp
cmc
cmpsb
or
push
xor
or
cwtl
sbb
test
les
mov
test
mov
push
inc
jbe
jns
mov
push
sbb
roll
pop
adc
xchg
push
shrl
xor
cltd
in
sti
es
imull
pop
jne
in
xlat
test
add
jle
mov
enter
popf
xchg
dec
mov
adc
popf
stos
ret
ret
rcrb
fstpl
xor
stos
aaa
test
aaa
insl
jmp
mov
pop
sbb
aaa
decl
shll
mov
rol
adc
add
cmp
sub
ss
fsubrl
rcr
out
pushf
inc
pushf
pop
lret
cmpsb
inc
sbb
pop
adc
mov
sahf
pop
ret
adc
mov
and
jo
out
mov
stos
mov
cmpsl
lcall
sub
fs
in
nop
pushf
mov
adc
xor
cmp
xlat
jmp
shrb
fldt
push
fmuls
sub
add
pop
iret
mov
xchg
inc
push
aas
fldl
out
push
cmp
cli
push
clc
cmc
add
loop
xorb
jp
loop
mov
idivl
cmpsl
sbb
fs
xchg
dec
push
xor
nop
lret
jp
pop
sbb
or
pop
insb
mov
and
test
popf
popa
jmp
les
inc
cli
popf
push
shrb
fistpll
xchg
mov
pop
jno
stc
cmp
fisubrl
push
nop
into
cmp
fcmovb
and
movsb
pop
fidivrs
inc
rorl
xchg
iret
sbb
xchg
jb
cld
mov
jbe
ljmp
aad
mov
out
scas
push
lahf
lea
mov
push
xchg
cmp
lds
mov
mov
jecxz
push
xchg
test
imul
lret
sbb
mov
adc
dec
sub
dec
scas
repz
xor
js,pn
mov
cs
andb
jnp
in
pop
rclb
sbb
daa
add
jg
addr16
xor
movsb
cltd
cltd
repz
ret
cmc
mov
sub
jmp
mov
repz
sbb
in
lret
xlat
jae
jmp
adcb
cld
fsubp
lret
mov
cwtl
sbb
shrl
and
shlb
cmp
push
and
jl
out
xor
push
mov
icebp
jae
inc
xor
or
test
xchg
mov
enter
cmc
ljmp
sbb
cmp
inc
mov
add
out
and
xor
add
mov
mov
and
jne
les
pop
insb
call
aad
repnz
ror
xor
xchg
cmp
adc
lock
cld
out
and
mov
lds
mov
add
int
clc
ja
mov
xor
sub
aaa
stos
addr16
push
fidivl
scas
mov
mov
push
xor
or
lret
xchg
cmp
jmp
clc
xchg
psubw
mov
adc
xor
in
xchg
and
ljmp
and
ret
mov
fnstenv
out
iret
xor
shll
push
mov
push
mov
mov
push
es
jl
in
and
fdivs
or
inc
ret
aaa
scas
rclb
mov
xor
mul
hlt
or
sub
loop
daa
add
lcall
out
and
in
dec
jmp
and
xchg
add
mov
stc
dec
cltd
xor
scas
push
stc
mov
mov
sbb
js
mov
out
jo
lds
cwtl
dec
dec
js
pop
arpl
sbb
into
jmp
fdivrl
xchg
gs
int3
mov
aaa
mov
lds
testb
out
mov
sbb
inc
lods
add
or
sub
dec
es
dec
mov
or
aam
dec
out
mov
cmpsl
pop
mov
out
call
stc
test
cs
hlt
cmp
lds
sahf
or
cld
das
adc
push
fisubrl
and
mov
aam
jle
mov
xor
sub
push
test
shlb
fcoml
data16
cmp
mov
ret
sbb
orl
mov
xchg
mov
mov
test
jg
or
mov
cmp
fwait
sub
xchg
mov
std
inc
inc
and
in
sbb
test
adc
repnz
or
pop
jne
arpl
add
xchg
inc
cmc
cs
clc
fildl
jns
fsubrl
or
mov
mov
mov
test
and
xchg
mov
out
push
push
notl
in
lcall
or
jne
adc
lcall
xchg
fimull
adc
fs
repz
and
hlt
in
adc
push
lret
pop
mov
stc
sub
je
test
jg
mov
fstps
add
pop
repnz
dec
int
dec
xchg
rolb
xor
cltd
fmull
sbb
pusha
jae
lret
adc
aas
js
jnp
mov
rolb
xor
decb
pop
adc
pushf
faddl
out
or
or
dec
loope
negb
pop
ljmp
cltd
or
fiaddl
fwait
addr16
cmp
cmp
sbb
jnp
repz
jmp
sbb
and
sbb
int3
int
adc
push
xchg
mov
inc
xchg
inc
jecxz
xchg
pop
mov
inc
fnsave
sbb
add
xchg
fdivl
and
mov
mov
sbb
and
aam
ss
rcrl
mov
mov
imul
jno
xchg
test
pop
xlat
sbb
and
pop
hlt
jae
aad
mov
int3
loopne
mov
and
xchg
push
out
xor
xor
rcrl
pushf
sbb
mov
jp
xor
push
into
rclb
mov
xchg
into
pop
loopne
iret
aas
je
xchg
xor
jns
je
mov
xchg
sub
push
cltd
push
imull
jne
shll
xchg
dec
jo
push
mov
push
push
lods
mov
sbb
jb
in
push
hlt
jo
mov
mov
imul
out
sbb
outsb
pop
aad
dec
mov
sbb
popf
daa
add
andl
rcrl
xchg
cli
idivb
or
or
test
xchg
idivb
dec
daa
loopne
mov
adc
outsb
outsb
mov
inc
popf
or
in
stos
aad
mov
xchg
in
jno
or
adc
adc
xor
mov
jl,pt
pop
xor
lods
mov
mov
test
adc
icebp
xchg
cld
shl
ret
mov
cmp
adc
push
pop
daa
aaa
push
mov
sbb
adcb
pop
mov
jne
inc
int
fsubl
insb
test
inc
fs
lret
mov
lock
clc
lods
mov
or
test
adc
and
sub
lock
test
xor
enter
pusha
fcom
add
dec
sbb
dec
mov
sub
xchg
jg
les
mov
inc
cli
call
xchg
cwtl
loope,pt
push
inc
mov
jae
mov
and
cmc
pop
sar
and
pop
adc
andl
pop
sub
popa
sbb
dec
xchg
stos
push
mov
ret
mov
into
lock
hlt
ds
push
adc
and
mov
inc
mov
les
in
icebp
jne
dec
repz
lret
adc
xor
mov
icebp
icebp
fisubs
sbb
mov
dec
scas
or
cwtl
mov
push
jbe
aad
fcoms
ret
repnz
jmp
loopne
lret
xor
cmpsl
jl
cmp
daa
sbb
sub
push
mov
imul
jb
cmpsb
movsl
and
xchg
lret
and
and
lods
negl
xor
sbb
dec
push
in
cmpsl
or
inc
xor
pop
mov
mov
leave
shlb
adc
adc
dec
pop
jnp
mov
push
test
pop
pop
mov
cmc
cltd
xchg
jae
dec
iret
daa
fstps
inc
cld
pop
ljmp
test
xor
xchg
push
subb
mov
lahf
enter
pushf
test
bound
adc
idiv
dec
lret
jle
fwait
daa
pop
add
stos
cs
gs
dec
xchg
pop
xchg
int3
and
mov
les
pop
leave
jmp
les
aaa
in
jp,pn
sbb
inc
sbb
jmp
scas
sub
sbb
and
pop
loopne
stos
movsl
inc
das
sub
test
cltd
and
or
mov
dec
pusha
pop
in
push
add
mov
in
dec
ds
cmp
mov
repz
mov
add
mov
pop
dec
out
sahf
in
cmp
shrb
mov
lahf
sbb
and
bound
or
mov
fbld
xchg
mov
sbb
clc
mov
aad
push
stos
xchg
mov
dec
idiv
add
adc
stos
nop
jg
add
repnz
jp
adc
jl
pop
mov
in
fmul
mov
mov
xor
loopne
insl
lcall
stc
mov
jo
mov
ljmp
jbe
sub
or
cmp
cmp
movsb
in
xchg
push
adc
or
and
pushf
xchg
jne
push
jmp
scas
adc
or
cmp
jmp
push
pop
and
xchg
jmp
jge
add
xor
or
inc
mov
pop
fdivrl
fimull
dec
fsubrl
pop
leave
cmp
cmp
xchg
xor
mov
adc
xor
inc
call
mov
adc
outsb
mov
in
dec
into
adc
push
aam
enter
fidivrl
testb
enter
pop
pop
rolb
out
sbb
cmpsb
sub
sub
out
aad
adc
movsl
loope
push
xchg
add
xchg
imulb
fidivrl
xor
aad
std
push
popf
pslld
lods
push
adc
daa
pop
pop
jl
mov
mov
lods
mov
fbld
test
push
mov
scas
inc
mov
cmpsl
ss
getsec
mov
imull
sub
xor
clc
and
sub
insb
xlat
sahf
xchg
jne
push
jmp
enter
lret
xor
or
adc
xchg
xchg
pop
cmp
lfs
enter
push
xchg
decl
movsl
shrb
push
sub
loop
mov
pushf
int
arpl
in
add
inc
popf
xchg
dec
loop
xchg
ljmp
sbb
repz
fs
loop
mov
pop
xchg
xor
lahf
sbb
insb
or
mov
pop
out
cmp
data16
add
jbe
dec
lcall
dec
cmp
inc
pop
mov
insl
xor
sub
ja
jnp
rcrl
gs
lock
das
dec
adc
repnz
pop
mov
sub
add
nop
or
fcom
dec
jo
push
jae
movsb
jbe
sarl
aam
jg
pusha
icebp
inc
jne
subb
lcall
jecxz
add
lahf
and
arpl
xchg
or
mov
pop
insl
mov
sbbl
movsl
sub
mov
inc
jg
loop
fmul
adc
xchg
lock
imulb
inc
rcrl
sbb
lods
or
fwait
test
cmpsb
repz
mov
mov
enter
aaa
push
int
outsb
pushl
mov
dec
cld
rcrb
push
push
add
into
movsl
repz
movsl
rclb
addr16
push
mov
xchg
loopne
movsl
test
hlt
and
push
mov
arpl
fwait
xor
enter
bnd
enter
bound
mov
cmp
sub
jmp
cli
call
in
cwtl
pop
fcoms
push
inc
jg
adc
jo
js
cmp
adc
movsb
nop
pop
sub
and
and
data16
xor
dec
call
ror
mov
loop
xlat
xchg
sbb
or
pop
sahf
test
hlt
ds
es
imul
mov
xchg
mov
ret
mov
jg
cmp
pop
repz
sub
stc
sbb
icebp
pminub
xor
jns
mov
stos
leave
insb
dec
cmp
push
sbbb
adc
popf
xor
pop
sbb
hlt
popa
xchg
int3
jne
nop
jo
jbe
movsb
arpl
movsb
sub
dec
shll
ror
test
sbb
cmp
popf
xchg
xchg
fists
movsl
or
movsl
mov
xor
lods
cld
mov
add
scas
ret
daa
sub
adc
or
scas
jmp
nop
xchg
out
ret
es
dec
cwtl
sub
repz
movsl
mov
push
popf
into
lahf
mov
ss
mov
and
mov
push
mov
cltd
adc
xchg
sub
xchg
xchg
iret
add
lret
xor
push
inc
bound
push
nop
xchg
icebp
mov
xchg
mov
mov
push
xor
enter
adc
popa
push
out
sub
xor
les
mov
xor
ficomps
xor
push
outsl
sub
les
insb
cmpsl
rcl
ret
xchg
les
test
cmc
jle
scas
mov
jne
cwtl
frstor
or
push
add
mov
call
add
sbb
insb
push
bswap
mov
call
push
lods
mov
cmp
xchg
jg
inc
or
lret
je
xchg
cmpl
dec
ret
pop
addr16
movsl
leave
mov
inc
push
mov
sub
xchg
mov
sbb
or
or
xchg
shll
xor
sub
sub
jp
rcr
mov
pusha
pushf
add
mov
movsl
jle
leave
xor
in
bound
pop
sub
sbb
es
lcall
jg
loope
in
xor
mov
clc
nop
pop
int3
ret
xchg
std
rorb
mov
sbb
fbld
mov
imul
leavew
jg
adc
outsb
xor
sti
ljmp
stos
and
sarl
cwtl
adc
xchg
call
stos
or
cld
scas
cld
daa
mov
int3
imul
into
cs
outsb
mov
shl
test
sub
mov
xchg
int3
lea
fucomip
cmp
sub
xor
mulb
movsl
sub
xchg
mov
cmp
push
cltd
mov
inc
xchg
inc
push
jne
xor
fsubs
les
xlat
out
mov
add
xor
mov
jge
and
pop
mov
stc
sbb
inc
jecxz
stc
mov
pop
jmp
mov
mov
lfs
xlat
aam
scas
pop
pop
inc
sub
push
inc
filds
movsl
dec
lds
xchg
aas
lcall
inc
sbbl
int3
push
ja
xchg
push
rcr
fmull
je
adc
and
and
shl
xchg
add
and
cwtl
dec
adc
loopne
ret
pop
movsb
fistpl
mov
push
je
xchg
cmp
das
mov
inc
adc
or
dec
leave
xchg
ret
adc
repz
stc
inc
packuswb
lahf
add
cmp
fwait
jl
push
faddl
mov
out
fidivl
clc
ret
jnp
test
iret
stc
inc
push
jnp
sahf
pop
pop
sub
mov
cmp
cmp
xor
les
xor
mov
dec
pop
lahf
mov
fisubs
add
sbb
push
in
stos
inc
add
jmp
push
push
mov
sub
and
jle
repz
sti
mov
xchg
mov
dec
int
je
pop
shlb
imulb
inc
stos
xchg
mov
inc
cltd
jecxz
or
pushl
dec
repz
mov
push
arpl
xchg
sbb
scas
aaa
mov
das
adc
cltd
mov
aad
pop
cld
adcl
jo
jbe
rorl
push
ja
test
dec
mov
jp
mov
jmp
mov
or
stc
in
in
jmp
push
jb
icebp
jl
test
push
inc
ss
xchg
jb
sbb
mov
pop
in
shlb
push
je
jb
and
cwtl
pop
mov
add
insl
aaa
jo
aam
ds
rsm
mov
xchg
mov
rolb
cmp
mov
mov
pop
scas
mov
cli
mov
mov
ja
flds
jge
push
and
movsl
pop
jl
dec
and
or
fnstenv
hlt
jae
ds
or
lret
insl
push
jg
mov
ljmp
aaa
dec
or
bound
insb
xchg
in
adc
sub
sub
xor
es
push
js
ljmp
pop
mov
dec
ss
xor
in
mov
adc
or
or
jp
das
lods
jecxz
mov
test
jmp
das
shl
lret
adc
or
faddl
pop
cmp
dec
pusha
cltd
shrb
bound
divb
test
jge
or
je
ret
sub
cmp
loope
add
inc
pop
mov
dec
dec
mov
clc
jno
xchg
inc
stos
cmc
stos
jae
pop
outsb
js
sbb
pop
dec
jl
adcl
mov
add
fbstp
xor
pop
imul
stc
add
scas
sbb
xor
call
pop
lret
fnstcw
add
scas
dec
xchg
pop
dec
mov
dec
mov
addb
cld
cmp
ror
jp
hlt
wbinvd
outsl
popf
inc
aam
mov
fucom
dec
ja
fdivl
fmull
or
pop
sub
pushf
add
loopne
sbb
loope
lds
out
stos
sub
pop
ffree
pushf
sbb
mov
xchg
mov
add
fisttpl
or
inc
imul
loop
shll
mov
into
sub
aad
movsb
sbb
daa
data16
push
aad
dec
push
fisttpl
in
dec
xor
jecxz
insb
cmp
jnp
into
adc
cwtl
mov
fistl
push
mov
lds
out
pop
mov
jp
cmpb
adc
lods
or
cmp
sbb
inc
xchg
shll
sbb
imul
pop
dec
in
mov
sub
mov
ret
mov
jmp
out
xlat
cmc
mov
leave
and
js
pop
jns
int3
stc
mov
aad
inc
movsb
inc
popa
fdivrs
cwtl
push
adc
inc
lods
add
jns
adcb
out
cltd
outsl
inc
das
mov
fisubl
jge
jge
or
and
sbb
lahf
jnp
shll
test
cltd
inc
aad
sahf
leave
sub
bswap
jmp
lcall
push
movsb
aaa
dec
pop
std
out
add
aam
pop
and
popf
jbe
inc
fdivs
out
add
andb
scas
ljmp
mov
mov
rcll
xor
lea
sbb
jns
loopne
fistps
xorl
les
popa
cli
cmp
jae
sub
stos
rcrb
insl
push
or
jmp
pushf
cmpsb
mov
mov
mov
leave
movsb
or
push
push
subb
jge
inc
inc
fwait
lock
sbb
add
xchg
xor
popf
xor
adc
aaa
cld
in
inc
fcomi
mov
xchg
jmp
call
sub
lock
nop
sti
stos
inc
and
rorb
mov
jp
mov
shrl
loop
jae
sbb
sahf
or
std
adc
xlat
mov
xchg
mov
push
add
jp
jmp
mov
push
js
stc
mov
mov
cmp
imul
les
adc
jp
adc
or
rolb
bound
jo
scas
clc
es
fdivl
inc
mov
das
jno
mov
loope
daa
imul
enter
xchg
xchg
xor
inc
lcall
inc
cs
les
dec
sbb
mov
mov
mov
test
or
sti
or
mov
add
xlat
les
subb
sbb
not
lahf
add
jecxz
jg
fidivrl
add
ss
fsubrp
arpl
loop
sub
or
or
jno
push
pop
lds
add
jg
or
push
add
cmpsb
dec
daa
sbb
add
mov
in
mov
scas
mov
mov
push
and
call
out
nop
mov
pop
mov
and
mov
cmpsl
sub
jns
bound
inc
aas
cmp
fldl
fwait
push
jecxz
fimuls
sbb
xor
pop
add
and
fwait
cmp
das
dec
stos
mov
mov
jecxz
sbb
cmpsb
inc
jmp
loope
bound
pop
mov
pop
xor
push
xchg
je
push
ss
sarb
mov
and
adc
movsl
add
shlb
sub
xor
add
adc
fistpll
sub
xchg
cmpb
jnp
jno
inc
push
sbb
add
in
decl
in
arpl
push
push
bound
xchg
mov
popf
je
adc
dec
jno
inc
jge
adc
mov
loope
pop
push
fscale
clc
jecxz
insl
in
dec
jl
les
cld
je
push
mov
sbb
xor
andl
aam
mov
hlt
xchg
int
xor
dec
push
jo
popa
jbe
lahf
cs
sbb
or
xor
test
xchg
pop
push
lds
mov
push
lods
push
sub
out
aaa
jp
or
push
orl
je
js
push
push
bound
mov
and
xchg
and
popf
xchg
mov
or
jnp
pushf
cmpsl
push
xor
jp
sub
cli
xor
inc
or
arpl
adc
loopne
mov
jno
pop
loope
sub
xor
shrb
mov
out
movsb
fwait
mov
addl
jmp
lahf
rcll
shrb
fldcw
in
adc
dec
outsb
or
mov
movsb
pusha
inc
mov
or
int3
jl
ficoml
sub
add
testb
insb
mov
das
mov
cmp
lcall
inc
or
les
daa
int3
sahf
lods
rol
js
or
scas
mov
push
push
push
cmp
sbb
sti
xor
sbb
and
or
fstpt
addr16
iret
je
cmp
les
xor
jge
test
add
lret
orl
bound
movsl
lea
aad
adc
and
sbb
call
jmp
mov
cmc
movsl
jbe
int
sub
dec
scas
xor
pop
sahf
and
filds
dec
shll
shrb
leave
adc
mov
jb
cmp
fcmovne
mov
cmp
sbb
mov
icebp
test
ss
outsb
mov
dec
jle
es
or
imul
cmp
nop
inc
mov
inc
loop
rorb
out
bound
mov
adcl
mov
push
jmp
je
jmp
cltd
cmp
jmp
mov
xor
and
pop
rcr
inc
rolb
and
mov
pop
outsb
add
ss
mov
mov
xchg
jmp
xchg
imul
xchg
pop
inc
jge
cwtl
js
cmp
shll
xor
sub
je
in
mov
push
out
popf
enter
xlat
or
add
add
jb
int
xchg
test
jp
sti
mov
test
xlat
inc
cli
movsb
xor
mov
cmp
mov
dec
pop
push
push
roll
push
cmc
adc
add
mov
enter
hlt
sub
popf
jne
push
stc
cmp
lds
cmp
push
das
scas
and
gs
xor
mov
fwait
jg
mov
sbb
mov
sti
stos
mov
cmpsb
aad
mov
xchg
mov
sbb
call
ljmp
lds
pop
aas
in
arpl
jnp
pop
jge
adc
cmp
pushf
xor
test
mov
fwait
inc
inc
cwtl
push
hlt
dec
lcall
sub
mov
mov
inc
fwait
push
and
push
roll
enter
mov
stc
out
jb
xchg
sub
add
adc
mov
scas
lcall
fistpll
lret
push
mov
out
add
cmpsb
nop
ret
test
pop
jns
push
push
add
adc
mov
mov
test
jno
int
mov
faddl
push
cmpsl
jbe
notl
add
jecxz
repz
cmp
addl
and
xor
in
cmp
hlt
es
push
les
xor
adc
rol
inc
pop
pop
dec
sbb
and
sub
fadds
sbb
push
adc
mov
iret
movsb
stos
push
adc
add
jns
xor
dec
mov
insb
mov
rcrb
pop
mov
in
cs
sub
cmp
fnsave
adc
push
pop
cld
cltd
pop
mov
mov
stos
out
mov
lret
lods
pop
scas
jno
in
daa
insl
xor
sbb
mov
or
vpaddsw
xchg
loop
inc
cs
sbb
ds
sub
cmpsl
mov
xchg
addl
lret
jne
out
scas
and
cmc
add
push
jb
out
fisttpl
sbb
xor
fs
adc
sti
add
xchg
xchg
xchg
jo
cmp
xchg
cmpsl
dec
pushl
inc
pushl
inc
in
out
cmp
cmp
addb
movsb
stc
sub
xchg
or
pop
push
and
push
inc
rcll
lret
jne
adc
sub
aad
dec
mov
adc
std
dec
f2xm1
pushl
dec
lea
xchg
inc
popf
adc
stc
pop
pop
add
sar
notl
fstps
mov
add
pop
add
xor
lret
cmp
mov
adc
jecxz
sub
cwtl
and
dec
pop
je
jbe
sub
and
cli
dec
inc
mov
mov
lods
testl
push
mov
xchg
mov
fdivr
lret
rorb
dec
xor
add
mov
jnp
sbb
hlt
cmp
mov
push
in
mov
dec
cmp
test
jg
insb
mov
mov
cmpsb
adc
js
fnstsw
fdivrp
ja
lods
or
test
mov
rclb
inc
loopne
cmp
sub
jle
imul
pop
sbb
xchg
adc
and
mov
cmp
fwait
jle
aam
push
add
fmul
mov
cmpsl
jns
or
inc
push
xor
gs
rorl
hlt
push
push
repnz
sarl
cli
sub
jbe
jecxz
cmp
data16
int
mov
jl
inc
push
cmp
je
mov
jae
icebp
dec
std
jmp
inc
pop
cmpsl
sbb
pop
mov
arpl
aaa
sbb
sbb
pop
dec
or
aaa
xorb
jp
jne
test
in
cmp
cli
cmpsb
jnp
scas
repnz
insb
xchg
test
mov
jbe
jl
xchg
aam
loopne
dec
sub
xor
rcll
adc
mov
imul
adc
aam
xchg
jmp
lock
pop
xchg
xor
sbb
hlt
les
add
scas
or
mov
shll
xchg
xchg
add
mov
push
les
push
daa
notl
push
add
call
icebp
test
jno
mov
mov
lods
icebp
mov
mov
cmp
dec
xchg
movsl
or
mov
in
jl
mov
push
push
out
cwtl
popf
clc
mov
sbb
sbb
movsl
dec
inc
mov
xor
cld
pop
xor
mov
cmpsl
dec
adc
out
push
dec
aas
out
or
mov
notb
pop
lods
pop
jmp
lock
jb
shrl
sub
xchg
pop
ret
xchg
push
nop
sub
outsl
out
out
test
cmp
lds
xchg
idivl
and
push
cwtl
xchg
or
out
notl
out
idivl
test
mov
xchg
adc
cmp
sbb
jg
or
aas
ret
and
in
repz
sbb
sub
cltd
xor
fs
lret
push
pop
mov
lods
mov
roll
mov
ret
inc
addb
sub
scas
mov
sbb
xor
sub
mov
sub
dec
stos
cmpsl
and
shll
pop
push
mov
mov
lret
addb
xchg
loope
out
xchg
dec
mov
sub
lcall
fdivr
test
rcrl
add
xchg
hlt
xor
and
dec
sub
cmc
in
dec
insb
std
lret
jne
or
xchg
fdivl
adc
add
call
nop
inc
aas
xchg
mov
dec
je
div
ljmp
xlat
call
cmp
loopne
add
mov
leave
in
adcb
out
lock
xor
scas
inc
repnz
push
push
sub
outsl
dec
jg
movsb
in
dec
shrb
push
xchg
int
push
and
inc
repnz
stos
xor
test
dec
bound
out
push
cs
xchg
push
mov
loopne
push
push
jno
jp
mov
and
mov
movsb
mov
fmuls
dec
aaa
mov
lret
ret
mov
sub
and
test
les
xchg
sti
or
cmp
je
jecxz
fldenv
mov
hlt
std
pop
pop
inc
push
inc
and
movsb
stos
call
movsl
lea
test
nop
notb
outsl
xor
cmp
scas
add
pop
push
adc
out
in
mov
push
shll
mov
cmp
xchg
cmpl
pop
or
jns
lahf
sbb
mov
nop
jbe
out
cmp
out
mov
pushl
mov
push
sti
pop
xchg
subl
mov
jbe
pushf
stos
xchg
addb
adc
lret
cmp
push
and
clc
imul
add
into
mov
push
xor
push
mov
cmp
pop
insl
jns
std
sbb
xchg
imul
sbb
or
loop
dec
jge
scas
mov
and
push
xchg
pop
dec
inc
jne
push
sti
stc
dec
std
push
and
or
loope
and
pusha
sub
sti
das
mov
imul
push
xchg
clc
cmp
scas
ds
mov
cld
dec
clc
scas
mov
sbb
and
xor
or
xchg
inc
xor
add
shrb
in
popa
stos
int3
shll
cs
and
xchg
bound
sbb
les
jg
mov
pop
pusha
scas
lock
xchg
mov
push
mov
out
inc
cwtl
sub
dec
inc
lret
xchg
push
and
daa
mov
xor
mov
sbb
jae
inc
popa
stc
cmpsb
test
pusha
pusha
aaa
push
sub
iret
test
cmp
insl
and
jmp
incl
mov
repnz
scas
mov
stc
movsb
jns
dec
daa
mov
sbb
roll
push
inc
sub
add
add
mov
dec
sbb
lea
cmp
pop
cld
xchg
pop
mov
outsl
cmp
sahf
out
mov
push
adc
sbb
sub
cld
aad
inc
jae
outsb
sub
sub
addr16
popa
inc
in
sub
pop
in
mov
sbb
fidivl
and
repz
mov
cld
out
pusha
pushl
jo
jmp
xor
scas
hlt
adc
inc
and
xchg
jo
and
imul
mov
and
or
aas
cs
mov
dec
lods
sbb
insb
push
lahf
sahf
push
hlt
imul
out
jl
div
shlb
xor
outsb
push
mov
xchg
and
jbe
insl
je
andb
scas
pop
ret
sahf
jp
or
daa
stos
sbb
pop
pop
subb
insb
shlb
leave
sbb
dec
ror
sti
cmp
dec
cmpsl
scas
dec
ds
popa
fdecstp
cmpb
jp
mov
shlb
pop
popa
xor
mov
cmp
roll
aas
test
and
xor
cmc
xor
fucomip
out
lret
sub
es
int3
fiaddl
mov
es
jg
and
jbe
push
cmp
divb
add
sub
mov
sub
lock
xchg
out
mov
inc
mov
mov
fbld
fcmovb
dec
lock
jnp
mov
loop
into
out
fwait
enter
ljmp
jp
xor
mov
icebp
loop
and
dec
xchg
jnp
push
jle
add
js
sub
fsubs
ja
jmp
icebp
jns
shll
xchg
jge
mov
imul
and
mov
loop
jecxz
xchg
aam
lea
pop
ret
leave
or
call
ret
imul
dec
mov
fnstsw
dec
cmp
or
pop
mov
inc
or
outsb
and
sahf
jae
js
test
inc
mulb
and
iret
mov
push
cmpsb
ret
mov
enter
or
dec
or
divl
mov
add
nop
scas
push
mov
cs
and
sbb
adc
scas
lahf
cmp
clc
pop
add
loope
pop
fsub
jo
dec
aaa
call
test
loope
push
adc
lcall
ret
mov
aas
pop
mov
add
stos
jle
bound
jns
aam
call
and
pop
stos
mov
pop
stos
std
mov
adc
test
jbe
cmp
je
fs
pop
fiaddl
inc
jne
cmc
or
shrl
test
lods
call
mov
stos
enter
xchg
adc
js
orl
jo
cs
sub
dec
mov
dec
fmul
mov
out
xchg
icebp
add
cmp
mov
std
and
sti
mov
cmp
les
sub
aad
cmpl
lock
add
add
testb
cmp
scas
loope
movd
mov
in
andl
cmp
sbb
push
test
jecxz
stos
in
lods
sbb
pop
adc
hlt
add
inc
adc
loopne
dec
call
lret
jecxz
popa
dec
leave
in
adc
inc
das
push
lea
jecxz
cmp
jb
into
dec
adc
test
and
inc
pop
arpl
push
jp
pop
aas
mov
inc
xor
negl
xchg
cmc
test
adc
sbb
xor
cmp
lret
push
jmp
mov
incb
xchg
loopne
imul
jb
or
out
mov
adc
mov
jl
imul
xchg
test
xor
fisubrl
fld
loopne
push
and
clc
adc
in
aaa
hlt
fildll
jl
jno
adc
and
or
mov
js
loope
jo
scas
sbb
pop
push
or
decb
mov
jmp
push
xchg
aad
pusha
xchg
sub
cld
lea
sbb
mov
int3
mov
xor
out
into
ja
pop
nop
popf
jbe
sub
test
inc
jge
inc
pushf
ljmp
fdivs
ljmp
xchg
sub
push
jmp
cmp
jnp
lods
jnp
pop
lods
imul
leave
dec
bound
imul
push
cmp
call
xchg
movsl
mov
mov
lcall
push
faddl
in
pop
mov
cld
mov
xor
cmp
and
in
mov
dec
stc
cmpsl
sbbl
xchg
lcall
call
adc
and
clc
es
icebp
int3
adc
adc
mov
pop
cmpsl
lods
sub
mov
fisubrl
insl
and
add
mov
es
cmove
dec
dec
adc
jp
push
out
lahf
outsb
or
int
push
hlt
hlt
mov
pushf
mov
xchg
mov
insb
push
push
fidivrl
ja
mov
jbe
das
in
out
notb
xchg
notl
add
cmp
int3
js
push
pop
fldenv
sub
arpl
xchg
cmc
imul
pop
out
in
loope
fimuls
and
ret
ljmp
mov
fptan
mov
roll
xchg
inc
enter
lret
pop
push
xchg
jo
adc
les
scas
adc
push
in
jecxz
push
int
fildl
xor
push
mov
mov
out
pushl
and
sbbb
lods
sub
pushf
fs
jmp
rclb
inc
push
clc
inc
dec
jge
xor
adc
or
outsl
mov
call
adc
cmp
movsl
pusha
test
movsl
out
scas
in
push
fisubrl
mov
fs
inc
adc
mov
fstl
jl
fisttpl
mov
xchg
push
add
xchg
das
xor
add
mov
xor
cmp
jae
mov
add
mov
pop
lret
imul
pop
mov
mov
sahf
and
add
fsubr
cmpb
jmp
mov
mov
je
sbb
xlat
roll
push
test
decl
lret
scas
xor
pop
es
ljmp
gs
xchg
and
adc
adc
std
jg
mov
aas
call
sub
bound
or
sahf
dec
inc
fsubr
clc
imul
push
adc
dec
jo
movsl
or
ret
es
jnp
mov
jbe
jle
leave
popf
out
cmp
xlat
inc
stos
stos
xor
dec
cmp
rclb
pop
pop
lds
out
int3
cmp
mov
orl
push
inc
sti
inc
push
outsl
lds
stos
dec
pop
outsl
call
les
adc
xor
jecxz
add
push
xchg
nop
es
mov
or
int3
cmpsl
cmp
jge
jge
dec
jb
icebp
xchg
outsl
pop
leave
push
or
pushf
loopne
test
std
and
pop
rorb
and
mov
push
fcompl
scas
and
jecxz
adc
adc
inc
push
pop
movsb
xchg
dec
ds
call
int3
imul
cmp
outsl
lods
sbb
inc
xchg
mov
inc
int3
xchg
test
scas
mov
adc
or
jne
push
imul
pop
jnp
push
out
xchg
or
pop
add
sub
aad
jae
js
cld
repnz
mov
ret
fs
loop
xchg
inc
lret
loope
mov
nop
ljmp
mov
xor
enter
int
or
mov
pop
adc
mov
mov
sbb
push
fdiv
mov
cltd
mov
lds
mov
and
movups
mov
rorl
cli
dec
in
jge
in
cmp
test
adc
repnz
and
sbb
and
xor
ja
cmp
cmp
out
lea
dec
push
mov
cmp
fmull
aas
sahf
add
xor
mov
repz
push
fld
ss
push
cmp
movsb
scas
and
xor
aaa
lods
bound
lods
jbe
jne
test
mov
dec
pop
and
stos
je
sbb
push
pop
jmp
xchg
mov
sbb
ds
shll
sbb
out
outsl
pop
arpl
cmp
dec
jae
or
rol
insb
jecxz
xlat
roll
sbb
andl
fwait
sub
jl
xor
and
add
out
test
sub
nop
in
inc
lcall
mov
fistpl
into
aam
sbbb
test
xchg
int3
mov
jns
jns
les
xor
cmp
aaa
xor
mov
test
fwait
lock
icebp
movsl
rclb
adc
mov
sub
mov
or
imul
fmul
sub
ret
les
pusha
pop
mov
aaa
pop
mov
pop
jne
cwtl
cs
imul
inc
mov
enter
stos
xchg
test
pop
dec
xchg
test
inc
into
icebp
cmp
jo
fimuls
inc
push
pop
mov
mov
pop
or
loop
add
fsubs
test
dec
inc
nop
incl
mov
mov
push
xchg
inc
jecxz
dec
or
fistpl
loope
push
and
add
ss
mov
loop
and
inc
in
inc
gs
je
dec
dec
inc
cltd
notl
cs
mov
push
loopne
mov
inc
adc
aad
shlb
add
mov
test
leave
inc
push
jmp
pop
sub
jmp
sbb
pop
xchg
repz
ja
cmp
xchg
xchg
cmpsb
sub
scas
ljmp
ret
sub
leave
ja
sub
push
jnp
adc
mov
pop
out
push
jmp
adcb
add
push
push
push
insb
push
aad
adc
imul
orl
data16
je
loop
pop
outsl
cwtl
sub
or
pop
or
mov
inc
lahf
in
pusha
cltd
push
sub
scas
and
mov
push
xor
mov
es
fwait
mov
lret
pop
adc
push
clc
mov
push
lods
add
mov
clc
push
and
int
fiadds
push
aaa
and
jecxz
repnz
add
jge
call
sbb
or
mov
lock
js
pop
lahf
inc
adc
xor
push
push
ja
out
mov
cmp
nop
mov
int
in
les
push
jo
insl
icebp
jo
dec
jecxz
mov
sub
lcall
mov
cmp
mov
cmp
outsl
jg
std
mul
cmpsb
pop
hlt
ret
adc
xchg
pop
xchg
push
sbb
and
sub
cmp
mov
mov
gs
jp
sub
jnp
cli
inc
xor
cmp
call
stos
xchg
jbe
je
mov
sbb
push
orb
or
loope
mov
or
lock
insl
push
test
jnp
cmp
or
sub
cmp
cltd
add
insl
xchg
mov
imul
lods
cmp
mov
xchg
lcall
in
stos
imulb
xor
rep
xor
lea
and
cmp
shll
int3
jl
xchg
mov
mov
in
sbb
jb
in
xchg
cltd
ret
xchg
sub
push
mov
stos
add
mov
dec
add
mov
cmp
push
repnz
mov
mov
or
nop
inc
pop
test
inc
push
adc
mov
adc
pushf
add
lahf
testb
ss
push
aam
enter
aas
pushl
inc
jne
and
mov
hlt
add
mov
mov
imul
movsb
or
stos
cmpsb
out
jmp
iret
mov
xor
call
xor
and
outsl
in
inc
stc
js
push
xchg
lret
add
xlat
adc
sbb
nop
rol
pusha
inc
jno
mov
dec
leave
fimuls
sub
out
inc
stc
outsb
bound
or
mov
jp
subb
sbb
or
mov
call
push
nop
out
xchg
xchg
pushf
clc
int3
or
ret
mov
out
call
pusha
lret
pop
out
mov
bound
mov
dec
hlt
jno
sbb
xor
sarb
aad
ja
xor
dec
iret
xor
cmp
cmc
dec
xchg
pop
ret
imul
push
int
mov
mov
mov
stos
movsb
and
in
mov
mov
xchg
aad
and
icebp
dec
pushf
cmp
nop
lcall
dec
rclb
xchg
dec
movsl
inc
push
sbb
ja
stc
push
out
je
mov
mov
inc
fstl
hlt
mov
test
jmp
fwait
leave
sbb
addr16
in
mov
mov
mov
xchg
call
mov
mov
xor
mov
dec
out
inc
es
shll
scas
int
xchg
shr
sbb
push
jge
adc
scas
inc
inc
nop
das
inc
push
cmpsb
in
inc
rclb
cmp
jecxz
jecxz
leave
outsb
cltd
cwtl
sub
dec
xchg
jecxz
test
dec
ja
lret
push
cmp
mov
pop
dec
or
pop
mov
ss
and
mov
in
ret
push
add
cmp
jl
aas
fdivr
lcall
dec
cmp
insb
jle
push
add
or
sbb
fwait
out
clc
loope
push
or
cmp
mov
repnz
negl
cli
mov
xchg
mov
sbb
dec
imul
dec
rcrb
pusha
out
sbb
scas
push
sbb
pop
or
and
xchg
jecxz
popf
xor
iret
and
call
xchg
xlat
xchg
lret
dec
arpl
scas
mov
insb
cmpsb
fidivrl
and
or
lahf
vprotd
add
mov
and
mov
jo
and
push
icebp
xor
push
jecxz
in
sub
shll
mov
inc
mov
or
inc
xchg
mov
dec
mov
ret
inc
jo
shrb
fsubr
sub
mov
test
imul
and
shrl
mov
leave
int3
mov
dec
decb
cs
mov
leave
or
xor
jl
cmp
sub
inc
loop
jl
addb
dec
pop
inc
inc
in
adc
mov
ja
cmovae
imul
stos
fstpl
fs
ljmp
repnz
and
lret
daa
repnz
movsl
enter
insb
ljmp
cld
mov
mov
movsl
add
sti
testl
shll
push
dec
xchg
add
adc
cmpsl
lcall
add
and
push
inc
aaa
xor
cmp
ljmp
xor
xchg
popf
push
jecxz
or
hlt
inc
jns
xchg
bound
lea
sub
fimull
dec
sbb
ja
sti
nop
dec
sbb
push
mov
mov
gs
addr16
push
xchg
rolb
fwait
subb
xor
sbb
dec
xor
lods
loope
fldcw
sub
cmp
shlb
mov
cli
mov
je
mov
jmp
sbb
mov
int
mov
sbb
aam
dec
filds
out
test
sbb
push
in
dec
sub
pop
fldcw
negl
and
xchg
leave
jbe
cmp
xor
lock
andb
btr
fdivl
cmp
in
movsb
cmp
cmp
ss
lock
fcomi
shl
xchg
jns
lcall
adc
std
pop
fwait
pop
mov
sub
adc
es
xor
and
xchg
push
and
push
jmp
xchg
jg
mov
shll
clc
dec
in
mov
loopne
inc
sub
add
push
xchg
imul
sti
test
jg
addr16
cmp
cli
jae
jae
outsb
push
lods
fsub
adc
or
pop
lret
cwtl
cltd
es
movl
lret
pop
cs
pop
mov
negb
cmp
mov
or
idiv
lods
repnz
pusha
sub
jnp
pop
loopne
incl
lock
xchg
sarl
pusha
push
jg
aaa
in
gs
cli
pop
in
mov
das
cltd
push
mov
or
mov
fists
in
lea
pop
insb
adc
rcr
addr16
aam
xor
fstpt
mov
add
popf
mov
pop
push
push
adc
stos
xchg
xchg
outsl
ds
jle
and
loopne
sub
pushl
mov
mov
mov
cld
cs
inc
shlb
scas
xor
orb
out
jecxz
movsl
sbb
push
outsb
out
and
fists
incl
inc
stos
jo
or
xor
dec
popa
push
lea
mov
jae
lcall
push
shll
addr16
cmc
lds
cmpl
jne
add
or
adc
in
xchg
jb
dec
mov
cltd
cwtl
movl
xor
scas
inc
mov
push
pusha
fwait
push
mov
jp
xor
repz
into
ja
cli
dec
jecxz
shl
test
test
sbb
xchg
dec
int
and
fists
mov
out
arpl
cwtl
pusha
mov
xor
stos
sahf
stos
xor
lahf
clc
int
inc
int3
push
pop
loop
mov
mov
push
mov
xor
dec
test
or
xchg
dec
and
sub
or
pop
lahf
popa
and
adc
icebp
ljmp
scas
cld
inc
add
xchg
fdivl
mov
adc
jg
xchg
dec
and
hlt
sub
daa
movsb
lcall
dec
shlb
mov
jp
sub
inc
xchg
lcall
xor
jmp
dec
outsb
or
inc
lret
xor
and
push
dec
and
pop
stos
sbb
sbb
xor
add
std
jp
and
push
ret
lcall
and
cwtl
adcl
sarb
push
inc
pusha
out
notb
iret
je
stc
cmp
enter
inc
inc
mov
push
mov
or
cmpsb
popf
lock
and
or
sbb
or
loop
or
sub
sub
or
jbe
leave
xchg
cld
ljmp
pop
xchg
sahf
xor
cmp
mov
mov
push
inc
mov
mov
bound
mov
iret
cltd
or
xor
popa
jnp
adc
jecxz
dec
lcall
pop
xchg
pop
rclb
daa
fcmovbe
push
add
pop
inc
xor
pusha
iret
push
pusha
cltd
icebp
sbb
loop
lea
dec
jo
in
imul
or
stos
in
out
into
rep
fidivrs
lods
or
pusha
dec
adc
push
adc
xchg
add
xchg
or
adcb
push
cmpsl
jbe
jecxz
push
out
or
fbstp
mov
iret
sub
lret
push
cmc
cld
sar
and
cs
jl
xchg
sahf
sbb
cmc
stos
stos
daa
pop
mov
sahf
pop
sub
inc
and
fnstcw
xor
enter
loope
cmpsb
std
jno
cmpsb
cmc
dec
push
sub
out
xor
pop
sbb
gs
pop
push
jmp
cltd
inc
or
fs
and
mov
push
in
rol
cld
mov
adcl
out
mov
jne
xor
sahf
jb
xchg
hlt
dec
pop
pushf
loope
add
test
mov
mov
jecxz
cmp
mov
or
mov
testb
rclb
xchg
add
test
adc
mov
and
mov
repz
test
out
jecxz
js
sub
fmuls
xchg
icebp
mov
pop
mov
iret
ror
ds
lods
clc
ja
dec
fsubrs
cmp
dec
mov
lods
fisttps
fisubl
pop
ret
in
mov
int
test
jge
pop
lea
cmp
mov
dec
mov
jle
insl
and
js
repnz
pop
std
push
cwtl
sub
xlat
icebp
add
aam
dec
and
push
push
xchg
mov
mov
lock
xchg
sbb
mov
pop
xor
enter
dec
testl
adc
arpl
lahf
loop
cmp
pop
dec
mov
xchg
pop
pop
adc
pop
sbb
mov
shlb
lea
nop
mov
jge
mov
lock
scas
jl
arpl
nop
ss
stc
pop
mov
push
int3
mov
rorb
fdivr
imul
inc
ljmp
jae
les
decl
push
adc
cmp
xor
out
call
jne
shll
or
pop
mov
cwtl
out
add
popf
lret
fists
sub
sbb
negb
or
cmc
pushf
mov
push
stc
xchg
repz
xor
aaa
push
mov
pop
outsb
js
mov
lods
leave
and
out
stos
inc
jg
pushf
lock
jne
loop
xor
or
mov
sbb
sbb
pop
fimull
jp,pn
mov
rorl
pop
aas
and
out
and
aad
repz
bound
fld
xchg
mov
and
sbb
and
pop
insl
jbe
aad
jne
push
in
in
push
adc
aad
les
add
mov
sbb
cld
shlb
stos
incl
xchg
subl
std
pop
cmpsl
sbb
arpl
xchg
stos
shlb
push
stc
xchg
mov
hlt
and
les
fnstcw
cld
mov
cs
add
cwtl
pop
pminub
repz
mov
xor
cmpsl
jne
jne
xor
and
sbb
lahf
mov
addr16
jno
out
jp
xchg
in
out
add
arpl
mov
pop
sub
ret
aad
pop
into
aas
inc
add
adc
sarb
mov
scas
mov
fiaddl
pop
jecxz
ret
push
dec
pop
and
mov
fidivrl
imul
sub
push
fiadds
add
dec
daa
dec
or
icebp
jg
dec
pop
orb
jae
pop
out
push
cmovge
inc
lahf
xor
sub
clc
movl
dec
add
sbb
mov
sti
leave
pop
outsb
into
jno
add
dec
addr16
mov
insb
mov
mov
inc
xchg
lods
das
jns
mov
bts
sbb
hlt
sbb
mov
bound
sbb
in
daa
lods
punpckldq
and
enter
push
lmsw
inc
mov
push
inc
sti
loopne
js
mov
frstor
ds
adc
and
push
repz
ror
adc
sbb
mov
scas
cmpsl
jp
push
push
or
enter
jo
cmp
lret
insl
fadds
mov
fsubl
mov
insb
icebp
js
stos
mov
xchg
insb
pop
lods
add
add
movsb
sub
outsl
in
cmp
pop
andb
popf
loopne
loop
aas
je
jg
mov
outsl
aam
cmpsb
or
xchg
je
mov
mov
mov
jo
mov
xchg
mov
sbb
cmp
mov
test
dec
and
mov
mov
lret
push
in
shlb
pop
fsubs
inc
scas
rcrl
push
mov
in
rcl
jle
mov
pusha
jae
dec
les
xchg
mov
imul
sbbb
lret
out
lods
nop
out
fucomip
aad
dec
jmp
jecxz
outsl
push
push
add
out
in
adc
loop
andl
shlb
lret
cmpsb
adc
pop
loopne
xchg
push
inc
inc
std
in
out
inc
and
imull
ficoml
pop
inc
lea
lret
jns
arpl
fistl
push
pop
negl
fnsave
push
pop
fwait
pop
cmp
sahf
in
shrl
int
rolb
fs
in
sti
jg
sub
sbb
in
and
xchg
jmp
mov
xchg
mov
inc
lcall
fisubrs
adc
lahf
enter
add
les
test
jg
mov
sahf
ss
out
lret
outsl
int3
out
pop
out
sub
lock
pusha
pop
repnz
pop
dec
aad
les
mov
leave
lods
mov
cmp
divl
cs
and
sahf
cmp
add
push
subb
xchg
or
pop
mov
stos
mov
jo
stos
push
test
inc
lods
dec
cmpsl
push
imul
xor
cmp
test
mul
sub
mov
mov
daa
js
ret
mov
add
insb
jg
push
mov
or
push
push
aad
out
inc
mov
cmc
rcr
dec
sbb
ja
subl
pop
sbbl
mov
mov
aas
into
mov
dec
sbb
and
xchg
and
bswap
pop
mov
jns
mov
add
mov
shl
cmp
insl
fwait
pop
loope
insl
aas
mov
sub
adc
cld
push
jno
cli
xorb
push
push
fisubrs
and
push
inc
push
popf
ja
jmp
std
inc
sahf
ret
and
test
fiaddl
loop
sub
shlb
push
mov
xchg
adc
stc
jo
inc
sub
aaa
gs
fsubrl
pop
in
cmc
xchg
sti
xchg
ret
int
mov
jae
loop
inc
movsl
out
jmp
xor
aad
imul
pop
ja
sub
jo
or
xchg
fbstp
dec
js
xchg
inc
dec
mov
pushf
stos
popa
stc
repnz
scas
pop
leave
push
lea
pop
subb
or
pusha
adc
imul
pop
loopne
cld
sbb
dec
xchg
test
xor
xchg
inc
sbb
mov
addr16
arpl
push
out
dec
js
adc
fadd
cwtl
out
ljmp
jl
push
lret
mov
lods
hlt
in
subl
inc
mov
addb
xor
inc
xchg
mov
sbb
stos
add
ljmp
and
mov
dec
mov
lods
xchg
push
push
negl
cmc
sbbl
jae
adc
ret
or
dec
inc
adc
mov
outsl
inc
cmp
mov
fwait
pop
mov
cmp
in
lock
lahf
les
lods
insb
popf
icebp
and
repz
sub
mov
shl
jb
ret
mov
pushaw
mov
testb
inc
sub
adc
sub
mov
adc
pushf
js
adc
jae
test
imul
push
push
int
sub
lahf
xor
mov
fdivrs
ds
cmp
sbb
gs
cmp
std
push
mov
cmp
jbe
sarl
stc
jb
in
jp
mov
or
repz
shrl
or
aam
aaa
out
nop
test
popl
andl
mov
xchg
rorb
mov
rorl
dec
cwtl
jecxz
or
gs
pushf
xor
push
fimull
lret
lea
mov
cmp
cmc
insl
sbb
mov
cwtl
inc
jae
mov
lret
xor
div
bound
les
movsl
or
lods
addr16
lock
xchg
dec
mov
aam
fldl
nop
rorb
popa
ja
repnz
hlt
cli
gs
stos
xchg
fwait
mov
mov
sbb
sar
iret
pop
je
fwait
inc
test
cmpsb
pusha
pop
popf
and
adcb
out
push
in
adc
dec
rcll
mov
xchg
rclb
push
push
cmp
push
push
mov
mov
outsb
add
dec
out
mov
add
andl
cmp
ds
push
mov
jg
aad
cld
stos
fnstcw
in
pop
test
and
stos
daa
sbb
repz
in
mov
mov
test
ja
lock
add
mov
sbb
enter
add
xchg
mov
cmpb
sti
cmp
sbb
cwtl
jae
and
pop
xchg
inc
mov
insl
or
rcll
dec
mov
xchg
popf
jae
int3
fnstenv
push
lret
repnz
clc
lods
jg
cld
xor
sbb
imul
popa
imul
mov
stos
mov
xor
cmpsb
jecxz
or
mov
fucomi
int3
out
mov
push
mov
into
and
addb
movsl
pop
inc
push
rcrl
ret
ret
sub
out
negb
or
sti
test
imul
pusha
mov
cld
sti
aam
mov
mov
or
cwtl
cmp
mov
rol
subb
xor
out
push
icebp
sbb
cmp
xchg
jmp
mov
ja
ret
cmp
push
pop
mov
leave
pop
xchg
fwait
loop
movsl
and
stos
out
mov
xchg
sub
and
stos
pushf
inc
leave
add
clc
pop
dec
pop
cmp
xor
jp
lods
mov
dec
popf
int3
jbe
cmp
fs
out
xlat
insb
lcall
filds
xchg
xor
xor
mov
std
xchg
cmpl
sbb
mov
xorb
lahf
pop
sub
lret
or
sbb
call
repnz
sarl
mov
in
mov
jl
mov
sub
adc
sub
jmp
push
jmp
jns
daa
xchg
mov
mov
shrb
cld
adcb
sub
and
push
popf
inc
cmp
stos
adc
mov
or
hlt
lret
push
xchg
add
shll
shrl
xor
aad
sti
inc
mov
shll
xor
lahf
dec
sbb
pop
jle
lds
adc
nop
cmc
xor
mov
xor
sub
rcrl
pusha
and
fidivrs
pop
mov
popa
mov
or
jo
push
addr16
cld
mov
xchg
push
pop
hlt
mov
aaa
xor
stos
aaa
mov
cmp
pop
es
ret
cld
xchg
push
sbb
mov
push
sbb
push
scas
ja
fdiv
iret
xchg
mov
add
mov
add
push
cmp
test
and
add
jg
mov
loope
daa
outsb
aam
ret
jge
lret
xchg
ja
jb
sahf
rcr
pop
cmovo
fiaddl
or
je
or
inc
jbe
cltd
jb
daa
cmc
aam
loopne
pop
jnp
cmc
scas
lcall
pop
aad
insb
push
shll
mov
push
stc
push
push
js
fcmovnb
out
jmp
mov
sbb
testl
aam
xor
mov
or
cwtl
call
cmp
pop
fstpt
push
pop
fisttpll
data16
jp
and
js
shlb
pop
cmpsl
jne
loope
jp
sbb
or
pop
cmp
pop
popa
mov
mov
pop
pop
sahf
fs
shll
adc
or
pop
bound
and
push
shrl
dec
add
cmpsl
add
jp
stc
pop
lea
xor
push
mov
pop
dec
std
pop
inc
add
pop
test
inc
lods
out
in
push
sahf
mov
xlat
je
push
dec
push
stos
sbb
pushf
dec
cmpsb
cltd
cs
shl
iret
pop
jnp
mov
jno
fsts
lods
call
data16
xor
cmp
cwtl
dec
pop
loope
xchg
out
add
mov
push
cwtl
adc
xor
loope
test
sbb
cmc
loopne
jmp
xchg
jmp
push
sub
jge
cli
test
push
xchg
je
xchg
stc
jle
pushl
jno
and
icebp
jns
xor
push
fisttpl
loope
repz
and
xlat
and
sub
dec
enter
inc
jl
push
dec
pushl
cmpsb
adc
jmp
or
pusha
inc
loope
loopne
lods
loopne
insl
movsl
imul
cmp
cs
popf
pushf
sub
test
jns
lret
andb
push
lods
sbb
stos
mov
mov
and
xchg
mov
xchg
aad
cltd
xor
outsl
lcall
sbb
call
mov
rcl
loopne
movsl
cmp
aaa
daa
adc
movsb
adc
adc
shll
fnstenv
fistpll
out
cmpsl
inc
fsubr
mov
xchg
jle
xchg
jae
cld
pop
adc
iret
sub
sarl
xchg
sti
int
lret
cmpsb
fbld
mov
push
cmc
mov
lea
xchg
mov
cs
insb
push
and
adc
rcrl
sarl
repz
dec
and
in
pop
dec
out
hlt
jne
scas
cmp
clc
xorl
jge
fisttps
adc
push
inc
stc
sbb
popf
xor
pop
adc
or
in
cmp
jp
push
mov
or
rorb
les
and
push
inc
mov
inc
add
enter
popf
jno
cmp
lods
cs
xchg
sbb
out
mov
cs
push
aas
scas
xor
adc
ret
add
adc
dec
or
mov
cmpl
cmp
in
ret
xchg
jmp
das
ret
sbb
xchg
lods
adc
divb
xlat
fstps
mov
mov
xchg
outsl
dec
rcr
minps
xlat
movsb
pop
lret
add
cmp
shll
lods
je
pop
cwtl
test
pop
xchg
jle
popf
mov
mov
dec
cmp
xor
cmp
jno
sub
xchg
xor
cmp
sub
cmp
daa
mov
pop
mov
fs
pop
and
mov
push
aad
int3
stos
loope
sub
stc
mov
or
pushf
incb
movsb
int3
mov
cmp
lret
mov
inc
cmpsl
xchg
xchg
jnp
mov
outsl
call
jge
xchg
clc
fildll
repnz
sub
jb
dec
dec
lds
mov
roll
jecxz
jno
xchg
add
rorl
mov
or
adc
mov
fadds
out
nop
sbb
cli
jae
xor
das
jb
loop
push
int3
daa
mov
add
or
aaa
adc
adcl
mov
in
jno
outsb
adc
adc
andb
cmp
sbb
jnp
aaa
sbbb
scas
sub
add
mov
xchg
mov
xchg
xor
xorb
scas
dec
push
mov
addb
sub
fs
sahf
xchg
int
cmp
inc
fs
xor
lret
arpl
pop
repz
mov
mov
dec
push
mov
scas
mov
inc
inc
cld
xlat
shrl
aas
mov
push
jmp
ss
cli
data16
test
mov
decb
adcl
or
shll
mov
xor
inc
in
xchg
cmpl
test
in
js
scas
ja
inc
fstpt
and
pop
loopne
adc
or
shlb
rclb
xchg
jae
insl
arpl
arpl
fwait
lret
int
int3
fldcw
bound
sbb
insl
stos
lcall
fists
and
nop
xchg
mov
int3
and
inc
mov
mov
sbb
add
ficomps
mov
lods
jne
outsl
xor
das
shl
test
sbb
adc
cli
fisubrs
in
pop
in
mov
jle
mov
push
xor
jno
or
push
or
and
cmp
mov
movl
sbb
inc
mov
push
aas
and
je
mov
and
in
sti
inc
scas
and
cwtl
xor
lods
dec
mov
mov
inc
jmp
iret
or
es
and
xor
add
mov
popf
mov
in
rorl
je
shrl
int
dec
dec
shrb
lret
arpl
mov
aas
or
cld
xor
test
fwait
rorb
lret
fidivs
add
and
pop
jne
mov
imul
insb
xor
andb
outsb
mov
and
loope
orb
push
lret
cmp
mov
out
ljmp
mov
arpl
mov
mov
fcomp
cmp
lds
xchg
xchg
lea
in
cmp
cmc
rclb
hlt
arpl
and
aas
aaa
out
sarb
int
int
push
sahf
jae
stc
mov
fdivrp
mov
scas
in
scas
pop
jmp
mov
arpl
or
notb
aad
and
mov
cmpb
sbb
xor
iret
fcoml
loop
jecxz
mov
xchg
push
imul
mov
jg
shlb
orb
rorb
add
push
mov
icebp
rcrl
roll
nop
rclb
xacquire
or
cmc
xchg
dec
ds
mov
and
je
mov
xor
jmp
pop
mov
iret
mov
ret
or
je
mov
dec
xchg
shl
lock
testl
dec
insl
adc
scas
jb
cwtl
pusha
and
push
aad
fdivrl
enter
fwait
add
ljmp
pop
lock
shrb
cs
lea
jecxz
sahf
sbb
decl
pop
cmc
adc
je
repz
aaa
pop
test
rcr
cli
test
stc
sub
mov
adc
jge
scas
int3
out
mov
mov
fwait
hlt
iret
adc
jmp
js
inc
lods
enter
jne
push
xor
push
lahf
sub
inc
add
mov
jae
mov
pop
aas
ss
mov
cltd
pop
ljmp
xor
sbb
idivl
xlat
sub
test
mov
insb
pop
addr16
pop
xchg
insl
lea
cmp
dec
pop
add
dec
push
mov
push
sbb
push
mov
jecxz
imul
inc
dec
push
sbb
add
jnp
fistps
aad
inc
popa
fildl
std
xor
mov
es
outsb
fiadds
push
int
push
fcoms
sbb
dec
das
dec
mov
cmp
dec
xor
arpl
mov
sub
mov
xor
testb
shrl
pusha
nop
divl
std
pusha
aaa
sahf
lret
leave
adc
ret
sbb
stos
mov
adc
imul
fstpl
pop
add
adc
mov
dec
roll
or
or
dec
sahf
inc
cmp
xchg
sub
sub
out
call
imul
cld
test
fdivs
jno
loope
push
mov
jl
adcl
jae
nop
imul
js
ds
push
push
loopne
int
test
jg
rorl
ret
iret
fistl
cmp
xchg
jle
dec
fmull
xor
lea
ja
xor
repz
es
sbb
pop
cmc
add
inc
xchg
cmp
adc
insb
js
in
cmpsl
mov
mov
lahf
jmp
outsb
and
aaa
xchg
sub
insb
movsl
add
sahf
stos
movsb
icebp
imul
shll
xor
shlb
push
cmp
pop
mov
sub
call
adc
shlb
ss
pop
subb
mov
bound
vmovss
jo
adc
inc
and
pop
pop
stc
mov
pusha
jg
sbb
or
loope
cmp
pushf
js
cmpsb
jne
fidivrs
pop
sbb
inc
sbb
mov
sbb
push
inc
sbb
test
mov
scas
sbb
mov
sub
sub
aas
xchg
fcomps
fnsave
test
xorl
sub
mulb
pop
decb
mov
data16
inc
test
cld
in
sbb
fadd
jecxz
out
adcl
jo
cmp
mov
xchg
ljmp
lds
mov
or
push
xorl
xor
mov
pop
scas
aas
pop
out
jne
inc
les
dec
pop
lods
cmp
dec
push
add
xchg
cmpl
in
pcmpgtw
ret
in
jge
cmp
hlt
xorl
xchg
addr16
sbb
into
sub
adc
rorl
pop
push
lock
cs
mov
jns
int3
popa
adc
adc
push
push
loope
jb
jae
mov
sbb
ljmp
sarl
sahf
pushf
fmul
jge
aam
ret
data16
mov
pop
ret
mov
int3
call
imul
jg
or
stc
fsts
dec
insb
sub
pop
addr16
sbb
jle
out
jge
cmp
js
icebp
leave
mov
cmp
sbbl
adc
sbb
xlat
rcl
dec
push
decb
clc
sub
out
lahf
stc
flds
jae
popa
pop
or
sbb
inc
jae
movsl
pop
cmp
mov
mov
pop
stos
pop
adc
jo
mov
mov
xor
lret
cwtl
subl
ret
mov
sbb
xchg
ss
mov
movsl
push
mov
fcomi
mov
popf
xchg
mov
pop
mov
movsb
push
lret
push
adc
jne
fimuls
jnp
mov
and
test
lods
push
fs
dec
addb
xor
addr16
ret
push
push
int3
daa
hlt
lahf
sbb
cmp
je
cmpsl
mov
lock
xlat
insl
mov
mov
fisttpl
aas
std
mov
mov
sbb
gs
add
pop
clc
mov
adc
and
imul
mov
shlb
das
or
or
jle
icebp
inc
add
fcoml
push
and
stc
enter
cld
pop
sub
insb
cli
xor
cmp
and
mov
test
imul
sub
sbb
xchg
mov
mov
inc
xchg
dec
lcall
rol
mov
push
mov
sahf
dec
push
lret
ds
pop
sbb
push
or
adc
lret
popa
dec
nop
and
int
dec
adc
cli
das
lods
sub
out
repnz
sbb
mov
test
pop
or
push
push
repnz
dec
jb
pop
dec
sbb
lock
mov
jecxz
mov
in
insb
or
jmp
pop
mov
lea
add
pop
lcall
inc
insl
push
sub
daa
fstl
cli
cmp
inc
push
call
jmp
add
fistps
out
pushw
lods
in
push
hlt
xor
pop
xlat
adc
leave
aam
adc
xchg
decl
cwtl
stos
add
and
sub
or
push
mov
test
jae
or
lret
adcb
jge
call
in
stos
and
pavgw
js
pop
xchg
outsl
outsl
popl
xor
sahf
cli
and
inc
mov
incl
mov
xchg
or
add
test
lret
hlt
mov
or
out
inc
or
leave
repz
mov
adc
cmp
dec
fidivs
adc
inc
cmp
insl
int
xchg
adc
lea
int
shl
mov
xor
dec
jle
lret
outsl
push
pop
sub
aas
mov
das
xchg
jae
aam
dec
jno
mov
xchg
push
dec
js
shl
dec
sbb
adc
cmp
dec
les
pusha
andl
dec
int
mov
sbb
jae
add
dec
dec
sbb
mov
inc
cmp
addr16
mov
clc
xchg
loop
xor
fstpl
mov
in
dec
adc
insl
cltd
sbb
cld
fisubl
insb
pop
ds
cli
jae
dec
fwait
dec
xorl
mov
push
dec
add
pop
mov
fst
loop
add
popl
jmp
sbb
scas
mov
mov
inc
push
mov
ds
fdivrs
inc
push
les
sbb
push
mov
jo
pop
pop
arpl
xchg
aas
push
lret
imul
pop
jg
jb
push
or
rcrl
das
adc
push
stos
jge
inc
shlb
mov
jae
fwait
add
es
movsl
or
popf
fsincos
mov
sub
cmc
adc
orb
xchg
add
add
push
lcall
mov
pop
sbb
or
or
lcall
mov
hlt
outsb
inc
call
repz
sti
sbb
inc
insb
jne
push
xor
fmulp
dec
ret
pop
stos
ficoml
push
aaa
push
mov
bt
popa
cli
sub
mov
call
std
lea
mov
and
out
js
scas
cmpsb
mov
push
fnstcw
shl
aas
iret
andb
pop
popa
lock
aaa
fdivrs
stc
pop
outsl
ljmp
xlat
mov
cwtl
xor
dec
dec
jns
hlt
xor
ficoml
ja
mov
outsl
fsubrs
cmpsb
jno
jmp
imul
mov
pop
movsl
push
test
das
nop
stos
mov
jle
scas
lods
je
xor
das
js
mov
adc
sahf
push
and
icebp
fwait
adc
aaa
cmp
sahf
push
bound
in
test
std
scas
ljmp
cld
jmp
push
mov
pop
jl
dec
shll
es
pop
push
add
sub
nop
sbb
scas
imul
push
pop
aaa
mov
jecxz
mov
add
or
pop
in
sub
repz
in
cmp
mov
mov
out
push
stos
js
loop
repz
adc
cmp
inc
pop
pop
clc
xor
push
insl
inc
test
push
fldenv
cli
adc
lahf
cmp
or
push
push
xor
sub
push
aad
aas
pop
nopl
stc
cmp
inc
sbb
shll
cmpsl
je
dec
imul
inc
xchg
push
xchg
loope
mov
aas
sub
dec
ret
loopne
push
inc
xor
hlt
int3
fidivrl
xchg
cmp
insl
inc
jl
pop
push
iret
pusha
mov
xchg
data16
cmpsl
mov
push
or
xchg
fistpll
pop
fmull
dec
pop
popf
enter
insl
mov
sub
jl
test
mov
iret
sub
push
jp
pop
sub
mov
inc
xchg
mov
mov
adc
outsb
lret
jecxz
sub
test
pop
ja
es
aam
mov
inc
pop
int
xor
fstpt
popa
sbb
fdivrs
loopne
ficompl
adc
xor
jmp
dec
xchg
pop
cmp
xchg
xchg
arpl
neg
add
out
cltd
inc
addr16
ss
test
cmp
mov
pop
or
popf
jbe
rep
inc
adc
or
out
sub
or
setge
xchg
pusha
mov
sub
scas
dec
and
and
lahf
xchg
dec
je
hlt
pop
sub
nop
dec
iret
xlat
sbb
sbb
mov
movsb
xorl
adc
adc
mov
out
push
ss
sub
jbe
orb
pop
loop
mov
cmc
cmp
pop
inc
test
cwtl
pop
inc
adc
stc
movsb
mov
push
not
fwait
enter
xchg
sub
jle
push
dec
mov
bound
lods
or
inc
mov
mov
add
add
loop
mov
mov
mov
sbb
adc
cs
sahf
dec
mov
cltd
int3
mov
repnz
je
adc
dec
pop
mov
scas
adc
dec
and
enter
arpl
xchg
pop
pop
dec
loopne
cli
jge
push
pop
cmp
arpl
pop
inc
std
dec
fwait
ja
xchg
aad
xchg
les
or
fiaddl
das
xor
mov
lcall
inc
push
stc
lret
arpl
repz
lcall
jb
add
call
push
cmp
stc
adc
lods
sub
aas
loopne
jg
insb
jbe
jecxz
jbe
mov
push
aam
mov
add
stc
aad
enter
ljmp
je
lods
scas
xor
shll
xchg
pop
rcll
call
push
push
stc
popa
add
push
cmp
fdivrl
adc
mov
adc
jns
push
stos
pop
xor
xlat
pop
push
lods
jp
mov
fstp
outsb
test
jg
outsl
xchg
mov
outsl
jne
sub
adc
testl
and
mov
enter
sub
jo
fidivs
aas
xchg
in
mov
repz
mov
insb
mov
out
mov
adc
ljmp
add
adc
aam
lea
push
and
and
mov
mov
fcomp
call
dec
stos
sbb
push
cmp
mov
int
mov
cmp
in
add
jae
adc
adc
or
insb
adc
lret
mov
mov
push
xchg
push
fistpl
loopne
pushf
xchg
aam
fs
sbb
dec
fcompl
xchg
fs
stos
xchg
jle
push
sub
xchg
in
xlat
inc
xchg
or
sbb
sbb
adcl
pop
ret
scas
ficomps
rcrl
jecxz
push
sbb
push
xchg
push
imul
push
jmp
pop
out
jg
jmp
inc
loopne
movsl
jle
addr16
popf
mov
into
sbb
jnp
and
cs
pop
xchg
outsl
outsb
push
sub
hlt
adc
je
in
xchg
addr16
xchg
sbb
bound
mov
repz
or
movl
jo
add
pop
adc
jne
jbe
mov
into
xor
or
icebp
imul
cmpb
adc
arpl
or
in
lock
pop
or
jge
int3
sbb
gs
adc
stos
mov
fimuls
rcll
xor
jne
imul
ja
xchg
sbb
push
pop
xchg
imul
outsl
nop
dec
shl
lock
jmp
gs
or
mov
fsubr
pop
jge
scas
aaa
mov
fdivr
push
stos
add
xlat
jmp
adc
lcall
sub
jnp
sbb
sbb
add
push
int
push
push
outsl
jns
cmp
mov
cmpsb
call
dec
test
mov
mov
adc
push
ficoml
xchg
cltd
popf
mov
mov
pop
std
aad
insb
mov
pop
data16
cwtl
popa
in
xchg
inc
ficoml
xor
mov
xchg
push
mov
xor
lods
add
es
mov
cmp
xor
or
pusha
bound
shll
imul
fdivrl
aas
mov
jno
movsl
pop
mov
pop
jo
cmc
fldt
mov
test
loop
into
out
scas
popf
sbb
pxor
and
mov
cmc
xchg
test
fstpt
popf
or
mov
push
arpl
inc
or
jmp
mov
mov
cmp
and
mov
data16
rorb
push
test
cmp
fnstsw
inc
rorl
inc
gs
push
popf
inc
in
shlb
sbb
clc
pop
mov
aad
arpl
and
and
pop
push
rol
lcall
pushf
mov
adc
sub
sbb
out
or
lea
fmull
aaa
loopne
xorb
movsb
sti
in
or
clc
lahf
cmpsb
adcb
sahf
or
mov
movq
dec
jmp
push
sahf
out
mov
jo
xchg
loop
xchg
das
lods
mov
int3
fcomi
xchg
xor
push
pop
xor
cmp
cmpsl
ljmp
es
in
mov
mov
jns
mov
mov
test
xor
hlt
loopne
pop
mov
int3
mov
ret
out
add
hlt
jp
push
or
pop
xchg
add
orb
mov
push
mov
daa
xor
or
mov
push
jecxz
imul
in
jg
fcmovu
mov
mov
lahf
add
cs
rcrl
ds
jle
lahf
sub
jl
addr16
mov
inc
bound
dec
subl
mov
push
stos
dec
mov
movsl
mov
mov
leave
gs
sahf
pop
js
adc
cmp
sbb
lret
insb
mov
sbb
js
arpl
fldcw
test
jb
stc
mov
repnz
pushf
sbb
lret
jnp
xor
xchg
push
jb
out
sbb
mov
xchg
mov
jg
mov
mov
mov
mov
cld
inc
sbbl
cmpsl
push
pop
xor
sub
pusha
pop
popf
pop
cmp
pusha
clc
mov
or
lock
gs
loopne
xor
mov
lret
jg
iret
cmpsl
inc
and
shll
enter
incb
adc
jae
pop
jmp
ds
pop
inc
aam
es
mov
add
mov
mov
leave
mov
inc
mov
jmp
jae
outsb
sub
shrl
test
jle
cld
adc
mov
inc
sub
aad
data16
xor
jns
pusha
mov
dec
rcl
or
jne
xor
dec
jmp
adc
stos
leave
daa
jmp
pop
outsl
test
dec
cmpsb
sbb
mov
xchg
movsl
push
sti
icebp
fstl
outsb
jnp
jl
and
and
jbe
add
ss
int
mov
pop
outsl
sub
sbb
inc
dec
into
adc
mov
pushf
divb
hlt
jle
jne
fwait
inc
cld
outsl
dec
sub
mov
pop
cld
push
clc
pop
test
repz
add
jg
mov
fs
or
add
adc
mov
stc
mov
cwtl
adc
cmp
xor
outsl
sub
in
cmpsb
cmpsl
adc
xchg
jbe
lock
fsubrp
mov
sub
pop
add
mov
ss
sub
add
sbb
inc
xor
mov
jge
mov
lret
arpl
xor
push
jge
pop
shrb
pop
and
sub
loop
cli
out
push
add
xchg
fwait
mov
lret
loopne
pop
mov
andl
sbb
mov
mov
fsubl
cwtl
sbb
subl
xor
cmpsb
and
jg
repz
mov
je
roll
das
mov
jl
ror
xor
inc
fcompl
push
inc
int
sub
mov
pop
imul
push
jecxz
mov
int
stc
jp
jo
push
enter
insl
insl
ja
cs
imul
js
subl
adc
dec
orl
jbe
jmp
cmp
int3
adc
nop
dec
in
fwait
mov
xchg
lods
push
nop
mov
mov
mov
ds
jb
cmp
hlt
iret
mov
push
lcall
pop
cmc
cmpsb
testb
in
test
decl
jle,pn
mov
lds
xorb
clc
xlat
mov
in
inc
pop
jg
jb
lahf
mov
mov
push
jae
mov
xor
sbb
leave
or
sub
inc
rorb
inc
sub
out
popf
int
scas
clc
adcl
dec
das
mov
std
icebp
sbb
fisttpll
push
mov
ljmp
fists
sub
sbb
fisubrl
loop
push
jbe
mov
daa
nop
sbb
add
bound
pop
cmpps
dec
iret
lret
jp
test
imul
push
add
ljmp
push
inc
push
inc
add
xor
mov
std
add
addb
mov
and
es
imul
iret
lret
jnp
leave
jb
fnstenv
fwait
in
mov
cli
and
inc
pminub
std
push
xchg
ficomps
lods
xor
push
cmpb
xor
loopne
fwait
mov
pop
daa
push
push
push
rclb
sbb
push
sub
adc
mov
shl
pop
ds
out
rcll
add
fwait
fs
sar
fpatan
scas
xchg
mov
xor
sahf
push
cmpl
scas
cmc
sarl
fnsave
sbb
arpl
outsb
jae
push
dec
rcrb
pop
push
subl
fwait
enter
jge
jmp
lock
arpl
xor
shll
inc
xorl
xchg
mov
and
xchg
push
loopne
fwait
jle
adc
inc
hlt
add
or
mov
push
push
mov
jno
and
push
scas
into
dec
dec
lods
out
mov
or
push
out
or
xchg
sub
loope
mov
lds
shll
nop
lahf
addb
pushf
and
mov
xchg
stos
push
sub
sbbl
push
repnz
lcall
lahf
stos
in
sbb
in
arpl
jmp
mov
mov
or
je
or
fstps
adc
js
inc
add
sbb
xor
mov
dec
fisubrl
das
pusha
push
push
ds
mov
xlat
lock
lds
adc
jecxz
mov
mov
std
push
add
push
jnp
out
xor
lds
pop
xor
push
in
adc
mov
cmp
ja
jp
adc
or
mov
iret
stos
test
dec
dec
xorl
mov
xchg
xchg
cmp
jbe
int
loope
xor
push
dec
add
lods
fwait
cmp
xchg
cld
cmp
cmp
push
adc
fists
je
mov
xchg
or
push
push
dec
sbb
in
lea
cs
mov
xchg
loopne
add
dec
popf
and
imul
sbb
mov
mov
or
jl
sbb
cltd
fsts
out
jp
into
ja
fstps
sub
jns
xor
push
shlb
sbb
mov
pop
and
jne
in
sub
or
dec
orb
das
cmpsb
push
pop
xchg
mov
mov
bound
sub
ret
lods
imul
cmpsl
jae
lods
stos
push
pop
push
mov
push
cmp
das
lahf
ret
inc
in
sub
jecxz
stos
pop
out
and
cwtl
inc
scas
adc
add
jb
scas
sbb
clc
or
or
cmp
pop
push
mov
iret
mov
dec
fisttps
xchg
ds
aad
mov
inc
rcrl
jns
mov
xchg
add
jae
out
insl
gs
imulb
lock
mov
mov
or
lds
std
lret
subl
mov
add
in
pop
xor
jge
outsb
push
shl
add
in
mov
pop
cs
and
rclb
sahf
test
adc
lcall
cmovno
loop
xchg
mov
fisttpll
inc
add
and
movsb
mov
xchg
add
inc
outsl
pop
sbbl
stos
and
sti
in
mov
insb
jle
insl
adc
cli
inc
andb
scas
pop
in
js
add
sbb
pop
mov
jae
adc
mov
lds
iret
adc
inc
movsl
fwait
rcrb
scas
pop
pusha
mov
scas
in
sar
jg
xchg
cld
jnp
sub
sub
addr16
mov
mov
and
fs
dec
or
gs
lds
in
push
insb
pop
mov
test
jecxz
loop
pop
inc
sti
add
repz
inc
stos
or
push
out
xchg
or
aam
and
mov
addr16
mov
and
mov
jmp
or
jbe
xchg
cltd
and
loope
add
imul
cmp
mov
sbb
xchg
insl
filds
mov
push
cmpl
fs
sbb
out
std
cli
fs
or
cmp
lahf
ret
adc
inc
xor
in
andb
dec
pop
mov
es
pop
adcl
pusha
xlat
fidivrl
add
rolb
addr16
sub
scas
fmuls
ljmp
rcll
adc
jbe
loop
pop
scas
and
or
cmp
fildll
mov
sahf
pop
movl
pop
loope
add
out
xchg
cs
and
leave
stos
cs
push
xchg
pushf
out
fcompl
movsb
nop
int
mov
icebp
dec
add
or
fsubrl
cmp
or
push
xchg
es
int
enter
lods
sub
push
cmp
pop
mov
loopne
mov
ret
call
fidivrs
jnp
xor
fadd
or
aas
popf
jo
fisttpl
in
push
adc
lods
fists
xor
push
mov
shll
cltd
pop
daa
xorb
mull
jne,pt
imul
pop
xchg
aam
or
hlt
or
xchg
aaa
xchg
sub
pop
daa
imul
movsb
cmp
rorl
lock
lods
cmp
ds
mov
in
call
les
xchg
nop
xchg
inc
fs
jns
sub
jl
leave
in
out
inc
and
int
je
scas
or
pop
lods
pop
das
outsb
loop
movsl
shll
mov
inc
icebp
cmp
xchg
lods
ds
push
mov
pop
mov
and
std
popf
inc
inc
dec
push
xchg
mov
and
pop
fdivrs
sub
sub
ss
aad
lret
dec
rclb
xor
or
rclb
shr
push
cld
fsts
daa
sub
cmp
dec
jne
mov
notl
mov
add
ljmp
arpl
ds
shrb
push
jns
mov
mov
jg
push
scas
dec
fs
xchg
push
jmp
dec
jp
das
popw
pop
mov
cmp
les
jp,pn
pop
jb
jmp
lds
aam
inc
xor
push
lahf
mov
les
adc
mov
cmpsl
shrb
xor
jle
fdivs
ss
cs
mov
xchg
jo
loopne
lock
cmp
shlb
int3
and
xchg
xchg
int3
and
jns
fisttpl
fstpt
mov
mov
movsl
push
loope
lods
cmc
mov
adc
lcall
push
sbb
dec
pop
pop
mov
icebp
out
sarb
cmpl
shr
movsl
mov
shl
ror
add
mov
lcall
lock
xor
jnp
jo
pop
cmc
and
int3
mov
out
ds
cltd
mov
ror
inc
mov
jge
adc
fisubs
cmp
mov
mov
nop
jge
cmp
sahf
hlt
insl
xchg
inc
pop
repz
frstor
add
cwtl
xchg
cmp
mov
sub
xchg
sti
push
lock
mov
je
mov
add
nop
cmpl
pushf
or
mov
in
insl
push
xchg
loop
in
stos
push
mov
push
jg
pop
sub
stc
js
or
dec
mov
sbb
dec
or
dec
cmpsl
jb
pop
pop
icebp
or
jb
xlat
sub
ficomps
cld
sub
pop
xor
push
sbb
adc
pop
jp
jg
adc
xor
fdivrs
fdivl
xchg
jge
cmp
loopne
notb
xor
ss
xchg
stc
incb
repnz
jo
fsubr
loope
or
jge
test
or
xchg
push
push
xchg
ss
cld
pop
fidivrl
push
bound
ds
rclb
fidivl
pause
popa
cmpsb
push
pop
repz
andl
mov
jo
sti
and
insl
cmp
add
stc
adc
sbb
mov
adc
test
push
test
fbld
rcr
xchg
test
xchg
repnz
pusha
push
testl
cmp
popf
jns
or
add
add
aaa
hlt
popa
je
sub
ja
or
gs
pop
js
mov
xchg
rcr
in
clc
insb
sbb
gs
mov
sub
add
outsb
sahf
jno
pop
pop
out
iret
das
ja
insl
xchg
or
xorl
imul
scas
jne
mov
mov
add
test
mov
loopne
jmp
dec
arpl
jl
adc
shlb
arpl
and
movsb
xorl
inc
cmpl
in
aad
lret
and
out
lock
sbb
lcall
int3
mov
leave
lcall
xchg
xchg
cmp
lods
jge
pop
push
jne
addr16
in
inc
pop
xlat
into
lahf
cmp
push
mov
notl
test
int
pop
icebp
mov
out
sbb
cmp
scas
out
dec
imull
hlt
inc
cmpsl
sub
mov
or
inc
arpl
cmp
dec
jmp
fists
jnp
out
scas
je
pop
cmp
movsb
mov
js
pop
push
or
mov
ss
leave
pop
fadd
mov
sub
adc
stos
in
clc
lcall
pop
insb
mov
int3
jmp
loopne
xor
cmp
pushf
sub
pop
mov
lahf
jp
jo
mov
mov
cmp
mov
sub
xchg
mov
mov
or
add
adc
push
out
push
cmc
pop
xor
xchg
sti
call
pop
push
icebp
in
out
sbb
jo
adcb
mov
scas
ffree
inc
push
sub
pop
jae
push
xchg
xchg
or
sbb
mov
adc
pop
into
mov
sbb
cmp
xchg
cmp
arpl
arpl
fdiv
jl
jp
mov
sub
out
pop
cmp
aaa
rcl
pop
push
adc
or
sbbb
adc
inc
divl
lea
jle
mov
dec
add
cmp
cmpsb
rcll
cltd
mov
push
inc
ret
jbe
pushf
fcompl
pop
mov
cltd
jecxz
jnp
loopne
inc
mov
jne
sub
and
aam
loope,pt
mov
ret
out
cs
unpcklps
idivb
shlb
push
pusha
jg
inc
je
sub
push
push
and
in
or
add
ljmp
out
inc
lds
xchg
jp
push
ds
jmp
add
pop
mov
push
push
mov
pusha
jmp
mov
ljmp
shl
jb
pop
push
iret
push
in
xchg
mov
cmpsl
push
dec
lcall
test
push
cs
sbb
jne
ljmp
dec
idivb
lahf
xlat
das
fldcw
faddl
add
inc
std
cwtl
dec
std
mov
mov
sbb
sbb
clc
cli
sahf
jno
sbb
es
sub
shl
sahf
int3
xchg
jnp
and
loop
pop
enter
mov
fisubrs
jmp
lret
sbb
mov
in
ficomps
aaa
add
pushf
xlat
inc
lahf
jp
movsb
fstl
jo
or
push
add
testb
add
pop
pop
sub
std
jo
dec
dec
imul
sbb
adc
data16
std
jb
fs
dec
sbb
repnz
mov
mov
out
jl
cmpsl
mov
dec
pop
and
outsl
cld
mov
push
lock
cmp
ljmp
sub
or
sbb
pop
and
pop
testb
dec
push
or
and
repnz
fstpl
jge
jp
xchg
mov
mov
jb
xor
stos
bound
adc
das
adc
test
jne
fsubrs
and
and
stc
fisubl
cwtl
or
mov
xor
addr16
mov
push
or
mov
add
iret
test
xchg
mov
mov
insl
mov
fwait
outsl
cmp
cmp
push
add
test
mov
test
xchg
mov
imul
sub
inc
pop
rcl
mov
outsb
out
imul
test
je
adc
in
mov
push
adc
int
pushf
les
jl
addr16
popa
mov
outsl
xor
in
jg
xchg
adc
push
ficomps
mov
xor
andb
dec
shr
jge
sub
lods
mov
std
call
divl
push
add
sbb
pusha
shrb
adc
xchg
aad
pushf
and
orb
xchg
or
pop
push
loope
cs
loop
sub
jecxz
in
jb
mov
sbb
jge
jg
mov
stos
daa
into
fwait
icebp
jbe
sbb
mov
jns
mov
std
sbbl
outsb
xor
lahf
and
iret
mov
or
mov
bound
or
push
mov
ret
insb
pushf
rep
push
mov
pop
inc
jbe
movsb
sbb
inc
sub
std
sbb
insb
orb
and
jnp
lcall
clc
pop
xor
ljmp
addr16
xor
pslld
cmp
orl
inc
rcrl
push
movsl
sbb
dec
mov
or
push
cmp
inc
sbb
push
insb
xchg
lods
sbb
or
shlb
mov
les
jb
enter
mov
or
jae
push
lahf
std
stos
inc
aad
movsb
loopnew
or
orb
enter
cmp
aad
push
xchg
mov
sbb
and
cmpsl
mov
jmp
pushf
pop
lret
dec
loope
jns
jecxz
data16
jg
and
sub
and
or
lds
cmpsl
pop
out
imul
inc
leave
scas
sub
outsb
and
shl
notl
iret
inc
push
and
push
xor
mov
arpl
hlt
leave
mov
das
inc
jne
addl
cmp
inc
cltd
mov
or
jns
add
ret
lea
jmp
addl
mov
int
sbb
pop
movl
xchg
sahf
out
jl
mov
movsl
jae
rcrl
pop
add
jae
pop
rcrb
out
pop
inc
scas
inc
fidivrl
lea
inc
insl
jb
mov
push
adc
pop
mov
or
fpatan
mov
cmpsl
cwtl
inc
dec
cltd
movsb
je
fisubrs
push
inc
jnp
mov
stos
mov
pop
fldenv
jno
mov
fistpll
and
pop
in
and
pop
nop
and
fmul
push
lcall
dec
push
lods
or
push
inc
pop
test
je
fucomip
add
jae
xor
inc
les
cmpsb
adc
ds
dec
jnp
xchg
stc
popa
jecxz
jl
jne
fcoms
stos
cs
jmp
insb
xor
mov
xchg
jne
xor
aam
push
sbb
jno
mov
mov
sbb
in
pusha
fimuls
in
push
mov
push
and
mov
pop
cs
shlb
xorl
inc
pop
sub
xchg
push
leave
jg
cmpsb
clc
shrb
pop
mov
sbb
jne
lcall
mov
sbb
dec
dec
imul
push
xor
outsl
call
in
mov
xlat
dec
jmp
andl
push
sbb
dec
xchg
das
fldl
syscall
out
test
cmp
loop
shlb
rcrb
sub
xchg
shlb
ret
xor
outsl
ss
imul
ss
cmp
sub
push
cmc
push
push
mov
in
fwait
sub
sub
mov
in
ljmp
shlb
fsubrp
cmpsl
add
xor
xchg
or
inc
int
imul
addr16
cmp
pop
popf
roll
scas
iret
pop
pop
insb
adc
push
cmp
pop
dec
loope
and
xchg
pop
in
data16
sahf
int
and
lods
rcrl
and
pop
mul
fs
pop
in
push
sbb
loopne
mov
inc
stc
outsl
ret
xchg
daa
aas
and
dec
push
insl
inc
and
icebp
pop
loop
push
cmpsb
dec
movsl
lea
rolb
mov
cmp
mov
out
data16
or
and
jle
mov
and
insb
jb
loop
roll
add
sub
rcrl
jbe
ret
push
test
xor
ja
jb
jecxz
cmp
test
sbb
aam
rclb
pop
mov
xor
hlt
xor
rclb
pop
pop
jbe
pop
mov
lds
push
or
sub
dec
imul
jno
add
stos
inc
lret
jo
popa
cmp
lcall
pop
roll
out
cmp
dec
pop
movsl
or
sbb
fists
fs
pop
les
sbb
sub
add
pusha
nop
dec
outsb
inc
inc
incl
lds
std
popf
inc
fldcw
sbb
xor
js
and
shlb
outsb
das
sbb
rcr
mov
orb
pop
sub
les
repnz
lret
stos
lret
fdivrp
shlb
cli
or
push
mov
inc
flds
add
sub
cltd
mov
jg
add
xor
sbb
add
mov
mov
movsb
dec
mov
jnp
push
daa
and
js
enter
sub
and
push
and
outsl
pushf
repnz
mov
in
in
aas
sbb
pop
xchg
sub
in
pop
sbb
push
add
hlt
xacquire
mov
and
pusha
and
lock
cltd
and
ret
mov
aam
repnz
in
lods
movsl
or
aaa
adc
sbbb
sub
mov
mov
jge
and
add
or
or
popa
stos
mov
push
das
pop
outsb
sbb
out
jg
enter
sbb
cmc
cmp
rep
fnstenv
inc
pop
popa
in
xchg
fcompl
into
mov
aaa
sbb
loope
add
jo
sub
and
repz
cmp
dec
push
mov
mov
xchg
push
push
repnz
ret
insl
push
lcall
fs
or
in
or
jge
fs
pop
or
mov
fadds
mov
xchg
mov
xchg
adc
jne
js
xlat
push
and
ret
mov
shrb
sbb
pop
das
dec
sbb
or
pop
ret
pusha
sub
iret
pop
push
imul
and
in
push
ret
xchg
mov
push
mov
decl
cmp
cmp
cli
fnstenv
movsl
sub
mov
xchg
and
add
jnp
andb
mov
push
xchg
mov
xor
jmp
mov
or
mov
xor
stc
mov
xor
lahf
push
sub
jmp
int3
mov
sub
js
movsl
jl
push
fstps
out
test
sub
push
push
or
in
dec
push
mov
arpl
xchg
pop
cmp
and
xchg
add
mov
out
gs
cltd
mull
icebp
sub
lret
fs
call
pop
adc
push
ds
inc
je
cmp
inc
std
sahf
and
aam
repnz
test
test
in
fmull
jb
adcl
sub
fistl
xchg
sahf
push
pop
xchg
mov
in
in
pop
sub
fstp
push
stc
scas
out
outsb
mov
fisttps
data16
add
mov
adc
inc
inc
out
push
push
pop
add
jo
loope
sbb
repz
xchg
mov
sub
mov
lret
xchg
xor
js
jmp
ret
cs
mov
xchg
scas
dec
cmpsb
jno
gs
lret
sbb
mov
cmc
inc
add
push
imul
xor
add
movsb
xchg
jecxz
or
insl
fisttpll
push
outsb
mov
enter
ret
mov
dec
lds
outsb
dec
push
jmp
mov
sbb
jp
jmp
lcall
leave
pusha
lret
cmp
pop
outsb
lret
out
scas
jmp
jmp
cltd
inc
add
push
mov
push
sbb
inc
cmp
imul
add
lods
pop
jns
sbb
and
mov
xor
popf
lds
test
sub
xchg
popa
out
repnz
pop
push
jge
or
mov
push
sub
push
sub
or
inc
stos
xor
movsl
jecxz
fucompp
xor
es
sub
cmp
jecxz
out
das
fld
and
or
mov
sbb
jp
outsl
fstps
jb
popa
jbe
dec
arpl
test
mov
sbb
shr
arpl
rolb
lret
cmpsl
pusha
pop
das
imul
fistps
or
xchg
mov
and
mov
jge
out
push
jl
xchg
mov
cmp
es
ret
mov
outsl
lahf
pop
lods
icebp
call
pop
cmp
shrl
dec
out
lea
cli
ja
mov
pop
sahf
sbbl
mov
cld
aaa
pop
sub
pop
mov
in
popw
inc
inc
loopne
or
ljmp
cmp
inc
push
lret
adc
ja
lock
pop
dec
sbb
test
test
mov
gs
fcomp
imul
jo
repz
jb
daa
stos
mov
xchg
in
idivl
call
xlat
push
mov
xor
adc
stos
xchg
dec
add
mov
pop
and
mov
lock
cmp
addr16
inc
cmp
pop
mov
out
push
fdivrs
push
cmp
lret
add
subl
pop
ja
leave
in
out
push
xor
xor
scas
jl
inc
rorl
arpl
push
into
mov
das
test
jne
shlb
lret
push
inc
xor
dec
popf
xor
push
into
lods
les
faddp
push
ret
adc
div
jne
lret
loop
lds
xor
sbb
test
jbe
xor
push
fisubrs
push
sub
mov
xchg
push
mov
inc
data16
jo
es
jbe
xor
loop,pn
mov
sbb
cmp
aam
in
pop
mov
arpl
cs
mov
sbb
popf
je
and
xor
dec
push
inc
jg
outsb
loop
mov
imul
hlt
pop
ficompl
xor
bound
daa
xorl
aad
xchg
inc
aas
enter
jns
popa
mov
movsb
addr16
clc
arpl
test
cmpsl
pop
xor
rorl
fsubrl
mov
int3
aaa
int3
mov
mov
lock
in
sahf
les
in
push
cli
aad
jle
dec
xchg
and
add
xchg
movsb
ja
jmp
insl
mov
jne
xchg
and
pop
jmp
scas
or
fstl
cmpsl
xchg
aas
jg
iret
or
addr16
iret
ret
test
lods
mov
or
inc
pop
xchg
sarb
scas
addl
orl
fldenv
mov
jl
mov
hlt
loope
decl
mov
mov
ja,pt
jmp
lcall
jge
aaa
scas
imul
cmp
lods
negb
fucom
mov
cmp
cmp
jle
movsb
fdivs
sarb
xor
adc
imul
pop
bnd
or
or
mov
mov
push
sub
inc
and
mov
pop
push
lret
cli
xchg
push
cmp
iret
push
gs
lea
cmp
cmp
out
jne
into
shr
icebp
stos
push
inc
dec
mov
or
sub
cmp
cmp
dec
outsl
pop
inc
js
xor
and
arpl
int
adc
xchg
jae
icebp
pop
jmp
fdivl
es
bound
loopne
loope
std
push
xor
iret
cmp
fwait
out
jns
and
pop
mov
outsl
mov
dec
dec
cmp
and
test
inc
rolb
adc
pop
dec
and
jae
out
xchg
sub
rcll
pop
push
js
xchg
pop
lea
push
cld
js
popa
add
daa
and
push
dec
dec
addr16
fisubl
fdiv
jo
lock
js
sub
push
lcall
arpl
mov
inc
shlb
jp
aas
xchg
mov
cmp
adc
sub
dec
fiaddl
xchg
jecxz
lods
mov
sub
add
fmulp
xchg
mull
fdivrl
push
aaa
sti
shlb
xchg
jno
mov
xor
fimull
imul
jbe
or
mov
push
inc
push
int
jecxz
movsl
cltd
movsb
jbe
cmp
imul
lcall
daa
push
push
fidivrl
jle
stos
pop
lahf
ds
fs
fwait
xchg
imul
sub
call
adc
movsb
sbb
icebp
jp
es
dec
or
pushf
or
cld
stc
jnp
jle
dec
push
push
je
inc
fstpt
out
ret
add
outsb
data16
call
rorl
fs
nop
jo
mov
out
aam
mov
jl
mov
inc
jb
sub
mov
or
mov
xchg
mov
jne
mov
mov
dec
mov
ja
xor
flds
imul
fs
into
lret
aam
movsb
mov
pop
out
popa
xchg
add
xorb
fistl
inc
subb
jmp
popf
sti
and
xlat
xor
dec
add
cmovge
arpl
dec
dec
jns
mov
mov
inc
scas
loope
fstpt
daa
xchg
cltd
jle
cmpsl
and
loop
push
push
fisubs
push
in
js
pop
jo
popf
jp
sub
into
cmp
ret
push
xchg
mov
enter
dec
loope
pop
xchg
nop
cli
popf
flds
jnp
jecxz
lret
lret
repz
daa
mov
jmp
ss
inc
adc
insl
sbb
jo
push
jmp
lock
and
or
aaa
mov
or
int
gs
cmp
sub
push
or
leave
inc
push
mov
sbb
rcrb
add
jb
mov
fldpi
dec
sbb
ja
push
adc
aas
and
sub
orb
pushl
sbb
mov
faddl
push
lret
pop
inc
fisubrl
pop
cld
jg
je
dec
sub
mov
sub
push
repz
mov
xchg
bound
shll
pushf
pop
cli
xchg
jns
xchg
jp
mov
test
xchg
fdivl
pop
dec
jmp
add
ja
ret
mov
ss
jbe
xchg
iret
mov
mov
pop
inc
int3
mov
fxch
push
jle
and
pop
xchg
sbb
mov
sbb
out
sbb
xor
lods
idivb
es
push
ja
inc
adc
movsb
add
dec
xchg
sbbb
jp
clc
sarl
xor
add
pushf
jae
push
cmp
js
and
jecxz
aas
fnstenv
cmp
add
aad
push
loopnew
add
loopne
sub
rcll
push
js
push
ja
xor
mov
int3
repz
ret
scas
movl
push
aas
mov
ret
pop
das
cli
push
and
sub
xchg
cmp
mov
jo
or
call
leave
imul
jge
or
push
mov
jns
sub
test
or
and
fucomip
cltd
or
jo
dec
addr16
aas
adc
push
clc
pop
add
and
sub
sub
or
fdivrp
incl
cmpsb
pop
jecxz
pop
cld
and
iret
mov
mov
xchg
pop
adc
daa
cmpsl
mov
push
cmc
push
lods
sub
adc
xchg
rcll
iret
scas
jge
fsubr
mov
and
sub
push
test
movsb
lods
jne
add
fwait
iret
mov
sub
in
jecxz
xchg
jmp
cld
xchg
dec
push
out
fmull
in
insb
imul
int
sub
cmpsb
aaa
out
sub
aas
mov
or
inc
mov
sti
out
mov
jl
dec
jge
shl
lret
add
imul
mov
int3
dec
hlt
mov
mov
or
cli
mov
fwait
xor
pop
and
xor
ret
std
insl
seta
add
loopne
push
mov
pushl
shr
push
mov
mov
jge
sub
mov
pop
jo
inc
mov
scas
mov
mov
lods
mulb
sti
clc
add
mov
popa
sbb
into
aaa
ror
outsl
lods
fwait
mov
popf
mov
lods
sub
adc
add
add
mov
lock
mov
jge
xor
call
push
fsubs
add
xor
mov
cmp
jmp
ds
xor
and
hlt
les
cmp
jge
inc
dec
push
sbb
mov
push
sbb
sti
leave
push
dec
je
add
jo
into
xchg
and
aad
push
mov
jnp
mov
repnz
repz
jne
lahf
mov
lods
or
repz
xor
jb
jo
insb
fisubs
pop
push
cli
sub
push
or
dec
lds
push
mov
fiadds
jne
xchg
adcl
lds
je
cwtl
adc
add
bnd
and
fsts
push
and
and
xchg
mov
pop
cmpsl
cmp
pusha
dec
repnz
sub
xor
ds
mov
or
inc
mov
mov
rcr
jae
mov
insb
mov
pop
andb
stos
int
jo
leave
ret
imul
mov
push
xorb
imul
cmp
dec
dec
sub
jle
out
sbb
mov
jo
cld
dec
xchg
rcr
mov
mov
sbb
add
mov
andb
rcl
mov
xor
outsl
pop
sar
pop
mov
jecxz
insb
out
sarb
cmp
out
pop
add
xchg
jmp
stc
pop
xchg
xchg
xor
movsl
repnz
mov
leave
cli
push
or
mov
stos
cmp
iret
mov
imul
xchg
scas
add
xlat
xor
push
pop
mov
cmpsb
xorb
mov
ja
cld
aam
insb
aad
xchg
xor
or
popf
out
pop
adc
sub
mov
push
cmpsb
xchg
ret
stos
and
jbe
mov
inc
pop
jle
ss
aam
pop
sub
subb
test
out
jo
mov
cmpsl
push
int3
mov
stos
mov
jge
ja
add
sbb
lds
inc
js
sub
in
or
push
dec
add
dec
sti
imul
xchg
aam
mov
int
adc
out
xchg
mov
cmpsl
push
pop
scas
inc
int3
push
cld
mov
inc
jg
sub
ret
mov
das
shll
test
shrb
mov
fistpl
addr16
in
cltd
cli
rcr
movsl
into
inc
xchg
mov
fisubrs
inc
jb
das
jmp
in
incl
mov
insb
test
insl
shlb
fnstsw
inc
out
inc
add
shl
arpl
push
sub
dec
sub
into
add
mov
mull
icebp
or
mov
pop
dec
or
icebp
je
jae
jb
add
sti
test
lret
inc
notb
xchg
in
add
adc
xchg
xchg
jl
jo
mov
call
xor
pop
mov
cmc
gs
cmpsl
cmp
lahf
dec
fstpl
cwtl
fbstp
mov
jns
dec
xchg
lea
std
mov
xor
jl
cli
movsb
iret
je
inc
les
aaa
cwtl
xchg
loop
arpl
int3
cmp
mov
leave
adc
loope
pop
jg
pop
cmp
shl
mov
insb
dec
subb
movsb
pop
sahf
cmpsb
or
fistpl
sub
mov
and
jmp
push
xchg
lcall
cmp
leave
ret
pop
std
pop
jge
xchg
jecxz
fbld
inc
xlat
push
shlb
jae
cltd
out
dec
outsl
in
adc
sahf
and
push
add
sub
hlt
xchg
push
xchg
push
shld
or
dec
inc
ret
cld
xchg
aam
in
testl
imul
cmp
xchg
fimull
add
hlt
pop
mov
aam
or
insb
xchg
add
cwtl
mov
push
xor
push
imul
jbe
lret
out
test
jle
xlat
sbb
jl
fcoms
mov
das
cltd
or
or
inc
add
jb
mov
inc
outsl
int
push
cmp
arpl
mov
fmuls
push
jns
mov
fsts
mov
fwait
jl
les
dec
es
mov
cs
pminsw
push
ljmp
xor
mov
ja
lea
mov
inc
cmp
in
dec
outsb
fldl
cmpsl
sub
dec
enter
das
cmc
inc
pop
scas
lcall
leave
clc
js
leave
sahf
out
jecxz
mov
andb
mov
mov
int
fscale
push
pop
mov
cmp
and
nop
xchg
int
pop
cmp
and
ljmp
scas
add
aaa
xchg
cmpsl
out
push
sub
xor
mov
bound
cmp
and
push
testl
lret
jb
pushf
add
fs
les
test
xchg
xchg
or
xor
xor
stc
jbe
mov
andb
ljmp
lret
out
sbb
lret
arpl
stos
jns
inc
jmp
jp
or
out
xchg
test
cld
adc
das
mov
jl
mov
and
lods
mov
pop
or
push
cmpsl
clc
and
popf
jno
lret
pop
inc
jmp
into
push
lea
cmp
add
xlat
jo
ds
stos
aam
adc
shrb
jno
jne
test
mov
push
fdivr
lock
sarb
and
stc
push
xor
push
inc
cmp
lock
test
and
loop
loope
cs
lret
popa
pop
push
xor
loope
jne
xor
push
cwtl
fmuls
push
pop
lods
sahf
sbb
in
mov
xorl
in
cli
ja
mov
fs
sub
mov
dec
jno
js
popa
test
adc
and
imul
add
shlb
mov
push
sub
mov
fsubrs
out
dec
or
sahf
mov
xor
xchg
insl
add
fisttpll
xor
fwait
orb
jmp
and
aad
xor
popf
add
mov
xchg
push
shrb
lock
mov
aas
aad
jnp
div
in
push
mov
lea
fwait
xor
int
inc
repz
jno
mov
lret
jnp
scas
mov
jne
add
imul
stos
mov
or
mov
lods
repz
sub
mov
adc
cmp
pop
popl
in
adc
mov
and
sub
in
sub
push
sub
jge
arpl
data16
add
inc
adc
push
dec
add
lock
icebp
mov
adc
inc
hlt
addb
inc
stc
mov
notb
sbb
jle
mov
pop
cld
ljmp
push
add
dec
cmc
repnz
push
push
ret
sti
testb
mov
mov
test
and
add
sti
out
sub
loopne
add
sbb
in
adc
adc
mov
adc
vpmaxsw
add
dec
and
es
cmp
sahf
imul
pop
dec
gs
je
xchg
pop
movsb
icebp
cld
ljmp
imul
out
in
xchg
pop
lods
mov
push
icebp
lea
push
outsl
push
pop
dec
and
mov
xlat
loopne
sbb
mov
or
dec
es
ret
push
sbb
insb
sahf
psubw
cmp
movsb
testb
fldcw
in
jnp
pop
sub
outsb
enter
pushaw
inc
and
push
and
sbb
ljmp
or
fs
jo
cmpsb
xor
mov
pop
out
mov
adc
jle
loope
hlt
mov
fdiv
sbb
or
and
inc
pop
movl
mov
xchg
xchg
push
fcmovu
push
mov
lock
in
mov
pop
xlat
loopne
xor
push
pop
xor
movsb
sub
cmp
add
and
ret
adc
dec
push
arpl
idiv
jae
insb
stc
cs
rcll
push
repnz
jle
lcall
neg
or
sbb
dec
repz
push
cmpsb
popf
mov
repnz
mov
rolb
aam
test
fistpl
mov
in
jb
and
aam
cmpb
into
js
and
out
adc
adc
das
aam
inc
inc
mov
gs
jno
dec
outsl
loop
dec
and
inc
stos
push
cltd
out
add
cmc
mov
popf
mov
insb
into
sar
bound
add
subl
sbb
add
in
cmp
adc
out
mov
ret
mov
mov
mov
cmpsl
push
push
std
fdivl
jge
jns
loope
fidivrs
rcll
cwtl
jb
xor
out
mov
xor
fsubrp
sub
pop
mov
out
sbb
push
sbb
data16
xor
jge
adc
stos
cmc
mov
ficoms
in
add
and
rcrl
pop
dec
orb
xor
cmpsl
sub
jge
dec
dec
sti
outsl
std
mov
sub
dec
adc
fnsave
das
xchg
or
mov
sahf
jae
mov
add
ja
aaa
lock
test
xor
or
push
or
jl
push
sbb
imul
xchg
pop
mov
mov
xor
pusha
decb
decl
add
mov
mov
mov
lret
or
mov
stos
cmpsl
leave
inc
jnp
lcall
xor
cmp
ljmp
add
add
push
push
pusha
pop
shl
es
test
sbb
dec
int
mov
or
scas
mov
rcrb
sub
and
bound
or
repnz
in
jne
push
aad
in
out
ds
loopne
pop
cld
sub
jmp
clc
fwait
fdivl
add
fcomps
lcall
sub
inc
aam
addr16
mov
jp
mov
gs
repnz
jbe
sbb
test
lret
cmc
call
xchg
push
out
pop
mov
sbb
je
xchg
rcrl
pop
lret
mov
inc
icebp
push
dec
sub
fwait
sbb
cmp
add
jl
xchg
int3
pop
mov
xchg
fucomi
cmp
movsb
mov
popf
hlt
test
jmp
imul
mov
pop
hlt
outsl
xchg
scas
cmp
or
inc
and
xchg
out
mov
in
jecxz
push
lahf
sbb
out
or
jp
out
push
sub
push
lock
mov
aas
popf
push
or
in
inc
jl
lods
mov
rol
sub
mov
mov
jle
ds
stos
pop
dec
sub
add
cs
in
sbb
aaa
mov
movsl
jne
es
test
add
inc
pop
gs
sarb
add
sbb
mov
push
sahf
orl
int
mov
shlb
cmpsb
fidivrl
push
in
lds
mov
adc
sub
mov
pop
mov
xchg
push
and
loop
ja
iret
mov
dec
imul
sbb
mov
cmpsb
mov
inc
test
out
fmuls
outsb
les
retw
mov
dec
ljmp
xchg
and
inc
sub
adc
repz
testb
or
push
mov
push
jp
and
dec
pop
cltd
pop
adc
adc
lahf
int3
outsl
out
es
xor
cld
bnd
out
mov
cmp
and
xor
ss
lret
sub
enter
adc
sbb
xchg
imul
cmp
ret
or
ss
scas
dec
mov
scas
cli
sbb
cld
dec
inc
fsubrs
notl
stos
sbb
iret
mov
sub
adc
fwait
mov
sub
sbb
xor
out
fsubr
pop
push
cmc
insb
adc
add
test
inc
notl
add
ja
cwtl
push
aad
add
pop
mov
in
bound
icebp
out
pop
inc
ficoml
jmp
dec
add
stc
rolb
repz
mov
push
cwtl
add
mov
cmc
pop
test
or
xchg
jp
cmp
fs
push
jno
dec
push
pusha
pop
sub
mov
xor
add
jle
inc
add
mov
fisttps
sbbb
mov
pop
cmp
add
cmp
and
test
sbb
push
insl
pop
mov
roll
cli
xchg
jb
jno
cli
lock
fcmovu
dec
lods
add
into
cltd
xchg
movsb
inc
orl
pusha
jp
mov
pop
in
imul
mov
sbb
out
push
or
push
js
add
loope,pt
mov
testb
test
inc
inc
ljmp
movsb
outsl
aad
pop
sbb
ret
dec
sbb
sar
xchg
mov
cmpsb
jno
cld
sub
jle
scas
test
jo
movsb
rclb
jecxz
mov
pop
cld
lea
imul
push
sub
mov
mov
les
mov
mov
pop
push
clc
xchg
test
cmpsb
pop
cld
out
adcb
out
xchg
pop
movsl
insb
pop
inc
push
cmc
orl
or
jae
gs
push
mov
fdiv
inc
in
cmp
insb
leave
jne
add
push
inc
sub
out
mov
or
mov
jmp
stc
cmp
stos
xchg
ss
orl
int3
repnz
xchg
scas
push
sbb
subl
cmpsl
xchg
iret
out
add
xor
outsb
outsl
ret
movsl
cld
cmp
ss
je
cld
lea
stc
repz
cmp
icebp
cmp
stos
je
or
jae
adc
repz
or
stc
dec
jne
cld
dec
dec
aaa
jg
xor
xor
cmpsl
ficomps
and
push
mov
fs
mov
and
jo
push
jge
dec
pop
shrb
std
cmp
cli
loopne
and
sar
mov
iret
nop
outsb
dec
xor
dec
jo
je
sahf
mov
insb
inc
mov
in
jmp
aas
lret
stc
pushf
cltd
fisttps
xchg
data16
sarb
jne
loop
lds
popf
cmpsb
fisubs
fcmove
add
push
mov
gs
hlt
in
pop
xchg
and
les
adc
sar
jge
cmpb
stos
sbb
fwait
xor
gs
lahf
aas
scas
xchg
scas
cmp
or
mov
mov
pop
stos
fistl
cmp
fsubrl
sar
adc
xchg
cmp
repz
movsl
pusha
mov
and
rcll
sub
repnz
mov
jne
out
jp
enter
mov
push
packuswb
mov
mov
ret
pop
clc
scas
push
insb
call
scas
call
inc
dec
cld
and
pop
fadds
pop
fnsave
mov
sti
add
mov
jae
jno
loop
std
and
jae
push
inc
aad
inc
pop
out
mov
aas
jbe
sub
pop
mov
rcl
sub
add
adc
imul
loop
roll
adc
dec
cmpsl
shlb
cmp
push
mov
dec
and
daa
pop
filds
addr16
sub
sbb
dec
and
xchg
not
jns
dec
dec
clc
mov
mov
push
xchg
cwtl
mov
pushf
lods
jp
mov
cmp
adc
lods
push
mov
dec
xchg
ret
lcall
popa
insb
or
loope
aas
out
mov
and
adc
push
into
xor
int3
int3
cs
mov
lods
jno
and
frstor
jl
add
test
xchg
dec
or
and
pop
push
nop
test
mov
cmp
cli
cmp
xchg
arpl
fsubr
repnz
push
mov
aaa
scas
sub
jl
jmp
inc
xor
imul
xchg
xor
ljmp
movsb
mov
push
cmp
shrl
and
cmp
sarl
mov
sbb
jge
push
inc
or
and
mov
in
insl
add
ficomps
clc
outsb
xor
dec
test
push
bound
xchg
mov
mov
jb
ret
xchg
sub
inc
jge
cwtl
dec
cmp
sub
mov
adc
dec
in
mov
mov
cmpsb
imul
xor
push
shl
lock
repz
dec
cs
xchg
aas
fildl
jns
fcoml
push
inc
pop
and
xchg
aas
sub
or
jmp
js
sub
pop
adc
mov
daa
xchg
lcall
cmp
icebp
jg
mov
insl
jb
inc
sub
cmp
adc
out
pop
xchg
cmpsb
arpl
lock
adc
popf
pop
push
aad
xor
insb
or
pop
sarb
push
fdivrs
dec
mov
adc
xor
add
outsl
enter
das
xchg
aad
mov
pop
and
dec
sub
pop
scas
sbb
and
sub
jmp
mov
mov
jmp
sbb
jp
and
dec
pop
negl
cmp
pushf
addb
stos
xchg
and
js
jmp
sbb
xchg
inc
insl
test
jbe
sbb
mov
add
cmpsb
mov
jns
inc
outsl
mov
inc
cld
dec
xchg
inc
stc
push
sbb
sub
cmp
mov
add
push
lds
xchg
cmpsl
push
lods
mov
fdivrl
dec
outsb
icebp
gs
inc
mov
out
lahf
xchg
in
fwait
out
mov
dec
xor
xchg
sahf
scas
pop
in
jecxz
jb
fnstcw
out
lods
adc
push
mov
rcrb
rclb
iret
jb
pop
pop
lods
ret
frstor
inc
leave
mov
xor
add
dec
sub
inc
xchg
cmp
mov
cmp
xor
pop
mov
fidivrs
lret
addr16
imul
das
inc
shrb
sub
xor
imul
xchg
loop
rorb
mov
add
icebp
bound
and
jge
mov
push
arpl
gs
enter
or
lea
ljmp
push
iret
and
dec
jb
adc
popf
cmp
push
dec
sbb
imul
inc
dec
pushf
push
adc
pop
pop
xchg
pop
lods
dec
jg
cmc
cmpsl
push
es
or
mov
fdivr
adc
cmpsl
das
add
lret
jb
push
mov
xchg
dec
or
jae
dec
adc
jl
test
sub
pop
inc
icebp
addr16
mov
icebp
push
xchg
inc
out
mov
imul
mov
fwait
popf
mov
repnz
pop
push
popa
scas
popa
movsb
out
jae
repz
pop
mov
dec
sub
sub
adc
cwtl
push
cmp
pop
push
adc
ret
sub
imul
push
sub
mov
mov
imul
mov
push
repz
sbb
mov
pop
rcr
ret
mov
out
adc
add
fnsave
mov
xchg
sbb
ds
scas
pop
mov
pop
popf
inc
cmp
push
adc
push
xchg
jecxz
test
pusha
testb
fbstp
dec
mov
in
lds
lock
into
sub
test
cmp
lds
out
push
mov
outsl
mov
mov
lods
push
scas
adc
sbb
push
ret
sbb
mov
cmpsl
pop
adc
dec
and
int
aam
fstpl
data16
pushl
push
pop
cmp
cmpsb
cld
addb
mov
add
or
shr
cmp
stc
cmp
ret
das
addr16
inc
push
push
lret
divl
push
shll
xlat
jg
xor
sbb
stc
push
lea
cmp
mov
push
lret
shr
dec
sti
push
int
out
mov
pop
scas
adc
push
or
lds
adc
jg
mov
movsb
push
sub
jecxz
jp
add
jmp
roll
mov
sub
mov
jns
les
cmpxchg
data16
mov
sti
daa
int3
insl
inc
mov
roll
xor
mov
fsts
cmp
push
out
mov
add
call
and
testb
orl
mov
push
and
subl
gs
sub
and
cwtl
pop
lock
dec
daa
xchg
lcall
sub
push
push
dec
out
xorl
in
pop
or
dec
mov
add
arpl
pop
popa
fildll
imul
mov
inc
lods
adc
xchg
std
adc
aaa
stos
pop
adc
xchg
andl
jg
fisttpll
or
add
dec
pusha
mov
imul
xlat
push
add
hlt
mov
and
lret
dec
sub
insl
sbb
jns
adc
cmpsb
call
ret
mov
aam
pop
add
mov
cmpl
jno
cmp
mov
movsb
imul
stos
pusha
inc
xor
rol
sub
xchg
jl
sub
daa
ret
icebp
stos
jo
pop
test
and
jae
shll
xchg
mov
fwait
in
cltd
rolb
jbe
sbb
and
das
out
jae
push
and
ljmp
lret
loop
xchg
and
and
subl
mov
inc
je
dec
mov
in
ss
sti
pop
outsb
push
loope
pop
adc
sbb
imul
cld
repz
cmp
mov
rcl
xor
bnd
sub
jnp
addb
aaa
jns
andnps
mov
bound
outsb
cwtl
add
add
mov
xchg
cli
lock
arpl
jmp
jne
and
mov
mov
xchg
orl
nop
vpcmpgtd
lock
test
and
pop
out
out
adc
adc
popa
xor
cld
push
push
scas
cmpb
cmc
shl
push
sti
adcl
nop
insb
sbb
movsl
mov
xadd
mov
push
aad
into
xor
cmp
xorb
and
std
cmp
call
cmp
leave
rcl
push
movsb
and
sub
sub
push
out
mov
shll
mov
lds
movsb
add
stos
mov
fistps
or
xchg
lds
in
mov
imul
js
sub
or
adc
push
mov
dec
xchg
mov
add
mov
aaa
push
into
sub
pop
outsl
push
inc
popf
adc
and
mov
mov
sub
shrl
out
lcall
pop
xchg
dec
cmp
jb
data16
or
dec
xchg
xor
sub
arpl
and
fisubs
int3
pop
sti
repnz
stos
cwtl
and
xchg
mov
jae
push
ret
lret
out
inc
push
lods
je
ss
push
push
xor
mov
stos
sbb
sbb
mov
sbb
push
dec
inc
xlat
cs
in
pop
fisttps
mov
xchg
cli
pop
mov
gs
push
es
xchg
push
add
sub
sub
sbb
test
inc
xchg
repnz
sbb
adc
push
shl
adc
sub
xor
xchg
ficompl
mov
stos
xor
hlt
xchg
dec
sbb
das
ss
popf
sub
das
push
ds
sbb
outsb
hlt
inc
or
xchg
adc
sub
leave
mov
lret
xchg
test
push
and
push
dec
fdivrs
sahf
shrb
ds
sbb
cmpsb
fwait
adc
cmpsb
mov
inc
xchg
jo
adc
jl
or
xchg
mov
int
xchg
xchg
mov
icebp
jge
mov
xor
and
mov
mov
mov
loop
fwait
clc
vmread
add
xor
data16
pushf
and
jb
cmc
test
lret
fcoml
cmp
jmp
sub
in
cmp
xlat
out
push
cmp
pop
inc
ret
hlt
int
pop
out
push
dec
cld
pop
xchg
xchg
repnz
shlb
inc
jns
test
rcr
jge
or
cwtl
push
push
push
mov
and
shlb
je
cld
and
ret
enter
stc
out
cmp
push
js
and
stc
decl
daa
and
out
movsl
jp
adc
js
mov
pusha
and
out
or
rcrl
adc
aam
xor
xchg
jle
push
jbe
xor
mov
out
pop
pop
test
lea
in
stos
addl
push
std
pop
or
scas
add
test
dec
daa
insb
sub
dec
fiadds
pop
pop
mov
je
xor
shl
stos
cmp
insl
andl
jmp
cmp
insb
mov
roll
jmp
push
mov
cmp
icebp
cmpsb
jae
sub
hlt
movsl
mov
pop
loope
xchg
negb
orb
fidivrl
mov
xchg
es
scas
mov
mov
mov
pop
sub
stos
xchg
pop
jl
cli
pop
popa
sub
push
cmp
pushf
xchg
mov
mov
popa
push
and
test
xchg
dec
mov
pop
xor
xchg
fs
movsl
sub
cmp
cmp
je
mov
lret
pop
xchg
das
xchg
mov
icebp
mov
xchg
stc
outsb
addr16
aaa
mov
push
cmpl
imul
xor
movsb
popa
fs
imul
mov
mov
xchg
jg
and
mov
mov
loope
xchg
inc
mov
add
cmp
std
sub
mov
andl
int
lds
add
sbbl
mov
push
mov
adc
jno
adc
fwait
cwtl
icebp
fistl
xor
ret
push
pop
aas
or
in
fisubl
lahf
es
push
scas
adc
add
mov
xchg
out
push
pop
mov
push
outsl
xchg
test
sub
mov
cmp
stos
jb
cmpsl
sti
inc
fs
xchg
dec
push
pop
inc
stos
fisttpll
rcl
rolb
imul
xchg
cmpb
push
test
mov
popa
and
xor
pop
neg
xchg
ds
push
pusha
and
dec
nop
je
mov
ljmp
dec
sbb
test
cmp
lods
inc
loope
movsb
ds
add
xlat
inc
in
mov
mov
popf
jbe
sub
pushf
and
add
sbb
je
mov
jb
xchg
fwait
popl
jbe
movl
jle
and
movsl
clc
dec
pushf
or
aad
jp
leave
push
ret
sub
xchg
push
and
mov
cmpsb
dec
das
icebp
sti
push
out
jl
inc
xchg
push
pushf
pop
shlb
xor
or
lods
jo
jo
xchg
pop
pop
leave
cld
dec
mov
inc
scas
xchg
jbe
cmp
imul
xchg
mov
cwtl
outsl
popf
lds
jp
jne
stc
add
outsl
and
fstpl
mov
mov
inc
pop
push
outsb
sbb
and
addr16
adc
pop
push
cli
cmp
imul
sub
cmpsl
adc
inc
push
mov
fiadds
ljmp
inc
and
sub
shrl
cmpb
int3
xor
sub
sub
jl
out
xchg
scas
dec
push
mov
adc
inc
cld
fidivrl
mov
sahf
sbb
data16
mov
or
daa
in
mov
and
lea
or
xor
aas
or
fldl
dec
test
sub
pop
jb
and
scas
ret
cmpsl
mov
pop
mov
add
add
call
fnstenv
dec
push
add
fwait
js
loope
jne
idiv
into
xor
arpl
fisubs
scas
xchg
arpl
fisttps
cmpsl
push
jmp
stos
les
inc
cs
insl
xchg
xor
push
jmp
mov
mov
adc
add
repnz
inc
and
xor
sbb
out
and
jbe
ret
out
fwait
xor
pusha
and
mov
lret
stos
mov
jle
or
mov
jecxz
push
and
scas
jl
mov
mov
insl
lock
inc
mov
je
mov
xor
mov
add
ss
xchg
nop
inc
and
aad
mov
fs
pop
fwait
jp,pn
pop
inc
insl
and
lea
sbb
mov
frstor
add
pop
es
push
mov
ds
cmp
add
dec
movsb
xchg
push
rorl
and
inc
mov
push
cltd
aaa
fwait
pop
pop
mov
mov
mov
adc
cmp
stc
inc
or
mov
in
jbe
sub
movsb
mov
mov
outsb
pop
xchg
ja
mov
out
cmp
stc
push
sbb
jge
fmul
mov
aam
push
sbb
push
cs
lea
inc
xorb
push
adc
pop
test
adc
pusha
into
icebp
push
int
fs
and
sbb
pop
lds
mov
xor
leave
addb
out
jecxz
cmc
mov
dec
jp
sbb
inc
iret
fcomps
std
ret
ret
jb
sarl
rol
loop
mov
test
xor
adc
cmpb
mov
and
loop
popa
cmp
sbbl
test
cmp
add
mov
jb
insl
test
cltd
or
xchg
lds
inc
cli
les
xchg
mov
push
rclb
gs
sahf
ja
enter
mov
mov
in
xchg
mov
jb
lret
dec
and
loope
sub
sbb
popa
jne
sub
out
jg
sub
jl
arpl
lcall
stos
mov
jnp
adc
std
adc
addr16
push
out
cmp
and
scas
inc
es
cld
adc
les
sub
xchg
sub
push
cwtl
xchg
or
ret
adc
jle
in
adc
fbld
cmp
pop
outsb
clc
aaa
aas
sub
adc
stc
cmp
gs
mov
loopne
lods
jno
adc
pop
ja
out
xchg
addl
movsb
mov
and
sub
pop
gs
push
jno
xchg
das
daa
jns
add
test
lods
cwtl
ds
int
aad
shlb
jge
adc
daa
test
add
jmp
push
add
xor
jmp
pop
pop
daa
icebp
xor
icebp
in
shl
imul
jnp
mov
pop
lods
mov
inc
cli
iret
scas
ds
xor
lret
add
mov
cmp
ja
ret
mov
nop
pop
frstor
int
scas
mov
lret
ja
mov
movsl
lea
orb
lock
inc
mov
inc
push
scas
push
jge
mov
es
outsl
sbb
mov
testl
pop
pop
psrlw
pop
push
cmp
or
sbb
mov
mov
mov
adc
xor
mov
and
in
icebp
mov
negl
sbb
test
xchg
push
repz
sub
shlb
dec
jle
push
sub
add
nop
push
pop
test
mov
mov
lret
push
sub
xchg
test
cld
in
insl
sub
std
pop
ljmp
clc
lds
mov
unpcklps
and
stos
jb
imul
cmp
out
jno
inc
iret
arpl
stos
mov
movsw
lahf
adc
test
jne
sarl
adc
pop
mov
dec
sbb
shlb
out
inc
pop
push
fisttps
mov
sub
test
pop
mov
mov
orl
aad
pop
mov
iret
push
and
scas
movsb
and
das
stos
into
lock
jo
pop
stos
sbb
out
int3
js
subb
je
repnz
sarl
adc
or
fndisi(8087
fists
call
sbb
test
shl
lcall
test
xor
mov
ret
enter
scas
loope
xor
shrb
inc
cmp
aas
dec
in
xchg
or
or
mov
mov
loope
push
adc
push
inc
icebp
repz
cs
hlt
mov
lock
iret
insl
and
dec
push
xor
sub
xor
mov
jbe
rcrl
mov
cmp
push
mov
push
add
call
scas
lret
lea
jbe
movsl
mov
imul
mov
call
rcrl
pushf
jmp
imulb
sbb
xchg
imul
mov
fsubrl
call
popf
rcll
cmp
pop
int
add
call
sbb
cmpsl
dec
pop
jbe
hlt
loopne
out
cmp
xchg
sbb
xlat
hlt
scas
mov
out
rcrb
jnp
scas
adc
repz
mov
xchg
lret
call
jmp
add
xor
iret
sbb
pop
imul
inc
xor
mov
mov
adc
test
in
jl
imul
insb
mov
cmp
cmp
rol
lret
jl
mov
jp
lret
sti
insl
aas
sbb
int3
adc
in
lods
jb
sub
stc
mov
test
mov
dec
sbb
mov
popa
mov
add
or
cli
push
push
mov
dec
out
shll
sub
push
fmul
or
jnp
scas
jbe
jg
add
push
mov
enter
or
stc
mov
or
icebp
std
sbbl
les
xlat
jmp
sub
popa
mov
mov
stos
mov
jae
pop
movsb
fwait
cmp
idiv
lods
imul
rcll
sahf
mov
jb
aas
aam
push
or
ja
xchg
adc
sbb
sub
test
outsl
sub
subl
mov
dec
pop
xor
mov
or
push
xor
push
sbb
mov
xor
rolb
and
jp
mov
sbb
arpl
rorb
outsb
dec
adc
and
xlat
jo
sub
pop
cmc
addr16
jp
bound
mov
jns
inc
andb
add
scas
rclb
mov
push
jecxz
cmp
or
lahf
sub
mov
stc
popf
lock
aaa
adc
fdivrl
dec
push
fs
aas
xor
testl
and
loope
adc
xor
dec
or
and
push
ljmp
out
mov
imull
xor
ljmp
fdivr
mov
add
std
aaa
jmp
ret
flds
scas
stos
dec
neg
sub
xchg
sub
outsl
sti
jbe
das
es
mov
rclb
mov
aas
je
stos
pop
xchg
jne
or
fsubrs
leave
movsb
movsl
mov
daa
mov
push
dec
negl
fidivrl
lea
sub
sar
push
push
mov
scas
sbb
dec
in
movsl
cwtl
rcrl
jle
cmc
imul
jo
xchg
enter
cltd
cmp
push
les
outsb
aas
hlt
mov
fimull
movq
loopne
push
inc
push
int3
data16
ja
fdivs
lahf
lods
xor
jb
pop
sbb
orl
cwtl
aaa
xor
sub
mov
and
addl
xchg
lds
sub
cld
outsl
pop
call
mov
lds
xor
sub
paddq
inc
mov
sbb
pop
mov
lea
push
jmp
faddl
insb
pop
icebp
xor
das
xorl
mov
outsb
and
or
cmc
push
sti
jno
mov
ds
fcompl
xchg
sbb
sub
int3
or
call
test
mov
pop
jle
outsb
out
or
lret
nop
inc
into
mov
popa
out
or
mov
push
mov
movsl
adc
out
jmp
sti
ficompl
mov
addl
pop
mov
sti
xchg
insw
xorl
or
or
hlt
pop
push
movsl
cmp
push
mov
rcl
mov
loopne
push
fisttpll
out
mov
pop
pop
fsubs
je
pop
movsb
mov
mov
lcall
popf
and
cld
add
sti
sub
stos
dec
mov
popa
stc
jb
sub
jge
stos
rcr
sub
iret
mov
lds
and
aad
daa
ds
insl
sbb
clc
mov
shlb
and
in
push
outsb
xchg
out
je
sahf
fs
lret
inc
push
inc
fisubrs
xchg
mov
and
cmp
dec
push
inc
inc
cli
cmp
int
lock
dec
mov
push
jge
mov
repz
cli
dec
test
cmc
insb
sbb
pop
in
inc
mov
cltd
int
xor
mov
sbb
call
jae
mov
in
jle
add
xor
jp
sbb
adc
mov
push
jecxz
mov
outsb
inc
or
and
adc
sub
mov
in
jecxz
sahf
mov
lahf
popf
mov
and
idivl
ret
fdivs
xchg
lds
and
sbb
ficoml
mov
imul
fs
in
xchg
jae
popa
fcompl
daa
push
out
pusha
in
lock
das
jp
aaa
fldcw
clc
xor
jbe
cld
dec
iret
mov
dec
mov
mov
push
cmp
xchg
mov
mov
jae
jge
add
and
loope
xchg
mov
xor
adc
mov
fsts
pusha
adc
testl
sbb
pop
jmp
and
popf
and
shll
mov
into
sbb
fucomp
fdivr
and
pop
scas
mov
xchg
xor
xor
je
jns
or
and
out
movsl
dec
xchg
out
cmc
jno
mov
loop
or
dec
jbe
push
dec
jle
dec
scas
push
add
dec
pop
imul
sbb
out
sti
or
and
push
or
pop
mov
mov
sub
mov
outsb
fcmovnbe
sbb
dec
xchg
mul
int
pop
xchg
movsl
sbb
adc
les
lahf
imul
mov
add
shl
sti
lods
inc
xchg
stc
xor
cld
pop
mov
lods
jl
in
aam
push
stos
pushf
fildll
cli
push
add
sub
xor
or
cmp
aad
fsubrs
mov
mov
and
popf
jns
xor
sub
jns
cmp
test
mov
scas
mov
push
mov
cli
xchg
inc
mov
les
bound
shrl
lahf
and
or
sbb
stos
out
adc
xlat
lcall
mov
xor
clc
cld
leave
js
mov
inc
jnp
add
or
push
xchg
jo
dec
xor
fs
mov
xor
push
outsb
ror
daa
lea
pop
jmp
das
xor
jmp
push
insl
lock
in
je
and
test
jmp
sub
or
stos
test
cmpl
in
or
add
push
cmpsb
fcomps
inc
les
inc
decl
loope
jl
iret
in
lods
loope
push
ret
jge
pop
mov
xchg
dec
sar
imul
inc
sub
xchg
xor
inc
dec
xchg
ja
push
or
stc
in
mov
fcoml
mov
daa
pusha
es
cmp
adcb
inc
and
popa
jecxz
dec
hlt
sahf
scas
mov
and
shl
push
in
fdivrl
popf
mov
and
dec
cmp
bound
gs
aaa
and
xchg
imul
popf
dec
adc
addl
rcl
shl
cmp
mov
imul
lods
adc
jp
movsl
aaa
adc
xchg
es
mov
cmc
sahf
cmc
dec
adc
mov
sbb
xchg
das
pop
dec
fnsave
data16
adc
fwait
movsb
arpl
cmpsb
test
cmp
inc
in
loop
adc
subl
aas
mov
xlat
or
jb
cmp
das
es
std
xor
loope
pop
jp
aaa
jb
jns
mov
mov
inc
dec
dec
fidivrl
mov
push
or
loopne
rorl
xchg
fwait
sbb
jl
lods
sahf
aaa
inc
stc
clc
rclb
pusha
mov
cmpsl
mov
dec
ss
sbb
add
out
or
sbb
add
aaa
gs
jns
pop
mov
bound
popa
fdivl
mov
sub
into
mov
inc
or
int3
ljmp
pushf
jo
adc
sub
roll
mov
mov
xchg
lret
rcrl
imul
add
incb
rorb
mov
fcoms
repnz
mov
popf
mov
mov
outsl
loop
mov
dec
add
or
dec
ss
cwtl
adc
fwait
and
jb
add
sbb
jmp
call
mov
sbb
lcall
and
and
pusha
adc
push
push
ljmp
stos
lds
or
mov
imul
jns
sahf
push
aaa
les
lds
rorb
push
push
xchg
cmp
dec
nop
repz
loop
sbbl
es
dec
xchg
clc
imul
in
fxch
inc
addr16
hlt
xchg
ds
and
test
sub
or
inc
adc
mov
push
mov
andl
loop
lcall
push
test
mov
mov
pop
popf
jo
dec
mov
and
das
out
lcall
ret
and
test
shl
jg
sti
cmp
mov
mov
push
out
lea
out
dec
icebp
fnstenv
mov
rolb
adc
xor
fiadds
loope
mov
out
iret
out
push
push
sub
sbb
in
ds
shll
cmpsb
popl
test
jne
mov
dec
fwait
mov
in
stos
and
scas
or
jnp
jg
xchg
sbb
std
movsb
mov
mov
adc
stos
sbb
out
js
dec
stos
push
mull
int
mov
lret
sbb
inc
rcr
test
cwtl
cmp
out
or
shll
into
dec
adc
pushf
jno
mov
jb
sbb
pop
ds
sti
mov
daa
ror
call
cmp
out
push
sbb
xlat
push
mov
jecxz
mov
imul
into
cmp
in
nop
out
cmp
xor
xor
dec
call
fistl
pop
xchg
or
bnd
pop
test
into
cmp
mov
mov
push
out
rcrl
adc
add
sub
incl
popf
sti
push
cmp
push
mov
cmpsb
sbb
std
fisttpll
mov
and
int3
jnp
xchg
mov
fs
insb
xchg
xchg
sbb
adc
adc
adc
cmp
les
and
aam
mov
out
mov
sbb
imul
push
push
frstor
mov
lea
daa
and
int
add
lcall
or
out
xor
lret
jbe
jb
aam
mov
imul
add
rorb
lahf
sbb
push
and
mov
cld
pop
cmp
scas
js
dec
test
and
sub
mov
jb
fwait
adc
ds
dec
roll
aas
add
addr16
leave
xlat
stc
dec
sbb
fidivrl
adc
fadd
mov
or
repnz
dec
in
in
cld
mov
out
lods
aaa
xchg
sbb
iret
mov
scas
nop
mul
jg
xor
xor
mov
push
mov
in
daa
mov
ss
mov
pusha
push
ret
enter
push
gs
xchg
pushf
and
in
je
sahf
outsl
jae
loope
mov
out
inc
add
pop
mov
test
loop
mov
mov
stos
mov
fisubl
ss
stos
mov
cmp
cmp
rolb
arpl
sbb
das
mov
incl
outsb
xlat
sub
int3
adc
and
xchg
lods
pop
idivl
outsb
rorb
pusha
lds
jne
les
adc
fs
std
mov
cmpsl
enter
jae
cli
dec
ficoml
std
pop
push
dec
psubb
and
std
mov
push
and
inc
loop
imul
cld
xor
out
bound
xchg
out
loop
pushfw
adc
xchg
int3
and
es
sbbl
add
adc
andl
roll
aaa
mov
pushf
xlat
cmovne
insl
dec
xchg
bound
mov
clc
jns
call
push
mov
mov
add
adcb
and
call
sub
out
dec
out
jge
dec
idivl
jg
daa
ficompl
xchg
call
mov
pop
cld
call
mov
mov
adc
lcall
sub
pop
in
pusha
sbb
clc
cmp
aas
movsl
mov
stos
rolb
dec
movb
cmp
adc
mov
jns
pop
int
xchg
and
xlat
in
adc
fdivrl
sbb
imulb
fadd
pop
inc
lds
adc
andl
mov
xor
into
cmp
lahf
pop
insb
popa
push
movsb
pop
mov
std
int3
in
cmp
in
cmc
xchg
dec
mov
arpl
inc
std
mov
flds
mov
sub
adc
or
sbb
in
adc
add
jae
mov
or
outsl
ret
in
std
nop
repnz
mov
jno
jmp
jb
push
cmp
mov
ds
stos
mov
pop
and
push
imul
push
jg
fidivs
test
int
jg
into
mov
jmp
and
inc
cmp
stc
push
pop
or
inc
mov
rorl
cltd
jecxz,pn
pop
out
js
movsb
jb
cmpsb
in
xor
out
pop
daa
mov
movsb
xchg
lea
cmp
sahf
push
dec
inc
ljmp
out
icebp
add
adc
jmp
bound
pop
sbb
mov
repnz
cwtl
xchg
mov
add
cltd
lds
mov
xchg
sub
and
cmp
out
jnp
mov
sti
mov
out
sahf
imul
push
lcall
clc
call
cwtl
lods
loope
xor
rclb
xchg
and
jns
mov
xchg
pop
aaa
jo
arpl
xchg
ret
push
add
push
enter
pop
test
inc
push
outsb
jns
lcall
lcall
jmp
lods
shlb
fstpl
test
stos
jle
inc
lret
cmp
pop
ss
pop
ret
call
sbb
stc
movsl
sbb
int
loope
je
pop
imul
and
push
scas
movsb
adc
push
repnz
js
pop
das
xchg
mov
mov
ret
ds
mov
sub
push
add
jne
jecxz
mov
int
shlb
ljmp
pop
mov
sub
fstl
cmp
adc
std
sarb
pop
in
add
add
jo
pop
mov
push
ret
dec
mov
push
xchg
sbb
mov
daa
lods
in
in
or
outsb
sarb
mov
cmpl
xor
cmpsl
mov
adc
jg
cs
mov
test
jg
in
jno
xchg
pop
imul
adc
clc
movsl
dec
lds
jb
leave
shrb
movsl
cmpsb
shll
mov
mov
dec
and
daa
enter
or
lods
inc
or
cmp
dec
xor
xchg
dec
lcall
lret
notb
stmxcsr
sub
or
mov
test
cmpsb
sti
rcrb
test
gs
aad
stos
test
into
sti
pop
lods
shr
mov
xlat
push
pop
mov
notl
daa
das
addr16
pop
mov
mov
sbb
fwait
cld
cmp
sbb
lahf
testl
mov
dec
stos
decb
mov
xchg
dec
sub
lds
bound
mov
cltd
or
xor
pusha
adc
test
xor
dec
fwait
cs
imulb
xor
adc
dec
jne
add
add
inc
mov
pop
mov
cs
pop
xor
and
jg
test
dec
cs
mov
pop
fmul
dec
jae
pusha
aas
jae
fcomps
shlb
adc
lea
jecxz
jp
pop
jg
pop
outsl
sub
lcall
sbb
test
pop
leave
insb
adc
mov
inc
pop
psllq
pop
mov
arpl
lods
sub
push
int
std
xorl
hlt
js
out
mov
mov
cmp
int3
sbb
lds
aad
dec
fs
daa
adc
jns
xor
aaa
test
push
movsb
jnp
sub
push
ret
mov
cmp
pusha
or
or
xchg
jl
iret
lea
and
or
pop
shrb
mov
xchg
jl
cmp
popa
or
jbe
lods
or
loop
ja
pop
jle
cmc
xor
idivb
mov
movb
mov
xchg
movl
cltd
repnz
sbb
int
pop
out
dec
lahf
or
cli
insl
icebp
dec
fimuls
ds
mov
mov
xchg
jp
xchg
lahf
outsb
mov
push
mov
or
lret
les
sub
arpl
add
and
adc
andb
movsl
mov
dec
pop
lods
lahf
cmc
gs
adc
in
sub
push
cmp
js
frstor
xor
aam
flds
mov
or
push
mov
fcomip
ret
fldcw
inc
hlt
cmp
mov
ljmp
ds
test
sub
lahf
xchg
subl
cmc
sbbb
mov
inc
gs
xor
out
cmp
xor
pop
jmp
inc
out
iret
loope
jg
inc
ffreep
push
mov
sub
outsl
das
out
nop
jg
xchg
movsl
mov
hlt
push
inc
pop
popa
and
mov
sbb
fwait
xchg
sub
sub
cmpsb
fnsave
sbb
cmpl
mov
and
icebp
adc
add
pop
xor
xor
xchg
add
fs
shll
test
fadds
inc
add
lret
stc
mov
test
jg
stos
jae
cmp
xchg
lret
mov
stc
sbb
ficoms
stc
dec
aad
repz
adc
jmp
mov
test
icebp
sub
repz
enter
mov
jnp
fmull
pop
dec
imul
lods
jnp
repnz
cmp
sub
inc
faddl
dec
xchg
pop
cmpsl
pop
adc
xchg
aaa
aas
mov
aas
shlb
sbb
cmp
lcall
jle
popa
dec
lods
mov
and
adc
xchg
pop
xchg
icebp
out
stos
ja
add
sahf
divl
imul
and
dec
pusha
dec
lahf
xorl
sbb
out
lock
call
nop
and
sbb
push
adc
andb
or
adc
sbb
ds
pop
add
cmp
into
pusha
pop
pusha
hlt
inc
leave
in
sub
push
xor
stos
or
int
aas
pop
inc
dec
inc
scas
jbe
push
sub
cli
mov
incl
mov
icebp
repz
mov
aaa
fistps
rorb
pop
sbb
mov
jecxz
xlat
cmp
arpl
or
lea
cli
xchg
push
jns
fcmovnbe
lret
pop
jp
xchg
fisubs
sbb
daa
pop
push
cmp
js
filds
mov
xor
shlb
cmpsl
xchg
movsb
push
cmp
cmc
roll
sub
push
out
imul
mov
aas
pop
es
xlat
pop
mov
lock
inc
xor
jno
xchg
inc
fcmove
inc
sbb
das
dec
mov
bound
sub
mov
gs
pop
push
and
test
sahf
cmpsl
dec
dec
mov
aam
dec
jnp
into
push
push
lock
stos
adc
iret
loope
xchg
inc
sbb
insl
sub
or
cmp
push
jnp
sbb
mov
dec
bound
pop
subb
icebp
mov
inc
sub
sarl
push
xchg
push
repnz
push
dec
cld
lcall
cmp
push
ficomps
adc
mov
mov
xor
ja
pop
movsb
test
push
stc
push
sahf
xchg
lahf
out
cs
cwtl
popw
xchg
adc
lods
and
hlt
or
dec
mov
das
fwait
cmp
inc
stc
push
fcompl
jge
clc
and
pop
sbb
mov
inc
cld
int
mov
test
adc
add
pop
in
loopne
pop
jo
pop
rcr
adc
add
mov
out
mov
fucomi
fsub
sahf
mov
pop
cwtl
fsubrs
idivl
mov
ds
jmp
adc
fwait
fistps
les
popf
add
adc
jo
fsts
fldt
sbbb
nop
inc
in
out
xor
pop
push
xlat
xor
jae
lods
sub
stos
cmp
jl
inc
scas
pop
push
das
out
mov
inc
fstpl
add
out
inc
jnp
push
mov
cmp
mov
sbb
jp
mov
lods
imul
add
arpl
mov
fstpt
hlt
arpl
data16
dec
xorb
out
dec
and
popa
inc
adc
lods
inc
test
lods
popa
push
xchg
dec
mov
sbb
sub
pop
jl
dec
sbb
mov
ds
cmpsl
hlt
xor
mov
cli
mov
sub
and
lret
sbb
repz
je
mov
jl
xchg
subl
cltd
lea
pop
lds
repnz
pop
cmc
loop
fistps
pop
mov
test
rcrb
scas
mov
mov
jmp
aad
out
cmp
mov
jmp
mov
sub
test
mov
clc
lods
xchg
push
mov
xchg
ss
test
xchg
sbb
add
push
mov
adc
jge
movsl
xor
push
fcmovb
sti
arpl
dec
mov
cmp
pusha
loop
push
sbb
and
pop
inc
mov
adc
adc
dec
fdivrs
pop
and
rcrb
stos
shll
fs
jne
add
lock
test
adc
mov
sub
mov
pop
xchg
sub
jge
inc
out
pop
push
scas
inc
ret
or
aaa
mov
xchg
sub
insb
ret
pop
out
ret
lcall
mov
loope
js
popf
mov
scas
adc
and
jge
mov
scas
clc
jae
fdivs
xchg
sbb
or
xchg
pop
fidivl
and
mov
clc
dec
push
mov
scas
hlt
jae
fidivl
sbb
adc
inc
cli
adc
jge
sarb
cmpsb
and
pop
in
insl
fmull
and
inc
add
and
xchg
pushl
or
repnz
add
leave
and
pop
out
in
cli
enter
nop
jg
mov
jg
rclb
xor
xlat
and
int
repnz
xchg
or
mov
sbb
aas
testb
jne
xlat
mov
icebp
fidivrl
fsts
addl
shl
xchg
aaa
out
rcrl
ja
jg
je
adc
jae
cltd
xchg
mov
cld
xor
dec
lods
adc
dec
imul
lret
scas
mov
sub
iret
insl
jnp
subb
cli
add
inc
stos
pop
repz
pusha
dec
mov
stos
insb
mov
sbb
cwtl
mov
imul
xchg
nop
movsb
in
je
cmp
cmp
jns
lcall
lret
into
pop
xchg
mov
xchg
dec
int3
lock
mov
div
xchg
stc
out
sbb
mov
adc
jo
sbb
jno
nop
xlat
pop
arpl
add
adc
mov
xlat
pop
jnp
cmp
cltd
sbb
xchg
sub
roll
xor
push
iret
mov
jo
adc
adc
jge
push
cmc
inc
mov
xor
inc
scas
jl
add
add
mov
lea
jecxz
jns
xor
inc
popa
in
aas
ret
sbb
jno
xchg
add
test
hlt
scas
mov
lret
enter
push
js
mov
nop
jns
int
ja
insb
das
movl
stos
enter
das
scas
cli
lea
or
sbb
jns
cmp
je
test
mov
jbe
fmuls
stos
in
jmp
cli
aam
in
in
cmp
sbb
or
test
sub
add
dec
sub
sbb
fld
xor
sbb
push
mov
aad
xor
ret
push
dec
in
jp
lret
xchg
fidivl
movsb
mov
ds
out
ret
pop
fcompl
inc
jnp
idivl
dec
push
fdivs
in
push
call
call
sbb
jecxz
sbb
sbb
mov
push
mov
cmp
sub
and
adc
movsb
or
jbe
xor
mov
aaa
imul
xchg
out
inc
xchg
pop
shl
cmp
aas
int
sub
push
or
int
cmp
xor
mov
dec
fbstp
fdivrs
push
dec
and
adc
aaa
xchg
in
inc
sbb
fcoms
sub
jbe
icebp
adc
popf
jo
jnp
xlat
lcall
aaa
js
xor
fiadds
push
das
sub
xchg
adc
sbb
jg
subl
pop
test
sub
push
negb
add
mov
clc
je
out
mov
dec
icebp
fistpl
out
jecxz
stc
sti
cmpsb
cli
cmp
and
mov
cmpsb
sbb
adc
add
pop
fnstcw
xchg
or
mov
ret
ret
push
sub
inc
xor
frstor
inc
jns
inc
test
popf
xlat
cwtl
xchg
hlt
xchg
je
loopne
add
xchg
mov
test
in
xchg
fst
popf
das
clc
adc
cmp
xchg
ljmp
cwtl
int3
into
gs
gs
test
enter
pop
rol
jo
xchg
cmp
mov
ja
bound
adc
pop
ret
stos
test
mov
xchg
push
test
loop,pn
stos
jo
jbe
lds
rep
dec
dec
mov
test
jb
jb
div
bound
jge
inc
mov
scas
push
sub
ljmp
rorb
push
stos
pop
mov
cli
pop
mov
pop
repnz
mov
xchg
mov
mov
in
xchg
jbe
push
jmp
mov
fcmovu
fcoms
inc
cmc
ficomps
mov
lahf
icebp
mov
ret
decb
sub
jle
adc
lret
mov
test
xchg
insl
shll
push
dec
fst
insb
andb
xchg
sub
jns
mov
inc
mov
push
shll
fcoml
icebp
mov
loope
xchg
mov
add
and
push
fnsave
repz
xchg
fiadds
mov
sub
push
out
arpl
js
cmc
jmp
push
jnp
pushf
mov
mov
fnstenv
inc
jecxz
out
cmp
adc
in
mov
in
arpl
ret
jmp
ljmp
mov
push
mov
repz
jo
dec
mov
and
dec
out
stos
mov
js
out
jecxz
sbb
xchg
lds
mov
mov
pop
loope
xor
or
negl
adc
pusha
int3
mov
in
mov
pop
int
jb
fsubl
faddl
lret
push
xchg
fdivp
pop
xchg
push
xchg
sub
in
xor
sbb
std
pop
push
lock
roll
lds
jp
ficoml
out
add
sub
rorl
loopne
jns
in
add
ljmp
lahf
mov
pop
jmp
subb
lea
dec
testb
mov
rcl
or
mov
push
dec
stos
jmp
or
jle
int
mov
int3
jbe
scas
and
jg
and
popf
insl
mov
mov
or
stos
rcll
jno
lods
xchg
insb
mov
je
fsts
cmpb
pop
pop
adc
jp
pop
push
sbb
inc
cltd
dec
push
sub
jp
movsb
inc
cmp
clc
push
mov
mov
push
je
sarl
movsl
pop
mov
cli
fwait
pusha
mov
and
ljmp
hlt
cmpsl
push
stos
adc
xor
stos
and
mov
push
inc
std
repnz
mov
sub
push
adcl
movsb
mov
leave
mov
add
shrl
out
inc
data16
jg
mov
mov
in
and
xchg
mov
jmp
jne
jns
pop
push
mov
inc
push
mov
leave
mov
sub
data16
xchg
pop
mov
and
shll
insl
addb
or
add
mov
mov
test
push
fstpl
add
pop
xor
adc
add
cmp
sbb
cs
mov
or
mov
fcmovu
push
mov
orb
or
pop
in
sub
aam
jl
scas
ss
mov
cmpsb
in
mov
cmp
sub
dec
insl
addl
push
lret
cmp
add
dec
lahf
push
xchg
cmp
cltd
sub
inc
cs
mov
sub
jno
adc
xchg
or
sbb
cmc
xrelease
int
cmp
mov
fsubrl
movsl
gs
mov
notb
xor
dec
arpl
jle
inc
mov
pop
xchg
inc
xchg
lds
jo
pusha
adc
jmp
lods
std
adc
loop
pop
jmp
insb
gs
add
flds
or
pop
out
push
adc
je
test
mov
test
jnp
sbb
or
aad
push
lcall
mov
sub
push
add
mov
sbb
sbb
subb
sub
lcall
aam
mov
mov
push
jns
insl
ret
jbe
mov
loope
sub
cmp
xor
inc
inc
xor
gs
fucomp
in
inc
push
int
fnstcw
aam
enter
aas
fdivrp
mov
mov
push
jl
les
push
aam
std
jp
jae
les
adc
cmpsb
pop
les
movsb
aam
aam
push
mov
ret
adc
mov
imul
pop
add
pusha
in
roll
fs
push
inc
lds
pop
add
out
sbbb
repz
lock
push
dec
stc
outsl
xchg
ja
push
adc
xchg
jae
xor
leave
hlt
and
daa
subb
mov
shll
popf
in
nop
ror
adc
push
dec
sarl
sti
pop
popf
jle
movsl
movsb
scas
pop
lods
mov
and
and
inc
push
rcll
cmpl
xchg
dec
mov
fbstp
sub
sbb
stos
rolb
call
imul
mov
xor
and
lcall
sub
xchg
mov
add
incb
jl
push
movsl
ret
push
subb
js
mov
fidivrs
aaa
hlt
aam
mov
jne
lea
mov
pop
dec
sub
adc
cs
sub
mov
adc
repnz
gs
push
xchg
sbb
xor
pop
xchg
aam
jmp
lods
add
mov
dec
je
lcall
loop
push
and
cs
sbb
cltd
repnz
outsl
int3
add
rcr
cli
ficomps
mov
jbe
sahf
mov
push
pop
sbb
lret
leave
sar
hlt
push
xchg
cmp
shll
inc
push
inc
cmc
or
inc
mov
and
negl
add
mov
and
add
xlat
adc
jge
xor
fisubl
lcall
and
loopne
xchg
sbb
cmc
rclb
popa
sub
pop
rcrl
jo
dec
pusha
lea
dec
cmpsb
jo
test
cmp
loop
adc
loop,pt
clc
adc
cmpsl
dec
xchg
rorb
lods
sbb
add
mov
push
scas
adc
rcll
sbb
mov
in
or
push
movsl
bound
or
ds
cmpsb
jl
rolb
inc
js
negl
shl
cmp
adc
jae
jo
mov
leave
leave
sti
shlb
stos
or
adc
add
gs
inc
push
jmp
ljmp
jne
sahf
sub
aad
jg
lret
mov
cli
repnz
adcl
dec
ja
inc
test
mov
dec
mov
xchg
cltd
cld
push
imul
push
fstpl
imul
mov
xchg
fs
mov
or
cmc
sti
es
push
pusha
mov
push
adc
or
cmp
lret
inc
aad
shlb
sbb
mov
in
shrb
mov
nop
or
sbb
mov
es
adc
test
mov
addl
shll
mov
lods
scas
push
mov
nop
je
xor
mov
mov
out
lock
push
adc
jle
sub
mov
jbe
adc
sbb
cld
cwtl
sahf
test
ficompl
pusha
pushf
es
adc
cwtl
dec
jb
push
pop
rorl
push
sbb
mov
xor
leave
insb
pop
arpl
adc
push
loopne
movsb
jecxz
popf
lea
dec
and
das
ret
jne
in
and
cld
daa
inc
es
cmpsl
xchg
jmp
test
push
icebp
rcrl
dec
mov
cmp
punpcklwd
mov
xor
push
or
mov
push
fistpll
inc
mov
and
xorb
xchg
into
jmp
push
mov
filds
lock
mov
mov
loopne
fwait
xchg
push
aaa
cmp
scas
lods
test
mov
push
adc
dec
cmp
sbb
insb
sub
cmpsb
repz
sub
dec
push
cmpsb
popf
add
in
inc
jno
jge
sub
int
das
mov
xor
or
repnz
mov
stos
mov
cmp
in
pop
cmp
inc
jmp
movsb
out
lods
in
jns
cmp
test
xor
cmpsb
lcall
cmc
mov
shl
mov
dec
adc
push
ljmp
mov
popa
mov
pusha
les
mov
cwtl
sub
jbe
test
clc
jl
jbe
orl
movsbl
fimuls
cmpsb
push
lcall
aaa
pop
adc
jbe
cmp
dec
xor
or
push
scas
push
repz
cmp
call
aas
lods
pop
sbb
aaa
popa
outsl
push
mov
fidivrs
sub
or
push
dec
pop
shll
ret
xor
jecxz
jb
call
adc
sub
xchg
adc
pop
pop
imul
rclb
dec
movsl
xchg
insb
mov
adc
mov
and
das
pop
and
xor
mov
ret
rclb
addr16
dec
jmp
pop
xchg
sahf
and
addb
fbstp
push
rcl
repnz
ret
or
adc
scas
sub
dec
lock
fmull
negl
arpl
pusha
andl
fists
loope
inc
das
jno
and
sbb
in
pop
mov
fnsave
ljmp
repnz
fwait
lret
adc
cmpl
subb
fnsave
adc
push
sarl
inc
mov
xchg
fidivrl
or
xchg
push
fucom
mov
test
js
mov
fistpll
fwait
rolb
out
icebp
das
add
jecxz
xor
es
hlt
jmp
pusha
aas
push
adc
sub
push
rcrb
pshufw
daa
mov
loopne
incb
inc
loop
mov
xchg
fiaddl
fbld
test
push
xchg
jnp
mov
repnz
cmpb
dec
out
xor
add
adc
out
and
roll
cmp
repz
jg
push
cs
ss
icebp
scas
xchg
and
lret
mov
cmp
lcall
outsb
mov
jmp
adc
push
and
push
pop
je
push
or
in
dec
out
gs
out
adc
pop
rol
cmpsl
push
sub
inc
xchg
shl
push
das
int
popf
jmp
jl
iret
mov
xchg
mov
aaa
xor
dec
pop
push
cmp
sub
sbb
and
push
ret
dec
pop
popa
jno
insl
ljmp
mov
addr16
sub
inc
cmp
daa
push
mov
fisttpl
lds
jg
cs
jmp
inc
jle
fstpl
inc
loopne
xchg
jecxz
jmp
and
outsb
mov
mov
lods
xor
push
pop
pop
xor
arpl
les
xchg
pop
add
lcall
jns
pop
sub
mov
adc
sarl
jnp
hlt
mov
dec
add
mov
push
ror
and
xchg
cmp
insb
test
in
sub
fldt
scas
clc
imul
dec
sbb
jge
mov
es
sbb
aas
add
pushf
dec
les
in
push
in
add
jp
ja
and
cmp
lods
jne
rclb
aaa
or
mov
aad
adc
ret
and
out
and
lods
in
or
cmp
cwtl
adc
adc
pop
loope
repnz
mov
fucomip
xor
ljmp
mov
js
data16
filds
pop
aam
sbb
in
inc
mov
mov
les
push
test
sbb
xchg
cmc
inc
cmpsb
sub
adc
sub
push
and
aad
sub
xor
cmp
lds
negb
pop
std
aam
test
or
pop
jns
inc
cmc
out
shrl
dec
add
xor
in
mov
loope
mov
rcrb
mov
cli
mov
out
popf
fcoms
add
mov
rcll
lret
add
movsl
ret
leave
testb
push
imul
sub
ja
sub
inc
repz
ja
mov
roll
ffree
inc
inc
pop
mov
repnz
jo
push
mov
xchg
mov
arpl
push
adc
fwait
stos
pushf
das
dec
js
out
fdivp
js
push
and
mov
pop
popf
daa
cltd
and
fstpl
inc
stc
stos
inc
fwait
adc
cmp
insb
mov
outsl
pop
inc
xor
sahf
fstpl
out
and
pusha
pop
ja
pusha
arpl
mov
lret
mov
add
fdivs
mov
push
pop
repnz
roll
xchg
and
loope
les
xchg
jp
and
pop
ret
shll
aaa
ret
test
rorb
stos
add
je
lret
or
cmp
cmpsb
jne
or
arpl
loope
push
or
xchg
sti
mov
mov
aad
mov
xor
int
sbb
enter
loopne
and
jae
cltd
mov
repnz
repz
mov
sbbb
sub
scas
cmp
cmp
cmp
pop
repnz
or
rclb
fstl
mov
rcll
xchg
mov
pop
fwait
add
inc
add
ds
add
jmp
xlat
sbb
jecxz
xchg
sbb
or
mov
mov
jp
mov
inc
mov
imul
into
or
push
cltd
inc
adc
cmp
adc
adc
pop
ljmp
subl
pop
jns
gs
int
cwtl
inc
in
lret
lcall
rorb
dec
icebp
xchg
pop
dec
ss
push
jo
test
mov
or
mov
mov
cli
mov
pop
cmp
daa
xchg
and
xor
xchg
push
arpl
push
fstpt
push
stc
xchg
dec
and
popf
mov
jmp
imul
neg
mov
je
cmpsb
outsl
xor
mov
mov
jns
xchg
jo
push
pop
sti
dec
les
ss
adc
in
fwait
dec
sub
repnz
insl
pop
hlt
and
sub
insb
xor
and
test
dec
adc
shrl
gs
push
push
dec
jae
push
mov
pop
push
mov
sahf
fdivs
pop
and
ds
add
sub
pop
sbb
inc
jle
push
mov
inc
pop
mov
sbb
icebp
pop
inc
incl
jns
mov
pop
inc
cmpsb
fstpl
stos
arpl
jg
sbb
cmp
xchg
clc
ja
mov
cmc
push
push
push
stc
sub
adc
test
bound
or
sbb
imul
or
xchg
fistpl
pop
gs
adc
xchg
jg
fcmovbe
push
insl
adc
in
test
lods
imul
xor
inc
or
in
inc
fwait
cld
cmp
mov
addl
fidivl
into
jnp
iret
dec
aas
or
xor
stos
cs
mov
pop
test
cwtl
pushf
push
add
cmp
and
popf
sub
push
int
jl
sar
push
sbb
xchg
sub
adc
hlt
pop
adc
jg
lods
dec
enter
orl
adc
or
in
adc
ja
rolb
clc
mov
das
popf
stos
xchg
inc
sub
fwait
insl
inc
imul
push
push
mov
lahf
mov
fisttpl
arpl
addr16
lock
cmp
test
inc
adc
mov
dec
dec
or
ret
test
outsl
pusha
push
jg
jle
dec
dec
lcall
std
cli
mov
mov
xchg
and
adc
outsb
les
iret
or
or
jge
mov
scas
xor
add
imulb
push
push
ret
xor
out
pusha
shll
add
xor
sbb
dec
sub
xor
sbb
and
and
jae
mov
fsubrp
je
mov
mov
scas
adc
fcoml
inc
in
sub
xor
xor
movsl
mov
pop
mov
test
jb
mov
dec
sbb
and
sbb
enter
hlt
sbbb
dec
pop
mov
flds
sbb
jo
jb
test
imul
in
outsb
xor
ljmp
xor
loopne
adc
cs
mov
movsl
pop
sahf
jge
aaa
xchg
push
rcll
int3
lret
xchg
js
clc
into
shlb
jae
stos
pop
mov
sti
add
mov
fidivs
lret
cmpsl
rclb
iret
gs
fsubl
mov
pop
and
inc
into
pop
ss
cmpsl
mov
add
xchg
ja,pt
add
jecxz
sbb
jb
inc
mov
movsl
inc
test
or
xchg
xor
inc
adc
lret
adc
bound
and
in
mov
test
lahf
cli
xchg
adc
xchg
push
cli
dec
mov
jne
cmp
jnp
xor
cld
mov
mov
enter
cmp
jns
cmp
push
push
inc
ret
jae
nop
mov
stos
xchg
pop
adc
addr16
popa
insl
or
inc
mov
add
sahf
mov
cmpsl
or
divb
sub
ss
dec
fisubl
sarb
mov
aas
inc
mov
push
in
mov
jno
pop
jne
push
lds
gs
sahf
jmp
adc
jne
xor
mov
cmp
sbb
jne
enter
adc
xchg
sti
aam
adcb
in
cmp
fsubrl
xchg
adcl
and
push
in
xorb
mov
lds
push
xor
inc
movsb
pop
cltd
push
les
subb
stos
fsubrl
pop
lahf
pop
inc
pushf
dec
mov
inc
in
clc
leave
out
sbb
dec
orl
or
or
xchg
mov
dec
and
sbb
fwait
aas
jne
lret
fsubp
adc
ljmp
pop
sbb
adc
push
rorb
jno
aaa
xchg
shrb
into
inc
xor
jmp
sbb
push
bound
add
add
inc
mov
mov
pop
mov
sar
sbb
dec
mov
arpl
mov
and
cli
mov
mov
inc
sarl
test
mov
ljmp
inc
xchg
in
nop
popa
push
and
fwait
into
jnp
mov
jmp
mov
hlt
jl
pop
pusha
in
pop
dec
in
js
mov
cmp
fdivl
add
and
out
jne
pop
arpl
sbb
pop
and
in
mov
test
jle
icebp
and
mov
leave
les
mov
in
or
push
scas
daa
xor
mov
loope
adcb
cmp
shrl
mov
sbb
pusha
add
dec
into
xchg
aam
repnz
pop
jnp
lret
and
and
dec
mov
sbb
mov
xchg
jmp
pop
test
cmc
jg
push
and
push
ljmp
mov
or
daa
sbb
rep
sub
add
add
ret
sbb
add
xor
je,pt
test
push
mov
dec
es
and
jns
lea
xchg
dec
push
sar
js
add
sub
mov
or
add
aas
aaa
pop
xor
fidivrl
adc
fwait
push
mov
lea
xlat
out
mov
push
in
std
and
hlt
mov
mov
jmp
aaa
or
in
cmpsl
fsubl
mov
dec
fwait
hlt
mov
testb
jp
addr16
xor
dec
mov
repnz
out
inc
sub
xchg
xchg
gs
rclb
jbe
xor
mov
stos
dec
push
inc
mov
xchg
inc
mov
mov
inc
push
mov
fsubrl
outsb
aas
and
gs
dec
aaa
fcmovb
cmp
fwait
iret
lahf
inc
mov
pop
adc
or
sub
cld
adc
mov
push
outsb
adc
mov
push
sbb
adc
mov
aad
jae
aaa
mov
push
add
and
and
fisubrs
mov
mov
or
mov
push
fucomip
sbb
std
jne
inc
xlat
jecxz
push
cli
push
sub
lods
add
dec
bound
mov
mov
adc
cmp
shlb
cli
sub
mov
shrb
xchg
sahf
mov
int3
xchg
shl
xor
in
leave
ret
movsb
xchg
leave
add
mov
push
movl
je
sub
rcl
mov
push
pop
js
sarb
adc
cli
inc
movsl
aas
lock
jbe
aas
cmpsl
and
or
sbb
xor
jmp
cltd
dec
push
flds
inc
outsl
adc
and
sub
fwait
ds
cwtl
lret
push
aad
aaa
push
orb
aas
lret
dec
out
clc
inc
lret
ss
xor
or
inc
loopne
push
mov
dec
and
outsb
xorb
aaa
and
pop
push
rcrb
cmpsb
sahf
pop
in
enter
adc
and
adc
or
and
xchg
cli
cld
xlat
xor
mov
shlb
pop
push
jns
dec
mulps
clc
cld
rcrb
gs
pushf
adc
pop
mov
imul
loopne
adc
sub
out
cwtl
mov
cmp
in
xchg
lahf
pop
stos
mov
lret
scas
popf
sub
mov
into
pop
enter
and
ret
and
sbb
cmpl
or
std
push
or
adc
xchg
out
out
inc
in
ret
mov
xchg
cltd
sbb
push
add
cmp
sbb
mov
fists
ljmp
xor
sti
lods
adc
cmp
test
sahf
pusha
and
loope
mov
int
lods
jp
rorb
out
cwtl
in
push
push
idiv
ret
subb
int3
lahf
mov
or
les
xchg
pop
gs
shll
cmpsl
aas
dec
es
sub
cmpsl
adc
mov
mov
push
fldt
xor
adc
pop
outsb
mov
popf
xchg
mov
inc
lea
insl
sbb
stos
cs
cwtl
scas
jecxz
lcall
out
or
xor
fs
sti
in
fbstp
inc
pop
xchg
scas
cmp
pop
sub
movsl
lods
dec
cmpsl
stos
les
xchg
shlb
push
push
repz
jg
fdivs
lods
imul
popf
sub
dec
jae
fbld
dec
xor
mov
fldcw
ret
jl
iret
aam
cmp
gs
mov
dec
mov
xchg
mov
movsl
ficoml
adc
ljmp
out
icebp
or
jg
addb
stos
lahf
mov
mov
push
loop
enter
mov
push
in
aas
arpl
inc
aaa
dec
jg
mov
dec
pop
or
stos
mov
inc
mov
addr16
and
and
mov
or
pop
into
je
lret
and
faddl
mov
push
pop
xor
ja
nop
pop
out
neg
cmp
scas
xchg
inc
mov
jnp
push
mov
dec
data16
je
rorl
popf
outsb
movsl
ja
sub
jns
or
or
out
sub
repnz
movsl
inc
stos
mov
mov
xchg
jmp
dec
in
pop
pop
ds
mov
add
cmp
mov
dec
and
dec
dec
xor
mov
frstor
push
add
xchg
jmp
cmpsl
xchg
or
in
inc
or
sti
stos
xor
ljmp
jno
jg
data16
into
jae
movsb
lahf
insl
sbb
scas
sub
out
out
mov
repz
stos
adc
aam
lock
mov
xchg
sti
icebp
push
cmp
in
ret
sbb
js
cmp
cs
hlt
mov
aam
scas
enter
cli
jae
sub
xchg
mov
dec
mov
imul
mov
aaa
fldln2
lds
adc
popf
cmpsl
aas
lds
and
insb
clc
popa
out
aas
and
jno
scas
test
test
xor
mov
loope
dec
dec
cs
add
adc
xchg
mov
cmpsb
nop
inc
test
mov
out
dec
andl
insb
fsave
sbb
sbb
les
jp
les
mov
out
in
cmp
pusha
roll
or
fsubrl
pop
repnz
sarl
pandn
jle
or
std
out
hlt
mov
icebp
rolb
inc
repz
jbe
insl
call
jne
adc
jae
jne
mov
daa
sub
dec
adc
sahf
cmp
scas
cltd
xchg
lcall
jecxz
push
aas
out
dec
jns
push
cmp
sub
adc
int3
sub
xlat
sahf
add
imul
sahf
push
inc
out
push
pop
es
sub
rcr
seta
or
cmpsl
lods
lds
int3
ds
test
imul
imul
add
inc
xchg
les
xor
mov
arpl
scas
xor
push
aad
jb
pop
enter
fnstcw
jp
lcall
xor
orb
mov
inc
aam
shll
mov
mov
sbb
testl
mov
jae
pop
inc
adc
enter
clc
mov
clc
mov
sub
lock
cmpsl
mov
cmp
jns
mov
sub
sub
dec
mov
stc
andb
sbb
fcompl
leave
push
cmp
outsb
jp
jo
mov
add
psraw
mov
lret
dec
and
std
pop
imul
xchg
jo
pop
pop
sub
mov
add
fisubrs
pop
shrl
addr16
push
fldcw
subl
rorb
clc
mov
push
test
xchg
inc
xor
xor
pop
cs
inc
or
push
pop
inc
xchg
or
mov
or
adc
psubd
fcomp
mov
iret
jbe
pop
xchg
lea
mov
dec
cs
jmp
inc
mov
xchg
sahf
add
adc
inc
xor
mov
outsb
dec
cmc
cmpsl
cmp
xorb
add
imul
loope
nop
add
or
ljmp
jecxz
add
stos
outsl
aas
cmpsb
mov
add
cmpb
dec
shrl
fsub
push
push
pop
mov
lahf
dec
cmp
mov
sub
leave
cmp
push
push
and
and
call
pop
xchg
xchg
mov
fs
cmpsb
cmpsb
push
imul
das
scas
repz
clc
pop
pop
and
jmp
inc
mov
pop
xor
inc
cmp
push
sbb
cmp
mov
out
mov
cmp
add
cmp
mov
cld
push
push
sarl
movsb
pushf
jmp
and
cmp
adc
xlat
sub
mov
imul
cmp
cwtl
insw
iret
scas
fisubl
pop
outsl
inc
out
lea
mov
out
movsb
rol
xchg
jecxz
inc
xchg
push
lret
pop
and
loop
xor
mov
sub
loop
stc
mov
mov
jle
push
or
out
mov
int3
mov
std
inc
push
inc
arpl
dec
add
out
push
in
pop
push
cwtl
jge
xlat
or
mov
daa
aad
and
add
cwtl
dec
icebp
arpl
mov
inc
mov
mov
add
fldenv
cmp
or
add
or
cmp
loop
or
dec
jecxz
fwait
outsl
loop
xor
inc
in
into
pop
jecxz
icebp
in
sub
push
mov
enter
fisubrs
and
dec
insb
mov
push
aas
pop
jo
pop
dec
push
push
pop
jge
movsl
aam
lock
js
insb
push
das
iret
pop
sbb
add
call
xchg
inc
iret
push
xchg
xchg
hlt
clc
aad
pop
mov
imul
adc
jmp
fsts
sbb
dec
inc
cmp
push
jecxz
call
jmp
loope
arpl
add
sbb
lock
bound
pop
test
cmp
nop
pop
pop
jge
xchg
and
shrl
push
fisttps
cmc
push
inc
sbb
push
cltd
pop
out
push
mov
int3
bound
rcrl
test
push
xor
push
or
mov
arpl
inc
fwait
in
test
call
in
lcall
mov
jno
mov
cmp
cwtl
sti
cli
pop
sti
xchg
and
cmpsl
xchg
pop
add
ljmp
mov
js
mov
ret
bound
cmp
pop
xor
cmc
mov
cmp
in
addl
pop
xchg
mov
shlb
in
repz
mov
mov
imull
cmp
fwait
movsb
inc
jle
daa
and
lods
sbb
rcrl
in
dec
fimuls
pop
cmp
divl
fdivrl
das
dec
xchg
cli
addr16
add
and
fdivrl
ds
xchg
loope
xchg
jmp
pop
jo
out
shll
loop
call
sub
push
mov
cmp
pop
cltd
jmp
shl
mov
jne
adc
add
xorl
cld
mov
jge
or
int
sahf
mov
pop
xchg
or
cmpsb
xor
movsl
xchg
jb
jmp
ret
imul
mov
xor
cs
popa
xor
movl
pop
xor
cmp
dec
enter
scas
add
lahf
mov
iret
inc
mov
dec
insb
movsl
rorl
fcmovbe
je
addl
fldl
fmull
sub
inc
jmp
faddl
xchg
imul
jb
inc
push
push
rolb
mov
sbb
test
leave
and
lock
fildll
pop
call
adc
jno
repz
add
push
push
or
push
stos
pop
push
cmp
xor
and
jae
dec
mov
outsb
push
in
rol
subl
jmp
aas
mov
xchg
fisubl
es
daa
xor
push
xor
push
nop
push
add
inc
mov
mov
mov
push
cmpsl
mov
pop
stc
mov
add
shr
xor
movsl
mov
and
pusha
js
stc
mov
adcl
dec
in
adc
jns
or
push
push
pop
test
push
outsb
loop
stos
pop
iret
add
fisubl
xchg
and
mov
jnp
aas
xchg
xchg
imul
and
xor
push
dec
pop
pop
stos
push
subl
and
int3
add
inc
inc
je
xchg
adc
mov
pop
lahf
daa
jecxz
mov
or
imul
mov
repnz
repz
jns
jmp
and
mov
cwtl
jmp
hlt
test
inc
xchg
ret
jne
in
xor
aam
les
and
out
inc
xchg
and
inc
loop
xor
cli
dec
data16
push
xor
cmp
mov
loop
jg
mov
pop
and
pop
in
mov
push
push
aam
mov
cmp
sbb
enter
push
mulb
inc
test
add
mov
inc
testb
xor
test
pop
lock
jmp
or
or
xor
je
arpl
out
dec
mov
jl
and
in
and
dec
fcompl
jp
aas
pushf
or
or
xor
test
js
xchg
sbb
test
xchg
push
jecxz
loope
outsl
sub
mov
cmp
and
xchg
and
shlb
out
push
test
outsl
jecxz
lret
stos
mov
enter
pop
fdivrs
popa
mov
icebp
inc
mov
nop
dec
and
lea
pop
xchg
mov
jmp
jg
pop
out
adc
movsb
fdivrl
pop
and
and
add
adcl
mov
inc
out
mov
fimuls
xor
das
mov
fdivr
dec
jle
dec
es
or
lret
mov
push
lcall
arpl
xchg
lcall
loop
fldl
imul
adc
aaa
cli
push
out
ret
xor
cltd
test
or
jno
fwait
add
shl
cmpsl
sahf
cltd
andl
aaa
outsb
frstor
dec
daa
mov
shll
and
test
les
and
lods
shrb
or
fistps
push
jno
or
sbbl
xchg
loop
push
inc
pusha
mov
dec
cmp
std
xchg
sub
repnz
cmp
orl
divl
and
cmpsl
ret
call
jne
neg
test
jge
cmp
sbb
pop
xchg
leave
or
in
and
les
xlat
push
pop
cmp
inc
mov
loop
fldenv
push
pop
and
sub
pop
enter
lahf
fstpl
mov
les
and
jge
mov
dec
cmpsl
sbb
inc
je
mov
pop
pop
pop
jp
mov
mov
ret
sub
mov
xchg
mov
fcomi
popa
pop
pop
sbb
das
xchg
frstor
dec
push
popa
shr
mov
shl
aaa
mov
cwtl
pop
lret
fidivrs
add
fidivrl
popf
mov
les
add
add
aam
lret
mov
cmp
lds
in
xor
cmp
lahf
jge
sub
and
xor
and
ret
sub
cs
clc
push
stos
jae
add
push
xor
cld
das
pop
push
xor
aad
stos
cmp
dec
xchg
cmp
mov
int3
push
inc
repnz
div
push
and
jp
insb
nop
fiaddl
sub
jecxz
sahf
pop
dec
and
xlat
mov
mov
imul
mov
fimull
nop
mov
je
add
inc
pop
icebp
imul
mov
das
shll
push
add
cmc
adc
xor
ljmp
lahf
call
in
enter
int3
push
stc
ret
fwait
or
mov
std
outsb
subl
jge
and
lahf
addr16
int
in
pop
mov
lds
subb
icebp
aam
jne
dec
arpl
stos
scas
idivb
xchg
mov
jecxz
inc
jne
gs
and
pop
or
sbb
lahf
inc
cmp
adc
xchg
push
stos
push
je
leave
je
cld
ss
stos
adc
ljmp
cmpsl
les
aaa
mov
js
cbtw
dec
mov
imul
pop
daa
lret
jae
cmp
add
push
shlb
push
in
fsubrs
fwait
rolb
pop
xchg
dec
push
pop
inc
cli
gs
cwtl
jo
pop
lahf
push
nop
push
repnz
cmp
aas
jp
mov
fisubrl
fildll
clc
sbb
icebp
push
loope
pop
mov
mov
pop
popa
fs
sarl
push
push
xchg
sbb
mov
inc
fstpt
mov
xor
sub
lods
gs
lret
por
aam
sahf
imul
repnz
inc
or
int
inc
mov
iret
sti
cwtl
stc
push
dec
add
and
fcomps
sti
sub
lods
ja
flds
sti
push
jae
pop
ffreep
les
inc
push
mov
or
mov
int3
faddl
lea
roll
xor
ja
popf
outsb
jp
insl
mov
mov
fimull
call
jg
inc
or
imul
cli
int3
lock
out
add
enter
cmpsb
jle
cld
mov
jns
pop
cs
mov
scas
mov
inc
daa
popf
jge
pushf
pop
inc
xchg
sahf
ds
mov
call
jno
fwait
mov
mov
sbb
pop
aas
idivl
mov
out
int3
insl
add
mov
dec
cmp
pop
add
es
sarb
scas
sub
inc
jnp
arpl
lcall
mov
fsts
pushf
pop
sbb
ret
push
mov
and
sub
fucom
xor
add
cwtl
arpl
or
add
jns
xchg
jns
aam
push
pop
jae
ss
ljmp
and
sarb
jecxz
sub
call
dec
movsl
pop
lahf
pushf
adc
dec
pop
inc
aad
xchg
jge
cmp
aas
in
leave
jge
iret
aad
adc
insl
sarl
dec
push
push
push
mov
mov
stos
std
cwtl
pop
rcll
xchg
push
sub
adc
mov
movhps
push
and
jb
add
scas
test
mov
imul
stos
adcb
cmp
push
fidivrl
movsl
mov
cltd
lcall
sar
aaa
mov
inc
out
out
jg
pop
aam
test
sub
or
ds
arpl
add
adc
xor
out
in
adc
lahf
jbe
pop
sub
leave
jno
xchg
lahf
mov
addb
mov
rorl
mov
clc
addr16
cmpsl
cmc
mov
mov
push
mov
jg
daa
add
filds
ljmp
stos
jg
les
mov
jne
in
je
ljmp
jb
push
int
lds
jmp
push
in
vmwrite
aaa
fwait
push
add
ljmp
add
repnz
out
sarb
lock
sub
stos
test
xlat
jbe
push
add
fadds
adc
push
in
into
mov
and
jbe
and
dec
int
mov
push
xchg
mov
add
and
push
aaa
mov
pop
insb
clc
pop
ja
pop
cmp
sbb
or
and
cmpsl
inc
aas
push
divb
cmp
mov
dec
data16
mov
shrb
repnz
imul
std
in
mov
imul
mov
iret
sbb
cwtl
cmpsb
jg
scas
jp
mov
lahf
loop
add
mov
fsub
jmp
sbb
lock
jo
cld
xorl
sahf
push
rclb
or
ljmp
sub
inc
sbb
xchg
jp
inc
xchg
test
gs
mov
fdivrl
jns
add
sub
int
sbb
lahf
inc
jp
cmp
mov
cli
lods
and
cld
in
dec
cvtps2pi
mov
ss
test
gs
dec
fs
mov
xchg
cmc
rolb
jno
cmp
cwtl
movsl
jno
and
mov
sub
mov
aas
in
ds
repz
pop
mov
ficoms
lcall
out
pop
cmp
lea
jge
repnz
and
and
adc
jmp
incb
or
cmpsb
insb
lcall
mov
or
or
aas
push
test
dec
mov
jbe
ja
pop
jns
sahf
xor
js
cmp
pop
or
or
mov
mov
enter
mov
sbb
add
in
sub
loopne
xchg
insl
push
xchg
test
mov
pop
negb
imul
andb
push
dec
inc
and
out
cmc
scas
push
pusha
inc
mov
lret
icebp
dec
cmp
cli
lea
dec
mov
push
sahf
inc
jg
mov
test
add
imul
hlt
or
jo
mov
sbb
je
dec
mov
loope
out
dec
in
lods
pop
cmp
sub
xor
imull
sbb
push
push
sub
sti
add
dec
pop
movsl
subl
fidivrs
jp
inc
cmpl
inc
mov
orl
pop
sub
mov
std
adc
cltd
cld
mov
jl
and
roll
mov
xchg
outsl
sarb
add
fldl
out
in
fcomip
pop
jb
xchg
mov
fadd
out
push
loop
shl
cmc
mov
fistpll
lds
mov
imull
xchg
jl
pop
arpl
ljmp
sub
stos
mov
sub
hlt
andl
icebp
add
jbe
subl
lahf
das
push
mov
lods
push
popa
xchg
mov
loop
pop
pop
insl
xor
mov
movsl
cmpsb
ja
cmpsb
adc
sub
imul
sti
ss
push
jns
dec
rorl
shrl
in
jmp
adc
add
dec
jb
inc
lods
loop
negl
repz
aas
in
test
push
sub
stos
pushf
leave
mov
adc
shrl
lea
test
xchg
into
into
pop
out
and
stos
push
mov
mov
mov
dec
cmp
mov
shrl
sub
push
xchg
pop
cmp
rcrl
mov
pop
sbb
loopne
in
dec
xlat
inc
adc
push
xchg
adc
sarb
mov
jnp
or
ja
lock
mov
int3
adc
dec
xchg
jae
sub
mov
pop
inc
xchg
movsb
pop
stc
ss
sub
push
jo
dec
aas
inc
and
daa
dec
adc
movsb
test
icebp
cwtl
sbb
and
rcrl
rcrl
pop
addb
mov
mov
jp
negl
inc
pop
cmp
mov
or
out
sub
daa
push
mov
push
xchg
mov
cmp
add
dec
sub
clc
pop
inc
clc
stos
dec
sahf
int3
sub
mov
mov
xchg
fcoml
pop
push
mov
xor
mov
out
mov
cmpsl
aad
mov
push
sub
jl
jp
into
mov
cmp
inc
mov
loope
push
and
and
sbb
js
cmp
jns
cmova
shrb
jle
xlat
jp
mov
and
into
adc
xchg
cmp
popa
xor
imul
pop
scas
xlat
icebp
stos
lcall
add
sarl
fidivrl
cmpsb
hlt
neg
divl
cmp
push
fadds
inc
bound
ja
sub
addr16
or
xor
lahf
push
nop
dec
loop
ds
lahf
mov
fldl2t
popf
cmp
ds
cld
movsb
lds
hlt
stos
daa
sub
xor
sbb
cmpsl
packsswb
pop
pusha
stc
mov
out
jmp
mov
cmc
xchg
jbe
mov
pop
lahf
sub
lods
cli
adc
jns
dec
adc
int
out
or
popf
sub
mov
icebp
adc
fdivrs
xchg
cmpsb
mov
jp
lret
adc
xor
cmp
pop
out
cld
into
mov
in
andb
iret
lea
xchg
and
fdivrl
test
push
mov
fstl
scas
imull
popa
ds
sbb
xchg
sub
adc
add
cmp
add
jmp
mov
or
push
hlt
adc
add
xchg
in
ja
push
xlat
in
adc
push
pop
sbb
jae
scas
ffree
or
xchg
mov
and
stc
adc
mov
hlt
cmp
divl
jg
mov
loope
nop
xor
enter
mov
pop
xchg
jno
bound
sahf
lods
dec
sarb
aaa
icebp
adcb
or
div
adc
inc
pop
sub
aad
mov
adc
fs
ja
out
push
icebp
mov
cmc
arpl
bound
pop
mov
jns
push
xchg
arpl
mov
es
roll
lret
xchg
cltd
das
or
xor
pop
cmp
sbbb
sbb
out
sub
xchg
lea
test
imul
fldt
loope
xor
xor
push
add
out
fbstp
mov
adc
pusha
mov
in
mov
pop
dec
stos
divb
cmp
call
cld
cmp
andl
xor
fimuls
popf
xchg
pop
mov
leave
and
test
jle
pushf
fldlg2
xchg
outsl
lret
rorb
int3
or
mov
das
xchg
sar
lock
jg
stos
subl
xor
jl
mov
adc
push
cs
sti
repz
pop
loopne
add
mov
push
outsb
xor
imul
data16
mov
idivb
mov
sbb
pop
lret
in
aam
out
insb
js
jbe
ret
out
aas
push
stos
mov
jp
sarb
dec
int
aas
popa
and
xchg
in
mov
scas
cmp
sub
sub
stc
in
mov
inc
nop
lret
ret
ja
notb
xchg
adc
rorl
jnp
mov
adc
stos
js
insb
jmp
or
nop
adc
and
outsb
mov
sbb
add
add
pop
into
lahf
push
lods
pop
add
mov
fwait
roll
nop
jb
cmpsb
lcall
andl
shlb
inc
pop
mov
inc
ret
out
and
adc
lock
rcrl
xchg
push
call
int3
xchg
neg
pop
movsl
inc
pop
push
fld
call
gs
pop
mov
xchg
xchg
pop
add
mov
push
imul
loop
ljmp
insb
addr16
imul
push
adc
imul
adc
pusha
and
out
or
nop
adc
push
mov
sub
cmp
dec
repz
test
dec
into
lods
in
jb
xor
add
mov
dec
sbb
adc
pop
pop
lcall
inc
enter
cmpsl
add
fst
pop
in
xchg
shl
insb
hlt
popf
sarl
lret
out
adc
xchg
mov
divb
pop
in
mov
cmp
push
insl
inc
daa
cs
xor
test
pushf
std
sahf
mov
movsl
and
cmp
call
cmp
out
mov
ds
lods
sub
bnd
cmp
popf
or
push
xchg
in
add
pop
jne
cwtl
dec
clc
ficompl
std
vandps
adc
in
fwait
mov
and
stos
xor
sbb
lcall
fisubs
xchg
cwtl
dec
push
loop
xchg
movsl
cmp
push
outsl
mov
lock
int3
loopne
aaa
test
xchg
loope
mov
out
in
cmp
test
lds
pop
testl
lcall
add
xor
pop
pushl
aad
movsl
lods
int3
jb
sub
fsub
daa
dec
int
stos
lds
bswap
mov
and
sar
pushf
jno
mov
dec
mov
and
mov
inc
out
out
repnz
inc
add
mov
add
sbb
aaa
push
and
out
inc
sbb
jmp
dec
mov
clc
adc
xor
xor
sbb
xchg
fwait
fwait
pop
or
test
cs
push
les
sub
or
mov
xor
sub
cmp
sub
jmp
add
xor
and
decb
sub
nop
nop
loopne
mov
push
shlb
dec
pop
jp
sbb
jns
enter
mov
cmp
cmc
adc
pop
clc
xor
out
and
jg
std
stc
sbb
hlt
mov
cmp
pop
mov
xchg
sbb
in
mov
mov
cmpsl
cli
cmpsb
or
inc
cmp
jecxz
sub
pop
rol
iret
push
inc
mov
ficoms
out
aad
loop
jle
or
xchg
dec
cmp
jno
aaa
dec
pop
mov
fs
mov
cmpsl
dec
jecxz
xchg
pop
xchg
dec
push
std
loop
scas
std
mov
loopne
fs
cld
mov
push
fwait
dec
xor
fcomip
sbb
inc
push
mov
jnp
imul
push
insb
xor
int3
xor
cltd
pop
sbb
insb
in
jmp
cmp
or
into
in
mov
lock
cmp
and
aad
bnd
xchg
scas
pusha
adc
bound
das
pushl
clc
mov
mov
mov
and
outsb
dec
inc
mov
fsubp
mov
push
push
and
nop
fildl
inc
call
pop
aas
push
sti
gs
xor
test
lds
lods
fistl
popf
and
aad
das
xchg
testl
in
subb
sub
mov
dec
pop
pop
lcall
jge
push
dec
std
xor
out
fstps
sbb
sbb
cli
adc
testb
pop
mov
push
lret
sarl
cmp
sbb
mov
adc
test
mov
sub
orl
iret
sbb
and
stos
xor
mov
iret
pop
xchg
out
enter
xchg
test
dec
xchg
int
out
movsl
loop
aas
cmp
xchg
imul
pop
jne
arpl
adc
cwtl
mov
lcall
aam
push
add
ret
xchg
popa
lcall
in
testb
ret
xchg
push
test
mov
push
push
ret
lods
add
mov
push
pop
jle
sub
mov
jle
int
bound
or
mov
push
xchg
inc
shr
pop
add
cwtl
data16
test
and
repz
test
adc
push
hlt
mov
add
add
or
push
jns
out
icebp
add
das
pop
jnp
pop
jbe
dec
dec
shrl
lds
cmpsb
jle
icebp
jl
cmp
pop
or
xchg
xchg
lods
mov
mov
bound
sbb
jl
xor
mov
mov
sbb
push
sbb
sbb
push
lahf
xchg
inc
sarb
mov
mov
pusha
sbb
leave
loop
arpl
fwait
cs
aas
fwait
mov
mov
jp
push
adc
jl
adc
inc
repnz
sbb
jno
fwait
bound
lahf
sar
cltd
in
adc
out
into
mov
enter
push
jae
in
mov
xchg
cmc
arpl
inc
fs
pop
ljmp
and
cmpsl
adc
mov
jo
loopne
and
inc
das
lods
mov
outsl
push
loope
xchg
jns
add
icebp
mov
aad
repz
sbb
xchg
mov
lock
dec
sbb
lcall
push
std
les
and
mov
cmp
pop
test
sahf
popw
adc
and
sahf
push
and
and
push
int3
ds
push
mov
in
mov
cld
scas
into
imul
push
xchg
xor
loop
inc
push
imul
std
fwait
call
out
inc
dec
inc
ret
jo
cmp
jbe
loope
sbb
iret
imul
jo
cmp
in
xchg
daa
xor
mov
adc
loop
jp
popf
pushf
xor
add
add
lcall
mov
jl
add
in
mov
inc
mov
push
inc
jbe
cmp
add
out
sbb
aaa
ret
adc
lret
lock
pop
mov
ficoms
or
les
jnp
mov
push
pushf
das
dec
mov
mov
mov
mov
fwait
dec
movsb
fscale
pop
mov
or
insb
ss
repnz
pop
js
cmpsl
icebp
popf
icebp
mov
cmc
jp
mov
mov
mov
push
ret
idivb
and
test
mov
fsts
in
or
sbb
aad
jl
out
and
test
xor
lods
lock
push
mov
xchg
hlt
dec
add
xchg
popf
dec
adc
js
xchg
push
dec
mov
cli
sti
xchg
mov
cmpsb
das
push
or
lds
and
aam
imul
int3
mov
arpl
add
cmpsb
loopne
fisubs
xor
lods
in
sub
pop
dec
push
add
jae
dec
cmp
sahf
xor
fcom
je
pop
push
inc
lahf
jecxz
roll
dec
ss
jle
xchg
mov
fildll
addr16
cmpsl
dec
add
sub
jmp
nop
cmovs
or
out
jne
adc
pop
and
movw
jns
mov
scas
popa
push
cmc
jno
sub
scas
cmp
jl
sub
decb
in
mov
int3
xchg
imulb
lods
and
cwtl
pop
sti
fists
test
out
rolb
mov
sbbl
inc
mov
les
push
mov
sbbl
lods
fdivp
sbb
les
int
pop
pop
orl
and
cmc
clc
mov
dec
add
fisttps
ret
scas
repnz
push
rcrb
dec
testl
adc
call
lret
leave
push
inc
js
push
mov
jg
insb
outsl
and
dec
lods
orl
in
inc
lock
pop
cld
in
jmp
aam
mov
sub
sbbb
mov
in
rcrl
push
adc
push
mov
push
mov
dec
in
jnp
std
mov
or
sbb
jmp
mov
push
adc
jne
sti
daa
rorl
lea
jmp
lahf
or
and
sub
popf
push
aaa
ret
adc
daa
xor
sub
xchg
hlt
out
std
dec
fstpl
ljmp
arpl
add
sbb
jb
or
push
bound
mov
mov
test
cmp
xor
inc
xor
xor
jmp
sbb
pop
call
cmp
push
pop
js
pop
enter
shll
test
out
cmpsb
cltd
jmp
cld
pop
movsl
pop
dec
lds
imul
lea
or
inc
or
shlb
ret
push
fcmovb
popa
ret
rcl
into
lods
jb
adc
adc
and
xchg
sti
outsb
movsl
fisubrl
dec
pop
repnz
push
outsl
xor
lds
or
les
or
lret
arpl
mov
jb
or
mov
pushl
push
leave
test
adc
sar
adc
nop
mov
les
movsl
cmpsb
dec
or
ds
xchg
subb
push
iret
js
rorl
or
mov
or
aaa
scas
adc
inc
inc
xor
dec
mov
cmp
push
mov
idiv
xor
nop
decb
popf
ret
sub
sub
xchg
mov
pop
rcll
decl
fidivrl
in
imul
icebp
rclb
hlt
lods
fs
insb
and
pop
out
cmp
fmulp
scas
push
loop
cmp
mov
inc
insb
xchg
clc
ror
mov
loope
inc
sbbl
dec
out
out
or
cli
jbe
arpl
sub
lods
sub
in
lock
ds
jl
xor
pop
aas
and
je
sub
stos
in
insl
int3
mov
push
lret
mov
out
imul
jg
jne
lock
pop
dec
pusha
jecxz
das
inc
pop
and
pop
inc
jmp
addr16
dec
ffreep
cmp
sbb
cmp
cld
shr
add
xor
mov
push
shll
notl
out
bound
fs
movups
sub
ss
add
push
mov
ret
xchg
shrb
pop
xchg
mov
aad
add
adc
push
int3
jl
stc
dec
mov
adc
icebp
inc
mov
mov
rcl
inc
das
lret
das
imul
adc
test
cmpsb
pop
out
jl
aad
jb
pop
les
lahf
repnz
inc
jle
fistpll
pop
push
icebp
and
fbstp
imul
jg
jnp
orb
loopne
jbe
dec
cmp
mov
daa
mov
call
jp
dec
xor
xor
sbb
mov
push
negb
leave
insl
ret
cmp
xchg
mov
push
lret
gs
mov
and
cmp
xchg
fbstp
testb
push
fwait
xor
push
jno
daa
ss
fbstp
mov
pop
jo
cmp
xor
and
pop
repz
push
add
xchg
jns
sbb
mov
push
sbb
mov
aad
gs
rclb
imul
loop
mov
sub
push
je
push
cmp
add
sti
int3
imulb
scas
dec
sub
stos
in
repz
fstl
cmpsl
bound
cmp
lret
sti
sbb
loop
and
imul
adc
les
push
or
cmp
mov
iret
clc
push
cli
in
mov
stc
imul
push
push
push
cmp
xor
add
jbe
jbe
repnz
xchg
and
cld
pushf
dec
das
test
popa
repz
mov
push
mov
push
or
outsl
sub
inc
mov
push
pop
mov
cmc
int3
jmp
add
out
add
push
push
mov
popa
in
adcl
out
fxch
in
pop
sub
addr16
aas
push
jg
push
js
fnclex
dec
mov
cmp
inc
mov
xchg
daa
push
dec
or
imul
mov
xchg
adc
addb
in
jle
aam
pop
lea
cmp
and
sub
inc
andl
addl
dec
rcll
ffree
add
or
stc
imul
popf
cmpb
cld
push
adc
mov
jb
testl
pop
cmpsb
daa
addr16
shlb
loope
xor
adc
cmpsl
inc
push
int
xchg
enter
mov
daa
and
sbb
xlat
sub
sbb
scas
imul
sub
pop
ljmp
jo
movsb
mov
stos
jecxz
das
xchg
mov
inc
addr16
xor
orb
sbb
xchg
mov
stos
std
mov
rclb
or
stc
filds
je
faddl
movl
lret
and
lods
adc
adc
fiaddl
push
dec
mov
mov
das
xor
movb
mov
pop
adc
jle
addl
jmp
sbb
cmpsb
ja
cs
sub
fwait
aam
push
and
sub
adc
popf
call
mov
cmpsl
jnp
aad
sahf
notb
mov
scas
inc
sbb
jg
adcb
out
fdivr
jb
push
dec
call
cmpsb
jns
into
cmpsl
push
bound
aaa
or
push
test
adc
or
in
rcrl
mov
rclb
fs
icebp
out
dec
pop
cld
stc
jne
test
mov
add
xchg
movsb
movsl
xchg
adc
xor
adc
pop
lds
test
cmc
mov
lods
adc
rorl
imul
sbb
push
pushf
in
in
cltd
or
xor
or
cmp
sbb
mov
xchg
lods
mov
outsb
daa
add
cld
jle
jge
mov
add
lahf
insl
mov
lods
stc
xchg
adc
xchg
das
fnstcw
das
icebp
cmp
push
cmp
pop
jb
gs
or
jg,pt
cs
test
push
add
xor
jne
in
sub
imull
jb
loope
frstor
mov
sub
mov
mov
out
and
out
fmul
or
fs
ret
mov
mov
dec
sbb
xchg
mov
stc
cmp
mov
stos
mov
or
jle
js
sbb
gs
fldl
xlat
cs
imul
test
and
inc
imul
mov
adc
push
scas
xchg
fwait
push
fs
jle
loop
sub
pop
inc
push
inc
sub
das
scas
xchg
xor
mov
aaa
push
pop
pop
daa
out
or
lret
or
xchg
cmpsl
and
insb
xchg
int3
mov
add
inc
ja,pn
mov
imul
ret
dec
ficomps
xchg
imul
jp
lcall
mov
jbe
inc
repnz
pop
add
mov
fisubl
mov
inc
xlat
mov
add
stc
test
push
lahf
test
jl
in
mov
mov
xor
aas
enter
inc
je
in
jp
scas
mov
loopne
in
jp
gs
pop
lock
sub
ljmp
stc
mov
std
outsb
push
adc
js
xorl
pushf
mov
push
push
fmull
xchg
rclb
xor
data16
sbb
sbb
fmulp
js
xor
sub
nop
repnz
jae
clc
jl
int
sti
in
ds
cld
push
add
inc
and
gs
dec
mov
and
dec
add
cmpsl
imul
into
inc
mov
roll
adc
cmpl
inc
mov
jecxz
test
mov
or
in
adc
lods
lret
inc
pop
nop
cltd
fstpt
rcll
roll
xor
add
sub
bound
lcall
push
std
addr16
xchg
dec
bound
fwait
or
fwait
std
lahf
xchg
push
shlb
stc
mov
mov
int3
hlt
xor
mov
mov
lds
mov
or
mov
sub
inc
adc
addr16
push
insb
cmpsb
sub
mov
jp
pop
jns
dec
or
xchg
test
addr16
adc
and
push
aas
add
cmpb
jb
mov
mov
xchg
jg
outsb
push
jae
mov
sti
pop
jae
pop
cltd
mov
testb
bound
aam
sbb
sbb
add
sbb
jl
sub
imul
adc
adc
cmpb
loop
cmp
aam
call
das
dec
cld
jnp
mov
incb
pop
outsl
ljmp
fwait
xchg
lods
out
into
addb
fsubrl
xchg
jno
sbb
je
mov
pop
int3
inc
insl
mov
fistpl
fcomip
push
leave
add
fsubl
push
test
and
out
adc
add
fucomip
add
icebp
rcll
xchg
repz
pop
and
in
jno
orb
cmc
out
mov
fwait
sarl
add
out
mov
mov
mov
ljmp
mov
nop
repnz
out
and
xchg
or
jno
cltd
cmpsl
movsl
and
popa
jl
jg
outsb
orb
std
mov
xchg
mov
push
xor
add
mov
xchg
vpermilpd
jge
mov
fisubrs
add
daa
lds
loop
inc
out
outsl
repz
pop
les
fnstsw
dec
mov
sbb
sarl
mov
jo
cltd
pop
or
cltd
and
lret
or
cmpsl
outsb
shll
inc
or
mov
inc
xchg
sbbb
xor
pop
icebp
repnz
shlb
fdiv
cmp
int3
pop
sbb
sbb
sub
repnz
pop
add
gs
mov
std
leave
test
lret
mov
cltd
into
lock
and
cmp
pusha
pop
pop
adc
xchg
shll
mov
xor
jecxz
push
sub
add
mov
insl
mov
sub
or
and
stc
stos
dec
int3
in
mov
pop
call
adc
popa
mov
or
test
movb
imull
arpl
outsl
or
jl
lcall
adc
int3
pop
cmp
vunpcklpd
push
sbb
dec
cmp
aas
xchg
push
rorl
js
icebp
test
shrb
clc
sbb
test
hlt
ss
inc
and
jmp
hlt
adc
mov
xor
push
mov
pop
push
inc
jo
push
arpl
xchg
insl
test
bound
xor
fldz
ds
call
sbb
call
and
cmp
mov
cmpsl
out
push
sarb
pop
test
fdivr
jb
nop
dec
inc
push
and
in
xchg
ljmp
scas
mov
xlat
fs
fstl
lea
pop
jb
les
lret
fsubp
out
leave
inc
mov
scas
xchg
sbb
icebp
jmp
repnz
jl
cmp
ljmp
adc
dec
xlat
nop
cmp
iret
xchg
mov
mov
dec
dec
dec
imul
cmpsb
cmp
stc
nop
leave
and
sbb
add
scas
nop
repnz
cmpsb
or
repnz
stos
shrb
stos
jle
call
mov
movsb
inc
cmp
jecxz
outsb
cmp
adc
subb
movsb
daa
int
and
xchg
fs
inc
movsl
dec
mov
aas
pop
sbb
mov
mov
popa
notb
sbb
jnp
xor
mov
rcr
sbb
rolb
mov
out
push
imul
add
push
subb
test
ret
push
ljmp
mov
jmp
pushf
popa
icebp
or
xrelease
jno
and
mov
insl
xor
repnz
xor
popa
dec
cmp
jb
cld
mov
mov
dec
aam
pop
repz
daa
rolb
fisubrl
ss
rol
fmull
lahf
aad
dec
lea
enter
mov
mov
sub
jns
gs
pop
mov
mov
jecxz
xchg
shrl
push
jns
mov
out
push
mov
lock
push
scas
adc
adc
stos
cmpl
mov
loop
lock
ret
pop
repz
ds
ret
mov
divb
xor
lcall
or
subb
jmp
jle
ficompl
cmp
dec
xchg
xor
inc
clc
int3
rcl
mov
push
pop
mov
test
or
out
fnstsw
push
jmp
testb
jnp
call
imul
mov
aaa
jae
insl
out
adc
jl
nop
in
sbb
test
cmp
inc
mov
outsl
sub
jno
mov
rcll
repnz
jmp
mov
pop
or
pop
rol
and
mov
mov
xor
adc
test
aam
gs
mov
xchg
push
div
fnstsw
js
repz
jno
es
mov
shrl
lea
int
mov
sbbl
rcr
aaa
hlt
inc
lods
mov
mov
imul
mov
sub
jbe
or
add
pop
push
xchg
or
xor
add
push
pop
scas
andb
orb
pop
shr
fwait
xor
call
sbb
orl
pop
jbe
mov
push
or
test
je
aad
jb
xorb
rclb
or
mov
outsl
pop
aam
cmpsl
inc
jns
aaa
dec
jge
insb
xor
inc
testb
loop
in
push
fs
rcl
sbb
xchg
ret
xchg
jnp
jnp
sub
loope
movsb
lea
adc
hlt
mov
lcall
movsb
into
in
mov
add
or
jp
sub
cli
clc
mov
stc
sub
xchg
rorb
icebp
xchg
or
negl
test
dec
push
lods
adc
sbb
test
mov
dec
mov
fildll
jg
sbb
pushf
pop
pop
loop
cmp
xchg
movsb
jmp
fs
push
outsb
mov
lcall
call
push
repz
jecxz
inc
push
insl
adc
jo
addr16
adc
icebp
data16
cmpsl
js
mov
mov
adc
dec
scas
sbb
fwait
push
mov
aaa
in
jecxz
push
movsl
mov
in
dec
sbb
xchg
lret
movsb
data16
lret
test
cs
cmp
mov
imul
lahf
xchg
xor
shlb
add
in
mov
insb
repz
jmp
pop
aam
aaa
ret
scas
cmpsb
inc
enter
jg
dec
cmp
jns
mov
cltd
sbb
mov
movsb
out
jo
xadd
es
imul
push
adc
jle
ljmp
imull
xor
fs
outsl
mov
test
add
sub
std
data16
jno
enter
inc
mov
pop
cwtl
jl
pop
enter
popa
repnz
in
iret
dec
lret
add
shrb
mov
dec
fwait
lcall
scas
mov
daa
mov
shr
jecxz
ds
mov
xchg
add
adc
push
mov
sub
sub
stc
lods
aad
fcompl
add
and
notb
daa
test
jne
fidivl
pop
aas
mov
pop
enter
int3
push
mov
mov
add
cmp
shll
mov
ficoms
pop
jns
stos
mov
mov
jge
add
in
push
xchg
cmpsl
xchg
test
lock
push
iret
inc
xchg
test
push
or
push
mov
arpl
int3
call
push
fwait
movsb
adc
fwait
sub
inc
adc
jno
jl
jno
cmpsl
xchg
ds
mov
sub
add
or
sarb
mov
mov
shlb
in
fistpll
aaa
cmp
int
mov
xchg
xchg
loope
adc
mov
add
jg
loop
dec
cli
sbb
adcb
leave
dec
nop
fimuls
sbb
insl
sarl
cs
cmp
sub
mov
xchg
insl
push
mov
xchg
mov
xor
adc
movsb
mov
loopne
shlb
xchg
cmp
dec
dec
mov
cmp
es
mov
cmp
arpl
xlat
test
adc
filds
inc
and
mov
sub
stc
outsl
add
andb
push
sub
cmc
push
fs
mov
cmpsl
mov
movsl
vpcmpeqw
push
rorb
sbb
xchg
js
or
mov
out
dec
push
fwait
pop
adc
mov
xorb
aas
dec
push
jge
dec
mov
cmp
sbb
mov
cmp
icebp
add
add
cmp
sub
add
xchg
sub
cmc
aas
insl
cmovg
or
ss
jle
outsl
in
out
in
cmp
xchg
cmc
jge
cmp
pop
sbb
xchg
lds
or
jne
sahf
into
cmpsb
adc
cli
and
aam
loop
arpl
inc
mov
outsb
mov
mov
into
xchg
push
xor
repnz
mov
fs
stc
stc
push
or
stos
insb
ret
lahf
inc
mov
jns
ljmp
sub
pop
ss
rorb
pop
imull
hlt
mov
cltd
add
popf
dec
push
dec
mov
jo
mov
gs
and
dec
jns
sub
jbe
jmp
push
or
scas
jge
xchg
pop
addr16
insl
mov
mov
pop
xchg
dec
sti
sbb
ds
fs
pop
or
push
jp
repz
sbbb
aas
cld
icebp
dec
divb
popf
and
aaa
push
pop
inc
cmpsl
xor
cld
xchg
push
cmp
jmp
and
and
rolb
pop
push
fdivrl
mov
inc
xor
mov
testl
jno
mov
sub
push
pop
enter
data16
cmp
incb
jno
cmc
adc
pop
jl
dec
or
leave
add
ret
pop
jne
mov
add
shlb
test
test
loop
jge
std
mov
jo
cmpsb
sbb
xchg
sub
ret
out
cli
sub
dec
jo
movsb
pop
mov
jge
repnz
dec
movsb
rolb
and
cmp
movsb
fwait
enter
pop
in
dec
or
sahf
test
mov
dec
ds
push
jbe
mov
das
mov
pop
int3
fisttpl
les
inc
ljmp
inc
dec
cltd
std
cmpsb
enter
test
dec
jbe
stos
mov
pop
ret
or
mov
dec
mov
cmp
int3
and
jp
jle
or
clc
add
rolb
insl
adcb
lea
mov
jp
lret
add
jle
jbe
jno
mov
xor
sub
or
cmp
cmp
fistpll
cs
into
sub
std
lret
and
sti
mov
xchg
xor
mov
add
cmp
push
xlat
orb
xchg
nop
loop
jmp
cltd
adc
rcr
sub
movsb
sbb
and
daa
cs
cmp
mov
and
sti
fdivrp
adc
dec
aad
mov
cmc
cmp
and
cwtl
ficompl
hlt
inc
cmp
inc
popa
adc
sarl
xchg
lret
mov
mov
push
fstl
push
addl
and
xor
scas
ja
pop
xlat
jae
push
out
add
mov
mov
lea
sub
clc
push
stos
inc
aaa
mulb
orb
cmpsl
mov
lods
rcl
mov
xchg
xchg
and
xlat
mov
jge
jmp
adc
pushl
pop
cmp
lahf
push
jnp
loope
add
jbe
jge
cli
cmp
add
ja
arpl
add
lret
in
aaa
loop
and
and
mov
mov
negl
popa
jp
mov
cmpsb
push
cmc
pop
push
icebp
xor
cmp
add
das
and
dec
mov
ret
stos
loopne
xchg
mov
or
popa
pusha
push
pop
xchg
jg
sar
std
pop
adc
leave
add
cmpsl
pop
jmp
cld
and
lods
mov
adc
fsubrs
xchg
xor
stc
or
fcoml
add
sahf
in
negb
jno
outsl
xchg
pop
mov
scas
mov
imul
dec
mov
inc
add
pop
popf
jg
push
cmp
pushf
jbe
jns
arpl
ss
add
dec
hlt
stos
and
and
jae
inc
jmp
mov
mov
imul
inc
lahf
pop
adc
push
mov
add
and
push
mov
mov
mov
outsb
negb
mov
and
subb
js
pop
scas
aad
inc
push
xchg
stc
sbb
enter
fisttps
lahf
mov
push
and
jb
jnp
dec
hlt
lods
jae
jge
and
ret
in
std
or
push
lret
iret
mov
xchg
inc
les
mov
cmc
xchg
int
adc
push
sbb
xchg
std
mov
ljmp
dec
filds
xchg
dec
aam
stos
test
xor
adc
lret
pop
jns
add
fcompp
push
mov
dec
call
cltd
aaa
insb
add
and
mov
cmp
pop
test
repz
jb
fimull
fsubrl
cmp
subb
sub
int3
xor
fists
mov
mov
aaa
movsl
jp
dec
jns
sub
aaa
out
fcmovb
mov
sbb
orl
arpl
sub
xchg
pop
loope
and
and
insb
mov
test
mov
cmpsb
sub
bound
hlt
jo
arpl
in
add
test
aas
jns
xchg
fstl
push
mov
xor
mov
scas
std
push
leave
lods
pop
dec
ss
sub
mov
xor
imul
sbb
jb
mov
shl
cmp
loop
aam
mov
cmpl
lret
xchg
push
xchg
dec
fidivrl
xor
cmp
sbb
and
orb
adc
pop
or
lahf
sarb
pop
rolb
in
adc
push
bound
jmp
xor
in
pop
jg
popf
push
mov
daa
out
das
xchg
int3
add
sub
aas
xlat
aas
scas
out
mov
hlt
flds
ret
cmp
mov
movsb
or
cmp
add
inc
xlat
enter
xor
inc
sbb
ret
xor
in
fwait
jae
cmpl
jmp
out
dec
dec
movsl
stos
fwait
aaa
sub
lahf
pop
imull
or
push
push
js
lahf
add
sub
jecxz
add
mov
mov
push
lret
je
jnp
rolb
repnz
add
and
sub
dec
mov
mov
push
out
scas
fcmovbe
adc
cmp
mov
xchg
xchg
subb
daa
sbb
push
dec
cmc
pop
clc
push
push
mov
cmp
les
add
test
out
push
jecxz
pop
inc
movsb
ss
adc
lods
push
push
mov
mov
outsl
daa
add
cld
push
mov
mov
xchg
push
sti
in
in
cmp
pop
clc
ret
sbb
cwtl
sub
test
cwtl
sub
mov
sub
pop
cmpsb
repz
in
cmpsb
pop
xlat
mov
scas
scas
int
or
andb
je
adc
negb
mov
loope
push
std
lahf
pop
dec
add
ja
sbb
jne
mov
outsl
cmp
sub
mov
inc
add
dec
adc
decb
push
pop
int
and
fsubs
sub
adc
fucomi
push
push
lret
mov
dec
loope
es
lret
sub
outsl
loop
lods
jo
fbld
push
pop
inc
out
sahf
outsb
mov
xor
lods
inc
dec
fwait
cmpsl
std
cmp
dec
sbb
mov
sbb
cmc
vunpcklps
sbb
mov
cltd
jmp
imul
xchg
jo
in
jg
fimull
xchg
lea
jp
cmc
shrl
mov
mov
mov
jecxz
xchg
xchg
and
dec
lods
in
daa
push
add
repnz
test
pop
mov
ljmp
insl
xchg
cmp
adc
outsb
adc
jp
dec
add
test
push
pop
dec
push
jno
imul
push
dec
scas
push
stos
sahf
adc
lods
sub
lods
movl
in
pop
dec
xchg
mov
pop
inc
jne
lods
push
xchg
pop
arpl
mov
leave
popl
stc
mov
or
daa
ficoms
movl
xchg
mov
aam
push
int
xchg
sub
or
lock
out
mov
fadds
sub
push
inc
cmpsl
xchg
rorl
adc
xor
orl
test
jo
inc
dec
andb
loop
xchg
adc
jmp
insl
cmp
js
mov
nop
int
and
ds
lods
mov
fs
fwait
inc
insb
push
std
mov
in
dec
pop
rcrb
xchg
inc
fldt
test
es
add
lods
addb
sub
mov
mov
gs
orb
sbb
loope
les
dec
cmp
xchg
or
in
xor
or
adc
sbb
shll
xor
and
and
add
fbld
fsubrs
and
or
sti
inc
fwait
fs
sub
mov
fldcw
daa
mov
lds
aas
leave
xor
or
imul
ss
pop
push
push
ss
jbe
sahf
xchg
fsubs
mov
push
ja
inc
jecxz
mov
add
js
push
push
push
mov
repz
sbbl
fildl
dec
les
jbe
loope
push
mov
sub
mov
daa
push
add
shlb
gs
in
xorl
push
cs
or
inc
fbld
stc
mov
into
divl
lds
adc
mov
mov
pop
popa
mov
loopne
dec
cmp
sbb
test
pop
in
jbe
cmc
mov
adc
dec
inc
pop
mov
negl
xchg
mov
xchg
push
loope
aaa
adc
xchg
test
mov
fcompl
es
xor
lahf
push
mov
gs
adc
stc
sub
mov
pop
fildll
fst
ja
imul
lahf
cltd
push
movl
mov
outsb
addr16
push
lahf
orb
shrl
aaa
enter
pop
cmpsb
inc
lret
sbb
adcl
sbb
jnp
push
fsubrl
mov
incb
xor
cli
loopne
gs
loop
lods
enter
int3
loop
or
test
inc
dec
cmp
cli
out
enter
aas
cld
add
sub
into
xchg
das
mov
scas
cmp
dec
in
or
cmp
mov
add
xor
stos
cwtl
jbe
lret
pop
imul
inc
xor
je
jne
pop
mov
dec
mov
dec
cmpsb
ljmp
xlat
xchg
test
pop
enter
xor
cltd
orb
inc
dec
addr16
xorl
add
jno
hlt
insb
jp
repnz
sub
pop
add
xchg
sub
inc
jl
and
in
or
in
inc
je
sub
je
cld
mov
daa
or
jno
ds
test
arpl
stc
repz
jge,pn
adc
adc
pop
xor
mov
push
cmp
aaa
or
push
vmwrite
lods
addr16
mov
cmpsb
or
fadds
cs
shr
cltd
cltd
test
lcall
push
push
jl
mov
insl
mov
stos
sub
out
in
int
dec
popa
jg
cmp
jae
in
jbe
popa
xor
dec
cmp
and
push
sbb
in
outsl
mov
adcl
fsubrl
push
jmp
shlb
add
jae
ds
push
lret
dec
xor
mov
stos
call
setne
push
and
adc
andb
ljmp
or
jge
push
and
inc
movsb
mov
sub
fistl
push
popa
mov
iret
xchg
lock
cmp
jb
ja
inc
fstl
push
mov
pop
adc
sbb
mov
fisubs
enter
xor
fwait
mov
inc
lret
pop
xchg
jno
cmp
cwtl
xchg
adc
jb
mov
push
lcall
in
repnz
orl
xor
lds
push
es
mov
lret
aas
pop
or
outsb
test
or
jmp
push
sbb
mov
mov
loopne
cmp
mov
repz
mov
pop
rorl
pop
cmp
adc
add
mov
sbb
mov
jb
sub
add
push
xchg
inc
jp
mov
aad
push
scas
jp
jecxz
adc
addl
dec
mov
dec
inc
out
mov
ret
add
mov
pop
jne
pop
sarl
adc
xor
dec
test
adc
sbb
jnp
or
fdivl
push
inc
out
test
movsb
sbb
dec
ret
cmp
jg
icebp
popa
push
xchg
adc
xor
cmpsl
adc
sbb
shrb
insl
andl
inc
nop
in
mov
push
or
xchg
ds
lods
repz
pop
aad
addr16
cmpsb
push
push
pop
mov
or
or
stc
ret
icebp
jge
out
xchg
mov
shll
inc
xchg
stos
sarl
fidivrs
pop
pop
sbb
dec
pop
test
pop
and
xchg
dec
ljmp
shlb
leavew
bound
adc
popf
sub
dec
cmp
push
xchg
push
and
sub
loopne
adc
insb
stc
jnp
mov
jg
push
push
nop
pop
das
adc
test
mov
adc
mov
jle
push
adc
inc
repz
xor
test
adc
mov
mov
dec
inc
mov
inc
fwait
push
js
mov
fsubrp
repz
fwait
push
jns
in
fs
aad
lcall
bound
pop
js
mov
adc
jl
xor
fildl
push
cltd
fists
into
sub
fstps
dec
and
mov
push
repz
adc
enter
cltd
dec
lret
xor
mov
cmpsl
ret
sahf
cmpsb
sbb
xor
pop
jbe
lcall
mov
sub
ss
fs
jle
inc
testb
cmp
or
fisubrl
dec
sti
ret
jl
jmp
xor
sub
sbb
xchg
ror
pop
aad
cmp
sbbb
pop
sbb
sub
sub
xchg
jnp
lret
aam
mov
shll
or
mov
icebp
stos
lock
stc
mov
xchg
xchg
lea
rolb
and
pushf
xor
mov
idivl
mov
es
sub
dec
push
popa
jne
bound
or
ja
cltd
cmp
sub
bound
dec
int
adc
jp
movsl
std
jb
cwtl
andb
mov
shr
icebp
xor
add
and
or
jl
repnz
pop
hlt
jne
movsb
xor
or
cld
or
icebp
outsb
jno
add
cmc
subl
push
mov
pushf
incb
imulb
imul
pop
mov
daa
jp
mov
movsl
add
lock
add
fwait
jg
and
insl
insl
jmp
jno
mov
leave
pop
pop
scas
xchg
fldenv
aam
outsb
push
cmp
imulb
mov
stos
add
xorl
setnp
data16
xor
lea
jmp
pop
pop
imul
cmp
ss
and
popf
dec
mov
cmpsb
add
sbb
std
dec
lahf
adc
mov
inc
shll
cmp
or
stc
pop
xorl
sub
loop
xchg
in
nop
sub
rorl
inc
ffree
sbb
popa
lods
adc
sti
leave
push
push
test
or
loop
jne
daa
mov
in
push
dec
test
in
test
push
inc
add
add
xchg
pop
xor
xor
int3
arpl
mov
subl
dec
jo
fdivr
or
inc
pop
cmp
xchg
cltd
sbb
sbb
mov
addl
mov
adc
lret
fmull
scas
lea
add
mov
into
test
test
push
pop
xor
rcr
push
push
pop
jo
loopne
incb
shlb
or
repz
repnz
lcall
popa
pop
roll
flds
pushf
lcall
mov
hlt
ljmp
addr16
sub
hlt
inc
push
jbe
inc
fnstenv
inc
das
push
mov
inc
xchg
xor
sbb
fnsave
scas
mov
pop
inc
orb
shlb
fsub
insb
mov
jge
ja
push
ja
jb
mov
add
or
jmp
mov
enter
js
xor
and
jo
xor
loop
sbb
fsubl
idiv
mov
push
shrb
shrb
out
cmpb
and
add
xchg
or
push
aad
push
sbb
adc
sbb
sbb
int
adc
push
fiaddl
in
pop
and
jb
and
sub
mov
mov
xor
push
sahf
cmc
idiv
add
pop
jne
gs
aas
mov
out
pusha
xlat
pusha
in
rcll
insb
adc
xlat
adc
in
adc
out
and
dec
jle
sbb
hlt
ja
cmp
fs
insb
lods
std
fidivl
movsb
inc
out
pop
xchg
incb
push
lods
popf
inc
test
ret
frstor
jns
rclb
imul
or
push
jge
pop
adc
dec
cwtl
xor
lock
xor
mov
dec
iret
sub
or
inc
sub
mov
jb
out
inc
imul
sub
mov
pop
pop
in
sbb
lock
idivb
gs
push
xchg
sbb
push
test
mov
cmc
mov
lds
push
gs
and
jmp
jmp
and
inc
xor
push
cmpsl
arpl
xor
inc
cs
add
inc
sub
lret
push
shrb
mov
mov
mov
ljmp
ret
int3
mov
push
xor
ret
cmpb
xchg
mov
dec
jo
cltd
adcb
pop
pop
xchg
or
push
loopne
xor
mov
js
test
out
inc
cmp
cmpsb
dec
lret
and
push
push
jp
push
jae
pop
aaa
fdivrl
lret
jle
cmp
fs
scas
add
xor
int3
hlt
dec
pop
xor
scas
es
roll
push
out
push
inc
inc
js
mov
push
push
outsb
pop
hlt
dec
mov
imul
cmpb
cmp
jb
bound
and
insl
add
scas
sahf
mov
mov
sahf
xor
adc
in
pop
fs
add
imul
ljmp
dec
ja
lret
push
inc
daa
loopne
ds
sbb
push
sbb
adc
lock
clc
iret
dec
and
sbb
jge
sarl
mov
sbb
xor
jbe
jbe
aam
inc
dec
shll
insl
out
xor
dec
add
aad
in
shll
and
aas
test
or
mov
ds
mov
jb
loope
scas
xor
fildll
fistpl
mov
sti
dec
mulb
jae
xchg
jg
and
push
addb
es
rorl
pop
das
or
push
in
inc
test
frstor
push
loope
cmp
lods
or
fld
jl
add
hlt
or
jno
test
ljmp
mov
imul
lret
test
sbb
ret
dec
sahf
test
in
jne
mov
mov
cmp
adc
imul
and
fcoml
das
mov
xor
gs
iret
adc
inc
call
dec
adc
bound
data16
jae
adc
insb
push
pop
stos
addr16
xchg
roll
scas
jg
lret
nop
cmc
test
mov
inc
arpl
rcll
int3
test
out
xor
mov
loop
jo
test
xchg
fidivrl
pop
sarb
js
dec
xor
and
cltd
or
pop
cmp
mov
divb
faddp
xor
jno
adc
xor
scas
sarb
jp
jnp
out
fadd
cmpsb
jmp
cmpb
shll
xor
mov
in
mov
push
lock
mov
mov
fdivrs
mov
pusha
imul
and
mov
sbb
loopne
xchg
pop
push
faddl
movsb
cli
into
pop
pop
lods
std
add
out
bound
cmp
add
fildl
pop
push
or
or
adc
iret
pushf
pop
pop
dec
leave
inc
inc
pop
nop
je
mov
xor
mov
xchg
mov
and
pop
je
or
fucom
jmp
push
sarb
or
and
sbb
jne
test
inc
mov
sub
stos
sub
seta
lods
rcrb
or
jge
push
xlat
mov
aam
adc
cmp
and
fdivrs
prefetch
push
int3
sbb
pop
sahf
add
imul
test
pop
mov
mov
mov
cwtl
fnstenv
pop
lahf
stos
adc
jo
xor
push
sub
arpl
imul
js
pop
sarb
imul
and
scas
push
xor
pop
xchg
idivl
fsubs
mov
sub
stos
jmp
and
jne
lahf
hlt
addl
dec
pop
fwait
mov
sbb
pop
fs
imul
xor
or
lods
sub
mov
int
iret
sarl
sbb
flds
cltd
jge
push
fs
xchg
mov
dec
movsl
or
out
imul
push
fdivp
and
adc
or
mov
lcall
sahf
adc
fldcw
inc
push
inc
jmp
pop
inc
je
inc
inc
sub
push
sbb
inc
in
mov
fistl
decb
xchg
mov
ss
jo
jl
shl
inc
lock
cld
subb
xor
mov
fcompl
ret
loope
inc
cmp
jle
xor
adc
ja
loopne
mov
sub
popf
push
jns
xor
mov
jl
push
jae
adc
xor
sbb
jge
out
jb
pop
mov
movsb
jne
cmc
aad
fwait
or
call
fildll
mov
insl
jns
pusha
popa
mov
and
hlt
loope
add
and
fisttps
mov
outsb
fisttps
inc
cmpl
fmul
into
mov
ja
pop
mov
jnp
loopne
and
cmp
test
leave
cwtl
mov
adc
push
xor
fwait
movsl
notl
into
cmp
dec
dec
or
dec
cli
les
stos
gs
nop
lret
and
into
mov
test
fdivl
sub
xchg
sub
mov
adc
or
out
cltd
mov
pop
jb
or
jnp
xchg
orb
sub
jbe
in
sbb
out
xor
stos
es
mov
cmc
fsubr
jp
adc
push
pop
adc
ret
stos
sub
pop
dec
mov
mov
add
jo
sub
mov
clc
mov
aas
xchg
data16
and
fcmovne
insl
sbb
mov
data16
imul
inc
or
cltd
push
push
int3
pop
cs
ds
jp
mov
or
cmc
rorb
and
jl
and
jl
xchg
or
leave
andl
mov
mov
xchg
jno
inc
daa
jl
push
sahf
orl
sub
inc
lcall
add
adc
jg
xchg
ljmp
repnz
mov
out
test
mov
loopne
orl
lahf
jge,pn
mov
inc
flds
inc
jb
ss
xchg
rcl
push
ss
rorl
ljmp
jbe
gs
test
mov
mov
cmp
adc
mov
ficoml
jmp
bound
test
repz
pop
dec
mov
cld
or
sub
lods
fists
push
mov
imul
mov
imul
mov
dec
push
dec
out
addl
xor
pop
cs
movsb
push
call
jge
push
xor
fidivrs
iret
pop
inc
mov
sbb
test
icebp
insl
inc
xor
jno
sbb
pop
mov
xchg
lea
cmpsl
mov
nop
shll
pop
jno
mov
repz
out
jmp
in
xchg
xchg
cmp
lods
aam
adc
ss
fbstp
sub
xchg
pusha
scas
adc
xchg
sbb
popa
inc
adc
jl
stos
mov
jbe
icebp
xchg
xchg
pusha
stc
xchg
mov
dec
sub
lods
mov
jecxz
stos
cwtl
test
xchg
add
or
test
push
int
mov
xchg
insb
nop
add
std
mov
xchg
pop
sbb
pop
outsl
push
xchg
push
pushf
jo
dec
stc
cli
or
xor
sub
daa
push
mov
jmp
and
or
inc
or
cmp
movb
xchg
adc
inc
mov
mov
cltd
out
repz
sub
sahf
shlb
cwtl
mov
adc
adcb
mov
fwait
xor
add
sub
adc
mov
imul
mov
cmpb
sahf
test
pop
test
mov
stos
lret
rol
aas
bound
cmp
cld
stos
mov
xlat
movsl
push
push
bound
fildll
xchg
mov
or
push
dec
movsl
shlb
and
lret
ljmp
cmp
lret
push
hlt
pop
xor
mov
call
jnp
lds
push
cmp
bound
and
sbb
cmpb
mov
sbb
jnp
and
sub
inc
inc
adc
orl
jnp
pop
pop
xchg
pusha
test
ja
les
daa
xchg
loope
pop
rcrl
imul
cwtl
aad
subb
dec
pop
movsl
pop
lret
jp
divb
lds
lods
movsl
sub
pushf
insl
pop
sbb
mov
int3
mov
lcall
cwtl
nop
push
cld
jmp
cs
test
int
xchg
push
adc
or
outsb
and
loope
jo
cld
dec
cwtl
adc
jge
sbb
arpl
int3
mov
stc
xlat
call
ret
gs
outsl
pop
pop
mov
lods
imul
sbb
xor
or
insb
push
sbb
mov
lret
lods
or
xor
xchg
int3
jle
popf
aaa
dec
mov
cli
pop
adc
pop
pop
inc
daa
inc
sbb
jg
neg
call
and
inc
push
adc
in
and
or
xor
in
ja
cmp
pop
cmp
mov
jbe
mov
scas
push
popf
xlat
inc
scas
jb
int3
add
lods
mov
cmp
sub
sub
sbb
jb
test
inc
mov
xchg
jle
fldenv
jp
pop
sub
stos
xchg
fstl
mov
cmp
pop
sbb
fistpl
lret
add
mov
dec
test
in
gs
ret
jb
inc
jno
fcom
lret
nop
daa
mov
add
pop
pop
add
inc
lods
ja
cmp
ds
shrb
adc
jno
stos
xor
adc
sti
push
fsubrs
imul
or
mov
cmp
cmp
sbb
push
push
mov
insl
sbb
inc
pop
lret
arpl
push
jns
outsl
mov
jmp
lcall
imul
push
lea
aad
sub
lret
push
jo
lods
adc
mov
sti
push
out
pop
jmp
xchg
jl
shll
sbb
in
add
bound
clc
mulps
sbb
cmpsb
or
stos
mov
pop
jmp
push
popa
outsb
movb
clc
loopne
test
fmuls
or
bound
cmp
nopl
cmp
xchg
cmp
push
bswap
nop
mov
repz
jb
rcll
daa
das
insb
xlat
or
jecxz
insl
jmp
pop
aam
mov
int
xor
cmpsl
sbb
cmp
and
dec
xchg
ds
pushf
stos
rcll
loopne
jp
dec
xchg
sbb
fnsave
popf
hlt
sub
dec
ret
ljmp
mov
mov
lock
add
aas
scas
movsb
sbb
or
pusha
dec
in
dec
adc
das
adc
in
arpl
insl
mov
jbe
jle
mov
pop
xchg
movsb
lcall
mov
bound
stos
add
loop
pusha
cltd
pop
out
addb
cltd
sbb
addl
add
and
and
popa
mov
pushf
shrb
cmp
pop
out
push
out
lds
xchg
loop
push
sbb
lods
dec
flds
lahf
mov
fnstsw
mov
mov
in
lock
inc
popf
aad
loope
mov
jne
jle
lods
lahf
ljmp
pop
mov
sub
pop
aas
test
ja
cmp
jno
dec
lcall
es
dec
fwait
cmp
inc
jp
sub
stc
cmc
mov
adc
push
mov
push
sahf
cltd
dec
stos
jl
xchg
jg
xor
jle
pop
ficoms
push
dec
add
clc
repz
outsb
stos
add
pop
adc
jo
rorb
dec
xchg
inc
fwait
fwait
mov
loopne
out
sub
test
inc
pop
dec
shll
sub
lds
popa
dec
lcall
cltd
pop
call
or
xchg
xor
iret
mov
sub
pop
in
dec
inc
push
sub
sub
test
adc
jno
pop
cmp
negb
loopne
lea
sub
or
push
adc
fwait
jnp
mov
js
testb
cs
mov
movsl
and
mov
test
fwait
hlt
stos
mov
fs
sub
ss
cli
test
loopne
lret
cmp
sbb
push
jmp
insl
loopne
imul
lds
lock
jg
dec
in
push
int3
cmp
or
std
pop
cli
incl
pop
movsl
dec
xchg
mov
dec
cwtl
stc
xor
pusha
repz
fucomi
xchg
inc
pop
inc
cmpsl
pop
sub
imul
sbb
jle
mov
push
or
xlat
jb
mov
lock
and
push
jge
sub
popa
je
shlb
mov
imul
loope
out
or
sbb
sub
pop
lods
les
mov
and
pop
add
xor
mov
push
insb
jno
out
cmpb
mov
dec
hlt
pop
fidivl
cmpsb
fisubs
int
xor
dec
pushf
jnp
cmpsb
lock
sti
inc
jbe
insl
xchg
mov
xchg
jmp
aas
ficoml
or
lret
xchg
daa
jo
ljmp
cltd
mov
aad
mov
mov
add
fistpl
jle
mov
xchg
xchg
rorb
mov
ds
nop
xlat
fs
cs
loop
push
scas
inc
cmpsb
scas
sub
cmpsb
daa
std
adc
leave
fists
add
lret
lahf
add
dec
aad
inc
scas
aaa
dec
sub
out
pushf
testl
ret
adcl
das
movb
icebp
push
or
fcomi
mov
dec
shlb
pushf
lods
loop
idivb
mov
incl
test
outsl
jns
push
mov
enter
arpl
scas
adc
bound
jae
loope
mov
and
push
pop
and
cmp
cli
dec
xchg
dec
mov
jecxz
jg
xor
mov
push
xchg
inc
and
mov
dec
dec
gs
push
cmp
cmp
adcl
popf
xchg
in
fs
data16
push
mov
xor
aaa
je
pop
ss
scas
iret
les
xchg
in
insb
mov
mov
push
pop
sbb
fstpl
mov
jnp
or
dec
add
out
mov
mov
inc
mov
mov
or
or
mov
scas
addr16
jecxz
sub
imul
inc
in
aaa
fidivrl
sbb
jecxz
insl
data16
cld
movsb
push
mov
jbe
outsl
gs
dec
out
lea
xor
mov
inc
push
movsl
pushf
out
lods
xor
add
daa
cmc
mov
jp
out
push
cmc
xchg
outsl
shll
orb
jno
pop
popa
jne
push
pop
test
cmpb
scas
and
add
mov
push
js
or
push
cmc
cs
das
and
out
jmp
sbb
inc
pop
popa
andb
pop
sub
aam
jmp
or
jb
mov
rolb
loopne
ret
pop
subl
movsl
fsubs
nop
adc
jbe
sub
jo
dec
mov
xor
dec
xchg
mov
jp
into
pushf
sub
enter
cs
ljmp
call
scas
cli
lods
jg
or
cmp
mov
ljmp
fld
mov
std
inc
cld
lea
mov
outsl
sysexit
rcll
mov
jmp
cmp
dec
je
adc
inc
cmp
clc
shr
shlb
xor
cs
cmpsb
jp
leave
stc
in
shll
gs
mov
mov
jle
hlt
lret
test
in
adc
in
shl
xor
adc
jnp
push
outsb
mov
dec
imul
cs
jo
and
jo
fs
cmp
sub
jne
xor
xchg
insl
loopne
push
es
ss
enter
inc
ljmp
adc
mov
adc
daa
mov
xor
jbe
xchg
daa
aas
lcall
cmc
and
mov
pop
aaa
or
xor
mov
in
rcll
pop
inc
enter
mov
sbbb
lcall
or
inc
lahf
int3
imul
cwtl
jp
pop
push
push
out
jle
mov
push
push
out
and
test
sbb
mov
xrelease
hlt
gs
sbb
lahf
cmpsb
pop
mov
dec
mov
or
idivl
sahf
push
dec
fwait
hlt
push
cmp
pop
xchg
and
push
or
inc
inc
test
fcmovne
addb
jmp
es
jp
xchg
push
or
sar
push
xor
add
inc
push
xorb
testb
pop
idivl
mov
pop
jne
add
test
lds
arpl
js
mov
test
fstl
es
cmpsl
mov
or
addr16
xor
mov
andl
popf
negl
or
loopne
lods
pusha
mov
sti
xor
dec
mov
leave
push
in
xchg
pop
xchg
mov
add
sbb
insl
xchg
not
mov
ficompl
mov
addl
pop
adcl
pop
lahf
sbb
dec
sbb
mov
stos
pusha
mov
ss
and
or
mov
fs
fsts
popa
add
nop
add
jmp
test
inc
ret
push
fucomp
std
movsb
js
test
inc
out
mov
push
xchg
jns
cwtl
xchg
dec
outsl
push
mov
push
in
cmpsb
mov
and
push
testb
cltd
aad
mov
push
cld
fdivrs
and
add
or
jge
jb
cmp
mov
sbb
push
mov
cltd
stos
loop
mov
outsl
lods
adcl
and
aas
sbb
mov
scas
xchg
cmp
cmpsl
pop
sub
cmp
sub
pop
pop
loopne
jae
mov
addl
mov
add
cmpsb
popa
imul
pushf
sub
stos
xor
decl
sub
cmp
push
mov
ljmp
mov
xchg
push
repz
insl
cmpsb
cmovs
xchg
shr
cmpl
mov
pop
xchg
aas
jne
scas
repz
and
pusha
mov
xchg
cmp
addr16
daa
inc
jg
push
mov
mov
cmpsb
and
in
mov
popf
cmpsb
inc
mov
adc
pusha
mov
std
mov
stc
shlb
into
test
adc
add
mov
cmp
sbb
test
addl
in
out
adc
adc
push
aas
nop
dec
xchg
or
push
in
cmp
imul
ja
fcompl
outsb
push
sahf
pop
cli
lahf
pop
xchg
pushf
imul
pop
sub
jecxz
adc
xchg
mov
clc
lahf
sarb
aad
popa
mov
push
outsb
std
and
fisubl
enter
sarl
push
cwtl
xchg
adc
pusha
mov
pusha
pop
sbb
sahf
daa
or
out
xor
push
daa
xor
jo
push
lods
test
movl
dec
fidivrs
lea
loop
icebp
cmp
sahf
movsb
cmp
inc
add
test
rcl
push
lret
adc
push
inc
adc
orb
aas
jg
or
jo
push
paddsb
mov
sarl
xlat
cmp
jp
pop
mov
lret
jle
sbb
ljmp
das
fdivrs
push
dec
loopne
mov
je
mov
repnz
and
pop
mov
mov
cmpsl
adc
out
inc
dec
lret
sbb
sarb
push
out
enter
pop
push
daa
lock
test
in
ret
xchg
sub
pop
or
mov
dec
fwait
mov
xchg
lds
sbb
fdiv
cs
push
int3
aaa
nop
fdivs
and
outsb
xchg
arpl
xchg
inc
inc
test
loope
ds
cmpsl
cmp
jmp
or
cmp
cmp
fidivrl
arpl
arpl
lds
clc
mov
loope
in
aad
ret
add
shlb
mov
or
mov
push
xchg
and
loop
fcom
fdivs
jmp
adc
mov
mov
arpl
inc
roll
dec
inc
sub
adcl
and
testb
lods
fnsave
mov
loop
and
push
jnp
dec
gs
ljmp
xor
jp
jle
dec
add
pop
sbb
shll
popa
ljmp
xchg
or
sarb
xchg
sbb
mov
or
mov
cmp
popf
call
mov
dec
jecxz
or
insl
jmp
js
lock
xchg
lcall
inc
cmpsl
sbb
and
xchg
es
lds
clc
adc
ja
lods
jle
into
inc
sahf
inc
cmp
jmp
mov
sbb
cltd
sub
movsl
pusha
leave
push
xchg
push
imul
adc
mov
imul
fadd
push
cmp
mov
mov
stos
jo
mov
mov
pop
inc
cmc
sbb
xchg
add
adc
push
adc
lds
subb
mov
out
in
jle
lock
ror
cmp
insl
iret
sbb
cld
test
sub
cli
insl
or
inc
dec
dec
pusha
cld
test
in
orl
cmp
lods
enter
inc
leave
pop
xor
stc
push
jle
inc
jne
and
movsl
outsl
jge
xlat
pop
cmp
dec
sahf
mov
cwtl
scas
aad
je
data16
mov
lods
aad
xchg
sbb
cmp
mov
cmc
lcall
mov
out
movsl
and
jl
repnz
xor
repz
sbb
fdivrl
ds
dec
cs
or
test
sahf
xchg
mov
lret
add
xchg
add
insl
iret
sbb
jno
std
and
shlb
in
xchg
pusha
imul
inc
push
dec
loopne
inc
jl
lahf
sbb
popf
mov
ja
mov
popa
add
mov
or
jl
add
addr16
mov
les
cs
mov
lds
adc
and
add
sbb
arpl
fdivrs
js
cltd
push
dec
xor
mov
cmc
shll
inc
sbb
push
test
ss
sahf
roll
jge
mov
mov
inc
mov
push
xchg
and
inc
fcoms
mov
mov
cmp
fldl
dec
mov
jl
ror
arpl
cli
cltd
xor
sub
rdtsc
mov
adc
mov
test
shl
jge
les
pop
cmp
cmp
adc
lret
stc
fwait
mov
iret
sbb
push
push
jae
sahf
cmp
mov
lcall
mov
stc
inc
jle
stc
and
jge
cmc
clc
inc
adc
into
shlb
into
add
xchg
mov
lock
sub
xchg
pop
push
mov
aam
jge
push
fstps
es
test
mov
mov
xor
lret
shrl
test
subl
push
icebp
fucompp
inc
mov
dec
cmp
sti
loope
xlat
or
xchg
adc
sbb
dec
xchg
jo
fsubrs
mov
aam
scas
xchg
pop
xlat
add
loopne,pt
loop
dec
test
or
inc
mov
jmp
and
mov
xchg
pop
in
sub
sub
scas
inc
fcoml
pop
mov
cli
arpl
lahf
mov
inc
mov
cltd
divb
and
xor
test
xchg
out
inc
mulb
int3
pop
popf
mov
aas
ja
stos
cmpb
cmpsb
imul
aad
adc
enter
mov
daa
xor
lods
jmp
cli
push
mov
fcmovne
loopne
push
out
and
mov
pushf
cltd
jmp
in
imul
sbb
pop
lret
cmc
shlb
inc
call
sarb
add
and
orb
movsl
push
out
in
jnp
jl
add
cltd
fcoms
push
cmp
sbb
and
adc
shl
clc
in
loop
test
insl
ljmp
lds
pop
push
and
ja
mov
scas
les
xchg
or
and
push
or
dec
pop
xchg
pop
cmp
in
mov
rorl
in
xor
lea
aas
jge
adc
mov
sar
adc
and
xchg
and
and
mov
xchg
xor
xchg
fdivl
push
hlt
sbb
push
pop
rcl
gs
imul
jne
lret
dec
pop
inc
add
cs
leave
sub
je
das
fdivrl
es
dec
cmp
pop
inc
mov
movsl
aas
cmp
lret
sbb
xor
cmp
sub
push
cmc
fs
scas
add
xlat
xor
adcb
or
mov
loop
mov
sub
mov
dec
inc
popf
repz
loopne
out
mov
push
xchg
stos
loope
inc
loope
loope
and
jp
mov
cmp
and
stos
dec
jb
inc
ret
repz
xchg
ret
mov
inc
stos
inc
mov
inc
push
dec
repnz
shll
xchg
lock
leave
jmp
std
cwtl
pop
movsb
adc
sub
cwtl
jnp
dec
nop
mov
pop
clc
mov
out
jbe
cwtl
arpl
dec
pop
test
out
cmc
addr16
jle
cmp
jo
mov
pop
mov
hlt
rol
mov
dec
jo
and
in
dec
inc
adc
cmp
fisubrs
popf
in
outsl
or
inc
xor
mov
lcall
pop
movsb
ja
and
jp
mov
adc
xor
inc
or
xor
jnp
je
stos
mov
fs
hlt
xchg
stos
pop
fstps
cld
xlat
jl
xchg
push
push
adc
addr16
orl
push
int
push
sub
ret
sbb
pop
je
mov
xchg
scas
fs
lret
mov
push
and
push
mov
movsl
xchg
and
mov
cmp
add
pushl
push
xchg
jns
xchg
fnstenv
les
mov
test
ret
inc
pop
jecxz
sbb
ss
mov
fstpt
movsb
andb
rcrb
add
out
xchg
inc
lds
sbb
sub
je
outsb
sbb
ljmp
jg
inc
jmp
fs
movb
jle
mov
movsl
cltd
xchg
cmp
stos
aas
cmp
aad
push
push
iret
sub
sbb
dec
pop
jae
incl
xor
cmp
int
and
xchg
cwtl
xor
jle
mov
inc
jne
sbb
and
add
cmp
sarb
pop
jae
ss
pop
sbb
fcompl
arpl
fwait
jmp
repz
pop
xor
cli
adc
fdivp
cmp
push
ljmp
fcoms
fldenv
xchg
mov
fistl
adc
fidivs
hlt
andb
faddp
cmp
lock
in
repz
mov
dec
inc
jle
push
stos
out
pop
or
sbb
dec
mov
cwtl
fdivl
and
add
lods
xchg
mov
sub
mov
scas
cli
cld
test
mov
sbb
inc
lea
ss
sub
cmpsb
xorb
xchg
inc
xor
cmp
inc
and
mov
cmp
stos
mov
mov
into
sub
xor
iret
mov
test
stc
jge
rclb
fsubl
call
js
xor
mov
repz
pop
lcall
sti
jge
les
xchg
aam
repnz
dec
mov
repnz
nop
lahf
cmpps
or
bound
out
fistps
xchg
cwtl
repnz
pusha
lods
mov
mov
outsb
mov
das
pop
ret
je
std
inc
mov
je
aaa
mov
adc
add
adc
mov
dec
lret
adc
rcl
cs
mov
pop
popa
test
ror
rorl
loop
mov
fbstp
dec
pop
in
sub
mov
sbb
shl
daa
and
sub
mov
mov
hlt
xchg
adc
pop
adc
push
div
mov
frstor
pop
jb
push
pop
lret
rolb
and
jge
jno
mov
and
jns
sarb
and
test
jae
xor
jmp
inc
leave
add
aam
and
sub
popf
repz
aad
stos
js
mov
jge
and
bswap
hlt
mov
and
in
cwtl
push
movsl
inc
test
mov
inc
sbbl
mov
adc
jle
inc
dec
cmpl
pop
sbb
fmuls
dec
dec
jle
stos
jecxz
pop
lea
push
jl
mov
adc
jecxz
xchg
xchg
in
add
add
je
shlb
and
xor
cmpsb
insb
adc
inc
pusha
and
mov
stos
adc
xchg
push
mov
stos
mov
mov
insl
fbld
sbb
lock
dec
add
ret
in
scas
outsl
add
aad
loope
cmp
fdivs
pop
push
lret
mov
cmp
lods
sahf
cmp
jle
mov
fstp
incl
add
out
outsb
nop
insb
cs
stos
mov
xor
or
mov
mov
dec
out
cmp
mov
test
into
dec
sar
jae
aam
cmp
sub
test
in
jecxz
ret
add
cmpsl
cmp
aas
xlat
enter
jo
push
inc
push
push
cmp
call
push
pavgb
fisttpl
or
mov
je
push
lret
mov
fisttpll
dec
enter
add
shll
hlt
adc
xor
ret
pop
stc
mov
daa
adc
dec
pop
sub
popa
daa
cmc
lods
sub
sahf
inc
scas
mov
sbb
push
aas
xorl
pop
xchg
repz
sub
and
sbb
dec
pushf
adc
outsb
add
cmp
fwait
lret
mov
ret
dec
std
push
cmp
mov
or
shll
lods
mov
jne
push
inc
xor
ret
outsb
cmp
lret
sbb
das
sub
and
sub
pop
insb
pop
ret
mov
out
pop
add
jp
shrl
xlat
xchg
mov
xor
aaa
or
in
jmp
repnz
or
xor
adc
push
xor
test
sbb
int
mov
mov
or
sub
arpl
adc
xchg
shlb
or
ret
in
out
push
inc
loopne
rcrl
test
das
test
sub
add
inc
cmp
sub
sub
add
jae
in
stos
sahf
or
dec
in
cmpsb
cmp
dec
sub
test
mov
jo
push
sub
push
xchg
scas
clc
and
push
std
mov
inc
lcall
jne
sub
push
xor
xor
xchg
es
push
test
test
test
cmp
daa
and
or
sbb
gs
xchg
in
cmpsb
jg
mov
idivb
mov
loope
xor
mov
into
std
enter
jns
in
xorl
nop
ret
movsl
mov
sub
sbb
push
inc
pop
pop
enter
jg
sbb
icebp
mov
iret
cmp
rorl
mov
xchg
aaa
pop
shr
loopne
xor
jns
and
jmp
loop
cmp
stos
data16
in
xchg
adc
add
mov
mov
lret
cmc
je
das
daa
mov
and
addr16
add
adc
cmp
xchg
sbb
inc
rcr
jnp
dec
daa
mov
in
stos
hlt
push
add
insl
mov
adcl
or
aad
or
jg
pxor
cmc
push
sbb
pusha
pop
lods
pusha
call
bound
adc
xchg
cmc
add
jns
icebp
jmp
adc
pop
call
lods
jle
adc
jge
stos
add
pop
pop
push
xor
std
jbe
lods
and
sbb
ret
inc
fistps
sub
mov
fdivs
ljmp
xchg
adc
push
cmp
ret
dec
xor
into
pusha
std
jl
xchg
adc
mov
mov
xor
rol
pop
sahf
aad
pop
shrb
bound
jg
inc
pushf
loope
in
out
pop
aad
inc
mov
ljmp
xchg
or
push
loop
mov
iret
xlat
aaa
and
pop
push
movsl
test
popa
loope
pop
jp
notb
mov
push
into
push
filds
mov
cwtl
ss
or
or
and
xor
sbb
push
inc
mov
ficomps
sub
fidivrl
xlat
or
bound
inc
xor
push
push
loopne
movsl
out
jae
xchg
mull
mov
rolb
mov
pop
inc
lret
lcall
inc
ret
jg
lods
dec
push
lods
jnp
ficoms
lock
pop
aas
or
scas
iret
mov
or
adc
cwtl
xchg
pop
pop
or
cld
push
lret
dec
rcrl
popl
mov
rcrl
sahf
loop
in
mov
cld
pop
xor
pop
aaa
and
jae
jno
sbb
jo
push
adc
jmp
in
mov
xchg
jbe
mov
inc
dec
xchg
cmpl
add
xchg
sbb
sbb
cmp
sub
stos
lock
mov
push
shl
mov
shrl
pop
dec
sub
enter
mov
pop
sbb
hlt
cld
adc
pop
sahf
mov
ja
ljmp
jge
sbb
sti
adc
mov
xor
xor
dec
scas
sti
scas
lret
out
pop
xrelease
mov
out
xor
push
add
insb
push
cmp
fisttpl
or
pop
inc
inc
jbe
aad
dec
lods
daa
aaa
lret
cmpl
fdivrl
xlat
xor
rolb
cld
sub
pop
out
testb
pop
pusha
loopne
xor
cmp
push
xor
dec
insb
mov
pushf
dec
fisubl
dec
or
mov
mov
inc
stc
push
inc
or
rclb
mov
sub
mov
movsl
jp
bnd
add
lret
roll
xchg
in
out
outsb
push
jecxz
adc
cli
arpl
popf
shll
int3
dec
out
mov
jle
cwtl
push
push
idivl
rolb
inc
mov
xchg
push
and
lock
fidivs
aas
and
imul
or
into
lock
cmp
mov
push
add
mov
dec
int3
lock
std
add
shlb
push
inc
lods
xor
cmp
pop
mov
std
or
subb
daa
push
in
dec
shll
repz
push
xchg
pop
cmp
jne
adc
jmp
aam
sbb
jbe
adc
dec
or
cmp
addr16
jle
xor
mov
bound
lret
movsb
dec
sbb
int3
lret
jmp
sub
mov
push
inc
jb
xchg
popf
pusha
daa
pop
xchg
in
cmpl
ss
inc
negb
scas
mov
negl
cmp
stos
mov
push
mov
scas
stos
add
inc
fidivrs
mov
mov
int3
sbb
dec
cmp
xor
out
add
push
inc
dec
add
and
clc
fucomip
dec
popf
xor
cmp
jno
out
pop
int3
xor
js
out
push
sub
adcb
sbb
xchg
jbe
in
inc
clc
insl
lcall
lret
sahf
dec
adc
repnz
rorl
ret
jmp
into
hlt
push
fsubl
push
fs
sub
insl
daa
xchg
sub
jbe
addr16
stos
jbe
sbb
cs
std
shl
cld
mov
xchg
icebp
test
pushw
sub
mov
pop
bound
xchg
ret
jno
push
push
ljmp
xchg
hlt
int
mov
lcall
sbb
scas
sub
popa
dec
mov
xchg
inc
mov
pop
dec
stos
repnz
jge
fisttps
negb
std
sub
bound
lods
mov
clc
test
adc
mov
or
inc
and
test
in
loope
mov
popa
jne
push
enter
or
mov
add
in
mov
aas
xor
mov
in
sub
add
das
test
arpl
mov
js
pop
call
rcrb
out
int3
xor
jns
hlt
sbb
imul
jns
adc
fdivr
sbb
pop
pop
out
aas
inc
js
flds
repz
dec
sbb
mov
cmp
xor
insl
test
sbb
nop
dec
loopne
or
xor
movsl
int3
jo
test
sbb
mov
cmp
push
cmp
xchg
inc
popa
mov
or
add
call
add
test
in
subb
aaa
int3
and
pop
pushf
mov
ret
pop
pop
stos
mov
test
pushf
sbb
cmc
jno
sub
xchg
out
inc
mov
stos
add
out
loope
inc
negb
adc
add
mov
xor
cmpsl
inc
imul
stc
or
mov
xor
dec
mov
push
bound
dec
mov
pop
cmp
pop
dec
repnz
ljmp
fildl
jmp
cmp
xor
lock
shrb
and
dec
sub
stos
les
sbb
shlb
dec
xor
enter
lcall
cli
xchg
testb
cmp
sbb
ljmp
shlb
mov
pop
cld
sbb
mov
push
pop
mov
lds
mov
push
addl
div
clc
pusha
mov
xor
es
mov
mov
cmp
mov
push
cmc
inc
in
inc
adc
sbb
and
repz
adc
xor
jae
iret
mov
push
aaa
lret
aam
leave
mov
insb
and
dec
mov
shll
cmc
and
push
imul
mov
adc
mov
and
and
mov
xchg
mov
xchg
cld
xchg
mov
push
loop
test
push
shrl
scas
je
jb
jbe
mov
dec
mov
leave
jge
jbe
mov
sub
pop
dec
iret
js
lret
add
loope
lret
fimuls
xchg
dec
jb
shl
loop
inc
and
sti
int3
add
js
test
mov
add
push
pop
sahf
sbb
pop
sub
dec
pop
mov
pop
jo
push
insl
xchg
pop
or
loopne
mov
out
xor
pop
testb
jns
adc
mov
in
and
in
dec
aad
test
jnp
scas
lret
daa
lcall
xchg
lahf
aad
pop
jl
pop
pop
daa
mov
jo
outsl
sbb
push
and
loope
add
imul
pop
xchg
add
lods
push
punpcklbw
jge
sbb
mov
lds
cmp
loop
mov
mov
testb
dec
subl
sarl
in
test
push
into
lods
pop
dec
or
xchg
mov
mov
add
outsb
push
pop
dec
les
lock
in
adc
loope
mov
cs
nopl
mov
ja
lock
les
dec
dec
icebp
or
testb
inc
aad
test
int
call
add
cmpsb
mov
out
mov
lret
jbe
cmpsb
and
mov
pop
insl
inc
cltd
das
out
fldenv
lds
test
popa
fsts
pop
lock
inc
inc
outsb
test
xchg
ds
enter
ret
xor
cmpsl
sub
sub
xor
mov
dec
xor
sbb
in
push
mulb
cmp
fldcw
int3
ja
mov
imul
cmp
mov
adc
cld
jge
scas
dec
test
mov
jp
pop
pop
xchg
into
jg
inc
popa
or
xchg
mov
popa
insb
jnp
pop
insb
jnp
adc
or
sahf
ss
aaa
adc
xchg
std
aad
outsb
push
or
push
ret
jbe
shll
jle,pt
add
faddp
cs
mov
push
dec
int
neg
test
iret
shlb
mov
sub
sbb
push
jno
daa
sbb
or
xchg
mov
mov
adc
jns
lahf
adc
cwtl
sti
push
ffreep
dec
imul
lock
out
leave
adc
test
shlb
add
sub
inc
pop
adc
lock
xchg
xchg
jg
jae
push
in
dec
test
cs
jle
inc
sbb
sbb
lods
add
mov
add
aad
leave
mov
xlat
mov
out
cli
xchg
push
mov
mov
mov
inc
adc
mov
xlat
fmul
cmp
cmpsl
add
mov
mov
sbb
test
sbb
jecxz
insb
inc
add
mov
cmp
push
jo
loope
insb
fsubr
in
test
jle
les
or
xor
fisubrs
cmp
xchg
mov
jbe
out
or
leave
clc
cmp
sbb
pusha
dec
adc
adc
sub
ds
sbb
mov
insl
sub
test
inc
cmpsb
xchg
push
sbb
jecxz
outsl
push
stos
mov
shll
cltd
arpl
push
dec
push
pop
jne
pop
js
int3
add
xchg
pop
fdivrl
mov
push
cld
mov
adc
aas
sub
mov
call
xlat
cmp
out
loopne
cwtl
pop
xchg
pop
hlt
in
leave
lds
icebp
ret
sub
xlat
pop
jae
sbb
fs
nop
sub
ja
xchg
popa
pop
popf
movl
sub
add
mov
mov
fdivrl
xor
mov
or
jg
pop
sub
repz
pop
jbe
into
and
push
fdivp
lret
dec
mov
dec
mov
mov
ds
mov
ds
jmp
data16
cld
and
jne
jbe
ret
add
add
add
xor
xor
cmpsl
cmpsb
push
push
push
push
mov
in
out
push
mov
xchg
lret
cmpl
inc
push
inc
jno
in
test
sbb
lret
maxps
imul
out
pop
cmp
rcr
gs
fdivl
cld
xchg
call
pop
push
int3
test
aad
hlt
fistl
mov
mov
icebp
test
aas
lret
sbb
popf
outsl
add
or
loopne
clc
scas
js
xchg
out
mov
lock
xor
in
mov
xchg
and
fucomp
or
out
cmp
lods
push
xlat
mov
inc
jo
and
cmp
sbb
jp
add
lods
inc
mov
aad
cltd
data16
add
loopne
mov
out
arpl
shll
sbb
dec
enter
rdmsr
cmpsl
mov
push
sbb
dec
testl
and
cmp
jmp
and
mov
cltd
push
mov
and
rcl
mov
xchg
std
orl
lods
rolb
mov
push
mov
mov
push
mov
movsl
out
jns
addr16
cmp
sbb
enter
inc
test
dec
lret
cmp
leave
dec
pushf
jg
xchg
scas
hlt
cmp
adc
jbe
flds
dec
jle
into
xor
xchg
mov
cmp
add
jecxz
dec
data16
cmp
or
adc
mov
jae
repnz
insb
cmp
stc
inc
cmc
loop
pop
psrld
cwtl
sbb
jmp
je
pop
mov
lds
mov
cmp
or
test
xchg
mov
pop
pop
negb
pusha
inc
sbb
scas
iret
repnz
mov
xor
mov
fists
addr16
cvtps2pi
xchg
mov
push
test
pop
icebp
dec
pusha
cmpl
jg
mov
push
and
nop
int3
lds
std
jl
jl
xlat
dec
scas
add
inc
fsub
inc
insl
lds
test
pop
mov
cmp
add
and
pop
fnstsw
jp
movsl
and
jg
push
sahf
setns
mov
adc
mov
xor
dec
xor
pusha
jns
add
addr16
push
lock
push
or
popf
adc
adc
pop
into
and
in
dec
in
or
dec
es
orps
mov
in
jnp
test
pop
sti
push
dec
imul
bound
fdivl
cltd
jnp
lods
mov
push
cmp
dec
inc
sbb
jno
movsl
cmp
or
jl
or
les
push
shll
jae
lret
sub
xlat
xchg
xchg
sbb
test
insb
xchg
xchg
sub
mov
in
orb
int
xchg
jo
ja
xchg
mov
lcall
inc
mov
lods
sti
cmp
push
or
xchg
lahf
fnstenv
cmp
lods
add
pop
sbb
or
enter
and
bound
xlat
cs
mov
lods
popa
mov
test
fnstenv
es
ror
xchg
fsubl
fcomp
and
dec
cmp
push
push
add
scas
stos
sbb
adc
lock
lds
pop
xchg
test
mov
cld
jb
jnp
arpl
jl
add
mul
call
push
mov
cs
sahf
mov
push
lods
mov
inc
fsubs
jl
jp
add
cmp
sbb
pop
mov
xor
push
xor
mull
jne
sub
push
jp
add
add
sti
push
mov
mov
mov
dec
pop
dec
cmpsl
pop
xor
mov
repz
dec
addl
fldenv
dec
jl
mov
lods
mov
mov
lahf
daa
aas
xchg
or
ja
jecxz
and
dec
out
pop
dec
negb
sti
inc
loop
fisubrs
leave
das
inc
lret
ret
xor
add
mov
imul
jno
gs
ret
aas
sbbb
bound
jle
jle
imul
test
jl
lcall
out
shl
push
mov
imul
pop
lret
push
cs
dec
ret
sbb
push
pop
cwtl
ss
repnz
ds
imul
and
pusha
scas
jbe
rclb
out
cli
mov
out
lods
mov
adc
add
sub
inc
sbb
cs
or
repnz
insl
push
push
add
pushw
jb
js
cmp
sub
inc
adc
mov
lods
add
push
nop
negb
cltd
lahf
add
mov
rcl
jg
nop
push
mov
sub
push
mov
outsl
cmpl
adc
les
sub
pusha
pop
aas
aad
enter
xchg
pop
mov
sbb
xchg
jne
into
mov
sbb
and
sbb
movsl
addr16
dec
cs
enter
ret
cld
ja
in
pop
pop
ret
clc
std
ja
dec
push
adc
fnsave
jmp
inc
stos
dec
int
dec
and
mov
stos
aam
scas
push
imul
sbb
or
xor
push
sbb
mov
aas
es
jle
pop
lods
lods
pop
inc
and
push
shlb
iret
test
les
les
mov
sbb
movsl
cltd
adc
nop
add
pop
enter
adc
inc
adc
push
fidivl
out
enter
loope
movb
push
icebp
xchg
into
inc
sub
jmp
push
sbb
inc
or
js
pop
loop
adc
and
fsubrl
imul
popf
imul
cli
mov
adc
push
in
mov
enter
lahf
xchg
loope
inc
jns
mov
xor
or
pop
inc
and
stos
sub
movsl
mov
sub
rclb
sbb
fcoml
push
into
xor
sbb
xchg
mov
xchg
lods
dec
out
push
jle
add
inc
adc
push
cmp
adc
adc
ret
pop
jmp
push
mov
cli
mov
adc
cli
adc
bound
daa
ret
cmp
je
pop
imul
ljmp
imul
fcoml
jnp
inc
xchg
cli
cmc
arpl
pop
cld
dec
mov
and
xchg
inc
add
push
stos
test
dec
lahf
mov
aas
mov
out
insl
jg
xchg
jns
dec
lcall
lahf
das
movsl
ret
mov
inc
divb
lahf
dec
icebp
fcoml
arpl
sub
into
cld
test
cmp
add
dec
push
lock
pushf
mov
lock
mov
rcrb
jge
addr16
add
cmp
jnp
mov
pop
movsl
pause
out
mov
fcoms
loop
lods
insb
test
and
sti
movsb
push
int
loop
out
ret
push
xor
mov
xor
fwait
roll
add
dec
push
or
push
jno
mov
and
test
pop
ficompl
mov
cmp
jp
jg
lret
dec
stos
repnz
mov
cld
repz
pushf
loop
or
lea
psadbw
pop
dec
xorl
xor
mov
jo
aaa
mov
adc
mov
xchg
adc
js
push
dec
jmp
xor
cs
daa
neg
add
iret
xchg
add
jge
jb
sbb
int3
or
jne
insl
mov
sti
jb
outsb
stos
jmp
mov
cmp
xchg
inc
mov
ret
sbb
dec
mov
inc
mov
xchg
xchg
mov
xchg
inc
push
jns
imul
jne
mov
js
sub
orl
mov
enter
cmpsb
xor
ss
adc
cltd
js
mov
int
nop
loop
adc
inc
push
cmc
dec
inc
push
adc
into
cmp
mov
imul
sar
inc
push
cs
mov
push
mov
mov
jp
jg
xchg
push
aaa
sub
cli
xlat
mov
pop
mov
ds
lock
and
ret
leave
pop
std
jecxz
daa
bound
jmp
mov
cmpsb
sub
inc
movsl
pand
sub
mov
pop
pushf
mov
std
push
fiadds
xor
hlt
shrb
nop
aaa
fmulp
in
sub
out
gs
loopne
sbb
and
xor
roll
sub
pop
xchg
cmp
jb
mov
fs
cmp
int3
push
es
mov
xchg
nop
stos
stos
sub
mov
mov
aad
in
cmp
jmp
jp
mov
xor
add
cmp
outsb
add
mov
sbb
bound
test
fs
lock
ss
cmp
or
stc
lods
push
push
aaa
in
call
push
idivb
add
dec
push
mov
sahf
or
xchg
lea
or
xor
add
scas
call
int
adc
addl
inc
loop
in
popa
xlat
jp
add
fisubl
daa
shll
cmp
ss
rsm
out
dec
sbb
adc
add
popf
inc
add
shll
sbb
daa
mov
cmp
outsl
or
ftst
sub
outsl
xchg
or
xor
icebp
or
mov
cmp
pop
cmpsl
repz
pushf
lds
outsb
divl
les
jb
add
add
jnp
dec
nop
cli
lods
adc
cmp
into
cwtl
push
and
cwtl
xchg
movsb
jo
mov
fstpl
jg
jl
fidivrl
scas
cld
cs
lcall
mov
xor
aaa
out
out
das
sub
in
cmpsb
cmp
jno
adc
leave
int
aad
std
or
lods
dec
mov
outsb
inc
and
mov
shrb
and
shl
in
mov
or
jbe
mov
pusha
insl
cmp
inc
or
xchg
pop
aas
mov
popf
adc
pop
cmp
push
cmp
testb
pop
cmp
cmp
adc
adc
test
scas
inc
hlt
cmp
pop
fildll
shrl
rorl
idivl
icebp
xorb
push
leave
dec
push
pop
cmp
inc
sbb
call
ljmp
and
or
insl
into
mov
repnz
addr16
jg
pop
jne
popa
test
push
fdivs
sub
push
push
add
inc
and
pop
fidivl
clflush
notl
imul
cmp
sbb
test
int3
in
dec
add
test
je
jge
and
xchg
or
cmp
xchg
int
xor
adc
push
jecxz
push
lods
mov
fsts
adc
xchg
cwtl
pop
data16
lock
mov
sahf
mov
cld
mov
mov
or
mov
sub
inc
xchg
dec
xchg
dec
aam
mov
sbb
push
lods
stc
mov
sub
popa
lea
rol
mov
lods
push
fimull
stos
adc
movsb
scas
in
stos
rcrl
call
xchg
and
fldl
jle
or
adc
mov
sub
cmpsl
jne
inc
js
add
xchg
inc
cmp
and
push
out
js
jae
or
aad
in
or
stos
loop
pushf
repz
mov
dec
cwtl
lock
scas
gs
sbb
decl
clc
aas
in
and
shl
xchg
dec
lahf
mov
movsb
je
pusha
and
les
jbe
xor
aas
bound
lea
jno
push
stc
repz
sub
sarl
xor
movsl
arpl
xlat
enter
cs
leave
out
gs
adc
sets
enter
add
sbb
inc
inc
push
and
push
xor
into
rcrl
ficoml
and
in
int
xor
test
adc
in
jnp
out
and
xchg
mov
xchg
dec
mov
or
addr16
mov
push
mov
mov
mov
cmp
cltd
adc
dec
hlt
add
or
mov
movsl
fisttps
xchg
imul
sub
push
sub
movsl
mov
shlb
into
in
adc
pop
out
sbb
cmpsb
jg
pop
into
leave
xor
mov
pop
cmp
mov
aam
mov
arpl
aad
lds
ja
andb
mov
xchg
jg
jge
ret
sub
out
inc
jns
sbb
loopne
jmp
sub
in
popa
pop
dec
push
push
push
in
in
out
xor
fldt
inc
repz
mov
rcrl
add
int
push
mov
inc
out
inc
and
arpl
fdivp
negb
xchg
test
popf
aas
sbb
movb
fldt
jne
dec
lods
addr16
adc
and
shl
mov
sbb
inc
cmp
into
mov
xor
sbb
test
mov
cmc
mov
out
jns
pop
cli
cltd
inc
out
or
dec
inc
xor
or
jne
sbb
ds
aam
jae
cmp
data16
cmp
xor
repz
sub
cmp
adc
or
out
cmp
repz
mov
scas
inc
testb
dec
aad
adc
dec
loopne
add
jp
leave
iret
xor
sbb
pop
cmp
stc
out
xchg
push
lcall
negb
cs
or
xchg
adc
sbb
mov
mov
mov
imul
je
stos
xchg
push
lea
outsl
aas
pop
les
pop
cmp
cmp
lods
insb
imull
bnd
imul
lock
xchg
push
sbb
aad
sarb
insb
jne
imul
sbb
jp
out
movsb
cmp
xchg
xchg
mov
mov
sub
testb
les
jne
icebp
lcall
cmpsl
push
sub
adc
dec
lods
out
hlt
xchg
add
or
in
sbb
push
and
adc
loop
jnp
cmpsb
xor
push
in
cmpsl
inc
cltd
imul
cmp
add
leave
mov
sbb
xchg
push
xor
test
loope
mov
ret
rcl
stos
js
movsb
loope
roll
mov
pop
xchg
add
xlat
jbe
inc
push
xor
movsb
jnp
cmp
jns
mov
outsb
xor
jne
mov
cld
jmp
xchg
inc
sbb
fcoml
pop
mov
push
mov
push
aad
push
in
push
cmp
das
sarb
and
or
das
jmp
test
stc
in
mov
movsb
pop
lea
shrb
xchg
scas
add
inc
rorb
out
in
repnz
insb
dec
leave
pop
lds
adc
test
addl
pop
sbb
mov
and
cwtl
fdiv
or
jge
jae
mov
test
dec
test
dec
mov
loop
jb
push
cmpsl
cmpsb
sbb
mov
cmp
flds
mov
sub
cld
ss
shr
sahf
mov
sub
add
sbb
fcomip
stc
jl
add
mov
in
jne
neg
into
or
or
dec
sub
aam
into
out
pop
cmc
scas
jo
out
fsincos
xor
jle
ss
lods
imul
adcb
popa
imul
repnz
sti
push
pop
push
lods
movups
cmp
sbb
je
cmp
aaa
jl
mov
mov
and
nop
inc
mov
ja
and
loope
sarl
ret
adc
inc
loopne
fst
nop
idivb
sbb
insb
cmp
and
ss
dec
add
or
dec
mov
cmp
mov
xchg
popf
xor
aam
movsl
mov
mov
mov
mov
int
adc
jmp
icebp
and
xor
sub
or
lds
xchg
aaa
in
pop
sbb
adc
dec
fcomp
in
xchg
push
fisttpll
mov
add
mov
sbb
sbb
popf
jmp
sub
pop
mov
iret
jp
push
dec
rclb
inc
mov
test
mov
inc
cmp
push
xor
mov
dec
in
out
imul
inc
push
dec
inc
or
pop
jb
iret
fcoms
inc
fstp
ja
ja
sub
filds
xchg
sub
dec
nop
sbb
push
inc
pusha
dec
inc
jle
sub
shrl
les
das
mov
jne
dec
out
imul
push
lock
add
daa
ficoml
fstpt
mov
dec
inc
lea
and
jp
arpl
dec
mov
lahf
and
aam
int3
mov
sbb
fdivrs
jle
cli
jg
push
and
sti
pop
fucom
decl
cs
mov
cs
push
dec
dec
gs
xchg
lds
imul
mov
loopne
popa
pushf
xor
bound
add
mov
inc
push
dec
pusha
xchg
cmpsb
xor
mov
ds
push
or
stos
sub
fdivrs
pop
mov
and
leave
xchg
insl
daa
sbb
arpl
mov
outsl
and
stc
mov
mov
jle
sbbl
inc
sub
sub
sbb
xabort
cmovae
pop
push
into
push
lods
cwtl
ret
lods
sti
jmp
xchg
jle
sub
imul
je
pop
out
std
add
inc
cmc
and
insl
repnz
mov
mov
pushf
mov
mov
fwait
sti
fidivrl
lret
test
jg
mov
mov
push
stc
bound
lods
sbb
cli
push
loop
test
outsb
inc
xchg
call
cmp
jecxz
insl
adc
gs
lret
cmpsl
stos
push
sub
pop
and
pusha
xchg
mov
loope
sbb
mov
lea
stos
jmp
enter
js
repnz
adc
out
sbb
bound
lahf
movsl
pop
pushf
dec
jge
push
fnstsw
test
cmp
mov
jge
shrl
xor
inc
test
sbb
les
ja
push
push
xchg
cltd
xchg
sar
jbe
mov
adc
push
subb
cmp
fdivs
push
inc
out
pop
xor
mov
add
pushl
mov
push
ja
pop
xchg
and
rcrb
or
cli
nop
adc
mov
mov
sbb
pop
inc
inc
xchg
leave
lahf
in
cwtl
or
mov
xchg
jbe
das
xchg
sbb
daa
xor
test
sbb
cmp
mov
mov
lods
mov
iret
addr16
push
mov
ret
loopne
lahf
das
push
leave
rorl
add
mov
fidivrs
mov
adc
xchg
insb
test
shlb
inc
stos
fnsave
pop
push
int
aas
int3
sub
push
pop
or
loope
loope
rcrl
cs
ficompl
or
lock
add
fidivrs
mov
jmp
enter
xor
sti
and
leave
stos
pop
stos
mov
mov
scas
mov
cmp
mov
push
mov
xor
sbb
mov
mov
and
mov
aad
fimuls
mov
rcrl
aam
sub
fsubrl
push
and
lret
mov
xchg
xor
cmpsb
and
das
mov
inc
mov
fsubp
jp
outsb
adc
cmpsl
push
iret
lcall
das
sbb
or
push
push
pop
mov
iret
xchg
fs
popa
test
call
mov
jbe
or
movsb
xlat
jae
jns
pop
jle
push
pushf
fcmovnbe
inc
or
adc
in
xchg
dec
jae
out
daa
jb
cmp
mov
jns
stos
mov
dec
lods
cmpsl
inc
daa
mov
aad
or
jne
mov
in
cmp
xchg
cmc
shl
test
outsb
xchg
mov
jmp
inc
pop
shlb
data16
out
adc
repz
pop
sahf
mov
jno
fcoml
or
pop
push
pushf
pop
cmpsb
fists
push
xlat
int
sub
xchg
push
es
lock
cmp
cmp
icebp
mov
rdpmc
mov
ds
push
jo
movsb
insl
mov
push
jo
push
fs
cmp
xchg
ret
out
pop
movsl
rolb
cmp
pop
lock
test
add
fwait
pushf
nop
add
in
divl
fdivrl
insl
jle
push
cmc
mov
jo
sub
cmpsl
sub
sbb
sub
jmp
mov
movsl
jne
cmpsb
mov
lcall
xchg
push
dec
pop
xor
or
lds
dec
stos
sub
add
mov
cltd
xlat
adc
in
jg
jb
ds
xchg
inc
dec
jmp
fs
ds
loop
jb
cwtl
outsb
loopne
rclb
enter
mov
jnp
pop
dec
int
je
aaa
mulb
or
outsl
dec
out
int3
sbb
sbb
addr16
and
rolb
loope
std
sbb
jbe
pop
push
gs
adc
out
push
punpcklwd
xchg
xchg
ds
mov
mov
cmp
xor
sbb
xchg
insl
outsl
jp
imul
pop
and
enter
aad
add
je
mov
mov
push
lcall
rorl
ds
or
mov
xchg
cmpsl
ficomps
dec
push
jns
jle
xor
sahf
jb
xchg
push
cmp
fs
or
orb
sbb
mov
dec
sbb
mov
xchg
sbb
xor
xor
stos
imul
shl
das
loopne
push
xchg
inc
mov
fisubrs
clc
push
jp
data16
pop
gs
add
adc
out
or
push
fs
inc
dec
std
cmpsl
ss
cmpsl
mov
push
insl
inc
lock
or
jl
xchg
in
rcll
sbbl
dec
loop
fdivrs
push
pop
add
sub
and
lcall
andl
ds
or
sbb
mov
mov
and
lcall
movsb
ret
jnp
fldenv
adc
xor
jae
push
iret
and
negb
push
inc
fnstsw
cmp
loopne
vmulpd
cmp
push
xlat
push
rorl
mov
xchg
movsl
adc
sbb
xchg
in
dec
cmp
bound
out
leave
inc
shrl
mov
cmp
add
adcb
mov
cmpsl
sub
mov
mov
aam
pop
mov
add
test
in
and
xchg
stos
sub
push
mov
and
aaa
sarl
xor
jnp
ja
or
add
cld
stos
xor
push
rcr
mov
push
dec
out
ud1
mov
xor
es
sub
je
inc
flds
loope
and
sbb
jae
mov
cmp
cs
nop
repz
int
sarl
jo
mov
add
fdivs
pop
lods
int
mov
std
add
sub
cmp
xchg
ja
xor
dec
cld
outsb
addr16
not
adc
imul
cmpsl
adc
in
add
outsl
mov
icebp
adc
jge
sbb
lret
jp
jp
xor
dec
movsl
int3
dec
xor
aad
xchg
aas
jp
mov
adc
pusha
mov
push
and
push
sbb
outsb
pop
arpl
pop
xor
or
dec
setl
pop
sahf
idivb
je
mov
stos
js
cmp
mov
pop
cmp
hlt
test
inc
imul
mov
in
out
rcrb
add
and
and
test
xchg
xor
adc
sub
mov
or
cmp
iret
adc
mov
loope
dec
mov
in
pop
pop
push
mov
jno
repz
pop
sub
out
push
aaa
or
inc
aam
fwait
inc
or
jle
call
cltd
jmp
pop
lahf
mov
lcall
pusha
xchg
push
mov
lods
mov
rclb
scas
ljmp
insb
jp
test
xor
shlb
rclb
nop
push
inc
dec
test
imul
adc
scas
pop
ljmp
mov
js
lahf
mov
jnp
fwait
push
popf
fnstsw
adc
imul
add
std
testl
dec
sbb
mov
inc
out
ja
mov
mov
cwtl
or
mov
stos
nop
push
into
dec
pop
inc
jnp
pop
pushf
and
out
addl
add
mov
mov
test
push
xchg
icebp
in
lods
ret
mov
jmp
call
mov
ljmp
xchg
lret
push
out
imul
adc
push
lds
mov
sub
cwtl
pushf
inc
scas
aam
out
or
cmp
or
jecxz
pop
repz
cmp
sbb
sub
enter
cltd
lret
lock
cmp
and
jl
test
imull
adc
repz
lea
ljmp
outsl
xchg
inc
movsb
jae
fdivs
jle
push
xor
in
mov
push
jle
cmp
mov
addr16
fdivs
lds
in
test
sbb
mov
pop
sbb
mov
popf
out
xchg
xor
jno
add
mov
jecxz
fiadds
mov
jg
fs
dec
dec
fstpt
pop
cmp
and
xor
ds
fldt
jl
andl
pop
mov
scas
popa
dec
dec
mov
or
mov
data16
bound
outsb
xchg
adc
jb
mov
mov
je
call
in
push
inc
lahf
lock
sbb
fld
jbe
repz
sub
jle
mov
jmp
ret
cmp
fmul
nop
ss
push
rcll
mov
je
int3
lock
and
lret
test
adc
imul
mov
xlat
fisubrl
loop
arpl
adc
mov
xor
test
scas
lds
jae
sub
ror
repnz
jecxz
hlt
test
sbb
or
cmp
add
mov
rolb
push
or
fsubs
fstpl
push
xchg
jmp
add
inc
imul
call
lods
test
cmp
shl
out
adc
xor
mov
push
push
jb
adc
rcrl
xor
imul
or
arpl
sbb
xor
movsb
adc
pop
retw
mov
stc
data16
and
and
dec
push
icebp
push
cmp
xlat
test
add
enter
or
daa
mov
into
int3
push
mov
cltd
cs
jg
sub
arpl
test
idivl
xor
or
pop
hlt
cmc
push
cmc
adc
mov
dec
mov
fneni(8087
cltd
aas
cmp
adc
icebp
adc
xor
popa
add
ja
fildl
mov
ljmp
ss
mov
jecxz
scas
xchg
cli
ja
lahf
adc
out
mov
mov
mov
mov
mov
out
lahf
dec
ds
cmp
push
pusha
stc
imul
and
sub
imul
les
lea
push
push
mov
cmp
jmp
dec
loop
hlt
adc
jno
insl
xchg
jbe
push
push
and
dec
movsb
push
jecxz
inc
and
loop
dec
stos
dec
mov
mov
push
sbb
mov
imul
sets
not
mov
xchg
xchg
jle
stc
and
outsl
xchg
in
das
in
scas
sbb
inc
push
jno
or
dec
imulb
mov
and
xchg
es
pop
push
mov
xor
pop
mov
jp
cmp
divl
fxch
lret
fdivrp
and
pop
push
pop
outsb
inc
add
jmp
lret
and
xorl
dec
popf
out
movsb
roll
mov
push
mov
out
sbb
pop
xor
scas
inc
ret
dec
es
int3
xchg
sbb
divb
into
sub
dec
cld
subl
add
fucom
sti
xor
ficoml
xchg
dec
mov
dec
xchg
cli
popfw
or
add
adc
addr16
pusha
stos
aad
popa
pop
movsb
data16
xor
adc
ret
mov
leave
ret
std
pop
push
cmpsb
adc
test
dec
dec
mov
xchg
and
mov
dec
xor
inc
sub
jno
jns
lock
ds
cli
mov
xchg
cmp
outsb
lret
push
jg
hlt
mov
call
mov
sub
int3
adc
out
lahf
out
add
jg
pop
mov
fnsave
inc
out
fnstenv
shlb
mov
jmp
andl
test
xchg
out
insb
popa
push
leave
es
lds
sub
xchg
push
add
ret
or
mov
mov
mov
sbb
jl
in
test
mov
lcall
or
jno
add
insl
pop
lods
arpl
xchg
cmpsl
sbb
roll
mov
jb
fs
fldt
jae
bound
and
pop
lods
cmpsl
loope
sahf
fdivrl
idivb
aad
jo
addl
mov
cwtl
jns
cmp
xor
push
jle
into
jmp
jge
call
rclb
xor
incb
jge
jecxz
and
dec
xchg
or
xchg
push
mov
xchg
daa
stos
std
ss
popl
adc
jnp
mov
adc
jmp
jbe
mov
cmp
pop
dec
les
out
fisttpl
les
pusha
jo
xchg
xchg
or
rcll
jg
push
cld
leave
in
mov
lahf
cs
test
and
cmp
lret
dec
aas
inc
fnstsw
cmpsl
test
or
or
sub
mov
call
out
mov
inc
mov
mov
jge
jmp
scas
aad
push
sti
xchg
mov
cmp
or
inc
cmp
in
scas
mov
lret
xchg
xchg
inc
mov
mull
popl
adc
push
dec
sbb
add
cmp
leave
adc
fimuls
xchg
cld
loop
test
cmp
and
pop
sbb
cltd
test
mov
inc
movsb
ret
xchg
pop
mov
sbbl
add
movsl
aas
mov
addr16
pop
sub
inc
and
dec
xchg
in
or
subb
mov
sbb
enter
inc
push
fmuls
bnd
fistps
ljmp
cwtl
es
mov
jno
imul
pop
aad
and
or
adc
or
xor
lret
mov
jns
jbe
mov
out
call
inc
ja
sbb
pop
jbe
push
lret
stos
rolb
sub
jno
out
pusha
sbb
cwtl
or
iret
xchg
mov
ds
cmpsl
mov
sbb
adc
clc
cmp
xor
in
mov
push
nop
loopne
mov
sub
repz
sahf
loopne
fisttps
fcomps
jo
fcoml
rcr
cmp
popa
xchg
daa
push
mov
cmp
add
jo
push
mov
xchg
push
pop
sbb
dec
mov
and
bound
sub
imul
gs
orl
mov
mov
dec
push
jmp
in
nop
out
and
insl
and
jno
push
push
bound
rolb
stos
loope
dec
out
sbb
pop
sbb
push
mov
rclb
out
jno
push
fsubrs
add
jecxz
aaa
push
rolb
jb
shrb
pusha
imul
mov
mov
shrw
adc
sbb
push
pop
mov
std
mov
inc
movw
je
pop
sbb
fistpll
inc
jnp
jns
xchg
inc
push
movsl
fbstp
movsl
fsubrs
leave
sahf
push
rcrl
andl
jno
push
xchg
lods
pusha
lods
mov
sti
cwtl
push
gs
sub
and
shrb
inc
cltd
es
aam
lea
mov
scas
fcmove
je
pop
push
mov
int3
xor
test
js
push
jne
gs
arpl
mov
mov
shlb
mov
or
call
jmp
faddl
add
ds
pavgw
in
stos
ja
sbb
scas
outsl
les
dec
bound
rcrb
adc
pop
arpl
aas
fnstsw
rep
icebp
lods
xor
enter
and
fsubr
clc
sbb
and
mov
sub
jb
ja
sbb
xchg
shll
inc
jmp
xorl
adc
repz
pop
jae
push
and
pop
cld
addl
or
nop
mov
mov
dec
jle
inc
loop
or
dec
sbb
xchg
hlt
iret
fldcw
dec
sub
adc
xchg
push
adc
pop
push
scas
and
mov
jae
cltd
mov
jl
sarl
or
mov
popa
sub
add
mov
add
repz
sbb
loopne
jnp
sub
or
or
in
rcrb
inc
inc
jns
es
cmp
xchg
mov
into
pop
jb
mov
add
sub
ss
cmpsb
pop
xchg
fcoml
inc
adc
jne
push
xchg
ds
mov
out
or
push
jle
test
lds
ret
popf
add
sbb
pop
pop
mov
or
in
scas
ret
mov
fimull
cmp
lcall
lret
stc
xchg
mov
mov
mov
push
int
vpsraw
repnz
sbb
xchg
inc
adc
fs
movb
sbb
mov
pop
sbb
jne
and
sub
xor
pop
push
cmp
mov
adcl
jle
les
sahf
aad
sub
test
cmp
imul
sub
aaa
fstpl
jge
lea
rep
push
out
aas
jmp
pop
imul
jbe
cs
or
xchg
rcrl
or
enter
push
pop
rol
xchg
mov
jno
jp
pop
pop
rol
mov
in
jmp
lahf
test
out
scas
call
addl
rcrl
outsl
int
jg
lret
sahf
lds
das
dec
repnz
jb
push
movb
push
push
jbe
outsl
pop
imul
pop
test
mov
inc
jle
bound
jg
jns
mov
jecxz
hlt
xchg
add
jl
test
leave
dec
imul
pop
ret
dec
pop
fsts
js
imul
inc
inc
rcll
mov
sahf
popa
add
push
je
sbb
leave
shlb
dec
add
pushf
pop
xchg
cmpsb
xor
push
sub
adc
push
xchg
outsb
fwait
in
int
push
insl
neg
fisttpl
ror
xlat
jmp
add
xchg
mov
xchg
sti
lret
push
dec
or
xchg
xor
fs
and
jp
cmpsb
mov
mov
inc
call
xchg
cmpsl
push
pop
xor
mulb
cmp
div
sub
roll
push
mov
xchg
jo
pop
lods
cmc
or
inc
loop
add
rorb
add
push
push
adc
loopne
push
cmp
dec
gs
sub
jo
pop
jns
mov
push
popa
sub
inc
xor
xchg
mov
fsubs
sub
fs
iret
xor
call
inc
sbbl
jbe
imul
sbb
sub
popa
xor
pop
inc
mov
movsb
mov
and
loop
jp
jg
stc
add
dec
push
push
lret
jo
mov
inc
jp
ficoms
out
aam
cmpsb
lea
adc
les
out
jb
sub
fsubrl
mov
in
insb
jge
lds
dec
cmp
cwtl
mov
sbb
lret
push
jp
mov
fwait
stos
imul
jmp
jle
adc
and
mov
je
repz
int3
popl
nop
mov
in
bswap
xor
mov
cld
and
push
out
dec
jg,pt
out
ffreep
sahf
mov
jp
mov
mov
and
out
sbb
adc
jb
push
imull
std
or
sti
xchg
inc
add
dec
xchg
xchg
mov
add
les
mov
sub
sub
push
je
in
loopne
mov
jp
enter
mov
imul
pop
subl
jae
aad
enter
cs
and
dec
inc
ret
pop
addr16
inc
incb
sub
jge
shl
bts
inc
scas
stos
nop
pop
fnstsw
int3
lahf
icebp
fstpt
sbb
pop
mov
mov
mov
in
sti
sbbb
icebp
repnz
hlt
pop
hlt
sbb
xor
add
insl
test
enter
jne
ret
sub
int
dec
mov
cmp
test
in
jbe
repz
push
lods
int3
fdivrs
push
pop
sub
pop
in
int
in
add
push
inc
imul
push
sbb
clc
push
mov
aad
shll
les
fisubs
cmpsb
lret
lcall
movsl
xor
xchg
scas
nop
adc
cmp
sbb
dec
outsb
ja
mov
pop
jg
mov
ret
adc
fdivl
and
sbb
sbb
mov
cmp
dec
fstpt
adc
in
mov
push
mov
ds
fdivs
jb
fidivrl
test
or
sbb
out
mov
xor
test
cmpsb
lock
test
std
icebp
ds
mov
cmp
test
jnp
icebp
fucomip
orl
enter
cmpsb
lock
test
popf
jbe
jl
add
rcrb
enter
mov
jbe
lret
push
les
rolb
sbbb
jnp
adc
xchg
xchg
jecxz
fists
fldenv
out
xor
outsb
mov
shrb
push
test
dec
ljmp
inc
jnp
jne
pop
mov
ret
out
stos
push
pushl
xchg
ss
push
cltd
or
js
mov
xor
inc
subb
loope
ret
cld
movsl
push
imul
cwtl
pop
fisubrs
sbb
stc
bound
pop
paddd
jecxz
or
test
nop
xor
sarb
sbb
in
outsb
fimull
xchg
mov
out
out
cmp
ljmp
movsb
inc
mov
fdivrs
add
adc
cmp
cmp
ret
icebp
pop
pop
imul
add
movsl
ja
and
call
add
loope
iret
nop
shrl
adc
cwtl
mov
cmc
add
mov
pop
cld
jns
lret
clc
cmp
add
addr16
pop
dec
in
mov
andb
inc
fisubl
and
sbb
repnz
ds
push
xor
shlb
jno
cltd
dec
push
sub
pop
xchg
aad
loop
lcall
xchg
cli
orb
cmp
rorl
cmc
shr
fists
rorl
jp
push
mov
cld
daa
inc
cmp
je
pop
push
icebp
mov
cmpsl
pusha
leave
mov
fldenv
jbe
mov
xor
xchg
mov
mov
xchg
mov
jge
stos
xor
shll
mov
iret
pop
in
pop
inc
mov
iret
push
mov
bound
out
mov
fstl
cmp
fcomip
sti
daa
outsl
pop
scas
in
insb
push
or
aas
loope
mov
and
mov
lahf
fildll
and
enter
repz
fldt
push
xor
lea
add
sub
adc
orb
imul
test
pop
insb
or
in
push
fcmovne
ja
rorl
sbb
mov
xor
inc
testb
jp
add
stos
les
pop
and
xchg
icebp
pop
xchg
or
dec
cmp
jne
pop
es
pop
test
std
cmp
sbb
mov
and
dec
hlt
ss
inc
imul
dec
lret
ljmp
nop
push
loop
outsb
mov
xchg
dec
and
shlb
push
cmpsb
shl
push
inc
in
and
pop
add
jb
dec
movb
xchg
loopne
aas
sub
lahf
xchg
jle
loope
jo
sub
addl
mov
cli
pop
lods
xchg
fsubs
inc
add
cmp
dec
mov
dec
push
in
sbb
jbe
pushf
lcall
and
test
mov
aad
xor
addl
cmp
in
push
add
ret
test
mov
in
mov
push
je
ficoml
data16
orb
hlt
lahf
insb
jo
jne
pop
stos
or
add
aaa
fmuls
mov
out
popa
push
pop
mov
cli
movsl
xchg
cmc
xchg
xchg
test
in
out
sub
and
ljmp
out
ret
inc
jno
xor
decb
xor
adc
xor
int
sub
sbbl
ds
ret
stos
pop
cmp
sbb
dec
insb
incl
xchg
xchg
lcall
shl
add
push
adc
das
inc
outsl
cmp
movsb
dec
and
dec
js
adc
stos
jb
aas
jcxz
popa
rcll
cmp
les
fsubrs
gs
das
in
daa
mov
and
iret
jmp
cmc
loop
jl
mov
sbb
iret
push
jae
es
add
dec
ja
or
lods
sbbl
sti
outsb
cmp
sub
sbb
mov
jae
jb
aad
aam
aas
cmp
stc
xchg
lcall
cmc
sbb
addr16
add
mov
push
xor
lods
lret
cmp
fwait
inc
mulb
fcmovne
fwait
adc
jle
or
cld
fisttpll
and
xor
add
sub
in
add
or
push
xor
hlt
mov
testb
hlt
mov
adc
stos
jbe
pushf
sbb
loope
or
addr16
xor
jl
mov
mov
pop
mov
ljmp
mov
pop
shlb
mov
dec
push
mov
add
cli
outsl
loopne
popa
inc
cmp
insb
stc
sbb
pop
mov
loop
xchg
rcll
shl
lods
nop
push
sub
popf
mov
adc
outsl
scas
push
mov
mov
call
xlat
or
mov
xor
sbbb
push
rorl
aas
int
sub
adc
inc
in
mov
shrb
sbb
in
cmp
sub
cmc
mov
push
push
or
jnp
and
in
leave
xchg
inc
lea
lahf
mov
and
jg
gs
sbb
sub
dec
xor
in
pusha
repz
test
push
pop
test
dec
lds
push
scas
dec
icebp
inc
adc
leave
mov
fwait
nop
sub
jb
inc
mov
stos
jge
fcoms
add
hlt
push
shr
mov
jmp
mov
and
and
dec
mov
xor
xor
pop
mul
sbb
lods
lods
sbb
pop
jmp
or
and
sbb
jb
or
xchg
or
clc
mov
arpl
jbe
dec
push
out
cmp
lahf
jnp
outsb
jae
test
inc
cmp
adc
jne
imul
ss
popf
sbbl
lcall
push
sbb
xor
ljmp
or
in
mov
bound
dec
stos
dec
out
aam
or
lcall
mov
das
stos
mov
lods
mov
xchg
inc
in
jecxz
mov
push
cmc
scas
out
rcrb
scas
imul
cs
xchg
jo
xchg
cli
test
dec
xor
mov
mov
mov
inc
ror
push
jnp
pop
push
ja
out
addb
xchg
mov
bound
sbb
adc
addr16
inc
jno
gs
sbb
jbe
xor
mov
inc
repnz
push
jmp
jle
sbb
cld
cmc
push
loopne
subb
lods
or
push
sbb
add
lret
and
sub
push
push
jns
jb
mov
mov
pop
sbb
inc
add
pop
mov
icebp
sbb
sub
int
rcrb
dec
cmp
push
lret
shlb
fisubs
mov
mov
adc
hlt
test
in
lret
xor
not
push
iret
fs
into
sub
or
lret
fists
scas
inc
pop
pop
pop
loop
es
sbb
cmp
fnstenv
lret
push
icebp
bound
push
out
push
inc
xchg
das
inc
gs
xor
jl
pshufw
pop
pop
int
jl
mov
out
loop
add
repz
cmp
pop
xchg
sbb
pop
outsl
movsl
les
and
jge
pusha
sub
and
fistps
iret
sbb
xor
sbb
into
mov
roll
xlat
sub
xchg
jbe
int3
in
mov
mov
inc
sbb
lret
adc
out
mov
adc
adc
jge
jo
sahf
sub
jl
rcr
dec
dec
jl
movsl
sahf
jb
mov
scas
sbb
std
sbb
pop
fistl
in
cwtl
mov
enter
test
scas
rcl
xor
les
cli
jmp
mov
cmc
push
and
push
or
xchg
jno
mov
xchg
test
rcl
test
sbb
and
call
sbb
mov
and
subb
popa
rol
rol
mov
cmp
lock
pop
add
leave
es
gs
mov
aas
xchg
or
test
js
pop
add
movsb
xor
sub
push
push
add
mov
cld
in
fidivrl
inc
cmp
sbb
ret
push
inc
add
sub
pop
stc
mov
pusha
sub
mov
icebp
inc
cmc
inc
lods
inc
cmpb
es
lods
es
inc
nop
imul
je
ret
int
jecxz
sub
cmc
cwtl
push
mov
out
ss
inc
out
pop
pop
pop
and
mov
sub
das
xchg
mov
sbb
loope
out
dec
mov
js
hlt
adc
sarl
clc
popa
movb
loop
mov
stos
sub
add
add
add
cmpsl
cmpsb
cmc
mov
and
sub
cmovns
cmp
aaa
cli
loopne
push
pushf
jge
faddl
jg
jle
jbe
sbb
lea
shrl
lret
xchg
sub
add
add
nop
sub
pop
mov
cmp
inc
inc
mov
addr16
mov
es
jl
xor
xchg
repz
imul
mov
push
jge
add
cli
fnstenv
jns
aas
and
xchg
sbb
sbb
inc
or
xchg
sbb
shll
fists
test
push
mov
add
shll
mov
jns
mov
sbb
push
add
aad
popa
inc
mov
mov
cmovl
mov
out
cmp
fnstsw
popa
inc
or
xchg
lret
inc
or
sbb
and
jbe
jno
mov
testb
or
fwait
inc
cmp
fdivl
adc
mov
movsb
push
mov
cmp
outsb
out
lret
adc
ljmp
pushf
sbb
sbb
loopne
scas
inc
int3
pop
das
stc
rcrb
jae
popa
add
lahf
out
adc
or
and
push
lcall
or
sbb
outsb
sub
int
jecxz
sahf
sar
punpckhbw
mov
xchg
mov
and
mov
jecxz
pop
mov
addl
jb
into
or
popa
push
xor
dec
pop
cmp
notb
test
ret
int3
push
icebp
lahf
add
stc
ja
ret
and
push
daa
pop
inc
mov
and
xor
add
test
ds
pop
and
outsl
bound
scas
out
xor
imul
es
and
sbb
xor
lea
add
rolb
addb
pop
sbbl
je
daa
mov
out
insb
mov
xor
jl
xor
fnstcw
push
mov
ret
push
adc
mov
mov
jnp
das
fsub
sahf
scas
ja
jecxz
sbb
mov
push
jecxz
jl
xor
push
mov
cmp
mov
cmc
aad
fdivrs
sub
dec
cli
mov
adc
dec
outsl
daa
and
dec
insb
mov
xchg
mov
dec
insb
pop
pop
outsl
outsb
mov
cmp
dec
pop
jle
push
mov
fdivrl
cmp
sbb
mov
stos
cmpsl
fidivs
movsl
mov
sub
inc
sbb
adc
or
daa
mov
sbb
dec
cmpsl
cld
push
xor
bound
dec
lcall
lods
shrl
popf
mov
pop
je
lret
push
shrl
cmc
rcrl
sbb
in
inc
inc
imulb
jle
pop
aaa
popa
sub
aas
idivl
mov
lcall
movsl
fs
xchg
sub
xlat
or
dec
jle
call
out
mov
imul
inc
mov
or
test
andl
adcl
jne
aam
into
xlat
cmp
xchg
arpl
lds
pop
xor
insl
insl
int3
addr16
fwait
aaa
xchg
ss
xchg
test
or
pushf
movsb
mov
xchg
add
or
dec
push
xchg
push
mov
sub
adc
in
adc
cld
test
call
pop
or
lret
lods
addr16
rorl
xchg
shll
js
pop
enter
mov
and
xchg
push
lods
aaa
mov
cmp
mov
mov
xchg
mov
add
sub
dec
repz
dec
pop
push
pop
inc
dec
fs
sub
imul
cmp
mov
sahf
pop
in
and
in
popf
or
adc
push
dec
push
mov
ds
inc
loope
int3
and
mov
shrl
jge
dec
rorl
mov
jecxz
lret
sbb
xlat
xchg
jns
jecxz
inc
stos
mov
mov
add
daa
aam
lret
cld
or
or
jbe
stc
pop
roll
xchg
cmp
xor
xor
dec
outsl
jmp
or
xchg
enter
or
test
in
pushf
sub
lret
push
mov
mov
sbb
xor
cmp
aas
or
xor
shll
mov
pop
and
ret
lea
mov
pop
mov
testl
xlat
cmp
scas
xchg
or
cmp
cmp
xor
push
cmp
js
shlb
cmp
push
xchg
call
mov
inc
xchg
or
enter
jnp
push
sahf
inc
xlat
rclb
sub
ljmp
push
test
and
bound
mov
out
inc
adc
incb
aad
xlat
push
push
aaa
xchg
or
dec
push
cmp
add
adc
pop
or
test
push
push
jecxz
insb
dec
loope
mov
xchg
pop
pop
imull
adc
mov
pop
adc
shrb
loopne
sbb
jne
pop
pushw
ret
test
push
pusha
adcb
xlat
movsl
dec
ret
ss
inc
pop
in
adc
cmpsb
fldenv
inc
pop
in
daa
lret
xchg
rcll
fwait
pop
int
jl
dec
test
add
and
mov
dec
dec
sbb
movsl
inc
mov
imul
pop
push
lahf
rcll
cltd
mov
aaa
dec
xchg
push
adcl
or
mov
inc
jge
popa
lea
ljmp
pop
cmp
lods
push
test
imul
ljmp
pop
ret
add
fneni(8087
push
mov
jmp
dec
dec
xor
call
sar
sub
cmp
jae
ret
pop
and
in
adc
cmp
mov
cwtl
addb
push
cmpsb
ljmp
jg
jns
mov
iret
fnstcw
insl
out
sub
fdivrp
nop
push
mov
push
data16
sbbl
dec
sbb
jmp
inc
mov
jecxz
in
icebp
fistl
xchg
mov
mov
testl
add
popa
int
or
mov
mov
mov
jge
cwtl
pop
dec
xchg
or
insl
mov
pop
cmc
pop
repnz
cmp
mov
ja
xchg
fstpt
push
and
push
gs
add
mov
or
sti
fisttps
mov
mul
test
sub
mulb
push
cmp
andl
ret
mov
out
clc
mov
pop
stos
xchg
mov
xchg
das
cmp
shlb
data16
push
push
popf
fsubl
mov
mov
stos
rorl
outsl
loope
jns
popf
cmp
dec
jecxz
repz
sar
in
imul
int3
nop
pop
xlat
shl
loop
cmc
nop
imul
iret
cmc
adc
mov
shr
mov
movsl
and
sub
mov
test
fnstsw
shlw
mov
push
bound
jne
aam
mov
add
leave
addr16
ja
call
add
jnp
leave
jg
addr16
pop
hlt
xchg
push
sub
mov
cmp
or
out
addl
mov
pop
push
jno
xchg
sub
jnp
cmc
mov
dec
out
inc
xor
push
arpl
or
cmpsb
pop
xor
cmp
mov
cmc
aas
mov
adc
test
xchg
shll
push
xchg
xor
adc
cltd
inc
pop
sbb
inc
jae
pop
jmp
std
inc
clc
push
loope
repz
jge
shlb
stc
movsl
fmull
inc
arpl
push
adc
das
push
jg
add
adcl
out
mov
pop
xor
lea
jns
pop
js
mov
mov
xorb
addr16
out
nop
sbb
xchg
and
mov
push
lret
mov
mov
dec
xchg
cli
xchg
xor
repnz
out
and
sbb
test
std
adc
fwait
test
fldcw
scas
ljmp
ret
xor
inc
mov
out
loope
xor
mov
into
or
sbb
int3
jl
fstps
test
xor
push
mov
outsl
mov
jg
xchg
les
add
incl
pop
xchg
adc
je
mov
data16
out
jg
test
mulb
addr16
mov
shrb
mov
jbe
mov
push
and
jmp
adc
test
in
mov
inc
dec
ss
pop
sahf
ja
cmp
pop
mov
mov
iret
cmp
js
lea
push
mov
cmpl
out
stos
cwtl
test
js
sub
mov
and
hlt
adc
xor
mov
xor
int
adc
sar
pusha
fbstp
testl
or
adc
popf
or
jb
in
inc
les
fstl
std
ja
stos
stc
into
ret
xchg
pop
ljmp
or
clc
push
mov
mov
adc
int3
call
fldl
ja
mov
xchg
aad
push
pop
lret
fwait
ds
sbb
pop
or
mov
loopne
cwtl
jmp
cli
pop
push
test
inc
loope
daa
lods
pushf
cli
les
and
mov
call
mov
pusha
js
adc
fsubr
leave
xorl
icebp
outsl
mov
mov
or
outsl
sahf
jecxz
jb
popa
push
in
xchg
leave
fistps
incb
xor
and
mov
call
mov
push
xor
sub
xor
mov
ret
scas
sub
sti
adc
adc
fldl
and
insb
push
jecxz
loope
xor
insl
cmp
cli
outsb
testl
xchg
dec
imul
push
push
dec
out
add
addr16
xor
lods
lds
loopne
mov
out
pop
das
push
pop
sub
xchg
lcall
mull
xchg
ffreep
mov
mov
xchg
lods
loope
mov
sbb
cmp
in
shr
dec
bound
jne
sub
sub
shr
mov
push
in
inc
jmp
push
and
mov
mov
jns,pt
insb
adc
push
shlb
or
aam
sbb
and
mov
xchg
lret
push
push
popfw
test
lret
mov
gs
sub
adc
outsb
mov
xchg
into
lods
out
inc
ljmp
int3
aaa
mov
mov
pushf
xchg
xchg
fcmovnu
mov
mov
subl
pop
or
push
pop
insb
sub
mov
repz
push
jecxz
out
les
xchg
repnz
dec
sbb
outsb
dec
cmc
repnz
dec
push
pushf
cltd
leave
decb
inc
add
or
jl
icebp
or
mov
xchg
stc
dec
int3
lret
inc
data16
aas
cs
cmpsl
mov
fimull
fwait
mov
mov
or
dec
adc
dec
xchg
cmp
push
imul
dec
repnz
mov
cmp
icebp
out
xchg
stc
les
and
xchg
sbb
roll
or
repnz
mov
xor
xchg
xor
loop
int
mov
cmp
test
test
int3
scas
push
out
fwait
cmp
outsb
add
jns
js
mov
test
testb
mov
mov
inc
add
sub
adc
lods
cmpsl
movsb
mov
mov
mov
pop
xor
fisubs
xor
sub
xchg
pop
popa
ss
jno
push
sub
pop
mov
rclb
jae
out
jp
push
iret
pop
mov
lret
sbb
dec
std
shrd
out
fsin
lds
sub
mov
dec
jle
lods
insl
cltd
and
lods
cs
jne
call
iret
scas
das
xchg
insl
bound
imul
repz
jo
cmp
xchg
dec
pop
rcr
mov
and
test
dec
xchg
adc
lahf
jo
inc
cmp
imul
sub
popf
pop
dec
xchg
mulb
std
stc
hlt
nop
pop
fwait
mov
add
stos
sub
inc
cmpb
cmp
jmp
xchg
lock
mov
aad
ret
lcall
call
insb
imulb
sub
adcb
pop
std
add
in
stos
and
andb
pushf
popa
pop
lahf
sub
cmc
pop
and
inc
mov
and
mov
or
add
subb
hlt
jle
cmpsb
out
and
stos
out
pop
mov
mov
inc
fwait
add
adc
or
mov
mov
lods
inc
push
outsb
xor
imul
bound
inc
je
dec
cwtl
imul
xor
cmp
dec
mov
mov
sarb
sub
comiss
hlt
jo
mov
or
cmpl
add
jmp
outsb
out
hlt
mov
mov
int
jnp
rcrb
xor
pushf
mov
lcall
jns
jb
hlt
imul
dec
das
ret
ficomps
xchg
xchg
sub
jmp
cmp
mov
push
mov
ret
dec
out
dec
dec
aas
clc
jbe
or
inc
out
or
jno
arpl
cli
std
push
stos
jp
ds
mov
push
dec
fdivrl
addr16
cmp
mov
imul
js
aaa
pop
sbb
push
jge
loop
movsl
or
push
push
fwait
add
mov
mov
pusha
dec
pop
sbb
shrb
mov
iret
sub
add
jo
clc
inc
cmc
dec
pop
and
sahf
push
lods
jl
bound
fcomi
mov
je
stos
pop
or
ret
sbb
push
inc
clc
pushf
outsl
insl
pusha
jbe
enter
fs
and
pop
and
js
outsb
addr16
dec
mov
sub
mov
in
mov
dec
ja
inc
pxor
push
add
and
add
and
sbb
cmp
scas
or
xor
inc
sub
and
lsl
gs
xchg
scas
mov
push
les
pusha
mov
call
lahf
inc
add
adc
cmp
fildl
lea
stos
hlt
jb
xor
fisttps
dec
imul
cli
sub
ljmp
dec
cmp
imul
sub
ds
enter
pusha
scas
imul
inc
inc
lcallw
add
ret
leave
jnp
aad
dec
fdivrs
arpl
test
jecxz
mov
std
jb
inc
rcll
shrb
push
mov
inc
sbb
lahf
addr16
lcall
jmp
add
sbb
add
cld
loop
lds
shlb
or
push
sub
fdiv
jb
fs
xor
popf
dec
stos
dec
test
pusha
sbb
sahf
js
lcall
jnp
rcrl
mov
outsb
out
ror
mov
adc
js
xchg
jp
jmp
test
jbe
xchg
push
das
cs
jp
dec
and
jmp
lea
or
sub
gs
imul
push
lock
mov
jmp
les
mov
or
or
mov
lret
mov
gs
movsl
jns
pop
out
jns
iret
xchg
ljmp
imul
out
aam
jne
cmc
dec
pop
push
cmp
add
xor
aad
lret
inc
cmp
mov
mov
inc
and
out
divl
out
pop
jnp
inc
adc
imul
lods
push
xchg
das
call
jae
das
loope
stos
pop
or
shlb
lcall
sbb
sti
mov
orl
rol
out
mov
sbb
test
jbe
subl
cli
popa
popa
mov
test
pop
push
outsl
mov
inc
and
out
rclb
dec
dec
repz
fs
js
dec
fistpll
loope
push
pop
and
pushf
loopne
fiadds
sub
dec
lret
jmp
push
sub
dec
roll
mov
test
mov
inc
loopne
mov
mov
inc
mov
xchg
out
sbb
mov
ret
xor
adc
pop
das
inc
xlat
mov
pop
jbe
push
sbb
inc
pusha
aas
fsubrl
add
adc
dec
loopne
dec
jae
or
add
nop
add
mov
cwtl
add
insl
cmp
dec
mov
pop
cwtl
inc
addr16
js
hlt
aas
dec
or
pop
pushf
arpl
mov
lahf
mov
inc
sbb
jp
daa
dec
adc
and
sub
in
xor
movsb
outsb
inc
testl
repz
rep
adc
sarl
in
jae
pop
jb
aas
add
stos
push
and
dec
in
repnz
lret
aaa
pop
imul
movsb
out
dec
jb
mov
es
mov
cmp
mov
or
popf
scas
int3
xchg
add
mov
sub
sahf
stos
movsb
xchg
mov
xchg
mov
add
ljmp
push
in
xor
mov
out
cmp
mov
sahf
mov
addb
cmp
sbb
stos
xor
jbe
subl
out
mov
xchg
xor
sub
inc
xor
mov
push
test
pop
adcl
in
dec
mov
mov
push
sub
mov
jge
outsl
ficoml
cmp
pop
add
xor
push
pop
mov
ficompl
stos
dec
paddsb
movsl
push
cwtl
fmull
push
jbe
ja
cmp
in
mov
rcll
adc
and
jl
mov
icebp
mov
cmp
pop
push
pop
cmp
imul
fidivrl
shll
push
mov
sti
push
jle
scas
add
jg
test
sub
subb
hlt
hlt
shll
iret
mov
push
movsl
cmovns
sub
jp
push
mov
lahf
fldenv
push
rolb
leave
xor
loopne
mov
outsb
outsb
aaa
int3
ja
in
xor
or
jno
repz
cmp
pop
stos
adc
int3
push
and
insb
les
dec
jle
cmpsb
out
inc
mov
jbe
ljmp
hlt
inc
pop
jmp
cmpsb
shrl
jecxz
out
jg
mov
and
push
test
xchg
xchg
roll
cmpsb
sbb
sbb
jp
in
cli
adc
sar
test
mov
shrl
ret
lret
cs
cmp
mov
mov
arpl
add
lods
ss
mov
inc
ret
loope
or
adc
aas
into
shll
pop
mov
dec
call
fldt
leave
mov
js
push
pusha
push
mov
frstor
mov
popf
cwtl
sub
jmp
mov
es
ljmp
into
push
mov
cmp
xor
insl
addb
loope
xor
and
dec
std
xchg
mov
shll
sbb
lods
out
cmp
lahf
inc
mov
fstpt
and
xor
shl
dec
jmp
dec
push
fistpll
xor
ret
pop
pop
mov
inc
movsb
imul
and
leave
call
jbe
ljmp
fdivl
aad
jnp
aaa
ljmp
jnp
lods
pop
adc
sub
jnp
pop
lret
icebp
push
xor
in
cltd
or
outsl
mov
xchg
sub
sbb
jb
or
les
not
cs
dec
roll
repz
inc
add
int3
mov
enter
in
es
cmp
cltd
lret
inc
or
mov
enter
ss
jl
insb
xor
xchg
pop
jmp
xor
lds
popf
aad
cld
lcall
sub
mov
daa
icebp
fldl
sbb
xor
adc
push
addr16
test
nop
and
insl
mul
pushf
and
movsb
lret
and
lret
jno
fld
add
scas
mov
jecxz
inc
and
dec
nop
fnsave
xchg
in
sbbb
adc
and
fwait
adc
cmpsb
cli
bound
loop
xchg
jb
push
mov
cli
je
repnz
pop
push
mov
pusha
jg
sub
xchg
sub
mov
and
nop
aam
xchg
sti
popf
push
cmpsl
adc
cmp
and
dec
add
push
mov
mov
mov
loope
cmp
mov
xor
dec
scas
pop
push
cld
mov
add
mov
pop
xor
inc
out
xchg
fwait
mov
pop
xchg
pop
out
lahf
jbe
in
aad
xchg
inc
cmp
adc
xchg
test
xchg
adc
test
lret
push
in
add
mov
sti
mov
cmp
popa
gs
or
mov
cmp
mov
fisubl
outsl
popa
jecxz
mov
inc
les
mov
insb
in
push
jecxz
mov
sub
or
pop
inc
xlat
mov
mov
test
mov
inc
int3
push
jle
push
jp
xor
ljmp
stos
pop
and
sbb
mov
addr16
mov
mov
fsubs
fstpt
jns
leave
repz
add
gs
mov
xor
push
pusha
fcoms
sub
sbb
fdivl
call
xor
dec
fmul
fdivrl
mov
jmp
lret
clc
push
lock
arpl
enter
and
sbb
jmp
fstl
lret
jb
xorl
ss
fs
push
imul
imul
adc
popa
sti
and
imul
mov
xchg
lods
dec
lock
sub
mov
out
mov
pop
mov
jne
adc
repz
push
push
test
xor
test
push
cltd
mov
sub
lahf
insl
mov
out
mov
mov
sti
out
xor
shl
cmpb
orb
shlb
scas
jbe
cmpsl
inc
pop
lods
test
jb,pn
bound
int
lods
in
aaa
mov
test
subb
inc
into
pusha
mov
lret
imul
xchg
xchg
cmpsl
rcrb
and
cmp
rol
fs
mov
sbb
fcompl
negb
dec
dec
fcmovb
in
mov
in
push
imul
cmp
or
xchg
jbe
scas
ret
xchg
xchg
push
mov
dec
cmp
push
add
jns
mov
jo
push
fsts
push
fidivrs
xor
mov
jne
sti
outsb
xchg
pop
setae
aas
sub
xor
cmp
in
pop
pop
mov
jl
sub
sub
adc
test
sub
cmp
int
push
mov
sbb
mov
hlt
imul
ja
lret
jbe
cs
movsb
sti
xor
adc
jae
xchg
xchg
insb
jle
mull
leave
repnz
stos
pop
pusha
push
mov
dec
inc
pop
xor
int
jge
shlb
mov
or
shrb
incb
scas
stc
shrd
inc
push
pop
dec
jno
ljmp
add
ds
or
cmp
cmpsl
sbb
ss
cmp
orb
dec
lea
push
push
inc
and
in
imul
mov
sub
daa
test
jl
out
sub
xlat
or
outsl
cmp
sbb
xchg
outsl
jmp
addr16
clc
pop
mov
jne
add
mov
imul
icebp
jmp
imul
or
je
cli
jecxz
cmp
movsb
in
push
repz
push
or
bnd
leave
imul
push
jp
fwait
push
mov
add
push
and
xchg
push
adc
and
jmp
mov
adc
unpckhps
lahf
or
adc
jb
push
out
push
mov
xchg
sbb
iret
roll
jle
jo
shll
jns
sub
mov
push
dec
pop
jbe
das
lea
mov
fs
lcall
leave
pop
test
js
cmc
stos
sub
test
out
sarb
repz
in
mov
mov
decl
and
aad
loopne
imul
pushf
push
out
pop
imul
jbe
pop
mov
or
mov
out
pop
inc
push
in
bound
xor
add
push
sub
sub
jle
stc
jns
add
mov
xor
testl
mov
loop
or
adc
inc
dec
fstps
adc
pop
daa
add
jl
cmpsl
ret
stos
mov
xor
push
repz
inc
cmpsb
pop
ja
sub
imul
push
add
lahf
leave
outsb
iret
mov
movsl
jle
mov
dec
and
stos
push
fnstsw
rclb
jb
jb
dec
and
je
shr
pusha
call
ds
stos
stos
push
push
mov
es
dec
dec
les
mov
and
aas
or
mov
stos
xchg
icebp
add
push
jb
pop
add
inc
pop
gs
cltd
dec
cmp
and
in
cwtl
out
in
stos
fidivs
bound
mov
decl
push
insl
daa
push
sbb
add
or
jmp
aas
fisttpl
rolb
out
mov
sbb
xchg
mov
jle
mov
enter
nop
data16
mov
ljmp
or
cld
cmp
rcll
aas
adc
hlt
leave
addr16
call
cmp
leave
and
je
shll
call
daa
sahf
sarb
mov
jbe
xchg
mov
push
stos
orb
les
jp
outsl
or
sahf
push
jno
push
and
cmpsl
popf
mov
push
xor
adc
adc
jg
neg
aas
jmp
lock
inc
cmp
pop
lea
shrl
outsl
pusha
mov
lret
repz
dec
and
jg
jp
xchg
sub
or
xchg
inc
pop
adc
loopne
out
lcall
outsl
ret
lds
sub
xchg
add
jl
adc
cwtl
fwait
orl
adc
aas
push
mov
sbb
orl
in
dec
lods
sbb
inc
les
cmp
cld
mov
out
push
popf
mov
or
mov
sbb
or
icebp
js
or
jns
out
shrl
fbstp
and
cmp
loope
enter
push
icebp
and
mov
pop
lret
mov
fsubs
xchg
les
out
dec
or
lds
jae
not
dec
int3
sub
adc
jno
and
xor
dec
and
es
cmp
mov
frstor
lods
xchg
jo
adc
lods
fbld
push
outsb
adc
push
loop
inc
aad
mov
xchg
mov
pop
mov
xchg
rorl
shlb
and
in
into
jns
cs
jns
mov
fcoml
inc
sbbb
out
ret
jecxz
gs
icebp
mov
test
dec
inc
fwait
lds
lods
ds
inc
mov
js
pop
jge
ret
sahf
push
xor
mov
negb
inc
cmc
push
sbb
sbb
mov
and
mul
ss
sbb
inc
xlat
leave
cmp
mov
cld
add
and
push
add
lea
loopne
mov
jp
lret
dec
ljmp
stos
mov
test
or
xor
arpl
shlb
pop
pop
pop
xor
ucomisd
push
ret
sbbb
adc
xor
je
cmp
mov
and
mov
mov
stos
mov
xchg
sub
testb
jbe
pusha
xchg
daa
dec
mov
rorl
mov
iret
or
cmp
int
cmpsb
insb
xchg
clc
cmp
icebp
or
sub
push
cmp
mov
cmp
mov
pop
adc
call
jnp
push
in
mov
fistpl
sub
test
pop
cmp
lds
cmc
popf
mov
sbb
ss
mov
dec
cmp
cli
jo
xchg
js
out
and
lods
jg
add
ja
adc
sub
fldt
cwtl
jmp
sbb
mov
mov
xor
loopne
adc
lcall
sbb
xchg
or
pop
push
and
jo
xlat
into
xor
cmp
cmc
test
sbb
push
sbb
mov
mov
fstpl
xchg
xchg
push
dec
cltd
mov
test
into
cmp
pop
lea
and
inc
pop
pop
sub
mov
adc
les
mov
les
mov
sbb
lods
push
iret
into
out
adcl
mov
test
push
je
xchg
mov
cmc
loope
cmovae
clc
mov
and
test
addl
imul
test
testl
in
cmp
call
push
test
xchg
mov
pushl
imul
lahf
mov
sub
add
cli
popa
popa
push
xlat
add
dec
xchg
out
push
shll
adc
adc
lret
mov
pop
dec
std
dec
adc
shrl
dec
push
pop
xchg
inc
push
inc
cmp
sbb
loopne
test
and
addr16
gs
inc
shrb
mov
lcall
in
or
and
dec
xchg
fistps
pop
insl
sub
out
push
push
mov
pushf
fiadds
mov
mov
std
iret
std
adc
jmp
pop
rorl
cwtl
hlt
adc
call
aam
xchg
cld
adc
inc
cmp
push
xor
xor
dec
out
dec
stc
lods
push
enter
rcl
gs
pop
push
stc
cmp
shll
lret
xchg
push
fisubrl
rcrb
je
in
pop
sbb
xor
jmp
mov
pop
inc
push
repz
mov
movsl
shl
call
xor
das
shll
lcall
push
xchg
jns
mov
jb
clc
jg
outsb
pop
lds
mov
sbb
dec
mov
hlt
lcall
or
fs
sarl
xor
shlb
jb
cmp
in
nop
mov
and
popa
pop
lret
jg
cmpsl
gs
icebp
mov
xor
xor
cmp
mov
fmuls
sub
and
lcall
jg
inc
and
inc
sahf
dec
fmuls
or
fs
scas
jne
add
cmp
mov
jecxz
cs
inc
xor
add
mov
daa
mov
rorl
mov
or
ss
and
shrd
out
lods
in
dec
dec
mov
test
push
test
lock
cmp
and
outsb
mov
ficoms
bound
jnp
jne
inc
aas
mov
xor
fmul
push
sub
in
jnp
testl
push
jnp
inc
stc
xlat
aaa
stos
lahf
sub
aad
pusha
xchg
mov
daa
lea
outsl
shrl
cmp
fdivs
enter
inc
dec
xchg
jnp
lret
sbb
ss
icebp
outsb
loopne
adc
xor
cwtl
dec
in
pusha
lods
push
pop
int3
adc
adc
mov
es
decb
cmp
push
ds
dec
int
imul
cwtl
sbb
mov
dec
adc
dec
adc
pop
pusha
lea
shll
xchg
cmp
pop
ret
push
pop
imul
xchg
push
xor
cmpsb
xor
mov
ja
test
cli
sbb
lcall
cmp
and
stc
shlb
fsub
or
xchg
or
jne
orb
push
cwtl
clc
movsb
je
sub
cmp
stc
jbe
stc
pop
insb
repz
mov
fidivs
setle
mov
stos
inc
mov
popf
jae
jmp
loop
mov
shlb
pop
adc
jle
or
push
sub
insl
mov
xchg
cmp
add
int3
cmp
cmpsl
and
lock
cmpb
cmp
pop
fwait
inc
or
dec
ds
jnp
mov
cmc
dec
fs
gs
cmp
xchg
das
mov
mov
in
pop
cmp
imul
sbb
xchg
sub
jle
inc
cmpsb
cs
pushf
inc
push
inc
ljmp
gs
dec
cltd
fstl
pusha
loop
lods
add
add
jl
adc
rclb
dec
mov
lods
movsb
and
cmpsb
lahf
aad
fs
std
sbb
and
outsl
les
subb
cmp
lds
cld
xchg
cmp
pop
mov
mov
aad
test
push
mov
mov
scas
and
mov
push
and
int3
lret
cmp
dec
rcr
movsb
iret
into
mov
push
sbb
pop
pop
add
cmp
and
int3
inc
enter
mov
adc
xor
fbld
lahf
cmpb
mov
out
jecxz
scas
push
insb
xor
and
mov
and
sub
cmp
cli
lahf
cli
pop
jmp
cld
xchg
xorl
add
les
test
insl
sbb
xor
xor
movsl
ljmp
add
andl
mov
cmpsl
mov
daa
inc
daa
pop
jmp
es
rcl
jb
emms
mov
jmp
outsl
into
shl
add
cmpl
cmpsl
jb
sti
inc
jno
in
gs
push
mov
cmp
loop
cmp
stc
test
scas
push
inc
sub
push
fisubl
imul
hlt
inc
mov
ret
std
adc
std
shl
loope
mov
cmc
pop
out
and
stos
push
mov
or
arpl
jne
cmp
mov
outsl
pop
mov
ret
add
add
xchg
cli
ficoms
mov
nop
outsl
pop
pop
lahf
xor
mov
and
sbb
xchg
dec
call
xchg
xor
sbb
sti
push
les
pop
cwtl
xor
inc
pop
ss
data16
add
mov
add
fcmovne
movsb
into
lds
xor
into
out
pop
test
ss
test
push
aaa
dec
mov
pop
dec
and
push
mov
rolb
rolb
outsb
xchg
cmp
and
jle
imul
imulb
stos
lcall
dec
push
mov
out
pop
mov
leave
aad
call
addr16
imul
test
arpl
jo
add
into
mov
mov
sub
cmp
arpl
inc
aad
xor
jo
xor
add
lahf
dec
das
dec
cmpsl
mov
or
aas
jp
shl
xor
fld
xlat
daa
mov
jae
in
inc
arpl
dec
fstl
pusha
mov
cmpsb
in
sbb
mov
hlt
sbb
call
mov
addr16
leave
roll
sbb
push
leave
xchg
xchg
lock
fs
movsb
mov
flds
fildl
cld
insb
fdivrp
sub
int
inc
xor
dec
adc
xchg
mov
mov
sbb
mov
jp
sub
add
sti
imul
pop
aas
jns
add
and
lods
sub
es
cmpsb
add
sarb
fdivl
jno
arpl
lds
in
push
dec
clc
push
ljmp
mov
lods
cwtl
fld
cs
sub
pop
shll
add
rcrl
xchg
rcrb
in
aaa
not
cmp
call
jnp
out
pop
xor
xor
mov
jne
jmp
xor
cli
movsb
shlb
xchg
mov
or
aas
dec
clc
push
pop
ja
mov
js
daa
add
mov
adc
lcall
dec
cs
push
xchg
lret
lahf
xchg
mov
subb
xchg
pop
or
shrl
cmp
outsb
pop
cmp
push
xchg
fildl
inc
inc
cs
mov
add
shl
dec
sub
or
xor
push
pushf
enter
sub
push
jo
repz
jecxz
mov
addb
fisubrl
xor
xor
pop
xor
adc
xchg
ret
xchg
pop
lods
inc
add
xchg
movsl
repz
sub
pop
and
dec
dec
push
mov
add
mov
push
sbb
inc
mov
cmp
nop
mov
add
in
outsb
shlb
int3
mov
lahf
adc
cmp
push
sbb
popf
sti
cmc
push
mov
fisttps
cmp
jg
pop
lods
sbbb
inc
or
addr16
lret
je
dec
dec
and
sub
fisttpl
push
or
and
mov
shlb
test
adc
jp
fildll
ja
std
push
lods
adc
and
pop
add
inc
push
lods
dec
xchg
dec
mov
dec
jns
add
dec
enter
pop
xchg
rorl
stos
cmp
mov
addr16
jnp
mov
pop
dec
pushf
sbb
pop
insb
inc
shrb
inc
sub
add
call
pushw
jecxz
push
cld
xchg
cmpsl
cmp
or
pop
es
clc
fisubrl
mov
pop
not
fsubrp
je
pop
negb
push
lret
stc
and
imul
mov
jns
mov
jmp
test
mov
into
sbbb
idiv
bound
inc
bound
out
pop
lret
jge
lcall
repz
push
insb
lret
cmp
jl
pushf
dec
les
lock
repz
sbb
mov
popa
outsl
es
or
ret
push
stos
pop
cltd
pop
cltd
addr16
dec
xchg
mov
lret
push
xchg
and
dec
aas
addr16
scas
out
aaa
and
test
cmc
pop
push
lret
push
xor
dec
and
out
stos
enter
pop
dec
pop
xor
sbb
sbb
gs
xorl
in
jae
push
loopne
aam
add
mov
ss
jno
je
test
add
int3
cld
outsl
xchg
inc
sahf
in
jno
or
stos
cmc
rcl
adc
lret
push
push
jb
out
sub
js
push
int
loop
imul
cmpsl
iret
and
add
es
aas
test
add
and
xchg
daa
aam
xchg
and
aam
sahf
or
sub
xchg
aad
push
out
ret
jae
lods
mov
fistpl
daa
shl
jl
js
or
inc
repz
and
test
inc
dec
fwait
adc
adc
int
subb
gs
popf
and
ds
add
and
sbb
cmpsb
mov
js
andl
mov
inc
xchg
mov
or
mov
test
xchg
cmp
stos
es
push
daa
mov
dec
or
push
icebp
out
mov
sbb
pushf
jecxz
popa
mov
fstps
jp
fs
das
pop
push
roll
ss
hlt
mov
movsl
pushl
in
enter
xor
and
leave
adc
jbe
mov
jbe
negl
push
jge
pop
inc
or
mov
fsubs
out
enter
sub
or
shr
fmuls
dec
adc
jne
and
cmpl
sbb
jo
loopne
and
jne
mov
and
imul
lret
lahf
repz
pcmpeqw
scas
in
push
sub
out
pop
cmpl
push
cmpsb
add
cwtl
fdivs
cli
or
and
adc
pop
ss
push
cmpsb
xlat
ljmp
xchg
imul
add
andl
outsl
mov
push
push
lods
shrb
dec
cld
sarl
xor
push
jge
and
pop
mov
and
sbb
sbb
mov
jbe
xchg
fsubrl
notb
shlb
mov
outsl
fnstenv
pop
cltd
push
or
outsl
or
sbb
sub
xchg
pop
sti
mov
inc
cltd
inc
jmp
fmull
xchg
adc
dec
and
call
pop
test
pop
mov
cmp
test
or
stc
xor
or
das
jl
cmp
inc
push
adc
aam
in
cmp
stos
dec
mov
push
inc
jne
std
inc
push
sub
mov
xchg
mov
out
pop
popa
pop
cmp
mov
cmp
sbb
dec
pop
and
jbe
lods
hlt
andb
ja
mov
cltd
imul
push
jbe
insl
les
aas
cli
jnp
cmp
sbb
mov
jne
in
inc
xor
sub
lret
shll
mov
scas
mov
imul
adc
sub
repz
add
insb
repnz
and
lods
cmp
inc
pop
and
cltd
mov
int
je
aam
mov
fisubrl
mov
imul
out
sbb
push
push
in
faddl
cmpsl
and
mov
or
xchg
inc
je
stc
dec
out
repz
div
nop
push
out
lds
mov
and
jmp
gs
jae
mov
jbe
sub
adc
popa
sub
pop
fistl
xchg
out
sbb
addl
pop
adc
cld
and
mov
inc
mov
sbb
in
adc
and
mov
xchg
pop
xor
sub
mov
imul
rcl
sub
jp
repz
sub
rcll
mov
nop
inc
mov
insb
lcall
dec
lcall
pop
das
pop
das
xchg
or
mov
aaa
lcall
js
loope
insl
fstpt
xor
cltd
cmpsb
xor
movsl
push
cmpsb
mov
ret
gs
push
mov
mov
aaa
ss
sub
pop
shll
cld
fistps
dec
aaa
sbb
loope
push
loop
xlat
ret
pop
xchg
outsb
cmp
pusha
popf
cs
inc
adc
sbb
mov
std
das
repz
mov
cmp
jae
mov
call
and
fmull
sbb
aaa
in
stos
fdivp
jne
xor
insb
push
sub
push
addr16
ja
xchg
push
mov
scas
jb
and
add
adcl
push
insb
xchg
shl
dec
gs
dec
lcall
fsubrp
fmull
sbb
mov
mov
je
rorb
dec
stc
andb
cli
sub
lock
fisubrl
mov
fcoml
jbe
xchg
int3
adc
mov
mov
mov
inc
loopne
outsl
fisttpl
pop
fstpt
mov
cltd
or
jne
lock
mov
clc
dec
xor
fcmovu
ljmp
cmpsl
orl
xor
cli
insb
pop
xchg
scas
int
int
enter
loope
mov
or
shl
arpl
shl
mov
jno
push
add
repnz
fisttpl
imul
mov
xor
xor
and
test
inc
das
xchg
sbb
push
leave
ret
mov
add
hlt
repnz
pop
pushf
and
popf
int
xlat
jns
pop
lret
jb
je
adc
sub
xlat
push
inc
sub
loopne
dec
leave
movsl
mov
in
jnp
mov
and
and
mov
daa
inc
push
data16
adc
ljmp
pop
add
sbb
lods
int3
loop
insl
xchg
add
pusha
ds
or
pop
jne
or
cmc
das
nop
sbb
mov
stc
es
dec
pop
cli
or
xchg
jne
jns
lret
ret
pop
lahf
jp
mov
add
push
push
ss
mov
les
cs
dec
cwtl
test
enter
cmp
mov
in
xchg
lahf
in
xchg
cli
mov
mov
lods
sbb
jo
jge
push
sbb
outsl
outsb
pop
jmp
xor
cmpl
sub
add
xchg
mov
lods
decl
lahf
dec
insb
fldt
rclb
subb
inc
lret
add
mov
sub
mov
fildl
call
adc
rorb
outsl
or
cmp
ficomps
insl
fwait
inc
lcall
and
aaa
xchg
mov
jg
push
mov
test
fdivrs
xchg
and
pop
into
arpl
push
addr16
ja
pop
mov
test
subl
out
fidivrl
lahf
or
push
sbb
and
stos
hlt
std
imul
outsl
and
mov
daa
sub
pop
add
xchg
stc
pusha
ret
and
cmpsl
mov
das
cli
clc
rcll
jl
mov
arpl
inc
dec
negb
sbb
mov
push
fistpl
mov
jo
pop
imul
cmpsb
leave
ja
movsb
mov
inc
mov
je
ret
or
out
pop
cmp
imul
fisubl
add
adc
into
push
stc
test
negb
lcall
lret
test
in
icebp
outsb
jb
sahf
pushf
xor
sub
and
cli
es
mov
sbb
mov
xor
cwtl
pop
mov
jge
out
das
push
into
jns
aas
test
dec
push
pusha
jb
pop
mov
into
je
not
pop
sub
adc
test
mov
pop
cs
scas
sub
fs
mov
nop
lods
inc
sub
ret
cmp
es
leave
xchg
dec
lock
out
mov
lds
push
dec
aad
in
mov
jns
or
xor
loope
inc
sti
mov
or
stos
jecxz
pop
fistpll
outsb
out
and
adc
mov
sbb
mov
aam
xchg
shr
xchg
pop
jae
outsb
jnp
and
leave
int
sarl
mov
xor
xor
inc
and
jp
repz
iret
adc
mov
dec
jp
fstps
and
jbe
sbb
repnz
mov
dec
lods
pop
jbe
mov
pop
mov
aaa
idivl
add
xchg
push
gs
sti
arpl
add
pop
ret
pop
fisttps
rorb
dec
bound
inc
jbe
mov
inc
leave
int3
outsl
fcoml
dec
pop
mov
sub
mov
inc
sub
pop
fst
or
out
nop
pop
imul
xchg
jo
js
jle
add
shl
mov
dec
cltd
jg
outsb
adc
or
mov
mov
add
dec
mov
pop
mov
pop
imul
test
pop
ja
inc
xor
adc
aas
pusha
lret
cli
mov
leave
cmpsl
mov
lods
xchg
ret
sub
lds
jnp
jle
cld
dec
add
pushl
jnp
nop
in
jl
iret
fwait
in
xlat
lahf
pop
add
repz
repnz
or
dec
pop
fidivs
je
pop
and
or
jmp
dec
iret
adc
xchg
pop
lcall
mov
fistl
or
pusha
lods
movsl
loop
icebp
cmpsb
subl
pop
and
icebp
pop
rorl
add
fisubrs
pop
loop
pop
xchg
inc
movsl
pop
imul
cmpb
mov
xchg
arpl
shll
inc
and
ds
jnp
mov
pushf
xchg
rcrb
int3
inc
enter
jg
rcrb
xor
cwtl
movsb
sbb
and
jle
xor
sbb
fwait
mov
inc
xor
cmp
mov
lcall
cltd
mov
adc
sub
mov
sbb
addb
lods
out
dec
insl
ss
test
lea
cltd
xor
dec
sbb
and
cmp
jo
adcl
dec
scas
stos
mov
test
pop
lret
ds
out
jne,pt
sbb
mov
movsl
imul
sbb
adc
addr16
or
in
rorb
stc
arpl
dec
adc
sbb
add
xchg
out
pop
push
sti
enter
cmp
mov
shll
xchg
shrl
sbb
rolb
addl
int
insb
or
adc
cmp
pop
adc
xor
mov
bound
sub
daa
or
clc
adc
lret
and
or
imul
add
push
inc
jns
mov
cmp
mov
mov
pop
mov
rcrl
inc
sub
sub
or
pop
lock
icebp
and
inc
in
out
jg
push
push
cmp
lcall
dec
xchg
mov
add
xor
cli
cmp
xchg
cmc
add
fwait
addr16
xchg
xchg
lcall
into
push
orl
mov
shll
call
mov
clc
cwtl
mov
mov
testb
fsubr
dec
mov
jno
es
pop
adc
push
shrb
nop
lahf
jge
pop
mov
add
cs
dec
sbb
add
dec
xor
stos
stc
push
aad
insl
aad
ficoms
pop
movsl
imul
xor
sbb
addr16
aas
ljmp
jmp
fnsave
add
in
aas
push
inc
xor
es
adc
cmp
out
test
in
outsb
jne
mov
sub
dec
sbb
jns
mov
xor
push
fwait
outsl
aas
or
mov
jge
xor
jg
stos
mov
or
push
push
mov
lds
nop
and
sub
popf
and
scas
test
jae
ret
outsb
cld
pop
lods
xlat
nop
mov
lods
aaa
pop
aas
jle
mov
push
lock
push
fstpl
cmpsl
shrl
add
jo
imul
push
cli
ss
push
ds
or
sti
add
hlt
mov
sbb
fisttps
fadds
into
mov
jb
mov
push
das
and
ja
lods
out
test
in
nop
and
sub
jg
fadds
dec
mov
push
inc
pusha
jg
xor
mov
pop
pop
test
or
add
ss
push
fsts
xlat
and
into
cmp
mov
sbb
and
xor
addl
xor
adc
mov
mov
fmull
sbbl
fdivrl
mov
andb
push
mov
add
aad
push
leave
movsb
mov
push
xor
sbb
pusha
roll
sahf
sbb
jp
mov
movsb
cld
call
xchg
jbe
out
popa
ret
test
lock
stc
push
lret
lods
daa
ret
or
mov
inc
mov
cltd
hlt
or
cltd
or
sub
sub
sbb
test
xchg
nop
mov
daa
adc
bound
add
stos
mov
xor
jns
icebp
sahf
loop
fildl
pop
xor
lock
icebp
sahf
xchg
mov
int
mov
dec
scas
pop
out
inc
xchg
sahf
cmpb
loopne
jl
std
inc
in
pop
push
jno
fbstp
stc
and
fcompl
lds
sub
fidivrs
imul
sti
test
mov
xor
stos
jmp
dec
ret
mov
add
sbb
push
pushf
rcrl
stos
jno
out
sub
mov
icebp
popa
mov
decl
movsl
cmp
jbe
add
loopne
mov
jb
popa
lret
push
pop
int3
push
mov
aaa
xor
aam
in
xchg
sbb
inc
hlt
push
mov
xchg
jecxz
add
push
aaa
lock
int3
loope
stos
in
mov
cli
mov
sbb
pushf
out
rclb
in
addb
sti
ss
jo
dec
pop
jo,pt
out
and
ret
or
and
add
shrl
pop
sti
aam
stos
jp
fsts
fimuls
test
gs
add
mov
mov
int3
push
adc
inc
sahf
sti
loope
aaa
mov
adc
sbb
dec
aas
mov
int3
testb
xchg
jmp
les
cmp
xlat
scas
or
or
dec
or
std
mov
clc
repnz
cmp
out
cmp
push
jp
mov
dec
pop
jp
pop
sbb
sub
mov
popf
rcr
loope
xor
pop
add
push
mov
xor
sub
test
sbb
jmp
std
push
jmp
arpl
push
cld
mov
mov
mov
mov
pop
xor
xor
lret
movsl
int3
jbe
jno
aas
xchg
or
lret
cmpsl
repz
xchg
sbb
dec
scas
or
cwtl
jp
cmp
mov
js
movsl
pushf
rcr
xchg
cld
in
cmc
rorl
es
mov
mov
cmp
pop
in
faddl
pop
aad
add
aad
cmp
idivb
mov
out
pop
dec
mov
dec
mov
jae
push
push
cvtpi2ps
fcmove
adc
inc
nop
add
jne
xchg
or
mov
out
xchg
sarl
or
and
xor
out
mov
cs
movsl
sub
mov
add
data16
dec
fidivrs
dec
nop
mov
or
inc
cs
sbb
lock
sbb
lds
fld
nop
loop
xchg
push
outsl
out
xchg
nop
xchg
iret
xchg
jmp
popa
outsb
xor
dec
in
out
pop
stos
test
mov
sti
sub
sub
mov
sub
adc
dec
xchg
add
nop
in
hlt
push
test
inc
loop
lea
in
stos
adc
or
hlt
pop
leave
jo
push
push
rcrb
dec
pusha
aam
outsl
jmp
inc
loop
or
lahf
xor
call
xor
fidivl
sbb
sub
push
push
pop
dec
xchg
sysenter
rcrb
das
lret
inc
sbb
jmp
xchg
mov
filds
pop
out
pop
sbb
cmp
psrlw
adc
and
push
cmp
add
and
mov
and
jp
jp
cmp
insl
cs
mov
imul
leave
ja
aaa
subl
in
jmp
push
jns
or
jmp
lods
aam
mov
add
pop
push
aaa
push
inc
or
jmp
and
mov
sbb
mov
imul
push
push
sti
jb
outsl
sarl
sbb
dec
ja
xlat
sub
ss
jae
test
ss
pop
cli
iret
out
imul
sahf
sub
idivl
cmpsl
fiaddl
fadds
jno
xor
in
or
into
inc
clc
aad
mov
movups
data16
sbb
add
mov
xlat
xor
stc
xchg
outsl
xor
je
mov
nop
add
add
push
dec
hlt
mov
inc
mov
repnz
push
lods
cmp
xor
inc
rorb
sahf
jnp
or
idiv
adc
sub
lahf
mov
jno
imul
jne
mov
test
cmp
mov
arpl
and
pop
mov
daa
mov
imul
inc
push
aam
gs
sub
inc
scas
or
hlt
cmp
scas
pop
mov
dec
add
sub
mov
stos
cmp
dec
sbb
sti
dec
sahf
jo
inc
lods
jo
push
mov
jl
jns
xchg
mov
push
push
nop
popf
push
jb
cmpsb
or
repnz
mov
leave
ja
cmp
andb
ror
xchg
push
xor
push
stos
sub
outsb
dec
sahf
add
xchg
stos
and
or
pop
pop
pop
cmc
das
js
add
mov
filds
mov
inc
add
daa
adc
dec
out
pop
pushl
into
push
sub
sbb
mov
mov
movsb
jae
sub
push
insl
push
loop
ret
cmpsl
jmp
ljmp
iret
mov
popa
hlt
scas
cmp
mov
out
mov
cltd
pop
xchg
out
cld
cmpsb
sub
aad
fistpll
cmpsb
and
cltd
sub
lahf
sbb
mov
sub
into
ss
inc
into
sbb
cmc
push
nop
shll
jmp
or
pop
jae
out
je
mov
test
cwtl
jmp
notl
push
ret
xor
cmpsl
pop
cmp
sub
addl
mov
testl
cmp
loop
jl
mov
dec
add
add
lret
aad
or
mov
sarb
addr16
stos
out
push
pushf
pop
jae
sahf
and
jb
xchg
mov
or
mov
rcr
lahf
xchg
jp
mov
and
pop
push
cmp
add
nop
les
add
lds
cmpsb
add
shl
insb
aas
mov
dec
ficoml
data16
pop
and
cmp
lret
int3
sbb
sub
je
int
les
or
ret
push
push
das
jg
add
gs
cmp
andl
cli
push
mov
sti
mov
push
mov
push
mov
cmp
sbb
mov
pop
sub
lret
jle
aaa
fsubs
jge
push
jecxz
scas
icebp
movsb
xchg
dec
inc
inc
das
test
call
mov
xchg
in
movsl
xchg
dec
test
movsb
xchg
push
cmp
jbe
mov
cld
inc
mov
and
jp
stc
mov
filds
test
cmp
addr16
add
lock
xchg
xchg
adc
ja
xchg
jmp
iret
jno
sbb
pop
adc
cmpsl
push
aam
lahf
movsb
cli
out
sbb
pop
in
fildl
test
cli
xor
loope
sahf
rcrb
clc
data16
xchg
leave
jl
insl
sbb
imul
sub
mov
inc
int
scas
ljmp
nop
jo
and
sub
add
and
fwait
unpckhps
xor
or
pop
aad
stos
pusha
ret
mov
mov
mov
fidivs
pop
push
aam
pop
test
js
mov
dec
and
xchg
fcmovnu
jbe
mov
iret
outsb
sbb
icebp
cmp
mov
jp
je
jno
outsl
shrb
mov
aam
mov
add
je
adc
jmp
insl
xor
push
adc
jl
adc
fiaddl
pop
cbtw
xchg
add
cmpsb
cmp
lcall
sbb
cld
in
xor
xchg
mov
outsb
fwait
pop
mov
push
sub
roll
iret
cmc
mov
push
imul
out
lret
fbld
ja
imul
loopne
movsl
repz
je
jno
addr16
jbe
or
push
xor
outsl
pop
js
sub
jne
fsubs
inc
jo
popa
add
add
aad
ljmp
shlw
pop
inc
test
int
mov
dec
stos
xchg
in
inc
test
xlat
xchg
jg
stos
aaa
sub
rcrb
cmpsl
sahf
outsb
and
adc
pop
fisttpl
pop
ret
leave
out
push
jmp
mov
rcrb
gs
xor
out
adc
adc
in
mov
push
insl
add
rcll
into
push
sbb
and
xchg
lahf
std
icebp
fsubrs
out
add
rcrl
xchg
cwtl
out
fidivl
sahf
cld
test
mov
subl
and
bnd
push
js
imul
mov
flds
xchg
rcl
inc
movlps
pop
dec
dec
arpl
fsubs
repnz
add
mov
sbb
adcl
pop
sub
sub
cmp
adc
jecxz
outsb
fnstcw
mov
and
push
or
inc
xor
mov
jne
and
xchg
add
test
mov
pop
add
repnz
mov
fidivl
loope
adcb
or
inc
mov
jg
cmp
and
jae
lahf
cmp
cmp
ja
pop
jl
and
ljmp
xor
xchg
sub
jp
aaa
sub
pop
movsb
lret
jne
and
sbbl
dec
sub
cmp
stos
pop
sbb
fnstenv
or
inc
mov
notl
rclb
lods
jb
mov
std
stos
cmp
inc
mov
push
popl
test
and
xor
mov
cmpsl
pop
mov
mov
subl
daa
daa
jmp
in
sbb
jns
cmp
or
lahf
mov
dec
outsl
mulb
outsl
sub
xor
xor
sub
mov
xor
mov
fcomps
dec
mov
add
lea
pusha
or
mov
daa
sar
lds
add
movsb
daa
jo
xor
cmp
fsub
repnz
popf
into
pop
xor
and
test
cmp
sbb
mov
push
faddp
data16
jle
push
dec
mov
clc
cmp
cli
xor
test
mov
xor
rcl
mov
mov
add
mov
inc
je
leave
jnp
cmp
pop
int3
dec
sub
scas
fists
fldl
test
inc
int
scas
xlat
dec
movsl
xor
icebp
xor
jbe
shlb
push
dec
test
dec
mov
hlt
rcll
outsb
sub
mov
std
fidivrl
ljmp
fisubrl
clc
jno
mul
loopne
outsb
dec
sub
sbb
mov
femms
test
loope
pop
and
in
clc
jno
mov
cmp
push
daa
cmp
cltd
dec
mov
jb
repnz
lcall
mov
pop
xorl
je
push
adc
pop
mov
xchg
cs
inc
xor
pop
mov
shrl
jp
sub
mov
mov
mov
dec
xchg
cmpsl
mov
fimull
and
push
arpl
xorb
or
push
push
repz
xchg
lds
outsb
or
shll
iret
sbb
xchg
jb
in
cs
lods
outsl
imul
xchg
decb
lods
bound
lock
out
sbb
cmp
cmp
outsl
pop
cmp
or
cmp
pop
mov
mov
adc
mov
fistpl
push
xchg
mov
pop
sbb
jns
inc
sub
cmpsl
mov
icebp
mov
adc
jp,pn
ljmp
outsb
fldenv
int3
jbe
sti
xchg
mov
push
mov
pusha
inc
sarb
test
pop
test
or
lods
call
or
hlt
sub
mov
into
rorb
sub
or
test
and
movsb
bnd
and
stc
xchg
dec
cmp
sub
ljmp
inc
sub
andb
dec
lods
cmp
or
add
mov
cmp
je
loop
jg
pop
sbb
pop
jle
add
sbb
in
testl
mov
jbe
add
addr16
iret
scas
cmp
and
cld
into
xchg
mov
repnz
mov
loop
pop
flds
mov
cs
shrl
mov
xchg
pop
out
inc
dec
jmp
bswap
sub
push
movl
daa
jbe
or
imul
jle
xchg
xchg
je
daa
test
jl
cli
cld
xor
mov
inc
aaa
jmp
or
dec
cmp
lret
or
test
pop
fisttpl
movsb
inc
test
jle
lcall
mov
or
inc
test
mov
fiaddl
movsbl
fidivrs
push
lds
mov
scas
xor
adc
lods
das
sbb
xchg
pop
lds
shlb
cwtl
or
pushf
jge
arpl
pop
jnp
jb
jnp
enter
pop
in
mov
stc
inc
mov
dec
std
fidivrs
repnz
arpl
mov
das
jge
sbb
push
pushf
mov
idivb
sbb
add
fildll
pop
pop
pop
lods
sbb
es
arpl
jno
and
insb
fs
call
push
push
ljmp
push
and
xorb
adc
iret
loopnew
ljmp
leave
cmc
jns
hlt
inc
imul
xor
xchg
pop
inc
push
mov
mov
ret
sahf
enter
ficoml
das
push
or
aad
sub
fstps
inc
pop
jmp
jl
mov
jbe
fidivrs
and
test
jle
xchg
cmp
jbe
jns
fstpl
jecxz
mov
ret
ljmp
mov
ja
pop
scas
mov
xchg
or
adc
outsl
jb
cltd
into
loope
push
jae
call
sub
mov
mov
ficompl
and
popf
sub
pop
dec
ljmp
cli
outsl
pop
adc
dec
lods
iret
sub
jl
mov
sbb
or
mov
stos
xchg
pop
and
pusha
inc
sub
adc
fcompl
jge
rcrl
jnp
data16
sub
add
sti
repz
in
ds
cmc
out
dec
subl
mov
dec
mov
inc
fcmovbe
mov
repnz
mov
ss
inc
imul
loope
dec
xor
dec
popa
decl
lods
fstpt
test
or
push
imul
mov
cmp
push
sarl
cmp
in
hlt
adc
pop
lds
bound
loop
pop
gs
mov
xchg
dec
mov
sti
lcall
aad
movsb
mov
xor
imul
xor
aam
push
add
and
loop
loop
add
mov
mov
inc
pop
xorb
mov
lret
movsb
dec
cmp
push
and
pop
mov
jecxz
aas
lods
cmp
fwait
enter
out
xchg
js
mov
add
imul
xor
pop
sbb
mov
aad
inc
mov
ss
lahf
inc
and
xchg
filds
xchg
out
mov
xchg
cmpl
cmp
jmp
test
mov
or
dec
and
out
sbb
add
into
sub
jb
pop
mov
push
std
inc
rorb
sub
jbe
in
outsb
aad
aam
cmc
loopne
in
sbb
data16
and
dec
push
sbb
aaa
out
imul
dec
adc
xor
aaa
mov
push
ds
push
pop
stos
mov
mov
cld
out
sbb
fisubs
jp
fisubrl
outsb
xor
pop
sbb
fmuls
sbb
or
movb
test
pop
test
mov
xor
push
sbb
pop
push
lods
xchg
es
frstor
jns
fisttpll
ljmp
ret
jb
mov
mov
mov
cmp
sub
inc
sti
lods
push
and
aam
jp
mov
mov
cmp
mov
mov
and
sti
adc
xchg
jmp
repnz
aas
xchg
or
push
push
imul
loopne
dec
sub
mov
cmpsl
xor
inc
lret
push
pop
lds
in
lret
jnp
pop
add
ja
jg
out
sub
inc
xor
xor
gs
insl
jmp
es
mov
iret
push
bound
test
iret
aam
sub
mov
lds
arpl
lret
fistpl
xchg
dec
add
es
add
jmp
mov
adcb
sti
sub
mov
fcoml
and
daa
adc
mov
adc
xor
mov
mov
stos
out
rcr
push
inc
jne
icebp
rorl
jnp
adc
movsl
xchg
mov
cmc
sbb
ss
je
out
cmpsl
dec
in
pushl
outsl
jns
js
fidivs
mov
les
sarb
cmp
push
dec
incl
cmc
stos
and
sbb
jl
jg
xchg
add
adc
test
mov
in
leave
and
mov
pop
cmp
je
dec
sbb
mov
int
adc
jno
mov
cmp
mov
pop
sub
jno
fcoms
jge
inc
test
mov
lret
ror
push
xor
test
fs
les
jno
and
push
jl
jne
std
or
add
pop
inc
lar
scas
stos
test
xor
and
icebp
test
pop
adc
cmpsb
xor
gs
js
push
lret
test
loop
add
fldt
mov
sbb
inc
shrb
hlt
iret
sbb
push
cmp
xchg
sbb
mov
fstps
sub
pop
inc
fldenv
adcb
sahf
int3
aad
pop
or
cmpsb
test
dec
sti
clc
lcall
mov
sar
test
mov
nop
pop
pop
add
pusha
fwait
cs
shr
fsubrl
or
xor
lods
in
add
xor
inc
mov
inc
or
jb
dec
repnz
ljmp
pop
ss
lret
in
dec
push
insb
stos
mov
cld
ss
xor
je
idivl
or
stos
xor
inc
testb
icebp
into
or
xor
mov
mov
adcl
out
cmpsl
test
push
mov
pop
inc
dec
cltd
fstpl
xor
cmp
add
and
sbb
aam
lea
mov
sub
xchg
xchg
inc
or
cs
and
idivl
cmpsl
mov
xor
adc
test
das
fs
xlat
jne
xchg
stos
das
jae
insb
out
in
loope
and
stc
bsf
xor
dec
lock
or
ret
dec
cwtl
daa
mov
push
inc
popf
mov
cmc
repz
pop
rcll
shrb
adc
adc
cs
add
aas
mov
cmp
inc
lock
pop
cs
sbb
push
fldl
icebp
mov
dec
mov
gs
mov
inc
lods
xor
adc
xchg
jg
sbb
lret
aaa
ljmp
and
jle
or
test
jnp
xor
leave
mov
push
fs
adc
pop
and
loop
adc
fwait
in
mov
test
ljmp
push
je
cmp
cmp
shrb
or
and
xor
mov
add
mov
add
test
cmpsl
push
outsb
pinsrw
imul
cmp
int3
pop
xchg
mov
push
sbb
lret
insl
jmp
aad
xorb
dec
sub
icebp
xchg
cmp
and
mull
nop
cli
cli
add
adc
push
lds
mov
std
mov
mov
cmc
mov
cwtl
out
lds
or
lret
out
into
movb
mov
imul
arpl
inc
das
mov
adc
js
jmp
pushf
movsb
stos
xor
out
sbb
pop
rcrb
pop
pop
jge
in
in
lds
xchg
shll
cmp
jns
clc
pushf
push
sbb
jmp
in
call
push
clc
in
xor
popf
roll
aaa
pusha
outsb
adc
repz
add
sbb
cmp
stos
insb
je
sbb
pop
jecxz
lods
mov
fs
data16
popa
jmp
mov
mov
and
mov
insl
pop
loopne
xchg
mov
push
out
data16
mov
loopne
adc
add
pop
inc
repnz
mov
bound
xor
in
cmp
sbb
add
xchg
ja
add
xor
jae
je
mov
fimuls
fbld
adc
mov
enter
ljmp
sbbl
adc
sahf
rolb
ljmp
jo
pop
jp
ljmp
or
push
adc
insb
cmp
andl
mov
jbe
cli
add
cmp
iret
push
repz
out
jb
clc
nop
inc
sub
push
addr16
jns
xchg
sbb
sbb
scas
iret
gs
insl
test
sub
bound
fmull
push
clc
ret
xchg
in
and
incb
inc
xor
gs
lods
adc
add
negb
ss
xor
test
pop
in
or
lcall
daa
inc
pop
std
jmp
pushf
mov
push
scas
shrb
cwtl
lahf
and
pusha
push
fistl
mov
nop
sub
lahf
idivb
push
sub
lock
pushl
int
es
imul
mov
scas
sbb
lods
push
neg
cwtl
add
mov
out
dec
icebp
dec
and
jno
jmp
stos
xor
add
xchg
and
out
push
daa
addl
push
notb
fsubrs
inc
je
and
aad
lahf
dec
xchg
xchg
mov
and
push
sub
and
nop
std
mov
sub
test
sti
into
xchg
xor
rorl
cmc
xchg
cmpsb
push
pop
xchg
mov
lret
pusha
cmp
mov
dec
pop
sti
mov
cli
movsb
data16
leave
mov
lods
testl
and
inc
imul
rorl
movsl
inc
add
call
mov
out
sbb
cs
mov
and
xchg
mov
fstpt
cmp
test
sbb
mov
mov
ret
or
xor
fidivrl
cwtl
jp
in
cmp
push
xchg
shrl
adc
lds
js
dec
sbb
xchg
loopne
push
repnz
in
cmp
aaa
dec
add
movsl
jno
mov
out
dec
addr16
addb
mov
movsl
pushw
je
push
sbb
in
mov
in
insb
xor
cld
scas
sbb
pop
aaa
movsl
fwait
test
fwait
and
jb
push
xor
inc
pop
loop
mov
arpl
mov
out
lret
scas
push
pop
fsubs
adc
mov
sub
xchg
and
daa
fists
sbb
push
rorl
jmp
arpl
mov
cld
scas
aas
mov
outsb
aam
push
jle
pop
cmp
xchg
mov
mov
cmp
test
inc
inc
jnp
pop
pop
pop
stos
decl
lods
mov
stc
aas
rcrb
xor
jmp
sbb
jmp
cltd
mov
popa
xlat
dec
mov
xchg
cmp
lahf
jecxz
test
mov
adc
mov
jecxz
mov
enter
sbb
jecxz
add
cmc
pop
mov
inc
inc
add
push
stos
lods
jmp
outsb
call
cmc
in
test
pop
jne
aaa
faddp
loope
push
cmp
scas
out
push
inc
and
mull
notb
loopne
es
and
xlat
mov
shlb
adc
ja
mov
sbb
jmp
subb
mov
cmp
push
jle
jo
fwait
aaa
jecxz
xlat
aas
push
add
mov
and
out
push
xorl
ss
hlt
inc
popf
iret
mov
cmp
jp
pop
dec
adc
mov
test
shrl
sbb
mov
test
dec
lods
ja
xchg
sub
imul
mov
mov
and
push
jg
lods
mov
cmp
fsubrl
fcomps
mov
jae
pop
cmpsb
addr16
fsts
push
mov
cmp
cs
sub
mul
mov
dec
lcall
mov
mov
and
not
popf
jns
lret
add
cmp
test
cmpb
add
mov
xchg
push
mov
mov
mov
pop
dec
fs
xchg
and
out
dec
aad
lods
pop
and
add
lcall
pop
jle
sub
aam
push
leave
jp
sub
or
lods
or
sub
in
pop
add
xor
incb
mov
cli
les
lcall
insl
jp
aaa
shll
and
pop
mov
loop
inc
sbb
jne
dec
xchg
jnp
jbe
scas
repnz
fwait
mov
ljmp
adc
mov
mov
mov
xchg
les
or
movsl
mov
adc
mov
out
xchg
sahf
mov
cmp
ja
aaa
push
sub
jp
cmc
loope
movsb
add
outsl
xchg
imul
pop
out
insl
mov
aaa
push
push
sbb
arpl
xchg
pop
dec
mov
in
cmp
adc
sub
imul
jmp
jne
mov
jg
jp
mov
jbe
mov
cli
mov
xchg
jecxz
cltd
popl
repnz
out
or
mov
stos
adc
shlb
aad
or
jo
lahf
adc
shrb
pop
pop
mov
dec
daa
and
add
pop
jb
and
mov
jg
xor
xchg
sbb
stos
or
popf
pop
sub
jns
dec
jle
test
jbe
cmp
inc
fcomps
iret
jg
in
lods
cmp
pop
dec
pop
and
push
test
xchg
jp
pop
adc
push
jnp
cmp
pop
xchg
outsb
jle
loop
iret
aad
lahf
pop
fbstp
jnp
test
cmp
outsb
sbb
cli
popf
jmp
and
ds
pop
push
mov
jp
add
shlb
adc
scas
jecxz
shll
divb
mov
adc
imulb
sbb
iret
sub
dec
inc
ret
mov
mov
mov
pop
outsl
adc
dec
test
cmc
in
fwait
jns
ffree
cs
lcall
dec
icebp
cmp
cmpsl
out
inc
cltd
dec
aam
inc
sub
hlt
sbb
push
out
hlt
shl
jo
dec
insb
dec
inc
insl
movsb
sub
dec
jp
mov
icebp
add
sarl
test
fwait
pop
xor
pop
fdivrs
add
mov
and
fdiv
pop
and
jmp
mov
inc
dec
gs
fst
test
sub
dec
mov
shrl
jg
pushf
jle
popf
mov
push
dec
sbb
and
add
rcr
adcb
fwait
mov
jp
lods
mov
orl
sub
adc
jnp
inc
shll
aas
mov
fists
xchg
cld
je
jns
insb
push
jecxz
xchg
cmpsb
push
pop
out
mov
mov
dec
xchg
adc
or
lcall
dec
lret
idivl
xorb
fisubrl
push
pop
icebp
mov
sbb
or
nop
jge
fdivs
sub
adc
int3
ret
jne
xor
pop
add
shlb
stos
jl
out
mov
push
out
dec
adc
in
adc
mov
data16
insl
mov
jp
and
mov
mov
ja
or
mov
enter
mov
pop
sub
clc
mov
jecxz
xor
mov
stos
cmp
xor
enter
xchg
lods
push
xchg
and
mov
mov
ror
outsb
jae
pushf
pushf
jle
add
inc
xchg
loope
cld
xchg
movsb
mov
repz
push
scas
jnp
jge
or
mov
fcoms
popa
fcmovu
leave
inc
ja
inc
imul
add
lods
adc
cltd
sub
popf
shl
sub
xor
test
push
daa
xchg
test
std
scas
mov
das
jmp
xchg
pop
mov
fistpll
rorb
and
into
repz
push
rol
fxch
pop
sbb
aaa
sar
test
test
jle
mov
ja
or
mov
sbb
jne
mov
add
ja
pop
sbb
mov
fnsave
imulb
stc
scas
pop
mov
jns
jns
call
js
leave
adc
pop
dec
cmpsl
leave
ret
pop
adc
aas
cmp
xchg
xor
bound
xchg
pop
cld
scas
xchg
mov
cli
lret
movsb
std
stos
mov
stos
sub
push
std
rolb
es
movl
out
imul
aam
push
aam
imul
sbb
enter
mov
sahf
test
mov
pop
out
xor
and
sub
mov
in
jl
add
xor
hlt
and
pop
or
pusha
mov
or
rorl
int
cld
pop
sbb
iret
jbe
cld
dec
lods
pop
rclb
xchg
cld
movsl
jge
out
jbe
fnstsw
insb
cmpsl
mov
fwait
lock
push
mov
push
inc
mov
sub
mov
mov
testb
xchg
mov
outsl
lcall
fiadds
rolb
loope
rcr
jbe
xor
adc
push
sub
test
movsb
pop
daa
aam
jne
ljmp
push
add
sub
mov
xchg
mov
jno
loop
pop
xchg
dec
jge
pop
push
xor
lret
inc
movl
dec
out
mov
mov
adc
je
idivb
aas
popa
mov
stc
das
mov
js
add
jae
inc
bound
mov
daa
dec
insl
inc
or
loop
jnp
jno
arpl
and
push
divl
loope
xor
mov
outsl
sete
cmp
mov
sub
daa
int
cltd
lea
pop
test
push
sbb
mov
or
mul
dec
add
jnp
loop
movsl
push
sub
push
addr16
adc
es
je
cmp
pinsrw
lock
xchg
xchg
shlb
rol
dec
dec
mov
imul
ja
dec
pop
jmp
jl
das
and
sbb
pop
mov
in
lea
test
add
je
out
xor
sbb
push
imul
in
pushf
shrl
movsl
xchg
int
adc
jo
jge
push
mov
cmp
dec
lahf
push
or
mov
xchg
or
icebp
mov
cmp
push
fcomps
adc
mov
ss
fistpl
xchg
cmpl
ja
pushf
outsb
push
push
cld
fs
sbb
in
sbb
clc
in
push
jg
aam
push
and
mov
fwait
or
mov
sub
stc
mov
lods
cmp
cmpsl
cmp
pop
in
fistpll
test
cmp
xchg
pushf
add
andb
pop
aas
call
dec
xor
mov
mov
mov
inc
outsb
xchg
cmp
popa
and
lcall
jo
cmp
sub
popf
dec
cmpsl
aas
or
push
jae
imul
sahf
mov
imul
repz
pop
xlat
aaa
stos
clc
mov
imul
addl
xor
push
sahf
gs
dec
lret
into
daa
push
cs
test
and
aaa
fldl
cltd
pushf
in
gs
add
movsb
test
push
shll
and
mov
sti
push
jbe
xlat
daa
adc
fmull
hlt
mov
mov
icebp
call
and
flds
rcl
mov
mov
mov
xor
lds
add
mov
test
mov
jl
push
lods
push
inc
aas
cli
cwtl
fsubrs
loopne
test
rcrb
cmp
popf
lds
pop
push
xchg
sarl
dec
popa
call
flds
sub
pop
inc
imul
xchg
push
xchg
sub
sub
cmp
test
repnz
dec
mov
and
setge
loope
push
inc
das
push
lea
lock
cmc
lds
sbb
mov
xchg
jl
jo
mov
adc
inc
cmc
jmp
push
add
sahf
add
sbb
ret
add
xor
mov
rcrb
pop
clc
xorb
hlt
fidivs
jp
xchg
and
popa
nop
cmp
lods
pop
js
std
arpl
xor
fldl
mov
push
push
mov
nop
shl
inc
sahf
jno
loope
cwtl
jno
fnstcw
mov
sub
push
dec
mov
jnp
dec
iret
popa
enter
xchg
out
ss
pop
andl
or
fstpt
in
lea
push
mov
adc
pop
mov
daa
fistl
mov
add
outsl
mov
ja
pop
popa
push
int3
lods
jge
xchg
pusha
push
subb
xchg
out
push
test
mov
sub
ss
stos
cmpl
ljmp
aas
cmp
cmp
adc
sub
dec
mov
mov
and
ficompl
sbb
loop
stos
xor
sub
adc
test
jmp
mov
mov
sbb
dec
adc
bnd
sub
mov
sar
ljmp
adc
int3
fmuls
ljmp
shr
mov
and
mov
mov
xchg
cld
pop
push
jbe
cld
pop
pop
mov
sbb
lahf
lahf
add
popf
mov
cld
sbbl
add
in
arpl
jl
ret
cli
dec
lcall
adc
cmp
or
sbb
dec
cmpsl
sbb
adc
scas
pop
sbb
jno
push
sub
fstps
push
pushf
adc
inc
sti
sub
xchg
das
int3
mov
lods
or
test
dec
mov
int3
push
ret
int3
dec
inc
hlt
mov
stos
mov
pop
mov
xor
inc
sub
jnp
ss
xor
xchg
imul
scas
dec
adc
xchg
mov
scas
push
loopne
add
push
rcrb
cmpsb
sbb
or
cmp
jns
push
repnz
repz
xchg
push
dec
call
inc
sbb
and
out
test
mov
shl
fnstsw
insl
cmc
das
pushf
lods
pand
in
cmp
in
ret
push
rcl
andb
stc
lea
cmp
shlb
xor
enter
xchg
lea
shrl
lcall
xchg
inc
loopne
in
hlt
stos
out
push
repnz
and
cli
dec
dec
xor
pop
fsubr
rcrb
pop
fsubl
xlat
add
sub
sbb
and
outsb
lahf
fisttps
jns
cmp
adc
xchg
loope
push
fsubrp
push
mov
lahf
lret
push
push
xchg
fsubs
jg
mov
mov
sbbl
cmp
ljmp
push
pop
fbstp
dec
outsb
mov
icebp
lret
and
dec
lods
sti
xchg
bound
mov
mov
fdiv
pminsw
mov
stc
or
test
xor
or
sbb
in
cli
add
into
pop
mov
popf
ror
xor
pop
imull
nop
das
sub
icebp
cmc
sub
pop
cmp
loopne
repz
jne
sbb
or
mov
in
rolb
jecxz
lock
in
mov
in
mov
mov
sbb
jg
xor
lods
jl
cmova
mov
hlt
sti
inc
xor
hlt
lret
je
in
push
cmp
push
in
pop
outsl
dec
out
test
out
xorb
cmpsb
icebp
movsb
rclb
jg
push
ja
int3
sub
sbb
or
scas
dec
push
enter
sub
sub
inc
stos
outsl
add
or
xchg
or
int
push
fnsave
mov
add
cltd
adc
fsubrl
iret
cmp
sub
mov
and
fiaddl
jecxz
push
lret
loop
lods
outsl
shlb
xchg
cs
push
in
adc
push
mov
dec
loope
mov
push
adc
bound
pop
jae
add
add
cmc
xchg
sbb
cmp
pop
inc
cmp
inc
inc
xchg
mov
out
mov
lcall
fadds
cmp
mov
inc
imul
fiadds
sub
dec
xchg
pop
imul
dec
cld
ffreep
loop
add
pushf
cltd
cmp
and
xlat
shlb
jae
test
mov
and
and
push
adc
int3
jno
leave
pop
sahf
lods
xor
fadds
mov
imul
push
sbb
pop
pop
jne
adc
popf
sbb
pop
jmp
clc
fsubrl
lds
xchg
xchg
in
stos
ficompl
aad
jle
pusha
aas
or
cs
pop
xlat
add
and
mov
cmp
jnp
mov
les
movsl
inc
sbb
sub
repz
adc
sbb
pop
stc
or
mov
sub
aaa
ret
xor
or
hlt
mov
int3
lods
lods
outsb
in
xchg
rcrb
adc
push
cmp
stos
adc
enter
push
mov
adc
lret
inc
adc
inc
sti
mov
es
sub
mov
jne
inc
fdivp
stc
inc
pop
adc
cmc
loopne
or
imul
lods
bound
nop
mov
ret
mov
jae
gs
mov
cs
decb
sarl
sub
jp
inc
sti
mov
repnz
cmp
rcll
adc
lret
inc
pop
adc
dec
cmp
xchg
jae
pop
stc
into
push
stc
mov
dec
imul
pop
jns
mov
cmp
cs
cmp
lds
mov
daa
or
xlat
add
mov
and
dec
jb
aad
cmpsl
jmp
iret
and
xor
push
sbb
sahf
sub
cmp
mov
dec
pop
les
cmp
addr16
popa
pop
rol
xchg
dec
adc
into
inc
cmc
int3
sub
fcomip
push
cmp
jecxz
in
jmp
or
mov
sahf
test
mov
jb
rcl
cs
in
aad
cmp
sbb
push
xchg
adc
je
int
pop
mov
lcall
ret
pop
pop
loope
ret
inc
shlb
mov
push
sahf
stc
inc
mov
imul
out
sahf
mov
fistpll
ja
dec
xchg
push
push
imul
adcl
daa
es
xchg
loop
xchg
mov
lahf
imulb
add
xchg
repz
push
push
mov
pusha
mov
sbb
sub
sbb
ss
xchg
dec
ljmp
pop
xchg
icebp
push
pop
jle
jno
sbb
sub
sti
dec
xor
mov
test
repz
sub
add
jecxz
shll
sub
das
sar
int3
pop
mov
sub
and
das
xor
xchg
xor
test
in
mov
jle
jg
scas
ss
xchg
lahf
and
fwait
sbb
sub
scas
pushf
outsb
call
xchg
stos
xor
sub
push
jae
jge
xchg
std
xor
cmc
sub
and
fs
test
sbb
xor
lea
stos
je
stc
xchg
mov
call
repz
call
mov
clc
mov
fildl
cmpl
jmp
fldl
mov
data16
inc
jae
popf
pop
pop
cmpsl
daa
xchg
cmp
iret
pop
adc
mov
and
xor
inc
iret
push
xchg
cli
xchg
lret
sbb
push
cwtl
adc
stos
mov
outsb
fstl
jnp
or
add
sbb
inc
push
dec
jmp
push
mov
popf
inc
jns
push
sub
jmp
cli
in
jns
cltd
mov
int
mov
push
xchg
jle
daa
mov
addb
push
mov
lods
nop
aas
mov
push
mov
in
cmp
rcrb
mov
adc
pop
fcmovnbe
adc
loope
add
inc
push
sub
pushf
mov
pop
addb
inc
mov
mov
fsubrl
xor
cmp
lret
or
cmc
mov
mov
jae
test
enter
or
shrd
and
icebp
iret
lret
xchg
jo
jp
mov
or
push
inc
lock
shrd
int
jb
mov
mov
xchg
inc
loop
sub
lret
pop
shrl
mov
mov
aas
jnp
adc
lcall
adc
sub
rolb
dec
jb
adc
jle
arpl
in
leave
sbb
fwait
lret
or
fwait
andb
aad
pop
in
addr16
mov
mov
and
out
sub
imul
mov
xchg
mov
iret
mov
jne
shll
in
dec
testl
inc
pop
mov
push
ret
fstps
lods
out
fs
shll
cmp
sbb
lods
cmove
and
push
sub
jg
xor
push
sub
stc
mov
bnd
setne
sti
lret
aad
or
shrb
xchg
or
in
daa
jnp
lods
xor
sti
icebp
fsubs
or
std
lahf
push
inc
mov
pop
push
and
pop
sbbl
and
testb
or
inc
clc
mov
int
or
and
cmp
js
sub
scas
ret
aas
inc
mov
mov
cs
inc
out
jge
and
movsl
xor
mov
mov
out
pop
out
movsb
mov
outsl
mov
xorl
xchg
movaps
lret
jae
cld
pop
mov
jne
outsl
adc
out
xchg
xor
cmp
jecxz
adc
mov
lahf
imul
jecxz
test
in
or
shr
add
jg
out
stos
adc
and
mov
and
ss
sarl
in
enter
jo
inc
ss
shll
dec
jns
test
pop
fcmovnu
popf
js
jle
mov
pop
add
jno
dec
sub
inc
test
hlt
pushl
sbb
dec
in
push
or
imul
pop
xlat
ss
push
cmpl
fwait
iret
add
cmpl
dec
push
pop
arpl
sbb
cld
ljmp
adc
test
adc
sti
inc
mov
and
movsb
push
jmp
and
cmp
cld
sub
rcrl
dec
mov
arpl
leave
pop
push
cmp
cmp
test
push
fs
sbbb
mov
or
lret
push
in
mov
xor
out
fldcw
jns
popl
ljmp
add
aad
sti
insb
lret
xchg
lahf
enter
mov
cmpsl
outsl
lds
je
rcll
loope
add
lea
mov
ficoms
adc
pop
int
cltd
stos
jecxz
mov
push
aam
call
mov
popa
pop
fwait
adc
bound
testl
notb
mov
jno
aam
outsb
rorb
dec
cmp
in
stos
cmp
lret
jae
fcompl
mov
inc
movsb
test
sarb
orb
clc
test
cmp
pushf
push
addr16
dec
out
lods
mov
pop
ljmp
movsb
adc
pusha
insb
cli
aas
mov
in
je
inc
cmc
out
jp
and
stos
shl
sahf
ljmp
inc
push
mov
jecxz
mov
shll
dec
push
fdivrs
cmp
and
mov
cmp
test
fstpl
adc
outsb
aad
jg
fsubr
xchg
xchg
js
push
cltd
add
xor
cmpsb
loopne
sub
rclb
jp
mov
popf
mov
sbb
insl
in
mov
test
scas
push
push
and
or
popa
lock
stc
popa
inc
push
fmull
mov
jp
xor
jge
jecxz
sub
jmp
int
cld
cli
cmpsl
or
lds
jae
xchg
in
scas
out
daa
fdivrl
adc
lea
jo
adc
inc
in
popf
mov
pop
fidivl
stos
add
iret
cli
ljmp
fdivs
cwtl
lods
lahf
outsb
je
push
mov
jl
ds
js
jae
insl
out
jg
vpmaxsw
stos
std
mov
fstl
mov
in
cmpsl
jo
and
and
test
pop
cltd
daa
cmp
mov
stc
aam
in
jbe
aam
in
subb
sub
cmp
sbb
pop
pushw
mov
inc
inc
movsb
fcmovnbe
dec
pop
and
out
movl
loopne
and
cmpsb
push
sbb
mov
mov
lods
cli
and
push
ljmp
int
push
stos
mov
dec
and
inc
dec
mov
sub
jae
xchg
xchg
cmp
fldcw
and
mov
lret
dec
xor
data16
mov
push
mov
and
sbb
cmp
inc
pop
rcll
out
lea
mov
decl
inc
jge
jmp
call
jae
adc
loop
stos
cwtl
adc
gs
mov
and
hlt
cwtl
clc
testl
push
jp
or
sub
inc
les
xchg
adc
xchg
and
push
cmp
mov
enter
jl
sbb
call
cmp
imull
or
jecxz
jae
out
push
xor
test
mov
or
cmp
lret
xor
jmp
rcl
stos
sbb
sar
je
cmc
xor
xchg
fwait
lea
lahf
lahf
ficompl
dec
je
or
mov
cmp
cmp
push
outsb
les
mov
out
rcrb
xchg
call
cmp
jmp
push
in
shlb
stc
test
sub
ljmp
hlt
rorb
xchg
mov
shlb
lea
sub
ja
pop
sub
ret
fwait
xor
je
push
push
adc
imul
jns
sahf
jne
es
mov
mov
clc
ret
movsb
xor
xchg
dec
mov
xor
or
in
data16
ss
mov
in
add
and
push
addb
out
mov
mov
adc
icebp
cmp
sub
xor
jo
or
inc
adc
insl
mov
add
cmp
std
je
leave
adc
xchg
mov
call
push
mov
and
stos
inc
int3
shlb
jge
dec
inc
mov
repz
xor
out
mov
mov
sbb
xchg
nop
insb
in
sbb
cli
xlat
dec
pop
fimull
sbb
iret
aam
xor
xor
mov
int
out
xchg
xor
xchg
scas
sti
outsl
or
int3
popa
out
or
jmp
out
leave
call
and
pusha
cmpsl
sbb
ret
scas
sub
adc
mov
or
inc
xor
shl
rcrb
or
sub
pop
jmp
mov
push
stos
mov
ret
sbb
jge
jnp
lret
outsb
adc
cmp
pushf
mov
movsl
dec
cmc
add
add
out
repnz
into
mov
add
adc
push
gs
push
pop
pop
les
mov
and
and
mov
inc
in
pop
pop
cmp
ret
lahf
sbb
fistpll
test
push
add
sub
decb
nop
call
cmp
mov
mov
fdivrl
pop
data16
lea
mov
dec
inc
sbb
inc
insl
and
shll
outsb
in
mov
sbbb
mov
xchg
mov
repnz
imul
inc
jle
cmp
adcl
popf
dec
pop
lret
out
cmc
rcrl
out
add
cmp
out
fsubrs
ss
push
cmp
jecxz
jg
cmpsb
aaa
int
add
sti
jge
cmp
add
lcall
test
ret
adc
loopne
fildll
mov
loop
mov
les
das
or
in
cwtl
sub
jbe
jmp
mov
stos
adc
out
das
stc
xor
adc
inc
arpl
push
or
ret
cmp
insl
loopew
js
sbb
or
ret
icebp
shlb
add
fiadds
xchg
xor
cld
test
xlat
in
mov
push
js
enter
pop
nop
push
mov
arpl
outsw
int
ss
pushf
push
aam
aaa
add
imul
ret
jbe
das
ds
ja
mov
adc
lock
mov
mov
pop
inc
cmp
stos
and
sub
loop
cli
cmp
sub
jbe
cmp
pop
call
into
std
test
adcl
pop
mov
xor
cs
ljmp
shrl
lods
and
or
add
adcl
imul
jne
dec
sahf
adc
orb
popf
adc
push
pop
jns
cwtl
xchg
std
xor
jne
xor
jecxz
ljmp
dec
movsb
addr16
jg
xor
ret
cmp
mov
cmpl
and
fsubl
loope
cmp
aad
stc
ljmp
int3
jp
pop
dec
cmp
sbb
mov
fcmovnbe
sahf
popf
cmpsb
dec
or
subl
inc
mov
pop
mov
sbb
sbbb
mov
testl
dec
pop
into
lcall
dec
fnstenv
xchg
cmc
mov
xchg
insl
out
push
mov
mov
push
mov
dec
rorb
lock
loop
inc
push
cmp
cmp
punpckhdq
mov
or
xor
les
pop
shl
mov
mov
test
sahf
ljmp
jl
push
mov
sub
inc
notl
cmp
sub
pop
je
movsl
cmc
dec
cmp
jge
syscall
stos
mov
xchg
cmp
add
jg
mov
dec
push
sbb
cmc
dec
sti
jg
xchg
mov
or
mov
cltd
dec
adc
repnz
or
lock
and
cwtl
je
mov
sbb
pop
leave
xor
fnstsw
sahf
popf
jae
inc
add
xor
sub
lea
lods
xor
mov
xor
dec
sbb
rolb
scas
mov
dec
xchg
sub
inc
dec
inc
xor
add
mov
mov
sub
jp
leave
scas
std
dec
mov
cmp
aas
lods
in
and
pop
xchg
xchg
in
dec
push
pushf
fistpll
lret
arpl
imul
test
dec
das
and
jae
xchg
les
xchg
nop
or
cmp
and
addb
mov
sub
and
dec
pop
cld
jnp
pushf
loopne
jno
out
xchg
mov
hlt
mov
rcll
loopne
cmp
ret
adc
xor
xchg
mov
mov
mov
xor
das
inc
add
xor
aaa
repz
push
or
cmc
repz
sub
jg
and
jns
mov
dec
call
cmpsb
into
icebp
vmread
inc
mov
cmp
push
mov
jp
dec
fiadds
or
add
lods
leave
jle
scas
sub
jp
stos
xor
dec
mov
shrl
mov
add
sub
jae
dec
jmp
xchg
ja
mov
xchg
jmp
cmp
add
testl
notb
fwait
cmpsl
ja
xor
test
pop
in
rcrb
pop
fldt
sub
xor
inc
xchg
mov
gs
decb
pop
imul
mov
pusha
jnp
jae
mov
rcr
test
popa
cwtl
cmpsl
inc
or
sahf
int
and
shr
outsb
mov
push
mov
fwait
std
aam
pop
jmp
fs
sbb
js
add
xchg
mov
fnstcw
cmp
lahf
testl
mov
sub
lret
les
inc
das
shll
ret
mov
mov
fdivrl
sub
push
mov
inc
lret
cmp
lcall
inc
sahf
mov
mov
fisttpl
sahf
pusha
adc
pop
mov
std
cmc
xor
cmp
sub
push
xchg
aad
outsb
enter
cmc
mov
mov
push
icebp
push
inc
outsl
imul
or
sbb
in
and
xorb
je
std
or
dec
aad
sbb
jmp
fdiv
movsl
sahf
in
xor
rol
icebp
int
xchg
inc
mov
lea
mov
jmp
sub
push
mov
inc
or
sbb
cld
movsl
cmpsb
pop
lret
out
es
aam
lea
shrb
sahf
inc
pop
mov
jo
sub
xor
xchg
sub
push
or
es
lea
fwait
sbb
mov
push
lock
popa
add
jl
nopl
in
lock
mov
push
xor
mov
imul
dec
loopne
inc
rep
or
rcll
hlt
jmp
pop
clc
mov
inc
xchg
sbb
jbe
xor
and
add
into
mov
ljmp
test
adc
jnp
rclb
int3
and
cmp
insl
fwait
test
in
xchg
leave
inc
cmp
push
fidivrl
rorb
das
mov
insb
inc
mov
lahf
jge
in
lods
ret
fisttpl
ja
pop
pop
cmp
sbb
add
aam
into
clc
ret
push
push
into
in
xchg
adc
dec
mov
fiaddl
xor
or
scas
lret
leave
xlat
iret
xor
inc
push
fldt
fwait
push
outsl
out
add
xor
stc
mov
data16
in
je
ret
fiadds
dec
pop
xchg
ljmp
jnp
and
outsb
lods
rcll
les
add
mov
sbb
fmull
sbb
mov
add
mov
and
pop
cmp
mov
in
clc
mov
sub
imul
insl
or
mov
les
adc
ret
lods
ret
inc
cmp
jno
inc
pop
sub
pop
insb
inc
test
jl
or
push
fdivr
inc
cs
xchg
xor
jne
aaa
xor
push
sub
dec
clc
xchg
cmp
xchg
inc
lret
adc
nop
push
lea
scas
mov
push
inc
pushf
and
sbb
sbb
sbb
jg
pushf
jbe
dec
cmp
incb
outsb
stos
mov
push
shrl
or
call
or
int3
jb
dec
xorl
sub
jmp
fstpt
or
sbb
cmp
push
dec
ds
add
push
xor
fisubrs
test
or
fcmovu
sbb
call
scas
aaa
call
fsubrs
mov
or
adc
jno
bound
stc
fdivl
push
sbb
inc
out
xor
mov
inc
push
out
mov
jb
je
dec
lods
test
icebp
bound
sahf
mov
xchg
and
mov
jmp
mov
cmp
pushf
popf
lods
inc
out
movsb
cmp
mov
mov
push
aas
jg
push
dec
loope
insl
mov
cli
int
test
inc
pop
mov
pop
test
sarb
das
fdivrl
movsb
les
xchg
dec
push
out
cld
mov
push
les
pop
mov
lea
repnz
inc
lea
cmp
pop
cmpsl
xor
stos
xchg
add
cmp
icebp
ret
lock
orb
adc
movsb
push
inc
stos
inc
and
inc
je
adc
sub
stc
mov
in
cmc
inc
push
mov
scas
cmp
aaa
lods
cmp
adc
rol
push
lret
dec
mov
outsb
mov
andb
jb
xor
repnz
vhsubpd
divb
xor
leave
pushf
xor
cld
pop
sbb
out
in
rorb
inc
push
inc
pop
popf
insb
cmc
test
push
mov
lea
lcall
cld
fldl
and
fidivl
or
or
xchg
outsl
outsl
add
jo
dec
adcb
sub
jp
inc
testb
and
out
data16
fbld
sub
add
sbb
sbb
adc
cwtl
xlat
into
push
in
aam
push
sarb
leave
rcrb
mov
pop
push
or
mov
ja
negl
repz
sub
dec
xchg
jns
out
out
adc
push
hlt
int
push
or
int3
in
cld
cmp
icebp
popf
mov
dec
pop
and
or
and
into
push
adc
imul
pop
inc
xchg
add
test
cmp
push
out
or
jle
ds
pop
cmp
adcb
dec
imul
pop
push
call
mov
push
hlt
mov
dec
in
pop
pop
mov
xchg
add
jb
add
lods
add
or
mov
jge
lret
cmp
and
pushf
xor
jns
and
mov
xor
pop
mov
xor
imul
mov
lret
out
push
scas
repz
insl
fwait
mov
stc
mov
push
call
enter
sbb
lea
and
repnz
xlat
cmc
dec
ror
cmpb
ret
inc
add
popf
xor
mov
pop
add
add
and
mov
dec
in
rclb
adc
fmuls
mov
jne
aam
lcall
xor
pusha
data16
sub
xor
inc
jne
fimuls
adc
add
adc
cmp
pop
fstl
in
xchg
fisubs
por
addr16
fldl
rorb
add
fsubrs
lret
jg
and
and
icebp
ja
mov
sub
orl
add
insb
add
fwait
mov
cmpsb
or
xchg
rcl
mov
or
in
outsb
sub
lcall
sbb
aam
lret
cmp
hlt
fcoml
cs
xchg
js
mov
jns
je
les
mov
in
std
repnz
ds
shlb
inc
jge
dec
xor
inc
outsb
adc
jecxz
xchg
xchg
stos
jl
mov
test
push
mov
stc
insb
push
push
int
jg
add
cmp
jl
mov
lds
jmp
xchg
mov
arpl
out
xor
cmp
stos
cmpsb
addr16
outsl
inc
loop
sbb
popf
ljmp
jecxz
inc
subb
jne
out
repnz
sub
dec
aas
pop
lahf
adcb
inc
popf
jnp
xchg
dec
int
sbb
mov
sub
mov
daa
mov
or
pop
add
adc
sub
cmc
repz
sbb
adc
inc
jne
xchg
cli
mov
sub
je
mov
loop
add
lods
lock
in
jo
scas
jo
adc
adc
mov
cs
mov
xor
jno
push
je
or
loope
adc
push
loope
leave
mov
ror
adc
testl
out
push
rclb
imul
lret
push
push
lods
lret
loope
lcall
sbb
lds
mov
xor
popf
mov
popf
test
movsb
addr16
mov
add
push
pusha
lret
or
mov
inc
sbb
test
pop
jl
or
cmp
or
rorl
mov
pop
ja
cmp
mov
cld
stc
push
insb
fisubrl
inc
and
repz
sub
call
and
idiv
mov
packuswb
enter
js
inc
xorb
xor
push
sub
into
adc
mov
mov
xchg
fidivrs
outsl
and
js
add
stc
and
mov
adc
insl
mov
test
adc
pop
cli
dec
jl
std
test
xchg
and
mov
sbb
mov
sub
cmp
fldcw
mul
jecxz
mov
pop
fs
pusha
mov
stc
cmpsb
fldenv
mov
cmp
testl
aas
xor
add
es
lock
pop
pushf
sbb
ds
jae
cmp
mov
test
add
movsb
mov
jae
push
xor
push
pop
mov
loopne
out
xchg
and
cli
push
xor
xchg
dec
jns
push
insb
aas
adc
sbbl
ja
jmp
lret
push
sbb
mov
ficomps
scas
dec
lret
pusha
xchg
push
and
mov
sub
adcb
movsb
je
adc
andb
fcmovnb
fwait
out
xchg
fcoms
insb
adc
pop
out
inc
out
fucomi
inc
dec
sbb
out
mov
jmp
out
repnz
push
push
xor
and
push
jg
fldt
xor
mov
lods
xchg
dec
in
mov
gs
or
hlt
push
and
or
pop
or
js
add
mov
pusha
psllw
loope
and
push
inc
inc
xchg
add
test
and
cld
sub
outsl
test
es
mov
test
inc
add
jmp
push
push
push
inc
pusha
push
loope
movsb
mov
xchg
lret
les
mov
xchg
scas
sahf
sarb
fdivrl
lahf
test
out
mov
int3
mov
fisttpl
rcrl
jmp
test
rcr
jp
ret
push
test
call
mov
loope
inc
movsb
and
cs
mov
xchg
cmp
mov
pop
adc
mov
dec
iret
mov
addr16
xor
sbb
mov
cmc
dec
pushf
int3
scas
jnp
mov
dec
ss
sbb
mov
ret
adc
mov
dec
push
jmp
push
mov
jne
xchg
xchg
cmpsb
and
or
out
mov
xchg
dec
jmp
mov
xchg
cmp
enter
lret
enter
stos
hlt
mov
mov
add
iret
inc
cmc
pop
xchg
jo
sbb
mov
movsb
es
push
adc
mov
mov
pop
test
stc
push
movl
pop
sahf
sub
mov
add
mov
pop
in
cli
daa
andl
stos
iret
clc
es
xlat
adc
scas
or
out
mov
push
std
stc
icebp
int3
cs
dec
mov
stos
mov
mov
inc
cwtl
cs
pusha
scas
and
hlt
jecxz
and
mov
aam
dec
stos
cmp
xor
push
cmp
bound
and
jnp
lret
addr16
cmpsb
jmp
cwtl
repnz
outsl
jo
sub
mov
dec
inc
cmpsl
dec
mov
fdivrs
aas
xchg
addr16
mov
or
rcl
jge
lret
pop
lods
andl
pop
xor
call
stc
xchg
movsb
movsl
jg
lcall
aad
and
jg
scas
pop
mov
xchg
shlb
in
dec
xchg
lret
test
add
xor
jge
lods
clc
push
call
add
xor
popaw
pop
dec
dec
loope
xor
popa
sbb
aas
stc
jo
aas
enter
sbb
fsubrl
jno
xor
xchg
and
aas
xor
daa
xor
push
out
cmp
sahf
sti
mov
aaa
xor
sbb
and
sbb
test
gs
pop
lock
scas
in
mov
lods
cltd
jmp
or
pop
out
lret
jle
adc
ja
lret
inc
pop
inc
pop
insb
fnstsw
mov
pop
cmp
cld
data16
sbb
and
push
add
cmp
repnz
mov
pop
mov
outsl
cwtl
ja
or
pop
jecxz
xchg
mov
subb
or
cmc
rclb
mov
xchg
gs
insb
out
leave
jp
fdivl
mov
cmp
sbb
aam
xchg
pop
scas
mov
adc
adc
cmovne
test
fidivl
mov
mov
outsl
out
dec
aaa
lea
or
mov
cltd
jecxz
ret
adc
adc
and
xchg
jle
adc
fidivs
sub
call
pop
adc
in
aas
pop
mov
pop
daa
mov
cmp
int
data16
insl
jns
xor
lods
in
mov
scas
mov
jno
mov
ja
sahf
sub
dec
push
out
xor
xchg
sub
adc
out
or
xor
mov
pop
out
inc
mov
loopne
lock
sbb
push
lea
out
jg
sbb
jnp
or
mov
adc
cmp
or
lahf
jbe
cmpsb
push
enter
lods
jne
bound
je
adc
jne
xchg
js
in
outsb
mov
adc
fwait
das
sahf
xor
mov
popf
pop
ds
sub
xchg
cmp
mov
out
lods
les
jns
cmp
mov
dec
popf
sub
div
cltd
ja
cwtl
mov
cmp
xchg
mov
into
mov
jl
push
pop
out
mov
add
repz
pusha
aam
mov
mov
movsb
out
push
ret
mov
jmp
cs
adc
es
das
loop
add
add
jns
pushf
inc
fnstenv
outsb
sti
rcr
inc
repnz
in
and
lock
dec
popf
nop
mov
or
sub
shll
push
and
movsl
fldl
movsb
lahf
jae
dec
call
test
sub
lods
mov
mov
es
push
mov
mov
fcomi
add
push
xchg
pop
dec
out
xchg
jle
mov
inc
xchg
out
insb
stos
add
xchg
js
mov
std
subb
dec
and
mov
cmp
and
add
jnp
in
push
incl
xor
movntq
lods
mov
pushf
xchg
fists
mov
sub
enter
out
add
sbb
pop
lcall
clc
pop
lea
pop
mov
std
push
dec
xor
mov
push
and
sbb
outsb
fsts
out
pmaddwd
xor
mov
mov
add
mov
and
mov
cli
roll
jb
jnp
lods
xchg
xor
and
int3
push
mov
push
adc
outsb
daa
cltd
pop
adc
sbb
push
pop
notl
insl
push
repz
mov
or
jne
adc
scas
decb
sbb
ljmp
clc
push
dec
test
xchg
xchg
dec
aas
mov
addl
sti
mov
cli
and
lds
loopne
push
or
cmp
push
imul
or
stos
mov
mov
dec
test
push
es
xor
out
mov
push
jge
in
fcoml
push
xor
xor
and
pop
imul
shlb
sub
sarb
push
dec
jle
loope
notl
mov
repnz
pop
movsb
fdivr
jns
out
fisubrl
or
jnp
fsubrl
sbb
out
dec
push
sub
sar
bound
push
mov
faddp
pop
push
shll
test
xor
daa
cmc
xchg
dec
adcb
add
push
xrelease
int
mov
shrl
fmul
adc
mov
loop
add
sahf
pop
mov
xchg
push
xor
cli
pop
jg
lahf
into
xor
mov
add
out
xchg
jmp
in
adc
push
mov
lret
into
cmp
loope
sub
test
rclb
icebp
lret
and
dec
pop
fcomip
test
cltd
inc
fcomps
pop
daa
es
xchg
mov
movsl
pop
cmpsb
add
cmpsb
mov
pop
dec
out
jmp
movsl
xor
push
adc
andb
and
inc
in
mov
adc
sub
xchg
push
pushf
jle
test
pushf
pop
sti
or
ss
xchg
jle
loope
push
ss
dec
or
pop
cli
sbb
xchg
adc
clc
negl
enter
shll
xor
mov
fxch
imul
ljmp
cmp
insl
mov
jl
nop
add
or
pop
or
rcrb
enter
mov
lret
cmpl
lds
movsl
rclb
mov
leave
inc
or
mov
cmp
mov
mov
shlb
js,pn
mov
icebp
and
sub
ret
push
inc
adc
mov
xchg
xchg
push
pop
sub
dec
xchg
xchg
dec
sub
mov
dec
add
mov
popa
pusha
setne
cld
dec
enter
jae
push
jne
out
lds
jns
mov
xchg
adc
loopne
lods
not
inc
pusha
ljmp
nop
sub
xchg
fnstcw
adc
out
xchg
iret
repnz
shrd
sti
mov
test
push
in
dec
push
cmpsl
cwtl
push
mov
cwtl
lods
lahf
fstpt
daa
addr16
dec
jo,pn
lock
nop
inc
mov
rcl
lea
xchg
fimuls
pop
xor
fs
daa
or
out
sbb
cmc
mov
int3
sbb
scas
push
stc
push
aad
movsb
out
fnstsw
inc
jl
mov
cmpsl
mov
or
mov
addr16
push
and
mov
ja
hlt
lea
jg
pusha
sbb
sbb
mov
shrl
jns
adc
fucomp
mov
or
mul
sti
adc
inc
and
xchg
pop
stc
ja
les
mov
imul
mov
mov
xchg
inc
push
lds
pusha
repnz
imul
push
fstl
xchg
dec
cmp
xor
daa
gs
jno
xor
orb
icebp
jp
inc
imul
or
rorl
inc
inc
call
out
xor
jmp
mov
insb
int
jnp
shld
enter
data16
cli
push
xchg
lock
hlt
jbe
xchg
mov
sbbb
dec
lods
pop
scas
sbb
push
cmc
lea
mov
lcall
cli
fwait
cld
sbb
sarl
cmp
sub
fsubrl
fsubl
or
or
cmpsb
or
or
xchg
ret
mov
or
adc
inc
data16
mov
xchg
rol
loope
loopne
int3
mov
rorb
lahf
pop
push
jge
pop
mov
fdivl
jbe
shll
push
xchg
cmc
or
test
fsubrp
adc
in
and
jns
cmp
and
cli
addr16
clc
sub
xchg
pop
out
pop
cmp
xlat
jecxz
add
or
add
mov
in
outsb
mov
outsb
dec
ja
pop
mov
in
xor
popa
xchg
pop
push
add
imul
add
fadds
mov
push
jae
jmp
idivl
das
pop
jge
outsb
inc
nop
mov
mov
jl
arpl
clc
fadds
add
pop
sbb
adc
pop
ja
fisttpll
movb
or
jb
leave
fwait
leave
cmpsb
xchg
xchg
mov
call
cmp
xchg
cmp
cltd
scas
ret
call
test
es
jle
jb
enter
or
mov
pop
movl
shll
test
mov
mov
sub
add
cmpsb
imull
cmp
mov
jne
aad
adc
or
and
mov
popa
jmp
insl
std
xor
push
jecxz
mov
nop
ss
push
fs
mov
out
scas
iret
arpl
fnstsw
push
roll
or
inc
mov
mov
popa
aam
sub
mov
out
jl
stc
sbb
cltd
push
hlt
add
lcall
dec
xchg
shll
mov
and
imul
lret
jne
jmp
aam
and
pop
mov
in
push
dec
stos
jmp
mov
outsl
cld
xbegin
lods
mov
sub
xchg
int3
repnz
fistpl
std
xchg
jg
xor
stos
sahf
xchg
sub
daa
cs
pushl
mov
incb
push
and
add
lock
roll
sub
mov
dec
daa
lcall
mov
aad
mull
xlat
mov
mov
mov
dec
mov
addr16
insl
pop
push
and
push
dec
daa
fsubl
subl
lds
into
mov
pushl
mov
sub
mov
pop
mov
loop
rorb
push
inc
sbb
dec
cltd
insl
fistpl
imul
cmp
aas
out
cmp
movntps
das
and
packssdw
add
add
out
push
fs
out
pop
pop
dec
mov
pop
jmp
gs
mov
shrl
jp
mov
push
or
mov
inc
or
sbb
in
inc
lock
mov
inc
xchg
movsb
push
add
mov
push
sbb
sub
mov
adc
outsl
pop
int
cmp
inc
fsubrs
pusha
add
fidivrs
out
sbb
test
fbld
outsb
adc
adc
sbb
fnstsw
dec
mov
mov
add
or
xchg
in
pop
rclb
aas
dec
jo
cmpsl
sub
adc
rolb
rorl
outsl
pushf
loope
sub
jl
rolb
addr16
dec
mov
lea
shll
mov
pop
push
adc
scas
andl
test
int
fs
lods
pop
imul
fnstsw
daa
jne
xchg
push
or
mov
into
jns
jnp
mov
sbb
in
mov
out
insl
cmp
xchg
leave
push
xorb
sti
mov
daa
pusha
orl
call
sbb
test
test
pop
mov
addb
or
or
fs
lret
add
mov
lods
fsubrs
dec
test
jg
or
scas
ja
xor
jnp
sub
dec
mov
dec
leave
add
inc
lret
stos
sub
jp
sub
and
loop
mov
cmc
pop
mov
cmp
decb
pop
mov
cmp
mov
inc
movsb
in
sbb
orb
push
sub
popf
dec
stos
mov
xchg
adc
mov
jle
nop
int
inc
jae
les
lcall
ja
sahf
ss
xchg
jo
xor
cmp
xchg
jmp
mov
xchg
adc
cmp
lahf
dec
mov
dec
shl
pop
imul
popa
sub
adc
mov
dec
cli
or
cmpsw
cwtl
or
cmp
mov
int
jo
outsl
mov
div
subb
sub
repz
push
add
mov
mov
jge
sbb
push
mov
fists
divl
cmp
shl
dec
mov
add
jg
js
or
sub
outsb
add
push
mulb
fwait
stc
xor
xchg
mov
cmp
xor
ljmp
in
lea
or
je
cmpl
or
push
inc
ret
dec
cmp
out
sbb
pop
sbb
mov
pop
add
sbb
sbb
pop
push
insb
cmp
sub
lods
mov
leave
jge
lahf
ficompl
xchg
arpl
loop
enter
dec
std
lfs
rcrb
outsl
mov
jmp
inc
fisttpl
jecxz
add
cmp
stc
jmp
mov
cmp
mov
sbb
add
in
hlt
shlb
adc
mov
cmp
push
or
ret
jge
inc
add
adc
mov
jb
dec
shl
std
aam
and
pop
jge
insb
inc
mov
inc
sti
and
popa
sbb
sbb
xchg
jno
mov
arpl
jle
mov
daa
pop
push
mov
mov
lret
enter
out
cmc
mov
orb
inc
push
movl
jecxz
shll
inc
push
fadds
inc
and
mov
adc
pop
pop
pop
lds
sahf
shrl
xor
testl
push
dec
inc
mov
xlat
sbb
dec
sub
ja
cwtl
mov
ficompl
mov
outsb
dec
in
sub
push
mov
sahf
cs
sahf
push
sti
testb
jg
add
mov
cmpsb
es
jp
push
push
scas
lahf
xchg
push
test
arpl
xchg
xchg
lods
mov
mov
stos
dec
orl
mov
mov
inc
ja
or
inc
cmc
enter
cmpsb
imul
imul
xchg
cmp
hlt
jb
adc
cwtl
dec
fwait
mov
add
sbb
ljmp
fisttpll
sti
inc
inc
xlat
ja
dec
jae
scas
inc
lret
jmp
js
jbe
xchg
inc
cmp
cltd
xorps
daa
das
arpl
jno
lret
inc
out
mov
inc
xor
push
ret
inc
dec
les
mov
inc
pop
sahf
lock
mov
cli
inc
pop
mov
pop
addr16
xchg
inc
adc
mov
pop
fs
or
sub
hlt
aas
testb
cmp
out
xlat
push
push
mov
aad
test
clc
shlb
push
out
in
scas
mov
dec
std
add
mov
add
cmp
pop
and
clc
cli
or
pop
or
cmpsl
popa
int
and
mov
mov
mov
pop
and
pop
test
rolw
cmp
pop
mov
inc
and
jecxz
push
aaa
cmp
pop
test
js
ficoml
aaa
xor
frstor
lds
sti
mov
test
lea
add
arpl
flds
mov
mov
orl
xchg
sub
sub
psubsb
push
mov
cmp
mov
adc
fwait
add
movsb
ljmp
in
push
pusha
out
daa
jl
mov
jge
fisttpll
jecxz
jo
mov
jnp
mull
cltd
inc
mov
imul
pop
icebp
repnz
mov
test
mov
mov
popa
sub
xor
icebp
inc
out
rorb
adc
test
cwtl
rorb
cmp
sub
jge
stos
sub
mov
sbb
xor
pop
ret
mov
fistpll
inc
push
out
mov
shll
iret
das
call
mov
add
outsb
aam
xchg
adc
mov
shlb
stos
out
icebp
jge
pop
sahf
repnz
fisttpll
mov
jecxz
notl
push
out
mov
mov
xor
insl
icebp
incl
cmp
mov
fdivrl
mov
add
or
mov
jns
fmuls
pop
les
pop
lods
or
lock
pop
aad
pop
jne
xchg
cmp
insb
sub
cs
out
movsb
xor
iret
stc
aad
movsl
es
fistps
daa
scas
jg
or
jb
int
adc
push
add
mov
push
cltd
jl
push
mov
dec
lahf
call
add
fbstp
and
je
loop
mov
pop
rcr
pop
iret
xchg
and
rcll
xchg
pop
popf
push
jle
js
imul
push
insl
xlat
lods
fdivrp
xchg
addr16
and
nop
dec
sub
cli
sub
inc
xchg
or
add
inc
scas
mov
xor
es
add
dec
lret
xchg
ret
add
hlt
add
ds
mov
jb
test
je
bound
test
loop
mov
fld
jae,pn
fwait
pop
push
scas
fucomip
mov
sub
inc
inc
pmaxub
xor
cwtl
test
or
pop
inc
es
outsl
int3
insb
cli
push
xor
lods
push
js
clc
mov
mov
xchg
rolb
cmp
movsl
cmc
jb
mov
dec
ja
mov
mov
dec
ljmp
and
pop
iret
cld
push
cmp
pop
mov
aaa
loopne
lds
cmpsl
pop
adc
jb
xor
out
repz
lea
xor
pop
xchg
jno
mov
pop
repz
sub
in
and
or
ror
in
push
insb
std
sub
insl
insl
xor
and
mov
adc
and
sbb
pop
icebp
cmp
xchg
je
jmp
or
jge
test
cmp
test
insl
push
cs
xchg
xchg
sub
pusha
aas
scas
movsb
add
inc
jae
add
dec
cmp
and
lcall
mov
dec
outsb
or
jne
sbb
iret
fnstsw
jp
les
jecxz
push
push
outsl
dec
stos
jmp
fisttps
mov
stc
cmpl
mov
xchg
mov
scas
fwait
stos
repz
ret
jge
sub
fucomi
sbb
sub
lret
fdiv
xor
adc
mov
lret
inc
adc
rcl
rorl
lahf
xor
mov
push
pop
frstor
scas
and
pop
or
sbb
sub
cmc
push
jae
cmp
aas
xor
or
dec
out
scas
repz
sub
or
fidivl
pop
dec
add
icebp
sub
test
test
in
and
add
loopne
test
sti
add
sbb
xchg
lret
test
jge,pt
pop
push
push
rcrl
rorl
cmp
dec
xchg
cmp
outsl
lar
sbb
push
dec
jp
sub
test
sbb
insl
shl
cld
jp
in
mov
cmp
xchg
xchg
pop
pop
mov
sbb
movsb
aad
mov
hlt
inc
insb
fs
add
nop
pop
sbbb
pushf
fwait
mov
sbb
jo
mov
xchg
or
out
int3
mov
mov
mov
xor
imul
xchg
mov
mov
or
pop
mov
out
mov
loope
lods
ret
adc
jmp
sbb
shlb
push
xchg
mov
mov
sbb
mov
add
scas
subl
mov
loope
mov
inc
xor
rorl
fs
mov
dec
fwait
fwait
repz
jmp
xchg
out
push
arpl
stos
mov
movsl
lcall
pusha
je
mov
add
adcl
ds
cmp
cltd
adc
rorb
ret
adc
aam
in
pusha
dec
pop
jne
movsb
and
andl
jne
sbb
andl
jb
lret
xchg
mov
incl
or
hlt
jl
inc
xor
testl
cmp
imul
fdivrl
adcl
push
std
push
and
jge
xchg
push
add
out
stos
push
or
into
movsl
sbb
mov
push
push
push
mull
jmp
sbb
stos
lahf
out
sti
dec
xor
pop
jbe
mov
inc
test
sbb
push
and
adc
roll
push
mov
mov
jle
fcomp
shlb
adc
movsl
andl
add
les
test
pop
and
iret
lods
or
inc
test
add
jmp
mov
or
jne
ds
mov
or
cmp
push
bound
in
jle
mov
iret
mov
mov
ret
arpl
xchg
std
mov
cs
push
sub
movsl
and
jae
mov
push
push
ftst
stos
push
int3
xchg
jns
leave
adc
xchg
and
cmp
adc
dec
add
andb
out
mov
fadds
rcll
lds
and
iret
push
xchg
gs
xchg
push
inc
jmp
and
pop
sbb
mov
scas
lcall
push
pop
std
push
std
stos
pop
and
test
or
or
or
inc
xor
shll
dec
jnp
in
jbe
or
push
repnz
xor
mov
lcall
mov
sbb
aad
ja
inc
and
mov
aas
push
imul
mul
das
lods
movsb
or
pop
stos
add
stc
loopne
andb
lea
dec
adc
arpl
loopne
loopne
cmp
aas
mov
push
jnp
or
fcomi
mov
pusha
jge
mov
iret
pop
ret
pop
adc
std
mov
mov
mov
dec
cmp
and
pop
mov
fcompl
jp
cmp
negb
sub
jle
cld
aaa
enter
jge
std
and
mov
out
lcall
test
and
adcb
fs
adc
subb
and
lret
sub
jge
test
mov
adc
imul
cmp
movsl
mov
dec
movsb
sub
or
pop
mov
push
data16
in
out
lahf
lock
mov
cmp
movsl
outsb
xchg
sbb
stc
pusha
mov
push
mov
push
sarl
out
xor
and
xchg
sarb
sub
pop
mov
lahf
sub
fcmovnu
mov
mov
lock
icebp
sub
add
repnz
scas
fstpl
fisttps
cwtl
jnp
mov
pushf
sbb
in
push
movsl
lods
movsb
mov
lds
outsl
jle
popa
jnp
sub
dec
inc
lahf
xor
fnstsw
int3
cli
jb
cmp
cmp
jnp
jecxz
lret
in
mov
pop
stc
xor
fldenv
jnp
mov
int3
arpl
dec
and
or
or
pop
inc
sub
adc
mov
stc
test
es
jnp
add
insl
jo
mov
into
cli
pop
outsl
xchg
jno
out
orb
push
and
ficoms
imul
lock
ret
jne
nop
push
add
cli
mov
out
and
fistps
and
pop
ja
loopne
pop
pop
ret
mov
push
add
movsl
mov
cld
xchg
fdivrp
fcomp
cmpsb
icebp
sti
jmp
and
movsb
adc
mov
push
jge
xlat
movsl
aaa
pop
es
mov
inc
fimuls
leave
lods
xchg
inc
fwait
pop
dec
ja
insl
mov
xchg
cmp
mov
pusha
andb
mov
fcoms
icebp
loope
test
jne
xchg
loop
dec
or
enter
sbb
mov
fwait
repnz
mov
leave
pop
jno
daa
data16
and
inc
imulb
loopne
enter
sub
rcll
fcmovne
or
inc
mov
mov
add
cmp
mov
jg
xor
cmpsb
xlat
jp
mov
dec
xor
repnz
test
mov
mov
pop
lahf
push
jmp
sbb
push
testl
cli
das
pop
aam
push
icebp
mov
mov
add
push
insl
iret
lret
add
inc
imul
add
sub
sahf
int
jnp
and
lcall
jecxz
loopne
fiaddl
mov
pop
sti
sar
and
add
aas
dec
mov
xor
test
jbe
jecxz
mov
addl
or
cmc
shrl
mov
test
hlt
insl
dec
fdivrl
sub
negb
mov
add
inc
cmp
out
daa
les
lds
popf
lds
jg
mov
inc
cmp
lds
sbb
addr16
pop
jb
shrb
stos
cwtl
push
xlat
das
sbb
mov
repz
and
push
xchg
das
je
stc
out
loop
loopne
push
pusha
pop
ficoml
enter
scas
es
adc
into
mov
lds
repnz
jl
xchg
in
pop
ljmp
scas
mov
lods
jb
gs
je
out
lods
push
inc
jo
push
dec
push
jp
out
je
popf
cmp
jb
sub
lret
cmp
test
sbb
scas
or
push
mov
xor
xlat
imul
dec
andb
enter
jb
add
sbb
cmp
xchg
and
lods
xchg
shll
pusha
jmp
dec
adc
dec
dec
jp
mov
jmp
sarl
ljmp
adc
adc
push
inc
in
movsl
in
pusha
ja
jecxz
das
std
xchg
sub
movsl
jp
lock
add
cld
in
jnp
jno
decl
add
std
mov
test
and
push
pop
out
push
cmp
loope
in
push
fimull
pop
shl
repnz
xor
jg
addl
jns
or
mov
sbb
notb
mov
push
aaa
test
push
int
insb
cmp
invd
clc
xchg
or
mov
dec
xlat
cmp
pop
into
mov
dec
dec
mov
fcmovb
mov
mov
sbb
scas
call
jbe
ret
push
movsl
lods
or
movsb
leave
popf
sbb
pop
cmp
in
sbb
ret
xchg
enter
int3
insb
sbb
stos
jns
jnp
scas
sbbl
pushf
fisubs
xor
stc
xor
xchg
into
pop
insl
cmp
fisttpl
xor
cmp
repnz
push
xor
xorb
mov
push
pop
push
cmp
sub
xchg
cld
mov
idivb
mov
push
mov
loop
adc
xchg
sub
lods
movsb
and
sbb
loopne
mov
int
mov
jmp
testl
in
pop
push
shll
movb
fisttpll
in
arpl
lods
fisttps
mov
test
scas
outsb
popa
push
add
or
call
pop
and
inc
rcrl
std
cmp
addr16
out
psllq
jle
jnp
notl
or
or
xor
jp
out
ficompl
nop
push
imul
movsl
ss
jne
push
aam
push
arpl
push
xlat
add
sbb
mov
pop
shll
mov
movsb
mov
stc
xchg
mov
xchg
fcmovnb
in
shl
cmp
fwait
das
and
in
inc
icebp
sbb
cmpb
pop
mov
add
test
enter
lret
dec
push
std
gs
mov
gs
dec
mov
xor
std
lcall
sbb
test
add
push
pop
cli
and
fdivrl
call
dec
mov
shl
aaa
sub
aaa
fwait
mov
push
mov
movsl
fcompl
push
dec
inc
cmpsl
mov
dec
add
movsl
sub
push
jge
enter
pushf
test
inc
cmpb
pop
or
clc
xor
pop
jecxz
dec
mov
fidivrs
sbb
inc
fdivrs
movsb
sahf
cmp
mov
mov
mov
jns
pop
pop
lret
mov
ds
pop
mul
inc
fsubp
sub
and
shlb
adc
enter
addr16
stos
daa
pop
aaa
imul
or
mov
jno
and
mov
or
es
jne
jg
ja
arpl
push
aam
cmp
lea
dec
scas
push
push
cmpsl
daa
inc
mov
or
sbbl
jnp
in
or
lds
mov
in
rclb
pop
mov
xchg
jecxz
xchg
fmulp
xchg
icebp
nop
mov
sbb
iret
push
cli
pop
mov
shlb
shll
xor
push
outsb
jne
or
mov
leave
jle
jg
lcall
loope
push
ss
int
or
or
clc
sub
sbb
sahf
xchg
sub
sarb
aaa
jmp
jmp
mov
je
fcomps
and
sbb
mov
xchg
les
dec
dec
mov
ror
mov
scas
test
add
sarb
inc
push
jp
xchg
lahf
inc
cmp
xor
loop
mov
outsb
in
sub
fucom
jbe
jnp
xor
rorb
cmpb
sub
loopne
fsubp
add
lret
sub
adcl
mov
pop
inc
pop
mov
mov
loop
and
xor
scas
in
inc
inc
ffreep
gs
ljmp
and
inc
inc
adc
in
lods
je
pop
or
jmp
xchg
divl
lret
std
stos
fadds
cmpb
lds
pop
dec
or
jae
xchg
jmp
add
nop
or
outsl
xor
inc
xchg
lcall
enter
ds
aas
mov
cmp
inc
jmp
fdivrl
aaa
data16
xor
add
sub
insb
ret
push
ljmp
test
jg
enter
mov
orb
lea
push
mov
pop
pop
adc
movsl
mov
ret
pop
push
adc
ret
and
jns
repnz
inc
sub
xchg
inc
pop
jmp
xor
roll
mov
fldt
jl
cmp
subl
jmp
je
testb
lret
mov
and
dec
les
out
test
ror
xor
xchg
or
pop
xor
and
dec
inc
sti
xchg
xor
jns
dec
ljmp
inc
bound
std
scas
loop
push
adc
inc
cmp
xor
mov
bound
sub
dec
sub
outsl
addr16
stos
ret
addr16
mov
aam
or
dec
adc
aam
push
sub
lcall
sub
enter
xchg
push
flds
adc
adc
cmp
lock
in
call
popf
cmp
or
imul
pop
aas
daa
push
push
mov
shrl
sbb
pop
inc
ret
lret
mulb
call
nop
out
adc
aas
jp
sbb
cld
imul
sub
daa
repnz
daa
mov
adc
pop
mov
pushf
dec
mov
sbbb
aam
call
and
push
rcll
pop
push
sub
mov
les
and
shl
fdivrs
xchg
push
jne
in
test
ja
xchg
cmp
jbe
lods
fistpl
sub
jo
mov
test
ucomiss
push
sbb
inc
icebp
pop
dec
rcr
push
push
sub
push
push
movsb
inc
into
loope
and
sub
jg
test
xor
add
cli
fldenv
pop
repz
ficoms
mov
push
pop
mov
loop
imul
pop
dec
icebp
inc
sub
cmpsb
adc
addr16
add
aad
xlat
sbb
stc
rclb
imul
mov
xor
pop
addl
push
pop
push
bound
dec
cmpsb
out
hlt
jl
sub
push
mov
sub
push
das
jge
rdtscp
xchg
add
js
add
or
cmc
addr16
in
push
sar
js
movsl
push
mov
icebp
aas
jne
jnp
mov
lds
addr16
insl
mov
loope
xchg
imul
pop
das
rcr
fs
sub
fistl
pop
cld
jge
sbb
dec
add
inc
loopne
sar
xor
push
xor
adc
sub
dec
imul
fistl
push
inc
imul
mov
fsub
adc
lds
push
sub
int3
push
dec
jmp
pop
lods
push
fcoml
dec
js
outsl
pushf
out
mov
adc
pusha
pushf
cwtl
icebp
jmp
adc
mov
pop
pop
mov
xor
adc
in
xor
dec
and
sub
lea
aad
push
repz
xor
iret
fcompl
das
cmpsb
jecxz
loopne
gs
dec
push
xor
inc
int3
lds
or
sub
xchg
cmp
and
sbb
mov
dec
iret
pop
cmc
xchg
push
inc
fdivs
mov
and
pop
mov
adc
dec
xchg
mov
push
or
mov
aad
jmp
xor
call
out
sbbl
jecxz
in
js
int
adc
out
aad
and
and
dec
and
ret
fadd
xchg
mov
jmp
pop
dec
pop
push
xor
jmp
xchg
cmc
fdivs
hlt
insb
pop
int3
inc
add
mov
scas
cmp
sti
cmp
cmpsb
mov
idivl
repnz
bswap
sub
mov
aam
add
jns
fs
mov
adc
jp
pop
test
sub
sub
dec
mov
out
scas
js
sub
movl
pop
ss
sbbb
push
pop
xchg
dec
in
cli
test
push
adc
xchg
mov
add
jnp
push
pop
mov
sbb
mov
bound
dec
daa
movsl
push
cmpsb
popf
test
mov
je
jnp
xchg
mov
shrb
sbb
fistps
aad
sub
push
outsb
push
or
adc
ss
call
scas
sbb
cmp
and
subl
fsubs
ret
fisubs
call
and
xchg
pop
iret
icebp
fwait
sbb
fnsave
xor
and
lret
jbe
fistpl
jno
and
shrb
aas
outsb
push
push
out
rorb
mov
push
movsb
mov
cmp
inc
mov
jg
mov
mov
pop
int
fistps
xchg
lret
loopne
lds
xor
out
stos
adc
mov
divl
cmp
aam
mov
in
mov
pop
paddsw
mov
adc
dec
dec
xchg
aaa
sub
orb
sub
ja
loop
mov
inc
icebp
lret
pop
mov
sahf
push
imul
push
dec
inc
mov
or
in
dec
push
and
enter
stos
fimull
sub
mov
mov
and
dec
mov
fwait
mov
mov
lcall
jg
pop
or
scas
je
fcoms
aaa
test
push
adc
fs
stos
aad
sahf
inc
xchg
andb
jbe
packsswb
sub
ljmp
cli
les
or
pop
aad
aas
rcrl
mov
data16
add
and
test
jbe
jne
movb
inc
sbb
inc
mov
roll
nop
lods
mov
sets
pop
popf
subb
add
fcoml
insl
ljmp
cmp
sbb
pop
ljmp
mov
cmpsb
pop
add
les
test
pop
out
js
add
mov
adc
mov
inc
ficoms
stos
stos
xlat
loop
xor
jecxz
pop
cmpsl
sbb
push
mov
adc
shrl
sbb
or
sub
mov
clc
hlt
dec
adc
ljmp
push
push
sbb
sbb
dec
scas
dec
cmp
pop
mov
ret
fxch
push
adc
les
call
cmpsl
xlat
mov
in
dec
dec
aas
jb
lea
stos
add
repz
lret
into
xchg
jg
and
mov
sub
jae
stos
push
jg
adc
sbb
clc
inc
jmp
loope
pop
fcmovbe
orl
xlat
xor
xor
fsubrp
pop
arpl
fimuls
stc
xchg
jo
adc
aad
sub
jmp
imul
pop
xchg
xor
jp
mov
push
xor
adc
movsl
dec
and
push
pop
inc
fistl
lock
int
push
scas
in
je
jnp
dec
icebp
mov
gs
aam
cmp
movsl
call
push
idivb
push
adc
add
lea
dec
mov
sub
jecxz
xor
push
nop
lds
scas
xor
mov
fadds
test
ss
out
lahf
out
and
sbb
jno
pop
sub
std
or
sub
aaa
fnstsw
cmc
dec
fs
scas
dec
xchg
and
fwait
mov
inc
push
sti
in
in
adc
push
add
or
stos
icebp
mov
push
not
push
xchg
push
xor
scas
repz
cmp
or
push
sub
xlat
jbe
lods
cmpsb
xlat
dec
dec
inc
nop
daa
dec
jp
jmp
add
shlb
inc
popa
out
int3
adc
pop
dec
mov
and
test
bts
mov
sub
testl
icebp
inc
or
lea
es
and
inc
jnp
sub
subb
pusha
out
cwtl
sbb
das
subl
je
cmp
rorb
lods
inc
and
in
fdivrs
inc
add
pop
js
mov
cmp
xor
popf
or
dec
or
jle
ret
mov
jmp
adc
inc
pop
sbbl
xor
pop
shl
mov
mov
movsl
cmc
mov
loope
loope
test
jb
push
lahf
mov
notl
add
rorl
dec
std
in
xchg
jmp
xor
xor
ja
pop
sbb
mov
inc
cs
dec
popf
pop
mov
imul
mov
imul
cmp
out
lock
cmp
push
or
mov
pop
mov
rep
or
lds
and
inc
dec
in
xor
or
mov
pop
cmpsl
dec
scas
aaa
lahf
bound
inc
rep
mov
aam
mov
aaa
fbld
mov
daa
or
in
rcrl
push
jnp
mov
sar
or
mov
xor
ds
cmpsl
loop
int3
dec
dec
orl
packsswb
cmpsb
jmp
cld
xchg
mov
cwtl
lret
sbb
lret
outsl
add
inc
iret
pushf
cmpsl
mov
mov
add
cmc
stc
nop
pop
mov
out
nop
xor
sahf
loopne
outsb
jno
xor
pop
push
bound
sbb
jl
sbb
cmp
iret
decl
daa
cs
test
jns
inc
fs
dec
int
std
inc
jno
dec
adc
push
dec
or
sub
movsb
xor
dec
test
or
add
into
pusha
dec
mov
scas
lahf
and
push
jo
push
mulb
push
mov
mov
xor
popf
pop
jnp
xchg
push
dec
push
sub
sbb
ja
into
mov
jl
aad
xchg
mov
inc
mov
inc
xor
pop
xor
xor
loope
lret
lock
je
or
xlat
ret
int3
inc
push
xor
sbb
dec
inc
mov
cli
sub
sbb
mov
mov
daa
sub
stc
js
out
inc
push
push
into
jecxz
leave
xor
test
xchg
iret
iret
pop
cmp
stos
and
mov
cmp
sbb
shll
inc
mov
jne
ss
daa
das
lds
push
xchg
sbb
jb
inc
dec
icebp
repnz
fidivrl
stos
or
mov
popa
xchg
lret
call
sbb
xchg
fbstp
jmp
fistl
mov
adc
shll
push
cmpsb
fadds
jp
jnp
and
sub
jbe
xor
nop
js
inc
push
and
lods
inc
mov
fwait
pop
cmp
hlt
push
or
jecxz
shlb
incl
test
or
lock
icebp
cmpsb
out
loope
lret
and
aas
mov
dec
cmp
out
loope
or
out
je
push
mov
lods
pop
addr16
mov
cmp
loop
inc
jge
lods
cmp
hlt
xchg
push
sarl
mov
lret
or
jbe
mov
test
lock
dec
inc
xchg
sbb
dec
or
and
das
sbbb
test
jae
adc
cmp
mov
pop
pop
push
lods
push
pop
and
pop
int3
mov
xor
push
int3
imul
sbb
sbb
mov
jbe
lock
sbb
aas
or
jge
push
mov
shlb
movsb
xchg
and
loop
mov
movsl
rcl
mov
xchg
and
aam
adc
hlt
into
adc
rolb
je
mov
cmpsl
daa
insb
sbb
sub
sarb
mov
ljmp
lods
imul
inc
je
fnstcw
xor
dec
add
sahf
bound
mov
ficoms
fs
lods
push
outsb
push
push
pop
pop
fdivl
mov
jno
out
movsl
call
seta
mov
and
stc
mov
jnp
or
pusha
mov
loop
into
mov
in
lcall
add
mov
adc
adc
jp
ret
stos
or
push
js
pmulhw
mov
fnstsw
xor
test
insw
sub
lock
pop
cmpsl
arpl
sti
loope
inc
leave
dec
push
fsts
or
or
add
xor
lock
pop
mov
sbb
aam
push
mov
and
mov
sub
push
mov
sbb
subb
mov
popa
cvtps2pi
mov
or
mov
fwait
repnz
jne
xchg
inc
mov
sti
test
mov
sbb
jge
rol
test
lods
arpl
lods
adc
cltd
lock
insb
enter
ja
adc
add
mov
ljmp
repz
sbb
and
daa
push
sbb
in
add
adc
adc
inc
lods
fwait
mov
mov
loop
push
mov
adc
dec
repz
dec
mov
test
notl
mov
ss
or
fisubrs
inc
fsubl
andb
mov
fdivr
xor
int
add
jmp
mov
daa
mov
ret
jg
sbbl
out
dec
ficomps
sub
add
cmp
ljmp
imul
js
sub
pop
out
jmp
test
jae
jae
and
push
jb
add
outsl
movsl
lret
rcll
push
in
les
test
add
mov
jmp
sub
xchg
imul
scas
cmp
sub
adc
icebp
or
and
jnp
dec
ret
hlt
lods
xchg
int
shr
dec
stos
imul
test
mov
and
inc
jl
xor
mov
sbb
int3
xchg
dec
xchg
jg
jge
ficoms
in
jecxz
clc
mov
inc
jmp
jecxz
lcall
mov
push
jg
push
idivl
test
pop
or
lahf
es
aad
pop
cmp
adc
out
ja
nop
push
popf
sub
int
dec
insl
hlt
lahf
lea
and
mov
aad
int3
fstps
jmp
dec
aas
xchg
inc
mov
std
xchg
imul
aam
out
sti
adc
add
into
sub
dec
mov
sbb
mov
ja
test
iret
mov
mov
jns
jg
loope
cmp
mov
ret
xchg
inc
and
pop
movsb
mov
sub
movsl
je
insl
inc
sahf
outsl
imul
sti
xlat
jp
jo
arpl
out
js
in
jmp
or
cld
push
mov
jae
add
ds
mov
inc
sbb
cs
pop
or
pop
jecxz
jl
lea
dec
outsb
mov
dec
jle
pop
mov
mov
mov
iret
pop
jp
ret
aas
xchg
inc
xadd
rclb
outsl
stos
push
push
mov
mov
jmp
xor
jno
scas
xchg
lahf
dec
pop
hlt
js
push
mov
sub
outsl
data16
cmp
sbb
popa
cmp
movsl
lock
clc
in
adc
loope
add
mov
sahf
repnz
jns
jnp
mov
xor
push
pop
sub
loopne
iret
mov
mov
mov
jle
fdivr
frstor
out
in
and
std
cmp
or
sub
lds
jl
sbb
aam
test
mov
js
cld
jle
adc
insb
aaa
cmp
ja
insl
xor
xlat
addr16
dec
jp
cmp
mov
jae
insl
dec
dec
cli
leave
fs
test
lahf
in
push
int3
jp
add
enter
insb
jae
nop
fadd
mov
mov
sub
or
lcall
push
scas
jb,pt
lret
xlat
jns
sub
mov
add
inc
icebp
jp
mov
pop
sub
pop
hlt
xor
mov
pop
int3
mov
adc
cmp
scas
add
cmp
mov
subl
xor
xor
pop
push
ret
sbbb
xchg
clc
mov
dec
and
cmpl
dec
inc
ljmp
outsb
adc
sub
lret
xlat
add
lock
sbb
xor
jno
nop
daa
call
pop
or
push
pop
scas
mov
ret
mov
in
pop
cmc
test
mov
inc
or
pop
xchg
sbb
sahf
mull
fcoml
scas
pop
dec
xor
subl
mov
ljmp
je
fwait
mov
adc
ja
pop
insl
or
arpl
pushw
insb
sarb
sub
fdivrs
out
movsb
pop
in
pop
cwtl
fcoms
lods
jns
cmpb
cmp
adc
and
int3
out
fwait
and
iret
cs
jecxz
pop
cmpsb
enter
cltd
mov
enter
push
inc
xchg
mov
jnp
mov
mov
push
lods
repnz
fwait
andl
sub
stos
jne
ret
pop
inc
and
mov
mov
std
cli
mov
adc
in
add
mov
out
rol
or
jae
dec
inc
add
fmuls
sbb
loope
mov
loopne
popa
lods
loope
xor
pop
in
outsb
call
add
cld
jmp
adcl
aas
cmp
addr16
inc
out
sub
fucomp
dec
stos
or
cs
inc
sti
enter
push
mov
pop
rclb
mov
xchg
mov
fcoml
add
insl
push
xlat
xor
jns
xor
xchg
pop
jg
jmp
xchg
popa
lock
jno
and
sub
mov
mov
sub
aad
jp
fidivrl
jno
push
les
mov
leave
and
cmp
leave
popl
mov
sahf
cmp
test
test
mov
arpl
jo
inc
scas
imul
mov
add
sbb
or
in
and
push
push
in
dec
push
jmpw
fidivl
mov
ss
xor
mov
mov
aas
mov
mov
and
adc
in
xor
fs
add
cmp
sub
adc
popf
pop
xor
ljmp
mov
xchg
ret
mov
xor
sbb
cmp
insb
cmpsb
pop
enter
leave
int
cli
and
jne
sti
adc
daa
cmp
pop
es
je
repnz
adc
fwait
sub
int3
add
mov
jb
or
int
mov
mov
sbb
adc
cmp
leave
pop
imul
xchg
xor
fs
mov
imul
shrb
and
jnp
or
push
leave
loop
je
cmp
cmp
loop
adc
jmp
out
mov
jmp
mov
in
test
mov
loop
or
jmp
push
lea
fdiv
scas
jl
ja
ss
cmp
mov
jnp
shl
mov
sti
push
mov
adc
inc
mov
cmpsl
inc
lods
dec
test
arpl
jnp
pop
into
or
lret
or
stos
dec
mov
pop
xor
xchg
cld
pop
aad
mov
test
sub
cmp
ja
mov
push
fnstenv
sbb
or
or
fs
pop
bound
jg
xchg
cmpb
in
push
stos
es
mov
es
push
bound
cli
popa
cwtl
cmpsb
rcll
scas
out
mov
xchg
roll
cmpsl
in
and
cli
ss
fs
imul
inc
add
call
arpl
cli
addr16
inc
mov
bound
mov
outsb
pop
lahf
daa
pop
jno
sub
daa
jo
repz
imul
clc
mov
cmc
rcr
xchg
in
xchg
movsb
lret
js
arpl
jae
jp
add
push
ds
xor
into
inc
movb
ljmp
cmpsl
sbb
mov
daa
std
das
sahf
loope
ret
rorb
pushf
add
mov
xchg
xchg
fstl
out
xor
cmp
xorl
aad
pusha
pop
mov
push
mov
movsb
push
and
or
xchg
and
mov
dec
pop
and
in
rclb
mov
sahf
or
repnz
mov
aaa
sub
sbb
mov
out
sub
jmp
add
xchg
jo
add
dec
data16
sub
jg
leave
cli
lods
std
mov
out
or
paddusb
arpl
mov
xor
test
lret
mov
dec
mov
mov
pop
mov
xor
clc
shrl
mov
fsubrl
pop
rcrl
xchg
pop
outsl
add
mov
cltd
ficompl
filds
mov
roll
sub
pop
mov
outsb
shlb
bsf
sub
jecxz
mov
sub
cs
xchg
data16
sahf
lcall
aad
shll
loope
inc
adc
xchg
push
imul
xor
das
push
insb
pop
dec
in
dec
stos
xchg
push
popf
lahf
pop
mov
sbb
cmp
xor
cwtl
popa
push
addr16
push
add
mov
push
test
std
push
or
mov
pop
popf
fistpl
arpl
arpl
sub
adc
xor
mov
jae
cmpl
xor
je
loope
into
adc
jge
mov
and
and
out
insl
mov
call
insb
xor
jg
inc
enter
xrelease
outsb
xchg
bound
lods
pop
push
add
cmp
xchg
and
cs
outsb
sbb
icebp
vhsubps
test
push
movb
fld
mov
xor
jmp
pop
das
aas
mov
lock
pop
sbb
sbb
or
cmp
mov
or
bound
dec
loope
lea
arpl
add
lds
aad
xor
scas
xchg
xchg
jo
movsb
adc
fisubl
xchg
lea
mov
addps
lea
data16
sub
and
jae
popa
sub
sub
rcl
xchg
mov
jbe
mov
out
js
and
xorb
fcoml
add
adc
add
add
outsb
movsl
xchg
aaa
dec
pop
data16
pop
loop
inc
mov
aad
fists
xor
orb
mov
and
or
repnz
inc
pushf
sub
mov
popf
out
mov
aad
add
mov
stc
cmp
mov
mov
arpl
ret
inc
jb
jns
das
lcall
sub
shlb
ret
js
aas
xchg
test
sub
shrl
push
lods
adc
test
ja
fisubrs
xchg
inc
pop
insb
pop
fsubrl
sbb
pop
xchg
cmpl
andb
or
fdivl
and
cmp
flds
out
xchg
mov
sti
sub
movsl
loop
cmc
sahf
aas
sbb
adc
ret
inc
stos
sbb
sbb
loope
aaa
xchg
add
sub
jge
push
or
call
xchg
into
nop
dec
cmpsb
fucom
inc
cmp
jmp
and
lods
xlat
cmp
adcb
test
lret
movsl
insl
mov
and
push
ret
cmc
pop
icebp
sarl
xchg
mov
cmpsb
cmp
movsl
fmulp
mov
sti
xchg
xor
mov
in
jo
fldl
mov
xor
cmp
sbb
jo
push
ret
inc
add
or
xor
jl
fs
sbb
pop
inc
repz
ss
std
xor
aam
push
xchg
or
lahf
xchg
push
in
dec
jbe
jle
dec
dec
loopne
enter
je
daa
repz
lock
xchg
scas
push
movsl
add
ja
cmc
add
das
cs
les
mov
dec
test
out
pop
jno
mov
sub
push
push
and
daa
xor
stos
bound
aam
divb
fdivrs
lret
cld
cmpsb
roll
lods
dec
lea
ds
jl
int
shll
movsl
adc
bnd
and
push
push
dec
call
aaa
mov
cld
and
cmc
clc
ss
scas
aam
ss
inc
lcall
push
cmpsb
pop
test
inc
ss
sbb
stos
rcrb
jns
cmp
pop
push
lods
cltd
jne
adc
es
sarl
das
test
call
sbb
and
dec
sbb
ljmp
mov
mov
decb
push
dec
dec
out
sbb
in
mov
fldenv
push
dec
cmp
jno
jae
out
into
stc
and
push
sbb
xor
adc
pop
sbb
jno
mov
cmpsl
jns
arpl
xchg
or
aad
and
rclb
push
pop
jns
cs
lcall
leave
jno
jb
js
fldt
cs
inc
mov
jb
addl
or
hlt
pop
xor
rcrb
mov
dec
aas
xchg
adc
fs
dec
xor
jno
xor
cmpsl
xor
pushf
fnstsw
ficoms
outsb
xchg
push
in
xor
sbb
dec
pop
cmpsl
test
xchg
das
push
mov
cmp
cmp
cld
inc
aas
jbe
or
popa
inc
hlt
fwait
clc
jnp
daa
pop
inc
push
cmp
jne
in
push
test
or
dec
sbb
adc
dec
mov
adc
add
gs
int3
fcomi
xchg
sub
iret
cmc
push
or
test
sahf
fwait
pusha
outsl
ficoml
aas
pop
push
pop
sub
stos
inc
xchg
in
mov
pushf
and
lret
int
mov
je
fucompp
jp
jge
dec
pusha
mov
test
xor
jg
je
and
fucompp
and
scas
jno
call
xor
fld
jns
roll
test
cli
in
cmpsl
in
dec
jns
popf
arpl
cmp
xor
jb
lods
cmp
imul
rorl
fisttps
movb
enter
cmp
loop
adc
fsts
lea
scas
adc
mov
add
into
cwtl
jmp
pop
clc
int3
and
pushf
clc
loop
and
stc
popf
ds
bound
fwait
mov
and
lea
xchg
test
lock
pop
ret
aam
nop
outsb
xor
in
xor
div
mov
loope
mov
sahf
adc
out
rcll
push
aaa
push
les
or
inc
lock
imul
jne
xchg
inc
shlb
gs
rcrl
push
pop
outsb
push
inc
push
jecxz
lea
rcr
inc
jecxz
addr16
hlt
in
movsl
sahf
lods
xchg
and
stos
mov
int
popf
ljmp
cmpsb
ds
xor
dec
add
call
cmp
in
outsl
nop
jmp
out
cs
dec
xchg
mov
and
les
and
push
and
cs
lods
testb
scas
lcall
or
xchg
filds
icebp
fidivl
bound
int3
das
push
cmpsb
popa
fadds
icebp
movsl
sahf
xchg
cltd
out
dec
daa
mov
lret
and
add
imul
movsl
outsb
into
add
repz
cmpsl
int3
cmovnp
jg
lds
and
fidivrs
lret
add
and
popf
movsb
inc
mov
orl
push
shll
test
int
cmpl
adc
call
mov
cmpsb
rorl
add
inc
mov
sub
adc
in
pusha
scas
cmp
mov
test
add
ret
inc
pop
in
sti
aam
lds
sbb
aaa
dec
or
test
fcomps
fs
mov
test
addr16
mov
xchg
add
mov
mov
or
nop
dec
mov
dec
movl
int3
add
fs
xchg
jbe
sbb
in
shl
into
adc
ret
mov
shrl
sub
repz
cmp
jo
repnz
clc
lock
push
pop
cmp
out
insb
test
mov
nop
fistps
lods
add
sbb
and
imul
xlat
sub
ret
ss
lds
loope
mov
test
adc
push
xchg
fucomi
xlat
test
adc
mov
mov
aas
sti
sbb
xchg
xor
mov
je
js
inc
filds
dec
shl
mov
ljmp
daa
nop
xchg
lea
out
ficoml
fistl
sub
aaa
lcall
jne
jmp
mov
movsl
cwtl
mov
adc
lret
lods
imul
jo
notl
and
sbb
push
and
sbb
out
jb
ret
int3
mov
mov
ret
loope
pop
xor
inc
push
mov
push
test
imul
out
insb
adc
fidivrl
aas
mov
inc
xor
mov
es
ljmp
icebp
sti
inc
addl
add
pop
frstor
lea
movsl
sub
cmp
cmp
aam
and
lret
mov
cmpsb
jnp
je
mov
sub
jp
mov
lea
popf
gs
daa
cmp
outsl
std
adc
and
cmp
popf
les
and
icebp
loopne
movswl
sbb
inc
lret
pushf
popl
imul
aam
mov
jae
dec
dec
dec
aas
lret
in
in
aas
jbe
mov
ja
push
ds
cmp
mov
out
test
lock
sbb
and
scas
leave
pop
jecxz
and
lahf
orl
xchg
sbb
xlat
stc
movsb
jno
jae
jns
mov
repz
fnstcw
movsl
ret
inc
lcall
add
je
or
daa
or
or
mov
call
je
ds
add
sbb
xchg
out
enter
push
aam
mov
je
and
and
cmp
add
jg
adc
cmp
repz
imul
inc
arpl
pop
pop
pushf
adc
out
in
mov
pop
jge
jp
into
out
std
pop
dec
jl
xor
das
jmp
xchg
pop
push
mov
dec
pop
inc
mov
popa
icebp
ds
out
xchg
sbb
addb
insl
sbb
ds
cltd
les
jae
lock
out
add
int3
add
mov
incb
lret
sbb
test
popl
lock
loopne
lret
out
inc
testl
mov
or
jno
out
insb
cwtl
xchg
test
pop
clc
in
xor
lea
cmp
fdivs
dec
jp
jg
mov
pop
and
mov
push
pusha
fmulp
pusha
fwait
imul
movsb
xchg
fmulp
fs
inc
scas
inc
in
jbe
xchg
cmp
leave
or
dec
inc
out
ja
aad
mov
xor
sub
push
xchg
xchg
lret
adc
push
cmp
clc
shll
les
leave
sub
in
sbb
or
xchg
cmp
push
inc
vpcomb
xchg
push
or
and
xchg
inc
or
adc
imul
icebp
scas
mov
int
jo
cld
jp
ja
dec
cltd
mov
fs
xchg
cltd
push
sbb
mov
mov
mov
scas
mov
insb
adc
lock
xchg
adc
dec
cwtl
push
pop
mov
jle
into
and
aas
mov
ss
dec
addr16
idivl
adc
icebp
aad
mov
cltd
cmp
and
xlat
pop
jg
xchg
mov
test
inc
hlt
mov
cmp
sub
jmp
adcb
adc
xor
mov
push
pop
dec
inc
jp
cmp
mov
aas
movb
fnstsw
out
xchg
icebp
mov
sub
imul
andb
inc
cli
push
movsl
js
sub
adc
add
lret
or
cmp
scas
pop
outsl
xorb
mov
push
in
jo
xchg
xchg
xor
aas
cmp
std
mov
add
roll
adc
mov
ja
xchg
jecxz
out
mov
scas
repz
cli
in
inc
mov
push
push
add
push
adc
test
inc
cmp
mov
mov
adc
fbld
adc
dec
repz
cmp
xor
loope
push
aam
dec
sti
jl
xor
xor
mov
mull
cltd
scas
lea
jb
int
or
test
sub
rcr
cmp
mov
stos
mov
sub
lcall
je
insb
imul
push
es
fmull
mov
jmp
xor
push
xchg
dec
js
loope
rcrb
jecxz
mov
sub
mov
dec
cmpsl
pusha
jmp
or
rolb
outsb
pop
inc
add
dec
mov
xor
push
adcb
aaa
divb
das
loopne
bswap
enter
scas
sbb
ficompl
mov
sbb
xor
loop
imul
test
pusha
mov
xor
sbb
xor
sbb
adc
inc
stos
jb
sbb
or
addr16
ds
ss
ret
pop
lock
mov
test
dec
cmp
mov
inc
push
mov
je
or
mov
mov
add
push
sub
push
ficomps
push
int3
inc
sub
stos
cli
xchg
out
shrd
arpl
iret
mov
adc
stos
mov
sub
inc
repnz
in
adcb
or
in
out
notb
push
xor
jg
mov
xchg
xlat
jns
lahf
sbb
ljmp
inc
adc
sub
imul
push
test
sub
loop
push
cs
push
movsb
jno
pop
bound
jle
test
ret
and
hlt
cld
sbb
negb
insl
pushf
cmpsl
shrl
cmc
mov
cmp
mov
aas
pop
pusha
sbb
and
mov
push
push
pop
sbb
mov
add
andl
adc
fmulp
mov
shlb
inc
leave
pop
mov
and
lea
in
subb
and
cmp
xchg
pop
push
sti
iret
push
xchg
xor
lahf
cmp
mov
out
test
je
push
dec
push
adc
or
xor
and
xor
add
aaa
popa
jb
push
arpl
notl
or
jbe
xlat
add
jmp
inc
mov
pop
push
nop
ret
cmp
inc
scas
leave
shll
cs
test
and
call
mov
loop
jne
cmp
inc
mov
mov
mov
jle
push
fcmovnu
sub
movsb
push
adc
pushf
jecxz
sub
add
xor
andnps
ret
outsl
push
lahf
ret
int
push
loopne
mov
jmp
lods
mov
rcll
xchg
fistl
js
out
xchg
push
inc
loope
or
movsb
shlb
jns
push
scas
mov
mov
jns
jl
or
fwait
cli
pop
fdivrs
pusha
fst
fidivrs
in
hlt
fwait
pop
ja
movsb
cwtl
cltd
add
cmp
dec
pop
hlt
and
ret
aas
dec
xchg
jmp
int
push
sub
dec
mov
xor
lds
and
or
mov
ret
rorl
rclb
icebp
addr16
adc
jl
cmp
inc
testl
call
xor
pushw
lods
mov
mov
addb
and
and
cmp
mov
pop
pop
repnz
adc
inc
gs
mov
fs
imul
outsb
pop
fcoml
aad
jp
xchg
imul
or
shll
aam
enter
jnp
mov
and
sub
xchg
pop
mov
outsl
dec
popf
jo
movsb
mov
int
or
inc
push
cmp
aam
aad
jns
stos
lea
push
clc
add
jmp
and
movsl
jmp
cmp
je
dec
adc
xor
js
rclb
mov
cmp
fisttpl
cmp
pop
sub
lock
xorb
and
out
adc
arpl
lods
in
jle
cmp
xchg
sbb
mov
in
jmp
add
push
xor
fxch
fsts
xchg
stos
ja
jmp
and
xchg
clc
adc
lcall
out
push
rcrl
in
cmp
popa
out
cmc
xor
cwtl
adc
daa
mov
andb
loopne
enter
pop
movsl
lds
repz
out
loope
fistpll
mov
mov
mov
cmpsl
jnp
mov
lods
ljmp
pop
test
mov
sbb
leave
pop
insb
fisttpl
xor
jp
sti
aam
mov
push
cltd
rcll
fadds
mov
lods
loop
repz
xchg
int
sti
ja
cmp
adc
dec
repnz
std
stos
mov
push
dec
jno
aam
xor
lret
sbb
es
sti
adc
push
mov
in
outsb
popf
mov
push
lods
test
mov
test
lods
leave
and
sub
sar
negl
fdivl
rcll
dec
pop
mov
aas
stc
mov
sbb
xor
mov
cwtl
mov
push
cmpsb
cmp
pusha
loopne
lds
dec
inc
xor
test
cmp
js
les
and
pop
scas
xor
imul
loopne
pushf
lock
cmp
mov
push
pop
sub
imul
and
push
mov
ror
jb
inc
add
les
xorb
sti
js
sbb
pusha
adc
sbb
sub
jmp
leave
sub
fcomip
push
push
and
leave
andl
shll
or
psubd
xchg
shlb
xor
inc
jne
mov
es
mov
imul
test
ret
dec
sti
xchg
mov
pop
stos
sub
into
test
xlat
ret
mov
dec
push
lret
aaa
inc
dec
divb
enter
cmp
dec
rcrb
sub
add
push
mov
xchg
sbb
mov
ficomps
sarb
shrb
fists
cmpsl
sub
push
ret
lods
mov
dec
shrb
jg
int
jns
jg
inc
mov
aas
ss
pop
std
aas
notl
jle
in
push
rcll
adc
nop
cmp
push
xchg
add
sbbb
sbb
cmpsb
rdmsr
xor
std
or
fdivs
cmp
imul
enter
call
jecxz
shlb
jmp
mov
movsb
or
pop
sbb
or
pop
loope
mov
adc
imulb
out
xor
sub
ret
outsb
lahf
cmp
aad
fwait
pusha
pop
mov
pop
inc
fstpt
cli
ss
xchg
movsl
push
mov
mov
loopne
mov
aad
push
mov
imul
inc
scas
stc
nop
and
mov
outsb
jecxz
xchg
dec
imul
pusha
pop
daa
rcr
mov
xor
and
pop
lahf
inc
lea
jge
sahf
test
lods
pop
mov
or
mov
and
into
jle
std
in
pslld
jecxz
xchg
std
into
push
leave
ds
rorb
push
iret
push
inc
and
adc
inc
pop
aad
mov
jg
lock
movsb
cmpsb
cmpsl
and
xor
lods
ror
push
lds
jp
out
xor
ss
cmp
xchg
jo
cmpsl
rorl
call
dec
and
pop
jb
mov
mov
out
jp
jl
pop
mov
or
xor
jns
jae
ficompl
ss
imul
mov
out
in
jp
cmp
mov
mov
dec
mov
rclb
mov
addr16
cmp
mov
lds
int
mov
and
out
addl
ja
mov
ret
aam
ds
xor
push
lods
pusha
les
jl
test
imull
nop
mov
out
jg
adc
mov
pop
in
pop
dec
add
sbb
push
jge
fwait
aas
test
sub
pop
imul
pop
mov
sub
jae
shrl
lret
clc
pop
cmp
shl
fsubr
cmpsb
sti
jo
in
and
cmp
mov
sub
xor
lea
icebp
test
rcr
out
inc
std
jbe
arpl
orl
or
and
adc
cmp
cmp
mov
jbe
icebp
aad
pop
sbb
stc
dec
call
nop
test
imul
sarl
inc
mov
movsl
jmp
cmp
xchg
aas
jmp
pop
data16
inc
pop
jp
mov
sbb
or
shl
mov
adc
xchg
jl
loop
adc
dec
fsubs
sbb
jmp
andb
scas
mov
shll
push
cmp
adc
rorl
pop
out
xor
cmp
lret
xchg
xchg
sbb
sbb
dec
xchg
xchg
test
idiv
and
inc
in
outsl
add
daa
cmp
mov
and
xchg
pusha
mov
aam
and
cwtl
fbld
notb
ret
xchg
loopne
xchg
and
ds
imul
mov
adc
jno
aas
or
or
fstl
lahf
outsl
les
hlt
push
cs
sub
aaa
jns
gs
or
mov
jne
daa
movsb
xor
cwtl
sbb
in
xor
imul
stc
sub
out
cmp
fldl
xchg
and
and
push
mov
cmp
xchg
xchg
stos
imul
jmp
sub
icebp
loopne
jp
xchg
cmpsb
jmp
and
jle
mov
push
push
out
sbb
xor
mov
sub
adc
inc
add
mov
cmp
test
loopne
cmp
adc
xor
and
pop
in
sti
mov
cmpsl
xchg
inc
js
in
shll
daa
dec
imulb
rolb
and
icebp
iret
fildll
pop
int3
out
jp
ret
gs
or
in
sub
fnstcw
aas
pop
aas
aam
push
subb
out
lahf
xchg
and
add
out
ret
mov
dec
push
pop
bound
mov
jl
lds
add
gs
adc
cmp
pushf
ss
fidivl
lock
xor
mov
add
mov
cmpsl
psrlq
cmc
pop
xchg
or
push
nop
add
push
lock
int3
std
dec
fnsave
jle
cwtl
out
sti
clc
cmp
sbb
outsb
addr16
mov
inc
mov
insb
mov
lods
dec
or
inc
and
mov
ja
fsubrl
adc
frstor
add
into
andb
jae
jo
push
xchg
jno
xchg
xchg
xchg
jno
sub
dec
sti
fdivl
sbb
test
icebp
scas
aaa
es
push
std
sub
out
mov
mov
sar
repz
push
jle
xor
lds
scas
loop
fs
mov
dec
or
jns
pop
xchg
nop
or
aaa
dec
pop
mov
das
mov
jb
sbb
out
sbb
divl
sub
nop
dec
mull
xchg
add
adc
fcomi
cmpsl
mov
push
sarl
cs
mov
outsl
std
mov
lds
aad
test
int
call
call
into
push
jns
hlt
xorl
inc
sbb
sbb
ljmp
xchg
popw
pop
sbb
xchg
dec
mov
push
xor
shl
sbb
sbb
add
mov
dec
and
outsl
or
adc
lea
ljmp
xbegin
add
jno
cltd
and
out
lock
mov
arpl
sbb
movsl
jb
lret
out
cmpsb
sub
sbb
movsl
mov
mov
and
or
mov
popf
cmpsb
mov
jb
sub
stos
mov
outsb
or
pop
and
mov
dec
in
push
dec
in
fwait
xchg
fldt
loop
sbb
lret
outsl
dec
stc
testb
or
mov
pop
scas
adc
push
dec
out
pop
jmp
sub
xor
in
faddl
sub
xor
call
lahf
mov
mov
insb
rolb
cmpxchg
pop
test
test
pop
inc
es
pop
mov
jmp
lret
sbbb
popa
xor
iret
sarl
sub
lahf
insb
mov
mov
sahf
dec
xchg
loop
dec
mov
jl
lock
cwtl
lret
inc
fiaddl
adc
insl
add
push
mov
sub
mov
and
pop
add
xchg
icebp
ret
cmp
xor
mov
mov
fisubrl
mov
and
aam
jg
adc
jl
aam
rclb
sbb
call
pop
jle
or
and
ret
fmul
push
fnsave
sti
fstpt
fcmovu
mov
mov
fldl
movsl
and
lods
aas
lock
hlt
insb
sbb
ret
cmpsl
inc
inc
call
div
xchg
jb
inc
mov
cs
out
jmp
daa
pop
repz
into
and
jmp
jge
push
in
cmp
test
jns
shll
daa
mov
imul
enter
popf
decw
scas
inc
imul
ss
lock
movb
mov
loop
cltd
add
daa
mov
mov
pop
push
push
cmpsb
adc
dec
mov
addr16
dec
shll
pop
shlb
test
sahf
lret
rol
mov
add
stc
mov
daa
shlb
push
xchg
jne
cld
test
sbb
leave
inc
pop
mov
int
nop
cmp
pop
outsl
lods
push
mov
adc
sbb
into
stos
mov
outsb
arpl
pop
pop
push
mov
jns
popa
push
xchg
cltd
mov
test
nop
andb
out
sbbl
xor
xchg
pop
adc
dec
sub
jecxz
mov
test
cmpsb
xchg
jnp
lods
pusha
in
movsb
movsl
inc
repnz
jbe
pop
add
addr16
mov
sub
pop
rcll
cltd
or
jecxz
push
int3
mov
add
lret
lret
and
ja
inc
xchg
push
out
stos
aaa
int3
cltd
bsr
push
xor
sbb
ds
mov
and
cmc
jae
rcr
mov
dec
shlb
movsb
stc
in
mov
dec
add
xchg
pop
pop
arpl
test
xor
fwait
pushf
push
cwtl
lds
lock
jo
dec
pop
pop
pop
jo
jno
arpl
iret
dec
subl
outsl
pop
sar
in
and
in
scas
fsubrs
stos
pop
ds
mov
xchg
mov
sub
loope
mov
addb
stos
icebp
lahf
or
lds
adc
dec
jbe
lock
mov
jns
outsb
mov
aad
mov
inc
sub
xchg
mov
aad
dec
sar
dec
bound
adc
leave
sub
inc
or
repz
mov
nop
cwtl
jecxz
ljmp
data16
add
push
jecxz
dec
cwtl
or
lret
or
sub
clc
inc
aad
pop
mov
in
sbb
stos
rolb
stos
movsl
sbb
adc
mov
adc
int
add
lea
mov
adc
inc
cli
adc
sbb
mov
sbb
add
cmp
inc
sbb
add
ficoml
adc
add
sbb
icebp
sbb
add
call
xorb
mull
sub
dec
add
sub
shll
push
dec
fistpll
test
notl
sar
lahf
adc
or
adc
jmp
and
add
or
add
push
xorl
cmpsl
shll
or
xlat
test
jle
push
xchg
lcall
xchg
sub
xchg
aad
aad
cmc
movsl
lahf
cwtl
ret
mov
cmc
repnz
js
mov
mov
repnz
jg
inc
inc
dec
imul
mov
push
and
add
addl
mov
push
dec
pushf
mov
or
repnz
mov
aam
pop
out
mov
shll
mov
mov
mov
jle
jne
xchg
sbb
xlat
pushf
cld
xor
mov
imul
jge
jns
push
xchg
xor
add
jp
dec
movsb
test
adc
popa
push
dec
cmp
cmp
gs
fcomps
pop
or
loope
and
xor
aad
and
scas
add
ret
ja
call
loop,pt
sbb
pop
enter
xchg
cld
rcrl
into
or
inc
or
ret
cld
movsl
add
stc
jae
push
mov
jo
fdivrs
adc
push
add
stc
cmp
sbb
xor
push
add
daa
lcall
cmp
clc
xchg
incl
sbb
nop
inc
jne
mov
and
dec
xor
lock
and
or
stc
add
mov
push
daa
and
rol
cld
ret
xchg
mov
push
dec
push
notl
xchg
pop
lret
hlt
pop
pushf
inc
push
loop
push
sub
mov
mov
xchg
mov
cwtl
out
cmovne
or
stos
xchg
add
jne
mov
pop
push
dec
loop
jecxz
inc
and
aam
outsb
lcall
dec
jns
ds
test
mov
cmp
test
sbbb
repnz
repnz
xchg
daa
cli
insb
fadd
mov
sarb
idivb
adcl
sbb
dec
inc
scas
add
aad
or
int
or
mov
arpl
stos
mov
cltd
lret
lahf
gs
faddl
jne
ret
je
jecxz
aas
lahf
push
mov
dec
cmp
push
cmp
pop
hlt
pop
ja
iret
js
mov
repz
cltd
hlt
shll
mov
and
and
sub
cli
jge
fs
outsb
orb
iret
add
test
push
lret
jnp
in
inc
mov
out
cmp
je
js
mov
out
or
cmpsl
xor
jg
cmp
roll
ret
aas
xchg
pop
sub
pop
xor
sub
pop
imul
fs
xchg
call
sahf
mov
out
jmp
imul
or
pop
in
out
cmpsl
mov
sub
and
les
push
in
dec
dec
fstl
inc
dec
push
lahf
inc
lret
popa
es
loopne
adc
sbb
in
and
int
jae
insl
iret
ffreep
xchg
outsl
mov
fcmove
dec
add
movsb
mov
jns
inc
gs
jne
jno
je
ret
cmp
fwait
shll
inc
mov
push
cmp
pusha
push
push
and
loop
mov
xchg
lea
xchg
pop
leave
jecxz
stos
xchg
cwtl
sbb
cli
insb
sub
xchg
xchg
in
in
inc
loopne
add
movsb
movsb
imul
mov
cmp
cli
pop
rolb
mov
test
gs
dec
jnp
inc
arpl
inc
out
pop
mov
leave
adc
pop
inc
jp
lock
push
sbb
xchg
xor
mov
mov
imull
mov
push
sub
cld
inc
adc
jbe
sbb
icebp
rcr
call
es
outsl
xchg
and
and
inc
push
test
ss
repz
js
mov
mov
out
rclb
xchg
mov
ljmp
cmpb
cmpsb
pop
rclb
sub
jne
inc
or
xchg
fldcw
push
xor
jnp
fcmovnu
xor
in
push
sbb
je
mov
adc
imul
sub
out
and
loop
push
push
faddp
call
rorl
movsl
stos
adc
loope
pop
rorl
cli
frstor
fsubr
sbb
jp
jo
or
bt
cs
dec
sti
cwtl
imul
pop
xchg
adc
xchg
nop
mov
and
pop
push
cmp
adc
sbb
aaa
inc
cmc
and
stos
push
and
sub
mov
pop
jo
sub
aad
push
loope
lret
mov
xchg
xchg
loope
jge
or
int
pusha
nop
outsb
xlat
mov
les
cmc
cmp
sub
fisttpll
mov
sub
adc
leave
lods
aas
icebp
cmp
movsb
add
pushf
jnp
arpl
cmp
aad
test
dec
mov
ret
loope
sbb
pop
cs
rclb
rclb
sbb
and
cwtl
out
repnz
cmp
ljmp
je
popa
xchg
sbbl
cmc
push
dec
push
mov
fs
addl
push
or
add
dec
leave
xchg
mov
aaa
in
into
rcr
jge
shll
ficoms
rclb
xchg
mov
xor
push
xchg
mov
mov
push
cmp
pushf
mov
cmpsl
add
and
pushf
or
pop
jno
xchg
daa
stc
sti
rcrb
cmc
aad
and
mov
xor
ret
pop
in
jg
sbb
push
and
jge
inc
mov
xchg
and
cmpsb
stc
lods
push
ds
mov
mov
stos
shrl
repnz
sub
add
mov
xchg
sub
push
fwait
scas
xor
add
mov
loop
xchg
fwait
xchg
fs
movl
xlat
in
adc
bound
add
xor
jne
jno
test
xor
imul
push
movsl
lods
and
or
call
xchg
movsl
or
and
frstor
sbb
jbe
int
imul
xchg
in
push
mov
dec
adc
in
push
hlt
mov
xchg
jo
repnz
mov
cmpb
cltd
addr16
rorb
das
ss
pushf
ret
cmp
cmpsl
mov
xor
fists
daa
push
push
movb
pop
popa
js
scas
adc
dec
sbb
inc
sub
pop
lods
cld
scas
in
bound
adc
mov
je
icebp
popa
mov
inc
test
shrl
or
mov
imul
and
inc
add
dec
mov
int3
aaa
rclb
hlt
jb
and
lods
adc
lahf
movsb
mov
cmc
inc
inc
fwait
dec
mov
cltd
mov
xor
push
pop
pop
pop
rcll
xlat
roll
test
dec
aaa
mov
call
mov
jmp
xchg
mov
mov
popa
cmpb
mov
push
and
jae
es
and
xchg
mov
pop
fdivrl
xchg
daa
jns
and
pop
test
xchg
maskmovq
notl
sbb
sub
xchg
adc
adc
test
pop
inc
hlt
sbb
dec
pushf
add
ret
pop
loop
out
insl
xchg
pusha
lea
lret
pop
or
cmp
pop
outsl
pop
movsb
mov
mov
jp
mov
idivb
aaa
and
xor
imul
fcompl
out
mov
sbb
ja
pop
out
add
or
xor
repz
testb
dec
mov
fdiv
push
or
inc
clc
cmp
mov
mov
mov
and
fadds
scas
and
mov
jne
xor
lods
cld
imul
lock
aas
pop
mov
xor
sbb
ret
lock
add
adc
ret
sbb
jne
mov
ja
xchg
cmp
arpl
lock
inc
daa
enter
fcmovu
xor
mov
jb
insl
aam
mov
fstpt
clc
fdivrs
mov
shlb
sbb
sub
outsl
pushf
add
push
nop
aam
xchg
push
and
sbb
xor
aaa
xor
lods
mov
mov
in
dec
inc
mov
adc
fst
sub
insb
mov
add
xchg
pop
jo
lret
es
dec
xchg
loopne
dec
fsubrs
cmc
xchg
cmp
dec
mov
jne
or
adc
in
jg
test
mov
xlat
adc
mov
out
mov
insb
movsb
icebp
sbb
sbb
adc
mov
mov
test
lods
pop
fwait
inc
mov
mov
mov
jge
sbb
jnp
push
movb
cld
jb
sub
in
sti
xchg
mov
cli
jg
mov
xor
push
fldt
das
pop
lock
repnz
push
or
adc
cli
loop
jle
mov
cmp
insb
jb
xchg
mov
add
mov
aaa
aam
minps
or
ret
cli
dec
shll
aaa
pushw
cmpl
out
imul
shrl
or
or
dec
mov
or
iret
in
mov
fsubrl
loopne
hlt
loop
mov
shlb
pop
lahf
stc
in
cmp
adc
jp
outsl
pushf
lahf
loope
push
mov
ror
or
add
test
icebp
pop
jg
sbb
add
xor
pushf
mov
loopne
xor
mov
mov
xchg
cwtl
and
push
fsts
add
dec
fisubs
inc
jo
push
out
js
aaa
imul
or
int3
rcrb
and
cmp
dec
daa
icebp
jl
insb
jp
mov
popa
mov
mov
jnp
and
out
pop
das
scas
aam
sbb
in
push
imul
sti
mov
fwait
hlt
roll
mov
and
pcmpeqd
jecxz
xchg
xchg
fsubr
sub
loope
outsl
dec
shrb
scas
int3
fcomps
xchg
imul
cmp
shll
ds
leave
fcmovu
sub
lods
xor
inc
xchg
or
sub
cmp
int
sub
and
dec
negl
scas
aam
shll
loope
loopne
ret
lret
xor
je
cld
mov
mov
mov
push
decl
cmc
fmuls
pop
lret
push
popf
lods
fs
push
imulb
mov
xchg
rclb
leave
jmp
mov
daa
cmc
jbe
aad
xor
inc
xor
pop
cld
ljmp
xor
nop
outsl
jmp
in
repnz
mov
mov
push
test
push
in
mov
jnp
mov
push
xlat
shll
arpl
lods
push
repnz
and
push
leave
int
jle
adc
ja
into
mov
jno
dec
pop
testb
or
mov
lret
mov
push
aad
jl
int
pop
stos
adc
out
iret
hlt
cs
fwait
jmp
sub
sub
pop
jns
cmp
push
dec
fistpll
fiaddl
push
loope
xchg
sub
push
inc
mov
pop
pop
test
sbb
jmp
lret
mov
pop
xchg
mov
cli
xlat
xchg
stos
ss
sub
and
clc
scas
inc
mov
xchg
mov
and
int3
inc
or
test
push
daa
add
pop
cmp
les
xor
ss
inc
xchg
jmp
js
ret
out
in
and
xor
mov
shlb
or
int
imul
je
push
mov
push
push
enter
sbb
and
inc
lods
push
xor
sub
ljmp
mov
pop
push
pop
mov
mov
popa
sbb
xchg
push
rorb
popw
mov
push
call
pop
push
mov
and
enter
pop
fiadds
nop
lret
push
xchg
and
ljmp
ja
mov
push
adc
add
test
fadd
adc
jae
push
adc
pusha
mov
notb
bound
scas
nop
jae
aaa
xchg
mov
push
push
adc
in
or
lock
icebp
fs
pop
addr16
cmp
add
fwait
inc
mov
in
and
lock
rolb
in
push
movsl
and
pop
push
jg
daa
and
mov
jbe
rcrb
enter
sbb
cmpsb
push
adc
pop
pop
bound
cmp
les
adc
or
adc
fdivrs
sub
mov
dec
xor
lds
mov
stc
pop
inc
add
adc
inc
call
sbb
sbb
mov
lods
aas
movsb
fiadds
cld
jge
mov
jecxz
iret
xchg
bound
lock
inc
je
and
xchg
les
outsl
push
int
jge
sahf
mov
mov
lret
andb
mov
insb
das
push
pop
lods
aad
lods
adc
je
jp
jne
mov
insb
xor
add
icebp
pop
jne
mov
pop
add
enter
xchg
cmp
out
mov
cmp
push
jg
aaa
adc
xchg
push
test
mov
xchg
mov
int3
sbb
lods
adc
jb
jge
addb
inc
pop
iret
and
scas
bndstx
cwtl
push
sub
dec
insl
leave
or
inc
ret
adc
jmp
mov
sub
mov
repnz
pushf
xor
pop
lahf
ret
aas
add
xchg
sbb
aaa
xchg
inc
sbb
leave
pop
fwait
mov
xchg
rol
imul
jg
or
out
jno
jnp
sbb
add
fiaddl
add
ljmp
repnz
push
ss
ds
mov
push
repz
imul
cmc
push
and
and
and
sub
mov
xchg
cmp
insb
ss
loopne
sub
outsl
call
dec
sbb
dec
in
into
test
push
pushf
shll
mov
loope
mov
enter
xor
jecxz
push
mov
mov
mov
push
adc
inc
xor
sti
jge
mov
push
mov
mov
jg
ss
and
jp
ljmp
mov
adc
xchg
popa
or
lock
ss
jbe
jp
loope
cmc
nop
xor
add
outsl
sbb
jp
adc
or
dec
aad
and
mov
dec
xor
jno
inc
pop
inc
push
cmp
inc
push
cli
xchg
fisttpll
lock
inc
out
cltd
mov
dec
push
shll
in
push
sbb
and
mov
ljmp
push
ret
icebp
cld
enter
cltd
mov
lahf
aas
in
rcrl
add
addb
jmp
mov
movsb
roll
and
cltd
push
pop
pop
and
xor
pop
iret
jo
lods
mov
test
inc
inc
in
in
insb
xchg
out
aas
adc
adc
xor
inc
sub
push
dec
mov
subl
daa
mov
fildll
ja
clc
cmp
sbbb
ss
subb
jnp
mov
pop
dec
stos
pushf
es
mov
and
movsl
cmp
lcall
xor
out
sub
sbb
pop
push
mov
push
cmp
clc
mov
and
add
fsts
popa
jg
out
or
movsl
and
jb
inc
cmc
fstpt
loope
mulb
in
mov
cmp
in
lret
pop
cmp
cli
xchg
xchg
out
idivb
pusha
sbb
mov
ds
fmul
jl
jmpw
mov
test
movsb
xor
cmp
es
mov
ret
test
popa
int3
jp
icebp
mov
push
xchg
inc
hlt
fnstcw
add
inc
xor
cmp
pop
sbb
testl
mov
ret
rorb
inc
xor
xlat
jg
mov
shrl
pop
popf
ss
adc
pop
imul
in
cmp
sti
negb
aad
mov
pop
jge
das
jns
es
sub
and
lds
and
dec
cmpsl
cwtl
mov
mov
and
xor
add
stos
stc
jns
jge
loop
stc
cltd
cwtl
popa
mov
pop
adc
xchg
aaa
aaa
in
mov
pop
cld
stos
push
dec
stos
xor
iret
aaa
rcrb
add
push
mov
lahf
sub
add
push
add
stc
dec
pop
xchg
fiaddl
push
xor
xchg
mov
shrl
ror
test
and
pop
popa
cmp
mov
popa
pop
ljmp
xor
sbb
test
fists
pusha
ljmp
fisubrs
cmp
or
xchg
xchg
cmp
push
add
cmp
into
adc
bound
mov
push
fisubrs
xchg
or
push
jne
rcrl
inc
pop
pop
xchg
and
jbe
cld
and
aam
out
test
xchg
clc
mov
insb
clc
jge
jmp
incl
sub
push
push
add
out
addr16
adc
push
rorb
outsl
scas
xor
orb
cmp
ljmp
fxch
shlb
adc
test
jecxz
jmp
xor
xchg
lods
test
jb
hlt
mov
lods
mov
jmp
xor
xchg
clc
lahf
xor
testl
or
and
loopne
aad
xchg
push
mov
mov
ds
adc
repnz
mov
mov
pop
rep
push
and
loopne
xchg
push
mov
dec
inc
cmpsb
test
ret
sub
rcr
hlt
adc
xchg
mov
cmp
cmpl
add
mov
inc
xor
jbe
rcr
outsl
popf
add
outsb
cmp
repnz
xor
fstpt
lods
mov
es
stc
and
mov
cli
and
mov
ljmp
subl
and
gs
or
popf
addl
xchg
dec
arpl
and
cmp
push
bnd
cli
add
mov
inc
sbb
fimuls
ss
leave
push
xchg
sahf
std
inc
imul
stc
rorb
pop
dec
fidivrl
stos
dec
mov
xchg
mov
push
dec
out
fs
pop
sbb
dec
xchg
mov
xor
bound
jb
or
adcl
mov
pusha
add
dec
or
sbb
sbb
cmp
lea
lock
xchg
pop
fdivs
sbb
aaa
into
jno
mov
iret
jb
int3
nop
adc
xchg
sbb
mov
pushl
stc
jns
lock
jle
lret
loop
sub
imul
fisttpll
pop
xchg
pop
mov
push
add
sbb
or
and
or
test
mov
pusha
jmp
sbb
mov
and
loop
pop
ret
xchg
cmpsl
push
dec
lods
add
stos
aaa
add
test
jmp
stos
insl
push
mov
roll
repnz
cwtl
sbb
icebp
inc
imulb
fmuls
sub
lds
es
add
adcl
in
js
jmp
rolb
ja
imul
lea
cltd
mov
add
ffree
jmp
pop
cli
xor
shlb
gs
mov
fisttps
xor
mov
fcomps
xchg
icebp
adc
sbb
bound
ficoml
and
insb
pop
cli
mov
adc
lret
pop
out
lahf
jae
xor
xchg
nop
push
cmp
sub
dec
mov
out
xchg
mov
lds
xor
dec
aam
or
sarl
das
stos
xor
mov
pop
push
xor
add
and
pop
pusha
pop
xchg
dec
mov
bound
and
lcall
rcl
cltd
mov
and
in
xor
mov
dec
pop
mov
sti
insl
ficomps
and
ss
mov
jmp
or
ret
bound
mov
push
dec
push
jb
imul
in
ja
adc
in
cmp
mov
dec
jl
dec
jmp
popf
xchg
ja
mov
cmp
push
inc
mul
mov
shrl
xor
add
les
inc
xchg
into
and
xor
addr16
and
cmp
jl
nop
mov
fcmovnu
and
adc
jo
mov
xor
sbb
and
popf
jmp
lods
je
mov
pusha
xor
add
insb
out
mov
outsl
dec
mov
cld
sub
mov
pop
outsb
jbe
fcomip
aad
inc
xchg
icebp
out
xchg
dec
dec
imul
daa
add
clc
das
pop
dec
imul
inc
fwait
test
jl
inc
mov
out
jmp
pop
jb
mov
push
xchg
nop
leave
mov
subl
xchg
pop
repz
test
les
jmp
xor
adc
push
cmpsl
dec
cmp
adc
aas
add
movsb
mulb
cli
test
sbb
jle
mov
lret
sti
mov
repz
jp
xchg
sub
cmpsl
xor
adc
inc
insb
inc
jl
movsb
in
sbb
mov
add
jmp
jae
pop
push
cli
cltd
seto
bswap
dec
cld
xchg
imul
cwtl
adc
mov
sbbl
por
sub
jno
fidivrs
div
add
jge
mov
cmpsl
les
int
rolb
insb
lret
repnz
in
insl
cmp
cwtl
mov
dec
push
shr
mov
fdiv
or
call
cmp
jb
cmc
loopne
mov
dec
sarb
jge
sbb
sub
or
mov
cmp
std
fimull
sbb
ljmp
add
mov
ret
cmpsl
popa
mov
ss
imul
cltd
mov
clc
out
and
lret
jecxz
aad
ljmp
xor
shrb
adc
in
sbb
sbb
into
mov
push
jae
subb
jp
sar
mov
rcr
mov
out
sub
xchg
jl
mov
shrl
lea
jmp
add
push
fimull
push
iret
sbb
jno
mov
lret
in
aad
mov
or
lret
daa
nop
out
in
push
mov
and
pop
jns
mov
test
sbb
insb
into
jnp
adcb
mov
popa
cwtl
sbb
into
rclb
sar
loop
fucomp
mov
jb
mov
mov
cmpsl
mov
cld
dec
sub
test
xchg
xor
sbb
cld
mov
repz
mov
out
fwait
bound
dec
dec
sbb
cmp
jl
cmpsb
adc
out
mov
cmpsb
jo
sbb
push
mov
xchg
sbb
leave
and
sub
add
popa
lret
jbe
fcoml
mov
test
in
daa
loop
jnp
sbb
jns
pop
lods
or
stos
xor
xchg
scas
inc
xchg
dec
pop
rorl
pop
or
mov
fldcw
jnp
push
ja
pushf
pop
mov
out
cmp
push
xchg
mov
out
push
in
mov
cmp
pxor
sub
jne
pop
pop
orb
or
sbbb
inc
sbb
shlb
dec
jle
sub
dec
mov
stos
std
push
sbb
pop
aam
adc
cmp
jle
mov
sbbb
pop
cmp
mov
push
scas
or
popa
es
inc
xlat
jp
or
insb
mov
std
xchg
in
loopne
dec
sti
mov
loopne
lret
je
lods
lds
xchg
cwtl
fwait
inc
loop
pusha
cmp
push
lods
push
pop
and
movsl
lahf
pop
clc
push
daa
sahf
loop
sub
icebp
data16
push
mov
addr16
loopne
pop
inc
testb
rorl
fsubrl
fdivrs
icebp
push
xchg
mov
enter
add
neg
aas
push
sbb
or
cli
sarb
out
faddl
shrb
fcomi
add
out
fstps
adc
lock
sub
pushf
pop
loope
popf
cmp
rorl
adc
mov
jp
mov
sti
inc
cmpsb
std
pop
cmpsl
hlt
mov
pusha
in
pop
movsb
in
jns
insb
or
push
popa
into
adc
pop
jbe
sub
push
sbb
lcall
cmp
pop
bound
mov
xchg
pop
les
mov
inc
stos
int
jg
mov
sti
shl
sbb
xchg
outsl
sub
xchg
xor
and
popa
jg
cmp
outsl
nop
push
icebp
dec
cmc
idivl
push
sub
xorl
mov
adc
inc
loope
pop
mov
mov
test
fwait
dec
adc
mov
cld
xlat
mov
fmull
jnp
sbb
fwait
and
sub
sbb
cld
mov
insb
mov
addb
and
lods
int3
adc
loop
sub
sbb
push
mov
pop
mov
cmpsl
sub
stc
pusha
test
test
mov
sbb
int3
stc
test
mov
push
xor
clc
push
gs
xor
test
lock
mov
daa
jnp
dec
addr16
fwait
mov
inc
jo
xchg
lods
and
dec
in
sbb
add
sbb
ljmp
or
imul
ret
aam
dec
rcr
lods
jmp
add
xchg
push
fwait
inc
ljmp
xor
xchg
ljmp
test
xchg
lret
addr16
push
adc
popf
stos
xor
popa
data16
shrb
adc
jg
and
insl
mov
add
into
rcll
les
xor
add
in
lcall
xchg
jl
loopne
mov
repnz
sub
xchg
add
test
and
in
fnsave
stos
cmpsb
dec
in
dec
cmova
mov
aam
pop
jl
mov
movl
mov
in
inc
adc
repz
push
fstl
fstpl
xchg
jae
cwtl
fwait
pop
testl
xchg
sti
ret
pop
adc
xchg
add
hlt
pushf
sahf
leave
int
cmpsb
clc
icebp
xor
push
in
xor
dec
cmpxchg8b
xchg
ljmp
insb
add
jmp
or
push
xchg
adc
and
scas
inc
ljmp
or
adc
dec
add
push
imul
mov
scas
adc
jmp
sbb
enter
push
les
stos
push
fdivrs
xchg
pusha
fisubl
xor
lcall
sub
and
notb
sbb
sahf
cli
insl
dec
inc
pop
push
xor
ja
out
sub
xchg
xchg
test
push
mov
cmp
mov
sbb
adc
rorb
mov
iret
icebp
shr
outsb
mov
rcll
into
sbb
iret
je
or
andl
jecxz,pt
push
mov
dec
mov
jae
xor
das
std
mov
fsubrs
cmp
movsb
pop
mov
mov
jmp
test
inc
fs
sahf
and
sub
add
insb
ljmp
shll
mov
cmp
insb
std
popa
int3
pop
and
cltd
pop
mov
sub
push
imul
out
xor
imulb
cmpsb
jecxz
jmp
divl
mov
push
mov
in
fsubrl
cmpl
cli
rorb
leave
aaa
inc
es
cmp
push
int
xchg
mov
mov
cs
idivl
rep
xor
mov
bound
arpl
xchg
or
jo
ret
sbb
out
xlat
jmp
cwtl
sub
and
in
test
clc
adc
sahf
adcl
jne
push
lods
test
and
sbb
ret
jnp
push
add
add
shr
mov
mov
sti
gs
repz
dec
outsb
loope
aad
inc
jbe
into
pop
dec
les
jns
adc
shl
div
or
or
dec
fdivs
das
push
daa
mov
loope
clc
mov
icebp
enter
pop
stc
jecxz
or
je
xor
mov
xchg
das
insl
xchg
fwait
js
icebp
insb
call
push
xlat
mov
lock
fsubs
pop
cmp
in
test
ret
push
ss
xor
sbbb
and
insb
call
ret
pop
adc
mov
fnstcw
mov
mov
mov
push
mov
xchg
aam
xchg
or
pushf
inc
out
cmp
push
clc
cmp
adc
std
jle
jp
xchg
daa
mov
and
enter
sarl
mov
xlat
mov
mov
test
imul
xchg
test
xor
lcall
test
dec
clc
sahf
rcrb
scas
mov
mov
hlt
aam
push
dec
jmp
push
jb
insl
clc
mov
inc
leave
test
mov
dec
loopne
divl
aad
jmp
lea
sbb
sbb
je
movsl
ja
in
in
bound
jae
sub
add
shlb
mov
divl
pop
mov
aas
or
mov
pop
cmp
arpl
testb
or
dec
es
mull
dec
cmp
xchg
dec
imul
xchg
inc
mov
sahf
and
add
cli
cmp
push
mov
xchg
arpl
jo
cmpsl
mov
std
cli
movsl
stc
cmp
jbe
pushf
cmp
movsl
cld
pusha
stos
cmpsl
mov
into
mov
adc
mov
and
push
js
mov
cmp
pop
push
add
xor
sub
sbb
iret
sub
or
loopne
inc
arpl
jae
lods
in
stc
and
jb
cmp
and
xchg
test
push
fisttps
lods
sub
or
inc
mov
and
pop
repz
pop
pop
sbb
pop
dec
jbe
xchg
pop
lds
pushf
jnp
test
inc
pop
pop
imul
movsb
lcall
inc
hlt
cmp
jl
es
repz
out
cmc
in
out
pop
xor
arpl
mov
cli
xchg
cmp
sbb
negb
push
or
or
xor
lcall
rorl
stc
int3
stos
and
out
int3
fwait
lcall
adc
repz
lods
push
cmpsb
movsb
cmpsb
movsl
addr16
fistpll
cmp
rcrl
aad
xchg
out
xor
add
mov
sub
jb
xlat
xor
insl
inc
push
ds
ficomps
lds
xchg
nop
add
cmp
lods
jo
lahf
lods
or
pop
xchg
pop
or
or
pushf
hlt
sub
xchg
mov
mov
pushf
shrl
test
mov
dec
or
cmp
lods
jbe
and
xchg
dec
dec
lcall
loop
mov
sbb
xor
push
mov
lods
ret
das
out
mov
stc
lods
testb
dec
pushf
daa
fsub
xor
or
cmp
jbe
divb
jge
outsl
jbe
movsb
cmc
in
jge
cmc
xchg
repz
sbb
addb
in
mov
cmp
negl
xchg
jmp
ss
xchg
mov
pop
ljmp
sub
in
jo
pop
hlt
or
sbb
pop
mov
mov
out
lcall
pop
leave
push
jno
int
pop
push
rcrb
sbb
test
push
dec
mov
in
sub
adc
outsl
mov
aas
xor
add
lret
sub
sti
jmp
lods
rcr
jp
push
sbb
jp
or
mov
push
fdivr
js
cmp
cwtl
xchg
mov
pushf
mov
or
sub
das
fnsave
adc
inc
fs
aas
and
repnz
xor
add
pop
sti
jmp
xchg
sub
sbb
xor
sbb
sub
or
nop
out
stos
sbb
leave
add
adc
pop
pop
cmpsl
std
mov
stos
in
mov
sbb
insb
mov
dec
pop
stos
mov
test
xlat
push
pop
cmpsl
add
ss
cmp
and
ror
mov
xchg
jne
sub
ror
jge
mov
data16
arpl
fisubs
add
loop
iret
outsl
fsincos
dec
pop
in
sub
icebp
imul
xchg
adc
mov
movsl
movsl
dec
std
into
jmp
mov
dec
ret
sahf
outsb
inc
lahf
sbb
lds
int
imul
xor
xchg
fsubrl
fldl2t
jnp
sbb
jae
in
js
loop
or
rcr
sti
xor
push
dec
mov
sub
xor
cmp
dec
call
jns
dec
add
add
and
mov
fnsave
xor
ror
sbb
cmc
dec
sub
cmp
cmp
aam
pusha
mov
shrl
and
xchg
frstor
test
dec
xchg
dec
and
andl
cmp
pop
frstor
les
cmp
jmp
cmc
stos
dec
lock
jno
fisttps
xchg
lcall
fsubr
pop
or
ds
mov
lea
cmp
loop
lea
les
js
xchg
push
loope
dec
sbb
imul
ret
ljmp
pushf
pop
in
iret
testl
popa
clc
sbbl
mov
push
or
lods
or
fdivrs
std
lahf
stc
sti
in
pop
pushf
or
clc
test
aam
outsb
inc
arpl
loop
pop
jg
add
mov
mov
insb
into
cs
and
outsb
in
fwait
inc
fcoms
repz
incb
je
mov
mov
xorb
mov
sbb
jno
bswap
gs
inc
inc
mov
mov
adc
sti
in
sbb
nop
stos
shl
and
mov
cli
inc
mov
aad
shrl
int3
pop
or
mov
ja
mov
les
arpl
xor
js
mov
ret
stc
out
mov
divl
movl
mov
mov
mov
out
or
popf
inc
xchg
jecxz
jle
xchg
gs
lahf
cmc
bnd
or
sub
inc
movsl
adc
xor
pop
xchg
or
loopne
cmp
cmp
popf
in
call
pop
push
mov
aaa
sub
mov
stos
add
and
stos
and
hlt
daa
pop
imulb
jge
adcl
orb
mov
jg
dec
cmp
mov
mov
sub
mov
les
outsl
jne
push
mov
lods
or
add
out
dec
push
in
andl
aad
inc
xchg
push
roll
mov
dec
jo
pushf
sbb
xor
push
repnz
xchg
bound
pop
gs
inc
mov
pop
inc
sub
jno
mov
in
sbb
jge
loopne
dec
inc
cvttps2pi
fucom
push
adc
out
xchg
rcrl
orb
test
outsl
repz
and
inc
dec
les
pop
and
or
mov
rclb
push
lret
lock
dec
jbe
mov
adc
fcmovbe
adc
mov
xchg
cmpsb
add
pusha
and
lret
dec
mov
push
and
out
test
jecxz
movsl
mov
cmpsb
stos
mov
cmp
sbb
xlat
dec
movb
out
ss
sbb
daa
fbstp
cmc
fists
xlat
fstl
pop
lock
mov
shlb
mov
add
arpl
and
xchg
inc
mov
mov
bound
cli
adc
push
sbb
inc
inc
and
add
add
xor
cmp
push
shlb
jns
xlat
movsb
mov
jp
pop
shrl
repz
mov
inc
ljmp
mov
or
or
jbe
pop
push
cltd
pop
fists
fisttps
dec
call
inc
lods
mov
lds
stc
sahf
mov
mov
mov
jno
loop
adc
addr16
sub
fnstsw
mov
stc
outsb
in
test
popf
std
jbe
aad
dec
testb
aas
sahf
jbe,pn
lock
dec
pop
lds
call
sub
andl
pushf
push
mov
rclb
mov
jns
dec
mov
lods
hlt
imulb
std
mov
dec
dec
add
sub
out
cmp
cli
cltd
cltd
xchg
gs
mov
adc
loop
js
xchg
or
mov
pop
insb
adc
xor
inc
mov
lea
dec
out
in
pusha
inc
mov
dec
jmp
popf
mov
push
jns
daa
sbb
lea
outsl
cli
mov
enter
dec
roll
mov
sub
pusha
insb
mov
adc
dec
inc
xor
inc
xchg
lahf
mov
clc
pop
xor
sub
sarb
ss
shll
addr16
add
dec
js
sbb
ja
into
fstpl
out
xchg
imulb
xor
call
xchg
push
in
mov
je
out
sbb
mov
inc
loope
lret
iret
jge
add
pop
rclb
enter
mov
xchg
icebp
in
xchg
mov
adc
xor
cmp
xor
pop
sbb
iret
sbb
jb
mov
mov
das
les
or
jae
shlb
pusha
imul
fwait
sbb
arpl
lahf
inc
out
insb
xor
ficoml
push
xchg
cs
mov
rclb
je
je
dec
js
inc
adc
lods
push
gs
adc
dec
shlb
es
in
cmp
arpl
dec
cmp
mov
and
jecxz
dec
repz
jl
dec
and
movsl
inc
out
push
inc
mov
stc
scas
jb
adc
pop
jns
int3
andl
sub
pushf
dec
ljmp
jl
cmp
push
sti
mov
inc
xchg
ret
shll
xchg
push
push
inc
movsb
insb
dec
lahf
inc
pop
ds
cmp
sbb
lahf
movsl
mov
push
notl
pop
sbb
lret
or
cmpsl
nop
sbb
jmp
jb
lods
into
push
adc
sti
cwtd
std
pop
and
pop
sti
je
repnz
cmp
fstpl
outsl
dec
ret
pushf
cmp
nop
push
sbb
cs
mov
dec
aas
dec
xchg
es
fildll
jbe
push
mov
or
inc
push
negl
or
xchg
rorb
lds
push
fiadds
cmp
mov
mov
negl
and
bound
pop
push
ss
inc
loop
stos
pushf
add
sub
ret
xchg
and
and
repz
sbb
cltd
das
aad
inc
lock
pop
jp
out
addr16
xchg
ds
pop
mov
mov
cmp
subl
or
sub
push
ljmp
jge
rcrb
jle
ficompl
dec
push
addr16
mov
and
inc
lret
and
and
rcr
outsl
pop
movsb
fisubrs
inc
cmp
in
mov
adc
insb
mov
pusha
lock
dec
inc
ss
mov
ret
sub
sub
sub
dec
addb
push
sbb
jmp
loopne
push
cli
jge
push
fxam
movsb
outsb
loop
push
lret
pop
scas
mov
or
dec
mov
jp
scas
in
pusha
jle
mov
insl
clc
cs
mov
jae
mov
bound
xchg
std
clts
dec
in
das
inc
mov
stos
mov
and
mov
cs
pushf
sbb
push
mov
clc
das
sub
inc
mov
push
xor
xchg
rcll
aam
icebp
xchg
scas
out
pop
cmp
dec
fistpl
cmp
mov
or
mov
mov
in
scas
mov
daa
insb
dec
inc
test
dec
adc
daa
lds
cltd
fcmovnb
dec
mov
imul
sbb
pop
or
sub
adc
std
add
xor
mov
out
mov
hlt
lcall
adc
push
stos
adc
pop
jl
mov
xor
mov
add
xchg
aad
jns
fidivs
cli
clc
outsl
xchg
xor
xchg
and
sbb
enter
xchg
stc
shlb
mov
or
jb
mov
cmp
rcrb
lea
jle
leavew
inc
dec
cli
pushf
add
int
lahf
xor
push
xor
popf
aam
adc
adc
ror
jg
pop
sbbl
mov
push
sbb
mov
mov
and
int3
out
mull
mov
cmpsb
pop
or
mov
mov
push
daa
pop
mov
daa
insb
pushf
mov
adc
xlat
mov
icebp
dec
jno
in
xchg
pop
mov
adc
cmc
pop
and
insl
mov
mov
mov
or
cld
push
hlt
xchg
cwtl
push
mov
mov
push
inc
cmp
rorb
fistpll
ja
shlb
in
dec
lock
test
mov
arpl
mov
ds
or
mov
lret
sti
out
xor
test
pushfw
out
jo
stos
mov
add
cmpsl
xchg
pop
stos
mov
push
push
add
std
dec
in
lcall
xor
adc
jp
les
dec
loope
jmp
shrb
loope
sbb
repz
ja
mov
lret
insl
lods
sarb
bound
int3
popa
lea
add
xor
stos
mov
push
ss
cmp
xor
test
add
call
sbbb
jp
fcoms
push
and
jmp
or
shlb
sti
cmp
sub
and
sbb
ds
sub
and
mov
mov
leave
repz
fcmovbe
lret
or
push
adc
cmp
jns
mov
inc
push
scas
mov
mov
add
jl
stos
test
push
popa
push
dec
lods
loop
xchg
mov
add
iret
lods
jge
inc
mov
ficomps
sbb
into
in
lret
icebp
push
dec
std
and
push
mov
push
js
cltd
push
pop
sbb
or
pop
mov
inc
into
ss
add
movsl
cmp
xchg
icebp
arpl
xchg
adc
cmp
jecxz
sbb
pop
and
iret
gs
mov
dec
mov
push
jae
or
mov
cld
lods
mov
call
xchg
xor
mov
int3
jecxz
or
or
add
stos
xor
add
movsb
sub
jno
adc
sbb
imul
mov
mov
shl
out
lcall
or
scas
pop
and
pop
mov
dec
jbe
cwtl
sbb
test
cmpsb
xlat
add
sbb
sbb
jmp
shr
adc
mov
adc
push
neg
mov
jle
dec
sub
mov
and
push
fisubs
xchg
or
cmp
push
xlat
push
and
jo
mov
sbb
adc
testl
sbb
xor
out
jmp
push
sub
pop
leave
push
fsts
jg
dec
outsl
sbb
mov
xor
push
sbb
inc
jne
mov
jo
inc
insl
pop
mov
rorb
mov
test
xor
jno
pop
scas
mov
fstp
call
xor
mov
inc
inc
test
lcall
dec
mov
dec
push
jmp
pop
lret
xor
pop
mov
push
pop
mov
pushl
iret
lods
xor
push
cmpsb
jp
sbb
jp,pn
fldpi
xchg
jbe
cwtl
dec
scas
jl
aam
les
sub
push
mov
lock
jb
inc
sub
xor
cmpsl
or
lea
insb
lcall
sbb
lcall
andb
fdiv
cmp
sbb
arpl
xchg
mov
jbe
and
xlat
adcl
mov
sub
or
push
dec
loop
add
shl
sbb
lcall
adc
jno
movsb
xchg
xchg
imul
iret
ret
imul
inc
and
add
push
loopne
mov
add
jl
cmp
mov
mov
or
ror
imul
ret
pusha
lds
addw
out
xchg
push
mov
out
lock
movsl
sbb
aaa
dec
and
ds
adc
pusha
add
mov
push
jl
and
cmc
add
pop
ljmp
pop
aam
aas
and
add
je
push
ds
pop
mov
das
pusha
mov
dec
or
gs
stc
pop
mov
fmull
xchg
pop
shl
daa
lds
and
sbb
jecxz
in
popa
mov
test
mov
cmp
jns
test
inc
ja
xor
pushf
aas
xchg
jecxz
mov
hlt
jl
jns
pop
mov
sbb
jnp
add
in
dec
fwait
lods
pop
testb
decb
out
inc
stos
loop
inc
lock
stos
ljmp
and
cmp
test
inc
nop
lret
cld
sbb
lods
xchg
push
out
add
add
mov
jmp
aam
xor
sub
ja
mov
jno
jae
stos
xchg
push
pop
movsl
imul
jge
movsb
fnsave
sub
sbb
imul
lods
icebp
xor
repnz
jge
into
mov
or
bound
lahf
test
sbbl
mov
hlt
lret
addr16
loope
enterw
xchg
loope
in
add
test
pop
movsl
sbb
mov
insb
mov
xor
inc
push
xor
cs
mov
xchg
adc
xchg
scas
jne
outsb
mov
addr16
movsl
popf
push
daa
mov
adc
jecxz
pop
mov
add
cltd
rol
dec
fisttpl
jecxz
rcr
dec
xlat
mov
xchg
std
pushf
cld
ret
frstor
mov
rcll
adc
dec
sub
push
icebp
aas
dec
xacquire
cmp
arpl
xchg
lea
jns
andb
xor
into
xor
nop
and
jle
or
sbb
ja
push
mov
cmpsb
icebp
adc
repnz
jmp
outsb
loope
sub
imul
icebp
dec
rol
ljmp
pusha
int
mov
push
pop
je
icebp
mov
lret
adc
mov
fs
cmove
in
sahf
or
lea
insb
setle
cmp
xchg
mov
sbb
mov
sbb
mov
fstl
addr16
cli
cld
out
sub
jmp
or
pop
sbb
mov
mov
adc
mov
or
shl
adc
sbb
and
push
es
cld
adc
rorb
icebp
or
lods
clc
das
jge
rorb
iret
jae
imul
loope
sti
ds
xor
out
sub
mov
inc
inc
jns
orb
add
aas
add
cmc
mov
dec
adc
jmp
inc
sbb
add
roll
or
testl
jecxz
cmp
push
shlb
mov
push
aad
into
inc
arpl
bswap
nop
fadd
push
int3
pushf
adc
push
jle
or
jne
pop
mov
fnstenv
push
lods
xchg
sti
xchg
xchg
mov
and
stos
jecxz
push
or
cmp
inc
int3
adc
in
cmpsl
push
mov
in
inc
sub
pop
push
out
fistl
pop
xchg
jae
popa
pop
mov
push
mov
insl
out
jnp
lahf
movsl
frndint
nop
add
sub
lcall
sub
jnp
movsb
mov
ficomps
rcr
pop
dec
mov
xor
cmp
fwait
in
inc
sbb
adc
lahf
mov
inc
add
addr16
sbb
xchg
jne
loop
dec
mov
jl
xor
pop
mov
shl
jnp
ret
loop
lods
movsl
mov
adc
adc
mov
mov
popf
push
jecxz
gs
std
jge
push
inc
sub
lahf
xchg
testl
xor
lods
cmpsb
adc
mov
add
ss
xor
repz
cmp
sbb
and
mov
adc
jo
lret
repnz
dec
and
bound
xorb
sub
sbbl
in
jns
sub
out
mov
aad
arpl
pop
push
enter
sbb
pop
in
mov
mov
xor
xchg
add
loop
push
mov
xor
sarb
notl
mov
ret
fwait
push
popa
sub
jb
and
sbb
dec
fiadds
imulb
pushf
orl
pop
add
inc
add
mov
or
mov
xchg
or
and
ret
jmp
adc
pop
stos
mov
adc
sbb
cltd
dec
push
hlt
ret
adc
pop
lock
inc
pop
daa
ljmp
mov
push
mov
cmc
add
adc
xor
pop
test
ds
ja
pop
mov
shlb
mov
ja
enter
out
in
repnz
stos
push
mov
test
push
sub
push
push
loop
cmpsl
xchg
add
repnz
or
xchg
pop
pop
hlt
dec
cmpsl
push
and
inc
mov
clc
and
cmp
dec
sbb
or
in
adc
mov
ss
scas
mov
aas
mov
sti
xor
outsl
cltd
cmp
js
out
lock
jnp
inc
test
xchg
call
cmp
push
adc
mov
jg
imul
mov
movsb
jecxz
leave
pop
stc
pop
out
ss
cltd
jg
inc
inc
fdivl
cltd
inc
or
sbb
adc
or
fisttps
stc
sbb
adc
adc
xchg
adcl
sub
xchg
addr16
push
sub
sbb
dec
mov
cmp
test
out
mov
dec
pop
sub
push
dec
aaa
cmpsb
cmp
scas
stos
mov
inc
dec
push
sub
pop
push
aad
mov
test
outsl
fcoml
iret
sarb
lcall
js
std
fadds
inc
adc
mov
cmp
mull
movsl
imul
pop
decb
sub
dec
lds
xchg
inc
mov
hlt
cmp
icebp
daa
jno
sbbb
scas
les
xchg
jne
push
mov
sbbl
xor
mov
push
dec
mov
int3
or
or
push
outsb
and
mov
cmp
cltd
push
inc
fisttpl
test
repnz
add
jecxz
cmp
nop
cwtl
lret
mov
push
xor
stos
lahf
scas
ret
and
pop
ljmp
mov
sub
pop
mov
add
xchg
xchg
pop
add
push
cmc
jmp
mov
pop
enter
cmp
bound
insl
lahf
mov
mov
dec
test
lods
lret
mov
cld
ja
inc
call
pop
daa
sub
mov
mov
lcall
cmpl
xchg
or
mov
push
lods
cli
mov
std
bound
mov
jae
lahf
cs
sbb
or
push
lods
cmpsb
mov
mov
lds
sbb
sbb
mov
mov
lret
cmp
das
or
mov
pop
mov
jnp
xor
pusha
lahf
insb
in
xorb
scas
cli
or
aam
sub
in
xchg
rorl
mov
mov
pushf
repnz
adc
rolb
in
aas
xchg
mov
imul
mov
mov
out
aaa
jecxz
mov
icebp
and
je
repz
mov
in
mov
shlb
jge
adc
push
imul
sbb
cmpsl
push
sbb
sub
jecxz
xor
call
cli
adc
popa
mov
or
fcmovnu
fldt
xchg
jge
inc
pop
cs
push
or
dec
int
push
sbb
in
mulb
sub
ljmp
sahf
into
rolb
pop
daa
inc
jbe
xor
inc
shr
cmp
out
mov
hlt
add
mov
pop
outsb
loope
jo
push
mov
cmp
test
mov
cmpsl
dec
inc
and
mov
test
sub
subl
ljmp
cltd
dec
mov
pop
test
loope
mov
gs
pop
lods
lods
cmp
bound
out
cmp
or
adc
les
cmp
dec
enter
jnp
sub
jmp
stos
dec
mov
outsl
daa
stos
rolb
cmp
xchg
inc
jle
push
rol
cmpsl
lret
mov
add
dec
or
mov
fadd
insb
mov
cwtl
inc
cmp
scas
aad
adc
int
aaa
xchg
addr16
inc
jle
xor
loope
jnp
arpl
fcmovnu
sbb
and
pop
dec
dec
push
dec
push
mov
cltd
stos
xor
movsl
mov
fwait
rolb
movups
das
mov
cwtl
pusha
xorb
dec
jl
pop
sti
rcrb
lock
ds
lea
jnp
call
and
sbb
pop
mov
sbb
gs
pop
cmp
incl
xchg
pop
js
das
jns
push
jns
sub
cwtl
xchg
ds
mov
mov
scas
in
aad
push
fimuls
cmp
adcl
jno
insl
jnp
andb
jge
mov
nop
cwtl
jo
pop
jno
mov
jns
lcall
jae
je
arpl
or
sti
das
cmpsb
push
sub
adc
stos
ffreep
add
jp
adc
xchg
movsb
inc
movsl
jno
lock
daa
and
push
mov
sub
xchg
cs
push
dec
inc
addr16
int3
loope
push
lret
lret
jno
mov
lods
sub
repz
pop
jne
daa
dec
cld
test
xlat
sbb
test
xchg
jmp
lea
jns
ja
int
mov
rolb
lret
loopne
lahf
mov
push
cmp
adcb
aam
loop
data16
xchg
jge
stos
lret
dec
stos
testl
mov
jp
in
sub
pop
jne
cs
jl
push
lock
insl
int
aad
fstps
add
test
adc
add
pop
mov
sub
lods
lret
test
in
cli
in
and
daa
mov
xchg
mov
pop
movsb
in
int3
inc
push
popa
ret
stc
in
ja
aam
int
rcrl
pusha
clc
addl
ljmp
lret
aas
iret
lods
mov
ffree
push
inc
jbe
jmp
mov
cmpsb
sbb
stos
out
dec
iret
lret
push
mov
cmp
iretw
cs
xlat
and
jo
and
stc
sub
sbb
movsb
xor
sub
xor
push
and
dec
or
std
test
imul
push
rol
in
and
mov
adc
sub
gs
inc
and
rolb
adc
divb
repz
mov
rcll
cmp
in
fnsave
loopne
out
or
or
aad
xchg
setnp
out
xchg
movsw
xor
daa
les
cpuid
xor
inc
adc
pop
push
sbb
lcall
xlat
insl
xor
cltd
jle
and
jl
push
adc
daa
icebp
jge
mov
gs
and
jo
xchg
or
jl
mov
mov
int
cmpsb
dec
sub
cmp
sahf
popf
xor
xlat
aam
test
enter
and
or
add
mov
rorl
lahf
xor
fdiv
dec
sub
inc
xlat
imull
and
xchg
sarl
fwait
testl
ret
pop
test
add
subb
les
out
xchg
push
pushf
add
jb
xor
pushf
mov
jp
outsl
lods
arpl
add
in
std
in
and
scas
in
inc
insb
jp
inc
call
scas
movsl
decb
or
pop
push
lahf
jle
scas
mov
jne
imul
jae
mov
mov
push
or
push
mov
push
add
add
jmp
imul
bound
icebp
and
and
mov
mov
pop
mov
pop
jl
jb
outsl
cmp
sub
sub
imul
divl
jle
ret
test
shl
ja
pop
sub
add
mov
jbe
xor
sbb
outsl
add
pop
jb
stos
dec
cmc
into
shrl
jno
mov
jmp
jecxz
mov
cld
in
cs
cmp
xor
push
inc
fcom
sub
cmp
push
sbb
lock
cltd
aam
pop
mov
ja
insb
ja
ss
xchg
push
mov
mov
push
push
pop
add
lea
or
fisubs
mov
xor
seto
xor
pop
jg
dec
mov
pusha
mov
sub
pop
lock
js
sbb
cltd
mov
sbb
fcoms
mov
mov
repnz
call
popf
jb
pusha
cmpsl
ror
add
jno
scas
sbb
or
mov
pusha
outsb
repnz
jg
dec
dec
notl
lret
aas
pop
in
mov
cmp
and
jns
sarl
ss
stos
imul
pop
addr16
lea
std
imul
call
add
inc
adc
in
mov
xchg
push
es
fs
insl
fmuls
mov
jge
adc
pop
repz
rcrl
clc
aas
aam
xlat
or
in
or
enter
imulb
bound
stos
push
fwait
dec
mov
mov
add
outsl
mov
mov
inc
lods
pop
sub
mov
cmpsl
jl
push
push
scas
pop
dec
int
jne
mov
mov
mov
js
cmpsl
push
clc
push
add
call
enter
add
movsl
stos
mov
leave
ds
ss
dec
test
sub
scas
test
mov
dec
lods
stos
lds
and
ret
push
mov
or
call
fisttpl
pop
fimull
mov
mov
mov
mov
dec
push
xchg
xlat
pusha
repz
mov
xchg
and
mov
dec
adc
std
sub
mov
add
and
cmp
pop
movsb
loope
push
jge
movsl
popa
fldcw
sbb
ds
cli
or
aam
stos
aas
inc
dec
add
and
imul
or
and
clc
sbb
lock
push
fisubl
mov
sub
shlb
iret
push
bound
push
cmp
int3
popa
mov
inc
cmpsb
lret
jbe
das
or
bound
inc
dec
xor
push
or
insb
imul
movsb
add
in
push
aaa
mov
sbb
push
fcomps
es
addr16
mov
sti
sub
cmp
xchg
add
out
fsubrs
dec
test
faddl
mov
cmp
out
and
call
shlb
push
sub
xchg
sarl
in
int
repnz
add
cwtl
je
filds
dec
hlt
xor
fwait
mov
mov
and
pop
or
push
sub
push
pop
loope
push
jle
in
pop
mov
test
fnstsw
or
adc
sbb
lahf
inc
or
repnz
loope
pop
jecxz
jl
pop
std
pop
sbb
mov
fcoms
and
xchg
pop
sbb
into
jg
mov
ror
andl
mov
mulb
fildll
sub
insb
loope
mov
call
pop
push
lret
lcall
push
incl
push
addr16
out
mov
lea
jg
adc
stos
pop
pop
xor
jle
push
push
mov
bound
add
adcb
fimull
and
out
mov
lret
mov
cmp
mov
sahf
pop
mov
or
shll
jmp
shrl
push
push
stos
lods
imul
loopne
es
mov
jecxz
pop
stc
sbb
or
fmull
sub
inc
jbe
fwait
push
cmp
mov
cmpsb
and
push
pusha
jecxz
insb
mov
in
xor
sahf
mov
adc
int
lock
cli
loop
cmpsl
adc
ds
pop
scas
aas
adc
xor
shrb
leave
pop
add
adc
shll
add
sbb
lds
xchg
dec
push
xchg
cmp
pop
cmp
mov
jae
xchg
movsb
dec
fimull
aad
push
adc
and
jg
mov
fmul
fistpll
daa
cld
xchg
add
imul
sbb
adc
jno
adc
jl
xlat
mov
inc
aam
adc
mov
aas
out
out
or
into
fsubp
mov
push
jmp
iret
pop
mov
add
fs
or
cli
test
adc
jbe
ljmp
fsub
ret
mov
scas
nop
out
inc
add
lret
sbbb
jg
insl
mov
add
pop
out
jo
arpl
rolb
add
loope
pop
rorl
xor
in
aam
dec
ljmp
js
xchg
imull
mov
pop
mov
sbb
fcmovu
lret
int3
decb
cmpsb
pop
jle
sub
ljmp
mov
std
cmp
cld
jb
dec
data16
mov
rcrb
pop
and
jecxz
inc
jmp
adc
shlb
fdivs
xor
lods
nop
fprem1
mov
test
roll
xchg
jge
push
mov
les
inc
jle
imul
pop
sbb
movsl
addr16
ja
shlb
sub
les
pop
jb
adc
test
dec
fstpt
jge
jbe
outsb
popf
dec
jno
arpl
mov
jmp
lock
fstps
sub
push
push
dec
cmp
aaa
out
lcall
into
imul
popa
sti
mov
cmpsl
in
jg
aam
fwait
nop
mov
push
cli
add
lahf
mov
dec
sbb
test
mov
jno
out
push
insb
jge
test
ss
mov
divl
repnz
decb
push
sbb
inc
pop
push
add
lea
in
neg
add
hlt
jg
call
pop
icebp
pop
ret
es
dec
jecxz
pop
sarl
dec
ficomps
jecxz
mov
js
or
addr16
nop
lods
arpl
xor
mov
fwait
shll
mov
jns
jb
aas
out
mov
fdivr
mov
sbb
ret
mov
lea
fstp
sar
dec
push
aam
and
lock
dec
xchg
or
dec
loope
es
adc
sbb
or
sub
pop
cmp
sbb
test
das
daa
popf
loopne
lahf
hlt
dec
dec
aaa
jecxz
sbb
cwtl
setne
int3
or
es
mov
je
ljmp
xchg
mov
and
and
lcall
pop
sahf
cmp
lret
add
movntps
iret
notb
jle
fbld
xchg
sub
jmp
xor
pop
jge
popaw
shlb
ficomps
xchg
sub
mov
pop
outsl
adc
es
push
repz
mov
and
sbb
sub
loop
shlb
test
insb
into
adc
fidivrs
out
int
cli
popf
add
out
popa
shll
xchg
ret
shll
and
add
cmp
lcall
in
fnstcw
sub
pop
xchg
push
mov
xchg
lahf
inc
ror
cmpsb
psraw
cs
fstps
inc
xchg
clc
lcall
mov
push
push
in
cmpsl
xchg
cltd
push
in
or
sahf
push
scas
mov
adc
ret
cmpsl
jl
and
xor
stc
mov
fadds
adc
and
push
les
test
push
push
cmp
sbb
in
push
test
les
xor
jne
std
push
rorb
repnz
insb
imul
stc
xor
repz
sti
in
hlt
sbb
sub
dec
les
cs
push
in
fwait
pop
xor
aaa
lds
dec
fmul
xchg
repnz
jae
shll
adc
lcall
mov
mov
jno
mov
rorl
scas
or
adc
lds
cli
shlb
adc
mov
loop
adc
dec
jne
sub
loopne
int3
or
jae
out
cmp
push
leave
fisubrs
push
leave
addr16
mov
dec
popa
mov
xor
shrb
scas
mov
or
lret
enter
std
lret
faddl
call
fsubrl
hlt
lds
aaa
jg
and
xchg
and
xor
add
pop
stos
and
inc
xor
xor
and
dec
cwtl
lods
mov
mov
sub
andl
mov
or
or
xchg
inc
or
inc
mov
and
mov
pop
cmp
data16
flds
stos
inc
mov
out
inc
pop
mov
das
cwtl
push
inc
mov
pop
xor
mov
in
cld
test
hlt
loopne
pop
mov
cs
mov
out
pop
ja
lock
icebp
divl
ljmp
or
jo
nop
iret
cmc
dec
mov
aas
cltd
mov
xchg
xchg
movsl
ret
push
mov
xchg
xchg
out
pop
cmp
shll
stc
pop
ret
mov
mov
cmpsl
push
ret
and
imul
mov
lock
push
sub
sahf
dec
out
push
inc
add
pop
xor
shlb
sti
xchg
jge
into
sarb
mov
sbb
aam
popf
mov
aas
add
pop
popa
aad
inc
push
xchg
test
es
test
add
sub
femms
dec
dec
shll
ljmp
lret
cmp
test
fwait
jg
mov
mov
ret
outsl
adc
xchg
mov
push
sub
leave
pop
pop
xchg
mov
jns
ficomps
jns
lea
movsb
mov
xchg
push
stos
movsl
inc
cli
lret
xchg
loopne
je
sbbb
xor
xchg
in
lahf
arpl
ljmp
cmp
divb
stos
jmp
mov
adc
jmp
mov
or
pop
cltd
jno
push
cwtl
divl
mov
add
sbb
or
sub
lea
arpl
repnz
pop
jo
mov
aaa
out
in
push
jle
shlb
das
dec
ret
jne
data16
bound
or
sub
inc
mov
icebp
mov
xor
cmp
stos
mov
mov
cs
nop
jle
pop
lods
ja
mov
dec
fucomp
test
or
subb
mov
push
sub
push
xadd
outsl
mov
push
mov
es
sbb
stos
mov
add
pop
and
or
xlat
leave
lcall
sarl
mul
sub
lods
lock
fildl
movsb
lds
pop
pushf
xor
push
cmpsb
test
mov
or
adc
nop
pop
inc
ljmp
fcoms
pop
jb
imul
inc
test
cmpl
add
dec
xor
cmp
out
pop
orb
pop
arpl
mov
hlt
testb
dec
insb
and
loop
shl
xchg
jecxz
and
cltd
mov
nop
call
addr16
mov
icebp
call
pop
xchg
cmp
dec
pop
popf
ret
cmp
dec
cmp
mov
ret
mov
sbb
dec
icebp
mov
mov
jae
insl
inc
hlt
push
out
add
lods
shlb
arpl
in
sahf
sbb
cmp
jae
cltd
add
pslld
xchg
pop
jp
iret
es
out
xor
mov
inc
loop
sbb
dec
test
jo
jb
or
push
fdivl
insb
push
js
insb
push
aad
push
pop
xor
jp
mov
add
test
xor
push
int3
outsb
jb
shl
push
inc
cltd
dec
mov
mov
fsubrp
test
sahf
adc
add
dec
outsb
mov
push
loopne
ds
test
cld
lret
pop
add
jb
dec
pusha
fwait
aam
ss
or
mov
xchg
xchg
dec
mov
decl
cs
rcrl
and
mov
xchg
jnp
mov
movsb
loop
ret
negl
jno
add
mov
pop
arpl
out
mov
inc
jne
dec
out
cmp
and
pop
nop
fisubs
mov
push
jne
pop
cwtl
popa
pop
test
mov
loope
pushf
out
and
repnz
xchg
stos
push
es
mov
out
mov
sub
and
xchg
pop
pop
daa
sbb
sbb
testb
cmp
jnp
fisubs
sarl
jne
test
xor
repnz
inc
sbb
mov
mov
lcall
fimull
data16
rorb
push
xor
mov
aas
cmp
repz
mov
xor
mov
push
adc
push
fstpl
stc
scas
adc
cmp
jp
lods
cltd
in
dec
jg
push
stos
in
ss
jp
popa
hlt
inc
jne
mov
nop
push
repnz
cmpsl
mov
jo
mov
popa
out
dec
dec
and
movsb
mov
outsl
xchg
rolb
lret
lock
fmulp
pop
pop
push
aaa
pop
adc
jne
fldt
xor
mov
mov
jae
xchg
fcmove
adc
leave
add
stc
ror
push
stos
cli
stos
stos
and
push
mov
jbe
dec
mov
fistpl
mov
add
jnp
and
push
nop
mov
xor
jmp
sbb
setb
lock
dec
push
sti
pusha
je
clc
cmp
push
mov
sub
ss
sbb
or
sub
push
scas
stos
push
sbb
shll
mov
cmc
lcall
mov
nop
fistpll
inc
xor
sbb
loopne
call
movsl
mov
add
dec
rcrb
jbe
js
hlt
add
shll
mov
mov
je
or
jg
aad
pusha
xchg
jecxz
jmp
outsb
dec
mov
inc
ja
lahf
cwtl
pop
add
lea
pusha
jbe
inc
cmp
xor
call
fsubrp
loopne
and
loopne
mov
cmpsl
inc
push
push
int3
cmpsl
adcl
push
decb
imull
in
cli
dec
orl
jp
repz
loope
mov
fiaddl
iret
pop
or
mov
mov
sahf
dec
dec
xchg
es
lods
sub
push
adc
ja
and
push
jmp
pop
xchg
push
ljmp
dec
imul
jno
mov
out
scas
sub
icebp
mov
cltd
aas
xchg
xor
cwtl
cltd
leave
pop
lock
xor
arpl
or
shrb
add
xchg
dec
mov
test
inc
rol
add
cmpl
mov
lcall
and
outsb
popa
fcmovu
mov
push
rorb
popa
push
sub
fwait
loope
adc
test
lahf
xor
sbb
adc
sbb
loop
xchg
test
loope
mov
xchg
push
loop
pop
dec
pop
mov
popa
xchg
jle
pop
cwtl
pop
fistl
jmp
ja
repnz
cmpsl
pusha
sub
xor
adc
movsb
rol
cmp
repnz
repz
hlt
movsb
fcmovnbe
cmp
hlt
jmp
in
xor
xchg
movsl
mov
outsb
in
out
insb
mov
lret
xchg
sbb
dec
call
mov
sar
mov
sbb
call
or
pop
add
repz
in
pop
data16
pop
ret
inc
push
dec
popa
xchg
cli
fsubl
out
sbb
cmp
cmp
xchg
or
popf
xchg
jo
int3
ret
pop
scas
push
adc
and
inc
lock
scas
mov
mov
dec
adc
lods
dec
mov
lret
and
iret
or
rcrl
mov
xchg
jmp
xchg
jp
scas
adc
pop
sarl
mov
mov
dec
and
xchg
or
cli
out
daa
incl
mov
insb
sbb
fcomi
push
mov
mov
mov
cmpsb
lret
arpl
adc
cmp
popa
jp
idivl
add
xlat
add
adc
rclb
fcoml
push
jmp
loopne
and
leave
lods
xchg
cmp
popa
lods
popf
dec
lds
dec
pop
jnp
cmp
cmp
js
ss
jle
lds
or
dec
sarb
sub
push
xlat
aam
xchg
test
aam
lods
xchg
pause
cmpsl
fabs
test
sbb
outsl
mov
mov
cmp
and
xor
repnz
cmp
into
iret
ja
ja
xchg
sub
dec
xchg
addl
jae
or
mov
cmp
leave
pop
dec
cmpl
movsb
ja
fs
mov
mov
pop
jo
sbb
pop
insb
mov
xchg
repz
mov
cmpsl
adc
outsl
mov
inc
lock
mov
push
flds
enter
dec
lcall
cmc
push
dec
inc
stos
and
jae
ja
rorb
xchg
sbbb
or
test
sbb
xor
add
xor
jo
sub
xchg
rol
fcoml
adc
ret
enter
jbe
push
adc
or
xchg
xor
xor
cs
pushf
mov
jge
and
aaa
pop
xor
adc
xlat
popa
test
add
rclb
movsl
xor
and
ret
sbb
xor
mov
icebp
test
jbe
gs
lock
aaa
mov
jae
xchg
adc
insl
into
es
push
pushf
xor
pop
ret
shlb
ret
stc
inc
rcll
adc
mov
enter
outsl
adc
sarb
xchg
cmpsl
aam
push
ljmp
push
mov
push
add
lea
out
loope
pop
aad
cltd
cli
xchg
int
jmp
mov
pop
sbb
iret
loop
cmp
mov
xchg
jmp
lret
cmp
sub
jo
scas
cmpsb
dec
dec
int3
mov
cli
divl
aaa
loope
je
and
jno
jmp
inc
sbb
popf
out
inc
loope
ja
lahf
and
sbb
add
mov
lcall
roll
mov
push
pop
iret
pop
pop
or
movl
mov
mov
shlb
or
leave
jo
out
push
pop
push
hlt
data16
sbb
sbb
mov
je
inc
sbb
xor
shr
mov
cmc
cmp
mov
shll
aam
add
aam
loopne
clc
in
adc
pop
loope
mov
je
xor
mov
mov
leave
add
les
inc
mov
xor
sbb
jl
int
and
jno
sbbb
leave
jb
test
mov
je
sti
mov
lods
call
mov
dec
fcoms
sub
xchg
sub
fisttps
jne
xor
fidivs
add
sbb
pop
xchg
daa
cmpsl
iret
aad
pop
push
inc
aad
push
jb
cmc
negb
cmpb
int3
lds
sub
shrl
dec
mov
aam
pop
stos
repz
out
mov
flds
mov
movsb
mov
xor
fsubrl
dec
add
push
faddl
daa
mov
mov
sahf
xchg
sbbl
or
out
inc
lret
push
mov
das
push
fsubrl
pushf
out
aad
adc
aas
jnp
inc
addr16
xchg
pop
sub
decl
pop
ffree
shrl
andl
adc
loope
or
test
outsb
lret
test
inc
and
lods
add
mov
loop
push
rcrl
jne
mov
xchg
imul
and
mov
mov
frstor
jb
in
pop
cmc
mov
fsubs
in
lret
jl
fisttpl
les
negl
dec
mov
fsubrs
mov
sbb
xchg
push
and
clc
jne
xchg
adc
fcmovne
jae
popa
push
adc
and
xor
add
les
push
ret
fdivp
xor
lcall
mov
mov
dec
jae
test
push
clc
mov
pop
andb
xchg
int3
xchg
mov
push
loope
jmp
clc
adc
mov
mov
iret
xchg
mov
jmp
dec
xchg
mov
mov
addr16
mov
xchg
push
test
std
imul
inc
and
mov
outsl
stos
js
xor
mov
dec
xor
dec
mov
jg
inc
pop
sub
or
cld
xchg
lea
mov
sbb
imul
orl
pop
mov
loope
repnz
and
jecxz
inc
xchg
sub
mov
mov
pop
xchg
out
int
cmpsl
fadd
sbb
dec
fsubrp
adc
gs
aam
fbld
inc
mov
repz
popf
xor
outsb
enter
jle
sbb
sbb
and
xor
push
xor
fsubrs
sbb
lret
setp
fisubrs
cs
lods
sub
icebp
popa
xchg
test
imul
push
rep
data16
inc
cmp
movsl
add
lods
das
push
adc
imul
gs
add
out
cmp
hlt
xchg
out
dec
mov
sahf
pop
test
mov
jo
sar
cmc
je
cmp
shl
lahf
fstpt
xchg
es
adc
ljmp
repz
les
rcl
and
ss
ljmp
sti
movsl
and
xchg
pop
aas
push
jmp
push
in
in
int
cltd
lret
fisubrs
xchg
inc
push
lahf
jg
xchg
repnz
dec
adc
inc
outsb
inc
lock
fs
lret
aam
jae
enter
and
pop
dec
push
test
sub
jp
xor
pop
mov
push
aad
clc
clc
sub
dec
adc
clc
mov
jbe
lret
push
push
or
xchg
add
rclb
mov
mov
idivl
pop
and
test
ljmp
and
xchg
loopne
cmp
push
mov
dec
pop
jo
mov
xchg
out
out
out
mov
mov
sarb
cmc
xchg
xor
xchg
ret
mov
cmc
push
mov
shlb
call
pop
divb
int3
add
lret
cmp
adc
pop
lods
imul
mov
pop
jmp
dec
leave
insb
into
insb
jl
inc
mov
jns
test
and
fnstenvs
sbb
loope
jl
in
out
sub
repz
jg
test
fucomi
insl
xchg
add
test
jg
dec
xor
sub
test
fcompl
add
loope
ret
or
cltd
pop
fiaddl
push
push
mov
insb
nop
and
sbb
lahf
out
mov
cmp
push
cwtl
enter
outsb
cmpl
pop
adc
mov
ret
inc
mov
and
adc
subb
sbb
cmp
fidivs
sbb
lahf
imul
xor
mov
sti
sub
or
fdivs
ss
and
filds
push
cmp
xchg
push
or
jp
jmp
xor
push
int3
arpl
jb
jecxz
outsl
test
mov
dec
inc
cmpsb
lock
loope
add
leave
repnz
pop
incl
out
xchg
xchg
test
leave
sbb
icebp
sub
mov
mov
mov
fstps
inc
sarl
adcb
dec
lds
push
jg
dec
push
inc
fistpl
bound
inc
mov
mov
cld
jns
scas
mov
out
push
imull
iret
xchg
ret
dec
shlb
out
sets
testb
insl
aam
add
stos
test
dec
jl
push
mov
movsl
or
cwtl
xor
jns
dec
xchg
push
sub
js
jnp
cwtl
push
pop
movsb
dec
xchg
push
inc
push
ret
std
xchg
in
daa
pop
iret
repnz
fbstp
pop
inc
and
lods
inc
or
loope
mov
sub
mov
inc
aas
addb
jg
dec
rcll
mov
in
addr16
jns
push
push
out
aas
dec
jle
pop
ret
jecxz
sarb
inc
sub
mov
test
in
outsb
and
push
sbb
dec
mov
inc
pusha
jp
sbb
xchg
rolb
and
dec
aad
stos
mov
sti
cli
or
fistl
je
iret
scas
aaa
pushf
push
xchg
gs
ds
push
rolb
ret
add
or
xlat
lock
movsl
xchg
dec
mov
jo
cmpsb
outsb
outsb
je
int3
dec
sub
push
pop
and
mov
or
xchg
into
clc
jb
mov
adc
aam
hlt
adc
mov
daa
mov
sahf
xchg
lods
test
xchg
xor
pop
jo
in
xchg
xchg
cmp
ret
xchg
inc
mov
nop
lods
jg
mov
push
in
in
lock
adc
fisttpl
dec
dec
mov
lock
pop
lods
stos
out
loopne
outsb
push
jno
mov
mov
dec
stos
sti
icebp
sub
mov
pop
cmp
and
and
add
push
loopne
insb
jl
pop
out
fldl
push
mov
sti
mov
xchg
lock
pusha
and
popf
mov
pminub
fstpt
fxch
sub
xor
adc
mov
or
xor
fildl
jmp
sbb
adc
push
and
lret
mov
je
pop
loopne
push
push
or
cltd
xor
sbb
movsl
test
jae
mov
add
clc
popa
hlt
mov
xchg
xlat
mov
mov
mov
xchg
es
aaa
je
xchg
scas
add
pop
mov
lret
xor
mov
sbb
inc
sub
jp
pop
xchg
pop
repnz
pop
in
and
and
pop
imul
sub
lret
pop
mov
pop
iret
mov
or
xchg
ss
mov
jle
fists
jp
pusha
and
sbb
sbb
pop
xor
outsb
or
sbb
jmp
lret
div
fldl
fdivrp
cltd
lock
xor
into
movsl
mov
mov
xor
jne
fwait
inc
scas
mov
push
mov
sahf
cmpl
dec
sub
mov
sub
jo
adc
clc
inc
stc
sub
outsb
add
sub
into
test
outsb
xor
push
mov
pop
or
sbb
mov
mov
pop
xor
mov
loopne
push
into
cli
fcmovb
fldl
ret
movsl
xchg
test
std
mov
ret
push
sub
int
test
lods
jge
or
adc
xor
or
in
mov
pop
imul
pop
dec
fcomp
outsl
cmpb
out
loope
insb
fs
mov
dec
jg
icebp
notl
addr16
mov
stc
imul
xchg
outsb
cmc
in
mov
in
push
pop
cvtps2pi
out
leave
fcoml
jo
and
push
ret
mov
xor
shll
add
lea
jbe
in
daa
enter
ror
adc
jg
insb
xchg
aaa
inc
or
das
out
inc
cmp
outsl
lds
inc
pop
aad
fcomps
icebp
imul
insb
jg
adcl
clc
out
test
dec
fisubrs
aad
mov
mov
repnz
mov
sahf
add
add
push
ret
in
jecxz
cmp
xchg
push
xor
addr16
mov
dec
dec
out
sti
jl
and
loope
mov
mov
cmpsb
push
mov
adc
ss
cmp
sbb
pop
fmuls
scas
sarl
inc
dec
popa
dec
pop
sbb
pop
stc
das
push
rolb
inc
clc
jl
mov
hlt
xor
xlat
add
mov
fs
pop
popa
sbb
outsb
push
adc
shlb
or
add
das
into
mov
xor
call
clc
sbb
repz
test
outsb
sbb
rcr
enter
gs
push
inc
push
inc
xchg
mov
outsl
scas
in
pop
stos
xor
cmp
mov
ds
insb
repnz
cmp
imul
ljmp
add
xor
out
rcll
push
scas
xchg
sahf
ds
jo
xchg
insb
imul
pop
mov
jmp
jge
lds
lods
and
test
icebp
inc
and
icebp
loopne
arpl
fldcw
pop
and
in
xor
pop
outsl
dec
in
test
ret
sahf
push
ret
shrl
scas
or
jo
adc
sbb
repnz
push
cmpsl
inc
xchg
lahf
movsb
iret
adc
movb
mov
jmp
jns
and
fistpl
inc
and
add
mov
mov
sbb
fdiv
gs
hlt
mov
cs
cmp
movsb
or
cmp
add
mov
push
cwtl
push
add
lods
cwtl
mov
dec
js
sahf
jge
mov
pop
mov
and
jmp
fdivs
adc
movsb
popa
aas
dec
pusha
cmp
lods
mov
outsl
aad
xchg
daa
adc
and
jmp
xchg
cmpsb
mov
lahf
jno
add
mov
fnstenv
mov
push
cmpsl
add
inc
dec
mov
xchg
fiadds
cwtl
scas
or
mov
push
pop
pushf
push
mov
hlt
in
mov
cmp
cwtl
cmp
sub
cli
or
mov
fnclex
les
dec
xlat
jecxz
xchg
gs
dec
orb
das
movsb
insb
pop
sub
add
jnp
sbb
bound
mov
addr16
fxch
nop
adc
negl
pop
dec
cmp
jmp
cmp
inc
mov
push
lods
test
pop
ss
add
mov
or
lret
testl
xor
cmpsl
ja
inc
inc
jnp
xchg
jg
mov
cs
inc
mov
push
xchg
mov
pop
and
pop
daa
xlat
repnz
pop
leave
xor
or
test
ljmp
imul
cmpsl
jl
add
xor
pop
pop
mov
pop
push
adc
and
lock
in
inc
dec
jmp
inc
xchg
es
movb
ja
pushf
in
mov
loope
frstor
cmp
or
bound
into
mov
call
xor
cmovnp
inc
mov
sbb
push
and
or
nop
loopne
scas
movsb
mov
lret
ret
hlt
repz
push
mov
dec
jae
lock
sub
fadd
notl
arpl
add
cwtl
jmp
dec
pop
data16
xor
mov
outsb
xchg
and
pop
pop
push
int
les
pop
sbb
fcomip
mov
outsb
jp
scas
mov
stos
js
push
pop
xchg
push
add
repnz
stos
mov
mov
sbb
sbb
aad
jecxz
rorb
pop
and
add
or
loopne
pop
jnp
shrl
or
enter
shrl
sub
mov
fsub
sub
out
xlat
scas
mov
xchg
repnz
das
cwtl
lock
xor
jg
testl
pusha
hlt
pop
int3
sbb
push
inc
push
shl
lods
popa
mov
xchg
stc
xor
mov
push
aad
fadds
imul
adc
outsb
imul
pushf
sub
movsb
addr16
imul
in
cmp
push
mov
data16
jmp
out
ds
int3
sti
insb
insl
inc
in
sbb
jo
push
pop
gs
movb
fstps
mov
push
xor
cmc
cmp
ljmp
xor
sub
push
xchg
or
js
jle
inc
or
xor
fwait
push
or
in
ret
lahf
insb
and
stc
xchg
jns
push
aam
js
inc
jecxz
sub
inc
mov
fcompl
movsb
insl
inc
mov
add
or
mov
cmp
int
ja
pop
xor
mov
lcall
mov
add
mov
xlat
cmp
hlt
jb
out
call
push
int3
andb
xor
cld
popl
push
and
int
mov
int3
cmp
imul
lea
insl
pop
jecxz
rorb
and
or
inc
cmp
dec
xor
aam
inc
dec
testb
imul
std
mov
xchg
in
inc
mov
jne
sub
mov
xchg
fcomp
int
mov
mov
call
hlt
add
jl
xor
mov
out
xchg
jle
lret
adc
push
adc
cmpsl
imul
xor
shll
sbb
xor
in
pop
movsl
mov
adc
imul
sub
mov
js
adcl
sbb
push
sbb
xchg
ficompl
je
mov
pushf
xchg
push
and
push
jb
jl
adc
xlat
in
test
jmp
pop
cmp
fnstcw
stc
sahf
aam
in
jmp
cs
shll
stos
stos
dec
cmp
xchg
enter
fisttpll
icebp
inc
out
aaa
push
cwtl
pop
shrl
enter
rcl
sahf
cmpsl
shrl
pop
jns
rcll
sbb
adc
or
lcall
loope
insl
shlb
out
push
cwtl
mov
icebp
dec
ljmp
out
adc
daa
sub
out
add
ljmp
ficoms
mov
xor
loopne
lret
jg
xor
sub
movntq
mov
fwait
mov
arpl
inc
add
movsb
or
xor
outsb
dec
adc
faddl
loope
and
ret
jo
leave
popf
jnp
adc
pop
mov
xlat
inc
ret
notb
mov
aas
push
pop
sbb
mov
cli
xchg
add
pop
xchg
repnz
fs
push
xchg
popa
decl
ljmp
ja
xchg
sub
jb
or
out
shrb
scas
xchg
jb
xchg
ficompl
movsl
aaa
ds
mov
enter
test
push
inc
xlat
cmp
push
aas
adcb
stc
fistpl
xor
adc
bound
xor
loopne
call
and
pop
mov
mov
stc
sti
or
lret
add
sub
sbb
out
xchg
ffreep
mov
inc
shlb
flds
cltd
and
movb
or
lahf
xchg
and
pop
cltd
shrl
add
mov
scas
out
pushf
mov
mov
mov
mov
jne
pushf
rclb
out
mov
aam
aaa
and
lds
lret
fisttpll
mov
jge
scas
add
xor
add
cltd
pop
fsubrl
and
pop
jno
test
popa
pop
mov
test
push
push
mov
push
dec
int
ja
sbb
jb
xor
fnstenv
lcall
and
dec
aam
lods
mov
add
cltd
and
jno
scas
in
fcoms
cltd
and
push
js
mov
jg
adc
mov
cmpsb
dec
or
subb
daa
lock
outsb
sbb
mov
xor
add
xor
out
ja
mov
fsubr
mov
push
dec
jg
xchg
mov
in
repnz
fmull
fnsave
out
shrb
pusha
lock
xchg
push
xchg
jae
jle
outsb
jno
movsl
ret
inc
cli
dec
rcl
fucomi
incb
imul
dec
jmp
int3
jbe
loope
stos
xchg
push
lret
daa
cmpsb
cmovl
pop
dec
pop
hlt
movsb
and
add
inc
lcall
pop
pop
pop
push
sarb
stos
ret
mov
add
xchg
add
push
arpl
std
stc
lcall
cmp
adc
je
stos
fstpl
xchg
idiv
pop
xchg
in
pop
jg
pop
jmp
imul
push
mov
movsb
xchg
cmp
jne
pop
mov
pop
mov
inc
popf
push
cltd
bound
stc
int3
lret
mov
xchg
xor
pop
test
lds
stos
cmp
xchg
inc
add
das
lret
shlb
xchg
ljmp
add
inc
loope
das
inc
aad
test
cwtl
stc
outsl
cld
lea
sbb
nop
daa
arpl
in
mov
adc
mov
sbb
or
nop
stos
je
imul
and
push
fstpt
je
push
and
jns
inc
or
sub
clc
mov
repz
push
push
xchg
imul
test
jne
rol
xchg
stos
push
xor
push
jne
out
lea
xchg
ja
iret
xchg
clc
mov
imul
shl
je
popf
popa
xchg
push
scas
xlat
sbb
das
dec
iret
jmp
out
xchg
loopne
arpl
mov
out
mov
dec
ja
js
adc
cltd
sub
dec
sbb
stos
das
push
ffree
popl
push
mov
sbb
xchg
stc
loop
add
jp
sub
orl
outsb
xor
call
cmp
mov
add
div
pusha
cmp
nop
fsubrp
jae
mov
hlt
sahf
cwtl
call
jae
faddl
cmp
outsl
jnp
loopne
add
inc
cmp
cmp
push
jns
or
sub
js
inc
push
mov
pop
ret
xchg
pushf
sarl
test
ret
icebp
int3
cmp
inc
mov
cwtl
and
adc
fcom
je
mov
cmp
lret
ljmp
pop
leave
pop
mov
pop
cwtl
leave
loopne
test
in
adc
jmp
out
push
movsb
mov
xchg
mov
mov
lahf
imul
shl
nop
xchg
xchg
sbb
sbb
out
sbb
js
pushf
aam
fdivrs
cmp
jns
cmp
or
sahf
add
es
test
cmpsl
enter
ror
popf
shlb
add
out
adc
out
push
xchg
popf
xlat
mov
lock
pushl
mov
mov
stc
iret
and
mov
jns
popf
fs
jle
xlat
or
or
lea
or
push
mov
sbb
cmpsl
imul
loop
data16
xor
or
cmc
cmp
popf
lea
mov
js
mov
cmp
ret
pop
fcmovnb
lahf
leave
pop
insl
in
cld
cmp
jnp
pop
aad
ror
dec
incb
daa
push
test
add
mov
pushf
sub
fcompl
dec
xor
nop
mov
stos
adc
div
int3
cli
xchg
mov
mov
mov
xchg
lods
fwait
cmp
pop
sub
dec
pushf
fcomi
shlb
mov
fidivrl
cmp
mov
ljmp
stos
leave
dec
movsb
inc
jp
lods
mov
std
adc
mov
outsb
or
daa
xchg
xchg
adc
lcall
je
xor
mov
or
push
mov
dec
divb
scas
out
dec
xchg
lahf
fiaddl
imul
jbe
sbb
ss
mov
pop
leave
and
cmp
xchg
push
insb
movl
mov
stc
xchg
loopne
mov
imul
mov
pop
pop
inc
insl
push
mov
sbb
cmp
nop
insb
pusha
lea
clc
push
mov
aaa
scas
sarb
test
fdivrp
dec
aaa
shll
addw
dec
push
push
adc
mov
loopne
je
lahf
test
pop
xchg
ret
stc
lret
xor
push
out
stc
movsl
bound
popa
lahf
xorl
cmp
push
stos
pop
jb
pop
rolb
lods
dec
jmp
test
jbe
add
fistl
cs
out
cs
stos
jecxz
fwait
push
movsb
pushf
leave
lahf
xchg
push
es
mov
js
jae
int3
sub
push
mov
test
xchg
sbb
daa
cmp
in
fists
push
xchg
mov
lret
call
or
xor
mov
xchg
or
mov
arpl
pushf
js
xchg
stc
xchg
cmp
test
testl
loop
pop
cmc
imul
mov
and
cltd
mov
mov
mov
pop
dec
addl
jmp
adc
cmp
fwait
or
shr
aam
aad
sbb
mov
pop
lahf
mov
pop
mov
in
xchg
les
adc
lahf
push
aaa
adc
scas
sub
mov
adc
insl
mov
jnp
push
sbb
loope
sbb
jns
adc
pcmpgtd
imulb
adcl
rorl
and
out
and
jle
loop
movsb
loop
push
andb
dec
lods
jmp
int3
out
ljmp
adc
les
stc
mov
repz
xchg
push
push
push
imul
fldl
inc
outsb
adc
ljmp
aas
das
lahf
mov
fs
xchg
gs
jg
sbb
sahf
mov
sbb
dec
daa
xor
mov
cltd
sbb
or
adc
or
and
cmp
pop
cmp
cmp
push
inc
jle
les
in
mov
xchg
jmp
fucom
rcrl
xchg
test
pop
fisubrs
and
dec
arpl
inc
daa
xchg
fistpll
jge
stos
repz
lret
and
dec
cli
lds
adc
dec
repz
dec
test
mov
cmpb
adc
fildl
and
push
dec
and
std
sbb
in
loopne
add
les
or
adc
cmc
icebp
push
clc
jmp
jge
into
les
out
xchg
fldl
jnp
stos
inc
idivb
mov
cli
insb
popf
aas
and
pop
xor
push
cmp
lcall
mov
add
xor
pusha
addl
jne
push
dec
gs
pop
shll
mov
js
pop
movsl
repnz
mov
add
or
pop
cmp
arpl
push
repnz
adc
add
pop
sahf
in
outsb
hlt
cwtl
xor
imull
dec
push
shrb
test
jbe
push
call
xchg
dec
xchg
adc
fisubl
mov
int
sub
jb
imul
outsl
iret
in
xchg
popa
in
push
jecxz
mov
xchg
mov
push
mov
push
pop
in
sarb
inc
test
js
lods
add
push
sbb
in
test
sbb
inc
bound
lahf
mov
adc
es
cmp
mov
xor
loopne
fdivrs
ljmp
mov
iret
xor
stc
shl
mov
pop
or
sub
mov
imul
and
sbb
add
popa
mov
cmc
aas
sahf
xor
std
mov
negb
or
pop
and
loope
or
mov
xchg
sbb
lret
pop
jecxz
mov
or
cmpsl
clc
mov
fldl
or
mov
adc
mov
cmp
pop
out
mov
test
orb
xor
cld
jecxz
sub
cmp
jg
mov
lods
jl
cmp
pop
dec
faddl
cmp
lods
sbb
outsb
out
adc
push
out
jge
add
pop
pop
cmp
jne
dec
cmp
testl
cltd
test
ficomps
or
es
sub
pop
fdivr
in
mov
mov
inc
repz
jg
addb
cmp
mov
pop
mov
pushf
pop
ss
push
inc
xor
out
dec
sub
mov
test
ror
es
dec
xchg
mov
adc
rcrb
aad
arpl
inc
add
jecxz
mov
aaa
cmp
lret
cmp
push
aad
js
lret
mov
mov
pop
imul
xor
in
cmp
ss
mov
inc
mov
into
int3
daa
test
stos
sbb
push
imul
xor
je
and
ljmp
and
pop
inc
outsl
out
pusha
xlat
adc
xor
aas
dec
cmp
adcb
xorl
popf
or
cltd
in
add
sub
xchg
dec
jns
add
push
push
sub
fisubrl
sub
repz
icebp
in
cmpsl
and
xchg
es
fwait
lret
push
jns
mov
out
sub
aad
test
cmpsl
add
and
aas
cmp
push
rclb
adc
or
in
insl
iret
insl
adc
inc
dec
test
clc
jae
cmpsb
ret
add
jo
sbb
test
out
push
dec
push
mov
movsl
hlt
iret
fsub
int
aas
adc
xchg
pop
stos
and
dec
pop
pop
sub
test
inc
adcl
add
lcall
and
push
enter
pop
and
pusha
ret
dec
xchg
push
mov
nop
mov
lea
inc
add
sbb
aas
adc
out
dec
jp
js
jb
adcb
push
repnz
sub
sbb
addr16
jnp
xchg
pop
hlt
dec
shrb
sub
cli
cmp
iret
add
dec
repz
shrl
cmpsl
push
lds
add
lock
sti
mov
aad
lcall
sbb
aam
pop
lods
push
dec
enter
insl
pop
adc
pushf
inc
or
outsl
jmp
and
fld
jmp
movsb
int3
mov
xor
out
sub
in
pop
mov
fldt
sub
xlat
lods
call
inc
push
mov
push
icebp
jbe
xor
test
inc
pop
and
repz
insl
pop
int
jne
jns
sbb
or
sub
adc
push
lods
adc
or
push
push
or
fcompl
mov
incb
mov
mov
pop
mov
fsts
hlt
data16
fldcw
inc
jmp
mov
adcb
cmp
shlb
push
push
xor
inc
andl
mov
loop
mov
clc
mov
jo
pop
outsb
fldt
pop
fs
inc
jp
adc
xor
outsl
hlt
cld
lods
int
xchg
or
andl
loop
lcall
and
in
cltd
cmpsb
and
add
inc
stos
sbb
mov
aas
mov
movsb
jle
pop
cmp
push
xor
mov
fwait
lret
cmp
and
cwtl
in
adc
push
int
add
mov
dec
stos
stos
mov
xlat
push
mov
mov
lahf
xor
inc
idivb
jmp
outsb
ret
inc
dec
pop
test
xor
push
mov
sbb
lock
imul
clc
xor
clc
std
data16
outsl
adc
imul
sub
sub
lahf
aad
push
pop
mov
in
sub
inc
lods
inc
adc
sub
push
shrb
cmp
loop
daa
mov
push
pusha
mov
les
or
lods
inc
adc
mov
je
add
mov
out
aas
jne
jne
fmul
stos
icebp
test
pop
pop
mov
lods
jnp
and
mov
sub
lods
clc
inc
data16
sub
pushf
stc
pusha
jp
out
lret
pop
mov
fmul
movsl
adc
xor
adc
sbb
xor
pop
nop
xlat
or
repz
inc
add
push
cmp
push
xchg
push
call
jne
shll
xor
iret
fdivs
xor
leave
mov
sti
orb
mov
lds
inc
sub
insl
test
out
mov
imul
hlt
xchg
add
push
xchg
sahf
xor
add
stos
jbe
fs
ja
xor
pop
scas
dec
out
lcall
adc
incb
and
push
mov
mov
out
enter
loope
call
mov
xor
call
iret
or
push
das
mov
aad
sbb
insb
inc
mov
sahf
pusha
xchg
dec
cli
sub
or
into
push
dec
fistpll
loop
push
jne
mov
sahf
add
mov
and
cwtl
push
sub
xor
in
adc
mov
sbbb
xchg
mov
jnp
jl
out
cmp
stos
jecxz
inc
sbb
pop
xor
mov
into
ljmp
pop
ja
lret
iret
pusha
test
mov
adc
mov
and
or
jmp
push
ljmp
mov
inc
and
orb
add
sub
jle
cld
cmp
mov
test
xchg
and
lock
xchg
ror
fisttpl
rolb
mov
jae
lea
jmp
nop
pop
test
ds
sub
mov
or
mov
jns
cwtl
sub
je
ljmp
cmp
jno
leave
faddp
sub
adc
out
ja
cmpsl
adc
mov
cmp
inc
inc
jge
enter
cmpsb
insb
inc
xor
ret
adc
inc
ss
push
imul
and
mov
inc
pop
cmp
fucom
enter
xchg
xchg
jnp
insl
daa
dec
enter
adc
mov
incl
mov
inc
push
cmp
shlb
xchg
cmp
sbb
ds
hlt
sbb
sub
jmp
lahf
iret
jno
jl
mov
cmp
nop
lods
scas
xchg
dec
inc
pop
sbb
repnz
xchg
out
dec
enter
dec
mov
fcomps
pop
int
dec
sti
pop
cmpps
push
mov
loop
xchg
lds
movsb
or
dec
cld
test
mov
das
push
jge
sbb
push
mov
je
popa
stos
xor
and
cli
and
in
out
mov
iret
shll
and
mov
sbb
xchg
sbb
jae
dec
mov
add
lret
test
pop
addr16
cltd
jge
pop
lret
stc
stos
cmp
in
xchg
out
mov
push
sub
lahf
sub
add
jne
xor
jmp
in
add
cmp
jle
dec
sarl
dec
pop
cmp
jne
subl
imul
cld
and
test
or
cmp
push
mov
pop
mov
cmp
fwait
repz
jbe
push
stc
in
shrb
js
jmp
sti
sub
xor
pop
jo
addr16
sub
sub
stos
and
cmp
pop
add
es
movl
xor
xchg
mov
dec
push
cmp
lods
cltd
cmp
mull
jge
add
sub
adc
subl
pop
in
inc
pop
imul
js
fstps
test
inc
inc
sbb
jb
jecxz
push
cmp
iret
mov
loope
pop
mov
mov
test
pop
xor
dec
mov
mov
aaa
or
fisttpl
mov
lea
jae
or
sarl
int3
decl
hlt
lods
out
cmp
outsb
cmp
aaa
enter
dec
lret
bound
jg
repz
sbbb
jge
mov
sbb
xchg
test
inc
fnsetpm(287
roll
xchg
mov
push
xlat
xor
out
int
inc
push
sbb
stc
outsb
xor
mov
mov
cmp
push
push
inc
mov
mov
enter
sub
popa
data16
mov
clc
mov
pop
out
dec
nop
out
rcrb
xchg
mov
in
or
mov
xor
rcrl
clc
xchg
cmp
les
xor
pop
std
lret
lahf
int3
sahf
mov
inc
add
inc
push
lds
add
push
fsubrs
sub
ja
out
push
pop
jecxz
pop
sub
rolb
and
div
mov
mov
iret
xlat
adc
mov
es
stos
jmp
notl
loope
cld
jo
loopne
and
xchg
es
shlb
cmc
mov
int
sbb
aaa
xchg
push
mov
pop
fadds
enter
int
roll
cmpsb
mov
sub
vmovupd
mov
aad
stos
sahf
mov
sbb
mov
sbb
daa
into
shlb
or
push
xorl
xorl
jb
mov
jne
or
lcall
popa
test
sub
fldenv
xchg
addl
cld
mov
mov
pop
or
clc
xor
jns
movsb
jle
sbb
icebp
adc
in
dec
leave
adc
into
int
es
fsubs
xor
add
push
and
inc
es
div
jge
outsb
stc
pop
jno
ljmp
jp
adc
pusha
mov
imul
xorl
sbb
insl
push
mov
aad
loop
jno
sbb
push
pop
pop
lds
cld
jecxz
xor
sub
ds
iret
dec
std
sbb
inc
inc
leave
dec
les
mov
ret
pop
inc
mov
mov
pop
mov
fisubs
adc
pop
fwait
ljmp
or
jp
int3
lcall
xlat
and
push
test
jmp
rcll
cmc
cli
cmp
scas
sub
or
mov
jbe
pushf
push
es
mov
lock
push
sub
xlat
ret
popa
dec
in
adc
mov
rcrb
ret
aam
out
mov
repz
out
arpl
pop
lret
out
push
in
push
sbb
inc
xchg
fisttps
mov
pop
pop
loopne
fs
shl
or
inc
cmp
mov
mov
dec
xchg
fsubs
pop
jp
mov
jmp
in
push
pop
sub
inc
mov
lods
lahf
loop
add
mov
push
cmp
mov
pop
rol
pushf
jae
aas
cmpsl
xchg
pusha
iret
int
mov
sbb
cmp
lcall
jl
pop
sub
fiadds
xchg
arpl
rorl
or
subl
ljmp
scas
jae
pusha
sar
sub
lods
mov
xor
iret
xor
fucomi
popf
test
mov
xlat
lahf
andb
adc
mov
cmc
sub
enter
dec
push
pop
and
push
sahf
cmc
mov
sbb
pop
test
jl
lods
sub
call
cld
mov
aas
mov
inc
int
mov
sti
out
stos
jle
ret
lods
mov
cwtl
mov
xchg
mov
dec
xchg
mov
cmp
and
add
iret
push
test
pop
ja
pop
divl
pushf
add
ljmp
nop
push
in
fdivl
clc
rorb
dec
stos
pop
sub
xchg
in
sbb
mov
faddl
jl
mov
pop
fstp
fsubrl
cmpsl
imul
outsl
scas
fisttps
add
pusha
test
mov
xor
out
aaa
cmp
inc
into
jmp
lret
xor
adc
push
jne
subb
fwait
xchg
or
mov
lahf
in
or
jne
jge
mov
ljmp
inc
ret
dec
arpl
add
jno
cmp
cmp
lret
add
sub
mov
fstpl
lock
mov
int3
sbb
xor
lods
xchg
inc
push
bound
popf
in
jae
in
lods
sbb
mov
jb
pop
cs
jae
sub
das
inc
adc
sub
mov
mov
js
lret
pop
outsb
sub
mov
out
enter
sti
mov
stos
scas
mov
scas
flds
dec
fldt
nop
cmpl
or
clc
incl
cmpl
xchg
push
jbe
sub
push
and
fidivrl
xchg
repz
mov
xchg
clc
repz
arpl
popf
cmc
aad
ret
mov
out
jbe
fstps
push
imul
add
movsl
lods
out
jecxz
mov
mov
mov
push
psubsb
pop
je
xor
bound
je
mov
xchg
pop
fdivrs
lock
push
inc
leave
lds
lods
scas
imul
out
movsl
in
bnd
in
push
scas
xor
imul
lahf
jg
sub
xchg
pop
push
rcr
xor
subl
add
jb
roll
mov
ds
ds
jge
cmp
imull
out
sbbl
sbb
pusha
sbb
push
cmpsl
add
mov
stos
or
xchg
pop
sub
xor
mov
in
in
pop
iret
jmp
lea
lcall
cwtl
outsb
outsb
test
lret
cmp
mov
popa
lret
je
xor
push
add
or
jnp
bound
jle
or
cmp
sub
iret
in
xor
push
les
fldl
jae,pn
mov
or
dec
jg
dec
jae
rcr
pop
push
jl
add
cli
sbb
insb
mov
push
pop
fstl
cs
dec
xchg
push
jg
aaa
fwait
dec
sub
add
sar
imul
or
inc
or
inc
adc
popf
test
insl
pop
dec
and
cwtl
ljmp
jle
testl
sbb
add
add
xchg
sub
sub
cmp
cmp
pop
loop
cltd
pop
sar
add
je
pushf
lret
jp
xor
jbe
mov
xchg
xor
adc
ljmp
scas
frstor
or
add
mov
jge
je
cld
shrl
mov
insb
mov
std
jo
arpl
das
jp
push
ljmp
pop
or
mov
fimuls
movsl
sbb
and
or
rcl
sbb
inc
int
lcall
scas
pusha
jmp
insl
mov
mov
push
lahf
insl
mov
inc
xor
aad
test
add
mov
xor
sarb
shlb
xchg
inc
push
xchg
add
cltd
repz
popf
ret
dec
out
push
stos
sbb
fldt
xchg
lahf
cvtdq2ps
aas
das
daa
outsb
push
stc
les
mov
sub
fsubl
sbb
xor
jae
int3
and
or
cmp
jo
imul
daa
jbe
js
dec
and
test
lods
sbb
shll
iret
add
sbb
and
mov
cltd
mov
push
pop
loope
cltd
data16
add
mov
in
shll
pusha
mov
push
pop
ret
cmp
mov
dec
out
jge
jns
les
dec
pop
cli
dec
test
pop
out
jge
mov
adc
or
adc
cmp
shl
stc
mov
enter
pop
imul
dec
int3
dec
and
inc
pusha
dec
push
xlat
hlt
cmp
push
and
rcll
sub
add
fbld
enter
inc
loop
out
jle
xor
loop
call
lcall
das
stos
ret
in
and
es
pop
js
mov
imul
mov
fucom
testb
adc
cltd
iret
repnz
daa
sub
insb
sbb
dec
cmpsb
stos
add
jp
inc
add
ds
lret
push
clc
mov
fsubl
sub
daa
pop
jns
scas
jecxz
xor
dec
xchg
xor
inc
xor
lods
repz
add
mov
and
add
sbb
rol
lcall
pop
sbb
mov
mov
mov
sub
mov
xchg
mov
push
ljmp
xor
mov
mov
std
mov
mov
gs
mov
adc
cmc
pop
dec
ljmp
sub
inc
imul
cs
xchg
dec
or
jns
insb
push
arpl
pop
adc
push
in
addr16
adc
stos
movsb
pop
sub
or
outsb
addr16
xchg
loopne
jmp
xor
shrb
jge
sbb
enter
loop
add
cmp
cmc
add
sbb
daa
pop
out
cmp
and
adc
inc
aas
inc
inc
loopne
mov
leave
aam
or
jmp
bextr
idiv
fmuls
jp
dec
inc
push
add
mov
vpmacsww
mov
mov
cwtl
jg
rcll
fs
xlat
sub
fdiv
iret
loop
pop
in
push
clc
cmp
sub
lcall
mov
or
mov
pusha
scas
and
xor
mov
in
call
in
out
into
in
pop
cli
inc
iret
sbb
lock
imul
je
enter
repnz
repnz
or
jl
ss
lods
mov
or
popa
cmp
scas
and
loopne
inc
push
lret
push
and
popf
orl
pop
sbb
dec
movb
pushl
mov
rcl
inc
fnstsw
jle
xor
xchg
out
adc
xchg
loopne
out
xchg
arpl
daa
daa
push
idivb
data16
xchg
clc
dec
mov
mov
mov
pusha
pusha
push
sbb
mov
hlt
popa
pop
sarb
sub
xchg
or
arpl
dec
popa
out
xor
lret
cmpsb
xor
inc
cmp
repnz
sbb
push
pop
in
imul
pop
lahf
sbb
ljmp
sub
ss
inc
notl
mov
fbld
std
push
scas
test
test
mov
add
mov
jo
lods
in
cmp
out
push
mov
xchg
outsl
cli
add
jo
jg
inc
adc
pop
add
or
aas
mov
push
sub
mov
mov
pop
xchg
enter
test
insb
imul
xchg
and
icebp
fistl
out
in
push
stc
in
jno
sub
lods
fs
add
sbb
add
fisttpl
lds
xor
pop
mov
cmp
testl
and
movsl
pop
out
es
jne
dec
lahf
hlt
mov
in
mov
in
mov
cmovb
add
popa
push
xchg
push
imul
or
jl
arpl
fistpll
sbb
jno
xor
into
sahf
ljmp
xor
push
arpl
jp
cmpsb
mov
jne
pop
add
popf
popl
sbb
out
std
mov
test
mov
in
daa
loopne
test
imul
packssdw
js
in
sbb
daa
fmull
sbb
aad
dec
ret
add
adc
sbb
mov
lea
pop
jg
pop
mov
xor
mov
ja
xor
shll
stos
in
int
in
sarl
cmc
popf
and
add
and
test
imul
pop
adc
sub
inc
mov
xor
jp
adc
nop
lods
dec
jae
mov
xor
movsb
inc
or
or
mov
sbb
mov
out
sbb
sbb
fldcw
fnstenv
arpl
add
sub
shrb
jae
loope
xchg
sarl
cmpb
test
gs
adc
int
push
in
addr16
mov
test
sub
lea
sarl
lds
incl
push
dec
xor
add
aaa
out
mov
call
cmp
fnstsw
into
and
cmp
nop
pop
fwait
bound
inc
lods
lods
lahf
popf
cmp
sub
jns
cli
mov
add
mov
outsb
jle
cmp
push
mov
pusha
jmp
cmp
popa
sbb
arpl
jo
lods
push
roll
outsl
in
fsubrp
mov
mov
jge
sahf
stc
into
xchg
xchg
xor
in
sub
inc
mov
movsl
jno
jmp
sbb
mov
mov
pop
shll
rolb
mov
dec
and
cs
jge
mov
shl
hlt
movsl
es
cmc
test
mov
inc
and
out
cmp
and
inc
scas
aaa
cmp
mov
adc
imul
scas
inc
mov
sbb
and
mov
insb
cli
mov
lods
jb
shlb
movhps
sbb
andl
xor
cli
mov
inc
mov
mov
sbb
jns
dec
pop
sahf
mov
mov
leave
mov
aad
pop
stos
scas
pop
fisubrs
sahf
xor
sub
mov
push
pushf
out
adc
in
and
push
nop
xchg
outsl
sub
adc
mov
mov
int
daa
jmp
push
movsb
inc
push
jp
in
in
arpl
mov
adc
adc
push
pop
mov
int
cs
and
sahf
sbb
jnp
mov
sbb
mov
hlt
pop
les
xchg
xor
cli
jo
call
sbb
adc
enter
xchg
jmp
aaa
cmp
jl
mov
imul
fsubrp
and
repz
cmc
xchg
or
cmc
sbb
gs
stos
sub
sbb
daa
sub
je
or
out
push
inc
stos
iret
mov
popf
icebp
jbe
das
das
sub
inc
sbb
sbb
jno
lcall
push
dec
and
movsb
cmc
jae
cmp
dec
pushf
and
inc
sbb
xor
jo
test
nop
das
xchg
cmp
mov
out
xor
int
jae
cwtl
stos
pop
shrl
movsl
or
fsts
pop
lds
test
pop
lcall
dec
das
clc
dec
sub
or
fisttpl
sahf
xor
test
jno,pn
or
xor
repz
mov
mov
leave
loop
mov
lods
shlb
stos
and
jg
loop
mov
sbb
push
ret
inc
pushf
cwtd
nop
inc
mov
and
sub
mov
pop
push
std
and
cmpb
inc
cli
push
sbb
mov
out
push
cwtl
iret
test
stos
cltd
mov
stc
pop
test
push
movsb
ljmp
xchg
lret
mov
shll
mov
xchg
jp
mov
cmp
cmp
dec
push
add
xlat
inc
mov
pop
pop
cmpb
sbb
negb
sbb
pop
dec
call
mov
aam
cwtl
push
lods
sub
inc
add
xor
and
jno
lds
js
mov
add
push
cwtl
add
sbb
cmp
stc
xchg
movsl
test
mov
push
insl
xchg
dec
lret
fadd
rcrb
mov
mov
xor
sub
mov
push
enter
and
enter
int
cmp
sub
imul
flds
sbb
fildll
insl
pusha
dec
int
outsb
dec
and
xorb
clc
push
lea
ret
jge
push
ret
dec
aas
ret
push
xchg
jg
mov
out
frstor
cltd
mov
std
jge
bound
in
pushf
cmp
sti
xor
jg
popf
and
add
ss
adc
push
aaa
fstps
insb
lahf
cmp
push
test
mov
scas
inc
mov
in
xabort
arpl
gs
fsts
mov
push
sub
cmc
sbb
shll
aaa
xchg
jge
xchg
sub
mov
mov
in
loope
mov
int
xchg
jno
and
xchg
inc
sub
sarl
pop
aam
adc
cs
bound
ret
aad
sub
divl
ffreep
fwait
cmp
imul
dec
movsl
jo
insl
shll
push
es
mov
sbb
jbe
mov
mov
mov
jns
adc
pushf
dec
lret
inc
mov
lds
jp
in
popf
xchg
fwait
xchg
inc
jmp
ja
xchg
popf
add
sub
mov
stos
xchg
insl
jbe
sarl
cmpsb
sub
xchg
lret
add
jge
inc
hlt
push
pop
pop
es
sbb
adcb
dec
hlt
insl
ret
push
xor
sub
pop
testl
dec
cmp
into
data16
ret
pushf
or
and
hlt
addl
stc
fstl
in
loop
ja
lret
sub
or
aas
dec
or
push
out
cmp
and
aad
movsb
imul
fmuls
jns
adc
xchg
ljmp
fs
adc
xor
mov
imul
cmp
xor
pop
adc
imul
push
xchg
mov
sbb
pop
xorl
mov
pop
inc
jae
movsl
rcrl
sub
lock
pop
sbb
aad
add
cmp
int3
xchg
test
sub
cli
daa
inc
lahf
sbb
cld
scas
mov
gs
dec
ljmp
lret
mov
pop
sbb
pop
mov
cmp
fnsave
sbb
aaa
push
pop
pop
test
sbb
jae
gs
push
into
push
mov
mov
jecxz
cmp
and
stos
call
pop
je
pop
pop
add
enter
testl
xor
dec
add
push
enter
and
mov
inc
mov
jns
mov
push
fiaddl
mov
mov
data16
mov
xchg
es
sub
sbbl
ljmp
mov
movsb
mov
bound
and
out
lods
push
pushl
and
push
mov
cmp
addr16
xor
sub
cmp
add
sbb
dec
dec
adc
jg
pop
xchg
push
jg
jge
es
cld
lock
sub
sbb
out
stos
mov
jg
push
mov
push
sub
ds
pop
cmp
repnz
push
movsl
subl
xchg
loopne
fneni(8087
xor
mov
add
and
loop
xor
cmp
xchg
mov
notl
sub
fndisi(8087
push
std
cli
out
ret
out
in
mov
xchg
cmc
fidivl
sbb
and
add
push
dec
clc
mov
adc
and
pop
xor
cmpsb
test
gs
jl
in
rcl
in
inc
pop
or
mov
cli
mov
scas
or
dec
in
pop
pop
outsb
pop
ss
std
or
inc
xor
cmp
push
or
clc
repnz
sbb
pop
mov
mov
add
sbb
outsl
push
ror
iret
and
jecxz
loop
jmp
pushf
aam
rorl
outsl
adc
je
mov
imul
in
ret
sub
into
ljmp
xor
mov
dec
jne
pop
sub
xor
adcb
sbb
sub
data16
mov
cs
shl
out
xchg
outsb
jg
add
mov
adc
mov
and
pop
dec
mov
sub
adc
dec
push
xlat
std
add
inc
sub
mov
xchg
pop
sub
mov
jp
pusha
movsl
inc
sahf
inc
xor
cmp
fidivs
cmp
adc
rclb
fmul
int
dec
iret
dec
pop
scas
repnz
inc
loop
jg
pop
rorb
pop
cmpsb
out
das
das
and
rcl
out
sbb
subl
pop
pusha
outsl
mov
push
in
jle
jo
scas
testb
in
mov
aad
jne
je
xchg
inc
cmp
iret
mov
mov
mov
jmp
sbb
and
sti
jle
mov
sub
sbb
sbb
push
push
sub
rcrl
mov
rclb
iret
fistpll
arpl
and
sbb
inc
jbe
xchg
pop
hlt
sahf
fwait
pop
into
idivb
xchg
icebp
add
rcl
dec
push
or
pop
xor
xor
or
xorb
xchg
je
subl
mov
je
pop
or
scas
cmpsb
std
bswap
mov
xchg
fs
mov
movsb
mov
cld
xlat
sub
cmp
xchg
xor
push
cmp
jp
test
faddl
or
cld
je
or
aam
and
loope
adc
xor
inc
push
xchg
cmp
nop
mov
or
jge
push
mov
arpl
jle
sub
rolb
ljmp
or
js
or
mov
ljmp
ss
dec
lds
push
pop
scas
cli
gs
out
dec
lahf
mov
lret
js
lea
cmp
jecxz
xchg
scas
cmp
push
sbbl
stc
inc
ret
popf
mov
push
sub
and
das
in
gs
mov
sub
cmp
bound
cmc
pop
rorl
mov
ja
ret
aam
pop
ret
fnstsw
inc
rcr
roll
cs
jle
test
dec
cmp
inc
popf
inc
andb
adc
std
sahf
imul
mov
mov
cmpsl
xchg
ss
fbld
fdivl
js
push
xor
xor
push
cmpsb
inc
shrb
pop
repnz
dec
mov
addr16
jmp
xor
fwait
icebp
pop
mov
loope
push
fcmovne
push
out
loop
std
xchg
pop
jo
call
xor
mov
push
cwtl
iret
fsubr
pop
jbe
xchg
and
lret
cmp
clc
and
add
icebp
dec
addr16
adc
mov
call
clc
outsb
sub
push
xchg
mov
cwtl
cwtl
gs
pop
fisttpl
push
xchg
add
fwait
or
rol
jbe
mov
rcrl
cmpsb
movsl
push
cmp
mov
arpl
lcall
and
pop
in
lret
or
push
iret
sbb
inc
out
or
lds
push
jl
test
mov
hlt
pop
call
cmp
daa
inc
aas
test
and
cmp
sub
and
mov
dec
fistpll
fdivs
dec
fcoml
adc
clc
adc
pop
or
inc
xor
mov
sbb
pop
xchg
out
jmp
pushf
je
cld
mov
cmp
jmp
sti
xchg
inc
inc
dec
cli
adc
sarb
cmp
sbb
jmp
outsl
lds
je
aas
mov
mov
push
and
jnp
cmp
ja
lock
cmpl
pushl
cmp
lcall
cmp
loope
insb
jnp
outsb
jmp
add
xchg
lea
adc
mov
stos
out
and
and
into
and
insl
iret
into
adc
dec
ret
lret
mov
mov
js
jle
call
sarl
test
jo
jl
inc
dec
sub
dec
adc
and
adc
outsl
adc
stos
pop
or
rorl
cmpsl
mov
js
lock
push
xchg
std
shrl
dec
or
jecxz
cld
inc
cwtl
fcoml
incl
jnp
pushw
cmp
sbb
mov
call
test
js
call
dec
fldpi
loopne
xor
push
subb
pop
fs
push
adc
or
popf
and
xchg
or
scas
pop
xchg
orb
or
addr16
jnp
mov
mov
push
insl
sti
cmc
das
inc
test
mov
in
mov
xchg
roll
pop
scas
jnp
out
orb
inc
subl
lods
fidivrl
movsb
xchg
jbe
std
testb
mov
ljmp
dec
bound
bound
xchg
pop
jle
inc
in
addr16
mov
lods
shl
dec
incb
fwait
cs
jl
lcall
or
dec
pop
adc
jbe
je
and
lcall
js
cmp
jb
imul
fstl
data16
add
fwait
imul
jne
dec
push
movsl
adc
push
les
and
cmpsb
and
and
cwtl
cmp
addr16
aam
dec
push
mov
sbb
imul
xor
sbb
adc
lods
mov
leave
into
and
add
pop
aad
sub
jl
push
adc
mov
mov
movsb
push
sub
scas
push
adc
mov
imul
sbb
inc
addr16
or
sbb
mov
iret
in
mov
lret
cmp
adc
in
clc
rol
shrb
xchg
clc
xor
jb
dec
cmp
cmpsl
mov
sub
dec
data16
jae
ja
rcrl
xchg
mov
adc
xor
xchg
lods
push
add
into
outsl
xchg
mov
test
lea
inc
xchg
popf
inc
and
push
sbb
fcomip
xchg
cmpsl
ja
ds
push
lret
insb
ds
dec
je
das
sub
cmpsl
inc
pop
xchg
pop
jne
lcall
and
test
scas
mov
jb
loope
test
into
adcl
pop
loop
test
push
shrb
xchg
xor
cwtl
mov
pop
cmp
fimuls
push
inc
adc
and
cmp
push
xor
std
pop
dec
cmp
ds
xchg
and
xor
sbb
rcl
sub
sub
xor
rcrl
movsb
stc
sahf
mov
jl
pushf
aaa
or
and
cmc
popf
push
repnz
pusha
sarl
jb
add
ret
mov
int3
stc
mov
jbe,pn
insb
out
dec
adcl
pop
mov
inc
push
jns
aad
add
inc
mov
loope
sbbl
test
int
loop
subb
scas
adc
lret
inc
scas
and
sub
cmp
aas
wbinvd
call
mov
or
push
or
dec
sub
or
rcrl
daa
fs
daa
pop
shlb
mov
popf
stc
mov
xchg
mov
into
pop
xchg
sahf
lret
daa
nop
xor
lret
outsl
nop
push
cmp
jns
imul
out
xchg
loope
add
push
sub
jmp
xchg
inc
cwtl
xchg
xchg
pop
pop
jmp
push
cltd
std
ret
std
pop
faddl
gs
mov
fistps
mov
in
add
icebp
dec
xor
cld
adc
inc
aas
sbb
push
inc
fwait
bound
sbb
in
stos
adc
das
movsb
hlt
ja
rcll
mov
popa
andl
mov
testb
in
jb
cmc
mov
std
scas
mov
add
fistl
ljmp
push
push
cmp
stc
fucom
xor
pop
std
in
inc
mull
sti
popa
jmp
icebp
cwtl
add
ja
lahf
inc
adc
mov
mov
push
sbb
mov
popf
ret
or
rol
xchg
stc
and
mov
mov
into
out
fisubs
out
stos
lods
fistl
pop
dec
mov
rcl
inc
mov
aas
cmp
repz
mov
mov
sbb
and
imul
pop
mov
sti
pop
aaa
add
mov
arpl
sbb
mov
addr16
mov
stos
jg
xor
std
xchg
into
or
or
mov
aaa
and
push
and
jp
or
mov
dec
sub
cs
fwait
push
push
push
pop
push
and
outsl
fcoml
adc
pop
sbb
loopne
jae
and
adc
std
or
out
push
in
add
xor
popa
add
cmp
mov
sub
mov
cld
aas
sbb
xor
ret
cmp
ljmp
incl
cmpsl
popf
mov
mov
lds
xchg
rorb
shlb
insl
push
fnstsw
repnz
adc
test
mov
and
inc
bound
pop
lcall
je
sti
cmp
add
scas
cmpsb
loop
lahf
bnd
js
add
add
gs
scas
inc
jle
sbb
jg
sbb
add
aad
mov
mov
jmp
mov
xor
add
mov
pop
mov
dec
insb
push
cmpsb
push
sub
mov
push
enter
fadd
push
mov
jbe
in
adc
mov
push
adc
into
in
cmpsb
mov
aam
mov
push
popf
and
pop
sub
add
fisttpl
mov
loop
enter
out
adc
add
andb
jge
xchg
pop
jle
int3
adc
push
mov
rclb
jp
pop
jecxz
lcall
push
loope
fsubl
rcl
into
jmp
addr16
pusha
cmp
lods
jmp
sahf
inc
imul
hlt
sbb
out
push
jmp
pop
movsl
inc
xchg
fdivl
inc
repnz
fists
and
cmp
movsb
push
in
fcomps
test
and
out
test
insl
push
jns
push
test
or
ficompl
pop
repnz
in
in
divl
bound
pop
imull
test
pop
push
jb
arpl
repnz
pop
mov
dec
xchg
xchg
pop
dec
loop
loop
pop
adc
jp
insb
in
out
pop
call
xor
xchg
pop
or
pusha
sub
mov
inc
dec
jmp
dec
jmp
xor
push
dec
cli
and
cltd
or
pop
mov
dec
in
aas
andl
movsb
loope
lret
pop
pop
inc
or
fimull
mov
enter
mov
adc
jno
push
add
and
mov
mov
movsl
loope
ret
mov
add
jp
xlat
pop
xchg
stos
sbb
cmp
mov
adc
cld
mov
data16
aam
dec
rorb
cwtl
test
jp
movsl
arpl
or
xlat
rcll
stos
jge
test
stos
jmp
sti
add
setge
rclb
das
cmpb
sub
clc
imul
pop
shrl
mov
add
xchg
fs
xlat
sahf
lods
dec
mov
movsb
out
cmc
sub
into
mov
aam
pushf
add
popf
dec
adcl
jg
pop
mov
xchg
jmp
hlt
lods
ljmp
cmp
test
xchg
sti
jb
ja
fists
insb
lods
lahf
xchg
xchg
cmp
stc
repnz
jne
scas
or
xor
jg
mov
hlt
and
xchg
test
pop
add
decl
cmp
xor
testl
xchg
lock
movsl
movsb
orl
sub
and
fwait
mov
divl
push
ss
inc
sub
or
cs
inc
adc
mov
lea
ss
push
ds
mov
jbe
orb
and
push
scas
cmp
addr16
cs
dec
xlat
or
jg
in
pop
ss
cmpsb
mov
dec
pop
add
dec
pop
inc
imul
sub
or
sbb
and
outsl
cmp
enter
aaa
pcmpgtb
in
in
hlt
pusha
add
xchg
jg
inc
mov
mov
shrl
jo
sti
mov
cmp
shll
push
iret
clc
mov
jl
ret
mov
jbe
rol
std
lret
popa
dec
fimull
leave
cmpsl
cld
std
inc
adc
mov
fwait
cmp
imul
ds
cmc
movsl
movsl
cmp
aaa
inc
and
sbbb
jbe
inc
ljmp
mov
enter
mov
stos
dec
add
add
jno
push
sub
pop
repnz
add
add
addr16
jecxz
stc
cmp
sti
fnstsw
mov
lret
sub
cmp
mov
insl
push
ljmp
fcompl
call
or
or
xor
int3
inc
sarl
fs
es
pop
push
inc
icebp
dec
rorl
sub
loope
cwtl
mov
ss
ret
adc
in
icebp
lcall
les
xchg
pop
dec
adc
mov
push
mov
xor
repnz
loope
test
popf
stos
test
pop
loope
push
insb
imul
in
int
push
add
or
shlb
icebp
and
ljmp
sub
loopne
cmpb
jle
and
es
lret
adc
fnsave
add
ds
cmp
xor
pop
sub
ret
test
mov
call
sub
mov
pop
lock
mov
sahf
ficompl
andl
dec
cmpsb
inc
fsubrs
jno
loopne
pop
lds
mov
inc
lret
push
xchg
outsb
mov
and
loope
xor
jle
inc
ret
in
nop
cmp
lock
fs
sbb
dec
fs
es
dec
mov
cmp
cmp
xor
rcrb
std
mov
or
rcll
call
rolb
sub
cmpsl
cltd
add
inc
pop
ret
adc
enter
inc
dec
ror
repnz
inc
and
mov
cmp
testb
jecxz
mov
mov
adc
popf
test
xor
fists
cmp
jno
lea
pop
insl
lret
jb
mov
leave
mov
test
call
test
mov
or
pop
stos
je
dec
push
shl
mov
jp
test
sahf
push
stos
out
add
cmp
loope
call
mov
mov
ret
push
lcall
lds
ja
mov
mov
testb
and
shll
lret
dec
add
jo
mov
sub
add
roll
sahf
aam
sbb
add
leave
movhlps
movsb
ss
call
dec
pop
mov
lock
sbb
addr16
jl
movsb
inc
stos
scas
pop
fwait
mull
mov
jb
push
in
rorl
or
mov
daa
xorb
pop
push
add
adc
cmp
pop
fld
xchg
sbb
js
mov
push
adc
adc
push
stos
pop
sbb
or
xchg
fistpl
xchg
jmp
adc
pop
and
sbb
add
movsb
inc
sub
cmpsl
mov
in
roll
mov
scas
bndstx
fs
jno
aam
adc
mov
pop
mov
aas
subb
les
jl
or
inc
sub
cmp
out
mov
pusha
popa
ja
mov
push
inc
xchg
fildll
mov
add
lahf
stos
into
movb
cmp
push
dec
adc
cmp
cltd
aad
mov
sbb
jno
pop
aam
ljmp
inc
push
mov
adc
pop
js
jo
in
push
mov
xchg
sti
jmp
cli
aad
jno
int
iret
jb
jne
sti
sti
xor
xorl
shll
inc
jg
rorl
cmpsb
loopne
dec
jb
or
fsubrs
pop
mov
stc
push
cmp
jmp
data16
dec
fcomi
sub
aam
aad
in
dec
pop
repnz
xor
cmp
out
mov
pushf
xor
and
imul
xor
push
mov
ret
cwtl
adc
adc
adc
pop
movsb
int
mov
mov
lcall
mov
iret
scas
shl
ret
xor
inc
xchg
push
pusha
shll
mov
lret
and
imul
fs
nop
jno
pop
push
jb
or
xor
ret
lods
sub
out
daa
fcomp
cld
add
in
addr16
sub
pop
push
scas
iret
loop
dec
mov
jnp
xchg
jmp
ja
jle
mov
stc
cmp
out
fwait
idiv
shlb
lret
in
popa
neg
or
jge
or
lea
xor
push
mov
pop
lcall
push
iret
push
jl
lret
adcb
aas
sub
pop
testl
jb
cmpsl
jle
int3
outsl
sbb
in
adc
xchg
push
and
stc
sub
aam
pop
in
add
enter
fisubl
jb
lds
aam
shrb
jge
jno
das
js
ficoml
pop
loop
filds
mov
hlt
aad
xchg
out
out
mov
and
and
sbb
loopne
add
sbb
inc
pop
add
cmp
fnstsw
ja
fs
and
push
sub
add
dec
mov
dec
xchg
daa
outsb
daa
dec
xchg
mov
mov
es
mov
cmp
xchg
loopne
xchg
sub
ljmp
mov
daa
cli
add
and
enter
cmc
shll
aaa
in
pusha
subb
pop
imul
mov
hlt
mov
cmp
jne
test
loopne
or
pusha
pop
dec
adc
out
int3
xor
add
lea
js
ret
jno
pop
loopne
mov
jbe
mov
xchg
clc
jb
cmp
xchg
xchg
or
daa
push
jnp
mov
cmp
fisttps
pushf
idivl
or
xor
pop
iret
repnz
data16
cmp
mov
cmp
loopne
and
aad
outsl
sub
cmpsb
insl
mov
push
push
jnp
orb
sbb
lahf
xchg
loop
sarl
mov
push
mov
and
push
pop
push
inc
mov
scas
pushf
lret
xor
mov
inc
adc
andl
fstps
jb
xchg
incl
sbb
test
aas
push
push
int3
mov
push
stos
jp
shl
sti
sarl
mov
or
add
and
adc
outsb
pushf
out
xor
insl
pop
mov
mov
mov
mov
adcl
pop
insl
or
insb
aas
js
lahf
ret
mov
dec
mov
xchg
cs
je
and
sub
cmpl
and
lods
scas
dec
js
jb
cli
out
sbb
nop
push
js
repz
adc
imul
fiadds
pop
daa
loope
cmpsb
ja
aad
pop
aam
pop
std
ss
sarw
mov
test
mov
insb
dec
incl
ret
pop
xchg
sahf
and
pop
adc
or
xorb
fsub
push
push
xchg
mov
cmp
adc
or
pop
xorl
fstl
push
mov
push
xlat
es
push
push
sub
in
inc
xor
push
lock
insl
roll
stos
push
xor
xor
inc
push
push
cmp
ja
into
mov
mov
push
dec
mov
negl
pop
lock
mov
push
xor
adc
push
arpl
fmuls
lcall
xchg
push
pusha
and
cld
xchg
stos
adc
push
mov
ds
mov
cmp
mov
pop
and
ficoml
out
jno
in
scas
subb
pop
mov
push
ficoms
mov
mov
maskmovq
mull
sub
xor
das
and
scas
mov
xor
cmpsl
jns
mov
push
lock
pusha
stc
hlt
ds
xchg
sub
fimull
mov
ja
pusha
push
insl
dec
or
clc
aas
pop
mov
inc
sub
add
scas
je
pop
adc
or
fs
mov
add
push
lods
or
loop
xor
dec
orl
sbb
pop
xor
jp
leave
hlt
sbb
lds
lea
gs
adc
mov
xchg
cmp
push
hlt
clc
sbb
dec
pop
xchg
test
mov
mov
lahf
xchg
out
jns
shrb
loop
fisttpll
testl
fcmovb
jb
jl
fcomps
pmaddwd
fcmovnbe
and
lock
or
les
dec
dec
lea
mov
mov
xchg
jle
lea
fdivs
pop
jb
mov
adc
scas
cmp
jl
pop
or
and
mov
cmc
mov
shl
daa
xchg
aad
mov
xor
jp
lds
jl
ss
mov
out
andl
or
imul
mov
mov
sub
pusha
pop
icebp
test
xchg
adc
insb
inc
test
adc
fdivl
cmp
clc
xchg
add
shlb
mov
into
ds
push
and
test
xchg
stos
out
mov
into
enter
mov
inc
pop
rclb
stos
cmpsb
mov
xor
and
repnz
cmc
mov
insl
sub
and
pop
fiaddl
int
push
sbb
lods
adc
call
scas
mov
xchg
cmpsb
aas
rclb
mov
sbb
add
jecxz
cltd
dec
jecxz
daa
es
and
out
std
je
jns
add
pop
adc
mov
or
mov
shlb
sub
and
dec
insl
repz
inc
loopne
dec
stos
push
push
sub
mov
stos
stos
jnp
je
idivb
out
ljmp
jnp
add
or
dec
jp
cmpb
test
shll
repz
sahf
xor
loopne
or
pop
adc
xchg
outsl
in
xlat
adc
xor
fidivrl
pop
cwtl
in
lock
test
dec
lds
pop
cltd
jae
lahf
mov
cmp
and
mov
jbe
add
repz
jmp
adc
sahf
sub
aam
cld
jbe
sbb
mov
lods
pop
mov
addb
push
rorb
ds
adc
stc
ja
or
mov
jae
xor
mov
cld
xchg
rorl
jle
mov
xor
movsl
jg
aam
gs
pop
stos
adc
xchg
jbe
jmp
jae
push
dec
pushf
cs
or
lods
sub
inc
in
push
push
int
pop
dec
mov
xchg
fs
mov
into
xchg
xorl
xchg
dec
sub
mov
and
bound
sbb
scas
ss
and
call
out
add
ret
xorb
cmp
jbe
inc
stos
jge
out
mov
leave
pop
inc
pushw
push
cmp
jmp
add
int3
mov
dec
sahf
mov
scas
pop
les
mov
fdivrl
mov
xlat
leave
lea
pop
ror
hlt
cmp
jno
fimull
xchg
aam
lods
pop
pop
jo
out
hlt
imul
lea
shlb
inc
xchg
and
sbb
iret
sub
enter
adc
cltd
sub
cmp
mov
cmp
dec
scas
mov
adc
dec
jnp
stos
fdivrs
bound
mov
cmp
adc
cld
loope
cmp
stos
mov
fnstsw
aas
fwait
pop
sub
fwait
or
cld
test
repz
filds
mov
sar
hlt
outsl
aam
fwait
sub
push
sbb
stc
lock
push
ljmp
cmpsl
rorl
je
pop
pop
add
orl
cld
ret
out
pop
movsb
pop
out
daa
mov
mov
divl
mov
pop
subl
or
test
jae
fs
rcll
sbb
call
mov
shrb
gs
ljmp
jnp
mov
mov
sub
stos
js
aas
jae
mov
pop
inc
add
mov
lea
imul
jno
or
sbb
lods
xor
cs
and
loop
insb
xor
xor
add
repnz
xchg
xchg
scas
xlat
xchg
mov
mov
insl
push
jne
xchg
std
dec
test
and
out
test
pop
es
xlat
lock
sub
xchg
aad
fst
pop
movswl
mov
imul
mov
cli
xchg
xchg
push
adc
rcrb
in
cmp
cmp
subl
ja
pop
data16
scas
xor
mov
push
mov
sub
mov
mov
loop
and
inc
fisubrl
repz
cmpsl
aaa
mov
xchg
xchg
aaa
xchg
mov
mov
lret
pop
arpl
dec
push
dec
fdivl
mov
mov
aad
testb
in
orb
pop
jo
sbb
jb
xor
jmp
xchg
aad
add
hlt
call
jns
subb
sbb
jbe
pop
inc
ss
pop
mov
es
imul
or
stos
pop
or
mov
cli
adc
xor
cmp
lret
or
pop
lahf
lods
out
mov
shlb
or
sbb
ljmp
sti
pop
dec
dec
mov
lea
cmp
out
sbb
mov
mov
cmp
sub
sbb
icebp
dec
fists
ss
les
xchg
pop
push
aas
add
divb
lret
sbb
push
movsb
sub
rcrb
or
or
dec
xchg
test
out
mov
cmp
xor
daa
push
xor
push
arpl
daa
pop
test
push
sar
rcll
sub
jb
or
xchg
stos
in
es
out
or
fimuls
push
jle
mov
dec
inc
add
jmp
outsb
fiadds
movsb
ljmp
or
sbb
out
mov
and
aaa
adc
mov
test
cmpl
dec
jno
cld
imul
bound
inc
jns
punpckhwd
stc
aam
inc
mov
add
jns
vcvtsi2ss
outsl
jb
sbb
sub
adc
and
lret
mov
cwtl
sbb
pop
sbb
xor
in
or
lock
fmuls
and
roll
scas
mov
or
aam
pop
dec
cmp
add
es
mov
bnd
jmp
or
test
inc
add
cwtl
push
icebp
pusha
lods
and
hlt
adc
mov
sub
cmc
fldenv
cmpsl
push
test
push
mov
cs
push
mov
inc
pusha
jp
mov
fs
nop
lcall
lret
or
xor
push
sub
test
push
test
and
push
popa
sub
mov
mov
sbb
cmc
fs
xor
mov
adcb
cli
and
in
push
divl
jge
dec
pop
cmp
shl
xor
or
mov
push
mov
and
xchg
data16
mov
xchg
push
add
mov
ja
rolb
mov
shlb
test
adc
lret
or
lea
fildll
inc
jns
outsb
movsl
dec
xchg
xor
cmc
push
mov
dec
or
push
xchg
call
and
xchg
mov
and
inc
insb
xor
cmp
jns
aas
data16
pusha
push
aaa
cmp
loopne
mov
fidivrs
cmpsb
inc
xor
pop
push
adc
dec
xlat
cli
adc
adc
out
sub
cli
mov
mov
lahf
inc
xchg
adc
ds
adc
pop
mov
nop
inc
adc
in
jge
cmpsl
push
add
sti
cmpl
adc
sbb
cli
mov
inc
sub
inc
mov
ficoms
scas
test
xchg
pop
cmp
js
xor
adc
cltd
cmc
fistps
in
loopne
mov
outsl
xchg
scas
cmp
mov
adc
mov
test
add
push
inc
fisttps
out
dec
lds
dec
in
popa
inc
sbb
inc
loopne
loopne
mov
cmp
movsb
pusha
push
or
cmp
push
jle
inc
sbb
push
test
test
xor
mov
imul
xchg
sub
lods
data16
mov
jg
aas
pusha
pop
fxch
xchg
pop
jns
sbb
adc
fnstcw
cmpsb
cmpsl
rorb
push
fldcw
imul
dec
xchg
shll
push
cmp
bound
gs
cld
inc
inc
test
outsl
mov
les
and
xor
add
adc
xchg
cmp
add
adc
movsl
pop
pop
inc
sarb
push
std
andl
fstl
adc
imul
mov
mov
push
into
pusha
inc
pop
jae
sub
std
and
daa
fs
std
pop
mov
sbb
es
dec
test
jp
out
and
lret
jae
xchg
ja
fisttps
es
mov
data16
mov
and
mov
pop
pop
pusha
aaa
pop
dec
outsb
add
and
cmpsl
mov
ret
cmp
add
test
push
out
ss
fistpl
shrl
xchg
fisttpl
stc
jg
fsubl
lcall
push
aaa
loopne
lcall
int3
dec
sub
int
lds
ja
ljmp
das
add
dec
les
ror
dec
imul
vmovd
gs
push
testl
loope
add
push
dec
lret
aas
cmp
in
add
mov
jmp
pop
mov
leave
mov
fisubs
pop
or
and
data16
jns
fsub
pop
xor
lahf
jae
jge
adc
sbb
aam
xor
mov
test
sbb
jns
into
dec
pop
sbb
and
shl
add
add
cmpsb
rcl
into
test
mov
dec
data16
gs
in
les
ficomps
xchg
in
jecxz
jns
in
gs
stos
xchg
sbb
pop
cmp
mov
icebp
mov
lret
sbb
fistpl
jb
insl
mov
sub
daa
cmp
cmc
fcomip
mulb
fsts
mov
push
mov
lret
fistps
dec
aaa
dec
icebp
cmc
pop
stos
lahf
clc
ds
sbb
dec
insb
mov
add
lret
pop
loopne
push
rcr
mov
mov
scas
orb
cld
sbb
aaa
bound
jbe
pushf
insb
lds
sub
and
mov
fwait
adc
ja
insb
sub
adc
mov
or
push
leave
pop
orl
jnp
incb
outsl
outsb
sub
inc
cwtl
sbb
mov
mov
scas
enter
mov
cmp
cmpsl
mov
lret
fdivrl
sbb
aad
push
lret
popa
mov
shlb
icebp
jecxz
inc
in
jge
aas
mov
imul
mov
shlb
mov
aaa
push
push
or
or
and
je
into
data16
push
jmp
xor
cld
push
in
neg
lods
xor
test
and
xchg
push
push
mov
testl
insl
mov
adc
lods
xchg
push
inc
js
and
push
fadds
pop
or
ret
leave
lret
rclb
ljmp
sub
cltd
mov
and
and
cwtl
mov
cmp
shlb
aad
mov
dec
pop
sbb
mov
jo
xchg
paddusb
xchg
fnstsw
je
mov
jns
mov
cmpsl
sbb
push
mov
shll
jns
in
xor
cmp
inc
popf
mov
into
add
xadd
push
xchg
push
aas
adc
xor
popf
call
scas
pop
push
xchg
outsl
lods
sbb
mov
and
and
in
xchg
clc
clc
shlb
sub
jp
push
ss
dec
pop
fwait
cli
pop
xor
pop
pop
xor
mov
mov
or
and
lods
xor
xchg
cmp
cli
scas
add
push
aas
leave
lcall
mov
stos
add
xchg
scas
iret
aam
add
std
in
adc
xor
push
pop
js
xchg
mov
insl
ds
rcrb
cmp
sub
nop
cmp
push
jmp
jge
cmp
mov
loopne
add
popf
lret
inc
mov
pop
add
rcrb
add
xor
imul
mov
add
aaa
pop
notb
test
adc
mov
jns
push
loope
sbb
or
in
in
and
xor
orl
sbb
adc
or
ret
bound
mov
ljmp
push
lock
incb
mov
or
adc
mov
cmp
mov
push
outsl
adc
mov
mov
test
test
pop
loopne
sub
adc
rolb
push
les
mov
push
cwtl
jmp
dec
lds
adc
ljmp
lods
xor
dec
das
push
scas
dec
xor
add
push
roll
out
mov
add
sub
mov
mov
cmp
push
inc
jge
dec
mov
imul
xchg
dec
insb
mov
inc
pop
ljmp
outsb
and
cld
dec
sbb
aad
xchg
ja
fistps
es
loopne
shl
stos
out
andb
lahf
adc
xor
jo
jae
jmp
popa
loopne
dec
mov
mov
in
inc
cmc
mov
decb
mov
sub
mov
xchg
adc
pop
insb
test
mov
lods
dec
std
test
mov
xchg
aad
test
push
outsb
repz
je
cwtl
jge
popa
and
pop
mov
mov
outsb
mov
sar
mov
sub
jnp
aad
lock
and
sti
in
jl
mov
ret
aad
pop
test
lea
addr16
xchg
push
repnz
adc
mov
push
cmp
and
push
scas
jp
adc
inc
jns
data16
stos
xlat
inc
ds
dec
and
jmp
mov
pop
cld
insl
sbb
int
ss
notb
xor
pop
dec
jmp
scas
pop
push
xchg
rcrl
sbb
mov
dec
out
or
in
out
sub
scas
adc
jae
jnp
test
or
cmp
push
pop
lds
adc
test
pop
add
jge
sbb
or
faddl
jecxz
mov
popf
fs
leave
in
cmp
xor
sub
roll
jg
movsb
xchg
push
inc
movsd
out
popf
mov
xlat
xor
and
and
sbbb
jle
sub
cli
xchg
cld
enter
int
jbe
lods
jmp
pop
inc
mov
rorl
adc
xor
add
negl
insb
decl
adcl
in
jl
loop
loopne
sub
or
mov
cmpsl
adc
mov
mov
lea
xchg
ret
nop
adc
call
push
add
fwait
push
mov
aas
sbb
loopne
push
adc
scas
mov
out
mov
jae
fadds
sub
popf
pop
xchg
rcrb
arpl
xor
cmpl
addl
inc
pop
sbb
inc
fnsave
xchg
pop
add
inc
push
out
call
xchg
es
dec
push
cltd
mov
loopne
sub
jecxz
xchg
das
or
in
test
test
int
incb
lea
sub
sub
push
into
push
pop
scas
or
into
popf
scas
out
imul
std
mov
subb
xor
arpl
outsb
sub
xchg
rcrl
push
outsb
jo
dec
jno
xchg
and
push
inc
ljmp
lret
lea
mov
addl
fcompl
jbe
or
out
xchg
xor
jmp
dec
push
ret
aaa
adcl
mov
add
mov
data16
in
jg
adc
notb
push
jl
in
in
out
mov
scas
jle
dec
lods
insb
lods
cmp
pushf
dec
daa
dec
pop
dec
fbstp
outsb
outsb
testl
adc
fisttpll
jle
in
shl
jecxz
movsb
mov
ret
aam
movsl
mov
sbb
loop
mov
out
cmp
sub
lea
lock
nop
out
in
clc
aam
push
jl
int
fisubrl
jo
mov
repz
mov
out
jle
aad
stc
cmpsb
fs
pop
pop
roll
arpl
cmp
sbb
adc
and
into
pushf
lods
inc
aad
enter
nop
aaa
add
fisubrs
sti
icebp
outsb
in
cltd
cs
adc
push
xor
inc
cmp
inc
jge
out
cmpsl
jae
xchg
mov
push
mov
iret
out
mov
ror
out
pop
cmpsl
test
and
out
sbb
push
pop
and
push
icebp
dec
cld
xlat
inc
sbb
xchg
movsb
cmp
cltd
test
sahf
xchg
fidivl
add
out
pop
inc
mov
test
or
outsl
inc
stos
das
sub
pop
or
pop
sub
sbb
dec
std
outsb
lret
jge
mov
negb
test
inc
lahf
push
enter
out
scas
mov
ljmp
lret
sub
popf
jecxz
sub
std
xlat
cmpl
jb
repnz
insl
outsl
jo
cwtl
mov
push
jne
mov
gs
mov
cs
push
jb
fdivs
inc
xchg
imul
mov
lahf
dec
aad
stos
inc
ret
push
xor
ss
lods
or
mov
add
test
cld
incb
aas
add
std
sbb
stos
fmuls
test
or
dec
cmp
jle
push
push
clc
repz
aam
outsl
lret
and
or
clc
je
lcall
loopne
mov
rclb
pop
mov
sbb
sub
pop
pop
nop
xor
je
or
sub
sub
cmp
or
ret
xchg
lea
ja
insb
aas
daa
xchg
cld
bound
xor
sbb
push
hlt
push
test
outsb
jl
mov
bound
xchg
stos
fbld
fs
mov
jp
push
mov
jp
fsubl
arpl
add
inc
lods
ljmp
jo
jl
mov
cmc
ret
scas
adc
or
mov
add
sti
adc
sbb
in
lods
cmp
xchg
cmp
xchg
daa
es
jnp
xchg
repnz
add
xor
nop
sbbl
lcall
ret
out
shll
addr16
fsts
push
mov
inc
aas
sbb
cwtl
add
lea
xchg
int
sti
aad
ljmp
ror
adc
mov
mov
pop
cld
mov
out
dec
aad
into
pop
add
mov
bound
xchg
pop
mov
ja
popf
loope
clc
push
js
cmpl
pop
popf
nop
fsubl
and
jp
andl
or
pop
add
sub
mov
dec
aam
jo
add
sbb
les
in
mov
fs
mov
popa
imul
xlat
mov
inc
insb
xchg
out
fwait
or
lret
data16
pusha
ret
push
popa
adc
push
mov
add
sbb
mov
sbb
ja
stc
and
std
cmp
add
leave
and
cmp
sbb
cli
sub
dec
loop
iret
xor
lret
xlat
popf
adc
jp
pop
mov
jb
jnp
in
packssdw
push
cs
pop
fsubs
sahf
jle
test
js
jecxz
or
in
ficompl
push
sarl
outsb
and
mov
push
mov
and
dec
insl
sarb
loopne
lock
pusha
push
push
sti
stc
sub
in
js
push
add
or
or
rclb
nop
fs
fs
cmpsb
ficoml
mov
jns
leave
clc
cltd
add
sub
ret
aad
mov
cmpsb
jg
pop
xchg
movsb
mov
shrb
mov
xlat
adc
pop
inc
jge
jb
add
pushf
sti
xlat
stc
pusha
mov
loope
fs
mov
fldcw
push
mov
push
xlat
negb
aad
js
imul
fadd
pop
fcomps
and
lock
xchg
cmpsb
add
out
jne
xchg
add
inc
pop
fsubrp
xor
lea
sbb
mov
adc
jl
insb
int
scas
psubusb
outsl
js
test
jg
das
lcall
aaa
push
inc
sub
test
fucomp
and
inc
bound
dec
bound
sahf
mov
stc
jp
jae
push
xor
and
xor
and
les
mov
out
cmp
mov
xlat
inc
xor
fsubrl
lcall
push
in
inc
dec
adc
dec
dec
jbe
jle
sbb
aad
and
cmp
mov
out
sub
add
sub
stos
xchg
les
int
inc
jo
cmp
or
cwtl
shlb
add
ret
cmp
lods
dec
or
xchg
push
pop
mov
iret
gs
fmuls
fisubrl
push
jae
push
ljmp
jo
mov
mov
dec
lcall
insb
xlat
bound
call
pop
mov
jb
ret
xchg
lret
out
std
lods
lret
xlat
xor
rcll
lret
ja
bound
xor
leave
or
in
jle
xor
add
scas
sbb
leave
scas
sbb
cmp
ja
lds
outsb
ds
cmpsl
sub
mov
push
mov
dec
dec
popa
jae
xor
cmp
pop
pop
jns
or
inc
out
pusha
jne
repz
push
mov
cmc
iret
testb
das
loop
pushf
xor
lret
add
xchg
jbe
jb
ja
sbb
loop
pop
cmc
cltd
xchg
jg
jnp
add
mov
sub
into
dec
pop
mov
cwtl
movsb
mov
mov
rcll
imul
sbbl
push
add
clc
xor
mov
and
ret
push
xchg
mov
mov
addr16
fcmove
add
pop
add
dec
aas
inc
outsb
movnti
or
push
inc
mov
cmp
dec
pusha
popf
adc
push
scas
test
out
pushf
sbb
jnp
xor
sub
ljmp
pushf
mov
push
cmpsl
in
xchg
xchg
mov
sarl
stos
cltd
test
lds
insb
mov
inc
xor
fiadds
outsl
push
repnz
incb
adc
adc
fisubs
adc
mov
dec
fildll
gs
xchg
inc
aaa
and
outsl
test
cmp
xor
cmc
cmp
push
inc
mov
push
xor
adc
xchg
inc
push
dec
xchg
hlt
inc
mov
addr16
adc
out
pop
fcom
jno
mov
mov
mov
in
and
jle
sub
adc
mov
daa
sub
iret
enter
push
dec
in
mov
loopne
inc
out
cmp
push
test
pop
jge
pushf
mov
sbb
jle
mov
inc
fidivl
mov
outsl
notb
stos
outsl
and
loop
or
and
lcall
pop
into
leave
inc
cmp
fisttpl
iret
ja
imul
imul
leave
stos
andnps
mov
out
or
inc
pop
push
sub
inc
imul
pop
add
inc
mov
scas
add
mov
pop
in
js
pop
scas
dec
notl
and
shl
inc
test
cwtl
sub
jne
sbb
mov
jno
imul
sub
push
fs
sbb
out
jmp
mov
sti
jo
xchg
xlat
lods
lret
int
dec
pop
push
push
inc
std
dec
addr16
mov
xlat
iret
aas
adc
pxor
mov
xchg
mov
rcrl
aad
sub
or
test
rcrl
pop
add
dec
shll
repz
shlb
add
push
icebp
add
xchg
and
pop
dec
push
hlt
mov
in
mov
fidivrs
mov
test
subb
mov
xchg
addb
or
out
call
jbe
repz
lret
and
pop
repnz
dec
push
cld
dec
adc
cltd
aad
push
push
adc
rol
xchg
sbb
adc
or
sub
mov
pop
mov
mov
xor
adc
lret
fxch
jle
xchg
sahf
fstps
adc
push
xchg
mov
sbb
jae
cmp
imul
in
imul
xchg
ficompl
ror
clc
je
outsb
dec
movsb
jb
loop
push
cwtl
movsl
or
std
aas
data16
out
push
dec
xchg
inc
cmp
xor
out
xchg
xchg
leave
outsb
cltd
mulb
or
jnp
pop
push
sbb
mov
lods
and
sti
adc
mov
les
cli
mov
push
mov
push
or
xor
pop
fcom
sub
fbld
and
jno
addr16
sub
cmp
pop
test
in
or
mov
jg
mov
adc
out
jno
test
add
xor
je
stos
dec
jb
addb
adc
lea
loope
daa
pop
dec
cmp
xor
push
cs
sbb
jecxz
orb
out
mov
and
fwait
pop
jbe
shl
jl
clc
repz
fcmovnu
jl
adc
or
add
js
xor
nop
dec
pop
mov
mov
test
push
in
out
inc
cmpsb
or
leave
nop
addr16
mov
pop
loop
pop
xor
pop
je
ret
fldcw
ds
mov
outsb
outsl
mov
xor
gs
dec
scas
sub
movsl
movsb
dec
cmp
cmp
pop
jne
inc
std
daa
sarb
pop
xchg
pop
in
dec
sub
mov
fbld
jbe
pop
or
mov
addr16
lods
shll
repnz
jmp
pop
clc
call
sbb
cmp
in
loop
mov
adc
outsl
insl
adc
lcall
bound
bound
pop
lods
mov
sub
inc
push
fiaddl
push
repz
pop
mov
fs
dec
add
or
shll
cld
movhps
loop
lea
aaa
or
ds
es
and
into
mov
adc
rcll
fcoms
cli
lock
mov
and
imul
cli
fldt
nop
push
inc
and
or
mov
pop
cmp
fs
mov
xchg
sbbl
test
je
fdivl
or
insl
fwait
in
icebp
loopne
push
lods
jns
out
iret
sub
inc
mov
sbb
iret
fucomp
or
test
add
stos
xor
loop
inc
cld
or
mov
add
test
repz
mov
push
roll
pop
les
sbb
cmp
inc
icebp
pop
shlb
lahf
sbb
add
jmp
dec
cmpl
imul
int
sarb
xor
and
push
sub
mov
sbb
or
sbb
mov
mov
lahf
insb
cs
or
dec
cltd
xchg
ss
fisubrl
and
shll
pop
imul
xchg
xchg
aas
lcall
stos
sahf
rorl
mov
xorb
dec
jns
loopne
push
mov
rcrl
adc
ds
mov
mov
xchg
div
or
add
out
in
mov
in
movsl
xchg
nop
xor
pop
inc
jl
test
dec
aad
mov
or
test
add
cs
stc
mov
call
leave
add
loop
dec
repz
xor
pop
mov
bound
adc
mov
xor
xchg
iret
test
dec
out
xor
test
dec
rcr
testw
dec
inc
stos
mov
in
mov
mov
xchg
mov
stc
dec
push
scas
ss
mov
sbb
outsl
aam
xor
fsubs
or
lods
sbb
out
leave
lret
dec
xor
rcll
xor
cmp
cmp
dec
mov
inc
adc
or
addr16
push
xchg
cmpsl
cli
pushf
pusha
add
mov
mov
lea
adc
jg
ret
add
xor
int
jb
add
add
sub
push
sub
ja
mov
inc
gs
inc
dec
push
cmc
jge
mov
cmp
imul
push
mov
lods
xor
jne
stos
fisubl
cmpsb
cmpsb
mov
add
sbb
xor
mov
inc
pusha
mov
popf
mov
xor
lahf
hlt
cli
cmp
push
adcb
rcrl
ret
mov
and
aam
movl
insl
jne
jo
pop
pmullw
xchg
inc
notb
sub
lods
push
aas
pop
dec
test
imul
mov
add
adc
adcl
es
mov
mov
mov
inc
out
sbb
add
icebp
fimuls
rcll
call
inc
test
andb
xlat
sub
jo
mov
roll
adc
rcrl
aad
shrb
lods
adc
jmp
xlat
jo
mov
addr16
mov
cmp
test
and
cmp
je
mov
bound
sarl
adcb
dec
xor
pop
adc
int3
iret
inc
clc
jae
jno
sbb
rorl
jnp
xchg
aam
loope
pusha
push
sbb
call
shrb
aad
mov
pushf
in
adc
mov
sarl
ss
mov
lcall
es
aas
shl
fs
data16
lock
mov
mov
xlat
ja
adc
fsts
popf
sub
outsl
and
cmpsl
push
add
inc
fisttps
pop
rcl
mov
adc
add
jnp
cmp
je
std
xchg
fsubr
pop
loopne
dec
jbe
and
test
out
push
xor
cmp
jl
pop
pushf
out
mov
int
mov
xchg
aas
mov
not
rcr
pushf
cld
xchg
push
sbb
mov
ss
lret
mov
sub
push
xlat
pusha
push
xchg
lret
ljmp
fmul
in
or
sarl
jae
orl
cmpsb
jbe
scas
push
ja
cmp
out
outsb
dec
dec
mov
mov
outsl
leave
outsl
cmpsl
scas
xchg
lea
sbb
xchg
xor
or
sbb
xor
lods
sbb
jns
cltd
sub
inc
or
cs
addr16
jnp
fsts
enter
outsl
iret
cwtl
add
push
in
adc
jmp
mov
scas
movl
jp
mov
fisttpll
in
xor
dec
or
inc
jp
or
sub
xor
lret
mov
or
sbb
bound
and
sbb
cmp
add
sar
sar
repnz
lods
mov
aaa
adc
ret
pop
pop
jmp
mov
adc
call
mov
iret
sbb
mov
call
stos
ljmp
mov
mov
dec
loope
fstpl
dec
cmp
push
jns
out
sti
jp
jp
sub
pop
xor
addb
and
outsl
iret
scas
sbb
sub
mov
sbb
stos
lods
test
add
xchg
dec
outsb
push
fisubrl
and
ret
fbld
adc
dec
mov
popa
scas
push
add
rcl
inc
cmp
lcall
pop
iret
cmpsl
stos
fs
push
mov
fnstsw
mov
xor
jge
repz
in
push
mov
leave
fwait
and
adc
inc
ss
ret
loop
sbb
dec
dec
cmp
mov
adc
pusha
dec
xchg
idivl
xchg
jge
aaa
popl
mov
insb
xchg
xchg
and
arpl
lahf
inc
push
ffreep
mov
push
addr16
das
or
mov
cltd
jg
cli
xor
jnp
testl
xchg
xchg
loop
push
out
mov
pop
insl
dec
mov
aas
xor
inc
pop
adc
leave
cmc
pop
mov
rcrl
xchg
inc
aaa
adc
mov
mov
cwtl
inc
mov
mov
mov
aaa
daa
sub
mov
mov
test
inc
inc
dec
sbb
adc
mov
adc
sarb
mov
daa
sti
fwait
dec
sbb
jno
push
mov
jo
cs
test
cwtl
rcrb
and
repnz
push
insb
mov
push
nop
jae
xor
orb
outsb
lcall
xchg
cwtl
pop
cmp
push
lcall
stc
aad
adc
mov
sbb
jns
pop
shll
dec
enter
sahf
xorb
jmp
sbb
into
add
adcl
shll
mov
or
mov
cmp
dec
inc
dec
sub
xchg
push
movsl
stc
inc
pop
jmp
push
pusha
mov
loope
int3
cmp
sub
movsl
daa
inc
push
test
lods
test
dec
punpckhwd
mov
sbb
stos
out
sbb
fs
adc
jnp
dec
cmp
adc
addr16
xchg
dec
mov
xor
dec
pop
pop
and
cmc
orl
test
pop
fidivrl
mov
imul
sbb
test
inc
pop
out
pop
lret
mov
mov
fdivs
jmp
fsubrl
daa
add
cmp
out
lea
and
sbb
ss
bound
mov
xchg
imul
mov
scas
adc
int3
add
sti
sti
cmc
fs
dec
adc
fdivs
in
jg
movsl
dec
jo
mov
add
xor
sub
pop
push
adc
pop
orb
in
xchg
ret
repnz
jnp
mov
cmp
rolb
pop
call
mov
adc
cmpb
sbb
sub
and
rcl
fsub
jp
mov
fwait
into
add
and
in
inc
aam
cmpsb
loop
aam
xlat
or
sbb
sbb
push
ftst
inc
adc
insb
test
std
pop
cmp
and
mov
mov
push
loopne
pop
es
mov
ret
daa
or
adc
movsb
andl
dec
push
jp
stos
jmp
and
mov
ljmp
pushfw
sub
jns
jne
mov
es
insb
insl
sbb
cmpsl
incl
sbb
cmp
jl
insl
or
sub
repnz
into
push
in
int
xchg
mov
aam
std
nop
imul
fsubrs
test
loopne
xchg
sti
daa
pop
dec
and
adcl
into
call
pop
out
jge
pop
adc
or
cmp
jns
or
leave
inc
aaa
xchg
jmp
xchg
insl
pop
adc
loop
mov
jge
inc
dec
add
cmp
mov
cmp
xchg
out
fs
inc
dec
in
mov
shl
mov
cwtl
rorl
mov
and
mull
hlt
leave
andb
xchg
push
das
mov
xchg
or
int3
es
mov
lds
add
lds
lds
and
fwait
push
add
mov
jl
cs
cmp
cmp
mov
mov
xlat
aas
mov
mov
leave
cli
rcrb
inc
and
repz
and
stc
outsl
cli
call
sbb
out
cwtl
push
push
in
push
insl
inc
mov
js
sub
imul
fimull
pop
inc
jg
sbb
push
cld
sub
sahf
sub
iret
lret
insb
add
cltd
mov
rcl
inc
adc
mov
dec
out
xchg
xchg
out
xor
orb
mov
mov
shlb
ret
cmp
out
cmp
xor
and
mov
lods
cmc
lret
movsb
mov
dec
xchg
fstpl
lods
mov
adc
inc
jae
addr16
lcall
cmpsl
pushf
xor
test
xor
inc
xchg
mov
xchg
or
push
lcall
mulb
jo
je
mov
rcll
ret
movb
shl
lods
out
fdivs
xor
test
xchg
loopne
mov
mov
rcrb
jge
dec
call
jns
lahf
cltd
jo
push
jle
lcall
outsb
add
xchg
orb
rcrb
cmp
and
mov
jge
jae
fimuls
or
add
push
push
js
icebp
push
lock
cwtl
cmpsb
jge
xchg
pop
testl
push
add
scas
pop
and
sbb
shl
ret
lods
lods
rorb
xchg
fsubrp
enter
sbb
jo
cmpsb
mov
mov
or
cs
scas
and
repz
jns
data16
jne
xor
je
pop
mov
cs
lret
rclb
push
lock
pushf
lcall
popf
xchg
frstor
xlat
rcrb
jo,pt
lock
lock
xchg
fisubl
push
mov
fiadds
jmp
loopne
movb
cmc
push
mov
mov
inc
pop
out
xchg
or
push
sahf
and
fsubp
pop
mov
fs
cmpsl
push
inc
aam
iret
pop
jb
aaa
aaa
mov
push
imul
cs
loope
pop
dec
cmp
lock
clc
xchg
ljmp
test
rcll
into
jb
mulb
scas
dec
sbb
test
jb
es
rolb
lahf
sbb
in
dec
jnp
inc
test
popf
rcl
stos
sub
xchg
nop
negb
fs
inc
sub
xor
adc
pop
push
xchg
xchg
pusha
xchg
pop
and
sbb
push
xchg
rcll
fwait
lock
subl
pop
es
das
leave
sub
mov
pop
daa
mov
inc
mov
mov
mov
mov
cmp
cmpsl
add
scas
mov
inc
xchg
mov
mov
insb
and
test
in
andl
ret
xchg
test
ds
lcall
inc
xor
data16
shl
sbb
fadd
ss
and
pop
insb
push
mov
pop
dec
mov
rclb
hlt
lret
inc
or
daa
push
jg
xor
out
je
out
jno
daa
in
nop
add
imul
insl
in
out
lret
push
cwtl
or
push
es
arpl
cli
and
and
stc
int
cmpsl
and
cli
loopne
sti
pop
ret
dec
test
aad
test
ljmp
loop
je
imul
adc
shll
lret
pusha
clc
xchg
xor
sub
xchg
lds
fcoms
int3
scas
cmp
jo
cmp
fisubrl
mov
cmp
int3
lret
xor
cld
ret
dec
inc
cld
pop
add
mov
loopne
outsl
inc
movsb
mov
xor
xor
jl
addr16
lret
adc
les
inc
add
or
or
inc
imull
ss
adc
pop
xor
mov
cmp
insb
scas
sub
ds
stos
jno
arpl
mov
aad
or
js
int3
jb
std
inc
mov
pop
inc
incb
mov
dec
leave
repz
fstp
and
inc
ficoml
sub
jle
inc
cli
dec
sbb
cmp
pop
jl
xlat
aaa
fwait
sahf
in
mulb
sbb
mov
sub
pop
dec
cltd
fldl
lods
xor
imul
mov
xor
cli
loop
repz
xorb
xor
mov
aaa
aas
xchg
sub
ljmp
faddl
xchg
enter
inc
adc
sbb
jl
jb
or
mov
in
call
lods
dec
jae
xlat
aam
scas
inc
pop
lds
pop
mov
push
dec
adc
mov
and
repz
and
sbb
out
daa
push
ret
std
sbb
xor
hlt
cmpb
repnz
int3
mov
fldenv
testb
enter
out
xchg
testb
test
inc
mov
and
data16
bound
inc
cltd
aas
lret
and
xchg
fidivrs
iret
and
loopne
adc
pop
xchg
mov
leave
outsb
inc
mov
or
aaa
hlt
add
xor
sub
negl
lea
shr
pop
stos
loopne
and
pusha
loope
mov
inc
inc
sbb
fbstp
mov
adc
jmp
mov
shrb
pop
mov
jne
outsb
jle
lock
dec
lret
mov
cmp
out
pop
mov
cmp
adc
jecxz
stos
or
scas
mov
and
jae
jae
adc
lret
or
push
ja
push
adc
arpl
outsl
mov
sub
pop
pop
or
insb
mov
notl
pop
push
stos
int
es
jae
addr16
scas
jns,pn
repnz
push
std
inc
mov
jno
stos
daa
rcrb
mov
mov
je
push
cmp
xor
int
push
arpl
repz
dec
and
addr16
and
lret
sbb
xorl
imul
mov
sub
shll
jge
mov
mov
cmp
imul
mov
in
inc
out
dec
scas
jmp
mov
test
adc
cltd
mov
into
inc
aas
ret
ljmp
xchg
xor
fimull
adc
rorl
xlat
mov
lahf
or
mov
mov
in
es
repz
xor
xor
repz
xchg
mov
xor
les
xchg
dec
inc
jg
nop
fdivl
push
or
adc
dec
adc
fistps
cmp
cmc
push
les
push
sub
inc
loop
ljmp
gs
test
fmuls
xchg
cmp
dec
jge
sbbb
scas
in
inc
xor
out
test
pop
and
dec
repnz
dec
xorl
insb
nop
aas
in
pop
pusha
xchg
test
dec
lea
test
repnz
lcall
or
fs
pushf
push
fiaddl
ss
push
lods
scas
subl
mov
push
sub
mov
insb
pop
jbe
mov
and
int
push
pop
push
out
pop
arpl
lea
rclb
mov
fld
xchg
sub
rol
repz
push
sarb
xchg
fisttps
pop
xor
pop
cmp
push
insl
movsl
push
out
mov
cmp
jno
xor
fcoml
lcall
dec
aad
xor
insl
pop
sub
es
imull
pop
dec
es
inc
add
aaa
adc
mov
cltd
rcl
mov
fsts
xor
push
sbb
dec
xchg
out
sub
int
xor
push
sub
xor
xchg
test
dec
outsl
clc
push
and
fildll
add
std
mov
gs
test
pop
loopne
sub
movsb
pop
mov
cmp
sub
pop
pop
push
dec
fiadds
dec
cwtl
xchg
aas
mov
pop
scas
aad
sub
push
xchg
loope
ret
sub
or
dec
add
inc
lcall
icebp
mov
xor
je
mov
call
pop
ret
arpl
inc
mov
push
loope
leave
jbe
adc
fstpt
mov
xor
push
add
loop
cmpsb
ljmp
push
fwait
sti
leave
or
cwtl
mov
jae
adc
adc
mov
iret
mov
int3
mov
cmp
xchg
push
ret
pop
add
cmpsb
dec
xchg
xchg
mov
test
das
aad
pusha
sub
and
sbb
idivb
lods
add
jl
lods
stc
lea
enter
int
ja
cmp
fwait
sub
dec
xor
adc
xchg
mov
pop
sbb
xor
sbb
cmp
mov
inc
push
sub
add
cmp
cmp
ljmp
fistpl
dec
or
pop
les
leave
loope
test
sub
push
jl
les
lods
daa
sbb
mov
loopne
out
xchg
mov
mov
add
mov
jle
loope
push
je
xchg
clc
inc
push
stos
and
pop
js
jnp
pop
fcoms
gs
and
xor
sbb
sbb
and
sbb
imul
enter
cld
scas
adc
sub
fistl
xchg
or
push
les
dec
gs
add
xor
jp
repz
or
jl
adc
jnp
loopne
mov
in
repnz
push
dec
mov
jg
dec
xor
out
lock
test
mov
adc
mov
lret
xor
lods
push
jne
fcomip
and
jae
roll
inc
outsl
jbe
in
pop
pop
test
adc
in
adc
xor
enter
pop
pushf
rorl
scas
xchg
cmpsl
and
addl
lret
sbbb
adc
pop
aaa
or
jne
mov
pusha
xchg
out
mov
sbb
push
dec
test
iret
sbb
loopne
arpl
mov
cmp
inc
push
jmp
adc
adc
stos
stos
and
aam
enter
sbb
orl
adc
loop
bound
cmpsl
add
dec
mov
addr16
cld
cmp
mov
and
jnp
addl
jo
jp
hlt
xor
mov
aad
in
dec
sbb
outsb
push
mov
iret
jae
out
fists
dec
mov
adc
mov
mov
jmp
sub
pushf
xor
xlat
xchg
push
or
out
jle
rep
push
push
test
divl
leave
sti
cmpsl
ret
adc
pop
mov
dec
jmp
pop
push
fcoms
mov
loope
test
clc
lea
test
mov
mov
loope
ja
cwtl
jmp
mov
cmp
seta
test
mov
adc
push
xor
mov
ret
jbe
out
sbb
jb
clc
push
aad
jge
shrl
out
imul
fisttps
inc
out
or
mov
cmp
dec
xchg
sbb
test
add
mov
push
mov
mov
dec
aad
jo
test
push
mov
ds
js
outsl
adc
jb
xchg
push
arpl
ret
aas
dec
mov
dec
adc
outsb
push
icebp
inc
filds
enter
mov
sbb
ret
sbb
jb
into
jecxz
xchg
cmp
inc
mov
rolb
sbb
stos
out
in
lret
adc
scas
push
add
movsl
sub
mov
push
shlb
por
xor
jl
inc
aad
cmp
stos
add
imul
cld
pop
and
pop
inc
xorl
repnz
clc
nop
adc
inc
leave
push
jmp
cmp
data16
lahf
mov
add
aam
das
lea
mov
mov
incb
and
jo
or
and
dec
jo
dec
fsub
ljmp
ret
mov
aam
movsl
mov
jg
lock
cmp
dec
in
in
jecxz
lret
or
jno
ret
xchg
or
sub
push
dec
movsb
pop
or
dec
jl
aad
add
push
xor
test
mov
ljmp
sbb
mov
jmp
in
cwtl
xchg
cmpl
xlat
xchg
movsl
pop
loope
inc
popl
add
enter
push
mov
notl
out
inc
add
jne
addl
mov
mov
sbb
loopne
in
dec
pushf
test
mov
loope
gs
pop
stos
test
lea
inc
loop
inc
cmp
repz
dec
and
test
push
jp
imul
dec
rcl
loope
sbb
aam
jmp
xchg
push
adc
cmp
push
es
daa
pushl
addr16
jno
xchg
fisubrl
adc
arpl
xor
push
stos
icebp
andb
adc
out
cs
es
icebp
bound
push
rcrl
mov
cli
cmpsb
aaa
jo
and
jp
nop
mov
mov
repz
mov
cmp
ja
sbb
push
in
cmp
out
inc
or
out
dec
cmp
cltd
push
out
bound
pop
sti
int
jo
mov
lods
xor
cs
notl
imul
inc
push
xor
sbb
push
arpl
in
jmp
pand
mov
mov
jno
insb
enter
sar
jne
inc
xchg
into
cmpsb
inc
test
mov
jo
push
mov
push
aas
stc
fs
insb
sbbb
cs
mov
or
or
int3
out
xor
cmp
mov
cmp
and
push
inc
or
jmp
mov
test
mov
fisubs
xlat
pop
xor
sbbl
mov
insb
mov
add
icebp
mov
repz
dec
jno
stos
clc
arpl
sbb
or
loop,pn
test
adc
fistps
sti
popa
enter
and
or
and
pop
sbb
inc
movzbl
sarl
xchg
fstps
cmpl
movsl
sub
fistps
test
iret
or
popa
and
xor
test
popa
pop
dec
and
test
loope
xchg
lea
and
cmp
nop
repz
cmpsl
ljmp
std
fwait
mov
leave
idivl
mov
and
push
add
stos
add
or
aas
mov
push
addl
notb
dec
jne
mov
adc
int
mov
mov
lcall
jl
push
lods
in
cli
sti
sub
dec
icebp
inc
mov
test
mov
xchg
jns
vmread
jg
pushf
insl
jg
mov
pop
loope
xchg
mov
push
int
push
addl
testb
out
mov
pop
stos
xchg
xor
pushf
lcall
xchg
imul
mov
add
cmp
repz
js
push
mov
inc
inc
ljmp
push
and
push
popf
loop
mov
xchg
xchg
in
cmc
and
sti
push
in
xchg
cmpsb
gs
mov
nop
mov
lcall
test
shll
mov
dec
loop
fwait
aaa
repz
std
aaa
das
andl
mov
mov
std
or
jae
push
xchg
jb
sub
shlb
xchg
mov
adc
pop
add
inc
or
loope
dec
std
xchg
and
stos
cs
sbb
inc
mov
dec
rorl
mov
add
sbb
mov
xchg
mov
dec
push
add
ret
xchg
addl
mov
xchg
adc
ljmp
push
loope
aad
and
icebp
fidivl
dec
aam
push
fists
jbe
test
in
addr16
psllw
sti
push
cltd
sahf
inc
jl
or
scas
mov
cmp
das
lods
mov
sahf
mov
fcmovne
into
ret
dec
pop
outsb
leave
fcmovbe
pop
pop
mov
inc
std
inc
std
jecxz
dec
subl
dec
push
movsb
mov
fs
and
out
movsl
sub
test
jecxz
iret
sub
insb
dec
mov
pop
dec
xor
push
mov
cltd
inc
fldl
test
clc
jne
xchg
into
mov
fidivl
out
push
and
jp
jmp
cltd
outsl
mov
orb
lcall
push
lcall
stc
push
rcrl
inc
push
scas
inc
test
xor
out
fadds
popw
sub
jbe
or
mov
lahf
loopne
jb
xchg
orl
push
jmp
es
mov
dec
shll
push
ljmp
xor
inc
es
or
jno
pop
push
adc
fistl
scas
xchg
fcmovb
fistps
add
sbb
mov
js
pusha
or
push
adc
lock
cltd
aas
fcompl
addl
mov
ds
lock
inc
mov
out
cwtl
and
xchg
inc
sbb
and
mov
orb
loop
out
call
jno
movsl
pop
mov
jns
sarl
jmp
pop
xor
push
stos
notb
jbe
outsb
inc
xor
dec
mov
mov
or
mov
adc
fsubrl
mov
xchg
je
xor
lret
das
lea
mov
jecxz
imul
sbb
sbb
dec
xor
jle
test
aad
cmpsb
cmp
jae
jo
decl
xor
xlat
adc
sbb
jl
and
sub
jl
xor
dec
inc
push
xor
aad
stc
or
pop
inc
je
movsb
nop
add
fwait
mov
mov
lods
cmp
hlt
das
jo
insl
push
xchg
aam
push
mov
scas
or
mov
mov
loope
ljmp
xor
inc
popa
orl
lods
sub
push
xchg
test
push
ss
cmp
cmpsb
repnz
mov
rcr
mov
jle
bound
daa
lods
pop
lock
fisttpll
mov
test
mov
pop
test
mov
push
pop
out
mov
dec
mov
ror
andb
fs
in
sbb
mov
cmpsl
test
stos
enter
cli
mov
push
and
mov
test
rclb
push
dec
test
jnp
out
les
mov
and
std
add
jecxz
xor
out
add
pusha
sbb
pop
daa
push
outsb
adc
pushf
sub
mov
dec
loopne
pop
xor
outsb
dec
mov
fidivl
mov
push
and
inc
xor
ljmp
and
push
popf
pop
out
outsb
shrl
push
adc
int
mov
int
cmpsl
mov
int3
or
inc
jbe
imul
add
cmp
push
je
pop
pop
or
sub
pop
add
inc
in
shrl
daa
cmp
jno
sbb
inc
in
mov
and
cmp
jns
mov
lret
repnz
mov
sub
mov
shlb
inc
int
cltd
ret
ret
das
push
lcall
loop
push
sub
das
sbb
std
sbb
pop
adcb
dec
cmp
dec
stos
mov
hlt
inc
cmpsl
enter
ds
adc
push
mov
into
sarb
std
sub
fcoml
sub
into
xchg
push
or
pop
pusha
and
addr16
rcll
adc
mov
loopne
lock
fldl
hlt
mov
nop
push
js
cmc
rol
repz
test
mov
in
push
push
data16
repz
loop
pop
popa
imul
cmp
mov
mov
lea
clc
add
pop
int
fs
and
sahf
cld
outsb
or
or
jl
xchg
xor
inc
xor
mov
pop
mov
jmp
iret
sub
fs
popf
push
push
and
adc
imul
dec
jecxz
pop
inc
outsl
addl
xchg
mov
mov
sbb
cmp
fistl
inc
sarb
add
xlat
adc
push
outsb
jg
or
pop
inc
sub
cmp
lret
ficompl
in
lods
push
cmp
mov
loope
cs
pop
xlat
pusha
adc
push
in
mov
es
xchg
inc
lret
cli
push
jle
test
movsl
mov
ficompl
mov
mov
rcl
lret
jo
fwait
stos
sub
and
imul
push
sub
fstpl
in
cwtl
xchg
inc
outsb
sahf
push
js
gs
fldt
aad
xchg
leave
test
in
or
push
xchg
fstl
fiadds
push
dec
loopne
mov
push
incb
sbb
loope
cmp
pusha
mov
outsl
pop
inc
cltd
push
push
mov
in
cltd
frstor
fdivr
and
pop
cmp
mov
inc
bound
insl
mov
ds
lds
movsl
adc
mov
mov
xor
ja
pcmpgtd
sub
xor
pop
out
xchg
dec
les
xor
push
lret
dec
push
andb
jp
add
push
fdivs
mov
xchg
cld
push
out
push
repz
roll
jo
test
cmc
mov
mov
imul
adc
lret
mov
dec
and
dec
cltd
cmpsl
cmp
mov
cld
mov
into
arpl
imul
jne
es
inc
add
int3
stos
test
and
push
fwait
jle
shrb
ror
xchg
stc
xchg
shlb
mov
adc
lods
add
pmovmskb
les
daa
push
mov
enter
shlb
lcall
pop
lret
sub
push
clc
popl
xor
inc
ja
add
rcrb
mov
jb
mov
xchg
push
push
and
mov
mov
lock
jmp
int3
js
pop
mov
dec
mov
mov
insl
dec
adc
and
ss
dec
in
pop
cld
ja
cmc
js
mov
rcrl
std
and
mov
cmp
sar
pushf
adc
sbb
addb
aas
pusha
sub
out
mov
in
cmp
ret
pop
xchg
adc
pop
mov
and
xchg
pop
mov
mov
mov
jl
scas
sub
mov
pusha
mov
mov
mov
sub
cltd
insb
xchg
sti
popl
sbb
jmp
addb
ss
dec
in
jae
fcoms
sahf
adc
pop
jo
out
adc
popa
and
gs
or
push
sti
data16
js
lea
cmp
sbb
adc
xor
ljmp
sub
arpl
dec
sub
jno
mov
notl
test
mov
pop
dec
shll
push
out
mov
pop
add
imul
js
sbb
daa
pop
test
mov
mov
fldenv
cli
xor
pop
shrb
or
cmp
test
or
cmpsb
mov
lds
xchg
fsubs
and
fsubr
jbe
xlat
pop
dec
out
imul
jae
push
adc
jb
sbbl
jo
jae
subb
or
add
lock
lret
pop
jnp
scas
jno,pt
sub
sbb
repz
loop
fcoml
mov
jbe
int
popf
cmpsl
adc
out
mov
popf
into
les
xor
sub
ljmp
and
push
sbb
std
sti
fcmovne
xor
jbe
jg
movsb
fnstsw
xchg
ffreep
xchg
shlb
adc
pushf
scas
pop
xchg
pop
ret
pop
pop
in
ret
test
xor
stos
jl
roll
add
push
mov
out
sahf
xor
sub
sahf
bound
cmp
incb
repz
test
les
pop
or
in
stos
push
cmc
sarl
pop
test
mov
shll
sahf
push
adc
xchg
pop
testb
pushw
sub
popf
adc
arpl
xchg
xchg
jmp
sahf
in
and
adcw
stos
insl
xor
or
in
dec
iret
icebp
inc
das
addr16
cmp
shlb
sub
push
mov
orb
aam
rcll
dec
sub
mov
jo
pop
das
mov
sti
xor
and
mov
push
xchg
shlb
hlt
pop
push
pop
jle
xchg
daa
pop
decl
negb
in
push
pop
pop
je
or
mov
push
dec
jl
inc
xor
jbe
mov
pop
clc
fidivl
dec
cmp
inc
fidivs
mov
sbb
pusha
push
cs
cmp
cld
mov
decl
sbb
loope
test
adc
loope
insl
loop
lock
stos
in
and
insb
push
lea
xchg
fs
imul
mov
out
jmp
cmp
inc
sub
dec
int
push
xchg
fidivl
pop
fisubrl
inc
pop
ss
notb
inc
xchg
adc
sub
jp
push
push
test
call
pop
shll
inc
shll
loope
xchg
xchg
mov
push
icebp
push
jnp
movsl
dec
sbb
clc
add
fadds
xchg
jp
cmc
jno
dec
mov
test
jo
out
mov
sbb
aad
es
lea
xor
jbe
and
ss
pop
stc
mov
jb
jae
dec
sbb
xchg
mov
out
xor
fwait
testb
fs
arpl
xor
mov
mov
jbe
inc
pop
sub
daa
std
subb
out
cmp
pusha
fsubrl
cli
add
mov
sbb
mov
cwtl
jmp
jp
lcall
sbb
clc
xchg
shll
lods
inc
inc
cmp
or
xchg
xor
std
daa
repz
pop
mov
add
inc
lds
xchg
adc
push
fdiv
fstps
inc
lahf
test
mov
push
testb
cmp
lock
dec
pusha
lods
add
push
or
sub
and
or
push
jnp
arpl
push
andl
roll
adc
xor
dec
sbb
inc
xchg
fdivrl
jo
sub
sbb
mov
lods
shll
je
inc
push
into
xchg
int
jns
testl
mov
and
lret
outsb
ljmp
lcall
cmp
push
sub
jne
add
cmp
mov
jnp
cmp
jg
adc
test
dec
lods
cmp
stos
lret
xlat
xor
dec
outsb
pop
mov
fwait
xchg
jg
mov
divl
xor
sbb
orb
dec
insb
fcompl
push
cmp
mov
sub
dec
cltd
mov
dec
cmpsl
into
mov
add
mov
popa
shll
pop
insb
push
rorb
outsl
sub
arpl
adc
mov
or
jecxz
add
dec
ja
ret
inc
jecxz
xchg
lcall
cmc
sbb
cmpsb
or
dec
js
fildl
xor
call
adc
cmpsb
push
or
dec
mov
jmp
imul
cmp
shrb
sbb
fldenv
xchg
insb
pop
sbb
jbe
xor
dec
pop
je
mov
adc
iret
mov
cld
pop
sbb
fiadds
idivb
mov
lods
popa
jecxz
jle
les
jns
adc
scas
dec
pop
jne
clc
js
mov
outsb
mov
movsb
jb
xchg
repnz
dec
push
dec
mov
shl
xor
inc
inc
xorl
xor
in
dec
cmp
pop
xchg
or
sub
or
ljmp
and
mov
push
push
scas
adcl
or
test
jecxz
mov
dec
call
mov
pop
mov
pop
lcall
or
aas
out
mov
lds
jno
mov
pop
lea
add
call
cmp
xchg
mov
test
jb
xchg
pop
or
dec
cmpsb
popf
popl
dec
dec
push
cmp
ret
ret
dec
sbb
js
loopne
sub
or
sub
insb
cmp
rol
mov
or
imul
loopne
mov
mov
dec
cwtl
jecxz
push
xor
xchg
nop
dec
scas
inc
loop
adc
mov
sub
rcr
pushw
jl
aaa
dec
sbb
mov
add
imul
xlat
fsubrl
test
jno
ss
inc
insb
test
add
add
cmp
and
scas
pushf
inc
shl
sbb
pop
or
pop
and
mov
lods
sbb
and
fs
arpl
in
repnz
mov
fcos
pop
dec
std
mov
pop
in
and
cmpsb
std
mov
xor
xchg
push
lcall
aad
mov
cmp
in
test
mov
in
sti
rcll
mov
adc
or
cmp
clc
ret
call
sbb
daa
jmp
push
dec
jnp
lds
or
jmp
xchg
xchg
lods
mov
sub
lret
loope
je
loopne
shrl
out
popa
test
aad
inc
jae
and
ret
in
inc
cmpsl
jns
add
sbb
fnstcw
push
ss
jno
add
lock
jnp
ss
mov
ficompl
addr16
jae
or
sbb
in
int
cmp
cwtl
fwait
adc
fwait
mov
lahf
stos
out
pop
and
adc
sbb
sub
je
push
sbb
dec
pop
mov
xor
pop
test
jmp
lcall
pop
adc
int3
pop
inc
orl
push
push
stos
and
pop
inc
sbb
int
movsb
fs
xchg
inc
cmpb
bound
sub
xchg
pop
and
add
mov
fildll
push
xchg
sub
repz
jp
out
in
aad
push
adc
movsl
outsl
sbbl
mov
cld
cld
fucomp
mov
aas
repnz
jp
lds
in
mov
in
fnstsw
pop
repnz
add
cmpsb
inc
lret
pop
mov
insb
fisttps
add
aaa
shlb
xchg
push
roll
xchg
mov
cmp
cmp
dec
cmc
jns
pop
in
push
out
cmp
leave
cmpsl
ret
jb
jge
or
adc
mov
ss
xchg
call
jno
mov
jmp
not
mov
insb
ds
in
out
sub
cltd
mov
mov
mov
cmp
sahf
popa
std
jge
or
and
loop
lods
inc
inc
dec
xchg
mov
scas
xchg
out
nop
push
pop
sub
movsl
out
es
xchg
push
cltd
fmull
test
sub
sub
sahf
pusha
and
jmp
jns
mov
insl
popa
mov
mov
arpl
push
repnz
rorb
test
mov
call
push
inc
ret
into
shl
sbb
jno
movsl
cmc
sbb
frstor
fstpl
js
push
adc
push
lret
std
pop
jae
das
js
cltd
inc
inc
and
cmp
icebp
lds
iret
push
sbb
sarb
push
xchg
xlat
cmp
jle
test
dec
pop
ljmp
add
sbb
test
mov
idivl
notl
lods
add
dec
mov
push
pop
into
insb
lcall
xchg
add
fmulp
push
imul
arpl
xor
and
in
lahf
xor
cmp
cltd
lret
inc
mov
std
pop
mov
sub
addr16
inc
push
jae
rorb
xchg
pop
fdivs
test
incb
sbb
pop
fwait
adc
je
cmpl
pop
cltd
lea
xor
xchg
xchg
sbb
pushf
enter
dec
add
dec
iret
jp
jecxz
int3
mov
xchg
push
lahf
jmp
lcall
mov
mov
call
sbb
notl
push
std
scas
imul
addr16
ds
shl
pop
movsb
cli
cli
call
sub
add
mov
and
push
or
nop
lret
xchg
loop
xor
xchg
mov
stos
xor
sub
insl
jb
sub
int
vmread
pop
pop
sbb
cmp
mov
inc
cs
add
mov
and
repz
les
jle
rclb
cwtl
iret
sbb
and
fs
add
adc
ljmp
jae
mov
mov
jle
xor
addl
lret
pop
xor
jbe
bound
mov
add
and
mov
inc
sbb
adc
pop
adc
adc
or
lods
test
cmp
push
arpl
addl
into
sbb
mov
inc
lret
pop
adc
or
cmpsl
lods
fs
movsl
repnz
mov
outsb
or
sbb
test
xchg
addl
outsl
xchg
jl
out
data16
shl
fcmovbe
imul
es
fwait
cld
fnsave
dec
rol
mov
sti
iret
mov
cmc
inc
mov
out
je
xchg
add
dec
lret
mov
and
push
mov
cmp
lods
dec
dec
xor
jo
fisubrl
push
dec
sub
out
ljmp
jne
sub
stos
ljmp
lret
mov
insl
es
or
jno
imul
add
inc
in
bound
cmpps
shlb
mov
or
mov
lea
or
jbe
sbbl
dec
int3
ss
or
or
stos
jl
loope
pop
les
out
lock
stos
jbe
imul
fbld
xchg
xor
dec
xor
inc
into
mov
jne
mov
dec
jmp
cld
hlt
outsl
fwait
dec
dec
pop
add
mov
out
lds
mov
inc
inc
mov
add
lock
mov
fcomps
or
or
inc
sbb
mov
inc
jmp
add
inc
sub
pop
hlt
leave
lods
jmp
dec
test
iret
add
shlb
lret
rcll
repz
or
jbe
aad
pop
icebp
cmp
xchg
in
cmc
std
sub
jmp
add
cli
jmp
je
jnp
js
pop
push
stos
push
out
inc
cs
cmp
sub
mov
adc
loope
mov
je
sbb
mov
jmp
aas
mov
test
push
lret
repz
add
or
es
loopne
inc
push
dec
pop
jp
test
subl
jmp
rclb
mov
pop
pop
or
aad
cmp
lods
lret
dec
test
fsubrp
jb
mov
jle
jno
ljmp
xchg
xchg
mov
aad
mov
leave
dec
mov
mov
xor
dec
push
sub
popf
cltd
inc
push
int
mov
sahf
lret
outsb
pushf
pop
inc
xchg
sbb
xchg
dec
jne
xchg
mov
int3
jle
mov
scas
aad
cmp
ss
decb
sub
dec
in
loop
scas
test
test
rcrl
cmp
mov
adc
mov
fbstp
clc
movsl
ficoms
test
xchg
jnp
pop
inc
arpl
mov
xchg
xor
jge
and
jo
push
and
aam
add
jp
xchg
loopne
gs
mov
dec
jl
dec
dec
lea
gs
shr
jae
mov
jg
pop
adcl
cmp
js
pop
or
xchg
and
andl
and
mov
sub
enter
or
icebp
das
fs
insl
mov
sub
icebp
push
mov
cmpsl
jmp
sub
cmp
dec
fildll
insl
cmp
out
jmp
inc
jne
mov
and
adc
pushf
mov
or
js
outsl
lahf
cmp
lods
test
fidivl
pop
adc
rcll
clc
rolb
shll
aas
push
lret
daa
lret
add
adcb
test
int3
in
stc
and
or
inc
addr16
loop
adc
in
push
lcall
xor
or
or
mov
sub
out
nop
fildll
arpl
icebp
sub
imull
pop
pop
mov
stc
mov
sub
sub
rorb
repnz
cmc
std
mov
pop
mov
sbbl
push
inc
out
xchg
pop
js
mov
xor
lea
push
jbe
fwait
and
sub
and
shld
and
xlat
dec
mov
jecxz
cmp
outsl
lret
lret
cltd
mov
nopl
mov
mov
fists
lock
lret
add
cwtl
push
mov
cmp
es
dec
xlat
les
subb
dec
dec
mov
and
inc
lock
nop
test
xchg
xor
mov
outsb
cmp
popf
jle
cs
cmp
jnp
push
dec
and
stos
popa
fwait
lock
lret
cli
jmp
jg
lcall
pop
imul
repnz
or
outsb
jno
xor
iret
xor
inc
xor
xlat
sbbl
sub
loop
aad
mov
stc
mov
mov
std
pop
xor
xchg
xlat
js
fdivl
adc
repz
adc
mov
mov
fcoms
movsl
loope
inc
iret
imul
rcll
mov
aas
cmp
inc
xchg
cmp
sub
xor
scas
sub
sarb
xor
sub
or
ret
dec
mov
or
sub
mov
xor
js
je
mov
subb
lods
mov
jne
dec
fisubl
vmovaps
arpl
aad
push
test
sahf
mov
cmpsb
stos
leave
scas
mov
jns
pop
insb
mov
gs
jge
sub
pop
mov
cltd
push
and
icebp
stos
cmp
mov
fildl
sahf
xor
jecxz
call
xor
mov
icebp
push
sub
dec
and
js
or
fildll
lods
rcrb
sub
lods
movl
adc
push
cmp
lds
pop
in
pop
adc
inc
lret
ret
shrl
mov
lret
mov
sbb
movsl
add
inc
gs
cld
roll
push
jne
xor
bound
jo
arpl
pop
push
insl
push
xor
or
pop
leave
mov
xchg
cmpsb
cmp
aas
addr16
xor
or
dec
arpl
hlt
insl
add
pop
mov
mov
sbb
add
insl
ss
lea
mov
pop
aas
sbb
rorb
jle
cltd
decb
mov
movsb
adc
paddb
mov
push
addr16
lcall
push
cmpsl
addb
rorl
popf
jne
ss
rorl
pop
mov
gs
add
pop
sub
xor
jp
cmpsl
mov
in
daa
mov
aas
hlt
mov
loop
out
xor
or
jmp
aad
arpl
les
jg
xchg
and
fisttpl
dec
cmc
jl
je
out
or
cmp
pushf
fnstsw
mov
les
les
aam
add
mov
pop
lds
adc
enter
sbb
sbb
mov
xchg
dec
das
jp
scas
jmp
repnz
notl
cmp
in
add
in
or
mov
jae
mov
inc
pop
dec
sbb
mov
int
jl
mov
add
jnp
mov
lods
frstor
flds
in
inc
ds
sub
mov
mov
push
cmp
inc
jbe
push
scas
repnz
call
add
adc
lcall
jg
jp
jl
sbb
popa
ljmp
in
mov
iret
and
mov
add
call
imul
xchg
sbb
sbb
inc
inc
bound
mov
scas
xchg
out
sub
daa
test
sbb
inc
lods
fmul
call
bound
lods
stc
and
subb
xor
dec
test
enter
test
sbb
mov
mov
cmp
nop
sub
jbe
pop
push
lods
xor
inc
pop
rclb
daa
pop
inc
mov
dec
ret
push
push
jo
shl
adc
and
shrl
mov
stos
sub
outsl
inc
xor
xor
mov
or
lods
jmp
xor
pop
mov
lret
mov
mov
rclb
jl
pand
push
push
aaa
push
scas
xchg
dec
push
nop
in
add
hlt
inc
cld
push
pop
mov
push
mov
inc
xchg
push
jecxz
js
adc
xchg
call
mov
leave
and
out
or
gs
pop
arpl
pusha
jp
sub
or
fldl
pop
nop
pop
dec
push
inc
into
cmp
enter
out
push
or
ret
ret
xchg
cmp
or
and
outsl
mov
mov
pop
lods
cmp
in
and
mov
subl
jne
pop
adc
icebp
or
push
stos
mov
adc
fdivp
and
sbb
cmp
cmp
mov
adc
loopne
les
mov
pop
fldenv
push
cld
mov
mov
xchg
addr16
imul
pop
xchg
dec
sub
inc
lahf
jl
ret
adc
dec
out
fdivrs
mov
mov
push
jp
lds
dec
imul
lods
in
sahf
inc
inc
add
pop
push
fwait
movsb
out
ds
xchg
pop
mov
notl
test
cs
leave
xor
cmp
rorb
cmpb
sahf
aaa
aam
das
cltd
push
je
jge
pop
adc
sahf
push
pop
or
inc
inc
into
dec
sub
addr16
xorb
rorb
je
mov
cmc
in
push
cwtl
packssdw
movsl
cmp
scas
decb
jbe
lret
cmpb
cmp
add
cli
inc
pop
sub
add
or
mov
loopne
and
xor
inc
dec
or
mov
jp
ds
dec
ljmp
xchg
mov
push
rcrb
sbb
enter
sbb
sbb
js
out
mov
mov
out
shl
dec
jnp
mov
add
xor
mov
fsubrl
out
pop
add
and
sub
cltd
dec
jl
cwtl
pop
addr16
inc
add
adc
push
lock
push
xor
cmp
ja
cli
repnz
add
stc
add
cmp
inc
mov
pop
mov
pop
adc
das
rcr
movsl
scas
icebp
ficomps
in
mov
push
loop
mov
or
stos
pop
add
rcrb
arpl
jl
arpl
xor
jns
pop
xchg
and
sbbl
sbb
jmp
gs
pop
jl
fdivl
xor
cmp
mov
mov
iret
sub
out
cmpsl
bound
sub
sub
ret
mov
mov
stos
push
cmpsb
adc
imul
and
pop
jns
out
cs
mov
mov
test
or
cmpsl
sub
sub
pop
pop
bound
sbb
lods
pop
js
outsb
inc
clc
sti
in
inc
subl
mov
dec
mov
aam
cmpsb
xchg
int
cmpsl
push
mov
mov
das
int3
imul
pop
xchg
push
call
and
dec
adcl
stc
sbb
repz
or
pop
cwtl
push
jbe
lods
cmp
adc
or
leave
fdivr
or
push
loope
push
xchg
mov
test
fdivs
dec
sub
out
mov
lahf
cli
das
and
std
or
and
adc
cmp
mov
lods
roll
ss
loopne
mov
into
inc
imul
jne
std
in
push
jb
xorb
inc
mov
test
gs
loope
sub
push
cmp
jns
mulb
mov
test
or
mov
ret
outsl
cmpl
xchg
mov
ja
adc
and
mov
es
lods
mov
dec
sti
dec
mov
cmpb
lods
cmp
mov
or
xor
lret
aas
stos
cmp
out
iret
int3
sbb
and
xchg
movsl
add
jl
inc
adc
cwtl
in
pusha
jns
xchg
inc
adc
mov
inc
add
insl
sbb
fdivrl
xor
or
aaa
jnp
jge
and
lret
inc
cmp
clc
call
and
cwtl
movsl
mov
js
pop
cmpsb
or
pop
jns
imul
jle
jl
or
test
rolb
cmp
mov
test
xchg
pop
mov
inc
stos
dec
or
dec
lds
gs
jge
and
or
faddl
mov
arpl
sbb
add
scas
ja
mov
and
xchg
daa
rcrl
movb
xchg
mov
stos
ss
jl
pop
loope
std
stos
pop
inc
push
xchg
dec
or
into
leave
cmp
jecxz
cltd
out
punpcklbw
popa
pushf
jmp
pop
push
dec
sub
orl
push
mov
repz
xor
int3
xchg
mov
aaa
jb
ds
movsl
jb
sti
push
inc
inc
dec
lock
movsl
lds
aas
outsb
cmp
lds
out
lock
mov
data16
mov
add
cmc
push
dec
pushf
and
cltd
xchg
cmp
loope
orb
outsb
sub
dec
int3
pop
lock
inc
sbb
rorb
insl
jne
inc
inc
jo
cmp
cmp
imulb
xchg
mov
inc
dec
ss
jnp
push
addr16
andl
fsubrl
outsl
repz
cmp
icebp
cmpsb
sbbb
scas
pop
shrb
push
cmp
or
je
pop
dec
sub
xor
das
or
jl
rcrb
and
lock
cltd
stos
jne
pop
scas
jecxz
cmc
dec
jo
add
rcl
inc
call
cltd
or
enter
dec
adc
sbb
or
fcoml
lcall
aaa
fwait
xchg
xchg
movsb
pop
movsl
nop
cmp
jbe
jno
adc
lret
scas
daa
adc
xor
repnz
add
jnp
jns
test
xor
cmp
sub
dec
lret
cmp
fstpl
out
xor
insb
sub
jecxz
sbb
mov
aaa
ret
aam
or
cmp
inc
popa
jp
and
pop
sub
xchg
dec
jg
cmp
push
pop
push
xor
push
or
pop
add
jo
mov
inc
mov
mov
out
xchg
pop
cmpl
jg
call
mov
inc
pop
mov
leave
fs
xchg
lcall
cmpl
push
ja
cmpsl
int3
and
or
dec
lock
mov
aaa
arpl
jnp
jp
sub
aad
negb
push
mov
sbb
rcrb
cmp
cmp
lds
mov
sbb
push
arpl
pusha
or
cmp
inc
or
testl
push
jp
mov
mov
xchg
or
lret
bndldx
stos
movsl
push
xor
addr16
xchg
fistl
pop
push
sub
movsb
jb
stos
mov
mov
cmpsb
cmp
cwtl
mov
xchg
inc
bound
scas
or
push
dec
xchg
psrlw
sub
and
roll
jbe
xor
pop
jg
fdivrl
aas
lcall
stos
mov
and
scas
das
andl
push
rcrb
lds
add
inc
imulb
imul
out
or
mov
lcall
push
lcall
mov
int3
scas
dec
movsb
negb
pop
setns
inc
inc
loopne,pt
mov
dec
lcall
rcrl
rcrb
adc
loope
testl
jmp
mov
popf
push
inc
push
push
int3
dec
dec
xchg
dec
js
xorb
mov
loope
insl
js
sarw
xchg
adc
mulb
orb
mov
jp
pop
lds
mov
icebp
adc
sbb
cmp
cmpsb
jecxz
xor
xchg
movsb
cltd
es
enter
out
mov
sbb
fisubs
lds
jl
jmp
lahf
push
aad
aas
loope,pn
xchg
cmp
add
rclb
adc
mov
test
or
int3
xor
rcrl
popf
js,pn
lret
adc
int
les
fwait
pop
lea
ljmp
rcrl
inc
mov
loope
cmp
aad
insb
bound
xchg
icebp
sub
or
mov
cmpsl
jecxz
xor
frstor
xchg
push
sbb
adc
pusha
mov
lods
add
sub
clc
mov
adc
lret
call
loop
aas
mov
shll
mov
hlt
mov
in
inc
and
jne
mov
ja
out
pop
shll
push
xchg
sbb
dec
notb
movsl
dec
in
inc
dec
mov
les
iret
cwtl
push
loopne
sbbl
jle
xchg
dec
cmpsb
adc
pusha
arpl
lods
mov
and
imul
lock
xor
push
jl
jne
testb
push
jb
mov
mul
or
scas
push
subl
and
mov
and
dec
jmp
mov
aam
lcall
cwtd
ja
cmpsb
movsb
insl
call
inc
xor
lahf
jl
adc
mov
lods
push
cmp
lds
ljmp
cmp
shrl
gs
jae
pushl
bound
dec
movsb
xor
cltd
testb
xor
rorb
out
sub
repnz
sahf
arpl
pop
das
movsl
push
aam
ljmp
cmp
in
xor
rcrl
sbb
aas
add
test
or
andl
dec
push
dec
and
pop
fcmove
and
mov
and
push
xor
xchg
mov
mov
es
push
loopne
in
sbb
aad
aad
dec
adc
daa
push
xchg
insl
out
cmp
mov
and
pop
pop
push
add
nop
cmpsb
xor
rcll
scas
jmp
jmp
add
xor
in
or
jmp
enter
push
cmp
mov
test
lcall
mov
aaa
ret
gs
loopne
loope
xchg
test
xchg
push
and
ds
xor
push
jae
lcall
loope
inc
imul
fstps
xor
loope
daa
pushf
pop
push
mov
and
or
fstl
je
mov
add
inc
popa
bound
jbe
or
popf
xor
push
fdivrs
pop
mov
cmp
push
cmp
lock
imul
gs
dec
cmpl
dec
sbb
push
pop
mov
mov
leave
jo
clc
notb
jb
xor
xor
jecxz
fucomp
inc
pushf
shl
sbb
sbb
pushw
adc
repnz
add
mov
pushf
pushf
test
repnz
xor
aam
or
dec
cwtl
mov
adc
dec
cmp
cwtl
add
stos
insb
add
ret
xchg
mov
in
or
das
nop
fcomi
and
xchg
mov
sti
and
pop
push
adc
stos
mov
inc
inc
iret
push
inc
mov
insb
cli
aaa
lods
jmp
xchg
cmc
xchg
and
jmp
shlb
gs
popl
shll
xor
rcrb
scas
enter
xor
mov
inc
push
hlt
popf
add
xchg
pushf
mov
adc
adc
cmp
mov
cltd
inc
scas
add
cmpsb
mov
sarl
adc
xor
mov
stc
push
es
nop
xchg
fisubl
add
cmp
cmpsb
mov
cmpsb
push
pop
inc
mov
jge
pop
cmp
rcrl
push
shll
dec
push
mov
pop
push
das
cwtl
sbb
les
cwtl
dec
in
pop
cmpsb
jbe
insl
and
sti
ret
cwtl
jo
test
cmpb
mov
mov
dec
test
jne
push
andl
insl
dec
xchg
mov
int3
or
es
pop
jg
cmpsl
out
push
ds
test
or
push
iret
push
add
xor
gs
je
or
xor
sub
lods
and
push
pop
jge
xor
cmpsb
mov
das
sahf
inc
adc
and
xor
data16
and
in
int3
push
cs
and
fcmovnu
out
imul
add
out
sub
int3
inc
push
mov
lods
jne
arpl
jmp
xchg
mov
add
stos
jecxz
jno
mov
sbb
jle
aad
sbb
mov
filds
pop
push
pop
and
cmp
stc
popa
and
cs
ficompl
lods
sbb
lret
jecxz
lahf
pop
ror
mov
cmpsl
mov
insl
xchg
test
lea
xchg
shll
movsl
mov
ds
std
popf
imul
jge
inc
inc
pop
rorl
push
inc
bound
mov
insb
jge
out
inc
push
cwtl
or
std
stc
xor
jecxz
sarb
sti
sarl
push
pop
inc
out
je
daa
sbb
ficompl
inc
stc
fists
mov
adc
dec
pop
imul
fldt
fs
pop
cmpsl
std
adc
mov
in
fistps
adcl
rcrl
inc
orl
pop
iret
cltd
push
xor
notb
and
mov
jge
inc
dec
flds
or
ret
iret
mov
adc
mov
push
cmp
popa
add
in
jnp,pt
fstl
lcall
ds
test
mov
xchg
xor
cmc
mov
mov
addl
aad
push
gs
out
sahf
push
sbb
insb
adc
pop
xchg
adc
dec
fwait
xchg
and
xlat
int
cmp
adcb
jle
xlat
mov
shll
cmp
fs
xchg
xchg
push
xor
cmp
insl
or
bound
sbb
adc
inc
push
loop
test
aas
ljmp
and
sbb
icebp
xchg
icebp
pushf
adc
out
lea
push
inc
or
fcmovnbe
jne
out
jns
or
mov
mov
mov
int
cmpl
or
xor
xchg
add
push
jge
dec
fucomp
mov
enter
ret
push
cmp
rorl
es
or
fisttpl
adc
mov
sbb
add
mov
shlb
xchg
in
push
jl
jge
adc
mov
mov
test
pusha
in
dec
scas
inc
inc
pop
jnp
pusha
in
dec
mov
test
cs
int3
inc
mov
dec
les
dec
lds
and
inc
out
test
xchg
sub
mov
rcrb
or
testb
int3
lea
inc
inc
std
jle
pop
gs
addr16
das
adc
or
lods
add
imul
aaa
sbb
push
or
adc
xor
push
hlt
pop
adc
sub
cwtl
and
xchg
shlb
mov
cwtl
sti
sub
out
add
lea
mov
xchg
adc
mov
sub
out
adc
cltd
out
dec
stos
movsl
repnz
cmp
jle
clc
cmc
out
cmp
in
and
cmp
cmpsl
pop
hlt
adc
dec
mov
dec
mov
pop
in
xor
mov
xor
sub
xor
mov
mov
mov
arpl
sbb
out
popf
in
pop
int3
dec
sbbb
inc
das
nop
mov
sbb
mov
clc
mov
xor
cmpsl
lret
dec
dec
out
movsb
or
add
and
jmp
mov
push
fucom
jb
add
adc
inc
data16
jns
je
jecxz
loope
iret
dec
lods
mov
mov
sahf
fistpl
xor
scas
mov
mov
rorl
sub
leave
ret
mov
in
and
cli
adc
insb
in
pop
fwait
cmp
jnp
jne
cmpsb
cli
dec
push
jge
fldpi
addr16
or
xchg
ds
pushf
pop
fcomp
jl
pop
cltd
movsb
inc
mov
adcb
ficompl
mov
sub
pop
out
lods
xor
stc
mov
sub
or
inc
xor
fsubl
int
in
stos
lcall
push
jg
sbb
push
cmpsl
mov
mov
inc
xor
les
or
pop
insb
or
xchg
sarb
daa
mov
imul
repz
xor
pop
push
inc
push
cmp
add
imul
push
ljmp
xchg
in
mov
sub
pop
and
xchg
sbb
cmpl
inc
std
cmp
cwtl
incl
rcrb
pushf
push
test
and
fwait
sarb
test
dec
fdivrl
rcll
shrl
dec
cmp
push
xchg
inc
mov
xchg
jo
adc
and
cmp
cmpsl
sub
push
push
rorb
push
mov
imul
add
adc
mov
xor
adcl
cmp
xor
dec
add
out
xchg
add
sub
and
inc
xor
mov
push
jp
cld
pop
or
push
stos
or
arpl
jl
jbe
rdtsc
sub
loopne
cs
push
into
mov
leave
sahf
pop
mov
nop
mov
mov
xchg
sbb
es
jns
imul
xor
mov
xor
mov
xor
cld
xchg
jnp
xchg
push
cli
test
pop
shll
movsb
adc
xor
mov
sarl
xchg
dec
sbb
lahf
adc
jg
xor
mov
push
pop
fistpll
xor
push
shrb
loope
inc
or
int3
mov
inc
pop
out
add
out
call
push
xor
xchg
adc
or
in
cmpsl
stos
xchg
enter
mov
jnp
std
push
add
outsl
push
push
repnz
pop
sarl
jo
mov
mov
xor
jecxz
sub
outsl
fsubs
sub
cmp
jne
and
xlat
xor
mov
jge
pop
das
arpl
lcall
lods
mov
add
call
sbb
cmp
lds
xor
out
dec
or
add
pop
push
xor
sahf
jg
lds
adc
lahf
addr16
mov
xchg
pop
cli
inc
jmp
xchg
jns
movl
cmp
xor
push
mov
mov
cmp
icebp
inc
test
adc
pop
mov
jecxz
pop
sub
cmpsb
popf
sub
adc
popf
repnz
sbb
in
xor
add
or
loop
cwtl
ret
push
stos
insb
ret
mov
dec
cltd
inc
shlb
ret
enter
in
cmpsb
jns
lds
clc
test
movl
lea
xchg
iret
out
cs
jo
mov
push
outsl
iret
xchg
dec
mov
dec
lods
jp
and
pop
jb
jl
cmp
aas
mov
inc
cmp
xor
xor
jb
fstpl
push
scas
pop
movsl
mov
cli
aaa
push
or
push
xchg
adc
cmp
fistpll
sarb
scas
xor
jge
cmp
sbb
popl
mov
jge
ret
in
aam
adc
daa
mov
or
rorb
fists
push
push
mov
jg
fcoml
and
mov
incb
pop
and
mov
or
not
aam
sbb
dec
fwait
lock
mov
es
sbb
xchg
popf
lret
pop
sti
je
ret
insl
int
xor
add
lcall
cmp
repz
in
roll
cli
stos
pop
psubb
mov
mov
push
test
pop
cmc
sahf
jge
lcall
in
mov
int
movsl
jmp
icebp
mov
cmc
cmp
je
in
cmpsl
jle
fdivl
dec
hlt
shl
xor
aaa
cmp
dec
sarb
jmp
das
scas
xchg
xor
push
xor
pop
jne
dec
test
pop
lds
jnp
pop
lcall
dec
pop
int
pop
mov
out
jmp
push
aad
iret
dec
sbb
xchg
dec
addr16
iret
jl
add
add
movsb
les
mov
mov
icebp
xor
lock
or
mov
xor
dec
sarb
fsubl
push
xchg
popf
icebp
push
dec
gs
enter
into
inc
push
and
hlt
jl
test
xchg
sti
jg
sub
ffree
cmc
sti
ret
fldcw
sbb
les
loopne
push
pop
pushf
pop
lret
pop
pop
pop
push
clc
inc
jp
inc
in
or
inc
xchg
jecxz
ds
mov
mov
lods
dec
push
and
sub
es
cs
lret
mov
dec
das
ss
fnstsw
pop
aaa
dec
inc
fnstsw
cmp
adc
push
mov
shr
mov
outsb
ret
mov
stos
jmp
or
iret
mov
dec
adc
cmp
sarl
sbb
adc
xor
sbb
out
out
dec
outsl
movsl
jg
leave
popf
xor
ret
cmpl
inc
gs
scas
add
enter
cmc
pop
mov
arpl
inc
jecxz
call
stc
adc
cld
push
xor
push
popf
dec
pop
pusha
adc
push
out
outsb
rcrl
sub
adc
popl
xchg
fnstsw
jbe
movsb
dec
mov
ja
rol
dec
popa
call
inc
add
sti
outsl
scas
arpl
cmpps
daa
in
in
outsl
xchg
subb
sub
and
xor
aad
inc
sub
cmp
mov
fnsave
aam
cmp
mov
pop
fcmove
mov
daa
js
faddl
xchg
nop
dec
inc
push
or
jp
lods
fisttps
inc
int3
popa
pop
mov
call
push
aad
push
stos
jl
cmp
ljmp
jnp
push
pushf
ljmp
dec
rcll
add
ljmp
mov
mov
dec
dec
std
mov
repz
xlat
and
and
das
mov
mov
int3
mov
push
pop
inc
aas
adc
or
cmp
adc
sarb
lock
int3
xchg
rcl
mov
std
rorb
pop
push
pop
adc
repz
pusha
outsb
mov
in
movsb
movsl
pop
je
or
inc
mov
cmp
ss
xchg
enter
icebp
jg
pop
mov
mov
sub
rcll
cmc
fisubrs
shll
ja
bound
cld
mov
subl
sbb
cld
push
jle
dec
and
mov
movq
gs
mov
in
xor
dec
jg
dec
in
jg
ss
add
pop
call
lahf
outsl
xchg
sbb
shl
mov
inc
xchg
xchg
jbe
push
mov
xorb
inc
shrb
das
mov
in
je
sti
aaa
aad
nop
mov
enter
mov
aam
test
and
mov
dec
mov
inc
dec
dec
cltd
sahf
test
loop
or
sub
dec
xchg
push
cmp
loop
lods
or
mov
cmp
aaa
and
in
test
mov
hlt
shll
pop
push
xlat
lcall
mov
xchg
movsl
mov
jl
addr16
xor
lret
into
dec
mov
pusha
sbb
inc
mov
mov
ret
out
rcrb
notl
arpl
test
fs
adc
call
fdivs
daa
imulb
mov
aaa
ret
mov
rorb
gs
pop
xchg
cs
sbb
test
pop
push
mov
cmp
push
and
jl
ljmp
popl
out
divb
fdivrl
lods
and
jno
imul
loopne
push
xchg
cs
or
int3
das
and
sbb
mov
scas
push
leave
idivl
push
fwait
icebp
arpl
pop
dec
add
gs
ficompl
iret
mov
decl
sub
cmp
cmp
jno
mov
add
arpl
xchg
or
test
add
ss
jb
jmp
mov
jmp
stos
push
outsl
sbb
stc
pop
insl
faddl
jnp
sub
adc
jb
xor
es
mov
or
push
stc
mov
xchg
mov
push
js
jl
aad
and
cmp
inc
repz
test
movsl
test
inc
cmp
mov
ret
mov
lea
jmp
shll
cmc
push
mov
pop
mov
scas
test
aad
cmp
and
test
je
and
pop
mov
aaa
ret
push
in
lea
pushw
cmp
out
pop
or
xchg
stc
pushw
sub
das
push
fwait
popf
mov
sub
int3
xchg
inc
adc
push
sbb
and
dec
or
mov
mov
or
jb
mov
mov
std
leave
xlat
fbstp
mov
pop
sahf
stos
cld
adc
frstor
mov
and
test
es
sub
mov
push
adc
xchg
mov
dec
xlat
lcall
sbbb
andb
inc
fdivrl
xor
addr16
imul
sub
jle
mov
mov
add
jl
or
inc
mov
lods
and
mov
neg
xchg
sbb
add
popf
dec
pop
cli
push
int
mov
ja
inc
outsb
dec
pop
outsb
popf
sub
jno
bound
or
or
xchg
shlb
jle
sub
ss
add
aad
movsl
ss
mov
adc
scas
xchg
fwait
daa
or
gs
and
test
xor
jle
roll
stc
fwait
add
pop
stos
or
stc
fsubs
and
jae
ret
enter
cmp
push
jae
dec
repnz
fisttpll
xor
xchg
xor
push
cmp
repnz
or
jmp
dec
inc
imul
faddl
mov
xchg
iret
pop
dec
and
jne
fldz
xchg
out
pusha
add
popaw
or
push
xchg
mov
and
xchg
out
xchg
push
mov
or
push
addb
mov
xor
pop
sub
es
sahf
xor
rcll
orl
rolb
push
ds
mov
mov
xor
test
xchg
fistpll
jmp
insl
pop
mov
out
mov
sbb
cmpl
mov
aaa
cld
cmp
sub
xchg
enter
cmp
in
dec
lret
pop
xchg
cmc
out
fldl
inc
hlt
rorl
loopne
out
negl
jge
fistpll
pop
inc
das
repnz
xchg
inc
push
decb
xchg
sahf
inc
or
loope
pusha
pop
xchg
cmp
leave
aas
mov
cld
cld
call
sbb
sbb
mov
sub
add
lcall
loop
or
xor
push
mov
sub
adc
scas
test
outsb
and
xor
mov
add
sbb
notl
adcl
fwait
rcrb
dec
mov
shll
lret
xchg
je
mov
xor
or
and
add
in
or
lock
mov
dec
add
jge
pop
xchg
add
sub
push
nop
adcb
xor
mov
jge
outsl
inc
enter
les
push
lds
mov
dec
mov
lahf
sub
jmp
or
cmp
pop
adc
jne
xor
rclb
addr16
jg
fidivrl
sub
and
ja
mov
loopne
push
pop
jmp
jb
divl
stos
sub
jle
repz
stos
sbb
inc
stos
sub
js
pop
sbb
ds
cmp
in
shlb
pusha
fcos
jmp
xor
and
lret
int3
cmp
cld
sbb
xchg
jae
test
clc
loope
jns
mov
push
and
lods
jae
test
push
dec
push
or
jns
movsb
pop
testb
mov
mov
imul
mov
sbb
aas
jae
mov
and
inc
sbb
adc
std
sub
dec
dec
leave
mov
in
psllq
aaa
repnz
adc
sbb
addr16
push
adc
int
lahf
dec
add
xchg
std
jp
mov
mull
mov
cmp
repz
insb
sbb
mov
xchg
and
pop
mov
lock
bound
jg
stos
cli
add
aas
rcrb
cltd
popa
std
push
lret
mov
mov
lcall
mov
mov
dec
push
lods
test
push
jp
jge
sub
mov
jl
and
mov
popf
addr16
adc
jmp
loop
dec
inc
out
mov
data16
cld
push
pop
into
loopne
lock
sbb
popa
aas
mov
jl
es
out
cmc
dec
push
dec
mov
lea
xchg
popa
aaa
ljmp
in
pushf
cmp
and
xchg
out
jmp
push
and
add
mov
cltd
sahf
inc
inc
out
mov
jns
aas
fdivrp
xor
ss
daa
sbb
int
mov
sarl
rclb
cs
std
mov
pop
mov
pop
outsb
push
jp
out
cmpsb
cmc
bound
and
pop
and
sub
push
mov
movsb
mov
popf
imul
and
add
adc
aas
lret
data16
loopne
call
inc
jbe
das
dec
or
sbb
mov
int
mov
rcl
lods
sbb
pop
and
pop
mov
sbb
data16
fldenv
pop
jmp
pop
jns
sahf
ljmp
fstps
lock
testb
lcall
pop
mov
les
jp
cltd
sti
inc
pop
fcompl
or
cmc
cmp
mov
add
sbb
sbb
addr16
jns
mov
xor
shll
mov
jle
pop
ja
pop
or
xor
or
fcomps
in
push
pushl
jmp
or
pop
lock
fmul
cmpb
jne
repz
mov
in
testb
aad
xorl
imul
pushf
inc
lods
mov
pop
loopne
mov
cmp
pop
in
sbb
sbb
nop
xchg
adc
out
sub
mov
shrb
decb
aaa
arpl
sbbl
adc
pusha
cmp
cmpsb
or
notb
mov
es
push
and
mov
lret
xlat
test
or
inc
mov
xchg
je
push
add
popf
cmp
lret
clc
scas
cmc
pop
in
sub
inc
mov
mov
popa
arpl
push
incl
sbb
aas
xchg
fists
aam
stc
loopne
stos
in
std
popa
js
dec
and
fdivrs
and
xchg
lods
cmp
lahf
lret
ss
adc
adc
pushf
std
out
adc
dec
sbb
cmpsb
leavew
popf
jno
dec
lds
mov
lahf
xchg
mov
adc
daa
cld
pop
fnstsw
cli
inc
stos
sub
enter
je
pop
jno
int
cmp
dec
push
cmp
add
cli
mov
fwait
push
bound
mov
movsl
call
in
test
mov
loop
test
test
mov
sbb
outsl
pop
aas
mov
and
or
sti
mov
add
push
xor
in
outsb
mov
xchg
repz
xorl
ret
stc
or
je
push
fwait
adc
arpl
rorb
sbb
test
dec
sub
mov
ljmp
repz
add
sarl
or
sti
dec
mov
mulb
pop
or
pop
jo
imul
mov
clc
or
rorb
lea
push
jmp
inc
mov
aas
scas
out
cmpsl
cmpsl
add
test
fadds
push
jge
clc
add
pop
arpl
icebp
cmp
cmp
cld
inc
cmp
cmpb
in
out
lds
jo
cld
test
or
mov
imulb
leave
out
pop
dec
push
int3
insb
pop
and
or
daa
mov
add
add
loopew
dec
inc
lods
lods
sub
lods
add
roll
arpl
sbb
std
or
or
xor
or
lock
mov
jo
push
pop
mov
shr
mov
sub
aas
inc
test
arpl
xchg
jnp
lock
lods
jle
sbb
dec
nop
xchg
xchg
popa
fs
sub
push
jno
jmp
orb
pop
insl
rcrb
cmp
fldcw
or
or
add
mov
push
pop
fcoms
sbb
ficomps
nop
mov
xchg
outsb
pop
cmpsb
ss
pop
fadds
aad
pop
cli
xor
push
xor
jnp
and
out
lcall
jp
lea
pop
daa
lret
sbbb
inc
aam
loop
rcl
or
ret
or
pusha
lods
scas
cmpsb
aad
push
daa
repnz
jbe
in
jae
enter
std
xchg
lds
cmp
fmuls
sub
cs
testl
jae
gs
pop
mov
xor
lock
aad
mov
in
jo
scas
jne
cmp
jno
pop
lahf
idivl
cmpsl
add
inc
push
cld
push
outsl
leave
adc
push
movb
dec
cmp
mov
and
xchg
mov
out
pandn
cmpsb
int3
pop
sti
scas
push
rol
push
jns
jo
xlat
mov
jns
imul
into
mov
fsubr
push
jecxz
into
sahf
mov
addb
pop
rcll
pop
push
xchg
push
fwait
arpl
xor
cmp
shrb
inc
add
mov
or
in
cmp
pop
cli
mov
iret
push
out
and
add
xor
mov
add
jb
cld
xchg
jbe
frstor
xchg
into
lcall
enter
add
xor
xlat
sub
mov
pop
shll
dec
cs
daa
add
inc
and
jo
add
mov
out
cli
mov
into
jge
fsubs
jg
or
lahf
cs
cmpb
push
arpl
push
and
clc
sahf
mov
push
dec
bound
push
pushf
lds
jge
pop
inc
inc
pop
push
push
push
and
jl
inc
mov
movsl
pusha
cmpsl
dec
out
xor
cmp
add
lret
fbstp
imul
out
test
in
push
inc
mov
fistpl
cltd
xchg
cmp
jle
or
jo
pop
cmp
pop
fists
out
mov
xchg
mov
adc
xchg
pop
xchg
incb
fwait
test
push
jns
sbb
daa
movsb
push
pushf
shlb
xor
out
or
push
lret
cmp
subb
loopw
mov
jns
sahf
outsl
loopne
and
inc
scas
xor
mov
ss
outsl
jge
add
jns
in
pop
xlat
xchg
subl
lock
pop
sub
into
into
sbb
addr16
xor
inc
adc
out
mov
jle
lcall
push
loopne
dec
adc
js
aam
mov
push
scas
in
nop
fwait
or
sti
fs
xor
adcl
je
enter
cmp
mov
fistps
arpl
into
jno
out
inc
movsl
adc
jbe
inc
fsubrl
sbb
jg
out
xor
mov
xchg
mov
pop
mov
gs
or
movsb
and
pop
rclb
xchg
push
adc
aas
sub
imul
shll
or
sub
cmp
movsl
cmpsl
into
addl
test
jo
imul
xor
std
test
das
jecxz
mov
and
shrb
or
popf
out
inc
sub
mov
sbb
loop
jb
addr16
jp
adc
mov
mov
jb
adc
mov
movl
out
pop
gs
data16
fldl
cmpsb
sbb
popa
push
inc
mov
je
lea
sub
jno
pushf
pusha
push
leave
cmp
shlb
cwtl
pusha
adc
cmpsl
push
push
cs
into
mov
stos
xchg
push
je
test
div
enter
inc
push
das
inc
popa
mov
sbb
iret
jns
loopne
and
ja
lret
adc
pop
dec
pusha
js
lahf
push
sbb
dec
jl
jle
xor
adc
lea
and
lret
imulb
fists
sub
rcrl
stc
test
aad
enter
jo
ss
aaa
xchg
mov
push
pop
dec
dec
push
sbb
rcrb
dec
push
adc
cwtl
test
clc
aam
std
popa
inc
mov
shll
inc
stos
hlt
es
pop
sbb
loop
hlt
jl
in
insb
ja
adc
daa
mov
lcall
sbb
cmc
inc
pop
mov
call
js
mov
pop
jp
push
add
loope
jne
mov
outsl
jns
loop
mov
rclb
mov
lods
fld
mov
test
sbb
dec
adc
scas
loopne
cwtl
mov
cmp
stos
xchg
in
in
jnp
int
out
popa
xor
and
dec
lock
sbb
mov
incb
out
xor
add
pop
fdivp
pop
sbb
enter
loopne
roll
cmpsl
mov
adc
push
jp
mov
mov
xor
sbb
push
or
in
sbb
add
lods
inc
sbb
or
jmp
sar
mov
aam
jg
inc
shrb
lds
js
xchg
mov
test
pop
inc
push
test
mov
push
xor
cld
pop
add
mov
faddp
xor
adc
stc
push
mov
adc
mov
mov
adc
adc
push
push
add
fbstp
adc
fidivl
dec
and
mov
xor
fildll
das
cmp
mov
pop
mov
arpl
dec
sti
pop
sub
jmp
cld
je
xchg
inc
mov
cmp
leave
adc
hlt
sbb
jge
pop
test
sub
sbb
add
mov
mov
shll
inc
xor
sub
mov
sub
and
out
cld
cmp
imul
sub
sub
rcll
jb
out
pop
xchg
mov
sarb
cmp
mov
repnz
mov
inc
popa
andb
cld
scas
xor
pop
icebp
cmp
fld1
jo
sub
inc
test
pop
adc
je
mov
cwtl
dec
out
add
test
mov
push
sub
ret
xchg
aam
xchg
and
inc
and
jp
jae
insl
jle
mov
mov
insl
add
lcall
xchg
xchg
mov
or
mov
and
xor
inc
sub
ret
cmpb
or
andl
add
sbb
xchg
sarb
test
cli
mov
movsb
fisubrl
xchg
xor
shl
push
in
cmpsl
and
test
iret
pusha
loope
ja
xchg
mov
mov
movsl
arpl
aad
test
sub
jmp
cs
clc
xor
lret
xor
sub
push
jecxz
xlat
mov
mov
ljmp
lea
xchg
testb
xchg
mov
xchg
or
dec
xor
push
in
mov
pop
pop
icebp
and
or
pop
xchg
sahf
push
stos
scas
mov
cmp
jmp
rolb
out
or
jns
lret
or
nop
fwait
cmp
bound
push
clc
push
cli
insl
and
repnz
pop
ret
xor
fdivrl
daa
add
mov
adc
das
mov
pop
pop
icebp
mov
xor
jl
movsl
inc
adc
jae
mov
mov
mov
sbb
rolb
push
xchg
rcll
repnz
insb
imul
xchg
or
stos
push
outsl
mov
and
xor
cmp
jecxz
or
adc
xor
in
aam
sub
jo
addl
pop
addl
mov
mov
out
push
dec
push
pop
inc
pop
mov
icebp
stos
push
mov
lret
dec
mov
or
mov
or
inc
lods
push
or
sbb
pop
test
out
and
lock
sti
std
enter
sbbl
dec
daa
jge
xchg
pop
mov
inc
ja
pusha
adc
ret
mov
mov
pop
les
add
imul
dec
and
jo
jnp
mov
add
jno
sbb
jae
add
adc
idivl
out
std
inc
test
bndldx
xchg
shlb
lea
fcmove
xchg
mov
shll
jmp
xchg
pop
mov
cmc
xchg
pop
or
sub
sub
push
cmp
data16
cmp
enter
and
sbb
mov
jg
dec
scas
fistpll
jle
test
repnz
pushf
jl
jp
dec
inc
xchg
into
cmc
sti
decl
mov
pop
mov
adc
sbb
dec
add
xchg
es
push
pushw
insb
out
cmpsb
push
xor
jg
fldenv
xchg
inc
faddl
xchg
movsl
adcl
add
add
fidivl
es
insb
mov
sub
inc
cmpl
addr16
das
std
sub
int3
das
loope
lds
jno
test
pop
cwtl
gs
frstor
loopne
sub
ret
ss
test
inc
mov
push
sub
mov
ds
inc
cmp
inc
mov
out
movsl
roll
and
rcrb
xchg
filds
adc
pushf
movsl
sub
mov
repnz
xchg
inc
lea
outsb
enter
imul
sub
jp
pop
int3
fdivl
movsl
les
test
or
imul
inc
and
pop
dec
addl
scas
in
sbb
popa
cmp
jbe
jecxz
add
into
cmp
xchg
cmp
stos
pop
jno
add
push
repnz
and
xorl
xchg
cli
dec
xchg
bound
pop
mov
loope
negl
cwtl
jbe
add
leave
jp
dec
stos
adc
in
mov
out
push
jle
fstps
adcb
sbb
mov
ds
das
push
or
xchg
jne
cmp
inc
jp
imul
dec
push
popa
push
inc
jp
lds
arpl
fistpll
mov
sbb
incl
mov
mov
adc
flds
sub
stos
sbb
stc
data16
lret
sub
negl
loopne
je
dec
xor
xchg
dec
sub
cmp
bound
push
popa
enter
push
xchg
cmp
stos
pop
mov
push
mov
hlt
mov
das
pushf
sub
jmp
lods
out
rcrb
xchg
cmp
popf
mov
jnp
jecxz
outsb
enter
xchg
push
shl
inc
out
out
nop/reserved
jno
mov
fs
jns
or
jne
dec
inc
xor
outsb
popl
fwait
sbbb
xchg
mov
mov
loop
or
jle
inc
and
sbb
mov
sti
into
arpl
or
cmpsb
gs
push
jne
mov
test
xchg
loop
xchg
bound
iret
cwtl
cmpsb
out
add
mov
mov
add
int
rclb
sub
mov
outsb
int
pop
adc
lahf
mov
nop
sub
int
stos
mov
inc
lea
xor
jbe
cmp
cld
pushf
mov
dec
jae
insl
lea
or
idivb
pop
push
inc
in
cmp
xchg
jmp
insl
pop
popa
adc
adc
lea
test
jne
leave
ror
xchg
mov
stc
adc
daa
mov
outsl
xchg
xchg
fidivrl
pop
inc
mov
cli
sbb
mov
jle
pop
push
dec
and
std
xchg
out
aad
pop
repz
sub
inc
loop
insb
mov
xor
add
xchg
xor
xlat
or
not
ljmp
xor
shlb
xchg
cmpsb
inc
sbb
mov
ret
inc
loopne
inc
ds
xchg
dec
xor
repz
push
cmp
or
xor
lods
nop
mov
imul
push
or
and
pop
mov
cwtl
daa
or
mov
mov
mov
sub
popa
cmc
jbe
cmpsl
adc
xchg
sarl
sti
sub
ret
fwait
add
adc
push
clc
sub
addb
add
or
xchg
xor
cmp
add
imul
add
and
pop
pop
cld
stos
iret
stos
xchg
pop
mov
test
mov
lods
inc
pop
or
into
mov
push
mov
sub
subl
jl
mov
rcll
add
mov
add
mov
and
int
pop
inc
xlat
frstor
adc
and
scas
jno
das
lret
cli
mov
std
iret
push
and
push
test
imul
cmp
rolb
sarb
popf
ret
gs
pop
sbb
add
cmpsb
add
lods
leave
into
es
mov
je
pop
xchg
das
xlat
aad
insb
fnstenv
dec
rcll
jecxz
rcll
add
xchg
sbb
push
xchg
fwait
in
jmp
push
mov
push
sub
or
popf
and
ret
movsl
push
fadd
mov
jge
jno
xor
cld
cmpsl
subl
mov
pop
push
addr16
andb
leave
imulb
pop
or
adc
adc
out
xchg
sub
sub
movsl
aam
xchg
mov
test
imul
cli
ja
inc
xor
test
cmp
push
mov
push
test
xor
sub
mov
movsl
sbb
enter
jbe
xchg
dec
sub
call
inc
call
xor
loopne
dec
xchg
icebp
pop
mov
xchg
cmp
mov
insl
nop
mov
pushf
push
test
pop
mov
in
mov
insl
hlt
pop
xor
leave
into
pop
xlat
mov
inc
loope
rolb
jb
in
aas
addl
lock
gs
clc
sbb
mov
popf
push
pop
out
xorl
rep
pushf
aaa
xchg
or
cld
int
pop
mov
sbb
movsl
jb
sub
or
mov
sbb
push
popa
add
cmpb
loop
scas
pop
popf
add
mov
jne
popa
adc
cmp
jp
mov
xchg
inc
loopne
or
cmp
shlb
std
and
or
mov
add
adc
xchg
push
test
loope
and
xor
and
sbb
adc
jne
pushf
das
xchg
jecxz
movsb
xchg
lea
iret
sub
lahf
out
cmp
sbb
push
dec
jae
iret
movsb
push
mov
xchg
mov
sub
inc
shr
adc
test
dec
or
repnz
clc
add
fstps
cmp
lods
rcll
in
xchg
sub
cmp
jns
xchg
mov
mov
add
fisubrl
or
or
aad
rcll
sub
stc
cmp
xor
cltd
leave
pop
adc
xlat
repz
xchg
lods
push
stos
xchg
loopne
xor
cmp
mov
and
or
push
addr16
push
sbb
iret
pop
cld
sub
out
jnp
lahf
jl
idiv
mov
cmpsl
push
pop
sahf
in
or
mov
rorl
dec
dec
mov
aas
clc
inc
nop
push
adc
push
xor
xlat
or
sbb
imul
cmp
mov
cli
inc
test
dec
js
jne
push
xor
sti
sbb
xor
sbb
mov
pop
in
inc
and
jge
lret
sbb
lret
adc
imul
mov
mov
add
scas
pushf
pop
adc
or
ja
aam
mov
cmp
popf
out
add
push
mov
sbb
sub
xor
into
xchg
mov
lods
push
jnp
dec
insb
subb
sti
out
and
dec
push
push
mov
push
repnz
pop
and
sub
push
xlat
and
jno
jl
sbb
test
ja
mov
popf
push
aas
mull
push
dec
je
ss
lods
aaa
je
cli
test
mov
sbb
stos
filds
scas
cltd
sbb
inc
cli
sbb
cwtl
add
addr16
movsl
xor
jmp
and
jae
sarl
push
test
int
into
sub
mov
inc
sub
nop
gs
ja
daa
jge
scas
jno
adc
jnp
or
dec
and
lods
aaa
lea
xor
lahf
lock
leave
inc
cmp
xchg
mov
addl
and
shll
mov
sub
js
clc
mov
add
sbb
in
push
mov
clc
cmp
ret
push
pop
pushf
pop
pop
mov
cmp
lret
fidivrs
movsl
test
sbb
and
aam
negl
xchg
jle
xchg
lods
pop
cld
mov
mov
push
inc
out
out
jle
cwtl
inc
mov
repz
int
inc
mov
in
add
pusha
ss
imul
stc
cmp
pop
leave
cmp
std
inc
mov
sub
jle
jo
pop
xchg
cltd
sub
jecxz
mov
loope
mov
lods
iret
mov
cmp
jecxz
mov
scas
std
jge
test
into
push
sbb
in
inc
add
arpl
mov
inc
test
pcmpgtw
xchg
or
test
sbb
sti
into
push
jp
pop
sbb
add
dec
cld
test
arpl
into
loop
aam
addl
lock
dec
and
das
add
pop
mov
push
mov
outsl
mov
mov
scas
xlat
stos
lock
inc
jl
sbb
jbe
xchg
out
mov
mov
iret
scas
mov
and
js
pop
inc
outsb
sbb
inc
dec
xchg
sub
jg
dec
sub
xchg
xchg
cmpsl
ret
inc
add
outsb
xor
cmp
ret
ret
lea
mov
scas
enter
inc
ljmp
ds
out
jle
or
mov
scas
jmp
jecxz
push
jl
mov
and
lret
dec
insl
sbb
add
cld
jb
push
and
cmp
fidivrl
pop
out
add
pusha
hlt
xor
sbb
decl
xor
adc
sbb
pcmpeqw
dec
and
sub
daa
inc
jno
cmp
in
cmpb
insb
or
jg
push
rorl
pop
filds
movsb
mov
add
cmp
aam
xor
fstl
or
pop
mov
xchg
stos
imull
and
pop
aad
xor
pop
aam
ret
sti
jl
jo
cli
lods
ljmp
mov
pop
sub
clc
cmp
loop
out
fisubs
cmp
je
cld
xchg
cmp
arpl
jb
pushf
adc
inc
push
add
inc
dec
xchg
pop
jl
add
lds
addr16
or
xchg
lea
push
pusha
mov
mov
jns
add
mov
mov
fiaddl
mov
add
cwtl
mov
ss
adc
jnp
aad
lret
and
sbb
lret
icebp
sbb
imul
je
cld
mov
aam
movsb
or
movsb
insb
push
mov
mov
out
addb
int
cs
icebp
jl
mov
in
lods
dec
fcomps
mov
sarb
and
add
data16
mov
or
mov
push
fimuls
push
cmpl
cld
pop
jg
call
nop
push
push
rcll
into
mov
add
mov
cmp
call
dec
out
mov
add
sbb
vpunpckhbw
fadds
test
add
adcl
pushf
xchg
imul
jle
adc
sti
lahf
mov
cmpsl
rorb
lcall
jno
aam
lods
mov
jmp
lds
dec
popa
test
jge
push
mov
lods
test
int3
je
les
fists
mov
mov
ja
and
add
addr16
jne
fsubrl
push
mov
adc
stos
pop
fwait
or
out
adc
mov
inc
adc
sbb
icebp
repnz
iret
outsb
sbb
push
aam
adc
inc
xrelease
cwtl
hlt
push
xor
aam
in
xor
dec
lock
and
enter
in
add
popa
inc
sub
test
push
data16
cli
loope
fldl
mov
xchg
add
xchg
dec
xchg
cmp
fdivrs
pushl
jecxz
pop
ret
sub
subl
jp
add
dec
fiaddl
scas
and
xchg
or
bound
movsb
add
pop
or
cmpsb
pop
jg
scas
cmp
sub
addb
mov
repnz
iret
lcall
cli
inc
add
sbb
icebp
aas
mov
and
and
push
outsb
mulps
int
pop
fs
or
std
push
stos
or
cmp
cld
xor
xor
out
hlt
aas
cmp
dec
mov
sub
in
mov
and
xlat
fistl
push
mov
pop
jecxz
lock
dec
out
rcrb
std
push
push
sbb
mov
cwtl
mov
mov
push
std
cmp
pop
je
scas
sarb
and
inc
bound
dec
pop
sbb
fwait
push
stos
movb
sub
xchg
pop
and
sub
adc
lods
add
sub
mov
test
mov
enter
add
push
int
and
xchg
adc
subb
fmul
dec
mov
mov
pop
inc
cli
mov
popf
ret
lcall
mov
js
add
ljmp
xor
jbe
sbb
mulb
std
loopne
add
fistpl
pop
cmp
jns
outsl
dec
add
mov
enter
jmp
sti
jo
sub
out
jno
mov
dec
pop
out
pop
jp
loope
sub
in
popf
push
xor
jae
dec
cmovb
and
adc
fsubrs
sarb
inc
and
adc
mov
sbb
pusha
ror
jno
and
out
push
pop
mov
cmp
jne
inc
test
inc
dec
aaa
mov
or
decb
sub
mov
push
shlb
cmp
inc
sahf
iret
push
pop
push
xor
cmp
cmp
xchg
push
cld
bound
pop
mov
xchg
pusha
clc
mov
fldl
inc
inc
les
movsl
jne
stc
push
sub
loopne
lcall
aad
les
aas
jae
pop
mov
push
jg
fwait
cmpsb
fsubrs
push
int3
aad
jo
icebp
es
sbb
es
sbb
sub
or
xor
and
xchg
add
xchg
mov
fisttps
or
dec
add
mov
outsb
jp
icebp
daa
mov
mov
push
shrb
mov
adc
and
notb
xchg
sahf
sub
sub
test
pop
cmp
cwtl
xor
and
xlat
in
lods
lods
pop
in
icebp
mov
arpl
pop
cltd
add
xchg
and
insl
push
sub
add
into
es
nop
cmpsb
scas
and
stc
shll
sub
movsb
outsl
insl
fwait
outsb
or
hlt
add
aaa
dec
mov
lahf
dec
imulb
sbb
ds
in
adc
test
loopne
or
lcall
jmp
cmp
js
ss
insb
xor
sbbb
sub
test
imul
in
jp
lods
mov
push
sbb
inc
in
xor
mov
jl
inc
xchg
scas
outsl
pop
sub
int3
test
sub
sti
sub
push
xor
cmp
jecxz
outsl
in
cs
lcall
and
push
jno
push
and
push
sahf
test
adc
mov
xchg
adc
aas
aam
cmp
dec
mov
dec
xorl
mov
sbb
cld
in
xor
push
jl
jge
shr
push
push
lods
and
or
cmp
enter
lcall
test
xchg
push
je
mov
push
pop
sbb
pushl
jg
outsb
lds
jnp
or
lret
dec
cmpb
pop
jbe
mov
sub
in
inc
adc
pop
mov
xor
jno
cmpsl
sbb
jmp
dec
popf
or
mov
lea
mov
xor
or
jl
push
push
dec
pop
aad
lods
mov
std
or
fs
add
in
mov
aaa
adc
imul
popf
mov
fmull
adc
or
lret
jge
loope
mov
xor
xchg
sahf
or
jo
adc
fldcw
test
icebp
addb
mov
arpl
roll
loope
scas
mov
mov
adcl
cmp
mov
dec
sub
pop
mov
inc
adcb
bound
add
sbb
cmp
inc
sbbb
imull
or
xor
test
out
lret
in
fadds
adc
or
orl
enter
je
test
cwtl
fidivl
loopne
sahf
movsb
lret
sbb
cmpsl
mov
sub
push
ljmp
pop
push
adc
adc
push
cmp
fsubrl
fnstsw
and
sar
repnz
jecxz
sbb
pusha
insb
andl
pop
lahf
jg
mov
fnstenv
dec
xchg
and
jnp
incl
clc
hlt
sub
loope
xor
dec
aad
frstor
add
jecxz
outsb
rcll
push
out
xchg
call
xchg
aaa
sub
mov
push
repz
js
xor
mov
popa
popa
adc
push
add
fs
es
sub
in
iret
mov
fwait
cmpb
sub
insb
popa
mov
cmp
cmpsb
stos
jge
mov
pop
ds
out
sub
push
sbb
mov
inc
lcall
ret
jecxz
xchg
push
add
sti
and
test
orl
sbb
js
xor
aad
dec
aaa
inc
lret
aaa
fstps
lahf
jp
pop
lret
dec
add
insl
mov
mov
inc
mov
js
jecxz
jnp
push
mov
mov
fcomi
sbbb
imul
pop
leave
and
fistpll
add
cld
cs
outsl
xor
stos
push
test
or
fs
mov
push
push
imul
mov
ja
fwait
mov
jmp
imul
mov
ret
jbe
jmp
dec
mov
pop
pop
sub
xchg
icebp
shr
addr16
ja
sahf
mulb
add
sbb
xchg
xor
xor
sbb
and
repnz
sub
loope
add
jb
add
add
inc
cmp
loopne
jge
xor
sbbl
lret
xor
in
ljmp
lds
jne
outsl
mov
mov
enter
insl
jo
pop
xor
push
test
or
xchg
cmp
mov
mov
mov
aam
fmuls
push
ret
xchg
mov
ret
fldt
xor
push
ljmp
pop
jo
lods
mov
into
out
sub
pushf
cltd
mov
mov
loopne
fisubl
sub
lds
mov
sbb
jmp
add
cmp
mov
adcl
lahf
or
icebp
std
or
jg
cs
loop
adc
cmp
int
push
cmpsl
xchg
rolb
jmp
imul
lret
pop
cli
into
inc
sub
pop
jae
out
sbb
sbb
add
mov
xor
mov
ja
jg
sub
cmpl
push
mov
mov
sub
mov
pop
inc
mov
or
cmp
push
and
cmp
repnz
inc
sbb
fadds
rcrl
int3
test
pop
add
pop
scas
adc
mov
mov
cld
popa
bound
mov
push
dec
xor
mov
mov
mov
jmp
dec
daa
sub
rorl
lods
xchg
adc
cld
push
push
rorb
xchg
push
push
jecxz
sub
shrb
push
sbb
push
into
stc
xor
lret
xor
sahf
leave
jb
mov
rcll
shl
in
mov
mov
test
jl
adc
mov
lret
cmpsl
out
pushf
mov
cmc
push
jbe
mov
xlat
mov
mov
pusha
push
and
jb
add
pop
cmc
inc
popf
daa
mov
xchg
lcall
out
stc
push
sub
cwtl
in
xchg
or
test
jge
std
iret
fistl
mov
dec
cmpb
stos
int3
mov
scas
sub
push
mov
ret
in
cmp
lock
mov
mov
daa
sub
lret
dec
data16
mov
add
add
shr
test
mov
sub
dec
shrb
xchg
xchg
sub
mov
insb
mov
push
and
outsl
stos
push
fcmove
je
test
cld
ds
scas
lea
sbb
popa
xor
sti
pop
mov
jns
cmp
mov
dec
pop
mov
lahf
adc
fildll
addr16
out
push
insb
jl
xor
fistps
inc
pop
sbb
or
pop
stos
aas
idivb
les
or
mov
mov
cltd
loop
pop
iret
adcl
outsl
adc
push
inc
adc
ret
adc
in
mov
scas
add
jmp
xchg
push
jecxz
int3
xchg
cltd
mov
imul
xlat
xor
mov
push
call
rcrl
fnstcw
or
mov
ljmp
or
call
push
push
cmp
iret
add
pavgw
aaa
fisttps
xlat
adc
movsb
mov
and
hlt
inc
testl
xor
and
ret
push
xor
pop
stos
dec
mov
lret
mov
add
test
ret
xor
rcrl
add
notb
add
clc
scas
inc
sti
lahf
fadds
imul
xorl
pop
notl
and
rorl
mov
pop
pop
scas
lret
xor
ret
sti
push
xchg
mov
jp
test
xorb
sbb
push
repnz
or
mov
pop
ds
popf
mov
lret
lods
leave
lea
push
sbb
dec
and
jle
fbstp
icebp
xor
mov
fldl
pop
mov
push
mov
leave
cmp
aam
mov
loop
mov
loope
pushf
jbe
dec
sub
jp
les
in
push
test
adc
adc
lds
enter
sbb
mov
mov
imul
addr16
es
jl
inc
sbb
int
ret
sbb
cmp
imul
sahf
jp
xlat
mov
mov
orl
inc
enter
dec
or
inc
sub
lock
pop
call
sbb
mov
idiv
xchg
jbe
adc
shll
xchg
or
jmp
mov
inc
ret
jno
lock
mov
pop
sbb
int
lahf
aaa
insl
rclb
or
mov
cld
jno
rcrb
add
xor
ds
cmp
test
lcall
adc
push
ja
jle
out
xchg
andl
add
fidivl
xor
das
inc
xchg
push
cmp
cmp
mov
mov
fdivl
pop
inc
jno
xchg
loope
mov
dec
xchg
pop
push
and
in
ljmp
jne
fs
test
lahf
add
xchg
pop
stos
lods
push
mov
jb
orl
cmpl
push
std
idiv
dec
and
jle
fisttps
or
popa
mov
xorl
xchg
pop
jno
sbb
hlt
dec
pusha
mul
cmp
jge
push
push
add
cmpsl
and
push
gs
insb
jle
repnz
xchg
incb
mov
mov
popf
popl
and
xor
mov
es
sbb
lods
sbb
pop
xor
jns
scas
pop
dec
rcrb
adc
test
lock
xchg
dec
mov
add
lds
mov
add
jne
lods
repnz
test
jl
cwtl
xchg
or
xchg
cmp
mov
in
xchg
test
mov
ljmp
int3
imul
jle
in
cli
loop
jge
test
mov
enter
cwtl
mov
movsl
dec
adc
repz
sbb
lahf
or
jmp
cmpsl
ljmp
out
jp
or
ljmp
int
js
adcl
inc
mov
imul
ljmp
push
shrb
jle
jno
adcb
std
negl
xchg
sti
inc
add
mov
push
sub
out
xor
xor
pushf
push
int3
push
cmp
mov
frstor
xchg
dec
jle
fiaddl
das
in
jns
gs
push
pushf
popf
pop
cli
test
repnz
dec
push
imul
fisubs
imull
or
stos
add
jp
ds
daa
mov
add
sbb
sub
xchg
sbb
or
xor
add
jmp
insl
xor
xor
xchg
sub
mov
mov
aam
adcb
jne
mov
sub
es
inc
push
dec
jl
cmp
sbb
scas
push
pop
mov
mov
or
pop
mov
xchg
popf
and
and
sbb
push
daa
add
sbb
es
rol
popa
faddp
shrb
or
add
xchg
mov
sbb
enter
shl
stos
sahf
pop
out
gs
mov
pop
sbb
pop
gs
shll
xor
and
jae
mov
lods
push
call
scas
shrd
jno
or
in
inc
and
cltd
shrl
stos
dec
jmp
lock
mov
push
xor
cmp
or
sbb
es
sub
fmuls
xchg
stos
test
pop
mov
inc
dec
jle
jne
mov
je
out
js
sbb
mov
xor
pop
and
iret
mov
jmp
push
push
jp
ja
jno
rorl
inc
push
ljmp
jmp
fimuls
mov
aas
js
jle
xor
push
outsl
xor
in
sbbl
pop
jbe
sarb
add
mov
inc
dec
mov
lock
pop
inc
mov
inc
or
pop
cmp
or
cmp
imul
add
or
sbb
lret
mov
xchg
or
xlat
loop
rorl
dec
sbb
xor
xor
jecxz
cli
mov
mov
adc
jns
jle
gs
xchg
dec
sbb
add
fwait
jge
lods
sbb
jmp
cli
popf
gs
and
dec
dec
lret
jae
mov
xlat
push
inc
scas
sbbl
xrelease
dec
xor
adc
pop
stos
mov
inc
fs
cwtl
inc
push
mov
cli
jno
mov
adc
cmpsb
push
cwtl
pop
imul
pop
dec
push
repnz
ljmp
inc
adc
arpl
daa
out
aad
push
push
and
out
xor
sub
ljmp
push
mov
sti
leave
lret
xchg
mov
es
arpl
shll
mov
ficompl
or
and
and
sub
jmp
xor
fcmovb
xor
out
cli
clc
mov
jp
in
mov
das
jb
xchg
jmp
mov
inc
nop
je
mov
mov
shll
je
push
add
inc
das
sbb
pop
mov
pop
xchg
jmp
mov
jmp
inc
jge
and
cmp
lret
sbb
mov
xor
push
push
mov
addr16
sub
mov
xchg
xchg
mov
push
sar
or
in
loop
enter
insl
xchg
push
push
int
pusha
lret
mov
adc
imul
mov
push
xor
pushf
lock
fdivrp
mov
inc
sbb
fisubs
pop
xor
sbbb
fnstcw
dec
dec
outsl
scas
addr16
insb
pop
dec
lds
dec
aam
sub
ljmp
flds
movsb
out
les
cmp
flds
jae
arpl
xchg
jb
paddusb
and
loopne
jmp
in
xchg
xor
in
test
fbstp
sarb
bound
mov
sahf
shl
sub
push
xor
mov
lods
xchg
xor
js
push
repz
sub
aas
lea
mov
and
ret
dec
and
xchg
xlat
ss
mov
std
mov
mov
sub
jle
mov
sub
xor
mov
mov
iret
int
arpl
rol
push
out
lock
arpl
inc
xchg
xchg
pop
mov
call
fsubs
fdivr
negb
push
jbe
and
test
aas
jl
mov
push
add
mov
ret
sub
lret
daa
adc
mov
cld
mov
mov
movb
idivb
mov
push
xor
pusha
sub
add
jns
adc
add
rol
lods
cltd
inc
pop
jle
push
jp
sub
push
sbb
pop
lea
jbe
aad
lahf
add
nop
das
dec
sti
das
mov
and
arpl
add
xchg
mov
in
push
insb
sbb
sub
pop
mov
out
psrad
lea
test
sub
mov
pushf
jg
mov
push
fwait
sahf
jge
rcrb
lods
push
lret
xor
movb
fsubl
mov
pusha
cltd
push
jb
add
pop
and
mov
insb
enter
sub
mov
dec
cmp
pushf
sarb
cmpsl
testl
hlt
xor
mov
rclb
pop
cs
xor
rorb
sahf
inc
mov
out
push
scas
cmc
cwtl
xor
or
stc
cmp
inc
test
mov
fnstsw
adc
fwait
lock
jmp
pop
out
adc
rcrb
popf
inc
mov
aaa
cmc
cltd
pop
xor
xchg
add
aas
mov
mov
jno
enter
inc
lahf
add
dec
sbb
cmc
in
pop
popa
rolb
jecxz
ja
jl
jo
sub
popf
cs
test
push
sub
xchg
in
test
imul
inc
xor
mov
idivb
xchg
les
pop
push
push
icebp
sub
jns
mov
push
int3
cmpsb
or
mov
enter
or
xorb
adc
mov
nop
or
fcom
dec
nop
mov
jns
xor
cmpsb
and
stos
adc
xchg
fisubrl
jmp
cmpb
out
mov
pop
add
push
fsubrp
jae
mov
or
push
inc
lods
push
jnp
in
xor
pop
mulb
add
sub
push
push
outsb
push
mov
test
or
das
push
pop
inc
test
push
mov
push
lahf
pop
add
sub
adc
push
cmp
in
test
out
test
mov
push
out
sarb
and
out
sub
cmp
pop
xorb
push
or
mov
mov
pop
push
mov
dec
insb
add
pop
mov
cmpsb
jnp
test
inc
std
cmp
aad
out
mov
outsl
sti
dec
mov
andl
test
iret
mov
cmpsl
jo
mov
mov
cmp
push
mov
or
je
loopne
pop
lock
int
push
xchg
popa
push
or
outsl
xchg
stc
sbb
lret
test
mov
dec
call
pop
xor
jge
push
dec
shlb
inc
dec
xlat
xchg
or
mov
arpl
jg
or
sub
xor
jne
fisttps
sbb
shlb
mov
aas
idivb
and
mov
scas
push
imul
sub
cmp
jb
ret
imul
xchg
lret
fdivrs
and
daa
add
dec
mov
lds
leave
cmpsb
mov
jbe
push
aaa
out
sub
fwait
movsb
std
xor
arpl
aaa
push
call
mov
xchg
or
mov
mov
pusha
repz
fxch
add
xor
test
adc
adc
shl
or
sbb
or
adc
or
jnp
push
clc
push
cli
aam
test
ja
lds
jmp
stc
aaa
xchg
lcall
mov
and
push
mov
xchg
inc
sbb
mov
dec
lods
inc
pop
fidivrl
mov
and
mov
cmp
fsubrs
pushf
outsl
inc
std
xchg
mov
mov
scas
xor
loop
aad
mov
inc
mov
mov
aad
cs
icebp
pop
mov
in
push
dec
and
lret
mov
push
enter
aaa
push
xor
icebp
push
jnp
pop
outsl
mov
out
movb
push
addr16
mov
cs
xchg
test
pop
arpl
sub
add
push
ret
imul
sbb
scas
cltd
push
push
sbb
fs
sbb
pop
repz
mov
bound
test
sub
mov
cmp
mov
mov
imul
aad
jbe
dec
std
adc
mov
inc
or
jno
cmpsb
ljmp
loope
out
dec
sub
lock
hlt
cs
cmp
mov
cmc
lahf
cmp
insl
lret
pop
dec
cmp
sub
xchg
mov
mov
mov
fstpl
call
mov
xchg
movsb
xchg
imul
cmp
mov
psubq
stc
shl
jno
pop
addr16
dec
pop
push
enter
lods
jle
cmp
jmp
mov
nop
sub
lahf
shrb
loopne
call
mov
mov
add
sti
js
mov
jecxz
daa
cltd
popf
mov
dec
mov
ret
jnp
push
ja
dec
je
std
insb
cmp
adc
cmpsb
dec
movsb
fwait
lret
pavgb
aad
adc
imul
mov
aaa
js
test
fcomip
in
jecxz
cmpl
mov
sub
jmp
cmpsb
and
inc
imul
pusha
scas
push
dec
arpl
in
daa
jge
push
mov
jecxz
add
aaa
add
pushf
push
xchg
mov
or
loopne
add
aas
loop
loop
xor
push
xchg
mov
jns
push
test
and
add
movsl
mov
adc
dec
imul
cmc
insl
jle
dec
cmp
mov
mov
loopne
cmp
cmpsl
xchg
mov
sarb
scas
movsb
add
xor
shll
mov
jae
push
aaa
lahf
movsl
or
jno
push
push
das
sbb
xlat
jo
add
cmpsb
incl
push
stos
aad
iret
jg
xchg
inc
xlat
sub
add
jle
sti
aam
cld
pop
out
sbb
cmp
xchg
mov
cmc
mov
sub
mov
cmc
lods
inc
dec
mov
xchg
push
pop
jp
test
jo
xchg
jns
stc
int3
add
xchg
rclb
add
adc
pushf
js
jae
jl
and
nop
shrb
dec
pusha
mov
mov
xor
mov
xor
fistl
mov
sahf
xor
jb
in
cmpsl
icebp
mov
fnstsw
enter
std
cmp
scas
fisttpl
push
inc
lods
aaa
mov
mov
sub
aam
cli
fsubl
lds
arpl
fisubrs
fimull
aaa
xor
cmc
cli
adc
sub
jmp
jmp
in
into
mov
stos
add
pop
outsl
daa
or
cltd
lahf
sbb
mov
jae
xchg
nop
aad
clc
xor
mov
mov
filds
das
mov
mov
inc
pushf
mov
aad
sub
les
aad
outsl
cli
out
or
jns
xchg
mov
push
inc
nop
fs
in
xchg
mov
shl
roll
push
mov
lret
xchg
scas
push
jne
xchg
push
fcmovnb
cwtl
sub
es
or
sbb
jle
push
jnp
push
pop
xchg
enter
fs
sti
ljmp
pop
adc
enter
call
sbb
and
adc
out
and
add
xchg
pop
sti
inc
out
mov
fstl
je
js
cli
jmp
sbb
jne
inc
or
mov
mov
adc
xor
or
pop
xchg
addr16
pop
fwait
cmpsl
insb
xchg
cltd
fnstsw
dec
adc
dec
pop
adc
cmpsl
popf
pop
pusha
into
popf
test
jl
call
jl
sub
and
clc
dec
std
xor
cmp
call
xlat
mov
jns
adc
andl
pop
mov
mov
push
xlat
popl
jno
mov
repz
jmp
push
into
and
sar
mov
mov
rolb
ljmp
cwtl
jns
ret
pop
sbb
adc
fnstcw
loopne
push
clc
add
xor
scas
sbb
imul
mov
xchg
imul
sbb
aad
adc
pop
enter
mov
out
sahf
pop
add
jo
jo
jo
addr16
push
jle
or
pop
push
push
mov
lods
cmp
mov
cmp
imul
jg
mov
and
cmp
sbb
enter
cmp
sbb
subb
and
fisttpll
popl
testl
adcb
shrl
stos
mov
lock
pusha
jae
outsb
nop
js
mov
fiaddl
pop
or
popa
test
jo
xlat
scas
je
push
add
pop
cs
call
aam
add
xchg
mov
addr16
push
and
sti
repnz
mulb
push
dec
cmc
mov
inc
adc
arpl
push
cltd
cmp
je
mov
call
lret
nop
mov
jb
cmp
cmp
sbb
iret
negl
out
and
and
pop
push
inc
and
gs
test
pop
or
mov
ds
aas
xchg
fbstp
add
xor
push
cmp
aad
inc
popa
xorl
dec
lock
and
ja
into
sub
xchg
std
popa
sbb
push
inc
cli
cmp
jle
and
push
inc
mov
pop
jmp
into
jle
cs
int3
cmpl
in
jg
rcll
add
mov
jnp
std
in
pop
in
and
mov
sbb
mov
iret
add
cmp
dec
or
orl
mov
mov
and
pop
mov
mov
fdivs
jp
xor
dec
lods
push
mov
cs
popa
mov
clc
mov
pop
mov
popa
mov
mov
cli
xchg
stos
sbb
subb
push
sbb
xor
adc
lock
jo
cmp
mov
scas
jl
decb
push
xchg
mov
pop
hlt
ss
dec
sbb
out
int
mov
pop
jp
stc
jns
xchg
xor
mov
into
and
pop
mov
test
push
out
xchg
addl
mov
popa
jle
insl
push
test
cmp
pop
lods
xor
jg
out
shl
dec
lods
push
push
test
mov
mov
cwtl
fsubl
jb
mov
test
outsl
mov
push
push
cltd
fdivrs
movhlps
sarl
popa
sbb
sub
imul
sahf
mov
nop
mov
push
lahf
inc
outsl
test
sub
rol
add
enter
repz
mov
mov
mov
pcmpgtb
sbbb
and
in
mov
xchg
mov
shlb
insb
loope
lret
scas
inc
mov
cs
fwait
nop
scas
pop
push
or
push
cmp
rclb
or
mov
xor
cmp
addb
jmp
lock
jns
push
inc
jmp
dec
mov
mov
sub
jecxz
push
negb
sti
jno
push
arpl
or
lahf
push
loopnew
push
lea
fistpll
add
push
enter
sub
mov
les
xchg
in
mov
enter
pop
dec
test
mov
mov
dec
ret
dec
sub
xlat
mov
leave
adc
gs
ljmp
fimuls
mov
or
popf
mov
int
imul
lret
push
fneni(8087
data16
sbbl
dec
in
sbb
shll
scas
enter
mov
mov
or
mov
fistpll
mov
stos
mov
inc
jge
mov
fcmovbe
ss
out
cli
imul
mov
jo
fwait
aad
gs
jmp
xor
out
cwtl
jo
ljmp
in
enter
jge
out
arpl
cmp
lds
or
std
add
or
popf
sub
in
sub
mov
pushf
pop
xchg
pop
test
sahf
pop
xorl
mov
lea
push
dec
pop
jmp
sbb
jp
mov
cmovns
test
inc
push
xchg
xor
stos
pop
pop
jae
in
faddp
push
add
cmp
shr
je
jl
xor
shll
xlat
push
inc
mov
fstl
mov
xorb
adc
mov
dec
ret
adc
insl
les
jo
divl
movsb
jge
ret
pop
cltd
or
xchg
jmp
pop
sbbb
adcb
and
dec
sbb
insl
mov
mov
lds
out
nop
mov
mov
dec
pop
xorb
and
xchg
xor
fisubl
adc
icebp
rcrb
pop
cld
movsl
stos
push
sbb
cmp
lret
mov
lret
idivl
xchg
pop
lds
dec
mov
xor
mov
pop
lods
xor
xor
shl
shlb
sbb
cld
ljmp
xchg
sbb
aas
mov
inc
sbb
fwait
rolb
push
mov
adc
xchg
clc
aad
pop
icebp
stos
sbb
loop
das
ret
sti
jae
cld
pop
leave
div
aam
pop
test
aas
sbb
push
lret
mov
out
jns
cs
cmp
sbb
pop
adc
aas
cmp
shll
dec
and
push
or
addr16
add
dec
mov
inc
stos
imul
xor
add
sub
fistl
mov
inc
xchg
popa
push
pop
inc
mov
pop
dec
adc
push
xchg
pop
repz
or
cmp
jp
mov
cmpsb
jns
sbb
es
scas
std
dec
rorb
jbe
and
ss
push
push
arpl
push
scas
adcl
jge
mov
xchg
int3
sahf
flds
xchg
scas
and
cmp
inc
addl
mov
sbb
cltd
fstpl
inc
cmp
add
les
fs
jge
icebp
push
xchg
sti
es
push
imul
cmp
sti
mov
test
xchg
push
xchg
fiadds
dec
test
xchg
lret
mov
xchg
cmp
out
pop
fnsave
dec
or
cmp
dec
xor
sbb
push
fwait
rorl
iret
push
aad
mov
xchg
rcrb
inc
adc
in
push
mov
bound
shll
pop
gs
adcl
les
and
fs
jae
fdivs
jge
and
and
jae
bound
pop
insl
and
xchg
mov
pop
pop
sub
into
inc
pop
ss
cmp
inc
mov
xor
sti
adc
push
cmpsl
pop
dec
pop
andl
xchg
es
cs
push
jg
bound
push
test
clc
sbb
ret
adc
ja
adc
mov
cs
push
fcoml
mov
xor
sub
sbb
das
mov
nop
mov
int
nop
xchg
popf
mov
dec
jo
nop
repnz
cmp
cmp
cmp
mov
and
imul
jmp
jb
jb
sub
test
jae
sbb
jmp
and
xchg
cmp
clc
pop
and
hlt
xchg
in
inc
adc
mov
repnz
mov
mov
cmp
mov
sar
lcall
push
cltd
add
pop
in
xor
repz
jl
sub
arpl
mov
repz
jp
xchg
push
call
sbb
call
push
xchg
cmc
mul
pop
mov
cli
repz
decl
xchg
inc
fdiv
fcoms
xlat
addl
mov
mov
add
loope
test
jns
jae
push
xor
loope
cmp
aas
out
pushf
push
sbb
pop
mov
ss
jp
sub
xchg
call
daa
mov
nop
mov
or
inc
pop
ret
bnd
inc
or
sti
push
add
pop
pop
aaa
fucomi
and
out
jns
sub
test
add
cmc
push
enter
out
out
xchg
and
add
sarl
cmp
mov
in
dec
dec
lods
mov
stos
jnp
test
cld
daa
push
rcrb
test
push
fnstsw
fwait
aas
cmpsb
jne
mov
into
adc
pop
cmpsb
sub
sbb
mov
out
push
pop
dec
cmp
xchg
aad
fmuls
ja
aam
mov
cmp
inc
mov
sbb
and
xchg
dec
push
loopne
sub
cmpsb
mov
xlat
arpl
pushf
mov
fdivrs
add
lea
insl
lret
jg
ljmp
and
dec
ljmp
dec
insl
stos
stos
adc
int3
adc
ret
lds
adc
xor
sub
aaa
mov
lds
inc
ja
clc
pop
fimuls
pushl
lret
movsbl
fimuls
outsl
divb
pusha
adc
and
adc
mov
push
dec
loop
icebp
std
xchg
pop
add
jge
jmp
cmpsl
push
add
mov
std
xor
imul
test
ljmp
xchg
leave
sub
sbb
jne
adc
add
leave
nop
xor
in
mov
andl
sub
sbb
inc
xchg
push
inc
sub
rcr
xor
int
or
insl
pop
sub
je
movsb
jno
cmp
jp
inc
mov
xchg
loope
repz
addr16
rcl
xchg
push
xor
push
push
in
xor
push
adc
imul
aad
mov
in
xchg
or
mov
mov
ret
cld
lea
repz
ffree
shrl
leave
cmp
mulb
mov
cmp
scas
add
and
mov
sbb
mov
or
ja
scas
repz
jecxz
ja
lods
add
inc
and
fcompl
push
mov
sti
sub
sarl
gs
dec
pop
dec
sbb
push
sahf
inc
ss
loopne
inc
aad
add
pop
jns
popa
jnp
int
lret
cltd
mov
fidivrs
and
loope
popf
mov
fsubs
icebp
lods
dec
loop
movsl
mov
xor
cmp
popl
jns
aam
push
in
in
jo
sub
jno
lods
call
out
es
push
lock
lcall
mov
sub
pop
ret
lcall
sbb
mov
and
sarb
cmp
mov
add
fiadds
jns
push
cli
cmp
dec
mov
jb
arpl
jb
outsb
mov
mov
inc
xchg
push
test
jmp
xor
pop
pushf
imul
xor
inc
mov
inc
cmp
mov
cmp
push
cmp
add
adc
int
add
test
hlt
or
subl
mov
sarl
mov
loope
mov
mov
pop
adc
sti
int
pushf
movsl
adc
push
mov
mov
sbbl
inc
lcall
stc
iret
mov
push
pushf
xor
sub
imul
mov
jge
inc
gs
pushf
dec
dec
imul
data16
orb
dec
stos
or
pop
stos
es
mov
rclb
pop
jmp
pop
nop
sub
and
sub
push
inc
xlat
mov
out
jne
std
jg
mov
mov
jg
popa
cld
push
aaa
ljmp
add
push
nop
fwait
xorl
sbb
xchg
aad
call
dec
xchg
daa
outsl
pop
dec
xchg
cmpb
sub
pop
pop
mov
or
aaa
jae
push
inc
or
or
and
push
sub
mov
or
or
hlt
repz
lea
dec
jmp
int
inc
rolb
aam
mov
pop
imul
movb
mov
arpl
sbb
mov
rorb
inc
inc
ja
mov
or
iret
sub
push
xchg
cmp
xchg
jns
jo
movsl
dec
leave
pop
and
addl
unpcklps
cmp
mov
add
shrb
push
arpl
fistpl
jmp
paddw
mov
leave
push
mov
arpl
pop
rolb
movsb
in
xchg
pop
jge
pop
xor
aaa
ss
jmp
cmp
xchg
out
out
repz
mov
test
and
hlt
and
cmp
cmp
hlt
out
rcrb
inc
add
clc
add
add
adc
stc
addb
adc
in
pop
outsl
add
mov
mov
int3
mov
ljmp
into
inc
cmp
inc
aas
arpl
fwait
test
mov
in
outsl
jo
xchg
jnp
pop
cld
mov
mov
and
addr16
sub
ja
test
lods
adc
jle
cmc
adc
lcall
push
outsb
addr16
jp
or
inc
add
pop
cmc
out
adc
and
outsb
daa
mov
push
scas
push
push
stc
mov
pop
adc
addr16
pop
fiadds
add
or
cmpsb
ret
arpl
cwtl
out
dec
pop
xchg
push
jns
mov
and
or
icebp
fldcw
mov
frstor
addr16
js
nop
ficoms
test
xchg
xchg
imul
sti
leave
movsb
loope
insb
jb
int
test
cli
add
out
cmpl
sbb
mov
pop
pop
jb
inc
push
cmp
in
mov
adc
inc
decb
sahf
cmp
test
cmpsl
inc
lods
dec
rep
sbb
pop
iret
jb
aaa
jbe
lds
mov
fs
mov
pop
sahf
mov
adc
jne,pt
pop
push
shrb
mov
cmp
cmp
pop
jbe
push
sbb
shlb
adc
imul
lahf
push
mov
xor
aam
in
push
cmp
lods
sti
pop
pop
ret
aam
mov
stos
sti
cltd
push
mov
call
cmp
aaa
cmp
mov
dec
pop
cmp
stc
and
sub
mov
repz
loopne
jg
lret
jns
pop
pop
imul
fwait
outsl
xor
push
les
leave
mov
dec
xorps
xchg
ror
dec
cmp
shl
mov
and
jp
pop
inc
xchg
mov
jge
sarl
test
sub
lret
mov
aam
xchg
adc
mov
mov
pop
cmpsb
xlat
loope
xor
push
movsl
test
mov
sub
inc
cmp
jbe
lea
push
jg
addl
into
jno
xchg
xchg
mov
jno
jecxz
add
loope
mov
cld
cltd
adc
orb
push
and
jmp
and
movb
xchg
outsl
adc
imull
mov
in
ja
je
mov
push
addr16
jp
jmp
pop
lock
test
nop
dec
jae
sub
jno
xchg
test
push
test
bound
sub
inc
xlat
addr16
mov
jecxz
cmpsl
aad
into
cmp
popf
add
and
sbb
inc
mov
imul
ja
push
xchg
inc
sub
sub
cmp
jecxz
data16
int
dec
fwait
lock
dec
mov
dec
lret
sub
lds
sub
xchg
or
cs
xor
push
out
dec
sbb
cmpsl
adc
push
add
mov
addl
mov
insl
ret
stc
dec
push
arpl
dec
mov
call
fisubrl
mov
outsb
lahf
setne
pop
ret
push
scas
lods
sub
mov
movsb
pop
xor
pop
test
aaa
scas
inc
mov
or
mov
dec
mov
out
and
stos
cmp
sahf
xchg
xchg
pop
out
push
xor
cmp
in
ret
aas
sbb
dec
mov
xchg
test
and
mov
cmp
mov
add
cli
mov
jae
and
sahf
cmp
insb
lea
shlb
mov
daa
xchg
pushf
outsb
jmp
cmpsl
pushf
add
or
cwtl
je
shrb
jb
xchg
fcmovu
fiadds
add
jnp
dec
mov
jecxz
js
cli
lret
adc
das
pop
fld
cwtl
cwtl
mov
into
dec
add
push
je
mov
into
lret
sub
and
inc
inc
nop
pop
pop
fldcw
flds
pop
cmc
jo
mov
pop
cwtl
mov
arpl
out
daa
sbb
dec
pop
cmc
sub
in
ds
adc
xor
rcll
ja
cwtl
push
int
cltd
outsb
leave
ret
and
dec
lahf
cmp
fiadds
call
shll
rcll
les
push
repz
mov
stos
add
sti
stc
out
jbe
sbb
ds
pop
add
imul
dec
inc
sbb
aaa
inc
sub
jp
loope
jg
scas
sub
push
xor
stos
dec
push
mov
sub
pop
adc
in
xlat
pusha
inc
int3
insl
jns
add
mov
ret
loop
gs
fs
lret
cmp
iret
sbb
std
dec
push
mov
ljmp
jmp
into
and
push
sar
mov
inc
push
test
mov
std
sub
sbb
lcall
push
fdivrl
pop
mov
in
daa
aam
mov
scas
xchg
and
out
xor
fdivrs
inc
imul
cmpsl
fdecstp
cld
dec
inc
xchg
hlt
fiadds
xor
push
sbb
cwtl
push
inc
pop
jnp
lods
adc
aas
pop
je
add
sbb
adc
jmp
out
mov
es
loop
movsb
sti
outsb
sti
or
mov
inc
jle
jle
cmpsb
sub
adc
add
ret
hlt
jmp
lcall
loop
pusha
push
out
dec
sbb
int3
das
repz
cmovp
push
mov
mov
inc
and
xchg
out
adc
mov
and
xchg
push
out
out
push
jp
pop
pop
cmp
mov
dec
push
or
lock
pop
shlb
fs
out
out
dec
repz
cmpsl
mov
icebp
repz
push
lret
repnz
aas
mov
imul
imul
iret
fldt
gs
faddp
jo
outsl
mov
mov
sbb
push
scas
shl
jne
mov
jbe
push
pop
inc
fsubl
adc
pop
iret
lret
mov
mov
sub
pop
bound
nop
outsb
push
ds
pop
jmp
nop
leave
pop
inc
adc
mov
xor
stc
pop
mov
stos
in
ficomps
mov
push
sbb
and
repnz
xlat
pop
mov
inc
xor
push
jnp
daa
movsl
push
movsb
inc
pushf
cmpsl
add
js
mov
cltd
ret
sbb
std
cmp
aam
ret
movsl
repz
lock
arpl
test
dec
jns
jbe
ds
in
sbb
cmpsl
push
lret
aaa
into
mov
cs
outsb
popa
xor
ljmp
out
test
mov
or
xchg
xchg
lcall
add
jae
lea
pop
aas
lock
sbb
push
repnz
sub
cli
dec
xchg
or
imul
notl
fwait
decl
nop
xchg
mov
mov
xchg
shrb
dec
outsb
mov
xor
subb
cmp
cld
outsb
jmp
cmpb
adc
shr
inc
xor
fdivrl
sbb
aaa
xor
mov
jns
std
inc
and
inc
shlb
mov
pop
mov
mov
fcomip
mov
push
jo
ficoml
in
adc
mov
das
xor
stc
in
mov
xchg
adc
sahf
and
xchg
push
out
cmp
inc
add
incb
lret
mov
and
sbb
hlt
dec
sbb
pop
enter
push
cmp
popf
cmp
lcall
dec
inc
or
pop
jne
jl
call
push
lret
popa
in
push
roll
inc
push
xor
ret
sub
int3
sub
pop
push
and
cld
add
dec
push
out
xchg
add
xor
add
out
mov
push
mov
in
icebp
mov
stos
dec
xchg
lahf
sub
jl
mov
cmpsb
out
add
push
cmp
pushf
lahf
pushl
inc
mull
outsb
mov
mov
push
pop
test
cli
dec
xor
insb
push
cmpsl
mov
push
sbb
xor
stos
cmp
sub
add
cmp
adc
mov
jbe
xchg
xchg
int
daa
insb
adc
iret
bound
pop
rclb
push
mov
imul
push
dec
cld
push
cmpsb
push
adc
insl
shl
into
add
inc
xor
jae
xchg
xor
stc
sar
add
jl
jns
sbb
mov
sarb
pop
ss
les
in
mov
fs
xor
push
push
scas
jecxz
aas
add
repz
mov
pop
mov
mov
data16
fsubrs
inc
or
add
lds
movl
dec
repnz
in
push
add
les
sub
inc
fbstp
or
pushf
sbb
bound
addl
cld
jmp
mov
push
cmpsb
pop
jle
cwtl
fistpl
inc
addl
adc
out
jnp
out
xor
push
fwait
stos
out
cmp
cmpsb
lock
idivl
in
in
adc
fdivl
sbb
cli
inc
gs
pop
xchg
hlt
jbe
cmp
imul
push
push
int
call
out
scas
int
mov
int
and
je
sub
or
dec
mov
jne
mov
push
jnp
jnp
movsb
out
pusha
push
sbb
jecxz
fwait
mov
jnp
xchg
sbb
gs
scas
ja
test
fisubl
push
jno
jae
dec
or
jnp
or
cbtw
inc
xchg
lcall
int
leave
imul
aam
sub
outsl
jl
pop
or
lret
push
loopne
sub
xor
push
mov
je
lds
inc
sbb
imulb
ret
pop
jae
mov
test
mov
cs
mov
jp
mov
xlat
cmc
icebp
mov
mov
sub
adc
fisttpl
repnz
cli
sub
fwait
dec
imul
fucomp
or
xchg
insl
jb
out
or
pop
pop
and
mov
push
fstpl
nop
shlb
mov
pop
sti
lods
mov
xor
adc
fwait
int
inc
out
jmp
cmp
mov
push
add
xchg
push
popf
push
inc
mov
push
inc
insl
pop
fnstcw
add
mov
test
jb
xchg
or
stos
inc
enter
adc
jo
cmc
xchg
xchg
dec
inc
dec
xor
sahf
cli
mov
adc
icebp
jmp
cmc
pop
frstor
inc
js
int
sti
inc
add
data16
mov
cmc
xchg
mov
xchg
xlat
mov
inc
loop
test
lcall
adc
outsb
in
insb
dec
rclb
jge
aam
idivl
dec
push
neg
pop
push
mov
divb
mov
push
jp
xorb
mov
or
add
sub
sahf
push
or
shll
mov
lods
cmp
sub
outsb
pusha
xchg
or
clc
pop
sub
movsl
inc
sti
in
mov
and
lock
sub
push
inc
lods
or
sub
adc
mov
test
xchg
sub
js
pop
or
fmuls
inc
xchg
adc
subl
pop
push
imul
fcomip
nop
int3
add
cmp
lea
iret
pop
lea
aas
xchg
jecxz
lcall
push
jns
dec
into
inc
and
add
loop
xor
scas
pop
mov
fdivl
bound
call
mov
stc
js
dec
out
dec
lods
into
adc
lods
jl
leave
loopne
fisttps
or
push
mov
adc
movsb
xchg
aad
pop
sti
push
leave
adc
xchg
lods
test
das
pop
lods
cltd
sbb
addr16
sub
imul
mov
pop
mov
cltd
in
xchg
fsubs
push
sti
jns
adc
mov
mov
ss
lret
mov
stos
imul
insl
xchg
leave
lock
adc
gs
inc
push
lock
xchg
xlat
data16
mov
lahf
lods
mov
lods
int
and
aas
in
fucom
imul
sub
popa
sbb
in
je
test
pop
scas
rcl
jbe
lret
jne
js
cltd
outsb
add
push
test
imul
repnz
push
jbe
jne
call
push
dec
stc
push
adc
sbb
cmp
hlt
fisttps
cwtl
idivl
mov
mov
xor
enter
cs
clc
lds
in
aad
xchg
push
inc
jmp
ds
or
cmovb
mov
outsb
mov
mov
cmp
push
mov
lret
or
adc
addr16
or
loopne
mov
add
data16
adc
mov
sbb
dec
pop
inc
sub
lock
sub
rclb
sarl
call
mov
sbb
mov
mov
stos
in
cmc
repz
jo
shll
push
dec
push
push
jbe
ss
pop
jge
sbb
aad
aad
sahf
cli
repnz
push
stos
xor
rorb
or
sub
ret
pop
out
inc
addr16
xlat
popf
fisubrl
or
cwtl
mov
data16
mov
movnti
hlt
test
xchg
adc
mov
pop
testl
enter
mov
dec
mov
adc
jle
lods
xchg
ja
push
int
dec
xchg
xchg
out
ja
sbb
push
ds
add
lret
lds
or
scas
dec
out
pop
and
inc
stos
push
hlt
or
sub
pop
pop
push
inc
lret
jae
sub
leave
push
loopne
stc
inc
outsb
aam
je
fdiv
movsl
shlb
cmpsl
mov
cwtl
sub
add
or
repz
mov
out
pop
sub
mov
imul
pop
imul
push
clc
lock
sbbl
movsl
xor
pop
inc
xchg
std
pop
imul
dec
std
outsb
xor
int
int
pop
shrb
or
push
or
mov
push
je
jmp
inc
test
cwtl
in
test
add
call
xchg
out
push
fidivs
nop
arpl
dec
xchg
sub
ret
mov
inc
mov
test
inc
push
adcb
fiaddl
fsubl
mov
lea
adc
push
js
jge
push
not
gs
cmpsb
adc
lcall
out
fldl
notl
push
sub
xor
and
fs
jg
jno
fs
inc
aad
ret
add
hlt
adc
push
pop
or
push
lss
stos
outsb
xchg
js
and
jo
xchg
lods
cmp
xchg
fdivrl
in
pop
mov
gs
mov
lock
movsl
push
aad
in
inc
stos
dec
adc
cmp
cmp
ss
outsb
jne
mov
dec
xor
jmp
fwait
loope
xchg
mov
push
mov
adc
xor
add
mov
add
cmp
out
scas
in
es
fcomps
arpl
add
stos
hlt
xchg
jg
dec
xchg
pop
out
mov
mov
adc
pop
xorl
add
sbb
mov
sub
inc
inc
mov
gs
adcl
mov
and
test
cld
mov
test
xchg
sub
js
adc
push
mov
xor
xchg
aad
cli
pop
das
ljmp
mov
add
fcoms
lds
out
std
dec
ficoms
repnz
cmp
xchg
icebp
cli
movsl
scas
and
dec
dec
das
cld
out
mov
push
stos
outsl
lret
sub
arpl
sbb
dec
jne
ljmp
lret
rorb
adc
iret
push
movb
popa
sarb
movsb
or
sahf
or
je
sbb
aas
stos
push
loop
addr16
insl
sbb
cmp
negb
cmp
cs
and
dec
aad
int3
cmp
insl
les
pushf
mov
push
mov
in
ret
std
mov
sub
mov
mov
repz
cltd
loopne
mov
mov
push
loop
into
sbb
enter
or
clc
xchg
es
cld
mov
test
fidivrl
sbb
sbb
xchg
dec
imul
ret
inc
aad
or
mov
jl
cmpb
cmp
mov
xorb
outsb
gs
ficoms
pop
and
imul
fbld
mov
xor
xchg
das
mov
mov
jbe
cld
loope
xor
lcall
addr16
lods
adc
mov
mov
or
das
mov
fs
clc
and
cmc
mov
add
pop
add
and
mov
pop
jo
push
in
push
in
movsl
jb
inc
lcall
adc
movsb
adc
jno
cmpsb
je
mov
jle
adc
adc
aaa
lcall
add
adc
pop
cli
inc
mov
pusha
lds
and
xchg
or
out
shr
das
mov
pop
outsl
jl
mov
lds
sti
negb
jecxz
mov
les
push
inc
test
aad
jl
xor
jmp
lret
push
roll
daa
fs
std
out
scas
cmp
loop
ja
pop
bound
es
pop
add
and
mov
leave
mov
rcrl
sti
fistl
adc
fcmovu
loope
mov
mov
filds
jae
pop
cmp
shrl
jge
cwtl
ret
stos
push
lods
jo
cmp
mov
rcll
fnclex
aad
sbb
stos
in
add
notb
out
sub
and
inc
mov
imul
xor
adc
sub
xor
outsb
shlb
lret
sbb
push
xchg
adc
cmpsb
cmc
xchg
pop
jg
jb
push
lahf
stos
dec
xlat
ss
mov
gs
leave
xchg
push
cmpsb
xchg
popa
dec
and
bswap
or
fs
notb
fbstp
jnp
test
jge
lds
mov
imul
push
mov
push
call
cld
xchg
add
lret
mov
lods
ja
cmp
subl
dec
sbb
call
mov
and
jmp
stc
into
or
sub
dec
pop
pop
inc
mov
data16
std
fiaddl
push
push
ss
mov
hlt
insl
inc
ror
or
push
xor
dec
enter
imul
idiv
jp
pop
fs
dec
cmp
cli
test
push
ror
imul
outsb
dec
xor
inc
jnp
mov
lret
scas
mov
pop
dec
pop
out
mov
lea
jno
aas
mov
mov
sbb
xor
mov
mov
push
test
test
aaa
jbe
lahf
push
xor
movsb
dec
mov
out
cmpsb
lods
pop
and
out
in
inc
dec
cmc
fldcw
pushl
dec
mul
cmpl
dec
das
shlb
add
mov
pop
xchg
dec
lcall
mov
fdivrs
pop
aam
jmp
fsubrl
rcll
dec
lock
push
int
mov
or
xchg
leave
and
pop
test
scas
ret
out
fnstsw
lock
ds
pop
mov
xchg
jle
cmp
test
sbb
push
inc
adc
mov
loopne
adc
mov
xchg
sar
test
or
stos
nop
outsb
rcrl
inc
in
shrl
add
add
lods
hlt
dec
pop
ror
fdivrp
cs
lret
pop
push
cmc
lret
mov
mov
xchg
fsts
stc
repnz
icebp
inc
stos
sbb
shlb
shlb
rclb
jmp
pushf
push
dec
jne
adc
fldl
inc
fstps
leave
jg
mov
fnstenv
xchg
xor
push
jmp
inc
dec
cmp
xchg
stos
mov
or
or
testb
adc
mov
add
inc
js
pushf
jne
and
lods
clc
es
xchg
popa
test
gs
xchg
jg
add
xchg
or
and
jp
out
mov
daa
movsb
jnp
mov
mov
ret
addr16
push
jno
dec
fstps
pop
rol
cmp
into
sub
sub
pusha
cmc
inc
pop
xchg
scas
jp
jecxz
insb
arpl
pop
mov
or
subl
dec
adc
daa
or
decl
gs
jge
sahf
cmpsb
mov
sti
loope
inc
push
inc
inc
xchg
jb
movsb
es
sub
jle
push
test
pop
jae
daa
dec
mov
mov
bound
fistps
and
jns
adc
lret
mov
xor
scas
ja
clc
nop
lock
adc
jmp
push
bnd
mov
mov
dec
jle
adcb
ret
repnz
mov
out
arpl
lods
cmpsb
mov
jecxz
add
lods
lahf
lock
mov
insl
sub
mov
dec
je
orl
int
sahf
push
nop
jmp
and
xor
jb
lret
enter
xlat
aam
mov
push
movsl
mov
mov
popa
mov
cmc
stos
cltd
fisttpl
or
sbb
sbb
rcrl
aaa
push
fisubs
vmovups
dec
and
roll
push
add
jnp
ret
and
and
mov
or
jge
dec
jo
mov
mov
pop
dec
xchg
aam
xor
in
dec
fisubl
sarl
and
roll
aas
cmp
jno
icebp
testl
push
mov
jae
push
and
gs
jbe
mov
xlat
inc
ds
lods
sub
and
or
or
push
adc
sbb
insl
inc
and
sub
inc
xor
hlt
push
popf
mov
mov
jno
rclb
stos
dec
fwait
mov
pop
pop
or
in
pushf
pop
idivl
adc
inc
mov
je
aad
enter
or
mov
fldt
xor
lea
jmp
scas
cli
xchg
sarl
inc
lret
push
xor
stos
mov
outsl
add
mov
in
push
rolb
stos
sarl
je
pop
js
mov
or
mov
mov
push
repnz
pop
subl
mov
jo
movsb
addl
and
cmpsb
jb
in
or
iret
pop
cmpsl
and
int3
ss
ljmp
js
pop
dec
sub
movsb
xchg
int
stc
xchg
xor
push
jns
adc
aad
es
fdivrp
push
idivb
push
lea
jno
xchg
movsl
push
rcl
cmp
mov
mov
fs
jae
cltd
mov
pushf
ret
mov
sbb
ja
push
mov
cli
mov
nop
mov
dec
pop
aaa
mov
es
pop
lock
pop
test
icebp
or
xchg
test
leave
ds
mov
std
or
sbb
or
adc
push
andl
xor
js
pop
inc
hlt
mov
dec
mov
imul
fnsave
imul
int
push
mov
jo
shlb
and
out
dec
add
sbb
mov
or
inc
hlt
pop
lcall
stc
sub
xchg
xchg
push
sub
sbb
mov
push
cmpsl
xchg
aam
mov
xor
test
ljmp
nop
jp
xchg
loopne
xchg
imul
cmp
std
inc
inc
cmp
sub
mov
inc
cmpsl
jl
aad
in
pop
loope
mov
mov
dec
push
add
scas
and
movsb
mov
adc
pop
add
mov
cltd
or
mov
lret
pop
je
sub
push
jo
jnp
add
popa
pop
mov
mov
jp
in
sbb
add
xchg
pushf
sub
cli
push
js
mov
cmp
sbb
cmpsb
or
lret
into
aaa
add
aad
movsl
add
loopne
outsb
in
fimull
xchg
sti
pop
mov
xlat
mov
lea
add
out
popf
cmp
shl
std
daa
addr16
pusha
add
xchg
xor
ficoms
lea
mov
in
push
addr16
dec
pop
int
adc
stc
fwait
loop
xchg
dec
push
mov
push
xchg
cld
inc
cmp
mov
js
movb
jge
jb
add
aam
xchg
xor
xor
aaa
int
out
shll
cmp
mov
and
notb
scas
jno
jb
clc
addr16
aad
jno
rcl
mov
notb
mov
xor
jecxz
pop
rolb
adc
jno
xor
fldl
popa
pop
inc
inc
pop
dec
push
outsb
leave
aam
lods
push
xor
pop
adc
je
fidivs
cltd
fdivl
mul
xchg
add
subl
filds
sub
cmp
adc
push
mov
xchg
test
cmc
mov
lcall
incb
out
pop
xchg
mov
cs
out
clc
mov
sub
sbb
call
imul
sbb
dec
mov
xor
cli
sbb
xlat
cwtl
rorb
xor
sti
mov
pop
pop
push
mov
inc
test
ret
repnz
enter
add
insb
xor
mov
xor
adc
das
stos
or
std
mov
adc
add
aaa
xchg
xchg
arpl
xchg
xlat
arpl
or
ret
add
repnz
loopne
std
aaa
mov
mov
pop
push
mov
mov
sub
push
es
pop
fadds
push
mov
pop
int3
mov
jg
or
mov
ljmp
mov
cs
enter
testl
out
xchg
jge
shlb
in
sub
cmovae
xorb
pop
bnd
sahf
pop
jo
jbe
inc
pop
jl
inc
push
dec
repnz
xor
dec
xchg
call
mov
push
aaa
mov
ds
adc
pop
xchg
mov
pop
cmpb
jnp
xchg
xor
hlt
das
imulb
arpl
adc
pop
or
push
inc
xchg
dec
dec
ss
or
testb
imul
sbb
xchg
fwait
inc
mov
or
mov
sbb
jmp
fisubrl
enter
and
push
sub
cmc
nop
mov
sbb
je
jae
ja
int3
in
adc
std
lcall
mov
cli
mov
cmp
push
jecxz
push
mov
in
lcall
mov
mov
je
fxch
pop
lret
jno
lock
mov
ror
movsb
jnp
jae
inc
pop
bound
lds
push
fldl
call
test
shr
cli
aas
jbe
repz
push
jae
pop
cmc
out
cmpb
inc
push
sub
cmp
bndstx
jmp
cmp
testl
cmpsb
call
pop
cmc
adc
add
lret
and
scas
sub
insb
fwait
cmp
push
xchg
or
inc
dec
popf
mov
xchg
adc
dec
sub
lea
aad
push
sbb
sub
mov
mov
sub
scas
sbb
fidivrs
mov
addr16
push
rolb
inc
cmp
sbb
xor
jg
and
jg
mov
mov
movsb
mov
mov
ljmp
pop
pop
jg
aaa
sub
movsb
ja
out
xchg
sub
pop
imul
jle
jbe
adc
mov
rcrb
or
push
adc
test
sbb
dec
arpl
dec
mov
cmp
mov
jmp
mov
jg
cmp
call
pop
mov
mov
and
xor
adc
test
inc
out
inc
dec
dec
mov
faddl
clc
and
mov
lock
inc
cmc
cltd
mov
push
jle
push
sbb
in
adc
aas
aas
add
rcll
fsubrl
addr16
sbb
shll
lea
lock
test
mov
pop
movsb
pop
or
xor
fisubrl
in
mov
mov
cmp
shl
pop
cld
jnp
inc
aaa
repnz
jle
je
push
lods
fldt
aam
mov
ret
lea
outsl
sarl
inc
inc
in
fwait
je
adc
test
mov
push
sub
pushw
xchg
cmc
adc
fidivl
sub
stc
add
addb
fdiv
jb
call
or
pop
pop
imul
push
scas
jmp
and
sbb
cmp
cmp
shrl
xor
inc
stc
out
mov
fsubrs
out
mov
stos
push
ficoml
xchg
pop
dec
add
incl
cmp
or
andl
and
aas
je
inc
movsb
shl
sub
push
jno
bound
mov
sarl
jne
dec
or
popa
call
rcrl
mov
adc
popf
addr16
pop
sbb
mov
or
and
adc
shll
mov
sahf
cmpsb
dec
addl
adc
and
cvtdq2ps
cmpsb
pop
in
fisttpll
and
in
int3
mov
cmp
daa
mov
pop
xlat
xor
dec
xchg
cmp
lods
add
iret
gs
mov
cmp
test
lods
sub
jg
pop
pop
jnp
out
mov
stos
ret
mov
mov
or
rsqrtps
pop
or
xchg
loope
stc
aam
add
aas
mov
mov
cltd
js
rol
js
hlt
mov
leave
inc
int
jmp
adc
clc
insl
inc
push
and
inc
add
xchg
fldcw
mov
jge
jle
daa
pop
lea
outsl
ret
or
dec
test
loopne
mov
or
js
or
mov
xorl
pop
mov
mov
cmp
cltd
and
and
jmp
std
in
cmp
sti
cmpsb
sbb
les
cmp
insb
aam
scas
mov
jns
loopne
imul
pusha
jmp
bound
rcl
ficomps
add
mov
xor
mov
and
mov
loop
out
inc
jl
rcrb
ljmpw
das
cmp
xchg
repz
and
dec
sub
inc
lret
shlb
dec
fsubrs
adc
in
xchg
pop
lock
popa
incl
mov
ficoms
dec
es
dec
or
fs
nop
push
jmp
rcrb
loopne
movsb
and
inc
ds
js
and
mov
shr
mov
fcmovne
jbe
test
nop
mov
clc
loopne
jmp
fdivrs
daa
das
inc
dec
js
sbb
cmpsl
fstps
pop
insl
and
lcall
pop
cld
xor
push
jne
mov
or
or
stc
clc
out
or
mov
lret
bound
mov
lret
rclb
adc
adc
lea
or
push
jecxz
xchg
and
data16
mov
out
push
shll
dec
xchg
aad
and
imul
dec
xchg
fldenv
icebp
jne
in
aaa
lds
fidivl
push
cmp
pop
and
sbb
movsb
das
mov
insl
lods
gs
add
mov
pop
pop
cmpsb
jo
stc
loop
inc
shrl
sub
push
test
call
adc
dec
in
test
adc
std
ja
mov
clc
add
scas
sbb
subl
cld
add
shl
push
add
test
dec
push
out
sbb
push
dec
add
lods
in
into
mov
push
push
shrl
mov
xorl
jle
sbbl
xor
sbb
and
cmp
adc
mov
and
dec
pop
mov
pop
jl
inc
inc
pop
daa
sub
mov
imul
dec
imul
inc
add
cmp
mov
add
fldcw
mov
sub
xchg
in
insb
and
scas
lahf
mov
fisubs
out
add
test
gs
inc
je
notb
sbb
mov
cmc
out
add
sub
mov
sbb
sbb
mov
dec
inc
or
xchg
and
mov
mov
jmp
dec
test
pop
adc
jg
xchg
lds
movsb
std
lret
repnz
in
push
mov
iret
mov
sbb
mov
push
adc
stos
and
add
iret
fcmove
js
icebp
pop
mov
cmp
addr16
pop
clc
notl
inc
data16
sub
shll
ret
pop
dec
mov
mov
test
push
sub
mov
mov
adc
jle
push
xchg
stc
xchg
pop
or
inc
mov
and
mov
inc
xor
xchg
xor
adc
cli
dec
stos
ljmp
ss
xor
dec
loopne
push
xor
mov
je
inc
into
insl
lea
pop
fs
fdecstp
scas
cs
mov
imul
xchg
aad
arpl
test
cmp
jl
pop
in
es
fisubl
pop
push
arpl
cli
add
lock
mov
out
ja,pt
rcrb
mov
lret
int3
fsubl
cmovl
mov
pop
add
ficoml
sub
js
sbb
pop
lock
aas
fdivl
ss
push
or
or
ja,pt
mov
mov
and
loope
and
imul
int3
cmp
bound
outsl
cmp
and
shl
das
mov
imul
in
out
xor
cmpsb
mov
out
mov
xorb
xor
cmp
or
adc
and
mov
adc
adc
pop
popa
dec
push
and
aaa
and
iret
xchg
lahf
out
fimull
inc
test
aaa
sub
pop
adc
imul
sahf
or
in
lods
push
and
scas
leave
xchg
mov
jnp
mov
ret
scas
neg
sbb
pop
or
jbe
sub
out
xchg
jae
in
mov
out
std
jno
mov
clc
dec
iret
push
jae
aam
push
lods
jb
xor
cmpsb
sub
lahf
xor
or
je
cmp
arpl
ljmp
adc
lds
arpl
ds
ror
les
imul
out
jmp
fcomps
and
mov
cmp
fsubs
sub
jl
outsl
jb
arpl
inc
lar
mov
cmp
in
mov
popf
test
push
test
add
js
mov
cmp
jo
inc
xor
hlt
fnstsw
test
lahf
aaa
mov
dec
imul
push
lods
aaa
lods
scas
mov
addb
inc
inc
push
push
xchg
jge
fidivrl
sbb
lea
imul
fnstcw
jmp
addb
or
sbb
shlb
pop
push
lods
fisttpl
aad
add
pop
inc
out
sbbb
dec
and
aam
jbe
xchg
fmul
out
pop
loop
dec
frstor
lahf
cmp
mov
icebp
mov
cmc
lods
mov
inc
aad
inc
ror
cmp
push
jae
add
adc
and
jb
movsl
jmp
dec
enter
adc
dec
xchg
jb
cltd
add
leave
sbb
xchg
cs
enter
cmp
sub
dec
xchg
pop
inc
xor
lcall
js
or
mov
cli
push
and
flds
insl
mov
cmc
out
sub
xchg
or
scas
cld
pop
xor
pop
lods
inc
cmp
xor
or
pop
jp
lock
push
ljmp
mov
subl
fbld
jae
pop
and
fisttpl
jae
gs
stos
icebp
outsl
pop
arpl
daa
xorl
test
cmp
flds
lods
outsb
call
std
outsb
stc
sbb
pop
push
or
insb
pop
fdecstp
bound
sbb
shld
aad
dec
pop
xchg
xchg
mov
sahf
out
mov
adc
or
call
aam
cmp
sbb
xor
xlat
add
mov
imul
insl
ret
into
push
mov
jmp
jns
imul
cmp
aas
cmp
pop
addl
dec
dec
lahf
dec
inc
or
fs
mov
cli
jg
nop
and
add
mov
les
mov
rolb
je
mov
dec
test
pop
jno
ss
stos
adc
lret
mov
fs
mov
adc
lods
dec
jg
sbb
stos
jecxz
mov
mov
into
in
mov
ds
push
jge
and
mov
pop
fwait
inc
mov
imul
gs
mov
out
test
dec
jp
pop
jnp
jnp
cwtl
add
clc
lds
jmp
ss
xor
in
sub
movsb
int3
lahf
xor
das
jbe
dec
stos
sbbb
aam
mov
outsb
sbb
mov
faddl
xor
jecxz
mov
bound
pop
xlat
aaa
mov
xor
out
repz
cmp
cwtl
lds
jae
and
insl
sub
mov
mov
adc
mov
iret
dec
sti
xchg
outsl
into
and
push
pop
es
and
mov
ljmp
cmp
pushl
inc
jmp
jmp
adc
mov
push
push
fcompl
jb
push
jb
sbb
cmp
mov
inc
jbe
stos
int
add
pop
or
mov
sub
or
cmp
jmp
add
mov
adc
adc
jo
add
mov
arpl
jb
pop
out
push
mov
mov
shrl
mov
add
inc
popf
xchg
push
insl
fidivrl
cmp
shll
pop
in
xor
es
movsl
shlb
divl
inc
adcl
inc
jmp
addr16
insl
push
push
enter
or
scas
in
shrb
std
std
push
cmp
sbb
cs
fsubs
fdiv
int3
cwtl
fbstp
outsb
push
jp
mov
ljmp
mov
and
sahf
mov
popa
cmp
sti
pop
clc
cmp
sti
sub
jg
gs
sbb
jbe
dec
xchg
fnstsw
push
fwait
sbb
hlt
mov
shrl
cmp
in
dec
xchg
fmulp
cltd
lds
mov
xchg
cmp
inc
push
mov
sbb
push
add
xchg
sti
add
push
sbb
cmpsl
sbb
xlat
bound
dec
popf
mov
insl
hlt
rcr
orl
out
outsl
push
cld
xor
out
mov
jb
add
mov
mov
icebp
in
cmpsl
xor
pop
or
mov
js
inc
fisubrl
push
sub
xchg
mov
aas
inc
dec
jmp
mov
push
add
sti
jle
and
mov
les
mov
mov
imul
cltd
jo
or
stos
lods
jmp
sub
and
je
jnp
loop
xor
xchg
dec
in
loopne
frstor
cmp
cltd
xchg
mov
ficoms
sbbb
shlb
mov
mov
sbb
cltd
pushl
add
inc
mov
les
les
movsl
shrb
xor
das
push
mov
stos
push
aas
mov
std
pop
in
add
add
xchg
push
mov
xchg
mov
or
lcall
push
int
push
std
mov
sbb
lods
stos
stc
or
pop
xor
test
out
scas
jl
xor
int
dec
rclb
ljmp
inc
or
cwtl
dec
mov
mov
jb
out
adc
mov
pop
mov
xlat
shr
stos
pop
test
les
out
sbb
inc
scas
push
xchg
outsb
repnz
cmp
mov
xor
pop
sub
cmpsl
ss
movsb
in
mov
push
jp
mov
int
ficoml
inc
xchg
scas
sub
jl
js
adc
sub
repz
out
in
push
cmp
enter
movsl
repnz
pop
ja
jnp
les
dec
jbe
aam
lods
enter
adc
stos
test
mov
push
jmp
and
sti
fstpt
add
out
inc
testb
mov
push
push
fcmove
insb
adc
pop
jp
xchg
mov
mov
jne
cmpl
out
into
or
push
int3
cs
xor
addr16
scas
mov
setae
aas
jl
fmuls
cmp
icebp
pop
test
and
ss
jp
lds
andl
pop
sbb
sbb
jae
push
jae
enter
testl
fs
mov
adc
sbb
test
mov
add
jle
push
lods
inc
dec
inc
cmp
dec
adc
fldt
pop
into
mov
mul
adc
stos
in
sub
in
adc
xor
leave
inc
dec
pop
push
cmp
sub
mov
mov
lock
out
jae
xor
or
mov
adc
mov
ss
ljmp
lds
pop
pop
mov
jl
mov
xor
jp
femms
add
imul
xor
mov
pop
inc
pop
sbb
mov
inc
stc
ret
subl
mov
int
cmp
dec
xor
and
jnp
es
aam
ds
inc
fbld
jns
adc
jo
orl
arpl
ret
xor
add
push
fsubrs
xchg
enter
movsb
fcomps
mov
popf
jo
rcl
and
cmp
and
and
dec
sbb
xchg
push
nop
mov
mov
imul
push
cmpsb
out
mov
pop
in
pop
lcall
out
sub
hlt
push
cmp
aas
call
aas
push
fsubl
pop
rcrl
cmpsb
jo
js
mov
in
xchg
call
shr
and
dec
sub
mov
mov
mov
add
mov
add
std
jmp
add
mov
push
test
cmpsb
mov
sbb
mov
in
mov
sub
inc
xchg
xchg
ja
fmul
int3
imul
loop
icebp
loop
aas
enter
dec
or
aas
pop
xor
dec
cld
add
pop
mov
or
pop
imul
pop
out
inc
jmp
and
dec
push
or
pop
xlat
xor
mov
imul
in
or
xor
je
or
xor
cs
lods
repnz
push
cmp
jo
rcrb
nop
out
xor
repz
or
lds
ja
mov
and
filds
inc
outsb
adc
xchg
js
nop
rclb
bnd
cltd
test
fisubl
js
call
aas
cmpb
loopnew
sub
repnz
mov
bound
xlat
mov
js
cmp
or
fsubp
pop
mov
inc
pop
sub
xor
out
add
sub
dec
fwait
or
xchg
pop
in
movsl
pop
pop
test
int3
js
sub
cmp
mov
dec
stc
push
sub
xor
xchg
sbb
lods
aas
rolb
mov
jns
cmpsl
outsb
mov
pop
xor
fwait
mov
push
aad
negb
test
jecxz
call
cmp
xchg
shlb
cmpsb
or
sub
dec
stc
mov
lods
push
inc
movb
out
jbe
xor
cmp
sub
mov
mov
ucomiss
xor
aaa
jnp
dec
insb
add
call
shl
mov
mov
aam
daa
sub
fwait
and
jo
mov
push
ds
cmp
out
loopne
movaps
js
mov
call
xor
dec
or
mov
cmovno
repnz
jle
mov
repnz
jbe
jmp
jns
inc
mov
pop
call
cmpsb
push
fwait
jl
and
int
pop
mov
lahf
or
ljmp
pusha
imul
push
aam
pop
test
insl
data16
xchg
bound
mov
push
dec
insb
pop
sbb
cmpsl
jbe
cs
daa
stos
lods
das
and
arpl
inc
cmpb
popf
jge
xchg
dec
push
inc
mov
cmpsl
adc
mov
orb
and
fimuls
adc
jne
pop
pop
jg
sbb
in
xchg
or
mov
hlt
cwtl
outsl
jge
sahf
mov
subb
sbb
cld
mov
and
mov
xorb
je
cmc
call
mov
dec
pop
jb
frstpm(287
inc
out
mov
mov
sbb
sub
push
fimull
pusha
dec
cmpsl
popa
mov
mov
sbb
stos
into
test
xchg
imul
cmp
mov
jne
in
push
cld
or
dec
mov
cmp
iret
and
mov
inc
sub
aam
bound
imul
mov
xor
sti
or
jns
dec
bnd
fwait
mov
xor
cmpsb
xchg
mov
std
dec
and
pop
jl
ficoms
sahf
mov
movsl
das
outsl
sahf
and
clc
addr16
cwtl
leave
inc
aad
pop
out
or
lret
lods
jecxz
es
gs
dec
xchg
adc
loop
fildll
jge
sbb
inc
cwtl
mov
or
and
mov
lds
mov
int
addr16
fsubrl
pop
gs
sbb
mov
fisubl
fdivrl
ss
rep
adc
mov
movsl
dec
repnz
add
lret
es
xchg
flds
cmp
cmp
dec
jo
sub
cltd
sub
push
stos
es
test
mov
push
sbb
vpminub
push
notb
jnp
lret
adc
adc
incb
cltd
fldl2e
jno
das
loop
or
cmp
in
fsubrp
scas
inc
jp
sar
adc
or
add
and
sahf
mov
nop
lock
mov
mov
mov
add
add
mov
stos
inc
adc
movsl
ja
fidivrl
pop
sbb
add
cmpsb
rcrb
push
gs
xor
sub
inc
xchg
xor
sbb
popf
or
add
pop
lret
or
mov
mov
or
daa
xchg
or
sbb
mov
ljmp
pop
js
mov
xorb
mov
into
add
movsb
mov
lods
aad
fdiv
mov
test
jnp
add
test
pop
ret
pop
mov
jg
int3
cltd
insb
xor
sub
lahf
shll
test
decl
ret
call
adc
jecxz
je
jo
or
fucomp
xchg
dec
icebp
adc
out
jae
subl
das
push
sub
cmp
aad
pop
lret
mov
sub
and
mov
das
or
out
mov
sbbl
mov
dec
bound
lret
adc
outsb
data16
in
jae
stc
sub
adc
sbb
dec
xor
cltd
in
sbb
xchg
testb
push
call
add
sbb
into
shr
cmp
scas
adc
ja
push
jmp
sbb
sub
dec
fdivs
sbb
add
cmc
sbb
push
cltd
popf
inc
data16
xchg
sub
ljmp
scas
mov
rcl
mov
inc
dec
xchg
ss
push
out
in
test
or
out
mov
testb
push
sahf
fmuls
dec
jns
loop
inc
inc
push
bound
ja
sub
mov
mov
pop
and
push
dec
popa
sub
inc
xchg
dec
test
outsl
push
dec
imul
push
idivb
ret
sub
shll
sbb
bound
and
scas
sti
test
clc
or
mov
jmp
pop
fisubl
sbb
lcall
vcmpps
pop
sbb
fadds
adc
fxch
pop
push
int
jmp
xchg
iret
sub
ja
adc
push
ljmp
rolb
cmpsb
sbb
in
aaa
or
shr
es
cmp
push
ret
inc
aaa
ror
dec
xlat
ljmp
movsl
mov
ret
shlb
jg
mov
scas
outsb
xchg
sub
data16
enter
js
call
jecxz
xchg
les
loop
insl
cltd
mov
das
jp
in
sub
or
pop
xlat
mov
data16
ds
mov
out
mov
bound
test
dec
mov
popa
insl
int3
popa
hlt
stos
in
popf
mov
pusha
add
xor
inc
arpl
mov
fs
dec
sub
mov
add
cld
xchg
adcb
mov
xchg
mov
sub
clc
loope
sbb
dec
xchg
push
pop
jnp
adc
movb
lret
xchg
mov
jae
popf
lret
add
in
movl
sbb
and
pushf
sbb
pusha
scas
cltd
xchg
test
and
sub
sub
sbb
pop
les
sbb
imul
xchg
pop
push
mov
push
pop
cmp
add
sarb
sub
and
inc
pop
pop
sub
sub
or
push
es
mov
add
sub
pop
js
pusha
inc
or
push
mov
mov
fbld
jne
daa
add
jle
adc
mov
sbb
loopne
inc
aam
mov
xor
sbb
repnz
std
mov
outsl
jle
pop
mov
add
sbb
imul
inc
pusha
fstps
xchg
and
ds
jae
incl
roll
adc
jmp
out
mov
pop
push
pop
sub
out
mov
int
mov
push
inc
xchg
pusha
aas
jge
cmp
xchg
shrb
addr16
or
mov
movsb
loopne
and
std
ja
mov
and
cmpb
iret
shlb
cli
imul
sahf
fxch
lcall
mov
leave
push
por
pop
stos
dec
cmp
test
mov
push
mov
aas
lahf
stc
mov
push
aam
pop
jae
push
pushf
cmpb
adc
ds
and
sbb
pop
mov
sbb
fistpll
mov
mov
dec
cmp
xor
test
add
xor
icebp
push
pusha
inc
imul
mov
cli
dec
cmc
dec
loope
rcll
std
daa
sbb
lds
aam
int3
je
adc
hlt
dec
adc
sub
mov
pop
xchg
js
mov
dec
add
mov
ja
in
add
push
mov
add
cmp
xor
sub
add
lgs
mov
dec
push
cmp
sbb
pusha
cmpsb
rclb
stos
push
xchg
pop
test
push
jae
bound
aam
gs
pop
xchg
adc
popa
inc
popf
lea
arpl
and
mov
jge
xor
adc
sub
mov
and
xchg
mov
rol
popf
mov
mov
rcrl
pop
mov
flds
int3
cmp
jp
fcmove
lret
shlb
call
lods
pushf
loopne
je
mov
sbb
aas
cmpsb
in
mov
pop
push
popf
mov
sub
add
mov
adc
cmc
loopne
mov
cmc
mov
test
ss
roll
out
stos
xchg
dec
adc
xchg
in
push
lods
xchg
scas
mov
adc
insl
pop
dec
sbb
nop
jmp
sbb
outsl
cmp
insb
cltd
rcll
pop
pop
pop
mov
insb
shll
push
ss
inc
std
cmp
sub
jnp
sub
addb
flds
shrb
fisttpll
imul
xor
in
pop
push
xchg
out
mov
xchg
jnp
dec
jne
imul
ja
mov
adc
and
mov
xchg
push
jecxz
cwtl
xor
pop
xchg
cld
loop
lea
in
pop
std
mov
cs
mov
and
int3
push
push
and
mov
ret
bound
shrb
inc
rcrl
aaa
push
mov
jno
pushf
int
adc
inc
scas
jg
dec
sub
push
add
mov
inc
outsb
jnp
jb
rorl
push
sbb
add
mov
outsb
cmp
xchg
inc
pop
les
scas
or
push
outsb
aaa
divl
add
aaa
repz
and
repz
fs
rcrb
sbb
mov
mov
aaa
mov
sti
mov
movsl
mov
sbbb
das
adc
mov
mov
in
test
out
jmp
ds
cmp
lea
aaa
sbb
mov
sub
int
xor
adc
push
es
dec
lods
dec
sub
loope
pop
dec
xchg
add
ret
adc
adc
push
jecxz
add
stc
das
stos
adc
insl
fwait
pusha
mov
pop
inc
sbb
mov
mov
mov
or
mov
add
insl
or
lret
lret
cmp
jns
cmc
inc
bound
xor
out
psrlw
out
mov
nop
or
sahf
mov
jle
faddp
sti
xor
inc
fstps
xlat
jg
push
fs
test
int3
out
jnp
jae
dec
inc
ror
enter
fstpl
push
lret
ss
mov
movsb
jno
jp
movsl
xchg
inc
ffreep
or
jp
xchg
aaa
fwait
dec
adc
push
loope
imul
mov
mov
add
popf
pop
jne
adc
jl
ljmp
lods
push
fbstp
aaa
sahf
cmp
popa
repz
es
es
and
addb
jecxz
lret
xor
or
ja
dec
inc
adc
insb
and
sub
jmp
sbb
jae
cmp
mov
cmpsl
sub
xchg
mov
lock
loope
arpl
adc
or
out
inc
mov
std
jno
pop
jbe
out
clc
pop
cmp
lcall
leave
inc
das
les
xchg
jecxz
aam
notl
xchg
dec
ficomps
mov
sbb
mul
idiv
mov
fcmovnu
in
into
pop
bound
outsb
jmp
outsb
add
outsb
inc
imul
cwtl
push
or
cmpsl
lret
jp
xlat
fdiv
xchg
xor
ds
push
das
jnp
inc
dec
mov
outsl
je
int3
aaa
sub
ja
cmp
in
mov
and
mov
xor
mov
push
cs
push
test
pop
loopne
cli
xlat
test
sub
fs
xor
xchg
scas
mov
or
add
in
add
inc
loopne
jne
insl
lret
dec
sahf
aad
insl
ret
dec
push
push
test
fwait
les
mov
loopne
cmp
push
loope
sub
aas
push
add
mov
xchg
nop
xchg
cmc
aaa
ret
jnp
and
jl
les
mov
inc
aaa
cmp
dec
xchg
lahf
imul
addr16
push
jge
inc
mov
std
lcall
push
sbb
gs
mov
and
pop
movsb
in
jecxz
fiaddl
xchg
fcoms
fnstsw
dec
xlat
into
mov
sbb
stos
jcxz
adc
mov
adc
mov
dec
sub
nop
inc
fnstcw
lods
sbb
inc
divl
repnz
cmp
dec
dec
lret
sub
push
imul
mov
enter
cmpsl
mov
pop
push
add
das
sub
mov
pop
movsl
arpl
js
sub
cwtl
loopne
inc
fwait
mov
cs
push
fbstp
sbb
jmp
and
add
push
fildll
mov
dec
call
xchg
xchg
bsf
in
lea
jae
xor
mov
push
test
xchg
andb
outsb
adc
cmp
ljmp
push
fwait
into
cwtl
ss
push
sub
jg
scas
popf
sub
shrb
cmp
negl
es
push
dec
mov
dec
andb
mov
pop
mov
dec
pop
pop
mov
and
cmp
or
or
jae
dec
pusha
mov
in
pop
rep
and
push
push
lds
dec
xchg
mov
in
push
dec
cld
adc
push
ljmp
dec
lock
out
pop
mov
mov
notb
je
fistl
into
xchg
imul
fbld
mov
cmp
dec
push
out
inc
aam
sbb
mov
dec
mov
fidivrs
mov
lods
insb
or
in
addb
hlt
jge
in
ret
movsb
icebp
xchg
add
xlat
jne
nop
dec
jbe
adc
mov
div
movsb
mov
inc
fsts
jnp
inc
mov
jae
sbb
fistps
mov
cmp
test
pop
jne
leave
pushl
mov
push
jns
sti
out
jmp
cmc
sbbb
les
mov
adc
cmpb
or
push
mov
jne
dec
iret
dec
cmp
xchg
ffree
xchg
push
rcrl
je
jns
sub
gs
lahf
jp
jp
jge
dec
push
dec
sub
sahf
lock
pushf
fwait
cld
dec
into
outsl
jp
jne
fmuls
shl
in
gs
xchg
ret
rcrb
push
fimuls
int
div
scas
inc
icebp
popf
push
and
push
mov
les
cmp
jmp
cmp
add
xor
test
xchg
rcll
stos
aas
movsb
and
insl
mov
imul
jno
pop
das
dec
sti
pop
ljmp
outsb
subl
pop
push
push
out
incb
es
jae
jl
popa
clc
sti
adc
adc
mov
jge
lret
sub
sti
add
scas
add
add
out
cmp
out
mov
mov
push
insb
sub
out
xchg
data16
jl
or
xchg
inc
sbb
xchg
lods
sub
jp
wbinvd
pop
cld
xor
test
fildl
mov
jae
fistl
inc
mov
xchg
add
test
test
jg
mov
and
ja
and
test
push
mov
xchg
push
mov
add
and
jl
mov
test
jle
sti
inc
mov
dec
push
or
ret
clc
cmp
jmp
push
std
hlt
loopne
mov
mov
adc
ret
mov
push
imul
div
les
jo
ja
pop
pop
jmp
test
mov
out
and
jg
loop
adc
push
dec
sub
adc
stc
push
stos
les
xchg
jo
add
pop
addl
out
les
fldt
cmp
in
push
push
sbb
pop
mov
pusha
inc
add
xchg
or
fwait
sub
inc
jo
xor
lods
in
lret
push
jmp
adc
fistl
iret
inc
sub
inc
aas
rcrb
mov
das
adc
mov
loope
test
add
ja
pop
dec
sbb
cmp
fnstenv
push
int3
hlt
bnd
cmp
cmp
sub
bound
out
pop
adc
add
hlt
adc
ss
lahf
test
sbb
addb
in
lea
int
sub
xchg
xor
pop
or
into
lret
fmull
negl
jle
dec
pop
xchg
imul
repnz
fs
mov
ret
lcall
mov
inc
dec
add
adc
ret
lds
pusha
sbb
movsl
sbb
test
das
add
jbe,pn
cmp
test
lods
sbb
mov
fistps
test
fwait
adc
push
pop
daa
rorb
and
call
call
push
test
sbb
jecxz
sub
mov
sahf
movsb
lret
rorb
int
gs
scas
push
int
decb
mov
rorb
insb
pop
cs
push
inc
in
push
pop
pop
in
in
je
out
mov
lock
mov
mov
adc
jbe
scas
and
push
pop
inc
push
ret
lods
into
add
inc
cmp
test
out
popl
imul
sbb
pushl
cmpl
hlt
test
ljmp
mov
js
inc
gs
je
bound
sub
test
out
cwtl
mov
xor
jbe
ss
push
or
adc
jecxz
sub
jle
jbe
lds
in
mov
lcall
push
loope
add
aad
enter
jne
stos
or
icebp
daa
push
mov
cwtl
test
lea
jbe
test
pop
insb
rolb
scas
cmp
rcll
imul
and
adc
jb
jb
sti
xchg
bound
stc
mov
mov
jno
or
adc
gs
leave
xchg
fildll
add
mov
mov
fwait
jb
push
push
xchg
incl
cmp
mov
mov
nop
movsl
aaa
push
popa
js
jns
pop
xor
in
pushf
jb
jecxz
sub
or
jp
fimuls
pusha
leave
adc
mov
jno
sbb
sub
popf
xor
les
and
sub
mov
jg
pop
mov
xchg
fs
inc
inc
sub
insl
jmp
repnz
pop
xorb
leave
jl
add
mov
movb
scas
sub
inc
jp
insb
iret
filds
test
and
ror
push
popf
ds
fdivs
lahf
dec
stc
movsl
cmp
sub
fwait
jecxz
in
push
jmp
pop
aas
xchg
daa
in
pop
mov
sbb
mov
pop
repnz
or
sub
xor
xchg
mov
mov
xchg
insl
repz
cmpsl
lea
pop
mov
pop
fmuls
addl
mov
jge
das
pop
sub
call
in
mov
cmpsb
push
int
ds
fwait
call
mov
fidivs
and
mov
cmp
mov
sub
cmp
je
mov
ret
aaa
pop
xor
mov
psadbw
mov
bound
rcll
inc
inc
pop
mov
cmc
aam
dec
negl
mov
dec
roll
and
scas
dec
scas
mov
loope
jle
lock
add
or
push
fcoms
fisubrl
mov
mov
add
pop
in
push
lods
sub
out
aas
ja
arpl
lret
or
mov
ror
sub
std
adc
adc
das
add
stos
mov
sub
lcall
adc
out
sbb
xor
jmp
fwait
lahf
xlat
popa
push
mov
mov
adc
inc
sbb
in
jne
add
repz
push
sub
int3
mov
bound
popf
lods
ror
inc
pinsrw
and
bound
mov
pop
push
xchg
fwait
pop
push
test
daa
mov
jl
in
mov
xchg
aas
pop
mov
mov
fisttps
jg
int
stc
das
xor
shll
sti
mov
js
xchg
or
sbbb
mov
sbb
int3
cli
ss
or
jb
mov
jge
or
lock
mov
add
mov
and
data16
scas
xor
fs
mov
and
mov
cmp
int
jno
mov
mov
int3
popf
ds
cmp
imul
push
lods
push
nop
inc
stos
push
jle
push
or
and
call
pop
mov
xchg
dec
xchg
call
xor
scas
imul
xor
inc
sbb
out
popa
add
cmc
dec
inc
out
aas
test
cs
cmpsb
push
push
sbb
xchg
push
sarl
lcall
sbbl
inc
lds
insb
mov
inc
jle
mov
addr16
in
xchg
jae
insl
mov
loope
add
mov
std
lea
pop
sub
jbe
adc
cli
popf
mov
xchg
ret
scas
cmc
push
push
cmpsl
cmp
inc
mov
mov
jns
cmp
mov
jnp
inc
jge
outsb
insb
inc
jl
shl
xchg
xchg
xorb
inc
push
cmp
idivl
arpl
repnz
xor
gs
outsl
nop
or
aas
sbb
cmp
pop
xor
inc
xlat
dec
insb
mov
mov
repz
fisttpl
cmpsl
addr16
lods
push
ljmp
pop
jnp
aad
lock
sti
insb
and
lea
jae
xor
xorb
incl
arpl
sub
mov
jb
mov
pop
xchg
lret
mov
rolb
adc
or
daa
into
jno
lret
pop
push
push
xchg
data16
xor
or
in
mov
lds
imul
inc
sbb
lcall
outsl
and
aaa
jmp
push
jnp
xchg
testl
sub
mov
hlt
int3
lock
jp
sub
fadd
or
fwait
xor
and
and
cmpb
xchg
lock
imul
dec
repnz
adc
cmp
cltd
into
sub
shl
push
sbb
mov
mov
cmp
in
cmp
mov
and
xor
test
idivl
jle
or
or
mov
or
je
sbb
sbb
and
xor
into
insb
inc
les
sub
mov
sub
xchg
out
call
pushf
jnp
mov
leave
pop
sti
pop
test
shlb
lret
xor
xchg
push
je
in
or
test
lret
shlb
cmp
xchg
xor
jae
mov
fistpll
lahf
out
xor
orl
ret
push
sbb
scas
movsb
loop
adc
pop
sbb
test
pop
aas
in
sti
aad
je
enter
adc
sbb
ja
cmp
enter
or
icebp
sahf
js
mulb
sub
fidivl
mov
pop
jle
rcr
popa
adc
push
pop
ds
mov
cli
aaa
jmp
ds
mov
rcrb
sahf
push
jle
adc
ds
fucomip
add
daa
mov
jp
pop
xchg
and
jge
out
shrb
push
cmp
mov
loop
insl
mov
je
xlat
push
test
xor
es
xchg
repz
movsb
subb
xchg
imul
sahf
mov
leave
or
pop
jmp
cmp
push
mov
xorl
test
push
xchg
imulb
lods
mov
push
lret
and
test
lret
bound
adc
or
fdivs
add
fisubs
xor
lea
mov
sub
adc
fs
fs
dec
xor
lds
mov
ljmp
push
gs
lcall
adc
loopne
popa
aaa
xchg
lret
leave
je
or
es
push
bound
loopne
mov
jle
dec
fxam
mov
dec
imul
in
nop
jge
sub
mov
insl
or
outsl
ds
outsl
jle
pop
ss
push
cmp
add
fadd
sub
ret
mov
cmp
push
inc
inc
adc
inc
adc
jge
loope
mov
jne
mov
lock
jp
dec
ficoms
sbb
jmp
iret
mov
nop
inc
mov
sbb
jp
test
cmp
or
inc
jp
sbbl
stc
mov
mov
sbb
bound
sub
xor
and
clc
or
xchg
scas
xchg
jne
mov
lock
sbb
or
rclb
mov
xor
lea
pop
scas
xchg
xor
inc
inc
jb
in
adc
inc
js
adc
sub
fwait
loope
pop
mov
clc
or
fcoms
js
cmc
pop
pop
adc
out
popa
add
add
push
je
in
mov
push
pop
cwtl
mov
pop
popf
cmpsb
xor
or
mov
push
cmpsl
dec
test
push
int
ss
cmp
sub
int
fnstcw
fsub
mov
rcl
or
insb
dec
inc
fisubrs
mov
cmpsl
or
lock
loopne
loope
out
stos
scas
sti
jno
xor
pop
xchg
sbbb
sub
out
add
sub
cmp
pop
and
adc
ror
inc
gs
xor
shl
pcmpgtd
sbb
push
lret
mov
pop
lods
mov
mov
push
push
inc
repz
mov
ffreep
lcall
das
sbb
pop
push
out
sub
pop
xchg
imul
push
pop
jecxz
push
cmp
shl
jnp
push
rorb
jl
pop
pop
shll
xor
divl
add
stos
mov
lds
out
fwait
add
xor
sbb
not
add
in
mov
shrb
pop
mov
add
mov
cld
or
cmp
out
lods
pop
mov
lahf
push
repnz
lods
aad
cwtl
pushf
jg
sub
jge
push
or
clc
jbe
divl
mov
dec
loop
or
movsl
std
call
or
mov
mov
nop
dec
jne
jns
ret
add
adc
pop
aad
sub
test
mov
fsubrs
mov
shlb
sub
push
and
or
jl
pop
sahf
ss
int
mov
test
test
or
adc
clc
sub
and
test
mov
sahf
cltd
pop
hlt
jno
or
je
arpl
clc
call
cwtl
push
arpl
rol
fisubrs
outsb
sbb
jne
pop
jbe
push
in
push
xor
in
das
pop
inc
insb
fsts
and
fs
lea
lret
and
push
pop
lret
push
data16
mul
adc
xor
cltd
popf
xchg
push
loop
enter
arpl
imull
loope
add
repnz
mov
and
inc
sti
outsb
mov
cmp
popf
jmp
push
les
cwtl
outsl
mov
xchg
dec
add
jp
adc
dec
push
cltd
popf
xchg
jle
dec
stc
mov
xchg
xor
mov
sub
out
and
mov
cmp
insl
xchg
or
push
sub
jp
cld
jo
push
in
scas
lods
jo
cld
add
cs
lods
and
inc
add
sbb
cmpsl
aam
xorb
push
add
sti
js
mov
inc
mov
stos
mov
push
cmp
dec
ret
mov
xchg
mov
inc
aaa
es
scas
jne
adc
loope
xor
mov
pop
sbb
rcrb
xor
or
fsubrl
pmaddwd
movl
fiadds
dec
jecxz
jns
decl
pop
jae
aaa
mov
lods
mov
inc
add
mov
xor
sub
xor
jb
in
sub
add
das
imul
xor
inc
mov
and
mov
xchg
cmp
or
push
ljmp
mov
sbb
cs
add
gs
jecxz
or
cltd
out
sbb
das
les
inc
mov
addr16
mov
loopne
dec
add
adc
pop
add
ret
jge
mov
add
dec
push
stc
cmpsb
int3
adc
mov
push
xchg
push
jnp
sbb
jp
xchg
mov
movsl
subl
rorl
dec
js
pop
jmp
test
and
fsubr
outsl
ret
add
mov
clc
mov
dec
xchg
iret
idivb
enter
pop
pop
out
sub
das
lcall
dec
in
rcll
cmp
mov
push
jle
jmp
push
inc
jle
jbe
leave
ljmp
xchg
xlat
xchg
mov
test
cmpsb
sar
pop
and
xchg
inc
dec
or
popf
bound
jb
mov
and
xor
pop
jmp
popf
leave
add
or
ljmp
std
fldcw
pop
push
scas
stc
pop
dec
and
je
push
lds
sub
pop
push
and
repz
dec
out
and
dec
dec
mov
and
push
xchg
cmpb
rcrl
mov
aam
sub
xchg
sub
jp
adc
mov
xchg
push
sbb
and
jnp
mov
pop
mov
or
push
icebp
test
mov
imul
jmp
mov
aaa
pop
lcall
ja
xchg
lds
inc
repnz
fstpl
cmp
scas
mov
call
xor
dec
in
or
test
xor
cmpsb
aas
js
mov
aad
mov
add
loopne
push
out
jb
pushf
cmp
lock
push
js
adc
movsl
fsubs
outsb
cmc
pop
lock
jnp
nop
lods
jl
ja
arpl
loope
aam
aaa
cmpsb
jp
jecxz
daa
stos
add
iret
pushf
imul
xchg
sbb
jg
push
out
mov
mov
out
scas
fs
sub
inc
lret
lds
movsb
xchg
xchg
pop
mov
fcmovnu
fidivrs
bound
xchg
test
dec
add
dec
ja
cli
xor
sub
lods
popf
loop
pop
test
loopne
mov
test
out
fucomip
decb
cli
lret
stos
stc
imulb
or
lret
icebp
addr16
xchg
push
mov
fcoms
mov
mov
sub
cwtl
mov
jle
push
mov
push
lock
add
sub
xor
mov
xor
dec
jg
bound
mov
lds
inc
dec
jge
push
xor
shl
repnz
xchg
mov
mov
push
push
lret
loope
fstpt
add
movsb
mov
bound
jno
ja
adc
adc
xchg
adc
sbb
mov
addr16
cmp
cmp
mov
lret
ficomps
inc
push
cmp
scas
add
add
jb
mov
or
repz
jns
mov
push
pushf
scas
ljmp
mov
push
jno
fnstsw
jmp
mov
mov
xchg
lods
enter
cmc
arpl
in
jmp
shrb
dec
jno
mov
and
mov
push
jle
jp
pop
test
and
outsb
sbb
jne
pop
jo
cmp
push
push
mov
xchg
scas
stos
jp
nop
cmpsb
push
jno
cmp
push
test
mov
sahf
xor
xor
mov
push
stos
leave
jbe
sub
inc
xchg
sti
lods
pop
lahf
lret
mov
xchg
andb
mov
daa
arpl
shlb
xchg
push
fdivrs
inc
mov
push
je
dec
jmp
gs
push
sahf
loop
pusha
or
ds
popa
jmp
aam
in
sub
clc
loopne
xchg
and
mov
imul
add
pop
fldenv
and
cltd
add
jnp
loope
pop
mov
insl
cmp
pop
add
pop
imul
xor
jb
xchg
in
test
inc
mov
cmpl
push
loope
push
xor
add
pop
mov
lahf
push
push
xchg
icebp
dec
pop
mov
aad
push
sarl
mov
add
cmp
mov
pop
stc
cltd
scas
in
cmp
xchg
clc
inc
popa
xor
aad
jno
inc
xor
popa
loope
mov
test
arpl
jne
icebp
ret
xchg
xchg
mov
dec
aas
dec
stc
ljmp
jmp
int
cmp
pop
lcall
test
sar
jge
xor
jg
push
decl
or
sub
sub
cmp
jns
nop
out
in
xchg
test
loope
loop
and
aaa
jnp
jg
enter
mov
mov
push
xchg
stos
cmpl
imul
sbb
jp
rcll
fadd
andl
insb
fsubrs
fisubrs
cwtl
cmp
xchg
mov
ficomps
lods
int3
cmc
and
xor
ljmp
rcll
stc
incl
sahf
mov
ret
jne
fisubrl
pop
orl
fidivl
inc
xor
lret
mov
cmpsl
and
add
jp
ret
in
mov
sub
dec
pop
stc
pop
push
out
mov
idivb
push
sbb
or
dec
aad
outsb
add
mov
xchg
dec
int
inc
test
push
mov
jge
and
sbb
inc
dec
mov
pushf
inc
xchg
xor
or
inc
sahf
aas
nop
jp
xchg
add
pop
nop
test
mov
es
ljmp
int
push
in
roll
pop
into
fisttpl
push
xor
popf
mov
bnd
popf
sbb
test
xor
ret
xor
cli
in
cmp
mov
or
jnp
and
dec
cmp
push
jbe
jb
pop
scas
popa
push
icebp
sbb
movsl
or
lds
sub
das
lahf
in
push
xor
cmp
aas
rcll
sbb
xchg
fsubs
jmp
sub
fstpt
adc
sub
test
sbb
rclb
lret
clc
mov
imul
daa
mov
in
mov
xchg
punpckldq
rolb
popa
mov
or
push
push
xor
sti
out
shll
push
dec
inc
or
std
xor
fistpl
stos
shr
adc
or
mov
and
mov
jl
pusha
add
popf
shrb
mov
sub
push
dec
dec
inc
iret
nop
push
mov
std
cmpsl
pop
cmp
mov
adcb
mov
lock
mov
lret
fs
add
add
lret
mov
jge
daa
pop
push
mov
mov
adc
sbb
loop
sub
mov
xchg
daa
mov
jne
dec
dec
and
push
stos
jg
f2xm1
pop
lea
cmpsb
aas
rorl
jns
fmull
sub
xor
push
pop
std
mov
js
pop
rcrb
cld
sub
ret
add
xchg
jno
cwtl
xlat
xor
test
cmp
push
fists
or
pop
and
addr16
mov
or
sbb
scas
imul
add
ja
mov
or
ffree
push
cmpsb
lock
xchg
xchg
out
in
fidivrl
push
dec
out
inc
xchg
out
fsub
pop
and
push
mov
cmp
ret
movsb
ja
mov
mov
xlat
push
inc
iret
mov
pop
orb
into
push
xchg
shr
or
mov
push
sub
mov
std
negb
cmpsb
iret
lcall
sti
and
cmp
xor
clc
adc
mov
loop
push
sbb
incl
cwtl
pushf
sahf
movsl
push
xor
test
decl
push
movaps
push
cmpb
pop
call
cmpb
shl
insl
mov
lods
lods
xchg
mov
xor
mov
shr
repnz
sarl
sub
pusha
icebp
cmp
imulb
add
icebp
jmp
xchg
adc
repz
addr16
cmp
leave
fwait
test
out
cltd
mov
lahf
sbb
or
or
adc
mov
sub
inc
lea
shl
push
test
push
jae
or
aaa
lock
out
stos
mov
xorb
jbe
xchg
fnstenv
pop
popf
aas
out
pushf
into
in
jne
dec
xchg
mov
inc
out
mov
jl
xor
jno
inc
call
pusha
push
cmp
stc
mov
pop
lcall
test
xchg
idivl
xchg
test
repz
mov
pop
adc
arpl
out
pop
fsubr
loopne
cmp
incl
cwtl
pop
popf
ficoms
add
sub
mov
iret
popf
cmp
jne
xchg
lods
test
xchg
movsb
andb
xchg
sub
jo
inc
sbb
or
and
shrl
mov
in
sbb
aaa
cmp
pop
push
inc
sub
decb
fstl
daa
mov
xor
mov
js
imul
xor
lock
fbstp
dec
lcall
aam
mov
sbbl
mov
xchg
xor
popa
push
jne
sbb
push
pop
in
mov
lahf
adc
xor
xlat
push
in
cmc
fistl
ja
pop
mov
into
sbb
jne
adc
cmpsl
js
sub
mov
sbb
sbb
mov
xchg
dec
dec
pop
xlat
mov
js
and
pop
inc
cmp
jb
in
xor
stos
cmpsb
sahf
lea
cmp
ds
cmp
rcl
mov
and
push
xchg
add
jp
and
fsubrl
ret
push
stos
xor
clc
movsl
fs
mov
jnp
xchg
push
xor
das
sbb
pop
mov
movsb
xor
not
stos
icebp
pop
xchg
data16
cmp
sahf
in
jl
fabs
std
lahf
xchg
in
stos
clc
mov
iret
adc
pop
daa
sbbl
mov
lea
mov
imul
stos
adcb
sbb
pop
das
pop
mov
arpl
sub
arpl
sbb
adc
sub
mov
mov
fcomps
enter
mov
movl
xchg
cmpsl
clc
adc
mov
pop
push
pop
cmpsb
ret
mov
inc
jl
jnp
negl
daa
aaa
xchg
aad
jb
or
cmc
inc
test
xor
push
pop
adc
inc
js
cli
xchg
fs
or
aas
gs
mov
sub
pop
or
repz
pop
push
inc
push
stos
movl
stc
popl
sub
adc
add
inc
repnz
pop
jno
dec
ret
pop
test
pop
lea
xchg
jecxz
sahf
push
imul
lahf
aam
inc
mov
test
or
scas
mov
push
cmp
test
mov
dec
cmpl
aad
aad
int
adc
adc
insb
and
imul
dec
hlt
int3
mov
inc
fldl
and
cld
ja
insl
cmp
in
lahf
rcrl
movsb
sub
clc
push
mov
ret
icebp
xor
enter
sub
insb
lret
clc
dec
mov
jno
mov
fwait
pop
mov
xor
cmpsb
lret
or
je
add
dec
push
gs
push
int
call
sub
xchg
dec
out
jno
test
mov
sub
lret
mov
call
rolb
sbb
mov
nop
fs
jg
pop
cmpsl
xchg
aaa
cmp
rclb
jo
add
sar
cld
je
sub
incb
cmc
outsl
dec
or
and
jecxz
adc
or
insl
xor
sbb
cmp
inc
andb
arpl
add
pop
or
cmpb
daa
mov
in
push
sti
jp
mov
mov
jno
pop
test
push
sub
sub
jge
mov
ljmp
inc
ja
jnp
push
inc
pop
aad
xchg
mov
test
push
inc
add
pop
orb
shlb
stos
mov
stos
ss
sub
imul
xchg
mov
cs
cltd
inc
insb
or
loopne
cmp
adc
pop
pop
stos
sub
xchg
imul
pop
into
outsl
js
sbb
push
stos
xor
test
adc
lds
inc
ret
pop
dec
dec
gs
lock
lods
xchg
add
cli
lret
push
xor
icebp
and
jmp
pop
pop
xchg
out
pop
xchg
sbb
jecxz
adc
adc
jo
or
insl
or
loopne
in
stos
jl
in
test
test
hlt
jae
inc
pusha
stos
sbb
mov
movb
sbb
shll
jg
pop
adc
stc
leave
gs
fbld
jmp
fsubrs
popf
loope
pushf
sbb
les
mov
mov
mov
inc
addr16
loop
push
jne
mov
mov
lods
loope
jne
sarl
push
inc
add
cmp
cmpsl
pusha
sub
shrb
es
gs
lret
pop
icebp
dec
lahf
xchg
pop
sub
inc
mov
pop
xor
mov
jae
cmp
call
lcall
jnp
dec
call
xchg
push
repz
or
pusha
hlt
push
adc
xchg
pop
pushf
jle
mov
cmp
outsl
out
mov
cmc
mov
icebp
bound
fs
adc
sub
arpl
push
mov
mov
imul
std
xor
cmp
outsb
adc
aam
pop
or
mov
adc
sbb
test
int3
fsubrs
push
fdivs
cltd
ret
push
mov
mov
movsl
pop
sub
rcl
pop
mov
je
sub
xchg
lea
cld
mov
sub
popa
jecxz
lock
xchg
int3
mov
push
cwtl
inc
in
dec
fmull
outsb
adc
out
lret
pop
adc
std
cmp
add
sbb
imul
xchg
loop
mov
aaa
adc
jae
insb
mov
or
fcomi
and
jl
mov
xlat
es
jg
adc
add
xlat
test
arpl
clc
mov
jge
fbstp
gs
ljmp
popf
ljmp
pop
cmp
sbbl
insl
cmp
jae
xlat
dec
cwtl
xor
je
sub
push
mov
push
jmp
arpl
sbb
movsb
and
test
xchg
testl
xchg
cmp
or
aam
mov
xchg
arpl
mov
in
and
rcll
shll
inc
push
roll
sbb
push
and
pop
pop
add
xchg
and
fsubrs
adc
mov
sahf
into
pusha
popf
int3
mov
jle
sahf
pop
jnp
insl
rclb
xor
inc
xor
jno
pop
test
inc
rclb
ljmp
xchg
lret
fwait
adc
add
cmp
or
pusha
mov
push
cli
jecxz
xor
cwtl
jp
fstps
or
mov
sub
xchg
sub
sbb
xor
scas
adc
inc
jne
push
xchg
inc
dec
pop
test
daa
mov
movsl
outsl
pop
jae
xchg
mov
cmp
xor
inc
aam
push
add
mov
xchg
sbb
mov
sub
mov
fmul
mov
stos
pop
ljmp
cmpb
fs
into
sbb
adc
dec
mov
test
test
add
xchg
das
call
pop
mov
and
mov
cmp
jb
and
and
inc
sti
ret
sub
push
and
and
xor
fldl
xor
daa
movsb
lods
pushf
shlb
jnp
dec
sbb
loopne
lret
mov
movaps
adc
popa
sbb
xlat
push
or
mov
mov
movb
sub
push
mov
rclb
add
jno
das
mov
add
push
jecxz
cmp
neg
cmpsb
outsw
aad
aad
push
insl
sbb
cmp
into
fwait
inc
scas
add
cmc
jl
les
mov
pop
mov
int
adc
cs
clc
mov
pusha
cltd
shrb
pop
mov
jge
cmp
sub
adc
je
sbb
sahf
and
ds
or
xchg
xchg
sbbb
aas
pusha
mov
xchg
into
mov
rclb
ret
mov
xor
push
or
dec
mov
pop
mov
mov
jp
sbb
adc
and
dec
imul
call
in
pop
pop
mov
js
ja
decl
outsb
scas
popa
push
jae
pop
adc
xor
lods
mov
aam
sub
sub
mov
idivl
inc
add
push
cs
mov
sub
orl
mov
lahf
pop
ficompl
adc
fnstenv
lcall
pop
xor
iret
enter
into
mov
xor
das
and
sbb
cmp
lahf
xor
xlat
xchg
adc
sub
sub
in
repnz
sarl
insl
xor
dec
jae
in
fistps
sbb
out
and
adc
dec
popf
ss
xchg
mov
xchg
lods
aas
mov
jbe
es
push
push
fwait
inc
inc
mov
and
leave
sbb
mov
movsb
push
pushf
stos
and
or
xor
jmp
pusha
imul
popa
rcl
notl
out
fmuls
jl
add
sbb
xchg
and
mov
xchg
inc
sub
inc
cmp
mov
jbe
movsl
xlat
add
push
mov
loope
push
icebp
mov
xor
xor
pop
in
mov
andb
lods
movsb
and
pop
repz
inc
filds
mov
and
xchg
sti
fimull
sahf
or
aaa
sar
sahf
cmp
fsts
out
sahf
outsl
pop
clc
jae
jg
enter
ret
xor
lahf
out
les
lods
mov
xchg
arpl
xor
daa
jecxz
mov
cmp
shrb
inc
xchg
cmp
dec
xchg
shlb
mov
inc
mov
pop
out
inc
jmp
push
rorb
mov
and
adc
dec
pop
lret
pop
mov
sti
rcrb
jnp
stos
cmp
icebp
and
cmc
popa
int
lret
test
test
inc
int
mov
nop
cltd
dec
out
cld
push
andb
test
push
push
adc
mov
adc
cwtl
testb
pop
jl
test
dec
sbb
xchg
xchg
outsb
mov
or
mov
adc
test
lock
adc
orb
or
int3
sub
sub
xorl
sub
mov
leave
jns
insb
xor
dec
out
js
pop
lcall
movsb
aad
arpl
mov
test
pop
sbb
inc
rcl
scas
shrw
cld
ss
mov
pop
pushf
cmpsb
pop
test
mov
jne
xor
jle
sub
mov
adc
imul
cmp
mov
dec
cmp
jl
fs
cmp
adc
lods
aaa
xchg
js
inc
or
xchg
mov
divb
add
outsb
aaa
cmpsb
xor
inc
or
aad
mov
jb
jl
stos
sahf
sbbb
cmc
push
xchg
push
ret
adc
lretw
js
shll
pop
cmpsb
cmc
sub
adc
stos
or
cmpl
fists
cmp
repnz
out
jecxz
mov
aam
mov
cmc
fmull
xchg
pop
jp
cwtl
jae
aaa
inc
daa
add
inc
inc
pop
cld
rcll
iret
out
cmp
push
pop
mov
int
sbb
and
cmp
data16
mov
push
jmp
loope
pop
sub
mov
xor
inc
subl
dec
idiv
hlt
loopne
call
push
cmp
mulb
sbb
or
adc
loopnew
xchg
mov
jecxz
sub
ss
scas
inc
inc
clc
notl
insl
xor
arpl
rol
cld
or
and
xor
into
das
int3
daa
mov
sbb
std
push
iret
jp
fs
out
push
imul
stos
jns
sub
nop
sti
push
jl
xchg
or
xor
mov
add
pop
inc
push
adc
jae
mov
add
fistl
xorl
dec
rcrl
ljmp
shl
stos
cmp
jns
pop
xor
cmp
sub
lahf
filds
xchg
ret
imul
xor
xchg
aam
jle
jle
scas
and
rolb
adcb
addr16
xchg
jb
sbb
je
lea
fucomip
xchg
push
out
pusha
imul
sub
js
sub
mov
dec
nop
les
sub
aam
xchg
fbld
cwtl
movsl
sub
jl
jl
jmp
imul
leave
scas
jae
imulb
push
mov
scas
ss
sbb
inc
inc
adc
xchg
repnz
mov
inc
loop
mov
rclb
outsb
xor
mov
dec
dec
int
dec
std
push
fldt
jno
mov
adc
out
jno
pusha
jnp
inc
lea
leave
jp
mov
je
or
stc
out
cld
enter
jp
daa
insl
jmp
push
mov
addl
loopne
and
and
mov
sbb
sub
aad
mov
and
leave
fbstp
repnz
cmp
shl
scas
cmpb
andl
and
loopne
pop
insl
fs
pusha
daa
lods
jns
add
push
xchg
xor
jbe,pn
mov
pushf
nop
inc
loopne
aaa
and
loopne
mov
pop
fisttps
jnp
xor
dec
push
leave
pop
cltd
shll
fs
sbb
cli
adc
sbb
adc
fnstcw
test
lea
cmp
loop
scas
add
and
leave
aad
arpl
insl
pop
push
inc
insb
jne
aam
push
sub
mov
incl
jl
inc
lahf
dec
inc
inc
mov
sbb
lock
sub
mov
ret
call
test
jge
cmpsl
add
dec
ret
cli
mov
rcrl
imul
cmpsb
call
mov
pop
rcll
xor
pop
push
decl
jne
js
pop
xchg
lea
stos
es
sub
mov
dec
outsb
pop
or
jp
lret
and
xor
sti
das
inc
pop
jecxz
sub
dec
sub
and
call
mov
xor
mov
xchg
inc
mov
popa
xchg
into
jg
push
mov
xchg
fs
lock
dec
cwtl
jnp
fidivl
xor
pop
icebp
fs
ja
mov
repz
dec
jb
cwtl
enter
push
mov
out
and
jle
pop
inc
sub
out
cltd
bound
clc
push
lods
mov
std
jecxz
imul
cltd
mov
jbe
loope
xor
insl
xchg
jle
add
mov
sbb
incb
and
mov
insb
pop
sbb
daa
incb
rclb
dec
jns
push
sbb
mov
das
repz
subb
cmp
pop
ljmp
adc
out
das
and
incb
or
in
out
fwait
shlb
inc
dec
cmpsb
add
xchg
adc
inc
rolb
in
add
lds
mov
xchg
push
jl
orb
fistps
mov
jns
outsb
mov
push
aaa
in
je
fcomi
pop
int3
jmp
ficompl
fistpll
sbb
mov
popa
fsubr
mov
rcrb
in
daa
fnstsw
pop
repnz
mov
sbb
dec
repz
je
inc
stos
jmp
dec
fcompl
pop
repz
jb
mov
mov
mov
ljmp
mov
aaa
cmpxchg
xor
push
outsl
pop
xor
int3
add
push
add
aas
xor
push
lahf
ss
push
inc
pop
and
ret
fmuls
fnstcw
xlat
fwait
cmp
pop
pusha
jb
mov
mov
lods
cltd
neg
push
fimull
mov
pop
scas
mov
divb
iret
repz
call
add
mov
xlat
mov
adc
ljmp
ss
leave
ret
sub
into
inc
xor
jg
popa
pushf
push
mov
xor
lret
cli
push
adcb
cmp
pop
mov
push
xlat
push
nop
ret
mov
cli
pushf
mov
sbb
jecxz
mov
ret
xchg
lret
xchg
test
pop
std
xor
pop
inc
bound
jbe
mov
push
mov
repnz
push
cmpsb
sub
pop
aaa
or
mov
mov
jno
rcrl
fucomp
xor
and
adc
push
xor
out
sbb
mov
add
sbb
mov
pop
ret
xchg
cmp
mov
jmp
xchg
pop
xchg
sbb
add
xchg
xchg
sub
mov
xchg
sbb
loopne
push
inc
stc
pop
int3
pusha
movsb
je
fisttpl
fdivs
add
cmp
pop
aad
test
xor
in
inc
adc
in
mov
mov
popf
inc
js
dec
fdiv
pushf
add
dec
cltd
push
and
adc
in
in
jp
cmp
fwait
adc
nop
xlat
sarl
mov
test
and
lods
into
repnz
ja
xchg
cmp
stos
stos
mov
cmp
aam
gs
das
lock
rcrb
aam
mov
cli
jp
setnp
lcall
rorl
cmp
cli
xchg
stos
inc
mov
stos
repnz
popa
aam
xchg
adc
pop
push
sbb
pushf
jns
fldt
mov
mov
ret
push
aad
jecxz
cmp
in
js
jmp
inc
scas
xor
or
addl
std
aaa
push
mov
test
das
mov
in
dec
xchg
jbe
enter
push
push
push
mov
loopne
dec
iret
dec
mov
cmp
lret
loop
mov
push
cmp
push
clc
js
cmc
inc
clc
test
testl
xchg
stos
pop
lods
xchg
stos
dec
js
dec
jns
mov
adc
enter
mov
adcb
addl
cltd
sub
mov
sub
xor
inc
xchg
movsl
cmp
sbbl
dec
sub
bound
test
jmp
xchg
mul
jnp
in
push
xor
mov
ja
insl
fs
pop
fs
enter
fiadds
js
movsl
aad
adc
std
mov
lock
adc
mov
popf
jae
xchg
ret
adc
shlb
mull
jmp
push
icebp
test
dec
sub
xor
outsl
mov
fcomps
in
mov
inc
sbb
and
cmp
cli
sub
movb
jne
out
push
push
repz
outsl
fxch
adc
cwtl
mov
in
in
lret
mov
lods
test
pop
xor
mov
mov
shll
sbb
cwtl
lock
lea
jg
mov
and
xlat
cmp
and
or
adc
mov
cmpb
push
inc
adc
fistl
sar
mov
pop
push
aas
inc
pop
mov
lret
pop
or
aas
inc
mov
jae
das
and
mov
mov
das
push
mov
mov
xchg
sub
fs
sbb
addr16
adc
test
ret
test
int
push
add
ret
sbb
cmp
mov
add
std
lcall
std
mov
sbb
or
xor
stos
cltd
xchg
stc
into
or
cmp
mov
inc
cmpsl
sahf
add
inc
sahf
push
lods
inc
loope
mov
lret
pushf
cmp
dec
cs
jbe
dec
add
pop
in
mov
pop
and
mov
adc
insl
add
arpl
mov
leave
xchg
sub
cmp
stos
inc
sbbl
mov
xchg
pop
into
lret
lret
das
test
and
jle
pop
jecxz
ja
stc
jne
jne
jmp
pusha
mov
xor
mov
outsl
or
push
pop
setns
sub
int
shlb
add
and
addr16
fstpl
or
lret
cmp
cs
dec
fcmovu
jne
and
adc
jns
ret
mov
add
xor
popa
lret
fcoml
jmp
lret
lods
mov
inc
jmp
imul
stos
mov
push
dec
jg
xchg
adcl
in
js
outsl
pusha
iret
cmp
je
adc
push
loop
push
xchg
test
sbb
mov
int
scas
sub
jg
cmpb
in
out
sub
aad
nop
push
pusha
or
ljmp
test
or
cmc
stos
xor
arpl
ss
std
mov
dec
cmpsl
add
sti
push
cmpxchg
lcall
xchg
loop
mov
rcl
pop
and
push
loopne
ja
and
fdivrs
stc
sbb
fmul
fisubrs
cwtl
mov
inc
xor
add
jae
inc
std
std
and
ret
push
xchg
test
mov
lcall
aam
adc
xchg
lea
dec
icebp
mov
or
adc
add
in
scas
popf
cmp
scas
xchg
arpl
test
and
pop
fstl
sub
divl
dec
cmpsl
xlat
ret
decl
jo
mov
cmp
mov
cmp
lds
std
push
cmp
ret
xchg
adc
jmp
jp
std
scas
jp
mov
addr16
sub
jnp
out
cmp
add
out
shlb
jecxz
and
xchg
push
fs
inc
call
xchg
mov
and
movsb
jle
lahf
pop
mov
addb
fnstsw
cmpsb
lcall
sbb
sub
in
sbb
lret
sti
inc
gs
cmc
pop
rcll
popa
adc
pop
lahf
mov
sbb
jle
ret
mov
mov
mov
cmp
pop
pop
mov
mov
xchg
mov
fs
and
sti
jno
ss
insl
int
mov
std
jmp
movsl
mov
mov
cmp
sbb
lock
repnz
xor
aas
lret
dec
or
out
cltd
sahf
cmp
inc
rol
and
mov
and
mov
push
cmp
jmp
test
push
dec
ljmp
jmp
mov
inc
inc
inc
popa
pusha
adc
aad
inc
fwait
daa
mov
movsb
test
aas
pushf
fwait
xor
adc
push
jecxz,pn
and
test
jmp
xchg
pop
dec
sbb
and
jle
adc
xchg
inc
idiv
sbb
or
and
test
mov
rcll
jmp
ror
jmp
pop
push
and
sub
orl
data16
jg
adc
add
jp
in
push
fdivl
sahf
daa
dec
aam
cmpsb
xchg
dec
cltd
sbb
push
dec
xor
rolw
cmp
aas
stos
in
lret
mov
xchg
mov
xchg
pop
fucompp
and
pop
fsub
xchg
popf
mov
icebp
int3
xchg
push
push
pushf
mov
sub
jecxz
dec
cmpsb
pushf
push
pusha
fstl
into
xor
shlb
subb
xchg
mov
jae
cs
je
add
pop
shrb
stos
test
adc
mov
sbb
enter
jmp
pop
stos
pop
dec
jmp
mov
sbb
sbb
sbb
mov
xchg
notl
ret
fldenv
jne
dec
in
vpsllw
push
call
rcrb
mov
pop
or
jp
stos
mov
push
jg
mov
pop
jnp
push
cld
out
cmp
jecxz
or
fildl
pop
adc
pop
jp
xor
sub
std
in
iret
loope
lds
shll
lods
sbb
ja
fsubp
jg
outsb
xchg
mov
cli
mov
sbb
insb
push
push
test
orb
fdivs
outsb
subl
xchg
sub
add
data16
sbb
aas
adc
test
push
xor
test
mov
mull
mov
add
adc
into
jo
mov
inc
mov
inc
dec
pop
add
jmp
mov
dec
mov
outsb
pop
lahf
sbb
sbb
pop
inc
in
pop
rcll
popa
push
add
mov
das
dec
dec
fst
sti
push
cmp
sub
adc
xchg
shl
cld
cmpsl
pushf
mov
popa
icebp
adc
or
adc
push
std
enter
fstpl
imul
dec
cmp
js
xchg
inc
test
sub
insl
jns
dec
jge
clc
lahf
or
popf
fstpl
std
ret
inc
push
lock
cwtl
mov
loopne
popa
inc
cmp
cli
cmp
popa
pop
mov
mov
stc
popa
mul
sahf
jo
mov
xchg
mov
jmp
jb
roll
xchg
mov
xor
mov
push
rcrl
adc
sub
sarb
jle
imul
push
inc
mov
sbb
sub
xchg
xor
pop
pushf
fadds
sub
push
jae
pop
xchg
aad
push
add
js
test
lret
imul
sarl
lahf
and
ljmp
sub
arpl
cmpb
ds
cmp
push
dec
push
xchg
xchg
sti
daa
cltd
or
clc
shrb
inc
popa
pop
lds
adc
push
jecxz
aaa
rorb
mov
cltd
or
loope
inc
cld
outsb
or
xchg
mov
push
adc
sysenter
mov
inc
sub
pop
call
lods
out
movntps
in
bound
fldl
xchg
xchg
shll
xchg
hlt
sbb
sbb
int
out
and
dec
ds
inc
scas
adc
sub
sbb
lds
loope
dec
test
int
jle
scas
mov
in
cltd
nop
insb
adc
mov
push
popa
fnstsw
dec
inc
xchg
jge
dec
lds
mov
pop
mov
loope
mov
mov
inc
std
push
push
push
pop
xchg
cld
pop
ljmp
sti
cli
dec
inc
movsb
mov
mov
sub
mov
jl
push
mov
xlat
xor
push
and
lret
mov
xlat
xchg
in
fisubl
movsl
call
or
mov
add
inc
xchg
sbb
subl
mov
sub
or
pop
push
pusha
jp
es
stos
inc
pop
test
push
jle
adc
cmp
cmp
mov
int
xor
add
frstor
xchg
loope
add
dec
sub
inc
inc
sub
push
dec
bound
mov
sbb
in
mull
sub
repnz
pushf
jbe
xchg
mov
lahf
stc
jge
stos
ds
pop
loope
scas
mov
mov
xchg
das
sub
sub
and
xor
inc
std
xor
xor
adc
push
in
jecxz
cmp
roll
pop
dec
scas
fldl
stc
adc
cmpsl
das
push
lods
xor
pushf
and
icebp
xchg
sarb
dec
out
aad
arpl
sub
xchg
mov
xlat
fwait
je
adc
std
mov
jne
or
fisttpl
nop
in
mov
ljmp
aam
push
push
push
inc
es
pushf
ret
inc
push
pop
pop
scas
dec
cmpsl
movsl
movsb
cmp
jecxz
test
fwait
in
jo
lret
dec
xchg
xor
jb
inc
push
in
ss
xchg
sbb
inc
sbb
in
incl
mov
nop
pop
add
or
jecxz
cmp
leave
mov
enter
xor
xchg
not
and
imul
xchg
arpl
or
leave
mov
iret
mov
inc
pop
int3
dec
pop
aas
aam
aaa
xor
push
cmp
movb
dec
in
arpl
xor
xchg
ret
dec
or
mov
dec
sbb
repz
in
cld
out
cmpsl
xchg
nop
push
nop
mov
sub
movl
adc
test
in
xor
in
shlb
xchg
inc
cmpsb
lret
pop
cmp
leave
xor
push
adc
push
filds
outsl
add
adc
orl
mov
pop
test
or
adc
or
mov
dec
test
mov
data16
xor
into
mov
stc
xor
jns
in
or
fcmove
imul
enter
int3
sub
add
int3
jns
fwait
pop
imul
sbb
sbbb
mov
and
cmp
inc
ret
adc
movsb
outsl
fstl
je
push
stos
fcoml
jo
dec
jbe
and
shll
mov
imul
push
cmovs
lret
ja
mov
out
mov
add
std
dec
addl
jmp
rol
push
sub
xor
repnz
shrl
xchg
push
addr16
les
cmp
mov
test
mov
mov
jecxz
imul
lret
cld
cld
es
and
lods
or
sub
jae
push
imul
pop
popa
loop
pop
fcoms
rclb
test
ja
mov
call
push
pushf
push
inc
daa
or
inc
test
xor
xor
int3
lahf
jne
jle
cmp
ss
pusha
mov
push
insb
pop
xor
lret
aad
aas
xlat
fisttps
mov
mov
lods
push
mov
mov
in
and
and
out
or
xlat
lods
jg
ffreep
pushf
or
scas
dec
push
scas
decb
mov
jb
andl
stos
imul
fdivl
xor
insb
xor
into
aad
clc
cmp
repz
sub
test
iret
sbb
test
cmp
std
fnstenv
sbb
push
icebp
sbb
or
xor
nop
or
sbb
outsl
fwait
incb
jl
adc
testb
popa
jecxz
add
sbb
test
lock
insb
xor
ss
mov
mov
or
fisubl
lcall
rolb
jmp
xchg
daa
xor
inc
sbb
mov
sbb
lret
andb
repz
inc
mov
in
xchg
and
lods
clc
cwtl
insb
test
rorb
nop
cld
mov
xor
adc
xchg
cwtl
out
xchg
orl
lret
clc
dec
leave
repz
fcmovu
add
add
and
sahf
jne
mov
into
sbb
pop
xchg
fstl
jne
pop
into
lahf
loop
incl
adc
lret
adc
xchg
mov
adc
push
mov
xchg
jl
out
sub
call
test
push
or
ljmp
push
push
cmc
xor
int
fs
jo
cmp
cltd
push
mov
mov
sbb
jmp
sbb
shl
stc
out
pop
call
notb
cmc
pop
cmpsb
sub
sti
cmp
push
mov
das
mov
lods
in
std
fadd
inc
rcrb
jbe
inc
mov
add
repz
mov
enter
ja
xor
mov
or
incl
insb
jne
pop
das
xchg
fcomps
and
jle
scas
les
jbe
jbe
jns
scas
int3
mov
loopne
insb
inc
sbb
movsl
mov
sahf
clc
out
pop
inc
fxtract
adc
sbb
jbe
je
push
lret
pop
fdivrl
test
ret
pop
test
pop
cmp
in
adc
movsb
sahf
adc
jl
fmuls
ljmp
sub
out
mov
mov
bound
push
incb
add
pop
pop
lret
pop
fucomp
dec
sub
cmpsb
loop
push
push
sahf
popf
clc
movsl
insb
test
shrb
adcl
mov
stc
fwait
pushf
hlt
xchg
imul
aam
aam
mov
daa
dec
fcmovbe
mov
mov
jns
push
and
cwtl
gs
into
jb
jge
xchg
add
scas
or
pushl
cmp
xchg
adc
adc
mov
mov
lcall
jns
mov
daa
iret
mov
pusha
cmp
pop
cmp
push
push
subb
push
in
shrb
dec
rcrb
xlat
mov
scas
xchg
inc
mov
mov
push
sub
and
iret
fwait
aad
cli
addr16
or
subl
mov
movsb
popf
add
sub
iret
add
add
push
fnsave
ret
movsl
add
and
out
push
lods
aad
and
mov
insl
sub
popf
push
stos
adc
rcll
shll
mov
dec
insl
cmp
dec
sub
adc
sub
mov
sarl
add
mov
add
loopne
sahf
lea
shrl
out
and
or
repz
dec
mov
cmp
jne
push
fld
leave
in
xchg
outsl
or
dec
testl
push
test
xchg
mov
fdivl
out
xchg
pop
lock
clc
aad
push
add
inc
addr16
or
les
dec
jo
leave
loop
push
mov
nop
mov
stos
xlat
and
and
shlb
lea
leave
pop
sbb
in
jp
cmp
sbb
or
js
and
lds
mov
mov
dec
mov
push
push
iret
int3
test
cli
and
sbb
loopne
dec
ja
js
cmpsb
and
and
in
iret
xchg
imul
bswap
mov
push
call
rcrl
push
and
cmp
loope
fwait
sahf
sbb
mov
movsl
jnp
pushf
int
mov
cmc
dec
out
aas
mov
or
fs
inc
sub
push
ret
push
mov
jne
push
fdivp
xlat
imul
mov
nop
adc
dec
jmp
pushf
fimuls
mov
icebp
or
loope
fiaddl
push
loopne
dec
mov
xlat
cld
test
jp
jb
jg
add
ss
jno
stos
xor
mov
sbb
mov
pop
aas
sbb
add
mov
sbb
shr
xchg
mov
shll
pop
jmp
push
jne
dec
dec
sbb
xor
mov
dec
mull
test
test
or
sub
lea
jle
subb
add
mov
sub
cvtpi2ps
mov
inc
mov
dec
xchg
mov
cmp
pop
or
jecxz
and
pop
loopne
mov
sbb
ret
das
out
rcr
dec
pop
out
xor
push
mulps
jmp
orb
sbb
shll
fnstsw
sub
sbbb
dec
mov
imul
mov
repnz
fsubrp
cmp
push
push
scas
repz
jle
jle
jecxz
pop
or
cmpb
scas
fisttps
mov
lret
sbbb
sbb
in
shrb
and
mov
mov
and
push
inc
enterw
push
addr16
dec
xchg
mov
sbb
int
out
ficomps
mov
add
push
mov
gs
dec
xchg
xchg
mov
test
loop
stos
push
adc
mov
mov
repz
ljmp
cwtl
movsb
out
nop
jo
mov
rolb
jno
dec
mov
sbb
arpl
scas
xor
adc
divb
mov
rcll
dec
xchg
mov
add
and
cmpsb
in
stc
notl
inc
xlat
cmp
sti
lret
xchg
sub
mov
push
out
adc
push
test
push
sub
mov
pop
mov
loop
test
jge
and
std
inc
div
and
rolb
fcompl
divl
cs
pusha
or
adc
inc
in
push
enter
inc
mov
clc
lods
xchg
rclb
mov
sbb
sbb
adc
jo
xchg
xchg
rolb
fildl
or
repz
scas
stos
scas
sub
pop
mov
pop
bound
dec
inc
orl
roll
aaa
ja
repz
repnz
xor
shl
sub
mov
lock
fists
fcmovnu
add
xchg
fbld
imul
jbe
pop
scas
test
push
jmp
xor
mov
cmp
push
mov
mov
sub
xchg
sti
adc
ret
pop
aaa
popl
xor
imul
scas
lret
pop
addl
jg
xchg
rorl
dec
xchg
add
out
es
push
jo
sub
jbe
add
mov
sbb
adc
arpl
stos
jecxz
mov
or
cmp
jp
fiadds
ret
mov
iret
sub
mov
iret
ljmp
mov
mov
jecxz
loopne
fdivrs
or
ror
fcomp
rclb
test
loope
xchg
mov
lahf
pop
inc
mov
mov
out
mov
lcall
sub
out
jle
rcrb
inc
xor
sub
mov
inc
lea
push
xchg
push
repz
sub
and
aam
dec
add
clc
pop
scas
inc
pop
xchg
sub
fnstsw
subb
jae
mov
and
add
movsb
mulb
popa
xor
or
dec
pop
cmp
ja
in
out
repz
mov
loope
out
call
sub
in
push
push
shr
insb
aad
inc
bound
mov
mov
xor
pop
ret
lock
das
cmp
xchg
pop
bound
ret
jnp
out
mov
xor
loope
adc
andl
cmp
hlt
scas
insl
mov
xlat
iret
lret
push
mov
or
lea
adc
aaa
adc
test
jecxz
test
jp
das
pop
lret
mov
jg
js
jnp
jle
mov
shll
mov
orb
xor
xchg
test
mov
js
push
fcoml
jbe
pop
insl
stc
cld
mov
cs
test
add
lretw
ljmp
daa
adc
and
inc
ret
fsubl
mov
dec
mov
lods
les
cmp
sub
jg
xchg
mov
shr
push
add
fdivrs
xor
mov
dec
mov
lret
jae
push
arpl
fs
je
scas
adc
inc
arpl
les
xchg
orps
sbb
lods
cmc
insb
gs
mov
out
cmpsl
mov
out
fadds
fwait
mov
dec
push
fistl
jnp
xchg
push
pop
jns
mov
pushf
cmp
ficoms
dec
loopne
insl
inc
das
mov
sub
mov
out
cmp
adc
decb
xor
enter
pop
dec
or
pop
inc
andl
test
sahf
xchg
dec
mov
sbb
int3
mov
mov
jnp
loopne
xchg
jge
mov
pop
jb
xor
lcall
std
inc
push
cld
enter
std
add
loope
scas
ret
jns
pop
mov
push
mov
add
push
mov
insl
sbbb
sub
add
es
scas
popf
adc
and
push
lret
fcomps
outsl
add
mulb
pushf
in
lds
lret
gs
pop
cwtl
outsl
mov
orl
out
mov
cmp
xor
loop
jb
mov
push
daa
and
jno
mov
xor
sub
sub
pushf
rclb
pop
lss
js
repnz
push
inc
xor
mov
mov
notl
test
jmp
test
lahf
dec
sub
pusha
mov
push
inc
push
pop
xor
jae
test
mov
sbb
or
jg
jae
xorb
imul
jb
filds
hlt
loop
aaa
out
leave
adc
xor
pop
push
sbb
mov
out
add
loopne
lea
in
in
mov
mov
sbb
sbb
xchg
outsb
or
push
xchg
xchg
fstpl
std
leave
lock
ds
fcoml
lds
sbb
cltd
inc
jl
jecxz
adc
dec
sbb
or
mov
sbb
sbb
push
jb
mov
mov
fucom
stos
mov
mov
sarl
fstl
fbstp
aam
popa
pop
lahf
test
mov
xchg
lret
ret
inc
sbb
arpl
mov
push
add
mov
stos
add
xor
pop
out
add
sbb
popa
cltd
adc
xor
pop
mov
pop
push
xorl
fs
and
push
push
xor
adc
popf
cmp
pop
xchg
mov
dec
lahf
add
outsb
loope
xchg
mov
inc
mov
out
in
sbb
mov
iret
je
into
mulb
xor
int
shll
stos
xor
in
addb
flds
adc
sbb
mov
insl
daa
mov
sub
decl
mov
imul
test
lds
dec
je
sbb
loop
xor
loop
xor
pop
sub
scas
mov
fwait
ret
pusha
push
pop
xchg
jmp
push
mov
push
jne
mov
enter
sbb
mov
xchg
scas
fsubrp
jp
or
scas
arpl
xlat
out
cmp
mov
test
rolb
push
test
dec
push
hlt
mov
mov
adc
mov
icebp
subb
fmull
or
push
add
cmp
push
out
sub
in
sahf
jmp
adc
and
pop
mov
fcoml
movsb
popf
inc
mov
hlt
jecxz
add
sbb
mov
or
pop
lds
jg
divl
dec
add
movsl
pop
push
out
cmp
orb
int
mov
jnp
mov
sub
or
iret
sar
inc
fistps
mov
mov
inc
sub
mov
int3
imul
cwtl
add
jb
out
push
sbb
inc
xchg
movsl
ss
es
jns
sbb
das
mov
xor
mov
iret
xchg
jecxz
push
sbb
or
aam
adc
mov
es
push
or
inc
gs
or
ljmp
nop
ss
mov
xlat
pminsw
jg
adc
push
cltd
mov
xchg
and
mov
mov
push
ficoml
push
ret
jge
xorb
mov
ret
inc
and
and
jp
out
imul
mov
xlat
out
jne
push
int
pop
int3
fidivs
cmp
mov
jne
xor
mov
sub
adc
insl
rclb
dec
jg
mov
or
in
jae
jne
add
pop
leave
clc
xchg
push
or
xorl
xor
mov
and
jnp
sub
hlt
mov
sub
push
sarl
push
mov
call
pop
xor
or
in
stos
idivb
cwtl
insb
xor
leave
pusha
es
mov
ret
xchg
inc
test
nop
inc
jae
popa
mov
lea
mov
inc
mov
bound
mov
insb
xchg
push
lea
sahf
jnp
jnp
jmp
out
out
jb
in
sti
mov
xchg
dec
cwtl
enter
test
out
or
sbb
ror
inc
movsb
push
push
ret
outsl
aam
test
repnz
mov
or
dec
mov
inc
addr16
scas
sbbb
xchg
mov
or
sub
push
popa
mov
pushf
xchg
jbe
aaa
popa
mov
dec
mov
mov
shlb
sbbl
and
and
flds
mov
std
repnz
std
sarl
hlt
cmp
adc
cmp
popa
int3
outsl
add
jne
pushl
mov
cltd
je,pn
add
xor
into
lds
dec
xor
das
mov
jb
icebp
mov
mov
mov
mov
outsl
jecxz
mov
outsl
cmp
add
and
andb
add
mov
test
stc
imul
inc
or
pushf
xchg
sahf
mov
pop
mov
inc
cs
cmpsb
sbb
sub
and
js
sbb
add
shll
mov
sub
xchg
enter
sbb
ret
lea
rorb
mov
mov
mov
sahf
push
and
fisttpl
adc
mov
addr16
inc
sti
test
test
cmovo
in
lcall
test
in
push
loopne
pushf
inc
mov
xor
and
test
out
fs
sbb
ja
ror
movsb
jne
mov
jb
sub
lods
push
lods
aas
insl
mov
sbb
cmc
movlps
sti
jmp
int
xor
dec
scas
dec
xor
cmp
shr
inc
lea
cmpsl
adc
inc
mov
adc
rcrb
cwtl
cmp
ss
sarb
or
adc
sbb
adc
movsl
or
adc
jle
and
test
mov
sub
push
fistps
cmp
stos
test
and
lods
sarb
leave
jns
pop
push
pop
divl
xor
jbe
dec
loop
jae
imul
addr16
jl
out
mov
insl
mov
addr16
enter
xor
sbb
scas
leave
popa
xchg
or
push
in
lds
dec
repnz
xor
lret
xor
sbb
and
movsw
or
scas
aad
xchg
cmp
mov
loop
mov
cmp
ret
mov
loope
inc
fmull
mov
outsb
jg
dec
xor
sahf
xchg
jge
in
or
nop
test
fcmovnb
sbb
dec
xorb
add
sbb
mov
das
fadds
mov
adc
lds
or
aaa
test
mov
push
cmp
nop
and
mov
dec
cmpsb
rcr
dec
jbe
movsl
jle
inc
xlat
testl
push
pop
icebp
popa
pop
mov
or
push
push
and
fbstp
jmp
jne
jbe
and
mov
movsl
fnstenv
shlb
addl
cmp
sbb
inc
or
aaa
int
outsb
cmp
rcll
pop
pop
jg
cld
inc
inc
cmp
add
push
push
insl
jo
test
adc
imul
cmpb
mov
lds
xlat
jge
jne
idivb
jecxz
inc
aaa
dec
xor
nop
inc
dec
and
or
pop
jg
mov
inc
enter
mov
test
mov
sarl
inc
push
mov
cmp
xchg
insb
jle
test
lds
imul
orl
add
stos
test
and
jecxz
mov
mov
pushf
cmp
xchg
out
add
les
jne
mov
sub
push
std
jo
mov
xor
sbb
adc
bound
imul
or
or
adc
xchg
xorb
mov
aad
dec
pushf
ret
imul
shr
in
scas
ficomps
pop
pop
test
outsb
clc
xchg
out
pop
and
in
test
fadds
loop
push
xor
jle
add
xchg
xor
xchg
fstpl
sbb
sbb
mov
push
push
mov
arpl
xchg
jb
or
lods
add
push
inc
pop
subl
jno
xchg
das
mov
add
cmc
mov
stos
lcall
insb
mov
inc
test
pmaddwd
divl
rcll
test
pop
ret
or
pop
ror
movsl
dec
push
call
mov
pop
jbe
push
in
mov
sti
or
xchg
cld
lea
mov
pushf
in
fisubl
cmp
pop
dec
arpl
push
frstor
mov
fs
nop
pop
hlt
test
jns
int3
mov
xorb
adc
sbb
gs
lea
cmc
xchg
xor
call
xlat
jns
xchg
aas
mov
push
sbb
mov
push
push
and
jp
mov
mov
jle
mov
jno
pop
cltd
fwait
mov
stc
or
bound
aam
cmp
adc
push
es
add
test
mov
push
adc
sub
outsl
cmpsl
addr16
js
mov
aad
pushf
mov
std
push
or
or
cmpsl
inc
outsl
out
into
push
push
addl
sub
jno
lea
lahf
pusha
loop
xor
jge
and
push
fstpl
sub
xchg
test
jns
push
int
bound
dec
call
in
mov
movl
pop
lods
sub
pop
and
test
mov
imul
sbb
mov
xor
sbb
adc
pop
xchg
xor
add
push
pushf
push
xchg
cmp
push
cmpsb
push
push
fs
push
divb
inc
lds
push
imul
out
shlb
pop
daa
jmp
cmp
mov
aam
scas
dec
mov
imul
ljmp
cld
ret
ss
mov
test
dec
pop
dec
outsb
xchg
imul
daa
lcall
stc
cmp
fbld
add
iret
adc
imul
in
shlb
cmp
cmp
leave
mov
or
jnp
sarb
pop
jmp
sarl
filds
push
mov
mov
int
xchg
cmp
sub
cmc
int3
or
fldl
mov
mov
inc
sti
sbb
in
xchg
push
xor
sub
pop
les
lods
pop
fmuls
mov
add
or
sbb
xor
mov
inc
lret
mov
push
and
cmpsb
pop
test
and
insb
imul
mov
popa
fst
inc
xchg
std
movsl
pop
push
enter
jne
pop
mov
in
or
idiv
mov
jae
ret
dec
dec
aam
pushl
stc
adc
rcrb
fcompl
ret
cmpsl
stc
shll
xchg
loop
out
push
or
aam
jno
and
jmp
jns
nop
subb
das
loop
sbb
fisubrl
cmp
movsl
mov
lcall
js
notb
push
mov
and
out
stos
ret
mov
jnp
add
cli
rcrb
mov
sbb
mov
cmp
int
mov
ss
mov
add
ffreep
jg
insb
mov
push
test
lcall
jle
testb
pop
jl
adc
lods
outsl
sub
in
stos
mov
sub
jle
aad
movsb
jl
lret
mov
mov
lahf
cmp
inc
jmp
mov
loop
dec
fldcw
fwait
jae
mov
mov
adc
pop
adc
lods
ret
xchg
lret
int3
iret
push
push
push
gs
fucomp
pop
push
inc
stc
sbbl
jae
insl
inc
jae
add
or
dec
xchg
mov
jle
lds
pop
fadd
movsl
enter
xchg
ljmp
clc
test
jno
icebp
cli
das
mov
in
sbb
leave
idivl
mov
jb
push
xor
and
arpl
repz
push
mov
dec
rcr
add
ds
cmp
adc
cwtl
mov
mov
mov
scas
jg
xor
xchg
xorb
cmc
mov
mov
sub
pop
int
sub
clc
movsb
rclb
loopne
cwtl
dec
push
cmp
test
loope
pop
comiss
xor
and
popa
ret
pop
mov
out
int
aad
leave
ljmp
cmpsb
dec
jns
imul
pop
pop
push
cmp
imul
xor
or
pop
adc
test
cmp
dec
sbb
mov
pop
popa
je
icebp
je
popa
pop
out
pushf
add
xor
jbe
lcall
sbb
fsts
mov
xor
sbb
cmpsb
xchg
mov
shlb
pop
mov
jecxz
int3
loop
mov
gs
stc
pop
sub
add
out
inc
mov
sbbl
pop
lret
push
std
addr16
enter
inc
push
dec
shlb
mov
jno
cmp
mov
jmp
push
gs
push
in
jo
orb
pop
adc
cld
jl
dec
or
or
push
dec
scas
xchg
cmp
std
jmp
xchg
rorb
jecxz
nop
into
ds
out
insb
mov
cmc
imul
add
add
cmpsb
ss
icebp
xlat
push
out
ret
jnp
mov
jl
and
push
daa
lds
push
inc
adc
cmpsb
mov
repnz
lock
adcl
xor
clc
je
push
mov
adc
mul
rcl
cmp
fwait
sub
pop
xor
ret
mov
adc
mov
shrl
dec
sbb
enter
ret
shlb
fs
xor
out
xor
dec
fs
fbld
add
or
pop
adc
test
out
fcoml
jmp
dec
cmc
imul
sti
cmp
sub
xor
jmp
out
pop
test
movsb
pop
popf
lret
int3
jne
xchg
mov
loope
mov
aad
out
and
fsts
sub
push
cld
ud2
enter
aas
sar
lea
cwtl
rolb
cmc
arpl
mov
fwait
aas
sub
sete
ret
sti
pop
jmp
pop
xchg
std
addr16
mov
cmp
movsb
jge
inc
adc
insl
inc
adc
jl
and
mov
insb
jecxz
das
dec
loop
sbb
daa
and
aaa
mov
jo
mov
adc
dec
xchg
stos
cwtl
ljmp
out
cwtl
and
cltd
out
sub
into
sub
add
scas
dec
add
ficomps
stos
lahf
cmp
jl
push
jns
icebp
inc
mov
out
sub
rcl
fs
ret
fisttpl
add
dec
push
mov
push
int
or
or
pushw
int
cmpsb
push
repz
pop
test
mov
adcb
mov
das
inc
jnp
cmpsb
out
cmpsl
pop
or
sahf
out
mov
mov
pop
mov
test
sub
dec
adc
inc
mov
cmp
lahf
pop
loopne
aam
dec
or
pmullw
pop
fisubs
int
jcxz
int
push
stos
leave
and
cmp
xlat
lods
iret
xor
mov
inc
sbb
push
sub
push
hlt
or
jno
pop
mov
lcall
icebp
pop
daa
cmc
outsl
jne
xor
repz
add
loope
fstpt
in
mov
cmp
xlat
fisubrs
lahf
pop
inc
int3
jne
cmp
xor
repz
jg
es
push
scas
xor
ret
push
adc
mov
inc
and
sbb
push
testl
sub
cltd
rorl
add
and
out
jecxz
fs
icebp
test
in
movsl
push
sbb
pop
or
shrl
outsb
mov
aas
pop
dec
inc
ret
shlb
jmp
push
loopne
ror
cmp
cmp
mov
add
push
aas
cmp
xchg
or
xor
xchg
cmpsl
mov
add
xor
pop
dec
mov
and
add
loopne
dec
nop
pop
imull
sahf
mov
out
iret
ret
in
mov
xchg
adc
arpl
mov
mov
push
jecxz
mov
pop
int
dec
outsl
and
push
push
mov
pop
adc
add
scas
orb
fildl
adc
jp
lahf
sbb
jnp
dec
dec
ret
sub
xchg
jecxz
je
push
mov
and
and
ss
jecxz
cld
xchg
je
sahf
inc
inc
ds
dec
jno
pushf
orb
insl
fadds
cmp
rol
mov
lods
pop
repnz
scas
jle
mov
es
jecxz
cmpsb
dec
mov
lret
xchg
pop
movsb
sbb
jnp
test
hlt
push
movsb
inc
mov
pop
xchg
fs
pop
test
rclb
add
pop
popf
test
cwtl
loope
mov
pushf
mov
nop
lea
add
dec
lcall
iret
gs
lds
or
scas
cmpb
std
add
add
add
popf
cmp
ljmp
inc
jb
add
bound
xor
jle
lret
mov
lock
cltd
test
jo
in
cmp
hlt
lds
movsb
push
cmpsl
fwait
pop
outsb
ret
jecxz
cmp
test
pop
cmc
out
mov
mov
sbb
xchg
lcall
out
push
shll
dec
stc
rolb
mov
add
in
leave
adc
push
lods
loopne
ffreep
jae
xchg
out
clc
jle
ret
dec
test
filds
test
xchg
cwtl
fdivs
hlt
lret
add
lea
cmp
sbb
mov
mov
rcl
cltd
dec
lret
and
mov
adc
std
sub
push
loopne
loop
mov
cli
outsb
outsl
push
inc
lea
sbb
scas
lds
mov
xchg
mov
mov
enter
jbe
cmp
jl
aas
xchg
push
sahf
jl
push
mov
ret
fiaddl
sarb
repnz
popf
inc
push
cld
xor
xor
clc
jmp
push
mov
pop
je
fs
xchg
jo
shlb
cmp
cmp
popa
mov
loop
out
out
pop
dec
push
mov
push
pop
outsl
popf
sub
icebp
ds
out
mov
psrad
cmp
int
imul
push
cmpsl
incb
sti
jbe
mov
mov
xchg
out
iret
ljmp
daa
std
mov
inc
movsl
pusha
cvtps2pd
push
lret
cmpsb
inc
pop
pop
std
adc
stos
push
push
lea
push
and
jl
push
fstpl
mov
int3
adc
dec
in
movsb
sbb
inc
jmp
xchg
push
sahf
inc
jns
aaa
insl
sub
mov
mov
add
add
stos
ret
pop
xor
ret
xor
into
xchg
sti
push
mov
and
shl
jge
add
cmp
repnz
mov
pop
sbb
lock
mov
add
dec
mov
adc
xor
ljmp
push
xchg
stc
push
fcoml
cmc
imul
inc
xlat
or
into
sbb
dec
out
and
mov
repnz
arpl
int3
and
andl
mulb
xchg
loopne
jne
ficompl
push
jge
fiaddl
or
xor
andl
movsl
shrl
out
int3
or
xor
cld
insb
pushl
push
mov
or
mov
push
nop
cli
les
jp
push
mov
mov
inc
push
sahf
cmpsl
push
cmp
je
inc
or
mov
xchg
xlat
jnp
inc
inc
pop
push
inc
gs
xor
jae
test
ljmp
ret
les
hlt
sbb
cmp
sbb
xchg
jno
hlt
stos
es
mov
dec
add
loop
mov
rcr
icebp
adc
adc
add
daa
jbe
clc
pusha
lods
int3
pushf
icebp
or
lods
inc
cmp
shll
rcrl
sbb
or
mov
jmp
inc
xor
aam
iret
notl
xchg
xor
int
rorl
mov
inc
push
dec
add
mov
xchg
int3
or
xor
rcrl
in
mov
cmp
hlt
jbe
imul
jmp
repz
popf
cwtl
test
data16
roll
adc
loop
iret
std
fwait
popa
or
pop
and
aas
lahf
xor
dec
movb
xor
push
cmc
es
test
jmp
lret
cld
jb
test
popf
into
cmp
loopne
jp
test
adc
orb
and
or
stc
fwait
pop
jmp
sbb
jnp
outsl
dec
decb
les
lods
imul
aaa
fldenv
insl
xchg
dec
inc
leave
roll
jb
roll
dec
jb
inc
mov
into
push
jl
cmp
fcmove
or
push
lea
lock
adc
iret
adc
out
clc
jbe
mov
xor
pop
cs
push
mov
inc
adc
xchg
jnp
xor
loop
mov
xchg
bound
roll
cmpsb
test
xchg
stc
imul
mov
jmp
lret
mull
and
les
jl
inc
sub
out
fsubp
imul
xor
sub
push
movsl
into
int
xor
dec
es
lods
mov
clc
mov
aaa
out
or
das
test
cmpsl
pop
jg
mov
out
aaa
or
mov
mov
insl
adc
pop
in
pop
sti
loopne
outsl
test
dec
xchg
lods
lret
inc
ret
sub
mov
cmp
data16
nop
leave
cmp
mov
dec
push
dec
je
sub
rclb
fistpll
xor
push
sbb
push
imul
ret
arpl
clc
repz
mov
adc
cltd
mov
in
popa
push
pushl
mov
inc
inc
test
cmc
jl
lds
arpl
or
and
push
call
jae
mov
pop
mov
mov
in
stos
pushf
dec
xor
je
sbb
sub
addr16
je
shrb
stos
jl
and
xchg
dec
mov
mov
xor
cmpsl
push
jo
push
pop
mov
push
mov
mov
pop
jns
add
shll
add
mov
jl
pop
fbld
mov
push
cmp
mov
inc
imull
adc
mov
sbb
nop
cmpsb
push
xor
fisubl
mov
clc
ljmp
cmpsl
sbb
adc
push
mov
xor
rcrl
mov
data16
cmpsb
js
gs
mov
push
arpl
cltd
inc
mov
dec
std
out
push
scas
pop
stos
hlt
hlt
push
lds
mov
pop
nop
cmpsl
inc
mov
pop
sbb
jo
adc
sub
push
mov
insb
pop
mov
jge
out
mov
std
popa
daa
movsb
push
lret
in
notl
bound
inc
leave
fdivrl
sti
jg
and
into
pop
loop
add
and
push
adc
fiaddl
ljmp
pop
pop
scas
mov
icebp
jle
loop
in
inc
rcr
pushl
loop
mov
push
jae
jne
aaa
push
adc
mov
jle
mov
cmp
shl
out
bound
inc
stc
test
or
adc
ds
jbe
pop
rcrb
adc
int3
hlt
cmp
jo
cmp
jns
in
pop
or
sbbl
pop
repnz
adc
xchg
outsb
push
mov
mov
cmp
loopne
imul
mov
aam
pop
call
add
mov
popf
cmpsl
cmp
push
or
das
pop
sub
add
xor
inc
fcmovu
cld
addr16
pop
xchg
aad
and
gs
in
imul
loope
and
jbe
sar
clc
insb
lcall
and
adc
adc
dec
pop
and
mov
add
fsubs
push
pop
mov
mov
dec
loope
jp
or
les
ja
xchg
cmp
mov
push
sbb
pushf
mov
push
ss
adc
add
adc
loope
rcr
sub
lret
push
push
add
add
jecxz
mov
mov
aam
jle
mov
fmulp
mov
inc
sahf
ja
ret
cs
inc
xchg
xchg
push
adc
or
jge
jnp
jns
inc
cltd
test
push
and
and
push
sarb
insb
cmpsl
int
xchg
fidivs
xchg
sbb
mov
cmpsb
adc
jbe
jb
adc
shlb
push
and
addr16
cmp
add
inc
xchg
sti
push
cli
arpl
lret
or
mov
add
inc
jl
cmpsb
sarl
and
push
mov
loope
xlat
sub
xor
push
das
lds
mov
std
call
inc
mov
neg
in
jno
es
out
aaa
pop
sub
divb
call
imul
ja
xor
push
xlat
push
inc
scas
fwait
test
rclb
mov
scas
jb
jp
xchg
mov
and
xlat
fnsave
loope
scas
mov
lret
cli
or
aaa
aas
es
int3
mov
loop
push
test
mov
cwtl
adc
into
aas
and
bound
movsl
sti
mov
mov
xor
mov
push
ret
arpl
lret
testl
xchg
mov
shlb
jl
shl
mov
xchg
into
xor
mov
fs
rcr
clc
lahf
inc
leave
dec
sarl
sbb
adc
bound
push
out
ss
jmp
push
fdivl
in
outsb
mov
loop
and
pop
iret
sub
sahf
mov
adc
lret
push
mov
push
adc
sbb
loope
add
sub
mov
xchg
or
push
adc
xchg
es
or
loopne
loopne
leave
popf
mov
inc
scas
sub
xchg
xchg
jbe
cwtl
into
shll
add
fwait
ja
enter
sbb
mov
loope
fnstsw
fsubs
fs
loop
stos
mov
mov
pusha
pushf
pop
stos
int
mov
inc
pusha
jae
cmp
or
mov
inc
lods
xor
int
mov
xor
enter
push
xlat
sub
shl
fisttps
xor
mov
mov
fnstenv
or
jb
fwait
push
fcmovu
insl
testl
mov
dec
add
in
mov
icebp
sub
hlt
pop
outsl
cwtl
sub
aaa
jo
or
daa
mov
cmp
sbb
mov
iret
jno
mov
movd
pop
fimuls
cmp
out
jle
adc
rcll
mov
inc
lods
int3
fsubrs
movsl
push
ja
lds
xchg
push
mov
adc
es
or
mov
add
jp
lcall
mov
cli
mov
sbb
fcompl
fisubrl
mov
jg
dec
out
in
ljmp
out
into
les
push
loopne
or
add
icebp
addl
mov
or
xchg
mov
test
test
stos
sub
adc
mov
das
cmpb
js
inc
push
out
push
lcall
mov
push
nop
xor
adc
jg
cmpl
sbb
mov
pop
mov
das
leave
inc
andb
xchg
ret
das
xchg
and
inc
mov
dec
cmp
out
mov
sar
mov
js
mov
hlt
xchg
push
jne
mov
dec
imul
mov
xchg
mov
pop
arpl
hlt
roll
aas
xor
sbb
or
push
outsl
das
mov
aam
jne
je
lahf
or
jbe
xorps
ja
and
cmc
js
int
add
inc
push
mov
test
cmpsb
nop
push
pushf
imul
sub
je
xor
mov
das
jb
int3
sti
or
fwait
pcmpgtw
inc
inc
sbb
jecxz
and
mov
add
sbb
sbb
or
movsl
xchg
adc
test
mov
push
mov
mov
sbb
data16
jbe
jnp
mov
add
dec
imul
inc
ss
sub
add
pop
daa
fs
inc
jg
ret
and
jmp
pop
mov
pop
loop
and
cmpsl
inc
in
xchg
data16
push
cmp
cs
adc
cli
out
fstpt
loopne
add
mov
xor
aaa
cmp
cmc
dec
jno
add
cli
aam
cld
sbb
outsl
jecxz
insl
jle
mov
insl
jns
inc
jo
int
sbb
mov
push
and
mov
push
xchg
cmpsb
lds
cld
push
daa
pushf
and
and
push
add
cmp
pop
cwtl
ja
dec
aas
jno
repz
mov
mov
lahf
insl
dec
push
pop
adc
mov
insl
popa
cli
int3
loopne
movsb
fs
mov
call
fdivs
add
mov
dec
mov
aas
and
cmp
loop
mov
mov
out
fisttps
push
pop
mov
sbb
das
pop
mov
das
sahf
loope
and
mov
push
testb
aaa
jbe
jmp
rcrl
outsb
fs
pop
mov
sub
lods
adc
lret
jo
jbe
iret
cmpsl
fbstp
ja
fstpl
xor
sub
orl
test
sub
cmp
js
sub
push
jne
add
les
mov
inc
pop
outsb
jbe
aas
xor
dec
jp
xchg
jo
inc
ds
jmp
jb
xchg
popf
mov
or
add
rorb
mov
xchg
ror
jecxz
cltd
push
xchg
pop
push
mov
inc
xchg
loope
xchg
jmp
jae
jae
pop
fsubl
in
dec
pushf
mov
test
lret
sti
cwtl
ds
imul
negl
xor
and
scas
xor
sub
or
add
adc
mov
inc
adc
and
dec
stos
mulb
mov
add
and
push
sub
xchg
sahf
push
cmc
dec
mov
call
imul
mov
mov
loop
adcl
jne
inc
pop
cli
hlt
and
xchg
lds
xlat
dec
pushf
mov
sub
sbb
roll
xchg
sub
or
pop
add
dec
xor
addr16
pusha
fcoms
xchg
pop
mov
inc
cmp
or
hlt
dec
ja
shrl
push
lds
push
push
sbb
adc
sub
mov
fadds
out
add
insl
add
jbe
mov
mov
fwait
and
ds
lods
mov
sbb
mov
addr16
pop
mov
pop
and
jne
push
lahf
iret
dec
add
push
aam
addr16
xor
cmpsl
imul
sbbb
mov
loop
xchg
and
adc
or
push
jne
or
and
out
mov
cmp
sahf
push
mov
lcall
in
mov
push
pop
orl
and
xchg
xorl
push
xchg
dec
jg
ljmp
push
cmp
aaa
bound
ficompl
xor
cmp
push
lret
and
or
push
and
pop
imul
aad
xchg
sbb
and
ret
push
and
cmp
loope
push
mov
imul
xlat
test
clc
xlat
or
xchg
adc
xlat
in
cwtl
sub
sbb
arpl
jge
cwtl
stos
repz
and
scas
loope
call
mov
into
ds
push
out
mov
pop
pop
sub
inc
mov
cld
aad
ficoms
lret
insl
push
sarl
popf
add
movsb
movsl
aaa
pop
insl
dec
cmpsl
cli
inc
repnz
or
xchg
aam
jmp
pushf
mov
add
jl
call
ja
fildll
arpl
inc
stos
pop
dec
xchg
mov
in
xchg
fiaddl
mov
xchg
lea
call
add
sbb
outsl
outsb
int
mov
loopne,pt
shrl
arpl
call
jae,pt
insl
cmpsl
popa
fidivrs
xor
adc
jl
add
aad
jnp
sub
mov
shlb
xchg
mov
ss
sti
xor
in
jg
cmp
gs
push
out
in
pop
paddq
push
xor
lock
mov
hlt
aam
daa
aas
mov
out
mov
mov
fldcw
sbb
xor
stos
jl
inc
lods
out
repnz
pushf
test
stos
xchg
les
dec
push
xor
rcrb
jno
imul
push
mov
push
mov
jge
or
gs
cmpsb
addr16
mov
icebp
or
jmp
xchg
add
push
mov
xchg
sub
popa
mov
push
in
jae
lea
lds
addr16
aaa
addr16
ja
fwait
fwait
repz
iret
out
add
cltd
push
outsb
stc
jb
jmp
xchg
addr16
jb
mov
in
xchg
mov
lds
inc
dec
mov
aad
repnz
in
push
addr16
pop
xor
push
enter
and
jecxz
fcoms
int3
cmpsl
vcvtpd2dq
dec
and
outsl
cmp
and
jge
pop
mov
and
enter
test
es
mov
mov
sbb
and
push
dec
mov
getsec
cmpsb
and
fldt
negb
imul
test
das
daa
icebp
cmp
out
out
mov
lock
daa
mov
jo
pop
mov
push
xchg
cld
sbb
cli
xchg
mov
rorb
xor
sbb
cmovo
push
mov
add
insb
adc
push
lods
arpl
jecxz
mov
jno
mov
in
jp
fdivl
jae
mov
stos
inc
decl
dec
sahf
sub
aas
cltd
loopne
push
ret
mov
shll
mov
jns
jo
adc
cmc
sti
fiaddl
cmp
cmp
hlt
pop
cmp
test
sub
cwtl
push
push
test
xor
add
xchg
mov
enter
ljmp
push
sar
mov
push
sub
fdivr
leave
out
lret
imul
mov
fnstcw
inc
sbb
insl
xor
sbb
cmp
cmp
mov
mov
cwtl
xor
fsubr
cmp
lret
imul
or
popa
push
hlt
es
aas
loopne
pop
jmp
in
in
je
mov
imul
cli
mull
add
push
fidivrs
cmp
sub
jl
fdivrs
sub
and
out
and
out
xor
inc
lret
push
jl
xchg
icebp
loop
push
stc
aaa
and
out
cmp
sti
jae
js
fwait
popf
shr
inc
mov
and
repnz
mov
pop
inc
dec
or
aas
ss
push
jp
insb
mov
add
mov
xchg
mov
mov
in
and
adc
mov
fldenv
ljmp
xchg
fisttps
pop
scas
mov
mov
subw
movsb
ficompl
loop
scas
push
sub
jo
sub
xchg
int
adc
and
push
push
stc
mov
dec
fwait
xchg
and
lea
loope
jne
fs
enter
fwait
cmp
add
jno
xor
pop
sbb
pop
push
sbb
sub
mov
jge
test
adc
ret
dec
push
je
outsb
int3
lea
dec
and
mov
outsb
pop
mov
push
xchg
xchg
jle
dec
dec
js
push
call
ret
xor
push
push
sar
cmp
push
dec
pop
bound
add
sarl
mov
pand
cmpsl
icebp
and
inc
fidivl
loop
sbb
jmp
or
insl
call
mov
xchg
mov
push
iret
add
cmp
sbb
mov
divl
add
rolb
ss
cld
pop
push
sub
leave
pop
mov
les
sub
mov
sub
or
rorl
in
cmp
in
test
push
loopne
pop
xchg
mov
mov
inc
in
insl
push
sti
aam
inc
sbb
mov
fstl
sub
pop
test
cmp
int3
mov
cmp
push
lea
insb
pop
mov
shrb
repz
call
inc
int
cs
xchg
inc
xchg
sub
movl
in
pop
sbb
aad
jg
into
sbb
adc
mov
sahf
fisubrs
aas
int
inc
vfrczsd
mov
fwait
stos
dec
mov
lods
push
pop
jne
nop
sub
adc
sbb
sub
shlb
cli
scas
pop
test
sbb
cmp
sbb
cli
pop
cli
cmpb
loopne
jle
fs
adc
sarl
mov
adc
fdivrl
xorb
or
sbb
pop
lods
fbstp
lds
sub
insb
or
sbb
popf
imulb
cmp
push
mov
test
mov
call
mov
push
pusha
aas
aas
sub
dec
mov
mov
mov
cltd
and
push
mov
xchg
jo
lcall
imul
pop
or
lcall
add
pop
mov
dec
xor
cmp
mov
mov
adc
shlb
mov
pushf
aad
pop
or
push
xor
stos
push
jp
mov
push
jb
pusha
pop
push
push
sub
push
outsb
into
stos
sub
bound
xchg
cmc
pop
cmpsl
pop
sbb
pop
sahf
pmaxub
add
out
xor
js
or
cmp
mov
cmp
stc
pop
mov
imul
rorl
mov
outsb
fisubl
bound
cs
xchg
cli
xchg
inc
fwait
leave
adc
rorl
cld
jno
pop
jne
ret
pop
or
push
movsl
pop
or
insb
push
arpl
pmulhw
mov
adc
xchg
sbb
inc
loopne
int3
adc
adc
xlat
and
ljmp
fmul
bound
sbb
mov
test
xor
add
dec
fwait
outsb
aas
inc
lods
lods
int3
dec
adc
cmp
push
pop
stc
cmp
sbb
jmp
push
js
or
xor
mov
cmp
dec
or
cmpsl
rclb
loope
mov
out
add
sbb
outsb
inc
ret
xorb
jb
das
dec
gs
mov
shlb
mov
and
mov
xor
jo
mov
jge
pop
sbb
movsl
adc
jbe
sub
scas
sub
and
or
add
push
lret
test
mov
xchg
mov
jae
xor
xchg
lds
xchg
add
int3
cmp
inc
mov
call
xlat
dec
xchg
enter
jnp
dec
add
out
pop
inc
outsl
and
cmp
pop
mov
push
fdivl
dec
test
xchg
repz
xchg
jl
stos
jae
in
inc
add
nop
xor
pop
jno
gs
inc
das
push
lret
mov
inc
xor
in
pop
sbb
pop
out
sub
push
dec
mov
stos
mov
aas
and
mov
outsl
mov
out
mov
fmull
ds
rorb
loope
jp
push
repz
shlb
dec
insb
ret
push
das
and
mov
pop
fldl
repz
outsl
mov
jne
xlat
rcrl
pop
sbb
sarb
mov
xor
scas
push
inc
int
insb
iret
shll
jnp
mov
leave
call
and
js
repnz
jbe
inc
orb
add
in
cmp
stos
test
leave
add
popa
push
mov
xchg
jae
sbb
jmp
ljmp
pop
dec
loop
inc
dec
sbb
inc
xor
in
mov
push
cmp
pop
lods
in
push
rclb
mov
daa
push
stos
adcb
xchg
in
ret
dec
jno
ds
mov
sbb
ror
or
shr
pop
xlat
fwait
push
and
fcoml
popa
jge
lcall
push
jne
sbb
push
out
lret
jns
mov
imul
xor
cli
cmp
xor
andb
rcrb
inc
inc
in
clc
jg
mov
jmp
popa
out
mov
jge
sub
rol
inc
mov
subb
inc
arpl
int3
mov
pop
fwait
and
das
in
pop
jl
mov
inc
filds
scas
push
hlt
sar
addb
pop
insb
push
aad
arpl
int
iret
cmp
lods
arpl
lds
jmp
sub
aas
sahf
adcl
movsb
pop
in
aam
sub
sub
test
loop
sbb
gs
xor
mov
nop
add
xchg
xor
mov
ficoml
mov
sahf
jl
sub
add
pushf
cmp
leave
xchg
jno
xor
xor
mov
in
and
aaa
add
shl
xchg
cmp
dec
xchg
mov
dec
mov
movsl
leave
jns
push
jecxz
xlat
mov
add
stos
imul
jecxz
leave
test
insb
jae
iret
repz
outsl
lds
test
shll
loope
xchg
mov
add
fdivs
dec
mov
test
cmp
ds
cwtl
in
loopne
dec
dec
lahf
into
xor
loop
insl
dec
cmpsl
fs
popf
ret
sub
shr
fsubl
xchg
add
mov
sarb
mov
mov
sbb
mov
nop
mov
sahf
mov
fs
xor
inc
in
and
rorb
jg
pop
pop
clc
insl
mov
int
sbb
or
es
and
cld
out
dec
cld
arpl
add
mov
inc
cmp
push
pop
scas
sub
in
inc
idivl
subl
xlat
mulb
int
loope
xchg
push
cmp
dec
push
test
jmp
sti
xor
movsl
cmove
mov
ret
dec
mov
inc
mov
xchg
scas
leave
data16
adc
adc
jp
pop
das
pop
cmp
xor
mov
xor
mov
das
outsb
cmp
mov
and
pop
mov
jns
insb
andl
int
rcl
addr16
loopne
mov
xor
stos
scas
lods
xchg
dec
jo
sub
adc
aas
ret
xor
cmp
or
dec
mov
scas
insl
lret
mov
roll
mov
pop
mov
shlb
and
add
fimull
pop
lahf
pop
push
cmpsb
std
int
leave
jns
ds
cmp
push
push
inc
iret
or
sub
inc
stos
xchg
jns
roll
outsl
jmp
aaa
loop
pop
imul
stos
mov
cwtl
mov
dec
out
push
dec
cmp
cmp
jle
outsl
call
fidivrl
mov
lret
push
add
jle
cmc
inc
and
cwtl
add
fimull
scas
push
sbb
mov
push
pushf
ret
mov
stc
cmp
in
xchg
sub
sbb
pusha
out
inc
shlb
in
xchg
add
cs
lods
std
dec
mov
out
xor
adc
sahf
push
inc
inc
jl
push
arpl
dec
shll
xchg
inc
sbbl
sub
xchg
in
andl
lods
mov
sbb
sahf
adc
movl
shll
add
aam
sbb
test
mov
jecxz
andl
or
xchg
jecxz
leave
out
sbb
fcmovnu
js
movsl
adc
sbb
xchg
popa
or
sub
jae
jbe
pop
test
lcall
jbe
aad
icebp
in
push
pop
loop
or
sahf
dec
and
outsb
outsb
dec
loope
test
test
test
jae
sbb
xchg
pushl
push
fildl
stos
cmp
imul
lahf
xchg
dec
sbb
jge
mov
ds
inc
jle
pop
sub
adc
or
lret
mov
pop
and
nop
xchg
xor
push
sub
xlat
add
std
add
sub
push
jmp
sub
jge
sbb
xor
dec
pop
aaa
mov
sbb
loope
sahf
pop
cmp
outsl
shrl
inc
pop
xor
pop
loop
es
sbb
push
pushf
sahf
xchg
mov
enter
jge
pushf
dec
and
movsb
repz
ret
pop
dec
or
arpl
adc
xchg
add
sub
push
mov
jmp
dec
xchg
pop
lcall
xchg
jne
cmp
flds
sub
cmpsl
xor
test
sub
clc
scas
push
adc
inc
inc
into
and
adc
mov
sub
clc
test
mov
jnp
lods
adc
fildl
mov
cmp
out
adc
jecxz
jge
out
cmpsl
fisttpll
mov
pop
imull
sbb
ficomps
push
inc
push
call
pop
mov
or
scas
push
pop
popa
stos
jns
inc
pop
mov
stc
push
lods
test
aad
repnz
sbb
adc
ror
adc
dec
out
lcall
xchg
mov
xchg
cmc
jne
div
subl
pop
xchg
add
xor
test
cmc
xchg
es
mov
orl
es
jae
sbb
mov
mov
and
jmp
stc
jle
fadds
mov
sbb
test
cmpsl
pop
cmpsb
stos
imul
and
scas
pusha
pushf
fsts
stos
mov
fnsave
imul
sub
cmpsb
xor
orb
je
or
add
push
sub
sbb
adc
sbb
cmp
dec
mov
xor
std
call
inc
cmc
adc
icebp
jmp
cmpsl
adc
ficoml
sub
in
sahf
cmp
xor
inc
ss
incl
test
sbb
nop
shrl
cltd
inc
adc
sbb
dec
push
jg
and
cwtl
dec
mov
test
pusha
mov
popa
and
lret
inc
pusha
lock
mov
rcl
icebp
insl
call
sub
in
rcrb
adc
dec
out
sbb
scas
jg
test
out
jg
shlb
lcall
imul
fs
sub
or
inc
and
xor
repz
jge
mov
xor
adc
mov
sti
call
xor
push
adc
push
cmp
pop
jge
add
push
dec
dec
cli
mov
inc
jns
aaa
ret
cwtl
aas
push
ds
mov
pop
pop
js
nop
je
scas
and
inc
stc
pop
in
imul
jb
push
outsb
inc
push
loop
inc
scas
mov
enter
test
adc
add
push
or
push
fldcw
adc
out
enter
sub
out
iret
adcl
and
jmp
cli
add
mov
loopne,pt
ret
es
mov
xor
repz
js
inc
fdecstp
sbb
mov
seto
lret
fmull
jae
push
cs
adc
loope
xor
aas
sub
jne
mov
ss
cmpsl
stc
aam
scas
adc
mov
sub
pop
stos
add
fldl
jecxz
xor
rclb
gs
mov
sub
jp
jne
daa
in
mov
and
cmpsl
cltd
fwait
popf
cli
cmpl
or
or
cmp
fs
fs
xor
ret
pop
mov
movsl
out
mov
cmp
xchg
sbb
push
jg
inc
arpl
cmp
cmp
scas
sbb
fwait
test
and
ret
xchg
jp
mov
lods
inc
sti
mov
push
insb
shrb
out
pop
push
add
loope
out
movl
dec
mov
orl
sbb
lods
mov
aam
mov
mov
cmp
fimuls
dec
insl
xlat
mov
lock
pusha
push
jle
std
mov
lock
jmp
jl
dec
pushf
fistpl
loope
jno
arpl
mov
cmp
pop
dec
pushf
testl
add
add
fstpl
sar
aas
and
imul
cwtl
inc
cmp
jne
sub
adc
adc
gs
push
popf
cmp
jge
repnz
push
imul
inc
and
xchg
mov
popa
data16
pop
mov
ret
mov
fsubrp
seto
xchg
or
lcall
inc
out
fldenv
movsl
cmpsl
movsl
mov
inc
ret
cmp
push
pop
inc
mov
or
mov
pusha
mov
jbe
scas
loop
scas
addr16
in
adc
cmp
into
pop
mov
sbb
pop
mov
sub
xlat
add
sbb
test
xor
mov
pushf
insb
jmp
mov
mov
mov
xor
xchg
outsl
inc
xchg
mov
cmp
ret
mov
es
int
add
js
sar
jmp
mov
xor
and
es
and
stc
out
xor
sub
lahf
ret
inc
into
dec
pop
and
ss
pop
int3
loopne
cli
add
dec
test
dec
movsl
or
or
es
push
hlt
roll
aam
mov
in
cmp
pop
leave
jl
enter
or
popf
andb
es
and
mov
jl
loop
in
mov
and
jge
jo
stc
sub
or
ss
cmp
dec
pop
cli
push
adc
arpl
mov
add
and
cmc
aad
icebp
insb
sti
cld
xchg
pop
js
in
dec
dec
xchg
push
cmp
cs
push
adc
push
and
inc
push
out
push
adc
lods
push
call
subb
loope
mov
insb
xor
push
sarl
adc
mov
lahf
imull
xchg
test
mov
faddl
divb
aaa
outsb
adc
jae
pop
adc
int
js
xor
inc
movsb
cld
dec
xlat
jns
pusha
js
xchg
addr16
mov
or
xor
xlat
into
dec
adc
mov
fists
mov
mov
in
ljmp
inc
xchg
xor
js
mov
in
shrb
xor
pop
icebp
mov
and
popf
push
out
dec
lret
and
mov
or
lahf
dec
lea
mov
mov
xchg
xchg
xor
dec
sub
inc
fistps
cmpsb
mov
xor
sbb
xchg
jmp
aam
xchg
mov
dec
mov
mov
dec
push
idivl
outsb
ds
int
arpl
push
mov
mov
repz
and
mov
verr
push
mov
mov
xchg
sbb
xor
adc
pusha
mov
lret
mov
jg
lea
mov
fwait
xchg
ljmp
icebp
xchg
mov
jle
cmp
ljmp
or
cmc
or
sub
cmp
loope
cwtl
flds
mov
jle
xchg
jae
mov
in
in
jle
inc
jge
dec
xchg
mov
push
dec
or
push
outsb
dec
out
xchg
or
xchg
iret
rcrb
fstpt
adc
adc
mov
lods
fcomp
int3
push
aad
movsb
les
inc
lret
lret
adcl
xchg
push
mov
sbb
mov
or
inc
adc
pop
xchg
or
mov
pop
xor
shll
lock
or
neg
sahf
dec
gs
xchg
ja
inc
out
adc
mov
cs
or
cmpsb
mov
inc
jns
dec
ljmp
pop
out
mov
fistl
leave
adc
xor
add
lods
adc
or
mov
dec
mov
aaa
imul
sub
call
sub
icebp
push
xchg
mov
filds
jecxz
adc
lea
call
out
orl
stos
mov
cwtl
jmp
mov
test
cwtl
mov
mov
loopne
test
mov
outsl
pop
or
jno
in
mov
popa
mov
je
sub
rorb
jle
jg
cmpsl
scas
xor
mov
xor
adc
inc
test
fwait
shll
out
ljmp
pushf
arpl
lret
dec
push
mov
and
add
xor
add
repnz
outsb
dec
cmc
or
lcall
lret
daa
movsb
out
mov
jae
mov
in
and
add
mov
bound
pop
hlt
xchg
repz
ja
mov
push
or
jo
mov
cmp
or
add
and
mov
in
or
add
enter
jp
jnp
mov
movsl
pop
sub
test
pop
clc
mov
fsubr
test
xlat
iret
adc
xor
lods
shrb
in
mov
mov
sub
fwait
cmp
into
stc
icebp
mov
jae
pop
int3
cmp
jbe
icebp
in
out
push
mov
pop
aas
les
dec
bound
push
add
and
or
adc
popf
bound
jnp
jbe
xchg
add
jmp
es
out
push
inc
loope
adc
mov
in
sbb
cmp
push
clc
enter
xchg
mov
sub
or
imulb
pop
orl
pop
sti
je
mov
testl
mov
arpl
xor
jmp
push
outsb
xchg
dec
sarl
fsubl
cwtl
das
test
cmc
and
loopew
xor
push
sub
out
jns
push
out
jecxz
cltd
jge
lahf
jp
mov
orl
in
adc
cmp
popf
out
rclb
movsl
in
jno
je
aad
xor
push
testl
std
mov
sub
inc
nop
loop
movsb
inc
pop
jno
jp
push
clc
fstpl
aad
sar
cmp
xchg
les
shll
jl
scas
test
fadds
xchg
xor
outsl
xchg
xchg
mov
dec
sub
or
mov
movsb
enter
decl
and
pop
cwtl
pop
jmp
pop
xlat
mov
mov
out
lret
add
cmp
stos
hlt
push
scas
mov
out
cmp
test
pop
jle
imul
mov
mov
adc
sub
add
and
imul
notl
mov
test
rorb
popa
movsl
sub
add
adc
mov
daa
xor
insb
mov
sti
inc
or
or
addr16
sub
std
xchg
addb
cmp
adc
mov
movsb
ret
call
pop
fdivrs
jne
test
push
push
xchg
out
sbb
mov
push
mov
loopne
lahf
dec
lock
push
sbb
sub
imul
fmull
lea
xchg
cmp
nop
aas
or
add
and
push
popa
js
xchg
stos
push
fcoml
jne
add
je,pt
test
jno
sub
pop
add
mov
in
inc
cmp
adc
sub
push
nop
mov
lret
mov
imul
rolb
pop
js
push
xchg
scas
cmp
pushf
fimull
adc
scas
and
fstps
fdivrs
dec
out
inc
inc
rclb
lds
lods
iret
mov
jbe
shll
hlt
js
sbb
push
inc
pop
ss
mov
aaa
test
jmp
out
mov
shlb
repz
mov
pop
cwtd
add
xchg
fwait
xchg
test
out
and
inc
pop
into
inc
ja
imulb
jg
inc
mov
imul
xchg
xchg
mov
push
fsubp
aaa
and
imul
out
mov
push
mov
ss
fstl
adcl
xor
cmpsl
inc
movsb
rclb
jecxz
inc
das
lds
dec
jmp
stos
push
test
fadds
inc
jecxz
sub
fcomi
enter
mov
jne
movsb
adc
adc
mov
cmpb
and
dec
sub
bnd
test
das
imul
xchg
dec
popa
mov
arpl
sbb
data16
mov
jge
fistpl
lods
jb
mov
dec
push
rcll
in
sbbl
aad
jge
cld
gs
ret
xchg
jb
and
imul
dec
cmc
scas
cmp
push
js
sub
push
imul
sbb
mov
cmp
jb
adc
xor
mov
jle
push
int
jmp
daa
movsb
sub
gs
xor
cli
xchg
xchg
adc
dec
push
xor
jle
cmpsb
iret
sub
pop
loop
cwtl
xor
pop
mov
iret
scas
dec
icebp
dec
sbb
and
movsb
push
enter
jnp
int3
pop
inc
scas
hlt
out
cltd
add
cmpsl
and
and
or
push
call
aas
daa
inc
push
rolb
push
test
dec
stos
sub
fadds
addr16
pop
rcl
cmp
mov
add
xchg
cmpsb
mov
push
push
or
and
insl
xor
pusha
rorb
add
movsl
ja
mov
add
arpl
inc
jb
outsb
mov
bound
cs
in
aam
ret
cld
insl
stos
lods
test
jnp
ss
xchg
pop
int3
add
push
icebp
ja
mov
neg
arpl
movsl
sarb
jge
scas
lea
in
or
negb
dec
inc
xchg
bound
mov
push
fisttpl
push
or
lods
sub
add
fwait
mov
add
stc
shl
push
or
push
jne
ljmp
repnz
cld
popa
cld
push
push
fucomip
fsubr
ljmp
xorb
aas
mul
mov
lcall
ja
into
push
rcrb
pop
lea
inc
mov
push
and
in
push
jle
cmp
mov
out
rcl
dec
out
push
jns
pop
dec
aaa
arpl
inc
sbb
cmpsl
shr
pop
int3
sbb
inc
add
ss
push
xor
jle
enter
shlb
mov
sub
movsb
fs
xor
shll
test
xchg
or
negb
jmp
cli
dec
ja
mov
and
pop
repz
adc
pop
mov
cmp
das
loopne
mov
scas
jb
sub
out
cmp
les
les
out
cmpl
sarl
or
jae
sbb
fcomps
xchg
xor
ds
mov
cmp
scas
jne
clc
cmp
pop
inc
xor
lea
jp
jb
inc
inc
mov
test
push
lcall
and
lock
jge
imul
test
dec
lret
icebp
mov
add
bound
mov
js
jnp
sahf
ljmp
mov
je
loope
mov
ss
nop
inc
pop
pop
lods
imul
fdivrp
fldl
iret
xor
hlt
fldt
test
xchg
pop
popa
lret
daa
test
inc
xchg
shl
aas
ret
cmp
je
imul
push
test
ret
inc
into
ret
push
inc
je
or
cmpsb
inc
or
or
into
mov
orl
and
xchg
bound
add
fldl
scas
pop
insb
mov
fisubrs
mov
out
in
push
and
xchg
das
push
mov
std
je
pop
loope
mov
mov
sub
or
std
mov
inc
or
mov
push
scas
push
scas
inc
mov
mov
and
sub
push
xlat
adc
lock
inc
mov
pop
cmp
and
pop
out
call
popa
mov
stos
add
cmpsb
pop
aad
cmp
cmpsl
rorl
shlb
dec
xlat
fildll
out
sbb
sbb
dec
divl
imul
sub
xchg
xor
imul
outsl
loopne
pcmpgtw
dec
xchg
add
jmp
imul
cmp
sub
gs
pop
jo
jns
adc
test
xor
cmp
dec
push
leave
rcll
push
cmp
pop
mov
mov
xchg
dec
sbb
mov
jo
adc
pop
push
jbe
jns
jl
mov
xchg
nop
inc
adc
adc
cmp
add
in
mov
add
mov
insl
lds
lods
mov
cmp
mov
xchg
push
push
stos
sbb
adc
push
mov
pop
adcb
xlat
repnz
sbb
lea
and
test
sbb
in
pop
adc
insb
push
cmp
out
out
xchg
push
xor
sbb
pop
mov
data16
jecxz
cmp
pop
aam
jmp
xor
out
sbb
add
ja
fs
daa
loop
mov
dec
jns
les
xchg
xor
cld
lds
or
pop
and
jmp
lods
xlat
and
hlt
cwtl
jbe
dec
xchg
cmp
cmc
lea
adc
outsl
pusha
mov
pop
scas
insl
lods
loop
mov
mov
pop
xchg
loope
enter
cld
jge
ret
xchg
jo
pop
mov
int3
or
clc
add
in
push
movsb
movsb
cmpsl
mov
call
pop
pop
ficomps
mul
sub
mov
jbe
in
dec
push
sub
push
arpl
mov
or
dec
imul
arpl
ss
stc
aaa
fmul
jmp
lcall
push
ja
stos
xchg
call
pop
daa
aas
js
inc
pop
or
push
movsl
iret
decb
mov
cli
jle
popa
pop
pop
inc
mov
test
and
mov
enter
sarl
or
gs
xor
inc
or
push
sti
or
xor
rcl
push
xchg
ret
jne
icebp
mov
or
movsl
xchg
std
out
aas
mov
and
shlb
pop
mov
push
movl
jmp
add
push
ror
lret
or
xor
aaa
sub
pop
and
sbb
xchg
lea
mov
dec
mov
ds
int3
adc
mov
gs
adc
shrb
jb
xchg
mov
pop
aam
mov
or
push
and
pop
jle
add
push
jae
jg
icebp
sbb
and
mov
xchg
cld
add
loop
mov
cwtl
lods
neg
cs
mov
sub
or
adc
sub
mov
jbe
adc
jle
divl
dec
icebp
fwait
adc
xor
inc
or
push
into
rcll
hlt
jg
xchg
fsubs
outsb
adc
add
cld
fstl
pushf
ljmp
push
or
push
scas
lcall
out
jns
jp
xor
addr16
cmp
and
cmpsl
imul
mov
clc
cmpsl
xorb
aas
mov
or
sub
add
cmp
mov
daa
outsb
mov
into
sub
pop
adc
push
cmpsl
hlt
dec
out
mov
fs
cwtl
mov
push
mov
ret
rcrb
pop
jnp
les
jl
sti
pop
adc
sub
scas
jae,pt
or
mov
mov
outsb
mov
outsb
add
pop
xchg
loopne
jmp
mov
or
sbb
sbb
fildl
sub
out
enter
xor
lock
stc
sub
in
cmp
add
imul
popl
jle
adc
xorb
rcll
cmp
add
je
xor
sub
mov
cmp
or
loope
push
aam
hlt
xchg
dec
inc
push
ret
loopne
pop
arpl
pop
xlat
xor
push
mov
ret
loopne
xor
mov
pop
movsb
or
dec
icebp
mov
mov
cmp
dec
fcmovu
loopne
scas
test
scas
arpl
pop
inc
mov
cmpsb
movsl
lods
insb
pop
les
lea
pop
xchg
or
sbb
faddl
dec
inc
push
mov
jp
in
int
sbb
jb
bound
fistpl
pop
jno
pop
mov
mov
test
inc
xlat
sub
loopne
lds
inc
cmp
pop
jl
jns
into
inc
xchg
adc
ss
xchg
shrd
mov
mov
push
popf
sbb
jo
cli
sbb
fsubrl
lret
pusha
subb
adc
push
xchg
add
insb
mov
das
cwtl
sahf
imul
pop
sub
js
je
mov
mov
mov
push
sbb
orl
sahf
shlb
add
in
loopne
aas
imul
adc
xchg
mov
push
js
lock
popf
mov
je
fsubr
lahf
das
mov
push
filds
lret
cmp
mov
xor
fsubl
mov
in
push
clc
mov
stos
iret
mov
adc
sbb
clc
pushf
insb
imul
incb
pop
cwtl
popf
add
in
xchg
xchg
cmp
fidivl
enter
loope
sbb
jg
imul
les
leave
sbb
xor
cltd
push
rol
adc
add
xorb
rorl
xor
in
jle
jecxz
shrl
mov
mov
and
mov
les
popa
pop
or
mov
in
mov
andb
pop
mov
sarl
ret
mov
fdivl
addr16
xor
call
addl
jmp
js
mov
in
or
cwtl
das
fldcw
sub
ror
bound
jae
addr16
imul
add
rcl
aam
or
ljmp
jae
shl
jge
imul
imul
clc
into
sbb
jecxz
or
clc
imul
xor
and
jl
mov
cmp
push
sub
js
ja
push
or
cwtl
rclb
mov
push
lods
outsb
jns
mov
test
jg
or
jbe
mov
and
negb
cmp
jg
lret
dec
rolb
mov
adc
dec
mov
fistps
scas
mov
mov
shlb
out
dec
leave
mov
add
ss
jo
jp
mov
push
and
xor
inc
dec
out
mov
or
adc
pop
cmpb
add
xchg
test
popa
mov
jmp
push
mov
ror
adc
sub
out
sbb
aam
lods
scas
jne
xchg
mov
or
gs
fndisi(8087
or
imulb
pushf
push
mov
int
into
mov
lock
stos
pop
test
dec
sbbb
repz
insb
mov
mov
push
and
arpl
add
out
xchg
dec
fcmovnbe
pop
lods
test
js
or
lahf
lock
test
js
push
mov
push
mov
mov
mov
jge
xchg
adc
sub
movsl
mov
adc
inc
mov
push
fsubs
push
lahf
stos
inc
sbb
outsb
pop
mov
jb
adc
dec
jg
lock
in
push
js
fcoms
jae
push
push
and
test
arpl
int
test
jecxz
or
push
mov
mov
jle
ja
out
mov
bound
or
cmp
subl
adc
insl
mov
psllw
scas
cmpsl
psubb
cld
dec
dec
sub
inc
test
mov
in
jmp
push
or
add
lods
jmp
and
cltd
lret
lcall
sub
pop
out
lcall
in
mov
movsb
scas
sub
add
cmpl
mov
mov
xchg
mov
lods
int3
adc
inc
stos
xchg
sub
mov
mov
hlt
in
lcall
xlat
or
xchg
xchg
sahf
and
cmp
xor
lods
ja
outsl
push
loopne
imul
scas
or
fsubrs
dec
ffree
ljmp
push
roll
in
daa
ss
popf
loope
pop
jmp
fistpl
cmp
outsb
aas
into
data16
lods
jae
jl
scas
jmp
je
xchg
mov
sahf
xorb
fucomi
add
scas
sub
dec
dec
dec
movsl
in
imull
lock
int
fldcw
bnd
out
mov
int
mov
mov
popf
mov
mov
pop
mov
mov
and
xchg
scas
cmp
inc
xchg
xchg
jp
out
out
dec
jge
pushf
int3
mov
ss
fcomip
push
jo
mov
lahf
push
adc
aaa
sbb
scas
mov
lcall
pop
pop
jns
jl
mov
mov
cmpsb
lods
sarb
andl
inc
xlat
movsb
ret
fadd
ficomps
insl
dec
pop
icebp
mov
scas
pop
jl
ds
mov
xchg
or
leave
gs
jmp
push
push
xor
enter
xchg
dec
cmp
jnp
sbb
pop
adcb
rolb
rolb
js,pn
mov
lcall
rolb
and
add
or
scas
jmp
mov
lret
sub
shll
add
rcll
cli
hlt
jg
xchg
add
into
sbb
mov
pop
imul
add
pop
push
push
mov
cwtl
mov
push
add
pushf
imul
test
dec
sbb
out
cli
loopne
adc
fdivs
sbb
pushf
pushf
and
mov
dec
push
inc
xchg
adcl
or
cmpsl
addl
mov
aad
rcrl
cmp
mov
fidivl
fs
int3
popf
pop
push
push
rcrb
dec
xchg
aas
dec
rolb
mov
or
mov
scas
mov
lret
mov
addr16
lahf
push
cli
mov
adc
int3
inc
cmc
sbb
push
outsl
xor
aaa
js
es
push
or
rcll
mov
cmp
dec
in
add
xchg
repnz
das
push
inc
or
or
mov
lea
js
jge
in
jg
xchg
mov
clc
shll
add
sub
or
sahf
cltd
inc
mov
clc
test
and
mov
mov
sbbb
or
push
jle
jae
xor
imul
je
sub
sti
outsb
and
in
rcll
push
jmp
adc
inc
sbb
xchg
pop
jmp
bound
icebp
mov
jnp
mov
imul
cwtl
dec
into
sbb
mov
repz
jp
mov
and
aas
sahf
ja
cltd
jae
dec
and
call
int
xchg
dec
pop
fs
out
inc
sbbb
sub
sub
push
mov
xor
ljmp
jae
lods
sub
fldt
jae
mov
pop
mov
add
jmp
or
aam
sub
lods
ss
sub
mov
jl
adc
lods
dec
push
callw
test
adc
cld
stc
pushl
adc
fsubr
mov
ret
mov
popa
cltd
sub
jno
xor
int
movsl
xchg
mov
mov
xor
adcb
adc
call
push
push
inc
pop
das
inc
outsb
cmc
xchg
sub
mov
xchg
ret
adc
inc
rcrb
add
lcall
call
insb
loope
xor
cmp
dec
pop
out
xor
mov
and
pop
fwait
mov
xchg
mov
scas
movsb
mov
cmp
pop
dec
mov
or
rorl
mov
rcrl
mov
lahf
ds
jns
push
push
fidivl
pop
repz
fisubrs
and
pop
arpl
jle
push
in
aam
data16
mov
mov
cld
mov
ss
or
push
cli
jne
jle
in
push
xor
insl
xor
cli
add
inc
pop
repnz
movl
jle
lcall
mov
ret
mov
mov
push
jnp
leave
cmp
jmp
xchg
push
out
dec
into
xchg
pop
dec
mov
testl
lea
sahf
pop
in
sbb
or
inc
pop
xlat
aas
cltd
mov
lods
outsb
pop
jecxz
bound
lea
je
out
mov
sub
sub
aaa
mov
mov
sbb
jg
loopne
insb
lahf
mov
push
or
or
jmp
rclb
cmp
idivb
and
jnp
xchg
xchg
mov
out
dec
xchg
cmp
add
add
mov
inc
stc
adc
push
loopne
adc
cmpsb
push
arpl
add
jns
jecxz
shl
jge
ret
jb
out
and
ficompl
pusha
cmp
jnp
test
dec
mov
outsl
adc
and
pop
jns
xor
lret
jmp
out
sbbb
test
test
add
adc
call
out
and
xor
inc
jns,pn
dec
out
and
inc
out
mov
int
mov
iret
fcom
js
lret
sub
dec
cmpsl
mov
add
and
mov
mov
mov
test
insl
jg
mov
test
xor
insl
jo
sub
fsub
push
pop
jg
cmp
and
xchg
add
in
leave
sub
in
jne
popa
icebp
mov
bound
mov
sbb
lcall
in
push
fcmovbe
dec
pop
xor
mov
push
lret
jb
sub
int3
or
inc
pusha
adc
data16
pop
sarb
fnsave
add
repnz
aas
inc
test
and
mov
adc
nop
cmovae
aaa
xchg
fnstsw
fwait
loopne
mov
das
lret
jno
add
repnz
xchg
push
test
push
xchg
idivb
mov
mov
leave
mov
dec
or
sub
cmc
pop
pop
int3
frstor
sbb
mov
inc
dec
lahf
aas
sbbb
cmp
and
bound
in
sub
mov
inc
stos
rclb
pop
call
adcl
jmp
mov
pop
aad
mov
jno
and
dec
adc
sti
sahf
xor
xor
divb
and
mov
in
xchg
lret
cwtl
cli
inc
adc
jmp
test
jns
xchg
rcrb
fsubl
xchg
cmp
andl
push
rcpps
xchg
push
mov
mov
mov
in
mov
mov
roll
cltd
push
test
insl
mov
inc
cmpb
ss
rorb
or
mov
ljmp
mov
imul
sub
xchg
jecxz
cmpsl
ss
jmp
outsl
xchg
fadd
and
jnp
mov
cmp
fisubl
dec
xchg
mov
push
es
sbb
sub
nop
cmp
dec
mov
adc
sbb
aam
dec
test
xorb
push
mov
mov
je
lcall
inc
test
and
pop
pop
cmp
cltd
jnp
rol
icebp
outsb
mov
xor
stos
sti
cmp
test
cwtl
add
repnz
sbb
push
lret
or
aaa
in
mov
sub
mov
movsb
cld
xor
push
pop
and
jbe
shll
les
sbbb
add
imul
or
jbe
ja
dec
cmp
shl
int
or
xchg
lock
mov
and
cmpsb
aas
jmp
mov
fcompl
jne
call
cltd
mov
inc
lcall
mov
and
sarb
xlat
xor
and
clc
test
sahf
cmpsb
lods
and
xor
xor
mov
push
cmp
sbb
pop
lods
mov
out
loop
push
add
roll
movsl
add
test
bswap
push
lret
or
mov
pop
adc
xchg
scas
insl
in
fimull
push
push
scas
pop
mov
nop
sti
movsl
imul
push
pushf
insl
dec
mov
in
incb
dec
inc
sub
mov
and
mov
and
add
xchg
sti
les
push
push
mov
ja
sub
or
xor
xchg
pop
sarb
enter
push
rcll
shlb
fs
xchg
ret
push
xor
push
stos
and
rorb
mov
inc
popa
fildl
jo
mov
ja
mov
jl
loop
lods
cltd
xchg
push
pusha
fcoml
mov
jmp
add
notl
sub
or
fucom
inc
flds
pop
test
dec
out
sbb
pushf
dec
cld
dec
jae
loop
frstor
and
aas
sbb
stos
adc
jae
or
and
xchg
orl
xchg
dec
ret
mov
push
ds
dec
leave
inc
jnp
jo
jmp
out
outsl
add
mov
in
push
xchg
mov
push
movsb
mov
subl
out
or
in
jl
nop
scas
cli
mov
mov
inc
adc
jecxz
lahf
cmp
loop
in
add
leave
jp
push
cwtl
add
and
es
subb
mov
xchg
mov
or
fdivs
mov
mov
shrb
push
push
mov
scas
jne
cmp
rcrl
stc
cmp
cmp
mov
sti
push
sbb
adc
cmp
mov
aas
out
int
in
daa
stc
cmpsl
inc
jno
mov
or
sbb
and
cmpsb
sbb
jecxz
add
aam
and
fcomp
xor
btrl
es
xchg
inc
andb
loopne
sbbl
pop
mov
adc
in
xchg
xchg
jae
hlt
pusha
jg
mov
addr16
sbb
mov
stc
lods
xchg
cltd
or
fs
cmpsl
adc
test
cmp
jmp
mov
mov
int3
dec
jo
xor
ljmp
and
popa
hlt
jge
mov
adc
jne
test
adc
sub
xchg
add
data16
add
popa
dec
into
stos
lahf
stc
ss
scas
cmp
notb
push
andb
push
cmp
mov
adc
jbe
sub
icebp
sub
adc
mov
push
loop
in
aad
pop
push
cmc
fmull
jno
xrstors
ret
mov
clc
lcall
inc
lahf
faddl
mov
cmp
mov
mov
fldlg2
jns
mov
dec
inc
adc
jp
pop
inc
out
stc
mov
push
mov
jp
jle
mov
stc
nop
cwtl
adc
insb
jmp
ret
sub
notl
fistps
nopl
orb
and
js
mov
dec
bound
xor
loop
and
mov
dec
xlat
shll
jle
lds
pop
loop
push
imul
jg
imul
rorl
test
mov
sub
push
inc
lods
mov
ljmp
xchg
jns
mov
xchg
insl
jmp
adc
push
lahf
cmc
mov
mov
adc
dec
xchg
cmp
jnp
push
lods
mov
arpl
cmpsl
cli
and
sub
pushf
sarl
sub
xchg
cmc
pop
leave
push
mov
int3
out
inc
xchg
pop
fidivrs
lods
lcall
mov
mov
imul
fistpll
pop
sbbb
es
dec
jmp
dec
push
mov
pop
hlt
idivb
jno
lret
hlt
mov
movb
ja
adc
or
xchg
and
leave
in
ret
jl
sub
push
xor
flds
jnp
cwtl
pop
add
inc
mov
jno
int
adc
and
fwait
jmp
mov
fmuls
out
xchg
fisttps
lcall
iret
xor
mov
pusha
clc
sti
dec
sbb
lret
outsl
xor
sbb
test
mov
add
sbb
ss
lea
aad
movsl
push
pop
and
mov
rorb
mov
cmp
push
mov
insl
adc
test
fistl
test
call
fisubrs
xchg
fadds
adc
adc
mov
in
mov
insb
fs
mov
mov
xchg
leave
cs
icebp
call
cmpsb
test
cmp
loop
ffree
adc
xor
sbb
jae
cmp
inc
mov
push
adc
xor
imul
popf
cmp
jno
xchg
mov
lret
or
mov
bound
bound
mov
adc
jp
int
sbb
lcall
incb
push
lods
rcl
sub
je
fcomi
push
inc
push
sbb
cwtl
jae
push
inc
mov
mov
sub
mov
loop
sub
push
js
out
repz
inc
xlat
pop
jl
inc
pop
clc
pushf
push
jecxz
loop
mov
int3
pop
lock
xchg
iret
mov
aaa
or
arpl
lods
pop
pop
xchg
call
mov
out
in
dec
inc
lahf
xorl
and
push
cmp
push
mov
clc
lret
push
push
cmp
hlt
out
jp
in
inc
pop
cmp
clc
shll
mov
mov
shl
imull
add
pop
jno
mov
int3
stc
clc
int
movsl
rcrb
mov
mov
or
iret
or
adc
cld
push
jno
test
sub
inc
insl
add
pop
stos
mov
lods
jge
mov
mov
or
add
filds
cli
push
add
xor
adc
jne
xor
sahf
jo
dec
push
lahf
imul
inc
push
mov
adc
inc
je
jg
in
mov
sar
xor
or
mov
jno
inc
fwait
pop
mov
mov
xchg
xor
negb
jmp
add
cmp
imul
outsl
enter
or
divl
and
out
cmp
jb
movsl
fwait
ret
cmc
mov
jne
int3
iret
hlt
andb
nop
bound
ffree
mov
and
inc
cmp
repz
jge
in
mov
mov
and
dec
inc
movsb
mov
pop
xchg
dec
adc
jg
aaa
dec
icebp
jnp
imul
popf
subb
rol
inc
add
jmp
in
fisttpll
imul
cmp
movsl
dec
popa
mov
mov
js
shl
jnp
stc
push
in
or
or
insb
sbb
lret
dec
push
push
call
and
sub
mov
outsb
xchg
mov
jb
mov
fisttpl
imul
mov
mov
jg
scas
xchg
popa
fistps
insb
pop
or
or
stos
test
inc
fmul
jno
in
idivl
js
loopne
jp
sar
iret
stos
in
movsl
in
sti
shll
test
pop
imul
cmp
ret
stc
clc
orb
mov
into
push
js
cmp
lods
inc
sub
fildl
push
insw
es
dec
pop
adc
popa
xor
sbb
inc
cmp
adc
xchg
sub
jno
sbb
pop
insb
mov
fadd
mov
js
push
mov
lea
loop
in
lahf
insb
mov
add
lret
lret
out
cmp
arpl
pop
dec
lds
test
or
mov
xchg
cwtl
jnp
and
stos
scas
dec
jp
mov
add
fistps
fstl
das
mov
add
insl
scas
push
les
push
insb
pop
ret
mov
hlt
idivb
pop
inc
test
pop
push
inc
mov
fcomp
insb
dec
mov
icebp
jmp
dec
and
lea
int3
stos
andb
pop
jno
push
pop
xor
fdivrs
jg
sbb
lea
aas
ret
clc
push
ret
jae
aas
sbb
movsl
inc
inc
xchg
mov
or
loop
lods
pop
dec
mov
lods
and
mov
add
and
pusha
les
int
xchg
xor
std
jge
xchg
push
mov
stos
insl
inc
add
mov
sbb
fstpl
sbb
inc
add
jp
pop
mov
in
aam
loope
mov
sbb
test
cmp
fsubrl
sub
pop
adcb
aaa
adc
push
mov
jns
in
inc
dec
sarb
mov
or
and
stos
in
div
dec
and
inc
jmp
aam
fisubrl
or
add
cltd
xchg
pop
cmpsl
adc
push
outsb
sbb
jle
lods
push
jmp
adcl
cltd
adc
insb
jno
pop
jb
or
out
cld
loop
out
push
mov
rcrl
addl
mov
icebp
pop
adc
gs
in
adc
xor
repz
mov
mov
jns
stos
pop
inc
fwait
adc
cmp
and
mov
out
add
push
cmp
mov
or
jno
mov
cmp
icebp
lods
push
sub
fsts
push
push
dec
pmuludq
push
xchg
std
out
xchg
push
dec
xchg
inc
daa
lods
lcall
pop
stos
mov
cmp
or
jno
xchg
int
gs
enter
mov
pushf
shll
add
lret
push
xor
xchg
add
aas
sbb
jo
mov
mov
pop
fistps
push
inc
ja
or
mov
icebp
dec
push
pushf
aaa
adc
inc
outsb
xchg
adc
dec
jnp
mov
hlt
aaa
subb
shll
xchg
adc
rclb
push
adcb
sbb
movsb
mov
inc
push
mov
stc
inc
cmp
add
inc
or
and
imul
xchg
sub
cli
lahf
in
rcrb
stos
in
cmp
aas
inc
aaa
jno
hlt
mov
out
int3
sbb
xchg
lods
sbb
cmpsb
bound
mov
stos
ficoms
insl
out
out
xchg
in
je
aaa
inc
clc
add
cwtl
int
ret
push
icebp
and
test
pop
add
jecxz
movsb
inc
inc
test
jns
pop
push
ds
xchg
imul
cmpsb
add
lea
movsb
jne
jo
das
jno
imul
into
dec
sahf
or
mov
insl
push
pushf
sahf
sar
add
xor
xor
xchg
xor
nop
scas
or
lret
mov
std
mul
movsl
int3
and
popa
movsl
mov
push
lea
call
add
stos
outsl
insl
daa
lods
js
fadds
sbb
sti
and
pop
nop
aas
test
fildll
mov
cmp
repnz
js
fsts
mov
sbb
lock
js
sti
mov
and
popf
cmp
out
add
movsb
mov
pop
fbld
lods
mov
adc
loopne
lock
cwtl
inc
test
in
ljmp
push
adc
popf
adc
sti
mov
pop
inc
jge
cmp
fisubrl
xchg
dec
cmc
shrb
popa
icebp
test
add
stos
in
in
sbb
pop
pusha
jnp
adc
and
nop
outsb
add
mov
test
push
xchg
out
sub
in
ds
mov
bound
bound
sub
mov
out
cmp
lock
pop
push
cmp
jp
dec
xor
cmp
and
rol
repz
sti
lods
push
arpl
scas
icebp
add
fisttps
cld
cmp
sbb
pop
push
push
test
push
and
outsb
lahf
cmp
jge
stos
lods
dec
mov
lea
lock
mov
sub
jnp
gs
and
add
pop
sahf
nop
dec
outsl
mov
sbbl
push
xlat
sbb
or
jp
mov
xchg
popf
xchg
out
ljmp
cmpl
cmp
pusha
mov
mov
aad
aas
jbe
mov
cmp
jb
orb
mov
outsb
jle
jl
daa
xor
dec
lock
push
jecxz
mov
or
mov
add
faddp
or
mov
push
outsb
mov
xchg
jno
pop
inc
cmc
mov
fwait
inc
inc
call
shrb
adc
pusha
dec
negb
inc
or
rolb
cwtl
std
out
xchg
in
in
call
push
add
mov
or
mov
or
enter
rcll
add
dec
mov
enter
test
push
loop
mov
xchg
add
pop
dec
mov
push
hlt
add
sub
lret
cmpsb
add
ret
sti
cmp
aad
add
enter
int
adc
sti
add
and
adc
xor
inc
xchg
sub
in
mov
jbe
stos
gs
add
fmull
add
dec
fwait
inc
mov
repz
inc
test
sbb
add
mov
bound
loopne
sub
imul
fucom
sbb
pop
jmp
add
inc
dec
mov
in
and
in
xchg
push
inc
shr
mov
in
sahf
cmc
fld1
shlb
push
les
insl
cmp
sub
stos
or
test
inc
fstps
pop
std
xchg
dec
mov
xor
fcomps
fwait
es
add
ljmp
outsl
xchg
pop
dec
incb
jecxz
or
int
sbb
mov
add
mov
fwait
lahf
loop
pop
stos
sub
lea
sub
out
jnp
mov
and
jne
mov
les
xor
arpl
jae
shl
aad
jmp
xor
push
add
dec
push
aad
xchg
bound
loope
add
je
xchg
loopne
test
sub
pop
lret
jae
dec
sti
pop
xor
pop
sarl
shr
std
pop
lea
lods
cli
cmp
xchg
andl
roll
int3
jne
jbe
add
and
int
lods
mov
aad
adc
or
sbb
jg
dec
lcall
pop
add
add
pop
cmpsl
scas
adc
loopne
js
in
shl
icebp
imul
cwtl
filds
sbb
lods
imul
dec
adc
dec
sub
or
lahf
loopne
sub
lods
mov
lds
pop
pop
adc
or
and
xor
or
add
or
mov
jg
xchg
in
sub
sub
xor
lcall
mov
lret
xor
out
aam
sbb
inc
adc
and
aam
les
ss
push
dec
ret
jne
es
bound
movsl
jp
mov
push
lds
pop
shrb
push
jmp
push
repz
cmp
fimull
pop
cmp
push
push
and
fsubl
cs
or
dec
sub
pop
rolb
pushw
cmp
imul
xchg
mov
lock
mov
xchg
lods
lcall
dec
sub
repz
aad
je
or
test
outsb
scas
mov
add
inc
jg
pop
loop
or
lahf
stos
dec
lods
rcll
dec
js
xchg
cmp
dec
jbe
sti
enter
sub
push
js
das
in
sahf
out
stc
cmp
xchg
mov
push
jns
cwtl
xchg
jne
test
inc
subb
cmp
inc
outsl
cli
inc
cmp
add
fdivp
sub
movsl
add
loope
orb
adc
push
xchg
lods
inc
ja,pn
cmpsl
jge
fmull
xchg
inc
fists
jg
xchg
data16
loop
push
push
pop
jae
and
dec
rcr
ljmp
dec
cmp
int
mov
mov
stos
loop
push
mov
sub
enter
or
stos
das
mov
jnp
lods
dec
jns
test
mov
into
xor
sbb
cmp
jno
dec
cli
sbb
mov
or
pop
cmp
mov
cmp
repz
mov
push
repnz
push
jbe
and
sbb
jmp
pop
inc
scas
imul
scas
mov
fisubl
stc
xchg
mov
lods
out
into
jno
xchg
and
jle
pop
sub
and
push
jne
daa
das
cmc
cwtl
xor
enterw
cmpsb
dec
lret
dec
stos
incl
test
test
outsb
rclb
and
mov
in
xchg
mov
add
xchg
shll
or
shl
lods
imul
out
sahf
in
ljmp
mov
lods
inc
dec
in
inc
inc
std
gs
pop
scas
loopne
and
mov
mov
dec
popf
fldcw
shlb
add
sub
mov
push
xchg
sbb
inc
mov
pusha
mov
repnz
test
pop
pop
out
in
lock
pop
lea
dec
dec
mov
sbb
lods
mov
mov
push
xchg
pop
lahf
lock
xor
imull
into
push
or
push
xor
or
jb
pop
ds
cli
mov
cmp
sub
add
pushf
and
push
cltd
xchg
imul
xchg
lds
add
pop
imul
test
scas
gs
cmp
sub
frstor
sahf
int
gs
and
jge
mov
mov
mov
jl
mov
xchg
mov
cld
popa
mov
repnz
in
cmp
sub
adc
xchg
push
jge
xlat
std
in
push
shlb
movsl
inc
cmp
sub
addr16
fidivs
add
jmp
shl
rolb
add
test
popa
fs
cmpsb
cmp
dec
lods
and
sbb
cmpsl
cmc
lcall
cmp
mov
and
pop
lock
pop
sub
dec
mov
xchg
in
sti
inc
mov
add
and
adc
jns
int
insl
mov
in
cmp
or
popa
add
push
inc
repnz
subl
inc
sub
out
outsl
icebp
rorl
xchg
je
pop
in
js
push
leave
sarb
hlt
sub
imul
add
repnz
and
mov
test
mov
pop
repnz
loop
stos
fs
outsl
test
ds
pop
int
pushl
clc
mov
in
je
lods
lea
mov
scas
push
jl
int3
imul
adc
in
mov
sbbb
out
shlb
xor
jnp
xor
pop
mov
and
rcrb
push
aas
push
ss
sbb
mov
fidivl
movsb
out
push
or
into
inc
imul
xorl
les
xlat
add
pop
iret
pop
sbb
js
xchg
or
xchg
xor
lods
loop
mov
mov
das
add
sbb
lds
and
push
fisubrl
mov
mull
pop
imul
clc
sbb
movsl
es
addr16
fsubrs
pushf
cs
fistpll
add
mov
xchg
dec
xor
mov
mov
pop
sbb
push
scas
data16
push
mov
gs
xlat
pop
and
bswap
in
cwtl
popa
and
paddsw
dec
inc
sarb
sti
cmp
outsb
inc
xor
pop
fcompl
jo
ds
jns
cmc
push
mov
add
jo
sub
mov
loopne
push
sub
mov
incl
out
fildl
and
call
mov
add
and
add
push
cmp
iret
cli
mov
jbe
xorl
addr16
sub
pop
and
testb
or
fcompl
leave
mov
outsb
movl
setbe
cmc
mov
pop
cwtl
bound
mov
add
inc
xchg
jg
xor
lods
mov
pop
lea
shr
dec
fisttpll
cmp
lock
sub
cmc
aam
mov
dec
or
lods
movsb
loope
push
fprem
nop
shll
sub
add
adc
test
enter
lret
sub
dec
call
sbb
test
pop
sbb
int
repz
repnz
notl
push
cltd
aaa
pop
xor
out
cmpsb
mov
popf
mov
cmc
scas
xlat
xchg
mov
mov
shll
jg
sub
repz
add
fnsave
push
cmp
pop
test
lret
inc
xchg
mov
cwtl
dec
mov
lea
jmp
loop
mov
ljmp
sub
push
mov
lret
mov
jle
dec
in
test
test
mov
pop
inc
repz
fs
addr16
hlt
push
dec
push
jns
inc
lods
xchg
icebp
mov
xchg
in
sbb
push
mov
pop
pop
xchg
and
out
xlat
pushf
fwait
ss
or
mov
ret
ficoml
adc
xor
jp
fsub
inc
jbe
mov
pushf
xchg
adc
adc
adc
or
ret
add
mov
dec
mov
pop
clc
sub
repz
pop
cmp
push
addr16
in
mov
stos
repz
xchg
sti
xor
cmc
test
adc
mov
jle
cmp
int3
fsub
je
call
adc
dec
imul
push
inc
repnz
add
repz
test
aas
adc
mov
bound
and
xchg
aas
ret
test
cwtl
push
jns
leave
fidivl
ret
push
in
jns
lea
fwait
xchg
jecxz
mov
mov
inc
push
push
xor
data16
rcll
fsubl
mov
fs
or
ficoms
call
je
jmp
nop
outsb
dec
inc
sarl
das
popf
sub
jno
int
pop
les
ljmp
pop
lds
xchg
pusha
and
add
lar
ljmp
mov
jbe
adc
shll
jp
push
lods
in
add
sbb
shlb
mov
pop
adc
cli
cld
push
and
movsl
test
mov
jg
push
insb
inc
xor
pop
sbb
sub
and
add
jbe
cmpsl
jo
sarb
adc
mov
shl
ret
push
sbb
pop
jb
dec
shl
dec
or
lcall
push
or
cmp
fisubrs
out
mov
or
push
pop
cmp
rclb
sti
push
fmull
lret
jbe
repnz
mov
jle
pop
loopew
ficoml
addr16
orps
std
imul
mov
mov
xchg
sub
cmc
js
lea
xchg
bound
popa
imul
lahf
sti
fstpl
mov
out
loopne
add
push
daa
mov
stos
insw
adc
popf
imul
stos
mov
aaa
lea
mov
xchg
and
movsb
pop
inc
fldenv
pop
push
rolb
scas
mov
cmp
and
call
int3
dec
insb
and
sbb
popa
dec
jp
call
dec
add
add
aaa
cltd
das
daa
xorl
mov
sub
cmpsb
and
pop
dec
mov
mov
pop
in
add
repz
mov
stc
mov
and
dec
mov
and
xorps
ja
xor
mov
inc
ds
jle
jecxz
adc
sub
outsl
pusha
push
sub
mov
adc
lahf
shll
or
test
mov
repz
jge
mov
cld
and
push
bound
in
or
pop
into
call
popf
xchg
mov
out
mov
bnd
cmp
mov
adc
icebp
test
lfs
test
cmp
lahf
and
out
adc
push
stos
adc
pushf
imul
aas
pop
ljmp
or
lock
sub
jbe
daa
cltd
mov
jg
dec
adc
push
xchg
inc
movsb
sbb
or
fmulp
inc
mov
imul
or
push
jmp
fcoms
and
stos
loop
mov
push
inc
ret
mov
jg
dec
mov
sbb
into
cld
and
cs
faddp
mov
pop
aad
push
repnz
pusha
jg
ss
mov
and
jns
jae
iret
outsb
fs
push
sbb
xor
xchg
test
pop
fisubs
ss
js
pop
rorb
xor
rcll
xchg
aaa
cmpl
pop
xlat
jbe
xor
hlt
add
push
or
mov
add
push
sahf
add
inc
adc
cs
call
shrl
jmp
andl
ljmp
xchg
sbb
jg
push
lds
cmp
add
dec
iret
fadds
lock
das
inc
movsb
or
lock
pop
ljmp
loope
out
xor
stos
push
in
ja
xchg
dec
int
loop
fiaddl
jmp
repnz
test
add
jmp
sbb
mov
and
test
aam
lods
xchg
xchg
lock
sbb
jge
jle
je
jl
xchg
inc
pop
mov
cmp
cwtl
inc
dec
cmp
mov
cmp
out
or
push
pop
sub
or
enter
inc
pop
jmp
adc
ret
xor
jno
popf
rcrb
adc
imul
fsubrp
movb
fidivl
sub
adc
add
mov
lcall
in
and
pop
btr
fs
popf
sahf
jle
mov
xchg
dec
cmp
cld
sub
jnp
sbb
in
pushf
xchg
mov
pop
xor
divl
adc
stos
je
rcll
push
xlat
and
rclb
imul
push
and
imul
fildl
sbb
loop
push
adc
jno
inc
cs
xchg
cs
inc
test
std
mov
mov
orl
dec
mov
push
sub
xchg
mov
add
stos
xchg
cmp
jmp
and
xor
stos
rcrl
sub
test
sti
aam
pop
xchg
cs
ret
jle
cmp
pop
push
sbb
int
dec
les
sbb
and
lods
sbb
in
sbb
pop
scas
ficomps
push
xchg
add
fdivrs
jno
xchg
fstpl
lcall
push
push
mov
fimuls
lock
sbb
mov
cltd
enter
push
ficoml
outsl
add
out
push
xor
or
in
aas
add
mov
mov
rcr
cmpsl
push
movsl
sub
leave
test
lahf
mov
xchg
adc
roll
add
movsb
fnstsw
je
jae
jmp
jae
push
mov
xchg
xor
ss
sbb
jle
fsts
icebp
sub
jno
aas
les
mov
aaa
xchg
out
mov
shlb
jle
pop
mov
xchg
mov
lock
pushf
push
push
je
dec
cmp
pop
insb
cmc
add
mov
cmpsb
add
pop
addr16
dec
fwait
pop
pop
lret
sub
and
push
cmp
mov
xchg
jo
xor
out
mov
fcom
cmp
in
sub
dec
test
btc
fucomip
ljmp
lcall
xor
jns
imul
pushl
add
cmp
push
pop
pop
in
jge
cmc
call
sub
repz
mov
cmp
bound
jmp
xchg
push
test
mov
xchg
shll
xchg
ds
jns
xchg
mov
fcoml
xchg
test
fsubrl
mov
pop
cs
cmp
stos
clc
dec
sarl
pop
ret
mov
push
xchg
insb
fmuls
out
or
dec
xchg
in
sub
jmp
test
lea
in
stos
xchg
stc
sbb
fcoms
iret
inc
imul
fidivrs
mov
mov
mov
aas
cmp
mov
push
fadds
jns
xchg
les
push
in
pop
pop
push
icebp
stc
pop
sahf
push
xchg
sbb
cmp
rorb
dec
jg
in
cmp
jns
shlb
js
stos
inc
nop
mov
js
jge
xchg
mov
pop
or
fisubs
in
xor
lock
pop
pushf
fcmovb
xchg
fiaddl
lcall
and
sub
stos
ds
in
mov
unpcklps
nop
outsb
and
mov
and
push
ljmp
push
inc
and
add
dec
dec
daa
cmpsb
lcall
cmp
and
push
and
or
aam
outsl
imul
insl
dec
or
daa
rolb
add
repz
in
xchg
pop
loop
insl
push
mov
js
mov
sub
std
inc
pop
pop
outsl
outsl
sbb
mov
adc
xor
jbe
adc
int
bound
push
stos
outsb
mov
iret
adc
nop
lds
in
inc
jmp
push
into
int
push
fistps
out
xor
dec
movsb
test
lahf
scas
mov
loopw
mov
and
xor
adcl
leave
leave
aas
push
icebp
dec
hlt
dec
daa
ss
jns
cmp
inc
jbe
and
dec
lret
into
mov
inc
fisttpl
popa
inc
jns
flds
gs
xchg
lods
pop
xor
aas
mov
jb
dec
or
mov
mov
out
push
inc
pop
enter
out
push
jne
fnstsw
inc
inc
sahf
xchg
test
and
aaa
cmpsl
dec
or
adc
sbb
and
nop
push
pop
xor
add
add
sub
loope
loope
pop
cmp
ljmp
nop
adc
push
xchg
js
stc
dec
sti
cmp
mov
das
les
sbbl
mov
fmull
in
sub
dec
int3
sbb
dec
addr16
jae
aaa
orl
mov
push
ret
lret
cli
push
xor
mov
ret
xlat
out
dec
test
xchg
call
leave
sub
fs
pop
xor
imul
mov
pop
pop
pop
xorb
lret
xor
cltd
push
dec
sbb
xchg
push
push
icebp
pusha
into
jae
jo
addb
stos
xor
xor
lret
xor
or
lds
shl
mov
mov
push
cmp
inc
cmp
xor
sahf
push
je
mov
ja
idivb
xchg
xor
call
addr16
ds
xchg
out
cmp
adc
xor
int3
sti
repz
lds
mov
pop
rcrb
lret
shlb
repz
push
and
mov
xor
mov
movsl
into
or
cmpsl
jae
or
iret
mov
xchg
dec
push
iret
push
stos
sbb
test
inc
xchg
push
ljmp
mov
mov
jle
mov
xor
jge
pop
push
dec
cld
pushf
sub
out
mov
mov
pop
adc
xlat
jnp
mov
fwait
lea
movsb
pop
pop
shrb
dec
xchg
cmp
push
pop
inc
enter
fs
out
add
and
cmp
push
inc
lret
lods
aad
gs
testb
xchg
or
jo
cmp
mov
inc
jne
push
adc
hlt
cmc
daa
adc
dec
sub
and
and
pop
mov
outsl
in
or
jp
cmp
cmp
lcall
es
pop
cmp
cmp
out
stc
add
xor
xchg
dec
and
ficompl
movsb
test
addb
aaa
lea
inc
mov
sbbl
mov
gs
addr16
sti
push
push
mov
mov
or
sti
mov
xchg
mov
into
pusha
pusha
cld
test
dec
das
filds
ljmp
fisubrl
cs
fdiv
je
push
add
fistpl
int
push
test
arpl
push
enter
or
je
xchg
ja
rcr
or
jmp
in
mov
fisttpll
cld
fstpt
mov
and
test
pop
ja
jae
push
push
push
pushf
out
int
sbb
jl
mov
cmp
sub
fidivl
xor
std
sbb
jmp
scas
ficoms
cmpsl
ja
jns
cmp
mov
xchg
sti
jae
sub
dec
add
sbb
repz
jecxz
pop
loope
fcoms
mov
mov
push
push
data16
clc
pop
js
dec
jns
adc
xor
aam
out
mov
fistpll
xchg
jle
dec
sub
pop
je
or
aam
ja
add
mov
bound
test
stc
daa
lcall
int3
js
sbb
mov
aam
notl
addr16
sbbl
adc
jno
mov
lds
xlat
cli
cmpsl
lahf
das
or
adc
loope
cmp
and
push
hlt
divl
mov
and
fs
cmpsb
xor
xchg
mov
es
out
addb
mov
xor
mov
movsb
mov
sti
sbb
shlb
cld
add
das
pop
ret
add
mov
sar
sbb
ss
mov
mov
fcoml
xor
ret
xor
dec
orb
jno
or
lret
jmp
and
mov
cwtl
mov
outsb
adc
mov
xchg
aaa
sub
lods
cmc
sahf
out
pushf
pop
push
das
sbb
lea
sub
sbb
out
cld
icebp
out
xchg
adc
push
xchg
add
cmp
lds
mov
arpl
das
je
adc
jno
mov
clc
add
or
aam
pop
inc
lock
add
or
and
push
add
cld
and
fsubl
popa
imull
mov
lods
dec
aad
mov
and
pop
mov
daa
daa
mov
imul
xor
or
xor
pop
insl
fadds
add
lods
mov
jmp
movb
jg
jg
pop
sbb
arpl
jmp
ja,pt
sub
mov
add
xlat
js
lea
sub
out
sbb
dec
xchg
push
ja
or
push
jge
movsb
add
push
in
pop
inc
pop
rorb
xchg
aam
mov
mov
push
cmp
mov
mov
loop
out
add
dec
sub
mov
int3
and
xchg
cmpsl
jns
inc
cmp
leave
aaa
fidivrl
sbb
mov
repnz
mov
pop
call
out
push
cli
jnp
lret
or
ljmp
leave
pusha
cmp
push
iret
imul
fldenv
mov
shlb
fnstcw
lock
ret
xchg
pop
clc
mov
out
inc
out
lahf
mov
insb
push
popf
jae
filds
aaa
nop
sti
mov
cli
icebp
and
and
dec
adc
in
loop
cmpsl
outsb
lahf
shrl
leave
in
fs
pop
cmp
aam
mov
jnp
lea
jno
inc
jcxz
push
enter
dec
cld
mov
ret
adc
and
icebp
jne
test
xchg
fldenv
xchg
mov
test
movsb
and
cwtl
mov
cli
jl
adcb
jae
mov
in
cwtl
test
inc
mov
in
dec
xor
in
out
les
sub
movsb
iret
push
loope
jnp
xor
mov
cmp
lret
cmp
mov
sub
and
ret
push
data16
jno
mov
pop
sti
jnp
icebp
clc
lea
add
std
test
cmp
jae
pop
sub
xor
xchg
inc
outsb
xor
mov
enter
xor
insb
pop
in
or
push
and
mov
or
clc
push
sub
xor
pop
jno
mov
lahf
mov
sub
mov
cs
sbb
push
inc
idivb
jl
insl
jecxz
aam
iret
push
scas
jge
cwtl
xchg
pop
sbb
mov
mov
adc
fdivl
push
xor
push
mov
jecxz
cld
xor
jge
imul
in
inc
xor
shlb
aas
xor
popa
filds
mov
data16
xor
xchg
push
shlb
add
repz
mov
pop
call
mov
inc
mov
test
xchg
inc
clc
inc
jl
lock
inc
jae
pop
je
sub
xchg
add
aad
mov
jb
nop
fcomip
fisttpl
movsb
aam
sahf
sbb
inc
enter
push
test
jnp
cli
out
pop
cli
sub
xor
inc
sub
and
into
lods
ja
ja
popf
lcall
leave
cmp
cmp
loope
daa
adc
sbb
dec
das
cmpsl
and
jp
jo
std
into
or
lods
lahf
sbb
bound
test
lahf
dec
mov
push
rol
clc
push
sti
stos
mov
loope
xchg
ljmp
push
call
mov
or
hlt
shlb
mov
roll
or
nop
cmp
mov
inc
shlb
shl
aas
inc
sbb
jl
cli
pop
add
jno
xor
jg
imul
jae
pop
movsl
mov
jmp
stos
fildll
shll
dec
insl
and
lds
mov
cmpsl
in
dec
xchg
xor
scas
mov
pusha
sbbb
push
xchg
lds
lahf
xor
or
mov
jp
mov
and
add
outsl
in
and
loopne
mov
mov
sti
add
add
fadds
mov
das
add
outsb
cmp
in
push
int3
sub
add
dec
cld
or
popa
imul
pop
jge,pn
add
mov
cmpsb
xchg
pop
inc
imul
in
imul
mov
jg
cmc
add
outsb
mov
mov
repnz
sarl
mov
mov
mov
popa
lods
cmpsb
xchg
sub
stos
dec
pop
mov
dec
jmp
out
push
stc
cmp
push
subl
aas
scas
xor
jnp
test
lret
mov
sub
icebp
rcrl
mov
ret
sbb
inc
pop
xchg
or
mov
push
cli
in
ljmp
cltd
pop
pop
pop
add
adc
scas
or
rcl
stos
rolb
outsl
mov
inc
mov
sbb
push
ret
test
adc
push
push
adcb
sti
ljmp
in
sbb
sub
inc
jmp
mov
out
in
ljmp
dec
xchg
xchg
lds
xor
xchg
lods
test
fwait
imul
push
bound
imul
jno
mov
mov
xor
push
testb
das
fstpt
test
xchg
jb
jns
sti
imul
jg
lret
push
dec
lods
inc
data16
imull
lahf
inc
dec
pusha
mov
mov
xchg
and
cmpsl
popf
sub
push
xchg
adc
sbb
lret
scas
ljmp
pop
insb
push
daa
push
ret
loope
mov
mov
mov
mov
lods
sbb
sbb
jae
xchg
mov
clc
sarl
in
and
sub
ljmp
movsb
xor
lods
jecxz
icebp
cmc
jae,pn
xchg
sar
mov
outsb
subl
sarb
lret
ds
insl
lret
in
jae
movsl
mov
stos
scas
popf
cmc
dec
scas
sahf
xor
in
adc
fstps
pop
push
dec
stc
inc
jp
icebp
mov
xor
incb
inc
movsl
sbb
push
sub
out
clc
stos
scas
mov
sar
pop
pop
cmp
imul
aam
inc
hlt
mov
int
mov
adc
movsb
lock
mov
insb
adc
movsl
inc
mov
dec
mov
or
loop
push
lock
inc
in
mov
mov
mov
jns
and
mov
mov
cmp
push
xor
mov
and
in
enter
rorl
pop
lds
aad
and
fisubrs
push
mov
dec
out
jmp
sbb
xchg
xor
mov
add
aad
or
shlb
adc
stos
pop
std
jge
jp
mov
mov
pop
push
sbb
adc
in
cwtl
xor
scas
or
or
int3
test
into
push
fdivp
fdivr
imul
xor
jg
lret
add
push
xchg
mov
fisttpl
xchg
jno
inc
cmpsl
cmpsb
mov
xor
cltd
mov
int
or
data16
fmuls
shrl
cmp
dec
test
xchg
jno
nop
aam
xor
mov
movsb
sub
ret
incb
push
sahf
popf
dec
jl
adc
test
fdivrs
packsswb
movsl
in
ret
test
mov
inc
pop
lds
xlat
out
mov
enter
adc
sahf
cld
xchg
addr16
inc
xchg
mov
dec
imul
mov
cmp
cld
lcall
lock
lahf
mov
cmpsb
jne
mov
cmp
pop
es
dec
in
inc
mov
outsb
jge
insb
testl
int3
or
inc
and
sti
imul
das
mov
add
adcb
xchg
leave
cltd
insb
sub
leave
sbb
cmpl
add
cmpb
add
ficomps
sti
add
mov
outsl
xchg
push
lds
jg
mov
cmp
pop
dec
cmpsl
and
mov
insb
jno
js
or
aad
inc
stc
sub
fwait
mov
pop
inc
sbb
iret
adc
outsb
cld
mov
and
jnp
lcall
mov
fidivrl
pop
out
push
or
int3
mov
pop
jl
push
cmpb
decb
les
cmp
insl
cwtl
dec
mov
aaa
and
sub
jl
testb
cmpsl
rcr
cmpsl
pop
rorl
sub
insb
stos
gs
dec
mov
imulb
aad
and
pop
mov
fcmovb
ret
xor
or
out
adc
xchg
loopne
push
xor
pop
out
iret
xor
push
sub
in
out
addr16
add
jo
in
lahf
arpl
je
out
inc
mov
mov
imul
outsl
add
or
mov
mov
mull
fbld
jbe
pushf
jl
or
loopne
int3
outsb
mov
jg
pop
rol
adc
or
jno
std
loope
sub
hlt
aas
xchg
fcoml
imul
cmp
imul
mov
repnz
fdivrs
mov
push
or
lcall
pop
nop
imul
mov
jo
es
mov
cltd
add
lock
rcl
xor
xchg
cltd
dec
clc
loopne
push
lahf
xchg
movsb
lret
mov
jne
mov
aam
xor
sub
lcall
jnp
ss
pushf
in
and
es
jmp
add
sbb
mov
xchg
mov
das
cmpsl
inc
dec
and
rcl
outsb
mov
and
lods
sub
jl
hlt
cmpsl
xor
stos
ret
cld
or
pop
es
xor
testl
mov
orl
mov
and
das
mov
xor
in
fnsave
cmp
ret
cmp
popf
rclb
xchg
jmp
add
and
daa
mov
es
test
repz
clc
jmp
xor
xchg
test
mov
subl
jno
test
pop
aad
addl
cmp
xchg
xor
addl
jecxz
daa
jecxz
pop
pop
shlb
divb
loope
dec
push
mov
fldl
es
pop
xchg
pop
and
lret
arpl
scas
or
sub
idivb
adc
dec
outsl
movsb
outsb
daa
mov
cmp
jo
pop
cmp
dec
sub
mov
jne
mov
out
push
and
scas
or
add
sub
pop
jg
and
xchg
mov
and
push
push
das
cvtps2pd
sub
fiaddl
leave
mov
xchg
jmp
inc
xor
hlt
int3
pop
in
xlat
fdivl
inc
jge
daa
xor
xor
cmp
pushf
repnz
sti
or
in
sbb
pop
or
jb
sti
mov
xchg
test
mov
sbb
pop
pop
and
aad
push
aad
cmp
xor
xchg
jnp
adc
adc
sahf
iret
gs
fisttpl
dec
jmp
cs
pop
and
pop
fstps
xor
xchg
bound
push
ss
test
push
daa
push
jl
adc
in
lock
dec
inc
inc
imul
jbe
andb
gs
jbe
cld
test
pop
pusha
dec
mov
int3
mov
inc
loopne
cmp
lret
adc
fcomps
sub
push
and
pop
ret
mov
ja
jno
pop
mov
mov
sbb
pushl
mov
pop
ss
add
dec
test
decb
pop
aam
dec
jo
cmp
les
xor
pop
pop
mov
ret
pop
out
sub
into
mov
jnp
pop
les
popa
das
addb
push
push
js
lahf
add
push
mov
or
cli
xlat
cwtl
ljmp
cmpsl
in
gs
pushf
imul
push
dec
cltd
adc
mov
and
icebp
jge
hlt
test
mov
inc
mov
or
jno
sub
and
mov
adc
lods
pushf
xchg
fiaddl
jbe
pop
pushf
mul
push
mov
je
xor
inc
aam
mov
or
xlat
ret
mov
mov
lods
inc
cmpsb
mov
xchg
mov
aaa
fsts
pop
mov
les
add
lods
les
into
dec
insl
cmp
adc
dec
aad
mov
xchg
imul
pop
push
rclb
mov
lock
xchg
add
cmpsl
lea
and
fsts
mov
stos
fidivrs
adc
add
cmpsl
in
or
push
jecxz
or
lods
sbb
sub
add
insl
inc
lds
pop
ror
daa
sub
add
push
cld
stc
es
mov
push
roll
stc
insl
outsb
idivb
aas
push
daa
pop
in
dec
nop
cmp
dec
lock
cmp
xchg
inc
aam
push
push
int
mov
scas
fdivrp
cltd
jl
mov
xchg
jl
dec
cmp
jg
mov
push
scas
movsb
xor
movd
aad
test
shl
movl
out
mov
aaa
xchg
js
and
adc
jle
sbb
fsubrs
rcrb
ljmp
mov
es
int3
stos
out
cmpb
xchg
in
out
imul
sbb
fs
sbb
mov
and
mov
fs
mov
dec
fwait
out
mov
mov
xchg
cli
sbb
add
xchg
cmp
cli
call
aaa
test
scas
jl
test
dec
aaa
jge
cwtl
mov
in
jg
imul
pop
popa
jns
lahf
dec
js
xor
movsl
in
repnz
inc
inc
add
loope
mov
pop
jno
std
cmp
out
mov
xchg
push
imul
pusha
sti
or
mov
and
mov
push
insb
js
or
jg
imul
pusha
fbstp
cmp
std
mov
test
dec
sbb
roll
je
lret
inc
adc
in
pop
push
dec
out
mulb
and
mov
and
add
cmp
or
lret
es
addr16
jae
mov
mov
inc
repnz
cmp
cmpl
cmc
loop
pop
mov
iret
xchg
iret
adc
xlat
cld
insl
test
adc
mov
in
jb
int
xor
mov
inc
mov
int
or
push
fstl
cmc
add
sbb
dec
inc
frstor
pop
lret
push
sub
pop
icebp
dec
cltd
cmp
cmp
xchg
xorb
xchg
cmp
mov
xor
mov
shrl
ja
adc
jecxz
std
jnp
mov
fildl
or
sti
mov
cld
xchg
mov
insl
mov
iret
inc
mov
loope
mov
aas
cs
mov
sbb
xchg
lock
cwtl
mov
cmc
add
rcl
jne
jno
mov
cmpsl
scas
jb
loop
lods
pop
inc
insl
xor
xchg
push
inc
in
xor
push
lods
and
adc
insl
xchg
mov
shll
sbb
popa
dec
add
pop
push
sbb
clc
lods
add
scas
aam
lret
xor
xor
bound
lock
loope
and
or
and
hlt
cwtl
frstor
test
pop
mov
or
loope
cmpsl
jp
ljmp
sub
jnp
les
jl
adc
and
fistl
insb
mov
decb
push
inc
fcoml
and
dec
cmp
xchg
inc
jae
xchg
adcl
mov
pop
data16
and
cmovl
outsl
push
fsubrl
jo
push
add
insl
jbe
test
xchg
mov
fstpt
pop
dec
call
dec
cld
stos
xchg
adc
dec
dec
inc
aad
xchg
sub
stc
ljmp
frstor
pop
imul
mov
sub
lock
popa
bound
out
mov
scas
mov
fdivs
jmp
pop
inc
xor
testl
lcall
xor
cmp
sti
adc
repnz
movsl
rcll
lock
add
xor
pusha
sbb
dec
jp
outsb
lock
jne
lcall
xor
sub
mov
cmp
aad
mov
and
or
and
scas
xlat
xor
sti
nop
dec
xchg
jb
cmp
mov
pop
fadds
je
xchg
cmp
push
out
or
adc
xchg
and
lods
ret
pop
mov
subb
bound
or
test
cmp
fdivrs
push
xchg
iret
movsl
jns
or
pop
test
shld
mov
das
dec
cmpsb
repz
fidivs
pop
rcrl
leave
mov
test
push
lret
jg
mov
icebp
fimuls
je
mov
sub
fidivl
push
mov
adc
ljmp
lret
mov
xchg
in
jmp
jo
lods
pushf
xor
mov
xchg
cs
into
stos
mov
mov
lahf
mov
xchg
bound
fistps
mov
pop
in
pop
push
or
test
out
cld
loope
loop
sahf
sub
mov
and
cmp
int
sbb
xor
dec
sbb
jp
mov
outsb
aam
lret
sub
sbb
bound
xchg
jge
pop
adc
mov
sahf
pop
frstor
aad
ret
insl
inc
xor
and
mov
repz
xchg
inc
stos
lods
add
push
test
scas
in
orl
daa
or
pop
mov
lea
jno
ss
int3
sub
pusha
into
aas
cmc
jo
fimuls
subl
aas
and
push
shlb
jnp
scas
adc
dec
ss
mov
inc
push
or
sbb
and
mov
ret
je
movsb
fcoms
jns
dec
jns
push
mov
outsb
aaa
pop
enter
mov
gs
les
icebp
lea
pusha
repz
sahf
pop
aaa
adc
inc
dec
jecxz
sbb
cli
xchg
faddp
xlat
xchg
call
leave
xor
sub
push
test
out
jb
lret
xlat
popa
xor
test
pop
arpl
in
mov
xchg
cmpl
push
pusha
repnz
or
jl
dec
inc
mov
lds
push
inc
mov
lds
loop
mov
add
xor
or
mov
sbb
push
hlt
pusha
in
insb
cmp
es
icebp
mov
data16
xor
pop
mov
cmpsl
fwait
mov
ficompl
jp
sbb
pop
mov
es
cmc
fs
cmp
daa
iret
mov
ret
add
test
mov
dec
jb
adc
cmpb
mov
sbb
jae
and
jo
out
scas
and
jnp
mov
mov
aas
mov
call
xor
or
inc
mov
lahf
out
dec
pusha
push
rorb
stc
and
mov
jnp
shrb
xchg
dec
jne
testl
pusha
adc
cmp
test
test
xchg
movsb
xchg
pop
and
lcall
rcll
mov
and
jecxz
repz
notb
loopne
rcrb
lock
cwtl
outsl
pop
pop
xchg
pop
es
xlat
shl
mov
dec
xor
add
xchg
xlat
pop
in
sbb
fistps
out
jecxz
pop
test
push
out
in
testb
lea
jecxz
sub
inc
jp
rcr
test
inc
mov
nop
movsl
shr
in
fwait
insl
popa
cli
mov
in
pop
out
imul
sub
jns
sbb
push
bnd
mov
hlt
into
mov
hlt
faddl
jmp
lds
aad
adc
insb
mov
or
rcr
mov
xor
inc
xor
xchg
lods
clc
out
add
or
test
mov
inc
sbb
mov
lods
inc
lods
xor
in
repnz
mov
ljmp
mov
popa
int3
cmp
ss
cwtl
mov
jbe
sbb
cmp
xor
xor
test
push
mov
mov
fwait
lock
mov
call
xchg
inc
lret
jb
or
pop
aas
mov
mov
push
xorb
xchg
adcl
out
cli
or
int
sub
js
or
mov
lock
mov
daa
jno
js
lds
mov
pop
cmp
aas
dec
fisubrs
adc
jae
addb
std
stos
cmpsb
testb
push
xor
mul
dec
dec
jg
sbb
pop
lea
push
and
aaa
mov
or
rcr
jle
fidivs
ret
std
push
cmc
ror
sbb
les
jae
in
sub
out
lock
outsl
test
ficoml
add
push
insb
les
je
inc
sbbl
gs
rcr
outsb
mov
cltd
mov
mov
cltd
nop
sbb
jo
xlat
mov
adc
js
cli
jns
out
pop
clc
int3
bound
clc
push
movsl
and
inc
mov
jge
test
cli
lds
rcrl
leave
cmp
pop
imul
xor
es
repnz
out
and
mov
lock
pusha
in
imul
sarl
cld
inc
sbb
mov
dec
sbb
xor
daa
insb
jp
jo
xrelease
dec
dec
leave
add
shl
les
fmull
mov
das
cmp
popf
cmpsl
inc
and
add
sub
mov
clc
or
repnz
or
cmp
sbb
sub
xchg
jo
sub
popl
in
fdivl
adc
hlt
mov
mov
push
dec
mov
xor
sub
push
or
or
inc
dec
add
repz
mov
push
xchg
push
in
mov
jbe
push
aad
sbb
mov
pop
jp
push
jae
out
ds
mov
push
int
or
outsl
outsb
jmp
inc
sub
iret
mov
or
xor
adc
or
mov
and
xchg
sti
inc
pop
popf
in
stos
nop
in
sub
sbb
push
cs
mov
leave
add
inc
and
dec
cmp
fldt
jb
rcll
repnz
pop
add
cld
jnp
sbb
adc
jecxz
inc
cs
cltd
jl
mov
aas
fmul
aad
ftst
rcrl
repz
addr16
mov
dec
sbb
lods
outsl
in
aas
test
rcll
mov
cmpsl
pop
jae
outsb
int3
fcomps
outsb
test
pop
dec
icebp
imul
jae
fnsave
les
es
cld
shrl
mov
push
out
aas
jmp
xor
cwtl
lcall
sub
mov
sahf
adc
insl
fisttps
std
xchg
rol
shrb
jae
push
ja
xor
jge
inc
pop
repnz
sbb
mov
adc
and
jp
mov
mov
mov
or
inc
xchg
movsb
add
sub
fwait
pop
push
and
mov
idivb
out
sub
dec
xchg
lds
cmpsb
call
cmp
dec
cli
xor
inc
and
push
stos
mov
pop
out
test
mov
sub
out
xchg
int
sahf
in
rolb
std
test
fwait
insb
jnp
insl
push
sbb
xor
pop
lcall
clc
sub
jle
cmp
insb
leave
pop
and
cli
inc
imul
pop
daa
adc
pop
cld
push
sahf
sbb
jmp
mov
outsb
lret
or
sbb
cli
xchg
imul
adc
push
leave
fucom
adc
inc
pop
or
loopne
mov
js
and
inc
lret
inc
adc
mov
sub
sub
lods
outsl
into
xor
test
push
ja
mov
mov
out
pop
loopne
mov
and
push
divl
jle
or
pop
test
std
jns
clc
mov
and
xchg
in
negl
imul
adc
lods
dec
out
out
mov
add
das
push
xor
sub
jbe
dec
and
sub
sahf
pop
scas
or
fisttpll
push
xchg
jmp
adc
xchg
dec
pop
add
dec
pop
cld
jmp
dec
ljmp
repz
xor
stc
sub
mov
and
mov
xlat
xorb
xchg
mov
iret
inc
popf
or
push
jnp
movsb
insl
das
rcll
mov
cmp
out
mov
insb
lods
push
scas
movsb
fs
nop
mov
rclb
inc
sub
movsb
xor
ret
adc
mov
or
inc
sbbl
adc
dec
dec
mov
xchg
dec
mov
incl
sbb
es
cmp
push
jb
arpl
in
pop
sub
mov
ljmp
inc
xchg
lahf
push
pop
sub
sbb
xchg
jb
push
push
stos
sub
into
xchg
cld
add
lcall
mov
lret
mov
out
adc
mov
push
out
lds
push
jl
int
aam
sub
imul
ret
push
call
jge
adc
xor
cmovge
lods
pop
adcl
movsl
adc
hlt
fimuls
lea
jns
mov
shrl
lock
outsb
jns
mov
loope
shlb
cwtl
icebp
iret
sub
ja
pushf
add
out
out
mov
rolb
insb
aad
popf
xchg
enter
ds
jno
or
shll
negl
lret
repnz
sti
loop
sub
fiadds
xchg
jb
in
lea
pop
imul
cli
mov
sbb
push
rorb
or
mov
decb
iret
pop
push
fisubrs
hlt
dec
in
fdivl
mov
adc
arpl
mov
nop
dec
pop
dec
pop
xchg
bound
rcr
pop
cld
shll
movups
sarl
dec
mov
lds
repz
mov
pop
stc
and
pop
pop
out
mov
and
push
das
pop
push
cmp
sbb
bound
int3
cmpsb
push
hlt
mov
mov
pushl
fcom
lret
mov
lret
cmc
loope
loopne
or
in
das
xchg
enter
sbb
add
push
cmp
sub
rorb
jns
mov
aad
and
add
lret
int
sbb
add
jo
cld
std
divl
jmp
xchg
mov
jp
xchg
add
scas
add
mov
das
jns
mov
lea
lret
js
or
in
inc
in
pop
jb
or
xor
jle
lods
xchg
loope
pusha
xchg
es
jp
dec
addr16
popf
popa
jmp
js
jle
xchg
lods
or
into
inc
jle
sahf
xor
jl
aaa
pop
ret
sahf
pop
shlb
dec
cmp
das
mov
outsl
inc
cmp
je
jnp
fisubrl
ss
dec
mov
lock
cltd
icebp
bound
enter
jae
inc
push
push
lods
jmp
out
stos
rclb
lds
dec
mov
nop
dec
nop
cmc
cmp
mov
mov
fadd
sbb
popa
cmp
insb
xor
out
hlt
xchg
enter
mov
pop
cmp
xor
stos
pushl
ljmp
repz
or
sbb
andl
xchg
add
movd
pop
xchg
in
cmp
loop
movsl
sub
scas
dec
or
in
les
data16
scas
dec
and
xchg
mov
aam
mov
xchg
ds
into
jo
dec
call
int3
push
les
out
in
scas
xchg
or
pop
or
sbb
add
mov
dec
lds
into
test
scas
cmp
out
std
ret
sti
jp
or
daa
jg
aas
testl
xchg
fldcw
push
sub
cs
jns
fs
pop
xor
push
mov
lahf
fmul
sbb
push
icebp
fcoms
out
sub
xor
sbb
xchg
sub
insl
push
ret
test
loope
adc
ficoml
out
pop
ljmp
addr16
pushf
les
adc
inc
aaa
adcl
xor
cmp
int3
lds
mov
or
subb
cmc
lods
jecxz
xchg
push
sub
orl
lret
movsl
or
repz
outsl
sub
jnp
jae
sub
orl
sub
pushf
xchg
mov
fcomps
mov
loope
jo
push
sub
jp
jne
mov
jge
sbb
xchg
jnp
xchg
add
mov
roll
das
das
sbbb
std
jp
inc
mov
cmp
or
inc
sbb
xchg
mov
cmpsl
add
lret
dec
sub
pop
aas
xor
add
adcb
mov
mov
push
push
ret
adc
jae
mov
int
mov
push
int
inc
jge
mov
shlb
push
vpshuflw
jnp
lods
xor
test
in
mov
outsb
rclb
lds
cmp
or
mov
sahf
pop
push
ret
mov
mov
cmove
cmp
mov
call
decl
out
fs
cmp
xor
add
gs
cmp
loopne
xor
sbb
cmpsb
sahf
in
loope
test
xchg
repnz
out
icebp
in
and
or
dec
sbb
add
xchg
sbb
lods
movsb
sbb
daa
jmp
rcll
pop
add
jae
mov
adc
add
inc
pop
stos
popf
pop
xchg
mov
sti
ja
push
pop
adc
aas
mov
negl
xchg
jbe
jnp
je
out
pop
das
jbe
sub
out
and
sub
in
or
mov
jmp
stos
adcb
popf
pop
dec
pop
nop
std
jmp
fnstsw
dec
push
loope
into
fistps
xchg
pop
lods
movsb
jbe
mov
push
int3
fistl
bound
push
ficoml
ficoms
or
stc
into
loop
mov
gs
mov
xor
pop
add
mov
jl
lds
in
mov
dec
orl
lods
sbb
int
cmc
mov
mov
xor
push
mov
leave
mov
movsb
pop
pop
pop
jmp
or
cs
aaa
mov
add
lahf
mov
mov
mov
out
jnp
aaa
dec
lock
out
jg
test
sbbb
pop
jle
aaa
repz
sub
shll
dec
xchg
push
int3
lret
repnz
in
lods
nop
and
ja
mov
andb
scas
jne
xchg
jns
movsb
ret
rorb
sub
aas
xchg
mov
mov
gs
arpl
orl
lods
scas
sbbl
dec
test
movsb
pop
sub
loopne
lahf
lock
mov
shlb
mov
jg
nop
lret
sahf
ljmp
cmp
jp
rorl
mov
push
mov
enter
mov
sar
jbe
mov
mov
xchg
lcall
cmp
sbb
cwtl
sbb
jbe
sbb
pushf
dec
popf
xlat
cmp
jl
sbb
test
mov
jo
lcall
ret
pushf
inc
icebp
xchg
in
mov
aas
jg
mov
xchg
xor
lret
imul
lret
pop
sub
dec
lahf
fsub
rcrl
sbb
test
lahf
repnz
lcall
sbb
mov
scas
xor
and
daa
mov
sbb
xor
subl
pop
or
clc
mov
dec
cmp
subb
das
xchg
xor
adc
loop
cmp
cmp
xor
inc
jo
pop
call
sti
sbb
jae
pop
test
and
arpl
jo
test
or
lahf
pop
pop
push
imul
xor
lods
icebp
imul
push
mov
rorl
mov
je
push
pushf
in
dec
dec
das
jmp
clc
mov
jmp
dec
lcall
imul
cmpl
cmp
dec
sarb
jno
hlt
sbb
fwait
xor
xchg
jg
pushf
pop
push
in
mov
out
movsb
out
pop
stos
ret
clc
jg
stos
inc
loope
andl
xchg
dec
sbb
jb
xchg
out
div
notb
test
fisubl
jp
ja
mov
xchg
mov
rcrl
adc
sub
push
shl
xlat
movsl
test
imul
in
sti
xchg
in
adc
push
mov
add
scas
sub
bound
ret
out
dec
outsl
mov
stos
dec
fmulp
jl
mov
mov
test
sbb
test
add
pop
push
lcall
js
outsl
xlat
xchg
fmuls
mov
cmp
push
ret
mov
pop
add
out
mov
pop
dec
insb
cmp
sahf
or
loope
push
sbb
mov
cmp
out
jge
xchg
es
or
cmpsb
fbstp
or
sarb
fsqrt
inc
inc
outsb
and
push
shr
add
mov
call
dec
or
test
inc
or
push
xchg
mov
pop
dec
mov
xchg
mov
fnstenv
mov
das
cmp
cmp
push
int3
add
xchg
fs
mov
xchg
and
mov
lahf
fwait
imul
jnp
mov
push
push
xchg
ret
fs
cmc
fildll
jmp
mov
mov
add
sub
sbb
in
lret
mov
test
repz
mov
xchg
add
mov
xor
mov
xor
jo
fwait
mov
ret
fwait
cmpsl
adc
je
xchg
mov
lock
int
add
sbbb
fwait
int
cmp
xor
imul
mov
mov
mov
addl
sti
andb
mov
fbstp
js
test
idivl
das
fadds
frstor
and
sbb
iret
jecxz
or
mov
jecxz
mov
lock
std
add
mov
cmc
pushf
mov
cs
mov
dec
movsb
outsb
test
push
adc
rclb
sub
pop
nop
jb
adc
call
mov
fucomip
sahf
push
testb
mov
fnsave
in
mov
popa
pop
cmp
and
mov
lock
fiadds
jb
sbb
push
inc
xchg
adc
nop
cmc
sub
rol
xor
int3
imul
or
icebp
pop
mull
pop
inc
int
popf
cmp
jmp
icebp
mov
gs
int3
fcmovnb
cmpsb
push
cmpsl
xor
xchg
mov
ret
inc
pop
dec
sub
mov
movsl
inc
or
adc
cmp
test
jmp
jge
fadds
cmc
dec
or
loopne
push
mov
cvtps2pd
add
xor
inc
test
jecxz
dec
aaa
fsubp
fistl
cmp
xchg
xlat
xchg
xchg
xchg
cltd
addl
mov
cmp
xchg
and
imul
sub
shrb
repz
push
cmp
fnstcw
std
jnp
pop
xchg
dec
sub
shll
mov
mov
cmp
or
call
jmp
xchg
test
add
repz
add
lcall
cltd
cmp
pop
aas
jmp
outsl
mov
cli
filds
sub
stc
rcl
loopne
jp
sbb
int
pusha
inc
add
loop
iret
sti
rolb
subl
or
aam
test
outsl
insl
daa
cmp
push
mov
mov
jno
addr16
cmp
ljmp
nop
pop
push
mov
xor
out
xchg
test
mov
fidivl
mov
and
pop
cwtl
xchg
test
mov
pop
dec
rcrb
daa
lods
pop
xor
xor
nop
out
jns
fistl
das
lock
and
test
cmp
sarl
fsubr
push
lahf
dec
mov
inc
mov
fbstp
cmp
into
add
push
pop
fiadds
xor
fdivrl
cmp
dec
push
loope
and
stc
sbb
and
jl
iret
xor
rolb
mov
insb
orb
faddp
add
cld
das
and
das
pop
jmp
das
cmpsb
fsts
xchg
shl
sbb
mov
mov
sub
ljmp
test
jmp
fwait
in
cmp
das
add
in
pop
mov
fldt
add
shlb
and
cmp
xchg
pop
test
rcpps
push
push
std
mull
dec
loopne
sbbb
and
in
sets
stos
loope
clc
into
push
rcll
mov
lcall
test
jg
sbb
ror
cmp
cmpl
in
cmp
cmp
loopne
mov
xchg
call
outsl
push
mov
jle
push
out
adc
mov
arpl
fcmovnbe
mov
xchg
inc
clc
cs
loop
dec
aam
mov
clc
movsl
or
cmpsb
dec
jle
nop
test
sahf
pusha
xor
adc
sar
testb
imul
xchg
out
outsb
jmp
mov
test
stos
add
dec
cmp
cmp
ret
sahf
jp
xchg
add
mov
sbb
pop
sti
adc
frstor
sbbl
pop
das
lret
andb
sub
iret
sub
push
cmp
xchg
aam
dec
test
fcmovne
or
mov
lds
hlt
mov
mov
cmp
sbb
xchg
jl
int
xchg
jle
xor
sub
lods
jnp
or
arpl
test
pop
add
subl
pop
jle
fisubrl
movsl
or
sub
mov
mov
data16
jmp
pop
imul
adc
out
sti
push
je
pop
fiadds
dec
inc
outsl
fs
mov
mov
fimuls
addr16
int
dec
notl
add
in
or
out
jo
scas
repz
xor
adc
inc
addr16
arpl
sbb
sbb
or
aaa
fxch
pop
popf
sbb
pop
push
popf
les
sub
stos
scas
sub
cmp
dec
mov
add
and
fildl
arpl
jnp
ljmp
outsl
push
leave
shrl
push
data16
out
jo
or
cmc
jae
mov
pop
push
sbb
jge
out
out
dec
ss
je
arpl
test
das
pop
jle
leave
sbb
or
shrb
dec
test
gs
mov
xchg
mov
rcrb
push
fs
fcoml
ficompl
stc
repnz
stos
aam
adc
lds
loop
push
inc
gs
popl
ljmp
jp
insb
inc
xor
popl
ss
repnz
inc
aam
push
push
dec
xor
pop
mov
lea
lret
add
fisttpll
jb
loop
push
pop
jbe
stos
push
pop
mov
mov
mov
sub
negl
xchg
mov
jmp
mov
sbbb
ret
outsl
cmpsb
or
jg
sbb
jae
jg
dec
adc
addr16
daa
sbb
jle
xlat
inc
addl
test
inc
sbb
dec
sbb
aam
addb
mov
in
leave
mov
jo
sub
in
sbb
dec
ja
int3
xor
out
xlat
dec
bnd
jae
fldl
fstps
mov
sub
mov
mov
inc
out
push
mov
movsl
cltd
scas
lods
ret
sbb
icebp
ljmp
mov
orb
sub
ja
mov
mov
outsl
jmp
xchg
stc
inc
dec
mov
mov
in
les
mov
out
dec
fwait
nop
stc
inc
xchg
icebp
inc
repnz
mov
hlt
inc
iret
lcall
nop
sbb
cmp
inc
leave
rcrb
cmp
mov
ret
shlb
push
adc
xor
mov
inc
mov
inc
loope
out
test
lea
inc
push
inc
xchg
sub
in
nop
mov
sub
jg
or
push
push
sub
lret
ljmp
sti
loopne
and
or
in
and
popa
and
sub
jnp
cmp
arpl
fisubrl
lds
mov
scas
sarb
push
insl
adc
mov
fs
xor
inc
out
data16
sub
sbb
mov
mov
iret
sbb
dec
dec
lods
add
jle
mov
inc
sub
add
or
pop
pop
mov
insb
jo
mov
jg
dec
cmp
add
adc
decb
mov
jecxz
aad
enter
jl
inc
and
add
cmp
lods
pop
xchg
addl
mov
or
pop
fwait
std
lahf
loopne
lds
fcompl
bound
jnp
sbb
cmp
pop
nop
int
das
dec
sub
js
fimull
cltd
push
push
xchg
notl
pxor
cmpsb
mov
push
mov
sbb
ja
fdivrs
shlb
dec
leave
xor
cld
clc
sti
shrb
outsl
cwtl
cmp
and
cmp
dec
sub
pop
repz
jo
dec
add
inc
lock
adc
cmp
ficoms
ss
into
push
icebp
lods
inc
mov
jb
sbb
adcb
orl
cs
push
mov
pushf
push
adc
lcall
scas
pusha
inc
inc
aam
xchg
inc
psubsw
rcrl
lret
lods
mov
cmp
adc
adc
mov
xchg
mov
and
cmc
sbb
lcall
push
aas
fs
cmc
movsb
insb
mov
jno
pop
push
icebp
cmp
sahf
imul
iret
fmul
lcall
jl
cmc
repz
push
dec
mov
inc
sar
jge
jae
xchg
cltd
std
mov
pusha
icebp
sahf
or
inc
sub
leave
dec
mov
inc
xlat
ret
in
push
mov
stos
and
movsl
pushf
test
sbb
xchg
add
cwtl
jbe
push
imull
in
aam
dec
push
mov
fcmove
insl
and
rorl
call
cmp
push
jne
in
cmp
iret
andb
out
jg
add
out
in
sub
adc
and
int
xor
aaa
rcr
push
gs
mov
jecxz
and
push
loope
pop
inc
in
out
add
pop
ret
and
arpl
xchg
add
test
pop
std
fimull
adc
add
lods
leave
jl
insl
xlat
cmc
rorl
cmp
jb
xlat
cmpsl
xchg
repnz
cmp
insb
das
pop
mov
sbb
xor
push
test
push
inc
mov
rclb
mov
popf
cmp
rcr
push
test
cmp
addr16
movsl
fs
mov
fists
in
mov
imul
shlb
movsl
xchg
and
jle
ret
pop
cmp
lods
outsb
fldenv
inc
inc
sahf
es
sub
sub
pop
xchg
cmp
mov
cmpl
jns
subl
jne
or
mov
data16
pmaxsw
push
das
lcall
nop
negb
aas
mov
add
or
cmp
daa
mov
mov
call
into
or
ret
stc
dec
dec
std
aad
mov
cmp
xchg
incb
xchg
int3
jp
xchg
pop
mov
push
xor
outsl
pop
call
pusha
inc
lcall
shll
ds
sub
dec
mov
cmpsb
shll
push
insl
mov
jmp
jns
xchg
and
addr16
cmpsb
or
lods
stc
dec
mov
mov
andl
mov
or
cs
out
add
xor
ljmp
sbb
jnp
outsb
std
xchg
clc
in
fisttpl
imul
mov
mov
cltd
mov
cmp
jo
addr16
pop
das
in
out
xor
fwait
mov
xchg
gs
arpl
mov
xchg
xor
std
adc
jle
mov
mov
lods
cmpsl
pusha
mov
dec
dec
testb
jo
stos
int3
jo
shll
stc
scas
pop
rcl
cmp
sti
xor
xlat
add
imul
mov
mov
jmp
test
or
inc
sbb
sbb
jbe
and
out
fiaddl
sub
mov
sub
fiaddl
repz
push
inc
daa
xor
sbb
dec
cmp
dec
pop
int3
out
push
dec
mov
add
dec
xchg
dec
mov
jle
jmp
dec
lret
sahf
cmp
inc
arpl
jg
shl
adc
aas
jle
in
arpl
mov
dec
adc
pushf
xchg
mov
or
stos
jmp
movsl
sub
test
imul
adc
inc
out
mov
xor
adc
inc
in
and
mov
stc
inc
sbb
fbld
xchg
xchg
test
aad
mov
pusha
sahf
pop
mov
mov
push
push
dec
cmp
dec
mov
add
aam
mov
incl
rorl
lahf
out
jb,pn
cwtl
cmp
shrb
inc
sub
mov
aaa
sub
sbb
inc
mov
lret
sub
test
add
mov
mov
je
ss
test
xchg
ja
int
or
hlt
cmp
xor
mov
call
ret
pusha
mov
aad
out
call
adc
xor
jg
add
jmp
cmc
loope
adc
or
push
cmpl
xchg
aaa
hlt
xor
or
aam
lret
test
mov
loope
dec
or
cmp
fisubrl
popf
mov
sbb
scas
mov
xor
or
std
mov
daa
pop
std
or
imul
push
jne
or
push
sbb
out
xchg
jecxz
mov
mull
gs
leave
sub
xor
lcall
mov
enter
jecxz
daa
mov
aaa
pop
jae
pop
dec
pop
jnp
aad
xchg
and
xchg
and
test
dec
scas
xor
inc
out
lods
push
mov
scas
es
jb
inc
xor
fwait
push
testl
insl
mov
xchg
or
adc
mov
adc
jg
shll
xor
stos
test
mov
jl
aad
fistps
in
and
je
loope
das
pop
shrl
cmpb
xchg
dec
mov
or
test
pop
jle
test
outsb
xchg
mov
xchg
or
or
cld
ljmp
push
leave
push
mov
add
stos
cmp
cmc
popf
jnp
push
adc
add
insb
push
sbb
mov
fucomp
add
hlt
dec
mov
je
aas
or
bound
in
jbe
test
into
fistl
movsb
cltd
ss
or
cs
adc
test
cmp
out
pop
jne
div
addr16
popf
inc
in
push
in
lds
inc
lods
movsl
outsl
ds
mov
mov
out
push
fists
lods
insb
add
pop
out
int
mov
popa
lcall
inc
dec
pop
pop
sarl
mov
cmc
testl
movsb
out
inc
xchg
sbb
leave
aas
pop
cmp
jnp
cmpsb
fsubrs
xchg
ret
cmpsb
rcrb
lods
repz
dec
adc
fsubl
out
arpl
cli
or
sahf
in
fistps
cmc
mov
xor
push
jbe
shll
jge
xor
dec
cmp
ret
popf
xor
sbb
cmp
jns
rcrl
loopne
mov
mov
lods
ljmp
pop
in
adc
dec
push
bound
pushf
push
sub
dec
jns
xor
int
inc
imull
xor
xchg
decl
rcll
jne
xor
mov
dec
dec
pusha
ss
imul
push
pushf
push
sbb
les
sbb
jno
lock
fisttpl
pop
hlt
sbb
insl
inc
pop
add
scas
dec
fdivs
lds
jge
out
loop
xchg
cmp
dec
or
push
sbb
loop
adc
mov
push
imul
jae
int
xor
xlat
xchg
cli
mov
sub
lret
aas
scas
lods
aas
mov
add
aaa
jmp
aad
sub
ja
pop
dec
je
add
stos
sub
push
and
cmp
imul
std
lret
outsl
xor
fsts
xchg
aad
jg
sahf
imul
test
shrl
jno
xor
mov
xchg
pop
es
adc
pusha
stos
aad
mov
and
and
jge
ss
push
in
je
inc
push
xchg
push
xchg
stos
xchg
out
add
int3
lcall
mov
sub
or
rcll
push
sbb
shlb
popa
xchg
aas
outsb
ret
leave
cld
arpl
lea
js
test
pushf
mov
fmull
rcrl
mov
pop
bound
fcoms
mov
or
xchg
pop
test
sub
xlat
pop
pop
orl
outsl
cmp
xchg
mulb
ja
lahf
shl
push
insb
xchg
dec
and
test
repnz
arpl
jne
mov
push
in
nop
mov
sbb
aad
stos
mov
sarl
or
cmpsb
cmp
inc
mov
and
mov
ret
dec
add
adc
and
pop
or
inc
rcl
pop
pop
fistl
mov
daa
rcll
pop
adc
pop
ret
test
roll
mov
clc
movsb
in
sub
cs
iret
ficompl
gs
inc
sub
sbbb
add
pop
xor
or
insl
int
cli
mov
cld
aam
adc
aas
gs
sbb
insb
jge
data16
in
fmuls
iret
xor
cmpl
fmull
and
sub
scas
xchg
ficoms
shrb
les
rolb
inc
rolb
dec
int
adc
in
or
xchg
dec
ficomps
jmp
test
add
shl
rcrb
dec
out
subl
ret
mov
mov
mov
inc
data16
ja
jmp
stc
push
cmp
push
or
dec
push
call
push
pop
insl
add
or
js
out
repnz
sub
cltd
and
sahf
inc
or
cmc
notb
adc
xchg
sbb
push
or
cmp
push
sbbb
stos
negb
mov
aad
pop
test
rolb
cmp
cmp
in
jmp
dec
xor
mov
inc
lea
lret
clc
sbb
aaa
mov
scas
rcrl
fdiv
add
xor
sub
cld
in
jp
fildl
push
decb
push
jmp
jnp
nop
push
sub
lods
shr
rcr
add
cmp
iret
adc
dec
add
mov
jge
jbe
das
cmpsb
in
aaa
sub
mov
push
mov
mov
jp
xchg
mov
jecxz
dec
test
add
in
mov
in
jecxz
push
inc
shlb
sub
mov
les
push
adc
xchg
add
cmp
lret
push
pop
mov
mov
push
dec
out
sbb
pop
test
inc
das
sub
cmp
shlb
cmp
add
test
mov
out
arpl
shll
mov
jle
mov
lods
push
dec
dec
cmp
mov
in
jb
or
fcmovbe
lahf
scas
jg
cmpsl
cs
imul
mov
fcompl
adc
out
jo
jne
loopne
jb
aas
repz
cmp
cwtl
ljmp
xchg
pop
xor
aad
cltd
ja
push
push
xor
jnp
mov
pop
xor
jno
test
in
jno
push
jl
out
mov
pop
imul
fcompl
push
shr
adc
and
inc
jmp
push
cwtl
xorb
lret
addr16
stos
jle
faddl
or
lea
inc
sahf
imul
jmp
dec
mov
popf
in
mov
mov
sbb
test
xchg
repz
mov
lods
movsb
roll
scas
mov
jp
pushf
mov
mov
mov
insb
popa
mov
push
pop
sub
push
mov
cmc
aad
xchg
inc
or
or
test
push
ss
icebp
mov
movsb
push
add
loopne
loope
loopne
subl
repnz
cld
xor
dec
push
jo
cmp
jecxz
jge
jbe
jb
cmp
push
xchg
fnstcw
jle
das
jl
jle
sbb
xchg
das
inc
loopne
dec
jbe
pop
cmp
imul
push
movsb
or
nop
cli
xor
ljmp
pop
leave
mov
test
jl
and
jmp
sub
and
call
imul
pop
pop
clc
cli
jno
lret
add
pop
les
inc
jp
stos
out
or
lahf
and
xor
lcall
in
gs
adc
xchg
mov
pop
sbb
adc
adc
fdivrp
sbb
sti
push
add
enter
add
inc
mov
repz
pop
push
mov
pop
push
fmul
les
outsl
sbb
mov
fistl
xchg
ljmp
ljmp
xchg
bound
iret
mov
dec
ja
pop
andb
and
jb
fisttpl
xchg
dec
pop
push
lret
std
sahf
pop
mov
add
lods
seta
lods
subl
xchg
mov
repz
sub
mov
gs
lods
cmpsb
adc
das
scas
xchg
mov
push
mov
sbb
leave
pop
adc
jbe
pop
mov
enter
shll
push
pop
push
outsb
adc
mov
xlat
add
scas
push
sar
cmp
pop
enter
lcall
lods
stc
add
sti
mov
stos
sbb
pop
icebp
jae
insb
add
sbb
mull
or
sub
cmp
dec
cmp
aam
imul
enter
mov
mov
add
mov
mov
lods
xchg
push
out
mov
adc
sub
fstl
mov
in
int
sbb
push
cmpsl
test
idivl
das
in
icebp
mov
xchg
outsl
fdivl
jmp
pop
inc
rcll
cs
mov
js
daa
fcmovbe
jno
or
push
hlt
mov
jae
mov
push
mov
stos
and
out
shll
add
rolb
repz
rcll
pop
rol
push
fs
and
hlt
shrl
outsl
jb
fsubr
jl
leave
rorb
mov
jle
inc
mov
out
xchg
lock
jnp,pn
cmp
mov
imul
ja
dec
sbb
xchg
shrl
lret
in
cwtl
cli
clc
loope
xlat
push
sahf
and
push
lret
push
test
lods
stc
sub
je
jbe
sub
ja
cltd
ds
insb
lds
jb
mov
outsl
ret
fldt
insb
xor
push
push
add
and
sub
jmp
add
inc
jae
dec
subb
push
or
cmp
mov
mov
jo
adc
or
mov
out
arpl
call
popa
mov
push
sti
sub
icebp
lcall
jmp
in
xchg
xchg
ret
repz
fstpt
sub
adc
cmpsb
scas
mov
mov
cmp
fistpll
adc
jae
inc
pop
cltd
or
enter
push
mov
dec
outsb
negb
inc
cs
ljmp
dec
ret
iret
es
mov
sti
add
mov
es
pop
sbb
fiaddl
rorl
lds
movsb
dec
xchg
jp
inc
in
push
je
and
mov
push
jmp
imul
data16
sub
dec
rcll
pop
push
push
mov
sbbb
mov
or
xchg
arpl
jmp
pop
sub
sbb
cld
xor
int
push
adc
imul
out
shl
cmpsb
out
push
push
enter
inc
aas
sar
inc
mov
inc
stos
mov
sbb
adc
sub
stos
push
into
aad
sbb
xchg
and
lock
ds
pop
and
xor
xchg
jl
xchg
popa
cs
dec
jp
addr16
push
cmp
into
aas
or
push
jne
loopne
iret
adcl
add
inc
jne
inc
repz
or
ljmp
daa
cwtl
push
push
rorl
pop
imull
pop
mov
jecxz
sub
mov
or
mov
pop
popa
jmp
dec
sub
les
ret
je
and
inc
mov
inc
pop
sub
ud1
or
out
outsl
ficoml
xor
mov
sbb
mov
in
cs
sti
xor
push
mul
push
aam
sbb
inc
fneni(8087
movsl
pop
fildl
ds
sbbl
in
enter
cs
mov
cmp
popa
pop
adc
push
out
mov
call
dec
xor
cmpl
rorb
adc
mov
hlt
jno
int3
or
sub
pop
je
add
addl
lahf
out
ret
sbb
ficoms
lds
xlat
rcrb
movsb
inc
enter
jg
jmp
shl
cmp
dec
mov
data16
out
xchg
cwtl
pop
std
xlat
push
push
lret
mov
das
daa
shlb
pop
test
jg
cmp
sub
mov
sbb
mov
mov
inc
movsb
and
mov
stos
adc
mov
cmp
add
sti
mov
int
in
jbe
rorl
and
mov
popf
jo
adc
jmp
adcl
pushf
inc
mov
inc
jnp
repz
popa
scas
shl
insl
cmp
lret
or
jne
ret
inc
jg
mov
jbe
push
out
movsb
mov
inc
fcoml
in
adcl
loopne
rorb
adc
push
mov
repz
mov
xchg
arpl
insb
pop
sti
cmp
inc
add
cmp
cmc
push
shrb
pushf
push
mov
inc
jbe
xorb
inc
mov
or
mov
stos
into
push
ret
mov
aas
outsl
xchg
push
pop
int
dec
and
shll
leave
shlb
cmpsb
lods
adc
ljmp
jnp
stos
xlat
jae
adc
insl
data16
pusha
fnstcw
dec
inc
adc
roll
loopne
in
or
mov
arpl
dec
pop
mov
sub
mov
rcll
stc
sub
jo
and
and
out
fadds
ljmp
xchg
call
xchg
inc
into
repnz
pop
jbe
cmp
jbe
sub
sarb
pusha
xor
mov
pop
mov
int
mov
movsl
inc
xor
push
test
fs
mov
mov
sbb
jne
sti
call
lock
out
ljmp
sbbb
sbb
insl
fs
mov
inc
dec
cmc
and
daa
mov
lret
push
pop
sbb
pusha
xchg
adc
mov
mov
mov
cltd
mov
cltd
push
pushf
push
repz
lret
sub
iret
or
sbb
bound
imull
pushf
cmc
xchg
movsb
int
or
xchg
push
mov
repz
pop
fsubs
push
push
mov
jl
popf
ljmp
dec
xor
mov
xchg
inc
bound
es
cld
inc
mov
lcall
rolb
adc
mov
jo
sub
and
and
in
adc
arpl
mov
fsts
cmp
push
insb
jmp
sub
xchg
sbb
imul
jb
inc
mov
dec
dec
xlat
or
mov
mov
lahf
inc
sbb
sbb
test
ret
jle
hlt
mov
inc
or
sub
and
jge
addr16
pusha
jmp
cmpl
push
lock
lods
ja
lahf
pop
jno
repz
cmpb
push
pop
jb
out
jg
bnd
das
xlat
pop
jecxz
pusha
xor
lret
ret
hlt
lcall
out
and
in
mov
cmp
bound
rcrl
sbb
shlb
fiadds
imul
xor
push
lret
or
fldenv
fcomps
shl
sub
loope
push
ds
call
sub
pop
push
clc
cltd
fnsave
or
sbb
pop
and
xchg
shll
inc
adc
fildl
test
inc
fs
lret
rcl
out
and
push
push
clc
fwait
or
xor
adc
aam
xchg
pop
dec
sbb
dec
cmp
cmp
imul
ret
dec
push
xchg
aaa
cmc
mov
sarb
popf
lods
mov
outsb
xor
nop
or
xor
gs
jmp
fisttpll
cmp
sahf
faddl
faddp
mov
xor
cmova
lret
call
leave
sti
fisubrs
jge
sub
or
sub
dec
pop
stc
pop
inc
int
ljmp
call
cmpsb
xor
out
iret
mov
js
ret
in
xchg
mov
dec
fwait
stos
mov
subb
pop
sahf
hlt
add
adc
sub
daa
sti
out
shl
mov
addr16
movsl
andb
ljmp
mov
pop
inc
push
shl
testl
sbb
test
insb
adc
mov
pusha
add
or
inc
adc
xchg
jge
mov
pop
xor
push
rcr
imul
sub
add
sahf
sub
test
or
shlb
fsubrs
inc
pop
dec
xor
dec
mov
sarl
cmp
mov
rclb
jae
sub
cmp
fs
jae
sub
jl
adc
xchg
pop
xor
and
cmc
xor
xorl
movsb
shlb
inc
fsubl
pop
cmc
pop
hlt
and
lret
mov
std
fs
ret
adc
xchg
inc
inc
movsl
repz
frstor
mov
inc
pop
stos
sti
orps
ss
jp
jg
roll
sbb
adc
push
std
test
or
and
out
inc
sbb
pop
in
ret
dec
out
test
xchg
dec
add
xchg
mov
rcll
leave
pusha
js
int
jb
out
out
push
inc
dec
lcall
movsl
ljmp
sti
shlb
push
call
fcomip
push
sub
popa
shl
push
push
add
test
mov
mov
mov
bound
inc
push
mov
lea
pop
add
fstpt
ja
mov
mov
pushf
mov
sbbl
add
add
mov
into
sbb
mov
lods
pop
dec
in
adc
push
outsb
movhps
iret
lcall
xchg
push
and
fwait
or
pop
adc
addr16
xor
add
add
ret
xchg
call
aaa
into
mov
mov
inc
lods
out
adc
inc
cmp
in
mov
push
xchg
xor
icebp
mov
outsb
fs
fildl
xchg
push
sub
repz
inc
stc
cmpsl
lcall
shll
xchg
xor
xchg
jo
mov
mov
mov
push
xchg
jp
mov
es
pushf
lds
xor
out
or
test
pop
mov
mov
or
add
add
out
test
call
or
ds
dec
sahf
inc
jno
out
jmp
mov
lcall
and
xchg
cmp
pop
call
xor
mull
test
jmp
js
sar
lock
mov
sbb
xor
repnz
xchg
subl
lcall
imul
sbb
jb
sbb
gs
or
adc
shll
xchg
xor
pop
sbb
or
push
dec
adc
cmp
and
and
pushf
push
cwtl
mov
lret
aam
icebp
jp
addr16
incb
repz
sahf
push
push
jecxz
mov
fcoml
add
cmp
push
mov
ds
js
xchg
jb
add
add
ficoml
mov
add
fucom
sbb
push
mov
pop
push
pushf
cmp
jno
cmpsb
and
push
fdivr
ret
sub
out
subl
or
hlt
jl
adc
cmp
ljmp
or
cmp
ss
jp
xor
ljmp
xor
push
xor
vpcomuq
xchg
movsl
fstpt
adc
call
pop
jmp
adc
pusha
int3
jle
test
inc
test
xchg
pop
jne
adc
pop
ljmp
scas
pop
pop
pop
mov
fisttpl
push
jmp
sbb
jb
or
jne
fistps
push
lods
repz
bound
or
pushf
das
pop
arpl
test
jp
sub
cmp
mov
repz
inc
pop
icebp
movsl
mov
in
cmp
jp
inc
xchg
dec
push
jnp
enter
pop
movsl
jl
rcll
or
cmp
dec
lea
fildl
mov
aad
sub
cmp
mov
les
jns
into
mov
shr
add
dec
dec
hlt
loope
daa
mov
push
rcll
add
cmp
pop
push
jae
dec
jo
aam
mov
roll
jnp
jl
inc
xchg
push
mov
in
dec
ret
lock
cli
ret
test
dec
sti
xor
cmpsb
inc
jns
or
pop
shrl
xor
pop
fucompp
pop
xor
stos
mov
lea
jg
aaa
sbb
in
dec
pop
mulps
in
pop
cmp
test
ds
vpsrld
int
outsb
push
fimull
lcall
fisttpl
sub
out
mov
lea
mov
insb
std
loop
loopne
push
in
mov
or
adcl
adc
mov
popf
test
push
arpl
cmp
jl
cmp
jae
push
mov
cld
cmp
stos
insb
gs
imul
insl
xor
add
inc
add
call
jp
stos
xor
jne
jno
inc
in
sub
adc
pop
push
xlat
and
push
movsl
push
push
icebp
add
add
jmp
push
jle
inc
rolb
test
ljmp
and
leave
pusha
jns
fsub
xchg
inc
mov
dec
pop
fsubr
push
jl
add
mov
adcl
fs
sbb
int3
mov
add
repnz
pusha
add
dec
pop
push
cmpsb
xchg
stc
call
push
lcall
and
outsl
pop
ds
adc
test
dec
inc
ljmp
push
xor
leave
bound
leave
iret
sbb
lret
lds
lret
stos
sub
jg
mov
ljmp
lds
sbb
or
lds
inc
aas
lods
movsb
mov
mov
std
push
shll
sbb
movsb
inc
and
mov
mov
pop
das
inc
mov
outsl
iret
loopne
ret
jl
sahf
das
xchg
scas
js
ret
rcll
jge
add
sbb
fildll
sub
inc
leave
fisubs
mov
test
loop
or
inc
fwait
sbb
jo
fldenv
lret
loope
call
js
mov
xchg
mov
stos
and
ljmp
test
add
es
xchg
cwtl
loopne
fsts
insb
pop
xor
ficoms
push
xchg
mov
pop
jmp
mov
dec
push
mov
clc
adc
push
jge
ds
add
or
cs
jb
and
xchg
push
add
sub
sbbb
notb
int3
ss
aad
aad
testb
ja
add
pop
mov
je
cmp
jbe
aam
repnz
sub
xchg
shl
int
addb
hlt
ss
sub
push
cmp
mov
popf
fldt
cld
mov
test
in
int
stos
inc
mov
int3
xchg
in
outsl
mov
aas
push
or
scas
mov
or
rorl
mov
mov
sub
jp
test
push
iret
sbb
inc
adc
data16
xchg
add
lcall
popf
pop
iret
inc
jmp
in
push
or
jo
xlat
jg
xor
sub
ds
and
pop
push
lea
jle
jae
xchg
cwtl
test
daa
cmp
pushf
sub
sub
cmpsb
in
scas
or
mov
fs
sahf
push
bound
jo
lea
or
and
arpl
mov
test
cmpsb
xchg
push
movsb
and
jle
xor
addr16
std
pop
aam
leave
add
fnstsw
sahf
sbb
cmp
movsl
out
dec
push
popf
mov
sbbb
shl
lret
xchg
bound
dec
xchg
xor
dec
gs
xor
push
jg
xchg
int3
sbb
add
ds
testl
inc
clc
push
jb
push
xchg
push
mov
cmp
sbb
stos
pop
xchg
repnz
inc
fcoms
lock
xchg
in
outsl
cmp
inc
and
mov
pop
mov
push
stos
pop
mov
dec
push
sub
pop
xchg
mov
insb
outsb
cmp
or
icebp
in
xchg
xor
in
pusha
xchg
adc
int3
fsubrs
sub
shll
push
jns
fstps
leave
cs
fmuls
clc
pop
mov
sbb
mov
jmp
mov
pop
mov
fcoml
mov
jbe
stos
xlat
rcll
xor
fistpll
mov
pop
push
enter
cs
out
sbb
outsb
add
push
std
dec
jo
add
in
mov
xor
dec
mov
das
ror
ja
aam
xchg
pushf
dec
push
rcr
mov
adc
lret
out
lea
ljmp
cs
sti
stos
pop
jae
xchg
std
pop
sti
lods
mov
dec
pop
movsb
out
cmp
mov
repz
sar
adc
fs
push
sub
push
and
sub
cmc
dec
push
mov
fstpl
jmp
mov
and
mov
and
lods
push
pop
fbstp
test
jmp
repz
out
je
pop
inc
push
scas
mov
aam
add
fimull
add
and
int3
or
push
cmp
jg
mull
out
xor
inc
mov
cmp
out
cmpsb
sub
loope
dec
xchg
lods
shrb
icebp
lock
mov
pop
mov
or
xchg
xor
mov
mov
mov
push
repz
lock
loop
cwtl
cmp
imul
push
mov
sbb
pop
add
inc
pop
xchg
mov
pop
cmc
ja
push
inc
pop
jno
clc
pop
dec
pop
push
shll
ds
fidivs
pop
ljmp
loopne
pusha
hlt
lea
test
fcmovnbe
pop
ss
xor
mov
push
push
dec
mov
pop
mov
mov
lcall
in
fldenv
and
jg
dec
loopne
dec
xor
vandnps
jnp
adc
hlt
cmp
cmpsb
push
pop
lods
and
imul
xchg
mov
sub
xor
dec
insl
les
dec
push
bound
push
fimuls
into
rcrl
fsts
je
shlb
clc
jno
dec
dec
fdivrs
inc
push
dec
pop
or
ret
or
in
cmp
pop
xor
inc
adc
loop
shl
cmp
vpmacsdql
or
dec
sub
push
mov
ds
fisttps
pop
push
mov
pop
or
bound
insb
xchg
xchg
mov
xor
jno
test
xchg
xchg
dec
jle,pt
out
cli
and
jle
push
shlb
daa
adc
xor
lods
sbb
adc
pop
or
jl
hlt
xor
loope
in
xor
push
mov
or
cmp
dec
or
bound
cmpsl
out
sahf
pop
pushl
cmp
pop
aam
out
push
mov
mov
xchg
mov
mov
bound
mov
popa
lret
pop
into
pop
stos
arpl
imul
mov
loopne
inc
or
adc
daa
fwait
jae
sbb
pop
push
pop
sub
andl
es
scas
imul
xchg
lret
outsl
lea
lds
cmpsb
or
sarl
jbe
les
push
test
push
lock
clc
subb
mov
mov
mov
jg
test
cmp
dec
xchg
add
cli
lock
lock
adc
cld
mov
shrl
in
sti
cs
decl
pushf
or
inc
flds
pusha
xor
in
mov
pushf
mov
add
add
mov
lods
sub
imulb
mov
lcall
dec
cwtl
movsb
nop
jecxz
cmp
add
mov
push
mulb
cs
sbb
jns
add
jne,pn
push
pop
insb
and
mov
sub
xor
testl
mov
dec
push
cmp
mov
jae
push
popf
arpl
jae
repz
xor
dec
mov
in
test
subb
adc
inc
or
pop
cmpsb
xchg
test
xor
mov
pop
cmp
lods
pop
xor
in
xlat
dec
pusha
fsub
cmc
add
lea
gs
fwait
psubw
aas
or
mov
push
daa
and
mov
push
mov
stos
or
loopne
mov
fadds
mov
inc
xchg
out
jo
adc
push
push
outsl
in
std
pop
shr
xlat
inc
mov
fdiv
stc
mov
daa
mov
jge
cmp
testb
pop
jmp
and
mov
arpl
sub
adc
adc
ja
sub
std
xchg
add
inc
inc
int3
loop
lcall
stc
cmp
pop
xchg
push
jle
je
pop
mov
stc
loop
adc
cmp
sbb
mov
dec
push
xor
cmp
jle
xchg
cmp
loopne
fcoms
push
jp
jne
ret
fucom
clc
fs
daa
ja
cmp
mov
jg
jecxz
adcl
cmc
dec
sub
add
sbb
sti
pop
nop
leave
mov
jne
popf
sbb
cmp
rolb
js
int
jae
in
mov
clc
mov
jbe
jmp
sarl
stc
cs
insb
in
imulb
mov
inc
ja
int
lds
mov
xchg
sbb
cwtl
pop
fldl
xchg
testb
push
mov
sub
push
movsb
adc
xchg
mov
and
and
adcl
das
imul
fcoml
push
push
repnz
fcmovne
lahf
xor
push
and
xor
push
lahf
loop
arpl
popa
or
push
sbb
push
jmp
mov
cmp
aaa
nop
cmpsb
je
mov
jle
in
lock
and
mov
aam
sahf
cmp
mov
fstl
fwait
push
cmpsl
dec
out
pushf
push
mov
call
jo
mov
cli
fnstcw
pushf
out
lret
mov
aaa
fisubrs
jns
mov
sub
xor
hlt
jb
and
inc
mov
jg
cltd
pushf
and
stos
testb
mov
push
push
notb
loop
mov
pop
shll
das
das
or
cmpb
mov
repnz
sub
mov
pop
mov
addl
and
iret
push
pushf
and
xrelease
sub
dec
pop
scas
inc
fcmovnbe
pop
fisubrl
dec
jp
add
fcoms
adc
xor
cmp
jp
outsl
pop
movsb
add
mov
outsb
hlt
cmpsb
inc
mov
scas
push
adc
mov
inc
mov
sub
cld
mov
inc
insb
mov
nop
out
lock
ret
loope
mov
inc
popa
imul
ret
ljmp
pop
cmc
mov
dec
mov
jp
jns
mov
jns
mov
mov
fsubs
xor
dec
incl
xchg
ss
aaa
cs
mov
mov
cmp
adc
or
adc
test
cld
mov
movsb
xchg
xor
jo
jns
aam
les
and
add
out
and
pop
push
test
mov
outsb
enter
imul
in
pop
jb
pop
daa
pop
adc
mov
pop
cld
lahf
sbb
cltd
xchg
xchg
push
fwait
test
mov
shlb
xchg
out
mov
lret
out
iret
into
nop
xchg
add
inc
inc
enter
cmp
lea
dec
push
adc
pop
and
pop
imul
pop
ds
mov
shll
sbb
in
push
sbb
inc
int
mov
mov
sti
xchg
mov
std
das
outsb
stc
repz
push
xchg
and
dec
jns
leave
clc
jg
add
mov
dec
dec
xor
fs
fimuls
test
pushf
movsb
cmpsb
cmp
imul
outsl
mov
mov
movswl
aas
test
jbe
dec
loopne
popf
es
int3
mov
sbb
fnsave
jo
sub
jl
dec
cs
sub
mov
jmp
sub
aad
pop
push
loope
mov
mov
or
in
addr16
dec
add
faddp
pop
stos
xor
jne
xor
jge
xchg
lret
mov
orl
hlt
xchg
add
fnstcw
mov
cmp
xchg
popa
icebp
cmp
movsb
pop
rcrb
xlat
and
out
jne
dec
inc
add
sub
test
xor
xor
push
stc
imulb
push
arpl
sub
push
mov
popl
popf
add
imul
xchg
jl
call
xchg
add
cld
pushf
sbb
push
push
test
and
fwait
sbb
cs
sbb
jo
cmp
int
std
fbstp
cmp
jg
cmc
dec
iret
mov
aad
clc
mov
insl
mov
sti
mov
fcomps
adc
in
enter
push
xchg
mov
sub
rorl
push
xchg
decl
popa
inc
nop
sbb
and
mov
push
pop
lods
push
cmp
enter
pop
push
push
sbb
dec
aaa
aas
and
out
or
jno
sub
sub
jmp
popa
repnz
mov
xor
sti
push
mov
pop
or
sbb
sub
imul
int
lcall
stos
mov
push
and
jb
cltd
aaa
loopne
shl
int3
xor
out
xor
or
pop
dec
xor
in
shll
mov
mov
mov
push
cmp
sbb
pop
mov
push
dec
pop
popf
adc
xchg
les
sbb
in
in
inc
jg
je
shl
inc
cmp
sbb
fldt
adc
xor
push
popa
inc
or
mov
imul
jae
rolb
stos
sahf
addr16
or
adc
or
sub
rclb
pushf
mov
and
incb
out
cmpsb
pop
daa
or
cmpsl
xchg
fs
cwtl
push
mov
int3
shll
add
push
xchg
xchg
xor
lea
addr16
sbbl
add
frstor
jmp
outsl
jo
fcoml
jle
popa
push
xchg
mov
std
jp
mov
cmp
pop
cmp
pop
xor
into
mov
iret
js
nop
adc
daa
les
rcrb
sub
testb
setge
inc
rorl
xchg
dec
lret
test
pop
movsl
push
push
shr
and
sub
int3
inc
adc
divl
xchg
test
cmpsl
cmp
out
add
arpl
bound
dec
pop
call
ret
lock
dec
psubsb
fisubrs
push
not
int
inc
stc
xchg
loop
push
int3
test
sbb
stc
sub
pop
jg
ror
sub
xchg
mov
add
sbb
adc
pop
fildl
daa
add
jg
push
xchg
xor
cmc
movsb
jecxz
sbb
dec
xchg
or
jl
hlt
fld
lret
xchg
outsb
sub
js
sti
icebp
int3
insl
in
cli
cmovno
inc
xor
testl
jno
lods
push
cs
aad
fmull
std
lods
imul
divl
mov
inc
and
adc
aaa
in
push
int3
cmp
dec
mov
pusha
sub
inc
ja
inc
cmpw
iret
jl
insl
ret
lock
out
mov
das
pushf
test
movsb
adc
stos
daa
xchg
repnz
push
xchg
pop
and
scas
ret
xchg
scas
sub
jle
push
xor
dec
jbe
cmp
dec
jbe
addr16
mov
int
dec
outsb
ucomiss
loopne
sti
test
jg
jp
sub
jle
sbbb
pushf
out
sbb
pusha
mov
mov
js
in
cmp
int
in
sbb
loopne
ds
mov
dec
lods
in
cmp
cmpsb
cmp
cmp
pop
mulb
mov
sbb
xchg
sub
mov
dec
mov
or
xlat
jae
xor
and
pop
dec
mov
in
int
add
dec
dec
aam
mov
jbe
push
sub
sbb
xchg
xor
out
shrd
pop
sub
dec
lock
cmp
dec
gs
pop
or
pop
repnz
test
clc
sbb
adc
or
pop
cltd
push
or
mov
lret
ds
mov
in
xor
repz
sub
and
ret
xor
cmpsb
xor
movsl
loop
and
mov
and
cmp
sub
xor
push
mov
gs
sti
sbb
ds
adc
cmp
mov
loopne
pusha
enter
jg
test
aad
scas
jmp
push
into
fwait
cmp
dec
call
pop
adc
mov
sub
in
outsl
les
int3
mov
mov
xchg
sub
fcmovu
out
mov
adcl
pop
xchg
add
or
or
mov
je
push
pusha
cmpsl
push
scas
cmc
cld
dec
cwtl
mov
or
into
insl
dec
xchg
insl
mov
cmc
into
push
iret
fwait
sbb
clc
jecxz
mov
jg
push
cmc
shrb
xchg
jns
jns
imul
rcrl
dec
mov
dec
mov
loop
fwait
push
push
and
add
inc
out
jmp
repz
sub
xchg
push
jp
xor
ljmp
mov
imul
sub
call
bound
rclb
sbb
out
sub
and
adc
add
out
divb
sub
lret
fistpl
xor
jl
dec
cmp
lret
push
hlt
cmp
es
sbb
adc
pop
bound
mov
test
mov
lods
inc
rorb
fxch
int3
mul
mov
shll
bound
ljmp
mov
adc
fimull
js
lods
inc
or
lods
divb
ljmp
sub
cmp
icebp
pop
int
sub
popa
fldl
cmp
gs
lret
pop
xacquire
dec
lcall
lods
pop
pop
dec
push
test
mov
popf
xlat
mov
cmpsl
push
data16
bound
test
adc
imul
and
lds
mul
sbb
xchg
mov
fimuls
pop
add
sub
dec
xchg
insl
add
dec
sub
call
dec
outsb
movsl
orl
and
mov
mov
ljmp
xchg
aad
shll
pop
sub
cmpl
sub
mov
xor
pop
lret
hlt
mov
adc
sbbb
sti
pop
sbb
cmp
scas
mov
mov
std
shlb
inc
cmpsb
mov
or
shl
subl
adc
push
jb
sbb
dec
outsl
mov
xor
sbb
mov
push
das
lds
ljmp
out
scas
xchg
repnz
pusha
cltd
mov
jb
lea
scas
add
cmp
adc
aas
push
mov
xor
fisubrl
mov
xchg
iret
ror
gs
cmp
xchg
cld
rorl
mov
popf
push
cmp
std
data16
xor
push
cwtl
jle
fs
test
lea
repz
shl
imul
pop
xchg
mov
push
push
dec
xor
bswap
out
jb
or
and
sub
faddl
xor
int3
sbb
push
outsb
jge
cmp
and
mov
and
scas
sub
cmp
mov
mov
push
xorb
fsubs
push
lret
add
xchg
addr16
pop
aaa
int3
xchg
xchg
loopne
popf
pop
or
dec
inc
fdivl
ret
mov
mov
cltd
subb
jbe
xor
and
shrl
popf
sbb
lock
adc
sbb
sbb
je
enter
dec
inc
daa
cwtl
xchg
push
ds
in
mov
xor
pop
jge
sbb
xchg
insb
std
cs
pop
push
ds
stc
fcompl
or
pop
divb
out
xlat
xchg
xor
mov
in
mov
in
mov
lods
fsubrl
push
push
cmp
ds
sub
loop
sbb
popf
dec
in
in
dec
es
jecxz
sbb
ficomps
stos
popf
inc
xlat
mov
fildl
jne
iret
addr16
outsl
int3
mov
or
clc
xor
lahf
rolb
lahf
push
push
dec
lods
jmp
in
add
xor
ret
mov
or
clc
not
sbb
fisubrs
aas
or
ja
pushl
cltd
test
inc
cmp
cs
pop
mov
cmpl
fistl
mov
movsw
jmp
mov
or
shl
fists
mov
xor
jmp
mov
inc
dec
sub
negl
call
inc
or
ljmp
fsubl
push
pop
xor
addr16
movsl
into
dec
pop
fiaddl
jle
lods
cltd
icebp
mov
shr
insb
sub
jl
testl
push
inc
fldt
adc
sar
mov
sbb
in
mov
jle
mov
pop
sbb
outsl
pop
mov
push
not
das
mov
pop
mov
jae
call
mov
cli
int3
adc
ror
adc
sbb
push
mov
xor
movsb
decl
movsl
mov
std
mov
lods
rorb
mov
sbb
mov
out
cmp
xor
jbe
and
inc
movsb
add
fwait
sbb
pop
cltd
movsl
push
ret
sub
jo
mov
lds
push
das
mov
outsb
xchg
fildl
insl
xchg
fldln2
adc
inc
xor
lds
test
xlat
xchg
sbb
movsb
xchg
mov
sub
jne
les
in
push
rcll
icebp
jmp
arpl
push
xchg
xchg
inc
cmp
xchg
xchg
mov
lret
into
xor
test
add
sub
lods
sub
repz
sahf
cmp
div
or
mov
outsl
jle
push
sbb
das
adc
subl
popa
lds
adc
aaa
add
add
push
cltd
lods
imul
aam
fldl
push
insb
jne
sub
cmp
daa
xor
adc
or
pushf
int3
and
fbld
es
subb
sub
push
cmp
scas
cmp
jg
cld
enter
xchg
jo
std
notb
mov
and
fs
arpl
aad
movsl
cmpsb
pop
push
nop
mov
into
jo
xchg
mov
push
xor
hlt
rol
xchg
fldpi
test
sbb
mov
fnsave
aad
dec
push
jo
and
cmp
sub
mov
stos
mov
out
cs
xchg
dec
sub
imul
mov
rol
aam
xor
stos
or
or
inc
test
fmuls
enter
loope
xorl
aam
push
sub
int3
cmp
cmp
and
mov
test
jl
and
adc
fwait
xchg
rolb
iret
jns
push
std
ljmp
mov
sbb
cmp
out
mov
dec
mov
push
cltd
mov
xor
adc
in
bound
jle
and
notl
dec
dec
lahf
pop
aad
bound
cmpb
fldt
jo
or
adc
popf
cmp
incl
cmpsl
mov
mov
adc
mov
inc
xor
jbe
lock
mov
jno
push
jnp
cmp
cmpsl
iret
mov
xor
in
push
or
int3
lret
dec
xor
out
icebp
call
push
cmp
and
xlat
sbb
fistl
jns
mov
loope
jbe
xchg
add
sub
xchg
dec
xor
xor
or
or
jns
xchg
stc
add
int
mov
mov
imul
sbb
lcall
jecxz
pop
jle
test
or
pusha
jg
and
add
ja
imul
push
jecxz
outsl
pop
push
shrl
test
cs
outsb
pop
and
xchg
leave
or
inc
cmpl
sub
je
lret
add
mov
loop
mov
mov
dec
std
mov
aam
xor
pop
imulb
shrl
inc
stos
push
sbb
gs
mov
shrb
ffree
inc
sub
adc
and
mov
cltd
lcall
jne
std
xchg
sub
repz
icebp
xchg
mov
push
repz
mov
lret
add
loop
xlat
stos
and
mov
fstpt
adc
pusha
pop
sbbl
ljmp
das
and
sub
loop
mov
pusha
mov
aaa
add
out
lahf
inc
in
lds
das
sbb
or
pop
loope
push
or
add
mul
insb
imul
nop
std
jae
mov
into
and
xor
sub
fisttps
cli
mov
push
jmp
pop
push
test
mov
mov
cltd
enter
add
inc
push
ret
lods
out
aas
imul
fdivrl
push
ljmp
mov
outsl
push
jmp
mov
pusha
add
push
test
mov
or
fnstcw
psubusb
in
jnp
jnp
push
sbb
jp
xchg
push
mov
push
mov
sarb
andb
lret
push
in
icebp
push
dec
lahf
sub
pop
enter
std
dec
inc
loope
pop
mov
jecxz
cltd
pop
ljmp
test
jmp
xchg
push
fcoms
push
xchg
sbbb
xchg
adc
jg
pusha
mov
cmp
xlat
pop
lahf
add
fcoml
jg
adc
pop
shr
push
mov
mov
or
jnp
das
cmp
jmp
pop
cmp
push
test
mov
pop
int3
or
xor
arpl
clc
bound
addr16
inc
lret
into
das
dec
scas
cltd
mov
mov
loopne
mov
ss
sahf
popf
push
hlt
icebp
cmp
add
push
inc
jl
icebp
out
int3
inc
push
icebp
jle
push
rdmsr
daa
sub
and
les
jl
loope
dec
cmp
mov
xorl
dec
push
pcmpgtw
imul
inc
cmp
jb
sub
ds
mov
dec
cmp
pop
loopne
or
rol
xchg
xchg
stos
xchg
ss
cmp
out
loopne
movsb
mov
enter
inc
push
or
sub
mov
xchg
clc
aas
repnz
mov
pop
mov
xor
mov
out
das
inc
loopne
rcll
movsb
mov
mov
jae
xchg
call
test
push
popa
mov
arpl
sub
sbbb
push
adc
inc
push
pop
es
daa
jne
pusha
mov
mov
adc
xchg
pop
mov
jg
cmpsl
leave
cmpb
sbb
mov
jmp
pushf
jecxz
je
int3
enter
scas
mov
adc
sub
cmp
repnz
mov
mov
arpl
mov
lods
pop
pop
ret
ret
push
jp
scas
repnz
xchg
fstl
fmuls
cs
mov
mov
push
xorb
push
andl
mov
inc
lcall
and
cmpsb
push
add
in
sub
inc
push
pop
pop
movsl
xchg
stos
bound
mov
mov
and
js
push
addr16
inc
xchg
aas
sbb
xchg
jo
add
xchg
mov
call
mov
cltd
push
sbb
roll
das
addr16
aad
shl
mov
imul
cmc
sub
inc
pop
push
xchg
xchg
ror
push
ret
loopne
jnp
sub
lret
push
cmp
jle
arpl
jb
je
xchg
stos
cmp
fisttpl
loopne
inc
aaa
adc
push
jae
sbb
lock
add
inc
pop
fwait
jp
push
addr16
jnp
sub
out
sti
mov
xor
mov
mov
push
mov
and
adcb
push
mov
push
and
les
js
lods
les
mov
jns
sbb
ret
insl
dec
jmp
fucomi
sub
bound
ret
mov
jbe
push
mov
lds
mov
pop
addb
stos
xchg
lret
js
in
jae
and
and
addr16
xchg
adc
sbb
push
dec
mov
xchg
popa
mov
cmp
push
inc
pop
les
sbb
ret
jae
test
clc
mov
lods
out
je
gs
popf
nop
sub
cltd
ljmp
leave
cmp
xor
add
data16
icebp
sti
mov
fwait
notl
les
fcomi
aad
into
and
cld
shrb
adc
fldz
xor
push
jg
lods
jns
pop
cmp
jge
sub
fwait
stos
adc
js
mov
pop
add
sahf
mov
out
cmpsb
popf
mov
insb
adc
movsb
orb
dec
mov
ret
lcall
nop
push
push
fs
iret
bound
movsb
imul
adc
mov
sti
mov
push
add
xchg
cmpsb
daa
loopne
xlat
push
push
push
scas
dec
push
stos
sbb
in
mov
dec
mov
adc
pop
sub
and
mov
clc
pop
dec
mov
les
cltd
jnp
lcall
movsl
xchg
loopne
mov
ja
mov
int
or
pop
lahf
and
dec
cld
adc
xorb
stos
sbb
ljmp
cmp
add
or
gs
pop
sub
sub
jecxz
fcomp
adc
push
jmp
and
rol
cwtl
mov
add
out
jb
add
mov
sbb
add
push
pop
lahf
cmpsb
cwtl
xor
das
aam
lahf
mov
or
xor
sbb
pusha
push
stc
lds
mov
cltd
inc
and
sub
jno
add
and
dec
pop
movntq
add
daa
cmp
and
cmp
mov
daa
pop
daa
movsb
pop
mov
add
xchg
push
in
xchg
daa
aam
rcrl
pop
addr16
sbb
jno
mov
arpl
insl
cmp
xchg
push
dec
loop
lret
pop
out
lds
ret
std
movsl
sbb
aaa
cld
jle
cmpsl
fnstsw
xlat
in
shlb
dec
push
sbb
push
jp
xor
aam
sbb
adc
aas
xchg
lahf
aam
mov
inc
push
pop
aam
pop
and
push
sbb
stos
sub
in
push
push
aaa
lret
jge
pop
push
inc
fbld
sub
sub
int
pop
cmp
stos
into
add
ds
push
push
jae
cmpsb
shl
push
les
xor
pop
adc
fistpll
mov
inc
bound
repnz
insl
add
in
pop
mov
scas
sub
adc
pop
inc
push
push
test
dec
xchg
add
ja
inc
dec
cmp
push
cmp
cmpsb
xor
rcr
pusha
les
cmpsb
sbbb
mov
and
fmul
jmp
mov
adc
push
fdivs
nop
mov
jo
cmp
and
and
jmp
and
add
sbb
jle
push
je
adc
scas
mov
dec
push
sti
repz
cmp
push
add
sub
movsl
ret
xchg
mov
xor
fistps
jns
daa
inc
adc
adc
into
jge
and
bound
mov
inc
sbb
cs
pop
loope
cmpsb
push
xor
inc
inc
lahf
iret
pop
jnp
in
push
testb
lcall
aam
aad
fbstp
pop
adc
ljmp
sti
mov
out
mov
mov
mov
xor
add
jecxz
js
push
add
jb
roll
rcl
add
or
dec
mov
mov
and
nop
and
lods
sbb
jno
push
pop
jae
les
lods
mov
xor
mov
rcrb
fidivrl
sub
cmp
sbb
shll
cmp
mov
mov
bound
cld
mov
into
jmp
out
and
xchg
jg
push
pop
push
mov
pop
adc
je
push
out
push
bound
pop
pop
adc
ss
mov
adc
std
xor
add
dec
jmp
sarb
pushf
mov
inc
push
cmpsl
push
cmpsl
lock
std
push
pop
nop
pop
xor
add
push
scas
ret
or
push
mov
mov
imul
ret
xor
inc
arpl
stos
test
add
adcl
js
scas
aam
inc
lods
aad
xor
and
xchg
dec
xor
es
xor
mov
or
data16
mov
cmpsl
idivb
imul
push
stos
and
in
ror
adc
push
enter
jns
pop
sub
inc
inc
sub
push
repz
je
addr16
cmc
test
jae
in
out
or
mov
pop
push
jl
or
jo
pop
movsb
leave
scas
shll
xchg
test
mov
test
and
call
ljmp
mov
out
adc
dec
test
mov
je
dec
adc
pusha
es
inc
dec
inc
cmp
sbb
mov
nop
inc
ret
push
lcall
xchg
pusha
sbb
int
iret
stc
lds
cmp
rcrl
cmp
push
xor
pop
push
cs
or
fwait
jns
sbb
mov
jo
cmp
mov
sub
popf
leave
pop
jp
mov
mov
mov
sbb
adc
popa
insl
repnz
xchg
xchg
addr16
mov
add
adcb
mov
xchg
inc
cmpsb
into
jne
mov
pop
arpl
or
inc
mov
repz
jmp
push
cmpsb
shl
dec
lods
pop
xchg
gs
cmp
add
and
fisttps
ds
xor
mov
cmp
mov
test
push
inc
and
test
cmpsb
pop
mov
data16
aas
es
dec
mov
or
test
rol
cli
xor
into
mov
jp
adc
cmp
sbb
test
xchg
popa
jmp
in
jb
fmul
insb
leave
negb
movsb
add
mov
mov
inc
daa
lods
in
jnp
jmp
mov
movsl
in
repz
jmp
out
test
cmovp
iret
pop
and
add
enter
push
push
mov
cmp
xchg
fsubrl
mov
mul
es
push
cmp
loope
cmp
mov
push
push
push
rorb
fidivrs
add
test
in
dec
adc
rcll
insb
add
pop
inc
js
pop
sbb
int3
mov
bound
pusha
iret
inc
lret
and
cli
dec
lret
mov
sub
jmp
sbb
nop
jp
xor
mov
mov
sar
sbb
loop
sub
cltd
jecxz
xchg
jmp
outsl
sub
daa
dec
repnz
std
bound
mov
sub
pop
rcrb
mov
xchg
cmp
xchg
mov
stos
and
mov
dec
aad
lret
mov
hlt
data16
cli
xor
addl
dec
call
loop
sbb
pop
aad
jno
iret
ds
mov
mov
ss
inc
nop
or
inc
int
out
fstpt
jbe
xor
test
sbbl
outsb
adc
arpl
movsl
jge
dec
fsubrs
lock
push
into
test
arpl
icebp
mov
sbb
sbb
shrb
shll
stos
fldl
inc
jbe
lds
push
dec
adc
push
jo
adc
mov
icebp
test
sub
mov
cwtl
mov
fdivs
cmp
adc
pop
insl
test
inc
ds
mov
push
cmp
cmp
jns
add
imul
fidivrs
lds
je
hlt
aam
cmpsl
pop
les
pop
icebp
js
mov
inc
call
jmp
push
pusha
inc
pop
cmp
paddsb
scas
shll
pushf
and
and
mov
push
or
sbb
add
arpl
not
sti
fdivrp
pop
rcll
test
fstps
fldt
or
push
cmp
and
dec
leave
sub
mov
jp
pop
sub
mov
stos
mov
push
sub
nop
jae
aaa
outsl
mov
mov
adc
inc
mov
or
xlat
in
inc
xchg
or
lcall
cmovae
int3
mov
dec
inc
es
pop
mov
pop
ret
mov
pushf
adc
cs
and
xor
cmp
cmp
cmc
out
cmpsb
sbb
mov
xor
repz
sti
mov
push
and
push
out
sbb
jmp
or
pop
sbb
cltd
shr
cmpsl
jnp
incb
or
insb
xchg
movsl
nop
dec
ficoms
pushl
inc
xlat
cmp
out
xorl
xchg
inc
jecxz
or
imul
movsl
cmpsb
and
popa
mov
cmp
sbb
stos
mov
push
mov
jnp
jmp
idivl
sub
pop
jns
mov
jb
data16
lds
pusha
add
or
ja
inc
dec
add
mov
enter
pop
stc
data16
mov
or
and
push
sub
dec
inc
shll
outsb
or
jmp
sub
out
je
leave
and
insl
jmp
shl
add
daa
loop
push
add
dec
dec
nop
cmc
push
dec
outsb
mov
push
cmc
adc
mov
jnp
cmpsb
idivb
sti
jno
scas
loopne
mov
cltd
jb
or
ja
adc
rcll
mov
enter
aas
stc
xor
out
fdiv
lahf
scas
fcmovu
aad
fisubrs
leave
mov
sub
mov
and
iret
xlat
fistps
mov
sbbb
gs
repz
lret
ret
lds
jg
leave
sbb
xchg
xchg
and
enter
rclb
and
and
loope
fdivp
aam
dec
or
test
aad
push
in
sub
lahf
mov
inc
xchg
cmp
pop
aad
xor
dec
or
outsl
std
push
rcll
mov
lods
in
enter
pop
xor
cltd
or
loope
dec
in
inc
aaa
pop
cmp
and
jg
fimull
sbb
in
neg
cmc
mov
sub
popa
lret
scas
jo
lods
test
inc
idivb
xor
mov
pusha
push
mov
cmp
sbb
pop
adc
lods
xor
add
adc
cmp
or
iret
xchg
pop
xlat
mov
iret
or
or
je
sbb
xchg
mov
mov
mov
push
std
or
sub
cltd
repz
push
fs
sub
cltd
or
or
add
jmp
insb
mov
xchg
push
scas
mov
jge
pop
insb
lcall
in
push
or
adc
mov
enter
pusha
lea
add
dec
mov
fisubrl
mov
add
cmp
mov
stc
xchg
and
shrl
test
pop
mov
mov
movsl
stos
shll
enter
push
out
pop
aaa
es
in
jne
push
inc
pop
ret
mov
dec
xor
sub
enter
xchg
sub
push
dec
jbe
add
aaa
push
popa
lahf
das
jle
int3
add
scas
xor
inc
sub
xor
loopne
and
and
fmulp
insb
jge,pn
push
insb
lea
jbe
add
cmp
out
stos
and
cmp
or
and
mov
lds
xor
jle
ffree
pop
lods
push
jbe
dec
and
insb
jge
inc
push
dec
cmp
inc
out
mov
rcrl
rclb
mov
aas
pop
pop
out
fs
mov
xlat
xor
js
jecxz
leave
sub
adc
fxam
sub
imul
cmp
mov
or
arpl
pop
adc
inc
mov
popl
bnd
push
packsswb
and
stc
in
fstpt
sub
dec
push
dec
stos
push
arpl
pop
cmpsl
mov
jp
leave
mov
mov
shll
mov
pop
mov
cmpsb
push
cltd
pusha
jp
sub
and
sbb
lcall
lret
pop
xchg
cltd
and
inc
int
mov
cld
dec
dec
cmc
dec
pop
ljmp
negl
mov
hlt
adc
les
cwtl
test
mov
loop
jl
je
lds
test
and
imul
xor
aas
or
leave
cmp
mov
or
add
decb
sahf
in
and
jo
sub
and
jmp
xchg
ds
psrld
xchg
stos
mov
cmp
mov
bound
mov
rcrl
xchg
or
dec
stos
js
add
daa
adc
sbb
inc
rcr
in
push
add
inc
xor
mov
sub
and
bswap
sbb
and
push
adc
insl
cmp
imul
popf
pop
in
inc
data16
pop
push
je
and
sbb
out
lret
and
stos
jp
push
test
je
leave
xor
ficomps
lods
adc
mov
dec
xchg
pop
jne
xor
into
shl
jecxz
push
mov
or
mov
dec
mov
pop
push
es
stos
in
xchg
pop
adc
push
inc
mov
lods
lock
pop
and
ret
pop
shrb
clc
icebp
imul
fcmovnb
scas
ljmp
cmp
insl
xor
adc
fs
insl
xorps
xor
sbb
loop
aam
jecxz
loopne
mov
add
pop
fbld
mov
or
xlat
xlat
rep
imul
lods
jnp
cmp
stos
dec
pop
lock
addr16
fs
in
push
jecxz
mov
or
push
rclb
pop
out
pusha
xchg
int
jno
jg
lock
out
loope
add
xchg
mov
push
stc
pop
mov
mov
out
insb
dec
jg
xlat
jbe
call
sar
data16
pop
repz
outsl
inc
cmpsl
insb
pop
lock
leave
mov
int
push
dec
push
push
dec
leave
pushf
test
jbe
pop
je
test
jge
outsb
jae
push
scas
fnsave
dec
jnp
scas
in
add
pop
mov
loope
pop
repz
js
dec
xor
jge
dec
cmp
xchg
add
add
add
ret
repnz
rol
shll
out
icebp
jle
push
enter
sub
subl
cmp
jl
mov
aad
xor
and
pusha
ljmp
lea
mov
sub
cmp
js
addr16
pop
jne
outsl
add
cltd
scas
into
add
lds
inc
aad
movsl
and
roll
lcall
ret
xlat
icebp
pop
or
in
cwtl
pop
daa
inc
push
icebp
movsb
aaa
test
push
pop
js
je
jle
mov
arpl
imul
or
fwait
lea
dec
pop
sbb
xchg
mov
dec
jp
cmp
mov
xchg
xchg
xchg
cmp
loopne
pop
test
mov
xor
push
and
hlt
fldt
lret
xor
inc
or
loopne
in
inc
cmp
inc
aam
icebp
and
push
orb
mov
leave
cmp
jge
xchg
push
adc
ret
or
js
ljmp
aaa
outsb
inc
mov
dec
push
dec
mov
popf
cmp
xchg
dec
jle
adc
fucomi
aas
fstpl
in
mov
dec
sarb
scas
inc
mov
and
adc
adc
push
jb
test
push
outsb
adc
dec
mov
xchg
lods
data16
inc
pop
jbe
les
fs
add
adc
cwtl
lahf
sbb
dec
cmpb
mov
lcall
xchg
ljmp
fisubl
ja
cmpsl
nop
mov
fnstenv
je
xorl
mov
sub
popf
mov
jmp
push
push
add
insl
sbb
shl
xorl
repnz
lahf
mov
inc
push
jnp
dec
incb
out
lds
push
cli
rcr
mov
inc
xor
pop
cmp
stos
pop
cli
pop
leave
andb
jb
mov
sub
daa
ss
scas
ja
shlb
jae
fs
mov
daa
les
sbb
jg
push
push
test
inc
mov
mov
mov
int
xor
out
push
sub
mov
icebp
sub
mov
stos
adc
mov
mov
mov
xor
dec
lea
mov
icebp
clc
nop
in
mov
add
outsl
add
mov
stos
icebp
jae
mov
movsb
int
inc
fdivs
mov
cli
add
sbb
lret
sbb
icebp
cmp
ss
aas
or
jmp
and
or
pop
shrl
inc
sub
ret
push
jb
sub
aas
fsub
xchg
fwait
xor
bound
mov
pop
jbe
adc
mov
mov
rolb
sbb
pop
popa
lds
mov
fcmovbe
setge
and
dec
mov
js
outsl
jl
or
jge
divl
call
jl
jns
std
loope
int3
imul
xchg
cmc
stos
into
or
lds
ljmp
das
aaa
js
pop
jecxz
cltd
scas
sbb
lret
in
dec
mov
sahf
sub
addr16
push
or
ret
cmpb
in
lock
loope
or
cwtl
xor
dec
mov
push
sbb
dec
pop
idivb
mov
mov
inc
ret
mov
jno
stos
sahf
inc
xlat
pop
lds
mov
add
inc
sbb
inc
mov
in
in
push
in
stc
xchg
sub
pushf
push
inc
icebp
int
das
imul
cmp
sbb
cmpsb
push
mov
negl
xchg
sub
hlt
jg
and
mov
ja
cwtl
mov
lock
xchg
test
js
sub
fs
adc
sti
sarl
in
shr
cmp
loopne
xchg
icebp
nop
mov
mov
fsubrl
clc
and
inc
cmpsb
dec
dec
jnp
adcl
jmp
in
or
or
and
dec
imul
inc
testb
mov
outsl
jmp
mov
sbb
loopne
test
or
inc
bswap
rorl
cli
out
outsl
popf
loope
in
sbb
jns
lock
inc
stos
shlb
adc
gs
aaa
mov
insl
mov
stos
add
stos
jecxz,pn
dec
mov
addl
jb
ret
push
cltd
pop
aas
imul
jp
ret
adc
add
or
cmp
int
adc
in
outsb
push
in
jns
and
adc
ficompl
pop
dec
cmp
sub
lea
iret
or
notl
inc
push
mov
jl
in
mov
lea
ret
rolb
cmp
popf
add
rolb
mov
je
test
test
ljmp
ljmp
sbb
dec
jmp
loopne
fbld
xchg
push
push
fisttpl
xchg
inc
cmp
mov
pop
fwait
test
cmp
nop
rcrb
push
mov
sub
test
jle
sub
sub
cmp
daa
sub
js
xorb
stc
and
shll
cs
hlt
iret
in
sar
sarb
xlat
icebp
scas
fsubrl
aam
add
pop
nop
out
inc
sbb
xlat
xchg
or
fcompl
and
pop
loope
rolb
mov
jns
dec
push
inc
scas
mov
sbb
inc
ss
adc
ss
test
repz
cmpsb
lods
xor
sar
push
add
or
cmp
insb
dec
cli
das
movsl
hlt
imul
sar
cwtl
scas
pop
repnz
mov
addr16
mov
lods
pop
out
int
movsl
inc
test
int3
fdivl
movsl
cmpsl
dec
sub
jecxz
mov
sti
push
adc
stc
pop
inc
test
test
mov
jae
or
outsb
jno
mov
push
std
sbb
jo
stos
xchg
fcomps
xchg
inc
and
mov
lock
jmp
imul
push
lahf
jae
push
mov
fucomp
sub
cmpb
xor
cs
lcall
dec
mov
es
sbb
cmp
jbe
inc
ss
mov
mov
jae
jg
loop
lahf
cmpb
stos
fwait
jp
jnp
jb
jmp
dec
push
sbb
push
fisubrs
pusha
jg
push
into
jnp
inc
and
test
mov
inc
mov
mov
ja
push
flds
sub
fwait
mov
xchg
js
mov
popf
pop
dec
push
scas
pop
out
shl
dec
cmp
movsl
in
mov
mov
lret
pop
lods
push
mov
adc
and
ljmp
jp
push
sub
cmp
jecxz
movsl
xchg
jae
es
nop
push
and
aaa
icebp
push
xchg
push
cmc
adc
das
aaa
gs
lret
pop
shrl
mov
fsubs
fs
test
mov
jns
sbbl
aaa
push
push
and
inc
jne
test
sbb
cmpsb
sbb
sti
cs
sahf
sub
jne
dec
mov
xor
mov
inc
pop
xor
fistpll
fdiv
daa
daa
les
mov
dec
aad
test
popl
sbb
or
outsb
pusha
faddl
or
sub
mov
loopne
das
mov
push
test
adc
mov
sub
mov
cmp
pop
movb
push
mov
mov
leave
cmp
testl
test
or
push
int3
shlb
and
jno
into
sbb
add
jo
aad
or
outsb
add
pop
pop
or
mov
outsl
xor
ja
mov
popf
addr16
push
dec
cltd
push
sti
cltd
dec
into
dec
pop
push
subl
mov
mov
shll
inc
pushf
lods
jb
dec
cmpl
xchg
jmp
in
test
mov
cmp
movsb
mov
movsl
add
data16
xor
jecxz
pop
bound
adc
clc
pop
loop
faddl
lret
repnz
mov
mov
out
mov
orb
cmpsl
loopne
insl
jp
test
mov
jmp
enter
gs
pop
data16
add
add
cs
sbb
sbb
in
xchg
leave
or
mov
sbb
imul
movsl
lock
int
pop
xor
je
out
cltd
add
imul
stos
cmp
aad
subb
add
jns
pop
sub
mov
cld
or
pop
test
add
ja
dec
and
dec
and
mov
jo
clc
add
or
sub
scas
mov
popf
mov
cmp
int3
std
std
cld
xchg
mov
notl
bound
test
iret
inc
sbb
cltd
popf
hlt
pop
xchg
dec
sub
or
cld
sub
xor
or
imul
incl
pop
mov
ds
insl
lcall
scas
nop
in
fwait
push
cmp
xor
and
sub
stc
lods
and
sub
push
pop
testb
inc
cmpsb
mov
in
fbstp
adcl
pop
jne
mov
addr16
insl
insb
lcall
test
cli
loop
ja
jno
jmp
in
sahf
cmp
sub
push
mov
mov
les
pop
push
int
jecxz
std
flds
cmp
adc
test
jmp
xchg
rorb
or
jbe
push
inc
dec
xor
jno
xor
mov
loope
jg
ss
push
mov
mov
jb
jle
pop
mov
mov
xchg
xchg
ffreep
sbb
es
stos
mov
push
inc
test
cmpsl
bound
imul
in
std
push
ret
lds
pop
mov
outsb
movsb
push
loope
mov
shll
add
and
mov
dec
mov
jbe
out
add
addb
push
cs
testl
mov
imul
jle
leave
push
fldcw
jns
std
les
jae
sbb
lret
jecxz
ret
add
jmp
ss
mov
mov
mov
outsb
cmp
in
push
mov
cmp
push
enter
xchg
mov
bound
gs
mov
cld
std
pop
mov
jl
scas
push
out
dec
push
sar
jge
sub
mov
ljmp
cmpl
fidivs
rcll
xchg
stc
test
ljmp
xchg
in
xchg
stc
pushf
fisubs
pop
shll
dec
mov
inc
out
add
lods
sahf
push
into
mov
loopne
enter
rorl
out
and
mov
add
cmc
in
add
mov
mov
popf
aas
jecxz
lds
js
addr16
in
xchg
rol
nop
lock
sti
jle
shr
xor
mov
pop
and
movsb
mov
mov
shrb
fstl
xchg
sub
ja
xor
ud1
add
pop
testb
jnp
push
add
adc
cmp
leave
mov
icebp
test
out
sub
nop
stos
insb
jbe
mov
aas
ss
jb
push
iret
lods
push
lock
inc
fst
inc
jns
add
adc
stc
jg
negl
sbb
mov
mov
sub
push
fs
lret
call
fmuls
loope
inc
mov
je
les
in
mov
adc
mov
test
flds
sub
pushf
mov
int3
out
repz
lods
push
mov
jns
mov
inc
mov
ja
cmp
cmp
std
push
pop
sbb
and
add
mov
jne
mov
insl
imul
jp
mov
je
shr
mov
pop
push
cmpsb
mov
sub
sub
jbe
xlat
sarl
lods
test
popa
sub
mov
jmp
adc
pushf
inc
jecxz
in
pop
scas
xor
pop
cmp
dec
or
push
ds
sbb
inc
xchg
xor
xchg
pushf
cs
push
cltd
dec
mov
shlb
call
sbb
adc
xchg
sub
xchg
xchg
xor
sbbb
ss
scas
dec
dec
aaa
sbb
popf
mov
nop
hlt
pop
xor
outsl
adc
adc
inc
mov
in
lds
divl
and
jo
idivb
nop
pop
inc
jnp
mov
fdivrs
push
or
and
sahf
push
push
and
insl
adc
shl
fxch
cmpsl
push
xadd
jnp
insl
aas
fdiv
std
inc
mov
outsl
icebp
adc
or
jno
inc
ret
ds
xchg
inc
roll
scas
and
daa
mov
lea
fldcw
sbbl
pop
cmp
dec
pop
sbb
jnp
lcall
mov
and
fisubs
test
add
int
fs
add
push
shlb
add
push
or
out
into
adc
lea
fdivrl
or
jmp
es
stos
and
sub
ljmp
pand
in
fsub
shl
mov
gs
repnz
ds
pop
ret
ja
cltd
or
jg
cmp
frstor
lea
gs
sar
loope
mov
xchg
and
sub
add
push
jo
inc
insl
jns
rorb
rorb
icebp
mov
pusha
jg,pt
xchg
dec
sarl
outsl
cli
leave
scas
inc
std
sbb
call
jbe
inc
dec
dec
mov
mov
int3
cmc
mov
lcall
pop
loopne
pusha
or
cli
je
stos
mov
xchg
mov
ret
xor
cmp
out
shrb
ljmp
cld
aas
or
sub
sub
repnz
push
sbb
xor
into
adc
or
sbb
or
cli
insb
push
or
es
jae
hlt
ss
xchg
cmpsb
jne
xlat
push
int3
repnz
pop
cmpsb
test
push
pusha
rorl
push
mov
mov
xchg
jecxz
or
inc
dec
flds
dec
xor
xor
pop
jno
add
mov
sub
test
test
in
mov
pop
mov
iret
or
add
seta
sub
mov
jbe
movsl
aad
sbb
mov
cmp
popf
push
ficoml
push
xorl
mov
das
inc
and
xchg
fnsave
sub
inc
jns
fwait
mov
cmp
pop
roll
push
imul
dec
sbb
inc
inc
test
push
sbb
add
push
loopne
out
jl
mov
mov
cs
sub
data16
movaps
fsubrl
mov
xlat
xor
lods
movsl
sub
sbb
mov
and
mov
or
and
leave
xor
inc
loop
inc
fsubr
sub
cmpsb
fsubrp
jl
pop
or
push
adc
inc
mov
mov
cmpsl
jns
push
cli
jb
enter
xor
shlb
push
mov
ss
das
push
xor
mov
fcmovnb
push
adc
fdivl
and
fistps
xchg
aas
int3
jecxz
cmp
mov
cmp
iret
fidivrs
jp
inc
sti
and
lock
xchg
int
les
sti
outsb
mov
push
cmp
jl
mov
mov
push
into
jae
pop
lahf
pop
mov
xchg
sti
mov
and
pop
pusha
pop
enter
or
aaa
lods
sbb
call
data16
sub
pop
dec
add
lahf
xchg
sub
dec
fucomp
sub
mov
mov
scas
ljmp
or
lds
outsb
fbld
dec
xchg
fs
loopne
jns
lcall
sub
mov
cmp
mov
out
cli
sub
ja
xor
fildl
fcoml
adc
cltd
stc
xchg
xchg
sbb
jne
pop
sbb
inc
imul
fwait
imul
inc
jmp
jae
lret
push
add
mov
inc
imul
adc
adc
andl
scas
addr16
cmpb
dec
inc
add
outsb
push
scas
push
push
adc
inc
adc
mov
and
test
push
and
rol
or
and
fstpl
repz
mov
cmc
rcrb
lret
out
jge
xchg
or
int3
dec
iret
and
stos
addr16
inc
inc
int3
mov
inc
jle
pushf
fisubrs
cmpsb
sti
into
push
or
or
add
leave
or
hlt
ret
hlt
xchg
xor
jle
ds
mov
orl
rcll
or
jae
sbb
mov
stos
jae
aaa
enter
lret
sub
fucom
stc
cmp
add
mov
sub
int
push
and
movsl
xor
cld
sub
fs
dec
and
pop
lret
adcl
shlb
jecxz
out
pop
cmp
inc
push
push
loope
sub
sbb
cld
pop
adc
xor
ret
pop
mov
sub
incl
pop
sbb
decl
sbb
stos
loope
fiadds
pop
lods
decl
movsl
cmp
mov
lock
repz
aam
int3
cvtdq2ps
inc
and
cmc
xor
addl
lds
sub
cmp
xchg
sub
cmp
dec
push
das
std
leave
sarb
dec
mov
orl
add
and
jne
cli
pop
aam
xor
int
xchg
imul
mov
mov
lahf
mov
aas
adc
adc
jns,pt
scas
dec
inc
inc
sbb
push
xor
push
shrl
fs
push
in
or
clc
daa
adc
dec
jecxz
addb
test
testb
pop
or
jle
test
xchg
fstpl
js
addr16
imul
cwtl
icebp
das
ficompl
loopne
push
fimull
out
aas
rep
push
xorb
cmc
fadds
mov
pop
dec
cmpsb
push
es
jb
push
and
xor
pop
aam
sub
cmp
mov
push
mov
idivl
push
cmc
inc
sub
adc
push
loope
sbb
inc
imul
mov
int3
and
test
pushf
cmp
addb
jp
icebp
bound
add
add
test
ret
jb
sbb
fcomip
fnstcw
and
mov
mov
inc
ja
test
lds
add
fidivl
test
sbb
adc
mov
hlt
mov
int
mov
subl
fildl
test
lods
inc
cmp
arpl
push
and
sbb
stc
ja
sub
jg
jg
and
xchg
loop
pop
inc
adc
xor
push
add
test
stos
mov
jge
sti
cmc
or
mov
lods
sbbb
aas
fcomp
gs
cmp
lret
pop
sub
push
add
mov
jnp
shlb
add
in
pop
jecxz
mov
icebp
and
mov
pop
push
repnz
divb
push
dec
lock
mov
and
cmpsl
mov
mov
sbbl
lcall
daa
adc
or
jecxz
sbb
cmp
movswl
lcall
ja
loop
enter
push
pop
xor
pop
jb
or
inc
cmp
mov
push
fldenv
jecxz
sbb
dec
stos
test
xchg
ret
std
mov
jnp
out
popf
out
mov
dec
pushf
dec
fwait
xchg
sahf
cmp
dec
pop
xchg
sub
dec
pop
fwait
cmp
sbb
sbb
jae
sub
cwtl
add
or
inc
xchg
rorl
push
dec
pop
dec
imul
pop
xchg
pop
scas
cmp
adc
or
mov
xchg
incb
loop
sub
push
cmp
jb
dec
hlt
mov
xor
xchg
xor
ljmp
test
sbb
xchg
adc
xchg
lcall
js
sub
int3
mov
adc
popf
dec
adc
dec
ja
outsb
out
loope
jo
or
call
mov
jnp
mov
call
fidivrs
stc
imul
pop
adc
cmp
daa
sbb
sahf
out
pop
adc
sar
push
loop
push
push
inc
cmpsb
mov
push
dec
jl
mov
mov
inc
dec
mov
ret
scas
dec
test
xchg
pminsw
in
jg
cmpsb
lahf
mov
xchg
dec
xchg
das
and
loopne
pop
ss
inc
cmc
repz
add
or
mov
cmp
mov
push
rclb
lods
pop
es
sub
xchg
outsl
aad
jle
daa
and
mov
icebp
mov
inc
wbinvd
fidivrs
addr16
dec
mov
cmp
arpl
xchg
xchg
ds
mov
adc
pop
in
xchg
mov
fcompl
hlt
pop
and
movsl
lret
push
sti
pop
cmp
pushl
pop
rcrl
outsb
xchg
jb
loop
ficompl
iret
inc
push
rcrl
push
loopne
pop
mov
jo
ja
rcll
xchg
repz
mov
dec
add
cwtl
xchg
mov
jmp
jle
test
or
xchg
cmp
xor
jno
or
adc
mov
mov
mov
gs
std
cmpsl
xchg
and
and
js
roll
mov
xor
andl
cli
aad
cld
dec
repz
push
notb
jae
divb
hlt
sub
shlb
and
xor
icebp
push
les
mov
xor
clc
arpl
lret
cmp
pop
je
jb
shr
out
aaa
xchg
lret
mov
mov
lods
push
pop
cs
pop
sbb
sti
and
fildl
sub
adcl
daa
mul
movsb
add
sub
lds
sbb
add
leave
inc
test
out
pop
mov
adc
clc
xchg
hlt
adc
cmp
rol
cmp
dec
cwtl
push
in
xchg
test
in
mov
push
cltd
jo
and
jg
ret
loopne
out
iretw
xor
sbb
call
push
cwtl
inc
xchg
std
repz
xlat
fistl
mov
and
push
mov
xchg
ja
imul
inc
cltd
imul
xchg
dec
rcr
call
aaa
in
jbe
les
add
xchg
rol
insl
loopne
xchg
dec
jle
les
shl
inc
pop
xor
rep
bound
lods
andl
iret
mov
pop
ljmp
sbb
lock
jle
fcom
popa
xchg
or
and
dec
add
fs
mov
nop
jno
iret
xlat
mov
xor
mov
pop
mov
pop
iret
push
in
sbb
inc
jp
lds
fwait
inc
sahf
sub
push
popf
xchg
cmc
test
sbb
cld
and
sti
inc
stos
or
scas
adc
ja
push
push
dec
dec
stos
roll
sahf
add
inc
cs
loop
adc
jg
std
sub
add
xor
addl
or
in
pop
icebp
sub
jp
or
xchg
lea
fsub
loope
daa
xchg
mov
in
mov
add
mov
cwtl
push
jne
rolb
mov
cmp
pop
dec
mov
scas
inc
popa
or
push
sub
inc
sti
xchg
add
int
insl
mov
adc
cmp
ret
inc
imul
adc
ficompl
mov
inc
ror
test
add
push
shrl
idiv
push
sarb
outsl
shl
dec
sub
subb
push
int
jg
mov
repnz
mov
adc
mov
push
xor
pop
push
ljmp
scas
data16
sub
jbe
mov
jns
inc
cwtl
or
ljmp
pop
test
and
out
shrb
ret
jge
stos
xlat
cmpsl
movsb
jle
or
xchg
jo
lret
or
push
out
inc
inc
hlt
rcrl
or
push
add
fwait
cmp
es
test
inc
jno
mov
push
fwait
xor
scas
inc
incb
jecxz
or
movsl
pusha
shrb
out
cmp
nop
pop
out
sbb
shl
lret
adc
inc
fidivs
inc
cmp
cmp
pop
lahf
adc
in
xor
cmp
jnp
jnp
adc
negl
cmc
xor
lret
mov
test
fldl
mov
push
in
loop
pop
shrl
fs
push
in
push
popf
gs
and
dec
push
add
xor
cmp
subl
mov
mov
movsb
decl
adc
or
out
ss
iret
movsl
cmp
cmp
imul
mov
pop
jp
jp
cltd
sbb
cmpsl
std
aad
inc
outsl
xor
clc
xchg
mov
mov
pop
xlat
pop
cmp
scas
xchg
sbb
int3
sub
ret
and
fbld
sahf
jno
sahf
fsubp
dec
insb
cli
es
gs
out
mov
pop
lcall
adc
xchg
scas
lahf
xor
lahf
shufps
xor
cltd
sbb
pushf
inc
mov
dec
cmp
jp
dec
dec
jp
icebp
lcall
ss
push
ja
mov
out
jbe
push
push
xchg
sarb
mov
cli
out
out
push
int
enter
inc
xchg
pop
dec
add
lahf
jo
lods
fsubrs
push
in
cmp
lea
cltd
pop
adc
add
pop
xlat
mov
dec
mov
push
stos
addb
popf
das
xlat
xchg
ret
xor
adc
lock
cmp
lods
aam
repz
cmp
sbb
stos
test
in
movsl
js
sub
xchg
jl
ret
adc
push
rcrl
inc
fistps
mov
sbb
jg
jp
lods
adc
jno
add
out
int
push
insl
pushf
push
cwtl
dec
push
sub
xchg
cwtl
push
cmp
pop
andl
inc
dec
xor
andnps
into
nop
or
or
psllw
or
dec
cmp
jnp
xor
lahf
shll
jno
inc
es
push
aas
push
and
lods
out
mov
push
adc
mov
push
mov
add
dec
or
stc
sbb
sub
clc
stc
push
xlat
xchg
inc
fwait
and
add
stc
nop
dec
inc
and
mov
sahf
filds
cmp
stos
adc
inc
clc
pop
xor
test
jne
test
cs
mov
mov
cs
loope
push
and
mov
pop
mov
ficompl
push
rcrl
test
scas
pop
test
inc
aam
cmp
push
mov
gs
adc
int
or
pop
subb
mov
and
and
jecxz
push
pop
ljmp
cmc
mov
pop
fs
push
sbb
sub
lods
scas
mov
js
lea
sbb
incb
mov
pop
notb
inc
mov
icebp
cmp
fmulp
xchg
mov
jmp
addr16
cltd
cwtl
xor
mov
add
push
out
cmp
lds
xor
jmp
mov
in
cmp
mov
cmp
pop
adc
pop
xor
hlt
cld
popf
mov
cmp
in
adc
das
fbstp
cmp
inc
stos
mov
das
shrl
fcmovb
sbb
jle
scas
sbb
lcall
xor
push
push
add
mov
mov
and
in
sbb
adc
or
pop
jg
cwtl
mov
cltd
inc
call
nop
stc
shll
or
lahf
fwait
mov
cs
mov
notl
fwait
push
aaa
and
cmp
xor
subl
mov
or
jle
iret
inc
cmp
filds
adc
mov
data16
jno
sbb
inc
lods
mov
or
movsl
out
adc
jne
fsubr
and
rcr
xchg
lahf
test
movsb
adc
sbb
repnz
add
movb
repz
pop
cwtl
dec
enter
insl
or
lds
jmp
lcall
arpl
xor
ja
ss
in
mov
mov
xchg
xchg
out
and
push
jp
add
call
mov
adc
mov
out
pop
jb
and
subl
xlat
loop
push
add
jge
push
vmovntdq
sub
push
sbb
inc
mov
mov
sbb
xchg
shll
in
and
jae
inc
sti
adc
jb
test
jmp
cmc
arpl
xor
inc
mov
mov
inc
xchg
pop
ret
mov
addl
lods
pop
lock
call
pop
jae
inc
push
sbbl
cwtl
fcmovb
in
xchg
pop
xchg
jge
inc
daa
dec
mov
ljmp
sbb
in
testl
mov
out
sahf
pop
cs
es
ret
cli
and
push
jmp
dec
or
fsubrs
jbe
dec
dec
pop
ja
and
push
int
add
fsubrl
cli
cs
xor
lods
or
cmpsl
adc
pop
lods
mov
je
push
std
fistpll
dec
je
add
add
shrb
test
mov
xlat
in
scas
ret
push
mov
add
shl
out
jle
inc
mov
movsb
pop
aaa
push
test
sub
mov
test
push
pop
repz
inc
jp
xchg
sub
rcrl
js
jb
mov
fldt
xorb
sbb
xor
fmuls
mov
sbb
mov
int
push
call
pop
inc
imul
sub
in
sti
jbe
inc
xchg
out
and
mov
in
or
push
push
dec
push
lcall
inc
bound
adc
jmp
shll
mov
stos
loope
cmp
dec
dec
dec
add
push
hlt
lea
movsb
sbb
out
das
mov
fistpll
and
repz
or
mov
rol
adc
fnstenv
ret
cmc
inc
lret
push
test
mov
sbb
aad
sti
pop
push
or
mov
ficomps
push
jmp
pop
xchg
inc
test
cwtl
shll
ds
mov
sub
sub
cmp
or
lods
aaa
sub
dec
inc
xchg
mov
and
or
or
arpl
clc
sbb
ja
mov
mov
push
xor
aaa
sub
or
out
fldl
fmuls
adc
stc
pop
jb
mov
inc
adc
add
jl
dec
xchg
fs
mov
movsb
rorl
sbb
movsb
insb
inc
out
jno
sbb
pop
js
mov
dec
sbbb
hlt
icebp
rorl
cmpsb
mov
in
or
fstl
pop
test
in
xor
ficomps
test
push
pop
jp
iret
insb
mov
xchg
xchg
lods
int3
and
or
sti
and
mov
clc
pusha
or
mov
xchg
sbb
cmc
mov
sub
call
je
mov
lret
mov
xchg
cs
xchg
dec
fwait
mov
in
loopne
jmp
sbb
insl
mov
cld
nop
cmp
mov
inc
repnz
mov
xchg
cwtl
clc
xchg
add
jg
fwait
clc
xor
adc
or
xlat
add
push
inc
sbb
pusha
leave
sbb
scas
out
add
sbb
dec
jae
push
cltd
enter
jp
jne
sbb
xor
mov
sub
dec
mov
mov
mov
cmp
jns
idivl
inc
fdivs
filds
lods
xchg
lods
xchg
inc
add
mov
push
cmp
mov
or
scas
insb
sbb
inc
dec
mov
jle
rorb
mov
dec
mov
inc
sub
pusha
mov
xor
add
and
pop
int
sti
sub
dec
xor
test
xor
sub
adcb
insb
dec
fstpl
mov
imul
cmp
xor
rorl
mov
adc
repz
inc
sbb
inc
mov
ljmp
add
scas
cli
sbb
xlat
iret
ror
lods
call
cli
sub
add
cmp
cmp
sar
push
in
mov
sub
leave
mov
das
andb
sbb
jp
cwtl
push
in
add
jg
outsb
inc
jno
lcall
push
adcl
mov
pop
pop
test
xchg
jl
sbb
jb
inc
scas
cmc
jnp
pop
popa
jnp
fsubl
cli
dec
dec
cs
rcrl
out
mov
and
dec
movups
dec
sahf
lds
sbb
lcall
lea
mov
cvtpi2ps
sahf
sub
je
mov
xor
lds
dec
mov
or
mov
cwtl
mov
mov
outsb
ficomps
aas
mov
jle
jb
mov
dec
pop
sbb
push
int
adc
mov
and
out
adc
push
popa
aas
add
push
jne
les
scas
xlat
pop
xor
cs
movb
push
and
insb
insl
and
int
mov
push
add
das
xorb
cltd
aam
shll
or
fmuls
and
sbb
stos
jg
ss
ret
xor
mov
push
stos
out
cmp
popa
enter
mov
push
and
sbb
leave
adc
fsubrl
out
lahf
popf
jbe
xor
cltd
mov
out
fnstenv
dec
dec
mov
sub
scas
mov
mov
ret
fsubl
inc
sub
into
gs
scas
mov
js
jecxz
add
les
sbb
and
or
sbb
inc
adc
push
mov
xor
cwtl
les
int3
xchg
mov
or
and
mov
enter
insb
sbb
cmp
mov
pushf
adcb
cltd
rcrl
and
or
add
scas
and
jbe
sub
pop
sbb
mov
push
in
and
rclb
cmp
lods
daa
fbld
mov
jno
xor
pop
fsts
std
pop
inc
jns
push
int3
inc
sub
std
dec
sbb
sbb
test
adc
dec
stos
lock
in
inc
xor
xor
inc
or
out
dec
mov
cmpsl
xchg
out
imull
mov
add
aam
mov
xor
popf
mov
cmp
incl
clc
cld
in
out
dec
pop
call
imul
pop
push
call
cmp
in
clc
cmp
std
add
or
sbb
in
pushf
cmp
add
inc
clc
arpl
aas
mov
xchg
imul
sbb
loop
xlat
push
or
lea
xor
push
push
add
popf
fisubrl
xorl
mov
outsb
in
jp
cmp
je
xorl
and
in
sbb
adc
sbb
aaa
ror
outsb
dec
test
nop
popf
sti
shll
or
mov
arpl
das
or
add
push
sbb
imul
scas
fwait
inc
sbb
aad
pop
cmpsl
aam
mov
sub
push
test
neg
clc
imul
out
test
ljmp
xor
aaa
iret
sub
mov
and
pop
sub
into
cmpsb
lods
sub
out
jns
add
repnz
push
cmc
sbb
mov
repz
mov
jp
loop
cmp
mov
jmp
inc
lea
fdivrl
js
cmpsb
out
out
and
push
xchg
lcall
scas
cmp
cli
std
shr
mov
mov
out
cltd
jnp
cmpsb
insb
mov
dec
sub
xchg
decl
add
or
push
cmp
bound
js
sbb
movsl
sub
jno
out
mov
mov
outsb
popf
inc
mov
scas
inc
hlt
jl
test
mov
fisubl
call
fbstp
test
inc
jnp
sub
xchg
test
loope
int
sbb
xor
cmp
lods
enter
mov
popf
or
pop
push
push
xchg
xchg
jecxz
repnz
cmc
jge
in
cmp
movsb
mov
mov
hlt
adc
insb
xlat
dec
das
sbb
mov
xchg
pop
stc
fneni(8087
fwait
ss
lret
test
dec
ja
cmp
arpl
mov
mov
pop
sub
inc
mov
in
adc
and
das
xor
outsl
das
xor
push
and
les
bound
loop
mov
cmp
and
inc
in
rcrb
mov
sbb
lcall
dec
mov
inc
inc
arpl
andb
lea
mov
cmp
adc
dec
fs
pop
lret
dec
mov
mov
inc
dec
xor
into
insl
cs
add
cmp
lahf
xchg
inc
xlat
pop
mov
fdivr
aad
xchg
pop
xor
les
lahf
sub
outsb
aaa
call
mov
pop
adc
or
mov
je
inc
add
xchg
lcall
add
cwtl
jae
push
mov
enter
or
and
jo
leave
add
pop
sub
xchg
lret
imul
sbb
enter
daa
mov
jne
mov
or
jne
test
scas
into
mov
test
fidivrs
cmp
pop
scas
frstor
jecxz
add
mov
out
xor
cmp
int3
xor
dec
adc
ja
icebp
pusha
inc
test
adc
les
mov
inc
mov
inc
call
push
sub
xor
pusha
push
pop
outsb
adc
ret
sub
dec
xor
sti
loope
sbb
outsl
dec
addr16
xchg
xorl
ror
xor
sub
notl
mov
iret
stos
pop
std
dec
inc
in
aaa
out
std
lds
jle
enter
and
jae
dec
or
xchg
in
xor
insb
dec
jae
leave
mov
push
aaa
or
xchg
sahf
lret
js
ljmp
arpl
and
mov
mov
xor
or
sbb
js
int3
insb
pop
jg
das
mov
les
int3
mov
pushf
and
inc
pop
stos
ss
and
push
lock
xchg
int
jmp
mov
mov
je
add
jno
lahf
rcr
xchg
test
addb
mov
xor
mov
dec
mov
jne
jbe
shrl
or
push
jg
and
cltd
pop
rcll
stc
jno
mov
push
in
mov
sub
lret
xchg
aas
xor
repnz
inc
cli
enter
and
pop
ljmp
jle
mov
stc
add
adc
pop
sub
xlat
into
cld
inc
sahf
cmp
es
mov
mov
xchg
js
mov
cmpsl
sbb
loopne
mov
or
mov
in
iret
lods
movsl
jne
dec
dec
xor
les
or
enter
fisubl
sub
xchg
mov
loope
dec
push
popa
pusha
sbb
and
jnp
stos
int3
mov
lock
sbb
js
mov
loop
out
jle
shr
ret
clc
pop
mov
push
inc
test
iret
outsl
ficoms
mov
inc
lock
inc
xchg
loope
mov
pop
loop
imulb
les
movsb
cltd
inc
icebp
dec
and
dec
xchg
push
gs
mov
sub
jnp
repnz
sub
and
gs
mov
ret
add
lret
les
sbb
xorb
xchg
or
cwtl
mov
mov
idivl
dec
mov
scas
push
stc
and
jp
mov
sarl
addr16
outsb
xchg
pop
mov
aad
fldt
jo
or
xchg
outsb
inc
pop
jg
mov
lahf
xchg
daa
mov
repnz
sub
out
stos
sahf
adc
flds
insl
data16
ret
scas
mov
clc
add
mov
aam
mov
xor
sarb
add
sub
cmpsb
cmc
faddl
mov
out
and
push
pop
dec
popf
imul
push
call
test
sbb
pop
dec
inc
pop
mov
mov
xchg
fisttpll
xchg
movsb
and
mov
hlt
mov
push
mov
mov
inc
xor
mov
jl
pop
xorb
sahf
dec
jecxz
xlat
insl
int
es
outsb
xor
imul
test
test
inc
adc
lret
add
and
mov
imul
xchg
add
hlt
es
lds
rclb
mov
pop
femms
fistpl
mov
jo
inc
mov
sbb
or
sbb
adc
fnstenv
add
ret
imul
pop
jmp
pop
push
sub
sub
popa
stc
adc
inc
pop
sub
cmpb
jb
xlat
sbb
xchg
fcmovnbe
xchg
pusha
fisubs
dec
cs
adc
sub
jl
mov
pop
fdivrl
lods
cli
jbe
or
rolb
xchg
mov
lea
clc
stos
pop
xor
add
push
insl
repnz
stos
loopne
imul
lret
shll
mov
js
outsl
push
call
adc
mov
dec
mov
icebp
mov
insb
dec
mov
das
inc
dec
or
adc
push
das
test
popf
sub
movsl
jb
inc
in
insb
push
add
add
push
cs
jmp
mov
pop
push
inc
mov
adc
outsl
je
ss
stos
mov
pop
addr16
pop
clc
sbb
add
lods
std
dec
dec
cmp
ret
mul
ficoms
rolb
dec
ds
push
xchg
adc
sarb
mov
push
ljmp
hlt
arpl
daa
arpl
add
in
jo
stos
xchg
mov
xchg
stc
dec
jb
movsl
jo
mov
lods
mov
rcr
cmp
cli
jecxz
xchg
dec
cmp
jle
dec
stos
jp
bound
jae
fidivrl
jp
mov
dec
dec
aam
inc
stc
push
cmc
enter
cmp
cmpsb
lcall
jmp
jbe
xchg
push
or
cwtl
push
aas
or
aad
icebp
mov
mov
test
cmp
lods
jecxz
xchg
cmp
imul
aaa
jae
fnstcw
aas
pusha
cmc
adc
push
jle
or
nop
mov
outsb
add
pop
js
jne
cli
out
sub
push
and
sub
lcall
or
sahf
and
shll
jp
cmp
pop
sti
pop
jecxz
test
in
xchg
jmp
add
mov
scas
jp
sbb
cmpsb
stc
lret
mov
and
in
andl
jp
or
push
incl
xchg
or
cmp
cmp
addr16
aam
rcrb
cltd
jnp
pop
dec
mov
xchg
mov
sbb
repz
jae
mov
call
adc
xchg
jae
inc
jnp
cmp
mov
insl
cmp
ss
adc
add
cltd
repnz
pop
push
iret
dec
or
mov
pushfw
lahf
sub
push
je
sahf
aad
ljmp
and
adc
add
in
xchg
imul
or
ljmp
imul
push
push
add
jne
and
pop
cmc
fldenv
fnstcw
add
stc
fnstsw
push
popf
mov
es
lret
push
jp
adc
xchg
jns
and
push
data16
inc
stos
pop
shl
ds
aaa
scas
ds
sbb
pop
inc
pusha
push
or
adc
aas
rol
out
test
rcll
inc
movl
shr
push
pop
arpl
xchg
mov
movsb
addr16
xlat
roll
push
ret
in
movsb
out
fdivrp
mov
test
lcall
out
test
pop
mov
pusha
mov
dec
mov
push
fsubrs
xchg
mov
lea
inc
pop
orb
insl
mov
pop
pop
outsb
stos
rcll
scas
sub
cmp
hlt
push
sbb
dec
test
bound
aas
cwtl
pop
std
xchg
pop
inc
sub
out
vmulps
imul
jns
subl
pop
mov
cmpsb
push
pop
insl
sbb
out
outsb
fs
jg
cmp
inc
sub
pop
lds
jb
dec
not
aad
int3
shl
sub
cmp
mov
outsl
mov
hlt
jnp
jb
scas
pusha
push
xor
lock
jnp
in
sbb
ja
ss
mov
stc
loope
aas
mov
cmpl
inc
jp
lock
cli
fcoml
cwtl
ds
and
fnstcw
mov
addr16
push
or
cmp
lcall
mov
push
dec
xor
jecxz
add
and
test
daa
xor
inc
push
shrb
aam
out
jo
mov
fstl
jecxz
xchg
xorl
xchg
mov
cmp
mov
xor
mov
xchg
dec
mov
ljmp
pop
mov
in
out
repz
inc
loope
cmp
daa
scas
mov
or
test
pop
test
xor
jnp
dec
fistps
push
imul
or
jge
push
popf
mov
cmpsb
xchg
jne
push
pop
outsl
not
fildl
divb
jl
jecxz
das
sub
add
cmp
mov
jno
dec
inc
mov
dec
xor
iret
mulb
jmp
imul
fs
sbb
or
jo
jbe
data16
aad
xlat
insb
je
lods
jae
dec
or
lea
addb
in
adc
mov
xlat
add
and
subb
dec
nop
dec
dec
mov
and
mov
incb
dec
leave
adc
mov
fiadds
pop
xchg
fiaddl
dec
cmp
and
fs
xchg
sbb
fsubr
add
cmp
inc
sbb
ss
mov
xor
in
iret
dec
mov
push
cltd
adc
sbb
aaa
mov
push
loop
sti
dec
xchg
lods
jecxz
lret
pop
dec
inc
jb
mov
and
pop
cmp
fidivrl
cmp
repnz
es
mov
add
inc
or
and
loope
jecxz
sub
push
dec
pop
test
dec
sahf
out
cs
pop
dec
pop
scas
aam
cmpsl
push
aad
stos
mov
loop
sbb
dec
pop
pop
inc
neg
je
xchg
fldt
aaa
dec
xor
sbb
lret
adc
fnstcw
lahf
xor
inc
jp
inc
fists
add
adc
popf
stc
fimull
subl
js
push
or
repnz
dec
lret
std
in
mov
popa
sub
xchg
mov
push
or
lds
cwtl
cmp
shr
xor
lcall
push
lods
pop
repz
stos
sub
xchg
pop
push
fs
cmp
inc
sub
mov
lock
repnz
pop
xor
shll
mov
movsl
popf
ljmp
imul
jnp
jo
cmp
push
cs
bound
jp
aaa
xor
movsl
or
popf
das
int3
out
fldenv
mov
sub
inc
rol
cmp
fs
push
les
dec
mov
fs
outsb
mov
mov
sbb
or
movsl
sbb
and
in
cmp
mov
mov
pop
inc
jnp
lret
in
sub
out
dec
shll
stos
mov
iret
movhps
bound
sar
add
add
sub
dec
ret
adc
out
push
into
mov
lahf
pop
adc
je
and
xor
in
cmp
lea
push
fiadds
push
stos
and
outsl
rcll
push
loop
push
mov
mov
sbb
fcomip
outsl
cmp
push
push
data16
cltd
int3
cs
fwait
ja
mov
movsl
push
dec
dec
mov
insb
xor
mov
pushf
in
dec
bound
test
dec
mov
mov
lea
xor
mov
or
cmp
add
cmpsl
inc
out
pop
push
insb
bound
leave
jl
clc
cmpsl
lea
clc
jmp
mov
and
adc
sub
dec
push
mov
or
jmp
cmp
xchg
dec
jp
movb
iret
stos
int
jecxz
fadd
sub
jmp
lds
rcrb
pusha
ljmp
nop
sub
inc
jp
adcb
pop
divps
stos
popfw
jnp
mov
mov
pushf
ja
repnz
pop
sub
int3
jle
int3
xchg
test
mov
sbb
mov
sbb
call
inc
dec
adc
call
adc
inc
mov
dec
push
movsb
push
jecxz
xor
rcrb
add
and
pop
shrb
mov
je
fnstsw
sbb
cmp
pcmpgtd
out
jp
arpl
adc
cmp
mov
inc
enter
nop
mov
pop
loop
push
pop
aam
loope
rsqrtps
stc
ficoms
pop
fnstsw
push
icebp
inc
jecxz
or
xchg
mov
xchg
bound
icebp
inc
mov
mov
in
ja
lea
es
mov
pop
mov
pop
and
mov
dec
dec
jecxz
scas
push
mov
mov
pop
loope
popl
cmp
sbb
rcl
setp
xorb
jne
test
jle
popf
lea
test
or
mov
lret
mov
mov
push
mov
sub
sbb
dec
mov
repnz
imul
movsb
mov
adc
idivb
lret
fwait
xor
jnp
mov
mov
lea
into
mov
icebp
mov
hlt
gs
in
jp
stos
lret
add
loope
aad
shrl
adc
pusha
and
inc
push
lret
inc
jnp
std
nop
pop
inc
popf
scas
dec
mov
cmpsb
pop
xlat
popf
in
adc
add
nop
inc
jecxz
add
or
jae
xchg
shl
stos
pop
jge
sub
mov
leave
mov
fists
adc
and
push
mov
pop
shll
pop
push
dec
pop
push
cltd
xor
push
jecxz
rorl
lea
dec
and
mov
lods
cmpsl
negl
pop
or
xlat
cmp
sbb
movd
out
lret
push
push
push
mov
push
adc
mov
push
mov
xor
mov
push
mov
mov
int
repz
stc
addl
repz
int
stos
inc
cmpsb
fsubr
enter
rorb
pop
push
mov
leave
mov
mov
in
cld
out
pop
push
test
mov
jnp
mov
mov
mov
pop
mov
movsl
js
sti
test
notb
jb
pop
outsl
xchg
movsl
pop
lcall
xchg
add
xlat
out
dec
test
xchg
sbb
mov
fs
jbe
push
adc
movsb
aaa
cmpsb
fsubp
scas
push
cmp
cs
dec
fiadds
enter
xchg
mov
sbb
cld
push
in
mov
push
pop
shl
pop
lret
mov
cmpsl
ficomps
mov
sbb
icebp
fs
call
xor
dec
push
daa
adc
idivb
das
subb
cmp
movsb
icebp
cltd
pop
rcll
jg
jae
mov
or
xchg
dec
addr16
and
inc
outsb
movb
mov
divl
mov
cs
and
aam
push
faddl
or
fsts
jge
push
jne
lcall
mov
in
and
sbb
jecxz
jecxz
adc
add
sbb
es
jnp
jge
loopne
jb
in
dec
jo
jecxz
lock
or
repnz
cmp
mov
push
fucomip
cmp
fs
out
insb
in
inc
popl
inc
add
cli
cmp
loopne
mov
cmp
ljmp
lea
inc
es
andnps
mov
sbb
cmp
jmp
xchg
mov
mov
popf
xor
lcall
jb
lods
dec
jmp
jg
xor
xor
xchg
sti
xchg
xor
jbe
push
jg
icebp
push
popa
sub
xor
aas
imul
cmp
cmova
jg
add
imul
stc
or
cmp
stos
test
adc
push
fisttpl
andb
das
adc
fs
mov
jl
sti
test
sahf
dec
outsb
mov
gs
repnz
rorl
movsb
push
xchg
push
sub
push
adc
fiaddl
mov
mov
jo
or
add
or
push
lock
ljmp
or
out
inc
dec
in
jbe
push
cs
shl
xchg
test
mov
js
repnz
push
jns
jle
scas
inc
adc
sub
or
mov
mov
sbb
mov
stos
xchg
ret
dec
popa
cmp
out
aas
pop
aad
stos
push
mov
in
jp
es
leave
xlat
shll
jecxz
lahf
push
sbb
lret
pop
aaa
out
and
mov
popa
lds
out
or
gs
mov
movsb
int3
inc
mov
sbb
cmp
sub
in
cmp
cli
cmp
cltd
scas
mov
mov
jb
hlt
sub
xor
pop
dec
arpl
adc
inc
bound
pop
aam
sub
stc
inc
arpl
out
ja
fdivrp
mov
mov
cmp
das
sub
pushf
cmp
lds
rolb
xchg
mov
pop
xchg
sbb
dec
mov
mov
push
mov
jmp
push
jbe
cld
mov
filds
xor
sahf
filds
mov
arpl
arpl
jg
lret
pop
imul
mov
xor
cld
dec
push
lods
pop
dec
ret
push
and
int
sub
add
fwait
outsl
and
push
xor
js
inc
jmp
test
adc
icebp
push
cli
das
lds
movsb
sbbl
mov
cwtl
push
add
mov
pop
dec
lods
imul
insl
hlt
movsb
push
sub
mov
xchg
aad
and
ljmp
insl
out
push
enter
addb
ljmp
or
clc
into
xor
jge
xlat
pop
int
dec
orl
mov
mov
or
clc
sbb
adc
dec
cmp
add
vpmaxub
jne
fildll
mov
adc
sub
xchg
out
mov
rol
enter
dec
push
lods
sarb
push
cmp
sub
sub
imul
test
mov
aas
aam
xor
stc
mov
jl
mov
mov
push
pop
or
add
cmc
sahf
xchg
jecxz
dec
cwtl
jmp
cltd
add
dec
es
in
pop
sbb
adc
mov
out
lds
cmp
outsb
xor
sbb
movsl
imull
popf
pop
lret
adc
test
push
sub
popa
int
jge
mov
and
shll
test
cmp
xchg
stc
xchg
repnz
mov
mov
lods
loop
inc
std
adc
mov
jg
and
dec
push
mov
out
not
cmp
dec
push
pop
sbb
jbe
and
je
ret
bound
xchg
and
dec
rcrb
aad
test
sub
rcrb
into
divl
pop
push
les
push
les
nop
inc
cmp
ret
loop
xor
and
adc
mov
mov
xor
and
es
xor
icebp
addr16
fdivrs
cmp
jecxz
mov
xor
sbb
fs
add
cmp
stos
loope
imul
scas
int
aaa
cmc
loope
repnz
mov
jge
testl
out
sbb
lods
add
in
mov
mov
mov
xor
lea
cmpsl
jno
addl
add
xchg
cmpsl
jnp
divps
repz
mov
xor
xchg
nop
je
inc
xchg
fnstenv
in
sbb
xor
pop
or
dec
inc
test
cmp
or
inc
pop
or
sbbb
xchg
es
aam
or
rcl
add
push
icebp
andl
or
roll
lock
adc
adc
push
inc
popf
mov
movsl
loop
stos
cmp
mov
lock
fcoml
sub
aam
or
rolb
xchg
push
fcomi
mov
pop
rorb
fstps
ja
int3
mov
filds
je
repz
sbbb
ret
loop
in
mov
hlt
xchg
loopne
lods
pop
xor
xor
adc
add
push
lret
adcl
pushf
sbb
jne
sub
xor
bound
rcl
pop
in
ret
test
sbb
jmp
jns
call
pop
movsb
sbb
pusha
shll
js
cmp
mov
loopne
xchg
insl
cmpb
cwtl
loope
inc
shr
in
push
lock
divl
pop
rolb
mov
call
pop
lret
xchg
xchg
xchg
repnz
xchg
sub
add
push
pop
push
arpl
xchg
out
mov
cmp
add
imul
cmp
inc
outsb
mov
push
in
dec
pop
cld
dec
sbb
push
lods
lods
lds
movsb
add
test
jno
fstps
mov
das
inc
pushl
out
push
pop
sbb
cltd
daa
mov
jp
xor
cmc
std
ret
mov
pop
lock
jnp
test
mov
sbb
sub
test
lods
mov
push
stc
push
adc
jl
sbb
cltd
inc
movsl
mov
lret
jno
adc
mov
mov
mov
add
addr16
jmp
adcb
and
test
test
or
out
jge
lret
loope
mov
adc
fnsave
into
jmp
mov
cmp
jns
mov
jge
data16
and
jle
cmp
scas
dec
scas
loope
xchg
fsubl
test
jb
das
je
loope
jbe
sbb
mov
bound
jns
inc
xchg
in
add
shlb
push
int
dec
das
jge
icebp
inc
adc
mov
sbb
in
pop
icebp
loop
lret
xor
imul
jmp
cmpsb
lock
adc
ds
lods
cltd
popa
ljmp
adc
push
stc
mov
mov
adc
add
sbb
sbb
mov
adc
and
xchg
adc
inc
std
movsb
add
push
dec
loope
add
imul
loop
repnz
jmp
mov
out
jmp
leave
sub
or
xchg
sbb
mov
stos
sti
mov
jmp
aam
sbb
adc
fstl
cmpsl
pop
adc
jecxz
mov
adc
cmp
pop
adc
shrl
jb
add
mov
xchg
inc
sub
fwait
lcall
pop
flds
inc
shll
sub
dec
ret
push
int
scas
xchg
push
and
aaa
dec
lahf
xchg
pop
inc
mov
test
push
and
sbb
nop
cmp
xchg
stos
std
clc
shrb
shrb
lods
add
xchg
sahf
adc
push
and
pushf
and
test
test
jle
pushf
pop
cmpsl
mov
push
in
mov
fisubrl
xor
sar
sub
mov
pop
sub
shlb
shl
das
sbb
mov
rorl
in
in
shrb
lea
jle
sub
mov
sti
jl
mov
pop
xchg
in
xchg
mov
rolb
pop
mov
lea
and
xor
and
mull
mov
and
es
mov
sbb
push
fmull
movl
lea
adc
hlt
jmp
scas
fdivrp
mov
push
add
fwait
int
lock
dec
jno
ficoms
mov
mov
and
and
lret
push
fcmovnb
sbb
mov
or
xchg
mov
xchg
jne
stos
push
add
mov
ja
in
or
sbb
or
ficoms
addr16
mov
cmp
lds
mov
lret
mov
in
or
add
sbb
jns
insb
pop
imul
jae
shll
mov
xor
jmp
dec
cli
pop
xor
and
and
mov
mov
enter
cwtl
add
sub
fbld
mov
adc
pop
pushfw
xor
addr16
cli
call
aam
mov
xchg
xchg
test
repnz
int
stos
pmulhuw
int
decl
mov
mov
pop
adc
add
int3
cmpsl
dec
ret
or
nop
imul
jle
inc
aam
loopne
xchg
push
jge
xor
and
xchg
jge
int3
mov
lock
shlb
outsl
add
xor
test
outsl
mov
aas
push
jbe
push
stos
fsubl
xchg
clc
add
pusha
iret
sbb
xchg
adc
shlb
inc
dec
pop
js
pop
xor
dec
gs
xor
es
ljmp
xor
cld
popf
mov
les
adc
lcall
daa
sub
movsb
shlb
cmp
aaa
jecxz
inc
xchg
scas
iret
push
loopne
push
loopne
outsb
pop
mov
and
and
out
pushf
or
push
int3
jbe
jb
jg
imul
push
jns
in
cmpsl
adc
push
dec
xlat
loope
push
imul
xor
or
mov
jbe
pop
add
and
push
stos
xor
test
movsb
jmp
lds
xchg
push
loop
xchg
shrb
cmpsl
inc
jns
or
addr16
pop
in
stc
inc
mov
add
add
jnp
mov
stc
test
je
test
sub
sub
jno
fstp
and
inc
mov
mov
push
call
push
cwtl
mov
mov
xchg
and
mov
movsl
xor
test
sahf
aam
ficomps
es
add
sub
sbb
fcmovb
mov
mov
and
push
jae
cmp
xor
call
push
jae
test
push
test
add
cld
mov
in
mov
and
pop
push
pop
in
sbb
mov
movsl
add
cmpsb
ror
push
and
hlt
jae
inc
repz
xchg
mov
pusha
in
mov
call
and
imul
mov
lds
sub
or
rorl
sbb
shll
cmc
push
insb
outsl
frstor
and
cmp
lods
or
das
shll
or
inc
lods
ljmp
jge
xor
cmp
mov
jnp
jg
xchg
mov
mov
and
test
push
mov
shl
xor
hlt
mov
xlat
or
loop
push
fld1
int
ja
xchg
mov
push
pop
or
pushf
push
jg
rclb
jne
xchg
fdiv
jle
jecxz
inc
and
insb
stos
adc
icebp
roll
repz
mov
xchg
test
into
or
mov
rcrb
jecxz
cmp
inc
jmp
pop
test
mov
popa
nop
lds
rcll
testb
ljmp
repnz
xor
inc
jge
xor
cld
fs
into
inc
sub
fwait
inc
xor
in
shl
cmp
push
loop
sbb
pop
push
jo
cltd
les
mov
scas
outsl
fwait
xlat
js
jp
fwait
lret
gs
ret
sbb
cwtl
repz
aam
mov
pop
in
lcall
out
into
mov
mov
into
and
stos
xchg
out
jp
push
scas
std
repz
outsl
jg
pop
inc
out
inc
sbb
mov
sbb
or
pushf
pop
add
cmc
and
insl
aam
pop
test
cltd
addr16
lret
ds
mov
dec
pop
mov
icebp
jg,pn
movsb
nop
test
sti
xchg
push
fnstcw
xor
and
fldl
xor
push
mov
add
pop
jmp
pop
push
cli
cmp
push
aam
into
sub
lret
inc
sahf
das
adc
sub
fcoml
jmp
push
adc
mov
addr16
sahf
add
cmp
cmp
jns
cwtl
test
outsb
push
cmpsb
mov
xor
outsl
js
dec
sub
adc
popf
pop
scas
rorl
xchg
push
in
rol
push
cmp
idivb
aas
jo
cld
pushf
add
aam
je
shll
cwtl
mov
lods
xchg
ret
out
mov
lret
pop
xor
mov
push
xlat
icebp
scas
bound
ja
mov
and
cltd
loop
mov
clc
in
mov
inc
push
add
xor
jp
push
fs
sub
lret
fistpll
or
stc
pop
cwtl
sub
add
cmc
insb
movsb
dec
sub
fbld
or
fnstenv
add
out
ss
shlb
hlt
sarl
loope
lret
mov
stc
imul
lcall
mov
inc
shlb
jp
xor
in
mov
pop
loop
mov
sub
insb
push
icebp
xchg
rolb
xor
bound
cmpsb
pusha
fsubs
dec
insb
xlat
cli
shlb
and
rolb
pop
das
dec
cli
pop
or
mov
ds
mov
test
hlt
cwtl
daa
stos
sbb
jecxz
ffree
or
inc
insb
ja
adc
shrb
in
sti
xchg
or
cmp
popf
cwtl
fincstp
out
dec
fwait
and
lcall
sbb
adc
jle
dec
mov
sbb
xor
shlb
pop
jmp
sub
pop
lods
sbb
lahf
xor
inc
repz
cmpsb
xchg
cmp
fcomip
cmpb
mov
imul
out
test
fisttpll
fdivrl
sub
pop
inc
xchg
mov
push
xchg
jns
popf
and
scas
or
or
fwait
repnz
out
cmp
and
push
mov
lret
call
add
repz
or
aas
pop
xor
pop
sbb
lock
push
dec
mov
rcrl
jae
loopne
jg
mov
xorl
xorl
es
cmpsb
cmp
mov
loopne
dec
psrad
faddl
in
shlb
and
movsb
push
mov
loope
xor
outsl
in
ret
fs
xchg
xchg
xor
js
xor
repz
dec
mov
dec
jo
dec
and
xor
xchg
jmp
cli
mov
cmpsl
fldt
jmp
addl
sub
lods
leave
xchg
mov
scas
pop
add
cli
dec
push
adc
icebp
sub
es
jae
xor
test
jmp
sbb
in
into
lods
push
ret
mov
sti
push
xchg
sbb
adcb
dec
shll
mov
push
mov
mov
sub
sub
pop
or
mov
daa
dec
jnp
cmpsl
sub
popa
pop
sbb
adc
movsl
mov
aas
add
loope
jl
les
and
dec
fsubrs
cmpsl
rclb
mov
daa
insb
je
cmc
ret
fs
fdivl
sub
rcrb
fdivs
cwtl
rclb
test
dec
lret
fs
dec
jmp
jg
test
push
fcoms
aaa
mov
mov
repnz
in
daa
mov
dec
sahf
push
push
push
ret
jmp
enter
jmp
xor
or
pop
insb
out
into
sbb
dec
sbbb
cld
mov
sub
sub
cmp
pop
cld
or
fdivrs
stos
pop
adc
das
push
in
out
dec
aas
in
add
jnp
icebp
into
adc
hlt
cmpsl
popa
js
sbb
xchg
sbb
push
jo
jg
les
leave
sbb
inc
out
mov
outsl
and
stc
repnz
xor
or
mov
push
inc
inc
mov
sahf
nop
arpl
xchg
xor
vpaddusb
int
xor
in
mov
jle
aam
icebp
flds
mov
jb
lds
test
or
test
sub
sti
mov
and
add
sbb
inc
js
sub
iret
jne
and
test
imul
shll
dec
ret
not
jg
push
inc
icebp
add
dec
test
push
stos
mov
loope
or
sahf
iret
jno
orl
ja
sti
sub
sub
inc
mov
and
push
adc
jmp
xorb
mov
inc
sub
nop
cmpsb
push
jle
test
pop
imul
gs
and
aaa
pop
xor
add
sbb
pop
bound
fnsave
pop
loope
xor
mov
xchg
jno
push
scas
adc
daa
test
inc
cmpsb
sbb
repnz
inc
sbb
cmp
cmp
das
lods
push
nop
in
xchg
adc
ds
cwtl
mov
or
add
xchg
add
ja
roll
mov
insb
add
stos
cmp
jmp
push
shrb
push
stos
movsb
out
sti
xchg
loopne
mov
call
hlt
rclb
les
lods
aas
mov
push
out
fwait
into
cli
push
cmp
push
aam
jno
jge
movsb
push
rclb
loopne
add
insb
cmpsb
pop
jecxz
pop
or
sub
sub
ds
sub
sub
sbb
jl
test
push
add
and
imul
pusha
out
scas
nop
xchg
mov
movsb
mov
cmpsb
in
and
cltd
das
jge
das
fsubrp
fisttps
mov
pusha
jge
pop
xlat
sub
dec
mov
das
jne
std
cmp
je
aam
jle
test
fstl
ljmp
dec
inc
in
bound
jo
stos
mov
mov
pop
test
xor
out
neg
push
cs
insb
adc
mov
lds
es
rcrb
movsl
mov
int
jae
jbe
adc
pop
adc
pop
mov
pop
insl
std
fs
call
out
jl
leave
fbstp
sbb
push
inc
sbb
sarb
stc
adc
mov
jle
cmpsb
outsb
pop
inc
sub
sbb
gs
movsl
clc
push
dec
lcall
adc
fstps
sub
jp
repz
fildl
xor
pop
aad
push
cltd
or
add
push
outsb
mov
jns
sahf
cs
mov
std
movsb
jns
dec
or
in
shl
xchg
cmpb
mov
js
les
or
inc
sbb
jle
mov
testl
and
sbb
xchg
adc
lret
test
jne
negl
ds
or
push
test
addl
xor
pusha
loope
pushf
lock
imul
outsl
mov
pop
pop
mov
movsl
je
das
aam
addb
jg
ficompl
add
add
or
or
loopne
add
xchg
jo
mov
xchg
rorb
pop
xor
sti
push
xchg
into
roll
jne
push
push
cmpsb
dec
and
mov
mov
xor
sbb
int3
loop
loop
stos
insl
test
push
pushf
lock
in
imul
lcall
lods
or
jp
test
jo
push
inc
pop
cmpsl
int3
inc
inc
jle
imul
iret
loop
pop
ret
jns
dec
cli
sbb
es
mov
push
mov
xor
shll
fidivrs
pop
loop
or
mov
jae
addb
scas
or
jmp
and
outsl
adc
cmp
fbstp
mov
jge
jnp
xchg
xchg
or
and
inc
mov
paddsb
mov
imul
jo
jae
and
mov
or
push
add
roll
stos
inc
push
dec
add
adc
pop
into
int3
add
xlat
ret
lret
into
pop
dec
jle
das
icebp
popa
xor
in
shll
paddsb
pop
mov
dec
pop
je
jbe
subb
ret
sbb
ss
inc
fwait
mov
repz
frndint
int
lcall
loopne
jle
jg
pusha
pop
dec
cwtl
imul
mov
jne
mov
mov
outsl
push
jecxz
mov
mov
pop
push
mov
pusha
stc
dec
push
adc
sub
inc
imul
push
xchg
scas
gs
ss
mov
mov
ss
mov
sbb
push
addl
adc
mov
xchg
xor
dec
insb
cmp
popf
adc
xor
imul
clc
mov
test
sahf
popa
testb
cli
lret
cmpsb
into
push
push
adc
nop
mov
orb
sub
ds
ficoms
lods
sub
xchg
xor
push
sbb
popf
cmp
jno
sub
popf
sti
push
inc
mov
lods
mov
out
xacquire
mov
loope
mov
cmp
mov
push
fsubrl
repnz
xchg
ljmp
sub
gs
popa
dec
mov
mov
dec
pusha
inc
mov
inc
orb
jne
inc
pop
inc
mov
add
jmp
in
les
sub
repz
sub
mov
mov
jmp
shll
int3
mov
mulb
lods
out
adc
aas
sbb
cmp
icebp
inc
sbb
fwait
and
or
cltd
loopne
jo
xor
hlt
and
mov
add
xchg
sbb
aam
fnstsw
sbb
sbb
mov
sbb
cmp
mov
test
insl
out
lds
stos
dec
jle
inc
add
sub
cmp
scas
adc
rcrl
sub
cs
or
incb
hlt
xchg
jmp
add
xor
fcomip
int3
or
out
fstpl
enter
xchg
aaa
pcmpgtw
mov
popf
data16
inc
mov
ljmp
jae
in
gs
insb
sub
and
pop
push
and
iret
add
mov
sahf
xchg
cmp
enter
enter
ja
into
cmp
aaa
inc
xor
adc
popa
dec
jle
stos
andb
addr16
add
sub
fisubrs
inc
xor
outsb
add
mov
ja
stos
or
dec
xchg
nop
daa
rorb
andl
ljmp
jmp
inc
add
adc
adc
cltd
fisubl
mov
push
jg
sub
pop
mov
ret
notl
cmp
or
pop
mov
stos
sahf
fdiv
pop
es
or
les
clc
add
shlb
insl
orl
push
lea
js
jnp
cli
push
cmpsb
or
icebp
cmp
cmc
sbb
inc
jns
das
outsl
ljmp
rcl
inc
mov
lahf
adcb
adc
inc
sbb
pop
test
filds
cmp
ficompl
jbe
or
out
fmul
lds
test
cmp
push
lret
inc
adc
cmc
push
sar
mov
in
xchg
aad
repz
inc
jle
in
adc
je
cmp
xchg
sub
cmp
test
cs
cmpsb
call
push
and
mov
xchg
jecxz
xchg
stc
test
cmc
cs
add
mov
jne
cmp
jp
sbb
push
or
cmp
inc
idivl
ja
or
test
pop
jae
mov
jnp
outsl
xchg
xorl
rolb
or
add
dec
push
stos
adc
xchg
mov
dec
mov
jne
mov
daa
rcll
inc
sbb
popa
push
add
std
stos
and
mov
jecxz
pop
dec
adc
aaa
and
push
sti
subb
mov
lds
add
mov
rcl
jmp
ds
mov
in
imul
insb
xor
fcomps
dec
in
das
in
pop
cmp
lret
stos
jp
push
mov
sub
mov
push
mov
es
loope
scas
xchg
xchg
enter
les
sub
cmpsl
and
lret
in
nop
mov
mov
jmp
mov
test
pop
sbb
enter
loopne
pushf
out
push
xor
fnsave
repz
sarl
add
mov
mov
dec
mov
shlb
addb
xlat
push
aad
mov
mov
fdivrl
mov
aam
jo
sbb
hlt
push
iret
xchg
jle
cmp
push
pop
pop
push
inc
push
push
xchg
icebp
ret
and
stos
mov
xor
xor
loope
jae
fcmovnu
stc
stc
xchg
cmc
inc
cmp
cmpb
jg
push
xchg
lods
cmp
lea
mov
movsl
andl
lea
mov
mov
out
les
sub
mov
or
adc
sbb
in
popf
lock
xchg
mov
sbb
xorl
in
cmpsl
or
cmpsl
inc
nop
push
pop
xor
jle
lods
cmp
jge
cmp
xchg
lea
aas
mov
cmp
inc
fimuls
sub
loop
sbb
pop
mov
add
mov
pop
pand
lret
jb
lret
leave
jmp
test
repz
sbb
and
mov
inc
out
push
jle
jnp
cmpsl
dec
sub
xor
pop
addr16
jp
mov
sbb
cmpsb
push
mov
push
int
jecxz
or
cmp
inc
pop
mov
xor
nop
sub
arpl
pop
jle
jle
test
push
adc
cmp
xchg
dec
cs
stos
jle
dec
pop
int3
imul
add
lea
xchg
inc
push
sub
mov
insl
or
mov
jbe
jmp
mov
mov
or
dec
inc
mov
movsb
imul
test
imul
xchg
inc
lods
pushf
lock
add
adc
jnp
xchg
mov
outsb
dec
mov
xchg
inc
insl
push
or
movsl
cwtl
jo
pop
into
vmovhpd
loopne
jns
shll
inc
mulb
jns
push
mov
rorb
loope
cli
sti
mov
or
sbb
es
dec
movsl
mov
jecxz
push
pushf
jp
pusha
cmc
lret
or
mov
cld
and
sub
inc
enter
jmp
or
cmc
sbb
dec
inc
dec
clc
shrb
lock
mov
pop
add
add
out
jl
and
roll
fistl
xchg
repz
adc
sub
pop
sub
movsl
mov
repnz
aas
jecxz
and
xlat
arpl
icebp
sbbl
push
cmp
mov
add
lret
andb
fstpl
mov
ja
pop
mov
cmp
push
and
nop
xchg
loope
pop
mov
mov
mov
inc
dec
ja
adc
inc
movsl
sbb
shl
jno
icebp
aam
mov
sbb
xchg
out
stos
ja
or
in
xchg
aaa
popf
addb
sub
movsl
lods
sbb
cwtl
mov
dec
mov
lahf
push
clc
xchg
push
inc
xchg
xor
mov
xchg
lds
je
outsl
fmull
xor
sti
sub
add
jnp
ja
lahf
add
nop
sbb
push
mov
jb
ret
les
aas
xchg
mov
test
cmp
mov
cltd
mov
mov
mov
lahf
into
push
pop
xchg
jo
jns
imul
pop
adc
shlb
cmp
test
mov
jne
rorb
lahf
call
xchg
sbbb
jmp
imulb
fdivrl
sti
push
push
add
push
xor
and
inc
and
lds
addr16
mov
mov
adc
mov
xchg
lcall
imul
movsl
adc
dec
scas
fmull
call
sub
stc
adc
add
fcoml
repz
dec
and
mov
dec
inc
pop
inc
lcall
sub
int
aaa
sahf
and
lock
scas
and
inc
call
addl
jnp
repz
jne
fwait
mov
in
testb
mov
nop
jo
pop
mov
stc
xchg
out
adc
add
xchg
fbstp
stos
sub
or
lods
push
pop
dec
aas
dec
std
xorl
ret
ret
insb
pusha
pop
stos
dec
push
mov
sub
hlt
inc
fsubr
jo
push
mov
inc
outsl
pop
lds
cmp
popf
mov
sbb
push
outsb
out
divl
cltd
sub
mov
jbe
mov
pop
cmp
xor
int3
and
xchg
xchg
mov
sub
sbb
xor
shrb
xor
rcrb
pop
jb
dec
add
std
cltd
push
jae
dec
add
jns
pop
bound
adc
scas
add
mulb
pop
int3
xor
and
outsl
sub
lock
mov
dec
push
jp
iret
xor
xor
mov
clc
cmp
gs
mov
xor
adcl
call
scas
xchg
cmpb
mov
and
in
xchg
das
enter
test
jae
pop
out
test
mov
xor
dec
mov
rorl
andb
jp
out
add
sbb
add
cmpsl
jg
lret
mov
push
subl
jo
in
loop,pt
pop
test
ret
rclb
xchg
je
mov
shrb
xchg
mov
pop
and
push
xor
in
bound
out
shlb
cs
fiadds
xchg
and
mov
jbe
incl
jmp
push
test
mov
fcomip
xchg
adcb
adc
js
flds
push
mov
loopne
mov
loopne
jg
dec
mov
jno
jle
jne
xor
cmp
movsb
push
dec
jg
inc
cmpsb
adc
mov
pop
fcoml
push
iret
ljmp
dec
and
lock
rcrb
pusha
scas
dec
pop
xchg
das
mov
jo
dec
aaa
ret
data16
push
cmp
clc
pop
sti
xor
mov
ss
xor
xlat
xor
pop
jmp
add
movsb
movsl
push
dec
xchg
xor
dec
push
les
push
xor
mov
mov
dec
mov
and
iret
mov
test
lret
jmp
cmp
inc
fwait
add
sub
rclb
lret
adc
pop
in
mov
mov
sub
mov
adc
jecxz
or
out
adc
leave
cmpsb
pop
xor
call
aam
lods
movsl
fcoml
mov
lods
dec
mov
pop
sahf
sbb
xchg
pop
xchg
sub
in
lret
adc
push
mov
xor
pop
bound
inc
into
ss
loope
add
dec
inc
xchg
mov
cmp
idiv
cs
call
mov
testb
scas
aam
xor
pop
stc
loopne
dec
cwtl
xor
xchg
in
fimuls
mov
inc
jne
sbb
fdivs
mov
push
mov
adc
add
lahf
lea
test
movsl
pop
pop
and
rcll
xchg
jmp
and
mull
cmpsb
int
je
pop
cld
xor
loope
rcrb
cmp
mov
jmp
mov
adc
fldl
push
sbb
loop
cmp
mov
lds
and
jecxz
jl
movsl
mov
lahf
jecxz
jp
imul
push
push
mov
sti
adc
dec
push
test
or
adc
aaa
cld
add
divl
outsb
jno
enter
cmp
test
insb
pusha
dec
mov
test
cmp
in
push
cld
insl
shlb
sub
cmpb
call
jnp
ret
arpl
icebp
shlb
dec
pop
sbb
mov
add
cmp
push
stc
or
cmp
and
add
adc
scas
inc
jp
leave
in
xchg
mov
lret
aas
hlt
push
mov
mov
decl
xchg
js
ret
and
pop
std
sbb
out
inc
aad
pop
xchg
movsb
mov
in
inc
sub
aad
and
aad
lcall
mov
ds
pop
mov
int3
leave
cmp
and
iret
idivl
scas
insb
xchg
xchg
fwait
push
fldenv
jl
cmp
push
aad
lods
notl
sti
stc
insb
inc
incb
in
ja
pop
inc
sub
xor
push
sti
incl
out
xor
loop
in
mov
lds
cwtl
xchg
leave
mov
mov
lcall
adc
cmpsl
out
jle
test
jp
into
out
fwait
lods
cmc
mov
or
sbb
dec
ss
push
mov
xor
mov
inc
xor
outsb
sub
bnd
lahf
mov
dec
or
mov
add
dec
fidivs
in
sub
std
mov
pop
sub
xchg
mov
pop
mov
and
mov
inc
xadd
sbb
mov
inc
ljmp
pop
pushf
jl
sbbl
jg
add
sub
mov
les
or
std
call
outsb
push
lds
popf
stos
repz
loopne
shlb
add
jle
jge
jg
sub
jmp
jg
mov
test
xchg
js
test
andl
xor
cmp
sbb
iret
xchg
xor
dec
idivl
lods
or
iret
xlat
iret
fwait
sub
sub
xchg
mov
sbb
in
cmp
add
sbb
test
sti
jg
sbb
in
jbe
popa
xchg
sub
rcrl
xchg
mov
loopne
punpckhwd
dec
sub
insl
or
pusha
mov
adc
inc
mov
sbb
stc
sbb
xlat
loopne
dec
ja
and
mov
hlt
xor
jns,pn
jl
inc
inc
dec
movsl
pop
pop
mov
pop
orb
imul
cwtl
add
or
inc
or
jle
outsl
das
inc
xor
push
hlt
xchg
ja
std
and
shlb
imul
jmp
sbb
dec
pusha
push
imul
push
es
jo
ret
mov
ret
push
add
jne
shufps
insb
mov
add
mov
mov
add
lods
pop
xchg
out
and
in
xchg
ss
mov
push
and
cmp
mov
xchg
pusha
lea
scas
data16
lock
push
push
int3
movsb
lcall
fisubrs
das
aas
cmp
addr16
xchg
mov
inc
push
xchg
out
lea
shrb
xchg
aad
or
pop
or
add
mov
subl
ss
jl
test
je
fnsave
lods
pop
jne
mov
fldcw
lret
mov
jmp
sub
movl
push
popf
lock
push
idiv
ret
int3
lcall
push
lea
cmp
xchg
popa
lea
xchg
bound
sahf
je
lahf
adc
popa
fstpt
or
sbb
dec
mov
jl
jp
ds
sbb
adc
flds
sub
dec
sti
pop
cwtl
inc
inc
ret
mov
pop
sub
jnp
pop
sbb
inc
in
pop
xor
jecxz
sub
movsb
push
xchg
sub
dec
mov
xor
and
cmp
push
jo
in
sbb
fcoms
dec
pop
or
or
inc
push
mov
cltd
xchg
pop
inc
es
popa
stc
push
and
jns
inc
test
popa
xor
negl
pop
les
rorl
mov
sbb
ret
or
cld
movsb
jbe
mov
fidivs
repnz
in
xchg
arpl
inc
push
imul
sbb
test
mov
xchg
movsl
pop
xor
sbb
cmp
or
add
test
push
mov
xor
inc
repz
dec
inc
add
mov
sarl
jno
movsl
and
lods
or
in
int
cwtl
sbb
mov
lret
sub
pop
dec
sub
pop
push
std
imulb
cld
or
xor
inc
mov
out
out
inc
push
mov
test
sbb
fbstp
and
addr16
inc
cli
jecxz
mov
cs
mov
and
jecxz
arpl
out
jg
jmp
mov
inc
cmp
mov
xchg
mov
inc
sub
std
cld
outsb
xor
and
mov
mov
int3
sbb
repnz
mov
jmp
cmc
mov
push
and
dec
js
mov
dec
repnz
inc
ret
cmp
out
pop
jne
hlt
mov
jb
call
mov
push
mov
inc
ficoms
xchg
lahf
mov
or
sbb
jp
or
add
pop
lret
mov
jno
shll
mov
jbe
outsl
fiadds
cld
mov
xchg
jo
push
out
out
arpl
sti
pop
lret
out
xor
xor
adc
or
nop
push
mov
call
in
add
sub
lcall
loope
xor
scas
and
scas
pop
popf
aaa
cmove
fcomp
xorl
lret
pop
out
add
in
imulb
movsl
xchg
cltd
mov
push
icebp
movsl
cwtl
push
pop
fwait
popf
movsl
xchg
cmp
pusha
repz
jne
fdivl
jns
push
outsl
sub
data16
pop
aad
ret
out
push
addr16
ss
or
aam
movsb
sub
in
in
fisubl
mov
xchg
mov
xchg
inc
xor
fwait
leave
push
push
xchg
out
gs
jbe
add
mov
dec
in
xor
pop
lds
arpl
ret
push
adc
cmp
les
into
lea
jbe
lds
jb
pop
jmp
shr
xchg
xchg
cwtl
push
dec
cmp
mov
xor
je
add
rcll
xchg
add
les
enter
dec
scas
adc
cmpb
jle
andb
stos
in
pop
bound
ror
xchg
push
data16
aas
int
jl
ja
aad
add
mov
je
stc
std
test
and
ret
enter
outsb
mov
pop
push
sti
ja
mov
mov
pop
xor
add
hlt
sahf
pop
mov
std
push
mov
and
ljmp
xlat
pop
insl
mov
sti
mov
aaa
xchg
mov
rclb
pop
xor
std
hlt
mov
enter
and
push
inc
cmpsl
ret
cmp
and
sub
inc
pop
jno
leave
cmp
or
jle
pop
sbb
int3
sbb
xchg
arpl
adc
xchg
xor
push
pop
mov
xor
and
fcmovb
dec
or
inc
adc
mov
stos
adc
out
jg
push
test
push
inc
xor
sub
fcoml
ja
ror
sub
sbb
fnsave
or
sub
out
and
mov
jo
js
das
sub
fiadds
ror
push
inc
mov
mov
push
scas
lahf
adc
push
inc
or
shrl
in
push
insb
xchg
rcrb
testl
jle
mov
call
cltd
adc
push
movsl
imul
aaa
adc
dec
sub
loope
rclb
cmp
xor
in
out
in
repz
mov
sti
mov
pop
es
mov
xchg
and
loopew
stos
lret
das
jg
xor
dec
inc
jno
pop
push
popf
ja
movsl
or
add
xlat
aaa
loop
test
sub
adc
mov
cmp
push
adc
adc
clc
in
mov
xor
mov
sub
nop
cmc
ja
push
adc
int
scas
aaa
inc
xor
insb
mov
cli
in
std
push
pslld
test
dec
iret
out
mov
addr16
cwtl
data16
adc
lret
out
out
mov
and
stos
push
pushf
mov
push
js
push
mov
xlat
clc
inc
movsl
aaa
sbb
cmp
adc
popl
movsl
sbb
fnstenv
lods
mov
push
pop
mov
pop
std
dec
mov
jo
and
or
xchg
inc
fstpl
mov
clc
inc
out
bound
cmp
fsubrs
push
mov
out
test
push
dec
repz
jle
sub
mov
inc
aaa
add
shrb
cmpsb
cltd
movsb
fists
and
sbb
lret
add
imul
icebp
mov
or
push
sub
xchg
inc
mov
jne
or
or
jmp
jno
mov
lds
mov
scas
iret
xchg
jle
cmpsl
subl
push
shrl
xchg
insl
cmp
mov
das
das
and
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
mov
test
adc
ret
pop
ss
adc
nop
sub
ror
cmp
out
mov
sbb
je
inc
andb
pop
inc
les
ficomps
daa
sub
and
and
sub
sahf
jns
mov
jecxz
adc
mov
fwait
add
mov
jns
cmp
or
stos
fst
les
sbb
sub
jmp
inc
mov
xlat
inc
mov
push
pop
xor
sbb
test
sarl
add
test
jmp
es
push
jmp
push
push
gs
push
mov
movups
or
insb
xchg
addr16
dec
sub
push
scas
icebp
dec
pop
cmc
scas
push
testb
cwtl
stc
stos
pushl
inc
push
frstor
mov
sbb
andl
jno
jnp
lahf
pop
out
jg
mov
fildll
sbb
loope
mov
sti
sub
fists
sbb
xchg
jb
dec
icebp
inc
fsubrl
jge
insl
mulb
cwtl
stos
out
sti
dec
pop
add
mov
cld
adcb
xor
adc
inc
mov
and
lret
popf
sub
fbstp
popaw
adc
lods
mov
pop
nop
adc
mov
mov
out
add
add
add
add
popa
add
inc
xchg
in
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
outsl
add
outsl
