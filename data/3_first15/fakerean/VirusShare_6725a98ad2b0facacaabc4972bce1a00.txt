mov
push
push
call
test
je
lea
push
push
push
call
test
je
cmpl
jne
movl
lea
push
call
mov
test
je
mov
mov
push
push
call
mov
mov
push
push
mov
call
mov
mov
push
push
call
mov
push
lea
push
push
mov
call
push
lea
movb
call
lea
movb
call
mov
lea
push
push
push
mov
call
mov
mov
movl
push
mov
add
push
mov
push
lea
push
mov
push
push
push
push
call
mov
mov
push
push
call
push
call
mov
mov
movl
mov
mov
pop
test
je
test
jne
mov
mov
and
cmp
jne
and
mov
mov
and
cmp
jne
movl
testb
je
mov
mov
mov
mov
movl
mov
push
call
push
call
mov
push
push
mov
push
push
call
mov
movl
testb
je
test
je
mov
and
test
jne
push
mov
call
mov
or
mov
jmp
mov
test
jne
mov
test
jne
mov
test
jne
mov
test
je
movl
lea
movl
call
pop
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
mov
and
cmp
je
push
mov
push
call
mov
push
mov
push
push
push
call
push
call
mov
push
push
push
push
call
push
call
mov
push
push
push
push
call
pop
jmp
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
call
test
je
mov
push
push
push
call
mov
push
call
test
je
mov
push
push
push
push
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
push
mov
call
mov
push
push
push
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
cmp
jne
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
ret
mov
mov
push
push
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
movl
call
test
jne
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
mov
pop
pop
mov
mov
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
lea
push
mov
push
lea
push
push
push
lea
push
push
mov
call
test
je
pop
pop
pop
xor
pop
ret
cmp
jbe
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
pop
pop
pop
xor
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
pop
pop
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
mov
call
test
je
pop
pop
xor
pop
pop
ret
cmpl
je
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jbe
pop
pop
xor
pop
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
sbb
pop
pop
inc
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
call
test
jne
cmpl
ja
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
push
push
lea
push
call
mov
mov
mov
push
shr
push
movw
lea
push
call
add
mov
pop
pop
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
mov
push
push
push
push
call
neg
sbb
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lea
push
push
push
push
push
call
add
adc
nop
nop
nop
nop
push
mov
push
call
mov
mov
lea
push
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
push
call
add
ret
nop
mov
sub
lea
push
push
push
push
call
lea
push
call
mov
lea
shl
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
pop
add
ret
nop
nop
nop
mov
push
push
mov
push
xor
push
mov
mov
mov
mov
call
mov
cmp
jne
pop
pop
xor
pop
ret
push
push
call
cmp
jne
push
push
call
test
je
mov
mov
movl
movl
mov
push
call
pop
mov
pop
pop
ret
push
call
push
mov
call
xor
cmp
pop
pop
sete
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
ret
cmp
jne
push
call
mov
ret
mov
push
test
je
mov
cmp
jne
call
test
je
push
push
call
test
mov
je
jmp
movl
xor
pop
ret
mov
mov
push
mov
push
mov
push
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
test
jne
add
ret
lea
push
push
call
add
test
je
add
jmp
lea
movw
mov
push
lea
push
push
call
add
lea
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
xor
lea
rep
mov
mov
mov
mov
test
movl
mov
pop
je
lea
push
push
push
call
add
jmp
movw
lea
mov
push
push
push
lea
push
push
push
push
push
push
call
mov
neg
sbb
not
and
add
ret
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
lea
lea
stos
mov
push
push
push
push
push
movl
call
add
test
je
mov
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
movl
call
add
test
je
lea
lea
push
push
call
add
test
je
inc
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
jne
push
lea
push
push
call
mov
lea
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
lea
movl
push
call
xor
mov
xor
lea
add
mov
rep
mov
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
mov
movl
test
je
push
call
add
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
test
push
jne
pop
pop
pop
xor
pop
ret
mov
test
jne
mov
lea
xor
test
je
push
call
mov
add
inc
test
jne
lea
push
call
mov
add
test
mov
jne
pop
pop
pop
pop
ret
mov
xor
mov
shr
rep
mov
and
rep
mov
test
mov
mov
mov
jle
mov
mov
mov
mov
add
dec
jne
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
xor
mov
push
mov
test
jbe
lea
cmp
je
inc
add
cmp
jb
jmp
mov
lea
mov
test
mov
jne
mov
call
mov
test
jne
mov
mov
movl
call
mov
add
test
je
mov
jne
xor
jmp
mov
push
call
test
je
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
mov
cmp
jae
xor
ret
mov
push
mov
cmp
pop
je
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
lea
push
call
add
cmp
mov
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
lea
test
je
mov
add
test
jne
mov
mov
cmp
jne
push
call
mov
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
mov
push
push
push
mov
mov
call
lea
xor
mov
mov
call
mov
movl
movl
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
test
jne
mov
test
je
mov
mov
cmp
ja
mov
call
pop
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
push
mov
call
ret
jmp
nop
nop
nop
nop
nop
push
mov
test
je
cmp
je
mov
push
call
push
call
mov
push
push
push
push
call
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
mov
push
call
test
jne
mov
mov
cmp
je
push
call
cmp
je
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
push
cmp
push
push
mov
je
call
pop
pop
pop
pop
ret
call
cmpl
jne
mov
test
je
push
call
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
mov
mov
call
jmp
push
mov
call
test
je
mov
mov
call
push
mov
call
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
call
pop
ret
nop
nop
nop
nop
sub
push
push
push
mov
call
mov
push
call
push
call
mov
mov
push
push
push
push
call
mov
test
je
push
lea
push
push
mov
push
push
lea
movl
movl
mov
mov
call
mov
push
push
push
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
lea
push
push
push
call
lea
push
push
movl
call
mov
add
test
je
push
call
add
cmp
je
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
movl
push
call
add
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
push
call
lea
push
push
xor
call
mov
add
test
je
push
call
add
cmp
je
push
call
mov
add
test
je
push
push
push
push
call
mov
push
push
push
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
push
call
mov
add
test
je
mov
mov
push
push
push
push
mov
mov
call
add
mov
mov
pop
pop
pop
pop
add
ret
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
push
mov
test
je
mov
push
call
push
call
add
pop
ret
nop
nop
nop
push
push
push
push
push
mov
lea
push
push
push
push
movl
call
inc
add
je
mov
mov
lea
push
push
push
push
call
add
test
jne
cmp
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
mov
push
dec
push
cmp
push
ja
mov
mov
mov
jmp
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
push
push
push
push
call
add
test
jne
push
push
call
add
mov
pop
pop
pop
ret
mov
mov
mov
push
push
push
call
add
pop
pop
pop
ret
xor
pop
pop
pop
ret
fcmovnbe
and
fcmovnbe
and
and
fcmovnbe
and
or
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
mov
ret
nop
nop
push
push
push
mov
xor
push
cmp
je
mov
mov
mov
push
push
call
add
test
je
mov
add
push
push
call
add
test
jne
cmpw
je
lea
push
push
push
call
add
test
je
mov
test
je
mov
inc
add
cmp
jge
push
push
call
lea
add
cmpw
jne
mov
pop
pop
mov
movw
pop
pop
ret
pop
pop
pop
or
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
push
push
mov
movw
xor
mov
test
je
and
push
lea
push
push
call
add
test
jle
push
push
push
call
add
lea
push
push
push
call
add
inc
add
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
mov
mov
push
push
movw
mov
push
push
call
add
ret
push
mov
push
movw
call
mov
mov
lea
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
mov
mov
lea
push
push
mov
push
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
lea
lea
push
mov
push
mov
push
push
push
movl
call
add
test
jne
add
ret
mov
lea
push
push
call
add
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
xor
mov
mov
mov
mov
lea
movl
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
push
call
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
test
jne
pop
xor
pop
ret
push
mov
lea
push
mov
push
lea
push
push
push
push
push
call
test
jne
mov
cmp
je
cmp
jne
mov
test
jbe
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
push
call
test
je
push
call
add
xor
push
call
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
push
movl
mov
call
push
push
mov
call
lea
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
mov
push
neg
sbb
mov
not
and
push
call
mov
mov
xor
lea
test
mov
rep
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
movl
movb
mov
test
je
push
lea
push
push
call
mov
lea
lea
add
rep
mov
push
lea
push
mov
call
mov
mov
shl
add
mov
lea
es
inc
add
lea
test
jne
mov
cmp
jle
mov
push
push
push
push
call
add
mov
push
call
add
mov
mov
test
mov
jne
push
push
push
push
call
add
mov
push
call
mov
jmp
mov
or
xor
repnz
not
push
call
mov
mov
or
xor
add
mov
repnz
not
sub
mov
mov
mov
shr
rep
mov
mov
and
rep
test
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
xor
movb
mov
test
je
push
lea
push
push
call
add
lea
mov
push
call
test
lea
jne
mov
push
call
add
mov
push
call
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
mov
call
mov
mov
mov
push
push
push
push
push
call
add
test
je
mov
test
je
push
mov
call
pop
pop
xor
pop
add
ret
mov
push
mov
call
pop
pop
xor
pop
add
ret
mov
push
xor
test
mov
jle
xor
mov
lea
push
push
call
add
test
jle
mov
inc
add
cmp
jl
mov
push
mov
call
mov
lea
mov
rep
mov
cmp
jl
mov
inc
xor
cmp
jne
cmp
je
push
call
add
mov
mov
mov
mov
jmp
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
mov
mov
mov
jmp
mov
cmp
jg
cmp
jle
mov
mov
shl
add
sub
push
lea
push
call
mov
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
add
shl
mov
mov
shr
rep
mov
mov
and
rep
mov
sub
push
mov
shl
add
lea
push
call
mov
push
call
mov
mov
mov
mov
es
add
mov
jmp
lea
push
push
mov
call
mov
mov
mov
shl
shl
add
add
shl
shl
sub
lea
push
push
lea
mov
shl
add
lea
push
call
mov
add
add
mov
xor
mov
rep
mov
xor
shl
add
pop
shl
mov
mov
add
mov
lea
add
rep
mov
dec
test
jne
mov
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
lea
push
mov
call
mov
xor
movb
mov
test
jle
xor
mov
mov
test
je
cmpb
je
mov
push
push
push
call
add
mov
mov
add
push
push
push
call
add
mov
inc
add
cmp
jl
mov
push
call
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
push
call
add
lea
push
push
call
mov
add
test
je
movb
mov
inc
mov
add
mov
je
mov
mov
push
push
call
add
test
jne
mov
jmp
inc
push
push
call
add
test
jne
mov
cmpb
je
push
push
call
add
test
jne
mov
push
push
call
add
mov
dec
cmp
jne
mov
lea
sub
push
push
push
call
add
test
je
jmp
lea
or
xor
repnz
mov
not
dec
push
lea
push
push
call
add
test
je
mov
mov
add
test
jne
pop
pop
pop
xor
pop
add
ret
pop
pop
pop
mov
pop
add
ret
nop
nop
sub
push
mov
push
push
lea
push
push
movl
mov
call
push
push
mov
call
lea
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
mov
push
neg
sbb
mov
not
and
push
call
mov
mov
xor
lea
test
mov
rep
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
movl
movb
mov
test
je
push
lea
push
push
call
add
lea
push
mov
call
mov
lea
lea
xor
inc
add
movsl
mov
push
mov
lea
push
call
mov
mov
shl
add
lea
rol
add
add
add
movsl
mov
lea
test
jne
mov
cmp
jle
mov
push
push
push
push
call
add
mov
push
call
mov
add
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
mov
not
test
je
mov
push
mov
call
jmp
mov
call
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
jmp
mov
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
mov
mov
xor
shr
rep
mov
add
and
rep
mov
mov
jmp
mov
cmp
jg
mov
cmp
jle
mov
mov
shl
sub
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
sub
shl
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
not
test
je
mov
mov
shl
add
shl
push
push
call
pop
pop
pop
pop
add
ret
mov
shl
add
shl
push
push
mov
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
je
mov
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
pop
pop
pop
pop
ret
mov
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
pop
mov
mov
pop
pop
pop
ret
mov
cmp
jg
mov
cmp
jle
mov
mov
shl
sub
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
pop
mov
pop
pop
pop
ret
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
sub
shl
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
push
call
mov
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
shl
add
xor
shl
mov
shr
rep
mov
and
rep
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
xor
mov
rep
mov
push
push
push
call
lea
add
test
jne
mov
mov
xor
mov
push
push
push
rep
call
movw
lea
add
test
jne
mov
mov
xor
mov
push
push
push
rep
call
add
movw
movw
movw
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
test
je
push
push
call
add
lea
push
push
push
push
call
add
test
je
pop
pop
xor
pop
ret
mov
push
push
push
push
call
mov
add
push
call
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
mov
test
je
mov
push
push
call
add
jmp
mov
mov
push
push
push
push
call
lea
add
test
jne
mov
test
je
test
mov
jne
mov
mov
xor
mov
push
push
push
rep
call
mov
movw
mov
add
test
je
push
push
push
push
call
push
push
push
call
add
add
test
jne
mov
test
je
test
mov
jne
mov
mov
xor
mov
push
push
push
rep
call
add
movw
movw
movw
test
je
push
push
push
push
call
add
push
push
push
call
add
pop
pop
pop
pop
ret
push
lea
push
push
push
push
call
add
test
je
xor
pop
ret
mov
mov
mov
push
push
push
call
mov
add
push
call
mov
pop
ret
nop
nop
mov
push
mov
push
push
mov
push
push
push
push
call
lea
add
test
jne
mov
push
push
push
push
call
push
push
push
call
lea
add
test
jne
mov
push
push
push
push
call
add
push
push
push
call
add
pop
pop
pop
ret
nop
nop
nop
nop
nop
mov
push
push
push
mov
push
test
je
mov
push
push
call
add
jmp
mov
mov
mov
push
push
push
push
push
call
lea
add
test
mov
jne
mov
mov
test
je
mov
test
mov
jne
movl
mov
mov
xor
mov
push
push
push
rep
call
mov
mov
add
movw
push
push
push
push
push
call
push
push
push
push
mov
call
mov
mov
and
lea
add
and
test
mov
jne
mov
mov
test
je
mov
test
mov
jne
movl
mov
mov
xor
mov
push
push
push
rep
call
mov
add
movw
movw
movw
push
push
push
push
push
call
add
push
push
push
push
mov
call
mov
add
and
pop
pop
pop
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
mov
push
push
push
push
push
call
lea
add
test
mov
jne
mov
push
push
push
push
push
call
push
push
push
push
mov
call
mov
mov
and
lea
add
and
test
mov
jne
mov
push
push
push
push
push
call
add
push
push
push
push
mov
call
mov
add
and
pop
pop
pop
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
jmp
mov
jmp
push
push
push
mov
push
call
movl
mov
pop
ret
push
mov
call
testb
je
push
call
mov
pop
ret
jmp
push
call
pop
ret
mov
jmp
mov
call
push
push
push
lea
call
pushl
andl
pushl
pushl
pushl
call
mov
mov
mov
mov
mov
leave
ret
mov
ret
push
mov
push
push
cmpl
push
jne
push
push
xor
mov
call
call
push
push
push
mov
pushl
mov
call
test
je
call
mov
test
je
mov
mov
call
test
jne
mov
mov
call
call
jmp
pushl
mov
mov
push
call
push
call
test
pop
je
push
push
mov
call
movl
mov
call
pushl
call
mov
pop
pop
jmp
cmpl
jne
push
call
mov
call
mov
call
mov
test
je
mov
mov
call
call
push
call
call
push
push
call
jmp
cmpl
jne
push
lea
call
call
push
call
pushl
call
mov
mov
mov
push
pop
pop
leave
ret
cmpl
jne
push
push
call
test
je
push
push
call
call
push
mov
call
mov
pop
jmp
cmpl
jne
call
pushl
call
push
pop
ret
int3
jmp
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
xchg
mull
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
jmp
mov
test
jne
cmp
jle
decl
mov
cmp
mov
mov
jne
push
call
test
pop
mov
jne
xor
jmp
andl
mov
push
push
mov
call
incl
pop
pop
jmp
test
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
mov
sub
jmp
push
call
andl
pop
pop
push
pop
ret
push
mov
push
mov
push
mov
push
mov
test
jne
cmpl
jmp
cmp
je
cmp
jne
mov
test
je
push
push
push
call
test
je
push
push
push
call
test
jne
xor
jmp
push
push
push
call
cmp
mov
jne
test
jne
push
push
push
call
test
je
cmp
jne
push
push
push
call
test
jne
and
cmpl
je
mov
test
je
push
push
push
call
mov
mov
pop
pop
pop
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
push
push
mov
push
mov
mov
mov
lea
push
ret
int3
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
add
inc
shll
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
hlt
decl
jo
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
dec
aam
add
sahf
stc
dec
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
add
mov
jmp
mov
add
jmp
mov
jmp
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
add
decl
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
in
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
add
dec
shll
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
push
call
ret
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
mov
mov
add
jmp
mov
add
jmp
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
add
and
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
add
push
shll
jmp
int3
int3
lea
jmp
mov
jmp
push
push
mov
push
call
lea
xor
mov
movl
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
lea
push
mov
lea
push
push
push
push
push
push
push
push
movl
call
test
jne
mov
test
je
mov
test
jne
movl
jmp
movl
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
test
mov
jne
call
lea
mov
push
push
push
push
push
push
push
push
push
movl
call
xor
pop
mov
mov
add
ret
cmp
jne
mov
test
jne
call
push
push
push
push
push
push
push
push
mov
push
call
xor
pop
mov
mov
add
ret
lea
call
push
push
lea
movl
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
cmp
jne
call
push
push
push
push
push
push
push
push
mov
push
call
lea
movl
call
xor
pop
mov
mov
add
ret
mov
mov
pop
mov
add
ret
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
or
pop
push
mov
call
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
add
mov
mov
push
push
call
mov
call
mov
neg
sbb
and
add
push
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
call
mov
test
add
add
add
mov
lahf
mov
ficomps
xlat
pop
add
cmc
mov
add
clc
fnop
add
outsl
jbe
jnp
add
in
add
push
push
push
lea
push
push
call
add
mov
add
add
push
add
add
add
add
xchg
jp
lods
les
push
mov
shr
jmp
add
data16
xchg
int
std
cltd
pop
add
add
xlat
add
fildl
xchg
orl
in
lock
lcall
inc
in
push
push
lea
push
call
add
push
mov
add
add
mov
add
add
testb
push
loop
mov
jns
add
mov
je
add
mov
in
clc
pop
push
push
push
push
push
call
mov
xor
out
pop
aad
mov
cmpl
scas
pop
add
mov
cld
xchg
add
mov
add
pop
add
int
test
nop
mov
pushf
int3
add
add
add
pusha
push
aam
aam
jmp
add
jl
gs
add
lock
lcall
push
push
lea
push
push
push
lea
push
call
add
add
jns
add
pop
mov
add
xchg
test
popl
jns
add
icebp
loope
scas
pop
rcrl
add
pop
jle
mov
jmp
lret
lods
fadds
loope
sub
pop
call
push
push
push
push
push
push
lea
push
push
push
push
call
push
push
add
add
add
enter
stc
push
cmpsl
add
fs
add
push
mov
jle
fwait
loop
fadds
fstps
xchg
push
loopne
data16
add
add
push
mov
in
fdivr
lcall
add
add
push
push
lea
push
push
push
push
push
push
push
lea
push
call
loopne
add
addl
jbe
pop
add
mov
add
add
mov
jne
cltd
stos
loope
jne
call
out
les
test
scas
jl
add
mov
jecxz
jb
add
add
add
sub
pop
call
jmp
push
lea
push
push
push
push
lea
push
push
push
push
call
add
xchg
add
sarb
mov
mov
add
add
fdivrs
popl
add
outsl
cmc
add
add
movsb
add
loope
mov
add
mov
mov
jo
sahf
mov
add
int3
fadds
cmpsb
jbe
mov
lcall
push
push
call
into
pop
lahf
add
mov
push
test
push
cld
cli
sti
push
add
add
pusha
ljmp
add
add
inc
hlt
push
push
call
add
pop
add
icebp
lahf
fnstsw
test
arpl
add
fwait
std
mov
add
lret
add
js
mov
mov
push
pop
add
int
jle
add
out
mov
add
test
in
clc
lcall
pop
hlt
push
push
push
push
lea
push
push
call
stc
jecxz
xchg
add
rolb
mov
add
add
stc
add
popf
add
jge
add
jnp
mov
addb
fcmovbe
add
cli
jae
push
hlt
add
lcall
pop
in
push
push
call
roll
add
xlat
insb
add
mov
add
shll
cltd
add
add
out
lret
jb
xchg
add
add
push
add
call
jmp
xchg
push
aam
push
mov
mov
fiaddl
mov
sub
pop
add
add
push
push
push
push
call
add
add
mov
mov
add
add
add
push
xchg
lcall
mov
xchg
mov
pop
mov
push
push
push
push
push
lea
push
call
loop
mov
test
pop
mov
outsl
enter
in
bound
add
fwait
add
jno
popa
add
jmp
mov
addl
mov
aam
mov
add
rcll
add
mov
test
sub
pop
xor
push
push
push
lea
push
push
push
push
call
add
add
add
fbstp
push
mov
add
add
in
cmc
fisttps
data16
fsubrs
loopne
mov
add
lcall
les
add
push
push
ror
rol
add
lea
push
or
not
add
xor
add
not
sub
rol
pop
ror
inc
shl
pop
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
aam
add
add
add
cmpsb
add
repnz
popl
add
fxch
mov
add
add
add
call
xchg
add
mov
add
sbbl
in
loopne
lcall
jne
call
push
lea
push
push
push
push
push
push
push
lea
push
push
call
add
test
mov
mov
add
mov
movb
add
stos
xchg
sub
pop
mov
push
push
push
push
call
out
fs
add
push
xchg
xlat
flds
add
ret
add
aam
stc
add
add
add
fcoml
cli
add
cmpsl
add
xchg
xchg
arpl
mov
jb
add
sub
pop
movl
lea
push
lea
push
push
push
push
push
push
push
push
call
mov
add
pushf
push
movsl
add
add
add
cmpsl
cltd
mov
mov
add
mov
divb
add
test
movl
lcall
push
push
push
push
push
call
mov
insb
jb
lret
mov
add
flds
mov
outsl
into
add
push
hlt
add
pop
leave
arpl
lods
mov
jae
jmp
add
add
jp
add
add
mov
jle
shl
icebp
mov
imul
loopne
roll
lcall
sahf
add
jge
in
in
lcall
jne
push
push
push
push
push
push
push
push
lea
push
call
mulb
mov
cmc
xchg
test
nop
bound
add
mov
xchg
cli
out
in
pop
add
add
roll
add
add
out
testb
add
cmc
add
popl
add
xchg
push
xchg
push
pop
test
add
push
add
fcompl
jne
push
push
lea
push
call
imul
lods
add
add
add
jbe
pop
add
add
test
add
mov
add
push
add
jge
loope
add
mov
lcall
add
add
push
push
lea
push
push
push
push
lea
push
call
stc
mov
loop
push
pop
add
arpl
in
in
xchg
mov
sarb
add
add
add
jmp
pop
clc
xchg
movsb
push
add
loope
mov
fldl
repnz
addb
rcrb
push
arpl
jne
push
lea
push
push
push
lea
push
push
push
push
push
push
call
add
vcvtps2pd
add
jb
add
xchg
out
int3
in
mov
ror
add
jo
add
popf
add
jl
add
push
add
imul
mov
addb
mov
testb
jbe
test
sub
pop
pushl
push
lea
push
lea
push
lea
push
call
out
add
push
push
add
pop
out
out
arpl
lret
in
add
add
push
cld
add
add
xchg
aam
in
add
jmp
pop
lcall
cwtl
add
mov
add
rolb
mov
add
fidivs
mov
shl
rorb
xor
add
lea
rol
sub
xor
pop
ror
not
add
pop
push
lea
push
push
lea
push
push
lea
push
push
call
add
xchg
mov
iretw
cmpsb
add
loope
add
mov
lock
add
fwait
add
add
mov
add
cmpsb
stc
add
add
mov
add
push
mov
push
cwtl
xchg
add
lahf
clc
lods
loop
add
add
lcall
jne
call
push
lea
push
push
push
push
call
add
jne
add
movsl
imul
mov
movsl
add
shl
add
pop
pop
add
fwait
add
add
testb
mov
jl
sti
test
add
popa
rolb
stc
lock
pop
add
add
add
mov
into
add
add
cmpsb
in
mov
mov
in
pop
push
push
push
ror
lea
push
xor
add
ror
add
xor
sub
inc
dec
sub
pop
lea
sub
pop
push
push
lea
push
push
call
xchg
xorl
ror
fstps
scas
add
add
add
add
jl
pop
cmpsb
mov
icebp
out
stc
cmc
movsb
add
js
add
lods
add
pop
fdivl
pop
mov
add
in
sub
pop
push
push
push
push
call
mov
movsl
test
mov
arpl
pusha
lcall
ljmp
add
add
mov
lret
nop
add
xchg
jmp
sub
pop
push
push
lea
push
call
pop
jo
lock
nop
push
leave
js
xlat
out
pop
mov
gs
in
mov
in
popf
jnp
add
loopne
add
add
in
clc
pop
call
push
push
push
push
call
add
add
lock
fwait
les
stos
add
data16
cmpsl
add
add
pop
cmpsb
xchg
xchg
fiaddl
test
scas
xor
add
std
nop
out
fs
add
mov
sub
pop
mov
push
push
push
push
lea
push
lea
push
push
push
call
jns
pop
pop
add
rol
add
lcall
add
mul
movsb
addl
add
movsb
add
rolb
aad
pop
gs
add
add
pop
mov
fidivrs
add
add
jp
lods
addr16
addr16
add
pop
pop
shl
add
push
lods
test
add
add
mov
sub
pop
push
push
push
push
lea
push
lea
push
lea
push
push
call
mov
cmpsl
add
loope
lret
add
call
jge
mov
push
cltd
lret
enter
add
out
mov
scas
pop
out
add
add
addr16
add
scas
push
jo
cmpsb
rolb
rcl
arpl
add
jb
in
call
push
push
push
push
lea
push
push
call
mov
add
jp
add
cltd
addl
jmp
add
aam
test
pop
roll
mov
add
add
fldt
in
call
add
push
lea
push
lea
push
lea
push
push
push
push
push
call
jne
xchg
add
xchg
xchg
add
fists
leave
imul
lods
add
in
add
add
icebp
add
add
push
jne
mov
add
add
mov
mov
in
lds
jno
test
mov
add
add
add
lods
sarb
add
sub
in
loopne
lcall
ret
add
add
push
lea
push
push
push
call
fsub
in
mov
iret
add
add
add
add
js
loopne
pop
call
jne
add
pop
add
cmc
add
jge
in
lock
lcall
ret
jae
add
push
push
call
movsl
pop
adcb
jle
js
add
faddl
add
jbe
aam
add
add
add
mov
add
fs
mov
out
xchg
pop
int
add
jno
add
enter
incb
add
test
out
sub
pop
mov
xor
push
push
lea
push
push
lea
push
push
push
push
push
call
cmc
sbbl
add
add
add
mov
roll
ret
xchg
movsb
test
les
add
xorb
push
add
xchg
pop
add
add
push
add
add
loop
pop
fnstenv
bound
add
jns
add
fiaddl
incb
lcall
jne
push
push
push
push
push
push
push
push
lea
push
push
call
pop
add
call
push
js
popf
pushf
add
add
add
mov
add
push
add
mov
jle
mov
mov
xchg
xchg
add
movb
pop
push
push
push
push
push
push
lea
push
push
push
push
push
call
pop
add
rorb
adcl
xchg
repnz
icebp
out
mov
stos
cltd
jmp
jecxz
pusha
add
lret
loopne
loope
add
leave
add
test
aad
mov
add
lcall
inc
or
jno
adc
cltd
push
push
push
lea
push
push
push
push
call
add
cltd
mov
fcmovbe
mov
add
mov
movsl
add
lahf
xlat
lcall
lcall
loope
mov
add
pop
mov
sub
pop
xor
push
push
push
push
push
push
push
push
push
call
add
lret
clc
add
pop
flds
mov
xchg
adc
sti
stc
add
add
shrl
add
js
jecxz
add
sub
pop
add
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
lret
addb
in
mov
int
out
fwait
loope
ljmp
loop
testl
testb
push
lods
divb
cwtl
sar
test
je
in
lret
push
mov
pop
add
hlt
out
jge
add
mov
add
test
lcall
lock
push
push
call
jbe
jns
pop
mov
push
pop
add
add
add
out
add
push
lret
outsl
loope
add
add
ljmp
add
je
sub
pop
pop
mov
push
push
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
xchg
add
pop
add
int
push
add
stos
jge
add
roll
rolb
add
add
lahf
add
add
out
addb
in
fdivr
lcall
or
push
push
push
push
lea
push
push
push
push
push
push
call
add
nop
jnp
pop
addb
movsl
mov
add
stos
add
pop
add
add
mov
pop
movsl
nop
add
add
add
cltd
jmp
add
add
jge
mov
jbe
push
arpl
add
test
add
add
scas
add
add
jo
push
lcall
add
fcomps
les
add
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
loopne
add
pusha
mov
lods
cld
jp
jbe
add
mov
jecxz
add
push
jns
add
xchg
jae
cmc
repnz
xchg
fidivl
mov
lahf
fldl
add
lcall
mov
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
fildl
stos
add
lret
xlat
cmpsl
add
ljmp
pusha
add
in
mov
add
pop
add
je
add
rcr
cltd
imull
mov
lret
add
iret
add
pop
rcrb
hlt
scas
add
out
filds
add
xor
push
push
push
push
push
push
push
lea
push
push
call
fwait
pop
add
cld
add
xchg
add
ret
pushf
popl
pop
mov
add
add
add
fdivp
add
add
add
movb
pop
add
add
add
xchg
jno
lret
add
lcall
les
add
push
push
push
lea
push
push
lea
push
push
push
call
mov
push
ljmp
add
add
add
pop
rclb
add
loopne
add
jb
add
lcall
enter
cmp
and
xchg
push
push
push
push
call
pop
mov
divl
add
add
push
add
popf
mov
pop
addr16
cwtl
filds
jmp
stos
add
hlt
clc
shl
jl
add
int
add
push
ja
fcmovne
ljmp
jecxz
add
push
clc
add
fisubl
add
mov
xchg
cltd
add
in
fdivr
lcall
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
test
ret
cmpsl
mov
add
addl
add
add
mov
cltd
add
jmp
add
arpl
add
and
add
movl
mov
fsubp
add
in
int
xchg
push
add
insb
add
add
test
lock
pop
rep
push
push
lea
push
push
lea
push
push
call
lcall
out
push
roll
cmpsb
out
add
roll
jle
add
add
aad
leave
add
aam
outsl
cltd
mov
bound
mov
push
add
add
jecxz
rolb
sub
pop
pop
push
push
push
lea
push
push
push
push
push
call
add
pop
mov
add
cld
pop
mov
add
add
jecxz
add
ja
fistl
out
bound
add
add
out
mov
fldenv
in
loopne
lcall
pop
hlt
push
push
push
lea
push
call
mov
fchs
add
add
mov
add
imul
jmp
nop
xchg
sti
stos
add
add
mov
bound
xchg
leave
mov
icebp
add
add
jbe
push
mov
add
out
xchg
jbe
add
jbe
in
lock
add
add
push
lea
push
push
call
std
cld
pop
sbbb
xchg
mov
lds
push
cmpsb
out
fwait
aad
movl
xchg
lock
in
cwtl
scas
add
jmp
jae
mov
xchg
fwait
imul
cwtl
mov
mov
adcl
loop
pop
repnz
jne
sub
pop
add
mov
xor
push
push
push
push
push
lea
push
push
lea
push
push
push
call
mov
mov
out
scas
xchg
add
fidivrl
add
add
popl
in
loopne
mov
mov
imul
fwait
cmc
add
jbe
loop
lret
movsl
add
stos
mov
shr
mov
lret
add
lcall
push
and
repnz
adc
mov
fiaddl
push
push
push
push
call
push
shll
xor
add
jbe
jns
lock
push
add
add
adc
test
mov
pop
add
add
lock
aad
rcrb
arpl
mov
add
mov
scas
add
incb
add
add
call
push
push
push
push
push
call
xor
movsb
pop
shlb
ljmp
int3
divb
aam
in
insb
sarb
add
aam
add
add
stos
movb
in
add
incb
lcall
or
push
push
lea
push
push
push
push
push
push
call
pop
stos
clc
test
push
pop
add
rcr
fistpll
mov
pushf
mov
jnp
add
movsl
add
jp
sarb
lret
ja
lret
add
add
out
push
add
incb
mov
enter
loopne
add
push
push
push
push
push
call
push
add
add
loope
call
stos
in
pop
imul
scas
idivl
xchg
jbe
pushf
xchg
xchg
push
mov
lcall
ret
push
push
push
push
push
call
mov
add
add
cltd
shl
add
add
pop
cltd
ret
stc
add
jb
repnz
adc
add
add
lods
add
add
add
fists
add
cmc
mov
add
push
xchg
in
sub
pop
mov
push
push
shr
push
push
pop
add
shr
add
sub
add
inc
xor
pop
ror
rol
pop
push
lea
push
push
push
push
call
aad
push
lahf
cld
lret
add
js
repnz
add
jge
pop
iret
add
mov
mov
movsl
jb
add
scas
loope
add
add
jne
call
push
push
call
mov
add
loopne
jae
add
add
fs
rcl
in
addl
mov
add
outsl
pushf
popl
test
add
cwtl
add
aad
out
add
push
jnp
add
out
in
clc
lcall
add
aaa
cld
add
push
push
or
not
add
shr
sub
sub
shl
pop
add
pop
push
push
lea
push
push
call
add
add
add
je
ret
mov
push
arpl
pop
lret
xchg
jl
add
add
add
lds
add
movsl
popl
lea
aam
js
int3
movsb
data16
add
add
fisubs
pop
mov
lock
push
push
sub
shl
sub
shl
pop
push
push
lea
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
lods
add
push
add
add
add
add
xchg
iret
scas
rolb
add
js
arpl
add
fcomps
rclb
adc
clc
push
sub
inc
pop
push
push
push
push
push
push
lea
push
lea
push
call
mov
jle
test
fisubs
push
pop
add
add
test
add
mov
test
roll
mov
clc
add
add
add
sub
pop
push
push
xor
not
xor
pop
mov
push
push
push
lea
push
push
lea
push
push
push
push
call
add
xchg
add
push
lret
add
mov
push
add
leave
add
add
sti
add
lea
add
stc
mov
mulb
filds
int3
add
add
add
add
pop
in
push
inc
add
pop
add
add
push
sub
lea
sub
xor
pop
mov
xor
push
push
push
push
push
push
push
push
push
call
push
in
cmpsb
add
out
mov
add
jne
add
add
lahf
cwtl
jp
add
clc
mov
add
add
add
roll
insb
mov
jnp
add
hlt
fildl
xchg
add
xchg
jne
sub
pop
add
push
push
lea
push
push
push
push
lea
push
push
push
push
push
call
lock
jl
lret
add
stos
add
add
fwait
jo
movsb
add
rorl
mov
add
xchg
cmc
jge
sti
fwait
add
gs
add
hlt
mov
fadds
add
add
add
add
in
fcomps
inc
adc
lock
adc
shll
sub
pop
add
push
ror
pop
pop
push
push
push
push
push
push
push
push
lea
push
call
rolb
lds
mov
out
add
ficoms
mov
xchg
add
add
fcompl
out
mov
add
jo
fiaddl
dec
and
jno
adc
test
lea
push
push
lea
push
push
call
aad
rolb
nop
mov
add
std
insb
add
add
pop
lods
xchg
jge
into
je
repnz
test
add
cmpsl
mov
cwtl
gs
add
popl
add
leave
arpl
clc
push
gs
cltd
add
mov
add
in
xor
push
push
call
add
add
xor
iret
xchg
add
jmp
add
mov
push
int
add
in
add
mov
xchg
mov
mov
jmp
add
pop
lods
add
add
lcall
les
lea
push
call
hlt
push
add
add
jbe
in
js
lods
mov
add
iret
mov
std
icebp
xchg
lret
lcall
mov
stos
add
lcall
movsb
push
lea
pop
mov
push
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
aam
cmc
add
add
mov
leave
lret
xlat
mov
ja
roll
xlat
add
xlat
bound
mov
loope
nop
add
mov
add
add
add
mov
ja
add
add
add
add
sub
pop
xor
push
lea
push
push
push
push
call
add
movsb
add
jge
fadds
add
add
mov
mov
std
push
lret
movb
add
add
sub
pop
add
push
sub
not
pop
or
je
mov
push
push
push
push
push
push
push
lea
push
lea
push
push
call
jge
sbbl
xchg
add
jmp
add
add
push
aad
add
add
mov
lret
out
add
add
ja
add
jno
add
add
shl
add
loope
xchg
mov
add
lcall
xor
push
push
push
lea
push
lea
push
push
push
call
mov
pop
mov
add
sti
stos
pop
add
xorl
add
mov
add
faddl
in
in
add
push
xor
ror
add
pop
mov
xor
push
push
push
push
lea
push
push
call
add
xor
mov
add
testl
xchg
add
std
push
out
mov
jae
add
mov
add
test
clc
mov
mov
add
add
jmp
add
ret
add
mov
push
pushf
movl
mov
add
push
add
lcall
repnz
push
lea
push
push
call
mov
fistps
sar
pusha
jb
xchg
add
out
fwait
add
in
ja
cmpsb
add
push
add
rcll
xchg
add
js
jae
add
add
sti
mov
stos
aad
add
jae
add
rcrb
imul
add
mov
sub
pop
add
push
push
not
pop
mov
push
push
push
push
push
push
push
push
lea
push
call
jl
sahf
cmpsb
add
jb
fs
shll
hlt
popl
jae
pop
stos
add
add
push
add
jnp
jne
mov
fs
jecxz
aam
add
test
addr16
pop
xor
push
lea
push
push
push
call
add
imul
data16
add
mov
add
out
add
jecxz
rolb
ja
add
add
add
jno
xchg
add
lock
add
add
out
add
fistpl
push
cli
jb
test
int
add
add
push
popf
shll
lcall
les
push
push
push
call
mov
fstps
add
mov
fadds
popl
pop
icebp
add
stc
add
add
mov
add
enter
shll
add
lea
add
push
shl
scas
bound
mov
add
enter
loope
xchg
add
js
jb
lock
add
lahf
add
xchg
pushf
sub
pop
add
push
push
lea
push
push
lea
push
call
lret
scas
add
add
add
fs
arpl
mov
jl
add
add
mov
add
mov
push
lea
push
lea
push
push
push
push
call
push
add
add
add
add
pop
pop
js
icebp
add
insb
mov
add
add
popa
lds
add
sahf
add
xchg
mov
xchg
add
in
mov
in
call
lea
push
call
hlt
add
loop
out
add
add
mov
andb
push
scas
add
add
add
add
jno
add
pop
add
add
cld
int3
nop
add
in
add
add
fiadds
leavew
call
push
add
lcall
dec
sub
adc
lret
jg
ret
imul
leave
je
mov
push
pop
add
push
push
lea
push
push
push
push
push
call
sahf
jge
add
add
add
lret
test
push
cwtl
pop
add
cmpsb
les
add
add
add
xchg
mov
add
add
mov
jns
push
jl
xchg
jp
add
outsl
add
mov
add
leave
xchg
push
jo
pop
test
add
add
rcll
sub
pop
add
rep
push
lea
push
push
push
push
call
lea
mov
add
jae
jo
push
add
in
add
loop
insb
add
add
mov
aam
sub
pop
pop
push
push
push
sub
add
inc
dec
sub
dec
shr
shl
pop
ror
shl
pop
push
shl
sub
not
pop
pop
mov
push
push
push
lea
push
push
push
push
call
add
mov
fdivp
orl
mov
jno
add
add
add
add
push
pop
add
cli
add
les
add
add
add
jb
aam
mov
lods
add
test
cmpsb
add
mov
mov
sub
pop
mov
push
xor
not
shr
add
pop
mov
push
lea
pop
jmp
push
push
push
push
push
lea
push
push
push
push
call
add
xchg
jnp
xchg
add
scas
add
add
lcall
add
lahf
add
add
add
out
cmc
add
add
addl
shr
inc
pop
mov
push
ror
pop
add
push
push
push
push
push
call
add
cmc
test
lods
arpl
fwait
nop
xchg
jge
add
cmc
add
cmp
push
add
add
in
pop
push
push
push
xor
pop
push
push
push
push
push
push
push
lea
push
push
call
add
xchg
add
add
mov
enter
mov
add
aad
add
add
lcall
push
push
push
push
call
add
icebp
add
jnp
add
add
add
incb
icebp
icebp
add
add
addl
ja
imul
fwait
pop
lock
xlat
add
addl
lock
mov
push
push
call
movsl
mov
leave
adcl
stc
mov
test
add
add
enter
add
add
add
push
mov
lcall
add
in
clc
lcall
pop
push
add
pop
pop
push
sub
pop
pop
push
push
push
push
push
call
jmp
in
add
roll
ljmp
mov
je
ret
mov
popa
popa
add
fdiv
add
mov
mov
xchg
add
cmpsb
add
add
insb
mov
in
pop
leave
ret
push
sub
inc
xor
pop
push
push
shl
add
pop
mov
push
push
lea
push
push
call
add
add
icebp
jle
add
mov
addl
add
add
xchg
aad
pop
xlat
mov
into
mov
add
mov
test
aad
orl
jno
push
pop
mov
pop
lock
add
mov
movb
mov
add
ret
jle
ffree
add
lcall
clc
push
push
push
push
push
push
push
lea
push
push
call
push
add
add
loop
stos
jae
gs
stc
subl
or
testb
imul
arpl
lret
add
popf
add
jo
add
xchg
lock
std
lock
mov
movsb
fs
nop
add
into
fcmovu
xchg
sub
pop
push
push
push
lea
push
push
call
mov
add
add
out
add
jne
pop
add
mov
add
add
ret
out
add
jno
jp
add
add
add
testb
add
push
aad
jmp
add
jno
arpl
test
add
lret
sub
pop
push
push
dec
pop
push
push
ror
xor
pop
movl
push
xor
rol
pop
addl
test
je
push
push
lea
push
push
push
lea
push
push
call
je
add
add
add
mov
hlt
push
jp
imul
fdivr
add
icebp
in
add
shl
add
add
xchg
add
inc
or
sub
ror
pop
pop
push
lea
sub
shr
pop
pop
push
push
lea
push
push
push
push
lea
push
push
call
xchg
test
mov
fdivl
in
int3
add
mov
mov
rcrl
mov
out
add
add
jne
mov
loopne
cld
add
imul
popa
mov
jae
int3
add
test
fcomps
jb
mov
in
loopne
pop
push
shr
add
pop
leave
ret
push
lea
shl
pop
push
mov
push
inc
sub
not
pop
add
push
not
dec
shr
add
pop
push
push
push
ror
ror
pop
push
push
add
sub
add
add
pop
push
testl
push
not
pop
addl
push
rol
sub
pop
push
push
push
push
push
push
call
in
je
mov
movsb
add
add
outsl
insb
add
add
add
popa
add
into
push
add
cli
lret
add
arpl
hlt
mov
add
jge
add
pop
addr16
push
add
mov
lods
add
sar
call
shl
xor
pop
mov
push
push
push
push
call
add
leave
add
add
add
add
rolb
lret
lock
mov
jo
xchg
add
add
mov
add
add
andb
jp
in
lock
lcall
jne
push
push
lea
push
call
cmp
add
add
xchg
rolb
xchg
mov
add
xchg
add
mull
cmc
scas
cmc
add
pop
shrb
add
mov
in
rolb
jecxz
icebp
lds
xorb
fiadds
lods
push
xchg
hlt
add
xchg
jecxz
add
sub
pop
push
push
push
lea
push
push
push
push
push
call
push
add
mov
jl
pop
rolb
add
cmpsl
add
add
mov
aam
mov
lock
ljmp
add
add
into
imul
insb
push
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
movsb
icebp
mov
clc
add
int
popa
add
pop
loop
push
jl
add
lret
loop
push
add
add
pop
in
imul
jae
sub
pop
call
cmpl
jne
push
rol
shl
lea
pop
pop
push
lea
pop
pop
push
lea
lea
pop
pop
pop
push
inc
lea
pop
leave
ret
push
push
call
add
divb
int
out
in
lret
xchg
add
xchg
pop
add
add
mov
ret
pop
mov
in
clc
pop
push
push
xor
sub
sub
pop
mov
push
push
push
push
push
push
push
push
lea
push
call
push
enter
cmpsl
add
push
out
add
mov
popf
add
xchg
rolb
fiaddl
add
lahf
add
push
push
jecxz
add
out
add
mov
lcall
cld
push
add
pop
push
push
push
push
push
push
push
push
push
push
push
call
jns
mov
call
add
add
add
add
cmpsl
add
fsts
add
mov
add
fcmovnb
je
add
add
ret
add
js
add
add
out
shlb
lcall
push
push
rol
pop
push
movl
push
rol
add
pop
push
call
push
inc
pop
push
push
pop
call
subl
push
not
shl
pop
cmpl
jne
pop
push
add
pop
pop
push
lea
pop
pop
pop
push
lea
push
call
add
add
fiadds
mov
jo
add
add
add
icebp
movsl
rolb
cld
arpl
push
movsl
mov
sub
pop
leave
push
lea
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
cmpb
mov
xchg
movb
add
pusha
loope
scas
mov
lds
rcl
test
nop
add
movsb
jbe
add
add
add
pop
pop
jbe
add
stos
sub
pop
ret
push
push
shr
shl
shl
pop
mov
push
lea
push
push
push
push
push
push
call
int
add
add
add
xchg
sar
popl
push
jno
sarb
mov
xchg
add
add
mov
scas
leave
add
add
fsubr
jl
xchg
out
pop
out
sub
pop
add
push
add
xor
ror
pop
push
push
ror
inc
pop
push
push
push
shl
lea
inc
pop
push
mov
push
push
lea
push
push
call
mov
mov
add
pop
mov
add
add
jno
jne
rclb
add
add
rcl
ficomps
add
add
add
pop
add
lds
mov
add
sahf
add
xchg
xchg
add
add
add
sub
pop
lea
sub
push
not
sub
xor
pop
mov
push
push
push
push
lea
push
push
push
call
add
xchg
cmpsl
test
add
add
add
add
add
roll
pop
mov
into
hlt
pop
add
add
pop
mov
push
add
add
add
rcrl
scas
in
sarb
in
shr
push
lea
push
lea
push
call
in
add
add
add
push
mov
insb
jo
add
add
mov
jne
add
iret
jl
mov
add
outsl
in
add
jnp
loopne
xchg
push
add
mov
add
add
out
cwtl
pop
add
lea
add
iret
mov
outsl
pop
cli
lock
mov
add
push
shl
pop
mov
push
push
push
push
push
push
push
push
call
int3
add
add
mov
push
cld
popa
jecxz
add
test
jns
add
jae
add
mov
add
jo
add
rolb
add
stc
add
add
add
add
call
add
scas
mov
jl
imul
arpl
test
add
mov
in
loopne
mov
push
push
push
lea
push
push
lea
push
push
call
int3
push
iret
popf
sti
loopne
out
add
add
add
stc
mov
add
rolb
cltd
out
jno
add
cltd
pushf
sub
pop
add
push
inc
pop
add
push
push
lea
push
push
push
push
push
push
call
shlb
add
push
pusha
add
arpl
fmull
shll
add
lret
roll
roll
lcall
inc
add
add
sbb
popf
push
push
push
push
push
lea
push
call
add
data16
lods
add
jae
subb
add
push
add
movsb
in
add
add
mov
je
aad
icebp
std
out
push
add
stc
add
ret
add
add
add
shlb
add
fcom
mov
out
xlat
add
add
add
jno
add
sub
pop
mov
push
push
push
lea
push
push
push
push
call
sar
mov
roll
mov
out
add
fs
jo
add
jmp
xchg
add
fs
pop
jnp
pusha
sub
pop
cmp
jne
cmp
jne
push
sub
sub
shr
dec
pop
mov
movl
push
sub
pop
jmp
push
rol
dec
rol
sub
pop
mov
mov
push
push
lea
push
push
push
push
push
push
call
add
add
add
divb
movsl
sti
mov
add
add
test
add
add
add
enter
add
mov
add
testl
mov
lods
loope
imul
push
add
mov
out
repnz
out
pop
xchg
add
int
mov
in
add
imul
in
loopne
sub
jne
mov
push
push
lea
push
call
mov
cwtl
data16
cli
cmc
imul
add
add
add
movsb
out
add
leave
pop
add
mov
faddl
push
xlat
add
add
jb
add
pusha
add
add
sub
pop
movl
push
lea
pop
jmp
push
add
dec
pop
mov
push
add
not
pop
mov
push
lea
sub
pop
cmp
jne
push
push
push
call
sti
call
call
lret
addb
sarl
xchg
add
fiadds
in
add
add
loope
add
ret
add
cmc
test
add
add
lods
pop
mov
in
hlt
lcall
inc
adc
add
add
add
mov
jmp
push
xor
sub
shr
shl
pop
mov
cmpw
jne
push
push
push
lea
push
lea
push
call
add
mov
add
shl
mov
push
mov
add
roll
ret
add
mov
mov
imul
imul
adc
testl
add
jmp
push
push
push
push
lea
push
call
add
add
add
add
add
enter
push
cli
add
add
idivl
in
pop
pushl
pop
push
pop
mov
mov
push
add
rol
pop
mov
push
push
xor
shr
add
push
push
pop
add
lea
ror
rol
sub
xor
add
not
pop
pop
push
ror
pop
push
call
push
lea
xor
dec
pop
cmpl
je
push
push
ror
sub
push
sub
add
rol
not
sub
inc
sub
pop
inc
not
pop
push
push
push
push
call
ja
pop
add
out
add
testl
in
add
roll
aad
add
fcompl
cltd
add
addr16
add
add
add
add
arpl
add
sub
pop
push
call
push
shl
pop
cmpl
je
push
push
ror
shr
not
push
xor
add
not
sub
dec
not
pop
shl
sub
pop
push
push
push
push
lea
push
call
add
std
add
mov
add
push
add
aam
ljmp
mov
jecxz
out
test
xchg
add
icebp
xchg
add
lds
add
arpl
imul
lcall
push
xor
lea
add
pop
call
push
push
push
push
push
push
push
push
call
add
mov
add
push
fdiv
mov
mov
add
add
xchg
add
add
pop
add
add
mov
sti
mov
in
loopne
cmpl
je
push
push
ror
inc
dec
push
xor
add
add
shl
ror
sub
lea
shr
xor
pop
rol
ror
pop
push
add
lea
pop
push
call
push
add
pop
cmpl
je
push
push
push
xor
add
lea
not
sub
sub
shl
rol
lea
inc
pop
lea
pop
push
push
push
push
push
push
push
push
call
in
add
add
lret
jne
notl
fs
jb
add
add
jle
je
mov
loope
aad
jge
stos
add
aam
add
add
add
add
lds
add
clc
in
add
iret
test
add
loop
mov
shlb
outsl
fsub
add
push
shr
not
dec
xor
pop
call
cmpl
je
push
push
push
or
not
add
rol
ror
inc
sub
sub
pop
inc
inc
sub
pop
push
lea
rol
add
pop
push
push
push
push
push
push
push
push
push
call
in
add
push
subl
rcr
movsb
add
push
sti
mov
add
jge
retw
xchg
mov
movb
add
add
lods
repnz
sub
pop
call
cmpl
je
push
push
lea
push
or
inc
add
not
shl
sub
sub
add
pop
shr
shr
pop
push
add
shr
ror
shr
pop
push
push
not
shl
xor
pop
call
push
ror
xor
dec
pop
cmpl
je
push
push
add
push
push
pop
add
sub
add
shr
inc
sub
sub
inc
shl
pop
ror
dec
pop
push
ror
pop
push
push
push
push
push
push
push
push
call
ljmp
subl
xor
fwait
popf
lods
rcrb
les
nop
enter
mov
sti
jne
add
ret
add
add
popl
test
aam
loopne
xchg
pop
mov
int
addb
sub
pop
call
push
add
ror
ror
pop
cmpl
je
push
push
not
push
xor
add
shl
sub
add
pop
ror
add
not
pop
push
shr
add
ror
sub
pop
push
call
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
into
add
add
add
mov
jecxz
roll
movsb
fbld
hlt
jnp
add
leave
jge
add
enter
jmp
xchg
orb
lcall
cmp
rol
je
push
push
not
not
push
push
pop
add
xor
sub
not
add
pop
add
pop
push
inc
inc
pop
push
push
add
shr
pop
call
push
lea
push
push
push
lea
push
push
push
push
push
push
call
pop
leave
testl
xchg
add
jmp
add
add
pop
aam
mov
add
mov
jl
leave
add
stc
mov
flds
fistl
fdivr
lcall
cmp
test
das
das
mov
sub
not
add
push
push
pop
add
sub
ror
shl
add
pop
lea
pop
push
rol
sub
xor
pop
push
push
ror
pop
call
push
push
push
push
push
push
call
push
lahf
popf
jbe
outsl
add
add
add
mov
push
add
push
stos
aad
add
stc
add
mov
push
add
add
call
cmpl
je
push
push
dec
inc
push
or
not
add
dec
sub
inc
ror
pop
lea
ror
add
pop
push
not
pop
push
push
push
push
push
push
push
call
ja
sti
test
add
xchg
add
cltd
pop
jnp
jbe
add
lahf
push
filds
fnsave
add
rolb
mov
add
add
sub
pop
call
push
push
push
push
push
push
call
add
push
xchg
loopne
add
popa
rolb
add
data16
insb
xchg
add
add
flds
shll
add
mov
add
movb
mov
shrb
aad
push
add
add
lcall
js
jmp
les
je
push
push
xor
sub
push
xor
add
dec
sub
sub
sub
lea
shr
pop
sub
ror
sub
pop
push
shl
pop
push
push
push
push
call
into
int3
int
sti
addr16
mov
add
add
add
sti
mov
pushf
mov
pop
rcrl
pop
mov
sub
pop
call
push
push
push
call
push
stc
fidivs
scas
ja
xchg
jnp
add
jge
mov
add
add
push
sti
mov
add
out
stos
add
pop
push
pusha
jle
enter
add
add
movsb
jo
mov
add
add
add
add
in
lods
add
popa
add
jne
roll
add
xchg
lcall
js
xor
pop
ret
out
add
add
jmp
adc
push
xlat
pop
movl
push
push
call
add
lock
jge
shll
mul
add
fs
push
add
add
mov
add
mov
lock
add
popf
lock
in
add
xchg
stc
mov
add
mov
into
add
mov
std
add
scas
add
add
mov
lods
pop
push
lea
push
push
push
push
push
push
push
call
mov
jecxz
xchg
add
add
add
add
call
lret
les
add
test
add
add
add
mov
shll
aam
add
in
xchg
lret
xchg
mov
mov
push
xchg
scas
mov
add
push
add
out
jo
add
xor
push
push
push
lea
push
call
push
sti
add
out
add
mov
cltd
jge
add
add
bound
icebp
call
xchg
add
mov
cltd
add
sub
pop
pop
push
lea
push
call
out
add
mov
add
add
push
in
add
cwtl
add
jno
xlat
add
jmp
add
mov
test
add
pop
xchg
jno
subl
je
add
add
mov
mov
add
add
add
pop
add
push
rol
shl
pop
pop
push
push
push
lea
push
lea
push
push
push
push
push
call
add
add
add
mov
sahf
lahf
jbe
rclb
fiaddl
add
cwtl
mov
out
add
jl
jbe
mov
rolb
fcom
faddl
mov
mov
mov
add
je
add
mov
mov
movl
lcall
push
inc
rol
xor
pop
leave
push
rol
pop
ret
push
push
pop
mov
add
push
sub
not
pop
cmpl
jne
push
push
not
ror
push
or
not
add
add
add
xor
sub
sub
dec
ror
dec
pop
sub
add
shr
rol
pop
push
not
sub
rol
pop
pushl
call
push
push
push
push
push
push
push
push
push
call
mov
add
mov
jne
into
add
int3
add
add
std
shrb
out
jno
pop
out
jecxz
les
add
xchg
push
add
lds
lea
add
pop
insb
jmp
fbstp
add
mov
in
fdivr
lcall
call
push
inc
xor
not
pop
jmp
cmpl
je
push
sub
lea
xor
pop
cmpl
jne
push
push
lea
push
lea
push
call
add
add
add
testb
into
imul
jmp
add
andb
add
gs
loope
xchg
out
pop
add
arpl
pop
jb
in
lock
mov
push
add
lea
pop
call
push
push
rol
push
sub
add
not
dec
lea
sub
not
pop
inc
sub
pop
push
lea
push
push
push
call
hlt
mov
add
lahf
stos
add
cltd
add
imul
std
add
mov
les
imull
mov
add
add
add
add
ljmp
add
add
pushf
pop
out
mov
push
add
jns
movsb
add
mov
sub
pop
pushl
call
push
shl
xor
not
shr
pop
lea
push
lea
add
pop
push
push
push
sub
shr
pop
push
push
push
sub
pop
call
push
push
call
mov
add
fldcw
add
in
shrl
add
add
in
push
pop
add
call
add
add
cld
cld
out
scas
mov
jns
lock
cld
in
mov
add
pop
mov
jbe
add
add
push
rol
pop
jmp
cmpl
jne
push
push
inc
rol
dec
push
push
pop
add
inc
inc
sub
ror
rol
pop
sub
shr
not
pop
push
shr
pop
pushl
push
push
push
push
push
call
bound
lods
mov
out
push
add
pop
add
mov
add
fwait
in
mov
adcl
jnp
push
add
lcall
jge
std
add
push
add
rorl
out
add
in
in
pop
call
push
sub
pop
push
push
inc
pop
call
push
push
push
push
push
lea
push
push
call
add
add
add
movl
xchg
cltd
leave
add
xorl
add
add
add
lea
ror
xchg
add
jbe
imul
cli
fildl
sub
pop
jmp
push
add
dec
sub
pop
cmpl
jne
mov
push
sub
add
ror
shr
pop
mov
push
push
push
push
push
call
xchg
leave
add
jmp
pop
mov
xchg
shr
fs
add
fsub
add
ret
add
add
push
mov
add
ja
add
test
cmpsl
imul
mov
roll
shl
xchg
imul
add
add
testb
in
js
add
push
andl
lock
jmp
push
push
xor
sub
push
push
pop
add
sub
dec
sub
not
inc
lea
pop
sub
pop
push
rol
pop
pushl
call
push
push
push
call
mov
data16
add
add
imul
les
add
add
add
ja
sahf
add
mov
add
sti
out
test
scas
fiadds
lcall
shrb
test
push
inc
sub
add
shr
push
push
pop
add
inc
sub
ror
ror
sub
pop
add
not
rol
lea
pop
push
lea
push
push
push
call
add
push
sti
addr16
add
add
add
add
popa
xchg
mov
pop
jl
mov
stc
push
fmul
add
icebp
pop
add
outsl
fwait
sub
pop
pushl
push
sub
pop
call
push
push
lea
push
push
push
push
push
push
call
push
add
lea
lret
add
add
xchg
enter
add
mov
pusha
add
not
stc
add
mov
mov
roll
lcall
lcall
add
in
loopne
call
push
push
inc
ror
add
push
or
not
add
add
ror
sub
shr
rol
not
pop
sub
ror
pop
push
sub
ror
add
pop
pushl
push
lea
push
push
lea
push
push
push
call
nop
jno
add
scas
mov
mov
test
add
add
xchg
add
in
push
clc
mov
mov
cltd
mov
add
add
scas
out
mov
icebp
push
add
add
in
call
call
push
push
lea
push
call
jle
test
mov
aad
nop
cwtl
add
add
mov
cli
add
jnp
lock
jno
stos
mov
aam
mov
add
fiaddl
test
mov
out
repnz
xchg
add
add
cld
lea
shlb
out
add
add
add
sub
pop
call
push
push
lea
push
and
add
xor
lea
sub
lea
shr
pop
ror
ror
pop
push
push
push
push
call
pusha
add
lock
movsb
fisubrs
add
add
mov
pop
add
cmc
outsl
mov
nop
add
rcr
lcall
push
rolb
add
add
add
add
lcall
jne
push
push
push
push
lea
push
lea
push
call
sbbb
add
add
pusha
mov
add
mov
stos
add
fistpl
add
add
xchg
stc
std
sub
pop
call
push
rol
pop
lea
push
push
push
push
push
push
call
pop
lds
add
add
pop
out
mov
mov
aam
cld
add
xlat
push
add
imul
arpl
pop
add
jmp
int
mov
mov
add
add
mov
mov
ror
out
arpl
shl
lret
mov
cmpsl
add
add
lcall
shrb
mov
fistl
rolb
add
fidivs
fmuls
or
rcrl
shr
pop
pushl
push
push
call
add
enter
xchg
data16
add
add
insb
mov
add
mov
mov
add
add
hlt
fiadds
add
mov
add
pop
mov
add
out
add
fsin
mov
add
add
add
into
into
in
mov
test
add
sub
pop
call
call
push
push
shl
xor
push
and
add
add
sub
add
not
pop
pop
push
xor
dec
pop
pushl
push
inc
not
not
pop
call
push
lea
push
lea
push
call
aam
ret
leave
add
add
add
add
stc
cld
add
pop
xchg
mov
repnz
cmc
testb
mov
mov
shll
lds
jb
popf
pop
pop
popaw
xchg
lods
push
lods
bound
sub
pop
call
push
push
shl
shl
push
and
add
lea
sub
lea
add
add
pop
pop
push
pop
pushl
push
add
pop
call
call
push
rol
pop
lea
push
push
push
sub
add
sub
not
sub
sub
shl
ror
not
pop
lea
not
lea
pop
push
push
call
mov
mov
lret
sti
add
add
xchg
test
add
add
cli
add
pop
add
test
in
add
in
mov
lahf
jp
mov
jp
roll
test
add
fildl
add
add
iret
xchg
rcl
add
enter
mov
lock
fidivs
in
clc
pop
pushl
push
pop
call
push
push
call
push
mov
imul
add
lahf
add
jmp
mov
pop
int3
mov
xchg
add
add
add
mov
fldl
push
les
movsl
add
in
fsub
mov
add
add
add
add
add
call
push
push
shl
shl
push
and
add
add
sub
xor
lea
pop
sub
pop
push
push
push
push
call
add
mov
add
loop
jmp
jae
cli
add
push
add
add
js
test
jge
lret
add
cltd
add
cmc
jno
jbe
pop
pusha
mov
mov
add
pop
test
movl
lock
lcall
jne
push
push
lea
push
lea
push
push
lea
push
call
movsl
add
scas
add
js
mov
lods
mov
add
lahf
les
add
out
mov
add
fldt
mov
shlb
sti
add
loop
add
push
xchg
add
ret
add
add
sub
pop
call
call
push
xor
pop
mov
push
push
shr
push
or
inc
add
xor
sub
sub
pop
sub
pop
push
inc
sub
pop
pushl
call
push
not
shl
add
pop
push
push
add
sub
shl
pop
pushl
call
push
push
add
push
or
inc
add
ror
add
sub
add
add
add
pop
sub
sub
pop
push
push
call
add
lcall
add
shrb
mov
fiadds
xchg
cmpsl
repnz
fadds
xchg
sar
fiaddl
add
add
out
mov
stos
add
add
clc
lcall
jne
push
ror
pop
call
push
push
add
push
or
not
add
shl
sub
add
sub
lea
dec
pop
shr
pop
push
push
shr
push
xor
add
not
dec
dec
sub
pop
pop
push
push
call
mov
add
aad
test
add
add
add
pop
arpl
cmpsl
jbe
mov
cmpsl
add
popf
mov
aad
add
je
faddl
rclb
add
add
js
movsb
add
cwtl
add
add
mov
jmp
addb
add
out
push
sub
pop
call
push
push
shl
inc
push
or
inc
add
add
xor
sub
shl
shr
pop
xor
pop
push
pop
pushl
push
push
push
push
push
call
xchg
faddl
aam
js
int
loopne
mov
mov
pop
stc
add
lcall
je
pop
iretw
push
xchg
popf
add
pop
add
add
jnp
fwait
cltd
sahf
rolb
in
test
sub
pop
call
push
ror
lea
pop
mov
lea
push
sub
pop
lea
push
shl
pop
push
push
push
push
push
push
lea
push
push
push
push
lea
push
call
add
add
jle
jb
add
outsl
push
into
test
mov
cltd
jmp
mov
test
add
mov
add
mov
roll
add
add
xchg
int
add
jecxz
sub
pop
push
push
push
push
lea
push
call
cltd
scas
add
add
add
sarl
ja
test
mov
cmpsb
push
add
jne
lcall
mov
lcall
add
jle
insb
fsubrl
fcoml
jne
add
add
mov
in
lock
lcall
add
iret
lea
pop
push
push
push
lea
pop
push
push
inc
inc
add
add
pop
push
push
push
push
push
push
call
add
nop
stos
lret
add
mov
test
rolb
add
jecxz
jbe
add
cli
add
ljmp
add
mov
fs
testb
stos
add
add
add
add
add
add
test
jge
sub
pop
pushl
push
push
push
push
call
add
aam
xchg
arpl
hlt
lods
mov
loope
stc
imul
mov
add
mov
mov
adcb
push
test
stos
lret
xchg
iret
xchg
jge
pop
insb
adc
add
sarb
in
and
pop
add
pop
scas
jnp
mov
into
mov
sub
pop
push
push
not
xor
pop
call
push
push
rol
shl
xor
add
push
sub
add
add
sub
inc
sub
shr
pop
sub
sub
pop
push
inc
sub
pop
pushl
push
sub
shl
not
rol
pop
call
push
add
shl
pop
call
mov
push
add
add
pop
pop
dec
jne
push
inc
pop
jmp
push
push
push
lea
push
push
call
sti
add
mov
add
mov
enter
mov
shlb
outsl
in
pop
xchg
cltd
loopne
mov
xchg
add
clc
andl
add
add
insb
sub
pop
call
push
push
add
push
xor
add
shr
sub
sub
pop
not
add
sub
sub
pop
push
not
sub
pop
pushl
call
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
popa
xchg
ja
xchg
pushf
pop
rcrl
add
add
lahf
add
addr16
sarb
add
mov
lods
lcall
roll
add
add
filds
xchg
add
outsl
push
add
add
add
sub
pop
push
call
push
push
call
adc
outsl
mov
scas
sahf
fistps
jnp
arpl
cli
xchg
mov
add
stos
mov
mov
jae
loopne
add
lcall
add
add
push
lea
inc
add
pop
lea
push
push
inc
sub
push
sub
add
ror
rol
sub
add
sub
pop
dec
ror
pop
push
lea
xor
pop
pushl
push
rol
pop
call
push
push
add
sub
pop
call
push
push
rol
ror
push
xor
add
sub
sub
add
sub
ror
pop
sub
sub
rol
pop
push
shr
add
inc
pop
pushl
push
lea
add
pop
call
push
push
push
push
push
push
push
push
push
push
call
mov
add
mov
fcmovnu
xchg
mull
icebp
add
add
leave
pop
add
testb
fwait
sub
pop
call
mov
push
push
push
push
push
push
push
push
lea
push
lea
push
call
mov
mov
add
iret
jns
add
loope
add
mov
add
jnp
add
add
add
add
add
xchg
add
enter
cwtl
add
mov
lods
add
add
rcrl
testl
in
fdivr
lcall
pushf
and
ljmp
jecxz
mov
not
push
and
add
lea
shr
xor
sub
lea
xor
rol
add
pop
inc
pop
push
lea
push
push
push
push
push
push
lea
push
call
aam
test
mov
mov
add
add
mov
roll
pushf
in
cwtl
add
mov
insb
in
jno
add
xchg
add
add
scas
pushf
jb
add
push
stos
loop
pop
mov
xchg
jge
subl
add
jecxz
add
mov
mov
sub
pop
pushl
push
lea
push
push
lea
push
push
push
push
lea
push
push
push
call
mov
icebp
add
jnp
bound
add
movl
add
repnz
jb
mov
add
cwtl
xlat
add
add
add
mov
pusha
add
lods
arpl
fildll
add
aad
push
gs
add
lcall
adc
add
lea
push
push
lea
push
push
call
cmc
sahf
lcall
xchg
jl
jecxz
je
fdivrp
add
ret
popf
pop
add
leave
faddl
add
push
lcall
lock
lcall
push
push
lea
push
call
popf
push
add
jae
add
lods
add
add
je
into
add
add
iret
add
jo
imul
fcoms
xchg
add
add
add
add
lcall
add
clc
dec
pop
push
push
lea
push
call
jp
add
mov
add
fldl
xor
add
add
mov
jbe
mov
add
push
scas
fsubrp
add
loop
add
mov
push
xchg
loopne
mov
scas
add
add
lahf
add
mov
in
clc
lcall
jne
push
push
shl
ror
add
push
sub
add
shr
lea
add
sub
xor
sub
ror
pop
shl
shr
pop
push
push
push
push
push
push
push
push
push
lea
push
call
add
movsl
add
in
add
mov
movsb
add
add
loop
rolb
add
roll
add
lcall
icebp
test
popa
cli
movsl
add
mov
lock
sub
pop
push
call
push
push
rol
push
xor
add
rol
sub
rol
dec
shr
dec
pop
add
pop
push
inc
sub
shl
pop
pushl
call
push
push
push
push
push
call
jmp
loope
arpl
xchg
jecxz
pusha
add
repnz
add
arpl
jbe
push
add
les
add
pop
add
add
mov
stos
aam
add
rclb
xchg
mov
xchg
cli
jge
and
mov
jo
add
sub
pop
push
push
shl
rol
pop
call
push
push
add
xor
push
or
not
add
ror
lea
sub
sub
inc
pop
ror
sub
pop
push
sub
ror
pop
pushl
call
push
dec
pop
call
jmp
push
sub
add
not
pop
pushl
push
push
push
push
push
push
call
add
les
add
add
filds
cltd
movsb
add
add
iret
xchg
add
mov
mov
mov
mov
push
cmpsb
mov
add
icebp
bound
add
lock
in
call
add
add
push
push
call
add
add
add
mov
add
mov
mov
xchg
mov
ror
add
test
add
mov
lret
add
call
in
clc
pop
jmp
push
push
shr
push
and
add
ror
not
shl
sub
add
pop
not
add
pop
push
sub
xor
not
inc
pop
pushl
call
push
lea
push
push
push
call
mov
in
mov
lea
lods
add
add
gs
pop
add
lret
cld
jmp
push
sti
popf
add
imulb
add
adcb
lcall
add
pop
call
push
push
sub
push
push
pop
add
sub
sub
rol
pop
add
pop
push
push
push
push
push
push
push
lea
push
push
call
add
hlt
add
add
add
fisubrs
lods
jo
mov
add
add
lcall
jne
push
push
push
push
push
lea
push
lea
push
push
push
push
call
add
enter
ljmp
mov
mov
out
add
lcall
add
jns
icebp
mov
rolb
mov
lret
xchg
js
pop
ret
mov
in
add
add
cwtl
sti
add
add
shr
test
je
imul
shrl
sub
pop
call
push
push
ror
dec
sub
pop
call
push
sub
shl
pop
leave
push
push
push
lea
push
push
push
push
push
call
xchg
in
imul
add
in
std
in
ja
add
add
add
xchg
add
add
loopne
add
add
std
add
add
pop
int
jecxz
add
jns
cli
popa
add
add
loopne
fadds
pop
add
movsb
push
add
not
add
add
add
jo
mov
in
loopne
add
push
push
lea
push
lea
push
push
push
push
push
push
push
call
rclb
add
add
jp
fistpll
add
loop
lods
scas
ljmp
add
out
add
into
hlt
out
in
pop
add
fildll
mov
add
les
add
add
add
bound
in
fdivr
lcall
pop
push
push
push
lea
push
push
push
push
push
push
call
add
push
gs
push
add
xchg
je
push
int
add
add
add
mov
add
add
sub
pop
pop
push
add
dec
pop
pop
leave
push
push
lea
push
push
lea
push
push
push
call
xchg
cmpsb
add
jecxz
mov
add
jae
cmpsb
add
ja
add
shll
add
add
andl
add
pusha
add
add
lcall
add
add
movsl
sub
add
cli
add
mov
pop
fildl
testl
or
push
lea
push
push
push
push
lea
push
call
cmpl
test
lahf
je
jl
pop
pop
rcrl
addl
sahf
lret
add
jp
add
sahf
mov
add
in
lcall
push
rol
pop
leave
push
lea
pop
ret
push
push
lea
push
push
lea
push
push
push
push
push
call
xchg
pusha
push
push
add
outsl
add
cli
pop
add
add
add
cmc
push
repnz
rolb
mov
roll
jbe
imul
fadds
aad
add
add
add
pop
add
push
mov
sub
pop
push
push
shl
ror
inc
shl
pop
mov
push
lea
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
add
add
add
mov
jns
add
fcomip
add
add
lock
add
lret
jmp
mov
shrb
mov
add
roll
jb
cmpsl
add
jnp
loop
popa
fistpll
mov
cltd
lahf
xchg
addl
fadds
in
fcmovne
shlb
pop
sub
pop
cmpl
jne
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
mov
sbb
xchg
jno
addb
rcll
test
loope
add
addb
rclb
jb
mov
sub
pop
mov
push
lea
push
push
call
addb
imul
add
aad
mov
mov
add
add
cmpsl
mov
pop
loopne
add
mov
fsts
mov
add
mov
pusha
add
int
mov
xchg
sub
pop
jmp
mov
push
add
pop
and
push
sub
inc
shl
pop
xor
push
add
shr
shl
pop
xor
push
dec
lea
pop
add
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
cld
cld
leave
shr
push
add
add
pop
mov
mov
pop
nop
add
mov
mov
imul
in
shll
add
add
push
lock
mov
loop
pop
add
add
lcall
add
lcall
dec
decl
shl
add
shr
pop
sub
push
shr
pop
jmp
sub
push
lea
push
push
push
push
lea
push
push
push
lea
push
push
call
mov
add
mov
in
add
out
pop
add
adcb
add
pop
addr16
pop
mov
lock
cld
clc
cltd
add
add
add
lock
pop
pushl
pop
push
not
pop
sub
push
rol
ror
pop
cmp
jne
push
add
xor
pop
mov
lea
push
shr
rol
dec
shr
pop
sub
push
push
push
push
push
call
add
movsl
pushf
add
cmc
add
add
iret
iret
add
shrl
add
mov
nop
add
add
rolb
xchg
add
add
in
in
lcall
or
call
lahf
add
test
mov
stos
xchg
add
fsubrp
out
mov
add
add
push
xchg
add
pop
shr
push
add
not
not
add
pop
add
push
not
not
pop
sub
push
pop
pushl
push
push
lea
push
lea
push
push
push
push
push
call
jns
movb
add
cmpsb
add
add
into
movsl
add
add
mov
shl
rolb
out
add
add
fdivr
add
jge
bound
mov
add
lea
out
mov
mov
add
push
add
mov
jl
test
loopne
lcall
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
pop
mov
xchg
mov
add
add
mov
add
add
add
scas
mov
fstps
add
fiaddl
xchg
mov
mov
add
fldl
sub
pop
shr
push
push
call
add
push
add
pushf
xchg
add
mov
pop
xchg
mov
add
add
ror
add
clc
lcall
fs
cmc
add
push
add
outsl
mov
add
in
clc
lcall
loope
incl
add
push
push
lea
push
push
call
xchg
add
add
cld
add
add
jo
add
add
pop
movsb
add
add
add
enter
test
popa
mov
add
pushf
rolb
add
lcall
jmp
cmp
jne
push
not
pop
leave
push
lea
push
call
add
lds
into
lahf
add
out
mov
mov
addl
stos
add
jmp
shrl
lods
add
push
sti
ljmp
rolb
mov
jb
movl
xlat
lods
clc
xor
gs
jmp
jle
rclb
in
clc
pop
ret
push
shl
xor
pop
push
mov
push
xor
pop
add
push
push
sub
inc
rol
pop
push
push
rol
not
pop
push
push
push
push
lea
push
call
add
push
push
not
mov
xchg
add
add
std
imul
out
add
add
int3
add
enter
add
push
push
shl
dec
xor
pop
push
mov
push
push
push
lea
push
push
push
call
arpl
jno
xchg
fcmovnu
icebp
mov
fwait
xchg
mov
add
add
popf
add
add
jle
add
mov
cmpl
call
lea
sub
push
not
pop
mov
push
lea
push
push
push
push
push
call
popa
bnd
add
jge
mov
add
mov
mov
scas
add
push
mov
add
leave
push
push
test
add
xchg
test
shr
jge
rorl
lcall
ljmp
or
xchg
cli
push
lea
push
push
lea
push
push
call
aad
add
add
add
xchg
push
testl
lret
mov
out
movsl
add
add
jge
stc
add
add
add
jae
pop
add
push
add
lcall
fsubl
add
sub
pop
add
mov
push
sub
ror
pop
add
push
push
push
push
lea
push
push
push
push
call
lea
cmpsl
testl
add
add
aam
mov
subb
in
jp
add
insb
add
add
iret
jbe
jmp
lds
add
mov
jb
fwait
add
faddl
roll
add
je
in
loopne
mov
add
push
push
push
push
push
call
push
fnstcw
add
mov
add
add
int
lods
std
add
mov
lods
fistpl
scas
add
add
mov
add
fistps
mov
test
pop
outsl
addl
lock
mov
ljmp
mov
add
mov
sti
push
sub
pop
xor
push
pop
mov
push
shr
add
pop
and
push
push
push
push
call
lahf
pop
fucom
into
popl
mov
rcrl
lods
mov
ja
jnp
cld
mov
add
in
lock
lcall
rolb
cmp
push
lea
push
push
push
push
lea
push
lea
push
call
lods
out
add
incb
icebp
add
jge
int
jnp
icebp
roll
add
add
mov
aam
add
add
mov
fcomps
rolb
push
call
in
rolb
add
popf
pushf
mov
gs
push
mov
jb
add
xchg
mov
lahf
add
mov
cmc
mov
clc
pop
xor
push
sub
rol
pop
inc
push
lea
pop
cmpb
jne
add
push
add
pop
cmp
je
push
shl
pop
add
push
add
pop
cmpl
jne
push
rol
add
pop
xor
pop
push
lea
lea
add
pop
pop
push
inc
pop
pop
push
sub
lea
pop
pop
pop
push
sub
inc
shl
pop
leave
ret
push
shl
ror
inc
pop
mov
push
shr
dec
add
pop
add
push
push
push
push
push
push
push
call
add
mov
add
mov
lods
int
push
mov
addl
jns
add
addl
jns
push
mov
sbb
add
jp
addb
add
in
add
mov
pop
xchg
lcall
add
push
xor
add
pop
mov
push
push
push
push
push
push
push
lea
push
call
add
popf
mov
mov
jl
add
roll
int3
mov
enter
pop
movsl
mov
mov
add
add
neg
add
add
jmp
push
add
add
addl
mov
scas
add
mov
testw
push
inc
shl
pop
pop
push
push
push
push
push
push
push
call
bound
add
sarl
add
test
lcall
add
je
ror
jge
lds
pop
mov
lock
add
popf
add
add
add
scas
mov
add
xchg
add
xchg
insb
pop
add
mov
mov
push
stc
loope
add
test
add
lds
ja
in
in
pop
push
add
pop
mov
push
push
push
push
push
push
call
jo
lret
test
jno
add
mov
mov
add
add
loope
add
aam
popf
cltd
push
aad
popa
xchg
add
mov
call
xlat
shl
pop
call
xor
push
inc
shl
pop
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
call
fdivp
add
iret
add
aad
pop
add
add
add
data16
popf
add
jnp
add
nop
add
je
add
add
cwtl
hlt
pop
pop
in
mov
add
shll
add
movsb
mov
jmp
in
rcl
add
mov
add
pop
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
call
testb
add
repnz
stos
cmpsl
add
push
add
add
add
add
aad
add
aad
lea
je
mov
add
xchg
in
fsubr
leave
insb
mov
sub
pop
pop
push
dec
rol
pop
pop
push
lea
pop
pop
push
sub
lea
rol
ror
pop
leave
ret
push
rol
pop
push
push
add
dec
pop
mov
push
shr
add
pop
add
push
push
push
push
push
push
push
push
push
call
outsl
add
enter
add
add
imul
pop
test
cmc
jp
popa
std
mov
add
lds
lcall
mov
imul
add
add
add
add
add
movsb
push
xchg
rolb
xchg
cmc
fldl
add
jbe
lock
jb
in
fcompl
push
push
push
push
push
call
pusha
jecxz
add
xchg
jecxz
add
jmp
outsl
add
fiadds
add
xchg
out
add
test
iret
stos
mov
jbe
add
repnz
arpl
test
add
mov
in
in
pop
push
push
ror
xor
add
pop
push
push
rol
shl
shr
not
pop
push
push
lea
push
push
lea
push
call
in
add
add
jnp
xchg
add
popf
cwtl
xlat
add
add
add
icebp
loope
loopne
out
insb
outsl
xchg
add
shrb
add
lods
mov
jecxz
in
lock
mov
push
push
push
lea
push
push
push
push
lea
push
push
call
add
mov
in
lcall
push
add
leave
sahf
add
test
out
add
add
mov
push
jo
movb
push
bound
mov
add
jns
movl
add
test
call
mov
jae
add
mov
fldenv
fcompl
push
sub
not
pop
pop
lea
push
inc
shr
pop
sub
mov
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
jns
mov
add
test
add
add
mov
addl
add
bound
aam
add
mov
shr
push
ror
shl
shl
add
pop
add
push
lea
push
push
push
push
push
lea
push
call
scas
stos
jb
add
add
fildl
imul
ja
sbbl
cmpsb
mov
in
in
mov
push
pop
add
pushl
push
push
push
lea
push
call
movsb
add
xchg
test
push
add
scas
push
add
clc
lcall
fildl
add
loopne
mov
add
push
lods
jl
xchg
push
mov
iret
xchg
add
lcall
inc
clc
push
lea
push
lea
push
push
call
add
add
jne
add
add
add
pop
fs
add
test
push
aad
add
mov
add
add
data16
add
movsb
subb
add
roll
pop
rolb
stos
add
add
pop
mov
lock
mov
push
push
push
push
push
push
push
push
call
add
mov
add
cld
rcr
add
std
add
cwtl
mov
add
add
push
add
mov
imul
add
push
mov
push
add
negl
mov
add
add
add
mov
add
lcall
stc
push
add
shr
sub
pop
xor
push
add
shl
sub
pop
lea
push
push
push
push
call
addl
outsl
add
icebp
out
jp
je
sti
add
push
jae
int3
lock
sarb
mov
push
jge
lods
call
add
add
add
xchg
mov
lock
lcall
adc
icebp
shr
sub
add
pop
add
push
add
shr
lea
pop
xor
push
shl
pop
rol
push
pop
nop
push
dec
pop
nop
xor
push
not
add
pop
nop
push
not
sub
add
add
pop
nop
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
add
mov
push
add
add
out
xchg
xchg
push
fnstenv
mov
hlt
add
aad
cmpsl
add
pop
add
add
popa
mov
jbe
jbe
mov
push
xchg
mov
add
add
lcall
push
shr
pop
nop
push
lea
push
push
call
add
repnz
add
xchg
sarb
add
xchg
add
jmp
cltd
xchg
push
mov
mov
mov
pop
cli
add
add
bound
imulb
add
add
in
ret
add
rcrb
add
add
fiaddl
push
shl
pop
cmpb
jne
add
push
lea
push
call
jl
popl
roll
out
add
add
pop
loope
add
roll
js
faddl
pushf
mov
filds
fildl
add
xchg
enter
clc
loop
scas
xchg
fisttps
movsl
add
ja
add
add
add
add
add
call
add
add
lcall
nop
push
shl
add
inc
pop
cmp
je
nop
push
inc
xor
pop
nop
push
sub
rol
pop
inc
push
push
call
pop
add
mov
movl
add
add
lahf
mov
add
fldt
out
mov
add
add
in
outsl
ret
gs
lds
add
popa
ja
lea
add
ja
lret
icebp
add
in
sub
pop
nop
push
push
push
push
push
push
push
lea
push
call
ret
std
mov
lahf
add
jmp
testb
stc
add
mov
add
add
faddl
add
shl
test
iret
sub
pop
nop
push
ror
pop
cmp
jb
push
push
push
push
push
lea
push
push
push
call
addb
pop
add
push
add
add
mov
pop
stos
mov
add
add
add
cmpsb
add
je
addr16
data16
push
add
add
ret
lock
in
loopne
xor
push
shr
rol
pop
jmp
mov
push
sub
inc
pop
add
push
push
push
lea
push
push
push
push
push
lea
push
push
call
jl
cltd
pop
jp
sbbb
fadds
add
add
in
add
add
int3
mov
add
add
mov
mov
add
add
ja
add
fld
fwait
sub
pop
movzwl
push
lea
push
push
push
push
push
push
lea
push
push
call
add
iret
jp
rolb
push
jnp
add
mov
add
add
pushf
cmpb
mov
add
push
iret
mull
mov
mov
into
imull
add
add
outsl
add
lcall
inc
sbb
rcll
push
push
push
lea
push
lea
push
push
call
mov
jne
mov
jbe
jbe
mov
add
imul
mov
push
bnd
add
pop
test
iret
push
in
add
add
test
add
add
xchg
popl
add
add
lcall
dec
hlt
push
push
lea
push
lea
push
push
push
call
stos
shlb
push
pop
mov
xchg
add
mov
leave
je
lea
mov
add
jle
data16
fadd
ret
pop
mov
add
fildll
enter
bound
pop
filds
test
pushf
add
aad
in
call
xor
push
sub
add
pop
xor
push
inc
rol
add
pop
shl
push
dec
ror
pop
xor
shl
push
push
lea
push
push
push
lea
push
push
push
push
push
call
fcompl
add
add
push
add
rolb
add
arpl
pop
test
add
add
jecxz
popf
cmc
xchg
add
mov
push
add
popf
push
in
mov
fdivrl
add
fdivl
movsl
ret
roll
fisubl
sub
pop
xor
shl
push
ror
add
pop
xor
push
shr
pop
mov
push
push
push
lea
push
lea
push
push
call
in
testb
jge
mov
int
add
add
add
add
ja
add
add
add
mov
pop
popl
add
add
movsl
mov
xchg
add
imul
add
add
add
pusha
rol
add
inc
hlt
pop
push
inc
ror
shr
pop
pop
pop
push
pop
pop
push
pop
leave
ret
push
push
push
call
push
add
test
shr
add
add
add
into
add
popf
add
add
in
add
add
xchg
addr16
in
stos
add
add
xchg
add
add
mov
stc
data16
shlb
add
in
hlt
lcall
push
sub
sub
add
pop
mov
push
lea
pop
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
add
add
xchg
add
leave
mov
out
loop
rorl
rclb
mov
add
std
icebp
xchg
out
add
mov
add
in
in
fdivr
lcall
push
push
push
push
push
push
push
call
add
cld
jmp
add
mov
add
loope
nop
add
lock
pushf
add
js
lahf
add
pop
mov
shl
repnz
xchg
add
mov
scas
add
add
lcall
push
push
push
push
push
push
push
lea
push
push
call
pusha
aam
incb
filds
pop
jecxz
test
test
je
xchg
icebp
add
ret
add
add
fadds
push
add
add
cltd
push
add
add
adcb
out
lds
mov
loope
add
add
mov
ljmp
lahf
add
rorb
mov
lds
pop
mov
push
dec
sub
pop
mov
push
sub
add
pop
mov
push
push
push
push
push
lea
push
push
lea
push
push
push
call
aad
push
mov
add
add
mov
jbe
jbe
add
add
push
test
leave
enter
in
clc
bound
add
add
add
fdivr
xorb
push
pop
test
je
mov
push
lea
pop
test
je
push
inc
shl
pop
mov
push
add
pop
mov
push
push
push
push
lea
push
call
addr16
mov
add
mov
add
fstpt
add
add
cld
scas
movsl
mov
mov
add
lods
add
xorl
imul
add
add
int
mov
js
add
add
add
add
mov
add
pop
inc
push
push
push
push
push
push
push
lea
push
push
call
insb
add
lock
ror
gs
xchg
push
pop
add
loopne
rolb
out
scas
xchg
add
add
bound
add
mov
push
movsb
push
arpl
lret
imul
xchg
je
add
fcompl
lock
pop
cmp
je
test
je
push
dec
rol
pop
mov
push
sub
pop
inc
cmp
je
push
ror
inc
dec
inc
pop
test
jne
xor
push
pop
pop
push
shr
lea
xor
pop
pop
pop
push
push
push
push
call
out
aam
jmp
imul
mov
mov
mov
pusha
je
mov
ja
mov
outsl
add
bound
add
add
push
out
add
mov
addl
add
jo
add
push
push
push
push
push
push
push
push
lea
push
call
add
movl
js
cli
add
rolb
roll
mov
add
xchg
add
andb
pop
in
add
jo
add
jno
ror
add
aam
add
fxch
add
push
add
sub
pop
leave
push
ror
ror
pop
ret
push
push
push
call
add
faddl
add
add
add
jbe
iret
xchg
mov
add
out
fisubs
in
add
mov
add
iret
add
lret
add
mov
mov
add
xchg
fsubrs
add
repnz
push
push
lea
push
push
push
call
add
mov
mov
cmc
push
add
clc
fldl
add
add
add
add
incb
sti
pushf
add
ret
add
addr16
mov
xlat
xchg
add
iret
push
mov
arpl
add
lcall
push
inc
sub
pop
cmp
jne
push
push
push
lea
push
lea
push
lea
push
call
xchg
add
add
rorb
add
cmpsl
add
add
lock
add
add
popf
jns
add
pop
mov
mov
add
xchg
add
roll
int3
insb
stos
in
add
aad
lock
add
add
out
movl
lea
push
push
push
call
mov
lahf
add
mov
mov
outsl
add
addl
add
pop
jb
fmul
add
add
pop
nop
add
push
add
jmp
stc
movsl
jno
or
loope
int3
jb
pop
add
add
orl
jle
lret
add
add
jae
add
add
flds
sub
pop
mov
push
shr
sub
pop
test
je
push
rol
add
rol
pop
mov
push
add
shr
pop
add
push
sub
pop
cmp
jne
mov
push
add
inc
shl
pop
test
je
mov
push
rol
pop
add
cmp
je
push
push
push
push
call
enter
jne
aam
bound
add
add
pop
add
arpl
add
lahf
add
xchg
incb
add
mov
add
add
fwait
sbb
jle
sub
pop
jmp
push
sub
pop
xor
pop
push
push
push
lea
push
push
push
call
add
add
in
pop
xchg
sti
mov
je
add
jle
jne
jno
push
int
add
fcmovnbe
xchg
add
addr16
add
mov
mov
add
sub
pop
pop
pop
push
shl
pop
pop
push
lea
push
push
push
push
push
call
mov
jae
xorb
add
mov
add
hlt
rolb
outsl
addl
xchg
cwtl
test
test
mov
add
jp
push
pop
pop
aad
movsl
add
mov
nop
add
call
ret
call
add
xchg
shrl
arpl
add
call
add
jl
add
fldcw
jmp
add
add
mov
std
add
add
test
stos
lahf
xchg
roll
cwtl
add
add
add
mov
push
pop
add
add
lods
add
mov
lret
add
add
icebp
pusha
outsl
add
popf
ljmp
call
sti
xchg
notb
lret
lahf
les
push
lea
push
lea
push
call
add
add
clc
out
ror
out
outsl
add
js
add
cld
mov
add
cld
in
add
jl
filds
add
add
ja
add
jbe
mov
cmpsl
jge
add
add
add
add
add
add
add
add
add
cwtl
lcall
pop
mov
sub
pop
pop
pop
push
shl
sub
pop
pop
pop
push
push
push
push
push
push
lea
push
push
push
push
call
add
enter
add
cld
mov
add
lods
xchg
lcall
add
popa
movsl
in
std
jno
add
add
fneni(8087
add
add
mov
add
add
add
repnz
fdivr
lcall
ret
push
push
call
add
add
pop
add
add
adc
cmpsl
mov
add
nop
add
add
loope
mov
push
nop
aam
push
add
mov
mov
int
mov
in
clc
lcall
pop
push
xor
inc
rol
pop
pop
push
push
push
push
call
fmulp
cmpsl
mov
add
push
xchg
aad
add
mov
ja
out
stos
add
out
add
addl
add
add
mov
add
push
add
sahf
mov
pop
push
lea
push
push
lea
push
lea
push
push
call
jae
repnz
add
add
xchg
add
lock
add
in
add
mov
mov
add
push
add
push
movsl
in
add
lcall
leave
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
incb
pushf
add
ljmp
add
xchg
add
xchg
add
add
movsl
add
add
jmp
add
add
mov
xchg
shr
add
push
test
xlat
xchg
fimull
testb
int3
add
pop
xchg
add
add
call
pop
ret
xor
cmp
jbe
cmp
xor
adc
and
adc
sbb
adc
popa
cmp
xor
adc
mov
add
add
sarl
mov
bound
in
cs
popf
add
jecxz
jmp
jle
hlt
aas
mov
rcrb
hlt
dec
mov
gs
jp
movsl
mov
jmp
and
mov
sub
sub
sbb
mov
push
daa
xlat
fs
cld
jne
imull
es
sbb
push
call
scas
jnp
cmp
and
cmp
inc
sbbb
loope
and
sub
cmp
or
adc
push
jecxz
aaa
sti
addr16
ss
lods
rcrb
movsb
and
or
gs
aas
jns
repz
pusha
pop
mov
mov
inc
pop
adc
mov
sub
test
inc
dec
pop
jo
in
roll
xchg
sbb
xchg
out
shlb
jmp
mov
pop
cs
stc
ja
sbb
add
loope
add
sub
outsb
cmpl
sub
mov
ret
mov
inc
and
cld
scas
xchg
divb
dec
std
outsl
adc
lods
cld
scas
xor
int3
push
or
out
mov
fistl
inc
or
pop
into
mov
xor
gs
sub
and
jg
lock
xchg
inc
xlat
ficoml
cltd
mov
push
cmp
sti
test
jl
xor
pop
xchg
fs
push
hlt
and
adc
mov
adc
cs
push
mov
sub
pop
mov
adc
je
sbb
pop
jae
out
and
mov
gs
adc
dec
repz
mov
mov
add
add
jnp
push
mov
inc
ss
jl
adc
mov
and
xor
mov
add
insl
dec
rcrl
aam
jb
mov
pop
lods
xchg
adc
pop
or
imul
gs
sbbl
sub
icebp
push
out
sub
pop
test
mov
jns
jecxz
jno
and
in
jecxz
mov
xchg
test
pop
push
pop
dec
cvtpi2ps
xlat
push
xchg
xchg
push
jns
mov
sarb
or
aaa
add
pop
dec
add
fcomp
jno
repnz
inc
and
push
lds
sbb
aad
mov
cli
pop
arpl
or
int3
pop
cmp
fnstenv
mov
push
test
push
data16
imul
sbb
push
add
mull
jmp
sahf
push
dec
inc
add
repz
add
in
xchg
in
inc
jg
mov
loopne
push
loop
or
or
out
sub
sti
dec
mov
pushf
and
add
push
xlat
sbb
jg
je
testb
inc
aad
test
dec
lods
in
shlb
mov
aas
ret
ret
arpl
mov
loop
xchg
cmc
data16
lods
inc
push
inc
repz
cmp
cmp
pop
popa
add
into
fdivrs
or
or
fldenv
dec
mov
cmpsl
int
mov
push
lea
popa
daa
cltd
call
add
adc
scas
mov
es
cmp
or
stos
lret
mov
mov
push
lret
rcrl
adc
jno
sub
fs
ret
imul
ret
adc
mov
sub
push
mov
scas
pusha
adc
or
cmp
std
fstps
push
or
push
sbb
test
xchg
push
lea
cmp
pop
or
xlat
out
fs
call
dec
cmp
leave
or
fdivrs
cmp
mov
and
cmp
scas
mov
sbb
fs
in
pop
ds
add
inc
mov
fcompl
nop
faddp
dec
dec
xor
sbb
cli
repz
xor
lea
dec
adc
bound
fcomi
or
sahf
fsubrs
inc
repz
aam
add
mov
push
cmp
sub
cmp
push
pop
cmp
mov
adc
sti
ljmp
orb
mov
pop
mov
inc
and
std
push
xchg
clc
pop
js
cmp
jle
pop
repz
cltd
and
mov
fwait
bound
inc
xchg
cwtl
in
adc
pop
cld
fs
fisubs
xchg
mov
sbb
and
xlat
or
adc
sbb
mov
dec
jmp
jae
mov
popf
imul
sub
xor
mov
xchg
mov
add
mov
mov
jg
xchg
icebp
jl
xchg
jge
aaa
repnz
sub
shll
or
dec
jnp
inc
js
mov
andb
js
inc
inc
cmp
shl
fwait
adc
cmp
jecxz
repnz
mov
jp
stc
ret
cmc
fsubrl
rcrb
maxps
fwait
and
ja
in
subb
add
push
in
in
mov
sub
push
data16
leave
sub
pop
xor
and
or
sub
repz
hlt
nop
xor
add
es
ljmp
dec
popf
hlt
mov
les
jnp
cmp
sbb
out
outsb
jb
pop
stos
or
iret
scas
bound
mov
push
test
and
inc
xor
push
xor
shl
xchg
inc
cltd
inc
add
es
outsb
sub
mov
lods
addl
test
out
cmp
sbb
xor
add
mov
adc
pop
or
or
adc
xchg
push
add
sub
jge
xor
pop
fisubl
cmp
dec
and
cmc
popf
add
scas
movsl
cmp
leave
or
pop
or
lods
and
fwait
mov
je
mov
push
xor
jp
enter
pop
jg
add
notl
loope
scas
fistps
shrl
pushf
sahf
cmc
jnp
xlat
movsb
lcall
fmuls
inc
mov
loopne
push
push
pop
adc
mov
adc
pop
push
xchg
add
rcll
pop
push
shrl
test
inc
in
cmpsb
icebp
mov
fwait
out
int
out
cltd
out
enter
fistps
add
sub
popa
inc
mov
imul
ret
mov
mov
andb
sub
mov
cld
arpl
sub
inc
dec
leave
in
out
add
ss
sbbb
or
push
fimull
add
xchg
loopne
aaa
inc
ret
pop
add
popa
jne
inc
dec
xor
mov
pop
or
or
xchg
jbe
mov
subb
stc
out
mov
ret
xchg
ds
jl
js
rcrl
mov
test
or
pushf
and
fld
mov
andl
xlat
in
into
dec
ljmp
pop
fcompp
cld
ljmp
lcall
cmp
ljmp
sub
pop
fnstcw
jg
lods
stos
repz
ja
shrl
xor
sar
dec
or
jb
imul
mov
rcr
jge
mov
test
mov
shlb
fwait
adc
inc
je
and
sbb
inc
adc
fwait
push
push
xor
lock
xchg
test
mov
xchg
iret
sbb
inc
mov
sarb
mov
into
add
enter
sub
jae
rorl
enter
mov
outsb
insl
test
or
fwait
loopne
xchg
fsubrs
ret
cmp
and
sbb
xchg
aam
dec
fisttpll
xchg
nop
jo
aas
repnz
addb
out
js
rcll
pop
inc
xor
push
orb
enter
mov
sahf
lods
add
inc
push
ss
sbb
dec
push
repnz
cmpl
sahf
mov
inc
dec
dec
add
inc
and
push
mov
ljmp
int
jl
mov
add
inc
jp
fnsave
fcomps
fdivr
xor
stos
gs
xchg
nopl
push
dec
loop
pop
add
fcomps
call
nopl
cltd
js
mov
fmuls
stc
leave
cltd
andl
add
seta
xor
outsl
xor
loopne
mov
jo
pusha
cmp
push
call
gs
pop
cmp
mov
mov
insb
lret
loopne
xchg
mov
stc
xor
outsl
mov
mov
scas
inc
jmp
mov
cld
in
adc
or
xlat
pop
jl
pop
xor
in
xchg
cmp
xchg
pop
mov
jecxz
pop
hlt
xchg
xchg
stc
out
test
xchg
cmp
in
add
and
in
jg
inc
push
jge
mov
test
nop
sti
mull
mov
mov
mov
int
sbb
xchg
imul
aam
cmpsb
mov
pusha
imul
sbb
cmp
xchg
mov
test
xchg
out
in
sub
idivb
mov
inc
mov
imul
jb
sbb
cmp
dec
fstps
notb
cmpsb
sub
aaa
cld
pop
ret
push
sub
jnp
dec
fidivrl
push
xor
sahf
cmpsb
aas
jmp
push
pop
bsf
mov
insl
mov
xor
xor
push
ljmp
xchg
xchg
test
push
add
rcrb
in
mulb
and
pop
call
call
or
in
out
mov
and
pusha
push
aaa
add
push
xor
fimull
sub
adc
inc
mov
enter
cmp
inc
mov
xchg
xchg
and
sarl
nop
add
cmpl
into
les
sub
into
repnz
sub
sub
or
adc
insw
mov
dec
mov
mov
dec
mov
stos
inc
nop
and
cmp
daa
repnz
lds
and
nop
push
push
mov
and
lcall
mov
call
testb
imull
lret
pop
scas
das
add
jl
lahf
push
mov
and
and
xchg
and
adc
mulb
lcall
inc
inc
outsb
fbstp
and
cmp
jnp
icebp
test
mov
jb
out
test
sub
ret
enter
gs
es
ds
outsl
in
aad
stos
arpl
xchg
not
js
add
fldl
adc
inc
mov
dec
aad
mov
scas
ret
sub
mov
jo
xchg
gs
fs
ret
xor
and
mov
inc
pop
jne
jo
popa
lods
lea
sub
mov
xchg
push
jae
inc
bound
jecxz
sbb
lret
mov
ljmp
cmpsb
jbe
inc
pop
mov
inc
ja
rolb
pop
push
lret
popf
nop
es
push
dec
mov
adc
ljmp
inc
add
test
pop
sbb
cmpsl
mov
dec
cmp
lea
push
adc
je
pop
jp
es
nop
cmp
push
repz
push
ljmp
and
mov
push
push
pushf
fldt
clc
dec
mov
jl
incl
loopne
dec
xchg
pop
dec
lods
jae
out
sub
rol
inc
add
pop
adc
inc
or
test
push
jmp
ljmp
cmpsb
dec
mov
adc
inc
inc
addb
jle
bound
xchg
sub
pop
mov
push
or
sbb
pop
push
adc
inc
sbb
sbb
lret
add
je
fcoml
lods
push
stos
xchg
adc
imul
sti
xchg
bound
daa
movsb
adc
rcrb
or
daa
rol
jno
insb
lcall
xchg
xchg
call
cmp
repz
xchg
mov
add
sti
fnstcw
push
mov
xor
andl
scas
dec
stos
leave
shlb
jbe
aas
ds
jmp
fisttps
and
cwtl
shll
push
cmp
scas
cltd
roll
inc
pop
inc
dec
out
cmp
pusha
pop
cmp
pop
jnp
push
daa
daa
xor
pop
and
int
lods
shll
popa
dec
ljmp
fsubr
ficoml
ds
adc
jg
loope
call
cmp
xor
hlt
into
sets
push
jb
adc
pop
jno
or
in
clc
sbb
xor
imul
repnz
jo
nop
data16
xchg
loop
sbb
pushf
in
fidivs
shr
adcl
test
stos
mov
cmp
enter
seta
movsb
and
add
add
rcll
push
mov
xchg
dec
adc
rcll
cmc
fnstcw
es
ljmp
xchg
cmp
adc
cmp
mov
out
inc
pop
pop
sub
mov
cmpsl
in
mov
lds
jecxz
aad
hlt
sub
mov
xchg
aad
or
clc
adc
icebp
inc
and
mov
sbb
inc
pop
mov
mov
mov
add
sub
push
mov
ret
fadd
mov
aad
je
outsl
sarl
or
mov
mov
scas
int3
gs
cmp
push
stc
sbb
sub
inc
out
inc
in
dec
js
jne
mov
test
setno
cmp
stos
add
repz
xchg
or
fsubp
inc
xor
and
xchg
sbb
movsl
inc
ja
adc
test
nop
and
hlt
je
sub
cs
mov
mov
das
fmuls
push
push
add
add
imul
xrelease
push
jge
into
outsb
lret
lods
notl
mov
insb
add
sti
mov
icebp
cmp
pop
add
xorb
shrl
inc
into
ds
mulb
mov
subb
xchg
jp
jl
lds
xor
and
xor
leave
out
and
dec
lock
sub
mov
fnsave
mov
pop
xchg
sbb
cmpsb
lods
shlb
les
notl
call
push
jne
sahf
push
jmp
rolb
inc
int3
mov
or
add
jae
push
rolb
mov
mov
vmaxps
arpl
xor
out
outsl
jae
xchg
adc
daa
or
push
sbb
ret
fimuls
cmp
aad
xor
mov
aas
into
ror
outsl
rclb
ror
push
cmp
outsl
xor
xor
iret
and
adc
push
sbb
fs
mov
inc
and
sub
push
xchg
rcl
and
and
call
addr16
xchg
xor
xor
ret
adc
insb
aad
aas
divb
cmp
cld
sub
cmpl
mov
mov
ja
push
loope
subl
jl
pop
sbb
out
adc
icebp
fidivrl
aaa
into
add
lret
ja
mov
in
adc
sub
inc
mov
cmp
jno
ret
in
sbb
push
pop
jmp
ret
clc
mov
test
mov
in
dec
sub
pop
adc
daa
scas
cmp
mov
or
imul
mov
sbb
dec
sti
xchg
lcall
or
fidivrs
inc
pop
pop
add
cmpsl
sbbb
pop
jmp
sbb
mov
outsl
cs
cmp
push
enter
sbb
or
testl
test
adc
jbe
push
jae
les
stc
pop
mov
fsubrs
or
jns
loop
or
sbbl
aaa
push
mov
cmp
lret
inc
outsl
adc
pop
sarb
ret
push
xor
into
adc
and
leave
fs
jg
lea
fistps
int3
adc
jg
cmp
fdivrl
dec
mov
cmc
lods
incb
dec
in
ficoml
lock
inc
out
je
repnz
mov
out
repnz
ret
adc
or
or
inc
mov
add
mov
fwait
xor
mov
adc
mov
adc
xchg
jb
popa
xchg
rorb
mov
pop
aam
cli
cmpsb
testb
call
pop
add
mov
mov
cmpsl
rcrl
cltd
outsl
repz
sbb
inc
je
sub
test
xlat
inc
aam
shl
aas
sbb
mov
addr16
rcll
stos
int
shr
sbb
xor
add
xchg
mov
lods
mov
mov
sbbl
sarb
jb
ret
or
jo
in
push
or
lea
or
cwtl
dec
inc
and
cld
xchg
jl
rorb
add
ds
mov
jp
jp
insl
sbb
popa
xchg
pushf
out
add
jmp
xchg
fldl
add
shll
call
sbb
xchg
call
aaa
sbb
aas
shlb
fdivl
sarb
jo
inc
data16
push
shl
sti
xchg
fwait
into
mov
je
pop
sbb
push
adc
jno
mov
dec
aas
add
push
test
push
pop
mov
stc
or
test
fcompl
mov
cmp
out
adc
push
pop
sbb
add
xchg
inc
pop
cmpl
mov
dec
mov
jge
incb
divl
jo
sub
insb
jae
adc
adc
inc
shlb
cs
xor
outsb
xchg
inc
mov
xlat
in
imul
inc
leave
lret
sbb
add
into
cmp
xchg
ss
das
scas
pop
in
pop
aam
lock
jbe
push
mov
ret
xchg
push
movsb
out
mov
andb
mov
aad
sbb
xor
sub
xor
fistps
movsl
push
push
jo
loopne
fwait
inc
ret
cltd
dec
sub
xor
mov
mov
mull
add
push
sub
pop
ret
cmp
repnz
sub
sub
inc
test
dec
popl
or
adc
jle
dec
sub
insl
sub
cltd
aam
test
adcl
gs
movsb
pop
push
sti
lods
fdivl
stc
lret
inc
vprotq
lahf
sbb
sbb
mov
push
mov
adc
pop
inc
pushf
addb
inc
mov
lahf
ret
sbb
std
cmp
sbb
and
push
fdivrp
pop
jnp
test
daa
out
adc
mov
xchg
mov
cmp
push
dec
mov
adc
cli
inc
mov
rcr
xchg
fnsave
icebp
and
sbb
stc
mov
addb
inc
cmpl
mov
and
scas
clc
xchg
mulb
idivb
pop
mov
test
mov
mov
insb
test
mov
aas
ret
jge
lds
sti
data16
pop
jge
pop
scas
sbb
push
pop
push
mov
inc
enter
mov
testl
cld
mulb
imul
pop
mov
mov
mov
jnp
imul
jmp
xor
fs
jo
xchg
xchg
test
leave
ja
or
jo
jns
icebp
lret
test
out
mov
xchg
sbb
xor
outsl
pop
rcll
cmp
or
inc
inc
into
push
sbb
in
push
and
inc
pop
and
pusha
xchg
sbb
adc
mov
mov
out
clc
sub
or
pusha
xchg
adc
lea
mov
xor
lret
pop
jbe
push
dec
sub
jecxz
addr16
cmpsl
jmp
pop
sub
adcb
push
sub
pcmpgtb
and
bound
loop
cmp
jecxz
lods
xchg
sub
aas
pop
sbb
xor
jo
fucomp
adc
dec
mov
aas
mov
filds
inc
or
cmp
jmp
popa
push
insl
and
insl
sub
inc
mov
sub
xor
jle
jno
dec
mov
push
test
jno
pop
jnp
test
mov
ret
sbb
enter
pop
inc
or
ljmp
aam
push
add
movmskps
mov
jo
xor
add
mov
pop
mov
xchg
adc
repz
aas
gs
xor
nop
xor
push
xchg
ja
lds
ret
popf
cltd
mov
imul
das
test
inc
insl
mov
outsl
jbe
add
push
pop
fsubl
fldl
repnz
cmp
leave
jb
mov
decb
push
inc
and
push
or
ljmp
js
or
shlb
xchg
scas
data16
aas
test
aaa
cmpsb
sub
cmp
ficoml
xor
mov
mov
xchg
mov
xor
outsb
data16
ret
dec
das
cmp
fidivrs
std
ret
ret
xor
inc
es
and
sarb
sbb
sbb
leave
dec
or
test
jge
or
mov
adc
rcll
xchg
out
pop
fdivrl
js
and
dec
cmp
add
test
mov
mov
push
mov
xchg
dec
add
mov
mov
cmp
sahf
ficoms
sub
mov
adc
popa
add
or
fisubl
sahf
mov
out
fstpl
ljmp
xchg
and
xchg
adc
dec
mov
sbb
in
mov
repnz
lcall
sti
xchg
testb
mov
sahf
lods
imul
jle
insl
and
xlat
pop
fdivl
jne
pop
andl
xchg
std
daa
rcr
lahf
loopne
out
dec
add
call
xor
out
dec
dec
loope
inc
xor
mov
inc
xor
sub
adc
xchg
fldenv
adc
mov
loope
jmp
mov
xchg
data16
adc
rcl
lcall
dec
inc
js
dec
and
aaa
jbe
mov
jne
shlb
sub
in
push
into
jmp
ret
mov
ds
xchg
scas
xor
dec
jmp
mov
jno
xchg
les
ret
enter
pop
pop
in
xchg
add
insb
inc
popf
jp
push
mov
movsb
testl
outsb
imul
add
loop
aad
mov
cmp
adc
inc
xchg
movsb
jp
es
jno
mov
push
mov
bsr
in
fcom
jnp
sub
and
fsubrs
out
push
push
inc
inc
icebp
inc
fildl
sbb
xor
mov
imul
out
jmp
pop
and
xchg
je
ret
iret
mov
push
insl
lods
mov
mov
xchg
xor
test
data16
fistpl
sub
add
xor
sbb
scas
adc
adc
or
test
inc
sar
movsl
lea
gs
in
jbe
inc
adc
push
cmp
pop
sti
ss
je
mov
pop
mov
lock
rcl
mov
incl
dec
imulb
aaa
pop
cltd
gs
cmpsb
mov
sbb
cmp
jle
jbe
std
push
and
pop
lods
shrl
test
mov
or
cld
mov
rcrb
inc
cmp
xchg
mov
loop
inc
mov
outsl
mov
cmpsl
and
or
mov
shlb
adc
or
mov
in
xchg
popf
pop
inc
cmpsl
fidivl
stc
es
mov
mov
adc
iret
sahf
into
push
and
lods
or
stos
iret
adc
or
dec
dec
out
jnp
add
xchg
inc
pop
insl
push
dec
data16
arpl
cmp
mov
sbb
jne
loope
mov
or
jp
pop
jne
test
std
hlt
pop
inc
adc
mov
je
add
outsb
mov
add
push
ret
test
into
mov
dec
dec
pusha
xchg
lods
popl
aaa
dec
icebp
jle
pop
int
clc
adc
and
add
out
add
cli
aam
pop
inc
cmc
mov
leave
sub
lea
mov
mov
adc
insl
mov
arpl
sub
out
mov
inc
sub
jge
mov
insb
cli
loopne
fstl
dec
daa
mov
inc
fdivrl
push
sti
stos
sub
stos
rcrb
sub
pop
push
insb
daa
dec
inc
jge
movsb
xchg
ds
pop
add
bound
hlt
mov
cli
and
and
jbe
cmp
push
loope
sub
in
fistl
popf
lock
sbb
xchg
sub
cmp
data16
mov
jecxz
inc
cmp
jns
adc
pushf
xor
js
adc
and
pop
cmpsb
push
and
aaa
movsl
int
xchg
dec
inc
add
roll
dec
push
outsb
jg
mov
jmp
loope
cli
outsl
call
and
cmpsl
imul
popa
aad
roll
sbb
imul
jg
sub
sub
out
push
mov
jp
xchg
stos
insl
repz
outsl
jmp
mov
push
hlt
inc
mov
cmp
cli
jg
xor
adc
mov
aas
mov
push
dec
add
pop
fcoms
sub
es
jecxz
insb
stos
je
ds
mov
test
arpl
clc
das
mov
adc
sub
pop
ds
roll
mov
push
xor
cli
pop
cmp
and
lcall
mov
popf
push
shrb
test
movsb
xchg
jge
sar
mov
rep
adc
pop
or
nop
cmc
cmpsb
loopne
sub
clc
inc
arpl
mov
int
movsb
add
jae
mov
aaa
mov
dec
dec
scas
icebp
lahf
imul
pop
lea
lea
xchg
ficomps
stos
dec
lods
rorb
sub
pushf
mov
pop
fldt
mov
xchg
cmc
sbb
inc
test
jge
adc
nop
ja
mov
and
mov
mov
nop
lretw
scas
cwtl
rorl
orb
cmp
ja
adc
xlat
ss
xchg
push
cltd
ret
inc
dec
or
sbb
fwait
mov
lret
sarl
loop
xor
sub
testl
pop
call
xchg
pop
ss
sub
int3
push
arpl
movsb
fmull
sahf
sub
ret
sub
lods
xchg
and
aaa
pop
push
xchg
sbb
inc
testl
outsl
push
xor
out
test
mov
mov
stos
cmp
repz
cmp
sahf
lret
pop
inc
ss
jle
outsb
cmp
push
out
inc
mov
dec
aad
fcompl
ljmp
mov
or
test
int
stos
out
sub
dec
outsb
mov
mov
inc
es
and
cmpsb
jno
ja
sub
push
fwait
sub
addr16
xchg
push
jmp
aad
xchg
leave
cmp
jnp
stos
insb
mov
sbb
push
xchg
cwtl
mov
pop
push
pop
jb
adc
aam
xor
push
aam
adc
mov
dec
and
xor
adc
jg
daa
data16
decb
mov
add
ja
in
add
sbb
xchg
xchg
ret
xor
dec
mov
jl
dec
imul
testb
lcall
je
mov
out
add
mov
and
mov
cmp
gs
arpl
out
push
loopne
dec
ja
ja
cmc
and
fs
scas
or
sbb
jae
in
jns
fstps
cltd
clc
les
pop
inc
loop,pn
jae
mov
jnp
push
aas
mov
mov
mov
mov
sahf
incb
out
fisttpl
inc
add
hlt
push
cmp
imul
adc
mov
and
sbbl
xor
mov
and
insl
push
inc
dec
out
pminsw
mov
jnp
repz
mov
sbbb
out
jl
in
mov
lcall
dec
js
inc
sbb
andb
dec
add
outsl
mov
popl
pop
mov
aad
roll
aas
stc
mov
push
cmpsl
enter
and
xchg
stos
cmp
into
scas
push
adc
ret
in
repnz
idivb
out
popa
enter
andb
sbb
cmc
xchg
and
jl
iret
nop
fldenv
andb
or
sub
out
dec
loope
inc
mov
add
push
xor
std
mov
add
bound
cli
push
in
push
adc
or
lahf
add
stos
xchg
gs
les
push
in
sbb
mov
sub
ret
sbb
das
lds
adcb
sbb
dec
mov
xchg
sbb
in
or
negb
mov
and
out
jno
popa
mov
je
fwait
jne
mov
jns
fnsave
sarl
popl
and
mov
push
sub
dec
ret
jmp
sti
push
fsubp
cmp
sub
or
sbb
popf
dec
hlt
aad
aad
sti
sahf
mov
jb
add
cmp
rolb
loopne
cmp
sub
push
shl
dec
addr16
imul
or
je
adc
jno
ss
mov
lds
sub
or
xor
repz
mov
adc
sub
pop
stc
sbb
mov
lcall
cmp
mov
push
or
pop
fiaddl
lea
cmp
jmp
mov
bound
dec
cmpsb
add
in
jbe
xchg
dec
add
xor
aas
je
test
cld
pop
inc
cmp
fwait
leave
sarb
add
sbb
fsubrp
mov
or
lcall
dec
shlb
sbb
xchg
cmp
sub
loop
jno
inc
fistps
out
dec
and
repz
fimuls
jnp
mov
inc
insl
lds
dec
sbb
outsb
mov
dec
mov
in
cmc
add
add
int3
mov
sbb
repz
jno
sub
gs
mov
push
cli
mov
repnz
or
andl
and
fldl
lret
and
adc
add
lcall
fwait
xor
addr16
add
rcrb
into
and
rorb
test
pop
outsb
icebp
or
in
mov
pop
mov
xor
xor
adc
jmp
sub
mov
xchg
jl
sub
adc
push
jo
sbb
scas
xchg
mov
stos
es
pop
sbb
loop
inc
inc
jne
sti
xchg
lcall
mov
test
dec
push
mov
sbb
int3
test
jg
sub
leave
push
test
out
pop
push
pop
pop
fldt
inc
es
inc
mov
notb
adc
shl
shlb
ret
sub
mov
sbb
int
ret
aaa
pop
int
xchg
inc
arpl
sbb
xor
fisubl
in
pop
jno
lret
cmp
roll
xor
xlat
loop
repz
pop
lahf
xchg
iret
sti
insb
cmp
xlat
gs
movb
iret
lods
test
add
out
sbb
push
dec
and
add
xchg
jno
lcall
fsubl
stc
add
call
data16
scas
dec
mov
inc
sub
dec
adc
add
jnp
aas
stos
ror
xor
mov
pop
outsb
dec
mov
ds
push
jmp
xor
and
xor
mov
adc
add
pop
pop
mov
mov
dec
jp
rcll
das
fisubrl
mov
ljmp
out
jb
ja
mov
mov
sub
ss
lock
sub
cmc
sar
jo
mov
ljmp
or
mov
lods
sub
sub
xchg
les
sub
push
jmp
in
inc
or
push
sub
lock
add
pushf
lahf
inc
cmp
aam
ror
fildll
pop
mov
aam
pusha
pop
or
pusha
adc
push
jae
rcr
int3
aad
ret
xor
adc
mov
inc
mov
rcll
pop
push
repz
dec
jmp
pop
and
jge
dec
cmp
stos
sub
add
mov
xchg
stos
mov
mov
and
dec
gs
daa
sub
dec
rclb
xchg
popf
int3
adc
int
cmp
pop
das
pop
popf
mov
mov
psubusb
inc
and
xor
dec
xchg
dec
cmp
or
cmp
adc
adc
test
jo
pushf
mov
mov
sbb
rcl
sbb
add
pop
push
add
mov
dec
mov
xorl
adc
dec
loop
sbb
adc
ss
fidivrs
jnp
bound
and
std
dec
inc
inc
lock
xor
mov
inc
dec
cli
adc
adc
add
test
push
add
std
add
xchg
pop
sbb
jmp
xchg
push
sub
pop
ret
sub
xchg
xor
scas
outsb
jl
roll
divb
sub
xchg
xchg
jp
dec
out
pop
lea
push
test
add
fs
inc
movsb
push
ljmp
fistl
ret
lcall
sub
rclb
adc
pop
push
rcrl
loop
and
push
mov
lock
sbb
and
call
xchg
fwait
pop
sub
inc
outsl
ret
nop
ja
push
xor
or
mov
es
jbe
sbb
jmp
mov
dec
fisttpll
cmp
je
sub
mov
jp
repz
jns
adc
and
mov
sbb
shlb
scas
movsb
test
adc
stos
pop
lods
addb
jno
fucomi
jl
adc
push
dec
push
or
shl
push
jmp
fistpl
xor
jne
mov
int3
lahf
and
jg
cs
sbbl
stc
outsl
enter
pop
jo
enter
pop
stos
pusha
in
mov
pop
inc
push
adc
inc
sahf
mov
test
out
addb
scas
push
xor
push
cmp
orb
je
shlb
sarb
mov
xlat
ret
outsb
sbbl
cwtl
mov
loopne
das
sub
pop
jae
fimuls
mov
push
in
int
jge
mov
xchg
shll
and
fdivs
outsb
jnp
movsl
pop
bound
in
cmp
jae
cmp
mov
enter
or
sub
sub
jb
shrl
negl
fsts
aaa
or
sub
movsl
jae
add
in
out
jno
aaa
and
aaa
insb
or
sub
sbb
imulb
pop
jle
stos
movsl
or
ret
aad
mov
inc
jg
sbb
push
jae
es
popa
dec
xchg
cmp
xor
sub
or
sub
cmp
rclb
push
int3
sub
pop
leave
pop
mov
adc
ficompl
push
loop
xchg
aaa
in
daa
scas
shrb
hlt
or
jae
iret
movsb
cmp
xchg
cmp
outsl
cltd
mov
popa
cmp
push
jnp
ja
pop
mov
notl
sti
inc
xchg
xor
pop
adc
fisttpl
add
push
push
adc
cmp
inc
aas
fcomps
push
pop
movsl
out
mov
inc
adc
in
scas
sarb
xor
jge
pop
or
inc
mov
sahf
repz
xor
lahf
es
les
lret
inc
lods
push
xchg
and
adc
aad
cmp
es
int3
pop
enter
in
loopne
scas
les
dec
jne
xchg
add
aaa
lods
je
inc
xchg
test
ret
lahf
xor
xor
push
adc
or
cmpsb
insl
sub
mov
divb
sbb
outsb
xor
jae
shl
lds
sub
or
add
fwait
adc
inc
push
mov
sti
cmpsb
adc
xchg
push
les
mov
out
push
sbb
inc
test
ret
leave
and
add
pop
pop
outsb
movl
mov
dec
pop
sub
ss
nop
xor
sub
mov
push
dec
das
movsb
sub
jnp
mov
ret
stos
adc
mov
jle
ljmp
or
jne
sahf
lock
pusha
push
push
pop
ss
or
push
jmp
inc
bound
jo
inc
lret
xchg
jle
adc
jnp
clc
stc
call
mov
repz
bnd
adc
test
and
xchg
loope
arpl
into
adc
pop
addl
cld
jnp
push
in
adc
add
mov
cmp
jge
mov
jne
test
pop
push
cmp
pushf
daa
push
xor
mov
imul
sub
outsb
push
jno
jl
lret
mov
and
push
in
out
and
and
inc
in
sub
dec
cwtl
inc
pusha
sbb
mov
push
dec
ss
loop
loopne
lods
fdivs
sahf
xchg
out
in
inc
mov
pop
outsb
sbb
out
sub
lds
push
mov
cwtl
add
or
lds
xchg
jae
fsubl
and
aad
sub
enter
es
rclb
mov
mov
inc
nop
dec
pop
inc
inc
fbstp
pop
sbb
mov
fnstcw
cmp
inc
inc
jne
test
mov
idivb
push
iret
inc
sub
add
adc
dec
xchg
xor
ja
adc
clc
jbe
xchg
out
pop
push
inc
scas
and
leave
test
push
or
sbb
shlb
xlat
inc
push
arpl
add
dec
dec
cltd
es
jns
aad
sbb
mov
push
mov
stos
and
or
imul
mov
fdivrs
cld
xchg
cmp
dec
sbb
push
fistpl
xchg
js
fisubrs
pushf
jae
cmp
lock
int
ja
mov
cmc
nop
add
cwtl
test
cmp
ret
sti
fdiv
cmp
cmp
pop
pusha
les
lahf
hlt
das
mov
jns
ret
inc
or
xor
push
je
cli
ret
push
fists
iret
jecxz
ret
push
popl
cmp
dec
mov
pop
mov
aam
mov
sarb
jl
stos
rorl
jbe
inc
sahf
imul
movsl
lods
sub
aam
mov
shlb
sarl
int
out
push
mov
dec
sub
sbb
add
mov
mov
sbb
pushf
imul
popf
or
xor
sti
ss
jne
push
cmp
push
outsl
adc
or
sub
push
jnp
addl
dec
push
addr16
pop
scas
xor
xor
in
fwait
gs
jp
subl
lods
aas
xchg
in
xchg
arpl
xor
push
mov
enter
leave
inc
subl
mov
pop
fcomip
out
mov
fwait
push
mov
sub
das
mov
and
sub
xchg
arpl
arpl
popa
ss
daa
cmp
sbb
es
lret
jns
fildll
inc
pop
sbb
push
sarl
sbb
outsb
test
fbld
inc
js
cmp
sub
test
sub
or
lcall
fdiv
popf
cmp
xchg
and
movsl
push
dec
dec
stos
jle
test
mov
out
cwtl
mov
dec
stc
dec
addl
pop
mov
push
imul
cmp
ret
aas
lret
movsl
lods
movsl
enter
mov
or
or
mul
popa
aam
jne
aas
mov
sub
sahf
out
adc
jnp
mov
popa
sub
outsb
xorl
pop
fs
scas
pusha
sbb
out
hlt
rorl
idiv
xchg
mov
out
notb
repz
movsl
jg
jecxz
cltd
or
aad
cmc
dec
xchg
jecxz
inc
clc
lea
ja
and
hlt
divl
mov
popa
popa
cmp
dec
push
push
cli
test
dec
in
test
mov
xchg
lods
lret
inc
push
pop
sub
mov
mov
xor
popa
mov
xchg
sti
xchg
in
fisttpll
mov
fucomip
jecxz
inc
dec
clc
cmp
movl
xchg
pop
mov
xor
pop
aaa
popf
jmp
insl
inc
cmpsl
fmuls
xchg
mov
mov
stc
loope,pn
jmp
jns
xlat
mov
xchg
cwtl
inc
inc
jmp
ret
in
nop
add
sub
lret
mov
xor
and
ja
shr
lret
idiv
xor
lods
lods
xlat
xor
and
jo
dec
test
popl
push
stos
in
outsb
mov
notl
or
jnp
inc
cmp
paddsb
addb
add
jbe
cltd
pop
sbb
add
outsb
mov
lock
xor
outsb
pusha
xor
sub
xchg
fnsave
dec
adc
or
rolb
xchg
shll
cmpsb
aas
nop
lret
insl
mov
dec
push
fwait
dec
xchg
jecxz
aad
inc
scas
fmuls
lcall
hlt
push
pop
jns
pop
pop
xchg
mov
xor
leave
out
push
adc
pusha
cmp
in
scas
sub
xchg
dec
push
leave
imul
cmc
pop
pushf
adc
test
daa
sbb
repnz
mov
pop
jo
mov
xor
sarb
out
int
mov
mov
hlt
mov
push
and
pop
sbbl
push
les
adc
push
sub
xchg
mov
repnz
shr
sahf
sbb
push
ficompl
jge
addl
cmpsl
add
insb
imul
scas
mov
xor
pop
nop
mov
scas
fcmove
mov
sbb
enter
xor
pushf
sub
adc
mov
inc
xor
sbb
cmp
jl
cmp
es
mov
idivb
outsb
sbb
aam
dec
fwait
or
mov
mov
psrlw
cmpsb
jbe
and
xchg
adc
xchg
sbb
jg
bound
in
js
and
mov
out
or
lret
or
jg
push
mov
mov
into
pop
cmp
mov
inc
sahf
xchg
insb
dec
and
dec
fcmovbe
in
ffree
add
movsl
dec
fs
and
sub
cmpsl
stos
mov
mov
and
mov
xchg
cmp
and
dec
outsl
outsb
jb
pop
rcrl
in
sub
or
lret
adc
push
adcw
jo
mov
add
cld
and
mov
pushf
jae
fiadds
xlat
adc
jne
add
sarb
mov
push
leave
pop
xchg
push
in
call
shrb
sbb
add
dec
add
aad
pop
sub
mov
jb
jno
insl
push
inc
cmpb
jp
push
andl
jmp
stos
push
push
imul
lret
xchg
add
push
mov
cwtl
std
push
xlat
std
test
xchg
adc
add
sbb
dec
pop
jno
cld
out
stos
push
adc
add
mov
pop
jmp
ds
mov
cmp
mov
mov
jae
lret
mov
fcmovu
inc
jae
pop
enter
cmp
and
aad
and
mov
jge
fildll
mov
sub
loope
cmp
insl
fs
pop
iret
or
pi2fd
cmp
adc
out
or
adcl
add
insl
in
jne
or
jmp
leave
sub
fwait
in
cmp
inc
or
sti
psubsw
cmp
loope
mov
jl
std
pop
cmp
leave
test
mov
xchg
mov
dec
xchg
mov
and
dec
orl
jno
cmp
and
mov
insl
sub
out
mov
imul
cmp
lcall
hlt
loop
subl
aaa
or
jno
stc
add
cmc
das
roll
aaa
mov
adc
lcall
stc
push
je
sbb
or
movsb
aaa
jbe
movsl
xor
jnp
mov
jnp
mov
std
xlat
fsubrp
mov
fdivr
daa
gs
inc
aaa
mov
cmp
inc
jle
es
lods
xchg
lock
sbb
push
sbb
test
mov
jno
andb
cli
lcall
dec
push
popa
loope
pop
dec
mov
movsb
dec
dec
mov
cli
mov
addr16
mov
and
call
clc
cli
xchg
scas
mov
int3
mov
mov
cwtl
inc
and
push
fistpll
repnz
mov
jg
mov
test
mov
and
das
roll
xchg
fdivs
or
jp
push
jmp
inc
iret
loop
sahf
lods
cmp
sbb
hlt
cmp
dec
or
stos
and
sbb
push
xlat
pop
sbb
ficomps
cltd
dec
sti
xchg
test
jg
push
push
ss
out
mov
xchg
repnz
sti
fldz
sbb
sub
inc
push
mov
sub
out
xor
jecxz
out
out
movsb
mov
inc
sub
das
jl
sti
sbb
faddp
jg
mov
movsl
or
addr16
incl
push
lcall
icebp
push
mov
in
push
cwtl
pop
jecxz
mov
aam
pop
js
push
popa
sbb
movsl
mov
lret
cs
xor
pop
push
jp
fcmove
mov
cli
cmp
pushf
lret
jp
or
nop
movl
loopne
in
fcmovu
push
jnp
sub
dec
stos
mov
jo
into
mov
cltd
ss
cmpsl
cmpsb
xchg
jb
push
and
pop
imul
insb
aaa
jnp
sub
stc
fstpt
fcompl
lock
mov
add
dec
mov
adcb
cmp
mov
mov
and
call
mov
mov
jmp
inc
icebp
sub
sub
and
fisubs
jbe
mov
scas
js
mov
xor
int
imull
dec
ja
popa
or
mov
dec
mov
inc
sbb
mov
daa
fs
mov
nop
addr16
outsl
push
push
rorb
adc
mov
cmp
sub
dec
call
xchg
jg
aaa
notl
jne
sbb
idivb
pop
ds
push
mov
ret
xchg
jmp
mov
dec
cmpsb
out
mov
mov
and
inc
insl
mov
mov
adc
rorl
insb
adc
imul
sub
sub
mov
aam
popf
sub
std
pop
jnp
cld
fiaddl
jmp
roll
cmp
xor
jno
xchg
dec
pop
arpl
mov
jmp
add
cltd
jns
add
xlat
movsl
outsl
pop
gs
out
fisubrl
dec
sbb
das
and
outsl
std
push
ja
xchg
jmp
lahf
shlb
cmp
mov
mov
js
mov
bound
arpl
cmp
es
dec
and
out
clc
mov
cmp
xchg
ds
mov
inc
mov
push
mov
jge
pop
std
insl
sub
fs
push
pop
jmp
jns
dec
cmp
jbe
pushf
hlt
jnp
fsubr
mov
mov
fstl
xor
mov
jbe
mov
adc
xor
cwtl
fsts
les
shrl
and
imul
pop
sub
scas
sub
sahf
mov
in
jp
lahf
movsb
adc
and
xor
popa
lods
dec
movsl
jae
in
lahf
fldenv
add
and
dec
or
mov
cmpl
dec
fdivrs
add
call
mov
into
push
jmp
sub
xchg
shl
incb
dec
adcb
ret
outsb
das
sub
jnp
fsts
movsl
xor
test
add
sub
mov
xchg
xchg
testl
mov
pop
dec
ss
inc
into
test
pop
pushf
popf
xor
test
int
mov
out
ljmp
daa
data16
ret
call
out
pusha
or
xlat
cs
jmp
or
enter
and
mov
insb
xor
test
fadd
pop
sarl
je
xor
fstpl
aam
cmp
pop
mov
fisubl
popf
and
les
scas
or
push
push
or
xchg
rcr
add
cli
jb
add
xorb
daa
fmul
and
in
repnz
std
lods
jo
aad
sub
shlb
mov
jne
ss
xchg
fistpll
sub
ret
pop
stc
push
filds
mov
or
cmc
inc
xchg
nop
pop
push
sbb
aas
adc
cmp
mov
add
and
ja
mov
out
pop
int
pop
jmp
sbbl
or
push
dec
inc
xchg
test
test
inc
fisubrs
jae
push
mov
sub
pop
je
adc
subb
mov
jnp
popl
cltd
daa
lcall
xchg
xlat
dec
xlat
cmpsl
push
rcr
pop
stos
nop
xor
mov
sub
in
in
xchg
mov
mov
pop
loope
stos
sar
xor
cmpsl
mov
push
jae
fistpl
jae
aad
subb
loopne
mov
mov
jb
mov
popf
insb
ret
adc
cltd
pop
dec
sub
cld
iret
ds
test
adc
push
ljmp
dec
pushf
xchg
xchg
cmovb
adc
adc
das
add
xor
orl
xchg
cmp
or
push
pushf
std
ds
mov
adc
in
sbb
push
in
push
lcall
cmp
fwait
xor
mov
xchg
push
fs
loop
loopne
shrl
sub
insb
ja
adc
pop
mov
bound
test
adc
pop
jmp
push
sub
adc
stos
pop
jp
mov
in
mov
sbb
test
sbb
mov
push
imul
dec
xor
cmp
sbb
jp
js
sub
push
xor
push
push
mov
push
loopne
mov
jne
or
and
pop
outsl
ret
jp
cld
out
into
insl
mov
push
mov
adc
inc
and
repnz
push
shrb
jle
inc
mov
lret
int3
xchg
jne
mov
stc
jne
mov
pop
imul
sbb
daa
push
pop
addr16
into
push
adc
xchg
ja
mov
jp
repnz
and
xor
shll
xor
mov
leave
push
mov
leave
icebp
jge
jge
je
pop
jle
mov
pop
inc
xor
xchg
jle
mov
gs
mov
jo
int3
inc
or
std
push
xor
cltd
adc
mov
dec
fmull
push
sub
sbb
lods
mov
jne
mov
push
pop
jae
xchg
imul
dec
inc
jmp
add
test
rcl
aas
icebp
mov
mov
call
xchg
mov
rcr
jbe
loopne
sbb
fwait
or
lods
pop
dec
lea
rorb
aad
mov
mov
and
neg
ds
ret
aad
jns
les
xor
stos
in
add
mov
and
jge
jecxz
imul
movsl
cmp
mov
popf
pop
push
or
out
xchg
xor
fildl
stc
dec
je
add
push
dec
mov
movsl
inc
inc
aaa
dec
adc
xorl
lods
fsubr
mov
xor
xchg
jp
ds
and
inc
int
push
in
leave
mov
loop
mov
sbb
mull
pop
inc
push
xchg
pop
ret
test
movsl
repnz
pop
ja
mov
sbb
pop
mov
xchg
jb
dec
notb
sar
inc
push
push
pop
add
mov
mov
daa
clc
mov
fistpl
xchg
mov
ret
inc
jecxz
hlt
iret
mov
in
out
outsb
pop
mov
push
sbb
hlt
fcompl
outsb
notl
add
sahf
or
icebp
fildll
jg
testb
xchg
push
sub
or
push
sbb
and
das
jmp
stos
enter
jmp
out
adc
mov
lret
mov
jge
fstps
sti
je
mov
and
mov
mov
mov
mov
test
push
sbb
add
sub
mov
shlb
je
je
or
out
ret
je
arpl
or
sub
loopne
push
ljmp
clc
testl
int
dec
sub
jb
push
cmp
pop
int3
ljmp
cld
mov
mov
aaa
and
lahf
xchg
in
jae
subb
add
mov
orb
adc
arpl
fldenv
and
mov
jns
and
inc
push
pop
sbb
pop
ss
out
jl
aaa
push
cltd
jle
jno
std
icebp
popa
jle
and
sti
sbb
cmp
sbb
je
inc
rcrl
xor
pop
adc
add
lock
mov
sbb
stc
scas
shll
ljmp
daa
movsb
adc
ret
int
and
out
jbe
jb
sub
xor
outsl
cmp
leave
inc
jne
push
cmovb
pop
lds
mov
sub
cmp
xchg
push
pop
fsub
push
sbb
mov
cmp
jge
pusha
div
and
jle
aaa
jne
stos
sub
sub
movsl
add
lcall
and
or
stos
jp
ret
add
sbb
aam
nop
dec
or
std
lea
mov
sahf
fdivr
ds
test
mov
mov
mov
inc
inc
js
popa
enter
lcall
push
dec
int3
and
sbb
jl
inc
pop
adc
add
add
stc
dec
or
xchg
loop
dec
mov
and
cmp
outsb
cmp
popa
mov
adc
lock
gs
jmp
pop
iret
pop
popa
inc
xor
jnp
mov
push
mov
stc
sbb
addl
jle
hlt
jno
aaa
cmpsl
shll
fisubl
add
aam
std
push
xor
out
imul
sub
mov
movsb
mov
addr16
cmp
jnp
pop
sub
xor
mov
das
sbb
in
std
imull
test
sbb
repz
sbb
mov
mov
and
sti
jmp
lret
fadds
mov
cmp
push
pop
rcl
pop
adc
mov
jl
mov
rclb
xor
ret
cs
or
fistpll
shl
ja
in
cmp
fcmovu
aam
testl
mov
adc
mov
jp
push
stos
std
rcll
adc
xor
mov
add
xchg
hlt
mov
adc
xchg
inc
xor
pusha
add
in
leave
arpl
xchg
jg
fs
push
xlat
pop
ljmp
mov
dec
add
repnz
shr
jge
inc
xchg
les
mov
mov
test
cltd
sub
aad
mov
jge
call
add
pop
fdivrl
push
out
sub
inc
xchg
sbb
xchg
pop
inc
mov
sbb
stc
add
in
mov
pop
xchg
aaa
jae
pushl
mov
int3
fs
add
mov
cwtl
cmp
jmp
ja
fcoms
call
jnp
icebp
sbb
mov
fstl
jbe
sbb
ss
fs
in
pop
push
jns
sbb
stc
mov
test
push
or
pusha
mov
push
jns
xor
add
addr16
mov
fs
sub
fldenv
repz
es
std
add
mov
movsb
les
add
jle
push
loopne
xchg
cmc
mov
sub
and
inc
mov
mov
mov
push
jo
rclb
jecxz
mov
xchg
std
lahf
sbb
ja
ds
jl
push
mov
cmp
data16
xor
jno
jns
sbb
daa
incl
lods
cwtl
lds
sbb
mov
sbbl
icebp
mov
xchg
jl
jg
ret
enter
xchg
std
imul
push
fsubs
les
cmp
push
ret
movsb
mov
int3
sbb
outsl
mov
mov
jp
sbb
pop
or
sbb
jmp
es
mov
xchg
xorl
push
out
mov
mov
out
inc
xchg
repz
jno
mov
xor
cmpsl
mov
push
iret
sub
push
div
mov
or
adc
dec
dec
scas
gs
xchg
cmp
and
xor
insb
ss
lock
add
push
mov
ficomps
cmp
fsubrs
cld
out
mov
stos
and
scas
jg
or
mov
jl
inc
call
shl
out
jp
aaa
out
sub
pop
stos
push
repz
pushf
jnp
adc
ret
call
aad
out
jmp
pop
push
cmp
test
ja
push
test
mov
orb
test
sbb
ret
cmp
ljmp
mov
sub
xor
test
out
adc
stc
mov
cmp
aaa
xchg
jl
xor
dec
test
push
xchg
imul
imul
insb
enter
jl
xchg
fisttpll
pop
push
xor
fdiv
fnsave
call
sbb
xchg
je
pop
nop
shll
ljmp
rcr
mov
imul
cmp
out
mov
or
mov
cs
pop
sbb
test
incb
rcrb
pop
cltd
or
nop
insl
stos
insl
jmp
xchg
sti
cwtl
movsb
andl
test
mov
push
jno
or
pusha
pop
pop
push
dec
xchg
jle
test
popa
push
jo
sub
xchg
ja
mov
out
adc
add
pop
add
decl
pop
mov
add
mov
jae
pusha
jg
sbb
jp
mov
and
arpl
cmp
lcall
add
xor
adc
fadd
push
call
pop
push
adc
shr
jge
lret
adc
adc
call
pop
repnz
lods
mov
push
scas
xor
mov
xchg
and
jns
imul
mov
arpl
jmp
cmp
imul
inc
mov
jp
fistpl
inc
mov
out
push
fisubl
mov
sti
push
movsb
mov
jmp
xchg
int3
sbb
aad
sbb
cmp
mov
popf
xchg
out
sub
stos
enter
pop
add
lret
lahf
and
pop
jg
mov
mov
pop
js
xlat
jb
adc
inc
mov
xor
and
imul
int
repz
loope
adc
push
fbstp
pop
sub
push
jle
dec
js
xor
leave
cs
mov
mov
sub
fwait
jae
clc
cmpsl
push
mov
jg
ret
mov
dec
rclb
fs
jae
push
pop
stos
or
inc
in
mov
cwtl
push
mov
dec
or
sti
out
cmp
scas
xchg
mov
mov
mov
arpl
clc
pushf
inc
jns
insb
shlb
and
inc
push
ss
sub
sarl
cltd
mov
jnp
shl
mov
cmp
shll
fnstenv
push
lock
pop
mov
les
subb
fbld
xchg
adc
push
xor
les
fldcw
mov
cmp
pop
and
sbb
aaa
sbb
inc
test
sub
mov
imul
out
mov
dec
in
cmp
subb
pop
and
insb
cld
int3
cmp
test
pop
xchg
sbb
movsb
out
xor
jecxz
test
mov
into
pop
xchg
call
test
mov
mov
push
sub
jnp
dec
dec
out
cmpsb
roll
frstor
xlat
push
nop
sbb
jae
sti
loope
cmpsb
adc
push
mov
fwait
jge
orl
and
jbe
fs
ljmp
sbb
pushf
movsb
imul
xchg
mov
out
stos
xchg
and
xchg
out
stos
int
jns
cwtl
int3
sbb
dec
fadd
in
inc
out
pop
jno
inc
ret
mov
adc
popa
out
add
pushw
dec
inc
jmp
dec
add
aad
jbe
and
xor
sub
and
jp
mov
icebp
inc
or
xor
shrl
pop
inc
or
and
xor
mov
adcl
fsubrl
cmpsl
dec
imul
jp
decb
inc
cmpl
push
push
stc
das
inc
shl
mov
std
adc
dec
and
gs
ds
aad
cmp
or
adc
sub
pop
dec
hlt
jae
xor
dec
push
shll
cmp
push
cmpsb
addr16
cmp
jbe
dec
xor
jae
cld
cmp
rolb
adc
sbb
sbb
sbb
out
pop
iret
cmc
jns
pop
aad
cmp
imul
fs
mov
and
movsl
aad
test
inc
pushf
repz
xor
ja
xchg
xor
icebp
repz
out
add
adc
cmp
xor
icebp
add
sbb
sti
jge
or
shl
xor
aad
ja
repz
dec
xor
mov
mov
cmpsb
pop
fs
or
rol
jns
movsl
or
mov
scas
fs
push
add
ficompl
les
in
mov
cmp
cmc
mov
mov
popf
in
arpl
jle
test
push
mov
fs
push
mov
xchg
sbb
sub
and
cmp
mull
icebp
adc
jg
jbe
jb,pt
mov
adc
repz
ret
in
testl
jl
jne
inc
cltd
mov
testb
xor
ret
bound
rol
loope
and
inc
aam
ss
jbe
or
ret
add
adc
and
inc
pop
loopne
sub
cli
fisubrs
popa
cmp
pop
xlat
nop
ja
psubsw
push
push
and
ret
xor
xor
push
cmc
lahf
mov
sub
mov
inc
jl
mov
call
insl
in
dec
aad
dec
loopne
insl
mov
imul
adc
push
push
jns
arpl
test
or
out
pushf
pop
xor
sub
add
dec
or
enter
faddl
cmpsb
push
shrb
sub
xchg
dec
loope,pt
mov
cwtl
in
nop
movsb
xor
dec
xchg
sub
imul
sti
xchg
xlat
lea
cmp
and
arpl
fsubs
push
inc
js
sub
scas
repnz
and
xchg
lret
ljmp
loope
pop
movsb
xor
sbb
push
cmpsb
scas
aaa
push
sub
and
stc
jbe
mov
test
inc
push
adc
out
jnp
pop
daa
out
sbb
loope
scas
decb
pushf
sub
movsb
pop
mov
sbb
pop
sub
push
xchg
push
cmp
adc
jae
xor
xchg
push
aam
inc
inc
lahf
loop
test
jge
in
enter
mov
cwtl
cld
jb
mov
cmc
jns
push
xor
mov
dec
inc
dec
and
mov
je
sbb
sbb
or
movsb
adc
push
jns
idivl
jp
popf
andb
inc
jns
icebp
inc
pop
test
shrl
sub
bound
pop
dec
arpl
lods
imul
xorb
and
ldmxcsr
cs
enter
add
add
xchg
add
into
lds
mov
lods
jb
adc
mov
jb
aaa
es
pop
call
pusha
in
pop
xor
push
cli
enter
out
pop
push
loopne
fisubl
xchg
inc
enter
xchg
pop
adc
std
mov
lret
adc
add
addl
xor
lahf
adc
pop
frstor
stos
iret
sbb
adc
lods
idivb
add
push
aam
xchg
inc
mov
andb
test
scas
loope
js
test
mov
push
cli
push
xor
mov
js
mov
push
out
xchg
mov
cmp
xor
fistps
ficoms
xchg
sbb
imul
repz
push
inc
in
fcoms
hlt
add
inc
sbb
imul
push
sub
test
test
jns
je
cmpsl
in
sar
push
mov
pop
dec
mov
movsb
insl
cld
cltd
bound
testb
mov
and
pop
jae
ret
sub
or
mov
mov
lods
nop
dec
iret
ret
scas
ficoms
int
pop
pushf
loopne
push
inc
outsb
mov
cmp
imul
fldenv
incb
rorb
out
sbb
and
jmp
jmp
push
dec
pop
bound
popa
test
xchg
js
outsb
push
sub
dec
xchg
pushf
cli
lahf
cmp
push
cs
xlat
xor
xchg
test
pusha
jb
cmp
shll
les
pusha
movsl
mov
and
popf
inc
or
testb
fsubp
and
mov
cmp
inc
xchg
add
mov
sbb
pop
inc
mov
scas
scas
das
scas
xchg
andb
jne
jb
bnd
lcall
inc
stos
push
adc
xor
ja
sub
scas
lds
push
cli
imul
add
push
add
mov
push
hlt
push
pop
loope
shl
jno
movsl
ljmp
pop
aad
inc
imul
lds
movsl
or
aas
nop
rolb
sbb
mov
addr16
das
insl
sahf
push
fistpl
inc
push
mov
sti
js
push
sub
aaa
mov
push
xchg
push
mull
dec
mov
das
lahf
push
int3
or
lahf
add
push
test
scas
stos
fists
int
xchg
mov
jb
mov
aaa
mov
adc
or
stos
gs
add
stos
mov
mov
out
sub
add
push
push
push
pushw
addl
cs
mov
icebp
mov
sub
jae
mov
and
ficompl
subb
inc
cwtl
jmp
pop
bound
orl
lret
cmpb
sti
dec
sbb
mov
dec
push
pushf
mov
ja
jge
pop
or
cmc
xor
nop
nop
stc
dec
lock
inc
hlt
mov
cld
fxch
inc
jns
out
mov
not
mov
mov
repz
adc
jmp
add
ja
pop
movsb
pop
loope
sub
int
add
es
dec
orb
push
insl
xorb
dec
repz
lret
fwait
les
mov
orl
pop
ficoml
lds
mov
pop
mov
mov
mov
inc
and
mov
loopne
lock
xor
stos
and
jno
pushf
movsl
bound
loopne
addb
repz
lods
pop
lret
dec
in
aad
mov
mov
mov
stos
jmp
xchg
in
jbe
shlb
jno
ljmp
lods
int
das
inc
outsl
cs
xor
hlt
jg
pop
movb
dec
int3
mov
fmuls
andb
push
int3
adc
int3
fs
js
pop
cmc
jp
jg
test
shlb
stc
int
inc
rorb
in
shrl
cmc
cmp
into
enter
add
and
fwait
xchg
mov
mov
xchg
mov
adc
aam
or
pop
fdivrs
inc
push
jge
cld
dec
lret
fnstsw
add
fistl
jnp
imul
lods
mov
popa
aad
xlat
cmpsl
jl
sub
or
cwtl
mov
mov
out
cld
xchg
cmpb
mov
cli
outsl
mov
pushl
sub
inc
psrld
dec
enter
js
mov
iret
mov
ljmp
push
in
sub
pop
aad
or
std
mov
mov
and
add
pop
mov
fsub
cmp
cmp
pop
shrb
sub
xor
sub
stc
pop
mov
jl
test
imul
xchg
leave
jo
aaa
addr16
lea
mov
rorl
adc
jp
mov
subl
sub
xchg
fstpl
jmp
lret
jecxz
add
sbb
adc
mov
cmc
xor
ljmp
xchg
fdivr
mov
xor
mov
or
mov
mov
jg
cs
adcb
fcoms
nop
call
push
lret
jo
xchg
dec
lret
inc
daa
dec
xor
lcall
adc
test
push
hlt
jo
test
cld
popf
out
roll
jg
mov
aam
sub
mov
push
inc
mov
push
in
mov
cli
lahf
jle
dec
enter
fucomip
xchg
sbb
mov
data16
std
mov
dec
xchg
pop
loopne
loopne
jno
adc
mov
test
and
cmpsl
dec
inc
or
jle
or
movsb
pop
insl
cmp
test
popa
jp
or
inc
push
and
add
fs
push
push
pusha
xchg
push
clc
aad
mov
and
xor
jne
jae
pop
adc
dec
mov
mov
push
movsb
jnp
add
ss
icebp
testb
in
cltd
outsb
xchg
cmp
ljmp
push
lahf
fwait
xor
lea
push
out
data16
fwait
adc
dec
push
hlt
lods
or
les
xor
push
push
inc
outsb
dec
and
dec
jne
cltd
pop
cmp
adc
jbe
inc
aad
fldenv
add
repnz
push
popl
jge
push
js
add
shlb
sbb
fsubrs
out
repz
outsl
lret
movsl
fcoms
xchg
into
in
ror
dec
dec
popa
add
cli
dec
and
mov
movhlps
pop
arpl
pusha
enter
shlb
ret
es
sub
leave
xor
stos
movzbl
adc
xchg
insl
fsin
dec
xchg
cmp
inc
js
adc
add
jnp
repz
cmpsl
mov
jne
pop
xchg
add
adcl
gs
jbe
and
cmp
add
stos
repz
bound
cmp
add
sub
lock
jmp
xchg
pop
in
fsubr
xorl
push
pop
or
lods
shrb
arpl
iret
xchg
xchg
lods
dec
pop
pop
test
push
iret
subb
pop
xchg
mov
adc
cmp
or
lret
mov
loop
test
cld
enter
ljmp
push
mov
xchg
pop
push
mov
or
daa
call
and
inc
jne
xor
pop
data16
test
pusha
rorb
repnz
subl
xchg
shll
mov
loopne
adc
cmp
fmuls
xor
jmp
or
inc
push
in
sar
jmp
bound
cmc
insb
cwtl
mov
stos
ficoms
sbb
aaa
fstl
nop
sbb
fistpll
in
sti
mov
xchg
fists
jp
sub
nop
outsl
jmp
loop
insb
cmpsl
das
icebp
aad
loop
sbbb
data16
or
ret
cwtl
or
mov
xchg
add
pop
xchg
cmp
sub
arpl
xchg
xor
iret
icebp
cmp
add
lods
aas
push
xlat
dec
pop
sbb
jmp
mov
add
push
movsb
popf
mov
push
push
sbb
and
fcmovnb
dec
test
push
xor
jmp
cld
in
xchg
mov
mov
mov
fdivr
scas
mov
sub
test
push
gs
mov
mov
cmovs
scas
test
dec
cmp
pop
sub
es
xchg
xchg
out
ror
cmpsb
mov
mov
jb
cwtl
outsb
mov
and
pusha
jmp
fldl
and
loope
lret
dec
loope
ret
movsb
xchg
aaa
pop
adc
sbb
ja
cltd
mov
mov
das
inc
std
cmpl
loop
movsb
inc
cltd
pop
lods
xchg
inc
repz
into
push
fdiv
imul
xor
push
loop
pop
leave
or
mov
xor
neg
xchg
xchg
sahf
and
imul
mov
sbb
test
mov
adc
sbb
mov
flds
push
sbb
cmc
jg
xorb
xchg
stc
dec
dec
cld
imul
stos
lret
xchg
jns
push
adc
mov
or
push
jp
mov
clc
xchg
sahf
ljmp
out
in
idivb
inc
mov
sub
inc
sbb
int3
orb
mov
ror
sbbb
sbb
mov
fadd
cmp
xchg
cs
pop
inc
arpl
mov
cmc
in
mov
cmp
ret
stc
movsl
jl
je
add
outsb
arpl
cs
jns
sbb
cmp
jecxz
jle
ret
pop
mov
mov
add
mov
mov
add
test
mov
ja
jno
push
add
fistl
pop
add
into
push
jnp
mov
xchg
test
rorb
push
sar
leave
pop
insl
xor
jle
ss
insb
xor
sbb
jbe
push
pushf
hlt
sbb
lahf
sub
test
cmp
push
cmp
dec
lods
push
mov
jp
xchg
jo
or
mov
push
pop
fcmove
adc
out
dec
push
jl
mov
imul
les
add
sub
lret
dec
and
add
push
pop
push
ss
test
popa
int
out
add
dec
sahf
cmp
stos
add
stos
shr
inc
fs
fdivl
sahf
insl
pop
xchg
stos
movsl
mov
cmp
hlt
arpl
push
xchg
sar
movsb
int3
es
jbe
mov
pop
sub
inc
or
xor
inc
lret
lcall
test
lea
rorl
ss
jnp
pop
hlt
lock
mov
jl
cmp
clc
fidivs
push
sub
dec
fsubs
mov
push
rcr
pop
add
movsb
xor
fnstenv
stos
push
or
and
inc
ljmp
or
push
lahf
push
test
jle
mov
aam
ret
or
mov
pop
daa
out
cmp
dec
jmp
adc
cmp
cmp
push
adc
cmpsl
scas
cltd
das
cmp
xchg
sub
dec
jnp
and
rcrb
jnp
stc
xchg
and
push
les
mov
in
out
xchg
xchg
pop
dec
add
ja
cwtl
sub
shl
sub
imul
ss
adc
mov
or
xchg
and
setbe
or
add
in
movsb
cli
loop
cwtl
movsl
rcrb
das
loop
mov
mov
or
mov
loope
sbb
lods
push
fcmovnu
into
pop
aaa
pop
push
movsb
inc
xchg
pop
test
cmpsb
mov
sub
add
je
dec
mov
xor
jno
divl
xor
sti
mov
add
test
push
mov
pusha
arpl
add
xchg
or
sub
pop
xchg
bound
in
prefetch
xlat
sarl
cmp
add
daa
iret
mov
insb
adc
jne
sub
inc
movsl
fsub
fs
mov
xor
mov
dec
or
stos
or
sti
imul
movsl
and
inc
xor
cltd
rcrl
rorb
xor
mov
jge
int
jnp
or
add
or
adc
push
mov
adc
mov
pop
rep
je
mov
push
fsubs
lock
adc
xchg
into
pop
mov
popf
mov
loop
mov
mov
cs
out
out
outsb
out
mov
js
inc
mov
or
lea
cmpsb
and
cltd
in
cld
enter
mov
outsb
cmp
ret
daa
pop
jecxz
mov
ficompl
sbb
sub
or
pushf
cs
or
xor
shrb
movsl
mov
sarb
mov
and
frstor
dec
cmp
sahf
fwait
push
out
adc
out
daa
adc
fistpl
stos
xor
js
mov
stc
push
adc
fs
mov
pop
shll
pop
inc
xor
int3
adc
scas
lock
push
inc
scas
add
cld
call
sahf
ds
mov
adc
jp
push
cmp
pop
movsb
and
fsub
jl
push
ja
sub
sub
xor
loope
jle
mov
bound
gs
outsb
jl
scas
insl
jbe
std
push
iret
movsb
push
inc
mov
mov
mov
outsl
dec
shll
in
adc
repz
and
int
jle
dec
mov
add
or
sub
and
sbbb
adc
in
cld
xor
decl
imul
nop
gs
mov
dec
js
xor
sub
loop
pop
jle
mov
jae
pop
das
test
stc
out
xchg
xchg
add
mov
mov
in
stc
loopne
add
cmpl
fstl
sbb
jle
ss
dec
mov
and
icebp
adc
push
sub
les
mov
push
daa
adc
sub
ret
mov
push
mov
and
mov
or
sub
repnz
mov
es
test
cmp
mov
xchg
adc
jno
shll
shll
inc
in
das
xchg
pop
pop
mov
test
xor
cmp
mov
add
inc
lret
pop
js
and
mov
push
popf
adc
addb
sbb
lods
and
xor
mov
and
jbe
dec
test
or
xchg
or
insl
mov
cmp
mov
clc
cmp
inc
jg
movsl
or
xor
flds
cli
mov
jl
sbb
sbb
add
outsl
mov
xchg
pop
mov
inc
bound
ret
add
or
push
and
jnp
xchg
mov
pop
out
xchg
cmp
loopne
or
pushf
pop
mov
aaa
testl
adc
jo
inc
and
xor
and
inc
add
dec
insl
in
pop
sub
lea
lahf
sub
shl
and
call
andb
ljmp
pop
fimull
ret
jo
or
add
mov
sub
mov
jp
fnstsw
sbb
cs
jg
sbb
je
loop
dec
jbe
cmc
jle
push
xor
sub
dec
jp
mov
or
int
or
xlat
xchg
test
xor
jmp
lret
leave
pop
pop
jecxz
pop
mov
ss
int3
fcomip
pushf
nop
and
cmp
lret
dec
int
inc
testl
mov
jae
xchg
ljmp
in
mov
mov
pop
xor
mov
dec
dec
rcrb
jno
out
mov
cmc
cmpsl
mov
dec
iret
sbb
cmpsl
ja
and
in
jl
xlat
mov
icebp
gs
data16
aad
out
and
jecxz
movntq
out
cmc
lods
push
sbb
cmp
push
stos
mov
scas
jg
mov
xor
jg
inc
pop
xchg
cmpsl
adc
leave
mov
or
leave
push
mov
popa
mov
call
add
pushf
pop
cmp
fs
mov
pop
aam
outsb
cwtl
jae
lock
mov
std
bound
lods
ds
xchg
out
and
jbe
add
add
mov
push
stos
or
or
arpl
arpl
inc
in
daa
ret
xchg
xorb
dec
subl
sti
mov
push
mov
and
or
mov
adc
push
shrl
ja
mov
adc
stos
dec
sbb
sub
mull
adc
adc
sub
adc
cs
mov
test
pop
hlt
out
inc
mov
jg
orl
inc
xchg
rcrl
movsb
pop
lods
or
adc
mov
hlt
or
cmp
mov
enter
mov
lock
divb
push
push
shrl
push
xchg
enter
adc
jns
pop
dec
sahf
fs
xchg
add
in
cmpsl
cltd
push
push
nop
and
sub
inc
in
fwait
test
dec
mov
push
test
jecxz
xchg
std
mov
int
or
jae
test
out
test
or
mov
subl
push
mov
int3
fildll
test
outsb
push
stc
xor
sbb
incb
fs
adc
sbb
mov
mov
iret
fwait
or
mov
scas
add
add
out
lock
xchg
inc
into
mov
jnp
push
mov
out
mov
fwait
add
imul
mov
fwait
xor
and
inc
add
inc
mov
adc
daa
mov
mov
cmpsl
pop
add
movsb
lcall
loopne
les
sbb
inc
cmp
ret
xor
lret
jecxz
jmp
in
stc
ss
jb
sub
push
mov
xor
outsb
and
movsl
int
sub
adc
or
mov
pop
outsb
imul
cmc
jo
adc
out
fldz
pusha
call
gs
dec
push
gs
imul
shrb
cs
or
cld
cwtl
adc
and
int
mov
or
popa
loopne
xchg
das
jle
ja
xor
xor
fdivp
pop
cmp
or
push
test
xor
push
scas
xchg
icebp
xor
out
push
in
lds
xchg
sbb
and
mov
arpl
scas
out
jns
and
push
imul
push
iret
xchg
pop
add
pop
xor
jg
xchg
in
cs
pop
jge
sub
push
aaa
mov
dec
addr16
jmp
sbb
sub
je
sbb
ffree
cs
stos
data16
push
dec
cmp
lods
and
xor
das
inc
sub
loop
xor
push
fldl
in
iret
fiadds
jno
mov
xor
sbb
adc
mov
lahf
je
jae
and
enter
aas
jb
add
xlat
sbb
add
pop
mov
pop
dec
pop
sahf
fs
in
lret
imul
jp
test
jecxz
dec
iret
es
mov
sti
ret
xchg
pop
ss
out
pop
jmp
shrl
leave
rolb
xor
pop
scas
sbb
mov
stos
daa
push
dec
add
jle
mov
xchg
stc
fiadds
enter
in
popf
sbb
and
add
xlat
hlt
cmp
test
pusha
adc
cmp
or
icebp
fnstenv
js
jno
fs
call
inc
dec
mov
jb
test
cmc
pop
fcmovnbe
outsb
xchg
mov
hlt
push
mov
movsb
or
mov
rol
mov
sbb
mov
andb
out
push
notb
jg
fstpl
jmp
testb
addr16
mov
push
or
stos
adc
sbb
xor
jae
pop
pop
shll
ja
int3
aam
daa
pop
sub
ss
cld
imul
pop
sub
sbb
mov
mov
or
pop
mov
addr16
push
stos
daa
mov
pop
je
inc
insl
iret
jg
ljmp
nop
sar
lds
repnz
pop
lock
or
jp
addb
and
push
add
test
js
out
push
jo
clc
xchg
pop
in
scas
jge
adc
pop
pushf
icebp
shrb
leave
call
inc
lcall
push
or
cmpsb
add
fwait
dec
inc
or
pushf
mov
inc
lcall
push
std
jbe
scas
popa
jne
loope
xchg
dec
and
inc
pop
stc
lods
jle
and
xlat
xor
insb
pop
shufps
jo
jge
fs
push
movsl
push
fcomp
cmp
mov
or
insb
adc
push
push
pop
js
inc
adc
mov
jae
icebp
loop
lea
xor
cmp
cmpsb
mov
pop
in
sti
xchg
dec
inc
scas
mov
cvtps2pd
out
cs
xchg
adc
inc
rorl
stos
jo
adcl
mov
inc
pusha
inc
pop
and
out
mov
fwait
jecxz
or
push
cmp
and
loope
and
xor
arpl
add
push
add
jo
xor
mov
or
test
andl
sti
pop
inc
push
test
cmc
fs
cmpxchg
out
int3
mov
stos
sub
cmc
stc
mov
clc
lds
arpl
mov
pop
cmp
add
jp
adc
fcmovnbe
dec
xor
lods
and
cld
ret
push
fs
int3
ret
ja
loope
lret
lock
xor
lahf
mov
xor
jl
lods
movsl
les
or
out
push
mov
in
mov
or
lcall
mov
insb
xlat
mov
pop
add
jnp
mov
jg
adcb
jns
xchg
mov
xchg
and
fs
adc
out
pop
das
into
add
jnp
inc
mov
sub
clc
push
stos
hlt
icebp
jb
jb
rcrb
aam
das
mov
cmp
add
fsubs
or
inc
pop
mov
and
jno
push
jmp
sbb
mov
xlat
in
mov
jmp
mov
fistps
xlat
xchg
dec
je
cld
aaa
adc
movsb
rolb
test
shlb
push
fsubl
add
iret
sub
jne
jmp
les
cmp
testl
aas
xchg
pop
leave
jmp
and
and
std
cs
sub
rcrl
mov
test
repnz
xchg
imulb
hlt
adc
dec
inc
cld
xchg
mov
fidivrl
push
lret
jne
xchg
mov
mov
jge
nop
ds
inc
sub
int3
lods
lock
fmull
sub
pmaxub
xchg
pop
lods
sbb
out
mov
loope
cmp
jno
mov
push
iret
sarb
dec
out
orl
lea
pop
lret
fcoml
dec
sub
fwait
mov
and
xchg
push
aad
repnz
adc
ret
cld
cwtl
mov
sub
sar
sub
test
sbb
ja
dec
jo
add
add
sub
out
pushf
sbb
lret
pop
fstpt
cs
sbb
sbb
pop
les
jmp
pop
out
pop
inc
sub
adc
in
dec
imul
ds
out
arpl
fucomp
call
mov
pop
leave
add
and
add
dec
bound
pop
lods
mov
loopne
or
inc
cltd
and
test
fsubs
das
sub
mov
lea
cmp
jecxz
leave
cld
dec
xor
test
push
mov
xchg
loop
lahf
scas
mov
cmp
icebp
pop
ficoml
sbb
stos
mov
lret
and
jo
inc
bnd
sbb
mov
lds
das
jns
mov
es
gs
lea
dec
stos
sbb
cmp
add
xor
jl
iret
roll
aam
pop
sbb
dec
jae
cmpsl
push
hlt
mov
adc
dec
sub
push
dec
pop
pushf
xorb
mov
ror
hlt
inc
cmp
shll
test
push
jae
jno
pop
mov
sar
and
xor
mov
or
aam
lods
in
std
mov
adc
cld
scas
push
lret
adc
not
fcomp
jmp
popa
cmp
testl
jnp
aaa
ja
sbb
cmp
ds
int3
jne
cmp
or
adc
test
mov
inc
mov
testl
iret
aam
mov
inc
push
ficoml
jo
jae
xor
pop
push
aam
int
mov
sbb
arpl
xor
sbb
inc
outsl
mov
mov
mov
or
lds
imul
inc
pusha
adc
cmpl
and
pop
ss
mov
insb
hlt
inc
dec
xchg
dec
inc
lea
jp
pop
stos
or
xlat
push
bound
mov
dec
arpl
sub
aam
push
dec
or
or
aas
cmp
push
dec
mov
dec
ret
jb
cmpsl
mov
addl
push
mov
push
mov
mov
and
jg
insl
aad
push
out
adc
jmp
int
les
xor
jnp
adc
aad
jo
add
pop
in
mov
sub
or
push
mov
ds
jge
repz
dec
movsl
or
lcall
shll
testb
fdivl
lahf
movsl
ret
adc
roll
xchg
out
lods
out
sbb
fldcw
mul
push
adc
pop
or
mov
nop
mov
adc
mov
aas
popf
add
jmp
inc
imul
shrl
jne
adc
lods
push
scas
inc
sbb
xchg
jne
jle
add
pop
ja
push
mov
cmp
add
icebp
out
adc
mov
mov
bound
mull
cmp
outsb
int
dec
insb
adc
rclb
imul
xor
dec
inc
sti
pop
mov
or
ret
in
loopne
mov
stc
mov
cmc
push
sub
or
mov
bound
test
cmpsl
cmpsb
mov
dec
rol
xor
dec
xor
ret
push
jo
lret
repnz
add
ret
cmpsl
mov
and
pop
movsl
lcall
jle
or
sbb
mov
add
rorb
out
add
cs
push
mov
push
dec
lods
push
gs
sbb
pusha
cmpsl
pop
mov
xchg
mov
push
pushf
mov
test
xor
or
fstpl
pop
ret
loope
test
in
sub
test
xor
mov
inc
jle
das
fcmovnb
inc
pop
aaa
fld
pop
xchg
sub
xchg
mov
and
add
add
adc
gs
mov
enter
fdivs
ret
mov
mov
pushf
ss
cmpb
mov
xchg
pushf
or
jmp
dec
pusha
out
mov
int3
dec
pop
pop
sub
sub
add
and
pop
or
xchg
fwait
inc
cmpsb
or
lods
xchg
in
ja
sbb
jb
inc
movsb
xor
rcll
cli
ret
jge
in
mov
scas
jnp
mov
cmp
pop
sub
cli
xchg
adc
out
std
das
xchg
in
sarl
xchg
inc
sbb
sti
sbb
jo
mov
add
repnz
aam
aaa
icebp
in
pop
inc
mov
xchg
mov
mov
push
sbb
inc
ret
rorl
sbb
mov
out
popa
inc
xor
add
jnp
in
test
sahf
adc
repz
push
out
jmp
jecxz
enter
jns
vpshuflw
jp
jb
mov
adc
jg
add
sbb
cmpsb
jb
ficoml
pop
xchg
dec
dec
pop
xchg
pop
adc
stos
push
in
mov
sahf
sahf
jno
mov
jae
add
cli
int3
cmpsl
jg
test
pop
repz
sub
push
mov
cltd
fwait
sub
addr16
cwtl
mov
push
loope
mov
lahf
insl
and
arpl
jle
daa
xchg
inc
jae
or
aas
movsl
mov
cld
add
or
xchg
mov
cmp
add
mov
cmp
and
cmc
pushf
mov
ficoml
jae
jo
or
sub
in
mov
mov
dec
mov
sti
flds
imul
xchg
xchg
push
jnp
push
and
mov
mov
popf
sbb
or
mov
data16
and
lods
ret
jb
pop
mov
pop
fidivl
inc
mov
cmp
int
lret
insb
jne
icebp
ret
sub
and
inc
lock
add
or
jo
aas
push
call
andb
stc
adc
in
pop
push
int3
and
js
sbbl
cs
cwtl
ret
pop
stc
and
pop
or
out
xor
movb
adc
xchg
lret
clc
loop
dec
mov
adc
lret
jbe
mov
imul
sbb
inc
psraw
jl
pop
iret
ret
jbe
sub
xchg
test
or
mov
xor
add
sub
or
lock
out
outsl
outsb
scas
mov
lahf
test
leave
cli
fimull
cmp
xchg
mov
shrb
pop
arpl
in
mov
sbb
insb
jmp
cmp
pop
jae
roll
and
das
xor
add
popa
mov
arpl
rolb
rcrl
dec
test
test
in
pop
test
and
fwait
scas
xor
movsb
repnz
pop
fsubrl
sub
lret
mov
jg
xchg
mov
outsb
adc
dec
mov
push
cmpsl
and
sbb
inc
scas
lea
out
sarl
imul
sbb
push
clc
jl
mov
mov
sbbl
dec
push
xor
xorb
xor
jle
roll
hlt
sbb
inc
fnstsw
jbe
out
adc
sbb
je
add
push
dec
jmp
fstps
cs
mov
test
test
cli
jbe
repnz
sub
sti
adc
cmp
jmp
jge
stc
mov
shr
rorl
shll
add
icebp
xor
dec
and
ljmp
push
mov
aaa
cltd
push
scas
shl
mov
push
addr16
push
insb
out
stos
jb
movsb
mov
shll
pop
movsl
inc
ljmp
adc
addl
in
or
push
in
fnstenv
rcll
int3
xlat
push
xchg
sbb
mov
pushf
cmp
in
mov
mov
insl
lahf
out
mov
and
in
das
jno
adcb
jecxz
mov
inc
std
imul
shr
jecxz
stc
jo
std
add
or
mul
jge
pop
jp
aam
jp
jbe
mov
mov
cmp
int3
pop
lock
mov
dec
add
cmc
cmp
fbld
adc
popf
movsb
imul
push
push
xchg
loop
ficoml
in
scas
sbb
std
xchg
or
outsl
not
jo
xorb
xchg
sbb
xchg
mov
mov
mov
dec
or
sbb
xor
arpl
sub
das
int
adc
push
jo
inc
hlt
iret
test
inc
sti
movsb
xchg
rcll
cmp
sbb
and
imul
mov
pop
dec
pop
push
pop
xor
es
pop
jecxz
dec
notb
cmp
add
cmp
xchg
enter
outsl
cmp
lods
out
xchg
xor
rcll
js
out
jp
fbld
xchg
dec
add
add
mov
add
add
or
out
sahf
mov
adc
lea
mov
mov
or
insb
dec
inc
adc
mov
inc
loop
not
mov
cmp
stc
arpl
daa
ret
pop
mov
jnp
dec
fs
jnp
fisubl
int3
outsb
and
cmp
mov
adc
pop
push
insb
sub
pusha
mov
js
bound
test
stos
add
fwait
popl
arpl
jns
enter
loopne
repnz
pop
sub
sub
popl
sub
std
pusha
pop
xchg
pop
lret
xchg
cmovp
sub
aad
or
adc
movsb
loopne
insl
pop
jmp
push
test
jnp
adc
adc
jg
fmul
cmp
mov
call
xchg
xchg
icebp
into
jbe
lret
mov
jne
mov
push
mov
xlat
jo
lahf
fsub
pop
rcrl
mov
and
dec
lretw
sub
or
ljmp
mov
adc
enter
pop
cli
or
jge
movb
sbb
sbb
lea
cld
fstps
sub
pushf
sub
mov
mov
cs
cmp
fsts
repnz
iret
mov
outsb
fsubl
fwait
loope
xor
icebp
and
mov
int3
jnp
popf
mov
mov
insl
cmp
adc
mov
and
cli
dec
call
jnp
mov
jp
mov
les
and
mull
push
adc
nop
sub
pop
add
popf
mov
xor
push
cmpsb
add
mov
fimull
add
sar
xchg
scas
and
fstpl
mov
dec
fisubl
scas
and
mov
xchg
and
lahf
cmp
outsl
push
out
cld
mov
jns
nop
popf
ja
outsl
loope
lahf
dec
jae
jecxz
dec
outsl
mov
popf
adc
dec
std
sub
xchg
rcrb
lret
pop
sub
fsubl
cmp
cmp
mov
arpl
sub
sbb
in
push
add
pushf
lss
mov
arpl
mov
xchg
aad
add
enter
or
or
out
loop
loope
mov
add
dec
mov
adc
lcall
test
fidivrl
mov
push
or
inc
or
or
and
mov
pushl
lea
ds
test
mov
or
iret
ret
mov
insb
cmp
push
xchg
or
int3
test
lahf
cmpsl
repnz
imul
pop
jb
and
dec
mov
fs
cmp
xchg
inc
add
out
lret
fmull
adc
mov
repnz
inc
mov
aam
cmp
jbe
add
push
inc
into
xor
cmp
ja
mov
push
fwait
pop
mov
into
adc
sahf
adc
lahf
dec
xchg
lods
bound
loope
out
push
push
popa
test
add
sti
test
push
cmpsl
push
push
sub
imul
aam
xor
push
xor
loope
mov
sub
test
mov
cmp
cli
dec
test
push
shr
lods
xorl
cli
sbb
pop
sbb
loope
stos
lret
repnz
es
js
jge
jl
add
sbb
inc
dec
ret
mov
xchg
ror
insb
dec
test
and
push
xor
jns
sub
pop
fidivrl
rcl
pop
lahf
das
insb
pop
das
push
push
fbstp
inc
lds
inc
lahf
iret
mov
adc
sti
lcall
cmpsb
imul
inc
inc
add
add
mov
pop
das
jl
and
hlt
dec
mov
cltd
lods
fwait
push
xor
inc
mov
mov
adc
addl
popa
inc
ds
inc
inc
jb
mov
lds
dec
xchg
ret
inc
sub
adc
fwait
test
mov
fdivr
fists
xchg
es
movsb
test
das
dec
pop
rorl
pop
xchg
insl
mov
sahf
push
jns
ja
push
pop
cli
jl
mov
rorl
movsl
popa
cs
addr16
in
int
push
data16
test
cmp
inc
jmp
repz
mov
shll
ror
xor
repz
and
push
enter
add
or
push
cmpl
mov
fmull
push
jmp
cmp
test
mov
mov
and
dec
and
inc
xchg
leave
adc
inc
cli
sbb
lock
stc
cmp
jecxz
mov
jo
adc
rcrb
and
sbb
pop
push
and
sbb
xor
movsl
dec
xchg
arpl
lea
movsb
cmpsb
fcompl
jl
cmp
and
xchg
jg
pop
test
dec
loopne
pop
mov
test
dec
popa
lea
ljmp
xchg
cwtl
les
xchg
dec
repz
cmp
loope
ret
icebp
and
insb
adc
jecxz
lcall
mov
add
jno
pop
incl
mov
data16
lret
xchg
mov
ds
ret
ret
cld
test
mov
xor
hlt
or
cmp
jo
and
loop
and
or
lea
out
arpl
jp
lods
dec
pusha
dec
inc
data16
sbb
dec
sbb
adc
mov
mov
scas
xlat
cmp
push
mov
mov
subl
or
dec
mov
inc
mov
xchg
loope
push
testl
hlt
mov
xor
stos
ds
dec
insl
nop
cld
test
hlt
sbb
mov
fisubl
pusha
arpl
adc
into
push
repz
int3
ffreep
fucomip
repz
sti
push
test
jecxz
sbb
xchg
test
test
jmp
aad
out
mov
call
xchg
stc
sbb
pop
ret
ljmp
pop
sar
enter
in
cmpsl
mov
ror
cltd
xchg
mov
ret
and
hlt
nopl
mov
leave
sar
lods
mov
adc
dec
add
mov
mov
push
leave
leave
ret
in
testl
test
lcall
fidivs
xchg
dec
sub
and
bound
push
mov
repz
std
or
jbe
pop
adc
sub
xchg
clc
adc
mov
xor
hlt
or
add
bndstx
add
cmp
sbb
mov
jge
sbb
and
fisttpl
cmp
mov
push
repnz
xlat
ja
mov
movsb
and
xor
sub
dec
jae
mov
or
cmc
jo
mov
in
or
or
loop
inc
stc
add
mov
dec
shlb
mov
push
jae
insb
fcmovnb
cld
pop
mov
out
shll
das
movsl
dec
xor
mov
inc
sbb
sbb
mov
push
mov
mov
lea
enter
xchg
and
movsb
mov
stc
insl
jbe
jecxz
dec
push
popf
push
idiv
pushf
movl
loopne
mov
loopne
fdivrs
fidivrl
repnz
popf
daa
mov
add
push
mov
xlat
adc
mov
mov
mov
imul
mov
outsb
je
daa
pop
insl
dec
or
shr
mov
mov
rcl
popa
mov
jge
pop
sub
push
add
pop
dec
mov
stc
inc
add
out
mov
and
adc
dec
xadd
arpl
mov
push
ret
or
dec
pusha
stos
inc
jmp
or
rcrb
inc
int
cmpsl
mov
and
fcmovu
iret
arpl
cmp
mov
sbb
arpl
imul
mov
test
imul
push
ljmp
push
or
sub
js
xchg
mov
mov
pushf
mov
xchg
add
sbb
adc
cltd
push
movsb
out
pusha
scas
mov
aaa
cltd
out
ret
lret
pop
pop
lods
out
add
inc
cmpl
jle
and
in
mov
mov
jbe
addr16
aas
mov
lcall
mov
scas
test
cmp
inc
inc
fnstcw
pop
outsl
push
out
pushf
clc
les
jl
js
or
addr16
mov
mov
jl
mov
pop
or
push
lcall
mov
inc
add
push
xchg
mov
and
rclb
cmpl
imul
dec
sahf
mov
test
outsl
imul
pop
sbb
and
stos
insb
cmp
mov
fcomp
cmp
cmpsl
add
mov
push
push
in
sti
mov
adc
and
dec
je
addr16
imul
xor
loop
jbe
jne
add
lea
pop
cmp
in
pop
mov
lret
inc
test
test
and
cmp
ficoms
mov
loopne
mov
mov
out
mov
je
inc
cmp
pop
sub
enter
clc
dec
dec
popa
cltd
out
jb
pusha
fstpt
mov
loopne
test
fcoms
jmp
pop
sarb
xor
mov
pop
push
sbb
mov
add
testb
test
call
xchg
jae
dec
xor
push
xor
scas
popa
adc
or
cmp
or
add
out
xchg
je
stc
cmpsl
out
aad
add
or
jl
mov
jmp
sbb
mov
lock
sub
fildll
sbb
movsb
sbb
and
adc
jns
and
push
jecxz
in
pop
andl
iret
outsb
xchg
dec
or
mov
cmp
pop
jg
lods
mov
roll
popf
cmpsb
fcmovnu
xchg
int3
cmp
inc
out
cltd
stc
test
push
imul
add
rclb
ljmp
push
lds
jns
ljmp
fwait
out
fstps
mov
mov
cmp
negl
je
lahf
insb
scas
movsl
in
xchg
mov
cltd
movsl
mov
addl
adc
inc
pop
lahf
mov
mov
in
aam
xor
insl
or
ss
xchg
repnz
add
xlat
jmp
rcll
xchg
stos
stos
loope
ds
ljmp
push
or
out
js
dec
shrd
fdivrl
mov
or
icebp
pop
mov
into
mov
popa
jo
stos
sbb
daa
add
repnz
cmp
out
xchg
pop
insl
gs
and
mov
iret
divb
bnd
push
fiadds
mov
sbb
aas
outsb
adc
inc
xchg
pop
cmp
sub
cmpsb
cmp
adcl
outsb
sub
arpl
addl
andb
aaa
dec
xor
cmpsl
aas
loopne
xchg
aaa
sbb
mov
clc
sub
pushf
mov
mov
pop
insb
jge
shlb
sub
out
iret
push
or
out
jmp
jbe
or
pushf
mov
data16
jnp
test
mov
lret
push
cmc
pop
icebp
mov
fdiv
xchg
shll
mov
push
push
sub
or
sahf
mov
out
out
subb
pop
mov
pop
mov
jg
bound
adc
inc
bound
cs
mov
or
in
sti
sahf
or
mov
jbe
dec
out
push
out
ror
jae
add
jmp
loope
push
xor
bound
divl
sub
loope
leave
fisubrl
push
dec
cmc
push
loop
shlb
sub
addl
fstl
aam
or
cmpsb
push
es
fidivs
inc
enter
mov
js
lret
jo
movsb
mulb
add
mov
repnz
jae
inc
mov
jae
rclb
adc
popa
xchg
dec
sub
std
sahf
aaa
cmp
sbb
push
cmpsb
arpl
mov
xchg
pop
outsb
jns
push
lods
jo
mov
fwait
shrb
push
jg
jecxz
fstpt
jns
cltd
int3
and
adc
mov
addb
bound
cmpsl
movsb
scas
out
fistl
cmp
frstor
mov
cmp
or
aas
nop
scas
push
movsb
call
mov
jo
ja
stos
xchg
mov
sub
cmpsl
jmp
push
addb
jns
ljmp
xlat
test
pop
int
out
pop
dec
popa
in
xchg
ss
sbb
mov
pop
das
es
push
jno
popf
inc
jle
addl
call
push
lahf
notl
sub
add
js
iret
mov
in
mov
xchg
pop
mov
xchg
and
add
inc
nop
cmp
xorl
inc
cmpsb
scas
stc
loope
and
mov
or
inc
mov
adc
adc
decb
sub
lret
jge
mull
lds
xchg
enter
gs
mov
test
fwait
jb
cmp
mov
mov
mov
les
sbb
pop
cmp
imul
lret
ror
imul
pop
jae
sbb
addr16
inc
shrb
mov
clc
ja
xlat
ficomps
bnd
dec
pop
or
sub
cld
inc
int
int
data16
ljmp
lods
stos
xchg
pop
jo
xor
pop
cwtl
iret
add
in
adc
cmp
pcmpgtw
or
fdivr
inc
adc
cmpsl
sahf
jns
push
or
mov
in
inc
mov
out
jno
stc
jo
adc
jl
mov
out
add
sub
cmpsb
js
testl
rolb
addr16
jae
cmp
add
insl
jle
push
push
ficompl
les
sbb
or
mov
and
lahf
cmp
aam
sub
inc
pop
pop
stos
lret
jmp
pop
mov
int
int3
and
int
ss
mov
cs
jle
mov
xchg
xor
pop
xlat
lods
push
loop
push
jle
movsb
fdiv
add
js
sub
sbb
xchg
fisttpll
inc
int3
mov
adc
test
sar
mov
dec
inc
insb
lcall
out
pop
shlb
notl
gs
push
pop
mov
add
cmc
cmp
adc
pop
xor
orl
adc
push
and
cli
popf
jns
push
dec
insl
cmp
push
mov
mov
mov
xchg
pop
adc
test
or
cmp
sbb
inc
push
xchg
fsts
imul
inc
in
mov
fcmovne
sahf
ja
repnz
mov
inc
jbe
push
lock
loope
int3
add
cmp
arpl
dec
xchg
push
push
push
cmp
das
jns
lcall
jnp
lods
andl
test
push
dec
or
jp
ret
mov
cmp
loopne
mov
movsb
test
mov
jle
push
xor
fisttpll
movl
shlb
testb
inc
stc
repnz
into
mov
mov
mov
gs
out
cld
pop
jns
dec
mov
cld
lret
jecxz
lods
dec
jmp
mov
jecxz
sub
mov
cmpsb
mov
mov
mov
lods
shrb
mov
fnstsw
and
sbb
lahf
dec
cmc
dec
push
ja
mov
lcall
lcall
cmp
ja
mov
in
dec
lcall
movsb
cmp
addr16
lea
cltd
movsb
or
add
outsb
cmp
sbb
jp
ljmp
sub
movb
mov
les
mov
and
sbb
mov
xor
mov
jno
pusha
outsl
rclb
nop
cmc
dec
call
cmp
insl
jp
cmc
in
mov
faddl
mov
inc
movsb
sub
inc
jne
je
dec
pop
mov
pop
movsb
arpl
mov
lahf
dec
cmpsl
cmp
push
fidivrl
outsb
cli
dec
loop
mov
mov
sbb
pop
fiadds
push
movsl
xor
sarl
test
cmp
sahf
loop
flds
mov
scas
or
movsl
and
dec
mov
add
add
je
xchg
inc
orb
add
jne
inc
test
xchg
cltd
shlb
rolb
xchg
push
dec
mov
jp
ljmp
mov
and
mov
sbb
jmp
js
pop
lret
push
pusha
bound
sbbb
xor
dec
fucomi
mov
int3
test
mov
pop
les
aas
xchg
mov
rorb
jno
test
fidivrl
sbb
mov
sti
xor
push
adc
and
and
sbb
aad
movsl
push
lret
fwait
mov
xlat
pushf
sub
sub
inc
add
or
fwait
pushf
xchg
sbb
out
mov
xchg
outsl
rorb
leave
mov
sub
sub
jae
mov
sub
test
mov
xchg
mov
or
fistl
fistl
push
xchg
adc
xchg
ficompl
je
push
jne
fs
negb
cwtl
rolb
mov
mov
movsb
jmp
inc
adc
cmp
xchg
lea
pop
mov
inc
mov
lods
mov
or
sbb
cmp
out
inc
fs
addr16
cmp
les
arpl
ret
jne
lret
out
popf
pop
cmp
sbb
popa
jecxz
imul
sahf
push
icebp
or
add
mov
cmp
mov
mov
sbb
ffreep
repz
js
adc
or
cli
mov
add
inc
pusha
fcmove
fwait
lods
test
je
subb
lcall
jae
mov
clc
jns
xchg
pop
inc
xchg
cld
and
sbb
ret
sti
jecxz
xlat
mov
test
shlb
cs
ljmp
pop
addb
dec
pop
decl
push
leave
cwtl
sahf
insl
dec
xor
sbbb
jmp
in
sub
push
jle
scas
and
rcr
ds
inc
cli
pop
mov
out
aaa
popa
dec
ret
inc
xchg
push
pop
popf
pop
add
int3
add
push
adc
fbstp
shll
sbb
push
leave
lret
fldl
bound
lahf
sbb
fistpl
fs
xchg
fsub
inc
ret
imul
testl
jns
sarl
lock
inc
xor
and
inc
mulb
xor
jge
in
rorl
sahf
push
lds
outsb
mov
int
push
mov
out
mov
mov
out
ss
mov
sbb
lret
out
xchg
das
inc
jp
xor
mov
mov
or
scas
jae
addl
movsb
clc
shr
push
xchg
push
mov
out
fbld
sub
enter
xchg
jge
xor
iret
scas
xchg
mov
outsl
adc
or
rcll
fisttpl
bound
data16
ficompl
cmpsb
dec
xchg
stc
leave
mov
shr
pop
add
rorl
jne
ja
ficompl
sbb
pop
cs
jecxz
push
push
outsb
out
cltd
mov
push
cmp
pop
daa
mov
fisubrl
in
pop
mov
cwtl
dec
aad
and
lss
mov
scas
jns
xchg
movsb
adc
fsubl
xchg
lea
push
jmp
lret
mov
negb
cmc
inc
lods
lret
in
jl
cmp
mov
push
cmp
nop
fidivs
push
sbb
ss
xor
sub
push
outsb
pop
mov
stos
loope
dec
icebp
jecxz
lds
mov
jl
sahf
sti
cwtl
in
scas
std
shrb
push
roll
and
nop
das
push
xor
jl
sub
xor
dec
mov
push
js
inc
cmp
repz
push
or
push
sbb
test
les
or
shlb
push
scas
lds
xor
fwait
sbbb
andb
jecxz
filds
and
out
lcall
xchg
mov
pop
inc
das
push
mov
pop
add
cwtl
pop
ds
adc
pop
or
dec
push
loop
xchg
mov
xchg
aad
gs
nop
movsl
and
mov
jnp
add
add
mov
lcall
jno
sub
inc
mov
in
daa
or
pop
scas
or
add
imul
xchg
div
dec
mov
cwtl
enter
loope
dec
je
outsl
or
arpl
loope
pop
sti
or
daa
cli
xchg
imul
stos
jnp
jp
punpcklwd
pop
and
movl
sbb
mov
xchg
into
dec
movsb
push
or
add
xor
mov
add
insb
cmp
out
shrb
sarb
ficomps
push
dec
rcl
add
ret
nop
mov
lret
imul
pop
test
xor
sbb
mov
mov
lock
inc
int3
pop
push
mov
inc
adc
in
inc
sarb
into
loopne
or
cltd
rorb
lahf
ja
jne
sbb
or
in
fwait
mov
inc
or
and
sbb
cmp
cmp
xor
pop
test
jb
mov
outsl
fmull
push
mov
fucomi
cwtl
inc
adc
jae
fistpll
push
addr16
pop
cwtl
xor
mov
jno
xchg
mov
scas
mov
push
cmp
inc
and
lret
jo
mov
rorb
jno
cmpsb
jl
and
pop
movsb
adc
inc
or
push
xchg
sbb
cwtl
insb
int3
and
shlb
mov
push
inc
lods
iret
pusha
and
pop
pushf
fsubs
mov
xor
aas
outsl
aas
outsb
push
and
xor
imul
mov
push
sub
imul
das
lea
ljmp
xor
repnz
test
push
cmp
hlt
mov
icebp
cmp
int
push
clc
into
testb
inc
mov
leave
xchg
xchg
xchg
adcl
fiadds
xchg
cmp
mov
jne
push
or
adc
mov
loope
cmpsl
fs
cmpsb
xchg
push
in
mov
shlb
clc
orl
bnd
sarl
mov
mov
lcall
mov
pop
insb
popa
mov
insb
dec
mov
cs
repz
rcll
cmp
dec
push
push
lret
push
imul
mov
imul
jns
cmp
out
lret
out
pop
pop
dec
pop
mov
sbb
enter
and
filds
insb
adc
inc
inc
sub
or
pop
push
mov
lods
jbe
jle
sub
xchg
mov
jg
out
je
lret
sub
lods
jecxz
mov
push
adc
fcomps
lea
bound
ljmp
dec
arpl
stos
push
nop
mov
push
mov
add
xchg
out
movsb
adc
lahf
insb
insb
inc
xchg
or
fcompl
cmp
mov
or
xchg
dec
mov
cmp
into
ja
sub
stos
arpl
add
mov
stos
mov
add
out
or
sub
pop
rorl
jno
je
and
adc
jo
sti
inc
lods
sub
ljmp
xchg
adc
in
jecxz
add
shlb
mov
mov
lea
and
js
cmp
lock
lods
cmp
push
rol
pop
nop
mov
xor
fcomps
imul
ljmp
pop
test
or
pop
mov
mov
pusha
jno
stos
sub
rorl
cmp
or
mov
inc
sbb
push
sbb
scas
aad
adc
cmp
loope
xchg
or
dec
int
bound
mov
xor
cmpb
fcomps
jl
dec
sbb
movsl
adc
or
stc
adc
int3
adc
xchg
mov
ret
into
call
into
aaa
ss
pop
roll
rclb
rcrb
pop
sub
and
aaa
imul
dec
cmp
mov
out
or
pop
jno
in
repnz
sbb
xchg
sub
ja
scas
or
or
lock
js
pop
je
inc
push
into
jo
adc
lea
test
add
inc
repz
sbb
dec
sbb
les
xchg
sbb
add
in
sbb
stos
in
cmp
shlb
cwtl
mov
popa
cltd
test
mov
stos
test
daa
dec
xor
xchg
insl
aad
cmc
push
cvttps2pi
cmc
dec
loope
rclb
cwtl
sub
cmp
lret
jnp
sub
mov
xor
mov
mov
pop
sub
daa
ss
mov
jmp
bnd
mov
cmp
jge
outsl
dec
das
aas
and
dec
pushf
adc
in
sbb
outsb
loopne
imul
mov
jnp
or
cmp
pop
out
outsb
andb
sbb
add
push
lea
gs
sbb
dec
xor
jne
iret
rolb
lahf
or
pop
out
lock
negb
inc
dec
in
es
xor
outsb
dec
movsb
ds
push
scas
scas
mov
mov
shr
xor
popf
add
xchg
lds
cmpsl
mov
inc
stc
or
xor
lods
es
pop
mov
and
mov
repz
mov
js
push
mov
into
int3
in
lea
cli
lds
outsl
js
and
cmp
and
in
mov
inc
jecxz
jmp
xchg
mov
test
ds
add
jbe
lret
jge
daa
mov
dec
push
sarb
pop
fisubrs
mov
or
mov
push
pop
adc
dec
cmp
ds
je
jmp
inc
mov
adc
repz
cmp
add
cmp
das
jp
ja
in
clc
cld
mov
sbb
sub
or
push
sub
push
adc
bound
negl
out
push
push
mov
ud1
in
cmp
aam
loop
and
jae
pop
push
sbb
push
mov
insb
incl
xor
daa
pop
mov
fstpt
cwtl
dec
inc
jmp
test
pop
pop
inc
loop
shr
sbb
inc
inc
aaa
sbbl
jo
dec
xchg
cmp
push
jno
test
inc
adc
pushf
xor
int3
mov
call
in
aam
les
orb
and
mov
imul
rorb
inc
in
out
jb
mov
cmpsl
cmp
xchg
add
or
push
imul
push
js
jg
mov
jne
push
in
mov
push
fldcw
jnp
or
test
cli
mov
mov
rcr
dec
add
mov
or
push
ds
fldl
scas
sbb
cmp
or
inc
outsb
and
movsl
sbb
mov
mov
mov
sub
test
in
mov
lods
xchg
mov
cwtl
dec
mov
ja
sub
xor
cmp
imul
mov
jp
mov
shrl
add
push
das
or
jb
in
push
pop
ret
mov
cmp
jle
es
lds
in
mov
xor
idivb
xchg
repnz
and
or
sti
out
lods
iret
repz
cmp
jno
pop
sub
adc
sbb
mov
inc
rclb
je
inc
addr16
sbb
inc
xchg
mov
cmp
ds
ljmp
data16
out
fsubrs
aad
repz
lock
or
lds
push
inc
mov
call
std
hlt
cmc
fisubs
or
jge
fsubp
sbb
sbb
jne
jb
add
mov
or
fidivl
push
dec
ficomps
mov
add
insl
push
shll
xchg
push
mov
cmp
mov
add
cwtl
ret
lret
fmull
pop
pusha
cli
lock
outsl
xchg
mov
push
out
sub
and
shrb
cwtl
mov
and
push
arpl
fs
xor
jg
pop
or
ret
cmp
nop
add
jmp
repnz
adc
fimuls
cltd
lods
cmp
mov
pusha
xor
jl
push
fcoml
mov
in
push
cli
outsb
and
cli
enter
lods
inc
add
sbbl
add
lahf
bswap
test
push
cwtl
jmp
mov
adc
imul
cmc
adcl
inc
in
or
xchg
pusha
mov
and
test
mov
add
pop
and
cmp
movb
xchg
pop
jo
test
js
int3
lods
data16
xchg
inc
add
mov
cmp
cmp
clc
sbb
gs
sbb
dec
jmp
outsb
sub
or
jg
or
sub
js
stos
test
push
mov
into
das
push
pop
mov
add
pop
frstor
pop
sti
inc
std
int
sub
lds
dec
shl
and
fiadds
pop
push
stos
rcrl
mov
sbb
cmp
into
ds
call
popa
sub
mov
ret
ja
rol
sub
add
notb
xacquire
adc
xor
jl
pushf
data16
filds
push
out
imul
in
dec
movsl
jp
pop
fmulp
xchg
es
negb
nop
jnp
push
movsl
lret
icebp
mov
imul
adc
xor
or
sbb
into
and
frstor
imul
cltd
add
mov
ret
fstps
lret
out
pop
arpl
mov
cli
js
cmp
ret
push
or
mov
or
cmp
in
in
jno
repnz
es
fsubp
ss
cmp
repnz
lret
adc
lea
and
jae
inc
xor
pop
add
outsb
or
movsl
std
xchg
xchg
decb
dec
cli
bound
mov
addl
jbe
leave
or
mov
fidivl
add
gs
add
pop
push
gs
mov
pop
fistpll
hlt
sbb
scas
adc
in
and
xor
dec
in
mov
mov
aad
stos
ret
add
in
test
mov
mov
mov
test
pop
mov
ljmp
adc
jbe
repnz
out
xchg
int3
inc
adc
mov
enter
pop
pop
or
mov
add
xlat
fdivl
out
add
mov
lods
or
cs
out
push
or
pop
dec
jecxz
mov
cmpsl
ljmp
sbb
and
inc
pop
sub
jno
faddl
es
mov
xor
sub
test
mov
xchg
fwait
imul
jge
js
sbb
test
orb
inc
pusha
cmp
pop
sbb
add
adc
mov
jnp
daa
fisubl
sub
push
lods
add
pushl
jnp
popa
and
lds
mov
dec
sbb
jl
jl
sbb
and
xchg
push
mov
repz
mov
and
out
mov
ss
shll
pop
push
add
push
jo
stos
xchg
xlat
cltd
jl
cmp
xor
enter
outsl
ret
dec
stos
fwait
inc
sub
push
pop
out
shll
stc
icebp
sub
mov
xchg
push
sbb
or
push
out
lret
push
mov
xor
cmp
inc
jns
xchg
movsl
or
xor
lea
inc
in
mov
mov
lcall
imul
repnz
clc
loopne
rorl
test
adc
jecxz
mov
fistl
ja
ds
cmp
jge
and
push
pop
inc
push
imul
fistps
dec
mov
std
repnz
inc
add
mov
je
repz
mov
mov
imul
ret
nop
dec
aad
mov
jae
sub
test
or
hlt
mov
jge
cmp
inc
aam
mov
xchg
test
pusha
fstps
ja
xchg
js
cmp
mov
cmp
or
adcb
lock
xor
sub
mov
pop
push
cmpsb
js
dec
rcll
shrb
xchg
nop
mov
sarb
add
jb
sbb
scas
mov
in
mov
xor
int3
or
inc
pop
rcrb
mov
dec
add
jmp
notb
insb
insb
fdivr
ljmp
movsb
dec
fnsave
inc
inc
or
movsb
dec
ret
adc
and
popa
je
and
xchg
push
mov
xlat
sbb
clc
and
pusha
cmp
cmpsb
mov
icebp
cmp
fistpll
lret
push
push
inc
jnp
loopne
dec
pop
xor
insb
cmp
cmpsl
cld
fidivrl
sub
adc
mov
sti
add
sbbl
fwait
add
xchg
or
pop
nop
pop
cmpsb
test
sub
out
sbb
mov
xchg
ja
pop
fwait
jmp
push
pop
adc
lods
loopne
jle,pt
imul
in
inc
or
out
mov
xchg
cs
pop
mov
cs
cld
inc
rolb
outsb
sbbb
ja
rcl
aam
dec
adc
cmp
nop
ja
inc
adc
xchg
dec
lea
out
and
jae
js
xlat
scas
jno
aaa
aaa
cltd
jae
push
mov
push
fisubrl
cltd
pop
mov
fcomp
inc
or
insb
dec
xchg
and
jecxz
lods
lock
movsl
mov
cmp
into
push
and
mov
dec
add
sbb
nop
bound
data16
xchg
nop
loopne
enter
imul
mov
push
sbb
mov
xor
mov
outsl
lods
lock
push
pop
add
movsl
inc
jnp
cltd
adc
testb
push
cs
pop
dec
pop
jge
aas
push
stos
xchg
jmp
and
adcb
mov
aam
mov
into
shl
pushl
shr
enter
data16
inc
dec
lret
push
sub
lds
or
pusha
mov
jnp
mov
das
mov
test
or
lahf
cmc
jmp
sbb
fisubrs
fwait
dec
cmc
fists
push
push
sbb
xchg
and
clc
mov
ds
dec
inc
cwtl
adc
sub
cwtl
cmpsl
dec
js
fldl
iret
xchg
rcr
cld
lds
add
sarl
xlat
scas
in
stos
xorb
push
or
sbb
imul
lret
sar
push
dec
push
jp
lcall
pop
rorb
gs
push
jmp
lret
int
aam
xor
frstor
es
push
fists
or
xchg
sub
mov
mov
adc
adc
daa
loop
movsb
pop
adc
out
ss
decb
ljmp
adc
push
sbb
xor
leave
push
jns
jge
gs
sub
rclb
mov
dec
mov
xor
mov
test
jg
repz
adc
fdivs
shlb
pcmpgtw
mov
mov
xor
and
dec
rorb
test
out
sub
ds
lcall
nopl
sub
psllq
popa
pop
jg
aaa
or
frstor
jmp
fs
insb
dec
jb
push
jbe
pop
mov
aam
xor
ljmp
loopne
jbe
dec
out
subb
rol
std
pop
mov
stos
xchg
inc
cmpsb
jmp
jmp
and
in
andb
lret
pop
sbb
jg
mov
jo
sbb
mov
lret
jle
and
stos
outsl
cli
sbbl
sub
pop
adc
in
sub
mov
push
mov
ficoml
jno
jns
cmp
nop
mov
cmp
pop
ret
add
dec
rcrb
sbb
dec
adc
or
dec
fdivs
jge
mov
xchg
or
nop
jns
inc
mov
test
mov
jne
test
adc
adc
data16
out
inc
lock
fbld
mov
and
mov
aad
shll
cltd
xchg
cs
daa
dec
testl
add
cmp
or
and
jecxz
hlt
lea
sbb
dec
cmp
jge
dec
popa
adc
dec
addr16
sbb
movsb
stc
mov
add
outsb
jmp
push
shll
or
test
lret
les
lahf
push
popf
scas
jmp
or
ds
pop
stos
sub
pop
in
aaa
push
sub
dec
stos
jecxz
in
or
out
cmpl
mov
aas
into
enter
xorl
insl
testl
cmp
xchg
xor
mov
push
mov
ret
shlb
jbe
mov
shlb
cmp
paddusw
aaa
push
mov
pop
stos
mul
mov
cmpsl
fidivrl
and
jmp
popa
lret
repnz
jne
sahf
les
pop
dec
icebp
pop
and
movsl
pop
rol
je
mov
add
sbb
mov
dec
jge
mov
jnp
jbe
mov
scas
cmp
sbb
cmp
mov
mov
xor
gs
rorb
adc
mov
cmpsb
ja
push
cmp
stos
sbb
mov
popf
ds
ds
js
pop
and
dec
fistpl
push
shll
jae
lcall
xor
imul
or
fldenv
add
cli
call
outsb
adcb
push
test
cmp
cs
push
pop
mov
xchg
mov
mov
inc
fs
adcb
int
pop
push
pushf
xchg
pop
cmc
xchg
pop
test
call
jno
mov
out
xchg
jmp
aam
xchg
loopne
sub
dec
outsb
push
mov
jecxz
daa
cmp
mov
in
or
popa
mov
rorl
dec
xchg
pop
sarl
imul
add
fwait
mov
sub
fwait
push
dec
xchg
push
dec
inc
dec
xchg
mov
push
sbb
lret
movsl
rolb
cmp
pop
or
add
fstpt
mov
sub
pop
xor
movsl
mulb
jp
dec
and
int3
mov
push
test
xchg
cmpsl
mov
dec
icebp
cmp
xlat
lcall
mov
mov
push
call
cltd
jge
xchg
bound
lret
mov
dec
cmp
push
xchg
adc
lods
fmuls
xchg
es
or
enter
call
fsubr
jbe
cmp
cmp
or
in
loopne
mov
cmp
outsl
ja
xchg
xor
scas
arpl
insb
adc
lea
lock
mov
push
mov
sahf
adc
push
xchg
cmpb
dec
push
repz
mov
mov
mov
clc
inc
into
xchg
scas
push
pop
mov
lret
sbb
push
imul
clc
iret
push
gs
cwtl
jge
lcall
pop
outsl
push
fwait
ljmp
jne
xchg
mov
xor
test
in
or
xchg
aas
dec
lds
xor
mov
cmp
add
inc
enter
sub
cwtl
push
push
rorl
bound
and
add
dec
push
or
and
inc
push
mov
push
loopne
faddl
xor
jle
mov
js
mov
pop
mov
xor
addr16
lret
out
icebp
out
lods
iret
push
fs
out
into
mov
mov
ret
ret
mov
xorb
push
rcll
dec
inc
test
cs
cli
fcmovne
insl
daa
push
test
stos
jge
xchg
shll
insl
cmp
cmp
jp
xchg
fidivrl
ja
pop
lods
dec
sub
lcall
adc
ret
popf
aaa
int
outsb
imul
sbb
mov
cmp
xor
jp
dec
and
lock
loopne
shlb
lock
and
movsl
lds
std
addr16
sub
es
call
adc
or
mov
addr16
inc
jns
push
les
jo
jbe
jbe
mov
fs
icebp
xor
es
aaa
add
vmread
addr16
call
test
aad
test
scas
lock
rolb
xor
sbb
push
popa
xchg
add
inc
mov
pusha
mov
test
imul
pushf
das
stos
sbb
mov
dec
rorl
pop
mov
cmp
fnstsw
mov
repz
jecxz
lahf
loope
pop
jp
nop
dec
add
or
fisubl
add
out
jnp
fwait
arpl
pushf
daa
mov
repz
js
stc
mov
jmp
sbb
cmpsl
popa
mov
stc
sub
dec
fildll
dec
or
mov
jp
arpl
inc
faddp
mov
aad
ret
xchg
aam
cmp
dec
push
imul
incb
mov
jle
ret
pop
lds
push
in
push
hlt
push
sub
aas
cld
popa
fnstcw
push
popa
and
or
cmp
push
adc
testb
outsb
pop
dec
hlt
and
dec
call
pop
pop
outsl
sarb
icebp
popa
mov
nop
adc
or
jle
push
xchg
int3
stos
add
es
std
mov
test
add
jae
repnz
cwtl
sbb
mov
push
pop
lcall
not
fsubl
and
mov
fwait
push
cltd
xlat
sub
aaa
jmp
pushf
fbld
addr16
mov
mov
inc
into
lock
mov
cli
add
aas
orb
and
dec
in
mov
jle
and
mov
cwtl
in
and
xor
movsl
jnp
jo
lock
gs
cmpsl
ja
sarb
test
inc
mov
or
mov
imul
int
push
jp
pop
and
sbb
mov
sahf
push
data16
popa
fsubp
leave
je
inc
cltd
cmpsb
pop
cltd
test
imul
sub
or
mov
sbb
adc
out
mov
inc
xchg
mov
cmp
pop
or
mov
mov
cwtl
xchg
orl
xlat
xor
mov
jno
inc
adc
sbb
cltd
inc
and
adc
faddl
in
rorb
ja
xchg
or
aaa
xchg
test
mov
fistpl
int3
movsl
jl
add
push
inc
mov
pop
push
out
adc
cmp
dec
adc
scas
inc
leave
inc
add
leave
jmp
jmp
arpl
sti
addr16
lret
iret
mov
es
jle
push
mov
dec
cs
dec
xchg
std
pop
test
in
mov
adc
jge
scas
pop
int
loop
push
outsb
lods
jg
mov
cltd
jnp
lcall
mov
push
fcmovnbe
inc
fsubrs
aas
sub
test
popa
xchg
pushf
dec
xor
mov
cli
xchg
adc
push
loopne
adc
xchg
xor
imul
or
add
jae
adc
test
cmp
inc
push
mov
xor
push
nop
sub
insl
ss
and
pop
push
mov
arpl
cwtl
iret
cmp
jl
and
mov
jmp
and
std
dec
inc
jo
pop
js
cmp
cmp
lods
xor
loopne
cmp
inc
adc
fadds
add
jns
or
sbb
lret
testb
dec
xchg
leave
adc
movsb
adc
or
mov
iret
idivb
fs
into
sbb
lret
notb
dec
cmp
mov
in
xchg
popf
mov
cmp
pusha
xchg
push
fnstsw
out
push
add
scas
adc
mov
adc
jp
rorl
outsl
aas
inc
and
fisubs
inc
sbb
movsl
pop
xor
jns
outsw
cmp
xor
out
pop
jecxz
loop
push
jmp
pushl
pop
add
outsl
out
xor
and
loope
push
adc
and
sahf
mov
gs
or
pop
incb
push
pop
lea
jecxz
daa
out
sub
fldt
setae
xchg
into
fistpll
mov
and
jbe
mov
lcall
hlt
mov
push
loope
out
popa
mov
xor
stc
sub
rcl
clc
jnp
lock
jl
or
pop
inc
icebp
ss
das
dec
jno
and
test
das
cmpsl
adc
and
inc
daa
fcmovne
adc
shr
hlt
test
repz
sbb
mov
jge
out
aas
inc
push
movsl
and
call
and
gs
loop
cmp
lret
dec
add
pop
inc
mov
adc
cmp
inc
add
arpl
add
mov
mov
or
aaa
cltd
sbb
pop
sub
inc
inc
xor
fwait
ror
mov
pop
int3
cmp
sub
mov
sbbb
cwtl
pushf
mov
cld
roll
jb
ja
les
iret
enter
loopne
mov
fucomip
jecxz
pushl
insl
jnp
xor
enter
dec
jbe
xor
jge
mov
cmpsb
xor
scas
aas
mov
popa
push
js
jmp
stc
es
in
out
mov
dec
sub
mov
push
int3
je
stc
pop
push
inc
xchg
pushf
add
mov
cmp
sbb
lahf
imul
jnp
pop
add
jmp
test
popa
xor
mov
lea
xor
sub
add
add
push
jecxz
mov
aad
fs
pop
arpl
scas
imul
in
into
cli
loopne
xchg
jae
rcl
push
mov
pop
xchg
and
or
jmp
jle
mov
dec
sbb
add
and
rcrl
imul
push
fidivs
mov
shll
xor
xchg
scas
jns
lcall
adc
or
dec
sbb
clc
insl
pop
sub
cmp
xchg
dec
popa
cmp
or
dec
pushl
imul
xor
mov
xlat
adc
test
orl
adc
mov
outsb
or
push
cltd
cld
cmp
lods
lret
pop
mov
mov
push
jmp
test
dec
xor
dec
lcall
xor
sahf
pop
cwtl
jne
mov
test
cmpl
adcl
adc
ret
dec
adc
jl
jns
push
notb
pcmpeqw
test
les
or
arpl
sub
jge
cmc
jmp
dec
push
rclb
int
addb
dec
xchg
jne
cltd
xchg
gs
lcall
nop
fdiv
fwait
jge
inc
xlat
add
push
mov
gs
jle
add
js
mov
bound
sarl
xchg
ret
in
hlt
lret
repnz
sahf
pusha
int3
mov
les
mov
mov
fmull
sub
add
inc
dec
jl
shl
out
add
mov
mov
scas
scas
movsl
outsl
xchg
fildl
adc
add
add
adc
mov
or
scas
cmp
aam
push
add
imul
icebp
mov
out
fdivs
roll
jmp
add
push
push
mov
lret
mov
jmp
and
insb
add
mov
inc
adc
fstps
pop
lods
xor
cs
ret
dec
stc
jmp
mov
sub
ds
jmp
pop
movsl
movsl
sbb
and
jle
xor
test
aam
std
xchg
mov
push
jecxz
mov
pusha
mov
js
orb
lods
imull
or
mov
cmp
out
push
loope
cwtl
and
fmull
or
fistpll
adc
cwtl
xchg
shr
adc
in
xchg
or
in
stc
xchg
ljmp
lret
or
std
daa
dec
pop
adc
call
fstl
push
stc
imul
cmc
jp
and
out
les
std
mov
jge
cmp
dec
and
dec
cmc
test
jnp
mov
popl
popf
jb
jae
lcall
je
pop
adc
cs
and
xor
movsb
dec
mov
out
lea
popa
pushl
lods
xchg
scas
fcoml
stc
das
add
in
pop
push
int3
mov
mov
mov
xchg
mov
arpl
push
mov
sbb
sub
mov
jae
adc
cmp
mov
and
pop
dec
fimuls
ss
adc
out
arpl
jns
and
into
outsb
and
xchg
adc
adc
notl
shr
ret
sbb
mov
cwtl
cmpl
sub
push
sti
pop
pop
pop
mov
jo
push
int3
lods
imul
data16
cmpsb
sub
sbb
subb
inc
testl
lods
adc
lock
push
pop
sub
push
mov
dec
inc
push
mov
pop
js
sbb
cmp
icebp
cmp
divl
or
cmp
pop
les
addr16
daa
sbb
in
xchg
inc
stos
cmp
jg
push
push
fucom
stos
cmp
lcall
insl
dec
aam
jb
cmp
orl
and
sub
std
dec
insb
push
jg
repnz
and
pop
pop
mov
xor
sbb
push
ret
mov
cmp
mov
xchg
mov
stos
sub
dec
inc
aas
mov
les
nop
stc
subl
aad
int
les
push
in
inc
stos
shrb
gs
mov
leave
imul
inc
dec
jecxz
rolb
and
mov
jecxz
push
fists
pop
js
jp
xor
into
dec
mov
inc
mov
cmp
arpl
shlb
loopne
lds
je
xchg
test
lods
imul
cmpsb
hlt
cmp
jbe
pop
fsubrs
rol
mov
jns
sahf
cwtl
xor
je
mov
out
out
cmp
cmp
dec
call
outsb
pusha
ja
jg
push
iret
mov
test
inc
inc
data16
sub
jns
mov
jae
inc
sbb
aad
jle
jnp
jmp
fldl2t
mov
push
mov
test
jb
je
mov
lahf
mov
pop
xchg
mov
mov
inc
ret
push
inc
hlt
mov
adc
ljmp
inc
stc
fmuls
pop
add
add
adc
cli
pop
rcrl
dec
push
pop
jb
daa
pop
std
jne
scas
jmp
lahf
push
mov
sti
jbe
int3
mov
mov
jbe
xchg
fs
push
pop
decl
cmpsl
stos
xchg
mov
scas
cld
in
push
ss
xchg
xchg
lea
mov
mov
push
add
addr16
cmp
jb
fcmovb
and
push
out
enter
sub
add
add
out
out
cmpsl
mov
mov
pop
jo
xlat
dec
in
int3
pop
add
mov
repz
and
loope
cmp
ljmp
sub
cmp
out
scas
adc
xchg
scas
or
jne
insb
adc
mov
jg
jnp
loop
in
sub
cmp
xor
add
jg
pop
sbb
adc
mov
gs
push
xchg
jne
in
cmp
xor
test
arpl
add
cmp
cmc
scas
lcall
mov
pop
lret
lock
arpl
push
aam
lods
jle
outsb
xor
jnp
out
mov
inc
stos
mov
fildll
movsl
mov
and
stos
pop
sbb
lret
and
pushl
fcmovu
scas
adc
xbegin
mov
pushf
les
mov
xchg
push
mov
mov
pop
mov
in
idivl
jae
rolb
cltd
stc
xor
filds
jae
add
add
and
in
jbe
lods
sub
int3
xchg
and
pop
jno
sbb
cmp
shll
hlt
les
arpl
in
movsl
inc
jne
or
rcll
clc
les
jno
inc
shrl
jo
push
aad
mov
das
mov
leave
lahf
std
sub
hlt
stc
stc
test
mov
std
in
mov
push
push
cmp
or
les
xchg
out
into
push
rolb
inc
dec
sarl
ss
sbb
mov
cmp
mov
mov
push
mov
mov
dec
and
jns
fldcw
cmp
lds
je
aad
xchg
shl
push
testl
mov
push
outsb
add
adcl
mov
popa
lock
lea
pop
xor
mov
and
adc
shll
fcom
cmpsb
in
fcomps
dec
jo
int
out
dec
xor
aad
sub
jl
push
test
pop
inc
or
dec
and
and
movsl
xor
mov
and
imul
notl
mov
fnstsw
loope
ss
mov
or
sbb
fcompl
inc
sarb
ds
out
scas
sbb
xchg
add
mov
cli
test
adc
xchg
int
and
xchg
dec
and
fs
and
cmp
sbb
sahf
push
call
fldl
mov
orb
pop
lahf
xor
gs
push
pop
bound
stos
push
aaa
shl
mov
in
jmp
call
cmc
sbb
sbb
push
add
das
push
test
mov
scas
nop
aad
mov
in
push
dec
xchg
xlat
pop
mov
add
or
out
push
sub
add
or
repnz
rcrl
in
js
and
ds
test
add
or
fstl
dec
jmp
aas
inc
dec
and
in
mov
mov
ja
call
inc
xor
mov
sub
cmc
fwait
leave
xor
movsb
add
into
xchg
mov
mov
in
test
or
das
push
mov
and
scas
pop
push
arpl
add
mov
dec
xor
lds
xchg
iret
sbb
xorb
inc
stos
sahf
mov
sbb
or
fcmovb
mov
mov
mov
or
pop
jge
inc
inc
shlb
push
pop
popf
pusha
sbb
iret
popa
or
inc
jp
cwtl
dec
push
fs
fldt
insb
pop
and
lods
in
xchg
jle
add
sub
jno
negl
fldenv
sbb
jb
add
cwtl
es
in
lea
ficoms
gs
add
test
push
dec
enter
mov
mov
pop
ret
sub
loope
sti
jno
pop
push
jb
and
push
mov
add
clc
repz
rcl
jmp
push
test
subb
mov
add
lcall
inc
dec
push
movsl
mov
lret
or
dec
rcrb
mov
jge
or
ds
inc
xor
cltd
mov
sbbb
mov
sbb
imul
test
dec
cli
aas
mov
sub
aaa
outsb
lret
movsl
out
faddl
push
dec
sbb
xchg
lds
icebp
aam
jno
adc
jnp
add
pop
push
sbb
std
lret
aaa
std
scas
outsl
repz
xchg
sub
aas
pop
push
repz
aaa
mov
dec
xor
mov
inc
add
shrl
fstpt
xchg
add
mov
mov
mov
movb
jle
icebp
xchg
js
or
incl
cld
and
movsb
jg
test
test
adc
test
jl
xchg
rcll
or
sub
sub
je
xchg
xlat
fs
cmpsl
sbb
push
dec
xor
popa
stos
dec
push
xor
dec
nop
push
lahf
and
gs
stos
cmpsl
aaa
xor
pop
fcomps
dec
add
adc
pop
adc
pop
repnz
mov
sub
inc
cmp
in
sub
int3
inc
xlat
lahf
mov
xor
outsb
scas
inc
xchg
xor
lahf
add
xor
adc
je
pop
adc
xchg
xor
bound
xchg
add
ret
dec
mov
add
in
push
jbe
xor
cmp
shll
imul
outsl
dec
popf
jmp
cmp
inc
jge
pop
adc
shrl
pusha
adc
xchg
cmp
scas
fistl
pop
and
mov
rol
and
roll
movsb
mov
out
mov
xchg
push
inc
decb
mov
dec
and
mov
xorl
sub
mov
inc
xchg
test
pop
pop
aaa
cmp
loop
mov
out
adc
sbb
clc
xchg
lret
xchg
pop
rcrb
ss
push
push
inc
and
jb
ljmp
sbb
rcr
pop
mov
testb
out
shrb
fistpll
dec
add
test
test
ljmp
pop
jns
inc
jo
cmp
push
notb
ds
xchg
imul
out
lahf
loop
or
mov
mov
inc
mov
icebp
mov
loop
xor
fwait
imul
mov
fsubs
nop
pop
jmp
dec
stc
inc
hlt
mov
and
mov
dec
dec
xchg
js
dec
cs
andb
test
dec
js
lods
cmp
mov
iret
repnz
rorb
jb
insl
or
jmp
rcrb
mov
dec
imul
inc
or
and
daa
aaa
lods
fbld
cmc
pop
xlat
lcall
mov
push
jne
mov
cli
pop
and
rorl
mov
fistpll
pop
cmc
lret
fildll
movsb
sahf
mov
aas
pop
pop
test
movsl
int3
imul
repz
mov
cltd
incl
mov
ret
inc
mov
iret
dec
test
add
mov
and
jne
push
inc
xchg
sarb
xchg
sahf
aaa
jmp
sub
adcb
test
mov
inc
mov
dec
in
mov
xor
in
mov
jnp
fsts
jmp
lahf
or
pop
mov
or
call
sti
sbb
imul
ret
mov
mov
mov
cmp
call
in
and
add
pop
xchg
arpl
insl
loope
mov
scas
in
or
jae
fnstcw
pop
jg
nop
and
loope
rcrb
js
dec
cli
daa
adc
mov
mov
outsb
sbb
or
dec
lahf
dec
int3
push
andl
jno
sahf
mov
lret
adc
and
mov
push
mov
cli
lds
sarb
out
fsts
je
mov
dec
pop
lcall
mov
ror
push
out
imul
mov
mov
int3
test
inc
bound
push
jno
filds
repnz
dec
xor
rolb
shlb
add
inc
lcall
lret
gs
repz
pop
cmc
xchg
les
dec
scas
popf
out
inc
sub
mov
push
mov
mov
ficomps
lds
rcrb
rcrl
adc
cmp
fistpll
aad
xchg
popa
in
shl
mov
out
outsb
xchg
inc
mov
mov
sbb
jmp
fcoml
add
jae
jae
popa
mov
daa
dec
clc
xor
out
inc
cmp
outsl
push
mov
test
fisttpl
pop
adc
cmpsb
mov
lds
rolb
mov
sbb
dec
or
ds
jle
sub
pop
push
ret
test
daa
cmp
loope
pop
adc
mov
mov
imul
inc
mov
push
mov
stc
push
inc
cltd
inc
push
inc
repnz
jmp
and
sub
adc
sub
xchg
test
mov
sbb
mov
test
notl
pop
mov
inc
aam
jb
pop
je
inc
pushf
imul
ds
sbb
movsl
inc
or
sahf
xchg
loope
movsb
aam
lock
pop
loope
cmp
jle
mov
mov
in
jp
inc
outsb
aam
imul
ja
pop
out
xor
out
and
xorb
cmp
sbb
popf
fisubl
das
xor
adc
cli
dec
dec
ja
add
inc
or
mov
or
lcall
cs
jl
xchg
out
sub
sbb
iret
dec
gs
mov
popf
adc
add
leave
mov
jl
std
xor
cld
shlb
pop
sbb
idivb
cmp
lods
cmc
in
xor
cmp
push
add
mov
scas
jno
iret
xor
sbb
out
push
outsl
inc
ret
frstor
xchg
jbe
sub
test
jo
enter
jo
and
mov
cmp
les
cmpsl
mov
add
adc
mov
in
push
push
sti
lret
pop
in
outsb
sbb
leave
scas
mov
xchg
repnz
mov
mov
outsb
and
cmpsb
mov
xchg
call
push
sbb
xor
inc
dec
sub
add
insl
mov
and
xor
xor
rorb
sub
mov
ss
xchg
out
sub
popf
or
movsb
sbb
push
inc
mov
xlat
push
mov
jns
lds
xchg
neg
jo
ss
dec
pop
ljmp
ret
clc
add
out
pop
xor
pop
pop
xchg
lret
mov
jae
shlb
xchg
and
mov
cltd
pop
add
xor
cmpsb
addr16
push
inc
xchg
pop
outsb
pop
pop
mov
sub
inc
test
jmp
mov
sbb
sbb
inc
add
fidivs
sub
popa
in
popa
or
jg
jmp
pop
aaa
rolb
cmpsb
pop
xor
push
xlat
dec
ret
mov
mov
xchg
insl
inc
inc
mov
insl
and
jb
lea
jg
adc
inc
addb
sti
lds
jb
std
add
push
nop
sub
int
call
jbe
jmp
jae
ljmp
push
adc
push
push
add
clc
push
xchg
outsl
rcl
jmp
jnp
pop
ja
sbb
aad
lcall
jge
xlat
sub
testl
jecxz
and
shr
repnz
push
repz
inc
lcall
adc
jmp
imul
mov
test
sbb
ret
add
imul
jg
mov
icebp
js
xor
lcall
fwait
push
aaa
iret
popf
xchg
sub
pop
fsubs
adc
outsl
sbb
repz
dec
jle
lea
popf
xchg
int
xor
shll
add
or
cmp
adcl
stos
cwtl
dec
or
push
test
aad
push
jne
or
adc
lods
rol
aas
into
inc
cmp
inc
repz
adc
out
inc
lret
push
dec
sub
xchg
adc
and
add
cmp
cmp
repnz
iret
insl
fwait
jae,pn
scas
fucom
icebp
pop
sub
pushf
sub
adc
movsb
push
std
cmovl
sub
jae
js
mov
inc
out
mov
sub
sahf
testb
lret
repz
jne
sbb
js
popf
int3
std
je
inc
cld
mov
orb
aam
lret
aas
jp
lret
jp
cmp
jecxz
movsl
pop
cmp
and
int
sub
call
shll
adc
pop
mov
sbb
add
cmp
outsb
pop
cmp
xchg
mov
or
pop
push
je
dec
and
insb
push
out
out
sarl
out
fcomp
inc
clc
cld
sahf
cli
fisttpl
popa
adc
sub
and
ret
push
lret
add
out
js
test
mov
aam
stc
sbb
adc
lds
arpl
cmpsl
add
adc
mov
test
xor
jle
ret
sbb
dec
icebp
mov
shlb
sub
das
cmp
mov
lret
xchg
ror
jecxz
pop
jnp
dec
neg
clc
adc
sub
inc
fwait
xor
enter
movsl
inc
mov
cs
es
stos
cs
push
xchg
ficomps
cwtl
sbb
jbe
je
les
jae
addl
or
std
popf
test
sar
insl
sub
repz
pop
movsl
int
arpl
or
pop
jbe
cmp
ds
mov
push
mov
ds
movsl
pushl
clc
adc
pop
imul
enter
test
out
and
aad
dec
xchg
lret
add
inc
imul
fbld
out
cs
pop
fsub
cmp
mov
fcoml
cli
push
sbb
iret
inc
ljmp
pop
jge
sub
jo
ds
stos
dec
imul
adc
sahf
or
lret
stos
ficoml
repnz
pop
dec
inc
sbb
sub
cmp
dec
xchg
repnz
xchg
hlt
cli
sbb
dec
test
sarl
add
jo
clc
or
push
sub
and
lods
js
xchg
sub
sbb
add
push
fsub
pop
lods
imul
mov
fidivs
aaa
and
cwtl
insb
mov
xor
ss
fsubrl
in
ret
mov
leave
test
dec
lods
out
call
mov
or
jnp
stos
sub
fcmovbe
cwtl
popa
stos
adc
outsb
in
lods
push
jp
fldenv
lock
mov
pop
in
pop
out
testl
push
push
lds
lcall
lret
xorl
sub
mov
xor
and
loope
inc
dec
imul
adc
cli
cmp
sub
lret
dec
adcl
xchg
imul
mov
leave
clc
aam
orl
in
loopne
mov
cmc
cld
lret
xor
or
nop
test
cli
negb
add
xor
sbb
jbe
jns
adcb
and
mov
xchg
repz
lea
rorl
dec
sub
and
jg
jp
aad
adc
push
movsl
inc
std
sbb
mov
jl
aaa
aam
pop
outsl
enter
scas
cmp
add
xor
jmp
leave
mov
and
icebp
and
loop
adc
sbb
lods
push
pop
data16
add
jge
push
dec
adc
std
xor
inc
sub
pop
adc
sbb
mov
sbb
lds
out
test
xchg
mov
aas
outsb
sbbl
jne
imul
push
sbb
pop
hlt
dec
sub
fisubs
subl
dec
mov
or
mov
xor
pop
mov
sti
cmpsl
jae
clc
xchg
lea
lds
sub
xor
mov
shlb
cltd
xchg
jbe
adc
cwtl
roll
jno
and
loop
mov
ret
faddl
inc
mov
clc
push
mov
cmc
ret
sti
or
dec
sahf
fmuls
inc
ficoml
mov
or
push
bound
out
xchg
push
xor
movsb
ljmp
scas
std
xor
mov
lea
adc
out
sub
push
test
cwtl
ret
aad
cmp
mov
add
sbb
push
insb
inc
out
test
repz
pop
divb
cmp
int3
xchg
cmc
pop
and
xchg
inc
xor
std
jp
pop
jmp
addr16
imul
cld
and
jns
pop
ja
dec
mov
sbb
lods
mov
mov
aas
into
shll
fsubr
daa
cmp
xchg
in
clc
fidivrs
rcrl
popa
jle
test
add
sub
cmpsb
lahf
cld
mov
loop
sbb
mov
dec
subb
add
mov
outsb
in
popa
insl
stos
ret
and
push
cmpsl
mov
add
lret
adc
popl
flds
bound
inc
lock
or
add
mov
clc
cmpsl
mov
pop
mov
fldt
dec
adc
dec
jae
jb
sbb
ja
ret
mov
fisttpll
dec
or
repz
repnz
out
daa
cld
mov
mov
lret
call
dec
and
test
mov
ret
push
shr
imul
int3
mov
push
ficoms
imul
arpl
fcoms
les
ljmp
sub
in
lea
into
dec
xor
and
and
dec
or
jecxz
pop
mov
inc
cmp
xor
loop
es
sarl
cmpsl
enter
jne
int
cmp
testb
sub
cmp
clc
pop
add
cmp
fisubl
or
jns
fimuls
xchg
int
jnp
nop
jecxz
or
sub
mov
adc
dec
adc
enter
xchg
pop
mov
xor
imul
pop
push
mov
jne
jl
mov
cmpsb
adcl
lds
cmc
xor
enter
or
inc
fidivrl
fidivrs
pop
js
and
in
scas
xor
ds
outsb
lock
xchg
mov
ja
les
jmp
dec
mov
sbb
sub
lret
jmp
call
mov
inc
push
cmpsl
adc
pop
mov
cmp
std
scas
ljmp
push
xchg
shrb
mov
cmp
loopne
gs
and
notb
enter
leave
mov
movsb
iret
or
or
push
pop
aaa
mov
stc
mov
and
cmp
test
das
jne
clc
lock
decl
leave
jecxz
sbb
mov
in
orl
push
or
ds
insb
fwait
jge
mov
divb
xlat
out
mov
xor
sti
out
and
jle
shl
lcall
pop
into
and
jo
xchg
adc
xlat
push
loop
add
lret
test
pop
int
push
inc
out
call
push
or
xchg
dec
cmpsb
daa
aaa
inc
push
mov
inc
mov
mov
adc
int3
sarb
stos
dec
in
push
outsb
pop
push
insb
jmp
test
movsl
mov
inc
mov
popa
shll
ret
jmp
outsb
push
adc
dec
push
mov
outsb
aam
popf
ret
and
aad
mov
jmp
inc
mov
lods
push
add
lds
lret
and
sti
xchg
sarb
dec
pop
icebp
mov
sbb
test
dec
jecxz
adcb
lods
loop
push
sub
out
dec
mov
inc
ljmp
leave
mov
div
push
and
xchg
mov
xchg
aaa
mov
adc
xchg
and
dec
das
add
xchg
fwait
cltd
insl
xor
nop
divl
test
ret
mov
outsb
cli
js
xor
mov
jg
rorl
mov
scas
mov
pop
ds
aad
icebp
addr16
sti
and
test
cmp
int3
mov
in
xor
add
pop
loopne
sbb
cmp
out
stc
mov
mov
mov
clc
ljmp
mov
imul
in
mov
jne
scas
scas
in
addb
pop
shlb
pop
aam
mov
enter
rcrl
adc
imul
mov
adc
mov
sbb
cmp
lret
mov
jnp
fidivl
pop
cmp
outsb
inc
sub
mov
inc
inc
orb
addr16
je
or
cmpsl
scas
inc
dec
movsb
dec
pop
fs
lea
shlb
jmp
jp
and
jno
sbb
push
sub
mov
mov
cmp
aaa
std
inc
sbb
pop
in
lods
adc
mov
jmp
push
jg
cmpsb
or
lock
icebp
popf
xor
popf
cwtl
scas
mov
pusha
rcr
xchg
mov
cwtl
dec
push
into
cmp
sub
xchg
push
hlt
jp
adc
call
repnz
sbb
leave
push
jno
mov
inc
dec
sub
cmp
push
lods
scas
inc
push
std
mov
cmc
mov
jbe
sbb
mov
cmpsb
push
mov
nop
mov
arpl
inc
lcall
lods
sub
nop
mov
inc
pop
dec
mov
aam
mov
stc
lock
xor
mov
mov
fcoml
xchg
mov
or
int
arpl
lock
cwtl
dec
cmp
in
out
xor
ja
mov
pop
add
and
adc
cmc
jecxz
xchg
int
rcr
pop
inc
inc
cltd
addr16
push
inc
sub
add
dec
in
aaa
orb
jnp
pushf
xor
or
and
negb
push
mov
pusha
xor
push
movsl
mov
adc
mov
inc
fstps
insb
aam
push
mov
sub
xchg
and
fsubrl
xchg
or
fcoms
in
sti
mov
mov
mov
incb
test
mov
cmpsb
dec
mov
push
fdivrl
sbb
mov
or
jae
cmp
mov
mov
daa
push
sbb
aaa
ss
push
pop
dec
or
mov
es
cltd
and
sub
or
mov
pop
xchg
jge
mov
fs
push
mov
fcomp
lcall
or
mull
testl
jl
orl
lret
pop
or
insb
push
pop
mov
adc
push
push
add
dec
pop
push
cmpsb
xchg
addr16
and
jno
fildl
mov
xchg
mov
dec
fcmovb
mov
pop
sub
cltd
out
jg
inc
insl
dec
addl
das
jno
orb
jb
xchg
mov
outsl
dec
lret
lock
push
push
stc
xlat
fdivrs
xchg
mov
cwtl
and
shlb
sahf
mov
mov
test
xor
inc
daa
lret
leave
xor
lea
sbb
cmpl
arpl
cwtl
mov
push
ret
pop
out
test
je
into
push
dec
xor
sbb
ss
in
or
out
lcall
insl
xchg
data16
dec
fcmovne
xor
je
lret
push
adc
loop
push
inc
lahf
inc
pop
into
adc
out
and
mov
and
mov
pop
inc
adc
pop
dec
dec
cmp
mov
add
mov
push
push
mov
aad
rorl
or
push
loopne
sub
sub
lea
mov
cli
xor
mov
add
subl
aaa
inc
addr16
enter
dec
and
je
sub
jb
aam
push
addr16
jmp
xchg
sub
popf
pop
adc
mov
mov
sub
mov
call
inc
push
mov
inc
cmc
dec
inc
movsl
rol
and
push
xor
jnp
cmp
in
ja
out
rorl
clc
gs
pushf
xor
jmp
push
jg
mov
js
int3
pushf
push
fs
mov
mov
sub
push
js
push
add
js
ret
add
out
rorb
pop
fdivrp
mov
sahf
cs
mov
add
fcomi
mov
jmp
xor
test
jge
mov
nop
notl
dec
iret
test
xlat
or
stc
xchg
icebp
je
add
daa
xorb
iret
jle
notl
dec
clc
test
popf
iret
jp
jbe
ljmp
xchg
rcll
sub
test
lret
outsb
lods
mov
mov
mov
daa
sub
cmpsl
xchg
jg
adc
mov
outsb
nop
loope
pop
dec
das
cmpb
dec
dec
lcall
mov
mov
and
adc
push
sbb
ljmp
lret
shl
test
xchg
call
aam
jmp
lret
jne
dec
cmc
or
mov
std
xchg
insl
pushf
out
insl
lret
loop,pn
pop
movsb
sahf
cli
add
fnstsw
push
dec
imul
add
in
mov
pop
and
inc
and
dec
pop
psubq
mov
sub
jmp
mov
shl
xor
dec
jmp
bswap
push
mov
add
inc
cmp
hlt
mov
and
xchg
sbb
test
addr16
mov
pop
dec
xor
lds
and
out
and
sti
pop
out
add
cmpsb
mov
xor
xor
or
add
push
jb
fimull
inc
pop
push
sub
jp
and
mov
add
adc
inc
insl
push
cmp
push
or
inc
out
les
pop
mov
push
rcrb
lds
cltd
out
js
aas
ret
dec
cmp
push
add
adc
fiadds
adc
scas
dec
or
scas
aas
shrl
xchg
aas
push
mov
aas
mov
lcall
sahf
pop
sub
lret
int3
add
add
daa
push
dec
push
std
cmpsl
shrl
and
ficomps
inc
test
mov
jp
pusha
push
push
cld
adc
xchg
lcall
xor
decb
cmp
mov
xor
inc
push
imul
insl
movsb
outsl
pop
insb
fimull
pop
nop
imul
loopne
mov
out
inc
aas
fcmovbe
mov
clc
mov
ja
jo
push
mov
sbb
out
repnz
fnop
and
int
pop
das
cmp
jg
aam
ret
dec
mov
fdivl
adc
mov
mov
jge
and
pop
popf
mov
cmp
outsb
cmpsb
js
mov
xor
and
bound
aas
or
dec
pop
cmpsb
push
mov
cmp
or
xchg
lock
add
mov
mov
loop
jmp
leave
and
jmp
mov
mov
aaa
ret
inc
lcall
ret
inc
ja
out
sub
lds
ljmp
pop
jns
fidivrl
adc
push
xchg
loope
mov
add
xchg
es
test
pop
lods
rorl
in
add
mov
pushf
or
jecxz
repz
pushf
sbb
push
int3
or
je
cmp
mov
das
scas
mov
cli
pop
aas
xor
or
test
call
mov
pusha
or
sbb
adc
js
mov
push
inc
xor
in
or
jl
add
sbb
shlb
movsb
in
jle
das
push
xor
pop
neg
cmpsl
sub
cld
sbb
jle
or
ret
in
or
es
out
cmpsl
xchg
arpl
in
stos
jno
arpl
insl
xchg
popa
cld
icebp
shr
jnp
xchg
mov
add
dec
xchg
fnstsw
adc
movsb
es
pop
arpl
leave
push
clc
push
out
out
jmp
mov
aad
cli
xchg
inc
mov
ret
mov
les
dec
sbb
or
mov
test
aaa
call
les
mov
subb
mov
jmp
inc
pop
rolb
or
mov
out
mov
inc
mov
test
out
jbe
sub
xchg
xor
inc
test
add
adc
ds
and
inc
lcall
inc
push
jle
xchg
inc
stos
cwtl
lret
js
dec
adc
and
clc
ja
cmp
neg
pop
dec
iret
clc
jg
into
aam
gs
lea
add
mov
jnp
or
faddp
or
adc
cmp
cmp
out
addl
mov
pop
lcall
fidivrl
cmp
or
ds
mov
mov
push
push
mov
iret
inc
aas
clc
push
imul
adc
dec
and
jmp
cmp
rol
cli
popf
das
dec
filds
and
shll
inc
pushl
fisttpl
sub
icebp
inc
push
add
insb
xchg
xor
test
movsl
test
xchg
aaa
jno
mov
dec
imul
ja
mov
mov
or
jnp
ret
xor
mov
pusha
sub
lods
inc
mov
push
jmp
ss
jmp
fisttps
inc
fstpl
jb
icebp
xchg
add
cs
xlat
hlt
push
mov
sub
rcrb
push
mov
push
out
clc
aas
ret
iret
mov
push
mov
sub
add
pop
movsb
paddsw
addr16
add
and
neg
bound
xlat
js
cltd
loop
leave
mov
std
shlb
adc
daa
xchg
dec
sbb
adc
dec
and
xchg
mov
add
push
pop
sbb
xor
addr16
adc
daa
cs
cmp
jb
out
mov
aaa
pop
test
xchg
arpl
pop
bound
inc
push
pop
es
add
pop
xor
je
jno
jne
aas
sbb
rcl
add
fbld
xchg
sub
pop
mov
mov
stc
mov
sbbl
push
sbb
fwait
inc
fsubrl
dec
loop
push
ss
sbb
enter
movsl
jae
xchg
mov
js
pop
push
fnstcw
jge
fdivr
dec
push
js
fcoms
movswl
mov
icebp
aad
cmp
test
pop
call
in
mov
cwtl
jle
adc
xor
jl
hlt
int3
inc
clc
inc
xchg
push
xor
pminsw
je
movsb
call
icebp
jae
dec
add
or
xchg
pop
aad
icebp
fisubrl
dec
inc
mov
call
jo
iret
mov
pusha
shll
sbb
fisubl
cs
popf
adc
lods
add
inc
add
test
xor
js
push
jnp
mov
jo
mov
nop
cmp
lcall
out
movsb
test
mov
jmp
mov
push
loop
xchg
push
scas
clc
fistpll
xchg
xchg
leave
push
fmull
in
pushf
xchg
push
inc
ja
aaa
mov
in
push
mov
mov
inc
testb
mov
popa
xchg
add
dec
out
orl
mov
loop
mov
clc
dec
pop
mov
jb
mov
mov
jno
out
cmp
cmp
notl
into
lret
pop
faddp
push
popa
and
add
cmc
ss
pop
or
cltd
cmp
push
jge
dec
pop
dec
rcrb
loopne
jnp
sbb
mov
pop
sub
mov
jbe
dec
jo
dec
sub
in
cmp
jp
inc
or
push
cs
lcall
adc
jmp
jecxz
inc
mov
mov
cmovs
pop
sub
xor
ljmp
xor
in
pushf
push
pop
idivl
jo
imul
jp
inc
xsha256
cmpsb
aad
or
jecxz
adc
sbb
add
clc
hlt
pop
inc
lea
insb
stc
jb
mov
sbb
sbb
pop
sbb
repz
ret
or
jl
push
out
dec
cld
add
pop
leave
add
jmp
jb
mov
sbb
es
nop
mov
push
gs
inc
mov
xchg
xchg
jmp
in
dec
mov
add
dec
stc
jae
aam
cmc
lds
lods
sub
ror
lret
or
inc
in
addr16
jl
sub
lret
mov
stos
sub
icebp
mov
inc
xchg
inc
mov
cmpl
sbbl
fidivrs
mull
inc
pop
fmull
inc
dec
insb
mov
sbbb
out
mov
mov
mov
out
xchg
adc
mov
in
pop
test
repnz
xchg
pushf
mov
fidivl
test
div
mov
sbb
push
ret
inc
push
jb
dec
in
leave
rcrl
test
mov
movsb
int
int
out
mov
test
cmpl
sub
sbbb
cmp
mov
inc
testb
fwait
jb
std
testb
test
or
mov
pop
iret
or
repnz
lret
pop
xor
scas
sbb
shr
call
int
je
mov
sti
push
cmc
push
push
movsb
sbb
ret
mov
pushf
das
movsb
push
mov
insl
pop
pusha
cmpsb
cmp
out
push
add
add
add
sub
dec
xlat
adc
xchg
and
inc
pop
sub
insb
and
dec
lret
imul
xlat
jge
pushf
inc
pop
in
sbb
pop
push
xchg
lret
pop
dec
cmp
push
mov
push
loope
push
pop
and
bound
fdivr
dec
rcll
xor
inc
cmp
repz
imul
outsb
addl
mov
cld
lods
movsl
adc
adc
xor
ljmp
cmp
push
fwait
sub
mov
inc
push
loope
xor
sub
fildll
movsl
loope
jmp
jle
fildl
inc
bnd
jne,pn
ja
lcall
adc
dec
mov
pop
adc
or
ljmp
push
push
inc
sar
repz
push
or
cmp
pop
pop
jge
std
rol
inc
das
mov
cmpsl
das
dec
add
cmpsb
out
mov
ljmp
push
sbb
movsb
add
xor
sahf
xor
sbb
mov
cmpsl
idivl
leave
sbb
xchg
je
dec
aam
xor
notl
inc
mov
out
scas
inc
xor
jns
pop
daa
adc
xor
mov
jge
cmpsl
xor
pop
movsl
div
lods
loop
call
push
shll
loopne
or
int3
mov
jb
mov
pop
js
adc
mov
fidivl
sbb
and
mov
test
push
cmp
dec
cs
out
out
cmpl
sbbl
adc
mov
mov
mov
repz
inc
rcll
pushf
into
xchg
push
cmpsb
sti
and
cmp
push
fstps
jb
loop
add
sete
rcl
lret
jne
push
adc
jmp
xchg
insb
addb
out
mov
add
ja
push
out
fisubrl
cmp
sbb
fdiv
in
adc
mov
jecxz,pn
and
jecxz
jecxz
cmp
sub
fdivrs
sbb
pop
jmp
mov
int3
pop
jb
cmc
stos
xchg
cmp
lret
xor
in
andl
into
subl
cmpsl
ret
loop
pop
daa
fmuls
inc
fiaddl
xchg
aaa
lock
inc
pop
pop
addb
iret
mov
int
int3
add
enter
inc
js
jle
cmp
pusha
sub
pop
rorb
in
mov
xor
xlat
adc
sahf
cmp
and
cltd
inc
bound
aad
es
dec
add
sti
cmp
adc
push
sbb
xchg
push
fsubs
lds
adc
sbb
sbb
loopne
jnp
cmp
pop
bound
aad
fisttps
dec
pop
xchg
call
repnz
cmpsl
testl
dec
std
popa
insb
loope
mov
popa
mov
sbb
insb
sub
mov
fucomip
dec
inc
lahf
loop
cmp
adc
shlb
das
loop
imul
inc
mov
cmp
mov
cmpsl
adc
cwtl
insb
xchg
mov
test
adc
and
rcr
jl
stc
aam
xor
jmp
cmp
sbb
ror
enter
fabs
push
ret
jecxz
sub
push
into
pushf
sub
mov
sbb
bound
dec
rclb
call
inc
test
push
hlt
faddl
mov
hlt
test
xchg
pop
sub
mov
cwtl
mov
loop
sub
ja
addl
icebp
jl
and
push
xchg
inc
iret
ret
xor
mov
notb
and
xchg
ret
aas
cmp
or
fwait
out
sub
sub
lcall
jl
lret
mov
es
mov
mov
sub
push
sbb
push
jb
dec
ret
push
mov
das
mov
lock
rorb
je
jmp
lods
lcall
pop
push
mov
int3
scas
sub
fs
dec
xor
adc
cwtl
add
push
lret
xchg
push
popf
fistl
gs
cmp
cmp
jo
pushf
xor
clc
aas
jnp
sbb
aas
xor
pop
xor
ja
cmp
jecxz
cmp
and
sbb
xchg
aaa
lock
call
sarl
in
aaa
dec
lods
jns
mov
lods
push
ss
sub
push
xlat
cwtl
dec
inc
xchg
test
nop
cmp
push
popa
pop
xchg
inc
cmc
ss
pop
mov
std
ret
test
jno
pause
cmpsl
push
int
mov
movsb
shl
in
popa
fldl
leave
xor
stc
dec
xchg
fmuls
sub
lods
cli
mov
popl
lahf
scas
aaa
and
int3
and
in
arpl
dec
pop
sbbl
add
das
cmp
or
mov
jb
ret
stos
sub
and
sahf
ror
ja
dec
or
or
loope
clc
rcl
dec
jl
pop
push
fmuls
xor
sub
cli
push
popf
repnz
push
inc
jnp
push
testl
xchg
pop
repnz
lock
cmp
inc
and
inc
mov
mov
xchg
dec
int3
and
arpl
sub
mov
adc
or
lods
xchg
mov
js
dec
mov
jl
add
push
sub
sbb
cmp
sub
pop
xorb
and
leave
shll
mov
and
aam
nop
mov
imul
mov
movsb
jo
mov
cmp
xchg
js
mov
jne
ret
mov
mov
sbb
xor
aam
inc
dec
mov
mov
popa
push
mov
das
scas
sbb
push
pusha
ficoms
xchg
addr16
mov
int3
xchg
sbb
fdivrs
pop
xor
pop
push
push
xchg
mov
insl
in
int
pop
cmpsl
mov
add
mov
sub
sbb
jne
mov
in
xor
pop
sub
ret
xchg
jmp
out
jae
pushf
clc
sbb
xor
inc
push
loopne
cld
rcrl
cmpsb
inc
cmp
pop
test
popa
adc
push
fnstcw
test
inc
push
fcmovbe
lret
jp
rcrl
decb
and
dec
int
xchg
jg
push
pusha
stc
sarb
in
sbb
dec
mov
push
cli
clc
movsb
scas
aaa
icebp
xchg
jg
pop
xchg
dec
or
push
insb
nop
cwtl
scas
fcmovnb
lcallw
sub
int3
je
jns
mov
mov
add
aad
adc
ljmp
mov
inc
lods
mov
cmp
push
cmpsl
pop
stos
push
fidivl
sbb
pop
lahf
subl
xchg
repnz
test
inc
jne
clc
pop
mov
mov
imul
pop
dec
mov
ja
mov
xchg
or
in
sbb
inc
cld
roll
push
jne
push
movsl
push
movsb
negb
ror
loop
in
icebp
stos
and
adc
ljmp
xchg
cmp
popf
cmp
cltd
xchg
xor
pusha
lahf
int
icebp
xchg
add
sub
repnz
sbb
enter
mov
mov
push
mov
test
push
jle
repnz
jbe
lret
shrb
cmc
jo
mov
mov
push
jb
sbb
pusha
fistpl
xchg
mov
int
mov
inc
fistpll
sbb
aaa
pushf
mov
xor
mov
addr16
mov
incb
cwtl
push
cltd
or
mov
test
inc
add
mov
data16
mov
cwtl
jno
cmc
test
popa
jae
pop
scas
pop
ficompl
sbb
in
nop
scas
fidivs
pop
inc
scas
lret
push
cwtl
xchg
loop
test
out
pop
data16
jb
sub
lahf
mov
lock
fimuls
push
inc
mov
clc
xchg
ret
pop
test
and
jno
mov
outsb
loope
iret
dec
ret
out
scas
stos
sbb
sti
jno
setge
sub
cwtl
jns
mov
mov
leave
mov
pop
jecxz
loopne
push
scas
mov
ret
movsb
aas
push
shl
dec
aaa
inc
icebp
loopne
jmp
push
add
sub
jg
rcrl
fisubrl
jp
xor
faddl
das
cltd
pop
repz
xor
add
sub
mov
daa
and
mov
pop
mov
mov
gs
mov
outsb
gs
adc
lods
gs
dec
scas
xchg
xor
cmpsl
sub
cwtl
insl
mov
jbe
mov
inc
ds
mov
outsb
inc
lret
xor
push
pop
jno
push
outsb
movsl
enter
xor
imul
mov
adc
shlb
lods
inc
aad
push
jo
push
xchg
xchg
decl
sub
sahf
repnz
lock
pop
icebp
and
aaa
dec
cmp
inc
iret
jb
mov
smsw
jge
xlat
rcll
push
push
ret
iret
sub
sti
mov
push
adc
ds
dec
or
pop
nop
or
mov
fnstcw
sti
xchg
test
jne
jnp
cmp
loope
inc
daa
jecxz
xchg
les
add
scas
sbb
jge
in
movsb
paddq
imul
dec
xor
and
fs
dec
cld
dec
jp
jp
lea
andl
jbe
test
xchg
icebp
add
cmpb
imul
push
xor
in
mov
in
lahf
leave
hlt
and
sbb
push
fwait
sbb
add
push
scas
test
or
mov
push
adc
pop
mov
call
or
popa
pop
bound
xchg
insl
or
test
mov
xchg
sti
out
sti
popf
pop
mov
push
das
fnsave
push
inc
sub
pop
push
leave
nop
pusha
cmp
and
sbb
addr16
xor
or
cli
outsb
mov
in
loop
sahf
aas
add
fsts
cmp
lock
test
mov
mov
cld
iret
xor
jp
into
push
adc
ljmp
and
je
cmpsl
lods
mov
jae
jecxz
jp
shll
aam
and
loop
aad
fnstcw
add
sub
dec
sbb
inc
stos
popf
mov
and
mov
ljmp
xor
sub
pop
dec
or
shr
imul
outsl
or
movl
stos
repnz
mov
inc
rcrl
jg
das
add
hlt
cs
scas
push
popa
jns
mov
xchg
dec
or
scas
mov
xor
repz
mov
ficomps
jp
sub
ret
imul
setg
mov
push
sub
pop
mov
insb
in
ds
sbb
imul
mov
mov
or
and
arpl
adc
shrb
mov
pop
or
push
inc
pop
xor
pop
outsb
push
fisubl
pop
pop
int3
lahf
in
sub
fptan
push
or
add
test
aaa
inc
in
popa
test
jbe
incb
and
stc
pop
fwait
sbb
test
dec
and
mov
adc
jne
mov
fstpl
add
mov
cmp
sti
arpl
outsl
jnp
dec
jmp
stc
push
jns
push
leave
adc
pop
stos
push
imul
push
std
adc
lds
je
mov
sub
add
lods
insb
aam
add
sbbb
out
push
mov
mov
xor
insb
loope
pusha
cmp
jno
aad
test
popf
arpl
adc
mov
sti
mov
cmp
insb
cmp
ret
xor
jp
jno
sbb
pop
dec
xchg
mov
aaa
sbb
lret
xor
lret
sub
xchg
aad
jo
xchg
mov
rorb
and
sbb
mov
jae
fsubl
pop
divl
stc
jge
cmp
push
push
push
cmp
mov
out
pop
leave
jge
xchg
lods
xchg
xor
cli
sbb
ret
fmulp
pop
mov
out
add
fcomps
inc
out
jl
ret
subl
mov
sbb
icebp
loop
mov
iret
insl
in
mov
je
jl
push
stos
xchg
sub
inc
sbb
lods
loope
and
pushl
adc
xchg
cmp
xor
xor
or
outsl
push
ljmp
xchg
and
inc
or
iret
sbb
rorl
sbbl
repnz
sbb
adc
icebp
fidivl
jns
loop
add
adc
push
cmp
xchg
cmp
inc
cmpsl
xorl
dec
adc
lods
adc
xchg
ret
mov
inc
mov
mov
jne
or
jge
dec
movsl
outsl
xchg
pop
fdivs
cltd
test
mov
xlat
negl
sub
lcall
pop
mov
or
sub
sbb
dec
or
rolb
in
inc
mov
out
inc
int3
mov
in
ds
test
jns
iret
movsl
fisubl
add
push
in
cmp
jnp
mov
stos
ret
lods
out
lret
cmpsl
mov
std
mov
add
add
add
enter
lea
mov
push
fld1
mov
mov
mov
sub
fld
mulb
pop
add
mov
cmp
adcb
add
xor
and
in
or
aad
add
sbb
popa
cmp
lgs
shlb
rol
or
stos
pop
xchg
test
dec
iret
push
filds
hlt
dec
inc
jl
xor
stos
icebp
mov
add
mov
mov
pop
mov
mov
mov
testb
loope
dec
mov
mov
ret
cmp
ret
push
push
cmpsl
jmp
enter
pop
cmp
lahf
dec
push
subb
in
xchg
mov
jl
jle
cmc
inc
cmp
push
stos
lret
sti
pop
mov
xchg
ret
stos
lds
sbb
xor
lock
inc
insl
lret
loopne
sbb
inc
push
or
in
xchg
insl
xchg
sbb
aaa
mov
and
pop
mulb
and
xchg
inc
sti
pop
and
inc
stos
fisttpl
or
adc
add
ljmp
call
fsubrp
dec
cli
and
aas
cmp
pop
add
arpl
ss
addl
and
mov
push
cltd
ds
mov
sub
xor
es
test
mov
push
gs
adc
inc
popf
test
stos
adc
xchg
loop
mov
ret
add
cmp
test
or
jmp
jbe
jmp
or
movsb
stos
and
xor
mov
je
adcl
lock
sbb
fnsave
xor
push
int3
or
imul
push
or
in
lahf
loopne
or
loope
adc
and
mov
clc
mov
mov
xor
adc
mov
bound
xor
cmp
sbb
fsubrs
sbb
flds
sbb
dec
pop
sbb
mov
xor
or
ljmp
arpl
jno
shll
dec
adc
jle
adc
aas
cmp
pop
scas
mov
push
and
jae
jp
push
rclb
mov
insl
adc
scas
cmp
dec
lods
or
xor
rcrl
pop
add
add
mov
cmp
cmpl
sbb
pop
pushf
es
rorl
movsl
mov
sbb
fdivr
fwait
xchg
int
lods
jnp
dec
sahf
mov
sub
xor
in
or
ret
imul
add
pop
sbbl
cld
insl
cwtl
inc
xchg
imul
sub
fs
rcrl
sbb
mov
fldl
jp
out
adc
sbb
add
adc
or
sub
out
mov
aad
adc
pop
jae
jl
subb
push
dec
imul
stos
push
sub
adc
inc
sub
mov
fs
or
pop
dec
data16
inc
data16
scas
xchg
jae
cmp
scas
pop
push
sbb
add
xchg
sbb
cli
sub
icebp
out
cs
jecxz
mov
arpl
jae
add
imulb
sarb
jmp
arpl
mov
mov
pop
xchg
xor
repz
xor
mov
xchg
pop
sub
xchg
inc
xor
cs
xchg
dec
int3
js
outsb
mov
lret
xor
sar
lret
mov
xchg
sbb
mov
push
xchg
aad
cmp
fs
xchg
xor
push
adcl
sbb
out
xchg
jecxz
mov
sbb
out
es
lcall
or
jae
mov
cmp
jb
subl
int
mov
repnz
pop
mov
or
jnp
popa
mov
vpcmpgtb
out
cmp
pop
push
xchg
sbb
insl
iret
xchg
daa
push
mulb
add
push
cs
mov
enter
out
lds
dec
roll
cltd
adc
or
icebp
js
std
sub
mov
outsb
jo
scas
test
fstp
lea
xchg
fisubrs
mov
xchg
jmp
out
out
jp
mov
fmulp
insb
js
mov
in
mov
push
mov
jbe
cmpsl
loope
sub
pop
jo
les
xchg
push
imulb
sti
fnstenv
in
xor
push
ret
jns
ror
popa
push
push
dec
pop
ret
fcoml
insb
mov
ucomiss
dec
mov
mov
sub
or
xchg
adc
mov
cmp
lret
xor
jecxz
push
outsl
imul
es
mov
nop
mov
out
adc
test
adc
mov
roll
mov
scas
push
es
je
fcomps
shlb
mov
pop
cwtl
imul
cmp
repnz
xchg
sarl
divb
push
inc
leave
inc
js
mov
lahf
fwait
mov
mov
arpl
add
icebp
mov
pop
jecxz
sarl
jl
testb
insb
test
cmp
loope
scas
mov
outsl
in
pusha
leave
test
lret
imul
fmuls
adc
lcall
sbb
icebp
cs
movsl
inc
mov
mov
dec
loopne
divl
aad
cs
and
loope
xchg
mov
int
test
inc
pop
xchg
mov
and
sbb
xchg
inc
stos
inc
mov
sub
jnp
adc
mov
jp
adcb
es
jp
rcrb
imul
loope
push
in
cld
aas
mov
mov
daa
or
iret
dec
push
inc
out
mov
sub
adc
imul
mov
aaa
mov
jmp
mov
lcall
sbb
mov
push
xchg
mov
fwait
xor
adc
sub
test
mov
push
sbb
lds
dec
shrb
add
or
xor
mov
idivb
fisttps
inc
add
scas
adc
aam
mov
inc
rclb
sbb
dec
mov
icebp
add
inc
stos
in
mov
push
and
in
inc
scas
int
sbb
daa
dec
fwait
add
cmp
xchg
pop
shll
jle
in
xor
push
cmp
repnz
dec
loope
data16
pusha
inc
and
in
aaa
sub
in
fmull
or
lcall
and
dec
imul
mov
mov
mov
orb
sbb
lcall
mov
movsl
clc
mov
push
push
and
movsb
inc
add
push
ds
lret
popf
cmpsl
imul
or
stc
xchg
and
es
outsl
and
mov
cmp
pop
in
mov
xor
lods
outsl
int
inc
sub
push
andl
fildll
imul
aas
pop
incb
inc
push
cmp
or
rcrb
or
fnsetpm(287
push
adc
test
jae
test
pop
push
loope
jp
gs
mov
popf
pop
stc
xchg
mov
cmp
inc
xchg
ds
inc
mov
fidivs
xor
jp
inc
pop
xor
pop
out
stos
mov
lret
inc
pop
jb
adc
ja
pop
xor
int
clc
ds
stos
out
inc
pop
sub
adc
testl
xor
ljmp
rcrl
sbb
push
addr16
fmul
mov
sub
or
mov
pop
sbb
jo
mov
push
movsl
lea
or
xchg
mov
dec
push
hlt
clc
inc
push
sarl
sbb
ret
push
rcl
pop
fcmovnb
cmp
mov
clc
sahf
lods
sub
xchg
rol
test
mov
imul
xorl
lea
imul
pop
popl
movl
and
jb
jns
mov
push
lods
xor
mov
cmc
mov
xchg
jbe
push
leave
lea
inc
ds
fstl
cmp
scas
testl
add
dec
into
pop
das
aas
aas
insl
pop
aad
pusha
sbb
lock
clc
dec
mov
loop
lock
ss
add
cmp
call
mov
pop
aas
xor
fdivrp
xchg
sub
mov
mov
push
push
lret
cmp
es
add
ja
and
mov
or
orb
shr
lods
sti
cld
aas
sarb
jns
cli
fists
add
and
bound
cmp
sbb
shrb
popa
and
lcall
push
roll
or
or
jb
push
mov
add
xchg
and
mov
sub
push
push
daa
inc
dec
jl
fucomi
fistps
and
push
xchg
aaa
sub
addr16
jmp
xor
or
cmp
and
push
mov
ret
mov
add
cmpb
sarl
lods
fldcw
pop
push
mov
mov
jo
test
adc
cmp
cmpsb
rcrl
in
les
dec
das
hlt
push
jle
xchg
inc
rep
pop
xchg
push
and
ja
cltd
cmpsl
scas
pop
mov
or
xchg
xorl
sub
jg
inc
outsl
and
adc
push
mov
or
inc
dec
xchg
sbb
icebp
stos
fldcw
mov
xchg
pop
add
pop
push
pop
mov
das
inc
and
int
xchg
push
xor
sub
outsl
fsubrl
inc
pop
test
or
jne
cwtl
cs
pushf
mov
into
insl
loop
rclb
cmp
pop
icebp
jb
fstl
sbb
inc
jp
and
ficomps
aam
test
or
pop
jp
sbbb
xlat
and
xchg
stc
and
xor
mov
std
popf
pop
xor
lods
out
pop
jb
pop
mov
les
out
push
add
shlb
aam
adc
sub
out
push
mov
and
inc
xchg
ss
addr16
sbb
dec
and
lods
sti
cmp
and
lret
test
test
out
mov
std
ja
ret
inc
lods
and
in
repz
xor
sti
push
cmpsl
leave
mov
in
sbb
mov
jnp
ja
outsb
push
adc
jne
mov
dec
jbe
ror
sbb
xor
das
pop
mov
ret
or
mov
dec
push
mov
inc
das
stc
mov
jge
or
popa
xabort
aas
fildl
and
mov
sub
dec
sub
xchg
xor
lahf
loopne
repnz
or
adc
and
stc
scas
ljmp
test
loopne
jecxz
cli
or
mov
fcomps
pop
inc
ret
dec
cld
xor
pop
ljmp
xor
mov
leave
mov
lret
cmp
add
test
in
dec
fadds
cli
mov
cmp
lahf
xorb
mov
andb
sahf
sbb
ret
pop
mov
or
inc
mov
mov
into
sti
fsubl
testl
cs
fcmovnb
scas
and
jne
sahf
test
adc
cmp
and
lds
push
or
jl
int
inc
in
aaa
pop
adc
nop
mov
std
mov
jg
popa
dec
jg
add
sbb
movsl
inc
push
cli
sub
or
or
out
inc
xchg
jge
cli
gs
fidivrs
xor
sub
xor
repnz
sahf
cmp
and
arpl
movsb
sbb
pop
add
jbe
inc
sub
inc
in
stc
fstps
rorl
jmp
inc
pop
fisubrl
dec
mov
rcr
push
fisttps
mov
mov
xor
add
ret
sub
jo
jge
mov
pmulhw
mov
jbe
loop
in
adc
dec
pop
call
pop
scas
lahf
mov
add
push
outsl
pusha
adc
scas
push
sbb
pop
insl
jp
rcrb
xlat
push
rcrb
sub
div
mov
pop
movsl
xchg
nop
sbb
mov
mov
mov
jns
push
loop
dec
mov
dec
cmp
mov
mov
test
jp
add
test
test
imul
cmpsb
push
scas
push
hlt
mov
repnz
mov
fsub
jmp
xchg
inc
sub
jmp
adc
cmp
cwtl
sarl
test
sarb
cmp
fiaddl
lea
movsb
aad
push
fistl
stos
mov
dec
push
loope
inc
fwait
sub
enter
sub
fs
cmp
xor
mov
push
js
jp
lcall
in
pop
mov
mov
sbb
jns
mov
sub
mov
stos
lods
mov
sub
xor
loope
inc
lcall
lret
adc
or
push
jns
and
mov
xorb
fcomip
mov
mov
xchg
jp
hlt
out
or
sbb
sbb
lahf
cs
add
movsl
lock
loope
or
mov
cmc
mov
xchg
in
rcll
call
push
pop
jno
sbb
aaa
xor
addl
and
out
ret
cld
cmp
repnz
mov
mov
pop
jp
int3
popl
cmp
xor
pop
movsb
cld
push
push
and
pop
ja
push
pop
sbb
in
jo
push
jecxz
stc
jp
inc
cmpb
sub
ficompl
xchg
sub
ja
fcoms
pop
lods
icebp
mov
adc
adc
loop
dec
pop
insb
sti
add
mov
ud0
rclb
loop
xor
or
insb
adc
je
jns
mov
pop
dec
lea
mov
push
icebp
test
adc
ljmp
cmpsl
cmpsl
lret
mov
repz
sub
lock
xchg
cmpsl
shrb
inc
pop
cmp
loope
xchg
sahf
lds
repnz
addr16
cltd
sub
loop
arpl
andl
adc
loopne
inc
repnz
clc
mov
inc
inc
loope
mov
lock
xchg
jl
nop
loope
ljmpw
cmp
push
pop
fcompl
inc
push
std
pop
in
push
push
repz
dec
sarl
js
push
rol
push
mov
add
xchg
lods
leave
or
subb
pop
outsl
pop
aad
cs
ja
or
dec
inc
stc
cs
xchg
push
mov
jmp
addr16
add
and
jae
in
adcb
xorl
roll
xchg
push
sarb
jo
ret
stc
ljmp
inc
add
test
insb
ljmp
pop
pop
mov
addr16
push
push
fwait
inc
icebp
jno,pn
ljmp
cmp
stc
mov
mov
test
xchg
pop
imul
jno
leave
or
icebp
cmp
jecxz
aam
fiadds
jnp
mov
push
mov
inc
cs
sub
adc
loopne
scas
pop
enter
fcmove
ja
adc
adc
aas
rdmsr
push
cmc
dec
xor
pusha
test
hlt
out
dec
inc
mov
pop
ret
inc
mov
xor
push
dec
mov
push
mov
mov
scas
cvtps2pi
push
mov
xorb
loop
ret
ljmp
mov
arpl
nop
dec
xchg
xchg
mov
or
add
push
addr16
xchg
and
cmp
sub
aam
mov
mov
stos
stos
lods
adc
inc
shl
jge
mov
push
jb
pop
xchg
pop
inc
imul
cmc
sar
jae
add
jmp
push
push
jmp
daa
fsts
adc
push
popf
adc
in
dec
add
fcomp
jl
and
cltd
in
jge
jns
fst
sti
push
aas
aas
notl
stc
mov
or
stos
out
jecxz
jb
loop
jg
mov
mov
jmp
xor
jno
sub
push
cmp
jnp
dec
icebp
add
pop
test
adc
stc
mov
sbb
xchg
scas
in
sbb
xchg
sub
push
pop
pop
or
and
fs
cmp
or
nop
cmc
ret
out
mov
xor
movsl
push
push
sti
loop
int3
pop
popa
js
cli
shl
pop
xor
int
retw
sub
jmp
jae
push
xlat
inc
fmull
xor
pop
and
testl
mov
rorb
pusha
dec
cmp
ds
cmpsl
jmp
ja
aam
cmp
jb
icebp
lcall
arpl
insb
lds
das
mov
loop
out
xor
data16
repnz
test
mov
mov
lock
or
repnz
push
sbb
adc
lods
mov
sub
inc
mov
mov
movsb
mov
fisubrs
dec
xchg
pop
mov
fbstp
push
jns
icebp
xor
roll
add
mov
int3
ds
xor
dec
dec
push
negb
mov
scas
shlb
lea
or
shlb
sub
popa
outsb
inc
test
lahf
xchg
mov
cmp
mov
jge
in
loopne
fimuls
jne
cmp
xor
sbb
daa
jno
test
or
push
rorl
nop
in
jp
push
xor
jbe
cwtl
add
mov
ss
ret
out
aas
stos
jl
xor
repz
sub
jmp
aaa
std
jb
addr16
dec
xchg
xor
sbb
cmp
lcall
cmp
add
sarb
and
mov
mov
mov
data16
sbb
out
lret
das
or
pop
in
push
movl
mov
push
xchg
loop
xor
mov
push
fucomi
push
in
int3
fbld
pop
push
pop
imul
jnp
stos
cmp
xlat
ja
pop
prefetchw
pusha
add
push
aad
dec
adc
ret
adc
and
into
xor
imul
mov
sar
repz
pop
xor
sti
popf
ljmp
sbb
xchg
inc
mov
cmc
lods
sbb
sub
daa
pushf
leave
out
push
jb,pn
pop
test
xchg
mov
sbbb
cmp
push
sbb
dec
stos
aas
push
mov
mov
pop
mov
cmp
outsb
dec
sbb
ror
lds
or
fidivs
push
push
push
lds
cmp
add
xor
test
mov
dec
xchg
inc
xchg
sub
pop
sub
js
dec
lods
stc
jnp
pop
adc
mov
imul
lcall
xchg
and
push
lcall
das
mull
sti
mov
in
lods
aam
out
gs
aas
lahf
fmul
and
fwait
out
mov
pushf
roll
mov
loope
rcr
fnstcw
popf
mov
mov
xchg
mov
mov
sbb
mov
enter
sub
popa
bound
imul
jge
sahf
xchg
mov
andb
pusha
xchg
inc
sbb
add
mov
scas
adc
jnp
jle
mov
pop
sti
mov
scas
inc
cmp
in
mov
jge
cmpl
std
aad
jl
or
sub
fisttpll
dec
rcrl
lcall
mov
pop
xor
push
stos
call
xchg
xor
jecxz
cmpsb
outsl
cmp
jle
mov
aad
xchg
and
sbb
and
cmp
ss
fwait
aad
xlat
and
and
cwtl
pop
out
imul
mov
sahf
cmp
lock
insl
arpl
mov
push
iret
and
in
sbb
mov
in
fcomps
popa
jge
add
mov
repz
mov
mov
xor
xchg
xchg
loopne
push
loope
mov
shll
mov
mov
cmp
negl
push
pop
in
popa
and
icebp
sahf
xor
jne
sarl
push
adc
push
xchg
push
das
shll
sub
inc
ljmp
ss
sbb
adc
jmp
pop
push
out
mov
xchg
cmpsb
jo
jp
scas
mov
cmpsb
push
pop
push
lahf
orb
push
dec
std
cmp
pusha
and
sbb
fcoms
or
insl
sbb
shl
enter
inc
pushf
test
xor
in
stos
or
inc
or
pop
lahf
mov
bound
sbb
shl
out
ja
std
fld
scas
outsl
xor
pop
lahf
fidivrl
in
cwtl
mov
pop
jp
xchg
repz
jmp
cli
jl
dec
pop
inc
fstps
push
push
test
pop
jle
fs
out
xor
test
sub
leave
orl
xlat
ja
iret
mov
clc
xchg
out
add
dec
mov
imul
add
mov
cmpsb
lods
scas
insl
push
mov
ret
imul
cmpsl
in
in
cltd
mov
pop
test
test
jl
jp
lods
pop
xchg
cmp
mov
mov
cmp
fadd
jns
imul
cwtl
aam
xor
rcll
pop
sub
test
pop
orl
and
adcl
sub
pextrw
mov
push
and
pop
xchg
or
mov
jbe
mov
pop
pop
in
movzbl
push
mov
pop
adc
sbb
cmovl
mov
mov
xor
or
xchg
dec
in
xorl
repnz
rcll
fidivrl
std
xchg
mov
jns
xchg
jecxz
es
loope
sub
jmp
or
shr
push
jns
inc
xchg
aam
aaa
shrb
mov
or
fsubr
mov
pusha
cltd
xchg
cmc
out
or
into
std
stc
dec
ds
aas
sub
pop
push
das
sbb
jno
gs
inc
enter
mov
mov
gs
cmp
pop
ljmp
dec
fcoml
int
ret
dec
adc
cmp
loopne
jnp
and
xor
sub
movsl
push
mov
xchg
pushl
push
mov
add
cmpsl
fs
stc
dec
pop
mov
neg
push
out
fisubrs
pop
add
push
cmpsb
mov
repz
pushf
and
pop
push
and
fs
push
xchg
mov
push
sbb
icebp
ret
and
div
mov
lcall
arpl
insl
insl
loope
lahf
mov
xor
or
adc
pop
popa
test
les
push
cmc
ret
popf
out
nop
in
push
dec
inc
push
adc
mov
pop
ss
rorb
sbb
mov
mov
mov
stos
dec
pop
fs
paddsb
jl
push
icebp
push
dec
jns
lea
dec
sbb
loop
bound
lret
popf
das
icebp
dec
shrb
sbb
mov
sbb
xor
and
cmpsb
push
push
push
push
lock
lock
loope
cmp
ja
jp
or
scas
jb
ss
xchg
das
subb
bound
addr16
ljmp
mov
icebp
add
push
and
jmp
jmp
punpckhdq
cmpb
stc
inc
sbb
imul
push
add
ret
scas
pusha
lret
push
aam
sbb
jmp
cmp
cmp
out
pop
adc
outsl
fcoml
cmp
std
lcall
sub
inc
stos
jl
ret
sub
pop
stos
mov
lock
mov
dec
out
dec
pop
pop
pop
xchg
mov
push
sub
mov
addr16
in
adc
jno
dec
cmp
hlt
shll
pusha
add
lods
pop
jl
lahf
sbb
dec
lret
mov
shlb
mov
and
mov
es
lea
pop
es
jecxz
xchg
test
nop
sahf
xchg
lahf
push
es
sarb
aaa
in
or
push
inc
pop
inc
adc
inc
jmp
add
rcll
lret
add
iret
xor
out
ror
xchg
push
lods
sub
mov
push
mov
push
adc
add
lds
in
add
jbe
cmp
dec
imul
sub
ror
lds
add
stc
mov
movsl
cmp
cmc
pop
xor
inc
push
das
mov
xchg
cmpsl
popa
fisubrl
testb
dec
sub
mov
sub
fiaddl
ja,pn
repnz
test
fstl
pusha
mov
psrad
jl
jmp
loope
xor
jnp
xor
sahf
aas
mov
inc
mov
xchg
inc
jmp
adc
mov
test
jge
jge
sti
ret
jne
jnp
mov
aas
gs
mov
ret
notb
push
cmpsl
imul
xchg
mov
add
xchg
scas
aad
and
popa
lods
in
dec
scas
jle
add
pop
jle
dec
and
fwait
out
mov
dec
rolb
fildl
mov
popf
dec
mov
cmp
sti
add
sbb
mov
mov
scas
jl
loopne
pop
and
dec
sub
imul
vmovd
sbb
push
sbb
and
hlt
mov
ljmp
xor
leave
scas
pop
cwtl
adc
mov
test
orb
xor
jae
pop
data16
mov
lock
mov
push
ja
or
jecxz
movsl
sti
adc
dec
jmp
test
in
mov
loopne
jge
adc
scas
lods
mov
arpl
jecxz
and
outsl
leave
cltd
sub
imull
andl
jp
cli
mov
mov
push
dec
orb
ja
xchg
pop
dec
in
aad
je
stos
negl
jns
sub
repnz
cld
jle
sbb
pop
call
addr16
push
repnz
pusha
daa
sbb
dec
push
test
xor
mov
loopne
jmp
or
and
cmpsb
jg
pusha
pop
ret
push
xchg
jnp
mov
leave
sbb
cwtl
cmp
mov
xchg
test
std
outsb
push
mov
ss
cmp
and
pop
int3
mov
bound
add
in
mov
add
xchg
adc
scas
push
pop
cs
xor
xchg
enter
sti
lcall
in
mov
mov
loopne
arpl
repz
mov
and
sbb
push
dec
ljmp
add
jns
je
inc
adc
in
or
mov
js
sub
sbb
sbb
shll
movsl
out
or
jge
push
and
shl
pushf
push
inc
sti
sub
shrl
mov
aam
mov
stos
mov
sbb
hlt
sbbb
leave
icebp
xchg
xchg
movl
lea
mov
stc
cmp
push
arpl
push
push
in
cmp
dec
cmp
flds
xor
stos
daa
fistpll
sahf
popa
and
mov
test
mov
sub
push
cli
fnsave
mov
imul
scas
xor
inc
repnz
mov
out
xchg
jle
inc
sahf
jle
pop
imul
jp
int
pop
lcall
loopne
adc
sub
inc
lahf
dec
push
mov
stos
xchg
jp
cmp
xchg
adc
fs
out
pop
fisttpll
enter
hlt
push
pop
dec
daa
pushf
add
int3
mov
sbb
hlt
test
and
mov
lea
inc
or
mov
pop
mov
in
xchg
push
push
sbb
aas
or
mov
sub
aas
inc
lods
in
push
push
ret
mov
arpl
je
pushf
jg
test
imul
mull
hlt
or
cld
bound
or
in
dec
imul
jecxz
ja
fs
insl
out
pop
mov
mov
lea
jecxz
jg
adc
scas
bound
cmp
adc
adc
fnstsw
bound
fadds
fstpt
out
jbe
in
jnp
mov
pushf
pop
loopne
push
xor
nop
movsb
xchg
cmpsb
mov
insb
sub
jne
mov
addl
enter
add
pop
fidivrl
sbb
adc
paddb
add
pushf
mov
mov
js
jmp
push
in
jne
push
repz
jmp
dec
jl
lcall
mov
or
cmp
out
imul
js
xor
push
and
or
push
push
fidivs
cmp
fadd
or
pop
scas
aas
mov
test
xchg
jle
adc
push
sub
xchg
add
lods
push
push
pop
test
in
dec
je
pop
pop
push
in
cmc
arpl
js
lcall
inc
push
pop
mov
fnstenv
shl
jae
or
cmp
lret
leave
inc
mov
jle
notl
push
int3
pop
adc
mov
int3
jg
add
mov
pop
xor
sti
ljmp
sbb
pop
sbb
pop
popa
or
and
sub
ljmp
lea
mov
out
test
push
cli
orb
sbb
mov
out
pop
push
push
dec
jmp
dec
adcl
cmpsl
shrl
movsl
sub
and
mov
cli
add
add
mov
test
mov
fildll
xlat
jo
xchg
push
or
cmc
sahf
int
jle
jns
loop
cmp
mov
shrb
push
inc
addb
sub
add
imul
adc
and
sti
and
es
aas
aam
push
or
add
push
dec
mov
jecxz
mov
push
imul
test
jp
fbstp
sub
adc
mov
out
inc
popa
sub
mulb
jp
add
fdivrs
rcrl
jns
lret
lock
addb
movsb
gs
xor
test
je
insl
cltd
jb
jmp
rdpmc
push
pop
or
shrb
sub
mov
ds
dec
xchg
sbb
shll
bnd
scas
cmp
or
sub
jge
jo
lahf
mov
sbb
mov
shrb
and
inc
sub
push
or
cmp
add
pop
scas
outsb
aaa
sub
in
out
cmp
push
mov
mov
insb
mov
mov
cs
sarb
lea
adc
jns
or
scas
xchg
ficompl
mull
loop
dec
rorb
lcall
and
testl
insl
adc
push
cmp
xlat
or
outsl
jno
xor
imul
mov
fiadds
inc
enter
out
pop
or
gs
dec
inc
outsb
imul
mov
scas
sub
in
ljmp
ret
in
test
mov
dec
xor
cmpb
bound
dec
cmp
add
mov
dec
pop
jle
push
or
and
bound
mov
sti
fstl
hlt
mov
push
adc
clc
adc
stos
aam
jns
mov
jecxz
ss
pop
fcmovne
sbb
leave
sub
arpl
daa
mov
fstpl
test
xchg
sbb
aam
orl
cmp
sub
xor
jg
mov
and
fisttpll
and
cmp
or
call
push
mov
movsb
mov
pop
nop
ds
mov
es
jecxz
int3
lret
icebp
or
jno
cmp
push
popa
lods
jg
push
push
mov
mov
push
xor
ret
xchg
ficompl
jbe
pop
jecxz
test
xor
fs
test
mov
or
sar
pop
mov
jge
adc
lret
cmp
lods
pushf
xchg
push
cmp
insl
inc
push
in
fstpt
aas
int3
in
dec
add
push
pop
push
adc
dec
cli
or
stos
mov
or
shl
mull
in
push
pop
sbb
mov
pop
sbb
mov
sbb
in
lock
outsl
loope
xchg
add
sbb
adc
sahf
sar
lea
nop
jecxz
mov
pop
sbb
icebp
push
or
add
dec
xchg
or
mov
frstor
stos
jne
add
int
cmpl
popa
popf
mov
push
pop
daa
mov
out
push
xor
mov
inc
test
adc
mov
xchg
aas
out
cwtl
clc
je
mov
inc
out
add
push
mov
jp
fs
test
sahf
pusha
mov
push
sbb
outsb
int
jecxz
xor
and
cmp
ss
push
shll
and
mov
aad
pop
hlt
test
mov
into
cmpb
add
or
fimull
mov
pop
es
ja
andb
in
imul
insb
ss
fs
mov
sbb
mov
shlb
sbb
dec
xchg
add
aaa
mov
daa
les
add
mov
jbe
cmp
lods
adc
ret
push
push
out
dec
in
xchg
sbb
sbb
pop
mov
xor
sub
adc
repnz
imul
adc
push
es
sbb
stc
mov
or
shlb
sub
data16
mov
xchg
test
test
ret
add
xor
mov
push
imul
xorb
or
fs
pop
imul
gs
fbstp
insb
out
scas
in
mov
xchg
jns
push
xchg
lods
push
test
push
jne
pop
lret
mov
mov
aas
stos
or
xchg
pop
cmp
jbe
xchg
lock
fsubrs
into
jnp
xchg
aad
insb
pushf
push
pop
cwtl
rcll
and
jle
fs
sub
loopne
pop
insb
cmp
cltd
jp
or
fdivl
bound
pop
daa
fs
or
je
cmp
sbb
add
hlt
pusha
shrb
jl
outsl
jp
out
sti
mov
mov
push
jmp
icebp
das
das
mov
jp
mov
ja
stos
in
adcl
inc
pop
push
aaa
nop
pusha
data16
gs
pop
outsl
sahf
mov
aam
hlt
sub
mov
hlt
dec
outsl
mov
clc
je
fcoms
adc
stos
lds
push
xchg
movsl
mov
xor
sub
sbbb
push
mov
dec
cli
jp
gs
leave
je
shl
cmp
jae
scas
or
inc
push
outsl
cmp
xchg
mov
andl
push
adc
and
divb
sbb
stos
sbb
inc
out
mov
stos
outsl
imulb
add
dec
sub
cmp
mov
push
negl
inc
roll
dec
pop
popf
jmp
xchg
pusha
xchg
xor
es
into
test
shr
push
icebp
lret
pop
inc
mov
inc
repz
movsb
cmpsl
push
mov
add
scas
andl
add
das
sbb
cli
fnstsw
push
add
cmp
stos
into
flds
test
pop
jo
xchg
xchg
loop
mov
les
jle
inc
cwtl
fmuls
pushf
out
montmul
cmpsb
ret
jne
jne
arpl
test
add
mov
dec
test
sbb
sub
insb
push
aad
cmp
mov
and
cmp
imul
dec
xchg
pop
jno
and
pop
js
orb
push
mov
dec
inc
xor
xor
or
pop
in
sub
push
jo
or
decb
sub
and
sbb
push
adc
sub
imul
or
push
sbb
mov
add
dec
sbb
sbb
cmpsb
cmp
add
leave
push
movsb
jbe
lcall
movsl
jae
outsb
push
pop
sub
pop
pop
lcall
mov
xor
clc
and
add
dec
cmp
mov
cmpsb
adc
les
sub
dec
add
rclb
xchg
mov
adc
test
out
loopne
lods
ja
cld
cmpsl
and
pop
and
xchg
fisubrs
or
aaa
cld
mov
jge
cmp
sbb
xchg
testl
cmp
or
sub
mov
sbb
aas
mov
xchg
scas
pushf
loopne
insb
nop
out
scas
test
mov
pop
add
xchg
dec
int3
pop
mov
add
ret
pop
loopne
jg
sbb
lods
pop
mov
in
jmp
orl
pop
lods
stos
faddl
and
adcb
pusha
or
std
and
outsl
fdiv
repz
incb
sub
or
adc
lea
in
int3
fisttpll
sub
sbb
mov
arpl
sbb
out
imul
pop
mov
push
pusha
cmp
jmp
and
dec
fwait
and
std
push
test
mov
cmp
or
out
dec
cli
cmpsl
adc
sbb
push
dec
call
bnd
jne
inc
into
mov
inc
jb
ret
aam
repnz
jb
stos
jmp
push
sarb
push
out
aam
mov
sub
call
or
dec
imul
cmpsl
test
adcl
adc
in
push
jae
cmp
fcomps
cmpsb
das
nop
int3
shlb
popf
mov
add
leave
fwait
xchg
xchg
movsb
or
andb
pop
mov
cmp
push
and
aam
mov
std
cmc
jb
sti
push
out
push
in
cmp
mov
lret
scas
sub
shlb
mov
and
sbb
sbb
xor
inc
mov
sbb
push
xchg
mov
cmp
mov
xchg
or
sarb
sbbb
adc
xchg
push
or
fbld
outsb
fmuls
inc
inc
arpl
adc
leave
imul
or
xor
and
sbb
mov
in
popf
dec
push
fidivrs
cli
xorb
jbe
inc
mov
xor
fcomip
enter
pop
pop
sbb
test
pop
inc
mov
dec
cmpb
mov
push
inc
clc
push
jle
fwait
mov
fisubrs
pop
cltd
icebp
cld
shl
subb
xchg
mov
lods
xor
adc
inc
add
int3
or
sub
hlt
andb
addl
push
sbb
rorb
mov
fucomip
mov
test
cmc
ss
cltd
adc
sub
int3
int
lds
cs
scas
cwtl
lcall
mov
insl
sbb
int3
inc
xor
iret
pop
pop
cltd
clc
cld
je
js
sbb
xor
mov
jns
push
and
aaa
inc
cltd
mov
mov
xchg
cmp
mov
cmp
mov
ss
out
push
add
lea
test
rorb
xchg
push
subb
add
test
mov
inc
pop
jle
je
jae
sbb
inc
sbb
fcomp
popf
adc
aaa
mov
fwait
das
and
adc
and
mov
loopne
push
inc
mov
sbb
in
subl
cmp
push
pop
xor
push
adc
pop
mov
rol
repnz
aas
push
add
das
add
xchg
push
push
mov
loopne
lret
pushl
sbb
ret
xchg
pop
jb
cmp
and
fcoml
xchg
jmp
sarb
rcll
mov
mov
dec
jae
adc
cmp
loopne
mov
xlat
popa
mov
and
adc
add
jnp
loopne
fs
hlt
mov
or
movsb
dec
faddl
xchg
cmp
and
add
add
stc
adc
mov
mov
jl
mov
mov
mov
mov
xor
pop
enter
xchg
fwait
out
cmp
dec
cld
aad
jno
and
out
push
or
fsubrs
test
push
and
mov
add
inc
sti
xor
pop
xchg
int3
cmp
add
mov
xchg
sti
test
rcr
sub
xor
mov
test
inc
xor
pop
movsb
sti
test
jl
outsb
xchg
sub
pop
jecxz
ss
out
mov
pop
scas
jl
imul
int
jbe,pt
out
add
test
mov
incb
or
cmpsb
call
fcmove
adc
sahf
lret
inc
dec
les
stos
decl
int
in
cli
out
ja
leave
dec
aas
add
dec
pushl
fwait
outsl
out
cli
lcall
loop
sarl
imul
ljmp
in
aas
sub
filds
cmp
adc
fisttps
pop
xor
std
out
pop
pop
mov
and
loopne
jl
sub
mov
add
push
gs
fnstcw
xor
rorl
adc
or
cmp
inc
sbb
inc
leave
pop
popf
scas
add
mov
add
adc
mov
cmpsl
jae
inc
dec
xchg
jle
cmp
shll
xchg
push
add
and
cld
in
add
cwtl
push
adc
movsb
push
xor
test
out
xchg
add
sbb
subl
js
mov
ds
cmp
and
js
pop
jne
in
addr16
out
jbe
in
dec
ds
sub
aad
mov
inc
push
lcall
jmp
mov
ljmp
xor
jmp
adc
out
and
ljmp
push
in
movsl
inc
jns
sti
pop
inc
adc
fwait
xor
std
jmp
inc
adc
sbb
fsubrl
adc
clc
push
sarb
pop
jne
fs
sahf
mov
cwtl
mull
shlb
pushf
insl
clc
push
lock
cmpb
adc
sahf
das
mov
out
adc
aad
mov
lahf
mov
sbb
xor
andl
test
xlat
outsb
dec
je
mov
pop
fninit
mov
dec
notl
xchg
test
aad
push
lock
mov
subb
cmp
fsub
clc
sbb
push
shrl
iret
fs
cmc
push
or
mov
rcrb
ret
dec
cmp
lods
xchg
test
mov
mov
fcomps
add
ljmp
pop
and
pop
add
pop
pop
or
rcr
push
in
pop
std
ss
sub
inc
jb
aas
push
xor
nop
call
jp
lcall
cmp
add
in
mov
mov
pop
mov
rep
adc
lret
popf
lock
call
movsb
iret
icebp
into
loope
mov
adc
mull
mov
jnp
lea
sarl
sub
xor
cmp
insl
pushl
stos
scas
ja
mov
mov
inc
mov
adc
jne
in
loopne
or
nop
leave
lods
scas
pop
inc
push
ffreep
lea
inc
xchg
hlt
mov
sbb
inc
push
mov
jmp
inc
mov
in
adc
aad
mov
mov
stc
mov
cmp
mov
mulb
inc
lcall
xor
adc
cmp
test
rcr
pop
mov
scas
mov
mov
int
xchg
sub
mov
mov
icebp
pushf
sbb
pop
xor
jns
outsl
je
leave
out
ja
ja
push
fs
out
xchg
jmp
lds
mov
or
ffree
repz
mov
sti
int3
fcomps
pusha
into
gs
add
mov
jnp
mov
inc
repnz
or
jmp
and
js
and
mov
ss
lret
adc
loop
dec
xchg
xchg
fs
and
dec
out
clc
fadds
dec
imul
cmc
stc
fsubl
inc
rorl
xchg
adc
aas
stos
pop
lret
dec
mov
push
daa
movsl
es
mov
in
stos
mov
add
inc
mov
add
jp
imul
negb
fidivrl
inc
aam
ljmp
add
popf
xor
dec
dec
dec
push
call
divl
aaa
leave
insb
notl
fildll
xchg
pop
push
sbb
pop
mov
aad
xor
outsl
in
repz
js
into
pop
pop
mov
pop
dec
call
push
lahf
pop
xchg
add
pop
mov
outsl
frstor
and
jmp
incb
fadds
loopne
pop
pop
mov
jl
fidivs
aas
inc
pop
and
push
insl
stos
adc
xor
pop
insb
push
mov
scas
or
xor
mov
into
xchg
negl
shll
push
inc
lret
adc
mov
inc
push
clc
gs
repz
clc
scas
mov
nop
sbb
rcl
les
adcb
pop
cmp
xchg
shrb
push
cli
mov
push
mov
xor
ja
int3
jge
sti
or
and
ret
insb
xor
adc
movsl
mov
mov
adc
mov
pop
adc
pop
xor
sub
and
adc
cld
pop
stos
pusha
cmp
mov
jne
inc
jns
jp
bound
xchg
call
push
daa
cmpsl
xor
es
mov
jle
daa
mov
sub
xor
lret
push
sub
mov
into
into
mov
and
mov
aad
cmc
jmp
ja
mov
xorb
outsl
sbb
push
in
jae
cmp
pop
inc
stc
outsb
mov
push
push
jae
inc
sbb
lds
mov
sub
fldl
pop
std
cmpsl
jb
xchg
repz
enter
sub
adc
xchg
das
dec
das
or
add
inc
movsl
fmull
lcall
mov
add
mov
adc
push
stos
push
lret
fbstp
push
out
and
stos
aas
jb
and
fcompl
rorl
cmp
jl
adc
cmp
adc
xor
hlt
mov
xor
xlat
out
rcll
mov
xchg
inc
inc
cmp
sarb
push
mov
mov
cmp
xchg
lock
pop
push
inc
jae
xor
lock
test
js
adc
mov
fildll
push
add
mov
jbe
adc
xchg
cmc
sbb
test
mov
outsb
ljmp
mov
punpcklbw
hlt
dec
shl
mov
sub
icebp
inc
fs
mov
adc
int3
popf
lock
add
jbe
or
lret
mov
test
mov
es
add
lret
mov
xchg
aad
fadds
addr16
jae
roll
mov
fs
mov
mov
mov
adc
jo
dec
into
subl
incb
mov
js
jmp
das
adc
cmovs
test
pop
mov
pop
stc
jae
pop
jnp
iret
repz
aas
xor
xchg
add
mov
and
push
mov
inc
xchg
lret
in
adc
xchg
dec
outsl
incb
mov
imulb
ret
or
or
fisttpl
imul
jg
or
pop
repnz
cmp
pop
xchg
mov
dec
dec
andnps
mov
mov
push
push
dec
dec
inc
ror
or
inc
ret
std
aas
aam
inc
orb
push
les
cmpsb
pop
add
xorl
sahf
sbb
mov
add
dec
fwait
xchg
mov
push
and
push
inc
adc
lcall
jmp
mov
iret
mov
lret
sbb
cmp
and
ljmp
loope
ss
ret
sbb
lods
scas
rorb
jbe
or
shl
fmull
and
jg
aas
push
js
addr16
repnz
pop
adc
pop
cmp
out
fistpl
inc
movsl
int
dec
push
pop
shrl
cmc
mov
sti
inc
daa
movsl
in
test
pop
outsb
fistps
lret
push
dec
insb
adc
add
inc
add
insb
pop
adc
test
pop
les
sub
dec
in
imul
movsl
notl
xor
push
adc
mov
std
jns
push
mov
sub
out
orb
fidivrs
mov
in
fisubl
sbb
addl
movsl
mov
js,pt
out
dec
mov
xchg
pop
daa
movsl
mov
les
outsb
test
sub
test
fildll
je
jg
sarl
jl
sti
scas
in
outsl
mov
cmc
into
push
mov
sbb
adc
inc
xchg
sbb
pop
adc
lods
fnsave
add
xchg
int3
mov
mov
lods
pusha
nop
add
xor
adc
add
lods
stos
sahf
cltd
sub
fdiv
fistpll
dec
sub
scas
aaa
push
xchg
dec
popf
int
lahf
mov
test
call
test
add
lock
add
out
xor
je
sbb
mov
jmp
lods
pop
lods
fisttps
out
jb
mov
push
and
and
xchg
into
mov
push
aam
pop
dec
fs
inc
or
cmp
dec
mov
mov
lds
addl
scas
into
dec
add
xor
cmc
stos
sarb
shll
xchg
sbb
cli
jmp
or
push
bsr
loope
mov
mov
fnstcw
xlat
wbinvd
mov
pop
dec
inc
jne
xlat
aam
jns
outsb
sbb
fcompl
pop
and
hlt
adc
icebp
add
xchg
sbb
nop
adc
cld
fidivrl
jecxz
jmp
sar
xchg
loopne
mov
lods
scas
inc
adc
cmc
or
lahf
mov
insl
clc
lcall
test
movsl
xor
cmpsb
push
or
inc
mov
add
js
out
sbb
ret
fcmovb
imul
adc
outsb
movsl
add
xchg
xchg
xchg
cmp
outsb
dec
fisubrs
divb
inc
push
in
xchg
mov
adc
sar
out
outsb
fldcw
out
sub
subb
sub
ja
cli
sub
pop
mov
jns
lea
add
mov
psrad
mov
lods
pop
leave
push
xor
fildl
adc
pop
lea
push
call
fs
popa
inc
xchg
adc
insl
inc
jg
data16
aaa
sti
pop
mov
into
icebp
ja
adc
sbb
xchg
jbe
adc
cmp
aad
nop
movsl
xor
xchg
loope
add
fs
or
add
into
ret
pop
fldl
push
or
pop
lret
outsb
jp
cmp
idiv
pop
popl
fimull
jecxz
pop
addr16
cltd
aaa
ret
ret
cmp
xchg
and
jae
pop
scas
push
stc
inc
xor
iret
or
dec
mov
xchg
cli
mov
in
add
dec
scas
add
fldl
nop
les
mov
xor
cmpsb
int
mov
out
or
test
push
loop
aad
pop
mov
cmp
pushf
jmp
out
mov
testb
out
inc
out
int
or
dec
int3
push
lods
jo
or
pushf
pop
adcl
pop
xor
int
ja
out
cmp
stos
cmpsl
ret
scas
push
add
scas
sbb
dec
add
ss
or
cmpb
push
loopne
out
inc
sub
popa
scas
cmp
int3
sub
mov
sbb
leave
jae
push
inc
mov
pop
fdivp
jne
push
adc
xchg
jns
mov
negb
cltd
mov
jnp
jnp
xor
arpl
or
ljmp
inc
adc
dec
popa
or
mov
cmp
mov
xorps
xchg
sbb
stos
inc
pop
jne
in
and
mov
mov
add
int3
push
mov
in
lcall
mov
pop
lret
into
xchg
out
lods
nop
psrld
push
mov
and
xchg
std
mov
inc
xor
add
and
lcall
lret
lcall
xor
pop
dec
roll
fistps
aas
or
sub
xchg
or
push
adc
mov
and
inc
and
mov
sbb
jbe
xchg
imul
and
dec
jne
push
xor
sub
enter
popa
cmc
or
test
leave
stos
mov
mov
ljmp
push
stos
mov
fiaddl
or
jnp
pop
lods
and
pop
rep
pop
mov
in
lret
mov
test
out
mov
pop
cli
lods
or
pop
jg
or
dec
or
mov
mov
lahf
lock
imul
xchg
fdivrl
jg
addl
or
dec
loop,pt
or
stc
int3
out
or
pop
or
test
call
dec
ret
int3
xor
sti
out
loopne
loopne
shll
inc
in
les
sub
enter
and
jp
testl
outsb
pop
jecxz
popa
fidivrl
test
mov
pop
xor
icebp
addr16
mulb
and
push
xor
cmp
cli
xchg
insl
insb
or
pop
pop
adc
cs
and
jns
or
xchg
iret
cmp
gs
fisubrl
std
call
lods
xor
and
sbb
aam
loope
cmp
mov
adc
xor
ret
imull
push
xchg
sahf
xchg
mov
adc
std
dec
sarl
mov
xchg
outsl
inc
xchg
xor
xchg
negl
pop
aaa
int
frstpm(287
adc
cmp
cmpb
sub
add
push
dec
je
dec
xor
mov
xchg
dec
mov
mov
es
pusha
outsb
pusha
enter
rolb
lcall
push
push
jle
inc
add
sahf
inc
jmp
mov
cs
into
test
cmc
fdivrs
lea
dec
popf
jno
mov
sub
xchg
in
in
mov
mov
nop
lahf
cmp
insl
xor
cmpsb
js
shl
lret
jge
std
js
outsl
das
lret
xchg
orb
dec
dec
mov
andb
mov
push
jp
jo
arpl
add
ss
pop
daa
sbb
aam
cli
cs
test
pop
in
push
sar
jb
push
mov
add
and
xchg
jge
inc
inc
int
jno
mov
pop
mov
inc
bound
inc
rol
loope
int
icebp
cmc
jl
adc
arpl
aad
add
icebp
cmp
cwtl
pop
fs
and
pusha
popa
outsl
jge
xchg
std
xor
and
ja
out
or
cmpsb
add
and
insb
test
adc
dec
shll
or
daa
xchg
gs
dec
mov
mov
inc
jnp
mov
push
jecxz
push
mov
es
test
dec
pusha
and
cmpsb
xor
inc
pop
insl
xchg
xchg
aad
pusha
scas
and
gs
cmpsl
inc
push
jns
shr
cmp
dec
push
test
cmpsb
cwtl
movsb
mov
cltd
into
stos
nop
andb
pop
mov
sbb
and
or
pushf
pop
cmp
sub
arpl
ds
dec
aam
add
popf
cli
mov
dec
aas
leavew
mov
sub
mov
jecxz
mov
jns
sub
mov
lcall
fisubrl
mov
pshufw
mov
xorl
mov
and
push
xchg
pop
stc
mov
outsl
sub
gs
jne
xchg
leave
ret
stos
sbb
push
jg
adc
out
aas
rolb
daa
aad
leave
aad
es
push
stc
sahf
or
daa
jbe
pop
cltd
cmp
push
adc
pop
ret
push
sarb
aas
push
addl
jl
inc
lods
lret
add
dec
add
out
mov
ret
dec
lock
pop
sbb
pusha
out
dec
imul
imul
cmp
sbb
mov
repnz
or
inc
pop
mov
mov
stos
into
popa
mov
sbb
jle
mov
sbb
pusha
push
dec
arpl
mov
fcoml
push
sub
leave
scas
aad
inc
das
ret
add
fldcw
mov
mov
hlt
push
in
mov
jmp
roll
cmp
lds
pop
mov
mov
rolb
mov
and
mov
jns
outsb
call
pop
call
movsl
pop
mov
xchg
fistps
std
aad
mov
ja
sub
insl
cmp
and
sub
and
pop
outsl
cmp
mov
xchg
imul
aas
bnd
lcall
pushf
jmp
adc
cmpl
mov
in
stos
int
enter
pop
xor
push
jbe
or
pop
fdivs
and
adc
repnz
dec
out
in
loopne
inc
in
sbb
ljmp
fadd
push
loopne
pop
mov
add
daa
mov
sahf
adc
ret
in
inc
jnp
jecxz
scas
and
or
lods
sbb
jmp
and
repz
add
call
mov
jge
in
add
lods
cli
fcomps
in
data16
adc
xor
bound
cmp
inc
xchg
xor
insb
loop
mov
cmp
xor
mov
ss
mov
daa
arpl
hlt
or
dec
jnp
sub
pushf
jo
popf
mov
imul
push
add
sbb
mov
pop
sahf
or
dec
push
pop
mov
cmp
and
xchg
mov
xor
sahf
lods
loopne
pop
jbe
sahf
loop
sahf
push
int3
ss
adc
shll
push
xchg
out
push
test
pop
mov
inc
rolb
stc
js
inc
dec
push
test
cwtl
xlat
subb
jb
cmp
pop
int3
mov
stos
int3
xchg
popa
sub
int3
loope
fistpll
loope
loopne
popaw
and
xchg
lock
in
loope
mov
inc
aaa
inc
ljmp
cmp
loop
xlat
cs
adc
inc
repnz
loope
push
or
inc
jmp
cmp
dec
test
lds
pop
movsb
jp
imul
add
xor
push
mov
xorl
outsb
jo
test
jo
out
jo
movsl
push
mov
jmp
daa
pop
add
aad
test
cmpl
or
sahf
mov
mov
scas
popf
add
sbb
lods
dec
mov
mov
aad
push
inc
jb
popa
cmpsb
sbb
and
push
out
push
leave
cmp
pmulhw
pop
cmp
or
xorb
icebp
xor
adc
pop
add
pop
xor
insb
and
sub
or
cmpsl
adc
test
leave
call
pop
mov
xorl
push
aad
mov
pop
pop
out
cmp
fisubrl
xchg
xchg
mov
push
mov
pop
add
ret
jmp
jmp
ljmp
fisttpll
mov
in
sub
aas
je
pop
mov
push
jmp
in
jmp
icebp
mov
fidivrl
mov
lcall
mov
push
sub
ret
fsubs
cmp
jbe
jge
xor
xchg
insb
dec
or
std
and
repnz
cmp
mov
sbb
in
shlb
lods
movsb
adc
hlt
dec
daa
or
sub
adc
fs
jp
shll
or
fnstenv
lods
jmp
ret
outsb
scas
sub
lcall
inc
adc
sbbb
pop
shll
jae
out
cld
and
dec
sbb
mov
dec
addr16
sbb
lds
lods
fnstcw
jge
scas
mov
push
in
in
lods
mov
sbb
stc
push
lret
flds
sahf
and
mul
adc
xor
es
cmp
jns
xor
in
push
jnp
jmp
jge
add
push
sahf
dec
shll
negb
sahf
add
cmp
cmp
jno
fs
aad
xchg
adc
es
mov
inc
sub
cltd
aas
lods
das
repz
sti
push
je
cmp
sub
rclb
mov
test
pop
test
jo
out
adc
mov
mov
mov
mov
lret
cmp
stc
xchg
push
mov
push
in
dec
mov
fcomi
daa
mov
shlb
dec
sbb
mov
cmp
inc
shlb
xchg
fdivs
push
xor
pop
mov
subb
pop
into
out
aam
mov
or
xor
cmp
mov
test
scas
adc
sub
in
mov
into
mov
xor
iret
aas
sub
test
push
pop
arpl
dec
je
inc
mov
fs
push
roll
cltd
jge
lock
xchg
and
mov
gs
stc
cmp
adc
mov
jbe
mov
mov
cmpsb
repnz
mov
aas
push
lret
jmp
rclb
xchg
shll
lds
fiaddl
int
and
das
mov
xor
dec
fisttps
jge
call
or
or
xchg
popa
das
lods
dec
hlt
stos
cmpsb
mov
fadds
sbb
enter
jb
hlt
das
pop
mov
jno
scas
and
inc
push
out
fucomi
jle
repnz
xchg
jnp
dec
ror
ret
fucom
xor
jg
jg
push
adc
fs
or
dec
and
cmp
fimuls
inc
nop
cld
cmpsl
mov
xchg
and
dec
jb
mov
imul
adc
jg
cltd
mov
filds
sbb
jne
mov
movb
or
das
repz
sbb
mov
sub
insl
test
gs
add
xor
xor
cmp
clc
test
mov
jae
in
out
leave
and
push
and
jge
cmpl
rorl
scas
pushl
roll
outsl
xchg
cltd
out
sub
loope
fsub
into
cwtl
js
or
aaa
xor
jo
add
pop
or
jns
movsb
aam
or
stos
mov
mov
dec
cmp
addr16
lock
jb
dec
fwait
jecxz
popf
int3
daa
and
jne
aam
inc
test
aaa
jnp
jnp
and
or
je
jbe
imul
cli
iret
popa
xchg
inc
jne
inc
and
shlb
mov
inc
jne
mov
test
icebp
inc
mov
pop
pusha
mov
sbb
mov
xorl
sub
add
imul
loopne
icebp
mov
gs
pushl
inc
lret
outsl
mov
cmpsb
push
icebp
nop
popa
add
movsl
jp
push
cmp
add
inc
cmp
cmpsl
fistpl
xor
push
jge
inc
out
pop
xlat
insl
mov
xchg
sbb
sub
aas
inc
jmp
fimuls
lcall
sub
pop
in
test
rcll
iret
rclb
dec
aas
pop
ljmp
add
lock
sub
iret
lods
pop
aad
jne
es
xor
pop
mov
jl
pop
hlt
cmp
mov
jmp
cmpb
and
mov
push
imul
push
rcrl
push
mov
push
in
mov
sbb
aad
xchg
xlat
hlt
jmp
cltd
loope
push
cmp
inc
mov
jecxz
sbb
jle
nop
hlt
loop
jb
push
out
bound
sbb
mov
ja
movsl
std
jne
sbb
and
pop
sub
and
push
xchg
out
hlt
sub
insb
pop
lds
outsl
inc
jecxz
jb
das
push
mov
mov
roll
mov
push
lods
xchg
mov
dec
push
or
cwtl
cs
stos
cmp
or
call
add
xchg
cmc
rorl
movsl
pushf
mov
cmp
nop
inc
and
adc
adc
lcall
inc
popa
sbb
dec
jae
leave
mov
sub
mov
cli
or
pop
cmpsl
or
jno
fsubl
and
push
inc
in
ss
dec
add
add
jnp
ds
je
pop
ja
pop
mov
fs
jl
cwtl
cmpsl
push
insb
adc
inc
add
xchg
and
xchg
sub
cmp
dec
cmc
leave
lahf
subl
jb
mov
push
inc
jns
mov
cwtl
movsl
cmp
fbld
ljmp
rsm
sub
int3
fldz
xor
shl
ljmp
mov
mov
or
outsl
repz
das
fdivs
xor
pusha
in
mov
sti
pop
dec
jno
dec
cmp
mov
retw
mov
xchg
vpshuflw
mov
hlt
push
mov
or
sub
dec
sar
andl
xor
sbbl
dec
inc
jle
imull
out
add
cmpl
les
sub
pop
stos
sbb
ret
shl
imul
jae
out
add
xchg
imul
mov
cmp
fistl
daa
lods
out
or
pop
outsb
mov
or
cmpxchg
push
push
insb
addb
hlt
sbb
out
lock
xchg
dec
es
xchg
push
and
sbb
adc
mov
in
push
imul
mov
dec
pop
jmp
outsl
mov
call
out
sbb
xlat
inc
pop
jg
pusha
jno
fcoml
jo
int3
mov
mov
push
gs
shrb
push
pop
rcrb
adc
jbe
inc
pop
repz
xor
dec
dec
addr16
inc
mov
add
dec
cltd
push
std
daa
dec
in
inc
mov
inc
push
pop
movsb
clc
sub
xchg
loop
outsb
int
cltd
ret
jne
xchg
adc
mov
outsb
dec
lea
adc
fwait
sbbb
sub
push
xchg
mov
mov
mov
daa
movsl
xor
in
out
or
mov
insb
js
mov
out
in
lcall
inc
aas
or
rcll
stos
jp
roll
xchg
sti
stos
sbb
in
and
int3
dec
fldenv
adc
adc
push
arpl
movsb
inc
and
xor
cmp
roll
jbe
and
lret
cli
dec
mov
outsl
sub
cmp
jmp
lods
mov
adc
xor
lea
stos
adc
mov
imul
sub
in
call
insb
mov
jmp
cwtl
lcall
out
ficoms
xor
outsb
icebp
add
fwait
mov
fs
add
lret
push
pop
int
adc
and
sub
mov
xchg
xchg
and
push
out
mov
mov
test
dec
stos
insl
insl
mov
imul
out
das
or
inc
mov
sbb
xor
push
add
in
mov
cmpb
or
testb
mov
add
pop
and
dec
xchg
cld
jp
addr16
jae
aam
stos
lea
xchg
cmpsl
mov
push
or
je
mov
sbb
test
pop
pop
push
into
pop
nop
mov
xor
mov
je
adc
scas
vcomisd
jmp
push
xchg
xorb
or
aas
mov
lcall
lea
dec
mov
cmc
jno
pop
repz
push
sbb
jbe
push
dec
out
cli
mov
push
fimuls
fs
test
fildl
push
iret
mov
fcompl
pop
push
out
lock
sbb
stc
lods
aam
sti
and
fistps
mov
pop
pop
int3
inc
sub
ret
and
cmp
add
pop
fmuls
mov
div
in
jge
mov
mov
sub
mov
xor
addr16
cmp
mov
cmpl
push
cmpsl
and
jle
out
scas
xchg
mov
xor
lods
or
insb
popa
shll
js
jecxz
xchg
dec
mov
ljmp
xchg
mov
inc
sub
push
xchg
sbb
loop
loope
cmp
adc
pop
movsl
fidivrs
daa
jb
dec
aad
add
add
add
and
pop
and
fildl
cmpl
pop
out
lds
pusha
aaa
dec
call
inc
mov
jno
and
push
sarl
rcll
jnp
pop
scas
xlat
sub
xchg
or
int
cmc
insl
cwtl
test
mov
mov
xorl
or
mov
test
jo
cs
mov
mov
les
les
in
test
das
outsl
das
pop
mov
in
lds
pop
jp
push
inc
sbb
pop
jmp
les
xchg
jg
scas
add
stos
lret
mov
loope
sti
pop
xor
repnz
lock
cmp
ljmp
sub
add
pop
cmp
dec
mov
sub
xchg
mov
xchg
mov
jns
pop
add
into
inc
outsb
cmc
pop
loop
rolb
xlat
fsub
sub
inc
xor
dec
out
pop
mov
add
dec
push
push
xor
or
cmc
outsl
cmpsb
pop
dec
mov
lods
mov
mov
xchg
xor
push
repnz
xchg
nop
insl
gs
cltd
cmp
scas
jae
inc
pop
jb
mov
jns
mov
aas
jbe
mov
ret
arpl
filds
repz
mov
sbb
and
in
das
test
rcrl
aam
dec
pop
cld
jmp
loopne
push
push
or
cmp
int
outsb
pop
scas
push
iret
shrl
scas
sbb
outsl
repz
fcomps
jp
bound
filds
add
push
dec
lret
sbbl
stos
movl
test
addb
cmp
xchg
xor
adc
sbb
nop
ffree
js
aaa
lds
mov
sti
push
in
mov
inc
pop
repz
popf
lahf
sub
pop
in
ffreep
test
lret
sbb
les
inc
insl
js
andl
rclb
cmp
icebp
xchg
mov
pusha
mulb
ja
sub
lods
and
mov
xchg
jb
mov
test
lods
adc
sbb
add
pop
in
mov
pavgb
in
lcall
das
fstpl
inc
imul
dec
mov
mov
mov
mov
rcrl
test
into
jle
add
add
cmp
dec
mov
je
test
sbb
into
and
dec
and
inc
aaa
inc
daa
movsb
push
jne
leave
leave
pusha
orl
stc
sbb
pop
mov
or
cmc
mov
int3
les
or
mov
mov
mov
out
or
jg
out
fisubrs
or
data16
inc
nop
xchg
pushf
push
mov
rcl
movsb
xchg
mov
adc
mov
mov
jns
pop
sbb
into
or
int
rorl
jno
js
sbbl
inc
and
pop
sbb
pop
nop
xchg
cld
push
nop
push
mov
inc
insl
ret
mov
xor
insl
sub
mov
inc
push
cli
call
and
mov
mov
jnp
daa
mov
and
pop
lods
or
dec
subl
cmp
ror
cmp
jl
adc
test
cmp
loope
psubd
popa
pushf
sub
fildl
mov
andb
lds
mov
push
cltd
clc
insl
out
xchg
sbb
insl
and
repz
adc
mov
repnz
pop
sbb
xchg
xor
cmp
xchg
dec
fdivr
lds
sub
sub
das
lock
enter
mov
xor
add
mov
pushf
ss
sbb
mov
pusha
shlb
lahf
push
lahf
fisubrs
pop
and
mov
jle
pop
addr16
mov
imul
std
mov
sub
insl
push
inc
inc
scas
les
lds
mov
loopne
jg
push
lret
daa
test
and
test
fidivrl
jae
roll
mov
xchg
sub
pop
adc
sub
lea
inc
and
mov
xor
das
stos
aas
dec
mov
lods
mov
add
push
rclb
stc
xchg
push
adc
out
lcall
data16
in
out
and
or
push
cwtl
sbb
js
test
inc
repnz
mov
add
fisttpl
aam
inc
mov
lret
inc
popa
mov
push
and
loop
cmp
push
add
mov
out
fstpl
out
movl
xchg
loope
and
fcmovbe
sti
pop
xor
jno
xchg
sbb
push
divl
cwtl
or
dec
mov
cmpsb
int3
aaa
push
cmp
pop
jecxz
cwtl
ret
and
inc
aaa
imul
dec
dec
dec
lret
hlt
xchg
inc
jo
sub
scas
fwait
pop
and
aas
test
sub
inc
movsl
and
mov
and
add
mov
and
lea
fsubs
movsl
add
mov
wbinvd
mov
sbb
mov
cmp
and
mov
data16
cmc
inc
pop
mov
jle
ja
dec
addb
shll
call
call
push
sbb
out
sub
hlt
jmp
or
mov
mov
pop
push
fwait
pop
fwait
pop
push
js
sub
std
adc
and
mov
aas
pop
jno
add
pop
push
xor
sarb
jno
add
cvtpi2ps
cmp
mov
std
int3
mov
add
sti
es
jbe
and
sub
jno
int
xor
pop
jp
arpl
outsl
shl
fwait
jb
sbb
sar
popf
cmp
xchg
out
out
data16
xchg
andb
push
add
sbb
mov
sub
jne
rcl
add
in
mov
or
imul
loopne
test
and
add
int
add
jecxz
inc
add
test
push
and
sbb
inc
enter
aam
into
xor
sbb
mov
mov
rcll
inc
jecxz
mov
mov
sub
mov
and
mov
pop
in
cltd
inc
popf
cwtl
jnp
mov
loope
push
xor
or
mov
mov
adcb
jl
inc
inc
call
jge
and
pop
into
xchg
out
testl
push
or
in
popa
aaa
sbb
leave
lods
sbb
pop
mov
into
rolb
xor
cmp
andb
icebp
xor
test
cmc
inc
cwtl
xchg
and
pop
lods
in
mov
xchg
mov
fldcw
push
aas
sbb
cmpsb
test
jbe
jg
js
xor
sub
pop
pop
inc
lods
mov
xchg
outsb
xor
adc
xchg
adc
push
movsl
xchg
pop
jle
addr16
cmpb
xchg
lret
fstpl
mov
xchg
enter
mov
cltd
daa
jle
lods
je
sbb
call
lahf
or
mov
fsubrl
xlat
push
std
or
dec
jecxz
shlb
dec
std
sbb
mov
icebp
test
jae
ret
mov
cltd
aas
aas
xor
outsb
fldt
jnp
mov
mov
inc
int
notl
enter
mov
adcl
fistps
mov
mov
lea
or
shrl
rclb
call
cmp
frstor
pop
call
mov
or
into
adc
xor
cmp
out
ds
int
sub
sbb
sub
pushfw
xor
sub
or
xor
push
sbb
dec
fucompp
mov
out
movsl
mov
pop
das
fcmovbe
std
enter
sub
orl
mov
sbb
mov
cli
push
lock
add
mov
xor
ds
jns
sub
cmp
sbb
mov
stos
cmp
add
mov
add
cltd
leave
mov
adc
xchg
jle
dec
xchg
fbstp
inc
out
fstpt
addr16
hlt
scas
arpl
and
add
mov
xchg
pop
mov
dec
jnp
jg
out
imul
mov
outsb
clc
xor
mov
ja
mov
pop
mov
xchg
mov
das
mov
popl
gs
inc
add
js
sbb
jl
jns
dec
pushf
mov
in
imul
pop
lret
insb
pop
jo
adc
sbb
outsl
xor
in
xchg
pop
jo
inc
mov
jl
jmp
mov
in
jle
out
and
adc
or
xchg
dec
sbb
data16
dec
xchg
imul
repz
aas
sbbl
push
leave
mov
jbe
and
mov
xor
ret
icebp
rclb
daa
std
fucomp
inc
push
test
xor
andl
xor
aad
or
xchg
negb
ljmp
pusha
pop
jge
push
movsl
or
jae
push
or
jl
sbb
daa
push
and
roll
stos
fldcw
inc
mov
or
sbbl
sub
imul
mov
adc
out
sub
mov
insl
add
and
dec
je
or
movsl
mov
lret
out
or
xchg
inc
sub
cmp
cmc
loope
imul
rorb
xorb
test
or
call
pushf
loopne
fildl
inc
andb
sub
rorb
adc
stos
mov
icebp
add
pop
mov
out
mov
cmp
pop
push
pop
out
mov
mov
pop
rcrl
push
mov
dec
daa
inc
add
cmc
ljmp
fwait
adc
cmp
jge
xor
jae
out
add
push
add
loop
es
int
fsts
mov
fnstsw
popa
outsl
enter
test
addr16
xchg
scas
or
sub
rcr
xchg
pop
mov
popf
push
std
movsb
push
insl
cmp
lcall
orb
scas
jo
addr16
xorb
xchg
clc
bound
data16
add
int3
daa
mov
jecxz
lods
push
subb
push
xchg
push
and
out
lea
std
mov
or
mov
movsb
cmp
add
lcall
add
ret
stos
cmpl
jmp
mov
cmpsb
sbb
pop
test
xchg
dec
push
mov
push
cmp
mov
pop
inc
enter
mov
shll
js
loopne
add
sub
and
jo
jns
inc
jmp
call
fldenv
ljmp
popa
daa
sub
mulb
dec
pop
pop
lret
test
jnp
sti
lahf
in
out
jb
pop
jo
jne
and
ret
xchg
enter
cltd
adc
mov
dec
cli
cmp
out
ja
es
pop
pop
insl
fdivs
or
push
into
inc
pop
pop
sub
mov
in
and
or
mov
mov
incl
add
lods
inc
negb
pop
ret
bound
sbb
stos
pop
cmp
xor
cmpsb
push
arpl
xchg
sub
xchg
xchg
and
jno
xor
mov
or
sbb
mov
out
adc
repnz
xorb
dec
adc
jbe
lock
inc
jns
ficompl
ljmp
fnop
dec
call
and
jno
sub
out
jno
or
lret
push
or
ret
aas
pop
js
add
cwtl
jae
cmpsb
pop
repnz
fldt
cmpsl
pop
lret
xor
or
inc
das
out
popa
bound
aas
negl
add
inc
in
xlat
sbb
mov
sbb
xchg
lret
aam
adc
adc
test
pop
int3
nop
mov
stos
cmc
js
lods
dec
lret
jle
ds
and
cmp
outsb
pop
sub
ficoms
stos
rcrl
or
nop
adc
adc
ret
jae
in
dec
mov
js
loope
call
and
add
fwait
notl
push
xor
in
and
lods
dec
lea
mov
inc
xchg
dec
cmc
mov
fistpl
dec
sbb
andb
dec
mov
out
pop
je
lret
dec
or
imul
mov
cmpsl
add
and
sub
cmp
jns
scas
imul
ds
mull
nop
inc
les
scas
scas
ret
lahf
dec
mov
lea
cli
sarb
dec
mov
mov
sahf
xchg
imul
cmpsl
orb
sbb
push
add
js
xchg
jmp
outsl
xchg
imul
xchg
push
fidivrs
and
fwait
xor
mov
inc
sub
xor
cmp
jnp
cltd
cli
mov
imul
push
pop
xor
mov
out
pop
jb
push
bound
jle
xor
mov
pop
mov
mov
sbb
into
fbld
inc
jne
mov
mov
lea
jge
or
add
ret
in
ja
mov
out
cmp
sahf
push
mov
push
sbb
dec
push
pusha
jnp
ret
and
jmp
sub
imul
mov
push
adc
push
bound
adc
stos
xchg
xlat
mov
push
inc
aas
dec
add
inc
mov
mov
cltd
xor
cld
jge
int
adc
jo
js
out
jecxz
movsl
leave
scas
cmc
mov
cmpsb
in
push
rorl
test
js
lahf
ds
mov
imul
xor
lret
mov
inc
mov
dec
pop
mov
out
mov
je
xorb
in
iret
shrb
rcrl
mov
stos
daa
cmp
sbb
pop
jge
xchg
jl
std
repnz
push
imul
outsl
imul
lock
sub
xchg
and
mov
add
add
mov
push
jae
sar
ljmp
test
ljmp
pusha
adc
adc
mov
lcall
pop
mov
rcll
pusha
mov
push
fisubl
mov
iret
and
and
icebp
jge
in
mov
out
lahf
mov
loope
xor
xor
xchg
shr
dec
add
int
or
imul
sbb
es
movsb
cli
mov
dec
jge
sub
rcll
jo
inc
adc
lret
push
test
cwtl
outsl
testb
ljmp
dec
pop
jbe
xchg
movsl
mov
cmp
push
iret
mov
test
jb
pushf
iret
xchg
dec
popf
stc
addr16
sbb
cltd
sahf
insl
hlt
dec
movsl
pop
in
in
repz
std
insl
mov
jle
push
jnp
adc
scas
int3
mov
lcall
je
sub
mov
mov
call
aam
pop
bound
fdivl
bound
dec
sbb
jp
movsl
int3
jnp
mov
into
loop
push
iret
das
sub
add
test
repnz
xor
mov
cmpsl
dec
add
loopne
jle
leave
ja
inc
push
out
sarl
enter
dec
test
or
push
and
jg
cmpl
xor
cmp
roll
js
inc
xchg
outsl
pop
mov
mov
mov
cmc
and
test
inc
imul
cmc
inc
add
insb
sbb
or
sub
mov
mulb
rorb
mov
mov
dec
xor
mov
mov
inc
ja
push
cmpsb
adc
add
push
pop
shrl
xor
push
sbb
inc
xor
jg
pop
xchg
rorb
lcall
push
or
and
mov
inc
stc
cmp
nop
outsb
xor
loope
mov
push
or
xchg
jle
jge
incl
hlt
push
cwtl
pop
mov
lahf
ret
ja
jo
mov
push
inc
ret
jno
xchg
xchg
aas
hlt
test
sti
out
gs
iret
mov
roll
bound
mov
lcall
fstps
leave
ret
mov
mov
cmp
pusha
loop
les
aas
or
stos
mov
push
icebp
aas
mov
mov
sub
inc
cmp
push
add
insb
xorb
cmc
repz
cmp
enter
cmp
push
pusha
push
rcrb
jmp
in
cld
pusha
jecxz
lea
jmp
cmp
arpl
xchg
in
test
xchg
cmc
popa
jno
xchg
outsl
lcall
aas
cmp
adc
loopne
xor
adc
icebp
popf
mov
shr
fbld
call
xorb
xchg
mull
arpl
mov
adc
mov
lret
scas
mov
ret
pop
xor
cmp
mov
int3
int
and
inc
inc
adc
out
push
addr16
test
cld
jbe
lret
shll
cmp
roll
push
shl
sbb
xchg
inc
in
or
xchg
daa
push
mov
std
sub
sbb
scas
stc
stos
or
fucom
jae
fwait
add
sahf
and
push
mov
sbb
inc
lods
xor
outsl
dec
adc
icebp
mov
jno
aaa
out
dec
cmc
or
jecxz
or
ljmp
cmc
and
popf
arpl
adc
rolb
stos
xchg
iret
push
xor
sub
adc
adc
pop
lret
xchg
jnp
dec
jno
loopne
leave
pop
push
mov
and
jbe
scas
loope
insl
in
adc
idivl
pop
scas
pop
mov
out
and
pushf
xchg
aas
test
xor
rorb
inc
jl
inc
rcrb
push
mov
pop
push
sub
cmp
test
inc
ficomps
inc
push
add
bound
cs
cmp
hlt
xor
xor
pop
inc
mov
sbb
mov
xchg
pop
arpl
push
mov
mov
fimull
mov
repnz
in
ja
add
shl
add
sub
add
adc
push
lcall
js
mov
movsb
pop
push
or
xchg
jne
mov
data16
sub
pop
jno
jle
imul
movsl
jle
cmpsb
daa
xlat
inc
pusha
dec
fistps
mov
mov
inc
ret
lea
movsl
js
andl
pushf
adcb
in
jmp
dec
les
and
dec
lods
push
arpl
dec
aaa
addr16
fldl
je
jo
pusha
push
mov
pop
xor
mov
sub
cmp
inc
sub
mov
push
mov
add
aam
scas
jne
icebp
lret
jno
out
mov
stos
scas
mov
aam
aam
push
mov
add
pop
outsl
inc
inc
jne
jbe
fimuls
sbb
dec
sbb
test
mov
orps
push
out
repz
dec
das
pop
lahf
iret
rcl
in
jno
or
jmp
popf
jmp
bound
push
scas
jno
inc
xchg
outsb
inc
inc
lods
jns
push
mov
ret
repz
xor
jp
test
adc
stos
push
xlat
movsb
sbb
dec
stos
daa
ja
stos
stos
andb
xor
pop
xchg
dec
sub
pop
addr16
sahf
out
orb
popf
xchg
stos
nop
push
jle
jg
rorb
rcrl
pop
andl
pop
jmp
mov
mov
push
mov
lds
dec
fimull
iret
into
dec
mov
je
adc
adc
dec
push
je
inc
xlat
cli
lods
push
sub
cmp
in
sbb
lret
aam
not
dec
gs
xchg
iret
jnp
mov
mov
sbb
mov
xorl
in
adc
inc
pop
insb
cmp
in
and
xor
fpatan
popf
cwtl
rcl
xchg
ret
addb
rcr
rcr
cmp
nop
sub
aaa
push
inc
aas
add
lds
jb
hlt
and
sbb
cmp
push
out
int3
std
adc
mov
cld
scas
jae
pop
rcl
outsb
addr16
cmp
cmp
sti
cwtl
lods
and
std
jo
pop
stos
jge
sahf
inc
lcall
push
das
lahf
in
loopne
cmp
jg
in
inc
adc
push
rorb
imul
inc
mov
xlat
fwait
dec
and
fs
fcmovne
cmpb
pop
ljmp
arpl
push
lahf
inc
hlt
adc
jbe
jno
and
ss
cltd
call
scas
int
mov
mov
push
insl
aas
push
not
int
cmp
call
push
gs
sub
sub
cltd
inc
pop
cmp
das
rclb
mov
lock
jb
add
mov
jg
or
cmp
and
loop
inc
popa
into
scas
mov
add
pop
arpl
inc
dec
pop
or
stos
stc
nop
std
sti
popa
lea
jg
insl
mov
cmpsw
fisubrs
in
sti
testb
int3
push
dec
stc
ljmp
mov
insb
lods
rorl
addr16
jecxz
pushf
clc
data16
push
adc
lahf
add
rolb
nop
cmp
les
ficoms
add
mov
pcmpgtw
push
lret
xor
inc
sti
sub
cs
jmp
scas
stos
push
jne
fwait
repz
mov
or
cli
outsb
mov
add
xor
pcmpeqw
ret
xor
or
xchg
or
mov
cmp
mov
pop
and
pop
jge
pop
adc
fidivrl
roll
int
loop
insl
push
test
sub
cltd
cmpsl
sub
push
add
cmp
mov
hlt
mov
insb
fcmovbe
cli
stos
scas
pop
mov
adc
rorb
pop
mov
xorb
das
js
fnstenv
or
mov
js
cwtl
adc
cmp
std
cli
fisubl
andl
jne
loop
out
sub
cmpsl
aas
les
arpl
dec
fwait
sub
mov
clc
jo
mov
lods
jmp
bound
in
sarl
push
mov
xor
dec
mov
inc
xchg
jae
pusha
xchg
sbb
pop
test
cmp
rcll
pop
or
cli
out
ret
leave
and
mov
mov
out
pop
sbb
fidivrs
lcall
jg
outsb
lock
ret
xchg
xchg
loope
call
pop
gs
mov
popf
sbb
arpl
jb
cmp
movsl
sbb
adc
jbe
mov
js
cmp
aad
stos
lret
aas
push
test
cmpsb
je
aam
adc
pop
lcall
rep
jp
inc
jns
jp
out
mov
xchg
clc
xchg
sbb
out
mov
dec
insl
jno
mov
loopne
sub
cmp
add
pop
rorb
movsb
movsl
dec
mov
mov
pop
sub
mov
pop
loop
inc
push
mov
fcmovbe
js
cmpb
dec
cld
arpl
mov
jl
jbe
xor
dec
add
imul
cmp
ljmp
pop
test
leave
xchg
iret
popf
inc
nop
xchg
xchg
fiaddl
test
sub
add
fcomps
popf
lods
and
jge
push
test
lds
cmp
ss
adcb
shl
adc
xchg
shrb
out
sbb
fcoml
and
push
push
or
add
add
and
pop
nop
sbb
sbb
notl
jmp
cli
sub
mov
in
outsb
sbb
mov
adc
sti
mov
loope
wbinvd
mov
sbb
mov
dec
sar
nop
nop
popf
fwait
sbb
push
add
jmp
adc
cmpb
mov
mov
inc
aad
mov
or
or
fldl
scas
jae
inc
or
aas
and
mov
mov
in
dec
dec
mov
test
mov
inc
daa
mov
pushf
movsl
xchg
xchg
push
ret
rorl
push
fiaddl
push
pop
dec
adc
push
je
cld
add
or
cmp
jo
or
scas
bound
fsubp
mov
mov
cmp
xor
insb
repnz
mov
aaa
dec
mov
inc
mov
or
ret
sub
xchg
inc
and
data16
ret
push
xchg
dec
repz
push
pop
test
xor
ss
ja
scas
ficompl
out
sbb
cmp
mov
int
flds
mov
pop
aas
fisttps
shll
out
pop
dec
arpl
sub
jno
mov
gs
mov
mul
int3
sbb
mov
loop
cmp
mov
xchg
cmp
fndisi(8087
mov
insl
jg
or
dec
daa
in
call
sbb
ds
stos
sub
dec
sbb
xchg
imull
jle
enter
jle
fdivs
lds
icebp
add
pop
arpl
test
push
ljmp
ljmp
adc
xor
mov
das
sbb
cltd
inc
push
loopne
jae
dec
cmc
loop
out
lret
pop
xor
ds
scas
or
ds
shl
sarl
in
fdivr
mov
pop
adc
xchg
pop
sahf
les
insb
inc
decl
stos
push
and
fildl
push
mov
outsb
lahf
into
dec
fwait
mov
enter
jnp
and
and
adc
mov
nop
insl
rorl
add
fwait
sub
pop
push
adc
je
or
cmp
mov
dec
sbb
ret
push
jne
jo
or
lcall
daa
aaa
clc
mov
fmuls
lret
xchg
out
into
cmp
fcmovnb
lods
jecxz
sbb
xchg
and
adc
call
sti
movsl
mov
imul
adc
or
and
sub
push
pop
vpaddw
inc
dec
or
test
ret
repnz
mov
inc
scas
xchg
dec
fidivl
cmp
ret
cmp
xlat
push
lock
mov
and
shrb
mov
xchg
retw
lock
pop
ror
mov
or
sub
scas
xor
jbe
adc
cld
in
cmp
xchg
shl
dec
mov
ds
mov
int
fdiv
jle
push
es
inc
mov
inc
movsb
xchg
and
shll
xchg
fsubs
or
daa
or
or
out
sahf
jmp
add
add
jo
repnz
jl
mov
das
mov
mov
insb
push
and
cmp
xchg
dec
cmp
xchg
inc
in
mov
rcrl
sub
lcall
dec
inc
inc
xor
dec
xor
arpl
sbb
dec
jbe
sub
insb
jmp
shl
loopne
movsl
lods
or
or
fisubrs
and
test
pop
dec
js
jns
lahf
adc
icebp
test
nop
mov
and
fidivrl
add
jno
cmp
xchg
xchg
cmpsl
and
cmp
scas
dec
and
scas
xchg
jg
xor
adc
mov
out
xchg
jae
ljmp
lcall
cmp
lea
out
cmpsb
push
scas
push
push
orl
ficoms
rorb
add
loop
cmpb
cmp
cmc
insl
enter
mov
jecxz
je
push
pop
inc
stc
xor
jne
inc
call
or
les
dec
test
out
outsb
das
loope
fsts
aas
xlat
sbb
dec
xor
push
adc
lahf
mov
int
xlat
mov
scas
sub
test
or
and
mov
dec
pop
push
hlt
jns
test
incb
ljmp
pop
in
pop
jmp
pushf
sbbb
cmp
mov
movsl
scas
jp
and
mov
sub
sub
iret
sub
into
add
cs
ret
push
leave
lea
jl
push
jnp
sbbb
sahf
jg
iret
adc
sbb
xchg
out
add
mov
aaa
int
rcl
pop
fwait
cmp
mov
clc
sbb
and
and
cmp
stc
xor
in
out
addb
cmp
mov
test
cmpsl
adc
mov
popf
sub
mull
cmc
pop
xchg
cmpl
mov
inc
jo
test
jae
dec
mov
jno
leave
pushf
test
rcrl
pop
push
ret
sti
or
cmp
mov
ja
in
popa
mov
jecxz
push
sub
adc
mov
stc
int3
jns
loope
leave
xchg
fcomps
mov
gs
test
addr16
jge
sbb
pop
jb
filds
lock
jp
movsl
sbb
jp
jo
push
fcmovnb
jecxz
lods
movsbl
not
rcr
pop
repnz
jp
lods
repnz
out
xchg
mov
mov
inc
inc
mov
push
fisubl
mov
hlt
sub
push
fs
xchg
nop
add
pop
inc
out
lds
sub
pop
xchg
pop
mov
mov
xor
xor
popf
xchg
cmp
adc
hlt
lcall
rep
cmp
loop
and
mov
scas
andl
mov
fwait
mov
and
leave
loope
inc
dec
add
xchg
lret
sub
dec
dec
and
or
and
inc
cwtl
inc
or
mov
jno
popa
divl
adc
stc
insb
and
aad
out
inc
shll
les
rolb
pop
mov
and
lret
adc
adc
sbb
cs
cmc
mov
xlat
lea
rcr
xchg
xor
dec
push
fnstcw
out
mov
jbe
imul
std
into
popf
ffree
and
xchg
xor
cwtl
mov
sub
mov
outsb
arpl
sub
or
loopne
gs
push
pusha
xchg
xchg
adc
out
jle
leave
mov
xchg
hlt
lahf
mov
stos
cmp
pop
mov
enter
jmp
mov
jmp
mov
push
adc
out
mov
jp
jns
pop
dec
xor
dec
adc
sbb
push
sub
push
sub
mov
mov
sbb
sbb
mov
or
add
adc
mov
inc
es
cmp
mov
sbb
stc
test
mov
pusha
sbb
adc
movsb
mov
push
adc
cmpsb
mov
stc
xchg
mov
insl
or
lret
jo
xchg
push
add
mov
inc
aas
jp
mov
pop
cmc
mov
mov
lock
xor
push
popa
dec
dec
gs
xor
ja
xor
inc
shrl
or
sbb
call
adc
push
xchg
clc
lods
int3
pop
test
xchg
scas
inc
fucomip
jbe
mov
sub
insb
push
inc
insl
dec
add
pop
bnd
mov
out
leave
dec
xchg
push
and
hlt
in
jbe
cmp
push
mov
stc
gs
aas
sbb
pop
les
mov
test
mov
pop
leave
and
push
loope
mov
jecxz
sub
lock
sub
or
test
scas
inc
xor
fistpll
int
fcoms
or
test
push
xlat
arpl
mov
pop
in
loop
or
cmpl
orl
das
ffree
mov
xchg
or
dec
jne
aas
sti
pop
mov
dec
outsb
dec
jmp
fnstsw
enter
xor
adc
cmp
mov
lds
xchg
mov
or
je
jmp
dec
mov
jae
int3
shrb
imul
or
aam
jno
pop
add
sbb
lcall
mov
scas
push
je
fdivrl
clc
loopne
sbb
icebp
rcrl
aaa
mov
mov
mulb
add
xchg
flds
cs
mov
out
clc
xchg
inc
fisubs
shl
and
repnz
pop
pop
in
and
or
mov
jmp
leave
outsl
enter
cs
or
mov
jns
jge
repz
test
rep
jg
pop
sbb
fwait
shll
ja
or
test
aas
xor
mov
dec
popa
cld
adc
xchg
rolb
scas
inc
mov
shl
loopne
bound
aas
dec
sbb
lock
cmp
lea
push
int
aaa
pop
aaa
sahf
in
sbb
cmp
sbb
pop
fstpl
sbb
jp
nop
int
lea
adcl
push
or
dec
push
sti
xor
mov
push
sub
nop
xor
sbb
sub
mov
movsb
ljmp
inc
push
mov
dec
sti
aas
aaa
imul
and
movsl
pusha
xchg
dec
mov
fld
inc
jle
fcomip
fdivl
lret
stos
movsb
inc
add
sub
mov
lret
fwait
xor
sbb
mov
mov
repz
push
xchg
lret
enter
daa
arpl
inc
jl
imul
add
inc
and
cmp
mov
andb
jo
lods
push
lock
leave
mov
sbb
jb
inc
push
subb
adc
mov
aam
fsubrs
jle
adc
push
mov
cld
cmp
mov
cld
ret
push
fwait
test
lea
sub
mov
cwtl
sbb
pop
mov
out
xchg
lret
xchg
into
and
test
xchg
and
enter
ret
mov
cltd
aad
insb
sbb
cmpsb
jae
test
pop
cmp
fwait
mov
stos
jae
xchg
mov
aaa
mov
jmp
xchg
outsl
pushf
fldl
xor
inc
fs
pop
cmc
mov
sbb
cmp
jg
sbb
dec
in
out
xor
outsb
xchg
lds
cmp
js
mov
aam
jmp
nop
add
aad
dec
loope
lret
andl
test
pop
xchg
add
das
mov
lods
scas
and
js
xchg
repnz
scas
in
lods
or
loopne
add
push
mov
sub
jo
in
out
jbe
mov
xlat
lahf
add
popf
sub
pop
push
test
out
es
cmp
inc
dec
and
xchg
clc
sahf
popf
aad
icebp
std
push
mov
jnp
xor
mov
jae
jl
ljmp
mov
cli
xchg
lods
fidivl
push
mov
pop
mov
sti
add
xchg
stos
fs
mov
mov
pop
pusha
mov
in
je
adc
mov
xchg
sub
sub
xchg
sbb
stc
push
xor
sbbb
enter
xor
or
ljmp
inc
xchg
dec
dec
jns
jb
push
dec
adc
in
hlt
and
fldl
aad
or
mov
jge
stos
push
sbb
stos
xor
cmp
mov
mov
je
xchg
rcll
mov
pop
jb
aaa
mov
mov
push
in
sub
sahf
icebp
inc
mov
and
mov
push
push
in
divb
in
shll
in
xchg
inc
data16
pop
test
xchg
push
push
ja
mov
mov
jle
add
jne
out
int
fisubl
shll
lods
xor
into
jge
adc
cmp
in
enter
add
test
and
jnp
pushf
pop
out
aaa
add
adc
cmpsl
sub
inc
loop
hlt
mov
and
fstpl
cmpsl
mov
add
les
xor
lds
xchg
popa
push
pop
add
pop
mov
push
xchg
sub
in
inc
mov
xor
and
push
cmp
or
inc
cmpsl
fcompl
xchg
and
ret
leave
jns
xor
mov
mov
stc
pop
xchg
dec
mov
pop
cmp
mov
pop
xchg
push
les
mov
or
aad
sbb
and
sub
push
lahf
addr16
xor
mov
mov
pop
xorl
stos
cmc
in
sbb
jmp
nop
cmp
pop
sub
stc
xchg
std
leave
loope
adcl
lcall
push
js
imul
lret
jne
das
push
adc
or
mov
or
or
cli
dec
pop
lods
je
xchg
sbb
cltd
aam
outsl
cmpsl
test
mov
inc
jne
pop
sbb
fdivl
mov
mov
loope
push
adc
sbb
outsl
fists
std
add
popa
mov
imul
and
ja
mov
lock
dec
fstps
ret
xor
xchg
nop
inc
ror
mov
mov
push
sub
dec
xchg
aad
stc
cmpsl
mov
aam
fidivrs
mov
push
shlb
and
push
or
xchg
push
adc
movsb
mov
ret
xor
xor
pusha
pop
mov
push
xor
sub
cli
dec
cmp
and
or
repz
push
pop
xchg
addr16
jle
aas
add
ljmp
sub
pop
xchg
cmpsl
in
fists
ret
sub
test
pop
mov
cltd
adcb
shll
nop
rclb
cmp
les
mov
in
mov
sub
xor
cltd
repnz
pop
shl
mov
hlt
jg
lea
leave
mov
cli
mov
stos
dec
popf
lahf
ss
dec
jne
aas
dec
push
dec
loop
les
jecxz
push
dec
jne
mov
dec
adc
pop
xor
stos
mov
jo
mov
lret
inc
and
cmp
or
sbb
cwtl
cmp
xchg
sahf
xchg
push
stos
pop
outsb
out
nop
mov
movsl
cmp
lock
std
pushf
pop
mov
idiv
jnp,pt
sti
mov
fisubrl
lea
xor
dec
jno
mov
pop
scas
lret
les
fstl
sub
imul
arpl
js
or
dec
adc
out
add
adc
repz
add
outsl
mov
push
pop
pop
lods
lahf
adc
inc
add
push
lds
test
sbb
jno
fidivl
push
test
and
testl
inc
daa
add
sbb
pop
pop
cmc
out
pop
dec
lcall
mov
cmp
stos
sti
and
adc
repz
jmp
dec
xchg
arpl
lods
pop
stos
stos
int
xor
or
out
insb
jo
dec
nop
cmp
mov
mov
mov
shlb
dec
lods
test
daa
or
mov
arpl
jge
cmp
lods
sub
or
int3
popl
inc
push
daa
negb
cmp
fs
add
adc
outsl
insl
lret
fs
icebp
add
outsl
fidivs
sti
test
pop
mov
sub
pusha
pop
cmpsb
mov
and
xor
mov
ret
jge
push
sbb
call
lcall
sbb
add
add
push
fistpl
xchg
sub
movb
push
sarb
mov
dec
fadds
lds
mov
jle
lea
scas
sbb
cmp
jnp
sbb
lock
mov
icebp
cmp
push
cltd
call
je
mov
incb
lret
lret
popa
int
cmp
xchg
je
jge
sbb
shl
cwtl
in
aaa
sahf
pop
sub
mov
das
sti
cmp
mov
sbb
leave
and
sbb
dec
dec
adc
jecxz
lea
daa
cmp
pop
pop
add
insl
pop
test
rcr
cmp
sub
inc
addr16
cmp
scas
mov
test
lock
insb
in
push
ljmp
es
mov
pop
cmpsl
js
jb
xchg
pop
jne
call
daa
gs
sbb
cwtl
out
lock
addb
push
test
mov
pop
push
mov
jo
imul
sbb
xchg
insl
clc
jmp
xlat
dec
sbb
push
or
xor
xchg
mov
mov
lods
outsl
push
add
pop
sbb
into
inc
xchg
je
iret
daa
sarb
aaa
into
or
in
test
push
or
adc
xor
fimuls
inc
repz
movsl
sarb
js
shr
jne
bound
mov
repnz
rclb
push
xchg
in
dec
add
mov
cmp
dec
or
popa
adc
ss
adcl
inc
push
leave
enter
pop
pop
sbb
push
cmp
pop
adc
dec
pop
cltd
pop
adc
sbb
cmpsl
push
lds
das
stos
sar
and
jmp
pop
jmp
jnp
pop
cli
ret
fcmovnb
cmpsb
jo
dec
repnz
xchg
cs
cmp
mov
xor
jo
mov
out
pop
mov
leave
pop
push
and
roll
shl
int3
sub
testb
jo
int
lock
jge
inc
movups
add
push
cmpsl
mov
and
dec
adc
movsb
inc
xchg
xchg
sub
movsl
lahf
inc
test
js
in
jg
mov
pusha
jns
mov
dec
pop
imul
push
xchg
in
adc
ror
xchg
jnp
push
xchg
jmp
or
cld
scas
push
dec
lods
sub
addr16
add
mov
push
add
pop
mov
jecxz
add
push
mov
stos
in
or
push
or
sbb
jecxz
dec
ljmp
lret
jle
orb
call
or
sti
cmp
add
push
imul
test
and
lock
fs
iret
mov
dec
cmpsb
add
push
cmc
jb
pop
daa
lock
add
sbb
jbe
mul
xchg
in
insl
icebp
inc
cmp
adcb
push
mov
aaa
mov
imul
cli
es
mov
push
fidivrl
inc
mov
add
or
inc
pop
popf
gs
add
movb
jmp
repz
mov
inc
mov
shll
sbb
sti
mov
inc
and
or
mov
mov
imul
shl
lea
jge
and
repnz
fwait
enter
push
fcompl
mov
dec
jbe
gs
jmp
popf
xchg
pop
mov
out
sbb
daa
pusha
dec
addr16
push
add
test
mov
push
adc
pop
in
or
lret
and
testb
adc
mov
arpl
scas
jmp
dec
fisubl
and
lods
mov
les
lea
repnz
ret
mov
es
icebp
or
adc
and
inc
sub
hlt
and
ret
cmp
jle
sbbb
movsb
push
mov
es
loopne
or
jp
loop
cmp
and
dec
xlat
leave
xchg
push
jbe
ficomps
mov
test
cwtl
rcl
leave
je
and
pop
inc
xchg
adc
cwtl
push
sti
mov
dec
xchg
call
xchg
mov
sub
add
dec
mov
js
lahf
or
repz
ljmp
aam
dec
pop
or
mov
fcoms
xchg
sub
and
sub
out
shr
iret
jp
stc
mov
and
mov
stos
in
mov
xchg
mov
int3
loopne
push
pop
sti
cld
mov
notb
pop
daa
jns
xchg
pop
arpl
fdivrp
fnstcw
dec
xchg
cld
call
push
cwtl
or
cmp
mov
cwtl
pop
loope
scas
mov
nop
aad
mov
xor
pop
cltd
push
in
lret
sub
sbb
gs
mov
sahf
jbe
les
dec
and
test
push
xchg
or
cs
jl
mov
je
std
and
sbb
stos
or
xchg
es
comiss
sub
or
imul
cmp
cmpsb
inc
loopne
jg
fcomp
mov
cld
mov
imul
shrb
test
ret
arpl
mov
cmp
cli
gs
jae
lret
aad
shlb
xchg
lock
dec
xchg
add
in
adc
dec
jp
cmp
jmp
cmp
fsub
jae
decb
jle
adc
fsubp
sub
out
push
dec
into
clc
sub
mov
mov
cld
add
lods
cld
in
mov
mov
adc
jns
sub
dec
das
mov
mov
aaa
sub
xchg
std
jbe
pusha
cmp
mov
sahf
subb
ljmp
mov
mov
adc
in
fdivr
arpl
enter
add
dec
mov
aam
enter
mov
loop
add
xlat
mov
inc
jno
out
aad
jmp
in
xor
jl
or
push
daa
stc
out
cmp
inc
adc
in
repnz
je
jnp
jmp
push
idivl
or
jbe
adc
cli
jl
inc
imul
xchg
or
ret
jg
test
xor
add
fidivrs
stos
xor
fstps
sub
sub
xchg
inc
dec
jae
push
or
push
mov
sahf
rcr
inc
fisubl
aad
xor
and
jb
leave
imul
shlb
into
in
dec
add
lcall
addl
xor
mov
add
mov
loopne
push
or
or
xchg
shrl
mov
add
mov
mov
mov
mov
icebp
insb
and
push
xor
ljmp
push
les
shrb
test
lea
idivb
and
add
stos
mov
icebp
pop
jp
das
jb
xor
add
xor
mov
cmp
cmpsl
outsb
push
sbb
and
xor
push
mov
adc
or
outsb
iret
test
jne
mov
std
or
mov
repnz
cmpsb
mov
jnp
inc
xlat
cmp
pop
xchg
add
mov
add
adcb
stos
sbb
lret
movsl
adc
call
mov
dec
shlb
adc
pushf
add
dec
xchg
es
int3
cmpsb
push
sub
rol
inc
int
xor
stos
stos
or
pop
pop
sub
dec
popf
inc
inc
sbb
sbb
addl
lret
and
mov
jp
fidivrl
pushf
inc
push
sti
popf
insl
mov
in
in
xor
rorl
push
ret
mov
xor
ret
into
icebp
scas
mov
fmul
mov
dec
adc
out
je
insb
mov
xchg
mov
jns
pop
adc
push
add
nop
sub
xor
cmp
fisubl
jl
notl
inc
sbb
pop
sub
push
mov
inc
popa
out
leave
jg
xor
lret
add
xor
pop
nop
mov
xchg
and
sbb
es
out
mov
xchg
lahf
mov
repz
inc
lds
or
lds
add
or
hlt
stos
mov
inc
sbb
test
add
push
jae
out
aad
movl
inc
loope
xchg
arpl
shl
ja
mov
sbb
push
jo
add
clc
mov
jle
fisubrs
inc
subl
aad
and
push
and
loope
lcall
jge
dec
mov
enter
aam
nop
or
jle
int
pop
movsb
add
shl
lcall
sarl
into
or
in
rol
mov
lock
lcall
clc
arpl
mov
xor
lods
xchg
jo
outsb
js
mov
mov
cmc
lcall
and
sub
loope
adc
jns
jmp
xchg
or
xchg
enter
add
inc
pop
mov
lock
dec
sub
sbb
rcr
fidivrs
filds
xor
xor
and
adcb
xchg
push
rcr
scas
cmp
out
outsl
daa
scas
pop
std
aad
jp
mov
push
mov
jae
clc
aaa
repz
dec
lret
arpl
push
pop
outsb
iret
repz
jae
aas
popl
dec
cld
lds
adc
mov
add
filds
or
outsl
ret
int
enter
fstl
or
cmp
clc
mov
cmpsl
pop
out
lret
loope
mov
insl
or
cmp
js
sub
jp
inc
cmp
pop
push
jge
jo
adc
xchg
xor
faddl
imul
lret
jecxz
stos
lods
test
push
lods
inc
shll
test
daa
mov
push
inc
add
je
mov
jbe
xor
adc
fwait
lret
ja
stos
out
in
jl
pop
shrl
and
and
xor
xorl
lret
xlat
mov
push
jns
xchg
out
mov
xor
iret
jne
leave
pop
out
movsl
lock
sbb
cmp
lods
dec
or
xchg
push
repz
mov
cmp
mov
movl
push
js
in
fldl
stc
inc
mov
sahf
ror
scas
pop
or
xor
pop
or
jl
adc
cmp
sbb
data16
insl
push
mov
mov
mov
les
push
insl
cmpsl
bound
dec
cmp
mov
icebp
roll
cmpsl
jbe
cmp
fstps
mov
lret
cmp
in
test
icebp
xor
xorb
inc
lock
push
imul
inc
ficomps
subb
adc
pop
add
pop
adc
sub
push
arpl
pop
mov
test
adcb
dec
int
test
lcall
xchg
mov
in
xchg
xchg
fwait
ret
ja
pop
shl
jno
int
jecxz
mov
sbb
jmp
inc
pusha
imull
push
mov
sub
fcoms
stos
jmp
cmp
mov
outsb
xchg
popf
pop
mov
mov
pop
jl
loop
loope
test
adc
ret
adc
pusha
test
pushf
adc
xor
cmp
repnz
inc
into
inc
sub
daa
mov
xor
inc
lret
lahf
inc
pop
adc
mov
mov
push
push
mov
cmp
sbb
xorb
out
jmp
jb
pusha
mov
insb
lds
mov
call
frstor
or
pop
fdivl
inc
ja
inc
adcl
aas
fsubl
fs
jmp
rolb
stc
fistpll
data16
sbb
rcll
sub
repnz
rcll
fcompp
int3
mov
sbb
popf
das
lret
adc
xchg
fcoml
xchg
mov
arpl
push
push
xchg
std
aas
cmp
sub
aam
xchg
pop
lds
rorb
lcall
mov
lea
cmp
inc
lcall
pop
mov
or
xor
and
jne
xchg
xchg
lds
or
lea
mov
clc
in
lahf
scas
out
pop
cmpsb
push
sub
mov
loope
mov
pop
repz
mov
movl
js
test
pop
xchg
leave
xchg
jp
cmpsb
mov
vmovshdup
andb
inc
rolb
out
shl
jle
pop
xor
inc
pop
mov
jo
jo
cld
lahf
ret
data16
andb
cli
iret
sahf
out
xor
fstpt
lcall
sti
insb
xor
adc
mov
mov
mov
loope
and
inc
call
jmp
add
fnstenv
mov
ret
push
stos
dec
pop
shl
pop
lcall
adc
and
outsb
insl
aam
sbb
push
scas
cmp
dec
rclb
scas
push
dec
stos
mov
xchg
pop
xchg
dec
xchg
loope
movsl
mov
mov
and
dec
xchg
sbb
add
lret
cs
and
bound
xchg
inc
cs
js
out
xor
pop
jmp
and
dec
hlt
mov
pushf
sub
sbb
sbb
push
imul
mov
es
xchg
jo
mov
pop
pop
inc
add
push
push
test
inc
lahf
xchg
xchg
nop
cmp
xor
out
hlt
out
sbb
das
imul
jb
jp
dec
test
jbe
push
testl
or
call
loope
nop
divb
in
or
cmp
fldt
cmp
je
std
mov
dec
dec
es
cmp
xchg
iret
mov
aas
rcrb
test
xor
jmp
sarb
sbb
and
jle
or
xchg
inc
idiv
jle
fsubrs
push
cld
xor
fwait
ljmp
jmp
dec
jge
les
repnz
fadds
cltd
int3
inc
in
lods
lods
add
lcall
outsb
ljmp
jb
insl
inc
movl
sub
push
cmpsb
adc
aaa
out
arpl
mov
iret
sbb
fisubl
mov
and
pop
rol
dec
xchg
xlat
xlat
jl
clc
jb
loopne
iret
xchg
push
sub
pop
push
clc
gs
or
xor
out
add
sbb
mov
adcb
lods
cs
adc
or
cld
mov
add
mov
inc
xchg
lock
xchg
dec
or
dec
loop
push
xchg
cmp
stc
adc
jbe
stc
push
and
xchg
loope
inc
bound
mov
pop
in
push
dec
scas
cmp
mov
pop
test
dec
push
push
push
pop
and
lods
push
fnstsw
movb
xor
add
movsb
daa
insb
cli
nop
enter
cmpl
es
je
dec
mov
cmc
rolw
push
das
int3
add
mov
adc
jp
cs
ljmp
mov
xchg
je
mov
jbe
loopne
movsb
faddp
into
lods
push
mov
and
popw
inc
mov
call
sub
and
rolb
xchg
sub
movsl
xchg
rcrl
cmp
jb
mov
lods
adc
loop
cmp
cmp
subl
cmc
and
inc
scas
cmp
and
push
ljmp
jp
jmp
fincstp
jnp
pop
daa
add
imul
fwait
rorb
sub
push
ret
push
inc
sti
adc
movb
push
aas
cwtl
fs
insb
cli
adc
in
sub
popa
addl
aam
pop
sbb
sub
fldl
pop
repnz
jbe
and
loop
xor
or
aas
repz
loopne
or
int
insl
int3
or
pop
adcl
out
pushf
popa
out
int
cmp
jns
aaa
popl
ret
pop
mov
jns
push
stos
inc
push
adc
adc
cli
rorl
nop
ficomps
add
xchg
xadd
xchg
add
jmp
int
movsl
push
sbb
lcall
and
loopne
inc
shrl
arpl
mov
xor
in
test
cltd
mov
dec
es
arpl
and
cld
addps
add
addb
iret
sti
add
sti
cld
adc
dec
mov
in
shlb
scas
fstl
lcall
xchg
mov
jo
ljmp
jge
imul
jb
arpl
in
sbb
ds
ljmp
mov
xlat
test
stos
mov
lock
loopne
cwtl
xchg
nop
mov
push
mov
pop
shll
arpl
mov
movsb
fxch
test
dec
pusha
mov
ja
xchg
out
pushf
push
shlb
and
stc
leave
jmp
dec
sti
std
adc
cmpsl
xchg
dec
arpl
pushf
call
mov
nop
int
bound
mov
jae
addb
cmp
stos
or
jmp
jnp
cmc
xor
aaa
inc
out
aaa
mov
repnz
dec
push
test
jmp
pop
and
sbbb
andb
into
jp
jle
imul
scas
cmp
fdiv
in
insb
jg
test
add
or
xchg
cmp
mov
scas
push
lahf
in
mov
iret
and
and
jge
hlt
in
sbb
in
dec
mov
add
mov
sbb
imul
cmp
xor
movsl
sbb
das
push
jae
aam
adc
push
push
and
enter
adc
mov
das
fldenv
xchg
das
out
add
cmpsb
pop
push
popw
push
arpl
sub
fimull
mov
push
pop
dec
mov
lea
pop
out
add
mov
mov
cs
jmp
pop
or
mov
inc
clc
cmp
fs
and
dec
cmpsb
stos
enter
sub
pushf
addr16
xor
sbb
clc
dec
lcall
ja
out
out
leave
addl
sub
mov
mov
pop
adc
sbb
flds
je
gs
mov
mov
adc
dec
sub
dec
cltd
adc
mov
mov
or
stos
push
add
sub
test
mov
adc
pushf
sub
or
jecxz
mov
ljmp
mov
or
lcall
inc
fs
dec
popa
int3
adc
mov
and
test
psubusw
cmp
test
cmc
sub
xor
push
lcall
xlat
sarl
pop
call
pop
ljmp
push
insb
sub
test
les
mov
xchg
fildll
aam
add
mov
pop
cmp
xchg
movsb
insl
jge
lock
add
push
into
fdivrs
imul
outsb
dec
nop
push
repz
cmp
add
lret
xor
mov
mov
cmp
dec
lods
out
sub
nop
mov
mov
cwtl
es
lods
dec
jno
xchg
jnp
or
in
test
mov
mov
dec
sub
xor
cmpsl
push
scas
data16
mov
sub
daa
jnp
std
fs
xor
fcmovne
shrl
test
test
mov
mov
loope
fisttpll
imul
push
cld
movsl
cmpsb
aas
inc
or
scas
adcb
mov
jne
sub
xchg
pop
xchg
imul
rcll
clc
insl
lcall
lods
sub
or
pop
push
xchg
cli
lds
push
mov
bound
mov
popl
mov
std
pop
mov
in
repz
push
push
into
mov
dec
mov
cmpsl
pop
add
leave
mov
test
xchg
popf
mov
sbb
loop
mov
ror
mov
xchg
cli
lods
lods
adc
aam
aad
xchg
dec
cld
cmp
aas
pop
and
mov
push
xlat
int3
pop
repnz
fnsave
and
shrl
mov
push
jmp
cmp
xchg
mov
mov
push
jle
mov
gs
pop
push
inc
pop
pop
mov
scas
clc
jo
xor
lahf
movsl
push
stc
ja
ds
mov
inc
mov
jae
ss
jae
push
add
mov
movsl
dec
push
push
mov
imul
adc
sbb
sub
fs
into
xorl
into
mov
jmp
fadds
sbb
mov
xor
sub
rorl
cwtl
jb
jge
mov
xchg
rorb
loop
cmpsl
addl
imul
rcl
cmpsb
push
dec
call
lods
cmp
jmp
jns
sub
sub
cmpb
adcl
jae
adc
testl
push
scas
mov
leave
notl
and
add
mov
and
dec
or
arpl
dec
sub
adc
out
jo
dec
adc
jecxz
push
fdivrs
stos
pop
fsubl
mov
clc
xor
xchg
or
adc
out
mov
nop
pop
mov
push
or
push
sbb
mov
pop
jl
pushf
icebp
lahf
and
push
sbb
adc
mov
mov
inc
xchg
cld
xchg
mov
je
xchg
in
cli
imul
jmp
filds
bndldx
jle
push
inc
repz
add
andb
lds
sub
jp
xlat
lods
cmp
xor
repz
pusha
loopne
mov
pushl
dec
mov
ljmp
scas
fwait
cmp
addr16
shlb
mov
pushl
movsl
add
xor
shlb
mov
lods
jbe
mov
mov
js
sarl
dec
stos
fsubr
ret
xor
into
and
stos
cmp
cli
pop
enter
lock
shrl
cmp
push
jecxz
pop
mov
roll
pop
in
inc
sbb
out
push
add
div
xchg
xchg
or
inc
jb
push
in
xlat
in
divl
cmp
mov
xchg
mov
sub
cwtl
and
in
ljmp
stos
sbb
lcall
mov
jb
add
sbb
stc
mov
pop
add
jo
push
repnz
jecxz
popf
aam
mov
mov
das
sti
clc
push
scas
inc
lea
outsl
dec
jg
jp
mov
mov
mov
incl
lods
xchg
lock
push
iret
jo
cs
scas
mov
add
sbb
js
test
xchg
xchg
cmp
lahf
xlat
or
push
icebp
imul
into
and
in
ljmp
repnz
orl
mov
lcall
adc
aad
shll
mov
lods
or
sub
push
js
xchg
outsb
cmc
sub
iret
shrl
xor
adc
pop
test
movsl
mov
into
addr16
xchg
add
cs
jecxz
jae
stos
shrl
repz
dec
sub
aas
jecxz
cmp
xor
dec
or
enter
push
fsubrs
pusha
std
push
cld
fmuls
pop
mov
fdivl
pop
cld
or
aam
ret
and
mov
add
dec
addl
inc
push
inc
enter
mov
xorb
cli
jmp
push
outsl
fs
roll
pushf
or
and
aam
jbe
dec
xchg
andl
fildll
jge
xchg
js
dec
ds
lock
mov
popa
fcmovbe
jl
rcll
cmp
mov
dec
leave
jbe
ss
divl
ret
adc
aas
aam
mov
stos
loop
and
xlat
aad
js
jne
popf
std
out
and
sub
cmp
inc
into
imul
clc
sub
add
pusha
ret
mov
sbb
fwait
into
shrb
push
imul
stc
inc
jns
sti
clc
pop
adc
jb
jb
icebp
mov
pusha
in
cmpsl
rol
add
jne
inc
xchg
repnz
and
dec
outsb
mov
jnp
shrl
gs
imul
mov
xor
jnp
sbb
pop
xchg
sub
xchg
sbb
jg
and
cmp
gs
jns
es
push
shr
gs
test
mov
xchg
int
mov
stc
xchg
inc
stc
push
nop
push
jo
adc
es
sahf
cmp
mov
sub
fidivrs
jne
mov
cmp
jo
mov
xchg
dec
nop
in
inc
sbb
xor
mov
aam
mov
daa
cmp
inc
add
inc
in
xor
nop
adc
push
dec
dec
ret
push
or
adc
or
push
lahf
inc
xlat
add
fs
fisubl
negl
repnz
pop
stc
in
pop
or
ss
xchg
mov
adc
fucomp
dec
jns
add
cwtl
in
push
fsubrs
lods
out
out
push
mov
mov
cltd
jg
cmp
pop
icebp
mov
outsb
lahf
int3
dec
mov
mov
popf
or
out
add
nop
xchg
shrl
mov
shl
jmp
inc
aas
iret
sahf
and
nop
cld
or
dec
adc
xor
jo
imul
repnz
hlt
ret
jmp
cmp
fildl
sbb
xor
repnz
in
adc
fadds
xchg
and
mov
les
mov
mov
std
lahf
sbb
sarb
out
dec
test
lods
xor
lds
call
inc
out
sub
and
gs
sub
pushf
out
and
cmpsb
insb
inc
push
mov
inc
fs
je
fnstenv
mov
lret
or
mov
popf
je
add
pop
out
out
sbb
push
push
shl
jg
test
pop
mov
and
test
leave
xchg
gs
jle
sub
cmp
repnz
daa
call
adc
imul
test
lret
adc
movsb
or
daa
pop
jl
shrl
das
lcall
iret
shll
mov
shl
sbb
insb
jge
sbb
inc
pop
fs
out
jno
sub
xchg
add
insl
xor
mov
jno
push
test
testb
cld
ja
cmp
sub
xor
pop
mov
xor
lea
cltd
addr16
jg
enter
xchg
data16
out
jne
xor
mov
ljmp
mov
pusha
xchg
pop
cmp
and
or
rcll
scas
fpatan
imul
ss
jmp
cmpsb
push
cmpsl
mov
xchg
ret
or
mov
and
push
xor
sbb
xor
ss
xchg
sti
aas
idivb
in
jnp
shrb
icebp
hlt
adc
pushf
mov
xchg
dec
ret
xor
adc
push
lds
jecxz
je
sbb
xchg
adc
aam
pop
sbb
mov
and
push
sti
inc
cmpsb
or
or
mov
fistps
ljmp
push
mov
out
mov
xchg
sbb
cmp
cmp
inc
pushf
in
sti
enter
add
ds
filds
and
stos
and
pushf
and
mov
or
jecxz
int
mov
xchg
cmc
mov
lods
cmpl
fsubrl
push
hlt
push
in
cmp
xchg
xor
fdivs
pushf
aas
out
pop
outsl
popf
das
mov
sub
scas
push
loopne
jo
xor
syscall
mov
sbb
fldt
and
adc
outsb
nop
mov
in
push
addr16
mov
aam
jecxz
ficomps
xchg
ret
aas
out
sahf
sub
dec
mov
bound
loope
ficompl
out
adc
je
mov
test
ret
jl
call
cvtdq2ps
imul
mov
lret
sbb
loopne
sub
add
adc
adc
popf
adc
jl
and
mov
movsl
dec
fs
sbb
dec
std
fscale
add
push
inc
and
pop
cmp
in
imul
sub
and
mov
xchg
adc
mov
xchg
jmp
call
mov
into
lock
ret
mov
inc
inc
xchg
mov
cmc
fidivl
mov
mov
loop
mov
sti
js
gs
in
pop
mov
sbb
sub
pop
jecxz
fistl
fisubs
xchg
fistpl
stc
popf
repnz
jmp
mov
out
test
jp
clc
in
repz
outsb
mov
pop
das
push
ja
cmp
ja
mov
fdivrl
mov
mov
fists
je
pusha
lods
scas
or
add
mov
mov
xchg
cmp
adc
cwtl
repz
je
and
fdivrs
adc
mov
mov
dec
sub
inc
mov
add
xchg
xchg
xlat
xchg
dec
mov
ds
bound
rclb
rcr
pop
mov
ljmp
sub
pop
or
std
rolb
jnp
sub
inc
adc
mov
lods
bnd
jne
sub
jo
dec
rcll
mov
pop
adc
jbe
jecxz
push
dec
jg
or
test
addr16
ja
push
repnz
mulb
pop
cmp
xchg
inc
movsl
or
add
das
test
loopne
movsl
push
std
pusha
push
mov
mov
inc
clc
mov
mov
mov
orl
or
cmp
lcall
test
lea
nop
mov
dec
mov
iret
outsb
jmp
sub
negl
mov
jbe
cli
mov
jl
mov
pop
or
addr16
lahf
jne
jae
dec
adc
hlt
sahf
rolb
jmp
xor
push
fldl
dec
mov
fnstcw
or
push
jne
out
daa
push
aas
sub
push
aad
mov
sahf
cmp
mov
imul
add
jge
inc
sbb
cmp
insl
pop
hlt
cli
adc
jb
daa
shll
and
lcall
jns
adc
enter
mov
adc
xchg
rcrl
gs
setnp
outsb
inc
pop
das
test
imul
popf
xchg
out
sub
or
aam
push
in
push
cmovle
sbb
shrb
loop
mov
dec
testl
inc
jg
pop
push
arpl
adc
movsl
js
xchg
sub
mov
test
adc
pop
and
mov
push
mov
fiaddl
xchg
add
dec
and
mov
sub
push
out
pop
cltd
test
xchg
push
cmp
cmp
and
int3
fsub
add
jl
je
adc
insl
jp
inc
add
lahf
adc
call
xchg
xchg
mov
push
cli
cmp
pop
shlb
jne
mov
stos
imul
aad
fcoml
sbb
pop
mov
xchg
lahf
subb
push
xchg
hlt
xchg
push
xor
inc
xlat
mov
push
andb
mov
push
neg
xor
outsb
xor
jo
xchg
pop
hlt
cmp
shll
jo
and
fld
mov
pop
cmp
push
jnp
ret
xor
fldcw
cmp
xor
xor
jecxz
push
test
pop
xchg
ret
movl
jmp
dec
sbb
idivl
insb
cmp
xchg
fsts
xorl
cmp
and
cmpsb
insl
cld
into
dec
lods
in
cli
movsl
lret
mov
or
inc
jp
out
mov
sub
push
hlt
cmp
scas
dec
xchg
pop
push
sbb
push
out
movb
mov
mov
ljmp
or
insl
push
push
or
sub
push
divb
push
test
add
rcrl
dec
xor
mov
in
mov
sahf
leave
and
arpl
ss
sbb
inc
xchg
addr16
jns
sahf
aaa
decb
fxtract
mov
mov
xlat
jp
mov
xor
add
cltd
orl
lret
ss
mull
subb
inc
add
popa
movsl
inc
scas
es
movb
mov
test
push
adc
mov
mov
int3
or
mov
ljmp
mov
aam
leave
pusha
les
hlt
add
fmull
daa
cmp
or
out
es
aas
sub
call
sbb
je
and
or
mov
jge
xchg
inc
pop
loop
aad
lret
out
push
insl
push
jne
add
adc
add
lds
push
out
cltd
push
incl
or
scas
arpl
inc
xchg
xor
pusha
test
fdivl
dec
mov
adc
or
cmp
repz
push
fstl
sbb
notb
cmp
cld
fisubrl
mov
jns
xchg
mov
in
pop
lock
lock
fbstp
test
cmp
xor
out
rcrl
rolb
addb
cmpsl
dec
addr16
cmp
dec
cmc
sbb
sbb
jns
in
xor
jo
loope
add
fisubrs
cmpsl
xlat
loope
ret
js
dec
fistps
mov
add
push
in
incb
mov
pusha
adc
into
aad
sbb
sahf
divb
and
lcall
xor
cmpl
xchg
and
sbb
or
mov
aaa
out
and
jns
add
and
or
outsl
inc
iret
xor
mov
divl
mov
cmpsl
dec
sub
fcmovbe
sub
jne
sub
sahf
jo
cmpsb
je
fldenv
aas
cltd
iret
jae
xchg
shrl
insb
lods
fadd
dec
sub
cld
mov
rcrb
xor
xchg
inc
jle
insb
or
aad
clc
or
jbe
lahf
lock
arpl
inc
push
into
xor
sbb
cmc
sub
push
jp
push
iret
cli
call
mov
add
push
insl
je
movsl
cmpsl
sub
dec
push
cmpsl
imul
mov
ficoml
call
mov
mov
in
or
sub
shlb
pop
jg
test
sub
and
out
pop
bound
xchg
or
ds
adc
or
fistps
mov
rorb
xchg
sub
cmp
mov
in
shll
mov
add
enter
gs
adc
repnz
out
ds
push
in
icebp
add
adc
mov
pushf
test
xor
mov
inc
fsubrs
xchg
aas
xchg
aas
push
pop
adc
aad
scas
mov
inc
mov
cmpsb
mov
fcomps
mov
sub
jecxz
push
sub
xlat
adc
cmpl
std
data16
xchg
out
out
insb
mov
dec
mov
jg
inc
or
test
push
test
pop
mov
sbb
lcall
lcall
mov
xor
outsb
stos
mov
sbb
fsts
and
and
mov
inc
inc
push
shlb
andb
fistps
push
push
cmp
test
sbbb
sbb
add
push
clc
sbb
das
imul
pushf
loop
sahf
stc
push
sarl
cld
mov
negl
jle
or
insl
inc
sbb
lret
arpl
lods
pusha
std
fcompl
lret
rol
add
add
into
push
sbb
dec
xchg
shrb
and
push
cwtl
popf
dec
cmp
mov
mov
in
and
inc
inc
notl
sbb
push
sub
push
test
arpl
sub
addr16
add
xchg
cld
jl
and
sbb
clc
xchg
mov
test
fucomp
pop
add
jo
mov
rcl
into
sub
dec
repnz
and
push
jl
and
push
imul
mov
xchg
cwtl
out
into
stos
ja
dec
cmpsl
enter
jge
enter
cmp
insl
adc
xchg
jmp
cmpsb
pop
jmp
pop
and
mov
inc
stc
xchg
outsb
aaa
push
push
loop
mov
sub
inc
dec
adc
xor
pop
repnz
pop
imul
stos
sub
hlt
sbb
ret
push
pop
and
lret
pop
pop
and
jns
push
hlt
pop
int3
push
insl
cltd
icebp
sbb
fnstcw
jge
imul
scas
xor
addr16
and
enter
adc
mov
cmc
cmp
pop
xchg
mov
ss
sbb
xchg
std
sbb
fwait
popf
idivl
pop
rcrb
mov
cmp
jg
dec
adcb
sub
fs
hlt
lods
pop
popa
jl
ljmp
ret
das
shlb
addb
sub
sbb
shlb
iret
imul
lahf
push
int3
push
shrl
sbb
add
xlat
mov
out
das
push
out
lahf
cmp
cld
addb
mov
push
add
jecxz
fmul
outsb
and
mull
cmpsl
or
sbb
sub
dec
and
data16
scas
sbbl
icebp
jbe
mov
jns
xchg
dec
cmp
cmp
rcll
xor
out
cmp
lods
fdivrs
inc
je
les
pop
sbb
hlt
fwait
pop
adc
lret
and
imul
pop
xor
jmp
pusha
xchg
pop
aas
int3
or
mov
lcall
mov
push
bswap
sbb
imul
cmp
mov
cmpsl
mov
out
inc
lcall
movsl
lahf
sbb
push
xchg
jmp
mov
cmpsl
sbb
cmp
dec
decb
pop
jle
jge
pop
shlb
popf
add
shr
loope
inc
je
mov
in
nop
fs
push
sub
cltd
fldcw
stos
push
or
push
jecxz
inc
arpl
or
add
sti
xchg
cmpsb
dec
rcrb
and
cmc
jp
mov
jle
jnp
clc
out
cmp
mov
popa
mov
xchg
push
rclb
shll
xchg
pop
and
xchg
jns
es
dec
add
xchg
cs
imul
cmpsb
dec
mov
movsb
int3
mov
testl
push
cmp
out
cmp
movsl
inc
pop
mov
and
xor
mov
insl
lods
icebp
es
jecxz
mov
fstps
fstps
int3
pusha
xchg
push
sub
push
leave
shlb
stc
and
adc
or
lods
xlat
pop
jmp
inc
xor
test
aad
pusha
ljmp
test
cli
ficompl
xchg
movsl
jb
lret
test
aam
enter
sub
pop
cmp
cltd
mov
mov
stc
gs
int3
mov
mov
and
lds
mov
sub
cmp
aad
xor
pushfw
push
xchg
cmpsb
cmp
imul
addr16
cmp
mov
fsubrl
and
mov
les
sbb
and
jo
inc
pop
sahf
adc
jae
cmpsb
fsubrl
das
mov
enter
bound
sbb
mov
ret
in
or
pop
ja
mov
mov
pop
and
js
cmp
pop
lret
scas
xchg
je
inc
xchg
mov
mov
and
data16
pusha
std
iret
cmp
adc
ljmp
push
sbb
popa
xlat
inc
out
or
jae
add
cmpsl
fcompl
test
insb
mov
popa
jae
inc
jle
add
inc
jmp
cmp
stos
xchg
dec
push
add
inc
incl
outsb
mov
ret
scas
sub
cs
cmc
lock
imulb
cmp
xchg
sbb
mov
xor
sbb
int3
in
mov
inc
push
xchg
jl
in
adc
in
lahf
popf
sbb
and
cltd
add
shlb
rep
cmpsb
jne
inc
fadd
movsl
repz
in
xchg
add
jo
sbb
jns
pop
xchg
lahf
mov
mov
andl
dec
movsb
lcall
mov
sub
cmp
mov
xor
repnz
cmp
jecxz
shll
pushf
rorl
cmp
jle
or
test
in
stos
lcall
pop
shlb
out
push
sbb
cmpl
cmp
pop
test
stos
jo
daa
push
cltd
mov
or
test
or
dec
or
xchg
test
jecxz
xor
arpl
nop
lret
add
xor
mov
jg
mov
lret
sahf
mov
ja
dec
es
xchg
push
cltd
cmp
lea
push
add
je
mov
outsb
xor
outsl
pop
je
les
mov
test
roll
mov
in
mov
push
sbb
flds
adc
addb
mov
xor
jp
jne
fsubl
inc
clc
into
lds
je
push
repnz
xor
sti
inc
insl
xor
clc
jbe
jp
or
cld
popf
jb
add
sbb
jl
leave
stc
xchg
add
mov
ret
out
cld
call
dec
or
cmpb
sub
and
pop
sbb
lods
xchg
fidivs
and
aaa
add
dec
jg
sbb
subl
pop
arpl
sbb
sbb
mov
xchg
popa
jle
jae
push
jle
push
lods
bound
aam
loopne
push
es
shll
gs
push
xchg
mov
mov
sub
dec
mov
jp
in
fs
mov
std
sub
fs
mov
aaa
ret
aad
cmp
decl
push
push
sub
es
jbe
sbb
jmp
xlat
jns
popf
mov
and
cmp
lods
lcall
cmp
inc
push
daa
inc
jle
adc
jns
repnz
pop
or
les
fs
jg
lahf
mov
aaa
xor
es
push
scas
clc
pusha
aam
rcrl
in
lcallw
dec
sub
das
push
dec
in
jnp
scas
add
scas
test
addl
sahf
in
cmpsb
leave
call
jl
mov
mov
push
test
sub
and
sbbl
push
push
jle
lods
push
add
sub
push
pop
xor
movsl
out
sahf
jle
lods
ja
subb
int
jo
lret
jle
and
dec
jp
mov
fucomip
cmp
pop
movsb
ja
push
pop
out
shrl
xchg
inc
iret
das
and
aad
inc
shll
sahf
adc
insb
nop
xchg
mov
adc
lods
shr
leave
mov
call
aam
pop
std
bnd
aad
add
adc
sbb
fsts
mov
jecxz
jb
shr
dec
push
jns
das
adc
repz
jmp
sub
fidivrl
pusha
fcoms
xchg
pop
sub
xchg
mov
dec
xor
dec
cmpl
jecxz
out
jnp
xchg
mulb
mov
cmpsb
or
sub
sbb
loopne
xor
mulb
cmpsl
mov
dec
ret
sbb
add
jl
fimull
and
int3
insl
pop
in
pusha
xchg
jno
ja
data16
adc
cmpsl
mov
xchg
and
adc
std
dec
out
sarb
lcall
das
mov
out
adc
mov
jae
icebp
fwait
mov
imul
or
lahf
dec
dec
imul
jae
shlb
or
test
lods
and
lret
mov
mov
mov
pop
push
push
lods
ljmp
sbb
or
cmp
pop
sub
xchg
xchg
add
adc
sbb
das
loopne
cmpl
test
inc
sbb
cmp
xchg
test
dec
and
rclb
dec
ja
mov
fidivrs
out
lcall
sbb
xor
scas
daa
sbb
aam
push
push
data16
aam
insl
xor
jnp
hlt
jl
mov
ds
cmp
and
dec
jns,pt
lret
dec
mov
push
mov
sbb
leave
xchg
out
insl
and
jbe
cmpsb
jb
adc
pop
lahf
xchg
lahf
xchg
jle
cmp
add
scas
xchg
sbb
and
cmpsb
div
push
daa
add
cltd
add
out
stc
or
pop
lods
or
jle
cmpsb
stc
push
pop
jbe
out
or
pop
and
jecxz
mov
xor
cmp
jmp
int
mov
push
sahf
dec
sbb
xchg
ret
push
jl
jecxz
fstps
cwtl
push
lock
pop
cmp
push
repnz
call
jle
mov
dec
js
mov
mov
ljmp
lret
add
nop
mov
and
cltd
test
mov
out
push
pop
fdivrl
notb
jbe
jns
ret
pop
ljmp
sub
fsubp
ja
sub
dec
nop
clc
shlb
cmp
ror
sub
inc
dec
jg
dec
insl
fbld
rolb
mov
test
push
and
fbld
sarl
dec
jp
jno
mov
mov
jmp
lret
loop
cmpsl
xor
ret
cmc
popf
dec
add
in
gs
sub
add
pusha
andl
aad
xchg
push
scas
lea
mov
fnstenv
cmpsl
sub
js
jo
or
lcall
sahf
pop
sbb
ds
es
int
movsb
xor
je
mov
int
jne
movsb
jmp
mov
mov
mov
mull
xor
push
cltd
pop
pop
adc
iret
push
sahf
pop
mov
cmp
push
mov
push
dec
stos
xchg
inc
add
fidivrl
dec
inc
outsl
and
pop
aas
cwtl
into
sub
arpl
jmp
ss
or
call
add
or
js
test
mov
sub
je
add
dec
sub
fidivrs
and
pushf
lds
push
mov
jg
jbe
loop
mov
pop
dec
mov
cmp
jb
push
outsl
stos
and
and
sbb
daa
or
cmc
bound
sti
xchg
loop
sub
sub
lahf
lea
xor
pop
pop
and
imul
aam
mov
push
rolb
xchg
pop
lods
mov
dec
add
in
outsl
xchg
jmp
add
push
repnz
and
pop
cwtl
jbe
daa
dec
std
mov
xchg
adc
sub
into
rolb
jns
rolb
mov
dec
in
stos
push
scas
push
test
cmp
sarb
imul
pop
aad
xchg
xor
sbb
push
jo
cmpsb
sbb
or
fwait
pusha
in
out
movsl
adc
ficompl
pusha
cld
xchg
mov
pop
imul
js
xor
xor
sahf
pop
push
fsubrp
rolb
pop
inc
test
push
jbe
mov
mov
mov
das
adc
add
iret
mov
sbb
out
and
sbb
jecxz
out
bnd
cli
ficompl
ss
cmp
cmpl
mov
jl
nop
mov
and
loopne
push
xor
pop
icebp
jl
dec
mov
ud2
push
xor
add
pop
adc
jg
inc
dec
subl
aam
pop
inc
adc
or
mov
or
jns
cmp
dec
jb
mov
mov
and
in
es
jae
dec
inc
cmc
gs
test
addb
cli
fwait
sub
daa
outsb
mov
lahf
repz
and
push
inc
cmc
ret
cmp
push
mov
outsb
cli
in
int
outsl
rcr
jb
mov
inc
and
movsl
or
xor
out
int3
pusha
mov
adc
lods
mov
gs
jp
mov
out
fmulp
sti
jp
stos
xchg
cmp
pop
js
xchg
ret
cmp
cmc
dec
test
push
cmp
cmpsb
sti
sti
fildll
repnz
repnz
pop
mov
add
xchg
inc
inc
scas
lock
jne
stos
divl
ret
pop
daa
push
pop
mov
xchg
insb
out
push
cmp
dec
pop
cmpsl
jl
jmp
fdivrs
and
stos
das
mov
and
std
lods
jae
hlt
cmp
or
imul
bound
pop
leave
leave
xor
out
push
adc
je
shl
es
cmp
sahf
pop
mov
cli
jne
inc
ficompl
pop
and
push
jecxz
or
pushw
jno
in
adc
or
loope
sub
inc
xchg
or
sbb
imul
mov
ffree
xchg
or
aaa
mov
pop
adc
lret
daa
fwait
pop
ja
or
les
loope
mov
call
fsub
cmp
andb
aam
mov
out
aad
je
loopne
ljmp
add
imulb
out
imul
sbb
icebp
mulb
rclb
add
cmpsl
lret
push
out
andb
push
mov
orl
int3
dec
out
js
fidivrl
or
in
popf
add
xor
daa
lret
testl
pop
mov
lods
outsl
cmp
aas
js
sub
insl
push
push
mov
push
sarb
fdivr
mov
in
dec
daa
mov
pop
sti
pop
fildl
fs
pop
sbb
push
movsb
imul
test
int
jb
mov
adc
push
ror
shl
xchg
loopne
dec
cmp
lock
mov
and
mov
in
cmp
xchg
add
repz
mov
xchg
add
movsb
int
lock
adc
js
dec
and
jo
test
lods
and
jno
sub
mov
cltd
test
xchg
push
cs
xlat
test
adc
jle
mov
jbe
insl
out
mov
add
xor
lods
and
pop
xchg
mov
mov
inc
mov
cmpsb
mov
push
xor
jo
or
scas
adc
lahf
imul
inc
cmp
pop
cmpsb
pop
pop
jge
mov
call
pusha
mov
sub
aas
iret
cmp
mov
or
cs
test
inc
mov
fdivrl
or
mov
push
bound
lods
pop
cmc
ja
daa
xchg
mov
jbe
xchg
xor
dec
cmp
jae
fisubrl
mov
orl
stc
jle
jnp
push
push
push
add
fildl
sub
dec
les
adc
lahf
sub
mov
pop
mov
mov
pushf
scas
pop
sbb
or
and
adc
lock
mov
mov
cmp
sbb
xchg
mov
inc
hlt
adc
add
jns
aas
ss
push
int
iret
repnz
stos
sbb
ss
test
jecxz
ljmp
into
jg
sub
imul
stos
mov
mov
pop
not
shl
mov
ss
mov
arpl
and
cmp
cmpsl
cmp
push
pusha
sub
dec
out
jno
popa
fmull
bound
cltd
shll
and
loopne
add
pop
push
or
inc
pusha
sub
gs
adc
push
in
sarb
testl
iret
cli
insb
adc
xor
int3
gs
pop
shlb
fs
jo
sub
jno
pop
enter
pop
adc
pop
dec
je
mov
test
jp
jmp
flds
mov
int
fdivr
push
fwait
aaa
daa
and
sbb
or
xor
xlat
jg
adc
fstp
leave
fsin
cmp
adc
lods
popa
mov
jmp
or
push
pop
test
int
jecxz
imul
les
jnp
into
out
sarb
lcall
xor
xchg
test
mov
insb
int
dec
lea
xchg
mov
sti
aaa
into
sti
mov
daa
or
pop
jg
in
jae
mov
les
jl
js
out
add
mov
imul
frstor
or
ret
ret
cmpb
sub
pop
pop
mov
into
sbbb
sahf
cwtl
adc
shll
into
jp
push
add
xor
xchg
loope
jbe
push
cmp
outsl
cmp
aad
push
divl
orl
call
fdivrp
xchg
notl
pop
out
pop
sbb
arpl
inc
psllq
push
cmp
icebp
fidivl
lret
xor
dec
out
jb
outsl
call
xchg
mov
pop
inc
lods
lock
sub
cltd
ficomps
push
shl
cwtl
jmp
xchg
xorl
icebp
outsb
push
test
sbbl
mov
sbb
inc
xor
cld
or
push
jb
inc
sbb
push
js
cltd
mov
jmp
jb
mov
adc
fisubrl
and
push
ds
cmp
mov
push
jb
pusha
nop
ret
inc
or
aaa
dec
stos
mov
hlt
insl
addr16
decl
jne
loope
dec
sub
clc
leave
gs
xor
or
stc
jp
movl
negb
push
pop
and
jl
push
fnsave
and
fdivl
jp
push
cwtl
push
fistpll
sub
cmp
mov
lcall
mov
mov
sbb
or
arpl
fucomi
andl
daa
test
jno
stc
xor
jge
sub
jo
push
cmp
push
xchg
in
cld
imul
inc
imul
mov
mov
xor
inc
pop
jo
push
cmp
pop
out
rol
ds
mov
dec
lahf
cmp
dec
enter
jmp
lock
jge
mov
push
iret
ss
mov
inc
ror
and
stc
dec
pop
dec
scas
inc
add
pop
fld
roll
jnp
dec
dec
in
xor
pop
iret
mov
sahf
add
leave
orl
pop
addl
mov
push
xchg
pop
xchg
in
sub
mov
dec
cmc
dec
les
mov
jecxz
notl
jb
fwait
in
jecxz
lret
and
ret
inc
cmp
sbb
js
fwait
xchg
sub
dec
xchg
cltd
fistpl
cli
es
incl
or
fwait
and
and
insl
adc
stos
push
or
push
pop
cltd
fsts
xor
xchg
icebp
int3
stos
int3
aas
and
cs
rorb
jecxz
push
test
movsb
pop
or
sub
loopne
int3
mov
jmp
cwtl
test
sub
mov
jmp
aam
xor
icebp
push
push
xor
or
rcrb
sbb
xchg
push
pop
repz
cltd
sbb
and
push
test
sub
insl
inc
loopne
or
add
nop
or
es
dec
imul
into
pop
pop
pop
jg
push
inc
pop
rcll
hlt
pop
xchg
xor
xchg
ljmp
push
int3
pushf
lcall
xchg
pop
xor
jns
les
push
inc
mov
int3
mov
lret
sbb
shlb
mov
cmc
fs
mov
push
mov
fcom
orb
ljmp
int
pop
adc
lods
cmpsb
mov
pop
add
mov
inc
sub
stos
fs
fsubs
cld
pop
mov
scas
mov
pop
inc
or
imul
shrl
mov
out
pop
mov
fisubrs
xchg
mov
pop
dec
loop
inc
push
fadd
fbstp
push
repz
ficompl
lret
pop
pusha
pop
test
ds
push
cmp
inc
inc
js
mov
cwtl
pop
sub
xlat
cmp
data16
daa
inc
mov
or
lea
aas
dec
scas
push
cs
xor
xor
inc
push
xor
mov
lods
mov
xchg
insb
sub
mov
enter
add
or
pop
out
xchg
lods
mov
mov
popw
dec
in
and
hlt
fsub
xorb
ret
jg
cmp
xchg
sub
stc
cmp
xchg
leave
mov
xchg
fdivrl
aaa
cmp
mov
insl
pop
adc
cmp
inc
repz
mov
xor
adc
push
icebp
jo
mov
bound
xchg
mov
jae
inc
mov
dec
mov
inc
js
xchg
into
sub
test
gs
ja
push
inc
hlt
sbb
aad
cli
int
push
dec
iret
jns
data16
jne
mov
stos
jge
das
or
sub
adc
addr16
push
push
popa
sub
loop
jnp
int
test
add
repz
dec
inc
inc
repz
jg
add
mov
inc
hlt
cmp
jmp
lods
outsb
sbbb
mov
pop
pusha
in
and
xor
jmp
mov
pop
ds
add
leave
in
ds
cwtd
xchg
jns
ret
out
cwtl
xor
sbb
xor
lock
or
inc
or
jno
ljmp
sub
pop
leave
push
jo
mov
cmp
das
push
cwtl
test
push
idivb
pop
add
out
sub
mov
add
dec
ljmp
push
testl
jae
out
stc
sti
je
jo
cmpsb
and
mov
inc
movsb
les
xlat
adc
dec
xchg
adc
jbe
leave
xchg
mov
xor
mov
lds
inc
arpl
xor
popa
mov
xor
inc
jmp
std
rcll
xchg
xchg
test
ss
fld
les
imul
cmp
cmc
push
xor
inc
sahf
or
xchg
fldz
sahf
clc
lods
subl
mov
int3
mov
and
push
aam
jb
jecxz
pop
sar
int
sbb
in
jno
xor
jmp
jle
adc
push
push
lahf
int
mov
data16
mov
cmp
or
fcomps
sbb
sbb
mov
insl
sbb
inc
cmp
lock
or
xor
or
jb
pop
push
adc
push
cmpsl
dec
in
fadd
shl
xchg
adc
stc
cs
cmpsl
xor
dec
lds
dec
sbb
xor
xchg
sub
jmp
mov
mov
mov
inc
inc
push
fs
aaa
pop
mov
add
xchg
mov
mov
lea
dec
push
cltd
in
mov
out
xor
in
inc
les
mov
iret
mov
out
or
lcall
jnp
lcall
and
sbb
out
add
cmpsl
sahf
rclb
gs
into
mov
or
sti
loopne
imul
loope
cmc
cmp
mov
mov
rcr
mov
pushf
push
pusha
jl
xorb
xchg
cmp
test
sbb
pushf
sub
mul
jbe
sbb
jno
dec
pop
pop
sbb
jp
outsb
subb
jge
xchg
mov
mov
daa
dec
movsl
popa
hlt
cmp
jb
fstl
inc
dec
or
dec
jecxz
mov
mov
mov
mov
movhps
popa
pop
fs
dec
dec
int3
int3
xlat
mov
loopne
push
cmp
int3
loope
subb
push
cmp
sbb
in
sub
jno
jne
orl
and
xlat
rcrb
fbld
cmp
mov
mov
daa
or
imul
enter
stos
movsl
push
fnstenv
push
mov
scas
jmp
xorb
dec
sbb
cmp
adc
xor
add
xor
cs
sbb
mov
xchg
push
jg
std
cwtl
mov
imul
jnp
test
push
mov
jge
hlt
lods
mov
cmp
sbb
mov
imul
movsb
ror
das
fistl
sbb
pop
mov
cmp
sbb
cmp
stos
lret
push
dec
mov
es
test
sbb
and
jns
cmp
mov
and
push
sbbl
or
cltd
lods
popa
xor
mov
mov
jg
mov
sahf
addr16
inc
movsb
iret
les
lret
and
pop
stos
xchg
cmp
test
mov
in
shlb
gs
or
inc
pop
lret
xchg
sbb
popa
pop
xor
cwtl
push
add
lret
cmp
hlt
and
dec
inc
inc
mov
daa
out
sbb
or
push
dec
scas
negb
cmp
ljmp
cmp
dec
cltd
pop
jmp
icebp
dec
aad
mov
mov
fldcw
xor
and
es
pop
push
mov
or
inc
mov
rcrl
xor
les
xchg
jbe
clc
mov
inc
movsb
add
inc
inc
or
movsb
ds
fcmovu
or
add
cmp
ret
pop
dec
sti
push
xor
fldenv
xchg
dec
cmp
or
or
std
mov
xchg
jb
jl
adc
js
lods
sub
add
mov
jb
push
imul
nop
pop
cmpsb
ljmp
mov
pushf
mov
adc
sarb
pop
bound
ds
scas
push
pop
add
jge
in
fs
out
lret
ja
inc
mov
cmpsb
mov
jp
mov
pushw
jp
push
imul
mov
addr16
jmp
pop
fwait
test
das
xchg
sub
inc
adc
xchg
cs
std
rcrb
jp
jp
xor
jmp
push
fwait
dec
out
mov
mov
shlb
jecxz
inc
cmp
xchg
adc
arpl
xor
push
push
and
xchg
loop
cmpsb
mov
cwtl
jl
aad
or
inc
outsb
incl
cmp
stos
in
popf
or
imul
or
arpl
lock
and
test
std
es
fstps
sbb
jo
hlt
test
sub
lods
push
mov
loop
ja
mov
jl
inc
xchg
enter
nop
mov
ret
pop
cltd
or
sbb
insb
scas
cmp
into
bound
mov
sub
cwtl
fcoml
shll
cmp
aaa
cld
popf
fxch
movsl
sbb
fdivrs
imul
add
push
sbb
sahf
clc
outsl
jnp
pop
jmp
or
and
adc
sbb
jle
and
lods
aaa
andl
cmp
shlb
shll
inc
fbstp
inc
push
sbb
cli
scas
cmpsb
pop
mov
cli
mov
jne
mov
or
dec
jae
int3
mov
jg
adc
clc
stos
andb
cs
faddl
add
jmp
shlb
cwtl
pusha
xchg
or
nop
and
fadd
add
sbb
sbb
add
adc
out
lret
pop
movsl
imulb
xor
jns
jo
cmp
and
cs
xlat
jge
push
fwait
aad
fsubrs
mov
movsl
mov
mov
dec
lods
mov
icebp
push
gs
mov
std
cmp
add
push
orl
mov
mov
cs
and
rcll
jmp
xchg
or
sub
pop
push
jecxz
imul
fists
push
nop
addr16
fwait
std
call
idiv
in
inc
inc
sub
mov
out
xor
xchg
lods
or
sub
cmp
lcall
mov
flds
jg
jmp
mov
mov
push
xchg
mov
bound
fsub
mov
sbb
or
mov
cltd
aaa
loopne
and
mov
fxch
or
dec
sahf
push
sahf
ret
scas
insb
std
test
sti
mov
stos
pop
and
aas
pop
mov
push
cwtl
stc
dec
cmp
xchg
dec
out
int
push
sbb
push
mov
cs
movsb
rcl
loopne
cmp
movsb
adc
cmp
in
fistpll
hlt
mov
mov
pusha
adc
iret
mov
mov
dec
xorl
adc
daa
xchg
addr16
movsl
dec
sub
jb
inc
pop
mov
es
adc
jp
jo
loopne
in
cwtl
inc
ja
ds
aam
int3
scas
push
clc
nop
cmc
in
scas
fstps
sub
jb
cmp
pop
rcrl
mov
inc
in
push
push
ds
lret
mov
and
mov
hlt
pop
out
enter
popf
pop
fs
jbe
mov
dec
in
fdivr
rcrb
scas
stc
js
repnz
lods
mov
xor
fdivl
push
addr16
pushf
rcl
outsl
pop
lahf
push
scas
mov
cmp
sub
mov
add
push
loopne
in
cmpb
imul
xor
pop
cmp
js
aam
sbb
push
movsl
stos
and
dec
jo
mov
lret
jb
add
push
pop
out
or
cmpsb
fmull
movsb
aas
add
and
dec
inc
mov
xor
and
testb
call
loope
div
push
dec
scas
push
sbb
popf
mov
and
xchg
clc
mov
mov
lret
xchg
push
lcall
lret
fidivl
or
push
adc
fs
push
lock
or
pushf
jecxz
jmp
out
cmp
sub
fistps
test
imul
cmp
data16
jbe
lea
popa
jge
je
jo
lods
cmp
jbe
iret
fsubrs
loop
mov
and
cmp
and
js
js
lret
cmp
jl
jle
popa
sub
icebp
decl
imul
bound
aas
leave
pop
and
pop
es
fbld
dec
xorl
les
pop
aad
in
and
push
adc
bound
test
jbe
xchg
pop
pop
call
cli
sbb
pop
dec
repnz
and
aam
ds
mov
or
pop
out
dec
loopne
add
sub
dec
xor
ss
inc
jp
lods
jbe
aas
sbb
loop
addb
ss
cmc
mov
cwtl
xchg
push
faddl
push
xchg
stos
adc
sti
cmp
xchg
cmp
cld
fimull
call
popf
jmp
jns
adc
ljmp
lret
lea
insb
mov
mov
test
leave
and
stc
sar
jmp
movb
fs
out
pop
shlb
fadds
lahf
inc
ret
cltd
call
jmp
add
pop
xchg
or
js
shlb
cmp
mov
adc
aad
dec
pop
push
jno
jnp
inc
enter
movsl
push
loopne
xchg
and
lret
mov
dec
sub
shr
ret
sub
in
in
cli
ds
and
pop
push
fldl2e
cwtl
sbb
jl
mov
fxch
popf
add
lea
xchg
mov
or
or
and
lret
ja
mov
lods
pop
icebp
leave
or
xchg
adc
ljmp
jmp
and
out
pop
jno
and
aad
mov
cld
dec
mov
call
rolb
das
aaa
pop
dec
subl
out
mov
sbb
test
push
gs
int3
and
sub
xchg
jo
add
aam
and
sub
loopne
pop
imul
xchg
xor
push
dec
xor
fwait
mov
cld
sub
sub
mov
mov
push
je
and
out
adc
jno
push
mov
mov
popa
sbb
xchg
and
xchg
in
push
int3
xchg
sub
dec
jmp
stc
cmp
sbb
pop
and
sbb
add
adc
inc
inc
pop
ljmp
cli
cltd
arpl
xchg
les
stc
lds
je
insb
add
sahf
xor
mov
movsl
sub
add
cmp
adc
ljmp
jge
nopl
jns
cmpsb
pop
dec
xchg
stc
fsubrl
inc
stc
ss
or
and
add
rclb
fidivs
leave
aad
dec
mov
inc
cmp
sarl
mov
pop
aaa
dec
lcall
pop
daa
aaa
insb
fwait
pop
dec
xlat
jg
and
mov
sbb
xchg
fnstcw
pop
outsb
sub
lret
addl
loopne
mov
data16
outsl
xchg
std
sbb
ficomps
inc
add
pop
stos
js
xchg
stos
aas
cwtl
lcall
mov
or
push
stos
mov
and
outsb
sub
repnz
stos
add
mov
push
xchg
jg
fs
mov
faddl
addr16
add
mov
add
test
movsl
sub
fdivrp
and
inc
lahf
testb
jb
sub
pop
add
cmp
divb
cmp
stc
mov
cltd
data16
xchg
xchg
mov
mov
insb
popa
mov
call
adc
das
jb
rolb
mov
xchg
jg
sbb
int3
mov
outsl
pop
xchg
xchg
or
lea
sub
outsl
aas
sbb
cmp
sbb
jp
sub
or
stos
sbb
or
dec
test
mov
dec
test
adc
dec
hlt
jb
js
inc
ja
movsb
lock
fiaddl
jnp
lahf
aaa
filds
xchg
xlat
and
push
dec
sbb
jg
mulb
mov
popa
sub
popf
xor
out
in
mov
std
aaa
out
aad
test
sbb
sti
enter
lret
movsb
std
adc
cmpl
pop
dec
mov
jmp
dec
cwtl
xchg
movsl
mov
inc
scas
pop
xchg
push
stc
int3
ss
popf
sub
xor
lods
mov
nop
loopne
negl
dec
cmpsl
xchg
mov
and
mov
out
xchg
subl
push
std
in
pop
xor
dec
in
cmp
push
loop
aam
xor
jmp
jp
lock
mov
nop
enter
call
aas
lds
out
js
imul
jae
test
xor
out
pop
ljmp
out
jnp
xor
pop
lods
mov
gs
inc
push
inc
pop
cli
fimuls
or
inc
pop
adc
mov
xor
pop
mov
int
aaa
push
sub
lret
mov
out
mov
in
es
rcrb
xor
fwait
mov
dec
jnp
jne
push
arpl
inc
fistl
not
arpl
or
push
aam
leave
cmp
cmp
vmovntps
aaa
push
outsl
cmpsl
xor
sbb
ror
xor
in
inc
bound
sarb
xor
pop
mov
pop
push
je
push
push
das
jl
sahf
pop
pushl
outsl
cmp
push
adc
loopne
cmc
jnp
mov
pop
push
mov
movsb
loopne
jb
out
sbb
rol
cmp
ja
lcall
aas
mov
mov
sub
mov
cmc
sbb
repnz
jb
subb
mov
mov
fistl
in
sarl
dec
mov
mov
xor
jne
and
loop
push
out
outsb
jge
push
or
lods
and
mov
mov
out
or
or
aam
mov
scas
test
jg
arpl
add
push
xchg
xchg
sub
or
iret
xorb
sti
and
ljmp
imul
sbb
dec
sbb
call
cli
dec
sti
in
je
dec
lahf
stos
mov
mov
cltd
clc
pushf
and
movsl
or
hlt
gs
clc
insb
inc
mov
ss
icebp
xor
ljmp
jbe
mov
movsl
mov
ficompl
jno
sbb
sbb
dec
and
cmp
add
push
pop
xchg
jl
or
cld
sbb
xchg
jo
lcall
stc
pop
dec
fildll
inc
test
sbb
rcrb
or
jo
mov
es
xor
aaa
imul
movsl
or
call
mov
sbb
or
mov
std
and
push
cwtl
pop
fisttps
test
or
pop
mov
loop
stos
int3
cmp
dec
xor
and
adc
ja
jg
dec
mov
pop
in
repnz
pop
int3
push
push
mov
fsubrs
inc
lods
xor
shr
mov
and
xchg
leave
fidivrl
mov
shl
push
push
mov
xor
loope
aas
mov
repnz
jl
cmc
test
fidivl
fadd
push
movsb
or
dec
and
xchg
push
cli
sub
cli
xchg
cmp
sub
into
pop
lds
cmp
inc
push
faddl
int
fwait
outsb
push
aaa
push
inc
xor
std
xor
xchg
jle
cmp
jne
shl
mov
data16
movsb
imul
jle
adc
jge
mov
add
push
cmp
rclb
int3
jne
push
add
data16
cwtl
push
and
sbb
fcompl
push
mov
adc
sbb
dec
xchg
repnz
add
rorl
pushf
sub
or
dec
popa
scas
dec
xor
shl
mov
mov
ret
xchg
pop
add
subl
jbe
push
insl
repnz
sbb
mov
rcll
mov
cwtl
sahf
jb
fisubrl
int3
out
lret
je
popf
cmc
insl
js
xor
and
inc
daa
fcmovnb
icebp
mov
pop
adc
mov
stos
idivl
lods
pop
mull
inc
mov
std
pop
stc
inc
mov
test
icebp
repz
sub
or
je
loop
repnz
ret
in
lret
popa
test
pop
pop
jne
push
cld
adc
insl
xlat
ret
je
mov
dec
hlt
mov
inc
inc
jge
jnp
clc
lods
ljmp
mov
rcll
xchg
sub
jns
jecxz
xchg
ficoml
fiaddl
popa
ja
cmc
pushf
jb
aaa
dec
add
mov
push
mov
aam
cltd
mov
jl
jb
sub
inc
or
push
add
hlt
enter
jae
imul
or
xchg
lcall
lret
xor
sarb
rolb
mov
iret
cwtl
push
jmp
cmp
mov
loopne
fucom
mov
addr16
add
push
or
imul
mov
adc
and
out
jle
dec
add
stc
dec
dec
push
fsqrt
cmp
and
ret
or
aad
clc
mov
and
arpl
push
fidivrs
dec
inc
mov
cmpsl
lea
mov
movsb
pop
lods
jo
in
cmpsl
sbb
xor
pop
add
gs
adc
mov
shlb
int
jecxz
scas
hlt
cld
xchg
das
popa
mov
aas
loop
mov
mov
or
cltd
cwtl
mov
sahf
arpl
aad
stos
cld
ret
or
out
dec
dec
cmp
xchg
xchg
jge
popa
scas
test
loopne
jmp
or
clc
mov
aam
pop
mov
mov
leave
or
rorl
cmpsb
dec
mov
sbb
cwtl
push
fimull
mov
xchg
popa
scas
cmp
mov
call
push
xchg
inc
sbb
sbb
test
and
pushf
loop
out
add
inc
xchg
jmp
jns
leave
add
std
iret
int
inc
lock
mov
and
push
add
scas
fsubs
sbb
jnp,pn
pop
or
dec
sbb
jge
xchg
mov
pop
mov
mov
fiadds
int
jg
lods
sbb
mov
repz
mov
insl
adc
and
push
sbb
cwtl
ficoml
mov
data16
push
fstps
dec
push
in
adc
push
xchg
xor
lcallw
popf
cmp
mov
stc
fidivs
push
inc
cmpsb
pop
ljmp
pushf
pop
dec
adc
and
ficomps
pop
jno
dec
orb
jne
bound
std
xchg
sar
lahf
fucomi
test
test
test
dec
pop
fdivrs
xchg
mov
movb
repz
sub
and
iret
fsubrl
mov
leave
dec
mov
pop
add
mov
lock
sbb
adc
fyl2xp1
inc
push
rcll
push
mov
dec
jge
cmc
or
movsb
mov
xor
popf
push
xor
add
frstor
sbb
addr16
push
mov
out
mov
lahf
xlat
cmc
jnp
jae
sti
out
pop
inc
fstl
lock
push
add
push
loope
shll
jmp
and
ss
push
enter
xor
sub
push
jns
subl
add
sbb
arpl
data16
mov
inc
int
sti
outsl
or
notl
stos
pop
adcl
pusha
in
sub
js
cli
or
or
and
outsb
shlb
add
fisubrs
or
aam
and
or
xor
mov
pop
mov
cmp
mov
fnstsw
dec
outsl
push
cltd
repz
mov
test
imull
lcall
repz
shl
mov
inc
mov
dec
ret
sub
cwtl
std
xchg
cmp
sub
jmp
pop
imul
mov
mov
outsb
aad
xor
insl
pop
jo
xchg
xchg
adc
jge
in
pop
ja
nop
cmpsb
pop
inc
xchg
lret
lods
xchg
fdivl
inc
lcall
subb
add
cmpl
inc
out
cmp
xchg
xorb
xor
scas
adcb
movsb
les
in
push
sbb
cli
and
popa
stos
cmp
mov
shll
mov
aaa
push
jle
sbbb
xlat
fs
pop
pop
icebp
lret
andl
movsl
movsb
mov
fisubrs
lds
loop
stos
push
out
xchg
negb
sarb
pop
xchg
jae
popa
push
fbstp
dec
insb
aaa
sarb
dec
push
pop
xor
pop
push
pop
in
lods
adc
cmp
add
add
lret
jle
jp
jmp
add
loopne
aas
fimuls
loopne
inc
lret
test
insl
sub
cmp
mov
xor
mov
mov
jnp
jae
jmp
sar
lret
imull
xchg
and
inc
sub
add
insl
mov
inc
das
pop
mov
push
in
lcall
testl
xchg
ret
lret
sbb
inc
lahf
jns
ret
shlb
mov
dec
add
sahf
pop
push
inc
icebp
xor
stc
push
jmp
rclb
or
insl
jno
or
enter
pop
adc
jns
add
or
add
je
inc
lret
testl
and
xor
fnstsw
mov
cld
cmp
icebp
push
mov
fmul
xchg
push
mov
mov
push
cmovl
out
xchg
sahf
ljmp
sahf
data16
fmull
aas
cmpsl
and
cmovs
push
adcl
dec
ja
jbe
aas
xorb
subl
and
dec
add
clc
into
lds
mov
mov
outsl
mov
rolb
xchg
je
add
fucomi
mov
je
aad
jb
dec
mov
sahf
vpackssdw
movsb
das
mov
pusha
jbe
pop
nop
mov
adc
pop
mov
xor
imul
cs
int3
dec
adc
mov
outsb
mov
push
pop
aaa
xchg
lods
jp
dec
mov
dec
hlt
mov
sub
or
lahf
jl
xorl
mov
shll
mov
in
xchg
jmp
inc
xchg
mov
jp
mov
insl
sbb
subb
push
xchg
push
mov
xor
bound
aad
inc
dec
dec
mov
and
scas
daa
pop
loope
xor
lods
dec
les
dec
pushf
jmp
out
mov
lock
mov
xor
pop
mov
dec
push
movsl
mov
dec
push
ss
mov
aas
jmp
cmp
jb
lods
push
xor
divb
ret
mov
or
dec
pop
fwait
cmp
stc
inc
movsl
inc
xor
push
mov
push
insl
pop
es
mov
mov
cmp
test
mov
mov
push
div
or
jmp
fdivl
push
popf
push
hlt
repnz
pop
daa
add
cmp
xchg
fsqrt
test
mov
lcall
pop
stos
mov
cmp
inc
push
mov
aad
cltd
fimuls
dec
jle
lret
pop
jbe
subl
in
div
jo
cmpsb
insb
imul
mov
mov
pop
repnz
adc
sbb
cltd
adc
scas
pop
add
dec
add
sbb
sbb
test
cwtl
ljmp
and
fadds
insb
adc
cmp
add
sbb
dec
mov
outsl
xchg
inc
mov
jmp
sti
int3
sbb
pusha
inc
mov
push
and
es
jp
push
xor
cmp
fstpt
xchg
mov
test
push
int
inc
jp
stc
or
add
out
ret
mov
lret
rol
push
push
push
addr16
xchg
mov
xor
dec
mov
jb
outsb
jg
cmpsl
jo
jp
inc
lret
mov
in
jns
pushf
jg
inc
push
push
sahf
mov
mov
push
nop
ss
push
mov
in
add
add
jae
out
xor
mov
cmpsl
sbb
stos
iret
push
inc
arpl
lret
and
shl
sub
fidivrs
insb
adc
pop
cwtl
ljmp
fdiv
loope
inc
call
pushf
js
xchg
mov
mov
dec
int
xor
aaa
push
in
gs
aaa
das
in
pop
loopne
shll
clc
mov
pop
fwait
addr16
and
cmp
stc
repnz
movsb
hlt
stc
xchg
pop
int3
jns
push
or
pop
call
cmp
mov
jg
cmp
or
jecxz
idivl
mov
mov
jp
ljmp
push
cmpsl
cmp
cmc
push
cltd
lock
aad
cmpsb
jecxz
cmp
xor
xchg
hlt
or
sub
cmpb
and
push
mov
xlat
fidivs
push
xchg
mov
push
das
fistpl
push
xchg
std
jne
jne
sub
rol
mov
push
sub
xchg
loop
out
hlt
jmp
adc
adc
mov
add
or
or
in
dec
push
pusha
jns
or
fsubrp
cwtl
lock
jne
lods
roll
std
leave
xor
xor
mov
out
std
xchg
push
and
je
loope
stc
push
mov
fidivrl
lods
mov
mov
or
add
lret
and
enter
test
add
jo
cwtl
loope
adc
loop
and
jne
xchg
cmp
aaa
loop
mov
jne
pop
push
sbb
fs
insb
xor
in
mull
cmp
cmp
fidivs
ljmp
mov
sub
mov
or
stos
fs
orb
mov
sar
imul
lods
pop
mov
xor
mov
mov
popa
pushf
add
in
lcall
loope
hlt
push
jge
sti
fimull
xchg
sub
jnp
sarl
fimull
xor
int3
pop
adc
dec
push
xor
stos
mov
pushf
dec
out
loope
sub
push
cmp
scas
sub
sbb
mov
jge
ror
lahf
out
mov
xchg
fwait
pop
int3
jb
call
imul
jecxz
push
ret
test
lahf
mov
and
cwtl
cmp
xchg
rolb
imul
ljmp
test
mov
aam
shll
push
mov
in
pop
mov
jmp
add
mov
inc
add
jle
enter
jns
ret
daa
xor
mov
push
addr16
aad
shrl
pushf
lret
jle
iret
ja
or
imul
push
cli
push
rcll
mov
push
mov
ds
sub
push
movsb
scas
loopne
adc
outsb
mov
call
add
movsl
insb
shl
adc
cli
inc
les
xchg
push
stos
sbb
test
mov
mov
inc
das
pop
jle
jbe
pop
addr16
xor
fsts
lcall
push
out
test
sti
out
mov
sbb
nop
jb
imul
inc
fwait
daa
dec
sbb
lods
inc
sbb
push
add
pop
inc
fcomps
test
or
test
test
and
sti
out
insl
les
dec
sub
sarb
add
jae
add
xlat
int3
cmpsl
popa
jns
es
xchg
jnp
pop
fcoms
sub
mov
outsb
movsl
adc
ja
stos
adc
mov
or
cmpsl
dec
ficomps
aad
imull
xor
add
sbb
pop
mov
xor
outsl
inc
mov
lea
xchg
ja
outsl
xchg
xchg
pop
leave
pusha
notb
inc
loope
xor
dec
notl
inc
fdivs
fisttps
sti
cmp
loopne
inc
cmpsb
inc
ret
sub
out
stc
jno
sbb
push
inc
in
enter
daa
cmp
cmp
push
setno
imul
loope
arpl
xchg
lcall
jno
push
shll
inc
shl
cs
shlb
add
sbb
scas
test
incl
inc
inc
xchg
dec
sbb
stos
and
push
jns
stos
or
adc
and
adc
dec
lcall
or
jbe
and
inc
fcmovu
imul
repz
adc
loop
popf
dec
ljmp
cmp
lock
fiadds
push
fwait
xor
sbb
lods
fmull
daa
adc
filds
fadd
xchg
jmp
mov
out
add
test
mov
pop
popa
dec
imul
sbb
sbb
jg
push
pop
jo
cmp
jns
cltd
jne
rcrl
pop
jg
sahf
loop
cs
pop
imul
or
push
into
dec
orb
or
test
test
push
test
jae
mov
aaa
inc
rcl
cmp
mov
outsb
push
js
popf
and
sub
jno
pop
ss
push
shll
push
decb
call
adc
ds
adc
out
enter
jbe
mov
xor
lock
ud2
daa
out
jnp
inc
les
mov
pop
inc
xchg
jne
dec
or
test
push
inc
inc
add
sbb
enter
mul
add
xchg
clc
adc
sti
cld
mov
mov
lds
lret
add
dec
push
mov
xchg
or
mov
sub
sub
ret
inc
and
xchg
lds
arpl
adc
mov
inc
dec
jno
iret
sti
xchg
and
jne
dec
jnp
shl
stos
repnz
psubsb
pushf
xchg
mov
sub
popa
insl
xor
lods
pop
test
enter
sub
push
addr16
mov
in
call
jmp
aam
shlb
test
inc
inc
adc
icebp
ret
cmp
filds
popa
mov
pop
lock
push
xor
pushf
out
sahf
jg
inc
mov
dec
mov
jae
mov
outsl
jns
inc
jmp
sub
sub
sbb
lahf
pop
mov
xchg
int3
adc
lea
orl
mov
cmp
push
push
addr16
cs
adc
mov
xor
pusha
js
iret
jb
mov
stos
out
dec
cltd
cli
or
lret
aam
or
cmp
and
inc
dec
dec
sbb
xchg
cld
repnz
pushf
fstps
ret
ds
mov
mov
mov
xchg
insb
pop
nop
mov
mov
xor
jo
mov
ffree
inc
ret
mov
in
pop
leave
mov
bound
mov
xchg
orb
sbb
cmp
push
sbb
ja
lret
shlb
sub
stc
lods
adc
punpckhwd
in
push
sub
imul
xor
addr16
cmp
mov
daa
inc
jmp
push
jmp
xchg
clc
pop
daa
jns
sub
std
mov
and
adc
out
dec
cmp
sub
pause
scas
in
sarl
adc
inc
or
sti
sub
out
sti
ds
aaa
les
cld
movsl
adc
rcl
jmp
data16
pop
fmull
shrb
xor
ds
pop
xchg
lds
mov
mov
sarl
jb
mov
jb
mov
lcall
dec
dec
ja
sub
mov
fwait
pop
fisubrl
mov
mov
pop
rcll
lret
insb
lock
lds
lcall
adc
pop
mov
les
sbb
mov
cmpsl
cmovnp
and
pop
shll
mov
stos
xchg
mov
in
test
pop
in
les
push
int
or
sub
addr16
push
roll
pop
inc
cmp
xor
push
nop
out
pop
iret
adc
cltd
push
loop
dec
ds
mov
cmp
in
mov
inc
dec
shld
sbb
ljmp
adc
sub
lea
sub
sub
cmc
cwtl
dec
out
push
add
popf
ja
xlat
pop
jmp
cmpsl
fidivrs
nop
xor
lret
cs
lods
pop
aas
xor
inc
fnstcw
xor
lea
mov
sbb
js
test
mov
out
cmp
cmc
lds
arpl
scas
pop
fiadds
inc
out
data16
sbbb
sbb
out
mov
mov
or
in
in
xlat
or
dec
or
dec
xchg
push
es
push
mov
dec
jbe
mov
shr
notb
in
shl
nop
push
data16
inc
test
inc
cwtl
nop
sbb
stos
xor
clc
mov
and
insl
mov
fiaddl
push
mov
fldl
push
mov
xor
jns
andl
cmp
sbb
or
xor
sub
fisubl
cmc
leave
mov
pop
jno
insl
sbb
mov
std
push
scas
mov
lods
shlb
mov
rcrl
mov
out
les
cs
mov
mov
push
pop
pop
adc
jb
test
aas
loope
jo
push
cwtl
mov
xor
gs
shlb
dec
or
xor
xchg
sarb
mov
adc
test
popf
test
xchg
push
rcll
xor
jecxz
jne
lds
mov
push
pop
lock
xor
lods
imull
jne
fcmovne
mov
sbb
pop
inc
into
mov
mov
jo
xchg
xchg
fwait
cmp
ret
jb
lcall
xor
pop
adc
xor
add
adc
sbb
hlt
iret
lods
ret
clc
movsb
sbb
and
les
or
and
lret
xchg
dec
aam
pop
sbb
js
xchg
sbb
ficoml
pushf
xor
sahf
imul
js
xchg
neg
or
xlat
mov
cmp
xor
xchg
sbb
mul
mov
push
jb
insl
jmp
loop
jnp
dec
xchg
dec
lock
loope
jb
xchg
push
inc
xchg
cwtl
sahf
jmp
sti
hlt
mov
ret
cmc
cmpsb
or
mov
inc
nopl
sahf
lret
xchg
ja
test
mov
and
imul
sarl
mov
sub
iret
div
push
jb
fnstsw
lcall
cmc
xchg
movsl
test
fxam
push
out
jbe
and
sarb
sub
adc
mov
mov
fwait
add
insb
sbb
mov
stos
addl
mov
adc
xchg
insb
and
pop
and
adc
loope,pn
ret
push
or
adc
cld
das
test
aaa
scas
push
pop
push
into
icebp
cmp
xchg
lahf
jno
inc
jg
adc
sbbb
nop
xchg
ds
in
adc
not
filds
mov
cmp
or
jmp
rolb
xor
stc
in
shll
imul
push
imul
andb
lods
ss
iret
jne
fisubrs
fld
jbe
mov
dec
sbb
pop
add
adc
std
out
and
into
pushf
test
jmp
xchg
sub
loopne
xlat
mov
mov
mov
push
pop
pusha
jmp
into
inc
jmp
pop
insb
imul
sahf
mov
adc
mov
cmp
push
jns
jb
push
push
jge
sub
ja
stos
or
aam
pop
pop
out
sbb
cwtl
data16
fnstenv
fidivs
ss
jbe
rcll
jno
andb
xor
mov
cmp
push
xchg
dec
std
iret
in
insb
rol
stc
cmpsb
fwait
jbe
mov
es
xchg
fucomi
mov
mov
repnz
sbb
mov
xchg
xor
mov
cs
add
sub
icebp
daa
pop
sar
add
mov
xchg
ja
jnp
jge
hlt
or
iret
sbb
clc
sahf
stos
adc
fwait
jae
int
xor
jb
clc
hlt
or
mov
setae
les
ret
adc
xchg
jp
cmp
xchg
movsl
xor
jns
jle
sbbl
xor
jmp
cmpsl
negl
mov
add
pop
js
jo
or
das
jo
or
ds
dec
cmp
sti
ret
mov
xchg
pushf
push
push
or
test
dec
jns
pop
movsb
mov
and
push
push
xchg
mov
rorb
or
pushf
scas
and
rorb
mov
or
clc
push
pop
push
int
sub
jns
pop
fistl
loopne
loopne
clc
out
push
dec
daa
das
or
add
movsb
fucomip
fwait
xorb
cltd
push
inc
push
pop
sbb
adc
inc
das
mov
cmpsb
or
cmp
out
test
mov
popa
mov
fidivs
and
filds
xchg
inc
push
jle
push
cmp
lock
fwait
jmp
js
xchg
dec
cmp
stos
fs
pop
mov
in
jns
dec
mov
pushf
add
js
sbb
fcmovnb
dec
jl
popf
lcall
push
xchg
add
fistpl
or
gs
out
xchg
xchg
pop
sarb
push
push
mov
xchg
call
or
cmp
mov
mov
push
addr16
mov
dec
pusha
xor
addr16
test
insb
movsb
cld
cwtl
sahf
jg
test
mov
je
imul
mov
out
xchg
dec
ficoms
sbb
out
and
sbb
mov
sub
xor
lea
in
lea
fistpl
mov
push
int
xor
jnp
and
cwtl
xor
dec
outsl
or
imul
stos
or
loop
mov
cli
fucomp
std
mov
in
adc
iret
int3
mov
and
andl
lods
test
repnz
jns
pop
push
or
addr16
imul
pop
jp
push
sub
dec
aas
add
pop
sbb
stos
lods
das
sbb
mov
mov
orl
jbe
ja
int3
xchg
fildl
shll
scas
pop
sub
iret
lcall
jbe
mov
adc
ja
dec
cmc
jno
xchg
jo
push
lret
ds
outsl
dec
lcall
stc
mov
in
mov
lods
mov
test
and
test
jnp
mov
andl
push
mov
cmp
cmp
icebp
lock
add
inc
sub
gs
icebp
sbb
xchg
jl
jno
cmp
xor
outsb
jo
std
sub
xor
cmpl
inc
in
rolb
jg
fmull
int3
dec
pop
ret
push
and
push
and
aaa
lds
push
mov
sbb
inc
or
dec
sbb
mov
fstpl
inc
sbb
shl
int
sti
cltd
dec
xchg
in
adcb
aas
add
cmpsb
xchg
mov
icebp
mov
mov
cmpsb
cmp
mov
xor
sub
and
mov
pop
push
add
rorl
push
in
lock
out
add
cltd
cli
cmc
add
xor
jae
adc
mov
xor
sar
lcall
repz
ja
jmp
rcl
xchg
adc
jle
adc
mov
ret
dec
mov
popf
xchg
xchg
mov
shl
xchg
jg
xchg
jmp
imul
jns
ficoms
pop
scas
nop
cmp
jns,pt
mov
mov
ljmp
mov
xchg
mov
into
jmp
cmpsb
mov
fidivrs
into
xchg
mov
arpl
leave
xchg
std
sub
addr16
mov
loopne
add
and
imul
test
push
add
mov
push
xchg
data16
adc
mov
xchg
xchg
jle
call
pop
pop
mov
jnp
cmp
loopne
int3
push
pop
pushf
pop
xchg
push
icebp
pop
mov
mov
jno
sarb
ljmp
mov
dec
call
gs
push
loopne
pop
mov
dec
dec
xor
in
arpl
ret
or
loop
jb
cmpsb
or
cs
adc
or
nop
or
call
popl
cmc
xchg
iret
out
pop
fnstcw
sbb
pushf
xlat
pop
add
jno
aaa
mov
cmpsb
cmp
jns
add
pop
add
in
sbb
cli
aad
mov
cmp
mov
std
xchg
pop
pop
xor
sbb
xchg
xchg
leave
es
push
dec
punpckldq
test
insb
xor
les
shrl
sbb
hlt
aaa
fdiv
push
cmp
lods
cmc
mov
addb
push
lahf
mov
cmpsl
aaa
mov
sbb
fistl
dec
js
cmpsl
test
cwtl
sbb
sbb
push
lods
test
inc
jg
inc
xchg
iret
dec
mov
repz
je
inc
push
test
and
pop
inc
je
mov
inc
xchg
push
inc
push
jge
fisubl
mov
inc
xchg
daa
lret
mov
jnp
jmp
inc
push
jge
jle
lret
int3
shl
pop
stc
pop
mov
test
push
xorb
stc
jl
dec
mov
mov
mov
pop
sarb
dec
pop
inc
sub
push
and
inc
or
or
and
or
mov
inc
jns
pop
inc
icebp
out
call
repz
adc
sub
mov
mov
push
popa
sarl
ljmp
arpl
cmpl
sub
rolb
lahf
fs
inc
push
xchg
loop
mov
cmp
lret
mov
pop
jb
sbb
imul
insb
dec
mov
xor
xchg
cld
xchg
cmpl
mov
scas
mov
cmp
mov
and
sbb
popa
pop
mov
dec
imul
xor
fisttpll
sbb
dec
and
and
je
adc
mov
mov
aas
sub
sahf
es
das
es
mov
inc
lahf
jge
add
repnz
stos
das
inc
mov
shl
fildl
mov
cmp
adc
adc
xchg
dec
sub
pop
fisubrs
xor
sub
data16
mov
mov
push
or
jae
std
inc
addr16
outsb
push
lds
dec
call
xor
xchg
mov
fisubrs
mov
adc
fsubr
fwait
fwait
xor
shrb
mov
mov
inc
enter
cmc
add
fwait
mov
outsb
mulb
pop
test
add
mov
push
and
mov
out
dec
push
adc
shrl
and
push
add
dec
cli
mov
mov
fcoms
pop
push
arpl
add
rep
xchg
inc
outsb
cmp
aas
sub
and
mov
repnz
xor
mov
and
test
mov
jecxz
or
push
or
pop
fs
or
movsl
aaa
jbe
mov
sbb
imul
daa
lret
rolb
sbb
mov
xor
dec
dec
and
or
loope
pop
lods
icebp
mov
pop
test
mov
testl
jns
xor
xchg
mov
sbb
pop
test
dec
sbb
push
mov
jl
outsb
jg
xlat
imul
mov
jg
adc
out
fdiv
sub
push
and
push
cmp
xchg
mov
push
ljmp
call
cmp
inc
mov
movsl
adc
lods
inc
mov
cmp
cmpsb
loop
cli
scas
inc
push
shrl
xor
inc
shl
push
subl
adc
fstpt
inc
cmpsl
aad
push
jge
flds
std
lock
leave
mov
ds
jnp
aam
or
iret
mov
sbb
fidivrs
xchg
andb
sub
fdivs
pop
cmpsb
adc
add
das
lahf
sub
mov
loop
jns
stos
or
sti
xchg
sbb
push
pop
roll
mov
jb
lahf
mov
jnp
pop
jno
aam
scas
fadds
std
fsubrp
dec
dec
out
and
dec
push
sbb
jne
xor
aas
or
sbb
jmp
insb
push
dec
cmp
dec
sub
mov
cmp
pop
push
je
inc
out
pop
int
sbb
or
orl
pop
lcall
sbb
in
dec
pushf
cmp
repz
sbb
pop
test
aaa
pusha
gs
mov
jno
into
mov
cmpsl
jno
cwtl
cwtl
data16
mov
or
add
fdivs
pop
adcl
cs
xchg
mov
jp
cmp
add
out
ds
shlb
repz
dec
dec
popa
or
test
xchg
test
sub
jg
fadds
push
add
insb
push
cli
xor
test
out
les
int
adc
push
mov
or
push
inc
cmp
test
jmp
mov
in
or
imul
sbb
cmp
flds
mov
and
cmp
ss
inc
roll
mov
bnd
or
bnd
hlt
bound
cmp
jle
int
into
aaa
lea
jmp
in
in
push
pop
and
inc
adc
mov
shlb
dec
jno
mov
mov
cld
call
mov
xor
sbb
hlt
push
dec
mov
add
mov
inc
sbb
inc
push
or
jnp
hlt
and
xchg
push
jo
filds
aaa
iret
scas
mov
sub
sub
popf
icebp
fmuls
dec
cmp
mov
push
iret
into
sbb
and
addr16
int
add
scas
loope
repnz
sub
in
leave
loop
cmpsb
mov
and
movsb
test
pushf
and
mov
dec
call
notl
rcrb
inc
mov
mov
lods
xchg
sub
jge
clc
aas
insb
sbb
cmpsb
cmp
dec
push
add
iret
jp
fcmovnbe
jb
rolb
xchg
data16
inc
popf
pusha
imul
pop
addr16
sbb
jno
sar
sbb
pop
push
scas
mulb
mov
jg
cwtl
push
dec
and
repz
xor
std
std
push
mov
outsb
cmc
addr16
test
jg
test
jle
mov
jae
pop
ret
icebp
and
cmp
hlt
lahf
and
mov
mov
jb
fidivrs
enter
sbbb
stc
mov
pop
dec
leave
or
dec
dec
dec
add
dec
push
pop
mov
push
pop
jb
jg
sbb
mov
repnz
cs
sbb
mov
mov
mov
xor
sbb
sbb
sub
or
lret
data16
nop
cli
lahf
mov
and
stos
fimuls
sub
or
fimull
jl
add
test
sub
sti
jle
ret
icebp
in
push
sbb
sub
stos
out
nop
arpl
adc
xchg
and
xor
insl
and
inc
inc
mov
pop
loopne
mov
mov
outsb
adc
pop
mov
xchg
dec
leave
mov
iret
xchg
mov
lods
jecxz
fcoml
push
or
pop
dec
call
dec
cs
rcll
jp
add
inc
rorb
lock
repz
jp
fwait
xchg
das
sbb
mov
enter
or
adc
sbb
shrl
cs
xor
cmp
jb
pop
push
mov
lret
scas
mov
mov
adc
or
imul
fwait
ret
xchg
aad
ds
add
xchg
push
ss
test
mov
cmp
push
adc
xor
cs
imul
push
pop
les
mov
sbb
loop
jae
xchg
roll
xchg
das
aam
test
add
sub
jno
xlat
enter
insb
mov
ljmp
sbb
adcb
loop
lahf
pusha
jg
aas
push
inc
mov
push
in
in
push
scas
mov
inc
fbld
and
fs
lcall
mov
inc
jnp
mov
sti
push
ss
dec
mov
mov
mov
rcrl
fidivl
or
cmpsl
icebp
out
mov
mov
pusha
dec
jg
mov
sbb
rcl
data16
and
push
rcl
pop
hlt
pop
mov
xor
mov
sbbl
push
sbb
add
lahf
outsb
aad
aaa
jge
arpl
inc
pop
jl
mov
pop
or
dec
jle
sbb
imul
leave
fisttps
sti
xchg
jg
shlb
ljmp
fnstenv
jnp
addr16
inc
rorb
cmp
cmp
test
push
add
sub
sbb
cmp
es
mov
inc
or
cwtl
in
mov
jmp
jbe
ret
jne
mov
adc
call
xchg
dec
popf
cmp
cmpb
dec
cmp
and
cmp
cmpl
out
xchg
adc
loop
mov
pop
jbe
jl
add
sbb
dec
sub
ficomps
int
lods
mov
popf
dec
ljmp
push
jge
mov
and
icebp
cltd
sub
cmp
lds
nop
push
mov
out
cmpsl
xor
rcrl
jb
std
rorl
sti
movsb
add
xor
int
enter
and
mov
jecxz
sbbb
imul
mov
and
xchg
addb
es
push
add
iret
xchg
xchg
or
inc
jno
ds
pushf
out
mov
cld
adc
sbb
dec
sbb
cmc
dec
jno
insl
jns
and
push
fs
sub
push
dec
fadds
xchg
mov
push
xchg
daa
lods
in
sbb
enter
inc
mov
std
cmp
mov
ds
daa
aas
stos
cmp
pop
rclb
adc
mov
dec
gs
and
test
imul
aam
sub
ja
in
adc
mov
lods
xchg
dec
stos
test
adc
shlb
push
aad
stc
ljmp
dec
ds
ror
add
push
test
cmp
add
sbb
ds
jmp
jae
cwtl
mov
xor
cmpsl
pop
pop
pop
xchg
xchg
sub
jo
push
mov
mov
je
push
mov
arpl
lret
dec
pop
pop
xor
push
inc
aas
lret
jne
dec
push
mov
sbb
or
mov
enter
leave
sbb
clc
pushf
dec
mov
cltd
inc
loop
dec
cmc
adc
cmp
adc
add
aam
jbe
stc
cmp
in
pop
rorb
cwtl
dec
xor
mov
sbb
das
test
cld
icebp
inc
sti
rorb
pop
cmp
xor
or
ss
add
inc
push
in
dec
add
jne
adc
jns
inc
in
mov
mov
movsb
bound
adc
xchg
lret
xchg
sub
cmpsl
push
jo
jbe
inc
dec
test
xchg
xchg
sbb
jp
in
sub
lcall
mov
xorb
jmp
mov
fldenv
xlat
fistpl
dec
push
jo
push
xchg
inc
das
adc
mov
add
mov
push
jns
adc
mov
cli
cmp
lret
mov
xor
pop
fwait
imul
test
jle
pop
inc
and
push
sbb
pushl
sub
stc
stos
jb
lods
in
xchg
push
lock
imul
pop
addr16
lods
mov
cwtl
js
or
mov
rol
dec
daa
xchg
xchg
dec
xor
jmp
xor
ret
into
je
mov
mov
cwtl
outsb
sbb
add
lock
push
jbe
orl
cmp
or
sbb
je
push
mov
mov
lahf
push
cmovg
les
movswl
push
fs
cmp
adc
lock
pop
pop
daa
sbb
push
cmc
mov
mov
mov
push
out
sub
pop
insb
int
add
dec
int
daa
xor
adc
or
fstl
dec
sub
out
aad
nop
arpl
jns
push
mov
cmpsb
test
sbb
ficomps
xchg
xchg
sbb
jo
pop
out
in
lcall
xor
pop
popf
xchg
and
mov
fistpl
gs
icebp
mov
out
pop
das
in
adc
sahf
rol
stos
mov
faddl
test
mov
push
clc
dec
or
push
ds
sahf
and
sub
out
xchg
imul
dec
enter
cmpb
lret
pop
sub
push
push
out
shlb
cmp
adc
and
inc
mov
or
out
push
test
add
leave
inc
shlb
jb
sub
and
xchg
arpl
fsubrs
inc
xlat
scas
mov
sahf
adc
jg
xor
call
add
loope
mov
fucomp
sahf
data16
xchg
test
pop
icebp
insl
in
jg
and
sbb
fwait
mov
mov
jno
les
loopne
add
mov
and
rorl
call
mov
push
mov
push
and
sub
and
in
dec
push
sbb
ret
mov
in
repnz
lahf
dec
movsl
mov
js
sub
xchg
fmull
cwtl
fidivs
imul
test
dec
into
lahf
cmp
cwtl
jle
fldenv
fidivrl
mov
inc
jl
ret
out
adc
mov
push
jae
loop
push
inc
add
xor
push
xchg
rorl
and
fnstenv
inc
insb
in
outsb
push
sbb
hlt
mov
cmc
and
repz
push
pop
call
aas
add
mov
push
and
idiv
mov
test
ss
inc
inc
mov
std
xor
icebp
push
mov
popf
push
repnz
ss
insb
adc
nop
inc
push
pop
mov
loope
dec
push
jne
rcll
lods
jecxz
loopne
pop
add
and
sbb
out
rcr
cmpsb
or
inc
mov
dec
addr16
push
or
imul
cs
icebp
sbb
inc
into
es
sub
insl
lret
pop
mov
pop
movsl
in
ret
out
lahf
mov
xorl
and
cmp
pop
pop
loopne
or
inc
jno
and
arpl
fidivrl
loop
add
xor
std
cmp
dec
das
jge
sub
inc
mov
bound
cmp
mov
insb
and
dec
jp
mov
in
pmullw
mov
sysenter
xor
enter
push
stos
mov
out
mov
addb
cmc
mov
popf
jmp
test
jnp
je
fwait
jmp
movsb
add
cmpb
test
cmp
jmp
add
push
test
or
jmp
scas
and
add
imul
lcall
adc
pop
cmp
fisttpll
pushf
inc
jmp
fcoml
cltd
ret
jae
in
lret
dec
idivl
loop
sbb
test
and
cld
sub
jmp
or
xor
xchg
mov
fs
inc
jge
fwait
pusha
push
jne
imul
dec
push
sti
mov
lock
das
adc
adc
jne
stos
out
ret
lret
adc
inc
adc
std
int3
mov
mov
ljmp
fistpl
and
and
pop
ret
pop
lods
pop
inc
mov
cmp
pop
rclb
sub
test
cs
insl
mov
fcmove
js
inc
aas
or
mov
loopne
inc
pop
out
dec
pushf
scas
sub
dec
and
or
push
xor
mov
lds
lret
popf
notl
mov
mov
and
lods
xor
xchg
mov
in
in
push
pusha
push
cmpsb
icebp
sub
mov
push
xor
jg
dec
stos
xchg
imul
imul
dec
jmp
mov
arpl
pop
jbe
sbb
pop
mov
mov
pop
jg
mov
jmp
arpl
imul
mov
clc
popa
test
cmp
ret
fwait
push
sbb
ljmp
out
fwait
ret
nopl
inc
inc
nop
mov
push
rcr
test
movsb
pop
mov
and
pop
sbb
xlat
shl
sbb
scas
sti
and
es
fcomps
in
jle
shrb
inc
add
ret
add
rcl
pop
pop
inc
pop
adc
das
jno
pop
jns
sbb
sub
jecxz
out
stos
and
adcb
cmp
dec
sbb
movl
jp
out
pop
xlat
jae
in
es
xlat
outsb
xchg
ret
push
fcomps
mov
sub
hlt
insl
ja
jne
fsubrl
push
push
out
cmc
xchg
int3
xor
lock
scas
push
or
jl
or
push
dec
inc
sub
divb
and
lods
xchg
pusha
addb
mov
cmpsb
mov
rcl
xchg
push
sbb
lret
ret
adc
push
sub
jmp
jg
cmp
repnz
rcrb
lret
mov
jl
inc
or
mov
and
mov
jge
xchg
bound
xchg
cld
fwait
fwait
or
nop
dec
mov
xor
or
andb
loope
add
repnz
mov
add
aas
gs
aaa
mov
mov
sahf
add
idivb
adc
je
data16
xchg
clc
call
xchg
lret
jne
add
push
adc
adc
outsb
insb
fsqrt
push
xchg
int3
subb
call
or
enter
and
mov
mov
loop
fwait
mov
cmpsb
out
out
pop
outsl
int3
shlb
dec
push
popa
add
ja
insb
mov
push
xlat
filds
xor
mov
mov
jno
out
xlat
fidivl
je
into
mov
jl
shl
mov
in
cmp
jmp
insl
mov
push
push
cwtl
arpl
sbb
loopne
xchg
sti
xchg
cmpsl
fs
jo
jnp
pop
loop,pn
inc
cmp
mov
dec
mov
jne
sbb
mov
imul
mov
sbb
jns
pop
cli
mov
into
pop
xchg
fisttpl
bound
dec
inc
mov
jo
imul
sub
inc
call
pusha
push
mov
xchg
pushf
lods
xchg
in
adc
adc
popf
adcl
cmp
fldenv
jne
ret
inc
jnp
ds
das
iret
xor
cltd
add
lds
mov
test
jno
push
xor
jns
or
mov
lcall
or
xchg
or
call
mov
push
shl
cmp
cmp
xchg
test
push
pop
insb
dec
arpl
mov
jns
sahf
stos
jno
cmc
sub
movsl
lock
int3
fmulp
cmp
negb
xor
repz
loopne
shll
mov
sbb
cmp
stc
addr16
pop
shl
les
adc
sbb
and
mov
movsl
mov
aaa
sub
loop
mull
sub
or
mov
mov
andl
cli
jle
mov
mov
jns
pop
pushf
jecxz
adc
cmpsl
out
arpl
insb
xchg
repz
lret
mov
adc
push
iret
das
push
adc
dec
fildll
push
hlt
and
das
fimuls
jmp
ror
stos
outsb
int
inc
or
lret
adcl
sub
sub
pusha
loop
mov
dec
push
dec
outsb
jge
loopne
mov
jae
clc
pusha
push
add
or
jae
mov
sub
iret
sub
arpl
add
out
xchg
lock
and
fidivrl
push
xor
imul
push
sub
sbb
pop
cmp
or
push
test
or
das
lods
and
rorb
outsb
xchg
insb
sub
shll
mov
out
xchg
add
or
fs
mov
cmp
jl
aaa
jo
jne
pop
and
and
mov
mov
mov
mov
sbb
adc
dec
mov
add
add
sbb
in
jecxz,pt
cld
push
fimull
xchg
lahf
aam
or
xlat
push
xor
cmc
mov
imul
scas
fsubr
push
lock
sbb
xchg
xchg
pop
shlb
jl
insl
adc
sbb
xor
arpl
inc
imul
mov
outsb
adc
outsl
inc
cld
mov
push
push
stos
jecxz
push
shr
mov
xchg
ljmp
mov
ss
es
nop
je
in
add
mov
mov
pop
xor
pop
imul
pop
cld
subb
flds
xlat
cmp
shlb
lods
mov
push
dec
or
sbb
sbb
pop
mov
sub
fs
xchg
std
push
pop
insl
sbb
lahf
scas
dec
mov
aam
mov
sub
stc
cpuid
into
pop
clc
push
xor
or
out
jbe
pop
sub
out
cmp
xor
push
lret
sarb
sbb
inc
xor
cmovae
pop
icebp
aam
xor
std
mov
mov
cmp
lcall
mov
add
lea
fadds
sub
test
sbb
or
int3
scas
es
and
sub
jge
mov
add
sub
fmuls
in
rcr
inc
jns
scas
fwait
jp
ffree
int
mov
pop
fstp
sub
pop
rcrl
arpl
js
cmpl
or
inc
aam
fcomps
fwait
add
jp
popf
bound
sbb
std
mov
pusha
inc
inc
mov
mov
data16
xor
fsubl
adc
push
xchg
xorb
loop
jo
adc
mov
push
xchg
ds
push
xor
xor
std
jle
popf
sbb
jecxz
inc
sub
into
arpl
test
and
cmp
cltd
jge
xor
incl
lcall
jl
enter
lds
bndldx
cld
ja
push
push
pusha
cmp
daa
push
mov
in
or
inc
decl
jp
push
inc
push
daa
add
loop
iret
rorl
int
or
xor
lcall
jmp
pop
xchg
jge
mov
cli
icebp
inc
or
cmpsb
clc
mov
loop
jecxz
inc
xchg
xchg
rsqrtps
pop
lods
add
mov
fildll
pop
jmp
addr16
insl
inc
stos
mov
mov
mov
push
lea
xchg
je
aaa
cmp
pop
pushf
add
xchg
test
mov
push
into
dec
adc
or
mov
add
mov
ret
mov
push
adc
mov
xchg
push
movsb
sbb
lcall
fnstsw
mov
adc
mov
dec
push
sahf
in
jg
outsl
loope
cmpsb
ret
dec
mov
sbb
pop
or
sub
hlt
shll
xchg
js
cwtl
mov
ds
inc
adc
pusha
mov
mov
rcll
dec
add
xlat
mov
xchg
ss
xchg
push
dec
and
mov
test
add
sub
pop
push
scas
popa
hlt
lahf
ss
push
fcoml
das
jle
mov
dec
adc
xchg
dec
scas
cmp
repnz
imul
negb
dec
lret
push
or
insb
xor
and
mov
dec
es
dec
loopne
adc
cli
xchg
daa
add
ficomps
pop
jg
lds
push
xchg
mov
js
std
mov
incb
lock
xor
into
push
and
mov
fdivrl
data16
aam
pop
jb
sub
arpl
rcl
or
aam
lods
inc
arpl
xchg
sbb
adc
xchg
int
and
pop
aam
push
filds
inc
xchg
aad
addr16
sub
push
push
jp
mov
adc
test
mov
and
cs
in
push
int
lret
and
cmpsl
cmpsl
or
sub
data16
jbe
add
pop
and
add
pushl
cmp
faddl
and
pop
xchg
jmp
fmuls
dec
in
cmpl
push
inc
aam
loopne
pop
and
jecxz
or
lret
into
sbb
shlb
outsl
mov
fmuls
mov
aaa
xlat
cmp
pop
imul
sbb
push
xor
sbb
adc
sbb
push
inc
lahf
inc
jecxz
push
dec
shlb
xor
dec
in
pop
mov
pop
cmpsb
or
dec
idivl
daa
pop
mov
loopne
mov
adc
clc
leave
mov
fidivs
aaa
xor
iret
scas
mov
push
std
test
repnz
jb
lods
ret
add
mov
cs
jp
cmp
dec
ss
mov
shrl
mov
jle
je
jae
fnop
repnz
cmpsb
test
add
inc
adc
mov
stos
xchg
cmp
loopne
lods
push
sub
cwtl
stc
sub
mov
push
imul
fstps
les
outsb
jmp
adc
and
mov
call
add
mov
adc
iret
cmp
test
js
shll
jae
les
mov
jne
cli
lret
cwtl
es
push
dec
mov
test
clc
loop
sub
inc
cmp
test
jmp
imul
or
adc
leave
enter
push
inc
add
xlat
mov
or
mov
js
in
sbb
sub
dec
jne
xchg
push
mov
push
mov
add
jge
into
mov
iret
out
outsb
stc
push
add
cs
sarb
leave
ret
fdivs
pop
add
mov
and
fdivrl
scas
pop
rclb
data16
loop
pop
sub
inc
xchg
xchg
adc
jecxz
loope
in
xchg
fwait
mov
shr
pop
stos
cmp
rcr
pop
loop
add
sti
sbb
and
push
popa
inc
pop
xchg
cmp
sub
jg
lcall
scas
roll
jns
pop
call
jge
adc
idiv
imul
jle
inc
xchg
fwait
push
jge
inc
into
pop
aam
pop
mov
das
sub
lret
fucom
xchg
in
imul
cmp
mov
jle
decb
popa
cli
xchg
cmp
movb
or
lret
push
mov
jae,pt
es
xor
lret
andl
add
sbb
scas
adc
stos
cmc
sub
mov
gs
push
sub
mov
gs
lcall
xor
xor
enter
pop
mov
mov
mov
jbe
pop
js
or
or
xor
dec
lods
js
lods
push
cmp
test
mov
ror
lods
adc
adc
mov
mov
xlat
mov
leave
ror
loope
jnp
xorb
jbe
cmp
aaa
sbb
adc
lock
adc
inc
out
test
jmp
outsb
xor
repz
xchg
cmpsb
jb
lods
dec
ss
mov
jne
mov
cwtl
mov
adc
xchg
inc
jecxz
jne
scas
add
cmp
rcrb
shll
pushl
xor
mov
push
or
into
cmpsb
cmp
fwait
loopne
ja
cmpsb
call
aad
dec
stos
cltd
adc
setp
jl
add
jae
pop
pop
popa
push
js
sub
ds
cmp
mov
push
test
sahf
mov
out
jnp
xchg
outsl
jnp
popa
cwtl
push
cli
add
push
fidivs
sbb
lods
sahf
jb
fsubl
std
addr16
iret
mov
mov
push
pop
xor
mov
cmpsl
push
popa
movsl
gs
les
dec
sahf
mov
cmp
xor
scas
cmp
push
iret
lcall
push
cmp
mov
push
push
pop
push
mov
jecxz
stos
xlat
xchg
lea
jno
test
jne
movsl
loope
fisubl
xchg
cli
pop
repz
aam
cmp
repnz
lcall
push
ja
sbb
shlb
xor
push
rorb
out
push
xchg
loope
shll
jo
ret
jne
push
sbbb
push
dec
cli
push
pushl
popa
sub
imul
ss
mov
mov
int3
cmc
lds
test
mov
popa
adc
imul
adc
shrl
lea
jp
sarb
inc
and
ror
pusha
imul
sub
loope
pushl
adc
cmp
pop
call
cmp
mov
imul
mov
test
or
insl
mov
mov
xchg
cld
and
loop
es
nop
push
repnz
ret
ljmp
sbb
das
mov
mov
fcoml
or
test
pop
hlt
dec
rcr
in
lret
aaa
xchg
fucomp
jle
inc
add
cmc
ljmp
sub
dec
push
mov
and
mov
pop
fists
jecxz
or
fs
sub
orl
sub
cs
push
fistl
xchg
sbb
out
sbb
clc
popf
fucomi
dec
push
cmp
imul
andl
jp
and
repz
test
popf
mov
mov
pop
aad
inc
sub
push
and
dec
cwtl
sbb
mov
push
xor
loope
push
inc
push
push
inc
cmp
in
sti
add
jbe
js
sahf
adc
ljmp
mov
mov
lahf
cmpsl
movsb
adc
insl
pop
loop
arpl
in
sub
and
xchg
mov
sbb
movsl
or
inc
adc
mov
mov
pop
lret
pop
addl
sbb
data16
sub
fidivrl
jne
mov
xor
inc
jg
push
and
out
lds
aad
cli
push
sbb
imul
pop
xor
clc
sbb
pop
dec
lods
mov
int
add
push
rorl
and
xchg
jnp
push
loop
mov
std
jae
mov
push
sbb
pusha
fwait
roll
mov
cmp
ret
ja
shll
aam
imul
mov
dec
add
dec
adc
mov
movsl
pop
mov
or
imul
xchg
dec
xchg
mov
and
test
cmc
xor
aad
lea
or
sbb
adc
cmp
xchg
xchg
clc
dec
add
sub
sti
rcrb
hlt
stos
addl
fbstp
cmc
fidivrl
aas
xor
mov
aas
xorb
ror
adc
add
or
adc
xor
push
outsl
pop
popf
movsl
inc
xchg
sub
mov
shlb
or
xchg
fbstp
fdivrs
icebp
dec
cmp
adc
cmp
xlat
mov
adc
push
dec
sub
fstpt
repz
cmp
shl
inc
inc
push
nop
xchg
psllw
pop
dec
and
xchg
fdivrl
mov
lods
in
test
mov
inc
jg
cs
adc
add
ss
ss
or
inc
and
push
ret
cwtl
out
xchg
jmp
cmp
mov
sub
roll
arpl
ja
inc
ss
pusha
cmp
inc
test
ja
inc
push
lock
in
mov
add
mov
jns
mov
gs
add
mov
insb
pop
cmp
jp
shll
sub
repnz
or
stos
adc
arpl
xchg
popl
scas
js
dec
sbb
aaa
pop
jb
jns
or
in
dec
dec
xor
stos
mov
xlat
scas
push
jmp
jmp
jno
pop
or
push
and
repz
insb
inc
pusha
push
and
sub
out
mov
scas
das
aam
jno
or
adc
adc
mov
inc
les
repnz
notl
or
mov
inc
popa
xor
imul
gs
icebp
jle
cmovge
sub
repz
xchg
dec
rcll
push
testl
mov
sub
xor
je
mov
or
pop
outsl
or
push
inc
jl
push
jle
cld
sub
dec
adc
ficomps
xor
mov
push
adc
dec
jle
test
mov
mov
addb
das
dec
dec
sbbl
inc
iret
sbb
loopne
dec
movsb
in
or
test
sbb
inc
cmp
pushf
aad
dec
and
arpl
aas
lds
insb
fstpt
inc
pop
imul
adc
ljmp
and
icebp
inc
pop
pop
pop
jno
adc
cmpsl
or
or
loopne
inc
mov
push
mov
adc
xchg
mov
enter
sbb
shrb
mov
lret
mov
push
mov
add
adc
dec
sar
out
sbb
inc
pop
popa
push
inc
xor
inc
pop
jbe
outsb
cmp
jl
fcmovnbe
add
fldt
cltd
sub
or
pushf
sub
scas
pop
xor
push
icebp
mov
scas
pop
lods
icebp
jb
inc
or
rol
icebp
dec
adc
push
mov
imul
mov
aad
and
sub
cmc
xor
mov
push
lds
mov
movsl
jmp
xor
imul
aas
invd
into
sub
aad
andb
mov
adc
cmp
mov
cli
mov
sub
mov
pop
in
mov
adc
int
imul
mov
int3
pop
push
or
mov
cwtl
mov
and
mov
in
fildl
iret
rcrb
call
andl
push
xchg
xorb
je
jp
testl
xchg
sar
sbb
aas
das
or
ja
cmp
mov
out
add
lock
scas
mov
pop
js
mov
std
or
icebp
out
and
lock
insb
mov
mov
test
mov
loope
push
insb
inc
sub
pop
in
mov
jo
or
xor
inc
ss
push
pop
mov
sahf
sbb
test
push
mov
pop
mov
outsl
jecxz
inc
imul
jmp
inc
mov
cmp
mov
jae
adc
or
sub
sbb
cs
imul
jl
xchg
sbb
push
cmpsb
rolb
dec
lods
pop
push
adc
sbbb
push
xor
sub
mov
repz
jns
movsl
inc
push
fisttps
cmp
aaa
jmp
jle
mov
xor
es
out
xchg
nop
daa
std
mov
repz
push
pushf
divl
jae
and
cmpsl
mov
jnp
lcall
inc
xor
pop
lds
cltd
out
sub
mov
shl
adc
les
fwait
jns
and
mov
pushf
mov
xchg
aam
loop
mov
adc
adc
leave
sub
xchg
sbb
cmpsl
cmp
mov
xor
and
lcall
mov
imul
in
lods
xor
adc
mov
xchg
cwtl
je
in
push
daa
jnp
mov
and
xchg
outsl
xchg
jl
pop
mov
cmp
roll
idivl
pushf
cmp
jns
shlb
sbb
xlat
push
cltd
pop
xchg
xchg
dec
ficoms
out
aas
sti
mov
mov
lahf
lods
jle
jno
dec
adc
lret
hlt
mov
add
push
lods
push
push
xor
fiadds
lahf
xorl
imul
ret
xchg
stc
cmpsb
in
adc
popf
in
jp
lret
mov
sub
push
adc
lds
repnz
cmp
ret
in
xor
imul
or
mov
adc
jne
icebp
mov
mov
xlat
lea
dec
push
es
clc
enter
push
pusha
add
push
inc
mov
inc
jno
or
ds
repnz
arpl
inc
push
cmpsl
xchg
xchg
inc
mov
test
mov
pop
sbb
xorl
ljmp
aam
xor
aam
test
pop
lcall
scas
jecxz
dec
ss
in
mov
les
test
scas
cmpsl
mov
rclb
mov
push
xor
push
jnp
ror
push
cltd
jb
jmp
add
and
cmp
jns
fstl
cmpsb
imul
leave
in
mov
addr16
dec
sbb
cmp
aas
mov
ret
xor
mov
mov
mov
pop
jecxz
rcrl
dec
pop
out
fcomi
mov
movsb
dec
inc
jne
or
mov
insl
inc
rcrl
xchg
jge
cli
mov
mov
cmp
sbb
out
dec
daa
cmp
adc
lds
jg
nop
lock
addr16
fisubl
xlat
add
js
fsubl
push
adc
into
cmp
fs
shrb
pusha
leave
mov
sbb
cmp
and
jbe
ficompl
pop
dec
jns
xor
add
push
dec
addb
or
fsubl
xlat
cmc
adc
in
mov
insb
jl
lds
lock
xor
out
pop
adc
inc
inc
push
loopne
and
jb
jg
xor
das
xlat
jno
test
clc
jp
rorl
add
or
movl
notb
xchg
jno
in
ret
adc
adc
insl
pop
pop
in
cmpsb
fwait
lcall
jne
and
jmp
xchg
js
mov
hlt
adc
mov
mov
sub
xchg
or
dec
clc
scas
loope
xchg
xchg
ret
and
popf
cmp
stc
int
rcrl
dec
fimuls
cmpsb
jecxz
into
test
add
and
dec
dec
sbb
mov
enter
mov
mov
orb
sbb
jbe
repz
fisubs
jecxz
push
mov
jbe
inc
xchg
dec
pop
or
push
pop
cmpsb
inc
pop
insl
out
and
cmp
jle
fdecstp
and
pop
int3
ljmp
inc
mov
call
mov
xchg
int3
in
push
mov
mov
adc
mov
lahf
push
addr16
pop
pop
shlb
mov
int3
push
mov
push
jg
mov
adc
jno
mov
xchg
es
dec
cld
ja
mov
mov
loop
mov
jnp
stos
mov
dec
orl
adc
insb
xor
call
minps
and
fisttpl
dec
pop
daa
jns
xorb
stc
xchg
mov
adc
data16
es
jb
popa
jbe
fidivrl
dec
jb
push
or
sar
repnz
or
add
and
sarl
jl
cs
inc
test
movsl
icebp
dec
es
push
pop
and
jnp
cld
xor
xlat
loop
scas
push
dec
inc
push
insl
or
loope
xchg
pop
jae
sbb
mov
mov
jns
repnz
jae
mov
and
inc
pop
int
sbb
push
mov
add
and
test
or
data16
addr16
imul
nop
xchg
fwait
test
xchg
xor
bound
das
cld
mov
das
mov
imul
pop
dec
pop
push
rorb
mov
xchg
ret
inc
out
xor
xorl
mov
push
cmpsl
and
push
inc
sub
repnz
call
lcall
xchg
xor
xor
push
and
roll
stc
aad
ja
in
xchg
pop
jl
enter
dec
sbb
imul
notl
sbb
outsb
mov
insl
pop
jbe
pop
dec
repz
dec
arpl
mov
inc
std
dec
jecxz
and
pop
mov
mov
js
pop
xchg
in
fidivl
jns
or
jnp
adc
repnz
jmp
cmp
mov
out
hlt
sbb
xor
pop
outsl
cmp
push
js
sti
mov
pop
enter
and
cmp
lcall
pusha
add
out
mov
jge
add
adc
loope
add
scas
dec
imul
dec
mov
or
add
test
addb
mov
inc
add
add
mov
rcrl
xor
shll
lahf
out
insl
push
mov
test
xchg
mov
push
mov
aaa
fcomps
daa
mov
or
jle
loopne
push
pop
cs
popa
sbb
jnp
cmp
adcb
xchg
mov
mov
gs
fldt
lods
cmp
jno
movsb
add
cltd
sti
jns
inc
ljmp
jmp
mov
clc
popf
imul
cli
add
fucomp
mov
or
lcall
push
push
jmp
aaa
push
nop
jecxz
jmp
xor
dec
push
adc
test
push
inc
ret
sub
frstor
rcr
enter
das
cmc
fstpt
mov
cmp
es
fistpl
push
mov
mov
rorb
xor
es
lret
les
pop
mov
xor
je
adc
into
test
loopne
ss
push
loope
test
jo
mov
in
stos
xchg
arpl
fistps
xchg
call
and
inc
rcl
pop
pop
out
mov
mov
fucomi
or
pusha
mov
jbe
fadd
repz
ss
sbb
sub
andb
rcr
ret
cmp
push
imul
sbb
pop
jo
int
cmpsl
xchg
sub
mul
not
hlt
add
push
fs
add
pop
mov
imul
pop
jns
leave
daa
mov
sti
mov
jmp
cmc
mov
cli
dec
pusha
sub
push
call
jp
add
add
push
out
int3
sbb
mov
or
dec
iret
push
adc
jo
jae
inc
sub
aaa
in
xor
inc
mov
in
cld
and
loope
mov
sbb
fdivrs
mov
or
mov
add
test
sub
pop
cmc
dec
adc
cs
test
popf
or
movsl
test
add
push
subl
cmp
jg
xchg
jbe
xchg
add
iret
repz
or
jl
jmp
xor
push
mov
fiadds
jb
or
pop
mov
movsb
stos
fisttpll
mov
imul
inc
leave
ret
inc
outsl
scas
xor
es
jno
mov
and
imul
mov
push
inc
push
mov
int
jmp
sbb
jecxz
jecxz
sbb
jns
imul
push
mov
sahf
dec
push
stc
jno
mov
inc
pop
decl
int3
sub
ja
xchg
push
or
orl
xchg
adc
add
sbb
clc
data16
aas
xchg
shrl
inc
aad
push
popf
xchg
dec
add
sbb
xorb
pop
lret
pop
lea
sbb
jnp,pt
fldt
incl
inc
cmp
xchg
ret
inc
test
jb
mov
outsb
mov
jae
js
mov
pop
push
pop
mov
fdivr
jns
dec
mov
push
pop
cld
sub
ja
call
mov
pop
pop
jae
jmp
fadds
sbbb
pop
arpl
jo
out
aaa
pop
mov
enter
mov
pop
lcall
bound
clc
jp
push
jno
cmpb
mov
jns
enter
sbb
orb
or
cld
jae
dec
push
data16
jo
fisttpll
lret
sbb
lds
sbb
cld
sbb
outsl
mov
lods
stos
and
js
lcall
clc
rcr
roll
icebp
mov
hlt
mov
rol
addl
out
jl
xchg
clc
cmpsl
sub
jmp
pop
in
mulb
scas
push
pop
vfrczsd
dec
imul
ss
hlt
js
adc
cmp
add
xchg
sbb
inc
mov
out
mov
stos
pop
out
icebp
pop
push
hlt
adc
push
bound
ljmp
pop
cli
sarb
jle
pop
mov
loop
js
xor
stos
repz
sub
mov
pop
insl
dec
dec
fildl
test
cmpsl
ds
and
inc
sbb
jb
pop
mov
cmc
xchg
out
cmp
mov
mov
jbe
push
xchg
dec
into
mov
or
cmc
imul
push
jg
vpsubsw
cs
cmp
sub
pushf
imul
jbe
daa
mov
pop
sbb
sub
mov
cmp
loope
lret
cmp
and
push
cmp
inc
fcomps
rcll
pop
repnz
mov
xchg
cmpsb
outsl
mov
push
cld
dec
cmp
test
mov
insb
clc
mov
mov
pushf
dec
dec
xor
sub
cmpsl
add
in
out
adc
cmpsl
ret
int3
xchg
sub
mov
mov
mov
add
dec
sahf
xchg
fwait
xor
loope
test
pusha
cmpsb
push
clc
or
inc
jge
jnp
adc
daa
jmp
mov
jmp
outsl
ffree
loop
push
inc
jmp
test
dec
sbb
mov
pop
mov
test
popa
jb
cmp
or
xor
xor
mov
ret
aaa
lret
ja
sub
lret
insl
test
ja
icebp
add
pusha
inc
mov
sbb
or
shr
test
pop
loop
xor
lahf
imul
int3
imulb
fsub
sub
jmp
xchg
inc
xchg
fwait
pop
mov
test
lahf
clc
adc
inc
mov
aas
test
jne
add
ret
movsl
stos
mov
in
ljmp
cmp
js
adc
in
and
test
and
roll
mov
mov
xchg
and
jmp
xchg
cwtl
pop
lahf
inc
ja
cmp
inc
call
loope
cmpsb
leave
rcr
mov
adc
in
mov
mov
cmp
xor
das
sarb
jle
xchg
sbb
fs
movsb
sarb
imul
xchg
mulb
or
push
dec
cld
sbb
push
ret
aaa
fcomp
unpckhps
push
dec
mov
aam
das
out
std
or
fcompl
xchg
pop
sti
faddl
xor
mov
hlt
je
scas
loope
jge
loope
xor
rcrb
aaa
aad
or
cmpsb
ljmp
xor
sbb
mov
and
or
mov
push
aam
fidivs
loope
jg
call
lahf
aam
in
adc
popf
mov
ret
adc
adc
sub
mov
lock
in
push
mov
ss
inc
sbb
xchg
loop
and
xchg
jae
sbb
fistl
jmp
stos
negl
mov
jo,pt
aam
insb
popf
sub
sbb
sub
push
fs
or
hlt
add
ljmp
push
cltd
outsl
ss
lret
dec
pop
test
add
xchg
inc
cmp
sub
in
and
adc
jge
loopne
pop
sub
test
dec
sbbl
pushf
fsubrs
lds
scas
nop
sbb
idivb
fnstenv
cmc
in
push
leave
sbb
add
inc
jl
fdivl
pop
jle
lods
adc
xlat
shll
stos
jae
xor
sbb
lock
out
int
sub
inc
ror
cmp
mov
add
add
or
dec
aaa
je
xor
cltd
pop
je
jae
or
mov
and
scas
xor
add
movsl
ja
jge
and
hlt
pop
push
fs
mov
shll
adc
mov
out
dec
push
call
jmp
mov
loop
xor
xchg
mov
imul
es
xor
sti
loop
dec
push
push
cs
pushl
insb
jle,pn
cmc
out
mov
inc
and
mov
sub
adc
xor
xchg
imul
scas
cmp
lds
ss
mov
fbld
bound
test
aas
fsubr
bound
adc
test
inc
es
mov
ret
xor
mov
loop
and
fistl
sbb
dec
int3
call
aam
insl
jae
xchg
add
cmp
xchg
lods
push
imul
jle
fisubrs
xchg
jg
xor
pushf
rcr
jno
dec
ds
push
xchg
adc
dec
out
fwait
or
ja
cmp
dec
xchg
pusha
xchg
jl
push
addr16
lock
pop
lods
sbb
cmp
test
xchg
adc
rol
out
mov
repz
pushf
adc
jnp
mov
cmpsb
xor
hlt
loopne
mov
cmp
pop
jg
inc
jbe
inc
test
das
inc
sbb
movsl
decb
xor
and
adcb
push
cltd
mov
and
leave
push
inc
sbb
push
sbb
cmp
sub
sbb
push
popa
xchg
sahf
push
add
inc
sub
jp
sub
cmpsl
xchg
mov
out
or
jbe
out
arpl
frstor
cli
fwait
sub
cwtl
gs
mov
cs
mov
and
scas
xchg
outsl
pop
jecxz,pn
cmpsb
pop
ljmp
cmp
aad
mov
icebp
dec
popf
adc
mov
insb
stos
pop
adc
pusha
dec
outsl
mov
jle
rclb
and
in
in
popf
aaa
cmp
add
or
rolw
add
mov
mov
mov
iret
mov
lea
addb
lea
mov
in
mov
sbb
mov
mov
xor
mov
mov
cmpsl
mov
lods
mulb
daa
sbb
sub
mov
std
roll
ds
mov
cmp
mov
loopne
push
fstpt
cmp
sub
push
lods
mov
leave
js
mov
xorb
hlt
jp
mov
adc
in
adc
aas
cmp
out
into
jmp
xchg
fwait
es
repz
test
mov
adc
mov
aas
adc
xchg
sub
fcmovbe
call
cmp
and
dec
jnp
decb
sbbl
dec
fistps
popf
sti
sbb
mov
dec
je
pop
and
mov
dec
dec
cvtdq2ps
into
out
or
cmpsb
repz
lss
mov
jno
daa
or
or
je
and
test
push
stc
sbb
and
mov
ljmp
add
js
xchg
ljmp
jns
pop
out
jb
ja
lcall
stc
shll
xchg
in
xchg
test
cmpsl
test
push
sub
cmc
insb
jne
cmpsl
mov
inc
cmp
shlb
jno
fidivrs
shrl
pop
stc
adc
sbb
arpl
mov
pop
push
ret
dec
cmp
loopne
mov
fisubrl
or
jns
cmp
adc
fildl
xor
push
mov
ja
inc
inc
movsl
dec
push
adc
xor
add
inc
jno
xchg
or
push
cmp
cmp
ret
inc
ljmp
outsb
arpl
nop
mov
inc
sbb
sub
xchg
loop
jge
inc
andb
into
xchg
push
xchg
lret
je
cmp
jle
clc
sbb
aad
pop
cmc
mov
testb
fwait
lock
dec
xchg
dec
fidivrs
pusha
dec
daa
mov
jg
cmp
fildl
jbe
push
subl
xor
into
xlat
xchg
pushf
xchg
push
mov
xor
xchg
cmpsb
fisubs
and
jl
je
mov
sahf
or
in
inc
pop
dec
test
xchg
fcompl
adc
stos
aas
sahf
xchg
adc
lods
xor
imul
fadd
push
push
xchg
mov
jg
enter
das
iret
lahf
std
sbb
test
int
fildl
mov
xor
dec
mov
dec
push
cmp
and
fisubs
sbb
test
sbbl
sub
mov
dec
cs
enter
imul
inc
int
pop
dec
lcall
jb
lcall
rcrl
loop
je
mov
mov
mov
jp
fldenv
sahf
stos
fisttpl
mov
and
icebp
cmpsb
cwtl
push
mov
sub
imul
ret
rol
mov
aas
mov
lods
ss
push
sbb
lock
push
mov
push
xor
imul
cmp
mov
jae
fwait
jnp
push
add
jne
mov
mov
out
negb
and
stc
mov
mov
dec
lahf
lcall
in
out
xchg
mov
sbb
repnz
dec
cmp
sub
jno
and
rcrb
stc
adc
mov
cwtl
scas
enter
mov
lahf
das
and
mov
mov
imul
mov
mov
iret
cmp
test
sbb
movsb
sbb
xor
rorl
rolb
rcrb
mov
add
mov
out
mov
sub
dec
int
push
stc
dec
adcl
pop
adc
and
jle
inc
xor
pop
mov
add
inc
aam
jp
cld
shlb
jno
add
sub
push
jmp
div
in
mov
fwait
mov
xor
cli
sbb
rol
mov
ds
jnp
movsb
sub
inc
lods
cmp
xchg
jbe
mov
aad
jp
pop
pop
outsl
sbb
pop
icebp
xchg
push
jb
je
ljmp
jb
incb
pop
cmp
mov
cltd
mov
jo
or
lock
cmp
pop
add
outsl
icebp
mov
mov
sbb
fldenv
cmpb
cld
mov
push
mov
push
adc
fcoms
mov
or
hlt
push
push
add
insl
ljmp
push
lret
cmp
push
imul
and
add
push
cmp
sbb
inc
and
mov
out
push
mov
hlt
sub
sub
dec
insb
lret
add
fwait
arpl
dec
add
ret
inc
mov
aam
mov
sbb
lcall
mov
push
jb
pop
scas
inc
xchg
inc
clc
push
ljmp
fldcw
fcmovnb
jns
out
mov
popa
mov
and
add
pop
mov
in
imul
adc
sub
frstor
xchg
add
fisubl
pop
sub
mov
sahf
xor
aad
addr16
lods
call
xor
push
or
gs
jae
inc
cmpsb
mov
es
add
inc
jns
sbb
lods
pop
aaa
push
out
push
and
or
imul
shl
faddp
cld
xchg
fld
add
xor
cmpsb
decb
push
pop
int
out
ret
popa
movsl
jo
mov
outsb
enter
mov
fnstenv
pop
ja
mov
and
in
xchg
sbbb
jo
outsb
sbb
cmpsl
movsl
push
mov
ss
loop
inc
popa
inc
call
adc
dec
adc
repz
ret
dec
push
test
push
mov
mov
mov
mov
add
xchg
xchg
dec
jmp
iret
sbb
nop
dec
mov
pop
jle
sub
fnstenv
stos
mov
xchg
arpl
daa
fs
in
std
mov
push
out
mov
pop
enter
mov
inc
mov
push
mov
scas
jbe
inc
xchg
cmc
or
xchg
sub
mov
mov
sub
ret
arpl
test
pop
int
outsl
imulb
vpmulhuw
xor
pop
inc
daa
ds
iret
inc
cli
movsb
mov
jg
das
hlt
mov
stos
fdivs
add
test
mov
inc
in
push
mov
pop
test
add
xchg
dec
dec
pop
or
fcompl
push
stos
cltd
int3
nop
pop
mov
and
mov
mov
pop
xchg
stos
das
xor
inc
mov
xchg
mov
jno
fisubs
push
sub
xchg
xlat
stos
sub
scas
out
mov
or
ss
sub
inc
adc
mov
gs
hlt
pop
dec
fistpll
int
inc
cltd
mov
mov
ds
iret
loop
popf
enter
cld
test
popa
lret
leave
pop
and
js
ret
divl
xchg
scas
mov
es
lock
inc
andb
inc
repnz
pop
insl
inc
inc
inc
pop
fidivs
add
stc
inc
aas
mov
test
mov
out
aad
jge
mov
inc
mov
cmc
jg
adc
inc
pop
rolb
in
fs
push
rorl
mov
into
jne
mov
adc
sub
dec
popa
push
sub
cmp
cmp
stos
push
int3
jecxz
jae
test
aam
shl
mov
sub
stc
arpl
or
sbb
sbb
xor
xchg
xlat
adc
icebp
xchg
xchg
mov
mov
dec
and
int3
in
loop
mov
mov
ja
add
push
xchg
pusha
ds
insl
pop
xchg
sbbb
rclb
xchg
ret
jnp
mov
leave
call
dec
mov
jl
test
or
mov
add
push
out
lea
roll
repnz
xchg
aad
mov
pop
shlb
xchg
xchg
in
mov
xor
jg
testl
xor
aas
fiaddl
cmp
sbb
das
mov
pop
rorb
jmp
addl
pop
mov
mov
rolb
push
addb
pop
and
mov
sti
and
insl
cmpsl
xchg
cmc
push
jle
mov
sub
xor
push
dec
pop
rolb
cli
push
js
dec
mov
jle
and
test
mov
xchg
dec
fcmovu
inc
out
shlb
clc
adc
or
xor
ret
mov
shll
daa
mov
iret
cmp
cmpsb
push
inc
and
push
pop
sub
lret
xchg
or
mov
add
rorb
sbb
loop
testb
mov
shll
jne
fistl
push
or
sbb
jge
xchg
pop
lcall
mov
ret
adc
insl
add
jg
jp
popf
call
or
call
jecxz
clc
jl
sub
push
andb
push
xchg
push
sub
sti
jbe
pop
outsb
pop
and
xor
sub
jno
cmp
mov
jl
sub
sub
repz
push
mov
sbb
pop
idivb
repnz
insl
out
cli
xor
lret
push
lahf
lods
lods
popa
pushf
ja
pop
in
push
scas
incb
cmpsl
inc
and
mulb
sahf
mov
call
xchg
mov
mov
jp
push
sub
je
push
arpl
out
jmp
pusha
lea
add
jg
mov
leave
cmp
fsubs
lods
rcll
xchg
and
add
and
fstps
mov
jmp
ret
jb
push
xchg
mov
or
hlt
inc
lock
orb
cmp
not
jae
dec
dec
push
jnp
and
lods
push
cs
xor
push
clc
hlt
adc
pop
aad
and
test
or
int3
sbb
push
pop
dec
jb
sahf
mov
scas
cmpsl
adc
mov
inc
mov
pop
out
sahf
dec
out
test
sub
shlb
sbb
out
dec
clc
jnp
shll
add
inc
pop
fimuls
out
movsl
stos
mov
add
roll
fdivrs
sbb
jg
inc
aad
cmp
aad
inc
rorl
pop
cli
xchg
mov
ja
jl
push
pop
or
addb
mov
jmp
jnp
cld
int3
xchg
mov
mov
add
pop
fldl
cmpsb
mov
lods
dec
sbb
test
int
inc
push
lahf
mov
sub
mov
mov
popa
stos
jns
loope
addr16
bound
mov
iret
or
je
add
or
jo
ljmp
test
cmpsb
imull
mov
dec
cwtl
xchg
out
or
cli
scas
outsb
and
jl
in
das
jns
adc
cmpsb
into
movsb
mov
cld
push
rolb
fistpll
add
and
pop
aas
aaa
adc
jge
jg
pusha
lcall
mulb
in
and
inc
mov
mov
mov
aaa
cld
daa
jmp
cmp
sbb
add
push
movsb
pop
std
fimull
push
out
or
mov
cs
and
fbld
outsb
int3
lds
or
loop
xchg
sub
mov
mov
xchg
lds
out
movb
fidivrl
add
mov
cmp
cmp
jns
jecxz
mov
sbb
xor
iret
push
ret
mov
or
pop
dec
push
ds
or
xor
cs
pop
test
repnz
or
call
andl
inc
gs
aad
push
aad
fwait
xor
sub
or
enter
fnstsw
jmp
push
jmp
lea
add
lret
ja
pushf
data16
xchg
push
mov
fwait
mov
push
xlat
xchg
testb
pusha
pop
ljmp
pusha
mov
xchg
test
cmp
or
pop
fstpt
mov
jle
inc
scas
je
and
scas
dec
insb
push
push
fisttps
adc
xchg
jp
mov
or
int3
cs
pop
mov
jg
adc
idivl
add
sub
stos
mov
aam
les
lret
sub
push
inc
add
fildl
xchg
push
pop
call
or
fucomi
push
ret
mov
lods
or
mov
mov
add
daa
push
ds
push
pop
test
sbb
jbe
cmp
leave
imul
jp
push
jg
or
sarb
outsl
mov
cs
cmp
call
cmpb
cmpsb
int3
jne
mov
and
or
push
outsb
jg
mov
cld
add
jmp
js
and
mov
subl
inc
sahf
mov
movsb
addr16
cmp
popf
mov
push
mov
xor
add
mov
mov
insl
mov
adc
cmpsb
jmp
es
arpl
xorl
inc
and
outsb
adc
test
dec
inc
mov
mov
push
rol
test
and
xchg
movsl
pop
mov
jb
rorl
mov
nop
add
mov
lcall
sbb
push
and
push
ret
or
cmp
dec
or
dec
xor
sti
xchg
mov
insl
je
inc
mov
xchg
jl
ret
cmp
nop
cmp
imul
or
out
test
push
push
dec
int
shlb
adc
in
enter
and
sahf
sbbl
mov
add
test
shll
popf
ss
xor
add
cmp
xchg
mov
test
sbb
xor
add
mov
rorb
add
ss
cmpb
push
add
repz
cli
int
pop
or
nop
lock
push
mov
or
push
adc
xor
mov
xchg
add
inc
out
jecxz
hlt
paddsw
inc
xchg
sbb
and
popa
fbstp
xchg
sbb
dec
cmp
jne
inc
int
sub
lods
adc
sti
xor
mov
movsl
pushf
test
ret
or
setg
mov
mov
sbb
sbb
lods
sbb
jecxz
pop
adc
int
icebp
loope
pop
insl
dec
aam
cli
mov
stos
sbbb
sar
out
mov
and
xor
nop
push
js
out
and
sub
cmp
cmp
xchg
in
jb
push
mov
cwtl
sbb
jl
scas
inc
sbb
orl
add
jg
out
dec
jp
or
add
insl
test
loope
xorl
xlat
call
jno
inc
dec
dec
and
or
mov
popf
inc
xor
sub
pop
sub
adc
rol
mov
push
jle
ja
jne
cmp
mov
pop
into
aas
mov
push
inc
sarb
push
shrl
leave
push
fnsave
xor
inc
call
cmp
insb
cld
scas
mov
movsb
cltd
cmp
ffreep
cmpsb
mov
lcall
idiv
push
out
mov
pushf
xchg
outsl
cli
sbb
int
pop
cmpsl
lret
cli
lock
xchg
xor
mov
ret
xor
outsb
mov
sbb
stc
pxor
sub
jbe
xchg
aad
sbb
mov
or
jne
andl
stc
or
bound
int
mov
ret
add
mov
sub
push
movb
ja
sahf
mov
shrb
mov
jmp
fs
gs
inc
stos
sbb
adcl
or
inc
repnz
inc
cmp
movl
or
mov
jecxz
push
lods
lcall
xor
es
cmpsb
xlat
scas
xchg
inc
ficompl
dec
cmp
jb
mov
in
sbb
clc
clc
in
movl
out
dec
aas
inc
test
sbb
push
out
imul
negl
xor
arpl
and
nop
adc
xor
sbb
or
mov
fwait
pop
call
xor
inc
inc
cmp
std
jbe
mov
and
incl
xor
aas
ss
pop
icebp
or
pop
in
loopne
loopne
cmpsb
or
xor
xor
cld
mov
xchg
int3
mov
pop
jno
outsl
clc
mov
add
cmpb
jmp
negl
or
xchg
push
fiadds
push
mov
fadds
call
cmc
dec
inc
fdivrl
sarb
pop
inc
lods
std
xor
mov
sbb
cmc
xchg
jg,pn
cmp
mov
aaa
ss
pop
test
cld
lret
xchg
or
or
mov
pop
mov
xchg
jp
inc
in
and
push
mov
sbb
fcoms
xchg
cmp
mov
loop
movsl
pusha
jbe
and
cwtl
push
in
add
xchg
xor
stos
rcrb
xchg
fbstp
xchg
mov
jmp
mov
cwtl
xor
mov
in
fistl
loope
stos
in
mov
ror
mov
stos
mov
sbbb
xchg
inc
in
mov
inc
loope
xchg
rolb
daa
outsb
adc
xchg
xorl
gs
lahf
adc
cltd
cmp
ret
sub
mov
mov
out
ret
je
test
nop
mov
xchg
or
push
fwait
pushl
out
adc
or
xchg
add
fdiv
inc
outsb
inc
arpl
test
mov
push
lock
gs
push
popf
rcll
js
add
loope
fistpll
nop
jbe
pop
cld
xchg
or
mov
sub
out
in
cmp
mov
or
imul
adc
cmp
add
nop
xchg
pushf
in
jecxz
jb
jg
xor
sub
adc
std
push
fidivrl
xchg
push
filds
stc
arpl
jns
xor
or
popf
xor
lret
sub
loopne
lcall
mov
mov
inc
inc
loopne
leave
dec
adc
or
jmp
lea
fsubp
dec
cmpsb
hlt
add
testb
pop
in
fistpl
xchg
daa
imul
std
inc
int3
mov
jmp
inc
jle
cli
test
cmp
sbb
sbb
sub
les
idivb
fisubrs
pusha
jmp
test
pop
pusha
jns
aas
mov
pop
clc
push
and
clc
ja
xchg
sbb
jae
mov
inc
fsts
pop
inc
mov
fdivr
repz
xor
aas
cwtl
inc
xor
ret
addb
jge
mov
aad
sub
mov
fdivl
int
int
mov
fcomp
inc
inc
cmp
inc
into
mov
pop
sti
jne
push
pop
outsl
mov
loope
mov
cmpsb
je
jge
pop
mov
leave
adc
dec
repnz
lods
mov
cltd
mov
es
bound
inc
test
pop
jae
cs
mov
or
int
cli
faddl
pop
or
add
in
lret
ss
scas
es
xor
in
sub
or
sub
push
inc
psrlq
lcall
gs
adc
adc
leave
sbb
fldl
pop
pop
jae
mov
mov
in
cmp
negl
dec
sub
xor
sbb
or
aaa
faddl
jo
mov
cmp
sub
sbb
js
leave
js
adc
mov
fidivrl
pop
clc
cmpsl
lods
test
dec
repnz
das
out
sbbb
movsb
movsb
cmpsl
xchg
and
loop
ret
lds
pusha
shrb
stc
add
stos
dec
aam
dec
loope
loope
cwtl
out
je
mov
repz
sbb
out
out
xlat
sbb
bound
test
dec
jg
scas
mov
in
fs
mov
jle,pn
cmpsb
push
gs
xor
pop
or
ret
and
popa
test
cmpsb
nop
and
cmp
popf
insl
mov
add
inc
lcall
or
lahf
in
xchg
jge
std
adc
mov
xchg
cmp
call
and
cmp
push
jmp
mov
mov
pop
into
in
xchg
xlat
in
mov
dec
sub
pop
mov
mov
scas
test
mov
or
adc
cmp
aad
jb
push
xor
fimuls
xor
dec
cmp
and
sahf
mov
leave
cmp
scas
fsts
dec
sbb
jp
iret
sahf
lret
movsl
mov
sub
adc
mov
mov
bound
es
cltd
fdivs
mov
cli
shll
xor
je
mov
enter
jl
adc
add
popa
int3
mov
fwait
call
icebp
mov
mov
mov
outsl
mov
mov
push
into
rolb
and
fstpl
lcall
pop
je
ficoms
sub
jne
sub
mov
mov
add
sub
mov
cmp
adc
sub
push
fdivrl
pop
scas
repz
aaa
dec
stos
mov
mov
adc
vpshlw
loope
jbe
clc
movsl
pop
aam
fmull
push
jnp
dec
scas
icebp
dec
fildl
fsts
enter
dec
jge
adc
into
dec
mov
bound
aaa
int
in
lock
mov
cmp
and
inc
sbb
out
sbbl
push
test
insl
cmp
adc
repnz
imul
push
mov
arpl
sarb
decb
mull
pop
shr
cmp
dec
jb
adc
aad
xchg
fldenv
xchg
fcoms
push
add
mov
lods
jmp
lock
xchg
inc
jbe
divb
fidivrl
andb
pop
lock
pusha
stos
pop
cmp
push
std
ds
test
leave
push
and
insl
mov
xor
out
sub
mov
xchg
mov
mov
loope
fisttps
xor
test
icebp
adc
xchg
cmp
cmc
jmp
fcoml
and
cmp
sbb
movsb
push
adc
scas
push
dec
inc
or
mov
mov
enter
andl
pop
dec
jbe
gs
fwait
jae
pop
repz
adc
adc
in
push
push
das
fbstp
and
int3
lods
stc
jbe
sbb
push
sti
in
mov
mov
pop
sub
push
and
jg
inc
imul
les
xchg
jno
pop
or
das
scas
pop
jb
xor
push
dec
mov
sbb
sub
xchg
push
nop
shll
fimuls
lret
adc
adc
xchg
pop
call
jb
xchg
mov
jp
pop
icebp
cld
mov
lods
in
icebp
pushf
das
add
xchg
and
icebp
adc
jbe
sarb
dec
push
movsl
rorb
push
push
test
in
mov
cld
fcmovb
fcmovnbe
fimuls
cmpb
sub
lods
cmp
scas
xlat
dec
or
shlb
jp
jb
cmp
xor
and
shr
inc
nop
cmp
sbb
idivl
jbe
pop
sub
dec
jns
sub
out
xchg
jbe
je
in
outsl
sub
lock
sub
pop
shll
dec
je
es
or
scas
je
xor
mov
lret
mov
xor
rorb
push
fldenv
pop
mov
addr16
out
or
add
dec
lods
and
inc
fldcw
dec
out
dec
pop
sub
mov
scas
popa
cmp
mov
fbld
adc
icebp
ret
call
cli
jl
nop
int
inc
pop
or
inc
icebp
int
pop
push
stos
xor
iret
dec
pushf
insl
lret
movsl
jb
sbb
push
lds
xor
lods
push
adc
add
roll
lea
mov
pop
or
stos
pusha
cli
lcall
mov
sahf
cmp
adc
lock
and
pop
mov
cmp
xchg
dec
and
hlt
pop
push
out
dec
cmp
fdivrp
shll
adc
push
pop
ja
xor
sbb
shll
pop
shrl
push
pop
jae
inc
push
rcr
loop
adc
cmp
out
sbb
xorb
das
lods
jg
inc
and
adc
or
mov
leave
outsl
int
mov
xchg
test
vpshufd
rcll
cmp
cltd
in
out
rclb
mov
test
sarl
add
rcrl
imul
adc
jge
pop
adc
das
or
das
jge
xchg
xchg
jp
push
into
pusha
cs
mov
push
divb
movsl
inc
lock
scas
add
cmpsb
stos
sbb
mov
addr16
add
popf
dec
pushf
push
add
push
lcall
je
mov
lock
clc
sti
and
aam
dec
je
mov
pop
sub
cmp
xor
sbb
cmp
jecxz
iret
mov
push
add
mov
push
repnz
mov
sbb
cmc
subb
xchg
or
outsb
inc
adc
cli
push
push
xor
hlt
test
jo
pop
stc
inc
sub
cmp
sub
cltd
rcrl
xchg
cmp
test
cld
or
sbb
mov
push
fbld
jb
popf
adc
imul
mov
sub
mov
out
cmc
cmp
mov
mov
jl
pand
rcll
jp
call
es
das
sub
push
xchg
leave
mov
lea
inc
clc
andl
adc
insb
movsb
popf
dec
xlat
in
adc
jl
scas
in
int3
imul
mov
shll
or
push
ja
lret
or
pop
xchg
adc
pop
cld
jmp
repnz
pop
add
add
sti
fwait
pop
mov
cmp
fisttps
sahf
push
push
xchg
sbb
inc
test
cmpsl
popl
sbb
push
movsl
adc
xchg
mov
out
xchg
cwtl
jmp
inc
pop
stc
or
sub
adc
leave
push
mov
push
adc
cmc
sub
faddp
f2xm1
cmp
inc
out
or
sub
pusha
dec
js
test
dec
xor
pushf
xchg
mov
clc
test
loop
ret
rcrl
dec
push
dec
push
jo
cmp
pushf
xorb
insb
jmp
loope
sahf
xor
xchg
mov
inc
jbe
dec
mov
adc
add
outsb
int
and
stos
sbb
fwait
loope
push
sbb
adc
cmp
pusha
pop
or
push
movsl
jp
movsl
adc
pop
mov
mov
add
gs
pop
sub
ret
mov
jmp
dec
cltd
adc
adc
shr
popa
cltd
dec
add
jno
insl
out
xchg
not
xor
jp
aaa
dec
and
out
shlb
cmpsl
mov
cmpsb
lods
in
sub
mov
push
insb
pop
inc
subl
mov
fmul
mov
sub
add
lcall
cvtpi2ps
dec
in
mov
js
or
dec
pop
pop
fcmovnu
push
outsl
mov
das
xor
adc
in
aam
lods
jno
cwtl
repz
frstor
dec
xor
movsb
test
pop
inc
fsubrl
call
inc
cmc
xchg
pop
sbb
inc
mov
popa
pop
mov
jnp
mov
and
jmp
sub
jns
fdivs
cmp
jecxz
inc
mov
popa
loope
pushf
cmc
test
fists
pusha
mov
loopne
das
mov
dec
push
mov
push
pop
or
out
sbb
mov
push
pop
jb
inc
jb
add
leave
mov
sarl
cld
andl
cmc
aaa
test
jecxz
test
popfw
and
xor
add
dec
add
xchg
popa
repz
jb
pusha
and
fiadds
test
imul
lods
sbb
aad
mov
lcall
jnp
shll
out
jle
roll
inc
sub
sub
ret
jne
lods
xor
sbb
inc
stos
cli
stc
pop
mov
push
cmp
enter
scas
je
dec
xchg
and
hlt
mov
es
pushf
adcb
and
rcll
das
and
lea
push
fildll
arpl
cmpsl
push
or
jne
cmp
pop
test
push
cmpb
test
mov
in
adcl
hlt
xor
add
jle
xchg
insb
shll
sub
inc
in
fnstsw
lods
inc
mov
inc
movsb
xor
push
popf
dec
adc
push
sub
mov
mov
cmp
cmp
into
enter
inc
push
ljmp
push
repz
push
mov
out
scas
pop
fsubp
in
or
jns
xlat
mov
loop
push
dec
mov
je
sbb
and
xor
shrb
cmc
gs
push
or
dec
je
out
ds
outsb
cmp
jbe
mov
or
loope
jecxz
je
jnp
hlt
add
shlb
ret
pop
daa
mov
jge
or
sbb
lea
or
push
es
or
pop
mov
adc
in
stos
xchg
lret
aad
test
push
cmp
xor
adc
adc
mov
or
or
dec
cld
jns
popf
test
popl
xchg
out
repz
nop
sbb
shlb
imul
stos
mov
insb
mov
pop
movl
lds
xchg
inc
push
pop
lahf
ficoms
and
cmc
cs
cmp
sbb
fbld
add
cmpb
shlb
jecxz
mov
xchg
pop
jle
push
data16
sbb
xchg
xchg
negl
cli
sub
add
into
jp
fcompl
pop
inc
push
sub
or
push
inc
dec
ja
add
xchg
jno
test
adc
add
aas
popf
pop
in
stos
push
test
push
out
bound
push
test
rcrb
adc
jmp
repz
cmp
inc
in
push
popf
adc
pop
push
sub
jecxz
sub
inc
mov
mov
xchg
xchg
ds
pop
cmp
sbb
adc
ljmp
dec
lds
jno
repz
or
sbb
fimull
inc
mov
pop
push
pop
sub
rorb
in
out
lret
lahf
sbb
sahf
add
enter
ja
flds
push
push
clc
shlb
jge
mov
outsb
test
push
in
lock
in
mov
out
cmp
jmp
and
adc
adc
sti
loop
pop
mov
cmp
cli
loop
loopne
arpl
xchg
xchg
jg
pop
cmp
cmp
mov
mov
push
xor
and
shrb
pushf
push
lret
pop
movsb
xor
dec
and
test
mov
adc
ficomps
adc
loopne
pop
jle
icebp
xlat
sahf
in
ljmp
js
sub
dec
outsb
leave
aad
movsb
addr16
push
orb
and
js
loopne
dec
xor
cmp
add
mov
sarb
mov
decl
adc
rcl
iret
lcall
add
dec
out
cmpl
pop
in
fildl
add
xor
jae
push
add
push
adc
mov
jb
mov
adc
mov
cmp
push
and
imul
sub
inc
scas
jge
push
test
sti
push
sarl
fstp
pop
or
cmpsb
sbb
sub
mov
jae
pop
icebp
into
fcomps
mov
sbb
outsb
lods
rcrl
xchg
movsl
sub
cmp
lret
imul
inc
in
aam
inc
xchg
pop
and
stos
xor
pusha
lea
dec
aas
cwtl
add
sub
sbb
and
mov
stos
addb
adc
and
xchg
in
dec
cmp
xchg
xchg
mov
test
cwtl
adc
adc
mov
mov
dec
sbb
and
sbb
aam
outsl
loop
aas
mov
xchg
sbbb
sahf
lock
push
pop
pusha
xchg
movsb
sub
cli
lds
mov
bound
jmp
dec
mov
cmpsb
mov
loopne
sahf
mov
rorb
loope
test
int3
mov
in
mov
push
dec
fisubrl
pop
cmp
jmp
pop
shlb
enter
das
push
es
mov
push
sbb
jb
fbld
insb
ss
ss
xor
rcrb
pop
out
mov
adc
mov
iret
leave
and
je
lods
out
andl
push
xor
std
inc
out
mov
add
subb
in
movsb
push
jns
and
add
shll
add
sbb
test
insb
mov
scas
cmp
xchg
or
lret
mov
rorb
int
push
insb
or
arpl
ficompl
cmp
mov
mov
xor
les
popa
mov
sub
xor
mov
dec
add
addb
stc
movb
xchg
shrl
or
xor
lods
jae
js
xchg
push
mov
xchg
pop
out
add
out
dec
xor
into
sbbb
data16
fwait
cwtl
xchg
mov
sub
enter
inc
outsl
pop
cmp
sub
mov
mov
xlat
inc
negl
es
orl
mov
mov
fstpl
dec
insl
jo
test
negb
jnp
test
or
hlt
into
jp
ljmp
mov
ljmp
adc
dec
lods
cmc
iret
sti
inc
xchg
push
add
pop
xchg
inc
and
int
enter
sub
cld
adc
nop
in
cmp
insl
sub
insb
adc
ja
xchg
cld
mov
xor
push
daa
push
dec
test
sbb
adc
inc
jmp
pusha
dec
pushf
ret
adc
mov
lret
scas
out
dec
fldt
in
sahf
mov
fistl
hlt
sbb
mov
adc
push
lahf
or
popf
pop
in
stos
fistpll
xor
jl
popl
rcr
int3
xor
mov
into
mov
adc
scas
cmp
push
mov
rcr
adc
dec
add
arpl
sar
mov
push
std
sbb
or
ss
xor
inc
mov
out
fistps
lret
sbb
js
int
addr16
int3
pop
stos
dec
sarb
mov
mov
fidivl
xchg
mov
adc
pop
mov
push
pop
outsl
mov
pop
notl
cmp
mov
ret
pop
cwtl
pop
insl
daa
add
jle
jecxz
fiaddl
insl
push
je
adcl
lds
aas
jbe
fisubrl
cmpb
decl
cmp
push
sub
push
push
scas
xlat
jns
cltd
das
and
dec
adc
adc
inc
aam
movsb
je
data16
pushf
cmp
scas
sub
pop
and
lret
fnsave
nop
inc
into
mov
add
or
sub
daa
loopne
mov
cmp
mov
outsl
fs
loopne
cmc
mov
aam
xchg
push
bound
daa
pop
inc
lods
popa
dec
out
scas
stos
mov
xchg
dec
cld
scas
aaa
pop
add
lret
mov
in
shlb
popf
adc
jno
mov
out
cmpb
push
add
fadd
push
sbb
call
jnp
cld
xchg
popf
int3
mov
add
mov
jne
arpl
in
test
pusha
aas
dec
jecxz
and
rcrw
lahf
add
out
inc
lret
leave
push
jbe
jns
pusha
mov
adc
dec
jno
enter
out
mov
pop
cmp
pop
pusha
adc
xchg
inc
push
xlat
push
imul
mov
push
orl
add
lods
pop
rolb
xchg
push
jecxz
inc
dec
dec
scas
push
fistpll
inc
push
and
jns
xor
movsl
and
xchg
aas
xor
push
test
mov
pop
ret
fistpl
jge
mov
inc
pop
fdivp
xor
fnstcw
or
inc
pop
lret
cmpsl
inc
cwtl
xor
inc
pop
lret
and
ret
cltd
movsl
aam
mov
jmp
adc
jp
sub
mov
sub
ret
lods
xchg
jbe
dec
jp
adc
xchg
imul
sahf
imul
dec
pop
push
ret
cli
xor
pop
out
out
xlat
add
sub
xchg
adc
sbb
jo
ss
xchg
push
roll
sub
sbb
mov
ror
sbb
push
int
adc
je
mov
adc
jecxz
testl
sbb
stos
jmp
lods
sbb
es
imul
stc
inc
in
push
xchg
aas
xchg
ss
stc
imull
mov
fmul
fidivrl
shrl
push
inc
jno
xor
and
lods
cli
mov
xchg
lahf
lods
mov
outsl
in
ret
push
jge
fiadds
scas
iret
jp
push
ss
imul
jbe
pop
jg
jnp
pop
je
popw
roll
mov
cld
pusha
ret
inc
stos
sbb
out
adc
and
cmpsb
xlat
int3
pushf
xchg
dec
pop
inc
push
fmulp
push
nop
cmp
scas
sbb
cmp
jae
jnp
les
cwtl
test
leave
or
pusha
leave
and
dec
push
cltd
pop
shlb
daa
adc
mov
or
jp
mov
in
xor
lcall
mov
dec
mull
imul
pop
int
icebp
int3
xchg
cld
mov
sub
jl
push
cmp
rcrl
pop
mov
jo
mov
ljmp
or
mov
scas
sbb
insl
jl
fidivs
sub
jns
jge
flds
into
sbb
sub
jae
inc
movsb
xchg
adc
outsl
cmp
push
add
fsubr
lahf
idivl
mov
sbb
leave
dec
pop
dec
les
pop
push
mov
mov
fmul
cmp
push
int3
outsl
mov
sbb
mov
sub
mov
imul
push
lcall
scas
adcb
push
pop
shlb
sti
ret
mov
mov
inc
or
es
mov
icebp
and
aas
cmc
pop
cmp
loopne
push
and
mov
cltd
mov
jmp
xor
pop
inc
dec
or
push
test
aam
push
cltd
xchg
pushf
enter
hlt
sub
xchg
jle
xchg
iret
lods
sub
mov
lea
pop
push
or
cmp
push
pop
xor
test
out
lds
cwtl
fdivl
push
cltd
xor
imulb
push
push
data16
adc
incb
jns
sub
mov
ss
ret
dec
mov
lods
jns
cli
mov
cld
movsb
xchg
xlat
fcompl
and
jbe
mov
movsb
stos
ljmp
aam
icebp
inc
push
xor
fcoml
xchg
jae
int3
cltd
mov
je
test
pop
push
lahf
jmp
loopne
rcrb
adc
into
jb
rclb
stos
or
sbb
xchg
cmp
adc
or
stos
jbe
sbb
xlat
aam
inc
sub
pushf
and
add
xor
dec
int
mov
xchg
or
pop
div
in
rorb
imul
repz
clc
repz
pop
loope
jb
icebp
pop
push
inc
cld
int3
add
xchg
jmp
mov
fistpl
scas
lds
pop
outsl
xchg
pop
mov
dec
in
inc
jge
sbb
sub
das
stc
popa
imul
push
push
addl
add
pop
cmp
fcoml
pop
pop
popa
out
cmp
mov
outsl
cmp
dec
js
pop
pop
dec
push
ja
iret
lahf
adc
mov
jae
add
movsb
aad
aad
dec
lret
push
in
push
xchg
cltd
xlat
stc
dec
sbb
pop
xchg
imul
push
inc
sti
out
js
xor
dec
pop
les
in
movsb
adc
dec
dec
jle
mov
and
je
push
icebp
icebp
pop
or
into
ja
jmp
addr16
jg
mov
sub
cmp
mov
in
xorb
adc
jns
aaa
mov
or
lds
sbb
push
ljmp
or
decb
lods
xchg
fs
mov
and
pop
out
jle
adc
dec
aam
mov
and
mov
push
or
mov
fistps
sub
push
mov
and
cmp
jnp
push
and
subb
dec
andb
arpl
shll
cs
cmp
sar
mov
jnp
push
fistps
push
ret
dec
xor
rcr
pop
imul
push
dec
mov
frstor
filds
into
nop
mov
inc
jmp
fldenv
sbb
into
test
xor
sub
push
xchg
out
jbe
cmpsl
call
xor
ja
ret
sbb
ljmp
sbb
pushf
rcll
in
sti
int3
lods
mov
test
pop
shlb
mov
push
fisubrl
loope
cmp
in
je
lahf
cmpsl
sub
jle
int
std
aam
lods
and
movsl
sub
cmpsl
inc
je
push
les
out
dec
jge
leave
js
adc
or
add
jmp
out
out
lods
ret
xor
call
js
jne
cmc
lret
jl
iret
hlt
aam
mov
gs
pop
push
or
cmp
cmp
dec
cmp
decb
mov
sti
cld
jbe
out
bound
fstpt
std
clc
mov
mov
cld
cmc
jle
fcomps
sub
jecxz
push
jns
jbe
jb
sbb
shll
out
lods
mov
rcll
hlt
add
cwtl
jp
outsl
sub
push
cld
test
push
mov
pop
addr16
push
fsubrs
push
mov
js
sahf
add
adc
mov
dec
dec
es
mov
push
sahf
and
jae
pop
adc
push
mov
inc
pop
dec
cld
xor
mov
push
sbb
fisubl
fnstenv
ja
inc
mov
test
jbe
sub
in
xor
lds
es
outsb
push
jb
mov
dec
jp
cmp
test
addr16
data16
aad
rol
test
cmpl
clc
lret
push
cmpsb
push
mov
call
sbb
cmp
mov
insb
sbb
pop
cmp
mov
daa
cmp
shlb
mov
hlt
mov
and
ljmp
call
insl
stos
aas
inc
outsb
xchg
daa
hlt
add
mov
and
mov
scas
push
jbe
shrb
xchg
mov
adcb
shlb
inc
mov
xchg
stos
dec
enter
ffree
sub
add
pop
inc
fcmove
dec
adc
data16
sub
loopne
in
cmp
nop
ret
cmp
jmp
testl
push
mov
xor
add
jb
cmp
dec
clc
jno
daa
inc
mov
xchg
sahf
mov
lret
xchg
arpl
stos
out
pop
imul
outsl
xchg
jbe
outsl
out
fistpl
movsb
inc
cmp
pushf
in
push
cmpsb
aaa
jnp
push
jno
dec
cmp
and
cmp
out
xor
mov
fbstp
add
cmp
subl
out
push
push
mov
test
push
push
int
cwtl
mov
unpckhps
mov
ja
jnp
dec
push
xchg
fcoml
pop
inc
imul
sbb
mov
mov
fbstp
data16
popa
xor
sbb
pop
push
cmc
pop
ljmp
sub
xchg
jnp
mov
repz
add
daa
mov
leave
mov
sti
addr16
movb
scas
cmpsl
push
sbb
movsl
mov
sarl
cmp
jb
stos
inc
mov
mov
adc
mov
lods
mull
sahf
stc
adc
mov
cld
sub
adc
push
cmpsl
enter
fidivl
pop
stos
inc
mov
or
scas
mov
sahf
out
and
xor
pushl
fsubrl
int
repz
sbb
js
push
xchg
in
add
adc
cmp
pop
js
xchg
or
dec
int
xchg
mov
cmpl
lahf
hlt
cmp
sbb
mov
mov
shrb
movsl
and
cmp
in
inc
iret
mov
mov
or
cmp
xlat
pop
test
adc
dec
dec
sahf
inc
xchg
xchg
fwait
jb
nop
mov
mov
and
rolb
jge
loopne
mov
cmpsl
repz
push
bound
adc
dec
aad
subl
add
imul
pop
xor
test
and
jb
sub
mov
test
int3
imul
ret
sbb
jg
data16
inc
out
loope
dec
cwtl
xlat
jns
addl
sbb
xor
and
mov
aaa
mov
dec
loopne
mov
mov
cmp
fistpll
mov
enter
lock
mov
cwtl
aam
mov
cmp
cmpb
xor
cld
popf
lock
lcall
aam
ja
cmp
aam
iret
sbb
gs
add
dec
loop
enter
cltd
cmpsb
inc
pop
fs
push
push
enter
mov
std
sub
mov
mov
mov
xchg
sub
push
dec
cltd
mov
in
pop
pop
push
cmpb
shrb
pushf
fwait
bnd
jecxz
push
int3
dec
std
movsb
adc
push
inc
push
cmpsl
hlt
and
lock
pushf
ret
pop
and
mov
jecxz
rcll
scas
push
cmp
push
mov
lret
jp
fsubrs
cmpsl
adc
jge
and
cmc
xchg
add
cmp
xchg
inc
pop
or
cmp
xor
cmp
ss
jmp
and
lahf
jge
inc
jmp
xchg
fistpll
mov
mov
movsb
into
cs
add
push
xchg
fs
mov
jmp
inc
insb
xchg
sbb
mov
mov
pop
xor
cmp
cmp
xor
bound
stc
in
mov
scas
sarb
jecxz
adc
or
mov
xor
jge
fcmovnb
mov
ljmp
sub
push
fildll
jg
sbb
jge
push
xor
xorb
sub
in
pop
cmp
push
mov
sub
ss
clc
mov
leave
jp
out
pusha
inc
sub
jl
ss
mov
mov
fs
ds
out
xchg
fmulp
xchg
cmp
add
pop
add
sti
insb
cwtl
lcall
push
std
xchg
inc
cmp
xchg
shl
push
out
or
pop
sbb
ljmp
shll
pop
shll
push
push
or
js
mov
arpl
repz
in
flds
mov
loopne
mov
imul
test
bound
cmp
ret
or
popl
xchg
fidivs
xchg
or
int
pop
clc
lret
call
pop
aas
mov
pop
out
fsub
loopne
sub
aas
sbb
fwait
pop
out
imul
andb
mov
jb
adc
fiadds
bound
outsb
aaa
inc
aas
out
mov
test
push
mov
push
pop
jno
pop
add
call
into
inc
sub
mov
push
test
and
inc
aam
xor
inc
xchg
loop
mov
ja
adc
shl
mov
insl
ret
mov
cmp
inc
or
adc
mov
fwait
add
cmp
mov
inc
pop
and
sarb
push
lods
mov
lcall
pop
and
pop
popf
mov
cmpsb
add
pop
sbb
mov
iret
imul
out
pop
call
push
mov
shr
cmpsl
fwait
push
scas
push
lret
fdivrl
xchg
add
ja
repz
ljmp
push
fwait
mov
hlt
ljmp
pop
sub
jbe
movl
call
cmp
jns
add
sub
pop
cmp
adc
mov
mov
xor
mov
jmp
lret
sub
arpl
pop
outsb
push
fcomps
sbb
xchg
jnp
leave
jne
mov
fwait
push
bound
cmp
cwtl
pop
ficompl
xor
push
push
push
rclb
in
insb
dec
cmp
cwtl
push
repz
push
push
out
movsb
add
xor
mov
sub
repz
adc
mov
into
sbb
into
pusha
loopne
ss
call
stos
daa
in
jecxz
push
pop
and
lcall
sub
inc
into
in
mov
push
lock
bound
and
jge
add
sub
movsl
and
or
pop
mov
adc
mov
dec
leave
cmpsb
jnp
jecxz
push
sub
mov
xchg
push
shlb
mov
cltd
sub
scas
mov
adc
shr
mov
lods
fimull
es
iret
jp
or
cmc
rolb
ror
jl
fwait
std
pop
mov
push
fs
inc
cwtl
xor
stos
and
jmp
and
sub
imul
xchg
inc
fdivs
mov
sbb
imul
andb
rcl
sub
mov
loopne
and
imul
movsb
aad
push
fmulp
mov
loopne
mov
repz
rcr
rolb
jle
loop
cltd
mov
or
sbb
xor
clc
shlb
lcall
loop
jp
jae
test
jge
ljmp
mov
push
shll
adc
mov
fstps
fucomip
arpl
cmp
adc
std
mov
xchg
adc
cmp
jae
in
mov
out
gs
lcall
xchg
adc
aas
sub
xchg
ljmp
orb
sub
inc
and
add
out
fimuls
xchg
lock
inc
sub
and
push
out
test
fisttpll
rol
in
ljmp
aas
mov
inc
push
aad
int
and
stos
sahf
loope
in
popf
popf
pop
inc
push
int3
lock
sahf
rcl
aaa
jbe
aam
push
pop
xchg
add
dec
inc
cmpsb
cmpsl
inc
daa
rcll
clc
push
repz
jg
dec
jg
lahf
roll
and
in
push
add
pop
aam
inc
push
sahf
cltd
sahf
and
cld
or
scas
xor
pop
dec
aaa
leave
sbb
adc
repnz
in
inc
xor
test
and
mov
xor
in
dec
add
jb
cmc
lea
add
cmp
repz
jg
mov
mov
fdivs
int3
and
mov
dec
fucom
sub
jnp
mov
push
inc
std
push
rcll
xor
imul
mov
leave
and
jmp
lea
inc
pushf
pop
or
out
and
fcmovbe
into
xor
js
or
pop
mov
inc
aaa
lock
inc
iret
call
mov
xchg
scas
and
adc
push
or
je
push
pop
inc
sbbl
inc
aad
mov
ss
mov
in
dec
test
sbb
or
arpl
popa
lcall
pop
xchg
mov
pop
dec
jg
mov
sbb
das
adc
and
push
mov
filds
popa
movsb
jl
mov
lea
inc
cli
or
xchg
das
scas
pop
sbb
sbb
jne
cmp
ficoml
cltd
add
or
cmp
jp
inc
movsb
lahf
or
sbb
loopne
aam
push
mov
push
orl
ds
fnstenv
shrl
jl
or
test
call
fisubrs
xchg
add
push
mov
adc
into
sti
repnz
outsl
fucompp
pop
insl
scas
stos
sbb
inc
jno
or
mov
je
loope
fisubrs
rcll
rorl
bound
jae
nop
sahf
add
sub
inc
xchg
pusha
mov
inc
inc
mov
shlb
push
scas
jmp
pop
xchg
mov
lods
lods
notl
in
push
inc
sbb
inc
mov
testb
sahf
insl
sub
cmp
or
dec
sbb
sub
sti
add
stc
sub
js
xor
mov
mov
cmp
jle
xor
xchg
pop
daa
add
dec
jae
jle
in
mov
mov
mov
ja
push
mov
xlat
mov
adc
cmpsb
inc
jmp
mov
mov
mov
fsubr
out
insl
cmc
fcompl
insb
dec
out
push
jle
mov
pop
ds
cmpsl
sub
nop
fdivs
cmp
jo
and
mov
pushf
adc
cld
push
xchg
mov
daa
repnz
sahf
out
subl
dec
jo
insb
into
loope
movsl
fstps
dec
aaa
aas
mov
and
and
rcrl
sti
pop
sbb
stos
and
cmp
ss
inc
xchg
ljmp
push
sub
add
pusha
cli
out
cmp
scas
jmp
pop
push
or
int3
pop
cmp
ret
sub
jae
mov
shr
clc
testl
push
stc
cmpsb
sti
inc
jg
aas
sub
or
das
and
jle
icebp
cmp
movsl
mov
leave
mov
sbb
lods
hlt
in
fdivr
jne
rorb
sub
nop
adc
into
hlt
jne
test
insb
insl
or
arpl
mov
ja
das
or
push
test
mov
daa
mov
lret
popf
test
adc
push
test
test
mov
call
mov
mov
mov
mov
cmp
mov
aam
cmp
push
imul
cltd
add
out
inc
subl
fs
lret
cmp
test
sbb
jns
cwtl
inc
mov
push
mov
int
xchg
hlt
or
cmp
lahf
cmp
out
decl
nop
pop
daa
cmc
jmp
and
pop
lds
movsl
xchg
rclb
mov
sbb
sbb
cmpsb
mov
lret
lahf
fwait
nop
sti
lea
les
xor
push
ds
xlat
mov
cmp
xorl
out
adc
inc
nop
gs
daa
ret
cwtl
fldcw
cmp
leave
lcall
sbbl
call
pop
test
mov
int
adc
push
jnp
jae
mov
jbe
aad
pushf
xchg
cmc
hlt
ss
push
clc
lcall
mov
rolb
ds
sahf
arpl
insl
cmp
xor
dec
fwait
mov
sar
std
mov
dec
and
out
sub
fwait
int
inc
xor
push
fs
scas
out
xor
mov
sbb
dec
jbe
rep
out
push
inc
dec
sub
mov
cld
push
add
ficompl
test
and
sub
jecxz
fstps
lcall
dec
mov
mov
ret
ljmp
negl
repz
and
je
cli
sub
call
repz
cmpsl
xchg
pop
xchg
xchg
fwait
xor
aam
out
pop
addl
pop
dec
jns
lea
test
imul
inc
jecxz
jle
pop
xchg
mov
mov
push
mov
lret
cmp
add
call
push
jns
pop
call
mov
mov
clc
cmp
lret
mov
sub
pushf
fistpll
inc
or
sbb
add
popa
data16
lahf
jg
or
fwait
es
add
daa
jnp
flds
cmp
ljmp
out
in
and
jp
cli
vmwrite
push
inc
inc
int3
sbb
inc
leave
xchg
push
sti
jecxz
mov
loop
out
or
mov
add
mov
jp
push
aam
rcl
out
outsb
fnsave
and
in
xchg
lahf
sub
nop
lods
int
enter
dec
adc
mov
mov
mov
push
pushf
xchg
inc
and
call
adc
popf
ds
imul
ret
xorb
cli
mov
push
lea
sbb
mov
frstor
jle
outsl
cmc
imul
stos
out
dec
or
stos
sbbl
push
add
xchg
movsl
aad
jge
cmp
out
push
mov
mov
jnp
inc
pop
cmp
bound
imul
mov
aas
push
and
adc
fs
adc
andl
in
and
popf
cmovb
lret
jp
cmp
xor
shll
lea
outsl
jl
test
popa
xor
cmp
pop
add
pop
sbb
add
push
inc
jmp
push
iret
mov
lock
ds
iret
sbb
jle
mov
aam
mov
in
sub
sub
scas
popa
sbb
mov
sbb
rclb
shlb
mov
pop
push
jp
push
out
cli
rorl
imul
sub
mull
loope
jns
ss
jp
mov
xor
das
jae
mov
cli
clc
mov
dec
test
mov
mov
push
daa
sbbl
les
jmp
sub
mov
push
push
int
decl
jge
flds
test
lea
inc
cmp
inc
out
pushf
je
pop
sbb
or
ret
scas
popa
dec
inc
push
bound
pop
call
xor
sbb
jnp
stos
or
xchg
dec
adc
and
mov
xchg
sub
repz
adc
mov
xchg
fists
das
adc
test
jne
out
out
roll
adc
ljmp
inc
fcomp
xchg
push
cmpsb
mov
adc
mov
into
inc
ss
and
sarb
or
scas
mov
int3
jnp
jnp
xchg
jnp
push
jmp
xor
adc
mov
in
repz
sbb
pop
jl
mov
sahf
adc
stos
inc
int
adc
aad
cmpsb
shrb
mov
mov
adc
int3
cmp
fdiv
mov
inc
int3
cmp
cltd
les
nop
jne
xchg
ret
adc
push
fidivrl
and
pop
inc
arpl
mov
cli
loop
in
repnz
mov
jp
out
inc
cmp
out
dec
pop
nop
bnd
pop
jne
pop
dec
cmp
dec
jae
pop
stos
aas
push
in
inc
xchg
or
popf
ficoml
xchg
mov
out
imul
or
cmpsb
repnz
xor
mov
testl
ja
lods
add
ret
mov
aad
or
dec
popa
dec
xor
mov
push
mov
mov
lcall
imul
xchg
mov
mov
adc
adc
cmc
not
push
jmp
mov
je
jno
cmp
mov
pop
jns
test
or
xor
fiaddl
dec
push
sub
mov
and
jg
scas
inc
and
das
and
aas
sub
cld
mov
ret
cmpsb
push
xchg
inc
mov
rcll
fstpl
pop
es
fsub
movl
inc
mov
push
xchg
fcmovne
cmp
dec
sbb
and
loop
data16
dec
push
outsl
cmc
shrb
mov
ds
cmp
rcr
xlat
lret
mov
data16
mov
xchg
shlb
mov
cmp
in
mov
fwait
or
loope
push
inc
mov
sub
mov
or
movsl
shl
xor
jp
addr16
lods
lcall
test
or
mov
fldcw
fiaddl
add
out
push
fmuls
push
fisubl
sub
arpl
jp
mov
mov
loop
leave
cmpsl
cmpsb
jo
push
loope
cmp
je
scas
sub
sbb
mov
push
cmp
adc
mov
sub
xor
inc
shr
ja
incb
mov
inc
or
lds
jae
push
push
hlt
mov
mov
lods
push
pop
je
adc
enter
or
add
adc
repnz
aas
cmpb
sahf
xlat
sub
xlat
lods
dec
push
mov
mov
vpmacsww
lds
mov
jp,pt
fstps
ljmp
adc
mov
xchg
stc
loope
adc
into
lods
mov
cwtl
ljmp
jg
jmp
imull
outsl
and
push
ret
gs
jmp
cmp
mov
lcall
int
arpl
shlb
addl
cld
aad
cmp
es
dec
fisttpl
xor
sub
and
sub
lea
punpckhdq
mov
aaa
filds
add
adc
push
dec
adc
sti
inc
or
sub
add
jmp
dec
fstp
in
sbb
aam
pop
ficomps
mov
lea
cs
pop
mov
mov
and
jns
mov
and
aaa
push
arpl
mov
ficoms
sbb
cmp
push
and
js
mov
mov
test
inc
and
ljmp
rolb
jp
mov
imul
popa
inc
fcompl
es
in
js
fst
stc
push
pushf
in
cmp
cli
rcr
adc
or
lods
dec
and
dec
add
lret
cli
pop
add
cltd
test
dec
int3
dec
daa
jmp
mov
sbb
les
data16
push
cmp
adc
mov
movsl
insb
in
movsb
and
mov
subb
jb
cs
adc
outsl
cvtpi2ps
es
xchg
andl
jns
repnz
movb
sub
arpl
xor
fcoms
ret
lret
je
cwtl
push
into
sahf
cmp
inc
mov
scas
sbb
or
les
mov
sti
xchg
and
call
sti
les
daa
inc
push
add
testb
comiss
mov
fwait
cmp
or
mov
in
testb
in
mov
or
adc
out
mov
and
fs
shlb
popf
stos
jmp
inc
aad
adc
xlat
xor
pop
ds
push
sub
punpckhwd
dec
mov
out
push
push
pop
xchg
into
and
stc
xor
daa
push
sti
xorb
cli
cwtl
cld
jbe
popa
outsl
cmp
mov
xor
xchg
aas
sbb
fnstenv
or
imul
aam
jl
pop
lods
in
fldcw
or
js
scas
xorl
and
mov
int3
or
das
cld
push
jns
push
sub
in
orl
lret
xor
ret
and
fidivs
in
aad
call
jmp
adc
in
pop
int3
cmpsb
clc
mov
rcr
cmc
and
fidivs
sbb
lret
fnsave
or
mov
mov
lds
xor
mov
mov
inc
cmp
push
shlb
and
popf
sub
mov
and
pop
mov
rol
repnz
add
dec
inc
nop
sub
xor
imul
lock
lcall
call
scas
test
jle
mov
and
mov
jnp
cmc
push
hlt
gs
out
std
stos
inc
pop
or
push
hlt
je
mov
adc
inc
pushf
call
jg
into
sbb
jo
mov
movsb
es
iret
push
jecxz
in
push
jp
push
out
dec
dec
iret
cmp
ret
sahf
push
mov
testl
mov
ret
pop
test
add
mov
xorb
fnsave
addr16
push
add
jo
mov
push
dec
mov
mov
push
add
in
mov
push
sar
dec
cltd
stos
xchg
sbb
adc
in
aas
test
or
pop
mov
lods
dec
sub
mov
mov
mov
jl
sub
dec
mov
cwtl
jl
cmc
jo
cs
sub
jns
push
or
insl
xchg
iret
bound
sbb
xchg
int
xchg
movsl
test
xor
push
mov
cli
leave
push
popf
bound
aaa
out
jge
pop
lret
jge
ljmp
inc
out
push
push
mov
ljmp
fidivl
and
add
pop
cmp
daa
pop
pop
jle
inc
bound
pushf
adc
cmp
jo
bound
je
out
lds
rol
imul
lcall
jb
rcl
aaa
add
push
cs
in
jp
and
cmp
cmpsl
pop
pop
inc
pop
scas
xchg
pop
andl
and
jae
and
xor
rcl
scas
pusha
mov
in
cmp
in
sub
and
xor
and
add
cmp
sub
repz
and
repnz
aas
pusha
mov
push
sbb
sti
popf
xor
mov
shrl
adc
pusha
inc
xchg
pop
fsubr
inc
clc
paddusb
inc
enter
int
pop
cmp
scas
mov
inc
pusha
xchg
cmpl
xor
mov
sti
adc
inc
or
loopne
fiaddl
pop
lret
imul
jge
repnz
in
fwait
cltd
hlt
jns
xor
push
dec
and
jb
jo
adc
jecxz
or
sub
mov
mov
rorl
or
mov
scas
imul
clc
pop
jo
mov
pop
sar
loop
lret
xchg
stos
aad
repnz
push
push
rorl
cmp
and
test
les
ret
mov
jge
lods
out
or
adc
xor
adc
test
loope
cmp
sahf
ljmp
inc
xlat
add
mov
aas
fdivrp
sti
in
je
pusha
scas
sbb
jp
aaa
call
loope
cltd
fcomip
inc
push
sar
dec
test
stos
and
mov
and
push
xchg
ds
sub
out
in
mov
in
aad
sbb
or
mov
in
jp
jno
add
gs
leave
add
add
pop
fbld
add
in
mov
sbb
add
popa
icebp
pop
aas
cld
adc
mov
sub
lcall
pop
push
dec
or
aad
add
mov
call
or
cli
push
inc
xorl
int
mov
pop
or
outsb
sub
mov
mov
jecxz
pop
loop
js
cmp
mov
cli
jmp
lret
repnz
das
jae
arpl
dec
xor
aam
imulb
or
lret
aas
ja
push
adc
cmp
add
xchg
push
imul
pop
leave
test
xor
cltd
test
cmp
mov
xchg
loopne
dec
dec
mov
push
mov
and
push
enter
xorb
ja
mov
shll
pop
dec
clc
xorb
sbb
je
push
adc
cmp
inc
adc
andl
jno
add
dec
aam
popf
pusha
pop
or
push
inc
add
or
pushf
fsubl
adc
jbe
stc
hlt
jecxz
push
inc
lret
xchg
or
and
ret
jb
divps
jp
stos
fstl
sbb
adc
cmp
or
je
sub
lds
mov
out
adc
imul
cltd
sub
mov
and
jo
inc
inc
inc
leave
dec
jno
sahf
pop
aam
jmp
outsl
cmp
xor
aad
arpl
out
push
arpl
fnstenv
adc
cli
ficoml
mov
inc
call
jmp
outsb
push
mov
push
scas
dec
jg
adc
mov
cmp
loop
lcall
mov
into
mov
ss
pop
add
xchg
mov
nop
shlb
dec
mov
sub
scas
xor
pop
xor
clc
jae
xor
lahf
popa
ror
cmp
xchg
push
out
pop
outsl
aad
jns
dec
or
data16
addr16
fcos
inc
imul
lods
mov
cwtl
and
int
imulb
rcll
cmp
or
in
sub
nop
lods
sub
out
push
jp
mov
sbb
push
mov
sub
dec
movb
cs
lret
cmpsl
sub
sub
mov
sbb
cltd
sahf
sbb
pop
jae
lret
jno
les
xchg
call
xor
das
inc
lds
and
xor
sbb
or
cmp
xchg
jne,pn
dec
cltd
fnstsw
stc
xchg
data16
lods
push
imul
inc
inc
xchg
in
sub
out
pop
movsb
adc
movsb
out
mov
mov
inc
out
xchg
pop
lock
or
xchg
loopne
mov
sbb
mov
movsb
lret
cmp
dec
sbb
out
push
mov
mov
mov
in
stos
mov
in
cmp
ret
test
hlt
ljmp
cmp
adc
dec
mov
mov
fisubs
cmp
xchg
icebp
adc
xchg
aas
jecxz
add
clc
rcrl
and
in
mov
jns
or
leave
cltd
das
push
test
push
dec
jne
sub
jmp
ret
mov
sbb
jp
outsl
mov
in
sbb
jecxz
fcmove
jno
out
pushf
insl
std
adc
push
rolb
test
icebp
je
push
out
loopne
jns
jo
pop
lods
fcoml
mov
popa
stc
jl
and
xor
add
inc
inc
fs
daa
jb
add
cmpb
es
popa
push
sti
inc
cmp
imul
fs
sbb
and
ljmp
mov
sbb
es
std
adc
sbb
dec
ficoms
cmp
clc
jmp
jmp
mov
lds
cwtl
or
and
or
ret
inc
pop
imull
jb
xor
inc
fdivs
xchg
add
notl
or
sarl
test
push
loopne
dec
add
sbb
in
aad
mov
dec
mov
test
add
cltd
subb
sbb
sbb
mov
and
mov
pop
and
repz
into
hlt
xor
xlat
mov
mov
ss
and
push
test
test
mov
xor
es
insl
sub
fistpl
push
xor
jg
clc
je
aad
xchg
inc
sub
fbld
dec
fidivl
jnp
xor
push
test
rcll
or
mov
mov
hlt
cmpl
dec
icebp
pop
push
fpatan
inc
insb
xor
and
movsb
mov
pushf
aas
sub
lock
mov
jl
adc
bound
test
fdivrs
pop
stos
sbbb
mov
out
mov
xor
push
in
lahf
aas
aam
xchg
iret
mov
push
mov
xlat
out
and
add
sub
xchg
mov
in
mov
out
or
sbb
or
or
add
mov
std
or
and
adc
ret
inc
sub
cmp
loop
and
and
mov
push
arpl
vpmacsdql
ds
xor
cli
pop
test
or
outsl
incl
fimull
imul
cmpsb
ja
cmpsl
xlat
clc
pop
cld
cmp
movd
iret
xchg
or
mov
cmp
subb
and
xchg
es
jmp
jmp
shlb
lea
subl
adc
mov
hlt
push
sub
cwtd
adc
icebp
add
jp
xchg
mov
pop
in
aaa
jo
inc
test
mov
push
ret
pop
in
bound
sub
xchg
and
ret
jmp
mov
push
sbb
pushl
add
stos
push
jle
popl
iret
xchg
xor
or
fisubl
inc
mov
cmp
add
jnp
aaa
push
lds
xor
pop
mov
adc
cmp
mov
and
popl
mov
xchg
adc
enter
mov
in
aas
lret
xorl
mov
bnd
rcll
shll
sbb
mov
cmp
int3
xchg
cltd
cmp
adc
mov
lret
movaps
movsb
lcall
cmp
sbb
lahf
cmpsb
mov
cltd
sbb
jno
pushl
mov
mov
xor
insl
nop
push
adc
adc
notb
inc
mov
jl
push
stc
inc
daa
adc
in
scas
pop
sbb
adc
pusha
jge
aas
add
gs
dec
insl
push
icebp
or
faddp
out
push
or
jl
fcmovne
pop
sahf
xchg
iret
divl
int
fsubs
call
cmp
adc
adc
in
dec
mov
push
cmpsl
adc
movsb
int3
ss
cmp
mov
or
inc
iret
out
adc
sahf
cltd
mov
clc
inc
divb
push
test
xor
sbb
test
mov
pop
jl
xchg
fs
xor
orl
jg
mov
js
xchg
adc
dec
orb
cmp
and
lcall
out
mov
mov
mov
xchg
lods
or
mov
std
mov
ret
outsl
mov
lea
lods
sbb
mov
pushf
imul
sbb
push
push
cmpl
pop
imulb
rol
loop
shl
imul
jno
or
dec
mov
rcr
ret
in
aad
addl
cmpsb
xor
inc
sub
sbb
mov
lods
out
xor
fwait
xorb
inc
loopne
xor
sbb
movsb
aas
lret
insl
hlt
test
mov
xor
xor
xchg
push
lahf
ljmp
jb
std
dec
mov
xor
mov
dec
dec
and
lock
and
arpl
sub
test
hlt
mov
sbb
shl
xchg
rcrb
jg
rcll
sarb
out
sub
sbb
ljmp
dec
add
push
inc
pop
pusha
int
jl
fimull
ja
je
dec
out
sti
aaa
mov
stos
lcall
test
xor
sbb
lea
out
sbb
pop
jge
sbb
lcall
cmpsb
mov
sub
cmpsb
lea
sub
ljmp
or
inc
dec
dec
rcrb
and
jno
in
scas
cli
sbb
dec
jmp
fistps
loope
sub
in
in
jnp
push
cltd
xlat
in
insl
xchg
call
es
jno
in
add
and
test
out
add
mov
inc
mov
mov
push
mov
or
xchg
cltd
xchg
xchg
lea
cmc
inc
jp
dec
and
adc
fistpll
aam
pop
or
xor
jae
or
fidivrs
pop
aam
pop
or
not
test
push
daa
or
shlb
lods
push
stos
js
fwait
adc
stos
adc
stos
sbb
xlat
and
test
daa
push
push
mov
sti
dec
pop
pusha
add
mov
iret
stos
xchg
pop
cmp
mov
icebp
or
xlat
insb
ljmp
cmpl
mov
repnz
mov
mov
jge
jmp
xor
pop
incb
mov
in
sarl
dec
out
out
sbb
mov
iret
sahf
push
cmp
fcompl
enter
sbb
mov
jg
gs
movsl
sbb
jge
fidivrl
mov
inc
push
dec
pop
outsb
jns
jns
aam
cmc
out
stos
lds
ss
jmp
inc
jae
xor
loop
pusha
or
aaa
gs
pushf
pop
push
popf
ret
mov
inc
xchg
stos
cmp
dec
aaa
adc
aas
xchg
std
pop
mov
push
lret
repnz
or
in
add
pop
or
icebp
loope
test
sarb
repz
cmp
mov
cltd
add
addr16
int
xchg
pop
fs
mov
sub
push
adc
xor
lret
pop
cmp
lods
adc
xchg
fs
inc
add
test
pop
and
icebp
jg
push
rorl
jae
cli
pusha
dec
outsb
push
int3
dec
popa
inc
out
stos
or
sub
nop
xor
lret
out
sbb
fstl
adc
lods
dec
sbb
cmpsb
outsl
xchg
clts
mov
and
xchg
out
xchg
subl
mov
orb
sti
mov
rorb
cmpb
dec
leave
inc
decl
aaa
or
in
sbb
bound
int3
push
dec
ljmp
ds
inc
dec
icebp
outsl
mov
add
shrb
pop
mov
inc
aad
fs
arpl
and
adc
sarb
mov
jge
repnz
cmp
mov
mov
jnp
push
repnz
mov
lret
jb
dec
cmp
mov
dec
cmp
imul
lock
pushf
out
mov
mov
pushf
ss
push
jo
xlat
std
icebp
scas
data16
das
xchg
push
popf
scas
cmc
or
jmp
mov
sbb
das
fistps
rorl
mulb
push
rolb
jo
lret
lods
mov
stos
mov
cmp
mov
mov
adc
lods
or
add
cmp
add
into
jnp
sbb
pushf
push
aam
test
inc
jne
nop
adc
pop
sbb
data16
xchg
pop
popa
xchg
push
dec
daa
mov
sahf
cmpsb
shl
repz
enter
les
fistpll
fimull
mov
cs
pop
ds
mov
xchg
sub
adc
mov
inc
pop
cmp
leave
dec
js
es
sub
mov
insl
add
jne
jb
adc
fnstcw
sbb
cmp
dec
adc
mov
lret
shll
mov
ss
jne
mov
mov
xchg
mov
pop
xor
adc
movsb
fst
sbbl
out
fistpl
ret
aas
andb
xlat
std
xchg
mov
adc
add
in
rcrb
ja
push
dec
in
and
jae
mov
lds
js
cmp
xor
jecxz
or
pop
fnsave
xlat
jae
and
jmp
das
push
std
clc
pop
insl
mov
mov
sbb
loopne
rorb
out
and
jno
jb
xlat
or
aam
sub
nop
ja
test
cmp
mov
leave
jle
imulb
dec
insl
lods
out
adcl
out
cmc
add
mov
push
jmp
push
sar
or
lds
test
xchg
and
or
fnstcw
sub
imul
xchg
nop
pushf
mov
push
mov
sub
sbb
push
in
lods
pop
cli
pushf
arpl
in
outsb
xorl
daa
sbb
gs
mov
jecxz
psrld
js
mov
dec
push
sub
xchg
add
call
xlat
andl
test
pop
popf
xchg
or
aad
inc
cmpl
add
aas
xor
scas
or
shll
fbld
movsl
mov
jmp
xor
hlt
add
hlt
cmp
outsb
lods
push
cli
mov
rcll
adc
pop
shll
stos
push
fdivr
pop
stos
insb
mov
mov
xchg
and
ret
insb
je
pop
dec
dec
jl
cwtl
sbb
mov
mov
sub
pop
sub
ret
call
mov
cli
imul
outsb
mov
stos
insb
sbb
and
xor
xlat
pop
dec
out
leave
pop
ljmp
xchg
sub
mov
rorb
in
dec
xchg
stos
adc
add
dec
mov
dec
inc
sub
repz
inc
out
sub
cs
divl
xchg
jb
inc
notb
jbe
orl
push
xchg
testl
and
push
inc
hlt
mov
fnstenv
push
mov
adc
dec
sub
jmp
sbb
adc
mov
outsl
pop
into
jnp
cs
in
xor
inc
jae
daa
in
add
std
ja
dec
push
outsb
add
out
pop
pop
or
lcall
int3
stc
cmp
inc
jge
sarb
out
sub
jl
iret
or
or
iret
outsl
ret
push
cmp
cs
mov
mov
insl
mov
push
js
ds
rolb
push
push
cmp
jno
pop
dec
imul
iret
mov
sbb
push
and
push
jecxz
push
xor
push
mov
out
orl
imul
in
clc
sbb
sub
pop
sti
sarl
mov
test
sarl
subl
test
or
cmpsl
pop
mov
xchg
mov
jge
push
or
jnp
jmp
jbe
sub
stc
adc
iret
jl
int3
lock
aas
and
fstps
adc
mov
mov
jecxz
sbb
into
aad
out
or
jo
iret
pop
and
xor
mov
jne
test
lea
mov
popa
push
add
dec
data16
dec
push
loope
jmp
xchg
or
jp
add
cltd
and
sub
fwait
jae
data16
ja
pop
pop
outsb
dec
out
mov
pop
sbb
inc
idiv
out
lds
das
fwait
clc
stc
jp
cmp
addr16
push
dec
xor
movsl
jmp
addr16
movq
add
pop
hlt
sbbl
scas
xor
imul
test
es
rorb
movsl
xchg
inc
adc
mov
fidivrs
mov
insl
test
mov
insl
dec
xor
add
push
loopne
sahf
inc
repnz
or
dec
out
and
cmp
xor
mov
mov
pusha
dec
lret
adc
addr16
sti
add
ds
shll
popf
add
aas
dec
in
push
incb
scas
or
pusha
fldenv
push
mov
mov
mov
je
xchg
push
lcall
xor
sbb
dec
and
test
mov
aam
out
test
rorl
add
cmp
fildl
or
insb
push
pop
sub
xchg
or
mov
sbb
out
mov
or
sbbl
out
call
imul
popa
jns
and
sub
hlt
scas
sub
aad
dec
subl
mov
push
addl
mov
xchg
icebp
subl
or
in
into
dec
push
xchg
sub
insb
sbb
cmc
adc
or
mov
dec
xchg
lret
push
movsl
daa
push
in
pop
add
les
jp
push
int
push
sbb
jmp
nop
rcr
jmp
aas
push
into
mov
adc
outsl
mov
sti
add
lea
sub
lret
push
clc
jne
xchg
aas
add
bnd
popf
into
jne
pop
mov
push
or
fcmovne
shrb
dec
mov
mov
xor
inc
aad
sarl
aam
lods
jp
aas
sub
mov
cmpsl
xchg
cmp
sbb
inc
int3
repz
xchg
sub
fsubrl
rcrl
or
test
jl
mov
xor
jmp
fnstenv
test
mov
imul
cs
fs
jae
lret
xchg
mov
sub
or
push
adc
cmp
sbb
iret
or
ror
cli
or
xchg
mov
imul
push
push
dec
add
pop
or
popa
jmp
rorb
jae
hlt
clc
sbb
cltd
jne
sbb
jecxz
or
add
mov
in
push
jp
sbb
sub
sbb
xchg
adc
out
les
shrl
test
adc
push
pop
fistps
and
iret
cwtl
cmp
enter
push
inc
scas
push
push
pop
adc
repnz
sbb
mov
fstpt
add
movsl
and
add
jecxz
push
cmp
into
push
ret
pop
adc
mov
mov
adc
scas
shrb
and
mov
jns
or
inc
and
aad
pop
xchg
in
ret
mov
dec
daa
rcl
sub
cmp
sbbl
cwtl
inc
push
movsl
xchg
jge
pop
imul
in
rorl
cmp
xorb
cld
aaa
jno
pop
bound
xchg
and
mov
xor
cmp
inc
mov
jb
jmp
or
sbb
xor
pop
sub
pop
sbb
inc
lret
push
aas
mov
xchg
push
mov
cmpsl
insl
push
in
sbb
scas
out
test
inc
repz
and
pop
jecxz
lock
repnz
add
pop
loopne
jecxz
push
sub
or
or
mov
test
lret
hlt
aaa
mov
cmpb
xchg
push
push
xor
js
not
adc
adc
mov
aaa
mov
jns
pushl
xor
frstor
fcmovnb
dec
push
xor
mov
inc
ret
loope
inc
js
mov
mov
aaa
negb
mov
mov
cmp
lods
sbb
xor
xchg
arpl
stc
dec
test
addr16
mov
xchg
pop
lds
lret
and
jecxz
dec
fiaddl
and
xchg
jae
cmpsl
ror
sti
adcb
fnstenv
and
xor
ret
or
mov
mov
sbb
decb
xor
xchg
pop
mov
mov
xor
pop
call
outsl
addr16
fstpl
jno
cli
lock
cmpsb
ret
loop
inc
sahf
jmp
movsb
xchg
xchg
xchg
sbbl
or
or
jb
cwtl
mov
mov
adc
push
outsb
sbb
outsb
mov
jo
mov
pop
outsb
test
ljmp
push
shlb
jg
mov
shr
insb
xchg
inc
mov
jno
add
mov
cli
mov
sahf
mov
mov
imul
mov
mov
jmp
mov
popl
xchg
or
lds
sub
mov
cwtl
mov
jb
cltd
mov
mov
mov
and
pop
fcompl
or
and
push
or
inc
scas
or
ja
into
push
sbbl
inc
lods
cmp
adc
push
push
and
lret
lods
test
std
add
push
repz
ja
nop
xchg
ret
jmp
or
mov
lods
ss
sub
ss
jnp
push
xor
pop
bound
inc
pop
add
imul
xor
or
insb
push
loope
ret
leave
movsb
or
push
pushf
adc
add
arpl
xorb
ja
pop
push
das
enter
inc
int
aas
add
cmc
and
repz
iret
test
je
mov
ss
sbb
movsb
xorb
and
in
xor
into
ds
cmpsb
test
pop
dec
insl
rorl
outsb
mov
rcrb
fs
mov
sub
flds
out
mov
xchg
pushf
mov
dec
push
andl
jnp
jp
jnp
xor
arpl
inc
pop
lock
pop
sahf
xchg
inc
lods
into
jle
into
add
mov
fxch
mov
imul
shr
xchg
outsl
push
pop
add
sub
jb
pop
js
cmp
aam
mov
jae
enter
data16
xor
dec
lcall
mov
gs
nop
mov
mov
jns
cmp
jb
fnstenv
cmp
ja
mull
addr16
iret
in
mov
pop
nop
pusha
aam
fsub
mov
lret
test
fistps
jl
adc
xchg
mov
clc
in
adc
cmp
mov
mov
lcall
imul
jae
sbb
pop
add
insl
push
and
jge
mov
mov
stc
mov
mov
inc
int3
inc
push
fisttpll
cld
xchg
xchg
add
xchg
mov
pop
adc
xchg
orb
ljmp
push
out
addr16
mov
fwait
pop
xchg
fdivrs
xlat
push
orl
out
xchg
jbe
fldt
cs
clc
mov
lahf
dec
shrb
and
cmpsl
jg
stc
mov
jecxz
sub
xchg
xchg
sarb
pop
xor
pushf
les
mov
pop
inc
mov
jo
lock
lods
outsl
push
addl
into
cmc
push
or
and
and
inc
in
sub
mov
sti
push
jl
pop
cwtl
mov
clc
enter
sub
and
pop
add
imul
sbb
insb
stc
sti
mov
jp
dec
push
ret
out
stos
cmpsl
sahf
outsl
xor
sahf
pop
pop
jge
es
mov
jnp
icebp
xor
mov
mov
mov
xor
push
aas
and
imul
push
aaa
pop
and
fwait
ss
jne
repz
inc
add
fiadds
insl
and
decl
in
cmp
js
test
imul
sub
sbb
faddl
and
xchg
dec
int3
into
repz
mov
mov
mov
pop
popf
fnstenv
inc
in
sub
mov
push
dec
jg
stos
cmc
and
negl
aas
cltd
out
sub
or
in
mov
mov
jge
cmp
adc
push
pop
pop
push
fcmovnbe
insb
mov
dec
repnz
sbb
adc
mov
sahf
adc
pusha
popa
ret
arpl
shll
sbb
daa
xor
leave
xchg
push
call
xchg
test
and
inc
cmp
cmpsl
aam
aaa
jmp
arpl
call
es
ficompl
sub
iret
fdivrs
insb
loopne
sbb
pop
jge
rcrb
pop
add
sbb
inc
jae
sbb
pop
xchg
pop
mov
iret
out
stos
ja
incb
mov
push
add
jns
test
pop
sub
lahf
scas
xor
xlat
ss
mov
xor
cmpsb
jle
cmpsl
or
ficoml
mov
dec
mov
pushw
and
movsl
sahf
in
gs
cmp
leave
pop
sti
push
pop
push
add
mov
adc
add
int3
jne
add
insb
add
hlt
pop
xchg
test
hlt
in
mov
shl
dec
jb
aas
aad
and
xchg
in
leave
mov
into
jmp
jl,pn
xor
jecxz
rcr
xor
sbb
add
fiaddl
xchg
cmpl
pop
add
jbe
sub
pop
fisttpl
out
jle
jmp
cmc
into
lock
and
pushf
inc
inc
and
mov
pop
inc
or
push
inc
sub
jne
lods
push
pop
push
mov
mov
pop
mov
dec
add
stos
xor
cmp
rorl
sub
js
pop
stos
dec
and
gs
je
jnp
stos
and
mov
mull
in
jecxz
fmul
hlt
popa
out
pop
pop
push
ss
ret
add
sub
push
xchg
xchg
sbb
pop
insl
shlb
pop
and
bound
out
cmp
fbld
or
mov
rcl
ja
ja
out
jae
imul
xorl
mov
outsl
jle
popa
add
lock
sbb
sti
push
stos
insb
nop
add
cmp
add
aaa
mov
sbb
push
in
testl
or
cmp
test
loop
add
arpl
pop
and
mov
mov
mov
adc
call
mov
aas
adc
xchg
and
mov
call
push
dec
mov
leave
cmp
pop
jbe
adc
pusha
arpl
hlt
out
or
jl
out
lcall
sbb
loop
int
sbb
cmpsl
inc
insb
lret
cmpsl
popf
clc
cmp
test
call
inc
or
push
jge
and
mov
loope
or
pop
mov
cmp
jns
pusha
outsl
scas
xchg
dec
xor
and
cwtl
cmp
mov
mov
sub
or
int3
xchg
sub
lds
aas
fnstsw
xchg
sub
das
pop
dec
mov
jle
push
add
imul
pop
stc
pop
dec
lret
repnz
sti
jno
cmpl
outsl
scas
mov
xor
out
test
clc
mov
sbb
xchg
cmpb
dec
fiadds
mov
andb
ds
or
dec
movsl
jae
mov
arpl
lahf
cmpsl
mov
pop
dec
ret
pop
cmp
mov
xchg
in
lods
jp
rcr
pop
push
movsl
cmpsl
mov
je
fs
or
mov
dec
adc
es
aam
cmp
imul
daa
and
mov
aad
jns
push
mov
xlat
imul
popa
pusha
cli
sub
cmp
lods
lret
popf
pop
lret
outsl
pop
xchg
fadds
pop
mov
mov
xcrypt-ctr
cmpsl
sbb
xchg
stos
pop
leave
fldenv
gs
pop
jl
pusha
cmp
mov
and
mov
add
pop
out
and
lods
data16
push
mov
insl
adc
cmc
insb
and
lds
repz
mov
sub
xor
push
xchg
adc
jg
punpcklbw
sbb
lfs
aas
add
into
std
jmp
push
mov
vandnpd
mov
jne
arpl
push
and
inc
stos
dec
int3
xchg
hlt
jns
sbbb
jbe
pop
mov
mov
adc
jnp
decl
mov
popf
rcrl
lds
outsb
cwtl
lds
out
sbb
xor
mov
mov
repz
insl
xor
jo
shll
int
and
rolb
imul
xchg
shll
cmp
push
mov
bound
pop
inc
jnp
lret
les
cmp
mov
jns
sti
fstpl
cmp
sbb
dec
adc
cmp
and
test
sti
std
aas
inc
jle
shrb
cmp
in
repnz
mov
aam
ja
xchg
mov
push
imull
lahf
into
loopne
jbe
jns
aad
test
orb
cmp
push
lods
xchg
sub
inc
out
mov
xchg
jmp
es
fidivrl
cs
cmp
jmp
lret
test
dec
inc
hlt
movd
cmpsl
fimull
daa
iret
fnstsw
aaa
xor
mov
mov
cmp
jns
out
fisttps
pop
sbb
xor
dec
dec
cwtl
rcr
xor
push
scas
fisubl
pop
cmp
nop
iret
mov
mov
insl
cmp
aas
fistpll
lods
insl
add
frstor
imul
or
pop
add
pop
mov
or
xlat
jmp
imul
daa
dec
popa
movsb
adcl
jne
outsb
mov
sub
push
ds
dec
xor
adc
jno
mov
roll
lock
mov
idivb
jno
daa
sbb
push
push
jbe
rcl
pop
adc
pop
or
mov
pop
cmp
int
pop
adc
dec
push
outsl
push
into
cmpsl
or
fistpll
pusha
fcmovnbe
rclb
out
cmc
jge
outsl
pop
jne
push
mov
stc
dec
mov
out
mov
jl
push
fidivl
mov
shll
subb
cmp
pop
or
xchg
ljmp
das
xchg
mov
dec
cmp
cmp
daa
lock
xor
xlat
sub
arpl
clc
jmp
stos
cmp
add
int3
rorl
adc
loopne
je
and
jp
push
lcall
rcrb
mov
cmpsb
popa
fstps
mov
mov
shl
rorb
push
fcmovnu
rorl
inc
aaa
xor
sub
xlat
mov
movsl
xchg
fbld
in
push
xchg
movsb
and
rcrb
sahf
pop
lock
mov
popa
or
xor
int3
stos
dec
je
bound
mov
jl
out
lods
sub
inc
test
lret
pop
test
movsb
push
mov
shll
sub
loopne
adc
leave
int
enter
das
mov
sbb
sahf
das
fdivrl
add
sub
shlb
pop
mov
stos
inc
ret
loop
rorl
xchg
test
bound
test
call
enter
jp
aaa
mov
sub
jbe
test
repz
push
xor
imul
loop
popa
scas
inc
cltd
pop
pop
es
jb
mov
in
lahf
addb
call
rcll
imul
call
jle
dec
cld
add
cli
push
dec
dec
pushl
lea
add
push
aam
mov
leave
mov
lods
mov
popa
xchg
ljmp
fwait
sahf
mov
aas
adc
in
jns
aam
pop
and
ljmp
cli
jnp
ss
pop
clc
cmp
mov
mov
test
aad
xor
enter
fnstenv
lds
hlt
push
bound
pop
popa
sbb
cmc
mov
scas
dec
and
popf
cmp
stos
xor
scas
pop
stos
fs
movsl
js
dec
andb
fldl
inc
xchg
mov
lret
mov
lods
imul
mov
mov
insl
xchg
lds
gs
pop
xchg
mov
xchg
mov
xchg
xchg
jno
cs
push
dec
pusha
adc
push
adc
das
push
fiaddl
movsb
pop
jnp
out
ret
sub
mov
push
dec
insl
cmp
jns
jmp
rorl
icebp
and
rol
js
lahf
mov
jb
stc
popa
in
fstl
jae
movsl
test
xchg
fs
mov
jl
sbb
jns
movsb
rcrl
or
xor
addl
push
xchg
aad
mov
push
xor
mov
inc
jg
or
push
adc
push
pop
mov
dec
mov
add
into
xlat
mov
lret
cmp
xchg
std
sbb
push
scas
mov
cmp
inc
push
pop
shll
pushf
cs
test
push
js
cmc
cli
scas
call
push
push
repnz
or
clc
test
mov
cmpb
ljmp
inc
inc
aad
dec
aaa
in
pop
repnz
mov
xor
inc
mov
out
add
sarb
test
sub
pop
pop
les
aaa
dec
fs
movsl
jle
pop
mov
mov
jbe
enter
shl
outsb
jmp
mov
xchg
mov
and
test
cmpsb
test
add
jge
mov
sbb
push
push
pop
pop
ret
insl
and
xchg
into
scas
dec
mov
pop
int3
pop
enter
pop
inc
call
mov
in
aam
and
inc
insb
cmc
popa
in
repnz
xor
xchg
sub
lods
pusha
pop
pop
out
pop
jg
or
clc
pop
mov
mov
out
cltd
mov
inc
adc
fsubl
stos
lahf
mov
sub
cmp
and
gs
mov
mov
jno
mov
inc
test
mov
popa
pop
cs
xchg
daa
imul
aam
and
xor
mov
cld
dec
adc
jmp
int
push
ficoml
mov
ret
sbb
sbb
pusha
xchg
inc
roll
xchg
clc
sahf
push
outsb
cmpsl
aad
rclb
mov
adc
das
or
mov
sub
push
out
out
dec
xchg
and
dec
ss
iret
pop
shl
mov
adcl
push
xor
into
xor
sahf
sbb
idiv
fiadds
test
lods
xor
nop
xor
cmp
sub
sub
mov
sub
das
xor
mov
sbb
adc
sub
push
push
jmp
inc
adc
btc
icebp
gs
cmpsb
mov
and
or
movb
out
mov
xorps
or
inc
sub
jl
push
cltd
or
leave
inc
mov
xor
sbb
xor
xor
sbb
add
int
loope
lods
cmp
jmp
shrb
dec
sub
test
leave
mov
sbb
sbb
inc
xlat
mov
cmp
push
loopne
mov
xchg
mov
popf
jle
cmp
pop
sub
repz
xor
loop
dec
loopne
push
xchg
dec
mov
jnp
fstps
out
loope
dec
cmp
shrb
mov
xlat
xor
vpacksswb
imul
fninit
xchg
scas
pop
in
sub
sbb
in
mov
out
cs
sbb
aas
shrl
fcoms
pusha
mov
jb
adc
out
jl
jnp
dec
xchg
sar
mov
xchg
push
mov
loop
test
xor
jnp
pop
mov
xchg
add
push
push
insb
adc
jb
jae
add
xor
and
dec
xchg
push
jle
aam
lods
fidivrs
add
fwait
xchg
cli
stos
inc
stc
xchg
push
es
jmp
xor
mov
xor
sarb
test
cmp
mov
push
cld
inc
xchg
iret
pushf
sarb
cld
scas
lods
imul
add
add
add
jg
add
gs
and
fstl
movsb
fmull
cmpl
stos
pusha
xor
xchg
shr
pusha
sub
dec
xchg
lahf
add
push
rcll
mov
dec
dec
cmp
xchg
or
aas
das
cmc
sahf
divb
cmpsl
xor
aad
dec
pop
lods
inc
int
popf
cwtl
stc
iret
test
cmc
sub
mov
pop
inc
mov
cs
jecxz
jl
lods
rorl
nop
jecxz
sub
xorl
stc
add
and
sbb
dec
cltd
cmpsb
xchg
ret
xchg
mov
cmp
cs
lret
mov
loopne
dec
cld
cs
pop
ja
insl
fistl
inc
xor
pop
mov
cmp
push
jg
ja
test
push
mov
dec
rolb
xchg
xchg
xor
leave
cmp
jg
call
xchg
sar
and
out
js
mov
inc
leave
inc
mov
js
pop
int
rorb
sub
jno
int3
data16
fstl
inc
iret
test
movsb
loop
shll
add
xchg
int
xor
or
jle
lea
lock
push
xor
pop
test
nop
in
inc
push
xor
mov
pop
outsl
push
pop
jle
dec
lret
lret
int
mov
sub
adc
fstpl
fisubs
adc
mov
lods
inc
mov
xor
lahf
notl
pushf
cld
push
cmp
or
or
cmpsl
push
aas
add
cmp
popf
inc
push
jne
add
cmpl
jbe
in
fcoml
loope
push
fwait
das
clc
push
cli
and
mov
out
xchg
cwtl
jmp
ss
add
add
faddl
cmc
cwtl
sbb
cmpsl
pop
testb
push
xlat
fisubrs
dec
sbb
inc
insb
sbb
popa
mov
xchg
dec
cltd
arpl
cmp
and
fists
cmp
mov
cmpsb
daa
cmp
xchg
adc
pop
lahf
rcrl
je
mov
jecxz
xor
stc
jle
fisubrl
jg
scas
es
mov
mov
popa
xchg
sub
mov
lods
jl
cld
sbb
fs
mov
fmul
insl
cltd
mov
in
mov
add
in
push
scas
cwtl
out
lods
adc
push
cmp
inc
mov
fimull
sub
shlb
lret
dec
arpl
into
push
hlt
popa
push
pop
shlb
lret
adc
mov
mov
push
cmpsb
push
sub
lahf
int
ss
mov
jno
sbb
inc
clc
imul
jo
pop
ss
dec
push
sahf
in
daa
jecxz
repz
jecxz
cmpsl
lret
push
push
bound
ljmp
add
cmp
stc
into
pop
adc
fwait
lods
leave
or
pushf
push
imul
mov
push
rolb
mov
sahf
js
adc
lods
jns
mov
fwait
pop
mov
repz
aad
enter
ret
adc
pop
imul
jle
jbe
xchg
jbe
jecxz
add
mov
add
iret
ds
pop
inc
daa
outsl
int3
adc
dec
push
xchg
mov
mov
push
movsb
xchg
cmpsb
loope
jae
aam
sahf
leave
pop
jl
and
call
jge
mov
cwtl
cmp
xchg
cmc
imul
cmp
mov
xchg
sbb
lahf
dec
jp
dec
negb
int
mov
push
mov
mov
test
mov
xor
or
add
addr16
psubusb
ja
out
je
pop
nop
lock
fsts
push
mov
repz
lret
les
inc
push
jmp
jl
mov
pop
sbb
sarb
clc
inc
fscale
in
mov
orb
cmpsl
push
lods
std
test
push
fxch
int3
mov
ret
popa
jo
inc
dec
mov
loopne
dec
fdiv
fdivrl
xchg
orb
add
in
cmpb
pusha
sub
xor
flds
mov
cs
std
mov
mov
pop
dec
xchg
sbb
dec
loop
fdivl
imul
xor
push
aad
js
or
sbb
pop
dec
and
jne
fabs
cmp
sub
xchg
fimull
test
lret
mov
into
sub
sbb
cmc
jl
xchg
cs
jl
xor
fisttpll
mov
movsl
push
pusha
dec
pop
or
aas
inc
test
imul
arpl
lcall
stos
xchg
cmp
movl
das
es
aaa
pop
andl
loopne
cmp
bnd
push
push
ss
divb
out
movsb
dec
xor
loope
push
sbb
cs
insl
jnp
ljmp
ret
mov
pop
or
push
xor
and
data16
rcrl
add
bound
push
les
ficompl
test
mov
idivl
lcall
mov
xchg
out
mov
push
jnp
xchg
repnz
sub
lods
adc
lea
into
stos
adc
pusha
pop
repnz
cmp
jo
fwait
out
iret
fistpll
dec
sub
add
icebp
xchg
mov
enter
inc
adc
adc
movswl
adc
imul
mov
mov
lcall
faddl
dec
pop
dec
inc
pop
rorb
sbb
rolb
repnz
sarb
out
lahf
aad
xor
xlat
cmp
or
dec
mov
fmuls
xor
std
xor
call
js
rcll
sbb
rcll
and
pusha
or
inc
xchg
lock
test
pop
sarb
xchg
out
hlt
loope
in
sti
xor
cs
cld
pop
fmull
outsb
pop
push
test
pop
pop
cs
mov
xor
mov
in
sub
lea
inc
xchg
inc
or
cs
xchg
lcall
pop
lcall
stos
in
into
mov
or
iret
and
mov
jle
pusha
repz
cs
xchg
mov
lods
lret
ss
movsl
jl
lahf
insb
test
repz
nop
out
push
dec
loopne
pop
cli
lahf
adc
mov
rcrl
lock
add
daa
jg
les
cmp
gs
das
mov
inc
and
inc
push
iret
idivl
out
mov
fwait
cmp
xchg
aaa
dec
or
jge
jmp
into
mov
dec
aas
lret
iret
fnstcw
or
cltd
gs
fisttpll
xchg
pop
in
sub
push
repnz
fnstcw
pop
or
xchg
ja
xchg
divb
lods
shrl
cs
fimull
clc
leave
sub
out
or
sub
push
sbb
iret
inc
shrl
sahf
mov
pop
repnz
jle
es
jb
add
ret
push
cmp
jmp
add
aas
insl
dec
dec
data16
fcompl
jp
xor
cmpsl
jmp
mov
in
sub
mov
xchg
pop
adc
fnstenv
inc
adc
aas
stos
jbe
in
imull
outsb
loope
imul
ja
mov
gs
add
inc
push
dec
loope
add
sub
loope
push
xchg
add
sub
inc
push
or
xor
xlat
jl
das
loop
push
test
jl
jb
xchg
mov
pop
das
lcall
push
jecxz
inc
shr
cmp
adc
lods
jg
cmp
adc
adc
mov
inc
cwtl
dec
stc
repnz
ret
les
in
int
shlb
xchg
and
mov
xchg
mov
cmp
jae
xor
fucomip
nop
rorl
pusha
repz
insb
sbb
mov
imul
rcll
lea
or
dec
sub
inc
lret
inc
imul
mov
push
inc
push
lret
push
cmc
or
adcb
scas
adcb
mov
pop
cmp
sub
js
imul
push
cmp
jmp
add
pop
mov
adc
movsb
lods
pushf
add
in
push
sub
aad
sbbb
add
fistps
dec
leave
inc
loop
loop
scas
test
mov
xor
leave
std
inc
jo
fs
cmp
test
insb
hlt
sub
xor
lds
adcl
mov
pop
jmp
mov
mov
cmp
cmp
mov
cmpsb
lcall
bound
pushf
pusha
push
dec
xor
mov
jnp
pop
jae
mov
dec
scas
adc
clc
pushf
sbb
fstps
sbb
adc
dec
ja,pt
outsl
dec
stos
cmp
adc
mov
adc
repnz
outsb
xorb
call
mov
mov
inc
add
cld
cli
push
jne
test
jg
ret
jle
sti
inc
mov
in
jno
sbb
mov
fcomps
xor
lahf
sub
push
xchg
int3
iret
cmp
mov
mov
aad
rcll
inc
mov
sarl
jb
imul
pop
bound
push
orl
push
fdivs
pop
in
jnp
lret
add
outsl
push
lret
popf
daa
decb
push
imul
xchg
les
mov
hlt
sub
cmp
mov
cmpsb
xchg
adc
rclb
xchg
enter
scas
push
aam
dec
jg
test
std
sbb
addr16
jns
dec
aam
in
mov
add
jle
lods
dec
dec
push
jb
std
push
cs
xor
cld
cltd
and
lret
rolb
or
outsl
mov
cmc
adc
xchg
pop
dec
into
sub
add
sbb
cmp
int
aaa
scas
add
out
xor
or
mov
dec
sub
push
xor
cmpsb
mov
call
dec
cmp
add
bound
push
jmp
lea
add
insl
cmp
rolb
stos
or
xchg
aam
or
mov
push
push
cmp
cli
jno
xchg
push
dec
dec
gs
lret
test
jbe
leave
inc
rorl
mov
cmp
and
mov
adc
test
ret
out
add
gs
cmp
mov
aad
js
sbb
mov
sarb
lea
sub
push
repnz
js
jmp
imul
jo
jecxz
popa
cmp
mov
repz
jle
mov
imul
por
pop
xor
aaa
popa
inc
gs
in
js
sbb
adc
push
inc
jnp
add
sarl
pusha
cmpsl
cltd
jle
or
dec
daa
outsb
fistps
jae
outsb
shll
and
shl
imul
add
sbb
arpl
cmpsb
das
loope
mov
ja
popa
and
cmc
jo
lods
xchg
mov
gs
push
xor
sbbb
outsb
das
xchg
xor
jge
mov
jg
mov
test
decb
out
pop
dec
out
lea
push
xchg
xor
sub
andl
adc
xchg
fcoms
clc
sub
adc
fdiv
int
adc
out
enter
sarb
fiadds
lret
js
push
insl
xchg
xchg
mov
inc
in
sbbb
mov
or
std
rcl
test
es
and
push
mov
jno
push
lock
sti
hlt
jno
sub
lods
in
push
mov
dec
mov
mov
sub
mov
add
fistpl
inc
jge
dec
sbb
push
shlb
jp
inc
jb
mov
and
jb
jmp
dec
jbe
addr16
outsl
loopne
das
int3
xchg
sbb
mov
lods
dec
inc
and
mov
jo
lock
jl
enter
mov
or
daa
jbe
int
out
mov
outsl
xchg
rorl
add
int3
idivl
scas
outsb
inc
sti
mov
out
jge
js
call
adc
aam
fildll
subb
ret
insl
sub
mov
mov
and
addb
push
mov
shll
sub
lea
add
lret
pop
loopne
into
lea
lret
es
adc
jg
mov
pop
xchg
and
cmp
outsb
dec
push
pop
insb
out
mov
adc
cmp
mull
arpl
cli
push
mov
insl
jbe
xor
repz
lock
aam
mov
push
out
pop
inc
cmp
int
lret
xchg
dec
mov
sub
xchg
mov
xchg
pop
lea
fisttps
pusha
scas
ror
adc
push
mov
inc
mov
xchg
mov
cmp
test
lret
loope
push
mov
in
fistps
icebp
push
inc
loope
lds
lret
ss
out
test
sub
or
ljmp
jae
js
bound
sahf
push
sarl
cmp
out
test
mov
push
int
decb
xchg
ljmp
xchg
lret
in
or
sub
scas
aam
cmp
loope
cmp
sub
sbb
add
in
sbb
or
imul
das
inc
cltd
das
mov
es
es
or
cwtl
cmp
rcrl
lret
xchg
stc
cmp
shr
jbe
and
or
xchg
rcl
sbb
dec
int
xor
pop
cmp
loopne
or
iret
out
xor
repz
xchg
cltd
fs
xchg
scas
andb
aas
testb
and
dec
push
jle
fimuls
mov
fsubrp
adc
mov
or
shrb
scas
inc
cmpb
js
xor
or
rolb
jne
adc
das
mov
pushf
fwait
cmp
xor
andb
cli
add
leave
or
push
out
jae
push
add
jb
into
cmp
andb
jo
jge
dec
pop
inc
adc
jnp
ja
xorl
inc
clc
out
cltd
push
dec
outsb
inc
out
bound
inc
stos
inc
jle
in
mov
and
es
mov
jns
xchg
sbb
xchg
xchg
popa
sbb
sbb
xor
push
mov
dec
setp
cli
and
push
rcrb
push
idivl
scas
jecxz
jnp
jge
inc
scas
push
lods
jp
mov
cld
scas
pop
xchg
mov
mov
test
shlb
push
sub
aam
sub
js
sti
mov
mov
sbbb
jmp
sbb
out
add
cli
sub
test
cmpl
adc
pop
mov
ds
adc
sub
xchg
jb
push
lea
pushl
sbb
shl
jbe
adc
mov
mov
xor
jge
mov
cmp
bound
clc
sub
test
cs
scas
pop
push
mov
mov
xor
sbb
and
inc
testb
inc
arpl
cmp
xlat
aam
cltd
inc
mov
xchg
imul
jae
add
push
push
mov
cli
mov
insb
add
cwtl
ficompl
popf
ds
cmp
cli
cmp
cmpsb
and
xor
test
mov
push
shrb
inc
dec
mov
mov
out
es
lods
neg
and
mov
int
in
lock
out
test
bsr
rorl
ficoms
ficoms
xor
enter
pop
and
cs
movsb
out
adc
test
outsl
push
aam
lock
push
push
xchg
icebp
rorl
sbb
mov
mov
jns
out
fistpll
vunpckhps
mov
jmp
inc
fmuls
or
mov
cmp
sbb
and
loopne
add
adc
fidivl
out
loop
loope
add
xor
xor
cmp
xor
ds
and
sbb
adc
pop
in
fsubrp
xor
xchg
in
adc
out
jne
cmpsl
lret
inc
jbe
aaa
xchg
loop
sbb
push
clc
dec
aas
and
test
or
ret
aas
cwtl
pop
movq
push
stos
icebp
lods
xor
into
mov
in
xor
sub
sub
pop
mov
mov
jp,pn
rcrl
lcall
xchg
mov
das
sarw
pop
push
gs
jno
cltd
push
cwtl
xchg
add
cmp
outsl
mov
repnz
sub
int3
sbb
addr16
outsb
outsb
fs
into
in
cmp
inc
jno
pushf
test
repnz
mov
fnsave
dec
mov
cmp
add
out
cmpb
mov
fstpl
sub
xchg
inc
pushf
leave
add
dec
mov
jb
pop
jmp
test
sahf
inc
inc
jg
pop
xor
rep
dec
pop
outsl
or
lahf
es
ret
add
pop
imul
cmp
hlt
popf
js
icebp
out
xor
cmpsl
xchg
xor
test
fstpt
mov
push
cmp
adc
xor
test
imul
icebp
icebp
stc
loope
xorl
mov
jne
jp
movsl
fstl
adc
and
stos
lea
outsb
stos
sub
pop
jge
repnz
mov
or
les
dec
sub
dec
pushf
lods
cltd
xor
cmp
pop
push
in
cwtl
shrl
mov
xchg
imul
xchg
pop
pop
dec
cli
ss
shrl
or
or
push
xor
fisttps
pushf
pop
and
mov
subb
popf
mov
push
or
jne
mov
fwait
sahf
sbb
add
dec
jp
pop
in
imul
lds
sbb
lret
mov
cmpsb
or
jnp
es
mov
adc
sahf
xchg
jbe
pushf
mov
test
mov
jecxz
daa
push
test
mov
xor
aaa
or
sbb
out
cmp
mov
adc
dec
mov
dec
xchg
jge
fmul
arpl
inc
sti
enter
xor
mov
mov
stc
sbb
in
das
push
mov
rcll
push
mov
test
pop
stc
leave
mov
pop
test
xchg
cltd
dec
lods
insb
loope
add
jb
lds
mov
std
dec
pandn
out
arpl
sbb
lahf
pop
mov
xor
je
push
mov
hlt
lea
std
test
clc
leave
push
outsl
loope
das
mov
das
stos
push
cwtl
and
js
push
mov
aaa
dec
mov
ret
test
sub
xlat
jmp
cmovno
cmpsb
or
pop
mov
lods
cmp
mov
repnz
inc
shl
in
insl
mov
xchg
test
xor
pop
mov
add
add
cwtl
mov
sub
loopne
loopne
xchg
xchg
jbe
push
fmuls
sarb
aad
sbb
aaa
adc
fdivl
arpl
lret
fldcw
in
sbb
imul
loope
inc
sbb
push
popf
mov
cmp
test
outsl
inc
imul
cmpsl
xchg
xor
sub
das
lret
sub
stos
push
push
sbb
and
out
mov
sbb
cwtl
mov
outsb
sub
cmp
and
outsl
scas
call
movsl
sbbb
cmp
pushf
cld
and
jge
mov
or
adc
xor
loop
xor
enter
push
pop
movsl
add
add
pop
xor
cs
lock
push
mov
mov
sbb
ret
xchg
pop
and
jmp
jle
mov
mov
sbb
jb
outsl
xchg
dec
xor
xor
fsts
test
mov
push
imul
cmc
gs
mov
xchg
call
adc
mov
pop
dec
and
mov
test
ja
and
sbb
call
or
cmpsl
push
sbb
cmp
push
mov
int3
test
movsl
push
outsb
repnz
movsb
arpl
and
cmc
nop
leave
push
mov
push
adc
popa
cwtl
mov
and
pop
mov
jnp
push
xor
aaa
pop
mov
je
lahf
xchg
push
mov
cmpl
aaa
sub
std
add
bound
scas
leave
out
lahf
push
mov
cs
movsl
dec
cmpsl
subl
rorl
mov
fwait
sub
hlt
mov
aad
pop
mov
cmp
int
push
mov
nop
es
lea
test
imul
push
insb
fdivr
adc
loope
call
data16
arpl
movsb
test
xchg
sbb
mov
or
pop
jno
rcr
mov
pusha
inc
nop
fstpl
xor
sbb
add
pop
dec
sbb
push
add
sbb
lods
shr
xor
push
inc
out
push
outsb
jp
daa
imul
pop
add
sub
xor
pushl
dec
loope
push
xor
mov
ljmp
jne
xchg
popf
xchg
out
dec
xchg
and
test
xor
or
mov
testb
bound
pop
push
pop
xlat
adc
fwait
add
pop
insl
mov
rolb
push
mov
cmp
idivl
out
mov
jl
jmp
push
in
jbe
lods
cmp
leave
loop
xchg
std
out
std
outsb
sarb
adc
sti
out
or
or
inc
push
xchg
adc
mov
dec
lahf
rcll
dec
sti
pop
add
in
aaa
das
adc
js
dec
bnd
or
sub
or
int
loopne
jae
jbe
js
mov
stos
xor
popa
cmc
neg
push
call
outsl
mov
mov
mov
mov
jb
pop
imul
int3
pop
xor
xor
mov
test
insl
sbb
and
push
jecxz
mov
call
push
dec
jecxz
bnd
sar
mov
sub
or
insb
outsb
lcall
pop
sub
aam
push
push
clc
nop
fsts
add
pop
mov
rolb
int
and
add
cmp
dec
adc
scas
loopne
es
lret
xor
jmp
orb
add
pusha
jne
sbb
ret
cmpsl
mov
and
sub
add
mov
inc
negl
cmp
fsubrl
lcall
jle
xor
mov
sbb
jmp
loop
repnz
mov
jp
adc
xchg
inc
pop
adc
inc
mov
insl
inc
out
test
inc
iret
icebp
sbb
sub
repz
add
xor
xor
cltd
pop
test
and
mov
pop
pop
jl
dec
xchg
outsl
gs
in
in
insb
mov
mov
leave
or
les
stc
fistps
and
or
xor
filds
mov
ficoms
cli
mov
jg
mov
sbb
add
lret
loopne
mov
pop
mov
jl
ja
jb
mov
mov
jno
lods
insb
jo
mov
out
or
adc
mov
pop
icebp
xor
lds
mov
mov
xchg
pop
cmp
ss
test
sub
lock
cmc
adc
push
les
xchg
outsl
out
mov
push
dec
movsl
adc
push
outsl
push
mov
and
jp
sti
std
dec
mov
stos
xor
mov
fmull
cltd
leave
adc
dec
xchg
es
fidivs
push
lahf
imulb
push
ja
jge
aam
fimull
mov
mov
mov
fcomp
test
mov
add
push
mov
dec
inc
bound
insl
popa
mov
pop
jl
push
leave
imul
sub
gs
xorb
pop
mov
xchg
andl
movsl
pop
xchg
sub
outsl
sub
repnz
jns
sub
rclb
call
mov
pop
cmpsl
inc
xor
cs
pop
push
xor
out
mov
sub
repnz
icebp
repz
daa
push
test
push
mov
cwtl
enter
inc
pop
aas
dec
addb
icebp
sub
mov
movsb
adc
fcompl
xor
or
cwtl
pop
or
mov
cwtl
mov
sub
push
pop
mov
or
xchg
out
outsb
add
pop
js
cmp
call
mov
jnp
dec
jo
loope
mov
pextrw
lea
addb
inc
add
xchg
in
mov
bound
mov
fistps
mov
jmp
es
sub
leave
sbb
lock
repz
xor
loope
jg
test
and
adc
pushf
hlt
std
dec
adcl
aad
test
lcall
sub
sbb
scas
out
scas
add
sbb
and
aad
mov
jp
sub
enter
xchg
loop
sub
jecxz
mov
movb
fbld
cmpsl
out
add
rorl
incl
add
mov
or
mov
movsb
xor
push
mov
sbb
mov
jp
cmc
mov
fstps
ja
mov
in
dec
xor
adc
xchg
inc
mov
add
xchg
fcoml
shlb
rorb
imul
xchg
mov
push
aad
orl
stc
adcb
mov
popa
aad
inc
mov
dec
adc
fcoml
int3
push
rorb
out
xchg
mov
adc
xor
jge
adc
mov
inc
int
in
loopw
and
mov
push
dec
cmp
mov
inc
rcl
fcoml
movsl
mov
hlt
repz
test
mov
add
fildll
aam
movsb
push
test
push
fmull
pop
les
pop
xchg
inc
cli
and
fiaddl
insl
sbb
lods
or
lods
nop
mov
pop
mov
sub
mov
sub
sti
inc
cmpsl
dec
shlb
cmp
jns
ficompl
sub
xchg
adcb
sub
mov
dec
dec
mov
rolb
jnp
dec
lahf
add
ljmp
outsl
add
icebp
mov
js
dec
pop
mov
push
test
add
adc
lret
cmp
loope
shll
inc
mov
or
mov
cltd
and
adc
insb
or
ss
mov
mov
sub
js
adc
sti
pop
dec
aam
inc
fistpll
insb
jmp
xchg
aas
jnp
popf
outsb
mov
push
pop
cmp
jns
push
adc
testb
push
push
cmp
loop
inc
push
push
mov
pop
pusha
inc
mov
rorb
xor
mov
pop
or
aaa
andl
out
push
push
lret
fsqrt
push
cmp
outsl
int
adc
pop
fcompl
cmp
cmp
scas
pop
jp
je
inc
fsub
lcall
and
je
add
and
jmp
das
insb
loope
push
ja
loopne
movsb
jecxz
xorb
cmp
push
jns
jle
gs
mov
jecxz
inc
mov
shl
stos
mov
sti
push
sarb
lea
fstpl
xchg
stos
pop
shl
ja
stc
mov
jp
sub
mov
test
fidivs
jbe
cmc
in
les
mov
pop
xor
cmc
or
inc
cmp
loope
jbe
and
push
sbb
sub
fnop
pop
aaa
push
insb
lahf
ja
xchg
test
sarl
inc
int
clc
mov
aas
shl
adc
shlb
enter
adc
ret
and
pop
inc
xor
ds
adc
in
and
jmp
lret
xchg
lock
push
inc
inc
es
rolb
or
pop
jg
jb
test
pop
mov
test
in
pop
dec
jno
cmp
cmp
add
jmp
cmpsl
xchg
fdivrs
notl
jo
fsubrs
inc
scas
rcrl
movsb
xchg
xchg
adc
jne
sub
and
push
int3
xor
dec
mov
xchg
jnp
xchg
cmpsl
outsl
sbb
fld
add
imul
jns
pop
jno
insb
sub
xor
adc
test
insl
xchg
xchg
out
xchg
shll
loope
jge
mov
stos
lcall
sbb
mov
jp
int3
lea
mov
lahf
xchg
push
sub
popa
and
scas
cmp
add
loop
jnp
sbb
insb
push
out
std
add
adc
mov
cmc
sub
cmpsl
out
or
or
test
jmp
jmp
pop
fs
scas
push
sub
rolb
adc
sbb
xchg
mov
fildl
pop
push
mov
xor
fildll
iret
add
fiadds
scas
dec
jbe
cmc
adc
mov
add
test
enter
lret
imul
js
mov
xor
je
or
imul
sub
pop
add
mov
adc
loopnew
call
pusha
js
adc
jmp
xchg
xor
testb
ss
aas
scas
mov
outsb
inc
out
add
push
push
sub
repnz
dec
sub
out
mulb
or
mov
test
ljmp
lret
push
repnz
pusha
dec
cmp
sbb
mov
inc
dec
div
mov
cmp
aad
inc
es
mov
and
test
add
push
xlat
sbb
pop
aas
dec
inc
adc
scas
mov
hlt
dec
jmp
test
pop
sti
lock
dec
jae
cwtl
sub
jmp
sbb
loopne
ret
repnz
xchg
push
enter
push
add
ret
mov
loopne
or
cmpsl
push
push
iret
testl
mov
xor
psubq
daa
jle
xchg
dec
leave
xchg
fdivs
cmp
mov
in
mov
test
in
sub
dec
mov
pop
sbb
mov
fcompl
ret
mov
push
cmpsb
xor
add
fdivr
clc
xlat
push
fdivp
incl
jo
mov
fistl
out
shl
push
je
mov
or
pop
or
push
jns
fidivrs
mov
jl
mov
jnp
cmp
sti
jns
sub
or
mov
cwtl
test
adc
sbb
es
push
movsb
cmp
hlt
js
cmp
fs
fs
push
xor
leave
sahf
cmc
mov
in
push
push
out
lods
scas
jg
jmp
inc
cld
insb
out
subl
xor
xchg
sbb
ret
cmpsl
fbstp
sar
jae
mov
pop
mov
stc
jl
loop
movsb
test
jnp
scas
js,pn
jbe
cmp
ja
lods
test
inc
aad
mov
aad
out
cmp
sub
aam
in
adc
fisttps
xlat
mov
mov
mov
push
lahf
sbb
dec
ret
push
sarl
xchg
sahf
repnz
mov
sbb
mov
rolb
and
dec
push
dec
jo
fcoms
es
and
fs
sbb
test
dec
out
in
addr16
loopne
xor
aad
mov
mov
notb
xor
rcr
xor
fiadds
pushf
fwait
adc
push
sub
jecxz
lahf
cmc
mov
push
dec
add
icebp
nop
push
sub
sub
andb
sbb
rorb
push
data16
inc
ret
rcr
lea
xor
or
lods
cs
jle
scas
xor
xchg
arpl
mov
adc
adc
or
sub
and
leave
mov
js
sbb
divl
insb
jne
fwait
sub
mov
in
sbb
test
dec
out
aas
insl
jmp
mov
fs
jp
out
dec
add
cwtl
nop
pop
bound
ljmp
rorl
mov
pop
mov
in
les
mov
cmp
mov
into
stos
stos
push
pop
std
push
mov
jmp
sub
sbb
mov
and
xchg
and
stos
adc
jns
out
outsb
push
sub
test
sub
orl
movsb
push
scas
push
or
xchg
jl
lahf
jecxz
push
test
je
imul
mov
lds
push
xchg
push
js
fsub
enter
mov
or
aas
shlb
sub
in
xor
arpl
mull
sub
loop
aaa
jo
lret
push
mov
pop
icebp
dec
cmpsb
in
int3
hlt
lods
js
add
sbb
xchg
adc
int
mov
data16
lcall
test
xchg
pop
stc
inc
jne
shll
or
mov
shlb
cmp
in
cltd
outsl
fildll
mov
push
in
push
test
inc
jns
cmp
adc
mov
das
clc
xchg
cmpsb
mov
xor
stc
in
mov
nop
fbld
lcall
test
out
pushf
filds
lret
rclb
mov
xchg
loopne
cmpl
inc
sbb
vmread
jae
fists
out
sbb
icebp
test
xlat
call
and
sbb
push
cmc
sub
sarb
jmp
adc
xor
cmp
lods
in
xchg
push
xor
inc
dec
and
xchg
mov
call
incl
repz
dec
mov
push
int
mov
sub
out
jp
in
cmp
cld
leave
lret
jp
xor
sub
cld
stc
sub
sbb
xor
sbbb
leave
dec
inc
xchg
mov
sbb
push
out
sbb
xchg
inc
and
rolb
test
ffree
lcall
pusha
xor
out
iret
pop
idiv
cmp
mov
xor
hlt
add
jb
push
stc
jge
ret
int3
sbb
mov
ds
jge
mov
ja
shrb
aad
mov
data16
les
cmpsl
iret
mov
mov
and
ret
jo
fstps
aaa
addb
shll
fs
divb
shl
jge
or
fadds
insb
insl
sbb
stos
mov
insb
jge
inc
pop
cli
mov
movsb
sbb
xlat
jmp
cmp
movb
adc
dec
cs
dec
loopne
stos
fisttpl
movsb
ljmp
mov
lret
adc
dec
sbb
sub
jo
pop
nop
mov
sahf
push
out
cmp
mov
and
orb
fisubrs
inc
fidivs
and
lods
cld
add
jmp
jo
xchg
mov
inc
sbb
test
popf
and
enter
aas
pop
fwait
out
jb
shl
mov
sbb
xor
stc
dec
add
push
mov
push
rcll
ja
fidivs
aad
mov
lahf
divb
out
sbb
xor
sbb
push
aam
jno
loop
je
hlt
clc
inc
push
jle
lea
sbb
lods
add
iret
jle
test
inc
jmp
push
mov
dec
inc
inc
cltd
or
sarl
push
aaa
call
out
notb
lea
out
je
pusha
xchg
ja
pop
lock
shl
mov
sub
mov
shll
lret
inc
mov
cmp
lods
idivl
inc
pop
out
pop
int3
icebp
xor
sarb
push
xchg
lea
jno
inc
insl
mov
pop
or
mov
call
std
jbe
push
cmp
std
inc
mov
xor
sbb
pop
add
mov
inc
outsb
adc
fwait
in
cmp
push
leave
jp
andl
loopne
cltd
lods
fistl
xor
push
outsl
push
shlb
xlat
inc
xchg
pop
lods
pop
iret
xchg
xchg
cmp
pop
pop
pop
movsl
imul
dec
mov
inc
xor
mov
icebp
sbb
cmp
inc
jne
out
jmp
outsl
int
jne
inc
rcr
mov
ja
sub
cltd
cmp
movsl
insb
inc
test
add
jo
cs
repnz
fdivrl
add
and
insb
pop
add
andl
test
lock
lahf
enter
mov
pushf
scas
xor
jb
sub
outsl
sahf
dec
adc
icebp
in
adc
mov
stos
push
lods
jp
dec
arpl
mov
sub
push
add
ret
out
movzbl
pusha
jo
sbb
bound
dec
lock
ret
mov
jae
cld
lods
rcr
pop
add
sub
aam
pop
popf
push
repz
fimuls
sub
mov
pusha
mov
sub
pop
int3
jl
fadds
je
fistpll
mov
out
mov
mov
push
rcrl
lret
or
lcall
dec
sub
sub
lods
int
cmp
popa
mov
dec
stos
xor
inc
daa
xchg
push
cmp
jnp
dec
rolb
insl
cmc
sub
frstor
push
jno
sbb
test
mov
or
jno
xchg
jl
xchg
pop
ljmp
mov
ret
cmp
pop
loopne
addr16
sub
and
js
out
das
push
test
sub
sub
add
cmpsl
lods
jnp
sub
cmp
sub
notl
lock
dec
dec
loope
out
cli
xchg
mov
es
stos
dec
test
icebp
sbb
or
sub
jbe
cmp
sub
mov
xor
out
jnp
roll
js
aad
inc
mov
cli
fisttps
push
lret
jmp
sbb
push
and
lock
out
mov
add
lret
xor
mov
sbb
jns
movsb
sbb
aad
sbb
mov
fidivrs
pop
sbb
repnz
adc
push
cmp
xchg
stos
int3
sub
xchg
leave
dec
mov
lahf
push
test
xchg
sub
cmp
mov
roll
add
push
lret
mov
loopne
ret
cmp
repz
mov
test
gs
ds
mov
jns
popf
xor
loope
enter
int3
int3
dec
das
dec
cmp
cmp
aaa
jno
les
dec
and
xchg
dec
add
push
cltd
sbb
enter
or
imul
adc
dec
xor
loope
inc
jns
inc
mov
adc
repz
dec
pop
addl
iret
outsb
jl
pop
divb
dec
ja
mov
scas
xor
in
mov
loope
or
pusha
cmp
xchg
mov
call
inc
popa
push
pop
jne
stc
test
adc
push
xor
jecxz
jecxz
dec
sti
out
pop
pop
mov
cld
push
lahf
jns
fucom
mov
mov
jle
inc
test
test
sub
jbe
dec
fimull
inc
out
sbb
pop
xchg
or
xor
mov
xchg
mov
ret
std
xchg
lahf
sub
or
out
mov
shlb
shrl
inc
cmp
in
adc
jl
insb
mov
adc
jmp
cmc
inc
mov
test
cld
sbb
paddd
stos
and
movl
push
mov
mov
sub
dec
pop
call
ljmp
sbb
lret
lahf
iret
in
push
cmp
ljmp
add
test
push
mov
ss
pop
xchg
jbe
shl
lods
dec
int
addr16
scas
frstor
push
test
sbb
gs
cmc
sahf
adc
mov
adc
cmpsb
cmp
xchg
push
loop
push
mov
sbb
xchg
dec
inc
inc
xchg
mov
jbe
pop
mov
fldenv
push
icebp
filds
rol
fsubrl
gs
aas
popa
and
inc
adc
aas
push
fstl
inc
loope
rolb
mov
jne
mull
add
lods
adc
testb
js
mov
out
out
add
mov
in
push
push
push
jae
adc
in
push
mov
js
dec
mov
cmpsb
sbbb
dec
lods
in
js
nop
dec
push
loop
adc
mov
inc
leave
xchg
cmpl
inc
repz
je
inc
cmp
inc
fistpll
jne
fnstsw
out
xchg
or
es
push
jp
scas
ror
aas
clc
jne
ret
ffreep
int
rorl
int
dec
lret
mov
jge
sbb
and
add
dec
insl
pop
std
pop
xchg
push
pop
in
das
loop
sub
add
pushf
push
imul
mov
pop
add
outsb
dec
jo
push
xchg
lcall
push
insb
hlt
bswap
mov
add
movsb
in
jmp
adc
pusha
mov
add
xor
sahf
aam
jns
push
xlat
inc
lock
jge
adc
dec
lods
test
fidivrs
pop
push
mov
jo
pop
es
cwtl
clc
cltd
mov
lock
pop
cld
aad
mov
mov
inc
leave
mov
leave
outsb
add
mov
imul
dec
and
enter
into
ret
sub
sahf
leave
add
mov
and
fs
nop
addr16
clc
sub
xlat
add
xor
jle
cmp
push
xchg
push
ror
popa
sub
dec
pushf
mov
push
dec
xchg
fiadds
sbb
pop
jge
lcall
jae
push
push
adc
adc
jno
lretw
fcos
pop
xchg
mov
push
jae
xor
xor
cmp
cld
data16
adc
push
cmpsb
add
pusha
int3
stos
out
pop
mov
sub
fsubrl
je
mov
mov
std
push
out
movsb
adc
pop
xor
test
dec
add
add
jbe
sbb
jbe
jmp
lock
mov
cld
xchg
push
lods
xor
iret
pop
popf
loope
lret
stos
and
cmp
sti
jbe
repnz
lods
xchg
mov
sub
stos
pop
xchg
mov
loope
sub
in
ret
add
cs
aam
xor
xchg
cmpsb
xchg
sub
cld
test
push
enter
in
fsubrl
add
loope
out
test
es
sti
decl
into
xchg
and
xchg
inc
sub
and
lods
pop
movsl
mov
inc
jl
xchg
mov
cld
ret
pop
add
fldt
inc
lds
inc
xor
pop
out
mov
mov
sub
sub
out
into
mov
dec
push
call
xchg
ja
mov
sub
or
push
addr16
mov
cmp
lahf
sub
lahf
shrb
jl
int
jmp
stos
mov
and
pop
inc
ror
mov
mov
mov
xor
jo
iret
and
sub
enter
pop
jl
and
and
dec
push
jo
shll
jmp
push
dec
push
or
pop
movsb
mov
xlat
in
sbb
mov
test
mov
cmc
mov
movnti
mov
sub
inc
dec
loope
das
xor
es
add
dec
fdivl
fsubs
divl
ret
sahf
mov
ret
popf
loop
ss
jge
inc
inc
or
hlt
ss
jnp
aam
jbe
test
roll
je
enter
pushf
xor
faddp
pop
ljmp
enter
cwtl
cmp
inc
jmp
jge,pn
xchg
push
mov
jg
adcb
mov
shrl
test
lsl
in
xchg
lods
in
push
sbb
jmp
mov
cld
notb
sbb
add
in
push
cmpsb
out
or
jae
mov
fnsave
mov
xchg
push
mov
or
mov
add
jbe
jmp
insl
sbb
lds
lahf
imul
and
adc
insb
stos
stos
fmul
enter
hlt
enter
rcr
sbb
outsb
add
cmp
cmp
repz
call
or
repz
in
push
adc
add
push
sbb
push
call
into
ss
pop
mov
stos
lcall
pushf
out
sbb
and
lret
cld
aad
lcall
mov
mov
fwait
imul
xlat
mov
aad
aam
mov
popa
xchg
cmp
out
push
loopne
xor
mov
cmp
mov
mov
je
repnz
imul
out
add
ss
sub
fimuls
cltd
inc
sub
sbb
mov
insl
sbb
lods
or
adc
mov
adc
cmpsl
nop
or
adc
je
enter
mov
cltd
pop
gs
inc
dec
shlb
ja
push
sarb
inc
shll
aam
dec
lods
sbb
xchg
xchg
mov
sbb
and
fcmovbe
adc
mov
push
sub
cmp
push
jns
xor
jmp
movsb
sub
pop
xchg
fldenv
movsl
mov
cmc
mov
int3
imul
loop
jge
lahf
jl
and
mov
push
cmp
mov
inc
js
push
adc
xor
xchg
pop
lcall
leave
jno
and
xor
xor
cs
fnsave
shrl
or
sbb
mov
lods
mov
test
cs
cli
loop
adc
lret
out
and
sub
insb
push
icebp
jbe
std
in
push
mov
ss
dec
hlt
lea
std
cs
cmp
mov
sbb
cmp
dec
adc
dec
push
scas
or
fwait
in
jle
insb
mov
insb
sub
dec
push
mov
dec
cmp
aaa
test
ret
mov
add
or
clc
pop
insb
jle
cmp
dec
mov
inc
xor
xor
ljmp
insl
sarl
pop
inc
cs
mov
pop
outsl
std
pop
xor
sahf
js
fistpll
sar
or
aam
les
mov
or
stos
jecxz
inc
cmpsl
xor
stos
adc
mov
dec
sbbl
xor
nop
mov
ljmp
inc
cmp
push
mov
cs
in
imul
mov
movsb
imul
ret
iret
cltd
popf
jp
iret
lock
fstpt
pop
int3
mov
fcmovnu
enter
or
test
insb
and
mov
lods
mov
and
mov
jne
insl
mov
xorb
jne
cmp
dec
adc
or
add
inc
out
loope
je
daa
sbb
mov
mov
shrb
jo
cmp
ljmp
add
xor
fcomp
xlat
cmpb
xchg
sbb
jne
inc
pop
popf
pop
repnz
scas
jno
cmp
les
insb
ret
mov
loopne
push
pushf
push
pop
xlat
and
or
das
cs
xor
xchg
jl
cmp
and
mov
or
sbb
jl
dec
outsl
push
mov
xchg
or
ret
loopne
jge
mov
jg
aas
fwait
inc
jae
ret
leave
mov
jns
or
sbb
cld
inc
int3
in
cmp
js
sarb
cltd
mov
in
test
mov
andb
mov
adc
adc
fneni(8087
ja
jp
jmp
mov
xchg
push
mov
dec
lret
and
movsb
jbe
xchg
adc
or
ret
inc
pop
out
sbb
shll
xchg
and
xor
xchg
sub
movsb
pop
xchg
shrb
jmp
mov
add
add
jns
jg
adc
dec
fidivrs
fcmovnbe
lods
add
jle
movsl
jmp
and
or
clc
sahf
xor
cmp
cmp
cwtl
popl
mov
faddl
sub
jb
mov
ljmp
aas
inc
sbb
pop
notb
fcmovb
in
lds
loop
insl
add
vhaddpd
pop
int
sti
inc
movsb
or
cmp
ja
fucompp
enter
es
ret
aaa
or
fildl
push
fiadds
dec
sub
and
das
push
xabort
scas
inc
stos
or
test
cmp
cmp
ss
jecxz
lahf
decl
dec
jmp
dec
pop
icebp
dec
ret
cwtl
gs
loopne
cltd
sub
push
fs
jmp
movb
xor
xor
inc
and
hlt
lahf
inc
inc
add
inc
jno
lea
pop
jns
dec
hlt
sub
icebp
mov
xor
sahf
fsts
add
pop
imul
call
out
xchg
push
adc
das
ss
stos
cld
in
push
lea
sti
pop
movsl
mov
add
testl
cmc
push
add
and
ljmp
outsb
adc
mov
shlb
or
pop
addr16
add
cmpsl
movsb
mov
xor
and
cltd
push
bound
scas
call
scas
and
mov
jmp
mov
push
mov
adcb
js
pop
push
xor
pop
mov
and
cmp
into
jle
hlt
dec
test
xor
test
pushf
outsb
fcomps
pop
or
aam
lahf
leave
dec
jno
push
mov
and
push
mov
inc
sbb
stos
rcrb
cmp
outsb
jae
mov
jne
ret
outsb
ds
inc
loopne
rcrl
mov
clc
das
sub
out
popa
clc
addr16
xlat
cmp
sarb
add
xchg
pop
sbb
sbb
xor
sub
cmp
mov
cmpsb
int
adcl
sarl
popf
push
lcall
cwtl
add
insl
sub
stos
lds
and
lret
adc
adcw
arpl
mov
xchg
mov
and
roll
push
sahf
les
inc
cli
jg
mov
dec
sub
decb
dec
sub
xchg
push
xor
orb
mov
enter
inc
push
fwait
gs
popa
inc
into
xor
fidivs
leave
test
rol
enter
jno
or
mov
out
popa
jne
aaa
mov
testl
sub
cmpsb
ljmp
pop
test
mov
loopne
pusha
in
adc
test
and
mov
adcl
mov
jo
push
mov
negb
xchg
or
dec
sahf
and
lcall
jo
adc
add
repz
js
push
popf
jge
loope
or
mov
and
das
mov
inc
test
aaa
fsubl
dec
nop
push
xor
cmc
pop
iret
les
xchg
int3
das
in
repz
ja
pop
sbb
out
sub
imul
push
test
lahf
clc
hlt
scas
mov
imul
jae
lahf
adc
xor
dec
stc
imulb
in
push
xor
mov
imul
jle
sub
adc
jne
clc
mov
jnp
pop
imul
sbb
sub
adc
loope
adc
outsl
in
push
popf
leave
mov
mov
rolb
mov
xor
and
stc
jge
lret
push
xlat
mov
mov
sub
cltd
fists
push
mov
dec
jg,pt
cmp
inc
loopne
pushf
cmp
add
sub
ret
or
and
and
sbb
dec
cmp
hlt
stc
sbb
test
ficompl
pop
pop
inc
mov
sub
ret
jle
int3
out
mov
or
dec
pand
pop
pop
xchg
ret
push
sub
mov
adc
in
lcall
pop
mov
loop
outsb
lock
fldenv
adc
inc
loopne
jecxz
cmc
ljmp
sbb
shl
mov
inc
cmp
fsubrl
out
jg
daa
test
pop
jl
or
cmc
push
cmp
jo
push
and
dec
jmp
daa
push
or
std
sub
sbb
sub
insb
jb
out
inc
rolb
shll
mov
mov
cwtl
mov
fmull
sub
ds
xor
pop
sbb
clc
inc
test
pop
cmp
aad
mov
xlat
jbe
mov
push
cmpsb
xchg
add
push
test
movsb
rcll
lds
pop
push
nop
out
add
int3
int3
cmpsb
pop
imul
rcrl
insl
xchg
loopne
xor
or
inc
scas
jge
arpl
jae
or
pop
mov
addr16
test
cmp
aas
xlat
fsubrp
fcomip
inc
data16
into
leave
mov
nop
mov
clc
jmp
mov
pop
push
std
mov
xchg
int3
subl
mov
scas
cmp
les
inc
jg
xor
jnp
test
icebp
mov
add
in
daa
push
cs
loopne
out
sarb
sub
xchg
insl
lcall
push
dec
push
mov
sub
cli
addr16
mov
je
adc
movsl
fisubl
sub
cli
fldenv
jae
and
add
mov
pop
into
imul
pop
das
xor
scas
xchg
cmp
mov
imul
pop
jle
fnstenv
fisubs
clc
jecxz
movsl
mov
push
hlt
mov
out
cmc
cmp
adc
dec
adc
rclb
push
sub
sub
mov
aaa
test
push
mov
push
roll
jno
aam
push
fadd
jo
pop
push
outsb
cmp
adc
push
decl
lahf
stc
lea
dec
inc
lds
out
xchg
mov
sub
mov
mov
pop
fdivs
insl
dec
xchg
pop
pop
xlat
jp
insb
out
mov
fidivrl
outsb
add
add
xchg
mov
push
dec
les
imulb
push
mov
push
or
subb
or
loop
xor
shlb
lock
add
mov
pushf
fucomp
or
xor
cmp
adc
outsb
sub
pushf
adc
mov
in
fwait
inc
into
dec
mov
outsb
xchg
cli
fsubrs
sbb
fisubrl
xor
fdivrl
jmp
ja
ret
stos
ja
push
scas
adc
inc
mov
pop
pop
ljmp
divb
push
aas
out
xchg
cmpsl
add
dec
inc
mov
mov
shll
xchg
daa
sbb
outsl
pop
xor
fsubrl
inc
movsb
lds
xor
xor
clc
mov
inc
das
push
rol
push
inc
cmp
dec
mov
ja
je
ja
out
shlb
xlat
pop
icebp
loop
and
push
cmp
ficompl
ja
mov
sbb
or
inc
nop
inc
xchg
jno
inc
jno
or
mov
mov
dec
fdivl
ja
xor
imul
iret
pushf
inc
ss
imul
test
add
lahf
lcall
push
lret
inc
int
fisttps
fstl
jnp
lods
or
jo
xlat
notb
gs
xor
and
data16
pusha
mov
and
sbb
mov
shrb
stos
aas
pop
jne
insl
xor
stc
mov
cmp
xor
inc
arpl
ljmp
and
xchg
sub
mull
jmp
mov
jns
push
jl
sbb
mov
xor
aas
addl
arpl
fld
xchg
cld
in
xchg
ljmp
pop
leave
fisttps
jae
scas
inc
adc
das
mov
add
scas
fsubr
jns
out
push
push
dec
push
loopne
dec
rcrb
sbb
hlt
mov
lods
mov
pop
xchg
sub
and
push
out
testl
mov
adc
jg
push
ljmp
loope
pop
outsl
jl
aaa
pop
push
imul
pop
push
mov
out
arpl
sbbb
lea
dec
hlt
into
ret
dec
mov
stos
sub
add
cs
hlt
push
sbb
cmpsl
adc
jmp
fldenv
xor
pop
or
arpl
lret
mov
punpcklwd
aad
ret
stc
aam
bound
jp
inc
enter
repz
sbb
jo
in
cltd
pop
jne
push
and
std
dec
pushf
xlat
int3
push
fwait
push
test
push
mov
mov
sbb
pop
and
xor
adc
jp
jmp
xchg
jl
xor
push
push
out
je
psubusw
fsubrs
mov
mov
adc
ja
jno
dec
out
lods
rcl
scas
aaa
bound
pusha
cli
lret
sbb
cmpsl
popa
fsubrl
fistpll
dec
andl
xchg
out
in
adc
mov
test
sahf
scas
rcrl
out
sbb
mov
test
je
jge
cmpsl
std
dec
lds
push
lret
or
or
mov
push
data16
and
inc
repz
sub
mov
inc
imul
push
mov
mov
mov
sbb
aas
in
fsubs
shlb
mov
les
aas
lds
popa
sbb
test
lret
xchg
sub
shll
sub
out
mov
clc
aas
xchg
rol
mov
lcall
pop
movsl
sub
cld
mov
leave
sbb
rclb
sub
lods
shlb
jo
ljmp
and
push
push
lock
inc
sub
xchg
inc
dec
pop
mov
sbb
sahf
sbb
mov
mov
cmp
jecxz
es
adc
and
inc
xor
frstor
mov
rcrb
lea
aaa
push
jb
mov
cmp
adc
sbb
ret
cld
xchg
xlat
mov
jbe
jnp
mov
push
xchg
clc
frndint
out
faddp
inc
fdivrl
das
je
std
mov
inc
jg
xor
enter
mov
add
mov
outsl
dec
mov
ds
notb
pop
fs
stos
lds
inc
scas
mov
push
repnz
test
aas
add
mov
mov
mov
xchg
adc
jp
xchg
sub
xor
loop
clc
das
stos
jbe
push
insl
enter
push
and
xchg
in
scas
sbb
jmp
jge
cld
dec
test
mov
sbb
into
lret
xor
in
lods
mov
sbb
mov
jae
mov
dec
xchg
out
jl
lahf
inc
and
lods
loopne
fidivl
pop
mov
cmp
push
cmc
std
jnp
mov
dec
push
sti
jg
adc
push
in
test
adc
out
mov
jl
mov
push
ret
gs
loop
jo
cmp
cwtl
daa
or
test
pop
jle
mov
outsl
stos
dec
fld
dec
movsl
sbb
xchg
bswap
shrl
mov
jmp
orl
mov
rorl
jns
out
out
mov
and
test
arpl
mov
mov
out
ret
mov
jge
lahf
cmpsl
lods
mov
add
loopne
xchg
push
and
sbb
aad
mov
cmc
bound
mov
xchg
lahf
out
in
cmp
cmp
mov
xchg
int3
movl
icebp
lods
push
add
inc
push
mov
mov
inc
das
loop
inc
or
jg
ficomps
cmp
sbb
jbe
es
sbb
xor
repnz
clc
inc
pop
cli
fisubl
shl
mov
out
push
sbb
mov
js
jno
mov
xor
pop
or
adc
mov
rcll
cmp
pop
or
pushf
fldl
mov
sti
ficomps
adc
jl
sub
nop
sbb
or
jmp
mov
inc
xchg
out
add
xchg
pop
xor
mov
mov
lret
xlat
aad
push
inc
fisubrs
jmp
pop
enter
pop
cmp
sub
inc
xor
daa
outsl
push
outsl
hlt
sbb
insb
mov
mov
cmpsb
xor
push
loopne
pushf
pop
mov
mov
mov
popf
icebp
dec
fcmove
mov
into
jle
cmp
mov
sub
fs
lcall
test
out
cli
jmp
outsl
adc
lock
xchg
incb
adc
and
jns
mov
into
out
dec
int3
repz
xchg
vphsubbw
push
dec
jg
adc
rolb
loope
xchg
lds
sbb
or
sbb
cmpsb
out
in
imulb
rorl
mov
lods
popf
test
push
add
push
fcoms
sahf
push
or
movsb
mov
xchg
arpl
jno
clc
out
aam
push
jb
nop
test
dec
mov
dec
jb
insb
xor
in
xchg
pop
or
scas
mov
les
jge
repnz
cmp
es
pop
xchg
out
into
add
lods
imul
ret
rcrb
rclb
fbstp
jns
sub
into
jmp
sbb
xchg
xchg
imul
add
out
pop
cwtl
jle
lods
mov
std
nop
mov
je
dec
inc
and
jle
stos
and
aam
outsb
push
stos
jnp
mov
frstor
pop
hlt
xor
out
out
push
pop
mov
or
hlt
xchg
shrb
jo
insl
repz
add
inc
xor
inc
mov
mov
mov
addr16
add
stos
adc
inc
sbb
xchg
and
mov
nop
out
inc
pop
call
pop
mov
inc
sub
fs
mov
cmpl
push
xor
popa
mov
dec
xchg
and
fldt
ja
mov
sub
xchg
mov
in
fcmovb
inc
xlat
xor
mov
lret
hlt
imul
out
push
sbb
mov
adc
sbb
xor
cmp
test
xor
add
adc
xor
mov
cmp
test
iret
cs
xchg
mov
imul
fdivrl
cli
jae
fs
addr16
enter
out
cwtl
mov
xchg
mov
ret
dec
daa
in
rorb
xchg
mov
sbb
sub
push
pop
sub
outsb
ds
stos
popa
clc
pop
cli
loop
stc
movsl
js
cld
imul
jle
push
int
cmp
xchg
scas
push
into
mov
stos
pop
cmp
mov
repnz
popf
fiaddl
into
cmp
mov
mov
test
cmc
inc
lods
xor
mov
cwtl
adc
cmpsl
ds
rorl
push
iret
dec
sarb
loop
es
mov
lcall
lock
cs
pop
test
pop
pop
shlb
cmp
lret
pop
jno
inc
rol
jg
inc
cmpsb
mov
or
dec
aas
fwait
sub
sub
ds
inc
aas
xchg
rolb
ds
int
cmpb
mov
call
test
cmp
nop
pop
jg
cmp
sar
or
aas
or
rorl
push
aad
inc
mov
adc
addr16
xchg
faddl
mov
xor
loop
push
int3
add
dec
cwtl
or
out
jns
push
sbbb
cwtl
inc
jns
dec
push
lock
ds
aam
jg
nop
pop
jbe
in
lock
or
xor
test
insb
sub
and
mov
mov
sar
sbb
inc
jp
jb
or
rol
inc
and
add
mov
sbb
mov
std
or
test
inc
testl
or
jge
push
ljmp
sti
aas
push
data16
imul
es
pop
mov
add
push
fidivl
or
cmp
insl
push
int3
push
pop
in
bound
add
push
mov
add
rclb
gs
cmp
sarl
fwait
rolb
cmp
or
stos
rorl
dec
xchg
inc
or
jl
add
mov
sub
jae
pop
outsb
les
mov
mov
xchg
jl
mov
mov
push
xor
lahf
and
mov
stc
or
imul
mov
inc
inc
out
mov
mov
fwait
jne
cld
adc
hlt
arpl
push
mov
fcmovu
pop
rcrl
mov
xchg
jb
add
mov
pop
dec
ss
xor
pop
test
jp
and
inc
jb
sub
scas
fwait
sbb
cmp
arpl
lock
cwtl
xor
stos
sub
incb
mov
cmp
into
inc
ja
clc
dec
push
nop
mov
cld
and
add
call
xchg
fmulp
mov
mov
dec
fcomp
push
shl
les
int
ss
pop
xor
imul
jae
push
add
in
sbbb
outsl
and
inc
mov
mov
xchg
insl
pop
push
pushf
pusha
addr16
xchg
or
adc
mov
xor
cmp
repz
pop
inc
inc
es
and
sub
in
stos
loope
jae
xchg
outsb
mov
loope
dec
xchg
imul
cmp
jl
mov
dec
adc
in
pop
mov
in
icebp
adc
add
sub
push
lods
inc
in
push
push
mov
mov
mov
js
sub
stc
sub
lret
fucomip
in
mov
pop
outsl
jg
pop
pop
stc
add
jl
in
mov
ret
testb
ret
int
mov
lcall
jno
sbb
in
loope
movsl
dec
lds
dec
xor
cmp
lea
fwait
or
lock
inc
fisttpll
in
popa
jp
ret
lea
leave
pop
in
mov
mov
dec
inc
jb
dec
scas
xchg
push
xchg
pop
fdivrl
in
out
or
stos
xchg
outsl
mov
or
mov
dec
add
pop
outsl
into
mov
xchg
dec
lret
dec
std
aaa
sub
sub
mov
mov
mov
mov
or
lods
pop
outsl
sub
jp
mov
nop
mov
push
push
and
rcl
cmp
js
adc
addb
add
aas
cmp
out
xor
xchg
rorw
stc
cmp
xchg
dec
testl
sahf
or
jl
pop
xlat
insb
add
and
sub
test
out
sub
les
insl
rolb
mov
xlat
popa
jnp
in
imul
sbb
int3
sti
pop
aad
daa
dec
ret
push
mov
lock
pop
call
mov
ds
fmulp
jmp
inc
lcall
addb
push
dec
push
xor
adcb
pop
and
push
push
pop
lods
sbb
adc
aaa
xchg
xor
or
fs
xor
pop
leave
mov
push
mov
jne
testb
jmp
ret
in
addr16
mov
mov
dec
add
sub
shll
xor
push
in
mov
mov
and
mov
adc
int3
adc
or
ss
or
sarl
ds
and
call
loop
pop
inc
jb
sub
and
xchg
pop
or
mov
sti
pop
mov
sub
shrb
jmp
stos
rorb
pop
insb
imul
fxsave
ljmp
jo
in
icebp
xor
leave
or
pop
negl
mov
mull
mov
push
add
jecxz
jbe
fwait
cmpsl
jmp
jae
das
scas
cmpsl
fsubr
or
lock
loopne
pop
repz
fwait
clc
loopne
std
cmc
scas
xor
or
inc
in
lret
jl
pop
xchg
mov
ss
mov
insb
insl
lcall
mov
dec
cmpsb
xor
mov
fists
cs
gs
pop
inc
inc
lret
out
dec
ss
stc
gs
gs
dec
leave
arpl
and
and
les
sub
cmp
outsl
notb
sub
sbb
xor
add
orb
sub
dec
lcall
mov
mov
dec
and
mov
cmp
adc
sbb
repz
pop
push
aam
imull
dec
pop
decb
inc
mov
sub
jg
arpl
in
cmp
pop
subb
pop
mov
mov
hlt
shl
test
and
adc
mov
enter
cmpsb
push
imul
mov
dec
mov
mov
cmp
add
jle
fisubrs
mov
out
xor
enter
or
fwait
roll
in
mov
fnstenv
insl
sub
sbb
xor
in
roll
sarb
sbb
inc
sahf
push
rcll
mov
out
mov
pushf
aam
icebp
or
nop
fs
sahf
lds
pop
sbb
inc
jae
xlat
cmp
mov
cmp
insl
repnz
jl
push
jbe
jo
sar
cld
js
aad
sub
push
pop
pop
int3
lods
sahf
dec
stos
enter
insb
add
subb
les
mov
gs
dec
cld
pop
js
test
dec
dec
jge
cmp
mov
sbb
cmp
or
filds
insl
je
inc
jle
fcmovb
pop
jecxz
xor
pop
in
negl
shrl
mov
xchg
mov
int
faddl
in
add
mov
mov
ja
mov
inc
jge
xchg
add
out
clc
xor
cmc
push
cmp
dec
stos
mov
push
jnp
lahf
dec
mov
jbe
loop
sbb
icebp
test
sahf
bound
int3
fs
or
ja
jp
mov
jge
mov
cmpsb
rorb
gs
xchg
in
mov
jmp
insl
leave
mov
rcl
inc
mov
test
fdivs
enter
cmc
xor
sbb
mov
fmull
mov
xchg
inc
popa
inc
lahf
ret
xchg
fdivrs
dec
loop
test
addr16
xchg
sahf
gs
pushf
fistpl
or
daa
push
scas
jmp
mov
mov
jle
jecxz
mov
mov
aas
push
shrl
inc
and
add
jecxz
sbb
inc
shr
decb
dec
mov
test
mov
in
mov
iret
idivb
mov
fdivs
pop
insb
mov
add
xor
and
insl
or
fsts
mov
sbb
mov
sti
or
fldt
cli
div
lock
ds
pop
xor
dec
in
and
or
and
push
jg
fucom
push
jno
xchg
jae
sbb
out
jae
rclb
adcl
mov
js
mov
pop
into
cmpsl
stos
aaa
loop
cmp
out
out
je
inc
mov
cwtl
sbb
mov
xchg
push
int3
shrb
pop
lcall
out
imul
stos
cmc
inc
add
fs
pop
jp
imul
and
mov
dec
sti
jae
ds
mov
mull
sbb
mov
adc
iret
insb
lcall
add
sbb
mov
scas
test
inc
inc
daa
pop
mov
cwtl
adc
and
xor
into
call
dec
data16
jno
push
insb
xchg
or
hlt
pop
jmp
add
adc
pop
lds
pop
gs
dec
cli
inc
in
and
mov
mov
mov
scas
dec
sbb
xor
cmp
outsl
pop
sub
mov
mov
push
push
call
leave
dec
lcall
ret
fs
lahf
fs
inc
jmp
loop
mov
xor
sbb
mov
mov
lock
pop
dec
add
dec
add
push
aas
or
mov
jp
lea
popa
pushf
in
mov
adc
push
daa
aaa
sbb
out
adc
scas
aas
and
test
pop
clc
and
fwait
lods
jb
pushf
arpl
cmp
inc
ss
inc
mov
or
incl
jmp
jnp
adc
ja
sub
xchg
or
dec
xchg
sub
rorb
push
pop
xor
into
fwait
shlb
sbb
int3
movsl
adc
cwtl
outsl
cmp
out
lock
loope
sbb
adc
ljmp
into
clc
mov
fdivrp
jg
mov
xchg
or
iret
hlt
mov
mov
mov
mov
pop
test
xor
movsb
cmc
dec
xchg
lods
outsb
scas
push
in
fs
adc
outsb
loope
push
aam
cmp
addb
clc
jp
xlat
or
loopne
adc
cmp
sbb
cmpsl
in
xor
ljmp
mov
xchg
adc
jg
pop
jp
mov
xor
cwtl
rorl
repnz
lock
or
aam
shrl
shrl
rcrl
sbb
popl
decl
ja
adc
enter
xor
cwtl
fbstp
jl
fcomps
mov
mov
xchg
sub
cmpsl
pop
cmp
push
mov
mov
jge
test
and
inc
push
fsubrl
dec
push
xor
pop
push
fnstenv
into
or
cmp
rorl
cli
and
leave
sarl
loope
ss
aam
sbb
adc
daa
fs
cmpsl
lods
xchg
add
inc
rcrb
xchg
aad
roll
addr16
jle
cmpl
pop
pushf
repz
push
das
push
add
xchg
or
int3
cmp
or
int
push
adc
mov
sub
fcmovb
shrl
inc
push
mov
fists
into
push
mov
jp
dec
jb
shlb
mov
and
loope
aam
fcompl
mov
sahf
push
test
push
add
inc
rorb
movsb
repz
mov
scas
push
cmc
test
cmp
call
loop
jae
scas
jge
pop
cli
push
mov
xchg
sbb
pop
jge
push
push
lea
dec
movsl
xchg
outsl
mov
scas
sub
stos
inc
or
ss
rcrl
adc
inc
mov
mov
jno
and
jbe
push
jno
push
popa
das
outsl
jb
addr16
fmull
ret
stos
push
fcmove
lret
test
pusha
mov
sub
lret
sub
std
ret
or
xor
arpl
rorb
cmp
push
test
outsl
enter
pop
repz
sbb
xorl
mov
sub
xor
cld
int3
xchg
mov
out
inc
push
jno
push
loop
add
icebp
dec
and
xor
out
das
mov
aaa
fisubl
sub
mov
fcmovu
and
xchg
test
into
fdivs
std
shlb
adc
mov
xchg
repnz
xor
jg
or
cwtl
inc
adc
mov
shrb
push
jne
add
mov
sbb
add
fbstp
mov
sbb
xchg
loope
faddl
aas
mov
push
popa
loope
lcall
loope
xor
ret
cmpsl
cmovne
xchg
scas
pop
mov
add
mov
sub
cmp
clc
inc
outsl
mov
jbe
pop
mov
mov
in
mov
mov
sbbl
or
std
mov
lret
push
xchg
mov
out
jo
test
jne
insl
lds
fnsave
jns
insl
push
or
out
xlat
pop
aaa
or
adc
xor
dec
jecxz
inc
addr16
stc
fildll
imul
js
push
jo
add
and
jp
in
lahf
sbb
lahf
pop
sub
cwtl
mov
cld
xchg
xor
pop
test
mov
std
add
in
inc
xorb
or
cld
fcomps
data16
xlat
movsl
jno
adc
mov
pushf
mov
imul
in
es
mov
dec
cld
sub
test
mov
push
add
inc
jb
push
cmc
inc
popf
push
sbb
sbb
push
test
add
aas
sbb
sbb
lock
add
hlt
negb
in
xor
dec
push
xor
rcrb
mov
cld
lock
cmc
inc
insb
inc
mov
insb
xchg
sub
sub
mov
mov
sbb
cmpsl
dec
mov
and
ds
sub
xchg
mov
cmpsl
mov
adc
fildll
push
cmp
out
dec
sbb
mov
jg
setb
push
lock
xchg
mov
out
dec
pop
lock
add
xor
dec
sbb
sbb
xor
cwtl
jae,pt
push
movsb
int
pop
out
add
loopne
mov
andl
inc
pop
jbe
sbb
lahf
and
jle
stos
xchg
mov
aam
cmp
and
xchg
dec
xchg
imul
das
fisubrs
in
cwtl
fistps
pop
inc
psubb
dec
rcr
mov
push
adc
int
push
sbb
and
ja
jo
push
lcall
jns
nop
xor
push
or
xor
lods
lret
movsl
cmpsl
jno
sbb
insb
adc
enter
or
sub
jae
sbb
out
mov
out
hlt
mov
mov
jp
pop
test
and
dec
add
xor
lret
cmc
out
cmpsb
sahf
and
stos
mov
adc
sbb
out
push
add
pop
nop
ret
sub
cmp
ss
and
stos
scas
loop
mov
sbb
es
lret
mov
fs
pop
aas
jb
xchg
and
jae
mov
jno
dec
push
into
add
in
test
xchg
es
cmp
call
scas
mov
add
and
mov
daa
out
lea
jno
cmpsl
das
test
clc
lea
lea
sbb
inc
divb
arpl
out
insb
jp
pushf
dec
push
in
jp
cmp
xchg
push
mov
stos
movsl
push
mov
adc
shlb
fs
pop
mov
xor
inc
push
mov
sbb
ret
sbb
loope
push
mov
leave
pop
std
lret
adc
cltd
sub
lea
jge
sbb
mov
mov
insl
adc
fisttps
loop
scas
inc
add
mov
inc
fwait
rol
les
mov
mov
loopne
inc
pop
ret
repnz
mov
outsl
pop
lods
and
xchg
insb
pop
push
and
mov
scas
out
sbb
adc
push
push
inc
je
daa
cmp
sti
inc
sub
mov
pushf
sahf
aam
popf
stos
sub
push
inc
rorl
mov
push
popl
outsb
ret
pop
mov
stos
test
jp
cwtl
out
aaa
inc
dec
mov
pop
add
inc
decl
cmp
je
int
mov
stos
dec
jnp
or
mov
hlt
cltd
or
pop
or
and
push
xchg
xor
mov
rep
int
cmp
pop
shll
xor
mov
lret
xchg
sbb
xchg
loopne
pop
movl
inc
add
ds
es
insl
sbb
jns
and
cmp
and
int
xchg
mov
jmp
test
fisubl
cmp
push
icebp
xchg
or
ret
fbstp
aas
mov
fstps
lcall
cmp
icebp
jle
dec
xlat
sub
js
mov
mov
push
or
ja
push
icebp
test
daa
or
imull
and
inc
fdivrl
sbb
push
jns
jmp
mov
shll
cmp
out
std
mov
fldcw
dec
xlat
inc
push
stos
fidivs
xchg
xorb
jg
lds
into
rcr
cmp
add
sbbl
xchg
jbe
sub
dec
xor
jge
arpl
sub
hlt
pop
or
mov
or
jl
mov
in
fmul
into
cmpsl
fidivl
mov
dec
sbbl
jp
push
ret
xchg
inc
push
sahf
push
and
fdivr
jnp
sbb
inc
imul
inc
push
mov
push
xchg
jns
lret
mov
or
shll
xor
jl
add
pop
std
xchg
pop
xchg
pop
insb
cltd
call
pushf
jae
ret
outsb
test
pop
sub
pop
daa
xchg
xlat
repnz
repz
sbb
jbe
mov
mov
in
xor
sahf
insl
adc
mov
movsb
fmull
