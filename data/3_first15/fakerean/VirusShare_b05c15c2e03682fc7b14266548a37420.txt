sahf
xchg
push
mov
in
andl
pusha
insb
cmp
mov
jmp
push
pushf
dec
incl
cmp
int
shl
loop
movsb
loope
ds
movsb
outsb
cmp
xchg
mov
insl
fidivl
mov
dec
repz
push
pop
inc
rorl
xor
mov
test
cmpsb
mov
js
jp
jmp
rolb
cli
mov
pop
pop
in
lds
sub
imul
in
out
icebp
push
pop
data16
and
pop
ret
clc
fmull
cs
lahf
aam
adc
test
sub
add
test
jnp
lret
int3
es
lcall
mov
ret
mov
cmp
out
movsb
sub
jle
insl
out
ret
icebp
outsb
pop
mov
hlt
inc
cwtl
pop
xor
cmc
scas
mov
imul
out
dec
mov
rolb
lcall
adc
mov
inc
push
dec
fisubrl
dec
mov
rorl
loop
dec
mov
subl
push
addb
push
sub
push
addl
popa
call
popa
xchg
push
icebp
mov
sub
js
call
inc
fnstcw
mov
das
xor
or
out
out
js
loopne
aam
ja
pop
aad
mov
pop
test
stos
out
push
push
xchg
sub
out
sti
inc
mov
clc
pop
movsl
cmp
inc
and
mov
in
fdivrl
sub
subl
dec
sub
ds
xchg
cmp
mov
dec
iret
jl
and
xor
fbstp
jbe
or
add
jp
or
and
or
xchg
insl
ss
mov
xor
dec
fwait
mov
push
xchg
sahf
fimuls
dec
es
mov
push
shll
negl
mov
sbb
and
mov
addr16
in
mov
add
js
gs
add
jb
cld
test
scas
jge
loopne
fidivs
adc
pop
fmul
popf
cmp
fs
adc
test
fidivrs
and
sbb
inc
and
cltd
inc
clc
iret
mov
inc
outsb
inc
das
insb
cltd
sub
insb
fistpll
lahf
xchg
mov
das
inc
push
xor
sub
scas
in
jnp
adc
movsl
dec
sub
aad
inc
adc
scas
mov
sub
lock
in
sbb
adc
aas
push
sub
jae
add
inc
imul
ljmp
in
sbb
jno
shl
int
push
pusha
jmp
jnp
idiv
dec
pop
sbb
sub
lcall
rolb
mov
sbb
adc
sbb
fmul
icebp
clc
xor
lcall
inc
mov
popf
cli
mov
dec
sub
add
sub
push
test
pop
popf
inc
mov
adc
shll
adc
test
repz
shr
clc
in
xor
ds
scas
or
ss
xchg
jae
in
loop
aaa
or
rolb
dec
cwtl
loopne
or
adcb
xchg
inc
leave
mov
std
pop
and
ret
and
mov
int
pop
push
cld
insl
add
leave
lock
js
dec
pop
hlt
push
xchg
adc
mov
push
xchg
add
clc
stos
jmp
shll
test
cmpsl
repz
int3
xor
insb
mov
leave
enter
jb
imul
and
fisubrs
rcrl
sbb
inc
aas
sbbb
popa
push
cli
daa
lahf
dec
ror
lods
xor
in
or
jbe
decb
int
bound
sbb
cmp
sbb
out
pop
inc
and
inc
mov
ret
mov
or
mov
leave
lock
repnz
push
mov
nop
xchg
xchg
scas
pusha
pop
xor
and
ja
inc
pop
popf
movsl
gs
mov
les
mov
push
inc
mov
das
imul
mov
lock
out
pop
pop
out
clc
scas
mov
xor
lcall
rol
sub
addr16
mov
das
stos
mov
hlt
addb
setne
daa
push
fdivr
shrb
andl
jge
in
push
mov
stos
shl
lock
sub
rcrl
push
or
mov
popa
repz
aad
add
loopne
xchg
mov
jae
cmp
into
fwait
jecxz
dec
cmp
or
sub
movsl
sbb
cmpl
push
rorb
xchg
pop
jle
data16
xchg
imul
sbb
and
test
sahf
jb
pop
sub
rolb
adc
ret
ds
push
mov
pop
mov
rorb
test
mov
push
adc
cwtl
stos
aad
sti
jecxz
dec
cli
jecxz
roll
cmp
jnp,pt
rcrb
xor
in
pop
sbb
stos
test
sub
mov
jne
arpl
jae
imul
mov
or
sbb
adc
idiv
jnp
lock
xchg
sti
scas
mov
inc
in
fwait
shrb
pop
std
cld
and
lahf
popf
mov
inc
lds
push
daa
fiaddl
cmp
jae
cmp
xorb
ret
in
call
stos
insl
add
imul
enter
xor
add
cltd
add
xchg
cwtl
fwait
add
call
or
push
mov
je
pop
insl
sub
mov
mov
push
mov
cmpsl
or
aam
fs
xor
and
xchg
daa
jb
addl
push
sbb
mov
push
hlt
enter
inc
out
cmc
mov
mov
lock
ja
push
push
out
aad
xor
imul
clc
add
inc
in
aam
stos
pop
sbb
and
mov
inc
cli
arpl
ds
leave
add
xor
dec
mov
aam
data16
cmc
ret
or
cs
push
xor
out
jl
lret
pop
sub
mov
nop
call
push
jb
loop
sub
add
rol
pop
push
dec
or
jle
jbe
out
cmpsl
clc
cmc
mov
fadds
push
inc
out
mov
iret
mov
pop
or
bound
loope
nop
call
mov
jmp
nop
cwtl
add
das
mov
push
sbb
mov
jecxz
insl
outsb
in
stos
cld
xor
bound
pop
xlat
ficoms
sub
aam
aad
mov
lret
outsb
mov
xlat
pop
mov
xchg
dec
jmp
sbb
scas
jno
jmp
pop
js
clc
mov
xor
shlb
lods
nop
das
and
jle
movsl
in
jae
xchg
jle
stc
js
jno
mov
das
pop
inc
daa
adc
add
dec
loope
stos
fisubrs
int
sub
lock
mov
push
gs
int
inc
rorb
cmp
jmp
sub
lret
lret
cltd
pop
imul
xchg
addb
inc
push
xchg
and
stc
push
fwait
jne,pn
push
arpl
das
sub
xor
pop
int
loop
push
int3
out
clc
sbb
mov
or
mov
and
popa
iret
testl
rcll
mov
fisubrs
jecxz
and
clc
scas
aad
test
fwait
divl
jecxz
sbb
insl
jo
aas
in
mov
test
pop
adc
jbe
cmp
xor
imulb
ja
push
or
inc
inc
ljmp
cmpsl
repnz
shlb
outsl
or
or
sbb
jae
aam
mov
xchg
pop
or
cltd
mov
cli
push
mov
call
imul
jae
cmp
inc
jnp
dec
iret
iret
add
cmp
mov
jne
arpl
cltd
jno
ja
cmp
and
mov
and
ljmp
push
movsb
repz
and
std
je
cmc
sub
pop
add
and
ja
xchg
jle
movsl
sub
dec
js
add
mov
cwtl
jo
daa
mov
cld
mov
push
xchg
pop
test
add
scas
jmp
clc
cmp
and
inc
mov
outsb
loope
cli
std
mov
icebp
or
ror
outsl
xorb
std
pusha
push
add
or
sbb
add
fs
mov
cmp
adc
lahf
stos
fs
mov
cmp
push
nop
xor
out
jno
inc
mov
and
js
fiadds
jns
int3
mov
call
in
pusha
movsb
jnp
mov
fildll
movsl
xchg
jbe
inc
xchg
outsl
inc
xchg
pop
sub
lock
dec
jp
lods
xchg
and
dec
out
fmull
test
sub
add
xchg
xchg
adc
inc
pop
inc
pop
and
mov
push
jmp
xor
dec
sbb
rclb
mov
data16
aas
jmp
lret
test
mov
mov
dec
xchg
sub
add
int3
in
cli
out
mov
cld
mov
loope
pop
cli
push
xor
jecxz
jmp
jg
inc
fisubl
push
fdivrs
jmp
cmc
push
std
fwait
ljmp
dec
push
in
jne
or
cmp
inc
sbb
adc
cmc
mov
sub
mov
test
adc
icebp
dec
mov
dec
jo
xchg
jge
mov
jg
mov
repz
and
pop
std
in
mov
sbb
fstsw
and
or
xor
cmp
jns
clc
ss
icebp
mov
loop
test
std
aad
push
add
dec
xchg
sahf
ret
out
imul
pusha
enter
sub
imul
test
sbb
jecxz
test
dec
out
ljmp
sub
pop
jo
dec
jp
pop
inc
add
jl
mov
mov
push
in
xchg
rorb
je
push
les
rolb
mov
insb
sub
ja
lret
mov
nop
mov
addr16
repnz
aaa
adc
shll
inc
daa
push
in
repz
test
inc
jmp
arpl
jp
and
sbbb
je
clc
pop
lret
addb
adc
in
xlat
mov
cmp
loop
movsb
push
test
popa
xchg
insl
jns
mov
pop
notb
xor
jl
pop
jle
movsb
pusha
mov
fldl
jbe
test
push
cmpsl
lods
xor
xchg
aaa
les
out
sahf
inc
lret
outsl
lea
sbbb
movsl
cltd
mov
jmp
jl
loop
sub
dec
cld
test
mov
loop
sti
loopne
pop
lahf
mov
shll
out
push
xor
fnstsw
mov
dec
repz
xchg
out
xlat
stos
dec
lock
andb
in
add
add
std
jecxz
imul
xchg
repnz
adc
hlt
icebp
and
pop
push
stos
in
fsubp
jmp
divb
filds
mov
std
leave
cmpb
loop
mov
add
mov
imul
cmp
and
out
push
lea
lret
lcall
lret
mov
insb
mov
stos
xlat
mov
jge
push
dec
pop
jb
inc
in
rorl
lret
inc
pop
cmp
adc
sahf
jmp
pop
push
add
aas
dec
enter
push
xchg
sbb
cmp
xor
xchg
push
popa
and
xchg
xchg
jge
adc
jmp
push
fwait
aad
pop
cmpsl
pop
ret
pop
mov
jb
mov
mov
cltd
mov
or
sar
xchg
mov
xchg
fiaddl
add
aam
cld
scas
ljmp
fsub
enter
fistl
cmp
adc
fisubrl
jnp
sub
into
pushl
jnp
repnz
sti
js
add
mov
adc
lahf
fldenv
rclb
jb
aaa
les
xchg
out
pop
push
pop
mov
sub
ljmp
imul
ret
movsb
in
shl
sbb
mov
sbb
mov
ljmp
call
pop
iret
icebp
adc
jb
out
ss
xchg
xchg
fwait
mov
jle
add
pop
test
ret
xchg
mov
inc
fisubl
mov
das
int
add
cmc
sbb
inc
jecxz
fwait
popf
sub
out
scas
insl
or
mov
dec
movsl
cmpsl
pusha
cmp
pop
cmp
or
iret
outsl
out
mov
das
jne
test
pop
xchg
test
ret
xor
dec
xorb
xchg
sub
std
pushf
test
stc
adc
cwtl
mov
in
test
movsl
adc
or
xor
cmp
and
ja
dec
xchg
sub
notl
cmp
and
and
jae
push
scas
loop
loop
inc
mov
add
cmp
dec
aaa
xchg
cmp
or
inc
pushf
enter
ss
test
fs
xchg
in
movsb
pushf
stos
negb
pop
xchg
out
xchg
xchg
mov
sub
pop
stc
inc
je
ret
and
stos
mov
add
imul
push
aam
inc
jl
dec
jmp
sub
push
jbe
jbe
and
xchg
sti
and
mov
rol
imul
fidivrl
jecxz
rol
jmp
loope
xor
xchg
cmp
loop
sub
jb
int
pop
sbb
xchg
jno
mov
xor
into
push
pusha
push
jns
push
test
out
notl
sbb
pop
push
aad
sbb
lea
arpl
ja
lret
cmp
or
sbb
dec
bound
cld
push
aaa
jns
repz
xorb
sahf
push
adc
cmpsb
push
sbb
lahf
jae
popf
rep
lcall
std
mov
fcoms
or
daa
inc
mov
push
repnz
xchg
movsl
push
cld
faddp
push
add
mov
stos
outsb
cmpb
pop
xchg
or
aad
adcb
insl
xchg
adc
add
in
in
shr
std
push
cmc
movsl
lods
test
jne
xchg
enter
mov
push
int3
jg
pop
and
push
push
sub
in
cmovne
hlt
dec
sub
in
jmp
pop
subb
cli
cmp
in
dec
xor
sahf
jp
mov
sub
push
jmp
ret
push
movsb
sub
hlt
sub
mov
enter
iret
dec
or
dec
jns
pop
loop
aas
aaa
xor
scas
imul
jne
mov
gs
outsl
cld
push
or
imul
mov
mov
mov
add
fdivrs
fs
aas
inc
lcall
xlat
jno
idivl
inc
push
stc
cwtl
loope
call
call
aam
push
imul
mov
pusha
loope
push
jno
rcrl
jnp
adc
push
roll
int
shrb
xor
fwait
lock
and
rcll
pop
nop
sbb
out
cmp
inc
and
pop
lahf
mov
pop
adc
lret
imul
and
cmp
adc
sub
pusha
mov
adcb
jae
rcrl
cmp
fwait
push
mov
dec
mov
pop
sub
mov
and
adc
dec
jne
and
mov
stos
sbb
cli
mov
cmc
rorb
cld
add
mov
je
or
and
popa
arpl
fcomps
sarb
enter
jl
scas
pop
jl
adc
or
sub
cmpsb
xchg
mov
and
inc
lcall
inc
stc
dec
sub
fs
fisttpl
enter
sbb
mov
or
mov
dec
mov
in
loope
pop
xor
ret
out
loope
fdivrl
sub
sub
movsb
pop
pop
fidivs
mov
jnp
add
lcall
in
xchg
clc
dec
adc
sub
repnz
fmuls
lea
xchg
icebp
or
push
fcomps
or
jbe
cmp
je
mov
das
inc
inc
or
jg
add
mov
pop
mov
popf
loop
jno
gs
inc
inc
mov
pop
cmp
mov
mov
ljmp
inc
fcmovne
in
jmp
adc
sbb
insb
fadds
out
out
icebp
cmp
mov
int3
cmp
stos
sub
lds
adc
aaa
das
std
in
pop
mov
sub
fistpl
adc
orl
dec
ds
jo
cmp
push
sub
add
inc
cmp
mov
jle
mov
into
fnstcw
adc
mov
ja
repnz
in
mov
enter
jle
sub
ret
mov
lods
ror
sub
pusha
cs
test
mov
pop
mov
cmp
inc
int
shll
jge
inc
or
inc
jecxz
xchg
pop
in
mov
stos
or
sbb
decb
sub
xchg
and
fdivrs
mov
add
sub
sti
mov
mov
dec
sub
std
mov
jle
push
mov
leave
mov
jbe
gs
scas
in
dec
xchg
fcmovnbe
push
ret
fildl
adc
dec
fstpt
mov
dec
cmc
adc
or
xchg
shl
aam
cmp
xchg
rorl
inc
mov
xlat
jbe
and
pop
or
adc
jp
out
dec
mov
arpl
pusha
lcall
rorl
fimull
ja
mov
stos
inc
xor
adc
iret
sbbb
jmp
test
mov
inc
loope
sar
es
cmpsb
rcl
jns
jecxz
in
fsubrl
shll
cli
movsb
xchg
mov
push
aad
mov
stc
xchg
rcrl
mov
cmpsl
add
xor
cmc
dec
sahf
xor
cmp
sub
lahf
sub
test
fsts
xchg
pop
outsl
mov
and
cmp
adc
fs
addl
adc
test
adc
sahf
or
test
jno
push
sub
call
fidivrs
cli
and
or
sbb
jmp
je
adc
push
test
fcompl
shrl
and
fisttpll
mov
lds
mov
cmp
mov
cmp
mov
jle
or
test
test
cmp
adc
lods
push
push
sahf
pop
mov
lretw
inc
cli
fcmovnbe
xor
dec
sbb
sbb
out
aad
cmc
dec
test
mov
inc
or
or
out
leave
loope
int3
aad
lcall
mov
je
xchg
xchg
xor
shrl
cli
push
mov
xchg
test
aam
adc
xchg
lock
cmpsl
shr
cmp
stos
out
inc
dec
dec
cmc
fwait
or
adc
lcall
in
es
data16
sbbl
sub
cmc
mov
test
push
daa
mov
pop
ja
stc
xor
dec
in
sub
adc
popa
push
insl
fstpt
je
sbb
ret
mov
push
dec
and
dec
fisttpl
or
push
mov
push
pop
jge
mov
push
xor
in
sti
mov
fwait
or
dec
xchg
xor
out
mov
fisubrs
jecxz
flds
rcll
stos
lods
jge
push
mov
stos
rorl
jl
jmp
data16
and
mov
cld
filds
test
orl
and
pop
dec
push
inc
xchg
cmp
insl
and
cmpsb
mov
aaa
adc
sbb
adcl
loopne
mov
cmp
std
and
ss
not
outsb
fs
cmpsb
movsb
inc
loope
sbb
fnsave
out
push
scas
ss
jnp
leave
adc
mov
jecxz
adc
cmpsl
mov
cmpsb
sbb
xor
mov
xchg
push
hlt
and
push
xor
iret
pop
adc
inc
icebp
jo
imul
add
popf
mov
test
out
rclb
mov
arpl
lret
inc
das
or
cmc
mov
xor
xchg
sti
mov
pop
sub
sub
insb
push
jbe
pop
jnp
pop
stc
sbbl
pop
mov
pop
xor
je
ds
xchg
fisttpl
inc
fs
int3
lret
cmp
fstpl
jp
xor
sub
call
dec
sub
push
repnz
cwtl
push
aam
stc
push
dec
and
add
cmpl
mov
sahf
inc
mov
jecxz
inc
std
gs
mov
nop
xchg
decb
dec
mov
or
sti
lods
adc
mov
xchg
in
stos
and
pop
mov
es
bnd
mov
lods
push
xchg
inc
imul
hlt
aaa
arpl
inc
adc
mov
repz
ds
xchg
idiv
lahf
pop
sbb
pop
fildll
dec
cmp
insb
movsb
bnd
jno
test
push
addr16
ss
xchg
pop
imul
dec
xchg
cld
add
ret
shrb
sbb
inc
xchg
rcll
jae
xor
inc
or
sbb
call
cwtl
xchg
jb
xor
xor
ja
ret
jno
rcrb
das
jp
push
leave
dec
subl
aam
sub
addr16
cmp
cmpsl
lret
push
add
loop
std
fidivs
cmp
jne
or
popf
xchg
jge
bound
pop
daa
jge
jg
es
data16
mov
and
add
pop
hlt
into
push
lods
sbb
xor
pop
cli
and
jle
jle
and
and
loope,pt
xor
add
cmp
into
sbb
pop
inc
aaa
xchg
dec
repnz
mov
out
inc
jbe
sbb
inc
dec
cmp
mov
pushf
ret
sub
data16
cwtl
lods
orl
mov
repz
ret
bound
aaa
insl
inc
push
sub
pop
mov
repz
mov
scas
repnz
mov
cmpsb
sbb
dec
cmp
mov
loope
ja
push
scas
jb
mov
mov
jo
xor
pop
push
add
dec
pop
sbb
negl
js
test
mov
xor
sbb
pop
out
bound
rorl
add
cmp
sti
pop
inc
leave
js
outsl
jnp
stos
jp
dec
xchg
es
mov
lods
push
and
xor
cmc
or
cmc
push
cmp
fcoms
out
andl
out
mov
push
out
insb
int
lret
mov
push
sub
scas
loopne
inc
add
adc
mov
xchg
mov
or
pop
dec
pop
cmp
mov
aam
rcll
ss
mov
adc
dec
push
ja
shrl
popf
sub
or
jo
iret
dec
orb
insl
sbb
aaa
adcl
in
int
push
inc
dec
xor
sbb
add
inc
movsl
repnz
inc
adc
hlt
dec
sub
out
ror
inc
leave
xor
or
cld
fcomps
dec
test
aas
adc
nop
scas
mov
xchg
pop
adc
ret
je
mull
and
arpl
icebp
cli
ret
jns
dec
clc
sti
sub
mov
loop
in
mov
roll
sub
inc
insl
xor
add
and
dec
fcmovnu
fldenv
xor
mov
xor
into
js
inc
or
adc
scas
adc
mov
lods
pop
push
sbb
fldenv
out
aad
mov
pusha
dec
adc
inc
movsb
dec
mov
add
sub
xchg
nop
inc
sub
testb
or
pop
mov
outsl
jecxz
ljmp
add
pop
mov
call
adcb
outsb
aam
jne
shlb
xor
push
test
xchg
out
or
mov
jmp
aas
test
mov
adc
movl
xor
stos
dec
cmpsb
cmpsb
sub
lcall
imul
xchg
or
mov
icebp
lock
cmp
lcall
jo
cs
out
pop
push
push
pop
faddl
js
xor
dec
jnp
dec
xor
push
lcall
sub
adc
adc
inc
sbb
xchg
add
fwait
push
xchg
adc
pop
leave
sbb
and
mov
leave
adc
adc
mov
outsb
xor
mov
std
push
and
xchg
loope
add
mov
push
jl
aas
sbb
enter
ret
pop
jb
inc
test
push
or
outsl
sub
sbb
sub
loope
xor
xor
fwait
adc
into
push
stos
pop
mov
insb
lods
jl
daa
mov
test
in
fucom
cmpsb
inc
mov
arpl
rorl
push
sbb
adc
xlat
xor
sub
pop
aam
dec
ret
push
mov
popf
xor
mov
stc
sbb
add
inc
in
xor
pop
and
movsl
shr
es
or
daa
xlat
mov
push
xchg
ljmp
xchg
mov
sbbb
push
add
ja
jns
cmp
push
lds
out
jne
out
inc
sbb
sub
js
jp
xor
inc
xchg
xchg
ja
cmp
pushf
dec
push
addr16
mov
and
or
mov
mov
push
mov
xchg
adc
cmp
repz
jb
and
mov
jp
test
fs
inc
aaa
jnp
test
lcall
pop
jp
jmp
cmp
jnp
pushf
ret
xor
mov
cld
fwait
lea
and
xor
cld
shrb
popf
mov
mov
mov
mov
or
testl
or
leave
mov
pop
mov
out
xor
ror
in
lahf
lock
ljmp
repnz
lods
mov
addl
push
xor
out
movsl
fcomps
daa
pop
stos
xchg
daa
mov
lea
adc
repnz
inc
loop
xor
xchg
lret
inc
cmp
decb
mov
test
or
es
cmpsb
out
sub
mov
movsl
jb
fidivl
imul
and
arpl
pop
inc
icebp
enterw
fimull
subb
or
cwtl
cli
and
push
xor
jmp
jmp
pop
push
repnz
out
pusha
sbb
add
mov
mov
mov
sub
test
cmpsl
mov
xor
cmp
sub
arpl
pushf
xlat
sub
or
inc
jb
push
lods
mov
popa
jne
das
idiv
test
cmc
lock
pop
or
and
loopne
mov
stos
imul
out
shl
mov
scas
sbb
lds
or
sbb
cmp
push
pop
sbb
ret
ret
pop
stos
les
dec
pop
pushf
nop
popa
xor
shl
xchg
loopne
cmpsb
cmp
mov
push
cli
repz
roll
push
push
mov
repnz
test
push
in
pop
outsl
jno
rorl
je
or
cmp
scas
test
mov
jle
imul
xchg
jne
or
mov
mov
test
mov
mov
ljmp
fdivs
inc
cwtl
fimuls
hlt
in
or
or
inc
or
out
ljmp
xchg
add
popl
mov
xchg
jno
xor
addb
lahf
jge
data16
xorb
and
ror
ss
sbb
cmp
or
xchg
out
inc
xor
out
cmp
fcomp
mov
sbb
xor
and
jle
jmp
gs
nop
movsb
dec
and
and
lds
push
popa
out
hlt
subl
dec
pushf
in
jle
scas
mov
jmp
icebp
mov
cmp
sub
repnz
mov
push
arpl
jge
mov
daa
mov
dec
xor
gs
into
add
loopne
fidivs
push
mov
fwait
mov
push
gs
jmp
addr16
mov
xchg
jg
scas
cmpsl
adc
inc
rolb
lret
mov
aaa
lods
pop
stos
and
inc
inc
imul
jne
xor
and
aam
ja
mov
loope
xchg
data16
and
push
jo
sub
jae
loope
mov
pop
in
dec
pop
aas
jbe
rorl
push
mov
hlt
xchg
dec
or
or
sbb
mov
aad
and
pushf
shl
pop
stos
inc
lods
and
mov
psubsw
jo
mov
enter
sbb
hlt
call
xchg
pop
add
insl
xchg
shl
lahf
into
sbb
push
bound
das
inc
das
or
hlt
faddp
sarl
in
shlb
jne
insb
inc
mov
test
cmp
outsl
xchg
add
movsl
xchg
mov
sbb
call
in
aaa
popa
mov
push
inc
std
pop
and
les
gs
filds
insb
shl
cmpsl
je,pn
in
sbb
sub
jp
or
xchg
inc
out
push
push
adc
hlt
movsl
pop
adc
test
repz
arpl
pop
mov
and
dec
mov
dec
cltd
mov
aam
leave
loop
mov
xchg
dec
pop
cmpsb
push
lcall
nop
addr16
adcl
xchg
int3
inc
xchg
clc
test
jg
mov
jbe
data16
fistps
enter
fistpl
mov
push
sub
das
push
xor
inc
sub
out
mov
ret
aad
arpl
cwtl
xchg
into
mov
aaa
mov
insb
filds
adc
fwait
aad
mov
lcall
gs
imul
mov
bound
addr16
outsl
fucomi
data16
push
cmp
or
jecxz
fstpt
ja
cmp
pop
sti
sbb
test
adc
inc
inc
mov
xor
inc
and
cmp
rcl
loop
popa
sbbb
hlt
aam
dec
adc
add
gs
loope
sub
mov
or
xchg
popf
mov
enter
sbb
sbb
inc
jle
enter
jl
mov
aam
repz
les
pop
xchg
outsl
test
mov
mov
adc
decl
jae
leave
jnp
scas
cmc
mov
fcmovnb
aaa
shlb
ret
movsl
sbb
fwait
out
xchg
xchg
adc
addr16
repnz
popa
cli
jno
jl
imul
inc
jl
lret
pop
cmc
sub
jo
jmp
jns
loope
add
ret
xor
cmp
ss
lock
sar
jp
jle
rolb
inc
incb
dec
xchg
pop
push
fsubr
outsb
jle
add
out
push
push
inc
add
dec
adc
lea
cmpsl
mov
and
mov
ds
mov
dec
add
out
pop
xor
push
mov
scas
pop
push
inc
lcall
and
add
in
clc
pusha
xchg
stos
arpl
jp
and
pushf
push
adc
push
gs
cmpl
mov
pop
sub
sbb
xor
push
jg
cmpb
inc
mov
rcr
jge
pop
clc
push
sbb
movsl
adc
cmp
pusha
inc
iret
adc
push
mov
jae
idivb
sub
jecxz
or
and
xchg
ss
add
fsubs
in
enter
xchg
ljmp
call
mov
push
mov
sarl
pop
mov
iret
mov
and
inc
xor
mov
in
pop
imul
adc
repnz
sub
loopne
loopne
pop
push
lods
push
mov
iret
lahf
fstps
pop
push
test
dec
ds
push
out
adc
dec
mov
pop
sbb
pusha
cltd
addl
stos
lds
or
xchg
data16
std
gs
dec
and
inc
std
xchg
or
adcb
jb
xor
lcall
mov
imul
push
loope
jmp
push
rcrl
dec
xlat
movsb
pop
aaa
cld
loope
add
inc
mov
addr16
mov
push
clc
test
cmp
push
jnp
aaa
mov
lret
lods
mov
inc
lret
mov
sub
movsb
call
fidivs
in
pusha
loopne
vpmadcsswd
pop
sbb
and
cmpsl
fnstenv
mov
orl
push
xchg
mov
fldlg2
xchg
fnsave
adc
icebp
dec
loopne
rorl
cmp
ret
mov
mov
dec
dec
clc
inc
mov
sub
lret
mov
pop
sub
pop
cmp
cmp
jp
mov
xchg
fsubs
pushf
cwtl
sub
fcoms
dec
popf
pop
lahf
push
lret
xchg
std
mov
sub
mov
jno
dec
mov
pop
or
inc
cmpsl
inc
dec
xchg
call
int
dec
ja
and
pop
fwait
mov
mov
filds
mulw
repz
sbb
imul
stos
cmp
jmp
pop
inc
push
inc
addr16
sbb
cltd
cmp
cmp
mov
jge
xor
lret
push
cmp
xchg
cwtl
sub
rolb
adc
add
sti
push
inc
add
shrl
arpl
adc
addr16
aaa
pop
lods
add
idivb
xchg
dec
inc
iret
cmp
repz
push
dec
mov
cmp
je
subl
or
out
iret
sbb
pop
jmp
lret
cmp
push
lock
mov
mov
jb
sbbl
sbb
sub
pop
push
xchg
hlt
out
vpperm
fwait
push
orb
in
inc
push
rclb
cli
je
popf
loop
shll
call
sub
push
mov
std
cmp
adc
js
repnz
jno
ret
jp
insl
in
xorb
in
sbb
cmp
mov
cmp
fcmove
fwait
sbb
add
add
mov
mov
xor
lret
inc
push
dec
daa
add
add
loopne
std
xchg
stc
rcrb
cmp
jecxz
add
push
idivb
call
out
inc
pusha
ja
orb
pop
and
jbe
and
into
fidivl
sub
stos
addr16
rolb
into
or
inc
push
jle
gs
dec
mov
nop
jge
out
les
iret
adc
je
adc
cmc
mov
mov
cmpsl
inc
mov
mov
iret
xchg
adc
or
mov
scas
and
or
mov
scas
scas
xchg
jb
ja
clc
gs
cmpsb
pushf
lret
add
mov
shlb
mov
mov
rorb
mov
pop
sti
add
or
xor
and
outsb
and
in
bound
iret
mov
popf
lea
add
stc
movsl
jno
cwtl
add
jecxz
enter
fmul
inc
int
mov
push
sub
dec
in
ret
sbb
testl
cmp
or
xchg
es
ds
popf
enter
mov
jge
sti
inc
aaa
das
psrld
push
add
insl
fsubp
dec
stos
mov
add
sub
xor
mov
and
dec
xchg
dec
pop
mov
ja
add
pop
xchg
pop
add
dec
cli
xorb
test
push
push
xchg
and
add
je
in
push
cld
cli
outsl
out
hlt
and
in
sub
repz
rolb
lahf
dec
jecxz
add
int
sub
jb
xchg
adc
fstps
jl
andl
inc
mov
mov
mov
out
popa
cwtl
aaa
push
sbb
and
mov
data16
cltd
lcall
rcrb
jge
dec
ret
jp
add
xchg
sub
xor
or
push
xor
es
mov
lret
leave
jp
rolb
dec
adc
pop
cmp
push
inc
add
negl
repnz
gs
and
xlat
outsb
pop
mov
rclb
and
inc
insb
roll
sbb
mov
lods
cmp
mov
frstor
outsb
pusha
pop
call
fwait
jle
call
push
pop
mov
and
jbe
fadds
popa
stos
lds
adc
xor
mov
loope
mov
add
xchg
push
jg
das
push
fimull
inc
or
fiadds
addl
cltd
iret
in
mov
popa
sbb
add
jp
or
xor
popa
leave
movsl
cmp
and
pop
push
dec
and
mov
mov
sbb
and
test
inc
outsb
push
test
div
adc
push
outsb
roll
outsb
mov
sub
mov
push
pop
dec
push
pop
sub
or
fldenv
dec
mov
push
and
or
mov
inc
lods
add
in
sbb
test
lds
lds
xor
lcall
bnd
in
repz
shlb
loop
jne
test
mov
js
fucom
test
cmp
loope
jb
nop
push
movsl
out
jbe
repnz
or
dec
movsb
add
loopne
and
shrl
stos
xchg
bnd
testb
cmp
rcrl
sbb
das
push
leave
idivl
or
jb
pop
mov
jbe
xchg
cwtl
inc
push
aaa
add
mov
ret
xor
test
inc
cmp
mov
cmp
jne
or
insb
scas
movsb
mov
test
jmp
push
aad
ja
loope
hlt
jne
adc
sti
mov
insb
jb
fldenv
stos
cmpsl
pop
sti
pusha
pop
cmc
lcall
inc
nop
push
insl
pop
imul
rolb
divl
jne
xchg
mov
inc
andl
fsubl
xor
mov
lahf
loop
stc
fmuls
inc
and
pop
pop
int3
mov
xchg
loopne
mov
or
mov
mov
pop
rcrl
pop
pop
repz
fwait
cmp
sbb
xor
cmp
push
or
jl
mov
mov
scas
les
pop
in
or
les
cltd
xor
inc
lahf
mov
jns
loop
cmpsb
test
and
push
imul
mov
pop
inc
repz
call
hlt
gs
mov
sub
dec
es
in
xchg
test
shrl
cmpsb
loope
ret
mov
fiaddl
adc
push
cmc
sbb
dec
dec
aaa
cmp
or
pop
cmp
sbb
xor
pusha
dec
dec
cmpsl
adc
insl
pop
ret
and
lret
enter
in
mov
je
sub
fwait
int
push
iret
cltd
lods
cld
mov
mov
repnz
xlat
sbb
cmp
jb
aad
mov
repnz
aaa
jmp
pushf
aad
xlat
and
shlb
sti
leave
loopne
add
pusha
loop
xchg
sub
mov
jbe
aam
std
sbb
cli
mov
shlb
sbb
aaa
add
mov
mulb
loopne
and
jne
movsb
push
mov
push
fsubrl
testl
fcomps
xchg
push
pusha
jl
pop
enter
mov
push
jns
adc
enter
adc
sahf
out
ss
popf
jo
out
mov
arpl
lret
inc
inc
movsl
cmc
cmpsb
dec
add
scas
push
xchg
cmp
pop
jge
cmp
shl
mov
data16
leave
push
int
dec
aam
xchg
sbb
sbb
das
popf
push
clc
imul
and
mov
rcrb
mov
xor
popa
pminsw
xchg
sbb
decl
fcomip
ret
fbstp
pop
cwtl
iret
ret
sub
mov
sub
dec
lock
mov
stos
mov
inc
repz
inc
mov
insl
ljmp
inc
ljmp
gs
dec
icebp
arpl
sub
sahf
cmp
dec
jp
sub
cmp
ljmp
in
jl
or
xchg
clc
cmpl
es
fs
and
loope
mov
pushf
in
es
mov
cltd
xlat
in
mov
aaa
ja
bound
pop
scas
insb
dec
cmp
pop
xchg
inc
roll
int
cs
mov
xlat
or
xor
inc
mov
mov
push
mov
or
jno
jp
leave
xchg
sbb
or
shlb
push
push
ret
icebp
xor
out
idivl
rcrb
fdivl
mov
or
cmpsl
pop
in
imul
es
push
stos
iret
mov
sub
ret
mov
xor
mov
pop
insl
xchg
fsts
scas
idivb
inc
mov
mov
lret
clc
std
outsl
push
adc
inc
inc
es
push
dec
std
imul
out
mov
mov
jp
or
dec
sahf
addb
adcb
mov
pop
ss
js
ds
fdivr
adc
int
addr16
sub
or
xchg
adc
cmpsl
pop
fnstcw
xchg
pop
inc
test
cli
cli
jb
lods
js
mov
add
mov
push
std
cmp
mov
movsl
std
or
iret
mov
in
out
sti
cli
push
dec
mov
test
adc
mov
xchg
movb
adc
jns
jo
push
inc
jl
stos
jecxz
dec
inc
mov
inc
jb
enter
and
sub
roll
and
out
jno
xor
insl
aas
mov
pop
push
frstor
or
inc
in
xlat
mov
add
loopne
aaa
mov
dec
stos
cmc
fcmovnbe
jmp
xchg
out
and
mov
mov
cmpsl
icebp
movsl
in
sbb
sar
movsb
inc
mov
pushf
out
lsl
punpckhdq
and
push
or
xor
and
inc
mov
aas
push
or
mov
and
push
sbb
push
adc
aaa
pop
negb
inc
jmp
idivb
and
push
pusha
dec
cmp
xor
jbe
scas
scas
and
in
es
in
sbb
mov
push
inc
xor
outsl
or
mov
popa
loope
fincstp
int3
pop
lods
add
mov
iret
in
negb
add
inc
xor
sub
cltd
jmp
dec
pusha
and
push
mov
into
insl
sarb
mov
jns
xor
mov
xchg
mov
and
mov
push
lcall
lds
jg
xchg
pop
and
jo
push
loopne
gs
ja
ret
repnz
test
mov
push
imul
mov
dec
decb
jns
insl
push
lret
mov
mov
stos
popf
dec
pop
push
jnp
cmp
and
popa
enter
push
dec
pop
mov
sub
sub
xchg
clc
jne
dec
fwait
popa
out
dec
sub
aaa
jl
sub
jl
in
mov
outsl
xlat
shl
inc
mov
insb
test
and
pop
sbb
int3
in
pop
mov
inc
outsl
aad
pushf
dec
je
sbb
lcall
out
sub
inc
into
mov
sub
push
rcrl
cmp
push
ljmp
jbe
repz
or
or
or
jmp
add
and
ret
lods
jp
pop
stos
push
pop
cmpsb
fcomps
mov
dec
inc
lods
insl
or
into
sarb
rcrl
and
pop
xchg
cmp
imul
fmul
cli
in
dec
stos
sbb
incl
leave
imul
and
fwait
mov
idivb
ljmp
rol
mov
xor
adc
adc
stos
pop
and
and
mov
mov
inc
sbb
data16
mov
roll
enter
mov
dec
aad
rclb
add
add
pop
xchg
out
sub
xlat
inc
rcrb
cmp
iret
mov
mov
shll
scas
add
push
xor
mov
rcrb
or
jecxz
ficoml
pop
xor
ds
mov
cmp
out
xlat
pop
push
ret
mov
cli
stos
jo
pop
loope
pop
mov
mov
rcl
leave
je
gs
jbe
sahf
in
xor
adc
ret
sub
xorb
cmp
dec
add
adc
inc
add
mov
pop
je
mull
out
xlat
add
jge
out
mov
xor
test
lock
mov
inc
push
arpl
fucomi
mov
jge
shrl
ds
xchg
sahf
xchg
loopne
jl
outsl
mov
test
lods
jne
and
mov
lock
dec
bound
or
rolb
ss
test
mov
dec
fs
inc
or
dec
pop
aam
mov
test
add
sbb
lret
push
and
cmpsl
pop
test
jmp
loopne
test
cmp
sahf
rorl
dec
outsl
xor
sbb
js
lods
out
xchg
movsb
sahf
enter
cmp
das
roll
leave
mov
shr
adc
pop
repz
jnp
aad
ret
cmp
ds
lock
shrb
test
push
in
fistpll
xor
dec
test
push
and
cld
xchg
mov
insb
cmpsb
jne
jmp
pop
leave
push
bound
test
aad
pop
stc
push
sub
outsb
pop
inc
orl
loope
or
clc
cmp
push
or
mov
adc
inc
or
in
enter
mov
cli
cwtl
xchg
sarb
mov
dec
jg
push
arpl
fs
loop
dec
ret
cmp
xchg
fbstp
daa
jg
inc
icebp
out
cmp
or
scas
lret
repnz
pop
cmp
imul
mov
sub
scas
das
jecxz
das
enter
mov
test
jmp
fnstsw
dec
dec
xor
push
loopne
lret
mov
sbb
into
sbb
std
jmp
xor
xchg
lret
pop
cmp
nop
xchg
repnz
repz
lret
arpl
xlat
inc
decb
sbbb
xorb
andl
and
les
pushf
xchg
mov
sar
imul
adc
lds
mov
push
movswl
mov
xor
sbb
adc
jecxz
iret
roll
cwtl
adc
and
xor
inc
jle
idivb
cmpb
jecxz
adc
ja
iret
pop
xchg
mov
jg
in
mov
mov
dec
aad
addr16
cs
outsb
mov
imul
loop
scas
loop
push
std
aad
test
dec
int3
and
fidivs
push
cmpsl
push
push
rclb
pushf
or
add
mov
push
iret
pop
jbe
jge
sub
dec
leave
jne
mov
les
notb
dec
add
mov
pop
mov
out
mov
mov
notb
jbe
pop
jae
and
mov
std
pop
or
or
add
xor
xchg
dec
cli
mov
loopne
jp
cmpsb
xor
add
fisubl
in
xchg
xlat
testb
ja
pop
cltd
mov
aam
repnz
outsb
stos
stc
and
into
aas
lcall
aaa
mov
adc
imul
out
xchg
mov
clc
push
add
ss
aaa
clc
jmp
int3
inc
in
punpckhdq
jae
push
dec
stos
mov
jg
jp
add
add
xchg
iret
jg
enter
adc
push
sub
addl
adc
inc
int3
inc
cwtl
push
dec
inc
test
and
es
push
fdivs
push
xchg
inc
out
jmp
jbe
mov
or
jecxz
mov
sbb
inc
mov
push
sub
jecxz
imul
dec
jb
xchg
push
arpl
mov
mov
jo
mov
dec
xchg
xchg
mov
data16
pop
inc
mov
lea
or
mov
adc
jecxz
cmp
fistps
sbb
add
pop
nop
xchg
sbb
out
ja
inc
shl
loop
mov
add
ror
cmp
fwait
inc
dec
orb
adc
out
sub
fmulp
sub
xlat
movsl
gs
inc
dec
lods
les
xor
and
popf
lea
in
cmp
dec
and
inc
cld
mov
dec
mov
cmp
orl
inc
mov
mov
pusha
pop
pop
idivb
in
notl
lcall
lds
adc
inc
pop
mov
jl
mov
mov
xor
mov
sti
pop
fisttpll
cltd
ss
cli
push
ret
cmp
sbb
out
mov
sub
pop
test
mov
mov
movsl
and
ljmp
ret
inc
outsb
sbb
push
sbb
rclb
push
xor
pop
daa
sarl
dec
cmp
out
push
loope
xchg
clc
movsl
rorl
outsl
mov
ljmp
mov
movsb
fsubrp
xchg
cltd
dec
inc
push
loope
cmp
sbb
cld
cmpsb
add
dec
divl
adc
in
iret
jp
pop
aam
std
outsl
xchg
xchg
int3
adc
pop
add
or
orb
fucom
cmp
pop
lock
xorb
push
rolb
mov
pop
cltd
clc
fcompl
push
or
outsl
lahf
push
mov
int
add
push
cmc
cmp
std
cmp
dec
push
mov
mov
pop
scas
add
pusha
mov
ficompl
int3
lret
xor
decl
loopne
icebp
pushl
test
arpl
out
rorl
dec
sbb
fsubrl
mov
je
in
nop
sub
jle
jg
push
lods
dec
sbb
roll
jb
repnz
test
push
sbb
adc
mov
add
mov
add
pop
or
addl
dec
add
mov
mov
pop
mov
inc
mov
into
dec
cmp
mov
scas
stos
aam
inc
lea
andb
aaa
dec
mov
imul
xor
out
gs
out
cli
sbb
sub
jg
mov
cmpsl
dec
mov
push
and
fmuls
popf
mov
das
jle
push
adc
mov
or
sub
scas
gs
push
outsb
push
loope
int3
push
addb
pop
dec
in
and
or
clc
das
and
xchg
ss
mov
and
int
pop
fimull
xor
sahf
push
movsl
mov
jno
fcomps
outsl
cmc
mov
insb
push
mov
popf
insl
lea
aas
daa
call
pushf
nop
jg
movsl
mov
mov
mov
bound
dec
cmp
or
in
jne
and
pushf
pusha
sbb
cmp
dec
cli
std
push
fdiv
jne
pushf
sub
ja
adc
stos
inc
mov
rorb
xlat
mov
add
test
inc
in
subb
xchg
test
adc
cs
fisubrl
arpl
loopne
cmc
xor
jmp
out
pop
leave
in
push
sub
popa
inc
and
cmpsl
pop
cmp
data16
lcall
cmc
dec
and
mov
out
repnz
inc
cmpsl
mov
ret
sbb
fxch
mov
mov
add
cmpsl
enter
pop
dec
test
das
pop
call
icebp
cld
or
sbb
scas
adc
sbb
das
mov
jae
push
or
loopne
icebp
into
lods
rcl
dec
sti
jbe
dec
jo
pop
iret
out
adc
inc
sbb
push
lods
adc
shr
dec
cmp
fistpll
cwtl
faddl
addb
or
aas
out
bound
mov
cmp
cmp
je
cld
es
or
aad
call
addr16
pop
lahf
inc
mov
ljmp
xchg
xchg
fsubs
mov
pop
mov
inc
jp
out
push
inc
adc
addb
enter
inc
test
or
xchg
jmp
scas
scas
std
push
fistl
xor
cwtl
and
outsl
jbe
mov
andb
lcall
or
mov
sti
dec
scas
dec
test
add
lret
cmp
jg
outsb
and
repz
mov
xchg
xor
arpl
mov
cwtl
sub
push
insb
shr
fimull
mov
dec
and
bound
or
xor
cli
out
stos
orl
rclb
lds
dec
popf
mov
mov
cmp
add
div
push
push
xchg
xchg
jns
inc
leave
xlat
cmp
lds
xchg
jecxz
lahf
or
pop
pushf
sub
adcb
mov
ficomps
adc
cmc
and
xchg
and
scas
sub
mov
lret
mov
push
loop
jecxz
incl
inc
push
xor
rorl
mov
and
dec
pop
mov
xabort
pop
sub
mov
leave
adc
leave
jmp
xchg
or
mov
pop
arpl
mov
aas
xlat
sbb
shlb
lea
dec
pop
hlt
out
or
cli
xchg
cwtl
arpl
pop
cld
mov
push
sbb
xchg
dec
into
stos
adc
frstor
inc
shlb
aam
adc
lds
orl
push
sub
xchg
mov
repnz
ret
jne
push
xchg
data16
xchg
stos
frstor
push
loope
xlat
xor
xchg
test
popa
or
adc
jns
sarl
int
movups
stc
test
jne
xchg
pusha
addr16
sub
in
mov
not
rorl
mov
mulb
jns
push
sar
pop
cmpsl
dec
outsl
aas
xchg
test
and
xchg
pop
shll
lahf
in
inc
pop
mov
and
pop
xchg
jb
idivl
ret
outsb
ja
mov
adc
flds
jne
cld
imull
insl
mov
call
jns
add
xchg
bound
arpl
mov
mov
mov
push
loopne
cmpsl
inc
daa
push
xchg
and
xchg
ds
dec
jnp
pop
sub
mov
push
push
jmp
add
pop
lret
jle
fistpll
scas
fwait
mov
push
or
in
out
sub
dec
pop
daa
loope
fisttpll
fcomps
xchg
adc
insb
xor
das
ljmp
ja
mov
lock
andb
repz
gs
cld
dec
add
or
lahf
repnz
or
rcll
cwtl
lret
jge
mov
jne
pop
sahf
xor
lds
jl
cmp
cld
mov
xchg
out
lahf
dec
pop
dec
mull
add
das
sub
lret
xor
insl
movsb
cmc
test
ret
cmp
enter
push
scas
mov
or
mov
xor
fnsave
push
xor
jp
pop
jle
mul
lret
mov
pop
les
adc
push
push
rcll
das
test
sub
sbb
in
dec
jp
or
xchg
js
mov
xor
mov
inc
or
xor
xchg
jno
dec
mov
test
xchg
pusha
lock
push
in
daa
aad
dec
dec
movsb
mov
movsl
xchg
add
inc
push
adc
and
sub
clc
push
cwtl
sub
insb
dec
or
loopne
pushf
sbb
adc
inc
test
aaa
inc
xchg
mov
xchg
in
or
mov
adc
mov
fistl
repz
cmpsl
cmp
mov
add
mov
imull
mov
dec
mov
popa
mov
dec
mov
xchg
sbb
mov
sub
pop
jnp
mov
lods
mov
push
ficoml
mov
in
xor
arpl
adc
out
leave
in
cltd
mov
cmpsb
jae
xor
lock
sub
adc
cltd
mov
inc
jb
bound
push
dec
loopne
and
dec
and
xor
icebp
test
outsb
enter
xchg
dec
stos
enter
lahf
out
negb
out
mov
out
aad
fisubl
mov
cmpsb
dec
mov
dec
cmc
mov
mov
lret
cld
cmp
ja,pn
or
fldenv
xchg
xor
icebp
aaa
sub
gs
mov
imul
add
add
jo
jnp
dec
mov
iret
iret
adc
mov
or
jne
rol
fcompl
cmp
cmpsb
repnz
adc
jnp
sbb
or
xor
inc
scas
ds
xchg
int3
icebp
scas
lds
xchg
jmp
push
daa
add
mov
pop
xchg
das
adc
lret
or
mov
push
inc
jl
out
stc
cmp
bt
inc
push
push
popf
cvtps2pd
push
jnp
jnp
cmp
mov
in
icebp
stos
sbb
push
sahf
jno
imul
data16
rcll
je
icebp
div
sub
aam
or
inc
mov
out
cmp
cmp
cmc
orb
sub
fsubrl
mov
jb
les
xlat
les
cwtl
gs
test
mov
and
out
fisttpll
andl
jge
pop
ret
cmpsb
xchg
xchg
leave
rol
std
add
cmc
add
mov
leave
mov
mov
mov
ja
mov
test
sbbl
loope
pop
sbb
xchg
push
xlat
inc
xchg
cs
lahf
sub
ja
sbb
cmp
jno
pop
daa
xor
push
jae
cwtl
xchg
dec
cli
xor
push
jae
cmp
je
jbe
add
pop
stos
pop
pop
adc
cmp
xchg
je
stc
fcoms
dec
xorb
inc
dec
int3
push
and
negb
jb
inc
cld
mov
mov
pop
dec
inc
inc
out
fisubrs
adc
fiadds
sbb
hlt
mov
fbstp
inc
and
add
xlat
sub
or
pop
or
jg
xchg
lods
in
mov
and
ret
mov
mov
or
cmp
aaa
cmpsb
inc
fldt
lock
call
stc
shll
movsl
into
dec
add
and
cmp
sub
xchg
xchg
and
dec
and
mov
aaa
push
xchg
sahf
dec
xchg
mov
out
scas
mov
sub
jmp
dec
mov
mov
adc
xchg
mov
movsb
pusha
adc
test
test
or
je
or
push
in
fiadds
mov
hlt
sub
cwtl
mov
pop
scas
add
mov
mov
cmc
xorb
mov
or
push
pop
popf
int
pop
inc
xchg
xchg
out
and
inc
sti
or
hlt
mov
sbb
cld
mov
add
icebp
mov
inc
outsb
or
xchg
fst
dec
mov
mov
push
shrl
aad
sti
jno
nop
cmp
inc
push
sbb
jnp
fistpll
clc
lods
hlt
mov
mov
psadbw
sbb
ret
rorb
test
sub
repz
and
subb
xor
jge
push
testb
call
and
bnd
or
jne
sub
dec
movsl
cmp
fdivp
mov
mov
repnz
mov
jbe
push
or
lret
hlt
or
or
fdivs
bound
mov
mov
imul
dec
push
into
int
imulb
sbb
outsl
int
mov
subl
push
dec
lahf
jmp
push
das
push
lret
sbb
xor
lods
add
xor
cs
push
js
aam
fcmovnb
call
fists
cmp
xchg
sbb
call
imul
in
mov
mov
dec
push
out
in
jle
loope
movsl
int
push
mov
mov
and
jns
popa
stc
imul
sub
push
pop
into
push
add
sbb
lcall
clc
cmp
pop
outsl
mov
sarl
push
mov
dec
daa
jbe
sub
add
inc
jnp
jle
ljmp
shl
push
mov
iret
scas
flds
sub
pop
das
adc
push
jne
pop
cmpsb
popa
rclb
movd
pushf
inc
sub
in
inc
fistpl
xchg
sbb
stc
cmpsb
fbld
xor
shlb
xor
xor
lea
imul
push
adc
loope
repz
jge
push
mov
outsb
cmp
in
cmp
xchg
testl
sti
and
sub
les
cmp
je
mov
xchg
repnz
and
jg
and
xor
mov
jecxz
and
jno
push
push
stc
jns
jle
in
iret
mov
sub
mov
mov
add
mov
cmpsb
mov
and
shlb
aaa
nop
aaa
jne
push
cmp
fidivl
ficompl
adc
outsb
cli
cltd
push
push
sbb
test
arpl
shlb
cmp
cmpsl
imul
dec
xchg
adc
inc
out
add
aam
inc
xchg
jae
add
dec
mov
mov
in
aam
mov
inc
aad
mov
or
les
into
sbb
or
push
pop
insb
adc
imul
mov
cmc
dec
add
lods
dec
cmp
mov
stos
sahf
call
mov
loopne
xchg
pusha
lea
in
das
das
outsl
and
int3
in
adc
xchg
pop
imul
mov
xor
int
loope
xor
ss
out
popa
mov
fs
jno
divb
sub
inc
lock
jbe
clc
cmpsb
loop
mov
mov
inc
xchg
push
rorl
pop
add
insb
cmc
sub
popf
enter
xor
jmp
cmp
cwtl
sub
sub
push
mov
pop
sbb
mov
push
shll
ret
cmp
test
push
lcall
mov
mov
popa
ja
push
adc
or
in
jns
pop
xor
cmp
jae
sbb
cmpsb
das
jl
add
int3
stc
loope
fcoml
jp
jno
in
pop
pushf
sub
push
mov
jecxz
mov
xchg
call
imul
pop
imul
lods
sbb
out
shlb
loop
mov
js
and
daa
jp
adc
imul
es
jno
fxtract
dec
push
cmp
cmp
or
adc
fisttps
cmp
xchg
adc
out
mov
aas
sbb
mov
aam
mov
xor
mov
cmp
push
sbb
out
nop
mov
push
adc
out
xchg
imul
cmc
inc
jno
out
inc
mov
int
sub
inc
lcall
mov
inc
jle
cmp
adc
into
dec
dec
imul
and
inc
adc
push
dec
xchg
inc
jnp
addb
mov
test
mov
sarb
or
fldcw
adc
test
out
in
decl
sub
push
icebp
insb
je
xor
and
or
aam
dec
sbb
addl
sub
jo
xlat
sbb
xchg
dec
add
leave
out
add
movsl
ja
jno
sbb
and
fmuls
dec
xchg
frstor
and
pop
daa
jo
aad
stos
add
movsl
xchg
jl
stos
push
push
les
aaa
lock
jne
cmp
cmp
xor
push
lock
dec
jb
movsl
push
and
pop
xchg
sbb
inc
mov
adc
xor
imul
adc
push
and
push
sbb
loop
mov
jo
aam
dec
xor
js
int
mov
dec
sub
bound
sub
clc
repnz
sti
pop
add
jo
xchg
std
add
sar
popa
sub
inc
xchg
mull
outsb
sbb
xor
sub
xor
pop
aad
test
dec
inc
xorl
rol
inc
in
pop
pusha
push
jne
stos
inc
dec
mov
bound
mul
imul
mov
das
or
daa
data16
jno
adc
gs
aad
sbb
insb
or
out
in
adc
lcall
and
xchg
mull
jbe
cmp
cwtl
std
imul
xchg
in
mov
in
mov
mov
enter
jp
bound
addr16
inc
mov
shll
pushf
push
ret
sbb
add
and
dec
or
movsb
push
mov
and
icebp
xchg
inc
and
mov
scas
shlb
stos
lret
sbb
aam
dec
push
leave
mov
pop
push
cwtl
adcl
rcrl
push
fs
insl
shrb
aad
mov
je
dec
movsb
cmp
or
fcmovb
and
or
das
mov
pop
jo
mov
dec
cld
fmull
mov
ret
clc
pop
push
aas
jmp
mov
scas
mov
test
xchg
loopne
sbb
push
jmp
mov
jae
outsb
mov
std
ja
out
les
push
jl
xor
inc
arpl
inc
es
push
arpl
popl
aas
out
dec
xor
imul
xchg
pop
aaa
outsb
std
mov
orl
out
mov
test
xchg
pop
std
or
cmc
js
pusha
jno,pn
pop
mov
dec
fwait
sbb
mov
mov
push
mov
sub
jle
push
pop
inc
je
cli
gs
insb
mov
xchg
js
es
xchg
inc
shrl
and
mov
icebp
cwtl
mov
ret
fstps
shll
dec
rol
test
ss
mov
xchg
std
cmpsl
fmul
outsl
xor
push
push
sbb
add
mov
mov
or
xchg
icebp
sub
xor
jp
dec
xor
adc
jmp
push
adc
jne
push
fldl2t
mov
arpl
sahf
pop
adc
cltd
int3
leave
sbb
xchg
call
sub
xchg
dec
mov
jbe,pt
insl
lods
imul
ret
mov
push
fisttpl
int
popf
das
mov
cmc
xchg
ljmp
pushf
lods
sarb
xchg
sub
aam
aad
es
pop
xor
aam
faddl
push
lds
push
in
jmp
jge
shll
mov
jg
fnstsw
jp
scas
push
addr16
mov
dec
mov
pop
inc
cmpsb
ja
insl
jb
shr
mov
loopne
pusha
xchg
stos
or
push
test
inc
shl
cltd
subb
mov
xor
xor
lret
out
adc
mov
sbb
out
sbb
jne
out
mov
push
fimull
cmp
mov
pop
push
mull
subl
scas
repz
push
leave
lods
cmp
adc
rcr
sti
sub
add
push
xchg
in
jg
rorl
add
out
and
andl
mov
cmp
jle
inc
sarb
push
lcall
xchg
push
push
sub
sub
jp
mov
push
dec
push
jnp
or
hlt
mov
stc
mov
test
loop
flds
cld
test
ja
out
and
lret
push
aad
xchg
in
lcall
inc
and
sbb
lahf
cmp
lret
sbb
jge
xor
les
push
or
jno
cmp
add
pop
int
decb
dec
daa
xchg
xor
xor
xchg
pop
adc
mov
testb
movsb
push
repz
xchg
iret
or
jge
pop
jnp
jae
mov
dec
fiaddl
test
in
jb
jno
xor
faddl
cwtl
inc
adc
adc
sbb
add
ss
push
sahf
fsubs
incb
into
out
in
push
in
inc
mov
out
aas
das
jo
xchg
cmp
dec
sub
jle
push
push
push
fdivrs
loope
inc
popa
add
adc
ss
aam
mov
sbb
iret
mov
sub
pusha
das
adc
out
test
das
fwait
lea
hlt
xchg
push
ja
mov
inc
mov
dec
pop
cmp
fldenv
inc
lock
sbb
das
or
push
cmp
sbb
dec
pusha
xchg
pop
in
inc
inc
pusha
inc
loop
rolb
loope
mov
inc
or
loopne
mov
fbstp
mov
dec
scas
cmp
in
sub
aam
mov
popf
sbb
mov
pop
dec
jge
add
push
into
xor
in
push
lret
jge
insl
xchg
lock
movsl
in
mov
roll
mov
in
shl
movsl
or
and
lods
xor
sub
aaa
jp
xchg
in
mov
or
xor
rcll
cmp
insl
sbb
roll
dec
sbb
xchg
push
push
push
lock
or
pop
xchg
mov
in
inc
sbb
lock
outsl
jae
xor
sti
push
call
jne
call
rcrb
or
aad
aad
inc
call
or
xor
mov
mov
dec
fs
mov
divl
cltd
sti
in
test
jge
loopne
fisttps
pop
shll
add
or
aam
loope
clc
rorl
pusha
pop
jmp
jo
adc
push
scas
add
lret
andb
inc
outsb
mov
icebp
les
fs
repz
xchg
out
push
xor
stos
inc
lret
and
add
test
push
insl
mov
jge
lret
fadd
mov
dec
pop
adc
mov
imul
and
in
push
adc
js
loopne
push
sub
mov
fildll
scas
xor
xchg
push
pop
cs
lods
jo
iret
repnz
das
mov
cmpsl
jge
or
add
lock
push
loopne
mov
mov
sbb
cwtl
inc
jo
fldt
loopne
scas
popf
pop
das
mov
out
sub
add
push
jl
scas
dec
js
scas
push
pop
ljmp
das
mov
add
iret
mov
mov
cli
shl
push
xchg
mov
or
xchg
fiadds
push
xchg
push
loope
pop
lret
and
loopne
pushf
imul
cmp
aad
addr16
mov
pop
cmc
pop
jae
mov
or
in
xchg
fmull
out
rcr
je
hlt
xor
insb
pop
or
sbb
inc
and
pusha
inc
pop
dec
ret
mov
shrl
popf
arpl
sbb
pop
sbb
adc
movsl
and
sbb
cmp
adc
inc
fcmovnb
insb
in
movsb
test
das
nop
movsb
sbb
xchg
hlt
dec
mov
pop
in
jnp
xor
inc
addl
scas
sub
pop
sbbb
sbb
loop
ljmpw
mov
xor
pop
push
stc
xchg
aaa
push
cmp
int
stos
pop
lea
repz
dec
mov
shll
addr16
sbb
jno
popf
jge
std
sub
les
sbb
fs
out
es
or
lock
fldl
cmovs
test
mov
loopne
mov
and
xchg
lcall
imul
push
mov
pop
jo
dec
cmp
or
inc
and
xor
imul
imul
mov
iret
je
dec
xchg
cmp
pop
cld
daa
sub
xchg
sbb
jne
rcrl
sbb
das
xchg
out
cmp
xor
push
jae
lret
shlb
and
mov
scas
cwtl
outsb
outsb
push
cmc
jmp
insl
jns
mov
lock
xlat
fbld
cmpsl
add
mov
das
inc
pop
adc
negb
sub
lcall
cli
stos
jae
scas
aad
or
sbb
rolb
test
aad
add
pop
cs
gs
shl
xor
pop
xchg
mov
cmpsb
stos
imul
push
xchg
mov
int3
ds
sbb
mov
inc
inc
std
cmp
repnz
pop
or
mov
movsb
aam
push
pop
scas
and
outsb
xor
fwait
xor
push
mov
jg
dec
lahf
lret
fwait
adc
add
loope
inc
pop
cmp
sbbb
mov
jmp
adc
push
cmpsl
xchg
ficomps
mov
cmp
or
jmp
sub
jmp
std
or
jnp
pop
add
push
and
movsb
xchg
imul
daa
std
testb
mov
call
scas
mov
sub
adc
test
mov
and
je
mov
dec
push
out
lret
pop
mov
adc
dec
pop
std
xchg
adc
fnsave
sbb
adc
add
orb
je
mov
stc
ficoms
lret
mov
cmpsb
mov
push
xor
fwait
adc
inc
dec
dec
push
test
enter
dec
adc
push
loop
rcrl
in
lret
push
in
add
push
js
jp
or
fdivs
jmp
loop
jmp
and
ret
fisubs
in
dec
push
mov
test
clc
out
mov
jl
loope
jl
fwait
adc
ljmp
lcall
sub
loope
mov
notb
lock
icebp
js
xchg
sbb
bound
xchg
pop
add
cmpsb
cs
jnp
repnz
cs
in
pop
dec
or
jbe
roll
stos
push
jl
dec
push
jo
fnstsw
push
xlat
cmp
outsl
mov
iret
cmpsl
push
mov
jmp
mov
inc
imul
mov
rol
or
dec
dec
sub
cmp
pushf
push
mov
inc
dec
xlat
scas
loop
xchg
pop
mov
shl
inc
orl
ret
cwtl
outsl
and
xor
aam
push
pop
push
stos
cmp
xor
mov
je
cmp
cmp
mov
aaa
mov
addr16
test
out
jl
jns
inc
mov
xchg
outsl
in
fldt
loop
arpl
xchg
sbb
push
jno
jb
int
loop
ja
testl
fidivrl
add
loope
addr16
and
mov
jle
jmp
mov
mov
cmpps
or
icebp
addr16
repz
in
fdivrl
fs
lret
mov
fwait
add
ficomps
cmpb
mov
or
cmpsb
mov
mov
pop
lea
js
jle
and
cmp
push
ja
sub
repz
enter
mov
shlb
and
push
pushf
sub
adc
fistps
ljmp
push
lcall
adc
dec
adc
outsb
mov
roll
out
pop
inc
inc
sti
xchg
adc
cmp
popa
adcb
and
xchg
js
imul
push
jg
aaa
popa
pushl
sub
or
fimull
mov
cmp
pop
mov
fs
or
jnp
xchg
fists
cld
mov
xor
mov
cld
push
sub
shlb
ds
movsb
data16
mov
sbbb
push
insb
fnstsw
outsl
cmpsb
adc
mov
dec
pop
loope
bound
jae
mov
leave
aam
cmp
mov
ja
push
sub
cmpsl
pop
sbb
or
aad
mov
cmpsl
sub
and
outsb
push
cmc
mov
lods
mov
mov
outsb
jmp
inc
scas
ds
pop
mov
mov
dec
scas
cmpsl
ljmp
fisubs
cmpsl
insb
cmp
xchg
xor
mov
jno
jl
pop
stos
ljmp
push
inc
inc
sbb
pusha
adc
ds
push
int3
mov
shl
testl
inc
xlat
ret
jmp
imul
sub
aad
sbb
xor
inc
ja
add
pop
popf
mov
rcll
in
mov
pop
ja
in
rorw
ret
sti
out
xor
mov
push
repnz
inc
sub
aaa
out
jns
sarb
clc
fnstenv
pop
arpl
int
test
and
loope
pop
inc
add
scas
push
mov
clc
jbe
out
in
hlt
ds
das
xor
rcrb
xchg
xor
scas
mov
pop
sbb
cld
jae
pop
pop
xchg
cmc
pop
mov
cmp
or
test
mov
fsubrl
mov
xorb
rcr
push
addl
int
sbb
stos
or
sub
or
or
loop
jecxz
out
sahf
orl
data16
sbb
or
xorb
sub
and
push
aaa
mov
aas
ds
add
inc
mov
das
push
fidivs
aam
fucomi
insl
insb
arpl
and
or
hlt
or
mov
je
in
outsl
sahf
shll
sbb
jg
xor
push
test
in
fiadds
cli
daa
clc
mov
into
popa
dec
adc
mov
and
sbb
sub
xor
mov
pop
mov
jno
adc
in
scas
mov
nop
insb
or
lret
or
pop
cmpl
enter
or
adc
inc
fdiv
int3
inc
shll
xchg
cmp
xchg
xchg
aaa
lcall
adc
hlt
shr
jge
push
inc
xchg
out
fildll
insl
incl
push
popl
mov
cmc
jb
inc
sbb
inc
imul
mov
jle
jle
clc
xchg
lret
sub
cmc
cli
sbb
cli
mov
sub
jecxz
xchg
or
pop
out
out
movsb
test
icebp
xor
in
pop
into
outsb
cwtl
push
pop
test
into
pop
and
jns
and
and
cmp
ja
mov
adc
mov
lret
addr16
mov
xchg
in
lret
jb
and
dec
mov
xchg
call
hlt
cmp
gs
or
pop
mov
dec
jne
pop
repz
push
or
adc
mov
cmpsl
fsubr
xor
sbb
mov
loop
mov
inc
push
cltd
mov
xor
cmpsl
add
aam
cmp
inc
imulb
rcll
mov
or
push
jnp
mov
xchg
mov
inc
arpl
cmp
les
push
push
daa
ljmp
add
cli
daa
sub
jne
pop
inc
lret
push
lcall
jnp
stc
fstpl
ss
xor
or
aad
lahf
and
jbe
mov
leave
jne
and
sbb
sub
cmp
in
call
shrl
lahf
out
mov
dec
aad
jo
jle
pop
push
push
and
je
cltd
dec
lods
pop
daa
cmp
or
sahf
imul
inc
and
xchg
ss
mov
mov
push
xchg
rclb
mov
push
ljmp
mov
imul
mov
push
dec
mov
xchg
mov
stos
jle
roll
mov
lock
mov
mov
pop
mov
xor
jno
incl
add
xor
or
and
pushf
xlat
int3
lahf
pop
std
pop
jecxz
jmp
add
xor
repz
adc
popf
test
push
push
aas
mov
fnsave
das
ret
jb
shlb
mov
popa
xor
test
jno
jecxz
and
cmp
jno
fistpl
push
out
pusha
dec
mov
push
test
lock
or
xor
fcom
jge
and
mov
xor
or
sbb
push
mov
or
out
ret
sub
icebp
or
and
icebp
inc
mov
cmp
mov
movsl
out
shlb
scas
hlt
xchg
aad
aaa
loope
mov
aam
cmp
sub
mov
leave
enter
pop
mov
imul
mov
cli
inc
nop
xchg
xchg
adc
inc
scas
outsb
mov
popl
mov
mov
add
ret
in
imul
xor
mov
pop
iret
cmp
stos
adc
cmp
shl
or
bound
fsub
add
ficompl
insb
mov
fstl
jnp
jbe
and
lds
xchg
cmp
hlt
add
mov
jns
push
dec
fsts
mov
shl
add
repz
aad
lock
cltd
cmp
inc
mov
mov
addr16
mov
fs
add
roll
inc
inc
adc
add
pop
cmpsb
adc
sbb
mov
push
pop
push
test
and
xchg
push
cmp
repz
jo
test
xchg
mov
jae
mov
or
repnz
shll
aaa
push
adc
mov
cmp
test
cs
int
adc
push
jns
gs
xchg
pop
sbb
out
ficompl
xchg
insl
repz
add
stos
cmp
fcomps
daa
in
mov
insb
jne
loope
inc
and
roll
rol
stos
add
mov
or
sbb
xchg
imul
fdiv
sub
lahf
sbb
fldt
mov
add
loope
loope
and
loop
mov
inc
add
mov
xchg
add
sarb
pop
mov
stc
jb
push
sub
adc
out
je
mov
push
add
ljmp
fcoms
push
jnp
pop
pusha
mov
stos
push
jne
in
pop
jge
dec
and
pop
das
mov
in
adc
jl,pn
mov
sbb
push
rcr
jg
xor
in
mov
cmc
or
xchg
daa
sbb
mov
scas
andb
adc
jecxz
cmp
cmc
xchg
pop
fwait
or
pop
mov
push
roll
push
pop
mov
ror
mov
insb
stos
jmp
inc
pop
cmp
jo
and
dec
sub
mov
mov
fildll
rcl
xor
cmp
cmp
push
sahf
leave
outsl
mov
jns
push
int
xchg
lret
pop
gs
inc
inc
movsl
bnd
sub
xchg
inc
mov
imul
je
imul
and
mov
push
lock
mov
not
je
xchg
xchg
or
jmp
add
mov
dec
mov
movsl
jge
pop
xchg
add
push
lods
sahf
cmp
cmp
jmp
les
pop
aam
pop
push
xchg
push
cmp
xchg
pop
push
jno
dec
pop
push
nop
dec
mov
dec
xchg
das
sub
fldcw
lcall
test
push
icebp
mov
out
dec
addb
fcomps
jne
mov
aam
sbb
lea
rorb
pop
loope
ds
insl
aad
fldcw
lds
in
adc
shl
sbb
addr16
out
in
jecxz
xchg
enter
mov
roll
or
jmp
das
imul
push
fdiv
stos
loope
cmc
jbe
or
enter
lea
insb
pushf
loopne
jecxz
mov
and
dec
clc
bound
idivl
gs
imul
xor
and
in
arpl
and
ret
jge
and
ja
in
xor
je
push
scas
cmp
cmc
cmp
or
cmp
lret
clc
push
jg
sbb
lcall
xlat
fstpt
sub
mov
xor
pushf
call
lods
dec
aaa
jnp
pop
and
jae
push
and
jge
jb
or
jae
sub
jl
jmp
int
lock
push
push
call
and
sub
pop
and
shlb
decb
lret
repz
and
add
movsl
xor
xchg
lods
sar
jmp
pop
adc
jbe
and
mov
stos
xchg
push
aad
test
inc
mov
out
sbb
dec
xor
int
jno
rol
cltd
cmc
mov
pop
or
xlat
mov
push
xor
inc
hlt
inc
xor
idivl
into
ds
inc
jmp
hlt
in
divb
cmp
cmp
push
fwait
pop
xchg
pop
pop
cmp
fnstcw
lret
inc
or
repnz
iret
nop
les
arpl
cmc
cltd
adc
roll
in
cmp
ss
push
and
mov
fcomps
aas
sbb
enter
jge
xchg
xor
mov
movb
mov
sub
inc
nop
shlb
xor
aaa
and
push
rcr
ret
cmpsl
lcall
add
lods
lcall
outsb
jg
les
loop
mov
ja
fisttpll
mov
in
sarb
push
fldcw
cmp
fwait
gs
pop
pop
test
sbb
mov
test
ja
inc
pop
adc
jae
fists
mov
sti
fistpll
test
add
sbb
pop
in
jg
mov
in
xchg
and
test
adc
add
idiv
dec
pop
leave
jle
sub
out
add
lahf
dec
loope
dec
movsl
adc
in
xchg
out
sahf
mov
in
pop
mov
push
stc
scas
xchg
loop
mov
lods
test
xorb
scas
xor
movsb
jmp
inc
negb
lret
push
test
into
sarl
inc
movsb
out
jae
dec
and
addb
rcll
sbb
cmp
or
ror
push
insl
lahf
dec
xchg
mov
mov
pushf
jge
jbe
inc
jae
push
mov
out
out
sub
lods
sbb
mov
loopne
aaa
fs
roll
xor
mov
out
loope
in
cmc
jno
rol
aas
or
out
sti
mov
addr16
in
cld
push
in
daa
adc
adc
mov
cmp
sbb
pop
sbb
shl
in
jecxz
shrl
add
or
ret
pop
cmpsb
jg
test
addr16
dec
ljmp
lret
aam
in
mov
es
xchg
adc
in
and
jo
adc
enter
ficoms
inc
rcrl
insb
rorl
xchg
bound
scas
cwtl
mov
scas
fmuls
inc
iret
les
lea
xor
out
mov
or
lahf
xchg
cmpsl
mov
sti
cmpsb
ficoms
cmp
inc
clc
pushf
mov
aam
mov
or
imul
cmp
cmp
mov
cmc
lods
jno
or
cmpb
lret
push
daa
jge
mov
not
add
je
mov
into
jl
sub
enter
inc
inc
ret
insb
outsb
iret
pop
popf
pop
jns
pop
jl
pop
mov
push
or
mov
leave
es
adc
jle
jne
xor
sub
mov
rcll
push
push
jnp
repnz
mov
pop
pop
cwtl
and
dec
fmull
jle
push
or
add
dec
ficompl
inc
test
fcomps
mov
jnp
jae
push
les
xor
dec
adc
cmp
movsl
add
lods
movsb
enter
imul
adc
pop
ds
cmp
cs
pop
ja
inc
add
add
mov
out
push
or
les
lock
pop
fwait
cmc
decl
notb
rcll
xor
rorb
inc
pop
and
rolb
push
out
mov
mov
xor
sbb
cmp
imul
les
xchg
push
cltd
mov
xchg
mov
insb
inc
sbb
xchg
add
mov
lret
jns
xchg
xchg
mov
and
inc
mov
push
mov
leave
mov
fbld
add
shl
fsubrs
or
fs
cli
lret
jb
ja
pop
stos
xchg
testl
push
jmp
outsb
push
es
and
mov
xchg
in
jne
gs
scas
dec
adc
xchg
sbb
cmp
stos
jae
adc
or
out
mov
std
and
scas
stc
aam
sub
jge
cmp
outsb
add
sub
loopne
or
sbbb
xorb
insb
mov
or
add
mov
popa
and
jne
cmp
push
jl
dec
shlb
jmp
mov
mov
repnz
jp
pop
lock
movsl
icebp
loope
decb
scas
dec
jle
daa
mov
clc
or
mov
jns
mov
fistps
jl
aas
cmp
cld
inc
out
push
push
inc
cmpsb
fcompl
xchg
sub
inc
push
movsl
xchg
lds
lahf
popa
loop
out
pop
jnp
jbe
cli
xor
outsb
sbb
or
or
dec
inc
xchg
and
mov
aas
dec
cmp
dec
cmp
ret
outsb
mov
sub
pop
js
push
pop
js
xchg
inc
loopne
jmp
pop
movsl
scas
push
outsl
jne
xchg
push
or
pop
lods
lret
popf
sti
sub
js
jmp
jb
jno
ds
movsl
jmp
lahf
aam
mov
gs
cmp
add
test
sub
xchg
leave
out
sub
jnp
xor
add
pop
shrl
cs
test
add
or
subb
mov
sti
mov
inc
dec
mov
cs
inc
leave
testb
pop
ljmp
das
inc
aad
pop
lock
dec
adc
das
xor
pop
lds
lds
stos
lods
notl
jmp
roll
jg
lcall
fldt
outsl
jmp
fcom
test
pop
add
shrb
or
sbb
int
lcall
dec
iret
push
ljmp
js
stos
adc
call
and
push
out
inc
lock
aas
pop
xchg
cmpsb
mov
push
push
subb
mov
ret
into
loop
xor
xor
rolb
cmp
jp
aas
pushf
dec
cmpsl
and
ret
jmp
imul
cmp
out
shrl
mov
dec
xor
cmpsl
push
ljmp
addb
iret
push
dec
stos
out
or
dec
inc
xchg
cltd
mov
fs
ljmp
sbb
jnp
add
iret
leave
push
mov
ret
hlt
mov
ret
xor
or
sbb
xor
push
icebp
xchg
lock
sahf
mov
lret
mov
testb
lods
adc
cmp
or
mov
pop
enter
cli
test
inc
aam
aad
inc
fs
test
shrb
rclb
xchg
andb
push
arpl
addr16
iret
and
sar
nop
sbbb
or
xor
sbb
mov
in
cmc
sub
scas
pop
pusha
int
cmp
mov
inc
push
int
mov
mov
in
subb
scas
cmpb
pop
cmc
cmp
cmc
insb
shrb
stos
repnz
aam
or
jmp
jecxz
fsubs
xchg
notb
pop
test
out
arpl
pop
cld
push
mov
dec
jg
pop
notb
icebp
dec
es
dec
adc
arpl
inc
inc
orl
mov
repz
movsb
sti
mov
int3
add
inc
sub
mov
xchg
jge
push
and
jae
push
mov
xchg
aad
pop
mov
clc
or
test
aaa
sbbb
xor
and
mov
pop
ds
sbb
popf
ret
jp
dec
mov
push
mov
lds
lret
out
xor
jp
sub
inc
mov
adc
add
mov
mov
stos
loopne
mov
dec
push
test
mov
jbe
shl
push
ja
mov
or
mov
cmp
dec
or
addb
rorl
jle
fisubrl
fwait
in
pop
iret
in
imul
inc
in
mov
out
bound
nop
xchg
clc
es
cmp
js
shlb
mov
jmp
push
inc
mov
jb
cs
jae
addl
pop
das
push
loope
fs
into
push
or
sbb
repz
inc
xchg
or
xchg
inc
add
rcrb
pop
decb
incl
inc
mov
xor
inc
repz
imul
dec
pop
iret
gs
pop
cltd
or
stos
cmovno
popl
ss
repz
adc
sbb
sbb
mov
and
mov
mov
aas
clc
push
push
into
sub
xchg
addr16
dec
and
or
mov
loope
sub
sub
stos
idivl
test
xor
cwtl
std
mov
and
daa
xor
sbb
ljmp
ss
fcom
ss
cmp
mov
mov
arpl
sub
mov
icebp
dec
stos
repnz
cmp
or
sbb
addr16
pop
push
jmp
xor
xchg
mov
and
scas
cmc
dec
or
jns
lods
inc
sub
cmp
or
inc
jge
cmc
push
adc
xchg
dec
cmp
dec
popa
rclb
cs
loop
out
jns
add
inc
xor
mov
test
xchg
push
aas
sahf
lods
xcrypt-cbc
cmpsl
nop
arpl
add
hlt
lock
cli
push
in
fldcw
push
scas
clc
xchg
jb
lahf
daa
out
sub
pop
jl,pt
jle
pushf
sti
pop
lock
ret
bound
test
jno
aad
and
xorb
daa
lods
sub
mov
in
loop
cli
jae
stos
hlt
pop
icebp
adc
and
adc
icebp
popl
push
jmp
in
movsl
adc
cmc
vpunpckhwd
fists
add
int
cli
mov
daa
lock
cwtl
insb
or
sbb
cmpl
pop
outsb
cli
cmp
dec
mov
lock
xchg
and
lea
insl
ljmp
push
or
addr16
push
aam
sbb
lods
dec
nop
xor
mov
fwait
repnz
add
into
jle,pt
mov
or
mov
xchg
pop
dec
arpl
lea
add
mov
inc
pop
mov
test
insl
nop
sarb
ret
push
cmpsb
incb
push
and
pop
test
cmp
inc
cwtl
outsl
xorb
mov
sbb
pop
aaa
insl
dec
xchg
in
xor
movsb
add
not
sbbl
gs
mov
add
shll
repnz
dec
push
jne
fwait
dec
addr16
loope
loope
iret
arpl
outsb
xchg
xor
popf
lods
pop
mov
cmc
sub
loop
sti
std
pop
es
mov
pop
dec
insb
test
mov
scas
push
pop
jmp
cltd
fwait
cmp
pop
or
jmp
inc
xor
push
testl
inc
aas
iret
sub
mov
push
pop
xor
lods
sbb
std
cmp
push
pop
xchg
sub
jg
shll
and
mov
and
ss
mov
mov
or
fs
iret
jo
fucomip
shrb
jae
jae
loopne
pop
sub
mov
fisubrl
adc
int
scas
repz
hlt
incl
jns
mov
xchg
inc
test
or
movsl
stc
ffree
push
mov
dec
pop
lock
imul
addr16
movsl
jae
sarb
in
push
mov
xchg
add
xchg
addr16
pop
sbb
in
daa
filds
cwtl
inc
lret
add
dec
mov
pushf
shrb
je
lock
mov
ds
pop
int3
and
imul
stc
insb
pushf
sbb
push
cltd
je
sbb
mov
xor
enter
sbb
sbb
xchg
ljmp
inc
or
push
aam
outsb
es
fstps
stc
js
scas
dec
daa
ljmp
shr
push
push
xor
fcom
jg
jnp
punpcklbw
popa
jecxz
shlb
icebp
mov
jge
shll
add
adc
ljmp
loope
and
xor
scas
push
mov
lcall
mov
cltd
sbb
and
sti
jle
jae
bswap
lods
aas
mov
sahf
mov
xchg
mov
adcb
repnz
dec
call
lea
jge
in
mov
setbe
add
daa
fidivrl
jbe
lahf
mov
repz
sahf
ljmp
push
sbb
lret
and
mov
fdivrl
adc
fcmovu
mov
cli
mov
cmp
and
mov
out
dec
ss
xchg
loopne
std
fimuls
sub
pushf
std
insl
insb
xchg
insl
or
out
or
ljmp
sbb
mov
fisttpl
dec
pop
jb
bound
jne
movsl
bound
jnp
pop
loope
dec
inc
repnz
adc
dec
pop
insl
jl
jb
jle
xorl
dec
xor
fdivs
inc
add
sbb
xor
jg
fwait
subl
cmpsl
cmp
mov
cmc
xchg
cmp
fidivl
fidivl
sarb
and
shr
and
dec
shll
jp
or
sub
sub
mov
pop
sarb
mov
mov
sbb
lret
js
lods
mov
popa
iret
add
cmc
loop
adc
ficomps
rcr
mov
cmp
cld
lret
sbb
jp
in
clc
mov
gs
stos
dec
scas
jecxz
repz
repnz
pop
ret
in
dec
sbb
mov
addr16
push
bound
lahf
movsb
pop
aas
testl
test
or
inc
jnp
ret
mov
and
mov
stos
xlat
push
ljmp
cwtl
mov
xlat
in
mov
addr16
dec
and
data16
inc
nop
stc
arpl
mov
adc
vsubps
mov
dec
fisubl
push
jecxz
cli
outsb
xor
add
orl
mov
jbe
mov
rcll
mov
cs
cmp
sti
xor
outsl
loope
mov
cmpsl
mov
repnz
xlat
mov
mov
mov
jmp
outsl
mov
mov
mov
cmp
idivl
popf
cmpsl
cld
jb
pop
push
xor
inc
mov
jae
into
pop
and
bound
and
push
add
cmp
inc
iret
mov
dec
inc
sub
shl
xchg
adc
bound
xchg
fdivrl
adc
mov
sbbl
cmp
jmp
push
mov
loope
push
xor
push
jb
rcl
adc
cwtl
cmp
pop
mov
inc
mov
cmpsl
inc
mov
add
mov
stos
add
mov
mov
mov
xor
xchg
in
imul
sti
notl
paddb
in
and
xor
sub
or
mov
scas
daa
out
out
nop
inc
in
push
jmp
mov
jp
xchg
mov
sub
sub
push
in
daa
ffreep
loopne
fmul
sti
cmpsb
mov
in
sbb
aam
jecxz
out
lret
mov
addr16
and
inc
hlt
pop
mov
push
add
aaa
inc
push
imul
lcall
sbb
lods
dec
mov
or
js
add
ret
out
cmp
call
xchg
mov
cmp
int
das
sub
mov
out
inc
nop
movsb
xchg
std
push
lea
aas
shlb
gs
aam
jle
push
pop
mov
cmp
cmp
les
cmp
pop
or
jo
pusha
push
mov
cs
pop
push
hlt
pushf
inc
adc
outsl
dec
adc
outsl
dec
xchg
dec
sbb
mov
jecxz
pusha
in
aaa
cli
mov
push
add
and
lea
sti
sbb
scas
popf
xchg
jmp
test
adc
mov
lcall
dec
test
xchg
add
fisubs
insb
test
stc
sub
cmpsl
xlat
pop
fwait
and
push
jae
and
push
rcrl
and
adc
outsl
jle
jns
and
stos
inc
xorl
sbb
data16
stos
mov
and
push
hlt
mull
ss
cs
out
mov
fcmove
sub
xor
pusha
hlt
dec
or
cmp
jnp
xlat
sub
imul
stc
sbb
or
or
or
pusha
pop
jbe
call
sbb
decb
jb
mov
movzbl
dec
inc
add
dec
add
or
lea
add
mov
dec
movzbl
inc
inc
add
xor
lea
inc
dec
inc
add
dec
mov
sub
lea
mov
inc
inc
inc
cmp
jb
inc
xor
sub
lea
mov
inc
mov
inc
dec
inc
sub
and
lea
inc
inc
mov
add
dec
cmp
jb
and
mov
lea
xor
inc
sub
xor
inc
inc
pop
or
lea
test
jbe
mov
add
inc
dec
dec
sub
lea
mov
dec
inc
inc
inc
or
lea
dec
add
inc
add
dec
and
lea
mov
inc
and
add
sub
mov
dec
xor
movzbl
lea
mov
add
dec
dec
and
inc
add
mov
sub
lea
mov
mov
inc
mov
dec
inc
mov
inc
add
lea
imul
dec
dec
dec
jne
inc
mov
inc
or
lea
add
inc
inc
inc
add
lea
mov
movswl
dec
dec
inc
sub
add
lea
movsbl
mov
inc
add
test
jbe
inc
dec
or
lea
mov
dec
inc
sub
add
and
lea
imul
dec
add
dec
inc
inc
or
lea
mov
add
inc
and
inc
inc
mov
sub
lea
movzbl
mov
add
add
dec
add
and
inc
jmp
lea
mov
sub
inc
pop
ret
push
sub
inc
sub
lea
mov
inc
dec
dec
sub
inc
push
and
lea
movswl
add
push
sub
sub
push
inc
add
push
lea
movswl
push
dec
dec
add
inc
xor
lea
imul
inc
dec
inc
inc
sub
lea
imul
inc
call
sub
inc
add
dec
imul
or
lea
imul
inc
inc
add
add
sub
lea
movsbl
inc
dec
dec
add
xor
lea
mov
sub
inc
dec
inc
sub
lea
mov
sub
sub
dec
dec
xor
lea
mov
add
cmp
je
inc
dec
dec
and
lea
imul
sub
dec
add
inc
add
lea
imul
dec
inc
inc
dec
xor
lea
mov
sub
add
inc
inc
xor
lea
imul
dec
dec
dec
dec
add
lea
mov
inc
add
add
add
add
lea
mov
inc
inc
dec
inc
and
lea
mov
inc
dec
inc
add
or
lea
mov
ret
dec
inc
pop
inc
ret
push
inc
mov
and
lea
push
mov
dec
add
dec
dec
push
sub
push
and
push
lea
jmp
xor
mov
lea
mov
movzbl
dec
dec
mov
inc
sub
mov
add
lea
movzbl
mov
inc
add
inc
inc
and
inc
and
movzbl
lea
mov
xor
dec
inc
inc
inc
sub
xor
lea
mov
dec
inc
add
add
sub
dec
jne
lea
mov
mov
inc
pop
dec
inc
pop
inc
xor
pop
lea
mov
inc
inc
inc
sub
xor
lea
mov
add
inc
add
ret
push
add
dec
add
lea
mov
add
add
inc
push
push
push
push
inc
sub
lea
push
mov
add
sub
inc
inc
add
lea
imul
add
mov
inc
push
inc
inc
xor
and
lea
push
imul
inc
push
inc
inc
pushl
dec
call
or
add
lea
mov
inc
inc
sub
inc
xor
pop
ret
mov
dec
inc
dec
call
dec
xor
lea
push
mov
dec
xor
dec
mov
inc
mov
dec
or
mov
lea
mov
test
je
inc
inc
dec
add
and
lea
mov
dec
add
mov
inc
inc
mov
add
lea
mov
inc
repnz
sub
inc
add
inc
jmp
sub
lea
mov
add
dec
add
sub
xor
lea
movzbl
pop
pop
ret
push
sub
dec
inc
inc
or
lea
movsbl
inc
inc
inc
inc
or
lea
mov
inc
inc
inc
dec
sub
lea
mov
inc
inc
inc
add
and
lea
mov
pop
ret
sub
dec
mov
inc
dec
mov
inc
xor
mov
lea
mov
mov
dec
inc
xor
sub
sub
mov
xor
lea
inc
mov
sub
dec
inc
dec
sub
cmp
jb
lea
push
mov
dec
push
sub
inc
push
dec
xor
mov
lea
mov
xor
dec
dec
xor
inc
add
xor
xor
lea
push
dec
xor
sub
jmp
cwtl
bound
add
add
cwtl
jb
add
adc
add
daa
inc
add
mov
cmc
sub
add
adc
push
sub
add
inc
add
add
sub
inc
add
sub
add
les
inc
push
dec
add
mov
or
lea
movsbl
add
dec
add
dec
xor
lea
mov
inc
call
add
add
add
sub
lea
imul
inc
inc
sub
add
xor
lea
imul
inc
inc
inc
inc
add
lea
movzwl
sub
inc
dec
inc
call
and
lea
movsbl
inc
call
add
add
dec
or
call
lea
push
mov
inc
inc
inc
inc
call
xor
lea
movzwl
dec
add
dec
call
dec
pop
and
lea
mov
add
dec
pop
inc
dec
pop
inc
or
lea
mov
pop
dec
add
add
inc
and
lea
imul
sub
pop
add
inc
pop
dec
and
mov
lea
movswl
call
inc
dec
sub
dec
ret
and
lea
push
mov
add
push
add
dec
push
inc
xor
push
lea
imul
push
sub
dec
mov
add
dec
push
xor
ret
push
lea
push
mov
inc
push
inc
add
push
inc
add
push
lea
mov
push
add
add
inc
call
inc
and
lea
mov
dec
add
inc
sub
add
lea
imul
add
inc
add
inc
sub
jmp
sti
fwait
je
cltd
mov
shll
and
push
cmp
cmp
and
cmp
test
aaa
mov
or
addb
adc
fimull
pop
adc
leave
jne
rcrl
pop
sbb
adc
dec
and
pop
js
fwait
mov
and
mov
xor
xchg
mov
mov
outsb
pop
mov
and
repz
sbb
adc
in
test
pop
sbb
pop
mov
cmpsl
adc
or
push
inc
ja
sbb
sbb
cmc
mov
lock
sub
mov
imulb
fcoms
push
jle
sahf
jmp
sub
aas
sub
stc
lahf
int
bound
test
je
push
mov
fnstcw
cmp
popl
lods
inc
cmp
xchg
xchg
in
hlt
mov
out
mov
cmc
xchg
lock
cld
gs
pop
test
mov
adc
push
nop
mov
aaa
or
jno
out
cmpsl
xor
mull
shrb
outsl
and
data16
cwtl
cli
xchg
cltd
cs
or
repz
jbe
xor
gs
scas
stos
pop
pop
sbb
cltd
repz
mov
jnp
movsl
clc
xchg
aam
cld
sub
out
test
decl
and
stos
stos
jge
sub
cwtl
sub
mov
pop
lret
lret
lds
lret
and
push
inc
outsl
lcall
lret
leave
sbb
adc
mov
cmpl
pop
int3
jnp
shl
xlat
xlat
cli
xchg
mov
jmp
hlt
test
pushf
jle
in
lods
or
jno
add
sub
or
jge
sahf
or
xorl
nop
xlat
imul
clc
dec
mov
shll
sbb
mov
dec
xchg
and
int
rol
sbb
mov
add
push
inc
inc
mov
or
xchg
sbb
dec
fisubrs
xor
or
mov
or
dec
inc
mov
adc
inc
dec
pushf
dec
sub
cs
arpl
or
sub
dec
mov
mov
in
ja
dec
mov
daa
cwtl
cmp
mov
jb
cmp
jle
pop
aaa
sbb
xchg
and
mov
loope
xorl
and
cmp
out
mov
insb
mov
aam
cmc
add
push
adc
repz
push
lock
cmpb
lret
shlb
or
ret
lret
jmp
mov
sub
in
ds
pop
loopne
fsubr
inc
icebp
aaa
iret
jnp
xorl
js
out
fiadds
xchg
or
jnp
mov
jns
in
insb
fldl
sbb
addr16
lret
jne
stos
das
mov
mov
push
lods
push
jp
mov
inc
sub
lret
movsl
and
jnp
mov
shll
mov
sbb
and
fsubrs
add
push
popf
jl
jmp
pop
sub
dec
dec
add
inc
fdivrs
aad
stc
cwtl
or
gs
lds
jl
in
scas
inc
push
cmp
ds
mov
jbe
fmull
jne
in
rclb
sbb
inc
and
or
sub
imul
lret
cmp
dec
insb
cltd
mov
jp
dec
sub
inc
push
sbb
push
ja
cmp
add
in
xchg
ret
dec
inc
xlat
stc
cli
pop
xchg
scas
imul
test
pop
cmp
jb
mov
mov
sbb
xchg
scas
jg
mov
fs
cli
fistps
push
sar
sub
out
int3
mov
pushf
ss
xchg
stos
test
ret
filds
push
lahf
add
push
jae
adc
push
out
pop
mov
cmp
outsb
xchg
outsb
adc
mov
xchg
xchg
and
fwait
movlps
das
inc
dec
mov
movsb
adc
into
lods
xor
or
bound
and
mov
xchg
add
xlat
clc
cmp
ja
lcall
stos
sahf
leave
stc
mov
pop
out
and
xlat
bound
lret
mov
test
add
mov
fstpl
into
js
subb
cmpb
lea
lods
push
rolb
cwtl
and
add
pusha
xchg
xchg
jae
add
dec
cmp
cmpsl
xor
mov
je
push
scas
mov
loopne
mov
fisttpl
sub
push
jns
roll
sbb
nop
push
cwtl
mov
adc
fs
outsb
pop
xor
mov
push
or
push
mov
in
mov
inc
sbbl
clc
lods
je
ss
cmpsb
popa
mov
push
dec
fiadds
sbb
mov
out
push
test
rorb
mov
mov
ss
mov
movsl
mov
mov
sub
jmp
mov
mov
jmp
push
out
aaa
dec
fcomps
ljmp
jo
lods
mov
cs
divb
dec
call
orl
sub
fildll
je
mov
call
inc
cmpsb
sub
pop
sub
mov
jl
ret
movsl
jno
scas
inc
add
popf
insb
pop
int3
cli
push
test
mov
sbbl
dec
fists
hlt
sbb
and
inc
out
stos
clc
dec
mov
push
mov
iret
imul
cwtl
test
and
and
push
push
push
enter
out
cmpsb
mov
cmpsl
fcmovbe
cmp
dec
xor
aaa
fildl
pop
pop
in
push
sti
imul
cwtl
push
push
mov
jecxz
mov
xchg
dec
sub
ficoml
cs
push
cmpsb
pushf
pop
or
or
sub
fs
enter
jnp
mov
sbb
xor
dec
jbe
shrl
test
jb
sub
add
dec
fs
es
divb
xlat
cmp
int3
mov
in
inc
es
jmp
fists
xor
cld
jmp
xor
mov
loopne
ret
dec
xchg
or
sbb
fdivl
jle
clc
lahf
mov
xor
push
cmp
add
inc
test
xchg
jp
pop
and
mov
and
pop
popf
fidivs
xor
mov
dec
es
adc
add
jb
xor
mov
leave
mov
ds
inc
call
arpl
pop
jmp
jmp
add
sbb
jl
add
mov
jl
shl
jg
lds
call
cld
pusha
inc
sub
inc
sbb
insl
mov
xor
int3
es
das
inc
icebp
scas
aad
pop
arpl
sbb
sub
xchg
sub
fcmovu
loope
int
and
test
popf
shrl
xchg
iret
fistps
pop
sub
or
pop
jg
mov
cmp
mov
icebp
pop
adc
sarb
mov
cs
negl
jnp
xor
xchg
lea
cmp
cmp
mov
adc
into
or
jmp
enter
lods
lcall
add
pop
fwait
add
ss
adc
ja
sbb
add
pop
push
test
xor
pop
mov
sbb
mov
or
rcrb
aam
addr16
cmp
jns
mov
inc
or
push
mov
ljmp
and
or
popa
push
sub
fwait
dec
insb
dec
iret
and
sarl
pop
rcr
mov
jl
lods
cmp
call
dec
and
mov
movsb
insl
xchg
or
ds
mov
push
data16
loopne
pop
mov
mov
mov
jb
push
sub
sub
shlb
inc
inc
pop
stc
pop
cmp
push
mov
mov
in
repz
jge
les
xchg
cmc
mov
push
xchg
dec
xchg
sbb
xor
lahf
cmp
aaa
nop
push
rol
js
and
outsl
fdivl
jp
adc
insl
sbb
adc
in
dec
jp
rcrb
sub
jmp
sub
sbb
fwait
movsl
or
les
inc
nop
flds
sti
xchg
in
mov
mov
imul
sbb
js
push
lods
stc
or
nop
divb
ljmp
loop
arpl
int3
insl
xchg
insl
sub
pop
pop
inc
mov
fwait
inc
lcall
lret
mov
xchg
xchg
xchg
xchg
cmp
orl
mov
add
cmc
ficomps
in
nop
out
fisubs
jp
outsb
arpl
mov
cwtl
fldcw
mov
push
jg
dec
lea
je
mov
mov
mov
and
in
pop
std
sbb
and
jl
es
add
iret
aam
shrl
xchg
dec
xchg
out
out
sti
mov
jmp
push
rorl
fistps
mov
shrb
adc
in
sbb
les
icebp
stos
mov
pop
fnstsw
pop
push
push
jp
push
repnz
stos
cmp
jne
push
sbb
sahf
jno
push
in
sarb
aam
int
cli
cwtl
mov
adc
sbb
fwait
or
cmp
int
xor
jg
pop
push
pop
inc
jae
cwtl
xor
shrb
xor
insl
orb
jecxz
outsb
cmp
and
and
xchg
mov
xchg
repz
ja
stos
es
inc
mov
mov
jle
mov
and
ret
pusha
aam
dec
in
out
push
xor
cmc
push
inc
jle
in
dec
and
leave
jae
cmpsb
jle
imul
jmp
mov
push
mov
sbb
cmp
pop
lcall
je
addr16
leave
lret
stc
mov
inc
pop
pop
aas
lahf
cwtl
cmp
clc
arpl
mov
xor
iret
cmp
or
cmp
xor
fisttpll
xchg
lods
sahf
jg
mov
push
jb
sub
lret
mov
imul
bound
icebp
add
out
or
xchg
jge
aam
push
nop
dec
imul
aad
cmp
or
sbb
sbbb
inc
inc
rcl
push
ds
dec
push
jg
mov
cmpb
jno
mov
jb
fwait
inc
xchg
sbb
mov
in
sbb
sub
inc
pop
addl
adcl
adc
cmc
pop
jmp
xchg
mov
je
dec
jp
nop
mov
jo
push
hlt
inc
xchg
sub
cs
mov
std
popf
cmpsb
insl
fstps
loop
lods
cmpsl
test
dec
mov
repnz
scas
push
jbe
mov
sub
cmp
mov
push
push
scas
test
mov
shll
popl
mov
jg
lcall
sub
jmp
pop
std
cld
int3
sar
and
mov
push
add
push
mov
inc
sub
inc
push
mov
stos
adc
fsubl
or
aaa
mov
sbb
addb
mov
adcl
dec
xchg
adc
jne
jno
dec
shl
aam
pushl
inc
add
mov
sbb
push
add
clc
dec
lea
int3
addr16
dec
xchg
push
mov
loopne
or
jno
xchg
xchg
cli
pop
and
bound
cs
and
test
ja
lods
xor
sub
fmulp
dec
dec
lcall
fndisi(8087
jecxz
or
adc
into
popa
sbb
mov
dec
pop
enter
inc
mov
cmp
insb
fbld
out
fadds
popf
mov
mov
orl
dec
int3
xchg
push
xchg
rorl
dec
jl
xchg
seta
xchg
jp
addr16
je
jo
jle
dec
in
xor
xchg
mov
loope
xlat
xchg
aam
mov
insl
sub
cmc
test
out
push
int
xor
lcall
sub
jnp
lock
pop
dec
stos
sub
mov
or
aas
mov
lods
cmpsb
call
xor
jns
out
adc
outsl
add
std
pop
into
jmp
jnp
xchg
fidivrs
arpl
adc
mov
or
or
loopne
dec
jmp
xchg
cmpsl
add
popf
aaa
fs
sub
std
in
arpl
jne
incb
mov
and
mulb
lea
xor
push
mov
shl
mov
sub
repz
shrb
or
or
and
dec
sbb
out
popf
mov
lret
xor
loope
andl
std
int3
cmp
outsl
dec
lea
sbb
leave
fcmovnbe
lods
cmpsl
push
xchg
jl
add
test
xor
push
jnp
xlat
xchg
ret
pop
cmpsl
jp
mov
es
xorb
pop
bound
or
lods
push
mov
mov
outsl
pop
addr16
lods
cmpsl
shll
imull
fnstcw
and
push
daa
jnp
pop
ret
jg
lock
ja
iret
lods
stc
cmp
mov
sti
sahf
push
push
lcall
aaa
dec
inc
xchg
mov
jg
mov
adc
push
out
aam
inc
mov
xchg
movl
mov
jp
test
movsl
push
push
test
cmpps
lds
icebp
pop
leave
lds
aaa
jns
jo
enter
sbb
std
mov
adc
roll
movl
sub
lahf
imul
jge
mov
scas
sub
lock
jle
cmp
add
ds
mov
xor
push
fnsave
mov
xchg
imul
jno
adc
xchg
sti
gs
xchg
dec
add
es
ret
les
sub
mov
xchg
jo
jae
add
mov
jl
xor
mov
cwtl
es
mov
dec
jl
les
arpl
push
inc
pop
adc
shll
popf
dec
cltd
hlt
push
sbb
and
push
sahf
cltd
fists
mov
movsb
xchg
stos
ficoml
jns
scas
fwait
add
mov
fwait
or
jnp
push
ss
outsl
out
sub
test
daa
rcrb
ret
aas
insl
lods
subb
mov
cmp
push
cmp
mov
sub
lods
push
sti
dec
pushf
mov
gs
jmp
push
fldt
arpl
push
mov
hlt
les
fstpl
fdiv
imul
stos
cmp
pop
and
add
xchg
push
sbb
jge
dec
sahf
int
notb
pop
adc
dec
jp
jo
leave
sbb
daa
and
xor
jne
cmpsl
loopne
pushf
xor
jnp
iret
lods
call
clc
pop
push
mov
xchg
push
mov
adc
or
dec
xor
aaa
insl
inc
mov
dec
adcl
fstl
pop
imul
mov
je
mov
enter
int3
xchg
dec
roll
loope
mov
push
repz
test
mov
test
sub
lock
mov
pop
call
shrb
stos
shlb
jle
jp
movsl
adc
cmp
mov
sub
push
xor
fistpll
jp
mov
jmp
cmpsl
xchg
fwait
repnz
or
ljmp
inc
loop
subb
push
xchg
jo
xchg
rcll
mov
icebp
jne
fcomps
loop
sub
fisubl
incl
int
outsl
mov
mov
lahf
push
pop
xchg
inc
hlt
and
add
mov
push
mov
je
cmc
inc
mov
cltd
or
sub
out
ffree
fldt
xor
repnz
fisttps
outsl
mov
mov
insl
xchg
or
rcrl
outsb
lods
xchg
inc
adc
push
sbb
xlat
xor
mov
xchg
sbb
subl
sbb
daa
or
mov
push
cmp
dec
dec
push
filds
sarb
movd
inc
xor
pop
sub
stos
insl
test
decb
ret
les
add
adc
or
loop
jp
sub
mov
je
movsl
sub
ds
fisubs
jmp
or
ret
dec
scas
inc
dec
mov
fsubs
sbb
les
sub
outsl
gs
mov
call
xor
sbb
test
jnp
push
adc
call
sbb
jmp
xor
jae
cmpsb
roll
mov
mov
or
ret
mov
shl
push
outsb
jl
inc
fistpl
pop
mov
adc
out
nop
push
movsl
xchg
cmp
in
arpl
daa
or
ljmp
and
mov
add
je
mov
pop
out
pop
sbb
and
push
lret
pop
inc
push
pop
cmp
mov
sbb
mov
testb
mov
daa
outsl
mov
pop
sbb
jo
out
test
jmp
sub
in
js,pn
lgs
into
ret
dec
add
rorl
mov
add
inc
lret
out
inc
imul
cmp
adc
jne
mov
jp
outsl
xchg
mov
es
and
cmpb
sbb
fsubrs
pop
dec
add
fs
or
hlt
mov
mov
std
stos
mov
clc
popf
pop
jns
adc
add
sub
mov
cmpsl
sub
ss
or
iret
pop
stos
adc
pop
jns
cmp
mov
mov
xlat
xchg
cs
dec
pop
adc
and
rolb
test
inc
lret
fnstenv
fisubrl
nop
stos
es
out
out
inc
sub
cmpb
cmp
insb
cwtl
scas
or
sbb
jmp
fcoml
xchg
gs
jmp
lret
jecxz
mov
call
xor
xor
sub
jae
or
cmp
adc
add
cltd
pop
adc
into
adc
call
loopne
cwtl
xchg
leave
rorl
xchg
push
xorl
cli
pop
sub
leave
int
pushf
or
xchg
mov
sti
movsl
jns
ja
nop
jg
push
dec
les
inc
hlt
test
sub
js
dec
mov
and
fidivrs
pop
jl
jne
gs
fwait
push
sbb
mov
test
call
lcall
divb
xor
roll
mov
hlt
bound
mov
sub
ds
iret
push
int
fldenv
xor
scas
ss
push
cmp
add
test
mov
jne
lcall
mov
cmpl
std
adc
jmp
mov
decb
outsb
lea
insl
mov
push
rorb
gs
pusha
add
imul
add
lahf
mov
inc
dec
imul
enter
popa
pop
mov
hlt
out
ljmp
popa
call
pop
rorl
xorb
add
jl
push
jns
sbb
out
je
sub
leave
movsb
push
stos
iret
nop
lahf
pop
popf
mov
jo
fidivrl
insl
cmc
cmp
mov
fbstp
mov
in
mov
dec
inc
push
dec
scas
stc
and
fisttps
dec
fs
jo
or
adc
popa
mov
jmp
in
xor
adc
cmp
jecxz
movsl
pop
sbb
aas
ss
dec
sahf
mov
mov
or
xor
mov
adc
shrl
cmp
rcl
or
stc
sbb
cmc
pop
mov
cmc
xor
aaa
push
shll
jns
jg
fwait
rcrl
jle
xchg
or
cmc
xchg
std
add
cmp
mov
sub
cli
xor
cltd
mov
lcall
xor
ds
inc
cmpsl
inc
rcrl
test
les
popa
test
jg
orb
push
dec
mov
pop
lods
jb
jecxz
js
fbld
aad
push
andl
jle
fiadds
sbb
sub
das
out
sbb
gs
xor
repz
adc
je
std
in
mov
fwait
cmc
cld
mov
das
pop
add
aam
and
jmp
jo
hlt
mov
pop
pop
jne
pushl
jbe
ret
xchg
push
jbe
sti
pop
mov
out
mov
addr16
or
in
push
xchg
mov
mov
xor
insl
cmp
outsb
xchg
clc
mov
xchg
add
call
or
and
xchg
es
loope
mov
jl
iret
scas
addr16
add
pop
sbb
cs
mov
pop
xor
pop
jge
mov
push
ds
push
xchg
nop
xchg
gs
clc
dec
and
ret
imul
mov
dec
rol
adc
iret
cmpsb
jmp
inc
sti
push
add
lcall
sub
mov
jns
fildll
adc
in
shll
xorl
dec
pop
fildl
aam
and
or
scas
add
jae
jmp
je
sbb
shlb
insl
mov
gs
cs
fdivl
lcall
jecxz
stc
add
cmpsb
cmp
dec
mov
clc
adc
inc
repnz
ss
and
ss
sbb
xor
cmpb
push
pop
popf
mov
sbb
in
xchg
sbb
and
or
inc
fidivs
popf
push
imul
sub
test
xchg
mov
ficoms
dec
jg
cmp
test
mov
cli
outsb
jnp
aas
pop
sbbb
fmul
stos
cmpsb
xchg
js
dec
mov
jo
cwtl
mov
inc
popf
addr16
ja
mov
les
sub
ja
dec
jb
test
mov
push
mov
push
incb
gs
adc
xor
inc
je
inc
mov
adc
repnz
test
push
xchg
cmp
sbb
and
arpl
dec
fdivl
jbe
cmp
and
push
xchg
dec
ja
pop
ljmp
pop
adc
addr16
arpl
movsb
shr
mov
jns
dec
mov
pop
lods
mov
outsb
dec
mov
adc
mov
shr
scas
xchg
test
sub
cmc
fsubr
xchg
es
xorb
pop
jae
call
or
fwait
add
push
cmp
jne
out
adc
test
jns
xor
daa
jnp
call
dec
cli
pop
xchg
xlat
sbb
shlb
pop
xchg
and
add
xor
inc
addr16
jns
and
push
xor
pop
lea
idivl
xchg
iret
add
sub
clc
mov
test
pop
loope
cmp
cli
mov
sbb
mov
add
adc
sub
cmp
dec
sbb
lods
adc
fsub
aas
data16
xor
test
mov
cs
or
xor
sbb
add
lock
in
and
test
mov
int
lahf
push
xchg
push
xchg
push
shll
and
sti
cwtl
and
jl
loope
push
mov
push
mov
or
frstor
imul
dec
lcall
and
int
xchg
imul
mov
xor
mov
bound
mov
aaa
or
call
mov
add
sbb
fsubl
sbb
inc
cwtl
mov
jge
and
scas
push
push
mov
push
pop
sarb
push
inc
scas
popa
mov
aaa
cltd
push
lcall
inc
andb
ret
clc
mov
jmp
pop
jne
jge
xor
ret
xor
dec
dec
shlb
int3
testb
xor
or
mov
add
push
jbe
mov
sbb
ja
xlat
mov
scas
fs
andl
loopne
cmp
dec
icebp
jo
mov
and
inc
imul
xor
int3
imul
pop
sbb
mov
sub
subl
mov
or
mov
imul
sbb
add
outsl
or
dec
cmp
push
dec
dec
lcall
jb
dec
data16
jp
mov
pop
cmpsb
mov
push
ret
in
mul
jb
scas
mov
stc
mov
push
ds
std
add
mov
and
in
lods
stos
mov
xor
pop
push
sbb
xchg
sar
cmp
sti
ljmp
cmp
pop
subb
push
dec
lahf
push
call
call
fnstcw
jl
in
dec
inc
pop
mov
pop
adc
xchg
ficoms
popa
mov
or
and
sbb
lret
les
inc
ret
jnp
out
ret
test
cmc
insb
ffree
adc
sub
leave
mov
jg
dec
jne
arpl
xchg
into
cmp
popa
sub
lret
ss
mov
push
xchg
int3
pop
cmp
orb
mov
in
cmp
mov
leave
mov
adc
jp
inc
push
mov
leave
mov
in
clc
movsb
jnp,pt
cld
gs
and
ficompl
jp
jns
gs
inc
daa
xchg
pop
jecxz
frstor
add
mov
inc
imul
cmp
push
push
insb
dec
add
pop
add
je
fmuls
fdivrs
imul
mov
and
das
adc
push
jno
jbe
push
subb
or
clc
jno
imul
into
xchg
adc
and
out
cs
imul
adc
fwait
call
inc
stos
fdivl
daa
mov
lods
sbb
inc
dec
fstps
sub
pop
scas
sti
xlat
mov
mov
pusha
pop
testb
sub
ss
jg
bound
loope
xor
loopne
aaa
cmp
fwait
mov
xchg
cmp
stos
sarl
sbb
adc
xor
jmp
and
fdivr
and
scas
jmp
xor
out
dec
sbb
test
dec
mov
jp
mov
push
inc
mov
jge
in
fucomi
push
sbb
mov
int3
in
shl
je
jnp
jp
add
jecxz
pop
outsl
fs
dec
loopne
popf
movsb
push
lea
fsubp
test
cmpsb
push
pop
xor
addr16
fnstenv
mov
mov
ret
or
aam
dec
aaa
inc
jl
sbb
int3
xor
mov
jbe
push
jnp
into
test
lods
pop
and
or
insl
push
hlt
pop
add
sbb
cltd
adc
pop
sti
jl
out
daa
in
xlat
and
lcall
xor
stos
in
cli
push
imul
cmp
pop
sub
cmpsl
clc
push
icebp
mov
push
cmp
lods
dec
adc
or
and
mov
add
ds
and
loopne
test
lds
daa
out
scas
add
xchg
jmp
mov
pop
ljmp
mov
adc
jns
jb
mov
mov
pop
out
decb
aas
and
or
sbb
bound
fisubs
lret
call
mov
in
dec
adcb
int3
lods
in
fwait
imul
push
mov
outsb
pop
iret
inc
popa
rcrb
aam
lret
pop
andb
das
jle
or
xchg
call
mov
lea
jg
gs
adc
adc
insl
ret
jmp
sti
hlt
sub
xchg
adc
mov
push
xchg
xor
xchg
shl
pop
int3
mov
fwait
iret
shll
inc
in
mov
push
adc
icebp
xor
cmpsl
adc
scas
sbb
jnp
mov
prefetcht1
add
testl
imull
dec
jg
cwtl
or
xor
les
sbb
paddq
ss
push
scas
stos
jnp
aam
push
inc
jbe
push
jns
jnp
repnz
cmc
adc
xchg
jo
inc
mov
inc
clc
test
insb
mov
pop
addr16
adc
cmp
xor
sbb
bound
xor
sub
adc
sub
cmp
xor
add
sub
mov
and
xor
dec
fisttps
cmpsl
lret
pop
sbb
mov
std
mov
inc
mov
mov
cmp
jne
iret
imul
aas
imul
test
and
test
sbb
testl
fdivrl
mov
adc
sbb
mov
mov
sub
loopne
cld
lds
xorb
xchg
sub
and
xchg
xchg
pop
lods
fistpl
add
sbb
jmp
outsl
add
jecxz
push
sbb
icebp
sub
cmp
cmpsb
xor
fucomi
adc
inc
mov
enter
add
pop
daa
xor
or
xor
rcl
iret
and
iret
outsl
push
std
dec
push
mov
push
mov
mov
shll
imul
pop
fdivl
mov
push
rclb
call
or
add
cld
test
dec
jge
sub
dec
popf
psraw
mov
ja
movsl
or
xor
arpl
dec
sar
data16
jle
stos
int3
cmp
cltd
inc
fcoml
push
in
popf
jbe
rcr
jecxz
adc
data16
mov
outsl
sbb
in
lahf
aas
xchg
sbbb
xchg
xor
les
jmp
xor
movsb
iret
jno
andb
mov
imul
adc
add
xor
jne
test
pop
cmpsl
pop
adc
jecxz
jle
mov
pop
movsb
sbb
cmp
pop
stc
add
ret
jno,pn
lea
dec
sub
pop
sub
fcomps
stos
call
inc
aas
lret
lret
into
or
cli
bound
decb
out
dec
mov
mov
out
and
push
bound
jne
sahf
xchg
and
pop
aas
pop
in
cmp
decb
cmp
xchg
push
mov
xchg
inc
aas
jne
inc
xchg
stos
xchg
aad
jecxz
jge
or
sub
adc
dec
push
ss
sub
pop
pop
rolb
sar
mov
shrl
jmp
push
dec
insl
das
into
sarb
imul
inc
mov
jno
xor
mov
jo
push
and
loop
sub
ret
add
test
jp
xchg
jnp
jo
push
loope
inc
mov
ja
cli
gs
dec
sbb
test
enter
movsl
dec
ror
pop
pop
bound
fdivr
or
into
xchg
sbb
pop
movsl
cmpsb
mov
int3
inc
loop
sbbb
lret
adc
xchg
jp
cmp
in
or
cmp
out
out
add
xchg
testb
repnz
js
cmp
rorb
mov
pushf
sbb
adc
fcompl
mov
das
test
mov
and
jp
sub
xchg
jmp
adc
cmp
sarb
adc
lret
dec
test
push
sub
jmp
mov
xor
xor
and
cld
fsubr
in
jl
stos
mov
xchg
imul
movsl
js
add
fisttpl
sbbb
jg
js
sub
aad
sbb
lods
stc
orl
test
pushf
insl
andb
mov
inc
or
jns
rclb
add
fdivrp
xchg
inc
mov
mov
jns
cmpsb
nop
cltd
or
inc
pop
inc
loopne
ss
out
add
pop
dec
lret
sub
xchg
aaa
mov
iret
pusha
addb
fldcw
es
cmp
pop
cmp
repz
pop
pusha
pmaxsw
adc
push
push
sbb
scas
or
lods
pop
sarb
sbb
adc
das
int3
pop
test
loopne
orl
lret
bound
xchg
insb
fs
mov
loopne
inc
imul
fildll
out
xchg
inc
aad
roll
mov
cltd
pushf
adc
mov
scas
dec
xchg
sbb
out
sahf
fisubs
jb
dec
movsb
add
push
bound
movsb
cmpsb
sti
pop
mov
iret
dec
dec
mov
addr16
cld
mov
and
aam
dec
fcomps
ja
dec
sbb
jnp
xchg
sbb
jge
cmp
xchg
divl
mov
cli
jae
cmp
adc
stos
jbe
test
scas
cli
mov
cwtl
sbb
mov
fnstsw
sub
out
dec
add
mov
xor
inc
gs
dec
scas
pusha
rcll
jo
lock
inc
cmp
or
dec
scas
pop
inc
cmp
cmp
loop
lods
aad
mov
sbb
icebp
lret
scas
fs
and
data16
jg
xchg
loop
cmp
xchg
into
xlat
pop
sub
jne
sub
xchg
cmc
lods
lds
push
sub
mov
mov
push
sbbb
adc
ror
push
jno
adc
hlt
push
jecxz
ljmp
jmp
xlat
mov
call
jno
adc
inc
cmp
pop
sub
sbb
jp
cwtl
enter
xchg
aaa
push
stos
mov
xor
and
mov
push
mov
jg
sub
or
mov
daa
pushf
cli
in
pop
cmp
ljmp
xor
cmpsb
mov
cltd
insb
or
into
jle
aad
mov
or
xchg
xchg
ljmp
xchg
int3
insl
mov
scas
nop
pusha
popf
or
xchg
mov
das
push
xor
addb
leave
cmp
iret
sbb
push
daa
jb
pop
outsb
sub
out
out
sbb
jg
adc
ss
jle
fwait
pop
xlat
je
test
out
fsubr
shl
mov
jae
push
add
fisubl
adc
insb
pop
dec
in
test
mov
lret
stc
xor
jne
stos
pop
ljmp
addr16
int
cmp
fstl
mov
test
lods
repnz
inc
dec
add
adc
xchg
push
das
mov
xor
int3
int
jo
mov
mov
pop
jnp
ret
stos
pop
outsl
cli
imul
jge
imul
insb
jbe
loop
out
dec
add
dec
sahf
jg
shll
mov
jge
int3
jg
xchg
adc
lods
jmp
jbe
shll
push
xchg
adc
inc
cmp
cmc
mov
out
push
jl
je
and
jecxz
jecxz
xchg
or
pop
lock
inc
and
stos
aad
cmp
or
jo
hlt
fmull
ja
or
bound
ja
ret
inc
adc
sbb
and
fisubs
addr16
popf
leave
int
sub
adc
cmpsl
mov
cltd
lahf
sub
or
dec
lods
xor
push
xor
push
les
push
inc
dec
test
push
xor
jge
xor
push
gs
jae
aas
push
mov
iret
cmpsl
sub
rorb
loopne
in
roll
pop
push
add
ja
lds
inc
test
jle
xchg
mov
push
movb
cltd
fst
out
stc
bound
shll
mov
lods
or
push
aad
cli
gs
jmp
xor
cli
pop
fs
in
jb
ret
add
xchg
aaa
or
fdivr
sbb
dec
sbb
fdivrl
fiadds
inc
xchg
mov
push
outsb
das
sub
mov
inc
push
icebp
dec
sub
xor
xchg
dec
jecxz
adc
test
das
ret
ret
lret
fnstsw
mov
jl
jae
daa
push
jbe
aas
mov
xchg
lret
push
das
outsb
cmc
mov
sti
xor
fs
xlat
fnsave
ljmp
sbb
xchg
lock
jmp
dec
lahf
mov
mov
das
fwait
xlat
sub
xor
xor
mov
xchg
cmp
pop
lret
jae
ret
cmpsb
leave
xchg
sub
loop
daa
xor
xchg
cltd
outsl
aad
ret
addr16
aas
xor
jl
fidivrl
push
nop
insl
scas
mov
int3
inc
shl
test
out
push
and
int3
ds
jmp
into
shrl
push
sub
subb
in
cmp
adc
inc
xlat
cmp
and
or
repz
xchg
xor
mov
not
out
xchg
mov
push
xchg
inc
sbb
ret
dec
push
sub
aad
enter
pop
inc
inc
cld
xchg
andb
push
aaa
xor
or
mov
mov
sti
or
push
fwait
imul
lods
jp
mov
mov
icebp
cwtl
dec
adcb
cmp
jns
std
sti
inc
or
jns
adc
pusha
push
adcl
xchg
mov
pop
sbb
fs
stos
and
dec
test
lea
mov
inc
add
enter
les
movb
mov
cli
leave
cmc
mov
cmp
jg
xor
sarb
ficompl
dec
pop
inc
and
leave
repz
sub
icebp
pop
mov
mov
push
add
lret
jno
pop
dec
ds
std
or
mov
add
pusha
test
xchg
adc
in
out
lahf
xchg
push
pop
call
int
adc
movlps
je
push
add
sbb
sbb
push
inc
cltd
shl
mov
lock
or
movsb
push
mov
adc
jle
mov
xor
fidivrs
fwait
pop
dec
fmulp
mov
mov
xchg
sub
push
push
das
fdivrp
lahf
orl
jmp
mov
fisubl
mov
and
mov
push
repnz
adc
sbb
frstor
sti
mov
push
sub
scas
insl
stos
xchg
jg
or
jno
sbb
mov
jbe
inc
inc
les
or
mov
std
mov
mov
hlt
jb
mov
push
mov
push
sbb
test
cwtl
sub
push
sub
scas
inc
jg
shlb
cvtps2pd
fwait
popa
dec
adc
xchg
imul
bound
lods
xchg
test
xchg
inc
leave
pop
push
pop
dec
jne
lcall
mov
jbe
push
push
dec
repnz
dec
pop
sub
imul
cmp
mov
fstl
repz
xor
lahf
sbb
sar
lret
shrb
outsl
xor
lret
rcrl
pop
pop
xor
cld
inc
jl
cmpxchg
adc
loop
and
push
push
dec
xchg
pusha
and
xor
hlt
and
fmuls
push
xor
xchg
repnz
