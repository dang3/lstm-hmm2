sbb
add
mov
cmp
aaa
les
dec
unpcklps
data16
adc
pop
mov
mov
outsl
pop
pop
and
pop
arpl
jmp
cmpsb
mov
rcll
adc
inc
mov
or
lea
dec
mov
int
xchg
and
mov
mov
gs
sbb
arpl
shr
ret
pushf
lods
aas
push
dec
fbld
pop
inc
sbb
or
add
adc
shl
loopne
xor
out
pushf
loop
pop
jae
inc
jne
in
dec
inc
cwtl
lret
enter
push
data16
mov
insl
fstl
enter
inc
mov
adc
and
xor
jg
mov
out
dec
and
mov
pop
and
mov
cmpl
ds
out
hlt
jp
shlb
lret
loop
xchg
dec
mov
int3
or
mov
add
add
pop
push
test
loope
pop
xlat
out
hlt
mov
pushf
lahf
test
sbb
repz
rolb
test
cld
loopne
cmp
mov
adc
in
das
push
addr16
xchg
ret
and
pop
mov
jns
xchg
iret
out
cli
lds
divl
cmpsl
pop
lahf
filds
arpl
mov
fwait
aas
adc
jnp
xor
push
insl
or
stos
fidivl
mov
ret
cmp
insl
xor
aaa
jg
sub
cwtl
loopne
push
and
jle
sub
es
andl
lret
test
push
sbb
sub
pop
xchg
xchg
fs
jo
std
mov
lahf
push
ret
fwait
aam
dec
ret
and
clc
aas
xchg
push
cmp
jle
rcll
call
xor
mov
push
aas
aam
jbe
mov
sbb
xchg
addr16
outsb
xchg
push
xor
and
cwtl
rcll
clc
push
leave
jo
fwait
clc
xlat
sub
and
jnp
dec
jne
mov
add
cmp
push
pop
fisubrl
sub
push
jl
sub
add
sub
into
push
lock
xor
sub
or
das
lds
pop
xchg
ret
xchg
arpl
cmp
push
xchg
icebp
jmp
adc
or
xor
in
mov
push
mov
xor
arpl
jb
int
mov
scas
dec
jbe
inc
outsb
mov
push
pop
gs
insl
push
in
shlb
fidivrl
imul
add
lahf
pop
sahf
aam
ficoml
les
mov
mov
popf
sub
cmpsl
mov
xor
dec
cld
pusha
inc
cmovno
xor
inc
jne
sarb
mov
in
dec
aad
pushl
push
orl
out
daa
sahf
inc
cmp
mov
xchg
mov
pop
sub
xchg
fcoml
fiadds
xchg
mov
int3
jns
call
sbb
lods
push
aas
dec
or
in
adc
arpl
movsb
adc
pop
pop
push
mov
andl
pop
outsb
cmp
xchg
sbb
out
dec
popa
adc
insb
insb
or
or
add
repnz
push
in
dec
les
repnz
rolb
aad
pop
ret
cmp
dec
mov
loop
outsb
lret
adc
sbb
mov
sbb
sbb
jnp
mov
dec
push
mov
stc
sbb
stos
repz
inc
mov
push
xchg
daa
xor
mov
push
push
ficompl
mov
das
or
popa
lret
cmp
in
scas
xor
loopne
add
dec
shrl
sub
clc
push
jae
pushf
lahf
lcall
mov
stos
es
mov
and
xor
dec
movsb
in
push
mov
jnp
fisubs
pushf
add
addr16
add
mov
cmp
pop
inc
adc
call
push
push
test
xlat
ret
sbb
adc
lods
xchg
loop
add
mov
push
addr16
xchg
and
jo
mov
cmp
es
mov
sbb
pusha
or
int3
adc
jle
dec
mov
stc
das
lahf
outsb
hlt
sub
stc
popf
mov
loopne
inc
sti
mov
out
push
cmp
sahf
cmp
mov
int3
sub
sbb
pop
pop
adc
orb
fcoms
push
sub
cmp
xchg
mov
xor
rcll
icebp
in
push
inc
inc
loopne
dec
dec
cmc
jns
daa
sub
out
sti
out
test
ja
jns
jnp
push
xor
pushf
dec
nop
or
or
shr
lods
mov
jne
loope
pop
mov
pop
fnsave
cwtl
jp
mov
aas
sahf
pusha
mov
mov
mov
dec
jmp
nop
xchg
aas
ja
push
mov
and
cmc
popa
mov
arpl
aad
stos
xchg
mov
cmp
lds
inc
out
lret
loopne
sbb
sbb
jne
pop
mov
lds
push
out
dec
stos
scas
pop
js
or
mov
push
sub
repnz
call
mov
and
xchg
test
mov
ljmp
xor
repnz
ror
and
jge
mov
pop
loope
mov
pop
and
add
push
and
pop
add
sub
inc
xlat
bound
mov
pusha
js
imul
adc
mov
push
test
push
jp
lds
fidivrl
mov
adc
imul
push
cmc
pop
sub
adc
mov
add
jnp
mov
popf
cli
add
repz
dec
int
aad
cmpsb
int
push
out
lret
stc
pusha
mov
pop
out
mov
and
jg
pusha
jb
in
push
lcall
or
xor
orb
loop
sbb
dec
clc
mulb
scas
loope
test
or
scas
push
mov
and
mov
mov
mov
dec
mov
nop
les
sub
pop
shl
test
cmp
enter
outsb
fiaddl
add
jp
cmp
xor
xchg
shrl
lahf
and
stos
jae
adc
inc
jo
imul
mov
xchg
fcomps
add
lea
hlt
mov
loop
aam
insb
imul
jmp
aad
shll
data16
repnz
mov
fistl
ss
movsl
test
popa
xchg
aam
push
movsbl
adc
aad
lea
ss
jae
sbb
adc
xor
jecxz
xor
mov
adc
scas
daa
arpl
gs
shlb
pop
arpl
ret
jmp
cmp
nop
mov
pop
cli
dec
mov
inc
pushf
cmp
mov
das
jno
and
addb
xchg
mov
loop
fcomi
aas
imull
paddd
lea
enter
mov
or
test
mov
iret
loop
aad
jnp
sub
pop
mov
or
cmp
jmp
sub
push
icebp
fmulp
or
pop
out
ret
addr16
cmp
or
pop
and
negb
mov
jmp
mov
inc
pop
inc
xchg
xor
and
pop
jl
pop
dec
cmp
test
jns
sub
mov
inc
or
cmpsb
sti
jp
xchg
sahf
mov
mov
sub
loop
pop
add
pop
ja
and
or
lods
mov
lods
add
nop
xor
pop
mov
cmp
sub
mov
cwtl
sub
testl
subb
xchg
xchg
sbb
mov
and
dec
lods
inc
inc
sahf
lock
mov
addr16
and
movsb
mov
pop
push
pusha
push
jnp
lock
sbb
xor
and
stos
outsb
cwtl
cmp
icebp
push
hlt
into
mov
daa
cltd
dec
jmp
or
sbb
pop
fstpl
test
cld
mov
and
inc
xchg
cmpsl
icebp
dec
adc
in
push
arpl
sbb
pop
mov
xor
jno
xor
mov
pop
inc
pushf
push
cmp
sbb
xchg
jns
pop
pushf
idivb
lcall
pop
out
test
inc
shlb
scas
mov
push
pop
push
mov
cmc
out
xchg
aam
daa
out
shl
jb
mov
inc
lret
jbe
cmpb
data16
ret
and
cmp
out
data16
pop
cmp
adc
sub
sub
xchg
pop
sbbb
and
xor
jecxz
jno
sbb
testb
fsubrp
call
lods
test
es
push
icebp
cld
push
fwait
jnp
icebp
cmp
loopne
test
scas
dec
sbbl
jbe
lods
xchg
mov
addr16
daa
push
fildl
adc
outsb
add
xor
ret
ficoms
sbb
mov
scas
imul
popf
js
inc
and
sahf
and
jae
pop
out
mov
jge
lds
mov
out
mov
adc
in
lret
orb
sbb
cmp
lahf
in
cli
movsb
sti
clc
dec
mov
xchg
mov
loopne
cmc
adc
xchg
mov
sbb
je
inc
loop
ja
inc
cmp
sbb
lret
lcall
test
sub
sbb
or
push
add
lret
fnsave
stc
jbe
ret
scas
sarb
arpl
lcall
xchg
cmp
xchg
and
inc
addr16
aam
dec
xor
xlat
sub
mov
xlat
sub
pop
push
sub
pop
popa
mov
xor
push
aad
mov
jl
and
jp
mov
mov
data16
inc
mov
in
stos
mov
imul
mov
add
cmc
ja
nop
add
pop
cmpsl
and
enter
jecxz
add
xchg
lret
rorl
pop
mov
mov
push
adc
repz
pop
lds
ret
int
add
loopne
int3
cmp
sub
pop
xor
xchg
lods
fs
fmul
fcompl
sarb
es
je
popa
dec
xchg
lea
xchg
pop
inc
scas
xchg
stos
inc
jb
adc
xchg
dec
lock
mov
or
mov
jmp
inc
test
outsl
xlat
neg
push
jo
call
push
jecxz
int3
mov
test
test
scas
or
incl
je
mov
cmc
mov
jae
lock
fimull
fld
lock
into
pop
adc
mov
movsl
leave
jl
sub
filds
and
nop
jge
and
iret
xchg
push
insl
addr16
adc
pop
fs
cmp
faddl
sbb
jae
adc
lcall
inc
lret
xor
pop
jne
jbe
shl
mov
popa
mov
lods
enter
rorb
cli
mov
push
and
pop
push
mov
adc
and
lds
inc
and
out
xor
xchg
push
jne
shl
shrb
fists
std
addb
push
call
pop
cmpsl
jg
int
sub
sbb
xchg
into
sub
mov
jae
jno
ss
cltd
adc
cmp
loope
push
jbe
bound
and
in
adc
add
push
jbe
mov
subl
add
cmpsl
or
cmc
je
or
mov
add
movsl
adc
mov
inc
test
add
dec
loopne
divl
fnstenv
inc
cmp
pop
push
rcl
cmc
mov
fisttpll
dec
jbe
addb
cmc
inc
sbb
fs
fnsave
add
sub
xchg
mov
sti
jge
cmc
jp
jmp
xchg
xchg
hlt
xchg
xchg
push
mov
and
push
sarl
icebp
sub
xor
or
shr
xchg
xor
and
mov
xchg
adc
lock
xchg
movswl
cmp
dec
sub
shll
lret
lock
jns
pop
leave
stos
xor
dec
pop
xor
or
ljmp
jecxz
sarl
add
jb
lret
fcmovnbe
xor
lcall
inc
std
shrl
je
xchg
cmc
out
scas
std
add
adc
xorl
cmp
cld
mov
pop
lret
clc
push
add
mov
sti
imul
fdiv
or
mov
out
dec
cmp
scas
mov
leave
repz
aaa
mov
jl
push
lea
cmc
lret
enter
shr
or
je
mov
or
sbb
jecxz
out
sbb
sub
cmc
jb
loopne
dec
push
bound
cltd
scas
sahf
adc
out
cmc
fnstsw
dec
jae
mov
fildll
jbe
pop
sahf
pop
sub
gs
icebp
adc
push
repz
imul
xchg
out
push
mov
cmp
arpl
loop
in
ds
dec
lock
mov
outsl
cmp
aas
mov
xchg
pop
gs
inc
pop
clc
scas
in
dec
in
fcomi
popa
add
stos
mov
outsl
pushf
pushf
jno
imul
push
out
sbb
int3
in
ja
shlb
lea
aad
adc
mov
mov
mov
fimuls
jge
dec
add
inc
add
stos
pxor
fidivrl
pop
insb
inc
cs
push
inc
inc
ljmp
mov
xchg
mov
clc
pop
jno
shlb
cmpsb
das
sti
scas
lahf
jno
sub
shlb
xor
xor
or
add
mov
jmp
xchg
xchg
dec
mov
jge
sub
push
and
ja
or
test
push
mov
pushf
push
cmp
adc
aaa
jae,pt
lret
add
insl
sbb
push
jl
push
xor
lahf
or
ljmp
jb
cmpb
mov
xor
hlt
or
pop
and
jmp
js
inc
mull
push
mov
pop
jo
xor
mov
jle
inc
jo
cmp
adc
cmpsl
ds
das
xchg
je
jge
in
roll
push
xchg
icebp
or
or
inc
cli
mov
jnp
data16
cmpsb
sub
cmp
loop
fcmovnbe
jecxz
loop
enter
lock
sti
cmp
mov
popf
jbe
sub
pop
prefetchwt1
xor
push
outsl
inc
sub
fcom
or
stc
or
ljmp
out
fnsave
lahf
out
ja
xchg
notb
adc
leave
lock
sbb
shrl
xchg
push
xchg
xchg
das
int
test
loopne
push
idiv
add
pop
mov
push
push
xchg
and
pop
imul
cli
jns
jmp
cmp
push
shrl
movsl
xor
ja
loopne
lds
dec
cmpsb
xorl
mov
xchg
out
or
outsb
sbb
jb
outsl
jo
push
push
fidivl
jb
xchg
fwait
mov
xor
sbb
xchg
fs
push
sbb
out
mov
loopne
jns
pop
repnz
popf
testl
imul
push
les
rorb
insl
pusha
inc
subb
push
add
sub
sub
cmp
test
popa
scas
imulb
mov
mov
sbbl
adc
icebp
jge
fsubl
sbb
jo
sarb
mov
push
enter
pushf
inc
test
ds
aaa
xchg
enter
aaa
lock
jl
xchg
aas
sbb
out
cmp
scas
lock
dec
test
addr16
inc
xor
andb
pushl
repnz
mov
sub
sahf
pop
jmp
pushw
adc
out
mov
sahf
push
push
sub
outsl
mov
or
mov
outsb
test
enter
jle
lret
std
iret
sub
sti
xchg
stos
jo
lods
inc
dec
dec
sbb
or
out
pusha
lret
pop
daa
imul
aam
add
scas
cmp
or
sub
imul
mov
xchg
ja
cmp
loopne
xor
sub
xchg
adc
jmp
test
pop
dec
lock
insl
es
enter
xchg
mov
xor
and
jb
les
stos
xor
cmp
jbe
sti
mov
mov
jo
xchg
daa
flds
std
outsl
out
pop
in
adc
jns
pop
add
pusha
inc
pop
adc
push
movups
inc
cmp
mov
int
mov
xchg
push
mov
lret
inc
fcomps
adc
xchg
pop
jecxz
xchg
ds
sub
cld
pop
lods
inc
and
lret
inc
dec
pop
xchg
int3
lea
mov
pop
pop
pop
lahf
out
jb
xlat
cmpsl
insl
ljmp
sub
loop
lret
push
mov
mov
mov
test
in
pop
push
test
dec
push
lods
add
fildll
fildl
push
shrl
es
sub
sti
xchg
leave
cmp
inc
es
int3
mov
inc
xorb
jo
icebp
lret
adc
add
dec
dec
jns
enter
fstl
insl
xor
mov
sub
xchg
jns
sbb
daa
fmull
sub
lea
or
stos
cmp
mov
out
mov
pop
imul
jg
and
inc
inc
sarl
pop
and
ret
jge
cs
adc
sub
lea
cmp
repnz
and
cmp
sub
in
int
jecxz
mov
push
mov
jg
add
stos
xchg
fldcw
xchg
mov
jnp
stos
cmp
mov
xor
dec
movsb
mov
je
mov
inc
aam
ljmp
xor
jmp
sub
and
pusha
xchg
scas
call
or
mov
push
sbb
xchg
mov
inc
lds
jge
fiadds
mov
cs
lock
jnp
inc
lock
js
jnp
dec
icebp
testl
repnz
mov
sti
rol
xor
xchg
enter
sub
pusha
mov
mov
push
loop
mov
xor
sbb
push
mov
std
adc
mov
push
xlat
loope
inc
mull
cmp
sbb
mov
add
je
fwait
adcb
out
jp
or
daa
in
repz
stc
pop
pop
adc
lcall
lcall
cmp
push
or
and
stos
lcall
stc
push
imul
xchg
mov
fnsave
jl
add
out
test
or
ret
subl
lret
cmpsb
ljmp
mov
gs
mov
movsl
cmp
lahf
sub
pop
mov
in
xchg
sahf
push
mov
add
test
pop
lock
cmp
sahf
and
xchg
ds
cmpsl
mov
jle
mov
and
rolb
mov
cmpb
inc
sbb
sbb
testb
jmp
mov
xchg
mov
movsl
xchg
cmp
dec
out
and
ds
add
push
mov
and
test
dec
scas
subl
dec
cmp
lret
xor
mov
jge
ss
fstps
add
jmp
and
jne
cmc
ret
pop
adc
rcrl
stos
lcall
in
fs
sbb
repz
test
mov
into
out
jno
je
enter
push
call
add
fdivl
cmp
cwtl
je
add
test
xchg
ja
xchg
inc
fidivs
jge
pop
cwtl
adc
push
xchg
les
cltd
in
lds
mov
addl
mov
xlat
jecxz
xchg
out
mov
sbb
inc
aad
ljmp
jmp
pushf
inc
cmp
mov
mov
pop
inc
fadds
lret
sbb
mov
sti
out
pop
jbe
fs
dec
mov
scas
inc
arpl
sub
lea
lahf
cmp
lret
xorb
fdivl
ja
pop
or
and
or
data16
outsb
mov
push
sub
pop
arpl
sub
in
mov
test
push
sub
xchg
jge
gs
divl
outsb
xchg
mov
mov
popa
adc
btc
daa
gs
adc
xor
jae
mov
cltd
mov
and
mov
lods
mov
xorl
lret
push
shl
test
nop
ret
xchg
jmp
cwtl
jp
lret
mov
push
push
sbb
inc
sahf
mov
clc
add
sbbb
mov
or
clc
jae
jo
xor
ret
je
cld
addr16
xchg
stc
sar
dec
pusha
dec
mov
push
dec
rclb
int
outsb
mov
add
push
mov
pop
sar
call
or
aas
shrl
xor
shll
and
xchg
arpl
push
mov
stos
lcall
outsb
scas
mov
cmp
add
xor
cmp
jns
out
push
ret
outsb
xor
cmc
mov
dec
fs
outsl
xor
enter
aas
push
andb
add
rorb
mov
sub
stc
cmpb
ss
mov
mov
push
inc
sub
or
mov
mov
clc
cmc
push
data16
fstpl
aaa
dec
cltd
sbb
fs
sahf
nop
sarb
cmpsb
cs
cmpsl
cmpsl
xchg
xor
leave
jg
ljmp
jno
repnz
dec
push
xchg
xchg
out
testb
add
mov
sbb
outsb
ja
xchg
lret
push
rol
inc
xor
mov
mov
fcompl
shll
add
les
mov
dec
add
lret
popa
in
sub
repz
inc
mov
cld
movsl
lcall
pop
mov
mov
repnz
pop
or
sub
lret
mov
mov
inc
xor
mov
xor
dec
inc
adc
aas
sub
push
pushf
sbb
cmovo
cltd
mov
adc
inc
in
push
shrb
dec
or
js
inc
pop
inc
mov
pop
jp
out
int3
jecxz
orl
adc
shr
mov
or
or
loopne
out
cmp
repz
jp
xorl
mov
lods
push
shll
and
outsl
leave
lcall
cltd
lcall
mov
sub
xchg
mov
jge
sub
lcall
xor
pushf
imul
test
mov
adc
push
mov
popa
aad
xor
inc
xchg
das
jmp
mov
in
mov
cmpsl
pop
cltd
in
iret
adc
or
es
xor
xchg
push
jne
dec
xchg
test
xchg
pop
mov
mov
mov
aaa
insl
mov
aas
aam
sub
cltd
pop
cmp
jg
mov
pop
mov
fwait
int
dec
stc
test
and
xchg
cmp
andl
xor
loope
aam
xchg
out
inc
dec
rclb
cmp
cwtl
inc
ja
sub
xchg
pop
sub
cmp
dec
sti
xchg
fcmovnb
ss
pop
mov
sub
insb
and
cltd
lds
push
es
daa
and
daa
cmp
mov
in
xchg
cmp
popa
sbb
or
lea
add
jl
sub
push
xor
xor
out
pop
jmp
orb
push
imul
jns
xchg
ds
jns
push
push
nop
mov
xor
inc
aas
adc
leave
add
push
daa
int3
pop
shl
adc
rorl
cmp
lahf
mov
jge
push
mov
ja
sub
add
das
lea
adc
orl
mov
add
adc
test
aas
dec
orb
jb
mov
rcrb
xchg
xchg
inc
push
xchg
push
pop
mov
inc
cli
mov
push
add
jnp
xchg
mov
inc
mov
lcall
test
les
into
sbbb
outsb
out
lds
test
fcmovne
add
cmp
ja
pop
and
cmp
push
lea
pop
xchg
test
lock
and
sarb
cld
mov
cmp
push
mov
inc
xchg
loope
lock
dec
js
push
dec
adc
push
int
in
xor
xchg
sub
jbe
in
jb
mov
mov
popa
xor
outsl
xor
add
movnti
fisubrl
cmp
loop
and
mov
sti
jle
scas
jl
pop
fisttpll
lcall
and
es
or
movsb
pop
lret
outsl
scas
stos
scas
jb
sbb
shlb
pop
pop
or
cmp
sub
dec
hlt
movsb
jge
adc
pop
or
add
out
sahf
push
rol
std
push
mov
mov
pop
dec
fsubp
test
outsl
sbb
adc
add
adc
stc
out
nop
pop
inc
add
and
jmp
out
add
fdiv
ret
popf
sti
and
sbbb
and
push
sub
xchg
out
and
or
lahf
inc
test
jecxz
int
push
jle
inc
cli
mov
test
jmp
jb
aad
rorb
push
dec
or
sub
call
add
nop
mov
popf
insb
shlb
lods
outsb
dec
or
pop
loope
cmpsl
mov
mov
in
jecxz
and
ds
sub
bound
sub
iret
data16
cmp
out
pop
add
or
push
or
xor
movsb
push
add
pop
movsl
cmp
lret
or
mov
xor
outsl
movsl
std
sbb
ret
add
jne
fnstenv
sbbb
leave
mov
ret
inc
xor
pop
push
adc
enter
lods
sub
jb
adc
push
in
jl
inc
js
test
lahf
cs
fcmovnb
jae
inc
leave
mov
movsb
cwtl
mov
mov
ret
das
mov
imul
icebp
movsbl
dec
stos
mov
scas
das
jmp
lock
dec
cmpsb
pop
dec
inc
jne
inc
push
lods
cs
dec
je
xchg
jmp
adc
cmp
pop
insb
mov
sbb
mov
inc
push
ds
sbb
scas
cwtl
out
out
stc
inc
popf
add
stos
ret
cli
mov
mov
out
movsl
sbbl
mov
mov
insl
and
aas
sbb
push
lret
dec
adc
into
sbb
jecxz
ret
nop
xchg
sahf
cmp
daa
xor
fldl
sbb
xadd
xchg
sbb
lds
mov
repz
and
mov
jg
lret
shl
cmp
arpl
es
or
mov
adc
cmpsb
or
xchg
or
sbb
stos
adc
add
jge
cmpsl
pop
cmp
pop
xor
adc
rolb
push
lock
cmp
cltd
mov
sbb
ret
add
push
push
iret
cld
and
movl
mov
out
pop
daa
add
inc
lret
cs
push
pop
sbb
dec
mov
add
xchg
or
movsb
dec
ja
fsubl
jb
xchg
push
stc
out
xchg
cwtl
adc
repnz
pop
xor
inc
pushf
pop
or
loop
ret
js
jecxz
push
int3
out
dec
sbbb
dec
sub
push
movsl
pop
in
xor
sub
mov
push
repnz
cld
fdivrl
adc
lret
sbb
movsb
and
xor
sahf
cli
loope
cmp
dec
fdiv
mov
sub
cmc
test
or
cmp
mul
cmp
filds
mov
mov
jmp
push
lret
nop
ficomps
push
cmpsl
add
add
sarb
or
jae
cmp
lods
dec
in
mov
aad
and
push
in
or
dec
xor
sub
inc
mov
test
jne
negb
or
jns
mov
fwait
std
movsl
repz
movhlps
aaa
mov
sub
xlat
pushf
insl
mov
jmp
or
inc
push
adc
mov
mov
jmp
stc
xchg
enter
in
mov
push
cmp
iret
test
push
cmpb
mov
arpl
pop
movsb
repnz
mov
xor
shlb
jbe
ret
cmp
mov
add
pop
push
stc
jb
idivb
and
mov
stc
sti
shlb
jno
insb
mov
mull
flds
subb
inc
xchg
mov
and
cwtl
imul
push
fdivrp
les
mov
inc
sti
or
xchg
or
lea
dec
test
sub
std
pop
add
das
inc
mov
or
inc
xor
ljmp
pop
pushf
push
adc
stos
inc
adcl
test
mov
push
jns
mov
data16
xchg
sbb
jae
and
popa
loop
sti
inc
adc
push
fidivl
clc
mov
add
rorb
cwtl
cmp
movsl
icebp
add
pop
xor
iret
lret
pop
xor
and
int
push
js
sahf
out
pop
xlat
out
adc
std
fwait
xchg
loop
cmpsb
cmpsl
test
mov
jmp
cmpsb
mov
lock
xor
aaa
data16
jno
loopne
stos
jo
aaa
xor
xchg
mov
xor
xor
adcl
insb
dec
adc
cmc
jg
fwait
das
sbb
inc
mov
bound
mov
pop
sbb
fstpt
mov
stc
sub
xchg
add
dec
inc
mov
fidivrl
loop
popf
xor
cmp
and
aas
stos
adc
scas
cs
stos
dec
mov
push
jb
xor
outsl
jns
pop
mov
jb
fldcw
xlat
stos
ret
gs
push
lahf
jmp
xchg
fdivr
cmpl
push
leave
lods
xlat
repz
lods
int
lret
fiaddl
cmp
jmp
lods
dec
sub
loope
mov
iret
sub
push
test
cmpsb
sbb
add
sbb
adc
push
mov
mov
jnp
mov
repnz
lods
add
jae
pop
mov
mov
mov
xor
std
gs
addr16
add
sbb
es
shrb
xor
xchg
jmp
aad
xchg
ret
add
lock
sbb
ljmp
in
pop
scas
in
sub
mov
stos
dec
fmuls
popf
js
lcall
adc
arpl
adc
int3
cmp
mov
and
mov
movsl
mov
repnz
je
orb
cmp
loopne
sub
out
pop
sbb
in
push
cmpb
sbb
push
cmp
std
loop
sub
inc
aaa
dec
push
and
shlb
push
sbb
in
adc
add
cmpb
jnp
ds
sbb
int
jns
shlb
add
out
sbb
dec
mov
enter
mov
test
fidivs
jg
mov
push
jge
aad
test
cmp
sub
mov
clc
pop
cs
mov
js
sub
icebp
add
push
adc
sbb
mov
js
jg
insl
pop
sbb
inc
cld
push
adc
sbb
test
jmp
and
push
sub
add
sbb
arpl
sbb
adc
ss
cmpsb
fimuls
arpl
lods
dec
in
push
and
and
fldcw
and
dec
in
adc
repz
movl
cmp
into
loope
dec
jl
sub
prefetcht1
xor
xchg
push
outsb
jp
ja
xchg
insb
jecxz
jmp
js
inc
push
mov
and
lcallw
or
jl
add
jne
jg
mov
lock
mov
out
and
mov
mov
jo
iret
outsb
jb
or
lea
xchg
xchg
push
movsl
test
shrl
insb
pop
out
fcomps
in
lods
inc
jbe
mov
mov
adc
add
mov
fstpt
fmull
mov
sub
xor
push
arpl
repz
xchg
ret
rcrb
pop
rclb
inc
repnz
sbb
mul
repnz
ret
xchg
call
shrl
repz
mov
ret
hlt
in
test
adc
adc
mov
js
cli
mov
std
xorb
inc
xchg
int3
icebp
lods
mov
mov
jnp
jg
imul
test
add
dec
pushl
xchg
push
gs
sub
mov
enter
gs
push
dec
cmp
cs
aam
sub
xchg
repz
arpl
stos
xorl
adc
xchg
jo
dec
ja
test
ret
jno
sbb
lds
cmpsb
fbld
add
arpl
std
popa
out
mov
cmc
arpl
std
inc
repz
icebp
pop
fnstsw
sub
or
sub
mov
lds
jnp
sub
push
out
sub
xor
mov
inc
imul
mov
cmp
hlt
loope
shlb
enter
aad
jno
ret
mov
hlt
fs
subb
inc
jl
dec
cwtl
aas
cmc
sub
fcomps
inc
and
and
adc
aam
pop
sub
test
je
pop
pop
mov
je
dec
and
xor
gs
stc
outsl
fprem
in
cs
ret
xlat
stos
repz
or
mov
test
fstpl
xor
fidivrl
movsl
test
fcompl
cmp
xor
push
or
fsubrs
test
pop
push
leave
and
inc
xor
loope
mov
jl
lods
xor
inc
arpl
es
mov
sub
jns
divl
mul
mov
xchg
mov
pushf
gs
xor
orb
inc
adc
inc
in
sbb
sbb
lods
or
popa
ljmp
push
fs
mov
cmp
fucomi
sub
icebp
pushf
jns
mov
mov
lods
ljmp
sbb
cli
js
stc
rcrb
push
push
cmp
pop
jnp
fldt
adc
sub
in
and
jo
vandnps
xchg
push
push
in
int
xor
insb
dec
jge
aas
in
push
imul
pop
pop
lock
sbb
fcoms
gs
pusha
fwait
js
sub
call
cmp
jne
sub
mov
jl
adc
dec
fisubrl
fs
mov
sarl
fidivl
and
mov
cmpsb
sbb
push
dec
push
dec
push
cmp
add
pop
daa
out
push
ret
inc
jmp
jle
mov
daa
aad
mov
pusha
jmp
pushf
lahf
xor
jo
sub
add
std
movsl
push
mov
and
sbb
sub
push
mov
push
loop
or
ret
jl
sbb
repnz
nop
daa
and
stos
pop
pop
jge
push
cmp
fstpl
sarb
mov
stc
push
cld
sar
loopne
je
sahf
shrb
movsb
and
fcomps
add
dec
jnp
cmp
lahf
lcall
gs
push
or
sub
mov
pop
xchg
push
int3
insl
or
shl
pop
rolb
cld
mov
in
test
jo
xor
in
inc
orb
rclb
push
cld
jecxz
pop
cmp
inc
scas
jge
jno
push
in
pop
ljmp
fcmovnb
inc
cmp
mov
popf
icebp
enter
push
pop
test
xor
adcl
in
add
xchg
iret
arpl
cmp
mov
mov
das
xor
imul
es
shll
neg
push
fs
jbe
mov
pop
adc
mov
dec
push
in
pop
cmp
jl
xor
js
or
jg
xlat
ss
test
stos
mov
push
movsb
iret
or
mov
pop
js
stos
ljmp
or
cmpl
test
out
push
xchg
call
push
adc
inc
lret
cld
int3
mov
sbb
fucom
test
orb
cmp
pushw
cmp
pop
cs
adc
xor
mov
int3
mov
push
sub
sbbb
shlb
jns
adc
or
adc
push
mov
popa
cwtl
cmp
and
ret
pop
fwait
xchg
mov
mov
in
jl
push
push
cli
std
xchg
mov
fdivrl
cmp
inc
jnp
pop
inc
cmp
lret
jge
stc
xchg
fisttpl
mov
dec
adc
jnp
xor
mov
xchg
int
mov
pop
mov
in
std
popa
mov
aas
cmc
insb
enter
push
daa
mov
mov
pop
xchg
jecxz
xchg
and
pop
xor
subb
frstor
outsl
adc
dec
std
int
xor
mov
xchg
cmp
xchg
push
mov
mov
and
xchg
data16
push
dec
test
loope
adc
add
shll
popf
jg
inc
daa
xor
fsubl
xchg
or
cmc
add
inc
cmp
sub
mov
popa
xchg
loop
jno
fnstenv
ja
add
dec
mov
arpl
jge
iret
inc
or
sbbb
in
pop
stos
sbbb
out
stos
fwait
pop
addr16
pop
leave
or
add
mov
add
clc
clc
out
out
add
mov
lods
dec
arpl
mov
lret
push
movsl
pusha
mov
mov
fsubrs
and
aam
ja
daa
into
lock
sub
adc
arpl
cmp
pop
in
push
sub
jg
push
fsubl
fcompl
inc
xor
popa
push
dec
fildll
bnd
add
arpl
cld
pop
dec
pop
loope
shll
imul
inc
adc
testl
xchg
sub
jae
cmp
iret
mov
cmp
pcmpgtb
push
mov
test
js
dec
and
out
sbb
xor
inc
int
adc
jno
dec
out
inc
pop
mov
sub
inc
mov
leave
sbb
jmp
call
sbb
push
sub
jnp
les
add
aam
push
cwtl
sub
cwtl
out
pslld
cld
xchg
test
mov
mov
fcoms
movsl
enter
mov
insl
pop
xchg
int3
lret
scas
movsb
lcall
fidivs
push
ds
lahf
lea
in
inc
clc
push
jmp
shlb
or
and
outsb
outsl
cmp
jmp
outsl
jnp
push
push
lcall
pushf
jo
jecxz
subl
out
aas
mov
lods
es
and
outsl
inc
and
dec
jae
jg
or
lods
push
inc
adc
mov
mov
hlt
movsl
sub
leave
hlt
adc
inc
push
cmp
insl
adc
stc
and
loope
push
dec
pop
mov
cmpsb
sarl
adc
push
out
sti
dec
push
roll
pop
xorb
xchg
mov
mov
pusha
dec
xchg
and
imul
mov
shrb
dec
xor
dec
adc
sahf
insb
jb
test
adc
jge
cmp
out
push
xor
lds
mov
xchg
push
cmp
stos
into
out
pushl
xor
dec
das
popf
ja
je
mov
repnz
loop
mov
mov
push
pop
imull
push
out
adc
leave
inc
fnstcw
add
lret
insb
jnp
mov
push
leave
jae
xchg
cmc
and
inc
or
das
lahf
xchg
or
divb
out
inc
cmc
jecxz
sbb
mov
fwait
and
daa
scas
sarl
jmp
inc
loopne
pop
and
cs
dec
icebp
cmc
jge
hlt
mov
pop
add
lcall
jl
adc
inc
jle
fs
push
adc
xor
or
and
pop
inc
decl
mov
mov
cmp
sub
push
aas
xor
xchg
arpl
fwait
cltd
jle
push
and
push
out
loopne
pop
pop
sub
dec
clc
pop
andl
andl
repnz
xlat
sahf
or
cmc
ljmp
out
xchg
popf
sbb
fdivs
call
inc
adcb
popa
addr16
jl
and
bound
cmp
xchg
xlat
lahf
fwait
ss
mov
out
out
cmp
idivb
sub
imul
sahf
push
pop
in
or
and
cwtl
sub
pusha
mov
or
push
sub
mov
push
das
movsl
mov
daa
adc
or
dec
xchg
fnstenv
test
push
and
int
inc
sub
cmp
pop
mov
lcall
fistl
data16
das
cmp
iret
sub
push
push
mov
cmpsb
sub
dec
movsb
outsl
stc
xchg
scas
testb
addr16
aad
pop
mov
ficompl
sbb
outsb
inc
bound
pop
cmp
sub
iret
mov
scas
push
pop
and
sbb
adc
xchg
out
jecxz
and
sbb
xchg
jmp
es
adc
inc
and
xchg
sbb
sub
xor
xor
rcl
adc
mov
xchg
sub
dec
sub
jp
loope
and
scas
dec
fmuls
repz
push
aad
out
mov
lret
repz
mov
aam
mov
adc
mov
jge
gs
mov
fnstcw
cld
stc
stc
pop
push
inc
jnp
dec
dec
mov
dec
les
add
pop
aad
adc
sub
aad
mov
popf
andl
and
push
jle
xchg
sub
cld
add
imul
pop
cmp
rcr
movsl
inc
or
loopne
rol
pushf
sbb
cld
adc
arpl
adc
push
mov
mov
push
fmull
aas
mov
dec
push
cmc
cmp
aad
out
xlat
dec
aad
mov
push
div
data16
sub
sub
pop
add
aad
lcall
xchg
daa
clc
roll
out
into
lods
rorl
mov
test
cmp
mov
xor
test
push
or
sub
mov
lahf
ja
jle
movsl
pop
addr16
je
sbb
mov
jno
lret
outsb
xchg
shll
test
and
and
aad
xor
into
mov
pop
movsl
aad
push
xor
dec
neg
jl
in
mov
loop
add
lret
rcrb
cmpsl
push
data16
pop
push
xor
mov
notl
jge
or
lods
test
pop
movsb
jnp
pop
outsl
aad
add
push
xchg
add
iret
adc
xor
xchg
push
and
fld
jo
imul
fwait
popa
idivl
js
dec
add
test
loope
ficoml
xchg
cmp
mov
xor
stos
inc
mov
cmpsb
mov
jo
cwtl
push
cmc
add
mov
jae
jge
mov
pop
adc
rorl
lock
jle
xor
int
xor
call
xchg
xchg
scas
cmpsb
cmpsb
jns
sub
add
pushf
fldcw
jne
adc
ret
jge
rolb
push
add
pop
jmp
xchg
insb
sbb
je
jl
fsubrs
adc
nop
jne
outsb
loope
aaa
push
mov
fwait
lds
adc
xchg
in
aaa
in
sbb
cmp
add
xor
push
lcall
fsub
mov
pop
mov
jae
push
mov
sti
fildll
push
jnp
push
in
mov
xlat
pop
xchg
and
sti
aaa
jo
adc
mov
xor
pop
sbb
add
mov
jns
cs
outsl
sub
call
mov
shll
dec
jecxz
sahf
xor
jecxz
or
pop
push
test
cmp
adc
outsl
cmp
out
jnp
fsubs
inc
xlat
xchg
adc
adc
int
xchg
outsb
jecxz
test
stos
xchg
addr16
mov
dec
add
sub
shr
div
in
cltd
and
lcall
nop
pop
mov
icebp
xchg
adc
and
lods
cli
mov
and
rolb
xchg
pop
add
repz
sbb
out
bound
pop
cs
or
jle
out
cltd
pop
out
fnsetpm(287
xchg
inc
int
je
jo
push
sahf
mov
fcmove
mov
xchg
pop
inc
pop
scas
shr
sub
xchg
mov
pop
rcrb
test
cmp
inc
into
enter
loopne
in
inc
pop
scas
testb
pop
jge
fucomip
sbbl
cli
pop
jnp
pop
add
imul
arpl
mov
lods
out
xor
inc
jo
inc
add
mov
pop
cmpsl
lret
dec
pusha
mov
shlb
dec
inc
rep
xchg
add
leave
and
adc
jp
push
jae
fldt
push
push
add
dec
mov
lea
pushw
jno
fmulp
sub
mov
push
pop
adc
mov
cmp
loop
ds
dec
test
stos
cwtl
data16
mov
mov
stos
mov
enter
iret
xor
push
mov
cmc
insl
and
aaa
addr16
or
mov
jl
ret
sub
int3
pop
fisubrl
mov
lea
or
loope
adcb
and
ss
cmpsb
notl
shll
fimuls
fwait
scas
mov
jns
cmp
daa
jl
les
sbb
int3
into
jne
hlt
push
mov
enter
jmp
das
sub
cmp
mov
stos
imul
xchg
adcb
pop
fldl
leave
std
fs
sbb
cmp
adc
mov
mov
or
push
dec
ja
ja
pop
enter
sbb
imul
test
mov
out
jle
pop
bound
mov
pop
jne
scas
mov
aas
loopne
ja
mov
add
mov
cld
es
int3
xor
loopne
sahf
add
aad
dec
pop
sbb
popa
xchg
add
ss
fistpl
inc
mov
data16
mov
sub
sbb
sub
ret
fisubrs
jg
js
cmp
and
out
jno
leave
out
shll
and
xor
xchg
imul
sbb
rcrb
mov
mov
lahf
lret
mov
pop
pop
insl
cmpsb
mov
jg
mov
mov
test
add
push
fs
shl
fs
call
mov
mov
std
xlat
jne
fwait
xchg
cmc
aam
add
adcb
cmp
mov
int
and
inc
or
cmp
sbb
outsl
test
std
adc
or
rcrl
mov
mov
xchg
jno
fmuls
adc
xchg
sbb
inc
clc
and
lahf
or
sahf
lahf
dec
push
push
js
sub
out
xor
xchg
pushf
push
test
loope
std
movsb
clc
das
push
push
inc
push
push
mov
into
mov
rcrl
mov
mov
inc
pop
jae
jne
int
pop
push
sbb
mov
cmp
arpl
insl
loop
insl
mov
sbb
and
xor
inc
in
cmp
gs
fadd
and
out
xchg
jbe
lahf
jge
lahf
lods
sbb
fs
xchg
cmc
lds
imul
mov
out
cmp
mov
stc
sbb
mov
data16
or
sbb
push
stc
xor
xor
pusha
cld
test
jmp
pop
xor
and
sbb
popa
cld
aam
push
inc
lret
jecxz
xchg
xor
int
push
adc
sbb
cmp
jmp
test
mov
jmp
mov
mov
xchg
fadds
mov
fwait
gs
test
sbb
setb
and
imul
mov
mov
fwait
jae
add
sbb
int
xlat
push
add
push
lahf
inc
mov
jge
cs
scas
in
shrb
popf
jecxz
outsl
xchg
into
pop
imul
test
fstpl
ds
cmp
lods
cmp
test
lds
mov
adc
pop
pop
xlat
fisubrl
pop
pop
mov
js
dec
mov
cld
sub
mov
add
xchg
sub
jns
xlat
test
insb
mov
push
sti
pop
push
xchg
cmp
loopne
dec
mov
aas
xor
movsl
loope
and
dec
adc
or
inc
push
sbb
gs
sbb
in
sbb
mov
push
xor
xlat
hlt
push
stos
js
mov
push
stos
jge
push
and
shll
mov
jae
ficompl
stc
nop
shl
dec
fbstp
dec
xchg
or
and
mov
mov
mov
in
or
repz
push
cmp
add
aaa
and
fldcw
xchg
hlt
lret
jbe
in
mov
shll
movsl
lock
jmp
shll
pusha
btr
pop
in
adc
mov
stc
cmpsb
into
cld
daa
ret
cmpsl
and
in
jmp
imul
sti
pop
pop
inc
aas
sub
or
imul
adc
mov
js
mov
or
scas
cwtl
call
fwait
test
add
js
popa
push
mov
mulb
add
pop
aam
mov
jp
sub
mov
pop
jg
and
shr
test
and
xor
xchg
pushf
repnz
cmp
pusha
xchg
rcrb
mov
fwait
and
stos
mov
hlt
fs
pushf
fcomi
ret
or
jnp
xchg
sarb
shl
dec
xchg
xchg
into
xchg
fucomp
jb
ljmp
inc
sbbb
les
mulb
mov
mov
add
outsb
and
outsl
data16
fnstsw
xor
cmp
sub
fldl
sub
aas
mov
xchg
xor
pop
jbe
xchg
je
iret
xchg
add
xchg
mov
in
fmull
fidivl
jns
or
mov
pop
push
test
dec
or
popf
fbstp
and
stos
inc
loopne
iret
and
gs
mov
inc
loope
dec
xchg
mov
mov
sbb
shlb
loop
pop
cmc
sti
in
sub
mov
push
inc
inc
lods
jno
pop
cli
xchg
lret
test
pop
test
inc
jecxz
sbb
daa
xorl
icebp
dec
cmc
lock
xchg
test
outsl
mov
cmp
insb
shrb
lret
sbb
orl
ljmp
adc
jp
pop
push
rorl
push
xchg
dec
adc
pop
mov
inc
push
add
mov
nop
orl
gs
pop
fxch
push
in
inc
mov
mov
add
lds
scas
nop
mov
adc
fimuls
inc
or
xor
notl
leave
sbb
jne
outsl
and
out
stos
sub
dec
jge,pn
sub
icebp
cmp
add
adc
int
push
ja
cwtl
popa
push
jecxz
scas
movsb
fwait
adc
imull
fxch
adc
jge
ret
adc
xchg
adc
mov
leave
and
cs
popa
lods
dec
jle
movsb
cs
mov
pushf
insl
aaa
push
push
test
mov
mov
xchg
mov
jge
push
sarl
jp
inc
lcall
shll
mov
jne
rorb
add
push
aaa
ja
fidivs
frstor
testl
movsl
push
mov
fcomip
imul
arpl
ja
dec
jge
xor
fadd
aas
sbb
xor
nop
sbb
popa
cmpsl
lret
fxch
pop
or
mov
stos
arpl
dec
fisttpl
sub
pop
or
mov
testb
sbb
mov
roll
loop
cmpsb
sbb
xchg
inc
pop
dec
fbstp
add
jecxz
int
sbb
adc
jg
cmpsb
lret
in
out
shll
sahf
scas
pusha
ret
popa
jle
sub
mov
jecxz
sbb
sub
cwtl
imul
aad
xchg
mov
aaa
mov
xchg
aaa
rcr
push
sarb
sahf
mov
fmuls
cmp
cld
cmp
push
je
daa
imul
mov
rclb
fld1
clc
movsb
std
shr
mov
stc
repz
and
in
test
je
and
rclb
out
rclb
lahf
adc
sbb
sub
or
hlt
push
ss
xchg
sub
xor
pop
push
inc
aad
gs
std
adc
or
sub
decl
dec
scas
mov
adc
dec
ds
or
pop
mov
mov
repnz
fdiv
and
pop
test
push
pop
push
in
or
ret
movsb
lock
adc
sarb
mov
jae
jnp
clc
mov
xchg
inc
movsb
mov
mov
push
movsl
jnp
hlt
dec
xor
cli
out
jmp
popa
add
push
cmp
pushf
lea
xchg
nop
int
clc
adc
fdivrl
sahf
ret
inc
in
sub
nop
ret
pop
enter
das
xchg
mov
sub
leave
inc
dec
jmp
popa
cmp
inc
addb
movsb
sub
push
jg
xchg
push
inc
lret
je
clc
das
jg
jle
dec
push
mov
fidivs
outsb
add
rorl
scas
aaa
pop
push
cld
mov
in
and
and
sbb
fdivrl
cmp
xor
or
imulb
pop
fxch
stc
add
loop
clc
add
aas
pop
inc
or
dec
jecxz
lods
xchg
and
jl
sti
dec
mov
fcomi
imul
fsubp
dec
jecxz
adc
or
scas
push
pushf
mov
enter
fisubl
xchg
mov
xchg
pop
ja
fs
cld
sub
lret
push
mov
loope
cmpsb
mov
test
dec
dec
sbb
adc
inc
push
es
insb
or
sbb
inc
test
popa
stos
push
jp
cwtl
xchg
test
add
ret
cmp
jbe
push
push
mov
xchg
pusha
in
out
dec
push
mov
test
or
mov
pop
test
dec
xchg
inc
cmp
mov
xorl
xor
pop
push
or
lahf
mov
bound
adc
jae
jbe
and
and
aam
inc
mov
in
inc
sbb
ds
sub
sub
and
push
lods
int3
fs
rclb
outsl
jb
jnp
aaa
adc
mov
scas
int
sbb
enter
mov
add
xchg
sub
mov
xorb
ds
sub
adc
stos
push
nop
dec
int3
inc
xor
test
lea
insl
dec
lock
loopne
ret
and
aad
sub
push
jno
xchg
ss
sub
out
mov
mov
xor
je
mov
daa
inc
xchg
dec
xchg
or
ds
addl
pop
and
jle
out
xchg
cmpsb
and
loope
loope
jle
popa
sbbb
mov
xor
loop
movsb
xchg
data16
jnp
sbb
cmpsb
jne
pushf
push
aas
pop
jae
and
and
ja
shr
xchg
xchg
ficoml
push
orl
mov
mov
sbb
cmp
shll
fcoml
push
cmp
xchg
add
daa
pop
cli
xchg
pop
jno
aas
pop
arpl
jle
xor
fucompp
push
ljmp
out
int
add
push
cmp
and
mov
pushf
ficomps
xor
int3
inc
push
popf
xor
ds
movsb
mov
int
je
sub
test
xchg
stc
sub
and
out
and
in
jne
into
xor
mov
mov
lock
xchg
jmp
stos
xchg
cmp
int
ljmp
mov
out
inc
jne
sar
xor
mov
jo
shrl
sub
test
out
imul
movsl
fistpl
inc
adc
iret
fisubs
mov
xchg
fsubs
add
mov
sahf
sub
jl
idiv
and
add
adc
sbbb
fdivrs
aam
int3
les
push
aas
mov
les
in
fmuls
push
arpl
test
xchg
mov
xchg
pop
add
out
add
or
adc
shl
cmp
or
pop
adc
je
jae
out
mov
fs
add
sub
int3
sub
into
and
xorl
ffreep
dec
push
imul
insb
xchg
dec
fs
jb
rolb
cmc
fstps
jbe
adc
push
jae
clc
mov
pop
arpl
loop
das
fs
mov
iret
xlat
test
jae
pop
dec
inc
std
sbb
cmp
int
mov
mov
jbe
push
fdivrs
insb
sbb
jnp
xchg
jnp
and
sti
mov
xor
jo
cmp
inc
inc
pushf
add
pop
ds
pop
jp
lcall
out
or
pop
or
adc
daa
adc
pusha
mov
adc
push
add
jns
shl
cmp
jge
cli
adc
dec
jae
clc
popf
in
dec
ret
leave
cmc
repnz
mov
fsts
loope
push
inc
dec
cmp
cwtl
mov
pop
jp
test
xor
sti
mov
pop
xchg
ror
cmpb
or
inc
daa
daa
adc
shrb
xchg
scas
mov
xchg
dec
je
mov
inc
int
adc
sbb
sarw
pop
xor
push
imul
ficoms
mov
mov
test
and
or
sar
cmp
cltd
in
xlat
mov
shl
and
fisubs
repnz
cmp
pop
pop
pushf
mov
jecxz
pop
out
add
xor
pop
cmp
repnz
push
ljmp
xchg
or
mov
data16
jne
inc
pop
imul
push
xor
xchg
cli
popl
push
movl
adc
rep
jbe
pusha
xchg
and
sbb
inc
loop
dec
jp
ljmp
xor
leave
pop
jnp
mull
mov
or
push
xor
imul
sub
cltd
pushf
bound
cmp
mov
xchg
and
pop
adc
je
xor
add
xchg
dec
outsb
orb
dec
cwtl
mov
push
push
dec
or
aaa
fstpt
xchg
dec
in
mov
seto
push
stc
fwait
and
sbbl
or
add
ret
or
mov
pop
stc
dec
mov
push
cmpsl
cmp
cmp
imul
xor
movsl
xchg
aaa
xor
push
xchg
pop
jl
outsb
mov
test
sub
xchg
arpl
mov
cmc
ja
mov
push
ja
out
dec
stc
out
push
ljmp
bound
in
jecxz
inc
cmp
jl
imul
or
inc
in
adc
stos
xor
jae
push
pop
ret
ret
and
stos
xor
pop
xchg
jb
mov
shl
mov
mov
cmpsl
xchg
insb
stc
push
lock
lret
inc
jmp
lods
jmp
enter
sbb
fmull
mov
mov
movhps
push
add
clc
addr16
hlt
pop
test
mov
xchg
stos
repnz
adc
jmp
dec
shll
xchg
nop
mov
mov
mov
mov
xor
sti
add
cmpl
push
xor
cmpsb
xchg
pop
je
pop
stos
in
outsl
cmp
aam
shrb
mov
mov
stos
test
push
pop
test
popf
and
movsl
inc
popf
lret
sarb
mov
mov
jmp
xchg
in
jae
mov
cwtl
je
out
in
mov
lods
pop
adc
dec
shr
fwait
shlb
mov
call
add
mov
loop
js
add
mov
or
lock
stc
cmpsl
push
icebp
add
mov
pop
push
push
mov
add
or
and
sbb
clc
sub
push
test
cwtl
mov
lods
pop
jp
mov
int
mov
sub
pop
push
xor
mov
adc
addb
jae
testl
test
push
nop
lods
cmp
sbb
lods
hlt
push
mov
loope
out
xor
bound
or
sti
pop
jg
and
gs
sub
loope
stc
inc
insb
or
mov
imulb
push
push
sub
ss
xchg
jns
xchg
adc
cmp
add
stc
stos
push
jmp
out
add
in
sahf
inc
das
aam
inc
xorb
mov
xor
andb
movsl
lret
sub
or
inc
cmp
aas
dec
or
and
xlat
cs
or
mov
je
pusha
adc
iret
sbb
and
push
pop
mov
scas
iret
gs
bound
into
shlb
cmp
nop
jecxz
xor
lahf
or
jmp
mov
mov
mov
ret
xor
xor
stc
test
jbe
cmp
mov
and
or
in
mov
ret
sbb
movl
add
imul
arpl
hlt
mov
pop
inc
jmp
sub
push
mov
dec
aaa
mov
mov
and
xchg
inc
cwtl
sti
lahf
out
sub
stos
sarb
out
xchg
mov
push
add
mov
or
push
push
stc
popf
push
push
sbb
scas
movsl
repz
out
xlat
jge
into
sub
andl
xchg
int3
and
ljmp
push
fimull
sbb
and
push
xlat
push
imul
ficompl
inc
xor
mov
inc
jns
xor
xor
pop
in
ficompl
sub
push
ja
jns
lret
mov
clc
repnz
cmp
dec
dec
pop
cmp
sbb
sar
inc
popa
jmp
push
mov
lret
andl
pop
shl
or
mov
hlt
in
ret
mov
repnz
xchg
xor
int
jnp
stos
es
insl
inc
out
clc
aad
hlt
in
cmp
jbe
and
jp
adc
enter
push
fs
ljmp
and
outsl
lds
mov
cwtl
loope
fildl
and
repz
add
das
push
or
lcall
sub
or
mov
mov
jno
jl
fs
add
inc
dec
pop
hlt
lea
out
data16
and
inc
cltd
mov
push
sbb
fmull
js
decb
xchg
push
xchg
cmpsl
jl
cwtl
mov
cmp
push
in
push
jo
mov
and
xor
sub
or
inc
test
adc
jmp
or
testl
pop
or
adc
mov
and
and
pop
inc
xchg
mov
sub
in
mov
insl
rcrl
mov
jl
inc
cltd
pusha
repnz
nop
lret
pop
lcall
lock
and
sbb
sbb
jle
repz
mov
sbb
loopne
clc
dec
xchg
mov
scas
xor
sbb
xor
fwait
in
repnz
or
mov
push
jae
pop
je
fs
and
in
sbb
in
sahf
inc
and
lods
leave
repnz
pop
inc
pop
jecxz
jae
aad
add
push
int
jae
and
in
lock
inc
aaa
sbb
cmp
nop
pop
add
lods
cld
test
int3
sbb
mov
cltd
push
insl
aad
in
lods
shlb
jbe
aad
ja
daa
pop
mov
mov
andb
and
pop
push
inc
cmp
sbb
stos
in
lcall
mov
xchg
xchg
fwait
or
or
pop
adc
rcrb
and
imul
mov
jne
outsl
mov
incb
push
pop
xor
aad
xchg
jo
test
repz
push
cmp
push
popa
mov
xchg
pop
pop
sbb
sahf
or
mov
aam
adc
and
test
stc
dec
insl
aas
les
into
ljmp
rorl
les
div
ucomiss
cmp
mov
iret
movl
lea
iret
mov
mov
mov
push
in
cld
sbb
fiadds
pop
adc
lret
add
xchg
mov
add
pop
sbb
insl
and
xorl
mov
out
ljmp
mov
inc
or
push
adc
jns
jnp
or
lds
inc
mov
sub
cmpsl
mov
inc
in
sarb
xlat
cmp
clc
mov
push
inc
mov
addb
je
lcall
ss
inc
mov
mov
in
mov
inc
shrl
cld
daa
lahf
cmp
jo
cmpb
cmp
and
insb
out
push
test
rorl
or
cld
jo
cltd
lcall
jl
xchg
or
out
mov
mov
mov
loop
movsl
movsb
nop
xchg
cli
mov
ret
loopne
add
in
out
outsb
ds
rcr
sbb
daa
add
inc
jle
addb
daa
mov
and
or
test
mov
push
fstpt
lret
ja
xchg
loope
pusha
dec
and
ss
or
jb
xchg
xchg
insb
fnsave
fnstcw
mov
fwait
xor
lcall
or
shrb
and
lock
sbb
push
mov
cmp
aas
ljmp
ljmp
mov
jle
mov
cmp
std
or
rclb
cltd
iret
lret
ljmp
jne
add
rolb
mov
fdivrl
test
cmpsl
inc
in
xchg
ja
in
xchg
xor
movsb
add
and
push
stos
pop
iret
popf
lock
dec
pop
inc
aaa
cmp
cmp
insb
jle
add
add
mov
sbb
enter
iret
test
add
scas
loopne
cmpsl
aas
dec
std
je
xor
xor
xor
mov
aad
push
test
sub
mov
sub
test
in
cmp
leave
stos
dec
nop
cltd
fs
sbb
cmp
fwait
jmp
and
cwtl
jns
cmp
cmpb
test
movsb
xlat
rclb
mov
ret
orb
stos
or
in
movsl
arpl
jb
mov
popa
sahf
push
dec
dec
xor
sar
inc
popa
out
xor
sbb
icebp
sub
es
lds
int
lret
pop
test
dec
push
push
push
fwait
das
ja
sub
and
xchg
inc
mov
nop
dec
add
mov
push
shrb
in
pop
lcall
lret
adc
xor
jbe
xor
shrb
pop
out
lods
fs
pop
lds
or
enter
mov
dec
ret
inc
out
mov
dec
mov
xchg
stos
pop
into
xchg
sub
rol
data16
imul
jb
push
lea
sarl
jg
ret
xor
push
bound
pshufw
ljmp
cmp
push
gs
jb
ds
and
dec
outsb
ret
dec
pusha
ds
mov
pop
ss
js
and
sbb
mov
adc
int3
pop
leave
jbe
mov
lcall
scas
xchg
cmp
xor
and
mov
mov
pop
pop
mov
pop
aam
pop
xor
inc
adcl
idiv
mov
mov
add
mov
shll
ljmp
xchg
dec
int
aam
mov
push
mov
out
sub
daa
jge
out
jle
bound
fiadds
and
ret
xor
dec
xchg
jae
pop
jns
jo
push
lret
cmpsl
xchg
stos
adc
cmc
roll
mov
in
sbb
aaa
xchg
dec
ss
jns
xchg
add
out
xchg
out
mov
repz
out
mov
movsl
xor
xor
and
mov
push
cmp
mov
mov
out
pop
out
jecxz
aas
and
mov
mov
aas
jo
push
dec
mov
sub
xchg
repnz
sub
stos
sarl
dec
inc
ja
push
xchg
mov
ja
div
vcvtps2dq
in
jmp
mov
dec
push
outsl
mov
xor
mov
sbb
xor
mov
andl
and
data16
sti
sub
adc
testl
test
cwtl
push
mov
iret
aam
rcr
push
mov
cmpsb
orb
sub
lods
fdivs
rcll
imul
aaa
lods
daa
int
int
fnsave
xor
mov
out
and
mov
pop
in
jecxz
test
push
mov
mov
adc
jg
cltd
roll
dec
movsb
mov
jecxz
outsb
xor
into
sub
ret
aas
xchg
mov
fs
int
inc
adc
inc
mov
sub
mov
stc
cmp
adc
xor
lret
cmp
sub
lds
mov
fldt
sti
mov
cmp
fs
jl
call
push
testb
es
mov
and
mov
out
adc
cltd
mov
cmp
cli
or
ret
enter
and
pop
xlat
pop
out
jl
arpl
lret
inc
into
popa
loope
and
lods
mov
xchg
sbb
and
push
mov
mov
dec
sahf
add
imul
stos
adc
sub
pop
and
sbb
mov
adc
push
mov
xchg
jle
xor
dec
insl
pop
sub
mov
clc
mov
std
hlt
popa
adc
aam
das
je
jae
scas
and
mov
cmp
out
sbb
lock
rcrb
pop
out
add
lds
push
push
xchg
rorl
adc
adc
leave
out
push
sbb
outsb
dec
bound
scas
jmp
dec
ror
pusha
cld
xor
sub
sbb
ds
test
nop
lds
cwtl
mov
pop
imul
cmpsl
pop
xlat
push
adc
mov
jbe
out
mov
cmp
pop
push
xchg
xor
lret
or
imull
les
aad
push
sub
mov
aaa
test
mov
jmp
lret
and
pop
ret
jne
hlt
fcmovnbe
or
shl
out
mov
sub
mov
gs
dec
icebp
int
sbb
xchg
adcl
aad
and
loope
imul
or
inc
js
cltd
aas
cmp
or
ror
push
stc
inc
loop
in
pop
sbb
jle
outsl
add
xlat
xor
jae
jmp
push
mov
mov
pop
call
add
arpl
clc
jl
sbb
jg
pop
push
inc
cmp
push
inc
jae
out
or
mov
fsubrl
mov
out
ret
dec
fistps
ficoml
inc
add
sbb
cli
cmp
sarl
cmovno
or
sub
xchg
pop
ljmp
mov
mov
xchg
xchg
movsb
and
mov
pop
rol
mov
jns
jp
jge
ret
inc
out
jno
mov
and
jge
adc
inc
std
jnp
or
pushl
int
cmp
or
mov
addr16
popf
sbb
or
fadds
inc
add
fldt
push
dec
cmp
pushf
xor
dec
cld
sub
mov
jb
add
stos
imul
pop
lahf
push
cmp
pop
iret
test
add
jmp
cmp
cmp
fwait
or
imul
cmp
add
inc
jb
cwtl
nop
mov
sub
jb
imul
sbb
js
inc
ljmp
pop
cmp
cmpsb
scas
adc
pop
sbb
cmpsb
cli
mov
stos
mov
mov
shlb
dec
imul
fbstp
mov
and
mov
mov
fstpt
cli
fs
cmp
add
fwait
out
adc
jle
jno
lahf
bound
mov
rorb
scas
and
jge
aam
aad
popf
lret
mov
ror
ja
mov
std
push
je
rclb
mov
loop
jmp
ret
stos
jno
rcr
test
inc
scas
pop
sub
push
sbb
cs
in
xlat
mov
or
scas
xchg
adc
lret
xchg
bound
xlat
xor
xor
mov
orb
and
out
mov
push
mov
repz
mov
movsl
fdivrl
sub
dec
sub
inc
stos
add
lods
iret
cltd
sub
loopne
shlb
inc
gs
shrb
in
dec
mov
xor
add
push
push
rclb
and
add
in
mov
repnz
lods
jp
into
jmp
sub
addl
leave
and
push
in
jmp
push
pop
aas
js
clc
out
imul
or
cltd
cmp
push
jp
mov
iret
jbe
and
mov
jle
sub
das
jbe
popa
leave
dec
and
call
sub
or
in
or
test
mov
jmp
cltd
pop
cmp
aaa
inc
pop
daa
test
je
xor
sbb
dec
pop
cmp
inc
or
insb
pop
add
das
lock
xchg
dec
and
bound
mov
jnp
bound
dec
mov
outsb
and
mov
test
sbb
mov
xchg
lds
ds
sbb
mov
test
inc
pop
js
xchg
fwait
shlb
xlat
sbb
cld
add
loopne
mov
jns
mov
scas
data16
call
fcoms
xchg
xor
pop
dec
call
daa
mov
repz
xor
out
js
cs
jo
push
dec
cmpb
xor
data16
jo
les
push
insb
xchg
push
ss
mulb
mov
adc
xchg
or
into
xchg
sbb
inc
dec
in
cmp
out
cmp
sbb
xchg
call
popf
pusha
lret
mov
iret
scas
leave
pop
mov
jle
ja
cmp
loopne
popa
mov
push
and
leave
ja
cmp
and
sub
pop
addb
pop
dec
orb
loopne
mov
mov
mov
gs
push
adc
push
dec
or
test
testb
aas
mov
pop
movsb
dec
push
push
out
imul
jno
dec
pusha
cmp
adc
lea
in
scas
adc
mov
mov
cltd
mov
test
cmp
lds
adc
stc
mov
nop
and
jae
sahf
xchg
je
cltd
popa
cmpsl
es
sub
out
shr
sub
and
xchg
mov
dec
cmc
dec
stos
hlt
sub
and
and
cwtl
mov
cltd
push
inc
mov
add
movsb
dec
pushf
adc
loopne
adc
adc
into
mov
pop
or
sbb
mov
leave
jg
mov
jae
ss
popf
dec
sti
pushf
or
xchg
cwtl
int
push
mov
aas
in
jp
mov
jb
das
mov
out
std
int3
ds
xchg
into
ror
popf
loop
dec
and
popf
inc
rcl
outsb
sbb
add
mov
xlat
pop
loopne
loop
jb
push
xor
dec
xchg
bound
repnz
mov
leave
ja
cmpsl
xor
filds
movsl
cmpl
in
and
mov
xchg
push
in
mov
fimuls
push
rcrl
and
or
dec
in
push
mov
stos
xor
mov
out
xorb
insb
mov
mov
icebp
xor
add
sbb
loope
popf
test
pusha
mov
push
subl
divb
das
mov
dec
lods
dec
mov
clc
push
pop
dec
pop
fs
ret
in
inc
int
js
jp
arpl
cmp
int
adc
in
cmp
sbb
xchg
iret
and
add
xchg
pop
gs
lds
cmpsl
ja
es
lods
rclb
pop
push
fists
icebp
or
jae
dec
lods
int3
adc
push
arpl
lcall
xchg
sub
or
adcl
sub
scas
mov
sbb
divl
popa
lret
rcrl
das
jbe
mov
shl
mov
mov
pop
and
pop
dec
mov
test
xchg
andb
fwait
aam
mov
inc
mov
aaa
popa
fldcw
lods
cmp
add
mov
sbb
pop
and
std
push
fists
in
sbb
xchg
jno
cmp
xchg
push
add
xor
sbb
call
push
rolb
cs
xchg
arpl
jb
insb
push
push
pop
insb
inc
out
mov
push
adc
cmc
sarb
leave
dec
sub
sbb
pop
icebp
lods
test
test
xchg
cmp
jnp
cmp
inc
insb
and
fildll
inc
mov
mov
daa
test
mov
mov
cld
mov
wbinvd
fwait
mov
int3
inc
pop
cmp
mov
xor
out
dec
pop
dec
or
push
mov
out
jae
nop
popf
xchg
jmp
inc
or
shll
aad
xchg
mov
sub
jns,pt
jae
xchg
sbb
pop
gs
pushf
pop
out
or
fidivrl
popf
std
xor
xor
imull
ret
add
or
movsl
lods
movsl
dec
pop
loope
dec
fistps
in
xchg
movsb
ffreep
mov
je
xchg
sub
in
sub
pushf
mov
sbb
loopne
call
daa
loopne
lcall
lods
into
dec
mov
out
jns
jns
push
xchg
xchg
mov
ds
fistpl
test
push
adc
mov
test
pop
inc
or
lds
mov
loopne
lods
inc
cld
dec
cltd
clc
mov
fwait
cltd
add
shr
arpl
xor
in
addb
xor
mov
lods
jp
push
lret
push
push
mov
rol
cltd
cli
jb
cmp
clc
lcall
xchg
mov
jns
mov
push
push
cmp
sbb
cmpsb
jb
add
mov
dec
shlb
sti
or
icebp
dec
xor
or
pop
or
sub
hlt
mov
fistps
and
sub
and
add
stos
mov
mov
lret
inc
cld
push
dec
adc
push
jb
data16
in
push
test
and
adc
fcomi
popa
mov
mov
mov
arpl
jecxz
inc
mov
xor
rcl
jg
sbb
fmull
loope
add
popf
pop
jge
call
lods
pop
pop
and
jbe
icebp
pop
sub
xor
cmpl
bound
mov
out
mov
je
mov
icebp
fwait
cmp
mov
and
fisubs
pushf
addl
pop
mov
addr16
pop
mov
adc
lahf
fcoms
clc
and
add
je
xlat
xchg
cmpsw
adcb
or
xor
rol
sbb
ret
js
inc
test
stos
mov
sbb
pusha
and
sbb
lret
mov
pop
das
or
xchg
pop
mov
daa
pop
pop
xor
mov
or
sbb
jno
int
out
xlat
xor
cltd
js
cmp
mov
notl
movsb
scas
xchg
sbb
mov
lock
inc
shr
movsb
outsb
lcall
xchg
cli
testl
ret
sub
lea
sti
mov
inc
mov
dec
pop
fcoml
inc
stos
push
pop
movsb
mov
shr
inc
movsb
cwtl
add
sbb
xorl
std
sbb
ds
push
lret
jp
cmpsl
aaa
scas
jnp
xor
repz
sub
stos
lea
inc
ss
sub
popf
leave
add
pop
js
out
ljmp
jmp
and
inc
dec
pusha
test
sar
fdivrs
test
adc
mov
adc
cmp
popa
lcall
int3
lret
sbbb
xchg
stc
pushf
fcmovnu
data16
mov
in
mov
pop
into
andl
lea
scas
jno
pop
mov
adc
dec
sbb
sbb
mov
lock
sti
and
out
pop
pop
cli
sbb
sti
das
jnp
cmp
jmp
leave
mov
inc
mov
out
jns
imul
out
js
test
add
cmp
xor
pop
pop
div
mov
pop
jno
dec
mov
jo,pt
add
inc
inc
xor
cmpsb
adc
out
jle
sub
inc
dec
in
shll
iret
lods
cs
dec
mov
mov
mov
xchg
adc
lcall
ret
fwait
roll
push
add
pop
popa
add
ret
xchg
jmp
pop
and
and
add
sub
orb
in
gs
repz
push
sahf
movsl
hlt
adc
pop
call
lcall
push
jb
lea
mov
shll
sbb
pushf
adc
mov
lahf
xchg
inc
cmc
stos
inc
icebp
es
dec
xchg
int
dec
mov
jl
pusha
out
adc
xor
mov
jmp
and
or
pop
and
jp
mov
or
loope
rcll
pop
inc
into
push
stos
xchg
cmp
add
and
test
xchg
lods
dec
nop
xor
mov
lea
xchg
es
push
cs
bound
cmc
pop
sbb
decb
rep
cmpsb
mov
sbb
aam
mov
inc
mov
jmp
xchg
movsl
fwait
push
mov
ret
pop
push
pop
mov
cmp
mov
arpl
add
fsub
dec
mov
data16
sbb
mov
cltd
pop
push
add
aam
jno
ja
dec
pop
pop
mov
push
out
pop
clc
cmp
sbb
and
inc
in
jns
mov
aas
lock
aaa
imul
rorb
ljmp
xchg
int3
mov
into
std
or
jp
testb
shl
in
sbb
lret
or
sahf
addb
ret
jne
out
popf
pop
hlt
push
mov
jne
clc
mov
fnstenv
xchg
xor
cmpsb
cmp
icebp
test
arpl
pop
pop
pop
adc
scas
and
inc
dec
or
mov
jg
insb
pop
testl
scas
push
add
mov
mov
push
repz
jno
addb
sbbb
clc
sub
mov
jp
and
icebp
jl
push
jns
mov
aaa
and
rclb
sahf
pop
xchg
fmul
lods
jae
mov
sbb
test
mov
push
aas
repnz
in
xor
clc
cld
fildl
incb
jnp
scas
loop
lret
out
filds
mov
and
sub
mov
mov
dec
xchg
out
inc
cli
dec
pop
addr16
and
push
mov
sbb
pop
add
enter
push
daa
aaa
mov
dec
or
sbbb
ljmp
lahf
jge
outsl
jbe
mov
xlat
jg
stc
add
stos
lock
jb
push
adc
dec
ss
sub
or
in
add
in
mov
xchg
adc
sbb
call
or
test
lcall
adc
mov
cld
cmc
cs
outsb
mov
test
cmpb
xorl
adc
sysret
dec
leave
push
es
xlat
adc
add
sahf
cmpb
imul
xchg
jb
fiaddl
xchg
push
xchg
out
in
insl
cs
int
push
lea
mov
sbb
pop
dec
shr
xchg
push
cli
jno
shrl
pop
int
adc
sbb
xchg
or
and
adc
mov
or
xor
xor
mov
jle
je
mulb
cmp
in
jb
cmpsb
out
mulb
out
xchg
stos
mov
mov
roll
add
push
dec
jnp
lea
xchg
enter
xor
xchg
fucom
icebp
jno
shr
xor
jns
es
mov
lods
jbe
lds
pusha
dec
in
pop
or
rcll
inc
repnz
adc
or
sbb
popa
je
into
mov
xor
insl
mov
sub
lea
lahf
mov
insb
adc
mov
mov
out
mov
repz
xchg
mov
pop
cmp
mov
in
cwtl
xchg
push
fcmovu
roll
movsb
lret
das
lahf
ljmp
and
adc
fmul
cmpsb
pop
sub
inc
cld
adc
sub
stos
stc
or
dec
cmp
aaa
loope
testb
ret
into
sub
sub
sbb
inc
xchg
ljmp
arpl
cltd
mov
inc
stos
pop
pop
mov
dec
bound
xchg
leave
aad
je
jae
and
inc
imul
out
aaa
and
adc
mov
bound
mov
loope
sbb
or
pop
xor
push
jge
pop
pop
mov
mov
in
xor
adc
call
inc
mov
dec
sub
push
push
scas
push
jns
mov
cmc
int3
mov
cltd
mov
mov
xor
and
xor
int
adc
mov
push
repnz
shrl
push
inc
scas
mov
xchg
idivb
fistl
shlb
adc
jbe
cmp
nop
or
jle
add
jg
mov
rolb
std
pop
push
rcrl
int
repnz
cmp
add
les
xchg
fsubrl
cld
sub
mov
pop
add
aad
shll
std
popa
jle
jmp
mov
insb
les
cld
mov
jns
test
mov
mov
xlat
cmpsb
jbe
repz
repnz
xor
jl
dec
mov
and
mov
sbb
or
rcrb
out
gs
mov
aam
pop
in
pushf
inc
push
nop
cmpsl
add
int
inc
int3
xlat
cmp
cli
mov
loopne
push
push
or
dec
jmp
out
sti
pop
lds
ffree
cmp
scas
mov
inc
sub
int3
insb
fidivl
add
out
dec
mov
mov
push
mov
loopne
cs
pusha
xchg
xor
adc
jecxz
pop
xchg
mov
push
mov
mov
lcall
pop
add
pop
outsl
lret
inc
xchg
xor
shll
dec
sti
aam
cmc
push
or
mov
pop
xlat
popf
or
rcrb
jecxz
jo
xor
mov
out
sub
nop
aaa
jno
cmpsl
xchg
push
lcall
mov
xor
push
subl
enter
std
sbb
shll
push
sub
jl
les
popa
xor
mull
movsb
lods
adc
xor
insb
pop
mov
das
sbb
mov
cltd
dec
cmp
mov
lods
shlb
mov
add
mov
lea
pop
add
repnz
push
and
pushf
xchg
xor
jl
and
out
and
fldcw
sub
jmp
mov
insb
mov
mov
addb
lock
and
jmp
insb
cs
js
push
pop
decb
movb
or
dec
icebp
call
cltd
jbe
lret
mov
orb
mov
push
fmull
add
bound
roll
and
and
pop
mov
cmc
jnp
cld
lock
mov
mov
ret
sarb
in
xchg
sbb
pushf
loop
inc
mov
ss
mov
push
pop
xlat
out
push
pop
push
test
ret
jl
in
pop
ss
push
mov
xchg
and
js
xlat
inc
dec
leave
sub
inc
jo
imul
push
pop
sbb
into
rcr
or
sub
pop
inc
lcall
dec
ljmp
sbb
call
push
or
int3
aad
pusha
inc
xchg
mov
addl
sbb
stos
jno
incb
push
int
dec
push
test
mov
push
jl
dec
mov
addl
fisubrl
push
and
cli
mov
inc
test
mov
subb
mov
or
dec
popf
adc
or
sbb
mov
aas
adc
mov
repz
enter
aaa
jmp
jbe
outsl
push
jge
in
dec
and
jae
and
mov
xor
orl
inc
out
push
xlat
mov
cmp
jb
push
xor
arpl
aas
sbb
jmp
data16
stc
xlat
mov
push
test
loope
mov
out
movsb
push
lds
or
into
pushf
ja
or
data16
cmpb
clc
mov
jno
jg
fwait
stos
xor
adc
sub
movsb
add
jecxz
int
add
jns
lds
test
fstl
inc
push
lods
aam
mov
pop
je
push
daa
add
movsl
test
jecxz
in
adc
das
pop
sub
mov
mov
adc
adc
xor
outsl
cltd
push
ss
jbe
enter
fists
icebp
loopne
sbb
sarb
nop
shlb
push
std
fcoms
pushf
int3
cli
mov
sbbl
cld
sbb
lahf
out
cmp
xchg
sbb
out
inc
jle
je
mov
mov
aaa
jl
cmc
jle
ja
shlb
out
clc
lcall
jp
cli
and
jb
in
cmc
push
sub
push
loopne
ljmp
lods
dec
dec
cwtl
mov
sbbb
ja
call
rorb
add
bound
out
test
dec
in
sbb
cmp
xor
push
insb
das
xchg
push
xchg
test
sbb
jp
xor
pop
leave
mov
mov
subl
xor
sahf
pop
cmp
xchg
push
dec
data16
push
dec
push
sub
and
outsl
jg
outsb
pushf
fwait
push
inc
add
insb
push
dec
pop
mov
cmp
pushf
cli
repnz
inc
mov
scas
aad
fucomip
stos
xchg
jo
test
mov
push
sbb
pop
inc
push
inc
adc
fadds
or
pop
lret
lret
push
cmp
mov
pusha
jb
mov
mov
ja
aam
push
bound
sub
pusha
adc
push
out
or
jae
and
jecxz
imul
dec
xchg
dec
jg
adc
fs
cmp
out
repz
push
stos
movsl
inc
mov
sbb
xor
js
mov
inc
movsl
xchg
in
pop
cld
or
in
jbe
push
in
xchg
push
cmp
movsl
cmpps
aas
addl
jo
out
pop
inc
in
add
dec
fstp
inc
sub
mov
fisubrs
sbb
jl
xchg
pop
faddl
xlat
and
mov
inc
cwtl
imul
sbb
lea
jnp
jno
xor
adc
arpl
je
add
sub
mov
xchg
cs
mov
call
incb
out
push
je
or
xchg
push
or
cmp
int3
xor
or
or
pop
dec
xlat
push
lret
push
cli
push
pushf
dec
cmp
enter
sahf
movsl
loopne
dec
mov
push
jbe
imul
sub
xor
mov
inc
pusha
mov
adc
jbe
push
das
push
stos
jno
add
pop
inc
test
push
inc
in
xchg
ss
dec
push
and
jl,pt
jbe
xchg
jge
push
jle
cmp
or
lods
out
cli
push
cmpl
lods
xorl
push
lret
pop
int
xchg
xor
cs
add
stos
out
leave
cmc
dec
cmp
addb
or
out
pop
mov
jb
int3
mov
inc
ja
jno
nop
pop
cld
rorl
lock
mov
sarl
mov
jg
inc
inc
lea
popf
out
xchg
into
push
lock
cwtl
jp
outsb
inc
inc
add
popf
enter
in
or
test
add
or
sub
movsb
adc
fcomps
pop
add
mov
rcr
fsubrs
push
or
std
repz
stos
ficoml
push
bound
fisttpl
jno
das
lods
dec
cs
pop
xchg
sbb
add
mull
loop
push
mov
movsl
jge
sbbb
jecxz
movsl
roll
mov
divl
loope
mov
in
add
or
mov
or
pop
jae
push
xchg
add
iret
jg
lea
or
fcoml
or
xlat
pop
jo
repnz
cmp
lcall
push
pop
movsb
in
fisubrl
cmc
dec
test
fimuls
nop
cmp
fsubrp
cmpsb
lea
push
jmp
add
call
and
mov
jp
imul
inc
scas
jmp
push
outsl
mov
mov
mov
push
mull
cmp
cmpsb
movsb
js
sbbb
loopne
test
fdivs
ror
mov
jb
addr16
xchg
leave
sbb
xchg
repz
sub
mov
and
pop
push
mov
xor
daa
mov
outsl
sbb
popf
mov
push
xor
add
xchg
inc
in
mov
push
mov
fstps
pop
out
mov
arpl
xor
cwtl
lret
xor
leave
adc
addr16
jp
or
jne
arpl
imul
push
and
jns
fldl
dec
push
jmp
mov
jno
and
out
movsb
xor
sub
push
push
xchg
xor
mov
out
lret
sbb
jnp
adc
fimuls
cmp
pop
push
mov
movsb
or
lea
sub
lods
jo
xchg
push
lcall
inc
fnsetpm(287
or
pusha
push
push
in
out
adc
cmpsb
mov
mov
idivb
ret
push
jne
fadds
outsb
sbb
movsb
adc
stos
sbb
dec
jge
lods
push
inc
mov
cmpsl
or
push
aam
lret
cmp
mov
and
xchg
mov
mov
jne
cwtl
sarb
loop
push
ret
lods
lret
jp
arpl
mov
shll
das
rolb
mull
das
jne
test
sbb
aas
jbe
rolb
xsha1
cmpsb
mov
cmpsl
xchg
push
test
scas
and
lcall
jp
mov
mov
mov
or
push
rcl
outsb
mov
push
xor
js
pusha
push
inc
out
ss
mov
stc
loop
jb
movsl
mov
push
outsl
mov
sbb
xchg
dec
outsl
jns
mov
cmp
fadds
testb
fnstcw
fs
mov
jecxz
dec
push
lods
pusha
nop
mov
cmp
sub
sarb
fdivrs
stc
push
popa
xchg
fsubrs
fwait
adc
daa
mov
xchg
movb
scas
jnp
pop
xchg
test
sbbb
fsubp
cli
into
cmc
and
inc
sahf
cwtl
and
sbb
cld
jmp
cmp
into
and
xchg
fs
jno
and
sub
pop
push
test
rorl
add
inc
and
pop
dec
daa
stos
imul
inc
and
or
mov
scas
inc
test
push
lds
adc
fadds
loope
and
push
imul
imul
insl
ss
in
lds
jne
lods
outsb
negl
push
pop
mov
call
jne
push
scas
roll
clc
adc
fadds
cmp
jge
hlt
pop
pop
in
in
mov
cld
pop
dec
pop
cmp
shlb
les
sub
in
rol
mov
or
jne
xlat
fldenv
bound
in
adc
les
pop
dec
push
es
push
mov
jns
add
lret
inc
cmpsl
push
or
cmc
sub
les
ror
andl
adc
lcall
adc
fistpl
stc
aad
inc
mov
ljmp
jne,pn
aas
push
xor
and
inc
cwtl
daa
push
dec
or
bnd
mov
cmpsl
in
mov
dec
or
jge
mov
xor
sbb
xchg
fstp
insb
fs
mov
fists
js
mov
pushf
xchg
testl
xchg
jns
popf
push
into
cmp
cld
and
js
mov
je
and
bound
mov
jp
jo
xor
pop
lahf
cmp
pop
repnz
inc
push
sub
xchg
in
xor
sahf
je
add
jmp
jnp
sbb
push
adc
sar
leave
outsb
sbb
nop
cld
aad
lods
mov
and
je
lods
mov
dec
add
out
pop
jno
ja
jne
sbb
ret
push
or
push
xchg
inc
fsubs
inc
mov
out
mov
pop
test
jne
fmuls
cmp
jae
arpl
xorb
mov
dec
push
adc
shll
sahf
push
scas
les
xchg
push
cmpsl
vucomiss
enter
inc
aad
ja
cmp
sub
sbb
das
add
lret
push
out
ret
cli
fwait
pop
bound
scas
dec
lahf
pop
mov
pop
scas
dec
rolb
ds
or
mov
adc
addr16
loop
mov
sub
cmp
jne
rclb
sub
jns
jp
pop
pop
jge
out
dec
pop
mov
xchg
filds
mov
dec
cmp
pop
cmpsb
xchg
das
aam
or
dec
push
mov
cs
mov
stos
xchg
inc
add
mov
sbb
add
aaa
push
or
sbb
adc
movb
xchg
mov
xchg
and
popf
adc
inc
push
lahf
out
xor
bound
loop
xchg
inc
inc
mov
inc
inc
imul
pop
mov
push
jg
inc
stc
push
mov
fistps
add
scas
pop
fstpl
arpl
imul
clc
jo
scas
mov
mov
sub
jae
sub
jmp
fcompl
adc
cmp
jmp
fsubrs
fisttps
loopne
ficomps
fstps
aad
call
repnz
outsl
pop
sub
out
push
jg
imul
mov
dec
push
add
ret
fs
test
popa
test
notl
or
mov
js
fildl
imul
fwait
push
shrb
add
fisubs
not
jle
sub
rolb
cmp
xchg
mov
mov
shl
icebp
pop
test
mov
and
lds
sbb
mov
push
or
xchg
xchg
inc
pop
icebp
jae
adc
cmp
pop
mov
mov
adc
push
push
out
cmpsl
sbb
cmpsb
scas
movsl
adc
jo
add
add
mov
fdivrl
lock
jno
je
lcall
add
pusha
je
sub
xor
sub
aas
push
sub
lahf
imul
rcrb
jb
jae
sbb
imul
dec
push
cwtl
sbb
cmc
jno
test
jmp
push
ljmp
and
dec
daa
insb
cmp
stc
push
pop
popf
lret
xchg
lret
sub
hlt
aad
into
sbb
xor
inc
mov
cmp
xchg
sbb
repnz
int3
dec
fmull
cmp
add
fisttpl
pushf
dec
or
imul
out
push
sti
inc
adc
pushf
jae
jae
xchg
pusha
and
pop
rorl
mov
rcl
xchg
or
scas
fisubl
mov
imul
and
push
loop
xchg
cmp
lock
mov
roll
mov
pop
aam
fldcw
imul
call
lds
out
jbe
cli
orb
sbb
lods
incb
cmp
or
pop
mov
fs
xchg
and
aas
daa
push
rep
mov
xchg
dec
cmp
mov
filds
xchg
in
cmp
outsl
outsl
dec
iret
push
inc
roll
loope
sub
adc
repz
xor
mov
nop
mov
dec
mov
lock
std
arpl
in
xchg
and
adc
pop
sbb
leave
pop
lea
into
pop
lods
mov
in
mov
aam
mov
jne
xchg
bound
inc
daa
adc
mov
icebp
push
mov
scas
dec
nop
movsb
add
int
adc
cmp
rcrl
xor
jecxz
push
mov
jmp
in
imul
inc
pop
xchg
mov
nop
adc
or
imul
int
imul
and
sbb
inc
hlt
mov
leave
xchg
cs
cmp
inc
stc
jg
out
fidivrl
bound
xchg
inc
inc
xchg
xor
loope
mov
mov
push
stos
sub
test
fcmovne
cmp
sbb
stc
imul
pop
push
jb
jmp
cwtl
popf
sbb
je
fistpl
cmpsl
mov
daa
divl
sbb
loop
adc
fnstenv
lret
and
or
out
mov
mov
sahf
dec
scas
push
pusha
out
fucom
subps
mov
sbb
sti
popa
cltd
and
mov
movsl
push
adc
cmp
jb
lods
add
or
dec
imul
into
mov
nop
add
and
outsl
imul
inc
fnstcw
mov
xor
inc
in
dec
sub
fisttpll
repz
sub
cmp
int3
jb
jae
js
sbb
aad
cmp
xor
cli
pop
idiv
mov
outsb
scas
inc
mov
out
in
or
inc
mov
les
call
fwait
push
pop
dec
in
and
xchg
and
push
mov
orl
imul
andb
bound
push
or
add
and
or
xchg
adc
aaa
fimuls
ficoms
add
push
mov
pop
and
addr16
sbb
jmp
or
addb
pop
dec
mov
inc
inc
sbb
mov
mov
sbb
inc
clc
aas
push
aaa
mov
mov
inc
repz
xchg
or
pop
mov
mov
xchg
xor
sub
pop
push
outsl
mov
or
mov
loop
pop
adc
adcb
inc
call
mov
add
loope
adc
iret
mov
leave
xor
ret
daa
push
push
ds
xchg
int3
std
xor
pop
stc
cmp
and
fiaddl
push
push
jp
fsts
lock
mov
call
in
cmp
adc
sbb
xorl
stos
cmp
xchg
sbb
mov
add
mov
nop
adc
int
les
mov
and
sbb
sbb
sti
ljmp
stos
sub
filds
add
lret
pop
ficomps
push
imul
sarb
into
lcall
leave
mov
cwtl
addl
notb
ja
clc
sub
and
cwtl
jbe
loop
std
mov
push
bound
or
lods
jle
mov
jnp
jle
popa
in
and
in
ja
and
inc
cli
sub
sbb
xchg
call
movsb
push
lods
jno
decl
dec
fs
cld
jae
loopne
inc
rclb
dec
sub
or
jno
xlat
stos
mov
shr
cmc
setno
clc
mov
lock
cmp
lcall
adc
in
add
ret
and
jp
insb
jle
mov
xchg
mov
sbb
cmp
data16
add
cmc
dec
shll
xor
rcll
lcall
pop
pop
popf
outsb
fcompl
xchg
xchg
nop
icebp
ret
dec
test
or
pop
fisubl
inc
lds
faddl
mov
and
mov
sub
or
or
push
into
cmpsl
ljmp
fstp
test
ja
insl
push
in
cwtl
pusha
dec
mov
hlt
add
stos
ret
and
pop
xchg
fs
lock
cmc
xchg
mov
arpl
lock
pop
pop
mov
pusha
insb
data16
xchg
inc
jmp
mulb
call
jge
pop
mov
xchg
or
sub
add
pop
sub
je
mov
adc
je
stos
cmp
daa
inc
xor
fwait
int3
mov
pushl
rcrl
inc
and
lret
je
push
and
add
mov
stos
push
es
ds
fsub
pushf
ret
pop
xchg
push
sub
arpl
test
outsb
or
adc
sahf
adc
test
xor
jne
adc
repnz
es
and
mov
xor
sub
sub
fisttps
les
add
loopne
inc
mov
mov
mov
push
sbb
push
outsb
scas
stc
frstor
pusha
fisubs
nop
fldl
sub
lds
popa
movsl
out
fmull
mov
xorb
hlt
fs
jg
and
int3
mov
scas
add
xor
dec
pop
fbld
ljmp
mov
add
lahf
lods
sbbb
jno
add
add
xor
das
inc
daa
inc
int
stc
adc
xor
mov
cmp
dec
popf
push
mov
ret
cmp
and
pop
cmp
sub
movsb
jo
and
dec
cmp
push
push
mov
loop
repnz
sbb
cmp
out
cld
xchg
add
ja
push
sub
pop
gs
adc
xor
das
sbb
rep
aaa
push
mov
sub
imulb
lea
repz
gs
fwait
jl
stos
mov
xorb
push
out
in
add
adc
mov
lcall
and
lods
cwtl
and
mov
addr16
outsl
add
stos
lds
loop
cmp
lock
data16
dec
aad
rcl
mov
or
clc
cmp
adc
jb
or
inc
and
mov
popa
and
or
jmp
addr16
es
cmpsl
dec
cli
shl
or
jg
xchg
in
repz
pop
inc
repnz
push
cs
inc
jp
popl
sar
lods
pop
repz
aaa
in
add
pop
std
xchg
or
loope
out
in
imul
test
add
mov
jp
fs
xchg
or
repz
mov
loopne
lret
fs
jb
adc
cltd
add
adc
dec
mov
fstl
push
dec
sub
into
xchg
lret
rolb
sbb
in
xchg
lahf
sbb
mov
sbb
jb
scas
jg
push
mov
mov
add
das
fstpl
fdivs
or
test
jge
pop
les
add
aad
add
jns
jae
sub
inc
out
fiaddl
jecxz
out
ja
add
adc
pop
stc
mov
xor
lahf
movsl
pop
fadds
mov
popa
cmp
sbb
hlt
neg
sub
ret
or
or
pop
jmp
in
dec
sbbl
mov
test
add
inc
inc
mov
cmp
or
flds
add
insl
or
das
inc
pop
imul
lods
mov
mov
repnz
pop
ljmp
or
lods
xchg
add
or
and
mov
clc
add
shrb
rorl
fwait
cmpsb
xor
aaa
cmpsb
push
or
fdivl
ficomps
fadd
and
fstpl
cmp
icebp
cmpsb
insl
add
adc
mov
and
stos
sbb
push
push
lret
not
mov
cmp
cmp
mov
out
jno
xchg
sub
adc
insl
aam
bound
daa
arpl
add
pop
xor
lret
das
lahf
je
xor
lret
add
int
and
mov
jmp
dec
push
and
je
mov
mov
or
push
pop
pop
js
mov
stc
push
std
cltd
mov
stos
push
xor
testl
ffree
push
pop
stos
cltd
dec
movsl
les
out
es
rolb
loop
sti
pop
sbb
stos
roll
cmpsl
idivb
ja
fldenv
out
inc
cmp
pop
push
pop
pop
sbb
or
bound
mov
out
inc
inc
jmp
movsl
test
jbe
add
sbb
sbb
cltd
aas
scas
stos
jge
cld
sbb
sbb
cmp
lods
and
int
testl
push
aas
sti
movsl
push
out
and
mov
into
fiaddl
or
ss
xchg
mov
mov
xor
imul
popa
and
out
sub
cmp
or
jmp
pop
decb
enter
xor
iret
lret
push
stos
mov
into
and
lods
cmp
lds
sbb
in
or
lret
jb
or
sub
adc
add
bound
fsts
lods
loope,pt
pop
jo
sub
mov
add
xor
mov
or
push
and
mov
cmp
out
mov
mov
out
xor
add
or
ret
xchg
pop
or
mov
cwtl
mov
cmp
mov
xchg
fdivrp
mov
or
popl
enter
cmpsb
adc
mov
jns
sbb
les
outsl
pop
xchg
xor
mov
mov
dec
xchg
add
loop
cltd
jmp
mov
pop
sbb
add
jg
pop
mov
out
ss
xchg
clc
enter
jle
xor
mov
incb
xchg
cwtd
enter
and
and
movsb
fcmove
loopne
insl
or
and
pop
cltd
stc
testl
cmpsl
cld
mov
sbbl
pop
jge
mov
das
movsl
movsb
sbb
jbe
jle
dec
divb
and
iret
cmp
dec
lds
and
cltd
or
mov
inc
add
push
pop
ja
int
and
cmp
sti
daa
xchg
xor
test
popf
ljmp
jle
pushf
mov
std
adc
movsb
hlt
sbb
test
inc
xchg
mov
or
aaa
notb
in
je
xchg
push
movsl
data16
jb
fldenv
dec
addl
pop
jno
adc
and
pop
mov
out
sarb
add
xor
ret
dec
xor
mov
jle
int
jl
jl
shl
pop
inc
icebp
roll
in
cmp
loop
out
iret
jl
fsubs
fcmovnu
fisubrs
fidivs
adcb
inc
lret
es
mov
and
mov
fidivs
dec
loope
xchg
imul
int3
popa
daa
sub
or
add
push
mov
xlat
adc
ss
jecxz
mov
mov
push
pushl
outsl
jnp
jl
shr
pop
mov
in
xorl
lahf
add
out
sub
sbb
movsb
mov
pop
adc
add
mov
add
sub
mov
dec
xchg
lea
cmp
mov
das
stos
pop
ret
sub
pop
sub
push
out
lea
jns
aas
push
ret
lock
fisubrs
and
push
jecxz
lock
jg
enter
jl
xchg
pushf
aas
inc
pop
and
repnz
nop
pop
adc
push
xchg
test
cmp
sti
in
decl
or
imul
or
movsb
jns
loope
cmc
cld
and
test
imul
dec
xchg
sub
sarb
lds
mov
sub
and
pop
lret
jbe
jge
mov
dec
mov
add
pop
ret
std
movsl
jge
out
cmp
addb
mov
mov
cmp
aaa
lcall
mov
popf
clc
xor
fs
cmp
cli
aad
dec
imull
cs
jno
das
mov
add
daa
jge
cld
loop
jg
dec
jle
outsb
cld
cmp
push
mov
pop
jo
sbb
loope
nop
jbe
mov
sub
jle
dec
pop
aam
out
addr16
xlat
cwtl
imul
mov
mov
jne
ret
lods
pushf
xchg
out
cli
and
sbb
insl
cltd
xor
cmp
fdivrs
push
jno
imul
jo
aad
jae
fiadds
sbb
roll
mov
and
das
push
enter
pop
outsl
jmp
add
mov
fidivrs
inc
jmp
cmpsl
cmp
fcoms
stos
lods
sub
insb
out
inc
xlat
lahf
and
stc
inc
cmpl
push
mov
sub
mull
sbb
sub
jg
outsl
sti
popa
add
insl
out
add
jbe
sbb
xlat
les
movsl
jo
jge
mov
pop
aas
jmp
xorl
fiadds
stos
sbb
pop
pop
xchg
push
je
in
stos
cltd
movsl
adc
in
xchg
icebp
xor
fwait
push
xchg
push
cmp
mov
xor
add
std
mov
popa
or
or
insl
inc
rep
adc
adc
push
push
pop
test
fistpll
cmc
cmp
adc
jno
mov
repz
dec
jp
xor
xchg
enter
hlt
je
std
xorl
aaa
mov
ret
cwtl
scas
sub
das
inc
jmp
xchg
and
dec
xlat
shld
scas
xchg
dec
xchg
in
iret
pop
mov
out
xlat
cmp
testb
test
jle
and
pushf
pop
jge
fldln2
mov
stos
orl
je
push
nop
jae
add
pop
mov
aas
lods
mov
ja
mov
sub
cmp
cmc
popa
pop
pop
iret
mov
xorb
and
ja
movl
push
rorb
pushf
dec
add
shrl
scas
lcall
cs
mov
out
pop
dec
lds
icebp
inc
adc
push
mov
inc
lcall
fisttps
das
sbb
cmp
mov
dec
or
ljmp
push
jle
imul
shll
mov
outsb
xchg
or
je
into
cmp
in
jnp
adc
push
sbb
and
out
add
push
pushf
je
movsl
das
jmp
pop
mov
dec
pop
xor
aas
mov
ja
repz
hlt
insl
sbb
popf
repz
push
lods
daa
sub
mov
and
cmp
add
sbb
cmp
test
mov
dec
cmp
mov
enter
fildl
mov
sub
popf
xor
and
out
mov
sub
pop
call
pop
mov
divb
icebp
xchg
test
xchg
or
outsl
insl
out
xchg
pop
notb
push
xchg
jle
call
inc
fucomp
fstpl
ds
push
test
fstps
xor
xchg
icebp
mov
jl
cmpsb
aad
cwtl
pop
pop
xchg
add
es
mov
lcall
adc
cmp
pushf
xorb
andl
cwtl
sub
mov
inc
clc
or
jg
xchg
in
fisubrs
sbb
in
xchg
xor
jo
jg
cld
jns
lods
insb
inc
sbb
xchg
fs
gs
inc
nop
in
cmp
sbb
fistpl
shll
sub
adc
mov
lret
xchg
insb
or
inc
dec
add
adc
xchg
sub
arpl
dec
jo
loopne
dec
aaa
xor
stc
addr16
rcll
shl
decl
test
int3
sub
fucomp
pop
xor
sub
call
ljmp
imul
rep
aas
cld
adc
dec
pusha
mov
and
insb
xor
mov
push
mov
fsubrp
mov
pop
mov
xor
repz
clc
fnsave
frstor
shll
pop
aaa
jbe
fcoml
fstpl
inc
or
push
pop
ret
add
movsl
gs
js
or
test
loopne
xchg
jae
fcoml
xor
cmpsb
and
jp
inc
xor
mov
jge
add
fists
gs
andb
enter
aaa
jp
dec
iret
pop
icebp
repnz
movsb
dec
stos
mov
rorl
sbb
repnz
insl
fmull
mov
hlt
stos
jnp
cli
cmpsb
mov
outsb
jae
lea
js
and
bound
stos
popa
lret
test
inc
mov
pop
out
in
fildll
dec
mov
jno
jg
inc
pop
mov
mov
push
filds
push
inc
rol
rcll
pusha
add
or
jmp
decl
cmp
das
jl
adc
insl
xor
mov
add
sub
or
mov
dec
mov
lods
and
ja
int
dec
sti
and
add
ret
fdivrp
int3
and
mov
fcompl
scas
xor
call
addr16
push
push
aam
xor
repz
sub
cmp
shlb
add
int
cli
imul
xor
sti
in
std
pop
in
cmp
int
aas
sbb
dec
mov
aas
int
inc
fidivrl
jae
out
cmpsb
pop
in
push
pop
sbb
cmp
add
add
addr16
sahf
jmp
std
sub
test
add
add
sbbl
and
fs
add
xor
adc
cmp
fwait
clc
mov
dec
out
sbb
adc
das
shll
and
aam
jae
in
movzwl
test
sub
pusha
ret
dec
cmp
and
clc
cmp
push
test
jge
pop
cmp
cmpsb
jecxz
cmp
inc
lods
mov
and
sub
std
mov
or
add
movsb
cmp
out
mov
push
inc
or
out
sbb
sbb
lret
or
mov
pusha
out
repz
add
jge
push
inc
pop
pop
jmp
inc
das
push
pop
or
popa
ffreep
lock
dec
xchg
dec
cmp
out
dec
bound
cmp
imul
mov
mov
jge
pop
xor
sub
mov
mov
mov
sbb
add
in
shrl
test
inc
std
ret
pushf
js
pop
or
sahf
lock
adc
cmp
jge
xor
and
adc
pop
mov
pop
sar
imul
je
adc
ja
in
mov
ja
cltd
xlat
movsb
or
cli
mov
mov
pop
jne
das
jmp
pushf
addr16
fiadds
cmpsl
sahf
in
fiaddl
shr
pop
jns
mov
pop
and
mov
mov
enter
adc
rcr
ret
jmp
xlat
cmp
in
cmp
add
call
jns
sti
sbb
push
int3
cmc
cmc
je
or
mov
popa
sbb
bound
pop
pop
jmp
xchg
ja
ret
pop
jo
push
xorb
loopne
cli
scas
or
cld
mov
mov
je
cmp
fs
mov
push
jp
sbbl
cmp
dec
out
inc
mov
sti
mov
ret
loop
out
enter
cmc
mov
xor
jno
pop
mov
adc
test
fsubrl
je
adc
dec
scas
add
and
movsb
mov
and
pop
aam
pushf
mov
sbbl
inc
enter
add
xchg
data16
insl
xchg
nop
outsl
lods
mov
sbb
inc
xor
pop
lret
enter
pushf
mov
jo
cld
lahf
or
jge,pn
xchg
std
fisubrs
in
jge
ljmp
xchg
sbb
dec
or
push
nop
inc
popf
sbb
cmpb
jb
nop
jne
add
xor
pop
pushf
inc
into
fists
sbb
push
loope
jl
push
lahf
xor
loop
cwtl
daa
mov
add
sti
xchg
dec
xchg
add
hlt
test
pop
adc
jecxz
mov
inc
jae
xchg
push
xchg
pop
add
xor
fistpl
or
fisubrl
dec
adc
movsb
test
out
insl
push
imul
stos
lea
xor
jl
imul
pop
inc
in
mov
xor
mov
jg
pop
hlt
cmpsl
pop
js
stos
popa
movsl
and
aas
bound
movsb
mov
ja
mov
jae
add
push
aad
imul
jmp
and
stos
xchg
sahf
orl
lods
call
xchg
pop
popf
xor
imul
lods
into
dec
clc
loope
adc
sahf
loopne
push
jns
mov
push
xor
adc
mov
stc
ljmp
jmp
sub
movsb
icebp
pop
push
cmp
es
adc
jbe
mov
cwtl
and
xchg
jmp
inc
sti
mov
dec
daa
sti
loop
sti
enter
mov
test
hlt
lcall
pop
sbb
out
fwait
push
sahf
cld
pop
mov
je
imul
sub
dec
mov
mov
mov
aad
and
mov
or
xor
std
inc
mov
stos
sbb
fstps
dec
and
nop
movsl
pop
or
adc
mov
jmp
stc
push
jnp
jo
int3
jmp
sbb
xor
popa
and
test
mov
clc
push
fiaddl
fiadds
out
mov
cmp
xor
sub
mov
sahf
cmpsl
push
inc
ss
mov
push
test
jno
lock
push
repnz
out
jmp
jg
dec
fxam
mov
dec
mov
outsl
jecxz
outsb
and
adc
bound
leave
mov
stos
data16
fwait
imul
lret
loope
inc
subb
push
jmp
xchg
mov
mov
or
push
jo
test
mov
clc
mov
dec
xor
jo
xchg
arpl
inc
cltd
mov
loop
push
daa
inc
dec
ljmp
add
popf
les
pop
ds
in
fwait
adc
sub
mov
enter
dec
adc
dec
jle
movsb
lock
setns
je
mov
jecxz
mov
subb
mov
fildl
xor
xchg
mov
pop
push
xchg
fidivrl
in
mov
les
pop
or
xor
ficoms
lret
sub
arpl
and
aad
jnp
test
pop
pop
sbb
in
dec
pop
aad
je
adc
lret
sub
adc
pop
adcb
das
adc
jg
inc
pop
lret
mov
call
pusha
pop
mov
jbe
out
aad
mov
pop
push
inc
enter
icebp
adc
lods
dec
jbe
push
xchg
pop
inc
and
imul
sbb
mov
jecxz
inc
fisttps
sahf
pop
sub
xchg
jecxz
pop
setbe
clc
js
add
or
dec
lret
jb
xchg
jnp
push
movsl
aam
out
inc
cwtl
bt
xchg
insl
mov
mov
fidivs
fcoml
mov
inc
cmp
cld
push
push
ljmp
xchg
dec
cmc
int
push
fnstcw
loopne
mov
and
jb
xor
xor
call
jp
inc
mov
sub
pop
add
outsb
mov
fbld
push
mov
mov
js
jns
sbb
popa
cli
repz
xchg
popf
les
repz
xchg
xor
mov
jg
lock
cmpsb
sti
fisubrl
je
es
add
push
xchg
scas
lock
mov
push
imul
dec
shrl
test
aas
pusha
and
movsl
jp
dec
scas
dec
pop
and
xlat
mov
mov
mov
mov
pop
dec
stos
sbb
push
pop
mov
mov
mov
mov
scas
or
fldl
lea
movsl
mov
jno
inc
pop
scas
jno
loope
add
fnstsw
cmp
add
push
add
outsb
enter
je
inc
shll
fs
xor
and
popf
mov
mov
xchg
xor
test
fcomps
or
sarb
jno
mov
xchg
push
lods
sahf
pushf
stos
je
add
data16
mov
inc
data16
fstl
sub
imul
jbe
outsl
adc
scas
clc
cmc
jns
push
cmp
jl
mov
cmpsb
push
cmp
scas
or
or
push
data16
push
xchg
sahf
vunpckhps
pop
cli
test
add
inc
or
repnz
fwait
add
sti
in
clc
or
cltd
inc
paddsw
push
inc
enter
lds
cli
mov
mov
dec
ljmp
dec
fldenv
int
sub
hlt
push
test
push
ja
cmc
sub
mov
sbb
js
popf
sbb
mov
and
mov
aaa
or
int3
std
cltd
inc
jge
nop
adc
pusha
fists
mov
push
in
mov
or
xor
out
arpl
xchg
and
pusha
xchg
fwait
stos
sub
pop
mov
adc
out
popf
test
nop
pop
cmp
sti
mov
aaa
mov
fcomp
mov
sbb
mov
mov
imul
mov
xor
push
mov
sarl
push
add
pop
hlt
adc
xor
pop
or
add
jle
push
add
fiaddl
jp
dec
into
fcmovne
jno
dec
es
out
ja
sbb
push
sahf
jo
cmp
aam
js
iret
fcoms
loop
daa
orl
dec
and
adc
mov
rclb
aad
pop
rorl
in
or
or
xchg
imul
into
push
mov
inc
push
nop
or
outsl
test
repz
or
cli
pop
push
lods
or
cmpsb
or
int3
cwtl
mov
stos
rolb
ss
arpl
loop
fcoms
xor
xor
ss
cmp
sub
or
inc
fcompl
mov
std
mov
hlt
ret
push
adc
mov
ss
dec
add
shll
pop
mov
push
and
adc
cld
imul
adc
or
leave
push
lds
out
push
out
scas
adc
sbb
lods
push
sub
aaa
mov
mov
aad
popa
mov
popf
cmp
xchg
and
sbb
ret
scas
scas
cmp
cmpb
les
mov
or
mov
test
cli
stos
shrl
hlt
popf
rclb
loopne
out
add
add
mov
nop
push
mov
and
xor
cwtl
mov
pop
xlat
adc
lods
fs
les
test
cmpsl
mov
jne
and
and
lahf
xchg
js
mov
icebp
arpl
ficoml
daa
fs
movsl
js
sub
jmp
inc
je
lods
push
shr
fdiv
mov
sti
in
shll
pop
cmp
lahf
out
shrb
jle
test
es
xor
lret
adc
or
xor
gs
push
mov
addb
aas
in
popf
xor
jo
jecxz
pop
lds
icebp
cwtl
in
test
add
jmp
jae
scas
andl
add
dec
aas
outsb
ljmp
add
or
jnp
pop
popf
in
jge
mov
js
orl
xchg
dec
xchg
push
add
lcall
xor
cmp
aam
cmp
es
dec
loope
sub
cmp
lds
mov
adc
xchg
mov
xchg
das
inc
xchg
dec
mov
sbb
aas
pop
cltd
loopne
xlat
dec
xor
push
pop
stc
pop
inc
or
push
jb
aaa
lds
lret
mov
mov
pop
mov
add
pushf
adc
cmp
arpl
pop
icebp
cmp
and
popf
adcb
pop
shl
inc
test
fcomps
nop
mov
adc
popf
add
adc
sahf
xor
push
fcompl
pushf
roll
cltd
or
fimuls
inc
ja
dec
sbb
dec
scas
jecxz
jnp
mov
fisubrs
sub
sti
loopne
scas
adc
dec
sbb
pop
sbb
js
ljmp
push
xchg
sbbl
push
sbb
test
ja
cmpsb
inc
popf
xor
out
outsl
insb
subl
insl
adc
in
cmp
ss
adc
xor
stc
mov
mov
mov
xchg
cmp
inc
mov
jno
lods
cmpsl
or
mov
xchg
int3
mul
jno
xchg
xor
mov
btr
shrb
mov
bound
std
arpl
jecxz
leave
adc
test
sbb
clc
stos
stos
or
sti
pop
lds
into
out
sub
pop
clc
ret
jmp
mov
dec
leave
int3
rol
cmp
repz
cltd
stos
mov
xchg
cwtl
dec
sbbl
bound
push
repnz
and
and
push
xchg
cmp
fmull
mov
lods
pushf
sub
pop
hlt
and
cld
push
pushl
or
test
loope
sub
mov
mov
int
jno
cmp
xchg
stc
testb
dec
dec
lea
push
inc
pop
or
pop
movsl
or
mov
jmp
and
mov
mov
xor
xchg
cltd
push
movsb
inc
xor
xor
xchg
cmp
xchg
pusha
in
popl
outsl
mov
dec
xchg
mov
inc
mov
adc
pop
inc
sub
cltd
cli
ret
enter
mov
stos
lods
movsl
data16
int
pop
push
insl
mov
fnstcw
cmp
fdivrl
lret
sbb
mov
sub
sub
popa
int
add
icebp
sahf
push
out
adc
addb
shll
ja
push
xchg
mov
or
lret
mov
je
loopne
push
push
test
imul
js
cmp
cs
mov
stc
sub
pop
mov
pop
jae
ret
cmp
mov
xor
jecxz
mov
fidivrs
ss
test
mov
insl
and
lret
push
rcrl
std
mov
adc
nop
xorb
pusha
sar
jecxz
push
imul
lods
mov
dec
cld
and
and
mov
mov
sti
cmp
out
or
pop
sahf
cmp
jge
dec
mov
cmp
dec
mov
mov
sbb
mov
insw
sahf
dec
fwait
mov
pop
jmp
lods
testb
popa
ret
imul
jne
iret
int
test
sub
pop
dec
aaa
cli
and
cs
cs
xor
adc
pop
dec
popf
insl
sbb
dec
dec
dec
jns
mov
mov
xchg
xchg
mov
xchg
test
leave
push
lock
xor
adc
rorl
mov
loope
popf
scas
push
pop
movsb
mov
addr16
sub
mov
repz
sub
bound
fstpt
loopne
popa
jmp
mov
or
into
sbb
shrb
enter
add
jp
xchg
xchg
mov
jno
call
fwait
dec
repnz
xor
outsb
out
mov
jmp
icebp
mov
out
loop,pn
loope
frstor
pusha
cmp
xchg
movsl
subl
mov
sahf
jp
in
sub
insl
es
xlat
mov
aad
jne
adcb
jns
loop
push
adcb
pop
rcrb
clc
dec
or
push
mov
xchg
xchg
lds
fnstcw
push
lret
pop
ss
dec
mov
mov
or
orl
rorb
and
imulb
ret
outsl
inc
lret
jno
xchg
cs
push
loope
jno
or
pop
lahf
cwtl
jl
mov
jbe
lcall
pop
out
sbb
repz
fs
js
fnstcw
int3
xor
imul
in
daa
outsw
push
fistpl
int3
adc
aam
inc
es
jae
cmpsl
iret
icebp
dec
jb
sub
mov
in
jecxz
push
movb
or
lea
mov
jnp
scas
outsl
pop
dec
mov
sub
insb
add
pop
loopne
test
cmc
cmp
xor
out
cmove
aad
dec
arpl
jp
push
loop
loop
sarl
es
outsb
subl
cwtl
and
loopne
mov
repnz
dec
js
jle
mov
add
jmp
and
dec
sti
mov
subb
mov
icebp
push
push
test
test
push
enter
outsl
cld
xchg
jbe
leave
sub
test
pop
movsb
in
mov
dec
fdiv
push
mov
rorb
adc
xchg
dec
push
pusha
bnd
mov
sarl
pop
sub
cmp
ljmp
push
outsl
in
fidivrs
xchg
sbb
push
fiadds
loope
inc
mov
xor
call
mov
movsl
aaa
hlt
mov
push
lods
cld
std
xchg
mov
loope
xchg
xchg
mov
aam
dec
ret
xor
mov
mov
push
insb
lods
sub
into
insb
out
sarb
insl
ret
in
popf
sbb
push
popf
sbb
mov
cmpsl
pop
ret
mov
shl
add
sub
cwtl
jecxz
mov
decb
dec
sub
or
ljmp
or
xchg
inc
push
outsl
jp
mov
push
or
cli
xchg
push
in
mov
mov
cltd
mov
jecxz
sar
lret
mov
mov
clc
mov
mov
daa
daa
mov
jle
loope
xor
bound
aad
mov
test
xor
loope
or
rorl
das
sbb
jbe
cmp
out
dec
sub
cmpsb
push
and
pop
jmp
popf
cltd
mov
cmp
loopne
cmp
sub
int3
xor
jecxz
out
pop
xchg
adc
aam
cmp
xor
adc
mov
or
and
jp
cmp
mov
sub
fnstcw
dec
sub
push
inc
fildl
sahf
inc
lea
testb
sbb
xchg
ljmp
and
mov
dec
int
cmp
daa
add
jl
jl
and
mov
aaa
jmp
dec
data16
dec
dec
pop
sub
sbb
xchg
mov
ss
xor
fs
popa
and
lcall
and
or
in
cltd
pop
lret
insl
inc
dec
mov
push
insl
clc
repnz
je
pop
add
in
std
push
adcl
mov
in
test
shr
fs
dec
or
jo
int
repz
push
and
cmp
cltd
push
and
js
data16
mov
mov
cmp
lods
cmp
lods
repnz
je
jmp
testl
jbe
movsl
jns
inc
enter
adc
xchg
cmp
mov
mov
xchg
xor
hlt
movsb
xor
cmovne
fisttpll
in
test
jae
cmpsl
cmp
sbb
data16
out
mov
dec
inc
fisttpl
mov
push
dec
in
mov
std
cmp
push
mov
les
xadd
das
ss
or
xchg
shll
jle
or
insl
add
ja
imul
add
aas
int3
mov
lods
mov
cld
lahf
mov
outsl
xchg
into
and
movsl
jo
fwait
xchg
mov
shrb
jno
mov
dec
insb
out
push
inc
mov
add
test
movsb
in
fnstsw
dec
push
or
jo
lea
cmp
cmp
sbb
lds
stc
ret
in
pop
adc
inc
lock
jmp
sub
cmp
test
and
jp
adc
es
sub
fs
push
mov
and
jo
pop
loope
inc
mov
pop
movsl
dec
mov
mov
inc
xor
dec
mov
sbb
ss
push
imul
inc
jae
outsb
popa
mov
dec
jge
stc
lds
leave
push
out
les
ret
test
sub
dec
xchg
fldl
bound
popf
push
mov
jnp
cmpsl
scas
cmp
fidivl
test
dec
jo
dec
dec
shll
and
inc
mov
adc
jp
dec
inc
leave
pop
aad
cmp
and
loopne
ret
inc
es
insb
push
aas
xor
outsb
push
add
add
inc
xchg
add
cmp
mov
les
mov
aad
sbb
add
mov
lods
fs
fcomps
insl
dec
dec
hlt
xor
lods
pop
cs
pop
mov
pop
sub
mov
imul
je
outsb
or
je
lds
cmp
hlt
mov
cmp
push
add
test
popf
fistps
add
mov
push
pushf
inc
imulb
outsb
mov
xchg
leave
and
inc
cltd
mov
fidivl
mov
nop
sub
mov
dec
sbb
push
cmp
jo
add
push
inc
cmp
test
sti
cmc
repz
nop
and
dec
pop
xchg
lret
gs
xor
hlt
stos
or
rcrl
mov
inc
dec
call
outsb
push
mov
sub
imul
sbb
and
dec
mov
jo
pusha
add
pop
imul
enter
inc
mov
arpl
into
pop
push
scas
sub
lcall
sbb
or
bnd
pop
sti
lret
mov
sbb
xchg
xchg
in
pop
in
lock
xchg
enter
addl
lcall
sub
sbbb
inc
mov
rclb
daa
mov
out
lea
cmpsb
negb
sbb
xchg
mov
mov
ret
mov
adc
call
push
arpl
rclb
jb
dec
inc
adc
daa
mov
mov
outsl
lea
movsb
xlat
and
inc
mov
je
fcomp
scas
pop
out
or
fiaddl
mov
cwtl
pop
push
sbb
mov
mov
dec
xor
fcmovne
mov
or
jl
xor
jo
mov
data16
repz
movsl
xor
scas
push
jae
lcall
add
dec
shufps
je
inc
dec
jae
add
pop
cmp
movsb
cmc
xorl
shl
pop
cmpsb
shlb
jp
popf
push
call
rcl
xor
pop
mov
push
push
jle
cwtl
fisttpll
and
lods
push
cmp
mov
fsubr
call
inc
lea
pushl
cmc
pop
cmpsl
into
push
incb
fstpl
test
xchg
pop
xor
pop
add
fs
in
aam
cli
xorl
xchg
sbbl
lods
jns
push
into
pop
cmpsb
cmpsl
js
dec
into
and
stc
popf
mov
jp
xchg
push
outsl
cmp
hlt
je
shrb
inc
scas
das
mov
adcl
popa
in
and
data16
cmp
or
repz
daa
jl
insb
int
mov
and
dec
push
int
mov
fnstcw
lods
sub
roll
sahf
cltd
add
inc
or
packssdw
jns
xor
aad
andl
mov
imulb
sbb
or
cmp
pop
mov
cs
nop
bound
cs
xor
push
lret
push
and
cs
dec
lret
mov
outsl
sbb
icebp
adc
stos
adcb
test
cld
out
jbe
pop
xchg
fdivs
pusha
ds
mov
lahf
jbe
mov
lret
negb
mov
jno
lods
mov
push
mov
mov
movsl
mov
mov
dec
push
push
jne
push
add
loop
lret
jp
cmp
dec
mov
fsubrs
pop
movsb
adc
add
xchg
dec
lods
mov
pop
xorl
imul
aas
xor
adc
aam
mov
lock
xchg
cltd
lahf
ret
cmp
mov
lret
aam
jae
outsl
xlat
stos
pushf
or
jns
mov
dec
mov
sub
cmp
loope
sbb
pushf
sti
lock
loopne
mov
xchg
xchg
cltd
xchg
xchg
test
sbb
mov
out
mov
dec
cs
insb
sbb
out
sub
xchg
dec
adc
cmp
dec
jno
push
cmp
fildll
inc
inc
fmuls
mov
dec
repnz
jo
push
sbb
out
push
xor
lock
or
adc
fimuls
repz
push
dec
add
pop
test
aam
adc
cld
sbb
out
and
aam
pop
sub
jae
pop
pop
fsubl
and
xchg
cltd
jecxz
gs
daa
mov
jecxz
outsl
leave
dec
push
scas
out
aaa
scas
pop
jns
fstps
fdivrs
fidivs
dec
loop
shlb
das
adc
inc
bnd
jae
les
inc
dec
icebp
mov
outsb
xor
xchg
push
outsl
ljmp
fdivrs
mov
iret
fnstenv
cltd
dec
je,pn
dec
add
jge
mov
sahf
adc
mov
cltd
shr
push
outsl
mov
imul
filds
fsubrs
negb
xchg
test
loop
stos
mov
call
mov
mov
dec
in
addl
cmp
call
in
push
cmp
lds
ds
mov
dec
lds
in
add
mov
jb
repz
fstpl
mov
cmp
sbb
push
popa
loopne
cli
shll
movsb
in
jno
xchg
mov
inc
sbb
mov
out
cmp
push
dec
pop
in
mov
jbe
rcl
sbb
push
lock
sub
mov
xlat
xchg
pop
xchg
mov
insl
mov
mov
cmpsb
push
push
sub
xchg
mov
xor
dec
les
jp
xchg
mov
xor
mov
out
mov
hlt
test
in
movsb
jne
cmp
scas
cmp
cmpl
fcmovne
rcrl
insb
test
add
mov
sahf
aam
push
es
jb
idiv
dec
mov
sub
mov
roll
imul
aaa
pusha
adc
mov
ss
ret
fists
mov
in
sahf
gs
mov
iret
adc
icebp
shl
mov
mov
out
shlb
clc
std
mov
shrb
movsl
push
movsl
lods
xchg
jns
pop
shlb
aaa
xchg
mov
cmp
into
mov
test
sub
dec
jg
push
or
lret
int3
inc
inc
jnp
enter
mov
sbb
rcll
jmp
fadd
popf
mov
pop
xchg
sub
push
cmp
mov
jne
adc
loopne
hlt
mov
mov
int
adc
loop
adc
and
loop
movsb
push
fcom
repnz
bsr
scas
xchg
int
inc
pop
shrl
outsb
sti
mov
lock
pop
cmpsb
andl
cs
sub
cli
cmp
jne
jmp
push
adc
fimull
fwait
jle
aaa
sbbb
insl
cmpsb
jne
adc
push
push
adc
sub
clc
jge
inc
and
jb
jp
lahf
or
fisttpll
dec
adc
das
test
in
add
sahf
add
mov
push
sub
sub
out
shrl
sbb
clc
scas
sbb
clc
icebp
scas
ljmp
jecxz
stos
dec
mov
and
jo
xor
imul
xchg
daa
inc
daa
fildll
push
cld
jbe
and
and
or
mov
pushf
insl
cmpsb
sub
shrb
popa
stos
pop
test
push
popl
orb
fcompl
jle,pt
pop
and
mov
xor
imul
call
ljmp
test
ret
jbe
pushw
sahf
pushf
sahf
test
cmpsl
xchg
push
xchg
in
pop
xchg
cmp
mov
mov
xchg
cs
addr16
fiaddl
push
push
and
fisubs
mov
scas
cmpsl
ds
add
jp
inc
pop
scas
mov
mov
add
call
add
jle
addr16
jge
mov
cmpsl
imul
in
push
push
mov
movsb
inc
subl
loope
push
movl
mov
data16
xchg
mov
mov
aad
push
outsb
movsb
lds
adc
sbbb
mov
mov
mov
loope
pop
mov
sbb
add
lods
xor
roll
add
fwait
dec
cmpsl
scas
psubw
sbb
push
mov
arpl
shrd
add
icebp
test
dec
jmp
cmc
jo
jge
push
test
add
xchg
scas
stos
loope
mov
cmp
sbb
in
outsl
cmpsl
lret
pop
gs
xlat
pushf
inc
cmp
cld
out
outsb
out
stc
loope
call
test
outsb
mov
adc
outsl
push
sub
fimull
cmp
add
xchg
fadd
mov
fs
outsb
test
shrb
sar
or
lret
push
jle
in
hlt
int3
daa
mov
jmp
ror
inc
add
aad
mov
ds
bndstx
fsubs
mov
ds
popf
movsb
mov
sub
fs
add
daa
sub
xchg
xlat
test
in
sub
sbb
test
fimuls
stc
sbbb
xor
push
dec
fwait
dec
jmp
out
and
xor
add
lea
bound
outsl
sbb
outsl
lods
sbb
dec
inc
xor
and
adc
outsl
sahf
adc
aam
cmp
pop
pushf
ds
sarl
fwait
mov
push
jle
jb
arpl
lahf
nop
xchg
out
outsl
mov
ljmp
in
out
adc
call
imul
dec
cmp
lahf
loope
sub
add
fsubrl
sub
xor
or
pop
mov
into
sbb
fidivs
add
pop
dec
push
inc
test
in
cmp
push
dec
rcrl
in
inc
adc
pusha
fidivrl
jmp
les
sub
cmp
int
push
or
pop
mov
mov
pusha
jle
push
mov
pushl
mov
xchg
notl
or
fsts
filds
cmp
lret
pop
lea
cmp
loopne
dec
mov
inc
inc
scas
cmp
xor
and
jb
sub
pop
in
adc
scas
jbe
hlt
or
lret
pop
aaa
cmp
xchg
xlat
scas
rcrl
mov
sbb
mov
gs
cmp
lods
cli
jl
push
mov
lock
out
push
cmp
and
clc
popf
ss
sti
lods
adc
pop
stos
inc
add
xchg
cmp
rorb
or
hlt
inc
adcb
jecxz
mov
in
sbb
push
push
mov
lods
inc
xor
inc
lcall
fiadds
and
inc
dec
test
cmpsl
sarl
jae
mov
or
adc
into
imul
popa
mov
push
jle
and
xlat
push
push
flds
sbbl
inc
mov
mov
pop
call
shlb
divb
xchg
and
rclb
enter
mov
das
pop
mov
stos
sbb
pop
dec
shll
iret
scas
inc
cwtl
xor
add
cmc
insl
push
in
cld
cli
sub
xor
insl
fmuls
dec
insb
jns
sbb
cmp
andb
lcall
repz
rcl
dec
adc
mov
jl
int
and
add
int
cltd
shrl
and
mov
sub
push
sarl
divl
push
clc
fists
jo
xor
pop
dec
mov
sahf
pop
adc
mov
movsb
roll
push
scas
sbb
push
pop
sbb
gs
mov
adc
push
mov
fstps
fldl
cmp
and
mov
in
movsb
popf
cmp
cmp
sub
and
cmp
mov
cmp
sahf
fnstsw
out
adc
jmp
lret
dec
push
push
bound
xchg
mov
and
jbe
cmovge
in
cmp
lods
or
mov
xor
inc
push
push
imul
add
test
adc
js
popf
lret
int
sbb
mov
rolb
imul
mov
out
jg
jp
mov
lock
fs
icebp
loop
es
pusha
mov
pop
jnp
jle
lods
cmp
mov
iret
in
sub
fidivs
enter
in
jnp
stos
test
call
mov
inc
xor
movsb
sub
jmp
mov
test
lock
xlat
xchg
nop
cmpsb
out
pop
loopne
data16
dec
mov
xchg
rol
je
mov
add
pop
loopne
aas
enter
aas
pop
xchg
xchg
xchg
outsl
cmp
imul
xor
or
jp
fwait
push
jl
pop
mov
or
add
sub
out
dec
inc
imul
iret
sbb
ss
or
push
mov
adc
in
addr16
repz
aaa
push
or
sub
fistps
daa
imul
adcb
in
fwait
shll
push
jns
add
cs
mov
pop
mov
pop
mov
das
je
xor
aas
jno
stos
pop
dec
xor
jns
sbb
cwtl
jb
mov
push
shrl
jns
imul
clc
xorb
subl
stos
repz
testb
out
and
mov
je
gs
push
repz
cmp
sbb
mov
and
scas
andb
xlat
adc
imul
mov
sbbl
mov
pop
mov
popf
inc
ljmp
pop
mov
fldenv
int3
dec
xor
outsb
mov
add
outsl
xlat
lods
jecxz
rcl
sbb
pop
xchg
jo
mov
adc
shll
jmp
adc
aad
mov
movsl
adc
pop
je
in
int
jg
push
and
push
mov
addb
das
xor
mov
pop
add
xlat
std
inc
xchg
test
add
push
data16
or
dec
daa
out
into
jae
or
test
cmc
js
xor
xor
les
fwait
sbb
rcll
xor
or
inc
iret
sbb
push
add
jno
aaa
mov
clc
rolb
sub
mov
stos
sbb
jl
push
das
enter
pop
cs
mov
jmp
cmc
and
aam
fs
sub
jbe
aam
lods
pop
ljmp
dec
push
sub
cmp
xor
aad
sbb
mov
dec
inc
sub
sti
call
xchg
xchg
in
push
daa
into
inc
leave
fnstcw
and
inc
mov
sub
jno
mov
mov
clc
lods
mov
jmp
sbb
es
mov
nop
scas
xlat
cli
pop
push
jno
outsl
lds
xchg
add
shrb
les
inc
shl
outsb
sub
rcr
xrstor
pop
mov
scas
ds
jl
add
scas
aas
mov
imul
push
mov
mov
sti
or
sbb
dec
popf
call
xchg
jnp
push
stos
pop
movsb
pop
adc
out
and
jg
add
jle
or
mov
outsl
test
mov
push
out
movsl
fstpt
push
stos
fsubs
push
inc
add
xchg
lods
ljmp
in
mov
imul
mov
dec
jle
xchg
cmc
fs
iret
mov
mov
sbb
je
add
jo
xchg
les
ja
mov
in
cmpsb
nop
pop
shll
xchg
lock
pop
mov
sahf
rep
jg
ficomps
pop
push
or
dec
cmpsb
arpl
sahf
sti
sbbb
fs
add
mov
push
mov
arpl
pop
addr16
out
fwait
pop
mov
insb
stc
addl
push
xor
dec
cmp
mov
xchg
enter
mov
xchg
sbb
push
aaa
pop
lock
mov
cmp
jge
jmp
mov
mov
ret
call
mov
and
imul
dec
push
in
xchg
add
lcall
mov
sbb
std
inc
aad
sahf
sbb
jge
jae
data16
repz
ljmp
or
xchg
test
jbe
cmc
dec
sub
adc
insl
sbb
sbb
sbb
inc
push
cvtps2pi
add
pusha
sub
mov
nop
ja
and
pusha
pop
mov
cmp
adc
ret
xchg
cmpsl
mov
pop
push
add
cld
jb
adc
mov
mov
stc
push
jne
mov
stc
cmp
jmp
mov
jp
hlt
inc
fsubl
jle
ret
inc
lahf
jo
xchg
and
inc
stc
inc
daa
jp
outsl
fcompl
loope,pt
sub
inc
loopne
cmp
push
adc
movsl
mov
jno
dec
fstl
mov
pop
cmp
mov
hlt
mov
repnz
cmpsl
fs
iret
cli
popf
inc
push
ret
popa
clc
mov
repnz
add
sub
je
xchg
mov
jle,pn
xor
xchg
cmp
fcmovbe
xchg
repz
add
pop
psubusb
jno
jae
out
fists
mov
ds
je
mov
push
fisubrs
ret
jno
dec
cmp
nop
push
xchg
and
mov
xor
out
adc
mov
or
dec
out
aam
jns
push
mov
and
dec
sbb
xlat
repnz
les
inc
out
orb
stc
and
push
in
sti
jne
push
sti
jne
fcoml
nop
sbb
aad
icebp
repnz
mov
inc
push
jnp
leave
cs
out
pop
push
push
dec
test
sub
dec
inc
jge
insl
adc
and
mov
push
in
push
xor
imul
pop
xchg
loop
xchg
call
cwtl
cmp
in
ja
cmp
data16
ret
mov
imul
movsl
adc
mov
shll
sbb
pop
pop
fisubs
scas
sbb
decb
sti
ret
int
inc
cmp
xor
and
mov
in
fists
push
shlb
insl
adcl
mov
sahf
sbb
sbb
inc
inc
popa
pop
mov
xchg
pop
mov
enter
imul
ret
push
xchg
outsb
sarl
sbb
fsubrs
cs
adc
roll
pop
dec
or
data16
out
mov
rcrb
aaa
loopne
loope
movsl
adc
mov
pop
and
mov
movsl
out
fcomip
das
hlt
ret
pop
out
mov
cmpsb
xchg
aam
hlt
push
pop
pop
xor
mov
enter
mov
add
repz
movsb
or
sbb
mov
jno
aad
xlat
sbb
add
ds
push
fwait
or
js
and
icebp
lds
je
xchg
sbb
aad
test
dec
out
imul
and
mov
push
popf
mov
sti
sub
adc
pop
push
jne
jmp
in
add
xchg
lods
std
sbb
flds
out
ficompl
mov
jno
adc
cwtl
add
addr16
imul
sbb
sub
mov
mov
lods
cmp
fisttpll
pop
sbb
in
add
aad
and
cmp
xchg
pop
xchg
dec
test
stos
xor
mov
jno
lds
adc
aam
pop
cmp
cmc
inc
pop
test
out
inc
mov
xchg
dec
jno
xor
or
dec
arpl
daa
loope
je
dec
cmp
lods
ret
mov
mov
imul
out
adc
dec
cmpsl
jo
ds
pop
push
faddp
or
jnp
jle
sbb
mov
adc
cld
mov
inc
in
fnstsw
xchg
aaa
add
std
jle
dec
inc
inc
and
or
xor
bound
mov
popf
in
pop
lods
or
and
lds
cmp
out
ja
cmp
aaa
sub
repz
sbb
and
ds
mov
jge
xor
inc
pop
mov
fwait
inc
pop
sub
aaa
ret
push
inc
dec
fisubs
jge
out
ret
lahf
xor
aam
push
mov
shrl
arpl
popa
adc
jg
lret
adc
mov
cmp
fwait
nop
lods
add
fwait
out
iret
sub
push
in
outsl
jbe
push
cmc
mov
lods
cmpsb
pop
hlt
push
cmp
pusha
mov
jge
jmp
sub
or
xor
test
pop
inc
pop
inc
leave
inc
and
iret
roll
adc
mov
aaa
adcl
daa
xor
mov
add
pop
pop
or
pop
or
test
jge
lea
lahf
pop
xchg
and
inc
inc
push
rcr
test
lea
pop
mov
loop
jle
jp
fsubr
inc
js
aam
daa
add
mov
inc
mov
cwtl
cmp
push
jmp
xchg
fs
sbb
int
mov
scas
jecxz
mov
jno
clc
add
sarl
cmp
and
outsl
xor
and
mov
rolb
roll
jns
stc
lock
xor
test
sahf
or
stos
arpl
jg
jl
jo
adc
xchg
lods
dec
fstpl
add
add
inc
jmp
sahf
xchg
xchg
outsl
and
imulb
pushf
lock
icebp
add
ret
push
or
clc
pop
xor
mov
lcall
mov
test
sub
cli
rcll
xor
xchg
stos
sbb
pop
test
mov
inc
cmc
lret
shl
lods
sbb
fstps
loopne
outsl
xchg
xchg
adc
test
jp
sbbl
pop
cmpsl
in
aad
pop
std
push
xchg
cmp
and
in
orl
jmp
adc
cmc
cmp
in
repz
arpl
jmp
xor
add
sbb
cmp
or
cld
cltd
xor
pop
test
es
clc
bound
in
scas
jb
pop
push
sbb
cmpsb
jl
dec
xchg
mov
mov
mov
cmpsl
mov
inc
test
cmp
aam
negb
jno
bnd
xor
sbb
or
xchg
test
enter
and
lret
int
xor
cmpsl
sbbl
jecxz
roll
outsb
sti
shlb
or
cltd
repz
rcll
hlt
lods
xchg
push
cli
icebp
nop
xor
test
dec
test
xchg
das
cmpsb
xchg
loop
xchg
cmc
mov
fwait
cltd
sbbl
mov
lret
cltd
lods
mov
xchg
push
push
pushl
loop
aam
xchg
cli
push
outsl
mov
and
push
adc
or
xchg
ret
shlb
cmc
lea
sub
add
mov
lret
jns
pop
popa
stos
jle
dec
enter
imul
xchg
inc
pop
and
jb
xchg
icebp
sub
orl
or
push
repnz
lods
and
pop
mov
sti
sbb
scas
insl
adcb
jno
ret
add
jbe
shrd
shl
sbb
push
inc
push
dec
push
cwtl
into
out
sub
outsl
outsl
push
fidivl
arpl
push
lea
lcall
xchg
cmp
roll
sub
xchg
cmpsb
push
jge
and
mov
fistl
push
and
fwait
scas
stos
push
ret
push
and
inc
dec
pop
into
outsb
xor
fiadds
mov
mov
test
lods
repz
and
test
and
mov
jecxz
add
fs
cmp
mov
aam
dec
into
lds
fists
test
adc
inc
adc
mov
fcoml
stos
cmc
jne
popa
mov
push
xor
ret
fsts
aas
idivb
dec
sub
les
jb,pn
jnp
mov
movsb
adc
inc
jbe
in
jg
mov
in
int3
cld
pop
add
sar
insl
mov
push
xchg
out
jno
inc
shll
push
sar
mov
es
xchg
xor
mov
sbb
fldenv
fisubs
cmp
cmc
pop
out
mov
mov
push
jb
fcoml
fs
enter
push
mov
cli
lock
pop
test
xchg
in
add
scas
out
mov
cmpl
imul
sbbl
mov
adcl
aam
pushf
cmpb
ficoml
dec
push
push
sub
popl
nop
jno
or
ror
int
fsts
int3
out
mov
mov
sub
push
or
je
ljmp
push
cmp
stc
cmpsb
sbb
pop
subl
or
cmc
lret
ficompl
scas
imul
or
mov
test
xchg
pop
sahf
pop
xor
mov
and
jnp
mov
pop
in
inc
popa
or
scas
test
lds
jmp
jmp
ja
and
and
push
stos
rcr
movsb
loope
xlat
je
rolb
inc
xchg
push
in
jne
inc
dec
mov
gs
xchg
pop
dec
je
ljmp
sbb
movsl
jle
int3
nop
or
inc
mov
jae
sub
out
mov
test
adc
mov
mov
jecxz
adc
mov
cmpl
ret
xchg
xlat
mov
lods
test
fiaddl
cs
mov
fldl
ret
adc
and
cmpsl
outsb
mov
mov
xchg
mov
adc
lds
and
mov
push
shr
sub
sbb
fdivl
jb
loope
xchg
mov
sbb
mov
adc
and
lea
jmp
mov
xor
jp
nop
xor
jb
adc
and
sub
mov
or
push
in
insl
in
imul
adcb
ds
ss
add
jmp
xor
pop
lds
dec
xor
and
cmp
adc
stos
hlt
xlat
mov
or
int
cmp
stos
rorb
mov
push
insl
movsb
outsl
pop
mov
mov
push
test
mov
clc
push
stc
push
leave
icebp
push
pop
fadds
cld
stc
or
adc
mov
sbb
cmpsl
test
pop
inc
cmpsb
xchg
push
fcmove
mov
mov
sbb
push
stos
sbb
lock
mov
adc
and
mov
enter
inc
xor
mov
cmp
cmpsb
inc
sbb
push
push
mov
std
inc
ret
lods
andb
push
xorb
lcall
stos
adc
in
adc
gs
lea
popa
mov
dec
mov
jnp
and
ss
mov
call
xor
into
and
jno
aad
fnsave
mov
jo
int3
pop
into
enter
and
xchg
arpl
push
push
clc
mov
sub
lcall
sub
mov
and
mov
push
cltd
popa
out
or
xor
push
orl
int
lcall
daa
popl
xchg
lea
jmp
cmc
js
lds
out
and
sti
push
lock
mov
push
int
jne
das
movsb
dec
mov
insl
xchg
data16
lock
iret
xlat
aad
dec
sub
rol
int3
add
in
insl
call
test
int3
cmc
movsb
xchg
push
cmp
bound
dec
addr16
loopne
mov
in
xchg
std
into
fsubrl
sar
mov
in
inc
test
mov
sbb
pop
test
xchg
movsb
call
test
push
xor
dec
shll
mov
xchg
shll
inc
add
xchg
xchg
movzwl
ret
lods
icebp
ss
pop
ret
jle
in
dec
rolb
lret
sahf
pushf
out
and
or
dec
push
pop
aad
push
jge
sub
dec
jo
into
mov
and
pop
pop
or
inc
mov
call
outsb
out
jb
cmp
add
jg
mov
xchg
lret
jmp
jl
mov
mov
cmpsb
movsl
hlt
pop
ja
scas
inc
lahf
arpl
and
inc
dec
xchg
mov
cmp
cltd
jo
xchg
repz
add
inc
pop
or
xorb
imul
lret
sub
xchg
inc
jbe
mov
and
xlat
es
jns
lods
movsb
jae
pusha
add
fistpl
mov
lret
xchg
cltd
sub
sbb
test
sub
and
mov
mov
xchg
aad
mov
cmp
test
xor
test
add
mov
add
int3
movsl
mov
or
fiadds
pop
cmpl
movl
aas
cmpsl
pop
mov
test
sub
push
cld
out
or
mov
xchg
and
sbb
xchg
in
lcall
mov
jb
lret
in
pusha
imul
cmp
sbb
dec
imul
movsb
add
mov
jmp
in
movsb
mov
das
dec
cmp
mov
sti
enter
ds
mov
pop
push
pusha
push
push
pop
mov
sub
test
xchg
ja
xchg
jle
sbb
adc
pop
mov
sub
mov
sahf
lds
inc
or
lds
gs
mov
std
movsb
bnd
pop
or
lock
iret
mov
xchg
pop
cs
mov
fldl
lret
call
mov
inc
sbb
push
aad
adc
std
lock
dec
dec
jne
xor
fistl
loopne
xorb
sbb
add
inc
adc
mov
or
cld
sub
repz
cmpsl
mov
pushl
aad
pop
aam
int3
mov
dec
dec
dec
das
loope
mov
stos
xor
loope
mov
push
xchg
adc
inc
stos
andl
mov
dec
jmp
push
push
xor
sub
dec
repz
cmpsb
jae
popa
adc
cmp
dec
popa
data16
mov
rolb
pop
jmp
mov
pop
pop
leave
stos
rorl
fwait
sub
leave
and
std
rcll
es
inc
sbb
fsubrs
jecxz
lods
jge
or
in
or
mov
and
adc
push
jns
mov
mov
jne
sub
jnp
test
pop
xchg
inc
outsl
xchg
push
cmp
jb,pn
lods
shlb
in
mov
mov
cmovnp
addb
retw
dec
insl
arpl
or
icebp
sbb
inc
test
movsb
or
insl
addb
ljmp
aad
adc
out
rorl
in
mov
dec
sbb
pop
mov
dec
into
loopne
stc
cld
add
sub
jle
pop
jp
dec
addl
xchg
cmovno
das
bound
shr
rorl
sahf
sbb
aas
pusha
jl
jmp
aad
lcall
adc
mov
rcl
jb
out
xchg
pusha
jns
mov
lret
leave
gs
cs
xchg
mov
or
sub
mov
or
outsb
push
or
std
fadd
ret
mov
push
stos
jne
dec
sbb
sub
scas
xor
mov
inc
pop
jnp
js
ss
or
inc
dec
int
es
inc
push
popa
inc
inc
add
push
adc
out
pop
sub
rcl
and
jge
push
sub
xchg
mov
insl
test
adc
sarl
push
mov
mov
sahf
fiaddl
arpl
pushf
es
push
fidivl
xor
xor
and
shr
push
xor
mov
mov
aam
mov
push
mov
jne
les
leave
and
lcall
dec
or
orl
xor
mov
pop
xchg
push
and
or
les
mov
flds
test
inc
sub
fnsave
stc
out
scas
loope
adc
sahf
ss
hlt
or
mov
mov
loopne
or
mov
dec
or
sti
pop
dec
aas
insb
cmp
mov
and
or
lock
insl
ss
push
mov
imull
jmp
and
and
movsl
mov
ljmp
ljmp
add
jno
cs
pop
sub
adc
sar
in
adc
fisubs
jnp
test
jp
mov
adc
out
lahf
repz
mov
mov
add
fnstcw
inc
adc
mov
lahf
push
push
lahf
icebp
call
xchg
sbb
mov
pop
jle
mov
jmp
xchg
ss
out
pop
mov
cmp
pushf
pop
cmp
mov
mov
out
incb
incl
ss
std
pop
and
insl
cmp
pop
cmp
hlt
dec
sarl
mov
data16
sbb
leave
cmp
enter
and
cmp
lahf
xorb
and
or
xchg
jb
aam
adcl
out
dec
les
jae
std
cmpsl
mov
sbb
loopne
pop
xor
addr16
rclb
mov
jge
stos
shll
sub
xchg
mov
imul
add
push
add
mov
cmp
sub
add
mov
movsb
in
pusha
lea
add
movsb
stos
sub
sarl
sar
sbb
cmpsl
pushf
cmpb
push
imul
push
mov
lret
and
xor
jns
or
mov
test
mov
and
mov
xor
dec
outsl
mov
popf
sbb
add
sub
cmp
cltd
in
push
xor
enter
cld
or
mov
sbb
cmp
mov
cltd
dec
mov
push
xlat
fcomip
out
pop
mov
push
xor
enter
cmpsl
dec
mov
int
cmc
jbe
cmp
mov
aas
inc
xor
jg
sbb
mov
mov
dec
stc
popf
cmc
sti
ja
pop
test
outsl
adc
add
imul
repz
inc
jbe
jmp
scas
lret
in
mov
dec
shrl
ffreep
mov
test
mov
jle
test
cwtl
movsb
ja
or
je
movsl
dec
pop
add
psrlw
lret
cmp
mov
int
or
addr16
data16
pop
lock
push
iret
rclb
sub
dec
popf
mov
push
sbb
pop
and
rcrl
test
test
or
psrad
add
and
negb
hlt
xor
or
aaa
pop
jmp
inc
das
xchg
paddusw
fdivrp
loop
lea
xchg
mov
ds
cmpsl
insb
mov
shlb
add
mulb
inc
pop
out
mov
es
pop
sub
mov
aam
dec
jo
dec
dec
sbb
testb
or
adc
aam
ret
mov
mov
and
pop
pop
mov
mov
cmp
dec
fwait
cmpsb
pop
pop
mov
push
aam
push
dec
shrl
popf
inc
xchg
insb
mov
movsl
iret
mov
add
lea
mov
add
scas
cs
xchg
arpl
mov
cmp
adc
shl
aad
sub
imul
adc
movsl
cmpsl
fildl
dec
cmpsb
cmc
movsb
mov
inc
repnz
leave
ret
aad
out
daa
push
in
lods
fbstp
push
lea
pushl
push
dec
inc
jns
out
lret
push
mov
out
mov
shlb
addb
aam
lock
jle
mov
mov
xor
dec
gs
stos
shrb
xchg
insl
adcl
push
daa
popf
aas
fldt
jne
mov
repnz
faddl
push
xor
cmpsl
mov
add
mov
std
test
out
adc
pop
ret
repnz
push
mov
adc
jmp
or
cmpsl
and
pushf
sub
inc
stos
mov
in
mov
das
shll
lods
imul
lds
xchg
sbb
cltd
in
xchg
mov
mov
imul
mov
inc
roll
in
mov
adc
jg
sar
cmp
xchg
sbb
push
fsubrl
aam
mov
repnz
dec
in
or
outsb
popf
push
xchg
mov
or
xor
inc
lods
in
xchg
adcb
in
loopne
cltd
push
mov
rcrl
cmp
stos
mov
adc
div
xor
push
add
aad
jno
adc
rorl
add
xor
cmc
mov
add
inc
loop
js
les
mov
xchg
out
addr16
push
cs
sbb
test
xlat
lret
rolb
push
xlat
mov
fs
jle
ret
fs
xor
js
add
xchg
push
jo
jne
mov
fs
xor
call
cmpl
fxch
test
sahf
push
push
push
cld
test
add
ror
aam
shll
mov
cmpsb
jno
inc
mov
out
rorb
addb
mov
pop
and
mov
imul
lds
test
adc
push
push
push
je
sbb
push
ret
add
out
out
stos
sub
sub
cmp
push
mov
in
cmp
mov
data16
mov
es
xor
ljmp
in
les
push
sbb
cmp
or
lahf
frstor
pop
out
pop
das
push
dec
push
add
imul
fmul
inc
aad
adc
mov
pushf
fildl
lods
sahf
shrb
jl
repz
push
sbb
movsw
jmp
adc
test
dec
cmpl
fldenv
pop
push
insb
mov
pushf
jle
fs
mov
sub
jbe
vpmacsww
mov
std
jo
je
idivb
mull
mov
adc
int
gs
aad
lds
test
mov
imul
lret
push
mov
mov
sbb
mov
cmpsb
rcll
outsl
fldenv
mov
mov
rorb
mov
adc
mov
xor
or
fcoms
adc
mov
in
sub
sar
ret
cmp
imulb
jbe
sbb
testl
cli
mov
ljmp
push
sbb
add
lods
add
scas
out
aad
jno
scas
cmc
mov
out
test
jmp
fidivs
popfw
push
xchg
into
jnp
pop
dec
repnz
xor
push
gs
inc
imul
lahf
or
inc
ds
and
jo
mov
sbb
and
pop
call
mov
sub
inc
es
repnz
les
inc
sbb
sub
add
cmp
pop
les
mov
xor
mov
lahf
cmpsl
test
add
push
std
push
test
mov
scas
pop
movsl
inc
hlt
push
in
pop
mov
pop
sarl
sbb
inc
out
sbb
bswap
push
pop
stos
mov
push
pop
sahf
cmp
movsb
pop
ret
sahf
sbb
pop
mov
xor
sub
sub
jle
sahf
push
adcb
test
adc
add
add
xchg
push
xor
pop
cs
pop
jne
adc
xchg
add
out
jnp
jmp
sub
fidivs
divb
hlt
and
and
jp
shl
cmp
pop
mov
repnz
mov
sbb
pop
jle
xchg
mov
mov
pushf
dec
repz
aam
xchg
cmp
mov
xchg
mov
sbb
push
loop
xor
xor
cmpsl
sub
xor
lahf
or
pusha
stc
lods
cs
loop
test
dec
push
hlt
scas
jecxz
mov
mov
add
rorb
jmp
add
mov
cmp
lods
xor
test
mov
jmp
push
fnstsw
xchg
mov
dec
dec
mov
in
sbb
xor
inc
andl
jl
add
jecxz
fcmovbe
idivb
cmp
adc
adc
push
aad
outsl
inc
std
jg
inc
push
dec
aam
jne
inc
xchg
rep
sbb
mov
int3
mov
jmp
xor
adc
dec
repnz
in
xchg
inc
scas
add
cmpsl
mov
and
movsl
mov
pop
xor
popf
fidivrl
pop
pop
movsl
cld
add
sar
lods
mov
mov
cmc
lods
inc
dec
hlt
repnz
add
jnp
out
or
cltd
rcll
push
pusha
std
fnsave
cwtl
jne
add
lods
mov
lods
pop
xchg
sbb
inc
cld
leave
push
mov
xchg
jg
lds
xchg
mov
xor
ljmp
mov
stc
icebp
enter
mov
jg
and
sub
dec
push
clc
fs
jnp
adc
inc
fbld
fstl
cwtl
test
dec
xchg
push
out
push
stos
test
call
xchg
les
xor
pop
sub
sub
cmpsl
pop
push
das
push
in
mov
iret
adcb
stos
gs
daa
pop
xchg
sub
cmp
dec
pusha
and
or
test
xchg
push
subl
sub
jb
sbb
outsl
adc
aaa
icebp
daa
sahf
insl
mov
push
je
in
push
xchg
jmp
insl
mov
scas
fildll
imul
pusha
mov
xor
repnz
or
xchg
data16
xchg
sti
jns
mov
sti
fistpll
outsl
mov
adc
xchg
mov
push
rcrl
outsl
out
movsl
in
lahf
fsts
stc
adcl
hlt
jle
data16
xchg
push
sbb
jns
test
mov
and
xchg
xor
test
test
ret
mov
fiaddl
pop
imul
xchg
dec
mov
mov
shll
xor
and
int3
mov
mov
insb
icebp
clc
adc
push
stos
movsb
cld
or
pusha
dec
mov
mov
movsb
mov
das
mov
enter
xchg
cmpl
popf
cmpsb
lahf
push
loop
pop
dec
xchg
cltd
lock
and
and
jae
jg
pop
push
jg
ret
gs
fsubr
fstpl
cli
pop
and
fcoml
mov
stc
mov
xchg
sahf
mov
int3
mov
push
adc
leave
dec
mov
and
xlat
hlt
sbb
and
shr
xchg
lret
or
inc
scas
push
insb
xchg
add
filds
insl
cmpsb
test
add
mov
pop
mov
daa
fwait
pop
aad
shrl
lret
and
jmp
lcall
sbb
scas
aam
into
mov
push
and
xor
xchg
and
imul
lcall
mov
inc
push
xchg
mov
les
inc
add
outsl
jmp
mov
fisubs
fwait
sahf
adcb
and
fsubrl
js
push
jo
jp
fs
dec
inc
flds
pop
mov
add
adc
pop
mov
or
sub
cli
pushf
test
xchg
data16
daa
cmpsb
arpl
jge
push
mov
outsl
jecxz
cmp
add
testb
inc
pop
xor
test
sub
jl
arpl
out
inc
cs
std
add
insl
repnz
mov
pop
push
pop
outsb
sar
js
inc
cmp
call
push
loope
cmpsl
dec
cltd
cmp
jno
and
mov
imul
lret
mov
cmpsb
clc
jl
ret
into
clc
ret
adc
hlt
cmpl
cmp
lret
lahf
pop
sub
mov
js
jne
scas
out
push
cmc
mov
or
mov
adc
xchg
aam
mov
adc
data16
int
std
or
and
push
cmp
push
pop
in
filds
cmp
jmp
neg
cmp
les
sti
mov
add
negl
or
leave
adc
inc
mov
and
add
inc
out
subl
or
int3
cs
shlb
sbb
testl
mov
xlat
sbb
popa
or
or
mov
hlt
cs
cmpsb
ds
pop
or
sbbb
out
mov
and
mov
adc
mov
dec
cmp
sbb
xchg
mov
lods
sbb
loope
gs
mov
mov
add
cmp
addl
push
mov
mov
lea
in
mov
in
mov
mov
jecxz
cld
sti
stos
cwtl
clc
pop
jae
cltd
scas
shlb
push
iret
mov
ss
sarl
cmp
sbb
jb
jns
jle
mov
sbb
cli
out
xchg
sbb
fdivrs
sub
sahf
aaa
into
mov
add
sub
xchg
sahf
add
xor
add
int3
adc
sbb
push
mov
bnd
lret
rorb
aas
mov
adc
ret
daa
lcall
pop
pop
test
mov
lcall
sbb
xchg
xchg
push
xor
es
mov
xchg
xlat
pop
adc
pop
sarl
dec
outsb
jle
or
in
xchg
cli
xchg
movsb
sahf
mov
push
add
mov
sub
or
push
test
jmp
mov
sub
jle
mov
into
cmpsb
sub
ret
push
push
push
push
mov
std
mov
pop
les
sub
push
fisubl
out
pop
arpl
add
fadd
lret
cltd
inc
adc
inc
movsb
shlb
in
inc
fidivrs
adc
or
xchg
movl
cltd
jl
and
xchg
xlat
shl
fmull
sti
loop
loope
or
dec
fldl2e
xchg
dec
push
nop
insb
fmuls
mov
ret
pop
add
into
sbb
and
jmp
mov
dec
xor
std
pop
loop
mov
scas
or
mov
into
fsubl
jns
xchg
mov
or
pusha
kmovb
sub
mov
sub
jl
aaa
js
xor
std
jl
sbb
lret
rorl
inc
cmc
mov
sbb
cwtl
test
insb
cltd
and
arpl
loope
xor
jecxz
sub
inc
jno
jmp
ret
outsl
into
repnz
sahf
and
dec
add
jle
fistpl
dec
repz
mov
fisttps
mov
xchg
inc
sbb
and
pop
dec
ror
subb
mov
inc
jnp
addb
fld
sub
ret
test
bound
movb
fisubs
ss
xchg
xor
sbb
lcall
les
adc
daa
and
mov
daa
adc
mov
rclb
in
popa
mov
dec
jo
in
mov
stc
cwtl
mov
movsl
mov
movsb
inc
sbb
jmp
int
jmp
jl
or
mov
mov
mov
arpl
sbb
sbbl
jmp
call
aaa
jge
xchg
xor
out
dec
rcrb
aam
stos
mov
insl
arpl
pop
aaa
lret
sahf
fwait
adc
xchg
dec
insl
adc
sub
mov
jge
cmp
pop
popl
mov
test
into
adc
pop
mov
jb
mov
cmpsb
cltd
pusha
cmpsb
loope
mov
xchg
or
mov
sub
and
cmpb
or
mov
xorl
xchg
sbb
pushf
cmpsl
mov
movb
sub
mov
test
push
fisttps
xchg
lcall
shrd
icebp
jle
jmp
inc
mov
outsb
lret
lds
fisubs
push
movsl
push
jl
push
dec
pop
push
cltd
mov
sub
jo
loope
xor
add
ds
fdivs
ja
je
daa
pop
jecxz
inc
in
adc
pop
dec
data16
adc
aad
daa
xchg
jno
sbb
pop
int
dec
pop
aas
push
jp
sub
repz
sub
fists
insl
xchg
mov
jecxz
ret
sbb
in
lahf
fidivrl
mov
mov
sub
subb
mov
cmp
or
add
pop
mov
xor
sahf
adc
popa
xchg
sbb
sbb
cwtl
pop
push
lods
in
ret
fsubp
sbbb
adcl
inc
shlb
and
in
add
enter
loope
out
sbb
pop
and
cmpsl
mov
rclb
xchg
add
aas
aad
mov
xchg
lods
pop
push
repnz
pop
ss
in
jno
mov
ret
pop
popa
rcl
das
jae
inc
or
arpl
dec
push
sahf
xchg
mov
xor
test
adc
pop
loop
insb
pop
repnz
leave
add
cmc
aam
insb
mov
dec
mov
sti
inc
enter
cmp
or
sarl
cmp
sbb
inc
dec
add
jno
aam
inc
xor
stos
inc
or
in
jp
and
pop
jnp
add
sti
cltd
repnz
mov
and
out
mov
jg
ret
sub
lods
jle
lcall
pop
std
stos
icebp
add
pop
push
push
shll
adc
adc
jns
lds
ret
pop
mov
push
mov
das
ss
stos
sub
stc
mov
mov
sub
fcomps
sub
mov
movsb
cmpsl
shlb
pushf
jecxz
and
mov
cltd
test
add
frstor
or
aas
pop
push
fidivrl
out
sbb
sub
fsts
jnp
lcall
mov
xlat
lods
mov
aaa
mov
mov
ret
push
stc
inc
pop
pop
pop
daa
out
mov
mov
bound
shrb
cltd
push
sub
dec
jnp
xor
add
decb
por
pop
xlat
and
fsubrs
out
dec
cwtl
pop
mov
js
fldenv
lea
sub
mov
push
pop
ja
aas
iret
mov
pushf
mov
pop
sbb
xchg
cmpsl
mov
xor
insb
lea
insb
cmc
repnz
push
inc
dec
lods
repnz
or
cmp
in
test
decl
nop
push
push
call
and
test
dec
into
adc
sbb
sahf
xor
outsb
or
gs
cltd
enter
pop
mov
test
cmp
mov
scas
and
push
inc
mov
xchg
imul
push
cmpsb
aad
push
mov
xchg
stc
inc
xlat
sub
mov
in
jmp
cltd
test
fs
cltd
mov
movsl
repz
inc
pop
mov
out
mov
pusha
pushf
int3
mov
jns
lret
in
lds
movsb
call
push
icebp
adc
mov
or
inc
cmpsl
xlat
ret
xchg
loope
sbb
sub
imul
in
js
aam
ret
add
and
pusha
or
or
sub
xchg
lret
mov
stc
out
xchg
dec
pop
mov
iret
cmp
out
divb
bound
fisttps
jne
jp
mov
and
imul
mov
push
es
popl
or
pusha
call
adcb
jo
int3
es
sub
data16
dec
inc
cmp
dec
and
ret
mov
sub
orl
adcb
popf
pop
out
jg
mov
pop
or
xchg
xor
vsqrtsd
xor
out
mov
push
repz
fcmovnu
lahf
and
sbb
pop
out
add
fcomps
or
xor
or
xchg
push
sbb
rcr
mov
mov
pop
popf
lods
fwait
cmp
movsb
mov
cmp
notb
mov
scas
adc
sbb
or
mov
cmp
or
mov
jl
sbb
xchg
pop
out
out
cwtl
fdivrl
ja
jge
out
icebp
out
pop
push
es
adc
push
sbb
ret
test
push
dec
stos
arpl
mov
pop
je
push
bound
dec
mov
fistpl
sahf
or
fwait
jecxz
inc
push
in
jp
cmp
aad
cmp
xchg
icebp
inc
stos
xor
jg
pop
sbb
fisubrl
xchg
popf
addr16
inc
adc
jg
or
dec
xchg
push
rorl
mov
scas
lahf
adcl
push
push
and
out
lcall
shll
mov
sbb
jge
rorb
repnz
out
or
enter
out
or
xor
dec
xchg
gs
mov
xor
xchg
cmp
out
les
push
out
jae
jmp
sti
orl
jl
xchg
into
ja
repz
sbb
addb
or
scas
cmp
cli
adc
out
out
push
push
mov
and
lods
test
sub
push
adc
sub
mov
push
lahf
pop
in
fsubl
mov
jb
jae
push
and
mov
addr16
adc
mov
add
xchg
aam
cmp
addr16
push
lock
movsb
call
pminsw
jmp
sbb
cmpsb
push
test
idivb
and
xchg
imul
nop
icebp
sub
in
push
jo
mov
cld
pusha
adc
hlt
lods
mov
or
hlt
push
loope
cmc
jp
xchg
addl
arpl
dec
stos
xchg
cmp
dec
notb
and
push
mov
or
int3
mov
adc
pusha
sahf
out
repz
xchg
and
adc
xor
dec
scas
mov
push
push
and
scas
in
flds
sbb
inc
pop
sbb
imul
idivl
inc
out
das
data16
movsb
xor
xorl
mov
dec
repz
add
cmp
out
push
daa
jmp
dec
sub
or
push
pop
cmpsb
or
mov
inc
dec
stos
nop
stos
or
push
dec
add
push
ss
jno
jmp
shrl
inc
mov
pop
ja
sub
mov
mov
dec
mov
pop
repnz
shll
xchg
push
test
stc
imul
sub
cli
push
push
jp
loopne
js
dec
xor
pop
adc
enter
mov
cli
pop
mov
or
out
pop
das
rcrb
and
in
push
lods
mov
jnp
popf
das
fistps
lds
push
cmp
cwtl
xchg
xchg
dec
and
sahf
inc
aaa
jge
push
xchg
js
icebp
int3
pop
pop
aad
xlat
cmpsb
push
xchg
jnp
pop
in
rclb
test
mov
in
push
jmp
je
cmp
aas
ret
and
adc
aam
inc
xchg
or
lods
test
jg
pop
in
lock
pop
scas
xchg
or
cltd
je
cmp
or
jne
xor
xor
xlat
cmc
dec
or
dec
pop
mov
ljmp
push
arpl
lods
push
clc
test
lret
pop
mov
outsb
fsubl
fnstenvs
movsl
inc
push
in
xchg
adc
fsubl
pushl
popf
fiaddl
jbe
push
xchg
sub
imul
aam
push
pop
iret
js
cltd
or
lds
jo
inc
outsb
xor
push
outsl
adcl
notl
sub
cmpsl
mov
in
test
adc
pushf
ja
xor
js
out
mov
push
adc
hlt
sub
in
dec
mov
rcrl
out
test
jp
cli
pop
sar
adc
lahf
fistpll
mov
mov
je
ja
mov
outsb
mov
inc
ret
ret
push
mov
outsb
clc
pop
imul
aam
mov
dec
mov
xchg
das
orl
pop
jb
imul
xor
ret
and
cld
addr16
dec
sti
inc
gs
pop
das
rcrb
sti
pop
pop
loopne
ds
jno
test
js
cmpsb
xor
in
or
bound
inc
and
add
fsts
dec
and
ljmp
xor
repz
mov
pop
jbe
xchg
test
pop
bound
jbe
cli
loopne
cmpsl
mov
sbb
pushf
pop
sbb
daa
fsubrp
jns
pop
fdivrl
dec
imul
and
rol
fsubrs
inc
xor
loope
cli
jbe
daa
pop
pop
mov
inc
fucom
ret
mov
movsb
roll
loopne
bound
in
leave
and
mov
enter
xchg
aam
cmp
pop
xchg
test
cmpsl
out
xor
cmp
pop
push
pop
adc
xor
mulb
in
arpl
add
inc
insb
std
push
divb
outsb
cld
cli
lock
loop
imul
dec
ret
jge
push
sub
cmp
leave
pop
cmp
aas
inc
ret
mov
cmp
les
into
fldenv
mov
dec
sqrtps
xchg
fwait
xchg
dec
lds
lock
mov
inc
loope
mov
clc
lds
iret
mov
inc
push
orb
add
jne
xor
les
or
mov
xchg
push
sbb
iret
dec
and
push
nop
test
xchg
stos
out
cmpsb
js
mov
daa
dec
lahf
dec
sbb
or
icebp
mov
lret
and
mov
xor
cmp
jge
pop
push
add
adc
jmp
les
loopne
mov
add
cmp
out
jns
mov
fstp
gs
push
cld
int
push
sbb
jg
push
mov
cmc
imul
std
pop
add
ds
dec
call
stos
ss
ljmp
mul
jl
xor
scas
das
mov
or
pop
ss
loope
jo
mov
jb
dec
sbbb
pop
bswap
push
and
inc
popa
fcomps
sbb
stos
add
je
cmp
insl
jp
cmc
mov
sbb
out
mov
daa
mov
inc
pop
popa
mov
jl
and
lret
sarb
js
inc
dec
hlt
cmp
xor
rclb
xchg
scas
mov
xchg
jo
fimull
xchg
lods
outsl
xchg
je
testl
scas
or
push
loope
rol
clc
decl
imul
push
sbb
popf
sahf
mov
repnz
dec
sbb
xorb
mov
les
fildll
mov
pop
ljmp
fnstenv
ds
cmp
aaa
test
pop
jmp
clc
cmp
jbe
pusha
dec
inc
lret
mov
sbb
dec
sarb
mov
test
idivl
ljmp
mov
mov
push
test
loopne
xchg
adc
mov
rcrb
popa
xchg
jecxz
xchg
xor
lods
inc
jae
gs
ficoml
xchg
jo
mov
lods
dec
mov
dec
xor
iret
xchg
and
icebp
pusha
imul
in
jp
icebp
xchg
into
sub
jl
fbstp
fldl
push
xor
into
xor
enter
mull
int3
call
push
add
push
push
push
insl
aas
int
stc
adc
xor
sti
push
dec
jge
push
sub
fcoml
or
fcmovbe
lods
push
pop
mov
out
add
sbb
and
lods
or
sahf
stc
mov
mov
mov
sbb
movsb
sub
push
int
jmp
lcall
adc
nop
mov
push
imul
push
stos
pop
dec
fstps
pusha
lods
repnz
call
nop
jl
dec
dec
sbb
mov
jno
lods
sub
inc
pop
mov
lods
je
push
sub
inc
in
or
in
xchg
aaa
cmp
push
mov
adc
add
or
fidivs
mov
xchg
jg
mov
aas
or
pop
xchg
jnp
leave
inc
pusha
lea
mov
jmp
pop
ss
mov
in
adc
dec
fmul
sahf
addb
jle
mov
inc
inc
and
imul
or
loope
lea
int3
cmp
shlb
cmpsl
movb
pop
lahf
lds
push
out
lods
into
mov
sub
push
lret
fidivrl
fs
push
dec
in
xchg
jl
mov
sbb
jmp
cmpb
cmp
lods
leave
xchg
inc
mov
fwait
push
incl
ret
sub
cwtl
and
ss
dec
pushl
fsts
rolb
and
jmp
insl
sbb
je
ret
filds
les
push
roll
cmpsb
ljmp
gs
and
faddl
mov
psubsw
jmp
into
sub
aas
ret
mov
iret
std
stc
loope
clc
xor
popa
cmpsl
inc
imul
daa
shll
lock
ljmp
xchg
fnsave
es
test
orps
cmp
inc
mov
adc
test
cmpsl
jg
scas
push
add
xchg
arpl
add
sbb
sahf
ret
sbb
loopne
out
sti
out
orl
js
pop
scas
lret
aaa
clc
or
cli
sub
xchg
adc
mov
pop
or
and
fwait
call
ljmp
pushf
sarb
fs
daa
add
xchg
notl
jp
icebp
mov
xor
cld
ds
mov
mov
mov
fildll
pop
push
adc
mov
sbbb
inc
and
cmp
ret
cmp
mov
add
divb
cs
mov
arpl
lods
repz
scas
sbb
int3
mov
or
ret
icebp
clc
xchg
in
loope
ds
loopne
in
loop
pop
jp
daa
push
pop
lcall
dec
and
dec
pop
xchg
out
pop
fadds
inc
jno
xchg
aam
mov
and
fdiv
add
pushf
lret
lea
bnd
fnsave
and
cld
xlat
out
nop
pop
and
lods
adc
sub
icebp
jbe
sub
push
out
nop
jne
repz
inc
push
mov
andb
rol
lcall
dec
mov
push
cmp
push
mov
lea
into
iret
fcoms
mov
xchg
jb
idivb
sub
mov
push
pop
inc
push
popa
or
jnp
lea
bound
jge
mov
psubsw
mov
mov
push
stc
lahf
ds
mov
mov
mov
pop
jo
xchg
sarl
cmp
lods
or
aam
and
xor
data16
or
pop
call
fldt
lahf
les
cmp
addr16
mov
push
rcll
loop
jg
push
mov
add
repnz
push
jbe
ljmp
mov
mov
out
clc
mov
std
push
jmp
jne
jns
add
popf
lea
mov
call
es
mov
imull
int
rcll
or
jge
enter
mov
push
in
inc
lock
pop
pop
pop
out
adc
jle
jb
mov
push
test
js
adc
int3
inc
in
dec
xchg
push
jl
dec
xchg
imul
jo
fcoml
mov
loopne
cwtl
mov
cld
cmc
les
out
mov
inc
xlat
mov
jp
fmuls
sub
and
into
rcrl
outsl
in
fisttpl
push
nop
test
jb
pop
mov
dec
rol
and
scas
callw
dec
jo
imul
lods
repz
xchg
mov
out
sbb
dec
jbe
cwtl
test
js
add
fnsave
inc
or
insl
outsl
lods
mov
inc
addr16
inc
fcompl
dec
xchg
outsl
inc
pop
push
dec
cwtl
mov
lret
pop
or
sar
cmp
xchg
xchg
iret
jae
xor
out
mov
fwait
pop
ljmp
sbbl
lods
push
out
add
add
mov
mov
and
lock
inc
out
je
jle
inc
fmull
adcl
daa
imul
mov
sti
adc
mov
inc
cmpsl
or
jbe
test
out
shl
and
push
push
scas
push
pop
das
mov
cmp
loop
aas
cmpsl
andb
int
sarb
push
fiadds
mov
adc
scas
movsb
ret
test
cmp
fidivl
pop
aam
test
lret
dec
ficomps
xor
inc
sub
xchg
dec
push
lret
in
cli
jae
out
fs
cmp
pop
xlat
pop
cmpsb
ds
into
insb
mov
push
xlat
jle
dec
xchg
test
sub
fmull
addl
xlat
pushf
adc
mov
xlat
dec
scas
test
push
sbb
xlat
std
fdivl
push
cmp
adc
xchg
or
cmp
loop
sarl
out
int
dec
lahf
jbe
cmpsl
mov
in
push
cmpsb
mov
cmp
out
cmpsb
cmc
popa
adc
add
movsb
push
les
add
xchg
dec
sbb
rcl
add
ficomps
testb
inc
shrb
mov
subl
inc
std
jg
add
jns
xor
lret
fadds
mov
leave
lds
mov
jb
lods
stc
push
lret
dec
ret
int3
lods
jnp
jmp
jnp
scas
inc
or
add
push
int3
xchg
repz
push
dec
pop
repz
lock
inc
mov
rcll
inc
cld
lret
pop
sub
aad
scas
adc
adc
dec
adc
sub
lret
sub
push
mov
adc
inc
sahf
sub
adcl
mov
mov
clc
arpl
sbb
std
in
push
call
sub
sbb
inc
scas
leave
addl
mov
push
and
or
stos
mov
inc
cltd
jmp
dec
mov
cmc
xchg
or
sbb
sub
xchg
fs
jle
aas
lods
mov
addb
xchg
sub
or
mov
mov
sub
mov
mov
idiv
dec
jbe
dec
add
lea
pop
xchg
sub
aas
fisubrl
mov
jns
repnz
and
inc
jnp
test
mov
jg
stc
je
mov
cmpsl
sbb
xor
push
fs
mov
or
mov
sub
jnp
loope
aaa
cmc
lcall
mov
jge
ficoml
testb
pop
mov
cvttps2pi
maskmovq
mov
jl
dec
cmp
and
jp
clc
push
sahf
sbb
pop
imul
dec
mov
movsb
loop
mov
jbe
cli
mov
jo
fiadds
fwait
imul
jp
adc
pop
frstor
ljmp
dec
pop
ret
xor
les
xchg
mov
xchg
xor
scas
xor
stos
test
cmp
js
inc
push
outsb
vpsraw
cwtl
sbb
out
ret
and
inc
repnz
dec
dec
cmc
out
fmulp
stos
test
fadds
icebp
insb
and
cltd
jbe
int3
les
xchg
mov
arpl
xchg
jb
in
nop
das
pop
or
repnz
push
sbb
xor
and
xchg
adcb
lret
test
and
xor
fdivl
sub
jnp
sub
test
leave
xor
jne
jbe
shlb
sarb
out
jns
xor
ret
in
lods
mov
inc
test
add
lock
stos
jae
in
xor
jmp
xor
enter
mov
add
mov
mov
andb
inc
xchg
adc
or
add
lcall
push
lea
xchg
xchg
jae
cli
popa
shr
add
std
idivl
insl
insl
add
jg,pt
push
mov
je
lahf
jecxz
repnz
out
add
into
sub
and
mov
movsb
jl
popa
push
dec
push
rorl
rorb
cmp
idivb
orb
push
xchg
inc
mov
in
pop
stos
mov
lock
subl
sub
pop
loop
in
sbb
inc
dec
inc
xchg
push
adc
je
imul
frstor
cltd
lock
push
jnp
cmpl
insl
std
cltd
fadd
std
fstps
pop
insl
sti
dec
test
andl
pusha
dec
fsubp
leave
icebp
dec
cmpb
xor
cmc
sbb
xor
in
in
xchg
outsb
adc
mov
in
je
inc
xchg
sub
pop
mov
and
cli
add
js
mov
into
hlt
gs
cs
push
repz
dec
fwait
iret
in
out
inc
add
into
out
shrb
dec
pop
push
lcall
adc
scas
pop
fldt
mov
sub
andl
dec
hlt
mov
or
lods
add
add
push
out
jmp
or
jno
cmp
xor
fwait
add
dec
stc
movsb
pusha
iret
aaa
jp
inc
scas
add
mov
mov
std
pop
push
fistpl
xchg
in
xor
scas
scas
cmp
out
fadd
push
test
xor
mov
mov
and
pop
cmp
fsubrl
mov
sub
mov
mov
mov
aam
inc
push
sub
cmc
subb
popa
sti
scas
inc
jbe
stos
call
repnz
scas
fcompl
adc
cmp
and
dec
pushf
jecxz
inc
loopne
mov
dec
lock
jb
mov
sti
jns
negb
loopne
imul
popa
or
sub
dec
not
or
es
xchg
imul
movsb
adc
cmp
cmpsl
mov
scas
ret
sti
jle
sarl
dec
jbe
daa
dec
xchg
popf
xchg
mov
inc
and
adc
mov
stos
loop
jp
mov
xor
loop
push
push
cmp
inc
jmp
xor
aaa
jns
add
xchg
push
dec
mov
xchg
add
jmp
jns
jae
add
mov
and
cwtl
popa
xchg
dec
sbb
stos
xchg
add
test
mov
scas
jecxz
loopne
movsl
test
or
aaa
dec
in
pop
mov
cmp
push
cmp
vmaxps
dec
pop
dec
aaa
dec
repz
jl
mov
leave
xor
lods
mov
out
pop
loopne
rcrl
imul
daa
call
sbb
xchg
dec
test
shlb
inc
insl
jge
sbb
xchg
mov
lock
cmp
and
xchg
dec
jecxz
testl
cmp
xor
jmp
and
pop
lret
data16
lcall
call
push
nop
repnz
lds
cmc
sbb
rclb
adc
repnz
push
push
inc
hlt
add
or
ss
fidivrs
xchg
dec
adc
aas
bound
cmp
pop
sbbl
in
mov
popf
mov
mov
mov
mov
ds
mov
pop
mov
cltd
sbb
or
stos
aaa
push
push
movsb
xor
mov
fistps
mov
pop
out
pushf
jg
loope
mov
in
dec
xor
xor
push
pop
inc
mov
out
cld
mov
xor
test
in
out
mov
sbb
js
je
out
popa
jno
enter
std
test
addl
bound
adc
xchg
dec
cmc
or
sub
mov
std
adc
push
sub
stc
clc
jno
lcall
pop
or
inc
test
pop
cltd
push
in
stos
jne
adcb
dec
pop
jmp
sub
mov
inc
or
pushf
and
jecxz
and
lods
xchg
fisttps
fcmovbe
hlt
aad
cld
sti
push
lds
mov
dec
mov
popa
call
stos
or
sub
cmp
inc
das
gs
movb
dec
cmp
es
push
push
rorb
jb
leave
adc
and
mov
and
sbb
push
out
mov
push
mov
xchg
pop
movsl
mov
dec
decb
push
pop
mov
pusha
stos
int
and
mov
mov
shrl
bndldx
aaa
xor
les
lahf
mov
and
test
sub
sub
mov
cmp
into
push
add
dec
punpckhdq
inc
mov
in
hlt
jae
mov
test
mov
mov
or
cwtl
xchg
repz
pop
repnz
test
sahf
sbbl
xchg
mov
movsb
mov
das
jmp
hlt
in
pop
les
sbb
ds
xchg
in
insl
fst
jb
in
mov
fldcw
push
mov
test
pop
pop
pusha
mov
mov
aad
push
jne
outsb
pusha
mov
hlt
mov
cmpsb
xor
mov
ret
imul
enter
fisubs
fimull
mov
repz
cmp
sti
mov
lock
adc
sti
pop
ljmp
and
adc
adc
leave
mov
adc
jns
out
xchg
mov
sub
mov
ljmp
pop
jne
cmp
faddl
mov
push
push
jo
mov
repnz
leave
test
hlt
cmp
mov
mov
jmp
cs
arpl
mov
fs
mov
jle
test
bound
mov
or
outsl
enter
imul
aas
push
xchg
cmp
mov
jno
cmpl
aaa
neg
push
cmc
mov
inc
adc
jp
pop
add
faddp
loop,pn
cmovl
bound
test
pusha
mov
ds
jle
cmp
xchg
mov
adc
push
adc
aad
dec
cmpsb
mov
pop
clc
fsubrs
mov
outsb
fadd
sub
jno
cmpsl
or
adc
adc
loopne
jp
adc
inc
cld
jnp
in
mov
dec
sbb
cmpsb
jmp
xchg
add
mov
jmp
fcomi
daa
pusha
loope
orb
hlt
mov
fstl
bound
imul
fstl
sbbb
mov
dec
imul
xor
xor
push
ljmp
imul
orl
fsub
adc
add
insl
push
add
cmp
adc
sbb
std
cltd
mov
cs
mov
jmp
bound
sbb
out
loope
mov
mov
testl
bnd
je
cmp
test
ret
mov
cs
sbb
pop
les
fcomps
cmp
dec
sti
fwait
ds
divl
ss
and
testb
jge
adc
adc
out
push
jno
xor
xor
arpl
jle
mov
les
out
xchg
xor
inc
xlat
mov
mov
jnp
pop
cmp
xor
hlt
cmp
lahf
jle
ss
cmp
mov
mov
inc
push
cmp
push
jnp
mov
insb
mov
or
pushf
pop
and
fidivrl
mov
out
fwait
arpl
sahf
shrb
jl
test
stc
or
sub
arpl
mov
push
je
jae
test
gs
lcall
test
sbb
dec
jae
cli
cmp
mov
dec
mov
xchg
push
cmp
mov
xchg
jl
outsl
jno
dec
sbb
xchg
mov
dec
ss
mov
fisttpl
shr
sub
inc
outsb
push
inc
add
or
shlb
gs
and
pop
and
lret
movsb
xchg
inc
xchg
stc
sti
xchg
mov
adc
jle
addr16
out
pushf
mov
cli
lock
jecxz
xor
jg
push
cmpsl
inc
add
je
inc
aaa
mov
sbb
movsb
push
cs
imul
pop
and
scas
mov
aad
xor
icebp
jno
jmp
mov
dec
ds
push
dec
dec
xchg
push
mov
mov
stos
dec
lret
mov
addl
ror
xor
leave
leave
adc
test
push
bound
sahf
xor
and
lret
add
xchg
rorb
mov
fsub
fcomp
sahf
fldcw
cmc
pop
imul
push
test
lahf
lods
xchg
jno
aad
pop
pop
jae
mov
inc
repnz
xor
ja
repz
out
rorl
jno
test
rorl
sbb
lods
addr16
fldenv
sbb
sub
int
popf
push
hlt
shrb
aam
add
orw
pusha
imulb
jo
mov
jbe
adc
ljmp
cmc
aas
add
pusha
mov
sub
sarl
inc
xchg
cld
addr16
gs
add
jge
addl
inc
call
loope
fistpl
sub
cmp
sbb
pop
int3
add
lea
fwait
mov
xchg
popf
pop
sahf
clc
jne
test
test
mov
xlat
jns
add
fwait
mov
leave
ljmp
fistl
cwtl
addr16
stos
das
ret
cmc
xchg
fidivs
jge
movsb
sti
jb
das
add
pop
in
fdivr
and
pop
inc
inc
and
sub
sarb
pop
cltd
jnp
repnz
jo
xor
popa
ret
push
jb
fldenv
mov
mov
or
divb
and
out
lods
movsl
jg
aam
push
adc
jp
xor
cmp
jmp
call
mov
cwtl
adc
daa
stos
bnd
ret
ja
bound
sub
push
jle
mov
insb
mov
sahf
jg
shrl
push
clc
ss
mov
mov
das
lock
mov
mov
push
cmp
dec
push
sahf
add
jnp
outsl
mov
adc
dec
orb
out
cmp
addb
add
and
add
fcmovnu
inc
xchg
and
loop
sub
inc
lret
int
jns
push
or
mov
cld
sub
mov
pop
cmp
xor
cmp
pushf
nop
cmp
mov
mov
mov
push
sti
and
test
jg
jne
lods
out
pop
fwait
sbb
dec
sarl
xor
inc
adc
in
mov
adc
nop
sbb
fucomp
xchg
fcompp
and
stos
jp
xchg
mov
fsubp
rorb
das
lea
inc
mov
bnd
and
push
aaa
xchg
pushl
mov
mov
lret
xor
sub
cld
idivb
xchg
xor
sbb
jne
addr16
sbb
add
shlb
push
mov
addr16
mov
mov
pop
inc
leave
loope
push
std
add
push
mov
jp
dec
dec
add
loope
inc
pop
shlb
xlat
xor
cmp
mov
cli
adc
scas
pop
jbe
pop
inc
cltd
add
aam
xchg
icebp
int3
mov
pop
pop
add
mov
jb
xlat
dec
jge
in
fidivs
inc
sti
mov
incl
cld
mov
loope
mov
shrb
cmp
sbb
dec
pop
in
test
and
loope
adc
xchg
fildl
xlat
leave
cmc
aas
fcoms
mov
xchg
bound
mov
stos
lds
cld
xchg
jecxz
sti
mov
sbb
nop
int
dec
out
mov
test
pop
adc
xchg
fdiv
and
out
lods
add
repnz
mov
push
dec
js
outsl
cmpsl
jo
xlat
lahf
pop
push
xor
pop
popl
ret
mov
or
push
stos
andl
shll
and
add
push
loope
or
out
mov
mov
sbb
or
or
jne
das
mov
dec
lds
not
mov
mov
push
cmpsb
xchg
and
push
xchg
dec
js
jb
fnstenv
cmp
or
lret
push
xchg
mov
loop
or
or
add
sbb
xchg
sub
ret
dec
push
xchg
mov
push
or
jle
call
cmc
sahf
testb
mov
cmpsb
icebp
mov
ljmp
dec
popa
lahf
insl
data16
jle
jp
lock
in
cmp
lea
push
rcrl
dec
iret
add
xlat
inc
sbb
test
lcall
dec
das
outsb
lds
shll
sub
mov
xor
or
xor
pusha
jno
jg
xor
cmp
xchg
jecxz
stos
loop
adc
hlt
add
stos
sub
in
lods
or
popf
xchg
and
sub
lods
popa
vpaddusb
in
or
cmp
pop
lods
or
out
pop
test
inc
adc
pop
jg
cmp
push
int3
outsb
pop
das
inc
inc
loope
test
jae
inc
dec
or
push
and
out
mov
or
or
xchg
test
xlat
iret
push
and
sti
icebp
cmp
fstl
dec
decb
adc
pop
fwait
pop
fwait
add
adcb
or
and
xor
cmp
dec
lcall
icebp
cmpsb
dec
outsb
mov
leave
icebp
inc
es
int3
jno
stos
test
jbe
jo
stc
sbb
adc
xchg
lods
jbe
xchg
out
aaa
add
call
push
pop
mov
sub
dec
scas
xor
pop
mov
sahf
pop
pop
add
jbe
jbe
mov
shrb
aas
add
inc
sub
push
sub
insb
outsb
es
lret
rorb
pushf
rcrb
push
push
in
fadd
mov
les
mov
xor
lahf
enter
inc
rcl
jecxz
or
ja
insl
shll
scas
lods
adc
mov
or
adc
in
cmp
sbb
pop
jle
ror
and
and
sub
fbstp
xor
push
jae
pushf
jecxz
imull
daa
push
mov
dec
shlb
inc
cmpsb
pop
mov
jno
test
add
xchg
pop
sbb
mov
jns
pushl
out
scas
jno
pop
and
sbb
pop
jne
or
test
repz
rcrl
and
sbb
xor
loope
test
sbb
xchg
sub
test
mov
dec
push
lods
jno
mov
hlt
int3
rorb
mov
ja
lahf
cs
sbb
stos
dec
xor
push
inc
movsl
sti
imul
cmp
push
or
and
mov
and
or
test
in
push
mov
sub
shll
mov
in
and
in
loopne
fs
push
jge
repz
push
mov
ret
mov
pop
in
xchg
pop
clc
in
inc
lea
nop
movsb
jnp
iret
push
mov
hlt
push
lods
mov
iret
inc
fisubs
pop
iret
jge
mov
outsl
in
xchg
xor
dec
int3
pop
cmp
repz
mov
bound
jecxz
adc
sbb
sub
mov
or
mov
shr
movsb
int
gs
dec
adc
push
loopne
in
jae
fdivl
push
add
incb
shlb
in
xchg
pop
ljmp
cmp
push
loope
pop
add
cmp
imul
mov
xchg
sub
mov
lret
loope
pop
shrl
push
cs
adc
mov
cmp
mov
lret
jecxz
cmp
dec
add
iret
push
push
arpl
mov
lods
cmpsb
ret
adc
sti
into
push
xchg
inc
movsb
mov
fisubs
cmp
push
pop
repz
mov
adc
repnz
cmp
or
cli
add
push
lret
push
lock
xchg
xor
jb
mov
dec
inc
imul
cmp
icebp
or
in
gs
mov
xchg
sub
testb
cmp
lahf
imulb
xor
scas
mov
jg
jl
pop
sbb
cltd
adc
shrl
jg
mov
imul
lahf
das
in
push
cmp
pop
dec
push
xchg
add
jb
add
dec
jo
cmp
pop
sbb
lds
push
jp
jno
shll
dec
xchg
cmp
fwait
outsl
push
inc
or
mov
pop
arpl
add
jae
das
icebp
iret
xchg
jb
fstps
out
add
sti
mov
repz
sub
and
dec
mov
cmpsb
mov
cmpsb
mov
sub
aaa
ret
rorb
or
xor
test
sub
insb
mov
out
lret
mov
push
xlat
js
fcoms
fcoml
outsl
sbb
pop
cltd
pusha
jle
outsl
shll
incl
out
dec
repnz
sbb
jnp
fisubrs
incb
outsb
das
xor
cmpb
xlat
repz
mov
cwtl
lds
aas
inc
lds
sarl
adc
fcmovnb
jne
movsl
cmp
cmp
add
xchg
outsl
data16
mov
sbb
fwait
sbb
in
sbb
or
cmpsl
or
int3
mov
inc
jmp
stos
and
decb
scas
ret
or
push
xchg
jecxz
inc
gs
movsb
mov
dec
pop
lods
mov
inc
lods
aad
lea
mov
pop
cmp
jl
fcoms
leave
xchg
xor
loopne
enter
push
cmc
sarl
xchg
cmp
icebp
jmp
jmp
daa
dec
inc
rclb
or
xor
push
jge
push
jg
push
inc
sub
cli
ljmp
sarl
mov
add
jb
cmp
fldz
and
add
mov
ja
inc
ret
repz
shl
sbb
test
outsb
sub
lahf
mov
idivb
cmpsb
mov
cmc
je
test
sub
lea
imul
int3
dec
dec
and
add
aad
add
adc
or
int
lret
cltd
nop
mov
daa
ljmp
xor
mov
push
mov
test
in
outsl
aaa
hlt
orl
push
pop
xchg
lea
and
or
lret
in
sbb
push
lcall
aad
test
insb
pop
ficomps
insb
or
lock
stos
stos
cmp
cli
sbb
sub
adc
mov
cmp
icebp
jns,pt
loopne
add
cmp
movsl
insl
dec
sti
xchg
andl
jg
je
xor
xorb
pop
or
push
or
cmc
lret
sbb
push
mov
scas
arpl
nop
dec
les
sti
cmp
mov
sub
in
stos
push
sti
orl
cs
inc
and
stos
jg
adc
lods
rcrb
cltd
sub
enter
gs
mov
or
je
adc
xchg
or
add
mov
out
mov
repz
xchg
mov
and
out
lea
xchg
enter
adc
jae
adc
sarb
sbb
mov
je
dec
add
pop
xchg
adc
popa
cmp
mov
xor
adc
xlat
jmp
xor
xlat
subb
xchg
movsb
mov
je
xchg
or
pop
fmuls
js
mov
mov
notb
mov
in
pop
scas
popl
scas
int3
inc
push
mov
push
cli
push
mov
cli
imul
jg
cmp
sub
push
mov
inc
jae
jbe
sbb
rclb
mov
mov
add
xor
push
lret
int
dec
aam
test
clc
fnstenv
jno
ljmp
in
push
pop
cmp
mov
popa
cli
xchg
jp
rclb
pop
ficomps
xchg
stos
in
jl
notl
aas
int
ret
ret
xor
push
sti
cmp
lret
sbb
loope
mov
push
ret
jbe
mov
jmp
outsl
sar
xchg
adc
add
inc
lret
push
popa
mov
inc
adc
inc
pop
or
shlb
dec
sub
push
cltd
mov
mov
dec
adc
sub
sbb
add
inc
cmp
mov
cmpsb
test
cs
lea
pop
xchg
testl
gs
outsb
jnp
and
mov
rorl
sti
fwait
mov
xchg
loop
das
hlt
rcll
mov
negl
movsl
es
adc
pop
dec
std
mov
and
and
mov
sbb
xchg
mov
rolb
popa
push
cli
adc
loope
loopne
sbb
adc
mov
testb
fs
jge
test
mov
xchg
inc
data16
cmc
movl
orb
xor
mov
daa
pop
xchg
fdiv
outsb
out
test
mov
jmp
push
mov
mov
xchg
test
push
inc
mov
pop
mov
rcl
pop
adcl
xor
dec
xchg
scas
lock
aam
push
stos
xor
sbb
jnp
cld
xchg
loope
scas
ds
xor
loopne
adc
add
rcll
pop
movsl
popa
inc
lret
dec
into
mov
mov
xchg
mov
iret
xor
cmp
xchg
sbb
out
int3
jge
push
dec
jmp
fld
mov
or
aaa
pop
or
mov
xchg
sbbl
std
mov
test
or
mov
rorb
and
inc
xor
es
inc
lds
mov
icebp
xchg
and
jb
loop
aas
pop
dec
in
lods
mov
mov
scas
inc
inc
jle
jne
subb
push
or
subps
mov
or
insl
das
xchg
sbb
lods
push
cwtl
hlt
xchg
rcll
xor
fstpl
out
loopne
sti
loop
push
jle
cmpsl
sub
inc
pop
jno
xchg
xor
adc
int
push
add
sti
js
add
repz
sub
sub
fisubrs
sbb
jp
mov
lcall
enter
jne
rcll
mov
jo
inc
dec
pop
aad
sub
lahf
test
adc
cmpsb
mov
xchg
imul
add
and
mov
mov
xchg
xchg
lock
leave
ds
pop
jg
andl
enter
jne
push
sti
lea
dec
shl
jae
sbb
mov
cltd
fscale
add
and
push
lods
daa
aad
repnz
enter
test
repnz
insb
sahf
mov
xchg
mov
icebp
pop
push
add
nop
fcoml
and
loopne
mov
inc
and
mov
test
fcoms
insb
and
pushw
xchg
ret
or
inc
rcr
ljmp
inc
add
add
lcall
lds
loop
push
mov
add
xor
mov
sbb
cmc
xor
popf
leave
repnz
jbe
jmp
pop
or
jl
or
les
repz
jo
sub
pushf
ret
lods
cmp
add
ds
xchg
scas
mov
push
cld
fs
and
insl
xchg
push
rcrb
cmp
mov
push
mov
leave
ret
or
insl
mov
xlat
jo
sbb
ljmp
jl
es
sbb
add
mov
sub
xor
popf
hlt
add
loop
add
mov
bound
lahf
sub
sub
mov
rcrb
addr16
call
add
inc
loop
rcrl
shll
sub
mov
ss
push
div
and
push
inc
xor
push
jle
ror
add
dec
adc
push
stos
fistl
xchg
filds
mov
dec
subb
and
jns
sbb
divl
jmp
fidivrl
mov
ret
push
jnp
pcmpeqd
jecxz
or
fsubrl
and
call
or
push
pop
fdivrp
aas
imul
repz
inc
cmc
sub
sbb
cltd
mov
mov
inc
dec
push
jp
add
dec
and
xchg
mov
mov
pop
in
in
addb
dec
call
pop
xor
pop
mov
push
push
xchg
fstl
mov
lret
push
jg
adc
jge
adcl
fyl2xp1
jmp
aaa
fwait
adcl
sbb
jne
in
inc
jno
in
mov
pop
insb
dec
cmp
repz
cmp
stos
ss
jb
mov
shll
enter
in
or
cld
adc
jo
adc
cld
xchg
imul
xor
push
fildll
pop
jbe
int3
sahf
and
lcall
popa
and
ret
sbb
decl
lret
adc
lock
aad
shll
xchg
xchg
in
out
cmp
mov
or
jle
pop
cmc
fwait
dec
movsl
test
arpl
dec
sub
mov
arpl
push
in
mov
insl
jle
push
and
add
fnstenv
xor
stc
cmp
movsb
add
jge
test
pop
das
or
ja
jecxz
xchg
ja
testb
mov
mov
jnp
xchg
fists
sub
jl
outsl
xor
inc
lods
mov
aaa
mov
xor
xchg
or
sbb
gs
xor
aam
xor
mov
or
hlt
mov
ljmp
orb
aad
or
sub
pop
inc
sub
dec
or
clc
inc
decl
mov
push
movsl
das
xchg
sbbb
fmuls
mov
mov
add
dec
outsb
push
insl
test
mov
gs
or
push
cmp
mov
iret
push
bound
fldcw
ss
jg
dec
leave
into
inc
lret
ss
mov
dec
jmp
cli
jecxz
push
mov
jbe
push
aad
sub
lock
imul
mov
mov
adc
pop
or
push
cmc
out
jb
jb
xor
pop
enter
sbb
pop
pop
movsb
fdivrl
lods
jecxz
and
fidivs
inc
mov
ret
adc
add
dec
ljmp
ret
or
add
pusha
pop
pop
mov
sub
xchg
scas
xchg
cmpsb
push
loopne
sbb
mov
pop
cmc
jg
int3
push
jne
int3
in
jge
mov
pop
xchg
sub
sbb
jno
mov
jmp
aas
jg
insb
or
fcmovu
cmp
into
sti
rcrb
push
adc
pop
inc
lods
push
repz
xor
cmp
lods
in
fcompl
lock
les
fldt
out
and
sbb
xor
push
sub
mov
inc
jle
inc
pop
sbb
imulb
je
out
sub
mov
cmc
jle
pop
ret
jnp
int3
popf
cmp
test
aad
mov
out
mov
outsb
jmp
mov
add
inc
clc
pop
testl
cld
out
xor
std
xchg
sarb
jecxz
outsb
inc
imul
movsb
mov
pop
inc
es
dec
ljmp
dec
sbb
and
outsb
mov
ficompl
or
adc
xor
sbb
sub
cmp
push
mov
orb
mov
ja
hlt
adc
pop
test
dec
xchg
xor
xchg
push
adc
gs
rcrl
cmc
icebp
xor
test
popa
dec
dec
dec
and
aam
nop
mov
or
fidivs
loopne
js
sti
mov
ds
outsl
and
mov
test
popf
aam
les
pushf
iret
jnp
dec
mov
sbb
jle
pushl
cmp
das
cmp
dec
add
adc
aam
xchg
rcl
stc
repz
rcrb
sbb
into
and
adc
xchg
cmp
or
test
aad
adcl
and
pop
xchg
shl
mov
sbbb
pop
push
lods
lods
lcall
push
in
cmpsb
dec
sub
lahf
xor
rorb
push
pop
mov
ds
or
mov
sbb
cmp
aas
mov
adc
push
popf
mov
lods
ds
dec
pusha
scas
sbb
push
mov
xor
pushf
sarl
mov
jmp
pop
lcall
sub
out
xor
mov
jmp
out
pop
movsl
pop
push
pop
in
jno
cmpsb
push
jne
mov
jecxz
xchg
xor
pop
out
rorb
cli
push
adc
or
dec
jecxz
in
mov
push
mov
jge
fs
cltd
push
xchg
cmp
sti
stc
push
insb
mov
in
mov
dec
scas
cmp
lock
sti
inc
shrb
or
icebp
sti
ds
sarl
imul
enter
shll
xchg
mov
fs
jge
scas
mov
push
jecxz
test
sbb
sbb
add
popf
int
mov
mov
mov
sub
inc
outsl
xor
ret
out
je
mov
fisubrl
push
push
leave
insl
nop
xchg
xor
push
cmp
les
xchg
in
imul
leave
fwait
gs
xchg
stos
dec
cmp
lea
sahf
ja
sbb
in
int
and
adc
fdivrl
mov
je
xchg
mov
repnz
mov
leave
xorl
icebp
jge
lcall
push
mov
cmp
or
or
mov
out
cmp
sub
cmp
add
inc
or
lret
mov
aas
rcll
mov
sbb
jb
pop
imul
scas
out
pop
adc
jnp
dec
ja
shrb
cmpsb
dec
shll
push
pop
lds
xchg
mov
dec
mov
inc
mov
call
sti
dec
nop
xchg
push
push
sub
shlb
cmp
cmp
flds
mov
jl
aad
pusha
pop
push
scas
cwtl
jne
sub
mov
aad
scas
sub
arpl
jo
dec
decl
adc
cmp
inc
jge
repnz
cmp
pop
push
dec
in
adc
xor
cld
into
push
mov
dec
adc
push
ret
cmp
dec
pop
lock
sub
rolb
in
inc
mov
enter
ss
inc
dec
pop
nop
dec
push
in
sub
jle
cmp
mov
in
aaa
push
pop
test
xchg
repz
aam
in
push
xchg
xor
hlt
jo
pop
insl
mov
cmp
sahf
mov
pop
outsl
adcl
stos
lldt
or
sub
fs
lods
cli
add
aad
lods
gs
jns
or
andb
scas
test
outsb
push
lret
xchg
lds
mov
xchg
dec
movsb
imul
lds
stos
mov
je
inc
andb
mov
ret
dec
jne
cmp
sub
mov
add
add
aad
movsb
or
movsb
cli
fbstp
in
sbb
aad
add
loopne
mov
in
xorl
xlat
clc
mov
cmovo
lahf
jae
xchg
push
push
push
mov
pop
scas
bound
inc
popa
mov
cli
pop
sub
mov
dec
sarb
cli
push
mov
sub
cmp
add
adc
pop
push
add
inc
aam
loope
pop
out
imul
and
cli
add
jns
pop
shlb
pop
push
pop
ret
test
adc
pop
mov
je
jecxz
xor
cs
xor
jecxz
pop
bound
and
cmpsb
pop
js
push
out
test
and
or
adc
and
daa
data16
pop
push
push
leave
cwtl
cmp
shll
jecxz
fs
or
push
movsb
adc
cli
cmpsl
lret
scas
cmc
enter
mov
inc
fwait
lock
mov
xor
pop
test
mov
add
mov
mov
stos
and
fs
mov
add
dec
push
addl
mov
or
fstpt
loopne
data16
daa
dec
out
push
cmp
pop
mov
xchg
and
js
dec
es
cmp
sbb
test
je
movsb
inc
mov
add
mov
jo
sbb
dec
in
sti
in
mulb
push
nop
insb
fs
cmp
push
aad
mov
insb
outsb
xchg
out
loopne
sbb
data16
lea
xchg
xor
bnd
dec
push
mov
adc
scas
push
push
inc
jns
mov
jo
hlt
lcall
sub
xor
cmp
adc
pop
clc
fwait
add
xor
ja
bound
dec
cltd
xor
mov
adc
and
dec
push
add
clc
jne
or
dec
xchg
enter
or
cld
inc
insl
mov
int
push
xchg
ds
pop
push
jp
mov
lods
mov
sub
pusha
out
fldl
sbb
mov
cmp
mov
push
push
loopne
in
mov
push
jae
add
sbb
in
add
test
cmp
je
inc
pop
push
sbb
outsl
sti
inc
mov
xor
xchg
pop
cmp
jno
cmpsl
push
incb
xchg
or
jno
rcll
sbb
or
pop
and
cmp
sbbb
icebp
loop
adcl
sub
into
jge
push
popf
cwtl
lods
xlat
and
push
clc
inc
or
cmpl
xlat
test
clc
lahf
dec
mov
mov
iret
and
mov
call
in
inc
mov
outsb
pop
mov
jecxz
mov
icebp
ret
fnstenv
cmp
lods
xchg
jb
movsl
push
ret
sbb
ja
icebp
jp
pop
inc
mov
or
dec
cmc
cltd
arpl
dec
and
cmpsb
mov
jl
ror
stos
out
adc
adc
xchg
sbb
inc
lcall
jo
fdivl
popa
mov
addr16
fld1
insl
inc
inc
add
clc
jne
popf
and
pop
mov
sar
dec
xor
xchg
gs
in
push
dec
lahf
jne
inc
outsb
jmp
mov
add
popf
fildl
push
daa
or
cmp
sbb
jbe
mov
in
loop
shlb
add
iret
ljmp
add
aad
mov
cmpsb
lcall
mov
outsb
adc
inc
subl
pop
sub
arpl
into
into
jo
ret
mov
pop
sahf
outsl
mov
ret
push
inc
push
mov
cs
repnz
inc
pop
loop
pop
lock
mov
pop
mov
repnz
push
and
nop
push
or
notl
or
push
push
mov
mov
xor
jo
addb
out
xchg
stos
jae
test
cmp
add
inc
pop
fistpll
lcall
push
adc
mov
ret
shll
fnstcw
push
xor
test
pop
iret
aas
mov
mov
int3
mov
adc
or
fwait
out
out
xor
push
push
rorl
rcrl
lea
push
imul
or
adc
sub
sarl
push
in
xchg
mov
sarl
in
pop
scas
shrb
xchg
test
mov
insl
imul
in
repz
pop
je
push
js
clc
or
into
xchg
mov
inc
out
inc
mov
add
pop
scas
adc
pop
xchg
inc
adc
jge
pusha
and
sub
bound
cmp
in
aas
or
xor
mov
test
scas
cmp
xchg
sbb
dec
and
pop
dec
addr16
sbb
mov
fwait
mov
push
addr16
iret
adcl
mov
fidivrl
lcall
in
cmp
mov
fistps
cs
jmp
out
mov
or
in
lss
adc
inc
dec
add
loope
push
pop
movsl
xor
mov
ds
rol
test
push
xor
pop
aas
lods
adc
mov
add
mov
cmp
aas
jb
pop
std
add
pop
xlat
jle
fcoml
xchg
and
or
lcall
call
xchg
dec
inc
xchg
cmpsl
pop
sbb
cld
dec
sbb
sahf
bound
pop
fstpt
push
ljmp
adc
jae
dec
mov
adc
and
jmp
and
sub
sahf
imul
mov
sub
ret
mov
idivl
icebp
xchg
adc
mov
or
scas
push
outsb
push
xor
insb
push
mov
jno
sbb
cmc
test
or
cmp
fldenv
lods
andb
mov
mov
mov
push
shr
aas
pop
call
in
call
cmp
rcl
int3
mov
adc
aam
test
sbb
cmpsb
aad
cld
stos
cmp
dec
xor
lret
sub
inc
shll
ss
add
dec
cmp
pop
bnd
and
inc
jmp
inc
lcall
mov
jbe
bnd
add
push
jo
iret
push
int3
imul
pop
and
cmp
and
push
push
fcom
xor
notb
push
sbb
lahf
int3
push
mov
sbb
rcrb
inc
addr16
stos
xor
cmp
or
mov
pop
push
sub
sbb
adc
add
addr16
xchg
loop
dec
mov
jp
sub
addr16
mov
rol
test
sub
push
pop
add
test
cld
push
sbb
lret
mov
dec
mov
add
fisubrl
stos
add
je
xchg
movsl
dec
lahf
push
fsubrl
jbe
push
xor
xlat
mov
ret
push
fbld
ds
xchg
mov
or
incb
dec
sbb
jbe
push
movsb
lods
push
sarb
lea
test
pop
jl
lcall
test
mov
arpl
mov
or
adc
and
mov
add
and
ljmp
ss
sti
les
push
aad
mov
mov
icebp
enter
dec
dec
iret
mov
mov
add
insb
push
jle
es
lcall
jbe
ds
aaa
push
cmpsl
fistps
testl
hlt
mov
sbb
sbb
in
sbb
aam
push
dec
sbb
push
pop
add
int3
push
aaa
movsb
cwtl
daa
scas
sti
pop
sbbl
shr
mov
or
cld
pop
inc
imul
insl
and
sub
push
imul
lea
sub
sbb
jg
shl
aas
test
cmpsl
imul
je
shrb
iret
or
test
mov
movsl
push
cmc
mov
add
icebp
insl
jge
jecxz
jne
leave
add
test
test
dec
test
or
push
ficoms
add
int
jae
mov
add
and
pop
inc
cmp
mov
je
in
iret
pop
inc
mov
pop
pop
mov
add
cmp
xchg
push
jp
in
iret
out
mov
gs
rorl
cwtl
fstps
ljmp
pusha
sub
jbe
jno
aad
test
inc
nop
movsl
sub
in
jbe
jns
and
push
lahf
mov
roll
nop
mov
test
add
xchg
cld
fdivs
jne
sub
shll
fsts
pop
mov
lock
lock
jecxz
aaa
loope
xor
testl
rcll
pop
movsl
test
out
xor
adc
push
dec
add
xchg
fdivs
std
ss
aas
popa
gs
pop
inc
push
jo
mov
mov
xchg
lock
push
mov
ds
xor
je
fisubrl
adc
fidivs
push
out
adc
jl
adc
das
movsl
pop
add
repnz
loope
popf
add
bound
and
fnstcw
pop
adc
enter
dec
cwtl
hlt
pop
xor
mov
or
xor
ffree
popa
call
xchg
mov
repz
cmp
repz
icebp
adc
and
arpl
es
sbb
aam
mov
out
es
imul
int
add
mov
mov
push
jmp
cmpsl
adc
loope
mov
push
psrad
xchg
xchg
orl
dec
dec
imul
idiv
add
xor
dec
rorb
pop
inc
mov
cwtl
mov
push
xorl
rcrl
std
or
dec
add
repnz
mov
inc
pop
clc
jns
loop
andb
cmp
or
sahf
pop
lea
sbb
fisttpl
test
in
out
pusha
iret
jbe
cmp
push
inc
and
sub
sarl
mov
mov
outsl
jo
in
outsl
mov
ret
jae
push
sub
cld
call
test
ret
in
push
ss
adc
pop
outsb
xchg
adc
leave
sub
push
xor
sub
and
in
cmp
out
sarl
inc
push
or
movsl
mov
mov
push
scas
adc
popa
jle
jo
inc
add
loope
inc
or
mov
mov
push
lods
js
push
imul
xlat
or
add
fisttps
add
xlat
out
popf
dec
jnp
outsb
pop
fsub
pusha
xchg
pop
pop
add
or
mov
inc
incl
pusha
fs
ror
ss
negl
push
or
test
sub
dec
sbb
push
or
jo
sub
cmp
lcall
out
push
push
into
fwait
int3
pop
pop
daa
inc
pop
or
fisubrs
shrl
inc
aad
fdivr
dec
adc
sub
ljmp
mov
test
int3
inc
jnp
mov
mov
loop
pop
pushl
xchg
in
pop
movb
push
lret
cmpsb
sbb
mov
lcall
stc
fwait
jbe
lret
hlt
jecxz
jl
enter
cmpsb
fidivl
mov
push
add
xor
mov
inc
repnz
insl
mov
mov
add
lret
je
jle
add
dec
jge
in
in
xor
cmp
cmp
push
xchg
adc
cli
nop
xor
cmp
or
bound
mov
sub
mov
mov
addl
cmp
leave
add
xchg
mov
fs
lods
fstps
sbb
xor
inc
and
lods
outsl
outsb
fsubs
fsubl
mov
popf
push
add
and
mov
inc
dec
push
or
stos
inc
fdivrl
xchg
cmp
and
mov
sbb
pusha
or
mov
repz
js
out
sbb
es
out
mov
in
rorl
adc
ja
lods
movsl
std
mov
dec
test
ljmp
add
js
mov
scas
test
push
xlat
popf
xchg
sub
loope
cmp
lret
fsubs
loopne
mov
loop
test
cmpsb
addr16
les
fiadds
imul
repz
dec
push
mov
pop
xchg
push
sbb
fwait
xchg
push
lds
mov
icebp
or
aas
les
xor
dec
movsb
mov
jge
sbb
pop
xor
outsl
mov
sbb
xchg
pop
stc
mov
pop
push
scas
mov
cs
jge
or
in
arpl
imul
mov
xor
cmpsb
lds
xchg
cli
jge
dec
pop
jl
jns
popa
mov
cltd
ret
lret
loopne
dec
xchg
aad
sbb
adc
cmp
and
mov
cmp
push
shll
sbb
push
popf
inc
mov
sahf
clc
sarb
add
stos
cmpsb
jbe
sbb
push
lods
cmpsl
aad
jge
roll
xchg
push
in
loop
xor
jl
cs
mov
test
stos
and
std
adc
mov
dec
orb
jno
mov
arpl
in
inc
loopne
cli
sub
test
outsb
mull
mov
fisttpl
andb
and
nop
call
sub
push
adc
xchg
int3
lods
mov
xchg
mov
inc
cs
stos
psubusb
lock
sub
outsb
cld
in
fs
fidivrs
sbb
xchg
out
stos
cmp
adc
inc
inc
push
jno
arpl
mov
pop
std
cld
mov
cmpb
aad
push
sbb
outsb
movl
mov
mov
loop
push
jmp
pop
inc
push
add
lods
std
dec
imul
fwait
ret
jb
jg
dec
and
pop
push
out
aam
lea
fwait
test
and
mov
fldenv
imul
jo
mov
jo
sti
insb
inc
imul
int3
sbbl
dec
shrl
xchg
std
sar
repz
movsl
jp
sbb
mov
sub
inc
inc
pop
adc
in
ljmp
call
jb
inc
and
xor
shll
adc
lods
mov
insb
scas
rol
movsb
mov
xchg
sets
hlt
dec
sahf
mov
enter
ja
and
daa
inc
mov
inc
sbb
insl
push
xchg
cmc
add
iret
orb
call
mov
rcl
mov
add
and
pop
gs
mov
test
xchg
cli
lcall
sub
fbstp
sbb
mov
push
pop
mov
adc
cmp
loop
push
sbb
dec
imul
scas
xchg
add
fs
mov
sub
push
jle
das
mov
mov
testl
imull
adc
ficoms
xor
lods
mov
test
push
or
scas
enter
cmp
xlat
mov
pushl
shlb
in
sub
push
dec
iret
add
or
mov
inc
jne
pop
inc
movsl
inc
incb
xchg
cmpsl
mov
or
mov
push
adc
and
cmp
xchg
bound
or
cmp
fmuls
repz
std
imul
aad
jne
sbb
sarl
enter
xchg
fidivrl
xor
jp
push
ljmp
aaa
dec
xor
mov
mov
ret
add
jp
stos
lret
lcall
aas
rcrl
xor
insb
shlb
lret
or
lds
das
inc
mov
lahf
mov
xor
sbbl
popa
out
sbb
jno
mov
in
aam
icebp
add
dec
fistpll
test
and
cmp
xor
pop
lods
add
and
test
inc
mov
mov
sub
mov
jecxz
lret
aas
pop
cmp
xchg
sub
jp
cmp
jp
cmp
fwait
mov
mov
dec
lea
push
dec
xorl
and
outsl
in
fsts
movsl
dec
cmpsb
imul
inc
push
movsb
or
mov
test
mov
in
fwait
xor
mov
sub
cmp
cli
stc
mov
xchg
lret
jo
clc
jp
fcompl
inc
pop
adcb
inc
sbb
mov
cmc
pop
mov
aaa
mov
hlt
sub
push
movsb
mov
push
pop
test
mov
rolb
out
mov
shr
xor
pusha
nop
cmp
jg
je
jecxz
adc
xchg
loopne
je,pt
adc
xchg
add
mov
push
into
fldcw
fwait
mov
notl
sbb
push
jl
sarl
lock
push
cs
loopne
cmpsl
movsl
xor
sahf
sbb
or
rcl
ss
jb
gs
mov
mov
in
push
leave
gs
scas
xor
fadd
xchg
and
lods
loopne
movsl
jne
xchg
cmp
int
in
sub
mov
jno
cmc
sub
sbb
mov
xor
sarl
clc
xor
fdivl
pop
into
push
jg
inc
outsl
or
test
stos
add
cmp
mov
jle
in
jne
xchg
cmp
imul
lds
cmpsl
fldenv
fcmovbe
sbb
or
jmp
lock
cmp
imul
or
cmp
and
push
stos
sbb
jb
std
mov
push
aas
inc
push
xor
loope
mov
out
cmp
jns
or
popaw
cli
sbb
bnd
sub
sub
f2xm1
stos
and
add
daa
ljmp
cmp
addr16
test
push
cmp
inc
mov
mov
mov
jns
xchg
clc
cmovp
mov
sbb
jmp
dec
dec
lock
mov
cmpsb
rcr
stos
jg
or
fisttpll
jecxz
mov
mov
xchg
movsl
lahf
mov
and
sub
bnd
mov
fwait
xchg
mov
xor
or
sub
inc
test
jns
nop
push
pop
dec
push
loopne
sub
gs
test
roll
ret
loope
aaa
notb
mov
cli
daa
jg
xor
sub
fdivrl
sbb
shl
movsb
shlb
cmp
in
int3
in
inc
rorb
fstps
cltd
into
pop
shll
and
mov
arpl
shlb
outsl
arpl
cmp
push
ja
les
pop
mov
sbb
addr16
mov
xchg
iret
jb
xor
jecxz
jnp
sub
mov
add
cltd
ljmp
jge
sbb
rolb
pusha
push
and
dec
enter
sub
aas
adc
out
insb
cltd
out
mov
inc
add
in
pop
adc
mov
xor
insl
push
mov
mov
and
iret
mov
sarb
aam
push
and
cmp
xor
ret
clc
push
jnp
inc
mov
stc
lods
mov
jno
mov
mov
dec
push
cs
dec
cli
sub
les
inc
out
jae
pop
pop
xor
pop
inc
repz
adc
out
add
xchg
jge
and
ljmp
fstpt
and
inc
fldl
push
stos
fwait
int3
adc
jne
add
and
mov
movl
push
imul
pop
sbb
push
loop
pop
mov
je
outsb
rcrb
test
adc
push
fs
push
xchg
test
enter
xor
das
icebp
push
popl
jae
repnz
loopne
xlat
into
enter
mov
imul
mov
sub
cli
popf
xchg
xchg
sub
xchg
jmp
mov
inc
js
dec
outsb
stos
or
lock
mov
inc
cs
cs
xchg
inc
enter
outsl
leave
mov
cmc
into
inc
mov
jp
inc
gs
jl
les
ret
mov
popa
and
hlt
mov
cmpsl
jno
lds
jae
push
sub
pop
push
ret
push
push
rorl
repnz
push
pop
lcall
and
dec
out
cld
adc
ds
or
push
loope
or
das
pop
mov
mov
pinsrw
out
rcr
inc
or
mov
pop
mov
mov
add
in
xor
std
mov
mov
adc
std
out
insb
mov
lods
lcall
mov
les
and
mov
push
popf
push
repnz
cld
cmpl
dec
sbb
rolb
inc
jp
lods
mov
adc
decl
cli
jmp
lcall
dec
or
push
cmpsl
dec
popf
push
jno
test
jo
es
dec
pop
jbe
xor
shl
lahf
insl
sub
adc
mov
jle
sbb
mov
mov
mov
out
sbb
icebp
dec
adc
cmpb
insb
js
ret
pop
jne
neg
lods
inc
mov
jmp
pop
out
frstor
cmpsb
sub
test
pminub
in
arpl
dec
daa
adc
and
add
mov
mov
xor
jge
out
sub
inc
dec
pop
add
sub
jg
ret
adc
xchg
xchg
outsl
jmp
repnz
mov
loope
nop
dec
je
scas
sub
adc
mov
test
loope
adc
addr16
out
in
or
jge
mov
shrb
jle
pop
fildll
shll
out
mov
cld
cmp
into
mov
in
mov
sbb
push
push
cs
test
and
mov
sub
pop
stc
pop
cld
je
dec
popf
push
je
aaa
jb
mov
push
lods
mov
ja
mov
adc
unpckhps
adc
in
xchg
lock
push
test
push
cmp
enter
add
mov
mov
push
sub
or
leave
cmp
cli
popa
fwait
xor
les
imul
adc
ja
jmp
fs
fistps
cmp
and
inc
inc
lea
or
enter
push
push
mov
lods
in
jecxz
lret
pop
in
sahf
stos
adc
daa
insl
popf
inc
mov
jae
sub
mov
je
mov
mov
fisttpll
fidivs
iret
mov
push
sub
pop
mov
inc
fcoml
or
mov
inc
rcll
mov
pop
aaa
mov
add
dec
cmp
xchg
popa
movsl
pop
insl
mov
ja,pt
gs
daa
test
mov
mov
faddp
add
iret
xchg
in
mov
sbb
or
jb
sbb
sbb
jmp
inc
dec
mov
dec
mov
aad
movsl
dec
daa
out
pop
or
out
aaa
lcall
out
out
out
popa
xchg
mov
jmp
pop
pop
sub
insb
push
cmp
bound
loope
int3
movsb
xor
xchg
sub
push
outsl
and
int3
sbb
adc
cld
packssdw
divl
stos
mov
mov
xor
and
clc
push
sub
adc
adc
hlt
push
leave
loop
add
sub
adcl
aaa
fdivr
repz
js
jo
in
jae
pop
sbb
sti
in
push
daa
sahf
xchg
out
xchg
and
divb
into
pop
rcrl
cmpsb
sub
xchg
stos
xchg
mov
push
pop
sbb
lods
addl
add
in
in
mov
mov
mov
push
lods
addr16
lea
enter
mov
call
push
mov
sub
xor
inc
mov
sub
pop
sub
and
popf
mov
dec
mov
mov
dec
pop
mov
sbb
inc
mov
fcmovne
cmp
mov
pop
sub
test
loop
cmp
dec
xor
sub
mov
lods
xchg
pushf
xor
popf
xor
inc
int3
sbb
add
dec
pop
add
ds
push
lods
jp
neg
mov
jecxz
sub
loope
retw
mov
ret
sbb
mov
inc
hlt
dec
inc
xor
and
pushf
dec
push
dec
xor
xorb
mov
mov
call
inc
and
fs
or
lock
imul
hlt
pop
or
push
in
lahf
in
sub
lock
dec
jno
test
sub
test
xor
xor
mov
es
and
clc
jecxz
andb
std
mov
push
push
dec
sub
jo
mov
pop
cmpsb
repz
add
push
mov
popa
sub
adc
out
cmp
std
subb
scas
push
or
xlat
and
sbb
mov
or
mov
pop
fwait
lahf
pop
jp
xor
subb
hlt
lods
scas
daa
sahf
xor
into
movsb
sub
test
idivl
cmp
rorl
test
pusha
leave
in
pusha
pop
add
out
test
jnp
pop
sub
mov
pop
mov
pushl
pop
loope
lahf
mov
push
dec
or
or
mov
aad
hlt
cmpsl
scas
jnp
loopne
pop
fucom
fcomp
push
cld
addr16
test
add
xchg
cs
aas
jno
fmull
sbb
push
xchg
mov
out
inc
mov
sub
sahf
and
outsb
dec
outsb
cmc
stc
mov
stc
ss
cmc
mov
sbb
push
adc
rorb
adc
inc
push
hlt
jg
neg
xlat
sahf
out
not
nop
dec
stos
test
idiv
mov
push
and
int3
in
adc
mov
jne
add
push
add
push
sahf
in
jno
and
imul
cmpsb
push
popa
mov
push
rcrb
aaa
insb
pop
imul
push
jp
mov
sub
add
repnz
enter
sub
sbb
je
bound
mov
push
or
mov
cmpsb
into
cs
mov
inc
push
xor
push
push
xchg
push
lahf
push
js
mov
mov
mov
adcl
mov
pop
sbb
icebp
sbb
add
and
mov
imul
mov
mov
pop
aas
in
adc
add
lcall
push
mov
pop
shr
jl
sbb
inc
sub
out
mov
add
push
or
inc
and
stos
out
ret
fisubrl
pop
and
xchg
push
mov
xor
adc
cwtl
push
mov
and
jne
decb
inc
into
inc
inc
or
and
repnz
fsubr
pop
jno
sbb
clc
jns
push
cmpb
pop
push
xchg
imul
ljmp
pop
sub
sahf
jns
fwait
sbb
ljmp
addr16
inc
arpl
push
add
lock
and
ja
pusha
andb
mov
int3
pop
es
sub
ljmp
mov
pop
call
jge
mov
mov
inc
stos
adc
negl
mov
mov
xchg
jno
icebp
and
sbb
cwtl
or
adc
sub
jbe
xchg
ss
aas
adc
mov
cmp
cltd
push
pop
into
int3
pop
hlt
out
js
sti
stos
inc
mov
cmp
ds
inc
sub
mov
jno
pusha
push
push
in
mov
sbb
mov
mov
sbb
test
dec
inc
cld
sub
add
pop
lods
mov
push
adc
testb
dec
movsb
fdivrl
cld
xlat
jbe
fnop
jecxz
shrb
xor
jmp
jno
popf
push
out
arpl
movl
pushf
mov
push
cmc
mov
xchg
rcl
popf
xchg
or
push
sub
pop
dec
mov
iret
lret
lea
xchg
cmp
inc
mov
inc
or
cwtl
adc
mov
adc
scas
in
mov
jbe
loope
shrl
test
jo
or
pusha
and
das
dec
push
fdivl
nop
xchg
fs
leave
mov
arpl
mov
je
and
jns
push
nop
inc
insb
clc
pop
lods
outsb
mov
mov
or
cmpsl
add
mov
mov
arpl
rcrl
js
and
enter
test
xchg
push
andb
in
mov
outsb
pop
cld
lock
xor
push
mov
test
mov
in
rorb
add
jo
incb
mov
cmp
xor
inc
bound
sub
xchg
roll
pop
ljmp
addl
pop
jns
and
in
push
mov
lods
lds
jno
pop
cmp
pop
adc
jge
mov
adcl
jp
imul
mov
xor
enter
aas
sbb
lret
pop
cli
fs
jbe
scas
iret
adc
or
push
xchg
cli
in
push
inc
mov
aas
popa
push
adc
sub
and
mov
fidivs
int
cli
lock
push
mov
cmp
add
cmc
aad
fnsave
xor
xor
dec
rorl
jb
xchg
mov
test
push
mov
aad
mov
orb
les
xor
fs
dec
mov
pusha
and
out
pop
mov
pop
or
and
sub
adc
mov
inc
mov
inc
sbbb
insl
addr16
test
jne
mov
jne
in
jo
adc
dec
jno
repnz
fadd
and
sbb
mov
mov
sub
hlt
jnp
scas
js
mov
movsl
stc
xor
cltd
es
and
arpl
nop
sahf
notl
in
xchg
les
imul
push
and
adc
stos
push
mov
pop
xor
xchg
push
loope
mov
aad
or
jmp
and
push
add
pop
mov
call
push
nop
mov
inc
fs
mov
dec
mov
push
ret
pop
xor
push
sbb
inc
jge
fistl
int
imul
imul
ret
push
dec
les
inc
adcl
shll
andl
cmp
idivb
sub
sub
rorl
dec
adc
xlat
cmp
test
in
aaa
insb
xor
inc
out
adc
sub
mov
sub
mov
mov
data16
loop
push
or
stc
inc
mov
jp
rolb
les
bound
fildll
dec
push
cmp
mov
mov
jle
enter
cmp
clc
mov
inc
or
jle
or
jg
fstp
sub
pushf
cli
push
or
outsb
cltd
cmpsb
mov
sbb
cmp
mov
lock
push
dec
shll
out
mov
adc
adc
mov
mov
insb
aam
pop
add
mov
add
daa
dec
add
into
aaa
push
adc
sahf
mov
jne
bound
sbb
jns
mov
data16
je
pop
jo
fisubrs
sti
outsl
push
mov
in
dec
movsb
lock
sarb
inc
loopne
and
arpl
popf
lahf
hlt
fimuls
mov
pusha
pop
jl
mov
ret
pop
mov
xchg
sarl
sub
imul
nop
les
enter
push
imul
sbb
cmc
pop
xchg
adc
mov
repnz
cmp
repz
je
adc
push
daa
push
add
aas
jmp
shld
jne
inc
inc
add
mov
and
pop
addr16
mov
popf
fdivs
ret
push
dec
inc
pop
or
xlat
push
sub
and
push
cmp
hlt
jns
pushf
inc
les
pop
xor
add
cwtl
mov
stos
pop
shrl
pop
div
sti
and
add
xor
notl
pop
insb
add
out
xor
fdivp
test
icebp
push
es
mov
ljmp
adc
mov
cmp
dec
repnz
data16
add
fistps
or
sub
test
insl
jmp
inc
sbb
fs
subb
push
out
sbb
pop
sarb
xor
or
mov
insl
adc
insb
adc
cmc
pop
addr16
mov
sub
jb
mov
rolb
shl
repnz
outsl
bound
cmp
pop
jne
lret
das
sbb
arpl
inc
mov
outsb
fistpl
mov
test
es
enter
mov
sub
cmp
jbe
jl
lea
pop
push
pop
jnp
cmp
loope
push
movsl
bound
test
mov
lret
and
and
add
jnp
es
into
sub
je
jl
cmp
test
push
insl
mov
in
stc
mov
xor
cld
pop
mov
cmp
jle
push
std
out
jecxz
loopne
popf
jae
out
lcall
pop
add
jno
hlt
fcoml
sub
sbb
repnz
call
sub
mov
mov
sahf
cmp
jmp
outsb
ja
lret
in
test
cmc
jns
stc
in
mov
insl
and
sar
xchg
notl
xchg
jbe
sets
push
aad
pop
int3
mov
cmp
in
fistpll
jmp
shrb
and
cmp
inc
or
xchg
fidivrs
out
in
lock
sub
jae
aaa
cmpb
or
iret
xlat
jbe
mov
sbb
pop
out
inc
sbb
push
fwait
loopne
ja
pop
dec
add
adcb
cs
xchg
mov
out
insb
es
imul
or
testb
pop
es
sbb
ror
stos
in
mov
lods
imul
inc
inc
shll
jbe
pop
dec
inc
std
cmp
adc
sbb
jb
cmp
pop
pop
add
push
push
xchg
lods
repz
push
int
into
pause
dec
fdivl
stos
in
xchg
jne
cmc
or
sti
push
aam
pop
cmp
movsb
repz
jecxz
jne
or
push
pop
in
pop
movsb
test
lcall
and
inc
sbb
dec
push
xchg
call
fwait
mov
mov
outsl
jne
out
mov
add
ss
push
loop
xor
jg
out
nop
add
dec
jnp
xlat
sbb
movsl
xchg
or
and
mov
sbb
mov
push
es
mov
ja
lret
mov
enter
sub
push
repz
adc
mov
int
xchg
mov
jae
mov
pusha
push
jns
xchg
std
xchg
jle
fldl
rolb
in
and
js
push
ret
std
adc
xchg
ror
mov
out
ljmp
jge
sbb
in
ljmp
test
popa
xchg
out
out
mov
shrl
cmp
pop
imul
and
cmc
xchg
js,pn
fs
je
lods
lds
enter
popa
test
jno
mov
pop
int
out
insb
or
adc
stos
daa
sub
movsb
test
fsubs
or
gs
sub
xchg
enter
bound
jnp
adc
stc
addr16
dec
xor
jnp
and
repz
je
sarb
sbb
cvtdq2ps
je
add
stc
mov
fwait
ljmp
mov
push
rclb
stos
jno
outsl
jp
add
lods
hlt
pusha
cwtl
mov
jmp
ret
add
jg
gs
or
pop
jle
push
inc
lret
pop
lods
push
popa
or
lcall
cmp
mov
inc
icebp
sahf
and
cmp
push
les
push
popf
inc
cmp
out
rcrl
and
clc
cld
test
pop
mov
add
or
cs
adc
sub
xor
aad
cmp
xchg
pop
jp
imul
ja
dec
fistps
add
lods
call
out
out
sahf
mov
repz
xor
in
xchg
loopne
inc
xchg
lock
mov
adc
ret
mov
popf
loopne
xor
add
add
shrb
xor
es
movsl
iret
add
test
mov
jecxz
es
push
sbb
and
fwait
sub
mov
mov
mov
cmp
loope
out
sarb
xchg
std
mov
clc
or
mov
cmp
int
addr16
test
push
movsb
ret
cwtl
dec
frstor
mov
sbb
jo
std
xchg
inc
dec
dec
fistpl
pusha
std
fnstsw
jo
into
mov
movsb
cmp
or
and
mov
in
aaa
popf
jae
fadds
fiaddl
ds
or
imul
push
add
ljmp
inc
cmpsb
jno
dec
std
cmc
std
movsl
fwait
adc
and
cmp
call
out
mov
push
or
dec
sub
pop
xor
jle
inc
and
pop
rolb
mov
dec
aam
ja
mov
cmp
test
xor
dec
in
or
pop
out
jmp
inc
dec
daa
dec
sbb
pusha
mov
aad
stos
popa
sbb
inc
mov
jbe
mov
jg
inc
mov
lea
mov
xchg
xor
aad
inc
sbb
inc
int
mov
jns
mov
sub
xor
jbe
orl
xchg
cmp
xchg
lcall
lret
add
jecxz
jne
scas
fistpl
arpl
xchg
push
mov
mov
aaa
pop
lahf
xchg
js
call
sbb
dec
loope
int
iret
xor
pop
ret
inc
ficoml
lock
add
cmp
lods
xchg
mov
cmp
mov
shrb
imul
sahf
fneni(8087
outsl
movsb
and
out
mov
stos
pop
add
xchg
sub
cwtl
dec
test
loop
jno
mov
icebp
test
stc
pop
cmp
add
xchg
sahf
rorl
mov
pop
cmp
jne
sbb
or
int
dec
inc
pop
insl
lock
sub
cmp
mov
pop
in
fidivl
cmc
mov
mov
into
fs
mov
mov
lock
mov
cmp
and
mov
mov
sub
pushl
sbb
popa
sbb
xlat
add
aas
das
and
mov
xchg
insl
cmpsl
mov
shrl
cmp
jg
mov
fdivl
ret
faddl
add
cmp
aam
cmp
xchg
mov
fidivs
repnz
or
enter
add
arpl
and
ss
or
add
or
push
lret
stc
push
xor
mov
test
jl
ror
mov
pop
fidivs
icebp
int3
cmp
mov
cmpsb
mov
loope
pushf
jg
sbb
dec
mov
cli
cli
mov
jmp
in
jmp
outsl
inc
cmp
lea
cmp
aaa
pop
jp
sub
or
int
fmuls
push
or
dec
inc
fnstcw
cld
add
jg
fnstsw
xlat
ror
pop
ds
lcall
xor
aad
fcmovb
ret
scas
lret
call
sti
lcall
xchg
and
pop
push
cmp
jae
lds
jbe
nop
test
imul
es
imul
bound
in
scas
pusha
clc
js
shll
rclb
fs
mov
push
pop
pop
jmp
outsb
lret
mov
sbb
cmp
sbb
addl
push
sarl
and
ficoms
xchg
out
jmp
add
shlb
adc
adc
and
and
jo
or
xlat
vmovupd
xchg
ljmp
sub
ss
or
push
mov
push
xchg
lret
adc
dec
sbb
pushf
sub
bound
add
leave
sub
cmp
in
or
aas
pop
jo
lods
repnz
pop
mov
jnp
lret
xchg
and
adc
cmc
mov
inc
movsb
xor
mov
ret
mov
cltd
fstpt
sbb
js
imul
jge
cs
test
xorl
fiaddl
jns
xor
jg
push
not
cli
sub
dec
imul
sbb
pop
loopne
outsb
daa
lds
adc
adc
sarl
mov
pop
inc
mov
loope
outsb
movsl
dec
icebp
xchg
cmp
out
aad
or
push
mov
shrl
cmp
pusha
fstpt
xor
dec
fdivl
or
jmp
scas
xchg
je
jg
imul
adcl
lahf
shll
lret
jl
xor
mov
push
add
jnp
push
cwtl
adc
iret
ljmp
stos
pop
lahf
dec
xchg
adc
push
stc
ljmp
mov
inc
pop
cmp
pandn
lret
mov
pop
xchg
mov
and
adc
mov
sahf
test
nop
jp
mov
je
lock
push
inc
pop
or
push
pop
cltd
mov
cld
in
fidivrs
xchg
test
addr16
loope
jo
and
in
flds
xlat
lods
pusha
push
mov
jl
jb
fnstsw
hlt
mov
mov
fists
jns
ja
ret
jo
test
call
inc
sar
pop
pop
sub
xchg
shll
push
sbb
test
dec
fidivs
cli
decl
jo
jne
out
xor
xchg
pop
xchg
adc
test
mov
pop
push
jb
movsb
movsl
sti
mov
les
cli
sahf
mov
cmp
cwtl
dec
dec
lret
lock
mov
out
pop
mov
xchg
adc
fcompl
xor
aas
hlt
leave
xor
jge
mov
jl
aam
adc
xchg
movl
pusha
inc
and
outsb
dec
fadds
jge
jae
add
jmp
add
sbb
cmpl
dec
and
sbb
dec
in
sub
inc
mov
cmpsb
jg
leave
test
cs
add
pop
cmp
cmp
mov
aas
pop
daa
or
dec
outsb
loop
cmp
in
push
mov
and
aas
cld
imulb
pop
adc
jo
mov
xor
xor
fsin
stos
lds
cs
pop
or
pop
int3
or
out
lds
nop
mov
cwtl
mov
mov
cmp
inc
or
fadds
dec
movsl
or
fwait
xchg
fidivl
adc
dec
je
mov
mov
mov
pop
fsubrl
les
shr
mov
pop
into
mov
jmp
data16
sbb
lods
pop
mov
mov
mov
in
jge
mov
and
pushf
mov
jl
dec
mov
jl
dec
addb
rolb
cs
add
xchg
mov
test
je
add
outsl
cmp
in
idiv
incl
push
leave
cli
inc
js
sub
addr16
xchg
rol
out
mov
or
mov
dec
dec
or
xchg
or
mov
cmp
xchg
or
xchg
cld
xchg
mov
cltd
mov
nop
gs
cmp
xchg
aam
jnp
lret
push
repnz
xchg
arpl
mov
xor
pop
inc
ficompl
insl
jnp
movsb
pop
inc
add
jo
dec
sub
mov
jl
inc
add
out
add
outsl
mov
iret
mov
sar
ret
dec
or
sub
add
cltd
xchg
inc
adc
cmp
rolb
or
adc
sbb
cmpsb
repnz
sti
movsl
jae
jp
daa
push
and
dec
xchg
jle
lods
repz
mov
mov
ret
mov
fiadds
out
mov
mov
es
mov
mov
inc
add
sbb
dec
mov
scas
fbstp
lock
xor
mov
cmpsl
jb
xchg
es
loop
xchg
mov
and
cmp
ret
dec
pop
jae
inc
inc
or
pushf
inc
xchg
sbb
xchg
into
sub
cwtl
pusha
lea
push
scas
imul
loop
in
arpl
jb
xchg
sahf
inc
aam
outsl
jecxz
nop
adc
test
xchg
pop
and
imulb
getsec
das
insl
insb
test
pop
sub
cmp
xchg
addr16
mov
enter
jmp
sti
mov
inc
adc
sbb
jae
dec
jo
clc
mov
ret
push
cmc
gs
sbb
imul
mov
xchg
xchg
fsin
add
clc
pop
lret
dec
push
jo
in
mov
xor
stos
inc
mov
sbb
sbb
jmp
fsubrl
xchg
cmc
pop
enter
out
add
in
pushf
insb
sbb
js
aaa
rcrb
mov
mov
adc
insl
mov
dec
dec
lock
scas
jo
into
insb
jmp
add
imul
into
adc
and
push
scas
add
sub
sarb
cmpsb
clc
and
test
out
push
std
mov
sti
jne
lods
into
aas
outsl
ljmp
xor
sub
popa
stos
clc
dec
xchg
lahf
pushf
pmulhw
pop
add
outsb
sbb
jle
lods
xor
sbb
sub
xor
add
je
mov
mov
mov
movsb
cmp
pusha
pusha
jmp
adc
icebp
gs
je
in
in
mov
push
and
or
mov
les
test
mov
xchg
or
les
fwait
mov
outsb
stc
js
hlt
mov
and
cmc
rcrb
cmp
enter
dec
dec
cld
and
fstpt
fildl
mov
sub
xchg
jno
and
mov
mov
icebp
inc
sub
add
dec
sti
mov
addl
xchg
or
les
mov
jmp
or
xor
hlt
adc
sbb
and
xchg
mov
sbb
popf
lods
xchg
sahf
mov
enter
xchg
push
push
xlat
mov
xchg
mov
jecxz
aaa
dec
xor
and
inc
popa
fimuls
das
push
enter
pop
lret
pop
mov
cmp
mov
vcvtusi2ss
shl
cmp
push
pop
push
imul
insl
icebp
outsb
push
cmp
cmp
add
mov
xchg
xchg
cmp
mov
hlt
movsb
pushf
mov
sub
xchg
lea
jo
xchg
sub
repz
test
bound
dec
enter
lcall
push
loop
cmp
pushf
bound
or
jecxz
inc
cld
or
mov
mov
and
jb
in
jl
jle
jbe
fs
icebp
mov
push
push
or
in
or
dec
mov
test
outsl
mov
sbb
xchg
pop
pop
sarl
push
and
pop
push
popa
and
hlt
mov
outsb
iret
add
mov
and
jne
xchg
adc
dec
negb
stos
call
jbe
push
jg
mov
xchg
ljmp
nop
sbb
sbb
and
rclb
loop
dec
mov
pusha
xor
sbb
stos
pop
movb
and
icebp
sub
push
pushf
push
or
xchg
pop
lcall
fcoml
cld
hlt
out
and
dec
xchg
cld
jge
jecxz
mov
pop
popa
inc
sbb
pop
mov
jae
ss
lcall
lods
test
aam
roll
scas
hlt
cmpsl
imul
fs
xchg
xor
scas
rcrl
or
pusha
imul
cmpb
gs
jbe
loope
cmpsl
std
xor
adc
xchg
outsb
sub
outsl
sbb
jp
xor
imul
enter
pop
pushf
jg
test
mov
lock
lods
imul
lods
push
outsb
cltd
lods
or
cwtl
push
add
xor
jns
jp
dec
lcall
xor
rcrb
lahf
aam
pop
xchg
orl
pop
sub
psubq
es
mov
xor
sub
add
adc
xchg
dec
cmp
inc
inc
pop
sub
xor
jle
hlt
sbb
pop
sbb
or
sti
scas
popa
xor
pop
fcmovbe
push
in
inc
jo
lods
push
jb
sbb
xor
inc
inc
jp
pop
loopne
jg
testb
xorl
or
cs
lret
mov
cmp
data16
mov
gs
movsb
outsb
sbb
dec
gs
sti
es
popf
pop
rcr
add
push
push
lds
dec
pop
cmpsl
rolb
or
lahf
add
and
add
shl
mov
std
and
sbb
rcl
scas
cwtl
fstpt
jge
mov
and
jbe
add
pop
ljmp
mov
jl
pop
jo
ret
mov
cmpsb
jbe
mov
push
dec
dec
adc
jmp
fdivrs
iret
addl
ss
and
shlb
sub
mov
adcl
mov
sahf
out
sub
jg
cs
test
in
daa
sub
jbe
sarb
jo,pt
jb
jae
test
inc
add
mov
push
sbb
sbb
inc
sti
sbb
rclb
fst
xor
cmpsb
jnp
adc
loope
add
cmp
or
or
mov
mov
in
sbb
popf
pop
xchg
add
inc
test
repz
jbe
test
je
inc
cmc
out
pop
iret
mov
imul
dec
pop
adc
and
dec
adc
popa
mov
mov
stc
scas
or
ret
sbb
cltd
scas
add
sub
xor
jmp
fwait
test
test
xchg
push
enter
dec
into
lahf
push
mov
into
xor
insb
outsl
ja
jnp
int
pop
lds
add
jmp
xor
in
fucomip
cmpsl
loope
jne
pop
xchg
dec
cmp
inc
popa
fisttpll
or
ret
push
sahf
add
fdiv
dec
cmc
bound
aam
and
call
fdivl
bndldx
outsl
dec
int
push
jecxz
add
pop
nop
or
dec
or
fsts
mov
movsl
sub
mov
outsb
inc
dec
add
or
and
pop
stos
test
xlat
sub
std
and
out
adc
std
lret
xchg
dec
pop
push
shl
inc
test
add
push
lahf
cmp
pop
fwait
push
cmpsb
or
jae
idivl
dec
push
adc
enter
inc
nop
sub
push
fbld
mov
cwtl
fwait
lcall
dec
test
in
insl
cmp
hlt
or
ljmp
fidivrl
test
ds
pop
jbe
sbb
pop
xchg
or
lcall
mov
push
mov
sub
dec
push
or
popa
imul
cltd
jnp
lcall
jo
aad
out
inc
jns
fldlg2
xchg
pusha
dec
cmpsl
mov
fldt
and
repz
mov
into
push
mov
icebp
jl
lods
or
xor
bnd
ss
sbb
bound
cmpsl
mul
push
xchg
mov
mov
inc
jle
rep
je
sbb
shll
cmp
pop
cmpl
lahf
insl
lcall
movb
sub
test
mov
mov
lods
lret
icebp
xchg
loope
data16
mov
and
push
or
mov
hlt
sahf
adc
push
cli
jge
rorb
cmp
lcall
pop
mov
jmp
pop
ret
pop
adc
subb
and
mov
fistpl
ret
lret
iret
inc
push
xlat
test
lret
testb
and
sarb
es
xor
cld
pop
iret
lods
dec
push
jne
sub
vpaddd
pop
cwtl
in
lds
dec
sbb
jno
jge
cld
mov
aam
adc
dec
lcall
sub
stos
mov
lds
and
mov
faddl
lock
mov
les
ds
shrb
inc
push
mov
addr16
push
lods
pop
mov
sahf
jg
and
loop
popa
outsb
sub
rcll
lahf
sbb
mov
addr16
jp
sbb
push
and
jl
cld
into
inc
xor
gs
das
ret
inc
out
bound
and
pop
mov
fs
mov
dec
imull
cmp
repnz
mov
stos
xchg
sbb
mov
lods
xlat
mov
or
jnp
rcll
shll
es
je
xchg
std
stos
sbb
pushf
push
es
inc
mov
call
mov
outsl
movsw
loopne
sbb
pop
dec
mov
push
mov
xor
sub
add
imul
sbb
pop
call
shr
add
stc
cltd
outsl
lods
sbb
loop
add
sti
xlat
jbe
mov
pop
lahf
mov
xchg
shll
insb
leave
adc
jge
push
pop
xchg
cwtl
sbb
sub
das
or
mov
shlb
xchg
das
dec
push
add
pusha
sub
sub
pop
addr16
jl
cmc
orb
inc
xor
or
in
and
pop
js
jle
fcoml
stos
lret
sub
jnp
mov
ja
popa
mov
and
inc
roll
lds
jp
lock
es
sub
pop
stos
cmp
adc
mov
pop
dec
js
ljmp
dec
inc
adc
xchg
dec
add
out
push
out
icebp
pop
mov
sahf
sub
cmp
arpl
and
sbb
aad
bswap
sub
lret
in
in
pop
cltd
repnz
ret
lret
js
add
mov
push
push
insl
fsubp
sub
xor
ja
shll
cwtl
dec
jnp
lret
jecxz
sub
jle
mov
fnstsw
and
jne
jo
xchg
sbb
jg
orl
sti
cmp
mov
inc
mov
cmpsb
push
jg
lock
xchg
arpl
cmpsb
ss
adc
xchg
and
dec
jge
mov
add
sbb
fwait
cli
rorb
cmc
adc
mov
pop
mov
mov
dec
mov
and
gs
jae
jo
fucom
imul
xor
lcall
mov
and
sbb
dec
das
xor
xchg
test
dec
das
sti
jns
loop
inc
adc
jp
rcrl
push
xchg
inc
dec
mov
add
cli
fdivrl
mov
jl
dec
mov
mov
mov
repz
ss
xorb
insl
loopne
mov
adc
fbld
jmp
lret
insb
xor
push
cmc
movsl
xchg
push
dec
mov
test
lcall
add
inc
mov
adc
nop
lds
jge
xor
fsubp
fcmovbe
and
mov
idivb
stos
fisubl
inc
adc
mov
call
nop
movsl
fs
push
movsl
or
mov
inc
pop
sub
movsb
fimuls
adc
jne
int3
xchg
sti
jecxz
add
mov
mov
dec
rorl
mov
fwait
dec
mov
scas
jo
lods
fwait
sbb
mov
sahf
inc
pop
pop
xchg
fdivr
ljmp
clc
xchg
rcl
outsl
mov
fcomi
into
aas
mov
xacquire
jp
popf
adc
mov
push
sbb
fstl
frndint
cmpb
push
jle
shr
mov
rolb
aam
xchg
mov
push
fwait
push
pop
xor
sbb
ds
cmpsl
xchg
xchg
loopw
daa
cmpsl
in
icebp
jae
dec
jo
out
aaa
mov
jmp
mov
add
xor
enter
inc
imul
pop
mov
dec
lret
sbb
pop
mov
insb
mov
test
repnz
fdivrs
in
out
xorb
xchg
push
outsb
arpl
shll
aad
ljmp
jae
in
or
inc
call
mov
clc
adc
jae
sahf
or
mov
inc
mov
inc
cmp
pusha
mov
add
cs
in
mov
in
or
dec
ljmp
sbb
bound
cmp
les
std
pop
out
cmpsb
mov
mov
rcll
pop
jb
mov
xchg
adc
outsl
aaa
pop
or
or
xor
jle
xchg
adc
fwait
inc
les
xchg
out
mov
shl
movmskps
lods
shll
add
test
lcall
sbbb
sub
lods
or
cli
dec
xor
cmp
pop
dec
push
cli
inc
cli
cmp
gs
jno
cmp
add
aaa
ljmp
out
sbb
sub
fnstsw
xor
aas
xor
inc
sbb
add
mov
cwtl
xor
dec
dec
adc
and
dec
cmpsl
and
mov
mov
or
cltd
pop
sbb
stc
sbb
or
fidivrs
push
and
es
pop
scas
add
xor
subb
outsl
icebp
out
mov
ja
sahf
add
out
repz
pop
push
push
dec
cmpsl
pop
or
shrl
jne
ss
aaa
cmpsl
push
push
jmp
cs
push
int3
pop
mov
mov
fldcw
insb
daa
imul
test
int3
add
xchg
cmp
sbb
xor
stos
xchg
lods
sub
dec
fistpl
xchg
jne
imul
push
int3
jle
dec
and
push
sub
pop
movsl
mov
sub
scas
orb
pop
ss
lahf
mov
push
push
imul
ret
cmp
mov
or
outsl
jo
loop
pop
jl
adc
cld
mov
pop
in
mov
push
sbb
stos
adc
push
popf
inc
fcoml
jns
mov
dec
pusha
xchg
jecxz
jb
push
daa
push
popcnt
cmpsb
jg
shlb
sbb
pop
add
xor
mov
push
imul
push
aad
aaa
popf
jno
popa
mov
mov
push
pop
xor
ret
insl
xchg
test
int
ljmp
stc
xchg
xchg
adc
fimuls
je
adc
mov
std
cli
pusha
lds
rcl
fwait
cmp
arpl
and
scas
mov
bound
popl
addl
push
lods
and
adc
pop
cwtl
mov
loopne
movl
popf
xchg
lock
adc
stc
add
xor
xor
jae
int3
enter
or
jmp
or
inc
add
mov
jnp
imul
jb
mov
mov
pop
mov
pop
xchg
xor
mov
ljmp
hlt
aaa
nop
dec
out
std
fldl
xchg
lcall
inc
adc
dec
push
andb
lret
xchg
xor
or
jbe
sub
pop
sub
inc
out
add
js
or
push
push
add
mov
les
call
mov
adc
sbb
fidivs
aam
add
je
push
jnp
lret
imul
out
into
xchg
rcrl
mov
js
sbb
rcrl
shrb
fidivrs
jp
xchg
enter
push
sbb
lods
fsub
test
neg
je
scas
add
int
outsb
hlt
daa
clc
sbb
add
bound
imul
mov
push
rorl
or
or
push
lock
int3
lock
ss
call
mov
jge
push
mov
pop
lret
shl
arpl
inc
ja
subb
cs
mov
sarl
pop
mov
and
mov
cmp
xor
push
jp
aas
cmpsb
lcall
push
ja
xor
jbe
shlb
aas
rcll
push
adc
arpl
lods
ja
push
jo
jb
scas
insb
movsb
rorl
icebp
ds
inc
mov
loop
and
rorb
shrb
push
out
pop
lock
mov
stos
hlt
das
scas
arpl
and
push
aam
andl
sahf
pop
jle
xchg
mov
push
cmpsl
and
imul
lret
add
cmc
out
inc
lea
repnz
dec
scas
test
jns
xor
test
pop
outsl
movsb
and
xchg
push
sbb
ret
jecxz
push
repz
rorb
enter
mov
int3
add
addr16
xchg
dec
sbb
mov
lret
push
dec
lretw
or
out
mov
fwait
and
mov
test
pop
cmpsl
mov
fdivrl
inc
pop
adc
sbb
or
cmp
mov
cmp
mov
push
cmp
ret
adc
or
push
and
inc
enter
inc
iret
jle
xchg
inc
aad
xchg
or
sbb
aad
lret
outsl
and
pop
adc
xor
or
xchg
pop
out
xchg
jmp
push
xor
add
or
lcall
cmp
punpckldq
loope
pop
inc
fstpt
and
into
loop
xchg
inc
mov
in
fcmovu
fdivl
pushw
out
ret
mov
and
push
lret
cmp
js
cli
dec
inc
sbb
jle
xchg
loope
aam
mov
jnp
fistpll
pop
add
mov
lods
repnz
dec
jo
push
in
mov
xchg
push
cltd
adc
test
cmc
rorl
in
sti
sub
lods
pop
mov
lret
out
daa
push
mov
adc
jae
je
paddsb
sbb
aad
icebp
nop
loopne
es
iret
pop
mov
fdivrp
or
push
jge
jnp
push
fsubs
and
add
aam
dec
cli
sbb
add
test
lret
insl
dec
dec
dec
cmc
and
dec
xchg
loop
mov
mov
push
mov
gs
inc
test
mov
xchg
ljmp
adc
ror
push
dec
push
stos
stos
sub
out
stos
add
cmp
cmp
mov
mov
lods
jns
jne
or
jne
subl
popa
pop
push
pushf
loop
jl
fsubl
cmp
rep
jg
in
or
dec
cmp
sahf
mov
push
push
push
sub
dec
or
mov
sets
scas
mov
and
aaa
lahf
mov
xor
fldenv
push
adc
pusha
sbb
scas
decb
jecxz
ja
xor
fsubl
call
jnp
push
push
incb
repz
pop
outsl
inc
xor
popl
aas
mov
or
mov
mov
inc
repz
das
jp
jae
mov
cmpsb
mov
sub
es
mov
je
and
roll
icebp
mov
in
out
sbb
adc
std
divl
sub
inc
and
or
cmp
test
enter
jno
mov
add
pop
movsl
jb
add
mov
jmp
mov
leave
cmp
sbb
fs
idivl
hlt
pop
repz
adcb
and
cltd
mov
jmp
and
cmp
mov
lea
in
sub
popf
xor
pop
nop
push
lods
jb
push
sahf
sbb
movsb
in
push
jp
stc
arpl
and
mov
dec
lock
mov
cmpsl
in
ljmp
cli
in
dec
adc
scas
pop
lcall
mov
mov
and
xchg
nop
jae
lds
or
dec
insb
ret
jle
scas
push
sbb
adc
dec
ret
mov
in
push
cmp
sub
sub
inc
cmp
pop
add
cmpsb
shlb
clc
or
push
and
fs
inc
aad
jle
add
rcrb
vorps
movsl
or
icebp
inc
sub
and
mov
push
inc
sub
xchg
and
mov
mov
push
pop
movsl
mov
or
mov
test
fnsave
or
jno
mov
movsl
mov
push
insb
mov
dec
sbb
inc
js
or
adc
xor
ret
push
gs
leave
cmpsb
and
movsb
lock
mov
push
jle
cmp
xchg
mov
js
ficoms
xorl
les
cmc
shl
jb
aas
push
arpl
insb
lahf
sbb
aad
xor
xor
repz
je
call
cmpsb
and
dec
imul
and
adc
add
inc
ss
push
ss
jecxz
mov
cmpsl
jge
or
mov
aam
inc
ficoms
sbb
xor
and
mov
inc
mov
cmp
popa
adc
push
stc
std
call
dec
pop
and
pusha
ds
ror
cli
in
sbb
lock
mov
and
and
mov
mov
cwtl
bound
pushf
pop
mov
popa
xchg
xchg
test
xchg
dec
lods
in
mov
pop
jae
xchg
dec
mov
lods
jno
xor
and
inc
push
add
loop
add
cltd
xor
mov
cli
idivb
mov
dec
cmc
inc
and
int3
sub
inc
mov
or
rcrb
inc
pusha
mov
sub
sti
fdecstp
fcmovu
push
cltd
xchg
jl
or
out
cmpsb
pushf
repnz
add
jae
pushf
stos
push
pop
sub
mov
lea
ljmp
mov
insb
mov
pop
stos
mov
jp
xor
shll
xchg
mov
xchg
outsl
lret
loope
pop
stos
je
cwtl
lds
ret
fwait
xor
ss
sahf
mov
add
and
xor
sub
into
xchg
jno
mov
rorb
mov
xor
mov
pop
cmp
gs
xchg
lods
cmp
les
lahf
and
dec
sbb
adc
lds
popf
jno
lahf
dec
or
cmp
jge
lret
or
mov
add
aas
test
lods
or
or
xchg
mov
jecxz
inc
jns
loopne
push
pop
cs
aaa
cli
jp
xchg
xor
sub
rolb
enter
and
sbb
mov
mov
addl
mov
out
jns
xchg
xchg
xorb
leave
jmp
int3
push
add
mov
and
fcmovnu
int
jmp
add
jecxz
pop
daa
jp
xchg
popf
jmp
es
int3
xchg
pop
push
mov
add
jp
pop
lock
cmp
pop
in
mov
adc
mov
dec
test
push
mov
decl
mov
add
leave
fsubl
mov
jg
xor
sbb
aas
test
lea
rcl
cmp
cmpl
sahf
movsl
scas
arpl
shlb
xor
mov
movsb
rcrb
out
inc
jmp
push
imul
sub
lods
int3
adc
aas
test
insl
jnp
faddl
or
mov
dec
movsb
test
mov
adc
jp
loope
pop
adc
jg
adc
cmp
jmp
cwtl
mov
dec
js
add
cmp
sbb
mov
js
movsl
xlat
cli
mov
fucomip
jne
cs
outsb
lahf
js
fucomi
mov
ds
inc
out
mov
jns
dec
pop
mov
cli
lcall
sbb
cmc
inc
pop
inc
xor
subb
pop
ret
cs
mov
adc
mov
daa
outsl
jno
sbb
push
cwtl
xor
sub
sub
mov
dec
mov
and
fisttpll
sahf
inc
sbb
xlat
jbe
cmpsl
or
xchg
jge
insl
in
aam
pop
xor
mov
sub
cmp
mov
lahf
push
icebp
lcall
jge
adc
add
cltd
push
ret
aas
dec
xchg
lcall
sar
xchg
out
in
sbb
jne
mov
inc
push
fs
lret
jae
ljmp
push
pop
mov
jo
inc
push
leave
dec
inc
mov
sbb
or
or
dec
jle
lcall
push
js
das
js
popf
and
push
idivl
push
pop
fs
mov
xchg
mov
fcomp
rclb
test
mov
dec
test
and
lret
add
test
lret
xor
into
xchg
or
negl
push
leave
mov
or
nop
cmpsl
add
sub
xchg
mov
fildll
out
andl
addr16
mov
pop
and
leave
mov
cmp
sbb
icebp
dec
rorb
xchg
jl
mov
ret
push
out
imul
subl
arpl
gs
inc
pop
mov
mov
xor
fnsave
popa
mov
sub
ljmp
mov
push
arpl
mov
pop
xlat
flds
push
jb
cmpsb
popa
dec
xor
mov
fildll
aad
fsubr
pop
push
inc
in
adc
inc
cmp
sbb
in
cmp
mov
mov
outsl
and
xor
cltd
mulb
ljmp
jl
pop
inc
and
pop
addb
mov
sbb
dec
fistl
pop
in
dec
push
fwait
or
lret
je
xchg
jecxz
xchg
sbb
loop
cmovg
nop
xor
dec
orl
pushf
jmp
cs
lock
imul
adc
stc
mov
mov
jle
xor
in
ret
xor
movsl
pushf
popf
add
out
sbb
shlb
imul
bound
sbb
or
dec
and
inc
lods
add
inc
inc
mov
out
movsb
in
cs
xor
lret
fildl
xor
mov
xchg
outsl
jb
pop
movsb
arpl
xor
jo
sahf
in
and
cmc
pop
sub
or
mov
jo
fldenv
enter
mov
imul
xor
jae
in
cmpsb
dec
jle
and
or
xchg
pop
cmc
mov
push
mov
mov
gs
dec
and
xor
aaa
test
or
mov
rcl
pop
in
aad
sbb
push
loope
shl
jecxz
nop
jmp
push
pop
push
lods
mov
outsl
push
sbb
das
enter
out
js
lahf
dec
pop
pop
sarb
push
aad
lods
inc
sub
movsl
in
mov
dec
mov
sbb
lds
dec
sbbl
push
fs
mov
lock
mov
sub
shrb
mov
lahf
test
into
faddl
xchg
popa
pop
in
inc
push
fwait
sbb
pop
cld
addb
cmp
pop
xor
in
out
mov
dec
mov
icebp
lods
mov
or
shrl
ficoml
and
popa
mov
fistpll
mov
cmp
mov
sbb
jmp
ret
sti
mov
repz
cmp
push
pop
daa
mov
adc
sub
out
mov
push
sbb
adc
push
push
push
ljmp
subb
inc
cmp
cmp
scas
and
loop
add
push
inc
and
xchg
mov
mov
data16
sub
dec
icebp
xor
movsb
jge
add
jb
repz
sbb
insl
iret
inc
jp
je
arpl
adc
xchg
sub
mov
push
inc
call
sub
push
dec
pop
je
push
roll
aas
and
xchg
pop
into
in
in
push
mov
fdivs
lret
fstl
lcall
test
lret
fsubrs
xchg
nop
rol
pop
xlat
or
push
sbb
lock
clc
popa
pop
in
daa
sahf
fcomp
imul
sub
aam
and
add
gs
movsb
mov
cmp
cmp
jo
ficompl
scas
inc
xor
fidivrs
dec
cmp
cmc
jb
in
jns
in
or
in
cmp
push
cwtl
xor
enter
mov
pushf
mov
or
or
dec
cmp
or
imul
xor
mov
notb
sub
jo
incb
sub
mov
push
xor
adc
pop
dec
outsb
xor
mov
mov
lods
test
push
test
sbb
and
push
call
push
cmp
cmpsb
inc
gs
dec
stc
cmp
push
ss
jae
sub
mov
mov
and
pop
cmp
psubb
out
sub
aas
clc
imul
xor
mov
pop
jae
adc
shrb
fdivs
rorb
into
cli
dec
push
dec
movsl
mov
push
dec
inc
mov
mov
push
add
pop
push
jg
subl
mov
out
and
xchg
inc
cli
test
cltd
add
or
mov
sub
out
es
pop
daa
jb
cmp
adc
imul
sub
popl
lahf
mov
aaa
loope
mov
aas
xlat
pop
fadd
xchg
cmp
pop
mov
movsb
jle
mov
dec
subl
adc
nop
cld
das
jo
ds
clc
inc
sub
mov
sbb
adc
or
into
aas
dec
pop
loope
adc
stc
mov
fdiv
sbb
shrb
movsb
mov
push
std
cld
xchg
push
in
stc
cmpb
xor
and
mov
idivb
lods
add
loop
mov
addr16
in
jecxz
cmp
fnstcw
sub
in
gs
cld
jecxz
js
loop
pop
dec
mov
adc
mov
leave
jbe
jmp
sub
fsubs
pop
pop
cmp
ljmp
push
cmp
add
jecxz
add
mov
sbb
js
rclb
and
mov
test
nop
mov
into
dec
lds
sub
ja
mov
mov
push
mov
scas
fdivr
xchg
test
sub
je
or
cs
jmp
cmp
fwait
lds
mov
hlt
shll
les
out
sub
loop
xchg
and
movsl
cmp
out
int3
mov
aaa
or
je
dec
add
xchg
pop
jge
xlat
mov
sbb
or
dec
cmpsb
jae
push
outsl
adc
repnz
dec
popf
xor
xchg
dec
or
sub
stos
xor
sbb
jae
xchg
scas
dec
sbb
mov
mov
outsl
test
fucomp
js
pop
add
jp
fadd
lahf
xchg
imul
sbb
xchg
movsb
adcl
xor
xchg
movl
and
in
bound
movsl
fsts
add
jbe
mov
pop
addb
xchg
add
ret
sub
push
push
and
mov
mov
xor
xor
adc
mov
push
fnstenv
movsb
movsl
push
testb
mov
pop
mov
scas
clc
sbb
inc
andb
repnz
repnz
ffreep
inc
or
loopne
imul
xlat
cmp
aad
pop
jle
in
iret
daa
jo
cmp
or
fdivs
ja
sub
sub
movsl
mov
insb
jg
ja
jno
test
lods
cld
pop
lds
pushf
je
mov
mov
test
das
scas
ficompl
aad
mov
mov
es
adc
scas
xor
jno
jle
movsb
pop
mov
or
dec
hlt
int3
loopne
ret
in
in
addr16
into
in
pusha
mov
mov
lds
dec
repz
mov
and
int
pop
cmp
adc
fldl
fwait
pop
jmp
pusha
xchg
cmp
call
jnp
loopne
adc
fsts
lock
sub
dec
jne
shlb
jecxz
in
in
add
ret
pop
xor
jge
push
add
mov
pop
cmpl
ds
jb
mov
jne
inc
daa
adc
andb
paddsw
popa
orl
lods
xor
lock
or
aam
repnz
shr
shll
mov
jae
or
jmp
inc
mov
ror
pop
scas
dec
sbb
addl
repnz
mov
cmp
mov
pop
push
push
testb
mov
sub
sbb
mov
in
test
fs
inc
jnp
mov
bnd
std
into
testl
mov
pop
cmp
sub
mov
mov
xlat
sarb
outsl
mov
push
jno
inc
adc
stos
shll
cltd
int
addl
jl
dec
jle
call
add
and
sarl
mov
add
jno
fldl2e
xchg
sti
or
xlat
popf
jmp
fcoml
fdivrs
and
pop
pop
mov
xor
jb
pushf
outsl
push
cld
cmp
pushf
xchg
lds
mov
pop
mov
jno
in
cmp
add
std
sti
sbb
pop
push
neg
loope
movsb
jl
inc
adc
push
ds
subb
inc
add
xchg
nop
pop
xlat
sub
in
dec
sub
cmc
loop
dec
push
test
fildl
adc
mov
fwait
push
push
loope
jp
cli
mov
movsb
in
pop
or
ds
lret
cmpsb
ret
leave
pop
push
xlat
sbb
cmp
in
pop
fs
jmp
dec
xchg
push
lret
icebp
in
test
into
xor
or
sbb
aad
lds
fnsave
roll
push
xchg
adc
out
das
sbb
lcall
ja
xchg
repnz
in
dec
aam
jno
stc
mov
mull
push
mov
cmp
pop
sub
fprem1
jo
stos
sub
cltd
iret
jg
push
stos
jb
je
cmp
add
push
xchg
cltd
stc
rorb
jo
dec
popa
mov
inc
jmp
mov
fcomip
cs
fwait
popa
mov
mov
xor
repz
xorb
test
icebp
mov
fidivs
sbb
cmpsl
aaa
cli
test
add
pop
or
pop
into
pop
cmpsl
shlb
sub
add
sub
dec
iret
dec
pop
xor
xchg
push
mov
int3
jnp
pop
mov
xchg
pop
adcb
lock
std
mov
cmc
sub
int
cmp
mov
dec
iret
gs
push
push
adc
rcrb
add
notb
mov
xor
xchg
scas
push
aaa
sub
lock
inc
ficoml
ret
or
sahf
dec
inc
adcl
pop
inc
ja
add
xor
pop
cmpsl
mov
mov
fidivrl
int
clc
xchg
adc
stos
inc
cli
add
pop
lds
and
popa
adc
inc
xchg
xchg
pop
lods
lods
lahf
mov
and
inc
sahf
aas
pushf
jb
push
xor
shrd
fmull
int3
mov
sbbb
jge
std
std
inc
push
cmp
notl
int3
mov
sub
seto
cmp
pop
xor
dec
inc
sub
js
push
push
leave
cmpsb
fwait
pop
and
sub
jecxz
xchg
push
idivl
xchg
in
rcrb
jge
pop
aad
inc
mov
in
fistps
dec
push
pop
push
mov
mov
or
xchg
mov
pop
dec
popf
stos
daa
sub
pop
fildll
hlt
pop
sub
pushf
sub
mov
lahf
das
imul
xchg
dec
dec
pop
push
aaa
and
daa
pop
cmc
inc
imul
arpl
xor
jb
sub
out
adcb
stos
pop
int
fldln2
test
cmp
xorb
or
pusha
lods
shl
push
imul
add
inc
rcrl
shll
inc
dec
roll
les
dec
mov
lods
cs
lods
data16
fwait
addr16
insb
fdivr
flds
push
xchg
xchg
mov
pop
and
jp
mov
mov
jae
mov
mov
or
enter
jl
in
cmc
push
rorb
dec
and
and
or
bnd
adc
pop
gs
movsb
pop
inc
jnp
sub
sub
sbb
lods
pop
mov
jbe
test
add
insb
mov
adc
je
xchg
mov
repz
lret
push
pop
pop
lock
lret
nop
movsb
or
ss
xchg
pop
rolb
fstl
aas
push
lock
stc
test
mov
dec
cmpsb
cmpsb
xchg
call
jno
inc
enter
ret
mov
jb
je
add
inc
adc
dec
js
in
and
scas
inc
dec
jns
xchg
bound
cmp
ret
dec
cmp
movsl
mov
mov
jg
cmpsb
clc
les
rclb
gs
into
flds
add
lcall
mulb
fmull
xor
fldenv
addb
cmp
add
mov
jle
loopne
es
ret
mov
xor
aaa
nop
mov
outsb
cmp
xor
inc
andb
jne
or
inc
leave
dec
loopne
lcall
ja
xor
std
int3
or
pop
inc
sub
into
sahf
pop
jge
jb
subb
outsb
mov
lods
shlb
cltd
xchg
shrb
sub
jns
and
in
out
jge
adc
jnp
fmul
mov
popa
sbb
int3
jmp
dec
mov
test
andb
cmc
in
push
xchg
adc
and
or
dec
add
icebp
sub
cmp
mov
lahf
add
lods
adc
fs
mov
jo
and
mov
std
cs
dec
cld
push
in
or
sub
ret
mov
push
popf
jle
imull
xchg
loop,pn
das
jo
std
mov
inc
jecxz
xchg
xor
mov
imull
cmp
vorps
jg
lcall
mov
pop
mov
xchg
mov
adc
out
mov
cmp
add
clc
imul
jl
and
in
and
ret
sbb
mov
inc
pop
lahf
test
ret
jmpw
int
sbb
pop
and
adc
divb
lods
sub
popf
add
js
sub
out
inc
in
pop
jle
mov
insl
fld
push
int3
into
lret
insb
pop
jns
inc
repnz
stos
fsubp
adc
dec
mov
inc
out
pop
test
mov
enter
stc
sti
push
lret
cmp
inc
and
es
sar
dec
push
jb
inc
mov
jecxz
sub
stos
push
es
pop
mov
or
cli
xchg
mov
in
mov
cmp
fdivs
es
mov
xlat
gs
ja
inc
or
lret
sarl
cwtl
mov
mov
outsb
sub
pop
dec
mov
aaa
hlt
daa
inc
loopne
add
fwait
rorb
mov
jl
adc
mov
pop
cmp
xor
mov
or
add
mov
inc
xchg
add
add
in
push
xchg
dec
sub
inc
mov
xchg
mov
rclb
arpl
outsl
jbe
clc
or
ljmp
aas
repnz
imul
jmp
out
mov
in
xchg
out
or
add
addr16
sti
in
addr16
fisubrl
cs
cmp
xor
jp
arpl
add
fwait
enter
negb
sbb
iret
or
xchg
pushf
or
mov
pop
lds
sub
pop
jmp
mov
lea
or
mov
mov
fwait
movsl
mov
repnz
ret
mov
pushf
adc
pop
xchg
xchg
push
stos
mov
and
sahf
cwtl
lods
in
js
jle
cmc
ljmp
in
xchg
xor
lret
cmp
scas
out
cmp
cmp
sub
hlt
lret
inc
cltd
mov
aad
ja
sbb
xor
xor
adc
aas
mov
gs
pop
sbb
or
xor
rolb
shrb
bnd
nop
pop
xchg
lods
push
pop
imul
adc
add
leave
ror
int3
out
push
shlb
shlb
sbb
ss
jb
mov
into
cmp
sbb
dec
xchg
add
xchg
ja
rorl
jmp
lret
cmpl
push
movsw
jns
add
ljmp
xlat
fxam
movl
dec
mov
push
xchg
mov
or
bnd
and
mov
xchg
out
scas
push
out
pop
sub
popa
xor
je
in
sbb
push
shlb
adc
xor
push
je
pop
adc
enter
mov
cmpsl
lods
sub
pop
ja
pusha
rolb
sbb
inc
pop
fdivp
decl
mov
stos
xor
sbb
push
inc
sbb
cmp
dec
push
and
imull
mov
repz
mov
std
mov
outsb
movsl
adc
mov
add
ss
mov
mov
lods
cmp
lahf
mov
jae
inc
inc
add
mov
lea
into
shrb
sbb
pop
adc
in
shl
sbb
sbb
imul
ja
or
sbb
xchg
hlt
cltd
xchg
ss
stos
jae
pop
pop
adc
mov
add
xor
pushf
sbb
or
push
es
imulb
clc
in
lock
or
rcrb
pop
add
push
and
jb
mov
pop
repz
xchg
cmc
arpl
andl
imull
inc
pop
cltd
push
sbb
push
fidivl
xor
and
pusha
mov
fdivrl
mov
fstp
push
xor
pusha
push
xor
mov
mov
js
jle
push
stos
push
leave
sbb
mov
aaa
test
mov
push
fnstcw
ljmp
ret
cmp
scas
sbb
sar
lcall
sbb
mov
mov
jl
xor
les
jmp
movsl
dec
mov
cmp
pusha
cli
enter
mov
scas
pusha
adc
data16
sbb
jns
push
xchg
push
test
enter
mov
mov
insl
lods
pop
mov
stc
imul
stos
push
dec
out
sbb
icebp
test
insb
ljmp
dec
loopne
imul
cmpsb
lods
clc
xor
imull
inc
cmp
out
pop
loope
loope
fdivrl
out
jae
jmp
jae
push
test
push
rorl
push
push
dec
in
cmc
xchg
sub
xchg
test
in
lea
adc
in
push
aam
jno
pop
mov
jp
aaa
ljmp
jno
pop
sbb
pusha
add
pusha
push
adc
mov
mov
mov
mov
dec
pop
xlat
xorl
adc
lds
xor
xchg
inc
xchg
pop
cmp
or
and
dec
mov
aam
addr16
lock
dec
pop
sti
cmp
push
rorb
test
pop
cmp
insb
xorb
push
mov
mov
sub
fs
test
add
jb
les
sbb
mov
xor
jmp
ficomps
je
and
push
imul
lods
adc
aad
inc
xchg
jp
fld
inc
push
add
push
xor
in
fnstenv
pop
loop
sbb
test
xor
push
sbb
jo
cwtl
push
repnz
xchg
push
fnstsw
sub
mov
jae
xchg
and
fadd
ret
push
jle
and
ret
push
ss
xor
add
mov
cmp
and
insb
ror
push
hlt
pop
adc
jns
imul
loopne
movsb
lods
das
leave
les
push
mov
xor
aaa
scas
inc
jo
sti
push
sti
dec
sbb
lret
aaa
subl
inc
dec
lock
push
loop
inc
shl
bound
int
add
sub
xor
scas
mov
fisubrs
mov
sbb
insl
insl
push
adc
jg
out
jg
push
int
pop
outsl
fcompl
in
xor
sbb
inc
cmp
or
fmuls
adc
lods
pop
jns
adc
lret
in
mov
fbld
dec
push
pop
or
mov
pusha
mov
push
and
push
or
fiadds
sub
xor
addr16
fwait
gs
lds
aam
mov
jmp
ret
mov
stc
xchg
xor
cltd
sub
mov
mov
mov
pop
sarl
pop
jnp
jge
outsb
cs
mov
push
dec
jecxz
sub
pop
gs
pop
jbe
iret
lret
fstl
inc
jne
js
imul
scas
sbb
shll
fsubr
sub
and
cli
int3
xchg
int
push
call
bound
or
jge
data16
mov
sbb
jg
test
mov
je
aaa
dec
adc
add
adc
xor
int3
arpl
mov
xor
add
jg
sub
into
mov
out
lods
ficomps
pop
iret
xor
cwtl
cmpl
dec
out
dec
add
dec
xor
bound
clc
and
imul
mov
sbb
jnp
jle
mov
loope
inc
fimuls
mov
aam
lret
in
popf
xchg
jae
lods
sahf
aaa
repnz
mov
mov
add
stos
sbb
inc
cmp
pop
andb
push
les
inc
jnp
mov
mov
outsb
enter
into
cmp
inc
lods
add
imull
out
aad
repnz
addl
mov
xchg
jmp
ljmp
out
sub
mov
dec
cmp
mov
or
in
test
or
cltd
addr16
adc
fs
mov
imulb
inc
mov
pop
and
subb
scas
stos
or
addr16
cld
push
imul
popf
pop
push
clc
pop
leave
or
add
daa
ss
jmp
arpl
push
add
aas
inc
pop
or
lcall
mov
pop
cmp
xchg
cli
js
mov
mov
jno
jae
cmpsl
push
test
adc
sub
popf
sub
aam
sahf
mov
arpl
sub
sbb
mov
jne
das
jle
arpl
jecxz
push
mov
cmpsl
lahf
into
daa
inc
mov
pop
pop
fidivrl
imul
xchg
jl
xchg
lea
lea
insl
stos
pop
pop
repnz
xchg
xchg
sub
test
lock
xor
xchg
add
mov
fidivl
fnstsw
mov
xchg
pop
add
sub
fisubrs
xor
nop
test
cmp
mov
inc
sbb
pop
aad
lds
aad
insb
movsl
sbb
dec
psrlq
jmp
xchg
pushf
mov
imul
xchg
hlt
xor
ret
out
or
push
xchg
clc
xchg
push
mov
add
dec
jmp
sarl
push
jecxz
pushf
clc
and
cmp
pop
mov
ret
out
mov
jmp
jge,pt
movsb
mov
xor
arpl
cmp
cltd
clc
lahf
mov
xchg
scas
fistl
daa
cld
cmpsb
jns
out
outsb
test
pop
dec
sub
mov
ja
movsl
pop
cli
int
or
push
outsl
xor
mov
rclb
popf
and
jae
leave
arpl
fcmovnbe
inc
xchg
cmp
mov
cld
or
mov
inc
xor
fimull
cmc
fldcw
iret
cmp
jo
cld
push
out
in
lock
pop
sbb
adc
lods
jno
xchg
or
xchg
xchg
cwtl
jmp
or
xor
mov
cmc
pop
add
pop
pop
popa
cmpsb
jmp
xchg
jge
jnp
or
imul
loopne
data16
add
rorl
mov
pop
sbb
push
test
cmp
add
mov
jnp
push
or
jns
mov
imul
xor
loope
and
sub
les
in
arpl
imul
les
mov
xor
addl
pop
mov
sti
stos
rol
push
jle
add
lods
dec
insl
jp
hlt
fistps
bound
push
mov
adc
xor
leave
shr
aaa
sbb
ss
xchg
movsb
sbb
cmpsb
sbb
repz
sti
out
pop
stc
dec
nop
popa
lods
mov
sti
and
arpl
inc
pop
mov
xor
lods
sub
fsubl
pop
into
or
roll
xchg
popa
ret
jae
je
mov
xlat
in
jmp
xchg
pop
mov
xor
dec
int3
pop
pop
addr16
lret
loopne
in
inc
cmp
repnz
sahf
add
sub
or
mov
notl
les
shl
fnstsw
es
jge
stos
fidivrs
mov
xchg
mov
and
xchg
cmova
imul
inc
lret
das
mov
xchg
adc
sub
lods
jo
add
aaa
outsb
jne
push
data16
sub
pop
and
sti
jecxz
inc
mov
call
test
call
push
test
add
xor
xchg
mov
or
pop
sar
lods
jecxz
loope
cmpsb
insl
nop
fdivs
xor
loopne
cli
mov
test
aaa
mov
adc
jne
in
fisubrs
mov
ss
sbb
loopne
loop,pn
in
xor
jg
jb
daa
popa
add
mov
sbb
insb
cmc
push
push
sti
pop
out
pop
jp
mov
adc
in
aas
jle
xchg
lcall
stos
and
sub
cmpb
add
aaa
pop
push
scas
cmp
cwtl
aas
enter
lahf
jo
imul
xchg
outsb
mov
enter
jo
inc
in
cltd
mov
sbb
pop
icebp
push
jo
pop
mov
pop
cmpl
xor
mov
cmp
lock
ja
sub
xchg
or
jg
lret
mov
pop
idivl
mov
adcb
in
lds
pop
mov
lcall
out
inc
sbb
je
gs
mov
sar
leave
bound
fstl
and
push
cwtl
or
xchg
pop
xchg
jne
out
subb
aaa
push
xchg
sub
mov
shll
fwait
inc
mov
push
int
pusha
cmp
mov
mov
xchg
adc
cmp
icebp
insl
data16
add
roll
loopne
mov
add
outsl
dec
mov
mov
aaa
imul
sub
cmp
mov
push
call
hlt
ss
out
mov
inc
and
xchg
lret
pop
push
xchg
cmp
sbb
add
mov
fsubrp
dec
xchg
stos
push
inc
mov
pushf
xchg
adc
repnz
sbb
and
stc
hlt
cmp
sbb
daa
pusha
mov
xchg
data16
ds
fmulp
repz
test
std
inc
out
add
xchg
cltd
inc
pop
push
cmp
xlat
pushf
pop
mov
lock
pop
test
repnz
enter
out
repz
aas
inc
es
rcl
xchg
and
shrb
xor
mov
into
stc
mov
loopne
mov
orb
pop
test
push
push
and
loopne
xchg
iret
dec
sub
cmp
daa
sbb
ficoml
add
into
jnp
jmp
push
ret
mov
cltd
lds
inc
sbb
add
pushf
add
in
fs
data16
mov
or
fmuls
and
pop
or
sar
in
das
pushf
sub
inc
inc
or
push
mov
push
cmpb
jmp
fwait
repz
add
pop
aam
xor
fwait
adc
shrb
fdivs
popl
cli
mov
mov
enter
hlt
in
pop
mov
cmp
push
js
or
js
jbe
add
ss
cmp
int
je
xchg
pop
mov
mov
pusha
adc
es
lret
add
out
or
cld
enter
ret
std
aam
jl
jbe
movsl
mov
loopne
cmp
xor
jae
stos
add
cmp
jle
loope
inc
sub
xor
sub
aaa
jl
nop
jmp
mov
in
fwait
out
subb
gs
jne
dec
lds
mov
imul
add
lcall
push
inc
dec
repz
loopne
dec
rolb
xchg
lds
cltd
aam
or
cmpsb
mov
pop
int3
cli
stos
xor
outsl
xchg
aas
jbe
stc
es
cwtl
jbe
arpl
mov
fildll
rcrl
outsl
notl
push
sub
bnd
outsl
fmul
loop
int3
out
imul
std
rclb
cs
loopne
out
outsl
xchg
pop
lcall
into
dec
ret
dec
ret
icebp
fs
jnp
and
push
test
in
aad
jns
movsl
jecxz
xor
xor
pusha
into
test
jge
aaa
popl
pop
das
pusha
mov
add
sbb
loope
testb
in
and
or
aad
es
inc
in
push
out
push
cmp
test
aam
and
iret
mov
outsl
jg
mov
pop
loop
cmp
insb
iret
arpl
mov
cmc
dec
mov
cmc
mov
or
lret
repnz
ja
shl
lret
jge
push
aad
call
add
fdivrp
insl
xor
aaa
lret
mov
imull
data16
lcall
jg
adc
pop
cmpl
out
pop
jl
mov
fmuls
and
cmp
push
das
movsb
in
sbb
idivl
in
sbb
xor
sbb
sub
ss
mov
ss
imul
sub
pop
cltd
xor
adc
cmp
loop
loopne
imul
mov
sbb
xchg
sbb
mov
push
mov
pop
push
cs
dec
mov
jg
xchg
jno
into
mov
sbb
fisubs
lock
or
adc
pop
dec
cmp
cmp
inc
jge
dec
out
sbb
push
inc
addl
ss
into
cwtl
dec
aad
int3
mov
cld
test
out
lret
lods
jns
shll
or
ret
mov
jbe
addr16
cli
les
dec
pop
xor
pushf
xor
jb
cmp
pop
cli
mov
dec
push
sbb
stos
xchg
push
std
mov
xchg
stc
rcll
test
inc
push
jg
mov
pop
shll
xorl
lods
into
lock
jecxz
cwtl
pop
cmpsl
loop
rcr
cld
jae
pop
mov
push
mov
push
adc
or
xorl
pop
sub
mov
sub
dec
and
daa
sar
rcll
dec
lods
dec
push
into
lret
inc
loop
add
insl
fcmove
shl
lea
push
mov
ffree
out
fldenv
adcb
sbb
jl
jo
xchg
cmp
in
mov
and
push
mov
adcl
out
in
and
call
adc
ret
jmp
fsubs
fsub
xlat
sbb
in
add
lahf
jp
push
xor
jns
dec
jb
int3
inc
lahf
xor
jns
or
negb
xchg
sbb
dec
mov
addr16
xor
mov
icebp
cltd
movsl
xor
fimuls
xor
andb
addr16
dec
add
push
hlt
cwtl
and
adc
arpl
outsl
sbb
add
in
popa
dec
cltd
ret
cmc
in
inc
lcall
mov
push
arpl
gs
int3
mov
js
sub
adc
xchg
mov
push
ficoml
mov
sbb
mov
in
inc
lret
testb
mov
dec
hlt
adc
xchg
sbb
data16
pop
dec
out
push
push
and
add
lcall
xor
adc
xchg
call
add
cld
movsl
loop
fbld
or
cmp
popa
ffreep
pusha
cwtl
mov
mov
or
mov
sub
mov
mov
pop
pop
scas
ljmp
inc
push
bound
mov
adc
xchg
lods
popf
jg
or
lods
xor
mov
movhps
sbb
pop
xchg
mov
jnp,pn
xchg
loope
mov
je
sbb
push
pop
shr
je
push
dec
aaa
jns
or
int3
sub
test
and
das
jmp
jo
cs
hlt
push
mov
inc
xor
push
adc
mov
mov
iret
xchg
mov
ljmp
mov
and
inc
hlt
jne
cmp
xor
lcall
adc
insl
add
pop
inc
sub
jbe
dec
jno
sbbb
push
imul
mov
mov
add
pop
out
data16
mov
cmpsl
jno
mov
push
adc
pop
and
lds
and
popf
mov
and
mov
lods
mov
pop
aad
daa
iret
test
mov
sti
sbb
sbb
xchg
and
or
lock
insb
fists
jmp
jmp
out
xlat
nop
negb
pop
inc
xchg
push
mov
xor
add
inc
inc
es
pop
pushf
pop
inc
xchg
or
imul
hlt
pop
out
leave
sub
fwait
pop
hlt
popf
mov
jne
xor
es
adc
mov
inc
dec
xchg
sarl
push
aad
mov
fiadds
popf
cmp
push
insl
int
mov
out
loop
jnp
in
loop
inc
push
dec
iret
mov
loop
scas
iret
popa
into
sti
pop
int3
dec
in
test
out
mov
scas
andl
int
xchg
xchg
jne
xor
xchg
mov
push
and
push
pop
repnz
or
into
jg
pop
push
in
sbb
jbe
cmc
sub
sbb
pop
stos
and
std
xchg
ret
das
inc
in
fmull
out
mov
mov
shrl
sahf
repnz
push
xchg
jno
and
repz
xchg
pop
mov
xor
push
sti
pop
xchg
decb
sahf
xchg
mov
mov
mov
xchg
mov
inc
shll
pop
mov
xchg
fs
mov
in
fdiv
mov
mov
aad
loope
pop
inc
je
mov
mov
pop
cwtl
pusha
mov
pop
sbb
xor
cmpsb
rcrb
mov
mov
or
mov
es
mov
push
test
inc
insb
out
cmp
jge
fstpl
push
mov
xor
arpl
dec
test
insl
mov
pop
lret
xchg
or
jb
aaa
pop
movsl
cmp
clc
inc
xor
es
pop
xlat
push
cmc
into
movsb
outsl
push
aad
push
add
fbstp
das
sbb
mov
shll
adc
push
and
cli
inc
call
in
pop
pusha
adc
sub
inc
push
add
jno
mov
mov
mov
sub
daa
imul
mov
stos
shll
orb
xchg
je
cwtl
inc
cwtl
mov
inc
pushf
inc
xor
sbbb
jb
leave
sbb
dec
test
jg
or
add
xchg
inc
sub
mov
fadd
jp
add
cmp
xchg
mov
sti
je
leave
adc
xchg
cvtpi2ps
aad
fs
test
xor
out
sbb
jle
xchg
mov
xor
or
jg
sub
into
push
fwait
sub
insl
mov
xchg
sbb
push
and
mov
mov
push
add
lcall
adc
mov
ljmp
imul
mov
add
cmp
fisubs
jae
lea
jno
and
ljmp
sub
rorb
sub
inc
gs
push
repnz
pop
lret
into
pop
sti
and
sbb
cmp
aam
lsl
aam
pop
out
pusha
fs
xlat
or
mov
mov
add
or
add
mov
sbb
fnstsw
jo
dec
sub
dec
lea
loopne
movsl
sub
sbb
repz
push
push
and
xorb
lret
cs
mov
xor
xchg
mov
in
and
stos
mov
fwait
int
cmp
xchg
aad
sarl
repz
xchg
lock
pop
call
mov
pop
adc
loopne
idivl
mov
cmpsb
inc
stc
jbe
sub
lods
nop
xchg
les
ret
roll
mov
push
jo
jbe
imul
xchg
jns
std
in
fstl
jle
cmp
and
add
and
das
in
loopne
jmp
outsb
aas
sbb
xor
jg
lods
mov
ja
stos
out
popf
clc
lret
jo
nop
push
push
mov
out
sbb
in
add
lea
jnp
mov
imulb
jno,pt
xor
in
cmp
rorb
mov
test
call
ret
in
pop
xchg
sub
ret
pop
orb
inc
dec
adc
pop
sbb
jns
mov
mov
jb
outsb
int
add
imul
push
int3
fmul
fistl
je
test
mov
cld
aaa
cld
add
xor
adc
popa
add
mov
mov
notb
pop
inc
divb
push
loope
dec
lea
xchg
inc
xchg
shll
ljmp
rol
cmp
or
adc
imull
mov
jg
sahf
or
jp
mov
add
xor
pop
pop
mov
orl
xor
ja
jbe
xchg
in
aaa
stos
leave
test
mov
xchg
fildl
mov
imul
sbb
push
pop
cmpsb
fldenv
cmp
fldcw
jl
xchg
vunpckhps
lret
int3
sbb
push
mov
sbb
pop
pop
inc
add
and
daa
xchg
adc
pop
xchg
ss
mov
lods
inc
dec
mov
jns
gs
xor
iret
xchg
xchg
inc
lea
push
movsl
movsl
aad
jmp
push
test
jecxz
lock
xchg
addl
mov
aas
aaa
push
cmp
fildll
dec
out
imul
cmp
or
rclb
xor
fsubl
popf
imul
imul
fs
pop
xchg
pop
push
fists
pushf
pop
sub
pop
mov
xor
inc
add
add
mov
mov
pusha
test
fs
notb
mov
out
xor
xlat
xor
popa
sub
fs
inc
xchg
cli
fldcw
mov
xchg
call
daa
flds
in
mov
pop
insl
adc
jl
test
loop,pt
add
mov
mov
add
jmp
cmp
and
sbb
mov
jbe
dec
sub
test
test
daa
xchg
sub
lahf
sbb
aas
mov
xchg
call
jmp
pushf
pop
pop
or
in
and
out
cmp
mov
dec
xchg
mov
out
jae
mov
adc
stos
sub
push
in
sbb
lds
imul
int
dec
loope
aaa
shlb
jge
push
into
sbb
or
sub
or
add
fadd
in
sub
test
movsb
ss
outsb
sbb
mov
jl
iret
xor
mov
dec
and
mov
aam
out
mov
mov
mov
ret
cmp
out
push
orb
or
bswap
sbb
or
fs
cltd
pop
lock
xor
cmp
pop
addb
dec
lds
lahf
and
idivb
jl
jmp
jnp
pop
push
dec
lret
cmpsl
scas
push
xorb
enter
lock
jne
mov
dec
rorl
mov
aas
cmp
pop
les
lea
aaa
adc
lds
xchg
aad
jno
xor
sahf
mov
das
add
repz
sub
xchg
jo
loopne
or
nop
test
inc
out
inc
sbb
pop
xor
jg
inc
jae
repnz
shll
push
cmp
mov
ds
xor
sub
in
jl
inc
dec
jo
stc
and
ss
cmp
les
ss
cmpsl
mov
pop
popa
jp
adc
loop
bound
inc
xor
pushl
sub
jl
mov
or
xor
leave
fimull
jns
mov
xor
and
cmp
cmp
mov
pop
outsl
mov
and
mov
leave
cmpsb
insl
out
decl
jne
outsl
sbb
lcall
cltd
inc
and
int3
mov
movsl
xor
cld
scas
sub
push
push
jb
jns
push
push
push
mov
sub
pop
in
scas
pushf
inc
movsb
inc
mov
adc
fdivl
mov
dec
rolb
pop
fbld
jo
adc
pop
and
movsb
shl
or
xchg
arpl
dec
add
inc
call
push
mov
pushf
repz
jle
dec
rol
pop
andb
push
fisubrs
jecxz
aas
xor
shll
call
sbb
call
aas
or
push
fstps
sti
loopnew
mov
dec
mull
adc
push
dec
cwtl
and
jle
sub
scas
adc
dec
bound
iret
jno
jbe
pop
mov
in
out
fidivl
aas
sub
mov
iret
mov
ds
jge
sbb
mov
idivl
outsl
pop
movsb
aam
sub
jecxz,pt
push
popa
lcall
call
sarl
lahf
psrlw
sub
mov
pop
testb
rclb
cs
and
mov
mov
in
cmp
test
lods
pusha
pop
xchg
ss
mov
sbb
mov
scas
arpl
adc
lods
iret
scas
jno
push
cmpsl
and
inc
fs
pop
or
pop
popf
dec
jo
pop
scas
push
mov
add
lret
mov
sub
ja
mov
out
lock
addr16
xor
pop
fcom
mov
sbb
stc
pushf
mov
mov
adc
jge
call
dec
hlt
lods
jno
sub
pushf
ljmp
mov
aad
aaa
jle
and
jmp
cmp
rorl
sbb
push
jae
jae
ret
pop
push
cwtl
out
jns
ret
shlb
push
shll
xor
push
mov
inc
lock
sti
xchg
adc
xchg
iret
clc
pop
arpl
outsl
sub
adc
dec
ds
repz
js
loopne
push
js
rolb
sub
cmp
xor
inc
or
shrb
xor
lods
lcall
aad
add
pop
sub
adc
inc
repz
fs
stc
xor
cltd
xor
mov
mov
dec
or
sub
out
jl
xchg
movsb
out
sbb
sbb
and
add
pop
or
in
dec
xor
sarb
shrl
pop
xor
add
scas
les
or
fs
ljmp
mov
mov
xor
push
sahf
fnstenv
mov
cwtl
jae
cs
ret
mov
sbb
pushf
pushf
dec
jne
xchg
pushf
in
int
push
sbb
jnp
faddp
fldcw
out
xchg
ror
cmpsb
xor
sbb
repnz
cld
push
scas
jnp
movsl
sarl
adc
stc
xchg
or
lds
aaa
pusha
jmp
sub
mov
popf
push
pop
std
cli
mov
popa
popf
out
xchg
sbb
mov
lods
mov
das
jbe
jmp
cld
dec
fcoml
lahf
lfs
jp
sar
jo
fcomps
push
lock
in
xor
jno
or
popa
xchg
andb
push
jl
pop
dec
push
xchg
rorl
lock
mov
dec
cmp
out
mov
jo
inc
sub
adc
inc
fisttps
sbb
xchg
out
push
mov
daa
jl
and
insl
fdivr
add
inc
movsl
scas
mov
jge
mov
loopne
int
outsb
or
shll
mov
fs
push
stos
sarb
stc
mov
xor
rol
aad
les
mov
mov
hlt
cmpsb
sti
stos
adc
cmp
push
clc
push
scas
pop
fildl
jnp
mov
xorl
imul
mov
cmp
and
inc
mulb
aam
stc
adc
push
xchg
cmp
mov
and
cmpsl
and
jp
xchg
lock
lods
and
mov
push
sbbl
xchg
mov
push
or
call
stos
testl
push
add
ds
mov
lret
stos
in
push
jbe
pop
bound
imul
lahf
sub
inc
cmp
xor
pop
mov
add
push
lret
xor
les
cltd
faddl
jo
lods
push
sub
addb
sbbb
xchg
xorb
dec
mov
dec
loope
test
or
mov
inc
fdivrs
lret
jmp
pushf
cli
push
fdiv
popf
outsl
mov
dec
pusha
into
xor
call
es
push
xchg
xor
insb
xorb
shrb
out
jns
shl
ljmp
add
inc
push
jecxz
dec
clc
imulb
sbb
inc
push
pop
jno
cmc
xor
sarb
lods
sub
int3
ret
inc
subl
pop
outsb
divb
xchg
or
ror
ljmp
cmp
jo
and
cmp
orb
mov
testl
das
ja
repz
cmp
jmp
das
subb
loopne
sbb
inc
add
or
mov
les
xchg
rcrl
cmp
pop
push
out
ja
mov
sub
ret
test
lret
inc
jb
inc
pop
pop
push
mov
lea
int3
cld
inc
xchg
ja
and
or
icebp
cmp
xchg
lds
fiadds
jecxz
inc
fildll
mov
jge
shl
push
pop
popf
in
sub
das
and
aad
sahf
lock
xchg
clc
pop
je
inc
shrl
and
testb
lds
mov
scas
dec
dec
dec
adc
outsb
flds
sbb
out
mov
popf
dec
pop
fimuls
jecxz
add
cmp
lock
call
rcll
stos
push
cmp
sbb
mov
js
mov
mov
aaa
mov
int
icebp
fisttps
cmp
jmp
inc
lds
and
fnstenv
icebp
jmp
mov
mov
cmp
stos
pop
inc
mov
adc
js
call
bound
out
sub
jl
in
push
cwtl
js
xchg
xchg
sub
pop
mov
jne
shlb
dec
push
enter
and
sbb
pop
je
mov
lea
cmp
jbe
gs
cltd
inc
mov
or
cmpl
outsb
mov
jmp
sti
sub
into
out
xorps
jno
pop
daa
cs
cwtl
xor
and
data16
imul
push
movsb
popaw
lods
cmpsb
in
dec
mov
xchg
pop
repz
rcll
xchg
pop
or
mov
lds
or
test
movntq
out
cmpsb
jmp
push
test
mov
scas
push
jbe
in
pop
push
test
mov
sbb
dec
cmp
sbb
aam
sbb
into
cltd
mov
jnp
push
jno
jecxz
loope
out
lcall
sbb
test
inc
push
bswap
lea
es
dec
xchg
lods
adc
je
push
dec
adc
sub
pusha
sbb
inc
pop
inc
and
insb
xchg
mov
sub
mov
jb
and
xor
jmp
sbb
fisubs
lcall
js
jne
rclb
or
or
mov
outsb
jmp
mov
or
mov
lock
cmp
jno
xchg
fdivr
mov
repz
xchg
dec
enter
cmp
sahf
pop
js
or
arpl
xlat
movsl
pop
cmp
pop
mov
add
inc
xchg
push
mov
arpl
sbb
mov
lcall
cli
push
push
xchg
pop
xor
inc
out
xchg
xchg
xorl
int
xor
scas
cmp
xor
mov
push
lods
dec
push
mov
loope
push
mov
clc
mov
xor
fisubrl
cli
sbb
mov
jb
pop
ds
jg
enter
aad
mov
mov
xlat
fimuls
scas
icebp
popf
push
das
xchg
cmp
cltd
cli
mov
jne
sub
clc
jno
mov
out
idivl
nop
addl
ljmp
sub
and
ret
adc
and
idivb
push
adc
ret
dec
stc
mov
and
arpl
cwtl
xor
jge
movsl
sub
lret
mov
xor
inc
mov
imul
in
stc
add
mov
sbb
mov
sub
dec
push
push
sarb
mov
repnz
mov
test
fcom
hlt
xor
rcrl
or
mov
push
inc
mov
mov
pop
inc
mov
mov
js
lret
cmp
repnz
shl
mov
aad
clc
xlat
fcoms
stos
pop
ret
mov
xor
push
fsubl
inc
bound
mov
test
rcr
subl
jmp
sub
sub
mov
test
int3
and
inc
call
add
in
jmp
fldl
push
addr16
mov
ja,pt
dec
cld
sub
test
jge
inc
imul
cmpsl
rcl
out
lcall
pop
inc
mov
fs
jb
insb
loopne
push
fildl
pop
divl
xchg
jge
lahf
adc
mov
sub
decb
pop
es
push
mov
sub
mov
pop
add
sti
dec
pop
fsubs
daa
add
popa
and
test
pop
or
cltd
mov
mov
push
pop
ret
aaa
mov
xor
push
lock
or
outsl
daa
loop
mov
pop
dec
rcll
lods
mov
and
and
fcomps
mov
shrb
jmp
xor
add
fsubrl
jmp
cmp
jns
movsb
test
fst
push
xlat
cmp
pop
mov
inc
push
fldt
shl
int
jmp
test
xor
push
sahf
push
mov
xor
in
sbb
inc
mov
dec
add
mov
mov
jbe
xchg
pop
repz
test
cmpb
and
int3
in
pop
push
mov
dec
sbb
dec
cmp
dec
out
test
sub
inc
mov
xor
scas
adc
shr
ret
dec
adc
cmp
fs
dec
adc
push
mov
xchg
aad
xchg
fsts
cs
pop
div
cmc
cmp
outsb
stc
or
jno
dec
cmp
fwait
mov
mov
sti
in
mov
mov
mov
test
sub
popa
je
lds
cmp
pop
adc
into
pop
sbb
arpl
jno
stos
push
jbe
push
pop
ficoms
gs
sub
rcll
sti
xchg
dec
or
or
sahf
scas
loope
nop
xor
xor
and
inc
inc
test
es
aaa
xor
incb
xorl
dec
lahf
icebp
test
daa
aaa
lcall
test
fbstp
adc
cltd
xor
cld
mov
out
adc
adcl
mov
out
mov
inc
out
add
sbb
xchg
jmp
sbb
adc
add
mov
mov
and
cli
or
jne
cmp
lahf
inc
pop
cli
and
addl
insl
lahf
xchg
repnz
jp
repz
jle
xchg
dec
in
inc
cmc
dec
add
adc
cli
into
enter
mov
fldt
push
xor
mov
stos
movsl
in
jecxz
push
cmp
add
jg
mov
jecxz
rol
sub
jne
movsb
aad
adcb
ljmp
jbe
movsl
pop
push
pusha
or
pop
lods
and
je
fbld
dec
cmpsl
mov
inc
icebp
mov
cmp
sbb
int
cmp
xor
fadd
shl
or
std
mov
cmpl
ret
insb
adc
cli
shll
cli
pushf
imul
mov
inc
andb
or
pop
lock
leave
or
ret
fsubl
outsl
cltd
aad
jmp
mov
insl
shr
clc
dec
mov
push
lds
cmp
loopne
pusha
faddl
test
loope
cltd
repnz
lret
push
fcmovnu
add
xchg
or
push
sbb
jecxz
negb
in
lods
and
aas
cli
stos
inc
sub
sti
mov
jbe
and
xor
mov
cld
lahf
aaa
adc
xor
inc
mov
push
mov
mulb
jle
fimuls
pop
push
adc
cmc
and
fiaddl
icebp
push
dec
lcall
rclb
subl
sbb
add
sbb
adc
loopne
dec
dec
in
jnp
sti
jge
subl
mov
xchg
sub
xchg
mov
and
nop
mov
sbb
and
push
add
push
xchg
or
jecxz
pop
xor
cmp
fldl
mov
jl
and
and
mov
mov
sahf
pop
insb
ficomps
sub
ret
pop
mov
jl
test
test
outsb
jmp
mov
push
cld
inc
add
ret
sub
rcl
movsl
faddp
shll
xor
adc
ror
xorb
mov
test
pop
inc
cmp
add
sarl
sbb
fxch
stos
leave
mov
inc
jno
pop
dec
push
sub
jge
gs
test
xor
xchg
mov
pop
inc
cltd
int3
push
enter
push
mov
out
cmc
pop
inc
jno
xchg
leave
jbe
push
lahf
add
xchg
inc
or
xchg
cli
pop
daa
jnp
pop
push
sahf
es
pop
and
mov
popl
mov
ljmp
insl
scas
and
cltd
pop
and
mov
or
faddl
xchg
cmpsl
xor
inc
push
add
xchg
fmull
push
mov
jnp
mov
push
imul
sbb
leave
dec
sub
dec
adc
fdivrs
and
fcoms
xchg
ja
xor
or
rcrl
jo
push
pushf
je
out
push
int
dec
mov
cmc
cmp
lret
xor
bound
dec
into
sub
inc
xor
pop
rcl
inc
cmpb
testl
shr
jo
stc
pop
leave
pop
mov
std
lock
mov
dec
and
imul
idivl
cmp
xlat
dec
xorl
dec
testb
cmp
aaa
push
js
cmp
outsb
sub
iret
loopne
or
insb
int3
addr16
pop
pusha
cwtl
arpl
dec
pusha
or
xchg
pop
int
test
es
cmpsb
out
lret
pop
cmp
gs
repz
in
pop
sbb
bound
dec
xlat
pop
push
fisttpll
popf
dec
cmp
lcall
jnp
or
dec
ret
cmp
dec
je
xorl
pop
mov
push
lods
aad
mov
or
xchg
push
ret
test
insl
in
inc
fwait
call
sarl
out
cmp
stc
ret
out
jbe
push
and
mov
mov
dec
push
mov
sub
scas
cli
sbb
push
pop
mov
xor
mov
inc
mov
shlb
stos
mov
and
loope
rclb
jae
addr16
jmp
dec
insl
cmc
pop
xchg
jne
cmpsb
sbb
sub
pushf
pop
insl
and
lock
loope
loope
jb
sub
cmp
fcoms
and
or
sti
jno
sbb
fbld
xor
cli
jae
cmp
pushf
cli
adc
xor
movsb
mov
and
fdivrs
lea
xchg
push
mov
push
fmuls
or
cltd
inc
jns
jnp
push
mov
cs
fwait
jp
cmpsl
sti
cltd
stc
andl
in
shrl
out
dec
mov
int3
push
out
neg
decl
xchg
adc
mov
mov
cmp
scas
ja
inc
dec
roll
imul
pop
loop
sub
adc
rolb
cmp
xchg
repnz
sarb
scas
repz
pop
cmp
addr16
jecxz
push
jecxz
ret
mov
jbe
lea
stos
xor
daa
sarl
xchg
xchg
imul
push
iret
mov
mov
stos
cmpsl
icebp
stos
add
dec
bound
popf
push
cmp
jle
popa
test
into
cmp
and
popf
pop
pop
pop
xchg
icebp
call
shll
sub
test
add
fucomp
cmp
leave
mov
fstl
or
test
adcb
rclb
cltd
scas
inc
cmpl
jno
je
cmp
mov
repz
dec
shrb
rorl
sbb
je
sbb
mov
subb
xor
xor
sub
les
and
xor
mov
enter
mov
mov
and
or
or
scas
and
push
pop
or
xor
sti
xor
repnz
lods
push
mov
jge
gs
data16
sub
xchg
fstpl
push
dec
cwtl
arpl
sti
test
and
pop
sbb
mov
cmc
cltd
in
sahf
test
test
ds
sbb
stos
dec
mov
test
lock
jge
int
fs
ds
hlt
stos
adc
sbb
add
iret
aam
xchg
lcall
or
enter
pop
mov
loopne
push
xor
sbb
mov
jmp
cmp
lcall
cmp
mov
sbb
insl
push
aam
icebp
and
sbb
and
lock
dec
inc
push
push
xchg
pushf
pushf
xor
sbb
jl
pop
test
repz
nop
jo
xchg
pop
xlat
push
or
sub
dec
xchg
test
repz
and
pop
data16
add
mov
cli
nop
adc
fwait
pop
jmp
jg
pop
je
and
test
adc
call
ja
and
push
nop
fimull
sub
xchg
jne
jg
test
lds
adc
in
mov
loope
lcall
push
push
loope
fs
cmp
add
xlat
popa
adc
ljmp
pop
dec
inc
adc
and
dec
jne
jb
lods
jo
int3
and
or
ret
dec
ja
cltd
jle
add
jmp
adc
sub
push
test
shll
out
loope
or
das
xchg
fnstenv
fisttpll
fiadds
cli
popf
cmp
aad
andl
pop
adc
jecxz
xchg
stos
push
les
inc
add
add
stos
scas
ja
push
shlb
ja
jle
cmp
or
scas
xchg
ja
shrb
dec
mov
jmp
call
popa
dec
fbld
popf
mov
movsb
addl
enter
je
adc
pop
mov
xchg
sbb
add
push
icebp
movsl
mov
and
jge
pop
test
mov
adc
xchg
lahf
inc
adc
mov
xor
insl
jbe
xlat
dec
cmp
and
mov
icebp
rcrb
clc
aad
stos
lret
adc
jg
ds
jne
lods
and
or
fidivs
dec
movl
mov
call
out
movl
aas
arpl
outsb
push
jp
insl
pushf
cmp
or
mov
push
jmp
cmpl
mov
push
addl
push
ret
in
jge
push
pop
mov
and
mov
leave
xor
subl
stos
sbb
imul
enter
mov
sub
clc
or
inc
shll
inc
or
add
cld
fld
sub
push
adc
mov
inc
xchg
cwtl
sbb
or
or
imul
inc
pushf
dec
pushl
dec
in
pop
push
jmp
mov
lods
add
xchg
jle
jge
mov
pop
add
mov
xlat
sbb
fsts
test
dec
jmp
sub
pop
test
lds
lods
mov
push
movsb
adc
push
adc
inc
adcb
out
push
shll
fiadds
pop
dec
pusha
shrb
cld
leave
mov
mov
lods
sbb
pop
jl
inc
testl
flds
test
xor
mov
shll
ljmp
add
stos
push
xor
leave
inc
jmp
sub
sbb
daa
iret
cmpb
bound
pop
mov
and
loopne
push
xchg
movsl
in
sub
sub
dec
pop
lret
adc
outsl
jg
pushf
or
in
shlb
scas
xchg
mov
gs
inc
xchg
movsl
repnz
data16
jmp
out
ja
jbe
loop
and
sub
mov
ja
xchg
aam
lea
fsubrs
mov
xor
xabort
and
or
mov
imul
pop
std
lods
test
outsl
cmc
inc
lahf
hlt
mov
mov
or
sbb
mov
out
mov
fidivs
sub
add
sti
aas
unpcklps
dec
sbb
pop
aaa
insl
adcl
push
shlb
ljmp
inc
push
cmpsl
rcr
pop
sub
sbb
mov
jno
cmp
ffreep
push
cmp
xchg
xchg
or
xchg
push
xor
and
xchg
enter
loopne
inc
xor
test
out
jge
mov
inc
mov
jbe
repz
jb
adc
mov
add
shl
pop
inc
ret
fdivs
dec
mov
comiss
rolb
in
lods
notl
fdivrl
mov
push
push
xor
movb
jne
push
mov
mov
aam
and
and
pop
push
dec
jp
test
sbb
lret
movsl
add
push
orl
fisubrl
fistps
aaa
repz
pushf
in
ss
pop
je
jl
loope
int3
loop
add
nop
jl
loop
repnz
inc
aam
fmull
cmp
fisubrs
mov
out
or
inc
insl
pop
adc
popa
cmpsb
sub
shl
imul
repnz
xchg
lock
mov
test
shll
mov
hlt
sbb
mov
jns
push
or
rcrb
stos
aas
add
mov
shlb
movsl
inc
inc
fsubp
push
jo
inc
jne
or
xlat
mov
sub
pop
mov
aam
mov
or
insb
or
mov
jne
or
movsb
test
clc
jnp
push
je
aam
mov
jno
jnp
jne
popa
sub
jl
sbbl
testl
aam
sub
call
dec
repnz
int
push
mov
scas
or
cmp
jmp
mov
add
and
arpl
jae
pop
cmp
mov
jne
aaa
data16
hlt
dec
mov
mov
xor
pop
add
jge
jecxz
fadd
aaa
push
mov
mov
daa
imul
add
mov
cltd
lret
lcall
mov
adc
addr16
movsl
xchg
decl
cs
mov
gs
cwtl
into
ret
jae
add
add
dec
lcall
fwait
pop
jg
jle
jo
neg
adc
loope
mov
fcmovnb
or
fldenv
push
fisttpll
mov
cmp
sbb
fildll
sub
and
dec
int3
mov
jecxz
mov
outsl
fcoms
mov
in
out
repz
loope
push
mov
aam
ja
pop
lods
adc
pusha
and
stc
adc
add
sub
adc
inc
es
mov
clc
faddl
popa
int3
or
mull
and
cmp
dec
in
adc
inc
ja
jbe
mov
gs
xchg
fsubl
pop
aam
cmp
push
jle
jg
loope
or
mov
pop
xor
and
enter
mov
pop
sti
insb
loope
stc
pop
sbb
int
enter
lret
leave
mov
lods
mov
daa
loopne
xchg
loopne
sub
cmc
mov
or
hlt
mov
pop
out
shlb
adc
jmp
inc
ret
addr16
xchg
cmpsl
xlat
out
mov
lods
inc
movsb
and
mov
and
pop
cmp
in
mov
mov
das
and
xor
leave
cmp
xor
in
dec
sub
ret
lds
shll
fwait
movsl
mov
jae
mov
pop
cmp
mov
pop
xor
xor
xchg
mov
test
jmp
lret
inc
mov
add
push
and
fists
fs
add
arpl
pop
scas
inc
or
jle
call
and
sbb
sub
addr16
sbb
or
adc
xlat
jg
repz
lret
add
adc
mov
dec
roll
push
mov
nop
fldenv
push
inc
push
push
lods
and
rcrb
xor
jo
in
sub
daa
jo
and
out
jno
je
les
sbb
adc
inc
inc
addr16
addr16
cmp
jl
je
pop
mov
push
js
insl
pop
jmp
icebp
pop
lret
insb
xchg
or
js
repnz
mov
cld
mov
fsubrl
dec
fsubs
pop
mov
jge
inc
mov
and
push
in
mov
adc
cld
out
add
push
ljmp
adc
mov
outsb
sbb
sbb
mov
adc
std
adc
xor
xor
stos
lock
fistpll
cmp
fnstcw
cmp
sbb
adc
rorb
xor
inc
mov
sbb
push
mov
outsb
ss
cltd
push
ljmp
lret
shll
dec
lcall
cmc
lret
dec
mov
loope
mov
and
repz
push
xchg
outsl
mov
and
jmp
scas
cmp
cltd
mov
rolb
pop
cmp
test
sbb
sti
cmp
cwtl
xor
je
xlat
xor
add
repz
and
out
sahf
les
fcom
mov
fists
test
out
outsl
cmp
adc
pop
and
mov
bound
popf
cwtl
lods
out
cs
popf
imul
jnp
int
lcall
jns
add
daa
lret
jo
xchg
xchg
xchg
pop
cmpb
lds
inc
outsl
jnp
stos
lods
in
test
or
xchg
cld
popa
push
ds
xchg
hlt
adcb
jp
jno
insb
stc
shlb
out
into
fisubs
mov
fistl
loope
lea
dec
popa
mov
adc
xor
andb
pop
cmpsb
jno
scas
aad
mov
and
mov
iret
pop
outsl
xchg
in
dec
cld
push
mov
xor
ficoml
fmulp
fldenv
lods
and
jge
es
push
adc
ja
inc
jl
sti
fwait
jnp
imul
cmp
enter
inc
sub
pop
push
enter
xor
pop
jnp
xlat
roll
sti
arpl
jge
dec
and
movsl
call
dec
jae
xchg
out
cmp
cltd
xchg
xchg
lods
xchg
imulb
sub
test
test
cmp
jle
pop
xchg
repnz
test
push
dec
sbb
lahf
jp
push
push
mov
jecxz
fwait
pop
dec
sub
into
leave
mov
sub
sahf
mov
loop
sub
repnz
insl
dec
cmp
jae
jle
or
pop
ds
enter
sub
jge
and
aad
mov
and
add
ja
sbb
in
dec
xchg
xchg
cli
pop
movsl
divl
jecxz
push
iret
out
call
icebp
sti
leave
leave
rcrl
jge,pt
addr16
push
inc
movsb
test
pop
mull
xor
jge
inc
repnz
lods
jg
int3
jbe
movsl
ja
cmp
pop
xchg
sbb
btc
lahf
popf
in
imul
xchg
rcll
in
push
loopne
dec
movl
mov
add
orb
mov
xchg
dec
inc
pop
pop
push
sahf
push
pop
stos
mov
pop
adc
call
and
mov
in
cmp
es
xchg
sahf
mov
push
repz
es
daa
cmp
hlt
mov
and
shrl
mov
sbb
loop
xchg
jmp
sbb
dec
jecxz
xchg
jle
inc
pop
out
mov
or
cltd
aad
cmp
and
xchg
xor
xchg
sbb
mov
aaa
insl
lret
and
sbb
push
call
adc
aas
outsl
cmp
mov
mov
dec
push
pop
ret
stos
shrl
pop
cmp
dec
pop
imul
inc
sbb
xchg
pop
sti
mov
pop
dec
jb
adc
out
pop
ljmp
mov
xor
cmpsl
or
fwait
dec
leave
std
test
adc
push
xchg
insl
fists
add
push
outsl
mov
std
insb
add
hlt
mov
rorb
out
shlb
jecxz
mov
leave
es
xor
mov
mov
jo
and
ret
sub
das
mov
add
jmp
adc
mov
mov
call
leave
mov
imul
leave
pushf
adc
insb
rcl
cmpl
xchg
scas
jmp
pusha
imul
mov
lret
xchg
lret
repz
adc
xchg
mov
dec
sub
cld
outsl
mov
inc
fidivrl
cmpsl
imul
xchg
pop
shl
fidivl
in
or
fldcw
pop
xor
xor
push
cmpsb
push
test
lret
lahf
cmp
out
mov
xlat
out
sbb
push
sbbl
dec
mov
adcb
sahf
xchg
and
lods
jb
lcall
outsb
ljmp
sub
xor
fxch
cwtl
sbb
stos
mov
jmp
fiadds
push
xchg
sub
int
cmpsb
ja
es
pop
xchg
in
shll
push
outsb
or
xchg
mov
lahf
mov
negb
movsb
jle
lods
push
adc
xchg
add
xor
sbb
xchg
mov
inc
pop
enter
xchg
xchg
add
aad
inc
push
adc
inc
dec
mov
jp
mov
sub
inc
jg
add
xor
inc
pushl
or
pop
mov
adc
enter
cmp
popf
fdivrl
cmpsb
stos
das
icebp
jle
and
and
fdivrs
aad
inc
mov
sbb
mov
or
mov
mov
lods
aaa
dec
in
push
adc
add
jmp
dec
mov
sub
push
sbb
pop
lret
sub
or
out
adc
xchg
jge
mov
mov
popa
sbb
cmp
lea
xor
cmpl
shlb
pop
cmp
jns
leave
jo
cmp
adc
ss
int
jno
and
push
fsubrl
in
test
mov
les
or
out
int
imul
cmp
fwait
loopne
push
or
nop
lock
adc
jb
les
lods
mov
adc
push
jne
gs
push
pop
mov
lea
mov
int3
push
inc
sub
lcall
cli
ds
lcall
push
mov
add
push
test
push
mov
sbb
fmuls
movsb
ret
sub
jo
xor
out
xchg
shlb
loop
jmp
mov
sub
loopne
or
pop
adc
sub
scas
lcall
int
push
mov
lret
idivl
mov
adc
xlat
mov
push
push
add
shrb
pop
inc
jecxz
mov
flds
adcl
sarb
and
pop
mov
dec
or
lcall
and
jmp
push
imul
fdivs
inc
lea
sbb
and
sub
in
add
in
adc
adc
enter
sarl
cmpsb
cwtl
or
cmp
lds
sbbb
push
add
and
stos
enter
jno
dec
popa
sbb
imul
dec
out
scas
adc
jecxz
add
push
inc
loop
hlt
jbe
add
ficoms
jnp
add
test
jne
jne
fcoml
mov
loopne
std
jecxz
iret
dec
push
fmuls
dec
lods
sub
decb
sub
inc
adc
pop
dec
jg
add
jg
pushf
les
loop
cmp
jle
push
inc
and
mov
sbb
adc
xchg
pushf
dec
movsb
lahf
push
add
test
lods
inc
ds
mov
nop
jecxz
xchg
fdivl
pop
jmp
out
insl
push
inc
loope
dec
dec
mov
leave
data16
push
imul
cmp
jge
dec
pop
mov
mov
pop
push
cli
xlat
mov
out
js
cs
mov
dec
gs
xchg
mov
pop
pop
push
xchg
outsb
inc
jns
pop
xor
rolb
pop
xlat
lret
lret
imul
pop
dec
out
xchg
loop
scas
jp
push
xchg
stos
inc
fldcw
sub
sbb
mov
insb
pop
fs
mov
hlt
std
jbe
icebp
sub
sub
mov
jle
sarb
mov
jl
testb
jne
sbb
mov
fimull
cmp
std
dec
push
cmpsl
push
xor
dec
out
add
int3
jae
adc
pushf
jne
cmp
loope
mov
test
in
test
stc
xchg
icebp
inc
mov
push
loop
push
leave
clc
add
cmpsb
out
jne
dec
mov
push
inc
iret
push
in
push
aad
test
subb
dec
adc
and
int
popa
fwait
jno
jecxz
into
cld
js
pop
lods
add
push
out
insl
and
fidivs
out
je
push
inc
push
xor
cmc
jmp
clc
mov
dec
sub
lds
sub
dec
mov
pop
pop
jb
xchg
xchg
fsts
cltd
push
mov
dec
inc
push
ret
fidivl
jmp
lcall
ss
negl
pop
bnd
fcomp
cmpb
xor
mov
scas
loope
push
stc
rcrb
inc
xchg
or
and
or
dec
mov
mov
bound
inc
aam
repz
xor
clc
inc
jmp
and
ja
cmp
push
aas
add
test
inc
out
jl
pop
insl
jae
mov
xchg
or
pusha
xchg
dec
mov
fistpl
sahf
loopne
cmp
inc
out
or
cmp
out
movsb
push
pop
pop
mov
cld
enter
notl
iret
adc
ds
push
push
inc
pop
ret
mov
add
and
mov
test
pop
jg
inc
xor
adc
shlb
adc
xchg
and
push
iret
xor
enter
add
xor
sahf
xchg
jne
fsubr
int3
or
test
or
andl
arpl
cld
push
dec
and
mov
add
ret
adc
inc
pop
ljmp
add
sbb
dec
inc
sbb
mov
lock
scas
idivb
cmpsb
jo
mov
movsl
xor
jecxz
dec
shll
jae
jg
pushf
out
cwtl
jmp
push
rorl
sbb
pop
xor
sub
fists
xor
ret
xor
add
push
aaa
jl
call
mov
iretw
mov
mov
sbb
mov
mov
insl
jp
ja
mov
fwait
negb
push
mov
jae
xchg
addr16
dec
lods
and
imul
nop
xor
pop
xchg
jg
shrl
pop
lret
push
jp
jle
pop
imul
insb
mov
fisttpll
sub
out
sbb
ret
adc
dec
mov
or
leave
jecxz
sub
push
jnp
and
aam
out
adc
and
mov
sub
sti
jb
adc
test
fcoms
ds
sti
outsl
cmp
push
add
lds
out
and
jecxz
hlt
or
dec
dec
xchg
nop
cs
push
jne
lds
mov
xchg
stos
add
mov
mov
jge
inc
cmc
push
scas
jno
cli
or
mov
dec
pusha
sub
stc
pop
mov
sbb
lcall
mov
jmp
dec
call
jp
mov
inc
mov
mov
sbb
push
xchg
sub
das
ret
sbb
jae
stos
lods
cmpsb
push
xchg
or
and
popa
les
push
push
pop
xor
add
cwtl
push
insl
dec
pop
enter
adc
or
imul
xlat
div
jns
ja
std
lret
and
fimuls
stc
adc
aam
outsb
out
out
stos
fbstp
arpl
fwait
lret
repz
dec
out
jecxz
pop
cltd
pop
nop
push
cwtl
mov
sbb
jbe
je
jecxz
and
jle
jnp
jae
js
stc
aaa
xor
or
daa
add
addl
lret
loop
std
dec
out
adc
cmp
mov
stos
push
fdivrs
insb
lret
scas
lret
sub
push
add
cmp
sbbl
sbb
andb
mov
sub
push
aam
inc
dec
clc
push
jg
push
jbe
mov
imul
cmc
xchg
ret
push
test
iret
pop
adc
pop
out
push
cli
fstl
or
add
popa
nop
mov
cwtl
enter
xor
gs
shrl
stc
jmp
and
pop
xor
cmp
bound
cmpsb
dec
pop
lret
mov
cmp
xor
shrb
mov
dec
cli
mov
xchg
xor
ljmp
jb
insb
xlat
idivl
xchg
fildll
cli
jae
or
cmp
pop
jp
xchg
data16
pusha
sub
push
jbe
mov
pop
mov
shr
push
jnp
jno
or
lods
push
pop
loop
fs
movb
popf
loop
sub
loop
xor
adc
movsb
std
push
xchg
imul
js
add
cld
inc
dec
inc
test
add
fcmovne
mov
shlb
jle
notb
dec
sub
aam
push
mov
mov
adcl
lretw
push
stos
xchg
rcl
in
movsb
add
jge
push
insl
int
int3
or
push
rorb
dec
mov
orl
sub
push
cmp
rcr
popf
das
inc
jmp
ret
js
mov
in
add
in
pop
inc
sbb
inc
divl
sub
mov
inc
xchg
xor
push
pop
mov
outsl
pop
bound
aaa
and
lods
jg
ja
into
and
cmp
add
aam
xor
hlt
dec
add
mov
xchg
testb
mov
push
sub
mov
dec
ret
and
dec
fsubs
xor
dec
pop
dec
data16
inc
add
xchg
sub
sbb
add
inc
ret
sti
sbb
movsl
mov
sbb
shlb
inc
and
or
or
xchg
inc
pop
pop
xchg
in
clc
fiaddl
sub
repz
ds
popf
sbb
test
dec
or
sub
xchg
adc
xchg
or
mov
push
sahf
sub
mov
push
xor
insb
dec
push
leave
pop
xchg
js
inc
inc
inc
sub
scas
fstpt
cwtl
fisttpl
test
jns
dec
addr16
push
out
pop
jns
sub
jmp
xchg
lahf
mov
jbe,pt
xchg
popa
xor
fiaddl
jp
aam
mov
and
test
jb
repnz
test
jg
mov
cmpsl
sub
pop
stc
adc
rolb
push
mov
das
push
popf
stos
sub
aam
cmpsl
mov
sbb
dec
xchg
dec
orl
sar
ljmp
xchg
push
fdivrl
pop
mov
sub
xchg
mov
add
mov
movsb
mov
enter
sbb
imul
ljmp
cmp
jmp
jecxz
xchg
add
xchg
xor
testl
add
pop
ss
dec
int3
sub
cmp
mov
leave
xor
sub
lods
dec
sbb
and
mov
test
es
lock
jg
pop
xor
push
cmpsl
fisubs
cmp
mov
lret
xor
ret
rorb
addr16
imulb
add
iret
fwait
out
jo
or
ds
in
inc
jb
outsl
loop
add
scas
or
sarl
pop
adc
mov
scas
sub
int
rorb
mov
repnz
pop
inc
xor
insl
bound
iret
cmp
jbe
push
inc
push
cwtd
and
inc
inc
imul
push
leave
cli
stos
mov
pop
add
cmp
imul
fbstp
inc
push
clc
test
insb
dec
leave
push
jl
jge
pushl
jecxz
add
ds
and
jge
shll
out
mov
fmuls
sub
es
add
and
mov
stc
call
popf
daa
dec
pop
and
jno
cld
mov
xor
xor
inc
aad
in
lods
cwtl
inc
insb
xchg
cmc
rclb
fs
cwtl
out
stos
call
jl
sub
and
sub
sbb
mov
in
loope
mov
xchg
dec
pop
cmp
ss
xor
inc
jg
leave
xor
into
stc
pop
push
mov
cs
jno
mov
ror
cmp
pop
pusha
nop
push
imul
add
in
das
roll
inc
js
pop
or
jb
cmc
jnp
repz
pop
das
test
sarl
out
add
arpl
push
adc
nop
push
fidivrs
mov
jl
stos
in
mov
and
fidivrs
std
and
in
lret
movsl
inc
ficomps
popf
dec
xor
popa
adc
cmpsl
mov
loope
mov
sub
lods
mov
or
push
imul
int3
xor
and
pop
mov
je
push
jnp
mov
jg
arpl
jp
add
or
hlt
repz
stos
jnp
lods
or
fidivrs
push
popa
jnp
sbb
rorb
inc
sbb
in
or
inc
not
cmpsl
ja
loope
fists
mov
sahf
jnp
sub
das
mov
ds
int3
stos
mov
push
rcr
add
cs
cmp
dec
js
adc
lods
xlat
ret
or
arpl
xor
push
cli
or
mov
jle
dec
cmc
stos
cmp
repnz
cmp
mov
cmp
adc
mov
leave
sbb
shrb
test
xorl
xchg
sub
xchg
jle
les
jbe
pop
cwtl
cltd
mov
xorl
lret
xor
addr16
pop
mov
cltd
aad
mov
hlt
pop
mov
pop
imulb
sbb
inc
int
dec
test
push
push
sbb
cmp
mov
xor
pop
mov
pop
outsl
mov
push
add
sub
inc
dec
fsub
stos
adc
xchg
out
dec
imul
rcrb
sub
in
data16
stos
and
mulb
xchg
adc
or
add
push
mov
fidivl
roll
cmp
sub
xchg
or
add
cmp
jge
iret
ljmp
push
andl
xchg
jl
mov
cltd
push
jbe
and
clc
adc
nop
ret
sbb
int
fwait
in
test
pop
mov
movsl
inc
cmpsb
mov
outsl
jl
mov
std
mov
mov
lahf
push
mov
pushf
mov
pop
call
mov
in
jp
repnz
loope
push
dec
mov
repz
xor
cwtl
loopne
mov
in
xor
pop
jl
jmp
pop
add
push
test
cmpb
adc
out
dec
fsubp
scas
xchg
mov
leave
loopne
xchg
add
sub
push
stos
pop
mov
inc
hlt
and
push
xor
pusha
repz
adc
addr16
aad
lsl
sbb
mov
in
aad
rcll
scas
inc
adc
or
notl
in
xor
mov
hlt
in
xchg
push
outsb
imul
cmp
push
lock
mov
es
fdivl
scas
push
dec
dec
add
jp
xchg
test
pop
mov
arpl
addr16
dec
data16
xor
fwait
fwait
adc
push
adc
inc
ja
aad
or
mov
inc
pop
in
lret
test
setb
ret
int
and
xchg
into
dec
cmp
test
xor
data16
lods
repnz
xchg
cs
rcr
dec
mov
fisubrl
test
pop
lahf
pop
in
ficomps
push
mov
sbb
dec
sub
or
idiv
xchg
add
mov
js,pt
xor
adc
sbb
repnz
cmpl
je
loopne
das
pushf
sbb
mov
aam
rorb
fcomps
dec
add
enter
xor
gs
fisttps
xor
jg
add
ror
xlat
unpckhps
pop
rorl
cli
sbb
cmp
lahf
fsts
aam
ret
fcmovnbe
mov
ljmp
notb
scas
or
aam
add
dec
notb
ret
mov
sarb
mov
jb
imul
in
scas
push
out
sub
jg
lods
mov
sub
repz
je
xor
sub
jb
pop
and
out
ret
add
and
cmp
sarb
lods
push
mov
and
pop
mov
xchg
dec
cmpsl
stos
pop
int
sbb
ds
lret
je
push
loope
xchg
pop
sahf
mov
jg
lea
aam
or
push
sbb
adc
sub
insl
cltd
cmpsb
mov
inc
and
sub
movsl
sbb
mov
ja
dec
imul
push
sti
pop
mov
loope
fistpll
ljmp
mov
push
fsubrl
jmp
xchg
popa
cmp
push
jl
mov
adc
pop
fldl
and
leave
imul
rorl
pop
imul
xorl
xchg
gs
adc
mov
and
ret
mov
aaa
leave
inc
dec
dec
mov
sub
movsl
pushf
add
inc
mov
mov
and
mov
jno
dec
push
xorl
test
pop
cmp
cmp
jl
push
mov
fstl
push
rcr
adc
mov
jp
dec
iret
jns
fs
sub
pop
out
mov
adc
pusha
push
fnstenv
xchg
std
xchg
fmull
outsl
cwtl
mov
or
insl
popf
inc
jmp
popa
pushf
dec
outsl
jmp
jbe
repz
xor
jbe
mulb
mov
shrl
mov
pop
shr
inc
add
xor
push
pop
cmp
sbb
fists
loop
jns
jo
push
dec
xchg
into
inc
or
in
add
jb
rcr
mov
dec
and
ss
lds
pop
add
mov
xchg
xchg
mov
jns
aaa
adc
test
fs
xchg
std
rclb
mov
push
mov
sub
das
xor
clc
dec
jb
ret
pushf
mov
es
stos
inc
dec
or
pop
dec
popa
mov
sub
xor
imul
cmp
stc
sbbl
inc
jb
xchg
inc
pop
jno
push
pop
pop
pop
movsl
arpl
mov
enter
and
add
mov
shlb
xor
cmp
scas
pop
add
cmp
mov
dec
scas
or
movsb
iret
dec
mov
push
inc
mov
xor
data16
dec
jb
addr16
xor
setnp
stc
adc
movsl
mov
cmp
daa
mov
xorb
addr16
mov
cs
decl
jns
mov
mov
jae
sub
adc
in
insb
out
push
add
dec
and
push
cmc
xchg
pop
addr16
es
sbb
loopne
out
rcrl
inc
cli
sub
xchg
or
std
std
ret
sub
or
pop
stc
imul
loopne
mov
add
dec
dec
aas
neg
arpl
iret
rclw
xchg
dec
imul
mov
adc
mov
adc
fldcw
xchg
jle
lods
inc
xorl
lods
sub
push
add
add
bound
out
cmpsl
pop
sub
sbb
sbb
pop
aas
xchg
std
cmp
mov
loopew
pop
movsl
test
inc
cmp
or
loop
or
jge
scas
in
sbb
jnp
lods
mov
fstpt
pop
mov
data16
cwtl
mov
pop
adc
ds
rcrb
inc
jno
in
icebp
push
mov
and
ret
dec
bound
enter
pop
call
adc
movsb
fs
inc
xchg
xor
xchg
fs
insl
in
daa
mov
insb
mov
sbb
sub
push
in
push
imul
pop
fisttpl
cmp
into
inc
mov
stos
jecxz
sbb
xchg
nop
sub
mov
pop
lods
out
xor
inc
fists
leave
jge
lds
pop
or
imul
jb
mov
sub
add
shr
rcrb
mov
nop
push
je
jo
clc
and
jns
ret
add
mov
outsb
ffree
clc
les
sbb
push
scas
repnz
dec
out
mov
inc
add
inc
pushl
add
mov
adc
sbb
push
test
adc
jns
rolb
inc
cmpsl
push
or
inc
mov
movsb
inc
mov
cmp
rol
lret
ds
sub
cs
mov
call
inc
int
push
xor
jecxz
scas
push
push
and
jo
scas
xor
mov
das
cwtl
jns
adc
je
fldl
cmpsl
sub
mov
mov
jo
sub
mov
add
mov
lar
sbbl
lcall
and
lds
xchg
aas
arpl
push
call
aad
rolb
sbb
out
mov
sub
sbb
call
lcall
sbb
mov
int3
mov
mov
mov
in
andl
xor
loope
ret
jne
jnp
leave
fwait
sahf
out
pop
fs
fidivrl
lret
cmpsl
lret
inc
jmp
jno
xor
add
mov
jge
mov
in
mov
and
fs
jbe
lods
push
jmp
sub
mov
mov
jo
pop
and
out
leave
pop
shll
fcomp
and
pop
loop
sbb
and
ss
xor
inc
sub
test
icebp
sbb
popf
outsb
jae
rcll
fildll
fdivrl
lret
inc
fistpl
xor
xchg
stos
mov
popf
stos
ja
add
or
xorl
loop
xor
daa
popa
adc
xchg
dec
xlat
divb
dec
hlt
pop
iret
ljmp
in
xor
cmp
mov
lods
movsb
mov
mov
pop
out
imul
pushf
notl
out
adc
xchg
jl
gs
repnz
shl
push
xchg
or
fs
in
aas
je
imul
cwtl
mov
out
aaa
icebp
mov
lods
xchg
ljmp
lock
mov
imul
jp
aas
jae
adc
add
outsb
sti
mov
inc
decb
insb
shrb
shlb
cmp
stos
jle
push
sub
sti
lret
in
dec
aaa
add
lods
cmp
pop
mov
mov
fwait
int
rclb
pop
pop
sbb
je
cmp
lods
jae
subl
je
aam
xchg
lds
addb
and
nop
orb
sub
mov
sti
dec
or
xor
mov
mov
or
push
inc
xchg
pop
inc
fimuls
inc
push
xor
fisubs
das
xor
inc
movsl
jle
mov
xchg
and
aam
shrl
jl
mov
mov
xchg
mov
adc
ss
outsb
push
in
xchg
test
aaa
add
rcl
and
fildll
cli
aad
mov
mov
push
cmp
lret
into
dec
cmp
int3
iret
sbb
xchg
push
das
out
and
mov
nop
shrl
jmp
leavew
enter
lret
sti
dec
xor
cmpsl
mov
sub
fistpl
mov
jp
stc
and
add
shl
mov
insl
pop
and
scas
fiaddl
shll
movsb
ljmp
mov
fninit
sbb
sbb
jecxz
pop
jno
and
fmuls
cld
repnz
xchg
dec
out
dec
add
outsl
hlt
cwtl
pop
adc
cld
jecxz
aam
popa
mov
push
scas
mov
faddl
fs
fs
inc
inc
test
xlat
or
loop
addb
or
mov
jl
cmp
cwtl
jo
adcl
push
add
dec
adcb
cmpl
mov
scas
out
dec
sub
shl
xor
fwait
dec
sub
pop
in
sub
jo
pop
and
or
mov
sahf
mov
aas
cs
std
icebp
hlt
inc
add
repz
pop
add
xor
pop
test
cmp
scas
int
xchg
aam
repz
or
or
into
shlb
mov
sub
mov
xchg
mov
leave
std
shlb
inc
jmp
pop
mov
je
sub
pop
loopne
sbb
clc
outsb
insl
push
nop
nop
lret
sbb
stos
xor
jns
mov
cwtl
std
shlb
roll
bnd
xchg
orl
xchg
sbb
dec
dec
push
rcrb
jo
outsb
pop
jle
jecxz
negl
out
dec
addb
das
imul
mov
pop
push
sub
mov
shlb
cmp
add
dec
ficoms
mov
adc
pop
ljmp
addr16
dec
xlat
adc
fiadds
das
leave
mov
stos
divl
shlb
jl
pop
leave
cmp
hlt
inc
jo
loop
xor
daa
icebp
mov
hlt
mov
jle
or
inc
add
push
or
orl
dec
push
je
int3
imul
adc
clc
cmpsl
cmp
mov
lret
pop
test
lds
data16
push
mov
cwtl
sub
bound
int3
insb
loop
and
aas
popa
sbb
pop
inc
out
test
sub
sbb
ss
addr16
rclb
addl
push
push
push
jae
int3
repnz
mov
jns
shl
and
roll
decl
shl
mov
xchg
cltd
pop
xlat
loop
rcll
xchg
sub
xchg
cmpsb
push
fs
fsubs
std
mov
popa
inc
outsl
ret
push
mov
aad
stos
jno
sub
and
icebp
test
xchg
ja
outsl
mov
sbb
sub
les
pop
jae
les
arpl
cwtl
push
dec
mov
repz
cmp
je
jle
dec
lods
pop
lsl
cmpsb
fidivl
loop
inc
andb
inc
lret
mov
js
and
jmp
adc
lret
lret
push
lret
cmp
and
cmp
add
or
out
mov
mov
into
jg
mov
scas
fwait
adc
and
test
push
jge
xchg
das
or
mov
inc
push
push
cli
rorl
cs
add
loope
dec
pop
stos
mov
mov
mov
dec
mov
rclb
rorl
push
xchg
jne
mov
aad
out
xor
pop
push
mov
scas
enter
imul
jo
aas
xchg
idivl
jg
stos
testl
push
ds
ss
scas
sbb
or
subb
lret
lahf
lock
in
or
enter
rcrb
shll
daa
fdiv
stos
or
lock
adc
push
mov
mov
repz
ljmp
mov
lock
pop
in
cmp
clc
add
or
jl
enter
and
loopne
jmp
xor
jnp
add
sti
sbb
out
push
xchg
xchg
out
addr16
xor
cmp
dec
or
xchg
idiv
fisubl
outsl
testl
push
lds
das
ffreep
dec
pop
adc
loop
adc
mov
push
repz
out
fcompl
pop
adc
push
xor
xchg
fstl
adc
jbe
rcr
jb
cli
mov
loope
xchg
ja
imul
nop
dec
cmp
fnstcw
xchg
scas
xlat
mov
fldenv
inc
dec
xor
int
adc
push
xchg
push
and
arpl
push
lds
cs
add
addr16
stos
test
xbegin
rorl
shl
xchg
movsl
mov
jno
mov
shll
imul
xchg
ja
out
shll
push
sbb
or
call
in
js
hlt
in
es
inc
sti
stc
mov
pop
sub
rcll
shlb
inc
push
mov
dec
ret
mov
fxch
dec
fxch
sbb
or
adc
inc
and
push
addr16
mov
divl
sahf
imul
push
outsb
movsl
cmpsl
out
test
and
xor
out
sub
sub
filds
sbb
pop
mov
inc
mov
xchg
pusha
or
js
imulb
dec
or
out
arpl
jb
push
sub
xor
mov
sbb
and
mov
nop
or
xchg
dec
jl
les
xchg
mov
pop
lock
xor
mov
xchg
mov
ljmp
xchg
mov
xor
int3
pop
xchg
subb
cs
clc
inc
jne
add
dec
fbstp
subb
adc
push
or
push
and
sbb
pop
lods
mov
mov
jl
adc
xchg
cs
xor
mov
and
loop
mov
add
add
mov
mov
cmp
in
mov
lock
outsb
imul
jns
push
sub
push
sbb
movsb
pop
inc
test
int
mov
jecxz
pop
aam
cs
and
aas
call
add
es
ljmp
adc
sub
jecxz
pop
je
sub
stos
test
mov
mov
sbb
sub
adc
mov
xchg
mov
dec
xor
movsl
cmp
push
inc
outsb
test
adc
das
inc
iret
adc
and
dec
inc
adc
shlb
or
push
inc
cmp
repz
popf
xlat
xor
dec
sub
add
sbb
insl
sbb
notb
nop
mul
dec
inc
cmp
push
jmp
icebp
scas
inc
jle
sbb
test
out
inc
sub
sbb
jg
xchg
in
jl
pop
loopne
clc
mov
cld
rcrl
xor
std
andl
and
mov
imul
xchg
jp
sbb
and
jbe
int3
pop
pushf
sub
mov
aaa
xchg
dec
clc
repnz
adc
aaa
cmpsl
mov
je
or
call
jl
in
cmp
nopl
mov
mov
mov
mov
mov
sarl
jmp
xchg
xlat
mov
sub
gs
and
dec
xchg
inc
cmc
stos
arpl
cmp
fimull
sub
call
mov
enter
add
test
out
sarl
dec
stc
sbb
loopne
xchg
ljmp
cmc
mov
xor
lea
in
or
xchg
sbbb
jp
dec
test
mov
dec
popf
cli
jno
sbb
enter
pop
cmp
cld
inc
lret
jl
sti
cmpsl
scas
pop
jmp
lods
testl
and
leave
mov
cmpsl
or
scas
cli
xlat
stos
add
mov
cs
and
xor
xchg
ret
mov
outsb
sub
mov
fidivrl
outsl
data16
sbb
movsb
or
aad
cmp
rcrb
ljmp
push
inc
sub
or
or
push
or
add
add
pop
and
rolb
stc
pop
lahf
push
aaa
mov
mov
push
mov
js
dec
aas
loope
daa
shrl
mov
dec
dec
jns
mul
cvtpi2ps
cld
lock
ljmp
sub
mov
mov
aam
pop
int3
roll
jae
xor
orl
xchg
les
jle
cltd
daa
xchg
or
shrb
cli
add
enter
aam
add
rorl
xchg
sbb
sbb
outsb
insl
ds
dec
sti
mov
cmc
movsb
add
ss
mov
data16
jns
out
ftst
inc
je
jbe
lahf
in
add
iret
mov
pop
add
outsl
imul
jbe
xor
in
and
sub
adc
test
adc
nop
and
mov
mov
lods
shll
lret
and
adc
inc
jle
fwait
cwtl
bound
jmp
lret
loop
jecxz
jae
pop
repz
sbb
ja
mov
inc
jns
sbbb
jl
in
faddl
popa
shlb
loopne
div
mov
mov
lods
iret
push
mov
je
pop
jmp
int
inc
pop
arpl
jecxz
and
pop
aas
push
jb
bound
subl
adc
xchg
repnz
or
iret
rcl
out
insl
pop
cmp
out
mov
dec
mov
dec
ret
or
cli
pushf
insb
sbb
das
xchg
shlb
lcall
xchg
sbb
or
sti
cmc
push
lahf
sub
gs
imul
mov
lods
enter
xor
mov
mov
inc
popa
ds
add
xchg
add
xchg
push
imul
fcoms
sub
hlt
push
inc
mov
test
outsb
jno
or
mov
insb
popf
jge
stos
and
or
sbb
lret
lock
mov
adc
push
add
lods
call
push
xchg
mov
sbb
and
sbb
test
mov
mov
or
sbb
andl
or
adc
cmpsb
lods
test
adc
out
gs
inc
cmp
stos
int
test
imul
inc
rcrb
add
filds
js
inc
icebp
dec
gs
ret
daa
pushf
fstpl
hlt
mov
inc
cmpl
out
pop
push
jmpw
addl
lds
push
int3
imul
repz
icebp
fadd
sub
pop
test
bound
arpl
mov
push
sbb
inc
iret
aas
add
fnsetpm(287
mov
dec
imul
insl
leave
mov
imul
mov
sti
pushf
pop
es
test
ja
movsl
out
imul
sub
mov
xchg
js
gs
xchg
push
sbb
dec
stos
out
in
adc
jp
loope
and
stc
and
dec
loope
rorl
aaa
ds
les
cmp
stos
add
xor
int
push
inc
std
or
pop
sbb
cmp
add
shl
getsec
and
xor
loope
adc
test
aam
icebp
cmp
in
jmp
mov
sbb
jmp
or
sbb
stc
mov
add
cmp
pop
int3
stos
stc
xorl
xlat
push
fldt
mov
fbld
pop
mov
movsb
inc
sbb
pop
incl
jns
jmp
xchg
shrl
sbb
pop
push
imul
lret
fisttpl
xorl
cwtl
adc
lods
mov
dec
or
pop
ljmp
xor
adc
int
dec
ljmp
push
mov
ret
int3
sub
pop
mov
sub
sbb
dec
shll
mov
or
lahf
das
pop
in
shll
push
or
jmp
jnp
ja
pop
loop
ficompl
dec
add
and
mov
stc
jecxz
xchg
inc
out
mov
jo
and
sub
jo
fimuls
pop
fst
adc
shrb
scas
pop
jnp
cmp
popa
xchg
clc
jns
adc
jle
fiaddl
iret
out
mov
repz
mov
aam
jns
mov
fstpt
test
inc
xor
jmp
xor
insb
and
pop
add
xchg
adc
jle
jmp
add
ficompl
or
jecxz
and
push
addb
sarb
push
mov
insb
jne
xor
testl
jp
cwtl
xchg
mov
mov
je
mov
sub
clc
movsl
rorl
decb
push
leave
hlt
pop
cmp
or
sub
xchg
scas
and
jbe
xchg
cmp
inc
push
xchg
cmpsl
cmp
ret
mov
mov
outsb
cmp
sub
cmp
pop
lret
xor
jne
or
adc
sub
mov
xlat
imul
call
mov
dec
dec
pop
mov
jo
in
sub
pop
pop
daa
pop
add
lret
pop
jg
lods
ljmp
ja
inc
inc
add
inc
inc
xchg
xlat
jbe
lea
lahf
repnz
xchg
add
lods
inc
add
and
push
mov
cmpsl
pop
addr16
insl
cmpsb
addr16
pop
pop
bound
mov
pop
ret
stos
mov
cmc
data16
sub
insb
ja
scas
cmp
stos
int
outsl
sub
xor
sbb
call
xor
mov
jae
cmp
jae
aam
cmp
push
das
out
aaa
in
inc
rcrl
and
cmp
dec
and
mov
pushl
push
cld
cld
ds
jge
pop
stc
outsl
xor
jbe
add
in
pop
jb
lahf
dec
mov
jb
adc
into
scas
adc
add
sahf
neg
dec
dec
mov
or
mov
xchg
sbb
and
bound
jl
test
mov
aam
insl
and
pop
or
jle
std
jne
icebp
mov
push
daa
add
jno
ljmp
addr16
rcr
out
dec
sbb
lret
jmp
and
ret
pop
jge
ljmp
lret
subb
pop
fs
push
fimull
mov
cld
pop
xor
sbb
scas
sbb
add
add
movsl
movntq
and
mov
imul
rorb
insb
mov
sub
gs
mov
push
dec
pop
addl
aam
mov
xchg
lock
cmp
push
lock
cli
frstor
cmp
test
sti
lcall
sub
imul
push
pop
pop
inc
out
jbe
das
inc
adc
jno
movsb
xor
sub
dec
push
xchg
adc
push
pop
jp
fildl
mov
mov
div
or
out
and
xchg
dec
stc
mov
xlat
push
addb
arpl
adc
inc
outsb
dec
pop
int3
mov
cltd
lea
adc
inc
sub
add
adc
sbb
or
or
jo
pop
push
inc
mov
dec
jge
in
in
mov
push
mov
enter
les
mov
jb
popa
cld
push
xchg
outsl
and
mov
xor
jl
aaa
sahf
popf
mov
xchg
jecxz
or
dec
out
rcr
push
inc
shll
loopne
pop
js
fwait
and
addl
cmpsb
clc
push
mov
test
loopne
mov
xor
cmp
hlt
lock
int
cmc
cli
adc
scas
mov
or
add
xchg
inc
inc
mov
rorl
sti
lods
push
js
adcl
in
add
mov
cmp
aam
xchg
mov
mov
hlt
add
xchg
cwtl
in
lret
test
jp
push
xchg
in
into
push
push
out
xchg
in
push
cwtl
or
jp
ret
test
mov
aas
jns
fidivl
jnp
or
push
aas
shlb
and
jg
pop
mov
push
sbb
jge
lods
adc
inc
stc
or
xchg
fmulp
jne
roll
mov
lahf
xlat
mov
xchg
lcall
shrl
inc
xchg
mov
cld
add
add
wbinvd
cmp
adc
fs
xor
adc
mov
fisubs
sub
adc
xlat
add
inc
lcall
cli
enter
in
outsb
lods
out
stos
xor
aaa
mov
enter
push
xlat
inc
arpl
enter
sub
push
cmpsb
ret
dec
popf
fstpl
push
mov
cli
push
sub
aad
dec
scas
cmpsb
pusha
incb
enter
or
in
mov
push
inc
imul
xlat
fs
out
add
xchg
push
fcoms
das
jge
fwait
inc
add
or
ret
add
jecxz
push
in
jle
cmp
dec
sti
mov
lods
sub
and
jmp
cmp
sbb
test
adc
sub
in
fnsave
sarl
and
popa
nop
push
out
xor
xchg
add
jno
ljmp
fisttps
mov
jns
dec
cltd
imul
repz
add
push
xchg
clc
stos
fsqrt
inc
lret
mov
std
xorb
mov
push
cwtl
or
cmp
jb
inc
aad
ja
xor
stos
mov
sub
or
inc
inc
inc
mov
loop
icebp
dec
xchg
push
xchg
mov
push
or
stc
div
dec
mov
and
pusha
push
daa
mov
aad
sysret
sub
aas
cmp
adc
inc
dec
out
jl
and
mov
enter
ret
rol
ret
ja
cs
movsb
movsl
aam
rcrb
hlt
mov
fsubs
int3
int
or
sti
jp
mov
rcl
xchg
movsb
cmp
mov
or
in
and
lds
cmpsb
div
inc
sbb
mov
in
dec
push
in
push
sub
stos
popa
pop
enter
lock
cmpl
loop
mov
push
push
lcall
or
inc
stos
out
sbb
clc
shll
loop
cmpsl
shrl
mov
mov
adc
stos
pop
ss
push
cmc
cltd
outsl
jp
sbb
push
popf
push
icebp
ss
xor
and
dec
fwait
ds
xchg
fsubrp
popf
inc
mov
ret
inc
sbb
xchg
mov
add
cmc
scas
clc
push
push
inc
leave
push
sets
sbb
mov
mov
adcl
and
fwait
push
pop
cwtl
push
jg
xchg
mov
leave
or
into
aam
pop
lea
fcoml
mov
sahf
das
sahf
and
outsb
adc
sub
inc
and
jle
imul
movsb
scas
xor
push
call
movsl
mov
xor
js
or
pop
jb
call
jge
push
rolb
pusha
push
loopne
jle
shl
sbb
negl
jns
movsb
add
shll
xchg
imul
shrl
divl
sub
and
mov
push
adc
fcomps
add
sub
mov
sub
xor
int3
hlt
xor
add
pop
sub
xor
jmp
xchg
pop
push
iret
aad
cltd
jmp
std
stos
xchg
and
das
lret
testl
push
icebp
push
sbb
jns
mov
xor
sub
xchg
clc
sarb
xor
gs
sbb
popf
fcoml
lret
mov
mov
cli
shlb
push
pop
insb
pusha
test
movsl
cld
test
mov
or
pop
mov
addb
into
ss
dec
jp
cmpl
mov
pop
aas
pop
pop
ljmp
aas
enter
pop
add
daa
jl
push
push
icebp
and
sarb
xlat
pop
jb
in
daa
xchg
out
scas
xchg
rorl
pop
sub
std
inc
mov
mov
inc
xchg
jecxz
fisttps
and
sub
xchg
lret
mov
adc
xorb
pop
inc
loop
mov
mov
push
ficompl
dec
into
and
in
addr16
sub
xor
jmp
movsl
sbb
push
int3
xor
push
aam
pop
sub
adc
mov
in
into
int3
xchg
push
arpl
daa
cmpsb
sbb
mov
pop
nop
inc
pop
add
dec
adc
cmp
pop
xchg
sub
sbb
inc
rolb
sbb
xlat
xlat
push
mov
xchg
sahf
jne
mov
adc
test
faddl
and
jp
and
sub
xor
dec
pop
jge
inc
movsl
js
jns
pop
aas
xlat
test
push
push
adc
mov
iret
pop
gs
push
shll
xor
mov
adc
mov
mov
inc
andb
xor
jg
pop
enter
lcall
push
imul
aas
jmp
xor
pop
rcll
xor
std
adc
inc
pop
fwait
enter
lcall
inc
cld
js
pop
xor
jno
mov
sbb
popf
cs
xchg
cmp
mov
mov
push
popf
aaa
ljmp
xor
imul
out
cmp
mov
jns
cmpsl
repnz
jno
mov
sub
mull
mov
mov
ret
inc
int
aas
push
adc
or
rcll
xor
nop
sub
imull
lods
xchg
pop
out
push
xor
ljmp
pop
xchg
dec
add
mov
sbb
ss
push
es
shlb
sub
mov
lea
mov
dec
add
xlat
rcrl
sub
jb
xor
je
push
out
icebp
or
les
mov
push
push
scas
out
lret
test
ret
mov
push
mov
loopne
and
pushf
std
cmp
jg
imulb
and
jmp
inc
stos
popf
pop
lret
xor
mov
aam
nop
dec
jp
inc
xchg
repz
ret
loop
sti
call
push
std
test
or
in
or
ja
aad
bound
cmp
das
fs
jp
push
aas
add
inc
sbb
pop
jge
push
xor
cmpsl
pushf
sub
xchg
add
je
divb
jmp
lea
jo
cltd
ljmp
test
lea
rclb
test
lea
lds
push
adc
push
and
aad
pop
lds
shl
lods
fbld
mov
imul
sti
xchg
xchg
test
mov
or
ljmp
stos
lahf
rclb
jnp
xchg
cld
push
dec
pop
out
jae
aam
enter
cmpsl
sahf
jb
int
mov
outsb
jecxz
out
fs
lea
les
arpl
adc
sti
or
jmp
dec
cmp
cwtl
pop
adc
cmpsl
inc
and
xor
lahf
daa
call
lds
aad
pop
mov
jle
mov
lds
stos
pusha
cltd
aas
sub
pop
mov
ret
inc
das
dec
cli
fst
mov
and
ror
ja
adc
cmpsb
cli
clc
icebp
js
int
loop
pop
scas
mov
xor
mov
dec
or
das
scas
mov
sub
fists
incb
push
mov
and
xor
dec
test
cmp
add
fwait
pop
das
mov
pop
mov
pushl
push
adc
subl
sbbl
jo
push
pusha
into
int
jnp
mov
ja
scas
lcall
fstps
cmp
mov
and
sarl
xchg
and
cmp
out
mov
xchg
jp
sub
test
call
xchg
sbb
leave
xchg
addr16
cmp
jecxz
lret
push
add
cwtl
mov
ret
mov
push
push
jle
cmp
and
jge
inc
sti
pop
lahf
xlat
dec
test
xorps
sub
xchg
lds
clc
addb
aam
jns
dec
xor
adc
or
sub
jmp
clc
shlb
pop
inc
add
outsb
das
cmp
test
xor
adc
sbb
outsb
aam
mov
dec
inc
pop
sub
and
sub
das
xor
sbb
out
mov
rclb
pop
das
dec
mov
sbb
sub
inc
cmp
xchg
push
pop
sahf
aad
es
cltd
repz
jge
mov
lret
es
xor
cmp
xor
lret
loop
aam
movsb
jnp
mov
push
mov
sub
imul
test
loop
xchg
xchg
icebp
insl
mov
mov
inc
dec
mov
out
movsl
xchg
das
loop
ljmp
mov
pop
mov
mov
fnstcw
aas
lea
lahf
ror
in
ljmp
out
ss
sub
gs
jns
jno
mov
mov
push
mov
stos
jl
nop
sti
nop
test
test
add
mov
mov
cld
cmpsb
mov
iret
lods
sub
inc
jp
pushf
mov
addr16
sbb
xor
or
sbb
out
iret
sar
mov
push
add
ret
sbb
fwait
jmp
push
add
mov
into
cmp
add
jns
xor
or
fstps
add
jnp
xchg
sbb
adc
mov
xlat
and
out
clc
and
mov
push
xor
cmp
mov
movsl
mov
fsincos
fcomip
iret
mov
adc
jecxz
or
and
je
and
jnp
int
popl
pop
in
xchg
arpl
int
ja
lahf
push
frstor
jp
sbb
jl
mov
pop
daa
add
ds
fcom
mov
dec
push
or
addr16
mov
ficompl
or
aam
xchg
inc
push
pop
dec
out
sti
pop
lods
in
add
mov
inc
pushf
loop
mov
loopne
in
sarl
push
lcall
or
sbb
mov
dec
dec
jbe
or
loope
and
cmpl
add
out
push
gs
gs
loope
cld
pop
pop
popa
cs
dec
roll
sub
sbb
punpckhwd
es
inc
dec
xlat
jp
jo
push
idivl
pop
nop
imul
popl
dec
enter
cmp
cmc
push
cli
or
sub
xor
sbb
inc
mov
mov
test
sahf
xchg
ret
sysexit
and
inc
das
and
sub
mov
lods
in
lods
mov
inc
std
xchg
mov
mov
addr16
lods
or
xchg
test
popa
xchg
out
mov
hlt
repz
and
push
ja
mov
adc
mov
call
aad
inc
fsubrs
pop
ret
jecxz
aaa
lret
lcall
fwait
or
fldcw
imul
ja
or
test
xchg
cld
adc
pop
ss
jge
test
mov
flds
insb
cmp
jo
cmp
cmp
imul
and
lds
jmp
dec
outsl
test
stos
ljmp
or
lock
and
lret
in
adc
pop
aaa
sub
xchg
xchg
ss
fadds
ret
or
data16
mov
inc
call
mov
data16
pop
hlt
sbb
jle
xchg
pusha
mov
ret
pop
mov
pop
and
notl
push
mov
push
fldl
fwait
and
jns
scas
adc
jp
shll
lret
leave
xchg
jo
fcmovne
insb
jle
jne
orl
inc
int3
push
test
cmp
lds
loop
mov
sub
xor
mov
mov
leave
in
fsub
leave
jg
jp
pop
and
scas
call
negb
jecxz
mov
push
and
clc
shll
mov
ret
sub
sti
iret
in
inc
mov
clc
xchg
pop
fnstcw
aas
mov
ja
adcl
or
movsb
cmpb
mov
int3
inc
add
add
jecxz
addl
mov
subb
xor
push
adc
fnstsw
outsb
jle
adc
jno
int3
push
cmpsl
and
ret
cmp
andb
xor
mov
shlb
adc
outsb
mov
sub
stos
and
test
xchg
xchg
xchg
pop
cltd
mov
test
ja
jbe
fidivrs
dec
lea
push
mov
ljmp
jbe
and
or
sbb
xchg
add
cmp
ja
xchg
and
test
insl
sbb
arpl
imul
xchg
jo
pop
sbb
and
push
cmp
stc
in
push
jl
add
cmp
or
jb
ret
daa
or
ret
ljmp
cmp
push
inc
orb
nop
sbb
aaa
repnz
insl
sbbb
mov
outsb
loop
xor
test
cmp
frstor
in
pop
loop
xchg
aas
or
push
sub
sbb
or
push
imul
roll
lcall
rolb
jmp
sbb
jbe
inc
dec
push
sbb
and
pop
dec
and
xchg
dec
nop
imul
xor
scas
and
popf
shl
dec
pusha
push
lcall
scas
push
cmp
leave
xchg
dec
shrl
adc
stos
sti
fcoml
dec
mov
sub
cmp
xor
or
imulb
sahf
mov
es
repnz
pusha
add
push
cmp
das
sbb
pop
xorl
rorl
inc
pusha
xchg
loope
aaa
inc
mov
and
ret
pusha
lea
shrb
inc
stos
sub
push
cmpsb
dec
jno
add
pop
add
mov
cltd
mov
aaa
sub
xlat
mov
and
xchg
xor
loop
mov
stos
fbstp
pop
hlt
push
or
mov
sbb
xchg
jmp
out
mov
js,pt
pop
mov
xor
cmp
pop
push
js
fdivs
out
loop
gs
test
mov
inc
inc
into
punpckhwd
decl
test
js
add
jg
jb
mov
and
enter
xchg
mov
shrl
imul
xchg
jbe
aaa
push
fmulp
sub
in
xchg
sbb
in
add
sarb
daa
push
jge
popf
mov
xchg
fbstp
repz
call
lahf
ret
sbb
pushf
inc
pushf
mov
jno
lahf
cwtl
negl
fwait
jg
clc
pop
fucomp
xor
sub
pop
orl
and
cmp
mov
stos
int3
lret
cmpsb
push
push
push
push
xchg
mov
sub
dec
xchg
shrl
xor
pop
or
aam
mov
push
xchg
mov
pop
push
add
adc
pop
out
mov
dec
push
repnz
jbe
inc
out
jmp
test
adc
gs
dec
arpl
add
negb
leave
loop
add
xor
scas
aas
cwtl
pop
xchg
hlt
xchg
mov
xchg
adc
mov
addr16
add
movl
mov
cmp
es
pop
fs
imul
dec
subb
jo
jno
aaa
test
call
repz
lret
pop
jecxz
orb
ja
test
sub
or
leave
push
loop
out
shll
push
mov
jno,pn
push
cmc
mov
cwtl
or
push
xor
mov
sub
push
mov
mov
push
stos
or
dec
xlat
mov
popf
testl
lahf
xor
fldz
jg
add
call
leave
xor
push
mov
push
cmpsl
je
mov
fcomps
xchg
popa
inc
rolb
ja
jnp
sti
and
rcrb
addr16
pop
idivb
cmp
jo
imul
adc
jmp
or
inc
jo
or
pop
imul
cmp
inc
dec
jmp
es
loop
add
jbe
and
push
xor
xchg
add
mov
xor
xor
mov
sub
lods
ret
leave
or
repz
sub
mov
pop
test
outsb
pop
dec
xor
push
xor
dec
lea
inc
out
inc
in
outsl
add
lods
aad
xchg
outsl
mov
hlt
lret
out
pop
xor
scas
push
iret
jg
inc
jmp
fiadds
rcr
insl
add
cli
sbb
mov
rcl
scas
xor
xor
add
das
sti
cs
je
push
push
ljmp
inc
lcall
push
inc
lds
dec
pop
jnp
sbb
cmp
dec
mov
pop
les
loopne
adc
dec
pusha
xor
loope
imul
xchg
daa
mov
fs
pop
push
andb
cmp
push
insl
jle
cmc
movsl
scas
sbb
pop
hlt
jmp
psadbw
dec
jb
push
out
mov
jb
sub
and
js
cmp
loop
repz
ds
sub
ret
movsb
pop
shl
pop
movsl
xor
or
adc
mov
lods
jae
or
mov
or
test
fists
push
mov
push
inc
jnp
mov
in
or
xlat
push
mov
mov
mov
push
cmp
sarb
int3
leave
sub
mov
jl
ss
into
jge
insl
xchg
xchg
stos
cmp
push
lahf
and
push
fnstcw
loope
push
iret
sbb
push
inc
outsl
leave
mov
and
std
sub
jae
lods
xor
sub
xlat
sahf
out
rcr
addr16
test
sub
inc
testb
movsb
sub
movsl
ss
xchg
jmp
popf
js
lods
outsl
pop
nop
inc
push
fmulp
dec
shlb
push
push
ret
into
daa
push
outsl
arpl
jbe
adc
mov
mov
mov
inc
pushl
xor
mov
scas
adc
add
lods
or
dec
jno
js
fnsave
in
in
push
mov
loope
sbb
mov
or
inc
jmp
inc
pop
sbb
aam
cmp
imul
loop
mov
dec
imul
xor
push
loopne
push
cmp
mov
insl
aad
test
call
bnd
scas
lods
repnz
xchg
rolb
lea
jae
out
xchg
xor
sub
ja
cwtl
xor
cmp
les
aaa
in
mov
mov
add
mov
xor
popf
mov
push
add
pushf
sub
addr16
mov
and
cmp
rol
neg
xchg
int3
or
iret
push
stc
and
cmp
int3
ret
mov
loopne
xchg
jb
add
cwtl
movsl
jbe
test
jae
fnsave
fwait
negb
mov
push
ret
je
lods
xor
outsl
insb
fisttps
xchg
bound
push
imul
push
aad
xchg
fnstsw
cmp
stc
or
fimuls
outsb
fisubs
cwtl
jp
int3
std
dec
dec
xor
mov
js
out
or
pop
jecxz
std
aas
add
and
jmp
or
repz
mov
jmp
add
mul
outsl
dec
mov
dec
jl
scas
test
lret
std
jle
push
or
popa
add
test
sbb
mov
push
pop
jnp
xchg
sbb
push
push
test
mov
in
jno
xchg
lock
ret
push
sti
fwait
push
jnp
pop
movzbl
roll
xchg
cltd
lret
push
ret
mov
test
loopne
out
aad
jae
xlat
lds
or
mov
out
fisubs
push
loope
pushf
andb
test
cltd
in
testb
xchg
cmp
lods
repnz
pop
xchg
aam
ffreep
fwait
xchg
and
or
sub
pop
push
incb
mov
push
mov
xchg
arpl
imul
push
inc
jmp
mov
nop
cmc
inc
add
and
sub
sbb
mov
pushf
sbbl
push
sahf
int3
mov
shr
int3
daa
pop
push
ss
jne
mov
shrl
std
cmc
xor
ljmp
pop
sbb
nop
int
jbe
lods
lea
sbb
arpl
and
shl
push
div
sbb
loopne
nop
adc
adc
jl
and
inc
xor
pusha
add
lret
and
int
sti
and
icebp
adc
cmc
inc
das
or
xor
jmp
mov
repnz
fwait
push
push
in
inc
pusha
fcmovnbe
lods
pop
cmp
mov
sub
push
push
scas
iret
xchg
test
xchg
mov
xchg
mov
mov
adc
mov
and
and
mov
flds
adc
sbb
iret
pop
shrb
push
repnz
mov
jp
and
dec
stos
idivl
loope
dec
xor
pushf
orl
mov
dec
adc
leave
jbe
lock
push
push
scas
jmp
cwtl
or
push
xchg
xor
loope
ret
enter
scas
ds
lret
fsubl
dec
pop
inc
jne
or
push
xchg
add
mov
mov
mov
mov
push
push
addr16
cmpsb
push
iret
ret
dec
mov
inc
andb
sahf
pop
pop
dec
xchg
jb
bound
cmpsb
loopne
add
das
mov
testb
xor
loope
jnp
push
sub
mov
mov
clc
ror
fcom
add
dec
fwait
mov
scas
inc
cltd
rorl
and
nop
out
lds
xchg
mov
sub
outsl
cmp
xor
xlat
and
cmp
dec
inc
and
scas
rcrb
outsl
lds
rol
dec
push
test
sbb
rcll
xchg
dec
push
mov
loop
incb
xchg
outsl
insl
lock
lock
arpl
ja
cwtl
pop
or
out
mov
add
dec
mov
mov
jae
mov
xlat
xor
cmpsl
lock
mov
cli
pop
gs
stc
and
lahf
mov
aaa
xchg
jb
rclb
sbbb
sub
mov
fnstenv
scas
stos
cld
incb
mov
test
mov
sbb
mov
inc
ss
xlat
or
add
mov
mov
mov
or
icebp
fucomp
mov
loop
incb
lods
mov
sub
roll
ss
jne
outsl
movsb
movsl
aad
fisubl
xor
out
fmuls
andl
or
jecxz
outsb
lret
push
mov
add
das
cwtl
mov
mov
lds
push
jo
adc
sub
hlt
xchg
es
push
add
outsl
leave
arpl
bound
mov
aad
hlt
fs
fdivl
xor
push
cmp
adcb
push
pop
push
cld
and
and
fucomi
movsb
push
xchg
lods
into
add
movsl
lret
jnp
push
movsb
int3
mov
popf
sub
mov
lret
xlat
adc
scas
dec
adc
mov
cmpsl
push
nop
mov
and
xchg
fidivrs
popa
push
arpl
ficoml
pop
out
ret
gs
popa
es
fs
cmp
xchg
and
loope
imul
cmpsb
pop
pop
jae
adc
sahf
sub
inc
out
and
dec
push
cmp
dec
inc
or
jmp
fistps
sub
f2xm1
shll
adc
data16
mov
xor
pop
es
sahf
unpcklps
daa
bound
cmp
pop
push
repnz
outsl
and
std
xchg
pop
cmp
mov
ret
rclb
cltd
and
stos
adc
sub
mov
xchg
in
ljmp
jno
jle
pop
sti
add
dec
jb
movsl
ret
js
lock
lods
enter
jnp
push
ds
xor
adc
jns
cmp
cmc
xchg
hlt
mov
into
or
inc
lahf
sub
fcmovnu
aad
mov
sbb
cmp
xchg
enter
out
mov
and
sbb
dec
arpl
jecxz
push
ja
jmp
and
mov
aaa
or
nop
inc
aaa
pop
or
dec
ds
lea
push
cltd
xchg
in
or
scas
nop
cmp
mov
mov
dec
ror
andb
mov
sbb
in
orb
and
pop
cmpsb
mov
mov
pop
gs
jge
ds
enter
iret
fnstsw
or
inc
add
inc
or
push
je
jnp
jge
cmpsl
mov
add
dec
fstpt
jmp
adc
flds
outsb
fldenv
mov
cmp
or
enter
cmpsb
mov
add
cmp
push
xchg
es
roll
lods
mov
adc
rorl
adc
lret
add
xlat
push
movsl
pop
inc
stos
enter
sub
and
sbb
out
push
jnp
or
cmp
or
pop
mov
in
or
mov
pop
jmp
pop
les
sbb
inc
mov
add
scas
jne
push
xor
imul
pop
add
div
mov
jae
inc
test
cli
imul
scas
xchg
movsb
jne
data16
fnstsw
lea
mov
jl
shll
mov
and
stc
jecxz
cmp
mov
fisttpl
scas
cmp
jno
adc
out
jg
test
call
push
mov
jle
push
clc
jmp
pop
mov
movsb
sub
mov
and
rorl
mov
test
push
sbbb
js
fildll
xchg
jge
xor
loope
push
lods
es
or
cwtl
out
or
cli
imul
mov
dec
lea
mov
data16
fnstsw
cmpsl
lock
pop
stos
sub
idivl
mov
stos
adc
push
sub
or
cmc
push
ret
inc
cli
leave
pop
pop
mov
jmp
adc
jge
cwtl
dec
sub
xchg
mov
lds
xchg
fidivs
sbb
adc
stc
xor
loopne
mov
or
push
nop
fcoms
nop
cltd
sub
je
mov
lds
push
and
xchg
scas
mov
push
jnp
js
xchg
jbe
mov
ret
push
mov
insb
stos
in
int
sub
mov
dec
rcrb
or
insl
subb
pop
es
outsl
xchg
popa
jno
adcb
push
xchg
pop
sub
xorb
fsubs
push
fcmovnb
outsl
in
hlt
mov
mov
sbb
call
jae
mov
cwtl
xor
mov
push
fcmovne
xor
cs
int
sub
test
popa
cmp
cmp
std
outsl
mov
pop
mov
cmc
cmp
and
cmp
movsl
fcmovnb
jb
cmp
cmpsb
fistps
stc
push
rclb
arpl
mov
xchg
fucom
xlat
and
test
push
mov
sub
js
push
xchg
lock
fs
pop
inc
xchg
and
cmp
cmc
notb
jbe
inc
add
rcll
and
dec
jmp
pusha
adc
scas
mov
es
cld
ficoms
xor
iret
sub
pop
icebp
je
ja
fcmovb
testl
mov
jb
sbb
fcmovnbe
shlb
ljmp
aad
ljmp
pusha
push
jge
mov
pop
subb
cmp
fs
call
cmp
adc
xor
push
cmp
test
ljmp
mov
jnp
xchg
xor
inc
mov
dec
inc
pusha
mov
test
sahf
out
test
and
or
mov
fdivs
jle
xchg
jp
lods
xchg
cli
xor
and
xlat
mov
pop
dec
gs
mov
es
push
jp
xchg
loope
add
jle
loop
nop
cmp
dec
sub
sbb
mov
test
dec
xchg
jp
push
ss
cli
bnd
stos
inc
loopne
out
jns
xchg
call
orb
sbb
cmp
ja
mov
dec
xchg
sub
jg
cmp
fldt
addl
adc
mov
push
dec
adcb
mov
mov
jno
pop
or
popf
loope
mov
test
lock
xor
jg
sub
jno
push
xlat
inc
jecxz
mov
or
fldl
or
mov
shlb
lcall
sbb
jle
jne
mov
mov
lcall
shrb
mov
and
pop
aas
xchg
pushf
outsl
mov
fmuls
mov
jecxz
ss
orl
incb
pop
mov
mov
insb
xor
mov
cld
in
fwait
test
and
jge
push
jnp
mov
data16
cmp
inc
mov
clc
test
sbb
dec
fnstsw
sub
arpl
push
mov
xchg
jle
push
and
pop
mov
pushf
dec
cwtl
or
sbb
je
and
mov
imul
push
aas
cmp
enter
mov
shrl
cmpb
inc
sbb
mov
add
es
pop
cmpsb
mov
xchg
insl
movsl
cmpsb
xor
mov
mov
call
mov
mov
sti
push
mov
sbb
sub
jle
mov
cmp
xor
stos
or
pop
fwait
or
push
frstor
lods
pop
sbb
inc
ret
aaa
repz
push
inc
lods
jl
sub
ja
mov
xchg
xlat
lret
cmp
mov
pop
lahf
or
sbb
mov
popa
stos
push
and
lods
cmp
scas
testl
clc
pop
or
leave
push
ror
push
and
jecxz
rolb
sub
mov
sub
aad
mov
pop
popa
xor
dec
int
aad
aaa
fwait
lahf
inc
sub
mov
jmp
xor
dec
hlt
pop
cmp
xor
imul
xor
ficoml
aas
sbb
fnstsw
mov
imul
dec
jmp
adc
cmp
test
nop
sarl
push
fsubr
orb
add
inc
int3
mov
mov
mov
scas
aam
inc
lret
test
inc
dec
mov
shrb
mov
fs
add
in
pop
adc
mov
dec
cmp
push
adc
and
pushf
inc
pop
or
push
daa
lods
jmp
pop
mov
js
daa
fwait
push
lock
imul
movsl
and
mov
xorl
cld
push
adc
mov
sbb
jns
fimuls
addl
mov
pop
mov
fldl
sub
or
gs
outsl
mov
icebp
pop
scas
dec
frstor
dec
pushf
fisubrl
push
lahf
movsb
imull
inc
js
xchg
aas
clc
lret
out
stos
nop
pop
jo
dec
xlat
add
push
sahf
pop
add
cmpsl
loop
fwait
mov
xor
imul
mov
xlat
xor
inc
xlat
std
loopne
clc
mov
mov
jb
xchg
in
nop
iret
out
insl
js
out
inc
and
sarb
cli
shr
xchg
pop
cltd
neg
into
push
add
mov
sahf
mov
lock
jnp
jnp
fs
addl
dec
add
ret
inc
int
imul
adc
or
or
pop
cmpsl
jb
insl
adc
cmp
fldenv
std
pop
xchg
push
push
mov
mov
test
icebp
es
lods
jl
test
cmpsl
xchg
pop
xor
mov
xor
ss
add
enter
nop
lret
sbb
push
add
movsb
test
inc
outsb
mov
mov
push
push
insl
daa
int
xchg
repz
std
pop
add
lea
add
mov
cmc
xlat
fldt
cmp
or
inc
sub
xchg
sbb
xlat
insl
xor
mov
movsl
enter
mov
push
mov
imul
jo
pop
push
jmp
daa
frstor
pusha
pop
repz
inc
mull
jno
and
dec
xchg
jg
and
sti
sbb
sub
popf
or
out
dec
add
loopne
lods
roll
lods
iret
lret
jge
repnz
ret
fwait
xchg
testl
mov
push
mov
or
js
cmp
xchg
mov
out
xorb
jle
dec
lds
mov
or
push
jge
mov
xchg
mov
mov
aam
nop
push
lea
mov
inc
mov
push
xlat
iret
mov
pop
jge
stc
cmp
fcomp
cwtl
add
fidivs
enter
sbb
cltd
jge
das
lods
int
pop
inc
sbb
hlt
inc
std
add
out
rorl
lods
push
lea
sarl
icebp
adc
shrl
jb
mov
mov
add
pop
lds
int3
aas
adc
jecxz
mov
shll
outsb
cmpsl
mov
jo
jecxz
mov
sub
xchg
pushf
pop
inc
arpl
lds
ficompl
fnstsw
or
fwait
testb
mov
ror
out
or
sbb
jp
into
push
dec
mov
int
pop
jp
sub
pop
pop
dec
lret
sbb
arpl
mov
test
inc
add
mov
push
push
fwait
add
dec
mov
cmc
or
push
cmovns
mulb
push
jnp
pop
std
xor
pop
push
cmp
push
jo
in
addr16
fwait
out
stos
je
hlt
xchg
shl
push
test
les
psraw
ljmp
pop
pusha
inc
jbe
cmp
add
adc
sti
or
jmp
mov
rcll
sbb
dec
inc
push
adc
inc
cmpsb
ffreep
jle
jae
pop
outsb
adc
xor
xor
in
pop
cltd
push
dec
sub
xchg
fcomp
xchg
dec
jg
or
sub
mov
je
push
cmp
shrl
add
stos
lret
cld
imul
jg
mov
sbb
pop
fs
bound
dec
mov
mov
aaa
dec
je
inc
pop
xor
pop
lods
pop
daa
sbb
lret
sub
push
add
adc
fs
add
or
mov
cmp
mov
xor
jb
imul
xor
rcll
imul
lret
pop
pushf
nop
cltd
sbbl
clc
imul
fnstenv
aam
xor
dec
int
mov
pusha
shll
popa
leave
sbb
cs
inc
and
dec
outsl
ficomps
es
push
jp
testb
lret
mov
out
arpl
cmp
ret
and
pop
jg
mov
sub
mov
pop
icebp
int3
mov
sbb
sbb
jge
jne
outsb
push
sti
loop
or
push
dec
jmp
sbbb
out
cmp
cld
fwait
mov
lahf
clc
pop
push
xor
xor
xchg
sahf
stos
sbb
fstp
lret
sarl
cmc
cmpsb
addr16
mov
js
scas
sbb
daa
and
jno
lret
xor
sub
jmp
and
sbb
xchg
cmp
cmpsl
es
or
dec
adc
orl
bound
or
cli
scas
fisubrs
lret
shll
or
dec
pop
xchg
adc
fucomp
dec
jns
push
mov
adcl
adc
jnp
aam
in
cmpl
andb
jbe
push
jnp
popf
adc
push
cmpsl
lahf
sub
orb
mov
fsub
aaa
jecxz
pop
icebp
into
lea
js
jcxz
push
adc
mov
jp
xor
dec
add
xor
jle
adc
mov
cltd
ret
sub
mov
rcrl
addr16
mov
adc
adc
loope
cs
sarb
int3
jae
sub
enterw
xchg
aas
and
xor
push
mov
add
scas
loopne
sbb
mov
rolb
or
xchg
dec
push
pop
cmp
stos
rcrl
jge
aad
and
cmp
mov
call
or
ss
cwtl
mov
fmulp
sbb
mov
cmp
cltd
xchg
loopne
cmp
sbb
sub
dec
lret
aad
and
decl
dec
cmp
jns
in
insl
mov
mov
lea
cmp
or
pop
jns
cld
pop
mov
or
scas
and
es
sbb
jne
push
test
insl
mov
mov
js
cmpsb
push
lock
push
mov
sbb
mov
push
out
sbb
inc
adc
jecxz
xchg
scas
sbb
lahf
out
lea
daa
dec
out
out
and
das
pop
sbbl
jecxz
ja
push
xor
aaa
fists
sub
mov
fistps
mov
push
mov
push
cld
dec
jle
mov
mov
or
push
in
xor
adc
aas
rcrl
std
pop
sbb
cmp
jl
sbb
or
lds
cmc
sbb
mov
add
cmpb
outsl
loop
inc
add
cmpsb
jecxz
sbb
push
jno
and
bound
xor
cmpsb
adc
jmp
adc
pop
xor
ja
fisubrs
loop
lret
mov
pop
mov
or
xor
addr16
or
dec
aam
adc
sub
ret
and
fcompl
sub
call
ljmp
push
sub
jns
push
sbb
lods
mov
iret
push
mov
data16
xor
jge
lcall
adc
pop
sub
jp
jnp
jecxz
pop
movsb
outsl
cwtl
add
xor
and
mov
push
lds
xor
xor
adc
mov
inc
movsl
mov
jns
cltd
mov
push
lods
dec
js
outsl
clc
ffree
dec
out
push
mov
nop
test
adc
pop
int3
xchg
sbb
hlt
jl
mov
push
in
fs
xchg
lcall
dec
in
push
xchg
aaa
sub
fldenv
mov
push
and
sti
rorb
adc
mov
insb
cld
bound
xor
pop
pop
xchg
or
in
xchg
inc
icebp
push
mov
std
add
dec
pop
jb
dec
scas
bound
outsl
fs
or
mov
repz
and
fbld
xor
pop
adc
mov
dec
jle
ss
jle
add
adc
jae
xor
inc
sub
adc
dec
out
dec
cmc
adcb
or
pop
and
xor
jmp
and
jge
fcoms
jle
or
sub
fcoml
push
jge
sbb
and
jns
mov
and
loope
inc
dec
sub
push
pop
jne
mulb
pop
mov
sbb
dec
or
ficoms
cltd
lret
sbb
xor
cli
and
dec
aas
sahf
loope
mov
jp
sbb
stos
lcall
mov
and
mov
out
lahf
outsb
xor
fcoml
fdivrs
or
push
cwtl
les
jns
cltd
jle
mov
pop
out
xrelease
inc
sub
das
pop
sub
sub
aaa
and
mov
sub
pop
push
fisttpl
fadd
nop
sub
fs
lret
mov
or
xor
popa
mov
test
xor
je
sbb
dec
mov
stc
fsts
and
mov
loopne
jg
jo
inc
dec
pop
mov
xor
lods
push
ljmp
mov
jmp
push
out
fwait
sti
lods
fs
cmp
aam
dec
adc
in
xor
std
fs
in
mov
jmp
mov
dec
sbb
out
sbb
leave
ficomps
inc
mov
fdivs
in
outsl
cmpsl
rorb
ret
popa
xchg
sbb
push
pop
andl
std
xchg
out
push
dec
and
and
loop
xchg
popf
xor
cmp
push
adc
cmp
and
cmpsb
pop
in
pusha
sub
xchg
ss
and
inc
add
jb
out
pop
push
cld
or
mov
stos
ret
pop
pop
jmp
sbb
fwait
mov
shrl
mov
inc
aas
cwtl
out
dec
jo
cli
popa
imulb
out
orl
fwait
mov
dec
out
push
gs
cmp
push
mov
cmp
les
fldt
pusha
shl
lock
cmc
jle
int
pop
push
test
gs
and
out
cmp
popa
ret
sub
mov
lods
sub
movsb
test
add
xor
mov
test
jo
xchg
mov
ss
sub
cmp
or
aam
sub
je
jae
or
xor
push
mov
jne
xchg
xchg
jge
insl
fcmovnu
stc
sub
mov
ficompl
pandn
ljmp
sub
jmp
rorl
lret
sbb
jbe
adc
sub
and
ret
fs
xor
insb
cmpsb
jmp
pop
adc
mov
dec
sbb
inc
js
or
pop
jno
mov
inc
sbb
sbb
jns
jg
push
mov
in
sbb
fldcw
ret
cmp
adc
pop
inc
jae
push
out
ss
inc
lahf
in
xor
adc
iret
insb
negl
add
rolb
mov
or
shll
outsl
loopne
shr
out
mov
mov
loopne
pop
mov
int
push
push
add
adc
jbe
stos
push
mov
mov
mov
das
sti
ffreep
add
jp
out
sarl
pushf
ja
cmp
sti
ret
fdivs
dec
cmc
test
dec
jle
mov
and
stc
ret
fldcw
pop
mov
or
fldenv
add
cmp
into
push
call
pop
imul
loopne
repz
insb
aaa
mov
out
add
js
adc
sub
mov
sub
dec
sub
or
pop
std
mov
and
sbb
out
addr16
bound
cwtl
and
fwait
iret
fsubp
daa
jae
jnp
ficompl
inc
mov
cmc
pop
test
xchg
stos
push
flds
mov
iret
sbb
and
inc
sub
xor
xchg
movsb
sub
xor
dec
mov
cli
push
sub
aad
lret
add
stos
shlb
int3
clc
inc
icebp
daa
sub
cmp
mov
popf
or
pop
jne
push
jbe
je
xor
add
xor
and
push
pop
pop
aas
push
mov
push
mov
jecxz
outsb
and
mov
test
mov
jnp
clc
and
mov
push
jns
cmp
loop
por
jnp
push
push
push
cli
lret
leave
fsub
sbb
mov
out
in
fldenv
mov
adcb
xchg
ret
mov
vmptrst
cmc
push
fs
enter
mov
push
and
mov
xchg
pop
loop
sbb
pop
dec
sti
cmp
ret
mov
pop
mov
push
fwait
arpl
mov
or
jae
cmp
push
icebp
ret
hlt
xchg
push
cmp
mov
sti
and
and
nop
stc
pushf
push
repnz
insb
lods
sbb
jne
push
jno
mov
push
mov
mov
pushf
cmp
cltd
lea
bnd
divl
lret
rcrb
mov
xor
push
lret
outsl
scas
aam
sub
dec
test
add
push
cltd
sbb
adc
cli
enter
mov
mov
xchg
stc
xor
ljmp
popa
jle
mov
mov
push
rcll
nop
xor
jg
ja
inc
sbb
lods
push
pop
xor
adc
pop
add
sarl
jae
cmp
int3
lret
push
subl
loop
cmp
hlt
xorl
mov
pop
mov
ljmp
jbe
inc
xchg
mov
cmp
cmpsl
xor
jge
int
mov
ljmp
notb
mov
dec
hlt
inc
dec
stc
outsb
imul
sub
fidivl
fisubrl
out
jae
nop
cmp
sub
push
pushf
movsb
jns
push
cmp
mov
push
es
lods
or
data16
nop
dec
enter
and
dec
cmp
ja
dec
sub
stos
adc
insb
pop
mov
loopne
sbb
aas
addr16
xlat
adc
cmc
dec
dec
std
iret
dec
lahf
lret
out
inc
mov
int3
or
sub
imul
inc
jo
loop
xchg
int3
hlt
insb
adc
push
mov
das
rclb
ljmp
shrb
inc
xchg
cmp
bound
jmp
out
cmp
cmp
or
stos
in
pop
imul
rcrb
filds
inc
xchg
mov
inc
fsin
jb
fiaddl
aas
inc
repz
fmuls
enter
repz
mov
jns
and
xchg
pop
aaa
or
mov
fwait
cld
cmp
cs
cmp
call
or
sbb
pop
addr16
add
hlt
xor
repnz
popf
js
pop
sub
jp
jl
insl
xor
out
int
adc
jcxz
je
sub
sbb
lret
xchg
cmp
out
adc
mov
jmp
mov
mov
je
idivl
jg
pushf
imul
les
cmp
inc
add
mov
jl
inc
jne
aam
mov
or
mov
jo
dec
dec
fs
mov
adc
int
jl
and
push
out
fildl
add
xchg
xor
out
cltd
add
sub
repnz
in
dec
jl
and
xchg
jmp
sub
js
cmpl
test
dec
sub
out
jb
cli
cmp
xchg
push
roll
loop
adc
push
sbb
dec
pop
add
iret
imul
mov
ljmp
mov
pop
or
lret
add
stos
sub
mov
and
div
jbe
mov
pop
mov
sub
sbb
xchg
inc
push
push
and
jb
aam
sub
adc
or
jp
sub
xor
cmp
push
ret
imul
sub
leave
jo
and
sbb
int
fs
popa
sub
and
or
pop
xchg
fisttpll
lods
and
insb
fadds
ja
dec
insl
jle
outsb
dec
jg
ss
int3
jnp
push
and
andb
sub
bound
mov
push
xchg
and
outsl
xchg
xchg
jle
fsubrl
cmpsb
cmp
push
xor
mov
dec
ljmp
sarl
or
test
decl
jbe
jae
test
add
and
xlat
std
push
pusha
jge
adc
inc
cmp
lea
jecxz
sbb
and
mov
data16
sbb
lcall
scas
pop
xchg
fistl
mov
pushf
inc
les
cld
punpckhdq
subl
iret
das
adc
sbb
cmovb
mov
es
imul
inc
je
cmpsb
scas
int
jbe
inc
adc
aaa
sub
out
notl
xchg
jnp
dec
pop
lds
xchg
stos
daa
xchg
sbbl
xchg
or
insl
ret
mov
aad
cmp
push
sahf
out
daa
add
shll
dec
mov
lret
addr16
jne
les
sub
loope
ja
jb
cmp
xor
mov
out
scas
xchg
fucomi
out
adc
push
add
aas
rcrl
fucom
lret
je
push
bound
jmp
xor
xor
jge
out
mov
xchg
negl
sbb
pop
out
lahf
and
mov
shl
pop
pushf
jmp
cmpsl
sbb
mov
mov
out
outsl
test
push
pop
adc
pop
or
aas
and
mov
inc
dec
sbbb
insl
pop
jb
add
sbb
dec
adc
shr
adc
sbb
lods
shr
mov
test
add
lods
js
adc
mov
subb
mov
out
adc
cli
fiaddl
into
aas
outsl
ret
decb
push
les
add
cmp
std
movsl
pop
popa
jns
stos
stos
out
loopne
xchg
cmc
and
lret
je
mov
jmp
and
jo
jg
xor
mov
iret
orl
in
call
lahf
mov
insb
ds
ljmp
std
adc
out
mov
inc
ljmp
pop
imul
push
and
aas
cltd
mov
mov
out
jle
jecxz
cmp
xlat
ret
js
push
pop
ret
xchg
cmc
or
out
fwait
add
in
sbb
repnz
dec
mov
adc
jne
push
xor
xchg
pop
insl
mov
push
js
mov
jl
aaa
ja
cli
cmp
jl
cmp
and
push
bound
and
lock
or
xchg
mov
ror
repnz
popf
jae
fstl
cmc
rorl
and
sahf
xchg
xor
fcmovb
mov
sti
cmp
adc
xlat
hlt
dec
insl
push
add
je
inc
fs
cmp
pop
cmpsl
addr16
jmp
ficompl
aam
movsb
mov
dec
loopne
loop
outsl
out
insl
ret
fistps
lods
push
into
jns
jl
bound
popf
cmpsl
push
inc
scas
mov
mov
pop
jo
rol
push
pop
fldl
stos
jne
inc
test
dec
aad
iret
adc
cmp
mov
sbb
cltd
adc
jns
pop
and
repnz
bound
pop
push
data16
push
scas
mov
jb
cs
pop
fildll
mov
dec
aaa
add
xchg
addr16
std
inc
test
jmp
sbb
cmpsl
adcb
loope
jmp
nop
std
test
aas
in
lret
cmp
insb
or
or
xor
out
jmp
lods
pop
insl
or
lret
and
das
pop
mov
fmulp
in
mov
outsb
jo
repz
jbe
mov
or
daa
out
scas
push
rol
lods
je
stc
sahf
shl
cmp
ss
cmp
fidivs
sarb
lcall
and
out
clc
into
movsl
es
enter
imulb
inc
int
cmpsb
out
loopne
xlat
inc
xchg
shrl
lock
adc
add
mov
and
ret
test
lahf
mov
lcall
in
in
pusha
hlt
push
mov
pop
out
xchg
mov
into
sti
inc
gs
pop
sbbl
imul
icebp
pusha
inc
cmp
xchg
mov
pop
aas
sti
dec
jp
andb
pusha
outsl
dec
sub
push
cmp
stc
mov
ja
or
jp
outsl
mov
push
lock
shlb
adc
outsb
adc
int3
lock
mov
aad
pop
mov
xor
and
stc
mov
jns
dec
and
add
ret
or
test
mov
xchg
jmp
xorl
sbb
fwait
jmp
cmpsb
fcoms
add
out
gs
pop
test
xor
movd
bound
mov
sbb
inc
into
fistpl
xchg
adc
adc
shrl
dec
ds
and
or
ja
push
sbb
cmc
in
ret
mov
and
sahf
mov
sub
loopne
mov
es
in
jge
push
out
fcoml
adc
jle
jae
subl
dec
xchg
clc
lret
mov
jne
dec
lret
into
xchg
mov
fildll
js
into
popa
jnp
aas
mov
xlat
scas
iret
cltd
popa
out
mov
mov
jp
cmp
mov
ror
jmp
popl
dec
dec
data16
xchg
mov
adc
mov
dec
pop
loop
das
loop
cli
xor
ficoms
and
inc
hlt
cmp
enter
movsb
scas
lock
xchg
lock
test
arpl
aas
xor
cmp
jne
xor
xor
pop
in
fisttpl
std
fdivrl
adc
cmp
mov
or
lret
arpl
mov
or
jge
xor
fs
mov
dec
pop
xchg
dec
jne
pop
fcmovnb
push
xor
adcl
dec
fimull
jno
das
jb
mov
lret
sbb
pop
sbb
add
aam
pop
int3
insb
dec
adc
push
dec
fbld
cmp
shr
fs
sti
and
pop
mov
sub
cltd
mov
xchg
es
pop
imul
arpl
rcll
inc
loopne
xor
mov
out
pushf
negb
mov
arpl
or
cmp
xor
cmp
and
adc
fcompl
repz
test
or
fsubrs
das
sbb
sbb
jbe
jmp
xor
sub
xchg
jl
inc
sti
jns
sti
xabort
pop
cmp
xor
ficompl
inc
cmpsl
mov
push
pop
push
mov
or
in
lahf
fsts
xchg
pop
adc
add
es
test
arpl
xchg
xor
out
add
insl
rclb
jecxz
testl
nop
lahf
ja
nop
push
xchg
sbb
jl
push
jl
outsb
push
jmp
sub
sbb
jg
std
pop
les
mov
sub
mov
incl
jno
or
ret
sbb
idiv
pop
sub
sbb
dec
pop
in
lret
cmp
mov
mov
push
stc
arpl
popa
mov
cwtl
pop
fisttpll
cmpsb
fwait
shll
ret
adcb
roll
mov
inc
mov
push
movsb
adc
add
push
rcr
inc
jno
addr16
jg
mov
mov
and
xor
jno
add
push
jl
or
push
adcb
lds
hlt
int
out
xchg
dec
sub
leave
sub
and
push
sbb
lods
stc
scas
bnd
gs
mov
lods
mov
xchg
ss
fwait
jae
sti
addr16
in
xchg
sub
xchg
add
pushf
rcrb
sbb
push
notb
popa
rolb
fstpl
or
insb
push
pop
lret
movsl
jg
mov
push
into
jle
aad
mov
ret
jnp
add
in
mov
out
popf
mov
mov
pop
insl
pop
arpl
adc
mov
lods
out
mov
jmp
push
pop
dec
dec
lret
inc
sbb
loop
and
mov
sbb
and
flds
push
in
sub
fwait
inc
pop
aaa
gs
pop
sub
out
jb
sub
jbe
js
jl
mov
test
jnp
in
push
inc
dec
shl
out
ficoml
outsb
aad
lret
push
bound
popa
jbe
mov
add
push
mov
xchg
jns
roll
inc
and
add
gs
repnz
pop
in
ljmp
sarl
sbb
stos
mov
xchg
mov
sahf
cmp
test
call
in
out
mov
push
inc
lea
inc
pusha
xchg
out
sbb
push
outsb
xchg
sbb
pushl
andl
in
jbe
pop
lods
sub
mov
or
jge
sub
mov
xchg
push
inc
imul
pop
das
xor
insl
pop
jle,pt
outsb
push
adc
cltd
mov
ds
xor
xchg
call
js
xchg
jecxz
mov
aas
movsb
loope
fsubrs
imul
cmp
mov
xchg
js
incb
or
jp
cmp
sub
push
adc
push
mov
or
and
or
adc
lahf
mov
stos
jge
fiadds
rorb
xchg
jg
inc
daa
andb
test
mov
mov
xchg
daa
mov
push
jo
faddl
lahf
mov
dec
add
out
cmpsb
loope,pt
insl
inc
xchg
dec
mov
inc
iret
icebp
add
repnz
dec
pop
xorl
lock
sub
or
les
cmp
pop
cmp
xor
enter
and
dec
fiaddl
xchg
xchg
inc
cld
and
cld
cmpsb
rcl
repnz
pop
pop
push
jbe
call
aaa
pop
mul
push
push
adcb
js
cmpsl
dec
cmp
or
ss
cmpsb
insb
add
out
cmp
push
iret
push
pop
insb
retw
lret
gs
ss
in
cmp
shl
cld
test
mov
mov
jl
pop
and
push
fcoml
cltd
push
cmp
les
dec
ds
test
jnp
or
lods
lods
std
fwait
sub
cli
sub
shl
cwtl
aad
data16
pop
mov
leave
das
push
push
repnz
mov
insb
shll
sti
popa
fnsave
negb
or
pop
push
mov
lods
mov
fisubrl
test
arpl
dec
xchg
aas
xchg
loopne
sbb
mov
push
xorb
dec
inc
lcall
mov
insl
fidivrl
inc
and
fwait
pop
shrb
pop
fildl
xchg
push
inc
push
mov
fistpl
xorl
aad
inc
add
add
inc
shlb
insl
je
movsl
test
push
or
mov
shll
or
clc
faddl
fs
xlat
fs
cld
push
cmp
pop
pop
xor
mov
xchg
cmp
and
mov
jle
cli
mov
repnz
lret
dec
mov
jo
das
and
inc
push
mov
sbb
cmp
mov
iret
sbb
mov
jae
or
inc
jge
les
push
add
adc
and
ds
mov
xor
aam
std
push
jp
mov
mov
mov
push
push
mov
test
test
cmc
cltd
repz
mov
xor
loop
ljmp
sbb
inc
cwtl
fs
jp
ja
lret
push
and
sub
pop
xor
dec
cmpsb
out
inc
mov
adc
jp
push
mov
hlt
cli
add
pop
dec
out
dec
jb
push
in
cmp
rcrb
jg
or
stc
add
js
sub
mov
loop
lea
sahf
mov
xchg
ja
sahf
adc
popf
aam
fisttps
cltd
adc
or
push
repz
adc
sub
stos
aam
fmul
stos
aam
or
rcrl
jns
push
ror
psubsw
mov
add
mov
xchg
dec
enter
imul
mov
shlb
loopne
mov
xor
inc
push
sahf
and
test
lea
jmp
shrl
jg
divl
mov
adc
imulb
fwait
popa
mov
fistps
jbe
xor
mov
cli
aad
xchg
sbb
rcrb
fcom
xchg
pop
dec
clc
pop
scas
adc
jl
imul
outsl
jae
mov
xor
cltd
loope
pop
mov
pop
push
iret
dec
imul
or
sbb
insb
inc
mov
ljmp
inc
mov
jl
pop
lahf
and
jno
xchg
rclb
adc
xchg
xor
sub
dec
stos
and
pop
fs
jle
jmp
cmp
aaa
mov
std
xorb
jp
sti
sub
sarb
push
int
jns
jbe
inc
or
outsb
cld
fistpl
dec
js
mov
inc
sbb
sub
dec
adc
rcll
lods
aaa
xchg
lea
jl
scas
xchg
bound
into
xchg
add
inc
pop
dec
mov
repz
or
dec
push
addl
sub
das
xchg
and
data16
hlt
inc
push
mov
jmp
repz
test
cmp
ret
xor
cmp
iret
inc
xor
insl
dec
mulb
test
shr
and
or
adc
cmp
test
xor
ljmp
aas
mov
insb
cs
mov
inc
sarb
jmp
jbe
js,pt
mov
int3
inc
adc
bound
and
out
dec
push
jno
sub
sub
jle
icebp
repz
in
sbb
mov
xchg
movsb
adc
addl
inc
mov
jo
dec
pop
and
xchg
ret
ret
mov
std
ss
cmp
push
mov
scas
int
lock
test
cmpsl
mov
pop
sbb
add
rcrl
jge
mov
and
sbb
outsl
mov
call
adc
clc
lcall
or
add
sbb
inc
in
sbb
fistps
popa
xchg
fildl
das
lods
lcall
subb
lock
xchg
loop
lret
add
test
ret
test
jnp
mov
sub
jae
sub
aad
test
jge
mov
jp
adc
fadds
daa
jmp
xchg
pop
adc
push
xchg
mov
es
out
fisubrs
sbb
xchg
outsb
mov
dec
or
imul
or
imul
lods
mov
xor
in
shlb
push
xchg
and
lock
sub
lcall
and
or
frstor
outsb
push
xchg
xchg
inc
mov
mov
mov
lcall
mov
jb
dec
dec
sub
stos
dec
gs
dec
adc
cld
aam
xchg
gs
lret
mov
cli
push
inc
push
ds
mov
jg
push
rcrl
data16
mov
ret
out
push
rolb
mov
xchg
cmp
push
pusha
adc
loope
insb
cwtl
adc
sbb
pop
stos
jg
rol
dec
enter
js
movsb
sub
or
push
adcl
adcl
mov
pop
and
aam
aad
movsb
loop
aaa
pop
push
cmp
adc
xchg
xor
xor
mov
int
out
adc
popfw
lret
sbb
loopne
mov
leave
xor
in
mov
sbb
test
add
cmp
add
std
cmc
test
aad
dec
adc
lcall
jle
push
movsl
jge
xchg
pop
xchg
js
inc
mov
ss
xlat
sub
dec
mov
dec
adc
mov
add
or
add
mov
in
fdivs
lock
les
mov
push
es
imul
sbb
scas
int
adc
sahf
push
push
aas
aaa
and
sub
insb
bound
adc
jmp
adc
push
mov
sbb
shrb
mov
subl
inc
jo
mov
test
mov
inc
js
cmc
mov
inc
adc
fsubr
in
adc
fisttps
sbb
xchg
jbe
cmpb
std
lods
aam
leave
mov
adc
leave
jnp
mov
das
orl
pop
and
jne
es
xor
imul
adc
or
shl
push
outsb
jl
mov
xor
int
arpl
aas
insb
andb
sub
inc
jle
lea
inc
lret
leave
stc
push
sub
push
shll
test
cmpsl
in
jmp
dec
cld
scas
mov
add
jmp
insl
dec
inc
je
sub
cmc
push
popa
sub
dec
enter
call
mov
cmpsl
sahf
in
mov
call
xchg
in
xor
push
fists
jno
scas
mov
mov
insb
mov
mov
repz
jnp
dec
jnp
call
insb
sub
nop
fildl
mov
outsb
loope
or
mov
xchg
sti
inc
sub
cld
out
ficoml
fs
mov
pop
imul
lret
aam
daa
or
jae
add
test
addr16
cmpsb
pop
outsb
pop
rorl
pusha
fsubs
xor
icebp
sbb
outsl
dec
xchg
mov
out
adc
sub
xchg
or
lods
pop
xor
mov
shlb
int3
pop
lods
mov
sti
jns
xchg
push
or
or
dec
lahf
js
mov
test
psrad
movsl
outsb
popf
fldl
out
push
loop
and
shrl
iret
lods
shl
jp
lods
fstl
push
pop
jp
jnp
and
cmpsb
or
xchg
jno
enter
sub
mov
ljmp
lcall
xchg
out
ja
loopne
sahf
popa
mov
loope
mov
xchg
dec
or
sbb
mov
cmp
enter
mov
adc
jbe
sbbl
shl
or
cwtl
fbld
shlb
out
inc
or
insb
out
fdiv
pushf
jnp
ret
mov
cmp
jmp
mov
xchg
mov
in
mov
nop
inc
xor
or
jle
insb
ja
aam
xor
mov
cmpsb
pop
scas
sub
mov
xchg
imul
mov
pop
clc
shlb
mul
hlt
xchg
xchg
bound
fdivrs
mov
mov
mov
jge
popa
stos
and
out
int3
pop
xor
xor
adcb
arpl
cmc
lds
addr16
cmp
out
loop
shr
retw
lods
mov
aam
adc
shlb
shll
push
les
add
movl
add
fcoms
xor
movsl
push
mov
dec
stc
ja
insb
lahf
or
jno
test
pop
jecxz
outsb
cmp
push
push
adc
or
popf
imul
lods
aad
pop
push
scas
pop
repnz
dec
xor
test
pop
push
andb
out
pusha
push
inc
roll
pop
adc
dec
inc
xchg
mov
addr16
sarb
cltd
shr
add
icebp
mov
push
pop
in
gs
fldl2e
cltd
push
ret
push
subb
push
xchg
dec
xchg
jne
ficompl
aas
ss
loopne
sub
outsb
add
into
fs
jae
add
and
into
in
inc
cmp
fistl
mov
lea
sbb
out
inc
movsl
aaa
or
cld
test
nop
inc
or
cmp
test
mov
fidivl
and
mov
mov
mov
sahf
insb
xchg
rclb
fwait
pop
ljmp
std
or
pop
aas
int3
xor
push
fwait
xchg
sub
orb
and
sub
and
or
imul
mov
int3
cmpsl
jl
xchg
outsl
addr16
shlb
int
out
mov
inc
pushf
lock
push
inc
cmp
xchg
hlt
roll
xchg
sahf
inc
fsubs
or
cwtl
adc
sbb
mov
xor
jle
jmp
dec
or
adc
cmpsl
xor
xorb
dec
fmulp
fisubrs
std
js
pop
enter
xchg
cmpb
xorb
popf
xor
xchg
inc
hlt
dec
xorb
cwtl
cmpl
pop
ljmp
cli
scas
mov
push
andl
lods
pop
dec
ljmp
xor
sar
icebp
loope
jbe
testb
mov
push
sbb
fwait
xchg
add
cltd
or
cli
adc
pushf
xchg
xorb
ja
fwait
sti
loope
fsubrp
cmp
lock
pusha
mov
les
js
stos
push
or
fldl
rorb
cmp
add
cmp
push
push
outsb
sub
ja
push
popa
xchg
movsl
dec
in
icebp
leave
sbb
mov
mov
fmull
test
fisubrs
dec
xchg
pop
pop
lds
aaa
dec
and
cmp
stos
inc
add
mov
stc
xor
rcr
add
mov
push
pop
mov
pop
iret
dec
les
subb
xchg
cmp
in
loopne
fidivl
pop
test
pop
mov
addb
test
adc
lcall
cmc
repnz
xor
rcrb
xor
mov
cmpsb
popf
xchg
xchg
pop
pop
test
imul
imul
lods
pop
scas
popa
addb
and
inc
mov
arpl
movsl
adc
mov
sub
ds
cmp
fstl
mov
cs
mov
test
cmp
scas
adc
sahf
pop
popl
adc
enter
loop
push
pop
jno
or
outsb
popf
cmp
xchg
fwait
cmp
daa
xorl
dec
adc
cmp
shlb
ret
rorl
jg
inc
addb
out
mov
cmp
stc
paddusw
cmp
mov
mov
repz
fcomi
cmpsb
cmp
fimuls
les
mov
imul
mov
es
insl
adc
add
inc
sbb
int3
popa
cmpsl
push
test
imul
shrl
inc
push
cmp
outsl
fstl
inc
mov
xchg
sbb
bound
or
stos
sub
mov
inc
dec
xor
popa
push
jbe
cwtl
cmp
sbb
xor
into
xlat
lods
sbbl
mov
ret
dec
mov
sub
mov
sahf
and
pushf
int
ret
mov
inc
imul
iret
cmp
dec
xchg
data16
inc
mov
fadds
sarb
push
gs
out
imul
into
in
inc
aam
or
xor
adc
testb
fs
lcall
insb
js
ja
push
xor
and
insl
ss
cmp
mov
jl
fistl
mov
push
and
lcall
mov
mov
push
mov
push
ficoms
aad
ja
lret
lock
or
or
sub
notl
adcl
or
jle
arpl
mulb
inc
fisubrs
or
insb
jbe
iret
sub
dec
popf
jb
inc
arpl
cmp
jle
mov
xchg
inc
xchg
pusha
mov
pop
sarl
xchg
loope
xor
sbb
punpckhwd
rorl
inc
movsl
push
ret
scas
mov
or
pusha
xor
jmp
cmp
andb
adc
cmp
xchg
cmp
popf
stos
xor
stos
ja
fistpll
mov
inc
fldt
mov
dec
out
xor
cmp
push
xchg
and
mov
addr16
inc
push
xchg
or
pop
out
mov
cmp
testb
inc
cmpb
or
pop
scas
sti
lock
std
inc
mov
das
je
into
push
push
mov
xchg
push
fidivl
out
and
mov
inc
mov
in
jne
mov
inc
sbb
loopne
adc
mov
ja
mov
mov
pop
out
dec
adc
mov
pushf
adc
popf
hlt
add
adc
or
jle
dec
add
ret
xor
xor
mov
sbb
pop
push
adc
jnp
nop
mov
adc
addr16
cmp
fdivs
fstpl
loope
sub
daa
in
jbe
std
jecxz
mov
cltd
fimuls
out
mov
int
push
int
sahf
repnz
sub
scas
into
jae
mov
js
scas
ss
or
cmp
rorl
je
mov
ds
vpextrb
ja
loopne
ds
shr
into
addr16
imul
movsl
fwait
lods
aad
add
pop
inc
leave
jae
cmpsl
jl
call
pop
pop
in
inc
sub
hlt
leave
inc
sub
test
cmp
and
out
idivl
cmp
xor
mov
cmp
xor
fstl
imul
js
inc
xor
in
out
mov
sub
dec
push
clc
das
push
jl
xchg
cltd
aam
adc
add
rorl
scas
test
mov
xchg
or
sbb
push
mov
sub
out
insb
mov
stos
mov
jge
cmp
data16
and
int
mov
mov
sub
push
push
jp
sbb
xchg
jp
push
sub
or
andl
push
cmpsb
orb
inc
sti
call
notw
nop
pop
cmc
lea
lcall
add
mov
push
pop
add
lods
push
int
scas
fcomi
xchg
sub
or
iret
cltd
push
sub
stos
faddl
bound
mov
nop
inc
bound
aad
js
mov
repnz
xor
inc
sbb
popa
jae
cmp
fs
iret
dec
push
in
ds
sub
cmpsb
jo
xchg
fnsave
sbb
cs
insb
jecxz
or
dec
mov
fyl2xp1
push
sahf
pushf
aaa
daa
jge
cmp
pusha
mov
sub
mov
aaa
push
cwtl
ja
fnstcw
loopne
add
push
aas
pusha
stos
enter
out
call
cs
or
mov
push
add
jmp
push
hlt
mov
into
xchg
test
add
xchg
inc
add
dec
dec
aas
insl
out
sub
fcmovnu
jb
shll
insb
movsl
xchg
or
jns
fstpl
popf
sbb
pop
out
addb
lret
imul
test
mov
clc
lods
mov
and
push
fdivrp
xchg
loop
push
hlt
fs
mov
mov
or
adc
out
inc
lock
rcll
pop
jmp
push
mov
mov
jae
loop
das
je
inc
bound
push
push
xchg
jo
movsl
iret
aas
adc
inc
iret
lahf
out
lds
sbb
lods
repnz
rol
setle
es
xchg
add
fdivrs
movsl
je
dec
and
xchg
nop
je
pushf
xchg
sbb
xor
repnz
into
mov
sub
in
mov
dec
cmpsl
lret
and
add
movsb
mov
and
cmp
sbb
pop
jbe
sbb
cmpsb
xor
pusha
movsl
xor
xchg
push
pop
jno
lock
mov
fdivl
scas
dec
jae
dec
imul
sbb
dec
fidivl
fsubrs
cmpsb
daa
jae
xor
shll
jg
mov
subl
mov
push
addr16
mov
loop
gs
adc
push
icebp
jmp
fbstp
scas
outsb
repnz
iret
and
mov
mov
and
jne
scas
addr16
jecxz
pushf
xor
ljmp
add
xchg
or
call
ficoms
jl
inc
cmp
push
jp
scas
cmc
add
pushf
aaa
adc
or
or
mov
push
pop
pop
cmp
mov
shlb
mov
and
je
jo,pt
xchg
pushf
mov
mov
pusha
sbb
cmpsb
rcr
sub
ret
adc
push
push
dec
dec
xchg
mov
adcl
arpl
fildl
mov
mov
jbe
mov
adc
xlat
dec
xor
inc
push
pop
xchg
lcall
mov
adc
outsb
jne
js
mov
rcl
push
ret
out
mov
sbb
imul
mov
sub
adc
jl
push
sti
jbe
ficomps
insl
ficoms
nop
dec
and
das
adcl
xchg
mov
sti
jg
roll
rclb
mov
pop
loop
add
and
add
and
mov
sbb
and
scas
sahf
jl
push
sarl
xor
add
scas
in
push
dec
xor
mov
out
pushl
sbb
repnz
cld
scas
sahf
imul
push
jne
iret
adc
div
add
mov
mov
loope
fnsave
inc
jp
gs
mov
cmp
mov
dec
out
and
inc
pop
ljmp
popf
dec
mov
int3
pop
imul
arpl
loope
mov
cs
xor
je
or
cwtl
adc
or
int3
int
inc
inc
ret
push
push
mov
pushf
push
lahf
mov
pop
js
push
inc
das
rcll
dec
cmpsb
je
mov
in
inc
shrl
push
sub
push
stos
popf
dec
jne
mov
cld
fisubl
cmp
inc
xchg
jb
cmp
jo
fdiv
out
adc
lret
jge
sti
mov
push
out
sbb
dec
push
adc
hlt
push
jmp
rcll
cmpsl
mov
mov
adc
cmp
add
and
mov
dec
jbe
lret
mov
mov
or
dec
mov
sbb
ja
mov
repnz
imull
stos
mov
and
cmp
outsl
mov
fimuls
cmpb
add
xorb
push
mov
sub
cmpsb
sbbl
ds
int3
jg
icebp
lods
pushf
or
pop
mov
xor
and
call
std
xchg
push
cmp
adc
daa
mov
in
adc
lahf
pop
mov
inc
sub
push
xor
mov
sub
stc
ret
cmp
sbbb
les
les
and
cmp
fs
add
mov
sub
inc
push
push
push
mov
pop
int3
pop
ljmp
dec
or
dec
dec
in
dec
mov
xchg
xchg
or
add
inc
push
fcoml
in
test
imul
and
icebp
call
cmp
scas
lods
mov
loope
fistl
or
test
fcoml
stos
xlat
nop
adc
mov
mov
pop
add
xchg
and
stos
mov
cli
inc
jl
xor
cmp
jo
push
sbb
andl
into
push
sub
mov
fbld
inc
fildl
sub
lods
insb
aas
jmp
fisubs
sbb
adc
cmp
and
cld
xor
and
inc
stc
or
xor
iret
xor
or
cmp
add
mov
xor
cmp
xchg
xchg
sub
jne
lods
mov
in
cmpsb
jo
dec
cltd
stos
fwait
sbb
mov
jne
cltd
mov
fcom
fwait
sbb
sub
xchg
mov
test
shrl
jbe
sub
shrl
js
mov
iret
inc
dec
add
adc
push
rcrb
ret
mov
pop
dec
jge
jno
dec
mov
rcr
jae
jne
push
dec
cmp
cmp
xchg
outsl
pop
cmp
pop
jbe
in
jno
cmp
imul
stc
aaa
xchg
iret
dec
lods
ljmp
jno
mov
and
cmp
pop
sub
jge
or
in
inc
fisttpl
add
test
jge
imul
fisttps
dec
push
pop
inc
pop
cs
pop
and
dec
aaa
xor
neg
pop
scas
dec
jle
mov
jns
pop
push
into
and
leave
cld
mov
pop
xchg
movsl
mov
dec
cmp
cmp
movsb
sub
shlb
push
adc
rcrl
or
sti
or
xchg
mov
test
hlt
lds
test
push
repz
test
rclb
xor
push
ficomps
loopne
pop
stos
in
pop
out
cld
and
lret
xor
insl
repz
popa
push
out
in
dec
mov
jle
add
mov
das
add
shrl
mov
fsubs
add
jnp
test
fabs
or
repnz
jl
mov
mov
xchg
push
imul
push
jle
mov
repz
jnp
cmp
incb
sub
pop
cltd
xchg
out
sbb
jno
pusha
and
mov
pop
cmp
repz
daa
ror
ret
stc
adc
dec
and
push
lret
lcall
or
fsubl
fwait
gs
mov
int3
adc
jo
cmpsl
int
lods
movsb
xchg
push
jp
into
outsb
bswap
push
adc
sub
mov
adc
dec
call
push
divl
mov
push
repnz
shlb
aas
xor
push
mov
popa
mov
and
add
in
push
mov
pop
push
pop
jp
ror
mov
lea
jns
les
icebp
add
sub
in
xchg
cmc
call
pop
xor
aad
in
sub
or
adc
xchg
pop
pop
sbb
xlat
rcrl
jp
movl
sub
mov
aam
xor
mov
push
repz
add
repnz
sti
cwtl
inc
in
push
push
cmp
enter
das
pop
clc
dec
out
stos
in
jge
dec
inc
jg
rep
fwait
cmp
push
js
xchg
mov
jmp
jb
pusha
stos
scas
jge
jo
dec
push
push
lcall
fwait
sub
cmc
sarl
loopne
ror
or
loope
int3
mov
adc
add
test
push
xor
or
icebp
pop
mov
addr16
js
cmp
je
cmp
ja
leave
add
cmpsl
add
int3
adc
out
movsl
dec
mov
sub
pushf
sub
sub
jne
mov
scas
push
mov
fildll
adc
mov
mov
std
xor
jno
and
popa
inc
rol
imul
and
adc
pusha
test
movsb
jo
jecxz
pop
sahf
jbe
xchg
incl
lret
andb
sbb
xchg
and
pop
leave
push
jne
pushf
loope
ljmp
xlat
shrb
decb
mov
cmp
out
mov
jae
jge
aad
lock
js
or
pop
in
xor
out
sbb
cmpsl
ljmp
inc
jg
pop
pop
mov
push
pop
addl
and
cli
xor
out
jb
inc
sbbb
or
loopne
mov
adc
repz
in
fwait
loope
fstpl
bound
daa
sbb
cmp
lret
or
cmp
jnp
mov
and
out
jmp
dec
fistps
ds
push
jl
inc
mov
inc
xchg
or
xchg
pop
add
cmp
sbb
imul
mov
icebp
enter
inc
push
xchg
gs
and
cld
mov
fwait
test
pop
sbb
les
pop
dec
testb
and
stc
push
lea
xchg
ret
dec
or
imul
lahf
xchg
out
xlat
mov
jbe
gs
mov
or
lods
aad
mov
loop
test
mov
js
pop
mov
testl
data16
lahf
out
sarl
movl
push
in
xor
jbe
pop
lea
jnp
jae
test
dec
fiaddl
dec
cli
sub
mov
pop
arpl
out
push
sub
in
xor
adc
sbb
jbe
mov
add
jmp
push
xchg
xchg
sub
stos
leave
sub
int
pop
iret
add
mov
push
lret
das
jmp
sbb
fcmovnb
lret
add
cmp
pop
adc
xchg
mov
and
jo
inc
data16
sub
jb,pn
leave
adc
je
fcmovb
mov
imul
and
mov
fwait
mov
outsb
aas
mov
out
test
add
inc
xchg
ret
jmp
jb
insl
add
data16
gs
aaa
arpl
sub
mov
add
sahf
jle
xchg
negl
jb
and
mov
iret
push
out
arpl
in
mov
movsb
adc
and
cmp
xchg
pop
add
insl
dec
dec
pushl
sahf
cmp
jg
add
fwait
out
loopne
add
or
mov
push
mov
xor
lea
add
addr16
nop
clc
pop
jo
fdivrl
cltd
stos
xchg
jg
popa
aad
xchg
lock
cmp
in
jnp
dec
icebp
pop
dec
sbb
cmp
adc
adc
push
lsl
and
xlat
cld
sub
lahf
je
sub
inc
movl
or
push
pop
jns
mov
repnz
mov
sub
inc
xor
push
dec
cmp
mov
dec
or
mov
xor
cmp
fisubrs
inc
cbtw
sbb
lret
dec
xchg
call
sub
inc
jecxz
pop
mov
das
inc
js
stc
mov
push
subb
out
test
jmp
loope
add
inc
pop
fldt
je
cmp
jle
jns
scas
lcall
mov
fnsave
or
int
sbb
mov
popa
sub
pushf
pop
out
rcr
enter
jno
jae
push
imul
mov
dec
call
fsubl
nop
out
jge
pushf
out
inc
push
ret
pushf
pushf
mov
outsl
xchg
mov
test
cmp
pop
imul
jb
loop
repz
sbb
shlb
push
enter
pop
mov
popa
lock
ss
cmp
mov
sbb
aaa
pop
xorl
fsubl
ret
push
aas
adc
nop
stos
repz
dec
mov
frstor
add
sarb
pop
andb
and
cmp
stos
in
daa
adc
or
xor
pop
test
xchg
mov
xor
int
sbb
ret
cmp
rcrl
jl
ja
mov
aas
xlat
sbb
mov
dec
mov
es
xchg
decl
and
jle
pop
jp
pop
xor
loopne
xor
mov
stos
stos
adc
sarl
mov
sarl
or
dec
dec
mov
out
sbb
add
pushf
and
mov
mov
mov
jg
or
cmp
xor
shr
add
aad
lods
mov
rorl
mov
or
fcoms
fidivrl
cwtl
ljmp
add
stos
shrb
cmp
push
hlt
xchg
stos
cmpsl
fcmovbe
jne
push
mov
out
mov
inc
mov
xor
or
es
iret
dec
fimull
aas
jmp
pushf
xchg
imul
and
cmp
leave
int
je
sub
cli
stc
leave
mov
cmp
fists
mov
jne
add
rcll
orb
mull
outsl
mov
cmp
rolb
test
dec
stc
inc
mov
popf
iret
sub
push
sbb
mov
jmp
fcomps
xchg
insb
test
into
xor
sub
out
push
sbb
das
inc
jbe
hlt
fistps
cmpsl
dec
ret
pop
push
xchg
pop
sub
or
stc
sbb
dec
popl
test
cmpsb
in
push
add
or
xchg
movl
jecxz
stc
lock
cmp
mov
ds
sbb
cwtl
sbb
xor
jae
clc
xor
mov
push
pop
push
xchg
sbb
xchg
outsb
cmp
sbb
das
scas
jnp
inc
enter
lea
decl
imul
mov
jecxz
dec
adc
and
fs
movl
mov
mov
repz
jne
and
mov
add
sti
out
sub
mov
shrb
popa
jmp
mov
div
scas
cwtl
call
xchg
insl
int
sbb
and
lcall
into
jmp
xor
or
subb
jae
cmp
popa
fwait
scas
push
rol
int
test
loop
ret
xor
inc
mov
xchg
push
shll
mov
mov
cli
mov
push
adc
or
push
and
pminsw
push
dec
jae
mov
aam
pop
jns
bound
pop
cmp
mov
inc
inc
movsl
sub
mov
xchg
dec
ds
dec
jne
mov
pop
mov
icebp
jb
popf
mov
cmc
jb
in
inc
aam
hlt
mov
sbb
xorl
cwtl
pop
or
jl
lea
data16
addb
inc
leave
mov
dec
jb
cwtl
cmpsl
push
jbe
hlt
lods
out
cmp
inc
sub
loop
jns
lods
push
in
mov
daa
faddl
jmp
inc
xchg
adc
cmpsl
dec
cli
stos
into
cwtl
add
or
rorl
mov
push
jge
xchg
add
ja
xorb
call
mov
or
cmp
mov
in
cwtl
add
or
sbb
imul
aam
pop
cli
stos
outsb
lods
sub
pop
out
and
push
inc
mov
inc
aaa
mov
sahf
ljmp
jp
lods
mov
sbb
xchg
repz
inc
pop
xchg
xchg
push
adc
xchg
cmpsb
ret
inc
xor
xor
mov
stos
sub
sbb
lcall
fdivl
jno
sbb
divb
adc
cmpsl
xor
movsl
js
stos
in
shll
jp
lret
push
push
shll
in
arpl
xchg
pusha
mov
ficoms
add
pusha
out
push
dec
std
enter
xchg
sub
daa
aad
cli
sbb
dec
sti
push
rorb
adc
test
in
cmp
std
sbb
and
shl
stos
cli
inc
scas
movsb
insb
scas
jge
jnp
inc
mov
imul
sbb
xor
cld
sub
inc
jnp
adc
lds
jae
jp
mov
xlat
and
mov
mov
test
sbb
out
int3
and
sbb
sbb
jg
and
scas
dec
outsl
addr16
fwait
jo
pop
aaa
xor
push
mov
bound
iret
outsl
dec
inc
je
xchg
notl
dec
repz
push
pop
out
jnp
stos
inc
fisttps
inc
hlt
mov
mov
adc
int3
ror
mov
cltd
xor
lcall
es
ljmp
jge
leave
add
lds
jnp
ret
es
out
insl
fucomi
inc
shlb
ret
or
add
fiadds
push
jecxz
inc
leave
cmc
lock
call
mov
dec
mov
xor
int3
jl
push
insb
mov
lds
mov
loope
rcl
rclb
cmp
mov
inc
push
sub
shlb
inc
loop
lea
pop
dec
push
cmc
xor
pop
cmp
xchg
jmp
outsb
push
push
xchg
sarl
mov
lock
add
negl
jae
xor
mov
inc
jae
ljmp
jecxz
popa
mov
pop
shl
shl
jo
pop
jbe
dec
pop
or
xor
fcompl
dec
mov
xchg
jle
and
jge
jecxz
notl
lock
mov
rolb
mov
jp
fsubrs
add
push
pop
jae
popa
in
out
pushf
sub
sub
jle
or
pushf
mov
sarb
not
or
pop
xor
sbb
mov
pop
xor
repnz
inc
les
stos
ret
lods
repnz
jmp
loopne
push
loope
cmp
and
xchg
and
push
push
xor
jnp
sub
lds
sahf
ret
test
mov
xchg
mov
jle
push
mov
movsb
cmp
int3
mov
mov
sti
mov
js
or
pop
push
rcr
call
xchg
ud0
lods
adc
jbe
and
ret
hlt
daa
divb
pop
ret
or
jbe
mov
decb
lock
mov
shlb
pusha
or
pop
sarb
xchg
mov
sbb
bnd
mov
push
psllw
cmpsl
add
xchg
adc
xchg
xchg
int3
add
cmp
shrl
sub
inc
leave
jnp
adc
pop
imul
cmp
bound
lret
sub
push
call
inc
fisttpl
pop
mov
dec
jecxz
sarl
push
adc
repnz
xchg
jne
mov
and
fsubrl
int
cli
xor
test
lock
aad
bound
out
lds
and
sub
xor
das
lret
out
imulb
pop
push
xor
mov
sub
xor
subl
jae
add
dec
imul
xor
mov
jg
fildll
js
inc
daa
jmp
addr16
test
mov
nop
or
pop
hlt
pop
adc
xlat
out
sbb
pop
out
pop
add
adc
xor
ljmp
sarl
scas
inc
jp
push
outsl
popa
inc
dec
ja
xlat
add
fnstcw
mov
or
mov
sbb
push
ss
scas
add
sbb
std
xor
jge
aad
in
dec
cwtl
and
pop
sub
stos
iret
jp
cmp
setno
pop
iret
into
subl
mov
xor
add
fwait
ror
mov
sub
push
pop
in
or
jnp
jne
aas
icebp
sub
outsb
cmc
xchg
fcmove
jge
outsl
ret
aad
ds
sub
gs
ljmp
sahf
pop
push
xor
insl
xor
inc
mov
sbb
movsl
repz
adc
xor
sbb
mull
xchg
push
xor
lcall
pusha
outsb
mov
stos
popa
and
or
arpl
cld
jmp
les
mov
xor
mov
and
es
adc
cmc
arpl
add
adc
movsl
sbb
dec
fstpt
loope
leave
add
or
jno
lds
add
lret
dec
daa
in
in
cwtl
in
jl
subb
ret
add
pop
mov
xchg
inc
icebp
xor
mov
cwtl
flds
jo
push
push
lret
fwait
jge
int3
add
jns
outsb
push
pop
scas
ljmp
or
adc
mov
shrb
fldt
pop
dec
pop
in
out
out
ja
jl
mov
lahf
ja
mov
jl
in
lret
jl
enter
mov
lods
repz
push
xchg
int
adc
inc
or
or
aaa
bound
mov
ds
push
jp
imul
mul
icebp
enter
imul
sub
fiadds
js
sbb
pop
call
mov
lahf
xadd
imul
aas
dec
mov
fimull
out
fst
sub
stos
sbb
or
insb
mov
inc
pusha
pop
fisubrs
pop
cmp
mov
fisttpl
add
lret
mov
icebp
fdivl
leave
pop
sub
lods
sahf
popf
test
cli
jmp
in
insl
sbb
dec
fisttpl
inc
and
push
icebp
loope
rcl
mov
dec
add
lea
test
jne
push
or
out
inc
mov
inc
ret
xchg
xchg
arpl
xor
cmp
insl
mov
push
popf
ds
gs
lret
aad
mov
cmp
icebp
mov
loope
push
mov
push
mov
in
sbb
movl
inc
insl
xchg
sbb
movsb
cmp
jl
lahf
out
or
shlb
das
int
frstor
scas
sbb
in
mov
and
cmp
loop
xor
jns
ljmpw
inc
adc
mov
pop
pop
inc
imul
inc
dec
mov
inc
jge
iret
adc
pop
fisttpl
imul
xchg
outsb
aaa
pop
dec
aam
lods
mov
xorl
ss
ljmp
hlt
daa
addl
jle
cld
lods
shrb
and
int
cmp
inc
jecxz
imul
scas
addr16
insb
pop
mov
or
mov
int
dec
arpl
iret
icebp
cmp
sub
ja
pop
in
loop
aam
sub
mov
push
mov
ret
into
in
dec
and
lods
inc
mov
lods
inc
sbb
repz
sbb
pop
insb
idivl
jg
xchg
push
pop
arpl
shlb
jg
insl
xlat
jecxz
rorl
xor
push
add
out
movsb
sbb
mov
rcll
sbb
je
cmpsb
sbb
mov
and
enter
stos
xchg
aaa
out
rclb
outsb
mov
push
push
mov
push
leave
mov
stc
out
mov
xchg
aam
or
fcom
add
push
sub
jg
xor
ja
dec
dec
mov
xchg
ss
fwait
sub
lds
in
ljmp
aam
scas
ja
inc
dec
mov
insb
mov
adc
arpl
test
cmc
mov
movsl
sub
fsubl
in
test
adc
je
and
dec
pop
push
sbb
out
or
mov
and
in
hlt
or
xorb
roll
add
add
frstor
jno
pop
xor
sbb
lret
push
adc
push
mov
mov
inc
pop
and
sub
add
add
and
pop
push
push
dec
roll
imul
and
clc
push
pop
call
add
push
mov
jne
push
mov
lret
out
mov
add
pop
movsb
bound
and
xorl
mov
and
mov
cmpsb
lods
jbe
imul
cwtl
and
out
es
sub
imul
sub
pushf
pop
jbe
mov
mov
fwait
pop
sub
sub
mov
jnp
je
icebp
cli
in
rcl
xlat
pop
mov
push
cmp
xor
shr
mov
dec
mov
pop
outsl
stos
and
cmc
push
test
mov
xchg
jne
enter
xchg
daa
dec
dec
mov
int3
push
mov
dec
lahf
xchg
cmp
jae
dec
and
push
mov
sbb
idivl
push
mov
adc
dec
inc
pop
xchg
xor
icebp
xor
shrb
xor
cltd
pop
xlat
xchg
add
lods
push
sub
push
fs
and
pop
mov
flds
sbb
pushf
fxtract
pop
push
cmc
hlt
inc
sub
loopne
stos
hlt
add
rcrb
cmpsb
andl
mov
aad
jg
ss
ja
repnz
dec
mov
xor
inc
data16
jge
imul
or
in
and
sbb
dec
das
fadds
xchg
or
mov
jns
fnstsw
jbe
bound
mov
pushf
packssdw
roll
cmpsl
pusha
cmpsb
addb
pop
mov
ds
inc
inc
adc
inc
adc
or
xor
pop
mov
mov
push
scas
cld
cmc
pop
push
out
dec
std
add
lret
mov
stos
mov
scas
cmc
jnp
xor
scas
mov
push
xor
jne
xor
add
lahf
mov
bound
popa
shrb
divl
adc
aam
mov
or
pop
lcall
cmpsl
out
outsl
xor
mov
cmp
cmpsl
or
scas
mov
stc
mov
sub
cmp
ja
cmp
pop
sbb
pop
stc
scas
sbb
xor
mov
cltd
sub
repz
outsb
sub
andb
mov
jecxz
xchg
and
cmp
pop
push
sbb
mov
push
mov
adc
dec
push
int
in
popa
xchg
test
adc
call
fisubrs
stos
sar
pushf
lods
loopne
lods
push
gs
das
enter
call
pop
push
shll
mov
repz
test
ds
dec
sub
clc
sahf
mov
add
push
aam
mov
cmp
cld
loope
mov
imul
and
js
push
and
sub
lret
jb
int
dec
mov
mov
mov
xchg
cmp
mov
jle
add
lcall
ror
and
adc
jnp
push
xor
ret
fdivrs
loop
jmp
jecxz
in
loope
mov
aaa
imul
xchg
pop
sub
mov
jbe
sub
push
lret
pop
push
add
imul
iret
idiv
test
dec
adc
lods
in
cli
call
pushf
roll
sbb
ds
scas
xchg
inc
push
and
aaa
xlat
sbb
pop
js
sub
iret
loope
clc
in
ss
mov
sub
fisttps
jne
enter
push
and
icebp
adc
jb
push
xor
mov
dec
xchg
stc
jle
sub
inc
test
repz
push
clc
xchg
mov
dec
stos
in
jl
sarl
cwtl
enter
sbb
adc
mov
push
mov
push
sti
sahf
ret
adc
clc
adc
mov
or
mov
in
pop
cmpsb
xchg
nop
mov
popf
push
sub
test
clc
add
push
mov
shll
cmp
xor
pop
sub
lea
fsubs
push
je
mov
shrl
jnp
sbb
daa
lret
cs
dec
inc
cs
icebp
adcl
lcall
int3
mov
mov
jp
mov
mov
fsubrp
stc
adc
mov
dec
adc
xor
cmp
movsl
pushf
mov
mov
orl
dec
cmp
arpl
lods
jns
xchg
mov
add
arpl
les
jb
aas
bound
or
cld
xor
lods
mov
shrb
inc
jo
lods
test
mov
inc
cmp
arpl
out
cmpsl
or
mov
int3
les
testb
out
cmp
pop
pop
mov
and
call
inc
shl
shlb
add
fistps
lahf
cltd
cmp
loopne
push
outsb
pop
xor
outsb
xchg
aad
dec
aam
cmp
dec
ljmp
mov
mov
ss
mov
sbb
mov
pop
sahf
movsl
imul
and
pop
add
es
push
pop
std
and
add
add
lret
or
adc
and
xchg
int3
loop
shrl
and
sbbl
mov
fwait
lods
fistps
jle
ja
jmp
fcomps
rclb
je
sbb
and
rcl
inc
and
inc
std
and
cs
mov
add
out
jo
pop
arpl
out
xchg
sub
pop
sbb
mov
adc
lcall
jmp
push
jecxz
fistpll
xchg
cmp
or
divb
jmp
shrb
jne
xor
push
ret
pushf
inc
sub
cltd
pop
dec
fisubl
or
inc
ret
call
out
lods
test
js
gs
mov
and
int3
pop
jp
inc
fwait
inc
shrb
sub
xor
lcall
ret
xlat
mov
and
xor
in
inc
lcall
sub
pop
add
ret
mov
pop
jmp
in
jle
leave
dec
test
sub
mov
rol
inc
cmpsl
das
cmp
dec
test
vorps
sbb
jo
xchg
int3
push
xor
mov
cmc
inc
mov
push
cmp
clc
por
scas
mov
sbb
into
xorb
rol
leave
pop
dec
lahf
push
mov
popa
js
lods
loopne
or
or
dec
mov
mov
and
cmp
dec
outsb
roll
inc
pop
xor
in
outsl
das
mov
scas
pop
or
out
cmp
pop
add
sbb
andb
ret
aad
and
xchg
jecxz
xchg
cli
mov
xchg
ret
sub
mov
and
push
out
sub
test
ret
clc
stos
out
push
mov
dec
sbb
dec
jb
and
insb
lods
or
int
jae
gs
pop
frstor
sub
pushf
gs
jmp
fimuls
push
xchg
es
outsl
sbb
lret
inc
jle
jne
test
int
mov
cmpl
daa
pop
cmpsl
test
dec
jbe
xor
cmp
in
lahf
inc
mov
dec
es
pop
jno
aad
inc
loope
pop
aaa
dec
adc
push
push
and
lret
jge
je
int3
mov
jae
testl
add
xchg
lret
bound
insl
dec
loope
scas
notl
ss
dec
xlat
ja
add
insl
jb
push
out
dec
pop
inc
gs
push
dec
push
mov
jg
sub
hlt
mov
adc
push
enter
dec
xchg
xor
mov
outsl
and
aas
adc
loope
call
lahf
inc
xchg
jg
cmp
outsl
cmp
ret
iret
cmp
mov
aam
sbb
dec
mov
out
lret
repnz
or
mulb
xchg
mov
imul
rolb
rcll
outsb
sub
daa
add
movsl
or
jg
mov
lahf
push
sub
xchg
push
push
dec
and
pop
sbb
inc
xor
mov
das
pop
pop
mov
sbb
cmpsb
repz
and
push
idivb
adc
jge
mov
push
push
add
sti
sbb
repz
lret
fwait
lahf
pop
gs
mov
xchg
aam
clc
pop
mov
imul
sub
in
outsl
shlb
add
xor
in
mov
adc
pop
addr16
imul
jg
sub
push
test
adc
or
inc
fs
adc
pop
mov
mov
push
mov
push
dec
lcall
add
movnti
mov
in
dec
inc
dec
add
push
cmp
mov
leave
mov
add
dec
out
mov
pavgb
jo
int
ficoms
cmp
in
in
pop
mov
dec
imul
stc
sbb
sub
loope
sub
cmp
ror
jl
mov
stos
mov
idivl
mov
sub
ret
pushf
or
out
paddq
xchg
rclb
imul
mov
stos
pusha
fsubl
sti
stos
loop
and
cmpsb
jp
ret
les
lret
fs
xchg
mov
ret
xchg
dec
mov
inc
enter
jno
js
mov
push
notl
in
aas
mov
xor
lods
insl
jge
divb
mov
push
sub
xor
and
lods
and
sub
cltd
test
lods
push
lahf
das
ret
pusha
cmp
sbb
inc
in
push
call
sub
jae
pop
cwtl
adc
mov
cmpsl
js
push
pop
dec
jp
jns
jb
stc
ljmp
mov
cmp
and
in
in
sub
mov
jp
adc
nop
jb
fs
jb
je
mov
sub
mov
call
jl
aad
scas
jb
aaa
maxps
jmp
or
sub
push
out
jb
in
adc
jne
jl
cmp
aad
dec
mov
pop
xor
in
xlat
sbb
out
std
gs
ret
aam
and
push
xor
ror
pop
lahf
gs
in
xor
sti
jecxz
shlb
sbb
imulb
into
ljmp
dec
and
and
pusha
fdivl
icebp
stos
sub
jle
es
shr
cmpsb
adc
and
std
fimull
pop
in
xchg
gs
fstl
pusha
mov
xchg
aaa
std
subl
add
rcll
repz
mov
xchg
inc
or
xchg
clc
je
insl
and
xchg
push
out
push
adc
mov
cld
mov
pop
adc
in
xchg
xchg
out
xchg
scas
je
mov
cmp
or
adc
pop
jge
nop
jnp
fidivl
xchg
cld
gs
push
cli
pop
pop
dec
inc
lea
inc
mov
enter
lock
mov
fdivrl
push
pop
cmp
int
popa
mov
mov
jno
pop
xchg
xchg
sbb
dec
call
out
jae
cmp
sahf
pop
mov
lea
je
fsubr
cld
mov
aas
cltd
scas
lock
clc
cmc
cwtl
insb
mov
push
arpl
and
out
imul
xchg
mov
mov
fsubs
mov
jnp
jecxz
add
imul
sbb
xchg
orl
sub
mov
cli
pop
mov
outsb
jbe
rcrb
mov
lret
js
inc
repz
int
ja
mov
hlt
and
adc
dec
jnp
es
mov
inc
repnz
cmp
push
cmp
xor
or
pop
cwtl
mov
jmp
dec
lcall
out
jo
addr16
cs
lea
std
mov
inc
test
sub
mov
mov
pop
inc
lock
fcomps
jle
mov
inc
or
mov
mov
scas
sub
mov
push
mov
fs
aaa
lock
shll
sbb
pusha
subl
shll
dec
bound
outsl
push
xlat
mov
out
addr16
popf
xchg
fcompl
cli
sub
out
sbb
rcrb
sub
mov
aad
adc
fisttpl
mov
sti
mov
mov
test
in
cs
sti
inc
aas
inc
xchg
int3
cwtl
mov
and
or
or
add
shll
std
aam
mov
leave
ss
pop
xchg
xlat
pop
mov
mov
add
sub
rcll
int
add
pop
inc
and
mov
inc
addr16
add
call
movsb
imul
insb
sub
lahf
push
xlat
or
das
adc
jns
fisttpl
or
icebp
adc
ficompl
fiadds
test
cmpsl
in
or
xchg
jmp
je
out
rep
mov
dec
dec
jmp
mov
mov
cwtl
mov
int
repz
xor
inc
push
cmpsb
jbe
out
inc
push
or
mov
sbb
cld
rorl
cmpsl
inc
mov
lods
outsl
movsb
mov
fdivrs
lcall
mov
mov
ja
dec
jge
cmp
out
jne
dec
stos
dec
into
sbb
lods
lret
push
mov
jle
push
xchg
fstpl
mov
shll
rolb
lcall
cmp
aad
fstps
bound
and
cmp
andl
sbb
fsubrp
pop
test
lds
ret
lcall
and
mov
adc
cld
or
gs
xor
out
aad
mov
adc
sbb
or
sub
xchg
mov
call
divb
stc
jne
xor
and
scas
lea
jl
jecxz
in
mov
push
push
in
scas
dec
sbb
cmc
daa
ror
insl
enter
mov
cmp
mov
inc
mov
and
inc
dec
xor
inc
out
fimull
cwtl
inc
sub
dec
bnd
xchg
lock
cmp
cmp
loop
pop
stos
xor
gs
mov
aas
cld
xchg
in
fwait
mov
int3
push
push
arpl
inc
aas
push
adcb
push
bound
push
push
movsl
movl
loopne
fstps
sbb
in
minps
fsubrl
scas
mov
fimuls
std
inc
pop
aad
add
test
rcll
pop
imul
es
dec
clc
mulb
divb
pop
jl
scas
mov
addr16
aas
in
mov
sbb
ret
pusha
mov
mov
sbb
int
imul
int3
mov
or
jmp
jg
mov
mov
mov
iret
push
test
mov
movsl
test
lods
cmp
mov
stos
push
sub
rclb
enter
ret
outsb
cmp
cmpsb
ja
addr16
cwtl
es
push
xor
gs
jmp
jmp
adc
stos
sarb
pop
xchg
dec
int3
inc
in
dec
shl
movsl
lock
push
outsb
cmpsb
inc
test
pusha
sbb
mov
mov
in
in
ret
adc
imull
adc
push
add
or
dec
add
data16
lcall
aam
inc
mov
jmp
and
inc
stos
and
pop
add
xor
mov
mov
or
xor
xor
dec
cld
dec
adc
ss
sarb
cmp
and
rcr
jp
in
cmp
push
xchg
insl
stos
aas
pop
mov
adc
mov
mov
fildl
es
dec
adc
cmp
iret
test
sbb
dec
loope
sbb
pop
push
popa
test
pop
mov
call
jecxz
clc
hlt
pop
push
push
add
dec
pop
test
mov
pop
loopne
xchg
sub
and
rolb
pop
mov
dec
xor
outsb
rcrl
mov
ret
xor
or
pop
mov
testl
hlt
jg
pop
subb
test
mov
xchg
outsb
mov
ja
cmpsl
dec
xchg
xor
mov
cmp
jb
dec
cmc
push
jb
and
and
push
jns
scas
add
mov
inc
cmpsb
mov
jae
mov
pop
repz
dec
insl
adcb
cmovp
add
xchg
push
cmpsl
dec
pushf
mov
lret
aaa
hlt
hlt
loop
jae
mov
jne
lcall
sbb
pusha
mov
xchg
push
in
push
pop
add
xlat
ja
pop
mov
lds
cmc
fs
jnp
ret
dec
mov
and
bound
fcmovnb
bnd
jmp
dec
iret
fimuls
clc
add
and
nop
stos
dec
scas
scas
cwtl
lods
roll
imul
or
outsl
pop
mov
jo
mov
call
push
adc
dec
and
fs
cwtl
mov
adc
mov
rcr
out
nop
test
dec
push
cmpl
cmc
mov
sbb
ret
orl
xor
rcr
xor
dec
inc
adc
loop
in
dec
lds
jg
in
inc
jle
ror
cltd
cwtl
in
and
pop
das
and
xor
loopne
adc
mov
arpl
jge
into
lea
push
adc
jae
data16
arpl
imul
jo
leave
aas
xor
sub
inc
lea
inc
mov
jl
out
mov
push
and
insl
xlat
sbb
mov
mov
jns
mov
and
data16
mov
xor
pop
mov
xchg
js
xchg
or
aad
clc
in
mov
outsl
inc
fisttps
loope
lds
mov
xchg
jmp
inc
sub
cmp
stos
adc
inc
add
dec
repz
sub
xchg
adc
movsb
aaa
stc
addr16
pushf
fcom
out
pop
or
and
mov
push
cwtl
adc
and
or
cmpsl
incb
lods
xor
ret
dec
xchg
in
enter
mov
lahf
xor
fs
fimull
pusha
cld
mov
insb
aas
adc
pushfw
in
push
pusha
dec
sbb
jmp
sub
aas
sahf
insl
fidivrs
aad
in
xchg
mov
fwait
pop
lods
jp
push
push
push
mov
jb
stos
pop
fwait
aas
sub
cmp
aad
fcoml
cmp
lret
or
inc
sub
pusha
inc
psrlq
aas
subb
lea
mov
insb
js
sub
xor
insl
mov
xchg
shl
dec
test
dec
daa
adc
xchg
popf
push
lea
add
jecxz
test
or
push
sub
jle
mov
push
adc
add
outsl
out
pop
push
or
aaa
mov
fs
dec
mov
addl
xchg
clc
lahf
cld
std
imul
mov
cmp
mov
and
nop
fbstp
add
mov
pop
in
aaa
and
push
es
and
or
pop
add
rorb
inc
dec
hlt
js
rcrb
sub
out
dec
ds
sub
aam
jecxz
js
hlt
push
jne
fcomps
cmpl
ret
adc
das
testb
mov
jecxz
jnp
faddl
mov
mov
scas
sub
dec
xchg
movsb
push
push
in
aad
movsl
pop
fwait
xor
and
sub
or
cmc
jne
push
push
repz
sar
loope
cmc
stos
lods
aas
lahf
sbb
adcl
add
sti
push
cmp
insl
test
fimull
mov
imul
xchg
xchg
into
aad
jl
lea
aam
imul
dec
mov
test
or
jae
faddp
xchg
aaa
sub
xor
outsb
xor
mov
jl
push
sahf
sub
in
imul
imul
enter
xchg
incl
inc
xchg
nopl
adc
pop
push
mov
jg
jmp
jae
lock
inc
fisttpll
cmp
push
jle
pusha
xchg
push
je
mov
xor
sbb
je
mov
stos
test
inc
je
daa
sub
lods
fildl
arpl
sbb
mov
inc
push
add
in
adc
out
sbb
nop
rolb
jp
add
dec
xchg
icebp
pusha
sub
jbe
loop
mov
stos
push
orl
jae
pop
rolb
lock
pop
inc
pop
insl
add
mov
adc
cmc
xor
pop
dec
adc
add
fistpl
fbstp
pop
mov
in
jno
shlb
pop
scas
lahf
imul
mov
aas
xor
int
fistl
inc
sub
mov
sbb
pop
mov
nop
cmc
lock
fucomi
jbe
into
lods
and
sarb
cmc
and
dec
mov
sti
lock
adc
outsb
sahf
loope
lret
cmpsb
jns
dec
mov
dec
add
and
test
pop
and
rcrl
dec
mov
addr16
dec
in
out
jge
push
inc
mov
push
in
pop
add
out
sbb
leave
jnp
nop
rorl
adc
mov
add
ljmp
sarl
fcomp
pop
daa
xlat
add
push
dec
sub
cmc
lock
lods
mov
icebp
jae
or
aad
fs
jle
pop
cmp
hlt
jp
add
xorb
dec
outsb
es
dec
loop
push
popa
push
or
daa
in
insb
fmulp
mov
lock
int3
ret
fsubp
mov
pop
std
loop
jne
cltd
movsl
or
inc
xlat
mov
xchg
adc
xchg
cs
je
xor
push
fidivrl
cltd
push
jmp
ret
scas
gs
loopne
es
aad
cmc
fcmovne
mov
adc
add
mov
push
jge
mov
adc
rcrl
jae
push
cmp
ja
add
adc
adc
sub
shl
repnz
mov
and
mov
inc
mov
cltd
add
add
lods
and
inc
and
adc
mov
imul
call
mov
sub
inc
sbb
dec
jge
sbb
lods
sbb
stc
out
or
xchg
outsl
inc
test
pop
testl
sbb
xchg
adc
mov
popa
push
mov
in
addr16
movsl
push
imul
enter
cmpsl
and
imul
scas
test
ljmp
add
or
and
pop
movsl
mov
out
fsub
jae
cli
in
or
ja
sbb
fwait
jb
pusha
out
adc
pop
add
cld
push
mov
pop
fldenv
sbb
dec
mov
and
adc
xor
or
mov
loop
mov
cltd
pusha
in
aaa
decl
enter
pop
or
mov
mov
lods
add
mov
clc
or
jo
dec
dec
pop
pusha
mov
lods
jmp
mov
pop
adc
xchg
sub
add
scas
pop
dec
test
mov
loopne
pop
inc
arpl
cmpb
mov
pop
dec
pusha
pop
std
mov
fwait
sar
mov
mov
fmuls
cmc
jge
or
push
aad
repnz
pop
or
idivl
dec
push
cld
mov
int
mov
cld
iret
hlt
sbb
mov
and
mov
fwait
sbb
lea
xchg
arpl
xor
push
insb
dec
into
int
or
xchg
das
shl
mov
add
push
sbb
fsubl
pop
push
ds
fidivrs
scas
push
or
mov
insl
mov
fwait
cld
inc
xlat
sub
pop
ja
mov
rorb
insb
aas
loopne
or
and
cmp
cmp
addb
mov
out
bound
jne
outsl
push
cmpsb
call
adc
xor
or
daa
push
sbb
incl
ljmp
cmp
int
call
iret
mov
xchg
ljmp
xorl
fsubrs
mov
subl
pop
shll
cmp
lods
add
std
repnz
je
and
mov
scas
es
xchg
xlat
sbb
xor
cmc
popf
not
popf
lcall
cmpsl
scas
out
jle
push
push
mov
or
out
push
push
jae
mov
jmp
movsl
inc
cmp
es
sub
pop
inc
inc
in
adc
into
lahf
outsl
bound
fnstenv
daa
cmp
cmp
adcb
push
inc
fs
inc
leave
gs
xchg
lock
jl
cmp
scas
or
pop
hlt
xchg
out
jl
pop
add
sbb
cmp
shrl
xchg
fsubrs
inc
adcl
movsl
gs
lahf
cmpb
push
call
xor
sahf
mov
insb
mov
push
rcrb
rclb
push
adc
scas
push
stos
add
add
clc
adc
mov
or
cltd
test
outsb
push
xchg
stos
mov
xchg
inc
push
jo
aam
sub
dec
lds
xor
sti
aad
xor
mov
xchg
adc
xchg
pop
dec
stc
inc
lods
ds
mov
icebp
push
push
adc
daa
shll
mov
ljmp
aaa
aad
adc
jno
pop
sub
out
add
idiv
adc
cmp
inc
out
sub
clc
pop
fstp
dec
push
jg
ror
xchg
mov
and
stc
fs
movsl
cmp
rorb
inc
inc
mov
push
movsl
mov
in
pop
lods
int3
add
nop
push
fdivrl
jnp
cmp
adc
stos
xlat
dec
adc
inc
cmp
push
icebp
cmp
loop
pop
idivl
outsb
shrl
divb
inc
inc
mov
mov
ret
mov
xor
sbb
out
jge
ss
dec
mov
clc
xor
jge
fbld
aas
mov
out
cmpsb
push
mov
sub
js
shlb
movsl
or
xchg
in
fldenv
notl
mov
push
dec
fildl
test
rcrb
mov
adc
cmp
movsl
rep
fldcw
xchg
jge
rcl
mov
sbb
shll
ss
lods
test
sbb
lock
or
jg
les
lahf
dec
xchg
enter
mov
adc
push
sbb
lahf
adc
test
into
mov
insb
shl
jmp
pusha
xchg
xlat
and
stc
cmpsl
xor
jp
fnstenv
mov
call
push
fadd
or
jnp
mov
adc
add
jo
outsb
fidivs
rcr
das
enter
sahf
mov
sub
int
pushf
mov
jmp
stos
ds
sbb
pop
sbb
out
xchg
cmp
out
incb
andl
sbb
jp
lods
xchg
jecxz
insl
dec
mov
push
mov
insb
cmp
jae
enter
fildl
sbb
orb
push
dec
pop
jge
sub
mov
cmpsb
mov
mov
cmpsb
push
jo
lds
or
aad
sub
iret
xor
mov
sbb
or
wrmsr
mov
int
push
mov
cwtl
sub
xchg
jae,pt
popf
lret
mov
outsl
gs
mov
inc
ja
aam
dec
les
sbb
imul
jnp
jp
dec
mov
icebp
xorb
int
les
cmp
cmp
or
iret
xchg
sbbl
adc
mov
fcompl
mov
or
addr16
cs
jle
dec
jno
popl
push
in
cltd
push
cli
push
adcl
sub
xor
xchg
test
or
inc
rolb
negb
xor
call
mov
scas
jb
sbb
outsb
insl
dec
hlt
fucom
mov
xchg
xor
pushl
pushf
sahf
test
add
mov
fs
jb
or
lret
rol
and
push
push
ljmp
or
xchg
xor
fdiv
mov
shlb
rol
cld
fisttpl
out
mov
sub
jl
pop
cmp
pusha
jno
adc
push
xor
inc
adc
cltd
daa
push
pop
jbe
sbb
adc
addr16
pop
mov
cmpb
movsb
insb
xor
sub
jp
lcall
rcrb
pop
cmp
inc
xchg
mov
dec
push
iret
adc
lret
push
mov
iret
pop
add
mov
js
sbb
xchg
or
nop
mov
add
mov
jl
sub
sub
popa
adcb
dec
mov
repz
or
mov
rorl
pop
add
or
insl
pop
and
dec
sub
xchg
sub
xchg
or
call
aaa
mov
inc
mov
or
mov
push
pop
dec
dec
push
xor
aas
push
es
mov
ss
pop
andl
cli
mov
insb
push
int
xlat
xor
ret
sti
fldl
sahf
jmp
jp
and
aas
cmp
cmc
cmp
insl
or
sbb
inc
stos
loopne
push
xor
scas
int3
xor
cltd
sub
jne
fneni(8087
pop
mov
jg
sbb
xchg
cli
into
adc
sub
notb
loope
mov
dec
adc
mov
repnz
scas
mov
fisubl
mov
repz
movd
stos
xor
xor
cs
jecxz
mov
pop
subl
mov
fldenv
movsl
mov
jl
and
mov
shl
movsl
xchg
jmp
aaa
out
fidivrl
mov
movsb
stos
push
fs
out
mov
adc
mov
sahf
ja
push
jecxz
jmp
push
xchg
jno
cwtl
mov
sbb
sbb
cmp
popf
push
adc
mov
test
mov
mov
xchg
arpl
jle
mov
pop
icebp
xor
adc
add
mov
sahf
test
enter
cli
test
cs
pop
mov
and
mov
daa
das
inc
xchg
shl
add
xchg
mov
loope
push
sub
outsl
daa
insl
adc
mov
ds
mov
rcl
adc
and
sbb
mov
imul
lahf
mov
cmpxchg
mov
cmp
fs
stos
test
inc
movsb
xor
add
jb
dec
xchg
dec
pop
loopne
jae
inc
ret
or
push
sub
xchg
cltd
xor
or
cmc
and
movsl
sub
movsl
jl
dec
insb
xchg
add
sbb
aam
xchg
push
rcrl
mov
test
ret
mov
mov
cmp
adc
ss
lahf
mov
add
xor
ljmp
xchg
xchg
scas
jle
jns
xchg
popa
add
cs
andb
fldenv
inc
pop
movsb
iret
cmp
fdivs
rcrl
xor
cmpsb
pop
xor
and
out
js
lret
pop
popa
negl
adc
ljmp
sbb
les
mov
js
sbb
add
sbb
ljmp
mov
add
adc
inc
jg
lock
dec
fs
cld
mov
loop
xchg
xchg
jae
cmpsl
sbb
lock
dec
inc
xchg
inc
and
jno
add
mov
xor
mov
mov
or
je
test
int3
in
cmpsb
cmpsb
movsb
pop
into
push
and
leave
jo
in
mov
call
or
insb
cmp
or
cmp
test
cmp
inc
cmpsl
ljmp
inc
push
shl
lret
jbe
lcall
test
or
inc
ret
scas
rolb
inc
js
testl
add
pop
aad
iret
out
jmp
xor
test
scas
test
rcrb
daa
shll
xchg
andl
sub
lods
insb
fidivl
bound
imul
movnti
pop
andb
dec
push
fs
mov
outsl
sbb
jp
or
pop
iret
iret
lods
and
pop
test
test
out
xlat
inc
mov
mov
mov
mov
lods
adc
or
sbb
cmp
dec
test
aaa
fdivrp
icebp
push
mov
mov
lahf
aad
jp
push
inc
cmp
jg
rcll
mov
cmp
bound
mov
addr16
fisttpl
lahf
or
fcmovnu
pop
jne
add
shl
sbb
addr16
cli
out
pop
daa
push
out
std
imulb
xchg
out
mov
testb
sub
lds
rorb
mull
push
or
xor
mov
push
lds
out
mov
mov
push
inc
jb
aad
fs
dec
sbb
xorl
cli
lock
fiaddl
jb
stc
xchg
in
iret
lea
or
mov
lret
cmc
scas
sbb
rcll
mov
push
jle
cld
mov
jb
mov
cwtl
ss
mov
xchg
stos
adc
xor
in
punpcklwd
push
xor
xchg
arpl
mov
and
fwait
movsb
sbb
and
cmpsb
pop
push
push
mov
push
xchg
scas
xchg
mov
and
and
dec
xchg
pop
daa
or
adc
xlat
scas
adc
mov
pop
push
pop
test
pusha
gs
and
cmp
int3
push
int3
ja
stos
mov
sbb
imul
sbb
leave
fldl
xor
xchg
mov
out
xchg
adc
inc
cmp
subb
inc
cltd
mov
pushf
add
mov
out
imul
mov
or
loop
and
cs
outsl
stos
or
mov
and
orb
xchg
jmp
xchg
ja
push
push
push
pusha
jbe
jmp
orb
int3
in
test
xchg
jb
dec
push
das
int
ss
lods
test
bound
sub
jb
pop
fstp
fisttpl
mov
jmp
cli
ret
clc
sbbb
jns
rorb
dec
or
outsl
xor
and
sub
hlt
inc
aaa
out
mov
addr16
push
add
fs
jns
mov
add
push
test
test
mov
fidivrl
fdivrl
icebp
rolb
or
push
je
cltd
pop
or
dec
sub
imul
jg
rclb
adc
ljmp
test
test
jno
add
fsubrp
adc
pop
push
pop
add
mov
outsl
jp
lods
mov
pop
and
movsl
int
inc
mov
push
push
xor
pop
repnz
test
test
mov
or
mov
push
test
pop
mov
mov
mov
ljmp
shll
js
into
cmpl
dec
rcr
dec
pop
pop
mov
jle
xlat
fcmovne
pusha
cld
or
mov
sbb
mov
lret
xor
pusha
xchg
sbb
push
je
ljmp
or
sbb
outsb
add
scas
push
loope
inc
jg
das
push
shlb
adcb
cmp
mov
jne
lods
and
inc
bound
pop
jb
out
sar
dec
push
inc
and
mov
add
push
adc
aam
test
jne
mov
xchg
dec
into
and
jno
inc
xor
cmp
not
cwtl
xchg
pop
xchg
sbb
loop
dec
add
das
pop
pop
pop
arpl
push
pop
divb
fisubrs
xchg
jmp
insl
push
mov
stos
xlat
and
fsts
xor
push
add
cwtl
cld
mov
dec
clc
push
xor
shll
mov
add
sahf
addr16
push
lds
ja
loope
and
aaa
jmp
pop
addr16
dec
xchg
dec
inc
inc
and
mov
pop
jns
push
jno
cmpsb
fbstp
out
cmp
loop
rcrb
xlat
mov
lret
sbb
repnz
jo
push
lahf
mov
pcmpgtd
outsb
mov
lds
in
fldt
sub
daa
jecxz
cmp
movsl
in
dec
pop
or
inc
jmp
mov
in
cmpsb
les
push
enter
push
jp
adc
in
xor
test
fwait
mov
aam
outsl
aad
sti
cwtl
pop
jno
mov
scas
mov
mov
jns
xor
push
or
ss
das
mov
inc
outsb
aaa
in
push
repz
xor
sbb
sahf
bound
fs
mul
jns
xor
xchg
sub
testl
adc
mov
add
dec
mov
xchg
outsb
out
push
mov
add
sbb
push
decl
daa
jge
add
test
out
push
push
pop
sub
icebp
fisubrs
push
xchg
sbb
in
mov
and
mov
dec
addr16
movsb
fisttps
data16
push
fwait
or
aas
pop
aam
mov
add
mov
movsl
push
or
nop
arpl
mov
dec
fcmovu
or
push
shll
xchg
jg
sub
sbb
ds
hlt
jle
adc
jnp
pop
cmp
xchg
mov
jp
and
addr16
leave
jo
jmp
xchg
outsb
lods
mov
fnstsw
pusha
arpl
sahf
and
loope
push
or
mov
dec
sub
sub
xor
fcomip
loopne
sarb
or
lods
and
pop
sbb
fistps
xchg
imulb
push
frstor
push
dec
icebp
cmp
dec
and
loope
test
out
mov
mov
add
cmp
loopne
cmc
and
inc
mov
gs
adc
pop
sub
jno
fdivrl
pop
add
gs
lahf
pop
imul
or
popa
popf
lcall
dec
jl
insb
in
fisubs
pusha
jge
add
mov
mov
shlb
stc
mov
sahf
rcll
sti
lods
ret
inc
fistps
pop
gs
sub
jecxz
sbb
outsb
push
xor
adc
scas
adc
push
xchg
jmp
inc
mov
incb
push
cmp
popf
in
shlb
stos
xorl
pop
stc
sarb
out
repz
push
stos
out
mov
jns
sbb
loopne
ret
xchg
das
cmp
rorl
push
mov
xor
icebp
mov
mov
push
mov
aam
xchg
xchg
lods
jae
mov
sub
add
jmp
aaa
cmp
idivb
roll
xchg
out
inc
inc
bound
inc
andb
pop
add
cmpsl
in
arpl
or
xor
aad
pop
jno
mov
repnz
push
jle
xchg
jb
or
push
imul
adc
cmp
mov
mov
xor
loopne
sbb
les
push
mov
and
inc
xor
loope
jne
sub
lods
cmpsb
mov
lret
rcrl
popa
leave
test
push
jne
mov
ljmp
scas
push
jns
jle
pop
sbb
mov
adc
ss
add
pop
sbb
std
mov
pop
shlb
dec
das
xchg
jns
jne
inc
jne
orb
fadd
dec
adc
jl
cs
pop
sub
gs
loope
in
adc
push
lahf
or
jb
inc
mov
mov
test
inc
inc
mov
push
roll
mov
lret
pop
and
xchg
fucom
leave
int
lock
push
lret
xor
fisubl
mov
pop
ljmp
sub
xor
dec
aad
in
repz
loop
les
cmp
mov
aaa
das
cmpsl
sbb
adcl
pop
cli
push
mov
inc
sti
test
sub
mov
cmp
lods
xchg
ja
mov
outsb
push
and
das
mov
add
icebp
cltd
sarb
mov
xchg
and
icebp
cmp
pop
push
ja
push
push
push
pop
outsl
xchg
mov
js
or
inc
loope
fsubrp
bound
mov
xchg
pusha
jg
push
adc
lods
xor
or
cmc
cmp
fisubrs
push
pop
xchg
fdivrp
cmpsl
cmp
sbb
mov
ds
pop
and
mov
iret
cmp
xor
sti
fwait
mov
inc
rep
push
inc
loop
mov
xchg
mov
loopne
jbe
fxch
insl
data16
push
scas
ret
add
xchg
loop
xchg
lret
out
mov
adc
jp
cmp
jg
stos
add
push
cmp
inc
stc
cmp
stos
lahf
cltd
mov
jle
push
in
mov
sbb
lods
inc
pop
enter
cs
pop
or
inc
push
cli
push
and
out
movsl
inc
add
xchg
sbb
nop
jns
inc
pop
test
mov
pop
in
subl
scas
jbe
mov
test
pop
mov
icebp
push
cmp
fwait
inc
ret
sbb
push
mov
xor
test
xor
jns
xor
cmp
cli
mov
imull
sub
lods
jbe
repz
xchg
xchg
in
jp
pop
clc
xchg
nop
dec
lcall
pop
cs
dec
outsl
pusha
pusha
mov
mov
mov
mov
stos
test
add
add
mov
dec
dec
ret
jae
jle
adc
in
sti
sub
loope
orl
push
cltd
pop
cmpb
js
ret
bound
adc
lds
xchg
nop
call
add
xchg
xor
mov
jno
aas
in
jl
sahf
adc
and
sti
xchg
mov
daa
xchg
loopne
push
mov
jns
adc
xchg
push
movsb
dec
ja
jns
mov
aam
arpl
sahf
jp
insb
or
fcoms
xor
fdiv
cmp
js
cmp
lret
rorb
xor
out
pusha
pop
and
push
mov
cld
sbb
mov
stos
mov
push
adc
push
loopne
push
jp
pop
and
imul
adc
scas
sub
ss
ret
pop
shl
or
adc
lods
pushf
jmp
cmp
jno
pop
add
fadds
or
inc
pop
ss
int3
loopne
fsts
jmp
cmp
fsub
inc
mov
xlat
fwait
popf
dec
lods
mov
sbb
jns
pop
inc
jle
jmp
pop
outsb
fstps
cli
push
loope
sbb
rcrl
fistl
or
mov
inc
mov
jnp
xor
lods
mov
mov
aaa
nop
hlt
iret
int3
adc
mov
pop
pop
add
sub
lcall
dec
mov
leave
sbb
insl
mov
negl
pop
scas
xor
lods
lcall
in
dec
xchg
push
or
pop
cmc
sti
pop
sub
xchg
or
test
rolb
xor
out
pop
je
mov
ss
sub
pop
popf
or
inc
cmp
mov
mov
inc
mov
cmp
mov
fnsave
mov
mov
in
aaa
mov
imul
fstps
jne
cwtl
insl
adc
pop
cltd
sub
bound
enter
add
fnsave
bound
cmp
jg
dec
sub
xor
jp
pop
xchg
lret
xchg
inc
add
xchg
call
icebp
cmpsb
mov
fcompl
inc
fistpll
mov
icebp
call
jge
fisubl
cli
jl
jae
dec
and
jl
outsb
fcmovbe
roll
add
xchg
pop
clc
inc
xor
pop
cmc
pop
xor
xchg
jmp
loopne
movsl
mov
sahf
xchg
ret
hlt
cmp
or
repz
in
andl
rcll
add
int
scas
or
shl
dec
sarl
sub
inc
scas
pop
xor
lea
push
add
pop
out
mov
xor
mov
push
mov
and
jns
xor
in
xor
cmp
idivb
add
ss
jg
sbbb
into
push
inc
pop
pcmpgtb
mov
cli
jae
mov
sbb
fsubs
adc
pop
inc
loope
sbb
hlt
stos
pop
mov
fs
std
xchg
clc
repz
jmp
rcrb
out
sahf
jl
jae
sbb
push
sub
jp
aas
sarb
adc
imul
cmc
jp
div
mov
xchg
inc
imull
xlat
dec
jo
adc
pop
pushf
jmp
sti
stos
loopne
loope
xor
and
fmull
adc
jl
push
lahf
repz
and
mov
pusha
fcoml
hlt
add
out
dec
pop
and
or
push
data16
andl
shlb
sbb
mov
adc
lods
pop
nop
repnz
cmp
inc
mov
add
xchg
fiadds
xchg
fstps
iret
push
sbb
mull
mov
xor
xchg
jmp
pushf
add
std
add
xor
dec
mov
jmp
fmul
loope
dec
js
repz
mov
add
or
cld
adc
test
dec
mov
loop
xchg
mov
cltd
in
pop
xchg
cmpsl
lock
lahf
daa
or
xchg
cltd
scas
jae
inc
and
in
mov
and
jo
in
movsl
xchg
js
cs
add
pop
or
add
gs
mov
aam
in
pop
ds
movsb
ljmp
lods
cmc
mov
cmp
sbb
aad
clc
es
fldl
mov
rcll
testb
mov
repz
movsl
pop
pop
ret
adc
retw
mov
sti
pop
add
add
leave
and
scas
pop
adc
inc
mov
inc
je
inc
jge
mov
rcl
and
mov
cs
pop
insb
mov
bound
add
data16
xchg
jecxz
jo
sbb
mov
pop
mov
and
call
loopne
lahf
call
xchg
lret
or
lret
ror
dec
cmp
push
int3
jecxz
mov
rcrl
sub
mov
adc
dec
cmp
sub
mov
push
sbb
imul
xor
hlt
sbb
push
jg
sarl
sub
stc
jne
out
int
mov
mov
sbb
cmp
inc
imul
jnp
jp
add
mov
movsl
dec
lock
cmpl
sub
out
jno
fs
dec
insl
jp
out
cmp
or
xor
sub
mov
and
test
iret
sub
call
pop
out
jg
inc
fmuls
mov
fistl
mov
add
sahf
lcall
mov
adc
pop
cmp
lods
jae
call
insl
or
shlb
test
sbb
push
sub
push
addr16
shrb
mov
repnz
xor
mov
mov
push
popf
out
lahf
lock
mov
lahf
leave
sti
fwait
push
mov
cs
xchg
jmp
pop
adc
push
in
jle
cvttps2pi
mov
sub
outsb
outsb
fdivrl
lods
out
lcall
divl
push
xchg
lods
adc
jbe
in
pop
inc
push
sub
mov
jne
adc
pop
call
pop
cmp
enter
xchg
shlb
dec
jbe
and
jg
mov
lret
ret
rcll
add
dec
xor
xchg
inc
sub
push
jb
cmpsb
mov
add
cwtl
sub
mov
push
push
pop
movsb
sub
pushf
adc
cmp
cmc
xor
or
lcall
xchg
push
pop
inc
cmpsl
fidivl
inc
add
ljmp
mov
mov
pop
sbb
dec
test
xchg
ret
and
inc
push
ja
mov
dec
je
into
inc
adc
stos
mov
inc
mov
mov
enter
adc
jbe
sbb
add
mov
sbb
cmp
xchg
inc
call
imulb
cmpsl
mov
push
std
push
add
xchg
or
xchg
and
dec
movsb
or
pusha
mov
call
cmp
jno
push
push
sbb
pop
arpl
mov
into
jns
popf
xor
cwtl
loopne
clc
movsl
add
mov
stos
js
inc
data16
popa
ror
mov
cltd
mov
add
out
pop
cmp
jle
mov
lods
fsqrt
lds
inc
mov
xor
sub
push
lret
dec
push
mov
ret
aam
lock
or
addr16
mov
aam
sbbb
dec
popa
andl
xchg
mov
das
mov
aam
and
mov
leave
mov
pop
nop
mov
stos
enter
add
lret
fucomip
bound
xor
adc
xchg
ja
push
sub
mov
jno
push
subb
imulb
fistl
mov
mov
test
push
push
call
pop
cmpsl
xchg
xor
sub
push
and
and
pop
into
mov
ret
adc
pop
pop
jecxz
xor
mov
ret
lea
rorl
daa
push
lock
mov
leave
inc
xchg
jl
add
int3
fistpl
add
cmpsb
les
xchg
fcmove
pusha
in
push
mov
sbb
pop
ret
lock
push
dec
std
idivl
insb
inc
mov
aad
aam
pop
push
mov
adc
cs
stos
test
bound
dec
add
aad
dec
iret
pop
pop
cmp
inc
mov
dec
xchg
dec
jb
push
push
out
ss
sbb
cld
xor
sarl
xchg
adc
add
ja
shrb
fidivrl
out
outsl
fs
push
adc
cld
adc
cs
rolb
dec
shll
into
shrl
movsl
cwtl
push
loope
xchg
pop
popa
push
or
mov
push
insl
cmp
mov
cs
sti
lret
push
push
or
jno
cmp
mov
mov
es
dec
adc
mov
push
loopne
sbb
cmp
lret
mov
test
mov
insl
std
mov
inc
add
xor
push
push
mov
adcl
xchg
ret
mov
test
shrb
cwtl
rcrb
adc
and
ror
cli
out
into
sub
mov
popf
pushf
mov
push
out
jp
mov
mov
mov
pop
push
ret
dec
filds
dec
int3
sub
mov
or
loop
cmpl
pop
imul
bound
hlt
pop
bound
movsl
sbb
je,pn
mov
push
mov
repz
dec
add
cmpsl
movb
xchg
orb
push
jb
push
add
into
cld
push
push
xchg
mov
mov
lds
jp
ss
add
out
sub
test
jns
adc
xchg
insb
adc
hlt
xchg
into
cmpsl
push
imul
pop
hlt
aas
add
push
jp
cmpsb
incl
lret
loopne
pusha
pop
xchg
xchg
xor
add
add
out
test
mov
mov
data16
cmp
icebp
pop
in
xchg
popl
outsb
jne,pt
ja
sub
je
leave
aam
ljmp
stos
fimuls
xchg
outsb
aam
fwait
mov
mov
lods
sub
sbb
sarb
negb
dec
inc
xor
or
aas
push
lcall
sub
mov
iret
mov
hlt
xchg
dec
outsb
pusha
int3
mov
lret
mov
jns
and
fldt
fld
in
cmp
loope
xchg
xchg
cmp
daa
adc
sub
cmp
movsl
add
lods
in
xchg
pop
pop
popa
pop
lret
psadbw
xchg
je
ret
loope
sub
movsl
inc
xor
stos
int
in
shlb
mov
cltd
faddl
dec
inc
daa
cwtl
or
add
inc
cld
xlat
add
popa
sbb
shll
les
rcll
and
ss
in
ljmp
pop
inc
loop
das
lahf
xor
loope
mov
mov
xchg
or
shrl
outsb
and
xorl
jbe
pop
pop
stos
mov
mov
xchg
or
inc
cli
iret
decl
je
and
aas
ficoml
pop
insl
imul
mov
stos
jno
inc
out
lea
jns
cltd
fnstsw
popa
push
push
xchg
pop
testl
cmp
lcall
xchg
lds
neg
test
pop
push
fucompp
add
pop
mov
call
testb
popf
and
sahf
mov
inc
incl
xchg
dec
hlt
les
cmp
arpl
scas
imul
popf
test
push
jnp
loopne
and
sub
jne
inc
repnz
loopne
lods
xlat
mov
aas
xlat
lcall
cmpb
and
xlat
lods
sbb
xchg
into
fdivs
in
push
push
sbb
jb
stc
fisubs
push
xor
ret
jg
and
push
aaa
mov
cs
shrl
sti
and
lea
cli
pushf
push
mov
push
je,pn
push
lds
jmp
mov
push
popa
aam
int3
push
pop
add
nop
lret
xor
dec
jne
push
pop
int
mov
aaa
push
fldt
sub
and
xor
js
mov
xor
or
push
cmp
enter
cltd
lods
cld
movsl
lock
pusha
push
pop
xchg
testb
push
js
insl
mov
pop
xor
mov
mov
and
xor
mov
sub
out
hlt
sti
lods
fstpt
cwtl
mov
or
dec
dec
inc
and
ja
mov
fdivl
inc
sbb
in
test
xchg
or
push
xor
mov
das
inc
xchg
jnp
mov
ljmp
les
push
and
push
adc
adc
push
pop
mov
aam
jae
pop
lret
mov
rolb
das
lret
in
sbb
add
dec
lods
les
dec
bound
push
aaa
nop
outsb
addr16
insb
in
xchg
mov
and
fs
inc
xor
das
sbb
mov
stos
mov
fwait
sub
pop
dec
fdivrl
cltd
dec
fsubrl
inc
mov
push
sbb
fisttps
rorb
sahf
or
shlb
or
jle
fildl
pop
std
stos
add
push
enter
push
mov
sbb
pop
test
mov
in
jle
rcrb
pusha
jae
fld1
dec
pop
lret
add
sbb
push
lds
pop
jo
dec
cmc
dec
test
bound
das
insb
sbb
sbbl
lods
fildll
inc
xchg
mov
dec
fs
adc
cmp
and
test
lds
sbb
mov
popa
mov
pop
popa
popa
in
jl
jnp
lock
int3
cmp
fadds
mov
jb
or
mov
aaa
sub
mov
ja
mov
sarl
dec
inc
sbb
mov
pop
ds
stos
jmp
lcall
stos
sub
dec
mov
mov
loopne
bound
fstps
nop
add
adc
add
cmc
shlb
ja
or
scas
cmp
mov
sbb
pop
pushf
pusha
adc
and
jo
jle
hlt
or
aaa
mov
roll
call
and
fcmovnb
push
hlt
jmp
xchg
sub
int
sub
inc
fnstsw
cmc
cmpsl
jne
cli
cmp
aad
insb
mov
popf
stos
repnz
push
call
into
stc
inc
aas
rcrl
xchg
cmp
mov
sbb
dec
sbbl
test
mov
lcall
or
xor
sti
les
add
insl
jmp
xor
mov
mov
inc
cmp
inc
pop
aaa
mov
mov
test
cmpsl
mov
out
jg
inc
push
xchg
pusha
stos
sahf
std
repz
mov
mov
loopne
sahf
mov
ss
pop
jp
insl
dec
pusha
inc
mov
jno
les
in
jmp
pop
mov
adc
sahf
lcall
ja
dec
divl
int
push
insb
ret
xchg
hlt
cmpsl
mov
dec
push
jp
push
xchg
pop
js
sub
sti
mov
shll
jo
mov
mov
popa
xchg
outsl
das
lds
and
dec
ret
jnp
xlat
add
test
out
scas
pop
cltd
les
ret
lock
pop
inc
mov
jecxz
lods
or
and
arpl
mov
mov
inc
dec
mov
out
cmpsb
mov
sub
aaa
pop
mov
cmp
cmp
xor
sbb
inc
xor
adc
pop
hlt
cmp
xchg
push
fistps
mov
shrl
pop
mov
jmp
bound
aaa
pushf
adc
fistl
dec
mov
cmp
push
cld
jge
imul
lcall
add
mov
shlb
pminub
cmp
sbb
cmp
scas
inc
iret
hlt
add
es
xchg
fidivs
mov
sarl
clc
clc
push
adc
pop
add
jno
push
jb
stc
adc
adcb
popf
icebp
movsb
rolb
ret
stos
ss
mov
outsb
addb
pop
loop
sbb
lock
pop
add
imul
shrl
cmpsl
pop
mov
adc
test
fdivrp
adc
and
adc
mov
lods
xor
xchg
sub
scas
movsb
pop
sahf
push
cwtl
icebp
mov
shrb
arpl
mov
mov
decb
int
push
insl
add
push
adc
xchg
push
inc
jns
add
incb
lods
repnz
divl
mov
and
cmp
lock
daa
test
jl
cmp
int3
loope
lock
jp
rep
dec
dec
and
ffree
mov
add
adc
nop
out
sub
cmp
jbe
jne
int3
aaa
stos
pop
xor
push
xchg
insl
pop
rcl
or
imul
ja
adc
or
les
adc
ss
rclb
pop
popa
push
fs
cmp
and
stos
and
mov
outsl
faddl
jnp
in
pusha
pop
jmp
adc
jecxz
dec
push
inc
out
lcall
insl
sbb
cmp
dec
mov
inc
pop
and
test
outsb
mov
test
hlt
aam
dec
jbe
or
mov
fmul
add
aas
stos
jb
mov
mov
push
rcr
mov
push
jns
cwtl
inc
mov
sub
mov
add
pop
mov
cld
dec
call
inc
inc
sbb
hlt
mov
sub
dec
testl
xchg
mov
jae
or
loope
mov
std
iret
mov
sbb
mov
call
jmp
aaa
aas
mov
pop
push
call
fs
add
ret
nop
sub
js
or
inc
mov
sti
xlat
std
adc
cmpsl
pushf
mov
pop
pop
or
or
lods
fwait
mov
shlb
push
mov
gs
mov
pop
adc
sahf
push
enter
sahf
lods
sub
cmpl
stos
in
or
inc
mov
or
mov
push
jno
add
pop
or
push
cs
push
aaa
out
xor
sbb
cmp
bound
push
jo
cmp
mov
or
xchg
pushf
add
dec
rol
aad
in
insb
sub
lds
scas
xorl
inc
or
inc
or
mov
push
lret
xor
int
shll
fsts
out
in
jmp
call
mov
loope
divl
cmp
shl
xorl
leave
push
js
pop
xchg
push
dec
and
inc
faddl
rolb
add
std
push
cmpsl
mov
pop
rcrl
rclb
pop
sbb
push
adc
dec
fadds
loop
lcall
dec
lods
std
mov
test
not
mov
sbb
mov
in
xchg
or
inc
xchg
cmpsl
iret
loopne
repnz
fwait
sbb
loop
or
cmp
add
addr16
adcb
mov
cld
pop
in
into
fdiv
or
int
cmp
jl
xor
adc
mov
je
test
cmp
xor
push
xchg
rorl
loopne
or
xchg
pushf
or
ljmp
lea
loope
rorb
push
adc
cli
aaa
jnp
sub
lds
push
adc
insl
movsb
fcoms
lock
nopl
lds
mov
rcrb
std
mov
ljmp
sbb
negb
cmp
push
sarb
xchg
in
and
push
sbb
out
leave
pop
push
xlat
stos
lods
jmp
fadds
or
cmp
xchg
inc
cmp
xor
jle
mov
test
add
sub
fisubl
sbb
cmpsb
jne
call
mov
or
sub
cmp
push
push
mov
ljmp
or
ja
loopne
stos
cli
orb
ds
mov
rcrl
lods
adc
push
cmp
mov
bound
and
mov
movsb
inc
mov
xchg
cmp
sbb
jns
test
mov
inc
lahf
add
sub
mov
movsl
cmpsl
pop
mov
xchg
bound
daa
ljmp
outsl
lret
inc
dec
in
adc
aad
out
mov
lea
inc
sti
rcr
fcmovbe
sbb
int
movsl
xlat
outsl
lcall
cs
testb
sahf
hlt
mov
xchg
ds
mov
xor
test
push
roll
push
sub
jecxz
mov
cmp
jp
fdivs
inc
push
sahf
stos
mov
cltd
mov
sbb
xchg
cltd
cmp
fcomi
scas
cltd
iret
or
sbb
movsl
cmpsl
and
stos
js
pop
jmp
mov
incb
shrb
out
pushf
cmc
xchg
test
sub
jns
lret
pop
aas
mov
popl
clc
inc
ss
sub
and
adc
or
xor
and
lcall
stos
stos
dec
dec
bswap
or
dec
outsl
lods
scas
mulb
js
push
pop
lea
frstor
or
jmp
scas
jb
cmp
mov
bound
xor
lods
or
push
pop
pop
fs
inc
lods
enter
popf
jae
jmp
test
mov
or
fmul
push
mov
rorb
mov
jo
xchg
sub
cmc
stos
out
mov
sbb
cmpsb
mov
sbb
bound
lds
in
sub
das
jp
xchg
andb
add
and
cmp
int
inc
inc
mov
add
pusha
stos
push
mov
popf
mov
pop
inc
loopne
outsb
jb
push
add
aas
lods
dec
jbe
cltd
mov
andb
fiadds
int3
pop
mov
call
push
pop
mov
add
mov
test
xor
in
in
je
daa
fisubs
add
faddl
enter
sub
mov
nop
js
push
adc
mov
sbbb
pop
xlat
push
insl
jbe
pop
pusha
ret
scas
mov
test
test
sub
cwtl
rorb
inc
mov
ret
mov
lds
and
sahf
pop
or
pop
inc
jle
dec
notb
mul
inc
mov
xor
test
cmc
or
divl
add
stos
shrb
push
enter
pop
fldt
outsl
int3
xchg
out
or
dec
and
adc
lods
and
mov
and
add
das
push
shr
daa
mov
test
ret
aaa
shll
popa
ss
jns
jle
call
push
adc
mov
popa
sar
ret
jmp
adc
iret
push
xlat
or
data16
outsl
in
repz
dec
aaa
mov
mov
xlat
inc
mov
in
cmp
je
mov
aas
subb
and
jbe
loopne
das
and
icebp
in
ds
adc
out
aad
adc
mov
mov
ret
dec
sbb
shl
mov
imul
mov
mov
xchg
das
sti
jno
nop
repnz
jns
sub
sbb
test
sarb
iret
imul
arpl
lea
lock
jle
jge
push
sbb
addr16
mov
jge
dec
cli
mov
push
cmpb
sbb
push
lods
add
call
or
fadd
xlat
mov
test
mov
pop
inc
mulb
sbb
sbb
data16
inc
mov
pop
jg
or
in
cmpsb
ds
add
fsubl
jbe
out
and
adc
fwait
adc
sbb
aam
movsl
inc
add
sarl
pop
add
sbbl
jnp
fnstcw
jl
nop
push
or
lds
xcrypt-ofb
cmpsl
ljmp
in
pusha
hlt
stos
mov
ljmp
xlat
mov
sub
add
cmpsl
insb
push
into
das
xchg
lods
pop
sub
dec
lret
movsl
subl
adc
mov
xchg
imul
push
ror
add
leave
sub
sub
xor
xchg
xchg
mov
cwtl
outsb
shr
mov
movsb
jmp
add
jle
cld
inc
aas
cmc
dec
test
push
xor
in
test
xchg
gs
lret
push
sub
add
fnstcw
adc
sbb
dec
cltd
imul
or
shll
nop
movsb
dec
mov
push
add
sbb
sbb
insl
roll
movsl
jp
jp
les
pop
sbb
mov
pop
cwtl
pusha
inc
jp
mov
or
add
pushf
and
clc
pop
or
mov
cmc
push
cmp
outsb
mov
or
cmp
out
fnsave
sbb
adc
cmp
sub
movsl
inc
push
pusha
dec
out
adc
ljmp
push
xor
iret
jge
and
ret
rcrb
arpl
std
sbb
fistpll
mov
sub
inc
pop
imul
dec
test
hlt
inc
mov
xorl
rclb
movsb
fcmovne
inc
std
movsl
xor
fninit
scas
aaa
cli
mov
inc
xlat
out
xor
cli
dec
sub
mov
fnstenv
loope
stos
mov
inc
rclb
push
adc
in
add
rorl
pushf
add
adc
enter
cmp
push
leave
mov
sar
jb
push
or
iret
mov
outsb
or
pop
addr16
aam
orl
inc
or
jae
mov
cmp
jns
mov
popf
cltd
into
adc
xor
inc
mov
int3
out
cmp
or
pop
aas
sub
repz
mov
xchg
xchg
push
xlat
jns
icebp
jns
ss
xchg
movsb
lahf
insb
inc
test
ficoml
and
dec
or
xchg
jns
in
fildl
pop
aad
leave
pop
shl
and
in
mov
inc
sub
imul
stos
aam
cmp
mov
or
xchg
gs
jae
inc
decl
adc
sti
dec
int3
mov
mov
les
ja
loopne
push
insb
decl
ret
adc
addr16
lock
mov
lods
lcall
push
cmpsb
xchg
dec
xor
xor
scas
cmp
int3
mov
dec
xor
rolb
jmp
add
cmp
cmp
test
and
cmp
jne
xchg
pop
mov
sub
mov
ss
fwait
pop
fisttps
jp
ret
mov
call
je
mov
jl
xor
xchg
mov
and
mov
aam
ss
ret
jae
lea
dec
lahf
es
popa
dec
jb
or
adc
cmp
inc
cld
addb
les
arpl
into
xor
inc
insb
inc
mov
cmp
pand
mov
mov
xchg
adc
mov
mov
test
sub
pop
nop
frndint
lcall
push
call
dec
sbb
loop
inc
in
adcb
std
fcmovnbe
push
and
jge
roll
loopne
insb
scas
pop
arpl
cmp
ja
sbb
inc
or
push
hlt
aad
push
cld
xor
sub
cli
fcom
xchg
push
arpl
cwtl
fbstp
aas
pop
push
and
push
in
into
mov
fcmovbe
pop
cmc
pop
popf
fwait
xor
icebp
dec
adc
dec
test
adc
ss
pop
mov
pop
inc
xchg
pop
mov
xchg
sub
or
pop
repnz
ja
jae
pavgb
out
jmp
in
cmp
ljmp
mov
stos
cmp
inc
pop
jge
into
std
lahf
out
sub
jno
pusha
jnp
xlat
inc
inc
push
mov
les
or
rcll
lret
test
gs
xor
nop
sbbl
jg
movsl
pushf
mov
ja
jns
push
movsl
pop
dec
or
addb
and
sub
sbb
lret
adc
mov
popa
cmp
sbbb
xorl
jmp
and
js
js
jp
inc
dec
or
mov
cli
push
popa
push
or
xchg
in
arpl
push
and
sbb
movsb
push
inc
push
fs
ss
cmc
lods
scas
rclb
adc
testb
aaa
xlat
shlb
shll
sbbl
push
in
sahf
ret
sahf
adc
sbb
scas
dec
lods
cmp
test
shll
adcb
or
mov
mov
popf
ficoms
lods
inc
ljmp
jmp
sarb
inc
jmp
xor
popa
inc
int3
jmp
xchg
int3
ficompl
mov
outsb
out
cmp
lret
rorl
jge
sbb
mov
nop
inc
dec
mov
js
sbb
lwpval
jge
outsl
enter
into
leave
ret
jbe
stc
mov
inc
push
fistpl
dec
xor
sub
adc
js
push
imul
sub
push
xor
shrb
xchg
inc
mov
cmp
xorb
out
rep
les
sti
inc
loope
test
add
cmp
lock
lock
mov
sti
sbb
jb
push
loopne
mov
popf
mov
mov
pop
sbb
mov
add
xor
xor
xchg
ljmp
in
cltd
je
lods
lret
pop
xor
jb
dec
xor
ret
fisubl
mov
ja
cmp
loopne
jge
cld
jnp
mov
enter
ss
jae
lcall
bound
stos
dec
inc
mov
mov
cmp
fs
shl
jne
in
icebp
aad
mov
or
es
push
xor
jae
and
mov
pop
xchg
lcall
inc
jb
fistps
jecxz
aad
adc
mov
divl
gs
ja
xor
andl
movsl
cmpsl
or
loopne
add
and
imul
pop
out
sbb
mov
insb
daa
sub
sbb
lahf
ret
subb
inc
hlt
push
sarl
mov
jecxz
outsl
mov
in
cs
rorl
pop
mulb
fwait
mov
xchg
scas
xlat
mov
outsb
adc
lods
out
popa
cmp
or
jnp
jg
mov
insb
sar
das
push
adc
rorl
mov
nop
sub
sbb
push
dec
subl
and
push
mov
cmp
jns
stos
lret
cwtl
testl
mov
in
and
push
sub
dec
fstps
outsl
out
jecxz
fldt
push
dec
push
adc
mov
outsb
stos
enter
pop
imull
es
aas
adc
mov
xlat
stc
push
mov
sarb
les
cmp
pop
icebp
mov
adc
push
loop
or
sub
push
into
mov
mov
sbb
call
cmp
push
cmpsl
dec
jns
push
in
add
in
adc
fwait
dec
xor
jecxz
jl
testb
mov
xchg
jns
scas
and
daa
mov
stos
imulb
and
jns
loop
sub
jno
into
ljmp
std
pushf
lcall
dec
out
mov
mov
loope
bound
mov
pop
ja
repz
sub
mull
es
lock
push
test
xlat
cmp
rcrl
xchg
jb
or
jne
orl
fadd
push
or
inc
gs
sbbb
lret
mov
stos
das
int
daa
add
mov
hlt
mov
sti
iret
or
push
push
mov
add
fs
cmpsl
dec
mov
fsts
mov
loop
adc
movsb
add
int3
mov
fstp
jle
sub
or
push
jmp
andl
xor
jns
cmp
push
frstor
push
lea
cmp
xor
pop
and
je
outsb
inc
xchg
inc
and
jge
repnz
cmp
and
or
inc
pop
inc
roll
pop
insl
addr16
cmp
lods
sbb
or
popa
or
stc
bound
jo
sbb
dec
outsb
ljmp
pop
add
mov
mov
arpl
mov
mov
movsl
cli
cmp
aas
inc
cld
stos
push
jo
cwtl
rcrl
in
hlt
cmp
xchg
scas
stos
mov
fists
pop
rol
js
leave
cld
adc
mov
mov
int
loope
and
push
mov
jo
cwtl
and
inc
mov
push
es
jle
and
add
inc
mov
popf
fbld
push
pop
ret
and
or
mov
scas
pop
cmpsb
mov
jbe
xor
call
inc
jle
daa
subb
loop
jnp
lods
inc
mov
adc
xor
out
pop
xchg
inc
inc
pop
xor
pushf
xchg
pop
ja
sbb
icebp
packsswb
fimuls
push
ficompl
cs
scas
inc
mov
dec
mov
mov
pop
outsb
pop
sbb
lret
push
test
and
adc
sub
js
or
divl
mov
inc
add
jbe
xor
loopne
icebp
and
iret
push
pusha
loopne
test
sbbl
lods
xchg
or
leave
adc
xor
sbb
pop
loop
lahf
in
mov
and
and
mov
xchg
cwtl
and
inc
outsb
push
xlat
mov
in
mov
xchg
xor
pop
push
cmpsl
jle
pop
pop
in
out
push
out
lret
adc
pusha
push
setno
fwait
xchg
adc
push
cs
mov
push
fbld
sub
push
rcll
xor
fs
push
repz
mov
jmp
adcb
in
lret
aam
in
pop
out
iret
imul
dec
xchg
xor
lock
cmp
into
clc
mov
into
clc
mov
dec
shrl
jns
sbb
ss
or
mov
xchg
hlt
push
sbb
dec
ret
decl
fmull
mov
inc
adc
push
mov
cmc
lock
outsb
lret
test
inc
cmp
je
pop
fbstp
mov
or
dec
push
xchg
inc
add
int
and
add
sub
mov
cmpsb
addr16
into
jp
inc
jb
aaa
sub
mov
notb
jb
dec
jmp
push
clc
fidivrs
rcr
out
aad
cli
js
inc
imul
ficoms
outsb
mov
jo
out
jae
xor
movl
and
mov
sti
add
xor
int
mov
icebp
test
lret
pop
es
mov
push
inc
daa
test
mov
mov
sub
andb
xor
cmc
sbb
push
push
mov
jecxz
pop
dec
adc
cmp
mov
lds
and
lret
sub
lods
es
rclb
xchg
je
adc
mov
ret
jge
ljmp
fs
push
fnstenv
mov
push
mov
pop
push
jno
jg
ljmp
ret
dec
pusha
int3
sbb
mov
shrb
dec
out
jl
sbb
scas
xor
cwtl
cmp
dec
sbb
icebp
mov
xor
fwait
mov
xor
mov
jp
pop
out
cmpsl
cli
dec
sub
add
shrl
movsl
lods
dec
loop
stc
xchg
mov
pushf
movsl
imul
arpl
xchg
sub
clc
pop
xor
movsl
sbb
scas
pop
cwtl
movsb
out
ja
adc
mov
cmc
in
xchg
pop
dec
lods
pop
lock
xchg
xor
cld
ret
cmc
test
sub
les
scas
add
push
adc
outsb
sahf
jmp
push
add
or
int3
mov
pop
xlat
shr
jle
push
push
mov
and
jg
or
mov
sbb
faddl
adc
cmpsl
jbe
mov
cmp
pusha
cs
cwtl
or
fsubs
lret
cmp
mov
cmp
lret
loopne
int
fcoml
sbb
jne
ror
jnp
popf
dec
add
lret
adc
js
lret
dec
mov
loope
hlt
push
mov
dec
adc
sbb
push
xchg
xchg
add
test
daa
mov
mov
mov
hlt
sar
dec
mov
pop
shll
lds
jg
int3
adcb
and
cmpsb
outsl
inc
xchg
imul
mov
xchg
icebp
orl
fbstp
cmpsb
fildl
pop
pop
out
fidivl
scas
sbb
cmp
mov
cmc
daa
in
sbb
mov
lods
xlat
push
popf
aam
mov
cmc
repz
je
arpl
mov
das
pusha
js
jg
push
aad
mov
in
jl
xchg
pop
mov
stos
roll
shrl
popf
xchg
das
xchg
loop
rorl
aaa
inc
inc
add
mov
adc
mov
js
sbb
mov
test
adc
mov
ret
stos
lret
adc
aas
outsb
aam
pop
and
cli
dec
ret
xchg
aam
loope
xor
fidivs
ficoms
cmc
cmp
hlt
adc
pop
xchg
jmp
fs
into
in
cmpsb
hlt
xlat
and
in
stc
jnp
stos
icebp
sbb
loope
jmp
jne
add
fs
mov
mov
ja
adc
mov
cmc
xchg
dec
mov
mov
test
cmp
push
adc
push
inc
mov
movsl
push
arpl
push
push
sbb
dec
mov
mov
mov
test
scas
mov
outsb
je
ja
daa
rcrb
loopne
xor
stc
push
mov
push
std
ret
cwtl
loope
lods
and
imul
sub
icebp
dec
jbe
push
push
stc
xchg
out
fldt
outsb
out
add
dec
mov
nopl
sub
flds
addr16
hlt
out
add
repnz
push
dec
inc
jmp
or
je
pop
inc
popa
ret
stos
pushf
xchg
mov
cs
rorl
pushf
push
dec
pop
in
ret
xchg
mov
pop
test
cmp
movsl
mov
js
xchg
dec
and
in
loopne
pop
out
jo
fdivs
xchg
jns
cld
push
orl
cmp
ja
mov
pop
jl
lods
std
adc
mov
lods
push
les
in
inc
inc
mov
add
pop
sti
hlt
sahf
fidivs
les
jmp
push
xchg
mov
stos
mov
cmp
shl
rcrl
test
lods
push
pop
pushf
or
lret
jno
call
adc
ret
test
xchg
mov
imul
mov
bound
scas
mov
cmc
xchg
std
sub
lret
loop
cmp
jp
ficoms
pop
std
mov
pop
vpxor
scas
sbb
dec
cwtl
fadd
jo
insl
fbstp
pushf
or
push
inc
fchs
scas
mov
jbe
jmp
or
push
pushf
dec
mov
out
add
push
push
add
and
sbb
arpl
iret
ja
gs
ljmp
negl
jl
and
or
ret
and
inc
cld
xlat
jl
push
arpl
sbb
or
addr16
push
or
mov
add
sub
dec
push
das
lock
mul
cmpsb
roll
dec
cltd
sub
xchg
mov
movsl
dec
arpl
sbb
std
or
cmp
xorb
movsl
jg
mov
test
clc
push
call
lea
ret
xchg
add
loopne
and
loop
cmp
pop
jmp
or
rcl
aam
inc
xchg
pop
dec
sbb
adc
out
lahf
js
jmp
mov
popl
hlt
out
ja
ret
outsl
xchg
dec
insb
jo
ja
or
cmp
xchg
lock
fisubrs
inc
icebp
mov
mov
sbb
jae
mov
cmpsl
inc
je
cs
divl
push
pop
mov
or
sbb
add
mov
or
out
mov
and
inc
add
jno
xchg
lds
lods
les
xchg
xor
or
push
pushf
xchg
ret
push
aaa
fsubl
out
inc
test
clc
xchg
inc
lahf
pop
pushf
call
imul
add
mov
ret
iret
lret
or
sbb
xchg
dec
pop
loope
int
dec
pop
pushl
popa
cmp
add
jns
imul
sub
xor
mov
and
call
and
mov
ljmp
sub
adc
ljmp
cld
fmull
std
nop
sbb
push
inc
cmp
xor
nop
out
call
dec
les
jns
call
lret
insl
mov
sub
jmp
mov
outsl
xchg
shrb
mov
adc
out
fcoml
cld
popf
imul
adc
or
push
iret
pop
dec
mov
push
aaa
and
mov
addr16
lods
jp
loopne
cmp
fnstenv
sbb
adc
sbb
sub
out
cmc
cld
shll
sbb
out
push
pop
and
or
lret
mov
scas
notb
jl
outsl
repz
out
sahf
jp
add
or
mov
adc
adc
popa
nop
ss
dec
jecxz
in
fadds
js
cmc
fsubs
fcoms
jo
out
ret
repz
lds
push
in
repz
add
cmpb
mov
jge
repnz
mov
lds
push
std
and
adcb
orl
into
mov
or
leave
stos
js
add
fidivl
add
jge
mov
mov
jne
insb
push
inc
cmp
add
repnz
arpl
jne
lahf
xor
rclb
jne
loope
out
mov
jne
dec
dec
sbb
les
js
std
adc
orl
ds
xor
jnp
xchg
movsb
rorl
mov
sbb
call
cmp
sbb
cld
sub
jnp
inc
test
std
adc
cmp
or
mov
fwait
inc
sbb
xlat
xor
push
cltd
xor
shl
cli
mov
aaa
les
dec
ljmp
push
icebp
and
cltd
stc
jb
push
cwtl
mov
pop
mov
jecxz
dec
das
dec
jge
sub
fsubrl
cmp
dec
out
xchg
cli
sub
push
les
in
pop
fisubl
fadd
and
and
fsubs
xor
add
jmp
mov
sbb
pushf
and
gs
imul
sbb
mov
mov
jae
lcall
push
loope
xchg
mov
sub
jle
pop
stos
jp
dec
pop
xor
push
add
das
sbbl
sahf
popa
lds
int3
or
mov
mov
cld
loope
jno
cmp
and
adc
rolb
pop
lahf
call
push
enter
lret
sahf
int3
in
jg
pop
mov
outsl
movl
push
scas
cmp
ret
loope
mov
lret
ja
cwtl
push
ljmp
aaa
dec
add
xchg
jmp
outsl
test
les
jb
xchg
sbb
jle
ret
push
fcmovnbe
in
mov
sub
arpl
incl
shl
sub
inc
repz
jg
test
sbb
pop
fiaddl
pop
fsubrl
pop
or
mov
cmp
add
movsb
scas
lea
xor
xchg
fidivrs
std
mov
in
lods
or
cld
fsincos
daa
cmp
js
js
ss
jne
push
add
dec
sbb
mov
push
pop
sub
xchg
inc
shlb
in
dec
cmpsl
adc
xchg
test
stos
pop
cmp
sti
jmp
int
and
mov
sbb
lds
nop
int3
pop
loop
dec
fisubrl
jecxz
js
dec
out
call
pusha
popf
ja
pop
xchg
or
pop
mov
lea
dec
pop
movl
sbb
add
xchg
int
pminsw
pop
add
insl
icebp
out
sahf
push
sbb
mov
out
shlb
aas
ds
jecxz
fsubl
fdivl
shrl
mov
sbb
cmc
push
jo
repz
push
clc
push
fidivl
add
pop
call
and
cmpsb
add
jmp
outsb
ror
fcoml
xchg
jmp
mov
adc
jns
sbb
loop
adc
loop
out
xchg
adc
cld
pop
fisubl
out
xor
aaa
enter
sti
aas
cmp
bound
testb
mov
cmc
scas
adc
sbb
movsl
data16
cmp
out
dec
jbe
add
rol
xchg
dec
sbb
push
cmp
jg
gs
aas
mov
push
pushf
ret
jno
int
adc
xchg
imul
punpckhwd
mov
add
aam
pop
pop
inc
enter
dec
push
repnz
loopne
js
ds
loope
call
or
mov
adc
sahf
mov
and
mov
inc
popl
pushf
push
aam
repz
fstpt
shll
xor
cwtl
fs
adc
arpl
inc
push
faddp
jns
sub
lods
adc
popl
xchg
in
in
ljmp
sbb
outsl
and
imul
mov
xchg
mov
jp
ds
mov
inc
jle
or
leave
or
adc
mov
cltd
xor
out
lcall
pop
cwtl
sub
je
shll
push
push
inc
lcall
push
mov
add
mov
dec
mov
xor
pop
add
jecxz
dec
inc
loop
or
xchg
scas
pop
jbe
push
mov
aas
andb
mov
xchg
add
adc
and
mov
in
pop
cmc
xchg
arpl
mov
dec
out
mov
loopne
jp
xchg
or
mov
mull
xchg
mov
xchg
cwtl
push
cmp
test
mull
sbb
pop
out
jge
or
dec
cltd
lret
sbb
ds
xlat
jbe
dec
arpl
int
mov
mov
dec
into
shll
or
clc
scas
and
push
lret
aad
push
ss
mov
jmp
pop
dec
les
lds
dec
cmpsl
out
mov
cli
lds
add
mov
pop
dec
sub
pusha
cmpsl
enter
mov
pop
xchg
or
cmp
jno
adc
jns
out
in
add
mov
or
mov
mov
pop
mov
sbb
aas
cmc
xor
das
aad
jno
push
adc
jle
dec
jge
sub
stc
xchg
add
das
jmp
loope
int
ret
lock
addr16
mov
scas
stos
lods
xor
mov
inc
mov
lahf
lods
gs
fistpl
lds
mov
sbb
add
mov
push
add
fistpl
sub
lods
or
jae
cmp
push
push
push
cmp
std
mov
std
dec
xchg
call
cmp
mov
xchg
lds
jg
das
test
jne
cwtl
mov
mov
xchg
testb
push
mov
rcr
mov
push
cwtl
outsb
xor
sbbl
mov
int
or
sbb
add
xor
subb
xor
mov
out
jo
adc
popa
imul
add
jmp
jne
lods
popf
sarb
into
sub
scas
add
push
and
call
out
jp
sub
out
cwtl
sbb
adc
ljmp
das
sub
or
movsb
les
push
addl
out
scas
scas
dec
xchg
arpl
jae
mulb
and
cs
pop
inc
outsb
fcomps
in
xor
aam
shlb
int
std
test
je
outsb
push
testl
scas
je
mov
add
push
dec
fxch
sub
and
fldenv
xchg
out
hlt
xchg
mov
xchg
jmp
cmpsb
inc
insb
adc
xchg
mov
in
mov
push
sbb
sbb
fisttps
jle
push
adc
rorl
mov
jnp
cwtl
in
movsb
sub
je
jnp
inc
push
cs
mov
loopne
popa
xchg
fs
inc
mov
dec
sbbb
loop
fcmove
add
pop
push
in
icebp
cltd
push
in
jle
inc
sahf
rorb
cmp
sbb
mov
adcl
ss
pop
sub
inc
dec
sbb
push
imul
push
lock
push
cmp
sbb
mov
ja
lea
das
inc
in
sub
xchg
movsl
add
stos
adc
sub
adc
sbb
xlat
push
add
adc
dec
xchg
call
enter
decb
negl
mov
repz
popl
mov
cmp
in
sbb
in
hlt
stc
ja
adc
sti
imul
xlat
mov
ret
xchg
xchg
mov
xor
test
mov
xor
push
jl
inc
sbb
inc
sbb
sub
cmp
dec
rcrl
repz
adc
ret
dec
xlat
fbld
les
xchg
adc
xchg
movsb
lret
test
inc
ret
sub
dec
mov
test
push
or
sub
xor
jo
jb
pop
cmpsl
daa
push
lcall
int3
jge
jns
ficompl
push
popf
inc
js
outsl
mov
inc
and
gs
dec
bound
test
mov
cmp
cmpb
mov
jecxz
es
jmp
sarl
call
inc
and
lret
sbb
add
rcll
add
or
mov
mov
mov
stc
ja
sbb
jae
mov
pop
loopne
insl
andl
sbbl
cs
ret
add
push
jbe
scas
and
mov
pushf
inc
mov
pop
pop
loopne
out
dec
and
rcr
fdivs
aad
scas
jnp
pop
mov
cwtl
dec
aam
mov
stos
cmp
push
push
lock
or
test
call
push
fisubs
pop
ja
fwait
jg
pop
xchg
lock
insl
mov
outsl
push
mov
aaa
outsl
fstpl
ljmp
sbb
cmpsl
sbb
es
mull
and
xor
push
adc
fsub
movsl
pop
sbb
ret
mov
inc
movsl
jb
xor
adc
and
cltd
push
mov
jle
sbb
mov
add
movsl
adc
sub
adc
arpl
mov
rcr
add
push
repnz
jae
mov
addb
jns
xchg
cli
pop
scas
push
push
push
pushf
sub
push
sbb
adc
sbb
lods
in
xchg
shr
je
jo
movsl
jle
mov
int
add
fldt
push
test
cwtl
inc
loop
aaa
in
stc
dec
inc
sti
popl
jb
pop
ror
pop
leave
loope
jle
pop
xor
dec
imul
mov
imul
adc
jge
call
inc
icebp
mov
dec
fs
imul
jbe
fidivs
ja
mov
scas
sub
in
lret
cmp
jb
fdivs
mov
cli
in
jnp
add
mov
pop
pop
sub
hlt
rcrl
push
xor
mov
adc
add
or
mov
sbb
imul
mov
adc
adc
and
or
test
je
cmp
aam
testl
sub
in
mov
std
add
add
popf
mov
sub
and
clts
jnp
sbbb
scas
inc
shrb
inc
mov
push
movsl
fstp
rcll
pop
push
cld
loopne
fsqrt
dec
hlt
cmc
mov
adc
shlb
stos
inc
jle
pop
lods
sub
or
ret
mov
rorl
fs
add
test
decl
mov
add
imul
imul
notl
dec
test
popf
aas
push
js
and
loop
xor
aad
stos
insl
mov
jae
out
xlat
arpl
into
dec
popf
push
mov
loope
cmp
xor
addl
inc
sahf
dec
mov
lds
xor
outsl
outsb
jo
dec
push
hlt
cmp
jae
push
es
jl
dec
push
mov
movsl
pushf
out
ja
mov
inc
sub
loop
jbe
loope
imul
lds
mov
pop
mov
add
repz
dec
or
xor
in
mov
sti
fdivrp
jl
pushf
daa
xchg
xchg
mov
insb
sbb
or
add
in
sbbb
sbb
pop
dec
pop
jns
jnp
and
fld
popa
nop
ja
mov
loope
push
adc
sbb
dec
sbb
adc
push
inc
mov
imul
push
in
mov
pop
vandnps
cli
push
and
mov
mov
dec
lret
daa
in
add
into
movsl
or
mov
test
int3
outsl
in
jnp
sbb
fwait
cmpsb
loopne
mov
or
lret
push
or
test
jae
mov
ljmp
pop
and
icebp
lods
jp
fstl
xchg
gs
aam
sub
push
mov
sarb
push
fs
std
mov
push
enter
imul
mov
xor
dec
jg
out
lods
dec
mov
sbb
inc
cmc
fmull
shrb
dec
in
cmp
cmp
popa
mov
cmp
ljmp
std
mov
adc
add
inc
lret
mov
vpshufhw
out
push
sbbb
push
int
adc
in
push
add
cmp
push
jbe
sarl
pop
dec
and
push
xchg
push
jo
sub
xchg
mov
pushf
repnz
movsb
or
movsl
add
adc
fwait
sbb
rorb
jmp
stos
cltd
fsubrl
adc
insb
push
fistpl
adc
out
int3
or
mov
divb
sub
or
mov
out
jnp
sbb
sbb
cli
addr16
adc
push
adcl
mov
sahf
xorl
or
sbb
cmp
mov
sbb
inc
insl
xor
push
cmpsl
in
sub
xchg
popa
xchg
cwtl
xchg
mov
fistl
test
xor
adc
cmp
addr16
mov
sarb
lret
jmp
and
sbb
repz
iret
cmpsb
dec
mov
sbb
dec
repnz
repz
or
out
ss
mov
repz
pop
ss
icebp
add
scas
mov
jmp
out
cmp
cs
mov
idivl
rcrl
inc
jno
adc
xchg
dec
sbb
jnp
stos
stos
jle
mov
cmc
xorb
or
push
leave
jbe
pop
mull
sub
ret
dec
pop
rorb
inc
je
hlt
xor
xor
sbb
adc
imul
js
iret
dec
push
pop
dec
push
loop
adc
aam
lea
testl
outsb
xchg
icebp
pop
xor
clc
imul
leave
push
rclb
inc
mov
out
aad
mov
dec
insl
insb
dec
sbb
adc
iret
lea
lods
inc
pop
incb
mov
lret
xchg
mov
xor
sti
cwtl
stc
mov
sub
mov
test
mov
sub
ljmp
and
adc
mov
loop
lret
in
cmc
enter
push
dec
dec
fisttpll
pop
lret
and
jo
sbb
jle,pt
pop
aaa
or
cmp
add
shrb
loopne
out
sahf
js
movsb
into
mov
push
movsb
aam
and
fstpt
addr16
int
clc
jnp
pop
outsl
or
std
cld
lcall
xor
mov
add
sbb
test
rcll
lcall
ljmp
or
test
dec
mov
lock
cmp
mov
or
pushf
fmuls
daa
lea
int3
mov
pop
je
fsub
adc
cmp
fcomps
mov
notb
sub
enter
add
or
fldl
mov
and
mov
dec
fidivs
shr
scas
arpl
jae
lds
mov
sub
xchg
xchg
or
fldcw
bound
push
sub
das
fdivrs
filds
mov
loopne
push
test
dec
sti
adc
push
notl
pushf
das
add
fwait
or
ljmp
scas
aad
aas
sti
inc
dec
fstp
cmp
sub
add
dec
xchg
mov
mov
repnz
push
push
sub
mov
stos
out
mov
lds
insl
and
int3
jbe
js
fnstsw
popf
cld
sub
movsl
inc
scas
xchg
fldcw
verr
iretw
popf
and
push
ss
mov
pop
daa
std
jp
dec
repnz
lods
push
xlat
add
imul
push
inc
sub
inc
popa
adc
pop
jecxz
jle
push
stc
in
dec
sub
sub
cmp
dec
sub
mov
xchg
push
aas
ljmp
jb
rcrb
adc
push
ret
sti
out
gs
pop
push
adcl
mov
xchg
or
sbb
jle
scas
pop
inc
dec
xchg
push
or
and
add
aam
divb
call
fucomi
test
pop
ds
adc
loop
mov
jnp
lods
xor
bound
push
int3
xor
mov
pop
jo
jp
roll
shll
mov
int3
int
xchg
push
aas
push
pop
stos
pusha
mov
jae
jo
testl
mov
lods
into
ds
or
xor
vpor
jne
pop
push
test
cmp
stos
mov
test
mov
mov
mov
and
stc
loopne
and
and
test
arpl
or
movsl
xor
lahf
lret
pop
mov
cmp
mov
call
xchg
les
and
shl
xchg
lods
mov
shlb
ss
mov
inc
jl
xchg
cli
repnz
js
popf
out
cmp
decl
mov
adc
gs
cmpsl
sub
lcall
loopne
mov
mov
filds
cmpsl
sub
cmp
out
push
bound
rolb
xchg
mov
std
mov
push
out
push
pop
mov
lahf
or
mov
mov
sub
mov
and
mov
push
and
xor
xchg
sahf
and
lret
dec
cld
aaa
and
mov
pop
and
arpl
lods
insb
xorl
cli
loopne
leave
fistpll
repnz
nop
sub
repz
adc
add
ja
jnp
andb
lahf
adc
lds
jle
jns
cmp
pop
cltd
fisttpll
data16
daa
cwtl
inc
push
loop
icebp
and
loop
imul
adc
lcall
jle
or
sub
test
pop
jp
test
mov
push
jp
jl
sub
or
lea
aad
mov
in
das
xor
pop
push
insl
jno
sti
pop
loope
jno
daa
inc
pop
cmp
aam
popa
cld
cmp
sub
insl
dec
int3
mov
push
fcmovnb
jo
mov
pop
pop
rorl
faddl
sbb
cmp
lret
push
cmp
cmp
mov
sub
xor
enter
mov
out
sub
jl
repnz
aam
cltd
mov
out
mov
int3
clc
cmpl
call
mov
jno
xor
mov
lods
addb
shll
cmp
sahf
xor
cmpsb
push
push
lahf
bound
sbbl
rcl
jle
arpl
dec
mov
out
cwtl
sub
cli
cmp
lods
jmp
mov
mov
call
pavgw
adc
inc
es
loopne
mov
rcll
jno
dec
mov
nop
add
not
cwtl
pop
insb
xor
push
addr16
cli
test
fildll
and
mov
js
ds
pop
out
cmpsb
mov
push
popa
dec
subl
scas
dec
or
fiaddl
xor
arpl
adcb
and
pop
jmp
insl
mov
inc
cld
dec
dec
xchg
in
cmp
pusha
addr16
jbe
adc
mov
ret
arpl
in
pop
out
test
adc
push
in
lock
loopne
adc
popa
das
jmp
xor
scas
push
mov
add
stos
add
das
mov
aaa
repnz
dec
scas
xchg
jns
inc
lods
sub
xor
sbb
fwait
inc
lock
jns
std
insb
cmpsb
rcll
cmp
imul
jp
sub
les
cmc
and
mov
xchg
sbb
push
movsl
dec
adc
std
adc
or
in
mov
mov
js
aaa
cmpl
pop
or
dec
testl
data16
pop
std
pusha
add
push
or
cltd
js
or
cmc
ret
sub
jns
xor
ds
cmpsb
rclb
popf
push
inc
loope
stc
xor
jne
fnstcw
or
rorb
orb
hlt
sbb
xchg
scas
xchg
or
and
xor
push
mov
sub
nopl
push
dec
mov
sub
repnz
sbb
dec
movsl
out
jnp
lods
xlat
lcall
stos
out
xlat
adc
cmp
push
repz
or
mov
outsb
out
rolb
movsl
push
pmaddwd
fcomps
add
mov
stos
xor
mov
testb
push
dec
es
sahf
arpl
push
stos
adc
push
aaa
movsl
dec
mov
movsb
scas
gs
iret
insl
push
mov
and
pop
popw
xchg
sub
addb
arpl
iret
cmp
jne
add
test
sub
aas
sbb
mov
stc
lock
imul
loopne
pop
mov
nop
mov
mov
xchg
add
inc
pop
or
inc
xchg
inc
and
lret
mov
inc
aam
add
mov
outsl
or
jnp
pop
cmpsl
mov
imulb
dec
lret
rclb
sub
popf
call
mov
shl
jl
ss
shll
and
insb
out
test
ds
addl
adc
insb
inc
or
mov
adc
xchg
mov
movsb
into
insl
das
and
lret
add
mov
fptan
add
jp
push
push
mov
jbe
repz
adc
mov
call
rolb
cmp
mov
negb
rcl
push
in
mov
sbb
je
imul
mov
fwait
cs
cld
lret
clc
lock
loopne
jmp
add
push
mov
cli
movsb
add
out
fldenv
lea
dec
aas
lcall
out
cld
icebp
inc
inc
das
adc
jnp
out
push
lcall
gs
movzwl
push
test
ds
mov
jmp
sahf
fnsave
cli
insb
or
arpl
int
dec
stc
faddl
sbb
outsb
in
jb
or
mov
loopne
in
add
cmp
test
lahf
mov
sbb
xchg
int
xor
xchg
and
adc
sbb
leave
push
outsb
mov
lock
push
mov
sbb
test
adc
push
xor
jg
cltd
jp
sub
cmp
dec
lahf
mov
xchg
dec
push
xor
push
mov
testb
stos
cmp
sub
cld
out
out
add
sub
xchg
xor
mov
imul
lds
pusha
push
loope
pop
inc
les
push
fisttps
lods
adc
push
pop
das
sbb
ss
add
pushf
or
mov
icebp
cmp
sbb
sub
mov
mov
lods
lret
adc
xor
push
cld
jl
imul
mov
xchg
stos
inc
mov
add
pushf
jne
adc
hlt
dec
jae
dec
dec
icebp
ja
and
out
pop
into
mov
call
mov
xor
sub
cmp
fistpll
jns
add
data16
cwtl
mov
pop
js
mov
xchg
mov
dec
insl
push
mov
mov
cmp
sbb
mov
inc
aaa
fwait
les
mov
sub
add
popa
mov
sub
nop
into
and
loopne
inc
and
jb
mov
lret
add
fldcw
mov
rolb
xor
cmp
roll
shlb
sbb
ss
lahf
rep
sub
xor
lock
cmp
aaa
sahf
std
xor
pop
push
xchg
jmp
mov
cmp
out
xchg
int3
dec
dec
mov
mov
push
lock
arpl
jno
lret
push
fisubrl
xchg
inc
sbb
jae
in
xchg
fmull
inc
cli
or
xchg
and
add
aas
inc
hlt
xchg
dec
test
call
iret
lcall
dec
iret
push
mov
ja
incl
das
orb
jbe
ds
mov
sbb
ds
stos
lds
push
in
std
pop
in
jns
aaa
out
mov
fimuls
scas
cmp
xchg
add
mov
pusha
jg
sub
push
cltd
enter
enter
inc
mov
sub
icebp
in
sbb
icebp
pop
mov
sub
aam
imul
repnz
gs
or
into
in
jge
push
inc
mov
sub
mov
fiaddl
push
hlt
sub
mov
inc
cmp
jno
ds
mov
jp
mov
out
popf
xor
mov
loop
arpl
movsb
and
or
jge
out
xor
pop
xor
inc
fistl
jnp
out
and
shr
adc
es
dec
in
fdivrl
aas
flds
dec
shll
add
pop
push
ret
call
push
adc
addr16
fs
and
xchg
cmpsl
and
imul
shlb
inc
sbb
inc
push
jge
sub
mov
fwait
in
xchg
adc
outsl
shrb
lds
outsl
loope
rclb
aaa
xchg
push
outsb
jae
popf
jbe
mov
fbstp
pop
pop
jg
pop
aaa
lods
or
paddq
test
xor
test
sbb
int3
add
dec
mov
cmp
into
movsb
movsl
push
sub
daa
cmp
in
add
pop
push
push
pop
addl
and
mov
mov
in
and
inc
adc
sbb
mov
fisubl
fmull
pop
or
aas
xor
das
fsubl
lcall
aam
xor
or
jmp
cmpsb
dec
sbb
dec
mov
or
flds
fsubs
lcall
add
dec
movsl
push
xchg
xchg
mov
push
xor
xor
dec
jne
fmul
insl
mov
jl
mov
pop
dec
lods
pop
fimull
jl
add
add
sub
rcr
push
lahf
jp
ja
mov
and
cltd
nop
jl
cmpsl
in
or
mov
sbb
push
mov
fldl
sub
ret
and
adc
jmp
addr16
push
test
dec
jnp
push
jmp
out
sarb
push
repnz
inc
aas
sub
inc
mov
inc
leave
bound
jne
lods
mov
sub
int
xchg
ss
push
sub
hlt
sub
iret
pop
pop
fimuls
gs
shlb
ja
outsl
test
mov
adc
lret
dec
adc
shlb
mov
adc
stos
outsl
mov
repnz
rcrb
movb
mov
mov
jg
fiadds
cmp
xchg
mov
cmp
inc
mov
cmp
out
stc
lcall
lock
daa
sbb
enter
sbb
ss
mov
daa
les
sbb
movsb
decb
inc
cmpsl
mov
out
fwait
hlt
xor
mov
xchg
hlt
scas
stos
jge
dec
test
or
jecxz
pushl
adc
pop
xchg
pop
sbb
sbb
jb
clc
or
adc
mov
cs
mov
push
das
xchg
je
mov
in
xchg
mov
cld
mov
push
js
mov
std
add
push
mov
mov
lcall
and
adc
out
mov
push
adc
popa
mov
pop
xchg
sbb
shl
shlb
push
cmc
push
jge
repz
iret
cmpsb
push
mov
pop
test
cmc
mov
jmp
shl
push
into
mov
je
lock
mov
inc
pop
outsb
jmp
fnstcw
xor
pop
fbld
fimull
ficompl
imul
push
fsub
jnp
mov
cmp
scas
jmp
imul
mov
mov
sar
pop
lods
pop
popf
jae
adc
cmp
add
fdivs
jecxz
stos
ret
and
dec
popf
les
dec
ds
hlt
in
add
dec
roll
fadd
ljmp
std
push
loopne
fs
sbbl
ja
xor
in
call
aam
and
nop
iret
pop
fsubr
test
mov
jle
jle
mov
fs
scas
mov
insl
sahf
sub
mov
xchg
test
pop
addr16
and
push
sub
lods
sbb
pop
jle
mov
sub
push
dec
or
and
jmp
pushf
subl
lret
xor
in
xchg
jmp
pop
push
pop
add
xor
add
call
jmp
cld
neg
xorl
sbb
es
mov
push
sbb
jge
inc
rcrb
lods
pop
notl
js
dec
in
push
rol
cmc
jo
test
pushf
in
pop
xchg
or
fldl
sti
push
std
mov
mov
cmp
and
push
mov
mov
testl
sbbb
or
and
adc
mov
or
dec
fiadds
aam
stos
push
icebp
pushl
cmp
sbb
add
mov
andb
mov
xchg
gs
popf
sbbl
pop
inc
xchg
subl
cld
enter
cmp
push
mov
fs
iret
push
adc
insb
dec
imul
sub
fcmovu
call
icebp
jnp
push
leave
mov
in
jae
mov
je
dec
imul
std
pop
cmp
mov
pop
and
mov
xchg
bound
lds
cmpsl
aaa
xor
pop
sbb
outsb
dec
xchg
xor
mov
insl
out
mov
stos
and
push
out
push
daa
push
outsl
sbb
iret
sbb
xor
lret
inc
adc
sub
dec
fcoms
divl
imul
call
out
jecxz
push
adc
out
ss
ret
bound
fildll
adc
inc
imul
pop
pop
scas
dec
ret
mov
jo
jno
insl
jno
sbb
repnz
fs
mov
xchg
mov
cmp
jmp
addl
out
loop
or
sahf
arpl
xchg
inc
cmp
add
mov
and
cwtl
aaa
cltd
cmp
fst
cmc
test
push
inc
leave
or
pop
fwait
xchg
call
push
inc
jno
sub
lea
outsl
addr16
xchg
in
es
popa
mov
xor
lret
push
mov
popa
mov
fcmovb
roll
xchg
jmp
jmp
jo
jmp
adc
jb
or
dec
cltd
fadds
mov
adc
jp
jae
roll
inc
mov
fistpl
xor
xchg
fsubrs
xlat
loope
mov
insl
aas
add
pusha
roll
mov
rcll
xchg
push
or
fxch
aam
cmp
lea
xchg
dec
and
jae
int
lds
adc
push
dec
dec
popf
leave
outsl
dec
jmp
sub
xor
stc
pusha
or
lea
push
das
insb
shll
addl
cmpsb
in
ljmp
lret
mov
adc
enterw
fdivrs
jmp
negl
test
shr
push
mov
or
push
vcvtph2ps
xor
test
imul
dec
or
xchg
mov
roll
cs
out
mov
mov
push
imul
inc
pushf
jb
out
filds
dec
xor
mov
push
subb
jmp
mov
stc
jbe
popa
xor
jae
xorl
mov
in
xor
inc
adc
jne
test
ljmp
sbb
sbb
lods
pop
jbe
mov
dec
sub
adc
mov
mov
cltd
call
icebp
addl
ret
faddl
ja
xchg
div
jge
sub
dec
xchg
ljmp
pop
cmp
fidivrl
out
fisubrs
loopne
push
je
push
ficoms
xchg
sbb
jbe
out
mov
jns
jo
pop
pop
movsl
testl
sbbw
push
mov
mov
jbe
ds
adc
mov
push
leave
jno
and
shlb
mov
clc
pushf
inc
dec
inc
mov
testl
fwait
push
popf
add
les
popa
gs
inc
add
xchg
push
adc
xchg
fisubrs
iret
dec
lret
and
roll
fmulp
pop
mov
es
in
cwtl
and
fimuls
add
fwait
movsl
or
push
out
out
mov
xor
xorl
lcall
or
test
je
push
push
in
sub
out
dec
cmp
dec
sti
sbb
pusha
stos
leave
cmp
xchg
fldl2e
mov
push
std
rolb
adc
dec
fistps
add
in
sbb
push
ja
pop
clc
loop
xor
adc
and
outsl
dec
fisubs
lea
sub
mov
mov
lea
push
imul
pushf
fnstsw
int
add
xchg
xor
mov
mov
add
inc
ret
or
xchg
in
add
or
in
cmpl
ret
jle
adc
push
cwtl
je
lcall
aas
stc
imul
ret
mov
pop
push
jno
mov
jne
mov
sti
iret
ljmp
movsb
fists
jno
xor
loopne
movsl
sub
subl
movsb
jne
int
outsl
sbb
xchg
jno
pop
cmp
cmp
movsb
cmp
imul
enter
shlb
loopne
cmpl
fadd
mov
inc
xor
inc
and
call
pop
stos
and
scas
cmpb
add
nop
test
and
stos
ja
mov
cmpsl
mov
cmp
sub
lea
pop
cmpsl
push
cmp
je
mov
adc
or
test
aaa
mov
mov
lcall
popa
jge
lahf
cwtl
nop
inc
jnp
loop
icebp
roll
popa
ret
stc
icebp
flds
xchg
adc
xchg
jl
xor
cmpsb
xor
dec
jb
in
add
xchg
enter
push
fldenv
sahf
fisubrs
js
lahf
pop
je
daa
mov
es
jb
jno
idiv
int
cmpsl
and
dec
dec
xchg
jecxz
aas
rorb
jmp
cli
notl
jmp
orl
fnstsw
mov
scas
ljmp
loope
pop
sti
insl
adc
or
inc
pop
aas
arpl
inc
jnp
pusha
les
testb
sub
cmpsl
fmull
push
push
xchg
sbb
mov
add
mov
mov
inc
push
addl
adc
por
test
mov
cmp
faddl
ds
or
xchg
or
loop
push
pop
push
lret
push
adc
data16
outsb
lret
push
and
addr16
cmp
mov
mov
daa
repz
xor
sarl
fwait
stos
popa
push
push
mov
push
cmpsl
jno
push
add
arpl
mov
ds
inc
push
inc
std
clc
jg
xor
push
data16
lods
mov
ret
push
es
push
sbb
aad
mov
negl
inc
jmp
xor
and
xchg
jmp
sarb
sbb
fwait
mov
sub
add
sbb
jo
or
fs
in
cld
mov
jne
pop
rorl
mov
sbb
insb
push
scas
jns
xor
test
daa
int3
cmp
mov
nop
adc
pop
scas
aas
jle
push
scas
lds
push
and
clc
jbe
je
addb
clc
insl
inc
cld
aad
sub
jne
and
push
shlb
add
push
mov
pusha
adc
fisttpll
fildl
adc
adc
outsl
xchg
xor
cmc
push
les
mov
in
out
fstl
jns
mov
fisubl
push
mov
ds
xor
jmp
jge
int
jmp
jae
and
loop
xor
adc
popf
lods
push
xor
adc
push
loop
jle
mov
push
push
dec
or
pop
mov
out
mov
jle
sub
ljmp
inc
cmp
cwtl
lods
xor
add
data16
nop
and
ljmp
orb
pusha
xchg
xor
outsl
push
outsb
sbb
in
xchg
pop
fisttpl
insb
mov
mov
dec
stc
js
mov
and
inc
xor
push
mov
sbb
jo
jmp
sub
lds
pop
xchg
mov
stc
xor
dec
pop
jb
push
xor
bound
add
les
push
mov
xchg
mov
lods
ljmp
and
fnstcw
addr16
ja
nop
movsb
scas
push
sbb
lea
jbe
ss
jp
push
fidivrs
push
fsubrs
stos
lret
or
mov
or
nop
test
xchg
cmp
arpl
or
shlb
push
push
mov
testl
push
sub
orl
mov
mov
sub
push
xchg
mov
pop
bound
mov
pop
mov
mov
dec
js
fdivl
in
je
push
push
push
inc
nop
xor
mov
xchg
sbb
pop
pop
pop
lods
adc
leave
mov
ror
mov
cmp
fstpl
and
test
bound
xor
inc
stc
stos
xor
flds
or
pop
mov
adc
sbbb
es
std
pop
lea
subb
out
mov
arpl
sbb
bound
mov
pop
or
mov
sub
fnsave
cmp
mov
pusha
fistpl
xlat
popa
jns
cwtl
sarb
adc
jo
andl
enter
mov
jg
cli
outsl
int
and
push
mov
jnp
loope
gs
mov
xor
movb
imull
out
es
dec
sti
movsl
xor
lret
push
stos
mov
inc
cmc
out
andl
cmp
cmp
lret
jnp
mov
stos
js
test
mov
inc
sbb
sbb
std
repnz
and
int3
cmp
pop
sti
stc
loopne
lods
enter
push
iret
sbb
int3
in
adc
push
aam
and
xor
jbe
lods
adc
xchg
pushf
dec
scas
xchg
mov
test
mov
push
stos
pop
iret
repnz
sbb
xor
mov
rclb
dec
loop
sub
cmp
xor
cmpsb
mov
out
lret
sar
push
pop
or
xchg
or
fsubrl
in
fxch
fcmovnu
push
xorb
fmuls
push
jb
pop
call
jge
or
imulb
xor
mov
data16
cmpsl
in
and
pop
lret
mov
jae
pop
xchg
dec
rcrb
push
fnstsw
lret
std
sub
push
scas
sbb
or
mov
sub
lds
pop
into
ja
add
sbb
adc
cmpsb
xorl
sub
cmp
les
mov
repz
lods
fimull
jg
lahf
inc
adc
adc
inc
popf
xor
mov
es
mov
add
test
cltd
xchg
pop
pop
sub
xor
mov
xchg
pop
push
add
imul
psubw
xor
mov
inc
dec
sub
lods
test
mov
aas
inc
push
decb
js
fdivrp
inc
in
sub
and
ret
into
repnz
jl
jb
mov
add
or
pop
mov
add
outsl
cmp
and
into
push
in
jae
add
std
mov
inc
sahf
repnz
mov
ja
cltd
shrl
mov
pusha
push
mov
xchg
into
pusha
cmp
xorl
xchg
cmp
dec
xor
fisttpl
stos
outsl
add
aas
and
andb
mov
jnp
push
cmc
fstpl
dec
pushf
out
call
mov
adcb
popf
jl
inc
jl
aad
movsb
and
rolb
pop
xor
push
xor
and
in
call
int3
imul
cmp
sbb
inc
add
sbb
jns
add
cmpsl
enter
dec
mov
adc
inc
roll
cmp
jl
pop
jne
dec
xor
mov
gs
aaa
push
iret
into
push
idivb
inc
mov
dec
lods
adcb
in
ljmp
frstor
js
jns
mov
rclb
into
insb
aam
cmp
rcrb
cmp
in
jmp
adc
mov
nop
push
loop
lcall
aad
inc
scas
xor
inc
sbb
jnp
mov
push
adc
jb
mov
dec
lea
fdivrs
xchg
leave
mov
cwtl
jne
sbb
lcall
dec
fs
mov
mov
std
lods
jl
in
xchg
mov
inc
int3
mov
add
mov
subb
add
pop
aaa
addr16
stos
mov
gs
sbb
or
mov
mov
loopne
pop
loop
stc
fisubrs
adc
out
inc
loop
xor
out
sub
cli
mov
div
scas
lret
jo
test
aad
push
adc
pop
mov
fcom
pushf
insl
xchg
push
inc
xchg
cwtl
roll
das
orb
cli
ffree
out
mov
adc
rorl
push
adc
push
lcall
repnz
stos
fcoml
or
xchg
adc
mov
in
sarb
das
add
push
stos
adc
lret
push
jae
addr16
cmpsl
je
test
jb
adc
lods
push
dec
arpl
fdivrl
jbe
ret
jge
xchg
jg
idivb
stos
jmp
ret
in
out
or
aaa
sub
cwtl
stos
sub
mov
bound
cli
xchg
mov
mov
je
leave
in
push
or
jno
cwtl
mov
lods
out
xlat
mov
test
lret
stc
pop
test
jne
sar
add
pop
sub
shrb
dec
jecxz
adc
loop
popf
aas
cltd
aam
xchg
shrw
mov
jo
insb
shlb
divb
mov
icebp
loop
pop
lds
pop
lcall
and
aam
and
xor
sbb
pop
or
pusha
insb
push
dec
aaa
adc
les
xor
xlat
xchg
push
jnp
push
rol
mov
push
test
cld
sbb
imul
fsubs
out
in
push
arpl
mov
pop
mov
fdivrs
inc
mov
mov
jmp
mov
fnsave
cmp
push
sub
lods
repz
fstpt
xchg
inc
lcall
mov
add
icebp
sub
push
xchg
imul
pusha
dec
sysexit
or
sbb
ss
jbe
rcrb
stc
add
jmp
dec
les
cmc
test
shl
xchg
jl
test
rcrb
or
or
cmovne
fwait
mov
jbe
cmp
push
add
test
fwait
push
mov
fstl
dec
loope
icebp
inc
es
inc
push
xor
stos
fiadds
rcrl
xor
dec
xorl
dec
xchg
bound
xchg
movsl
ljmp
or
jno
jge
mov
pop
lock
and
mov
push
mov
cli
cmp
iret
sbb
sbb
push
xor
mov
cmp
push
sarb
sbb
ds
movsl
cmp
cli
loope
in
test
inc
testl
cs
in
pop
jns
ss
hlt
cmp
rcrb
sub
add
in
or
mov
mov
inc
xchg
push
jo,pn
pop
int
int
inc
pop
mov
mov
cmpb
test
jne
mov
out
into
fisubl
vmwrite
ss
pop
in
and
xchg
xor
movsb
push
jge
xchg
cltd
inc
pop
je
mov
xchg
cli
loope
or
js
pop
mov
fnsave
incb
xor
xor
mov
push
js
push
rclb
lahf
mov
scas
xor
lods
dec
mov
push
inc
testl
pop
into
ret
and
nop
add
jmp
xchg
inc
loope
xor
xchg
jecxz
loop
repnz
lcall
rorl
dec
out
decb
cmp
push
repnz
mov
adc
adc
mov
jg
out
adc
pop
cmp
pop
cmp
fs
mov
push
repz
adc
xchg
mov
pop
das
push
or
mov
ror
leave
dec
pop
mov
lret
cmc
push
jle
sub
mov
sbb
lds
stos
xchg
loope
int3
push
push
and
jle
test
push
lcall
cmc
cmp
cmp
push
sbb
enter
and
cmc
xchg
dec
jmp
std
push
cmp
popa
adc
pop
lds
rclb
das
movsb
loop
mov
sti
mov
add
add
mov
mov
pop
rcrb
mov
in
getsec
sub
push
or
add
push
repz
add
inc
or
xor
icebp
pop
mov
popf
cmp
imul
inc
rcll
test
stc
test
mov
xchg
loope
lods
mov
dec
and
inc
test
incl
and
pop
cmove
fmul
inc
add
inc
pop
lahf
and
ds
jo
negb
imul
pop
or
lds
push
ss
mov
insl
mov
xlat
push
mov
dec
mov
sti
je
arpl
inc
rolb
pushf
and
and
xchg
jmp
cmp
clc
imul
mov
push
xor
fdivrp
or
imul
pop
push
stc
mov
inc
out
or
cmc
rcrl
leave
xchg
adc
jecxz
test
xchg
adc
and
inc
mov
jp
add
xor
inc
cmp
jge
mov
push
das
mov
nop
lods
sub
dec
icebp
das
pop
or
lahf
mov
add
pop
in
jl
orl
sbb
jbe
pop
cltd
testb
xor
jecxz
push
jnp
cmpsb
pop
in
data16
popf
lret
mov
ret
test
cmp
out
or
or
ror
cmp
sbb
scas
mov
xor
jo
aad
pop
or
std
dec
subl
adc
add
testb
sub
stos
or
pop
mov
or
mov
mov
je
or
cmp
lahf
js
inc
ret
iret
and
mul
dec
add
sbb
movsl
jb
iret
pop
hlt
test
and
cwtl
stos
movsb
sti
and
shll
add
sti
or
mov
sar
pop
shl
enter
mov
in
cltd
xchg
push
jl
mov
mov
js
or
jge
sbb
pop
in
fstl
in
and
xchg
mov
pushf
hlt
push
stos
mov
ja
pushf
add
inc
lock
fcoms
enter
dec
adc
jle
fcoml
mov
fisubl
test
mov
pushf
or
int
ficompl
jle
aas
ss
negl
pavgw
dec
cld
aam
xchg
into
inc
push
stos
aas
mov
arpl
sbb
popf
xor
mov
out
sarl
sbb
cmp
jmp
outsl
mov
pop
mov
mov
sbb
xchg
aaa
xchg
pop
pop
lds
cmp
lea
movsb
iret
adc
mov
sub
dec
addr16
mov
and
push
orl
jmp
mov
ds
push
ret
mov
frstor
sbb
push
lahf
jno
arpl
icebp
push
jecxz
or
test
test
jb
mov
inc
adc
jl
xchg
pop
repnz
mov
shr
or
jbe
mov
inc
sub
add
dec
and
sub
mov
into
dec
xchg
aad
jne
out
sub
add
pop
aas
orb
hlt
dec
aam
rcrl
jo
ret
cmp
rolb
sub
outsl
fsubl
adc
popf
shll
mov
out
push
jp
fmuls
mov
andb
push
movsb
sbb
ja
pop
inc
jae
cmp
lods
dec
js
mov
sub
dec
out
mov
xchg
or
adc
or
shll
popf
mov
xlat
cli
jle
out
insb
and
testl
dec
sub
sbb
repz
push
xchg
or
pop
push
and
cmpsb
call
rolb
mov
xor
pop
sbb
or
scas
xor
inc
mov
ror
int3
xor
cmp
cmpsl
aas
sub
daa
mov
push
mov
mov
adc
jg
pushf
adc
into
pop
dec
fiadds
int
aaa
outsb
in
leave
iret
pop
sbb
pop
lods
in
mov
inc
test
or
and
fcompl
or
in
imul
mov
ds
sbb
fucomip
lretw
ficoms
cmpsb
jl
fimull
loop
enter
ja
inc
into
xor
aaa
sub
sub
cltd
sbb
push
jno
shll
mov
mov
iret
fistpll
lods
add
inc
cmp
cmp
out
push
pop
pop
dec
cli
out
adc
adc
pop
lds
xor
sub
push
and
xor
int3
add
cmp
ret
clc
xor
push
jne
lea
dec
or
cmp
ret
gs
popa
daa
sti
xchg
ret
xchg
jl
or
mov
in
into
xchg
mov
and
bts
mov
mov
orb
jmp
jo
popf
loop
nop
hlt
push
pop
add
push
fisubl
jo
add
fwait
scas
or
adc
inc
insl
popf
dec
jle
inc
jmp
xchg
enter
push
pop
int3
and
and
add
loope
ret
insl
mov
inc
ljmp
pop
fs
pusha
fsts
cld
push
movl
imul
xlat
mov
ficomps
mov
adc
push
nop
enter
clc
fidivrs
fnop
dec
xchg
pushf
fprem1
rol
mov
mov
fidivrl
dec
pop
imul
pcmpeqd
or
mov
lahf
mov
movsl
sub
aas
inc
dec
inc
sbb
push
inc
pusha
test
xor
xor
push
imul
xor
insl
add
and
pop
sub
or
mov
push
adc
outsb
out
rorl
out
lea
loopne
jno
cmp
js
popa
jae
lcall
push
inc
mov
mull
or
sbb
jno
imul
mov
add
add
out
sub
push
imul
pushf
mov
sbb
sub
arpl
push
mov
ss
int3
inc
jg
iret
jno
mov
pop
fcoms
iret
push
stos
lahf
insl
int3
jle
mov
frstor
adc
fisubrs
pop
add
pushf
pop
es
popf
cwtl
sbb
sti
push
cld
mov
cltd
mov
in
popa
enter
pop
sbb
xchg
sbb
aaa
ficoml
mov
outsl
imulb
add
sbb
mov
test
ficoms
xchg
popa
sub
in
jl
gs
sub
rcr
mov
sahf
mov
push
icebp
call
sahf
mov
movsb
inc
and
mov
xchg
inc
in
fildl
mov
xchg
lahf
rcll
sub
push
in
pop
repnz
mov
inc
imul
xor
loopne
adc
lods
and
cmp
cld
lock
push
vpsadbw
jne
xchg
dec
fists
jl
fwait
jg
aaa
pop
and
push
xchg
stc
add
and
sti
int3
mov
addr16
xchg
pop
jmp
add
xchg
out
add
lds
push
mov
in
ror
iret
repnz
inc
shll
aas
cmpsb
out
cs
out
or
nop
push
cmp
ret
in
sub
bnd
loopne
and
sub
jp
jl
push
adc
xchg
or
scas
lcall
loope
xor
jnp
sbb
dec
adc
push
adc
gs
cmp
and
stc
sahf
sahf
inc
pop
push
sub
jmp
pop
or
fbld
movsl
mov
insb
push
jl
insl
inc
jnp
cltd
pop
cmpsb
hlt
cmpsl
sbb
or
add
popf
cs
and
adc
in
js
sarb
test
fisttps
push
mov
add
jecxz
pop
jecxz
sub
rorb
push
jecxz
int
imul
pop
out
adc
xor
arpl
add
push
idiv
lods
sbb
pop
jp
sti
jns
cmp
xchg
bound
inc
and
xor
mov
jbe
mov
xor
inc
cli
lods
mov
and
mov
mov
sub
repz
jge
mov
fnstsw
sbbb
jg
cmpsl
dec
addb
rcll
movsb
ficoml
mov
sub
pop
idivl
sbb
lods
shll
adc
xor
into
enter
sub
pop
add
mov
and
out
test
sub
repz
push
sbb
clc
lcall
mov
stc
loopne
xor
add
out
icebp
cld
cld
jle
int3
jle
aaa
les
pop
push
jmp
ret
sub
rorb
js
sti
mov
cmp
mov
aam
test
jge
aad
je
popl
jp
movsb
inc
and
xor
pop
jecxz
cwtl
inc
daa
call
jne
outsl
lods
xor
xchg
lret
mov
or
jmp
jg
push
nop
loop
loopne
pop
pop
leave
or
aas
push
lods
js
mov
mov
je
xchg
jne
addr16
pop
xchg
xor
std
pop
int3
fiadds
xorl
push
mov
push
xchg
icebp
rcrb
pop
test
jb
inc
jbe
ljmp
mov
jae
fisubl
and
lds
sub
pop
sahf
shl
mov
cltd
icebp
call
outsl
nop
outsb
fstps
inc
xor
jbe
in
and
adc
xor
hlt
dec
cli
popa
rorl
mov
aaa
jae
mov
in
sub
add
mov
cmp
mov
mov
leave
adc
aas
aam
fimuls
popa
mov
push
inc
mov
sub
stos
jl
icebp
dec
pop
mov
jmp
mov
pusha
pop
and
inc
pop
pop
loop
call
mov
xor
idivb
inc
js
ret
test
stos
xchg
stc
out
stos
int
or
xchg
dec
or
xor
inc
in
cmpsb
int
addb
xchg
clc
hlt
ss
jne
xchg
fcmovnu
dec
pop
les
dec
xor
out
iret
jnp
pop
loop
decb
ja
imul
into
adc
negl
and
xchg
int3
xor
gs
adc
mov
mov
mov
jae
cmp
cmp
pop
hlt
push
jnp
daa
inc
xor
shlb
sti
xchg
adcl
repz
cmp
movsb
inc
dec
out
out
bound
fstps
loop
jecxz
daa
arpl
fidivrl
or
and
inc
imul
pop
xchg
xchg
mov
clc
dec
xor
add
mov
inc
mov
xor
out
and
lcall
mov
xchg
or
mulb
inc
jle
jmp
js
pop
ja
adc
sub
mov
mov
mov
nop
pop
adc
bound
adc
mov
xchg
lock
faddl
dec
cmp
xor
call
dec
xlat
jmp
loop
mov
nop
mov
pop
cli
jo
push
mov
xor
add
cs
jmp
enter
xchg
lahf
sbb
sub
dec
test
inc
jne
jecxz
xchg
addl
jbe
jnp
lahf
js
fsincos
add
mov
mov
sub
jns
push
test
pop
jns
mov
jecxz
cmpsb
stos
scas
jnp
pop
xor
aad
jp
push
and
sub
mov
mov
insl
push
mov
jno
jp
call
mov
fwait
sbb
sub
push
push
mov
jge
aas
jo,pn
push
add
add
mov
fmuls
inc
loop
mov
jno
pop
stc
cmp
aad
dec
add
sub
imul
jns
inc
stos
mov
out
scas
int3
testl
pop
js
inc
icebp
xchg
xor
sub
xor
cmc
cmc
jbe
cmpsl
dec
inc
cmpsb
dec
stc
mov
outsl
sbb
mov
into
mov
sahf
stc
and
mov
adc
push
sbb
xchg
ds
fsubl
cld
add
je
movsl
dec
sti
pop
data16
rcrl
mov
addr16
push
popf
das
jno
neg
mov
pop
shl
test
aas
inc
pop
sti
shll
pop
and
out
aas
outsl
inc
in
push
jno
mov
sub
outsb
add
jne
cltd
jnp
xor
rcrb
addr16
mov
sbb
ds
sbb
mov
xor
xchg
gs
out
adc
lret
adc
sub
mov
push
test
xchg
out
outsb
and
mov
and
pop
xchg
das
out
and
lahf
inc
addb
into
lret
mov
fildl
add
add
das
xchg
shrb
pop
rcl
out
mov
xor
popl
sbb
jp
xchg
and
or
loopne
ds
and
mov
jle
adc
fcoml
jge
pushf
es
fildl
in
adc
jg
movsl
sub
sub
cmp
add
jle
std
test
push
sub
cmp
and
jmp
mov
data16
adc
pusha
loop
sahf
loope
movsb
jge
sahf
pandn
mov
ja
fwait
in
xchg
add
add
lcall
cwtl
loopne
cmpsb
jne
mov
push
popa
in
subps
or
out
mov
adc
cmp
jg
out
inc
cltd
cld
mov
xchg
xor
sub
popa
aaa
loope
cmp
mov
push
leave
fwait
fs
push
inc
mov
mov
pushf
sub
bound
call
mov
lcall
xchg
fisubrs
outsl
jmp
adc
mov
outsb
scas
leave
sub
movsb
insb
mov
sbb
mov
ljmp
loop
dec
stos
cmpsl
repz
insb
and
lret
sbb
mov
aaa
lock
mov
push
leave
mov
cs
and
ja
pop
pop
int
jmp
and
jno
mov
lea
inc
sub
sbb
js
mov
fscale
imulb
xchg
mov
lock
xchg
adc
push
pop
jbe
outsb
pop
cmp
leave
and
fimuls
and
nop
sbb
scas
mov
lret
iret
int
xor
sbb
mov
push
outsl
cmpb
lcall
negb
dec
enter
int
jecxz
cmp
xlat
add
shll
sti
pop
clc
sub
int
adc
xchg
bnd
rolb
in
leave
mov
cmp
mov
add
jae,pt
pusha
clc
test
adc
and
jp
popf
aam
shll
int3
dec
dec
push
addr16
xchg
pop
call
pop
lret
ficoml
pop
jge
test
insl
xchg
lods
cmpsb
pop
sarl
aad
mov
lods
data16
pop
ds
stc
jecxz
push
ljmp
sub
popa
or
in
jle
mov
mov
sarb
jae
mov
and
push
mov
adc
sti
imul
addr16
jb
dec
push
jge
mov
adc
mov
cld
lcall
add
js
fisubs
movsl
add
pop
out
js
outsb
xchg
sarl
loopne
rolb
shl
xlat
xor
adc
push
and
sbb
cmc
adc
ret
inc
and
xor
mov
mov
xor
mov
xchg
mov
loope
out
pop
adc
pop
call
cmpsl
inc
nop
out
loope
call
int
inc
mov
pop
xchg
push
jae
fwait
inc
push
xchg
xor
add
adc
hlt
xor
insb
jp
adc
je
inc
jl
jnp
mov
add
xchg
cmp
pop
mov
out
push
call
add
je
repz
and
pop
pushf
jns
xchg
sahf
dec
jmp
inc
jecxz
xchg
dec
fstps
mov
push
popa
mov
xor
jo
mull
jmp
ljmpw
ja
es
jge,pn
clc
mov
outsl
out
pop
int
mov
aaa
jnp
sbb
adc
movsl
out
push
scas
and
or
pop
popf
sub
jg
test
int
je
pop
inc
xor
loopne
imul
inc
xchg
cmpsb
lahf
test
test
sbb
mov
mov
add
test
xchg
sbb
mov
mov
into
das
and
cmpsl
jo
stos
lret
push
push
dec
shrb
je
rclb
rcrl
push
mov
push
daa
fs
adc
or
sbb
and
popa
ljmp
sub
lock
loope
in
rcl
fimuls
fneni(8087
inc
ljmp
imul
jns
cmp
js
pop
jo
pop
sbb
sub
xor
push
jge
sbb
xor
repnz
fwait
xchg
and
loop
or
out
mov
push
push
scas
inc
lcall
out
out
lahf
xchg
pop
in
pop
fstpt
subl
mov
xor
into
aam
adc
push
or
into
add
adc
lahf
add
xorl
je
rorl
insl
and
js
sbb
mov
push
push
mov
jge
nop
rcl
loope
stos
sbb
dec
sub
xchg
lret
inc
xchg
mov
les
out
jo
cs
repz
ret
cmp
leave
push
jns
test
ja
aam
das
mov
lret
push
jb
inc
jne
inc
icebp
in
hlt
push
sub
idivb
in
mov
loop
lcall
inc
xorb
divb
mov
push
mov
mov
add
push
mov
insb
lret
pop
dec
pushf
and
xor
adc
out
test
and
cmc
das
mov
gs
dec
pop
shrl
js
pushf
mov
cmp
or
cli
mov
nop
mov
mov
jo
pop
and
sbbl
pop
jmp
push
pop
xor
pop
ds
jne
lds
sub
push
iret
push
imul
mov
pop
call
cmpsb
fstpl
popa
sbb
movsb
cmpl
loope
das
movsl
loop
icebp
cltd
mov
inc
mov
mov
loope
cli
aaa
add
mov
mov
popf
sahf
fnsave
mov
push
int3
jnp
sub
iret
xlat
push
fcoml
push
addr16
or
loopne
pop
push
mov
sbb
sbb
xor
cmc
jle
push
popa
fisttps
nop
call
mov
adc
mov
in
mov
sahf
cmpsb
lahf
adc
cmp
push
repz
push
iret
push
and
mov
test
push
dec
enter
cltd
out
sub
bound
lods
push
faddl
test
mov
jbe
push
out
push
mov
cmpsb
es
lods
mov
adc
loop
inc
rolb
clc
outsl
nop
cmpsb
or
aaa
test
enter
arpl
movsl
fiaddl
adc
mov
sbb
lret
les
int
sbb
into
jle
inc
adc
sti
mov
lock
test
aam
shrb
icebp
mov
cli
daa
xchg
mov
xchg
inc
jecxz
sti
leave
jbe
loop
xor
outsb
daa
jg
dec
gs
lds
imul
out
xchg
dec
xor
mov
test
vaddsd
adcb
int3
cmp
lcall
int
mov
stc
stc
loope
push
dec
lods
mov
mov
mov
xchg
or
and
cld
pop
rcl
dec
xor
xor
adc
roll
cmp
nop
fbld
ffreep
outsb
and
dec
ss
mov
clc
shll
pushf
rcr
dec
push
sub
mov
sahf
pushw
inc
or
mov
shl
mov
dec
mov
cmp
ror
pop
aam
insl
icebp
jb
jmp
repnz
sbb
jge,pn
das
push
in
and
inc
add
jae
test
push
mov
jge
or
int
or
add
pop
aas
lds
dec
rcrl
addl
testb
in
mov
cmp
and
enter
clc
hlt
pop
cmp
lea
sub
call
mov
int3
sbb
loopne
or
mov
jp
insl
xor
test
pop
jge
inc
dec
in
mov
push
dec
push
orl
dec
and
int
out
pushf
insl
pop
push
sub
jp
jge
dec
mov
iret
adc
insl
in
stos
or
add
and
out
arpl
ja
sbb
pop
sub
in
mov
jle
cmp
scas
aam
adc
add
xchg
call
jns
test
jae
dec
xchg
aas
dec
xor
cmpsb
dec
and
jns
fmuls
int3
mov
iret
or
fwait
jg
out
ss
xchg
idivb
insl
movsb
pop
cmp
cmp
movsb
rol
push
xchg
mov
xchg
push
dec
test
dec
popa
imul
ret
jge
imul
std
dec
jg
shl
xor
cmpsl
cld
daa
mov
hlt
popf
std
or
add
fdivs
ret
pop
movsl
push
xorb
fwait
loope
vcmpss
ja
mov
adc
pop
ror
aam
pop
cli
lods
std
mov
add
in
and
jo
bound
cltd
push
mov
pop
cld
cmp
rorl
adcl
cmc
jmp
loopne
scas
mov
out
and
les
pop
or
icebp
inc
imul
hlt
cmp
ljmp
out
aaa
push
outsl
xchg
and
xchg
xchg
mov
iret
xor
cmp
in
sub
add
in
outsl
jne
cmp
inc
int
push
stos
jns
sub
or
decb
lret
add
clc
push
pop
dec
push
shr
cmp
push
negb
mov
adc
test
sti
adc
push
repnz
stc
mov
inc
pop
push
shrb
mov
jle
data16
mov
push
inc
aad
xor
enter
in
dec
push
jns
mov
or
push
cmp
mov
repnz
cmpsb
jecxz
movsb
xchg
inc
pop
lock
mov
mov
hlt
cwtl
push
xchg
rcrl
adc
stc
lret
mov
push
ret
popl
in
adc
lea
cmp
pextrw
push
push
jnp
sbb
add
xor
pop
xchg
lret
push
flds
and
xchg
xlat
jecxz
lock
repnz
xchg
fisubs
filds
or
in
daa
push
add
adcl
or
out
lea
or
mov
arpl
mov
xchg
or
jg
int3
cmp
iret
hlt
mov
xchg
out
mov
xchg
jnp
repnz
es
pop
xor
enter
test
roll
sbb
repz
and
popf
daa
or
sub
and
adc
ret
pop
out
loop
sub
jecxz
add
out
rclb
push
bound
add
arpl
outsl
add
jmp
js
andl
xchg
andw
mov
sti
cmpsl
push
cmp
aas
mov
hlt
jmp
sbb
stos
test
movsl
in
mov
test
push
jmp
pop
or
lcall
pop
xchg
pop
ja
lods
popf
inc
ret
stc
mov
xor
out
push
shl
pop
push
dec
add
loop
sahf
push
mov
push
nop
xchg
int3
bound
ret
cmp
cld
jecxz
cmp
enter
fwait
ret
lods
ret
ja
test
pop
dec
dec
xchg
push
ffreep
inc
or
and
sbb
and
cmp
push
popf
repz
push
aas
cs
mov
push
mov
pop
repnz
mov
gs
test
mov
inc
in
sbb
andb
leave
int3
jb
fistpl
mov
pushf
mov
or
sub
fldcw
sbb
jmp
mov
sarl
jle
ds
xor
adc
ss
es
imul
jg
mov
imul
leave
mov
fcoml
inc
std
int3
in
xchg
mov
outsb
inc
or
rcl
and
subb
nop
mov
add
loop
andb
sbb
sbb
lods
mov
sbb
add
xlat
repnz
pusha
cmpsl
out
mov
aaa
scas
aaa
inc
adc
es
fwait
lock
nop
stos
xchg
aad
and
andl
loopne
addr16
mov
into
mov
adc
in
mov
or
mov
fs
cmpsb
ja
orl
jp
sub
push
cmc
sbb
mov
ret
aad
and
lock
xor
mov
fisttpl
pop
imul
and
cmpsl
push
fisubl
cmp
jnp
ss
pusha
push
call
fildll
mov
insb
sbb
fnstsw
fistps
xor
push
xlat
adc
in
xor
mov
xor
ss
in
into
sbb
mov
add
xchg
or
jmp
pop
cltd
mov
test
jae
out
lock
scas
and
in
ret
fcmovbe
js
fstl
je
repnz
pop
mov
xor
das
gs
outsb
ret
stos
jp
xchg
xchg
pop
sbb
int
in
rol
stos
nop
and
bound
dec
mov
mov
pop
fmuls
or
aas
pop
pusha
mov
sahf
jo
jo
jno
mov
pop
xorb
adc
or
rcl
data16
rclb
add
pop
mov
inc
nop
inc
imul
mov
adc
icebp
aaa
and
iret
stos
pop
push
fwait
xchg
sbb
jmp
or
mov
rcr
imul
pop
mov
loope
ret
daa
sbb
fildl
stos
push
cmp
xchg
fistpll
mov
xlat
popa
sbb
mov
and
push
movsl
sub
xchg
pop
push
ljmp
fists
nop
push
cwtl
mov
xor
rolb
jge
orb
mov
lcall
cmp
or
stos
pusha
cmp
scas
fists
inc
repz
jp
fsubp
and
fcmovb
jb
rol
sbb
fcoms
notb
mov
jg
jnp
or
sub
mov
int3
mov
ds
and
or
pusha
pop
js
aas
sub
test
lods
add
les
mov
aam
and
xchg
lret
pop
fists
test
lods
test
je
and
xlat
shlb
fstps
jle
test
xlat
and
sbb
inc
loopne
lret
shl
roll
pop
mov
dec
mov
int3
cmpsl
aam
pop
pop
or
xchg
or
xorb
pushf
popa
xorb
pop
les
cmp
sbb
test
lods
jns
or
loope
daa
scas
ja
sbb
xchg
or
inc
add
mov
or
pop
jecxz
and
push
cmp
aad
jnp
and
inc
aas
inc
and
push
mov
pop
iret
mov
add
sbb
xchg
and
mov
or
loop
jns
ds
mov
jne
ret
ss
adcl
jecxz
inc
mov
aas
push
sub
xchg
cmp
mov
subps
adc
cmp
mov
mov
push
insb
adc
sub
jo
adc
adc
mov
push
lods
xchg
pushf
sub
cltd
or
xor
inc
push
cld
pop
add
jg
je
sahf
mov
xchg
push
lret
lds
shll
push
cmpsb
shll
filds
xor
inc
test
rolb
inc
shlb
pushf
xor
sub
repnz
movsl
pop
mov
ss
aad
loopne
and
add
mov
add
rcl
jecxz
jbe
dec
sub
pop
sub
pop
mov
pop
mov
aaa
or
and
fs
outsb
fdivl
pop
ret
push
jae
jecxz
pop
jg
xchg
pop
jp
adc
into
jp
popf
xor
and
mov
adc
push
cld
scas
mov
add
and
nop
js
in
lds
xchg
leave
inc
dec
mov
push
add
mov
pop
push
es
cmp
sarb
mov
push
mov
cmpl
inc
cld
out
shlb
mov
scas
sbb
sub
pop
mov
jp
mov
fcmovne
in
sbb
movsb
mov
adc
or
cmpsb
mov
add
xchg
iret
ds
mov
pushf
nop
pop
push
or
add
jne
scas
ret
sahf
fs
outsb
sub
jle
jge
pop
sub
inc
sahf
xor
mov
lret
fdivr
mov
mov
es
push
push
pop
int
rcrl
mov
shlb
sub
or
pmulhuw
xchg
stos
push
mov
cli
das
repnz
and
roll
call
rcrl
fsubrl
push
push
in
xor
outsl
push
cs
lods
jae
mov
mov
int3
xchg
imul
or
adc
inc
dec
rcrb
dec
jb
push
push
mov
in
mov
xlat
nop
sbb
sti
and
push
and
addl
into
out
in
outsb
xor
pop
daa
je
aaa
pusha
enter
and
xor
in
pop
test
out
add
sbb
cmp
movsb
sub
pop
pop
xchg
fsubrs
push
mov
inc
clc
loopne
push
cmp
push
or
lahf
mov
xchg
cmc
insb
jp
loope
test
loopne
mov
sbb
fwait
mov
orb
or
adc
mov
or
mov
add
and
andl
aad
mov
lock
sahf
lret
mov
or
push
or
pop
icebp
mov
jp
jmp
inc
add
shrl
insl
loopne
jmp
cld
push
inc
in
ljmp
fidivl
jae
jg
and
push
int3
test
and
or
sti
push
cmp
pushf
and
add
cltd
cli
or
aas
xchg
adc
bound
mov
push
arpl
mov
mov
mov
jle
mov
test
xor
add
mov
mov
add
and
jp
rcll
loopne
sar
jecxz
negb
int
testl
add
sub
dec
loopne
pop
jp
sbb
lret
cmp
gs
or
push
add
jge
add
sub
sti
xchg
das
cmp
mov
aad
mov
adc
mov
mov
fs
adc
xchg
shlb
sub
xor
es
mov
dec
xchg
jle
mov
das
xchg
in
fcoms
sub
fwait
inc
shlb
xor
sqrtps
dec
mov
dec
or
xchg
sub
sub
cmp
pop
cwtl
mov
out
dec
faddl
xchg
lret
dec
enter
or
in
rcrl
lcall
cmp
out
loope
mov
sub
dec
dec
adc
push
pop
call
mulb
fstp
mov
adc
loop
jnp
test
ror
lcall
je
test
mov
ret
jae
dec
pop
pop
jb
ja
insb
js
mov
dec
lret
in
lret
cltd
pusha
out
in
sbb
pushf
cmp
jnp
cli
or
inc
dec
movsl
and
aaa
in
push
leave
aam
out
ss
add
in
add
cmpsl
test
scas
gs
fs
imul
sub
or
into
mov
js
rcll
xchg
out
adc
mov
cltd
ret
fcoms
mov
cmovle
jmp
loop
lds
bound
or
add
aam
mov
xor
push
call
js
inc
dec
loop
sar
aas
movb
out
mov
mov
inc
ret
mov
repnz
inc
rcll
adc
sahf
es
repnz
pop
loop
dec
ret
jns
pop
add
inc
es
sub
sbb
fisubrs
cld
xor
sub
and
mov
inc
cld
fnstcw
xor
loope
test
cltd
mov
and
aaa
push
xchg
pop
inc
insb
fs
cwtl
testl
int
dec
mov
mov
mov
add
dec
fs
push
xchg
int
popa
inc
xchg
mov
add
test
leave
loop
and
push
out
xchg
sbbl
inc
and
cmp
inc
bound
pop
bnd
pop
leave
xor
push
xor
add
xor
pop
dec
dec
rorb
inc
clc
idiv
xchg
push
adc
scas
add
add
jns
push
test
sbb
mov
stos
pop
icebp
lcall
mov
or
imul
xor
mov
adc
incl
xchg
imul
mov
subb
arpl
dec
xchg
lock
cmp
pop
popa
outsl
aam
or
adc
cs
mov
jne
add
cmp
and
jns
sbbl
jbe
xor
add
daa
dec
xchg
xchg
pop
imul
leave
sub
fistps
xlat
push
les
sub
dec
aas
mov
js
scas
std
js
push
dec
imul
adc
mov
or
mov
fsubrl
or
xchg
lds
sub
push
lods
test
mov
popf
lods
push
cld
jbe
adc
leave
fldenv
push
gs
imul
jno
ret
mov
int
movsb
ja
jbe
ja
xchg
mov
xchg
mov
pop
pop
mov
je
xchg
sti
addl
inc
sub
push
leave
ret
dec
and
inc
or
xchg
mov
arpl
xchg
jae
push
jle
lock
pop
mov
aaa
cmpsl
xor
jecxz
test
mov
cs
insb
fisubrs
mov
std
xor
je
dec
add
cmp
pop
mov
jg
inc
shll
lods
in
or
cmpsl
mov
or
mov
stc
rcrb
jle
xor
adc
in
nop
daa
push
push
xchg
mov
movb
cmpl
dec
int
shrb
fisttpll
xchg
push
cmp
outsl
ficompl
add
inc
aam
mov
in
xchg
lock
xchg
icebp
push
adc
sti
pop
sub
lret
fwait
nop
movb
xchg
ja
xor
pop
call
rorl
pop
mov
ja
push
push
loop
adc
xchg
fsubrl
das
push
dec
xchg
or
subb
scas
or
or
popl
xchg
imul
mov
jle
xor
popf
sarb
pusha
iret
and
cmpsb
jbe
inc
cmp
mov
stos
xchg
aad
aas
lds
sub
or
or
xchg
jno
sti
les
mov
lea
fildl
cmpsl
shlb
aaa
sbb
iret
flds
movsb
adc
xchg
aaa
cmc
xor
repnz
icebp
test
pop
mov
shlb
inc
jo
fwait
xchg
test
mov
add
flds
iret
int3
sbb
cmp
addb
dec
mov
sbb
cmp
lret
fbstp
push
lods
sbb
scas
mov
test
xchg
dec
adc
lods
es
push
inc
sub
cwtl
xor
mov
add
fnstsw
sbb
test
outsl
pop
loope
iret
cmp
add
andb
ja
xchg
aam
jp
stos
mov
stos
sbb
aas
ror
test
pusha
fincstp
les
pop
pop
cltd
jno
xor
mov
and
or
pop
inc
mov
inc
cmp
ret
cmp
mov
xchg
in
or
sbb
sbb
cwtl
ds
ret
sub
xor
lret
jge
test
lahf
xchg
cmp
ss
push
xlat
jmp
jne
adc
and
cmc
mov
sub
push
dec
pop
adc
sbb
push
inc
xor
dec
xchg
les
gs
add
addr16
aaa
xorb
ja
lds
xor
cli
xchg
cltd
js
fwait
sub
jb
outsb
jp
hlt
in
mov
push
outsl
in
jns
mov
dec
cmp
mov
mov
mov
addps
je
xchg
sub
sbb
rol
sbbl
sahf
mov
jmp
scas
adcl
clc
jmp
out
sbb
jnp
sahf
dec
jmp
fdiv
mov
cmpsl
cmp
ja
pop
mov
bound
enter
mov
jae
insl
mov
mov
sbb
dec
mov
sti
mov
inc
push
inc
pop
cmp
sbb
addr16
fadd
sbb
ret
outsb
rcrb
sahf
and
xchg
push
out
jbe
scas
in
repz
jp
sbb
push
test
jne
out
scas
loope
lahf
pop
push
arpl
mov
xchg
jo
mov
movsb
leave
dec
divb
xor
orb
movsl
cmpsl
pop
dec
xor
repz
or
xchg
and
adc
mov
je
push
loope
mov
mov
add
fisubrl
jb
les
int3
jno
xchg
inc
shlb
pop
inc
sbb
in
cmp
xchg
clc
jp
pusha
xor
mov
adcb
push
sbb
dec
les
inc
xchg
movsb
dec
inc
sub
imul
insl
imul
test
adc
stos
lahf
cmp
xchg
stc
dec
inc
sub
jle
or
mov
cli
in
outsb
cltd
adc
or
scas
fcompl
out
sub
and
test
xor
xchg
inc
mov
add
pop
mov
movsl
es
dec
jo
test
xor
aad
test
hlt
and
inc
into
mov
pop
repz
pop
popa
outsb
cli
aas
mov
and
cmp
fxch
je
sub
out
xor
xchg
mov
paddsb
jo
out
cmp
xchg
dec
leave
fstpl
xor
push
lret
mov
mov
push
push
push
fistpll
popa
sbb
dec
insb
inc
loop
sub
ljmp
leave
push
pop
enter
fnsave
jbe
enter
iret
lahf
cltd
cmp
pop
data16
xor
pop
lods
mov
adc
mov
sbb
shrb
pop
stc
adc
mov
push
sub
cmpsb
ficoms
mov
cwtl
call
dec
dec
sbb
test
int3
addr16
dec
pop
shll
and
xchg
movsl
cmp
fldl
xchg
mov
lock
mov
dec
std
push
jl
ds
push
icebp
pop
loopne
ret
nop
sahf
jmp
mov
notb
mov
lcall
repz
add
mov
push
push
inc
cmpsb
sub
aad
aaa
and
outsl
xor
mov
jge
ret
push
xchg
jnp
inc
cmp
cmp
loope
call
or
pop
fwait
add
mov
mov
movsl
cld
int
dec
mov
jne
cmp
les
sbb
loopne
mov
ds
or
and
jg
ret
jae
shr
fisubrl
bound
cmp
sbb
or
mov
leave
mov
jl
dec
mov
inc
rclb
add
subl
push
dec
addr16
push
cmc
out
jbe
pop
or
and
sarb
mov
dec
rcl
push
xchg
adc
jno
xchg
xor
xchg
xchg
dec
cmpsb
cmp
mov
adc
sbb
popf
fs
sub
ss
sub
pusha
imul
fs
and
sub
mov
arpl
nop
cltd
adc
mov
aas
sub
les
jne
scas
nop
lock
es
adc
lods
mov
sub
fidivs
cld
mov
out
andb
popa
int3
imul
adc
mov
cmpsl
int3
popa
ret
push
or
sub
xchg
dec
jne
data16
stos
add
nop
inc
in
cld
mov
or
pop
mov
mov
jbe
adc
cmp
jnp
adc
out
xchg
shr
or
lcall
clc
mov
and
push
inc
les
adc
addr16
push
jge
cmp
insb
popa
imul
and
fnstsw
xor
test
test
jbe
add
mov
add
mov
bound
pushf
je
jb
testl
jbe
cs
cmp
fcmovnbe
ret
ss
popf
adc
in
cli
mov
dec
sbb
lods
push
sahf
in
adc
fnsave
push
cmp
sub
test
mov
daa
and
nop
mov
xor
jnp
fnstenv
dec
cmpsl
xor
movsb
xchg
dec
std
xor
sub
in
or
clc
or
flds
mov
inc
insb
xor
ljmp
adc
ljmp
jge
mov
imul
jns
mov
sti
mov
mov
pop
pop
mov
sub
inc
fidivrl
ret
iret
jno
adc
in
jle
xchg
xchg
es
fs
jmp
dec
inc
pop
pop
daa
push
pop
rorb
bound
xor
mov
mov
in
aas
cmp
fldt
ss
inc
or
jl
out
cmp
or
and
lea
jl
movsl
push
das
scas
int
repnz
or
shlb
and
not
fwait
mov
ror
pop
icebp
insb
fldt
cmp
out
or
push
movsb
pop
cld
push
lds
lret
and
ret
jo
out
jo
stos
push
sti
into
aam
repz
cmp
pop
sub
xor
dec
xor
sahf
mov
push
in
xchg
rolb
into
notl
in
cld
xor
push
fadds
js
dec
fldl
rcr
mov
push
idivl
dec
push
lea
pop
pop
mov
je
loope
popa
cmp
adc
xchg
es
test
sbb
mov
cld
sti
sbb
fstps
insb
inc
imul
out
push
mov
xchg
inc
ret
add
pop
jge
jle
lods
je
cmp
inc
pop
cmp
call
fdivrs
or
cmpsb
pop
in
pop
add
or
push
test
rclb
aam
jge
add
xor
fsubrl
jp
lret
sti
icebp
rcll
pop
inc
dec
mov
or
pop
movsb
inc
outsb
push
jb
fs
xor
xchg
mov
mov
pop
lock
mov
mov
mov
pusha
inc
mov
or
cmpb
test
daa
clc
push
jns
insb
fwait
mov
cmc
scas
ret
adc
push
lods
mov
inc
xor
iret
mov
hlt
inc
xchg
je
mov
mov
mov
clc
jnp
mov
xchg
mov
and
clc
sbb
cmpsl
cli
push
cmc
inc
inc
fists
fdivs
ret
je
jg
pop
xor
adc
xchg
cmp
pusha
mov
idiv
jl
jb
add
mov
xchg
lcall
cmpsb
ljmp
in
xchg
insb
ret
inc
dec
mov
dec
xchg
mov
mov
xchg
insl
or
ficoms
movsb
sub
xchg
push
push
mov
in
and
xor
jle
sub
xchg
push
xor
arpl
aas
fadds
inc
aam
mov
pop
or
mov
pop
ss
pop
dec
cmp
aaa
je
jne
xor
dec
mov
mov
clc
outsb
aas
cmp
mov
lahf
dec
outsb
inc
fnsave
xlat
jecxz
add
inc
imul
mov
lcall
mov
jg
mov
cmp
jmp
ror
jae
cltd
push
jle
add
xchg
mov
jle
iret
adc
or
push
adcb
push
ret
or
inc
inc
out
mov
rcr
fsubs
cmpsl
lcall
mov
mov
pop
push
sbb
add
xor
shll
sbb
xchg
adc
jle
lods
push
movsl
pop
cmp
dec
mov
out
test
push
push
xor
xor
fcomps
and
pop
push
mov
orb
xor
das
mov
inc
pop
mov
fidivs
adc
divl
arpl
add
mov
pop
add
test
mov
push
or
imul
push
mov
xchg
xchg
dec
mov
pop
push
ss
fs
js
push
int3
addr16
loop
adc
mov
inc
ds
outsb
sub
inc
pop
sbb
js
fnsave
sub
sbb
nop
jg
pop
int3
out
cli
xor
jno
in
lds
bound
adc
arpl
movsb
out
in
lock
lret
cmp
and
mov
add
push
mov
rclb
cmpb
pushf
scas
push
mov
outsb
sarb
shlb
ficomps
cmp
push
fldenv
fs
adc
mov
mov
hlt
xor
lock
inc
icebp
cltd
mov
jp
pop
shl
adc
pusha
add
mov
add
push
adc
test
cli
call
adc
scas
lock
push
les
pushf
data16
xchg
fwait
jg
outsb
dec
into
pop
fwait
movsl
pop
mov
inc
popa
mov
mov
aas
in
xlat
repnz
push
adc
ret
lock
xchg
lods
lret
hlt
xor
cmpsl
fcmove
push
in
shlb
rorl
xchg
hlt
in
fwait
cmp
xchg
rclb
jns
cmp
jecxz
call
cmp
cmpb
gs
xor
cld
pop
out
mov
xchg
mov
lods
gs
adc
mov
in
inc
cmpsl
inc
shl
pop
adc
and
mov
inc
je
fsubl
xor
dec
push
lods
pop
int
mov
mov
inc
mov
mov
popf
sub
loope
adc
push
mov
mov
insl
dec
hlt
push
inc
addr16
out
xchg
dec
mov
into
jp
push
push
jno
cwtl
mov
sbb
xor
jp
cltd
addr16
inc
mov
idivl
mov
shrl
add
arpl
pop
sub
xchg
das
btrl
push
xchg
jl
outsl
cld
sti
add
pop
sub
into
mov
xor
test
xor
les
xor
in
push
push
xchg
repz
cltd
xor
pop
mov
mov
imul
pop
mov
bnd
pusha
call
test
push
xor
push
mov
sbb
rep
scas
jl
dec
lds
add
into
mov
and
and
push
xchg
movsl
cmp
rorb
cmp
jmp
mov
cmp
outsl
inc
cmp
mov
cmp
pop
ss
or
sbb
jmp
inc
inc
push
cs
pop
inc
or
ja
cs
js
xor
mov
sahf
sub
ljmp
faddl
fwait
mov
jnp
adc
xchg
bound
pop
pop
sub
scas
clc
aam
ret
cmp
cwtl
cmp
ret
int
mov
xorb
sbb
jo
or
mov
int3
mov
pop
es
mov
cld
mov
jmp
icebp
push
in
xor
hlt
ret
gs
jb
das
and
xor
sbb
pop
les
nop
mov
scas
dec
in
mov
jl
into
addr16
fdivp
jecxz
and
mov
mov
sbb
jne
fwait
ja
sub
stc
in
gs
stos
push
imul
test
pop
cmp
mov
pop
mov
jle
mov
lcall
es
or
adc
inc
pop
mov
cmp
int
mov
cmc
fldenv
movsl
mov
sbb
ds
pop
sbb
ret
and
call
ret
test
push
push
iret
out
adcb
mov
mov
std
and
iret
lock
xchg
ret
es
xor
leave
lret
and
in
jmp
xchg
lds
lret
adc
pushfw
outsl
in
sbb
xor
mov
into
jbe
xor
into
xchg
imul
mov
cwtl
pop
hlt
jecxz
jb
xor
movsb
aaa
push
cmp
lds
mov
and
lcall
insb
and
aam
sbb
xchg
fdivrp
cmpsb
fwait
push
jb
idivl
sbb
cltd
mov
movsl
iret
mov
jp
jno
add
out
xchg
or
add
xchg
fwait
mov
pop
fstl
popa
xchg
insb
mov
iret
enter
pop
cld
push
popf
stc
push
jg
movsb
out
cmp
hlt
jnp
shlb
test
daa
lcall
in
mov
cmp
sub
out
jle
loop
test
inc
jmp
outsl
xchg
jb
pop
jae
and
fwait
clc
add
in
leave
cwtl
pushf
mov
flds
push
push
push
aad
mov
and
clc
test
cmpsb
mov
sub
das
mov
int
hlt
sub
pop
rol
xlat
mov
mov
inc
hlt
cmp
cmc
pop
aas
cmpl
jge
sbb
popa
iret
cmpsb
das
jmp
dec
popf
and
sahf
data16
adc
or
cmp
lahf
stc
out
sub
data16
int3
ljmp
ljmp
sbb
inc
daa
xor
movb
in
out
fsubl
push
adc
sbb
pop
mov
sarb
push
test
ret
mov
jne
fdivr
sarl
scas
call
adc
movb
mov
xchg
mov
lds
push
mov
fxch
jns
sbbb
jne
and
shll
inc
jecxz
add
mov
inc
cwtl
cmpsb
mov
sbb
inc
add
dec
sub
dec
mov
stc
hlt
jmp
cmc
jnp
mov
mov
sub
enter
mov
mov
mov
inc
xchg
xchg
iret
push
mov
and
cs
jns
mov
inc
into
scas
in
fdivp
in
xlat
divl
js
ds
push
clc
mov
mov
xchg
push
and
dec
dec
mov
jle
or
and
sarb
xchg
and
rclb
loopne
mov
repnz
mov
or
xchg
rclb
inc
mov
pop
loope
jbe
inc
add
in
xchg
inc
mov
in
aaa
cwtl
xchg
lcall
pop
ljmp
and
outsb
mov
sbb
push
in
jge
fucomi
dec
data16
aaa
addr16
daa
aam
subb
add
mov
sub
sub
mov
aas
push
mov
dec
jge
sub
loope
call
sti
js
scas
enter
fisubrs
fnstenv
dec
aad
jecxz
stos
mov
setge
loope
mov
test
std
push
jbe
repz
push
and
pusha
pushf
xchg
daa
lods
and
lret
shlb
sub
test
adc
cmp
andb
push
lods
loope
jb
mov
cmp
sub
out
lock
fisubs
sbb
fidivrs
ljmp
add
nop
mov
inc
orb
and
push
popf
fistpl
adc
fs
xchg
inc
xchg
jge
sbbl
testb
sbb
mov
jmp
cmp
inc
in
jo
stos
aaa
mov
add
pop
jmp
mov
cld
aas
mov
ret
jle
jecxz
jb
mov
subl
adc
sbb
adc
sbb
imul
jns
icebp
aas
add
sub
cmp
je
mov
hlt
mov
adc
inc
mov
test
sbb
pop
out
into
loop
cmp
call
push
xchg
mov
push
pop
shr
out
sbbb
sbb
mov
inc
das
mov
cmp
cmc
in
aad
mov
jmp
negl
xchg
int3
mov
push
scas
stc
std
xchg
sbb
jle
and
adc
cmp
imul
dec
out
lret
out
cmpl
sbb
adc
mov
jp
scas
pop
add
sub
loop
mov
das
in
cltd
iret
loop
inc
popf
lret
jge
jbe
insb
fdiv
mov
and
iret
jae
popa
push
xor
mov
insb
push
out
push
jb
add
mov
test
or
push
cmp
les
jo
mov
cmpl
cmp
pop
sbb
sub
gs
xchg
stos
insl
outsb
mov
or
xor
sub
or
pop
jne
into
in
push
cltd
test
notl
mov
sbb
push
lds
pop
loop
xchg
mov
pop
sbb
dec
pop
add
lahf
int3
jb
clc
into
and
jle
enter
sti
mov
stos
mov
pop
or
push
sub
sbb
add
loopne
add
pop
mov
fld
jl
inc
int3
push
xchg
mov
or
daa
sub
out
aaa
mov
xor
xor
push
push
fadds
adc
testl
mov
pusha
sbb
inc
inc
sbb
aaa
pop
out
jae
aam
test
lret
dec
loop
jb
mov
notl
inc
inc
push
mov
movsb
cmp
xor
addl
out
cs
fistl
add
ja
mov
cld
or
test
int3
dec
sar
jmp
xor
mov
hlt
jmp
mov
push
xor
inc
out
add
jp
or
sbb
push
dec
mov
inc
imul
jbe
vpunpckhdq
push
xchg
bound
mov
push
dec
lods
xchg
cmp
mov
sub
add
inc
inc
jg
fiaddl
jl
out
cli
push
fwait
bnd
dec
int3
imul
stos
fs
in
mov
and
sub
jne
adc
addl
fildll
fidivs
clc
mov
pop
out
dec
jne
jge
lock
or
adc
xchg
jle
mov
xor
xor
je
inc
and
lret
jnp
mov
imul
lret
fidivl
sbbl
stos
nop
daa
aaa
mov
inc
sbb
lods
xchg
pop
push
ret
push
mov
scas
mov
sub
add
cmp
test
adc
andl
pxor
ret
test
xor
jbe
jmp
mov
pop
test
cli
adc
test
mov
inc
mov
aam
inc
bound
psubsw
rcrb
repnz
jnp
add
bound
add
aad
jle
add
adc
leave
mov
adc
scas
cwtl
sar
insl
nop
mov
cmp
cmp
inc
jmp
scas
add
dec
mov
addr16
push
jl
shl
mov
je
das
xor
insb
xchg
mov
push
lcall
jbe
jg
cld
sbb
insb
mov
dec
loopne
outsl
icebp
adc
dec
push
ret
mov
xlat
pop
add
dec
pop
and
sub
nop
sti
cmp
adc
pop
adc
pushf
scas
in
in
pop
test
adc
jae
cli
add
sbb
mov
xchg
mov
xchg
add
dec
or
dec
lods
fs
inc
rcll
mov
lcall
lds
in
clc
in
adc
cmpsl
ss
shrb
and
fsubl
enter
jo
loop
mov
mov
cld
jae
inc
out
lahf
sar
mov
cmp
mov
sub
and
hlt
xchg
mov
push
notl
mov
fwait
out
insl
inc
jno
mov
cmp
cs
inc
xchg
pop
scas
sahf
cmpsb
aaa
mov
dec
arpl
hlt
jnp
cmp
lahf
insb
and
and
jle
cmpsb
neg
mov
ret
xor
inc
ja
and
sti
rcl
xchg
ret
orl
jno
jb
xchg
movsl
hlt
pusha
ficoml
pop
sti
pop
push
push
movsl
aad
sti
scas
and
pop
in
inc
test
in
push
rorl
movsb
cli
ja
dec
inc
insb
and
mov
rcll
push
or
mov
cmp
dec
aas
hlt
push
sti
or
adcb
pushf
mov
test
dec
cmp
arpl
xchg
dec
popl
jbe
jnp
jmp
push
cmp
add
mov
test
inc
sbb
aaa
scas
lcall
test
cmp
pop
out
in
arpl
ds
bts
xor
cli
cmc
pop
xchg
int3
lds
dec
pusha
dec
mov
xchg
add
mov
aas
pop
mov
adc
in
lahf
or
ret
mov
lcall
test
imul
stc
inc
add
or
pop
mov
jecxz
push
or
nop
xchg
push
xchg
cmp
lock
dec
popf
scas
imul
dec
xlat
mov
mulb
jb
dec
pop
adc
out
and
mov
push
lahf
testl
das
add
adc
in
rorl
dec
iret
aaa
mov
lods
sahf
int
rclb
xchg
inc
pop
popf
test
outsl
mov
jno
out
or
dec
popf
mov
or
jmp
inc
es
xor
xor
clc
cmpsb
jg
add
or
daa
cmp
out
popa
dec
arpl
ficomps
mov
sub
inc
ljmp
jnp
popf
ja
dec
sbb
mov
ljmp
sub
movsl
xchg
shrb
roll
out
push
add
cmc
mov
and
icebp
jo
adc
or
js
loope
test
les
stos
dec
inc
aas
pop
scas
and
mov
push
jno
or
jae
and
incb
iret
xchg
idivl
cmpsl
sbb
ret
jg
mov
jmp
lock
add
jns
out
lock
jne
ret
test
add
add
fistpll
mov
sbb
arpl
sub
nop
out
mov
cmp
push
pop
or
dec
mov
insl
cmp
les
mov
sarl
and
popa
mov
ret
push
sbb
pop
mov
testl
sub
and
mov
lds
nop
adc
mov
mov
pop
ret
arpl
xchg
rolb
pop
pop
jp
xor
jge
jno
enter
xchg
or
or
lret
xor
jge
ljmpw
fmuls
sti
movsb
lret
xchg
test
dec
adc
mov
dec
jo
and
fucom
jns
sub
cmp
cli
jl
fcom
arpl
dec
lret
in
xchg
push
xor
xchg
hlt
or
sub
pop
adc
mov
pop
and
push
shll
add
or
insl
mov
pop
inc
cwtl
cmp
jnp
popa
xchg
pop
jecxz
xor
pop
inc
xor
xor
or
in
loopne
je
add
test
insb
dec
or
insb
mov
push
call
stos
fcmovnb
sub
popa
push
push
movsb
insl
pop
cmp
sub
mov
add
iret
mov
add
xchg
add
andl
lods
push
sbb
push
aam
out
jl
pop
inc
push
cmp
xor
and
sbb
push
xchg
pop
sbb
push
mov
inc
dec
mov
aaa
and
dec
cmp
and
mov
fdivrs
sbb
fadd
out
movsb
ljmp
out
mov
add
mov
xor
xchg
xchg
sbb
jns
xchg
push
pusha
push
pop
and
mov
inc
lds
xchg
mov
pusha
outsb
adc
mov
pusha
xchg
adc
stc
std
idiv
and
outsb
lods
xor
or
sbb
arpl
imul
fldt
nop
mov
dec
in
ss
mov
imul
ja
jno
test
inc
mov
jb
jecxz
iret
push
mov
dec
mov
movl
jg
inc
xor
add
int3
cmpsl
std
push
xchg
sub
inc
adc
cmp
fldenv
repz
inc
push
jnp
add
mov
out
xor
fstpl
mov
in
inc
mov
bound
jo
test
mov
clc
xchg
out
and
mov
addr16
scas
adc
ljmp
jne
aas
fldt
push
mov
cmp
mov
iret
jmp
sbb
adc
mov
jno
shr
out
lret
mov
or
call
jnp
or
dec
fs
xchg
xchg
and
inc
xchg
mov
cltd
pusha
nop
xlat
dec
and
pop
inc
into
in
pop
rclb
cmp
fildll
imulb
push
dec
sub
mov
push
cmpsb
movb
into
add
int
mov
int
call
or
mov
ljmp
loop
adcb
add
aas
mov
lea
pop
andl
lock
xchg
rorb
es
ds
xor
cli
add
push
jb
push
mov
xchg
and
cmpsl
jae
or
dec
push
jno
enter
scas
sub
or
adc
and
add
call
cwtl
fisubl
in
in
push
push
push
adc
jp
or
xor
loop
push
mov
lea
jnp
mov
aad
cmpsb
insb
fiadds
pusha
mov
aaa
push
jne
sar
test
xor
xchg
repnz
lret
movsl
mov
mov
nop
icebp
insl
mov
or
nop
adc
aad
mov
lret
fisubrs
lds
xor
call
rorb
mov
push
mov
jle
push
xchg
mov
push
testl
out
inc
in
pop
pop
push
adc
dec
push
adc
idivb
mov
scas
mov
pop
mull
test
sub
push
fdivs
pop
mov
stos
xor
clc
cld
inc
ljmp
xor
test
pop
add
iret
adc
xchg
inc
enter
jo
push
push
rorb
mov
sbb
test
fbstp
fwait
scas
dec
sbb
add
lea
data16
mov
cmp
adc
fistps
arpl
imulb
fdivrl
jbe
pusha
mov
scas
adc
idivb
mov
scas
lods
push
orl
or
inc
aam
out
out
in
clc
adc
xor
add
dec
ja
in
sbb
enter
lret
jge
frstor
lret
xchg
mov
test
xchg
pop
mov
push
mov
mov
rolb
cltd
push
xor
mov
popf
or
jns
push
insl
mov
stos
fbstp
jae
addb
sub
push
incb
int3
inc
aas
arpl
push
and
cmc
xchg
mov
add
pop
roll
xor
aam
aaa
ljmp
iret
sbb
push
or
aas
cmpsb
movsl
inc
popf
mov
orl
movsb
lret
adc
jnp
js
mov
or
pop
and
and
xor
jne
imul
and
sub
int3
outsb
inc
pop
inc
mov
scas
pop
sbb
push
mov
dec
cmp
test
out
movb
aas
pop
push
mov
std
push
lods
out
jmp
mov
lds
inc
push
cmc
jbe
mov
hlt
iret
push
or
sbb
in
outsb
xor
mov
sbb
pop
enter
imul
pop
jno
jmp
adc
mov
mov
fs
xor
ficomps
leave
xor
ss
inc
pop
jnp
adc
aas
lcall
mov
sbb
mov
push
or
pusha
popf
dec
mov
inc
int3
andb
mov
adc
jb
fadds
lcall
dec
mov
dec
test
sbb
sbb
imul
test
jne
insb
sahf
xlat
jns,pn
and
mulb
loop
and
sbb
sub
pop
pop
cld
ss
mov
mov
call
fldl
jbe
pusha
push
movsb
pop
push
xor
loop
jmp
mov
mov
call
dec
and
or
hlt
and
shll
xchg
push
push
insb
out
mov
bswap
adc
pop
sub
out
and
es
mov
add
inc
adc
cltd
inc
iret
sbb
loopne
sbb
loop
xchg
or
call
inc
setne
dec
push
adc
popf
jge
add
add
popa
fwait
rcrb
insb
das
dec
xchg
add
push
sbb
faddl
push
add
dec
pop
cmc
sub
xchg
mov
lret
mov
dec
das
inc
cmpsl
sti
cltd
mov
cmp
int3
sti
xchg
xor
test
cmpb
adc
fwait
push
loopne
sbb
fisubrl
fmull
sbb
mov
pop
sub
es
inc
mov
das
adc
inc
outsb
lcall
jecxz
cld
adc
jns
jnp
cmpsl
push
movsl
gs
xchg
enter
loopne
lea
pop
divb
mov
rcll
scas
aaa
pop
add
push
test
mov
mov
hlt
fimull
fcmovnu
mov
jmp
cmp
mov
hlt
or
mov
mov
in
adc
stos
cmp
sub
mov
imul
testl
stos
test
cmc
inc
das
js
mov
lock
cmp
inc
aas
cvttps2pi
hlt
test
in
mov
inc
cmc
cld
repnz
dec
mov
mov
pop
push
mov
dec
sarl
mov
icebp
adc
in
clc
jns
mov
or
dec
inc
dec
and
mov
movsl
sbb
adc
aaa
js
xorl
jno
fnstenv
mov
sbb
cmp
mov
mov
mov
je
push
lods
outsb
sahf
mov
sahf
sbb
cmp
pushf
mov
lahf
xlat
mov
int
xor
test
cmp
test
push
ret
rorb
daa
and
pop
iret
iret
pusha
outsb
sbb
in
xlat
jge,pn
mov
out
scas
ja
cmp
sahf
add
daa
add
cltd
mov
cld
and
mov
in
jp
jne
xor
cmp
dec
xchg
icebp
enter
lret
cmp
daa
stos
es
pop
jne
sub
mov
fcom
mov
mov
lock
add
ficoml
div
push
icebp
or
add
stos
inc
mov
sbb
mov
shlb
sbb
dec
mov
pop
sahf
push
lods
cmc
push
shufps
mov
mov
mov
mov
xchg
cmpsl
fldl
sti
inc
int
out
insb
and
imul
rcr
dec
fisttpll
lret
and
loop
and
xor
loope
mov
inc
cs
cmp
mov
xor
lcall
in
lret
add
sbb
xor
xchg
mov
adcl
xor
icebp
and
arpl
xchg
jbe
mov
pop
fbld
or
int
add
jge
jge
addl
pushf
inc
in
push
lds
xchg
sub
test
movsb
cmp
add
icebp
repz
loope
jnp
clc
pop
push
insb
adc
inc
add
je
stc
ds
or
fwait
adc
cmp
movsl
and
jmp
pop
ss
mov
xchg
inc
mov
roll
je
loop
mov
and
jecxz
outsl
rcrb
into
and
rorb
imul
pop
mov
push
jns
cli
adc
adc
mov
jo
pusha
jnp
dec
adc
call
test
fdivs
mov
mov
or
pop
mov
out
ljmp
dec
mov
adc
les
inc
push
mov
out
leave
jp
loopne
inc
lret
sahf
push
mov
fsub
xchg
data16
sub
adcl
scas
hlt
cmp
ds
mov
adcb
mov
push
sub
fstpl
mov
or
xchg
cltd
in
stc
inc
les
mov
sar
leave
xchg
sarl
mov
lods
lret
clc
push
jge
add
and
je
into
dec
mov
in
outsb
cwtl
out
lea
les
cmp
lahf
push
xchg
xor
test
sarl
lea
push
call
push
nop
clc
xchg
sub
cmc
call
ret
mov
sub
pop
mov
pushl
fiadds
out
ja
cmc
movhlps
mov
and
and
push
cmpsl
sub
xor
push
je
mov
in
xor
lahf
neg
add
out
outsb
mov
loope
jle
and
jno
in
fs
mov
ljmp
mov
mov
xchg
mov
sarl
aas
in
xor
sub
adc
dec
outsb
mov
xor
cltd
fimuls
pop
xchg
mov
xor
dec
dec
sarl
jns
rol
gs
add
and
cmp
jbe
pushf
popa
sahf
jecxz
cltd
bound
jae
inc
scas
push
rorb
sub
pusha
or
scas
mov
adc
out
mov
fdivl
xor
loopne
jo
stos
mov
aaa
arpl
inc
dec
adc
push
cmc
mov
xchg
sub
xchg
daa
idiv
cmp
fsubrp
jo
sbb
xchg
adc
mov
adcb
scas
xchg
ret
cmpsl
fwait
insl
xchg
xor
mov
cwtl
sti
shlb
mov
mov
xor
jp
mov
inc
xchg
lock
jo
lods
loope
mov
mov
icebp
pop
mov
dec
sbb
and
rclb
lods
pop
stos
dec
in
cmc
rcl
pop
pop
stos
cmp
nop
mov
popf
push
cmpsb
jge
pop
fldl
filds
xor
pusha
mov
or
jle
and
addr16
push
jo
mov
fs
dec
bound
scas
in
ss
sahf
inc
jbe
rcl
iret
add
mov
pop
sub
dec
push
popa
std
push
mov
gs
xchg
repz
ss
mov
in
pop
addr16
xchg
mov
outsl
enter
lds
cli
stos
mov
pop
testb
cmp
inc
xchg
dec
lock
or
mov
dec
or
jmp
sahf
ljmp
pop
or
in
dec
jnp
xor
insb
push
call
mov
incb
push
loop
pop
int
inc
insb
inc
cli
mov
jbe
hlt
pushf
cmp
punpcklwd
xor
gs
adc
and
or
aaa
cltd
jge
and
push
dec
int3
and
push
addb
scas
add
xor
sbb
push
sahf
lods
sub
jne
dec
cmp
pop
xor
inc
dec
mov
fs
push
sub
inc
nop
cltd
add
clc
push
jl
repz
scas
pop
lods
cwtl
pop
inc
xor
sbb
rcrb
cld
dec
mov
insl
sbb
rclb
lret
and
ficomps
idiv
and
fs
pop
sub
std
mov
les
lret
push
nop
aaa
hlt
pop
pop
push
cmpl
fwait
inc
pop
mov
xchg
mov
add
inc
push
push
das
pop
add
idivb
jnp
int
cltd
and
add
pop
cmc
xor
and
mov
push
fildll
mov
sub
insb
or
int3
xchg
ret
mov
in
pop
addr16
sub
fisubrs
filds
aas
inc
mov
pop
sbb
inc
xchg
aam
nop
mov
or
loopne
sbb
pop
scas
stos
cmp
insl
cld
pop
pop
adc
repz
test
cld
clc
mov
cmc
sub
adc
and
mov
push
xchg
inc
add
xchg
cltd
cmpsb
xchg
cmp
insl
mov
mov
mov
jb
paddq
pop
cmp
ret
adc
add
mov
test
in
insl
js
aad
ret
mov
fcomps
in
cmpsb
xor
dec
add
push
jne
paddsb
movsb
cwtl
aam
ja
insb
and
lea
out
out
mul
and
loop
and
sub
push
scas
mov
lcall
incb
push
pop
mov
push
mov
std
out
scas
pop
cmp
pop
loopne
ret
adc
jecxz
mov
hlt
roll
dec
mov
inc
lcall
inc
fidivs
es
clc
enter
push
xor
jl
insb
jecxz
cmp
mov
scas
jge
and
jmp
lods
or
lea
jecxz
inc
xor
dec
data16
dec
push
push
cmpsl
in
fs
inc
insl
pop
insl
mov
lods
xor
inc
es
sbb
leave
xchg
iret
mov
fidivrl
shr
aas
mov
or
int
decl
loope
cmp
insb
fcompl
cmp
push
sbbb
in
lods
nop
xlat
adc
cmpsl
jb
dec
sbb
xchg
pushf
xchg
sub
xchg
xchg
pop
inc
mov
sbb
mov
divb
xor
inc
add
jns
shll
sub
pop
and
jecxz
movsl
mov
movsl
bt
ret
sub
imul
push
mov
jecxz
pop
inc
cmpsb
xchg
sub
jo
mov
in
fisubl
enter
popf
stos
in
jno
fmul
iret
arpl
dec
and
mov
pusha
jno
sub
dec
push
mov
aas
ljmp
dec
jecxz
dec
jle
sbb
add
ljmp
dec
cmp
cli
or
in
fstps
je
and
cs
sbb
cmpb
or
xchg
loop
mov
in
rorl
test
jno,pt
jl
fucomip
cmpsl
daa
aad
cli
and
push
add
repnz
xor
sti
daa
cmp
push
pop
mov
movsl
jo
pop
stos
loopne
sub
pusha
dec
inc
xor
call
sar
push
jge
jle
and
sub
lret
jmp
fdivs
adc
aas
dec
mov
sub
ds
xchg
and
mov
xchg
cmp
out
add
mov
ja
int
cmpsb
sub
mov
das
and
mov
into
pop
data16
aas
iret
les
scas
push
lock
cmp
push
mov
rorb
xchg
bndstx
adc
sub
fs
daa
bound
fsubrs
dec
fwait
repz
jno
in
mov
je
test
daa
fadds
inc
inc
in
out
sub
mov
rcll
xor
pop
mov
sub
es
and
icebp
out
imul
inc
jae
sbb
popl
xchg
aam
mov
push
or
push
sub
outsb
push
xor
jne
popa
out
outsl
pop
xor
jne
pop
jns
add
cli
cmpsb
mov
pop
into
std
daa
out
push
sub
mov
setbe
or
pop
iret
popa
inc
out
or
and
iret
push
mov
lods
add
int
aam
push
add
xor
inc
dec
lret
cld
int
stos
in
xor
sahf
mov
mov
xchg
repnz
stos
and
pop
jno
stos
mov
jle
lock
add
xchg
jbe
loope
cmp
push
in
orb
adc
out
movb
pushf
call
les
fistpl
jno
inc
adc
jno
js
mov
mov
push
es
fdiv
mov
outsb
push
rolb
sahf
sub
mov
imul
aam
rcl
gs
xor
inc
add
xor
das
and
jb
ja
xor
dec
aaa
cmp
fimull
gs
adc
pop
cld
mov
popf
hlt
das
mov
cmpsl
popa
daa
psrlw
xor
add
test
pop
jns
sub
repnz
push
fwait
xlat
jbe
test
test
nop
mov
loope
xchg
xchg
dec
shlb
cli
inc
call
push
cmp
divb
dec
mov
mov
cmp
idivb
adc
aad
pop
hlt
fnstenv
lcall
jbe
push
xchg
add
jecxz
lods
jge
mov
add
dec
xchg
mov
pop
dec
mov
xor
xor
push
jne
inc
sub
gs
xchg
cld
jl
fnsave
or
hlt
pop
int3
loopne
mov
or
cmp
dec
xchg
sub
cwtl
rorb
std
mov
ficomps
mov
test
cmp
stos
xor
inc
out
jo
not
cli
and
add
cmp
inc
inc
daa
daa
sti
movsb
out
rolb
sbb
cli
or
xchg
sbb
insl
inc
test
rolb
push
jg
out
cli
test
push
push
out
lds
mov
mov
jns
jo
and
loope
xchg
adc
mov
push
push
mov
out
pop
jl
cwtl
shlb
xor
ficomps
jmp
out
inc
xchg
aas
or
cwtl
hlt
and
xchg
cli
scas
fwait
icebp
subb
mov
es
lahf
add
dec
int
mov
popa
fdivrs
xchg
cmpl
out
jno
xchg
outsb
aam
push
xlat
mov
xlat
add
test
rol
cmp
cmp
enter
adc
pop
pop
xchg
or
outsb
rorl
jge
movsl
inc
lret
xor
mov
pop
cmc
mov
mov
sarl
pop
test
mov
cmp
in
imul
jb
xor
jb
dec
sub
lods
js
lock
lods
xor
mov
inc
imulb
mov
out
cmp
ds
mov
cmpsb
cmp
cmp
in
pusha
je
jp
or
pop
pop
adc
aad
sub
dec
mov
sbb
adc
push
lock
cmpsb
adc
das
pop
xor
dec
xchg
iret
sahf
mov
xchg
mov
mov
lahf
inc
jbe
push
lock
jle
paddq
push
sbb
leave
outsb
cli
dec
xor
les
inc
add
sbb
subb
pop
les
inc
mov
adc
fcmovnbe
mov
rol
movsb
rcrl
insl
ss
loope
jl
stos
jecxz
cltd
sahf
pop
fst
out
cmp
icebp
stc
out
mov
int
xorl
fmuls
add
dec
sub
repz
out
fildll
mov
std
sbb
cmp
scas
punpcklwd
mov
jg
mov
das
sbb
and
shll
jae
cwtl
mov
shll
pop
inc
push
xlat
test
pop
dec
addb
cli
nop
shl
leave
push
push
in
sahf
jg
mov
adc
testl
scas
mov
daa
imul
movsb
repz
adc
in
ffree
add
lea
sub
add
lret
add
ja
mov
sti
push
jmp
rcrl
sbbb
mov
movsl
push
xchg
push
clc
xor
aam
shll
lock
sbb
push
mov
dec
add
xchg
arpl
xlat
xchg
jbe
sbb
xchg
and
xor
ljmp
enter
iret
add
or
jmp
das
les
pop
cld
pop
imul
adc
pop
enter
in
jle
mov
push
inc
fmuls
jl
gs
fs
stos
loope
call
daa
and
loope
xchg
dec
lret
adc
jno
add
xor
push
xor
ss
cmp
xchg
sbb
dec
jbe
test
mov
cmp
jbe
mov
pop
rclb
mov
add
hlt
lret
je
aad
and
sub
rorb
cmp
cld
add
ljmp
sub
fisttpl
sbb
outsb
pushf
inc
xchg
ss
xchg
and
cmc
and
cmpsb
imul
push
aaa
jbe
cmp
gs
sub
jl
adc
iret
enter
pop
int
and
in
pop
lock
or
pushf
push
add
bnd
rclb
add
and
mov
dec
sbb
outsb
inc
mov
rcr
mov
jle
fcmovne
aam
push
insb
scas
mov
jae
add
dec
cmp
xor
ss
xchg
lahf
jno
call
adc
rclb
cwtl
push
jb
in
hlt
xchg
icebp
incl
jae
push
lret
jmp
cmpsl
out
jl
negl
imul
mov
jae
jne,pn
push
jp
nop
scas
hlt
out
add
mov
adc
mov
push
push
mov
inc
jnp
cmp
xchg
xor
gs
and
call
cli
mov
push
pop
cmp
lods
cmp
add
push
jecxz
rcrl
adc
mov
sub
push
mov
push
sbb
bound
sub
cltd
pop
movsl
fbld
fs
jno
pusha
sti
pop
xor
ffreep
and
ljmp
pop
arpl
jo
jmp
push
xor
sti
adc
dec
pop
in
cltd
dec
jle
cmp
dec
push
jo
mov
sbb
fisubs
xor
daa
fdivrl
jo
es
daa
pop
jl
pop
sub
es
repz
mov
push
insb
loop
rolb
inc
pop
out
ficomps
and
mov
in
push
popf
fidivl
enter
popf
sbb
push
pop
jne
bound
inc
pop
aad
push
nop
aaa
sti
adc
or
ret
ds
or
mov
inc
stos
sti
imul
mov
dec
lcall
adc
scas
push
fdivrl
and
arpl
or
fisubrs
or
clc
inc
cmp
fisttps
xchg
jnp
push
inc
sti
fdivl
fs
iret
sbb
arpl
add
push
mov
lcall
popf
sbb
or
sti
mov
ret
out
push
cmp
xor
push
popa
add
lods
mov
xor
jne
dec
mov
insb
dec
jg
inc
test
lret
inc
into
lcall
pop
pop
test
dec
je
dec
lds
stos
and
testb
clc
jo
sbb
popa
add
push
in
xor
lea
inc
pusha
push
xchg
push
and
dec
iret
inc
ja
cli
nopl
add
cmp
mov
push
adc
or
in
pop
mov
ljmp
sti
or
add
out
shll
add
xchg
call
divb
jge
hlt
sti
pop
inc
pushl
push
xchg
in
or
dec
mov
xor
mov
fwait
dec
sub
xor
push
ss
fnstenv
in
repz
xor
in
adc
test
lret
jl
leave
jge
sub
sahf
in
jle
out
into
inc
clc
push
push
pop
fidivrs
push
imulb
lcall
orb
jl
dec
out
pop
pop
jo
jo
jge
inc
bound
std
decb
decb
xchg
push
sbb
inc
lods
mov
cli
movsb
fwait
sub
fistpl
xor
inc
daa
mov
popf
out
fdivs
mov
ljmp
loopne
inc
fmuls
pop
xor
aam
std
shll
adc
mov
mov
xchg
adc
add
in
dec
push
jno
and
xchg
sbb
addr16
popf
and
mov
xor
jno
out
xor
mov
sub
pop
repz
insb
push
lods
ret
lock
mov
lahf
mov
xlat
ficoml
mov
mov
fwait
shlb
jmp
cmc
movsb
pop
adc
mov
inc
nop
push
movsb
mov
sarl
and
xor
pop
jb
jb
in
lock
pop
test
jns
test
xchg
mov
or
push
mov
or
mov
push
inc
fnstenv
sub
push
test
xor
repnz
sbbb
and
push
adc
lods
pop
fisubrs
jecxz
data16
inc
mov
test
loopne
fnstenv
push
mov
jno
lcall
jecxz
dec
add
ret
negl
cmp
js
je
sbb
loop
shrl
cs
movsb
or
cmp
lds
xchg
adc
fidivrs
pushf
xchg
sbb
cs
and
cmp
nop
and
push
leave
push
add
pop
mov
xchg
push
loop
mov
pop
out
xor
adc
shlb
dec
pop
mov
push
and
mov
ds
test
sub
bound
cmc
inc
fbld
add
fcmovnbe
je
in
cs
mul
mov
fadd
scas
cmp
lock
test
xlat
adc
repnz
inc
test
pop
pusha
popf
pop
cmpsl
shrb
mov
pop
inc
jns
mov
scas
out
dec
pop
arpl
and
imul
inc
push
push
aad
in
lret
inc
add
sub
cld
cwtl
adc
xor
pushf
sub
push
and
popa
lea
aam
push
out
mov
push
adc
out
lahf
dec
incl
or
popf
rorb
sub
addr16
orl
insl
mov
mov
pop
imul
je
fisttps
movsb
inc
inc
lea
adc
enter
movsl
pop
adc
test
cltd
imul
push
xlat
xor
out
rorb
aad
and
js
dec
jne
std
push
adc
inc
inc
push
subb
arpl
cmp
arpl
hlt
stc
inc
dec
addr16
nop
jge
add
adc
in
xchg
imul
sub
stos
daa
insl
pop
addr16
sti
jl
es
mov
imul
arpl
add
out
data16
xchg
lods
sub
xor
repz
aaa
in
repz
iret
repz
push
add
clc
cli
lahf
test
and
inc
dec
stos
lds
outsb
fdivrp
test
ret
push
jo
lahf
insb
pop
sub
inc
inc
add
sub
int
push
stos
jle
mov
add
mov
cmp
mov
outsl
sti
test
roll
jb
mov
int
stc
out
imul
ret
mov
outsl
outsl
add
ficomps
out
repz
stos
lds
jge
repnz
jmp
cmp
insb
lock
insb
cmpsl
sbb
repz
dec
add
in
cmp
fstl
jae
jno
loope
fwait
mov
pushf
cmpsl
pop
popl
or
dec
inc
xor
or
fucomp
and
es
adc
inc
sahf
cltd
lret
mov
sbb
loop
movsl
insb
pmulhuw
push
inc
les
mov
ret
add
in
loop
or
mov
test
fiaddl
div
and
push
stc
ljmp
jae
inc
pop
xor
addl
adc
into
hlt
lock
sbb
push
sub
lods
sarl
inc
xchg
pop
jg
in
mov
lods
test
lods
sub
mov
or
pop
leave
adc
sbb
lret
mov
dec
repnz
orl
in
out
sti
xchg
ficompl
orb
mov
js
std
sub
add
push
in
adc
push
or
adc
mov
fs
movsb
sub
nop
push
and
stos
adc
fstpl
jne
sarb
and
mov
pop
pop
add
adc
popa
nop
cmpsl
fcmovnu
and
lret
aas
sub
mov
addr16
dec
xor
push
out
dec
sbb
divb
es
test
cmp
lcall
lods
sbb
cld
xchg
shrl
push
cmp
orb
pusha
push
jl
ss
or
push
fiadds
test
pop
pop
loope
cmp
in
pop
fstps
jae
imul
stos
hlt
jle
xchg
jl
pop
add
mov
js
fcmovnb
dec
movsb
or
xor
mov
adcl
daa
lods
idiv
push
or
push
addl
mov
in
nop
das
cmc
cmp
arpl
arpl
cwtl
loopne
sub
sub
pop
je
stos
inc
xchg
mov
xlat
loopne
mov
aam
jge
xchg
aad
out
enter
dec
mov
mov
add
jge
push
or
jle
xorl
lds
xor
outsl
push
sub
mov
aas
jae
xchg
dec
push
push
mov
mov
push
add
cld
or
xchg
inc
out
rorb
imul
push
ror
xchg
or
dec
mov
out
adc
jp
lds
xlat
xchg
mov
data16
mov
ret
jmp
pop
subb
xlat
xchg
or
hlt
xchg
pop
frndint
nop
inc
jne
and
leave
xchg
out
mov
add
lahf
fnstcw
ret
mov
mov
in
gs
or
movsb
inc
lret
aas
sub
in
sbb
mov
cmpsb
mov
test
sbb
dec
call
xor
jo
sarb
sbb
fstpl
xlat
or
subl
dec
lock
imul
mov
xchg
sub
and
xchg
mov
imul
enter
mov
push
in
js
rorl
imul
cmp
pop
push
push
outsl
ffree
and
sbb
pop
ljmp
jno
or
xchg
fcmovnb
xchg
mov
mov
int
fsubrs
pop
mov
or
cmc
inc
stc
scas
call
jbe
xchg
jae
sub
cli
call
xor
test
sahf
jo
outsl
add
pop
push
daa
xor
pcmpeqb
lods
cmp
popa
cmp
pop
dec
pop
insl
jno
xor
cmp
push
movsl
push
leave
pop
dec
fsubp
cmp
adc
mov
mov
ret
xor
inc
test
arpl
mov
sbb
rorb
lock
adc
pop
scas
cltd
and
add
jp
into
repz
jae
fidivs
sub
sbb
popf
icebp
inc
pop
rorb
jmp
mov
mov
fbstp
in
sbb
sbb
push
ja
test
icebp
adc
jmp
je
aad
cwtl
and
fwait
incw
out
sbb
xor
shll
int3
cmc
imul
and
sub
ror
mov
das
into
and
insb
jnp
push
sub
xchg
lret
inc
mov
push
cmp
pop
lret
pop
lcall
out
and
push
cltd
stos
pop
sub
subb
jnp
sub
xlat
nop
sub
jae
mov
notb
mov
cmp
shll
test
dec
cmp
lea
jo
add
loopne
pushf
iret
or
push
popa
das
xchg
pop
xor
ja
and
mov
adc
jge
loop
jp
pusha
lret
stos
mov
das
imul
repz
sti
pop
mov
pop
jl
insl
cmpsl
xchg
xchg
inc
sbb
xchg
rorl
jns
xor
xchg
sub
mov
jns
in
imul
push
pop
xchg
mov
pushf
les
add
hlt
pop
mov
push
nop
sbb
jb
ljmp
mov
into
subb
lret
in
ficompl
mov
fwait
sub
xchg
jbe
mov
clc
mov
push
jge
ret
sbb
es
in
test
ret
xchg
dec
push
mov
add
divb
push
sarb
mov
movb
xor
subb
mov
loop
add
stc
cltd
out
shll
and
lret
jecxz
insb
rcrb
cld
sub
xchg
and
rcl
jp
popa
iret
jb
gs
test
addl
in
cs
xor
movsb
inc
test
stos
and
xchg
cld
lcall
ret
jnp
mov
xchg
ds
into
frstor
lock
repz
pop
push
andl
xchg
push
mov
inc
pop
mov
dec
enter
cmp
shlb
push
jne
rol
fcoms
push
in
addr16
cmp
mov
js
xchg
pop
bound
in
fdivs
in
imul
push
push
daa
mov
mov
stc
mov
jo
push
jbe
in
cs
mov
jo
or
xchg
fistpll
lret
add
outsb
outsb
pop
push
and
cld
push
mov
xchg
add
adc
cmovg
mov
jbe
lds
lock
add
gs
popf
dec
sbb
add
pop
lahf
mov
inc
jmp
mov
or
in
xor
inc
cmp
adc
sarb
je
fisubl
xchg
add
mov
add
lods
jnp
xchg
dec
xor
insb
mov
in
shrl
inc
mov
loope
imul
arpl
sub
and
in
shll
orb
pop
push
xchg
int3
cwtl
xchg
add
jmp
mov
stc
fnstsw
in
mov
iret
aad
xor
sbb
jae
dec
test
movsb
or
adc
inc
and
daa
adc
dec
dec
adc
adc
jle
sbb
idivb
or
fisubrs
dec
dec
ds
lret
shll
inc
lret
std
add
ljmp
je
xor
daa
hlt
mov
ds
push
out
push
fmul
fidivrs
add
aas
mov
insl
lods
pop
or
jmp
dec
imul
and
adc
mov
js
popl
cld
jp
inc
shll
lret
push
sahf
xor
call
sahf
push
imul
aam
mov
stos
fstps
hlt
iret
js
popa
test
xchg
out
and
xchg
mov
faddl
or
jb
jbe
rcrb
xlat
add
sub
pop
cmp
adc
cmp
sti
clc
xor
or
inc
mov
push
or
fwait
pop
mov
dec
pop
inc
mov
das
add
xchg
je
inc
cmp
xchg
cwtl
push
pop
or
inc
iret
frstor
xor
jne
aaa
inc
loope
xor
aad
mov
jge
js
push
popa
sub
outsl
call
xor
pop
mov
filds
fildl
pop
adc
cmp
stos
cmp
out
inc
xchg
xchg
and
leave
inc
jmp
pop
or
inc
pop
sub
enter
dec
aad
push
hlt
push
xchg
fcmovnu
fistl
sbb
clc
jae
jb
gs
lcall
cwtl
and
outsb
sbb
mov
pop
push
arpl
popf
push
into
pop
mov
pop
dec
push
push
push
sbb
dec
pop
repz
test
jns
subb
movsl
and
push
sbb
adc
add
push
push
push
cld
call
fisubrl
sbb
fmull
ja
cld
scas
lods
sahf
jl
push
adc
rcrb
ret
adc
fldt
in
xchg
add
iret
bnd
scas
aam
movl
ss
cmpsb
sti
loope
je
shll
test
sub
stc
addr16
popa
add
or
adc
addr16
sub
dec
sbb
xor
mov
dec
xchg
test
mov
sahf
xor
and
cli
mov
outsb
dec
inc
mov
loope
push
fsubl
movsl
loopne
push
testl
pop
mov
inc
push
arpl
jbe
inc
aad
jg
inc
add
imul
movsb
jge
sbb
sarl
xor
or
push
jnp
rorb
mov
movsl
sbb
cmpsl
pusha
mov
inc
mov
rcl
test
sbb
out
adc
inc
je
lret
sub
inc
add
xor
data16
sti
aad
cltd
xchg
push
pop
jmp
jmp
out
jp
adc
pusha
rcr
loopne
dec
mov
mov
push
lods
call
test
test
mov
xchg
xchg
mov
out
aaa
ds
inc
mov
jge
lcall
sbb
std
jl
std
cmp
push
inc
mov
dec
scas
sub
mov
or
scas
mov
loop
nop
push
or
mov
adc
mov
clc
sub
repz
rolb
mov
dec
jle
mov
cmp
adc
arpl
test
dec
sahf
arpl
repz
or
inc
cmp
stc
mov
mov
or
pop
lods
insl
mov
scas
mov
pop
pop
lcall
aam
pop
push
xor
mov
push
mov
dec
inc
sbb
xchg
repz
xor
out
loope
lcall
inc
repz
pop
inc
pushf
jl
sub
insl
jo
imul
add
pushf
push
test
fdivr
or
jecxz
or
sub
mov
sbb
push
ret
repnz
es
add
stos
aam
mov
icebp
jmp
addr16
pop
adc
roll
les
ljmp
imulb
xchg
mov
mov
jge
push
or
les
dec
mov
add
lret
mov
add
push
lret
std
xor
sbb
mov
sbb
cltd
sbb
mov
pop
cmpsb
inc
xor
sub
or
mov
js
imul
and
xchg
aad
lea
mov
mov
hlt
cs
lea
mov
xchg
or
clc
jmp
jle
nop
movsl
out
adc
sub
sti
in
pop
add
sti
jno
outsb
dec
ret
sub
fld
lods
testl
sub
jb
data16
popf
mov
testb
adc
fnsave
test
rcrl
mov
sbb
push
shr
push
test
mov
repnz
pop
repz
mov
push
jmp
dec
or
mov
dec
inc
jl
cltd
cli
cmp
push
or
rcr
es
dec
mov
pop
and
fs
sub
cmp
and
xor
pop
fisubrs
addr16
mov
lcall
into
mov
cs
lret
movsl
inc
push
jp
jne
inc
cmp
cmpsl
les
mov
push
push
ret
cli
xor
jp
jg
xor
popl
xchg
mov
in
movsb
xlat
add
jo
fistps
cwtl
mov
mov
dec
fists
jbe
dec
mov
in
sbb
and
movsl
mov
cmpsl
out
fstpl
cmp
call
in
fs
adcl
inc
push
idivb
dec
xchg
out
inc
xor
fistps
push
xorl
pop
inc
jo
fwait
adc
dec
lods
inc
cmc
jmp
clc
pushf
lods
xchg
imul
jno
mov
lea
popf
mov
shll
inc
ljmp
mov
ficoms
fisttpl
mov
mov
in
hlt
ret
loop
fcomp
jg
lods
sbb
add
cmpsb
fwait
rcrb
dec
add
and
jbe
hlt
test
mov
push
lret
jg
push
icebp
mov
aaa
xchg
dec
test
mul
ficompl
adc
xor
ficompl
and
xchg
test
inc
xchg
xchg
pop
xchg
lea
adc
cli
loopne
nop
xchg
aaa
repnz
inc
shl
mov
sub
add
xorb
xor
sbb
xchg
adc
shrl
movsl
cmc
stos
pusha
push
push
dec
sbb
outsb
sarl
mov
xchg
fbstp
or
add
and
in
sbb
or
mov
xor
cmpsl
testl
iret
lret
stc
xchg
pop
popa
push
dec
cli
pop
mov
pop
movsl
xchg
imull
fildll
sub
jbe
fldenv
frstor
jmp
aaa
add
clc
bound
pop
xchg
inc
outsl
loope
mov
repnz
fsubrp
push
in
dec
sti
mov
cmc
dec
and
adcb
cmp
lods
stc
nop
scas
jnp
and
int
test
adc
jo
popf
pop
popa
adc
jo
bound
mov
mov
cld
xlat
pcmpeqd
push
and
add
out
pop
lds
ja
and
imulb
fiaddl
push
jmp
push
push
add
mov
mov
sbbb
cmpsb
mov
insb
jno
leave
sub
xor
sbb
into
and
andl
orl
int
xor
in
out
sbb
shrb
insl
ror
mov
ja
jns
push
push
jp
idivb
fwait
or
mov
jecxz
sarb
pop
scas
data16
mov
inc
jno
mov
inc
fs
loope
fwait
cs
hlt
call
dec
leave
sahf
or
call
andps
jne
aam
insb
cmp
and
pop
icebp
leave
push
lock
js
xchg
mov
add
je
and
insb
inc
mov
mov
and
aas
sub
jecxz
stc
fdivrs
repz
or
mov
sahf
test
add
sub
arpl
inc
or
jne
roll
pop
dec
mov
jns
dec
aad
xchg
fucomp
mov
cmp
or
pop
pop
mov
cmp
xchg
fsubl
inc
xlat
xor
cltd
xchg
insl
fmull
lcall
mov
out
in
imul
jmp
dec
pop
jle
push
ja
and
sub
mov
mov
pop
pop
bound
jle
leave
out
outsl
imul
repz
repnz
push
mov
push
idiv
lds
sub
xchg
lret
or
scas
jl
fs
mov
cmp
repz
push
inc
ret
xchg
clc
mov
mov
inc
pop
pop
ret
cltd
dec
loopne
ror
popf
xchg
loopne
inc
jecxz
aas
or
cmpsl
vmovaps
xlat
int3
mov
fld
sbb
loop
cmpsb
mov
movsb
jle
mov
fldcw
pop
add
inc
cmp
dec
sub
stos
std
pop
lahf
push
mov
js
sbb
test
jp
xor
pop
hlt
add
cmp
and
add
push
xor
dec
jae
popa
mov
jmp
out
leave
mov
lods
and
gs
sub
dec
cmpsl
dec
cld
test
sub
dec
xchg
sub
out
test
rol
cli
sub
mov
adc
rclb
aam
xor
out
stos
mov
outsl
loopne
stos
adc
jg
dec
mov
inc
das
nop
iret
in
push
mov
jecxz
mov
mov
mov
scas
inc
push
cmp
dec
adc
ds
lods
add
std
test
out
pop
or
mov
jo
pop
jp
dec
insb
icebp
cmp
das
mov
std
imul
jae
pop
mov
repnz
lcall
sub
xchg
xlat
mov
jp
test
jae
cmpsl
je
mov
enter
sub
xor
push
sbb
out
inc
push
or
and
aad
push
lds
movsl
xchg
fbstp
adc
cmp
xchg
dec
xor
sahf
and
push
jmp
xchg
cs
mov
push
das
notb
sbb
adc
ret
lret
mov
cmp
jge
and
test
into
mov
in
mov
fstpl
fwait
inc
inc
xchg
inc
xor
fcom
fildl
enter
pusha
pop
cmpsl
inc
je
cmpl
es
scas
pop
and
pop
std
pop
call
dec
cmpsb
lods
out
push
int3
inc
out
push
sub
cld
lret
jge,pt
mov
imulb
fldenv
lock
movsl
jb
into
icebp
mov
adc
lahf
or
lock
scas
xchg
outsb
sub
sbb
clc
inc
pop
adc
sbb
pop
in
js
mov
std
mov
sub
mov
mov
sbb
mov
pop
or
outsb
sub
pop
mov
out
and
cmp
add
cmp
mov
in
outsl
sbb
inc
or
ljmp
and
ds
push
aam
test
mov
cwtl
loopne
popf
test
push
test
pop
cmp
jbe
loopne
add
ret
mov
push
xor
in
jne
cmpsb
sahf
stos
xor
jle
jbe
lds
iret
sbb
cmpsb
jge
jl
rol
rorl
fistpll
fiadds
enter
adc
int
stc
dec
push
kxnorb
adc
fstps
leave
pusha
mov
das
dec
test
pop
test
aaa
cmpsl
adc
out
xchg
rcrl
int3
fistl
ss
rorb
std
cmpsb
push
cmp
pop
aas
push
mov
test
rorl
test
fisttpll
out
pop
aas
xor
imul
das
cltd
dec
iret
lret
lea
out
lds
lret
push
xchg
into
push
inc
pushf
jns
xchg
cmc
jno
add
fistpll
inc
das
mov
sahf
test
je
daa
xor
mov
sbb
xor
sbb
loope
std
cwtl
and
shr
test
cmp
mov
stc
in
les
xchg
sbb
xor
cmpsb
out
xchg
shr
mov
add
pop
xor
cltd
sbb
iret
jb
jbe
rolb
das
pop
and
ret
xchg
repnz
ret
xchg
mov
jl
xchg
sar
sbb
mov
push
push
fdivrl
sbb
adc
movsl
mov
fisubl
scas
adc
fdiv
push
bound
gs
cmpsb
repz
jno
and
rcll
in
in
push
xchg
pop
inc
loop
push
xor
dec
jno
add
mov
adc
xlat
sbb
popa
fdivs
cmp
mov
pop
lock
lret
std
jne
ror
stos
mov
dec
add
and
call
aam
push
js
ja
xchg
inc
out
cmp
rorb
inc
lahf
stos
clc
adc
ljmp
push
adc
mov
xchg
gs
pop
out
insb
stos
dec
or
and
ljmp
loop
mov
mov
and
pusha
cmp
or
testb
stos
ret
jns
xor
mov
sahf
ljmp
scas
popa
sbb
dec
sub
pop
mov
push
pushf
mov
test
out
rcl
aaa
int3
sbb
pop
add
mov
xchg
ds
call
imul
pop
in
lock
fwait
jns
les
das
insl
jo
mov
jo
dec
lcall
cmp
jmp
xor
push
and
adc
fdivs
orl
int3
sbb
out
cmp
lds
add
xor
fsub
stos
into
outsl
out
imul
mov
push
ret
jnp
scas
out
and
xchg
pop
add
daa
mov
xchg
push
cli
aas
notb
push
push
pop
xor
outsl
outsl
xchg
jno
adc
test
sbb
pop
add
mov
das
imul
fisubrl
jle
xchg
inc
push
ret
rclb
mov
xchg
mov
lcall
andl
inc
popl
mov
push
inc
aaa
ss
test
fcom
xor
enter
lcall
out
test
mov
repz
popa
add
lret
jmp
movsl
or
popa
testb
aas
fwait
cmpsb
dec
les
add
mov
inc
mov
fimull
xor
sub
pop
imul
pop
cmc
xchg
les
sbb
sub
repnz
dec
lock
mov
popf
cmp
mov
iret
js
cltd
mov
lods
call
aam
sbb
jne
std
add
mov
ret
shll
or
fsub
dec
xor
ss
pop
stos
aas
sub
cmp
or
mov
stos
and
mov
jle
mov
xor
jmp
fdivl
aaa
pand
mov
aas
lds
jmp
push
leave
cmpb
orb
push
push
je
cmc
loopne
cli
adc
repz
sbb
fucomp
or
stos
ds
in
xchg
aam
pop
pop
sub
xchg
inc
outsb
pop
leave
vmovupd
popf
push
enter
subb
jl
fs
mov
lcall
jp
and
outsb
xlat
fidivrs
rorl
inc
dec
test
movswl
js
xchg
mov
pop
mov
pop
sub
push
mov
loope
jbe
sbb
and
push
ret
jo
cmp
xor
in
jae
mov
mov
out
push
movsl
xor
fisubl
jmp
arpl
fnsave
je
ret
mov
ss
sub
dec
mov
ds
popa
loop
in
jb
xor
or
and
jl
es
add
popf
pop
cmp
insl
lods
call
xor
loope
fnstsw
add
inc
icebp
in
and
repz
jmp
loop
mov
andl
scas
jbe
sub
scas
repnz
mov
pop
jne
sbb
cmc
fwait
insl
xor
loope
test
mov
inc
add
jb
sbb
xchg
xchg
xor
and
ds
ret
jg
mov
push
jne
popa
gs
sbb
dec
lret
adc
fimull
ja
jne
or
mov
mov
mov
mov
cs
push
mov
mov
pop
iret
xchg
popa
test
loopne
shll
mov
in
or
es
pop
add
in
loop
int
push
dec
xor
lcall
mov
cld
mov
dec
adc
cwtl
jae
inc
call
je
iret
andl
aad
push
mov
movsl
sub
jo
mov
cs
cmpsl
jl
push
mov
adc
test
xor
jae
or
call
push
or
mov
imul
in
pop
or
xor
add
inc
or
xor
in
mov
push
lret
inc
out
std
out
or
sbbb
loope
pop
cmp
jmp
test
cmpb
test
sub
xchg
mov
insb
jecxz
jecxz
mov
pop
push
cld
mov
mov
mov
into
clc
pop
popa
lock
add
pop
inc
outsl
popl
data16
call
jo
insb
out
js
pop
insb
cmp
mov
out
clc
and
out
pop
lcall
mov
popa
clc
mov
popf
jno
jbe,pt
mov
out
pop
adc
xchg
inc
jp,pt
pop
clc
mov
sbbb
pushf
add
cmp
push
mov
stos
hlt
lds
sub
pop
inc
cmpsb
lods
subb
xor
daa
insb
lods
mov
pop
xorl
adc
xchg
pop
cs
fiadds
jae
cmpsl
xor
mov
inc
call
jp
xchg
daa
aam
js,pn
mov
clc
mov
jg
outsl
and
clc
cmpsl
or
rolb
xor
mov
lods
mov
add
xorl
push
xchg
mov
ds
mov
lret
cmpsl
xlat
mov
dec
aam
xchg
mov
into
or
imul
insb
mov
bound
in
ljmp
push
out
add
jae
push
xorl
sbb
jns
mov
inc
dec
aad
and
pop
or
shrl
dec
xor
xor
xchg
xchg
mov
gs
sbb
sbbl
call
lahf
aam
faddl
push
mov
jae
xlat
cwtl
push
inc
insl
imul
add
xchg
stos
js
xchg
fwait
pslld
bnd
loopne
jno
imul
add
nop
popf
mov
aad
lahf
das
add
movsl
or
sbb
pop
or
adc
insl
xor
stos
dec
stos
xor
mov
adc
inc
sahf
out
ss
mov
ret
adc
push
sub
adc
pop
pop
movsb
or
jne
jg
pop
pop
mov
push
loop
sar
mov
inc
out
dec
jb
xchg
loope
mov
lods
aad
ret
pop
sbb
loop
push
fs
in
inc
jb
iret
daa
lea
and
adc
inc
popf
into
jecxz
out
cwtl
push
or
mov
lcall
pop
jg
add
enter
test
stc
pop
mov
aad
imul
fcomps
xor
dec
rclb
xlat
add
int3
mov
jae
outsb
xchg
daa
sbbb
jl
cli
dec
incb
and
push
xor
cmpsl
leave
mov
into
sbb
or
xlat
pop
push
push
push
pop
loop
push
push
xchg
adc
in
inc
xchg
in
push
scas
test
jnp
sub
add
out
push
daa
mov
cmp
xlat
xchg
inc
xor
stos
popa
push
ja
repz
mov
xchg
in
jle
add
mov
sbb
dec
cmpsb
mov
cmpsb
adc
jge
fnstenv
push
xchg
adc
cs
clc
add
cmp
sbb
out
cmpsl
lods
out
icebp
cld
dec
shlb
mov
das
push
dec
ror
mov
jge
in
inc
mov
xchg
sbb
mov
or
cmpb
cmp
addr16
add
rolb
inc
or
vpmacsdqh
test
and
in
and
lahf
pop
push
mov
mov
scas
out
sub
pop
mov
cmc
enter
and
lea
add
test
jmp
xlat
ss
imul
lret
jmp
popa
lcall
aad
mov
mov
test
iret
cwtl
clc
xchg
fiaddl
daa
rcrb
push
fisttpll
jp
xchg
ja
sbb
xchg
inc
dec
cmc
mov
lret
mov
cmp
mov
les
pop
rolb
out
dec
in
or
sbb
andl
pop
js
fldenv
cli
enter
push
sub
fcompl
mov
mov
xchg
jl
sahf
and
xor
mov
loope
add
jo
jge
and
or
bound
movsl
fmuls
ljmp
xor
imul
jns
fsubr
mov
int
dec
cmpsb
mov
push
mov
jl
arpl
adc
ss
jmp
leave
pop
jmp
insb
int3
add
movsb
xlat
cmp
popa
add
mov
sti
dec
push
arpl
xorb
stos
outsb
sbb
arpl
sbb
movsl
mov
mov
popf
fbld
fbstp
mov
jne
outsb
in
mov
fcoml
jp
inc
and
lock
inc
dec
mov
rcrl
loopne
dec
jb
pop
jle
xor
fwait
pop
ja
outsb
jno
push
xchg
xchg
stc
stos
lret
mov
mov
pop
dec
inc
cld
mov
push
in
lcall
mov
or
not
lret
mov
jne
call
pop
imul
push
jecxz
inc
cli
fwait
cli
leave
pop
and
inc
pop
pop
cld
xor
mov
xor
push
pop
xor
ljmp
jb
cmp
fdivs
fistps
out
enter
cmpsl
or
leave
cwtl
push
cmpsl
add
lods
imul
add
out
xchg
sbb
outsb
sbb
inc
push
sub
gs
xchg
or
fwait
lods
jl
mov
das
in
sti
and
dec
addl
add
pop
shll
loop
adc
lret
daa
adcb
push
loope
xchg
out
jmp
pop
dec
pop
add
add
mov
xchg
xor
imul
ficoms
adc
xchg
mov
jb
inc
jns
adc
in
mov
fcomp
ret
push
mov
push
mov
daa
aam
xor
pop
rclb
pop
aad
jge
test
or
mov
mov
push
sbb
bound
jo
jb
cmp
stos
les
sbb
xchg
stos
iret
das
sub
xorl
lahf
add
dec
mov
lock
pop
stos
test
stc
enter
jbe
fwait
scas
insl
inc
push
mov
jmp
and
icebp
mov
outsb
sub
decl
push
cmp
stc
leave
ficoms
out
mov
cwtl
sub
xchg
cmpsl
cmp
cmpsl
lods
or
fsubrs
and
add
in
add
rcl
test
and
outsb
movsb
dec
xor
jb
repz
push
dec
mov
out
ficoml
xchg
sub
mov
loopne
outsb
sub
or
repz
rcl
xlat
loop
test
es
jbe
das
scas
mov
add
divl
lods
shll
outsl
push
ja
cld
add
in
dec
test
data16
lods
js
lock
dec
adc
and
mov
mov
testb
es
sbbb
pop
mull
mov
or
add
loopne
mov
int
das
mov
dec
pusha
outsb
fldl2t
ljmp
ja
sub
dec
cli
push
icebp
jmp
les
mov
sti
sub
loopne
dec
sti
lock
fwait
int
and
fwait
push
mov
nop
les
and
mov
js
mov
jnp
pop
jnp
repz
gs
xchg
fsin
sti
push
out
xchg
popa
cld
adc
push
pop
insb
inc
std
adc
mov
xchg
cmp
push
and
dec
xchg
mov
aad
cmpsl
mov
mov
xor
mov
push
jge
mov
ret
mov
shr
and
dec
sub
ret
mov
jmp
imull
xchg
movsb
add
and
insl
out
and
xchg
sahf
and
mov
sbb
xor
idivb
push
adc
cmpsl
loopne
push
rcrb
xchg
push
sbb
fadds
jecxz
push
sahf
loope
or
and
adc
mov
fmuls
insb
lock
add
icebp
xchg
aas
insl
into
mov
arpl
xchg
xor
daa
std
xchg
inc
gs
xchg
or
fwait
add
sti
or
popf
movsl
inc
test
addr16
sub
testl
and
jge
sbb
jbe
xor
pop
js
and
inc
inc
ficomps
cmp
mov
push
filds
xor
mov
loop
push
cmp
jp
imul
sar
aas
sbb
ss
pop
lds
xor
push
push
push
cld
sub
lahf
out
fmull
xor
sbb
sub
cmp
adc
jne
jno
fsubrl
dec
mov
and
test
jb
add
or
cld
xlat
stos
mov
cmc
sbb
push
xchg
cmp
push
cld
incl
inc
mov
mov
loopne
sub
cmp
iret
out
outsb
xchg
mov
jmp
xchg
lret
jcxz
fsub
repnz
loop
and
lahf
inc
inc
xor
cmp
pop
mov
ja
mov
xchg
jnp
or
std
lret
jbe
or
pop
or
stos
mov
jo
and
push
imul
sahf
outsb
nop
jbe
test
je
pop
inc
hlt
cmp
and
scas
in
push
push
adc
mov
push
imul
sbb
lock
sub
push
ja
sbb
loope
sbb
pop
jns
pop
mov
xchg
add
inc
adc
fisttps
lret
jmp
in
in
daa
inc
fisttps
stos
mov
jl
pop
mov
gs
adc
jle
fidivrl
push
and
mov
mov
ljmp
sbb
pop
div
lds
mov
sub
jmp
xchg
sbb
dec
adc
repz
sub
nop
jle
mov
adc
push
add
inc
cmp
jmp
out
mov
popa
dec
sub
cmp
iret
and
mov
jp
add
mov
jb
bound
inc
cmp
loop
adc
test
out
inc
fdiv
jb
push
je
xlat
fnstcw
mov
push
outsb
aaa
push
imul
xchg
jo
pop
push
mov
mov
sbb
or
arpl
shl
sub
sahf
lods
xor
xchg
xchg
sarl
movb
bswap
sbb
cld
mov
and
sub
test
inc
lods
dec
dec
popf
into
adc
xchg
popf
cli
mov
dec
fmulp
lods
push
sti
pop
repz
aad
xchg
cmp
inc
imul
lahf
inc
xor
xchg
jns
pop
add
shll
shl
aad
lcall
mov
push
fisttpl
test
mov
sub
pop
ja
popf
insb
and
push
repz
test
pop
inc
push
repz
pop
mov
cmp
and
mov
inc
test
aad
daa
fstps
sub
push
and
pop
pop
pop
repnz
into
or
negb
mov
jge
lds
cld
push
shlb
inc
push
xchg
cwtl
arpl
sub
push
cs
adc
aam
out
add
adc
sti
pop
jns
into
xor
shll
cmpsb
int3
in
cmpsb
pop
daa
movsl
arpl
dec
dec
cmp
pop
mov
dec
jne
push
int3
adc
out
xor
xor
scas
push
fildl
jo
sub
insl
int3
xchg
xchg
mov
sub
fisubrl
xchg
mov
mov
enter
movsb
lahf
dec
mov
ljmp
mov
or
sahf
mov
insl
imul
imul
decb
add
mov
cmpsl
push
ficomps
mov
pop
inc
std
jecxz
out
sar
xchg
sbb
or
sbb
dec
push
sub
jo
jp
cmp
negl
lods
mov
das
mov
xorl
inc
loop
cmp
pop
inc
scas
subb
mov
sbb
fadds
or
popf
or
adc
jo
mov
adc
xor
mov
push
cmc
cmp
outsb
hlt
leave
in
shl
jle
sbb
xor
pop
cmp
and
test
cmp
pushw
dec
bnd
fmull
xchg
loopne
test
test
out
adc
enter
subb
mov
movsl
into
mov
notb
cmc
mov
test
xor
lock
pushf
outsb
cmp
imul
iret
sub
mov
pop
fcmovb
adc
push
sub
aad
repnz
outsb
cmp
or
jge
pop
add
repnz
cs
test
je
sbb
lret
jns
adc
pop
dec
test
xchg
mov
push
in
sbb
mov
sahf
sti
lcall
movsb
adc
sub
mov
adc
sbb
xchg
pop
jle
shrl
adc
test
xchg
das
xchg
sarb
push
cmpb
mov
insl
popa
pop
mov
insb
subl
lods
js
dec
cld
stc
xchg
stos
mov
xlat
and
pop
cmpl
xor
out
mov
fcomp
sub
rclb
jno
sub
mov
jno
test
mov
push
jnp
mov
push
leave
lcall
subl
jo
sbb
stc
inc
in
and
int
inc
iret
push
pop
mov
fs
jne
mov
mov
enter
cmpsl
mov
sbb
subl
sbb
inc
mov
mov
loop
out
addr16
cmpsb
push
lcall
pop
aad
or
push
enter
push
addr16
jb
push
cmp
loopne
cmp
clc
stc
dec
pop
jge
sbb
sub
push
aaa
sub
cmp
xchg
add
push
out
mov
outsl
psubusw
and
jecxz
pop
add
orl
or
into
cmp
test
mov
dec
lret
icebp
outsb
jae
xchg
shl
add
sbb
cld
inc
subl
mov
jle
or
out
out
in
jno
fldcw
sti
outsb
lret
test
mov
es
divb
jnp
movsl
ror
push
mov
xlat
sbb
lret
test
inc
ds
les
cmc
mov
imull
xchg
mov
mov
jns
jb
movsb
int
mov
jbe
test
scas
out
add
in
rorl
dec
insb
push
call
stos
idivl
mov
andl
inc
movsb
mov
dec
jp
and
sub
mov
push
xor
fidivl
dec
jl
pop
sbb
sahf
adc
jl
call
mov
add
jno
hlt
adc
mov
std
add
push
or
ds
pop
adc
jmp
jl
cmc
mov
sbb
and
int
popa
or
cmpsl
movsb
lock
jnp
dec
cmpsb
push
push
pop
test
aas
inc
insl
daa
adc
cmc
lret
gs
outsb
pop
fcmove
inc
cmpsb
push
mov
sbb
pop
mov
push
test
add
push
push
jbe
lcall
ss
negl
dec
mov
push
push
ficompl
sbb
lret
imul
inc
push
imul
repz
ljmp
mov
data16
lahf
xor
ljmp
in
or
cltd
xor
xchg
jae
mov
sahf
add
push
cld
lahf
outsl
mov
pusha
dec
hlt
arpl
or
jmp
sbb
mov
fldcw
pop
and
stc
fs
sti
iret
cld
dec
sbb
mov
mov
xor
int3
mov
inc
ret
popa
push
jle
push
pop
popf
mov
pop
out
inc
fnsetpm(287
jl
xchg
jno
jnp
cmp
cmp
ret
xchg
add
loop
push
push
push
shlb
mov
sub
gs
mov
xchg
pop
jae
jno
out
jecxz
push
adc
leave
shl
jae
and
mov
xchg
insb
mov
adc
and
dec
je
fdivl
cmp
je
sub
negl
sarl
cs
mov
mov
pop
sub
fldenv
ds
or
dec
jge
push
cmc
sbb
stos
jae
xor
jno
out
xchg
and
xchg
fldl
cmp
and
repz
andb
mov
inc
call
mov
dec
fdiv
push
mov
incb
jo
dec
sbb
jl
shr
push
test
sub
es
mov
jl
sub
fs
and
pop
pop
xchg
hlt
fmuls
dec
ret
cmpsb
test
inc
push
arpl
inc
les
ret
loope
and
mov
aaa
cmp
mov
out
loopne
and
es
adc
jbe
or
sahf
xchg
sbb
jl
sub
pop
sbb
repz
lea
out
arpl
jg
pop
pop
pop
cmp
jg
addps
jb
dec
mov
scas
mov
insb
data16
mov
out
shlb
and
js
dec
jmp
popaw
dec
or
pop
sbb
jecxz
jl
mov
es
sub
dec
and
shrb
xchg
xchg
shl
dec
and
or
test
shrl
addr16
xor
int3
adc
adc
inc
add
js
pop
sarl
dec
jnp
nop
out
adc
roll
test
popa
inc
jecxz
enter
pushf
in
ja
and
daa
sahf
inc
mov
andb
rcr
sub
inc
mov
lock
xchg
div
movsb
fldl
mov
mov
repz
daa
bound
xor
xchg
mov
mov
outsl
inc
cli
cwtl
lea
lods
inc
add
fucom
pop
test
xchg
out
in
mov
cmpsl
ret
gs
cmpsb
add
std
push
mov
pop
negb
mov
sahf
jl
rcl
sbb
inc
push
xor
inc
push
inc
pop
fcmovnb
or
xchg
and
lock
bound
imul
push
rcrb
inc
aad
sbb
movb
dec
ljmp
mov
cmp
mov
jns
push
outsl
jle
sbb
dec
mov
in
jno
pop
sub
cltd
rclb
xchg
int
push
rcr
subl
jmp
inc
add
mov
pop
add
xchg
test
jno
inc
ja
cmp
das
jns
sbb
sahf
sbb
shrb
popa
out
das
insb
js
loopne
scas
inc
push
xchg
js
test
sbb
pop
imulb
push
pop
pop
sbb
xor
aaa
aas
sbb
or
add
or
xor
mov
push
scas
mov
pusha
sub
jp
movsl
mov
sub
mov
stos
mov
mov
pop
in
std
out
stos
lret
xchg
add
mov
mov
out
movsb
ss
cltd
out
jno
xchg
aam
lahf
imul
push
daa
in
int
imul
jge
repnz
mov
or
push
imul
imul
clc
mov
mov
fs
loope
ret
mov
lahf
fnsave
lock
lret
out
mov
xchg
xchg
pop
fnstsw
jo
outsb
jnp
push
shlb
je
pop
cmc
cmp
scas
sub
lods
mov
adc
lret
adc
mov
sub
dec
loope
push
xor
jmp
sub
mov
js
sub
mov
lods
lods
and
mov
out
loopne
xor
stos
loope
mov
mov
jnp
les
daa
out
xchg
dec
cmp
push
fsubp
fbld
pop
fadds
mov
fwait
mov
in
xchg
scas
enter
jp
inc
loopne
sub
adc
mov
fisttpl
pop
xor
pop
shll
jae
adc
shr
xchg
cmpsl
dec
push
out
arpl
mov
dec
hlt
adc
inc
push
add
add
int3
aad
dec
dec
cld
lock
add
lock
cmpsb
push
cmp
dec
daa
fstpl
push
scas
dec
aaa
fdivr
lock
or
cltd
loop
lods
pop
fcompl
lods
add
xchg
inc
out
xor
adc
sub
imul
dec
xchg
fisubs
jecxz
cmp
sahf
loop
hlt
sub
inc
fs
dec
std
mov
pop
cltd
das
push
cmc
pop
ss
pop
loop
and
mov
int
jge,pt
xchg
cmp
lods
pop
cmc
fnstcw
iret
je
inc
mov
xor
ljmp
pop
lret
les
iret
stos
repz
and
sbb
fisubrs
fstl
lods
and
cmpsl
test
xchg
cmpb
stos
xor
outsl
xor
stos
imulb
sbb
cmpsl
cmp
sbb
loope
xchg
out
aad
sub
stc
sahf
daa
bound
xchg
loope
mov
push
mov
shrb
dec
mulb
adc
pop
cmc
xor
ror
mov
test
in
push
aaa
ror
loopne
inc
xchg
enter
mov
nop
jg
fisubs
out
and
inc
rcrb
jle
dec
pop
cmp
arpl
pushf
fisttpll
lods
push
inc
and
cltd
mov
enter
cmp
push
jle
dec
xchg
mov
cwtl
lret
clc
jle
push
xchg
dec
roll
mov
fisubrl
pushf
loope
out
call
fwait
icebp
fwait
adc
sub
mov
jno
fstl
adc
fistpll
loop
jmp
std
push
fcoml
cmp
sub
push
mov
add
inc
popa
mov
int
adc
bound
daa
ret
fs
push
ficomps
push
pusha
aam
stos
mov
aad
xchg
fisubrl
or
inc
mov
ja
cmp
mov
aaa
mov
mov
mov
leave
cmpsb
jne
pop
iret
jmp
cmp
in
shld
shlb
sbb
daa
scas
loope
push
arpl
sub
js
mov
dec
jl
or
xchg
adcl
jnp
add
andb
add
les
jbe
mov
inc
lret
test
dec
stos
sub
pop
xchg
adc
add
sbb
inc
adc
ficomps
adc
mov
jle
fs
cli
add
xchg
push
jnp
mov
popf
in
jns
daa
or
fdivr
cld
mov
leave
sub
cmp
popf
pop
in
or
pop
xor
repz
cli
insb
packssdw
hlt
jp
jno
xlat
idivb
dec
and
sbb
jmp
pop
push
mov
mov
mov
roll
xchg
jecxz
loopne
mov
fistl
movsb
gs
pusha
cmpsl
mulps
test
test
es
and
mov
sbb
push
iret
addr16
mov
test
dec
cmpsl
and
fcompl
push
cmc
cwtl
sarl
mov
in
ret
pop
add
lods
and
mov
push
push
mov
fidivrs
fmull
aam
pushl
std
add
aas
jl
je
pop
xor
cmp
and
push
imul
jecxz
cmc
cli
pop
xlat
mov
bound
out
lods
addr16
dec
or
add
shr
and
sub
jb
sbb
fdivl
int3
jecxz
lods
mov
out
out
inc
mov
nop
int3
mov
leave
mov
into
mov
push
jecxz
push
repnz
das
or
jg
arpl
adc
jae
aam
subl
aad
sub
aaa
xchg
pop
data16
stos
xor
bound
push
adc
xchg
jmp
push
jle
adc
mov
out
repnz
jns
sbb
push
inc
insb
jmp
cmp
adc
scas
or
js
pusha
cmp
xchg
je
fcmovnbe
lods
popf
mov
xlat
arpl
cmp
sub
jnp
xor
test
xor
mov
inc
add
aaa
scas
xor
cmp
in
mov
stos
movsl
lods
add
cmpsl
xor
sbb
fdivs
xchg
inc
inc
mov
and
cwtl
push
and
xchg
addb
push
in
sub
lahf
cltd
xor
sahf
imul
jae
scas
jecxz
scas
inc
stc
jb
test
or
je
movsl
push
push
loopne
mov
adc
je
xlat
fsubs
sbb
adc
add
sub
stc
xor
add
je
cmp
cli
or
icebp
test
sbb
call
mov
mov
xchg
les
sbb
push
pusha
lea
cmp
mov
dec
xor
adc
lods
mov
push
lcall
sti
loopne
mov
sbb
dec
lcall
insb
outsb
fimull
and
sbb
std
sbb
or
dec
popa
xchg
mov
dec
cmp
incl
ret
fistpll
add
inc
pop
adc
lahf
sbb
outsb
inc
adc
into
imul
and
das
adc
in
ja
cld
pop
call
mov
lea
inc
add
mov
add
jnp
xor
ret
add
sbb
mov
mov
xor
jmp
jecxz
std
fnstsw
dec
push
inc
in
cmp
or
out
sbb
je
xchg
adc
out
adc
int3
jp
or
jmp
pop
bound
pop
inc
nopl
fists
leave
and
int
xor
pushf
adc
push
lea
or
int
sbb
testb
xchg
mov
xchg
push
lcall
xchg
movsb
cmpsl
mov
enter
rolb
sub
pushf
insl
ss
cld
jnp
shlb
pusha
stos
sub
mov
inc
repnz
mov
sbb
bound
cld
mov
jne
sub
arpl
ja
or
xor
movsb
fdivl
insl
fwait
test
data16
push
aam
out
test
out
fistl
push
das
inc
inc
out
mov
sub
and
dec
fld
in
loope
divb
mov
adc
sub
inc
scas
leave
adc
sti
es
mov
aaa
jp
mov
inc
out
mov
sub
fstpt
jl
xchg
pusha
xlat
popa
shl
xchg
test
dec
inc
and
repz
pop
jecxz
xlat
stc
pop
lock
push
pop
into
push
mov
cli
mov
in
out
push
xchg
sub
scas
pop
cmc
mov
pop
insl
add
sub
adc
lea
shl
daa
pop
mov
jbe
push
push
jnp
xchg
shrb
insb
sbb
hlt
pop
mov
arpl
sbb
mov
lds
push
add
lret
pop
cli
jmp
inc
mov
sahf
push
push
insb
iret
add
scas
repnz
mov
xor
cltd
js
das
add
cmp
mov
repnz
roll
cmp
rorb
popa
and
mov
aad
or
bound
mov
scas
jecxz
scas
xchg
or
lods
push
mov
insl
push
daa
int3
iret
pop
jb
pop
in
lcall
mov
mov
cli
push
xchg
xchg
es
push
aaa
shr
adc
and
mov
js
out
jb
outsb
lcall
out
movsl
xorl
gs
scas
or
enter
xor
pop
cmp
shl
cld
add
pop
sbb
xchg
fstps
add
xor
sub
sbb
ja
push
push
sub
push
outsb
sahf
lret
jae
imul
ds
mov
dec
dec
dec
aas
sbb
lods
into
aaa
in
lar
cmp
xchg
mov
mov
nop
jl
popf
movsb
sub
dec
xchg
dec
mov
and
pop
loopne
sahf
dec
sbb
and
pushf
ljmp
test
adc
jecxz
and
or
outsb
fdivs
ja
sbb
cmp
insl
imul
stos
jns
mov
dec
enter
cltd
out
out
xor
push
mov
mov
pop
in
out
jecxz
cmc
out
dec
mov
jbe
jp
xor
and
xor
in
pusha
xchg
pushf
xchg
data16
jb
shrb
mov
and
adc
test
xchg
ret
arpl
fcomps
mov
push
pop
pusha
into
daa
js
xor
push
pushf
xor
in
leave
mov
rcr
push
cli
iret
fnsave
xchg
jmp
push
in
xor
in
test
jge
sbb
aaa
sbb
test
cmpsb
add
icebp
mov
rcl
test
and
aaa
fdivrs
gs
dec
cs
pop
insl
adc
pop
rcll
js
ja
cmpsl
xor
or
ljmp
dec
inc
outsb
out
dec
push
shll
add
in
shrb
out
pop
pop
pop
xor
and
leave
or
xchg
mov
or
cmpsb
les
idivl
iret
or
ret
sub
push
xchg
lret
cmp
adc
inc
lds
push
xchg
sti
ret
add
pop
stos
mov
ficompl
outsl
lods
jne
in
lret
sub
cmp
rclb
add
jle
shl
cltd
cld
xchg
add
in
les
std
fstl
push
aas
movsl
sub
adc
adc
cld
mov
mov
aam
test
dec
push
dec
cmp
xrstors
push
push
mov
sbb
lret
jbe
sbb
mov
inc
inc
pop
data16
dec
cwtl
inc
dec
loope
push
adcl
test
movsl
cld
inc
bound
or
sbb
cmp
shll
mov
jnp
loop
xor
sub
cmpsl
dec
clc
mov
xor
in
pop
fiaddl
push
sbb
cmp
fmull
pop
or
popa
sbb
fisttpll
mov
hlt
aad
in
jae
sub
faddl
ds
push
cli
xchg
jp
dec
or
ja
push
mov
repnz
in
pop
pushf
adc
inc
lods
push
arpl
jae
add
adc
and
aaa
in
cli
ljmp
jle
adc
sti
loop
je
imul
mov
fcoml
jno
fdiv
add
pop
imulb
xchg
pusha
sahf
outsl
mov
dec
fcom
stos
xchg
and
cli
push
jnp
inc
loope
clc
roll
fsubrp
je
jb
das
mov
std
mov
ret
cltd
fmuls
insl
jp
xchg
xor
inc
pop
adc
dec
or
nop
sbb
mov
lock
scas
jne
push
in
fs
xchg
mov
mov
lret
sbb
movsb
fbstp
or
add
mov
loope
jl
jl
les
push
pushf
dec
mov
pop
cmp
jb
enter
xchg
movsb
int3
jle
jge,pt
fcoms
repz
repnz
jmp
and
lahf
lock
inc
xor
data16
scas
dec
orl
add
outsb
push
mov
push
enter
cmp
xor
mov
ljmp
leave
add
shrl
addr16
mov
inc
sbb
inc
xor
dec
cwtl
push
les
arpl
cmp
js
repz
inc
lcall
pop
mov
repz
cld
jl
sarb
mov
in
cmp
inc
scas
pop
and
aam
cmpsb
push
ror
mov
roll
mov
inc
push
add
int
sbbl
and
lcall
ret
in
cli
mov
pop
mov
xchg
dec
adc
mov
in
xchg
sbb
xchg
ja
jg
dec
or
mov
ljmp
gs
push
add
popa
inc
add
loopne
or
cwtl
and
in
dec
dec
mov
dec
mov
add
nop
movsl
flds
loopne
imul
pop
and
mov
clc
or
add
insl
stos
mov
fdivr
pop
popf
in
into
fistpl
add
fisttpll
mov
push
mov
inc
push
jg
movsl
xchg
mov
adc
aas
and
dec
lods
out
mov
dec
mov
xor
xchg
mov
fsubp
andb
scas
inc
fs
out
push
scas
outsb
inc
jl
sub
test
inc
out
pop
ret
add
ss
pop
mov
xchg
xlat
mov
out
fsubrs
dec
sub
add
push
frstor
jp
dec
cwtl
push
xchg
imul
imul
cmpsb
ja
cmp
xchg
push
sub
xchg
push
jecxz
imul
add
lahf
std
scas
mov
cmpl
dec
push
sbb
bound
dec
mov
adc
sbb
mov
lds
pop
jecxz
xchg
lahf
sarl
bound
mov
out
pop
out
mov
cmpsl
mov
ja
jge
shlb
mov
mov
pop
xchg
jmp
cmp
shr
lahf
data16
xchg
add
ja
ficomps
xor
mov
fisttpll
xor
xchg
pop
or
pop
popa
mov
push
sarl
fs
xor
repz
mov
testb
mov
adc
sub
jb
insl
and
in
stos
dec
xchg
dec
shll
das
stc
mov
mov
sbb
popa
jecxz
adc
sbb
lcall
mov
in
popa
push
push
push
rcl
xor
adc
fnstsw
adc
mov
dec
sbb
fiaddl
dec
cmp
cltd
pop
adc
push
shlb
in
stos
mov
cmpl
je
mov
shlb
rcr
fisubrl
mov
sub
xor
aam
jno
movl
outsl
pop
fwait
insl
roll
ret
imul
dec
iret
sbb
rcll
xchg
lods
mov
jo
sbb
inc
push
cmp
inc
mov
mov
fbld
xchg
xor
test
popa
sub
push
lea
push
lcall
mov
test
jmp
in
loopne
mov
jmp
fidivrl
pop
inc
cmp
or
inc
adc
mov
xchg
je
sahf
and
cltd
in
popf
xchg
push
sub
fcomps
push
push
push
test
test
test
fidivrl
push
lret
sbb
pop
adc
in
push
loope
dec
pop
imul
inc
loopne
xor
pusha
jg
mov
push
lret
das
add
flds
sbb
push
out
bound
add
insb
popa
cwtl
cmp
sahf
push
xor
and
aaa
scas
push
or
mov
mov
mov
push
lods
pop
js
or
mov
lret
into
jb
inc
cmp
mov
shl
xchg
mov
inc
mov
pop
fnstsw
pop
out
repnz
push
push
js
popl
out
aam
es
enter
fsubr
sbb
outsl
sarb
mov
or
sbb
sub
enter
shrl
sub
pusha
pop
lahf
pop
inc
iret
idiv
inc
cmpsb
xor
add
sub
pusha
xchg
loopne
movsb
cmpsl
inc
fldt
movsl
jge
add
dec
pop
xchg
les
jge
cld
in
sbb
out
push
sub
shlb
mov
cmp
loop
mov
sahf
cmp
or
xchg
cmp
iret
aad
aaa
aam
test
je
stos
push
adc
dec
hlt
xchg
sti
adc
outsl
add
sub
mov
lret
inc
sarb
inc
cli
cld
push
cwtl
sarb
hlt
dec
jo
jle
in
mov
xchg
push
xchg
inc
and
lcall
bnd
add
inc
xlat
lock
pusha
rcll
rorl
mov
push
add
rcrl
mov
jmp
subl
xor
mov
mov
and
jmp
pop
arpl
sub
fnsave
leave
dec
or
xor
stc
lock
dec
xor
cld
sub
jp
jecxz
mov
in
jb
pushf
aaa
out
hlt
decl
mov
xlat
cmp
mov
pushw
andl
xor
dec
mov
ja
lock
push
in
cli
cmp
rcrb
mov
enter
fnsave
xchg
test
add
xor
xor
mov
xorb
ja
stc
test
inc
imul
push
lds
ret
lock
xchg
iret
mov
sub
mov
lea
mov
out
enter
dec
xlat
jl
sbb
push
xchg
sub
loope
add
and
outsl
andb
scas
xlat
arpl
loope
inc
push
daa
xchg
xor
cmp
xor
adc
data16
sarl
out
and
aaa
shlb
sbb
out
xor
xor
inc
nop
push
fwait
scas
fstpt
sti
fcompl
dec
jmp
scas
add
jp
cmp
pop
push
sub
js
out
out
or
add
pop
pop
lret
lock
jmp
mov
or
sub
je
cwtl
sahf
add
adc
int
and
ds
sub
scas
or
inc
pop
loop
stc
mov
and
sub
fst
testb
mov
xchg
lea
push
sub
cmc
push
int
fs
jle
out
out
jb
push
or
mov
andb
int3
cmp
daa
push
rorb
shlb
xchg
cmp
loope
in
std
inc
hlt
out
push
ja
orps
js
shlb
mov
cmp
mov
xlat
clc
cmp
faddl
and
mov
orl
outsl
adc
data16
aaa
fdiv
push
jb
cmp
add
aas
enter
movb
jle
push
pop
pop
aaa
pusha
inc
fistpl
push
pop
jns
les
push
jno
aam
mov
jbe
jns,pn
xchg
ficompl
and
fmuls
sbb
les
cmc
imul
std
mov
in
std
mov
xorl
cltd
cmp
push
gs
dec
sub
mov
stc
or
and
mov
jno
dec
or
insb
inc
mov
and
sub
xchg
mov
mov
add
movsb
imul
mov
dec
shr
shr
cmpsl
std
scas
stos
mov
sub
movsl
out
sahf
pop
lods
push
js
cmpsb
std
and
lahf
repnz
aaa
jecxz
or
cmp
test
sbbl
out
mov
or
jmp
fbstp
sahf
lods
ret
mov
pop
shrl
cmp
cli
test
cmpsb
shrb
insl
mov
or
je
dec
mov
dec
mov
loope
shlb
push
sbb
dec
jmp
iret
and
fisubrl
xor
mov
movsl
push
aaa
in
xchg
mov
sbb
or
cs
in
addr16
or
out
pop
subb
mov
popa
dec
add
xor
lds
push
add
pop
push
dec
sarb
arpl
jnp
jno
cs
arpl
lods
pop
repz
add
inc
cmpsb
add
mov
sbb
stos
fs
mov
gs
inc
addb
push
ja
ret
daa
out
add
mov
popf
or
mov
mov
adc
jg
jno
and
aaa
out
int
fstps
pusha
aas
ret
xor
ror
mov
je
test
cwtl
pop
fidivl
rcrl
mov
lea
subl
rclb
lods
lret
js
imul
jle
cmp
iret
mov
xchg
mov
add
cltd
cmpsl
std
aas
movsl
cld
mov
fldt
dec
xor
jns
mov
call
gs
push
rcll
hlt
mov
insb
mov
jo
js
fidivs
add
dec
sbb
and
add
jne
push
inc
movsb
xchg
mov
aas
xor
pop
rolb
and
faddp
lcall
lods
es
mov
or
outsb
xchg
and
leave
cmc
adc
xchg
push
xchg
or
and
stos
inc
ret
call
push
das
or
leave
cmp
inc
outsl
xchg
lods
cmp
pop
xchg
filds
sbb
cli
push
lret
lahf
cltd
pusha
and
and
sti
dec
jmp
popa
push
inc
cltd
add
out
push
gs
sub
sub
mov
or
push
mov
push
adc
fdivl
dec
or
mov
add
sub
add
lock
cmp
std
lahf
loopne
pop
ss
add
imul
loope
jmp
sub
mov
sub
push
mov
xor
push
ss
fiadds
aas
stos
adc
xchg
out
add
sub
push
cmc
push
lahf
add
lods
mov
sub
or
xchg
push
pop
mov
adc
outsl
test
or
shrb
mov
sub
lret
popf
pop
push
leave
imul
sbb
push
cli
jnp
aad
jno
lods
repnz
add
pop
push
jns
cmp
cmp
xchg
je
subb
adc
inc
lcall
pop
sbb
jecxz
lds
push
lds
cmpsl
ja
push
mov
inc
popf
aam
ror
ljmp
std
aam
in
jecxz
popf
dec
shl
jmp
dec
push
or
jne
push
fisubrs
mov
mov
add
mov
xor
or
in
mov
and
test
mov
mov
dec
inc
mov
mov
lret
lea
ffreep
or
cmp
mov
in
daa
push
inc
pop
pop
repz
xchg
lds
push
mov
rclb
mov
movsb
xchg
into
and
daa
outsb
in
icebp
sbbl
outsb
insb
inc
dec
push
xor
push
sbb
in
push
repnz
cli
pop
push
pop
add
xor
jbe
loop
adc
adc
nop
pop
jmp
in
test
ljmp
fwait
sti
movsl
in
jns
test
lahf
cwtl
clc
lret
das
push
test
movsl
xchg
and
movq
js
adc
aas
dec
lds
add
fwait
sti
lret
movq
cmp
xlat
pop
in
adc
adc
jo
out
cli
adc
insb
dec
adc
insb
arpl
clc
jnp
inc
cli
aas
cwtl
rolb
loopne
mov
mov
hlt
insb
push
jmp
push
jecxz
call
push
decl
aaa
icebp
pop
je
inc
andb
addr16
in
sbb
js
loop
inc
jnp
lcall
stc
frstor
jns
ret
lods
mov
xchg
pushf
insl
dec
daa
pusha
mov
xor
inc
cmpsb
jb
shll
aad
cld
aas
cmp
inc
adc
adc
inc
or
ret
mov
xor
push
add
push
xchg
insb
add
mov
jmp
adc
out
lock
int
dec
std
rolb
inc
mov
cltd
dec
clc
xor
push
shl
addr16
lods
iret
insl
fwait
xlat
add
sub
call
adc
xor
in
mov
push
cmp
mov
xlat
lods
dec
cmp
add
dec
or
pop
lcall
int
cltd
cmp
mov
xorb
outsb
insl
pop
lods
repnz
testb
ss
xor
stos
cmpsl
dec
push
fsubrs
aam
test
es
xchg
jmp
dec
out
inc
xchg
mov
les
mov
cmpsb
imul
push
imul
stc
xor
rcr
in
jo
add
sbb
rcrl
movsb
inc
addr16
cmp
mov
fidivl
push
lods
mov
sub
and
and
pop
stc
cmpsb
xor
dec
lcall
add
pushl
push
push
add
or
jecxz
mov
loope
pop
or
les
lock
cmp
pop
jmp
imul
aas
adcb
sbb
mov
mov
aas
test
sub
mov
jo
sub
je
cmp
sarb
push
pop
jnp
fildll
stos
aaa
out
lock
push
mov
shll
xchg
push
lcall
add
mov
sub
cs
mov
sbb
add
mov
pop
xchg
push
ffreep
jge
push
mov
dec
popf
jb
pusha
or
dec
out
sub
xor
pop
out
mov
and
pop
cmpsl
xchg
lods
inc
ret
inc
es
xchg
imulb
divl
bound
cmp
ljmp
inc
fstps
icebp
or
pop
int3
fs
xchg
lret
insl
fisttps
jecxz
adc
xchg
ljmp
pop
std
ss
das
mov
mov
cltd
outsl
andl
xchg
enter
fs
mov
jg
pop
jno
dec
adc
movsl
xchg
or
or
or
adc
push
xor
push
add
iret
mov
cmp
add
repnz
lcall
xchg
mov
sub
sarl
loope
test
out
rcl
popa
xchg
mov
insb
xchg
mov
lret
rcrl
jle
scas
add
arpl
jns
mov
call
pusha
ds
imul
cmp
mov
repz
mov
cltd
std
mov
adc
jmp
xor
sbb
lock
lods
or
cli
icebp
into
lods
dec
loope
test
mov
sti
repz
jo
push
push
imul
fbld
xchg
pop
push
dec
adcl
ret
sub
imul
loopne
and
pusha
inc
adc
lock
scas
dec
cmp
xor
push
pop
adc
jge
mov
popa
inc
xchg
add
ja
mov
sub
bound
sbb
add
mov
adcl
push
repnz
sub
movsl
mov
xchg
je
mov
jae
mov
mov
sahf
and
mov
sub
sbb
lret
ss
dec
test
mov
push
sbb
popa
lea
mov
jmp
mov
or
push
push
mov
mov
inc
mov
loopne
adc
aaa
xchg
cwtl
icebp
dec
push
or
pusha
dec
xchg
test
call
mov
ret
outsb
push
push
enter
mov
mov
xchg
xchg
jbe
outsl
daa
cmp
out
icebp
xor
mov
push
shrb
sub
in
imul
in
test
leave
out
in
sti
xchg
jp
in
mov
jae
mov
in
dec
add
xor
sub
sub
and
and
outsl
and
bnd
add
push
mov
fistps
cli
inc
pop
outsb
jg
jo
cmpsb
sti
pop
cli
pop
adc
jb
stc
fsubr
hlt
or
adc
or
test
pop
pop
push
sbb
jmp
xchg
and
cmpsl
pop
insl
cmp
out
mov
mov
scas
popa
mov
adc
sti
push
insb
daa
clc
lea
adc
fcomps
mov
in
and
inc
icebp
xchg
sbb
push
mov
das
mov
cli
in
dec
xchg
sbb
pop
mov
xchg
cmp
clc
arpl
mov
fsubl
js
mov
adc
ds
sbb
mov
mov
sbb
arpl
xchg
add
aaa
jne
add
or
movsb
outsb
clc
adc
jns,pn
mov
lahf
dec
xor
jl
fsubs
aaa
jne
mov
insl
lods
push
dec
push
bound
cltd
repz
xor
sub
sahf
xchg
jns
sbb
mov
inc
lea
add
popfw
aas
xchg
std
call
add
jne
enter
shr
xchg
fcoms
mov
inc
xchg
in
xor
hlt
dec
outsl
stos
mov
bound
fwait
loope
rcrb
aad
sbb
out
adc
rcll
sub
xchg
rol
in
cld
fcompl
mov
inc
mov
cmc
daa
sahf
sub
adc
mov
cmp
jo
sbb
mov
lds
and
push
movsl
jmp
xor
jle
or
loopne
outsl
push
mov
in
ljmp
je
out
lods
lahf
into
mov
jg
nop
hlt
cwtl
sub
fstl
jnp
icebp
in
scas
xchg
cmp
ret
hlt
outsl
adc
push
or
das
or
jne
pop
fcoml
pop
push
out
movl
sub
gs
out
fwait
sub
pop
mov
cmpsb
les
or
mov
add
mov
cli
or
mov
lret
lods
jnp
inc
std
clc
cmc
dec
les
pop
cmp
sub
cmp
andl
movsl
jno
enter
xor
push
pop
aas
negl
lret
mov
data16
pop
inc
xor
imul
jne
ficoml
or
cmc
push
sbb
push
mov
pop
inc
cltd
das
dec
push
xchg
xlat
loopne
insb
inc
mov
fcomi
jns
outsl
negb
fstpl
icebp
or
call
and
mov
inc
fiadds
sahf
pop
lret
movsl
leave
push
mov
rcrl
insb
add
add
mov
lret
cld
cli
sbb
jmp
add
push
divl
xchg
loop
int3
mov
into
stos
adc
push
test
push
fidivs
xchg
insb
repz
mov
xor
xor
ljmp
push
mov
pop
jne
inc
ret
loopne
jmp
add
push
imul
aas
xchg
mov
sub
mov
arpl
and
pop
add
imul
and
stos
int3
or
loop
add
xchg
int
mov
cltd
test
xchg
stos
adc
pop
js
out
cld
icebp
jo
aas
nop
cli
jo
pop
ret
cmc
lods
sbb
inc
push
lcall
je
add
mov
cwtl
adc
xchg
add
pop
fdivs
dec
jmp
repz
pushf
and
out
xor
adc
add
idivl
popf
pusha
aas
mov
out
cmp
dec
mov
or
sbb
push
add
insl
inc
std
aam
xor
pop
insb
fwait
nop
hlt
mov
cmp
sub
inc
mov
les
inc
fs
cmpsl
push
pop
lea
add
cmp
mov
aam
outsl
fs
inc
nop
loop
pop
in
sbb
ret
push
mov
loopne
out
addr16
test
clc
loop
mov
add
xchg
mov
sub
fldcw
push
ret
outsb
inc
mov
push
xor
in
lock
mov
xor
into
xlat
xlat
ds
arpl
pop
in
out
xchg
fs
jne
pop
pop
add
inc
xchg
push
sbb
and
sub
mov
xlat
pop
hlt
inc
or
ret
mov
adc
stc
das
jl
sbb
adc
movb
rorl
fistl
out
addl
pop
push
scas
sub
test
jg
cltd
sbb
xor
jns
decl
imul
imul
iret
mov
and
lods
jp
xchg
push
iret
pop
xchg
pop
lds
cmp
jbe
hlt
inc
jb
call
add
inc
lods
pusha
aas
lret
xchg
ljmp
sbb
and
movsb
xchg
sti
hlt
dec
fwait
sti
gs
movsb
shl
or
test
lahf
or
aaa
movsl
push
lahf
sbb
mov
or
hlt
xchg
dec
aad
imul
cld
lret
adc
push
pusha
stos
push
pop
and
adc
test
das
nop
mov
pop
mov
cmp
scas
lds
jo
imul
xor
test
cmp
lcall
jno
pop
dec
imul
mov
mov
aam
cs
aad
int3
mov
test
and
sbb
jmp
cmpsl
les
pusha
bound
out
jge
mov
xlat
int
push
movsl
shlb
dec
mov
test
and
cld
jecxz
cmpsl
mov
movsb
inc
add
in
imul
fadds
aaa
jo
daa
pop
xchg
loope
fldcw
xchg
add
in
cwtl
aaa
fsubs
xchg
dec
cwtl
pop
dec
stc
push
xlat
push
ljmp
rcr
push
pop
inc
fisttpll
xor
mov
jne
imul
test
pop
mov
iret
ret
inc
lret
stos
jmp
lahf
out
rcl
aas
xor
cwtl
xchg
cmp
xchg
mov
cwtl
mov
nop
cmp
in
ds
push
aas
pop
push
xor
in
fsts
jle
sarl
cli
jl
outsb
jne
mov
mov
sbb
adc
popa
loope
mov
cs
and
jbe
mov
cmpl
adc
jns
aam
or
rcrl
movsl
mov
mov
neg
jge
arpl
sbb
icebp
sub
xchg
push
movsb
add
mov
std
sar
sbb
and
es
adc
dec
xchg
fcmovnbe
aam
jge
jo,pt
mov
lea
or
lds
cmc
jns
adc
repz
push
xchg
std
mov
xchg
adc
out
fnstsw
mov
or
add
popa
insb
loopne
icebp
and
cwtl
push
inc
lret
test
add
and
push
cwtl
pop
ret
test
add
sbb
decl
xor
repz
insb
xchg
lcall
insl
push
pusha
loope
scas
cwtl
stc
and
ror
out
jne
mov
dec
cltd
imul
mov
fsubl
inc
and
mov
mul
mov
mov
mov
pushf
lods
js
loope
cmp
ss
inc
rorb
mov
and
sbb
enter
add
stos
insb
push
rcrl
xor
mov
in
outsb
mov
sahf
lock
cmp
jb
xor
xorb
sbb
mov
int3
movsb
dec
hlt
pop
jbe
not
stc
xchg
xor
cmp
xor
mov
and
lods
sbbl
outsl
imull
and
mov
dec
jo
mov
loop
lahf
adc
mov
push
imul
outsl
lcall
add
jl
hlt
pop
mov
lahf
cltd
es
enter
nop
dec
mov
sbb
iret
add
inc
pusha
push
add
xchg
movsl
shll
mov
mov
adc
repnz
std
cmp
call
add
fldcw
push
dec
dec
divb
xlat
sub
popa
mov
aad
and
pop
arpl
cmpl
orb
jg
sub
cs
and
xor
fsubr
adc
push
sahf
jmp
or
cs
cs
and
add
icebp
xchg
jns
loope
push
cmp
orl
aas
out
mov
sub
xchg
movsl
xchg
pop
mov
pop
xchg
mov
out
push
add
mov
out
xlat
mov
dec
inc
jg
daa
cmp
movsb
and
jae
sub
add
sub
jg
sub
dec
inc
js
inc
out
lcall
adc
repnz
dec
out
aad
pop
push
pop
adc
aaa
mov
and
sub
or
test
repz
ljmp
mov
lahf
fwait
inc
js
push
sarl
dec
aam
mov
je
sub
lcall
movsl
and
push
mov
rol
xchg
fadd
dec
imul
and
push
mov
ret
or
out
or
lret
sub
loopne
loope
jp
mov
inc
pop
or
push
dec
sbb
nop
mov
stos
popa
inc
dec
and
mov
repnz
pop
enter
lods
add
out
xor
out
cwtl
cltd
ljmp
lea
std
xchg
lea
scas
xchg
push
mov
punpckhbw
arpl
mov
mov
lods
js
out
in
cmp
push
and
dec
ficoms
cli
pop
push
mov
mov
nop
iret
mov
mov
xchg
xor
sahf
icebp
fisttps
or
lods
add
cwtl
push
xchg
mov
out
mov
push
out
pop
shrl
xchg
stc
pushf
mov
push
push
mov
data16
add
xchg
jns
xchg
jnp
ret
stc
aam
sbb
and
mov
push
sbb
faddl
mov
or
ss
lock
cmp
mov
stos
xor
incl
inc
shrb
xchg
push
mov
pushf
jno
mov
fnsave
repnz
lock
adc
adc
jno
je
ljmp
movsb
divb
mov
dec
jle
pop
cmp
dec
fnstcw
sub
std
insb
pop
inc
mov
test
cli
add
dec
arpl
xor
and
test
out
stc
fists
frstor
sbb
cmpsb
pop
add
push
insb
sti
fcomps
adc
repnz
out
jl
jg
imul
negl
mov
cltd
ficompl
lcall
inc
repz
imul
xchg
sahf
pusha
cmp
decl
rcll
leave
push
sub
popf
push
xor
sahf
or
or
stos
popf
push
and
push
div
sahf
xchg
loope
aad
ds
stc
xor
pushf
mov
insb
jp
dec
notb
lret
and
repz
sti
adc
jns
inc
aas
out
cmp
add
sub
mov
das
push
sbb
shll
push
int
lods
enter
xchg
in
mov
mov
cmpsb
or
ss
push
js
sub
int3
bound
xor
je
jno
xchg
mov
clc
aas
pushf
sbb
xchg
adc
push
daa
mov
cmpsl
pop
aad
arpl
into
imulb
jmp
mov
rorl
mov
addr16
and
jno
fildll
lods
in
xchg
pop
ret
cld
gs
jno
bswap
mov
xor
out
xchg
pop
fcomps
pop
mov
jl
mov
test
in
clc
les
mov
adc
pop
or
fdivp
add
jmp
stos
xchg
push
or
insl
lock
mov
mov
mov
mov
sti
pop
test
dec
es
push
fisubrl
jg
jge
ss
mov
mov
fdiv
add
push
mov
mov
cmpsl
ja
flds
negb
jo
daa
sub
push
jb
pop
push
dec
sbb
dec
aad
dec
inc
cmp
jno
sub
and
jno
arpl
lds
in
fimull
rcl
clc
inc
mov
adc
push
pop
fldl
dec
stos
lea
adc
push
les
in
sahf
sbb
push
inc
insl
adc
jno
xchg
xchg
jno
dec
nop
insb
negb
push
jae
push
mov
jmp
arpl
clc
daa
in
pop
stos
and
push
sbb
mov
je
hlt
fsubs
imul
loopne
cmp
jne
pop
jo
xchg
outsl
test
inc
push
das
push
mov
idiv
lahf
dec
aas
out
out
mov
adc
movb
inc
and
mov
movsl
jecxz
dec
lret
jno
lahf
push
push
fs
cmpsb
add
vmovupd
or
cli
pop
inc
dec
cmp
xchg
xorl
xchg
or
sub
lret
aaa
stc
inc
cmp
ret
push
push
icebp
ds
fnstcw
add
pop
fwait
dec
into
cmp
adc
jns
mov
sbb
test
xor
das
cmpsl
push
and
sub
jb
ffree
adc
ja
xchg
jg
add
and
out
pushf
out
mov
push
lahf
jmp
sbb
cmp
and
daa
je
test
cmp
mov
jnp
inc
cmpsb
add
mov
fcoms
imul
negb
imul
mov
dec
xchg
dec
vpshaw
test
inc
and
and
mov
pop
push
or
push
and
pop
and
jno
and
test
push
pushf
cltd
push
xchg
mov
inc
js
push
push
xchg
xchg
and
sub
cltd
les
push
adc
jge
sbb
clc
mov
sub
add
cmp
pop
sbb
mov
and
jmp
ss
popf
and
imul
xchg
jp
test
add
fucomp
ret
pop
sti
sub
in
xchg
add
sub
cmc
add
mov
out
aas
xor
es
xor
test
sub
or
jg
and
mov
jmp
sub
ds
xchg
push
cltd
nop
jne
pop
mov
sub
inc
add
test
pop
or
sub
xchg
jae
jnp
test
sub
leave
aaa
push
and
leave
stos
sub
mov
ja
sti
ret
mov
outsb
in
adc
pop
push
aam
cmc
sub
add
dec
push
and
and
fdivr
lea
and
cld
dec
sar
popf
push
and
loopne
or
mov
fwait
and
sub
mov
cltd
mov
push
xchg
scas
mov
lock
and
aam
pop
lret
ljmp
mov
xchg
or
aad
mov
loop
and
pushl
outsb
add
aaa
xchg
test
scas
jp
push
stos
mov
adc
push
jb
lods
pop
rcrl
lods
insb
daa
pusha
mov
pop
xor
mov
lods
fmulp
sbb
pop
dec
fcmovne
bound
pop
push
inc
arpl
hlt
inc
aas
out
mov
and
enter
xchg
test
dec
mov
dec
std
ss
xchg
pop
ss
mov
cmp
sbb
ja
rcl
cs
adc
sbb
xor
bnd
xchg
stc
icebp
sbb
call
test
mov
cmp
xchg
jl
mov
repnz
push
xchg
pop
xchg
lods
cmpsb
je
adc
xchg
push
outsl
repz
jp
in
push
xor
inc
inc
cmp
fildll
fwait
jae
push
push
inc
inc
stos
bound
lods
loop
fadds
lock
call
mov
adc
negl
xadd
out
out
inc
sub
stc
pop
shrb
std
mov
cmp
fsubl
inc
sbb
xchg
nop
push
call
test
jne
add
pop
es
adc
xchg
inc
jae
fistpll
cmpsb
fisttps
push
lock
push
outsb
jmp
sbb
ret
mov
sbb
dec
lret
popl
inc
mov
rorl
insl
xchg
dec
pop
sbb
movsl
cmp
mov
xchg
and
movsl
jns
cwtl
bound
lahf
outsl
pop
inc
lcall
aad
cs
shl
pop
push
movsb
cmpsl
loope
mov
sbb
inc
sbb
out
test
mov
adc
inc
out
and
sahf
dec
sbb
inc
iret
mov
repz
nop
lahf
iret
cld
inc
bnd
enter
xlat
fidivl
scas
pop
and
in
inc
pop
arpl
jno
and
in
psubsb
pop
jl
fimuls
addb
inc
movsl
out
mov
xchg
out
mov
pop
lods
cmpsl
adc
mov
dec
sub
push
jmp
iret
pop
or
dec
mov
adc
dec
sub
lahf
sbb
pop
adc
push
dec
sarb
gs
jne
dec
cwtl
or
addr16
adc
mov
xchg
xor
lcall
loope
push
aam
pop
cld
dec
gs
cmp
dec
dec
daa
inc
fisubl
addr16
cmp
movsb
pop
push
shl
xlat
mov
scas
xor
push
lea
ds
bound
imul
and
jae
ret
iret
lock
adc
enterw
leave
vpmaxsw
cmp
mov
lret
mov
xor
or
dec
std
sarl
sub
inc
ja
xor
pusha
lahf
popa
test
daa
arpl
mov
push
rorl
ret
mov
mov
xchg
add
mov
ret
movd
pop
dec
mov
inc
xchg
push
in
sbb
sbbl
push
jnp
cli
xchg
and
adc
mov
cltd
pop
inc
shrl
mov
cmp
int3
push
push
fcmovnb
ret
mov
fldenv
mov
cltd
push
jmp
and
adc
push
dec
stos
cmp
pop
inc
ffree
adcl
dec
repnz
xor
mov
test
mov
jo
mov
jp
sbb
xchg
jne
fnstenv
movb
jle
xorb
out
push
loop
cmp
inc
mov
cltd
jl
cmp
mov
repnz
mov
test
or
push
mov
mov
jno
out
adc
adc
pop
add
mov
push
pop
mov
mov
inc
and
jns
xorl
call
mov
jge
fidivs
fwait
sbb
xor
mov
push
cmp
ja
mov
adc
push
out
sbb
cmp
pop
pop
jns
sbb
shll
xchg
xor
cld
xor
dec
cmpsl
lret
jb
sub
pop
cmp
out
cmpsl
sub
negb
shl
loop
jmp
pop
loopne
xlat
iret
mov
push
dec
int3
xor
xor
or
sti
shll
cmp
jnp
add
dec
lret
in
and
fistpll
std
or
jmp
sarb
or
cmpsl
sbb
cmp
mov
mov
xchg
mov
pop
je
ljmp
mov
daa
mov
insb
test
sub
pop
jae
addb
and
inc
aas
dec
xor
dec
out
mov
sub
xchg
int3
enter
in
popf
leave
sbb
xor
sbbl
jb
out
in
lcall
add
fcmovnbe
lea
push
pop
xor
sub
addr16
pop
add
jmp
aas
test
adc
xchg
jmp
pop
cs
movsb
add
subl
lret
aad
push
repz
cmpsb
xchg
data16
lahf
bound
jns
inc
sub
jl
mov
jno
outsl
lea
sub
mov
sarb
aas
outsl
inc
clc
sub
dec
je
ja
hlt
leave
test
aaa
dec
cs
xor
xor
scas
gs
rorl
es
mov
pop
mov
dec
jae
imul
dec
lods
addr16
and
jnp
push
mov
cmp
roll
cltd
addr16
gs
push
stos
popa
cmp
gs
cli
push
std
dec
pop
ret
mov
or
negb
mull
sub
sbb
gs
out
dec
add
sbb
push
pop
js
cmpsb
int3
jb
cwtl
cmp
cld
inc
adc
test
je
addr16
cmp
cltd
aad
pop
inc
mov
pushf
inc
and
subb
lods
mov
addr16
jg
cmpb
and
pop
testb
out
scas
mov
stos
int3
movsb
shrl
sahf
ss
and
mov
in
inc
fwait
stos
fisubrl
notb
jp
lock
decl
stos
inc
xor
into
jae
dec
scas
xor
repnz
cs
dec
fcoml
xor
jl
aaa
add
leave
pop
cmp
adc
in
repnz
sbb
push
pusha
xor
or
mov
jno
mov
cmp
mov
pop
lods
add
xchg
add
sub
movsb
dec
stos
mov
cmp
push
stos
jge
daa
sub
xchg
or
xor
jg
mov
and
pop
pop
lcall
jge
es
lods
cld
adc
add
repnz
icebp
subb
clc
rorl
jb
pop
push
jne
stos
ja
popa
test
seta
lcall
test
popa
loopne
inc
std
fnstcw
bound
rorl
lods
test
mov
mov
jg
and
cwtl
pop
pop
ss
mov
inc
fstpt
out
in
roll
add
sbb
add
xor
pop
and
add
fcmove
into
mov
sbb
imul
cmc
sti
lods
aad
daa
aaa
mov
in
adc
call
cltd
test
pusha
imul
dec
mov
cwtl
out
pusha
mov
aaa
outsl
sti
inc
and
in
xor
ljmp
imul
jecxz
movsb
pop
mov
push
cmp
es
arpl
sub
mov
cwtl
mov
movsl
rolb
sarb
add
sarb
mov
xor
bound
aaa
incl
push
aad
ljmp
scas
notrack
xchg
jnp
mov
data16
sbb
jecxz
or
sti
dec
xor
in
fwait
xchg
subb
lret
adc
mov
pop
fwait
loope
and
jns
rolb
pop
xchg
imul
popf
push
inc
jmp
dec
push
lea
negl
cmpl
into
mov
stos
pop
cwtl
test
jp
cmc
aaa
or
imul
cmp
sahf
stos
je
sbb
cmpsl
hlt
aam
int
dec
mull
jb
jo
inc
pusha
xchg
std
dec
mov
xchg
aas
mov
out
std
sbb
push
sbb
loopne
adc
dec
fadds
xor
sub
dec
and
add
insb
mov
jp
stos
sub
push
pop
mov
inc
fcoms
das
stos
dec
lods
jecxz
popf
hlt
in
leave
add
jmp
jo
fnstsw
stc
daa
adc
js
fwait
jl
ss
sahf
out
sbb
pushf
mov
fmul
or
out
jnp
imul
mov
mov
jb
push
scas
xor
fcom
clc
mov
negb
or
ljmp
push
add
roll
sbb
mov
or
mov
adc
aad
xchg
arpl
cmc
stos
adc
add
in
mov
push
jns
mov
or
mov
iret
aaa
add
pushf
adc
push
cltd
inc
mov
cld
in
sub
jne
divb
push
sbb
aam
or
shll
or
pop
push
aad
add
mov
adc
dec
dec
test
inc
inc
adc
sub
mov
or
adc
sbb
xor
cli
test
rcr
and
push
push
jg
and
inc
pusha
push
push
mov
adc
test
lret
pop
cs
loop
inc
cmp
jmp
hlt
insb
jmp
and
pop
or
inc
cltd
add
adc
ds
daa
xchg
test
ja
stc
or
jecxz
es
jle
push
in
mov
mov
xor
mov
sar
cmp
jg
pop
cmp
xchg
mov
and
insl
mov
fbld
sbb
jle
adcb
xlat
push
jg
dec
xchg
lods
xor
pop
mov
leave
jle
lcall
dec
dec
lods
xor
lock
loope
mov
test
sahf
inc
cwtl
in
out
or
push
cmp
lret
pop
mov
jae
dec
addr16
daa
sbb
mov
jecxz
aam
push
rclb
and
mov
dec
and
mov
js
bound
jmp
ja
inc
fdiv
pop
scas
jae
mov
insb
jmp
pusha
jo
fisttps
sbb
shrb
filds
ffree
cltd
pusha
cmp
cmp
aas
xor
mov
mov
dec
or
subl
lcall
mov
xor
jns
or
sub
xchg
loopne
ja
cmpsb
and
mov
push
xchg
push
mov
xchg
push
push
out
xchg
dec
jns
mov
psadbw
ljmp
pop
inc
xchg
xchg
fsub
mov
aas
push
aam
push
push
mov
arpl
pop
cmp
cli
aas
and
sub
stos
inc
inc
push
inc
push
dec
bound
test
call
out
push
stos
sub
fistl
dec
mov
fs
ss
mov
vfrczss
xchg
repnz
leave
test
jp
xor
mov
stc
andb
test
add
sbb
arpl
incl
out
bndstx
insl
mov
adc
adc
push
pushf
outsl
adc
out
and
cwtl
pop
shl
mov
fmul
sub
lret
or
ss
mov
mov
xor
fiadds
in
mov
lea
dec
aaa
into
stc
ss
cltd
adc
fisubrs
loopne
mov
mov
roll
imul
call
ljmp
fyl2xp1
fcompl
add
outsl
mov
xor
mov
sahf
fimuls
aas
xchg
or
int3
lods
jo
imul
mov
stc
addr16
je
pop
arpl
ss
and
divb
inc
inc
mov
cmc
mov
push
mov
sbb
enter
daa
rcrl
repnz
inc
inc
add
jl
arpl
add
rcl
fnstsw
jne
fiadds
adc
xchg
or
pusha
outsb
stos
inc
shrb
push
jo
iret
push
roll
pop
hlt
mov
mov
lods
cltd
adc
int
xor
pushf
add
rolb
xorl
dec
repnz
orl
test
outsb
movsl
test
bound
dec
lods
addb
out
xchg
sub
adc
push
rorb
movsb
inc
mov
fdivl
mov
test
xchg
fcompl
fldl
sub
sarb
ja
sbb
fs
pop
pop
in
mov
jns
rcrl
sti
jb
fs
shlb
xor
test
dec
inc
cmp
movsl
push
and
in
xor
add
lods
mov
cmp
push
inc
xor
fidivrl
dec
inc
cld
jns
or
cli
inc
push
mov
xor
or
pop
out
inc
fwait
clc
cld
adcl
sti
out
adc
fnstcw
insb
lahf
je
add
adc
sbb
cltd
nop
das
adcb
or
ja
or
sub
xchg
popa
loopne
lods
and
cmp
in
adc
push
cmp
mov
push
jo
js
adc
xchg
xor
mov
int
scas
cli
lods
cmp
xchg
and
rcr
xchg
pushf
mov
mov
and
push
push
jle
inc
cmp
imul
nop
push
push
sub
xchg
inc
dec
or
sub
and
mov
mov
sbb
jbe
adc
into
dec
mov
shr
dec
scas
sarb
lret
movsl
pop
jp
into
pop
fmuls
add
cmp
aad
add
mov
sub
lret
dec
lods
dec
adc
sbb
fisubrs
inc
lahf
xchg
scas
and
sub
stos
arpl
adc
pop
adc
mov
stos
pop
in
insl
add
fmulp
and
icebp
cs
mov
pop
ds
test
imul
nop
test
mov
and
cs
aad
jbe
cmpsb
sarl
aam
sbb
push
push
psubsb
jmp
mov
mov
jmp
ss
pop
jae
scas
xor
mov
mov
fcmovne
popa
sbb
xchg
fcmovnb
mov
sbb
dec
ja
out
test
ljmp
icebp
mov
fmuls
call
pop
cltd
push
out
adc
enter
sbb
push
imul
or
movsl
sbb
test
lret
imull
out
rol
es
in
dec
mov
or
cmp
popa
sub
imul
ret
add
xor
mov
xlat
fmuls
pop
inc
or
and
and
fnstenv
jae
je
iret
fisttps
lea
pop
andl
pop
push
sub
mov
and
pop
jns
add
popf
lea
xlat
inc
adc
popa
mov
in
adc
mov
dec
or
and
sub
imul
jg
add
dec
stos
mov
push
and
add
insl
das
mov
cwtl
push
lret
sub
divb
popa
addr16
mov
jnp
cs
xchg
xchg
mov
fisubrl
add
dec
adc
ja
aaa
mov
rcrl
cltd
jp
inc
mov
enter
sbb
ret
int
neg
inc
mov
pop
mov
push
sub
sbb
insl
outsb
mov
pop
movsl
fsubrs
sub
aaa
pop
jp
imul
xrelease
xchg
mov
mov
jl
loop
inc
in
adc
push
inc
hlt
imul
aaa
pop
xor
mov
add
mov
fs
mov
pop
outsl
mov
shrl
mov
cmp
pusha
xchg
push
or
or
pop
xchg
inc
shrl
cld
push
out
repz
and
jecxz
sub
mov
cmp
sub
jbe
mov
and
and
adc
mov
pop
dec
test
mov
push
xor
jae
fwait
lea
out
aad
push
mov
mov
push
xchg
inc
inc
popa
sti
ret
shl
pop
imul
cmp
aam
and
pop
imul
insb
movsb
nop
outsl
adc
adc
inc
mov
dec
data16
les
mov
dec
dec
mov
fisubl
add
jg
jmp
adc
push
adc
test
jg
fdivrl
sbb
jmp
sbb
out
and
daa
nop
stc
aaa
clc
dec
cmp
int
or
dec
loope
popf
orl
cmp
add
cmpsl
mov
mov
daa
outsl
orb
movsb
rcrl
push
adc
fwait
jg
imul
int
fldl
jecxz
cmp
inc
add
mov
leave
aam
push
icebp
shl
loope
add
and
sub
dec
push
adc
lods
fisubl
sbb
jmp
xor
rcrb
xchg
lret
hlt
mov
or
nop
adc
xor
ret
mov
inc
out
adc
pop
add
outsb
out
add
xor
mov
ret
mov
sarb
pop
dec
dec
daa
and
ds
adc
lock
into
pop
popf
lret
push
push
push
cmp
sbb
mov
sbb
ret
add
nop
dec
sub
ljmp
sub
add
sub
dec
shrb
sub
xlat
aaa
shll
scas
inc
xchg
lea
pop
sub
icebp
ret
push
mov
iret
shrl
lea
fidivs
mov
stos
test
mov
shlb
je
pop
divl
push
int3
test
mov
test
std
adc
xor
or
call
pop
adc
popf
push
mov
or
or
xchg
pop
ficoml
repz
jg
jb
aas
xchg
inc
mov
andb
dec
push
or
shlb
xlat
adc
pusha
cmp
mov
fists
in
int
sbb
add
sub
jge
xchg
mov
into
cmp
cmc
mov
lret
lcall
jle
push
sub
lahf
test
das
shl
add
add
in
int
imul
mov
inc
andb
mov
sub
add
inc
shlb
mov
fists
or
mov
movsl
dec
bswap
fiadds
jg
sbb
cmp
fwait
clc
mov
in
mov
out
xor
xor
jmp
int3
or
inc
jno
dec
and
xor
or
cmpl
and
inc
mov
call
iret
push
and
ja
adc
cmc
xchg
mov
jp
inc
cmpsl
movsb
cs
sarl
sub
inc
inc
dec
fsubr
cmpb
iret
mov
jbe
ficomps
enter
out
sbb
add
push
shlb
int
fwait
sub
push
mov
fsts
cld
imul
dec
mov
lcall
aad
bound
sub
icebp
imul
sub
aaa
inc
test
pop
add
into
js
jns
mov
std
scas
pushf
pusha
mull
scas
sub
sbb
sbb
dec
mov
adc
mov
pop
gs
insb
or
test
push
imul
and
inc
push
jne
fsubp
inc
adc
lret
mov
fists
lcall
inc
push
icebp
test
sbb
lea
pop
mov
mov
mov
inc
aam
lds
push
mov
fwait
repz
movsl
jmp
push
sub
add
or
out
shr
push
dec
shll
inc
sbb
add
dec
push
adc
mov
dec
shlb
pop
pop
inc
and
testl
sub
sub
or
cmp
adc
cwtl
shll
mov
int3
jp
sbb
pop
push
cmpsl
pushf
jmp
mov
mul
fldt
push
push
imul
sbb
jo
sbb
or
call
push
jle
test
or
ds
aam
testb
rcr
xor
shll
fildll
gs
js
or
mov
jmp
and
inc
popf
aam
push
inc
lahf
and
sub
enter
sbb
jno
inc
or
cmpsb
mov
fstps
jbe
sbb
dec
aad
inc
xchg
outsb
loope
mov
shrb
push
out
inc
insb
rolb
lds
movsl
cmc
fldt
and
push
sub
sub
lea
pop
leave
xchg
sbb
repnz
xchg
loopne
pop
xor
and
fcmovbe
into
xor
cmp
div
add
cltd
dec
lock
pop
arpl
inc
leave
aam
fisubrl
push
jle
dec
and
cmpsb
es
mov
nop
subl
clc
xor
mov
dec
aam
repnz
add
mov
fisubl
jae
push
or
test
test
fstps
clc
inc
jnp
push
in
fs
xchg
cltd
sbb
pop
xlat
in
xlat
loope
mov
mov
add
fnstcw
cmp
dec
xchg
lock
test
cmpb
rcl
mov
gs
mov
pop
and
jmp
mov
les
mov
jg
adc
out
testb
adc
dec
add
stos
cmp
in
bound
bound
inc
add
dec
pop
add
enter
mov
dec
mov
stos
xchg
pop
dec
ss
fwait
scas
inc
fcoms
insb
aad
popa
push
and
xor
mov
push
pop
xlat
adc
test
icebp
std
fwait
jmp
xor
imul
repnz
jle
lret
cmpsb
sbb
nop
shl
mov
ret
mov
pop
cmpb
rolb
lock
sub
psadbw
stc
jno
mov
outsl
mov
cmp
xchg
and
outsb
fldenv
dec
pop
sbb
dec
and
out
adc
bound
pop
or
inc
push
es
pop
adc
fcomp
push
mov
push
fdivrp
cwtl
xchg
mov
test
popf
mov
mov
pop
pop
mov
test
imul
adc
lret
xchg
and
jmp
mov
xchg
push
cwtl
gs
pop
int3
cmpsl
cltd
mov
aaa
in
out
or
mov
int3
call
into
inc
mov
das
and
popf
out
into
out
or
sbb
adc
sub
into
dec
shlb
aaa
mov
push
jbe
push
mov
mull
adc
movb
cmp
xor
push
es
adc
sbb
mov
mov
shl
mov
jmp
andb
and
pop
fildl
leave
mov
lcall
dec
mov
sbb
mov
test
push
add
push
sub
mov
in
xor
mov
inc
test
cmpsb
inc
dec
xor
daa
lea
inc
scas
popf
loope
cmp
adc
add
xchg
sbb
pop
pop
test
call
aas
lods
subl
push
sub
mov
push
rcl
mov
bound
stc
stos
add
dec
popl
jns
adc
push
mov
and
arpl
xor
dec
jle
mov
sub
jg
daa
nop
sub
xchg
inc
adc
leave
mov
gs
les
sbb
pop
mov
add
mov
loope
xchg
inc
popf
std
sbb
xchg
daa
add
loopne
mov
stc
hlt
or
dec
adc
jg
fisubrl
and
inc
pop
sbbl
in
cs
sub
shrl
call
dec
pop
jp
xor
sub
cmpsl
sbb
aaa
sbb
mov
call
stos
inc
fidivl
das
scas
pop
mov
dec
sahf
daa
aaa
fsubr
scas
mov
mov
stos
pusha
mov
jge
xorl
cmp
popf
or
inc
std
test
push
mov
mov
bound
dec
rorl
pop
into
movsb
lock
sbb
sub
dec
cmp
adc
inc
sbb
or
aaa
fnstcw
imul
mov
int
dec
pop
and
cmp
xchg
adc
xchg
fwait
jno
and
and
push
mov
or
iret
addb
lods
imul
pop
push
mov
cmp
xchg
rclb
xchg
push
cmpsb
xchg
inc
mov
adcb
jmp
fsubrp
and
mov
inc
jl
aaa
sahf
jae
shr
popa
sbb
loop
cwtl
mov
mov
jne
add
mov
and
xchg
loopne
cld
gs
cmpsl
jne
xchg
xchg
stos
mov
in
jmp
or
mov
notl
dec
sbb
arpl
xchg
cmp
inc
push
mov
stos
cmp
inc
das
and
fdivl
outsb
nop
filds
jne
shll
xchg
adc
add
mov
aaa
xchg
stc
add
fildl
lds
aad
or
out
and
xchg
mov
fistps
mov
adc
lods
jl
sub
cmp
lock
add
add
int3
lret
js
jl
mov
cmpsb
or
out
cmc
cmpsl
int3
xchg
dec
es
popf
mov
add
adc
pop
and
xor
mov
mov
mov
in
sub
push
sbb
sahf
nop
gs
adc
jl
ljmp
stos
test
cmc
in
dec
hlt
inc
shrl
xchg
push
adc
mov
mov
cmc
or
jge
mov
pop
das
cmpl
dec
jl
lahf
sbb
int3
out
dec
out
addr16
sub
sbb
pop
mov
or
mov
dec
xchg
jbe
mov
add
movsl
leave
test
daa
in
xor
cld
or
pop
jo
mov
popa
leave
push
xor
dec
jbe
sarl
jae
or
jle
push
adc
mov
xor
dec
xchg
add
movsb
mov
bound
aad
data16
push
jae
insl
cli
mov
add
push
xchg
sub
divl
gs
idivb
add
cmpl
fs
xor
adc
insl
cwtl
out
sub
push
or
xchg
inc
or
stos
and
insl
andb
inc
push
ficoms
iret
and
xor
imul
cmp
inc
add
and
push
jp
pop
ja
ret
jno
xor
dec
and
push
xchg
mov
cmpb
or
lds
inc
jb
adc
inc
jae
enter
jecxz
test
movsb
pop
sbb
add
lret
sub
lahf
add
idiv
cmp
or
jae
mov
pop
subb
imul
test
imul
jmp
add
cmpsl
outsl
xlat
or
leave
in
aam
push
jnp
sub
fsts
or
add
pop
popf
and
mov
ljmp
out
clc
aaa
cs
mov
or
jp
xchg
ret
pushf
mov
imul
cmp
popa
idivb
lret
jno
xchg
pop
jp
xchg
xchg
ja
add
adc
inc
xchg
shrl
mov
adc
pop
inc
arpl
pusha
jne
stc
push
sub
mov
push
stos
jb
mov
arpl
xchg
out
mov
data16
scas
out
jno
rol
cs
mov
jle
xchg
subb
ljmp
orl
decb
mov
dec
fmull
and
arpl
mov
pop
cmpl
mov
outsb
andnps
push
sbb
push
arpl
sub
clc
push
xor
pop
mov
dec
clc
xor
or
add
test
test
or
jge
leave
jns
ja
das
testl
dec
gs
or
scas
or
stc
shl
pop
mov
pop
imul
or
fstl
sbb
pop
rclb
pop
ljmp
ss
mov
jns
loop
jecxz
cmp
lods
out
xlat
jp
fcmovu
sbb
mov
cmp
mov
xor
repz
cltd
sbb
push
addr16
mov
add
xchg
stos
and
mov
stos
pop
jo
jne
in
inc
and
mov
lods
mov
shll
pushf
fwait
iret
xchg
fsqrt
loopne
imul
leave
fucomip
repz
lea
jnp
into
sub
or
pop
jl
sbb
test
arpl
bound
out
sbb
imul
cs
out
jge
sbb
ret
sub
fadds
inc
sub
stos
or
dec
sti
inc
test
repz
ficoms
sti
sbb
enter
shll
ljmp
cli
arpl
nop
ljmp
mov
pop
pop
lret
les
sti
popf
scas
dec
push
je
ss
mov
dec
xchg
lcall
xchg
cld
lea
and
jns
adc
pop
xchg
push
mov
jge
adc
sbbb
mov
repnz
dec
adc
dec
jmp
inc
loop
shlb
xor
decb
push
mov
sub
shll
loope
je
js
sarl
jge
ss
mov
or
popa
adc
in
mov
xor
mov
imul
nop
xchg
dec
push
mov
push
ja
rcrl
add
jl
mov
aaa
xchg
add
mov
cld
jne
mov
and
sbb
dec
lahf
sbb
lock
or
in
xor
mov
flds
dec
jo
mov
aad
arpl
xorl
mov
adc
lcall
xor
orl
ret
jecxz
and
lods
lretw
or
orl
ret
add
scas
pop
mov
sbb
mov
add
ja
jp
and
xchg
add
imul
push
jge
adc
cmp
adc
push
ds
xor
cmp
cld
sbb
lret
xchg
sbb
push
pop
add
loopne
cld
mov
push
pop
faddl
rcrl
push
or
sbb
dec
movb
sarl
inc
mov
fidivrs
jae
mov
add
dec
sub
mov
sarb
push
push
xchg
and
mov
xchg
in
lock
test
mov
lahf
inc
cli
jmp
nop
mov
test
sub
stos
dec
mov
je
cli
pop
out
orb
dec
mov
jbe
inc
jmp
mov
cmp
shlb
dec
out
lahf
out
mov
jge
push
ja
sub
dec
sub
or
dec
jmp
push
inc
push
out
adc
cmp
push
insl
dec
jl
bound
sbbb
push
outsb
es
pop
xor
push
xor
cmp
xchg
or
aam
add
sub
xor
lret
pop
add
lea
clc
shrb
mov
xchg
inc
add
adc
jg
mov
cmp
pop
fstl
dec
mov
or
mov
ret
xchg
mov
data16
jp
inc
push
push
nop
adc
aam
mov
shrb
in
fxch
adc
xlat
mov
xchg
xlat
pushw
fwait
mov
aam
mov
rcr
dec
sub
insl
ret
int
mov
jecxz
sbb
out
dec
jb
repnz
lea
movsb
dec
outsb
sahf
inc
and
aam
dec
mov
inc
loope
add
inc
out
dec
mov
movl
xchg
pop
js
sbb
sbb
or
shl
jnp
and
fcomi
inc
push
pop
pop
mov
jne
scas
jmp
jae
mov
lds
mov
test
in
cmpsb
scas
into
push
xor
not
js
inc
aam
stos
jecxz
inc
rorl
cmp
std
pop
sub
js
cld
xchg
xor
mov
jg
push
and
out
add
pusha
test
movsb
inc
cmp
cmp
das
xchg
and
jo
add
xchg
push
in
xor
jle
and
fnsave
out
jne
xor
xchg
xor
push
clc
outsl
cmp
fs
mul
insb
test
sarl
sub
js
out
lods
scas
or
sbb
fisubrs
gs
or
hlt
mov
cmpsl
jb
mov
adc
dec
iret
clc
adc
xchg
mov
xor
xor
xor
mov
push
data16
aas
std
je
push
pop
xlat
inc
add
test
pop
shl
fdivr
shrl
add
fcompl
xchg
ret
cmp
pushl
int3
aam
cmp
mov
cmp
jo
lahf
arpl
lcall
adcl
repnz
mov
xor
addl
or
jns
pusha
aam
dec
loopne
fimull
gs
pop
shll
fs
cmp
and
leave
in
mov
jbe
jecxz
mov
aaa
push
push
ret
add
push
inc
rol
dec
jge
jno
push
fnsave
call
and
cmpsb
sahf
pop
cwtl
xchg
lret
cmp
fisubs
jae
shll
dec
dec
popa
iret
xchg
sahf
cmp
mov
rcrl
movsb
push
pop
imul
ret
and
daa
sbb
push
mov
dec
adc
cli
dec
test
mov
sbb
add
iret
and
enter
lock
repz
es
fwait
mov
cltd
test
cmp
mov
push
cmpsb
fwait
xchg
push
lret
adc
mov
jnp
loop
in
push
lock
mov
xor
nop
jo
lods
mov
dec
mov
pop
or
cld
loop
push
das
cltd
jne
xor
cmp
inc
mov
dec
mov
stos
inc
imul
shlb
push
fisubs
dec
xchg
int
movsl
int3
jae
jg
pop
fdiv
jnp
lods
mov
xor
mov
add
mov
outsl
cmc
in
imull
inc
xor
xchg
add
in
add
push
adc
imul
pop
int
cld
icebp
fs
mov
mov
fiaddl
pop
dec
add
shrb
cmp
inc
jmp
les
cmpsl
push
clc
inc
out
fprem1
push
sbb
lahf
fmul
pop
add
hlt
pop
lods
mov
pop
xor
stos
lret
cmp
pusha
dec
sbb
aad
xor
fwait
nop
push
jle
sub
in
aaa
shrb
pop
or
inc
test
repnz
rcrl
push
out
mov
sbb
jb
roll
movsb
scas
dec
inc
loopne
rolb
int
xchg
je
arpl
sbbb
jo
aad
pop
add
stos
inc
adc
inc
push
xor
jp
sbb
mov
addl
fs
cmpb
js
xor
inc
fsubrl
lea
push
mov
loopne
xchg
inc
test
mov
cmc
or
pop
in
mov
es
add
aas
sbb
xchg
jmp
jae
lock
mov
lock
sbb
add
push
xor
xchg
or
scas
mov
mov
movsb
out
in
adc
cmpb
pop
and
push
outsl
aad
outsl
ljmp
daa
jge
popf
sub
jne
mov
push
addr16
in
inc
lods
or
xchg
hlt
adcb
in
jne
orb
adc
es
pop
jne
add
sbb
mov
inc
mov
mov
xchg
sti
inc
push
or
jp
adc
dec
enter
push
inc
call
fnstenv
push
add
pop
cmp
mov
jb
inc
imul
repnz
ljmp
mov
lcall
in
ljmp
pushf
in
sub
and
movsb
sub
mov
aas
jno
imul
out
push
sub
mov
and
mov
loope
and
je
jb
fists
mov
mov
in
aam
clc
scas
dec
outsl
dec
jecxz
mov
mov
stc
in
inc
out
sub
pop
scas
push
repnz
xchg
push
fsubrs
lcall
mov
clc
xchg
xchg
in
int
aas
dec
inc
sete
or
cmpsl
pop
dec
divb
mov
testl
inc
lock
xor
pushf
mov
fnstenv
mov
imul
and
popa
jg
push
ds
fcmovb
sti
stos
mov
jns
scas
push
test
xchg
popf
ljmp
inc
mov
pusha
xchg
xchg
or
leave
outsb
sbb
sub
pop
jl
jo
jne
outsl
pop
push
dec
lcall
out
dec
dec
xor
adc
out
jecxz
sub
dec
jg
inc
shl
pop
cli
push
cld
xchg
fsubrp
adcb
pusha
xchg
out
imul
add
or
pop
dec
push
push
adc
sub
inc
int
out
orl
xor
mov
cltd
sub
dec
fcomps
faddp
jbe
cmp
or
testl
inc
add
lret
imul
aaa
nop
cmp
adcl
notl
sub
test
es
inc
mov
in
cmp
cmp
mov
xchg
mov
push
adc
dec
inc
mov
pop
mov
sti
or
jp
nop
mov
sub
push
and
daa
rcr
fwait
mov
jp
sti
sbb
lods
push
mov
dec
adc
cmp
stos
in
repnz
ret
or
sub
inc
inc
adc
pop
outsb
sbb
fwait
out
sbb
mov
sub
dec
push
xchg
and
xchg
push
add
out
dec
loope
mov
ficoms
xor
jbe
cmp
shlb
lret
or
out
test
imul
sti
movq
ret
dec
cmp
adc
inc
mov
daa
add
out
mov
or
xchg
aam
sahf
mov
sti
jb
mov
pusha
addr16
jbe
xchg
mov
repz
inc
shl
test
enter
xor
imul
jbe
icebp
cmc
sbb
cmc
fldenv
in
xchg
fidivl
dec
jnp
and
fs
repnz
lahf
rcr
test
cmp
das
xor
out
cmp
jnp
inc
fisubs
mov
dec
das
fisubl
stos
out
push
pop
aaa
scas
xchg
stos
xor
cmp
divb
pop
subl
or
cmpb
dec
insb
ret
pop
movzbl
sbb
xchg
add
ret
add
aaa
cwtl
pop
insb
sub
sub
int
ja
xor
imul
out
push
jnp
mov
aaa
and
int
inc
xchg
movsl
sar
mov
hlt
sub
in
ret
dec
dec
ss
sbb
push
inc
pop
xchg
stos
mov
jb
movsl
fsubrs
out
ret
push
cli
inc
pop
es
mov
ljmp
mov
push
cmp
test
and
sahf
sbbl
nop
xor
pop
inc
fs
fiadds
cwtl
pop
cmp
mov
mov
adc
cmp
ja
or
and
repnz
fwait
das
jnp
test
xor
fwait
inc
xlat
pop
lock
inc
xor
or
dec
inc
xor
jb
mov
add
push
jno
out
add
mov
ss
vpaddb
imul
das
scas
dec
sahf
cwtl
mov
aad
fwait
imul
fwait
sbb
cmc
inc
jmp
fsubr
inc
cmp
cmpl
dec
push
inc
aaa
jno
add
lcall
clc
xor
xchg
sbb
mov
nop
cwtl
mov
jecxz
xor
and
dec
cmp
xchg
mov
fst
aad
fcmovnbe
rol
inc
add
loop
clc
sub
shlb
or
pop
dec
pop
shll
scas
mov
test
dec
lahf
mov
lods
fs
loope
rclb
loop
testb
mul
rcpps
pop
mov
or
push
xchg
js
inc
fidivrs
dec
sub
and
lds
cmpsl
mov
xor
rcrl
xchg
inc
push
repnz
repnz
fidivrl
inc
push
or
decl
loop
pop
out
xchg
inc
adc
ficomps
outsl
insb
mov
enter
cmc
fwait
jl
stos
fs
into
rcll
and
lock
jge
cmp
enter
dec
adc
int3
mov
insb
popf
adc
mov
push
dec
adc
leave
or
xor
mov
outsl
add
mov
pop
push
imulb
dec
add
int
popa
push
test
adc
daa
cwtl
sbb
test
xchg
adc
aam
jne
dec
inc
jb
loope
es
mov
inc
push
and
sub
and
push
shl
lods
dec
arpl
movsb
fldcw
mov
push
cmp
fwait
adc
in
push
lret
push
sub
push
std
sbb
jecxz
sahf
pop
mov
imul
xor
xchg
and
lods
sbb
clc
mov
repnz
lods
out
xor
enter
lahf
mov
mov
cltd
sbb
lea
cmpsb
xchg
daa
das
xlat
rol
fiaddl
xor
xchg
movsl
loopne
mov
jb
or
enter
fiaddl
sub
movb
or
jp
jle
das
push
fcoms
incl
int
popf
add
daa
inc
adc
imul
mov
aam
mov
iret
xchg
inc
stc
decb
jl
push
dec
scas
jl
push
dec
and
mov
ss
cmp
iret
loope
mov
or
or
or
jne
insb
mov
mov
lods
lret
pusha
and
mov
int3
xchg
dec
out
nop
rcrb
sbb
adc
cltd
jbe
setne
jle
testl
pop
clc
hlt
or
xor
push
stc
sbb
or
aas
shr
pop
jo
popf
push
mov
subl
aas
xor
and
lods
cmc
push
inc
inc
enter
shrl
inc
mov
pop
jns
loope
test
aaa
xor
pop
xor
xor
mov
mov
xchg
testb
rol
jo
jg
insb
push
into
scas
popf
and
les
aas
lahf
jno
and
sub
and
inc
add
dec
dec
xor
mov
or
jg
icebp
out
jmp
hlt
es
cwtl
shrb
sar
inc
cmp
mov
adc
test
sbb
std
mov
incb
mov
sarl
ret
xchg
ficompl
data16
mov
lds
adc
jo
jl
fistl
adc
je
inc
xchg
daa
in
sbbl
mov
adc
adc
add
incb
add
mov
popf
cmp
adc
hlt
push
sahf
fmuls
aad
lcall
mov
mov
mov
pop
jno
ficomps
adc
xchg
dec
jbe
cmp
repnz
lds
adc
test
mull
clc
jle
mov
loop
mov
adc
xchg
mov
lea
flds
push
pop
imul
into
adc
aad
ret
dec
xor
jmp
dec
mov
cltd
mov
sub
xor
dec
rcrl
test
test
ror
out
jne
or
pushf
pop
pop
mov
shll
in
jecxz
xor
arpl
or
mov
cld
dec
sub
sub
loop
out
xlat
idivb
addr16
nop
jno
dec
hlt
fcomps
push
fst
scas
dec
sarb
and
pop
shrl
adc
mov
bound
fidivrl
jae
mov
cmp
iret
xchg
add
nop
imulb
imul
nop
xor
push
insl
add
push
push
inc
xchg
inc
popa
mov
int3
jb
jp
shl
aam
je
sarb
pop
xchg
mov
mov
adc
dec
adcb
mov
fistps
das
mov
aad
mov
in
bound
mov
pop
mov
scas
jmp
stc
popl
nop
ljmp
sub
cmp
sti
xor
je,pt
xlat
into
stos
inc
fisttps
scas
push
scas
xchg
and
jge
mov
inc
jl
mov
xchg
mov
push
fadds
and
lcall
sbb
inc
push
inc
pop
mov
out
scas
xchg
shrb
mov
loopne
pop
sub
data16
xor
out
push
test
inc
pop
inc
js
xchg
into
mov
in
rcrl
and
lcall
sahf
or
mov
and
movsl
sahf
cli
call
out
mov
std
mov
loopne
mov
test
jg
mov
add
adc
sbb
mov
fstpl
push
push
sub
lock
in
pop
insb
and
ds
out
jbe
bound
xchg
mull
arpl
rcl
cwtl
aad
push
jge
sbb
jnp
out
jnp
mov
out
insb
insb
jbe
jg
es
push
mov
mov
xchg
add
aam
mov
dec
add
das
hlt
hlt
cld
fs
jnp
pop
fldt
xor
pop
push
pusha
repnz
mov
pop
addr16
pop
std
in
rclb
lods
xchg
adc
mov
shll
push
mov
jnp
adc
inc
xchg
stos
sub
addr16
out
add
xor
jle
lret
jb
jmp
pop
add
and
jo
xchg
aaa
cmp
sub
inc
arpl
add
sub
pop
push
cli
stos
pop
add
mov
nop
les
jnp
adc
mov
adc
jmp
lods
rcrb
imul
in
push
cmpsl
cmp
cmp
das
shll
jnp
das
addl
loopne
pop
mov
mov
adc
mov
movsb
dec
jnp
icebp
lcall
mov
clc
pop
push
push
in
movsb
and
xor
fcoml
mov
dec
in
push
mov
jno
pop
jl
cmc
adcl
mov
lcall
ja
repz
icebp
and
cmp
xor
pusha
je
lea
add
xchg
loope
inc
fnsave
mov
shlb
jno
pop
shll
and
sub
jmp
mov
imul
or
dec
pop
jne
jecxz
jl
cld
mov
sub
pop
neg
cmp
pop
cli
mov
push
xchg
add
call
mov
test
fisubrl
adc
cli
ss
or
fs
cwtl
push
insb
pop
inc
push
mov
out
mov
mov
jge
jns
or
sbb
jnp
inc
mov
mov
and
cmc
xchg
scas
stos
or
imul
ljmp
sbb
out
jnp
mov
mov
imul
and
jmp
inc
dec
jecxz
psadbw
mov
fldl
jle
cltd
and
mov
pop
divl
aam
sub
in
insb
xchg
das
mov
push
pushf
and
fisubrl
or
sbb
movsb
mov
dec
xchg
lea
xchg
ret
sub
movsl
jge
adc
cwtl
dec
cld
lcall
xor
sarl
arpl
sbb
aaa
mov
lret
fldcw
stos
lock
pop
sub
dec
ficompl
sahf
in
leave
lds
dec
jno
jns
sub
and
aad
push
or
aam
cmp
mov
fdivrl
aam
jnp
xor
mov
adc
fwait
into
inc
push
push
int3
mov
dec
xchg
push
loopne
sbb
repz
xor
ficomps
xchg
and
pop
inc
data16
add
clc
pop
mov
lods
outsl
fstps
and
xchg
or
movsb
push
xchg
push
lret
outsb
or
and
lods
nop
cld
outsb
jl
cld
sti
push
inc
cmp
ljmp
daa
or
out
outsl
repnz
stc
xor
jmp
jne
movl
jmp
and
cs
sbbb
ret
add
std
mov
int3
mov
mov
arpl
sti
in
sbb
incb
adc
or
push
adc
xchg
or
popa
lret
popa
sub
addl
int
ret
cmpsl
jl
jp
inc
scas
push
fsubrs
sbb
or
rcrl
and
xchg
in
test
sbb
mov
push
cmp
cmp
sub
fdiv
jmp
int
cmpsb
nop
cmc
xchg
popa
jae
cltd
les
jmp
adc
jnp
ja
mov
and
loop
add
addr16
sub
lcall
loope
insb
adc
ja
add
cwtl
adcl
in
in
in
shrl
ss
mov
add
fstp
sbb
lcall
sub
mov
test
push
lock
push
fadd
cmp
fucomp
and
sbb
fisubrl
test
daa
aad
pushf
adc
add
sbb
insl
mov
xor
mov
sbb
sahf
inc
in
mov
mov
cmp
jmp
in
into
pop
xor
sti
or
xor
mov
imulb
scas
pop
add
mov
cltd
sbbl
rol
test
inc
mov
fcmovu
push
sub
test
dec
inc
mov
test
std
pushf
push
dec
mov
rcrl
rcr
sbb
ret
push
inc
bound
push
pop
pop
pop
gs
es
mov
mov
rolb
inc
mov
push
add
and
and
xorb
fmuls
icebp
sbb
imul
je
addl
adc
inc
mov
aaa
dec
mov
lret
mov
out
ret
sbb
push
cltd
rolb
push
pop
btr
dec
xor
lahf
mov
xchg
into
add
mov
cmp
adc
dec
dec
sti
sbbl
sub
cltd
sbb
jl
mov
sbb
dec
imul
sub
out
cltd
xor
cmp
mov
lds
sub
out
xchg
test
jle
push
cmpb
jae
xchg
and
jmp
push
out
dec
popf
shl
push
sub
lods
jno
sahf
ljmp
rorl
fwait
in
mov
hlt
jbe
sub
mov
mov
js
mov
imul
fdivs
or
jno
clc
xor
inc
lret
lods
inc
mov
cltd
sub
pop
lds
inc
cmpsb
in
xchg
or
shll
out
push
mov
rcl
mov
jnp
rorb
popf
xor
or
and
dec
aaa
add
pop
push
nop
hlt
repz
xchg
pop
sbb
cmp
pop
bound
push
dec
leave
jb
gs
add
ret
hlt
lds
in
cli
inc
popf
repz
jmp
mov
xchg
out
fwait
repnz
pop
mov
mov
cmp
nop
push
pushf
xlat
mov
jno
int
adc
imul
je
scas
popa
push
sbb
mov
cmp
and
jns
adc
jle
iret
pop
jae
cmp
dec
stos
cld
jg
fdivs
xchg
xchg
shlb
jecxz
xchg
mov
jne
stos
xchg
dec
or
inc
push
jno
ds
add
sbb
ss
aaa
cmp
mov
or
push
stos
pop
test
std
in
lcall
dec
sbb
arpl
out
stos
mov
push
test
cmpsl
inc
test
std
jmp
push
sub
cltd
cmp
jns
aad
lea
cmp
lea
or
mov
jmp
jne
adc
pushf
sti
mov
adc
mov
test
mov
aam
and
testb
jecxz
into
inc
push
leave
ljmp
fildll
mov
lea
bound
vpaddd
xor
pusha
loope
adc
call
outsb
push
jecxz
shl
arpl
out
mov
or
daa
fisttpll
add
sbb
mov
inc
cli
arpl
mov
dec
fcoml
mov
pop
loope
pcmpeqw
outsl
dec
nop
adc
push
fdivl
push
xchg
bound
not
adc
pop
sub
loope
gs
xchg
inc
aas
xor
mull
xchg
mov
outsb
adc
jp
std
lods
xor
dec
adc
push
outsb
out
sti
ror
cmp
mov
sbb
not
test
call
insl
aad
jmp
jecxz
or
jle
movsl
jbe
bswap
jnp
sbb
push
sub
stos
xchg
jmp
xorl
adc
or
jb
or
in
xchg
in
movsb
lock
xchg
nop
jecxz
cltd
jmp
add
cs
cmp
leave
cmp
movsl
roll
xor
dec
pushf
out
aad
jl
add
xor
rcll
aam
adc
or
jecxz
sti
sub
mov
sbb
jl
sti
js
xorb
int3
mov
push
fstl
ret
insb
sub
dec
loope
ja
test
sti
movl
add
movsl
les
insl
insb
popa
lahf
sbb
push
inc
mov
xor
popa
mov
push
incb
add
jnp
mov
inc
xchg
in
rorb
inc
mov
lds
adc
jno
cmp
dec
test
sahf
shrl
fidivs
cmp
push
aad
xchg
push
adc
mov
dec
sahf
lea
pusha
repnz
imul
or
int3
repz
and
mov
mov
in
gs
inc
insb
xor
mov
outsl
mov
pop
sarb
addb
and
sub
jne
dec
aad
mov
or
mov
jecxz
insl
xchg
cmpsl
jle
bound
or
fstpl
movsb
dec
sbb
add
dec
jae
push
mov
cwtl
test
rcll
je
inc
mov
int3
mov
cmpsl
fstl
pop
xor
nop
shll
jp
mov
mov
cmp
lock
cmpsb
scas
shrb
jg
push
paddq
xchg
dec
enter
gs
xchg
jb
sub
push
fcmovu
mov
pop
mov
sub
sub
repnz
pop
int
cmp
int
repnz
loop
jecxz
in
popf
test
in
nop
mov
fcompl
ds
inc
popa
adc
push
jp
jae
push
bound
shrl
out
sub
shrb
add
dec
into
aad
push
jbe
cmpsl
cmp
sub
inc
pop
add
in
cltd
and
xchg
popf
int
add
out
es
inc
stos
push
lea
fcoms
cmpsb
in
popf
scas
or
dec
sbb
cli
pop
jo
or
hlt
lahf
in
xchg
lods
adc
push
cmp
pusha
ljmp
js
sbb
pop
xchg
xchg
adc
pusha
sar
test
jnp
lret
jg
xchg
jmp
lret
jmp
pushf
or
pusha
cmp
scas
add
insb
out
dec
jle
mov
dec
add
xor
jnp
out
je
ret
int
push
xchg
insl
mov
and
nop/reserved
adc
ds
mov
sahf
daa
xchg
xchg
push
inc
fsubl
push
in
fwait
pop
jae
orl
scas
xchg
and
jge
xchg
iret
sti
dec
mov
push
xchg
jbe
push
psllq
xchg
add
pop
adc
leave
adc
add
flds
sub
add
and
roll
adcb
and
sub
lahf
ja
movsl
lcall
scas
lods
add
call
dec
dec
test
xchg
mov
pop
dec
inc
fmulp
dec
ss
push
outsl
mov
movsb
insb
arpl
fdivrl
decl
cwtl
push
cmp
dec
sbb
inc
scas
pop
jecxz
repnz
adc
fsubrl
addr16
sbb
fs
sti
mov
jmp
je
sub
or
and
sahf
les
mov
pop
in
pop
mov
mov
int
adc
lahf
lret
sbb
add
cwtl
jp
mov
jns
inc
repnz
sbb
xchg
fistpl
adc
stos
nop
daa
or
outsl
stos
stc
pop
fidivs
add
sub
add
and
loop
xchg
ds
sti
cmpl
mov
roll
clc
test
sub
or
sbb
mov
mov
icebp
into
popa
push
mov
sbb
dec
or
jp
mov
into
and
add
jmp
fnstcw
add
jge
jb
push
add
pop
push
sbb
insl
xchg
fnstsw
jecxz
fs
mov
add
nop
gs
cmc
clc
lahf
imul
xchg
mov
sti
jle
sub
aaa
xchg
les
fisubrs
jae
cmp
mov
add
mov
xchg
xor
and
leave
xor
mov
nop
data16
push
scas
call
dec
jae
add
gs
add
add
xor
adc
xchg
xchg
cmpsl
aaa
or
sti
mov
stc
std
rcrb
add
mov
mov
in
enter
cmpb
sbb
je
push
xchg
rcrl
jno
dec
es
xchg
rolb
lea
gs
sbb
pushf
adc
adc
dec
adc
xchg
sti
lcall
sbb
xchg
push
inc
fucomi
and
mov
xchg
orl
and
mov
icebp
sti
clc
daa
les
and
push
cmp
mov
mov
cwtl
or
imul
xor
pushf
pushf
scas
and
rcrb
ret
popa
imul
jmp
jnp
bound
xchg
inc
or
je
dec
mov
mov
adc
push
lds
mov
aam
dec
inc
mul
pop
sbb
adc
out
push
push
cld
mov
clc
imulb
xchg
sti
add
aas
adc
add
icebp
mov
arpl
testl
push
cmpsb
fs
pop
hlt
lds
cmp
mov
mov
mov
test
std
outsb
and
sarb
dec
push
mov
scas
mov
mov
add
and
and
daa
or
mov
or
sub
pop
mov
xchg
jle
insl
pop
add
inc
popa
fdivs
mov
push
dec
inc
sbbl
dec
aaa
in
imul
ficomps
stos
ja
pop
leave
test
add
jmp
in
xchg
test
add
call
gs
stc
push
pop
movsb
pushf
pop
bound
push
test
out
dec
and
idiv
out
cmovge
mov
pop
int3
inc
jp
mov
enter
sahf
in
movsl
pushf
movsb
or
cmp
mov
push
xchg
faddl
xchg
cmp
pushf
push
push
inc
ss
ja
pop
xchg
xchg
xchg
inc
jmp
push
and
mov
loop
inc
jp
or
inc
jge
shlb
call
mov
int
pop
cmp
outsb
sub
sbb
add
fs
fistpl
das
mov
inc
xchg
inc
test
pusha
xor
shlb
jp
scas
pop
into
push
mov
out
mov
mov
lds
ds
addb
or
cmc
shlb
rcll
add
stos
incb
out
fwait
lea
inc
dec
fidivrs
mov
jl
xlat
sub
mov
addr16
lods
push
es
out
icebp
cmp
hlt
leave
pushf
stc
lods
lds
add
jmp
test
das
jno
lock
testl
dec
sbb
lea
or
sub
xchg
pop
add
mov
lcall
test
and
cmp
pop
movsb
fisubl
jno
icebp
lret
test
cli
popa
or
out
shrl
mov
cld
mov
test
jecxz,pt
inc
mov
cwtl
jb
mov
adc
mov
sahf
xchg
in
xchg
fnsave
imul
xchg
fnstcw
test
cli
adc
jg
shlb
out
fadds
rorl
or
in
mov
mov
ret
roll
mov
and
pop
lahf
mov
aad
or
aam
es
jnp
pop
pop
push
mov
scas
mov
xor
inc
pop
dec
imul
imul
lea
shll
push
arpl
adc
rol
push
mov
push
andl
test
sub
add
out
sbbb
xor
pop
test
out
popf
lods
or
xor
push
or
push
fldlg2
inc
js
cltd
mov
in
popa
sub
shlb
cmp
add
or
xchg
inc
inc
jnp
mov
xor
lds
or
or
dec
das
rolb
push
xlat
mov
jge
les
sbb
push
addr16
das
xchg
lods
dec
es
add
gs
xor
mov
shlb
mov
mov
sub
std
sbb
sahf
jp
pop
xor
loope
pop
pop
pop
mov
jo
addr16
lret
mov
aam
mov
cmp
aaa
or
mov
sbb
cmp
dec
lret
enter
in
mov
daa
faddp
call
aas
outsl
arpl
movsb
das
std
mov
popf
orb
out
in
fldcw
inc
and
xchg
or
pop
fs
movsb
sbb
push
xchg
cli
sbb
subb
dec
inc
mov
jl
cld
inc
mov
dec
dec
adc
pop
syscall
testb
lret
push
outsb
cmp
popf
jns
add
sbb
pop
imul
cwtl
push
cmp
icebp
pop
pop
jg
xchg
insl
insl
dec
bound
push
add
cld
sbb
inc
pop
stos
push
pop
xchg
out
rorl
pop
into
mov
fisubrl
xor
add
push
hlt
hlt
out
sahf
or
adc
or
or
clc
mov
or
daa
xorl
add
test
inc
frstor
arpl
and
push
pop
pushw
or
iret
or
xchg
mov
fimull
pop
dec
push
push
int3
jmp
mov
movsl
test
vcvtsi2sdl
and
stos
mov
scas
ret
pop
add
cs
cmpsb
mov
dec
mov
outsl
imul
sub
repnz
scas
inc
das
xorl
add
fucomi
ja
cs
enter
int
ds
in
xchg
icebp
mov
sbb
add
lods
lret
mov
push
and
rorb
cmpsl
inc
jecxz
or
jb
aad
xchg
aam
dec
fs
clc
push
push
sub
sub
pushf
or
lahf
imul
rcrl
fsubl
cmp
inc
test
xor
sub
add
xchg
add
shrl
popa
cwtl
leave
xchg
adc
or
in
mov
inc
divps
shll
inc
inc
jnp
xor
stos
cld
sti
inc
sbb
pusha
divl
dec
inc
ret
lret
int
pop
jb
cs
push
ret
inc
mov
mov
popw
xor
lret
mov
shll
ret
popf
movsb
mov
dec
add
ror
push
push
shrb
daa
imul
lret
ja
movsl
jecxz
ffree
mov
mov
fistpl
mov
inc
push
inc
cli
lret
jge
int
mov
dec
push
or
fbld
enter
jns
adc
movsb
lret
dec
jo
pushf
mov
or
mov
stos
mov
outsl
outsb
xorl
lahf
sbb
sub
insb
js
mov
mov
repnz
dec
andb
dec
ret
push
test
or
call
sti
insl
jbe
mov
cmova
movsb
lahf
scas
insl
xor
scas
xchg
movsl
pusha
dec
jge
dec
cmp
xchg
mov
push
addb
lcall
ret
mov
xor
adcl
push
loope
ds
fbstp
jecxz
sbb
lods
fwait
cwtl
out
mov
add
cmpl
push
call
out
sub
lret
pop
pop
imul
jne
or
xchg
icebp
push
fidivl
xlat
xor
ss
jae
aam
std
mov
cld
movb
loopne
mov
popl
pop
clc
push
sub
dec
cltd
mov
clc
xor
push
adc
sbb
int3
push
mov
mov
movsl
into
addr16
cmp
iret
int3
stos
sbb
sahf
push
gs
mov
imul
mov
jb
push
in
nop
or
inc
clc
je
dec
or
adc
pop
daa
scas
cmp
fnstenv
cmp
movsl
fstps
das
fbstp
test
push
call
add
adc
xor
pop
mov
leave
xor
mov
in
jp
xor
push
int3
das
mov
jecxz
aam
xchg
fsubr
add
mov
cmp
and
xchg
lock
sti
mov
inc
push
push
mov
push
dec
jno
dec
mov
jne
mov
in
aam
std
in
mov
push
scas
mov
stos
clc
dec
mov
mov
mov
pusha
push
dec
push
nop
dec
xor
data16
iret
jno
insl
mov
jae
fiaddl
pop
mov
sbb
daa
dec
pop
cwtl
and
int
test
xlat
stos
jmp
inc
pushf
mov
jle
enter
into
aaa
inc
cmp
jbe
jle
or
sub
loop
jp
add
gs
mov
xchg
fcomp
mov
ja
pop
xor
mov
orps
gs
sti
ljmp
fwait
xchg
xchg
dec
int
fisubs
jecxz
sbb
jae
xor
cli
mov
cs
test
adc
push
mov
xchg
adc
mov
test
mov
pop
nop
lea
pop
sbb
int3
sti
js
dec
lods
pop
mov
xchg
pop
adc
push
push
xchg
lsl
cmp
inc
test
inc
pop
iret
lods
lods
jmp
cmp
test
or
xor
jmp
testl
xor
iret
xlat
clc
push
pop
sbb
cmp
xor
and
test
jae
adc
xchg
cmp
pop
or
clc
pop
icebp
adc
leave
mov
jp
arpl
mov
lcallw
push
xchg
imul
xchg
stos
sub
push
sahf
insl
inc
and
jnp
push
in
inc
adc
or
movsl
pop
clc
pop
cmp
imul
cmp
je
xchg
jle
fmuls
jp
clc
mov
lret
or
xor
cltd
mov
sbb
outsl
dec
inc
inc
push
fs
std
imul
dec
push
jno
mov
ljmp
aad
fcmovb
adc
rcr
lret
arpl
mov
in
ds
xor
and
xor
outsb
mov
icebp
insb
pop
sub
sub
std
xchg
push
repnz
sarl
adc
xor
push
push
xor
loopne
mov
dec
sti
aas
add
ja
psllw
add
jle
test
fucomi
xor
pop
dec
loope
andb
jle
dec
sbb
repz
in
jle
lods
inc
cld
xchg
pop
push
push
repz
add
dec
scas
cld
in
push
lea
repz
xor
ljmp
out
mov
mov
add
lret
fidivs
pop
pop
mov
pop
repz
fwait
sti
push
aad
adcb
clc
out
or
filds
lods
fst
jmp
and
out
sub
ja
fmuls
mov
or
cmp
mov
dec
out
les
aas
jb
inc
dec
and
xchg
bound
jmp
dec
lods
addb
repz
outsb
cld
xor
cmp
mov
hlt
cmc
call
xchg
fistl
xlat
shr
push
inc
add
jb
pop
pop
insb
and
cmc
jb
pop
jnp
pop
sbb
sti
pop
shrb
leave
mov
jbe
fistps
pushf
jle
idiv
add
and
jmp
cltd
xchg
outsl
addb
pop
lret
lea
repnz
clc
test
js
fs
pop
sbb
mov
xchg
in
movsl
or
dec
dec
inc
cltd
bound
xchg
pop
and
jge
xchg
push
jmp
mov
insb
mov
stos
xchg
adc
lods
aad
test
insl
fadd
sub
outsb
out
fidivrs
cmp
scas
je
dec
xchg
ss
iret
cli
fldt
pop
sbb
or
outsb
dec
push
push
addb
mov
mov
scas
repnz
pop
sub
iret
pusha
lea
and
imul
int3
lea
jge
mov
repz
int
mov
jnp
mov
test
mov
dec
imul
jnp
fs
mov
lds
jge
xor
pop
cmp
add
push
es
mov
lret
jle
jl
dec
add
lods
jl
adc
mov
mov
inc
add
imul
pop
and
dec
rolb
lret
push
testb
and
pop
lret
mov
add
pop
xchg
call
jle
and
add
add
stc
adcb
cwtl
loop
add
push
push
andl
mov
xor
filds
in
popa
clc
fs
lcall
fdivr
jnp
jne
test
mov
pop
mov
mov
sub
inc
push
popa
jecxz
dec
inc
pop
sub
jns
popf
mov
add
dec
outsb
push
xor
push
repnz
dec
hlt
repz
dec
and
jb
mov
clc
dec
mov
sub
lea
sbb
pop
pushf
and
pop
mov
lcall
dec
jno
mov
add
jl
adc
lret
dec
lods
testb
lret
test
mov
inc
popa
jns
test
testl
je
cmp
leave
add
cs
add
mov
dec
repz
pop
push
push
cld
xor
xor
outsb
fs
in
inc
sahf
inc
insb
pop
push
dec
fmulp
sub
and
xor
push
push
adc
xchg
fwait
mov
mov
nop
bound
jp
in
push
mov
cmp
mov
movsb
shlb
xchg
imul
pop
popa
ret
push
imul
roll
leave
sbb
adc
dec
cmp
sub
aaa
jnp
mov
sbb
xchg
mov
xchg
pop
sub
out
movsb
mov
cmp
pushf
xchg
push
add
jno
inc
loope
aas
pop
or
xchg
bswap
xor
dec
pop
movsb
imul
add
adc
loope
sbb
push
mov
movsl
cmpsl
fisttps
add
mov
mov
xor
jno
push
data16
pop
insb
cmc
fmull
cltd
aaa
call
cmp
imul
sub
xor
lods
les
xor
xchg
faddl
adc
sbb
jl
cli
fdivrs
nop
xchg
jp
xor
into
jno
xlat
aas
imul
dec
sub
jnp
icebp
movsb
in
jmp
orl
mov
enter
sahf
xchg
pop
fnstsw
cltd
jl
mov
outsb
xchg
scas
jecxz
add
scas
leave
cmpsb
and
adcl
push
mov
pop
xor
fs
mov
jecxz
adc
mov
andb
cltd
fwait
aad
mov
call
fmuls
sbb
xor
mov
enter
aas
xchg
loop
push
add
push
cli
sar
inc
arpl
cmc
adc
xchg
or
ja
add
repnz
inc
cmp
mov
dec
test
and
mov
lret
andb
rorb
movsb
jge
repz
in
mov
jae
das
xchg
xchg
arpl
rorl
stc
ret
xor
scas
subb
xor
fld
inc
rorb
add
aad
neg
xchg
inc
stos
push
lods
jo
int
out
jl
push
stc
jae
dec
and
sub
jp
or
leave
lds
jmp
fcomps
ret
lcall
mov
and
out
leave
stos
push
fimull
cs
mov
mov
outsb
add
adc
shrb
bound
dec
int
push
repz
xchg
popa
aaa
rcl
movsl
arpl
ja
scas
adc
test
and
test
xchg
push
pop
dec
jne
xchg
aam
dec
xchg
xchg
xor
pushf
pushf
mov
jecxz
fcoms
add
pslld
ret
xor
mov
into
xchg
cmp
aam
int3
jb
add
in
mov
xor
mov
pushf
add
mov
arpl
imul
xchg
int
lea
and
push
mov
push
in
popa
inc
sbb
mov
sub
jns
sti
int3
jge
dec
sbb
mov
pop
cmpsb
lock
pop
cmc
imul
mov
cmp
fs
mov
dec
xor
sub
adc
and
xchg
lcall
addr16
or
mov
mov
inc
repnz
or
jns
jg
dec
cmp
fbstp
stc
aad
insl
fsubrl
xor
sbb
fwait
push
mov
add
cmp
les
and
stos
mov
subb
aas
cmp
cmp
inc
and
jmp
repz
mov
cmp
mov
or
dec
jo
fwait
movsb
addr16
loope
add
lods
int
mov
and
fstl
sub
data16
jbe
dec
out
xchg
cmpsl
lret
out
sub
jp
sbb
cmp
jb
pop
sbbb
repnz
jb
fcomps
inc
xor
push
les
shrb
test
xor
fcompl
push
pop
pop
sbb
fimull
aam
je
mov
mov
sti
and
cs
outsb
mov
das
or
sbb
jecxz
or
push
fldt
or
sub
sub
mov
jo
shll
xor
shrl
out
xchg
push
gs
imul
mov
add
xor
scas
and
orb
sbbl
cli
mov
or
movsl
cmp
adc
je
pop
int
aam
and
roll
lds
xchg
addb
fprem1
jle
hlt
cvtpi2ps
ror
xor
push
jno
dec
sbb
mov
cli
outsl
loopne
jne
test
loopne
jle
and
cmp
jge
jno
cmp
mov
lods
jmp
lret
jne
mov
xchg
xor
sub
mov
in
inc
sbb
movsb
push
fcoml
adc
xchg
dec
push
push
sbb
sub
lret
cmp
repnz
fstps
or
xchg
mov
shll
xor
in
stos
test
aaa
movsb
pop
jnp
divl
js
sbb
sub
int
sub
xchg
cwtl
pusha
in
push
xor
mov
jmp
aas
xor
and
fidivl
lret
sub
mov
cltd
push
jl
dec
mov
push
ja
insl
jecxz
pop
pop
leave
fs
jg
and
or
out
pusha
push
inc
add
daa
paddsb
or
rcrb
add
in
mov
test
push
insl
outsb
push
sbb
ret
adc
mov
int
int
bound
push
mov
xor
mov
adcl
in
xchg
fistpll
sub
and
in
mov
cmp
push
pop
aad
ljmp
test
shl
xchg
mov
or
mov
add
iret
and
adc
ds
shll
nop
lea
loop
cmp
das
dec
pop
inc
cs
je
insb
cmp
repnz
ds
cli
scas
cmc
test
in
inc
jecxz
mov
xor
add
sub
jecxz
repnz
mov
loope
icebp
or
scas
icebp
jle
xlat
pop
lcall
cmp
mov
mov
rorb
jbe
mov
jno
adc
adcb
cld
mov
aaa
mov
xor
fiadds
rcrb
fs
sub
fildl
insb
scas
pop
pushf
outsl
std
mov
std
xor
out
inc
enter
mov
xor
mov
pop
clc
adc
push
or
ljmp
jg
iret
cli
fwait
adc
fldl
aaa
outsb
es
stos
ds
out
xor
mov
fmul
xchg
lahf
inc
push
mov
mov
or
arpl
mov
out
std
push
cmp
gs
jle
loop
int3
cmp
addl
mov
xor
enter
outsb
repz
push
call
loop
jle
inc
nop
cld
xchg
in
pop
sahf
jmp
enter
scas
xchg
sti
jge
mov
lcall
add
mov
pop
arpl
mov
dec
mov
mov
sbb
cmpsb
outsl
dec
out
shrl
push
jae
test
mov
pop
data16
inc
xor
sub
imul
outsl
and
push
cmpsb
sub
ret
call
andb
adc
add
mov
xor
push
gs
mov
iret
adc
mov
sub
ds
rorb
bound
mov
jecxz
sub
dec
mov
push
aad
mov
aam
in
xor
mov
mov
push
xor
cmp
xchg
cmc
mov
cltd
adc
nop
adc
mov
clc
insl
mov
imul
jecxz
mov
mov
and
enter
jb
mov
jno
jmp
push
pop
int3
imul
pop
cwtl
xchg
pushf
aad
mov
rep
dec
rcrb
jnp
add
cli
ljmp
sti
jbe
mov
repnz
add
or
popa
sbb
push
mov
sbb
and
jae
pop
popf
add
sub
xor
cmp
cwtl
fisubs
repnz
push
movsl
add
xchg
cmp
sub
outsl
popf
fstpt
sbb
fcoms
aas
xchg
push
pop
subl
or
xchg
loope
and
mov
xchg
mov
inc
mov
mov
push
jl
pop
xor
aas
xchg
adc
add
push
jbe
fildl
das
lods
xor
mov
imul
mov
sub
pop
mov
in
sahf
push
shll
add
xchg
cld
sbb
adc
test
inc
cmpsl
push
fimull
fnstenv
out
sub
adc
push
pop
ds
adc
or
sub
aaa
sub
popf
mov
add
outsl
ss
std
outsb
insl
lods
aad
adc
mov
mov
iret
lods
mov
lea
sbbb
xor
jge
out
lahf
xlat
xchg
daa
inc
fs
adc
jp
push
mov
call
cmp
sub
mov
jne
sbb
mov
dec
sbb
mov
mov
cmpsb
ret
or
jns
xor
mov
sbb
pop
pop
leave
push
adc
xchg
cld
fs
push
pop
movsl
push
loope
sbb
cmc
xor
cmpsl
ds
in
pmuludq
add
xor
pushf
scas
lret
stos
xchg
int3
lea
xchg
xor
outsb
mov
pop
jno
dec
popl
lret
in
lcall
add
cmp
pop
adc
fldt
cmpsl
ss
adc
dec
adcb
pop
push
out
ret
mov
xor
add
sbb
gs
or
out
fnsave
inc
mov
pop
sub
mul
push
cli
xorl
xor
add
ds
and
adc
mov
fidivs
das
fdiv
and
popa
xchg
pop
sub
push
sub
sbb
dec
dec
sarb
lahf
push
xorb
xor
lods
movsl
xor
fcmovnb
xchg
add
lea
xlat
pop
movsb
add
mov
pop
imul
jno
aam
xlat
push
mov
int
stos
in
sub
inc
or
mov
into
or
add
sub
std
dec
xlat
push
icebp
mov
pop
adc
adc
sbb
pusha
and
nop
mov
xchg
add
add
jp
bound
pop
add
fldl
inc
mov
and
nop
sbb
iret
pop
xor
add
dec
adc
mov
into
xor
loop
mov
add
ja
in
xchg
in
fwait
leave
pop
test
xchg
aam
or
cltd
insb
adc
lods
insb
roll
and
addl
pop
movsb
push
pop
and
pop
xchg
stos
xor
fnstsw
sub
fldenv
cmp
scas
imul
add
stc
iret
js
sti
lock
push
mov
fs
pop
lcall
mov
jge
addr16
ljmp
js
push
or
push
add
cwtl
outsl
mov
inc
call
popf
scas
push
out
call
outsl
sub
jl
in
mov
cs
stos
push
lods
or
stc
sahf
out
push
and
data16
lcall
xchg
ss
jae
jne
pop
adc
aad
mov
pop
dec
push
xchg
nop
adc
mov
hlt
pop
or
scas
and
mov
push
xor
es
and
dec
lock
test
lcall
push
leave
gs
add
lret
cwtl
sub
mov
mov
into
push
sub
fcomps
nop
sub
inc
dec
je
js
adc
stos
mov
jbe
fcompl
cmpb
mov
xor
in
daa
mov
icebp
pop
sbb
imul
lahf
insb
orl
pop
lods
jp
pop
fsubrs
and
lea
adc
cwtl
adc
divb
or
mov
imul
outsl
mov
mov
loope
cmpsb
jg
add
jmp
daa
sub
dec
xor
mov
call
sub
or
data16
cmpsl
fmull
cmpsl
scas
adc
or
fdiv
pop
jp
dec
mov
jbe
pop
xchg
js
mov
test
push
iret
dec
push
push
push
ss
ret
mov
and
pusha
push
aaa
add
rcl
dec
and
mov
xor
shr
test
out
push
sbb
hlt
pop
cld
sub
or
clc
lcall
imul
bound
mov
push
cltd
inc
jp,pt
and
sbb
push
sub
jb
repz
pop
nop
xchg
repz
mov
ja
data16
mov
or
into
cmp
or
push
aaa
jmp
or
movsl
jle
dec
rclb
cwtl
stc
sarb
ret
repz
mov
lods
bnd
or
pop
cmc
pop
mov
push
inc
xchg
mov
clc
push
jmp
jmp
icebp
dec
inc
jge
mov
sarb
jl
sub
rcll
push
sub
adc
jb
in
shll
rolb
loopne
ds
push
pop
fdiv
rcrl
pop
fwait
cli
mov
jg
daa
arpl
pusha
or
std
and
add
adc
lods
out
das
setnp
std
lret
mov
mov
pusha
popf
add
aad
mov
push
xor
push
cmpsl
subl
adc
sub
or
pop
mov
mov
ss
ljmp
ret
adc
ljmp
repz
push
loopne
cmpsl
imul
jns
adc
mov
or
in
xchg
mov
push
mov
sahf
inc
jge
icebp
push
fmulp
incl
jb
and
mov
pop
insb
sub
sbb
mov
fildl
popf
loop
das
mov
pop
add
dec
cld
dec
xor
sub
addr16
daa
imul
dec
scas
or
imul
aas
mov
add
idivb
jbe
and
cmp
rcrl
inc
repz
pop
mov
pop
and
popf
int
movsl
cwtl
into
adc
cld
es
adc
pop
mov
adc
jbe
stc
xchg
out
je
xor
pop
nop
add
lret
mov
mov
mov
sbb
dec
aaa
sub
stos
cmpsl
lahf
push
jp
and
jg
and
lea
jg
gs
pop
push
stos
jmp
fisubrl
mov
outsb
out
outsb
pop
fwait
adc
xor
aaa
fdivrl
sub
shrb
mov
into
or
xchg
sub
test
adc
lret
adc
adc
xor
jb
hlt
jmp
sbb
inc
sahf
dec
aas
jecxz
mov
xor
fchs
xor
repnz
xlat
and
in
pop
xor
stos
nop
and
lods
imul
insb
xchg
mov
jo
js
push
jno
xchg
or
hlt
cmp
popl
cmpsb
pop
jle
popa
mov
jl
sub
sbb
sub
adc
bnd
nop
fists
push
sbb
lret
adc
mov
loopne
mov
sub
mov
mov
push
add
test
dec
pop
inc
jecxz
mov
mov
into
pop
out
outsb
and
daa
pusha
jne
mov
mov
sarb
stc
test
lahf
es
addr16
push
add
inc
rcl
loopne
lcall
mov
aam
rcr
pop
lret
into
inc
xlat
iret
out
mov
cmp
mov
cwtl
or
adc
mov
xor
pop
cli
movsb
sahf
push
push
xor
sar
mov
aam
cltd
add
cmp
inc
adc
fwait
mov
popf
ss
adc
sub
dec
push
lret
push
into
jge
cli
mov
lds
dec
lods
mov
int
mov
mov
mov
dec
iret
pop
adc
jnp
and
scas
jns
sub
pop
jo
or
cld
fs
pusha
mov
inc
push
cwtl
mov
and
scas
mov
jo
lret
adc
ljmp
cmc
sub
mov
mov
sbb
mov
push
imul
pop
rolb
inc
adc
xchg
mov
or
divl
mov
outsl
out
fiaddl
dec
insl
push
inc
pop
sbb
pop
subl
cs
jae
mov
mov
lods
mov
fadds
inc
sti
bound
mov
adc
xchg
jg
xchg
int3
adc
mov
add
lahf
ljmp
insb
in
jne
cmp
popf
neg
mov
adc
mov
or
inc
cmpsb
repz
fnsave
push
inc
adc
call
xchg
es
cmp
pusha
sti
adcl
cmp
out
sbb
push
xor
push
das
push
cltd
cmp
mov
lcall
int3
addr16
cli
push
in
adc
pop
mov
into
leave
punpckhdq
lods
inc
in
aad
bound
int
jg
cwtl
rolb
fdivs
sbb
mov
push
rorl
nop
mov
mov
or
inc
pop
lds
xor
nop
adc
xchg
xor
lea
cmp
out
call
in
sub
mov
push
insb
shll
in
xchg
daa
insb
push
test
xchg
sub
mov
loopne
jne
mov
jmp
gs
insl
jae
sub
aam
les
push
aad
add
mov
movsb
mov
add
pop
icebp
xchg
shlb
pop
or
mov
sbb
shrb
and
pushf
pop
adc
aas
xchg
fwait
dec
xchg
and
add
dec
test
jne
popf
jecxz
mov
mov
jecxz
xor
push
pop
adc
cmp
js
ftst
dec
sub
or
mov
repz
sbbb
pop
push
les
popa
xor
sbb
popa
call
sti
inc
test
and
pop
or
sbb
je
ljmp
dec
jmp
jne
lods
lret
mov
jmp
cltd
mov
adc
movsb
in
xor
das
adc
rorl
sub
ret
fs
imul
std
stos
mov
and
sbbb
daa
lods
jmp
adc
dec
dec
mov
push
pop
fldt
push
arpl
xchg
fildl
lret
adc
mov
and
loope
lahf
and
xor
mov
notb
mov
xchg
bnd
aas
pop
fs
aaa
scas
test
out
adc
mov
xor
mov
mov
into
xor
dec
adc
pop
jbe,pt
sbb
mov
cmp
dec
jecxz
fcompl
out
cli
cmp
inc
test
add
stc
imul
js
push
stos
sub
nop
push
adc
jnp
je
adc
out
hlt
mov
test
in
xor
ret
loope
pop
aad
fcomps
push
add
stos
aam
pop
sub
pop
pushf
and
cmp
std
jle
push
mov
mov
mov
sub
dec
orl
leave
jge
ss
add
lcall
jl
push
pop
addr16
addr16
movsl
inc
cmpsb
cli
xchg
les
clc
inc
mov
adc
fsubrl
shll
dec
pop
add
stos
pushf
js
test
mov
fucomi
or
and
inc
or
mov
pop
loope
roll
jno
cmp
data16
xor
cmp
ja
movsl
fs
mov
aas
xchg
mov
adc
jmp
and
pusha
xchg
mov
or
pusha
sti
loopne
mov
out
test
jge,pt
iret
test
pushf
orl
jae
subl
loopne
shlb
xchg
rorl
xor
cmp
inc
in
pop
lret
in
cmpsl
push
adc
out
popf
xchg
jo
adc
mov
mov
divl
mov
mov
pop
and
rep
jb
dec
add
sbb
cmp
popf
xor
bound
and
xchg
push
xchg
pop
add
pop
sub
mov
movb
jle
push
gs
mov
jno
lods
ss
fstl
xor
addr16
and
and
jp
aad
dec
in
cwtl
out
cmpsb
xlat
pop
mov
shrl
dec
xor
mov
mov
outsl
push
in
mov
pop
in
add
dec
ja
icebp
dec
int3
jle
sbb
popa
inc
ss
pop
adc
pop
mov
xor
mov
cmp
sbb
loop
loop
xchg
mov
push
ljmp
sbb
shlb
and
outsb
in
mov
lcall
fcomp
test
push
cmp
and
jo
xor
repnz
mov
mov
jnp
cltd
imul
jmp
pop
imul
test
popa
sub
pop
mov
xor
addr16
cmp
pop
mov
push
cltd
mov
test
mov
push
pusha
pusha
insb
out
inc
mov
in
mov
cmp
addl
stos
push
loope
push
jns
fists
adc
addr16
lods
imul
xchg
cmc
aaa
out
pop
ret
fldt
leave
add
push
or
mov
call
mov
mov
sarb
xlat
jns
cmp
pop
movsl
and
movsl
pop
adc
and
xchg
rclb
js
xor
in
adc
sub
pop
nop
shll
mov
mov
mov
sbb
add
lret
xchg
jne
mov
mov
sub
inc
fwait
mov
aam
inc
or
in
je
adc
adc
ds
cmp
xchg
jbe
xor
jge
in
pop
fs
cmp
pop
pop
sahf
cwtl
sbb
mov
pop
flds
sbb
fiadds
dec
shll
loope
js
push
add
subl
mov
inc
or
dec
xchg
pop
fisubs
sbb
adc
cmp
jns
or
pop
xchg
orl
in
dec
sub
cmp
pop
in
mov
push
aas
sbb
mov
mov
lret
roll
xchg
mov
stc
ret
ljmp
fsts
hlt
jge
psubusb
lret
push
cmpsb
pop
jnp
outsl
inc
lods
or
lods
push
inc
inc
and
fimull
pop
mov
mov
xor
dec
sub
gs
xor
sbb
mov
push
inc
mov
movd
call
push
les
mov
rolb
cwtl
inc
sarb
sahf
scas
ljmp
call
mov
dec
mov
ficompl
mov
inc
roll
adc
movsl
or
xlat
cmc
int
xchg
sti
test
test
movsl
scas
cltd
aam
cmp
jno
int
out
jle
mov
data16
ja
mov
xor
xchg
pop
sub
cmp
aaa
leave
pop
lret
lret
sbb
push
ljmp
push
clc
test
dec
cmp
js
std
xchg
xchg
xor
xchg
pop
mov
mov
mov
jb
mov
ja
mov
test
gs
es
popf
mov
dec
sbb
push
mov
lret
cltd
push
les
xor
pop
jbe
inc
sbb
pushl
cmp
ret
pop
jne
dec
sub
sbb
fucom
jecxz
mov
dec
scas
cmpsl
push
pusha
rcl
bound
adc
xchg
mov
mov
mov
jae
mov
pusha
pop
fcoml
xor
or
fnstsw
outsb
mov
stos
popa
pop
test
aas
dec
sbb
mov
test
popf
movsl
fisttpll
pop
mov
mov
mov
lods
add
xor
or
ss
jmp
movsb
pop
and
out
push
lock
mov
call
cltd
aam
inc
ss
out
cmp
pop
xor
dec
enter
pop
movb
adc
js
sbb
xor
xchg
mov
fmuls
push
push
imul
outsb
or
pop
pushf
and
cs
jb
cmp
clc
mov
cmp
imul
pop
insb
push
popa
pop
mov
subl
inc
cmpsb
call
jne
fcomps
mov
shrl
leave
adc
popf
iret
dec
testb
leave
cltd
xchg
rorl
push
xor
add
and
sub
jecxz
lods
ficoml
mov
ret
es
repnz
movsl
pop
scas
and
scas
fstpt
jp
lret
or
test
mov
add
xor
repnz
mov
inc
jb
jns
and
aam
lods
sahf
xor
xchg
cmpsl
test
mov
enter
push
xchg
mov
ljmp
mov
fisttpl
and
and
mov
in
xchg
push
xor
xchg
adc
rcll
arpl
scas
lahf
adc
loope
pop
jp
loopne
loop
adc
ss
and
lods
xlat
cmp
mov
push
push
lock
push
xor
in
add
sbb
add
dec
xor
popl
xlat
jl
fwait
in
iret
jae
jno
test
adc
push
stc
fimull
pop
push
mov
adc
mov
add
movsl
das
and
ror
jae
cltd
lea
jge
xchg
movsl
imul
mov
fucomip
aad
in
ss
mov
adc
push
mov
in
lds
subb
fst
dec
call
cmpsl
sbb
jmp
fsts
xchg
mov
mov
aad
or
and
dec
jae
lahf
enter
inc
popa
xor
xchg
cmp
jl,pt
sub
fxtract
testl
hlt
mov
xor
add
xchg
cmp
clts
xchg
adc
mov
jae
cmp
cmpsl
xchg
mov
dec
inc
jno
or
rorb
lcall
push
repz
adc
imul
mov
imul
cmp
pop
sub
sbbl
sahf
dec
lahf
cmpsb
jno
sub
ret
cmp
sub
loop
nop
outsl
mov
xchg
pop
xorb
push
daa
mov
test
insl
rcl
pop
push
sub
fcmove
nop
mov
testl
mov
pop
sbb
inc
xchg
shlb
lods
outsl
loop
lods
cmp
mov
sub
adc
jle
vlddqu
mov
aad
ja
test
ret
sbb
repnz
out
pop
call
xchg
add
xchg
xor
ja
inc
inc
sbb
jmp
push
in
or
in
sub
ds
pop
push
arpl
lea
enter
push
sub
sub
pop
or
lret
xchg
pop
lcall
sub
mov
sub
inc
xchg
push
int3
add
push
inc
sbb
sub
jne
push
jle
pop
jae
mov
push
mov
ror
pop
test
inc
sbb
push
mov
call
adc
leave
cmp
jbe
out
mov
fidivrl
dec
sub
adc
jno
fstpl
dec
icebp
inc
adc
loop
loop
addr16
sbb
mov
fldcw
mov
scas
inc
fidivs
cld
or
mov
out
dec
push
rorb
and
mov
test
cmpsl
lods
sbb
push
or
mov
out
fstpt
dec
lods
gs
or
in
shlb
xchg
shrl
nop
dec
mov
dec
fstps
adc
sub
out
int
or
in
sbb
push
and
jmp
test
xlat
stos
mov
popf
lods
push
xchg
mov
dec
jp
int3
adc
pusha
aam
int
sbb
adc
leave
sub
dec
stos
rcr
xchg
imul
push
mov
sub
outsl
hlt
in
in
pop
push
inc
lods
pushf
cmpsl
push
mov
jnp
xlat
jae
jl
jl
push
inc
lock
out
sbb
pop
push
jg
mov
xchg
xchg
pop
inc
push
xchg
mov
adc
imul
dec
rorb
fisttpll
popf
dec
std
lret
mov
or
sub
dec
mov
pop
sti
fwait
adc
mul
test
mov
sub
pop
sbb
bound
or
test
mov
cmpsb
mov
xor
jle
ds
fbstp
dec
xchg
add
dec
lcall
das
add
adc
push
sbbl
test
lcall
cltd
inc
test
lcall
cmpsl
inc
stos
aam
mov
loopne
out
daa
or
and
fs
jnp
jno
add
pop
jb
add
fldenv
and
mov
sub
ljmp
xor
adc
mov
mov
cmp
sub
add
sar
or
jle
mov
aam
xchg
jns
or
dec
mov
adc
loope
pop
cli
and
mov
aas
shrl
and
imul
pop
dec
dec
jb
sti
mov
mov
cs
ja
xchg
adc
pusha
xorb
gs
ret
pop
inc
sbb
mov
mov
pusha
xchg
ja
hlt
mov
dec
data16
add
cmc
mov
adc
loopne
mov
mov
mov
mov
or
inc
fmuls
push
in
not
mov
cmp
dec
in
sbb
inc
fcomi
sbb
in
imul
sub
mov
dec
dec
mov
mov
mov
xlat
mov
jb
cmp
mov
fmulp
testl
lods
out
or
dec
xor
cld
jbe
dec
sub
shll
mov
and
pop
ja
inc
dec
mov
pop
adc
call
add
xchg
xchg
fs
dec
xchg
insl
pop
les
push
popa
adc
add
xchg
adc
or
lcall
mov
mov
push
sub
mov
test
in
std
sub
inc
ds
jne
ss
aad
pop
loop
test
or
jle
cmovs
xor
scas
adc
adc
sub
xor
mov
cmp
mov
repz
adc
test
nop
test
add
dec
add
push
xchg
cli
xchg
stos
xor
add
mov
add
or
out
push
cmp
cmp
imul
aad
or
add
xlat
sarl
outsl
icebp
inc
mov
or
imul
adc
jnp
insb
xor
enter
or
fsub
add
mov
pop
mov
fistps
std
sbb
jae
cld
lods
je
mov
cli
stos
test
inc
stos
fstpt
xor
pop
inc
outsl
ret
mov
inc
dec
rorb
mov
or
push
scas
add
test
jl
leave
addr16
mov
std
jb
dec
inc
push
mov
cmpsb
clc
adc
shl
adc
call
or
cltd
add
push
mulb
push
xlat
mov
inc
inc
sub
cwtl
loope
lahf
popf
and
xchg
xchg
andl
imul
mov
lahf
and
cld
mov
adc
fbld
dec
inc
mov
pop
and
inc
loopne
and
mov
jmp
outsl
movsb
int3
clc
bound
pop
lea
testl
fisttpll
aad
pop
push
pop
or
repnz
and
je
out
xor
cs
push
popa
insb
dec
jae
fildl
imul
cld
in
mov
cli
xchg
stos
lret
inc
jo
push
pop
test
add
out
xchg
or
mov
pop
mov
xchg
inc
xchg
sub
negl
push
jnp
in
outsb
add
xor
pop
add
filds
das
aaa
pop
loope
dec
lcall
or
xchg
roll
std
jo
inc
jae
xchg
cs
xor
xchg
daa
leave
sub
test
add
daa
mov
pop
imul
and
mov
pop
neg
hlt
data16
xchg
adc
xchg
testb
cld
push
outsb
sub
xchg
jno
fcmovnbe
xchg
mov
dec
cli
mov
push
xchg
out
lock
cmp
sarl
int3
pop
rolb
xor
jo
jo
mov
lea
xchg
push
lds
xchg
cmp
dec
add
movl
mov
aas
test
loope
imul
je
push
and
xor
adc
mov
hlt
push
loopne
in
dec
and
jb
mov
in
push
or
inc
adc
jmp
loop
push
ljmp
mov
aas
sub
sbb
jb
xor
dec
stos
orb
sbb
ja
test
jne
cmp
dec
jecxz
addr16
ljmp
aad
into
xchg
js
sub
cmp
pop
pop
test
ret
lret
iret
or
popf
roll
pop
pusha
mov
xor
andb
lret
ss
or
mov
push
push
rol
rcrb
rcrl
and
sub
or
cmp
std
aas
flds
lcall
icebp
add
arpl
jge
and
sarl
mov
outsl
scas
shrl
mov
cs
int3
daa
xchg
out
in
lcall
leave
push
adc
pop
push
fisubrs
lods
test
iret
cmp
inc
popa
fisttpl
or
insl
mov
outsl
sbb
std
sub
dec
mov
xlat
lret
jg
imul
das
sbb
push
jl
cmp
jae
push
mov
mov
test
insl
sbb
fldcw
jle
mov
push
das
testl
xchg
dec
roll
dec
int
xor
jle
adc
loop
cmc
or
nop
mov
add
and
lds
xchg
test
insb
fisttpl
fldl2t
mov
icebp
sbb
adc
sbb
hlt
or
fimuls
cmp
adc
inc
mov
mov
push
jno
or
outsb
sbb
push
cmpsl
sub
flds
aad
aas
mov
fcmove
dec
mov
sub
ret
mov
jo
mov
mov
cmpsb
mov
push
sbb
sbb
fbld
ss
xor
xchg
insb
jle
imul
pop
in
pop
int
repnz
dec
movsb
fwait
jecxz
push
not
loop
in
popa
xor
inc
aam
test
movsb
cmp
sbb
pop
ja
and
arpl
fadds
pop
scas
cwtl
mov
push
or
test
shll
jne
shrb
ret
adc
push
aas
test
jl
mov
push
adcb
jmp
sbb
js
outsb
inc
into
push
push
sti
pop
pcmpgtw
inc
mov
mov
cmpsb
pop
loope
mov
sub
mov
sub
imull
xchg
mov
mov
ds
daa
bound
fwait
pusha
das
add
pop
ficomps
hlt
sub
cltd
cmp
push
daa
mov
in
shll
push
mov
cltd
rol
pop
adc
push
push
into
loopne
mov
adcl
dec
adc
fisttpl
mov
mov
push
xlat
xor
leave
pop
fcomps
lea
ja
aas
mov
stos
and
fcomi
xlat
out
shr
popf
inc
jnp
push
rcll
pop
xor
test
mov
push
jmp
lret
repz
in
ret
insl
sbb
sbb
and
fildl
out
xchg
sub
pop
xor
mov
sub
pop
mov
sbb
adc
push
lods
cld
pushf
lock
jo
sub
rorl
cmp
fldt
push
xchg
and
pop
pxor
cmp
ret
mov
test
cmpsl
je
loop
scas
gs
add
mov
scas
rclb
je
loopne
or
xchg
add
in
aad
aas
xor
fwait
inc
call
shl
outsl
pop
stos
pop
add
cmpsl
xor
sbb
mov
mov
ljmp
add
movsl
loopne
mov
fs
jecxz
xor
xor
cwtl
ja
cmc
in
sbb
push
cli
jnp
cmp
dec
daa
jnp
loopne
mov
dec
pcmpgtw
jo
mov
int3
xor
imul
in
pusha
pop
ja
popa
movsl
push
sub
pop
push
test
clc
mov
in
pop
out
and
rorb
hlt
xchg
in
in
push
push
lcall
or
push
jb
icebp
testb
ret
arpl
inc
std
cmp
dec
jmp
jnp
mov
cmp
xchg
in
push
adc
fnstsw
push
mov
test
int3
mov
xchg
mov
mov
daa
sub
lahf
jmp
and
or
mov
sbb
push
movsb
stos
push
dec
cwtl
outsb
sbb
dec
mov
scas
mov
cmc
adc
repz
pusha
data16
push
inc
mov
push
nop
imul
ljmp
mov
xor
mov
xchg
pushf
gs
cmp
imul
adc
adc
add
mov
mul
stos
mov
sbb
ljmp
and
mov
add
aad
inc
mov
jg
sahf
les
push
push
and
inc
subl
stos
mov
pop
add
push
mov
add
inc
in
repnz
out
pusha
jnp
test
test
sub
mov
jecxz
scas
outsl
jo
dec
sbb
fcompl
inc
inc
adc
ljmp
test
faddl
sbb
jnp
mov
idivl
fwait
stc
sbb
loope
leave
mov
mov
adc
fimuls
pop
and
or
rolb
push
iret
jno
pop
adc
adc
add
rolb
ret
adc
in
leave
loop
pop
mov
into
sbb
cmc
lahf
mov
es
xchg
mov
or
fimull
rcrb
mov
and
rcll
rcr
mov
popa
arpl
push
ret
mov
in
outsl
sbb
add
aaa
jb
test
add
sub
pop
xchg
add
ds
aas
gs
icebp
xorb
cmp
cli
std
cmp
lds
mov
sbb
popf
push
push
dec
aas
sbb
xor
sahf
pusha
jnp
roll
lahf
push
adc
or
jmp
jne
inc
sbb
push
or
cmp
bound
shll
arpl
xor
std
ret
cmp
pop
mov
cli
setle
into
lret
jecxz
jle
cmpsl
stos
idivb
push
sub
inc
int
add
or
scas
lea
cmp
bound
jae
jb
in
cld
sub
js
dec
jo
in
lret
cmpsb
lods
mov
ret
and
aam
pop
out
ja
repz
cmp
xchg
xchg
sub
xchg
std
popa
stc
and
mov
inc
mov
rcrl
in
mov
cmp
jmp
cmp
sbb
mov
idivb
mov
loopne
cmpsb
shll
jno
outsb
lahf
roll
insl
js
clc
icebp
ljmp
mov
jo
out
shl
or
lcall
jle
ja,pt
pusha
fimuls
xchg
or
mov
cmp
fisubrl
jecxz
sarb
ja
cmp
mov
jp
xchg
push
xchg
inc
inc
inc
ror
xchg
push
or
mov
sti
pop
push
sub
jno
jae
push
inc
bound
add
out
outsl
sti
mov
jne
ret
mov
or
and
cli
xchg
xor
mov
mov
pop
pop
popf
adc
or
sub
lret
pextrw
jo
andb
cmpsl
dec
cld
aam
repz
dec
mov
push
add
xor
mov
popa
and
sbb
jl
aam
mov
add
xor
xchg
lea
arpl
cmc
aam
mov
in
fists
cltd
mov
jb
sbb
jle
mov
sbb
inc
call
std
sbb
dec
xchg
jg
notl
xorb
xor
cmp
lods
enter
mov
and
push
out
aas
or
jle
cmp
repz
jle
jno
xor
xchg
xor
loope
outsl
cld
ror
movsb
test
adc
mov
xchg
add
xor
incb
sbb
mov
xor
add
into
sbb
das
enter
inc
je
shlb
push
push
gs
pop
cwtl
pop
adc
mov
cmp
mov
nop
mov
lcall
stc
fisubl
test
push
or
loope
cmp
pop
and
xchg
popa
movb
push
jl
sbb
adc
test
rolb
inc
xchg
mov
pop
push
xchg
aam
dec
or
dec
call
mov
imul
loope
into
cmp
sti
fucomi
add
pushf
mov
push
xchg
jg
and
push
scas
jns
inc
xchg
and
pushf
addr16
dec
push
adc
xor
sbb
cmp
inc
pop
mov
int
xchg
sub
inc
sbb
fstp
nop
pop
pop
jno
sbb
sbb
in
jnp
add
icebp
mov
xor
and
cmp
std
repz
mov
mov
testb
icebp
sub
ja
push
xor
inc
fmull
jae
xchg
pop
or
bound
call
jmp
dec
and
imull
pop
lret
in
mov
mov
mov
add
aas
popl
subb
filds
andnps
add
loope
cmc
cli
mov
repz
jno
add
or
mov
fidivs
sub
push
dec
sbb
push
jno
push
adc
arpl
fimull
shr
lcall
call
fsubrl
leave
dec
push
sbb
aaa
jg
lea
or
xor
nop
jb
cmp
xchg
jg
lret
lret
push
out
aad
rcrb
jnp
mull
cmp
cmpb
dec
cltd
xchg
sbb
inc
sub
xchg
outsb
mov
push
imul
or
sar
mov
pushf
mov
push
mov
pop
pop
lods
mov
hlt
jl
sahf
cmpsl
movsl
mov
pop
dec
inc
inc
jne
out
or
adc
addr16
movsb
mov
inc
ficomps
add
cmpsb
in
jle
jne
cmpsl
sbbb
arpl
sub
ss
sub
mov
xor
popa
xor
jns
pop
loop
jecxz
jns
cmp
xchg
cmp
out
lret
xor
fneni(8087
test
cltd
pop
cld
andb
mov
lahf
cmc
jmp
push
sub
push
jge
insb
into
sub
xchg
fsubrl
pop
xchg
xchg
pop
lods
int3
js,pn
addr16
sub
pop
mov
add
ljmp
mov
pop
mov
repnz
int
jns
orb
out
movsb
mov
shl
imul
push
cmpsb
popa
mov
mov
ficoml
push
push
xor
insb
mov
les
pop
shlb
cmp
dec
cmpsl
daa
dec
cmpsl
add
mov
push
lcall
jmp
into
inc
fldenv
pusha
lods
fbld
loop
mov
movsb
xchg
dec
mov
inc
pop
and
mov
sbb
lea
inc
fistl
shlb
std
stos
in
jmp
addr16
pop
cli
sbb
inc
xchg
xor
aaa
fwait
sbb
repz
lods
inc
adc
enter
adc
and
loope
push
or
xchg
cmp
pop
adc
jb
arpl
or
gs
shl
dec
and
loop
mov
ds
xor
fs
mov
imul
insl
sbb
jno
stos
faddp
nop
loope
mov
mov
and
out
jmp
mov
xchg
mov
ss
lock
xchg
and
mov
inc
xor
stc
or
push
cli
out
adc
pop
icebp
adc
imul
xor
int
pop
sbb
fldenv
movsb
in
mov
loopne
and
push
lods
nop
popa
xor
and
jno
push
stos
loope
outsb
stos
outsl
and
inc
jns
cli
adcl
adc
pop
daa
ret
xchg
pop
insb
in
std
jne
or
in
imul
insb
jmp
leave
shlb
movsb
outsl
rcrb
push
aas
and
add
inc
jbe
cli
inc
xlat
inc
iret
xlat
leave
mov
or
pop
xor
outsb
add
data16
xchg
mov
xchg
push
je
pushf
cmp
aad
mov
mov
in
call
mov
repnz
enter
ss
inc
sbb
icebp
dec
inc
stc
imul
hlt
or
out
xor
jb
push
inc
icebp
and
pop
ljmp
bound
xor
jae
sbb
and
insb
inc
cltd
scas
jo
lea
pop
les
mov
mov
or
cmp
jns
sub
mov
adcl
in
mov
in
arpl
and
mov
sahf
sbb
add
mov
in
jg
out
jbe
cmp
mov
mov
xchg
fsts
test
mov
mov
not
dec
fwait
jmp
aas
jae
fucomi
lahf
popa
mov
sbb
mov
dec
mov
fldenv
add
hlt
push
pusha
ret
shlb
loop
or
jb
in
inc
xor
enter
and
xor
xor
loop
in
inc
or
iret
outsb
sub
jb
out
xchg
ja
push
lock
or
cwtl
add
pop
dec
add
dec
stos
mov
ljmp
mov
and
loope
xorl
sahf
lods
data16
test
push
xchg
push
and
ret
push
pop
loop
out
pop
mov
rorb
mov
sbb
lahf
dec
and
enter
pop
lsl
mov
pop
sub
gs
xchg
push
adc
adc
lods
cmp
pop
mov
mov
inc
sbb
inc
sbb
mov
jmp
scas
cld
movsl
add
enter
xor
imul
pusha
insl
pop
clc
inc
int3
popa
fadds
in
pop
popa
mov
inc
data16
jbe
addr16
cli
insb
inc
outsb
dec
lods
lahf
pop
ret
or
test
sub
dec
jl
shrl
stos
adc
add
lods
lahf
dec
pop
stos
dec
jnp
mov
faddl
mov
pop
sbb
daa
dec
cmp
xchg
sbb
push
add
and
push
sarb
fiadds
dec
gs
add
andb
andnps
fstl
rol
mov
pop
inc
js
xor
sti
cmovno
inc
cmp
ret
div
adc
push
shrb
mov
push
daa
mov
add
js
movsl
sti
push
daa
dec
add
test
sti
dec
lock
inc
je
cmc
pop
dec
cmp
fnstenv
xor
pop
popa
mov
loopne
lahf
xchg
xor
dec
in
xor
sub
sbb
popa
xor
mov
cpuid
sti
lock
lea
bound
or
ja
int3
int
out
xchg
shrl
sbbb
and
push
mov
ss
add
in
aas
jmp
fwait
cwtl
jp
movl
adc
xchg
mov
fisttpll
js
lods
stos
xchg
in
mov
repnz
adc
xchg
jle
cld
pop
in
pop
or
in
push
test
adc
mov
repnz
stos
or
xchg
dec
inc
xchg
mov
aaa
pushf
insl
into
loope
testl
sarl
popa
jp
pop
in
lea
nop
dec
pop
rcr
out
cmp
ret
or
xor
addr16
sub
scas
jp
push
cmpsb
xor
js,pt
out
xchg
in
sub
push
adc
lock
sbb
mov
test
stos
adc
enter
fistps
icebp
inc
xchg
fists
popf
cmp
jecxz
retw
adc
fadd
imul
repz
pop
sti
cmpsl
out
xchg
pop
mov
mov
and
frstor
rolb
push
fadds
and
inc
imul
mov
stc
stos
sub
outsb
xchg
xchg
addb
js
push
lods
lahf
or
add
gs
sbb
xchg
mov
dec
clc
adc
dec
mov
cltd
ret
pop
dec
loop
pop
fidivrs
ffreep
pop
push
inc
aad
es
sub
cmpsl
mov
or
xchg
retw
adc
or
es
cld
ret
xchg
test
or
cmp
sub
inc
shrb
out
movsl
mov
imul
nop
je
fidivrl
mov
andb
fisttpll
aad
pusha
stos
mov
in
cmp
fwait
and
mov
lret
push
daa
out
dec
xor
lret
pop
pop
push
mov
pushf
adc
sub
sbb
add
int
das
idiv
jg
hlt
mov
mov
or
push
sbb
dec
cmpsl
and
aaa
imul
icebp
cmp
cmp
cmp
test
outsb
lods
mov
xor
and
pushf
sahf
push
loope
es
pusha
aaa
out
sahf
adc
pop
adc
into
and
adc
inc
out
lahf
and
les
mov
scas
mov
and
roll
xor
push
cmpsb
jmp
pop
pop
xor
pusha
es
int
jbe
mov
fiadds
sahf
mov
xor
sbb
xor
xchg
pop
nop
out
scas
dec
hlt
cmpsb
mov
lock
add
mov
fisubrl
push
aaa
jb
jnp
push
stc
pusha
xchg
mov
movsl
adc
inc
jnp
hlt
push
pop
rcll
mov
cltd
xchg
pop
test
xor
dec
cmp
push
loopne
and
sbb
pop
aam
call
popa
dec
xorb
jmp
flds
shrb
push
jo
adc
iret
cmpsl
or
jae
or
inc
add
adc
ja
les
jg
int
and
call
xchg
dec
loope
movsb
fldl
bound
xor
pop
sbb
jne
mov
inc
scas
sbb
jle
pop
ljmp
ds
push
dec
cltd
dec
or
call
push
add
scas
stc
dec
cmpsl
cmp
stos
push
add
jg
jmp
mov
lods
fbld
jg
hlt
mov
jp
mov
sarb
pop
sub
add
rcll
cli
outsb
mov
jl
push
sbb
aaa
jne
les
cli
sbb
in
sbb
js
repnz
pop
inc
mov
lods
sbbl
mov
pop
int3
es
jno
dec
inc
push
add
clc
xchg
ja
xchg
mov
repz
clc
fld
jae
mov
or
xchg
pop
mov
xorl
mov
jbe
jo
mov
cs
jge
and
sbb
dec
mov
movsb
scas
insl
int
mov
popa
adcl
push
mov
mov
fadd
pop
inc
mov
or
jbe
xchg
das
call
xor
lret
sbb
stos
jl
out
lods
cmp
mov
mov
bound
xor
insl
xchg
out
push
sbb
mov
bound
sbb
enter
inc
fdivr
cmpsb
lods
pop
pushf
dec
mov
mov
cmpsl
or
lahf
lret
lods
xor
outsb
lea
sub
push
lock
or
mov
pop
loope
out
push
inc
rcrb
and
inc
subb
push
int3
shrl
or
lea
fnsave
jmp
loop
roll
aad
sahf
jae
ja
das
nop
push
mov
lret
sbb
push
and
sub
push
mov
jmp
out
insl
clc
movsl
and
cmp
mov
mov
cmp
mov
jg
fiadds
nop
cli
aad
std
pusha
sbb
out
xchg
in
xchg
aam
movsb
jo
sbb
or
ret
add
cmp
or
fistpl
xchg
mov
std
mov
pop
sarl
or
adc
push
enter
push
mov
outsb
cs
filds
jmp
hlt
test
or
add
movsb
sbb
arpl
mov
jb
ja
lret
pop
sub
cmpsl
pop
mov
mov
sub
jo
shrb
jg
add
enter
jecxz
rcrl
pop
jne
les
mov
inc
stos
adc
mov
mov
clc
insb
nop
jle
xor
scas
daa
fnstcw
decl
in
repnz
rcll
std
roll
dec
mov
push
adc
outsb
jp
divb
scas
push
mov
repnz
pushf
outsl
lret
popa
or
sbb
movsl
fldcw
pop
mov
lock
mov
cmc
inc
add
hlt
push
outsb
push
ds
les
lret
loope
iret
push
in
into
pop
shll
mov
loope
insl
lahf
clc
or
clc
aam
mov
lock
dec
je
sbb
xchg
loop
adc
push
xlat
stos
fisubl
and
or
ds
add
cmp
int
in
jnp
lock
adc
cwtl
test
pop
jmp
sbb
xchg
xchg
inc
or
hlt
cld
imul
popf
loopne
mov
add
fsubp
das
fsubrs
dec
add
mov
fdivr
jnp
gs
int
insb
add
inc
cli
xor
int
mov
mov
and
add
scas
dec
push
add
rcll
sub
ret
jmp
sbb
je
repz
xlat
mov
inc
cmp
les
loop
xchg
test
stos
or
daa
add
test
iret
ss
out
stc
mov
mov
outsl
nop
xchg
mov
and
jnp
adc
push
xchg
loopne
mov
fwait
aaa
push
les
fnstcw
cs
dec
and
dec
push
std
push
in
xor
mov
test
mov
mov
daa
xchg
fprem
mov
dec
ja
fbstp
shlb
dec
lea
cmc
xchg
scas
repz
test
or
jo
mov
popf
push
faddp
stos
and
imul
loopne
iret
ljmp
in
adc
in
xchg
or
fucom
sti
test
loope
inc
ror
test
jecxz
xchg
cwtl
sahf
cmp
and
icebp
mov
aas
mov
and
cltd
idivl
pop
sahf
push
cmp
mov
jns
jmp
roll
mov
pop
icebp
repz
xchg
pusha
xor
lock
pop
sahf
mov
sbb
inc
cwtl
inc
sbb
or
cmpsb
fidivrs
testl
push
fldcw
mov
and
movsl
mov
lods
pop
pop
and
into
ja
pop
xor
repz
cmp
pop
rorb
divl
dec
sbb
jmp
cmp
push
out
ljmp
mov
adc
cmp
adc
ljmp
fsubl
movsb
gs
adc
push
mov
dec
and
scas
imul
push
pop
sub
out
mov
push
push
add
push
mov
pop
and
push
out
lcall
lds
mov
in
movsb
nop
shlb
xchg
push
sahf
ljmp
sarb
out
outsb
ftst
sbb
std
cli
jne
cwtl
xchg
lock
cmp
imull
cmpl
jo
and
mov
in
ret
imul
jmp
xchg
scas
mov
push
lahf
mov
cmpsb
or
out
dec
imul
sub
jg
lret
loop
jg
lds
dec
push
mov
ret
xchg
dec
sub
lods
adc
sub
xlat
xchg
cs
mov
add
loopne
mov
pop
data16
adc
xchg
movsl
mov
ficomps
sbb
test
sub
lcall
mov
adc
shrl
sbb
mov
cmpsl
jno
enter
outsl
xor
adc
movsb
or
pop
xchg
xchg
mov
fxam
cmpsl
inc
mov
ja
cmp
dec
sub
lret
jg
sub
push
ds
xor
add
lea
sbb
mov
and
jo
inc
cs
lret
xor
adc
fs
fsubr
adc
dec
cmpsl
adc
sub
xchg
pop
mov
mov
out
sbb
inc
imul
mov
pop
cs
es
ja
add
sbb
or
adc
lcall
movsl
test
ret
and
fcmovnbe
or
divb
xchg
pop
inc
adc
cltd
add
dec
negb
scas
call
and
sarb
inc
outsb
pop
fldl
hlt
ds
pop
pop
and
inc
lock
fs
into
xchg
iret
mov
mov
mov
mov
pop
pop
daa
push
mov
sub
mov
pop
push
sbbb
pusha
enter
inc
sti
out
or
cmpsb
mov
pop
je
ret
xor
mov
adc
push
scas
data16
add
fisubl
xchg
xchg
xor
frstor
lock
sbb
xor
ljmp
xlat
sub
icebp
sub
push
push
or
xchg
decb
mov
aad
xchg
add
mov
popf
mov
ja
push
inc
and
outsb
ja
bound
fnstsw
push
rcl
pop
in
addr16
cmp
push
adc
js
call
lret
pushf
xchg
jb
xor
data16
cs
xor
popw
bswap
int
fwait
in
pop
ljmp
sti
xlat
sahf
test
adc
mov
stos
lcall
rclb
add
adc
adc
mov
icebp
imul
push
fdivl
dec
cmp
lea
add
loope
shlb
pop
loop
les
xchg
push
inc
push
popf
movsl
out
pop
jb
and
into
adcb
mov
mov
mov
sbb
and
les
push
outsb
cli
arpl
lret
and
mov
push
testl
in
push
add
adc
clc
push
sbb
std
stos
lock
xchg
leave
sub
push
lcall
int3
dec
inc
inc
adc
xor
dec
adc
inc
or
jg
add
ljmp
jle
stos
lea
sub
xchg
mov
ret
fdivp
mov
movsl
adc
inc
jbe
push
ss
mov
lcall
mov
dec
pop
clc
mov
pop
mov
xor
xchg
leave
sahf
cwtl
lds
in
cld
add
inc
push
push
cmp
cmp
jl
inc
inc
stos
lea
cmp
dec
aas
sbb
jnp
push
and
in
pop
xor
int3
adc
inc
ljmp
push
pop
or
add
inc
push
xor
lock
insb
jge
addr16
sub
jmp
cmp
and
or
testb
add
adc
mov
xchg
popa
add
or
cmp
addr16
add
cli
mov
jg
push
test
mov
mov
mov
push
lea
in
outsb
adc
xlat
stc
add
jmp
xchg
fisubrs
sti
popa
dec
rcrb
push
lods
frstor
lahf
or
cmp
bound
je
je
lret
mov
lea
and
cmp
xchg
aas
add
addr16
js
or
jb
negb
push
cmp
mov
ss
out
sti
leave
mov
mov
xor
aaa
xchg
fidivrl
mov
dec
push
lcall
cmp
fbstp
add
test
xchg
mov
add
fcomps
sbb
xchg
aad
icebp
inc
imul
loopne
test
inc
int
das
mov
test
pop
sbb
pop
aaa
dec
dec
pop
cwtl
rcll
add
andl
sub
std
add
cmp
ret
and
sub
dec
jmp
inc
lods
sub
lcall
int3
push
outsb
dec
imul
cmp
sbb
cmc
push
lret
add
pop
sub
mov
std
sub
sub
mov
lcall
int
cmp
xchg
dec
fistpl
sub
adc
mov
movsl
insl
lds
or
call
mov
test
push
mull
pop
push
jae
ret
jmp
mov
inc
popa
loop
jnp
inc
hlt
pop
pusha
mov
cmpsb
ljmp
sub
adc
sbb
add
xchg
aaa
movsb
out
out
aam
xchg
in
scas
sub
pop
jb
imul
outsl
aaa
cltd
ret
icebp
and
push
lret
sub
pop
jp,pt
or
stc
into
leave
addl
pop
sarb
inc
xchg
jmp
xor
lock
cmc
push
jae
mov
dec
addb
xor
push
outsb
jnp
add
sub
dec
cld
push
add
lods
adc
stc
sbb
cmp
sub
gs
add
cmp
push
xchg
lock
aas
imul
aad
adc
dec
sub
cs
sbb
push
outsl
cmp
pushf
cmc
mov
xor
cltd
jae
mov
insl
imul
mov
pop
jns
lock
pop
cmpsb
mov
add
xchg
roll
lds
sub
and
mov
mov
ss
insb
imul
cmp
loopne
sti
loopne
and
test
mov
push
popa
jmp
addr16
mov
mov
imul
scas
sti
sub
add
push
mov
lea
inc
cmp
enter
jg
mov
xor
sbb
xor
dec
popa
ret
and
inc
imul
notl
icebp
lret
loope
adc
lods
cmc
and
sub
adc
call
push
movl
pop
jne
daa
nop
sub
outsb
mov
pop
cld
mov
dec
sub
cmc
xchg
je
add
jg
mov
fildl
addr16
pop
sub
repz
out
outsl
fbstp
stos
scas
mov
out
xchg
pop
loop
mov
lock
mov
mov
xor
filds
sub
into
xchg
bound
test
lret
xchg
dec
jge
and
shr
movzbl
jp
dec
mov
fadd
and
sarb
test
and
data16
adc
xlat
ficompl
xchg
pop
mov
mov
inc
cltd
sti
sub
sti
into
cmp
cmpsb
push
dec
iret
jmp
add
mov
xor
aad
scas
stos
mov
xchg
jmp
mov
iret
adcb
test
dec
data16
ja
popa
out
pop
movsl
movsl
and
dec
adc
movsb
pop
cli
and
ljmp
loopne
and
insl
sbb
ret
enter
jg
xor
cwtl
jbe
ret
add
and
cld
addr16
jl
pop
xchg
mov
fmull
ljmp
daa
inc
xorb
inc
loopne
pushf
gs
pop
into
xor
std
adc
sbb
sub
incl
sbb
shl
mov
stc
das
inc
sub
js
fstpt
inc
testl
cmpsb
jl
xchg
pop
outsl
and
lods
dec
xor
imul
mov
loopne
iret
jno
cmpsl
add
mov
sbb
adc
sti
pop
out
lock
mov
or
mov
mov
ret
fmulp
or
push
push
push
insl
bound
pop
jg
adc
stos
sub
sbbb
jge
pop
dec
aam
xor
inc
inc
jb
das
push
lea
mov
fildll
pop
loope
daa
lret
movsl
mov
ss
es
adc
cli
dec
jb
into
inc
cmpb
mov
jmp
repz
movsl
in
lock
in
lret
inc
xchg
test
adc
mov
inc
imul
gs
shlb
lea
jmp
movsb
icebp
cmp
orl
fwait
lcall
jl
fdiv
sahf
push
jb
xor
fstpt
jno
sub
aaa
imul
stc
mov
lods
out
xchg
mov
int
mov
cltd
xor
sbb
rorl
test
dec
mov
les
icebp
jne
scas
sub
icebp
outsl
cmpsl
ficomps
pop
clc
insl
jmp
cmp
or
in
adc
mov
movsl
jae
cltd
push
jbe
sbb
cltd
shr
iret
inc
mov
imul
xchg
int
lcall
sbb
stos
inc
adc
xor
sahf
test
add
or
rcll
pop
out
bound
pop
mov
jnp
test
dec
imul
mov
mul
divb
fs
rcl
and
scas
jb
dec
aam
sbb
mov
daa
mov
or
cmp
into
inc
jbe
push
ret
jbe
push
adc
mov
cltd
add
fs
jge
pop
cmp
add
sahf
cmp
icebp
mov
dec
sbb
cmc
pop
loopne
cwtl
pop
movl
sub
bnd
and
cmpsb
mov
shll
scas
clc
mov
jle
push
mov
cmpsb
repz
pop
and
dec
pop
lahf
xchg
lods
sub
loop
pop
nop
aam
sbb
mov
movsb
push
fisubrs
add
test
push
pop
cmc
lods
xor
sbb
adc
dec
hlt
pop
insb
jmp
xchg
jno
hlt
ljmp
mov
je
dec
addr16
add
cwtl
ja
pop
add
pop
test
and
push
dec
mov
jle
jae
fcmovnb
pop
movsl
mov
or
xadd
cmp
or
rcl
sub
xchg
test
imul
jae
test
inc
push
stc
das
push
adc
inc
pop
jo
fcomps
jecxz
std
mov
aam
mov
jmp
pop
es
test
shlb
dec
sbb
mov
push
and
lea
repnz
and
es
ret
in
gs
sbb
sub
lds
and
jae
dec
cmp
call
add
lret
cltd
mov
sub
cmp
mov
outsl
out
sbb
je
jae
fsubl
ds
orb
aas
scas
and
add
jno
mov
cmp
dec
pop
rcll
ljmp
push
xor
or
push
inc
xlat
pop
mov
jp
arpl
sbb
or
sub
ficomps
je
mov
flds
test
or
mov
pop
add
outsb
mov
enter
jo
or
pop
jecxz
cmc
or
ds
test
cmpsl
jle
xor
jb
xor
loop
aaa
sarb
pop
xchg
adc
movsb
fcoml
jne
pop
div
and
push
or
inc
roll
lds
clc
jno
out
fstl
inc
cltd
iret
xchg
pop
and
xchg
sub
lock
or
aad
dec
fimuls
and
or
jecxz
sbb
mov
clc
mov
jecxz
icebp
ret
call
imul
ret
ret
scas
lods
mov
xchg
mov
xchg
adc
dec
push
pop
pop
cli
jp
mov
sub
shrb
sbb
lds
xor
dec
push
test
jp
pop
mov
pop
push
lret
dec
fldt
push
adc
ss
in
adc
rcll
pop
lcall
mov
xchg
adc
xor
sub
mov
or
jp
into
stc
jp
inc
int3
cli
lret
test
into
insb
movl
fwait
or
stos
inc
mov
faddl
pop
inc
imul
out
mov
ret
insl
fistl
pop
clc
sbb
into
test
lcall
add
push
jno
mov
mov
jb
and
aam
ret
outsl
dec
in
cmp
lea
pop
pop
jo
sbb
pop
enter
scas
es
mov
xchg
rcl
push
faddl
mov
test
jecxz
xchg
xorl
movsl
fs
filds
scas
sti
add
inc
movsb
jmp
outsl
sbb
std
jno
lcall
out
ljmp
push
jns
or
cmc
pop
push
push
ret
ss
loopne
and
push
push
lret
in
xchg
js
pop
mov
cmp
sub
std
mov
and
inc
cltd
fldl
movsb
les
stos
jnp
pop
mov
jno
inc
sti
dec
pop
xchg
lods
push
push
cmpsl
cmp
ror
fsubrs
xor
lcall
out
push
and
outsb
sbb
lods
push
daa
sbb
dec
faddl
inc
out
rclb
in
jl
or
outsb
xorb
shl
lds
sbb
ja
pusha
fists
outsl
xchg
inc
sub
inc
add
dec
push
movsl
push
shrl
out
call
test
xor
nop
lock
jmp
loope
fstpl
xchg
ljmp
rolb
sahf
ret
xchg
add
mov
mov
stos
adc
inc
in
jae
hlt
lret
lds
mov
sub
enter
xchg
add
xchg
sub
rorl
mov
push
outsb
pushf
push
xchg
adc
dec
lods
jg
pop
jno
add
adc
push
push
or
gs
mov
push
sbb
push
outsl
sub
arpl
jne
mov
loopne
popa
sub
dec
and
lea
xchg
and
pop
jl
jle
jmp
xor
adc
sbb
shll
outsl
xchg
insb
cwtl
fisttpl
imull
xor
pop
inc
mov
je
jg
enter
in
shrl
lock
std
push
xchg
sbb
push
notl
aad
insl
mov
push
xor
mov
pop
and
int
scas
jbe
mov
xchg
es
fisttps
std
xor
cmp
testl
inc
push
xchg
pop
data16
fcmovnbe
sub
sbb
mov
cmp
mov
jl
pop
lds
and
lock
cltd
xor
mov
call
cld
cmp
test
pop
lock
xchg
pop
pushf
mov
sbb
in
xchg
in
sar
rcll
jbe
pop
rorl
scas
cli
push
jle
sbb
adc
lret
gs
push
popa
push
and
orb
std
pop
mov
mov
sbb
dec
in
cmp
repnz
push
sub
pop
mov
loop
movsb
lret
dec
imul
hlt
xor
inc
imul
and
mov
lcall
lock
pop
inc
scas
mov
inc
push
mov
mov
ss
mov
sbb
cmp
lock
mov
push
sbb
jnp
shlb
roll
jbe
clc
xor
out
inc
xchg
inc
xchg
in
dec
rorl
mov
iret
cmpsl
xchg
movsb
aaa
enter
add
mov
loope
add
rolb
push
subb
ret
mov
lcall
cmpsl
sbb
cmp
imul
rolb
mov
sbb
outsb
add
add
adc
lahf
add
inc
sahf
and
repz
inc
subb
outsb
fstpt
push
sub
mov
outsb
or
in
or
cmpsb
fsubl
into
into
mov
sahf
and
cmp
mov
inc
dec
mov
pop
cmc
dec
ret
cli
idivl
into
mov
ret
push
popa
hlt
sub
mov
sbb
adc
out
push
xchg
jnp
rcrl
pop
mov
nop
mov
lods
xor
mov
and
cltd
lcall
xorl
scas
add
fidivl
or
xchg
sub
add
xchg
jb
es
inc
imul
out
imul
adc
and
sbb
fbld
and
mov
cmp
xchg
pop
mov
cmpl
mov
insl
dec
gs
lret
and
es
mov
loop
subl
sbb
pop
mov
add
jp
and
repnz
movsb
adc
dec
scas
out
xor
stos
lods
xchg
dec
cmc
sub
jle
aad
lods
out
nop
adc
sub
mov
sub
sbb
cmp
stc
fistpl
pop
lds
dec
lahf
lea
pop
lcall
popa
lock
add
ljmp
sbb
loop
sahf
out
fiadds
jmp
inc
pusha
stos
cmpsl
mov
addr16
sbb
call
ss
push
pop
imul
add
sbb
stos
rclb
pusha
fsts
fs
les
jge
push
fldt
push
jb
add
fistpll
mov
jle
test
xor
addb
repz
add
add
into
in
add
mov
das
xchg
xor
jb
mov
ret
lock
or
sub
das
ret
pop
mov
hlt
adc
test
mov
test
mov
jecxz
rcll
rcrb
sbb
out
push
xchg
fldcw
ret
inc
aam
mov
sti
xchg
push
push
jl
cld
shrl
adc
sbb
pop
mov
cmp
gs
mov
push
or
lods
xor
mov
pop
mov
loopne
cmp
popf
jnp
nop
ret
mov
pop
inc
test
jnp
loopne
enter
idivb
cmp
push
rclb
xchg
mov
sbb
sbb
dec
mov
sbb
mov
adc
xor
nop
pop
data16
test
fidivl
div
and
in
mov
pop
in
cmp
jb
cs
loopne
jae
mov
adc
inc
adc
push
lods
inc
imul
sbb
pop
inc
mov
rorl
in
scas
pop
into
in
fdivrl
mov
inc
sub
in
mov
addr16
hlt
or
sub
jg
cmp
mov
mov
sub
pop
inc
dec
xchg
and
sahf
ret
imul
dec
aad
out
shll
mov
divb
mov
lahf
testl
mov
jge
xor
addr16
mov
dec
rcr
mov
jl
mov
ljmp
rclb
div
sbb
sbb
dec
sarb
inc
rclb
js
out
fcomps
cli
das
sub
sub
mov
jmp
inc
cmp
push
sub
and
pop
das
loopne
sbb
lcall
outsl
in
lret
je
stc
popf
ret
jo
in
cli
cmp
jle
push
jno
jne
pusha
mov
outsl
mov
xchg
aaa
hlt
and
mov
inc
adc
and
inc
addb
into
lret
fbld
push
cli
fiadds
adc
pop
test
sub
xchg
or
jns
dec
xchg
popf
pushf
sbb
dec
cmpsb
cltd
adc
jb
xor
repz
loopne
push
cs
mov
pop
data16
flds
lret
sub
pop
movsb
dec
or
aaa
mov
insl
dec
sub
mov
cwtl
incl
pop
aaa
sbb
dec
clc
ss
ljmp
inc
mov
icebp
mov
mov
add
stos
fstps
jecxz
sub
adc
push
adc
inc
adc
out
shrl
pushf
lods
mov
xor
scas
ud0
push
sub
js
add
daa
testl
jno
int3
mov
popf
sbb
or
scas
add
xor
in
scas
popa
inc
jp
dec
mov
jnp
and
ss
inc
das
js
les
pusha
rorl
push
jns
sbb
aam
lcall
fists
ss
push
es
mov
mov
into
mul
pop
outsb
sbb
je
imul
js
jmp
incb
jle
lds
rcll
push
sub
fidivrl
mov
lods
pusha
outsb
xor
fisttps
push
mov
or
jg
mov
popa
sahf
mov
shrl
dec
lea
mov
add
lret
dec
outsl
inc
ret
es
in
shr
xchg
mov
push
addb
loope
pop
sbb
lret
push
or
mov
pop
js
roll
and
into
mov
adc
mov
and
jle
dec
jge
int
lar
cs
mov
pop
mov
aad
sub
aad
lret
adc
add
xchg
les
dec
add
dec
push
push
pop
mov
loop
frstor
iret
test
rcll
dec
sub
sbb
dec
push
push
xor
ud0
test
loope
jle
bound
cmpb
cli
add
push
dec
stc
ljmp
aad
aad
popa
popf
mov
test
scas
sub
cmpb
and
jae
xchg
js
test
dec
ds
adc
pusha
push
scas
pop
lret
enter
lret
push
je
or
push
dec
inc
lock
xlat
shl
loopne
push
xor
fbld
je
mov
shl
inc
lods
mov
aam
fldcw
lahf
push
dec
fst
pop
cmp
and
inc
jg
push
push
ret
xchg
repnz
stc
addr16
pop
jl
loop
jne
and
push
das
pop
sub
fistps
or
mov
dec
push
push
sub
jmp
cmp
jo
xchg
inc
fs
sbb
xchg
cmp
adc
shr
icebp
push
iret
xor
shll
les
sub
jbe
in
insl
jb
into
mov
lcall
ja
in
xchg
add
add
lea
aam
call
mov
xchg
mov
movsl
ljmp
mov
pop
sub
jg
fildll
clc
sbb
pop
mov
dec
cwtl
mov
or
hlt
sub
jnp
movsb
xchg
xor
aad
int
dec
cmp
dec
push
sub
xor
sub
adc
pop
sbb
xchg
xor
cltd
leave
xchg
add
movsl
mov
mov
cmpsb
fbld
inc
ret
add
mov
or
daa
jl
push
ljmp
mov
sbb
inc
inc
fildl
dec
out
test
test
sub
mov
pop
pop
ret
pop
sub
test
sarl
ret
mov
pop
mov
jge
or
cmpsb
push
mov
mov
sbb
push
sbb
stos
xor
pop
scas
add
subb
movsl
loop
xchg
push
xor
stos
out
addl
out
or
mov
movsl
adc
std
xchg
je
dec
sbb
test
loope
adc
mov
xchg
mov
test
cmpsl
xorl
nop
adc
ret
stc
mov
mov
les
mov
cwtl
push
out
mov
cmp
mov
ret
and
push
andl
decl
push
test
dec
fsubr
mull
pop
in
inc
and
add
mov
stos
popa
pop
dec
jmp
in
mov
leave
mov
mov
lods
aad
les
sbb
icebp
mov
daa
scas
outsl
pop
or
xchg
ret
inc
mov
shrl
adc
cmp
rorb
movl
loop
sub
mov
push
xchg
aad
jns
xchg
ljmp
stos
gs
lods
push
fdivl
cmpsb
hlt
mov
add
stos
fs
jb
xor
pop
in
scas
mov
mov
lcall
pop
inc
mov
movsb
or
clc
ljmp
and
leave
adc
lock
popa
gs
mov
inc
fiadds
mov
pusha
cmp
outsl
or
leave
push
shll
adc
scas
es
addl
lcall
and
outsb
sbb
jns
aam
mov
ja
inc
shrb
push
lods
adc
ret
cwtl
das
mov
std
shrb
sub
lods
mov
xor
out
lods
dec
dec
cmp
push
pop
or
loope
test
push
iret
imull
jb
sub
add
aas
dec
sbb
mov
cmpsl
push
cs
mov
scas
fiadds
cmp
addr16
outsl
sbb
xchg
xchg
imul
imulb
or
sub
andl
xor
pop
stc
xor
jl
mov
add
lods
js
aas
push
rorl
mov
fcmovbe
out
sbb
pushf
js
subb
xchg
stos
stos
dec
inc
dec
shll
sub
iret
and
je
fsub
jo
or
sbb
push
sbbb
in
dec
mov
xorb
xchg
lahf
aaa
pop
mull
mov
pop
aad
test
sbb
mov
stos
cmp
mov
aaa
fdivs
pop
or
sub
in
cmp
sahf
stos
gs
push
cmp
insb
add
cmp
mov
hlt
dec
xor
fisttps
inc
nop
jno
jmp
bound
mov
stc
ljmp
push
sti
sub
push
ret
mov
insl
jo
or
fistps
ret
xchg
jecxz
pop
push
mov
cmc
insb
fldt
pushf
xor
inc
cmpsl
cmp
test
sbb
lahf
push
jle
mov
pop
or
fidivrl
xlat
xor
hlt
xchg
xor
ss
sbb
fcmovu
jmp
lods
stos
fisttpll
sbb
xchg
xorl
movsb
jne
pop
jmp
fstl
inc
sti
out
movsb
inc
cmp
popa
clc
stc
sub
int
or
pop
mov
push
xor
clc
cmp
stos
fs
scas
mov
jb
stos
int
sbb
cwtl
out
jecxz
lods
mov
imul
adc
push
rorb
mov
fiaddl
xor
adc
and
dec
mov
adc
pop
xlat
scas
pop
and
test
xorb
cmp
outsb
gs
push
mov
iret
call
bound
mov
andl
rcll
es
jbe
fstpl
shrb
mov
mov
aad
jmp
data16
gs
ret
int3
das
pop
pop
ret
dec
out
xchg
int
in
mov
call
and
or
fnstenv
and
xor
fiadds
jns
ss
add
nop
in
test
inc
and
dec
scas
cmpsb
xor
or
cmp
inc
add
add
out
xchg
and
adc
int3
sbb
lret
imul
jg
aaa
mov
insb
das
gs
imul
call
pop
sub
and
cmp
or
xchg
les
mov
jg
push
inc
xchg
pop
nop
add
enter
out
gs
or
xchg
stos
mov
lret
sub
in
popf
dec
imul
out
push
push
and
repz
sbb
mov
ret
or
sbb
and
sti
cs
and
repz
aam
popf
or
push
aaa
jnp
lods
push
jae
movsl
cmpsl
xorb
mov
inc
mov
mov
movhps
fs
imul
xchg
fdivr
leave
clc
outsb
dec
cwtl
pushf
fisubrl
or
mov
push
add
clc
push
push
inc
and
sbb
add
repz
test
das
cmpsb
les
mov
aam
test
and
insl
addr16
movsl
mov
jnp
clc
mov
in
iret
or
dec
dec
push
and
fmuls
and
cmpsl
mov
aad
addr16
sbb
test
fmull
push
es
popa
js
lods
inc
enter
jl
push
push
xchg
rcll
loopne
xchg
enter
xchg
sbb
add
out
jmp
insb
sbb
rcrb
or
add
fs
fwait
rcr
push
push
mov
pop
inc
mov
sub
outsb
loope
es
mov
imul
mov
jo
pop
xchg
cwtl
sub
pop
pushf
das
pop
and
xchg
mov
and
xchg
push
pop
leave
dec
cmp
cmp
pop
push
and
cli
imul
ds
jmp
mov
pop
xchg
push
mov
or
xor
adc
mov
lcall
pop
je
inc
int3
mov
jae
shl
sbb
mov
cmp
jecxz
sub
pop
adc
loopne
inc
lcall
inc
push
jmp
les
lret
jae
and
xor
jne
call
pop
jno
mov
cltd
add
jo
or
xchg
leave
sahf
sbb
push
mov
je
push
adc
inc
jnp
rcr
push
daa
sbb
rcl
add
push
pop
cli
mov
enter
shlb
int
stos
fcoml
adc
out
ljmp
enter
repnz
push
xlat
mov
sub
out
xchg
ljmp
popa
jb
test
xor
jbe
pop
lds
xor
cmpsl
int
scas
jl
sbb
add
nop
mov
lcall
gs
push
adc
in
je
jmp
fwait
in
int3
mov
out
fisubrs
mov
xchg
fwait
je
in
cli
mov
jecxz
nop
inc
adc
jo
daa
cmpsl
rcrl
pop
cmc
outsb
xor
mov
sti
adc
int3
sarb
shlb
xor
mov
out
mov
sbb
or
dec
imul
pop
mov
cmp
add
push
dec
cmpsl
jb
out
scas
pop
loop
cmp
pop
scas
jp
das
push
and
mov
clc
lds
adc
adc
int
sarl
imul
inc
fwait
cmp
cmp
lret
jecxz
mov
push
adc
dec
push
jno
popa
xor
mov
inc
dec
fmul
into
in
test
icebp
shlb
sbb
call
push
int3
mov
fwait
lds
pop
xor
pop
mov
xor
fmull
adc
sahf
pop
lods
test
adc
and
sub
clc
frstor
lahf
or
in
lods
scas
xor
xchg
mov
and
pop
mov
mov
jns
sbb
push
pop
jmp
rclb
fistl
fcom
ss
inc
pop
mov
push
js
jnp
pop
outsl
fidivs
jg
out
xor
nop
scas
repnz
or
cmpsb
add
and
fs
je
mov
fwait
push
jnp
cwtl
cli
lret
add
xchg
and
and
insl
mov
xchg
xor
and
cmp
push
filds
or
xor
add
in
or
cld
je
push
lcall
aad
mov
das
mov
stc
jo
out
add
or
jbe
push
pop
mov
fidivl
cwtl
cs
mov
add
ss
lahf
fptan
xchg
scas
movl
rol
or
or
cmp
jb
mov
cwtl
jecxz
lcall
inc
push
jmp
lock
xorb
ret
mov
sub
adc
or
jecxz
mov
lret
pop
mov
movl
adc
add
mov
and
movsb
mov
leave
xchg
lods
push
xor
das
neg
dec
fucom
adc
cmpsb
pop
xchg
dec
data16
push
mov
mov
push
mov
stos
jg
movsl
pop
mov
sbbb
or
cwtl
push
lods
cmp
imul
sbb
into
jmp
xor
push
jmp
shl
dec
in
daa
push
pop
jno
arpl
inc
sarb
cs
cli
arpl
dec
xor
mov
out
mov
cmp
xor
xchg
ja
outsb
dec
cltd
rcrb
fsubs
sbb
nop
adc
leave
and
addr16
and
and
call
sub
jne
fcompl
outsl
shlb
jmp
mov
jle
adc
xor
mov
lods
lods
rorl
cmpsb
test
lret
mov
bswap
fcom
out
jmp
or
dec
aas
jne
jne
aaa
mov
dec
jecxz
in
push
dec
dec
inc
cmp
sub
fistpl
xor
loope
cmp
inc
sahf
add
push
mov
lods
push
push
adc
pop
xchg
lock
sahf
rcll
xchg
test
cld
ret
outsb
cli
es
iret
and
mov
sub
inc
scas
imulb
pop
out
push
leave
pop
outsl
loop
or
inc
jg
mov
push
jecxz
jmp
leave
xor
fsin
sbb
push
mov
nop
sbb
lcall
hlt
test
xchg
pop
shrl
jbe
mov
push
sbb
sti
jo
mov
stos
xchg
xor
and
mov
sub
roll
jmp
cmp
loopne
test
adc
js
clc
nop
divb
jne
jnp
cltd
test
add
in
adc
add
cmp
cltd
jb
popf
test
mov
lcall
je
xor
push
xchg
mov
cs
inc
mov
imul
xchg
jle
pop
inc
popf
or
sbb
clc
adc
pop
leave
fisubl
out
cmp
fldl
mov
jo
loope
and
dec
icebp
pop
pop
shr
aas
dec
xchg
loop
fiadds
bound
sub
sbb
and
jne
or
fdivrs
call
or
mov
aad
jmp
jl
mov
lahf
cmp
mov
rcll
mov
out
in
movsb
js
inc
pop
iret
jo
mov
pop
inc
arpl
and
push
test
lods
cmc
inc
in
mov
push
xchg
outsb
pop
push
jge
outsl
aaa
jle
mov
or
pop
add
mov
xchg
cmp
icebp
jb
jmp
inc
inc
fiadds
push
ds
lods
jle
xchg
cltd
add
xlat
lods
lret
or
ficoml
fwait
pop
shl
iret
or
repz
mov
mov
xchg
add
rclb
out
das
lds
movntq
out
jg
roll
adc
lret
es
jne
in
fs
or
in
sti
mov
jb
push
mov
pop
dec
sbb
sub
les
mov
test
popa
add
adc
das
push
test
push
and
test
das
aam
xchg
fs
shr
test
test
adc
mov
cwtl
or
adc
lret
insl
sub
out
cmpsb
xchg
and
sbbb
rolb
push
mov
add
ss
dec
outsl
in
dec
xchg
leave
cmp
int3
sbbb
je
sbb
push
sbb
cwtl
push
leave
push
or
ss
int3
shll
call
jg
and
push
popa
and
cli
gs
je
sbb
pop
mov
aam
aas
dec
inc
dec
mov
call
cld
mov
mov
stos
and
mov
and
loopne
fdivs
into
sbb
or
push
push
mov
pop
imul
mov
mov
mov
ljmp
jecxz
mov
hlt
shl
sub
stos
and
sbb
imul
pop
jae
mov
push
push
aad
mov
mov
mov
add
icebp
test
cwtl
mov
divl
jb
mov
mov
mov
hlt
sub
loop
lret
adcl
int
shlb
sbb
sbb
je
push
inc
inc
push
daa
cmp
or
pop
aas
call
clc
out
xchg
pusha
pop
xchg
dec
std
cmp
leave
xchg
push
mov
add
cltd
out
jae
add
mov
xor
scas
jb
outsl
mov
mov
repnz
push
scas
js
lcall
mov
jbe
push
add
jmp
sbb
mov
xchg
getsec
lods
shll
dec
aad
cmp
jns
inc
aas
enter
mov
jecxz
sub
in
inc
shlb
loope
js
dec
fs
orb
pop
or
aas
pop
test
out
adc
xchg
mov
adcb
cs
pop
or
or
test
mov
xor
push
cmc
movsl
adc
repnz
or
push
scas
mov
sub
mov
inc
aaa
adc
data16
pop
sbb
cltd
lods
fs
cmp
aad
sahf
fmuls
pop
in
test
ja
xor
xor
icebp
inc
cli
mov
xchg
rolb
push
jno
in
adc
scas
jmp
out
std
mov
or
pop
inc
sub
adc
cmp
dec
insb
and
sbb
xchg
jne
pop
lahf
andb
in
lea
test
mov
dec
insl
in
add
adc
shrl
push
lret
paddq
inc
stos
fnstenv
scas
mov
mov
mov
out
js
in
jns
lock
fwait
cltd
sbb
xchg
mov
fld
nop
sbb
sbb
xchg
js
jge
mov
mov
pop
sbb
lret
mov
add
or
pusha
inc
sbb
and
mov
or
pop
inc
push
push
ja
or
fs
dec
xchg
scas
or
dec
mov
sbb
fcoml
jae
inc
adc
mull
js
xchg
jp
push
mov
mov
sub
and
enter
test
cmp
fstpl
addb
cmp
std
fwait
mov
popf
jnp
movsl
adc
lahf
mov
ss
mov
pop
mov
stos
add
je
mov
test
mov
push
divl
jmp
dec
xor
int3
or
bnd
shlb
lods
in
xlat
movsl
sbb
sub
outsb
lods
test
mov
mov
movb
and
dec
push
imul
sbb
jl
fbstp
shlb
mov
test
call
test
or
xor
aad
sub
adc
sbb
add
js
icebp
lods
imul
cmpsl
mov
sbb
test
pop
push
pusha
push
lock
out
daa
push
mov
sub
jle
pop
enter
jecxz
addr16
shrb
mov
adcl
add
flds
enter
xchg
sub
lock
pushl
addl
rcrb
ja
ret
jb
aad
push
aad
pop
add
scas
es
ss
inc
in
fisubrs
add
jecxz
addr16
xchg
mov
repnz
pop
lock
lahf
rep
mov
add
into
jae
loopne
in
xchg
out
mov
add
addr16
jno
outsb
jmp
subl
repnz
scas
push
jne
inc
fnstcw
daa
xor
aad
repz
int3
sbb
imul
mov
iret
jno
ds
jmp
ds
add
cwtl
imul
jbe
mov
adc
jne
fnstsw
cld
fsubrs
pop
lods
mov
stos
je
flds
sbbl
lcall
fstpl
xchg
repz
dec
lret
mov
pop
fisttpll
pop
dec
cli
lods
out
cld
fldcw
shlb
mov
scas
bswap
pop
dec
and
pop
xor
dec
mov
test
mov
repnz
fs
inc
push
clc
inc
jle
loopne
sbb
loope
pop
lock
fmulp
or
insb
sbb
lret
mov
test
or
cmpsl
xchg
jl
pop
iret
and
popf
and
shr
jg
into
pop
popa
mov
pop
jns
or
aaa
mov
adc
cmp
pop
and
pop
cmp
imul
or
dec
in
in
daa
mov
fisttpll
lock
imulb
inc
mov
insl
xorl
and
dec
push
xor
mov
sti
loop
sub
xor
sti
fwait
mov
pop
sti
or
clc
jmp
jne
push
int3
and
cmc
movsl
xchg
idivl
push
mov
jp
aaa
shlb
dec
cwtl
mov
ret
mov
int3
les
push
stc
repnz
fisttpl
and
sbb
cmp
test
xlat
dec
pop
adc
cmc
ret
ficompl
test
shrd
mov
inc
sbb
push
or
bnd
and
sbb
jge
cmp
fisubrs
push
subb
lea
cmp
sbb
mov
jmp
repz
fsubl
adc
mov
out
loop
mov
imul
outsl
imul
sahf
sub
xor
push
ss
sbb
ffreep
insb
in
test
and
and
cmp
xor
into
push
repz
dec
jp
bound
sbb
sub
xchg
pushf
pop
add
lds
inc
or
jne
loop
jmp
fcoml
cli
xor
sbb
dec
lods
sti
xchg
push
movsb
xor
ss
adc
cmp
out
std
into
mov
js
cld
mov
gs
adc
fidivrs
mov
bound
aaa
sub
sub
jecxz
stos
or
sti
sbb
hlt
pop
shl
imul
xchg
adcb
stos
xchg
lds
xor
sti
or
fs
push
add
mov
mov
and
aam
movl
cmp
sbb
scas
xchg
mov
or
inc
in
icebp
cmp
mov
ficoms
dec
jns
adc
push
xor
pop
lock
mov
pop
and
xor
jo
or
xchg
ds
sbb
loopne
xor
mov
mov
sbb
or
and
xchg
adc
bound
jle
push
jns
aad
mov
in
stc
add
divl
adc
cmp
inc
sbb
push
lcall
outsb
push
mov
outsl
pushf
mov
orl
add
mov
xlat
dec
pop
shll
xchg
push
sbb
lcall
jns
push
in
pop
stos
xchg
inc
push
clc
sbb
into
cmc
xchg
jb
bound
testl
jbe
inc
inc
and
lods
nop
lea
push
cld
leave
sbb
adc
and
push
adc
mov
dec
jmp
mov
adc
fistps
pop
out
pop
push
fisubrl
mov
pop
and
cmp
mov
ljmp
int
cmp
dec
data16
in
mov
mov
push
enter
ret
js
mov
add
stos
dec
push
xor
mov
fcomps
xchg
or
and
jns
das
jecxz
daa
xor
scas
pop
xchg
sub
repnz
sbb
pop
out
shll
mov
punpckhbw
lods
out
gs
mov
stc
xchg
mov
test
or
into
mov
outsb
sub
out
in
dec
mov
cld
sbbb
push
sub
shl
enter
and
xor
mov
mov
loopne
or
sti
sbb
add
sahf
hlt
fldl
or
fidivl
pop
insb
xchg
sub
or
mov
pop
and
into
sub
ret
push
js
inc
sub
inc
cmp
jl
push
roll
mov
andl
insb
jns
dec
pusha
mov
jp
cltd
ss
xchg
sub
mov
sbb
add
push
js
mov
xor
fisubrl
and
popf
loop
push
add
les
mov
dec
mov
mov
push
int3
fstpt
roll
andl
imul
jo
jge
dec
push
inc
stos
into
loopne
lcall
ret
mov
jbe
push
daa
aam
add
pop
lahf
jecxz
int3
dec
and
cmc
jb
insb
int3
pop
and
ss
in
adc
mov
ds
mov
xchg
das
xchg
ljmp
jo
idivl
insb
jb
sahf
lret
xchg
jne
mov
push
sub
adc
mov
xor
or
adc
push
mov
xlat
pop
fnstcw
cmp
insl
in
mov
jne
movsb
xor
xchg
cmpsb
adc
js
test
xlat
pop
and
in
mov
cwtl
mov
fyl2x
inc
xlat
xor
fstpl
addr16
outsb
and
xchg
inc
cmc
std
push
and
es
xor
outsb
and
mov
stos
pop
add
arpl
mov
and
xchg
out
jne
adc
add
lock
push
add
insl
sahf
dec
sti
xor
jle
lret
adc
ret
js
mov
insl
push
jge
das
pusha
dec
int
push
gs
inc
mov
inc
clc
dec
push
sbb
movsl
out
xor
jns
in
sbb
fwait
sbb
adc
nop
lock
inc
push
popa
cli
sbb
mov
or
lcall
xchg
sbb
imulb
icebp
imul
cmp
dec
outsl
std
mov
gs
insb
test
mov
mov
jmp
push
xchg
stos
dec
mov
cwtl
push
lods
xor
jno
dec
jne
stos
push
sub
arpl
je
sti
cmp
ja
out
testb
or
lret
rcrb
pusha
inc
orb
nop
lods
ljmp
daa
dec
pusha
clc
subb
jl
cli
shll
xor
and
imul
sub
ds
inc
add
repnz
pop
dec
cmp
loop
mov
cmp
xchg
push
stos
in
idivb
aas
mov
outsl
negb
outsl
aaa
mov
inc
ret
or
rcr
mov
xchg
xor
lret
and
mov
cs
fs
test
xchg
addr16
mov
and
dec
xchg
dec
push
out
xchg
pop
imul
xchg
loopne
pop
xlat
ja
lret
lcall
mov
outsb
xor
mov
sarb
stos
xor
jge
xor
imul
fwait
in
xchg
int
add
or
nop
cmc
xchg
mov
in
xchg
sub
int
fs
adc
repz
add
rorb
aaa
stc
pop
push
clc
call
lds
push
divl
pop
pop
movsb
cmpsb
sub
mov
mov
and
adc
ret
adc
outsb
in
mov
lret
mov
sub
test
sahf
mov
sahf
adc
jge
or
inc
mov
icebp
push
jp
and
cmp
jecxz
mov
jne
iret
int3
jge
subl
mov
adc
incb
cmp
cwtl
jl
add
push
push
imul
sub
pop
pushf
arpl
aas
call
pop
clc
incb
jg
mov
inc
shr
push
insb
in
mov
sbb
and
mov
cmc
jp
fdivrs
ljmp
hlt
out
leave
xorl
cli
ret
mov
mov
sbb
xbegin
jb
cltd
mov
shrb
and
inc
and
inc
add
mov
popf
jbe
ret
jle
roll
sbb
lods
aaa
xor
push
mov
push
cmp
insl
jl
pop
shl
mov
ljmp
adc
inc
push
clc
ss
jnp
sbb
mov
ja
imul
mov
lret
adc
xor
nop
xor
mov
and
xor
push
pushf
dec
movl
pop
sbb
adc
in
adc
insl
ss
out
xchg
bound
aam
mov
xor
popa
mov
add
sbb
ds
int3
xor
jg
jp
lea
stc
cld
int3
xor
clc
jb
xchg
sub
xor
cmp
adc
xor
fildl
mov
imul
or
mov
pusha
movsb
jns
ss
lret
cmp
mov
in
sti
mov
push
mulb
aad
xor
inc
sub
push
push
sbb
ret
sti
xor
clc
in
sbb
scas
add
int
dec
inc
loopne
addr16
loop
mov
insl
mov
or
in
pop
pop
mov
imul
mov
ret
pop
push
outsl
fdivrs
inc
divb
dec
push
leave
push
xlat
pusha
cmc
push
fsts
bnd
mov
mov
xchg
cmpsl
pushf
ficoms
jns
hlt
popf
dec
cmpsl
push
sub
mov
and
lcall
es
stos
sbb
inc
add
je
sbb
in
out
inc
pop
ss
nop
into
or
enter
dec
inc
in
and
sbb
lret
popf
or
or
testl
and
inc
shll
into
clc
stos
repnz
or
jb
fwait
enter
jno
pop
mov
fisttpll
mov
ljmp
sti
xchg
or
jnp
fnstsw
sti
loope
js
dec
push
mov
negl
andb
fsubp
es
outsl
inc
jp
iret
inc
imul
pop
sti
gs
push
cld
inc
inc
push
repz
jno
sub
lods
push
xchg
push
sahf
pop
cmp
push
cmp
push
pop
test
aas
push
dec
lret
pop
and
mov
in
fsts
sbb
and
adc
add
or
loope
negb
cwtl
or
filds
stos
cmp
adc
push
inc
in
cmp
fildl
mov
jbe
fldenv
push
add
in
ret
jg
sub
mov
inc
and
xlat
hlt
leave
jecxz
subl
stos
in
stc
int3
jmp
push
push
cwtl
mov
sub
jno
cwtl
mov
push
add
xchg
in
xor
push
push
out
fisttpl
mov
push
or
mov
push
xor
out
jbe
pop
jg
rcrl
scas
adc
imul
or
loope
fbld
push
mov
outsl
inc
and
and
shl
add
xchg
push
sbb
inc
mov
mov
lds
xchg
push
jnp
in
les
lret
dec
fsubr
and
arpl
fs
dec
inc
repz
aas
fistps
dec
scas
pop
inc
push
lds
shll
add
mov
jnp
outsb
movsb
pop
shll
pop
popa
cmp
mov
stos
cmp
sbb
and
pop
jecxz
mov
xchg
sbb
xor
xchg
mov
sahf
dec
icebp
inc
xor
or
inc
cmp
sbb
push
call
cwtl
sarl
xchg
insb
or
sbb
loop
add
ja
xchg
push
xor
sbb
fildl
push
lods
dec
gs
and
lahf
scas
aas
loopne
imul
sbb
mov
xchg
push
std
xor
sub
mov
lret
or
insb
xchg
cmp
outsl
fs
pop
push
xchg
sub
jmp
push
rolb
push
jle
xchg
pop
cmp
outsl
ds
xor
or
push
and
fildll
sub
xchg
mov
push
test
jge
jo
shll
stc
lcall
pusha
es
aam
dec
fimull
stos
outsb
pop
pop
mov
cmp
test
pop
push
leave
jno
sbb
push
dec
adc
pop
and
xor
mov
sbb
loope
stos
cmp
inc
mov
jge
fistl
push
fwait
sahf
ljmp
mov
xor
pop
test
insb
mov
pop
push
pop
or
add
jo
insl
jnp
rolb
mov
cli
test
inc
out
stos
mov
jp
aam
cmp
xchg
rorb
std
cmpsb
pop
push
sahf
dec
and
xor
test
and
andb
daa
cld
stc
dec
and
stc
aas
bound
pop
xor
push
fprem
pop
es
pop
jecxz
cmp
jge
fidivl
mov
mov
cmc
dec
mov
ffree
mov
push
es
into
insl
xorl
daa
jmp
add
fwait
mov
mov
sub
lcall
scas
aam
mov
push
rclb
shrl
cmp
out
mov
jmp
clc
add
daa
bound
pop
cmp
dec
jae,pn
sub
addr16
mov
xor
adcb
dec
ror
mov
jge
cmp
dec
cmp
jp
or
adc
adc
out
mov
jnp
jmp
rcrl
add
and
jl
ret
xor
sub
mov
imul
sahf
out
rclb
int3
pop
into
dec
sub
mov
lods
mov
or
cwtl
popf
fbstp
mov
out
jle
mov
mov
pop
add
aad
dec
lcall
mov
add
add
cwtl
adc
mov
cmp
xchg
push
jg
bound
mov
repnz
sub
pop
mov
mov
and
xchg
lcall
addb
xlat
push
dec
in
test
sahf
call
sub
cmp
int3
push
in
push
insb
idivl
sbb
cmpsl
subb
fs
lret
or
cs
pop
xchg
pop
jo
insl
pusha
repz
and
or
es
jnp
out
sub
xor
jg
scas
push
adc
xchg
mov
jo
mov
push
push
push
je
cmp
push
or
fwait
gs
or
imul
cmc
inc
mov
push
arpl
cmpsl
add
jmp
pushf
sbb
and
cltd
pop
push
nop
aas
xor
rcll
xor
inc
add
enter
sub
int
mov
push
xlat
adc
into
rorb
in
dec
iret
and
lahf
addb
das
cmpsl
mov
adc
out
pop
sarb
xchg
add
fwait
shl
xor
aas
or
inc
aaa
jo
push
push
and
enter
scas
cmp
fimull
mov
daa
outsl
pop
sub
adc
mov
adc
or
mov
mov
aad
and
xchg
mov
or
or
jns
jo
arpl
mov
leave
lcall
mov
in
sti
mov
nop
iret
mov
jns
or
dec
shlb
xor
xor
push
das
les
mov
adc
mov
and
je
jl
pushf
push
fwait
movsl
mov
scas
sub
sbb
inc
scas
mov
sub
pop
mov
lcall
sbb
addr16
jbe
fsubrl
push
push
jnp
inc
push
mov
aaa
push
ds
js
pop
jmp
insl
outsl
rolb
fiaddl
test
pop
insl
jl
add
mov
add
mov
and
mov
dec
or
js
push
nop
mov
adc
xchg
addr16
adc
adc
jno
fisubrs
dec
mov
inc
out
pop
add
popf
sub
or
mov
add
in
int
fwait
mov
cmpsb
jb
out
lods
xchg
adc
jmp
js
add
xlat
test
loopne
mov
xor
lods
decl
in
loop
mov
jbe
nop
push
adcl
repz
repnz
jecxz
insb
cmp
cli
inc
lods
jmp
cltd
lcall
sub
inc
adc
and
imul
jl
fmul
dec
pop
adc
fdivr
in
adc
shrb
cmp
sbb
add
sub
cld
cmp
bound
rcrl
popa
sti
adc
in
sbb
test
mov
daa
daa
mov
sti
mov
xchg
je
leave
xlat
inc
xchg
insb
data16
js
ljmp
scas
repnz
mov
loop
addb
dec
and
mov
jbe
adc
scas
mov
cmp
jae
jae
fildll
leave
lds
push
mov
enter
in
ret
mov
dec
xorb
jae
cmp
lds
add
dec
test
mov
cmp
jne
lds
cs
xlat
mov
lret
sub
out
movsb
adc
pop
push
sbb
das
dec
shrl
cmpsb
iret
and
sbb
adc
fadds
sub
adc
imull
shl
add
pop
test
loopne
mov
xor
mov
lods
xchg
lahf
sub
pop
fcmovu
shll
fucomi
xchg
jno
mov
push
mov
fwait
mov
dec
jnp
mov
cmovae
rorl
xor
insb
ss
mov
shl
mov
out
mov
ja
adc
dec
jae
rcpps
jmp
insb
pop
mov
and
inc
out
push
sbb
in
test
push
mov
push
xchg
shrl
push
adc
outsl
stos
mov
and
test
loop
xchg
mov
fisubrs
outsb
sub
js
xchg
or
rorb
jl
jmp
in
mov
stos
sbb
mov
cmp
popf
repnz
mov
test
leave
lock
jmp
sbb
pop
pop
out
es
icebp
jb
dec
clc
mov
outsw
inc
cmpsl
scas
stos
pop
int3
adc
add
pop
pushf
jae
sub
js
add
fisubrs
pop
push
and
orb
adc
push
fstpl
stos
and
mov
ja
mov
pop
inc
clc
test
xchg
fcomps
mov
hlt
out
adcl
inc
push
mov
dec
test
inc
inc
dec
xor
ficomps
rorb
testb
rclb
ja
rclb
mov
repz
out
xchg
xchg
jl
jl
add
adc
cmp
fisttpll
loopne
push
jnp
fwait
and
int
mov
in
in
test
xor
scas
mov
mov
cmp
mov
mov
pushf
adc
ss
adc
mov
xor
mulb
das
adc
int
sub
inc
push
xchg
jle
and
pop
ja
idivl
jg
mov
mov
sub
inc
inc
push
sbbl
and
int3
hlt
shrb
push
out
outsl
iret
xlat
jecxz
loopne
gs
clc
cwtl
push
dec
loope
inc
mov
push
flds
adc
mov
cli
mov
ret
xchg
aam
hlt
xchg
adc
sbb
mov
add
jle
or
mov
out
jb
shll
sub
jle
je
add
ljmp
inc
cmp
xor
jne
das
lret
in
adc
mov
sbb
xchg
mov
repnz
adc
jno
add
and
lahf
lret
aas
enter
or
or
clc
sub
leave
testl
cmp
add
xor
mov
jbe
fcomps
das
xor
xchg
test
mov
add
mov
repz
push
fnsave
mov
cmp
mov
mov
push
xchg
dec
dec
scas
popf
andl
rcr
inc
mov
add
xchg
xlat
or
add
nopl
cmpsb
mov
ss
jecxz
or
lahf
inc
in
into
jbe
cmp
and
dec
xchg
sbb
ds
outsb
cmp
sub
push
lahf
out
scas
mov
add
lods
pop
ss
pop
push
mov
out
sub
inc
movsb
rclb
sub
cmp
negl
incl
outsl
out
mov
call
xor
ficomps
sub
fisubrl
ret
pushf
shrb
icebp
pop
push
ljmp
icebp
mov
fdivrl
les
mov
mov
cmc
or
std
int
mov
mov
fildl
add
push
jp
call
lods
test
cli
in
mov
cmp
xchg
daa
pop
fcmovne
popa
push
mov
mov
aam
add
aas
xchg
outsl
lret
daa
mov
push
stos
xchg
mov
lock
scas
cwtl
sbb
push
sub
jns
cmp
insl
mov
fwait
push
xlat
mov
or
movsb
jne
inc
shl
stos
roll
out
inc
adc
popa
pop
mov
movsb
push
sbb
push
scas
mov
jno
jns
out
movsl
or
es
inc
inc
aad
pop
cltd
fyl2x
xchg
or
cmp
cmp
loope
sub
mov
imulb
insb
mov
cmp
stc
mov
bound
sub
adc
inc
jo
xchg
int3
mov
mov
insl
or
mov
sub
rol
hlt
mov
jecxz
jecxz
iret
into
lret
mov
in
cli
mov
jecxz
int3
scas
dec
mov
pop
fldcw
test
adc
dec
lcall
jnp
adc
gs
clc
mov
mov
test
xchg
sbb
pop
xchg
arpl
xor
xchg
xor
jo
ret
sbb
dec
outsb
mov
insl
sahf
repnz
push
pop
xchg
scas
mov
mov
xlat
push
fwait
pop
push
ret
stos
in
gs
subb
sub
aaa
cmp
lods
push
popa
sar
push
mov
cmpsl
mov
inc
outsw
mov
mov
rclb
out
scas
arpl
ljmp
sti
idivl
sti
inc
int3
and
sbb
lret
adc
test
cmp
cli
aaa
mov
sarl
into
out
idivb
nop
dec
and
mov
xchg
cmp
xchg
outsb
ret
aas
pop
and
aaa
xchg
movsb
mov
inc
imul
in
dec
js
das
add
test
ja
lock
pop
out
repnz
xchg
and
ja
data16
xchg
in
in
push
jno
pop
jae
mov
jge
imul
les
sub
jle
dec
lcall
dec
imull
inc
rorl
lret
lret
mov
jle
test
sbb
mov
insl
insb
dec
sbb
dec
pop
lahf
repz
ds
push
pop
cltd
dec
jp
inc
rcr
jmp
adc
xor
jmp
jae,pt
mov
dec
call
test
push
shrb
lds
jne
dec
push
movsl
sub
int
fidivrs
shlb
adc
xor
repz
lahf
mov
loope
or
sbb
mov
imul
shlb
sub
je
in
movsb
xchg
pushf
sbb
xchg
clc
add
std
clc
jnp
out
adc
mov
ja
add
xchg
xor
out
xchg
aam
inc
lcall
mov
clc
fsubrl
sbb
fldenv
popa
xlat
pop
xor
xor
fs
lods
icebp
push
shrb
jns
dec
das
cli
sbb
xor
cmp
lods
iret
lret
or
push
push
mov
cmpsl
in
sbb
scas
mov
jge
int
and
mov
filds
pop
pop
pop
or
pop
mov
inc
jge
leave
push
cmp
mov
adc
and
jo
jae
sub
xchg
je
scas
int
sub
adc
loop
sub
inc
push
jo
js
cs
iret
sub
fmul
or
ret
lret
push
mov
es
xor
push
les
sbb
fs
lret
mov
fxch
icebp
mov
scas
dec
push
mov
and
orl
dec
sbb
push
idivb
aad
jecxz
xor
bound
jg
test
push
aam
mov
jns
fdivrl
adc
test
xchg
adc
shll
mov
xor
stc
daa
push
mov
out
fistps
ja
lret
sbb
cld
sti
push
mov
jl
xchg
hlt
das
cltd
in
fstpt
adc
mov
std
xchg
adc
or
xorl
pop
js
inc
dec
jne
and
lods
popf
stos
bound
jmp
repnz
test
jmp
xchg
cltd
popf
mov
lret
xor
std
pop
sub
inc
js
subb
into
mov
sub
in
fwait
sub
xchg
and
les
mov
mov
into
sbb
fwait
inc
sub
xchg
push
imul
imul
pop
mov
daa
mov
inc
test
scas
arpl
les
mov
xor
pushf
mov
outsl
orb
mov
add
jmp
js
test
bound
xchg
icebp
int
and
aam
fsubrs
outsb
jb
ljmp
ljmp
add
xor
xchg
sub
xor
lret
xchg
add
stc
inc
or
test
in
push
sahf
ret
mov
mov
jle
adc
inc
mov
stos
xor
cwtl
jmp
push
insl
sub
shrl
int3
adc
ljmp
cmpsb
push
lret
sbb
mulb
mov
mov
int3
shll
or
gs
jns
and
push
cli
or
out
xchg
sti
sub
push
xor
push
subb
sub
fninit
mov
mov
xchg
adc
jecxz
add
frstor
sbb
xchg
pop
je
nop
push
cli
lods
into
pop
iret
mov
xchg
pushf
rcll
aas
fwait
mov
cli
xchg
mov
test
mov
fwait
mov
and
and
jl
pop
xor
into
stos
pop
inc
inc
or
and
sbb
and
sub
clc
insl
xchg
add
std
mov
lret
rol
lock
mov
adc
js
mov
andb
les
cmp
mov
icebp
inc
loopne
jne
adc
xor
cwtd
in
jb
xlat
ror
jmp
cmpb
shlb
push
nop
test
xchg
pop
sbb
cs
ficoms
add
imul
xlat
xchg
mov
mov
inc
imul
dec
sahf
loope
jnp
sub
ljmp
and
push
cld
dec
xor
jg
ds
sbb
mov
ret
stos
jae
push
int
add
mov
pop
mov
cmpsl
cmp
sbb
and
dec
sbbb
aaa
dec
pop
out
add
in
pop
jp
jns
mov
jmp
adc
ljmp
inc
insl
xchg
loopne
pop
adcl
mov
adc
jmp
sahf
les
dec
xchg
lods
out
push
data16
push
mov
cmp
inc
test
push
mov
jge
mov
push
in
pop
pop
iret
add
and
cmp
imul
cmpb
addl
jno
repz
cmp
and
push
es
ja
shll
in
cmp
test
outsl
decl
and
pop
mov
jp
push
ss
aaa
xchg
add
stos
sbb
jno
in
dec
mov
cmp
ljmp
sbb
pop
cmp
adc
rorb
insl
push
mul
xchg
es
or
and
adc
push
push
std
movsb
inc
test
mov
icebp
xor
or
test
rcr
stos
xor
lret
gs
push
outsb
sbb
les
jne
push
out
dec
pop
xchg
lret
adc
das
int3
loop
push
dec
dec
loope
mov
insb
mov
pop
sbb
mov
in
dec
adc
addb
addr16
push
xchg
cmpl
sub
insl
jns
orl
mov
lds
call
daa
ret
push
adc
inc
mov
adc
add
js
adcl
mov
mov
dec
inc
mov
push
in
pop
sar
in
stos
sbb
xor
subb
xchg
loopne
cwtl
fidivl
xor
pop
rol
rcrl
scas
dec
bswap
mov
aas
stos
adc
subl
jmp
inc
pop
mov
test
xor
add
mov
pop
nop
test
xor
out
inc
xor
add
pop
icebp
in
ror
push
cmp
and
loope
add
lretw
lea
push
cs
sub
adc
jl
and
icebp
in
push
push
pop
fmuls
stos
or
es
rorb
ss
lods
aas
in
lahf
cwtl
dec
aam
jle
ds
ret
cmp
movsb
andb
pop
je
add
lret
leave
int3
push
repnz
jae
lds
sub
inc
insb
rorl
pushl
mov
push
lea
test
sbb
ret
add
mov
cli
imul
sbb
mov
push
and
stc
pop
notb
jne
xor
pop
sub
loopne
lock
repz
mov
add
test
or
sbb
aad
pop
stos
ret
sub
mov
mov
imul
xor
add
popf
out
xchg
push
pop
setbe
loop
sub
addr16
add
stos
and
jnp
stos
xchg
cltd
insl
xchg
inc
adc
push
neg
dec
xor
lods
sbb
inc
cmpsl
jecxz
push
addl
jnp
push
mov
imul
adc
sub
push
dec
imulb
fimull
push
lods
movsl
adc
sub
xchg
cmp
les
popa
sahf
xor
movsb
mov
rorl
icebp
xor
mov
sub
mov
sub
push
loopne
fisttps
sarl
sub
pop
pop
adc
cltd
out
xlat
aaa
mov
ret
scas
shll
xlat
xchg
dec
mov
jno
mov
leave
ja
stc
push
cwtl
add
lret
insb
mov
in
cmc
xchg
push
cli
pop
outsl
push
mov
inc
cmp
jge
jnp
stos
std
xchg
dec
sbb
cmp
adc
mov
pusha
jle
jbe
movsb
repz
dec
and
cltd
jno
add
xor
cs
out
push
icebp
and
cmp
sbb
mov
dec
std
aam
xor
mov
push
or
add
enter
push
insl
into
arpl
jle
mov
mov
sub
pop
lea
sub
adc
jle
and
mov
jo
mov
ja
aaa
aaa
add
clc
call
cmc
jns
xchg
shll
movsl
movsb
rol
scas
sbb
sbb
inc
popf
outsl
pusha
aaa
jnp
enter
ds
adc
xor
punpcklwd
addr16
icebp
aas
lods
xchg
stc
jae
ljmp
mov
and
inc
jp
out
add
fisttpl
shll
outsb
leave
jae
mov
push
enter
popa
das
push
jns
mov
into
xor
shlb
adc
stos
adc
dec
aam
mov
pop
ficoml
rcll
or
fdivs
pop
push
add
push
jmp
das
mov
xchg
jno
sub
loop
imul
pop
cmp
aad
in
xchg
or
nop
data16
inc
mov
jle
push
xchg
cmp
dec
jge
ljmp
xor
xor
sub
testl
popa
xor
xchg
dec
mov
jb
dec
int3
xchg
sarl
jnp
push
out
pop
add
lods
rep
pop
fs
adc
mov
xchg
adc
pop
mov
push
pop
icebp
outsb
jno
pusha
sub
adcl
xchg
repz
fdivrs
adc
in
dec
adcl
stos
sub
pop
mov
faddl
sub
cmc
jp
cmp
mov
mov
mov
sbb
jl
loopne
sbb
aas
sub
mov
mov
lret
inc
cwtl
jp
lods
in
std
stos
dec
jg
dec
mov
test
inc
popa
addr16
xchg
add
shl
and
xor
mov
inc
dec
frstor
js
aam
ja
fs
xchg
gs
sti
dec
adc
test
mov
mov
sub
mov
cld
and
or
imul
outsb
dec
jge
mov
push
dec
pop
ret
pusha
out
mov
das
test
xchg
pop
das
pop
mov
xchg
adc
pop
sub
sarl
loope
mov
or
cmpsl
push
and
inc
adc
test
xchg
jge
rcr
or
loop
loope
mov
fidivrs
add
or
pop
jns
inc
mov
add
mov
stos
mov
cmp
ljmp
jge
popf
adc
dec
clc
adc
cmp
mov
lret
hlt
inc
call
rcrb
jge
pop
lea
hlt
lods
push
ljmp
jbe
adc
movsb
jl
gs
xor
adc
shrb
call
push
fs
sbb
mov
ficompl
jns
loopne
push
bnd
jge
add
adc
cli
jg
lret
in
xor
mov
and
sub
jecxz
pop
ljmp
push
rcl
mov
mov
fstpt
cmp
std
in
dec
mov
lock
sahf
xchg
out
jno
icebp
iret
shlb
cmpsl
push
sar
xchg
or
jo
xchg
inc
mov
cmp
std
rorl
lods
cmp
cmp
inc
sub
jnp
mov
bound
add
and
pop
fisubrl
je
push
pop
sub
cmp
or
fnsave
lods
cmp
test
lea
mov
mov
mov
mov
xor
or
mov
xor
aas
xor
gs
mull
jo
and
mov
mov
sub
dec
repz
adc
sub
xchg
mov
xchg
inc
in
push
dec
xchg
fsubrs
cmc
push
in
pop
in
subl
int3
mov
push
repz
popa
lods
ret
mov
div
lds
cmpsb
test
aaa
xlat
ret
mov
leave
ficomps
push
adc
pusha
adc
jp
insl
jg
loop
and
sahf
enter
xor
jp
lahf
cmp
dec
outsl
mov
scas
ss
xor
inc
mov
push
shll
sarb
out
loop
insl
pop
sub
pusha
push
and
pop
cmp
leave
sbb
les
sub
dec
cmc
lds
daa
mov
arpl
xchg
add
inc
inc
add
fidivs
iret
ja
bound
sbb
lret
adc
mov
adc
stos
in
mov
cwtl
fcomp
mov
out
loopne
mov
cmp
xor
add
mov
cmp
mov
pop
adc
in
add
mov
fidivrl
xlat
addr16
shrl
aam
sbbb
cltd
sahf
lcall
lock
mov
and
xor
jp
push
movsl
mov
sbb
and
nop
xor
sbb
pop
mov
jns
xor
in
insl
loop
lods
ficomps
mov
scas
sub
cmp
mov
push
scas
cs
jnp
pop
dec
mov
pop
iret
or
mov
notl
cmc
das
jbe
les
popf
lods
icebp
push
lret
frstor
cmp
mov
or
es
adc
imul
mov
sahf
andl
sub
dec
mov
ja
inc
adc
ljmp
repz
popa
dec
fists
fwait
test
in
xor
push
mov
push
inc
nop
add
js
loop
and
jne
pop
xchg
push
mov
ljmp
push
push
xchg
test
mov
mov
lahf
aam
cmp
push
jae
lret
xor
ret
adc
mov
pop
push
sub
fstp
bound
iret
mov
jb
jmp
sub
cwtl
ficoms
mov
stos
fisubl
shrb
in
push
xlat
orl
pop
mov
mov
add
testl
ja
fisubrl
sti
mov
mov
xor
rsqrtps
xor
add
mov
nop
lret
clc
adc
repnz
ss
imul
sarl
fs
add
pop
mov
mov
adc
push
shll
pop
mov
cmc
sub
ljmp
ds
js
gs
jge
lods
pop
mov
imul
js
lahf
cld
divl
icebp
mov
mov
mov
mov
lret
imul
dec
dec
cmpsb
les
mov
mov
jecxz
mov
push
dec
ret
jg
lods
cs
xor
cmp
out
lds
and
jge
nop
adc
outsl
idivl
mov
push
int3
sti
pop
pushf
lods
scas
divl
popf
mov
test
pop
inc
adc
pop
scas
push
jb
inc
jb
aas
fsubrs
dec
rclb
dec
mov
push
stc
mov
jno
push
mov
xor
fbstp
and
aaa
jg
aas
mov
jbe
push
lods
xchg
mov
add
lret
ret
add
repz
stos
std
xchg
adc
dec
cwtl
mov
les
cmp
dec
pop
push
dec
mov
push
subb
out
jmp
pushf
rcll
sarl
mov
repz
mov
clc
ret
and
mov
rorb
das
or
gs
xor
sbb
js
lea
pop
pop
in
cltd
clc
and
adc
or
in
jb
xlat
sub
push
fistps
insl
mov
push
xchg
push
dec
stos
sarb
insb
add
xorl
xchg
int3
jecxz
ja
out
push
jne
sbb
add
rclb
stos
jo
jp
pop
xchg
mov
ja
in
loop
aad
cmp
clc
imul
popa
xor
sahf
jmp
cld
test
jge
hlt
jne
sub
pop
jmp
ds
cmpsl
pop
stc
jbe
sub
jbe
mov
jnp
mov
pop
je
add
sub
or
jmp
std
add
loop
sub
nop
xchg
cltd
adc
lea
aad
sbb
inc
fcmovnb
cmp
xor
jp
pop
jae
rorl
pop
push
xchg
sbb
rolb
xor
jns
xchg
das
aam
dec
cld
sub
inc
divl
sbb
or
xor
aas
fstp
mov
sbb
stos
push
out
xchg
sbb
icebp
fiadds
repnz
pop
test
cmovne
cmp
daa
je
imul
lock
loop
push
adc
jmp
popf
jmp
fs
pushf
aam
sti
or
lods
js
ret
jecxz
mov
sahf
pop
jmp
xchg
mov
mov
icebp
idivb
iret
cltd
int3
dec
jecxz
js
pop
push
push
pop
sahf
push
jmp
inc
or
mov
adc
push
pop
inc
push
jo
int3
xchg
xor
insl
and
shll
in
imulb
jl
add
sub
xchg
addr16
add
imul
sub
iret
sub
xchg
cmpsb
in
sbb
in
push
bound
jne
mov
or
sbb
ret
pop
fsubrl
or
addr16
out
push
clc
movsb
sbb
xor
and
movsl
cmpl
lods
cs
or
out
jae
jne
push
sbb
push
cmpb
aaa
mov
aas
xchg
xor
imul
andb
mov
aaa
jnp
test
stos
xchg
cmp
lea
subb
xor
sub
adc
push
subb
adc
subb
call
in
sub
sbb
jbe
ret
push
bound
mov
xchg
xor
lahf
gs
dec
add
imul
jp
call
pop
stos
xor
mov
ljmp
shll
adc
jns
es
or
mov
xchg
mov
movsl
scas
push
mov
push
cs
fcmovne
test
cmpsl
mov
fists
cmp
cmp
movsl
xchg
sub
cmp
ud2
aam
arpl
adc
pop
push
cltd
in
or
mov
nop
call
cmp
inc
leave
imul
push
insb
mov
movsl
loopne
pop
mov
das
jmp
jmp
int
sub
js
lahf
data16
lcall
leave
iret
cmpsl
fnstenv
shrl
mov
push
jp
inc
out
daa
imul
rol
xor
stos
in
cmpsl
fidivrl
jmp
add
decb
gs
mov
sbb
cmp
sbb
xor
hlt
xchg
inc
pushf
filds
pop
ja
pop
sbb
outsl
in
lret
in
cmp
ficomps
mov
pop
mov
fwait
sbbl
std
daa
divb
dec
or
pop
mov
adc
adcb
sbb
adc
hlt
sbb
out
and
inc
xor
cld
lds
f2xm1
inc
xlat
enter
lea
pop
lods
gs
mov
scas
pop
add
js
and
dec
ds
push
jns
adc
out
cmp
push
enter
jnp
jbe
jno
xchg
add
hlt
test
xor
cltd
fnstcw
push
jo
cwtl
xchg
pop
inc
sub
and
add
pusha
lret
sub
mov
into
xchg
cmpsb
gs
fstpl
js
mov
dec
stos
cmc
fadd
je
mov
fmulp
xor
pop
cmp
popf
je
mov
cmp
mov
shll
or
aas
mov
xchg
out
fs
or
cmp
ret
ds
imul
repnz
gs
out
mov
mov
js
outsl
outsl
cli
jne
xor
popf
sti
lcall
fwait
xchg
stc
jl
add
mov
jecxz
aam
push
into
cmp
pop
mov
push
dec
ret
pop
mov
adc
jb
lahf
std
pop
pop
mov
adc
je
push
sub
mov
shlb
dec
pop
cmp
mov
insl
sahf
push
into
pop
lahf
jl
test
inc
sub
fnstcw
cmp
xchg
in
or
or
in
test
outsl
iret
xchg
popaw
ret
jno
lock
jae
mov
mov
fwait
cmpsb
jno
rcr
mov
dec
gs
test
test
cli
loope
popa
adc
xchg
jbe
jl
jne
mov
mov
nop
and
or
dec
xchg
cli
inc
xor
xchg
xor
inc
push
mov
pop
shll
stos
int
jae
in
mov
fsubs
stos
daa
inc
mov
stc
rclb
or
bound
jle
pop
in
js
leave
adc
xchg
stos
mov
loop
adc
xchg
jg
push
sbb
add
andl
adc
pusha
clc
fwait
xchg
iret
adcb
repz
test
pop
shll
mov
push
fnstcw
sub
movsl
pusha
inc
lret
jp
add
or
xor
xchg
xor
mov
pop
daa
xor
mov
addr16
ffreep
pop
outsb
lods
jp
insl
rcll
sub
lods
and
std
jle
xchg
xchg
lahf
cmc
test
aam
stos
repz
popa
lods
test
mov
jecxz
test
push
mov
xchg
xchg
movsb
adc
pushf
or
lcall
inc
insb
hlt
mov
dec
in
and
dec
xchg
pop
dec
aas
sahf
popa
xchg
pop
out
movsl
in
lock
mov
out
xor
sbb
stos
out
in
outsl
mov
in
xchg
pushf
jne
sbb
and
dec
mov
cmpsb
test
push
fmull
mov
and
mov
sub
lcall
in
sub
xchg
out
cmpsb
add
loope
lahf
nop
fiadds
movsl
sub
test
pop
jecxz,pn
jmp
mov
ljmp
idiv
adc
insb
lods
push
insl
dec
in
sub
mov
sub
jno
ret
int3
repnz
out
sbb
push
mov
dec
rorb
jns
mov
pop
lods
and
cld
sarb
push
fsubrl
inc
ror
pop
testb
lock
jno
sbb
pop
ja
mov
and
sub
dec
rorb
mov
stos
sarb
and
sbb
lea
xchg
dec
jae
bound
push
dec
out
jno
inc
cmpsb
clc
ljmp
xchg
pusha
andb
mov
cmpsl
cltd
xchg
jecxz
mov
lock
xchg
cvtps2pi
mov
cmp
outsb
mov
cmp
gs
in
xchg
and
pushf
es
mov
or
out
lods
sbb
pop
movsl
ret
inc
xchg
andb
js
loope
push
repnz
jg
bound
push
jle
pop
push
adc
fsubrs
xchg
sbb
iret
xchg
mov
lock
xor
push
into
enter
repnz
cld
xor
sbb
push
pushf
adc
cmp
and
pop
xchg
sub
jo
dec
icebp
into
mov
ret
add
cwtl
ja
push
inc
mov
insb
mov
push
pop
outsb
ljmp
dec
out
inc
dec
pop
popa
movsl
sub
lcall
sub
jo
inc
icebp
repz
xlat
xorl
sbb
adc
das
jnp
mov
jne
cmp
pop
jno
adc
push
je
and
sbb
bnd
js
icebp
cld
clc
outsl
bound
sti
push
sub
shr
jnp
ret
std
xchg
mov
or
push
clc
sub
lcall
arpl
jb
aad
lahf
pusha
lods
fcomp
mov
sbbl
and
enter
sbbl
cmpsb
cmc
jp
iret
push
jmp
pop
movsb
roll
repz
cmc
xor
sub
adc
dec
inc
dec
adc
addr16
call
or
inc
pop
and
xchg
ljmp
test
jge
and
jo
jle
xchg
xor
bound
sbb
sub
fidivrl
or
cmpsb
imul
test
aad
pop
in
arpl
mov
stos
push
mov
adc
push
scas
pushf
out
jnp
mov
lcall
clc
add
jge
into
add
pop
jmp
inc
cmp
sbb
cmp
mov
xor
in
mov
dec
dec
pop
dec
jo
push
aaa
imul
rol
mov
xchg
das
adc
add
jmp
sbb
rcrl
inc
lds
push
cmp
bnd
cwtl
jle
sbb
cmpl
movsb
dec
push
and
inc
imul
cli
cs
lret
test
mov
pop
sbbb
pop
enter
stos
cli
inc
dec
insb
push
jecxz
sub
jns
pusha
dec
adc
fsubrp
enter
xchg
cwtl
fisttpl
pop
lods
nop
pop
rcr
pushf
mov
loope
lret
inc
add
fadds
cmp
xchg
sbb
iret
pop
fldt
or
or
sbb
hlt
leave
jecxz
adcb
add
cmp
pop
gs
sbb
jno
mov
mov
or
fistpll
imul
add
std
pushf
cmc
fstl
cmp
addb
push
xchg
aas
les
xchg
inc
mov
roll
cltd
popa
negb
push
shrd
adc
dec
fnstenv
mov
mov
pusha
sti
adc
fistl
ret
out
out
es
mov
dec
push
and
lock
mov
mov
or
mov
mov
sub
loope
xchg
add
stc
cmp
clc
jmp
ret
insl
xor
addr16
in
aaa
les
insl
or
mov
aaa
in
push
pop
out
jae
arpl
mov
test
push
or
rcl
sbb
push
imul
cmp
adc
nop
sbb
inc
jbe
mov
sahf
or
iret
mov
sub
dec
push
loopne
adc
sub
into
fbstp
loope
pop
lcall
insl
sub
int3
in
pop
outsb
or
pop
push
icebp
inc
mov
mov
ljmp
add
test
mov
mov
cmp
in
sub
js
or
jnp
std
das
fcmovne
add
lahf
scas
mov
out
lret
jae
mov
loope
loop
pop
jecxz
sub
mov
sub
jmp
push
leave
fdivr
scas
ret
repnz
lahf
and
push
pop
and
inc
fcoms
xor
mov
int
clc
jg
dec
pop
cmp
pop
fiadds
jbe
lret
ja
or
and
lret
or
xchg
scas
push
movsb
lods
or
mov
popf
xchg
jno
fsubs
mov
xchg
shlb
aad
mov
sub
test
std
fcomps
out
mov
adcb
adc
mov
cmp
test
cmp
push
daa
bound
mov
popf
div
or
scas
imul
lahf
inc
pop
into
fimuls
icebp
mov
sub
and
mov
aaa
jnp
jmp
mov
fldcw
das
imul
and
lock
jp
jecxz
push
adc
xchg
sub
clc
mov
std
fimuls
push
xor
rclb
in
jo
pop
mov
lcall
mov
xchg
cmp
std
call
mov
in
rcrl
lcall
xchg
sbb
push
xor
xor
mov
dec
inc
loop
lods
lahf
and
add
or
lahf
adc
lock
cmp
and
fstps
arpl
das
pop
fdivrl
and
movsb
lret
cmc
pop
pop
cmp
aaa
daa
add
adc
xchg
xchg
mov
movsb
xor
or
sbb
shr
in
pop
xor
jo
push
jge
push
xchg
xchg
cs
pop
mov
cmp
push
in
scas
loopne
test
stc
pop
sub
idivb
mov
pop
fdivs
sarl
add
or
or
sub
int
push
dec
xor
add
add
jle
sbb
add
das
les
fcomip
scas
ret
xchg
add
das
cltd
push
pop
inc
sbb
and
push
repz
out
ficomps
or
push
cmp
adc
cmpsl
aaa
lock
xchg
call
mov
leave
pop
ds
in
pop
mov
in
inc
lock
aam
sub
imul
das
je
adc
and
fincstp
xor
leave
push
subb
orl
xor
xor
cmp
lods
pop
dec
jb
dec
jno
movsl
xorl
fnstcw
movsb
inc
scas
pop
mov
in
inc
daa
adc
orl
adc
shrb
out
jecxz
sub
adc
xor
or
sbb
jns
mov
mov
xchg
cmpsb
mov
out
push
shrl
movsb
scas
or
dec
sub
fcoml
mov
inc
imul
mov
adc
out
pop
imul
dec
jo
pop
pop
aaa
mov
jp
push
push
sti
inc
mov
inc
and
ror
sbb
imulb
pop
mov
inc
xchg
push
sbb
inc
mov
mov
rclb
insl
add
inc
jo
inc
sub
divb
repnz
mov
sbb
mov
hlt
inc
aam
sub
mov
and
stos
fcoms
mov
push
jbe
std
sbb
out
xor
xchg
adc
mov
xchg
push
fists
sub
imul
dec
cmc
jmp
in
cmpsl
dec
bnd
or
popa
push
scas
push
out
test
mov
call
stos
std
mov
addr16
stc
mov
jo
jge
adc
fldt
aas
sbb
flds
dec
mov
mov
dec
jmp
push
mov
notl
fcmovnbe
jecxz
shlb
vpaddb
jg
mov
out
mov
mov
sbb
in
xor
fcoms
pop
outsl
dec
cmc
fstpt
sub
push
jae
inc
add
and
movaps
inc
and
jo
mov
cmpsb
jbe
fwait
lcall
imul
iret
pop
cmp
adc
cmp
mov
mov
lret
addr16
dec
data16
mov
out
xor
sbb
les
shl
imul
add
imul
aam
adc
aad
jne
fisubrs
jmp
sub
xchg
rcr
mov
sub
test
jno
scas
out
or
test
fcoms
mov
mov
call
inc
test
scas
sahf
mov
xor
js
inc
push
push
sbb
shrb
push
jmp
jmp
repz
xchg
adc
cmp
repnz
pusha
fisttps
mov
sbb
xorl
fdivrl
xchg
loop
hlt
mov
and
pop
xchg
inc
addr16
xlat
mov
stc
decb
and
sbb
std
push
jecxz
push
lods
and
inc
sahf
mov
push
push
jle
jae
cmpsl
mov
popf
nop
mov
mov
sub
jp
lea
ret
mov
xchg
fiadds
sahf
imul
jl
outsl
fwait
push
repnz
in
nop
std
or
pop
stos
fwait
andl
jle
loope
xchg
sahf
sbb
in
fsubrl
scas
add
outsb
sbb
lretw
and
and
scas
push
pop
fidivs
push
dec
iret
hlt
push
mov
mov
cmpsl
ja
in
inc
pop
and
jnp
fldenv
repz
clc
pop
dec
adc
sarb
repnz
nop
cli
xchg
je
pop
adcb
jno
xchg
dec
dec
push
or
test
cs
lods
adc
sbb
stos
or
popf
xchg
stos
testl
lods
mov
mov
inc
call
add
push
lods
adc
test
movsl
push
mov
xchg
movsb
lods
mov
adc
rorb
sbb
and
arpl
or
lea
outsl
jb
popa
sub
inc
stos
rolb
std
mov
pusha
je
hlt
sub
cmp
add
add
mov
mov
imul
shrl
sbb
or
in
movsl
pop
in
cmp
insl
jp
ror
mov
add
scas
fwait
fs
cmp
inc
xchg
test
sbb
div
popa
mov
loope
push
cmc
outsb
sbb
aas
push
fimuls
nop
mov
sbbb
jne
lods
mov
push
mov
stc
xchg
xchg
inc
jae
lods
add
cmpsl
mov
sti
shrl
aas
fisttpl
es
scas
shlb
sub
mov
and
cli
outsb
je
or
lea
xor
aad
into
dec
inc
mov
inc
add
cwtl
jae
fcoms
jle
or
pop
cmp
cli
push
jae
test
xor
pop
stc
es
insb
sti
cmpsl
or
xorl
aaa
push
pop
push
imul
enter
sbb
cs
xchg
pop
cmp
mov
sahf
loope
jle
xchg
in
sbb
pushf
ss
jb
push
nop
or
or
pop
int3
roll
movsb
or
and
orb
mov
pop
mov
dec
call
or
jmp
and
xor
mov
sub
out
jp
repz
fcmovnbe
mov
pop
popf
mov
mov
repz
movsb
jle
jge
pop
out
mul
out
sbb
and
mov
cmpsb
jl
and
cmc
nop
jmp
addl
sti
xor
jb
in
sahf
inc
inc
xchg
sbbb
or
mov
sti
jmp
and
and
fistpl
cltd
sbb
arpl
cmpsb
lods
jb
or
addr16
push
stos
js
cmp
add
add
pop
dec
in
frstor
or
sub
outsl
xchg
cmp
test
fmull
jmp
mov
or
mov
int
loopne
daa
pop
movsl
cmp
int3
and
jno
xor
pop
setge
cs
stos
inc
cmpsl
cmp
jp
cmpsl
fwait
and
jp
mov
push
dec
daa
cmp
push
je
or
or
fcompl
lods
adc
mov
loope
sbb
and
inc
cmp
js
test
and
sbbl
or
cmp
sub
dec
ret
cli
pop
dec
popf
icebp
cli
xchg
adc
aad
aad
sub
push
sub
xor
outsl
insb
popf
mov
inc
inc
xor
rcl
mov
lea
fld
xor
or
pop
enter
sbb
mov
jmp
mov
adc
mov
mov
sub
add
sub
dec
add
es
and
mov
dec
push
xor
movsl
jg
pushf
aas
and
int
add
loop
jno
loope
mov
loope
push
jl
in
push
into
add
bound
jg
push
cwtl
fnsave
jno
or
dec
xor
cld
add
xchg
rcr
mov
data16
push
scas
stc
xor
push
mov
gs
mull
adcb
jne
jge
push
xlat
xchg
jp
and
dec
adc
lret
cmpsl
sbbb
xchg
or
mov
divl
incl
pop
sahf
in
or
cli
push
jle
jbe
mov
mov
loope
bound
fcoml
or
lds
jg
dec
jbe
xor
mov
cmpsl
sub
dec
cmp
in
pop
orb
in
ss
jae
add
xchg
and
in
xchg
cmpsb
xchg
idivl
movsl
call
xchg
aam
aam
enter
mov
movsb
xor
negl
cmp
push
pop
cld
adc
mov
mov
inc
int3
pop
jne
in
sbb
test
addr16
mov
add
dec
or
stc
daa
xor
pop
pop
or
jmp
jecxz
add
scas
testb
daa
loope
popa
add
xchg
pop
addr16
iret
sub
cmp
cs
add
jle
push
bound
enter
inc
add
lcall
mov
cmp
dec
mov
data16
push
cmp
aas
shrb
outsl
loop
test
out
push
aaa
rolb
mov
inc
out
clc
push
pop
loop
add
pop
stos
push
mov
xchg
mov
rorb
push
popa
and
fs
push
mov
pop
jmp
adc
xchg
xor
ja
fucomp
shlb
xor
cwtl
sub
dec
fisubrl
sbb
and
inc
xchg
ds
jne
mov
dec
aaa
mov
fwait
ds
int3
dec
mov
sbb
xor
and
xchg
sbb
stos
and
out
leave
dec
inc
push
dec
out
sub
das
popf
jge
lods
pusha
pushf
aam
inc
add
push
xchg
cmp
pop
je
aam
lock
les
push
mov
or
loop
push
pop
fs
arpl
pop
pop
test
int3
repnz
insb
jbe
inc
mov
das
loop
fucomi
cld
outsl
js
add
jns
clc
cs
nop
test
push
cmp
push
cmpsb
cmp
jnp
dec
pop
push
jb
ret
add
mov
ret
test
pop
lock
lock
mov
sub
and
fwait
in
mov
dec
add
aam
loop
stc
pop
mov
leave
xor
fsubp
addr16
cmp
push
js
leave
pop
nop
mov
add
imul
push
xor
xchg
sarb
pop
fsubrl
out
jle
stos
mov
dec
divb
inc
ret
lock
into
adc
add
imul
cmp
jns
cmpsb
enter
mov
fildl
mov
pop
out
jns
hlt
hlt
lea
mov
mov
dec
push
sbbb
pusha
mov
mov
shrl
icebp
xchg
shrb
pop
cmp
icebp
adcl
incl
popl
rcll
xchg
cld
inc
fldcw
mov
ja
fdivrl
fadds
xchg
cmpsl
mov
cmp
push
mov
fwait
push
sahf
gs
scas
push
mov
mov
stos
sbb
xor
and
fsub
mov
in
xchg
add
add
xor
sbb
sub
mov
mov
mov
add
add
test
ret
dec
fidivs
jo
and
jg
jmp
pop
pop
loope
xor
lds
xor
jge
or
fsts
jb
or
add
push
xchg
jno
push
push
mov
movsb
jnp
cmp
rcll
nop
jl
pop
dec
lds
and
outsl
nop
lret
xor
cmpsb
xchg
out
popa
push
stc
push
sub
xor
andl
shll
orb
loopne
in
pop
out
imul
cltd
aam
popa
std
pop
sbb
jecxz
popl
arpl
and
mov
xchg
test
xor
add
dec
and
and
add
enter
jle
dec
cmp
aaa
stos
negb
mov
out
pushf
cwtl
inc
sarb
insb
mov
sahf
jne
cwtl
xchg
pop
imul
pop
cmp
subb
enter
mov
popa
jnp
out
movsb
add
xchg
cltd
add
int
inc
call
std
in
mov
xor
fwait
mov
push
mov
fidivrl
dec
mov
mov
cwtl
fidivrs
jae
push
xlat
nop
inc
scas
mov
push
adc
xor
dec
mov
xchg
dec
les
inc
mov
fcomip
cmp
inc
fstl
push
sbb
push
cmc
and
lret
lods
aaa
aaa
pop
cltd
into
addl
mov
and
js
or
xor
out
lock
mov
je
adc
push
mov
iret
scas
mull
cmp
mov
cmp
add
mov
loopne
add
mov
call
stos
ja
inc
lea
pop
jno
pop
rol
enter
sbb
scas
pop
clc
or
ret
cs
adc
push
jp
in
loope
mov
or
imul
les
inc
mov
add
mov
push
es
imul
mov
xor
add
mov
jl
jbe
in
push
imul
in
lock
cmp
or
pusha
stos
fs
test
sti
bound
jle
pop
test
loop
fcoml
adc
pushf
sub
test
adcb
xor
lods
pop
fmuls
movsb
push
push
mov
xchg
adc
in
sub
add
adc
cltd
das
jp
mov
bound
push
int3
push
cmpsb
xor
mov
test
jnp
adc
stos
sti
dec
aam
pop
loop
inc
rclb
jle
mov
mov
rorb
xor
mov
test
mov
fdiv
inc
or
cmp
add
mov
sahf
adc
push
jbe
xor
repnz
popl
add
lods
sti
leave
mov
fadd
jecxz
call
push
cmpsl
xchg
movsb
pop
pop
jo
pop
cmc
cmp
sbb
dec
loop
das
mov
lret
enter
push
mov
mulb
and
xchg
add
mov
bound
sbb
jb
out
add
sub
or
imull
mov
or
mov
orb
repnz
fmul
and
xchg
jl
decl
mov
ljmp
xchg
add
xchg
mov
adc
fisubrs
mov
or
hlt
lea
loopne
pop
adc
std
stos
xor
orl
xor
mov
pop
pusha
or
test
sbb
add
pushf
mov
jne
adc
cmpsb
arpl
jle
push
adc
pop
xlat
test
lds
sbb
xchg
and
add
mov
les
inc
pop
cltd
fistpll
imul
jns
repz
jp
and
adc
loop
mov
in
fsubl
pop
inc
jb
mov
std
jmp
lds
pop
ja
fistpl
in
shl
add
shll
out
int
dec
test
pop
pushf
pop
ljmp
jnp
push
cs
inc
js
jb
mov
add
mov
or
scas
in
stos
cmp
or
lods
dec
or
or
push
add
cmpsb
setb
xchg
xor
pop
aad
pop
mov
cmc
push
fiadds
lahf
call
and
int3
jecxz
arpl
les
in
push
push
lock
jp
xor
test
jl
rolb
sbb
cwtl
inc
imul
shl
stos
popf
out
test
fbstp
cmpsl
mov
pop
das
pop
xchg
cmpsl
or
cmc
stc
jne
loopne
sub
ds
push
jmp
mov
cmpsb
pop
dec
imul
xchg
lahf
in
lret
ror
and
jle
xor
mov
mov
roll
scas
dec
lock
or
ljmp
ds
xor
shll
hlt
and
jns
test
jge
add
es
dec
jge
pop
mov
pop
fistl
xchg
push
xlat
mov
jg
aam
mov
jnp
sbb
in
inc
cmpsb
adc
test
push
adc
sbb
sbbb
stos
pop
add
int
or
cltd
or
or
cmc
sub
out
mov
push
subb
push
sbb
stos
pop
inc
lahf
add
inc
jne
fiaddl
lods
repnz
pop
cmp
addb
les
jo
add
sub
xlat
pop
add
shl
sub
pusha
pop
or
pop
push
fdivs
lock
les
out
and
leave
ret
xor
mov
push
rcrl
dec
aas
cmp
comiss
or
incb
ljmp
shll
jecxz
cmp
ja
push
dec
loope
ret
into
cmp
pop
sbb
cmp
push
nop
mov
ror
repnz
aad
fstps
out
outsl
or
xchg
mov
mov
inc
js
adc
inc
int
sub
in
or
dec
stos
cmp
outsb
xchg
aaa
cmp
or
test
mov
push
in
inc
jb
imul
shrb
inc
mov
inc
pop
xlat
stos
shll
mov
shlb
jl
or
iret
imul
aam
rcrl
aaa
push
cwtl
mov
adc
xor
sub
fmull
sub
movsl
pop
or
mov
jg
push
xor
out
imul
dec
push
repz
ret
sbb
repz
jae
dec
ret
adc
call
testb
jecxz
dec
sub
cmp
roll
sub
jnp,pt
lahf
std
popf
pusha
jecxz
mov
rol
mov
test
stos
and
out
scas
aad
jle
stc
jnp,pn
pop
cmp
mov
outsb
mov
push
mov
adc
inc
test
and
dec
loope
in
cli
test
jmp
inc
xor
adc
test
dec
adc
test
insl
push
hlt
fidivl
dec
jns,pt
xor
mov
mov
pop
lock
jmp
push
jge
fwait
cltd
stos
out
movsl
rclb
push
and
ret
movsb
push
jns
mov
cli
out
add
inc
push
dec
cs
lds
in
int3
inc
lret
or
gs
add
movsb
xor
mov
pop
sbb
popf
negb
xor
dec
xchg
aad
xlat
or
pushf
jg
cmpsl
sub
sub
shr
jb
or
jb
mov
mov
or
dec
mov
and
jmp
int3
mov
push
pushf
aad
xor
cmp
mov
xchg
shlb
out
fistps
and
cli
adc
jmp
pop
outsb
cmp
jo
int3
imul
pop
dec
fcomi
loope
dec
roll
lahf
stos
lret
and
leave
repnz
sti
test
mov
fwait
loop
cmp
lret
mov
mov
jne
loop
pop
inc
inc
insl
jp
mov
out
in
xor
in
sbb
sub
push
push
dec
shrb
inc
pop
sbb
and
add
mulb
aad
gs
ficompl
xor
jne
stos
xchg
addr16
nop
mov
daa
repnz
popa
pop
dec
and
ljmp
fs
inc
dec
dec
push
cltd
push
enter
mov
movb
pusha
sub
sbb
sub
nop
fs
pop
movsl
rolb
and
jae
out
fsubp
adcl
xchg
jns
into
dec
or
xor
adc
xchg
ror
lods
bnd
sub
adc
mov
xlat
jecxz
leave
pushf
movsb
ljmp
jb
mov
fstl
clc
mov
lcall
and
rorl
or
sub
add
inc
ficomps
adc
push
lret
shr
fcomi
xor
add
adc
in
std
ja
mov
adc
jns
pop
into
adc
or
das
sbb
pushf
and
cmpl
jno
sub
clc
inc
leave
push
push
mov
outsl
mov
mov
repnz
xor
je
dec
add
sub
loope
cmc
outsb
xchg
lods
aaa
jg
das
dec
and
jl
push
and
aas
jp
cli
ljmp
mov
int
cmp
flds
pushl
sub
fistpl
pop
dec
adc
movl
lcall
fnstsw
scas
lods
jmp
rorb
sub
daa
or
loopne
addb
jbe
inc
movsl
and
push
sahf
nop
pop
cmp
sbb
test
clc
and
jnp
lret
hlt
pusha
ss
test
inc
push
inc
sbb
cltd
mov
popf
sub
mov
xchg
add
je
int
aad
cmp
sahf
mov
je
loop
push
cwtl
jecxz
push
push
inc
xor
dec
adc
aaa
sbb
dec
mov
xchg
xor
test
in
push
sbb
iret
push
jle
mov
cmp
push
repnz
xor
pop
cmp
std
daa
sarb
nop
stc
mov
std
sarl
pop
jecxz
cltd
fisubl
jle
fmull
xchg
fcomps
push
dec
adc
pop
addb
mov
lret
sub
lcall
and
ja
decl
shr
ffree
neg
sub
stc
scas
and
iret
int3
loop
mull
add
cmp
jb
adc
into
mov
and
sub
lods
adc
mov
adc
test
sub
flds
inc
jmp
dec
dec
sub
orb
stc
jp
addl
into
std
rcr
and
jmp
aaa
sbb
inc
sarb
icebp
or
lea
mov
sbb
loope
imul
test
dec
fiaddl
int3
and
mov
mov
out
rcl
andb
pop
inc
dec
shlb
push
fidivs
push
mov
xchg
popf
addb
cmp
pop
jne
sbb
sahf
incl
xchg
mov
dec
scas
test
add
mov
cmp
arpl
inc
enter
mov
cs
adc
xchg
lcall
packuswb
lods
icebp
or
adc
cmp
sar
sub
xchg
loop
jmp
sub
push
pop
test
and
cltd
sbb
mov
mov
add
into
add
jns
push
movsl
push
loopne
gs
sub
push
push
jo
or
mov
xchg
mov
pop
mov
aam
out
or
es
sub
and
rcll
stos
int
stc
jmp
scas
mov
cmpsl
and
das
jmp
out
push
cmp
ja
jge
aad
cmp
popf
sub
ljmp
das
in
xchg
ds
pop
jnp
jg
lahf
mov
or
jmp
sti
xor
dec
xlat
mov
enter
stos
cmp
mov
ja
je
decb
jl
pop
addr16
pusha
outsl
sbb
test
pop
push
xor
jnp
sbbb
kmovb
push
pop
ja
nop
add
lock
test
dec
xorb
mov
adc
je
adc
mov
hlt
mov
sarb
cld
jmp
jnp
das
in
rcl
sbb
mov
lret
test
mov
andl
or
stos
idivb
mov
popa
push
fisubrs
sub
inc
xchg
mov
aad
xor
pop
push
pop
pop
xor
mov
jge
inc
lcall
repz
xlat
stos
fsubrl
push
stos
test
or
int
mov
push
lods
inc
push
addb
push
bound
adc
rclb
icebp
add
aas
lcall
sbb
scas
sbb
xchg
xor
sbb
and
mov
shll
lahf
pop
lahf
ja
push
mov
jmp
cwtl
dec
adc
cmpsb
lods
pop
int
lds
scas
fucomi
call
mov
stc
cmpsb
jl
push
test
xor
aad
cmp
sub
inc
cltd
imull
cmpsb
in
cld
inc
sub
into
mov
lods
add
mov
mov
call
mov
push
dec
fsts
mov
lods
sub
or
sub
mov
hlt
out
mov
fsubrl
dec
jne
push
cmp
popf
push
cmpsb
sbb
into
cmp
sbb
adc
lea
shlb
xchg
imul
inc
xchg
jge
aaa
outsl
inc
mov
jb
mov
xchg
mov
mov
ret
mov
mov
je
data16
in
scas
stos
jnp
rorl
sub
addr16
subl
pop
xor
int
mov
das
imul
and
into
and
add
rorb
sub
push
icebp
clc
pushf
or
cmp
mov
hlt
mov
inc
fstps
mov
push
xor
mov
sub
repz
xor
loopne
dec
or
rcrl
in
aas
insl
dec
or
enter
mov
aam
jo
xchg
imul
in
mov
cmp
int3
sbb
adc
jnp
cmp
int3
insl
leave
inc
fndisi(8087
enter
stc
inc
and
inc
lahf
imul
add
dec
mov
test
ljmp
jl
xor
xor
mov
daa
ret
stos
movsl
push
cwtl
stos
add
lods
jg
popa
out
xor
pop
mov
jae
fcmove
leave
nop
dec
sbb
mov
dec
mov
dec
rcrl
jne
mov
daa
stos
fildl
push
mov
movsb
adc
mov
jbe
scas
ret
shr
pop
or
stc
xchg
lock
sbb
cs
push
test
mov
sbb
cs
loope
add
lods
scas
xchg
popa
dec
imul
jae
popf
pop
testb
jp
adcb
into
popf
fwait
int
test
mov
cmp
push
mov
aaa
jnp
xchg
aad
outsb
sub
xchg
push
xor
inc
mov
add
xor
xor
add
push
or
push
test
leave
lods
and
mov
add
and
mov
dec
and
cwtl
out
push
pop
adc
ret
inc
adc
jmp
push
dec
out
js
or
inc
ss
xor
cmp
test
push
inc
and
in
repnz
mov
stc
adc
out
imul
mov
imull
into
outsl
nop
lret
push
mov
out
sbb
jns
cmpsl
pop
fiaddl
cmp
jge
xchg
in
outsl
inc
mov
int
mov
or
out
call
lcall
sahf
hlt
mov
push
adc
inc
loopne
jae
mov
dec
les
xchg
lret
pop
lcall
cli
adc
sub
rorl
inc
push
jp
mov
and
dec
fisttps
out
pop
sahf
cli
movsb
xchg
aaa
into
pop
dec
out
sbb
push
and
daa
insb
fnstenv
cmp
fdivrs
xor
mov
fistpl
stc
aas
iret
sbb
lahf
insl
popa
aas
arpl
fisubs
jl
fnsave
pop
mov
and
popa
cli
insl
test
aam
adc
sbb
popa
dec
jo
adc
inc
xchg
mov
push
ja
js
lds
ror
and
lods
call
std
sbb
xchg
data16
dec
inc
shl
cmp
sub
lods
jp
xchg
and
sti
loope
mov
in
mov
mov
push
les
mov
jns
out
cmp
push
subl
fisttpll
inc
xchg
and
mov
push
scas
aam
inc
daa
and
test
and
nop
test
cmp
movsl
mov
adc
xor
mov
fisttps
mov
jb
and
adc
nop
ds
fisubs
or
dec
lods
jne
imul
or
xchg
or
inc
lret
lods
fs
icebp
and
xlat
xor
jg
enter
xor
icebp
jb
jecxz
inc
push
pop
add
leave
pop
test
mov
xor
pop
out
cmp
arpl
leave
cmp
fiaddl
mov
xor
push
es
sub
xchg
aam
jle
xchg
jns
daa
clc
lahf
repnz
test
fistl
sub
inc
push
daa
cltd
xor
insb
adc
imul
divl
adc
adc
dec
mov
filds
out
sub
jmp
add
pop
in
popl
jno
jne
fdivs
lods
fistl
pop
popl
int
pop
lcall
movsl
and
and
or
ret
fst
or
dec
adc
jns
sub
bound
mov
mov
xchg
mov
push
sarl
sbb
enter
xchg
les
mov
xor
int3
fnstsw
cmpl
adc
outsb
pop
mov
jns
push
sub
int3
lret
out
xlat
xchg
push
mov
rcl
fidivrs
scas
jno
ds
push
dec
test
ss
or
mov
xor
cmp
xor
jbe
nop
das
mov
pop
pop
xor
push
sbb
xchg
mov
outsb
adc
add
xchg
mov
mov
dec
sbb
mov
inc
push
inc
mov
pushf
sub
or
xchg
orb
or
jmp
lods
lds
in
call
lods
iret
jecxz
imul
in
sar
adc
pusha
addl
mov
mov
insb
pmaxsw
add
pop
imul
mov
mov
insb
pop
mov
leave
mov
mov
xchg
hlt
ret
xor
aam
in
insl
sub
jge
jge
sbb
cmp
jmp
dec
jg
ret
xor
xor
lcall
jns
inc
loope
push
imul
dec
sub
pop
das
sahf
shll
mov
test
int3
sub
sbb
jns
jl
xor
mov
or
inc
rcrb
ljmp
sub
add
adc
mov
sub
cmp
stos
add
mov
pop
stos
xchg
stos
icebp
ret
mov
sbb
hlt
mov
leave
mov
mov
pop
add
aaa
adc
iret
mov
out
jbe
or
mov
fldl
lods
call
or
popf
cmpsl
ljmp
and
das
pop
xchg
push
and
stc
popa
xor
notl
shl
xbegin
insb
mov
inc
imul
cltd
add
jg
rorb
fwait
data16
movsb
cmp
pusha
sti
adc
fs
mov
inc
add
jg
call
sub
pop
push
lock
pushf
dec
ret
sbb
mov
push
or
pop
push
add
push
jmp
in
push
popa
push
cli
test
and
cmp
jp
xchg
testl
mov
dec
cltd
xchg
xchg
mov
cmp
test
jecxz
pop
mov
dec
xor
xchg
inc
and
dec
pop
fsubp
enter
pop
cmp
xchg
lcall
push
adc
pusha
mov
mov
fildll
lds
pop
mov
or
dec
dec
mov
sub
xlat
ffree
push
cmc
and
sbb
test
cld
push
mov
addr16
add
mov
mov
and
cmp
ljmp
popa
and
cmpsb
cmp
inc
mov
xchg
mov
inc
jno
in
nop
lock
adc
sub
es
inc
mov
mov
push
xchg
dec
outsb
xchg
sub
push
outsb
sar
mov
je
ss
mov
inc
inc
push
mov
sahf
cmp
add
sub
mov
mov
bound
sbb
xor
outsb
lea
sbb
and
cmp
push
call
lret
jle
jnp
pop
mov
test
aas
or
lfs
xorl
addr16
lock
insl
adc
out
adc
js
je
out
add
cltd
shlb
into
sbbb
pop
rep
fildll
js
push
lret
fmull
jbe
shlb
mov
mov
mov
pop
or
arpl
test
sub
popf
fs
cmpl
in
or
sar
pop
push
jp
int
imul
adc
je
in
lods
mov
lahf
sbb
nop
mov
or
dec
leave
das
push
insl
popa
mov
out
fs
stc
repnz
xchg
push
scas
ret
out
and
xor
std
cmp
mov
int
sti
push
xchg
xchg
and
jle
inc
pop
nop
adc
dec
stos
dec
hlt
test
mov
cmp
test
pop
push
add
fmull
mov
mov
pop
sti
mov
cmp
adc
adc
adcb
cmp
movsb
push
ss
jno
mov
push
push
fcmovnb
sub
out
pop
adc
mov
jne
sub
stos
mov
or
mov
push
aas
sbb
mov
dec
jns
cli
movl
loopne
hlt
jp
or
xchg
xchg
mov
rol
jb
in
jbe
aad
mov
and
mov
ficoml
in
jmp
shlb
fstl
mov
pop
andb
dec
fbld
or
sub
mull
sub
into
sbb
out
and
call
ret
cwtl
add
dec
jnp
orb
cmc
sbb
xor
push
sbb
mov
stos
fistl
cmp
sti
iret
and
jae
mov
test
outsb
jne
popa
inc
imul
xor
sub
mov
mov
dec
mov
outsl
out
insl
into
sbb
mov
sbb
outsl
movsl
int
inc
movl
mov
sub
mov
sub
or
add
xorb
xor
sub
push
movsb
insl
sub
addl
bound
cltd
push
into
inc
mov
cmp
lds
arpl
into
pop
mov
rcll
insl
andb
cs
subl
mov
fstps
mov
subl
xor
andl
lcall
jecxz
fxch
and
outsl
lock
cltd
lds
aam
lcall
pop
mov
mov
adc
je
sbb
ret
out
mov
enter
loop
popf
jae
jae
mov
jns
mov
mov
mov
repz
push
pop
and
pop
cmp
xor
xor
mov
sub
insb
push
fs
fcmovnu
sbb
inc
mov
xor
cmp
push
push
xor
cmc
adc
push
jmp
ja
ljmp
mov
fistpl
loope
jb
sti
ret
pop
mov
leave
std
movsb
cwtl
or
das
dec
sbb
cld
pop
lret
leave
adc
out
pop
adc
inc
sbb
bound
mov
sub
pop
jl
add
jbe
insb
jbe
adc
sbb
clc
xchg
jno
stos
mov
loope
sarl
daa
lock
and
adc
int3
cltd
inc
push
mov
rcr
push
and
pop
fbstp
add
js
decb
in
sbb
outsb
int
pandn
sahf
cmp
fs
call
mov
mov
ljmp
mov
adc
or
shrl
inc
pusha
cwtl
jns
inc
ss
pop
out
sub
test
leave
cwtl
ficoml
fwait
out
gs
push
fldcw
jle
mov
enter
jbe
fs
jno
int3
adcb
call
or
popa
arpl
aaa
dec
outsb
shlb
xchg
dec
mov
or
mov
ficoms
xchg
test
lods
filds
fldenv
mov
in
imul
daa
mov
dec
jge
push
lcall
mov
sub
loop
ret
cmp
or
jns
ret
fbstp
mov
cmpsb
imul
cmp
cmc
hlt
fmull
inc
fidivs
out
mov
insb
mov
jmp
js
movsl
cmp
je
cltd
add
int
dec
ds
mov
adc
mov
mulb
int3
pop
outsl
xchg
or
mov
cs
jl
and
push
sbb
test
pop
in
add
mov
sbb
xchg
ret
cmp
aas
aaa
xchg
xchg
aam
aam
cwtl
fisubrs
dec
push
or
ficompl
outsb
ljmp
jge
pop
call
jns
dec
pop
aam
into
into
rcr
mov
ror
outsb
mov
jl
add
fdivrs
leave
pusha
sub
leave
addl
jle
mov
pop
push
es
into
rcr
adc
inc
dec
out
pop
shl
test
frstor
insl
and
xor
cmp
push
les
dec
xor
lret
dec
stos
inc
insl
aas
inc
adc
dec
adc
mov
dec
and
les
es
lcall
adc
fisubs
roll
xor
mov
enter
test
push
xor
push
mov
mov
cwtl
mov
cmp
rcl
out
iret
cmpb
mov
mov
mov
mov
test
mov
cmpb
bswap
xlat
pop
movsb
mov
fs
sub
xchg
inc
mov
pop
mov
push
es
int3
jne
ljmp
xchg
in
fimuls
sub
sti
cmp
dec
repz
pop
xchg
sbbl
sbb
push
in
test
mov
cmp
daa
outsl
cmp
mov
fcompl
cmpsb
mov
xchg
dec
out
xchg
and
mov
xchg
enter
rol
mov
or
sahf
cmp
dec
popf
push
xchg
cld
push
jle
lret
pop
loopne
shl
cmp
shlb
mov
das
sbb
aaa
je
lcall
popa
push
mov
jmp
aam
clc
test
push
std
dec
cltd
push
fisttps
pop
push
jmp
push
sub
jmp
mov
sub
jmp
cld
sbb
iret
repz
cld
xlat
xchg
or
int
or
mov
dec
dec
outsb
xchg
mull
dec
out
xchg
pop
pop
decl
jnp
sub
or
iret
cli
mov
ret
loope
popf
je
fwait
js
addr16
jbe
jb
inc
mov
sbb
sahf
push
aad
in
and
mov
jb
incb
loop
xchg
or
in
add
jbe
push
mov
xchg
xchg
enter
movsb
push
add
xor
ret
jmp
imul
scas
testl
pop
pop
jbe
divb
lds
push
adc
iret
dec
roll
inc
shll
sbb
xchg
cwtl
iret
sub
jbe
xchg
jge
mov
ljmp
push
jns
dec
pop
rcrb
mov
cli
shlb
pushf
push
bound
cmpsb
dec
fbld
mov
test
out
mov
in
mov
fwait
outsb
or
out
mov
add
pop
inc
clc
gs
adc
mov
out
or
pop
sbb
or
dec
jae
popf
adc
pushf
cld
mov
mov
int
lods
sbb
mov
ljmp
mov
mov
mov
jg
inc
xchg
dec
das
scas
int
jmp
inc
mov
daa
xchg
sbb
push
jge
pop
sub
aam
adc
sbb
jo
cmpsb
testb
xchg
jp
and
mov
jnp
jmp
add
fsubrs
xor
inc
mov
fsubrl
movsl
sub
xor
es
pop
mov
xchg
xlat
icebp
andl
cmc
divl
jle
jl
lock
data16
nop
pop
fldcw
sti
testl
add
sub
mov
roll
imul
or
push
mov
cmp
inc
sub
mov
pop
popl
stos
cmovno
mov
daa
stc
push
movsb
cmp
cld
xchg
add
rclb
mov
inc
repnz
stos
sbbb
fadds
mov
fnstsw
xor
shll
jo
pushf
xchg
jns
in
cmp
dec
xchg
push
jnp
mov
jg
rol
mov
adc
or
mov
and
inc
pop
and
inc
or
pop
aaa
dec
inc
int3
pushf
es
xchg
jmp
jmp
imul
jmp
outsl
lret
pop
xor
cmp
push
clc
adc
xor
loope
dec
jle
inc
cmp
jne,pn
mov
mov
pop
int3
mov
and
push
int3
shll
adc
push
enter
sub
in
mov
mov
add
int3
mov
jmp
push
push
and
dec
or
enter
popa
cmc
sbb
or
test
jmp
aaa
shlb
outsb
mov
imul
ret
mov
icebp
fidivs
xlat
and
fs
sti
pusha
xchg
inc
mov
xchg
mov
cmp
test
xchg
in
xorl
jbe
mull
divl
frstor
jl
push
dec
iret
ret
fmull
jmp
push
pop
pop
jecxz
lods
jo
push
orb
loope
scas
xlat
add
stos
adc
mov
mov
filds
push
and
dec
xchg
mov
mov
fisubs
adc
lea
and
pusha
push
loopne
mov
jno
or
sbb
imul
rcl
fisttps
iret
enter
mov
rcrb
shll
mov
xchg
mov
mulb
outsb
aas
jge
mov
out
out
jo
mov
or
roll
je
lods
sub
loopne
mov
stc
ret
fld
or
mov
cmc
stos
dec
ja
mov
jg
aam
test
fmul
jge
xchg
ljmp
fcompl
sbb
lock
pusha
mov
ret
mov
cmc
jo
imul
fsubr
fidivrl
dec
mov
inc
or
or
mov
sti
jno
dec
data16
lcall
cmpsl
mov
insb
es
leave
jbe
xchg
and
clc
add
or
stos
mov
aam
arpl
jge
or
pop
enter
jg
jmp
push
sbbb
out
inc
fsubp
inc
or
aad
xchg
jbe
dec
cmp
icebp
call
dec
pop
js
dec
sbb
xchg
or
mov
and
mov
push
xor
push
add
int3
adc
fistpl
push
rcrl
fsubrp
in
mov
repz
adc
cmp
int3
test
stos
hlt
pop
mov
push
or
cmpsl
or
jo
add
adc
jl
and
push
add
sub
xor
jb
adc
pusha
lods
push
scas
add
rcrb
add
stos
clc
pop
push
jge
pop
ror
inc
sbb
fsubr
pop
in
sbb
movsb
mov
push
push
outsb
sub
out
xchg
xchg
lcall
xor
or
shrb
dec
inc
call
scas
sub
loope
test
mov
repnz
sub
aas
push
fdivrs
mov
mov
cmp
shll
push
jns
fwait
clc
mov
xchg
sub
add
xlat
ljmp
aad
fsub
mov
pop
mov
int
ret
mov
adc
sub
xchg
aaa
push
xchg
xlat
test
fnstsw
or
adcl
mov
xor
lcall
bound
testb
negl
mov
movsl
xor
pop
pop
repz
iret
mov
xor
call
or
xchg
push
xor
jo
dec
cwtl
xor
push
fnstenv
repnz
pop
popa
aas
pop
jp
ljmp
mov
adc
dec
mov
mov
fildl
loop
int
stos
addl
movsl
push
adc
fstp
mov
pop
fidivrl
aas
push
loope
cmp
orb
jp
and
not
rcrb
fst
push
push
mov
jl
lahf
nop
sbb
and
dec
jmp
ret
mov
sbbl
imul
push
stos
inc
mov
sbb
aas
stos
dec
mov
push
cmpsl
adcb
sbb
iret
inc
mov
dec
fadd
mov
xchg
rol
int
mov
fdivrp
jns
cmp
popf
and
sti
xchg
inc
mov
shlb
pop
mov
fstps
lods
dec
jecxz
loope
or
pusha
sbb
outsl
jno
int
cld
sbb
dec
fsubrp
inc
stos
in
pop
out
add
xor
mov
adcl
adc
ja
jno
mov
sub
push
push
xor
mov
pop
lahf
mov
repnz
cmp
cltd
cmp
pop
inc
mov
sub
cmp
mov
je
mov
insb
ss
or
scas
adc
repnz
jno
mov
lret
addb
sbb
enter
sarb
stos
mov
fldenv
inc
and
in
mov
pop
out
jmp
jmp
adc
cmp
out
mov
cmp
loop
inc
or
sbb
sub
xchg
fists
pop
call
adc
loop
scas
cld
not
insb
negb
jmp
aad
das
outsb
mov
mov
inc
inc
pop
iret
inc
cs
lods
je
mov
jp
mov
jecxz
gs
mov
aam
fdivs
jle
push
test
add
cmc
mulb
push
cmp
enter
test
leave
das
into
xchg
push
insb
mov
mov
sbb
or
daa
shrl
mov
or
cmpsb
push
mov
mov
jg
out
sbb
ret
pop
xor
sbb
sub
xchg
push
jno
call
sub
popa
std
cltd
por
mov
cmp
in
test
jge,pt
lret
dec
sahf
aam
rorb
cltd
iret
or
push
adc
mov
sbb
mov
into
rcll
aaa
movsl
jne
inc
push
rsm
dec
mov
enter
mov
lods
and
aad
icebp
mov
int
xchg
popf
pop
shr
fildl
popf
loope
jmp
int
stc
testl
dec
out
iret
loope
xchg
mov
ret
xor
jp
negl
add
movsl
sbb
jns
adc
mov
mov
dec
jnp
imul
aaa
or
push
rol
xchg
stos
cmpsb
xor
nop
xorb
rorb
jge
aam
xchg
add
adc
jge
mull
push
call
cmp
negb
fistpll
or
mov
rcll
or
shll
pushf
std
inc
add
test
outsb
mov
aad
adc
push
jbe
loopne
outsl
gs
jmp
insb
in
add
mov
addr16
dec
pop
je
mov
mov
mov
jge
out
test
jo
cmpsl
dec
ret
ret
push
pop
or
add
scas
mov
mov
pop
push
les
das
jle
inc
scas
mov
push
cld
mov
paddq
sbb
jg
xchg
negb
data16
mov
push
lock
repnz
push
jg
push
sub
jbe
das
nop
xor
xchg
dec
loope
or
das
lods
cld
mov
and
into
push
or
insb
jge
inc
sbb
mov
mov
cmp
leave
popa
ds
dec
test
cmp
pop
mov
mov
je
dec
mov
lret
jmp
insb
cli
shrb
cmp
lock
jb
push
inc
jge
into
out
loopne
mov
mov
pop
push
fcmovnu
xchg
shrl
in
scas
xchg
jl
jne
mov
mov
cltd
lret
cmpsl
mov
cld
fwait
cmpsb
mov
je
rorl
pop
pushf
popa
mov
or
ror
xchg
push
repnz
fldl
pop
cmpsl
or
pop
xlat
cli
adc
scas
roll
xorl
push
jbe
mov
shrb
xchg
enter
pslld
sub
cwtl
jb
add
xor
dec
nop
sbb
sarb
jae
loope
push
fistpll
pusha
aad
sahf
popf
lea
add
sahf
lahf
in
rdtsc
mov
scas
xchg
aam
hlt
ficomps
and
pop
and
movsl
pop
pop
je
xchg
arpl
insl
fucomp
hlt
cmp
adc
sub
adc
adc
adcl
cwtl
add
adc
es
arpl
sbb
add
fcompl
pushf
sub
inc
stc
fimuls
xor
rolb
aam
sub
xor
test
mov
cmp
sbb
fldcw
add
cs
addr16
lock
add
js
pushf
add
adcl
ljmp
mov
push
mov
sbb
fsubr
rcrb
pop
test
gs
in
ret
push
dec
rorb
enter
outsl
mov
test
shll
adc
xchg
jmp
xor
add
cmp
jbe
and
or
mov
mov
je
dec
xchg
test
adc
sub
jnp
aas
mov
rorb
shll
popa
or
ljmp
push
aaa
test
push
and
fstpl
movsb
jno
in
iret
adc
cmc
jl
fwait
popf
push
lcall
lds
jns
mov
mov
adc
loopne
js
sbb
jmp
int
and
pusha
mov
cwtl
in
lret
cmpl
incl
outsb
clc
out
repz
sub
mov
cmp
sarb
sub
hlt
jp
mov
dec
pop
pop
jle
adc
in
push
mov
adc
push
ja
insl
dec
jle
jno
add
sub
cltd
lret
call
pop
mov
dec
test
sarb
loope
xor
addl
jmp
out
mov
pop
inc
xchg
xchg
inc
inc
jl
pushf
jle
cwtl
xlat
dec
sar
xor
pop
int3
pop
jmp
push
inc
mov
push
add
inc
pop
es
out
adc
into
fdivs
lds
out
inc
mov
push
mulb
push
test
mov
notb
sbbb
pop
les
addr16
mov
aam
ret
and
cwtl
sarb
not
or
stc
mov
test
mov
mov
or
mov
inc
ret
cmc
mov
or
mov
sbb
shlb
jns
push
lret
gs
repnz
jnp
xor
push
sub
mov
imul
and
and
jno
fldl
mov
test
test
js
push
mov
int
data16
mov
movsb
mov
add
or
sbbb
xor
mov
les
pop
fnstenv
pop
pop
sub
sbb
movsb
les
cmpsb
das
je
add
je
iret
out
jp
fistps
xchg
imul
inc
je
setge
test
out
lcall
pop
fincstp
dec
xor
cmp
xchg
ljmp
les
mov
popa
xchg
das
inc
mov
sbb
insb
adc
push
sbb
xor
xchg
adc
dec
sbb
jecxz
xchg
pop
out
stos
decb
sbb
aad
or
xchg
pop
out
scas
mov
mov
xlat
adc
fs
sbb
fstl
in
fdivs
push
sti
pop
push
rcll
adc
adc
clc
mov
dec
sbbb
xor
xor
mov
loope
mov
mov
jle
pusha
ret
in
push
jge
faddp
inc
and
popf
push
push
fistps
inc
dec
into
stos
push
and
repz
mov
loop
add
lea
jle
push
xchg
mov
rcrl
sub
dec
fdivrl
or
xlat
dec
iret
mov
pop
or
outsl
cmpsb
or
jge
stc
mov
pop
call
lret
ds
cltd
xor
dec
cmp
mov
fisubs
mov
xlat
rcr
dec
and
in
sysenter
xchg
jmp
push
cli
inc
aam
or
pop
mov
arpl
jp
push
xchg
sub
je
inc
lds
movsl
negb
cld
xor
adc
jnp
outsb
mov
out
out
add
mov
xchg
cmp
sub
loop
push
xor
xchg
push
jnp
mov
adc
pop
cs
and
sub
pop
pop
pop
js
repz
xchg
jno
test
aad
dec
ljmp
cmp
loopne
xorl
mov
pop
xor
dec
xor
notl
insl
ret
ljmp
xchg
or
pushl
in
xor
pop
push
sub
or
fsts
mov
jae
repz
clc
popf
aaa
in
or
into
bound
fs
int
and
jmp
bound
inc
subb
pop
dec
adc
fdivl
pop
xchg
int
lcall
lods
mov
stos
xor
pop
jno
andb
into
sti
call
cld
xlat
dec
stos
iret
inc
ret
xchg
mov
pand
lea
sbb
add
sbb
mov
add
mov
test
sahf
pop
xchg
pop
pop
cmpsl
inc
xor
adc
or
sbb
mov
out
xchg
jle
vsubps
cwtl
addb
ss
or
push
outsl
and
cmp
in
aam
test
fldenv
xchg
xor
push
fisttpl
add
push
push
mov
subl
pop
add
js
int3
or
pop
adc
rcrl
pop
cwtl
ss
les
fstps
cld
cmp
sub
mov
push
rorb
or
mov
stos
cltd
and
fwait
aaa
jle
jp
shrl
adc
andb
push
outsl
mov
xor
adc
int
cmp
stos
repz
lds
mov
in
in
cmc
fs
sub
adc
inc
imul
rorl
nop
or
cmp
mov
xlat
mov
stos
sbb
inc
adc
in
call
pop
aas
jmp
jb
frstor
cmp
or
xor
sub
sub
ds
sub
inc
lock
lea
sub
push
ljmp
dec
rclb
mov
dec
cmp
repz
mov
rclb
fsts
cmp
sbb
and
mov
stos
adc
aaa
stc
mov
shl
mov
into
pop
jle
xchg
jge
push
bound
jge
or
inc
sub
dec
push
lods
jns
xchg
add
lcall
dec
shlb
xchg
and
sub
adc
out
ja
mov
pop
push
test
and
ret
ret
jg
mov
aaa
call
mov
mov
dec
sbb
stos
adc
pop
push
mov
mov
pushf
js
push
lock
popf
jmp
iret
out
jbe
push
lahf
and
pusha
test
pop
xchg
cmp
jno
jp
mov
xor
mov
xchg
xor
aaa
aas
adcb
andb
push
inc
push
xchg
in
or
sbb
push
push
cmp
pop
jp
dec
and
loope
cmp
es
in
hlt
jl
pop
or
mov
sbbb
adc
clc
inc
jo
je
and
fisubs
push
xchg
mov
loopne
fildll
pop
test
shrb
cmc
mov
push
mov
cmp
inc
adc
mov
dec
jp
and
mov
push
insb
repz
mov
data16
sarl
ja
insb
jno
mov
ss
add
push
imul
aam
pusha
fdivrl
dec
mov
pop
or
fs
inc
mov
dec
sti
scas
loopne
xchg
ror
repnz
aaa
sub
jmp
push
ljmp
stos
jnp
popf
in
push
popf
ljmp
mov
and
fisttpl
cmp
hlt
lret
rolb
sub
jecxz
dec
add
pop
xor
xchg
pop
push
les
loopne
jle
mov
pop
stos
mov
jne
push
pop
les
or
rcll
push
pop
push
adc
outsb
out
negl
sbb
maskmovq
divl
mov
aaa
mov
loopne
das
lret
orb
xor
popf
rcrb
dec
sbb
ds
repz
xchg
int
aad
stos
push
enter
add
add
mov
jae
xor
fbld
xlat
push
mov
adc
push
icebp
mov
mov
ss
pushf
cmp
push
mov
sahf
pusha
inc
and
add
and
sub
jnp
pop
inc
cmp
push
dec
inc
xchg
out
and
out
icebp
rcrb
divb
loopne
mov
push
xchg
jno
lea
in
xor
dec
ljmp
cld
in
mov
rol
filds
scas
and
dec
fadd
or
stos
adc
mov
out
jmp
mov
sbb
test
cli
add
stos
mov
cli
mov
pop
mov
adc
or
jge
xor
mov
stos
dec
mov
dec
mov
scas
loop
jl
or
jnp
or
cmp
lret
subl
ljmp
lret
dec
aam
ret
add
dec
pop
mov
lcall
mov
enter
xor
aad
xorb
jp,pt
mov
mov
push
mov
cmp
in
lods
adc
stos
mov
daa
lret
fldenvs
fistps
enter
ret
mov
fisubrl
cmpsl
xor
mov
addl
in
jno
push
mov
inc
movsl
dec
and
adc
cltd
adc
mov
lods
mov
lock
pushf
inc
pushf
sbb
aas
jnp
jnp
pusha
repz
popa
xchg
push
loopne
test
sbb
mov
testb
addr16
mov
enter
das
enter
mov
add
pop
mov
sub
jl
popa
test
fwait
mov
lcall
push
test
leave
int
daa
mov
dec
or
aad
leave
scas
data16
test
xchg
in
adc
mov
in
cld
mov
mov
test
adc
adc
ja
pushf
ret
sbb
inc
xchg
ja
jp
aaa
jo
mov
push
ja
add
mov
and
mov
cmp
sahf
add
lods
jmp
int
push
sbb
lcall
sahf
call
scas
ljmp
xchg
lods
xor
fnstenv
fs
aad
int3
inc
fcmovnb
xor
je
sti
and
filds
add
jno
mov
and
mov
jge
add
add
inc
mov
xchg
cmp
roll
mov
ss
pop
arpl
mov
ficompl
ret
pop
dec
cltd
sbb
jl
mov
and
pop
jae
lcall
pushf
pop
push
xor
add
lea
and
jo
sti
clc
iret
ja
add
roll
xchg
sbb
mov
sbb
or
jb
xchg
call
das
push
mov
ja
sub
jae
int3
fs
sbb
cwtl
mov
xchg
test
and
pusha
ret
inc
dec
mov
mov
loop
cmp
xchg
nop
ret
add
jg
inc
sbb
push
and
cmp
xchg
mov
inc
pop
push
add
sub
aam
push
roll
lret
push
lahf
divb
test
mull
aam
pop
add
xchg
jl
testb
cs
push
test
ds
adc
cwtl
sub
shr
repnz
dec
mov
dec
cmpsl
aaa
xor
movsb
ffreep
cmpsb
pusha
mov
or
mov
jo
jae
sahf
dec
loop
xor
jmp
adc
or
adc
xchg
adc
sub
mov
rcrl
enter
jns
cmp
repnz
cmp
cmp
jmp
xchg
sti
int3
cmpsl
mov
gs
movnti
jo
sbb
pop
popf
jne
lret
or
pusha
in
cs
mov
insb
out
add
add
mov
ljmp
push
push
popf
jbe
pop
fucomp
popa
cmp
adc
outsl
lret
push
add
nop
jle
gs
insb
stos
rcl
insb
and
adc
pop
pop
mov
mov
loop
movsl
adc
bound
mov
sbb
ret
cmp
gs
std
pop
fidivrl
addr16
jge
jmp
lock
lea
xor
mov
pop
pop
or
push
cwtl
mov
sahf
lret
test
push
mov
mov
jno
push
dec
test
and
stos
ljmp
es
cmp
mull
cmp
sbb
lds
inc
insb
pop
jg
xchg
dec
aad
cmp
aad
repnz
lock
adc
adc
inc
lods
pop
mov
stos
push
inc
adc
push
int
xchg
or
mov
ljmp
mov
mov
xor
hlt
pop
adc
jmp
dec
sub
cmp
mov
cli
xor
sub
test
push
sbb
inc
pushf
mov
mov
or
jmp
mov
aam
inc
sub
xchg
sub
inc
clc
mov
lock
push
movsl
sbb
sbb
rcrl
mov
sbb
test
stos
add
xor
mov
inc
mov
push
cwtl
repnz
rcrl
xor
pop
dec
add
pop
adc
push
xor
aam
add
enter
clc
sbb
fstps
mov
xlat
xchg
xchg
adc
xor
jmp
and
rolb
sub
movsb
add
subb
pop
inc
and
mov
add
jecxz
int3
into
popa
mov
sbb
loope
and
addr16
mov
hlt
or
mov
mov
mov
ja
into
xchg
addb
and
xchg
test
mov
stc
push
incl
adc
sub
aas
cmp
mov
push
xchg
jnp
iret
add
aaa
sub
clc
adc
fdivp
pop
popf
sub
xchg
cmp
mov
jbe
cmp
dec
push
popf
pop
outsl
cltd
das
loop
loope
sub
fwait
lock
mov
adc
in
pop
push
jns
loopne
loop
pop
jne
adcb
inc
into
inc
mov
or
inc
mov
dec
mov
pop
xlat
mov
aaa
sub
lods
xor
lods
mov
jecxz
or
or
xchg
xorl
mov
dec
mov
shl
mov
dec
movsl
mov
sti
jle
sbb
xchg
mov
stos
fdivrs
aas
dec
repz
or
mov
shlb
scas
push
xchg
mov
popa
divb
lea
cmp
test
mov
lds
push
mov
fstpl
cli
arpl
repnz
xor
enter
insl
in
xchg
lods
das
das
fs
movsl
je
jns
mov
shrl
dec
inc
adc
js
xchg
mov
in
idivl
movsl
mov
dec
fidivl
xchg
cmp
mov
pop
pop
dec
ret
out
lcall
cltd
adc
jmp
mov
and
lods
fcmove
mov
shrb
lcall
lods
pop
jmp
addr16
add
push
push
negb
and
lahf
icebp
fisubrs
daa
movsb
cmpsb
adc
and
dec
mov
jne
in
jbe
subl
dec
push
mov
or
mov
icebp
add
lret
jnp
sbb
push
add
sub
dec
iret
push
aas
sub
mov
adc
out
add
add
cmpsl
test
add
les
xchg
xchg
dec
xor
out
bound
adc
fstpt
jge
mov
in
mov
sbb
xor
addr16
cltd
cmp
test
and
pop
adc
xchg
test
sarb
jl
push
or
pusha
stc
xor
xchg
pushf
movsb
inc
inc
xor
sub
inc
cld
ds
lods
mov
inc
shlb
cld
add
pop
xchg
cwtl
jle
mov
add
dec
mov
or
mov
imul
push
jnp
jo
popf
mov
inc
mov
scas
inc
pusha
aam
les
inc
jg
stc
pop
loopne
movsl
imul
add
pop
jno
xlat
sub
lret
pushf
loopne
cmpb
jg
repz
mov
adc
fldt
dec
ret
aam
es
iret
lret
xchg
andl
in
in
icebp
or
mov
mov
cli
sbb
jl
inc
and
pop
xor
jge
inc
sti
cld
cmp
shll
inc
cmpsb
pop
leave
lahf
mov
jae
or
pop
mov
mov
mov
aad
ljmp
loope
sub
sub
repnz
push
sub
scas
fbld
ret
pop
mov
lret
rep
sub
mov
jns
pusha
sbb
cmp
jnp
out
mov
frstor
cmp
add
dec
movsb
or
adc
outsl
xchg
inc
push
das
test
aaa
xchg
sub
ret
popf
or
xchg
out
bound
mov
fdivrl
out
call
dec
xchg
add
sub
xchg
sub
inc
mov
and
hlt
in
in
pop
leave
sub
jmp
aaa
leave
stc
mov
inc
int
add
icebp
gs
inc
pop
pushf
xor
mov
pop
adc
popa
xor
and
xor
fcoml
dec
dec
dec
inc
data16
loopne
dec
or
pop
push
shlb
xor
test
mov
dec
test
jo
mov
pushf
xor
cmpsl
push
lds
fsts
xchg
inc
sub
xor
push
dec
or
xchg
push
cmp
push
cmpsl
cwtl
jne
xchg
mov
mov
lcall
aad
pop
fadds
invd
clc
test
push
testb
shrb
pop
dec
and
and
test
sbb
ret
pusha
xchg
fadds
stc
push
les
fsubrs
out
daa
or
lock
cmp
scas
cmp
push
outsb
je
jl
fs
xor
stc
mov
sbb
dec
in
aas
mov
cmp
in
out
popa
cmc
ret
imul
or
or
rorl
mov
cmp
das
and
leave
xchg
xchg
repnz
stos
fldcw
pop
mov
sub
cmpsl
mov
lahf
dec
cmp
sbb
adc
sub
sbb
sub
loope
fidivl
inc
add
jl
mov
cmp
cs
pop
jns
lahf
push
popf
dec
lret
bnd
ss
dec
or
nop
xor
scas
in
nop
pop
out
aaa
cwtl
pop
pop
inc
and
pop
ficomps
cmpsl
ds
and
data16
lret
mov
jle
cmp
shl
clc
inc
in
cmpxchg
push
fmull
adc
fucom
idivb
aas
fcoml
test
pop
popf
lahf
jle
mov
add
arpl
in
mov
push
and
flds
adc
inc
insb
and
sbb
cmpsl
pop
test
pop
lret
add
push
adc
imul
xor
mov
or
lret
cmp
loopw
inc
xchg
call
jns
cld
loopne
nop
rorl
mov
lea
out
ret
loopne
and
jmp
dec
mov
aaa
cld
and
sub
enter
push
cmp
jmp
xor
dec
jne
decl
mov
jne
mov
clc
andb
cli
adc
dec
shrl
ss
leave
push
movsl
mov
pusha
add
or
sub
mov
add
dec
add
bound
adc
mov
cmp
mov
jbe
xor
mov
lahf
inc
pop
sbb
mov
inc
in
addr16
loop
fisubs
add
mull
lods
repz
es
loop
out
or
cld
cmpsl
and
in
xchg
popl
mov
fsubrs
push
in
iret
cmp
js
and
sub
ficompl
popf
lods
xchg
jo
cwtl
add
ret
pop
movsb
test
in
imull
cmpb
xlat
pop
xlat
dec
out
jl
movl
rcrl
sub
cmp
xchg
pop
sahf
jb
add
xchg
js
add
pop
sub
xchg
inc
xor
sbb
shl
or
hlt
negb
adc
push
add
cmp
gs
mov
mov
push
sub
in
je
lahf
mov
fcoml
popa
jg
stos
mov
negb
pop
sbb
call
dec
jbe
iret
sbb
sub
and
mov
repz
je
stc
xchg
test
push
push
aas
ror
or
jbe
mov
mov
aad
arpl
pop
lahf
cmpsl
movsb
fistps
bswap
movsl
out
mov
inc
outsb
inc
ja
mov
std
inc
and
gs
and
fiaddl
xlat
xchg
popa
pushf
lods
fcmovnu
push
sar
adc
xor
or
or
push
inc
pushf
pushf
repz
sub
lock
int
mov
shll
test
xchg
ja
jno
adc
das
mov
insl
leave
or
mov
cmc
gs
jo
mov
sub
lea
enter
sbb
mov
pop
push
roll
loop
shll
loopne
adc
enter
in
xchg
arpl
stos
cmp
or
leave
dec
dec
ror
stos
lods
and
jg
loopne
cmpsb
hlt
or
lret
in
pop
andl
pop
imul
cmp
stos
int
mov
sub
pop
test
push
and
push
mov
inc
push
xorl
push
pop
stc
je
test
and
lahf
inc
adc
sahf
sub
or
jno
fmull
out
nop
adc
jle
xor
cltd
mov
xor
xchg
xchg
lea
call
loop
icebp
std
testb
mov
rcrb
dec
lea
add
add
mov
out
lret
xchg
xchg
xchg
dec
daa
loop
xor
into
mov
pop
hlt
mov
sub
cs
es
pop
stos
and
add
cli
andl
jns
and
sub
mov
sub
out
mov
inc
repnz
in
imul
dec
mov
push
push
hlt
dec
push
test
pop
xlat
jo
ret
push
jae
jmp
data16
leave
jecxz
test
orps
sub
bound
sub
hlt
or
lret
push
das
jp
lcall
js
iret
cld
daa
mov
xchg
movsl
ja
jmp
push
cmp
mov
lsl
cmp
xchg
or
inc
xchg
out
sbb
fldcw
mov
fwait
add
jge
cmpl
inc
mov
lods
mov
mov
inc
cmp
test
add
inc
fnstsw
sub
cmp
outsb
mulw
clc
mov
jle
lock
xor
sub
dec
push
mov
or
jns
repz
insb
or
jle
mov
mov
push
sti
mov
push
test
ret
pushf
pusha
push
arpl
mov
mov
insb
jl
pop
cmc
xchg
nop
xor
sbb
loope
jae
pop
int
test
scas
call
les
repnz
nop
cmp
add
push
repnz
lock
xor
lds
aad
inc
in
dec
dec
imul
dec
or
cmp
lock
jb
mov
std
rcrl
dec
add
adc
ds
xorb
push
popa
cmovp
into
add
and
lret
addr16
decl
and
std
push
outsb
mov
dec
arpl
loopne
cmp
add
sbb
hlt
pop
xchg
xchg
roll
rorb
inc
pushf
push
sbb
pop
or
or
cs
and
xchg
lods
hlt
cltd
pushf
fdivrs
arpl
sub
fcmovnbe
push
cmp
jl
push
mov
les
sbb
mov
or
outsl
cld
sub
stos
cwtl
xor
aaa
in
ljmp
mov
pop
mov
stc
enter
push
in
bound
scas
sub
push
es
mov
lahf
iret
adcl
cmp
jle
pop
into
cmp
xchg
jns
add
mov
shrl
pop
cwtl
push
inc
shlb
test
add
js
xorl
mov
inc
repz
pushf
mov
sbb
add
mov
lock
dec
mov
sarb
or
mov
cmp
out
mov
adc
push
lahf
rcrl
pop
out
fdivl
xor
dec
mov
or
ljmp
jnp
and
das
jmp
cmp
addr16
cld
mov
je
mov
in
in
fists
mov
jg
imul
pop
fidivrl
push
xlat
jne
int3
jne
dec
ljmp
movsb
mov
aad
jmp
pop
jb
test
mov
mov
jg
dec
out
lcall
push
and
pop
rcl
ja
sub
mov
sub
test
xchg
jl
fcompl
mov
dec
gs
dec
stc
neg
lds
cld
aaa
sti
iret
and
icebp
add
xor
dec
aad
lods
fistpll
pop
inc
fwait
insl
in
jg
fcoms
fiaddl
cmp
dec
rcr
dec
xorb
repz
clc
push
fwait
fs
jbe
ljmp
xor
jbe
sub
ret
int3
cmp
sahf
sarl
sub
cmc
sbb
add
lret
rcr
test
or
aam
int3
add
mov
mov
je
loopne
das
push
aad
insl
pushf
pushf
jo
xchg
jl
add
xchg
mov
sbb
xchg
inc
jmp
push
pop
adc
icebp
ds
cmp
popa
movsl
xchg
cmpsb
mov
jecxz
or
lret
pop
stos
aaa
jecxz
add
jb
sbb
add
xchg
xchg
push
mov
xchg
lea
lock
ret
push
mov
icebp
sub
pop
in
pop
movsb
push
dec
dec
insl
out
insl
mov
sbb
mov
enter
test
icebp
ret
sub
ret
mov
movsl
std
sub
push
push
cltd
ret
jg
jnp
stos
pop
cmp
pop
jae
aas
jp
xor
repnz
out
lods
and
icebp
inc
aas
pop
test
mov
pop
pop
push
faddp
rclb
out
xlat
pusha
js
fs
push
imul
pusha
je
push
insl
ret
and
sub
rol
jnp
push
add
call
cmpsb
test
jp
dec
es
pop
xor
xchg
repnz
aaa
pop
jl
push
cmp
out
mov
xor
gs
shrl
repz
aam
fisubrl
and
mov
cmp
lds
js
mull
mov
xor
sbb
pop
xchg
test
sarb
add
push
add
imul
or
jne
shrw
cli
ja
ljmp
into
lcall
ss
jbe
mov
divb
jle
test
lods
push
ja
cs
mov
inc
test
pop
jne
in
mov
cli
pop
pop
sbb
bound
push
push
jne
sahf
call
add
aam
bnd
lea
loope
and
mov
clc
push
mov
adc
stc
or
out
fwait
icebp
mov
add
sbb
fs
negb
inc
push
filds
insl
sarb
lahf
sbb
xlat
ret
pushl
and
mov
inc
pop
std
test
cmp
mov
dec
int
shrb
pop
cmp
mov
jae
inc
in
dec
loop
cld
xor
xor
cmp
pop
cwtl
repz
movhps
lods
and
test
fnstcw
call
xchg
jns
fneni(8087
cmp
in
in
add
ret
inc
dec
and
popa
pop
jl
jmp
out
and
pushf
dec
lret
mov
roll
ret
jne
sub
test
push
fwait
sbb
pop
das
sub
clc
pop
idivl
mov
push
test
adc
adc
out
dec
mov
loopne
mov
data16
mov
std
cmp
jmp
stos
or
stc
xchg
jae
fcoml
hlt
mov
or
xchg
test
ljmp
shlb
ret
dec
adc
inc
int
mov
and
jmp
xor
add
jne
pushf
ror
push
push
adc
enter
xchg
sub
xchg
scas
cmpsl
stos
push
or
fcompl
arpl
jne
xor
inc
xor
stc
cmpsl
xor
ret
pop
fdivl
mov
dec
inc
push
xchg
scas
push
stos
dec
shlb
adc
and
jo
mov
jmp
sub
xchg
mov
jmp
and
fwait
pop
arpl
lret
mov
fisubrl
sbb
aam
xor
in
stc
stos
mov
and
loop
mov
mov
xchg
jp
out
cmovle
scas
mov
adc
sbb
jbe
sarl
out
ficompl
sub
pusha
push
and
and
inc
lcall
pop
ret
pop
or
pop
daa
iret
add
out
xchg
xor
jmp
push
push
dec
xor
add
dec
push
add
mov
adc
pop
popf
adcl
std
mov
cmp
inc
xor
popl
dec
mov
or
mov
push
popf
add
fbld
fwait
or
jle
imul
mov
repnz
cmpsl
adc
iret
cmp
cs
sub
lock
or
aad
rcl
ror
outsl
sbb
in
jae
mov
fimuls
dec
sbb
cwtl
jne
pushf
or
test
int
and
imul
in
xlat
xchg
dec
or
mov
pop
adc
fldl
xchg
dec
mov
in
sbb
sbbl
ja
and
aaa
push
in
movsb
xchg
mov
gs
cld
push
insb
movsb
outsl
sti
pop
or
dec
imul
jl
aaa
pop
cld
mov
aas
testb
mov
push
or
clc
push
and
adc
push
mov
mov
ficoms
dec
or
ret
push
imul
jmp
aaa
sbb
cmp
mov
sub
movsb
jge
push
sbb
mov
hlt
cmpsl
pop
test
inc
into
leave
jp
popa
jg
les
test
wrmsr
subb
aas
sub
int
pop
push
mov
mov
xchg
xor
shlb
loopne
lret
repnz
sub
cmp
xchg
xchg
jbe
and
aas
enter
mov
iret
pop
das
push
adcl
scas
adc
pop
movsl
in
dec
xlat
sub
push
aaa
mov
add
mov
fscale
inc
cli
inc
and
pop
pop
push
addb
leave
mov
xchg
mov
xor
mov
adc
ret
loopne
in
jl
cld
and
lds
adc
mov
push
sahf
js
cltd
jecxz
cmc
loopne
add
ja
mov
sub
xor
icebp
push
mov
add
out
cltd
sarb
insl
fisttps
mov
leave
inc
out
adc
push
aam
pop
xchg
enter
mov
add
pop
loopne
mov
dec
in
cli
loope
shl
lods
mov
orb
leave
xchg
aas
inc
pushf
ficoms
dec
inc
mov
push
lcall
and
mov
data16
pushf
sti
mov
fimull
push
insl
mov
shll
mov
hlt
sub
cmp
insl
mov
mov
pop
add
aad
addr16
rcrb
mov
aad
out
test
sti
clc
ljmp
cli
inc
adc
jns
adc
out
cmc
mov
imul
inc
fmul
push
and
jnp
movsb
sti
bound
rol
ds
pop
sti
mov
cmp
fldl
inc
movsb
sub
xor
inc
cmp
pusha
xchg
jmp
add
scas
loope
xchg
pop
xor
add
gs
pop
enter
or
and
pop
pop
mov
iret
and
popl
mov
push
push
sahf
or
cmpsl
push
sbb
in
jo
js
bound
lds
add
addr16
pop
sbb
sbb
dec
jl
sbb
iret
sbb
push
dec
fsubrs
shl
in
sarl
jb
xchg
xor
xchg
inc
dec
sbb
sub
adc
scas
xchg
mov
nop
sbb
pop
pop
sub
cltd
inc
sub
neg
pop
sub
stc
inc
jb
fsub
loop
pop
sub
inc
out
cmpsb
jo
ret
xchg
mov
push
aad
icebp
and
jl
ljmp
adc
out
sub
je
pop
ja
sub
and
adc
imul
pushf
push
stc
rorb
mov
dec
fnstenv
movb
mov
cmp
xor
jl
in
mov
stos
mov
mov
rol
cmp
sub
mov
outsl
sub
enter
fwait
les
fs
push
imul
inc
aad
loopne
sub
dec
mov
data16
mov
fldt
test
cli
mov
push
xor
xor
and
pop
inc
and
addr16
push
xchg
dec
popl
out
pop
xchg
int
iret
push
mov
jp
lods
dec
pop
or
mov
mov
xor
push
int3
inc
jnp
sbb
ret
dec
in
cld
jg
sbb
or
or
sub
jg
stos
loope
fadds
sub
mov
pop
js
sub
in
mov
setl
into
clc
jns
pop
les
ds
and
dec
aad
negl
mov
mov
adc
sub
pop
fnstsw
xchg
or
add
fmulp
cs
mov
mov
xor
out
bound
adc
cltd
cs
or
xor
sbb
mov
dec
pop
pop
jge
mov
xor
bound
in
shll
push
arpl
mov
dec
std
fwait
div
test
xor
xchg
mov
sub
dec
in
xchg
lods
cmp
jmp
jo
adc
sbbb
lcall
fwait
pusha
mov
sub
lods
push
ficoml
adc
dec
gs
ficoms
mov
loope
dec
dec
add
jo
pop
dec
ret
clc
mov
jl
cmp
and
cld
into
aaa
ficomps
pop
dec
in
push
movsb
in
pusha
and
int3
outsb
dec
cmpsl
jmp
clc
mov
iret
and
push
notl
jg
test
fadd
jno
and
sub
out
mov
cmp
xchg
mov
ds
and
or
mov
xchg
xor
shlb
mov
or
jge
xor
mov
mov
xor
scas
in
mov
fcos
and
rorb
jo
push
xchg
push
iret
js
adc
pushf
int
test
adc
mov
daa
jno
inc
mov
xchg
sbb
bound
in
data16
xchg
sarb
fildl
mov
cmp
add
push
pushf
pop
jp
and
xchg
jae
iret
lea
rcll
cmpsb
push
push
mov
adc
inc
jbe
or
xchg
subl
and
and
jne
cli
test
mov
fsubrl
mov
sbb
jmp
jl
xchg
fdivrs
mov
dec
aam
inc
mov
sub
ret
dec
rorb
add
mov
mov
xchg
dec
loope
xchg
push
out
cmp
pop
add
push
outsl
fisubrs
ss
in
xor
mov
mov
loop
push
jno
cwtl
cld
inc
dec
repnz
cmp
aad
int3
ds
push
push
pop
xor
enter
notb
jle
shr
mov
ja
je
addr16
ja
in
jmp
add
stc
pop
sbb
mov
mov
xlat
cltd
fmuls
addl
out
push
or
repnz
xchg
jp
inc
jns
mov
jle
fstpt
mov
add
and
sbb
lret
popa
sub
ja
dec
push
jecxz
xchg
mov
dec
push
sub
out
cmpl
addb
push
test
and
mov
dec
jge
sub
pushf
aas
out
cli
aad
sub
jp
imul
sbb
out
scas
mov
or
out
clc
mov
scas
adc
cmp
mov
aaa
or
add
mov
test
movsb
inc
fs
sbb
lcall
mov
mov
out
test
add
sahf
push
rcll
shll
popf
loope
xchg
inc
outsb
mov
sub
imul
ljmp
xchg
add
aam
cmpsb
into
sbb
cmc
mov
scas
mov
mov
inc
mov
pop
xchg
push
sbb
adc
in
sub
clc
mov
leave
sub
fiadds
int3
pop
inc
sub
pop
mov
xchg
mov
leave
or
xchg
adc
into
mov
pop
popa
jmp
mov
dec
cltd
mov
push
lds
aaa
or
outsl
loopne
jne
out
add
gs
andb
jbe
pusha
xchg
sti
xchg
push
xorl
mov
sbb
call
xorl
fcmovne
mov
cmp
lock
sub
mov
shlb
movsb
sbb
outsl
out
ret
fsub
sbb
idivl
out
dec
xorb
pop
pop
shl
test
jnp
push
xor
fistps
mov
push
adc
jns
icebp
movl
lret
and
sbb
pop
cld
dec
outsl
cmpsl
test
mov
out
sbb
inc
int3
sub
mov
sub
jmp
jmp
adc
popa
in
mov
mov
icebp
les
rcl
cmp
in
dec
daa
fimull
add
iret
sub
xor
js
nop
adc
aad
pusha
or
or
and
pop
jae
sbb
xchg
popf
xor
jne
aam
in
out
pop
movsl
fistl
addr16
or
inc
loope
mov
jnp
xchg
aad
leave
adc
cmpl
jno
jns
repnz
inc
test
jae
sahf
xor
adc
scas
fldt
inc
xor
or
cwtl
jbe
jge
in
inc
sbb
adc
adc
lret
lahf
fucomi
test
enter
mov
inc
pop
mov
iret
push
arpl
outsl
cmp
idivb
mov
push
push
insl
add
mov
cmp
iret
test
mov
pop
popa
pop
mov
and
mov
pop
sub
xchg
pusha
mov
lods
mov
out
arpl
mov
mov
inc
mov
cmp
or
mov
scas
mov
dec
jg
push
xchg
or
mov
xchg
sbb
jle
or
cld
movsb
mov
insl
int
pop
push
and
push
shll
mov
in
sbb
les
in
and
cmpb
fwait
pop
rcrl
ds
dec
cs
add
push
arpl
ss
jp
inc
xchg
fisubl
leave
xchg
aas
dec
sub
push
push
dec
jbe
xchg
cmp
push
pop
mov
mov
mov
inc
enter
insl
push
cmp
jae
inc
push
push
clc
jns
add
sub
dec
mov
xchg
mov
fwait
daa
and
mov
inc
jp
aas
mov
xor
out
adc
mov
cmpsb
inc
dec
repz
imul
add
cli
lea
xchg
adcl
aam
jge
add
add
bound
lret
adc
popa
dec
jge
push
imul
sbb
call
push
xor
pusha
add
addl
xchg
mov
and
push
in
fwait
clc
cltd
sub
mov
test
test
jmp
adc
xchg
or
push
jl
xor
mov
push
int3
and
popa
imul
sbb
xor
push
pop
push
inc
pop
test
outsl
insl
incb
add
sub
test
dec
adc
lds
adc
mov
mov
xchg
pop
sbb
xor
pop
pop
xchg
shlb
mov
push
inc
or
inc
jg
jge
ss
testl
xor
jmp
fcomps
or
xchg
xchg
ret
fsts
sbb
mov
dec
call
fsubs
jae
sub
xor
mov
orl
xchg
jge
stos
mov
mov
lods
icebp
jne
loopne
outsb
loop
test
pushf
fisubrl
icebp
jp
rcrb
sub
movl
imul
pop
cmpsb
rorl
inc
lods
jb
jnp
mov
xchg
inc
xchg
lret
test
add
in
loopne
xor
dec
xor
jge
push
or
lahf
dec
sarb
imul
je
sub
sub
push
cld
mov
xchg
jno
pop
xchg
push
gs
push
sub
sub
pusha
cmp
cmpsl
insl
cltd
push
insb
in
inc
xchg
into
mov
fs
add
lret
cld
in
dec
adc
movsl
rolb
xchg
andl
loopne
cmp
or
push
inc
jle
fisttpll
xchg
mov
iret
out
repz
call
inc
imul
lds
hlt
movnti
mov
pop
and
push
lock
cwtl
imul
mov
test
xchg
mov
out
or
inc
sti
loopne
cmp
rcrl
je
aad
int3
mov
je
or
add
fucomi
add
sbb
mov
int3
jp
scas
aad
insb
fst
pop
les
leave
jo
cmc
call
lods
mov
sbb
pop
cmp
in
mov
and
push
xchg
aas
testb
push
cld
jne
dec
push
mov
scas
inc
hlt
pop
pop
or
in
cmc
lret
test
fbstp
call
xchg
loope
xor
pop
pop
cmc
dec
sbb
and
scas
sbb
sub
je
enter
jbe
into
cmc
fstl
xchg
testl
pop
inc
pop
push
add
les
sbb
sbb
lcall
add
adc
xchg
jecxz
stos
or
je
lret
cs
je
ss
adc
aaa
dec
sub
jnp
filds
es
sbb
push
mov
push
inc
mov
jae
mov
inc
cmpsb
aas
add
fdivl
mov
pop
mov
in
jnp
fucomi
adc
mov
cmp
adc
arpl
sbb
dec
ficomps
cmp
adc
arpl
pop
insl
insb
mov
pop
mov
inc
push
add
mov
and
push
in
cmpsl
gs
or
inc
inc
lea
cmp
adc
lret
daa
and
lret
dec
mov
popl
mov
sub
lret
xor
sarl
mov
in
jae
rcr
xchg
cwtl
push
or
mov
jae
sahf
pop
pop
or
mov
dec
ljmp
jne
and
inc
arpl
shlb
sub
call
inc
lock
ljmp
loop
mov
cmp
push
fsubrs
or
and
jl
movsb
ss
out
lcall
jne
ss
and
xchg
inc
pop
sub
daa
cltd
daa
sbb
jns
and
ja
repz
mov
test
mov
add
fcoms
mov
pop
das
cmpsl
mov
test
jo
dec
mov
dec
divb
movsb
outsb
into
or
movsb
sub
cwtl
dec
outsb
push
sahf
push
mov
subb
sub
ja
cmc
dec
fs
dec
adc
push
aas
pop
shlb
xor
mov
cmpsl
data16
sbb
es
xchg
add
xor
dec
and
insl
les
adc
addb
mov
jmp
dec
pushf
or
dec
lods
add
mov
cmp
dec
cmc
pop
mov
push
xor
lods
jg
cmp
mov
fiaddl
fadds
stos
cmp
sbb
mov
inc
push
repnz
pop
lds
sub
lahf
fldcw
mov
sub
gs
lret
movsb
xchg
cmp
pop
dec
mov
or
push
xchg
lea
shrl
test
mov
fwait
andl
movsb
inc
xchg
rcrl
sbb
ljmp
pop
lods
sbb
clc
jnp
adc
pop
ds
stc
adcl
pop
xchg
mov
icebp
fsts
aad
mov
mov
xorb
xchg
test
mov
lods
testl
cwtl
xor
imul
or
or
pop
push
aaa
mov
inc
pushf
mov
in
xchg
das
testl
hlt
cli
icebp
fs
jmp
jne
mov
mov
sbb
rclb
into
add
out
sbb
imul
jge
stos
test
inc
cmp
and
ds
decl
shr
jge
jo
and
loope,pn
xchg
data16
outsl
aam
push
nop
dec
dec
les
std
xchg
in
jb
arpl
xor
push
jg
pop
iret
jbe
fcoml
push
cmp
add
inc
mull
je
and
inc
or
cltd
sub
pushf
jge
sub
push
pop
es
lret
insl
push
sar
repnz
jg
ret
sub
add
or
and
jnp
mov
out
jg
sarb
mov
ljmp
mov
bound
and
push
mov
ret
xchg
stc
or
and
or
dec
xlat
pop
cmp
aam
xor
xlat
rolb
imul
push
repnz
je
mov
jmp
mov
xlat
adc
mov
ss
or
loop
mov
jae
andb
sti
loop
dec
add
mov
pop
out
movsb
pop
jne
popf
ret
inc
sub
push
cmp
jne
jo
push
aam
push
iret
cwtl
fstps
inc
sub
push
ret
hlt
out
test
cmp
adc
xchg
aaa
inc
mov
inc
xchg
cmp
dec
dec
add
shl
mov
movsb
rcll
int3
bound
sbb
jno
xor
adc
ljmp
orb
mov
add
sub
inc
mov
cmpsl
xor
fmuls
inc
fistps
xchg
xchg
adc
arpl
mov
out
ret
pop
fstps
rorb
jbe
dec
push
add
mov
jge
xchg
jne
lock
cmp
jne
lds
daa
cmpsl
adc
clc
movsl
adc
and
push
fstl
dec
lds
dec
push
and
push
add
sahf
jmp
lea
sub
fsubrl
lcall
mov
movsl
lods
daa
movsl
and
mov
or
cmp
jb
push
jne
xor
cmp
jmp
in
add
pop
cmp
mov
pop
or
and
push
es
adc
push
and
jae
test
push
or
mov
xor
stc
imul
insb
sub
push
outsl
cmp
pop
jo
testl
out
cmp
adc
or
pop
sbb
dec
cmpb
mov
ljmp
or
pushf
mov
or
push
gs
loope
or
outsb
xchg
xor
pcmpgtw
scas
dec
mov
cmc
mov
cltd
sub
xor
cltd
push
ja
pop
pop
sbb
ljmp
xchg
inc
mov
cmc
in
jns
sti
push
stos
cmp
pop
jge
cld
jo
mov
and
xor
xor
sbb
nop
adc
int
mov
stc
xor
and
mov
idiv
push
mov
hlt
ret
inc
pop
cmc
mov
imulb
or
xor
pop
push
or
mov
push
andl
hlt
into
jo
cmp
call
into
addl
in
shrb
js
cmc
push
inc
and
inc
lahf
shl
or
fnstsw
bound
pop
mov
cmp
pop
sub
add
and
lcall
or
addr16
mov
mov
loop
pop
adc
jge
sarl
lods
xor
cltd
cs
je
xchg
daa
int3
push
fstl
inc
jnp
outsb
jle
sbb
imul
pop
xchg
in
push
inc
loop
out
imul
inc
fldt
fs
sbb
jo
addr16
es
sub
ret
jge
dec
and
cmp
push
incb
push
mov
repz
out
ret
sti
pop
dec
ds
dec
mov
mulb
inc
xor
and
fistl
mov
xchg
aas
in
mov
xchg
mov
loope
push
sub
pop
outsb
jnp
jno
xchg
repz
or
inc
mov
push
cwtl
adc
sub
or
ds
dec
lgs
mov
loopne
outsb
icebp
xlat
push
cmp
iret
popf
mov
leave
bswap
push
sub
or
rclb
mov
add
adc
jnp
pop
pop
mov
int
mov
jne
sub
pop
pop
call
pop
sbb
imul
or
movsb
adc
jne
inc
mov
xchg
adc
pop
and
cmc
shlb
aam
lcall
push
loope
fs
imul
dec
stos
stos
repz
enter
inc
xor
fstps
xor
xchg
mov
mov
imul
es
loope
cmpsl
inc
mov
xchg
sbb
push
movsb
and
mov
int3
push
pop
pop
cmp
mov
and
jmp
int
bt
jp
mov
out
cwtl
arpl
andb
push
add
mov
and
imul
xchg
push
and
fsubr
lahf
arpl
incb
hlt
push
je
pusha
sbb
scas
mov
xchg
ss
jb
fdivs
jl
inc
movsb
add
bound
out
mov
adc
es
stos
ffree
mov
or
mov
ficoml
add
inc
sbb
cmpsb
or
imul
sbb
imul
and
js
movsl
dec
aas
xchg
les
mov
inc
jmp
arpl
dec
adc
fsubr
mov
mov
push
cmovnp
mov
outsb
cltd
icebp
push
sub
pop
loop
dec
lea
jnp
sahf
push
jbe
fs
fwait
outsb
daa
in
in
dec
mov
lock
mov
jmp
mov
jae
add
or
xor
push
insl
js
mov
xchg
daa
test
xchg
in
test
dec
int3
ss
fsubrp
loope
add
push
das
inc
testb
add
dec
sbb
add
push
cltd
leave
add
or
stos
leave
sub
mov
xor
pop
mov
into
rcll
rorb
cmp
rcrb
andb
add
lods
push
out
lahf
xor
fisubl
mov
fsubs
repz
in
pop
sbb
insl
addr16
dec
sarl
testl
imul
add
dec
mov
scas
adc
jb
push
sub
and
jo
out
cmp
nop
xor
sbb
lret
ret
inc
fcoms
push
mov
rorl
and
pusha
or
push
mov
outsl
push
sbb
mov
rcrb
mov
push
push
aam
ror
test
add
enter
sahf
mov
xor
shl
push
push
jnp
jae
mov
ficoml
ror
lahf
fwait
and
andnps
dec
pushf
mov
mov
mov
pop
hlt
xchg
arpl
bound
popf
jp
and
sbb
jnp
rclb
cltd
in
cmp
stos
aaa
fbstp
test
push
and
sarb
in
jo
rcll
and
rcrl
addr16
leave
jno
fidivrl
lahf
push
loope
jae
mov
sub
idivl
mov
adc
inc
ds
leave
addl
jmp
lock
cmp
pop
or
subl
jo
or
ljmp
loopne
push
je
mov
push
cmpsl
bound
rclb
push
test
mov
shll
or
sbb
cld
adc
fistpll
push
fistpl
push
cmpsl
stos
enter
mov
push
sbb
and
sub
movsb
test
push
xlat
test
repnz
je
arpl
inc
mov
dec
sub
mov
data16
notb
xor
loopne
call
jae
loope
push
jnp
frstor
add
pop
or
push
outsb
sti
insl
rcl
adc
stos
out
mov
mov
xor
mov
negl
sarb
push
jns
cmp
mov
pop
repnz
jmp
xor
out
in
xor
cmp
cmp
popa
das
or
cltd
popa
leave
add
xor
scas
add
test
fwait
mov
dec
inc
mov
cmp
cli
pop
jle
jno
lods
addr16
roll
jns
jmp
insb
xchg
push
or
stos
ljmp
leave
fadd
add
adc
sub
fidivs
pop
push
jno
ljmp
sbb
cmp
mov
mov
xor
jno
sbb
push
test
loope
int
outsl
push
and
aaa
pop
fwait
inc
mov
imul
lret
add
mov
jmp
aam
mov
stos
cmc
or
push
and
insb
cld
rclb
cmp
into
cmp
frstor
add
outsb
scas
nopl
or
lods
mov
jae
xor
push
mov
pop
es
jg
mov
les
roll
fstl
inc
xor
je
stos
or
mov
xchg
xor
int3
xchg
rcr
mov
clc
xchg
nop
sub
rcll
xchg
xchg
push
adc
xchg
xchg
fdivrl
push
cmp
aaa
enter
jo
cwtl
or
push
mov
sub
int3
xchg
ds
jns
push
shl
dec
lea
clc
leave
pop
push
and
test
cmp
or
cltd
ficomps
mov
mov
out
push
ja
dec
pop
ljmp
in
jge
pop
in
cmp
push
fs
push
repz
inc
adc
and
je
ret
cmpsl
jb
dec
jns
and
int3
nop
fildll
mov
jo
movb
push
xchg
jmp
mov
mov
sub
xchg
pop
sub
pop
mov
rcl
outsb
punpcklwd
pushf
mov
inc
aam
out
add
sar
loope
adc
cmc
xlat
mov
adc
aad
out
xlat
orb
pop
test
stos
sarl
push
aam
gs
movsb
out
stos
out
jecxz
push
mov
lret
pop
loop
test
aad
aam
or
cmc
sti
inc
das
jne
sub
int3
xchg
add
out
aaa
aas
ljmp
xchg
lock
int3
sbb
cmpsb
or
add
fildl
mov
sar
jb
adc
imul
lcall
fbstp
jp
in
pop
sub
fs
in
adc
shlb
fs
pop
jb
shlb
stc
inc
pop
mov
imul
jp
xchg
cmp
mov
int
pop
xchg
sti
dec
mov
repnz
adc
sarb
lret
xchg
xor
out
push
xor
das
ret
hlt
test
aas
add
rol
stc
cmp
xchg
pop
je
jb
jns
jg
sti
lds
movsb
push
mov
in
and
bound
psrad
mov
lret
inc
xlat
and
jo
or
mov
test
rcll
mov
mov
and
cmp
adc
icebp
repz
jp
dec
cltd
push
pushf
insb
dec
push
jno
lods
enter
jns
lock
jb
aas
sbb
pop
inc
mov
jae
adc
shrl
jb
cs
pop
cltd
hlt
inc
fadd
sub
mov
cmp
dec
call
mov
push
out
loop
xor
jae
in
jge
fildll
jp
push
outsb
lods
ds
push
dec
mov
mov
ret
pop
outsb
jl
jnp
sbb
mov
push
les
outsl
scas
pop
mov
and
fldt
test
mov
insb
iret
out
call
lods
rolb
jle
cmp
rcrl
push
leave
mov
cmp
lahf
mov
push
fbstp
in
scas
imul
xchg
pushf
int3
xor
mov
test
insl
mov
push
rol
adc
mov
jmp
mov
mov
scas
pop
cmp
imul
int3
pop
in
adc
lods
loop
clc
test
sbb
shll
inc
cmp
inc
mov
sbb
inc
adcl
xor
rcll
push
cmp
dec
and
stc
pop
sbb
xchg
pop
lret
test
lods
and
aas
inc
mov
popa
mov
jne
mov
ds
sti
outsl
fstpt
jmp
clc
dec
in
mov
dec
rol
subl
cmp
dec
bound
add
stos
cmpsb
clc
fsts
push
nop
subb
pop
and
fbld
pop
push
rol
rolb
in
bound
outsb
add
pusha
inc
mov
cwtl
lret
sar
pop
and
bswap
aaa
cmp
js
pushf
jecxz
mov
xor
ljmp
xor
sarb
xchg
stc
scas
subb
add
and
and
xchg
nop
mov
mov
dec
jnp
cs
xor
test
sbb
mov
pop
mov
out
mov
fwait
xlat
dec
cltd
js
sbb
mov
inc
insl
mov
mov
mov
enter
jecxz
mov
popa
mov
mov
xlat
sub
fildl
sub
fildll
call
sbb
fnstenv
jp
xor
pop
and
std
call
xchg
ljmp
cmp
inc
loop
fucom
sub
pop
pop
es
je
mov
int
push
and
xchg
out
push
jb
adc
xor
and
xor
pop
adc
mov
jp
les
fstpt
fists
add
std
dec
pop
add
sbb
and
mov
jno
dec
addl
ret
xor
pop
divl
inc
cli
loop
cli
push
jae
xchg
dec
inc
push
dec
sub
ljmp
cmp
jmp
add
xchg
mov
push
push
clc
adc
mov
lods
mov
push
adc
add
jg
ret
xor
or
jmp
mov
dec
pop
incb
push
dec
xchg
jg
subb
pop
and
xor
pop
leave
xchg
pushf
les
cltd
jbe
iret
mov
hlt
cmp
dec
mov
fisttps
leave
insl
or
push
sti
sti
sbb
xor
mov
mov
testl
ja
je
ss
roll
mov
out
cmpsb
scas
mov
dec
dec
cmp
pop
repnz
es
jno
sub
mov
push
jp
lods
inc
xorl
into
hlt
cmp
sub
ret
outsl
pushf
loopne
mov
jno
push
int
out
adc
push
add
adc
lcall
push
sbb
test
das
out
cmc
out
pusha
xchg
jo
int
pusha
loop
sub
sbb
pop
rcrb
add
leave
mov
pusha
xor
add
andl
int3
adc
jb
jge
mov
test
dec
mov
jmp
loope
mov
add
mov
lods
cwtl
mov
notb
add
std
push
ja
aaa
and
insl
inc
rclb
int3
jnp
xor
fnsave
int3
inc
and
jbe
sbb
pop
mov
call
and
and
pop
cmp
loope
xchg
push
pop
test
pusha
outsl
icebp
xchg
repz
xor
dec
adc
mov
jns
movsb
inc
sub
scas
out
add
xor
ret
stos
fwait
or
cs
pop
nop
mov
pop
pop
icebp
ja
leave
repz
icebp
cmc
int3
aas
jl
outsb
sbb
stos
pop
or
mov
xchg
into
test
mov
popa
dec
and
nop
mull
mov
add
push
add
mov
push
mov
std
sbb
add
mov
push
fisttps
pop
pop
push
cmpsl
shrb
push
xchg
mov
dec
push
test
test
ret
insl
outsb
dec
sub
pop
repz
test
cli
je
and
push
prefetch
mov
subb
sub
ss
leave
add
lods
sahf
call
add
sti
pusha
jbe
je
fdivrs
and
pop
push
mov
push
imul
mov
dec
or
adc
mov
sbb
xchg
sub
dec
nop
adc
movsl
lods
pop
mov
adc
fildl
popl
push
cmp
mov
mov
xlat
movsb
xchg
lods
jle
mov
fimuls
add
adc
jbe
aaa
jns
add
mov
pop
pop
jl
pop
pslld
jl
lock
cmp
pop
sbb
lea
push
cmp
jno
leave
sbb
jg
and
sbbb
ljmp
sti
rcrb
cmp
mov
add
mov
lcall
lahf
mov
fldenv
jo
ret
cs
pop
add
push
dec
cmp
nopl
mov
inc
add
and
iret
scas
xor
fnsave
xchg
loopne
adc
xor
jl
or
testb
pop
and
sbb
cwtl
or
gs
pop
inc
jge
push
sahf
jge
adc
inc
cmp
lahf
scas
mov
sqrtps
push
or
lcall
xor
clc
lea
out
xor
ds
pop
lock
in
notb
push
or
sarb
dec
arpl
roll
jne
adc
dec
mov
popf
mov
and
movsl
xchg
out
push
sbb
add
movsl
dec
xchg
out
jp
jge
mov
ss
stc
jmp
xor
fucomi
sub
sbb
outsl
jl
mov
aaa
push
jae
inc
into
fdivr
and
sub
or
xchg
dec
xchg
add
jo
lods
std
out
out
jno
jnp
push
dec
rolb
js
xchg
sub
xor
mov
stos
nop
inc
xor
and
sub
ret
fwait
js
jae
mov
mov
mov
jbe
sub
mov
in
jecxz
jmp
cwtl
cltd
ds
fcmovbe
mov
inc
movsl
popa
lahf
test
pcmpeqd
imul
rcrb
sbb
mov
xchg
or
adc
mov
push
test
or
mov
dec
pushf
cld
xchg
or
out
xchg
xor
in
cmp
jbe
mov
xor
popa
xchg
mov
lea
inc
sbbl
lret
jle
bound
movsl
std
adc
dec
push
push
stos
lret
mov
loopne
push
pop
bound
lcall
xchg
adcl
test
scas
sbb
mov
test
jge
test
push
lret
cld
push
js
loope
out
cmp
int
jbe
pop
aam
and
add
into
push
lods
or
mov
jl
inc
je
xchg
scas
lahf
into
in
stos
xor
hlt
ficoms
push
rcll
dec
nop
inc
sub
in
adc
and
nop
mov
mov
cs
aas
pushf
sahf
movsb
inc
insb
pusha
rolb
cmp
mov
shl
and
xchg
xor
hlt
imul
inc
in
dec
mov
fxch
pushf
repnz
adc
xchg
mov
and
cld
mov
ja
pop
pop
scas
js
xchg
mov
adc
scas
into
js
sub
stos
fdivs
aas
loop
pop
loop
in
mov
aaa
mov
and
pop
mov
flds
sbb
rorb
int3
and
inc
sbb
stos
jno
dec
push
xlat
cs
cmpsl
sti
pushf
adc
push
adc
or
movsl
or
mov
out
cmp
in
fs
movb
lods
imul
repnz
lret
jne
cmp
cmp
sarb
int3
inc
lock
and
and
iret
jb
je
jno
std
test
nop
mov
pop
loopne
pop
iret
addr16
xor
mov
cmpsb
mov
push
out
movsl
mov
fadd
insb
dec
mov
roll
pop
push
pop
cmp
add
cmc
and
jbe
lock
outsb
and
test
add
pop
je
pop
lret
insb
and
add
or
push
ds
test
xchg
hlt
dec
cmp
or
or
gs
notl
rcrl
aad
or
sub
jns
ret
adc
sub
mov
iret
outsl
das
push
xorb
push
mov
sbb
push
std
pop
and
xchg
push
adc
dec
cmc
mov
outsb
xor
das
inc
pop
sbb
or
lret
jle
or
mov
push
and
or
and
scas
ja
in
push
imul
and
int3
lret
pop
std
xchg
xchg
mov
in
push
pop
testl
adc
sbb
xchg
dec
pop
mov
dec
rcrl
enter
inc
loopne
mov
mov
es
outsb
adc
mov
pop
mov
call
xlat
repnz
or
mov
adc
popa
sbb
mov
sbb
inc
pop
std
pushf
mov
rorl
push
and
jne
xchg
mov
outsl
cmp
adc
push
les
mov
or
call
fcomi
lret
js
jle
pop
les
les
jb
leave
popf
div
out
cmp
iret
je
mov
in
jo
fwait
mov
or
sti
inc
push
mov
jle
pop
fs
dec
movsb
xor
std
or
adcl
loopne
or
sbb
stc
cmpsl
cld
enter
sahf
js
xchg
cmpsl
dec
test
je
iret
inc
mov
les
sub
push
xorb
test
leave
ds
cmpsl
ret
mov
insb
divb
mov
jg
jmp
and
in
lahf
mov
mov
pop
insl
lea
push
out
in
lcall
daa
idivb
push
cmpsl
sti
jle
push
imul
jmp
mov
out
push
sbb
sub
cmc
adc
data16
mov
cmp
cmp
push
iret
popf
xor
xor
out
mov
sbb
jbe
outsb
lea
xchg
jns
mov
sbb
inc
rolb
roll
movsb
mov
out
mov
push
pop
mov
sbb
stos
xchg
call
sub
pminsw
mov
jne
into
das
cmp
mov
xlat
add
push
jle
or
or
pop
mov
pop
loopne
aas
popf
dec
fs
stos
bnd
gs
orl
inc
bound
sbb
les
ds
sub
mov
xchg
pop
sarl
xlat
lret
add
enter
push
dec
test
iret
mov
std
or
addl
dec
mov
jmp
push
push
mov
jge
aam
imul
jnp
in
lcallw
adc
mov
ficoms
lds
in
xor
in
lcall
setge
fsub
mov
sub
push
into
ljmp
loop
mov
stos
mov
loop
aad
jno
mov
ds
pop
xchg
xchg
sub
pop
pusha
mov
fcoml
dec
jl
xlat
out
pop
and
and
fistpll
pop
xchg
popf
pop
test
add
mov
xchg
mov
enter
mov
dec
fistpll
je
fwait
adc
inc
dec
add
lret
iret
in
jns
or
cmp
push
xor
outsl
and
inc
jno
loope
sbb
out
mov
stos
jno
sbb
or
fdivl
push
xor
inc
nop
xor
and
push
jp
mov
jp
mov
lcall
aaa
jp
push
ret
jae
push
or
fidivrl
push
xchg
jg
shrl
dec
mov
push
push
jecxz
sub
push
pop
mov
test
and
outsl
sbb
out
adc
lret
push
jl
mov
push
mov
push
sbb
sahf
xchg
xchg
cmpsl
or
imul
lret
adcb
xor
mov
scas
push
gs
popl
pop
mov
mov
adc
jo
mov
cli
sub
jnp
loope
out
lret
sti
enter
test
shr
imul
push
mov
jmp
lcall
xchg
repz
add
popa
test
lods
and
out
std
std
aam
into
and
sbb
sarl
scas
aas
mov
mov
out
std
sub
push
pop
pop
loop
cmc
dec
lds
loopne
je
mov
jp
popa
xchg
repnz
in
xor
rcr
leave
push
xchg
rclb
pusha
xor
cmp
addr16
xchg
sbb
stos
or
bound
dec
loop
jmp
adc
iret
mov
frstor
fldl
mov
and
pushf
cmp
rorl
je
insl
cmp
out
sub
push
sbb
or
cmpsl
lods
fcompl
out
js
sbb
stc
mov
aam
sbb
movsl
movzwl
cltd
or
adc
mov
shrl
or
inc
sub
imull
jnp
sbb
sahf
mov
imul
push
mov
lahf
sti
outsb
push
scas
xchg
mov
and
ret
sub
out
push
mov
xchg
dec
movsl
pop
pop
mov
pop
pop
inc
pop
xor
push
lea
repz
call
jbe
mov
mov
pop
push
inc
adc
xchg
and
popf
les
xor
aaa
es
scas
pop
push
inc
or
sub
rolb
loopne
pop
inc
push
jg
fs
sub
push
xchg
outsl
pushf
stos
or
pop
mov
cwtl
and
fdivrs
adc
cmp
inc
push
test
ds
into
das
sar
adc
sbb
or
push
jl
mov
add
fmull
orb
cs
push
fs
ror
lds
xchg
mov
aad
scas
test
push
mov
loop
lea
in
or
jecxz
ljmp
cli
jae
test
add
pop
mov
insl
out
hlt
dec
push
pop
popf
add
mov
cs
mov
mov
shl
jae
and
popf
jecxz
push
mov
and
cwtl
xchg
xchg
push
fimull
repnz
xchg
mov
xor
mov
fistps
sahf
imul
add
xor
push
add
addl
add
insb
cltd
fs
cltd
scas
fs
xchg
xor
mov
jl
push
int
rcll
jae
push
test
cmp
mov
decl
movsb
loopne
inc
ret
sub
outsl
mov
mov
xor
cmp
into
data16
mov
jo
xchg
divl
or
xchg
aad
mov
loopne
add
sub
dec
add
mov
or
inc
xlat
mov
cmp
cmpsl
push
outsl
in
pop
lds
inc
mov
ret
xchg
stc
sub
outsl
xchg
je
lds
pusha
fsts
imul
cmp
push
lods
xchg
aam
pop
ret
push
mov
mov
mov
cmp
and
xchg
cmp
mov
pop
nop
inc
pop
mov
repnz
dec
fdivrl
mov
out
icebp
bound
repz
cli
mov
xchg
sti
scas
insb
xchg
sub
cltd
sarb
jne
lock
sbb
repz
cmp
popa
mov
outsb
mov
jae
mov
xchg
ja
outsl
leave
mov
and
push
test
adc
cmp
push
pop
pusha
push
ja
iret
das
mov
fcoml
lds
in
in
repnz
adc
inc
adc
repnz
movsb
scas
xor
sti
adc
jmp
pop
addr16
cld
insb
inc
mov
ljmp
and
shl
lcall
mov
jo
jg
mov
mov
mov
in
sarb
sub
sar
lret
jp
and
or
popa
test
loope
inc
or
popf
push
push
ret
mov
lods
movsb
wrmsr
hlt
pop
rclw
mov
push
pop
push
orl
push
pop
cmp
or
in
pop
push
mov
enter
repnz
daa
xchg
cmc
jno
adc
mov
sti
fadd
inc
adc
ret
jl
dec
mov
setle
inc
test
jbe
mov
fadds
ficoms
push
jmp
inc
sub
test
xchg
jle
mov
lahf
js
mov
sbb
ljmp
test
pop
or
pop
sahf
lahf
jo
xlat
sbb
bswap
mov
rcrb
es
pop
pop
pop
scas
push
test
js
scas
and
jmp
mov
inc
outsl
cmp
add
lret
or
sbb
imul
jl
dec
lds
ljmp
leave
test
das
leave
xor
rcrb
lea
hlt
out
cmpsb
imul
dec
push
cmpl
jecxz
and
or
cs
lret
out
pop
aad
movsl
inc
dec
stos
push
xchg
js
sub
aad
or
xchg
sbb
inc
loopne
in
push
std
add
jo
leave
dec
add
hlt
jge
adc
pop
jb
pop
xor
and
mov
ljmp
xchg
and
xor
mov
push
pushf
xchg
fs
mov
mov
cwtl
sbb
sbb
pop
repz
inc
adc
mov
push
pop
outsl
lahf
scas
cs
inc
lret
int3
inc
cmp
mov
mov
push
sub
dec
popa
fcomps
and
mov
cmpsl
inc
sub
jle
mov
fldcw
push
dec
dec
xor
pop
aam
int
fidivl
cltd
cli
out
inc
xor
cmp
mov
lods
int3
adc
pop
les
sub
int3
ja
dec
xchg
clc
les
fmul
mov
or
gs
pop
inc
pop
add
lods
jle
jge
stc
xor
push
and
mov
aaa
push
movsl
sub
sbb
mov
pop
fwait
int3
xor
sub
mov
sbb
repnz
enter
jo
pop
push
mov
pusha
into
unpckhps
fldt
stos
jne
insl
push
xchg
test
ljmp
das
mov
jno
inc
sub
repnz
mov
xchg
xchg
lods
ja
cld
mov
sti
fcomps
push
sbb
push
adc
xchg
popf
ss
mov
adc
push
push
dec
icebp
push
mov
movl
test
mov
arpl
xorl
sbb
xor
mov
and
dec
pop
dec
jg
sbb
enter
dec
mov
push
pop
je
mov
fdiv
or
mov
sub
cmp
inc
mov
jp
js
dec
inc
mulb
xor
and
or
xchg
cmp
packsswb
in
xchg
loopne
or
rclb
inc
jecxz
sti
mov
aas
inc
iret
inc
inc
in
mov
int3
pop
je
push
dec
xor
cmp
jge
and
stos
call
fnstsw
fwait
int
les
mov
sbb
mov
movsb
ret
stos
sbb
cli
out
lods
push
std
fld
out
push
push
jae
and
insb
lock
pushf
push
pop
mov
int
adc
lea
scas
add
mov
gs
enter
and
fadd
dec
js
loope
shrb
mov
cmpsl
jp
js
nop
ss
mov
scas
add
out
loope
jbe
pop
cs
mov
push
shrl
sbb
add
fstpt
xor
pop
sub
push
scas
mov
int
sub
pop
aas
sub
sbb
insb
orb
mov
out
loope
sub
adc
inc
xor
or
addr16
mov
inc
cmpb
pop
jb
cs
pop
xchg
ss
add
insl
aaa
mov
dec
pop
icebp
les
ja
fimuls
cmc
data16
pop
fs
into
aaa
pushf
xchg
dec
cmc
mov
inc
adc
jecxz
xor
test
out
leave
insb
mov
mov
pusha
aad
mov
int3
jle
sub
lods
or
pop
xor
aas
movsb
dec
pop
jp
push
xor
test
jae
add
test
mov
popa
push
cli
inc
pop
and
add
popl
xchg
xchg
popa
std
std
jl
and
pop
xor
arpl
sub
push
stos
push
sub
dec
inc
shrl
aaa
sbb
push
mov
dec
xchg
shll
push
cmp
dec
test
mov
mov
push
mov
adc
adc
cld
lds
inc
stc
mov
sbb
ret
test
mov
mov
addb
and
dec
jns
call
ja
mov
ja
lock
imul
cmpsl
pusha
sahf
testb
or
sub
lock
cmp
cmc
add
or
dec
jg
int3
push
sbb
cmp
cwtl
insb
popf
and
mov
mov
push
outsb
mov
lcall
inc
jp
dec
cli
cmp
rcll
cmp
add
sbb
cmp
sbb
scas
adc
or
mov
lods
sub
popf
xor
lock
xor
pusha
xchg
idivl
and
ss
pushf
fistl
pop
popa
and
or
push
lds
js
adcl
data16
aad
cmp
mov
out
mov
and
loopne
or
adc
cmp
lahf
jp
cld
mov
dec
mov
mov
mov
aam
sub
jno
test
js
mov
dec
shr
into
mov
sub
dec
jg
jmp
fistpll
ljmp
xor
push
adc
fistl
loope
pop
adc
mov
xor
call
jo
hlt
xchg
out
cmp
stc
pusha
popaw
and
dec
ds
leave
push
sahf
stc
cmpsb
pop
and
xor
dec
push
xchg
andl
cwtl
mov
dec
jp
pop
popa
ret
es
imulb
cmp
cmpsb
inc
xchg
in
inc
xor
scas
orl
mov
or
out
mov
ja
and
in
or
push
call
rorb
jo
subb
leave
stos
jne
push
xor
inc
shlb
cmpsb
arpl
roll
mov
out
pop
in
popf
or
insb
add
pop
test
aas
fxch
cld
ja
aad
movsb
inc
xorb
pop
inc
in
jg
mov
sbb
xor
sub
mov
outsb
mov
mov
rcrb
js
mov
adc
mov
leave
pop
and
xchg
add
cmpsl
pop
pop
inc
lock
lret
bound
cli
dec
pusha
je
cli
aas
sahf
arpl
and
jno
jbe
cmp
in
dec
inc
out
daa
lods
dec
adc
cmp
loopne
xor
dec
clts
into
shlb
and
sbb
inc
daa
cmp
jo
sbbb
cmp
lret
mov
stos
ss
shrb
dec
or
fmull
scas
rcl
mov
mov
shl
shlb
mov
mov
pop
lahf
out
imul
mov
inc
jg
mov
insb
idivb
pop
mull
mov
notl
sub
mov
popf
aaa
gs
push
cmpsb
daa
xchg
scas
fadds
ljmp
fwait
test
xchg
test
cltd
sbb
jo
sub
lods
jecxz
popa
mull
stos
loop
enter
mov
mov
xchg
cli
mov
test
mov
loopne
inc
mov
sbb
cmc
jg
cmp
sub
pop
mov
jne
xor
cmpxchg
scas
bound
sarb
pop
push
fwait
jmp
lock
scas
jb
out
mov
sub
xchg
and
mov
xor
and
iret
mov
pop
pop
mov
shl
jl,pn
in
sbb
outsl
sub
or
iret
push
xor
mov
mov
mov
inc
mov
adc
jl
je
push
and
shll
cmp
mov
roll
jmp
push
pop
or
mov
les
or
xor
jp,pt
or
pop
fbld
cmp
js
js
mov
jmp
jecxz
imul
ds
inc
dec
xchg
jge
aaa
sahf
inc
sub
sbb
sarl
push
cltd
or
cld
sahf
gs
leave
add
out
xchg
rorl
sbb
sbb
or
xlat
shl
mov
insb
pusha
inc
mov
daa
sub
push
lea
mov
sbb
cmp
mov
aas
or
jne
outsb
cld
cmpb
imul
fcompl
sbb
pop
leave
test
dec
jnp
jb
dec
gs
cltd
dec
cmp
lahf
fcmovu
jmp
mov
adc
mov
push
repnz
xchg
hlt
lahf
jp
pushf
jg
sti
jmp
ret
test
sub
push
push
jns
insb
mov
popa
mov
and
movsl
mov
cld
push
and
jmp
adc
jge
xor
jns
test
xchg
mov
push
mov
mov
call
dec
xor
lods
fwait
pop
dec
sub
outsl
shlb
or
jne
mov
in
xor
ljmp
push
bound
lcall
and
inc
into
and
cli
inc
or
mov
push
dec
xchg
jae
das
or
lods
inc
ss
sarb
rcll
decb
dec
mov
jns
xchg
inc
xchg
incl
adc
mov
mov
fwait
rclb
jg
inc
xchg
stos
scas
sub
xchg
sbb
pop
adcl
test
lahf
sbb
mov
adc
shrb
repz
daa
cwtl
push
and
inc
popa
das
lods
xchg
sahf
push
cmp
test
mov
cmp
xor
push
jl
sub
adc
movsb
jmp
xchg
fldl
xchg
jg
adc
shr
lea
sub
sbb
inc
icebp
stos
dec
push
test
cmp
xchg
mov
pushf
in
incb
rolb
daa
pop
adc
mov
into
aaa
xor
push
sarl
and
cmpsl
iret
dec
mov
lock
and
sub
or
fs
stos
in
fsubrs
test
cs
cmp
inc
sti
xchg
jle
xor
cmp
std
xchg
inc
xchg
jo
xor
cld
sbb
out
mov
xor
jl
sub
insl
out
ret
aaa
fildl
daa
or
orl
in
ljmp
push
mov
pop
aad
push
xchg
jno
adc
in
fcomip
push
loopne
call
mov
add
filds
mov
call
sbb
mov
cmp
sub
dec
xchg
fcomps
dec
js
dec
pop
xchg
jg
fisubrs
cmp
push
testl
dec
mov
mov
int3
inc
xor
insl
lds
test
and
mov
pop
popl
sub
ret
mov
pushf
adc
lret
lret
mov
jnp
sbb
pop
lock
lret
cld
pusha
add
push
or
mov
mov
sub
pop
and
add
mov
and
xchg
mov
call
sub
lret
jnp
imul
cli
js
in
test
ja
or
cmpl
jge
jecxz
add
shrl
addb
ret
sub
jns
cmp
and
and
inc
push
push
mov
stos
fimuls
aam
xchg
scas
mov
jb
notl
jnp
mov
in
jno
jmp
lods
adc
cmpsl
stos
adc
hlt
or
pop
or
push
add
hlt
movsb
popa
movsb
insl
daa
nop
add
popf
neg
pop
mov
popl
int3
inc
daa
jno
push
lahf
lods
push
inc
mov
call
add
inc
sbb
dec
fdiv
jmp
xchg
mov
xor
les
inc
stos
mov
or
fs
xchg
mov
fcoml
sub
mov
imul
push
xorb
dec
addr16
cmp
mov
mov
push
or
and
and
add
jnp
stc
movsl
lahf
fidivs
sub
adc
cmp
mov
xlat
sbb
hlt
fwait
push
leave
jge
inc
lock
jbe
jo
xchg
mov
cmp
adc
mov
lea
test
inc
lcall
sub
cli
gs
inc
js
lahf
mov
lods
push
imul
jmp
out
cwtl
mov
add
adc
mov
pop
cmpsb
push
test
cmp
repz
cli
jbe
addr16
icebp
sahf
xchg
popa
jnp
dec
pusha
out
cmp
insb
push
sbb
pop
pusha
or
rorb
gs
inc
loop
lcall
adc
sahf
pop
dec
mov
sti
dec
sarb
sub
adc
dec
cmc
jmp
roll
mov
mov
push
dec
insb
nop
add
mov
cmp
jecxz
jae
sub
sub
push
dec
and
adc
jno
repz
mov
jl
pushf
cmpsl
data16
fwait
sub
and
and
xor
les
sti
inc
fsts
icebp
in
inc
daa
fcomps
jmp
hlt
adc
out
lea
mov
dec
push
cmc
dec
pop
shrb
sbb
xchg
jmp
test
rclb
push
lret
rcll
mov
adc
cmp
mov
cli
shrl
mov
insb
mov
cmc
pop
jp
int3
mov
sbb
pop
in
add
push
mov
xor
adc
cmpsb
jp
sub
std
add
cmp
pop
add
call
lcall
lea
mov
fsubrs
fnsave
jb
push
mov
in
and
iret
cltd
cmp
std
lds
inc
ror
lret
popa
adc
frstor
dec
shl
movsb
lea
mov
push
xchg
and
cli
xor
push
mov
jmp
mov
sbb
cmp
lret
xchg
mov
int3
stc
jmp
or
add
fdivrs
lret
cmp
movsb
xorl
arpl
mov
xor
xchg
out
fwait
rol
cmpsb
inc
std
dec
add
mov
inc
mov
jecxz
add
xor
xchg
sub
xchg
lret
jae
mov
pop
lock
nop
unpckhps
push
cld
xchg
jnp
jo
lret
fucomip
jmp
cmp
inc
in
cltd
test
inc
in
adc
xchg
and
add
cmp
cmp
mov
orl
insb
xchg
inc
push
repnz
xchg
int
addr16
negb
stos
sbb
jb
movsb
ja
data16
lods
fstps
adc
push
dec
in
js
in
popf
popa
add
xchg
lods
arpl
scas
aas
add
xlat
mov
dec
inc
or
jnp
fmull
shr
stos
xor
das
pop
lret
ret
sbb
mull
ret
int3
dec
mov
jb
push
pushf
popf
push
sahf
mov
aaa
adc
cmc
adc
adc
xor
or
or
es
icebp
pusha
sarl
xchg
xor
fistps
or
xchg
sub
std
divl
fistl
in
xchg
outsl
sbb
xor
test
inc
push
and
xchg
cli
sub
add
bound
inc
push
popf
push
xor
mov
mov
mov
addr16
std
imul
sbb
std
ret
mov
ja
xchg
push
pusha
out
sub
mov
in
jp
dec
xchg
pop
xor
repz
mov
push
mov
and
or
pop
popf
loop
adc
push
in
xlat
xchg
sbb
adcl
cmp
cmpsl
out
mov
pop
mov
fnstenv
scas
adc
cwtl
mov
push
sub
dec
test
dec
fisttps
sbb
mov
nop
mov
inc
cmc
xor
push
stos
notl
xchg
loope
imul
mov
pop
adc
mov
pushf
push
fwait
je
inc
jge
icebp
lods
scas
adc
lret
cltd
lock
sbb
jb
sbb
lods
fbld
sub
lret
or
mov
call
fnstsw
cltd
fdivrl
repz
bound
xor
cld
mov
inc
repnz
mov
aam
mov
lock
add
outsb
jge
sub
notb
aam
and
notb
adc
xorb
mov
push
mov
mov
adc
jno
adc
popf
inc
sbb
mov
imul
mov
mov
cmp
cmp
mov
mov
into
enter
test
punpckhdq
lds
lock
jg
cmp
add
fsubrl
scas
fiadds
and
xchg
mov
adc
jns
popa
call
push
jb
sub
mov
sbb
or
or
addps
pop
mov
push
rcll
lock
jle
mov
movsl
rol
fadd
mov
inc
jecxz
pop
arpl
pop
add
mov
lods
shlb
or
imul
jne
sahf
hlt
imul
add
mov
int3
or
cmp
and
push
xchg
pop
inc
cmp
mov
mov
pop
mov
mov
mov
mov
inc
push
sub
subb
cwtl
int3
imul
lock
repz
and
adc
cmp
lret
pop
data16
dec
lahf
or
fld
fists
add
fistpl
js
jae
pop
mov
aas
lret
sub
sbb
sbb
test
andb
movsb
sahf
fnstsw
or
cmp
dec
dec
lods
pop
test
ljmp
mov
mov
add
xor
decl
clc
daa
xor
jno
je
int3
xchg
pop
sbb
or
int
jge
lock
xor
mov
aad
xchg
push
mov
inc
dec
into
pop
mov
mov
loop
add
in
add
lods
pop
mov
out
xor
jns,pt
sub
insl
cmp
mov
xchg
push
stos
pop
xchg
jl
arpl
mov
bound
dec
stos
and
scas
sbb
and
pop
cmpsl
xchg
aaa
pmulhw
jne
xor
stos
xchg
mov
lds
sub
sbb
dec
popf
mov
push
pop
push
sub
xchg
aas
push
and
rorb
pop
rolb
sbb
in
test
jb
and
repz
adc
add
pop
or
jno
sbb
xchg
mov
mov
rolb
shr
rclb
cmc
enter
pushf
int
push
cld
mov
add
stc
mov
outsl
loope
lea
and
dec
sub
jp
orl
inc
rorl
pop
mov
testl
sbb
in
stc
lods
xchg
pop
popa
mov
adc
pusha
and
mov
jmp
shl
push
ljmp
mov
and
mov
lea
sbb
pop
mov
pop
jno
xorb
inc
push
lret
add
cmp
ljmp
and
xchg
addr16
pop
jp
out
jg
sub
push
stc
andb
test
add
and
dec
fbld
mov
lret
cltd
inc
mov
xchg
mov
inc
mov
cmp
xchg
jb
ss
adc
data16
xchg
in
pop
mov
not
and
sahf
push
loop
cmp
xchg
ret
mov
dec
pusha
adc
das
push
fildl
dec
bound
push
mov
and
sub
jb
and
jge
out
jg
mov
lahf
and
push
pop
cmp
mov
sub
cltd
iret
adc
mov
jb
repnz
lods
xchg
adc
js
dec
cmpsb
or
mov
mov
jae
icebp
inc
data16
mov
pushf
hlt
mov
scas
mov
pop
es
loop
jae
add
sub
and
cmpsb
pop
jle
rcll
fcmovb
popa
stos
lods
xor
rolb
mov
out
add
or
outsb
in
shl
push
push
cmp
es
ret
rolb
test
xchg
enter
jg
pop
pop
cmpb
cwtl
and
mov
cmp
test
inc
adc
mov
or
aam
scas
push
and
pusha
in
loope
jae
out
fmul
ds
mov
cs
cwtl
shlb
sahf
push
movb
mov
push
mov
inc
js
or
and
out
or
das
orb
ds
jbe
sub
insb
pop
in
sahf
add
rcrl
call
and
mov
bound
hlt
inc
adc
cmpsl
dec
sub
iret
cmp
retw
and
fldcw
lret
mov
lcall
shll
cmp
jbe
mov
rorb
out
mov
enter
xchg
imul
mov
data16
arpl
cltd
call
xorl
lods
jb
movsb
sarl
cs
out
pusha
stos
xor
js
sti
testl
push
clc
xchg
mov
int
cmp
pop
sub
shl
insb
xor
push
pop
out
fsubl
xor
fsubr
jno
push
dec
jmp
mov
iret
fisubrl
inc
mov
rorl
int3
stc
adc
lea
arpl
push
je
mov
out
sub
and
sbb
pusha
fucomi
iret
imul
xchg
punpckhdq
bound
xor
testb
pop
movsb
std
pop
sahf
test
mov
roll
lods
ds
or
insb
mov
cwtl
pop
xchg
inc
shl
sub
fnstenv
arpl
fdiv
lret
pop
cmp
xchg
mov
and
testl
mov
adc
mov
xchg
mov
xchg
cs
jne
xchg
lods
lods
fmull
mov
xor
repnz
push
imul
cmc
out
xor
mov
mov
fldt
stos
or
push
adc
lds
sbbl
add
dec
std
stos
fdivr
jae
push
cmp
pop
add
push
pushf
xorb
pop
inc
jo
cmp
add
mov
lea
mov
cwtl
cld
add
cmc
popf
sbb
sub
aad
test
rcl
mov
or
enter
mov
fs
pop
mov
sub
imul
dec
in
cmp
popf
xor
xchg
cmpsb
or
mov
pop
rcr
mov
test
jg
out
sub
aas
pop
adc
iret
jo
cmp
lds
stos
orb
ret
mov
loopne
clc
push
xor
or
mov
inc
pop
mov
mov
andl
sahf
aad
insl
push
jno
push
imul
pop
mov
adc
je
sub
add
sbb
push
sbb
in
push
sub
add
popf
adc
push
loopne
into
je
sub
dec
add
stos
mov
jmp
pop
outsl
dec
loope
shl
xchg
sub
aas
es
cmp
and
mov
xchg
add
dec
sar
cmpsl
rorl
in
pop
rcrl
pop
je
sub
pop
jo
pop
xchg
add
mov
out
pop
adc
or
inc
cmp
or
leave
mov
pop
cli
sub
xchg
sub
jne
adcb
pop
rorb
in
mov
push
bnd
das
xchg
lret
mov
int
or
xor
mov
mov
adc
xor
push
dec
adc
scas
mov
add
fstps
fimull
hlt
sbbl
jg
leave
push
rol
sbb
in
sbb
xorl
iret
mov
jle
sbb
inc
add
sbb
pop
insl
popf
sti
stos
inc
xchg
imul
dec
xor
pop
out
sub
sbb
out
loopne
cltd
je
cltd
fwait
pop
jge
popa
xchg
mov
arpl
icebp
mov
pop
mov
decb
cmpsl
out
pop
sub
rorl
cmpsb
adc
push
aad
ret
jp
sub
jecxz
ret
andb
xchg
xchg
push
lahf
ret
out
pop
xchg
and
out
sbb
shll
adc
mov
data16
sub
and
inc
call
aas
mov
sub
rcl
and
adc
dec
sub
dec
lock
adc
jb
fdivrs
push
xchg
cmp
mov
dec
rorb
iret
or
stos
pop
ss
push
icebp
xchg
and
mov
adc
cwtl
enter
pop
mov
mov
inc
movl
mov
fst
mov
lods
dec
sbb
jle
or
ret
inc
dec
enter
inc
call
xor
outsb
and
fldl
add
adc
mov
and
pop
xchg
jp
repz
mov
adc
out
push
pop
out
mov
fstp
pushf
sbb
repz
inc
fcoml
inc
movsb
push
aaa
xchg
out
es
imul
mov
shl
adc
aam
sub
cmpsl
mov
int3
mov
mov
jg
and
cmpsb
in
rcll
pop
in
inc
adc
movsl
adc
mov
ret
adc
add
or
mov
adc
pop
popf
stos
addb
sub
ja
pop
adc
loop
rorb
mov
xchg
les
dec
xor
inc
shlb
es
pushf
repz
fcompl
xchg
dec
into
or
bound
rolb
out
clc
sbb
arpl
loope
jno
dec
mov
jl
xor
js
mov
inc
ds
add
and
test
dec
addb
push
push
nop
xchg
test
cmp
mov
aam
std
je
addw
mov
inc
daa
rorb
pusha
das
xchg
dec
das
loope
pop
int
dec
fs
jne
xchg
lret
cmp
and
imul
insl
std
rolb
mov
test
mov
daa
cmpb
fisttps
mov
jne
mov
cmp
add
shr
hlt
test
xchg
stc
cmpb
push
outsl
jns
in
sar
add
cmp
or
pop
fistl
jb
sbb
pop
or
mov
pusha
mov
je
cmp
xor
sub
cmp
jge
out
popa
fcmovb
mov
clc
jo
inc
push
xchg
push
adc
pop
arpl
out
ficoms
into
lods
hlt
push
sahf
sbb
and
leave
call
shll
into
pop
pop
addr16
cltd
call
fistps
mov
xor
add
xchg
push
pop
and
mov
ret
gs
cltd
add
adcb
leave
sti
cmpsb
or
into
movsb
jecxz
pushf
and
insl
mov
mov
ss
add
jle
jnp
or
and
xor
les
sbb
stos
shrl
in
fldl
sbb
push
pop
cmp
sbb
and
xor
insl
and
push
mov
fwait
lahf
mov
mov
ljmp
lock
je
popa
xor
pop
cld
push
dec
stc
lret
test
add
push
add
movsl
fwait
cmpsb
push
call
nop
mov
push
sub
jnp
in
jle
imul
jl
outsb
les
in
stos
cmp
adc
xchg
repz
cld
add
imulb
test
push
cli
jbe
jb
inc
ja
mov
pop
popf
jge
sahf
rcrl
dec
xchg
shl
in
test
cmp
pusha
jmp
fwait
pusha
dec
jne
pop
mov
movsl
adc
cli
fcoms
lahf
pop
enter
mov
push
addr16
icebp
push
sbb
mov
ds
gs
cmp
push
popa
daa
dec
dec
mov
jno
mov
imul
xchg
cmp
movsb
and
jae
mov
lret
rolb
pop
ds
xor
mov
and
insb
into
sbb
pop
jge
add
sub
or
or
cmp
mov
or
cmp
mov
push
insl
add
jbe
std
mov
ja
pushf
jb
cmpsl
sub
mov
dec
fnstenv
xchg
cmp
sub
rolb
pop
jge
adc
mov
adc
xchg
scas
in
sti
cmp
xchg
movsb
fistpl
bound
mov
push
ljmp
rolb
in
cld
adc
enter
out
pushf
pop
jnp
or
adc
add
inc
cs
ret
push
pop
sub
int
xor
pop
sub
mov
loop
mov
push
push
pop
pop
adc
aas
mov
scas
arpl
sub
and
add
mov
mov
cs
mov
xchg
sbbb
loopew
inc
add
inc
mov
fcoms
lahf
imul
cmp
mov
xchg
rclb
fidivrl
stos
cld
jbe
daa
pushf
xchg
and
test
imul
sahf
pop
scas
dec
push
cli
xchg
xchg
sbb
mov
ljmp
lret
cmpsl
sub
jno
mov
call
push
mov
cli
xchg
jmp
mov
lcall
push
mov
xor
jb
insb
mov
pop
popf
xorb
outsb
push
cmpsl
and
mov
xor
mov
data16
xorl
test
mov
adc
push
outsl
loopne
jp
push
insb
fstps
out
aas
in
outsl
call
jp
stos
into
mov
mov
sbb
idivb
mov
cmp
notb
pop
in
repnz
push
das
push
ljmp
xlat
iret
xchg
fidivrs
jle
stos
in
or
sbb
cmc
jle
in
rorb
test
add
imul
xchg
arpl
xor
testl
mov
repz
cmpsl
cwtl
jl
imul
into
sub
and
jle
stc
mov
xchg
scas
add
cmp
mov
cmc
sub
cmp
jmp
mov
sub
add
js
movsl
subb
pop
lea
push
mov
inc
cmp
icebp
enter
fwait
mov
adc
call
test
pop
cmc
cmp
push
mov
mov
jmp
decl
adc
xchg
leave
or
xor
dec
aam
push
mov
call
xor
stc
cmp
lret
sub
lret
mov
adc
xor
pop
lret
repz
imul
adc
cli
xchg
mov
test
xchg
shr
fnstsw
cmp
pop
rcr
outsb
jo
lods
add
xchg
or
adc
fstl
pop
out
push
cld
outsb
loope
dec
xchg
jo
adc
or
push
jecxz
sub
repnz
gs
and
test
scas
cmpsl
sub
pop
xchg
lods
bound
aad
push
fisttps
lcall
push
popa
or
jb
bound
sarl
xor
xchg
jae
jl
aad
push
cmp
adc
rclb
movsb
icebp
dec
stos
or
pop
dec
jno
pop
dec
xor
bound
sbb
cmp
orl
inc
mov
aas
pusha
rorl
sub
sub
out
sar
loop
cli
ret
mov
aam
inc
xchg
sbb
or
dec
pushf
fmull
pop
insl
insl
iret
sahf
lcall
push
loope
pop
mov
test
rcl
or
mov
xchg
cmp
jae
stc
aas
pshufw
les
es
mov
jae
pop
stos
decb
popa
iret
inc
aas
push
idivl
jmp
jecxz
add
mov
adc
into
aam
insl
mov
xor
jp
cltd
xchg
dec
or
inc
scas
mov
xchg
shl
and
or
mov
mov
mov
cmp
mov
xchg
repnz
and
add
jp
push
lock
adc
enter
cmpsl
mov
bound
rorl
leave
mov
push
inc
mov
xchg
data16
scas
xlat
movsb
xchg
cltd
aad
outsl
lds
xchg
mov
lds
sbb
hlt
cli
adc
test
mov
inc
test
mov
icebp
test
mov
or
jp
cmovg
xchg
jnp
xor
mov
inc
mov
adc
or
and
mov
mov
insl
je
mov
lds
push
mov
and
pop
sub
push
xchg
cmp
int3
push
addr16
icebp
jmp
fidivrl
ljmp
lahf
jle
mov
idivb
pusha
push
ret
pusha
test
inc
es
inc
push
cmpsb
add
xor
pushf
or
sbb
int
dec
test
mov
rol
ds
fldl
cmc
inc
test
mov
ret
pop
out
scas
or
pop
add
sbb
mov
xor
xor
mov
repnz
push
pop
pop
sub
addr16
cmp
inc
enter
scas
pusha
lret
out
and
ret
shlb
mov
aam
mov
cmp
test
push
push
out
push
decl
add
mov
inc
mov
cwtl
subb
add
dec
jb
ss
outsl
fildll
fists
mov
mov
lds
jns
cwtl
enter
cmp
add
test
pop
aad
fs
dec
lcall
mov
popf
hlt
or
push
shl
cmp
mov
mov
pop
std
adc
inc
jmp
sbbb
fidivl
mov
xor
mov
loop
das
cwtl
push
pop
sbb
xchg
int
imul
scas
and
sbbb
or
cmp
cmp
pop
out
popf
lret
adcb
cmp
mov
jne
jns
inc
scas
xchg
cmp
nop
hlt
arpl
cmp
push
roll
add
fwait
mov
push
outsb
pop
or
mov
fidivl
loop
ret
lcall
fmull
sub
add
pop
xor
lock
aad
idivb
xchg
lcall
jecxz
adc
std
cmc
and
push
fisubl
popa
stc
arpl
jbe
cmp
jo
repnz
jmp
inc
mov
cmp
xor
imul
das
mov
mov
aam
mov
fwait
in
push
shlb
roll
iret
inc
dec
dec
xchg
inc
sub
subl
pusha
pslld
dec
jl
xchg
jbe
mov
push
stos
xor
inc
movsb
push
adc
mov
and
mov
and
mov
ss
int
outsl
add
outsl
pop
gs
ret
push
cltd
rorl
out
inc
in
pop
pushf
mov
mov
sbb
xor
or
mov
add
mov
and
dec
out
mov
cmp
imul
outsb
lcall
data16
inc
leave
jno
add
mov
cs
add
mov
repnz
jmp
mov
call
mov
out
test
xor
outsb
popl
push
xor
addr16
nop
xorb
test
movsb
lcall
xor
mov
les
sub
stos
call
push
vaddpd
xchg
xor
or
bound
addl
cli
js
icebp
ret
mov
repz
pop
push
aas
stos
fldt
shlb
and
mov
mov
push
xor
loope
adc
ret
xor
aas
fdivl
popf
dec
dec
pop
mov
pop
loopne
xor
sti
mov
out
ret
enter
fcoms
mov
mov
mov
pusha
insl
and
test
adc
insl
mov
push
mov
cwtl
fcmovnb
lcall
inc
jnp
xor
mov
scas
add
sub
das
or
clc
insb
call
test
mov
lods
jge
inc
lea
mov
loop
rorl
mov
cli
jno
jb
in
mov
jg
pop
fimull
shr
test
push
imul
sub
in
mov
loop
mov
xchg
and
jb
outsb
cmp
lods
push
jmp
fsubp
js
dec
dec
add
and
jae
sbb
mov
iret
in
adc
sbbl
sbb
dec
xchg
jns
or
mov
mov
mov
loope
adc
imul
push
sbbb
shrb
push
inc
and
mov
sbb
dec
mov
call
std
sbb
leave
cmp
mov
in
cwtl
pop
and
clc
pop
mov
addr16
inc
add
dec
fsubs
call
push
outsb
cli
or
mov
xchg
les
lahf
insb
jl
ret
jnp
adcl
ds
and
lret
and
sti
pop
mov
in
xchg
dec
mov
mov
cmpsl
lea
subb
mov
and
xchg
cmc
mov
sub
outsl
das
mov
dec
aad
out
xchg
clc
dec
mov
movsl
inc
adc
leave
test
lock
cmp
test
pop
jb
jnp
push
sarl
cmc
imul
or
push
sub
movsb
xchg
pop
cmpsb
add
adc
mov
test
or
pusha
stos
push
lea
dec
mov
test
jle
mov
mov
cli
xor
gs
bound
and
mov
clc
push
fcoml
sub
sahf
rclb
hlt
out
jg
pop
fstpl
adcl
inc
dec
jnp
xor
mov
sub
push
shrb
jle
cmp
sub
push
das
icebp
sbb
pop
adc
nop
outsl
mov
lret
scas
call
out
imul
or
add
fdivs
shl
incb
sub
out
sbbb
test
fistpl
ret
dec
cmp
pop
ffree
movsl
ljmp
imul
mov
rcll
das
out
cmc
pusha
repnz
inc
pop
je
cmp
in
subl
rorb
jg
pop
sahf
stc
ficomps
negl
fs
and
bndldx
mov
add
and
pop
cmp
xchg
mov
mov
sub
mov
jmp
adc
push
mov
inc
jmp
daa
xchg
jns
or
clc
add
lea
xor
pushf
dec
test
cmc
fstpt
mov
adc
das
jle
cli
pop
stos
mov
xchg
cmp
pushf
sbb
lret
xor
pop
cmp
out
sbb
xlat
push
or
or
mov
lods
or
mov
cltd
jl
xor
or
sahf
fidivrl
adc
mov
mov
add
out
cltd
shlb
mov
jmp
dec
cmp
mov
sbb
lret
sub
or
add
in
imul
jns
ret
in
adc
and
mov
sbb
cltd
cld
int
pop
jl
lods
jecxz
jmp
outsl
pop
push
and
call
jo
add
sub
pushf
jecxz
mov
jg,pn
adc
jns
mov
xchg
dec
outsb
das
icebp
hlt
fstps
frstor
or
dec
fcoms
cli
orl
adc
test
mov
je
fadd
inc
or
stos
insb
or
lock
mov
vmcall
mov
jg
sub
shr
or
sub
loop
hlt
pop
fdivs
push
push
jmp
or
adc
pop
loope
pop
xchg
push
shl
into
fs
mov
jle
ret
inc
aaa
push
lret
cmp
nop
adc
loope
inc
add
mov
xchg
int
aaa
rcll
and
mov
jmp
push
les
inc
cli
mov
jnp
jne
xchg
mov
adc
outsb
int3
scas
pop
lock
hlt
iret
pop
cmp
jbe
push
mov
hlt
jl
mov
imul
mov
adcb
lock
hlt
push
jl
cmc
adc
cmpl
push
ss
daa
enter
inc
js
out
and
pop
ret
jnp
pop
cmpsl
mov
pusha
popf
xor
push
mov
hlt
mov
popa
ja
inc
rcl
cmp
sbb
inc
push
scas
jns
out
xor
fisttps
ja
xchg
pop
pop
ja
rcrl
mov
test
xor
mov
and
dec
imul
mov
nop
or
test
ja
mov
popa
cmc
sti
data16
mov
nop
push
dec
pop
mov
sbb
outsl
lret
push
sub
fwait
stos
xor
ret
test
out
in
or
push
out
cltd
jbe
dec
and
insl
ds
insl
imul
cmc
fs
xlat
push
aas
cmp
aam
shll
clc
mov
dec
jne
or
icebp
repnz
dec
mov
icebp
fcomps
popf
jb
insl
cmp
icebp
addr16
lds
jmp
sbbb
xchg
rcll
js
push
mov
aad
aaa
jl
mov
and
pop
cmp
cmp
fbstp
int
lahf
jle
mov
xor
es
and
dec
jmp
into
ret
or
test
in
push
mov
jl
push
or
bound
out
pop
mov
push
jmp
dec
aad
mov
bound
decb
jbe
mov
mov
mov
push
mov
and
decb
jnp
hlt
dec
fiaddl
fdivr
cmp
mov
in
fistpll
mov
dec
cmp
fidivrl
jae
jle
cli
out
sub
icebp
push
sub
roll
popa
xchg
rcl
decb
cmp
inc
test
mov
mov
or
gs
incl
aas
sbb
stos
sbb
out
rorl
pop
test
mov
call
je
fistps
jp
xor
adc
sub
lock
xorb
push
mov
loopne
popf
jp
pushf
mov
pop
xchg
jg,pt
and
cmp
inc
jl
out
adc
ds
adc
and
push
mov
sahf
jae
push
jne
cmp
lahf
mov
push
cmpsb
push
popa
fs
and
dec
sbb
fs
cld
fucomp
sbb
iret
fld1
mov
xor
xchg
imul
aam
je
jnp
pop
imul
cmpsl
dec
lods
xchg
mov
cmc
stc
xor
stos
arpl
adc
xchg
je
leave
iret
mov
inc
aad
lods
mov
cli
cltd
mov
mov
jo
test
dec
mov
push
in
xchg
pop
pop
jne
and
sub
hlt
inc
imul
mov
insb
add
mov
dec
cmpsl
rcll
mov
pop
xchg
lea
in
pop
jmp
test
or
pop
dec
and
push
xchg
xchg
add
pop
dec
jle
jo
loope
add
int3
out
pop
jb
ror
stos
lds
int
push
and
adc
lret
into
jecxz
pusha
jmp
cltd
dec
outsb
add
lock
fs
push
fwait
decb
push
adc
inc
je
mov
mov
sbb
mov
rcrl
cwtl
or
mov
sub
arpl
sbb
movsb
pop
add
enter
jne
or
movsb
scas
cmp
pop
mov
repz
lods
dec
push
jmp
xchg
addr16
inc
rcr
and
aas
cmp
stc
das
das
cli
insl
rcpps
ss
jg
lods
roll
dec
sbb
jns
test
stc
andl
out
js
add
in
inc
test
push
dec
dec
cmpsb
dec
test
push
aad
pop
push
mov
jecxz
mov
fimull
dec
ds
in
pop
inc
loope
jecxz
mov
xchg
jo
mov
xor
rclb
xchg
adc
mov
mov
mov
mov
mov
jae
sbb
push
and
outsl
test
clc
xchg
ds
push
xor
stos
addr16
movsb
pop
test
mov
testl
adc
xchg
mov
outsb
pop
cmpsb
xchg
maskmovq
add
rol
mov
aaa
fistpl
pop
inc
xor
or
test
or
lods
add
push
repz
ret
cld
movsl
cmp
sub
and
repnz
inc
hlt
inc
scas
fiadds
xchg
cmpsl
pusha
sbb
inc
imul
arpl
sub
cmp
adc
xchg
fucom
or
push
inc
cmp
xorb
rclb
aad
mov
pop
mov
mov
push
xchg
xor
rclb
repnz
fiadds
outsl
xor
xchg
jno
cmp
mov
mov
cltd
int
in
cs
pop
xor
dec
scas
xor
ret
xchg
jo
out
ret
inc
dec
dec
or
sbb
sub
or
bound
jb
pop
mov
dec
xadd
mov
adc
mov
push
lcall
mov
ret
outsb
popa
inc
xorl
jp
enter
lds
ret
fisubrl
loop
test
xor
lock
aam
push
mov
xorb
fiaddl
pushf
stos
pop
cmp
mov
in
sahf
cmp
enter
stc
cs
inc
je
adc
or
push
lods
in
fcoms
lock
xor
out
sub
aas
sahf
jne
stc
and
and
cwtl
adc
xor
mov
inc
imul
test
sub
jle
stc
pop
or
jge
js
sub
lret
push
shrb
add
xchg
inc
push
cmp
enter
sub
sub
insl
in
out
sub
or
xchg
in
mov
lds
filds
inc
lret
adc
jns
test
jns
adc
push
pop
mov
dec
inc
lds
pop
paddw
lods
subl
jnp
mov
cmpsb
rorb
sahf
jmp
or
out
ds
rcl
js
cmp
xchg
xor
aas
lea
push
out
push
fs
or
cltd
pusha
mov
adc
mov
add
push
cmp
adc
into
nop
xor
pop
add
cmpsl
icebp
pop
xchg
loopne
cmp
jo
movsb
popa
sti
mov
rcr
dec
lods
jmp
popf
ret
push
push
shrl
xor
xor
cmp
inc
mov
sub
dec
inc
mov
fldl
lret
int3
xchg
outsl
movsb
fcoms
in
sti
ss
data16
mov
gs
jnp
stos
add
jae
pop
xchg
popf
pusha
mov
mov
mov
xchg
stc
mov
push
ret
mov
cmp
and
rorb
mov
push
pusha
sub
mov
leave
arpl
imul
sub
es
push
adc
push
ds
xor
sub
loop
and
or
mov
xchg
lea
ret
aam
cmc
xchg
loope
shlb
sti
movsl
out
repnz
mov
out
pushf
or
std
jecxz
xchg
push
sub
mov
jns
mov
test
xor
mov
leave
push
mov
aam
jne
adc
jae
or
inc
mov
rcrb
movsb
sbb
push
push
cwtl
xchg
jge,pn
sahf
leave
and
lret
mov
cmp
push
push
add
stos
fs
cmp
insb
jecxz
inc
movsl
mulps
lcall
icebp
adc
push
out
ret
xchg
scas
mov
inc
mov
push
out
mov
adc
mov
leave
sbb
or
andb
ret
jns
inc
add
cmc
aaa
xchg
dec
mov
sbbl
subl
nop
xchg
add
fdivr
out
jae
or
std
pop
repz
pop
arpl
cmp
into
imul
out
cmc
mov
ret
push
ror
jno
or
pop
je
dec
inc
pop
sti
jl
and
mov
pop
push
je
fiaddl
repz
jecxz
dec
lahf
int
imul
xchg
daa
je
mov
shrb
inc
cmp
push
push
cmp
jl
in
mov
pushl
fwait
das
mov
mov
lods
mov
lods
cmp
push
movsb
push
sbb
movl
out
idivl
mov
pushf
scas
cmp
outsl
cltd
fs
lret
jb
out
mov
cmp
lahf
jmp
sahf
out
rcrb
int
shlb
jge
cmp
or
aaa
jnp
pushf
pop
stos
mov
or
xor
xchg
sub
jecxz
cmp
pop
cmp
nop
ret
cmp
add
and
lods
cmpsb
xchg
in
cmpsb
lcall
cmp
lods
loop
js
inc
mov
and
dec
and
arpl
jns
xlat
stos
notl
jle
fisubrs
mov
xchg
and
cmpsl
fwait
inc
daa
mov
ss
imul
mov
lds
rcrb
jno
add
dec
xor
int
pop
test
sti
lret
jecxz
jno
inc
enter
fistl
andl
int3
dec
mov
stos
outsb
fwait
sub
mov
fstps
pop
xor
jp
xlat
jge
lahf
les
cmp
pop
jl
in
adc
sub
xchg
std
inc
int
mov
xchg
jle
sub
nop
out
and
add
xor
mov
jb
push
pop
mov
adc
xor
popa
mov
push
bound
or
das
out
cmp
sub
inc
jb
sub
mov
jecxz
mov
jae
inc
and
push
mov
notb
or
and
xchg
inc
inc
pop
adc
je
insl
mov
cmp
mov
dec
cmp
lods
inc
test
sbb
es
enter
or
adcb
xorl
xchg
int
call
and
fxch
add
out
dec
ucomiss
sahf
cld
jnp
xor
sbb
lret
imul
idivb
ret
xlat
enter
aad
faddl
add
jl
inc
mov
sbbl
sub
sbb
xor
fdivrp
scas
jnp
adc
jmp
fiaddl
jo
pop
xchg
or
or
mov
ljmp
inc
or
xchg
lods
sbb
push
dec
add
lock
shrl
xchg
lcall
jnp
dec
pop
xor
nop
xchg
mov
adc
or
mov
call
dec
push
clc
out
adc
movsb
mov
cmpsb
xor
int
fsts
roll
mov
cmp
shlb
pop
inc
push
jae
mov
dec
pop
push
jbe
out
xor
adcl
pop
push
adc
push
pop
dec
addl
inc
add
pop
pop
dec
sub
sarb
mov
out
xchg
mov
loopne
fwait
adc
lods
inc
add
iret
push
imul
gs
aam
pop
cmp
sbb
or
das
pop
cmpsb
jge
popa
jle
sahf
test
xorb
inc
movsb
ljmp
mov
shlb
adc
sbbl
mov
test
movsl
pop
push
cmpsl
or
lcall
jno
push
fsubl
fld
jge
insl
enter
rol
sbbl
andb
pop
nop
push
mov
xchg
jns
or
shrb
in
rol
mov
das
andl
in
lret
lds
push
test
or
xor
inc
jne
pop
cmp
jnp
dec
cli
les
inc
call
lcall
push
mov
loop
fisubl
push
push
fmuls
out
sbb
shll
cmp
ja
sub
leave
mov
xorb
jb
fiaddl
mov
fwait
push
cmp
mov
mov
movsl
mov
in
in
out
add
add
cmp
ljmp
ljmp
push
xchg
push
dec
in
insl
or
ret
loopne
jle
movsl
xchg
adc
filds
mov
mov
mov
pop
xchg
cmpsl
add
jb
add
aaa
out
dec
int3
repnz
or
adc
or
mov
adc
sub
addr16
cmpsl
sti
push
xor
pop
mov
dec
and
cmpsb
pop
pushf
pushf
or
clc
call
popf
bound
lahf
jle
xchg
dec
sti
adc
push
repnz
add
in
dec
fisubrs
xchg
inc
test
xchg
jl
or
bound
adc
mov
pop
pop
xor
xor
out
push
test
imul
pop
out
in
test
mov
test
xlat
cli
sbb
add
mov
xor
mov
sbb
clc
rcll
mov
inc
dec
in
dec
sbb
fsubrs
mov
push
popf
jb
mov
jle
movsb
fsts
hlt
test
fisttpl
jg
mov
pop
loopne
xchg
das
mov
mov
bndstx
pusha
sbb
iret
inc
inc
add
rorb
push
pushf
jo
cmp
mov
xchg
jle
lea
stc
pop
aas
dec
lods
sti
sbb
aam
xchg
sbb
ljmp
imul
mov
adc
inc
or
jo
xchg
in
ror
mov
sbb
push
xor
movsl
xchg
sbb
mov
inc
push
and
stc
shrb
sarb
outsb
lds
inc
pop
repz
dec
inc
inc
jle
jp
ds
inc
mov
xor
idivb
movsl
test
mov
sahf
mov
ficoms
mov
flds
cmp
imul
xor
mov
aas
lret
pop
popf
insl
dec
mov
jge
fsubrs
out
cmp
hlt
sbb
xchg
adc
xchg
fldenv
out
data16
xchg
sbb
leave
lods
sbb
and
push
push
jle
push
imul
sub
fistpl
adc
pop
mov
mov
lea
dec
and
test
das
inc
cmp
mov
inc
sub
jecxz
in
cmc
sbb
or
movl
and
or
sbb
and
pop
xor
fidivrl
sub
push
mov
dec
daa
icebp
add
pushf
sub
xlat
out
into
mov
push
pop
sbb
int
pop
push
mov
add
in
fsts
pop
sbb
hlt
push
andl
fsubrs
jbe
mov
lcall
imul
into
mov
ffree
xchg
shll
lock
test
add
cmp
push
sub
dec
test
scas
popa
scas
and
repnz
loop
ja
pushl
push
sbbl
iret
push
xchg
insb
int
andb
fdivp
pop
rorb
test
out
xchg
loope
scas
mov
xor
sbb
xchg
loopne
andb
stc
hlt
ljmp
xchg
push
loopne
movsl
jae
jbe
notl
cmp
adc
ljmp
movsl
pop
lds
iret
jmp
or
add
xchg
mov
pop
jb
dec
lcall
cmp
popf
add
pop
mov
or
es
sbbl
daa
xor
xor
xor
out
daa
mov
dec
call
sbb
lock
fistpll
pushf
ret
cld
and
cmpsl
out
iret
in
mov
int3
xchg
faddl
jnp
das
pop
or
mov
repnz
lret
test
jl
push
pop
mov
leave
push
shll
mov
adc
sub
ds
arpl
je
xchg
sbb
sbb
dec
out
arpl
sbb
jge
jae
or
mov
rorb
repnz
mov
mov
fsubrs
add
faddl
outsl
popa
insb
jp
mov
outsl
and
insl
push
lea
pop
hlt
sbb
add
mov
outsl
sub
mov
popa
push
movsb
inc
lret
push
stos
loopne
adcb
cmp
push
mulb
hlt
bound
dec
leave
xchg
pop
mov
fiaddl
loop
nop
frstor
cmc
lea
mov
roll
lahf
dec
outsl
jmp
rorl
aaa
xchg
mov
lcall
mov
nop
lahf
or
sbb
lods
mov
push
fnstenv
xchg
jo
xor
xor
fsubrl
dec
mov
dec
mov
xchg
or
andl
mov
movsb
xlat
sub
pop
dec
xchg
xchg
pop
jmp
jbe
cmp
in
jmp
xchg
push
jle
pop
or
in
cmp
mov
lods
dec
xor
dec
jne
inc
add
leave
lea
xor
add
dec
pop
clc
inc
pop
loopne
push
int3
jmp
inc
push
test
mov
inc
cmc
imul
xchg
dec
lods
pop
leave
mov
or
mov
call
mov
int3
lea
push
jno
push
out
add
fstl
xchg
imul
xor
xor
imul
notl
lcall
or
scas
xchg
jns
stos
pop
lahf
and
dec
add
mov
mov
xchg
dec
mov
orb
divl
pop
inc
push
ret
xchg
mov
sub
or
adc
sbb
jne
add
aam
jbe
sbb
mov
xor
cmp
sub
xchg
or
cmc
sbb
sub
ret
dec
pinsrw
ljmp
aas
pusha
fs
test
subps
mov
stos
push
sti
cmp
imul
stc
mov
ret
lods
xor
mov
pop
repnz
add
test
gs
fldl
push
cmp
adc
dec
stos
mov
sar
mov
stos
cs
in
or
sar
inc
lock
dec
cs
imul
xchg
ficomps
mulb
adc
test
sbb
inc
cmp
inc
mov
push
pop
dec
push
ret
addb
xchg
or
adcb
addr16
mov
fsubrs
lcall
mov
push
ljmp
xchg
and
test
fidivrl
inc
push
movl
cltd
add
lahf
push
mov
and
dec
mov
mov
fwait
xchg
outsl
jbe
pop
enter
mov
nop
aad
clc
push
xor
sbb
pusha
pop
sbb
sbbl
jbe
leave
dec
inc
dec
jl
pusha
inc
cmc
xor
mov
aam
aam
cs
cmp
lahf
xchg
into
dec
fmuls
sbb
cmpsl
fwait
scas
mov
mov
loop
pop
fldt
stc
loopne
or
jb
pop
mov
and
or
addb
pop
scas
xlat
das
out
test
imul
pop
sbb
sub
inc
into
and
dec
jmp
and
test
jge
popa
subl
test
and
jg
sub
dec
mov
fbld
jle
mul
inc
sbb
cld
xchg
mov
dec
pop
xor
int3
incl
sbb
arpl
sub
test
xor
sbb
faddl
dec
int3
cmpsb
leave
pop
mov
xchg
int
enter
mov
adc
sub
xchg
insb
dec
push
adc
fwait
push
xchg
xchg
ja
mov
inc
fs
push
lods
fidivl
mov
ret
and
imul
inc
xor
stc
icebp
jge
clc
add
sub
sarb
pop
pop
and
dec
cltd
movsl
mov
lods
mov
jle
mov
aaa
push
fldenv
popa
into
xchg
sbb
mov
stc
cmp
sub
nop
outsl
xlat
lret
sub
into
and
roll
xor
gs
out
scas
sti
inc
ljmp
cmp
shl
imulb
and
add
xchg
or
mov
xor
sbb
fisttpll
sub
mov
mov
outsl
int
fsubr
pop
movsb
push
dec
pop
cmp
and
lods
jge
push
mov
push
test
xlat
jne
insl
mov
insl
jle
enter
mov
aam
out
inc
pop
mov
scas
sbb
sbbb
mov
xchg
sbb
mov
xchg
sub
int
xchg
test
adc
ljmp
pop
mov
or
fcoml
data16
fisubrs
mov
xlat
int3
aaa
repz
jge
add
test
pop
rorl
rorl
jmp
ljmp
lret
cmpb
pop
mull
imul
adc
push
push
movsl
pop
cltd
mov
jp
insb
mov
xor
sbb
push
mov
mov
sbb
and
cli
mov
imul
sbb
xor
fcmovne
xchg
gs
jp
imul
and
inc
fwait
lock
xchg
roll
scas
push
in
cli
or
addr16
sbb
add
jae
push
iret
cmp
neg
mov
fwait
sub
aaa
mov
cltd
jp
sbb
mov
loop
mov
loope
mov
les
aam
mov
aaa
shl
jno
push
sub
sbb
insb
pop
pop
mov
push
cmpsl
push
pop
and
push
push
inc
out
inc
bound
add
cmpsb
cmp
adc
xchg
scas
inc
adc
lea
in
iret
jae
or
arpl
scas
push
in
mov
movsb
sub
mov
mov
or
gs
push
mov
gs
stc
jecxz
jg
loop
iret
mov
icebp
sahf
sub
mov
test
imul
push
xchg
fimull
xchg
movsl
movsb
xchg
andl
loope
cmpsl
mov
inc
xchg
pop
scas
in
mov
or
es
pushf
das
adc
outsb
data16
cld
in
lea
and
sar
cwtl
sub
pop
xchg
mov
scas
or
insl
jae
add
adc
leave
into
aas
adc
ret
mov
insl
xchg
pop
loopne
mov
jnp
stc
mov
push
adc
xor
shll
jo
outsl
fdivl
jns
push
mov
jb
inc
mov
dec
insl
push
push
mov
xchg
mov
cld
mov
ja
lea
je
pushf
adc
leave
out
scas
rolb
popa
ret
rorb
es
jg
inc
fbstp
repz
mov
ror
mov
out
loopne
iret
or
out
jbe
and
mov
xor
xor
shll
xchg
idivb
and
xchg
outsb
xchg
and
aaa
imul
jb
sbb
pusha
scas
cli
lcall
loopne
rolb
cwtl
mov
vorps
fstl
xor
sub
mov
arpl
lret
push
jbe
ret
inc
jmp
jae
cmp
ja
loop
sub
or
sbb
aaa
cltd
js
push
enter
mov
test
mov
fcomip
push
or
leave
cmp
fmull
push
aas
xor
shlb
dec
stc
dec
cld
aad
cld
or
lcall
ret
inc
xlat
lea
push
mov
es
jp
loopne
pop
or
mov
scas
inc
lods
ficompl
jmp
inc
sub
addl
mov
ljmp
cmpsl
mov
outsl
inc
nop
xchg
mov
ds
cltd
in
add
movsl
and
xchg
aaa
js
and
ret
cltd
movsb
or
scas
pop
mov
test
call
icebp
or
xchg
jge
add
cmp
in
and
imul
testl
fiaddl
xor
lret
cmp
xchg
pop
popa
fnstenv
outsl
movsb
jl
fistps
lods
xchg
xor
das
xor
pop
fwait
popf
call
loope
lret
shr
or
and
movsl
rcrb
or
push
mov
dec
sbb
dec
cmp
cli
jo
std
inc
andl
adc
jmp
iret
mov
leave
test
dec
cmp
popa
pusha
dec
int
mov
popa
jnp
in
jae
pop
xchg
add
adc
xchg
sarl
mov
sti
mov
sbb
add
fmulp
fisubrl
gs
xchg
cli
fcomps
sbb
push
ja
cmc
xchg
xchg
dec
aaa
ljmp
dec
std
pop
nop
scas
pop
bound
mov
adcb
fidivl
jno
lods
xchg
cmpb
outsl
push
lcall
pop
jae
std
adc
mov
iret
fcomi
fmuls
sbb
flds
or
jl
jecxz
fwait
push
or
fisubs
sub
js
pop
ss
push
rcrb
xor
pop
jne
xor
jbe
out
pop
dec
or
sub
xor
cmp
fldl
pop
jecxz
rclb
push
xor
and
lea
loop
sbb
mov
leave
in
sub
js
arpl
cmp
loope
lods
cmp
daa
aam
scas
lahf
pusha
dec
mov
push
mov
adc
mov
pop
jecxz
pop
or
push
ljmp
jle
jnp
jb
dec
shrl
in
mov
int3
lret
xchg
mov
daa
rclb
cmc
dec
push
pop
lss
ljmp
cmp
mov
sub
push
in
movsb
js
out
cld
inc
rclb
jae
and
lock
mov
pusha
mov
lcall
inc
lea
in
inc
out
sub
add
lea
cld
das
insl
popl
pop
fsubl
inc
push
pop
jge
lahf
mov
mov
mov
notl
mov
fs
insb
and
aad
in
mov
int3
cmp
cli
xor
inc
pusha
imul
adc
push
add
and
xchg
pop
pop
imul
mov
xchg
les
and
push
xor
sub
fidivrl
add
jns
insb
add
out
mov
and
sti
pop
popf
sbb
xchg
insb
or
pusha
push
jmp
dec
fwait
jne
lret
in
push
clc
rcr
daa
jb
insl
jmp
movsb
fcmovnbe
pop
pusha
fwait
xchg
xor
xchg
cmc
ljmp
jp
jae
and
jns
sub
adc
add
mov
fisubl
cmc
jle
std
and
shlb
jl
push
pop
cmp
aaa
and
lret
stos
paddsw
les
mov
mov
imul
addr16
sbb
adc
imul
pmaxub
jmp
outsl
xchg
dec
push
rol
stc
mov
lods
jl
push
out
xor
jns
lret
test
mov
hlt
and
sahf
jo
mov
mov
xchg
sbb
cmp
mov
and
rclb
mov
mov
aaa
stos
dec
jo
loop
sub
fstpl
jmp
rorb
sti
mov
sub
push
xor
inc
lock
sbb
pushf
ljmp
daa
xor
cmpsl
aad
outsl
add
pop
shrl
inc
loopne
sbb
mov
ss
rclb
jp
or
inc
or
jae
sub
add
sbb
dec
push
sub
and
or
out
push
xlat
pusha
cli
and
or
xor
mov
jns
mov
sarl
add
or
add
hlt
fucomi
in
out
insb
enter
cmp
scas
push
cwtl
jecxz
push
pop
mov
shrl
ss
mov
sbb
pop
pop
mov
mov
lahf
mov
nop
mov
xchg
cmp
test
outsb
pop
iret
std
cmp
mov
popa
shl
fnstcw
sbbl
xchg
cmp
js
loope
jg
push
push
lahf
xchg
enter
jmp
in
shlb
cmp
lods
mov
xchg
orl
jp
mov
test
pop
pop
xlat
movsl
dec
jb
mov
inc
add
imul
enter
test
adcb
scas
push
icebp
adc
lret
dec
test
mov
push
in
dec
int3
adc
xchg
jns
mov
sub
cmp
adcb
cltd
xchg
mov
inc
push
push
stos
pop
cli
pop
jno
fmull
jns
incb
jb
scas
mov
xor
xchg
dec
dec
adc
or
pusha
rorl
in
pushf
clc
sbb
inc
add
out
arpl
pop
bound
test
aas
mov
je
lock
popa
cltd
lahf
inc
dec
dec
loop
movsb
push
fldl
fiaddl
inc
adc
sub
xor
or
jp
xlat
jae
mov
cwtl
or
sub
pop
fisttps
mov
fwait
pushf
shrl
loope
xor
adc
cmp
popf
adc
fdivl
in
ja
xchg
xchg
pop
mov
mov
dec
sbbb
push
idiv
sbb
pop
add
jl
dec
int
or
xor
hlt
lock
inc
out
outsl
pop
pop
gs
popa
sbb
push
aad
enter
pop
pop
mov
stos
xchg
fldt
xchg
pop
cli
scas
inc
jmp
cmp
js
cltd
inc
sbb
flds
push
and
add
jnp
in
cli
shl
pop
push
outsb
fisubrl
lock
fidivl
in
mov
rcrb
adc
into
mov
add
mov
push
and
add
ret
dec
iret
xorl
push
and
lea
cmp
pop
ffree
mov
ljmp
lret
test
ds
ljmp
lret
fists
pop
repz
shll
jp
fbld
add
fiaddl
xor
in
dec
mov
push
mov
stc
hlt
cli
fs
xchg
cmp
jecxz
sbb
xor
rcrl
out
sub
in
ja
movsl
pop
fiadds
sub
jl
sub
and
lcall
fs
inc
popf
inc
aaa
imul
push
mov
decl
mov
add
mov
jge
movsl
in
sub
xor
pop
mov
cmp
push
jge
or
jecxz
push
mov
jmp
icebp
inc
iret
xlat
or
or
fstpt
repz
sub
stc
jae
xor
xor
test
mov
jle
push
test
iret
jns
in
pop
mov
js
jno
jnp
enter
push
xor
jns
cmp
and
js
aaa
cmpsl
dec
mov
jge
fs
sub
push
pop
xor
push
add
ret
adc
and
inc
xchg
add
aad
inc
rcll
push
sub
aaa
jmp
lahf
bound
dec
loope
lea
sub
iret
or
gs
pop
mov
mov
repnz
je
sbb
inc
ja
cld
outsb
adc
mov
stos
cmc
mov
pop
push
inc
inc
scas
jb
mov
fsubrp
dec
pop
xor
lcall
jle
and
adc
push
xchg
test
xlat
or
pop
sub
test
pop
add
lea
mov
jp
adc
cmp
leave
cmpsb
out
cmp
dec
mov
sub
mov
scas
xor
inc
imul
mov
xchg
sub
lahf
xlat
cmc
adc
rol
scas
push
dec
sbb
add
pop
inc
loop
cmp
sub
sbb
adc
or
ds
popf
dec
popa
jmp
bound
cmc
adcl
mov
mov
mov
cmp
jns
fidivrl
mov
addr16
or
pop
sbb
cmpsb
rol
dec
cmpsb
hlt
cwtl
sub
pop
mov
sub
adc
mov
mov
xor
cmp
mov
xchg
aam
subl
sbb
adc
mov
dec
pop
das
scas
movsl
aad
cmpsb
push
xchg
cld
std
int3
mov
out
sbb
inc
jp
movb
xor
dec
mov
mov
mov
fdivrl
lods
cmpsb
and
enter
jo
pxor
xor
lret
mov
mov
lcall
shrb
sti
dec
stos
iret
or
pop
mov
adc
add
push
sahf
inc
sub
jae
xchg
outsl
cmp
pushf
xchg
push
es
inc
mov
xchg
subb
enter
pop
pop
lahf
mov
fadd
aam
out
mov
mov
jbe
aad
stc
xor
out
mov
movsl
loop
dec
pop
je
jno
adc
ja
sub
inc
icebp
mov
cmp
testb
fistpl
mov
xchg
xor
adc
adc
add
sarl
hlt
mov
loope
sub
xchg
js
lret
cmp
mov
cmp
aaa
jae
mov
addr16
cmp
scas
xor
rcll
push
mov
test
das
mov
adc
cld
sti
stos
aaa
mov
sbb
mov
outsb
lds
fdivs
add
rcl
mov
ja
out
negb
jbe
lcall
repz
fadds
js
arpl
imul
xor
scas
ljmp
or
cmpsl
xor
adc
test
fcompl
test
test
out
sbb
jb
xchg
addr16
mov
adc
pop
bswap
push
fldcw
jecxz
lods
fisubs
or
xchg
cwtl
cli
push
icebp
push
xchg
pop
inc
jl
mov
dec
xorb
in
andl
mov
in
pop
jnp
mov
rolb
shll
dec
add
xchg
xor
leave
jbe
push
insb
js
xchg
std
addr16
test
ljmp
dec
dec
pop
test
icebp
dec
jge
push
add
sbb
shl
popf
and
xor
push
call
scas
and
aas
imul
sbb
and
pushf
les
jne
aad
sbb
push
stc
fimull
aad
ds
cmp
repnz
jno
aas
flds
ss
jno
rclb
repz
push
sbb
xor
rolb
push
sub
sub
sahf
lock
add
push
repnz
jo
test
xchg
cmp
or
lods
pop
loope
incl
add
push
movsb
sbb
sub
push
scas
call
scas
aaa
dec
xchg
adc
movsw
pop
pushf
pop
les
push
inc
and
pop
je
fsts
inc
lock
sbb
dec
mov
cmovnp
sbb
lods
xor
add
inc
andl
jl
mov
pop
add
pop
sub
test
addl
xchg
jecxz
jae,pn
mov
and
or
lahf
cmpsb
push
lds
mov
outsl
out
lods
orb
inc
in
push
aam
dec
rorl
push
jne
pushf
mov
xor
out
dec
daa
adc
repz
jne
imul
aaa
mov
jnp
stos
mov
mov
and
sub
andl
and
ficomps
dec
sbb
jmp
mov
or
pop
icebp
fistpl
mov
test
lods
ficoms
xlat
xor
xchg
dec
aaa
daa
mov
cmpsl
xchg
push
pushf
xchg
es
jp
cli
jl
stos
cwtl
fwait
popf
xor
repz
and
lahf
stc
sarl
cltd
ds
bound
addr16
cmpsb
and
mov
inc
xchg
pop
adc
and
shll
rclb
inc
xor
adc
lahf
push
inc
push
inc
inc
sub
add
mov
mov
adc
outsl
push
cmp
sbb
xchg
add
push
stos
cmp
jb
inc
cmp
repnz
mov
jp
dec
push
jmp
adc
in
ja
dec
push
mov
fstpl
dec
push
cwtl
les
or
mov
test
pop
sbb
sbb
mov
loope
faddl
push
fcomps
jge
outsb
fiadds
leave
pop
xchg
fistpl
lds
sti
cmpsb
arpl
ret
mov
jo
mov
repnz
aam
aad
cmpsb
lret
cmpl
cltd
jmp
sti
xchg
pop
and
sbb
adc
fildll
dec
jae
sbb
cmc
dec
cmp
dec
out
outsl
fsts
hlt
fdivrs
into
repz
sub
test
imull
mov
xlat
les
push
mov
adc
pop
hlt
insb
dec
test
add
fidivrl
ja
cmp
pop
mov
jp
cmpsl
loopne
and
mov
imul
mov
mov
fwait
lods
jle
test
fsubp
cli
iret
fbld
fs
cmp
mov
mov
icebp
xchg
daa
pop
xchg
dec
insl
out
inc
icebp
loop
sub
sub
xor
xchg
cld
sub
sbb
xlat
fwait
sbb
jl
daa
ficoms
adc
cltd
lods
sbb
pop
xor
push
add
xchg
xchg
dec
cmc
fsub
push
mov
xchg
hlt
outsb
iret
fisubrl
sub
inc
jg
jb
aaa
sbb
inc
and
xor
jo
lods
sub
xchg
mov
push
pop
sahf
popw
mov
test
loopne
inc
dec
mov
mov
jp
sbb
cld
xor
mov
cwtl
mov
mov
clc
addb
dec
and
mov
xor
jbe
sarb
stc
fldcw
dec
sbb
cltd
fsts
fsubr
jbe
mov
lock
lahf
out
shrb
or
rcl
mov
cmp
imul
mov
mov
mov
xor
aad
fildl
test
sbb
fwait
push
pop
stos
sbb
lcall
or
mov
dec
push
jb
mov
andb
out
dec
jae
repz
push
pop
mov
mov
cmpsl
shlb
mov
movsb
and
insb
sub
movl
push
jns
es
arpl
cmove
ret
inc
add
add
dec
push
sbb
add
ljmp
mov
adc
lret
fwait
out
lret
es
leave
mulb
test
repz
popf
shll
test
push
or
int
jecxz
popa
push
outsl
sti
adc
cmp
std
jb
in
test
ret
pop
cltd
xchg
add
xchg
and
jle
xadd
shlb
jl
rolb
ret
mov
mov
cvtps2pd
lods
sbb
shll
cmp
and
pop
movsb
das
mov
xchg
add
fwait
inc
inc
aas
dec
gs
lret
cmpsb
in
xchg
cld
inc
inc
adc
pop
or
in
xor
add
push
add
push
pop
repnz
out
insb
cmp
push
aas
push
test
or
xchg
sbb
rol
pusha
sbb
mov
pusha
bound
pop
fwait
adc
pop
pop
xor
mov
inc
dec
cmp
cs
loop
jno
or
aas
and
out
mov
daa
pop
mov
xor
stc
ja
sbb
jne
add
adc
fsubr
iret
shlb
or
push
xchg
sbb
add
mov
jns
mov
dec
push
mov
sbb
test
fstpl
push
mov
xchg
pop
inc
sahf
jno
es
mov
stos
cmp
dec
fsub
rcrb
hlt
xor
mov
rcll
loope
in
fcmovne
inc
cmp
loopne
je
fistpl
jbe
jae
xchg
sbb
jecxz
add
adc
nop
jno
jl
dec
pushf
xchg
outsl
lds
mov
push
xor
int3
sbb
adc
aad
push
out
es
loopne
roll
and
fdivr
cmp
inc
mov
ja
add
push
test
push
xlat
mov
arpl
jb
mov
push
sbb
xchg
shlb
inc
cmp
sbb
jns
push
sub
sbb
ret
cmp
add
mov
or
in
add
cmp
xorl
idivb
inc
pop
inc
push
mov
loope
je
xchg
mov
pop
push
push
pop
xor
pop
mov
fs
in
pop
sti
jbe
incb
sahf
lock
imul
clc
fsub
jmp
xchg
and
push
adc
jle
mov
les
or
adc
and
out
dec
mov
data16
jecxz
sub
dec
clc
int3
nop
call
cld
and
xchg
addb
add
inc
repnz
or
sbb
subb
js
lahf
jg
pop
cli
in
out
lock
jg
adc
mov
push
enter
cli
xchg
pushf
loope
mov
mov
add
jge
test
outsb
in
lock
pop
cli
mov
andb
ss
nop
xchg
dec
and
frstor
into
out
cmpsb
ss
xor
xchg
imul
xchg
jp
sub
ss
in
cmc
push
movsl
push
jmp
mov
lods
aas
movsb
sbbb
ficompl
jb
mov
ret
xchg
sub
add
sub
push
in
push
inc
push
xor
cmp
pop
jno
popa
xchg
fwait
cmp
pop
mov
sub
xchg
lock
pop
nop
xlat
push
aam
push
adc
pop
xlat
int
rcrb
push
xchg
in
and
cmp
movsl
mov
mov
push
sti
cmpb
inc
or
int3
inc
xor
xchg
dec
mov
or
inc
mov
cmp
nop
fstpt
add
sarl
pusha
shll
add
push
ror
push
and
rclb
jp
lods
and
mov
loop
out
push
adc
cmp
ljmp
mov
pop
pusha
scas
outsl
adcb
and
lea
cmp
bound
mov
xchg
call
xchg
add
cmpsb
inc
in
inc
in
std
data16
cmc
lock
jns
sub
aas
pop
int3
out
push
fsubrl
and
pop
or
inc
stc
rcrl
jecxz
cmc
std
repz
jae
sbb
mov
xchg
lock
repz
repz
and
rol
mov
jmp
mov
and
sbb
mov
jle
xchg
imul
cltd
push
cmpxchg
cmp
enter
dec
gs
push
or
mov
sbb
cmp
jecxz
push
mov
popa
mov
je
jl
pop
pop
push
insb
das
push
data16
mov
popa
lahf
pop
popf
mov
jb
mov
adc
std
dec
subl
imull
repz
sar
push
aas
lock
or
inc
pop
stos
and
add
in
mov
pop
cmp
repnz
test
xchg
movsl
jge
add
mov
inc
das
sbb
roll
roll
loop
adc
in
dec
add
shlb
push
insb
es
jne
sbb
push
cmp
push
dec
adc
ficompl
iret
scas
push
sub
lea
mov
arpl
adc
aaa
xor
cmp
pop
icebp
mov
jmp
xchg
lock
adc
or
mov
xchg
xchg
sahf
cld
push
fs
and
adc
mov
cmp
or
xor
jno
cli
mov
test
pusha
adc
shll
mov
adc
in
jno
fsubl
or
mov
insl
pop
add
mov
repz
jbe
xchg
xor
lcall
lea
jo
andb
inc
je
inc
lahf
out
gs
jecxz
pop
sbb
rorb
call
xlat
xor
lahf
mov
call
mov
sbb
repz
xchg
fdivrs
and
shlb
das
andl
loopne
xchg
mov
adc
mov
aam
pop
into
mov
push
pop
cmp
dec
or
sahf
cltd
ljmp
fistps
fs
out
mov
jo
push
mov
push
imulb
mov
push
mov
xchg
rcrb
mov
xor
jo
sbb
loop
cwtl
enter
push
xorb
mov
xor
je
je
aaa
dec
bound
imul
add
lahf
pop
test
sub
insb
mov
cli
sti
pop
rcll
int
lcall
dec
inc
cmc
xlat
sub
into
mov
xchg
lds
push
fldl
pop
xor
xor
push
cli
ljmp
xchg
and
mov
pusha
mov
mov
push
nop
test
or
data16
push
push
and
out
push
cltd
lods
cmp
into
add
push
pop
leave
sbb
aas
je
sub
call
and
mov
mov
push
into
sbb
cld
sub
rcl
adc
int3
jo
adc
or
int
mov
movsb
pop
push
pop
aaa
fcmovne
lds
mov
ficoml
sbb
ret
sbb
ret
adc
cmp
or
aad
or
insl
mov
mov
xchg
popa
loopne
push
loope
cmpl
push
in
test
lods
ljmp
inc
fcoms
sbb
push
jno
mull
fisubrs
sub
inc
push
cmp
rorb
xor
aas
js
sarb
daa
icebp
movsb
lds
test
jns
hlt
adc
pop
xchg
push
femms
bound
test
sub
fdivrs
xor
stos
sbbb
inc
lcall
call
mov
inc
sahf
or
mov
mov
xchg
negl
dec
leave
nop
call
pusha
mov
xchg
das
ss
cmp
xchg
lock
pop
aaa
mov
fwait
icebp
jns
fildll
sbb
in
hlt
inc
nop
adc
sub
mov
xchg
pop
flds
into
loop,pn
shlb
es
je
addl
add
repz
adc
push
push
popa
stos
shll
xchg
mov
inc
lods
mov
out
inc
repnz
jne
sbb
add
xchg
and
mov
pop
fnstcw
inc
leave
jl
cmc
loopne,pn
push
inc
fdivs
mov
nop
dec
pop
iret
jo
icebp
clc
sub
push
sbb
lcall
aas
pop
push
push
outsb
loopne
xchg
or
cmp
scas
fld
sbb
ret
or
xchg
add
imul
nop
stc
dec
mov
lods
in
imul
sbb
adc
imul
xor
xor
mov
scas
or
inc
dec
aaa
xchg
fcompl
add
out
jg
xchg
cltd
cwtl
ret
test
icebp
in
adc
pop
mov
dec
es
push
nop
add
adc
out
test
pop
jae
sbb
and
inc
xchg
pop
and
test
mov
jo
int
cltd
adc
pop
popf
cmpsl
shr
loope
pop
out
jecxz
jle
sbb
sahf
push
fldenv
adc
out
pop
pop
js
gs
xchg
test
and
movsl
fbstp
xchg
negl
mov
test
stc
mov
icebp
outsb
aaa
dec
js
stc
lods
xchg
clc
sbb
mov
push
push
or
or
add
add
stos
test
aam
pop
push
push
mov
inc
xor
adc
sbb
jg
pop
ljmp
loope
cwtl
jmp
inc
lea
cmpsb
inc
sub
cltd
lods
or
adc
shrb
js
mov
sti
imul
testb
push
ljmp
shll
or
jo
js
jle
mov
subl
xor
inc
imul
mov
nop
test
and
pop
repz
loop
or
sbb
mov
into
mov
cli
in
aam
sub
out
cmpsl
jbe
call
pop
scas
fsubs
mov
inc
jge
and
xchg
les
rorb
pop
loop
js
sub
ret
sarb
dec
sbb
enter
fs
call
lret
aaa
jmp
ds
ret
xchg
nop
cli
pop
mov
lds
pop
inc
and
add
call
cli
mov
sub
sarl
inc
lahf
sbb
and
push
ret
jg
pop
sub
fwait
push
insb
jg
mov
push
xchg
movsl
sub
sub
jg
pop
dec
int3
xchg
add
iret
fdivrs
xor
mov
lds
or
cltd
imul
dec
mov
cmp
ret
cmc
add
mov
cmp
jmp
sbb
mov
ret
jmp
fs
popf
fldcw
add
stos
das
out
sbb
ret
sub
js
fadds
push
gs
ret
pop
sbb
das
xor
dec
dec
into
aaa
aad
lods
inc
xor
push
ljmp
cmp
mov
and
xchg
inc
lret
cmp
jp
shlb
call
cmp
xor
adc
mov
fcomip
cs
lock
aaa
mov
jecxz
lea
or
dec
into
inc
add
jne
stos
lcall
pop
xchg
cmp
lcall
fidivrs
dec
sub
ret
sbb
std
insl
mov
cli
mov
cmp
xchg
inc
aam
inc
stos
and
mov
fucomip
mov
sbb
jmp
push
lahf
jmp
jmp
jl
imulb
dec
mov
mov
mov
sbb
cmp
jb
push
out
pop
fwait
in
pop
sti
adc
movsl
fldcw
sub
lock
xor
mov
cwtl
loopne
testl
push
jle
aas
add
sbb
daa
pop
mov
insb
in
adc
idivb
add
loope
sub
ds
sbb
and
adc
push
cmpsb
pop
lahf
outsb
insb
scas
sub
lock
arpl
je
cmpb
hlt
loopne
pop
out
aad
addr16
xchg
mov
inc
xor
sarb
xchg
mov
imul
fsubl
sarb
mov
sub
sbb
push
inc
inc
mov
pop
cmp
loope
and
or
mov
nop
je
sbb
jmp
push
out
inc
daa
imul
rcrb
xlat
add
lahf
mov
jbe
mov
rcl
mov
addr16
add
in
sub
insb
mov
mov
popa
or
pushf
das
xchg
rcrl
xchg
out
inc
xchg
lret
cmp
hlt
inc
xchg
mov
xchg
arpl
mov
popa
inc
add
xor
fdivrp
iret
inc
or
shl
inc
mov
imul
add
call
insl
push
mov
scas
adc
loop
sub
mov
mov
mov
stc
pop
inc
fldt
fwait
inc
in
rorb
pop
daa
scas
divl
nop
testl
or
and
push
add
aad
inc
int
push
loope
sub
scas
das
and
cmp
fiadds
shrl
mov
mov
jo
mov
nop
pop
push
dec
sub
hlt
subb
sbb
jb
outsl
ja
mov
xchg
not
push
mov
cltd
mov
inc
cmp
dec
loop
inc
jg
data16
aad
push
add
repnz
das
in
push
xor
mov
dec
lcall
orl
sti
sub
mov
sarb
mov
idivb
push
inc
in
or
xchg
push
shll
cli
dec
dec
push
dec
shl
and
dec
mov
stc
mov
cmpsl
and
or
inc
les
popf
aad
movsb
imul
inc
jp
loope
jne
cmpsl
jb
push
mov
push
ljmp
jne
mov
inc
mov
fisttpll
and
or
inc
and
cmp
bound
loop
xchg
ljmp
movsb
shll
daa
jmp
es
and
jo
mov
mov
incb
out
lods
xchg
push
mov
and
sub
xchg
cld
mov
inc
sub
adc
xor
mov
adc
adcb
cltd
sub
dec
mov
call
ds
into
push
push
loope
mov
and
ret
and
sub
lock
and
into
mov
mov
xchg
xor
fs
mov
outsl
call
dec
pushl
inc
cmp
fwait
lods
pop
mov
mov
sub
mov
mov
inc
lahf
adc
test
iret
mov
jp
and
sahf
sub
sub
fs
pop
cmp
mov
xchg
mov
push
fwait
out
inc
or
pusha
sub
dec
repz
mov
test
mov
push
lcall
es
gs
in
jg
jmp
or
das
mov
cmp
cmpsl
add
icebp
cltd
inc
int3
outsl
cmp
sahf
or
mov
jno
and
lds
jo
push
xchg
jmp
mov
xor
mov
mov
xor
jbe
pop
js
xor
andl
fisttpll
bound
mov
inc
out
shlb
add
sbb
lcall
mov
inc
test
outsl
jmp
jnp
pop
clc
and
mov
dec
repnz
pop
dec
mov
dec
pop
jmp
repz
inc
dec
and
popa
stos
cmp
jmp
and
in
xor
pop
or
mov
push
xchg
pop
add
push
jge
pop
ret
insl
mov
sbb
mov
daa
inc
or
cmpsb
shlb
call
mov
test
loopne
mov
cs
pop
pop
fwait
jae
cmp
pop
mov
mov
int3
cmp
pusha
rolb
ret
cltd
bound
aaa
idivb
and
inc
ficompl
mov
leave
sub
mov
outsl
and
cmp
ficomps
pop
and
sbb
pop
mov
mov
add
outsb
cmpsb
std
push
jmp
scas
sbb
lret
jecxz
and
jbe
testb
pusha
inc
imul
sbb
in
pop
or
bound
lcall
loop
push
or
xorl
pop
or
lret
mov
pop
mov
jae
int3
stos
js
inc
jae
testb
loopne
sub
aam
cmpsb
mov
xor
ret
jo
cmp
jecxz
fidivrs
and
and
pop
and
outsb
aam
aaa
and
sbb
lds
leave
ljmp
ret
inc
ss
repz
out
lock
ret
adc
or
dec
add
cmp
ret
addl
ja
push
test
pop
mov
adc
ret
push
dec
lahf
ficoml
daa
inc
push
pop
ficomps
or
pop
or
push
aas
outsb
call
jns
ret
add
sub
repz
adc
stc
inc
aam
cltd
jg
or
cmp
jno
pop
insl
in
pop
adc
jle
jl
push
daa
xor
mov
pop
push
stos
xchg
adc
or
stc
scas
pop
mov
adc
lods
mov
inc
lret
sbb
push
iret
pop
out
mov
arpl
test
push
ja
and
adc
dec
out
xor
add
mov
pop
in
in
xor
push
int3
mov
push
or
add
pop
and
cmpsb
inc
mov
aam
andl
and
popa
push
mov
cmovbe
fdivrs
fstpt
adc
and
testb
in
xlat
push
mov
mov
sbb
add
inc
xchg
scas
inc
dec
xlat
mov
add
adc
jl
fsubrs
je
sbb
jbe
jl
mov
movb
int
ja
out
jge
or
in
mov
cmp
lock
mov
arpl
cwtl
dec
or
int
pop
mov
iret
outsb
inc
fistps
xchg
shr
repnz
loop
orl
mov
mov
pop
cld
and
es
add
xchg
inc
inc
push
insl
in
add
mov
or
sbb
fsubs
xor
test
add
xorps
std
pop
testb
add
sysenter
push
sbb
mov
cld
in
out
cmp
in
jno
movsb
mov
sarl
or
and
push
popf
add
lods
enter
roll
lods
mov
leave
dec
sub
push
xchg
dec
push
dec
dec
lea
jle
xchg
inc
mov
in
das
aam
add
push
lea
pop
xor
push
ret
jne
por
jle
xchg
sbb
jb
mov
jae
xchg
adc
fmull
xchg
pusha
mov
adc
push
movsb
inc
jae
xor
xlat
and
mov
cmp
enter
out
insb
fistps
push
rolb
shlb
mov
cli
or
packsswb
ret
sub
adc
xorb
jmp
loope
je
sub
sbb
mov
add
iret
imul
jge
je
mulb
jno
sarl
les
pushf
out
push
xchg
insb
mov
mov
xor
mov
add
iret
jmp
sub
mov
inc
ds
add
and
loope
test
sbb
inc
add
mov
rolb
mov
dec
int
hlt
adc
xchg
stc
popf
enter
ljmp
pop
outsl
add
jle
push
jg
pop
add
out
jne
or
lods
mov
jbe
in
stos
scas
sub
xor
outsb
cmp
test
mov
xor
pop
stc
cmp
adc
stos
sahf
add
out
xchg
fildl
scas
in
jmp
mov
repz
fiaddl
mov
add
sti
out
inc
dec
cld
or
xchg
sbb
pop
jl
and
pop
lea
push
sub
je
add
push
repz
pop
sub
enter
inc
jecxz
sahf
ljmp
mov
test
notb
mov
xchg
movsl
jle
out
les
dec
lret
je
pop
leave
es
fnsave
testb
decb
fldl
stos
scas
mov
jne
fidivs
shrl
dec
xgetbv
mov
scas
cmp
sbb
add
int
dec
in
or
adc
or
cmpsb
adc
and
cmp
or
sbb
mov
and
scas
aam
mov
leave
pop
or
cltd
and
add
jnp
mov
hlt
sahf
ret
sub
in
mov
inc
xchg
jl
movsb
insb
rorb
or
ja
into
sahf
or
cmp
sahf
adc
pop
stc
sub
mov
mov
xchg
enter
push
fildll
sarl
int3
mov
addb
cmc
xchg
ret
ret
push
jns,pn
and
or
push
movsl
and
loopne
outsb
cmpl
mov
xor
add
cmp
cltd
jae
das
lret
sbb
outsb
test
jg
jp
push
mov
add
or
jl
and
mov
mov
and
sbb
fbld
xor
or
sbb
jnp
or
mov
inc
push
ss
cmpb
int3
dec
mov
fwait
clc
insb
leave
dec
out
orl
jecxz
dec
mov
stc
fmul
xor
push
dec
cmp
out
xlat
sahf
mov
push
sti
cmp
sbb
dec
mov
push
orl
ja
imul
ds
das
lcall
sub
mov
in
cmp
xor
adc
aas
fsubr
push
sbb
cmp
int
mov
stos
fistl
mov
jmp
mov
jg
or
adc
test
xor
orl
dec
jbe
je
mov
mov
int
pop
addr16
fnsave
fs
cld
and
push
xchg
mov
enter
je
add
xchg
inc
ret
int3
divb
rcll
cwtl
cmp
push
es
lcall
jae
adc
iret
adc
sti
add
arpl
jb
sti
cmp
pop
xor
inc
push
sub
jns
add
adc
into
sbb
push
push
scas
enter
fwait
or
mov
push
test
inc
pushl
pop
and
fldl
das
xchg
pop
mov
cmp
push
xchg
repz
lret
pop
or
jbe
test
pop
dec
lods
inc
mov
pop
pop
jle
mov
add
loopne
mov
outsb
cld
mov
in
dec
sub
in
sbb
into
mul
mov
shll
sti
ja
sub
mov
cmp
add
inc
insl
sbb
shll
lret
popa
add
sbb
mov
lcall
js
in
imul
adc
mov
mov
inc
push
orl
out
jno
jne
jg
add
test
loopne
ret
shlb
mov
xor
sub
sahf
jbe
sar
out
cmp
gs
sub
movsb
jge
addl
fists
ds
push
dec
fstpl
sti
adc
mov
nop
xchg
cmc
mov
bnd
fnstenv
aam
cmpsl
fwait
sub
jg
aad
dec
mov
jbe
stc
bound
cltd
nop
and
and
rcll
xchg
or
dec
dec
sbb
sbb
dec
mov
or
dec
shlb
bnd
xor
subb
fstp
pop
aam
dec
imul
shlb
inc
mov
mov
lds
hlt
cltd
adc
mov
lret
imul
or
mov
sub
loope
sub
dec
adc
xor
dec
out
dec
scas
sbb
std
ret
test
push
dec
mov
mov
push
mov
outsb
add
outsl
inc
popa
lahf
enter
cmpsl
sbb
fadds
cs
xor
in
imul
test
add
lds
dec
mov
add
sub
xchg
adc
mov
xchg
scas
popf
movntq
out
lret
mov
sbb
adc
lock
mov
out
jmp
mov
cmp
mov
fcmovne
lods
inc
stos
dec
dec
xor
jb
std
imul
xchg
mov
xor
or
test
mov
mov
xor
outsl
ljmp
jb
sar
jbe
push
in
shlb
outsb
jb
clc
xchg
dec
cmp
out
mov
mul
xor
xchg
inc
jno
fildl
test
mov
mov
mov
mov
jbe
pop
shrl
mov
push
inc
inc
xchg
push
fists
push
ljmp
rol
shlb
xor
mov
mov
test
std
xchg
mov
xchg
sti
insl
daa
mov
or
insl
repz
mov
cmp
push
or
pop
in
orb
xchg
stos
pop
add
sahf
mov
mov
test
or
scas
mov
fidivl
xchg
push
xchg
daa
outsl
stos
sbb
jno
aas
test
sub
inc
imul
sub
jmp
push
addr16
lret
shlb
cmp
int
aam
lea
out
adc
pop
mov
loopne
pop
ret
stos
cld
or
data16
testb
sub
jmp
dec
sar
js
adc
mov
xchg
dec
iret
movsbl
popa
call
bound
pop
mov
lcall
cmp
add
pop
adc
cmp
sbb
mov
flds
xchg
xor
push
notl
out
xchg
adc
push
push
pop
and
dec
and
popf
dec
mov
jae
in
lea
rclb
sbb
and
and
pop
jle
pop
fadds
hlt
ds
or
addl
out
xchg
mov
push
test
mov
dec
ja
loopne
shrl
jle
scas
pop
rcrb
mov
ficoms
movsb
push
cld
sub
cmp
cmpsb
jno
push
xchg
repz
mov
lods
popa
ror
sub
cli
stos
dec
push
xlat
lea
dec
adc
pop
lods
push
pop
mov
sbb
jecxz
movsl
and
test
cmp
ja
stc
cld
imul
test
outsb
push
test
fwait
pop
aaa
add
vorpd
jns
leave
jb
xchg
pop
jmp
mov
in
mov
xchg
movl
mov
cmp
scas
push
adc
shrb
add
and
loop
out
pushf
es
inc
add
push
rcrl
push
sbb
push
mov
stc
adc
sub
and
imul
lea
mov
aam
mov
mov
push
xor
adc
outsl
movsb
vpaddusw
pop
mov
mov
push
aaa
test
xor
inc
movsb
es
push
nop
sub
add
into
std
js
out
mov
cwtl
sbb
test
in
and
je
stos
cs
iret
repz
cmp
xchg
and
aas
adcb
insl
hlt
loop
mov
in
inc
shl
repnz
lret
xor
mov
cmpsl
lret
dec
imul
outsb
sbb
inc
push
dec
jle
mov
out
sbb
rorl
sub
aad
pop
sbb
inc
insl
adc
or
inc
mov
cltd
not
cli
arpl
jecxz
xor
repz
out
or
lock
cmpsl
dec
xor
mov
movsl
and
xchg
in
xchg
inc
sti
lcall
icebp
xchg
les
test
mov
pop
jb
inc
mov
std
push
flds
in
xor
and
mov
xor
lahf
cli
hlt
bound
outsb
mov
call
data16
xor
cmp
mov
pushf
or
aad
jge
aam
pop
xchg
js
sbb
cltd
jnp
inc
in
and
jo
xchg
divb
push
stc
aaa
xor
xlat
add
js
loope
dec
mov
inc
rcr
out
loope
xchg
sbb
cmp
jo
outsl
push
scas
mov
loop
cs
jno
ss
cli
out
mov
cmp
aad
sbb
and
mov
shlb
jcxz
imul
insl
pop
jle
push
sbb
push
mov
shrb
cltd
dec
lds
andb
cwtl
fwait
lds
mov
inc
in
or
xor
jg
cmp
xchg
adc
inc
scas
out
dec
call
cli
xlat
imul
mov
and
mov
xor
cmp
je
stos
insl
sub
imul
push
xor
test
or
test
pop
adc
mov
andps
adc
mov
in
ljmp
push
aad
les
or
mov
stos
cmp
cld
int3
adc
test
cli
xor
cli
push
fisubrs
lret
es
mov
data16
mov
repnz
cltd
dec
call
inc
pop
dec
push
pop
in
cmpsb
cmpsb
mov
or
add
xchg
and
push
sbb
sbb
pop
push
mulb
sub
leave
jmp
div
cmp
dec
xor
clc
movsb
fldt
ficompl
ss
mov
xchg
shr
clc
or
push
bound
mov
test
lcall
mov
or
adc
shlb
pop
pop
ja
push
inc
and
xchg
stos
fidivs
mov
leave
xchg
call
fldt
icebp
xchg
sbb
mov
and
repz
adc
mov
cmpb
pop
fdivl
jecxz
popa
pop
je
iret
cwtl
mov
data16
lods
mov
std
aas
sub
movsl
sahf
xor
jne
lahf
int3
xchg
mov
mov
out
je
rcrb
push
ds
mov
das
out
adc
or
and
in
aad
fs
push
xchg
dec
aas
mov
sbb
mov
shlb
sarb
and
cmp
lcall
imul
enter
cmp
adc
pop
test
jle
sub
dec
pop
mov
pop
cld
dec
push
lods
ss
outsl
cmp
and
dec
into
inc
push
outsb
push
xor
inc
or
sti
mov
dec
xor
scas
pop
mov
test
lea
lock
loop
daa
repz
dec
lret
fsts
fdivs
cmp
sbb
les
dec
and
ficompl
mov
les
movsb
stc
ja
and
or
lods
cmp
scas
je
mov
dec
ss
in
mov
push
pop
out
sub
mov
pop
inc
movsb
inc
jmp
lret
imul
mov
adc
nop
and
or
in
shll
mov
pop
push
divl
mov
outsb
lcall
pusha
cmc
adc
scas
inc
popa
stc
ljmp
add
out
cmpsb
and
cmp
jno
and
add
mov
ja
mov
adc
pop
jb
fdivrs
cld
lahf
push
test
je
cli
jmp
mov
add
jl
sub
pusha
mov
imul
mov
xchg
cld
pop
and
cmp
iret
stos
dec
push
inc
lret
mov
sub
sbb
xchg
ret
push
lods
or
adc
push
inc
xchg
xchg
jl
out
cmp
ret
mov
mov
pop
shl
shl
sub
sub
mov
in
add
push
sub
inc
lods
imul
pop
or
leave
je
mov
inc
rorl
les
test
lea
adc
cmpsl
je
arpl
cmp
loop
mov
cmp
or
add
cmp
adc
jg
jl
add
push
addl
movsb
inc
adc
adc
mov
enter
adcl
dec
jmp
jne
aaa
clc
clc
xor
aam
xchg
ss
sbb
dec
adc
dec
cmp
push
daa
mov
jno
sub
add
fcmovne
and
in
xchg
loopne
ror
xchg
cli
arpl
loop
fistl
rclb
sbb
add
xor
data16
pop
arpl
mov
push
xlat
outsb
jecxz
xchg
push
pop
mov
cld
loopne
mov
pop
inc
sub
add
add
fdivrl
add
stos
data16
jecxz
test
and
adc
dec
inc
aam
sti
loop
outsl
sbb
insb
xchg
pop
iret
repnz
push
ror
sub
test
fistpll
push
xor
inc
pop
sub
stc
add
mov
imul
cmp
les
jecxz
xor
int3
cmp
or
lock
inc
push
rcrl
push
sti
enter
adc
jb
jo
mov
hlt
adc
test
cwtl
pop
sub
xchg
pop
mov
cmp
enter
jg
cmp
int
daa
lods
repz
mov
pop
add
es
das
lret
pop
xor
dec
aaa
cmpsl
adc
push
call
xchg
cltd
inc
inc
insl
into
cwtl
add
jl
std
sbb
orb
mov
out
loop
in
test
sahf
adc
xchg
add
xchg
jbe
jl
push
or
repnz
xor
daa
sbb
les
andb
xor
mov
test
dec
cmp
jo
and
cmpsb
adc
testl
js
dec
mov
or
sti
push
or
loopne
hlt
or
ret
fcomp
lret
mov
jl
mov
pop
xor
lods
addr16
mov
cmpl
xor
sbb
lahf
jns
push
and
popa
inc
in
jnp
push
into
cmpb
rcl
mov
lcall
sbb
mov
mov
xlat
repz
lds
xchg
ds
pop
add
out
pop
inc
test
dec
and
mov
mov
es
mov
jecxz
and
pop
mov
fmull
setns
mov
shll
mov
ja
outsb
aad
mov
mov
sahf
push
push
sarb
and
ja
pop
pop
sahf
sub
shrl
ljmp
mov
xchg
popf
push
and
mov
adcl
enter
or
cmp
or
shrl
mov
test
subw
iret
mov
adc
jne
loop
pop
js
stos
fcompl
xor
fsubrp
adc
lods
jle
sbb
jb
notw
jns
cli
cmp
sarb
pop
jne
mov
sub
mov
add
loop
sar
adc
xor
pop
test
jge
xchg
mov
adc
mov
xchg
xchg
mov
dec
add
sub
out
in
jl
add
sbb
xchg
sub
or
in
inc
jmp
call
mov
leave
sub
sti
lods
in
test
and
xchg
ret
test
mov
sbbb
cmp
sub
std
shlb
loope
or
jl
imul
insb
into
and
mov
cmp
fsubrs
sbb
sti
mov
dec
xor
into
clc
rclb
xchg
or
lret
bound
or
pushf
xor
mov
sbb
xor
arpl
xchg
pop
add
mov
mov
jge
push
lahf
mov
lea
sarl
pop
pop
imul
xchg
test
cmc
iret
inc
push
inc
dec
push
and
fstpt
pop
ror
and
mov
fildl
clc
stos
add
sbb
sbb
jnp
bound
dec
pushf
pusha
in
xor
fcompl
push
js
xor
and
jge
sbb
or
scas
mov
push
dec
cwtl
push
pop
push
scas
cmpsb
out
mov
adc
mov
and
ret
or
aam
sub
out
mov
mov
xor
push
sbb
stos
inc
pop
sbb
ret
sbb
rclb
test
inc
or
in
insl
scas
dec
pop
cmp
xor
lret
shl
negb
push
sahf
lods
sub
inc
stos
mov
insl
stc
ljmp
test
adc
movsl
xorb
mul
dec
push
cmp
out
xchg
out
enter
cmpsb
inc
test
clc
adc
fstpl
jnp
nop
mulb
enter
mov
inc
mov
ret
aam
lcall
or
cmp
mov
cs
pop
out
test
in
mov
mov
repnz
loop
sub
xor
add
dec
mov
and
cmp
fwait
mov
mov
mov
mov
mov
xor
adc
repz
fimuls
in
loop
add
xor
push
loope
test
call
push
add
push
and
jp
mov
subl
xor
mov
add
pop
or
fldenv
jmp
fwait
sbb
dec
loope
sbb
fisubrl
sbb
imul
pop
scas
mov
cli
pusha
bound
pusha
push
pop
nop/reserved
jl
popf
jne
call
xchg
push
pop
addb
mov
ja
lret
ret
mov
jne
aaa
xchg
mov
mov
clc
call
sahf
adc
inc
jle
jle
adc
lret
jg
jae
test
inc
popf
test
jnp
dec
add
stos
es
ss
push
decl
cmp
rclb
cmp
inc
pop
inc
orl
jo
test
inc
sarb
push
aam
inc
out
lea
cmpsl
in
dec
stos
mov
dec
fucomp
sub
jno
test
dec
es
xchg
jo
fsubp
test
stc
test
aas
cwtl
ljmp
pushf
leave
pop
xchg
push
ss
mov
stos
adc
mov
js
fidivrl
jne
enter
rorb
loopne
icebp
or
add
cmp
sti
into
adc
adcl
pop
mov
test
xchg
test
pop
gs
mov
outsl
add
or
lahf
shrb
cmp
push
imul
inc
stc
stc
inc
xlat
xchg
outsb
push
pop
add
dec
mov
xchg
mov
es
xchg
fnsave
lock
shlb
cmpsl
imul
xchg
pop
aad
icebp
pushf
jg
pop
mov
lds
push
jbe
push
stos
insb
mov
xor
lods
xlat
out
imull
mov
push
mov
mov
adc
jp
or
divb
mov
push
xchg
loope
jae
subb
add
ret
push
jecxz
mov
sahf
dec
pop
test
jge
mov
inc
or
cmp
cmovne
fninit
sub
loopne
aas
in
add
iret
sbb
es
lds
mov
scas
xor
mov
rorb
push
mov
in
jae
in
out
enter
sbb
rclb
push
dec
jle
cltd
pop
dec
outsl
js
sbb
les
jmp
lods
int
test
mov
inc
les
pop
test
sub
dec
ds
int
insl
js
add
mov
cmp
add
jmp
les
fcompl
ret
outsl
call
sbb
fsubrl
push
sub
ljmp
and
test
aas
inc
loopne
cmp
cmp
xorl
inc
cmp
mov
and
mov
xchg
loop
adc
and
int3
inc
adc
cwtl
es
out
std
das
out
test
xor
insl
mov
scas
scas
mov
or
and
jb
pop
sub
xchg
mov
fldcw
xchg
mov
in
ljmp
mov
inc
mov
lret
push
lock
inc
xchg
lds
imul
mov
sub
xchg
cld
iret
dec
mov
pushf
pop
jae
out
imul
int3
cmpsb
aaa
sbb
ret
adc
sub
mov
ds
cmpsb
mov
pop
mov
pop
push
jp
mov
insl
inc
test
mov
xlat
dec
add
adc
cmpsl
pop
in
xchg
roll
insl
jb
jg
add
dec
mov
lods
mov
out
mov
lods
mov
int
std
or
scas
out
xor
stos
jne
in
nop
jo
dec
stc
scas
movsl
xchg
imul
dec
int
fnsave
dec
cli
sub
add
pop
cld
mov
out
inc
or
mov
ds
pop
inc
out
rcrb
fcomps
dec
jmp
movsb
movsl
fcoml
cmp
push
push
fidivl
out
stos
lods
mov
rcr
sbb
aam
lahf
fsubl
push
cltd
addr16
lret
xchg
jle
ja
mov
jge
pop
iret
jecxz
ja
hlt
mov
sub
icebp
sub
clc
movsl
shr
gs
fdivrl
fisubl
cwtl
fst
sub
add
aaa
sub
or
jl
and
dec
mov
dec
in
xchg
sbb
cmp
push
jb
loope
sub
jbe
sub
loop
dec
sahf
pop
in
mov
push
sub
xchg
out
hlt
leavew
inc
das
andb
inc
sbb
mov
push
lcall
cli
leave
cmp
imull
popa
mov
jg
into
xor
ficoml
fisubrs
jae
aam
push
inc
sbb
and
cld
mov
xchg
popf
jge
cmp
or
mov
cmp
mov
or
mov
dec
xchg
in
fsts
mov
inc
cmp
add
or
adc
mov
das
psadbw
popa
lret
insb
sub
push
inc
es
inc
mov
cmp
inc
cmpsb
cmpsl
filds
pextrw
pop
mov
and
dec
in
iret
sub
fiadds
jbe
mov
pusha
cmp
xor
aaa
mov
jnp
mov
add
nop
mov
or
adc
enter
or
shrb
shll
sar
scas
jl
mov
es
icebp
sbb
jl
cmp
push
ds
mov
xor
mov
data16
adc
sub
and
add
in
pop
outsb
jmp
in
js
je
cmpsl
xor
fisttpll
cmp
sbb
shll
adc
arpl
jb
cmp
pop
lds
gs
mov
jecxz
add
and
aam
ret
fidivrs
xor
pop
cmp
xor
push
push
xor
dec
test
imul
jl
mov
xchg
fists
aad
mov
out
nop
dec
jle
cmc
pop
pop
jbe
add
xor
cmc
dec
pop
fnsave
fwait
adc
xlat
jl
sbb
xor
clc
dec
dec
subb
and
xchg
mulb
xor
push
insb
xchg
aas
mov
xor
xor
or
cmp
cmp
enter
lret
mov
lods
inc
hlt
push
mov
jmp
shlb
mov
clc
push
inc
or
sub
pop
aam
lea
shlb
mov
int
xor
xor
xchg
mov
sti
scas
movl
mov
xor
sbb
sbb
ss
repnz
cmp
sarl
and
outsl
cmp
cltd
inc
popa
icebp
push
or
subl
in
xchg
rolb
adcl
xchg
xor
and
icebp
movl
cltd
add
lds
xor
xchg
pop
lahf
jbe
xchg
popf
sbb
xchg
outsb
nop
lret
lahf
imul
lcall
xchg
imul
stos
push
sub
add
xchg
insl
sbb
cli
out
mov
adc
clc
loope
xchg
jno
shl
ja
arpl
push
lods
xchg
nop
add
push
mov
fcoms
int3
andl
or
decb
xchg
gs
inc
rolb
adc
aam
dec
imul
sti
out
cltd
and
neg
mov
adc
pusha
jo
sti
sub
cmp
mov
stos
arpl
les
mov
jmp
sahf
inc
test
jle
cld
ds
out
lret
push
call
mov
jbe
xor
in
pusha
xor
fcoml
dec
in
mov
dec
or
xlat
sub
xorb
das
cld
stos
fwait
les
ljmp
in
or
clc
inc
fs
cmp
out
icebp
dec
xchg
inc
xor
out
jmp
inc
mov
sahf
pop
inc
mov
xor
adc
je
sub
and
pop
add
loopne
test
addr16
dec
int3
sbb
xor
sbb
insl
xor
stos
loope
lea
cmp
push
arpl
popa
into
scas
push
icebp
movsb
cmc
rcr
inc
ja
stc
inc
xchg
fsub
push
lret
inc
sub
and
pop
jl
push
fmul
lods
pop
insl
cld
mov
imul
sub
fistl
jo
or
out
sbbb
xchg
push
adc
jg
ret
sub
inc
dec
fsubs
mov
mov
iret
hlt
ljmp
xchg
movsl
ja
je
mov
sbb
inc
call
in
and
dec
pop
mov
jecxz
leave
out
mov
arpl
movsl
ss
outsb
dec
push
pushf
and
aas
lcall
scas
push
push
jmp
mov
or
iretw
push
movsb
push
int3
inc
xchg
sbb
decb
ret
dec
jle
fstpt
or
ret
adc
cmp
hlt
jmp
ja
idivl
je
nop
jne
sbb
inc
or
mov
cmp
xchg
push
push
or
movb
out
jle
xchg
dec
ja
pusha
cmp
push
fidivs
das
push
adc
and
pop
mov
repz
push
jp
jbe
inc
test
pop
mov
fidivs
cltd
loope
sub
mov
out
adc
stos
out
insb
xchg
notb
lcall
fmull
mov
negb
pushl
jne
inc
pop
mov
fcomps
pushf
test
mov
aas
lods
loop
jo
testl
sub
adc
mov
mov
pop
mov
xchg
cltd
cmp
addb
inc
lods
fldl
mov
cmp
loopne
sub
inc
in
push
dec
xor
sub
mov
addr16
pop
mov
mov
push
es
sbb
cmpsb
add
lods
stos
lret
jo
popa
out
xchg
jmp
scas
pop
xor
jb
lcall
sahf
fnsave
nop
fisubl
sub
mov
and
sbb
xchg
and
inc
mov
xchg
hlt
aam
adc
gs
inc
mov
sbb
scas
lret
mov
pop
mov
je
jne
loopne
push
or
orb
test
push
mov
xchg
dec
ret
or
fbld
push
fstpt
jl
adc
xchg
push
out
push
pop
inc
cmp
push
lock
cmp
jecxz
js
jecxz
lahf
and
add
pop
pop
jmp
ret
dec
popa
pop
add
add
shr
out
xor
xor
test
movsb
jo
adc
sub
mov
or
pushf
or
stos
sahf
sbb
test
mov
pop
movd
xchg
rcl
arpl
push
ljmp
pop
and
adc
xchg
xchg
call
push
xor
xor
js
add
pop
in
bound
push
decl
rorb
insl
sti
push
jno
jl
rclb
fdivrl
or
daa
add
add
jno
dec
push
cmc
je
xor
test
in
je
or
into
jne
movsb
mov
mov
mov
xchg
and
scas
ficompl
imul
mov
stc
ja
dec
xor
inc
adc
data16
lods
decb
fimull
aaa
mov
loopne
imul
clc
cmp
pushf
leave
sahf
dec
mov
fsubrs
iret
or
jae
and
and
nop
arpl
xor
cs
test
mov
sbb
cmp
mov
aas
push
xor
push
xlat
sub
out
ds
mov
push
stc
push
and
or
out
lea
enter
or
or
jl
fldcw
push
js
mov
insl
lods
inc
popf
lahf
inc
call
ds
ss
xchg
lods
and
push
out
sub
push
mov
pop
fstps
pop
xor
in
inc
mov
mov
sub
mov
lock
mov
jge
xor
pop
into
mov
lock
or
and
lret
popf
mov
mov
mov
adc
jne
iret
adc
fdivs
lock
popl
mov
test
lock
mov
mov
enter
push
and
inc
sub
ror
cltd
movsb
pop
cmpsl
stos
lds
or
pop
sbb
cmp
jg
xsha1
cmpsb
sysexit
push
or
xor
fptan
mov
inc
in
insb
cmpsl
sbb
mov
lret
or
fwait
xlat
pop
and
jae
or
incb
inc
cmp
sub
shlb
jae
lods
call
les
and
add
pop
mov
mov
repz
loop
stc
imul
mov
ret
popf
xchg
push
dec
and
fidivs
ja
and
lds
cwtl
push
inc
dec
mov
out
dec
jb
movsl
lahf
xchg
adc
fs
push
lea
shrb
lea
adc
in
je
cmp
add
cld
js
jnp
xchg
repz
ja
cmpl
lea
pop
cs
movb
insb
or
push
dec
pop
cmp
add
push
scas
mov
adc
sub
into
push
std
enter
xor
fcoms
pop
ficomps
add
add
pop
fcomps
gs
push
add
int
add
push
aaa
rclb
sbb
pop
js
push
pop
out
popf
xor
cmp
add
cmp
into
mov
stos
sub
aas
cmpl
adc
and
inc
pop
pop
bound
sub
push
scas
cwtl
test
mov
and
out
roll
fwait
sub
dec
scas
adc
mov
fnstenv
fidivs
cmp
das
add
and
mov
and
cwtl
or
out
xchg
sub
push
lret
clc
lods
or
mov
sub
mov
ljmp
jecxz
jae
sub
cmp
jbe
xchg
xchg
xchg
mov
shll
and
jne
dec
scas
cmp
mov
mov
mov
repz
jae
dec
sahf
jge
repz
jae
test
and
pop
add
dec
sarb
icebp
and
testb
push
and
sbb
int3
cwtl
nop
daa
add
je
lods
je
xchg
sarb
movb
out
lret
mov
cmc
xorl
pop
shrl
insb
pop
sbb
sbb
jmp
jg
adc
jo
lods
shrl
dec
mov
inc
xchg
das
stos
js
and
sub
insl
inc
mov
clc
lods
fsubl
lret
lea
mov
inc
jle
daa
repz
mov
divl
jmp
inc
pop
int3
fdivp
adc
in
jmp
dec
mov
dec
fcomi
xchg
out
sub
je
daa
xchg
int
xchg
nop
jge
and
jmp
ds
xor
xor
pop
subb
jbe
faddl
add
push
add
mov
or
loope
pop
outsb
or
gs
ds
fidivs
dec
mov
push
in
mov
test
jae
sti
mov
cwtl
push
inc
xor
mov
inc
adc
lcall
mov
pop
push
rorl
adc
inc
cmp
mov
dec
ljmp
fsubrs
lret
ss
add
insl
push
hlt
scas
xor
push
jge
mov
cltd
scas
mov
scas
dec
stos
imul
and
mov
stos
sub
push
pop
or
lds
push
aas
sub
sbb
scas
push
inc
rol
subb
out
xchg
pop
pop
lahf
lods
sti
lret
call
cli
add
lea
popa
fnstenv
pop
enter
push
xchg
aaa
mov
cmpsl
jmp
xchg
iret
sub
roll
popf
jb
in
adc
stc
mov
push
push
xchg
dec
adc
out
inc
or
test
divl
pusha
mov
lods
cmc
fbld
sub
arpl
ret
ljmp
mov
xor
jb
pop
dec
aaa
push
sarl
mov
lret
insb
and
lcall
mov
jne
cmpsb
fmuls
sbb
push
sub
dec
xor
jo
sub
pop
cld
xchg
ja,pt
int
add
faddp
clc
xchg
xchg
movsl
in
lock
fldcw
sub
xor
ds
stc
fs
dec
insl
cltd
pushl
xlat
dec
push
stos
sti
sub
pop
jge
scas
xor
sub
test
push
shrb
or
rcll
xchg
add
lods
lcall
mov
mov
rclb
push
jmp
jge
shl
jp
aaa
inc
jge
in
xor
lahf
jmp
stos
lahf
jge
pop
lea
mov
lret
lcall
imul
dec
jns
in
pop
jae
mov
mov
pop
es
movsb
fcoms
int
mov
pop
aas
jno
lret
aaa
js
rcl
std
arpl
js
fidivs
popa
and
mov
insl
ss
xor
int
add
sbb
cmp
sbb
arpl
sub
pushf
jns
mov
insl
cwtl
sbb
lcall
inc
clc
sbb
test
cmp
sbb
js
xchg
fnsave
lea
add
mov
sbb
fwait
ret
out
in
sbb
inc
mov
jo
push
mov
mov
mov
dec
jbe
cs
pusha
call
or
sahf
adc
cli
cmp
jo
cmpsb
cli
push
inc
test
rcl
out
pop
insb
push
xchg
lret
lods
insl
cld
int
cmp
push
jns
mov
sbb
movsb
xchg
mov
cwtl
xchg
inc
sbb
mov
es
in
sbb
jp
cmc
inc
sti
sbb
test
cmp
mov
icebp
cmpsb
pop
mov
push
pop
lods
andb
add
stos
push
push
mov
lods
mov
and
inc
adc
xchg
sbb
insl
adc
adc
lahf
aad
inc
fcomps
imul
ds
aad
in
dec
xchg
or
pop
outsl
in
insb
add
sbb
rcrb
inc
mov
xor
and
mov
xchg
inc
cmc
adc
or
add
push
cmpsl
out
iret
ss
call
or
or
cld
imul
and
pop
jmp
push
loopne
cmp
pop
adc
andl
xor
bound
inc
mov
mov
scas
pop
cmp
outsb
pop
or
repz
ljmp
rcrl
xor
sti
cltd
or
aad
xor
push
jo
mov
movsl
addr16
imul
and
inc
pop
jmp
fadd
adc
push
jg
cmpsl
popa
sar
gs
push
or
sbb
into
push
and
cltd
push
aas
int3
push
fs
pop
daa
push
sbb
stos
dec
mov
orl
nop
push
in
data16
mov
clc
out
add
and
out
jg
push
inc
aas
popf
push
mov
rcrb
out
scas
fmuls
fisttpll
add
mov
fs
and
es
repz
sub
push
rcr
mov
xor
into
or
sbb
xchg
inc
popa
ljmp
push
popf
adc
jge
or
rcl
cmpsl
test
into
movsl
xor
out
out
jno
add
jno
pop
mov
stos
jnp
scas
addl
push
xor
stos
rep
into
xor
push
adc
shrb
repz
xchg
xor
mov
rcrl
xor
push
out
iret
mov
push
add
xor
fcoml
inc
arpl
out
push
and
and
cmp
sub
out
adc
sahf
lahf
and
fstpl
mov
inc
push
data16
notb
stc
fadds
dec
f2xm1
das
ret
lock
and
jge
lret
shrl
popa
jmp
imul
cmc
fnsave
popa
add
xchg
push
lret
cltd
insl
push
mov
into
popf
pop
mov
adc
sbb
and
mov
ds
mov
xor
pusha
push
sub
cmc
jecxz
pop
jecxz
je
jmp
mov
fsubrs
insl
mov
push
inc
or
sub
xor
pop
pop
mov
out
fdivrs
fdivr
jmp
aad
in
out
loope
in
push
nop
outsl
stos
aad
out
pop
fstpl
pop
rcl
call
jmp
xchg
ret
jl
push
add
loopne
out
dec
aas
inc
cmp
lret
movsl
call
pop
fwait
xchg
out
inc
dec
add
and
subl
xor
mov
adcb
lea
scas
lods
movsl
mov
pop
and
gs
aam
or
fistpll
dec
pop
lcall
aad
arpl
out
inc
xor
ret
pop
in
jb
jmp
cmp
mov
loop
cmp
mov
stos
sub
adc
data16
rorl
lds
sbb
cwtl
sub
inc
mov
xor
lds
lods
lea
fwait
out
sub
cmpsl
out
dec
xor
push
imul
imul
pushf
jae
jb
imul
inc
sbb
cwtl
lcall
mov
mov
into
inc
out
mov
jle
insl
test
xchg
fsubp
dec
cmp
add
sbb
xchg
xor
inc
int
dec
add
test
movsl
fsubl
sub
outsl
hlt
cmc
sti
and
pop
xor
lea
jl
mov
fucompp
and
dec
loop
xchg
loope
lret
ljmp
add
and
xor
and
repnz
push
pop
xchg
inc
or
jg
fsubs
bound
sbb
fcoml
das
popa
cwtl
inc
mov
jg
rcrb
stc
jge
pop
inc
or
jmp
fadds
dec
lods
pushf
add
sarl
mov
xor
pop
lret
push
incb
cld
inc
out
call
ja
jp
xchg
and
sbb
test
dec
je
test
xchg
bound
add
pop
cmp
shrl
jl
daa
subl
push
shl
scas
es
mov
in
mov
mov
je
sbb
insl
ljmp
ror
std
and
xor
or
lcall
and
push
mov
xor
dec
mov
in
and
icebp
cmp
cmpl
ja
loop
mov
adc
movsl
jbe
mov
inc
pop
out
xchg
sbb
add
cmp
shlb
ljmp
pusha
xchg
push
xor
fwait
xlat
sub
add
adc
sbb
not
ret
addr16
loope
stos
or
add
adc
jns
int
dec
cwtl
mov
fiadds
jg
sbb
out
ficoml
cld
pop
inc
mov
outsl
dec
push
xorl
xchg
pop
imul
mov
cld
mov
insl
mov
mov
inc
push
xor
xor
jecxz
sar
cltd
setb
fldcw
jl
and
dec
nop
xchg
jbe
cwtl
adc
les
cmp
mov
ret
dec
inc
pop
pop
in
mull
test
scas
mov
or
das
cmpsl
inc
jns
test
cmpsb
movsb
stos
dec
mov
in
and
pop
jb
push
loopne
imul
scas
mov
outsb
xchg
test
mov
cmpsb
das
call
add
test
aaa
push
dec
in
aaa
js
push
fwait
mov
push
mov
fidivrl
cld
mov
push
xchg
scas
jmp
arpl
adc
jno
sub
xlat
and
test
ja
add
mov
aaa
and
jle
adc
mov
or
lret
xor
ljmp
fwait
dec
in
cs
jae
lds
push
call
and
push
add
rolb
xchg
into
mov
sti
mov
imul
inc
add
push
loopne
xor
ds
jg
or
or
movl
jle
negl
push
xlat
rcll
mov
movsl
addr16
sub
xor
insb
jl
mov
das
pop
jbe
mov
xor
mull
repz
cmp
mov
mov
mull
pop
adc
hlt
das
cmpsl
movsl
mov
loop
subb
mov
push
in
push
mov
mov
dec
rolb
mov
in
and
dec
mov
clc
fcoms
push
jge
in
and
xchg
adc
es
in
test
ficoms
sub
shlb
push
imul
fisttpll
xor
cmp
mov
inc
lock
cmpsl
jmp
rol
or
int
mov
pop
cmp
stos
push
push
jae
cmp
mov
cmp
pop
arpl
xchg
test
mov
sbb
pop
mov
hlt
jecxz
and
mov
xchg
repz
pop
cmp
sbb
jl
stc
cmp
clc
mov
rcr
sub
int3
mov
stc
movsb
cmp
rcll
insl
pop
push
sub
fs
sub
pop
int
pop
test
or
stos
adc
mull
xor
ret
int
mov
jecxz
lcall
jns
pop
push
lret
mov
sahf
jecxz
out
sub
insb
gs
hlt
sub
inc
mov
jg
out
dec
lds
lcall
mov
push
sbb
iret
movsb
fildl
pop
ret
or
fdivs
jae
lods
pushf
mov
hlt
imul
hlt
ret
lds
push
sbb
mov
push
test
cld
xor
push
mov
jb
xor
imul
imul
in
cmp
inc
fsubrl
movsl
push
pop
dec
test
xchg
cwtl
fdivl
cli
push
mov
add
inc
add
test
jge
and
cmp
xchg
faddl
ret
lock
xorl
mov
imul
movsb
ret
xchg
shll
scas
in
test
push
adc
data16
xchg
vcvtpd2psx
std
es
adc
jmp
adc
and
fisubs
in
mov
js
add
loop
sub
scas
repnz
fcompl
popl
pop
push
xchg
mov
pusha
shl
inc
mov
fisubrs
movsl
into
adc
cld
mov
push
push
and
aaa
and
out
les
movsb
das
sbb
jmp
loope
push
jb
push
ss
dec
xchg
cmp
sub
sub
aam
popl
or
cmp
cmp
stc
push
or
repz
loopne
add
xchg
ljmp
fsub
test
add
mov
fidivrs
add
or
dec
call
pop
scas
scas
pop
mov
shrb
imul
sub
sarb
jmp
pop
and
push
ret
lret
ss
shll
push
aaa
or
test
sub
popa
lahf
pop
pop
inc
cmp
insl
lds
in
lret
mov
adc
mov
les
mov
out
clc
loop
jno
jnp
faddl
stc
enter
fisttpll
xor
loopne
ss
aam
and
mov
lahf
fucom
jae
bound
sub
mov
dec
imul
movsl
xchg
adc
imul
mov
jno
lahf
mov
xchg
stos
ja
aad
add
mov
insb
jo
addr16
sbb
mov
adc
cld
std
dec
xor
xor
push
ret
aad
test
mov
mov
xchg
jbe
cmp
stos
sub
xor
pop
sbb
mov
int3
cmpsb
fwait
or
aam
xchg
or
sbb
jb
fldt
shll
cmpsb
in
fisttpl
dec
iret
out
mov
out
mov
mov
scas
cwtl
pop
and
call
loope
sbb
add
xor
out
and
test
arpl
jmp
lock
inc
sbb
jbe
inc
cmp
jmp
mov
mov
icebp
add
daa
dec
jb
xchg
imul
pop
xchg
jb
pushf
sub
xor
cltd
push
add
daa
cmc
cwtl
jge
in
mov
cltd
arpl
popa
aaa
sbb
das
xor
pop
mov
loope
mov
dec
nop
sub
mov
and
ds
xor
mov
inc
push
xlat
out
push
mov
rcrb
and
shr
add
out
mov
or
ficomps
mov
sbb
jb
cltd
lods
gs
add
int3
add
jg
add
mov
sbb
je
jns
cmc
dec
adc
pop
bound
imul
xchg
movd
mov
xor
jbe
inc
insl
push
jne
int
or
ss
push
nop
cltd
rcrl
mov
aas
lods
mov
add
stc
dec
inc
mov
mov
pusha
cmc
loopne
cmp
mov
lret
pop
xchg
and
inc
adc
jl
nop
mov
pop
ficompl
mov
and
jno
and
out
movsb
ss
and
pop
cltd
cmp
pop
mov
xchg
xchg
aad
adc
movsl
xchg
dec
call
pop
push
clc
mov
push
mov
dec
cmp
lret
add
out
inc
xchg
cmp
popa
mov
lahf
lcall
cmp
fwait
push
cwtl
lcall
daa
pop
lock
inc
movl
fildll
cmpsl
xchg
adc
xchg
inc
add
inc
lds
push
and
pop
dec
rorb
sahf
test
or
jb
lret
cmp
jo
fwait
pushf
mov
pop
mov
mov
sub
cmpsb
iret
shll
out
mov
shrb
mov
loope
and
sbb
add
lea
out
adc
fstl
push
add
adc
notl
loop
addr16
pop
iret
push
mov
scas
call
movsl
or
xor
paddd
int3
inc
icebp
or
or
jnp
mov
imul
loopne
pop
cmp
lea
push
ljmp
imul
xor
int
dec
out
push
mov
mov
fisttpl
mov
mov
or
mov
jle
jl
lret
sahf
mov
movsb
inc
or
cmp
sbb
push
xchg
push
push
loop
xlat
ret
out
cli
inc
sub
popf
cltd
test
sub
pop
push
push
jg
jg
call
sbb
iret
sbb
sub
jecxz
fldcw
dec
lods
mov
push
xchg
xchg
jle
xor
add
or
push
clc
imul
sub
imul
cmp
jg
loopne
pop
rorl
popa
jno
sub
je
addb
add
enter
sbb
in
mov
imul
push
fisubrl
cmp
into
sbb
lods
or
xor
scas
jb
sbb
mov
cwtl
ret
lcall
aad
and
inc
daa
cs
sub
insl
les
jo
mov
cmpsl
lea
mov
test
adc
pop
mov
sub
sub
or
add
xchg
cmpsb
arpl
scas
negb
jb
inc
mov
ret
add
pop
cmp
fcmovne
sarb
fwait
icebp
or
xchg
arpl
pop
dec
std
sub
xchg
iret
pushf
push
ds
addr16
mov
mov
adc
mov
lods
dec
popf
aad
jmp
dec
push
sub
add
loopne
scas
cmp
xor
cmp
push
jl
xor
jmp
loopne
mov
pop
shrb
cmc
dec
mov
inc
mov
add
das
js
xchg
js
inc
into
mov
or
cli
mov
pop
jp
pop
addb
dec
imul
pop
loop
push
pop
add
mov
push
and
mov
ret
out
xor
jb
adc
test
loopne
jge
flds
mov
bound
jne
xchg
loop
mov
pusha
sbb
xor
je
jg
fwait
mov
inc
lcall
test
imul
orl
subb
push
mov
mov
pop
rorb
fimull
cmpsb
test
sub
in
cwtl
add
ffree
add
fcoml
test
xor
fidivl
push
icebp
scas
imul
clc
rcrb
lods
les
test
bound
dec
subb
lock
into
rcll
cli
loopne
sti
push
aaa
outsl
idivl
pusha
sub
shrl
pop
mov
test
cmpsl
mov
xchg
in
xchg
sahf
pop
mov
clc
and
cs
gs
fstpt
xor
jns
xor
xor
xchg
inc
xor
sbb
data16
push
rsqrtps
push
dec
loop
inc
xor
jecxz
cmp
and
pop
out
pop
es
xchg
pop
gs
mov
les
push
dec
ret
or
pop
adc
insl
pop
pop
scas
imul
in
jg
mov
pop
dec
jae
int
mov
push
jb
js
mov
lret
jb
push
fidivs
orb
push
repz
xchg
test
mov
mov
mov
arpl
sub
cs
lret
sub
jno
cmp
fwait
cmp
loop
ds
push
dec
in
addl
lret
cvttps2pi
sub
int3
pop
mov
adc
add
ss
leave
mov
popf
mov
push
cmpsl
das
ljmp
adc
or
push
ss
push
mov
push
test
pop
fisttpl
jo
clc
scas
and
push
sbb
imul
cs
inc
pop
gs
pop
xor
dec
mov
movzbl
call
push
fptan
jmp
xor
add
in
stos
fldt
xor
loopne
push
jns
aam
and
xchg
das
pop
sarl
xchg
fadd
cmpsb
aam
jge
xor
movsl
nop
mov
leave
shrl
sti
js
jmp
cmp
ss
loope
negb
pop
mov
cmp
add
mov
imul
push
loopne
insl
cmp
mov
push
pop
add
iret
sti
xchg
xor
out
cmp
jl
inc
cmp
sbb
cmp
das
imul
jnp
cmp
addr16
push
jne
fs
jb
aaa
repz
scas
movsb
inc
andb
cmp
pop
mov
out
in
inc
daa
inc
push
jno
inc
std
fs
lock
imul
mov
inc
mov
pop
push
mov
jno
and
and
mov
jns
ret
fucomp
cmp
mull
test
push
jae
into
test
cltd
sbb
aaa
push
xor
fwait
xchg
push
ja
das
stos
ds
test
push
pop
mov
stos
add
cmp
out
lret
rcr
push
sbb
in
inc
cmc
jae
std
gs
jl
pop
xor
inc
testb
mov
mov
jns
jae
pusha
or
in
or
inc
dec
pop
or
enter
push
adc
pusha
or
cld
xchg
jg
insl
stos
and
jge
sub
and
les
mov
jno
jns
sbb
sarl
pop
aas
ret
pause
jne
fiaddl
sub
insl
movsl
mov
cmpsb
sbb
push
int
mov
stc
pop
leave
mov
and
push
cmp
push
xchg
mov
xchg
and
movb
rcll
mov
scas
insl
jle
loop
insb
rol
cli
in
sbb
cltd
fbstp
test
xor
mov
pop
test
popw
mov
mov
jge
fnstenv
mov
lea
push
push
inc
insl
xchg
imul
mov
stos
adc
daa
or
outsl
aas
lea
jle
xchg
jmp
mov
rcl
inc
shrl
aad
dec
pop
cli
das
pop
mov
add
in
or
repz
or
lahf
scas
shrl
jmp
std
sbb
mov
scas
xlat
cmc
mov
popf
std
and
loopne
adc
pop
and
push
inc
mov
insb
pop
push
xchg
mov
enter
adc
repz
mov
idivl
xlat
and
std
fdivrs
cmp
xor
jecxz
sub
mov
cmpsl
inc
outsl
cmp
sbbb
adc
sbb
dec
shrl
cmpb
or
in
outsl
or
sub
push
movsb
in
sub
xchg
mov
sbb
add
shrl
mov
mov
fs
jp
or
or
fcmove
xor
fnsave
adcb
femms
ljmp
dec
loope
addr16
mov
repz
cmovo
adc
jp
dec
adc
in
jne
aaa
sbb
push
cmpsl
jge
push
xchg
sti
lahf
fldenv
cmp
or
adc
loope
xor
lock
cs
stc
mov
popa
cmp
adc
inc
add
jp
xchg
dec
push
flds
leave
inc
xchg
or
jbe
ja
scas
inc
cs
xor
push
mov
jle
mov
sarb
popa
call
shll
xorl
test
inc
ficoms
test
dec
and
dec
mov
push
mov
pop
out
inc
mov
cmp
xor
pop
or
and
flds
fsts
loopne
push
xchg
js
movsl
jbe
mov
data16
ret
add
add
ss
mov
and
loope
mov
xor
pop
sub
mov
lock
jnp
fnstsw
nop
mov
flds
or
xchg
xchg
jbe
pop
xchg
repnz
std
or
popa
dec
arpl
jge
sbb
fisttpl
sub
fstl
dec
jns
dec
add
push
int
cmpsl
cmp
mov
fwait
subl
xor
outsb
lds
in
dec
mov
dec
ret
cmp
sbb
es
dec
push
outsb
sbb
das
sbb
pusha
sbb
int3
lods
xor
xchg
sub
sub
sub
pop
mov
inc
push
leave
mov
subb
sbbb
test
add
push
inc
outsb
rolb
pushf
incl
jmp
out
pop
fisubl
and
pop
mov
pop
jp
iret
pop
movsl
adcl
mov
pop
add
pop
stos
sbb
call
cltd
pushf
cltd
push
cmp
iret
mov
bound
cmc
jecxz
jmp
jge
pop
mov
out
mov
adc
dec
in
push
outsb
inc
push
mov
cmpsl
mulb
shrl
aaa
xchg
mov
repnz
sub
pop
js
std
jg
shll
ljmp
jns
repnz
std
fbstp
push
ss
pusha
cs
movsl
scas
push
inc
fimuls
sbb
not
shll
loope
xor
jo
hlt
xchg
xor
lcall
push
int3
ss
mov
xor
dec
cmp
mov
push
roll
inc
add
mov
or
jnp
add
hlt
push
inc
adc
cmp
testb
push
rorl
xchg
jo
xor
nop
mov
shlb
jnp
add
adc
popf
mov
fisttps
int
rcr
cmp
int
ljmp
lret
fadds
out
loopne
mov
and
push
iret
fildll
lock
xchg
pop
lcall
mov
adc
aad
mov
test
fwait
mov
sbb
inc
mov
push
push
in
adc
cmp
jp
xchg
xor
iret
insl
jecxz
cld
or
xchg
adc
pushf
orl
adc
jecxz
stos
rcr
xchg
frstor
mov
dec
mov
out
fisubrl
loope
sbb
push
dec
push
nop
cmp
and
inc
sbbl
fucomi
inc
lret
mov
icebp
arpl
and
subl
daa
fs
adc
lods
mov
pop
ret
sbb
rcr
dec
repnz
imul
aam
dec
mov
inc
int3
iret
pop
push
scas
pop
or
cmc
incl
jb
icebp
fcmovb
dec
xchg
dec
lcall
push
outsb
bound
repnz
xchg
mov
lods
orb
mov
xchg
shll
stc
loope
insb
xchg
xchg
mov
dec
cmp
in
in
inc
ja
sub
addb
or
int
jle
push
arpl
push
test
xor
xorb
push
shrl
dec
jmp
push
rcll
inc
mov
cmp
loope
pop
lret
cld
stc
jo
xorl
inc
or
jg
sub
lcall
jb
mov
and
imul
lret
and
lcall
jge
jno
repz
in
dec
add
mov
aad
les
xlat
sbb
sbb
in
sti
sti
das
sbb
mulb
xor
call
dec
pop
or
clc
adc
add
out
fisttpll
out
fmull
mov
inc
jecxz
int
arpl
movsl
subb
sub
jl
out
mov
push
std
cmpsb
jg
xchg
xchg
sub
push
mov
adc
in
fcmovnb
xchg
jns
cmpsl
inc
dec
cmp
test
cs
jns
mov
cmp
cmp
mov
xor
dec
mov
outsb
cmp
daa
sub
adcb
xor
cs
or
repnz
adc
repz
cmpb
mov
setns
dec
push
mov
add
mov
lea
mov
pop
jmp
cs
stos
notl
push
pop
mov
addl
mov
sbb
iret
jle
outsb
mov
sbb
push
mov
andb
and
rcrl
lds
jbe
cmp
cmpsb
cmpsl
cmpsl
pop
imul
ja
pop
popf
mov
push
mov
jp
sub
sbb
sbb
push
ljmp
or
mov
popf
aaa
in
shll
jnp
pop
push
pop
outsl
mov
sbb
sahf
out
pop
dec
ds
filds
lret
enter
loop
sbb
mov
fdivrs
pop
pop
xchg
lods
mov
cltd
dec
adc
iret
loopne
inc
loope
jge
push
push
ret
jnp
adc
loopne
dec
xchg
fldcw
sbb
mov
mov
or
sub
cmp
fcompl
scas
movsb
test
inc
loopne
cmp
adcb
cmp
fstpt
out
int3
in
xor
roll
add
push
mov
into
inc
mov
call
mov
sbb
scas
insb
popa
repz
push
adc
shlb
dec
or
lods
xor
in
xor
pop
cmp
or
insl
daa
inc
outsb
mov
push
mov
arpl
and
movsb
in
into
push
jp
aad
ret
addl
pop
into
add
insb
daa
and
lret
xchg
mov
sub
mov
push
dec
xchg
adc
stos
in
stos
rorl
inc
push
loope
lock
adc
mov
ja
push
xlat
loope
lods
xchg
leave
pop
popf
cwtl
lods
pop
mov
icebp
sbb
ss
scas
push
or
pop
rorb
xor
jge
mov
xchg
adc
xor
add
js
xchg
sahf
scas
ljmp
std
push
push
push
jno
pop
hlt
int3
fidivrs
cwtl
fnstenv
inc
dec
cmp
fmull
and
aaa
pop
dec
push
jnp
enter
mov
scas
xchg
adc
inc
inc
mov
add
lds
mov
ds
pop
adc
pop
mov
or
push
push
popa
push
cmp
sti
pop
lods
mov
or
sub
jge
out
mov
ds
cmc
je
fwait
adc
mov
ret
jno
int3
jle
inc
in
cmpsb
add
ja
dec
push
sbb
ret
aam
jbe
cmpl
out
leave
sarl
popf
mov
cmp
rcl
aad
test
push
mov
push
nop
mov
mov
in
idiv
daa
ret
inc
bound
cs
aas
shrl
mov
shlb
fmull
inc
test
imul
sbb
xchg
in
cmc
in
sbb
xchg
fsubl
or
int3
addr16
xchg
mov
scas
sbb
adc
jb
sar
clc
jnp
fbld
in
cmp
or
cmp
cmpsl
add
cmp
std
dec
ret
mov
idivb
or
out
data16
aas
shlb
mov
pushf
add
jecxz
int
mov
cmp
push
mov
call
outsl
test
mov
fwait
mov
xor
add
notb
push
stos
adc
pop
or
lods
daa
addr16
jne
sub
or
sbb
jno
ss
mov
mov
and
shr
ret
imul
add
inc
ja
push
dec
ljmp
add
lret
add
xchg
in
sub
mov
mov
pop
cli
cli
insb
push
iret
lahf
jns
sbbb
xchg
testb
sbb
in
test
xchg
mov
pcmpeqb
and
test
cs
jmp
lret
xchg
test
xor
cld
push
push
sub
inc
out
cmp
ljmp
aad
mov
cmpsl
bound
aas
outsl
mov
aas
jae
mov
push
mov
es
out
inc
push
push
mov
mov
in
pop
dec
ficomps
add
cmp
out
sub
scas
jns
pop
mov
jge
mov
and
mov
dec
repz
jne
int
xchg
inc
cmp
sbb
test
sbb
mov
cmc
das
inc
ss
in
mov
loop
sub
stos
out
fdivs
fsubp
fistpl
and
lret
das
rcll
shr
mov
cmpsl
inc
ljmp
out
xor
fwait
inc
adc
cmp
xchg
dec
add
pop
lock
bound
mov
adc
or
sub
sub
sbb
daa
ljmp
lock
repnz
loopne
outsb
inc
dec
or
out
je
outsb
sbb
movsl
bound
insb
cli
or
or
iret
mov
mov
andb
inc
loope
add
inc
push
pop
pop
fbld
scas
addr16
hlt
mov
psubd
inc
cmpsl
lahf
nop
mov
mov
mov
xchg
mov
sbb
mov
sarl
inc
test
call
push
dec
or
sbb
mov
popa
rclb
out
dec
sbb
or
aad
jbe
addb
add
push
mov
sbb
cld
mov
pusha
pop
mov
cmpsl
and
rcrb
js
pop
mov
xchg
xchg
stos
in
pop
ds
popa
testl
sbb
and
int
lret
cmpsl
mov
xchg
stos
inc
scas
xorl
adc
mov
push
call
push
imull
ss
into
rorl
adcb
push
xchg
sti
lahf
pushf
mov
mov
dec
push
pop
bound
or
int
out
add
lret
popl
fcompl
scas
mov
call
mov
sbb
ss
jnp
enter
out
sbb
sbb
jl
pop
call
jge
shll
inc
push
sub
pop
sub
ja
lret
push
pop
mov
mov
mov
ljmp
ja
in
test
adc
dec
into
lock
rcll
jo
push
mov
shlb
jg
movsl
cmp
mov
pop
push
pop
movsl
ret
xlat
xchg
push
ds
sbb
popa
xchg
cmpsl
fs
fs
dec
add
mov
imulb
fnstsw
or
adc
sbb
and
and
in
aas
or
movsl
in
xor
inc
inc
jno
sar
sub
cli
jle
nop
sub
loop
pusha
inc
clc
ret
mov
xchg
out
icebp
jle
shlb
sahf
es
loope
roll
inc
pusha
aad
pop
loope
mov
jns
sbb
xchg
repz
out
push
sub
pop
or
ja
sbb
mov
daa
mov
adc
aaa
push
and
test
stos
insl
or
sti
dec
and
lea
popa
ret
dec
mov
repnz
sbb
cltd
js
pop
jle
inc
adc
std
jl
rorb
mov
pusha
add
pop
xor
pop
das
push
mov
bound
adc
shrl
inc
dec
sbb
jnp
rolb
fwait
jl
dec
pop
lret
packuswb
fiaddl
stos
pusha
adc
fst
lds
shrb
inc
mov
and
movsb
sahf
mov
shlb
mov
sbb
hlt
jle
pushf
popf
and
adc
and
xchg
sbb
push
jns
lods
jns
mov
mov
popf
mov
cmp
mov
push
daa
pop
mov
imul
out
or
and
pop
push
mov
je
adc
xor
jnp
add
pop
iret
mov
or
fisubrs
xchg
mov
cs
pop
push
jbe
xor
xchg
mov
lods
sbb
notb
test
fadd
mov
cmp
mov
pop
movsb
inc
test
sarb
cwtl
dec
movsl
nop
iret
add
pop
jnp
sbbl
jmp
enter
jecxz
pop
pop
mov
imul
out
inc
in
mov
push
in
mov
mov
fldt
test
mov
sub
cmc
mov
sub
xor
pop
sbb
iret
call
or
sbb
jle
jnp
nop
xchg
es
push
fists
ret
mov
xor
or
push
xor
decb
sbb
mov
lahf
push
shl
daa
fcoms
js
dec
mov
push
push
and
xor
leave
rcll
rcr
out
test
nop
negl
add
sub
int
adc
in
ja
cmpsb
xchg
icebp
rol
lahf
out
mov
sbb
adc
pop
ss
fwait
mov
and
adc
scas
cld
xchg
dec
or
push
or
jmp
add
mov
cmp
jae
push
aas
ss
loop
rol
insl
stos
mov
pop
dec
xor
and
cmpsl
repz
or
cmp
lahf
hlt
loop
push
loope
or
pop
sub
lds
mov
add
or
pop
lcall
jmp
xor
xchg
addb
mov
inc
or
inc
jmp
mull
xchg
je
push
dec
add
subl
stos
push
fwait
iret
lods
lods
dec
aam
adc
and
stos
mov
scas
cltd
mov
orb
movsb
xor
outsb
xchg
sub
cmp
stos
add
mov
push
xor
stos
daa
jns
bound
cltd
lock
lds
cmc
popf
imul
push
insb
shrb
jns
jl
jp
xor
fwait
dec
fcompl
sbb
adc
test
push
push
stos
xchg
push
xchg
lahf
test
aam
pop
xchg
and
push
icebp
fdivs
or
imul
movb
ret
adc
lea
mov
xor
hlt
mov
jmp
fs
repz
adc
mov
int3
rcll
lcall
cmp
cmp
mov
lret
scas
dec
scas
xchg
ljmp
fld
inc
cld
inc
mov
mov
outsb
ret
popa
rcll
test
add
bound
cli
ljmp
in
mov
insl
or
imul
mov
fdivp
xor
xor
push
push
add
fprem
out
int3
test
mov
xor
pop
jo
mov
pop
add
inc
sub
cmpsb
sbb
loopne
jae
cmpsb
hlt
or
out
in
add
les
pop
pop
pop
sahf
mov
lcall
jo
fcmove
or
cli
sub
dec
jecxz
add
lcall
mov
adc
cmovno
inc
fcompl
rclb
mov
inc
addr16
ret
lcall
scas
repnz
inc
pop
cmc
mov
ret
xchg
rcll
cmp
xchg
pop
add
inc
add
inc
mov
daa
sti
xchg
dec
push
loop
xchg
insl
ficoms
inc
lret
sbb
or
fcompl
hlt
sub
sub
sbb
fcoms
ret
pop
into
adc
xor
sub
xchg
pop
push
adc
testb
cmp
lcall
std
adc
xor
adc
ret
push
incb
xor
repz
aaa
fwait
adc
push
arpl
mov
int3
adc
daa
nop
jecxz
ds
mov
xor
mov
stc
cmpsb
pop
push
or
mov
jbe
bound
pop
or
mov
push
pop
inc
or
mov
add
stc
mov
cmp
mov
fcmovb
mov
aas
jp
jno
adc
inc
xlat
or
test
scas
out
inc
pop
fldt
mov
cli
ljmp
std
push
jns
jo
jl
pop
mov
das
fwait
loop
outsl
scas
lahf
sti
mov
push
adc
sbb
sbb
test
adc
popf
dec
stc
mov
push
mov
cli
sbb
out
aad
in
andb
cmp
jne
aam
jmp
int
gs
adc
shrb
and
push
jge
jmp
frndint
cmpsb
lea
scas
in
imul
bound
jecxz
xor
mov
sti
cmp
jp
jno
and
cwtl
les
mov
movsl
inc
xor
test
nop
fwait
add
adc
icebp
sub
inc
lret
test
in
xchg
push
sbb
cmc
push
jbe
cmp
repz
or
inc
push
aad
inc
dec
push
cmpsb
inc
mov
add
push
and
or
jmp
dec
or
cli
xchg
out
std
xchg
jae
adc
add
and
adc
ds
aaa
xor
insl
inc
push
xchg
cmpsl
insb
or
mov
add
mov
inc
inc
pop
dec
ljmp
jmp
int
fiaddl
nopl
adc
sbb
add
or
or
cmp
divl
test
xor
das
lods
jae
add
push
sbb
rclb
pop
and
daa
pusha
mov
xor
int
jmp
add
pop
pusha
pop
or
lds
and
or
xchg
xchg
adc
lret
pop
leave
loope
dec
insb
sbb
js
dec
push
cmpsb
adc
scas
sub
nop
addr16
push
gs
dec
push
gs
xor
cmpl
pop
outsb
adc
push
subb
ficoml
lret
mov
or
sub
push
int3
out
fistpll
xchg
and
cld
add
daa
iret
adc
xor
sti
xchg
insl
in
jnp
xlat
cmp
mov
nop
inc
fcmovne
in
mov
out
or
addl
or
inc
xchg
popa
insb
push
shlb
dec
cmpsl
mov
and
push
jp
mov
and
lret
push
fs
clc
adc
add
dec
dec
out
lretw
jnp
xchg
les
mov
mov
nop
imulb
cmp
sub
cmpsb
push
daa
fdivrl
in
imul
call
scas
mov
push
lds
sti
fstl
inc
xchg
ss
fildl
cltd
imul
adcl
les
test
sbb
loop
dec
mov
cld
push
adc
jp
roll
hlt
dec
pop
add
jl
jnp
pop
sti
inc
mov
sbb
stc
adc
leavew
sarl
sub
xchg
daa
lret
jne
std
roll
adc
mov
lcall
call
out
scas
lea
stos
jno
push
or
fdivs
pop
dec
or
aas
cmc
dec
xchg
and
lock
cmp
js
lods
mov
adc
pop
outsl
jbe
aaa
xchg
orb
xchg
sbb
dec
xor
mov
mov
dec
xchg
inc
push
aaa
popf
call
mov
adc
jne
cltd
or
outsb
mov
mov
xchg
jecxz
pop
stos
push
stc
iret
neg
mov
mov
call
sarl
iret
fisubrl
ja
rclb
add
clc
jns
pop
fidivl
fdivs
sbb
js
or
stos
mov
jbe
ret
xchg
fadd
sub
push
inc
pop
iret
jl
pop
xlat
pop
dec
and
enter
fcomip
sbb
push
les
loopne
mov
fsubrl
and
xchg
pop
and
mov
cmp
cltd
and
into
add
mov
rorb
and
push
jge
dec
testl
sbb
out
push
cmp
push
out
pushf
fimull
mov
aam
mov
mov
sub
dec
push
xor
pusha
jae
sbbl
or
into
pop
xchg
fninit
cmp
ss
fildll
sub
adc
or
rcrl
inc
adc
mov
lock
xor
in
adc
gs
sbb
sahf
jg
push
push
jno
mov
clc
fwait
cmp
stc
mov
push
out
and
jnp
fwait
mov
add
out
xchg
sar
cs
arpl
or
cmp
pcmpeqb
pop
imul
mov
inc
xor
jns
or
iret
nop
mov
daa
mov
xor
ret
sbb
and
jl
add
inc
add
enter
inc
ret
loopne
out
ljmp
add
scas
mov
jnp
imul
push
sub
push
adc
popa
fucomp
out
int3
cmpl
fistps
inc
cmp
imul
push
decl
lds
fwait
rorl
mov
lock
scas
xchg
push
sub
daa
mov
stos
mov
ja
pusha
pushf
adc
jecxz
arpl
pop
jns
fdivl
lock
rorb
xor
aad
or
push
imul
rorl
jns
mov
inc
daa
jle,pt
mov
jno
jnp
and
mov
mov
sub
leave
push
mov
and
push
outsl
cwtl
fidivrl
xchg
outsb
push
adc
mov
aam
test
mov
mov
ss
ret
mov
nop
outsb
cmpsb
adc
je
js
or
pop
ds
pop
pop
pop
out
add
adc
cltd
pop
adc
insb
and
fwait
int3
xchg
outsl
dec
rorl
nop
sub
gs
fwait
cmpsb
sub
or
in
dec
in
mov
xchg
aam
pushf
lea
iret
faddl
push
popa
sarb
dec
sahf
aas
mov
je
stc
cwtl
sub
add
cltd
fwait
cmp
shll
cs
add
pop
push
ljmp
jbe
mov
sub
cli
mov
sub
sbb
shr
cwtl
sbb
mov
dec
xlat
sub
xchg
enter
pop
jp
jnp
mov
add
ds
je
lock
pop
dec
inc
mov
je
in
push
nop
mov
aam
cmp
pop
cmp
stc
xor
pop
std
fidivrs
mov
mov
sbb
or
jne
cwtl
addr16
pop
sti
in
fucomip
pop
push
ficompl
mov
push
adc
xchg
inc
jle
cltd
add
push
out
filds
inc
popa
enter
ss
push
mov
fs
xor
pop
sti
rol
pusha
ljmp
das
mov
push
jg
les
ret
cmpsb
insb
push
add
js
mov
scas
inc
pushf
adc
scas
fisttpl
pop
stos
fdivrl
jmp
mov
lret
rol
and
jmp
jle
fs
jns
push
popa
pop
sbb
sub
pop
das
outsb
jbe
out
adc
filds
pushf
xchg
shll
leave
cmp
enter
sbbl
add
and
inc
xchg
pcmpgtb
stc
scas
jo
and
jp
pop
inc
add
and
cmpsl
xchg
push
inc
xchg
adc
adc
fs
scas
fmuls
adc
adc
int
or
mov
out
add
mov
imul
pop
in
pop
cmpsb
imul
outsl
xor
jge
mov
or
loopne
sbb
adc
mov
xlat
mov
jp
sub
pushf
mov
iret
jae
mov
imul
adcl
jne
mov
or
ret
dec
mov
movsl
out
int
hlt
xchg
cmp
int3
mov
cs
shl
dec
push
lret
loope
out
das
pop
cmp
mov
cmovs
es
mov
leave
xchg
in
dec
add
sbb
xacquire
movsb
jecxz
and
fwait
popa
add
lods
or
sbb
dec
xlat
leave
notl
scas
lods
lods
mov
push
dec
mov
std
jl
cwtl
jne
outsb
jbe
clc
adc
inc
cld
push
sbb
and
rorb
rolb
sbb
jbe
gs
pop
stos
dec
fmull
test
ds
sbb
push
sbb
int
sub
add
stc
mov
clc
or
dec
jns
or
dec
add
jns
adc
add
nop
push
cltd
out
stos
and
cmp
popf
loop
push
das
jl
xorb
and
or
xchg
sbb
ljmp
adc
imul
hlt
sbb
lret
lods
mov
mov
xchg
dec
or
sub
adc
jle
pop
jg,pn
ficomps
mov
fwait
pusha
out
test
or
jle
enter
outsl
das
add
fadds
jae
fistl
faddl
push
int
sbb
push
imul
ljmp
aaa
mov
fiaddl
cmc
jbe
and
adc
roll
jl
jb
sahf
sbb
pushf
add
arpl
pop
mov
mov
push
pop
es
mov
xor
jmp
int3
inc
adc
add
push
scas
ficompl
adc
push
xor
adc
sbb
je
cmp
test
lret
lret
or
push
mov
stos
inc
lea
cmp
ljmp
adc
or
xlat
lods
lahf
mov
inc
xchg
ljmp
cs
inc
adc
mov
inc
xor
dec
and
fimuls
bound
xor
cmp
test
add
movsb
push
jb
mov
sahf
adc
cmc
cli
in
test
andb
inc
aas
lods
push
push
popf
push
jns
testb
xchg
mov
mov
adc
add
mov
dec
jnp
mov
xchg
cmpsb
sbb
add
jb
lret
lahf
adc
rcr
cld
dec
aaa
mov
jg
repz
push
push
mov
roll
mov
xorb
xor
out
js
pinsrw
stos
pop
add
cltd
jno
xchg
add
cmp
popa
scas
or
push
add
jmp
mov
jno
test
xchg
add
mov
pusha
cmpsl
faddl
fildll
inc
mov
dec
in
into
pop
stc
shl
mov
xor
push
hlt
push
insb
adc
and
xchg
jmp
mov
pop
pop
test
mov
sbb
fistpll
mov
mov
cmp
fisubs
cmp
xchg
push
das
or
stc
cs
fdivrs
jne
push
push
mov
sti
pop
sub
push
mov
xor
xchg
int
xor
inc
cltd
mov
jge
loop
or
mov
xchg
divb
and
insl
cld
inc
imull
pop
sti
dec
shlb
test
jns
testb
pop
pop
scas
xchg
adc
push
ja
xorl
jno
inc
sub
push
aam
icebp
xchg
push
push
test
sbb
inc
idivb
lods
xlat
test
loop
aad
lods
icebp
mov
insb
xchg
sub
or
cmc
add
scas
xor
sahf
popf
das
mov
pop
sub
jge
mov
cltd
imulb
dec
push
dec
mov
add
cmp
ss
add
int
fisttpl
sti
push
sub
pop
movsl
das
rcrl
cmpsb
loopne
in
push
inc
inc
xchg
pop
test
sub
xor
and
mov
mov
bound
inc
dec
cmp
js
sbb
sahf
fnstenv
mov
cmp
push
ret
stc
mov
fcoml
add
inc
sbbl
test
cmp
mov
push
out
push
dec
cli
or
out
cltd
sbbb
or
aaa
hlt
mov
shll
jbe
scas
insl
lock
inc
repnz
test
and
out
mov
fisttps
data16
jae
sbb
das
cmp
mov
jl
imul
call
stos
repnz
cli
out
xlat
imul
addb
outsb
mov
gs
in
movb
xchg
and
je
hlt
cld
lahf
in
push
mov
inc
and
les
sbb
mov
add
popa
outsl
mov
cmpl
out
mov
std
pop
aas
test
jbe
sbb
popf
mov
jno
mov
lea
pop
sbb
clc
pop
aad
aas
loop
mov
std
in
push
outsb
xor
jge
push
inc
push
sub
in
mov
push
and
fmull
adc
addr16
pop
in
jno
or
push
decl
sbb
mov
sar
jp
xchg
outsb
shlb
cmpb
adc
test
jns
pop
imulb
fsubrl
jb
lret
sbb
pop
mov
clc
lret
sub
scas
xor
mov
push
out
out
mov
or
push
repnz
rol
out
mov
push
cmpsl
add
decb
cld
std
sub
mov
rep
invd
inc
jg
aaa
dec
inc
into
scas
mov
mov
mov
add
or
push
int
loop
and
test
adc
jbe
or
xor
jnp
adc
jo
inc
aaa
mov
fmull
jno
mov
mov
add
pop
lea
mov
and
ja
shrl
in
subb
gs
loopne
mov
sahf
repz
mov
jp
mov
loopne
push
sub
jb
jne
test
call
xorb
mov
mov
data16
add
push
add
mov
xor
ret
xlat
inc
out
out
pusha
xchg
mov
mov
adc
lock
test
jp
add
aam
cltd
sbb
movsl
adc
mov
clc
xchg
insl
movsl
loopne
or
jno
or
dec
xlat
pop
lret
nop
repz
dec
xor
sub
add
sarl
jmp
in
inc
orl
and
dec
out
mov
fnstenv
sub
mov
adc
clc
outsb
dec
int
mov
nop
popf
sbb
enter
adc
out
xchg
in
sbb
insl
call
adcb
dec
data16
stc
sbb
cmp
add
out
adc
sbb
xchg
dec
xor
fwait
out
add
out
inc
push
inc
xor
rcrb
movsb
and
or
jae
rolb
pop
or
std
push
xchg
or
cmpsl
xchg
cmc
and
fisttpl
jne,pt
adc
fcmovu
xor
or
add
sub
dec
arpl
xlat
lods
inc
or
in
pop
sti
inc
mov
pop
lods
lcall
jb
cmp
inc
dec
push
push
or
mov
fs
call
imul
rcrb
insb
jne
popf
std
adcl
cwtl
outsb
push
lahf
push
insb
popf
test
xchg
cmp
cltd
inc
jne
es
jmp
mov
int3
stc
xor
cmovo
iret
mov
cmpb
xlat
fldcw
sub
shll
lods
pop
lods
cmp
in
push
cmp
mov
test
addr16
inc
cmp
xor
test
scas
mov
xchg
push
cld
loope
out
pop
adc
cld
push
jl
les
lds
mov
addl
and
sbbw
dec
loopne
add
jmp
jne
outsb
iret
dec
mov
pop
divb
sub
ret
inc
repz
fcomi
xchg
pop
cmpsb
add
out
shrl
cmpsb
lock
data16
jecxz
test
test
insl
aad
add
dec
adc
or
or
mov
imul
pop
inc
add
ljmp
pop
cld
jge
adc
jmp
ljmp
jb
sbb
push
push
push
jne
jge
js
imul
push
adc
and
add
mov
cmp
xchg
jno
out
cli
and
dec
xlat
xor
xchg
push
or
push
iret
xchg
ja
and
jle
inc
dec
les
insl
pop
push
mov
leave
aas
gs
inc
push
fnstsw
jecxz
cltd
icebp
sbb
fistpll
inc
pop
mov
rorb
ss
popf
cmp
inc
add
add
dec
xchg
sub
push
loope
sbbb
movl
dec
push
arpl
pop
loop
or
push
sbb
or
shrl
cmp
lea
pop
aad
aas
xor
sub
aas
test
jno
mov
clc
out
sub
xchg
xchg
mov
mov
cmpsb
sahf
loope
pop
and
inc
rcrl
lea
test
mov
daa
push
lds
rorl
out
movsl
xor
sub
or
arpl
xchg
or
cmp
and
push
outsl
cmp
lahf
adc
lcall
dec
inc
repz
imul
sub
pop
xor
dec
or
pop
cld
frstor
pop
or
lods
adc
int3
fnstsw
icebp
dec
cltd
add
pop
insl
xchg
aam
stos
rcll
dec
into
mov
adc
and
add
jne
jmp
imul
hlt
rorl
nop
pop
xor
pop
lds
fstl
xchg
iret
mov
outsb
loopne
daa
call
xchg
test
repz
out
movsl
les
fsub
fwait
ret
inc
add
mov
mov
sbb
mov
jnp
or
and
and
lret
in
movsl
xchg
xchg
call
inc
push
mov
cmpsb
ds
jae
sarl
outsb
jl
sbb
sub
push
jb
push
push
gs
and
pop
lock
shr
icebp
or
icebp
and
push
push
repnz
cmp
push
subl
pop
and
mov
dec
sbb
or
jge
adc
call
shl
mov
jmp
adc
cmp
fnstenv
negl
fildl
adc
scas
push
push
je
inc
pop
push
in
jno
xor
mov
mov
xchg
daa
jno
adcb
out
add
pop
test
fldl
test
inc
iret
mov
call
add
in
add
dec
int3
test
cld
imul
lea
add
or
dec
cmpsl
mov
add
mov
adc
jnp
out
arpl
pop
stos
adc
enter
je
push
pop
shrb
mov
cmp
lret
inc
add
rcrl
mov
or
int
dec
pushf
sbb
nop
aaa
test
xor
adc
or
negl
inc
push
xchg
mov
adc
nop
bound
add
lock
rcrl
scas
dec
add
sub
push
icebp
xchg
popf
cmp
lret
test
jbe
push
push
pop
inc
xchg
add
sti
lahf
jl
pop
mov
mov
dec
loopne
fidivrl
xchg
xchg
bound
rcll
inc
or
mov
dec
adc
adc
ja
pop
sbb
adc
cltd
push
cmpsb
movsb
test
pop
jp
push
mov
repnz
pop
xor
addr16
mov
push
hlt
stc
inc
inc
mov
adc
lret
add
push
sahf
or
sub
data16
loope
mov
jne
std
xor
andl
ret
daa
mov
jmp
or
addb
mov
out
and
dec
adc
push
cmpsb
leave
cmp
sub
rorb
xchg
mov
xchg
stos
xor
stos
dec
jmp
jnp
mov
add
mov
movsl
sbb
addr16
popa
dec
push
push
outsb
cld
enter
hlt
mov
pop
push
xor
dec
shlb
and
inc
push
nop
push
fxch
gs
xor
aad
adcl
dec
xor
mov
into
cmpsl
sub
sti
mov
lahf
add
pop
stos
mov
cmp
and
mov
inc
mov
xchg
jo
sarl
sarb
cld
adc
and
stc
inc
mov
sbb
arpl
mov
mov
cwtl
out
pop
lea
insl
insl
ja
and
cmpsl
cs
sbb
adc
jae
sbbl
aaa
data16
mov
call
out
jp
test
iret
xchg
mov
js
jns
xchg
jmp
mov
push
rcrb
cmp
dec
mov
sbb
cmc
repnz
xor
flds
push
cmp
pop
stc
aaa
push
sub
lea
aaa
mov
jns
inc
movsl
jbe
fidivs
std
xchg
sub
jp
std
fcmovu
inc
push
cmp
mov
aad
xchg
add
dec
push
addr16
pop
std
std
ja
mov
jecxz
and
enter
hlt
cmp
mov
orb
pusha
jmp
adc
cmp
inc
data16
fadd
jmp
in
inc
jns
sub
test
stc
xchg
or
mov
rorb
jo
mov
ja
in
mov
xor
fstpl
xor
pusha
loopne
dec
and
push
in
jle
inc
aas
adc
test
cmp
sbb
inc
jo
sub
fmull
fstpt
jmp
fwait
xor
cmpsb
dec
push
mov
xchg
inc
icebp
ljmp
jb
dec
shl
lods
sti
xchg
mov
or
xor
mov
mov
rorl
into
or
dec
imul
std
mov
cs
inc
sti
dec
dec
jns
inc
sub
test
jne
out
jg
mov
js
jae
push
pop
xlat
movsl
cmp
cmc
out
je
out
sbb
in
repz
lahf
cld
notb
xor
pop
ret
xchg
and
dec
daa
inc
mov
daa
jecxz
mov
or
add
clc
dec
and
stos
lea
mov
scas
pop
sbb
and
nop
ficoms
into
scas
jle
add
mov
lds
xor
pop
outsb
cltd
pushf
jb
rcll
pop
cmp
in
fbld
push
push
jnp
xchg
inc
sbb
mov
mov
xchg
mov
add
aad
sub
lock
sub
jnp
sarb
cmpb
jnp
jbe
xor
xor
mov
clc
aam
fnsave
les
fldl
pop
das
scas
inc
dec
add
adc
jns
sbb
sbb
jmp
pop
ret
in
test
sub
in
cmp
sbb
ljmp
jbe
xchg
mov
sub
stos
cld
pop
insb
dec
pop
push
ja
xor
ret
mov
mov
cld
inc
mov
rcrl
insb
pop
adc
jp
lcall
mov
jb
idivl
and
jo
fldcw
daa
ret
adc
mov
cmp
in
mov
add
enter
mov
cld
mov
repnz
push
mov
bound
shl
fwait
jmp
mov
ja
pop
daa
pop
insb
jns
inc
shll
imul
nop
shlb
mov
pop
jmp
jne
push
fisubrl
inc
imul
or
movsl
inc
push
mov
jb
push
outsl
jne
push
cmc
mov
int
data16
sbb
loopne
push
fs
push
fsubr
divb
mov
pop
inc
jno
xor
sub
loopne
sub
cmpl
arpl
insl
scas
rcr
pusha
pop
xchg
in
mov
mov
loop
xchg
jle
pushf
or
scas
shl
pop
fcoml
mov
jle
hlt
pop
sbb
fs
jmp
cmp
gs
push
xchg
orl
jg
jle
pop
jnp
aaa
das
fs
push
pusha
push
lods
js
xor
test
xchg
in
in
pop
aad
jp
or
cmc
sbb
and
es
daa
rol
sub
jecxz
push
push
xchg
lret
or
stc
stc
mov
out
xchg
push
ret
addl
sub
shrb
mov
dec
scas
xor
adc
cmc
rcrb
gs
dec
push
push
dec
fwait
ljmp
clc
repnz
mov
cmpsl
dec
inc
ljmp
push
sbb
nop
jns
sub
xchg
and
call
rorl
aad
je
int
mov
mov
sbb
pop
rolb
adc
jns
adc
sti
xor
jmp
add
sub
repz
add
mov
jnp
cli
xor
push
sub
sub
adc
scas
insl
mov
sub
cli
test
popf
and
lods
dec
dec
pushl
xor
loop
and
scas
lock
arpl
fwait
sub
push
addb
inc
jg
shlb
fsubl
mov
ds
js
adc
fsubp
aaa
pusha
lock
popa
pop
sbb
sahf
loope
pop
bound
ljmp
sub
shrl
sbb
push
aad
push
icebp
shl
sub
mov
ret
lods
and
imul
push
pusha
and
xor
xchg
shrb
test
mov
repnz
jmp
lock
pop
add
sahf
jo
mov
sbb
lock
pushf
sub
xchg
loopne
ss
mov
push
pop
stc
jno
pop
pop
cmp
hlt
pusha
sbb
out
and
imul
bound
inc
pop
imul
or
ljmp
xor
jne
add
push
and
xchg
and
pop
mov
imul
or
push
bound
test
nop
add
add
pop
cmp
dec
test
ja
sbb
icebp
sbbb
dec
mov
ds
mov
fs
pop
push
lret
frstor
andl
popa
inc
mov
and
inc
fsincos
leave
sub
scas
fldenv
dec
xchg
dec
aas
in
add
push
std
stc
mov
jmp
pop
aaa
ret
enter
cmp
das
jp
mov
cs
mov
pusha
xor
push
jnp
shll
xchg
and
lahf
test
jge
into
fwait
pop
jge
in
xor
dec
and
in
cmp
mov
xor
scas
xchg
jecxz
pop
push
jno
cmp
cmp
sub
push
add
out
push
popa
lock
lds
outsl
and
lcall
cmpsb
cs
clc
push
fwait
adc
das
xorb
or
aam
je
pop
mov
popf
or
inc
push
popf
outsb
adc
jge
data16
push
xchg
lds
fildll
lea
add
mov
pop
mov
or
pop
dec
insb
jae
rcrl
push
jge
fs
dec
inc
sbb
test
mov
bound
clc
mov
fsubrl
adc
test
xchg
nop
mov
lahf
cmp
lock
out
xchg
stc
push
or
in
dec
rclb
or
add
imul
mov
inc
dec
shll
mov
xchg
js
mov
mov
add
sbb
cwtl
inc
push
mov
cmp
outsl
sub
pop
cmp
jno
mov
mov
mov
fisttpl
lret
fiadds
call
stos
hlt
pop
push
lret
hlt
inc
fdivs
orb
cmpsb
and
inc
cmp
add
sub
and
pop
loop
mov
es
jmp
xchg
in
jle
mov
xchg
insl
cmpl
aas
dec
repnz
pop
das
sbb
jmp
sbb
xor
fwait
sub
lret
pop
adc
push
or
and
xor
jg
push
lock
dec
repz
push
arpl
inc
das
dec
push
add
orb
call
xchg
xor
inc
push
inc
ficomps
repnz
mov
int3
out
dec
push
fs
ss
jb
mov
js
scas
xchg
into
add
jns
lret
cmp
or
sub
lret
sbb
adc
lods
push
and
jmp
xchg
sahf
and
mov
insb
pop
xor
leave
xchg
xchg
sub
xor
sti
dec
mov
jmp
ja
push
xor
fsts
pop
sbb
pop
inc
stos
mov
add
nop
rcr
lods
stos
movsb
ja
xchg
cmp
adc
mov
sbb
into
jb
jmp
mov
dec
xchg
mov
push
xchg
nop
push
mov
push
rorl
pop
scas
push
mov
sarb
lods
lret
popa
cmpsl
aaa
ljmp
insl
andb
mov
mov
fwait
stos
mov
add
jns
sahf
xchg
mov
lahf
xor
cwtl
dec
jno
xchg
jnp
inc
jno
loope
pop
adc
mov
push
int3
in
or
or
mov
js
push
mov
cmc
xor
pushf
push
mov
popa
xor
and
outsl
push
arpl
in
mov
int3
sbb
sub
scas
adc
xor
mov
inc
add
sub
sub
cmpsb
mov
aad
push
push
cmp
xor
push
push
aad
inc
stos
xchg
and
mull
repnz
aam
cwtl
dec
mulb
mov
xor
jmp
leave
mov
pop
cmp
sbb
push
int3
sub
roll
cmp
outsb
mov
fsincos
adc
repz
add
jae
dec
jno
sahf
cmpsl
pop
dec
dec
into
subl
and
mov
jne
pop
add
xlat
test
sub
inc
sbb
lds
aaa
insl
fisttpll
adc
xor
insb
ret
mov
fs
xchg
sub
xchg
outsl
pop
jl
inc
mov
push
cs
icebp
xor
repz
cmpsl
mov
inc
mov
int
hlt
lock
push
movsl
addl
and
sarb
cmp
icebp
pmaddwd
pop
push
out
sbbl
mov
adc
fldl2e
push
or
rcrl
fstl
inc
or
dec
mov
aad
test
stos
push
mov
fs
jle
cmp
sbb
sbb
les
cmpsl
sbb
add
pop
adc
dec
pinsrw
rcrb
dec
and
sbb
mov
jle
push
lcall
call
pop
fisttps
sub
mov
popf
cwtl
or
mul
fstl
dec
push
cmp
jmp
out
lea
insl
pushl
mov
aad
lock
fsubrs
loop
xchg
and
aad
add
ja
aas
pop
jle
bound
pusha
sub
and
je
pop
bound
out
bound
sub
xor
inc
data16
repnz
lock
xchg
jecxz
inc
sbb
and
mov
xor
pop
sub
jns
mov
jnp
adc
lcall
enter
cmpsl
movsl
dec
sbb
sbb
and
sub
dec
pop
xor
jb
imul
fsts
lcall
add
rol
call
push
push
push
cmp
adc
push
mov
movsb
adc
loop
xchg
adc
pusha
out
xchg
hlt
push
loop
lea
jle
or
xor
nop
test
inc
out
loope
rorl
movsl
jne
jl
dec
ror
jp
mov
scas
mov
sub
fsubr
mov
jmp
sahf
cmp
xor
ljmp
mov
push
das
push
cmp
daa
rclb
dec
dec
out
hlt
add
ror
push
xchg
and
cmp
ss
push
adc
fucomi
scas
xchg
mov
jno
cltd
mov
add
ret
fsubrs
repz
scas
popa
xlat
sub
enter
adc
dec
inc
lea
lods
mov
cmp
test
cmp
dec
loop
dec
xor
xchg
imul
stc
seta
jno
test
dec
and
xlat
mov
iret
sti
lods
insl
xor
inc
xchg
cmpsl
nop
hlt
lret
aaa
divb
mov
pop
fisttps
je
loope
inc
mov
push
es
mov
clc
mov
outsl
fidivl
adc
repz
fwait
add
test
dec
insb
add
fstpt
mov
mov
cmp
mov
jle
pushf
mov
rcrl
and
sub
roll
xchg
out
das
pusha
push
daa
movsb
adc
fstp
nop
inc
inc
call
test
ret
push
fnstsw
push
cmc
scas
mov
pop
test
and
std
popa
in
imul
jnp
cmp
dec
test
add
movsl
pop
jnp
shll
ret
mov
jg
sbbl
inc
adc
imul
sub
jg
insb
fildll
in
test
jecxz
ficompl
cmp
and
pop
xor
push
mov
mov
jle
loop
std
pop
xchg
xor
mov
mov
adc
sahf
dec
call
push
jae
add
into
out
iret
das
pop
adc
inc
mov
iret
dec
aas
in
mov
int
xchg
pusha
mov
out
shrl
cli
in
fwait
jne
mov
in
lods
adc
push
xor
aad
jl
clc
lret
mov
cmc
scas
ret
push
lds
wrmsr
data16
mov
lahf
enter
xchg
jecxz
and
and
mov
roll
pop
sub
stos
cmp
dec
jle
pop
mov
cmpsb
mov
icebp
std
push
stos
mov
push
gs
fidivs
and
push
jns
inc
mov
pop
mov
test
cs
mov
jp
notl
inc
stc
in
fwait
in
dec
fsubl
fcompl
pop
sbb
dec
jle
push
movsb
mov
xor
push
cmp
rcll
cs
je
cmp
out
repnz
push
insb
xchg
sub
mov
aam
scas
ds
lods
xchg
lcall
sbbl
in
mov
sub
loopne
js
xchg
mov
inc
les
pop
pop
jge
adc
stos
dec
pop
jmp
movsl
ret
fdivs
std
xchg
std
inc
jecxz
jb
sbb
out
mov
int
lahf
jb
xchg
and
rolb
clc
jecxz
nop
mov
les
shrl
push
insb
loop
fimuls
outsb
adc
pop
adc
jp
ljmp
xor
jnp
sub
js
mov
push
mov
push
imul
data16
int3
mov
xchg
mov
out
lock
insb
movsb
push
loop
cs
mov
scas
mov
pop
fs
mov
insl
push
push
add
and
ljmp
or
mov
outsl
inc
lret
movl
push
mov
push
clc
test
cmpsl
or
popa
sub
xchg
inc
les
cld
invlpg
or
outsb
sahf
adc
icebp
cmp
lcallw
fwait
jecxz
ss
lea
pop
jecxz
or
mov
sub
add
mov
sub
incl
jg
mov
loope
xchg
nop
xor
pop
xor
adc
into
add
xor
cmpsb
pop
hlt
jo
orl
cmpsl
pop
and
add
int
in
loope
cmpsb
push
push
add
pop
cmp
sbb
xorb
dec
leave
cmp
mov
shrl
repz
in
adc
scas
cmp
mov
push
sahf
push
cltd
cmc
push
fdivl
xchg
sub
int3
iret
in
xor
lods
iret
nop
dec
xor
mov
repz
mov
mov
xchg
adcb
lods
sub
lahf
pop
mov
mov
dec
mov
jle
xchg
scas
jmp
push
adc
lock
and
and
jle
lea
ds
jnp
mov
cld
ret
pushf
cli
inc
cmp
into
std
push
mov
pop
stos
add
jo
xor
scas
push
mov
push
or
enter
dec
mov
pop
and
testb
int
mov
jb
mov
mov
and
mov
scas
adc
mov
loope
cmp
push
repz
lods
pop
shrl
ret
mov
repnz
mov
sbb
jbe
or
data16
dec
popf
mov
repnz
pop
loopne
jmp
push
push
in
adc
pop
stos
iret
mov
in
pop
mov
data16
sub
add
xor
xor
fistps
push
xchg
jne
xchg
fcoms
sub
js
fadd
jns
subb
ja
sbb
push
inc
dec
jecxz
push
lahf
stc
popa
fwait
js
mov
jb
addr16
or
pop
xchg
out
pop
leave
push
sti
inc
sub
sbbb
aas
test
lock
cmpsl
sbb
mov
and
in
nop
dec
mov
pop
or
orb
mov
cld
nop
mov
jmp
mov
xchg
jo,pn
iret
jl
outsb
xor
add
pop
add
push
adcb
jns
add
pop
push
pop
fwait
jecxz
mov
sub
sbb
lods
loop
sbb
out
repnz
cltd
in
xchg
xchg
clc
stos
call
push
pop
xorb
outsb
loopne
test
xor
pusha
cmc
movsb
mov
jne
or
sbb
test
inc
lods
inc
cmp
movsb
adc
inc
add
push
sahf
jo
sarl
outsb
lock
data16
mov
popf
pop
into
test
xor
out
inc
and
mov
pop
push
clc
mov
pop
jecxz
mov
push
in
xchg
inc
pop
arpl
add
arpl
push
lret
jae
push
bound
enter
test
fnstsw
lret
movsb
cltd
daa
imul
or
push
lods
pop
xor
mov
cmc
mov
sub
rcl
pop
pop
adc
sarl
fucomp
stc
movsl
push
les
cmp
lods
push
dec
hlt
loopne
lods
fwait
jno
xchg
mov
mov
lock
push
pop
push
sbbb
arpl
and
xchg
sbb
and
fwait
sbbb
cwtl
add
dec
ds
pop
notb
xchg
push
cmpsb
leave
mov
jmp
hlt
js
repnz
mov
sti
fucomi
out
mov
cmpsb
pop
addr16
addr16
mov
lods
fistpl
sbb
icebp
loope
mov
adc
cs
imul
dec
scas
daa
lds
daa
cltd
sbb
add
aaa
mov
test
mov
sbb
jg
mov
xchg
repnz
xor
mov
adcl
test
bound
and
jno
adc
pop
or
cs
xchg
pushf
cmpb
jns
add
iret
add
push
mov
inc
mov
lds
inc
fsts
bound
adcl
jnp
cmpsb
popf
clc
into
xor
std
aas
mov
lcall
aas
xchg
aam
and
dec
mul
and
xchg
stc
psubq
gs
adc
aas
push
pop
in
or
repz
call
xor
stos
mov
sbbb
gs
icebp
xlat
cmp
adc
js
aas
xchg
xor
xlat
aas
push
call
out
loopne
test
or
int
push
mov
mov
mov
xchg
mov
orb
adc
dec
cmp
sbb
std
cmp
insl
sub
mov
xor
mov
pop
mov
push
ficoms
cmp
inc
push
loopne
sti
ljmp
aad
jl
and
dec
lret
daa
shll
and
adc
aam
jnp
sbb
adc
stos
push
and
clc
cvtpi2ps
pop
inc
add
jb
mov
frstor
lahf
cmpsl
add
out
push
cmp
movsb
test
cmpsb
int
icebp
sbb
jmp
jl
mov
or
pop
cmp
mov
rorb
cli
adc
mov
pop
or
mov
cltd
xchg
aas
inc
sbb
loop
adc
add
sub
out
int
outsb
pop
rolb
push
cmp
jecxz
movsb
dec
in
jno
and
sahf
pushf
sub
fbstp
lods
rorl
xchg
add
xor
or
adc
push
pop
pop
xor
or
fstl
pop
adc
jo
loope
push
cmpl
push
push
dec
sub
iret
jle
push
es
fcomi
lods
push
aas
insl
out
es
push
jmp
shl
cmp
bnd
sub
mov
add
and
loope
iret
fs
gs
fildll
mov
movsb
jmp
imul
lret
mov
in
ljmp
es
adc
sub
lods
jno
test
out
mov
jl
jecxz
lret
ss
pop
es
jecxz
xor
jns
fs
pop
sub
adc
movsb
loop,pn
inc
cmc
divb
add
ss
mov
mov
js
shll
mov
insl
dec
gs
cwtl
cmp
idivl
push
stos
arpl
and
mulb
dec
or
in
or
mov
and
lods
adc
pop
cwtl
sti
mov
cwtl
mov
push
leave
xor
loopne
addl
pop
lahf
test
popa
push
sub
cwtl
pop
xchg
in
jno
sbb
cmpsb
sub
or
dec
pop
jne
jge
iret
inc
in
jbe
jl
add
rcll
or
in
dec
jmp
cmpsl
jbe
loope
add
rclb
mov
sbb
int
popf
fnsave
jns
test
or
fcmovnbe
lock
ljmp
or
fcomp
pop
and
into
subl
mov
mov
call
cs
scas
lock
mov
stos
outsb
inc
xchg
jmp
scas
popa
les
cmpsb
lods
xchg
jb
mov
push
lahf
popa
pop
jle
sbb
and
or
neg
ret
lret
loope
repnz
lods
mov
jle
loope
call
xchg
aas
outsl
rcrb
push
push
mov
enter
pusha
push
push
jns
mov
in
mov
push
jle
jae
subl
xchg
fisttps
dec
in
jle
jmp
test
xchg
insl
popa
sarb
int3
sub
cmp
pop
sbb
lahf
out
int3
inc
ret
add
inc
push
adc
and
adc
jmp
mov
push
cwtl
aas
pop
lahf
test
jno
mov
dec
cwtl
aas
in
cli
lods
pop
cmp
and
mov
je
cmp
add
inc
cmp
dec
sarl
mov
sbb
jle
outsb
mov
xor
nop
pop
inc
fistl
cmp
stc
and
loope
out
xchg
cmp
mov
dec
inc
add
jle
mov
xor
xor
mov
mov
and
cld
or
cmp
fcmovne
insl
movsb
aad
mov
sub
enter
shll
dec
xor
mov
ljmp
adc
inc
dec
push
imul
sbb
popl
and
fistpll
xchg
push
in
add
cmpb
imul
or
es
fwait
or
mov
sbb
jg
cmp
aaa
aaa
or
loop
add
ret
push
xor
mov
sub
popf
std
test
mov
mov
call
and
and
in
jo
sbb
loope
mov
cmp
sbb
xchg
loop
push
data16
andb
adc
dec
mov
sub
xchg
cmp
mov
pop
sbb
and
call
xor
xchg
jno
add
icebp
fiadds
in
add
adc
sar
test
add
pop
jle
orb
in
outsl
ja
mov
add
ss
aas
push
cli
pop
pop
shlb
vfrczpd
xchg
dec
sub
sub
in
inc
cmpsb
and
loopne
mov
outsb
mov
xor
bound
int3
out
out
push
push
cmp
adc
cmp
mov
push
hlt
out
dec
push
dec
and
test
scas
pop
divl
mov
in
in
int3
add
sub
adc
xchg
mov
cmc
push
sarb
pop
jbe
into
lret
xor
lods
and
mov
icebp
movsl
fstpl
cmp
add
cmp
or
out
jp
ret
test
pop
xchg
inc
testb
orb
jae
ljmp
addr16
insl
add
inc
pop
dec
outsb
es
es
pop
push
sub
ret
add
mulb
jmp
pop
fisttpll
imul
fsubrs
sub
fisttpl
movsb
pop
cmp
adcb
or
cmpsl
xchg
cmc
push
cmpsl
jl
jns
xor
mov
mov
leave
inc
mov
push
aad
out
jns
inc
xor
sbb
and
repz
sahf
popf
into
lcall
mov
pop
xchg
out
leave
dec
aad
pop
fildll
xor
daa
cmp
push
insl
movswl
stos
rorb
movsb
jbe,pt
lea
mov
das
mov
inc
push
and
dec
inc
push
testb
sub
mov
lods
cmp
dec
xlat
in
dec
cmp
xchg
js
ret
jg
js
or
jbe
popf
mov
xchg
add
sub
or
xor
fwait
leave
fcmovb
enter
sahf
cmpsb
es
xor
in
jb
xor
xchg
fiaddl
inc
push
add
insl
xchg
ret
test
or
inc
cs
dec
test
popa
int3
mov
pop
xor
xchg
hlt
xor
dec
lock
lret
dec
stos
aaa
arpl
pop
or
inc
jp
inc
sbb
cmpsl
and
stc
mov
cwtl
jmp
scas
mov
fstps
dec
and
mov
push
push
push
mov
shrl
fildl
test
jmp
pop
add
int3
das
sti
lcall
push
mov
jae
or
cmc
out
add
int
js
and
mov
mov
dec
or
cmp
jge
adc
iret
cmp
int
mov
dec
aam
push
jle
xor
dec
cmc
dec
jae
pusha
std
incl
jbe
cmp
scas
inc
xchg
pop
cmpb
mov
scas
fistps
clc
add
and
and
or
lods
cmp
lds
cltd
xchg
xchg
jbe
into
repz
or
push
insl
mov
enter
fs
jnp
pop
cmpsb
jecxz
mov
xor
dec
push
imul
inc
pop
adc
clc
shll
add
push
out
rorl
dec
int
pop
loope
sub
xchg
stos
inc
icebp
inc
andl
icebp
aad
cwtl
jle
outsl
xor
mov
xchg
xlat
cltd
xchg
fcmove
dec
push
sub
rcll
add
sub
ret
push
out
and
ret
cmp
stos
ret
and
into
sbb
int3
xchg
add
cmc
scas
xor
push
jge
movsb
mov
add
movsb
or
ret
xchg
cmp
stc
lcall
mov
lock
pop
addr16
sbb
out
xchg
inc
push
das
je
mov
jg
cmp
iret
ds
push
adc
es
insb
aad
mov
inc
in
push
movsl
scas
iret
mov
fcoml
push
add
aam
adc
push
daa
sbb
lods
adc
sub
xchg
int3
adc
and
ja
inc
pop
mov
rolb
testb
and
mov
inc
dec
sbb
data16
pop
xchg
fst
and
pop
lret
jae
mov
fldenv
add
sbb
xchg
dec
mov
sbb
jbe
adc
adc
jmp
loope
cltd
fldcw
orb
ds
xor
inc
inc
clc
mov
ffree
mov
push
fwait
negb
pop
fstpt
pusha
aad
aas
in
add
into
jb
pop
cld
aaa
fsts
sti
jmp
stc
stos
outsl
adc
loopne
mov
rcrb
xchg
push
adc
pop
inc
push
sub
adc
jl
sbb
jp
nop
gs
in
xchg
jg
cmp
jg
gs
in
jnp
mov
cltd
pop
mov
mov
jle
ja
fdivrl
dec
inc
ds
cmpb
inc
les
xor
shr
daa
sub
nop
jle
in
xchg
sbb
ljmp
ljmp
pop
stos
xor
adc
adc
mov
jg
data16
jge
sbb
push
and
inc
xor
enter
pop
pop
pop
pop
mov
mov
mov
stos
cmpsb
incb
pop
jae
dec
lds
lods
test
pop
jge
ror
inc
fwait
sub
jb
push
fnstcw
addl
dec
sti
lock
sbb
fisttpl
decl
imull
adc
cli
iret
push
test
mov
jle
lret
dec
and
clc
push
ss
rorl
sbb
dec
into
in
xchg
js
daa
ljmp
mov
outsb
xor
repz
das
and
in
mov
fdivrs
sbb
and
pop
daa
push
mov
daa
ficoml
lock
mov
add
outsl
inc
push
sub
jp
ja
sub
adc
xchg
inc
jge
jmp
mov
add
rcrl
stos
xchg
outsl
and
xchg
inc
pop
fnstenv
imul
ja
push
mov
testl
jo
enter
cli
fs
jp
mov
mov
pop
inc
into
pop
sti
ja
add
or
mov
xor
lcall
outsl
pop
jle
popf
cwtl
rclb
adc
cltd
sbb
cmp
dec
loop
ljmp
je
out
div
sbb
lds
mov
cli
pop
mov
popa
push
inc
inc
enter
push
cwtl
test
dec
inc
js
jp
jg
mov
or
sahf
jns
xchg
imul
insl
sub
mov
mov
cmp
adc
xchg
orb
addr16
cmp
rorb
nop
jbe
cmc
out
outsb
stc
adc
lock
xchg
mov
fidivrl
mov
sets
fisttpl
out
mov
jge
sbb
jg
clc
mov
and
xchg
inc
sbb
or
sbb
adc
dec
dec
cmpsb
pop
pop
push
outsl
insb
pop
and
push
aaa
jo
js
mov
or
cmpsl
push
push
inc
movsl
push
int
inc
inc
aam
stos
in
iret
int3
pop
fdivl
inc
pop
jbe
xor
repnz
xlat
clc
int3
fstpt
hlt
lret
dec
push
ds
and
cmp
loop
and
and
cmp
mov
lods
ret
dec
and
fxch
ss
mov
mov
shll
gs
xchg
push
scas
icebp
pop
imul
adc
jge
pushf
xchg
inc
call
fcmovnbe
and
inc
das
popf
mov
xor
dec
pop
out
jl
and
jb
icebp
xchg
jecxz
lahf
xor
sbb
es
sbb
and
repz
repz
sbb
jns
repnz
pop
push
idivb
mov
jo
push
test
pop
cli
jae
push
popa
sahf
mov
ja
adc
dec
mov
imul
vaesenc
pop
and
hlt
into
lret
sbb
imul
sub
out
pop
subl
lahf
mov
fcmove
mov
js
ficoms
jb
mov
mov
mov
xor
sub
dec
xor
mov
movsb
push
mov
add
lahf
dec
pop
adc
pop
lret
jne
iret
mov
mov
inc
in
adc
adc
and
loopne
popfw
sub
lods
das
mov
sub
and
pop
aam
jae
addr16
out
aad
cmp
mov
cmpsl
mov
fs
in
or
sti
jns
loopne
mov
out
aam
cld
pop
ds
adc
xchg
ret
pop
loope
cmpsb
lret
or
ljmp
xlat
lock
pop
cmpsl
icebp
cmp
aam
jo
das
sbb
aas
fisttpl
cmpsl
xor
dec
xor
hlt
into
dec
aas
pop
incl
sbb
dec
mov
jmp
and
mov
dec
dec
loopne
pop
sahf
fists
pop
push
push
lods
pop
push
cld
cmp
and
je
pop
xor
jl
jnp
es
cmp
inc
cli
testl
bound
sub
mov
sbb
dec
or
lret
cltd
shlb
and
orb
ret
outsl
test
enter
pop
aaa
sub
jnp
popa
les
fadds
mov
xchg
out
jns
outsb
push
push
mov
cli
adc
xor
movsl
fdiv
dec
lods
lods
popa
sarl
nop
imul
gs
aas
sub
xor
insl
cmpsl
push
rclb
sub
hlt
dec
inc
lahf
jnp
jns
push
aad
addr16
daa
mov
fadds
loop
add
fs
push
lcall
pop
xchg
fisubl
sub
movsl
ss
jnp
push
cltd
push
xchg
aam
lock
lods
pop
jecxz
push
cmpsl
fstps
ja
in
push
dec
mov
sahf
pop
push
xlat
rcr
nop
inc
xor
cmp
push
cmpl
xor
lds
xor
fimuls
sbb
repnz
rcrb
sbb
sbb
adc
jmp
push
stc
and
test
repnz
mov
gs
lret
xor
jns
jo
pop
mov
pop
pop
push
add
dec
lea
cld
jae
push
lret
pop
gs
mov
xorb
sbb
addb
cltd
sub
jae
loopne
fsubp
nop
push
and
inc
adc
mov
pop
and
cwtl
leave
adc
test
push
call
jg
popa
jg
and
xor
xor
and
inc
sti
cmp
movsb
jle
pop
dec
ljmp
inc
xor
in
aaa
push
and
jb
jnp
push
xor
cmp
or
xor
sti
adc
jecxz
pop
clc
fadds
insb
jns
shlb
loopne
aad
in
add
scas
testb
and
adc
aam
add
ljmp
aas
sub
enter
dec
xchg
mov
xchg
dec
aaa
cmp
daa
inc
xor
mov
shll
sbb
lods
sbb
pop
mov
scas
mov
cmp
push
pop
out
mov
inc
push
adc
inc
jbe
inc
mov
test
rcrb
and
xor
cmp
adc
cmp
mov
outsl
cmp
test
pop
push
cltd
or
stos
inc
cmp
shrl
movsb
adc
pop
and
fs
sub
inc
out
in
ds
mov
inc
rorl
ds
pop
push
inc
rcrl
rorl
inc
xchg
push
out
cmpsl
xchg
imul
dec
mov
cs
mov
call
test
push
or
and
fiadds
or
test
lods
out
push
mov
xchg
sahf
adc
xchg
mov
inc
adc
mov
or
das
and
sbb
xchg
jns
cmp
sti
pushf
and
xchg
fdivs
pop
call
push
lods
mov
cmp
adc
dec
repz
adc
icebp
push
addb
cmp
pop
lods
aas
out
xchg
push
cmp
bound
push
mov
inc
ss
mov
jmp
pusha
divl
int3
adcl
lea
fstl
fsubrp
mov
cmpsb
decb
jle
add
loope
repz
lock
call
sub
enter
or
inc
je
adc
loopne
jg
dec
ficoml
xchg
pop
cmp
jp
adc
incb
ds
jp
lea
dec
mov
xor
inc
pop
jmp
imul
cmc
mov
pop
jp
push
sbb
mov
lods
cld
adc
add
stos
pop
adc
js
lods
test
lds
xor
mov
jecxz
inc
jle
arpl
lods
subb
andl
gs
leave
dec
jbe
jae
cmpsl
sub
jae
cltd
movsl
sysexit
mov
push
into
lcall
cmp
es
sub
out
pop
outsb
orb
les
negb
pop
mov
aam
sub
mov
xchg
mov
roll
ja
ss
fnstenv
in
mov
jge
loop
stc
test
push
sbb
xor
movsl
les
cmp
ret
xor
jge
testb
data16
cli
test
xor
popf
or
and
jbe
adc
xchg
repz
inc
push
or
jge
decb
arpl
into
mov
cmp
inc
sub
shlb
mov
shll
lret
cwtl
out
je
andl
stc
mov
cmp
imul
rcrl
pop
je
mov
cltd
and
repz
orl
mov
push
cmpsl
enter
or
xor
pop
hlt
cwtl
daa
clc
iret
dec
jmp
xlat
jecxz
mov
fldcw
ljmp
adc
dec
outsb
pusha
pop
testl
cld
jae
cmp
jne
lds
imul
xor
jne
xchg
mov
jp
sbb
add
out
insb
xchg
aas
mov
mov
cmp
aad
pop
lret
adc
and
std
add
std
idivl
loop
dec
ljmp
out
sub
cmc
icebp
xlat
xor
bound
ja
mov
push
notl
in
adc
iret
xor
daa
pop
mov
test
mov
jmp
fisubrs
jecxz
fwait
das
jmp
mov
lahf
dec
inc
bound
cmpsb
jne
addl
mov
sub
iret
push
and
cmpsl
out
adcb
std
mov
add
lcall
xchg
hlt
sub
cltd
sub
fdivs
scas
pop
imul
loope
xor
movl
xchg
dec
jne
inc
bound
pop
lret
loopne
push
jl
lea
sbb
subl
and
inc
pop
ss
rcll
mov
or
xor
jne
ja
test
stc
stos
aaa
dec
test
insl
dec
movsl
inc
xorl
loop
cmpsb
add
lahf
scas
dec
lcall
sbb
pop
stc
mul
test
cmpl
flds
aam
cmpsl
pop
fidivl
inc
jge
sti
pop
fdivrl
scas
cmpsb
jb
scas
sub
mov
sbb
pop
arpl
test
clc
aas
dec
popf
ja
rcpps
pop
pop
sbb
mov
fisubrl
test
jle
cltd
sub
aad
xor
pop
lea
jmp
call
loope
stc
push
arpl
imul
mov
or
jl
popl
stc
dec
je
xchg
shl
iret
inc
mov
jmp
push
and
xchg
or
mov
sbb
clc
or
ljmp
jp
test
fldenv
jle
movsl
inc
cli
mov
loopne
xorb
mov
js
scas
dec
xchg
add
jecxz
decl
mov
or
pop
hlt
jmp
cmpsb
gs
xchg
mov
in
mov
push
add
in
std
mov
ljmp
andb
pop
loope
lds
cmp
sub
inc
dec
jecxz
pusha
dec
pop
daa
repnz
pop
aas
sub
pop
js
inc
aaa
mov
jne
sbb
mov
loop
or
inc
cmp
adc
cmpsl
inc
push
xchg
stc
push
mov
xchg
sbb
mov
movb
adc
orps
pop
pop
out
cltd
mov
or
lods
push
pop
fwait
es
sbb
sbb
addb
loope
or
xor
repnz
into
dec
inc
lahf
insb
adc
mov
jmp
js
fmuls
dec
jns
mov
fldcw
ret
pop
inc
adc
push
cmp
repnz
jns
test
jecxz
push
adc
jae
push
push
mov
cmp
shlb
sub
and
pop
push
cmp
inc
push
mov
mov
mov
addl
lret
lret
js
iret
cmc
pushf
inc
add
ret
int3
fdivrs
in
ds
lahf
out
std
dec
test
mov
jl
pop
aad
add
scas
movsl
pop
insb
stos
xchg
lea
mov
popa
cmp
int3
mov
in
add
mov
rorb
shll
or
and
cmpb
mov
daa
push
inc
mov
mov
mov
sti
aas
adc
mov
mov
mov
mov
jnp
sarb
dec
lcall
mov
mov
arpl
aaa
stos
xor
ja
rolb
pop
cs
xchg
btc
shrl
lcall
in
cltd
mov
scas
bound
leave
mov
pop
aam
cmp
jb
mov
jo
xchg
stc
mov
or
rol
jecxz
add
adc
mov
mov
and
imul
xchg
scas
lds
js
and
add
fldl
or
out
in
jl
dec
inc
adc
movsl
pop
outsb
cld
divl
fistpll
fisubs
mov
test
mov
shll
mov
outsb
mov
sub
cmp
push
jbe
mov
mov
push
sbb
push
add
mov
cmpsl
mov
pop
inc
outsb
xor
mov
mov
mov
dec
mov
out
icebp
mov
out
rcrb
ret
mov
icebp
into
and
sbb
aam
add
leave
mov
fucomp
dec
dec
cs
dec
scas
dec
sbb
add
int3
xor
cmp
daa
leave
ja
mov
inc
lock
arpl
adc
pop
out
pop
jns
ficompl
ret
scas
cmc
mov
cmp
decl
pop
lods
cmp
xlat
test
aad
pop
dec
subl
lods
sbb
adc
out
repz
lahf
hlt
push
loope
mov
xchg
in
mov
inc
jno
or
testl
inc
cwtl
aaa
lock
mov
out
loop
lods
shll
pushf
popa
outsb
mov
aas
xor
imul
icebp
mov
xchg
push
push
inc
cltd
sbbb
xor
loope
out
insl
mov
in
scas
fldcw
rcll
cmc
dec
adc
arpl
sbb
or
jne
xchg
test
mov
cmp
aad
pop
inc
xchg
imul
lods
fdivrs
pop
or
sub
pop
sub
xor
dec
pop
inc
pop
shl
lea
pop
mov
outsl
lcall
pop
pop
insl
xchg
in
and
ds
pop
pop
pop
imul
push
jge
mov
mov
xor
and
rorb
or
push
nop
sti
cltd
xlat
sbb
ljmp
cmp
cs
ret
push
mov
inc
xchg
popa
dec
and
ss
or
lret
pushf
lret
xor
add
xor
dec
lods
xchg
pop
push
push
cmp
or
dec
sbb
inc
xchg
shll
add
adc
inc
inc
add
mov
fs
fisubs
in
sub
sub
enter
ja
fsts
sub
lods
lock
pop
cmpsb
push
pop
ja
cmp
jecxz
test
cmp
test
add
loop
repz
data16
loopne
pop
in
jp
fwait
push
mov
add
sub
mov
es
sub
stos
adc
jae
jo
cmpsl
cmp
dec
jb
cmc
outsb
sbb
fimuls
scas
lret
shl
or
insb
inc
test
inc
rcrb
push
loop
xchg
lcall
js
into
cli
pop
jge
pop
jno
pop
popf
xor
popa
pop
dec
out
xchg
out
dec
imul
xchg
cmp
icebp
pop
in
mov
cmpsb
xor
mov
cmp
nop
or
std
cwtl
ljmp
cmp
jg
dec
dec
mov
cmpsb
mov
in
outsl
ss
call
mov
test
adc
cld
lret
xor
daa
push
sbb
xchg
test
pop
jns
ljmp
cmp
mov
lea
subl
test
orl
push
out
dec
ret
jecxz
mov
sub
adc
mov
and
push
cmpsl
or
xchg
hlt
or
adc
push
enter
lea
mov
mov
shrl
sub
push
ja
pop
fidivrl
lds
dec
daa
pop
inc
rcrl
insl
loope
sahf
aaa
lahf
loope
repnz
xor
pop
add
movsl
mov
mov
inc
scas
ja
cs
lret
lcall
fisubrs
lret
roll
xor
sbb
pop
mov
je
cmpsl
mov
xlat
fisttpll
idivl
xchg
outsl
dec
fs
jp
cs
imul
sub
sarl
xor
xchg
lds
fxtract
mov
lahf
dec
loope
jle
decb
mov
ljmp
pop
cmp
sbb
sub
sub
fs
jg
mov
lahf
push
jbe
add
jbe
cltd
mov
vpmacsww
scas
adc
adc
mov
scas
fidivrs
roll
push
jge
mov
ss
dec
clc
leave
out
cmp
sub
mov
aas
shr
inc
clc
push
add
push
xchg
fldenv
pop
and
mov
push
mov
repnz
pop
jne
jae
or
test
fistl
insl
out
movsb
fiaddl
cmpsl
into
sbb
rcll
pop
push
sbb
and
ja
push
es
xor
jo
pop
mov
scas
jbe
notb
or
xchg
div
fldt
sub
lcall
and
cbtw
lock
test
in
outsb
pop
incb
cs
pop
popf
push
ja
loope
add
xchg
sahf
in
js
fcmovnb
jbe
mov
jecxz
push
mov
inc
addb
shrl
fucomip
xchg
dec
sbb
adc
mov
repnz
sahf
cmpsl
mov
in
cld
push
push
fisttpl
jmp
xorb
ljmp
dec
bound
aad
and
daa
cmp
insb
nop
cmp
das
ret
leave
push
mov
cmp
mov
pop
fcomps
dec
ret
int
jo
inc
and
test
stc
sarb
popf
mov
lods
and
fwait
jmp
cltd
mov
into
jno
adc
into
imul
shlb
mov
in
jnp
movsl
dec
jns
popf
jmp
dec
leave
lods
lea
aas
arpl
outsl
test
jecxz
mov
aad
pop
out
ret
dec
mov
outsl
imul
arpl
aaa
xor
leave
sbb
push
repnz
icebp
mov
js
xor
push
cmp
cld
ret
xor
test
xorl
pop
adc
sbb
mov
mov
ja
mov
ret
pop
jl
ficoms
inc
dec
pushf
push
loopne
test
mov
stos
dec
mov
and
sub
cmp
adcb
in
aam
inc
les
inc
push
in
pop
testl
xchg
xchg
push
test
loopne
int3
mov
lods
xchg
js
xchg
and
pop
mov
stos
mov
cmp
sbb
inc
mov
shll
mov
push
or
mov
in
adc
sbb
sbb
mov
mov
xlat
cmp
insl
mov
loop
aad
and
out
pushf
fwait
out
scas
xor
cmp
pop
fsubs
imul
xlat
in
pop
in
aaa
shr
shrb
sbb
sub
movsl
in
mov
xchg
push
push
imul
cmp
dec
add
pop
cli
out
ja
fildll
jnp
aam
adc
adc
popf
fimuls
add
loopne
iret
adc
leave
mov
adc
mov
cmp
or
cld
pusha
out
cmpsb
scas
add
jp
sbb
subl
inc
mov
movsb
imul
jle
in
int
data16
pop
mov
jge
popf
subl
xor
add
add
jg
inc
lea
test
das
stos
sub
int3
loope
movsl
push
and
sub
shlb
insb
insl
sub
nop
cld
scas
add
cmp
and
ljmp
push
mov
inc
int
inc
ret
jl
jmp
push
pop
data16
inc
jp
add
cmp
arpl
adc
cmc
je
xchg
xor
adc
xor
lret
xchg
cmc
cmp
movsl
push
fists
mov
mov
mov
test
int
imul
mov
dec
add
in
int
setae
xchg
lods
pop
repnz
dec
popa
pop
xorl
aaa
mov
pusha
pop
ljmp
iret
pusha
out
int3
pop
mov
mov
in
in
std
mov
in
inc
jle
ret
add
add
cmp
jmp
fadd
aas
add
cwtl
jne
aad
or
leave
fwait
xor
xor
xorb
sbb
mov
sbb
outsl
jle
lock
aas
sbb
stos
mov
cmp
imul
js
lock
iret
mov
jne
scas
mov
pop
test
inc
mov
mov
mov
and
sub
add
mov
in
inc
das
sbb
xor
lods
shrb
pop
cmp
xor
push
jl
mov
notb
movsb
sbb
int
fs
mov
mov
dec
mov
cmp
fsubl
pushf
push
bound
sub
mov
pop
aas
cmp
imull
scas
mov
sub
jb
shlb
add
cmc
rol
into
mov
test
out
cmovl
cmpsb
mov
adc
push
jmp
insb
insl
jle
xchg
push
dec
jecxz
pop
and
add
call
jb
ret
pop
out
dec
dec
sbb
fstl
js
add
xorb
je
test
adc
mov
shll
popa
rorb
inc
or
daa
inc
loop
jns
aad
pop
pop
dec
add
imul
mov
lret
ja
push
sbb
popf
fwait
sub
pop
dec
jbe
add
mov
repnz
stc
rorb
inc
es
pop
mov
push
mov
and
nop
loope
sbb
sub
mov
ljmp
scas
std
into
loope
sub
insl
lea
add
xlat
mov
xor
cmpb
pop
lret
ss
pop
insb
clc
mov
dec
test
sbb
iret
mov
arpl
cld
clc
jo
je
and
es
push
mov
out
ret
xor
lret
push
sbb
fs
pusha
xchg
jns
jo
or
and
cmp
jne
mov
xchg
jl
mov
rorl
fwait
movsl
stc
jmp
push
and
xor
mov
jno
fisubs
mov
imul
daa
jno
lods
dec
xorl
js
icebp
cmp
push
mov
inc
lcall
hlt
add
orb
fcmovnu
test
fisubrl
xchg
sub
push
lret
xchg
sbb
ja
rcrl
xchg
scas
enter
shll
adc
scas
mov
xchg
push
insb
dec
popa
movsl
dec
push
dec
push
jmp
je
mov
pop
in
sbb
cld
sbb
outsl
into
in
xor
pop
xor
stos
testb
aam
lahf
and
mov
loopne
and
xor
xchg
adc
mov
and
idivb
or
dec
leave
mov
das
or
mov
xorl
pop
xor
jecxz
push
pop
mov
shlb
push
outsl
andb
push
aam
xchg
mov
jns
or
fstp
es
sahf
mov
das
xor
cmp
cmp
fidivrl
push
push
jo
enter
xor
inc
and
lahf
loope
inc
cmc
in
cmp
push
fnstenv
dec
js
sub
sbb
loop
cwtl
and
jl
jmp
add
test
adc
dec
ja
xor
loopne
pop
adc
mov
decb
into
int3
lahf
or
push
fs
xor
aad
gs
mov
or
push
jl
lods
sbb
sbb
les
fsubr
pop
sub
lds
scas
sub
sub
das
add
in
add
xchg
addl
test
mov
inc
pop
xchg
in
addb
sub
cmc
and
and
mov
add
aam
les
inc
pop
sahf
push
push
scas
lret
icebp
in
mov
data16
repz
pop
jnp
pushf
test
or
inc
callw
test
inc
xchg
arpl
pop
pop
addl
lods
je
xor
dec
enter
adc
cltd
add
mov
scas
outsl
out
lret
int
ja
nop
insb
mov
stos
xor
ds
pop
mov
lret
outsb
jnp
arpl
pop
stos
mov
jae
int
lods
push
sbb
mov
cmpsb
pop
pop
lods
push
repz
lret
shrb
jg
sbb
or
pop
sub
out
in
cwtl
mov
imul
sub
outsb
imul
inc
lods
lea
xchg
sbb
jns
push
push
xchg
lahf
push
stos
sbb
xchg
mov
mov
lcall
outsb
sahf
inc
rorl
ljmp
jg
push
mov
rol
ljmp
push
mov
or
repnz
mov
sahf
aad
sbb
jp
lret
mov
fs
xchg
popf
dec
dec
mov
mov
jo
fists
lret
loopne
cmc
lods
int
jmp
cmpl
cmp
mov
or
movsb
ds
shrb
fisubs
push
adc
dec
dec
ret
push
into
jnp
add
push
mov
sahf
lock
cmp
mov
lahf
add
ret
pusha
inc
aaa
lds
xor
inc
mov
inc
je
push
pop
filds
gs
mov
or
shr
push
ja
test
lahf
and
and
mov
and
xchg
sub
mov
push
mov
push
fstl
lret
nop
stc
inc
push
movsl
popa
or
or
insl
imul
add
inc
jnp
push
inc
push
mov
sbb
jmp
mov
jno
jns
xchg
dec
mov
aas
fistps
xchg
mov
repz
inc
jmp
or
and
sub
in
fwait
arpl
xchg
dec
adc
xchg
ret
cmpb
mov
cmc
inc
mov
dec
cmpsb
xchg
dec
pop
fists
sarl
push
lahf
and
aad
xor
lods
lret
xchg
cmpsl
push
pop
adc
mov
call
imul
or
je
push
xchg
cmpsb
xchg
xchg
mov
inc
shlb
das
fs
movsl
adc
fwait
enter
bound
aam
xchg
shrb
int
fisttps
or
das
jne
add
xlat
stos
jl
movsb
enter
std
push
push
or
sub
js
mov
cmc
cmp
lret
xchg
aad
sbb
out
ficompl
insl
mov
ret
mov
inc
jl
test
jp
xor
mov
and
daa
js
lcall
addr16
push
dec
es
add
mov
cmpsl
dec
dec
mov
mov
daa
mov
cli
adc
lea
mov
xchg
mov
xor
cmpsl
add
mov
fstl
sarl
leave
push
jns
pop
mov
cmp
push
dec
jmp
jmp
jno
movsl
pop
xorl
xchg
mov
out
add
repnz
pop
das
or
daa
mov
dec
xchg
mov
ds
lds
mov
push
ja
lret
out
test
jmp
addr16
cmp
test
jp
mov
and
addr16
xor
fptan
inc
and
push
jbe
repz
out
dec
jle
jne
repnz
repnz
cmpsb
xchg
xchg
cmpsl
push
repnz
xlat
movsb
lret
pusha
pop
in
not
jl
iret
mov
jb
adc
mov
push
push
mov
push
xor
sarb
insb
icebp
scas
fdivs
ja
sbb
cmp
xchg
enter
dec
pusha
dec
out
int
push
outsl
mov
xchg
rcr
mov
loop
inc
cs
mov
sub
mov
daa
ljmp
inc
fs
or
adc
aam
ljmp
cmp
adc
cmpsb
sar
scas
outsl
jmp
imul
cmp
push
imul
and
mov
jo
jge
lcall
inc
jg
repnz
and
pop
enter
xchg
cwtl
inc
je
in
fldl
push
jo
jne
out
add
cmc
and
jnp
xchg
jge
cmp
add
test
es
push
stc
test
insb
pop
ljmp
inc
mov
jl
push
movsb
cli
cmpsb
loopne
pop
std
push
aaa
xchg
out
mov
adc
pop
sub
mov
pop
xchg
test
adc
lock
data16
xchg
hlt
mov
cmpsb
adc
mov
xchg
lcall
sarb
and
mov
int3
cmpsl
out
jecxz
jnp
adcb
pop
inc
mov
xchg
outsl
call
xchg
imul
mov
or
push
push
dec
fimull
std
push
js
imul
adc
loop
mov
mov
jae
cli
mov
pop
xor
nop
mov
push
xchg
add
cmp
cmpl
pop
hlt
pop
repnz
out
lods
test
movsl
repz
pop
shl
inc
daa
arpl
jl
xor
mov
add
das
pop
mov
xor
ljmp
popf
into
rcr
shlb
icebp
fnstcw
lret
dec
insb
icebp
inc
ss
out
lcall
arpl
sbb
push
add
sar
fs
or
jg
and
aam
pop
mov
test
imul
sbb
cs
pushf
fidivs
mov
call
insb
jecxz
push
mov
test
lret
rcl
dec
pusha
cmp
pop
inc
add
call
xchg
xchg
push
popf
ja
jmp
aad
dec
ss
into
or
pop
inc
and
stos
mov
xchg
xorl
sub
sub
jbe
pushf
fdivrs
aam
test
cmpsb
xchg
incb
push
pusha
enter
or
jo
adc
mov
mull
movlps
out
mov
cmovge
or
xchg
sbb
inc
xchg
mov
icebp
mov
jp
mov
inc
mov
xor
jmp
adc
jbe
sbbb
jge
hlt
lret
js
pushf
pop
pusha
int
mov
push
scas
mov
mov
push
ficoml
leave
rcl
movl
pusha
fildl
std
or
mov
dec
jle
mov
gs
repnz
sub
mov
mov
mov
xor
hlt
test
cmp
sub
jg
int3
lcall
adc
push
loope
pop
or
lods
ds
mov
lods
sbb
lret
and
loope
push
outsl
rolb
mov
andl
push
orl
fcmove
sbb
cmp
sarb
rorb
jae
mov
xlat
sbb
pop
pop
push
movsb
lcall
jnp
gs
push
fimull
adc
inc
mov
test
dec
test
shlb
scas
sub
js
push
xor
and
scas
cwtl
ja
adc
js
pop
daa
inc
shrb
je
push
push
xchg
or
xorb
outsb
sub
nop
stc
dec
in
movsb
xchg
jmp
rcl
xchg
lds
addl
push
addr16
arpl
fisubl
into
pushf
mov
pop
jmp
popa
pop
roll
pop
je
int
imul
sbb
sbb
cmp
or
lret
mov
jmp
sbb
cmpsl
loopne
lret
ret
xchg
cmpsl
pop
mov
insb
inc
inc
leave
mov
sbb
jle
jb
jb
mov
jns
xlat
ds
clc
in
sahf
stos
pop
adcl
inc
mov
mov
mov
pop
inc
lret
mov
iret
xchg
ud0
xchg
int3
xchg
rorb
dec
stos
jmp
or
or
out
xchg
repz
or
sub
sub
xor
jb
push
aas
inc
lret
shl
sbb
ret
or
stos
scas
and
cmp
iret
es
mov
repz
scas
fwait
adc
jbe
sub
imul
outsl
out
int3
lret
lds
pop
add
jl
pop
mov
pop
sahf
push
movsb
popf
test
jno
xchg
mov
lret
test
dec
das
iret
pop
arpl
mov
mov
sub
cmpb
lods
imul
std
cld
mov
sub
dec
push
cmp
les
js
leave
std
sarl
popf
rcl
jbe
xchg
or
mov
popa
xor
xor
mov
adc
mov
cltd
daa
ljmp
orl
xchg
add
add
test
xchg
pop
pop
imul
pushl
je
test
adc
inc
ja
leave
push
test
xor
xchg
leave
xchg
scas
dec
test
sub
mov
cmp
les
repz
and
jbe
dec
mov
dec
mov
jae
mov
jb
pushf
jecxz
in
push
jmp
fs
das
push
aas
add
rep
xchg
fld
sub
mov
and
pop
rcll
sbb
into
jae
loope
xchg
out
inc
add
ja
jge
addr16
cmp
lcall
mov
dec
mov
in
shr
addl
ljmp
dec
inc
imul
test
xchg
sbb
jne
loope
jmp
lods
fldcw
sub
cmp
xchg
adc
push
push
mov
cmpl
jle
ret
call
jno
cmp
dec
push
push
inc
push
jecxz
ljmp
and
mov
outsb
scas
cld
mov
frstor
pushf
inc
pop
push
pushf
test
or
push
pop
mov
mov
xchg
push
lret
xlat
push
fcoms
test
sbb
pop
mov
popf
or
sarb
jge
call
js
das
mov
ljmp
pminub
shll
dec
js
clc
push
lods
int
and
aad
scas
inc
push
clc
jns
sbb
and
aam
push
cmpsl
lret
push
es
xchg
sbb
pop
iret
xor
push
pop
xlat
xchg
pop
out
fbstp
pop
lret
rcrl
sbb
sbb
push
jp
push
pop
inc
in
outsb
jge,pt
cmc
mull
repz
mov
mov
fiaddl
xor
es
jb
push
int3
jns
dec
xchg
xchg
sub
cmp
cmp
scas
mov
test
mov
dec
or
push
push
adc
xor
push
aam
shrl
cmp
lods
jmp
and
vpackssdw
fisubrl
push
aas
add
test
fld1
cwtl
out
es
inc
dec
fbstp
daa
fsubrs
cmp
inc
in
jns
add
xor
movsb
cmp
scas
dec
arpl
push
sub
jl
ss
nop
mov
add
icebp
sub
insl
ss
lret
daa
or
push
push
push
mov
or
fstpl
ljmp
andb
sub
popa
add
mov
in
sahf
sub
in
pop
pop
pusha
cs
int3
mov
stc
ret
pop
sub
pop
in
mov
xchg
call
mov
jle
mov
sub
xor
or
into
mov
jp
into
or
in
repnz
pop
subb
sti
jae
lret
inc
shll
pop
dec
mov
aam
gs
push
insb
addl
pop
xchg
mov
mov
add
pop
loope
insb
push
rcll
insb
aaa
mov
mov
push
mov
mov
imul
insb
popf
mov
pop
mov
arpl
jne
orl
fcoms
push
fiaddl
aas
or
add
pushf
mov
dec
mov
ljmp
mov
or
lahf
jg
jp
insb
mov
movsl
mov
or
scas
in
es
push
sti
lret
iret
jns
push
stos
sbb
out
dec
adc
xchg
and
out
notl
mov
xchg
push
in
ja
and
dec
es
arpl
clc
icebp
sbb
pusha
push
ret
jle
loope
mov
jne
push
or
mov
popf
mov
int3
jl
scas
push
outsl
ljmp
xor
movsb
sub
sbb
insb
sbb
scas
and
dec
scas
fisubs
mov
jmp
loop
sub
aas
test
fwait
jle
cmpsb
jnp
mov
test
sbb
xchg
clc
pop
pop
jp
outsb
xor
cmp
adc
stos
cmpsb
or
cmpb
pop
sti
jb
mov
inc
dec
dec
loope
sub
xchg
aas
fidivs
push
test
cwtl
imul
cmp
or
and
mov
sub
mov
adc
xlat
xchg
sub
movsb
mov
jne
lahf
pop
cs
mov
icebp
push
xchg
sti
and
fisttpl
jle
loopne
dec
and
daa
das
or
inc
lcall
lcall
push
aas
pop
xchg
loopne
sarb
dec
scas
xchg
cmp
inc
add
rorb
test
push
fistpll
xchg
addr16
cmp
int
fmull
xchg
or
shlb
daa
lcall
jge
sub
xchg
xor
cmp
or
fwait
jbe
imull
lods
mov
scas
repnz
cltd
or
fcmovnu
stc
adc
xlat
and
lock
cmp
fidivl
out
insl
jge
clc
in
add
imul
jecxz
movsl
test
or
cwtl
stc
cmpsb
jns
push
pop
add
lds
xor
mov
andb
xorl
lds
fsts
add
lret
sahf
in
jmp
movsb
push
mov
mov
repz
insl
ljmp
inc
gs
mov
add
andl
into
cmpsl
lods
cs
xor
mov
add
inc
push
stc
xchg
pop
mov
insl
xchg
inc
dec
popa
mov
jle
push
out
dec
add
cli
push
or
sbb
lahf
xor
in
popf
andl
xchg
mov
imul
fsubp
icebp
push
pop
fdivl
sti
cmpsb
jo
adc
popf
ret
inc
lock
and
lret
test
pop
sub
popa
push
push
dec
aas
pop
and
add
jne
lods
jge
mov
jne
sub
in
mov
xorb
cmpb
push
jmp
xor
or
scas
fisttps
inc
scas
push
jp
daa
sbb
cmpsl
sahf
test
mov
into
ss
mov
fbstp
mov
dec
cmpsl
test
pop
sbb
mov
dec
xor
add
mov
mov
mulb
sbb
mov
aaa
adc
xor
data16
jle
mov
imul
adc
setg
sahf
lcall
mov
notl
hlt
gs
push
fs
dec
sbb
sub
mov
sarl
dec
pop
jg
adc
push
aas
xor
cwtl
push
or
sbb
cmp
mov
lretw
inc
xchg
in
mov
inc
push
out
lret
inc
cld
dec
cltd
mov
sub
sbb
and
cmpsb
in
xchg
sub
push
sub
mov
cmpsb
jb
add
lds
or
inc
pop
idivl
cltd
pop
mov
orb
pop
mov
dec
mov
lret
out
xor
and
shrl
dec
push
xchg
jno
mov
lock
into
loopne
subl
insb
pop
pop
jno
xchg
leave
xorl
dec
test
and
dec
das
outsl
out
pop
add
enter
pop
jne
test
cli
sbbb
add
test
sahf
jno
xchg
xor
inc
jmp
enter
aas
dec
jp
adc
and
jno
negl
cltd
mov
mov
pop
roll
aad
lar
lea
cmpsl
lea
sub
dec
mov
inc
and
dec
sub
adc
add
ret
dec
mov
xchg
jge
les
stos
cmc
rclb
push
and
rcr
xchg
fisubl
mov
jg
stos
aam
test
mov
pushf
and
bound
insl
pop
stc
xor
loope
popa
repz
jb
jle
in
sahf
jecxz
or
dec
ljmp
cmpsl
adc
and
iret
sti
pop
jl
ret
jne
inc
mov
rorl
xlat
push
std
lahf
je
xchg
mov
cltd
mov
inc
fildl
out
test
in
mov
mov
ret
mov
insb
fcomps
ficomps
aam
cmp
mov
stc
dec
dec
fwait
push
nop
test
mov
jg
sub
cltd
cmp
scas
push
fbstp
loop
scas
lahf
leave
in
aad
jge
mov
scas
sbb
popf
rorl
xor
lds
gs
cmp
fdivs
push
decb
push
arpl
and
ret
jnp
xchg
cmp
ja
adc
add
add
inc
push
mov
leave
push
inc
add
pop
rcrb
jns
loope
xlat
adc
mov
dec
mov
es
dec
sbb
out
mov
add
loopne
jle
mov
pop
mov
gs
pop
xlat
hlt
dec
xchg
shll
stc
movsb
stos
pop
outsb
lods
mov
int
loop
mulb
enter
lahf
mov
mov
mov
inc
cmc
stos
xor
and
mov
sub
loope
cli
gs
idiv
in
les
es
mov
adc
xchg
and
in
outsb
or
enter
sub
add
add
or
push
icebp
dec
push
push
mov
mov
sub
out
js
sub
jge
or
mov
dec
pop
or
jl
xchg
arpl
adc
shr
inc
pop
mov
fisubl
pushf
xor
out
add
sbb
out
cs
sub
mov
sbb
sti
dec
xor
test
xlat
xchg
mov
pop
imul
mov
daa
sub
and
cwtl
xchg
shll
es
loop
xor
xor
jo
and
nop
adc
shrb
fwait
test
lcall
or
mov
sub
mov
sbb
int
pop
insb
mov
ja
in
test
add
imul
or
sbb
iret
jbe
sub
or
pop
faddp
xchg
ljmp
andl
xor
movsl
xchg
ficomps
pop
sbb
pop
sub
cmp
je
dec
add
sub
push
add
rolb
xor
adc
lock
out
dec
jge
pop
in
mov
cmp
jns
inc
incb
outsb
xchg
cmpsb
xor
push
mov
mov
pop
sub
sbb
aaa
ds
cmpsb
imulb
jae
loop
sbb
shlb
dec
xor
adc
jo,pn
xchg
jl
pop
cltd
pop
pop
shrl
mov
scas
out
jp
adc
call
pop
mov
pop
in
fldl
fwait
sbb
adc
mov
jbe
mov
addr16
sarb
push
fldt
adc
xor
cmp
scas
mov
bound
ljmp
push
cmp
cmpb
pop
subl
movsb
push
mov
sbb
loop
adc
je
lods
and
loope
pop
mov
pop
cmp
add
dec
xlat
in
popa
test
jp
or
pop
add
mov
scas
fwait
lds
xor
mov
cltd
sub
orb
jns
loope
dec
mov
jnp
js
andb
jg
psubq
sbb
push
push
xchg
push
fadds
sub
mov
cmp
iret
xor
inc
rclb
mov
jnp
dec
pop
sbb
dec
pop
adc
into
xor
call
sub
imul
mov
push
xor
add
ja
popl
lret
mov
aam
pop
loope
mov
mov
xor
mov
mov
rorb
movsb
shl
sub
cli
xchg
lret
mov
call
ljmp
sbb
xchg
add
add
lods
lahf
clc
push
jae
sbb
sbb
push
pushf
jmp
and
pusha
dec
xor
das
adc
add
fnsave
mov
cmp
mov
cltd
ret
dec
push
gs
out
push
and
jns
js
insb
xchg
loop
fsts
clc
stc
xor
pop
sub
popa
sahf
or
jno
mov
mov
xchg
mov
lahf
dec
int3
testb
adc
mov
out
imul
mov
inc
subb
fistpll
jae
or
xor
stos
adc
mov
or
imul
int
xor
xchg
rolb
mov
sarl
jnp
mov
jge
adc
inc
scas
cwtl
jne
fdivp
call
push
add
mov
ret
mov
mov
mov
jg
pop
fbstp
aad
cmp
or
adc
stos
cltd
sbb
test
popf
fisubrs
pusha
mov
inc
mov
pop
add
jns
inc
out
mov
orl
sbb
cs
cmp
cwtl
incl
push
push
push
pusha
dec
push
insb
pop
cmp
stc
fsubrs
sub
in
sub
push
adc
and
cwtl
test
aaa
push
sub
pop
faddl
orl
mov
daa
adcb
mov
mov
sbb
push
cmpsb
adc
fistps
repz
clc
xchg
mov
mov
xor
add
aam
jns
rcrl
sub
outsl
and
jns,pt
loopne
hlt
mov
aas
xor
xchg
in
ds
and
and
cltd
inc
int3
dec
stos
push
add
loope
out
hlt
rol
xchg
shrl
xchg
xor
sub
inc
shrb
push
sbb
das
adc
cmp
add
sub
jb
fidivrs
mov
add
push
push
pop
push
inc
jge
js
clc
call
or
jbe
mov
popf
sub
jb
popf
std
sub
call
or
adc
mov
movb
sub
out
outsb
fsubr
mov
pop
loope
mov
jo
push
cmp
int
jmp
testb
scas
out
jl
jp
add
cmovo
dec
sub
push
sub
mov
pop
jmp
lret
pop
or
call
jo
or
push
jo
pop
lods
mov
mov
xchg
dec
cmp
inc
adc
enter
pop
or
movsb
scas
push
outsb
loope
lock
jp
sbb
out
jl
jge
push
ret
mov
movsl
fnstenv
dec
lea
icebp
jb
loopne
sub
adc
xor
mov
dec
mov
push
call
hlt
push
popa
pop
jb
xchg
sub
jbe
mov
stos
add
mov
pushf
lret
add
mov
and
int3
std
std
add
cmp
stc
ja
repnz
cli
xchg
enter
loop
xor
ficoms
lock
dec
mov
inc
notb
dec
xor
outsl
and
enter
movsl
lea
sub
daa
mov
mov
xchg
cmp
sahf
and
jbe
jo
push
lea
mov
mov
std
out
pop
xchg
idiv
inc
xchg
dec
cmpsb
dec
pushf
stos
jae
out
fldenv
imul
cli
jbe
int3
push
mov
pop
cmp
test
sub
daa
je
mov
mov
flds
loopne
rcr
std
imul
fxam
add
mov
mov
sbb
or
jle
cs
mov
cmc
cmc
repnz
je
lahf
xor
repnz
stc
pushf
jg
mov
sarb
out
sbb
sub
mov
dec
cmp
or
ja
cmp
xor
jl
xchg
out
sub
xor
insb
mov
dec
sarb
xchg
mov
inc
stos
dec
xlat
mov
add
inc
sbb
mull
xchg
movsl
push
jns
xor
test
fsin
adc
mov
jmp
mov
push
jl
loope
in
push
adc
xchg
rcll
sub
mov
je
in
hlt
mov
xchg
lock
leave
daa
add
add
lcall
adc
jne
dec
addr16
aam
out
push
xchg
fnclex
jne
in
ret
cli
adcl
lret
mov
and
jmp
mov
jbe
push
xor
mov
jae
aad
jp
and
or
pop
jge
inc
or
pop
aam
mov
sbb
lahf
je
cmp
sar
daa
adc
sarb
aam
stos
add
bound
xchg
inc
sub
xchg
insl
push
sub
mov
jae
jmp
jns
mov
cltd
outsl
sbb
test
adc
sub
lcall
cltd
pop
data16
inc
das
test
inc
fisubrl
mov
orl
loop
dec
mov
ret
push
push
adc
mov
add
ret
ljmp
lcall
lock
mov
pop
leave
pop
lock
fnstenv
inc
test
sbb
mov
ret
push
sahf
push
or
imul
jns
mov
pop
xor
sbb
aam
lret
pop
add
sbb
mov
in
xchg
arpl
dec
ret
test
xchg
int3
jns
ljmp
incl
inc
cmp
pusha
push
daa
movsb
and
movsb
or
xor
lea
fstl
mov
ret
psrlw
sti
stos
lret
rcrb
lds
push
and
mulb
adc
fistps
clc
jge
lods
in
cmpb
call
mov
movsb
jl
add
and
inc
mov
mov
scas
mov
gs
inc
inc
and
divl
sub
jg
jl
mov
ror
fcomp
sub
xchg
pop
out
call
xlat
xchg
xor
subb
pusha
stos
mov
repz
and
pusha
add
push
imul
popw
andb
dec
or
and
pop
xchg
imul
xchg
xchg
pop
sbb
add
test
xchg
aam
stos
mov
dec
dec
fnstenv
fldenv
push
int3
stc
cmp
sbb
into
adc
adc
jns
syscall
rolb
pusha
test
jo
clc
pop
xchg
ficoml
xchg
dec
add
push
mov
cld
mov
mov
sbb
xor
icebp
and
push
pop
push
test
pop
mov
icebp
cmp
sahf
cld
insl
or
jne
mov
fistl
aam
mov
cmpsb
lret
adc
mov
rclb
mov
test
adc
mov
lret
ss
clc
sub
daa
ret
jo
je
mull
mov
xchg
bound
es
imul
stos
push
leave
in
fdivl
js
out
sahf
ljmp
test
out
inc
lcall
dec
ficompl
es
dec
mov
push
jb
imul
jmp
xor
cltd
adc
movsb
push
inc
xor
jmp
pop
mov
and
je
sti
pop
adc
sub
pop
jbe
jb
add
nop
sbbb
cs
arpl
fisubrl
jge
divl
enter
aad
push
jle
or
cmpsl
arpl
and
or
pusha
pop
cmp
testl
fnstcw
bound
out
push
jae
mov
mov
cmc
jbe
add
mov
jnp
cltd
pop
sbb
pop
and
out
fimuls
imul
cmp
movsb
sarl
pop
pop
std
adc
or
sti
sbb
pushl
xchg
inc
cmpsb
sbb
nopl
or
xor
divb
mov
cltd
inc
push
aam
movsb
jnp
jbe
cmp
test
aas
stos
jo
mov
das
call
insl
pop
pop
dec
insl
pop
outsl
out
into
cs
push
frstor
or
dec
or
jae
push
loopne
int3
cli
ds
adc
aaa
bound
jae
ljmp
dec
scas
xchg
std
adc
punpckhdq
or
lea
xchg
and
or
test
nop
and
popf
or
dec
pop
popl
imul
jb
mov
ja
fcmovnb
dec
pop
and
mov
fistpl
add
sti
pusha
dec
loop
cmp
orb
mov
jae
push
sbb
mov
mov
nop
cmp
sub
cmp
aas
sbb
lret
pop
inc
loop
pop
orl
jp
pop
pop
into
in
push
js
daa
aad
inc
scas
xchg
sbb
mov
icebp
pop
cmpsl
mov
xchg
cwtl
sub
fwait
mov
aad
cs
jp
ret
dec
xchg
jg
mov
leave
cld
and
lret
scas
mov
pop
adc
ds
imul
lds
sub
or
mov
adc
loop
ret
dec
lods
and
mov
lods
cmpl
insb
fs
and
adc
inc
jae
into
mov
or
mov
movl
addb
pop
out
ds
add
insl
das
sub
push
dec
push
cwtl
iret
jmp
xor
xor
xor
mov
inc
movsb
clc
pop
mov
mov
shl
pusha
push
mov
mov
push
out
xorb
int3
xchg
cld
ja
les
sub
adc
xchg
jnp
push
inc
xchg
push
mov
cmpsb
movsl
rorl
aam
xchg
fs
je
or
imul
or
cmpl
sub
mov
leave
mov
xchg
xorl
repnz
push
jb
push
cmp
nop
push
loope
lret
mov
sbb
adc
in
fwait
lea
in
mov
xchg
mov
loopne
sub
fldenv
test
stc
popa
test
imul
or
mov
pop
test
in
sbb
xor
jmp
into
aaa
xchg
insl
mov
ss
sbb
shrl
imul
int
lcall
je
adc
popa
les
mov
leave
push
cmp
iret
je
cs
cmc
dec
or
add
cmp
sbb
jge
push
and
mov
push
test
cli
inc
int
xor
jmp
inc
lock
mov
daa
and
enter
fnstcw
iret
push
jmp
and
dec
pop
lcall
mov
lcall
add
and
fbstp
loopne
bound
and
dec
dec
int
stc
xor
adc
aas
pusha
dec
rclb
lahf
rcll
nop
hlt
push
pop
cwtl
pop
add
cld
cmp
pop
sub
shlb
sub
mov
ljmp
int3
iret
mov
repnz
mov
fmul
decl
pop
and
movsl
xor
sti
mov
test
mov
lcall
ss
adc
aaa
xchg
sarl
mov
pop
add
and
mov
popa
pop
and
mov
cmp
int3
push
fistpl
jge
jp
add
enter
loope
test
mov
mov
or
adc
test
fs
mov
mov
mov
test
xor
ret
inc
add
hlt
mov
daa
mov
fwait
cld
xchg
push
loop
cmp
or
das
push
rclb
ficomps
aam
pop
sbb
outsb
xor
dec
adc
sti
cld
shl
jno
gs
sbb
cmpsb
xchg
pop
je
scas
jmp
and
and
ret
fcoml
sti
inc
xchg
or
pusha
cmp
cli
mov
jle
push
sti
cmp
pop
shl
adc
xor
cmp
fwait
add
sbb
ror
lret
jno
in
shll
sub
pop
dec
or
or
in
sbb
mov
mov
je
ds
pop
mov
je
addl
lret
jb
or
jecxz
outsl
inc
aaa
dec
pusha
aam
test
shlb
pop
nop
pop
jb
xchg
adc
push
dec
js
xchg
mov
stos
and
xchg
scas
repz
clc
adc
xor
adc
addr16
scas
push
fldcw
dec
and
push
sbb
pop
repz
sbb
out
sbb
jnp
or
aam
sti
repnz
nop
xchg
hlt
imul
xchg
pushf
adc
lock
les
loopne
mov
out
icebp
jmp
ss
movsl
add
stc
and
cs
cmpsb
shl
pop
imul
mov
jnp
popl
shlb
pop
xchg
cltd
push
imul
je
out
jge
movsl
adc
bound
mov
adc
aam
divl
enter
mov
ss
fbld
out
mov
push
in
ror
ret
adc
imul
test
jp
inc
cli
aas
jp
icebp
pop
test
mov
lret
sbbb
rol
sti
and
mov
push
jl
rorb
cwtl
mov
stos
hlt
in
into
sub
mov
and
dec
iret
xor
xchg
insb
mov
xchg
notb
pop
pop
aas
push
push
fsubl
fwait
mov
dec
jb
or
shrb
dec
fsubs
hlt
add
sub
cmc
es
addr16
stos
push
dec
shrl
jne
gs
jnp
mov
jne
in
out
insb
fstps
mov
call
pop
pushf
jmp
sahf
aad
pop
push
mov
cmp
das
pusha
add
dec
add
leave
sbbb
dec
lds
scas
cltd
lret
lods
jp
cmp
loopne
xor
daa
loope
pop
cwtl
ss
jbe
outsl
mov
sub
add
imul
fidivrl
mov
inc
fldl
jge
cmp
pusha
std
clc
int3
sbb
xor
test
cld
rclb
mov
lods
gs
mulb
leave
rol
arpl
jecxz
cli
mov
xor
sbb
push
shll
cltd
imul
mov
lock
sbb
push
xchg
lods
or
into
icebp
dec
in
sub
mov
add
loopne
jle
dec
mov
js
adc
and
stos
sub
dec
pop
enter
xor
sbb
es
inc
fistpl
nop
cwtl
shrb
out
cmp
xchg
inc
das
incl
jno
outsl
jae
push
dec
adc
aaa
cltd
mov
lret
nop
test
fdivp
mov
outsb
jle
test
out
pusha
stc
gs
je
das
pusha
fisttpl
mov
and
movsb
xchg
arpl
pushf
fucomip
jo
arpl
in
dec
pop
pop
push
popa
mov
mov
and
sbb
loopne
out
lock
sub
sbb
repnz
push
inc
aas
jg
jge
sbb
mov
dec
cs
movsl
jb
iret
stos
sub
das
xor
fmull
sahf
push
scas
rclb
dec
jnp
idivb
sbb
add
lea
test
push
mov
cmp
frstor
out
xchg
add
push
xchg
mov
or
adc
pop
inc
xlat
jne
mov
jge
out
aam
cmp
inc
jl
inc
xchg
or
dec
ja
mov
sub
stc
enter
push
in
cmp
dec
pop
xor
mov
shlb
xchg
loope
add
push
std
cmp
push
mov
xor
divb
push
sbb
fisubs
movsl
xor
das
xchg
jo
pusha
jns
or
mov
xor
popf
fdivr
loop
jl
mov
nop
inc
jae
js
aas
sub
jbe
lds
pushf
je
sub
mov
sbb
sahf
cmp
sarb
mov
stos
cmp
call
fs
push
jecxz
pop
lods
cwtl
cli
dec
inc
scas
ret
adc
icebp
pop
orb
mov
cmp
push
cmp
scas
mov
insl
loop
cld
mov
std
fdiv
xchg
movsb
pop
mov
roll
dec
rcrl
popf
lret
mov
mov
fstpl
inc
sub
mov
add
push
into
mov
cltd
dec
arpl
xchg
sbb
adc
push
test
add
in
inc
jg
into
stc
inc
mov
dec
jno
leave
ret
nop
ss
leave
lock
or
adcl
sbbb
mov
out
adc
lret
ja
mov
and
add
icebp
and
aam
mov
stc
cmp
fs
popa
ficoml
mov
mov
aam
pop
xor
adc
or
jns
rorl
les
icebp
mov
repz
leave
fdivl
dec
add
and
mov
mov
xor
adc
call
and
push
xor
dec
push
mov
movsl
sub
test
jp
dec
fdivrs
lods
mov
aad
mov
xchg
sahf
vmptrst
xor
cmp
pop
in
push
into
adc
lds
cmp
mov
push
gs
sub
pop
lock
mulb
cwtl
aas
inc
lods
push
inc
xchg
aas
inc
popl
dec
inc
scas
lret
push
fstps
and
cmp
add
std
jnp
inc
sub
mov
dec
les
jp
lret
mov
aam
adc
mov
insl
dec
test
push
mov
and
rorl
pop
sbb
push
xor
in
dec
xchg
bound
inc
dec
pop
push
iret
pop
inc
cmp
sub
ret
repz
scas
les
lea
push
ret
out
mov
int
jnp
int
xchg
xor
inc
mov
lds
loop
adc
test
out
xor
add
mov
test
cs
les
xchg
pop
sbbb
dec
and
aam
movsl
xchg
xorb
push
adc
mov
xlat
dec
cmp
lods
sub
popf
in
inc
popf
cld
in
push
sbb
cmp
cli
mov
lea
lea
inc
fimuls
mov
sti
out
xchg
sub
mov
movsl
jecxz
sbb
out
pop
mov
mov
or
inc
pop
and
sub
scas
xchg
loope
jmp
dec
mov
fldenv
mov
cmp
mov
outsb
jns
pop
inc
push
fistpll
out
lds
fcomps
dec
pop
or
lods
dec
fnstcw
adc
fistpl
fdivrl
cld
int
fldl
repnz
shll
cmova
push
jp
sbb
ss
nop
std
cmp
movsb
sti
insl
cltd
call
xchg
das
and
int3
mov
dec
or
xor
icebp
cmc
push
js
dec
push
mov
clc
mov
add
or
sbb
pop
hlt
push
cmp
fcom
ret
xchg
pop
idivl
vmwrite
std
ss
xchg
mov
mov
xchg
mov
sub
cmp
mov
fadd
sti
stos
xor
nop
inc
sbb
pusha
std
xchg
dec
xchg
hlt
mov
add
push
in
xor
std
jne
inc
hlt
rol
sub
xchg
mov
xchg
mov
inc
ds
adc
and
les
out
daa
pushf
cld
or
sub
inc
xchg
in
mov
rolb
mov
inc
imul
lret
mov
movl
fnstsw
sahf
sarb
stos
es
subb
sub
sbb
das
scas
rol
pop
lock
xchg
xor
mov
inc
xchg
sbb
pop
imul
loopw
icebp
fdivr
mov
xlat
loope
jbe
push
data16
out
pushf
fiadds
daa
or
int3
add
mov
mov
incl
fisttpll
pop
incl
orb
das
loop
or
dec
fmull
int3
inc
cmp
jae
mov
cmp
mov
and
les
aaa
dec
xchg
fidivrs
mov
and
push
add
mov
jge
xor
shl
adc
lods
push
jp
je
nop
shlb
stos
out
add
adc
jmp
push
pop
add
cltd
add
pop
lret
fsts
aaa
repnz
in
sub
aad
ret
int
and
push
enter
in
jb
xlat
leave
pop
js
jp
inc
int
pop
mov
mov
xor
nop
pop
shrl
aas
xlat
adc
sbb
and
dec
test
add
shrl
xor
lret
imul
cmpsl
clc
pop
fnstcw
jno
scas
xchg
mov
sub
cmc
popf
neg
or
push
cwtl
fidivl
adc
xchg
bnd
stc
cmp
dec
cmc
inc
out
sbb
mov
push
mov
in
stc
or
xor
inc
or
repnz
sub
ret
inc
inc
xchg
push
push
outsl
std
addr16
push
addr16
add
cmp
outsl
imul
xor
xchg
dec
xor
inc
add
mov
push
push
sbbl
ror
orl
push
mov
enter
pop
insb
add
pop
ljmp
pushw
out
jmp
cltd
mov
popl
cld
push
movsl
movsl
cmc
xchg
jmp
outsl
sub
jecxz
test
jne
ljmp
mov
in
dec
jnp
pop
mov
int
movsl
and
les
mov
dec
lcall
scas
push
add
ret
push
mul
aas
test
add
scas
xchg
insb
sbb
sub
jle
push
xor
outsb
enter
jge
cmp
inc
inc
and
lods
fs
int3
movsb
mov
scas
inc
pop
adc
movsb
or
repz
push
in
cwtl
push
xor
mov
lahf
repz
in
pop
mov
adc
movsb
sbb
and
loopne
popf
sub
jnp
loop
inc
int
sbb
inc
scas
sub
or
mov
mov
ret
dec
call
jmp
add
aas
lret
xchg
fisttps
sub
les
mov
jge
test
mov
push
or
lock
sbb
pop
pop
out
xchg
cli
sbb
in
mov
sbb
sub
ret
sbb
inc
mov
mov
or
gs
mov
cmpb
fstps
mov
rcl
cmc
and
mov
out
mov
int
aam
int3
clc
mov
aam
in
insb
repnz
mov
std
imul
adc
mov
cmp
xor
test
lret
jecxz
mov
push
jl
lds
or
adc
sub
cmpsl
stc
pop
mov
scas
dec
cmp
call
sbb
inc
adc
addb
cmp
inc
int3
das
mov
test
xchg
mov
hlt
or
add
pop
icebp
loopne
push
lret
imul
xchg
outsl
xor
sub
jg
fistpl
jmp
inc
mov
in
or
enter
mov
jl
inc
jnp
cmp
decl
pop
out
je
ds
loopne
or
add
shl
push
inc
ss
je
jmp
dec
dec
inc
push
cs
pop
div
call
lds
ds
mov
xchg
das
and
pusha
jo
sub
lea
mov
cmpsb
mov
and
fdivrl
adcb
adc
cwtl
jb
xchg
ja
add
push
mov
popa
mov
shll
notl
mov
lret
sub
jno
dec
cmpsb
popf
out
jne
mov
and
sbb
jno
bound
and
test
in
std
and
repz
dec
inc
dec
lret
test
aas
sbb
push
int3
cmp
and
bound
dec
fstl
cli
pop
pop
sub
adc
aad
dec
inc
sbb
imul
test
xor
rcl
cwtl
outsl
cmp
ret
jno
and
xchg
insb
push
testb
les
pop
mov
add
mov
xchg
movsl
cmp
and
or
in
lock
xchg
mull
inc
icebp
test
fistps
adc
or
dec
inc
and
push
aas
insb
adc
cmpsb
jb
cld
push
push
mov
and
pop
in
dec
sub
cmp
and
inc
fsts
into
push
mov
ret
fimuls
cmpsl
xchg
dec
add
mov
lret
je
adc
cld
xor
adc
inc
popf
dec
inc
mov
mov
or
adc
mov
pop
mov
push
push
jecxz
lock
dec
cmp
cmp
dec
ret
aad
lods
dec
pop
push
ds
pusha
mov
sbb
adc
cwtl
in
and
inc
repnz
add
mov
insl
xlat
inc
sbb
popl
subl
imul
cltd
in
xchg
xchg
add
out
sub
push
ficompl
cmpsb
cmp
jl
pop
mov
lds
les
mov
jne
sbb
sbb
add
push
imul
and
imul
inc
jmp
add
mov
xor
mov
out
jge
pop
aaa
inc
lcall
addr16
inc
shll
sub
sbb
dec
in
iret
addr16
jno
xchg
lds
add
fisubl
mov
loop
sub
cmc
sti
add
xor
pop
cmp
or
xor
sbb
xchg
sub
push
push
movsl
repz
fiaddl
jb
add
cmp
dec
mov
imul
cmpsl
xorb
pop
call
mov
pop
pushf
dec
push
mov
mov
outsl
cmp
mov
mov
call
adc
and
ss
stc
pop
xchg
mov
popa
aad
jl
popa
or
xchg
out
jnp
add
fistl
fst
jno
hlt
adc
gs
cli
inc
inc
mov
test
mov
out
mov
subb
movsb
iret
cmp
fwait
popf
and
pop
jne
cs
xorl
ja
gs
jmp
push
adc
mov
cmp
adc
adc
sub
inc
mov
pop
jle
dec
orl
cltd
adc
mov
lret
mov
cld
in
cmp
inc
jns
ss
jp
mov
xor
popa
pop
rcrb
or
mov
jbe
lahf
ret
jnp
call
jle
icebp
lcall
enter
inc
in
cmp
jecxz
inc
mov
inc
lret
mov
lret
pushw
lret
jnp
arpl
mov
add
shll
aas
pushf
xchg
and
sarl
fidivrl
rcr
in
xor
shll
rorb
les
pop
aas
shl
dec
xor
mov
test
cld
inc
nop
xor
jne
sbb
inc
hlt
cmp
xor
jge
fcom
pushf
adc
mov
ds
mov
out
mov
and
push
out
pop
jmp
and
hlt
sbb
xor
test
ror
outsl
les
gs
ret
aaa
push
cmp
pop
inc
add
push
or
xchg
mov
xor
cmc
not
jbe
dec
imul
mov
pop
push
data16
sbb
and
xchg
fidivl
jmp
dec
xor
lahf
or
cli
movsb
ret
cmp
in
ret
pop
loop
or
test
lret
test
adc
shll
sbb
cmp
mov
mov
sbb
mov
sbb
lahf
fnstsw
push
insb
and
jle
adc
xchg
leave
and
shlb
and
xchg
movsl
xchg
repnz
rclb
jne
mov
mov
mov
push
ljmp
repnz
sub
ss
sub
call
aad
pusha
cmp
cmp
je
mov
stos
cwtl
hlt
cmp
fnstenv
addr16
movsb
dec
out
std
push
adc
ds
mov
mov
movsl
fistpl
sub
out
mov
icebp
stc
daa
pop
jecxz
outsl
das
push
pushf
sbb
or
jne
jb
sahf
movsb
test
scas
pop
stos
pop
add
daa
jecxz
imul
push
cmp
push
or
lds
sub
xchg
fs
mov
adc
dec
in
addr16
rolb
sbb
mov
push
in
rolb
sbb
mov
mov
jp
xchg
bound
roll
popa
stc
jae
xor
xor
adc
adc
into
and
mov
mov
push
inc
push
xor
mov
push
and
mov
fimull
mov
add
push
inc
icebp
xchg
cs
call
xor
xchg
mov
ret
in
mov
popf
lods
cmpsl
mov
lods
ret
andl
loope
jno
inc
and
or
add
mov
or
nop
and
pop
adc
cmp
xchg
sbbl
mov
pop
cmove
lret
outsl
ficompl
jne
ror
push
ja
movsb
push
idivl
arpl
je
icebp
pusha
pop
sub
push
stos
repnz
loopne
push
adc
in
out
in
mov
pop
leave
sbb
bound
test
popf
inc
or
pop
ret
jbe
mov
dec
gs
sbb
or
mov
sbb
add
int3
pop
dec
fstpl
out
cld
movsb
es
and
mov
pop
dec
cltd
int3
sub
cmp
test
jecxz
mov
js
sbb
scas
mov
xchg
std
bound
cmp
mov
les
pop
jno
mov
je
out
loop
adc
mov
mov
xor
aam
xor
mov
xchg
fdivrs
cmp
adc
xor
and
jge,pt
mov
pop
pop
cmp
movsb
pop
xor
xchg
xchg
fnstsw
cld
sub
lock
or
pop
test
inc
loop
sbb
call
je
sbbl
cmpsl
or
jns
loop
adc
xor
test
movnti
cmpsl
out
sbb
mov
jmp
xchg
nop
adc
sbb
add
adc
cmpsl
sub
fidivrs
sbb
lret
shll
out
lret
inc
push
daa
sub
xor
std
sub
mov
sbb
lcall
xchg
jo
mov
loop
shlb
mov
lcall
sub
xchg
and
adc
cmp
clc
mov
cmp
cmp
shlb
sub
or
rcrl
dec
xchg
scas
sti
mov
push
pop
loopne
imul
fnstcw
dec
adc
mov
lahf
arpl
jmp
inc
fldl
cmc
add
sub
fwait
and
push
fs
ja
iret
clc
test
cwtl
pusha
xchg
push
dec
mov
inc
or
pop
les
mov
jbe
sbb
bound
mov
and
rcl
and
xchg
aaa
lcall
cmpsl
mov
sub
inc
xor
mov
xchg
sub
es
dec
xchg
push
je
jno
or
jle
inc
fstl
jp
inc
xorb
cmp
jmp
jae
jp
cld
das
or
aam
sbb
xorb
adc
in
ss
cli
push
mov
jae
mov
push
iret
pusha
pop
jb
decb
xorl
in
and
les
xor
out
mov
sub
shrl
xor
rcrb
mov
lods
xchg
inc
jo
insl
or
or
pusha
push
call
data16
sub
lds
ljmp
mov
fnstsw
data16
sbb
cld
fadds
push
enter
andl
test
push
rcrl
movsb
xchg
dec
push
cs
xor
icebp
cltd
lahf
jmp
xor
push
xchg
leave
push
mov
and
popa
sti
ret
jmp
and
push
idivb
jle
sub
add
outsb
into
lret
pop
mov
stc
or
fdiv
stos
add
shlb
cs
sub
test
stc
or
mov
mov
int
sub
jge
in
or
dec
rcrl
mov
fidivs
xchg
std
leave
lods
dec
xor
lods
stc
or
insl
pop
scas
cmpsl
mov
fsubrp
nop
add
or
adc
aam
dec
mov
and
mov
jo
lahf
ja
aaa
xchg
dec
xchg
lahf
in
pop
mov
in
xchg
test
rcll
and
pop
push
les
ret
sub
mov
mov
mov
sbbb
mov
imul
mov
push
divl
xchg
int
mov
sub
mov
xorb
mov
push
je
and
mov
pop
xchg
mov
mov
popa
popa
inc
test
xchg
lea
sub
dec
inc
paddq
pop
inc
jae
add
jl
repz
jae
jge
jbe
push
stos
pusha
push
fsubs
jae
cld
repnz
outsb
xchg
imul
jo
push
bound
xlat
loopne
orl
jmp
pop
lds
inc
mov
mov
je
popf
mov
xorl
imul
sahf
repnz
pop
jbe
cmc
sbb
shll
lock
pop
jge
leave
inc
mov
int3
in
cld
mov
shll
mov
dec
cmp
in
jge
fdivrs
ss
mull
jb
jg
inc
js
loope
bound
add
pop
xchg
push
mov
push
stos
adc
adc
pushf
and
les
cmpb
test
lret
xchg
je
popf
dec
and
sub
ljmp
shrl
and
pop
pop
arpl
sbb
std
pop
jo
xchg
mov
and
inc
inc
inc
adc
inc
jecxz
push
aam
push
mov
daa
jmp
xor
pop
xchg
decb
adc
cmp
incl
nop
sub
cli
jle
push
idivb
mov
stos
mov
lds
aaa
aaa
inc
in
gs
in
stos
dec
addr16
ficompl
mov
mov
sbb
outsl
pop
and
sbb
pop
test
dec
mov
pop
repz
jmp
xchg
mov
out
clc
je
je
mov
or
push
int3
or
xorl
test
mov
ja
dec
scas
clc
add
push
jg
push
or
pusha
and
call
mov
mov
and
lret
cltd
or
cmp
lock
dec
stos
mov
lods
jne
add
cmp
mov
ret
sub
mov
xor
int
cld
xchg
add
imul
add
mov
in
rcrb
xchg
je
jbe,pt
and
int3
scas
inc
dec
and
cmp
out
sub
ljmp
bound
jae
jle
mov
stc
shlb
pop
fwait
mov
pop
mov
lds
aaa
roll
inc
arpl
int
popa
lcall
inc
stos
js
mov
out
iret
pop
mov
mov
add
das
sub
jne
mov
scas
bound
mov
push
enter
lret
add
mov
add
xchg
roll
cmpsl
cmp
sub
ret
call
btc
jge
add
jo
jbe
dec
enter
hlt
stc
cmp
xchg
sub
push
mov
jns
addb
aam
out
in
xchg
push
pop
mov
sbb
jb
jnp
or
aas
jbe
das
or
push
jae
es
sbb
leave
test
xchg
sbb
pop
mov
loopne
adc
mov
ss
cltd
jl
out
loop
add
fdivs
xor
xor
and
jmp
ds
jnp
clc
mov
decb
pushf
dec
mov
pop
cmp
adc
into
jl
xchg
jae
dec
push
jb
rcrl
lea
jns
mov
cmp
lahf
in
fadds
sbb
test
dec
xor
dec
sub
sbb
cmp
fnstcw
mov
fsubp
scas
inc
data16
movsl
jbe
iret
adc
add
cmpsb
rcll
mov
in
out
mov
sbb
adc
sub
xorb
lret
dec
or
xor
out
test
movsl
aam
pushf
ss
adcb
nop
jb
shrb
dec
xor
es
xchg
push
adcl
je
xchg
xor
jnp
adc
in
or
decb
movsl
sub
sub
loope
jns
mov
je
mov
jae
push
fistps
dec
pop
test
inc
jl
dec
pop
xor
repz
sbb
push
cltd
sbb
mov
mov
bound
mov
xchg
icebp
ja
mov
mov
das
sbb
and
pop
mov
not
insl
cltd
push
sbb
mov
loopne
mov
cltd
sub
and
aam
and
rcrl
ss
cltd
jmp
outsl
les
js
setb
pop
in
lahf
mov
ret
or
daa
jg
mov
sbbb
aad
cmp
pop
sub
jnp
inc
mov
movl
stos
leave
cmp
jl
xchg
mov
push
pop
aas
ja
das
call
ljmp
sbb
jle
sub
mov
arpl
adc
jo
insb
lock
push
popf
out
dec
adc
decl
mov
mov
sub
push
mov
inc
movsl
xor
gs
xor
sbb
rcll
mull
aas
ret
fists
xor
pop
xor
loopne
mov
fscale
bound
mov
addr16
mov
or
cwtl
shlb
cli
stc
adc
fmuls
in
cmp
testl
dec
jmp
sub
pop
push
push
adc
pop
data16
xchg
cmp
fisubs
cs
mov
dec
scas
cli
ret
gs
sbb
mov
into
or
lcall
mov
xor
shll
mov
push
mov
aas
xor
lret
icebp
aad
push
les
lret
push
in
cmp
out
mov
mov
ja
fcoms
es
push
xchg
and
inc
mov
es
sub
jg
cmp
fsubs
pop
sub
mov
mov
fcmovnb
mov
mov
cmp
or
adc
mov
xchg
fimull
xorb
addr16
inc
pop
sbb
mov
push
rcrl
jne
inc
xchg
and
popl
dec
outsb
or
jb
xchg
loop
adc
call
push
filds
mov
cli
popa
imul
loope
mov
xchg
stos
inc
pop
push
mov
cmp
sub
lds
sarb
jns
mov
nop
lods
data16
mov
lret
ficoml
push
bound
pop
xchg
add
pop
mov
adc
jbe
test
bnd
jnp
adc
pushf
mov
lds
das
add
jno
ja
std
out
test
lret
pushf
stos
shl
lods
cmpsb
mov
cmp
jo
in
cmp
mov
xchg
adc
inc
adc
icebp
ret
fcomps
inc
out
mov
das
sub
mov
iret
push
sti
lret
add
cmpb
inc
test
xor
add
push
xor
arpl
ds
fidivrs
xor
jmp
mov
cli
cmp
sar
out
jns
jne
cmc
and
movsb
xor
repnz
cwtl
push
addr16
int3
xchg
sub
sbb
dec
dec
mov
add
lcall
mov
and
dec
lods
adc
movsl
in
dec
icebp
cmp
enter
aam
lock
adc
imul
and
xor
xchg
cld
shrl
push
hlt
test
cmp
js
ucomiss
data16
data16
inc
mov
addr16
ret
adc
adc
sbb
sbb
ss
add
repz
sub
or
push
pop
mov
jl
ja
mov
sarb
test
mov
enter
ljmp
outsb
xchg
mov
sbb
lret
in
decb
cld
adc
mov
movsb
mov
pop
iret
int3
jg
xchg
out
arpl
insb
push
xchg
popf
in
jne
icebp
ja
push
push
push
loopne
test
imul
rorl
push
xchg
push
sarl
pop
xor
lods
pusha
or
xchg
lahf
lcall
testb
jmp
xor
neg
mov
gs
mov
or
dec
addb
rorl
cmp
stos
call
jmp
nop
mov
inc
push
int
mov
shlb
fdivrl
mov
mov
xchg
movsl
iret
xor
andb
aaa
imul
jo
je
dec
adc
movsl
imul
add
divl
dec
cmpsb
xchg
lods
nop
lcall
adc
inc
jl
andl
dec
rcrb
mov
mov
cmp
inc
jmp
insb
jle
pop
adc
in
jmp
rol
or
sub
andl
cmpsb
mov
cmp
and
aam
fnstcw
or
outsl
xchg
or
push
xlat
pop
scas
jg
nop
notb
inc
pop
mov
adc
in
cs
ss
jge
add
aaa
inc
and
inc
out
xlat
out
clc
push
mov
fisttpl
sahf
push
pop
fsubs
arpl
scas
push
imul
pop
lahf
imul
aad
and
mov
test
adc
fldl
repnz
mov
xchg
imul
aaa
jns
in
mov
jecxz
scas
mov
cmp
mov
sahf
push
jmp
cmpsl
mov
mov
or
xor
inc
roll
lret
fcmovnu
popa
inc
cmpsl
dec
iret
pop
fisttpl
aam
hlt
cmp
pop
out
rorb
and
pop
repz
push
jecxz
xchg
jne
iret
adc
rorl
pushf
add
xchg
mov
adc
jmp
rclb
mov
pop
mov
adc
outsb
lret
mov
mov
movsl
xchg
pushf
es
jne
sbb
cmpsl
cli
aaa
andb
stos
dec
sub
ljmp
mov
out
scas
in
cs
sbb
adc
jb
dec
push
mov
or
dec
xchg
pop
jns
jg
fistpll
sbb
fdivs
in
push
stos
adcl
add
loop
bound
mov
ret
shll
inc
stc
push
addr16
adc
cmp
sub
jmp
inc
ret
push
fimuls
in
mov
mov
shlb
jmp
jge
dec
sbb
dec
adc
jo
test
insb
js
pop
inc
clc
ljmp
inc
push
movl
sbbl
cmp
sbb
dec
jl
push
jp
lahf
mov
mov
das
jp
inc
in
or
mov
div
ja
push
bound
je
into
push
push
pop
jbe
xchg
fsubrl
iret
mov
mov
mov
or
pop
adc
mov
jp
sbb
dec
xorb
addr16
mov
fidivl
push
or
push
cmp
lods
push
mov
xor
adc
loopne
or
mov
fldcw
jno
shl
mov
mov
jle
mov
daa
pop
sti
enter
aas
gs
pop
mov
or
pop
in
mov
jno
cmp
jmp
pop
insb
xchg
add
xchg
xchg
int3
cmp
xor
pop
scas
sub
fsubl
gs
inc
pop
movd
out
leave
addr16
adc
sbb
dec
rclb
adc
rcll
adc
cmpl
or
lods
jae
ljmp
into
xchg
adcb
fistl
fistpl
lahf
loop
imul
pop
sbb
adc
inc
subb
out
xchg
lods
sub
cmp
pop
adc
lds
scas
mov
pop
dec
mov
cli
push
add
mov
dec
hlt
cmp
add
sub
cwtl
call
cltd
adc
pop
mov
mov
adc
push
xlat
fwait
jecxz
xor
mov
imulb
js
shrb
rol
xchg
das
ror
movsl
adc
jmp
dec
aas
out
ja
in
lea
fst
pop
xchg
test
in
inc
call
add
sarl
dec
loop
mov
jmp
sub
adc
movsl
lods
cli
bound
cmpsb
mov
mov
adc
sub
sbb
mov
mov
cmp
and
xchg
and
fdivr
scas
jl
jg
lods
adc
push
mov
out
cmpsl
andb
cmp
push
mov
das
sub
sbb
pop
ret
rolb
decb
mov
add
imul
cmpsb
imull
ret
cmp
in
insl
mov
inc
loope
icebp
movsb
sbb
mov
sub
mov
mov
pushf
pop
cld
nop
inc
outsb
sbb
js
pop
inc
out
lds
or
xchg
xchg
mov
outsl
loope
inc
aad
cmpsb
popf
jns
dec
pusha
jl
xchg
mov
jl
mov
lcall
sub
xor
lock
and
int
dec
pop
jmp
and
into
cmp
into
jb
rclb
ret
dec
inc
loopne
and
adc
mov
inc
out
jge
or
dec
fldcw
movsb
mov
scas
test
insl
jae
loopne
shlb
cmp
icebp
ficomps
leave
xor
add
adc
in
sahf
mov
nop
mov
adc
dec
fwait
jbe
fsubs
stc
add
call
xor
jg
fwait
cltd
cld
fs
ja
fwait
mov
rclb
and
lahf
fistpll
pop
and
aam
and
roll
mov
sbb
popf
dec
mov
and
xchg
cmpsl
pop
std
lock
sub
lds
es
nop
mov
insl
jg
jmp
mov
lret
xchg
inc
jmp
inc
aam
mov
stos
dec
sbb
sbb
push
mov
mull
popa
jbe
in
xchg
cwtl
sub
mov
cld
hlt
or
testb
push
dec
cmc
sti
fcompl
popf
xchg
push
movsl
jo
jno
mov
xchg
or
mov
and
dec
jmp
adc
pop
cmp
inc
pop
mov
sbb
inc
sbb
xor
test
sahf
icebp
mov
dec
jb
leave
int
inc
sbb
mov
push
aas
mov
pusha
dec
mov
popf
lods
and
mov
scas
lahf
movl
stc
xor
lea
in
pushl
xlat
add
push
cld
scas
sub
cwtl
int
fcompl
test
fs
ret
mov
ljmp
dec
inc
pop
mov
jmp
and
add
sbb
push
push
roll
jg
bound
daa
ja
lock
imul
stos
cmp
ret
jbe
push
adc
jo
pusha
push
inc
sub
and
pop
pop
add
mov
xor
lock
mov
adc
push
xchg
or
out
mov
mov
inc
cwtl
xchg
jle
inc
mov
mov
adc
pop
mov
and
fisubs
push
out
sbb
sbb
mov
jge
enter
pop
and
cld
aas
mull
insl
lahf
sub
shll
mov
mov
sahf
addr16
mov
pop
push
lods
inc
mov
sbb
ds
push
ret
sub
out
mov
decl
mov
sub
aaa
popa
xor
sbb
pop
clc
mov
ret
adc
add
xor
xor
add
aaa
cmpsb
mov
xor
ficompl
or
fisubrl
pop
xlat
daa
jbe
cmp
sarl
xchg
outsl
dec
push
adcl
cli
xor
or
cmpsb
jb
pushf
cmp
out
rcrl
outsl
xor
popf
lret
push
lret
sbb
jno
jns
jno
bound
and
sbbl
sbb
test
push
cmp
aam
xor
pop
call
cld
data16
sub
or
sbb
insb
test
lcall
lods
inc
cmc
jecxz
into
cmc
scas
add
fdivrl
rcr
adc
imul
fcmovu
out
adc
int
fnstsw
or
push
xor
lcall
dec
fmuls
mov
push
cmp
or
sbb
test
or
xor
movsb
xor
scas
jmp
test
pop
inc
daa
sbb
sub
sub
xor
hlt
add
out
mov
sti
call
mov
cld
test
push
aam
das
pop
inc
push
popf
iret
popf
jle
sub
mov
call
pop
lods
or
sub
sbb
push
adc
cmp
mov
test
dec
movsb
mov
fwait
cmpsb
outsl
xor
inc
sbb
repnz
dec
xchg
dec
shl
js
or
inc
cltd
ret
aaa
sti
stos
out
push
lds
jg
dec
push
mov
push
jns
mov
inc
js
pop
pop
mov
sbb
jne
pop
fcmovnbe
mov
or
jo
or
sahf
hlt
dec
subb
pushw
outsb
loop
push
push
xchg
mov
jb
pop
and
and
fwait
loope,pn
jmp
inc
shlb
mov
imul
ja
out
mov
ret
js
cmc
inc
insb
ss
fldl
inc
push
and
inc
lock
ljmp
in
push
cmp
pop
cld
jns
mov
dec
and
in
ret
test
mov
add
dec
imul
cmc
xchg
xor
pop
sbb
cwtl
xor
repnz
and
jb
jnp
jo
push
outsb
xchg
lret
xchg
and
adc
sub
xchg
fldt
sbb
xchg
movsb
orb
xor
xchg
daa
scas
clc
das
or
outsb
cmc
push
mov
cli
call
mov
jns
in
lahf
nop
lret
jg
pop
mov
lods
popa
call
mov
add
data16
loopne
and
pusha
ds
push
aad
mov
fisubrl
cmp
or
pop
sub
stos
fstpl
mov
push
bound
push
mov
or
cmp
adc
push
xchg
cmp
mov
push
cmpl
inc
cmpsl
cmp
mov
scas
add
dec
jmp
xor
and
lcall
mov
and
push
cmpsb
out
push
rorb
pop
icebp
push
adc
cmpsl
xor
das
push
and
or
jmp
push
lods
ss
sti
mov
popf
movsb
iret
in
sbb
iret
stc
lret
cmc
add
test
mov
dec
fildl
mov
mov
call
mov
in
xchg
cs
cmc
inc
and
scas
mov
lock
rcrl
and
cmp
add
inc
aaa
fdivr
pop
pop
mov
xchg
mov
aam
sar
mov
or
scas
flds
nop
dec
mov
cmpsb
data16
dec
jp
jmp
idiv
push
sarb
les
xor
sbb
cmc
cmpsb
or
pusha
cwtl
mov
nop
cmc
aad
js
cmpsl
movsb
cmpb
push
cli
adc
inc
in
or
xchg
fdivs
iret
push
lret
daa
scas
test
push
pop
mov
les
outsb
add
xchg
mov
test
clc
cmp
subb
inc
fwait
sarb
mov
push
je
call
pop
test
fiaddl
cltd
jae
in
xchg
cmp
fwait
out
dec
push
xchg
jb
and
xor
pop
lcall
sub
pop
shl
jno
inc
xor
mov
clc
out
shll
cld
xchg
cmp
je
dec
inc
and
push
cmp
push
call
pusha
add
and
test
xchg
jmp
clc
push
ja
adc
mov
test
dec
jl
stc
xor
fisubl
dec
idiv
pop
subb
xorb
push
ss
aad
add
jb
jmp
mov
mov
xlat
pop
jmp
mov
lock
push
outsb
cmp
notl
inc
leave
xor
out
ja
lods
pop
and
jmp
pusha
push
ss
ret
repz
xor
sbb
ss
inc
insb
scas
push
mov
into
jb
movsb
les
into
popf
pop
mov
shlb
or
leave
push
adc
jnp
mov
sahf
pop
or
jbe
les
push
lds
xchg
mov
xchg
sub
dec
sbb
in
sub
addl
lods
jo,pt
mov
test
ss
sub
mov
mov
xor
jecxz
mov
adc
sbb
push
sbb
lock
jp
sbb
insb
sarb
out
lock
push
int3
mov
mull
mov
cmp
or
inc
xchg
and
pop
lods
xor
std
dec
imul
movsl
fcomps
shrl
gs
mov
and
es
jo
cltd
dec
lret
dec
sub
cmp
xlat
or
mov
sub
jno
cltd
add
dec
stos
fsubs
and
ss
mov
jecxz
sahf
lahf
clc
ret
stos
dec
sar
pop
xchg
cmpsb
jl
and
test
pop
test
addr16
js
pop
jbe
sub
push
jb
xchg
sahf
inc
xchg
stos
or
inc
xchg
add
xchg
mov
and
and
pusha
xchg
jno
mov
data16
inc
lret
jle
lcall
movsl
jmp
jmp
roll
rclb
fs
jge
cmp
xor
lds
test
mov
push
push
fsubs
test
xchg
sbbb
mov
or
mov
test
mov
cmp
jmp
pop
stos
and
jnp
mov
lahf
cmp
icebp
rorb
shlb
roll
and
lods
and
sbb
sti
popf
loopne
popa
ret
mov
loop
cmp
insl
pop
mov
loop
mov
sbb
pop
stc
stc
mov
jno
ja
adcb
lahf
jno
dec
dec
or
enter
add
mov
sub
in
jne
test
add
lods
les
mov
sbb
pop
and
pop
xor
andb
js
test
dec
mov
and
movsl
xor
lahf
lcall
cmp
pop
in
mov
xlat
jmp
xor
jle
pop
push
push
arpl
ja
test
pusha
mov
jb
hlt
pop
jmp
scas
test
fs
xor
loope
sub
cs
loope
mov
lahf
cli
out
fdivp
inc
fld
negl
pop
dec
fwait
mov
leave
pop
dec
into
mov
and
pop
out
ret
insl
sub
sbb
jne
add
push
lcall
push
in
sahf
test
mov
mov
scas
fsubrp
and
jle
sbb
call
inc
sbb
les
and
repz
lods
mov
scas
ret
xorb
aam
jo
flds
popa
aam
cwtl
mov
repnz
add
hlt
dec
mov
push
cmp
or
daa
call
push
sub
inc
mov
jmp
sbbb
inc
add
push
mov
sahf
sbb
push
loop
add
cmp
cltd
cmc
out
cmp
fisubrl
int
ret
sub
pop
fistpl
inc
pop
gs
stos
shl
lods
push
call
int
jo
lret
mov
push
and
dec
dec
lods
cltd
test
inc
and
out
pop
shlb
popf
jae
mov
jo
loope
ror
inc
fists
sahf
rcrl
das
add
imul
ds
lea
mov
inc
cmpsl
lret
sub
push
bound
outsl
mov
fs
sbb
in
pop
daa
andl
imul
lods
outsl
bound
pop
sbb
cli
les
mov
cmp
es
push
mov
daa
shl
dec
stos
fdivs
mov
cmp
loop
out
gs
popf
mov
inc
push
sbb
mov
mov
sahf
jns,pn
mov
pop
sub
lcall
jns
aam
sahf
in
test
imul
mov
mov
daa
mov
adc
xor
pop
sar
movsl
mov
xchg
xor
arpl
xchg
addl
mov
lret
int
mov
in
daa
ss
pushl
or
stos
mov
jno
mov
mov
bound
or
out
rolb
lods
outsb
jns
inc
mov
in
jl
into
test
jnp
lea
sahf
or
loope
mov
pop
dec
adc
ljmp
sbb
jle
daa
mov
movsb
ja
jp
psubw
movb
inc
std
gs
xchg
or
or
dec
jno
scas
ljmp
push
mov
dec
and
movsb
fbstp
call
ss
mov
xchg
dec
inc
xor
jmp
aad
cmp
in
xchg
xor
inc
sub
js
inc
shrd
adc
jp
out
imul
cmp
xor
xor
adc
push
push
clc
daa
ljmp
add
jnp
or
and
mov
cmp
insb
test
movsl
ljmp
int3
pop
push
xchg
jbe
testl
rorl
adcb
sarb
mov
mov
lock
dec
cltd
xchg
jbe
adc
cmpsl
scas
and
orl
xchg
loop
push
cmp
std
icebp
rclb
lret
cmp
fcom
jbe
mov
popa
mov
xchg
pop
ss
xor
mov
in
int
movsl
cmpsl
mov
mov
dec
popa
out
loopne
enter
jg
daa
outsb
subb
mov
jge
mov
sub
outsl
das
cmc
mov
add
mov
outsb
aas
icebp
mov
fcmove
pop
adc
adc
rcr
mov
and
lods
mov
adc
pop
mov
mov
mov
rol
ret
mov
or
add
mov
cmp
pop
mov
sub
movb
imul
imul
out
inc
xor
sub
or
in
jns,pt
push
xchg
orb
sbb
jecxz
out
jmp
in
lret
js
gs
sbb
jno
rclb
dec
mull
mov
inc
jge
xor
call
scas
lock
xlat
adc
push
fsubl
push
in
cmp
mov
lods
arpl
pushf
cli
mov
gs
out
sub
adc
in
adc
pop
mov
push
mov
fimull
xor
or
adc
pop
clc
ds
jae
roll
jo
adc
jge
adc
jge
cld
jns
in
repnz
add
popf
cmp
bsf
pop
mov
dec
pop
fst
scas
mov
push
vmovapd
add
imul
xchg
popl
or
les
insb
and
xchg
push
push
inc
push
jp
and
test
jo
sbb
popf
add
repz
loope
mov
clc
dec
or
inc
mov
or
pop
cld
jbe
add
outsl
dec
pop
lcall
add
pop
adc
mov
pop
repnz
scas
and
mov
adc
add
std
out
jnp
cmpsl
daa
cwtl
daa
stos
jl
fstp
ljmp
ss
addr16
mov
out
das
lcall
pop
jno
movsb
sub
or
aas
lods
mov
inc
adc
mov
ret
xorb
out
loopne
push
idivb
mov
aam
dec
ffreep
test
bndstx
test
xorl
mov
pusha
pop
adc
test
mov
leave
inc
and
mov
pop
faddl
ja
pop
int3
enter
addr16
in
xlat
subl
mov
mov
pand
loope
adc
addb
adc
cmp
and
fs
shrb
and
pop
por
sub
mov
and
dec
add
or
jp
sbb
fwait
inc
into
rcrl
xchg
sub
jb
dec
jmp
push
mov
pushf
nop
jo
enter
lea
xor
insb
dec
jbe
jno
jp
mov
inc
cmp
mov
sbb
imul
mov
nop
sub
cmpb
fwait
push
pop
adc
dec
sti
mov
fwait
adc
push
das
xchg
sub
pop
and
jae
test
sbbl
ds
stos
pop
int3
dec
jecxz
mov
test
or
sahf
sbb
hlt
arpl
in
push
ja
push
dec
mov
fimuls
sub
pop
jl
and
addr16
cmp
inc
popf
shlb
jge
mov
xchg
nop
mov
sbb
out
sti
sub
dec
data16
repnz
pop
test
jbe
sub
mov
leave
xor
mov
cld
adc
mov
jg
dec
pop
jmp
inc
mov
cmp
xlat
mov
jo
ret
enter
mov
iret
add
jp
lods
stos
rcll
lods
jecxz
inc
push
addl
data16
pop
push
jg
mov
push
aas
xchg
cmp
mov
testb
cmp
xor
xor
icebp
mov
mov
insb
dec
fidivl
mov
stos
in
fcoml
insl
xchg
cmovnp
dec
cmc
dec
test
or
into
pushf
push
icebp
mov
out
nop
pop
inc
and
xor
sbb
push
mov
pop
cmpb
out
loopne
rolb
sti
int3
fsubrs
mov
and
or
push
cmp
pop
call
or
arpl
add
jecxz
cld
mov
push
pop
xor
xor
shll
and
imul
cmp
sub
or
cmp
lcall
popf
or
adc
out
cmpsl
fistpll
sti
mov
xchg
adc
and
push
mov
dec
fildll
and
jbe
cld
xchg
jp
stc
mov
adc
add
inc
ret
jmp
cmp
test
push
fwait
stc
and
ja
inc
jmp
pushf
cmpsl
lods
pusha
outsb
jle
cmc
fmuls
and
fbld
ret
push
xor
std
or
pop
lock
faddp
sub
jl
scas
mov
test
imul
jp
jecxz
push
jb
loop
push
je
stos
mov
cmp
enter
outsb
arpl
imul
sti
sbb
das
rcr
cld
ds
jge
xchg
dec
pop
aam
xor
add
mov
mov
jo
jg
pop
fisubrs
es
mov
mov
lods
jo
jne
arpl
shll
adc
dec
ljmp
cld
call
dec
rolb
rclb
jae
push
inc
loope
gs
aas
insl
sbb
inc
scas
push
jle
arpl
push
ja
loopne
dec
imul
fldl2t
cld
scas
xor
push
imul
mov
setbe
lcall
pop
pushf
stc
lret
imul
and
sbb
sub
sbb
loopne
leave
mov
add
sbb
cmp
cmp
ret
fistpll
dec
lods
or
hlt
xchg
cmp
add
ja
cld
mov
roll
in
pop
and
xchg
mov
mov
fdivl
sbb
scas
rol
cmpsl
scas
or
pusha
inc
xor
and
push
adc
test
and
icebp
jno
inc
ret
lret
fbld
mov
bnd
iret
push
in
popf
push
cmp
call
insl
call
sbb
or
dec
dec
lods
pop
sub
add
faddl
imul
rorb
test
mov
adc
xchg
jmp
cmpsl
dec
xor
fs
push
cmpsl
aaa
into
scas
and
ljmp
enter
enter
jne
jp
mov
lret
mov
dec
data16
test
sub
stos
pop
pusha
or
dec
cld
stc
shrl
hlt
xchg
faddl
cmp
cmc
mov
push
in
push
dec
lods
out
enter
xor
aam
into
sahf
cmp
push
mov
push
das
pop
rcl
testl
push
xchg
push
aas
dec
mov
negb
push
push
xlat
inc
xor
inc
mov
lods
xor
jge
xchg
adc
add
push
popa
dec
mov
imul
dec
mov
jae
je
push
movnti
in
cmpsl
fldenv
pop
jg
add
lcall
pop
mov
cmpsl
xchg
pop
cwtl
pop
inc
test
fisubs
mov
out
lock
scas
pop
inc
sub
rclb
inc
pop
sub
jno
adc
or
mull
or
dec
ljmp
push
inc
movsb
push
jmp
sbb
leave
leave
es
test
mov
cmc
in
aam
cmp
mov
inc
xchg
add
fs
adc
lret
vmovntdq
sub
outsb
sub
sbb
push
pusha
dec
push
push
loopne
scas
lcall
jp
rorb
imul
cmp
cmp
jl
inc
cmpsl
pop
pushf
test
xchg
mov
lret
xchg
aad
push
pop
or
xor
push
or
popa
ds
sarl
ljmp
test
mov
pop
insb
mov
xchg
inc
mov
push
in
sbb
imul
test
or
mov
cmpsl
sub
shl
xor
in
cmp
and
loopne
popl
mov
push
fwait
mov
lods
rcll
insl
js
scas
arpl
adcl
in
xor
cmp
sub
mov
icebp
roll
or
mov
jmp
insb
lods
fwait
scas
lahf
sti
cwtl
or
insb
in
dec
or
mov
xlat
js
jmp
out
dec
pop
mov
inc
adc
cltd
out
cmp
ja
xor
ja
shll
adc
loopnew
or
std
outsb
push
xchg
or
dec
add
fsubs
xchg
xchg
test
fistpll
fmuls
jmp
adc
popa
xchg
in
and
or
imul
or
mov
mov
cltd
pop
xor
xchg
push
ret
mov
mov
lds
jp
cmp
in
cmp
or
test
and
movsb
es
jl
lahf
popf
cmpsl
dec
arpl
xchg
add
pop
or
fstl
inc
cld
cmp
das
imul
cmp
mov
les
push
or
inc
inc
adc
cwtl
or
jnp
or
xchg
sti
shlb
mov
stc
xor
mov
aaa
dec
out
fdivl
mov
jmp
dec
xchg
xor
sti
mov
bswap
jmp
lahf
adc
dec
stc
in
pop
sub
out
int
rcll
test
and
ret
pop
push
mov
dec
inc
inc
aam
icebp
pop
sbb
rclb
icebp
jne
sub
in
push
sub
mov
ss
cmp
pop
sbb
or
insb
je
sub
pop
ljmp
push
test
daa
iret
xor
dec
mov
movsb
jbe
mov
mov
mov
mov
jmp
jno
jns
mov
lret
data16
push
sarl
loopnew
ret
lahf
int
mov
push
and
xchg
std
push
xor
mov
jl
pop
sub
decb
mov
js
rcrb
pushf
cmp
addb
test
icebp
sbb
cmp
mov
pop
jnp
mov
adc
and
pop
mov
pop
rorb
lret
sub
lods
jg
test
jns
insb
repz
xor
gs
adc
xor
inc
and
add
push
shll
push
bnd
sbb
dec
jno
dec
or
inc
mov
pushf
dec
mov
cmpl
xor
sahf
insb
mov
push
pop
mov
movsl
pop
xchg
adc
shlb
cs
xchg
jecxz
dec
arpl
and
mov
clc
enter
adc
push
pop
std
inc
imull
repz
lret
out
sub
test
das
data16
lahf
mov
fsubs
push
inc
mov
ds
js,pt
pop
popf
loopne
xchg
mov
in
push
xchg
adc
xchg
out
pop
stos
rcr
jae
xlat
enter
icebp
stc
jg
dec
popf
push
pusha
mov
lock
out
jns
xchg
or
jge
push
popf
mov
stos
out
push
aas
ss
mov
jne
mov
pop
or
cmp
in
jae
lds
repnz
jo
cmp
enter
dec
stos
pop
adc
fldt
movsb
cpuid
inc
pop
dec
out
push
sbb
mov
and
test
adc
divl
inc
mov
out
and
shrl
gs
and
icebp
repz
sub
xor
mov
mov
shlb
out
mov
ja
inc
push
ror
inc
sub
sbb
add
push
mov
je
dec
cwtl
aad
jg
out
aas
sub
sti
or
jle
mov
cmp
rolb
roll
clc
mov
push
in
add
pop
sub
dec
out
push
xor
xor
imul
repz
cmp
ljmp
outsl
jne
mov
imul
fucomip
push
add
add
aaa
std
push
rcr
adc
or
jb
movsb
mov
cs
in
out
mov
sbbl
cmpsl
mov
in
mov
pop
and
sarb
stos
adcl
fsubrl
jl
imul
pop
loop
and
mov
cs
mov
ret
cmp
inc
add
fisubrs
icebp
xchg
and
cmp
sbb
out
sub
lea
mov
jge
pop
data16
mov
mov
push
xor
ret
movsb
xor
sti
dec
or
inc
adc
xchg
jns
hlt
mov
jb
sahf
mov
push
sbb
bound
ds
sbb
jg
fcmove
mov
out
movsl
adc
pop
or
push
pop
imul
out
sahf
mov
jno
inc
mov
xor
cs
jl
sbb
in
jb
lahf
and
push
loop
dec
and
sub
sub
jge
adc
push
fnsave
mov
test
cld
cld
add
mov
xor
xchg
cmpb
lods
mov
loope
jge
adc
jl
xchg
sub
pop
popf
pushf
cmp
adc
mov
mov
inc
out
push
xchg
cmp
dec
shlb
test
cli
inc
cmp
sbb
repz
push
xor
jo
data16
ret
mov
xor
push
mov
adc
imul
jne
adc
aam
sahf
jle
stos
add
dec
insb
scas
pop
jle
jo
jnp
ds
je
mov
sub
push
insl
adc
ret
mov
mov
mov
ss
repnz
jg
mov
add
pop
scas
jae
xor
subb
shlb
lret
jae
nop
push
xor
or
enter
and
jne
sahf
mov
das
and
sub
pop
test
out
sub
dec
pop
imul
fstl
cld
jp
push
and
popf
mov
clc
filds
orb
adc
sti
mov
insw
loop,pt
shlb
or
icebp
adc
jbe
or
and
mov
xor
pop
les
dec
lods
outsl
stos
daa
mov
test
ds
rolb
clc
jmp
push
rcr
pop
cmp
push
sbb
mov
add
inc
or
sub
subb
into
rorl
int3
xchg
dec
popf
or
in
enter
inc
jno
mov
jle
mov
cmp
in
in
push
xchg
fidivrl
sub
xchg
outsl
mov
lods
dec
outsl
push
insb
jo
test
aam
out
in
or
inc
jae
fwait
movsb
sub
enter
adc
xor
sbb
xchg
mov
insl
cmp
int3
fcomip
loope
stc
mov
xchg
test
repz
mov
inc
lods
adc
adc
jbe
inc
loopne
in
incb
mov
nop
out
out
push
xchg
rol
mov
push
jb
cmpps
lods
mov
stc
popf
iret
push
mov
repz
or
mov
pusha
xchg
insb
mov
imul
sub
and
mov
sbb
popf
ret
sbb
xchg
fsub
lret
jle
scas
jl
mov
dec
movsb
sbbb
aad
add
sarl
or
pusha
cmpsb
sahf
daa
inc
in
xchg
je
mov
test
jne
insl
cmp
ja
mov
fs
test
inc
mov
gs
or
roll
paddq
cli
enter
lret
jo
or
mov
dec
das
sbb
insl
inc
jne
pop
std
std
into
pop
in
jmp
cmc
xchg
cmpsl
pop
insb
dec
in
orl
jge
outsb
mov
jo
pop
fwait
or
adcb
add
push
pop
jb
adc
lea
cmp
push
dec
adc
das
popf
mov
test
inc
inc
repnz
insl
notl
adc
test
ret
and
or
xlat
pop
mov
mov
or
es
push
ds
in
mov
sub
mov
lds
push
xchg
test
bound
fyl2x
bound
adc
or
aad
add
mov
push
jb
jnp
jp
push
cmp
rorl
adc
and
sbb
enter
jns
inc
xchg
sub
xlat
and
orl
push
sbb
pop
out
mov
scas
adc
xor
mov
insl
arpl
xor
or
xlat
scas
daa
into
jne
movsl
add
push
dec
nop
dec
fcomi
cmpb
inc
bound
ds
jp
dec
xor
imul
jno
add
faddl
sub
enter
dec
inc
xchg
jp
pop
dec
mov
xchg
fdivrs
jo
mov
xor
fidivl
pop
jecxz
hlt
pop
mov
cmp
pop
fwait
push
cmp
sahf
and
mov
adc
mov
push
int
jg
dec
fiadds
sbb
nop
adc
sub
rorb
shlb
xchg
lds
mov
add
cmp
add
jl
out
cmpsb
mov
fwait
push
outsb
jo
inc
pop
cmp
fistpll
mov
addr16
mov
fnstcw
adc
cmc
xor
cmp
and
and
pop
pop
xchg
sbb
icebp
inc
xor
pusha
in
adcl
push
xor
add
mov
mov
mov
mulb
xchg
aam
xor
jo
cmpsb
jmp
outsb
arpl
mov
jnp
mov
enter
idivb
aaa
cltd
xchg
add
scas
fs
push
leave
loopne
fdivl
imul
js
mov
data16
mov
xchg
fcompl
fs
sti
fwait
cld
sub
call
push
test
loop
xor
xchg
inc
xchg
and
out
andb
out
gs
add
mov
fcomip
mov
mov
icebp
adc
adc
sti
inc
xor
jnp
test
jl
pop
sbb
mov
pop
and
sub
inc
xor
xchg
lcall
and
pop
loope
adc
fisttpll
in
mov
add
fs
icebp
push
inc
mov
jmp
add
in
sbbl
jmp
movsl
pushw
push
xchg
push
ds
xchg
xchg
and
or
dec
cmp
xchg
sbb
cmpb
pop
add
adc
cmp
mov
push
and
cwtl
add
mov
fadds
test
shl
lea
in
pop
or
push
mov
ficoml
jne
or
xchg
jbe
movsl
xchg
out
mov
call
cmp
xor
int
sti
cmpsl
orb
push
jo
cmp
jg
mov
xchg
fptan
jge
insl
ss
push
inc
negb
add
mov
cs
inc
cmpl
xor
mov
mov
add
lock
sbb
mov
push
fdivrs
iret
xchg
stos
inc
push
idivl
aad
sub
mov
int
int3
fldcw
dec
out
mov
and
in
push
cwtl
cwtl
leave
jg
arpl
mov
and
pop
jne
jmp
fistl
sahf
sti
push
iret
sub
aad
mov
mov
push
pop
scas
push
sub
in
mov
xor
enter
aaa
shlb
sub
cmp
shrl
lret
sub
xor
xchg
loop
adc
adc
sbb
in
dec
aad
lock
cmpsb
movsl
pop
mov
fisttpll
popa
xorl
cltd
jg
xchg
inc
inc
mov
jge
adc
call
xchg
gs
cli
mov
pop
add
ljmp
test
nop
popf
pop
xchg
pusha
loop
inc
test
outsb
xchg
test
pop
imul
jne
fstl
in
and
ja
outsl
outsb
xor
and
xor
int
popl
sub
movsl
setbe
out
push
not
fstpt
sub
cmpsb
push
pop
fistps
mov
lret
data16
jno
fsubs
lret
mov
and
loopne
or
add
test
jecxz
adc
sbb
lock
inc
fbstp
clc
lock
dec
mov
cli
inc
mov
xchg
jns
and
in
jns
cmp
mov
xor
jns
out
cmp
aas
cmp
ds
hlt
scas
stos
dec
ja
test
in
pop
mov
int
adc
repz
cmp
push
jo
fwait
or
lock
stos
or
imul
lock
repnz
sti
popf
jbe
and
jl
hlt
mov
shll
outsb
push
mov
jnp
pop
push
popa
loope
rcrl
cld
pop
rolb
int3
fidivs
jno
inc
mov
push
sub
xchg
jle
scas
xchg
popf
mov
jecxz
jno
push
jmp
mov
sbb
mov
lcall
test
cmp
push
jg
sti
out
xchg
gs
repnz
xor
fidivrl
bound
shlb
pushf
cmpsl
stc
mov
cmp
es
xchg
out
dec
bound
imul
pop
sub
in
adc
orb
rcr
fwait
and
dec
in
adc
outsb
sahf
lret
or
stos
repz
mov
cmp
and
cmp
sub
xchg
inc
cmc
inc
push
inc
mov
sbb
xlat
jp
push
push
lret
loopne
outsb
push
pop
adc
arpl
mov
test
movsb
adcl
jnp
faddl
in
stos
js
jle
jo
pop
xchg
adc
hlt
loop
or
adc
jbe
add
and
inc
xchg
push
neg
sti
jo
mull
lahf
popa
fcomps
push
or
repnz
jle
xor
stos
scas
es
xorb
js
or
mov
jg
scas
and
mov
and
cs
lret
and
mov
cmpsl
jmp
shrb
adc
pop
inc
and
pop
mov
inc
stos
icebp
insb
iret
xchg
mov
push
cltd
lods
pop
jmp
add
or
and
mov
clc
add
loope
shrl
les
dec
add
xor
push
jmp
push
subl
push
dec
mov
jp
push
dec
test
out
fists
mov
mov
sub
sub
xor
cs
sub
jl
je
push
push
xchg
les
outsl
xor
js
stc
mov
push
std
loopne
daa
stos
add
mov
pop
mov
sbb
add
sub
rclb
mov
pusha
sbb
out
pushf
cmp
clc
pop
push
ja
fnsave
test
xlat
aas
pop
jbe
dec
push
push
pop
or
ljmp
rorb
aad
ljmp
iret
cld
shlb
test
ss
cmc
movq
ret
outsb
arpl
inc
push
sub
jno
inc
push
push
sub
rolb
test
push
jno
mov
cmpsb
cs
sub
pusha
sub
std
adc
pop
cmpsl
mul
popf
xor
mov
xchg
daa
xor
mov
jg
ficoms
add
push
and
add
adc
mov
sahf
add
insb
mov
adc
push
inc
dec
cltd
xchg
enter
and
lods
outsl
or
insl
cmpsl
xlat
adc
loopne
ret
scas
test
outsb
and
jmp
cmp
call
loopne
push
pusha
push
lahf
les
jo
cld
aam
out
mov
mov
imul
cltd
inc
sub
ja
popf
ret
xchg
into
mov
fiadds
das
iret
pop
jnp
outsb
xchg
shr
xchg
adc
jno
lahf
xlat
xchg
test
xor
scas
movl
stos
aad
adc
mov
push
fistps
aam
dec
push
ss
inc
push
in
and
xor
in
ret
cs
in
cmc
fimuls
inc
iret
or
lea
fdiv
fsubr
pop
inc
aaa
xor
fildl
lcall
sbb
xlat
jnp
xchg
cmpsb
jnp
ret
addr16
imul
jne
jecxz
test
cmp
daa
jge
clc
cld
xchg
xlat
out
push
xor
mov
aas
std
add
lcall
adc
cltd
das
push
sub
mov
in
nop
jp
lahf
mov
xorl
gs
cmpb
mov
push
enter
test
js
xor
jecxz
or
inc
push
clc
or
jmp
and
or
addr16
xchg
add
imul
push
in
loop
inc
fcoms
lret
push
scas
jbe,pn
cld
jmp
sahf
lock
xor
adc
es
xchg
ficoml
xor
out
pusha
pop
out
pop
cmpsb
repnz
iret
pusha
stos
ret
cmpsl
xchg
mov
mov
pop
shll
cmpsb
fsubs
xchg
enter
and
cltd
cmp
sub
mulb
pusha
loop
icebp
out
sbb
mov
in
xchg
push
inc
push
cmp
aas
in
inc
fstps
mov
cld
sbb
mov
inc
mov
ret
mov
cs
jno
sbb
adc
inc
ret
jge
add
xchg
aad
mov
outsl
jge
sbb
cmc
pop
in
test
cmpsl
and
mov
mov
jmp
lea
and
cwtl
imul
repnz
xchg
cs
cwtl
outsb
out
cmp
testb
push
and
adc
cltd
into
mov
ja
out
jo
lcall
jae
cmc
repz
pop
pop
into
aam
adc
pop
aaa
cmpsl
popf
sub
fsubrs
test
add
push
push
xor
popa
loope
fdiv
repnz
ljmp
and
mov
ret
pop
push
outsb
mov
insl
cmp
mov
sub
and
cld
xchg
rcl
pminsw
bound
mov
sti
dec
jnp
xorl
adc
adc
adc
roll
addr16
xor
and
setle
pop
xor
inc
mov
movsl
or
mov
or
cld
cmp
bound
test
gs
insl
fcom
data16
mov
jge
sbb
imul
mov
push
out
mov
pushf
cmp
repz
push
ss
sbb
fstps
push
out
xchg
jb
scas
lock
or
dec
fstl
test
or
push
mov
or
psubb
cmp
dec
pusha
add
rclb
ss
xor
xor
jb
iret
jae
loopne
pop
jg
push
subl
push
inc
cltd
lret
dec
ss
sbb
fcompl
dec
cmpsl
jo
mov
fsubrs
and
ja
call
ret
cmc
popf
in
add
popa
sbb
call
lcall
xchg
ja
nop
int
lock
test
lret
add
mov
dec
dec
jns
inc
ret
push
inc
jecxz
inc
dec
mov
dec
pop
psubw
inc
mov
xor
fcom
imulb
push
push
insl
and
fisttps
insb
mov
pop
cld
dec
lea
insb
das
int
pop
icebp
and
and
mov
lret
testb
test
dec
jg
test
and
mov
mov
iret
xor
cmpsl
negl
fistps
data16
cmpsb
insb
test
jmp
add
xchg
jecxz
xor
cmp
xchg
sbbb
outsb
ret
stos
pop
aam
mov
fldenv
and
mov
lret
jp
ljmp
pop
mov
xchg
mov
ja
mov
xchg
iret
aad
fidivs
sbb
lock
scas
in
mov
inc
std
je
in
inc
and
mov
pusha
lods
push
pushf
push
lahf
push
call
sbb
out
call
fs
add
scas
outsb
lods
in
stc
mov
dec
push
push
test
jmp
jmp
dec
cmp
aaa
shr
or
jbe
sti
jge
xorl
ljmp
jb
push
pop
psubsb
xchg
push
leave
push
and
push
cmp
and
pop
mov
hlt
xor
test
sub
add
mov
fidivs
mov
cld
call
rorb
push
xor
mov
lea
pushf
sbb
les
or
repnz
xor
pusha
loope
scas
mov
stc
daa
xor
mov
mov
inc
pop
enter
nop
pop
pop
test
rorb
pop
call
sub
test
cmc
int3
jae
icebp
cmp
mov
into
pop
add
mov
les
cmp
out
xchg
out
test
inc
mov
mov
sti
stos
cmp
sub
jno
out
test
jo
push
dec
mov
insb
movsl
push
stos
loop
xchg
inc
cmp
xor
adc
sbb
and
scas
int3
stos
xchg
mov
dec
mov
jle
dec
pop
sub
and
mov
adc
adc
hlt
das
push
call
and
xor
test
xor
or
call
mov
cmp
xor
shrl
xor
call
adc
out
sub
inc
ret
cmc
pushf
fwait
ja
rorl
xor
sbb
mov
lahf
notl
push
out
js
pop
lock
or
sub
sbb
shll
jecxz
xor
inc
fdivrs
mov
test
fucom
add
sbb
test
pop
imul
cmpb
mov
and
mov
iret
and
add
jmp
mov
and
icebp
idivl
insb
mov
or
xchg
fdivrl
jnp
push
arpl
adc
jnp
cmp
adc
lret
test
push
push
icebp
add
out
sbb
inc
sub
pop
dec
daa
jnp
and
dec
mov
frstor
shl
cmpsl
adc
mov
mov
out
push
fsubr
cltd
mov
jg
lret
and
aam
xchg
push
outsb
adc
sahf
xor
stc
cmc
xor
push
sarb
lret
mov
test
jb
loop
insb
lret
push
pop
insb
mov
popf
adc
dec
gs
imul
sub
mov
add
enter
push
cmp
lret
inc
dec
jmp
outsb
fwait
js
stos
jp
out
sub
mov
std
addr16
mov
lods
push
das
dec
lret
rorb
shlb
addr16
dec
inc
rcrb
pop
mov
lock
sub
xchg
lret
sbb
dec
sbb
push
aad
push
adc
outsb
lahf
imul
dec
cli
jmp
dec
je
test
xchg
mov
sub
dec
sub
push
icebp
mov
faddl
popl
push
mov
xchg
or
mov
es
mov
push
lcall
out
lcall
dec
mov
and
adc
mov
loop
lods
rcll
loop
sahf
xchg
and
testl
push
and
sahf
aad
fcmove
pop
add
lea
lcall
sub
adc
xor
test
push
fidivl
lret
in
bound
mov
inc
sbbl
xlat
aaa
addr16
sub
sti
jbe
add
mov
or
nop
addr16
addr16
pop
push
jl
inc
add
dec
xor
dec
stos
pop
setns
nop
adcb
add
sbb
movsb
loop
pushf
das
jmp
and
lret
jle
sub
xchg
das
and
mov
jg
or
inc
sti
repz
stc
subl
nop
clc
mov
out
dec
and
shlb
mov
inc
dec
lds
jns
popa
loopne
mov
call
push
mov
ret
imul
jle
fimull
cmp
ljmp
jb
inc
adcl
jo
setns
addl
lret
xchg
hlt
jbe
loope
xlat
hlt
popf
fsubrs
iret
mov
inc
lahf
mov
test
sub
inc
xchg
jb
jbe
push
pop
add
adc
push
or
into
cwtl
lods
lods
cmpsl
xor
stos
jle
xchg
outsl
fnstsw
aad
xchg
jl
ja
and
ficoml
addl
xor
push
add
test
and
and
lds
ret
lea
rcl
add
pop
rolb
mov
xchg
xorb
mov
push
jno
fldenv
test
sbb
pushf
fdivr
pop
sbb
aam
cmp
test
movsb
les
lock
and
jbe
sbb
mov
nop
dec
inc
cmc
ss
mov
dec
loop
js
imul
in
and
add
pushf
fs
mov
inc
daa
xor
test
int
test
xchg
leave
hlt
repnz
sub
and
dec
xchg
repz
in
push
sub
lods
add
arpl
mov
popl
or
int
sub
popf
in
sahf
decb
sbb
adc
fmulp
jecxz
jns
push
in
xor
ja
mov
test
roll
and
and
pop
imul
out
shll
in
sbb
add
mov
inc
cmp
jle
cmpsl
gs
stos
pop
lret
clc
out
je
stos
data16
sbb
and
xchg
ds
jae
cld
test
test
loopne
xchg
neg
leave
loope
lcall
shll
pop
stc
ss
and
jb
push
in
out
xchg
ljmp
mov
fildl
loope
cltd
adc
and
push
add
mov
ror
sub
xor
xor
pop
push
ss
imul
fdivs
loopne
popa
imull
mov
jns
shll
lret
mov
pusha
jmp
jns
add
adc
jmp
and
rorb
dec
arpl
sbb
aad
sub
nop
fidivs
jmp
adc
mov
mov
jge
sub
lock
flds
popa
jbe
adc
or
std
cmp
xor
mov
inc
mov
push
call
jae
sbb
lds
scas
int3
dec
subl
repnz
push
int3
out
pusha
add
sbbl
call
lods
jo
xchg
lcall
neg
xorl
sarl
popf
mov
pop
cltd
jmp
sti
shrb
jle
sub
cmp
push
leave
push
adc
dec
imull
push
or
lds
push
ds
pushf
and
xchg
push
xlat
out
mov
mov
shll
jo
xor
sub
lahf
push
and
js
inc
lcall
xor
push
mov
xchg
xchg
dec
cmp
lds
movsb
dec
enter
loop
cmp
mov
adc
push
pusha
aad
ds
enter
jns
scas
rolb
and
mov
pop
addr16
dec
test
jmp
jns
inc
leave
lods
ret
fstps
adc
inc
fnstcw
enter
insl
mov
mov
movsb
call
mov
fldenv
and
pop
mov
add
lea
adc
lret
sbb
sbb
jge
loop
mov
test
pop
testl
jae
ret
mov
or
mov
cmp
dec
mov
sbb
jle
mov
cwtl
in
mov
xor
aad
inc
fiadds
xchg
int
or
ja
scas
push
xchg
sarb
cwtl
cmp
adc
fidivrl
pop
fcoms
lods
movsb
add
xor
add
push
adc
jae
xor
pusha
dec
push
push
add
pushf
or
mov
cmp
mov
cmpb
dec
sti
inc
leave
call
nop
pop
and
stos
sbb
push
ss
sub
mov
jl
mov
mov
adc
inc
lret
jge
sub
push
mov
mov
fwait
mov
xchg
outsl
jno
les
pop
fs
inc
hlt
sbb
dec
mov
adc
xchg
lds
or
sti
call
or
int3
fstps
repnz
pusha
jb
xor
push
add
repnz
mov
clc
sub
jmp
inc
push
adc
mov
xchg
mov
ret
xchg
nop
mov
fsubrp
fildl
jle
push
cmpsl
out
push
cmpsb
popf
pop
pop
out
dec
sbb
inc
cmpsl
lds
push
fimull
push
add
cmp
jns
or
push
les
call
out
inc
repnz
ljmp
hlt
outsl
add
out
ret
adc
pop
adc
fs
jnp
pop
sub
xchg
fs
cmp
mov
push
addr16
xchg
hlt
and
ret
std
outsb
aad
inc
outsl
inc
mov
test
sub
mov
dec
sub
mov
and
outsl
fldl
jo
push
in
in
mov
xchg
sub
push
daa
push
insb
subl
out
pop
ret
scas
xchg
jb
in
data16
stc
xor
mov
xchg
and
pop
mov
xchg
cmp
push
ret
or
addr16
test
mov
sbb
loop
jmp
dec
and
pop
and
xor
loope
jne
repnz
stc
xor
pop
lds
add
sub
push
nop
jb
xor
xor
cld
mov
rol
pop
out
mov
mov
add
shll
repnz
sub
mov
mov
xchg
push
pusha
jbe
insl
test
dec
es
mov
test
xchg
inc
push
sbb
sbb
push
out
movsl
add
out
in
icebp
xlat
and
dec
test
mov
push
mov
je
fwait
and
insb
pop
icebp
mov
daa
or
ja
outsb
hlt
xchg
repz
enter
arpl
mov
fs
icebp
push
arpl
push
add
hlt
int3
popa
lahf
jae
xor
daa
cmp
add
jae
pusha
int3
scas
hlt
leave
lods
lock
ljmp
xor
sub
decb
jo
and
xlat
gs
stc
sub
call
pop
sahf
out
shrl
inc
repz
inc
popf
in
adcb
inc
aad
xchg
imull
xchg
push
hlt
iret
cli
test
mov
std
stos
sub
lods
stos
mov
and
into
mov
mov
gs
cmp
sbb
jge
lds
neg
aaa
lret
enter
xor
sti
jl
add
cmp
rcrb
mov
mul
add
and
push
xchg
mov
repnz
mov
ret
push
mov
xchg
adc
inc
adc
es
xor
cli
push
test
inc
mov
sub
xchg
mov
push
or
std
js
mov
ffreep
sub
sbb
int3
adc
ficompl
pop
js
xchg
push
pop
mov
jg
inc
add
xor
adc
test
std
xchg
stos
push
inc
jb
push
pop
jle
or
inc
in
test
rol
dec
mov
mov
cmp
insl
pop
lcall
or
jae
cltd
lretw
mov
enter
xor
xor
mov
lret
jl
or
lea
or
push
in
je
in
into
stc
stos
aad
loopne
decb
push
shll
test
pop
gs
lods
shlb
push
sti
add
ds
lret
popf
add
icebp
mov
xchg
push
cmp
test
pop
sahf
sbbl
mov
inc
xchg
inc
fldenv
jl
add
mov
shll
cmpsl
and
emms
and
xchg
ljmp
jbe
dec
sbb
cs
mov
jle
sub
push
xor
adcl
aas
mov
or
shll
and
fcomip
sbb
loope
or
cmp
xlat
inc
jmp
out
mov
adc
lcall
scas
cld
or
sbb
push
stos
int3
xchg
shl
adc
xchg
sub
leave
xchg
dec
int
repnz
pop
push
ljmp
in
cmp
aad
jne
insb
mov
cmp
aad
adc
shll
lret
stc
lods
pop
popf
and
sbb
mov
pop
and
lock
or
cli
repnz
outsl
pop
cwtl
std
dec
dec
adc
or
jmp
mov
lods
mov
shlb
add
or
shrl
sbb
sbbb
in
fisubs
incl
jmp
sub
lods
push
ja
push
andnps
bound
shl
mov
aam
test
jle
outsb
lods
mov
mov
pusha
stc
jno
notb
dec
xchg
mov
push
fwait
add
lods
imul
test
clc
mov
inc
ss
inc
les
cs
aas
ja
divl
push
lods
mov
daa
pop
mov
lds
jae
sbb
adc
push
loope
pop
xor
push
add
sti
aad
add
cmp
fldl
jno
lcall
lret
xor
add
jae
insb
xchg
sub
push
and
clc
sbb
test
imul
ret
mov
dec
dec
add
loopne
repz
test
ljmp
sbb
enter
xchg
mov
adc
dec
fsubrp
fistpl
adc
pop
xchg
loope
xchg
sahf
xchg
aas
xchg
cs
test
mov
ror
dec
dec
je
hlt
and
seto
pop
jns
fcoms
movb
scas
pop
int3
pushf
cmpl
mov
jge
movsl
testl
sub
xorb
out
and
cmp
push
and
lret
or
push
xchg
sbb
sub
mov
mov
pop
jle
sub
sbbl
cmp
push
stc
pop
in
sbb
scas
call
xchg
sub
mov
pop
pop
mov
test
jnp
mov
adc
mov
aaa
daa
push
divps
ljmp
inc
push
jno
jle
lods
dec
icebp
cmp
mov
xchg
ficomps
movb
inc
movsl
push
popa
xlat
sbb
in
out
inc
jnp
aam
xchg
mov
stos
arpl
inc
sbb
inc
mov
dec
repz
stos
push
jg
mov
mov
jo
sahf
xor
jnp
mov
cltd
int
roll
cmp
inc
jl
movsl
imulb
sti
push
xchg
pop
sub
sub
cwtl
into
lods
movsl
or
stos
test
mov
xor
jns
repz
es
icebp
pop
pop
xchg
mov
test
mov
mov
cli
mov
mov
test
xchg
lret
xchg
mov
xchg
pop
mov
push
push
mov
push
test
add
push
scas
or
inc
adc
scas
icebp
dec
push
scas
jecxz
cmpsl
push
add
mov
data16
jge
cmpsb
mov
lea
xor
js
jbe
xor
inc
xor
insl
jno
xchg
mov
or
mov
xchg
int
dec
pop
sub
sarb
orl
gs
mov
faddp
jle
imul
dec
mov
cmpsl
mov
and
int
xor
fcompl
push
test
lock
mov
add
jo
pushaw
dec
sub
mov
decb
insb
jg
pop
mov
adc
js
push
jno
and
or
cmp
fstps
jae
lods
xchg
jecxz
lahf
push
xchg
sub
cs
or
in
xchg
aad
in
inc
or
cmp
jns
std
enter
loop
cmp
jns
cmc
jo
sbb
cmp
dec
push
mov
insb
or
mov
stos
fdivr
xchg
push
sbb
in
cmp
push
repnz
xor
lcall
push
scas
sbb
adc
mov
lds
outsb
pop
movsl
pop
xor
test
lock
mov
loope
fwait
sub
lret
pop
daa
xor
int3
adc
fsubrs
sub
adc
icebp
ja
mov
rorb
lock
xor
dec
call
shr
adc
mov
dec
xchg
cmc
ja
lock
cld
imul
mov
mov
adc
mov
inc
inc
sub
mov
nop
pmulhw
push
dec
push
mov
ds
popf
shll
push
xchg
out
es
fidivl
cwtl
ja
pop
lods
adc
cmp
add
pop
or
dec
adc
adc
dec
lahf
cwtl
subb
loop
bound
xor
push
inc
test
jo
mov
imul
jl
cmp
mov
jne
aas
lret
push
mov
cmpsl
nop
movsb
nop
jne
inc
loopne
int
fisttpll
int
cmpsb
lret
dec
inc
ret
shll
mov
inc
das
scas
ret
gs
and
mov
repz
and
mov
popa
dec
sbb
push
mov
add
stc
push
pop
gs
push
inc
test
xor
mov
inc
xchg
xchg
rdpmc
int
lcall
jae
popa
sbbl
jb
lds
adc
in
pop
mov
daa
sar
rol
fwait
adc
movsl
divl
jnp
flds
nop
dec
loope
xor
out
cmpsb
ja
adc
inc
push
fs
repnz
sbb
mov
mov
das
ror
jmp
xor
lahf
mov
and
mov
mov
scas
push
xchg
repz
cmp
in
popf
inc
mov
je
sar
std
jb
mov
movsb
adc
ja
xor
pop
int
mov
les
int3
sbbl
lahf
jmp
and
dec
popf
test
mov
ljmp
cwtl
cmp
enter
mov
xor
sbb
out
insl
arpl
dec
mov
cmpl
imul
mov
int3
in
aaa
mov
push
ret
adc
inc
mov
or
pop
sbb
push
repnz
orb
mov
mov
or
jns
pop
xchg
dec
jecxz
cmp
jecxz
mov
xchg
outsl
mov
cmp
es
mov
lock
ljmp
out
push
scas
int
mov
add
test
and
clc
xor
in
mov
rcl
test
fs
iret
test
mov
cltd
dec
cmp
ret
dec
jne
jmp
inc
push
pop
or
inc
mov
pop
mov
inc
fwait
lea
test
leave
sub
js
lret
adc
or
imul
xchg
out
inc
test
pop
lret
and
popf
rclb
mov
mov
iret
mov
mov
scas
mov
ds
xchg
out
stc
aas
nop
mov
push
mov
in
mov
lcall
data16
cmp
dec
stos
pop
sub
sahf
ret
je
sbb
je
and
fwait
push
or
inc
xchg
inc
push
adc
jle
mov
mul
xchg
in
sub
mov
gs
jmp
aas
mov
mov
sbb
lahf
ret
popa
push
orb
cmp
pop
pushf
cwtl
xchg
sub
dec
add
sarl
and
sbbl
aam
iret
xchg
mov
xchg
test
cmp
cmp
mov
dec
inc
push
int
xchg
xchg
add
es
dec
ss
cmp
hlt
pop
inc
dec
pop
hlt
xorl
int
aad
mov
inc
fldcw
pop
xor
divl
xchg
cmpsl
clc
mov
sti
in
ret
xor
test
mov
into
dec
sub
jl
mov
fs
shll
outsl
xchg
out
mov
mov
test
cmp
leave
out
lcall
add
cmc
sub
cltd
and
sub
es
loopne
mov
jl
in
adc
cltd
std
xchg
shl
ljmp
sahf
sti
push
adc
scas
bound
sub
movsl
repnz
adc
and
test
loopne
dec
push
cmp
mov
dec
insb
mov
pop
lahf
dec
sbb
lock
addl
or
out
enter
ret
outsl
cmp
movsb
sbb
cmp
cwtl
push
jb
dec
cli
pusha
adc
das
cmp
sub
in
insb
scas
or
fs
pop
aad
pop
adc
dec
or
int
arpl
mov
into
repz
mov
mov
sahf
inc
sub
lahf
addr16
add
and
lcall
mov
sbb
sub
sbb
mov
test
cmpl
jne
div
les
push
adc
xor
ficoml
add
pop
fbstp
push
adc
out
mov
pop
xor
insl
push
out
mov
sub
ret
xchg
dec
mov
loop
xchg
sbb
mov
sub
imul
aaa
push
xor
xor
xchg
into
das
aad
adc
lods
inc
pop
jmp
es
fildll
fistl
popl
jno
pop
add
lock
mov
movsl
jl
mov
aas
xor
mov
dec
add
loop
lret
daa
sbb
dec
inc
xchg
jae
xlat
arpl
sub
mov
pop
jge
test
mov
push
mov
mov
add
cmp
xchg
mov
in
aas
dec
add
mov
mov
andnps
lret
mov
jns
or
js
push
movsl
hlt
ficoml
dec
jb
mulb
jp
lds
xchg
xchg
or
push
mov
jo
clc
push
jg
cmp
mov
xchg
rclb
or
bound
imul
aaa
pushf
fiaddl
add
mov
xor
adc
and
sbb
incl
push
mov
add
add
pop
inc
sti
insl
jno
cmp
xchg
dec
cli
icebp
ret
push
jmp
mov
stos
ret
jnp
sarb
mov
in
adc
pop
xor
clc
dec
xchg
or
inc
push
pusha
lahf
push
aas
leave
cmpb
mov
xchg
adc
fwait
shrl
sbb
stc
jle
jmp
and
push
or
xchg
jle
jae
mov
lods
arpl
enter
pop
or
and
inc
or
fsubl
cmpsb
jg,pt
rcl
decl
mov
push
inc
pop
cld
std
mov
mov
fwait
cs
push
cmp
fdiv
push
jmp
hlt
mov
out
fisttpl
pop
lret
rorl
mov
push
lods
jp
push
mov
and
inc
mov
mov
test
inc
mov
ret
xchg
jno
lcall
iret
cmpsb
sub
std
mov
lds
shlb
iret
idivl
jne
sbb
lea
dec
sub
pop
fdivrp
outsb
xor
inc
std
cmc
lock
in
inc
xor
jns
jno
lret
bswap
jbe
pop
xorl
or
dec
repz
dec
dec
ret
or
dec
lret
mov
movsl
xor
ss
pusha
jae
jecxz
jno
rorb
jl
ja
out
xlat
sub
xor
xor
fsubrs
pcmpgtb
cmp
mov
push
arpl
mov
pushf
mov
arpl
cmc
gs
ljmp
int
push
cmp
push
inc
push
test
xchg
mov
adc
jns
jge
sub
outsb
sub
in
ja
mov
repnz
push
dec
or
and
int
mov
out
adc
ljmp
push
repnz
jno
sbb
pop
and
lods
dec
push
lea
sbb
cmp
or
adc
sbbb
push
sub
addr16
sub
je
fcoms
movsl
xchg
xchg
pop
out
jl
sbb
xchg
pop
out
mov
mov
call
mov
jp
incl
cmp
cmp
arpl
add
jbe
ja
sub
movsl
jno
roll
cmc
aam
add
dec
test
out
push
jg
push
cmp
dec
push
xchg
cmp
arpl
test
out
repz
sbb
notb
leave
cs
sar
sahf
outsl
add
dec
xlat
add
clc
or
jp
ljmp
cmpsb
push
movsb
sbb
shlb
imul
dec
aas
cltd
mov
dec
xchg
lock
jne
inc
sub
dec
jbe
pop
or
push
adc
nop
test
lcall
cmp
sbb
movsl
jmp
ljmpw
pop
pop
mov
sbb
or
pusha
dec
jnp
mov
mov
ficoml
lret
stos
movsl
lock
cs
loop
sbb
leave
outsl
cwtl
adc
sub
lret
sub
and
nop
adc
lea
mov
ds
xchg
mov
pop
jno
out
sbb
shl
dec
lods
xchg
lock
sub
pop
iret
fiadds
in
dec
shlb
lods
xchg
aam
int3
pop
sti
repz
and
jg
pop
scas
cwtl
sbb
xchg
xor
lods
aam
mov
gs
lea
nop
pop
stos
enter
sbb
xchg
lret
push
and
in
cwtl
xchg
lret
pusha
cmp
inc
cmp
adc
popa
xor
and
lock
out
cmc
pushf
or
push
xor
mov
or
mov
repnz
mov
loope
mov
sub
outsl
jl
cmp
test
pop
add
fucomp
xchg
mov
jl
xor
mov
arpl
mov
mov
lds
test
fwait
mov
and
sub
aas
push
int
shl
pop
enter
sub
adc
push
and
and
inc
lret
lods
and
insb
inc
in
push
add
mov
dec
and
add
xchg
jmp
mov
jne
and
jge
xchg
data16
mov
mov
mov
mov
jbe
pop
push
out
dec
sub
add
and
jnp
fldcw
out
ret
cmp
gs
iret
or
or
lahf
lret
jge
pop
and
add
jno
nop
cmc
sbb
mov
adc
jae
add
mov
lods
out
and
test
in
xchg
out
mov
inc
loop
mov
rcl
popa
sahf
mov
pop
xchg
sbb
shr
sub
mov
pop
or
push
hlt
out
add
aaa
sbb
nop
rcrb
adc
sub
xor
in
dec
mov
and
les
jl
pushf
ja
mov
inc
shl
xor
lock
test
fnstcw
mov
jns
add
push
mov
or
jp
sarl
sub
dec
pop
inc
loopne
jbe
sbb
test
mov
mov
fwait
mov
rcl
xor
dec
jle
push
fcomps
or
cmpsb
aaa
outsb
out
dec
dec
fsubl
xchg
in
mov
xchg
movsl
sahf
fldcw
pop
aaa
jae
std
adc
pop
fcompl
jns
sbb
insb
add
fs
push
inc
mov
outsb
in
lock
mov
stc
adc
punpcklwd
lea
aas
mov
xlat
xlat
mov
cmpsl
movl
add
pop
stos
ja
sbb
in
in
out
aaa
cmp
sub
decl
jl
int
insl
sbb
inc
std
sbb
xor
xor
fldcw
shlb
lds
hlt
outsl
dec
lea
mov
dec
lock
aam
sbb
sbb
adc
into
setge
test
and
flds
mov
stc
repz
repnz
pop
in
dec
ret
sub
jne
pusha
insb
clc
imull
jno
shrb
mulb
push
hlt
testb
test
mov
pop
ret
shr
loope
pop
inc
das
loopne
pop
dec
inc
jnp
lea
out
popa
inc
push
fistl
aas
or
test
add
pop
push
fs
shlb
in
ficoml
add
xor
xor
jg
mov
xchg
fadds
rclb
fucomp
and
push
aad
fwait
jno
pop
bswap
push
into
and
ficomps
jg
cli
and
lods
inc
cmp
xchg
mov
xchg
icebp
stos
test
mov
jnp
pop
cmpsl
mov
inc
daa
imul
dec
mov
icebp
adc
sbb
push
jl
gs
cmpsb
mov
inc
push
flds
mov
mov
inc
xchg
imul
jnp
xor
sbb
sbb
jae
dec
loop
push
xchg
mov
cs
in
cmp
in
add
fisttps
and
lods
dec
cmp
cmp
lods
push
inc
inc
push
or
shlb
xchg
xchg
stc
push
inc
sbb
push
cmpsb
rcrl
sar
lahf
lods
dec
or
lods
xchg
sbb
xorl
mov
lret
mov
pop
jbe
xchg
push
mov
push
sbb
push
das
mov
adc
push
fs
or
xor
stos
sahf
and
push
jo
hlt
inc
cmc
mov
aaa
imul
stc
inc
in
ljmp
mov
jg
dec
ljmp
fcmovnb
js
sbb
movsl
xor
decl
cli
imul
dec
mov
into
sahf
dec
mov
add
fs
add
mov
and
in
sub
ds
hlt
popa
int3
push
push
mov
inc
push
cmpsb
loopne
adc
push
and
mov
aad
add
aas
nop
outsb
inc
sarb
and
sub
cmp
sti
fiaddl
in
jmp
inc
aaa
out
shrl
int
popa
xchg
xlat
repnz
cli
xchg
test
sub
and
push
adc
std
lods
add
movb
fmul
pop
jle
adc
inc
dec
and
mov
dec
cmp
xor
jge
loope
sbb
gs
jge
mov
imul
subb
mov
cmp
pop
sub
xlat
js
adc
sub
mov
mov
popf
stos
insl
or
cmpsb
aas
inc
fsqrt
nop
mov
ljmp
inc
pusha
pop
js
mov
enter
xor
idivb
sub
daa
cmp
out
mov
scas
cmpsl
data16
jge
mov
cmc
add
nop
das
add
js
mov
cwtl
sub
jo
mov
ret
loope
pusha
adc
imul
lods
or
loope
cmp
movsl
repnz
xchg
and
jo
pop
dec
sub
cmp
lea
outsl
push
lcall
imul
out
in
xchg
mov
cmp
inc
imul
xchg
cmpsb
xchg
jno
sbb
and
fistpl
and
jmp
loope
scas
addr16
dec
int
sbb
jnp
xor
dec
inc
add
push
jecxz
mov
inc
test
sub
loopne
dec
cmp
pop
dec
pushl
ja
push
fldenv
mov
movsb
out
mov
xor
movsl
xchg
data16
out
sub
mov
rcl
xor
jb
lcall
test
mov
adc
sub
andb
fisubrs
movsl
cmpsb
repz
mov
and
aas
fisttpll
or
addr16
xchg
imul
mov
dec
fnstcw
es
push
mov
jo
or
filds
cmp
or
das
push
push
mov
pop
mov
mov
aam
lret
icebp
sti
inc
add
mov
int3
lods
adc
pop
pop
mov
jns
ret
pop
mov
loope
cmp
sti
sarl
cld
iret
mov
ret
lahf
mov
ds
into
dec
jl
sub
inc
out
stos
fmull
add
jb
xor
jae
in
jno
outsl
ret
fistpl
call
fsubs
rcll
sub
je
adcb
or
scas
mov
addr16
jle
pop
jbe
or
xlat
jge
mov
sbb
loope
loope
pop
dec
adc
jae
pop
push
mov
add
add
cmpsb
fs
dec
inc
ljmp
pop
mov
push
pop
iret
insl
fisubl
adc
shlb
dec
xchg
je
faddl
pop
add
fsubp
xor
shl
loopne
xchg
aaa
bound
notl
mov
cld
mov
lock
ss
jp
dec
divb
loope
xor
add
jle
push
mov
mov
and
or
cmp
sub
cld
rcrl
cltd
inc
jg
mov
insb
psrad
rcrl
sub
insl
leave
lret
mov
bound
or
and
inc
jo
shl
mov
jo
cltd
mov
jle
scas
sub
add
cld
ds
aas
and
mov
dec
mov
into
std
mov
outsl
icebp
andb
fs
pop
inc
sub
rcrb
add
bound
lret
mov
arpl
data16
xchg
cwtl
push
sub
jbe
aaa
lods
jmp
pop
lret
sbb
les
fsubrs
cmpl
sbb
pop
sbb
inc
mov
test
sarl
testb
dec
inc
jnp
mov
ja
out
add
or
scas
fldt
jg
lds
sbb
xchg
jne
fadds
jle
xor
popa
pop
into
or
xlat
adcl
dec
mov
cmp
out
xorl
clc
frstor
imul
data16
aaa
fmul
scas
movsl
pusha
gs
and
adc
fidivl
out
rcrb
aaa
outsb
sbb
sub
jb
xchg
data16
insl
mov
push
imul
loope
lock
sub
push
seta
movsl
test
push
out
jbe
enter
add
bnd
xchg
jg
inc
sbb
jp
pop
push
push
jmp
stos
sbb
scas
addr16
adc
test
data16
pop
fdivl
cmp
add
xor
daa
aaa
mov
cmpsb
mov
cmp
add
jg
notl
sub
cmc
dec
xor
mov
mov
xchg
pop
clc
loop
lahf
mov
js
sarl
add
movsb
fwait
xchg
pop
inc
sub
repz
mov
adc
andb
neg
inc
mulb
fidivrl
pop
push
inc
imul
push
movsb
push
jnp
lret
jge
xor
es
shl
les
fidivs
xchg
jae
imul
dec
pop
xchg
pop
popa
or
pusha
cmp
pop
xor
sub
add
ret
repz
int3
lods
dec
xor
ja
dec
es
test
aam
jp
push
jbe
mov
call
mov
dec
sbb
sbb
sub
push
jns
xorb
dec
push
popf
or
ffreep
cmp
je
sbb
gs
sti
sti
add
jmp
das
cmpsl
xchg
adc
cmp
pop
xor
cwtl
sub
gs
pop
and
or
add
push
ficoms
push
lcall
adc
mov
imulb
push
ja
fdivrp
cld
pop
dec
or
jne
js
call
pop
mov
mov
push
lret
fsubp
jmp
loopne
outsl
in
pop
aam
add
dec
movzbl
nop
inc
push
jl
lahf
ss
out
inc
dec
sub
jecxz
jmp
loop
xor
push
pop
mov
fimuls
cmp
sub
push
ret
call
mov
mov
icebp
test
sbb
mov
sbb
lea
addl
or
mov
xlat
mov
push
pop
enter
xor
fucom
pop
repnz
sub
pop
test
jb
and
dec
das
in
stc
adc
aad
sarb
dec
sub
cltd
xor
pop
cmp
mov
arpl
jb
add
add
mov
repnz
jmp
bound
lea
cld
mov
lcall
jl
inc
movsl
xlat
dec
sbb
cs
adc
rclb
jmp
mov
je
lock
inc
or
push
sbb
jg
xchg
dec
scas
jp
pushf
mov
and
hlt
pop
ss
sub
in
cld
push
mov
pop
push
call
out
imul
add
xchg
mov
pop
pop
xlat
add
cmp
ret
fwait
push
jg
sub
int3
sahf
mov
popa
popf
lods
jb
ret
enter
push
lods
adc
sbbb
push
jge
nop
push
fidivl
jmp
call
dec
jl
pop
push
jae
adc
aas
or
sbbb
pop
xor
icebp
out
adc
je
cmpsl
js
push
inc
push
stos
dec
popf
scas
cmp
out
popa
mov
cli
stos
test
sub
cli
pop
mov
mov
sub
mov
xchg
push
insl
scas
repnz
mov
dec
mov
arpl
hlt
adc
negl
mov
add
dec
sbb
mov
and
cmpsb
rolb
shlb
mov
das
jecxz
push
xor
xchg
cmpsb
sub
jne
or
icebp
pop
lret
mov
inc
push
add
jb
jle
push
push
popf
pushf
push
jbe
mov
adc
xor
mov
xchg
movsb
movsl
dec
jle
adc
fsubrs
adc
lods
test
mov
std
adc
mov
lcall
mov
xchg
fstpt
loopne
es
lret
xchg
xor
mov
jbe
in
inc
jmp
push
xchg
push
xor
push
dec
jg
mov
out
adc
mov
flds
ljmp
inc
sbb
mov
dec
sbb
jge
lock
outsl
push
and
fwait
sbb
inc
aas
dec
sub
jp
fsubs
sub
push
add
cmp
dec
outsl
fnsave
es
movzwl
mov
shlb
push
inc
mov
outsl
mov
inc
mov
lahf
jne
cwtl
pop
pusha
pop
mov
pop
lcall
and
jl
lock
adc
cmp
inc
xorl
adcb
cli
inc
hlt
sub
shlb
loopne
fistpll
mov
sub
pop
mov
xor
pop
mov
xchg
mov
aad
roll
cmpl
hlt
sbb
adc
jge
mov
dec
ljmp
mov
pop
stc
mov
push
jns
inc
xlat
add
les
pop
lcall
lds
aas
or
xchg
sub
push
cmp
cs
jno
dec
mov
pop
in
inc
jno
mov
jb
mov
xor
cmp
pop
enter
xchg
outsl
loopne
inc
inc
jnp
cltd
dec
loop
std
pop
mov
out
mov
add
jp
and
and
out
into
cwtl
fs
mov
xor
test
int
imul
fcomps
flds
mov
dec
mov
xor
inc
ljmp
fsts
rcr
imul
and
ss
idivl
mov
pop
xor
mov
js
mov
mov
cmp
xchg
adc
adc
imul
jno
push
mov
add
fcoms
and
outsl
or
mov
repz
xchg
jns
out
in
ret
inc
push
pop
negb
imul
fildll
sub
ret
adc
mov
out
dec
lret
sub
les
lds
push
add
mov
dec
loop
jnp
mov
jae
jl
or
mov
pop
ja
repnz
out
sub
std
jns
pop
cltd
scas
and
mov
or
rcrl
into
cmp
lock
pop
jg
fstpl
push
xor
pop
jge
aad
sbb
lcall
aas
scas
cmp
lods
xchg
jne
xchg
insb
dec
cmp
sbb
pop
stc
jmp
fstpl
inc
orb
push
dec
mov
add
pop
mov
push
push
pop
xchg
insl
movsl
mov
cmpb
inc
xchg
sub
push
aam
sbb
jg
and
stos
fwait
scas
sbb
nop
fs
jne
idiv
clc
adc
cmc
mov
or
cli
aaa
pushf
mov
dec
pusha
je
xchg
hlt
dec
test
pop
call
les
or
sub
outsl
in
ret
faddl
and
sub
bound
imul
pop
push
fcom
btr
dec
rclb
ret
sbb
xor
imul
or
shr
xor
and
inc
mov
cmp
jle
je
mov
scas
inc
fwait
int3
push
scas
roll
push
xor
repnz
jo
adc
mov
arpl
test
test
xlat
pop
ret
xchg
fldl
repnz
and
push
stos
inc
mov
fwait
xor
xchg
lahf
adc
movsb
jle
flds
sub
xor
out
xor
imul
into
int3
jo
repnz
clc
roll
aas
xlat
fisttpll
sub
sub
adcb
push
pop
mov
dec
daa
ss
ds
or
push
repnz
or
push
inc
mov
cli
and
ss
in
mov
je
sub
mov
jle
aad
cwtl
das
add
fisubs
lahf
mov
scas
cld
mov
mov
shll
xlat
das
jp
das
fucom
outsl
stos
mov
xchg
cld
nop
movsb
dec
in
movsl
mov
cltd
adc
cltd
mov
mov
pop
aas
ret
mov
add
cld
xchg
mov
cmp
lahf
xchg
aam
xchg
dec
sub
sub
and
mov
andl
jl
or
ficoml
push
setne
call
dec
inc
out
jne
inc
les
test
inc
push
lahf
andl
adc
leave
scas
orl
cld
push
jecxz
fisttps
jl
dec
inc
sub
stos
sbb
andb
jns
orb
pop
dec
call
movsb
icebp
mov
test
xor
push
push
and
aaa
int
mov
loop
in
jg
fcmovne
or
loopne
xor
fs
pop
sub
jmp
imul
dec
jo,pt
cmpb
jmp
shll
jnp
rol
in
sbb
or
cmp
call
incl
mov
xor
in
ja
push
lock
inc
cmp
mov
sub
push
dec
fsts
lret
clc
mov
mov
jno
mov
ret
push
stos
pop
andl
mov
sbb
in
jg
aas
dec
bndstx
pop
dec
ja
test
pop
out
cmp
push
fsubrs
add
test
mov
mov
repnz
das
decl
cmp
orl
jmp
popf
sub
or
jmp
sbb
loopne
inc
sub
arpl
testb
cltd
mov
loop
lods
or
leave
in
imul
aad
divb
arpl
adc
xchg
and
sahf
mov
adc
jno
xchg
std
mov
imul
jle
dec
pop
insb
xchg
push
dec
xchg
fisttpl
enter
xchg
out
xchg
ret
and
pop
icebp
mov
sbb
and
inc
aam
push
pop
cmp
lea
pop
mov
inc
in
out
and
or
sahf
adc
loope
xchg
or
adcl
xchg
int
mov
dec
cld
mov
imul
test
imul
inc
test
push
in
mov
rcrl
jbe
fstpl
lea
sbb
sbb
pop
scas
sub
sub
test
out
and
inc
jl
sbb
addl
clc
or
stos
je
sti
mov
sub
add
mov
xor
mov
lret
pusha
ds
inc
lea
push
arpl
rclb
pop
nop
les
jne
mov
or
cs
xor
mov
push
mov
push
ds
lea
jo
push
popf
cwtl
dec
adc
push
push
in
mov
pop
inc
push
jle
push
stos
xor
lods
cmp
mov
cmp
lea
dec
mov
cli
fstpl
dec
mov
xchg
and
jnp
gs
dec
call
mov
push
cmpsl
xlat
movsb
push
mov
sub
aaa
or
movsl
push
dec
xchg
mov
adc
clc
or
loopne
sub
call
mov
fucompp
nop
ja
jbe
mov
mov
flds
inc
xchg
push
cmc
mov
or
cli
lods
js
mov
addr16
movl
out
inc
popa
insl
xor
dec
push
je
mov
rcl
add
insb
jne
jo
push
sbb
stos
roll
ljmp
iret
pop
jp
adc
test
dec
sbb
sbb
clc
jbe
insb
faddl
test
lret
or
inc
pop
xor
loop
cmp
outsb
fbstp
mov
mov
cmpsb
test
jo
lcall
hlt
leave
das
push
loop
imul
or
sbb
insl
pop
push
aaa
mov
jg
bound
ss
test
jnp
pop
insl
or
adc
pavgb
sbb
out
in
mov
xorb
stc
add
sbbb
shlb
imul
shlb
icebp
iret
push
aaa
or
xor
add
mov
rcll
adc
mov
movsb
jo
hlt
jbe
mov
repnz
adc
and
aas
pop
sub
sbb
push
jae
or
inc
fsubrs
mov
ljmp
sub
cmpsb
lock
dec
mov
ss
enter
mov
es
push
mov
add
push
mov
inc
and
shll
pop
movsb
aas
cmpsb
daa
or
mov
rcll
jg
inc
lods
mov
adc
aad
add
ficompl
mov
rcll
dec
aam
cld
jmp
mov
sti
xchg
into
adc
sbb
mov
mov
int3
adc
icebp
fdivl
insl
adc
jmp
dec
imul
in
into
jbe
in
jmp
std
popa
jb
ja
inc
and
fistpl
in
jno
mov
jnp
jno
pop
dec
cmpsb
cmp
insl
into
es
sub
je
adc
add
fwait
scas
push
divw
pop
inc
sti
lret
inc
imul
notl
jle
mov
ret
sti
jae
shlb
fwait
inc
sbb
cs
fimull
imul
mov
hlt
mov
mov
sbb
out
lods
scas
pop
mov
sub
jl
or
sbb
xlat
push
push
insb
dec
mov
loope
add
push
enter
push
outsb
push
and
xor
pop
inc
jmp
sub
jecxz
ja
inc
leave
xchg
and
mov
xchg
test
daa
pop
sbb
dec
mov
es
iret
fsubr
scas
icebp
inc
hlt
jge
adc
movsl
movsb
int
scas
sub
mov
mov
xor
sar
cmp
push
test
jae,pn
cltd
cld
mov
jnp
dec
adc
fcoms
mov
rcrb
fcom
mov
das
jg
cmp
sub
daa
push
dec
mov
mov
mov
mov
in
js
outsl
icebp
rcr
test
mov
gs
sub
stc
dec
push
gs
pop
adc
push
lret
adc
xchg
jo
xchg
push
out
pop
stos
pop
push
pop
dec
adc
mov
dec
pop
in
mov
jl
movsb
rorb
dec
mov
sbb
xchg
push
cmpsb
loop
inc
loop
add
std
dec
sbb
loope,pt
hlt
mov
inc
sbb
jl
add
fbstp
or
and
into
sub
fwait
or
cli
std
int3
jle
lods
daa
inc
jbe
inc
add
xchg
dec
sub
lods
push
loop
sub
je
outsl
mov
js
pop
xor
les
xchg
inc
rcrb
add
sti
adc
mov
dec
iret
nop
imul
xor
in
dec
enter
xchg
xchg
ds
mov
add
jae
push
pop
aaa
cld
cwtl
cwtl
sbb
lods
mov
lods
dec
cmc
ds
xor
mov
dec
repnz
arpl
adc
sbb
adc
andb
sub
adc
fbstp
sub
clc
icebp
push
adc
inc
es
inc
add
push
in
xor
sti
pusha
cld
std
mov
outsb
gs
dec
test
fstpt
pushf
inc
je
mov
sbb
incb
les
inc
inc
mov
fbld
fwait
cmc
in
dec
xchg
xchg
fdiv
pusha
popf
mov
or
xadd
pop
enter
cs
mov
pop
push
inc
nop
inc
inc
adc
mov
movsb
adc
mov
push
fsin
in
jle
lcall
hlt
push
jns
push
mov
push
mov
lds
mov
sub
sub
jnp
xchg
dec
cmc
hlt
scas
cwtl
push
outsb
decl
mov
pop
mov
adc
stos
xchg
pop
scas
or
mov
push
js
call
dec
push
scas
imul
inc
mov
and
aad
inc
je
ret
add
mov
fadds
ljmp
jno
stos
dec
and
in
out
mov
aam
jbe
cltd
jmp
mov
cmp
push
das
stc
shr
mov
test
jmp
sub
out
in
xor
inc
sbb
orb
aad
mov
test
jnp
xchg
hlt
lock
ret
mov
mov
mov
xchg
sub
fistps
outsb
push
inc
mov
mov
sahf
and
pusha
outsb
mov
add
repz
jae
dec
xor
nop
push
mov
pushf
fisubrs
mov
fldpi
orb
ficoml
mov
test
fcmovnbe
test
sub
cs
add
movsl
arpl
arpl
test
cmpsl
xor
enter
outsb
ds
and
clc
jb
push
pop
cmpl
sub
fcompl
hlt
xor
dec
or
mov
sub
mov
andb
sti
ja
call
push
mov
push
and
pop
ficompl
shll
lcall
lahf
jae
fisubrs
push
cli
adc
fstenv
push
ret
inc
push
pop
cwtl
sbb
mov
mov
fld
cmc
push
fdivr
add
test
inc
pop
mov
inc
sbb
jp
lret
je
add
xchg
xor
and
jp
out
je,pt
mov
mov
push
data16
popf
cmp
pushf
xor
sbb
shr
sbb
fstp
xor
sbb
cltd
mov
and
cmp
dec
inc
ret
cmp
sbb
andb
icebp
jp
sub
scas
mov
push
ljmp
pop
mov
das
imul
hlt
jmp
mov
out
bound
or
mov
insb
repz
test
pop
sti
pop
mov
lret
out
push
rorb
loope
lahf
pop
push
ljmp
sub
shrl
jle
fwait
lds
sbbb
add
fbstp
push
mov
adc
fldenv
push
mov
outsl
mov
addr16
addr16
jnp
dec
pop
stos
imul
cltd
jg
xlat
stos
out
test
mov
pop
stos
and
pop
call
pop
push
popa
jg
and
xchg
mov
ja
sub
pop
stos
mov
std
mov
or
cld
leave
rolb
je
in
test
sub
jecxz
in
aaa
push
das
jbe
mov
push
shrl
pop
sbb
mov
pop
in
and
xor
xchg
lret
cmc
outsb
sub
scas
test
xchg
int
sub
adc
fisubl
std
jle
cli
jl
push
fdivs
sbb
ficompl
dec
pop
jg
aaa
mov
lcall
mov
fisttps
inc
loopne
xchg
clc
adc
mov
mov
out
xorb
rcrl
sub
mov
sbbb
inc
imul
addr16
dec
cmp
scas
dec
and
mov
mov
inc
jae
or
das
dec
jno
aaa
xor
sbb
mov
sti
pop
lock
div
iret
cmp
jmp
mov
mul
and
nop
cs
aad
pushf
rcrl
mov
fwait
adc
arpl
xor
addr16
mov
aaa
or
sub
sarl
ja
sbbl
mov
stos
sub
pop
inc
inc
ja
fstp
or
mov
lcall
lret
sbb
add
and
gs
sbb
add
cmp
dec
push
jle
gs
pop
cmp
jmp
insb
icebp
mov
pop
aam
push
loop
adc
dec
popa
repz
pushf
in
sbb
mov
rorb
jne
cmp
lahf
pusha
xlat
xchg
inc
xchg
inc
aaa
push
push
mov
mov
pop
test
add
imul
mov
or
and
mov
loop
fldt
push
push
movsl
sarb
inc
jmp
icebp
fucomip
mov
int3
lock
adc
sub
cmc
inc
aaa
out
imul
jne
jb
repnz
sub
inc
les
jne
lahf
mov
scas
sub
cmpsl
jle
adc
xorl
pop
xchg
addr16
rep
loopne
pop
pop
jo
mov
in
inc
ret
xor
add
comiss
ljmp
add
ds
ret
stos
xor
xor
inc
mov
and
pop
dec
mov
testb
std
fdivrs
je
iret
cmpsl
mov
fimull
jo
cwtl
cld
mov
insl
dec
int3
inc
mov
pop
hlt
mov
inc
push
or
jo
je
push
cs
cmp
fidivrs
adc
sbb
insl
dec
popa
aas
pop
dec
insl
mov
loope
rcrl
inc
push
and
shlb
sbb
adc
add
mov
dec
and
adc
push
mov
imul
call
mov
mov
sub
dec
aad
mov
jge
loopne
pop
test
ficoms
dec
pop
ss
arpl
sub
nop
cmp
lret
es
cmpsb
xor
dec
mov
mov
sbb
insb
sti
int3
push
mov
loopne
cmpsb
insl
sbb
movl
pop
jb
lock
ja
sahf
aaa
shll
cli
xor
gs
push
xchg
cmp
in
push
psrad
xor
sbb
or
ds
cld
js
mov
push
push
dec
pop
or
pop
jg
jl
mov
sarb
fidivs
pop
pop
dec
aam
dec
test
dec
scas
out
pop
adc
or
repnz
cmc
xchg
sarl
cwtl
dec
rcrb
mov
scas
lea
or
xchg
mov
push
ja
dec
push
mov
scas
orb
into
jno
lret
outsl
pop
mov
mov
fidivrl
test
popa
jno
test
xlat
loopne
mov
cmp
in
in
and
adc
fmul
in
mov
rolb
add
test
mov
add
xchg
cwtl
adc
add
jl
call
dec
or
pop
dec
or
push
lcall
jge
in
shlb
dec
sbb
icebp
lret
cli
mov
jae
lahf
loopne
gs
mov
fwait
sub
ret
adc
lcall
mov
xlat
stc
or
pop
int3
insl
push
lret
ja
push
cli
jns
lea
mov
scas
mov
inc
pop
std
cld
add
idivb
pop
xchg
fistpl
pop
xchg
arpl
pop
xchg
mov
div
jmp
adc
pop
aaa
test
gs
int
jno
or
imul
imul
negl
lahf
jb
lods
sti
js
addr16
sbb
cmp
and
mov
inc
mov
insl
subb
inc
int3
lds
inc
push
in
add
inc
inc
sar
inc
mov
inc
inc
pop
lret
dec
icebp
push
pop
xchg
sti
or
mov
sahf
adc
enter
ficompl
cltd
es
stos
mov
je
mov
cmp
rclb
mov
inc
mov
repnz
push
dec
jmp
ret
js
mov
xor
bound
push
cmp
fistpl
adc
cmc
mov
cmc
pop
jl
xor
mov
mov
nop
add
and
hlt
add
xchg
jne
cs
and
outsb
test
dec
js
add
push
mov
fwait
mov
push
jle
rolb
mov
pop
arpl
popf
pop
inc
fmuls
fnstsw
xchg
jmp
pop
clc
lcall
dec
mov
int3
dec
cmp
popa
insb
or
pop
inc
pop
testb
jo
mov
cmp
jge
fs
out
imul
test
call
and
rolb
leave
adc
popf
loopne
icebp
sbb
fidivs
jmp
int
cmp
scas
lods
daa
cs
nop
ret
add
mov
mov
lcall
lock
dec
adc
pop
pop
out
sub
fildl
stc
fnstsw
mov
icebp
ljmp
scas
xor
ret
enter
xor
fiadds
cmpsb
iret
icebp
add
xchg
pop
xchg
cmp
mov
mov
mov
push
mov
rcll
inc
mov
push
fistps
add
or
adc
cmp
cmpsl
ret
add
jbe
fmulp
popfw
add
sub
cmp
sbb
repz
das
xchg
lods
scas
adc
into
repz
sub
outsb
movsl
inc
adc
lret
xchg
loop
pop
aam
mov
jo
sub
and
add
dec
xor
repz
out
add
sub
jle
jmp
or
and
enter
out
scas
push
les
les
xor
inc
lods
fsubl
pop
lret
in
inc
popa
pop
sahf
cmp
xor
fwait
and
fistl
mov
cltd
das
bound
xchg
xchg
lods
pushf
loope
jge
insb
jbe
and
sub
scas
cmp
sbbb
sti
out
pop
mov
cmp
jl
repz
pop
sub
cli
push
jge
jbe
mov
xor
into
pop
lods
cmp
rcll
sub
bound
call
jbe
scas
inc
mov
ds
pusha
daa
test
jne
daa
push
mov
cwtl
ret
movsl
in
es
in
andb
mov
cmp
pop
jns
jnp
xchg
jp
add
fwait
cmpsb
sub
mov
or
and
adcl
popl
enter
push
xchg
or
jg
add
mov
int
scas
jne
sub
or
test
out
sbb
stos
loop
fsubrs
xchg
cs
jns
aam
fldenv
cmc
js
lock
cld
and
push
pop
negl
je
cltd
cmpsl
mov
sub
inc
push
fistpl
lret
mov
imul
mov
test
mov
cmpsl
stos
sub
ficoml
jnp
enter
aam
and
jbe
sub
fbstp
insb
sbb
fldl
cmp
push
sarb
scas
out
jg
stos
jae
xchg
or
cmp
push
or
dec
sti
xor
fwait
xchg
shll
mov
dec
or
xchg
or
or
mov
or
mov
out
call
push
push
sub
xchg
inc
inc
xchg
icebp
out
daa
jne
xchg
pop
loope
inc
outsb
sbb
fs
out
cmc
imul
into
inc
lret
mov
mov
jns
loop
adc
mov
xchg
repnz
in
mov
dec
or
or
fsubrl
pop
lahf
call
out
lock
enter
stc
inc
aam
add
or
mov
pop
sbb
mov
sub
add
mov
xorb
push
pop
js
ret
mov
lock
inc
push
es
jge
push
ds
leave
xor
pop
mov
aas
mov
lods
dec
jae
and
jns
cmp
cmp
xor
dec
sbb
out
mov
adc
mov
cmpsl
mov
sub
lahf
incl
sbb
xchg
jo
dec
fdivr
in
inc
pop
add
out
mov
into
pop
inc
and
sub
outsl
stc
cwtl
sbb
push
ds
mov
or
xchg
mov
xor
in
dec
xchg
and
or
sub
ror
mov
faddl
or
mov
ret
gs
negl
fidivs
out
jmp
mov
ret
cmp
les
xchg
pop
aaa
mov
push
lock
std
dec
jo
mov
sub
lds
xlat
cmpsl
inc
mov
popf
sub
sarl
ja
shrl
xchg
add
xor
cmp
mov
mov
push
lock
jl
xor
sti
mov
adc
jp
cmc
mov
fwait
pop
pop
lret
fbstp
mov
push
mov
les
cmp
dec
inc
test
cmp
xchg
sub
xchg
es
push
or
insl
adc
jle
jns
sub
arpl
xor
sbb
and
std
adc
out
clc
and
stc
fistpll
cld
stos
lods
pop
imul
mov
adc
jg
cld
stos
jp
stc
mov
stc
in
cmpsl
xor
subb
mov
push
pusha
mov
mov
mov
cli
jb
popa
xchg
fldt
fs
pusha
and
mulb
sbb
pop
insb
sahf
xchg
repnz
push
fisubl
pop
pop
mov
ss
inc
das
push
pop
pop
jns
ja
jg
push
adcb
dec
pop
mov
mov
sub
aas
sahf
sub
mov
push
ret
dec
xor
adc
or
cmpsb
lods
pop
push
lods
in
xor
fwait
xor
mov
aam
arpl
sbb
mull
rorl
jbe
and
push
mov
dec
mov
bound
mov
test
sbb
out
ljmp
sub
js
jne
dec
add
scas
fldenv
pop
inc
in
mov
cmp
scas
lods
push
or
cwtl
mov
outsb
or
gs
add
inc
xchg
lret
aam
cmc
orb
imul
jle
dec
imul
xor
mov
lock
out
push
mov
inc
sbb
jl
or
movsl
idiv
fwait
xor
adc
sub
in
arpl
out
jb
loop
rorb
push
enter
push
fsts
mov
pop
clc
ret
or
mov
imul
mov
sti
repz
push
dec
fldcw
adc
inc
sbb
ds
cmpsl
inc
dec
and
std
cmp
cmc
mov
enter
mov
imul
xchg
mov
inc
mov
push
nop
rcll
test
inc
fistl
add
popf
inc
fdivs
aas
pusha
loop
xchg
cmp
mov
sbb
out
cmpsl
sub
mov
loop
jb
and
mov
pop
fs
sahf
pop
es
xor
lods
test
or
cmp
icebp
sub
xor
xchg
bound
inc
aas
cs
xchg
xor
stc
fwait
enter
dec
mov
mov
adc
xchg
ljmp
in
pop
and
jb
pop
inc
lods
mov
xchg
fs
stc
popl
loopne
lea
out
mov
ror
adc
sub
aas
cltd
hlt
test
jmp
int3
das
or
ss
and
or
or
sbb
jg
int
pusha
repnz
or
inc
mov
je
mov
and
outsl
push
sbb
cmp
sti
cmp
in
mov
lcall
aad
cltd
loop
xor
out
insb
inc
fisubrs
out
ja
outsl
rolb
pop
stos
inc
lret
mov
or
std
cmpsl
pop
loope
add
and
scas
ret
jecxz
push
or
xchg
es
loop
andl
hlt
cmpsb
stos
out
cmp
fwait
push
push
arpl
fidivs
or
mov
mov
mov
movsb
push
hlt
lahf
lea
arpl
movsb
or
mov
pop
and
imul
cmp
out
jmp
cmp
push
cmp
sub
fdivl
xchg
ret
cli
sarb
cmpsb
sbb
xor
dec
fadd
xor
or
mov
fs
movb
pop
cmp
dec
loopne
pop
enter
ds
pop
push
jmp
sbb
ret
mov
sti
faddl
xchg
push
fiadds
cli
popa
mov
ficompl
or
push
jmp
movsb
ds
xchg
pop
outsl
sub
idivb
mov
jmp
jp
sbb
mov
in
jae
xchg
xor
pop
and
scas
cli
mov
add
mov
mov
out
mov
adc
fisttps
sarl
pop
push
xor
push
dec
push
jle
mov
cmp
notl
or
cmp
mov
xor
jge
rcrb
icebp
mov
push
popa
lret
sub
cmpsl
mov
negl
iret
into
mov
nop
inc
xchg
push
imul
push
inc
sbb
push
test
out
scas
movsl
lcall
les
mov
test
sbb
insb
add
ds
push
and
sti
clc
sbb
lret
nop
iret
xor
mov
and
sahf
fstpt
mov
iretw
pop
pop
adc
inc
cld
xchg
stos
clc
pop
lahf
ret
rol
cmp
mov
xchg
sub
mov
test
inc
shll
std
sub
or
inc
daa
and
cmp
pop
mov
sar
fiaddl
mov
insl
mov
not
movb
or
outsb
or
lret
inc
or
mov
jg
fwait
out
fildll
test
mov
sub
cld
lret
pop
mov
clc
xchg
adc
mov
or
call
movsb
mov
inc
fidivrl
and
cmpsb
cmp
jl
sub
ret
inc
iret
aas
pop
xchg
jo
sqrtps
cmp
xchg
shr
inc
xchg
inc
add
sahf
sbb
sbb
arpl
fadds
jnp
in
mov
inc
jae
sbb
gs
out
jp
pop
aam
cmp
xor
mov
push
adc
cmp
push
sbb
inc
sub
adcl
sahf
insb
sub
xor
stos
loop
nop
movsl
insb
ja
push
pop
xchg
scas
vpmacsdqh
cwtl
aas
adc
pusha
stos
cmp
sbb
xchg
xorb
cld
xor
mov
pop
scas
inc
mov
not
lcall
fcmovnu
fcoms
jbe
xorb
or
xor
lds
dec
push
inc
add
sbb
cmp
mov
push
mov
inc
je
je
into
mov
lea
lea
dec
mov
jp
xor
in
adc
xorb
bound
out
outsl
test
loop
aam
jle
loope
sbb
mov
push
loop
push
lods
fldcw
pop
inc
dec
jo
and
les
aaa
mov
dec
mov
js
pop
enter
addr16
out
movsl
adc
jp
pop
and
mov
lcall
pusha
mov
add
lods
pop
shrl
mov
shll
or
cmp
clc
sbb
mov
in
adc
cmc
sti
xchg
sub
mov
subb
lds
mov
insl
cmc
push
pop
imul
jecxz
fs
push
xchg
movsb
sbb
xor
das
mov
jae
pop
loopne
xchg
lcall
and
out
sub
fbld
in
jge
orl
cmp
lds
mov
movsl
xchg
jne
mov
jne
lahf
cmpsl
push
jg
inc
cmp
frstpm(287
subb
add
pop
cmpsl
mov
fwait
sbb
jg
inc
xor
lcall
mov
incb
cmp
in
push
stc
mov
sbb
jmp
sbb
add
idiv
movsl
push
shrl
outsl
outsl
mov
loop
flds
xchg
fs
pop
scas
or
mov
scas
xchg
push
and
pop
xor
cmp
jb
aam
add
cmp
lock
ss
js
pop
pop
mov
test
call
loope
inc
add
je
cmc
in
adc
ret
push
push
push
xor
sub
xchg
xor
arpl
xor
int
mov
inc
dec
int3
inc
loop
iret
or
inc
fstpt
pop
hlt
nop
jne
inc
in
lahf
jmp
nop
mov
jp
mov
insl
add
aad
loopne
repz
push
mov
push
inc
pushf
jo
frstor
mov
sub
fmull
cltd
arpl
adc
ja
add
icebp
or
sub
or
mov
adc
imul
mov
fists
lcall
imul
sub
push
and
addr16
scas
cli
fnstenv
fistpl
addl
push
add
repnz
daa
nop
inc
sahf
xchg
xchg
addr16
mov
jmp
lods
pop
add
mov
pop
xor
jmp
jo
lcall
push
popf
or
push
xchg
aaa
sub
push
pop
inc
sub
call
jle
in
xchg
inc
sub
scas
dec
stc
jns
cld
mov
adc
mov
imul
addr16
ljmp
enter
insl
ss
mov
cmpsb
movsl
vcomisd
pop
or
pop
int
sti
adc
aam
adc
lcall
aad
mov
das
xor
jnp
stos
xor
jno
test
mov
popf
adcb
add
xor
sbb
xor
addr16
aad
aam
adc
dec
or
mov
sub
hlt
loop
repnz
pushf
inc
ret
xchg
cmovl
jl
clc
push
pop
push
mov
push
sub
pop
mov
jae
dec
fdivl
and
dec
out
and
pop
ds
stc
arpl
shrb
mov
ds
dec
scas
adc
xlat
out
repz
sub
out
push
xlat
mov
jae
ljmp
bound
and
scas
push
icebp
hlt
outsl
imul
pop
aam
pop
dec
cmp
sbb
mov
jnp
clc
ss
out
ljmp
gs
pop
aam
inc
stc
pop
inc
out
ljmp
popf
push
adc
and
push
add
sub
cmp
xchg
mov
ret
cmp
add
cmpsl
lds
xor
jnp
int3
or
jp
jle
sub
ror
jl
pop
leave
and
or
dec
or
jmp
lds
daa
adc
jmp
bound
ds
popa
movsl
fiaddl
mov
jno
scas
les
div
notl
loope
fcmovb
scas
jge
cmp
arpl
adc
aad
bound
loop
gs
pop
scas
popf
lea
cmpsb
adc
mov
pop
dec
imul
popa
mov
push
pop
lret
inc
scas
or
neg
or
mov
cmp
mov
adc
scas
adc
mov
in
pop
ficoml
xor
out
sarb
shll
or
mov
js
inc
ss
mov
sti
push
inc
out
mov
push
inc
lds
movsb
in
outsb
loope
inc
or
adc
loope
ss
pop
stos
subb
or
int
popa
dec
orl
adc
loop
shll
ljmp
cld
loop
xor
test
and
jecxz
rorb
andb
adc
dec
enter
sar
mov
push
repnz
mov
push
cmp
lret
mov
popf
sbb
leave
xchg
xchg
jge
inc
xor
jno
leave
cld
xlat
jb
std
push
lcall
jns
pop
mov
push
push
das
mov
or
add
imul
mov
pop
dec
ds
mov
mov
mov
jecxz
ja
jne
or
les
hlt
xor
push
ljmp
sar
loop
aam
cltd
les
fbstp
adc
push
mov
je
adc
inc
push
push
pop
jne
inc
in
dec
lret
mov
dec
aaa
push
mov
mov
pop
stc
xchg
scas
lcall
adc
call
jno
cmpsb
dec
andl
adc
sti
push
out
movsl
and
inc
loop
icebp
adc
dec
jl
out
mov
adc
dec
cmp
sub
pop
rclb
jno
dec
scas
jae
pop
dec
aad
iret
xchg
cmp
or
std
aam
add
sbb
out
aas
dec
mov
data16
out
mov
shlb
inc
push
jmp
and
outsb
jmp
dec
or
int3
mov
repz
aas
mov
int
pop
jge
adc
pop
int3
cmp
mov
sarl
sahf
mov
push
push
pop
nop
fists
push
enter
pop
aad
gs
pop
movsl
mov
inc
ret
call
jns
stos
jp
xor
adc
ja
add
js
mov
das
sub
sub
cmc
xchg
cli
dec
push
adc
jecxz
cmp
add
popf
add
adcb
mov
and
mov
add
aas
adc
sbb
jnp
arpl
inc
add
adc
pop
iret
mov
negl
or
sbbb
xlat
jg
lea
mov
stos
mov
scas
dec
roll
xor
shlb
rcrl
lea
inc
js
pop
xor
mov
sbb
push
pop
jl
inc
fsubrs
or
in
clc
dec
pop
sub
scas
dec
lret
mov
mov
sbb
out
add
fdivrl
nop
ds
adc
inc
jecxz
adc
mov
cmp
jge
je
xor
add
adcb
dec
inc
out
repz
rcrl
shrl
test
es
pop
dec
adc
dec
ljmp
dec
inc
fildl
out
jle
and
jmp
jge
xchg
inc
mov
xor
addr16
sahf
fstps
jo
test
inc
xchg
imul
rorb
mov
in
add
xchg
jg
imul
test
insl
mov
mov
ljmp
mov
mov
aas
sbb
pop
test
sbb
or
cmp
sub
iret
pop
xor
arpl
lahf
fldt
iret
outsl
jb
xor
sub
or
mov
xchg
or
jb
inc
repnz
and
into
sbb
cmpsb
daa
and
push
sar
sbb
sbb
sub
dec
jmp
jl
out
cltd
jecxz
cmpsb
jle
std
scas
call
mov
adc
cld
lret
fbld
bound
or
dec
or
arpl
daa
addb
mov
mov
push
push
mov
enter
in
fwait
add
push
sbb
jae
es
test
lods
fsubrp
mov
inc
sbb
movsb
inc
pop
fwait
sbb
sub
push
pop
adc
aas
mov
sti
push
jo
mov
mov
sub
xchg
pop
sub
clc
sbb
lods
icebp
mov
jg
fs
mov
jecxz
cmpsl
pop
movsl
and
stos
sbb
sbb
dec
pop
mov
mov
lahf
xorb
fmulp
pusha
jle
daa
adc
lods
adc
lret
push
push
jmp
test
mov
adc
xorb
neg
lods
loopne
sbb
stos
pop
mov
bound
sbb
jne
pop
mov
push
push
mov
jne
arpl
mov
out
xchg
inc
mov
pop
mov
inc
cltd
mov
imull
mov
scas
rcl
jo
movl
mov
adc
inc
lds
jae
lea
cmpsb
mov
movb
mov
stos
mov
adc
in
movsb
mov
add
mov
pop
add
mov
inc
out
pop
pop
daa
add
or
adc
ret
icebp
adc
and
loope
stos
ret
jmp
xchg
cmp
sbb
sub
sar
mov
jb
push
fwait
xchg
xor
lret
nop
and
sbb
pop
xor
lds
inc
outsb
adc
leave
js
lret
aam
mov
push
xlat
sub
cmpsl
out
xor
push
mov
ret
mov
sub
inc
jbe
leave
mov
lods
fisttpl
shl
gs
or
sbb
mov
stos
xchg
movsb
das
and
cmp
add
nop
xchg
in
jno
add
push
push
lods
cli
pop
shrl
mov
fdivp
js
roll
sub
jg
xchg
xlat
jae
xchg
mov
and
and
fldenv
mov
adc
mov
test
rclb
arpl
popa
mov
and
imul
loop
test
inc
jl
xchg
fimuls
movsb
lock
add
out
xchg
addb
sbb
mov
dec
or
jno
xor
or
dec
insb
xor
notl
xor
out
xor
fisttpl
icebp
orl
scas
cmp
int
stos
and
test
dec
and
xchg
mov
push
sub
sarb
gs
stc
lock
dec
inc
shll
adc
insl
fisubrs
test
gs
roll
lret
dec
push
ja
arpl
js
fnstenv
inc
xor
dec
cld
pop
push
push
scas
scas
xor
lahf
xor
xor
fmuls
mov
fdivl
xor
ljmp
dec
mov
fsubrs
pop
mov
xchg
call
in
cmp
pushf
mov
pop
lahf
ljmp
dec
xor
out
scas
mov
push
sti
imul
xchg
mov
jecxz
inc
and
dec
sbb
call
sti
inc
and
xor
jnp
cltd
push
push
loop
outsb
mulb
mov
dec
xor
enter
aas
mov
pusha
jae
jg
pusha
push
sub
in
lcall
out
cltd
lods
jae
lret
out
jnp
sbb
xlat
outsb
jbe
cmc
mov
insb
insl
leave
jns
in
adcb
sbb
fimuls
fldcw
cmpsb
and
or
sbb
jmp
fs
mov
jno
inc
in
aas
lret
jo
sahf
insl
mov
sbb
mov
scas
jnp
add
jmp
mov
xor
mov
shll
and
adc
push
ja
stos
and
jge
loope
mov
sub
iret
mov
int
xor
and
xchg
sub
add
std
cmp
mov
mov
mov
sahf
leave
addl
mov
mov
inc
mov
sbb
js
adc
call
mov
imul
clc
loop
inc
add
pusha
in
lock
pusha
mov
sti
pop
frstor
addb
mov
lret
inc
jb
loop
pop
push
jb
xchg
dec
test
test
imul
daa
cmp
xchg
pop
xor
stos
xchg
and
mov
mov
jmp
aam
pop
jl
or
add
loop
push
std
iret
es
leave
inc
pusha
push
test
pushf
mov
mov
and
rcl
and
dec
push
sbb
lock
cli
fdivrl
lret
pop
pushf
imul
and
push
dec
xorb
out
jne
cmpsl
fldl2e
sub
cmp
mov
lock
sti
sub
bound
xor
cltd
add
cmc
sbb
lea
jns
add
jecxz
cmpsl
ret
cs
js
push
xchg
daa
sub
ss
lods
rcrb
push
mov
movsb
stos
ss
mov
and
pop
sbb
push
add
jbe
xchg
add
inc
ja
in
mov
pop
push
mov
jbe
jno
add
xchg
mov
push
daa
popf
enter
mov
adc
xor
je
dec
clc
sbb
or
sbb
aam
push
nop
cmp
insb
icebp
or
fiadds
mov
out
adc
out
xchg
push
fwait
outsl
cwtl
dec
jmp
cli
cmpsl
and
mov
shlb
aam
mov
mov
or
dec
add
test
push
xchg
xor
inc
mov
jbe
arpl
jle
popl
xchg
push
mov
push
pushf
pop
cmp
mov
fimuls
lods
insl
dec
hlt
jns
fildll
jmp
pushf
sbb
je
push
aaa
loope
mov
loope
inc
pop
mov
in
std
in
sbb
pop
push
int
add
and
adc
faddl
fstps
sub
gs
in
and
pop
jo
jmp
scas
jecxz
call
jns
in
xchg
inc
push
cmpsb
xor
sbb
and
add
aam
hlt
xchg
cli
icebp
repz
scas
ret
push
and
mov
dec
subl
xor
stos
out
mov
jne
mov
dec
insl
repz
stc
mov
cmp
pop
pop
fidivl
out
add
add
mov
repz
sub
jmp
mov
iret
pop
es
daa
sbb
shl
sub
mov
call
incl
xchg
int
or
adc
js
loop
push
dec
pop
loop
sub
adc
add
sub
dec
xor
cmpsl
mov
and
sub
scas
jmp
fsubrs
sbb
push
das
pop
inc
jge
test
xchg
lods
cltd
sub
fisttpll
sbb
aaa
les
loop
adc
outsb
dec
xchg
add
out
mov
out
test
inc
cmp
mov
es
nop
cmp
pminsw
cmp
test
pop
and
and
and
xor
popf
push
in
mov
push
push
rcrl
adc
pop
fwait
cmpsb
adc
out
pop
es
sub
xchg
inc
jp
sbb
lcall
xchg
push
mov
and
xor
pop
ret
adc
push
stc
or
pop
scas
fld
sub
cld
xchg
iret
jmp
aad
das
cltd
daa
jno
jnp
jge
cmpsl
jb
aad
jae
sbb
ds
daa
push
push
icebp
ror
cmp
or
shl
inc
pop
out
adcb
mov
repnz
sub
pushf
enter
sbb
or
adc
inc
jbe
mov
jl
das
enter
xchg
jo
sbb
jnp
jmp
rcrl
push
add
and
cmc
enter
push
jl
add
fistpll
inc
icebp
mov
inc
push
shll
push
fidivl
and
sub
dec
fwait
jle
repz
rcrl
and
in
xchg
test
daa
les
xor
jno
adc
mov
lock
iret
fistps
mov
push
sbb
hlt
std
in
out
fadd
repz
mov
sar
push
dec
mov
xchg
dec
ja
xchg
adc
mov
jmp
movsb
jle
movsb
push
loop
int3
mov
out
mov
loopne
push
cmp
dec
and
jb
adc
pop
lcall
pop
dec
mov
pop
push
pop
sti
adc
push
sub
bound
adc
repz
xor
rcll
inc
jb
arpl
push
or
dec
cmp
sarl
movsl
inc
add
movsl
cli
out
bound
mov
aas
pusha
fwait
mov
js
les
out
push
jecxz
cs
xchg
push
and
mov
jne
daa
std
test
jns
sub
fsub
pop
loopne
and
and
movsl
cmp
jae
pusha
aam
repz
cltd
push
int
cmp
mov
push
mov
pushf
or
mov
aad
dec
stos
nop
imul
cmc
into
xor
mov
loope
and
xlat
or
inc
mov
mov
push
incb
flds
jno
rcll
inc
xlat
ljmp
sub
add
push
or
mov
in
out
inc
pop
out
cmp
or
and
push
adc
push
fld
imul
test
inc
sbb
out
sti
or
into
mov
out
adc
sub
outsb
sbb
adc
inc
push
inc
mov
enter
or
imul
test
mov
or
sbb
push
adc
out
mov
jne
mov
stos
pop
leave
aas
inc
cmc
ret
inc
in
add
sbb
jno
js
fnsave
pop
iret
addb
sarb
cmc
jge
stos
in
mov
pop
dec
cmp
sar
stos
movsb
jg
popa
push
jge
and
hlt
add
addl
push
dec
fnstsw
out
jg
and
jne
lods
lahf
jecxz
push
jns
pop
xchg
mov
je
push
jns
int
repnz
pop
dec
in
or
sbb
inc
push
jl
loope
test
lret
scas
dec
pop
arpl
xchg
add
mov
xchg
push
or
cwtl
push
adc
push
fwait
xor
je
sbb
adc
cmc
jle,pt
popa
cmp
pop
mov
xchg
adc
or
lea
dec
jnp
test
out
data16
cli
inc
mov
or
hlt
adc
mov
push
jecxz
enter
sbb
add
out
jo
sbb
out
rorb
out
popf
test
mov
jg
fs
aas
mov
pop
pop
imull
cs
pop
jl
xor
xchg
cmp
sub
pop
repz
mov
cmpl
fbld
stos
rclb
fldt
jge
pop
jnp
mov
xor
mov
pop
andb
cmpsb
adc
in
xor
nop
push
adc
pop
lea
xchg
inc
jno
pop
jl
xchg
and
cs
jnp
ss
iret
sbb
fcomi
mov
es
mov
cmp
arpl
sbb
pusha
fmulp
out
mov
cwtl
inc
sti
push
and
scas
cmp
les
mov
and
jae
or
outsl
imul
shrl
mov
push
jmp
iret
cmpsb
dec
stc
inc
sub
lods
int3
jbe
jge
dec
fwait
cld
and
je
xlat
sbb
shr
xchg
cld
adc
cmp
fs
jle
pop
cmp
xor
out
inc
dec
sbb
dec
in
ja
ja
adc
cs
ds
out
sbbl
jnp
jb
fadd
jae
mov
sbb
and
pop
jno
and
pusha
mov
fimuls
loop
lds
push
cltd
add
mov
loopne
mov
lds
ljmp
hlt
ja
mov
test
ljmp
shrl
repnz
fnstenv
repz
xchg
add
loope
mov
sbb
or
test
jg
imul
call
sbb
mov
xor
ljmp
adc
aas
sub
xchg
shrb
add
insl
mov
imul
push
lea
jae
punpcklbw
add
xchg
hlt
cmp
mov
or
xlat
and
push
xchg
adc
in
and
add
mov
pusha
in
lods
notb
push
bnd
insl
and
sti
adc
out
data16
push
mov
out
jnp
pop
clc
jecxz
add
cld
xchg
inc
imul
sbbl
pushf
pop
call
cmpsl
cmp
jo
mov
adc
cmp
mov
pop
pop
movsb
add
add
clc
and
mov
inc
dec
ja
sbb
mov
test
jmp
popf
in
inc
das
cltd
out
in
xchg
add
mov
push
cmp
sbb
dec
or
mov
push
scas
add
sbb
xlat
adc
out
xor
push
inc
ds
loopne
testl
out
xor
xchg
mov
pushf
lcall
stos
dec
mov
inc
and
adc
mov
test
loop
or
int
ja
jns
mov
cli
pop
push
pusha
cmp
les
inc
les
popa
push
aas
jo
out
mov
dec
cld
stos
or
scas
jge
shlb
sbb
or
movsb
inc
lret
sub
test
mov
xchg
or
addr16
sbb
gs
movsl
pop
cmp
out
es
jo
clc
mov
lret
cld
jg
sbb
sub
pop
pop
pop
js
mov
gs
pushw
cmp
add
inc
fwait
iret
fisttpl
test
sub
xor
mov
incb
int3
or
out
mov
pop
jo
sbb
sbb
insl
jmp
jle
pop
dec
hlt
test
mov
cmc
sub
enter
jp
xor
or
imul
mov
cmpb
jno
lret
cmp
add
es
sahf
pop
loope
lret
in
cli
add
sub
sub
nop
loope
insb
and
stos
xor
outsb
stc
imul
loope
adc
jg
mov
out
in
clc
add
jl
dec
xchg
hlt
xor
push
popf
stc
mov
dec
dec
popf
into
push
push
dec
or
mov
or
xchg
rolb
in
out
push
cld
dec
stos
pop
imul
add
call
mov
insl
in
adc
fists
push
and
cld
mov
lcall
xlat
sarb
xchg
xor
pusha
call
mov
lret
add
stc
inc
loope
push
lret
mov
shrl
lock
push
mov
adc
cmp
jmp
jmp
aas
push
sub
mov
cmpsl
xchg
in
dec
out
shr
in
fldt
loopne
inc
xchg
mov
sub
cs
jnp
add
xchg
mov
ret
xchg
xchg
cmp
xor
mov
fs
push
jmp
pop
dec
or
ret
xor
jp
dec
fisttps
push
pop
lds
pusha
mul
dec
pop
ds
arpl
mov
negl
push
scas
nop
shll
jge
lds
scas
inc
mov
pop
add
into
enter
inc
adc
push
rolb
cmp
imul
mov
pushf
pushf
aaa
test
jno
bound
loope
mov
daa
jg
xchg
aas
push
in
mov
sub
out
rorb
add
clc
or
stos
mov
push
push
mov
call
xor
cmpsb
int
pop
mov
enter
sbb
xor
and
daa
test
dec
mov
adc
mov
mov
mov
mov
das
push
mov
lds
loope
and
dec
mov
shrb
ret
repnz
push
repz
div
mov
stos
mov
fs
out
aam
mov
cmpsb
and
fldcw
ja
lcall
push
mov
stos
push
out
add
push
mov
rcl
in
cmpsl
or
cmc
movsb
adc
pop
jl
aad
repnz
mov
mov
cld
sub
test
add
out
enter
mov
leave
mov
loope
cmpsb
jl
pop
mov
xlat
jo
adc
sub
xor
xor
das
fstpl
shrl
idivl
test
pusha
in
cmc
ds
dec
xor
and
inc
icebp
in
pop
out
and
test
inc
add
pop
in
jmp
gs
test
fadd
bound
divb
dec
imul
nop
es
ret
mov
bound
scas
dec
cmp
jnp
rcrb
cli
out
mov
clc
jle
pop
cmpsb
push
inc
xchg
xor
push
sti
aas
stc
fisttpl
dec
aam
inc
or
dec
jae
ficompl
inc
bound
out
scas
sub
pop
inc
and
inc
jmp
cmp
jmp
lret
aad
shl
addb
ret
jge
mov
or
loop
mov
gs
jle
cld
cmp
sahf
popa
mov
cmp
cmp
push
out
xor
lods
daa
mov
stos
add
jle
xchg
in
cmpsb
pop
dec
sub
sub
cmp
mov
bound
mov
repnz
inc
mov
push
in
stc
xchg
jle
push
inc
call
int3
or
out
adc
repnz
jl
mov
pop
neg
cmp
fsts
xchg
or
mov
lods
and
cmp
add
sti
pop
mov
jbe
xchg
loopne
add
fwait
icebp
aaa
sbbb
in
ljmp
shrl
mov
dec
xchg
xchg
clc
xlat
outsb
mov
in
sub
ljmp
or
shll
xor
imul
cli
vhsubps
inc
fdivl
lea
fwait
pop
inc
les
leave
fadd
rcrl
sub
ror
push
stc
xchg
js
cld
pop
out
dec
pop
mov
mov
lock
mov
aas
inc
xchg
xorl
loopne
and
adc
adc
mov
mov
mov
rclb
cmc
fwait
es
scas
pop
sbb
add
stos
fsub
cwtl
cmc
adc
inc
add
scas
adc
fsubrl
test
sgdtl
dec
xchg
add
mov
fwait
lret
mov
in
push
xlat
mov
mov
sahf
mov
adc
jmp
dec
dec
sbb
cmp
xor
fcoml
mov
lock
add
sub
jne
outsl
es
icebp
enter
push
ret
cmp
fstl
xchg
cmp
in
pop
jle
sbb
scas
int
pop
mov
scas
mov
pop
jbe
sbb
ret
aas
xchg
stos
push
xchg
pop
add
jae
mov
pop
dec
movsl
mov
in
sbb
adc
cs
mov
mov
push
mov
nop
fsubl
mov
lds
cwtl
or
mov
xlat
push
mov
ds
sbb
in
dec
push
mov
sub
lds
mov
lcall
fldenv
push
es
adc
push
fisubs
cmp
rcl
dec
popf
add
shlb
cltd
hlt
lea
fwait
and
inc
enter
sbb
nop
sub
add
aad
int
out
shll
loopne
jge
stos
out
iret
mov
stc
mov
jb
sbb
adc
mov
enter
jmp
cwtl
push
and
call
sbb
mov
sbb
clc
push
imul
test
or
pop
orl
jbe
cmp
and
adc
mov
xchg
cmpsb
jae
fwait
adc
daa
jno
sub
dec
lods
sbb
rcll
jb,pn
or
xchg
jle
repnz
adcl
push
or
call
sub
dec
sbb
jb
ja
push
cmp
movsl
mov
leave
sub
mov
test
lock
or
xor
cmc
xchg
add
sti
mov
sarl
lock
mov
clc
jmp
fsub
pop
test
jl
pop
lcall
sbb
pop
pop
arpl
outsb
mov
pop
xchg
call
cli
mov
ja
fucomi
jnp
in
fildll
cmp
xchg
jns
sub
ljmp
lcall
sub
lahf
aad
pop
hlt
mov
mov
out
mov
out
lods
ficompl
xchg
adc
sti
lret
jle
lock
pop
fwait
imul
sub
sbb
lea
rcr
and
push
sbb
ljmp
cmp
movsl
sbb
jp
shrb
movsl
xor
jae
jp
or
mov
dec
jle
fsubrl
lea
out
in
lret
sbb
lods
inc
fwait
xchg
out
mov
or
insl
stc
xor
inc
iret
xor
loope
je
in
dec
lret
push
aaa
mov
sub
dec
add
sub
mov
aaa
dec
xchg
and
scas
dec
push
dec
xchg
dec
pop
inc
js
fidivrs
inc
jecxz
jle
add
ficomps
scas
je
jno
mov
xchg
pop
mov
mov
inc
rclb
repz
into
xchg
mov
or
loopne
jne
in
mov
sub
pop
inc
inc
xor
xchg
imul
jle
or
rorl
aaa
popf
int
pop
and
adc
out
dec
mov
fcomps
cltd
rcr
lcall
pop
pop
fildll
add
fisttps
mov
loope
pushf
cli
mov
xor
dec
jp
cmp
xchg
sub
fisttpl
xchg
and
adc
sub
stos
fsubl
lret
ljmp
or
pop
in
or
into
cmp
push
stos
rorb
gs
loopne
lea
and
jle
js
jne,pt
das
xchg
xor
faddl
cmp
add
mov
enter
pop
or
dec
scas
inc
lods
dec
idivl
movsb
and
sbb
mov
jns
cs
push
xor
inc
push
xor
lods
adcb
xor
sbb
or
rcrl
jge
cmp
push
popf
ret
testb
adcb
dec
testw
mov
inc
adc
cmpsl
cmp
mov
pop
mov
sbb
insb
pop
jmp
add
mov
pop
fstpl
outsb
push
mov
inc
lret
and
bound
fsubs
orl
push
iret
pop
loope
aaa
into
lods
lods
xor
jae
jge
jnp
loopne
aam
xorl
push
mov
lods
lahf
cmp
push
mov
gs
sbbb
pop
lods
and
rcr
mov
ret
into
movsb
push
cmp
das
adc
pushw
sbb
jp
stos
out
lock
cli
mulb
pop
jno
inc
mov
scas
cmp
mov
jge
cwtl
xchg
mov
loope
cli
push
in
out
add
sti
into
sub
rcr
lret
movsb
test
sub
xor
ja
jno
mov
data16
pop
jmp
cmp
out
jae
pop
orb
and
scas
rorb
jb
fsubs
clc
out
xor
fmull
inc
mov
xor
loop
sbb
cltd
adc
andl
and
and
fidivs
push
adc
test
sub
xlat
cli
mov
sarl
adc
lods
and
shll
inc
or
popf
scas
daa
cmp
push
outsl
fcompp
xor
in
enter
inc
or
xor
mov
push
add
cli
repz
sbb
xor
sbb
mov
cltd
adc
sti
mov
jmp
xchg
test
lods
pop
es
ds
xor
add
in
cmp
aaa
ss
mov
stc
and
fldl
mov
cltd
cmp
lahf
popa
sub
or
xchg
inc
ds
jle
les
jecxz
mov
addb
xorl
inc
sub
popf
xchg
xlat
cld
mov
push
les
test
cmp
fimull
fnstcw
adc
sbb
xchg
movb
divl
cmc
mov
es
or
out
iret
jno
and
lret
popa
and
mov
mov
xchg
das
adc
sub
xor
orb
out
bound
push
pop
or
push
cmpsl
xor
jnp
push
fimull
mov
jnp
out
pop
jg
call
inc
mov
lret
dec
js
xor
dec
repnz
add
test
mov
pop
mov
inc
mov
add
mov
push
iret
push
mov
nop
lds
sti
gs
cld
push
jae
push
xchg
les
negb
rcll
pop
in
mov
jp
xor
aad
mov
mov
add
popf
or
sbb
in
cmc
sub
aaa
dec
pop
mov
sub
or
cwtl
push
dec
popa
or
sub
mov
jmp
rep
stc
cli
aam
or
pop
mov
inc
int3
aam
inc
imul
and
cmp
loopne
mov
push
dec
dec
sahf
inc
lods
sub
jbe
and
sbb
jns
cs
icebp
ret
push
sahf
fstpt
cmp
or
mov
lock
sbb
dec
sarb
or
sarb
test
test
mov
leave
dec
dec
inc
ret
dec
fcompl
adc
mov
pop
es
int3
push
pop
lock
jg
ds
shrb
and
out
xchg
das
cmpl
test
or
repz
ss
shll
jno
lock
rcrl
in
lds
and
cli
mov
loope
ljmp
ds
dec
mov
outsl
cmp
mov
jbe
jb
negl
push
inc
scas
adc
ret
aam
fistpll
jge
cwtl
roll
lahf
mov
mov
data16
pop
sbb
test
ss
hlt
nop
orl
cltd
mov
bound
mov
pop
lds
gs
fs
sub
scas
xchg
inc
ljmp
loop
adc
mov
ds
bound
ss
pop
add
push
outsb
xchg
enter
or
inc
xor
pop
push
scas
jb
mov
test
out
testb
mov
xor
jns
xchg
add
addr16
inc
sbb
pushf
sub
mov
test
movsb
dec
adc
push
mov
push
xlat
cmp
rorl
xchg
imul
mov
test
jl
xor
lcall
pusha
lret
test
fistps
fstp
mov
xor
xchg
mov
xor
xchg
mov
cmp
ds
call
inc
insb
into
fsts
fstpt
aas
push
popa
outsb
sub
pop
jbe
push
hlt
cmp
xor
aad
sub
mov
jnp
js
leave
ret
xor
loopne
or
iret
out
ret
add
popa
mov
lods
in
lcall
mov
jmp
imul
cld
movsl
and
pusha
outsb
je
cmovne
arpl
pop
shr
xchg
jmp
add
loope,pn
dec
cmpsl
mov
bswap
loopne
out
je
and
fildl
push
adc
movsl
mov
push
xchg
daa
js
xor
loope
lret
mov
popf
mov
xchg
mov
bound
xchg
cwtl
jge
dec
int3
mov
ds
sbb
add
inc
dec
shl
lds
insb
sub
cmp
nop
cmp
in
add
sarb
imul
pop
push
jb
ds
loope
fcomps
mov
and
pusha
inc
fwait
lds
mov
push
jbe
pop
aaa
pop
out
sbb
in
test
into
cld
jcxz
jl
lret
js
inc
repnz
lahf
push
inc
pop
lret
imul
cmpsb
pop
loopne
mov
pop
lds
leave
les
inc
adc
push
push
js
test
cmpsl
iret
js
cmc
jp
cmp
ret
addl
test
pop
sahf
out
ljmp
dec
imul
mov
or
or
fadds
jmp
xor
dec
imul
or
xchg
and
ljmp
das
push
push
in
test
jle
imulb
test
mov
mov
outsl
mov
scas
push
lock
pusha
or
nop
mov
dec
imul
ss
pop
pop
int
jge
pop
push
mov
lods
cmp
sub
xchg
and
push
mov
test
enter
xor
test
and
adc
inc
rcll
hlt
and
jecxz
les
pusha
jns
xor
mov
mov
and
or
cwtl
push
std
inc
mov
ljmp
lock
push
cmovb
sbb
imul
dec
mov
or
cltd
or
test
jbe
cmpsb
xchg
sbb
push
cmp
stc
cmp
xor
push
rcll
mov
lock
mov
scas
push
enter
inc
ret
cmp
stc
xor
mov
sub
jo
xor
ret
pop
jns
aaa
popf
adc
movsl
sbb
cmovnp
nop
pop
cmp
jns
pop
loop
jle
mov
mov
or
jmp
scas
push
xchg
testb
lock
stc
mov
sarl
pop
inc
mov
addr16
xor
adc
add
push
mov
mul
rcrb
dec
pop
mov
in
and
aad
dec
ja
xor
pop
or
into
mov
imulb
or
in
push
shrb
cltd
test
or
int
xchg
popa
xor
subb
cmp
fwait
push
popf
push
gs
rcrl
or
or
lret
mov
hlt
cli
test
leave
in
pop
enter
xor
and
es
cmc
popa
add
push
push
fisubs
add
push
mov
add
bound
or
jae
and
loop
mov
gs
adc
pop
sub
cmp
mulb
jo
dec
test
lds
cltd
mov
daa
es
pop
jae
fisubrl
push
cmpsb
cli
adc
insl
stos
inc
xchg
dec
dec
adc
ror
stos
jp
imul
cmc
repz
cmpl
bswap
loopne
cmpsl
clc
lods
loope
inc
pop
push
lods
fldl
pop
enter
shrl
fstpl
mov
fnsave
and
in
adc
mov
lcall
inc
xor
cmp
jmp
pop
and
test
jge
ljmp
push
mov
js
fbld
sbb
mov
lock
pop
jb
inc
mov
je
jecxz
lea
mov
push
jo
or
jb
add
into
jecxz
aas
dec
test
lret
mov
imul
push
fs
out
fdivs
pop
xorl
mov
pop
or
das
sbb
pop
mov
jbe
or
mov
cmp
repnz
scas
lock
rcrl
xchg
jmp
gs
fs
add
ljmp
das
sbb
insl
scas
dec
arpl
rcl
lods
adc
out
jne
cs
mov
jg
lods
sub
stc
inc
call
pop
and
inc
dec
jl
cmp
aaa
cmp
aas
xchg
push
ss
pop
jmp
xchg
mov
out
aam
outsb
in
lods
ret
mov
arpl
je
push
mov
sahf
or
inc
stc
kandw
push
int
mov
mov
scas
push
fucomip
and
adc
fidivrl
divl
mov
xor
cmc
add
mov
pop
push
xchg
sti
adc
push
sbb
mov
sbb
popa
sub
aad
popa
jo
shll
in
jmp
cmp
ret
dec
loopne
jmp
dec
int
mov
daa
aaa
mov
jle
repnz
mov
xor
lret
cmp
push
iret
insl
rorl
and
mov
xlat
pop
ljmp
int3
repz
in
mov
arpl
mov
jo
loop
sub
movsb
dec
xor
in
push
cltd
ljmp
jg
mov
jns
mov
es
nop
shl
sub
addr16
nop
inc
inc
ret
jo
adc
nop
inc
xchg
imul
dec
mov
lods
jle
sbb
push
inc
pop
sbb
rclb
add
push
stos
hlt
sbb
sahf
xchg
pop
mov
sbb
out
sub
lods
xchg
les
rcr
xor
cmp
in
icebp
cmpsb
lods
add
push
sub
incb
xor
popa
test
cmp
and
movsl
pop
stos
adc
jne
inc
fistpll
add
and
into
mov
or
inc
mov
ja
std
cmp
loopne
leave
cmp
pop
inc
cli
stos
cltd
xchg
push
stos
cs
jae
mov
xor
mov
sarb
dec
int3
iret
jae
cmp
repz
test
fimuls
xchg
into
aam
insl
and
pop
arpl
popf
hlt
mov
pop
lock
mov
jle
mov
data16
pop
pop
push
mov
sub
in
inc
adc
add
pop
cld
mov
sbb
pop
enter
or
xchg
pop
cmc
ret
insb
lcall
push
test
out
inc
or
fisttpl
sbb
daa
push
fs
sbb
xchg
popa
mov
add
add
dec
stos
lret
aam
jmp
and
jb
out
jle
and
pusha
adc
mov
loopne
dec
loopne
pop
lahf
pop
push
dec
cli
jg
push
and
mov
aaa
lods
mov
mov
out
test
push
pushf
pop
negl
jo
mov
vpmulhw
pop
push
push
xchg
mov
xchg
sbb
ret
push
mov
pop
cmp
xchg
lahf
inc
xor
inc
ret
icebp
js
rcl
mov
ficoms
sbb
test
pop
pop
ds
cld
push
imul
mov
pop
arpl
push
jae
mov
fidivs
lcall
pop
ficoms
fsts
inc
push
aad
pop
jne
sub
scas
pop
mov
lea
inc
loop
divl
sbb
xchg
ljmp
push
mov
push
movsb
adc
mov
lea
adc
xor
sub
insb
lods
pop
and
push
insb
pop
sub
lods
or
xor
clc
cmp
aam
and
popa
pop
sbb
add
adc
imul
inc
push
add
sbb
nop
bnd
inc
jl
aas
inc
jecxz
add
repz
cmp
addr16
into
mov
subb
cmpsb
mov
call
orb
or
push
fbstp
mov
lret
mov
cmpsl
fldl
xchg
inc
dec
lea
gs
das
and
jbe
or
lret
pop
cmpsl
adc
scas
or
daa
sub
pop
jmp
mov
add
xchg
mov
push
xchg
mov
cld
adc
pop
aad
pop
shll
adc
cwtl
cmp
push
xor
scas
mov
ljmp
repz
in
or
sbb
dec
leave
aaa
jle
pop
std
daa
sbb
fnstcw
add
jbe
xchg
jecxz
roll
sahf
and
sbb
adc
out
les
into
inc
sbb
repnz
pop
sub
xlat
daa
mov
clc
cwtl
push
adc
pushf
xor
pop
mov
into
cmp
mov
test
pop
scas
les
inc
fdivl
in
stos
jmp
mov
popf
leave
push
adc
dec
in
jge
push
outsl
xchg
subl
push
push
ret
dec
pop
mov
mov
jo
xor
pop
test
cltd
pop
xchg
jmp
jge
aaa
mov
mov
insl
cmp
repnz
rclb
xor
call
std
ja
mov
popf
or
in
test
jns
sub
shll
ja
pop
fsubrs
pop
stos
or
xchg
sbb
cmp
mov
mov
mov
repz
in
and
sbb
sbb
xor
ret
jecxz
inc
rorl
push
icebp
add
pop
loop
fcmovb
stc
and
pop
daa
ret
xor
jbe
push
movsb
fprem1
dec
lods
push
inc
movsb
inc
cltd
jns
mov
or
sbb
data16
jb
jle
mov
rcll
call
dec
mov
int
pop
inc
add
std
inc
mov
pushf
shlb
ret
mov
test
out
xor
or
xor
pop
mov
xchg
movsb
cs
push
dec
out
or
push
mov
mov
and
aas
push
call
and
mov
fs
cmpsl
mov
jmp
mov
outsb
aam
popl
aad
fyl2x
test
add
inc
or
xor
call
insl
inc
xchg
inc
jne
add
imul
xchg
cmp
out
sbb
sub
sti
jne
sbb
sub
sahf
inc
mov
punpcklwd
lods
es
mov
inc
outsb
les
adc
int3
scas
popa
movsb
push
adc
clc
test
pop
mov
ljmp
or
and
and
mov
add
test
lret
push
mov
cmc
clc
sub
nop
mov
dec
jle
sbb
stos
mov
fdivrs
xlat
scas
out
cltd
jl
pop
mov
push
xor
hlt
mov
dec
aaa
cmp
addr16
fcmovne
pop
test
and
xchg
pop
jmp
jl
movsb
les
xor
daa
jp
ret
shrb
mov
mov
pop
enter
inc
add
cld
jne
mov
dec
inc
jns
out
rolb
mov
dec
dec
adc
popf
ret
imul
inc
ja
add
sbbb
xor
into
jno
mov
cmpsb
stos
repnz
mov
cmpb
adc
pop
popf
cli
loop
mov
jns
fcomi
xchg
mov
mov
addr16
jmp
sbb
inc
or
repnz
pop
or
or
ficoml
dec
cwtl
or
outsl
add
hlt
cmpb
jns
popfw
inc
cmp
daa
mov
inc
xor
into
call
aas
mov
sbb
enter
loop
imul
mov
mov
sbb
fsubs
lea
mov
shrl
cmp
sahf
stc
pop
in
adc
jno
mov
jne
mov
add
imul
jecxz
scas
push
mov
adc
push
push
mov
jmp
mov
out
cmp
jmp
movsb
adc
sbb
in
lea
push
rcrl
add
mov
push
call
aad
adc
fistpll
mov
push
mov
cltd
int3
sahf
cwtl
cmp
sbb
pop
outsl
jmp
push
inc
ret
dec
leave
icebp
xchg
xor
test
dec
sub
dec
repz
xchg
xor
ljmp
mov
mov
cmpsb
push
jg
enter
cmp
add
jo
sub
hlt
mov
cmpsb
repnz
pop
adc
iret
inc
jo
mov
lods
mov
sbb
clc
lods
and
sbb
mov
clc
mov
jmp
repnz
stc
paddsb
jnp
icebp
test
xor
and
push
ja
xchg
neg
push
popf
shl
bound
xor
sub
pop
loope
les
icebp
push
dec
int3
incb
sub
mov
mov
mov
rorl
mov
or
xor
mov
adcb
dec
pop
sti
cmpsb
movsl
jb
out
iret
pop
fsubrs
sahf
xor
shlb
cmp
js
std
pop
fwait
hlt
mov
push
rep
lret
mov
adcl
mov
lret
sub
ljmp
movsl
adc
sub
inc
shl
in
pop
repz
or
movsl
cmpsb
and
gs
sub
mov
sbb
adc
and
cld
mov
pop
mov
cwtl
arpl
das
jle
add
in
jmp
push
xchg
pop
das
push
stos
test
scas
into
add
dec
jmp
mov
sbb
jle
mov
sbb
add
test
movsl
adc
rcl
mov
aaa
sarb
xchg
call
mov
stos
sub
mov
arpl
push
pop
cli
rclb
int3
mov
sub
out
cmp
push
ds
ljmp
jecxz
ret
push
push
outsl
sti
xor
test
xor
xchg
popf
push
insl
jo
push
cmp
cmp
hlt
mov
cltd
pop
nop
xchg
rclb
xchg
adcb
ja
mov
pop
jle
adc
sub
pop
loope
mov
fs
pop
xor
clc
add
xchg
bound
mov
sub
cmpsb
jmp
push
push
xor
hlt
mov
lea
mov
pusha
pop
adc
inc
sarb
push
int3
loopne
and
sub
jg
inc
stc
test
notb
cs
mov
in
outsb
icebp
or
sbb
daa
xor
loop
push
leave
xchg
jno
fnstenv
ja
loope
loope
test
test
and
mov
movsl
pop
cmp
pop
adc
insl
and
push
jnp
roll
jns
add
adc
xchg
jmp
sub
aam
cld
gs
xchg
xor
scas
dec
rclb
xor
sahf
inc
push
add
mov
icebp
sbb
cmovo
and
or
cmp
stos
adc
mov
cmp
data16
cltd
or
jmp
repz
nop
mov
mov
and
hlt
std
xor
xor
insb
cld
mov
dec
jmp
adc
add
inc
jg
ljmp
mov
arpl
test
test
in
or
mov
push
jb
sub
or
pop
lea
mov
mov
mov
adc
inc
jg
sbb
mov
xchg
mov
cmp
orl
mov
fidivrl
lods
mov
loopne
lret
mov
in
mov
adc
sbbb
sar
jne
clc
mov
popa
cmc
cmp
imul
mov
pop
push
addl
mov
sbb
jnp
mov
jae
decb
test
dec
sbb
pop
jmp
mov
push
pusha
lock
mov
aas
lods
lds
mov
andnps
and
push
jecxz
jl
shrb
nop
test
cmp
fidivs
sbb
inc
leave
outsl
mov
dec
imul
mov
jbe
push
mov
fs
pop
jno
ret
xchg
push
fst
or
repz
in
add
rcll
mov
fdivl
daa
sar
or
in
dec
aaa
jg
add
pop
out
mov
dec
push
ss
and
dec
mov
rcrb
push
loop
mov
xlat
test
mov
mov
push
xchg
xor
lret
imul
aas
add
sahf
inc
jb
arpl
jnp
add
dec
push
shll
sub
test
sub
shll
insl
add
pop
sub
divl
ljmp
lret
mov
dec
je
orb
or
push
int
decb
in
cmp
xchg
mov
or
push
pushf
stc
dec
repnz
dec
das
mov
mov
cmp
jne
in
cmp
sbb
pop
adc
lods
sti
test
push
scas
int3
jns
mov
xchg
outsb
cmp
subb
jp
shlb
push
cltd
aad
mov
into
pop
mov
fisubrl
pop
int
inc
mov
pop
inc
ljmp
jnp
mov
cli
les
cli
cli
data16
fcomps
xor
xor
stos
jl
add
pop
pop
push
add
push
push
push
stos
cs
inc
jno
lods
mov
repnz
adc
and
movsb
int
out
push
or
enter
loopne
ss
jbe
sub
lret
ret
popf
sbb
inc
fnstsw
ljmp
fs
je
insl
inc
sbb
fwait
xor
push
and
push
subl
xchg
mov
mov
inc
call
add
ds
jne
movsl
xor
adc
mov
mov
mov
out
shl
mov
fst
jle
and
xor
cmp
test
push
cwtl
out
fldcw
les
mov
mov
sbb
mov
cs
mov
mov
aas
jbe
imul
and
lock
and
jmp
push
cmp
xchg
sarl
sbb
mov
mov
ja
int
sarl
imul
cld
inc
mull
dec
sahf
pop
stc
decl
mov
dec
or
xchg
adc
mov
mov
stos
cmpb
cmp
lret
in
add
adc
shrb
cmp
inc
pop
ja
mov
shlb
das
adc
pop
stos
xchg
pop
add
and
adc
jns
popf
inc
mov
hlt
scas
pop
push
xorb
xchg
repnz
and
notb
mov
or
lret
bound
hlt
in
pusha
cmp
jecxz
rcll
dec
movsb
jmp
sahf
mov
push
stc
jmp
sbb
lods
add
popa
pushf
sbb
sbb
push
add
jnp
sub
cmp
xor
push
mov
ss
or
imulb
les
adc
sub
pop
daa
pop
mov
xor
aad
repz
popf
xchg
jo
movsb
mov
mov
test
cmp
push
and
popa
ficoml
push
jnp
push
push
push
loope
or
in
clc
pop
mov
rcl
sub
cmpsb
jb
push
mov
dec
push
jns
pop
pop
jge
js
fbld
out
subl
dec
int3
mov
cmp
out
xlat
lock
and
cmp
pop
push
mov
lds
sub
enter
lret
andb
int3
sbb
jo
dec
dec
and
sub
je
sbb
test
clc
enter
lret
mov
dec
cli
sahf
jbe
bound
push
aam
repz
dec
data16
pushf
jp
sub
mov
mov
jb
test
ds
shll
cld
aad
shlb
pop
bound
dec
sub
jno
fnstenv
mov
test
bound
cs
jb
pushf
rcr
xchg
enter
xor
or
lods
xor
xchg
pop
mov
mov
pop
xor
mov
jge
vpsubd
into
adc
js
xlat
jl
test
push
cmpsl
cwtl
cli
cmp
ret
dec
lret
fstl
lock
das
mov
movsl
add
movsb
sbb
aaa
lds
xchg
inc
scas
dec
fistl
xor
out
mov
inc
add
out
and
xchg
jo
or
sbbb
out
lahf
xor
in
dec
lahf
stc
ret
mov
mov
cmp
cmc
in
jb
lods
pusha
xor
imul
data16
jl
jmp
xchg
and
push
xor
mov
imul
xor
xlat
xor
scas
in
sti
mov
sbb
jo
movsl
gs
pop
mov
xor
stos
mov
xchg
out
into
insl
inc
and
cmp
ljmp
popl
out
xlat
sbb
xlat
adc
shl
sbb
cld
jmp
dec
sub
lret
adc
push
pop
jno
and
adc
and
xor
mov
ret
xchg
pop
pop
mov
add
stos
mov
adc
xlat
cmp
clc
aas
fs
enter
shlb
leave
pusha
test
cmpsl
aad
push
cmpsb
mov
add
imul
cmpsl
das
rorb
stos
popa
mov
rcrl
scas
in
cmc
inc
adc
fisubs
icebp
mov
outsl
test
rorb
lret
in
negb
xchg
xor
mov
or
mov
outsb
push
dec
xchg
cltd
sti
mov
sub
jl
pop
incl
ja
mov
out
and
fldcw
xor
lahf
jmp
iret
bound
ret
popa
dec
xchg
aad
cs
cmp
loopne
ret
push
addr16
adc
adc
andl
push
mov
sub
add
ljmp
lock
add
xchg
dec
mov
pop
rcll
ss
mov
sbb
lods
push
cmp
xor
ds
out
out
mov
cmp
lods
sbb
xor
stos
and
add
dec
inc
adcb
or
dec
icebp
and
js
push
arpl
std
pusha
fldl
mov
les
add
add
sub
push
inc
mov
mov
in
roll
sahf
push
dec
lcall
insl
xor
pop
xor
push
pop
push
out
ds
pop
out
cmp
hlt
inc
inc
cmp
out
dec
or
mov
nop
push
lcall
mov
adc
and
xchg
shrl
push
mov
aam
ljmp
jmp
mov
rorl
xchg
out
xor
in
cmp
pop
les
mov
cld
jnp
adc
and
call
mov
xchg
pop
cmp
fbld
cmp
sub
les
rolb
push
pop
je
cld
repz
dec
fistpll
fiaddl
mov
mov
insb
rorl
pop
clc
sbb
repz
jmp
out
xchg
sbb
add
mov
jl
mov
stos
push
mov
add
cmp
dec
jno
push
bnd
daa
cmp
xchg
lods
lods
or
inc
mov
dec
stc
aas
add
inc
mov
adc
sbb
mov
loop
scas
adc
js
fldenv
or
inc
icebp
xrstors
pop
sbb
add
pop
pop
jo
mov
sbbl
dec
cwtl
sub
mov
cmpsl
jmp
adc
fsubp
fnstsw
and
sbb
mov
fiadds
jns
add
mov
and
dec
cmpsl
test
inc
jne
and
or
mov
je
xor
xor
mov
push
pushf
xchg
inc
cmc
inc
xchg
lahf
mov
js
pop
andl
fiadds
mov
pusha
inc
call
dec
bound
xchg
xchg
xchg
xchg
mov
cmp
or
or
inc
fmull
popf
sbb
addr16
inc
xor
sahf
jmp
test
cmc
adc
lods
out
push
je
xor
mov
dec
jle
push
lea
push
cli
cmpsb
cwtl
dec
and
mov
and
push
loope
addr16
sbb
ja
inc
pop
dec
stos
mov
mov
jp
int
iret
jge
mov
int3
sbb
xor
push
nop
mov
mov
orb
sbb
imul
pop
ret
in
lods
pushf
sub
shlb
and
cmc
or
shr
xor
cltd
cli
and
outsl
pop
sti
sbb
fsubl
xlat
cmc
sbb
pop
lea
sbb
push
push
ja
shll
popa
cmc
sbb
lods
xchg
push
nop
shrb
pop
sarl
or
call
cmp
arpl
sbb
mov
xor
out
mov
enter
jg
stos
pop
and
nop
xor
push
imull
jg
lahf
mov
arpl
push
push
sarl
xor
inc
xchg
sbb
fsubrp
cli
jl
idiv
jmp
push
jo,pn
push
sub
ud0
xlat
pop
stos
test
in
into
ja
or
jnp
inc
in
pop
adc
int
push
push
lret
push
js
push
das
mov
loope
leave
std
sbb
add
inc
fcomps
popl
push
add
jge
mov
js
push
adc
jp
test
push
lret
nop
sbb
inc
scas
pusha
sahf
je
push
pop
push
aam
inc
or
xchg
loope
lock
xchg
std
lret
xchg
stos
pop
lds
dec
push
push
jmp
and
repz
mov
jl
jb
xchg
cli
mov
sti
rorb
movsl
xchg
jnp
cwtl
loope
addr16
stos
outsl
inc
mov
push
movsb
loopne
sub
xchg
fistpl
movb
sti
stc
orl
sahf
ret
int
mov
jmp
arpl
pusha
rcr
ret
int
mov
es
outsl
adc
sbb
sub
test
add
fcoml
stc
pop
nop
push
dec
fstl
ret
mov
idivl
cmp
push
out
movsl
mov
sub
les
bound
mov
fmul
iret
icebp
outsl
int
int
inc
aaa
aaa
fdiv
xor
call
inc
fstps
push
mov
add
icebp
xchg
pusha
or
out
stos
add
ret
aas
sti
adc
and
int3
aaa
in
mov
fstps
sti
mov
int
sbb
mov
mov
faddp
mov
sub
ja
or
js
icebp
pop
sbb
fnsave
cmp
jg
addr16
or
arpl
bound
les
int
add
push
add
push
xor
lret
lods
push
sti
inc
and
stc
test
loop
cmp
push
xchg
add
shll
jne
or
mov
cmpsb
out
lods
cmp
pusha
insl
add
mov
sbb
pop
cmp
push
and
inc
cmp
sub
mov
jge
aas
or
cwtl
push
std
pop
pop
mov
es
and
lret
nop
lods
xor
out
lods
jo
inc
testb
sarb
popa
lahf
shr
shlb
call
jecxz
push
je
add
dec
pop
adc
incl
divl
test
jle
rcll
mov
std
pop
push
inc
outsb
loopne
ret
or
xchg
loopne
add
dec
pop
pop
adc
or
out
push
rcrb
jns
and
sbb
or
or
lock
daa
loope
stos
sub
test
sbb
and
mov
andl
pop
cmc
xchg
insb
adc
out
push
ret
add
or
mov
mov
jle
push
je
xchg
jle
int3
pop
out
mov
xlat
cmc
out
or
inc
xor
xor
push
mov
hlt
pop
orl
pop
sbb
xor
adc
lret
lahf
xchg
cmp
lds
repnz
out
cmpsl
mov
mov
adc
mov
adc
mov
lfs
ror
push
std
and
pushf
xchg
shll
xchg
testl
test
pusha
sbb
mov
xor
push
mull
add
inc
popf
sub
jl
sbbb
in
inc
rolb
xor
xor
or
test
jecxz
int
fs
mov
neg
ret
shlb
bswap
push
pop
cmc
xchg
stos
or
add
jae
ret
pop
push
sub
jmp
sbb
jae
pusha
or
jg
pop
mov
mov
add
imul
push
pop
cmp
rcl
mov
xor
lcall
lret
loope
pop
jno
loopne
xchg
push
imul
pop
stc
mov
es
push
dec
pushf
cli
or
mov
xor
sub
lret
or
xor
ja
testb
inc
je
aad
fisttps
mov
dec
xchg
dec
mov
cmp
dec
sub
hlt
out
adc
pop
xchg
aas
xchg
inc
insl
mov
adc
notl
cltd
or
push
out
dec
push
outsb
and
lcall
jle
lret
outsb
pop
test
lcall
andb
lea
call
adcl
cwtl
inc
inc
push
fs
pop
scas
sbb
fs
sbb
adc
pop
fnsave
aas
mov
aaa
cmp
push
insl
js
rcl
lods
popl
gs
mov
cmp
outsb
sub
mov
pushf
stc
xchg
sub
jge
pop
cmpsb
loop
fwait
sahf
mov
pusha
inc
ja
jecxz
mov
lret
roll
jb
aam
or
jle
imul
sbb
gs
fcomip
push
push
outsb
pop
clc
lret
lahf
push
mov
xchg
add
and
test
adc
cmp
jg
in
test
loopne
push
xor
sti
sbb
sbb
leave
xor
int
sbb
inc
dec
ljmp
jns
inc
mulb
jo
in
rclb
mov
mov
mov
pop
cmp
filds
cmp
je
and
rolb
shr
sbb
jg
cmp
push
inc
cld
repnz
je
test
mov
mov
jb
dec
jae
jo
xchg
xor
inc
push
nop
mov
or
dec
sub
cmp
push
cltd
dec
addps
pop
push
or
cmc
inc
stos
cmp
pop
mov
add
mov
pop
cmpl
or
and
shrl
sub
and
sub
xchg
inc
add
xchg
orb
pop
jae
inc
pop
pop
jno
sti
add
inc
js
lahf
and
in
xchg
dec
push
pop
call
mov
cli
ffree
add
or
pop
adc
mov
xor
pop
enter
add
pop
sub
nop
cmp
stos
or
cmp
movsl
inc
adc
add
out
or
mov
or
push
push
cmp
daa
lret
sbb
xor
lock
popa
cmpsl
hlt
or
cmp
es
dec
pop
xor
outsb
jmp
imul
movsl
enter
in
inc
mov
inc
pop
aam
xchg
inc
cltd
ds
jnp
loope
jbe
sub
jle
mov
xor
clc
adc
mov
ds
inc
lea
mov
sbbb
inc
imul
sbb
jg
das
and
notb
cltd
sub
movsb
mov
shrb
dec
push
cmc
add
jae
movsl
pop
cs
movsl
sub
ja
mov
xor
add
movsl
mov
subb
xchg
movsb
add
jecxz
fcmovne
in
aaa
sub
mov
cmpsl
into
or
push
xchg
into
les
js
sbb
and
jno
lret
out
inc
and
les
pop
mov
jle
inc
mov
and
loop
stc
movb
xchg
adc
add
sbbl
and
cli
push
mov
or
sarb
scas
jo
out
notl
push
or
sbbl
mov
xchg
jnp
hlt
adc
pop
sub
mov
fcoms
xchg
dec
test
bound
mov
cmp
lahf
in
cmp
inc
xchg
fs
xlat
je
dec
push
pop
push
scas
cmp
xchg
cld
dec
pop
movsl
cltd
ret
imul
dec
add
pop
and
lahf
xlat
ret
adc
push
adc
or
addr16
inc
sub
jb
icebp
cmp
aas
xor
pop
inc
mov
push
adc
jb
add
push
add
sub
das
jg
jbe
add
insb
cmp
mov
mov
xchg
mov
adc
pop
shlb
mov
fisttps
cmc
popf
test
fimuls
sub
ficoms
cld
mov
shl
jo
or
xchg
in
push
ficomps
push
adc
pop
js
daa
lret
push
ja
test
test
mov
je
jo
mov
sbb
sbb
pop
mov
or
xchg
jg
fmul
shrb
stos
testl
test
mov
pop
faddl
sbbb
or
mov
shlb
add
sbb
and
cmc
dec
mov
stos
mov
rcl
push
stos
test
cmpxchg
add
jl
clc
xchg
dec
sahf
adc
out
cmp
rorl
or
sahf
cmpsl
xor
in
jae
xor
lods
gs
inc
cmp
stos
mov
lea
insl
jns
clc
pop
jmp
and
adc
out
es
add
loopne
lahf
test
cmpsl
or
testb
xor
cmp
ret
mov
mov
mov
sti
fidivrl
mov
dec
mov
mov
popa
fcompl
data16
in
cmp
sbb
xor
in
pusha
sar
notb
mov
sahf
les
lcall
jmp
push
xchg
xor
leave
int
inc
aad
jno
jp
imul
fxch
jbe
push
inc
sbb
sbb
or
lret
pop
adc
popf
xor
sahf
or
xchg
xchg
fldl
push
cmp
pop
jmp
push
std
into
xor
xchg
aaa
and
mov
cmp
repz
outsl
sub
imul
sub
jmp
es
aaa
ffree
xchg
xchg
dec
pop
test
push
mov
cmc
js
imul
stos
in
dec
pmuludq
into
xor
push
shrl
repz
or
inc
or
jle
in
mov
mov
cwtl
subl
dec
insl
or
jmp
cltd
pop
add
mov
cltd
mov
dec
xor
arpl
outsl
pop
aas
sbb
jl
inc
imul
fisubl
mov
push
jle
aaa
les
sub
dec
dec
repz
mov
jmp
mov
movb
adc
rolb
inc
in
pop
pop
frstor
xchg
or
std
rcr
sub
xchg
sti
adc
mov
cmc
cmc
sub
ret
bound
jno
jo
in
or
mov
nop
xchg
nop
aad
lods
extrq
jge
pop
leave
in
push
add
pop
stc
ds
subb
mov
mov
pop
enter
lahf
mov
arpl
ret
sub
adc
jmp
xchg
xchg
sarl
xor
ds
xlat
scas
lods
insl
add
jns
pop
leave
clc
xchg
sub
and
lret
xchg
iret
cmp
roll
lahf
jnp
mov
cmp
test
int
shrl
fcoml
pop
mov
in
fbld
pop
cmc
jg
ss
pop
and
dec
push
pop
fdivl
scas
push
mov
jmp
xor
adc
cld
mov
sti
into
adc
xchg
pop
aas
mov
sub
adc
es
daa
aas
andb
sbb
dec
inc
lods
cmpb
lock
jle
jmp
or
je
enter
xchg
addps
jmp
lea
mov
mov
and
mov
push
idiv
shl
cmp
scas
inc
outsb
leave
cld
push
push
sub
xchg
scas
xor
daa
mov
jmp
and
jnp
rcl
and
mov
xchg
mov
sub
dec
imul
scas
sub
in
out
xor
movsl
dec
aam
das
and
xor
dec
lods
jle
aaa
cs
testb
lds
and
mov
sbb
cmp
into
rcl
pop
movsb
fwait
lea
or
jnp
pop
cld
xor
xor
pop
mov
mov
test
cmp
sti
push
sub
sub
pop
mov
inc
push
mov
push
add
mov
mov
cli
stos
scas
push
ret
add
je
push
mov
inc
out
insb
cmp
add
mov
push
decb
loope
adc
jno
mov
loope
cmp
stos
and
jp
and
out
call
loope
cmp
or
jb
push
jge
sbb
insb
test
jnp
subl
rcpps
inc
std
pop
jmp
add
jmp
outsb
stc
sti
imull
jmp
push
std
mov
mov
add
out
repz
imul
fstpt
sub
jl
lock
adc
dec
mov
mov
sbb
stos
daa
out
xchg
jne
inc
dec
pusha
sarb
pop
mov
pop
pop
xchg
mov
int
jne
ja
std
pop
subl
add
sbb
xor
mov
ss
mov
shlb
hlt
jmp
imul
ljmp
sub
and
inc
mov
push
pop
daa
iret
or
mov
mov
movsl
add
mov
ret
into
jp
pop
push
mov
imul
fcoms
cli
arpl
mov
stc
into
push
mov
mov
leave
mov
bound
movsl
xor
push
and
rdpmc
aad
adc
imul
lock
sub
sub
inc
imul
xlat
je
jl
mov
repz
stos
lods
gs
jne
mov
ret
mov
pop
shll
sbb
int3
xor
cmp
js
inc
xchg
addr16
lcall
in
jle
sbb
adc
add
inc
dec
mov
and
push
les
frstor
jb
push
cld
xor
js
icebp
dec
cmpsl
rcl
je
dec
mov
out
xchg
jge
lcall
xor
and
pop
leave
cmp
out
es
inc
clc
dec
cmp
cmpsb
xchg
cmpsb
in
jecxz
fists
les
pop
xor
xchg
dec
js
loopne
addr16
ret
lret
int3
add
mov
jbe
push
adc
mov
xlat
lahf
xor
lock
mov
and
mov
xchg
mov
scas
into
sub
shrb
xchg
mov
mov
arpl
and
mov
scas
pop
imul
subl
jno
andl
sbb
dec
mov
fidivl
push
fisttpl
adc
mov
in
and
mov
and
sbb
loopne
xchg
add
sar
xchg
sbb
fwait
lahf
jle
aas
daa
mov
or
es
addb
xor
jo
sbbl
cmp
shlb
xor
stos
sub
loopne
clc
ret
les
pushw
bound
fstps
inc
sbb
or
fwait
inc
cmp
pop
push
mov
rcll
xor
xorb
je
jmp
loopne
clc
adc
push
mov
outsb
inc
dec
mov
mov
push
je
jmp
or
or
fimull
cwtl
popf
mov
addr16
inc
js
adc
int
test
and
xchg
scas
outsb
sbb
dec
mov
sbb
aam
xchg
xlat
je
mov
sbb
flds
jge
out
xchg
imul
or
aad
es
and
and
fldt
les
sbb
mov
push
or
pop
mov
inc
inc
ds
mov
add
out
cmp
in
cltd
sub
test
inc
mov
icebp
pop
cmp
in
mov
aad
fsub
mov
xor
jb
mov
imul
cmp
lret
xchg
inc
dec
xorb
adc
loopne
mov
lea
push
es
mov
repnz
and
dec
lcall
xlat
or
xchg
or
xor
nop
out
add
adc
call
pop
lea
test
lock
and
es
stos
mov
fcoml
cmp
xchg
push
out
lret
roll
scas
add
shlb
mov
mov
sbb
aam
loop
cmp
addl
lds
pop
scas
mov
test
add
test
outsl
insb
test
rclb
push
mov
fstps
shl
lret
push
imul
xor
rcr
arpl
add
cmp
cld
sahf
mov
nop
rclb
fiadds
sbb
leave
and
icebp
mov
aam
fcoml
lea
inc
xchg
mov
jle
push
push
cmc
jb
mov
negb
dec
pushl
cmp
jne
repnz
and
mov
test
aam
pushf
jp
dec
adc
inc
hlt
or
cmp
cmpsb
mov
cld
not
ficompl
xor
call
jmp
add
sahf
pop
inc
dec
daa
in
or
sub
lcall
or
js
mov
dec
ror
jmp
pusha
and
fbld
pop
dec
xor
rcrb
mov
ja
stos
push
push
jle
xlat
pop
cmp
push
mov
or
pop
fdivl
inc
stos
jae
iret
jne
sbb
and
les
mov
rcl
push
icebp
stos
movl
insl
shll
jmp
pop
add
mov
out
xchg
xor
ficompl
test
dec
mov
cmp
jbe
cmp
mov
pop
es
cmp
pop
xor
loop
push
repz
jecxz
popf
cmp
scas
fwait
fs
mov
add
cwtl
dec
repz
or
cmp
cmp
insl
sub
call
mov
lcall
js
out
int
cld
subb
cld
int3
rorb
xor
loopne
pop
push
cltd
jns
or
in
outsb
add
pop
add
inc
pusha
or
sti
or
je
sbb
jbe
push
push
sbb
sbb
adc
pop
test
sub
sub
jl
jno
stos
hlt
ffreep
adc
mov
and
inc
sub
in
adc
nop
stc
pop
fs
mov
jp
dec
pop
inc
mov
jno
aaa
scas
or
int
cmp
sbb
mov
fld
pop
push
nop
ret
mov
iret
add
jle
mov
sbb
in
xchg
jge
imul
jecxz
subl
mov
cmpb
or
or
jae
gs
mov
cmp
push
cmpb
jne
xchg
xor
cmp
mov
into
adc
addr16
in
in
pop
xlat
and
les
add
xchg
xchg
lods
fcomi
jae
ds
cmp
jne
outsb
jg
adc
jno
ret
mov
push
pop
aas
notb
lret
lock
push
pushf
repz
mov
jbe
xor
push
mov
fcoml
push
hlt
jno
dec
sarl
js
xchg
cmp
stc
push
rcl
lcall
mov
out
sub
or
xchg
xor
fldenv
xchg
xchg
add
dec
sti
xchg
ja
sbb
insl
lcall
inc
pop
fcom
inc
xor
mov
cs
stc
call
sbbl
in
pop
push
xchg
stos
cmp
cmp
jns
jecxz
loop
push
and
lods
inc
adc
sbb
out
adc
fwait
imull
lock
cld
or
pop
sub
adc
in
fcomi
orb
mov
push
dec
in
rcrl
loop
cmp
add
sub
in
test
shrb
sub
or
xchg
add
leave
push
fisubs
loop
inc
push
nop
test
and
mov
aam
pop
mov
andl
cmc
mov
out
push
inc
test
fidivrl
xor
jp
ja
inc
mov
fxam
iret
xor
mov
lds
pop
insb
in
push
ja
gs
mov
popf
jne
rcll
lret
imul
xchg
das
pop
pop
sahf
push
dec
int
adcl
test
icebp
pop
sub
cmpsl
pop
jne
xchg
iret
adc
xor
ret
insl
mov
pop
icebp
mov
mull
cmp
rorb
pop
ret
sbbl
pop
and
pop
mov
mov
pop
xchg
in
jmp
cwtl
lods
repnz
push
fadd
jg
inc
adc
add
sub
in
dec
pop
xor
jae
adc
adc
cmp
in
xchg
pushf
sub
mov
xchg
sub
or
fnstcw
cmp
cmpsb
popa
sbb
rcrb
dec
aas
popa
mov
int3
mov
jge
pop
and
cmp
sahf
push
sbb
outsl
pushf
jp
jne
aad
pop
push
or
xchg
adcl
mov
push
imul
sbb
jl
in
jnp
cmp
das
pop
mov
xor
mov
xor
sbbl
xchg
add
ljmp
and
lock
fistps
int
mov
in
cmp
cld
mov
mov
leave
and
and
sbb
cmc
cmp
push
xchg
test
mov
aaa
gs
and
adc
add
fwait
jbe
xchg
mov
aad
test
outsb
in
mov
inc
rcrl
mov
mov
stc
scas
lds
dec
cmpsb
pop
shlb
dec
in
ret
cmc
pusha
add
push
dec
punpckhbw
push
push
out
outsb
pop
sahf
jle
shll
cwtl
adc
and
clc
jb
or
sbb
stos
sub
mov
outsl
mov
or
lcall
fnstsw
fiaddl
jno
shll
push
roll
jge
inc
mov
sub
jb
cmc
pop
outsb
mov
push
xchg
mov
cmp
and
std
mov
add
out
cmp
mov
mov
cmpsb
sbb
dec
sub
test
setge
pop
cmp
mov
jo
mov
je
lea
mov
ret
into
add
rcr
mov
ja
scas
ret
push
push
call
rcrl
pop
stc
and
or
inc
aas
jnp
jl
clc
sahf
inc
add
cmp
pop
lock
add
mov
sub
mov
insb
sub
in
stos
movsl
mov
inc
and
roll
scas
jbe
and
ss
mul
ljmp
mov
add
jae
inc
mov
in
nop
pushf
and
shll
out
inc
xchg
xchg
aas
aam
insl
jbe
lods
cmp
add
outsb
sbb
icebp
pop
bound
or
fsubr
in
int3
loope
inc
mov
mov
out
xchg
repz
retw
sbb
ss
dec
jl
mov
loopne
cmp
mov
sub
push
jb
push
dec
mov
and
repnz
daa
mov
jp
mov
mov
jae
adc
pop
sub
pop
in
cmp
mov
in
mov
xchg
dec
jbe
outsb
push
lcall
fidivl
mov
pop
sar
xchg
adc
sbb
cmp
or
ds
clc
jp
xor
sahf
pop
xchg
aaa
lods
xchg
shl
mov
aaa
aas
push
mov
ss
mov
out
pop
or
call
sti
mov
mov
or
cmp
popa
mov
aam
enter
push
xor
scas
or
xchg
mov
sbb
inc
sbb
or
or
outsl
sub
sub
lret
ficompl
pop
cmc
cltd
inc
fwait
pop
pop
andb
inc
pop
and
mov
aas
mov
or
jle
movsb
jae
and
mov
or
fistpll
fwait
rol
es
int
mov
es
dec
stc
pxor
add
cmp
pop
jg
inc
cmp
ljmp
jnp
js
sub
xchg
xchg
xchg
lret
jp
mov
xor
add
es
mov
xchg
cmp
hlt
and
add
mov
or
sub
fs
jb
fnstenv
pop
lods
pushf
aam
or
icebp
andl
push
repz
push
jle
movsb
mov
scas
imul
in
dec
scas
lcall
pop
call
int
add
jge
mov
cld
iret
mov
adc
pushf
mov
push
inc
test
or
faddp
movsl
mov
cmp
test
mov
mov
lods
clc
nop
ret
fnstcw
sbb
ds
add
cmp
sub
clc
adc
cmp
inc
and
mov
cwtl
int3
icebp
adc
inc
std
mov
jmp
sbb
insb
test
lods
insl
and
loope
mov
test
mov
pop
aam
out
lea
mov
imul
sbb
ret
jle
aad
ret
cld
add
adc
dec
or
jmp
mov
xchg
insl
and
cmp
test
ret
push
push
test
bswap
dec
sti
jl
dec
cmpl
pushf
andb
pop
xchg
cli
sbb
mov
scas
shl
fildll
dec
add
jp
or
sub
sub
jmp
push
or
xchg
imul
push
xor
popf
movsl
pop
dec
sbb
add
outsb
in
inc
fstp
dec
hlt
dec
fwait
pop
jecxz
mov
mov
mov
xchg
sti
and
push
sahf
lret
xor
inc
xor
fisubl
scas
addl
xchg
les
jno
push
out
cli
add
jl
or
xor
inc
and
lods
es
or
mov
in
pusha
push
sub
sbb
dec
int3
push
mov
adc
in
fdivl
fcmovnb
sub
repz
xor
popf
xor
and
mov
cltd
into
call
int
js
adc
test
movsb
sub
adc
xor
arpl
test
das
add
sbb
repz
sub
mov
out
leave
out
repz
outsb
nop
cmp
jno
push
xchg
xchg
test
std
cwtl
jae
inc
or
jo
lret
mov
outsl
icebp
pop
jmp
mov
lret
mov
fsubs
stc
mov
sahf
hlt
inc
jo
mov
sti
movl
ja
dec
xchg
scas
arpl
movsl
xchg
shlb
push
adc
mov
pop
mov
mov
notl
cmp
adc
mov
imull
bound
add
call
pop
pop
mov
pop
mov
push
movsl
dec
das
cmp
aad
loop
sub
push
js
jo
push
jo
or
pop
pop
push
dec
ds
sti
lahf
and
dec
sbb
push
xlat
xor
fs
add
xchg
lock
enter
dec
je
lock
mov
xchg
sub
icebp
adc
push
lock
cmp
sub
xchg
mov
xchg
sbb
pop
mov
push
adc
inc
jno
push
je
cmp
in
and
int
cld
pop
jo
repnz
imul
addb
adc
mov
andb
imul
xchg
scas
cwtl
push
sbb
jl
dec
mov
push
lahf
sub
mov
jb,pn
adc
push
clc
loopne
adc
lcall
sub
adc
mov
xchg
or
push
test
lea
cli
mov
push
cwtl
jae
inc
and
popf
das
ficomps
push
or
add
pop
aaa
sar
cwtl
jmp
in
sbb
insb
mov
dec
call
xchg
add
lcall
mov
sbb
cmpsl
es
aaa
cld
stc
adcb
dec
add
adc
mov
mov
test
pop
sbb
addr16
dec
fwait
push
mov
enter
addr16
mov
dec
mov
shrb
lock
push
imul
jge
repz
mov
xchg
dec
sub
and
fcoms
cli
push
jecxz
push
test
in
in
bound
push
mov
inc
leave
xchg
sub
sti
dec
imul
and
scas
loop
ds
outsb
scas
std
les
or
push
outsl
lahf
mov
in
pop
xchg
jge
pop
jbe
in
es
and
xchg
sub
pop
aas
pop
adc
dec
ffreep
jb
in
int3
getsec
jbe
xchg
mov
jmp
push
pop
xor
dec
sbb
fxch
xor
mov
xchg
xchg
out
inc
push
repnz
aam
xor
jnp
cmp
mov
cmc
jg
adc
mov
inc
cmpsb
into
ret
cld
rclb
sbb
stos
cmp
lea
mov
out
test
jno
push
stos
les
scas
in
ss
stc
jmp
popf
movsb
adc
cli
movl
outsl
addr16
lret
ljmp
int
add
push
push
lods
dec
xor
movsl
cmc
mov
repz
pushf
jmp
data16
bound
dec
cmpsl
fcoms
mov
lcall
lds
daa
loop
dec
outsb
cmp
inc
cmp
jecxz
jecxz
jno
jl
mov
fdivl
mov
clc
jl
mov
js
push
loope
repnz
scas
or
sub
adc
mov
or
mov
push
inc
mov
cltd
cs
iret
dec
xor
jb
leave
mov
jns
jmp
adc
insb
test
inc
icebp
push
xchg
push
out
mov
xchg
jecxz
push
loope
add
les
stos
pop
scas
xchg
pop
xor
mov
mov
shr
inc
push
clc
mov
fcmovnbe
iret
aas
xchg
jnp
int3
and
ss
pop
fbstp
and
inc
push
mov
pop
adc
adc
or
xchg
mov
pop
sbb
xor
push
popa
inc
mov
xor
inc
jle
sub
mov
pop
mov
lods
js
add
sbb
popf
lods
aad
dec
bound
pop
out
sbb
or
and
cmpsl
shl
add
cmc
loope
jl
test
jg
icebp
pop
xchg
xor
rorl
xchg
jbe
xchg
jno
mov
inc
sbb
cwtl
jb
inc
leave
sub
pop
aam
push
outsl
fcmovne
repz
addr16
jg
imul
outsb
lea
mov
cmp
das
jne
add
mov
in
cld
jb
push
ljmp
push
xchg
sub
neg
sarb
xor
sbb
aam
repz
cwtl
call
out
cmp
shr
mov
push
jge
mov
push
xchg
xor
addr16
sbb
inc
jge
pop
push
jle
xchg
mov
pop
fsubrl
xchg
std
sub
add
out
fiaddl
rcrl
shll
dec
sbb
leave
adc
push
pop
test
mov
mov
and
cmp
fld
bound
and
fwait
mov
adc
imulb
jnp
dec
sbb
leave
xor
ret
je
add
pop
repnz
push
dec
scas
push
xor
push
mov
jecxz
push
mov
pusha
inc
sti
xchg
jno
repz
jge
jo
mov
aam
sub
pop
fsub
inc
sub
out
lds
int
inc
cmpsl
call
mov
jno
lret
mov
mov
cmovo
rcrb
ret
clc
call
int3
daa
adc
addl
data16
cmp
scas
fstps
sahf
pop
mov
xchg
loopne
aaa
inc
mov
sarl
sbb
notl
enter
mov
subl
xor
popa
add
scas
aad
pusha
test
movsb
ret
pushf
mov
ret
fsubl
mov
shl
adc
sbb
fdivs
dec
adc
ds
fninit
pop
insl
je
arpl
or
jne
ror
dec
xchg
pushl
mov
je
pusha
inc
fnstsw
imul
mov
mov
dec
iret
outsl
jge
andl
push
mov
dec
mov
sahf
cmpl
flds
aaa
sbb
xchg
add
push
in
mov
loopne
fiadds
or
jmp
jns
out
push
scas
cli
mov
sub
jge
lods
call
inc
mov
sub
cmp
mov
pop
jns
int3
mov
add
push
jmp
fidivrs
mov
add
popa
pop
and
daa
xchg
push
jmp
push
cmpsb
push
and
pop
cwtl
cmp
inc
xchg
aaa
lret
pop
cmpsb
push
fcmovnbe
push
inc
sbb
fwait
hlt
jne
xor
sbbb
mov
fidivl
outsb
mov
push
out
sbb
fnstsw
sbb
cmc
pop
sbb
clc
cwtl
adc
pop
clc
inc
mov
testl
pop
jns
mov
adc
in
lahf
jb
aad
test
pop
xchg
mov
sbbb
inc
inc
push
push
adc
scas
sbb
xchg
jne
inc
out
test
inc
cmc
or
jnp
xchg
out
xchg
jne
repz
mov
das
cmpsl
pusha
sbb
push
outsb
pop
xor
adcb
dec
jmp
cmp
cs
rclb
inc
addps
shlb
mov
mov
sub
sbb
mov
call
std
stos
ss
push
jmp
sbb
aas
sub
mov
lea
push
mov
fwait
pop
insb
add
out
pop
add
mov
psubd
xor
test
pop
mov
incl
mov
aas
inc
cwtl
mov
repnz
xor
iret
jg
fs
mov
mov
xchg
sahf
mov
jnp
sbb
jp
sub
hlt
xchg
jae
mov
jle
mov
lcall
jns
enter
cmp
sub
cld
shlb
jae
lds
div
jmp
lret
dec
push
pop
arpl
push
repnz
sbb
pop
push
test
mov
aam
into
jae
inc
ficomps
xor
hlt
sub
cwtl
rorb
pushf
push
sbbl
push
mov
mov
mov
sbb
pushl
push
out
pop
push
sbb
fsub
movsb
scas
repnz
test
iret
mov
pusha
sub
mov
imul
mov
dec
or
lea
aas
ljmp
mov
shlb
jae
ja
in
adc
or
es
jne
add
and
inc
sub
jns
xchg
push
fs
xlat
pop
jmp
es
in
pusha
je
inc
jg
pop
pop
bound
repz
gs
addr16
inc
mov
inc
adc
lahf
int
cmp
mov
mov
mov
xchg
test
push
mov
dec
bswap
cmp
jg
pop
mov
movsb
les
mov
enter
in
mov
add
add
stos
mov
mov
shrl
movsb
loop
pop
rcrb
bound
xchg
cli
mov
or
mov
push
sub
inc
xchg
mov
inc
pop
into
out
aas
push
lret
cli
dec
stos
loop
sbb
in
jle
jl
add
jecxz
popa
cmp
add
xchg
pop
pop
mov
push
mov
scas
mov
or
aas
pop
adc
and
jmp
adc
xor
xchg
movsb
mov
iret
mov
iret
sbb
cmp
or
sbb
lret
test
and
add
mov
and
mov
es
int3
jl
fmul
lahf
mov
adcb
pop
mov
ja
cmp
pop
jmp
jl
mov
dec
lcall
aas
and
xchg
mov
sbb
movsb
sti
mov
inc
nop
xchg
dec
data16
out
inc
data16
or
push
imul
or
cmp
test
out
syscall
pop
rcll
pusha
pop
icebp
mov
push
insl
gs
ret
adc
xchg
dec
cltd
faddp
subl
xor
js
push
sub
cmp
push
sarl
ror
add
mov
adc
adc
add
daa
sti
psubw
cmp
dec
and
js
es
jl
or
stos
imul
inc
add
adc
test
add
out
add
shll
aas
es
out
iret
repnz
rolb
cmp
inc
xlat
or
sub
jnp
cmc
lret
ror
jb
fldt
inc
sub
pop
or
sbbb
sub
inc
cltd
or
sub
xchg
mov
in
mov
xor
add
and
push
aam
filds
mov
xchg
data16
inc
push
and
lcall
das
into
mov
sbb
jecxz
mov
iret
fsubl
mov
jbe
shll
enter
xor
jmp
xor
cwtl
cmp
add
movsb
pop
int
jns
jno
pop
aaa
cmp
lahf
jo
das
dec
mov
mov
sti
xor
cmpb
xchg
jno
jae
ss
imul
pop
cltd
mov
adc
mov
mov
bound
in
adc
jne
lods
xor
aad
jmp
adc
popa
out
jnp
es
jnp
or
mov
jge
jno
push
fildll
jnp
lods
rol
sbb
insl
lahf
mov
ja
push
mov
cmpsb
jb
xor
aad
outsb
mov
rcr
imul
xor
call
shl
fildll
mov
pop
pop
sbb
mov
inc
stos
inc
es
adc
out
out
or
push
sub
sub
inc
jge
mov
adc
cltd
jns
pop
orl
in
add
or
mov
push
mov
ror
xor
mov
add
fcomps
js
fldcw
dec
pop
out
dec
mov
data16
out
hlt
addr16
jno
aad
xor
out
dec
out
dec
xchg
xor
testl
mov
cmp
jmp
xor
mov
das
sub
xchg
jnp
mov
std
jge
lcall
orl
cli
lret
test
xchg
xor
stc
int
and
jl
jo
arpl
rorb
mov
negl
adc
loopne
xlat
dec
add
outsl
mov
adc
cli
movsl
xor
das
or
or
xchg
sbb
imul
sub
fistpll
mov
js
int
je
sahf
lock
dec
adc
push
add
adc
ljmp
pop
rolb
test
iret
mov
xchg
add
fistl
ds
inc
stos
pop
jns
cmp
adc
sub
aaa
inc
cwtl
add
fidivrs
call
mov
inc
fstl
data16
ja
ficoms
adc
ds
data16
add
je
lock
jecxz
or
pop
mov
and
mov
imul
icebp
into
add
inc
mov
outsl
mov
sub
and
jle
or
cs
mov
push
and
or
xorb
iret
loop
sub
mov
sahf
and
xor
sub
ret
test
sbb
mov
test
cmp
cmp
and
loop
jle
ja
pop
mov
jae
fidivl
insb
loop
mov
fisubl
add
push
sub
andb
push
xchg
or
loop
movsb
rcrb
mov
add
xrelease
dec
es
fisttps
xor
dec
inc
xor
jno
add
push
mov
pop
mov
or
jne
decb
add
dec
icebp
fldl
orb
fadds
adc
mov
jl
aas
call
verw
mov
push
fdivrp
test
je
pop
jle
push
mov
mov
loopne
dec
fwait
addr16
cld
xor
pusha
cmp
dec
gs
sub
adc
push
lahf
add
mov
int
mov
sub
lock
pop
out
xor
scas
cmp
sbb
stos
adc
clc
xor
mov
push
pushf
addr16
pop
mov
dec
cltd
pop
cmp
cmpsl
or
out
sub
outsb
and
jns
in
mov
add
cwtl
pop
cmp
pushf
adc
fwait
dec
cmc
shr
push
sbb
nop
sub
cmpsb
rolb
sbb
int
sahf
lcall
sbb
sbb
cmp
imulb
enter
mov
push
loop
inc
dec
xchg
mov
xlat
and
xor
or
sbb
popf
inc
fwait
pop
fildll
mov
fdivr
xlat
scas
push
xchg
or
fistps
and
xor
jmp
std
dec
cmp
jge
cli
sub
addr16
lret
pop
clc
andb
and
cwtl
push
push
mov
mov
loopne
in
and
xchg
adc
loop
pop
clc
sbb
sub
arpl
push
pop
insl
ljmp
xor
xchg
xchg
xchg
arpl
pop
dec
pop
dec
popf
cli
cmp
stos
xchg
and
fsubrs
jo
pop
jge
cmp
xchg
mov
jp
je
push
dec
dec
push
xchg
rclb
in
add
fstps
scas
or
mov
es
fcoms
shrl
cmp
inc
xchg
pop
pop
xchg
mov
js
js
and
cmpl
xor
or
mov
negl
leave
adc
hlt
jns
pop
leave
xchg
cmp
idivb
test
test
pop
mov
lea
addb
jmp
inc
insl
fcompl
lock
lea
jno
out
fbld
hlt
xor
push
inc
xchg
xor
test
incb
jge
inc
and
fwait
mov
xor
push
es
mov
dec
rol
int
inc
out
cltd
repz
iret
std
jge
adc
xor
into
test
rolb
enter
jnp
mov
sahf
cmp
adc
cld
ret
lods
pop
mov
xchg
lods
add
push
pop
pop
mov
inc
xchg
or
dec
mov
sahf
addr16
movsb
mov
test
mov
mov
repnz
mov
out
xchg
mov
es
mov
mov
fildll
mov
imul
sbb
jns
call
stc
push
int
mov
xchg
add
adc
pop
dec
notb
jl
test
inc
pop
push
fmuls
enter
inc
call
ja
mov
push
call
inc
insb
xchg
xrelease
scas
test
lcall
fdivrp
fisubrs
mov
ret
mov
inc
and
clc
add
push
roll
repnz
xor
imul
jp
or
out
or
sbb
push
insl
lret
fsubrp
andl
push
dec
jge
dec
adc
push
rcrl
pop
int3
shll
inc
les
in
xchg
test
rolb
es
jmp
mov
fidivrs
test
and
es
lahf
or
adc
fimuls
ret
je
ss
arpl
cmpsl
cvttps2pi
std
inc
add
cmp
or
or
mov
aas
into
cmpsb
mov
lret
rcrl
sub
outsb
pop
fiadds
enter
outsl
cmp
mov
les
or
dec
pop
cvttps2pi
sahf
sbb
mov
xor
cmp
jno
daa
xchg
inc
repnz
insl
jb
inc
cmpsl
in
adc
cmpsl
cs
insb
xchg
adc
and
sti
lock
sti
xor
push
lock
int3
cld
ljmp
cpuid
mov
fdivs
push
or
jb
test
leave
pop
orl
lds
cmc
jb
dec
jle
mov
mov
and
aas
stc
inc
sub
js
adc
popf
mov
jnp
ds
or
pop
add
leave
loopne
leave
imul
std
insl
lcall
rep
arpl
or
adc
neg
ret
inc
insl
mov
sbb
pusha
incb
push
cmp
in
fistpl
nop
adc
mov
xor
pop
sbb
in
in
jmp
cmp
xor
f2xm1
mov
jno
sbb
dec
or
test
mov
sbb
xor
iret
push
push
or
mov
shlb
fs
xor
xchg
inc
test
cltd
sbb
sub
and
sub
inc
fidivs
movsl
push
pushf
adc
jle
push
mov
or
sbb
mov
mov
outsb
pushf
adc
cmp
mov
mov
fbstp
adc
xchg
cmpsb
cld
cmp
inc
andb
scas
adcl
cmpl
inc
add
mov
jp
mov
xor
xlat
jmp
xchg
js
adc
push
push
jo
pop
sbb
into
arpl
cli
aam
cli
xor
adc
jp
push
test
xor
push
push
es
adc
mov
daa
adc
scas
cmp
lret
mov
and
or
pop
repz
sub
mov
inc
test
jl
stos
mov
push
jg
adc
pop
inc
mov
dec
rcl
imul
add
cmp
cltd
jo
stos
adc
out
mov
pop
test
push
lret
sahf
mov
outsl
cmp
mov
dec
jns
sbb
hlt
jp
lahf
mov
leave
das
adc
test
inc
dec
ds
das
cmp
mov
dec
testb
add
scas
dec
ja
xlat
icebp
std
ja
jb
jbe
add
out
inc
mov
pop
mov
iret
push
xchg
cmc
dec
mov
xchg
mov
mov
cmpsb
mov
in
popa
out
pop
jno
jnp
nop
jo
xchg
out
out
pop
and
xchg
or
arpl
adc
stos
shlb
push
call
push
adcl
loop
or
xor
leave
mov
inc
jle
out
loope
pop
adc
jno
jns
ss
dec
cwtl
xor
out
dec
jns
cmpsl
push
std
divl
repz
daa
test
sti
mov
or
std
push
mov
push
and
mov
xchg
jo
sbb
lea
pusha
pop
and
lahf
lods
lea
test
aas
pop
lcall
ljmp
xchg
mov
aas
xchg
lods
div
gs
sub
push
fbstp
jp
and
mull
into
mov
sar
xchg
sub
sub
sub
dec
dec
insb
inc
popa
mov
mov
insb
adc
mov
mov
add
push
or
add
cmc
fisubrs
jns
gs
mov
mov
ljmp
jb
or
xchg
fists
pop
jo
xchg
mov
int3
mov
fwait
out
loope
cmp
sub
dec
push
nop
outsb
mov
add
jp
sbb
bound
xor
jle
test
aas
xlat
xlat
cwtl
jo
lret
out
loope
mov
or
int
adc
or
mov
jl
aad
push
mov
clc
sbb
fmull
push
xchg
push
cmp
aas
inc
mov
imulb
cmp
pop
cmpsl
fstps
jo
adc
cmp
inc
inc
push
mov
fdivs
push
dec
dec
push
xchg
ja
addr16
test
loopne
data16
fildl
xor
push
fimull
mov
ss
into
add
fnsave
lods
cmp
add
lret
jb
push
inc
lcall
sbb
sbb
aad
scas
out
popf
scas
popf
mov
adc
imul
jnp
sub
loop
pop
cld
pop
push
iret
adc
xchg
add
hlt
adc
cmpsb
cmp
inc
shlb
or
sbb
ds
sti
dec
out
and
sarb
cmp
sub
stos
aas
leave
fsubs
sub
xchg
fmuls
fcoms
mov
jmp
mov
lret
mov
pop
scas
jmp
add
push
cmpsl
shrl
mov
and
fdivrs
push
enter
dec
cmp
orb
xchg
cmc
ret
push
push
jno
pushf
mov
xor
cli
xor
mov
dec
jae
adc
into
and
ret
mov
mov
dec
iret
clc
sahf
mov
loop
sbb
inc
sub
movsl
aaa
mov
push
mov
mov
das
mov
shufps
jmp
iret
leave
test
pop
xchg
out
arpl
pop
push
push
je
hlt
cmpsb
push
sub
add
aas
aam
out
cmp
mov
mov
lret
sbb
jnp
xor
iret
xchg
fcmovu
sbb
jmp
cmpsb
stos
dec
ret
loop
sbb
mov
mov
int
lds
mov
xchg
lret
mov
sarl
cli
push
pop
mov
aam
sub
daa
mov
inc
ret
mov
push
mov
subb
mov
or
fs
mov
lds
jnp
jg
dec
movl
lret
movsl
mov
pop
test
or
add
mov
test
jns
mov
mov
js
sbb
gs
jno
jl
call
loopne
add
push
lret
inc
je
xlat
mov
movsb
mov
popf
mov
stos
loop
es
push
mov
es
popa
add
dec
nop
mov
jbe
rcl
xchg
data16
js
mov
out
pop
mov
subb
fs
sub
push
dec
sub
push
fwait
dec
xchg
dec
outsb
sbb
dec
inc
mov
adc
fnsave
xchg
mov
xchg
pop
dec
dec
rcl
dec
jnp
and
xchg
push
pop
fidivl
mov
lcall
add
out
in
add
mov
mov
arpl
mov
out
lret
adcb
inc
fisubl
dec
pop
call
xor
xor
fucomi
xor
repnz
outsb
mov
add
stos
push
aam
out
xchg
out
sbb
or
lods
stos
sarl
sub
add
jg
pusha
push
dec
and
out
repnz
cmp
mov
or
aam
ds
dec
sbb
test
pusha
test
jbe
jg
jae
push
ret
pop
cmp
xchg
leave
dec
dec
lds
sub
mov
jg
push
mov
cmp
lock
mov
add
push
fldenv
xor
imul
sub
push
mov
aam
jp
hlt
es
subl
out
and
jmp
jp
sbb
adc
int3
mov
sbb
mov
inc
ret
mov
dec
pop
loopne
push
pop
mov
jle
clc
aas
sbb
jns
sbb
push
add
ret
stos
or
jo
mov
mov
repnz
arpl
push
xor
sbb
in
fsubrl
add
sbb
dec
and
mov
jno
push
adc
imul
mov
cs
xchg
xlat
outsb
ficomps
dec
filds
and
test
dec
inc
add
les
push
or
lods
or
mov
out
jg
adc
xor
loopne
mov
mov
mov
xchg
iret
or
or
stos
adc
ss
add
pop
lea
mov
in
inc
arpl
fnsave
xor
test
imul
mov
lahf
mov
shlb
push
repz
adc
aas
pop
push
loop
sbb
jg
loop
sub
iret
mov
xchg
or
int
xor
ljmp
jp
adc
cmpsl
jbe
add
int
pop
cmp
sub
lods
push
lock
call
test
and
leave
adc
lcall
out
call
repnz
cmp
mov
inc
out
fndisi(8087
sbb
outsb
push
mov
mov
or
inc
icebp
xchg
inc
xor
outsl
push
ret
rol
sti
xchg
lret
stc
lods
push
or
stos
sub
leave
jle
negl
mov
add
inc
addr16
loopne
add
xchg
rcrb
adcb
stos
and
add
inc
sbb
insb
sub
jge
out
push
fs
aam
xchg
push
mov
mov
adc
mov
rcrb
iret
mov
loopne
stos
jecxz
xor
push
cli
int
sub
movsb
loop
dec
into
jmp
aas
out
add
icebp
xor
arpl
mov
mov
push
stc
repnz
mov
loop
outsb
aad
subl
pop
clc
push
fs
xchg
adc
js
movsl
out
aad
imul
daa
mov
cmp
arpl
inc
pushf
jg
or
or
mov
in
stc
dec
lods
rcll
cmpsl
loope
or
popf
repnz
jp
das
cltd
add
jle
mov
jae
sarb
dec
pop
xchg
mov
aaa
mul
lahf
mov
mov
sub
je
out
fwait
jae
and
scas
repnz
pop
xchg
jmp
or
cwtl
push
sbbl
jnp
pmulhuw
lret
out
add
nop
bound
mov
adc
adc
mov
mov
cld
aad
gs
loopne
add
jmp
out
out
and
pop
test
jp
loopne
xchg
pop
pop
dec
adc
es
shrl
xchg
dec
mov
jno
shl
mov
jbe
xor
lcall
jl
fnstenv
cmp
mov
pop
mov
in
test
ret
insl
add
test
sti
mov
jbe
addb
int3
dec
jo
xor
or
arpl
arpl
test
fstpl
cwtl
ficomps
jns
push
mov
outsl
ficoms
les
fcompl
insl
cltd
lret
cs
fsubrs
inc
insb
inc
dec
jp
xchg
in
cs
jge
add
shrl
cltd
icebp
add
cwtl
pop
jnp
push
or
int
cmp
inc
test
pop
pop
xchg
inc
outsl
in
inc
push
cmp
outsb
cmp
dec
sub
xor
dec
int
sti
jecxz
hlt
cltd
xchg
jecxz
cmc
js
push
cwtl
in
pop
mov
mov
das
in
shll
mov
test
inc
sbb
mov
jecxz
les
into
stos
jle
jg
jo
imull
mov
ret
xchg
lea
clc
cmpsb
cmp
lds
xchg
pop
push
shlb
loopne
dec
mov
clc
shl
js
sub
scas
sbb
xchg
cwtl
ja
insb
sti
arpl
dec
js
sahf
sti
je
mov
test
mov
pop
rcll
sbb
dec
arpl
fldt
das
xor
jl
jne
jmp
das
fisttpl
sbb
xor
add
pop
psraw
sub
mov
add
enter
test
xlat
insl
ds
aas
inc
dec
mov
rcll
adc
int
fimuls
aad
es
cmp
inc
rcrl
xlat
push
and
lock
and
adc
jmp
scas
fistpll
push
mov
scas
mov
xchg
fwait
incl
and
inc
jae
cmp
std
dec
insl
or
out
mov
pop
mov
mov
test
out
les
fwait
xchg
jnp
movsb
out
push
out
mov
xor
into
push
jg
adc
outsb
jb
cltd
test
fnstcw
rcrb
scas
adc
mov
pop
test
push
in
pop
push
incl
add
fcomp
leave
je
xchg
pop
and
mov
rcrl
xor
xchg
test
js
push
push
add
push
outsl
cmpsb
repz
js
popf
xchg
loope
les
sub
pop
testb
push
popa
sarl
imul
and
pop
cmc
cmc
jp
mov
dec
lds
xchg
insl
stos
repnz
sarb
pusha
in
call
dec
nop
mov
mov
xor
push
fimull
mov
or
fsubl
push
pop
inc
mov
mov
cmp
mov
inc
mov
rcrb
sarl
sub
cld
cli
dec
call
aam
mov
hlt
pop
sbb
add
xchg
rorl
jo
shrl
or
fisttpl
mov
xor
jmp
shl
popf
sets
cmpsb
aas
cmp
add
test
imul
xor
popl
and
dec
cmpsb
loopne
lcall
fildl
jnp
aaa
xor
ret
pop
stos
pop
enter
aad
ds
sbb
mov
mov
sti
out
in
mov
push
mov
sbb
mov
icebp
or
or
scas
int
sbb
jg
mov
pop
cmpsb
adc
sti
mov
cli
minps
out
neg
ficomps
cs
add
adc
aad
daa
lret
push
stos
dec
shufps
ja
xchg
daa
push
cwtl
stc
pop
aam
rclb
jge
rcrl
cmp
popa
cmp
cmp
mov
adc
cltd
cld
call
ja
mov
mov
mov
outsl
sub
hlt
imul
mov
cltd
cmpsl
ds
xor
pop
inc
push
inc
push
inc
icebp
clc
loop
mov
scas
iret
mov
repnz
insb
inc
cli
out
mov
test
shlb
inc
inc
test
daa
mov
pushf
jle
ljmp
xchg
sahf
cmovge
or
inc
cli
and
imul
loopne
call
mov
call
add
insb
and
loop
mov
cmc
xchg
add
ja
faddp
aas
mov
rcr
jl
add
xor
push
call
shr
ds
adc
lret
lods
repz
dec
outsb
test
xchg
xchg
xchg
jp
dec
lret
movsb
aaa
popf
jl
push
add
inc
or
fildl
les
sbb
push
push
dec
enter
jmp
cmc
mov
sub
pop
xchg
pushf
push
sub
scas
or
xchg
inc
ljmp
add
and
add
jne
call
fstl
jnp
shlb
sarb
es
jg
cmpsb
adc
cmpsb
pop
xor
in
data16
enter
cmp
or
mov
mov
jae
or
iret
adc
fidivl
pushf
mov
or
rclb
xchg
inc
pop
add
stc
and
xchg
pop
mov
sub
xor
and
inc
inc
jmp
jae
lods
repz
inc
ss
mov
jg
call
jge
ret
mov
mov
pop
cmpsl
ss
xchg
dec
in
adc
mov
imul
popa
push
inc
divl
pushf
fwait
out
add
adc
add
stc
mov
les
les
lods
dec
adc
loop
or
pop
pop
mov
bound
pop
or
dec
sbb
or
cltd
cmp
and
push
mov
call
jmp
cwtl
sbb
test
popa
pusha
jae
pop
jge
movsb
jnp
jecxz
test
nop
lds
or
test
repz
ds
rorl
and
stos
test
lods
mov
sti
ja
mov
lock
movsb
adc
mov
lret
inc
jmp
cmp
jne
xchg
pop
cmpb
jmp
sub
mov
pop
cmp
cmc
xor
outsb
das
outsl
int3
mov
pop
imul
iret
pop
mov
fneni(8087
add
fimull
adc
fmuls
lods
call
sbb
call
inc
sub
outsb
lods
cmp
loopne
scas
xor
push
aam
adc
add
mov
ja
mov
push
mov
pop
fdivl
data16
xchg
jo
lea
mov
in
adcl
mov
lret
mov
pop
into
in
push
xlat
push
sbb
xor
pop
mov
cmp
repz
scas
dec
call
arpl
push
addb
mov
cs
sbbl
mov
int
cwtl
js
fdivp
jne
into
flds
push
out
xor
or
mov
cmp
pop
enter
popf
xchg
dec
cmpb
out
ljmp
jae
pop
and
inc
adc
add
push
rcrl
imul
imul
sub
mov
mov
cmp
mov
mov
or
sahf
push
lcall
mov
or
jle
in
repz
inc
in
lea
das
sub
xchg
das
out
icebp
xor
imul
out
xchg
int3
push
call
mov
aad
mov
xor
and
incl
pop
push
cmp
mov
dec
xor
jmp
nop
sub
mov
push
lea
dec
inc
iret
mov
or
dec
clc
pop
xchg
daa
test
dec
ss
pushf
lcall
inc
test
ljmpw
inc
movsl
adc
ljmp
xor
xchg
sbb
addb
lcall
imul
xor
lock
and
outsl
push
bound
stos
mov
mov
add
clc
std
mov
stos
sub
mov
mov
repz
and
mov
int3
cmp
mov
mov
movsb
adc
fsubrs
cli
xor
sub
mov
pop
sbb
push
das
sbb
jo
add
je
dec
and
sub
pushf
mov
pop
jge
cli
push
xchg
xor
movsb
iret
or
aaa
push
jle
fwait
push
mov
imul
cltd
mov
cli
arpl
mov
fnstenv
or
jnp
mov
in
into
jp
adc
call
sbb
push
test
push
sub
lods
push
in
or
or
sub
mov
dec
aas
push
jg
mov
jl
imul
add
inc
clc
fwait
dec
hlt
outsl
cwtl
xchg
in
sub
add
cmpsl
add
outsb
xor
jns
cwtl
inc
loop
mov
aaa
int3
sti
adc
or
push
xchg
ja
jne
aas
shlb
iret
inc
inc
mov
add
fidivl
out
testl
sbb
lahf
ds
and
fmull
cwtl
mov
jae
dec
sub
sub
mov
fistpl
popf
pop
jp
sbb
pop
jmp
xor
test
call
sti
push
mov
shrl
into
mov
fs
push
bound
jmp
or
add
and
dec
ds
fsubr
xor
sub
out
das
call
sahf
repnz
stos
insb
inc
sbb
jb
bound
sahf
fwait
sarl
outsb
incl
jl
das
inc
out
mov
jp
negl
pop
cmc
in
popa
daa
das
xchg
adc
adc
aam
rcrl
fimuls
in
fs
lea
add
cmp
mov
aaa
in
imul
push
and
leave
jo
jecxz
scas
lcall
add
pusha
xchg
jbe
lock
lea
icebp
fwait
jnp
push
stos
sbb
mov
pop
mov
int3
cmp
jnp
inc
cmp
inc
hlt
jno
mov
insb
push
out
leave
lods
cmp
cmp
xor
scas
scas
nop
ret
cwtl
dec
out
movsl
cmpl
les
mov
or
mov
pop
pusha
inc
mov
lds
inc
cs
fldcw
cld
adc
imul
ja
push
cmp
dec
push
sbb
xorl
xorl
pop
insl
inc
sbb
push
cmp
adc
push
loope
sub
pop
push
enter
cwtl
add
or
lods
mov
jl
movsb
and
daa
mov
or
push
mov
push
ret
cmc
ret
lahf
xchg
sub
shll
mov
mov
add
sub
or
lock
inc
and
cli
mov
je
inc
out
add
insl
sub
xor
scas
loop
cmc
into
cmp
cli
loopne
and
inc
cwtl
rclb
cmp
cmp
fistl
lcall
xchg
add
out
js
sbb
rcrb
inc
addr16
stos
scas
je
jbe
lods
fisubl
inc
sbb
aam
cmp
out
dec
fwait
rorl
jae
mov
cltd
and
sub
addr16
or
lods
in
movsb
or
lea
divb
aas
js
stos
pop
push
push
inc
les
sbbb
inc
or
or
pop
sbbb
pop
cwtl
in
and
adc
pop
rcrl
push
iret
xchg
call
loope
push
add
mov
sub
pop
lcall
adc
repz
sbb
testl
leave
mov
popf
scas
mov
js
rcll
addl
cmpsl
popa
ret
subl
js
fdivs
mov
insb
aaa
pop
imul
test
pop
test
jno
push
in
jecxz
stos
clc
jge
lods
xchg
adc
push
sbb
add
add
sbb
mov
and
lret
stos
mov
repz
insl
pop
add
jbe
mov
jns
insl
popf
push
adc
fnstenv
call
cmp
sbb
addr16
insb
jae
stc
dec
pop
pop
cmp
test
divl
shrb
mov
sbb
xchg
lcall
cs
cmp
or
pop
ret
sahf
jp
repnz
lcall
xor
xor
es
aad
pop
loopne
scas
imul
pushf
mov
call
jbe
mov
mov
lock
testb
sahf
pop
fstpl
sub
and
mov
addb
roll
popa
rolb
aaa
test
cmp
xchg
push
bswap
cmp
push
push
mov
ljmp
iret
cltd
rolb
cmc
insl
lret
imull
in
shll
jae
stc
lahf
je
stos
ljmp
sti
xchg
fs
cld
jmp
xchg
test
mov
rorl
fsubr
jecxz
pop
add
lods
cmp
into
shrb
dec
mov
xchg
imul
fisttps
daa
scas
test
adc
push
frstor
inc
call
cld
xor
cmp
test
xor
dec
lcall
mov
dec
subb
popa
xchg
sbbb
mov
sub
or
or
sti
adc
pop
sub
fidivs
bound
adc
insl
lret
push
clc
pop
jl
pop
in
mov
pop
cmc
jl
pop
xchg
cltd
jnp
adc
inc
in
adcl
mov
lret
mov
cmp
mov
cmp
fiaddl
frstor
xor
and
xor
lea
jnp
mov
pusha
add
mov
daa
lods
adc
and
xchg
push
mov
fistpl
dec
pushf
or
sbb
test
leave
mov
lret
inc
xor
lds
sub
adc
cmp
in
dec
in
data16
fs
test
jne
or
cltd
inc
fprem
push
dec
and
ficoms
adc
or
pop
fsubl
icebp
fs
test
mov
dec
nop
jg
xchg
arpl
bnd
std
test
jge
ds
jno
scas
std
push
jp
fsubs
sti
inc
pop
jns
loopne
sti
in
mov
lcall
cld
pop
icebp
inc
pop
inc
jle
mov
pop
jmp
xor
arpl
sbb
jo
and
pop
andl
sub
mov
xchg
xlat
mov
movsl
mov
jl
push
inc
loopne
into
dec
cmp
xor
and
adc
inc
sbb
ljmp
jbe
adc
cmc
adc
xor
fldpi
imul
test
pop
jbe
mov
mov
sbb
shrb
adc
add
mov
les
mov
loop
sarb
ja
and
cmpsb
mov
jno
in
xchg
es
jbe
ja
mov
jg
add
pop
mov
and
lahf
out
loopne
pop
mov
dec
gs
mov
mov
sub
aad
dec
movb
xor
sub
fldcw
repnz
je
test
adc
add
mov
or
add
inc
xor
push
xor
pop
dec
pop
addr16
jae
xor
clc
lret
lds
paddw
pop
mov
std
pop
jbe
push
in
dec
xchg
ljmp
mov
lret
adc
or
test
pop
add
cmpsl
rol
lds
aaa
test
or
cs
mov
pop
lods
adc
mov
pusha
jecxz
xchg
out
inc
enter
and
std
fstpt
sbb
adc
out
in
add
popa
add
in
inc
fwait
movsb
jno
push
stc
subl
inc
lret
dec
test
pop
push
mov
dec
fistpl
dec
jg
out
jp
dec
add
mov
into
insb
push
fld
mov
les
push
and
dec
sub
inc
mov
pop
and
aad
add
xorb
stos
xor
es
xchg
xchg
mov
inc
add
test
jno
mov
rorl
scas
shlb
and
movsb
stos
jb,pn
dec
or
dec
xor
jne
jne
mov
jo
arpl
enter
cmc
sbb
push
xchg
or
pop
leave
aad
pop
xor
or
subl
dec
hlt
inc
cmc
jl
lret
jns
shl
aaa
or
mov
in
mov
sbb
test
adc
lret
push
out
dec
or
xor
push
mov
push
mov
add
inc
mov
mov
popa
in
lds
jmp
sar
xor
addr16
jne
mov
andb
stos
xchg
jg
ljmp
ja
arpl
push
lock
std
fistpll
cwtl
sbb
dec
and
mov
jne
xor
push
pushf
jl
dec
test
out
popa
loope
mov
mov
jmp
xchg
push
mov
jecxz
movsb
sbb
and
lods
les
ficompl
cli
gs
sti
mov
call
ja
testl
cld
mov
negl
pop
stos
dec
ja
pusha
cmovs
aaa
inc
out
xlat
sahf
and
fsubl
out
cmc
mov
cmp
mov
xchg
lods
dec
pop
sbb
fmulp
xchg
xchg
sub
test
push
mov
ret
xor
add
mov
jg
jmp
sub
mov
mov
addb
dec
loop
clc
jno
push
jg
mov
inc
dec
jns
inc
pop
jbe
ds
mov
icebp
addr16
cli
jnp
lods
inc
push
loopne
sbb
nop
pop
add
mov
test
lods
adcb
xchg
add
pop
sub
je
jne
xchg
inc
movsb
int3
lret
imul
subb
es
push
repz
sub
cmc
repz
js
or
pop
mov
outsl
xor
mov
jo
je
jae
addr16
enter
cld
push
push
mov
sub
pop
fxam
inc
in
sbb
lcall
lods
stc
cmpsl
cmp
xchg
movsb
or
lret
adc
es
dec
xchg
lds
and
into
mov
enter
aaa
or
sub
testl
loope
xchg
daa
stc
push
and
add
add
mov
jne
mov
mov
jb
int
and
arpl
insl
pop
insl
lock
push
into
mov
mov
mov
adc
cwtl
shrl
jl
xorb
shrl
and
sub
sbb
dec
hlt
pop
dec
mov
fstps
and
cld
leave
dec
push
out
dec
sahf
shlb
jl
pop
call
mov
int3
mov
sub
and
insl
loop
mov
adc
cmp
adc
stc
cmp
inc
cmp
pushf
pop
cmpsb
sub
ret
lods
insl
mov
sub
mov
sbb
test
xor
inc
pop
stos
add
jecxz
lahf
xor
sbb
scas
sarb
add
push
in
xchg
adc
cli
or
dec
js
adc
mov
aas
sub
xor
jo
mov
call
xor
xor
test
cmp
dec
iret
push
stc
pop
xorb
cltd
or
fsubrl
xor
filds
lret
aad
add
or
mov
jp
pop
call
xchg
push
inc
insb
testb
xchg
jge
mov
or
adc
push
or
jl
outsl
mov
fcmovnu
sub
sbb
out
fdivl
ficoms
sbb
into
xchg
cmp
in
popa
cld
cmpsb
out
dec
in
jecxz
add
popf
or
testl
imul
rcl
lds
sbb
mov
inc
stos
out
mov
into
loope
xchg
or
add
mulb
push
cmc
push
adc
xchg
out
test
add
fcomps
stos
mov
push
gs
ret
xor
imul
jae
adc
pop
mov
and
pop
or
rcll
push
sub
push
mov
fstpl
push
sarb
push
push
jno
aas
xchg
xlat
dec
mov
lret
xor
out
dec
dec
fistpll
int3
cmpsl
lods
xchg
or
mov
xchg
ljmp
push
icebp
jae
push
int
mov
push
sub
mov
and
aad
jge
imul
jle
jg
or
jg
ficomps
xchg
xchg
rclb
outsl
fistps
leave
fcoms
cli
mov
inc
xor
mov
pop
mov
movsb
sbb
jg
mov
adc
outsb
adc
ret
aas
iret
imul
xor
lret
dec
push
sbb
or
mov
dec
sbbb
pop
adc
daa
in
scas
jns
mov
and
dec
jb
add
ja
mov
test
add
xlat
xor
sub
ljmp
daa
filds
dec
cmc
std
fistl
push
stos
out
cwtl
ret
xchg
jl
mov
call
sbb
xchg
mov
test
xchg
mov
mov
dec
std
cmp
or
orb
subl
arpl
icebp
mov
shlb
push
repz
and
xchg
mov
clc
in
ja
nop
mov
int3
pop
mov
or
das
ljmpw
and
sbb
add
pop
aad
lcall
aaa
lock
js
xor
xor
push
mov
mov
aaa
mov
ss
fldcw
cmpl
push
test
stos
out
xor
idivb
test
mov
icebp
mov
dec
testb
aad
inc
call
jg
hlt
cmp
adc
popw
jne
xchg
punpckldq
pop
xchg
pop
mov
int3
lds
lret
stos
lock
push
mov
fsub
push
faddl
ficompl
leave
loop
cmp
mov
mov
pushf
add
cmp
cli
mov
icebp
imul
movsb
stc
stos
and
sub
and
jp
mov
jl
xchg
in
loop
les
orb
and
inc
movsl
mov
in
sbb
lock
jbe
ss
fwait
popf
jno
mov
xor
pop
jnp
rolb
mov
mov
sub
jae
mov
or
fsubrs
dec
mov
sbb
gs
insl
push
lods
xchg
dec
dec
xor
and
int
ret
js
movsl
and
sbb
jnp
and
cmc
test
lods
inc
xchg
mov
mov
xorl
or
arpl
and
mov
lcall
subl
fisubs
lods
and
je
lds
aad
pop
loope
pop
pop
sub
xor
sahf
iret
xor
add
inc
mov
loopne
cs
inc
jno
sub
cmp
lahf
out
aad
loope
cld
cmpsl
leave
mov
or
into
mov
dec
leave
sbb
lds
jb
jmp
lods
fstl
hlt
fs
sub
lods
sub
dec
nop
xor
adc
jo
xor
pop
adc
in
xchg
loopne
and
add
push
ds
push
push
mov
xchg
into
out
test
fmuls
cmc
shlb
stos
insl
sti
add
mov
mov
adc
pushf
mov
or
mov
dec
xor
rcrb
fistps
jb
out
jbe
shrl
int
push
das
sbb
hlt
fisubrl
pop
loope
pop
mov
adc
fistpl
mov
ljmp
lods
jle
repnz
and
xor
xor
dec
xchg
lret
cmp
mov
xorb
xchg
mov
jge
fistpll
ret
in
mov
stc
lcall
ret
jp
fiadds
and
mov
dec
loop
sub
nop
shufps
push
movl
xchg
das
sbb
xchg
xor
mov
lret
hlt
cltd
ss
jmp
popf
scas
xor
jns
mov
mov
xorl
jb
lock
sbb
mov
lahf
lcall
loop
fistpl
dec
in
sub
out
fisttpll
fistps
sahf
pop
cmpsb
jb
js
jb
push
in
push
sbb
sbb
data16
jnp
inc
bound
xor
sub
adc
jg
lahf
sub
push
xchg
or
add
jp
adc
clc
loope
pop
add
jg
mov
pop
cmpsb
or
fnstsw
sbb
xor
or
lea
mov
inc
push
mov
mov
push
adc
xchg
icebp
push
ja
imul
fs
cmpsb
lods
cwtl
fnstenv
addr16
sub
push
clc
fisubs
test
jl
pop
outsl
sub
fldln2
je
and
movsb
xchg
pop
lret
xchg
outsb
inc
call
jecxz
rcll
pop
mov
adc
repnz
call
push
rorb
push
and
mov
imul
fidivl
add
or
jmp
pop
lahf
sbb
push
pusha
in
in
aad
mov
mov
and
mov
or
pusha
push
mov
jmp
icebp
and
cltd
ret
sub
sbb
stos
mov
xchg
testb
out
or
mov
in
inc
fidivl
dec
sbb
dec
int
clc
mov
mov
xor
aad
adc
fcompl
push
test
jl
bound
mov
rcrl
jno
mov
inc
mov
pop
jbe
mov
mov
mov
pop
sub
out
or
push
mov
push
push
xlat
popf
sub
leave
pop
mov
sub
cmp
jo
cli
psrlw
sbb
mov
xchg
inc
test
xor
mov
pop
adc
inc
mov
mov
add
dec
push
and
popa
stos
cmp
xchg
adc
pop
mov
incl
andl
cmp
push
adc
and
lea
fimull
cwtl
jmp
sub
imul
dec
and
jnp
inc
inc
lcall
aas
iret
pop
fisubs
lahf
test
jge
pop
or
push
cld
push
mov
cmpb
ficomps
jb
insb
outsb
dec
cmpsl
inc
sbb
jmp
lods
or
movsb
cmpsl
add
sbb
sbb
out
daa
dec
mov
mov
orb
rcrl
mov
or
mov
loopne
sbb
push
lahf
subb
movsb
jecxz
int3
shrl
dec
insb
test
sbb
outsl
inc
pop
js
and
loop
sahf
cmp
mov
fs
mov
cmp
dec
jg
mov
mov
out
cmpsl
pusha
or
js
cli
xchg
and
push
mov
testb
jae
add
pop
mov
lods
mov
mulb
mov
sub
mov
popa
hlt
jbe
xor
jns
pushf
out
sub
xlat
pop
adc
inc
adc
repnz
js
pop
aaa
mov
cmpsl
jmp
fnstsw
mov
pop
dec
pusha
add
rcll
testl
jge
or
rorb
rcrl
cmp
imul
inc
add
and
stos
or
xor
cmp
adc
sub
xchg
mov
int3
mov
adc
cltd
pop
jmp
repnz
bound
and
aaa
mov
pop
mov
loope
push
jmp
mov
repz
mov
stc
push
adc
mov
arpl
movsb
xchg
data16
lea
mov
test
das
push
jbe
int3
inc
and
fcmovu
cli
push
xchg
dec
lret
lds
push
inc
push
pushf
stos
xchg
push
jp
inc
xor
out
mov
in
ss
cmp
sub
popa
js
call
pop
mov
inc
lcall
push
test
xor
lcall
cmpsl
cmp
jp
and
int
rcrl
sub
sbb
jno
push
pusha
push
test
cli
outsb
into
gs
jbe
jg
frndint
or
scas
out
mov
ds
cmp
lock
gs
icebp
inc
and
sub
das
push
mov
push
mov
push
out
loope
or
enter
push
pop
in
movsb
mov
mov
or
dec
xor
cmp
sbb
xchg
loop
hlt
mov
xchg
and
pushl
ja
xchg
in
jle
xchg
test
lea
es
cmpsl
sarb
test
pop
dec
sbb
outsl
and
cs
fidivrs
int
repnz
cmp
mov
ret
xchg
and
es
repz
imul
mov
stc
adc
popa
addr16
mulps
mov
repnz
dec
rcll
pushl
das
popa
jp
inc
jp
mov
ret
mov
mov
cld
mov
icebp
scas
arpl
test
notb
pusha
icebp
mov
inc
mov
adc
add
negl
sarl
mov
mov
jo
xor
cs
sub
sbb
and
mov
scas
imul
dec
andb
sarb
push
jp
mov
xchg
movsb
ret
shrl
sahf
xchg
lcall
fmull
mov
dec
ficoms
je
push
push
movq
pusha
add
lret
lods
inc
shlb
bound
sub
and
out
xchg
mov
mov
pop
or
inc
mov
iret
ljmp
xor
or
or
cmp
gs
or
push
dec
sub
sbb
mov
push
pusha
imul
mov
test
sti
pop
jg
sub
push
push
add
add
loope
pop
jbe
int3
push
sub
gs
cmp
dec
xchg
pushf
mov
lock
addr16
push
or
add
mov
xchg
xor
push
or
fists
inc
sub
jo
inc
shlb
dec
orl
int
ja
mov
add
add
les
adc
cwtl
roll
push
popa
lret
mov
enter
adc
adc
push
scas
ds
ret
sbb
das
pusha
scas
scas
push
out
dec
and
test
outsl
pop
pop
mov
add
inc
aas
test
push
repnz
and
pop
jmp
push
xor
lock
mov
imul
insl
andl
insb
jle
add
and
lret
xor
icebp
in
xlat
mov
xor
std
das
das
dec
pop
push
push
or
nop
imul
mov
mov
call
sbb
sub
cld
out
mov
sbb
shll
xorl
mov
mov
mov
mov
pop
xchg
pop
mov
or
jno
sub
push
mov
cmp
push
fwait
andl
and
xor
rorb
xchg
cmp
xchg
fidivs
insl
sbb
jno
or
xchg
mov
hlt
adc
popf
rcrb
lods
add
subl
dec
xchg
pop
filds
stos
ss
dec
repnz
imul
loop
mov
mov
imulb
cmp
xchg
cmpb
cmpsl
push
int
fisubrs
aas
inc
insl
pop
dec
sub
stc
cmp
lret
or
aad
sbb
mov
dec
pop
push
cmp
mov
movsb
addl
daa
xchg
jae
int3
pop
hlt
scas
stc
and
mov
lods
adc
ljmp
add
jae
je
fisubrl
out
push
push
adc
add
mov
jo
mov
pop
fwait
xor
xchg
jl
nop
add
xor
test
pop
mov
mov
in
lods
shll
repz
out
and
and
std
mov
pop
dec
fs
inc
out
xor
pop
mov
incl
sbb
out
xchg
outsb
scas
push
sbb
jge
adc
andl
xor
mov
movsb
stos
pop
jne
in
loop
and
test
inc
rorl
mov
sbb
sti
mov
push
imul
outsl
test
in
cmp
pop
jecxz
xchg
test
and
dec
andb
mov
ret
inc
outsl
test
jno
or
mov
xor
roll
and
lds
insb
fidivrs
mov
outsb
jo
push
pop
repnz
add
and
js
sbb
rorb
or
mov
imul
mov
test
cs
push
dec
test
lcall
pop
mov
fistps
xchg
out
call
vpsrad
jno
rclb
mov
sub
push
jl
lret
jecxz
add
ds
xor
lcall
fidivl
or
mov
sbb
mov
loopne
lcall
les
mov
cmp
or
and
or
ret
push
xchg
lea
shrl
pushf
mov
xor
adc
xchg
push
lea
xchg
imulb
and
ret
sbb
pop
dec
rcrb
xchg
mov
push
outsb
xor
scas
sahf
add
lcall
sahf
mov
pop
test
add
mov
and
adc
je
ss
or
out
popf
push
add
cmp
mov
sbb
in
push
rolb
rcll
mov
adc
push
int3
outsl
aam
jp
test
fsts
cmpb
nop
inc
cmp
fcomp
addb
jne
xor
pop
outsb
lock
mov
mov
mov
fs
ja
ljmp
fmuls
les
jl
mov
movsl
add
cmp
mov
cmp
add
jns
cmp
outsb
fisubl
push
pop
push
in
movsb
mov
sar
in
jmp
lea
mov
loopne
sti
xchg
lds
jns
ja
sub
pop
cmpb
insl
dec
movsb
mov
dec
mov
gs
dec
inc
xchg
sub
cmc
gs
sub
add
adc
xchg
jo
pop
mov
xchg
cmp
inc
xor
loope
pop
imul
mov
mov
imul
mov
lock
cmc
or
in
insl
push
pop
and
pop
push
lods
popa
shlb
test
lock
mov
test
pushf
inc
repz
addr16
pushf
outsb
mov
mov
in
xchg
sub
pop
mov
sub
adcl
mov
xor
test
fwait
add
add
arpl
or
clc
push
lds
sbb
rcr
fwait
mov
jecxz
mov
mov
bound
dec
xor
adc
pop
xchg
test
and
lahf
mov
icebp
dec
sti
sub
fiaddl
xchg
test
cmp
loope
mov
or
les
je
daa
inc
std
adc
sbb
mov
mov
mov
mov
outsl
repnz
push
cmpsb
mov
ret
notl
mov
and
aaa
arpl
ja
test
sbb
dec
jnp
push
imul
mov
cltd
stos
jbe
mov
loope
jns
mov
pop
movsl
cmp
hlt
cmc
fwait
cmp
pushf
imul
adc
rep
dec
popa
sub
xchg
sbb
test
ss
pop
andl
rclb
in
aaa
out
xchg
scas
jle
push
jle
and
rcll
add
mov
mov
insb
pop
push
movsl
or
xchg
lock
fisubs
cmp
das
out
mov
out
adc
bound
inc
mov
shll
js
or
push
or
popa
cmpsl
loop
repz
dec
inc
loop
imul
mov
ret
lock
bound
adc
fisttpll
push
jbe
and
stos
sti
ss
loope
dec
ja
mov
jp
adc
repz
xlat
std
movsb
and
fstenv
out
fisttps
test
or
jbe
or
scas
mov
mov
mov
sub
cmp
cmp
mov
jge
xchg
and
test
lods
push
inc
adc
and
je
into
dec
xchg
sbb
push
test
mov
jecxz
jge
aas
mov
imul
inc
iret
dec
adc
jae
xchg
ret
add
int3
aad
lret
icebp
mov
xchg
pop
pop
pusha
lcall
int
xchg
ss
push
les
repz
out
mov
pop
loopne
iret
bound
lret
xor
adc
sub
xchg
outsl
xor
xlat
mov
je
jne
xor
fldt
std
addr16
shl
mov
enter
cli
test
nop
mov
iret
out
and
pop
ss
dec
hlt
imul
or
mov
sub
push
clc
repz
mov
in
ficoml
movsl
es
pop
cmpsl
bound
repnz
or
dec
xchg
push
mov
pop
hlt
mov
adc
decb
jno
cmc
gs
mov
ss
fistpll
in
or
cmc
jmp
xchg
je
cmp
xor
jne
ja
ret
ficompl
add
pop
inc
inc
mov
adc
shrl
and
fdivrs
mov
push
mov
sbb
pop
jno
in
cmc
dec
data16
ret
enter
jge
push
jns
rcrl
xor
and
mov
nop
mov
jp
mov
jl
mov
push
out
mov
mov
mov
jne
test
rclb
jecxz
popa
xchg
je
out
mov
xor
pop
mov
fistpll
ret
jmp
inc
or
and
dec
imul
dec
cmp
sbb
adc
iret
cmpsl
xor
xchg
inc
sbb
adc
pop
ljmp
sbb
pop
mov
fdivrs
mov
insl
mov
int3
mov
pop
mov
inc
jns
mov
inc
mov
add
push
dec
push
cmp
and
roll
shlb
inc
arpl
sbb
fcmovnb
iret
pop
mov
sub
jo
orl
and
rcll
sarl
mov
int3
cmpsb
aas
gs
aaa
xchg
mov
enter
iret
dec
push
xchg
ds
mov
orb
add
push
loop
add
mov
mov
ror
bound
xlat
loopne
lds
ud2
add
jbe
fidivl
pop
sbb
sarb
je
es
sub
adc
das
aam
std
sbb
nop
iret
scas
jnp
sub
mov
ja
and
scas
push
out
test
mov
push
xchg
xor
fstps
fdivrs
adcl
or
pop
adc
jge
cld
out
pop
adc
fcomps
pop
fwait
jne
pop
cwtl
scas
lea
stos
cmp
or
jge
add
aaa
loopne
sub
arpl
int
mov
call
mull
nop
mov
icebp
jbe
cld
cli
xor
sbb
ret
insl
shll
pop
shlb
mov
xor
jae
lret
pop
or
sbb
pusha
sahf
jle
mov
mov
xchg
push
orl
push
into
in
mov
mov
or
jae
fdiv
mov
jnp
pop
cmp
enter
test
loopne
insb
inc
addb
xchg
ja
fsub
add
adc
mov
mov
repz
pop
add
and
add
orl
fnsave
inc
stos
stos
repnz
cmpsl
mov
mull
clc
shlb
xchg
aaa
or
shrl
sti
lahf
pop
imul
mull
fstl
sub
lods
xchg
dec
loop
repz
test
push
cmp
popa
out
addb
sahf
outsb
cmp
adc
nop
dec
sub
gs
nop
sub
call
iret
out
pop
add
push
pop
pop
jg
jecxz
cmpsl
repnz
shlb
push
mov
add
jns
int3
pop
pop
pop
lds
mov
int3
negl
std
nop
cltd
inc
adc
xchg
cmp
daa
movsl
movsb
in
test
mov
je
mov
cmp
mov
aaa
mov
test
push
aad
aad
out
pop
push
or
push
fsubrp
fistps
not
fldcw
xor
xlat
test
cmp
cmp
lret
mov
cmp
stc
loope
mov
repnz
fwait
subl
jne
fsubs
fisubrs
push
xor
push
mov
outsb
cmp
pop
in
push
mov
add
jle
out
rcr
call
test
xor
cmp
es
mov
testl
movsb
sbb
incl
mov
fiaddl
inc
sahf
cli
popa
insb
pop
into
xchg
mov
popa
or
outsb
fsubp
and
push
xor
andl
xchg
test
cmp
mov
dec
jle
mov
jnp
repnz
mov
xchg
mov
test
push
mov
mov
and
lret
mov
mov
cmpb
inc
lret
stc
dec
jge
stos
jne
or
inc
jne
nop
cltd
cld
mov
loopne
add
inc
pop
fyl2x
jmp
cld
cli
pop
fsubs
cltd
aaa
adc
adc
xor
jmp
lahf
mov
mov
jns
and
ss
push
lods
out
mov
dec
push
inc
js
push
andb
rcrl
add
repnz
sbb
mov
adc
insl
int
sarb
xchg
fcompl
std
test
sub
mov
ss
test
add
pop
shrl
loope
or
xor
shlb
sub
jle
and
inc
add
push
sub
dec
lahf
orl
in
jbe
mov
je
dec
inc
mov
pop
push
jne
hlt
cmp
lret
mov
mov
aas
cmc
les
ja
jbe
fidivrs
ds
add
jo
dec
gs
shr
iret
into
jg
test
mov
popa
pop
dec
jmp
addr16
sbb
push
jnp
pop
es
enter
pop
lret
sbb
jle
imul
dec
cmpsl
mov
mov
xchg
adc
out
lods
mov
lcall
rorb
xchg
scas
push
inc
in
cmpsl
cmpsl
push
daa
jbe
push
adcl
sbb
les
dec
push
add
mov
cmp
mov
jge
xor
ficoml
xor
bound
mov
cmp
xchg
pop
cld
repz
int3
fidivrl
int
sub
sbb
andl
shlb
std
stos
nop
and
inc
pop
push
lods
or
lods
cltd
jecxz
sub
cmpsb
and
xchg
out
push
inc
pop
dec
loope
es
aaa
nop
rcll
aaa
sub
cmpsb
jmp
push
jg
lret
popf
add
imul
mov
xchg
adc
pop
cmp
lret
mov
jecxz
mov
hlt
cmp
je
mov
ljmp
fildll
push
fnstsw
push
sbb
sahf
jbe
mov
jno
in
jns
inc
jg
andl
mov
test
into
pop
rolb
mov
lea
and
insb
shll
jae
dec
mov
jl
enter
int
cltd
bound
std
inc
mov
xchg
shr
pop
mov
sbb
pop
sub
mov
and
or
mov
popf
mov
lock
mov
aad
shrb
loop
shrl
jp
add
test
or
mov
shll
cmp
push
pop
jb
pushw
orl
leave
sbb
in
jmp
xor
pusha
xlat
pop
jg
gs
mov
jmp
sub
int3
mov
frstor
and
cmpsb
push
test
jle
inc
sbb
mov
fisubrs
les
imul
mov
mov
sbb
repnz
inc
sti
ds
repz
mov
push
fnstcw
insb
movsl
lods
sub
adc
inc
inc
jne
out
data16
add
shr
out
jmp
cmp
cld
cmp
pop
dec
cli
mov
xchg
mov
test
add
pop
xor
addb
aad
dec
or
ja
imul
jo
inc
push
stos
dec
stos
sti
lock
push
ds
xchg
icebp
cmp
push
mov
inc
and
add
mov
pushf
pusha
stos
les
and
or
mov
mov
inc
clc
sti
and
addl
scas
or
push
xlat
xchg
jno
xchg
jb
jecxz
jl
lahf
push
xor
jmp
out
adc
push
adc
or
aam
xchg
movb
ret
fsts
mov
out
subb
pop
neg
sub
testb
stos
or
jg
dec
add
push
add
std
ds
jb
cmp
and
add
std
or
adc
fstp
inc
test
pop
mov
cwtl
jb
jne
cmpsb
call
push
nop
out
push
inc
xchg
or
fsubs
add
xor
fldenv
push
xchg
jb
out
add
inc
jp
cmp
mov
aad
mov
outsl
xchg
lds
test
jle
fmull
movsb
add
aaa
xchg
push
push
mov
push
jmp
scas
ret
xchg
repnz
mov
or
movsb
pop
xchg
inc
xchg
test
loopne
ret
add
sub
popf
cmpsl
add
sub
pushf
push
push
repz
ds
mov
xor
xlat
ja
fimuls
inc
jnp
add
push
mov
pop
sti
cmc
and
jnp
add
xchg
dec
mov
xchg
lcall
insl
mulb
xchg
mov
mov
mov
repz
pop
jae
cmp
aad
int3
mov
push
popa
xor
pusha
cltd
xchg
popa
insb
ljmp
fistpl
into
sahf
mov
nop
inc
xchg
out
lods
xor
cmp
sti
fnstenv
aam
lcall
add
mov
sti
je
pop
jae
sbb
popf
lds
sub
fmuls
rorb
gs
xchg
popf
mov
nop
mov
dec
jg
sub
cmp
test
adcb
movsl
test
and
mov
lcall
insl
iret
mov
mov
and
mov
xchg
into
lods
cmc
in
in
mov
xchg
imul
test
lcall
xor
push
int
mov
mov
std
sahf
cmpsl
dec
cmpl
push
sub
scas
call
test
loope
das
lock
or
out
mov
mov
pop
adc
ret
aad
js
jle
orl
out
out
test
adc
pop
sbb
dec
dec
add
sarb
hlt
lcall
sbb
xor
rclb
dec
cltd
mov
in
sbb
xor
mov
sbb
mov
dec
fwait
daa
outsb
cli
bound
idiv
xor
test
jmp
or
lcall
xchg
cli
sub
into
jo
leave
rorb
mov
inc
out
inc
cmc
std
xor
xchg
and
imul
inc
and
xorb
bound
pop
inc
pushf
int3
xchg
cmp
xchg
aam
fwait
jge
lahf
imull
loop
leave
and
lret
push
lea
into
push
add
jae
add
mov
fmull
aad
fldenv
and
mov
or
imul
cmp
lds
test
cwtl
sahf
sahf
dec
imul
loope
cmp
jl
xor
pop
pop
out
fdiv
subb
push
mov
mov
inc
dec
push
sarb
dec
cmpl
pop
sbb
or
mov
jns
mov
fstpl
sub
cltd
sbb
mov
xor
lret
icebp
mov
icebp
xor
cmp
out
jae
stos
test
add
push
in
rcrb
adc
xor
xchg
mov
aas
xlat
dec
xor
aaa
pop
push
sub
daa
stos
test
loopne
scas
outsl
push
add
push
subl
iret
fnsave
sub
mov
xchg
mov
push
add
stos
mov
mov
mov
into
cmpsb
shl
leave
mov
dec
mov
inc
es
dec
jecxz
cs
std
push
adc
jbe
lods
push
fdivrl
into
rcr
add
outsl
ss
mov
movsl
inc
ja
jge
in
je
inc
scas
imul
mov
xor
int3
hlt
xchg
les
scas
xchg
popa
test
shr
andl
xchg
mov
xlat
cld
rol
sbb
jmp
lock
in
lcall
das
lret
in
subl
test
mov
ljmp
lret
pop
test
jmp
fsubrs
xor
out
fnstcw
add
pusha
pusha
add
mov
and
xor
movsl
test
dec
cltd
mov
xchg
sbb
add
xchg
arpl
mov
dec
pop
or
outsl
mov
frstor
push
ret
mov
cmp
les
pop
mov
or
jne
testl
int
ds
adc
dec
mov
cmp
mov
and
in
call
add
adcl
ret
fnstsw
aad
jno
sub
jns
out
mov
int
xorl
push
pop
es
cmp
das
les
lahf
inc
mov
inc
adc
jno
add
xor
push
jb
pushf
imul
jp
pop
adc
rol
xor
lds
testl
cmpxchg
push
xchg
in
or
les
mov
cs
jmp
mov
aaa
mov
icebp
or
popf
mov
inc
cmp
sar
adc
push
aad
pop
mov
cmp
pop
pop
mov
sub
ret
mov
sub
pop
das
popa
mov
imull
or
mov
inc
jecxz
or
cs
jmp
inc
mov
rcll
mov
jo
fwait
xchg
mov
pop
shlb
movsl
cmp
pop
jbe
cmpb
add
pusha
xchg
push
test
mov
data16
adcl
repz
dec
jle
lea
jp
lret
xchg
and
inc
mov
push
rcll
lods
cmpsl
mov
mov
sbb
fnstenv
sbb
pop
jg
push
mov
gs
outsb
stos
mov
cmp
push
fadds
lcall
sub
push
pop
sti
mov
adc
jl
jae
or
sbb
stos
mov
mov
pushl
mov
adc
sbb
inc
lds
mov
lock
jle
jg
clc
int3
or
pop
lds
jbe
in
aam
jb
gs
or
cld
std
or
dec
insl
push
imul
int
and
orl
lcall
or
add
adc
push
movsb
dec
dec
mov
inc
popf
in
cmp
mov
mov
fbstp
filds
push
arpl
outsb
popa
sarl
andl
sbb
rcll
push
imul
jb
push
inc
aam
js
into
sub
sbb
aam
add
ret
jecxz
int3
jbe
push
pop
test
mov
mov
push
loop
xchg
flds
xor
loope
sbb
add
repnz
outsl
lcall
adc
xchg
xchg
addr16
pop
das
mov
xchg
sub
sbb
fadds
inc
or
mov
pop
mov
xor
cmp
push
push
lea
sub
xor
adc
inc
push
inc
sub
pop
in
dec
test
or
repz
out
jmp
or
lods
negl
sbb
mov
insb
rolb
push
jg
push
into
add
pop
jo
and
lret
mov
sub
xchg
adc
stc
loope
add
inc
scas
pusha
xchg
mov
adc
jbe
push
cli
sbbb
jmp
fwait
dec
arpl
outsl
nop
xor
ss
sub
xor
add
and
mov
je
or
cmp
jmp
or
cmp
out
lea
loopne
push
lret
roll
jecxz
sub
stos
xchg
test
xchg
or
stos
test
cmp
mov
push
jns
adc
cwtl
jns
xchg
rorb
sub
or
cmp
stc
fcomp
addr16
add
and
and
cmp
insl
or
xchg
inc
fdiv
outsl
outsl
lea
jo
or
mov
das
cld
push
mov
mov
outsl
push
ret
cmp
lds
jl
xchg
adc
push
hlt
dec
xor
jb
les
mov
fwait
lret
xor
lret
aam
ficompl
sbb
outsb
xorb
stc
inc
ret
addb
mov
pop
jg
cld
xor
test
mov
sub
lcall
push
lret
pop
bound
cmp
stc
cmpsb
jle
out
mov
fdivrs
cli
pop
clc
gs
leave
pusha
pop
pop
add
jbe
cltd
out
incl
push
mov
das
addr16
loopne
arpl
aam
imul
push
ret
mov
adc
add
push
jl
xor
xor
xchg
inc
dec
sub
inc
jg
xchg
push
sub
subb
cmpsb
mov
imul
or
jno
sbb
ret
data16
push
inc
pop
add
push
xor
dec
fwait
nop
ret
push
inc
lock
jne
jno
xor
xchg
int3
dec
dec
test
xchg
xorb
mov
jp
lcall
xchg
scas
icebp
mov
push
or
sarb
repnz
daa
imul
jae
int3
imul
pushf
mov
inc
and
popa
shlb
pop
add
and
xor
clc
sub
inc
fiaddl
pop
sahf
sbb
mov
push
stos
sub
fbld
add
dec
bound
out
and
xor
inc
popf
add
call
jno
mov
das
outsb
fstl
mov
mov
aas
insb
fistpl
orb
aaa
fwait
adc
mov
adc
aas
ljmp
sub
adc
cmp
mov
dec
pop
mov
int
inc
pop
sub
add
dec
inc
popa
int3
cli
rcll
mov
clc
repz
dec
jmp
dec
push
sub
orl
sbb
movsl
dec
test
push
fstpt
out
leave
icebp
mov
fcmovnb
jle
pop
jmp
enter
xor
add
mov
into
mov
rorb
mov
neg
insl
jnp
ja
xchg
popa
mulb
sub
sbb
mov
or
inc
mov
cmp
into
int
fldl
xchg
dec
aad
shrl
xchg
jmp
and
jnp
lds
jmp
lahf
mov
mov
mov
push
dec
int3
push
outsl
rorb
movsl
popf
jo
push
push
shl
push
lock
ret
stc
insl
mov
add
js
loop
xor
dec
cli
mov
adc
das
add
push
sub
pop
mov
insl
call
test
jmp
xor
mov
icebp
or
mov
out
mov
fdivr
repz
and
ss
xchg
add
jg
dec
or
inc
cmp
lods
in
and
jge
or
sbbl
inc
mov
mov
lret
sub
adc
mov
aad
test
std
push
and
in
dec
shlb
in
push
ror
mov
test
adc
aam
aam
cld
xor
cltd
insb
jg
sbb
test
idivb
add
xor
adc
push
jno
add
das
clc
outsl
inc
int
sub
cmpsl
gs
iret
mov
push
mov
enter
sbb
addr16
jno
or
push
inc
loope
cwtl
cmpsl
loop
dec
stos
xchg
ret
adc
cmp
mov
adc
rorb
mulb
push
addb
cmp
ds
jmp
fucomi
cs
daa
push
bnd
mov
dec
inc
pop
push
or
in
shr
pop
jge
outsl
mov
mov
sub
push
jle
cltd
and
test
xchg
or
pop
outsl
pop
sbb
adc
jmp
in
imul
fists
or
and
pop
push
lret
mov
mov
leave
cmp
dec
or
inc
scas
sbb
jmp
xor
andb
fucomip
andl
pop
fistpl
jns
xor
sbb
sub
cmp
mov
xor
or
push
xor
sub
iret
add
mov
xor
adc
cmp
rclw
jp
xor
lahf
xor
dec
cwtl
xchg
aam
mov
xchg
rcrl
push
lret
jle
gs
lret
ror
nop
mov
mov
mov
ja
add
insb
inc
xor
daa
sarb
mov
jae
mov
out
jbe
aaa
int3
outsl
xor
adc
cwtl
dec
jmp
in
cwtl
mov
lods
in
mov
dec
cmp
orl
dec
adc
push
cmp
enter
outsb
data16
ret
repz
into
test
pop
jns
push
push
insb
xorl
test
push
ror
jle
add
add
adc
outsl
cmp
cmp
add
cmp
and
pop
mov
sbb
ja
movsl
out
push
call
sub
stos
jno
xchg
scas
nop
sub
jmp
loop
ret
in
push
das
loope
inc
inc
out
das
cmc
adc
push
xlat
mov
sub
push
sbb
jg
sar
loop
faddl
or
inc
or
push
sub
pop
div
mov
sbb
sub
mov
sbb
inc
adc
add
sarb
loope
adc
sbb
mov
addr16
xchg
and
and
cld
and
lret
nop
rorl
dec
out
mov
xchg
int3
xchg
xorb
jno
push
fildll
jns
repnz
loop
imul
imul
add
and
popf
mul
push
mov
addr16
std
sbb
inc
ret
xor
cmc
inc
flds
pop
sub
lahf
xor
jb
inc
mov
pusha
mulb
push
mul
mov
mov
sbb
test
sub
inc
cmc
clc
ljmp
push
push
stc
inc
cmp
mov
shlb
jb
pop
cmpb
nop
mov
filds
xor
repz
cvtdq2ps
data16
clc
jnp
xor
push
ss
fildl
call
add
cmp
inc
std
jne
mov
daa
insb
xchg
bound
or
jae
adc
outsl
fsubs
fstl
in
mov
push
adc
decb
in
out
cmp
loope
imul
ret
pop
xor
jae
adc
aam
movsb
mul
scas
cmpsl
ds
or
and
xchg
cmp
ret
push
jbe
lahf
mov
sbb
loop
mov
pushf
mov
popf
daa
push
addl
mov
rorb
inc
xor
ret
scas
lret
enter
pop
adc
adc
int3
jp
dec
imul
pushf
dec
mov
mov
out
xchg
mov
out
notb
xor
push
push
daa
pop
mov
push
jecxz
aas
xchg
cmc
jno
insl
shrl
hlt
push
and
xor
add
mov
popf
lea
ds
leave
adc
fnstsw
sbb
das
adc
sub
stos
icebp
dec
mov
sub
das
xchg
xor
push
or
sub
inc
nop
popa
adc
lret
ljmp
pop
sub
divps
lea
sub
scas
mov
inc
mov
cltd
outsl
jns
les
pop
push
pop
dec
or
adc
fbstp
xchg
out
bound
push
mov
in
not
fstpt
fdivp
jecxz
js
and
std
jne
test
cs
mov
mov
dec
outsb
insb
pop
int
scas
jo
jo
dec
mov
daa
sub
pop
add
adcb
sub
mov
xor
xchg
mov
push
or
mov
aas
mov
loopne
adc
jge
in
loopne
repz
shlb
hlt
imul
and
add
pop
mov
icebp
gs
push
or
fwait
sub
fdivrl
mov
and
movb
push
cmp
and
xor
dec
push
pusha
fstpt
xchg
mov
flds
or
inc
push
mov
data16
jmp
flds
dec
pop
stos
push
inc
cmpsb
sbb
push
cmova
les
aaa
lods
daa
stos
arpl
xor
or
pop
dec
sbb
cmc
lock
mov
jne
sbb
fimull
sahf
dec
jo
jmp
lock
lds
ficompl
test
pop
xchg
cmpsl
iret
enter
inc
stos
in
xchg
push
mov
jmp
xorps
inc
jmp
andl
in
add
mov
je
mov
push
push
idivl
push
adc
rclb
pushf
xchg
lahf
outsl
or
fbstp
jg
pop
mov
fdiv
sbb
add
aas
adc
insl
pop
cld
icebp
mov
inc
int3
movsb
gs
scas
mov
roll
and
inc
xchg
decl
nop
rcrl
loop
pop
mov
lahf
and
sub
adc
ret
mov
cmpsb
test
jnp
cmpsl
int3
hlt
loopne
push
lahf
cmp
scas
mov
rcrl
imul
xor
dec
pop
addr16
fcompl
xlat
out
cld
cmp
int3
arpl
mov
mov
mov
pop
or
out
cld
add
insb
jmp
mov
mov
cwtl
mov
inc
daa
and
mov
testl
push
cli
mov
mov
inc
sub
lds
lret
out
jno
nop
mov
outsl
cmp
add
xlat
leave
shl
outsb
mov
or
sub
fs
mov
jl
xchg
or
mov
or
inc
or
pop
adc
iret
add
decb
sbb
push
js
cwtl
adc
out
push
lret
xchg
mov
mov
in
rcrb
bound
pop
or
sbb
and
cli
sbbb
lret
gs
cmp
and
mov
mov
fucomi
push
icebp
dec
and
jle
imul
dec
jl
shr
rorl
lahf
lret
fcoml
ljmp
add
push
push
mov
shrl
and
pop
sbb
subl
scas
in
xchg
rolb
xor
mov
cmp
add
ficoml
insl
and
roll
mov
pop
or
dec
stc
xor
and
out
sub
xchg
test
outsl
xor
mov
imul
sub
popf
outsl
out
adc
push
push
das
xchg
scas
ljmp
leave
mov
addb
cmp
pop
shr
adc
inc
adc
inc
ja
icebp
sbb
hlt
jmp
cmp
and
or
fldt
dec
stos
jns
push
inc
pop
mov
jnp
pop
scas
pop
out
jmp
xor
or
lcall
mov
push
push
adcl
leave
out
jp
xchg
mov
mov
enter
xlat
push
fs
cmp
pop
add
push
inc
sbb
inc
xor
outsb
add
and
hlt
mov
xchg
in
gs
sti
lea
push
fisubs
insl
pop
xor
cld
in
mov
jle
xor
ret
add
adc
mov
pop
outsb
call
dec
fisubs
sbb
xchg
insl
push
les
dec
scas
jp
xchg
enter
nop
movsb
add
pop
xor
not
sub
stos
inc
xor
and
sub
inc
ljmp
mov
movsl
mov
repz
and
lods
and
and
ds
cs
inc
scas
sti
fwait
in
into
adc
jae
outsl
pop
dec
cmc
inc
addr16
mov
add
inc
jae
out
outsl
pop
jae
jbe
dec
inc
shll
shl
and
push
add
push
rep
dec
out
xchg
xor
aam
in
jl
into
xlat
inc
mov
fisttpll
or
or
rolb
push
rorl
stc
xor
cwtl
jg
call
dec
fucomp
mov
cld
pusha
and
mov
adc
movsl
mov
mov
mov
insl
ss
rcrl
jb
cmp
mov
xor
xor
jns
adc
adc
cmp
arpl
jmp
cmp
lods
je
push
push
xor
xchg
stos
mov
leave
repz
lret
fsubl
cmc
fcmovne
insl
mov
imul
push
faddl
pusha
int3
or
pusha
jl
xlat
lcall
dec
jb
cmp
loop
insl
adc
mov
in
sbb
adc
add
fnstenv
push
cmpsl
ss
dec
pop
bound
sub
sub
or
xchg
pop
inc
leave
imul
sub
inc
test
inc
sbb
aas
jno
jae
orb
dec
nop
divl
push
sbb
loope
into
repnz
mov
push
int
pop
lods
push
mov
xchg
std
xor
movsb
and
in
xchg
adc
stos
in
jl
xor
jge
add
and
roll
sbb
cwtl
cmp
mov
arpl
inc
popf
movsb
lret
xchg
xor
lods
imul
pop
cmpsl
add
mov
add
push
call
lcall
das
jg
out
push
fsubl
adc
mov
jl
imul
ljmp
cmp
test
push
lds
jmp
imul
and
in
dec
pop
xchg
sub
mov
cmp
and
xchg
cmpl
cmpl
jb
les
push
inc
pop
mov
jbe
out
mov
daa
cmp
push
fisubs
sbb
mov
sbb
push
repz
xchg
mov
dec
ja
scas
jp
inc
push
sub
cwtl
or
push
hlt
or
adc
inc
bound
outsb
ljmp
sub
add
add
push
pushf
into
into
lods
fxch
sub
dec
mov
enter
nop
push
push
xor
dec
arpl
pop
hlt
inc
xorb
xchg
cld
test
mov
xchg
in
sub
int
rclb
outsl
pop
jmp
push
push
xor
cltd
xchg
movsb
incb
leave
push
iret
pop
lea
ljmp
out
xchg
or
lret
or
mov
push
fwait
call
imul
dec
popf
es
jg
xchg
xchg
sbb
insb
sub
arpl
arpl
mov
mov
loopne
cmp
mov
add
fs
push
lds
out
fsubs
sbb
gs
xor
inc
outsb
mov
mov
push
mov
outsl
fs
fisubs
outsl
loopne
inc
pop
cltd
test
mov
sbb
inc
mov
inc
scas
lcall
mov
shll
dec
push
and
dec
sub
push
ja
lea
inc
je
xor
adc
cmpb
cmp
sbb
sub
mov
cmp
lahf
lahf
mov
inc
mov
in
add
mov
aam
gs
add
sbb
outsl
js
in
sbb
imul
adc
imul
stos
adc
das
sbb
dec
pop
mov
inc
push
mov
popf
mov
jmp
push
xor
cmp
adc
inc
pop
inc
sbb
das
jmp
js
cs
ds
stos
pop
in
xorb
cld
sbb
mov
mov
cli
cmpsb
out
testb
loop
mov
xor
inc
push
loop
ds
mov
nop
stc
mov
sbb
jmp
mov
xlat
push
out
pop
aaa
pop
sub
xchg
cltd
loop
sbb
xchg
ret
push
add
and
imul
cmpsl
xorl
xchg
dec
jb
and
mov
shr
mov
sub
add
mov
out
mov
mov
enter
ret
lret
dec
xchg
jp
addb
movsl
mov
lods
scas
test
inc
out
loope
jmp
daa
in
pop
sub
pushf
stos
inc
dec
lock
mov
shrl
or
adc
sbb
sbb
xchg
inc
mov
xchg
cmp
test
inc
jg
ja
repnz
outsb
test
xchg
popf
test
cld
shr
mov
ja
adc
push
stos
pop
int
push
xchg
insl
jmp
mov
ret
xchg
cmp
push
xor
sub
push
xchg
sahf
mov
std
sahf
enter
bound
mov
stc
mov
cs
jnp
punpcklwd
outsl
movsb
insl
aas
add
test
aam
fstpl
push
mov
insb
negl
sbb
mov
leave
and
movsl
push
inc
into
cmpsl
cmpsb
mov
and
lock
arpl
fisubrl
pusha
stos
push
pop
pop
cmc
test
lods
mov
adc
mov
repnz
nop
mov
push
jne
inc
rep
insb
inc
pop
sarl
repz
dec
sub
push
movsb
fistpll
or
pop
mov
adc
sub
pop
adc
ss
push
repnz
cmp
and
push
ljmp
or
scas
in
bound
data16
jb
pop
mov
imul
push
sti
adc
rorb
insb
mov
cmpsb
mov
sub
xchg
daa
adc
xchg
lea
xor
rep
mov
repz
or
in
sbb
pop
stos
sub
daa
into
aad
cltd
mov
clc
mov
cltd
push
es
cmp
push
mov
das
std
cmp
orl
or
add
insl
dec
or
mov
xor
stc
outsl
push
dec
cli
jg
mov
xchg
push
push
jge
push
mov
inc
ja
das
xor
inc
in
imul
stos
outsl
scas
jns
cld
xchg
inc
inc
sbb
cmp
pop
pop
nop
inc
mov
or
bound
xor
imul
stos
mov
pop
or
cwtl
movsl
cwtl
orb
mov
das
jmp
addr16
test
inc
cltd
inc
xchg
cli
dec
add
cltd
les
dec
jns
cmp
cltd
pusha
sub
inc
fucompp
fdivrs
jp
movsl
push
sbb
fstps
sbbl
and
les
jns
insb
mov
subl
inc
adc
add
jcxz
or
popa
mov
lret
daa
sti
mov
in
add
pop
cltd
sub
test
lcall
pop
jge
insl
icebp
cmp
shl
push
leavew
mov
fstpl
xor
or
cs
clc
add
daa
mov
dec
into
xchg
inc
iret
cmp
les
mov
loopne
or
cmp
imulb
push
and
div
int3
lods
sub
call
dec
xchg
push
mov
subl
adc
sti
or
mov
pop
xlat
add
enter
jmp
add
cmp
sahf
fmuls
repnz
ljmp
xor
and
movsb
sbb
jns
add
ja
lcall
mov
xchg
cmc
mov
mulb
stos
mov
cwtl
lret
sbb
rcrb
jne
mov
sbb
test
out
push
test
mov
adc
mov
add
imul
iret
into
andl
push
stos
or
jg
mov
pop
pop
lahf
repz
or
adc
adc
or
push
mov
xlat
cmp
cmp
inc
stos
movsl
rcrb
shrb
fs
mov
enter
loopne
mov
mov
add
and
sahf
lods
pop
popf
add
add
filds
inc
mov
outsl
fchs
pop
clc
loopne
js
xchg
dec
mov
pusha
or
push
inc
int
sahf
pop
xchg
or
dec
sbb
not
lods
sarb
int3
sbb
sbb
repz
lock
repz
dec
fbld
mov
inc
jno
lods
iret
or
dec
jecxz
stos
leave
stc
pop
outsb
xchg
xorb
les
mov
sub
add
ud1
mov
push
stc
pop
lahf
out
push
fistpll
lods
inc
mov
int
mov
lods
cmp
xor
and
and
inc
pop
arpl
dec
push
nop
cmpb
es
cld
sub
fisubrl
cmp
out
add
mov
pop
adc
xor
add
sub
pop
imul
and
jne
ljmp
mov
aas
push
cmp
daa
leave
dec
scas
fistpll
popf
in
pop
push
cmp
bnd
cld
cld
cmp
nop
sub
dec
arpl
cmpsl
inc
hlt
dec
mov
imul
lea
iret
or
xor
ljmp
push
daa
loope
icebp
call
mov
icebp
jne
or
cli
out
xor
ja
sub
call
pop
test
mov
mov
cmpsl
pop
lods
sbb
pop
shrl
in
je
mov
leave
iret
push
xor
movsb
or
scas
sbb
fcomps
lret
inc
out
mov
add
push
shll
inc
inc
fnstcw
or
sarb
shrl
xchg
pushf
or
adc
out
push
fisubs
ja
insl
loopne
orl
jle
ret
push
addr16
jecxz
sub
mov
cld
jge
jbe
adc
jge
addr16
pop
fstpt
fisttpl
sbb
mov
jg
mov
rcrl
fiadds
mov
add
ds
mov
call
sub
adc
test
gs
pop
add
mov
mov
mov
mov
mov
lods
stos
sahf
jg
sahf
sub
int3
push
movl
jbe
int3
vcvtsd2si
repz
dec
cmpsb
jne
adc
dec
push
pushl
lock
pop
push
nop
shlb
je
jno
scas
lahf
ficomps
xchg
or
cmc
testb
xchg
mov
scas
in
fstpl
add
pop
or
mov
jg
dec
pushl
pop
call
loop
cmp
and
xchg
shrb
sub
addr16
test
fmuls
and
jp
xorb
add
xchg
push
push
xchg
lahf
test
lods
mov
out
jne
rcr
mov
arpl
pop
sbb
and
xchg
mov
sbb
ret
fistpl
cmc
dec
sub
decb
or
push
sarb
cmp
out
sub
inc
and
cmp
lock
orl
pop
dec
push
and
xor
jge
mov
jnp
repnz
outsb
push
add
ret
hlt
divb
cmpl
sahf
das
dec
xchg
dec
adc
ss
mov
out
inc
imul
xlat
dec
push
clc
decb
sahf
shlb
or
shr
ja
mov
mov
fisttpl
les
adc
pop
lcall
mov
sbb
pushf
outsb
xchg
push
gs
mov
cmpsb
sti
adc
add
scas
add
or
inc
into
je
das
mov
pop
aam
icebp
sti
dec
fsubr
inc
cmpsl
add
xchg
imul
mov
xor
dec
mov
loope
cmp
xchg
es
mov
mov
es
inc
push
cmp
scas
xor
daa
xor
stc
inc
cmp
and
aam
ficomps
arpl
insb
mov
mov
push
add
clc
hlt
sub
mov
test
adc
cmp
lcall
pop
sbb
inc
insb
mov
dec
or
daa
cmp
insb
jae
jo
mov
jecxz
adc
mov
sub
add
call
mov
dec
int3
add
push
gs
and
jns
xchg
sti
mov
add
gs
xchg
dec
loope
xchg
jmp
mov
sub
push
mov
popf
xorl
jno
in
xor
xchg
sub
out
jg
pusha
loope
pop
push
xor
push
ret
movsb
cld
mov
xor
mov
adc
aad
stos
mov
cmp
stos
adc
mov
aad
sar
inc
mov
gs
scas
sub
xchg
push
lods
mov
stos
sar
dec
dec
and
cli
or
test
mov
insb
lods
aad
xor
insl
dec
inc
fstp
xchg
shrl
mov
cmp
xor
inc
xchg
sbb
pop
or
sub
icebp
xchg
iret
sub
dec
in
stos
xchg
ja
cwtl
fs
lcall
adc
out
shl
icebp
insl
cmp
and
stc
mov
imul
shlb
dec
mov
scas
mov
movsl
shll
popa
mov
ret
ja
push
lret
add
jge
and
loope
imul
or
mov
js
psubb
call
inc
fs
fldl
lods
in
add
push
sub
call
mov
add
push
ret
mov
mov
jg
rorl
popa
scas
adc
lcall
filds
dec
ljmp
jbe
fisttpll
push
fmul
cmp
xchg
outsb
lahf
loopne
cmpsl
mov
test
push
jnp
das
js
pop
adc
or
or
jno
add
rcrl
jmp
fadds
mov
jecxz
push
inc
mov
subb
out
mov
xchg
xchg
nop
aam
add
fmul
loopne
push
clc
push
mov
sarl
aad
stos
icebp
js
push
nop
es
lret
pusha
ret
int3
popf
push
hlt
cmp
js
cli
mov
cmp
insl
andl
stos
push
movsl
call
loopne
cmp
test
add
dec
int
out
jno
push
cmp
aad
and
cmc
pushf
xor
xor
popa
xchg
or
mov
out
mov
mulb
push
mov
cwtl
out
cmpsl
adc
mov
fbld
pop
stc
adc
inc
jge
add
cmp
lods
mov
js
dec
enter
stos
mov
lret
dec
mov
cmp
pop
or
mov
push
inc
bound
imul
adc
push
xorl
or
mov
xchg
sub
mov
sbb
cmp
jne,pn
xchg
in
and
lods
adc
xor
daa
imul
pop
push
xor
jmp
add
and
ljmp
jge
pop
xchg
ja
int3
xchg
or
mov
and
adc
shlb
and
jmp
dec
or
mov
jle
ja
and
pop
fbstp
pop
mov
in
mov
movsl
imul
sarl
test
xlat
push
shlb
fdivs
lds
sbb
pop
shll
cmp
dec
fisttpll
jmp
lds
pusha
hlt
dec
inc
cmp
mov
addr16
xchg
fucomip
sub
mov
dec
jp
mov
popa
stos
mov
mov
popl
loop
je
test
jo
lret
insb
add
sti
dec
sbb
cmp
repnz
js
and
cld
imul
mov
cmc
mov
test
movsb
cld
push
fisubrl
ja
andl
cmc
pop
mov
push
pop
sti
jne
cltd
es
movsb
sar
push
rol
jne
shlb
push
pop
aas
add
push
pushf
int3
int
lahf
dec
lods
arpl
ja
mov
subb
adc
fwait
mov
cli
sahf
dec
fsub
subl
aaa
mov
and
test
jno
pop
repnz
push
pushf
sub
mov
xor
push
cld
lock
test
nop
jg
pop
stc
jae
js
lcall
orl
cmc
dec
out
cmp
or
and
dec
out
push
je
mov
out
insl
pop
lahf
mov
insl
stos
sbb
sahf
xor
adc
cmp
fnsave
jl
cmp
mov
stos
divb
dec
cmp
mov
or
pushf
jge
cmp
jmp
pop
push
aaa
out
and
std
mov
cmc
pop
out
sub
imulb
cmp
jbe
pop
pop
pop
fwait
lcall
xor
adc
fisttps
icebp
add
and
sub
popf
repz
cmpl
lahf
shl
and
push
adc
xchg
ret
cmp
cmpb
pop
push
fs
jne
pop
daa
arpl
sub
enter
pop
repnz
mov
mov
push
xchg
jecxz
lahf
loopne
sbb
push
jg
sub
movsl
cmpsb
push
sub
push
pinsrw
movsb
popa
test
jno
push
fs
jmp
out
std
test
aaa
xchg
scas
xchg
fsubrs
jl
adc
mov
jmp
insl
xor
sbb
xchg
jb
movsb
xchg
dec
jns
sarb
pop
lods
adc
imull
rcrb
cmpsl
fiadds
jg
jmp
cs
inc
das
sub
stos
aaa
and
popa
cmp
push
pop
int3
mov
int3
in
dec
das
mov
add
mov
lret
add
in
sub
adc
adc
aad
int
imul
loopne
or
sub
xorl
jns
clc
lret
nop
cwtl
jne
jnp
fdivr
ret
sbb
imul
pushf
icebp
xlat
pop
mov
push
outsb
out
ret
lret
mov
nop
add
mov
inc
adc
push
mov
fistps
xlat
pop
cli
repz
add
inc
jecxz
stos
jge
cli
clc
or
dec
inc
adc
xchg
inc
add
inc
cli
insl
frstor
sbb
xchg
das
stos
jo
daa
mov
and
push
or
pop
cld
test
mov
push
bound
mov
mov
sub
je
stos
cmpsb
pop
fcoml
sub
cmp
outsb
lods
ret
or
xor
das
jg
repnz
mov
cmp
jbe
xchg
stos
dec
test
sbb
les
jmp
lcall
jle
sbb
add
push
pop
jns
mov
adc
push
dec
insb
popf
dec
xor
cmp
mov
pushf
push
imul
xor
popa
dec
mov
push
aaa
dec
push
js
mov
pop
in
mov
cmp
adcb
ljmp
test
fidivl
push
mov
sbb
je
dec
add
cmc
mov
lea
add
mov
xchg
dec
or
int3
push
mov
rolb
and
pushf
mov
mov
push
cmp
mov
jg
bound
cmp
jno
leave
mov
lods
arpl
push
bound
jge
dec
lock
aam
and
dec
test
lods
call
fsubrs
or
jp
jmp
mov
cmp
stos
xor
mov
mov
adc
xlat
jne
sbb
dec
mov
add
lret
mov
and
jle
mov
adc
push
inc
es
sbb
das
xchg
test
decl
movsb
inc
cltd
fimuls
iret
cmpl
xchg
lahf
stos
dec
stc
or
pop
shrl
sahf
out
mov
mov
stc
fnstsw
sti
jmp
ds
pop
lahf
nop
in
adc
mov
mov
in
cmp
lret
or
push
in
and
add
ds
dec
xchg
divl
ljmp
sub
and
inc
mov
mov
scas
arpl
loope
sub
decl
cmpsl
dec
lret
lea
icebp
jbe
fwait
sti
or
cli
cmc
sub
movsb
dec
adc
lcall
nop
xor
les
push
cld
iret
dec
nop
pop
push
push
jle
cmpsl
dec
mul
into
fsts
out
inc
daa
pop
mov
ss
xchg
out
adc
jne
xor
or
cmp
or
sbb
loop
adc
data16
push
pushf
xchg
sbb
or
stos
int3
je
sub
jge
ret
or
mov
push
sahf
inc
inc
outsl
mov
or
int
jmp
pop
mov
push
push
mov
xchg
cmpsl
pop
dec
inc
cmp
fistpl
gs
sbb
pop
jnp
push
and
xchg
pop
mov
pusha
pusha
out
scas
loop
fiaddl
mov
add
xchg
inc
jns
popa
gs
ret
sub
cwtl
mov
mov
jne
push
xchg
frstor
shll
mov
stc
fucomip
fwait
mov
dec
pop
scas
mov
jb
cli
mov
cmp
mov
repz
add
inc
adc
aad
and
orl
dec
addr16
mov
inc
jb
dec
stc
out
pop
in
push
es
xor
jmp
fistpll
add
in
adc
roll
dec
jmp
push
mov
sub
ret
imul
and
and
cli
loope
inc
xchg
sub
sbb
xor
loopne
stc
cmp
bound
jo
leave
mov
jns
dec
adc
sbb
ja
or
pop
pop
sarb
leave
add
jbe
lret
inc
and
sbb
mov
stc
xchg
dec
xchg
sbb
js
lds
shr
fs
lock
loopne
and
and
call
xchg
andb
xor
or
inc
push
xchg
mov
cmpsb
mov
add
inc
pop
dec
test
fsubl
decl
in
push
gs
mov
out
inc
push
mov
lahf
adc
mov
std
test
inc
adc
adc
xor
cmp
mov
loope
test
jge
adc
mov
cmpb
jle
jb
adc
sbb
lock
jns
test
lret
es
mov
and
add
out
xchg
push
jge
repnz
push
xor
enter
pop
cmc
and
mov
inc
mov
xchg
fidivrl
inc
add
add
mov
dec
jg
inc
daa
arpl
pop
cmp
xchg
mov
pop
mov
pusha
scas
pop
sbb
outsb
imul
test
dec
push
scas
mov
xchg
sbb
and
outsb
stc
fucomp
cwtl
jg
call
pop
mov
bound
adc
ds
loopne
lds
mov
mov
in
out
insb
test
add
push
sbb
aas
add
push
mov
push
cmc
mov
cmpsl
out
nop
int
and
das
inc
xchg
out
repnz
adc
mov
sbb
push
arpl
mov
push
js
out
jmp
adc
out
adc
scas
lods
jp
ja
sub
pop
pop
lcall
ljmp
sbb
fmull
cmp
sub
inc
insb
ret
inc
shrl
dec
cmp
cmp
lret
mov
dec
and
sbb
cs
or
loop
xchg
cmp
add
pop
mov
sbb
pop
aaa
xor
xchg
push
or
stc
sbb
mov
stos
rcrl
out
imul
mov
add
mov
xchg
mov
jg
or
cli
cmp
jecxz
mov
jl
hlt
xor
cld
mov
aad
push
bound
ret
leave
and
out
dec
sbb
ret
or
int
lock
loopne
data16
cmp
mov
aaa
iret
shrl
shll
sbb
negb
aam
cltd
fsubp
clc
jnp
movsb
xor
or
stos
in
mov
xchg
sahf
and
or
nop
jp
outsb
mov
aam
and
sti
imul
cltd
mov
test
and
data16
sbb
cwtl
hlt
xor
movsb
mov
inc
push
repnz
cmpsb
cld
add
repz
sti
add
inc
incb
sbb
mov
int3
and
rorb
in
or
lods
inc
shl
push
adc
fisttpll
popf
dec
mov
mulb
mov
mov
insb
lcall
mov
lock
mov
popf
lea
and
sti
add
adcl
mov
lret
xchg
adc
divb
or
das
adc
xchg
mov
cs
pushf
stc
loop
outsl
ret
es
and
add
jmp
push
popf
and
sar
mov
jae
lea
stos
add
push
out
jb
xor
ficoms
icebp
js
sub
cld
add
icebp
dec
mov
push
dec
cli
mov
push
lret
dec
in
in
jecxz
lea
inc
int
fmuls
push
adc
test
xchg
push
inc
outsl
adc
movsb
shlb
mov
cli
nop
jg
add
bound
xchg
pushf
xchg
sub
aam
out
jbe
xchg
leave
imul
push
mov
cmp
cli
sbb
xor
lods
push
cld
test
jecxz
sub
xor
push
mov
mov
inc
shr
sahf
rolb
push
int
out
pop
imul
pop
sub
cmp
or
inc
push
sub
lahf
fdivrl
mov
mov
or
mov
daa
dec
hlt
cmp
adc
lods
xchg
out
inc
mov
out
push
icebp
pop
fistps
enter
pavgb
int
loopne
cmp
xor
adc
popa
push
rcrb
jbe
jle
xchg
imul
mov
adc
mov
fisubrl
fidivl
in
xchg
jae
xchg
ss
sub
enter
in
jne
mov
lea
add
jmp
pop
mov
decb
out
aam
mov
aaa
jae
test
aam
out
cmp
mov
xor
idiv
test
nop
cli
leave
lahf
xchg
xor
push
mov
mov
jmp
std
push
insl
loope
push
or
popa
dec
mov
enter
stc
cld
pop
test
mov
jae
stc
mov
mov
cmpsl
pop
outsb
inc
fbld
push
jl
loope
ret
jge
std
xor
fbstp
adc
out
push
push
hlt
aad
jns
inc
ljmp
or
test
xor
inc
lock
mov
nop
in
pop
fs
xlat
fcoml
dec
xchg
xor
mov
dec
test
pop
stos
gs
outsl
and
sarl
stos
dec
lea
mov
inc
adc
jo
inc
lahf
pusha
pop
push
jge
jo
and
xchg
mov
enter
add
jecxz
outsl
ret
cwtl
dec
lahf
jg
leave
dec
xor
inc
pop
aam
popf
push
mov
pop
dec
sub
jge
gs
rcrl
cmp
fs
mov
outsl
push
clc
add
xor
mov
insl
mov
aas
lret
pop
add
sbb
sub
cmpsb
loope
push
mov
dec
inc
cli
cmp
stos
into
add
xchg
jae
sets
leave
imul
inc
add
add
aam
insl
cmp
mov
test
mov
test
mov
jmp
xlat
xor
popa
sub
loopne
lahf
test
mov
xchg
sub
or
pushf
sub
lahf
adcb
movsl
fs
xor
rcrb
mov
lds
mov
jge
stos
lds
insb
cmp
lahf
add
cmc
nop
rcr
divb
in
ja
pop
xchg
sahf
cs
and
out
xchg
shrl
inc
loop
mov
cmpsb
hlt
in
sub
lret
cltd
lods
dec
je
insl
xchg
mov
cmc
sbb
push
cmp
dec
rcl
xchg
adc
mov
sahf
scas
call
cmp
subb
jmp
cmp
lcall
test
sti
sbb
mov
sbb
cmpsl
jg
push
ret
insl
popf
add
mov
ljmp
cmp
push
in
cmpsl
xor
push
push
xlat
pop
ud2
add
jne
jns
pop
cli
inc
cmpsl
or
loope
iret
cmp
xor
in
ljmp
imul
aad
mov
sti
icebp
aad
out
and
mov
outsb
enter
xor
test
xor
jbe
jno
fwait
mov
mov
push
insb
cwtl
dec
dec
mov
aad
aad
mov
or
fisubrl
pop
stos
jl
loopne
jmp
pop
sti
es
out
fisubrl
cmc
sahf
in
cwtl
mov
flds
jmp
cmp
fdivrl
mov
mov
repnz
mov
ja
es
adc
xchg
sbbb
push
or
cmp
xchg
aad
sub
xor
cltd
icebp
add
mov
push
sub
pop
mov
roll
mov
and
cmp
mov
lods
cmpsl
int
jmp
mov
fisttps
shr
movsb
shrl
or
mov
insb
sub
push
fcoml
cmp
loope
stc
test
mov
loop
in
in
jmp
ljmp
pop
sub
push
mov
rcrl
aam
dec
xlat
cmp
imul
cmpps
jg
js
popf
loopne
sbb
mov
push
lcall
mov
push
scas
sbb
or
cli
jl
ret
xor
loope
mov
es
and
xchg
or
pop
xlat
jnp
inc
popa
push
and
sbb
ds
add
inc
dec
xlat
inc
mov
arpl
xchg
or
pop
jbe
jg
bswap
rcrb
out
or
mov
inc
call
inc
push
xor
out
ror
cmp
sub
xchg
sub
sub
xor
push
leave
clc
dec
xchg
insl
push
pop
mov
int
push
loope
pop
ficomps
mov
imul
adc
hlt
and
lahf
lcall
aas
mov
enter
and
and
ja
adc
addr16
mov
repz
imul
xchg
outsb
adc
inc
dec
cmc
icebp
enter
xchg
pop
stc
xchg
orb
pop
cmpsb
cmp
and
or
pop
cli
sbb
popf
fisubrl
and
push
jo
add
insl
clc
sbb
lret
inc
add
add
inc
gs
pop
pop
sub
orl
xchg
icebp
inc
je
in
adc
add
sarl
jnp
test
loop
das
fstpt
push
xlat
mov
xor
hlt
ds
push
loopne
test
xor
imul
xor
outsl
mov
stos
in
ja
fildl
cwtl
loop
hlt
lea
or
loope
out
jno
idiv
in
cmpsl
sbb
xchg
popf
enter
arpl
xor
xchg
mov
mov
push
pop
add
push
imul
xchg
dec
add
pop
pop
lods
ficoms
add
std
push
cmpsb
cmc
enter
or
pusha
roll
int
inc
xchg
or
jae
call
cs
test
insb
xor
js
fwait
add
int
mov
stos
xor
addr16
xor
mov
ja
jmp
test
cmc
add
scas
repnz
je
or
pop
nop
pusha
sbb
push
mov
addr16
dec
adc
jo
lahf
hlt
sub
push
fwait
sub
sbb
in
ret
je
test
cmp
sub
xchg
jecxz
lock
sbb
sahf
loope
hlt
aaa
pop
es
push
sub
mov
sub
repz
addr16
sbb
xor
pusha
mov
or
scas
xor
or
lret
stos
loope
dec
scas
pop
test
daa
mov
in
daa
fwait
mov
inc
cmc
sub
jb
insl
push
cli
cmpsb
std
mov
xchg
stos
cmpsb
imul
cmpsl
xchg
cmp
push
cmp
push
jne
sahf
rcl
mov
mov
imul
mov
imul
cmp
test
test
push
pop
xchg
cmp
test
add
ja
mov
push
jb
faddl
and
sahf
xchg
lcall
lods
js
cmpsl
xor
dec
jae
retw
adc
adc
outsl
or
fists
jmp
mov
or
inc
adc
inc
lods
sarb
dec
add
mov
xchg
test
pop
push
jae
es
pusha
or
js
in
pop
push
sti
mov
push
dec
push
loopne
mov
or
lds
mov
pop
mov
pop
pop
sbb
mov
gs
adc
addr16
es
add
mov
adc
inc
in
das
jl
or
ss
cmp
adc
push
cltd
leave
xchg
imul
orl
out
add
into
sub
xchg
aad
or
or
movsb
cmp
mov
inc
jnp
pop
hlt
insl
fdivrs
outsl
sub
dec
cltd
outsl
sbb
fbld
fwait
add
ficompl
jle
push
and
fimuls
adc
mov
ja
inc
xor
out
xchg
scas
mov
adc
int3
cmpsl
adc
gs
pushf
lds
gs
push
push
cmp
in
xchg
sarb
sbb
jo
inc
adc
mov
pop
adc
inc
mov
flds
js
jl
add
inc
mov
lods
lret
pop
dec
fdivrl
mov
pushf
je
mov
outsl
call
mov
cli
mov
pop
inc
xor
fwait
xchg
mov
jle
mov
popa
xchg
jg
and
test
push
jno
pop
mov
push
pop
xchg
pop
or
je
into
out
jb
ljmp
leave
mov
mov
cmpsb
stc
popf
jg
cmp
pop
int3
outsl
jno
dec
push
cmp
in
adc
sbb
int3
lcall
mov
and
mov
insl
cmpsb
mov
mov
pop
push
mov
push
push
test
jns
push
arpl
dec
rol
xchg
pop
pop
xor
push
xor
jns
fidivl
insb
je
mov
jnp
iret
xor
or
sbb
jmp
adc
or
fidivs
xchg
clc
sbb
test
push
push
dec
mov
test
in
mov
rclb
push
pop
and
loope
xchg
imul
push
sbb
insb
push
popa
in
mov
fmuls
in
aam
push
ss
loop
out
xchg
decl
in
mov
push
mov
xchg
aas
addr16
jo
shrl
outsl
filds
jmp
jo
notl
mov
mov
fstl
mov
mov
loop
mov
sahf
or
jmp
adc
addr16
pop
test
jmp
bound
fimuls
pop
popa
std
cld
mov
movzbl
popf
xchg
adc
and
or
lds
imul
rclb
sub
shl
ret
jo
jae
adc
mov
sbb
into
xchg
mov
dec
ret
sub
add
push
jo
push
lcall
xor
das
ja
push
clc
and
and
or
xor
xor
leave
sbbb
and
test
sar
mov
addr16
cmp
scas
jae
mov
mov
dec
sub
idivl
rorl
lahf
out
mov
jp
leave
mov
lcall
pop
popa
mov
call
jmp
cltd
cmp
dec
sti
mov
ret
ret
dec
pushf
scas
leave
and
pop
in
xchg
fcmovnb
add
xchg
ficompl
cltd
shrb
outsb
mov
dec
adc
cmc
xchg
fdivs
or
loope
push
cwtl
lcall
pop
mov
jae
sub
cwtl
jp
fcmove
cwtl
xchg
push
and
adc
lock
cmp
pop
lahf
cmp
inc
jae
aam
jecxz
outsl
out
test
mov
movsb
notb
pop
sub
mov
or
xor
testb
shll
sbb
pop
xor
adc
sub
push
std
and
dec
xor
dec
sbb
out
mov
pop
fcomi
or
ja
mov
sbb
or
imul
adc
cli
jb
jbe
popa
push
mov
mov
adc
in
test
mov
mov
aam
repnz
mov
idivl
adcl
data16
xchg
dec
int
popf
ja
rorb
test
add
lahf
inc
jno
div
mov
dec
adc
push
pop
jecxz
int
sub
scas
int3
test
arpl
push
ds
push
xor
push
imul
int
pop
and
push
test
dec
dec
lcall
insl
cmpsb
add
fdivrl
xchg
loop
out
push
push
iret
ljmp
test
add
or
inc
mov
ret
hlt
cmpsb
xorb
mov
das
fisubrs
push
xchg
xor
dec
fnstsw
aam
jns,pt
push
sbb
imul
sbb
and
cmp
sub
popl
imul
sbb
adc
mov
incl
sbb
push
fidivrs
popl
jb
mov
jge
mov
xor
pop
lret
pop
inc
movsl
pop
jp
lcall
add
xor
jle
jecxz
dec
inc
pop
inc
jmp
int
lcall
lock
push
cmc
fildll
lret
mov
addr16
dec
stos
jle
pop
inc
int3
add
lahf
or
in
outsb
sub
lods
push
out
mov
xchg
push
ja
iret
jo
mov
jecxz
jae
jnp
mov
sub
int3
int
sbb
or
push
pop
add
add
mov
mov
rcll
loopne
sbb
and
mov
ss
ret
xchg
rcll
inc
lods
jb
xor
sbb
mov
arpl
and
test
shl
mov
andb
xchg
cld
xchg
xchg
nop
cmc
ror
pop
or
mov
jecxz
sbb
loopne
js
roll
dec
aad
mov
jns
jg
icebp
pop
imul
and
push
and
subl
pop
inc
and
stc
mov
shr
cmc
adc
mov
xchg
and
xchg
bound
inc
stc
inc
xor
lods
jecxz
insl
arpl
add
aad
pop
ss
bound
inc
bnd
aas
xchg
int3
jbe
xchg
push
mov
cmc
pop
pop
push
xor
test
inc
movaps
add
lcall
lods
test
mov
cmp
lret
aad
sbb
into
gs
and
dec
incb
cld
mov
add
outsl
aam
inc
push
push
push
mov
jge
adc
push
test
or
dec
imul
and
arpl
testl
enter
cmp
sub
lds
popf
push
popf
sub
pop
add
ss
adc
mov
inc
xor
psllw
mov
jl
into
loopne
lret
xchg
testl
and
fs
cmp
xchg
mov
xor
cmp
fwait
jp
push
out
aam
roll
cmc
adc
mov
decl
mov
sahf
fimuls
addr16
xchg
jns
push
js
dec
jp
lock
push
mov
repnz
fistpl
add
cmp
sahf
xlat
dec
lock
xchg
inc
pop
push
lahf
sti
cmp
sbb
int
fs
mov
clc
push
stc
inc
xor
push
out
pop
addl
das
adc
pop
mov
jg
pop
dec
cld
cmp
xchg
pop
cmpsl
daa
jns
call
xor
jnp
std
mov
cmpsb
fwait
jge
movsl
lods
lods
inc
xorb
add
ficoml
and
sub
cmp
rclb
mov
rclb
or
movsl
jecxz
or
and
push
add
lds
or
inc
pop
fimuls
cmp
jbe
js
addl
xchg
sub
cmp
mov
mov
adc
out
xor
cwtl
ret
cwtl
popa
test
dec
mov
and
adc
push
incb
sub
push
dec
cmp
or
push
xchg
jle
xor
loopne
adc
mov
aas
test
push
notl
push
andl
mov
sysexit
cli
fwait
iret
stc
cwtl
sar
cmp
adc
sub
add
insb
adc
jmp
pop
dec
sarb
xchg
inc
ja
sub
sbb
das
pop
adc
lods
int
xchg
sbb
push
sbb
push
mov
std
das
ficomps
pop
pop
sarb
push
daa
cltd
push
stos
int3
dec
xlat
adc
insl
fstpl
mov
mov
test
sarl
xlat
xchg
xacquire
inc
inc
jae
in
cmp
push
or
sub
cmp
pusha
cmp
xchg
or
pusha
insb
xchg
test
jmp
outsl
dec
push
pop
pop
in
fwait
mov
test
into
ja
add
pushf
or
into
rdtsc
mov
xchg
xchg
mov
mov
pop
xchg
icebp
sbbl
icebp
push
jmp
push
cld
add
cltd
jmp
and
hlt
repz
rcll
test
sbb
jmp
xor
xchg
cmp
push
add
inc
xor
pop
and
xchg
sub
pop
add
mov
fcmovbe
push
mov
cmp
dec
lock
mov
jg
cmp
add
mov
lret
aas
fnstcw
mov
lret
xchg
arpl
ret
dec
jp
or
js
cmp
sahf
pushf
jg
xchg
mov
mov
add
imul
mov
inc
icebp
loopne
jns
dec
les
add
cmp
lcall
xlat
loope
pop
pop
sahf
jo
mov
std
ret
or
mov
shll
in
nop
out
loopne
aas
ds
mul
xchg
test
out
push
adc
and
push
mov
pop
push
fwait
lret
es
xlat
cld
test
insb
add
sbb
je
movsb
mov
or
leave
clc
das
add
out
orb
inc
push
subb
into
push
push
xchg
out
test
jne
fiadds
loope
pop
xorl
xchg
pop
sub
iret
test
xchg
push
xor
pop
inc
es
jno
mov
inc
mull
inc
sbb
sti
mov
sbb
push
push
lods
mov
mov
imul
std
loope
or
add
mulb
cli
sbb
in
cmp
aad
mov
jecxz
mov
clc
dec
std
mov
and
jae
xchg
daa
inc
ffree
cmp
outsl
adc
xchg
imul
ret
mov
rclb
sti
js
cmpsl
jmp
nop
jnp
test
mov
push
stos
inc
imul
xlat
sbb
mov
scas
and
cmp
gs
bound
test
pop
cmpsb
in
aam
cwtl
mov
shll
jnp
out
sbb
adc
add
scas
or
mov
shrb
jecxz
aas
sarb
add
testl
popf
jecxz
dec
mov
cld
mov
dec
test
pop
js
jmp
push
dec
fstps
pop
adc
or
mov
mov
push
jbe
push
notrack
arpl
cmp
lcall
dec
es
fwait
dec
test
xor
xchg
inc
xchg
xor
mov
jne
mov
inc
jl
fcmovnu
outsl
push
jae
in
outsb
sbb
mov
xchg
ret
loope
mov
roll
xchg
add
add
daa
cs
inc
push
cmpsb
xchg
popa
fisubrl
add
xchg
or
add
les
ljmp
je
int3
and
xchg
arpl
negb
mov
aaa
add
inc
cs
lods
into
mov
cmpsb
pop
idivb
aam
push
jae
sti
test
pop
js
ret
mov
aaa
push
popf
mov
mov
dec
xchg
inc
and
mov
xor
sbb
shll
xorb
jo
pop
cmp
lea
xor
rol
div
hlt
daa
movsl
xchg
rorl
inc
cmp
lods
mov
inc
lahf
repz
pushf
xchg
sub
push
int
push
jae
push
cmc
nop
sbb
add
sub
insl
fidivrs
jo
mov
jnp
sub
mov
pop
idivl
cmc
daa
pop
ja
lahf
lea
mov
cwtl
in
mov
dec
ret
in
xor
xchg
dec
mov
inc
inc
xchg
sti
pop
cwtl
pop
or
notb
sub
and
sub
cwtl
adc
fists
bound
pop
stos
inc
loop
sbb
out
or
push
fisubrl
pop
xor
adc
push
jb
push
adc
jne
adc
pop
mov
rol
and
test
jge
inc
out
dec
mov
sub
icebp
jns,pt
mov
xor
push
push
push
jmp
das
mov
cwtl
in
inc
seta
xchg
jge
mov
lret
push
cmp
pushf
push
aaa
pushf
arpl
stos
fdivs
iret
jle
push
jnp
jns
sbb
cld
pop
jmp
jb
outsb
jbe
jnp
das
repnz
stos
out
jnp
lds
imul
push
dec
mov
int
out
dec
and
add
mul
xor
stos
cmp
pushf
mov
subl
mov
pop
mov
inc
sbbl
push
push
xchg
je
nop
sarb
jmp
imul
cli
cmp
sbb
push
rcl
cmp
shrl
cmpsl
iret
xor
and
push
out
mov
rcll
push
lcall
lret
or
pop
push
mov
stos
jg
or
insl
fiaddl
hlt
mov
shlb
sub
and
xchg
sarl
inc
inc
ficompl
dec
mov
test
les
xor
popf
sti
faddl
ret
pop
cwtl
fwait
iret
mov
roll
xor
sub
aas
cmpsl
enter
lret
lods
mov
out
ss
cwtl
pusha
stos
sub
cmpsb
aam
fiaddl
movsb
enter
adc
shl
scas
mov
dec
stos
jo
leave
mov
jae
adc
sbb
es
sar
xchg
cmpsb
jbe
cltd
cmp
leave
sbb
repz
lods
push
ljmp
cltd
add
dec
in
ja
push
mov
fstl
mov
lea
lret
in
imul
jno
inc
pop
mov
or
or
jae
sub
int3
xchg
enter
icebp
and
push
fisubrs
out
out
add
andl
in
inc
rorl
mov
or
imul
stos
imul
xor
cmpsl
aaa
fmul
out
mov
call
mov
lods
stos
shl
and
inc
int
mov
sbb
leave
fwait
push
fadds
fdivrs
andl
xchg
xchg
leave
dec
pop
test
jecxz
push
icebp
push
lahf
mov
adc
cmp
and
daa
fcmovnb
into
mov
inc
add
jecxz
pop
and
sbb
jns
or
inc
cmpsl
test
lret
mov
orl
addr16
cwtl
mov
sahf
stos
aaa
cltd
dec
das
shl
notb
arpl
clc
mov
mov
add
add
mov
pop
std
jne
fiaddl
add
stos
push
jne
nop
cmp
and
sahf
aad
incl
xlat
dec
mov
xor
inc
sbbl
mov
fnstcw
xchg
in
fsubrl
dec
out
dec
ljmp
ret
loop
fstpl
cwtl
aad
frstor
lret
mov
inc
adcl
fisttpl
loop
push
xchg
or
add
aas
xchg
movsl
xchg
fnstenv
pop
dec
sbb
shr
jg
and
out
sbb
outsb
jmp
test
sarl
loope
xchg
int
outsb
daa
rolb
sbb
insb
and
movsl
pop
rolb
orb
fidivs
lea
jl
add
push
or
mov
inc
xchg
add
xor
lret
scas
and
mov
xor
cmp
xchg
cmc
mov
cmp
and
or
das
iret
idiv
sbb
dec
shrl
lds
xchg
stc
mov
addr16
xchg
mov
rolb
cmp
sub
mov
pop
lds
popf
aas
add
shll
imul
stc
and
lods
out
std
sbb
xchg
mov
fdivs
movsb
push
pop
xchg
insb
gs
aad
xor
mov
xor
dec
loopne
imul
out
push
movsl
push
push
popf
pop
mov
or
jg
and
mov
ret
and
mov
jne
das
sub
icebp
decb
call
and
lds
sub
xchg
scas
icebp
repz
mov
xlat
add
and
add
fs
sti
stos
push
test
loop,pn
and
and
mov
sbb
push
mov
stos
cmp
rcrl
icebp
stos
jns
mov
fwait
sub
stc
aas
stos
int
inc
pushf
gs
adc
std
ret
in
mov
or
xchg
push
test
std
cld
mov
sub
stos
out
loopne
stos
pop
or
cmp
sub
cmp
loop
roll
mov
push
jne
push
lea
mov
push
mov
movsl
sub
cmp
stos
lret
idivb
outsl
hlt
cmp
cld
int3
push
and
imul
movsl
mov
aaa
jecxz
aaa
inc
pop
mov
push
xor
mov
jb
cmp
andl
add
in
add
fldt
sub
out
out
push
movsl
mov
jg
pop
nop
push
aas
xchg
cmpsb
mov
or
sub
lret
out
pop
pop
and
mov
fimull
jge
lahf
lds
adc
xor
xchg
mov
sub
fidivs
loope
fsubrs
jne
nop
into
xor
mov
pop
arpl
push
out
cmp
or
pop
push
lcall
dec
rolb
iret
mov
pop
out
popa
ret
mov
sbb
jb
aaa
and
outsb
fildl
movsl
lcall
lea
pop
sub
and
cmp
aad
pusha
ja
sbb
jle
xlat
aam
lea
mov
fdivrp
pop
rcll
adc
push
xor
xchg
sub
sbb
andb
outsl
popa
cli
xchg
out
pop
dec
add
daa
fwait
out
out
cmp
xchg
js
xor
add
shrb
mov
cmpsl
push
xor
push
cli
inc
ror
push
bound
cwtl
ds
outsl
shll
lods
lret
cmpsl
scas
inc
inc
scas
and
data16
popa
int3
dec
loopne
stos
ss
fnstenv
cli
icebp
ljmp
jnp
js
mov
into
add
and
rol
inc
dec
mov
mov
mov
in
xor
mov
decb
mov
jbe
mov
int
insb
jl
push
cmovnp
dec
int
xlat
ss
sub
cmp
and
add
repnz
scas
xor
aam
xchg
cld
and
pushf
cli
pop
add
shrl
orl
hlt
pop
inc
lock
je
mov
hlt
imul
loop
repz
scas
test
insb
jnp
gs
mov
xchg
mov
push
in
lret
pop
pop
jno
arpl
cmp
ret
arpl
xchg
stc
and
xchg
dec
neg
out
popa
jb
es
icebp
aaa
cmp
mov
pop
xor
xor
push
push
adcl
cld
cmp
push
and
lret
or
pop
dec
movsl
jne
call
xchg
outsl
jge
xor
ret
test
pop
or
sti
fstpt
xchg
movsl
lcall
fdivrl
dec
movsb
push
insb
addr16
andl
pushf
cmpsb
popa
cltd
pop
stos
cmp
jge
vcvtsi2sdl
clc
xor
data16
in
mov
dec
repnz
repz
sub
cld
stc
xor
insl
push
outsl
push
and
loope
adc
repnz
xchg
aaa
loope
int3
aad
int
jo
inc
outsl
push
jg
das
jp
lea
shl
es
sbb
test
push
dec
pusha
push
push
aas
out
data16
and
js
jb
add
out
push
aam
xor
dec
cmpsl
push
sti
cld
xchg
loop
sahf
sbb
lea
mov
divb
dec
and
in
cmp
imul
dec
fidivrs
or
ret
mov
jp
xchg
cmp
imul
clc
mov
out
xchg
push
mov
popa
fwait
pop
push
pop
cmpsb
outsl
cmp
push
inc
adc
rep
in
imul
mov
xchg
dec
xchg
lods
iret
fld
cmpsb
shlb
push
aam
jbe
leave
sbb
inc
cli
imul
or
pop
test
sarb
xchg
movsl
fsubr
mov
xor
dec
bound
mov
pop
icebp
addr16
xchg
xor
cltd
or
mov
pushf
mov
lock
and
adc
jmp
sub
sbb
jbe
xchg
jg
jmp
or
sahf
push
inc
lea
sub
insl
dec
inc
mov
push
sub
insl
push
fistl
adc
push
or
enter
les
or
iret
test
jb
pop
bound
or
in
adc
ds
mov
enter
xorl
push
jno
das
addb
mov
nop
and
dec
and
add
repnz
fdivl
rcrb
ljmp
jl
lds
mov
fwait
sub
pop
loopne
vpmaddwd
pop
leave
in
std
sbb
dec
std
shlb
fimull
push
fiaddl
mov
push
loope
outsl
nop
jo
lock
or
in
fcomp
sub
or
cld
jmp
pop
addb
jne
insb
lods
outsl
and
mov
xchg
xor
in
enter
lahf
aam
mov
mov
xor
push
and
and
or
addr16
xchg
inc
out
bound
add
cmc
cmp
sub
mov
out
aad
lods
cli
xlat
mov
loop
insl
dec
aas
lret
xlat
cltd
push
inc
out
cltd
aaa
sub
cs
ret
je
fnstsw
nop
sbb
xchg
jae
and
fdivrp
test
inc
xor
fucomi
movsl
clc
adc
add
jnp
xor
sbb
mov
in
and
lret
dec
cmp
jnp
cmpsb
xchg
in
mov
enter
sub
mov
inc
dec
xchg
repz
adc
imul
popf
iret
in
sub
sub
mov
sbb
xor
adc
sar
pop
fstl
jle
xchg
inc
idivl
jbe
enter
imull
inc
sarl
out
in
cltd
out
sbb
or
pop
jg
pop
fsubs
sub
stos
dec
shlb
xchg
dec
fwait
mov
jns
sbbb
cmp
shlb
mov
push
leave
stc
push
lret
jle
mov
int
push
jne
hlt
adc
and
push
jae
out
out
shll
mov
xchg
mov
xchg
int
outsb
and
inc
or
adc
mov
ret
subl
popf
jmp
call
ret
imul
push
adc
cltd
xchg
pop
inc
out
xor
test
mov
mov
or
xorb
test
push
sbb
pop
test
test
aas
test
add
dec
scas
sub
mov
mov
ss
out
scas
xchg
mov
lcall
dec
movsl
test
repz
scas
adc
sub
cmpsb
or
jae
lock
mov
data16
loope
ds
cmc
mov
pop
push
or
xchg
cwtl
sti
inc
mov
pop
mov
and
jo
cmp
inc
adc
jp
shll
push
into
jl
pop
stos
jb
mov
mov
pop
das
inc
test
enter
insl
je
pushf
xchg
rorb
jmp
jb
or
out
or
pop
cmp
sbb
enter
cwtl
inc
scas
aas
mov
xor
push
aad
ret
mov
inc
adc
push
stos
cld
test
lret
in
xchg
xchg
push
enter
pusha
and
nop
addr16
in
sbbb
push
jmp
pop
in
pop
sub
or
jnp
inc
push
xchg
lret
push
dec
test
and
mov
push
imul
pop
jne
out
sbb
test
subb
cmp
iret
adc
fsts
shll
notl
xchg
das
mov
dec
jge
out
sub
cmpsl
mov
xchg
push
push
test
jno
dec
inc
daa
adc
popf
dec
cmpb
and
add
cmc
xchg
repz
in
inc
add
lods
icebp
xor
add
jnp
dec
xchg
popf
push
lods
pop
push
jg
ss
fsubrs
jecxz
push
xchg
pop
jbe
nop
leave
mov
fcmovbe
daa
mov
inc
sarl
fists
add
or
xchg
call
cmp
cli
sar
xchg
add
or
mov
fnsave
std
push
mov
mov
dec
in
add
in
sbb
test
dec
ss
insb
xchg
xchg
sbb
or
mov
mov
roll
sub
cmp
lods
push
loope,pt
lahf
repnz
mov
lcall
and
aaa
push
jnp
andb
std
cmp
mov
and
int3
xor
test
mov
test
mov
jecxz
cmp
cmp
pushf
subb
cmp
jp
mov
pop
mov
lea
xor
push
sahf
shlb
jmp
pop
push
push
mov
jg
or
in
pop
inc
jmp
mov
dec
mov
add
mov
xor
int3
cmp
cmp
inc
cld
leave
rclb
cmp
call
ret
mov
jns
or
push
das
cs
jne
fldl
jp
sbb
leave
dec
stc
or
out
test
imul
inc
or
les
test
add
pop
dec
mov
je
cmp
js
cld
mov
or
sbb
cmpsl
cmc
lock
jae
cli
mov
test
xor
test
push
mov
lret
cmp
arpl
cltd
mov
out
out
aaa
jns
mov
mov
jmp
xchg
sbbb
jge
lret
xchg
push
ljmp
int
adc
aas
mov
sub
hlt
jne
push
jns
mov
mov
lret
pop
xlat
cmp
lods
xchg
fistpll
mov
testl
pop
fwait
push
add
addr16
ljmp
test
jbe
xor
mov
into
ret
xor
or
cmp
cmp
sub
call
iret
cmp
jnp
sub
pop
bound
mov
lods
into
adc
int
mov
pop
out
ja
jmp
pop
sbb
add
jp
pop
xor
cmpl
aam
mov
xchg
mov
dec
xor
lock
shl
enter
inc
sub
inc
sub
fwait
sub
push
sbb
cmpsb
fdivl
cmp
mov
loope
nop
dec
fwait
repz
gs
inc
hlt
shlb
ud0
xor
pop
aaa
push
in
cwtl
in
xorb
dec
mov
fnstenv
mov
in
pop
pop
clc
cmp
xor
jno
push
push
or
sbb
leave
inc
mov
sbb
cli
in
jecxz
mov
stos
je
jp
les
inc
add
adc
xor
mov
sar
cmp
dec
pop
adc
pushf
bound
fiaddl
sahf
fcoms
fstpl
fiaddl
mov
das
into
cmp
mov
mov
fistpll
push
dec
test
cmp
inc
loop
into
xchg
mov
ss
aas
repnz
fildl
mov
int
add
cltd
addl
aam
or
in
addr16
mov
add
cmp
bnd
adc
pop
sarl
push
cmp
lods
mov
subl
ret
and
das
aam
lock
pop
int3
lret
xor
push
inc
dec
jecxz
or
jge
lods
jecxz
cwtl
xchg
jbe
mov
lds
inc
sub
cmp
movsl
scas
jecxz
pop
aaa
cmc
xchg
popw
pop
sbb
xchg
dec
push
adc
shlb
dec
mov
jle
in
in
gs
add
cmp
loopne
mov
jmp
cmpsl
mov
ret
or
imul
addr16
sub
jecxz
xor
ljmp
gs
push
mov
loopne
sub
mov
outsl
sbbl
lods
mov
xor
lds
and
xor
les
cmpsl
out
or
adc
pop
pop
xor
test
push
stc
imul
inc
jae
or
mov
aad
insl
push
test
jmp
inc
jb
or
pop
in
and
adc
mov
outsb
dec
andb
adc
in
mov
and
jno
cmpl
xchg
mov
sbb
pop
lahf
fdivl
sbbb
push
lods
adc
inc
mov
rcl
dec
js
mov
push
push
insl
mov
xchg
or
lcall
jno
sahf
pusha
lds
and
jmp
or
movsb
add
sub
jo
push
hlt
or
and
push
inc
repnz
ljmp
push
sub
jae
pop
and
xchg
dec
inc
push
xor
test
pop
mov
repnz
pop
fisttps
cld
outsl
add
gs
mov
jae
loop
mov
xchg
lret
into
or
test
das
lock
fldl
leave
stos
iret
shlb
subl
push
lds
mov
pop
popa
cwtl
stc
sub
or
dec
xchg
push
xchg
cmp
mov
cmp
xchg
jae
hlt
sbb
mov
mov
mov
aaa
outsl
mov
ret
or
sbb
inc
inc
outsl
pop
mov
push
jmp
arpl
and
fisubrl
xor
fstps
ror
cli
mov
sub
mov
sbb
inc
mov
adc
inc
dec
add
std
dec
cmp
adc
mov
inc
sti
inc
push
aam
lods
outsb
sub
out
lahf
lea
xchg
shlb
adc
jns
push
dec
ret
mov
cmp
call
or
jp
mov
in
xchg
aas
ljmp
pop
and
pop
inc
add
or
in
inc
push
mov
jge
stc
cmp
lods
rcrb
xor
sub
repz
pop
or
outsb
jae
adc
push
jns
mov
shrb
sub
dec
insb
push
dec
push
mov
mov
jae
test
cmp
mov
sbb
test
sub
push
mov
pushf
sbb
test
inc
inc
mov
mov
mov
ret
mov
sbbb
test
push
stos
add
and
push
push
stos
mov
aam
call
fwait
es
pop
test
jae
cmp
fmuls
nop
push
mov
shrb
test
mov
cmpsb
pop
jecxz
and
lods
in
mov
fistpll
out
testl
mov
mov
sub
cmp
or
daa
inc
leave
xor
fldenv
push
mov
loope
pop
in
jl
ja
popl
xor
test
hlt
int3
fdivrl
xor
outsl
mov
xlat
dec
dec
mov
sbb
and
fstl
movntps
mov
mov
mov
inc
cmc
jecxz
inc
push
ret
aas
imul
addr16
out
xchg
sbb
inc
or
sub
cli
push
jmp
mov
mov
test
ss
pmullw
push
rorl
sbb
mov
mov
mov
mov
out
es
pop
jbe
sbb
gs
into
outsl
cmp
jb
hlt
rclb
js
jnp
insb
adc
stc
jno
lret
fdivp
add
cmp
lods
sbb
xlat
sub
bound
cmp
scas
test
adc
push
ds
push
inc
jg
dec
mov
dec
js
inc
xor
cmp
jb
lods
bound
fcmovnbe
jmp
xchg
inc
push
imul
and
in
lcall
pop
dec
hlt
push
into
leave
xor
int
roll
cwtl
adc
scas
jg
test
orb
xchg
out
mov
lret
fcmove
jno
mov
outsl
sub
in
in
xchg
pop
and
fiaddl
add
pusha
dec
je
dec
aas
or
xchg
pop
test
mov
arpl
inc
out
insl
fisttps
inc
fwait
andb
lret
std
jo
int
aad
mov
or
cmp
sbb
loopne
outsl
sbb
and
clc
sbb
pop
xchg
push
enter
iret
sbb
lret
hlt
loope
in
push
imulb
push
fstpl
pop
add
sbb
push
or
xchg
jne
jb
jmp
je
jb
xchg
out
mov
dec
movsl
jge
cmp
jle
imul
mov
mov
in
xchg
jns
decb
push
and
loop
call
imul
sub
mov
fildll
push
mov
xchg
addb
pop
icebp
insb
or
xor
jmp
xchg
test
pop
mov
sub
les
xchg
or
in
aaa
pop
stos
jb
push
roll
in
adc
mov
pop
jg
mov
fisttpl
mov
xchg
adc
pop
or
inc
xor
lock
adc
inc
xchg
sbb
loope
xchg
mov
in
loop
mov
fwait
pop
jno
into
out
jecxz
mov
inc
jns
push
add
cld
mov
lcall
cmp
pop
mov
daa
in
lret
in
and
mov
jne
es
insb
test
pop
daa
test
lock
adc
rcr
in
lret
out
test
data16
xor
out
in
dec
mov
lods
les
add
inc
in
out
int3
outsl
lock
lods
in
xchg
push
lret
adc
dec
mov
dec
sbb
repz
outsb
int3
xchg
adc
jae
xor
mov
add
insb
dec
cmp
sbb
push
mov
mov
jne
jmp
pop
add
inc
insb
jnp
aam
push
in
aaa
pop
or
push
adc
sbb
mov
and
addr16
xchg
gs
mov
inc
in
xchg
cs
int
fwait
mov
lret
inc
xchg
push
test
or
sub
mov
lods
loop
dec
test
xorb
xlat
push
ljmp
cmp
and
adc
jb
orl
sbb
xchg
mov
enter
cld
cmp
es
dec
icebp
mov
xchg
scas
mov
and
rdpmc
dec
daa
mov
lcall
mov
int3
sub
dec
gs
mov
into
fisttpl
or
jmp
inc
repz
xor
dec
pusha
mov
jne
rcll
add
push
or
icebp
gs
lret
pop
add
aaa
mov
xor
mov
js
ljmp
pop
and
adc
fs
xor
or
std
movsl
xchg
adc
pop
lcall
cmp
cmpl
push
sub
ja
jno
inc
mov
mov
in
sbb
into
mov
iret
int
jne
and
into
dec
sbb
fldenv
dec
movsl
sbb
xor
and
add
cs
sbb
iret
loope
fiaddl
jg
fcmovnbe
or
stc
and
adc
inc
push
in
sbbl
insl
nop
cmpsb
sub
inc
sti
inc
inc
data16
pop
xlat
xor
jae
pop
ss
jbe
enter
mov
mov
xchg
fcomps
add
outsb
push
jne
fcompl
into
pop
push
adc
jge
fdivrs
and
push
shrb
cmova
mov
ja
pop
fidivrs
sarl
ss
aad
cli
sub
push
cmp
enter
mov
fidivs
ds
rcrb
push
lods
and
mov
and
cmpsl
push
sub
imul
and
enter
dec
mov
adc
dec
or
nop
mov
cmp
mov
ror
ds
sub
loop
insb
mov
or
dec
lds
or
xchg
push
inc
or
and
xor
cmp
enter
inc
ficoml
into
ftst
inc
nop
mov
fsubs
dec
xchg
addr16
mov
mov
int3
mov
mov
lods
pusha
sbb
ret
xchg
xchg
loop
xchg
pop
xchg
xorl
jne
cmp
scas
aas
ja
or
add
lock
dec
int3
ljmp
int3
sbb
pop
add
sbb
fiadds
jb
ja
push
pop
xor
push
test
gs
test
jbe
test
sbb
scas
and
dec
pushf
xor
out
push
ljmp
aam
cmp
lcall
xchg
cwtl
xchg
xor
pop
ret
mov
cmp
push
arpl
pop
xchg
stos
orl
in
or
dec
mov
call
hlt
mov
testl
sahf
lods
add
jno
cltd
dec
outsl
je
adc
sbbb
mov
sbb
adc
add
and
sbb
cmp
inc
mov
sbb
inc
pop
es
and
arpl
cmp
sbb
mov
mov
and
xchg
inc
lahf
jecxz
pop
inc
pushl
jmp
lods
inc
or
jo
pop
cmpsl
shll
mov
loope
push
sbb
mov
xchg
pop
sti
sbb
sub
add
mov
inc
pop
xor
sub
push
or
mov
xchg
mov
sub
cmpsb
jo
in
lcall
add
ret
fucomi
dec
insb
in
and
test
sbb
ss
fisubrs
stos
cmp
ficomps
int3
jo
pop
fldl
mov
ljmp
jmp
push
push
shrl
cmp
adc
adc
cli
out
dec
dec
aam
inc
das
jo
es
test
loop,pn
fwait
std
gs
or
ds
sub
clc
imul
adc
sbb
in
cmpsb
or
aad
in
insb
pop
pop
ss
mov
out
push
test
fs
push
in
pop
ljmp
sub
pop
mov
xchg
mov
inc
and
leave
xor
daa
xchg
or
loopne
dec
inc
iret
mov
sbb
testl
xchg
xor
xchg
pop
push
aaa
movups
loop
push
pop
pop
adc
popf
stos
jb
push
jnp,pt
repz
insb
xchg
add
gs
pop
xchg
mov
mov
or
and
add
sub
test
xchg
loope
and
cld
popa
add
cmp
cs
mov
dec
jo
cmpsb
xor
inc
cmp
dec
pop
data16
pushf
sub
adc
lcall
xor
dec
sbb
into
arpl
jbe
adc
adc
stos
xchg
sbb
cmp
and
cmp
xchg
out
cmp
jp
add
lret
in
cltd
ror
add
rcll
sbb
aam
out
jno
clc
add
inc
mov
jnp
jb,pt
push
pop
shr
add
popa
cli
out
in
fildll
push
lret
or
repnz
xor
lods
mov
arpl
scas
movsb
call
mov
xchg
nop
push
cltd
push
stos
lret
jo
mov
enter
pop
fsubr
lods
or
pop
popa
push
stc
lods
mulb
cmp
add
or
push
xchg
stos
xor
outsl
xor
add
dec
jge
aam
loop
jecxz
adc
dec
outsb
and
dec
scas
mov
daa
mov
out
sbbb
push
dec
sub
imul
mov
in
inc
cwtl
lea
sub
and
and
push
sbb
pop
inc
pop
fwait
add
push
mov
mov
adc
out
cmp
negb
mov
cld
test
ljmp
push
add
inc
and
cld
iret
movsl
push
inc
into
pop
adc
jno
mov
rorl
mov
test
les
mov
adc
shlb
loop
and
cmp
jmp
push
insb
or
rorl
sub
add
pop
push
sti
addl
push
push
cmpsb
sbb
adc
or
pop
inc
pop
scas
dec
and
dec
and
js
ss
cmp
mov
xor
mov
xchg
dec
cmp
stos
xchg
clc
mov
mov
lock
xlat
mov
cmp
daa
sub
js
call
out
cmp
movsl
or
mov
sub
ret
mov
ficompl
stc
ljmp
cltd
cmp
dec
enter
sbb
sbb
test
cmp
pop
imul
sbb
imul
ljmp
mov
rcrl
add
sub
inc
dec
adc
push
push
jne
les
mov
es
pop
pop
cmp
inc
popa
pop
mov
cld
push
arpl
outsl
push
cltd
sub
mov
mov
push
insl
and
xchg
sub
push
push
push
int3
sub
inc
xor
bound
sbb
int3
cmpsl
add
in
jmp
or
xor
cltd
js
aaa
xor
ss
cwtl
aaa
jecxz
ret
sub
or
inc
aam
xor
pop
cmp
rcll
xchg
les
xor
add
jle
xor
push
jle
xor
aas
sahf
or
xor
ret
or
shll
std
mov
push
pop
push
outsb
aad
xor
cmpsb
negl
sti
and
cmpsb
add
popf
jmp
push
push
jecxz
nop
ret
push
fadds
imul
mov
mov
lods
outsb
xchg
insl
jbe
or
xchg
mov
lcall
sarb
cltd
cmp
lret
jp
fwait
pop
push
xor
imul
shlb
scas
loop
mov
pusha
jns
jno
loope
dec
mov
stc
sbb
sbb
adc
xchg
xor
pop
sub
xchg
cwtl
daa
pusha
dec
xor
fstpl
inc
sbb
cmp
and
xchg
mov
test
push
xor
jne
sub
sub
mov
rorl
pop
lods
sub
inc
outsb
popa
icebp
shrb
rcr
filds
or
clc
lcall
subl
dec
cmp
shll
xchg
fistpl
fldl
pop
data16
or
testl
jbe
dec
sub
clc
inc
dec
push
mov
xor
sbb
stc
and
pushf
mov
jo
out
adc
popa
pop
pop
cmp
jle
adc
push
icebp
and
mov
mov
dec
call
imul
push
daa
sarb
in
or
test
mov
pushf
loopne
xor
dec
sbb
mov
lds
addr16
faddl
fdivl
push
sub
movsb
imul
shlb
pop
pop
adc
push
ficoms
push
dec
in
ffree
pop
stc
ss
sbb
mov
xchg
sub
jae
pop
int3
jg
lods
pop
enter
das
pop
shrb
sahf
jo
arpl
stc
sbb
popa
push
xor
xor
daa
outsb
ret
push
adc
scas
addr16
sar
dec
pushf
xor
fldenv
test
orb
lret
inc
hlt
adc
dec
insb
inc
in
mov
push
sub
mov
and
add
xor
cmc
paddusb
inc
imul
popa
cmp
push
cmp
xchg
daa
test
push
add
mov
sahf
in
fucompp
bound
stos
ss
test
xor
mov
inc
mov
mov
cwtl
dec
jl
xchg
inc
mov
test
dec
popf
pop
imul
jmp
sar
jecxz
adc
pop
mov
enter
cmpsl
and
dec
pop
rolb
mov
pop
es
push
inc
dec
ss
leave
mov
mov
jo
add
sbb
sbb
fwait
test
and
push
mov
dec
mov
mov
mov
cmp
push
xchg
xor
test
or
mov
mov
cmp
jmp
jl
jp
pushf
xchg
adc
les
int
cmp
aas
push
imull
sar
aas
nop
dec
push
xor
dec
sbbl
mov
xor
xchg
mov
mov
ss
push
sub
leave
subl
es
mov
shll
xlat
jmp
jle
pop
lahf
cwtl
xor
imull
mov
sarl
mov
jmp
xor
or
add
lahf
scas
pop
mov
fistpl
jnp
in
shll
xlat
insb
lcall
inc
inc
xchg
popf
mov
cmpsl
adc
xor
mov
cmp
fstl
jle
or
mov
lds
jnp
pop
repz
push
mov
je
add
aas
lret
dec
mov
cmpsl
cmp
aas
cmp
cmp
and
aaa
dec
adc
add
aam
lock
divb
hlt
into
pop
push
mov
dec
out
shll
push
adc
outsl
push
cltd
pop
aas
mul
stos
dec
and
or
pop
fldenv
outsb
jge
inc
or
mov
stos
add
addr16
sub
and
jo
mov
add
shlb
mov
fcmovu
aam
xchg
fistl
sub
mov
or
push
xchg
push
je
xchg
in
mov
pop
scas
inc
mov
push
cmp
movsb
cmc
or
xor
iret
xor
enter
fstp
hlt
lret
fstl
pop
sub
cmp
mov
xchg
shr
push
aad
push
mov
jbe
es
test
aaa
mov
pop
adc
pop
mov
lahf
xor
sbbb
outsl
add
enter
outsb
sub
cmp
int
loope
add
mov
adc
mov
add
popl
adc
inc
ljmp
cmp
lock
mov
xchg
std
cltd
leave
cmp
mov
arpl
xchg
xlat
inc
xchg
and
insb
adc
cmp
xchg
push
mov
push
lods
aam
aad
mov
add
jmp
mov
or
adc
sbbb
outsl
xorps
jo
jp
adc
mov
push
sahf
hlt
dec
add
call
push
pop
outsb
xlat
cmp
fiaddl
arpl
lods
idiv
lods
ss
scas
push
cmp
or
enter
sbb
jno
or
imul
ret
lds
mov
xlat
lcall
sub
mov
iret
cmc
or
cwtl
cmp
out
sarl
mov
mov
hlt
and
aaa
pop
add
adc
jno
outsl
mov
xor
or
push
or
out
jo
inc
lea
xchg
mov
xchg
cmpsb
bound
jo
mov
pop
push
add
push
outsb
fcoml
add
lcall
cmc
xchg
mov
mov
lds
fimuls
jbe
push
cmp
mov
ja
fs
adc
call
cmp
lret
mov
cmc
int3
negb
lcall
or
xchg
mov
jp
stos
pop
pop
xchg
sbb
movsl
adc
sahf
inc
cli
lods
lods
cmc
sub
out
pusha
pop
push
mov
jae
push
les
add
and
cli
sub
fisubs
imul
adc
into
xorl
sarw
and
fmul
out
loop
aas
es
notl
sbb
mov
jge
test
add
adc
add
push
xchg
cmp
mov
add
cli
pop
dec
xchg
ficomps
enter
mov
pop
stos
dec
ja
jae
enter
dec
jnp
pop
enter
rcrb
push
movsl
push
push
pop
jo
dec
jb
xlat
adc
fsubrp
mov
jbe
mov
push
sub
mov
jbe
cmp
jb
arpl
fdivrs
jecxz
mov
outsl
test
stos
add
cmc
rol
ret
mov
dec
sarl
or
adc
mov
jp
sbb
dec
movsb
shl
sub
push
scas
cmpsb
mov
xchg
xchg
ja
or
ficompl
ret
add
imulb
lcall
jle
push
in
push
inc
xor
push
lds
xor
dec
pusha
aad
and
loop
and
into
test
push
idivb
mov
xchg
sbb
cmpsl
dec
mov
push
xor
xchg
mov
dec
add
mov
mov
rcrb
push
fwait
in
lret
xlat
xor
dec
mov
mov
mov
or
in
dec
dec
mov
xchg
pop
daa
cmpsb
sahf
pushf
mov
das
in
into
je
int3
and
jae
pop
mov
sub
xchg
in
sbb
sub
aam
lcall
jo
xlat
push
lods
xchg
sar
movsb
push
scas
ret
jae
in
gs
lock
pop
mov
mov
push
in
sub
dec
lods
test
add
js
int
xchg
sub
insl
decb
mov
push
cltd
adc
pusha
and
das
adc
push
inc
fstl
out
movsl
cmp
jmp
pop
cld
insb
shrb
push
adc
cmp
testl
sti
or
fnsave
subb
mov
fwait
sub
pusha
xor
xchg
lret
push
inc
arpl
xor
mov
fadds
inc
mov
xor
mov
lret
and
jge
xchg
push
arpl
adc
adc
mull
mov
subb
test
mov
mov
push
movsb
imul
mov
insb
lods
or
sub
mov
repz
fisttps
mov
dec
jo
lds
push
std
popf
in
mov
mov
dec
cs
xor
add
mov
test
push
or
imul
sub
inc
lahf
sub
xchg
movsl
stos
je
fwait
mov
enter
in
add
fdivp
sbbb
cmc
add
ret
mov
imul
sbb
loopne
ss
aam
cwtl
mov
mov
inc
sub
mov
add
push
xchg
jmp
gs
into
xor
dec
insb
sti
xchg
inc
dec
inc
in
xchg
sub
ds
dec
cli
bound
leave
sub
sbb
pop
xor
int
aad
pop
outsl
xchg
add
icebp
inc
and
xor
mov
lahf
dec
lods
and
cwtl
pop
push
sub
adc
int3
imul
jmp
xchg
xor
push
push
repnz
hlt
pop
lcall
cmpb
repz
aas
pop
jo
imul
test
jno
sbb
push
out
hlt
decb
js
daa
mov
and
mov
lret
dec
push
fsubs
out
xor
iret
es
enter
xor
bound
jg
mov
mov
dec
add
rorb
dec
push
cmp
int
leave
pusha
jne
dec
ja
sbb
dec
dec
dec
dec
jb
mov
lods
pop
add
push
dec
idivb
sbb
push
insl
mov
lret
fsqrt
js
loop
inc
dec
inc
push
shll
inc
xchg
adc
loope
lret
xor
inc
adc
dec
addr16
jae
or
add
nop
cli
in
test
enter
pop
scas
pop
testl
fistl
and
ljmp
icebp
push
cld
pop
scas
ud1
out
divb
mov
mov
mov
adc
add
fnstsw
xchg
adc
mov
xchg
xor
or
xchg
push
cmp
and
enter
xchg
add
mov
jl
lods
cmpb
dec
popf
mov
xor
leave
movsb
add
pop
fldcw
inc
cmp
imul
icebp
loopne
dec
fbstp
mov
cmp
inc
sub
fucomi
xor
push
adc
jecxz
cmp
and
push
rcrb
int3
cld
insb
inc
cmpsb
dec
add
lret
and
xorl
int
cmpsl
push
jecxz
dec
subb
or
ret
fimull
stc
pminub
insb
mov
push
or
mov
inc
mov
aam
cmp
les
xchg
out
insl
insl
jl
or
jbe
adc
mov
aam
std
xor
in
cmp
mov
sahf
cld
push
add
jl
clc
stc
test
and
cmp
pop
out
mov
call
mov
mov
repz
cltd
icebp
sbb
mov
push
sbb
imul
icebp
leave
out
pop
popa
loopne
pop
popa
insl
movsb
cli
cltd
in
mov
es
mov
xor
mov
scas
mov
or
sub
aas
out
and
outsl
sbb
add
and
adcl
xchg
popf
hlt
or
mov
or
inc
pop
daa
cmp
push
jl
adc
pop
scas
dec
jae
xchg
scas
push
mov
xchg
adc
xchg
loop
or
aam
xchg
ficoml
inc
test
add
mov
fsubl
push
add
repz
dec
arpl
imul
in
adc
cmpsb
cmp
jae
out
jns
das
fwait
jp
scas
jo
pusha
jmp
mov
jge
mov
loop
frstor
in
sbb
rclb
jnp
ret
in
loopne
pop
xor
and
pop
les
dec
xchg
aad
ds
add
daa
mov
xchg
cmp
xchg
scas
insb
sub
into
call
int3
cmpsb
jp
push
pop
jg
stc
stos
jnp
loop
fdivl
jge
mov
lock
fisubrs
nop
xchg
adc
out
in
xchg
sbb
clc
mov
pop
hlt
xchg
fucomp
sub
loope
dec
push
fadds
mov
xor
call
movsl
mov
and
jne
inc
fldenv
out
frstor
ds
iret
mov
int3
and
test
mov
nop
popf
and
push
dec
jle
add
or
testb
adc
xchg
cmp
enter
dec
mov
and
lock
test
mov
jle
dec
lock
pop
xchg
cmp
testb
mov
xlat
inc
daa
add
sbbb
leave
and
shrb
stos
test
mul
or
sbb
jo
lea
stc
mov
mov
pushf
test
scas
lods
push
inc
adc
xchg
dec
rclb
das
xor
js
sti
dec
aaa
sub
jnp
xchg
jmp
gs
dec
pusha
mov
mov
jnp
jnp
stos
lods
lcall
fisttps
lret
insb
push
pop
cmp
push
mov
push
lds
and
in
mov
outsl
rclb
jbe
push
mov
jle
in
adc
popa
inc
pop
jbe
and
movsl
pop
movsl
gs
inc
imul
jo
cmc
loopne
xor
ljmp
stos
and
push
fwait
pop
jle
xor
add
push
dec
and
jne
aaa
or
push
test
test
mov
xchg
pusha
imul
inc
les
push
xchg
pop
mov
outsl
mov
pop
inc
jno
pushf
stos
fldcw
sub
adc
addb
mov
iret
shl
test
jne
jns
or
add
push
jbe
inc
aad
lret
inc
mov
rclb
inc
popa
das
std
mov
outsb
dec
cmpl
in
es
leave
into
xchg
loope
jle
hlt
add
mov
jae
mov
push
pusha
in
mov
movsl
jns
and
lds
mov
int3
jle
mov
loope
mov
lcall
rolb
jmp
mov
mov
mov
repnz
cmp
lahf
std
enter
xchg
push
test
aam
cmp
jne
repnz
pop
rcl
dec
and
mov
inc
sbb
fstps
sbb
push
cmpsl
jl
je
xchg
push
cmpsl
jge
push
int3
ror
adcb
xor
leave
filds
es
cmp
std
cld
dec
sbb
jge
aaa
jp
repz
mov
mov
inc
int
rcr
jg
or
jg
jge
sbb
xor
sbb
xchg
mov
jecxz
aam
mov
les
cmc
lea
in
call
pop
mov
mov
mov
xchg
stos
hlt
aam
in
aad
divl
scas
dec
pop
xchg
mov
faddp
mov
popf
stos
push
imul
lahf
es
jg
push
sbb
test
les
inc
outsb
inc
push
or
int3
mov
adc
daa
data16
mov
pop
xor
mov
aaa
movsl
sahf
pop
imul
in
add
orl
js
ret
push
add
jecxz
test
sbb
cli
dec
cwtl
or
pop
jns
incl
loope
mov
movsb
in
sti
out
mov
cmc
nop
push
js
ret
sub
test
jp
adc
lods
das
lret
sbb
mov
lods
les
mov
call
dec
shlb
test
stos
jne
gs
shlb
add
xchg
pop
lods
popa
repz
pop
xchg
pusha
and
fnstenv
dec
xchg
outsl
aas
bound
dec
ljmp
dec
jne
and
out
mov
xor
cmp
inc
and
leave
testb
or
xor
out
rorb
subl
mov
insl
mov
and
aas
rep
mov
mov
or
mov
push
in
sbb
adc
sbb
sbb
popa
push
and
cmp
jb
lds
outsl
enter
xor
rorb
sub
test
int3
and
imull
fwait
idivl
push
jne
lds
out
mov
leave
xchg
push
enter
iret
mov
inc
cmp
bound
lods
mov
ja
fidivrs
out
in
fs
adc
imul
mov
or
xchg
jns
inc
iret
pop
in
and
push
jae
cmpsb
js
sub
loope
and
lret
or
mov
pusha
sub
or
jno
ja
pop
xor
adc
vmread
and
or
je
jb
test
push
mov
int3
ja
adc
iret
fs
sub
clc
or
xor
sti
add
or
pop
int
std
sbb
aad
add
push
ja
adc
and
ret
out
fisttps
imul
push
push
scas
push
push
push
cmp
das
aam
add
mov
scas
lahf
in
shlb
test
fildll
push
mov
dec
inc
push
mov
rolb
jno
fdivl
jecxz
pop
add
inc
les
adc
out
divb
pop
jb
push
cld
test
sbb
popa
in
xchg
nop
test
sub
jecxz
insb
mov
jne
push
int
pop
dec
jo
cmp
cmp
movsl
lret
test
out
pop
or
add
pop
into
decb
test
xchg
add
ss
sub
icebp
and
mov
xor
add
and
lcall
and
pop
loop
data16
adc
mov
lcall
outsl
lods
add
xchg
cmpsb
xor
sti
out
pop
pop
mov
in
lods
sbb
xchg
push
mov
or
nop
xchg
in
sbb
push
dec
push
clc
das
inc
data16
cmp
jmp
sbbl
sub
add
stos
loopne
or
lods
jecxz
or
cmpsl
or
mov
imul
or
mov
jle
sbb
cwtl
movsl
rcrl
dec
es
fwait
push
arpl
in
sub
adc
xor
ret
jp
xchg
pop
outsb
das
and
jp
lds
inc
popf
ds
xchg
std
bnd
cld
push
mov
pushf
mov
repz
gs
push
and
add
push
fisubrl
cmpsl
fildl
sahf
imull
out
ljmp
pop
loop
pop
aam
ret
aam
call
or
or
out
pop
adc
xchg
sub
jns
and
lds
push
repz
lods
xor
call
or
es
add
loop
into
and
adc
stos
pusha
push
repz
mov
xor
sti
xor
sahf
xor
sub
pop
sub
int
jge
pop
jo
push
cwtl
cld
loop
jp
imul
jl
mov
loop
mov
cwtl
sbb
icebp
outsl
call
mov
mov
mov
lcall
push
add
pusha
cmp
push
mov
addr16
mov
stos
lahf
roll
sub
cmp
push
mov
sbb
nop
xchg
lea
cmp
mov
daa
add
mov
sub
shrl
pop
inc
in
imul
mov
or
cmp
adc
dec
lret
lods
punpckhwd
push
inc
dec
adc
mov
es
jo
cmp
outsl
shlb
sbb
testb
dec
pop
pop
inc
xchg
or
out
xchg
ja
fsubrs
xchg
mov
stc
popa
xchg
in
leave
mov
mov
hlt
iret
cmp
repz
sub
fsubp
cmpsb
xchg
mov
push
icebp
push
data16
jg
sahf
daa
sti
jg
mov
in
jnp
lds
fisttpl
mul
or
pusha
in
ret
jbe
ja
xchg
ljmp
xor
add
dec
test
xchg
mov
out
cli
or
dec
pop
push
test
pop
mov
stos
out
mov
lods
and
inc
addr16
je
inc
ret
jo
fmuls
out
cmp
negl
imul
insb
mov
sub
pop
aaa
xor
pop
jne
lcall
jnp
jne
jns
ljmp
scas
sbb
bound
pop
nop
xchg
sbb
xlat
pop
push
lahf
cmp
add
lods
adc
arpl
lds
repz
ss
lock
mov
mov
addr16
xor
mov
sbb
xor
push
js
mov
and
sbb
das
jmp
xchg
pop
adcb
mov
sub
ds
push
jb
lret
xchg
inc
mov
pop
fnstsw
and
add
adc
push
jb
adcl
loop
mov
jns
lcall
scas
negb
xor
dec
ficoml
pop
fidivrs
aaa
mov
loop
xchg
push
mull
mov
iret
and
mov
add
call
add
negl
sti
push
addl
into
jnp
and
dec
mov
push
pop
int
cmp
inc
arpl
popa
or
pop
cmp
ds
or
or
popf
push
scas
push
out
mov
adc
sbb
fwait
mov
jo
loop
push
mov
fnstcw
aaa
push
dec
adc
sarl
sbb
xor
pop
loope
icebp
lahf
popa
cmp
pop
xor
and
leave
aad
lcall
cmc
add
push
lods
mov
test
ljmp
int
cmpsb
clc
ljmp
movsl
rcrb
cmp
sbb
data16
mov
out
adc
jbe
sbb
pop
mov
jp
jo
push
outsb
xlat
inc
jnp
and
aad
adc
sbb
push
push
sub
adc
xlat
adc
scas
aas
jp
or
popf
mov
pushf
jns
xchg
mov
stos
cmp
sub
testl
pop
sbb
test
pop
adc
xlat
das
sar
xor
sub
mov
and
xor
int
shlb
je
jle
cltd
sbb
cmp
sub
js
inc
pop
push
cld
mov
fcomip
push
mov
out
push
loopne
dec
sahf
mov
dec
add
shl
dec
daa
adc
sub
jge
push
out
nop
and
fbld
xchg
ret
cld
mov
push
dec
push
adc
nop
popf
mov
mov
push
and
adc
lret
push
lods
add
mov
mov
and
int
xor
jmp
xor
cmp
sub
adc
xchg
mov
out
pusha
mov
loop
addr16
cli
add
push
aam
jl
mov
and
mov
cwtl
sbb
pusha
xor
pop
ret
xor
pand
cmc
push
mov
xchg
xchg
dec
leave
pushf
xor
mov
fwait
addr16
lock
pop
mov
lods
pusha
repz
xchg
adc
popf
in
insb
push
jmp
lods
push
movsb
push
jo
inc
xor
and
addr16
push
adc
xchg
sub
lcall
lret
in
adc
cmp
cmp
std
add
mov
stos
cmp
insb
dec
fstp
dec
adc
fisubrl
popl
sbb
das
mov
cwtl
cmp
adc
andb
pop
rcrl
mov
out
sub
imul
xchg
adc
in
insb
popf
mov
dec
inc
jbe
mov
bound
arpl
pop
ss
pop
sbb
imul
pop
popf
mov
inc
rcrb
popl
js
stc
push
stc
cmpsb
xor
inc
movsb
inc
push
scas
in
das
mov
and
call
mov
sti
jbe
dec
imul
mov
in
loop
xor
mov
inc
mov
inc
sub
add
sub
daa
push
fcom
test
push
pop
es
sbb
addr16
fwait
movsl
jle
cmpsl
gs
testb
icebp
stos
fwait
xor
jp
fstpl
pop
cmp
pusha
and
addr16
ret
fprem1
cwtl
xlat
sarl
adc
xor
sarb
sti
fstp
mov
sti
add
sti
out
shr
mov
or
mov
push
dec
fcoms
fwait
add
mov
enter
pop
fbld
mov
inc
sti
movsb
jp
fs
adc
dec
scas
push
mov
jne
repz
outsb
mov
stos
xor
addps
mov
test
pop
cmpsb
cmpsb
cmp
mov
adc
or
push
sbbl
adcl
mov
adcb
movsb
jecxz
notb
lahf
lds
scas
test
or
jno
loopne
dec
outsl
lock
dec
sbb
negb
fisttps
lret
int3
xor
mov
rol
cmpsl
lods
in
mov
xchg
jecxz
out
or
sbb
xor
xor
mov
sub
call
outsb
jns
fsubrs
adc
add
bound
or
fnstenv
fdivs
mov
mov
dec
inc
imul
pop
js
mov
fbstp
in
mov
push
ja
cltd
lcall
cld
jg
xor
dec
loope
ja
mov
inc
cmp
xchg
rcll
packuswb
lock
xor
mov
mov
test
inc
das
mov
cmp
push
scas
sub
push
mov
pusha
in
push
stos
jecxz
cmp
and
cwtl
dec
jae
or
clc
subb
stos
outsl
stc
sub
push
xchg
ret
mov
aam
mov
addr16
mov
sbb
hlt
mov
push
push
push
mov
jne
testb
movswl
jp
mov
mov
lods
in
addr16
mov
add
clc
aaa
mov
fstps
ljmp
fstpt
sbb
pop
push
sub
pop
jbe
jmp
push
call
rcrb
aas
mov
out
int3
ljmp
mov
cmp
out
je
xchg
nop
clc
pop
mov
mull
mov
out
cwtl
into
lahf
mov
sub
xlat
enter
mov
push
add
into
fs
lret
in
sub
std
ret
and
inc
bound
scas
dec
cmp
repz
mov
mov
jg
lods
filds
in
jge
or
andl
push
sti
sti
test
imul
mov
icebp
insb
mov
lahf
les
aad
leave
ja
push
fidivrs
out
js
cmp
shr
xor
cltd
sbb
cmp
lods
add
call
in
popa
push
sub
add
push
sub
out
mov
iret
jne
cmc
into
in
sbb
mov
xor
dec
jmp
and
lret
fs
sub
fildl
lods
xchg
mov
into
lret
dec
mov
pop
xchg
out
adc
push
clc
in
cmp
jae
aaa
or
jl
enter
sub
das
jl
pop
or
jae
clc
nop
fcomp
imul
pop
dec
pop
inc
cmp
js,pn
or
xchg
pop
into
test
arpl
scas
ljmp
mov
dec
cmpsb
pusha
dec
in
aaa
daa
dec
or
cmp
jmp
movl
and
out
jnp
jb
and
or
addr16
xchg
mov
pop
cli
xlat
std
mov
mov
shll
add
and
arpl
push
push
push
jp
push
sbb
popa
mov
jge
push
ret
enter
rorb
mov
in
daa
popf
aas
js
fcoms
lods
decl
or
fsqrt
out
in
insb
inc
dec
inc
jne
xlat
test
adc
cmp
lods
mov
cmp
jns
subb
lds
cmpsl
cmp
inc
lds
or
jo
lcall
mov
and
mov
gs
lret
push
cmp
repnz
push
dec
mov
jbe
pop
jns
sub
out
jbe
cmp
jg
stos
add
mov
dec
lea
or
out
xchg
in
stos
nop
aad
xlat
js
or
sub
outsb
jp
mov
pop
mov
testb
mov
loop
shll
sbb
sbb
in
ja
xor
std
je
and
sti
jecxz
jnp
mov
dec
sub
mov
pop
jmp
aaa
mov
enter
jle
mov
or
mov
outsb
lret
jnp
jp
movsl
loopne
xchg
fnsave
push
dec
repz
dec
inc
or
out
je
arpl
push
enter
fadds
adc
leave
or
pushf
into
cmpsb
and
jmp
pop
mov
and
ror
pop
outsb
stos
cmc
jmp
pop
pop
adc
sub
mov
dec
pop
pop
orl
enter
enter
mov
cmp
jge
xchg
iret
pusha
lret
cli
or
mov
inc
shlb
mov
jb
jnp
lds
lcall
ret
out
negb
sub
mov
inc
cltd
dec
sbb
int
mov
arpl
movsb
es
cmp
ficomps
push
je
dec
and
das
push
inc
inc
mov
out
and
inc
mov
fnstcw
dec
pop
stos
xor
or
pop
std
ret
sbb
mov
xor
or
test
aam
insb
cmpsl
mov
xchg
fisubrl
mov
test
mov
pop
or
ret
imul
lret
mov
xchg
fs
sub
inc
je
pushf
in
cltd
and
psraw
jno
xchg
push
fdivrs
pop
push
or
add
aam
test
mov
mov
lret
loop
bnd
sbb
or
xor
pop
mov
lret
imul
cmp
fdivs
xlat
dec
xchg
lea
movl
jle
lock
dec
pop
fldenv
mov
lcall
dec
pop
xorb
scas
add
out
adc
adc
or
imul
add
adc
mov
xchg
push
insl
xchg
pop
push
loop
sahf
lea
add
repnz
inc
push
pop
leave
ja
push
push
bound
es
sbb
ds
jecxz
cmp
mov
lock
bound
pushf
sbb
sub
test
jle
jge
adc
mov
imul
test
or
cmpsb
outsl
gs
subb
jne
mov
adc
mov
dec
inc
lea
mov
ficomps
sbb
ror
mov
repnz
dec
cs
add
cltd
push
cli
sbb
jb
out
jae
aad
stos
xchg
pop
fimull
cld
xchg
pop
cmp
shlb
xchg
loope
sbb
push
cltd
leave
in
daa
add
clc
int3
sub
test
mull
ljmp
stc
cli
lret
rcl
xchg
adc
popa
and
leave
add
add
push
adc
xor
pop
add
and
mov
int3
gs
bound
cmp
lret
rcrb
fsubl
inc
outsb
sub
popa
or
aaa
lahf
xchg
dec
inc
mov
push
std
mov
ds
fdivrs
jmp
dec
pop
mov
dec
adc
test
fucom
mov
mov
outsl
popf
inc
stos
cs
addr16
popf
pop
mov
ret
testl
jp
add
dec
fidivs
leave
test
popf
repnz
add
loopne
pop
xor
ja
in
rcll
addl
mov
cmp
aaa
pusha
test
cmp
rorl
out
jnp
mov
test
or
repz
ss
fmull
out
in
inc
mov
mov
jg
adc
inc
fwait
push
shll
ret
adc
cmp
sbb
xchg
icebp
adc
push
jge
lea
dec
push
test
lahf
dec
das
pushf
sub
or
inc
mov
or
mov
xchg
cmp
stos
push
mov
sbb
sub
ja,pt
push
imul
aam
adc
repnz
addr16
xchg
add
sarl
inc
mov
shll
push
out
adc
fdivr
repnz
loope
fwait
sbb
int3
hlt
jecxz
negl
dec
xchg
shl
fs
rcr
aam
aam
int
sbb
fs
popf
adc
xor
add
clc
orb
xchg
pop
dec
adc
lahf
lds
fidivrs
aad
cwtl
pop
mov
sahf
jmp
mov
int
ss
dec
insl
xchg
mov
idivb
sub
jmp
pop
xor
inc
mov
pusha
inc
in
outsl
data16
inc
das
mov
push
sub
xchg
lods
xchg
mov
xchg
jl
mov
and
push
sbb
fcom
and
cmp
xchg
stos
jecxz
jne
je
aam
sbb
add
push
cltd
pop
ja
fimuls
xchg
fdivrp
mov
pusha
out
jne
and
ja
popf
pop
mov
xor
fstps
hlt
aam
xchg
pop
ja
xor
aam
push
mov
movsb
fimull
inc
mov
adc
inc
in
lcall
mov
sbb
xchg
fnstcw
sbb
jno
or
cmp
xorb
mov
stos
push
push
mov
ss
fs
jge
cmp
cmpsl
pop
fs
pop
or
inc
inc
mov
mov
sahf
fldenv
int
cmp
repz
pop
mov
fs
cli
mov
cwtl
mov
enter
icebp
jmp
mov
subb
push
add
push
xchg
imul
das
jbe
push
inc
loop
or
or
mov
out
shr
ret
mov
fsubr
add
ja
sub
and
enter
fistps
arpl
rclb
push
dec
push
xor
lea
mov
pop
std
and
iret
mov
in
jge
mov
xchg
lahf
pusha
roll
xchg
shlb
dec
js
dec
push
and
sbb
dec
fcomps
xchg
sub
mov
mov
push
cmp
adc
int3
push
es
dec
ficoml
cmp
shlb
insl
dec
adc
and
jl
fwait
ret
shlb
pop
jecxz
adc
mov
jo
push
xchg
out
lcall
ret
mov
jo
loope
dec
jmp
mov
sbbl
int
cmp
xor
psadbw
enter
add
mov
aam
and
dec
call
inc
aaa
mov
mov
rorl
repz
adc
push
xor
outsl
out
cmpsb
inc
in
add
adc
sbb
ret
sub
xchg
or
out
jecxz
out
jns
js
sub
icebp
mov
add
jge
adc
pop
push
aam
jae
or
jns
mov
jecxz
or
stos
dec
add
mov
or
jne
arpl
es
pusha
push
loopne
cld
adc
inc
into
mov
jo
jmp
cmpsl
mov
jnp
std
testl
sub
roll
pop
movsl
mov
test
dec
jl
xor
jp
aad
mov
bound
out
xor
popf
adc
icebp
jg
push
or
adc
enter
xor
pop
cmpsb
mov
xor
outsl
push
cmp
add
pushf
mov
push
or
scas
cwtl
add
sub
mov
push
cmp
jmp
mov
mov
adc
mov
dec
cmp
cmp
sub
popa
aas
add
inc
rorb
ljmp
pop
inc
pusha
mov
mov
cld
xchg
xor
xor
pop
push
lahf
add
jnp
imul
mov
pop
loopne
pop
jbe
add
jnp
fwait
jne
inc
cmp
fdivrs
bound
mov
push
dec
jb
movb
mov
pusha
enter
xchg
cmpsb
nop
or
cmc
aas
xor
jp
xchg
cmp
popa
mov
cmpsb
jae
stos
cmpl
subl
jne
xchg
mov
cli
lret
and
pop
test
and
push
out
mov
jl
mov
sti
frstor
ret
mov
dec
mov
dec
test
fistl
add
scas
xchg
shrb
outsb
push
mov
xchg
test
cmp
movsb
in
sub
xchg
cmp
cmp
aad
shl
dec
cmp
jecxz
iret
sbb
in
pop
insb
jmp
fsubr
xchg
mov
adc
sbb
pop
xchg
xchg
mov
fdivp
ret
and
inc
daa
jmp
stos
stos
add
pop
mov
out
movsl
test
add
pushf
ret
cmpb
dec
pushf
push
xor
fs
in
loope
shlb
pushf
addr16
inc
and
mov
iret
imul
add
iret
add
fistpll
add
mov
movsb
cmpsl
mov
test
les
adc
clc
add
push
sbb
add
cmp
insb
jg,pn
push
mov
jae
pop
pop
xchg
je
rorl
lcall
xchg
mov
lret
pop
adc
shr
mov
inc
sub
cltd
sbb
sbb
cli
sbb
or
cmp
push
cltd
shlb
mov
mov
adc
mov
and
and
xchg
gs
xor
mov
pop
push
clc
out
pop
inc
leave
push
dec
jbe
jo
pop
sub
sbb
faddl
ljmp
add
xor
xchg
or
xorl
mov
popa
jmp
jns
ljmp
jmp
inc
dec
push
je
aas
fistpll
pop
insl
mov
pop
jo
cmp
cs
sarl
iret
icebp
xor
enter
inc
pop
call
icebp
xorl
pushf
inc
loop,pn
cmp
fiaddl
call
sbb
lret
gs
sbb
cmp
cmp
and
jmp
or
dec
mov
shl
fcomps
lret
mov
test
cmp
and
mov
push
pop
bound
enter
lcall
xorb
cmp
ljmp
cs
xor
aam
push
stc
loope
sub
test
xchg
lcall
jecxz
mov
inc
mov
fs
aaa
repnz
andb
add
lds
jl
cld
repnz
add
adc
adc
dec
je
sbb
push
cmp
jle
jmp
test
cli
xchg
mov
or
in
out
lcall
sbb
mov
movb
sar
push
adc
das
js
xchg
call
adc
lahf
hlt
cltd
lea
mov
push
aad
popa
ljmp
repz
xchg
xchg
int3
inc
bound
jle
loope
pop
data16
repz
push
ret
adc
jnp
push
lds
jnp
cltd
jg
pop
mov
push
idiv
dec
cmc
or
loope
mov
cmp
dec
xor
dec
cmp
push
hlt
mov
push
aad
jne
adc
adc
push
cltd
mov
and
pop
jne
push
cmp
xor
dec
push
enter
lods
jno
rcl
aas
cmp
jns
in
scas
xor
call
mov
inc
ja
aad
xchg
aas
test
lret
dec
jg
fisubs
jl
and
and
outsb
jp
jae
arpl
add
int
inc
popf
pop
xor
ds
cmc
movsl
jmp
fistpl
inc
arpl
pop
aaa
pop
in
pop
mov
call
mov
ja
ret
push
js
push
lods
cmp
call
outsb
pop
dec
jns
add
pop
mov
sbb
mov
lahf
stc
addb
mov
hlt
movsl
xor
data16
mov
subb
pop
or
cmp
stc
sar
loope
ja
adc
adc
sub
pop
cmp
cmp
dec
dec
jno
pop
jo
cs
or
cmpsl
mov
jae
cmp
scas
dec
les
adc
push
jb
in
lret
mov
xchg
jg
jmp
jecxz
mov
gs
pop
push
fsubrs
arpl
xchg
add
add
into
in
sbb
mov
ret
arpl
xchg
sub
sub
dec
cli
loope
rcll
stos
mov
push
stos
jnp
dec
mov
testb
push
cmp
lds
push
test
js
adc
fsts
popa
fwait
jge
adc
iret
fisttpl
test
mov
in
movsb
dec
icebp
sbb
dec
mov
es
or
push
sub
cmp
iret
hlt
test
push
jg
test
shll
lods
jge
jbe
clc
lret
cmc
mov
push
dec
or
jb
sbb
add
rorb
imul
imul
jnp
lret
xchg
loope
dec
ds
pop
scas
and
dec
jge
xchg
in
iret
mov
jbe
xlat
shl
or
hlt
sub
ljmp
mov
loop
mov
xchg
mov
jae
or
test
arpl
cmp
add
pop
push
lahf
jae
dec
in
mov
jns
xor
xorl
scas
addb
sub
frstor
and
add
aad
mov
jl
sbb
jne
outsb
xchg
sbb
and
sub
adc
cmp
scas
pop
sbb
addr16
dec
in
loop
pushl
lret
mov
das
in
popa
ficoml
dec
in
rcrb
aaa
mov
or
mov
imul
jne
xchg
loopne
outsb
out
mov
lret
mov
insl
jecxz
shll
sbb
push
mov
out
dec
pop
test
popa
inc
push
inc
out
dec
sbb
pop
arpl
aam
aad
pop
adc
out
cmp
xor
out
mov
sahf
test
je
mov
cmpsb
aaa
in
mov
adc
shl
clc
sbb
testb
push
cli
and
mov
loop
push
test
inc
sbb
sub
push
xor
sub
add
js
inc
adcb
push
fidivl
in
pop
aas
sbb
jb
jecxz
xchg
xchg
pop
inc
lock
sub
pop
fistps
imul
sub
test
fcomip
imul
mov
pop
and
mov
jle
mov
je
inc
dec
jno
arpl
frstor
pop
mov
popa
sbb
outsl
lods
adc
and
ret
or
sbb
div
or
dec
inc
xchg
mov
jmp
or
jecxz
aad
xlat
dec
mov
out
and
std
lods
pop
push
cmp
push
cwtl
cmp
pop
fdivrl
out
leave
xchg
dec
lahf
pop
ror
pop
popf
pushf
or
cmp
cmp
sub
mov
sbb
in
je
mov
pop
es
pushl
fildl
mov
mov
nop
scas
xchg
in
and
negb
loope
divl
jmp
scas
shlb
adc
out
push
mov
inc
lock
inc
into
mov
outsb
push
mov
mov
pop
push
rcll
sar
mov
sahf
data16
aas
mov
push
sahf
test
mov
or
lcall
inc
mov
jge
int
iret
arpl
lret
mov
sti
out
mov
push
mov
enter
jae
aaa
test
stos
add
out
sbb
movsb
lods
cmp
lcall
and
mov
adc
fs
movsb
pushf
es
aas
ja
pop
decl
hlt
mov
fldenv
cmp
nop
lret
push
pop
mov
lret
and
mov
aas
cmp
mov
sub
imul
js
push
mov
call
or
or
popf
ret
sub
jecxz
cmp
stos
repnz
ret
mov
xchg
out
cli
daa
mov
loop
pop
mov
outsb
aas
fsubrs
lcall
ficompl
dec
ja
sarl
and
xor
rcrb
mov
idivl
mov
sbb
out
mov
mov
sub
pop
dec
mov
mov
je
insb
jno
in
jg
mov
and
int
mov
loop
pop
iret
pop
dec
inc
sbb
xlat
fstp
add
lret
dec
leave
push
imul
pop
push
inc
popa
lea
xlat
xchg
cwtl
fisttps
push
add
jecxz
lahf
mov
push
ljmp
mov
ret
idivl
cmc
ret
mov
inc
push
popf
sub
add
xor
inc
cmp
icebp
push
mov
push
jecxz
cmpsb
mov
mov
in
mov
popa
ret
jae
out
mov
jbe
mov
cld
in
in
adc
jns
xchg
xchg
bts
out
arpl
jl
pop
cmpsb
cli
mov
shrb
xchg
test
stc
ljmp
imulb
ja
lock
in
mov
iret
and
in
mov
lods
shll
mov
enter
cmpsb
lock
data16
cmp
adc
inc
push
fisttpll
fstpt
test
in
addl
aam
mov
inc
andl
aaa
mov
add
add
cmpb
insl
mov
jo
ljmp
aaa
mov
movsb
jne
inc
xor
push
movsl
mov
xchg
sub
in
movl
fsubl
sahf
faddp
sbb
daa
gs
xchg
fs
imul
dec
push
outsl
pop
xchg
pop
mov
pop
dec
pushf
fmull
xchg
ja
bound
inc
cwtl
or
pop
add
outsb
jp
mov
sub
es
leave
stos
cmp
push
mul
mov
inc
nop
mov
xor
adc
adc
orl
xchg
sub
daa
jb
ret
faddp
adcl
imul
cltd
xchg
cmp
arpl
test
arpl
icebp
bound
cmpsb
mov
jo
sub
call
mov
rclb
imul
aas
push
in
dec
sbb
xor
sub
je
inc
sub
jae
push
dec
mov
and
sub
lods
mov
stos
call
jns
outsl
ss
push
dec
and
jle
sbb
test
faddp
sbb
push
fists
inc
mov
pop
out
outsb
cltd
sbb
fs
inc
sub
scas
and
mov
cltd
fwait
push
inc
xor
stos
outsb
into
es
xchg
xchg
add
sub
cmp
push
fdivrl
add
cmpb
cwtl
jp
ret
pop
ds
sub
lds
xlat
arpl
sbb
push
cmp
dec
out
dec
xchg
lret
dec
or
leave
xchg
push
pushf
out
ljmp
mov
push
shlb
loop
dec
das
push
test
mov
cmp
adc
loope
mov
stos
popa
movsl
jnp
cs
sahf
mov
pop
jns
push
mov
add
fistpll
jecxz
cmc
cmpsl
pop
adc
enter
leave
popf
mov
or
dec
mov
imul
cs
cmp
nop
rolb
inc
push
xor
or
add
in
mov
nop
movsl
iret
push
cmpsl
rcl
imul
fists
nop
pop
rcll
or
gs
out
mov
and
loope
cs
insb
or
pop
enter
xchg
fdivs
mov
rcrb
sti
sbb
mov
push
cmp
cmc
sbb
and
push
mov
inc
cld
jp
leave
cmp
int
mov
out
out
push
inc
sub
aaa
xor
add
xor
lods
pop
test
dec
xor
stos
cwtl
dec
lods
inc
sbb
nop
imul
lea
add
scas
dec
xlat
push
lcall
fs
ja
bound
cmp
cwtl
or
cmp
cmc
jmp
into
mov
outsb
add
insb
adc
jb
fiadds
push
push
addr16
xchg
inc
fdivrs
jnp
int
lcall
in
out
stos
sub
xchg
dec
repz
dec
lock
ret
pop
je,pn
cltd
inc
js
adc
stos
dec
pop
xor
cs
sub
push
cmp
rclb
daa
add
loope
repnz
pop
jge
insb
cld
sbb
gs
jle
lds
and
loop
xchg
fisubrl
inc
push
fs
jle
shl
push
out
pop
mov
lret
jmp
add
imul
adc
jle
add
cs
out
push
jae
mov
mov
loop
push
lcall
jbe
mov
sahf
lret
sahf
loopne
enter
cmpsb
cld
int
lds
es
flds
xor
sti
inc
jg
sti
out
stc
das
dec
iret
shl
pusha
sub
outsl
jp
inc
lock
jmp
mov
les
mov
ss
pusha
leave
in
inc
loope
jge
cltd
pop
xor
cmp
mov
pop
mov
clc
mov
cmp
js
lret
pop
ret
xor
lods
xchg
jecxz
add
test
push
pusha
mov
fnstsw
cli
mov
out
sub
dec
add
stos
mov
jb
fimull
ljmp
dec
cmp
mov
push
jp
mov
int3
cmpsl
imulb
pop
aaa
adc
scas
mov
push
adc
es
lea
pop
nop
sti
jne
ret
lcall
jbe
lods
jnp
sub
ficoms
fs
je
push
outsl
jge
sub
in
lds
and
mov
ror
jne
addr16
xchg
rcrb
push
pop
scas
lock
jle
xchg
xor
bound
jbe
cmp
jp
jg
leave
popf
mov
pop
imul
lock
add
mov
mov
sbb
popa
dec
ficomps
dec
adc
fisubs
cmp
jmp
hlt
jl
inc
test
inc
pop
push
xchg
xor
mov
jne
pop
xor
adc
jo
out
pop
nop
push
sub
wrmsr
popa
and
gs
nop
add
bound
add
jnp
imul
mov
repnz
sbb
shl
sbb
pop
pop
dec
mov
loope
add
and
out
dec
out
xor
mov
xor
orb
xchg
das
into
push
iret
rclb
sbb
jmp
int
lea
sahf
pop
shlb
test
jp
cmc
gs
mov
ljmp
push
int3
inc
sbb
adc
mov
sahf
jecxz
jbe
xchg
in
mov
clc
pop
ret
cmpl
jmp
xchg
inc
cli
stc
mov
cmc
adc
and
faddl
or
bound
addr16
insb
xchg
icebp
mov
inc
ljmp
jmp
ret
repz
lock
cltd
lahf
repnz
sub
xchg
sub
inc
or
push
insb
xchg
pop
es
mov
adc
pop
aad
mov
std
nop
adc
sti
mov
pop
xchg
imulb
std
std
cmp
inc
cltd
or
push
sub
rcrl
pop
mov
dec
push
sub
mov
mov
fldcw
sbb
out
leave
xor
xchg
pop
daa
sar
jb
outsl
pop
add
ds
pop
sub
neg
push
xchg
aad
and
add
dec
stos
popf
lds
dec
movsl
sbb
add
or
adc
imul
mov
dec
jno
test
jl
push
test
rcr
jl
insl
dec
hlt
jne
daa
xchg
mov
pusha
inc
dec
sub
mov
rorb
mov
dec
mov
mov
dec
mov
fistl
mov
xchg
fs
sub
in
cmp
scas
leave
or
push
sub
arpl
xor
iret
push
adc
inc
adc
push
jbe
in
adc
daa
cmpsl
enter
out
mov
imul
arpl
mov
repz
xchg
jb
inc
xchg
xchg
jns
jo
test
inc
mov
inc
dec
leave
std
aam
xor
mov
iret
ret
cmp
jle
xchg
pop
fcompl
sub
inc
fwait
scas
iret
mov
mov
xor
mov
jno
xor
inc
test
mov
out
inc
daa
sti
loop
and
aad
loopne
xor
pop
xchg
dec
pop
sbb
mov
addr16
in
mov
test
dec
cmpsl
xchg
repz
push
pop
inc
inc
mov
pop
aam
nop
jl
pop
adc
repz
adc
dec
sbb
mov
cltd
daa
jne
cmp
pop
enter
xchg
leave
and
push
stos
inc
pop
dec
jbe
inc
in
xchg
dec
or
xchg
and
push
cmp
mov
adc
lods
popa
test
insb
sbb
pusha
mov
pop
addl
out
pusha
xchg
aaa
jno
mov
negb
outsl
clc
repz
ret
jns
imul
dec
jl
xchg
add
xor
pop
and
fstl
ljmp
cmp
hlt
cmpsl
pop
leave
jnp
test
or
in
jb
push
mov
sub
lea
fildl
mov
sbbb
xor
inc
aad
insb
inc
lret
scas
shr
adc
movsb
test
and
push
sub
xor
sbb
sub
mov
add
les
fstpt
push
ss
push
test
inc
mov
popa
imul
jbe
rorl
jmp
dec
pop
or
sbb
fimuls
inc
test
mov
pop
dec
orl
jmp
mov
into
stc
call
mov
jbe
out
lds
iret
dec
mov
pop
mov
cltd
imul
mov
inc
aas
lods
inc
lods
xchg
sbb
js
xlat
mov
outsl
aas
jmp
scas
and
jmp
addl
pushf
push
add
jg
popa
aas
clc
pop
dec
sub
icebp
xlat
lahf
into
popa
jns
cltd
imul
mov
or
jne
or
lahf
xor
push
add
inc
and
mov
sub
divb
nop
inc
fcomps
pop
lea
cmp
adc
in
push
lcall
fists
push
call
push
cwtl
adc
xchg
mov
inc
mov
lods
mov
inc
movsl
pop
cmpsl
shll
icebp
outsl
or
and
sub
mov
jecxz
movsb
or
test
js
xchg
or
subb
pop
clc
push
mov
xor
cli
mov
mov
rcrl
pop
sarl
inc
sub
sub
neg
pop
add
cmp
test
cmp
cmpsl
inc
sub
fwait
mov
aad
jl
jmp
pop
mov
push
shl
into
cli
jno
add
aaa
ja
sbb
pop
out
mov
pop
cmp
in
push
mov
mov
pop
cli
mov
jg
jmp
repz
cmc
dec
cmp
stc
js
notb
fcoms
adc
std
ret
mov
ret
add
cmpsl
insb
adc
push
sbb
cmc
inc
arpl
test
xchg
insl
cmpsl
push
cmc
addr16
xchg
or
xchg
mov
xchg
mov
mov
sbb
pop
lret
push
sub
repnz
mov
popf
mov
cmp
xchg
cld
pusha
xchg
out
loope
push
imul
xorb
ljmp
or
in
jmp
rcll
ljmp
int3
stos
dec
call
pop
sub
stos
push
sbb
stos
push
stos
xchg
jecxz
js
mov
cmp
or
insb
inc
adc
adc
push
lcall
cmp
xor
das
mov
stos
stc
ret
test
xchg
mov
pop
mov
movsb
inc
cmpsb
jae
sbb
mov
push
negl
mov
sbb
je
push
outsb
sub
fsub
inc
and
mov
xor
movsb
mov
cmp
cli
movb
adc
movsl
fstps
xlat
pop
add
int
jae
and
lret
jnp
add
mov
insl
adc
out
stos
add
in
popa
dec
out
gs
jle
cli
cmpsb
xchg
pop
mov
movsb
addr16
jae
ljmp
mov
test
rclb
pop
je
lods
pop
mov
inc
add
sbb
ss
mov
mov
dec
fdivs
sbb
xor
sub
adc
repnz
sti
or
or
inc
adc
add
aas
push
and
mov
sbb
insb
fidivrl
nop
inc
and
mov
jns
ret
add
pop
lret
je
inc
dec
lahf
mov
push
in
movsl
test
dec
sbb
int
movsb
and
daa
cmp
cmp
add
jmp
lods
repz
mov
push
jne
sub
insl
xor
popf
mov
addr16
jg
ja
mov
aam
or
fmul
add
sar
xchg
fdivr
loop
sub
jae
xchg
imul
mov
js
mov
add
out
pop
sub
aaa
mov
mov
sub
adc
pop
or
out
mov
xchg
das
xor
clc
outsb
xor
or
test
sbb
sub
test
stc
inc
and
out
sahf
mov
adc
insb
pop
mov
cmp
rcrl
mov
mov
ret
das
mov
mov
push
arpl
test
mov
shrb
adc
xor
das
lret
stc
xor
arpl
cld
shrl
push
into
ja
jmp
aaa
arpl
sbb
dec
jecxz
jno
jnp
sbb
pop
inc
hlt
lods
sarb
ljmp
adc
call
fiaddl
out
out
or
sahf
or
iret
ljmp
rorl
and
mov
iret
sar
lea
fwait
in
pusha
mov
xchg
fcmovb
mov
ss
lea
mov
bound
jle
addr16
fs
daa
out
adc
mov
stc
mov
js
arpl
outsl
pop
nop
lret
mov
sbb
lock
adcl
fiadds
addr16
gs
mov
xchg
fucomip
xor
test
inc
fxch
sbb
test
testb
jge
imul
or
std
stos
hlt
insl
lods
in
xor
outsb
call
jne
negl
data16
xlat
or
cmp
test
jge
gs
mov
sub
scas
test
les
popfw
lcall
aam
xchg
ds
mov
xchg
dec
mov
sub
jne
mov
xchg
or
scas
push
outsl
leave
imul
xor
push
pop
addr16
jne
cltd
lret
inc
std
jb
mov
cmp
ret
cs
scas
lods
cmp
adc
sbb
push
cmpsl
test
cli
cmp
cmp
jl
dec
push
insl
jecxz
adc
into
adc
fwait
sub
pop
in
imul
or
pop
lods
lods
shrl
mov
adc
into
mov
mov
lahf
es
dec
sbb
in
imul
fmuls
sub
xchg
jae
jbe
pushf
cmp
andl
jbe
sub
sbb
pushf
rcrb
mov
xchg
sbb
mov
movsl
movsb
cmp
loop
pop
dec
sbb
xor
repz
arpl
enter
mov
pop
movsb
and
fldcw
test
test
pop
das
mov
mov
push
mov
outsb
into
xor
adc
dec
rclb
rep
inc
es
je
mov
cld
or
add
xchg
xchg
cs
xchg
fildll
int
or
or
mov
stos
dec
dec
xor
jno
jl
das
nop
and
pop
mov
adc
sbb
sar
inc
push
jne
push
scas
inc
test
and
xchg
test
shr
xchg
mov
test
rcrl
ret
int3
bnd
repnz
sub
es
xchg
dec
sub
jge
mov
outsl
icebp
or
pop
clc
std
ss
inc
and
dec
cli
outsb
mov
mov
or
scas
dec
sub
shrl
inc
xor
adc
mov
cmp
in
mov
pop
or
xchg
icebp
and
adc
iret
sbb
sarb
fldt
adc
pop
mov
add
cmp
mov
jmp
sub
dec
call
mov
scas
test
scas
sbb
je
inc
insb
push
dec
push
pop
adc
xchg
fiadds
sbb
jne
stc
insl
or
mov
jl
xchg
shrb
and
mov
sbb
inc
sbb
out
sbb
test
add
sub
mov
or
sub
push
cld
add
cmpb
test
push
jmp
inc
pop
and
aad
idiv
daa
jo
lcall
cwtl
and
aaa
xor
xchg
pop
cmp
dec
hlt
sub
lds
sub
in
and
adc
add
fcomps
xchg
jmp
adc
iret
xchg
cs
xor
fcmovb
adc
cmp
xor
xchg
pop
aam
cltd
cmpsb
mov
test
jno
roll
or
adc
fwait
addr16
outsl
aad
sbb
mov
fstpl
cmp
push
and
jns
pop
mov
or
jg
push
or
fisubrl
cld
jo
mov
ret
xchg
cltd
mov
cmp
push
sbb
cmc
ljmp
pop
sub
fcomps
mov
les
jg
jae
ret
movsl
pop
out
or
in
shlb
add
fnstenv
notb
lds
or
ja
mov
dec
and
xchg
dec
daa
and
pop
and
dec
mov
loop
mov
xor
lea
outsl
rcrl
sub
js
das
das
sbbl
xchg
loopne
jns
jecxz
fldenv
outsb
sub
inc
pop
es
repnz
dec
aas
add
es
arpl
sub
es
add
adc
js
mov
jo
es
addb
push
xor
mov
ljmp
xchg
test
sbb
xchg
fs
jge
pop
push
test
adc
enter
add
mov
mov
dec
pushl
mov
mov
addr16
in
dec
in
mov
lcall
imul
fistpll
mov
mov
jle
push
aaa
pop
push
roll
jo
push
pop
fstpl
jb
cmp
xchg
loopne
ss
push
orl
pop
xchg
xor
or
jo
pop
xor
daa
stc
add
sub
les
loop
cwtl
or
inc
lahf
lret
sub
cmp
popf
sub
fistpl
fucomi
mov
shlb
js
stos
cmp
andl
fs
cs
jmp
clc
fdivrl
call
fmulp
add
add
pop
ljmp
or
jmp
or
mov
adc
or
rcr
push
out
test
and
pop
sahf
sub
movsb
mov
cmp
cmp
cld
test
sti
add
push
stos
icebp
pop
loope
sbb
jns
insl
das
push
add
pop
push
mov
pop
lret
sub
inc
cmp
or
test
mov
jno
cmp
icebp
andb
pop
adcb
sub
loop
nop
jno
mov
inc
testl
or
ja
adc
clc
les
push
addb
fildll
hlt
mov
in
bound
cs
or
sub
insb
push
mov
movsb
cmpsl
push
inc
js
dec
jae
sub
inc
xchg
aam
or
and
loope
and
jmp
dec
and
add
cwtl
xchg
out
fcoms
and
push
pop
mov
in
fsts
je
fstpl
inc
add
jno
and
mov
rcrl
lret
adc
sbb
mov
cltd
xchg
sbb
int3
mov
shll
ret
cmp
dec
sbb
lds
imul
fsubs
xchg
std
xchg
push
aas
pop
push
rcrl
dec
leave
sar
mov
adc
enter
dec
shlb
adc
mov
mov
pop
xorl
adc
mov
xor
mov
les
jns
test
xchg
xor
push
inc
daa
inc
pop
cld
pop
sub
gs
xchg
in
pop
stos
or
insb
push
sbb
cmpsl
sbb
lea
dec
jno
insb
leave
mov
scas
dec
push
and
leave
loopne
dec
jl
inc
sub
inc
ds
enter
stos
sbb
stos
mov
mov
xlat
xor
pushf
nop
jmp
cld
aam
outsl
pop
bndstx
mov
pushf
adc
xchg
push
push
xchg
roll
pop
fstps
lods
push
mov
mov
sub
mov
cmp
mov
xor
sarl
push
jg
cwtl
shrl
ljmp
stc
ljmp
adc
or
push
ja
in
pop
mov
scas
sub
push
push
pop
scas
add
shrd
cmpsb
sbb
pushf
iret
cmp
dec
addr16
mov
adc
cmp
std
jmp
je
add
lea
sbb
jbe
dec
mov
dec
mov
push
sbb
lcall
pop
ret
cli
inc
rolb
sbb
dec
push
cmp
je
cli
cmpsb
fsubl
lret
add
or
sub
xchg
jae
out
outsb
ret
add
mov
testb
adc
add
test
and
mov
mov
ret
loopne
fcoml
mov
cmc
sub
ja
ret
jo
pushf
pop
pop
jge
jl
lea
mov
outsb
pop
and
sbb
and
sahf
je
xchg
outsl
add
xor
les
or
lock
mov
mov
out
inc
test
icebp
test
pop
mov
lcall
jle
push
adc
xchg
imul
xchg
push
pop
xchg
leave
outsb
mov
testl
push
and
mov
outsl
in
fstpt
int3
mov
or
or
shrl
lds
mov
out
cmp
idivl
and
mov
push
fwait
and
fbstp
pop
arpl
add
aas
fwait
xor
cmp
ss
arpl
push
sub
mov
push
sbb
mov
inc
imull
sub
mov
xor
in
clc
jbe
mov
ljmp
rorb
push
leave
scas
shrb
mov
sub
mov
and
sub
out
imul
pop
push
fsubrs
loope
lahf
cmp
dec
sub
jae
out
repz
xchg
mov
sbb
in
imul
xchg
std
sahf
out
mov
fisttpll
imul
pop
xor
ds
aam
mov
push
inc
dec
call
jg
mov
cmp
icebp
lret
insl
pop
sub
dec
sbb
decb
pop
in
fwait
pop
cwtl
jg
jmp
push
adc
add
aad
jge
int3
mov
pop
scas
ss
sahf
cmp
or
jle
addl
imul
jl
idivb
ljmp
push
sbb
jle
lds
adc
orb
imul
les
adc
pop
mov
sbb
pop
jle
xchg
push
aad
sbb
out
mov
xchg
aas
sub
je
aam
fistpl
test
imul
inc
pop
sub
pop
cmp
mov
nop
out
outsb
sbb
xor
xor
insl
imul
jge
imul
jns
adc
cmp
xlat
lock
xor
shll
xchg
push
out
fstpt
pop
add
add
scas
pop
stos
icebp
cmpl
pushf
fld
idivb
sti
loop
sbb
out
dec
pop
xchg
xchg
push
push
fsubp
sbb
mov
sub
mov
mov
push
mov
fistpll
fisttpl
test
aaa
call
pop
push
jle
clc
imul
loope
jg
aad
xchg
dec
pop
xlat
popa
andl
pop
js
adc
std
xchg
dec
pop
shl
fimuls
inc
sub
xorb
lret
daa
je
sbb
xchg
mov
aas
int
js
xchg
adc
jle
dec
subb
fldl
inc
insb
mov
testl
inc
jp
sub
nop
data16
cmp
pushf
adc
hlt
movsl
and
pop
ja
and
adc
dec
sub
push
adc
inc
push
cmp
mov
sahf
dec
cmp
and
push
fadd
jge
test
and
mov
call
stos
imul
data16
sti
cs
and
pop
fldl
cmp
xor
fwait
cmp
lock
ds
sbb
push
sub
fsubp
cmp
cld
inc
cmp
xchg
call
dec
adc
xchg
push
aas
sbb
pop
stos
or
and
dec
mov
adc
lods
pop
cmp
insl
out
mov
xchg
xchg
mov
or
xchg
andb
pushf
lret
dec
clc
scas
insb
and
jae
xchg
and
ret
lea
mov
or
dec
push
add
andb
cli
pop
imul
push
mov
lock
jg
push
invd
loop
inc
pushf
cmp
xor
xchg
lret
je
dec
imul
aam
push
xor
push
or
dec
cmpb
sub
lods
std
jecxz
fwait
jnp
loopne
jl
dec
inc
xor
aas
in
xor
lret
xor
add
push
lret
dec
add
bound
inc
xor
pushf
inc
jmp
in
inc
pushf
dec
or
out
repnz
rcrb
adc
mov
dec
cmp
cmpsl
pop
xchg
int
es
inc
outsl
cmp
js
scas
and
xor
mov
inc
jno
cmp
sbb
lods
rcll
add
cmp
mov
adc
lock
sub
inc
cmp
cmp
push
and
jae
xchg
inc
in
push
popa
sbb
mov
lcall
xor
adc
pop
jnp
movsb
mov
mov
jae
out
call
inc
xor
dec
lods
shl
jl
and
idivl
out
fistps
fisubl
aas
jmp
jb
les
inc
jns
ljmp
push
pop
xor
dec
sub
adc
xchg
jecxz
or
adc
dec
mov
dec
mov
sub
test
aaa
inc
in
mov
insl
xlat
mov
fimuls
inc
mov
sbb
imul
xorl
inc
jns
push
push
fcomip
pop
into
popf
ror
aas
add
or
fisubrs
sub
shlb
stos
sub
inc
and
int
loopne
jle
sbb
adc
popf
push
cmpsl
dec
pop
add
stos
out
rcrl
in
inc
inc
cli
test
adc
ret
daa
adc
lcall
mov
ret
movsb
test
mov
mov
ret
ljmp
in
out
cmp
mov
mov
sbb
jns
das
fcompl
cmp
stc
sbbb
pop
push
push
popf
dec
inc
sbb
add
inc
fdivrl
adc
iret
dec
jle
daa
push
leave
aam
loope
popa
cld
fcomps
pop
jno
pop
xchg
or
adc
mov
test
inc
stc
xchg
test
mov
scas
fidivs
test
xchg
push
push
sbb
xor
xchg
cltd
mov
std
testl
fdivrl
lahf
out
mov
test
sub
out
cmp
jecxz
mov
mov
les
js
jno
mov
adc
dec
mov
mov
adc
popf
cmp
arpl
int3
push
sub
pushf
pop
clc
mov
es
rorb
cli
push
cmpsb
mov
ud1
dec
sub
int3
jnp
in
or
aaa
sbb
lds
loop
mov
xchg
pop
movl
cmc
shl
sbb
icebp
add
test
cmp
lea
fdivrs
loop
push
dec
push
sub
push
lahf
dec
sbb
xchg
inc
mov
add
mov
lods
dec
mov
cmc
ja
adc
subl
fdivs
adc
into
dec
lds
lret
pusha
addb
lea
sbb
xor
pop
mov
aas
push
pop
ss
mov
dec
mov
jae
jae
mov
lods
sbb
out
mov
addr16
shlb
jecxz
rol
push
insb
shll
stos
out
inc
scas
mov
mov
push
jle
popf
sbb
push
jno
std
pop
and
lahf
cmp
add
jecxz
mov
xchg
daa
js
sbbl
cld
xchg
jg
faddp
scas
sbb
pop
ja
mov
inc
push
xor
add
adc
dec
jge
sub
ljmp
sti
or
fstps
mov
je
nop
xchg
mov
ljmp
xor
sbb
or
sbb
movsbl
mov
or
pop
mov
cmpsl
in
in
xor
mov
aaa
dec
and
sbb
sbb
mov
ret
cmp
jb
mov
notl
dec
adc
jne
pop
hlt
inc
push
inc
adc
aam
incl
psrld
push
inc
xlat
jge
jne
push
add
cmpsb
sub
int
jb
mov
stos
in
inc
ret
sub
cmp
ret
lds
mov
push
pop
test
rcll
int
lret
gs
and
push
jp
mov
adc
out
xlat
adc
icebp
dec
lret
jl
sub
pop
hlt
sbb
arpl
fs
xchg
pop
int3
scas
jns
inc
sahf
ljmp
xchg
push
cmp
hlt
jg
cmp
test
dec
inc
mov
push
insl
lret
mov
jne
cmpsb
jmp
scas
addr16
and
xor
imul
sub
in
xor
jl
sahf
push
jg
int3
bound
rcr
in
adc
call
xchg
mov
mov
push
test
mov
std
dec
imul
cwtl
add
js
addr16
in
push
movsl
popf
push
mov
mov
lahf
in
adc
add
inc
sahf
dec
insb
pop
mov
add
call
pop
cmp
or
push
shl
pop
outsb
cmp
inc
mov
mov
adc
sbb
push
jo
and
mov
test
mov
push
addr16
movsl
cmc
rcrb
sub
sub
inc
mov
mov
mov
sub
out
xor
stc
pop
imul
cmpsl
sbb
js
push
fcoms
jae
enter
aas
stc
adc
fcoms
xor
repz
es
sti
pop
xlat
mov
push
es
pop
out
lds
orb
or
or
lds
scas
lock
aad
in
mov
inc
int
popa
jecxz
or
loope
xor
jg
cmp
jno
sbb
fsts
push
mov
mov
sbb
jp
enter
mov
or
fisubrl
cmp
or
push
lods
loop
hlt
out
xchg
popf
scas
or
testl
mov
fistl
xchg
test
outsb
add
repz
add
jp
ljmp
stos
adc
test
fisttps
in
cmp
sarl
icebp
bt
dec
and
cmp
in
sbb
in
clc
xor
in
xchg
popf
sbb
cmp
aad
pusha
sbb
jbe
in
mov
push
bound
into
mov
rcrb
outsb
repz
inc
stos
inc
cwtl
leave
ds
add
add
and
add
ret
sub
pushf
aas
mov
inc
cmp
arpl
mov
mov
and
pop
je
int3
fisubrs
cmp
jo
cld
xlat
inc
dec
adc
mov
or
cmc
sbb
inc
out
mov
loop
ficompl
push
jno
addb
mov
fists
xlat
popa
sbb
sbb
push
fstl
pop
sbb
inc
fadds
jge
fnstsw
mov
icebp
je
and
sbb
in
fwait
leave
sub
xchg
add
adc
add
out
adc
idiv
xor
push
std
xor
das
lods
sahf
xchg
sbb
mov
data16
xchg
mov
dec
and
dec
pop
lods
mov
das
sub
mov
dec
sbb
mov
and
dec
clc
inc
mov
insb
gs
movsl
leave
jno
pop
sbb
enter
pop
outsb
mov
cmovl
push
adc
mov
fiadds
mov
push
pop
xchg
cld
daa
and
gs
test
mov
mov
mov
je
push
jo
xchg
imul
js
imul
add
bound
xchg
mov
mov
mov
pop
mov
cmc
jmp
and
ljmp
or
sarl
sahf
push
mov
popa
out
pop
movsl
mov
mov
push
push
sar
mov
jno
roll
lahf
ljmpw
dec
pushf
xor
outsb
mov
pop
imul
adc
ret
xor
call
push
dec
jl
ja
xchg
and
adc
fnstenv
mov
cmp
std
stos
ret
and
scas
pusha
xchg
mov
or
outsb
sbb
mov
and
xchg
adc
jecxz
or
jmp
xchg
mov
inc
leave
iret
shrb
add
jle
cmp
shrb
xor
pop
jge
imul
iret
add
loop
mov
inc
dec
rorb
repnz
mov
out
inc
or
sahf
nop
nop
aam
movsl
cmpsl
xor
xor
jge
or
push
pusha
orl
sub
ljmp
mov
lret
mov
cmp
sub
xchg
scas
in
or
push
jmp
je
and
popa
push
inc
cmp
fs
mov
push
sub
in
and
lods
iret
or
mov
movsw
xlat
jbe
call
cmp
ret
test
insl
popa
sahf
loop
mov
int
mov
fs
or
lds
test
xchg
jp
xor
mov
sub
neg
mov
dec
imul
inc
cmpsl
mov
adc
insl
lret
sbb
mov
jmp
mov
sahf
fs
mov
jnp
pop
add
cltd
xchg
push
push
jns
xor
ror
out
inc
gs
fs
cmp
mov
pop
sbb
jo
arpl
outsb
cmpsl
xchg
jl
aad
jge
sbb
js
cld
xchg
test
mov
sub
fs
cmpsl
movsb
jmp
bound
inc
nop
inc
mov
cli
jmp
es
cvtpi2ps
call
stos
movsb
add
fisttpl
cli
lds
adc
loop
sbb
stc
rol
aaa
fwait
mov
dec
or
in
xchg
push
mov
push
in
jl
and
adc
mov
or
test
jo
in
inc
cmp
lcall
mov
inc
movsb
fidivrs
lea
fisubrs
dec
inc
xchg
lods
lret
jg
mov
test
push
out
mov
fcompl
shll
fadds
jbe
aaa
xchg
mov
mov
xchg
pushf
nop
imul
lods
ja
mov
pop
icebp
repnz
mov
xor
pop
imul
nop
dec
loopne
cmpsb
andb
aam
dec
loope
sbb
xchg
push
push
outsb
add
pushf
lock
cwtl
sti
dec
mov
pusha
push
sub
mov
in
jnp
cmp
sub
int3
nop
pop
lcall
scas
pop
les
repz
add
cmpsb
ret
xchg
jo
arpl
les
aas
sub
dec
cmp
cmp
sarb
or
lret
ljmp
mov
insl
mov
pop
xchg
sarb
inc
xorb
call
sbb
std
sbbl
mov
arpl
jns
aam
sub
imul
adc
mov
hlt
pop
jg
lret
loopne
test
jmp
cwtl
and
cmpl
call
out
lods
pusha
bound
sbb
int
sbb
jne
push
push
mov
inc
nop
jbe
jmp
aad
cmovs
mov
fistpll
daa
push
push
arpl
f2xm1
shlb
sub
mov
xlat
inc
mov
ds
std
std
jbe
ret
jmp
dec
into
xchg
js
xlat
dec
cmp
or
cmc
dec
jg
les
xchg
mov
mov
addr16
adc
mov
shl
ret
scas
bound
imul
add
std
xchg
test
out
mov
xchg
lds
lret
push
mov
inc
xor
inc
inc
xchg
mov
dec
movsb
add
xchg
push
mov
push
add
jmp
int
xchg
loope
and
pop
es
and
stos
in
inc
adc
insl
lods
fimuls
push
repz
arpl
call
jo
icebp
setle
inc
lret
stos
push
cmpsl
xchg
fs
idiv
dec
mov
scas
add
adc
ljmp
push
add
sub
leave
push
popa
lods
inc
inc
lods
ljmp
cs
and
addr16
lods
cmp
add
js
jne
sahf
mov
or
dec
cmp
fidivrl
mov
clc
fcoms
mov
xor
imul
mov
mov
dec
lret
xorl
add
adc
addr16
add
in
aam
pop
aaa
pop
jle
ljmp
aaa
clc
orl
shll
or
or
and
stos
pusha
addr16
add
or
jp
dec
sbb
jg
mov
les
popf
mov
int3
xor
mov
jg
test
hlt
nop
test
mov
xchg
repnz
inc
sbb
int3
jno
dec
xor
icebp
jle
fcoml
movsb
andl
mov
mov
xchg
sub
ret
adc
and
hlt
cmp
push
hlt
es
in
les
sub
notl
gs
adc
dec
les
mov
lret
jp
sub
lahf
lret
or
pusha
jbe
mov
cmc
call
pop
cmpsb
inc
inc
addl
aas
test
cmp
mov
cmp
insl
xchg
cmc
out
cmc
xchg
insb
and
in
pop
xchg
adc
lock
and
inc
fldl
or
stc
sbb
jl
adc
push
inc
test
inc
pop
inc
cmp
mov
xor
movsb
frstor
insl
cmp
xor
sbb
inc
popf
sti
pop
dec
xor
fbstp
lret
stc
gs
xchg
popa
xchg
sub
addr16
mov
push
pop
fisubrs
inc
movsb
movsl
mov
mov
push
jmp
cld
xor
in
mov
in
call
inc
xchg
add
ret
xchg
pusha
add
sbb
mov
aad
scas
hlt
adc
pushf
jecxz
pop
out
sbb
and
cwtl
pop
je
iret
cld
pop
in
or
ret
mov
repz
sub
imul
nop
mov
loop
sub
mov
lods
xchg
lods
es
ljmp
sahf
sub
in
xchg
cmp
push
inc
mov
push
cld
mov
fdivl
testb
fidivrl
push
jbe
in
pop
mov
mov
pusha
scas
fstps
or
imul
cmp
mov
xlat
enter
pop
addr16
mov
aas
iret
dec
adc
xor
stos
dec
lret
leave
push
dec
add
mov
xchg
out
push
jle
xchg
sbb
mov
cmpsl
cwtl
in
sub
lret
fcomi
jo
jle
pusha
stc
pop
stc
dec
sbb
xchg
xchg
das
popa
popa
stc
in
int3
add
xor
jle
pop
loope
insb
popf
lods
push
test
xchg
sarl
dec
add
insb
mov
addr16
mov
into
lods
shlb
or
lds
or
dec
sbb
mov
pop
out
dec
add
clc
lret
inc
cmp
inc
scas
sub
sbb
mov
mov
jno
leave
jnp
mov
or
es
vmovaps
rcll
into
scas
sbb
cmp
jbe
lods
inc
pusha
and
mov
aas
jne
paddw
xchg
xor
mov
add
mov
icebp
das
inc
test
movsb
add
fldt
jns
pop
int3
pop
mov
fsubs
dec
leave
jg
inc
test
mov
stos
mov
sbb
fnstcw
or
pushf
xor
jmp
cld
jo
or
mov
cwtl
mov
mov
push
inc
and
sub
dec
xor
sar
add
cmp
sti
stos
mov
pop
and
dec
mov
pushf
sbb
or
pop
pop
lret
dec
mov
adc
gs
mov
or
repnz
inc
and
stc
inc
cmpsl
inc
mov
xlat
sbb
xchg
jmp
mov
sbb
pop
add
mov
rorb
rcrb
fsubrl
fcmovnu
adc
cmpb
sbb
in
adc
rolb
lds
xchg
pop
push
xor
mov
jns
pushf
fistps
lret
push
mov
cli
mov
jmp
push
sarl
jmp
loopne
xchg
lds
js
aad
rorb
cmc
cmp
mov
xchg
mov
jle
xor
dec
xor
pop
and
in
mov
mov
cmp
pop
dec
roll
mov
imul
sub
imul
sbb
push
and
xchg
shlb
inc
cmp
leave
jp
mov
jo
xchg
or
push
test
adc
mov
in
movsl
fldcw
jp
xchg
adc
in
sbb
pop
xchg
push
gs
mov
fdivl
or
pusha
sbb
dec
and
mov
dec
out
mov
outsb
fdivr
xchg
in
imul
bound
loopne
jo
xchg
cwtl
cmp
mov
mov
fdiv
xchg
push
loopne
sub
es
fcmovu
cwtl
and
fidivs
inc
fisttpll
jb
stc
mov
jecxz
loope
rclb
pop
mov
int
scas
dec
gs
mov
fcoml
sub
notl
fsub
adc
in
loope
js
cmc
mov
mov
mov
sarl
inc
popf
cmpb
sbb
insl
fdivl
add
call
insb
mov
enter
xchg
icebp
xlat
aad
inc
loop
pop
mov
iret
mov
or
in
lret
out
xchg
push
cmp
cmp
sbb
scas
jb
cmp
imul
pop
fldt
in
out
mov
cmp
fwait
rcr
adc
bound
mov
outsl
sahf
cmpsb
pop
dec
add
repz
xor
xchg
shrl
jle
es
test
push
dec
add
int3
jno
enter
or
mov
xor
push
dec
call
sbb
addr16
lret
pop
dec
js
es
shlb
jecxz
xchg
je
hlt
dec
cmp
mull
add
sub
add
xchg
data16
and
out
outsl
out
push
or
adc
sbb
adc
adcl
cwtl
mov
imul
lret
cli
mov
and
nop
rcr
es
mov
sub
lret
repz
xchg
addr16
mov
push
sbb
cmp
sahf
mov
jns
push
xor
js
scas
or
fs
std
inc
sbb
xchg
sub
add
scas
stos
mov
mov
pop
pop
stc
in
mov
fisubl
or
push
leave
sbb
inc
je
xor
push
test
iret
inc
xorl
mov
and
or
iret
xchg
mov
loope
pop
cmp
mov
adc
stos
cmp
loopne,pt
jns
xor
test
mov
loope
xor
nop
jle
int
mov
movsl
mov
adc
jo
call
sub
bnd
rolb
or
pushf
loopne
out
cmp
xor
out
jmp
inc
sbb
jle
sub
cmp
jnp
pop
pop
push
sti
das
jb
dec
lea
mov
adc
cs
loopne
insb
jae
inc
inc
pop
jp
cmpsl
iret
push
push
xchg
mov
into
push
int3
lea
pop
add
inc
xchg
sbb
mov
adc
or
or
pop
pusha
andb
push
out
cmp
and
push
arpl
icebp
add
xchg
dec
jmp
and
or
ret
xchg
add
mov
enter
mov
xchg
rolb
mov
daa
lcall
shlb
and
lahf
jmp
ja
jb
lds
jns
cmp
dec
mov
fistl
sbb
push
sub
sahf
insl
repnz
mov
or
std
dec
addl
xor
roll
rcrb
test
scas
ja
dec
into
jbe
adc
mov
lret
mov
mov
loope
insl
or
insb
les
xor
push
enter
dec
push
sub
and
cmp
sub
out
inc
in
insl
into
fbld
int3
lcall
ret
adc
mov
not
mov
lods
sbb
ljmp
fmull
jae
je
mov
lcall
inc
loopne
xor
out
sbb
shr
sub
push
xor
rorl
jle
jp
mov
dec
outsb
jle
iret
and
mov
cli
mov
mov
push
adc
imul
push
stos
test
call
mov
pop
mov
cmp
jge
adc
jecxz
sbb
mov
cmp
stos
cld
cwtl
xchg
mov
rcrl
xchg
cmp
push
rclb
aaa
dec
or
shll
test
bound
or
sub
in
es
js
or
cmp
jbe
stc
fsubrp
add
xchg
push
xor
cltd
inc
cmpsl
mov
and
lods
lahf
jge
pusha
ja
fiaddl
data16
push
out
clc
jg
push
out
outsl
push
out
and
mov
adc
stos
shl
scas
das
mov
popl
cmp
push
mov
pop
stc
out
ja
iret
inc
std
cli
add
ret
push
mov
dec
sub
xchg
aad
fwait
leave
cmp
add
in
in
out
inc
adc
lcall
xchg
call
frstor
jbe
stc
ja
add
sub
cmp
mov
and
mov
mov
decl
push
xor
insb
std
scas
and
and
push
leave
adc
test
push
cmp
fldcw
pop
cs
fcompl
mov
gs
add
lret
mov
push
xchg
std
testb
ds
inc
or
mov
mov
push
push
adc
push
mov
insl
pushf
inc
test
sub
cltd
or
sarl
sbb
scas
mov
out
mov
push
sbb
movsl
dec
lcall
and
push
xchg
lahf
leave
in
dec
in
mov
mov
and
dec
sub
and
ljmp
cmp
pop
pop
aad
pushf
jg
in
dec
inc
loope
cs
movsl
out
dec
jae
and
dec
jns
inc
ja
lret
stos
sar
pop
addl
and
stos
mov
dec
jp
pushf
add
rorl
xor
inc
mov
dec
push
fwait
lcall
out
and
mov
xor
jne
mov
outsl
sub
jno
div
sarb
mov
jne
daa
in
in
scas
mov
fildl
fwait
xchg
cld
xor
lea
add
ficoml
data16
lock
fcmovnbe
mov
js
stos
cld
jg
or
dec
int3
cmp
push
pop
cltd
jae
adc
rclb
mov
sbb
xlat
or
jecxz
pop
jno
xchg
jecxz
cmpsb
dec
adc
mov
dec
dec
lods
fdivl
cmp
lock
jae
lahf
pop
cmp
aas
insl
pop
xchg
inc
dec
lea
popl
push
js
jne
sbb
cmpsb
or
leave
mov
lret
sub
fisttpll
or
and
sub
adc
pop
sub
jne
xchg
mov
push
jnp
adc
push
insb
xorb
mov
pop
xlat
cmp
mov
pop
pop
into
jne
cltd
mov
jne
jae
in
loope
mov
ljmp
inc
cwtl
dec
and
mov
jge
aaa
push
outsb
loopne
mov
jnp
mov
repnz
adc
sub
mov
stc
cltd
jp
sbb
test
pop
pop
fimuls
mov
and
outsl
bound
pop
js
add
mov
xorl
or
mov
or
cmpsb
xchg
mov
push
mov
push
or
jge
out
add
xor
inc
loope
push
mov
dec
mov
push
in
xor
aas
cmp
fidivrl
and
adc
push
mov
rcll
xor
mov
xor
push
jne
cli
pop
outsb
mov
jle
insb
mov
xchg
xchg
fstp
dec
pop
jne
xchg
ret
jae
jl
scas
das
ss
mov
jl
fwait
mov
fidivl
loop
ret
push
add
pusha
mov
decb
push
mov
icebp
call
iret
mov
jae
dec
add
pop
jge
inc
cmp
push
ret
xor
sti
jno
shr
lods
mov
fnsave
xchg
adc
mov
aaa
cmp
mov
pop
xchg
lret
xor
xor
jno
in
fs
xchg
cmpsl
inc
fstpl
pusha
divb
push
mov
xor
pushf
negb
inc
sbb
nop
pop
dec
jae
lret
pop
hlt
mov
lds
jno
test
xchg
pushf
lds
dec
xor
movsb
mov
dec
sub
pcmpgtw
push
outsb
insl
shlb
fimuls
push
xor
sbb
lock
les
xchg
inc
mov
jmp
cmpsb
and
fs
mov
movsl
jae
sbb
dec
pop
inc
leave
sbb
mov
ljmp
mov
xlat
orb
and
sbb
call
push
dec
fidivrl
addl
inc
ss
or
xchg
push
adc
push
popf
and
inc
sub
insb
mov
ret
iret
add
aaa
jbe
pop
test
sbb
xchg
mov
les
add
mov
xor
cmp
mov
push
gs
push
push
ljmp
lods
adc
pop
lea
jne
xchg
rclb
fwait
sub
inc
mov
in
outsb
insb
and
and
repz
xor
rcrl
cmp
rol
inc
std
and
sbb
pop
mov
inc
push
lea
sub
push
dec
pusha
mov
jmp
je
xchg
cli
rcrb
inc
mov
mov
ret
imul
jnp
lea
cmp
sbb
cld
enter
lock
push
outsl
mov
mov
out
lea
daa
sub
je
push
jle
mov
idivb
pop
pop
dec
push
imul
push
sub
mov
dec
cwtl
sbb
pop
jne
mov
push
idivl
dec
sub
fwait
pop
sub
and
stos
mov
sub
movsb
inc
and
jnp
into
push
pop
int
mov
cld
mov
dec
aas
loope
xchg
sbb
es
or
shrl
add
rol
ss
sbb
mov
add
lods
mov
rep
pop
mov
das
jns
rcll
jge
in
cmp
xchg
imul
test
mov
dec
lret
scas
subb
pop
cmpsb
jge
sbb
inc
cmp
lock
hlt
notl
andl
jae
nop
lea
mov
jge
or
mov
mov
icebp
lret
xchg
addr16
in
cmpsl
negb
loope
sahf
add
test
mov
lea
frstpm(287
sbbl
xchg
mov
push
ret
push
jge
mov
pop
leave
dec
lret
dec
jae
xchg
push
pop
repz
mov
in
xchg
xchg
movsl
and
enter
icebp
in
pop
sbb
ss
adc
sbb
cmp
mov
ss
add
das
cmp
mov
inc
xlat
out
mov
or
sub
sub
movsb
arpl
fldcw
mov
inc
dec
inc
lret
pop
or
and
dec
push
mov
fbstp
leave
and
xor
xor
push
xchg
inc
stos
repz
dec
pop
push
inc
cli
push
insl
dec
lret
and
add
sbbb
nop
popa
push
sbbl
imul
add
jno
leave
or
inc
mov
idivb
jmp
shl
push
jle
inc
aaa
ss
adc
xor
cmpl
fstpt
or
xchg
dec
test
mov
push
lcall
push
cmp
mov
mov
adc
jae
sub
mov
mov
jle
je
cmp
push
and
call
imul
push
inc
call
jmp
pop
xchg
cmc
cmp
dec
add
in
inc
aas
push
lea
aam
sub
cmp
xchg
jns
or
inc
test
dec
and
mov
or
rolb
pop
fsubs
fsubp
add
mov
adc
pop
je
mov
adc
cmovo
sbb
xchg
or
stos
mov
ljmp
outsb
andl
dec
adc
in
mov
subl
dec
pop
xor
dec
outsb
mov
xchg
fsubrl
inc
mov
aad
dec
push
mov
adc
jg
cmpsl
adc
push
sbb
insb
sub
jle
outsb
pusha
push
adc
dec
xchg
test
mov
clc
fdiv
shll
outsb
out
into
xchg
mov
into
jecxz
imul
push
ss
ret
cmp
pop
mov
ret
xor
mov
or
jo
shr
mov
popf
ljmp
jno
mov
xchg
bound
push
sub
pop
dec
inc
add
dec
xchg
in
stos
push
pop
pop
mov
iret
addb
push
mov
out
iret
inc
or
addr16
aas
btc
clc
adc
roll
rclb
outsb
mov
repnz
cmp
pop
cmp
fadd
daa
loop
imul
and
sbb
jnp
push
cmc
add
loopne
and
dec
mov
fiadds
inc
addr16
lret
xchg
out
loop
stos
test
dec
orl
enter
and
jo
mov
test
orb
das
xor
ret
mov
mov
call
popa
cmp
leave
out
mov
push
inc
popf
orb
das
add
pop
fs
loop
push
xchg
not
scas
cmpsb
xchg
or
loope
jbe
push
mov
out
stc
repz
cmp
stos
cmc
pop
xchg
idivb
fs
push
bound
inc
ret
sarb
pop
scas
cli
notl
add
arpl
push
inc
jb
in
popa
xor
jle
inc
js
aaa
mov
mov
pop
dec
enter
movsl
push
repnz
mov
cli
shll
pop
adc
outsl
mov
pop
gs
jo
push
call
push
jo
dec
inc
add
xor
push
jp
out
or
xchg
fbld
adc
xchg
inc
imull
push
inc
dec
fiadds
ficomps
stc
sbb
ja
lods
cli
adc
inc
in
mov
push
int
int3
mov
aam
dec
ficompl
es
sbb
xchg
mov
mov
pusha
out
sbb
or
pop
jecxz
and
loope
push
jbe
adc
insb
xchg
sub
negl
sbb
jmp
rcl
xchg
mov
scas
cmc
dec
pop
jle
stc
jge
incl
mov
push
stos
and
pop
lret
std
push
ret
movsb
in
adc
xor
sbbb
scas
lahf
dec
add
ljmp
enter
jle
jne
xchg
ljmp
inc
push
dec
push
inc
out
cmp
sbb
xor
repnz
push
mov
push
jae
or
mov
dec
jno
repz
imul
push
xchg
stos
xor
dec
fdivrs
lds
push
mov
lds
hlt
arpl
ficoml
sbb
mov
adc
lods
gs
fldt
push
cmpsb
js
test
push
inc
in
mov
and
or
adc
adc
iret
js
nop
ret
cmp
mov
adc
movsb
jo
or
ja
addr16
inc
inc
jo
fadds
orb
fs
pop
lcall
and
out
cmpsb
int
cmp
orb
sbb
int
or
ljmp
rorb
mov
inc
or
in
xor
lcall
pop
mov
jmp
call
out
jmp
decb
shlb
jno
cld
mov
inc
ret
imul
sub
xorb
nop
lea
shr
aaa
cmpsb
cltd
std
inc
sub
aad
dec
int3
pop
mov
nop
or
dec
out
xchg
mov
sub
xor
jp
pop
dec
outsb
push
je
jne
in
xor
inc
xlat
in
jne
pop
inc
jo
fs
mov
push
js
add
inc
xor
sarb
jmp
push
jg
lea
iret
dec
xor
pop
cltd
addb
mov
pushf
push
je
mov
sbb
inc
mov
shll
imul
leave
test
leave
gs
leave
push
xchg
cwtl
jle
test
inc
push
loop
add
in
xor
mov
add
fidivs
mov
mov
out
pushf
adc
adc
mov
xor
and
pop
lcall
xor
mov
in
mov
mov
icebp
popf
das
ds
out
inc
clc
sbb
rclb
mov
insl
jo
in
sub
mov
mov
test
inc
mov
xor
lods
bound
dec
xchg
neg
push
dec
and
cwtl
sub
xor
dec
rol
hlt
test
dec
lcall
mov
lea
loope
mov
cltd
or
adcb
cmc
cmp
and
scas
loopne
dec
out
push
mov
dec
lods
enter
roll
rorb
stc
dec
cmp
into
or
ljmp
xor
rcll
mov
jge,pt
xchg
imul
sbb
push
pop
dec
nop
dec
mov
jno
fcoms
sbb
dec
adc
aaa
push
jecxz
pop
add
shll
cmp
inc
push
sub
es
or
dec
pusha
pop
jl
in
pop
ret
stc
aaa
jle
cmp
bnd
xchg
push
test
cmpsb
sub
das
cmp
test
lods
ret
sub
jge
xchg
aaa
push
loop
jae
inc
insb
iret
mov
mov
push
clc
dec
xor
inc
mov
inc
ss
int
push
mov
xor
rcll
mov
cmp
add
mov
add
repz
add
in
cwtl
lcall
clc
out
cld
pop
sub
test
arpl
inc
push
fmulp
rcll
int
add
mov
push
adc
inc
mov
int3
out
jmp
testb
cmp
inc
in
xchg
xchg
ret
fstl
inc
aas
rcll
inc
xor
outsl
shrl
add
in
jb
mov
addb
dec
test
cmpl
mov
sbb
scas
jbe
inc
rcr
inc
cmp
inc
sbb
sub
movsl
dec
dec
push
sub
lods
cltd
daa
pop
inc
xor
stos
jo
outsb
lock
sarb
xor
sahf
les
cmp
vhaddpd
das
lret
jecxz
cld
sub
mov
or
or
jecxz,pt
dec
add
insb
insl
nop
mov
mov
je
xchg
filds
pusha
sub
in
push
sub
pushf
dec
push
mov
inc
jg
xchg
xchg
scas
lret
mov
xor
enter
push
insl
loop
mov
repnz
pop
out
push
xchg
mov
adc
mov
mov
mov
adc
incb
or
and
adc
sbbb
into
push
test
out
xor
das
mov
loope
jecxz
pop
lcall
je
inc
inc
xor
js
push
fdivp
sar
scas
push
dec
or
cwtl
cmpsl
daa
dec
cld
lahf
push
add
stos
ffreep
out
mov
push
lods
push
int3
repz
xchg
and
sub
dec
sub
mov
inc
popa
xchg
pop
cwtl
dec
ja
cmpsb
icebp
xor
addr16
push
scas
loope
ljmp
loop
mov
sub
cltd
adc
cmp
or
add
xor
dec
ret
jge
stc
lahf
pushf
add
mov
sbb
cltd
loop
add
push
cld
adc
mov
or
mov
lcall
adcb
sahf
out
jne
dec
push
js
out
dec
nop
add
inc
xlat
push
fstpt
adc
ss
jge
lods
or
jnp
adc
inc
pop
mov
clc
cmp
sub
popa
mov
sub
sahf
mov
mov
push
loop
lock
mov
loop
sub
adc
sbb
insb
jne
testb
out
add
cmc
jle
fstpt
out
ja
gs
and
das
mov
inc
mov
mov
push
pop
js
rolb
and
mov
jb
lahf
imul
sbb
xchg
pop
outsb
mov
int
loop
lock
mov
ret
inc
pop
into
andl
cmp
aad
mov
es
scas
sbb
outsl
inc
les
fcoml
data16
in
roll
shrb
xchg
mov
pusha
sti
stos
sub
in
xor
and
mov
sbb
fwait
negl
or
adc
pop
jg
mov
mov
popf
push
sub
in
pop
lock
aad
inc
insl
mov
mov
fidivrl
sahf
xchg
mov
push
std
fiaddl
cmp
sub
ja
js
aaa
ja
inc
push
adc
cmp
mov
sahf
sub
xor
fisubs
cmp
lods
dec
and
sbbl
lods
xchg
sarb
and
xor
cld
ss
nop
pop
sbb
rcll
adc
push
mov
jno
mov
jbe
pop
xor
and
aad
mov
adc
fdivl
push
sbb
icebp
dec
sbb
test
and
negb
jae
out
xchg
jle
cmp
insl
in
pushf
lret
sub
inc
out
movsl
jp
xor
mov
loope
imul
fsubs
aad
scas
out
iret
rorl
pop
lods
push
into
jmp
sub
xlat
xchg
mov
scas
pop
in
cltd
pusha
add
cltd
or
sarl
repnz
data16
out
inc
mov
pusha
xor
xchg
xor
add
mov
rclb
dec
test
shlb
mov
popf
pop
xor
cmpb
leave
lcall
out
ljmp
mov
fnstcw
ljmp
cmp
lods
out
in
loope
cmp
xlat
mov
into
mov
pop
stc
inc
mov
mov
stos
xor
cmp
jne
inc
popf
pushf
mov
hlt
jo
sahf
cmpsb
add
push
or
or
or
cmp
cltd
dec
ja
bnd
pop
fimuls
xchg
ret
pusha
icebp
aaa
push
leave
add
aam
sub
sub
adcl
mov
sbb
js
push
lret
mov
jnp
cmp
xchg
mov
aam
lcall
adc
lds
daa
pop
jbe
push
mov
dec
fcmovb
repnz
pop
pop
push
cmp
push
out
mov
fdivl
mov
dec
sub
lock
test
ret
mov
jp
mov
add
leave
dec
les
in
adc
in
mov
adc
adc
pop
in
test
inc
cld
mov
mov
fidivs
ret
lret
mov
jmp
mov
in
push
cld
cld
mov
push
push
scas
outsb
and
cmpsb
push
nop
shrb
jmp
js
ss
in
or
in
sub
sahf
outsb
dec
gs
adc
test
ja
aaa
dec
in
jg
add
jg
leave
imul
incb
roll
sahf
int3
and
mov
orl
cmp
jnp
into
xor
cmp
and
jp
shlb
inc
sbb
pop
mov
ljmp
jge
or
inc
xchg
and
jmp
mov
mov
pop
jecxz
and
mov
ficoml
divb
mov
dec
sar
enter
lods
rorb
mov
iret
mov
lret
cmpsl
out
je
cmp
pop
and
sub
push
or
xor
rcr
lret
or
inc
mov
add
xchg
adc
inc
lods
fmull
jae
jp
outsb
push
movsl
or
xchg
pop
cmp
and
jmp
push
push
or
rolb
les
mov
insl
and
in
sbbl
jl
jg
int
in
mov
cld
sub
test
sub
cmp
xchg
dec
push
mov
out
in
adc
mov
inc
jno
xchg
push
push
and
jne
stos
outsl
or
jne
cwtl
xchg
lret
incl
ror
push
mov
lret
push
dec
fiaddl
cmp
jp
lock
je
aas
shlb
push
jg
mov
push
ss
rorl
in
test
xchg
mov
mov
xchg
cwtl
in
idivb
lahf
xchg
pop
repz
fxch
jae
xchg
jno
push
adc
inc
int3
stos
inc
sub
rcr
fs
dec
out
movsb
imul
cmpsb
cmp
fstl
outsl
cmp
dec
gs
jnp
outsb
or
sbb
notb
iret
popa
frstor
mov
in
mov
lcall
mov
xor
movsb
bound
ror
add
dec
push
pop
jo
mov
sub
adc
jb
in
mov
out
sbb
inc
mov
sub
cmpsb
jmp
es
std
and
inc
cltd
pop
push
fnstenv
pop
cmp
je
cmpsl
push
stos
jbe
daa
mov
ljmp
push
sti
dec
inc
mov
push
rorl
lcall
test
loopne
dec
pushf
in
mov
pop
push
scas
std
roll
push
aas
test
ja
loop
add
lock
inc
ljmp
mov
inc
add
je
push
inc
ja
cmpsl
movsl
mov
jecxz
xor
cwtl
and
das
ss
mov
imul
cmp
add
push
shlb
fistps
je
jmp
inc
inc
daa
andb
pop
test
jmp
outsb
inc
mov
adc
inc
adc
ffree
loop
jecxz
out
adc
inc
pop
int
out
xchg
dec
mov
pop
daa
xchg
ljmp
lds
sub
pop
subb
jecxz
fstpl
sub
xor
test
bound
fstl
mov
iret
and
insl
ljmp
pusha
sub
aas
rorb
push
push
pop
popf
push
jae
push
popa
fcmovb
or
jno
jne
arpl
pop
dec
xchg
or
inc
pusha
lret
dec
cmp
mov
sbb
mov
jae
jnp
cmc
lret
fistl
ficoms
aad
test
scas
pop
aas
adc
jbe
das
test
inc
into
dec
xor
cmpsl
lret
mov
out
pop
das
lods
pop
jp
dec
dec
in
dec
movsl
pop
sub
push
add
inc
test
sub
cld
pop
popa
test
pop
mov
jno
pop
iret
jmp
sbb
mov
xor
repnz
sahf
jb
mov
cli
xor
shll
insb
les
clc
inc
xor
lea
and
movq
mov
xor
push
fldt
add
sbb
fs
jae
int3
hlt
lods
stos
shlb
aam
mov
fnstenv
push
mov
dec
push
mov
and
fs
sbb
out
sarl
dec
pop
jg
jnp
push
jmp
push
pop
pop
mov
push
fstpl
sub
popa
mov
fldenv
fld
dec
outsb
fimuls
jp
ds
fs
call
xchg
adc
stc
mov
imul
xchg
out
pop
sub
pop
mov
les
pop
insb
aad
fildl
sahf
xchg
mov
sar
push
mov
cmpb
push
mov
xchg
aad
add
and
aad
xor
sti
movsb
ljmp
cmp
fstl
and
pop
and
shl
push
std
inc
adc
icebp
in
xorl
fs
aam
push
dec
or
pop
sub
fmull
pop
jns
adc
sub
mov
decb
mov
adc
cmpsb
ret
mov
dec
lcall
ja
nop
xlat
lea
vpmacssdd
dec
inc
std
jb
lahf
mov
xor
xor
adc
mov
es
popf
xor
jp
lcall
out
scas
mov
xor
jne
pop
cwtl
repz
mov
fsubs
push
jp
bound
mov
push
fidivrs
jp
adc
lds
xor
loop
push
push
xchg
jl
push
add
cltd
add
incl
daa
xchg
pop
and
leave
jb
rorl
les
mov
jne
xchg
lods
inc
out
adc
adc
pop
add
loop
push
push
jae
enter
push
iret
adc
sarb
dec
inc
popa
aaa
mov
jo
jge
out
cmpsl
dec
std
je
mov
pop
jecxz
jle
lcall
cmp
insl
sbb
xchg
leave
pop
adc
mov
pusha
stos
xor
push
call
jo
mov
addl
ljmp
sub
mov
xchg
insb
ret
pop
iret
fucom
lods
scas
test
ljmp
inc
or
decl
lods
mov
or
test
pop
jge
fld
aad
hlt
enter
push
sub
hlt
xor
sti
insb
fidivl
jl
jle
out
fcomps
sub
push
pop
add
scas
sbb
push
or
imul
lds
jno
dec
push
loopne
arpl
mov
dec
adc
mov
xchg
out
mov
nop
fsts
js
andb
adcb
pushf
ljmp
adc
nop
mov
daa
insl
push
inc
aam
negl
stc
mov
inc
lods
pop
xchg
lea
shll
repz
icebp
fwait
rorb
mov
loopne
cmp
rcrl
push
or
lret
pop
fst
adc
dec
xchg
adc
or
jbe
cmp
das
dec
mov
lods
jns
in
in
sbb
cmp
jg
add
push
xchg
stos
pop
push
int
hlt
daa
lahf
cld
ja
xchg
nop
pop
loopne
incb
in
xchg
push
hlt
addr16
mov
mov
push
sub
ret
das
js
mov
and
mov
adc
mov
lcall
jne
lds
clc
jns
in
jge
ret
aaa
punpcklbw
out
test
dec
or
movsb
lock
sbb
cmc
pop
add
js
cwtl
push
int
iret
adc
push
mov
lahf
sub
jae
sub
ljmp
movsb
int3
xchg
loopne
test
cmp
sbb
scas
popf
je
loop
dec
sbb
push
sti
mov
hlt
sub
mov
cwtl
sub
les
imul
popf
scas
ret
pushf
mov
lock
sar
mov
push
inc
or
fs
push
jnp
and
mov
add
cwtl
in
add
pop
cli
int3
cmp
mov
xchg
js
inc
mov
pop
dec
and
xchg
mov
enter
pandn
cmp
enter
xor
lcall
popa
jle
das
addl
fs
mov
inc
lea
xchg
xor
stos
out
bound
cmp
into
jle
mov
mov
loop
mov
pop
push
ljmp
test
fdivp
sbb
or
add
sbb
negl
lock
mov
pop
stos
rcll
lret
inc
ret
int
inc
test
push
and
nop
icebp
adcb
out
rolb
cmp
mov
inc
orl
adc
mov
push
seto
mov
mov
dec
push
lret
mov
and
mov
mov
in
std
lock
xor
fbld
ret
dec
frstor
and
es
pushf
je
pushf
push
out
loopne
ret
cmp
insl
inc
repz
adc
or
and
dec
adc
ljmp
roll
cmp
icebp
sbb
jle,pn
shll
repz
iret
out
sarb
mov
lods
stos
or
dec
cmpl
xchg
xor
add
mov
popf
cmp
in
shr
ja
nop
icebp
sbb
push
mov
jno
xor
pop
mov
sub
inc
pop
mov
sbb
inc
movsb
orl
mov
mov
insl
fs
mov
add
scas
lret
addb
adc
sbb
icebp
and
cmp
cmp
dec
inc
xchg
sahf
cmp
in
pop
and
sbb
incb
ficoms
adc
mov
mov
inc
fcmovnb
mov
xchg
add
or
dec
dec
stos
ret
dec
jle
push
push
sub
repnz
xchg
mov
dec
mov
loop
mov
lret
rclb
jmp
push
mov
xchg
xchg
scas
test
push
pushf
sti
adc
cmp
out
pusha
test
nop
jb
xchg
lcall
cld
scas
xlat
mov
andb
pop
add
or
dec
std
fnstcw
orb
pop
ds
std
addr16
aaa
cmc
aam
aad
ss
cmp
pop
fcmovnbe
xchg
movl
mov
cmp
jns
lret
je
imul
ror
pop
popa
addr16
inc
out
insl
addl
pop
inc
int
mov
aad
xor
icebp
sbb
leave
les
inc
decb
pop
nop
xlat
dec
xchg
lea
fcoms
xchg
jno
dec
and
mov
mov
jge
sbb
mov
data16
cltd
mov
pop
fbld
cmp
mov
fmull
pusha
xor
mov
push
push
pop
aad
es
mulb
dec
cli
pop
pop
sbb
sub
fs
add
ret
mov
push
pop
out
add
lods
push
lahf
repz
nop
add
les
fadd
inc
cmp
xrelease
dec
outsl
lret
std
sbb
popf
or
fdivrl
dec
aaa
inc
les
std
mov
xchg
push
cltd
xor
loopne
and
and
xor
das
add
inc
jne
popa
fmuls
aaa
jg
fwait
aas
pop
sbb
movsb
scas
pop
sarl
mov
loope
pop
and
adc
rcll
into
mov
shlb
popf
xchg
in
add
mov
and
movsb
cli
nop
sbb
das
mov
addr16
daa
cmp
testb
mov
jno
pop
cmp
out
movsl
inc
push
push
emms
cmp
push
movsl
xchg
sti
pop
and
jo
push
mov
mov
push
scas
aaa
lret
popa
mov
jle
xchg
cltd
fisubrl
xchg
movsl
dec
and
cltd
dec
jge
mov
cmp
mov
int
mov
cli
insb
adc
gs
xchg
roll
orl
and
lock
andb
mov
shl
fidivrl
lods
pop
mov
psllq
inc
rorl
pop
mov
push
push
xchg
inc
add
aas
pop
dec
pop
addl
adc
outsb
mov
jae
cmp
stc
int3
mov
jne
pop
fwait
mov
dec
adc
and
xchg
mov
jecxz
movsl
add
in
add
insb
pop
cltd
shrb
and
mov
xchg
mov
lds
xor
xor
out
test
xchg
faddl
aaa
push
cmc
push
xchg
lret
push
jg
dec
pop
into
int3
pop
aas
dec
cmp
repz
mov
lret
xchg
int
add
mov
iret
insl
ret
mov
bound
imul
xor
lock
bound
in
stos
imul
std
inc
adcb
mov
popa
pusha
mov
dec
out
cmpsb
jbe
and
push
cli
push
std
orb
mov
mov
pop
mov
out
push
sbb
cli
rorb
adc
pop
rclb
dec
jne
pushf
mov
and
cs
dec
mov
movsl
cmc
arpl
xchg
daa
xlat
and
cmc
and
xchg
aam
lea
push
sub
sub
add
push
mov
testl
push
cmpsl
and
bound
imul
xchg
inc
loope
mov
outsb
repz
das
insb
in
test
sub
aam
adc
adc
add
fisubrs
out
xchg
push
mov
fcmovbe
mov
mov
mov
mov
sub
ficoms
sbb
fidivs
push
popa
inc
and
stos
xor
iret
scas
js
test
mov
xchg
mov
rcl
xchg
add
lock
adc
fwait
mov
add
cmp
pop
mov
mov
rcrb
pusha
call
and
xor
mov
aas
test
mov
insb
das
inc
sbb
xlat
cmp
sub
fisttps
sub
xchg
pop
nop
in
shlb
pusha
lahf
pusha
inc
sub
orl
mov
fildl
add
xchg
inc
arpl
in
and
xchg
adc
pop
push
lret
sub
stos
add
outsb
mov
mov
sbb
daa
and
insb
mov
adc
test
arpl
dec
cwtl
push
lods
mov
and
je
arpl
cli
pop
std
ss
insb
aam
cld
mov
negb
sbb
push
flds
roll
or
push
mov
cs
push
jo
stos
jns
aas
push
push
pop
cmp
int3
pop
cmc
cmc
dec
shl
sbb
mov
inc
xchg
sbb
mov
mov
test
js
or
out
dec
call
rclb
out
rorb
paddusb
jo
xchg
in
arpl
fsubr
and
cmp
sbb
bound
jl
pop
loopnew
cmpsl
jp
jbe
cmpsb
dec
inc
mov
in
fsubrl
inc
arpl
sbb
pop
add
xchg
push
or
or
xor
xchg
mov
stos
add
shrl
lock
pop
addr16
sbb
lcall
pop
pop
psadbw
push
inc
add
add
rclb
orl
mov
stos
and
push
fildll
push
shrb
pop
aad
loop
add
out
push
lock
xchg
fcoms
in
scas
mov
push
xchg
jmp
aam
cmp
int
mov
aaa
pop
pop
mov
addl
cltd
inc
add
xor
xchg
test
or
mov
cli
fs
jp
push
test
pop
inc
cmpsb
push
xchg
test
inc
gs
xchg
cld
cmp
imul
mov
sbb
push
dec
int3
int
push
es
xchg
popa
ret
ret
sub
ficomps
push
int3
push
in
mov
call
insb
lret
popf
push
es
repnz
aad
push
ret
mov
sti
xchg
shrl
scas
xchg
nop
icebp
xchg
push
cmp
lret
jne
lds
std
popa
sbb
test
jecxz
movsl
movsl
mov
adc
std
inc
cmp
sub
jge
mov
scas
sbb
pop
mov
mov
jp
aam
cmp
lock
pop
jbe
fcompl
mov
pop
das
imul
inc
cmpb
sub
lock
aam
inc
ss
out
mov
xchg
sbbb
imul
fimull
imul
lods
dec
xchg
pop
mov
mov
cmp
dec
shrl
xchg
dec
es
push
loop
test
inc
jb
push
ljmp
pop
arpl
xor
pop
inc
lock
js
push
scas
pop
xchg
push
xchg
pop
decb
dec
push
pop
in
fistpll
inc
xchg
lret
dec
cmp
sbb
lods
jp
enter
inc
and
les
test
stos
cmpsl
iret
mov
xor
in
xor
lret
mov
add
mov
outsb
adc
push
xchg
enter
push
mov
cltd
mov
or
jo
and
mov
out
in
test
adc
div
repz
adc
mov
or
xchg
or
xchg
push
or
in
add
and
mov
push
push
adc
rorb
nop
xrelease
scas
sub
push
sub
mov
sbb
cmp
out
xor
lahf
out
mov
andb
or
lahf
popf
fmull
out
cmpb
rcrl
sbb
jge
inc
lods
jmp
add
push
scas
xor
fbld
cli
int
inc
lock
mov
mov
xchg
or
cmp
xor
cli
sbb
push
push
pop
pop
in
jecxz
loope
mov
pop
push
in
bound
dec
stos
inc
movsb
mov
dec
mov
jne
pop
xchg
mov
shr
pop
dec
stos
mov
inc
inc
dec
std
leave
mov
cmp
and
jo
out
xchg
xor
sub
xchg
dec
jg
inc
sahf
mov
dec
cmp
xchg
sub
cli
shrb
xor
fldcw
mov
lods
bound
push
adc
xorb
aaa
iret
jns
push
insl
dec
fs
sub
sub
lret
out
adc
lret
insb
repz
lea
or
sub
xor
inc
call
mov
sub
mov
jmp
inc
mov
xchg
push
cmp
push
mov
mov
sub
daa
mov
mov
jg
aam
push
cs
scas
popa
dec
mov
push
loop
jnp
sub
out
mov
jb
sbb
cmp
pop
adc
pop
mov
imul
sub
xchg
jecxz
adc
lods
mul
lret
aad
addl
cs
xchg
xor
cs
pusha
sbbl
mov
xchg
in
fadd
out
push
and
mov
bound
jl
int
scas
jae
jne
cli
push
fdivrs
into
ret
jbe
ret
mov
loop
cltd
jg
cmp
push
clc
lods
hlt
push
scas
jb
insb
into
stc
xor
and
outsb
inc
or
rcll
push
cmpsl
push
rcrl
xor
lcall
loop
js
inc
pop
xlat
mov
xchg
pop
daa
enter
ficoml
aaa
dec
sub
or
add
xlat
andl
mov
pop
jne
mov
in
xchg
or
dec
adc
add
cmpsb
imul
sbb
push
fs
xchg
jmp
sbb
call
pop
lret
cmp
mov
cmp
mov
lret
test
lds
pop
xchg
xchg
cmp
pop
push
das
pop
test
inc
adc
jb
dec
ja
leave
in
aas
add
test
and
xor
cmp
fmulp
dec
or
decb
jno
push
icebp
pop
adc
dec
jecxz
or
bound
sbb
cmpsb
push
cmp
mov
and
nop
push
push
jge
ficomps
test
aaa
aas
popa
dec
jne,pn
cmp
mov
dec
pop
pop
pop
repz
mov
insb
cld
add
fs
jnp
jbe
push
add
add
rol
lret
jns
mov
adc
negl
xchg
ret
rorb
jb
push
xlat
sarb
ret
jl
sub
mov
mov
and
in
sahf
add
jns
data16
pusha
mov
popa
pop
jg
mov
mov
enter
pop
push
xchg
aas
fwait
shll
gs
pop
xchg
stc
mov
aas
push
mov
lahf
mov
or
lahf
lods
sbb
and
outsl
xchg
xchg
and
out
or
popf
sub
pop
ret
aaa
scas
push
lods
test
daa
addr16
adc
test
cwtl
sub
hlt
fmull
pusha
aad
popa
mov
in
push
mov
imul
mov
inc
inc
push
add
sbb
mov
inc
mov
lret
or
inc
hlt
ja
and
scas
stc
push
sub
sbbl
mov
jb
cmp
fld
push
cmpsl
loop
mov
xorb
addl
mov
rcll
imul
jns
imul
out
int
cmp
jecxz
push
push
cmp
xchg
push
into
repnz
popf
mov
mov
test
fwait
scas
ret
add
jno
int3
fstps
or
xor
sub
and
gs
lods
xchg
adc
push
pop
pop
out
cmpsb
inc
popa
adc
mov
xchg
loopne,pn
xor
and
stos
es
fistpll
and
cmp
pushf
sub
std
inc
in
push
or
call
ds
mov
pop
cmp
inc
lds
push
xor
push
push
jo
xchg
cmpsl
fwait
xchg
imul
rcll
xor
jae
sub
pop
aaa
ds
cmp
enter
mov
cmp
mov
adcb
aad
pop
mov
dec
outsb
xorb
xor
pushf
ds
sub
dec
loopne
mov
adc
mov
hlt
out
push
pop
aam
push
xchg
inc
and
xchg
cli
xchg
fsts
jb
pushw
mov
inc
fldpi
mov
push
aas
imul
dec
std
pop
add
and
cmpsb
aaa
mov
adc
nop
cmp
loope
lret
lahf
incb
mov
sub
ljmp
les
add
shr
loope
into
pop
jge
xchg
sbb
mov
sub
mov
pop
stos
ss
pop
jle
dec
repnz
pop
rcrl
sub
or
pop
cmp
mov
clc
cmp
sub
dec
pop
shl
imul
cmc
adc
mov
xor
or
lds
cwtl
pop
shlb
je
push
cmpsl
adc
aaa
jno
cwtl
mov
leave
scas
ds
cmpsl
pusha
jge
stos
nop
sti
cmp
bound
mov
shr
xor
push
add
sub
fcoms
flds
je
adc
je
xchg
jne
orb
cmp
inc
jp
xor
push
dec
add
cmp
jp
add
jg
xor
ljmp
test
pop
push
mov
repz
fcmovbe
push
add
xchg
xchg
mov
shlb
cli
or
pop
sbb
std
jnp
mov
and
jbe
ret
mov
or
fstpl
xor
out
pop
push
int3
dec
xchg
add
or
inc
pop
jp
adc
rorb
sbb
int
push
fmulp
scas
cld
lahf
cmp
sub
in
pop
cwtl
stos
imul
or
push
mov
lret
pop
iret
and
jo
or
fwait
clc
mov
int3
imul
mov
xor
leave
inc
sti
sub
std
call
and
mov
jae
daa
jno
inc
adc
cmp
call
dec
insl
pop
push
push
pop
adc
xor
xor
test
inc
push
mov
jp
outsl
xchg
andb
add
dec
aam
movsl
pop
or
sti
pop
cs
jb
aam
imul
dec
xor
cltd
test
sub
repz
loopne
push
push
shrl
sub
mov
inc
jnp
inc
cmp
dec
lods
mov
mul
mov
adc
pop
movsl
in
std
dec
xor
pop
jae
add
ret
aas
in
jmp
sub
or
scas
sbb
xchg
rcrl
mov
xchg
outsb
mov
inc
xlat
jecxz
add
cmp
or
cmp
xor
imul
push
decb
fidivrs
sbb
pusha
mov
xor
mov
mov
sub
dec
rorb
sbb
and
ds
add
xlat
jns
jg
fmull
imul
push
ja
lds
fsubrp
pop
sub
int3
cmc
cwtl
fstpt
adc
dec
dec
mov
ja
ljmp
and
mov
stos
lret
inc
mov
push
mov
pop
cmp
movsb
rcll
sub
loop
mov
sbb
push
cld
xor
or
mov
xor
sub
jp
mov
jmp
add
pop
fnstsw
pop
lret
addr16
mov
jno
jg
cld
xorb
shll
cmp
dec
xor
xchg
adc
cmp
inc
fstpt
mov
insl
xchg
mov
je
cmp
push
fdivrs
dec
cwtl
pop
sbb
mov
jo
xor
pop
sbb
imul
sbb
lcall
sbb
xchg
pop
orb
pop
stos
or
in
mov
out
inc
out
sbb
jne
adc
imul
push
jg
add
shrb
mov
and
test
cmp
jecxz
stos
mov
dec
push
repnz
add
jns
sbb
iret
jbe
add
sahf
push
and
mov
add
push
jae
rcrl
iret
rcl
sub
fsubs
test
test
mov
adc
lret
mov
mov
xchg
dec
cmp
test
jg
cmp
scas
std
imul
outsb
mov
inc
cmp
aaa
faddl
adc
dec
mov
mov
jg
jle
fwait
outsb
jnp
fcmovnb
stc
mov
cmp
data16
fldpi
or
lcall
sub
stos
divb
xchg
push
cmpsb
sbbb
mov
leave
test
mov
add
loop
xchg
sbb
cmp
int
and
jecxz
and
lock
arpl
repnz
cltd
leave
imul
aad
or
shrl
out
stos
ljmp
ret
fdiv
adc
adc
jo
sub
fs
mov
cmp
stos
lods
xlat
leave
jae
mov
inc
xchg
adc
inc
mov
or
out
inc
les
and
es
lock
add
jecxz
aas
xchg
xor
jne
push
pop
dec
pusha
enter
in
push
inc
mov
push
cs
or
aam
xchg
sbb
lahf
andb
test
aam
jnp
cmp
jnp
xlat
fisttpll
mov
add
js
xor
mov
jecxz
insl
jo
ja
lods
push
xchg
mov
xlat
cmp
scas
sub
cmp
clc
sbb
mov
sbb
fcom
arpl
xor
lods
jle
push
aad
scas
xlat
clc
in
push
rcrb
adc
andb
push
nop
call
je
inc
in
pop
out
mov
or
daa
std
jns
sbb
into
subl
mov
and
dec
fldt
mov
daa
leave
lahf
inc
scas
adc
jns
les
imul
push
xchg
out
addr16
mov
js
loop
clc
icebp
loope
dec
xchg
jmp
aaa
aaa
fucomip
and
or
inc
sub
ficomps
pop
xor
fsubrl
dec
inc
sub
imul
into
push
scas
add
adc
mov
enter
call
lcall
push
cli
jmp
pop
push
int
das
jle
imul
sarl
mov
int3
lds
lods
enter
aas
add
mov
or
roll
xor
or
sbbb
xor
pop
test
xor
popa
push
and
shrl
pop
ret
adc
cmc
jp
jb
lcall
xor
scas
adc
push
test
outsl
out
scas
aad
xchg
or
xchg
stos
jge
cmc
cmpsl
mov
out
ret
mov
and
cmpsl
cli
sub
stos
pop
mov
nop
rcl
insb
fldenv
push
push
pop
pop
sbb
int3
mov
mov
or
aas
repnz
cmp
movsl
cmp
and
rorb
mov
pop
pusha
ja
rorb
cmp
xor
push
add
pop
inc
and
add
fdivp
cld
jg
dec
sub
cmp
xor
cmp
scas
sub
pop
push
jb
psadbw
sub
sub
fs
xor
cmp
cmpsl
mov
int3
xor
lock
ss
sub
sbb
jecxz
stos
cmp
imulb
xchg
andb
cmp
mov
lahf
gs
ss
in
loope
adc
jge
add
cmp
jl
in
sbb
js
cmc
cs
push
lds
xlat
adc
adcb
sbb
imul
fbstp
into
add
push
cmpsb
sub
or
mov
push
iret
shll
jg
jns
int
rcll
fcoms
jne
inc
fwait
rcr
jmp
imul
jp
stc
pop
mov
ret
push
mov
mov
pusha
stos
pop
popa
js
sub
mov
test
lahf
lahf
push
xchg
daa
mov
movsl
iret
adc
clc
adcl
push
jecxz
pop
loopne
pop
shrl
andl
enter
add
out
ds
jne
sbb
lret
xor
mov
sub
fldcw
lds
mov
addr16
cmc
dec
sbb
mov
in
xor
cmp
xor
aad
movsb
sub
bnd
outsb
xor
fwait
pop
nop
test
push
push
dec
jmp
sahf
subb
push
push
and
popf
arpl
or
cmp
out
xor
inc
push
adc
shll
jnp
cmp
mov
cmp
mov
sub
or
add
rcrl
dec
inc
push
dec
xorl
test
adc
mov
add
sub
jmp
jmp
mulb
insb
mov
shll
aam
out
xor
pop
sarl
jmp
sti
lods
dec
jg
fsts
cs
pop
enter
mov
sub
sub
ficompl
or
sahf
xchg
shl
incb
mov
dec
ret
pop
xchg
jne
mov
stos
jmp
fimuls
mov
movsl
xchg
movsb
int
cmp
fst
pop
or
int
in
out
sub
lock
lret
sahf
loop
pop
jno
divb
push
adcl
int3
rorb
es
inc
lret
in
fucomp
mov
test
shlb
rcll
outsb
daa
mov
xor
pop
notl
xor
fidivrl
dec
sub
and
or
rorb
std
cmp
xchg
movsb
inc
movsb
cmc
mov
xlat
push
mov
xlat
out
adc
int
aas
fstpl
sbb
push
scas
mov
popa
add
push
mov
inc
push
push
iret
lods
jp
mov
jle
pop
ficoml
dec
cmc
mov
adc
cli
adc
inc
or
shrd
pushf
jmp
dec
push
pop
pusha
or
cmpsl
shll
shrb
cwtl
push
add
push
add
repnz
fs
inc
inc
popa
or
xchg
adc
int3
push
stos
test
xchg
sbb
jmp
or
shll
jl
das
aaa
ret
adc
cmp
mov
out
mov
dec
dec
daa
fstl
nop
add
cld
cmpsb
sarl
push
cmp
aad
cmp
out
mov
sub
or
sub
dec
mov
and
es
arpl
or
jae
movsl
cltd
lods
rolb
rcll
stc
or
inc
and
mov
push
adc
sub
lea
mov
int
mov
adc
ficomps
ss
adc
xlat
test
mov
lea
cmpsb
decl
fldenv
pusha
mov
dec
orb
inc
mov
jns
test
mov
add
aad
sar
in
jo
push
xchg
cmp
repnz
xchg
cmp
mov
push
jl
xchg
stc
and
outsl
leave
jl
fdivrl
jle
fs
xchg
lret
or
in
cmp
inc
loop
ret
test
insl
xchg
test
clc
mov
dec
js
sbbb
out
push
pop
or
aam
push
sub
icebp
mulb
add
xor
or
addr16
xchg
orb
pop
fiadds
push
cmp
lea
jmp
das
sahf
pusha
pop
test
inc
inc
test
mov
mov
cld
lds
mov
stc
aam
cmp
mov
pusha
test
stos
in
fisttpll
lds
in
sbb
xchg
push
dec
cld
mov
daa
xchg
inc
sub
dec
add
loope
add
daa
rcrb
pop
fmull
mov
mov
dec
jne
jp
add
lods
adc
xor
adc
cmp
add
and
out
sbb
arpl
mov
xor
push
shrb
pop
int3
adc
jg
inc
sub
mov
pushf
fmulp
mov
adc
sub
in
jecxz
jmp
jmp
mov
ss
pop
xorb
cs
xchg
mov
jge
jle
mov
inc
movsb
hlt
xchg
sub
push
pop
jl
mov
hlt
outsb
mov
iret
and
jl
pop
rcll
lods
aam
or
imul
rcrl
fstpt
adcl
addl
fmuls
sbb
mov
xor
lret
aad
insl
cmc
fisubrs
push
out
data16
pop
and
aas
or
push
xchg
lods
adc
imull
dec
sbb
out
addb
pusha
mov
xchg
inc
out
ljmp
adc
inc
leave
aam
aas
adcb
xor
or
sarl
scas
rcrb
pop
cmp
fs
roll
dec
int3
push
adc
popf
sahf
xchg
jne
inc
idivl
loop
fisttpl
lds
mov
or
nop
fsubs
aad
loop
xchg
inc
test
cmp
aam
jge
mov
mov
mov
mov
inc
or
lods
xchg
and
mov
push
lea
fcmovb
push
xor
loopne
push
xor
jb
in
loopne
je
data16
add
aam
jl
jmp
add
cld
mov
rcl
cmp
icebp
aad
bound
adc
cli
jmp
sti
aas
or
or
lods
push
sub
jo
not
xchg
mov
cli
in
mov
out
cmp
cmp
mov
stc
inc
add
outsb
cs
xor
push
mov
nop
cs
adc
mov
aam
mov
popf
fildl
stc
jle
jecxz
int
les
sub
out
mov
inc
mov
in
mov
adcb
out
out
pop
test
aas
dec
jns
js
xor
inc
stos
adc
mov
lods
mov
pop
aas
sbb
test
mov
inc
inc
and
js
cmp
add
outsb
push
js
pop
addr16
je
aas
cld
sbb
mov
in
lcall
das
pop
call
xchg
ss
not
mov
in
add
loop
in
fidivrs
enter
clc
rcr
pushw
jg
lock
cmpsl
pop
jnp
xchg
and
imul
lret
test
pop
adc
add
aas
push
lods
sbb
xchg
iret
lahf
jo
mov
addb
out
sub
xorb
sbb
push
xor
xchg
ljmp
shll
je
inc
cmp
imul
sbb
pop
sub
sub
decb
mov
sub
xchg
int3
dec
lock
or
inc
mov
mov
add
iret
push
mov
add
cmp
mov
imul
dec
paddusb
out
cmp
mov
adc
imul
test
div
push
inc
push
cmp
call
lods
xor
push
jne
in
push
push
int3
and
or
aam
scas
test
sub
or
mov
mov
or
mov
testl
push
xchg
rcrb
inc
lret
out
mov
xchg
jne
pop
and
dec
sub
push
lret
std
push
sbb
pop
jecxz
aaa
scas
sbb
xchg
cmc
fnstenv
mov
sub
xchg
sbb
and
cs
stc
cmpl
scas
push
ret
bound
pop
nop
popf
int3
mov
mov
jmp
ss
adc
add
xor
in
cwtl
adc
aam
xchg
xchg
dec
fs
frstor
mov
lock
sbb
pusha
jo
hlt
test
shrl
into
mov
lock
les
mov
mov
sub
pusha
pop
aaa
bound
pusha
sbb
sbb
pop
out
scas
xlat
repz
mov
and
ret
pop
loopne
mov
cmp
cmc
inc
xchg
pop
addb
test
int
outsl
jae
sti
dec
xchg
clc
mov
xorb
mov
push
fs
aad
iret
sbb
jae
mov
pop
clc
adcl
sbb
repz
xchg
rcrb
movsl
push
lods
or
xchg
loop
and
cmp
add
jo
and
dec
xchg
pop
cld
stc
jo
repz
inc
mov
movsl
into
lret
sti
or
pop
push
or
cmp
rolb
push
push
iret
mov
cmp
push
inc
int
mov
bound
insl
mov
push
add
jge
xchg
in
mov
xor
mov
lret
aaa
and
into
leave
jne
ret
mov
es
cmpsb
sbb
dec
mov
dec
xchg
loopne
pop
or
das
push
lea
pop
arpl
xor
xchg
bound
cmpsl
or
cltd
pusha
je
insl
push
jle
push
in
sahf
stos
dec
add
popa
cmp
rorl
pop
pusha
xor
xlat
fisttpll
insb
cltd
xor
mov
mov
inc
mov
mov
pop
push
aaa
jmp
ljmp
repz
daa
cmp
lahf
scas
inc
push
xchg
fcoml
and
cld
dec
out
loope
and
adc
dec
push
xor
cmc
pop
mov
pop
dec
sbb
js
and
mov
testl
jl
sub
in
aam
jl
sbb
cwtl
jecxz
or
sahf
xor
stos
cs
outsb
lock
mov
es
sahf
movsb
dec
xor
pop
cli
sahf
and
arpl
push
rcrb
and
and
test
sbb
leave
xchg
out
sub
pop
jge
repnz
jne
inc
je
jmp
popf
cmp
adc
xlat
dec
outsb
xor
mov
mov
push
fisubl
fists
loopne
clc
loope
repz
stc
mov
pop
push
mov
cmpl
and
xor
add
insb
or
xor
iret
into
dec
pop
lret
fiaddl
mov
lods
push
out
adcl
loopne
ror
xor
mov
inc
scas
mov
stos
jp
ljmp
adc
cmp
fcomps
dec
xor
inc
jge
out
or
add
test
dec
cli
pop
jne
test
add
mov
int
filds
imul
sbb
int3
mov
sub
or
inc
mov
xchg
mov
mov
lahf
lahf
jns
mov
inc
xor
aas
dec
sub
mov
lahf
mov
sub
jno
jns
out
dec
cli
pusha
push
mov
icebp
rcl
add
addb
sub
lret
adc
dec
loopne
fcmovnu
mov
add
pop
and
in
xor
into
mov
sbb
inc
mov
cltd
cltd
fsubs
dec
outsl
dec
ss
pop
sbb
adc
mov
cmp
and
shlb
mov
cmp
mov
aaa
lds
inc
fwait
sub
push
lcall
insb
mov
setp
mov
mov
dec
stc
lahf
or
cs
sbb
inc
sbb
mov
inc
int3
and
in
daa
and
jbe
mov
mov
xchg
dec
insb
das
adc
hlt
and
shll
add
in
or
test
push
xchg
mov
mov
lea
mov
pop
dec
into
push
pop
inc
popl
test
cmpsb
or
pusha
fs
dec
rcrb
dec
sub
sbb
test
dec
outsl
xchg
mov
dec
repz
std
orl
pop
mov
clc
mov
jno
mov
push
sbbb
fnsave
ds
fsubl
add
fwait
add
xchg
mov
sub
jbe
aad
out
les
call
jae
push
addl
pop
vmovdqu16
pop
add
cmp
adc
loope
in
sub
dec
dec
ss
xchg
and
aas
fwait
dec
push
push
cmp
pop
pop
inc
mov
andl
push
lret
xor
dec
rcl
inc
jb
ljmp
and
test
jo
cmp
lock
cmp
stos
sbb
cmpsl
es
fwait
loope
ds
xchg
and
dec
push
movsl
and
push
dec
iret
loop
fiadds
mov
xor
cmp
lock
fsubrp
lods
stos
sbb
push
xchg
sub
mov
jbe
fcomi
fwait
cmp
push
xor
dec
jae
mov
sbb
push
inc
clc
fst
fidivrs
je
jb
loope
and
ljmp
push
js
dec
pop
hlt
jb
jg
cmpsb
sbb
ret
addb
pop
add
jl
dec
mov
cwtl
lea
ror
sub
push
xor
mov
jb
shlb
fwait
push
and
mov
movsl
mov
das
loopne
repz
jle
cs
adc
mov
push
jb
push
xor
jnp
or
cmp
sbb
add
and
clc
shrb
shr
in
sbb
sahf
into
dec
adc
or
or
add
jne
or
xor
mov
jns
xchg
iret
push
mov
xchg
cmp
lret
jecxz
jp
push
push
xchg
pop
push
mov
loop
and
ds
mov
les
pop
cmpsb
or
mov
dec
sbb
xchg
arpl
pop
jmp
adc
aaa
fsubl
inc
int3
cmp
popf
mov
push
pop
mov
pusha
stos
cs
in
mov
std
add
movsl
mov
inc
or
jns
cmpsl
jae
and
das
or
xor
pop
add
aad
fnstenv
sarb
es
cmp
lret
rorb
xor
roll
andb
push
incl
add
dec
mov
imul
sbb
sbb
lea
dec
lods
in
dec
dec
mov
adc
dec
sbb
lret
dec
push
xchg
stos
and
mov
sbb
cmpsb
rclb
andl
add
in
push
arpl
fsubl
adc
pop
inc
pop
std
jle
or
push
pop
insl
mov
outsl
out
movsb
ljmp
jne
out
push
lds
lahf
and
in
mov
mov
pop
mov
mov
xchg
insb
notl
std
xchg
sbb
das
je
stos
aas
and
dec
mov
xchg
pop
jp
shlb
fisttps
or
xor
hlt
push
mov
insb
out
inc
lahf
jmp
cli
sub
push
stc
push
mov
cli
es
fstps
xor
test
sbb
bound
mov
movsl
ss
cmc
jo
pop
rclb
in
mov
sbb
leave
pushf
jns
insl
cmpsb
jae
lods
iret
sub
dec
sbb
inc
jo
inc
dec
enter
or
arpl
add
push
mov
or
sub
sub
jno
test
js
idivb
add
cltd
add
bound
cmp
stos
into
iret
mov
mov
aas
jae
xchg
xchg
and
movsl
scas
mov
dec
sbb
cmpsl
adc
pop
sbb
cs
cmpsb
add
enter
cmp
pop
cmp
sub
jmp
repz
stc
ficomps
xor
and
mov
add
mov
adc
xchg
jl
mov
test
movsb
cmp
in
pop
dec
int3
sbb
das
push
mov
add
mov
out
jl
mov
popf
xchg
sti
shrl
fcomip
aad
mov
repz
mov
dec
out
loopne
mov
pop
out
inc
mov
stos
mov
jg
mov
add
sbb
mov
jb
data16
sahf
clc
mov
or
mov
dec
and
mov
ss
sub
mull
fdivrl
fisubl
xchg
sbb
pop
pop
mov
clc
scas
dec
addr16
stc
ja
rcll
rcl
mov
test
rcr
call
dec
mov
add
add
sbb
mov
nop
xor
pop
es
dec
das
inc
movsb
or
push
push
cmc
stos
lods
mov
cmp
pop
push
xchg
inc
cmp
scas
mov
and
pop
into
out
addr16
movsb
push
es
pusha
jmp
push
out
pop
arpl
mov
adc
xchg
inc
adc
cmp
imul
andl
std
loopne
cs
push
push
lds
popa
sbb
stos
xor
push
sub
loop
cmp
jno
cmpsl
add
xor
pop
mov
push
jecxz
cmp
jmp
jg
rcl
xchg
sarl
addr16
or
icebp
pop
mul
mov
es
insl
in
mov
mov
mov
inc
jno
shl
sub
es
sahf
jl
filds
jmp
loopne
jns
sbb
leave
rcrl
js
xor
sbb
rcr
inc
xlat
inc
imul
lret
add
jns
sahf
mov
lods
fisttpl
inc
inc
test
xchg
cmp
sub
mov
or
pop
push
jo
pop
in
dec
loope
add
mov
in
das
mov
imul
shll
iret
fld
dec
ja
add
aad
dec
and
add
fisubs
lods
icebp
lods
lock
jne
aaa
int3
shlb
fmuls
bound
notb
pop
ja
std
fnstenv
sub
jns
inc
inc
push
sbb
fwait
xor
iret
aas
cmpsl
mov
pop
add
rcrl
negl
repnz
cmp
dec
sub
sbb
repz
mov
xor
sti
pop
cs
dec
xchg
ror
pop
mov
jo
fstl
dec
add
sbb
mov
add
fldcw
pop
push
repz
mov
stos
rcll
int3
jne
fst
lds
lds
mov
or
pop
pop
call
test
test
sahf
mov
nop
add
jge
push
push
rcrl
xchg
cmp
jmp
and
int3
lret
int3
fsubl
add
addr16
xor
jle
mov
das
pop
xchg
cmp
imul
call
xchg
mov
mov
xor
fistpl
ja
in
push
das
xchg
sqrtps
and
jp
push
xor
loop
xchg
pop
mov
sbb
inc
xor
cmc
push
cmp
mov
cli
subb
sbb
or
adc
lahf
cmc
xlat
jmp
jge
mov
lock
in
shlb
andl
or
xchg
xchg
fst
inc
roll
push
dec
sbb
mov
in
cmp
inc
mov
push
cmpb
dec
mov
je
les
addr16
jmp
xchg
dec
out
xor
jge
mov
jl
gs
dec
loop
stos
popf
and
daa
pusha
jg
cmp
xchg
iret
je
scas
mov
fstpt
sub
fildl
iret
adc
jle
imull
and
in
and
cmp
xchg
push
lahf
mov
iret
mov
neg
add
cmp
les
xor
dec
je
ret
pop
in
lcall
clc
or
fcos
jne
popa
cltd
inc
scas
stos
icebp
inc
inc
insb
lds
or
fnstcw
enter
jno
add
push
add
test
loope
pop
icebp
sub
cmp
clc
gs
imul
fstps
push
stos
gs
jmp
cmpb
sub
xorb
cld
inc
test
frstor
gs
sub
push
sbb
std
test
sub
js
scas
fs
int
testl
mov
test
adc
xchg
mov
add
scas
adc
dec
inc
and
mov
aaa
jnp
clc
cmpsb
lret
pop
out
shrl
test
add
xlat
sbb
orl
dec
dec
push
mov
push
es
test
dec
mov
les
fisubs
pop
and
mov
mov
pop
pushf
cmpsb
clc
js
push
xchg
mov
add
int3
mov
sbb
jno
in
and
pop
mov
inc
leave
and
icebp
jae
lea
icebp
sub
mov
orl
mov
inc
divps
sub
add
nop
cmc
jp
inc
xchg
fs
mov
insl
dec
add
test
jle
lret
cmpl
clc
cmp
fiadds
das
inc
mov
fnstcw
adc
and
fsubs
es
mov
shr
scas
dec
lock
xchg
sti
add
pop
jbe
es
in
and
aad
scas
and
sbb
jb
cmp
inc
dec
lahf
lock
test
or
mov
filds
adc
ret
movsb
jg
push
jmp
popf
adc
or
sbb
jp
fs
or
imul
adc
jle
sbb
dec
lods
ds
mov
orb
les
sub
cmp
sahf
and
imul
xchg
popf
mov
cmp
gs
pop
and
jge
scas
sub
or
lea
mov
dec
push
lock
fwait
out
loope
fwait
lds
push
ja
cmp
or
insb
ret
mov
pushf
imul
adc
jg
cwtl
push
in
sub
inc
jae
mov
lcall
inc
mov
sbb
cmp
rorl
mov
xchg
in
dec
jae
stos
dec
jl
stos
push
je
stos
push
xchg
and
in
and
nop
mov
out
les
mov
loopne
call
shll
push
dec
dec
fldt
or
pop
fucomi
dec
add
mov
mov
pop
add
out
ds
inc
rcr
arpl
xchg
or
fisttpll
adc
push
aam
clc
mov
inc
jo
mov
and
xor
mov
fcmovbe
fsts
lahf
out
push
cwtl
pusha
int
test
ret
mov
dec
sti
push
xlat
pop
xor
jbe
fucom
mov
insl
xor
xchg
mov
out
outsl
popf
jmp
addb
ret
in
cmp
sub
sub
push
pop
pop
fisubs
push
jne
lods
into
popa
stos
add
and
push
xchg
push
cltd
test
fidivrs
mov
jb
bound
stos
cmp
dec
sub
pop
sbb
or
adc
cmp
pop
daa
sbb
mov
sbb
xor
std
jecxz
testb
test
cvtsd2ss
mov
test
repnz
sub
cmp
jno
imul
ret
stos
lea
imul
icebp
pushf
adc
cmp
or
mov
addb
push
mov
pop
lcall
into
add
les
jae
inc
into
mov
inc
inc
cmp
mov
in
mov
mov
inc
negb
or
xchg
and
sbb
or
xchg
jecxz
pushf
lret
fld
jle
loop
out
pop
iret
jb
push
insb
xchg
adc
mov
loope
xchg
int
mov
bound
pop
mov
lret
cmp
fisubrl
fwait
xchg
xchg
loop
mov
cmpsb
cmp
not
popf
sub
sarb
xchg
cmp
clc
xor
rclb
aam
cmp
stc
mov
in
movsl
iret
aaa
test
sti
sarb
into
ret
push
fistpl
jle
daa
xor
sub
push
aaa
pusha
insb
aam
fdivrp
pop
cmpb
arpl
sbb
xchg
push
xor
mov
test
adc
scas
sbb
in
inc
loope
out
mov
xchg
cmp
and
mov
test
or
xor
lods
cmp
test
inc
sti
test
sti
push
jp
xor
repz
lret
in
pop
test
es
and
pop
adc
add
xlat
xchg
fdivl
aaa
pushf
push
mov
mov
lret
test
outsb
add
inc
cmpsb
bound
xor
punpckhdq
aaa
fs
fdivrl
mov
stc
and
xchg
shll
add
add
mov
xor
add
or
xor
mov
mov
dec
mov
pop
mov
jbe
jl
movsb
pop
sub
scas
das
fsubr
pop
fdivrp
lock
sbb
xorb
jle
dec
shrb
pop
inc
push
mov
mov
hlt
lret
push
loopne
std
xchg
arpl
stc
and
jge
outsl
arpl
pop
xchg
xor
add
xchg
leave
les
je
or
fs
jl
add
xchg
aad
orl
fwait
negl
fmull
out
and
push
sbb
out
mov
xor
pop
push
mov
push
pusha
mov
sbb
sbb
cmp
movsl
call
pop
jns
dec
or
cmp
xor
xchg
push
in
dec
inc
insb
and
inc
aaa
sbb
fucomi
fcompl
cmp
into
icebp
sarl
xor
lock
mov
bound
pop
fs
mov
xchg
adc
call
in
adc
jae
mov
dec
mov
mulb
rorb
adc
lods
cmp
test
jno
xorl
inc
pop
fstps
push
or
iret
xchg
movsb
adc
test
cmp
leave
xchg
push
sub
inc
cmp
dec
cmpsb
push
sbb
iret
hlt
aaa
pop
or
cld
jge
in
cmpsb
jne,pt
xchg
dec
icebp
pop
inc
fists
sbb
inc
or
inc
jns
into
test
push
arpl
cmc
imul
repnz
outsl
xor
pop
xchg
xchg
adc
sbb
adc
xchg
js
push
sbb
jb
leave
cmp
pop
sbb
insl
insb
pusha
jbe
xchg
mov
cltd
jne
and
aam
rorl
push
sbb
pop
pop
xlat
sub
and
jnp
jnp
dec
cmp
clc
push
add
or
and
pop
insb
cmp
lods
push
mov
shl
test
add
push
in
ja
test
push
out
js
inc
cmpsl
outsb
lcall
mov
or
rcrb
fs
inc
xchg
jg
jl
cmpl
fcom
out
mov
outsl
or
xchg
xor
jae
mov
xchg
hlt
or
lods
cmp
add
sahf
pop
pop
mov
or
xor
arpl
aaa
sbb
mov
push
adc
movsl
popa
or
test
movsl
shlb
movsb
push
es
adc
inc
mov
cmp
dec
jmp
test
mov
popa
mov
xchg
inc
cmpsb
sub
push
fcom
call
rol
popa
mov
bound
jae
dec
inc
sar
cmp
xor
cmpsl
ja
and
jle
movsb
inc
icebp
loope
sbb
inc
fisttps
mov
cli
mov
xchg
cmp
insb
push
iret
sbb
and
push
popa
cs
flds
imul
lock
leave
mov
loop
out
clc
inc
pop
in
dec
jp
stos
ljmp
sub
mov
sti
pop
ljmp
xchg
sbb
inc
inc
out
test
addr16
pop
inc
or
or
xchg
arpl
mov
inc
pop
shl
jns
outsb
ret
or
cld
call
mov
xchg
dec
lods
xlat
mov
and
sahf
mov
fstpt
mov
lcall
out
popa
add
xor
xor
push
enter
push
enter
mov
ljmp
rorl
shll
insb
or
loop
popf
push
stc
and
sarb
lret
mov
aam
mov
lods
out
mov
daa
jmp
and
jns
dec
mov
xorps
adc
fidivl
or
jae
ljmp
loopne
sbbl
inc
xchg
mov
jbe
mov
jp
mov
and
cli
add
mov
in
push
adc
rorb
cltd
pop
push
dec
outsl
mov
mov
loopne
ror
mov
dec
jnp
add
push
or
lea
cmp
lock
and
cmp
push
out
xor
adc
xor
xor
pop
xor
cld
sub
clc
scas
stos
mov
fimull
adc
push
cld
pop
push
fldl
cmp
lcall
js
sbb
test
dec
inc
xor
pop
push
xchg
sub
xlat
mov
cmc
mov
popf
pop
push
cld
test
dec
push
add
fnstcw
jnp
inc
lea
xchg
cmp
pop
adc
pop
sub
into
sbb
movsl
fnstsw
aas
add
jecxz,pn
adc
aad
repz
or
pop
mov
cmp
mov
sub
sub
jmp
stos
mov
pusha
sbb
adcl
xchg
sbb
outsb
cmpsl
mov
fdiv
sub
in
je
cmp
nop
lahf
gs
mov
jp
or
imul
in
iret
push
loop
lods
je
popf
mov
inc
insl
pop
and
loop,pn
sbb
fistl
test
nop
or
xchg
cltd
stos
cmp
cltd
xor
mov
and
mov
jmp
sbb
dec
mov
faddl
sahf
push
pop
pop
pop
jo
mov
call
out
push
cmpsl
rcr
xchg
test
xchg
pop
mov
int
incb
pop
push
les
mov
jnp
loopne
test
orl
cmpb
inc
jp
test
mov
stc
loop
sti
out
jl
popf
and
mov
lea
movsb
lret
mov
add
or
iret
and
dec
in
ret
cltd
fildl
les
call
arpl
or
outsl
mov
mov
sbb
push
sbb
cltd
popl
lds
sbb
insl
xchg
jp
push
push
sahf
adc
inc
jno
cmpb
pop
fcmovnb
push
jbe
sti
sahf
mov
scas
bound
jbe
jl
mov
into
and
sbb
and
jnp
push
sbb
into
daa
push
push
adc
or
fildl
add
mulb
fwait
arpl
and
push
int3
dec
pop
loop
push
or
cmc
jp
sub
sub
xor
fcoms
test
ja
mov
cmp
mov
jp
insl
mov
imul
pop
pop
and
inc
pop
sbb
push
les
dec
push
sarl
mov
mov
ljmp
sub
jno
push
pop
bound
popf
cli
inc
inc
xchg
dec
xchg
xchg
add
call
aaa
jnp
add
push
mov
into
test
dec
pop
jg
xor
ds
fs
int3
sub
jno
mov
pop
cwtl
dec
and
adc
adc
pop
addb
mov
or
and
movsb
dec
push
cli
add
cmp
mov
aaa
repnz
or
push
push
adc
jg
adc
rorb
pop
and
sti
fs
mov
imul
clc
jp
nop
enter
fnstenv
adc
and
iret
ss
pushf
lcall
daa
dec
arpl
repz
mov
aad
mov
mov
xchg
popa
out
mov
in
test
cmpsb
cltd
outsl
cmp
ret
pop
xchg
lock
pusha
xchg
ja
dec
mov
jns
movsl
inc
xor
mov
fsubrl
mov
jbe
gs
movsb
xchg
int3
in
xor
dec
push
lock
cmp
arpl
push
lds
pop
imul
cmp
outsl
cs
rcll
stos
out
xor
and
outsl
in
lret
es
mov
ret
leave
dec
aad
mov
loop
mov
xchg
and
and
dec
jbe
mov
xchg
and
mov
pop
hlt
sub
sub
dec
add
lahf
and
xchg
inc
or
arpl
test
xchg
push
push
nop
movsb
leave
in
movsl
and
cmpsl
insb
mov
mov
js
leave
xchg
out
sbb
daa
pop
pushf
mov
xchg
addr16
mov
jmp
or
fists
aad
xor
dec
cmp
inc
dec
adc
sbb
jp
pop
es
sbb
scas
add
shlb
sbb
int3
insl
iret
jb
add
mov
daa
xchg
sub
adc
leave
hlt
adc
dec
scas
cltd
faddl
fnstsw
mov
mov
push
mov
cmpsb
pop
flds
sbb
jno
test
or
mov
inc
mov
enter
dec
mov
int3
gs
cmpsb
sbb
xor
or
cwtl
cmp
pop
test
push
sub
xor
add
aaa
pop
movsl
jmp
inc
push
out
fucomi
out
adc
push
push
push
in
std
sarb
gs
imul
xchg
lret
rcl
nop
scas
dec
jnp
mov
ljmp
mov
je
mov
out
loope
movsb
jecxz
and
pop
test
outsl
imul
test
out
pop
ds
hlt
stc
sub
jp
pop
mov
lds
and
or
sbb
xchg
and
mov
mov
cmp
and
cwtl
jecxz
idivb
sahf
leave
les
mov
mov
repz
inc
sahf
cmp
mov
rcl
add
xor
sub
lods
xorb
pusha
mov
loopne
inc
adc
sub
test
add
sub
jge
bound
notb
inc
or
pop
aaa
push
das
sahf
sbb
and
lahf
or
sbb
jo
pushf
addl
add
mov
mov
or
ja
jmp
jno
mov
xchg
xchg
test
cmc
stc
xchg
movsl
sbb
cs
cmp
mov
mov
mov
push
and
lock
pushf
aad
pop
enter
nop
cmp
fwait
iret
mov
dec
cmpsb
or
shlb
jbe
add
inc
adc
and
sub
mov
pop
int3
shlb
sub
lret
jne
mov
inc
xchg
in
push
popa
pop
xor
ret
jle
push
rsm
jecxz
scas
mov
pusha
pushf
ljmp
ret
dec
push
das
lock
jp
inc
add
add
outsb
xchg
sub
aas
add
testl
sahf
sbb
roll
lods
ret
scas
xchg
or
lods
push
inc
cwtl
add
popl
jno
loop
lahf
xchg
pop
mov
cmp
movsl
adc
adc
push
outsb
enter
mov
int
ljmp
out
adc
jmp
mov
ds
and
aas
imul
dec
jmp
nop
stos
pop
push
mov
sbb
fldt
push
xor
iret
incb
fbstp
stos
nop
mov
mov
push
fidivrl
adcb
xchg
mov
pusha
inc
cmp
mov
and
jns
fdivp
std
mov
push
hlt
push
stos
cmp
clc
addr16
jae
dec
jle
mov
and
filds
sub
stos
sub
in
inc
push
mov
in
mull
fldenv
lods
xorb
mov
lcall
cmp
mov
out
clc
dec
push
jl
mov
mov
scas
mov
sti
shlb
test
push
mov
ret
stos
lahf
cmp
clc
cmp
sahf
inc
xchg
fstpt
lahf
dec
jg
insb
repnz
gs
les
mov
clc
pop
test
dec
inc
fldenv
sbb
clc
mov
movsw
or
arpl
mov
imul
frstor
in
xor
push
push
sub
sahf
mov
adc
pushf
mov
es
aad
pop
pop
lods
fwait
scas
lret
leave
adcl
push
jnp
out
std
sbb
inc
mov
push
xchg
into
aaa
sub
call
gs
in
pop
sbb
jne
add
xor
lods
in
xchg
loope
mulb
mov
sbb
lret
add
pusha
fisubrl
push
lret
mov
sahf
cmc
fcoms
cmp
sbb
xchg
push
add
cltd
push
leave
std
mov
dec
outsb
out
sub
mov
loop
jno
mov
popf
cli
jae
in
jge
divl
jmp
and
sub
test
inc
mov
inc
insl
xor
push
mov
cmc
dec
js
add
cmpsl
cltd
push
dec
or
mov
and
fisttps
imul
dec
push
and
xor
in
cmc
jo
dec
add
hlt
push
inc
scas
out
movsb
test
call
push
sbb
sti
jle
es
push
adcl
push
lret
shlb
lock
icebp
xchg
cwtl
mov
pop
aad
adc
mov
lods
dec
movsb
adc
mov
rorb
xor
pushf
push
mov
add
adc
and
mov
ficompl
out
add
pop
stc
and
cmpsl
cmp
and
sti
xchg
push
push
mov
icebp
flds
daa
and
mov
mov
fistpl
jl
push
cmp
fmulp
add
les
andl
push
call
shl
negl
cld
jb
ljmp
shrl
mov
test
dec
movsl
adc
xchg
adc
xchg
shl
pop
push
xor
jp
pop
xor
testb
cmp
fisubrs
repnz
outsb
rol
lods
fnstsw
pop
add
mov
jb
push
int
jle
orb
jo
scas
insb
inc
xchg
cwtl
mov
jmp
mov
jno
gs
and
pop
fbstp
sti
pop
xor
hlt
xchg
jae
xchg
inc
fstl
imul
loope
pusha
jb
bound
roll
lret
mov
out
daa
sub
dec
sub
in
or
test
rclb
ret
js
cmp
inc
cwtl
scas
rorb
pop
push
pop
push
aaa
jecxz
icebp
rorl
test
dec
add
subb
lds
adc
inc
or
and
add
repnz
mov
cmpl
nop
rcr
push
inc
jb
push
jp
push
adc
dec
mov
push
loopne
push
adc
fstl
push
mov
mov
mov
outsb
pop
cmp
mov
mov
divl
fcomps
mov
push
fs
xor
inc
xchg
dec
into
test
pop
popf
ja
sbb
sbb
fidivl
push
mov
and
int
sbb
mov
scas
aaa
ficoms
jbe
and
sub
lds
movsl
inc
sub
add
cmpl
sbb
stos
and
mov
rorl
dec
inc
ret
or
xor
sbb
mov
push
dec
push
aad
xor
and
sbb
sbb
add
lcall
lret
pushf
sub
mov
xchg
xor
mov
adc
and
orl
inc
dec
pop
lret
inc
loopne
in
aad
mov
push
mov
or
imul
div
rclb
ja
ret
cltd
adc
inc
imul
fiaddl
jmpw
xlat
push
jae
ljmp
fmull
ljmp
movsl
ljmp
mov
imul
sarl
inc
dec
loop
aaa
lds
push
xor
jmp
icebp
loope
xlat
push
dec
sub
mov
test
jno
lret
add
mov
aaa
mov
mov
stos
mov
insb
or
xchg
cmp
fwait
push
inc
cmp
fstl
test
out
iret
aad
jno
sbb
cmp
adc
adc
ljmp
sbb
iret
jecxz
rol
xorb
mov
mov
adc
cmp
inc
add
mov
dec
or
imul
mov
add
bound
ret
sbb
jne
in
push
fnstcw
add
aas
adc
lea
stos
inc
outsl
pop
jns
ss
xchg
mov
jmp
jp
xchg
and
int3
xchg
jo
in
pop
les
aaa
je
imul
js
subb
pop
imul
sub
add
cli
popa
mov
lahf
je
mov
lss
pop
cs
scas
mov
int
dec
fstp
mov
sbbl
push
pushf
arpl
mov
enter
push
add
aam
dec
add
xchg
cmp
pop
fcomi
xor
inc
bound
fs
icebp
js
xchg
jl
mov
ss
xchg
aam
dec
mov
mov
hlt
mov
sub
fisubs
sbb
lahf
mov
push
mov
sub
cltd
push
and
mov
call
sahf
lds
cmp
repz
pop
das
cwtl
test
outsb
push
dec
dec
bound
ljmp
dec
push
xchg
dec
push
imul
addr16
out
pop
mov
mov
adc
into
mov
mov
lcall
mov
mov
loop
mov
dec
dec
scas
or
pop
mov
fdivrs
pushf
cmpsb
mov
movsb
xor
leave
pop
in
out
jp
pushl
gs
cmp
out
lret
rorl
cwtl
mov
jl
movsb
push
cmp
pop
into
mov
add
pop
arpl
adcl
inc
add
movsb
xor
jo
in
xor
scas
mov
mov
imul
jl
xor
je
arpl
fstl
cmc
mov
cmp
mov
repnz
sahf
mov
mov
or
mov
inc
lock
xchg
jno
ja
shrl
or
clc
sbb
push
xchg
xor
mov
lds
loope
inc
shlb
nop
cmp
pushf
lret
dec
outsl
pop
cmp
xchg
aad
outsb
out
cmc
lahf
sub
das
jg
daa
imul
dec
mov
sti
call
test
pop
xor
mov
cwtd
sub
js
pop
fistl
push
pop
dec
jb
sub
mov
mov
andl
mov
pop
les
push
sbb
pop
out
pop
aam
mov
dec
lret
cmp
nop
cmp
jge
jns
inc
cmp
xor
sarb
dec
jbe
iret
cmp
add
fsubrs
dec
std
jnp
int3
mov
sub
cltd
jg
mov
call
insl
lret
inc
ds
mov
fwait
mov
fldl
jle
push
test
pop
popf
sub
int
dec
xor
lahf
test
gs
cmpsb
dec
aas
jnp
outsb
adc
addr16
cmc
xchg
ss
xchg
fsubrs
jmp
leave
neg
sbb
or
push
or
ret
add
jecxz
insb
shlb
stos
daa
in
lret
fsubrl
dec
fwait
pop
ffree
loop
aam
lock
and
popf
add
loopne
ljmp
mov
inc
xor
xchg
or
das
cwtl
dec
add
insb
in
and
mov
gs
das
mov
mov
in
mov
xor
adc
imul
mov
cmpsl
push
pop
mov
ljmp
fwait
jbe
push
add
repnz
cmp
lret
inc
aad
stos
mov
adcb
xchg
jmp
or
addr16
push
sub
mov
push
mov
xchg
mov
mov
lock
neg
xlat
mov
clc
sbb
xchg
xor
fnstcw
mov
mov
fildll
mov
sti
sbbl
xor
ljmp
scas
sub
ficoml
add
cmp
mov
jne
push
push
push
cmp
mov
cs
subl
filds
dec
mov
daa
sub
js
jb
adc
daa
add
scas
dec
add
scas
inc
jmp
leave
pop
pop
ljmp
add
movsl
mov
cmp
lretw
ja
adc
ljmp
rorl
xor
add
adc
test
cmp
push
pop
fdivrp
xchg
divb
fs
jns
in
push
jl
fisttps
ret
xor
push
push
mov
mov
addl
cli
sbb
cmp
jmp
les
ret
icebp
and
jp
mov
fimull
stos
xor
sbb
jecxz
pop
sbb
mov
in
sarb
cmp
sbbl
popa
and
shrb
rcrb
mov
pop
and
cli
in
adc
push
xlat
std
das
sub
jge
jne
push
xchg
xchg
aas
clc
mov
xchg
je
outsb
adc
data16
push
popf
roll
mov
dec
or
mov
stc
call
ret
movsb
adc
arpl
pop
jbe
inc
sbb
cld
inc
imul
lahf
mov
and
adc
mov
iret
lock
mov
cltd
push
adc
leave
rcrb
imul
dec
dec
outsb
dec
pop
mov
dec
or
pop
mov
je
inc
jbe
or
pop
jne
push
enter
sbb
xchg
aam
adc
cmpsl
sub
add
fiadds
mov
fisttps
inc
mov
test
dec
push
orb
scas
mov
inc
outsb
test
sbb
int3
adc
ss
jns
xchg
ret
addr16
or
adc
xor
bound
xor
hlt
mov
push
dec
insb
pop
xor
push
mov
mov
xor
mov
push
xorb
mov
ss
sti
pop
icebp
movsb
aam
jo
arpl
sar
dec
movsb
or
in
test
push
test
push
daa
daa
in
mov
jmp
call
xor
mov
ja
jne
shlb
mov
push
outsl
mov
dec
inc
iret
mov
xchg
sbb
and
ja
dec
repz
test
bound
jle
dec
xchg
movsl
mov
sub
mov
imulb
sub
push
mov
fiaddl
imul
fadds
xchg
movsb
fimuls
dec
pushf
sbbb
mov
sbb
cmp
cmp
js
jb
bound
loop
rorb
cmc
in
mov
scas
cmpsl
jl
ja
mov
dec
outsl
mov
add
movsb
out
jbe
and
addl
negl
imul
mov
cmp
out
mov
or
hlt
fldcw
loope
xchg
scas
mov
mov
jge
loopne
sbbb
xchg
jnp
jg
cltd
xchg
push
std
mov
clc
xor
call
mov
mov
sbb
lret
xchg
mov
xlat
pop
or
js
mov
icebp
lretw
cmc
dec
add
and
iret
add
add
push
jae
clc
mov
mov
sbb
pusha
shll
dec
scas
aas
stos
mov
mov
pop
lds
mov
roll
inc
inc
leave
repz
jge
ja
xchg
mov
dec
jno
pop
hlt
in
cmpsl
notl
ja
adc
xlat
shll
ja
push
sbb
flds
sbb
stc
pop
ret
jbe
ret
adc
adc
test
mov
aad
aam
std
cmp
sahf
lahf
movsb
push
dec
jp
fwait
dec
mov
mov
or
rcrl
adc
mov
add
in
in
aaa
mov
cs
cmpsl
add
lods
pop
push
mov
movsb
adcb
sub
sbb
adc
loopne,pn
xor
andl
lock
fidivrl
jmp
xor
cmpsl
punpckhdq
aam
inc
or
nop
pop
mov
inc
jo
and
int
mov
movsb
rep
loope
mov
aaa
es
daa
divb
fbld
movsb
cmovae
in
inc
jmp
in
adc
test
mov
int3
pop
jnp
sub
push
lcall
xor
js
jne
cwtl
sbb
pop
int3
jge
lahf
jg
gs
and
fcomi
ret
inc
je
or
xchg
rcrb
xchg
push
sub
jns
lret
call
js
jbe
adc
ljmp
fldl
jo
fidivrl
xchg
mov
jmp
dec
in
or
mov
jecxz
loop
mov
push
push
jae
test
adc
daa
test
repz
daa
jle
into
adc
pop
hlt
addr16
daa
jbe
test
lret
mov
add
mov
outsb
popf
xor
stos
rol
sarl
mov
fiadds
xor
iret
lods
xor
sub
adc
jns
hlt
mov
and
imul
jb
arpl
cmp
jle
insb
or
adc
dec
cli
and
mov
mov
push
add
ffree
jbe
ffree
or
inc
test
test
rcl
outsl
cmp
fwait
mov
sub
dec
repnz
inc
lcall
jae
xchg
mov
cmp
cld
push
inc
mov
in
stos
adc
inc
sarl
cld
sbb
stos
mov
cmp
rcr
mov
loope
sti
adc
jl
sub
push
sti
test
lret
xor
mov
mov
and
adc
mov
out
pop
mov
and
or
and
mov
mov
jle
into
adc
mov
sbb
pop
in
dec
push
fisttpl
iret
pop
in
es
push
out
jecxz
mov
push
pop
or
cli
repnz
test
cltd
xchg
cmp
mov
dec
lds
and
les
adc
lret
mov
or
mov
jle
in
icebp
jle
test
adc
mov
mull
repz
inc
shlb
push
arpl
push
out
xchg
xchg
cmpsb
les
sarb
mul
jns
xchg
icebp
clc
and
xlat
int
push
int3
adc
push
dec
jl
mov
in
push
push
stos
fdivr
pop
inc
aaa
mov
or
rorl
fs
push
sub
sbb
loop
cmp
cmp
dec
movsl
xchg
test
add
in
ret
shrl
xchg
cmpsb
xor
mov
dec
and
sub
push
sbb
pop
xchg
mov
mov
enter
bound
sub
add
mov
mov
and
cmp
jle
out
mull
pop
enter
lret
jecxz
jbe
sbb
cmpsl
mov
or
push
mov
out
xor
lahf
popf
addr16
inc
nop
and
mov
xchg
lcall
sub
sbb
push
std
mov
xor
cmp
fcmovnb
bnd
mov
add
stos
aam
lds
mov
adc
jne
or
push
inc
xlat
mov
cmp
push
sahf
lahf
sbb
mov
mov
das
pop
and
cmp
fwait
xor
inc
and
cwtl
ss
and
sahf
cmp
stos
sbb
int3
lcall
mov
pop
mov
push
out
int
and
mov
pop
add
push
push
mov
dec
adc
inc
ret
das
mov
push
out
fldt
cwtl
and
sub
ja
push
inc
or
loopne
mov
in
adc
jnp
sub
xor
out
pop
lcall
into
pop
popf
or
test
mov
pop
dec
mov
and
xor
js
aas
testb
pop
movsl
cmp
mov
cmpsl
adc
mov
pop
stos
test
pusha
mov
inc
enter
rcr
push
inc
pop
addr16
mov
pop
add
adcb
stos
or
in
cmp
jmp
roll
jo
push
gs
rcrb
sarl
cltd
cmpsb
cmp
fldcw
sub
and
int
daa
sbb
adc
push
cltd
jnp
add
push
jb
pop
push
ret
cmp
cmp
add
scas
push
jge
cmpsl
adc
rorl
nop
rclb
rep
pop
int3
pop
push
mov
or
rcrl
jmp
in
pop
jmp
insb
ss
push
inc
sbb
mov
push
cmp
push
fcmovbe
pop
out
in
cmp
pushf
out
dec
mov
cwtl
xor
outsb
adc
sub
popa
dec
js
cmpsb
ja
jae
lret
popf
cs
lock
xacquire
clc
imul
mov
test
icebp
out
cmp
jne
fists
mov
xlat
in
dec
push
bswap
mov
inc
add
xchg
cmp
in
stos
mov
cltd
aam
enter
movsb
sbb
enter
out
and
lret
sub
adc
dec
imul
jnp
jbe
xor
xorb
sub
int3
repnz
push
ss
or
mov
insl
ret
mov
cmc
push
add
sub
das
dec
mov
test
or
pushl
jmp
push
mov
outsl
es
int
inc
sbb
loope
push
and
mov
push
lods
call
mov
test
sub
cmp
std
xchg
adc
sub
xchg
jno
sub
fbld
and
addr16
scas
jp
mov
dec
insl
test
loopne
popa
or
jp
adc
cmc
les
cmp
lods
mov
fimull
inc
insb
push
xor
scas
or
mov
mov
shrl
fwait
int3
adc
fwait
icebp
pop
call
sub
mov
test
fwait
xor
out
test
into
ja
mov
aam
insb
lret
cmpsb
cmp
aam
data16
int3
dec
jl
inc
ja
data16
fildl
sub
scas
mov
xor
mov
mov
movsb
aaa
test
xchg
stos
jg
and
arpl
lcall
cltd
adc
dec
xchg
adcb
mov
inc
mov
bound
xor
jb
es
pop
pop
mov
cwtl
mov
pop
push
mov
into
mov
sbb
scas
adc
push
int
es
aaa
out
adc
xor
inc
xor
adc
cmp
mov
jno
shll
jno
fwait
ss
inc
loopne
nop
pop
push
pop
imul
jne
mov
sbb
fsub
add
inc
lock
out
pop
adc
outsb
je
rcll
xor
or
cmp
jg
push
mov
out
pop
sub
mov
adc
push
push
sahf
adc
mov
mov
xorl
js
clc
jg
lret
inc
int3
pop
in
call
add
jns
outsb
push
shrd
push
mov
outsl
mov
xchg
rcll
int
pop
xchg
fisubrs
adc
fxch
xor
shlb
push
cltd
adc
xor
inc
insb
shlb
push
es
and
add
int3
or
sbb
dec
or
push
leave
stos
repz
xor
pop
cmp
jns
sub
sub
fs
test
sti
imul
out
in
insb
adc
int3
jmp
imul
sbb
mov
pop
ret
cmpsl
dec
mov
dec
cmp
gs
insl
fcomps
orb
jp
mov
mov
cmp
lcall
test
dec
pop
gs
enter
push
dec
jmp
cs
and
lcall
outsl
pop
jns
pop
nop
repz
cs
popf
stos
push
fsub
and
lock
dec
mov
loope
sahf
fidivl
stos
or
cmpsb
rorb
xchg
adc
sti
pop
test
out
loopne
in
xlat
sub
test
faddl
sar
lcall
or
repnz
ret
repnz
aam
cmpsb
pop
jecxz
xchg
mov
mov
in
les
in
scas
cltd
jne
sbb
scas
imul
sub
dec
pushf
mov
pop
sbb
int3
popf
jle
daa
call
sbb
adc
pop
mov
sub
shlb
mov
dec
imul
clc
push
add
adc
enter
jns
add
jmp
fs
cmc
cli
cmpsl
add
icebp
and
inc
add
adcb
mov
mov
lods
push
out
lea
jns
xchg
mov
jo
inc
imul
sub
out
push
in
cmpsl
les
adc
aad
stos
sbb
into
aad
adc
repz
int3
mov
inc
jno
and
adc
testl
out
adc
mov
scas
adc
adc
jae
es
leave
sti
cld
mov
je
rcl
pop
decl
xchg
or
test
cmp
add
xchg
inc
test
scas
jmp
out
in
adc
stos
nop
fs
mov
jnp
cmp
pop
pop
jmp
ucomiss
add
scas
ret
push
pop
or
inc
cmp
roll
test
xorl
jecxz
sahf
dec
nop
xchg
sahf
jo
scas
mov
fstps
int3
fmul
mov
popf
lock
add
pop
jg
fmuls
pop
out
enter
xor
das
fsub
mov
hlt
imul
add
outsb
je
jne
push
mov
jle
jge
fldt
pop
test
mov
jne
mov
or
or
andl
push
add
out
add
das
dec
xchg
mov
mov
jbe
sub
cmp
std
movsb
push
int3
pmaxsw
sub
xchg
dec
push
fsubp
mov
shll
loop
daa
adc
pop
mov
ret
dec
fidivrs
ss
push
les
jecxz
gs
dec
push
pop
mov
imul
sbb
jle
mov
in
inc
dec
aad
xchg
sbb
cltd
cmp
push
ds
adc
notb
ja
cmp
xor
cld
jno
jns
insl
lods
xchg
sbb
aad
xchg
xor
push
pop
mov
cmp
push
dec
popf
lret
push
aas
xchg
mov
jo
imul
cmp
ss
pushf
xchg
in
inc
pop
aas
push
xchg
mov
stos
sub
jae
vmovapd
hlt
in
mov
inc
dec
jp
or
jnp
dec
fs
dec
ret
orl
sahf
loope
daa
clc
mov
pop
outsb
jmp
stos
jbe
push
pusha
les
div
inc
add
mov
test
aad
mov
jo
xlat
mov
pop
or
aad
lahf
sub
xchg
xchg
lret
lds
add
pop
sbb
sub
sub
fidivl
leave
stos
cmc
and
mov
or
or
fistpl
filds
jno
sbb
and
out
lret
stos
divb
shll
dec
pop
cltd
loopne
insb
dec
sbb
pop
lcall
dec
mov
mov
aaa
in
and
lahf
call
xor
ror
mov
rcrb
stos
fs
mov
imul
adc
leave
push
xor
stos
rcll
jle
lock
mov
dec
loope
gs
jmp
fiaddl
in
sub
push
lods
dec
enter
movsb
insb
lret
cld
mov
cmpsl
and
xchg
mov
aam
pop
clc
aaa
in
cmp
xchg
js
nop
addl
lea
shlb
pop
jecxz
test
dec
xor
clc
ljmp
insb
adcb
cmc
pop
pop
pop
push
icebp
dec
jp
mov
push
sbb
pop
imul
lret
fwait
sub
mov
loope
lock
fsubs
xor
outsl
pop
or
add
sub
sti
sarl
push
mov
in
add
jecxz
jns
cmpsl
movsl
cli
pop
rorb
xor
pop
pushf
shlb
call
insb
xor
rcrl
aas
xor
mov
int
push
outsl
pop
adc
add
nopl
pop
dec
popa
pop
mov
mulb
pop
mov
inc
lock
test
cmpb
lock
shrb
xchg
push
fcomip
stc
sahf
fucom
js
pop
stos
jbe
dec
mov
mov
jb
imul
subl
push
dec
insl
adc
mov
xor
lds
mov
mov
lods
mov
lret
inc
xorl
test
outsl
test
push
push
mov
iret
xchg
shrb
add
adc
out
dec
mov
xchg
jge
push
orl
cld
push
add
scas
jns
xchg
push
and
pop
mov
sub
nop
je
cwtl
xchg
in
cmpsl
dec
pushf
sbb
cmp
jg
lahf
aad
insb
sbb
rorb
lret
loope
sbb
mov
push
sbbl
add
mov
fimull
jbe
jne
jo
gs
cmp
fldl
mov
test
inc
dec
sbb
xorb
cmpsb
test
sub
insb
dec
mov
pop
fdivrl
sbb
into
out
fldt
test
adc
xchg
das
outsb
insl
jge
mov
les
mov
mov
mov
test
mov
ds
test
push
pop
mov
cmp
mov
ja
cwtl
pop
sti
mov
lret
in
addl
idivb
adc
mov
sbb
je
lahf
cmp
dec
inc
les
xchg
jno
and
sub
loop
adc
sbb
rep
mov
movsl
pop
fistps
ret
fimull
mov
inc
out
push
fcompl
mov
pushf
pop
in
jmp
push
mov
push
jp
in
or
jno
mov
jae
xchg
cltd
test
rcr
mov
pop
or
dec
movsb
dec
aad
sarb
inc
sbb
and
ret
shlb
or
jle
fbld
inc
fdivrs
ss
in
out
cmp
sbb
or
enter
mov
mulb
jg
xchg
inc
out
daa
sub
std
inc
cmp
push
in
cmp
addb
sub
dec
in
jle
sub
dec
shll
pop
js
cli
repz
lret
cmp
add
fwait
test
mov
push
ss
push
fcomps
push
and
xlat
insl
test
inc
imul
pop
and
jmp
mov
push
sub
inc
int3
pop
push
mov
in
movsl
insl
push
sahf
jmp
xchg
and
sub
sub
stos
dec
in
ficoml
xchg
pop
and
in
sar
mov
ljmp
btr
lds
cwtl
or
mov
loope
sahf
in
mov
adc
sbb
xor
idivb
addl
pop
loope
jns
mov
mov
ret
push
sbb
into
jge
jp
pop
mov
call
aaa
mov
fsubrp
add
pop
jle
pop
xor
or
cmp
pop
mov
sbb
xchg
sbb
xor
pop
mov
sub
sub
scas
cltd
mov
and
fwait
leave
xchg
dec
sti
jp
sti
sti
shrb
adc
push
push
int3
cmp
adc
xchg
mov
jnp
xchg
outsl
icebp
mov
cmp
inc
cmp
dec
pop
lcall
std
pop
mov
movsl
in
rcrl
repnz
fcmovu
mov
pop
jbe
xchg
inc
sbb
sub
inc
push
or
push
subl
cmp
mov
cmp
daa
setb
mov
jge
xchg
jecxz
rorb
inc
ret
in
and
xor
fs
inc
shrb
add
push
popa
outsb
add
or
jle
ror
mov
pop
mov
xor
sub
cmp
adc
cmp
adc
fists
mov
jecxz
xor
shl
andb
jno
inc
je
xchg
mov
mov
cmp
push
push
fldt
lcall
ljmp
jmp
or
inc
test
push
sbb
insl
jge
repz
cwtl
jns
cltd
mov
inc
stos
pop
cli
mov
arpl
dec
dec
dec
mov
push
lods
jae
cli
and
or
fisubs
sub
xchg
push
mov
jl
adc
fiaddl
clc
inc
mov
addr16
jmp
ds
iret
cmp
scas
inc
out
subl
dec
mov
sbb
push
mov
pushf
lcall
mov
mov
fwait
push
mov
arpl
inc
dec
les
mov
aaa
div
jg
sub
iret
leave
mov
push
push
dec
movsl
scas
mov
mov
inc
mov
push
rclb
les
xlat
cmp
loop
orl
sbbb
pop
popa
pushf
jge,pt
inc
jle
test
cli
or
cmp
pop
sub
mov
sub
aaa
inc
icebp
add
jmp
xor
mov
cmpb
or
iret
lret
test
les
cltd
adc
cltd
inc
jg
mov
mov
std
clc
or
lcall
dec
orb
movq
sarl
sub
jns
pop
cmp
arpl
mov
mov
xchg
lods
inc
push
pushf
adc
shl
pop
fxtract
aas
cli
or
inc
test
pop
stos
push
sbb
or
ret
sarb
sub
xchg
adc
out
orb
popa
xchg
dec
aas
push
push
mov
sub
clc
cli
insl
jns
mov
add
cmp
test
lahf
mov
pop
sub
mov
cli
sahf
adcb
xchg
outsb
fistpl
lret
gs
xchg
or
cmp
add
imul
xor
es
mov
push
outsl
and
dec
dec
sub
jmp
std
dec
push
mov
pop
mov
aaa
loopne
mov
xor
in
ret
mov
mov
arpl
scas
cs
add
sti
icebp
jne
pop
mov
enter
cmp
xor
in
add
lret
sbb
xor
push
fists
nop
jns
push
jo
addr16
addr16
or
cmp
js
mov
push
xor
xor
repnz
dec
and
mov
jno
popa
imul
out
mov
xor
xchg
outsb
mov
jnp
int3
cmp
jno
insl
fs
jb
dec
sti
jp
jecxz
or
inc
dec
inc
add
push
xchg
xchg
test
mov
xlat
push
das
stos
dec
xor
push
push
pushf
call
imul
lods
push
cmp
shll
or
push
lea
jecxz
jg
mov
jae
adc
xchg
lcall
call
sahf
rcr
pusha
decl
adcl
scas
inc
jno
hlt
cmp
lea
jo
gs
inc
lods
lcall
rcll
adc
fucomip
aaa
addr16
pop
imul
dec
lret
test
out
ljmp
aam
add
mov
adc
daa
aad
stc
xchg
in
mov
xor
or
inc
cmpb
xor
stos
push
cmpsl
jmp
lds
mov
fidivrl
push
add
sbbl
addr16
mov
xlat
add
movsl
xchg
cmp
lods
xor
dec
or
push
xor
cltd
sbb
adc
movsb
in
jmp
cmpsb
mov
fwait
out
test
js
popf
stc
jae
adc
mov
mov
xchg
in
mov
dec
push
sti
ss
cmp
clc
int
and
fwait
pop
mov
test
jno
xchg
sbb
ljmp
push
mov
mov
xchg
fnstsw
mov
filds
loop
adc
outsl
dec
add
lahf
clc
mov
mov
pusha
aaa
jno
movsl
call
pop
inc
dec
scas
mov
loopne
mov
sub
stos
dec
dec
lods
mov
push
ja
js
rclb
incb
inc
leave
fdivl
sub
xor
push
mov
leave
mov
push
push
dec
cmp
cwtl
and
cmp
xchg
sub
push
fnstcw
dec
push
pop
pop
mov
mov
jecxz,pn
mov
mov
lret
mov
or
lcall
adcl
fsubrs
push
leave
loopne
push
lea
inc
movsl
or
sbb
lret
inc
jae
pop
sbb
and
rorb
loope
popf
sub
adc
push
mov
adc
pop
mov
mov
iret
test
in
lret
jle
pop
push
bound
adc
gs
mov
mov
std
inc
pop
ss
xor
add
scas
mov
inc
jle
sub
sbb
jg
push
ret
mov
sbb
cmc
xchg
std
bound
mov
xchg
push
jbe
into
add
or
mov
mov
jecxz
pop
cmp
dec
cmc
jecxz
outsl
rcr
loop
push
dec
xchg
pop
je
adc
popa
and
dec
mov
das
subl
sarb
mov
cmc
mov
sbb
mov
mov
movsl
data16
adc
push
aaa
mov
and
imul
bound
test
fdivrl
cld
mov
mov
push
pop
xlat
xor
inc
xor
sbb
dec
lret
push
fiadds
or
jmp
add
mov
test
adc
xchg
out
popa
push
popf
xchg
outsl
xor
xor
inc
repz
adc
mov
xchg
mov
das
add
aas
sbb
bnd
dec
bound
dec
sub
xchg
xor
insb
sbb
aad
mov
mov
mov
mov
sbb
pop
xor
arpl
je
daa
jl
pop
pop
pop
cmpsl
sahf
or
sub
fisubrs
nop
mov
jne
sahf
add
scas
mov
and
adc
cmp
jns
out
jnp
imul
sub
fcmovnu
dec
sbb
mov
fsubrl
popl
cli
xchg
out
dec
jmp
or
ljmp
jb
push
hlt
leave
subl
or
dec
ret
sti
out
bound
add
and
cmpsb
lods
inc
in
and
test
cltd
mov
sbb
push
rorl
cmp
roll
mov
pop
stc
sub
into
inc
sbb
rorb
xchg
mov
or
popf
pop
test
in
popa
ja
push
mov
pop
imul
ja
lret
push
into
fs
xchg
loope
bound
cmp
out
nop/reserved
or
mov
sbb
popf
lret
xor
cmp
in
imulb
sub
lea
xchg
push
fisttps
adc
je
in
pop
ljmp
add
and
movsb
out
sub
dec
outsl
test
jb
jmp
cmp
in
add
test
inc
cld
dec
pop
push
fnstcw
jp
push
pop
stc
mov
mov
cmp
inc
jae
into
scas
mov
cmp
faddl
xor
add
mov
fiadds
ds
jge
rclb
fistpll
jnp
fisttpll
imul
adc
jmp
jae
jb
mov
cmp
xor
pop
or
xchg
push
shll
ja
jle
mov
shrl
mov
insl
cmp
sub
and
vprotq
ret
inc
outsl
pop
movsb
movsl
cmp
push
adc
rclb
test
loopne
xlat
mov
iret
shr
dec
jecxz
lahf
mov
pop
hlt
ja
fdivrs
pop
mov
lahf
hlt
fbld
cmp
cmpsl
out
lods
sbb
dec
jp
popl
fstpt
xor
sbb
jns
sbb
jle
rclb
roll
insb
add
rcrb
jbe
mov
fisubs
fadd
dec
jnp
shrb
gs
das
cmp
std
fildll
imul
in
sub
out
loope
out
scas
mov
cmp
dec
xchg
inc
xor
lock
jg
sbb
out
mov
clc
lods
in
in
jg
mov
nop
outsl
pop
lahf
mov
or
sub
push
jg
xchg
stc
mov
sub
ljmp
ret
inc
idivl
enter
incb
adc
arpl
ret
in
std
push
test
push
in
or
xor
rcrl
icebp
mov
bndstx
fimull
std
hlt
sub
sbb
push
xchg
xor
test
fnstsw
lds
xor
xlat
nop
and
imul
repnz
test
insl
push
adc
inc
jl
pop
outsb
mov
loop,pn
inc
mov
xchg
arpl
jle
es
sub
in
sbbl
ds
imul
lea
bound
lods
sbb
mov
out
sbb
adc
pop
inc
jp
out
sbb
sub
dec
mov
pop
cmpb
adc
inc
stc
xchg
outsb
add
pop
sub
and
outsb
fstl
rcl
or
in
jecxz
int
or
outsl
sub
ja
lret
and
lock
dec
mov
loop
xchg
jnp
aaa
sbb
loope
ficoms
scas
cld
push
bound
mov
sub
outsl
mov
or
push
js
mov
sub
dec
jmp
insl
mov
lcall
push
popa
cld
lods
cmp
outsl
pop
sub
int
mov
xor
cmpsl
sub
pop
pusha
je
cmpsb
push
fs
pop
js
mov
and
call
jl
sbbl
imul
fadds
pop
dec
das
inc
cmc
push
js
mov
int
je
or
jmp
push
clc
lahf
mov
shrw
mov
sbb
cli
enter
push
sub
imul
fisubrs
add
adc
cmc
inc
mov
mov
sbb
popa
into
jnp
aas
mov
outsb
or
pushf
test
fdivrs
in
xchg
loope
fucomp
cli
cmpsl
mov
lret
faddl
popa
lds
sub
test
enter
cs
xor
ret
cld
stos
adc
xchg
int3
flds
pop
inc
shlb
pop
mov
sbb
lods
mov
adc
jbe
mov
mov
jo
inc
ja
push
testl
sbb
mov
lahf
mov
cmp
in
sub
dec
ss
ficoml
adc
dec
pop
jno
xchg
mov
js
popa
or
or
adc
fadd
sbb
push
mull
subl
movsl
in
lea
rcrl
fcoms
aaa
dec
mov
rorl
jp
xchg
lcall
sub
and
cmp
stos
pop
xchg
stc
movsb
in
lahf
sub
cltd
ret
inc
cld
push
fistpll
push
sub
in
movsb
mov
mov
sub
push
add
add
sbb
push
mov
adc
and
add
or
insb
fsts
ds
jae
pusha
mov
enter
cmpsb
rol
jmp
pushf
mov
xor
mov
pusha
adc
scas
dec
cmp
ss
fcomps
mov
jo
cmp
dec
in
daa
ljmp
inc
xchg
inc
mov
out
pop
and
mov
xor
mov
outsb
flds
mov
into
cmpsb
insl
push
or
scas
adcb
out
inc
cmp
cmpsl
push
adc
or
add
xchg
xor
xchg
ret
mov
test
ja
repz
shrl
lock
lret
add
push
mov
push
lcall
shl
xorl
mov
push
inc
in
xorl
enter
jge
aaa
jns
gs
push
outsb
xchg
mov
cmpsl
cs
fcoml
gs
dec
xor
inc
cmp
xor
icebp
dec
fxch
jns
cltd
jb
mov
lret
dec
clc
sbb
imul
push
or
sbb
fstpl
popa
sbb
mov
add
jg
lret
stos
dec
mov
insl
mov
dec
pop
jg
js
mov
sub
push
or
fstp
idivl
dec
and
push
push
and
les
ficoms
sub
pop
fidivrs
push
sub
xorl
add
sub
xchg
mov
jmp
ljmp
aas
mov
push
popa
xor
sub
test
pop
vmread
loope
mov
inc
jmp
out
mov
and
lret
mov
stos
pop
and
cld
loop
mov
or
mov
aas
sbb
dec
popa
push
xor
arpl
and
inc
mov
or
nop
aas
cld
xchg
mov
inc
iret
je
out
icebp
dec
repz
sub
sbb
cmp
xor
imul
clc
adc
je
hlt
out
and
add
loope
pop
loop
mov
lea
data16
cmp
scas
sti
cmp
fstl
pop
addr16
inc
xchg
mov
adc
add
mov
xorb
addl
or
cmp
xor
mov
or
xorl
in
cmpsl
sti
xchg
lds
jl
jle
inc
in
pop
jmp
dec
jnp
aas
das
cmp
push
out
movsb
push
sub
imul
mov
adc
fnstsw
fwait
jbe
stos
popa
mov
sbb
movl
pop
outsl
add
pop
push
outsb
addb
aam
ret
dec
aaa
xchg
pop
sub
push
aad
sbb
pop
xchg
das
test
xchg
mov
mov
push
scas
outsl
dec
mov
inc
rcrb
ja
cltd
out
mov
pop
cld
add
jle,pn
fwait
sbb
jbe
fists
xchg
mov
xor
pop
pop
adcb
fs
sbb
cltd
cld
mov
jg
or
fs
inc
add
imul
and
shll
xor
sarl
mov
sbb
lods
push
pop
iret
das
add
mov
cltd
test
and
pop
cs
cs
mov
mov
js
mov
rcll
mov
mov
fs
push
xor
mov
mov
fdiv
lock
leave
gs
addb
jg
fs
xor
frstor
sbb
inc
loopne
cld
lret
xchg
aaa
insb
inc
pop
insl
dec
jg
cmp
xchg
mov
mov
fidivrl
mov
pop
fcmovne
lds
loop
push
sbb
movsl
loop
mov
lret
ficoms
push
add
aam
xchg
sbb
dec
adc
jne
test
push
orl
rcl
fsubp
cmpsb
sbb
inc
scas
or
and
stc
out
sub
sbb
inc
xor
daa
decb
sub
inc
repz
lods
inc
mov
jae
sub
pop
int3
xor
jae
orl
dec
fimuls
ss
push
stc
test
inc
xor
outsl
jle
mov
or
inc
pop
pop
aad
mov
imul
and
cmp
out
or
sub
shlb
movsb
mov
scas
aam
or
inc
fimull
jns
pop
mov
dec
rclb
cs
outsl
pop
addr16
xor
cmp
fsubrp
popa
lods
mov
inc
and
fsubrl
push
push
data16
jmp
mov
aas
inc
xchg
and
cmp
cmp
aam
cmpsl
push
aaa
jnp
mov
mov
popa
adc
je
lods
outsb
mov
fsubl
mov
adc
loop
insl
cmp
lcall
enter
leave
scas
enter
test
jp
mov
add
fnstsw
pop
inc
iret
test
pushf
cmpsl
call
mov
mov
ret
xor
stos
xchg
fdivl
pop
loopne
adc
xchg
loopne
mov
aaa
adc
aam
out
mov
cmpl
add
xchg
mov
adc
add
rorb
xchg
pop
test
out
in
bound
mov
popf
rorb
pop
xchg
jae
test
rol
cmp
dec
xor
push
xlat
dec
add
push
jle
pushf
pop
cmpsl
das
xor
fidivrl
in
in
dec
mov
cmp
mov
or
and
notl
test
or
mov
sti
adc
cwtl
adc
stc
xchg
pop
js
xor
insl
ljmp
test
clc
repnz
lea
sub
sahf
addr16
xchg
push
cmp
gs
std
push
inc
xchg
in
dec
or
cld
out
mov
mov
mov
xor
in
cld
jae
in
inc
inc
adc
push
movsb
xchg
push
fistps
inc
icebp
mov
push
xchg
xlat
popf
xchg
int
les
in
rcrl
inc
xor
push
dec
lods
cmp
mov
mov
stos
ss
fwait
aam
add
push
jmp
imul
call
fcomip
insb
aas
and
cmp
adc
push
push
sbb
sub
mov
xchg
sbb
xchg
ret
je
js
dec
popf
xchg
cmp
lret
pop
adc
or
sbb
sub
xchg
mov
mov
test
xor
adc
inc
ret
mov
sub
inc
iret
outsl
and
push
ss
xchg
leave
push
pop
mov
push
push
repz
push
inc
rcrb
mov
cld
sbb
and
mov
ss
outsb
in
fcomip
add
pop
sub
pop
dec
xor
ds
jl
jb
jmp
mov
add
pusha
and
xchg
stos
ret
mov
mov
sbb
sub
aas
sarl
fs
std
xchg
mov
cmp
jno
aad
imul
jnp
sti
and
add
seta
mov
push
popa
bound
ss
push
fisubrs
xchg
ss
mov
dec
arpl
adc
xchg
into
inc
mov
lods
push
inc
popf
inc
ss
inc
ds
lea
xchg
pusha
std
mov
cs
mov
shlb
mov
sbb
dec
sub
jbe
fidivs
fldenv
loop
ret
lods
fsubp
bound
imul
mov
shrl
int3
mov
mov
mov
out
test
mov
adc
js
sub
inc
mov
enter
cmp
push
mov
jne
ret
out
xchg
das
fisubs
xor
mov
or
ffree
mov
lods
xchg
and
jnp
adc
repz
or
insb
jl
add
add
jle
subb
stos
mov
inc
ljmp
jae
xchg
iret
lret
rorl
negl
xchg
fs
in
icebp
inc
loope
das
and
test
adc
lds
or
jecxz
fmulp
pop
negl
je
sbb
out
add
and
cwtl
insl
jl
mov
insb
leave
outsl
dec
and
or
test
push
jb
pop
inc
adcl
mov
sbb
rclb
jp
out
jge
test
adc
pop
scas
or
je
cs
addb
scas
ret
adc
outsl
mov
mov
cmp
test
in
outsb
adc
or
fmulp
lock
or
cli
inc
jg
int3
lods
jge
call
cmp
out
push
pop
xor
or
aas
dec
lahf
cmp
hlt
mov
xchg
adc
scas
mov
enter
sar
add
sbb
or
pop
lods
fisubs
aad
stc
mov
inc
inc
aaa
dec
pop
arpl
flds
sub
pushf
mov
lds
add
dec
push
push
popa
sahf
sbb
pop
pop
cmp
mulb
into
push
lea
lock
cmp
imul
inc
dec
sub
bound
inc
pandn
in
xchg
shll
mov
dec
pop
fsubrp
es
pop
sub
outsb
cmp
adc
lret
bound
push
incb
orb
lods
das
mov
dec
mov
iret
add
inc
xor
mov
idiv
jp
fisubl
hlt
or
nop
lods
pop
in
fs
push
aam
xor
daa
mov
je
push
negb
xchg
push
shl
cmpsl
inc
sub
push
inc
ret
scas
cmp
clc
in
mov
addr16
xor
cmpsl
push
ret
out
sahf
xor
cmc
test
insb
stos
xor
mov
lret
add
sbb
sbbb
sarb
sub
xor
or
in
insb
out
addr16
into
inc
orl
enter
push
ss
inc
sub
adc
xlat
enter
movsb
cltd
loope
sub
fnsave
fcoms
sub
mov
jns
xlat
or
sbb
xor
orb
or
pop
mov
repz
mov
sub
dec
je
push
mov
xchg
mov
jp
icebp
jmp
inc
dec
hlt
aas
negb
lods
mov
aam
aaa
jg
imul
fs
inc
insl
push
and
pop
mov
mov
xlat
rclb
pop
lahf
das
sbb
in
cwtl
dec
enter
inc
cmp
jle
imul
ret
je
add
dec
mov
xor
stos
leave
mov
cmp
or
rclb
and
insl
xchg
inc
ror
lahf
mov
outsb
aam
lcall
sbb
out
push
pop
adc
xlat
push
xchg
out
push
mov
stos
xor
inc
push
jecxz
inc
mov
jne
mov
loop
pop
movsb
mov
jo
inc
or
xchg
ret
adc
dec
jne
sbb
icebp
jns
push
fidivs
push
jne
daa
mov
lahf
mov
loop
xchg
insl
dec
les
iret
push
sub
in
inc
shrb
jl
push
out
inc
or
and
and
cmp
and
jbe
xchg
or
outsb
loopne
mov
mov
and
lahf
pop
add
arpl
jns
dec
std
pop
popa
aas
jle
xchg
mov
push
int3
cs
mov
cmp
sbb
dec
xchg
and
shrl
test
xchg
cmp
xor
dec
fldl
ljmp
push
fsub
imul
in
fdivl
push
pop
leave
aad
sbb
mov
or
dec
inc
notl
fiaddl
aas
or
dec
fldenv
dec
pop
mov
and
mov
add
mov
adc
xor
rolb
mov
popf
icebp
imul
in
jecxz
sbb
mov
test
jnp
and
ds
lret
mov
xchg
push
push
and
xchg
cmp
shlb
cmp
xor
lods
ss
lahf
daa
mov
lods
mov
sbb
and
stc
rorb
cmp
sub
aas
xor
negl
adc
sarl
mov
in
int3
roll
sub
lea
fimull
add
stc
sbb
repz
test
xchg
cs
or
add
xor
mov
pop
push
jmp
cmp
pop
xlat
inc
pop
mov
fistpll
jns
lret
sbb
pop
mov
outsb
in
faddl
fadds
xor
clc
lahf
in
cmp
inc
mov
xor
adc
cmp
in
sub
push
pop
mov
loopne
dec
je
mov
jle
push
mov
hlt
pushl
ljmp
ja
jne
mov
and
out
int3
or
jae
clc
sub
mov
fwait
push
ds
xor
aam
int3
movsb
mov
adc
scas
loopne
add
aad
iret
dec
std
mov
call
fildl
lock
xchg
fldl
test
or
pop
mov
and
pop
mov
inc
out
dec
jle
arpl
ljmp
jecxz
shlb
call
imul
push
cltd
sub
xchg
int
pusha
cmpsl
and
lock
adc
jb
js
jg
sub
test
scas
cmpsb
dec
or
adc
xchg
or
jmp
xor
in
rclb
das
in
sub
mov
mov
cmp
pop
xor
adc
jmp
je
std
cmp
mov
push
inc
fiadds
push
rcrb
push
sbb
lcall
fisubs
fnsave
test
and
add
outsl
mov
inc
iret
push
adc
mov
aad
fwait
xor
mov
xchg
mov
out
imul
psubusw
rolb
inc
test
es
pop
fstpt
lret
pushf
push
pop
push
mov
inc
rclb
cli
jno
cmpsb
mov
leave
mov
jb
xlat
inc
daa
fdivs
sub
test
sub
test
mov
xor
xchg
add
push
scas
inc
sub
lock
sbb
int
mov
outsb
mov
adc
jg
jns
adc
and
inc
pop
or
imul
imul
mov
fnstenv
push
jl
pop
dec
pop
inc
addr16
popl
out
pop
test
in
mov
mov
pusha
outsl
ja
inc
add
fmull
mov
loop
sti
cmp
mov
mov
ljmp
test
cwtl
orl
add
xchg
icebp
push
dec
add
jbe
jb
adc
enter
jl
and
cmp
ficoml
fstps
ret
jne
push
cltd
add
push
pop
jno
xchg
add
cmp
movsl
movsb
lock
je
mov
pusha
dec
fistl
inc
cld
in
aad
jne
aas
xchg
jge
fwait
mov
sbb
stos
icebp
sub
int3
inc
xchg
sub
gs
dec
or
adc
and
cmc
xchg
xor
jae
and
or
pop
int3
xchg
fistpll
mov
fucom
sub
dec
or
daa
mov
imul
sub
pop
fwait
jle
ljmp
sbb
leave
jg
sbb
add
push
sahf
dec
or
push
fsubl
sub
inc
rorl
xchg
mov
adc
xlat
jns
xchg
pop
xchg
fcoms
popf
jno
cwtl
push
pop
xchg
pop
testb
pop
repz
outsb
add
jmp
or
xchg
fld1
icebp
out
cmp
mov
xchg
jp
or
mov
movsl
mov
lds
inc
iret
popl
jb
cmpsl
fidivrs
popl
mov
cmp
adc
push
out
fimuls
ss
fsubrs
mov
mov
add
xchg
mov
aad
xchg
imul
ds
movsb
xchg
imul
js
pushf
xchg
out
or
loop
test
cmp
in
stos
xchg
lock
and
or
and
and
dec
mov
pop
mov
ret
xchg
rorl
pop
adc
in
fimull
outsl
sub
fdivl
pop
inc
das
push
lret
dec
fdivrs
mov
lret
gs
stc
mov
pop
adc
lods
test
es
cmpsl
jmp
mov
jae
push
jle
dec
mov
out
sarl
and
mov
mov
cmp
jmp
imul
pop
lods
daa
mov
sub
fsubs
fcompl
jg
cmp
jmp
in
imul
mov
pop
pop
mov
ljmp
mov
leave
fs
jle
outsl
out
jmp
jl
mov
call
sbb
xlat
xlat
pop
push
mov
add
xchg
imul
xor
mov
push
fdivp
insl
dec
add
jle
xchg
xchg
mov
or
testb
cmp
mov
out
pop
or
mov
mov
jle
xchg
clc
push
int
mov
push
out
std
clc
aas
cltd
jno
sti
jle
into
pushw
sbb
mov
jg
inc
outsl
add
and
mov
cmp
mov
xor
xor
and
mov
orl
sbb
cwtl
cld
js
inc
jnp
imul
test
sbb
insl
ljmp
jae
testb
outsb
mov
and
and
fstpt
jb
rcrl
and
push
dec
cmpb
orl
in
or
dec
rcll
lret
in
or
pop
jecxz
lods
mov
pop
or
pushl
out
inc
stc
loop
lret
sbb
mov
imul
pop
shrl
lahf
js
aam
dec
fidivrl
mov
in
xor
sbb
pop
push
inc
sahf
add
mull
rcrl
cmp
fidivrl
mov
cmp
pop
and
int
out
icebp
cmp
pusha
ret
pushf
ret
cmp
push
stos
mov
cs
test
fxam
push
xchg
cmp
mov
add
push
mov
mov
lds
push
or
pop
jl
and
sbb
mov
mov
enter
cmc
call
cmc
xor
sub
in
out
xorl
rolb
shrb
xor
sbb
mov
sub
repnz
sbb
dec
stos
test
scas
test
sahf
mov
pop
enter
dec
pop
popf
sahf
sub
pop
addl
pusha
xchg
fimull
aaa
jp,pt
sub
inc
insb
lock
sub
frstor
popa
push
inc
enter
ret
jmp
in
addl
push
lea
imul
xor
jo
cmp
popa
loope
push
push
subb
lods
in
fistps
pop
ret
addr16
aad
pop
mov
iret
adc
hlt
test
rclb
mov
int
jmp
lcall
fidivrl
pop
sub
ljmp
mov
adc
lea
and
imul
xchg
std
xchg
ret
mov
ja
fs
and
lahf
mov
data16
mov
out
xchg
push
mov
cmp
xchg
push
mov
jno
jnp
fcmovu
or
pushf
push
into
add
hlt
push
add
add
outsb
adc
push
int3
pop
fisubrs
insb
cltd
ja
shll
push
sbb
lea
jmp
mov
cmp
shlb
sahf
loope
sbb
dec
dec
mov
cmp
sub
xor
dec
popa
add
sub
in
mov
or
pop
inc
int3
aad
adc
test
adc
add
test
aam
lock
repnz
cwtl
icebp
pusha
int3
and
cmp
fmuls
and
pop
and
lods
iret
add
js
fwait
stc
in
ret
andl
push
cmp
pmuludq
mov
dec
xor
pop
and
sahf
fsts
ds
or
lds
and
add
out
mov
sub
inc
add
adc
xor
and
imul
std
outsl
std
jecxz
cmp
out
inc
jecxz
mov
outsb
test
enter
movsl
mov
mov
popf
cmp
test
cld
mov
int3
cmp
cld
jb
and
movsl
push
lret
mov
cwtl
jle
mov
pop
sbb
push
push
xchg
test
jecxz
and
sbb
dec
loopne
scas
and
pusha
xchg
mov
add
sub
shrl
xchg
pop
and
imul
cmp
jle
lret
sub
rcr
mov
cli
icebp
adc
std
pop
clc
data16
jne
in
mov
and
cld
shl
and
fists
das
pusha
shlb
sahf
add
mov
fadd
lods
xor
sbb
aas
es
int3
pop
pop
cli
enter
xchg
push
jp
mov
push
int
int3
push
adc
loopne
jmp
jae
adc
scas
mov
mov
xchg
add
xor
arpl
fcomps
cli
ret
iret
xchg
inc
negl
popf
adc
xor
insb
ljmp
outsl
cmp
dec
mov
push
jns
add
aad
cmp
in
data16
pop
or
xor
stc
out
jle
jecxz,pt
out
rcl
inc
mov
test
cmpsl
push
mov
decl
pop
repnz
fcmovnu
data16
sub
imulb
cmp
into
jl
mov
pop
popf
int3
xor
sbb
mov
add
stc
push
push
push
cs
popf
out
les
pop
aam
ja
test
cs
pop
bound
les
in
loope
out
pop
fiadds
xor
add
rolb
sarl
add
mov
repz
fwait
adc
mov
fimull
sbb
test
mov
cltd
sub
adc
mov
xor
push
ds
jg
mov
xor
dec
cmp
sbb
push
cltd
cld
stos
xor
mov
scas
ja
stc
pop
sbb
outsl
loopne
adc
mov
dec
push
ljmp
push
pop
and
fcoms
scas
add
sbb
cs
adc
dec
xchg
fadds
mov
test
mov
cmp
pop
push
shlb
loop
cld
xor
movsl
adc
call
sarb
rcrl
mov
pop
div
cmp
mov
pop
pop
enter
call
sub
call
lret
nop
leave
xchg
fnstenv
mov
mov
adc
jae
clc
push
and
inc
cmp
dec
jmp
adc
lea
insl
push
inc
pop
adc
mov
orl
int
imul
fmull
arpl
sub
xchg
sub
mov
ret
hlt
dec
pop
leave
call
mov
or
push
flds
mov
push
sahf
test
out
out
mov
adcb
push
and
aam
fsubl
shll
jo
popa
call
and
and
cmpsb
pushf
pop
jne
pop
fwait
push
mov
pop
xor
pop
stc
push
into
mov
repz
pop
ret
or
sub
filds
adc
mov
xchg
movsl
pop
fyl2x
push
sub
or
js
hlt
add
mov
aaa
add
std
push
cli
push
scas
movsl
or
jmp
pop
loope
aam
sbb
les
fistpl
movsb
movsb
in
imull
dec
lea
rol
imul
outsl
flds
sbb
pop
out
adc
fs
mov
movsb
mov
sbb
push
gs
cwtl
pop
jle
push
lret
inc
stc
pop
ret
adc
sarb
dec
popf
int3
lcall
add
loopne
or
or
inc
jge
add
loopew
fwait
push
mov
loope
dec
enter
clc
pop
mov
dec
dec
test
adc
ja
xchg
jnp
xor
shlb
xchg
sarl
fmuls
jne
cmp
mov
mov
aaa
sar
in
push
add
inc
clc
xor
xchg
mov
mov
sti
fwait
adc
std
nop
jp
pop
pop
cmp
xlat
or
xor
xor
mov
jmp
pop
and
jle
jl
das
or
dec
fldcw
icebp
and
sbb
xor
cmp
pop
std
jle
shll
push
xchg
mov
leave
cmpsl
inc
shrb
call
xchg
and
outsb
pop
mov
jg
mov
or
pop
jmp
mov
int
pop
pop
sub
aad
push
cmp
mov
or
add
add
subl
imul
loope
out
add
dec
stos
jl
cmp
ret
jbe
mov
sahf
pusha
mov
add
fdivrs
daa
push
xchg
shll
sahf
adc
and
movsb
test
add
sub
ds
aas
sub
jmp
dec
and
pusha
xor
gs
out
inc
jo
gs
sbb
lds
xchg
jg
or
xor
push
movsl
aad
xor
jp,pt
mov
in
cs
cmp
jo
lods
es
mov
lods
sub
out
jnp
xchg
and
xchg
movsb
jo
xchg
fdivp
mov
les
cmp
push
test
and
or
xchg
xor
popa
lea
icebp
lds
mov
and
inc
movsb
cld
fdivl
lret
xchg
jo
pop
mov
clc
cmp
sbb
mov
mov
sub
out
mov
inc
mov
orb
inc
fisubs
dec
lea
add
adc
andb
mov
mov
or
imull
test
repnz
sbb
adc
cmpsb
hlt
or
data16
stc
add
inc
jb
popf
scas
adc
incb
int
or
mov
repnz
or
fidivs
xchg
imul
sbb
push
adc
push
fstl
xchg
into
pop
mov
out
sub
and
sarb
xchg
bound
rorb
nop
fstps
add
out
jg
les
add
adc
adc
mov
push
mov
es
shlb
popf
test
mov
and
push
push
mov
jecxz
mov
test
jl
adc
je
or
jne
mov
push
sbb
dec
push
mov
lret
dec
push
sbb
movsl
mov
or
mov
jge
mov
mov
xchg
dec
cmp
call
fldl2e
adc
cltd
pop
or
jbe
addb
sbb
cmp
js
fidivs
mov
sbb
jo
pop
fstl
inc
rsm
bound
add
je
movlps
ror
call
sbb
loopne
add
divb
test
je
xlat
mov
mov
subl
rcrb
mov
testl
adc
stc
mov
xchg
scas
cs
push
pop
out
adc
scas
pop
or
xor
or
xor
xchg
stc
cmp
pop
lods
shl
es
and
fnsave
std
mulb
ret
mov
or
lods
std
jbe
jg
cmp
scas
sbb
cltd
ljmp
push
or
outsl
push
pop
loope
out
xchg
adc
sahf
js
mov
mov
lock
cwtl
lds
cmp
sub
or
jns
ljmp
ret
push
pop
fbld
sti
ljmp
mov
cmp
cmp
cmc
popa
cmp
dec
js
dec
jge
mov
aad
jecxz
dec
add
aad
orl
andb
sarb
jg
imul
jbe
loopne
push
mov
jle
mov
imul
push
push
inc
mov
out
dec
or
fsubp
pop
mov
and
push
subb
adc
cmp
push
ja
adc
aam
cld
in
cmp
dec
es
adc
lcall
ds
inc
push
xor
nop
mov
leave
mov
or
cwtl
lods
icebp
popa
add
into
inc
subb
sahf
fiadds
xor
int3
add
xchg
pop
loopne
mov
into
mov
je
movsb
int
cs
mov
sti
out
test
push
jnp
fdivrs
andb
adc
push
sbb
out
lea
test
aaa
inc
mov
cwtl
andl
jmp
call
pushf
pop
xor
dec
icebp
ss
jno
clc
jp
loope
sahf
adc
test
add
fstpt
add
lahf
push
rolb
jns
jecxz
mov
mov
inc
std
pushf
mov
test
mov
mov
pop
out
adc
xchg
es
adc
fiaddl
adc
or
daa
sub
iret
mov
push
mov
lds
icebp
dec
push
add
cmp
add
adc
fucom
fldln2
mov
cmp
je
cmc
push
add
aad
mov
mov
mov
test
out
or
fmuls
pop
push
mov
in
btr
dec
rorb
subl
enter
enter
out
loop
cmpsb
push
rclb
inc
popa
testl
lret
mov
jmp
lods
dec
adc
xchg
or
movsl
push
test
imul
push
and
cwtl
arpl
loope
clc
push
repz
jle
mov
jge
adc
and
mov
mov
mov
adcl
pop
fcmovnu
in
jg
pop
xor
hlt
add
hlt
push
ja
xor
lods
ss
pop
sub
xchg
lods
je
adc
mov
inc
adc
add
mov
lods
lret
push
sub
mov
jg
lret
leave
adc
jne
cmpsb
lret
jg
in
test
stos
rep
mulb
scas
mov
ret
push
pop
stc
fisubl
aam
jg
push
sbb
sti
iret
addr16
shll
repnz
arpl
jmp
rcrb
jp
mov
shrb
mov
pop
idivl
rcr
push
mov
gs
adc
cld
in
outsb
int3
insl
inc
jle
in
stos
mov
mov
dec
jp
fldt
popf
jnp
movb
in
dec
sbb
pop
inc
adc
dec
inc
pusha
jecxz
outsl
je
pop
scas
aad
push
xchg
or
in
out
push
in
cld
mov
adc
add
and
mov
scas
lea
ret
inc
xchg
mov
dec
mov
cmp
sbb
mov
mov
xor
rcrl
and
iret
bnd
dec
gs
dec
dec
fisubrs
adc
or
pop
jns
fxch
mov
loope
popf
adc
and
inc
je
jmp
inc
mov
stos
imul
daa
sbb
out
pop
out
inc
mov
jge
inc
lret
or
les
and
add
mov
gs
and
mov
mov
mov
popa
push
mov
iret
scas
dec
test
push
dec
js
mov
push
jmp
in
adc
shl
mov
testl
loop
mov
int3
rclb
in
enter
out
cs
pop
mov
movsl
addb
inc
xchg
aaa
inc
mov
sbb
aad
mov
sbb
lea
mov
sub
test
mov
add
and
push
lcall
adc
movsb
jp
push
jnp
sbb
mov
and
int3
addr16
stos
pushf
cmp
cmp
popl
xor
mov
sbb
pop
mov
cmp
adc
sub
jp
insl
sub
and
jb
dec
sub
out
pop
jnp
aas
mull
or
pop
adcl
push
push
fsubrl
or
inc
add
pop
inc
jl
fdivrp
ljmp
in
cmp
adc
shll
jge
adc
adc
mov
xor
test
mov
stos
push
fsubrp
lret
add
pop
ret
sub
les
pushf
addr16
inc
mov
mov
sti
xchg
mov
xchg
stc
jbe
clc
out
sub
cmp
cmp
scas
push
imul
lods
cmp
mov
ss
movsl
cmpsb
mov
sti
nop
push
repz
and
aaa
pop
push
ret
mov
popf
sub
cwtl
add
mov
leave
mov
rcrl
mov
pusha
ds
sub
xchg
ss
sub
fs
or
adc
lods
and
sub
stc
pushf
roll
lret
scas
push
mov
jmp
shlb
shlb
inc
gs
and
cli
fmul
cwtl
insl
mov
out
rolb
ud2
xchg
cmp
push
stc
cmc
dec
or
jle
ja
push
sar
inc
frstor
inc
aam
pop
fwait
insb
mov
stos
arpl
addr16
dec
adcl
scas
fdivl
mov
dec
push
inc
xchg
and
mov
sbb
push
cmp
cmc
jbe
fcoms
arpl
into
movsb
adc
into
inc
dec
dec
xor
xor
add
xorl
inc
xchg
xor
xorb
xor
xlat
ret
adc
ret
mov
cmpsb
inc
leave
cmc
sub
cmp
add
xor
jbe
shlb
arpl
fldt
mov
push
ss
sti
lock
adc
sbb
jnp
add
add
or
mov
inc
test
lock
dec
jp
dec
sti
sahf
mov
xor
movl
jb
hlt
dec
rcll
inc
outsl
add
insb
mov
cmc
fistpll
inc
xor
test
jmp
jge
sbb
ret
test
mov
xor
adc
adc
mov
enter
ss
pop
aas
mov
inc
add
cmpsb
lret
mov
mov
int
mov
adc
ret
mov
cmp
and
jae
lock
mov
int
icebp
adc
outsb
mov
outsb
ljmp
loope
pop
stc
push
add
push
fsubl
pop
jp
or
xchg
sbb
sarl
push
leave
adc
popa
pop
nop
adc
rolb
aad
xor
push
pop
xchg
jbe
out
mov
mov
jne
pop
cld
xor
int
fadds
push
push
jns
dec
stos
cmpsl
test
outsb
pushf
cs
mov
add
jmp
dec
add
in
xor
push
and
sub
mov
cmp
pop
mov
repnz
shll
lods
insb
popf
mov
scas
dec
ljmp
mov
out
add
pop
fldenv
dec
jo
lods
xchg
aad
adc
dec
ds
rol
in
insl
jae
in
adc
dec
and
xlat
and
inc
cmpsl
mov
add
xlat
cld
jne
xchg
or
repnz
es
mov
cmc
dec
dec
mov
loopne
ja
outsb
push
jg
mov
push
inc
xor
and
orb
into
movsl
fstl
or
cmp
ljmp
daa
fcmovu
lea
adc
out
jne
pop
dec
and
popa
scas
in
clc
fdivr
jae
xor
add
sub
xor
das
ds
xchg
pusha
cmp
push
lods
inc
push
add
dec
push
mov
movsl
and
pop
mov
xchg
sub
lret
cli
pop
xchg
or
arpl
xchg
mov
ss
icebp
mov
in
movsl
cmp
push
fistpl
dec
loope
in
jge
adc
dec
jbe
mov
pop
inc
or
push
ds
stc
mov
incl
cmpsb
shrb
je
cs
stos
pop
xor
pop
orb
scas
stc
shlb
lret
int
gs
icebp
mov
adc
scas
call
push
cmp
xlat
mov
or
push
das
lds
iret
push
jnp
inc
and
sahf
test
jns
in
jle
xorb
jnp
jns
xor
es
cmc
inc
outsb
scas
cmp
imul
xchg
add
idivb
stc
push
ss
xchg
fcmovnbe
popa
mov
add
push
dec
jbe
int
out
jne
push
cltd
inc
es
mov
sti
pop
and
adc
push
jne
lret
adc
inc
dec
cmp
sbb
jae
cltd
in
jae
or
mov
cmp
jecxz
icebp
push
sti
mov
push
lret
aaa
divl
xchg
sbb
jecxz
dec
mov
push
in
adc
jbe
adc
push
mov
daa
xchg
in
sti
jl
sbbb
inc
stos
xlat
out
int3
fbstp
rorb
loopne
mov
icebp
xor
jmp
sbb
and
cmp
mov
mov
ftst
out
jo
sbb
popf
or
adc
dec
push
out
mov
xor
push
outsl
stc
adc
or
sbb
ja
jmp
sub
add
scas
xchg
ret
or
pusha
jno
push
imul
pop
jle
fdivrl
ss
inc
cmpsb
mov
or
xor
xor
imul
sub
das
jg
cwtl
clc
mov
or
sti
shr
jmp
test
rcrb
pop
into
lds
movsb
icebp
xchg
repnz
lds
imul
lock
scas
mov
lods
mov
scas
test
insb
pushf
fisubl
xor
mov
push
push
enter
push
pop
stos
cmc
xor
pop
movsl
lret
dec
jp
daa
cmp
inc
jns
sbb
adc
out
js
xor
fsubp
stc
xchg
dec
jmp
push
mov
ficoms
cmp
mov
outsl
push
mov
int3
mov
mov
pop
pop
mov
les
xlat
pusha
cs
std
movsb
jns
stos
push
push
pop
or
mov
outsb
cmp
sbb
jno
stos
add
jo
jns
and
and
jnp
shl
add
pop
and
pop
fcompl
mov
xchg
add
mov
scas
aas
sti
or
inc
mov
in
and
mov
and
scas
out
fistpl
xlat
add
jmp
jae
shll
push
jns
rorb
in
dec
jmp
pop
xchg
or
sbb
in
push
add
cmp
pop
sub
popa
xor
dec
nop
ja
or
lret
repnz
dec
pusha
cmp
add
push
push
jecxz
and
jne
mov
test
outsb
out
outsb
scas
sbb
pop
mov
std
xchg
stc
jge
cmpsl
inc
arpl
testl
mov
sub
test
push
add
dec
pop
xchg
sbb
lret
cmp
mov
bound
jnp
mov
dec
mov
xchg
movsb
add
andb
add
loopne
sub
xor
inc
mov
rcl
dec
dec
pop
out
inc
xchg
push
jecxz
push
movb
jmp
incl
mov
repz
jo
insb
add
rorb
mov
nop
out
mov
fldl
scas
jae
and
sbb
pop
in
mulb
fisubs
sub
mov
int3
shl
or
je
inc
in
popf
hlt
sub
or
push
cmp
xchg
addl
xor
dec
aaa
cmc
lods
scas
add
mov
and
pop
clc
imul
dec
xor
sub
shll
mov
ret
fimuls
ja
out
push
test
xchg
andb
xor
mov
data16
ss
mov
shl
aad
pop
mov
add
ds
sbb
scas
fistpl
scas
call
shll
sub
nop
xor
and
xchg
push
xor
out
fsts
sub
cmp
movsl
push
adc
dec
cmp
jmp
or
jnp
pop
add
mov
adc
inc
mov
dec
sub
dec
aad
add
mov
or
jns
push
hlt
out
cmp
cmp
cmp
test
arpl
push
leave
fimull
imul
mov
in
fidivl
mov
add
mov
push
mov
iret
jbe
sbb
in
stos
pop
stos
ja
out
mov
fst
dec
and
xchg
testb
ror
popa
push
in
stc
daa
cld
inc
cmc
mov
xchg
mov
jle
or
test
sbb
sti
adc
jl
sti
mov
pop
dec
test
iret
jmp
dec
and
mov
cld
fcomps
push
test
test
adc
stos
jp
loopne
push
test
fs
sbb
inc
inc
stos
in
pop
movl
mov
les
imul
into
fdivl
addl
and
notl
xchg
jecxz
push
fwait
mov
jge
jbe
outsl
jne
lcall
dec
sub
mov
addr16
es
mov
adc
pop
push
mov
xchg
scas
pop
fnstenv
lret
inc
mov
nop
mov
adc
ror
pop
mov
rcll
int3
test
cmp
mov
icebp
ret
or
movsl
xorb
jle
jno
cmc
jb
fbld
mov
sbb
ret
pop
xlat
lret
jecxz,pn
add
add
jmp
pop
mov
inc
jmp
xchg
movsb
out
jb
enter
sti
lret
testb
imul
or
ror
dec
mov
dec
jge
xchg
es
mov
mov
in
pop
jo
int3
lahf
sbb
cld
inc
pop
sub
inc
arpl
sbb
nop
mov
scas
sbb
inc
cpuid
sti
dec
loop
sbb
lds
push
mov
dec
int3
push
push
jno
test
add
or
xchg
cmp
in
repnz
cld
fs
pop
pop
xchg
cmpb
lret
lret
sub
xchg
mov
mov
mov
mov
rol
or
mov
jge
ja
or
cmp
data16
sub
shll
mull
cwtl
sub
int3
fwait
stos
pop
adc
cmc
dec
mov
and
cli
rclb
pop
mov
push
xor
cmp
int
jns
fisubrl
orb
ficoml
aas
mov
daa
xlat
mov
or
into
adc
pusha
movsb
pop
inc
pop
aas
sub
outsl
and
shrl
sub
dec
imul
push
fldt
dec
pop
xchg
in
mov
sub
cmp
loop
xlat
push
ds
or
or
pop
push
jo
xor
sahf
fnsave
in
test
and
outsl
flds
pop
sbb
or
add
lock
ja
mov
mov
push
insb
jg
jecxz
xor
ds
addps
jns
fisttps
das
cmp
fwait
xor
ficomps
aam
cmp
push
xchg
xor
lods
mov
dec
push
mov
or
jge
xor
ds
mov
pop
jg
mov
stos
sub
test
add
mov
inc
push
pushf
decb
sub
mov
cs
ljmp
fistpl
cmp
cmp
aas
mov
out
lods
subl
repnz
ficomps
cld
dec
or
in
fwait
das
insb
stos
popa
mov
cmp
mov
fdivp
cmpsb
inc
sub
inc
sub
repz
sub
add
jg
jno
bnd
call
into
hlt
lcall
jecxz
xor
clc
fisttpl
mov
ret
push
in
mov
popf
pop
repz
dec
dec
add
notl
lret
xlat
lret
lcall
push
mov
cmp
push
pop
out
or
inc
pusha
cmp
cmp
inc
jbe
dec
sbb
cmpsl
adc
pop
mov
fwait
mov
hlt
push
in
inc
cmp
lret
mov
lret
xchg
rol
pop
cltd
push
cmp
aam
push
pop
dec
mov
sub
shlb
lret
fmuls
xor
js
cmp
scas
test
fistpl
add
sbb
adc
cwtl
icebp
jnp
pop
xor
cld
icebp
jp
icebp
aam
mov
sub
add
xchg
pop
jno
sub
fadd
notl
push
insb
icebp
adc
test
mov
lret
push
cmp
das
mov
sub
jb
mov
lea
add
mov
push
in
and
push
aad
dec
mov
push
sub
and
pop
pop
jns
hlt
fadds
ror
add
adc
or
mov
adc
mov
pop
add
inc
loope
cld
and
fidivl
sar
add
xchg
lock
jnp
enter
or
sarl
mov
fdivl
xchg
popa
sbb
cwtl
pop
popf
cmp
sub
add
out
jns
das
cld
mov
mov
data16
icebp
mov
push
sahf
mov
ret
inc
fmul
dec
fs
clc
lcall
out
cmpsb
mov
aad
fs
push
xor
std
xor
xchg
jbe
sub
xchg
mov
inc
push
je
fstps
and
add
sub
es
scas
jb
jbe
mov
sbb
push
and
dec
ljmp
shlb
js
dec
xchg
push
addr16
int3
xchg
mov
fdivp
sub
and
bound
mov
lea
mov
in
inc
cmp
jnp
imul
jae
adc
andl
xor
mov
pop
mov
add
or
mov
cwtl
adc
jle
fs
xchg
xor
out
fwait
gs
loop
and
es
aaa
mov
xor
fwait
aam
ror
lcall
divl
popf
sbb
pop
sub
nopl
in
fld
and
sbb
icebp
mov
pop
loopne
das
xor
adc
mov
scas
loopne
sbb
test
mov
repnz
sbbl
repz
js
mov
xchg
enter
in
aad
addr16
hlt
shrl
ljmp
es
outsb
xor
test
mov
jmp
sbbl
xor
mov
adc
sbb
pop
arpl
mov
pop
rol
xor
jmp
inc
lods
cmp
mov
push
and
jmp
sub
and
fbstp
jge
pop
data16
xchg
xchg
out
loop
bound
in
pop
and
pop
divl
fs
push
dec
clc
dec
enter
add
pop
scas
test
repnz
lret
pop
clc
push
cli
mov
pcmpeqb
das
jg
inc
insl
inc
fndisi(8087
sub
repnz
in
jl
mov
adc
inc
or
and
xchg
pop
gs
pusha
rcll
aaa
xor
lcall
xor
cs
decb
inc
dec
pop
adc
sbb
rcll
dec
aaa
test
jno
insl
call
push
cltd
ja
inc
and
push
lods
pop
add
dec
mov
adc
sbb
fisttpll
fadds
imul
test
std
inc
test
mov
hlt
push
mov
dec
daa
aaa
xor
pop
out
mov
push
jmp
adc
adc
pop
mov
in
mov
push
push
out
pop
jno
scas
mov
aam
cmp
nop
jmp
mov
pop
lock
mov
je
orl
and
cwtl
jge
mov
pop
out
pushf
mov
sub
ret
inc
cwtl
or
jno,pt
les
mov
xor
aam
adc
add
in
xchg
cmp
mov
mov
rolb
lds
mov
repnz
loopne
pushf
push
inc
out
in
rcrb
in
dec
stos
mov
imul
add
cmp
cltd
mov
test
mov
andb
ljmp
sbb
add
rcrl
outsb
add
or
popa
fwait
adc
jo
int
push
negb
xor
shrb
sbb
pop
xchg
mull
pop
fcoms
outsl
push
hlt
or
xor
rorl
lret
jmp
mov
jmp
stos
and
out
sbb
inc
bound
jl
xor
and
mov
out
add
mov
sub
aad
jae
out
popa
mov
mov
leave
or
jge
pop
add
xchg
popa
fmull
or
pop
jae
inc
pop
cmp
mov
icebp
xor
jle
lds
jbe
scas
pop
jno
mov
pop
xchg
aas
jnp
or
jge
mov
sbb
mov
test
sub
fcomip
push
cmp
adc
sub
mov
lea
test
repz
cmpsl
push
pop
lea
xor
imul
mov
adc
and
faddl
xor
int
push
cs
mov
cmp
stos
fldenv
inc
sahf
pop
mov
cmp
push
fsubrs
aas
ja
adc
insl
stc
jb
and
cltd
xlat
cltd
dec
mov
in
aam
jl
outsb
lret
push
aam
stos
outsl
insb
mov
out
mov
ds
in
cmp
xor
add
pop
xor
aad
repz
outsb
ret
iret
imul
push
int
jl
cmp
jg
or
adc
pop
nop
rorb
pop
popf
mov
stos
dec
push
xor
adc
or
push
mov
bound
dec
or
daa
mov
stc
and
pinsrw
pushf
xchg
imul
cs
ja
je
mov
ret
scas
notb
mov
sahf
fistpl
hlt
repnz
pop
stos
add
cs
dec
ret
sbb
cmp
scas
sub
test
pop
imul
mov
dec
mov
jmp
mov
ja
jge
or
add
outsb
cmp
lea
outsb
popa
mov
mov
jae
andb
test
imul
shlb
into
pop
stos
pop
int
cmp
call
ret
rorb
xchg
out
jg
jecxz
push
mov
and
xchg
ret
lret
out
in
std
pop
push
leave
outsl
or
filds
lods
inc
mov
jge
hlt
and
repnz
shl
cmc
mov
and
insl
repnz
cmc
lahf
jns
fistpll
call
arpl
or
in
push
mov
adcl
xchg
sbb
int
rclb
cli
jnp
add
xchg
imul
cld
jle
and
xor
pop
xchg
aas
ja
pop
or
add
hlt
int3
inc
jo
or
aaa
xor
ljmp
xchg
sbb
test
repz
test
cmp
lods
in
mov
jns
sub
nop
outsl
push
dec
xchg
dec
cwtl
aad
or
xor
sub
cwtl
mov
or
adc
ljmp
mov
test
lret
and
movsl
push
mov
jbe
in
or
cmpsl
xchg
and
das
mov
push
sbb
xor
pusha
mov
push
sbb
mov
mov
pushl
cmpsb
xor
addr16
xchg
js
and
adcl
nop
sti
scas
cltd
add
sbb
lds
push
adc
aaa
pop
xor
mov
jge
in
jae
sbb
xchg
lahf
mov
sbb
mov
clc
out
fidivl
ss
out
pop
push
cli
jne
aaa
mov
lret
sub
scas
pop
add
ds
pop
jne
cwtl
inc
je
scas
ja
addr16
cmpsb
mov
or
mov
sub
mov
out
mov
sub
sub
ret
jnp
stos
inc
mov
cwtl
mov
dec
lds
sti
mov
mov
pusha
fs
xchg
cmc
leave
add
jle
mov
loop
sti
js
dec
stos
scas
inc
ja
bound
leave
sub
mov
das
push
xlat
mov
add
in
dec
shl
outsl
push
cmp
or
sbb
push
jnp
or
bound
mov
mov
arpl
out
sarb
xchg
out
add
cmp
mov
aad
je
xor
mov
in
addr16
or
mov
sub
jb
jne
push
sbb
lds
xchg
out
sub
in
and
mov
fistpll
push
inc
aam
adc
leave
xchg
adc
cmp
aaa
nop
test
adc
dec
sub
dec
das
jl
add
xor
imul
pushf
fildl
and
or
shlb
cmpsb
pslld
mov
xchg
xchg
mov
insb
in
ljmp
imull
orl
filds
lods
cmp
ret
fld
shr
addl
ss
jl
insl
adc
jg
cmpsl
mov
inc
out
cmc
inc
dec
mov
cmp
adc
in
adc
jge
jbe
in
aad
movb
lret
sub
pop
push
inc
out
arpl
cmp
pop
enter
mov
call
cmp
mov
repnz
outsl
add
lock
xchg
and
sbb
fcomps
enter
dec
aaa
inc
pushf
add
jecxz
das
rorb
ret
fcoml
mov
xchg
aam
rclb
repnz
enter
popf
arpl
rolb
dec
jp
sbb
sti
shrb
dec
fisttps
mov
and
mov
dec
xor
pop
incb
in
inc
out
gs
sub
sub
xlat
in
mov
imul
xchg
rcr
sbb
xor
scas
aaa
lcall
cmp
xchg
add
or
std
loop
int3
ja
and
stc
fmull
data16
shlb
inc
imul
and
or
jns
sub
sbb
mov
leave
mov
insb
adc
xchg
adc
loop
movsl
aam
jb
das
aaa
push
jns
faddl
js
cmp
and
mov
dec
lret
ja
adc
or
mov
cmp
lock
imul
repnz
mov
imul
push
adc
jne
dec
outsb
push
shl
mov
cmp
rclb
pop
mov
icebp
cmp
jle
mov
add
data16
jl
mov
nop
mov
dec
mov
lods
jne
leave
or
loop
mov
inc
or
lock
stc
ljmp
stos
inc
pop
popf
hlt
mov
clc
js
jg
test
imul
mov
fistpll
pop
xor
adc
call
mov
ljmp
popf
lret
sub
iret
cmp
or
fwait
int
aam
inc
hlt
jle
aaa
pop
cs
mov
aam
in
dec
push
aas
ret
in
repz
bound
cltd
imul
adc
fucom
fcompp
pop
js
mov
pop
push
xor
inc
adc
inc
inc
xor
bound
shr
mov
dec
cmp
call
mov
in
cmc
mov
xchg
adcb
mov
cmpsb
test
rep
rcrl
xlat
nop
arpl
and
or
add
rolb
jecxz
outsl
pop
test
dec
test
andl
mov
insl
js
add
sets
repnz
in
or
cltd
testb
in
js
cmc
sub
pop
and
or
jg
xor
outsl
and
lods
xor
push
inc
ljmp
popa
imul
es
mov
out
cmp
pop
sbb
imul
rclb
pop
mov
jle
jnp
add
adc
mov
push
push
mov
pop
ret
and
add
insl
inc
mov
mov
and
cmp
rcrl
lcall
jno
clc
push
sbb
outsl
imul
clc
and
ss
jbe
jns
fcoml
enter
das
xchg
and
sti
movb
xlat
les
xchg
es
cwtl
jnp
jb
mov
clc
aaa
clc
sbbl
das
pop
xchg
cs
call
xchg
xor
hlt
out
cltd
pop
ret
and
je
bound
lret
and
and
push
mov
mov
aad
js
mov
push
testl
dec
dec
push
cs
notl
push
cwtl
fnsave
ss
int3
sub
sbb
imul
jmp
push
hlt
xchg
inc
sub
sti
stos
int3
insb
lret
cmp
inc
ret
sbb
filds
stc
pop
test
jg
mov
adc
sbb
fs
or
push
pop
movsl
cltd
sub
push
je
inc
inc
clc
outsl
out
fsubrl
call
lods
fs
push
jg
mov
add
jbe
shrl
mov
das
in
xchg
push
xlat
inc
jne
jp
push
push
int3
pusha
lods
mov
pop
mov
sub
sbb
fisubrl
mov
adc
adc
movsl
mov
loope
xchg
xor
adcb
loopne
scas
push
pusha
push
aad
cmp
xor
xchg
dec
sbb
xchg
aaa
jno
out
sti
jmp
hlt
xchg
cs
scas
hlt
movsb
xor
loopne
test
pop
mov
sti
jmp
push
ljmp
fiadds
xor
lret
jl
and
sbb
lods
pop
sbb
shll
mov
movsl
fnsave
mov
jbe
mov
or
jg
incb
adc
fistps
pop
lds
and
mov
lahf
mov
sbb
dec
cmc
cmpsb
ret
lahf
sbb
mov
sahf
imul
mov
sbb
test
fisubs
insb
push
push
sub
xchg
cwtl
jns
push
pop
pop
dec
add
enter
sub
jge
lea
xchg
leave
jne
je
je
ds
lret
xchg
stos
addr16
pushf
lret
adc
rcl
and
int3
fsubr
mov
sub
insl
test
scas
jecxz
sahf
pop
mov
jmp
cmp
out
jle
pop
lahf
push
fwait
dec
cld
negb
xchg
push
or
and
jmp
or
int3
les
or
loop
stos
int3
inc
fiaddl
aad
out
pop
addl
push
xor
test
out
shlb
rolb
cmp
imul
adc
xchg
lahf
enter
lds
insb
iret
push
es
fiaddl
pop
cltd
movsb
xchg
test
and
das
mov
sbb
jns
sub
cmp
mov
out
das
and
sub
loopne
mov
push
dec
fidivl
adc
jns
push
pop
negl
out
rcr
mov
cwtl
pop
jg
jnp
xlat
repz
cmp
inc
mov
or
or
mov
mov
cwtl
mov
or
sbb
mov
dec
xchg
mov
mov
sbbb
or
imul
imul
aas
shl
push
fucomp
imul
fwait
adc
orl
sub
rorl
sub
inc
ret
clc
add
dec
lret
mov
add
adc
inc
xor
mov
ret
clc
cmp
push
fiaddl
lds
and
movsl
frstor
scas
and
fimuls
xchg
sub
push
pushf
mov
iret
orb
jns
aad
out
mov
lahf
sub
fisttps
and
xchg
arpl
icebp
ds
cmp
push
push
cmp
lret
outsl
sub
imul
stos
mov
sahf
add
xchg
outsl
push
mov
mov
jmp
dec
mov
lea
dec
in
mov
mov
fistpll
cmp
mov
pushf
fistps
lret
adc
sbb
dec
lods
fisttpl
inc
cld
popa
add
inc
inc
popf
test
and
push
mov
lret
shl
pop
push
inc
insb
push
inc
ss
pop
rorl
les
dec
and
pop
jb
push
icebp
mov
stc
xchg
push
sbb
movsb
test
push
lcall
mov
mov
cmpsl
aas
mov
ret
mov
mov
jne
sbb
xor
fs
pop
push
in
adc
lret
daa
mov
pusha
mov
nop
and
push
movl
mov
adc
test
and
into
sbb
or
inc
jb
repnz
add
jecxz
jno
fnsave
and
rorb
stos
call
cld
dec
sbbl
mov
and
xor
add
add
imul
push
test
sbb
pop
mov
stos
add
sub
pop
ret
push
addr16
js
clc
push
mov
das
int3
xchg
mov
push
xchg
popa
scas
pop
negl
popf
imul
clc
gs
xchg
repz
lods
inc
pop
pop
int
lods
sbb
mov
sbb
add
dec
add
xor
cmp
insb
dec
mov
mov
jmp
and
adc
mov
std
ljmp
lock
daa
push
sub
les
add
loopne
stos
rcrl
inc
test
pusha
sub
or
pop
pop
sub
pop
mov
push
cmp
lods
mov
sti
jns
lods
icebp
aam
ficomps
ds
xchg
outsl
xchg
and
jecxz
fidivl
mov
or
pop
in
fbld
gs
or
imul
mov
add
mov
inc
filds
sbb
pop
push
inc
add
fbld
test
adc
mov
pop
inc
jne
lea
jl
std
jp
xor
test
stos
pop
mov
mov
leave
push
inc
add
add
aaa
jmp
push
xor
addr16
jmp
jecxz
xor
outsb
push
sbb
inc
cmp
shr
and
rcrl
cmp
xchg
popa
ljmp
mov
pop
mov
or
cmp
iret
lods
mov
sub
outsb
jo
in
in
lods
dec
js
je
push
pop
insb
lahf
push
jns
add
ljmp
stos
or
push
ljmp
sub
lahf
rcll
adc
dec
ja
rcll
lock
or
fwait
xor
sub
aas
xchg
jg
push
sbb
call
mov
cmc
mov
scas
ret
mov
jno
jo
xor
loope
cli
sahf
inc
add
pop
jbe
pushf
lds
pusha
cmp
inc
adc
mov
pop
pop
mov
dec
jno
not
dec
xchg
notb
lods
js
rep
cli
lahf
xchg
add
lahf
add
test
xor
data16
jnp
add
out
fs
or
xchg
sub
push
mov
jmp
js
das
fstpt
pop
push
mov
sbb
dec
pop
pop
cmp
sti
pushf
std
in
test
cld
sbb
mov
scas
dec
mov
push
rcrl
lret
mov
fs
add
push
pop
fs
inc
sub
leave
nop
xchg
and
inc
push
sbb
lds
jmp
leave
shr
adc
data16
jle
mov
xchg
or
rcll
mov
notb
shll
jae
loop
jmp
inc
lcall
fmulp
les
inc
add
pushf
repz
inc
vorpd
ss
cmp
fsubs
pusha
add
cltd
xchg
inc
in
scas
jp
jecxz
insb
inc
adc
stos
call
cmp
or
pop
fs
test
mov
push
dec
xchg
xchg
xchg
nop
fsubs
xor
jle
call
fsts
or
sub
dec
popa
in
sub
push
xor
pop
das
fistpll
dec
notl
leave
mov
test
lea
or
movsb
arpl
pop
adc
jbe
movsl
dec
and
push
mov
pop
xchg
clc
add
push
mov
adc
xchg
xor
fadd
inc
jb
hlt
push
adc
jbe
mov
aam
in
out
jmp
cmp
fmull
add
ja
push
call
sbb
call
cmp
xchg
jl
fnstenv
jp
mov
sarl
out
sar
lret
gs
lret
pop
stos
outsl
test
add
pop
js
scas
repnz
jmp
loop
adc
loopne
idivl
scas
add
test
insb
out
sti
das
out
dec
test
iret
ret
imulb
out
sarl
mov
dec
jle
cld
popa
int
iret
jo
add
push
out
shrb
cwtl
adc
stos
mov
movsl
lret
push
popa
pop
lahf
shrl
int3
ja
adc
mov
mov
dec
cmp
or
icebp
push
cmp
pop
cltd
add
pop
loopne
mov
push
inc
sbb
or
xchg
xchg
inc
andl
add
cmp
lods
scas
xchg
mov
loope
mov
mov
enter
shll
xlat
aam
sbb
aam
xchg
pop
in
int
je
cmc
xor
push
imul
stos
fcomps
or
mov
test
pop
mov
xor
push
sub
or
push
mov
pop
adc
or
lds
inc
in
ljmp
jmp
mov
in
loope
arpl
inc
mov
imul
dec
mov
sbb
mov
sbb
cs
mov
jbe
dec
js
cmpsl
xchg
xor
daa
rep
cmpsb
mov
arpl
jg
mov
mov
fwait
and
xor
xchg
add
pop
call
call
push
sti
fldenv
push
lock
sbb
loope
sti
inc
pop
imulb
adc
push
bnd
popf
fstpl
mov
loopne
mov
sub
and
fs
lahf
mov
cmp
mov
pop
cli
shrb
cmp
pop
xor
scas
rclb
pop
loope
in
and
test
xchg
dec
push
fdivrl
aam
mov
ss
dec
jnp
cmp
pop
out
push
jo
test
ret
jnp
xchg
stos
in
mov
or
loopne
sbb
pop
movsl
scas
pop
popa
aad
push
mov
xor
sbb
and
insl
pop
pop
jg
rorl
shrl
ljmp
pop
es
aad
stos
repz
and
pop
sti
int
mov
adc
notb
sbb
sub
lret
rcll
sahf
fs
lcall
andb
xchg
addr16
outsb
repnz
aad
dec
fscale
sbb
arpl
mov
or
mov
xor
push
daa
mov
push
repz
inc
push
fmuls
mov
push
xorl
adc
jb
mov
pop
sbb
xchg
or
clc
sbb
xchg
mov
xlat
lahf
dec
lods
cmpsl
mov
push
inc
or
movsl
idivb
cmpsl
mov
mov
loopne
jo
add
test
jae
sar
cmp
jb
in
xor
repz
lds
push
jnp
xchg
xor
adcb
aaa
pop
lret
gs
mov
enter
push
push
ret
jbe
push
in
mov
sub
jle
mov
cmc
test
sub
sbb
mov
pop
scas
ss
and
jl
mov
subb
mov
jecxz
imul
and
xchg
push
xor
rorb
or
xchg
xor
rolb
xchg
mov
aad
fcomps
test
mov
mov
adcb
pop
xchg
jo
and
mov
add
scas
mov
iret
imul
dec
in
out
jnp
dec
pop
gs
icebp
pop
insb
sub
std
push
mov
out
jne
dec
inc
sbb
xchg
popl
out
das
fdivs
dec
inc
aaa
xor
push
insl
subb
mov
out
leave
sahf
iret
push
and
push
jmp
ss
shlb
push
mov
and
jecxz
sub
sbbl
inc
cli
or
adc
push
sub
jbe
or
xor
inc
rcr
sub
cmp
outsl
icebp
mov
dec
into
sub
and
jae
xchg
cmp
idivl
test
scas
inc
pushf
decl
les
xor
arpl
add
shll
in
jbe
jnp
or
lods
pop
movsl
pop
inc
adcl
mov
push
fistps
sbb
stos
stos
sub
cmp
mov
xchg
lock
rcrb
xorl
jb
arpl
iret
jbe
mov
mov
aad
outsb
stos
push
enter
push
xor
mov
mov
das
scas
push
xlat
pop
enter
jp
test
xor
mov
lock
xor
push
adc
icebp
mov
or
cltd
adc
rcrb
loop
pop
push
push
add
movsb
mov
push
into
cmp
nop
loopne,pt
dec
jo
xor
push
add
xor
test
mov
dec
aad
rclb
inc
pop
insb
mov
lods
stc
cld
loopne
add
clc
jno
jge
jecxz
int
cmp
xchg
sub
scas
loopne
imul
mov
bound
aaa
rclb
mov
dec
fs
add
leave
add
cmp
mov
mov
mov
push
mov
jo
push
mov
js
pop
adc
sub
xlat
lret
mov
movsl
clc
pop
jl
jge
mov
adc
push
sbb
in
jb
mov
lods
pop
push
das
lea
and
ljmp
mov
loopne
push
jmp
sbb
jne
sahf
call
jb
mov
les
push
imul
mov
gs
icebp
push
lods
dec
ja
sub
adcl
dec
popa
cli
dec
sbb
insl
sub
inc
hlt
add
gs
jle
or
jbe
enter
pop
jb
xchg
cmp
push
inc
inc
ljmp
lea
mov
push
outsb
jmp
loop
loopne
mull
xchg
mov
lcall
cmp
in
scas
into
inc
pop
add
imul
jp
sub
insl
add
add
dec
sti
inc
sub
es
into
xchg
mov
adc
imul
sub
mov
jae
dec
dec
jg
xor
orb
push
cwtl
ficoml
ds
lea
cmpsb
cmp
cmp
bswap
xlat
mov
jl
sbb
int3
aad
popf
mov
mov
and
or
pushf
adc
pop
push
pop
or
daa
mov
jmp
xchg
outsl
push
inc
jb
les
dec
dec
js
fdiv
mov
std
jnp
mov
fdivrl
repz
cmp
leave
jecxz
test
test
sub
shlb
inc
arpl
out
dec
dec
dec
pop
pop
imul
jmp
pop
sub
jns
xor
and
mov
loope
xchg
das
andl
fstpt
xchg
addr16
fstps
adc
cmp
ja
scas
ror
push
fisubl
in
es
shrb
jo
rorl
xchg
fcmove
in
popa
xchg
push
mov
cmp
push
aam
or
pop
xor
cmp
negw
arpl
cmp
xor
or
mov
and
out
fs
mov
or
mov
jmp
or
adc
fisubrl
arpl
mov
inc
ret
xchg
or
ret
adc
je
xor
and
mov
jb
mov
sub
sbb
dec
pusha
das
lock
rorb
and
pop
je
xchg
or
pop
ret
pop
loope
or
add
call
pop
inc
sub
inc
pop
ret
push
mov
rcrb
mov
repnz
sar
pop
mov
and
push
call
daa
pop
ljmp
add
ffreep
add
add
dec
sbb
mov
xchg
rorb
jl
shr
addr16
sbbl
cmp
or
outsl
sbb
iret
xchg
outsl
dec
push
fistps
push
popa
in
pusha
rclb
fidivl
fst
and
jns
ret
data16
and
cmp
jb
mov
inc
lahf
xchg
adc
adc
pop
inc
inc
sub
mov
imul
outsb
sub
leave
lcall
sbb
imul
add
cmp
jo
and
pop
ret
minps
mov
pop
in
scas
stc
mov
aas
mov
mov
in
inc
fcoms
pop
call
ljmp
mov
ret
push
inc
pushl
hlt
ret
or
outsl
movsb
dec
sti
mov
push
push
out
mov
push
ljmp
cmc
mov
mov
repz
push
jmp
gs
mov
fildll
outsb
mov
cmpsl
ja
xor
loop
icebp
movsl
jns
imul
popf
push
sbb
cld
leave
or
sbb
xchg
in
mov
dec
xchg
aam
std
je
pop
faddp
push
xchg
addb
mov
cli
sarb
or
push
jo
in
inc
shrl
data16
lods
popf
jo
mov
xlat
int3
pop
add
popa
xor
stc
add
mov
jp
sbb
inc
lds
sub
add
xor
xlat
pop
push
pop
out
mov
inc
in
mov
test
sub
pop
addr16
stc
mov
cmpsb
das
mov
xor
add
fbld
in
sbb
and
pop
cmp
inc
imul
outsl
push
hlt
cmp
dec
mov
cli
sub
dec
cli
push
jno
or
push
std
dec
jmp
into
sub
pop
fimuls
push
std
mov
mov
sarb
mov
dec
or
push
jmp
sub
mov
ret
pop
mov
xchg
lret
in
pushf
or
popa
faddl
imul
into
cltd
imul
ficomps
cwtl
adc
loopne
mov
rcl
cld
mov
xchg
divb
addb
or
sub
mov
hlt
mov
stc
mov
cvtdq2ps
repnz
xchg
dec
loope
inc
xchg
ret
out
adc
pop
pop
jae
aas
mov
jb
sbb
xchg
inc
xor
ret
in
dec
fdivs
mov
xor
xchg
push
jne
jge
mov
fldenv
ret
sub
leave
or
lcall
sub
mov
lret
adc
scas
mov
in
shlb
dec
or
and
punpckhwd
ds
enter
insb
xor
ds
out
mov
dec
push
cmpsl
pop
adc
push
jg
jne
inc
lcall
sub
cmpl
push
ljmp
repnz
pushf
adc
outsb
popf
cmp
push
out
gs
shlb
jns
push
push
in
test
mov
mov
push
movsl
push
push
in
push
mov
jle
xlat
movsl
pop
out
lods
out
out
and
xchg
addl
das
aad
xchg
jge
mov
mov
inc
sub
and
and
scas
pop
mov
fbstp
inc
push
and
ret
sub
mov
sub
cld
das
push
or
bound
pop
jbe
out
push
dec
dec
enter
imul
and
int3
mov
in
cmp
mov
jp
dec
leave
jne
jl
xchg
aam
mov
int3
sub
outsb
stc
mov
call
xchg
push
xor
mov
clc
dec
inc
sbb
cmp
or
test
dec
pushf
in
cmpsl
std
pop
rol
xor
divb
sbb
outsb
or
rcrb
adc
scas
ljmp
data16
adc
pop
adc
mov
adc
adc
divl
mov
repnz
mov
subb
lret
bound
mov
in
stc
push
add
out
arpl
cmpsl
cwtl
jle
addr16
addr16
and
mov
push
orl
aas
fimull
in
in
pop
cmpl
cmpb
lcall
dec
mov
hlt
xlat
adcb
pop
mov
dec
js
addl
mov
push
popa
loop
stos
call
sbb
jg
adc
mov
clc
sar
dec
push
fisubs
aad
xor
clc
sub
std
xchg
inc
mov
xor
sub
or
fisubrl
lcall
sbb
mov
scas
mov
cmpsl
mov
cmpsl
inc
mov
cli
addl
loopne
xchg
pop
inc
loope,pn
mov
pop
inc
dec
xor
and
cltd
xor
mov
inc
lret
sub
outsb
fsubrl
aas
xchg
push
popa
aam
jae
sub
adc
cmc
cmp
xor
jno
cmc
jp
gs
leave
dec
dec
jl
push
mov
shlb
jle
push
lock
adc
fnstcw
std
and
cld
inc
add
xchg
subb
lds
fs
pop
movsb
adc
scas
int3
adc
arpl
jmp
sbb
shrb
pop
fistpl
fimull
in
cmp
mov
aad
push
or
sarl
sahf
fsubrs
add
cmp
adc
into
std
xchg
push
mov
mov
inc
add
mov
es
xor
jge
andb
jo
and
xor
orb
pop
jp
addr16
sub
cltd
cmp
jne
push
or
jg
lret
sbb
int
fbstp
data16
sbb
push
mov
push
andb
add
std
sbb
cld
imul
or
in
in
jns
test
imul
lea
xchg
test
leave
or
adcl
dec
pop
cmpsl
inc
aas
xchg
sarl
cld
cmp
out
push
push
add
stc
jmp
fbstp
sti
mov
push
xorl
std
add
sbb
dec
in
jl
dec
bound
jmp
push
fsts
adc
test
mov
sub
ja
notb
pop
out
daa
adc
cmp
sbb
mov
jo
les
aaa
push
cmp
cmpsb
sub
adc
mov
loop
clc
and
call
call
enter
push
xchg
stc
int3
mov
pop
clc
lcall
sbb
int3
adc
mov
cmp
pop
mov
xchg
pop
and
xchg
fiaddl
adc
xor
subl
mov
jmp
mov
jns
xchg
ja
jp
daa
pop
ja
add
jnp
dec
sbb
jae
sahf
push
ret
mov
or
movsl
imul
test
pusha
loopne
bound
pop
aam
jmp
mov
pop
xor
dec
pop
jns
dec
cmp
lods
imul
or
clc
jmp
sub
push
mov
sarb
lea
cmpsl
push
out
jl
in
lcall
mov
sbb
aaa
pop
out
mov
bound
jb
xor
mov
pop
arpl
mov
and
sub
or
aam
mov
mov
push
data16
iret
mov
cmp
js
adc
std
dec
xor
ret
and
xor
fisubl
repnz
or
sbb
xchg
jg
fucom
and
mov
pop
mov
jns
push
int
int
push
mov
mov
jl
sbb
or
mov
mov
ljmp
sbb
mov
nop
sbb
mov
sbb
pop
out
pop
sbb
leave
in
push
arpl
out
pop
jl
mov
mov
les
pop
popa
mov
or
pop
pushl
hlt
jo
outsl
xchg
mov
jg
pop
or
jle
fstpl
mov
pop
sub
fistl
add
pusha
shll
dec
imull
fldl
cmc
int
in
mov
repz
test
push
push
inc
mov
push
insl
or
mov
nop
test
xlat
xor
jmp
clc
xor
and
cmc
jne
pop
xchg
mov
push
pop
ret
cmp
sbb
inc
out
jns
ret
dec
sub
icebp
dec
push
rcll
scas
ficompl
xchg
mov
jge
or
daa
std
push
fmul
outsl
push
xlat
mov
inc
lock
or
ljmp
hlt
sti
pop
fucom
sbb
mov
sbbb
insl
sahf
stos
push
ret
shrl
imul
cmp
mov
inc
pop
mov
or
xor
xchg
popa
rolb
stos
clc
xchg
outsb
jge
adc
inc
or
test
push
ds
sbb
mov
lods
popa
mov
mov
mov
add
sub
cmp
aaa
or
sub
mov
scas
enter
into
push
mov
les
pusha
enter
daa
inc
mov
jle
outsb
test
in
test
mov
andb
push
pop
addr16
mov
nop
sbb
jmp
add
test
out
sub
imul
mov
jne
imul
mov
sub
jl
es
jmp
loope
jmp
add
loope
mov
in
roll
pushl
lock
sbb
sahf
ss
jne
mov
xchg
cmp
mov
cltd
cmp
and
shrl
xor
in
xlat
dec
shrb
lds
jmp
or
cmc
arpl
popf
push
add
lret
scas
xor
movsl
inc
xor
xchg
ficoms
incl
dec
jp
inc
in
xchg
push
call
popa
shll
call
dec
and
mov
pop
cmpl
xlat
inc
xor
mov
or
adc
test
sbb
rcrl
fs
mov
lahf
ss
enter
cmp
cmc
cmp
scas
inc
add
xchg
jnp
mov
inc
shlb
mov
insl
inc
popf
xchg
jmp
sti
or
cld
jg
add
or
adc
push
pop
xchg
mov
nop
out
imul
xlat
xlat
decb
inc
jb
xchg
pusha
jge
mov
jge
pushf
in
out
stos
movsb
jb
fs
lret
pop
push
enter
jg
fsubr
inc
push
xor
lods
fs
push
rol
push
mov
fisubrs
mov
xor
or
and
cmp
pop
dec
fisubrs
imul
subb
ja
out
push
dec
cmp
repnz
sbb
and
push
pop
es
inc
lret
add
sbb
lret
fcoml
xchg
pop
mov
adc
shlb
mov
jmp
push
xchg
mov
cwtl
jb
leavew
push
xorl
cmp
fdivl
jmp
xchg
jno
adc
sti
mov
das
daa
add
mov
aas
sub
out
and
dec
and
mov
mov
out
lds
adc
mov
dec
lods
jb
pushf
mov
jp
mov
dec
cmc
lahf
sbb
add
inc
jae
push
rcll
mov
shlb
enter
cs
aas
xchg
dec
out
mov
stos
fadds
dec
dec
inc
cld
sub
enter
dec
aam
out
popa
in
xchg
mov
lret
mov
rcrl
adc
and
ja
pop
mov
jecxz
inc
popa
inc
pushf
jecxz
mov
mov
jle
mov
or
add
inc
sbb
loop
lahf
or
fcom
mov
lods
cmp
test
mov
mov
mov
xchg
pop
es
mov
add
aad
add
mov
jae
aam
inc
push
mov
push
enter
and
insl
sub
or
out
xor
sbb
push
ret
adc
jmp
sub
xor
iret
inc
inc
aam
loopne
mov
jle
mov
jne
data16
add
in
aaa
stos
pop
addr16
mov
jp
adc
mov
outsb
fcomip
lcall
ret
add
jae
jno
add
dec
outsb
and
sbb
ss
sahf
hlt
sbb
dec
rorb
xchg
cmp
jmp
fdivrs
das
std
adc
jo
cmpsb
test
loope
out
pop
icebp
jno
sbb
mov
data16
in
push
insb
jp
mov
jg
inc
push
xchg
add
idivb
roll
je
clc
rcrl
jmp
inc
pop
repnz
adc
pop
sti
jno
or
and
testl
and
pop
mov
or
test
adc
xor
in
iret
add
js
pop
sub
scas
iret
outsb
ljmp
ret
test
loope
lods
sub
psadbw
ja
insb
int
daa
pop
outsl
xor
mov
mov
lret
mov
xchg
and
lods
cmp
push
cmp
enter
push
rcrl
dec
repnz
outsl
jae
leave
orl
adcl
ja
mov
mov
adc
stos
and
cmp
jp
or
fs
int3
in
aas
outsb
xor
icebp
pop
xor
push
je
in
ret
cmc
and
cmp
mul
insb
into
add
jnp
js
jbe
push
js
ss
sub
fcompl
mov
ja
aaa
lret
mov
int
xchg
int3
jno
sbb
iret
or
ret
cmpsl
inc
loop
and
jmp
rol
mov
add
push
xor
in
mov
pop
fistpl
adc
aaa
mov
pop
or
pushf
sbb
lock
and
scas
adc
pop
ja
out
mov
or
push
cmpsl
dec
jo
cmp
dec
cmp
fldcw
or
popa
xchg
in
jno,pn
mov
insb
mov
push
mov
pop
jnp
cmp
and
stos
mov
add
scas
push
mov
gs
pop
cmp
mov
add
fwait
lret
dec
pop
fldt
sahf
jbe
insb
add
sbbl
xor
aam
xor
das
push
dec
stc
push
mov
ss
sbb
lahf
stc
das
out
lods
sarb
sahf
sbb
mov
xchg
mov
sub
add
adcl
xor
popa
xlat
lret
push
dec
fsubrs
popf
adc
push
ret
stos
xor
mov
mov
mov
subl
pop
test
div
aaa
xor
ds
mov
cmc
and
dec
jecxz
mov
jno
imul
pop
jge
mov
leave
arpl
leave
and
rorl
add
cwtl
popf
repnz
daa
cmp
repz
or
mov
xchg
aam
mov
sbb
inc
push
test
dec
xchg
jno
push
mov
or
inc
dec
and
outsb
dec
repnz
adcb
mov
mov
mov
orb
cmp
test
sbb
jmp
sbb
inc
push
inc
sbb
inc
xchg
pop
mov
dec
add
cwtl
dec
and
hlt
rcr
popa
jp
mov
jecxz
lcall
arpl
xchg
negb
nop
lea
mov
or
xchg
inc
inc
fsub
jb
sub
dec
lea
and
jnp
js
xchg
outsl
add
test
mov
and
ljmp
mov
in
jecxz
and
add
lcall
pop
fs
es
sti
lea
icebp
lcall
add
nop
mov
push
and
push
pusha
lock
jecxz
cmc
movsb
mov
pop
out
outsb
aam
xor
fstl
rcll
or
push
shll
sub
mov
jnp
lds
shlb
pop
sahf
subb
push
std
and
rcrb
or
imul
or
icebp
push
push
rclb
pop
lahf
pop
inc
or
fwait
stos
dec
pop
mov
sbb
mov
ret
jns
je
add
movhps
or
leave
dec
daa
inc
sub
cmp
sbb
call
sbb
jns
std
call
xlat
loopne
mov
mov
sub
ds
scas
or
adc
or
bnd
imull
add
mov
fstpl
nop
mov
cmp
movsb
jnp
pop
xchg
hlt
xchg
or
xchg
push
add
mov
push
push
shll
jl
xor
aam
pusha
shll
lea
sti
ds
scas
stc
shlb
sarl
sub
or
xchg
cmp
cwtl
loope
fisttps
scas
xchg
sub
jae
jg
mov
add
xchg
cwtl
mov
addb
mov
outsl
jb
fdivrl
rcrl
sbb
and
je
sti
pushl
xor
div
cli
popf
fwait
in
and
xlat
hlt
pop
mov
jp
movsl
cli
push
mov
push
push
push
in
inc
xchg
sub
jbe
leave
dec
push
int
sub
sbb
test
stos
and
cld
sbb
cmpsb
mov
push
ret
mov
outsb
fldcw
cmp
fildll
in
addl
lret
loop
fisttps
dec
inc
into
pop
test
shlb
loop
mov
mov
std
sub
stos
jns
sbb
push
and
add
scas
pop
push
or
fidivrs
mov
imul
mov
xchg
popa
lret
insl
jmp
sub
mov
jns
dec
mov
leave
loop
xchg
or
jmp
mov
ja
xor
mov
or
mov
out
cmp
sub
mov
push
aaa
adc
lret
xor
cmp
repnz
pop
int
jmp
xchg
xor
mov
daa
xchg
push
adc
xor
popa
leave
cmp
lret
cmp
jne
cmp
loop
dec
shrb
outsl
xor
jns
pop
iret
mov
sub
outsl
popf
jns
mov
xor
popf
mov
fcompl
jmp
cmc
jmp
pop
into
jge
sbb
cmpsl
push
ljmp
sub
xlat
jae
fnstsw
psrlw
cli
mul
je
sub
faddl
xorb
out
inc
scas
sbb
mov
ljmp
xchg
pop
imul
rcll
add
popf
inc
and
jo
cmp
xor
repz
cmpsl
test
sub
into
sbb
push
and
push
mov
xchg
imul
jno
mov
xchg
scas
stc
insl
push
lcall
and
int
pop
repnz
loope
es
shr
orb
sub
cmpsl
or
bound
jmp
scas
enter
cmp
and
adc
add
sub
mov
imulb
into
push
mov
repz
scas
pop
sub
inc
out
jbe
and
xlat
lcall
or
pop
xlat
sub
sub
sbb
jo
inc
aas
mov
inc
mov
mov
iret
sub
clc
loop
fimull
or
cmc
lds
clc
and
clc
sarl
xchg
dec
gs
add
add
dec
icebp
push
fwait
ss
inc
ja
scas
lea
sub
cltd
decb
push
or
inc
sbb
xchg
mov
mov
test
mov
jmp
add
paddusb
and
mov
popf
mov
adc
push
and
dec
cwtl
nop
out
pop
mov
jnp
je
pop
jb
inc
xor
jecxz
mov
ficompl
test
jle
cmc
pop
loope
dec
sbb
jge
xor
arpl
arpl
aaa
inc
int
testb
push
mov
fidivl
cld
movsb
daa
stc
fistps
into
lcall
and
sbb
lods
or
pop
ret
push
out
push
mov
xchg
popf
mov
hlt
lds
and
loop
and
inc
stos
adc
insl
adc
fnstenv
aas
idiv
sbb
sub
cmp
dec
push
mov
jmp
ljmp
das
jns
je
into
test
xor
xor
jo
xchg
xchg
add
cwtl
mov
sub
push
fstpt
aas
adc
add
sub
sub
in
cmp
cmc
xlat
cmp
sbb
fwait
popf
int
aam
add
jb
in
ror
ss
dec
data16
jbe
movsl
xchg
cmc
inc
or
data16
aad
test
dec
pop
inc
rclb
fdivl
push
test
sbb
add
xchg
in
adcb
stos
ret
mov
imul
test
or
mov
lock
push
lahf
jl
into
call
xchg
cmpsb
fcoml
sub
scas
imul
pop
mov
movsl
pop
cmpsb
hlt
push
in
cmp
or
mov
jbe
ret
aad
rclb
orb
mov
shl
jg
mov
out
adc
sbb
gs
cmpsl
rclb
je
ror
inc
adc
call
jmp
xchg
out
insb
outsl
out
fisubrs
mov
jl
repz
add
jle
fistpll
sbb
cmp
lods
mov
stc
out
loop
sub
jle
scas
int
test
cmc
or
fbstp
cmp
inc
xor
add
inc
dec
sahf
fdivl
pop
jmp
mov
dec
sarl
fisubrl
jo
lods
adc
mov
mov
jbe
jmp
sub
movsl
pop
cwtl
push
rcrl
jg
test
lock
jmp
mov
mov
add
sub
xchg
clc
ljmp
xchg
lret
das
or
xor
xlat
sti
sub
out
xchg
dec
ljmp
adc
cli
or
test
outsb
out
mov
adcb
movsl
fcmove
pop
xchg
fadd
mov
in
sbb
dec
mov
adc
jo
lock
mov
pop
daa
hlt
xchg
push
out
mov
pushf
jle
lret
or
mov
test
push
xlat
arpl
lds
mov
call
lea
adc
push
pop
fnstsw
jnp
adc
cld
jo
movsl
cmp
adcl
imul
dec
nop
ret
addb
sti
jle
jne
and
addr16
pop
xor
jno
test
cld
and
mov
xor
gs
ret
clc
and
mov
sarl
xchg
push
sbb
xchg
mov
rolb
mov
sbb
xchg
add
pushf
cmpsl
mov
push
rorl
mov
stos
loope
outsl
lods
rcll
pop
jmp
addr16
ss
push
jecxz,pn
push
out
mov
aam
or
jne
std
daa
push
dec
out
mov
rol
sub
push
push
jg
mov
in
movsb
out
cmpsb
movsl
pop
movsl
test
mov
jge
pop
dec
repz
lcall
push
push
mov
push
or
decl
in
test
sbb
push
push
aam
dec
inc
xchg
xchg
push
aaa
xchg
or
in
pop
mov
jecxz
pop
or
mov
add
fs
pop
psrld
and
cmp
into
xchg
cmc
jo
push
das
mov
cwtl
mov
dec
rcll
hlt
mov
stos
test
fldcw
xlat
aaa
pop
loop
popa
imul
mov
or
dec
aad
stos
push
mov
push
cmp
ljmp
dec
jae
inc
mov
adc
sbbb
rcrl
lcall
repz
mov
imul
aas
fcoms
repnz
das
int
stos
push
outsl
mulb
outsb
pop
cs
movsl
jecxz
inc
test
mov
je
mul
out
cli
fwait
loope
movsl
pusha
je
adc
adc
or
push
pusha
xor
adc
js
push
mov
add
imul
sbb
rcrb
xchg
sbb
cmpsl
adcb
sub
sti
xchg
into
xor
sub
sub
loopne
add
push
pop
adc
jecxz
jl
scas
outsl
sbb
or
adc
sarb
and
mov
into
enter
adc
adc
inc
scas
imul
sbbl
cmp
cltd
mov
adc
insb
lahf
xor
sbb
adc
fldl
dec
cltd
rcl
scas
mov
test
scas
jo
sub
sbb
leave
loope
push
adc
stos
dec
inc
insl
mov
cmp
notl
repnz
mov
aaa
in
push
ds
xchg
mov
adc
mov
jne
xor
xchg
popf
add
in
lret
push
out
fs
mov
xchg
sub
or
and
jbe
out
nop
cmp
jbe
ja
int3
or
mov
shrb
push
jmp
xor
jns
xchg
add
xchg
pop
push
loope
add
inc
sbb
inc
adc
loopne
shlb
pop
mov
dec
mov
iret
aas
pop
cmp
in
mov
push
mov
dec
inc
jmp
mov
pop
push
xchg
test
jbe
or
inc
sub
pop
inc
cmc
mov
or
outsl
mov
popa
popa
out
and
mov
lea
add
xor
inc
adc
test
daa
xchg
adc
mov
cmc
fimuls
jmp
add
dec
adc
out
imul
add
pop
in
mov
cs
sti
icebp
mov
xchg
repnz
mov
andb
fcmovne
add
xchg
into
lock
jmp
add
xchg
jae
repz
cmovp
inc
dec
mov
mov
sub
mov
mov
out
pusha
sbb
pushf
xor
dec
out
add
dec
xor
inc
loopne
insl
mov
scas
push
add
sbb
xchg
sub
add
fists
xchg
outsb
inc
jecxz
adc
add
andl
xlat
aam
mov
xchg
mov
push
jmp
enter
int
sub
xor
scas
dec
xor
pop
cmp
fcomi
rcl
sub
cltd
int3
lahf
push
addr16
sbb
loopne
mov
mov
sbb
mov
sbb
stos
test
rol
repz
dec
fdivrl
adc
inc
mov
jle
add
insl
pop
push
fs
clc
ljmp
xchg
ljmp
xor
aaa
ret
mov
inc
xchg
sbb
dec
lcall
fldl
imul
int3
push
sbb
and
inc
push
mov
pop
sub
stos
cwtl
lret
lret
incb
dec
jmp
jp
pusha
mov
pop
adc
mov
lea
jb
push
addl
mov
adc
shl
add
mov
jne
fisttpl
add
add
inc
mov
mov
andl
mov
lods
push
ljmp
aas
push
cmp
test
dec
and
in
mov
add
lcall
xchg
cltd
jmp
sub
push
sbb
adc
jo
inc
enter
decb
outsl
sbb
cmp
or
mov
fs
cmpsl
cmp
inc
add
lldt
sub
ja
inc
adc
movsl
add
add
dec
xor
in
sbb
mov
push
loop
dec
or
cmp
mov
xchg
pop
mov
loope
imul
scas
add
repz
orl
rcll
xor
push
add
movsl
ja
gs
mov
enter
inc
outsl
cmp
push
outsb
subl
mov
imul
ds
insb
xchg
sub
lcall
icebp
scas
or
repz
push
pop
lods
adc
and
lods
lods
or
and
or
fldt
xor
aas
aas
cmp
fwait
adc
aaa
pop
out
jb
xchg
ret
xchg
frstor
fldt
outsb
jne
shll
popa
jo
shrb
cmp
push
push
mov
aas
sti
aaa
scas
adc
jnp
cld
fwait
out
jecxz
push
add
adcl
inc
xlat
adcb
push
in
hlt
inc
xchg
fimull
cmpsl
adcl
cmpsl
test
notb
adc
add
mov
pop
adc
int
popa
jle
mov
outsb
xor
iret
out
xor
mov
fnstcw
push
xchg
dec
jg
test
mov
add
out
lcall
es
dec
jmp
push
fsubs
adc
jp
lods
inc
outsb
fs
or
fmull
cmp
cmp
je
sub
jno
lds
push
je
mov
lock
repz
mov
inc
xchg
jae
sbb
fcoml
jae
adc
add
or
cmp
pushf
js
ja
mov
fistpll
adc
pop
cmp
push
subl
fwait
stos
push
repz
add
leave
cmp
jno
icebp
mov
xor
adc
and
insl
inc
mov
jno
dec
mov
lret
fwait
mov
inc
cmp
xchg
lret
popa
mov
in
stos
icebp
push
shlb
dec
mov
shrl
in
sub
fcmove
push
sbb
sbb
adc
sbb
negl
adc
jbe
rcl
mov
int
xchg
incl
insl
hlt
js
scas
rorb
fisubrs
rcll
outsb
shl
mov
adc
mov
sahf
lcall
loop
into
ljmp
leave
xor
sbb
notb
dec
int
pop
jne
sub
inc
sbb
stos
cmpsl
push
cli
push
mov
loop
xor
js
push
sbb
inc
test
dec
sarl
fisubrl
lret
daa
jge
pop
jl
jp
arpl
xor
push
push
int3
sarl
cmpsb
bound
inc
lret
mov
mov
dec
sbb
add
addr16
push
outsb
test
daa
iret
push
leave
or
push
aas
xchg
inc
inc
sub
jnp
inc
jl
adc
hlt
mov
call
cmp
sub
push
std
dec
shr
sbb
loope
or
adc
repz
jle
xchg
movsl
xchg
imul
inc
cmpsl
push
cmp
cld
sbb
inc
shl
pop
mov
cmp
ret
cmp
hlt
sbb
push
stos
stc
flds
dec
xor
xchg
js
sbb
pop
mov
int
shl
shlb
jb
dec
pop
mov
jo
and
sub
hlt
sahf
add
addr16
sub
jecxz
test
add
out
cmpsb
xchg
repz
jne
ja
cmp
outsl
cmp
pop
push
push
repz
mov
push
outsl
jae
iret
mov
cmpsb
in
test
xchg
cmp
insb
mov
out
xchg
push
xor
popf
dec
mov
ljmp
pop
stc
jbe
add
das
xchg
rolb
pop
adc
pop
lahf
sbb
sbb
popa
pop
aam
mov
stos
stos
loope
or
cmp
test
dec
aas
fildll
lock
pushf
pop
jge
ja
rcrl
test
popa
sti
rcrb
out
mov
xor
lock
insb
fistpl
les
rolb
hlt
inc
mov
dec
js
inc
mov
nop
movsb
push
sub
call
sub
mull
out
stc
test
jg
jno
enter
dec
dec
stc
or
repz
mov
mov
roll
mov
daa
daa
clc
cli
stos
movb
dec
mov
cli
lods
lock
mov
mov
ljmp
pop
push
das
adc
sbb
gs
sub
xchg
and
push
inc
inc
inc
mov
add
sbb
push
ljmp
hlt
idiv
dec
cmpsl
inc
call
fldt
shr
mov
leave
and
sub
jb
xchg
sarb
lods
movsl
ret
add
pop
cmp
add
lds
ror
pusha
dec
xchg
xor
mov
int
adc
mov
icebp
and
xchg
pop
loopne
stos
es
sub
test
mov
orl
ret
int3
clc
cmp
dec
xor
add
test
mov
daa
inc
clc
movl
gs
dec
dec
push
rorb
xchg
mov
scas
cli
xor
aam
out
xchg
adc
lret
jne
push
push
sahf
rcrl
outsl
outsl
pushf
xchg
pop
add
inc
xchg
or
add
mov
insl
divb
addl
loopne
fdivrl
jns
add
push
fwait
ljmp
xchg
and
jg
pushf
ret
dec
lods
pop
jne
sub
mov
shl
jmp
mov
or
loop
jl
push
mov
iret
mov
nop
mov
mov
sbb
leave
nop
pop
mov
arpl
xchg
sub
sbb
movsl
mov
mulb
sbb
ret
bound
test
cmp
add
sub
test
push
jg
in
stc
push
and
or
and
test
pop
sub
xorl
mov
jne
dec
or
je
pop
push
fisttps
loope
jb
or
sbb
dec
jg
xchg
add
cli
outsl
sarl
jl
fidivl
imul
adc
mov
cld
adc
insl
es
fistps
lea
xchg
xor
jae
out
dec
mov
fs
and
mov
lea
or
xchg
sbb
insl
lret
insb
mov
cmp
stos
cmp
pop
sar
mov
pop
mov
dec
xchg
pop
mov
leave
mov
repnz
lds
ja
xor
imul
orl
in
adc
hlt
sub
xchg
cld
mov
cltd
mov
loop
mov
fs
pop
inc
jns
and
nop
xchg
adc
and
sbbl
sbb
dec
stos
cmpsb
idivb
push
ffreep
aas
add
jnp
enter
test
xchg
repz
mov
xor
inc
ret
das
das
jne
jo
aad
in
adc
out
cmpsb
xchg
testl
push
mov
cld
cld
mov
add
imul
das
mov
adc
mov
push
jb
sbb
push
icebp
mov
or
movsb
mov
addr16
jbe
push
push
jp
pop
leave
outsl
divb
sub
sub
inc
outsb
sti
cli
cmpb
inc
repz
mov
xor
fcomip
arpl
std
mov
nop
xchg
adc
lock
das
movsl
dec
mov
in
cmp
aas
repz
inc
dec
pop
cmc
mov
aaa
add
frstor
enter
insb
fcomps
cli
and
adc
in
aam
rclb
push
mov
subb
xor
loope
fdiv
mov
mov
shll
push
adc
idiv
sbb
out
mov
pushf
ljmp
loopne
cld
add
push
xchg
inc
mov
rcrb
xchg
out
inc
outsl
pop
adcl
std
inc
mov
cltd
or
push
sahf
and
ror
mov
pop
pop
outsb
in
and
mov
popf
cmp
xor
popf
add
out
insb
test
mov
fists
cmpsl
push
icebp
arpl
and
inc
jb
imul
aad
loopne
dec
mov
loope
insb
sbb
mov
pop
xor
fmull
cli
es
bound
sbb
jmp
call
in
fs
cmc
mov
xchg
mov
mov
xlat
xlat
out
shll
js
push
mov
xchg
mov
mov
push
fdivrs
xor
push
lret
lds
popf
fwait
invd
out
add
leave
dec
aaa
enter
mov
test
shl
negb
mov
fnsave
add
outsb
inc
and
mov
sub
xor
mov
int3
mov
int3
adc
push
enter
scas
adc
dec
jnp
add
mov
jp
dec
repz
jmp
pop
pop
pusha
push
add
inc
shll
insb
and
scas
lret
insl
lods
sbb
add
stc
ret
sahf
mov
sub
stos
xor
lds
jae
pop
fcompl
fsave
inc
repz
movsl
repnz
ret
sub
or
out
sub
mov
sub
in
add
int
mov
mov
stos
cld
pop
sub
in
sub
lahf
lret
fdivrs
mov
scas
fnstsw
dec
cmp
inc
ja
out
mov
clc
hlt
and
add
or
pop
pusha
out
les
sbb
mov
fcomps
xchg
out
pusha
jnp
dec
cmp
test
jno
imul
mov
leave
mov
les
mov
stc
rolb
adc
leave
mov
call
nop
adc
or
test
inc
dec
mov
xchg
xchg
push
pop
push
mov
jbe
push
mov
push
inc
rcr
mov
and
adc
jge
mov
mov
cmp
mov
les
aaa
sbbb
pop
lcall
push
inc
ljmp
dec
lret
iret
leave
loope
push
xchg
xchg
scas
lahf
adc
dec
test
xchg
mov
repnz
sbb
test
sbb
mov
dec
je
push
pop
inc
movsb
cmpl
es
imul
push
pusha
adc
pop
imul
dec
addr16
and
gs
enter
movsb
fldt
sub
inc
dec
dec
lods
cli
rcrb
jle
and
jae
pop
mov
xchg
mov
xor
push
dec
scas
cmc
movsb
mov
push
in
push
and
cmp
js
fsubp
xor
call
lock
inc
sub
mov
mov
enter
inc
lcall
in
scas
add
idivb
les
rcll
inc
outsb
divb
adc
sub
cmpsb
shll
popa
test
ret
popf
xchg
mov
out
pop
xor
lret
pop
leave
dec
mov
imul
cmp
sahf
fcmovne
aad
rorl
mov
mov
mov
and
sbb
test
into
repz
mov
jecxz
xor
xchg
pop
lret
dec
aam
pop
sub
cmp
pop
mov
shll
icebp
dec
aas
stos
repz
dec
mov
jl
in
dec
hlt
push
push
and
lods
hlt
sbb
aam
stos
repnz
in
sub
shl
ljmp
inc
and
arpl
cmpb
lods
imul
cmpsb
jns
pop
outsb
and
adc
cmc
cld
cmp
xor
jnp
js
add
mov
clc
push
outsl
jbe
fdivrs
fcomp
adc
repnz
and
push
lcall
pop
fildll
loopne
jg
jne
cltd
mov
enter
hlt
cld
je
add
mov
jp
cld
xchg
and
push
push
movb
ss
xchg
or
jae
mov
jbe,pt
test
cmp
sub
mov
and
pop
jns
pop
sub
push
inc
push
sarl
pusha
xchg
lahf
pushl
add
sbb
cmp
xlat
dec
cmp
popf
addr16
mov
dec
aad
stos
aas
repnz
sub
mov
xchg
jge
lock
or
push
pop
out
sbb
xlat
ja
adc
jne
pop
ss
enter
cmc
mov
cmpsb
lcall
mov
dec
jge
mov
fwait
and
add
aas
push
sub
push
lahf
ja
stos
jae
testl
push
call
adcb
clc
cmpb
aaa
or
int3
sub
ja
repnz
lcall
lock
pop
daa
jns
sbb
adc
mov
les
xchg
cmc
jl
fucom
mov
lods
out
sub
outsb
testl
fsts
dec
mov
nop
test
dec
mov
fsubs
or
xchg
mov
addr16
flds
jle
lahf
sub
dec
inc
outsb
inc
pusha
lods
orb
cmp
jecxz
xchg
pop
push
sbb
and
lret
bound
sbb
fsts
lret
cld
xchg
adc
sub
dec
mov
int
in
pop
push
scas
pop
dec
clc
cmpsl
push
dec
add
jns
in
mov
inc
into
add
mov
dec
loopne
notb
dec
add
cmp
dec
adc
push
and
sub
popf
in
out
push
jecxz
cmp
xlat
lret
scas
sbb
pop
pusha
stos
xchg
xchg
in
fldenv
xchg
jae
push
mov
cmpsb
xchg
pop
or
imul
inc
scas
push
push
and
dec
mov
arpl
ret
add
and
pop
mov
out
push
xor
mov
pop
inc
addr16
xor
jo
std
lret
or
insb
sarl
lods
inc
fcomip
xor
dec
xor
mov
cmp
outsb
jne
test
inc
std
mov
inc
jmp
cmc
sub
mov
sub
cmp
jecxz
inc
insl
scas
into
lods
test
pop
and
shrb
fs
jbe
int3
pop
and
xchg
inc
aaa
repnz
test
mov
sub
mov
dec
icebp
pop
enter
loope
lods
jno
sub
hlt
cmp
negb
stos
in
mov
xor
outsb
sub
sub
mov
cmp
add
bswap
cmp
dec
repnz
xor
push
in
or
sahf
mov
mov
test
or
add
push
mul
sbb
es
imul
inc
adc
add
jno
mov
daa
mov
data16
es
xchg
pushf
inc
sti
push
or
cmp
call
lret
pop
xor
xchg
ret
mov
pop
xor
outsb
sbb
sbb
jmp
test
add
loope
iret
rcrb
repnz
enter
inc
in
gs
popf
mov
popf
mov
das
orl
aam
jge
jl
stc
add
cltd
sar
in
jle
pop
js
jl
sbb
fwait
dec
push
xchg
or
imul
or
sub
shlb
sub
mov
pop
cmpsb
pop
mov
shll
xchg
into
mov
cmp
pop
loope
dec
inc
insl
mov
jns
fwait
gs
outsl
mov
cmp
outsl
out
jb,pn
and
popf
fs
pushf
jmp
push
push
add
stos
repnz
out
mov
int3
daa
mov
and
hlt
push
sub
xchg
xor
std
pop
iret
nop
xchg
jg
mov
pop
xchg
xor
jle
mov
mov
and
cli
push
xor
in
negb
inc
xchg
in
pop
movsl
nop
lock
movsl
fistpll
shlb
mov
push
xor
sbb
in
jge
or
aad
sub
mov
sub
fcmove
nop
jge
scas
sbb
gs
sbb
movsl
pop
movsl
xchg
repz
xchg
xchg
inc
inc
jg
bound
mov
cmp
pop
jg
mov
inc
inc
jne
push
mov
jl
jnp
repz
mov
jns
enter
test
inc
inc
in
xchg
cmp
icebp
repnz
loopne
mov
stos
push
mov
mov
inc
lret
sub
mov
inc
sbb
cmp
test
xchg
mov
sarb
sbb
cmc
sbb
mov
sti
in
adc
mov
mov
jno
mov
xchg
push
cmpsb
push
mov
enter
fstl
cmpsl
stc
out
cmp
inc
insb
fwait
stos
aad
push
and
and
std
dec
and
push
pusha
aam
add
movsl
inc
nop
add
mov
clc
lcall
mov
sbb
mov
jns
repnz
and
imul
cmc
mov
enter
lock
pop
lret
cmp
jns
and
pop
adc
jmp
mov
inc
xchg
sbb
testb
xor
push
aaa
shll
into
adc
dec
movsb
pop
aaa
sub
fisttps
dec
cmp
pop
cmpsb
jg
loopne
push
mov
xchg
fcoml
popa
adc
xchg
push
cld
arpl
ja
lret
mov
xor
int
xlat
sub
test
mov
insl
flds
mov
xchg
or
addl
jb
sahf
aas
out
aas
shlb
sub
cmp
insl
push
negb
das
sbb
push
lods
mov
adc
test
hlt
inc
pop
rcrb
sahf
roll
jmp
add
lahf
cmp
xchg
dec
or
scas
js
lahf
sti
mov
add
je
xor
addb
jno
adc
or
bnd
mov
cmpsb
jl
cmp
in
popf
mov
xchg
rclb
arpl
outsb
mov
negb
hlt
ret
shrb
xor
addr16
sub
popf
xlat
cmp
sub
cmp
jge
scas
push
cld
aas
sahf
dec
loope
aam
pop
shl
test
lahf
push
xchg
dec
pushf
jmp
and
clc
mov
pop
push
dec
pop
mov
jl
comiss
xchg
shl
scas
imul
dec
lcall
ret
pushf
sub
xchg
jl
in
aaa
mov
xor
cmp
inc
sbb
addb
and
mov
push
dec
lods
jbe
sub
sub
sbb
cld
jbe
mov
pop
sbb
loope
or
xchg
mov
loopne
lods
dec
arpl
xor
inc
dec
add
inc
int3
mov
xor
inc
notl
orb
adc
repz
push
lods
fidivrs
es
mov
pop
mov
sbb
ret
jp
int3
aas
mov
rol
movsl
lods
adc
mov
cwtl
fdivl
cmp
sbb
and
sbb
lret
add
cmp
mov
adc
lret
push
stos
imulb
gs
imul
or
pop
iret
add
fisttpl
mov
xor
mov
out
jle
aad
pop
les
sbb
push
xchg
je
mov
adc
jp
push
js
outsb
push
sti
push
nop
rcrl
push
cld
aaa
push
mov
rorb
in
mov
dec
sub
das
aad
das
add
icebp
daa
fimull
xchg
xor
jmp
lods
daa
or
xorl
pop
dec
ret
mov
les
add
xchg
outsb
and
xchg
xor
mov
lret
mov
fildl
push
pop
mov
xchg
mov
mov
in
lcall
mov
xor
lock
inc
cld
stc
aam
fcmovb
push
data16
in
scas
incb
inc
jne
ss
sbb
dec
stos
lcall
adc
dec
test
adc
outsl
mov
mov
jno
cmp
aam
test
push
add
xchg
sub
ljmp
xchg
lcall
push
dec
ret
jmp
sbb
out
mov
sub
mov
jo
outsl
scas
inc
push
jne
push
xlat
cwtl
rclb
jmp
mov
xadd
les
sub
jbe
inc
push
pop
and
in
xchg
push
fstpt
les
add
adc
pop
or
mov
mov
add
add
subl
mov
dec
jo
movsl
mov
sbb
mov
data16
hlt
cs
aaa
arpl
mov
cmp
pop
and
mov
jmp
jo
push
sbb
xor
das
out
ror
xchg
add
popa
jecxz
testb
sub
xchg
fcoms
nop
andb
cli
or
shlb
and
jge
hlt
lods
adc
leave
xor
fcom
pop
mov
fsubs
fsubr
sar
inc
mov
sarb
fs
stos
aad
adc
pop
jne
sbb
es
or
jne
fldcw
add
pop
mov
add
insl
mov
imul
jl
adc
push
ljmp
sahf
scas
insl
data16
xchg
cli
jno
fs
sbb
mov
cmpsl
mov
adc
push
sbb
adc
popf
jae
sti
call
in
ljmp
nop
clc
mov
mov
repz
inc
jl
popa
vpsadbw
push
lock
push
mov
push
mov
xor
orb
dec
stos
gs
shlb
loopne
sbb
dec
or
mov
dec
outsl
adc
ds
iret
scas
out
mov
jge
std
insb
mov
mov
scas
xchg
lcall
push
jl
shlb
pop
jbe
adc
decb
fstpl
and
pop
push
lods
push
inc
fnsave
cmpsl
pop
aad
mov
scas
or
mov
pop
hlt
or
lods
cmpsb
imul
sti
imul
rcrb
in
scas
cmpsb
dec
ljmp
mov
cld
sbb
leave
mov
jbe
mov
or
cmp
jle
fmul
inc
cmp
xlat
mov
shll
sbb
lods
or
sub
dec
dec
cmc
in
add
add
stc
pop
jg
aas
xchg
or
and
sbb
mov
sub
popf
sarl
xchg
nop
add
mov
cmp
xchg
dec
cwtl
jo
sub
jb
aaa
stc
xchg
les
sbb
nop
xchg
mov
mov
fwait
fwait
mov
mov
cmp
les
repz
jmp
stos
repz
jae
aas
ds
and
xchg
rcrl
pop
xor
pop
data16
mov
inc
jbe
iret
push
add
ljmp
aad
mov
cmp
jno
cltd
xor
xor
push
test
lahf
dec
jne
loopne
mov
les
inc
push
lahf
fmul
jb
cs
mov
rol
lahf
es
js
xor
mov
mov
sbb
cs
xchg
shrb
lret
sbb
daa
data16
test
fisubrl
adc
ja
or
cmp
lahf
outsl
mov
aad
js
movsb
cs
js
test
sub
mov
mov
push
push
adc
scas
pop
push
add
fistps
std
arpl
popf
pop
dec
aad
mov
cmpsl
mov
fnstsw
cmp
pop
daa
xlat
mov
pop
or
pop
adc
pop
std
inc
pushf
jp
sti
mov
mov
dec
lcall
jae
jl
repz
lret
sub
jmp
dec
inc
sbb
cmpsl
aad
lret
hlt
test
adc
sub
sbb
popa
popa
and
cmp
sbb
mov
mov
jbe
nop
cltd
daa
sahf
push
add
mov
outsb
loope
cmpsl
loope
mov
cmp
incl
jb
dec
dec
sahf
mov
xchg
and
rcl
sbb
jle
nop
jl
xchg
outsb
loop
pop
lret
jo
or
ss
and
push
jne
pop
call
jmp
imul
mov
sarl
mov
sub
pop
mov
or
xorl
mov
pop
pop
push
roll
dec
or
mov
dec
sti
cmc
iret
std
scas
int
jnp
dec
xor
fadd
mov
mov
mov
fwait
ss
xchg
sub
push
jae
xor
cs
and
mov
jo
sub
sbb
inc
pop
jb
cmc
pop
pop
and
lea
mov
in
add
inc
inc
test
jnp
jnp
repnz
daa
xor
es
mov
test
xor
cltd
vpshuflw
lea
add
pushf
test
push
cs
add
cmp
sbbb
test
aad
sbb
push
lods
shrl
pop
in
jae
in
jns
subb
scas
pop
dec
adc
mov
sbb
out
sub
adc
mov
xchg
mov
lds
jl
jno
gs
mov
xor
mov
outsb
test
and
dec
rcrl
push
mov
xor
xor
pop
push
out
jo
dec
adc
pop
jge
std
jp
xor
xor
pop
cmp
pop
add
mov
jne
fiaddl
shlb
pop
fwait
push
adc
xchg
orb
fcoms
aam
and
sahf
pop
mov
mov
add
hlt
mov
fistps
data16
into
dec
out
popa
les
push
test
addr16
out
push
or
popf
mov
xchg
push
sahf
int
mov
and
lods
sub
push
sahf
dec
enter
iret
sbb
lcall
addr16
jmp
jbe
xlat
xchg
sbb
movsb
sub
dec
dec
xchg
shl
mov
gs
aas
cmp
push
xorl
push
adc
shrl
cmpsl
dec
ja
pop
fcoml
mov
pop
rorl
aad
add
xlat
add
lret
pop
add
xlat
ds
lods
adc
loopne
push
arpl
cltd
mov
adc
inc
imul
pop
xchg
les
aaa
rcll
loopne
cmpsl
pop
mov
aas
out
stos
add
lahf
add
mov
sub
mov
in
repnz
fldl
stos
andl
inc
aam
or
pop
ss
jae
mov
sarl
stos
jge
xorl
cmpsl
in
dec
add
push
sub
sub
je
sbb
and
nop
push
cmp
and
cmp
mov
outsl
jle
xchg
stos
rcl
pop
mov
jmp
jns
lods
fadds
subl
das
jno
xor
into
cmpsb
nop
dec
add
sub
call
pusha
shlb
dec
mov
xchg
xchg
pop
xor
add
test
adc
push
shll
aas
cmp
jnp
insl
insb
sbb
movb
loopne
rorb
and
mov
and
sti
adcl
aas
lea
dec
js
sub
jle
dec
adc
in
xor
and
out
rorb
loope
mov
sbb
and
push
hlt
fists
pop
jo
sbbl
ret
loopne
pop
orb
cld
pop
pop
push
cmp
lret
sbb
cmp
rcr
into
movsb
jg
testb
stc
jmp
test
xadd
loope
xchg
popa
in
mov
aaa
sbb
pop
neg
ja
and
mov
lret
add
es
mov
test
sbb
pop
cmpsb
mov
jnp
push
jae
inc
pop
fcoms
movsl
cwtl
divl
lret
mov
add
adc
shll
cs
sbb
add
leave
fnstcw
mov
jp
rorb
outsl
lods
mov
cmpsl
data16
ss
mov
inc
insb
cs
aaa
xchg
push
push
stos
inc
adc
push
sbb
pop
in
mov
push
push
sub
xchg
in
subb
dec
sub
jecxz
add
lcall
jp
push
xchg
out
jle
imul
test
testb
mov
daa
push
push
xor
test
mov
push
lods
mov
push
lcall
ret
xchg
mov
jns
mov
adc
xor
push
jl
das
imul
rorb
fwait
out
pop
jne
pop
cld
cmp
cmc
add
orl
or
test
inc
addr16
repnz
enter
cmp
push
mov
adc
movsb
jge
dec
and
stos
xorb
mov
int
inc
xor
cmpb
sbb
or
fs
int3
jnp
mov
mov
inc
xchg
pop
cmp
and
filds
lahf
lahf
push
ljmp
aas
or
test
loope
mov
mov
dec
mov
and
subb
cmp
xor
mov
icebp
std
cmp
cmp
ss
jnp
adc
cmp
sar
jg
sbb
jno
mov
push
push
dec
xchg
fstl
push
xchg
jecxz
cmp
push
mov
xchg
je
lds
sub
push
mov
sub
mov
adc
xlat
addr16
lcall
outsb
ljmp
out
push
mov
aad
insb
repz
mov
repnz
adc
inc
lock
andb
fists
push
xchg
inc
sahf
icebp
mov
sub
loop
mov
add
or
or
loopne
dec
int3
adc
std
adc
out
ss
lret
jecxz
adc
dec
push
mov
les
push
test
jne
lret
out
gs
jge
ret
xor
fwait
ret
xchg
mov
and
repz
xchg
mov
push
sahf
adc
sub
cmc
jp
xor
idiv
scas
lock
xchg
loopne
push
add
test
mov
loop
divl
cld
ret
sub
sahf
or
cmp
cmp
ficoms
mov
and
pop
jnp
icebp
push
adc
mov
ret
sahf
push
adc
pop
push
shll
aad
pop
add
cmp
xchg
and
sbb
jnp
and
inc
lret
or
sbb
movsl
inc
stos
in
push
repnz
scas
dec
push
pop
loope
iretw
add
dec
jge
xchg
inc
cmp
dec
movntq
out
mov
sarl
sub
jns
imul
pop
sbb
idiv
cltd
jno
jno
movl
push
cmpsb
hlt
jg
mov
xor
mov
cmp
jle
xor
hlt
cmp
mov
lods
pushf
js
mov
jne
and
cmc
cmp
frstor
jle
adc
inc
xchg
and
fistl
ficomps
dec
xchg
sti
mov
add
sbb
push
cmp
push
sub
add
rclb
mov
mov
cmp
fiadds
sbb
push
scas
push
or
push
dec
pusha
sub
cmp
fsubrl
sbb
cmp
aad
pop
push
cmpsb
out
cmp
jb
loopne
test
sub
sahf
lods
mov
inc
loope
pop
cli
pop
out
insb
insb
xor
inc
lock
pushf
cs
rcl
pop
cmp
inc
sbb
inc
cmc
push
fisubrl
push
sbb
stos
dec
mov
aam
and
xor
mov
push
push
fdivrl
and
jecxz
mov
adc
and
cmp
dec
add
int3
jp
and
ss
gs
or
fwait
lods
dec
adc
outsl
and
sbb
shll
in
xchg
inc
mov
int
sub
xchg
dec
xchg
or
xchg
push
gs
cmpsl
int3
imul
xlat
stos
dec
hlt
or
out
sahf
pop
repnz
ja
pop
or
inc
rol
or
loop
sbbb
dec
fistl
or
into
adc
xor
pop
sahf
loop
lret
not
sub
arpl
cmpsb
sub
xchg
inc
add
fwait
xchg
fadd
into
pop
pop
lret
shlb
jbe
mov
or
pop
pop
ljmp
xchg
add
scas
mov
loope
add
ljmp
loopne
out
cmpsb
mov
inc
inc
pop
cmpsb
outsl
in
shlb
cld
scas
sub
ljmp
mov
aad
jg
push
cmp
xchg
sub
loope
dec
lods
ss
cmpsb
push
add
pusha
outsb
inc
add
push
xchg
xor
xchg
subl
xor
dec
dec
test
ljmp
out
into
mov
cmpsl
nop
imul
scas
lea
shr
lcall
repnz
shrb
pminub
cmovs
mov
xor
sarb
fs
loope
fucomi
cmpsb
jg
out
push
ja
dec
mov
push
insb
cmp
aam
and
adc
push
xchg
mov
push
popa
test
mov
out
mov
xchg
cmc
xchg
dec
mov
cli
xchg
dec
push
scas
loopne
ja
push
and
adc
fdivrp
push
lret
jb
js
jl
cmp
inc
pop
subl
sbb
cld
hlt
mov
jne
andb
add
dec
mov
in
or
sbb
and
inc
outsl
cs
mov
popa
loop
orl
or
outsl
mov
jmp
out
icebp
push
mov
xchg
fimull
ljmp
sbb
jb
dec
stc
sub
cmp
cli
fstl
push
push
sbb
decb
inc
push
loop
jns
cmpsb
or
cld
adc
mov
lods
sub
icebp
adc
xchg
adcb
test
fistpl
push
or
mov
pop
lock
orps
xlat
jnp
fsub
push
xor
jnp
lea
mov
xor
je
push
or
mov
pop
or
mov
inc
int3
icebp
adc
dec
and
shll
mov
pop
divb
inc
cmovbe
adc
adc
fsubp
push
inc
xchg
jnp
inc
mov
scas
or
scas
sbb
pop
inc
lds
call
xchg
add
push
insl
leave
xchg
loop
sub
daa
lret
test
rcrl
arpl
mov
test
sarb
and
into
inc
stc
or
jl
xchg
push
mov
jge
mov
std
pop
mov
or
or
lods
mov
push
jge
or
test
pop
shrb
imul
popa
and
inc
or
sbb
adcl
pop
sub
iret
imul
xchg
pop
mov
push
leave
mov
pop
pop
loope
mov
mov
cltd
mov
jnp
add
fdivrs
jns
sub
push
or
inc
dec
adc
pop
dec
sbb
mov
nop
test
jnp
into
or
xchg
mov
dec
movsb
fstpt
lods
push
cmp
mov
inc
dec
pop
mov
data16
dec
pop
pop
sbbb
mov
adc
add
test
push
insb
xor
mov
mov
dec
popa
stos
mov
dec
pop
mov
xor
and
sub
push
mov
mov
imulb
cmc
iret
mov
xchg
loop
fisttps
fstpl
and
add
imul
cmp
fcompl
lret
andb
sbb
xchg
imul
cmpsb
pop
sub
lods
adc
mov
push
pop
adc
scas
inc
adc
inc
and
stos
repnz
xchg
lret
popa
push
call
push
nop
inc
jle
fwait
aad
xchg
repz
adcb
lods
jns
rdpmc
rol
jns
sbb
popf
aad
dec
clc
push
mov
das
nop
popa
pop
xor
and
loope
mov
icebp
jb
inc
mov
xor
mov
cmp
shrl
cmp
stos
sub
lcall
mov
xor
cs
nop
cmpsb
sub
inc
pusha
adc
fsubr
vmovss
lret
test
jno
push
int
js
sbbl
inc
add
imul
pop
jbe
jo
jl
jp
es
sub
in
mov
shll
sub
rolb
leave
lock
or
out
ror
mov
and
out
scas
insb
pop
divb
stos
rolb
sbb
ds
pop
push
fisubl
aaa
lret
cmp
push
aaa
pop
int3
mov
xor
cs
aas
xor
in
fdivrp
std
mov
push
rorb
decl
out
sub
fstpt
fimuls
xchg
pop
out
in
lods
jo
stc
stos
fnsave
fdivrl
cmp
xor
les
push
lods
push
cmpsb
sahf
dec
icebp
fnsave
outsb
arpl
lret
add
xchg
push
mulb
mov
pop
mov
stos
repnz
push
and
sbbb
xchg
push
sbb
push
mov
jns
mov
inc
repz
cmp
sti
repz
pop
int
dec
outsl
and
pushf
bound
inc
xchg
sbb
in
and
int
pop
leave
mov
call
dec
xor
lret
ds
repz
pop
sarl
movl
cmc
sbb
in
push
adc
sub
sub
push
mov
je
jge
rcrl
shrl
mov
rcrb
mov
cmp
push
fwait
mov
cld
mov
sub
dec
lods
mul
aaa
out
xchg
fsubp
push
popa
sub
mov
pop
subl
in
cmpsl
jnp
push
pop
mov
mov
vmaxpd
mov
adc
lret
mov
loop
add
ljmp
adc
push
sub
test
repnz
aas
into
test
int
movsl
sub
popa
pop
in
in
cmp
repz
adc
sbb
aaa
stos
adc
jno
sub
pop
lods
repz
call
sbb
or
icebp
aaa
cmc
ljmp
and
push
xchg
in
rclb
lods
stos
test
xor
ret
or
push
inc
mov
pop
lds
jl
lsl
orl
mov
pusha
xor
aaa
push
mov
mov
and
pop
in
xchg
xchg
mov
mov
jo
arpl
push
mov
cwtl
cmp
xchg
add
mov
sarl
out
mov
xchg
xchg
scas
jne
dec
shlb
dec
xchg
sub
ja
leave
dec
push
inc
dec
clc
xchg
lahf
lock
mov
dec
and
push
out
repnz
pop
lods
jno
pop
popa
sbb
popf
sarb
adc
popa
fisttpll
pop
or
adc
aam
push
cmp
xchg
test
adc
xor
jnp
loopne
cmp
mov
xor
fstpl
enter
je
add
push
mov
mov
iret
or
push
cmpsb
pop
dec
movsb
std
dec
jo
mov
inc
incl
fnsave
xor
xor
or
in
ret
cmp
adc
xchg
mov
cmp
loopne
jg
add
imul
jae
xrelease
lea
loopne
arpl
sbb
xor
sub
xorl
sbb
sahf
push
sub
loopne
cmp
xor
ds
dec
out
mov
in
insb
jmp
and
adc
fdivrs
mov
outsl
fimuls
mov
or
mov
sbb
jl
sub
or
jl
ds
push
hlt
out
addl
xor
xchg
and
daa
dec
cli
xchg
mov
cmp
clc
mov
add
mov
pop
es
aaa
push
dec
add
sbb
jp
and
nop
mov
and
clc
jmp
iret
pop
jl
mov
adc
outsl
sub
loopne
jecxz
or
pop
xchg
out
jbe
mov
mov
mov
inc
bound
mov
push
out
mov
jl
lret
imul
dec
and
cmp
or
and
popa
imul
aaa
cmc
cmpsb
pop
popa
fstps
inc
pop
or
xchg
test
aaa
int3
loop
push
dec
mov
fldcw
dec
sbb
idivl
daa
push
pop
dec
dec
sub
push
inc
lods
sbb
add
stos
dec
pop
lcall
sahf
cmp
inc
add
dec
loopne
movsl
xchg
es
data16
mov
in
or
mov
imul
pop
fcompl
jns
out
pop
push
sbb
dec
and
jae
andb
pop
stc
sbb
popf
xchg
inc
cs
adc
and
xchg
xor
icebp
insl
repz
cli
shl
lods
pop
repz
or
rorl
jp
push
cmp
pushf
mov
out
lret
add
and
gs
data16
or
mov
ljmp
mov
out
ds
pop
cld
jo
sbb
xor
cltd
fdivrs
out
jno
int
xchg
popf
outsl
adcl
subb
push
loopne
loopne
inc
jecxz
out
cld
out
mov
addb
mov
ret
push
imull
push
mov
out
insl
sub
push
fildll
movsl
cmpsb
jl
mov
jno
ja
aad
ds
je
shlb
lods
movsb
addl
jno
test
mov
and
sbb
xor
std
les
mov
inc
cld
xchg
xor
into
mov
sub
lods
movsl
and
inc
cli
fldenv
sbb
pop
and
mov
mov
out
mov
or
mov
movsb
lret
cmpb
popf
xchg
mov
faddp
mov
inc
or
push
xchg
in
push
in
inc
leave
lretw
sbb
or
sbb
daa
mov
inc
pop
gs
xchg
shll
lds
mov
in
fnsave
mov
jno
in
and
int3
cmpsl
sbb
sbb
or
pop
imul
popa
imul
xchg
int
pop
sub
fisubs
dec
add
xor
daa
jnp
jnp
lcall
sub
push
push
inc
mov
int3
mov
push
icebp
ret
jle
mov
xchg
inc
add
push
and
in
push
test
sti
push
ds
jne
or
jg
mov
and
les
stc
icebp
push
mov
test
stos
inc
mov
push
std
cmp
sbb
dec
add
into
push
add
adc
fxch
in
add
movsl
cs
lret
cmc
xor
mov
test
out
fxch
in
out
enter
in
add
mov
push
insb
xor
call
lret
std
popa
hlt
pop
pop
push
xor
sbb
pop
stc
push
xor
mov
mov
xchg
xchg
jmp
adc
xchg
aam
xchg
dec
cli
dec
bound
adc
jmp
cli
jo
jge
add
in
cmpb
aam
mov
jo
inc
iret
mov
adc
jp
dec
push
pop
cld
outsl
fcompl
or
es
pop
jmp
dec
mov
int
divb
shll
lods
repnz
int
sahf
inc
sbb
pushf
mov
mov
fisttpl
and
js
lcall
mov
out
sbb
out
inc
add
jo
cmp
fdivr
int
lret
jno
xchg
push
jp
js,pt
xor
pop
call
mov
sbb
mov
pop
ds
push
inc
stos
xor
push
or
inc
dec
and
mov
loop
test
push
xchg
jp
cmp
dec
adc
push
lods
addr16
roll
fisubrs
mov
dec
fs
lock
bound
outsl
cs
sub
js
mov
cmp
stos
mov
jg
sbb
pop
add
leave
shrl
mov
fdiv
xor
fimuls
rorl
mov
movsb
or
xchg
adc
test
mov
or
pop
xchg
popf
jmp
movsl
lret
in
repz
shll
addr16
test
jecxz
std
fisubrs
pop
cmpsl
xchg
inc
push
js
out
and
xor
repnz
xchg
pop
and
xchg
sti
push
and
lock
negb
jecxz
in
adc
dec
xchg
jmp
in
pop
or
std
cld
loope
fildl
mov
push
pop
push
scas
sbb
xor
enter
sbb
stos
mov
pop
xchg
inc
aaa
xor
dec
loope
arpl
cld
inc
icebp
shll
mov
rorb
scas
jge
cld
rcrl
and
test
mov
cmp
sub
mov
pop
sbb
mov
imul
lea
or
add
pop
lock
std
icebp
imul
out
lahf
mov
pushf
inc
jmp
mov
xchg
lret
loopew
mov
mov
pop
imul
loop
shrl
xchg
xchg
int
test
adc
loopne
sub
cli
sub
mov
push
sbb
repnz
inc
inc
addr16
in
rcrb
push
lock
test
cltd
xchg
cmp
fxch
dec
lret
int3
and
pushf
add
mov
pop
sub
pop
jo
out
fst
jb
sub
or
addr16
out
shlb
push
add
lahf
xor
sub
jge
out
loop
fcompl
aaa
or
mov
push
adc
cmpsb
mov
xlat
add
cmp
xor
testb
in
sub
dec
outsl
push
scas
mov
mov
jo
or
sub
jne
cwtl
adc
daa
xchg
inc
pop
ds
jge
mov
int3
sbb
pop
and
jle
outsb
add
lret
shll
in
push
mov
out
jno,pn
clc
push
cltd
dec
pop
scas
aad
rcrl
and
int
stos
lret
xor
cs
popf
jne
mov
sub
xor
sbb
pop
repz
les
jo
test
test
push
dec
xor
pop
cmp
cmp
sbb
fsts
data16
add
stos
sbb
std
call
cmpsl
int3
ret
ret
pop
sub
scas
dec
cmp
sahf
xlat
movsl
lds
in
xchg
int
jae
sbb
jg
movsl
sbb
aas
mov
mov
clc
cmc
stos
lods
int3
mov
ljmp
int
jl
dec
jo
or
jg
mov
pop
jb
lea
loop
mov
sbb
xor
mov
insl
mov
aad
mov
jecxz
movsb
mov
addl
sbb
sti
inc
cmp
loop
std
bound
or
daa
jl
mov
ljmp
add
or
es
or
inc
jg
pop
arpl
push
dec
xlat
jg
aas
cld
push
nop
sarb
les
lods
gs
cmp
jecxz
cmpb
test
pop
fcoml
push
sbb
cmpsb
dec
pop
out
mov
jae
add
push
stos
pop
pushf
dec
or
cmp
push
cmp
jge
cmp
adc
mov
leave
sub
cmpsl
lods
in
mov
movsb
aam
mov
pop
cmp
iret
data16
fs
push
test
mov
add
in
aam
mov
inc
mov
pop
sarl
jo
aas
scas
popa
jo
loop
in
pop
dec
mov
push
test
or
mov
stc
push
into
inc
iret
jbe
mov
hlt
xlat
jp
outsb
aam
inc
enter
dec
sbb
dec
out
and
test
test
in
in
mov
clc
push
in
push
out
add
and
lock
mov
jle
gs
push
sub
sbbb
ret
mov
mov
loop
pop
add
sbb
out
jnp
cli
pop
fwait
inc
pop
arpl
jmp
xchg
in
testl
dec
stc
mov
rolb
cmp
jg
cmp
xchg
pop
xlat
iret
pop
dec
addr16
mov
fiadds
mov
add
les
dec
jle
ljmp
add
cmpl
imulb
inc
jg
ds
add
push
stos
jno
movsl
push
andl
pop
in
sub
popl
out
adc
pop
movsb
into
xchg
pop
pop
popa
lock
out
push
in
out
mov
lahf
jbe
into
push
addr16
push
cmpsb
jecxz
into
dec
aaa
into
imul
bnd
mov
push
adc
push
filds
sub
jg
jae
in
fidivrs
dec
adc
push
out
mov
jg
cld
sti
mov
aad
rcrl
leave
sub
movsl
cmp
hlt
sbb
hlt
sub
dec
jae
mov
xchg
aad
rcrb
mov
sub
stos
and
fsubr
stos
cmpsl
mov
out
enter
stc
lcall
mov
pop
lahf
clc
cli
daa
arpl
fcmovnbe
out
push
cmpsl
ss
xchg
sub
incb
sahf
daa
or
das
mov
repz
shrl
push
adc
xchg
push
or
push
shr
jg
cmp
add
stos
loope
and
fs
push
adc
sbb
lods
outsb
mov
jo
sahf
or
gs
imul
lods
aaa
mov
adc
shlb
add
push
cmpsb
out
lahf
ljmp
lret
sub
es
shlb
cld
sti
push
push
pop
inc
xor
mov
mov
dec
mov
push
add
cmc
mov
cmp
cpuid
or
test
loop
js
push
jae
mov
push
fst
push
sbb
xor
in
mov
push
pop
loopne
or
and
sub
testb
mov
or
fidivs
sbb
or
mov
sbb
inc
jle
imull
fcomps
pop
sub
loop
shl
pop
pusha
ljmp
leave
adc
push
popf
adc
sub
stc
scas
jl
mov
dec
test
pop
sbb
in
outsl
daa
sbb
adc
out
cmpl
add
push
les
loope
lds
cmp
sbbl
sbb
jne
adc
jno
sti
sbb
adc
pop
sbb
xchg
push
lods
data16
xchg
cmpsl
sub
jbe
jecxz
mov
mov
cwtl
leave
pop
rcl
icebp
mov
aad
pop
mov
adc
or
jge
aaa
sbb
add
ljmp
jb
adc
jo
ds
mov
pushl
out
jae
movsl
jp
sbb
push
jne
or
imul
xor
xchg
and
shl
and
cmc
gs
push
lock
mov
lahf
fmulp
xchg
call
andb
mov
inc
and
in
stos
or
sbb
notb
inc
adc
jnp
addr16
add
sbb
mov
ds
xorb
push
sbb
dec
and
insl
jb
std
sti
push
cwtl
outsb
fsubrl
inc
and
test
jle
rorl
rorb
out
mov
pop
inc
mov
iret
jae
lods
dec
xchg
jg
mov
inc
mov
adc
pop
and
add
sbb
leave
out
jge
sub
cwtl
fnstenv
push
fildll
jae
mov
data16
push
xchg
jae
cltd
stos
push
clc
add
jne
pop
int3
test
cmpl
push
out
cmp
xchg
sbb
dec
test
cmp
push
cmc
fstl
enter
in
cwtl
mov
jmp
mov
fdivr
addr16
cmp
shr
sub
cmp
pop
jne
xor
jb
mov
push
es
scas
scas
cmp
outsl
or
adc
hlt
icebp
inc
push
fidivrl
lods
adc
xchg
adc
mov
sbb
or
hlt
adc
negl
mov
dec
jle
dec
jb
mov
lods
push
cmpsb
fisubrl
stc
xor
repz
into
aaa
pop
cmpsb
hlt
in
cli
cmc
mov
jp
pop
pxor
out
mov
or
cmp
add
xchg
cmpsl
and
push
xchg
repz
andl
sbb
mov
pop
push
pop
imul
sub
fwait
add
pusha
jmp
and
dec
inc
jno
pop
ret
jmp
fstpt
in
dec
add
mov
jp
fdivl
arpl
jge
cmp
fcomps
push
and
out
ret
imul
stc
loop
arpl
push
dec
mov
push
lret
imul
xchg
push
sub
cwtl
jnp
adc
push
arpl
sbb
push
into
cmp
or
icebp
inc
std
adc
cmp
shr
imul
or
jmp
lretw
dec
inc
jl
push
dec
data16
xchg
lods
pop
lds
xlat
je
fidivs
in
mov
jmp
fld
dec
xchg
sbb
data16
sbbb
push
adc
push
std
stc
jnp
mov
cmp
pop
jecxz
imul
js
imul
sbb
jmp
insl
mov
popa
ficoml
int
cmp
int
push
aad
std
push
outsb
movsl
stos
push
and
repnz
xor
sahf
or
sub
andb
inc
jne
repnz
cmpsb
mov
add
fsts
bound
idivb
or
sub
fwait
xor
mov
or
std
repnz
jne
shlb
xchg
or
inc
sub
cwtl
dec
xchg
mov
adc
repz
pusha
push
cltd
movsl
ficoml
pop
mov
or
daa
mov
shlb
pop
and
into
sub
cmp
daa
lock
ja
mov
int3
jbe
popa
call
mov
lods
iret
jno
inc
mov
xchg
mov
pop
xor
test
and
pop
hlt
pushf
fidivl
mov
sub
mov
and
dec
ret
and
roll
add
and
mov
ret
push
and
icebp
fmull
jg
idivl
filds
mov
ret
mov
mov
mov
and
hlt
push
lods
fwait
mov
sahf
sbb
pop
xor
jne
pushf
xor
xchg
mov
cmp
pop
imul
mov
or
je
jp
or
lret
mov
ret
loopne
leave
push
cmp
adc
fs
std
dec
iret
ret
mov
lcall
dec
push
push
adc
jle
stos
xchg
xor
add
push
dec
movsl
dec
inc
jo
pop
in
cs
enter
adc
xchg
cmpsl
imul
in
sbb
pusha
adc
fsts
adc
sahf
stos
int3
pushf
xorb
fld
or
test
orb
int3
jp
fsubr
ljmp
sbb
shrl
jg
push
pushf
repz
mov
jae
sbb
and
xchg
lock
xor
fmuls
cmp
sbb
dec
aam
xor
clc
mov
lea
lcall
mov
inc
cmp
sub
mov
jnp
daa
jmp
clc
lahf
nop
sti
ja
out
loopne
xor
cmp
pushf
cmpsb
xor
lock
or
sub
mov
ret
out
es
sbb
and
jp
lahf
push
and
pop
xor
push
fadd
ja
push
fdivrl
in
push
jg
lret
and
adc
lock
sub
pop
addr16
insl
pop
pop
icebp
movsb
int
jae
rolb
jb
stc
stos
jmp
sub
push
and
sub
pushf
push
out
jno
xchg
xor
inc
loope
or
inc
sbb
popa
ret
or
xchg
sbb
gs
fidivrl
fdivrs
icebp
sbb
pop
movsl
rolb
and
stos
pop
mov
loope
aad
push
ret
popa
jg
xor
sahf
les
fbstp
es
xor
push
mov
icebp
sub
pop
inc
mov
in
out
mov
dec
je
cmp
scas
lret
mov
ficompl
lods
fists
inc
mov
cmp
mov
jmp
sarb
jle
ret
jns
add
cmp
imul
dec
push
mov
daa
popa
js
pop
ret
mov
aas
cmp
add
mov
outsb
jle
dec
lds
xchg
push
iret
push
scas
xchg
adc
add
sahf
int
scas
or
dec
pushl
xchg
aam
movsl
push
dec
movsb
sbb
dec
sub
int3
push
cmpsl
lcall
cwtl
and
and
test
cmpsb
dec
iret
loop
fcomi
push
mov
mov
rorl
sahf
xchg
mov
rolb
into
sub
adc
push
jnp
add
lods
mov
data16
jle
pop
fdiv
mov
lahf
stc
inc
mov
sbbl
sub
or
dec
push
jl
cmp
xor
repz
inc
addl
lcall
ret
pushl
xchg
cmp
mov
pop
mov
sub
cld
js
push
faddl
mov
xor
push
push
nop
push
adc
dec
xor
std
pushf
mov
push
cmp
in
xlat
notl
xchg
aas
mov
mov
scas
arpl
insl
mov
push
xchg
ja
add
cs
push
mov
jge
sub
pop
sar
inc
adc
cmpsl
and
xchg
cmp
stos
hlt
sarb
cs
loopne
dec
sub
inc
cmp
fcmovne
jmp
pop
lret
mov
sbbb
fidivl
push
xchg
repnz
test
pop
mov
lock
shll
inc
mov
loopne
cld
jne
popf
int
mov
mov
xchg
mov
stc
inc
out
fucom
lods
les
shlb
or
movsb
add
adc
in
loopne
and
shlb
pop
mov
gs
shlb
and
or
loop
into
pop
push
test
pop
xchg
push
xor
int3
stos
mov
fdivr
mov
mov
popf
xor
fsubrs
das
ljmp
sub
jp
cs
inc
loope
sbb
mov
xchg
popf
movsl
jp
mov
add
pop
lahf
or
xor
xchg
outsl
xor
dec
out
pop
mov
jp
test
dec
pop
mov
pop
jecxz
lods
dec
push
mov
push
inc
dec
in
push
test
nop
cmp
addb
sbb
incl
pop
jmp
jg
out
adc
arpl
int
jl
sbb
hlt
or
mov
movsl
sub
sbb
jmp
pop
dec
mov
push
mov
lcall
sub
inc
gs
pop
inc
out
jbe
shll
mov
iret
push
les
or
mov
mov
or
push
lods
mov
jmp
cmp
inc
fs
aam
sub
test
jne
cmp
and
pop
inc
xor
fistl
shrb
sbb
inc
dec
jno
stos
movsl
push
and
jmp
gs
leave
lods
sub
out
jne
jg
add
pop
int3
mov
xchg
adc
xchg
xchg
push
mov
push
cmp
sub
jl
pop
pop
popf
sub
dec
shlb
repnz
cmp
inc
je
addr16
add
mov
or
mov
sahf
hlt
insb
sbb
fwait
and
int
mov
dec
dec
lahf
sbb
sahf
mov
loope
daa
xor
cmp
ja
mov
call
xchg
xor
out
loop
xchg
and
xchg
dec
negl
cmp
sub
popf
sub
mov
pop
fimuls
outsl
inc
push
dec
sbb
and
into
fistpll
push
pop
add
das
aad
mov
mov
and
arpl
std
nop
or
pop
les
and
push
outsl
jbe
iret
cmp
inc
into
cmp
hlt
pop
test
loopne
es
rorb
into
mov
push
adc
pop
inc
movsl
mov
call
std
lret
test
jnp
pushf
xchg
pop
das
jo
pop
mov
mov
jno
xchg
scas
cmp
cmc
aad
or
clc
pop
out
or
lret
sahf
jg
ja
pushaw
cmp
inc
fstpt
int3
repz
mov
push
insb
mov
call
or
test
ss
dec
imul
sub
adc
or
jbe
inc
push
stos
sub
addr16
scas
and
lock
pop
jnp
adc
lahf
pop
or
nop
loop
fstpt
jp
out
fs
mov
daa
mov
add
mov
mov
insb
cmpsb
mov
pop
test
xchg
push
mov
aam
add
xchg
jmp
xchg
xor
mov
xchg
mov
dec
or
sub
out
fs
mov
popf
push
xchg
ss
popl
divl
pop
fucompp
out
pushf
std
enter
inc
cs
cmp
fdivp
insl
std
sub
sbb
sub
push
int
in
pop
sub
jb
stos
les
xchg
insl
mov
pop
lea
jo
cmp
cmc
xchg
aaa
orl
jge
ljmp
adc
sbb
aam
lock
mov
imul
int
jmp
pop
daa
fsubrs
sub
jmp
popf
js
mov
icebp
adc
pop
outsb
push
push
jp
jae
call
out
stos
add
jne
jae
or
stc
loopne
mov
sahf
xchg
lea
push
push
out
in
sub
cli
add
cs
adc
mov
fistps
mov
aas
xlat
push
mov
jg
cmp
fldt
cs
xor
sbb
xchg
or
sub
nop
into
cmc
das
das
movsb
pushf
stos
arpl
int
lret
mov
and
or
push
jae
stos
mov
inc
mov
dec
bound
jo
or
imul
adc
jb
sub
or
ljmp
cmp
aad
mov
mov
push
sbb
mov
jne
ja
orl
cld
imul
xchg
loopne
dec
sub
mov
xor
stc
leave
rorb
push
add
xchg
xchg
jb
fdivl
inc
mov
jmp
jmp
xchg
clc
xor
shl
ljmp
movsl
sbb
or
fisubrs
add
cmp
jbe
lret
inc
inc
adc
lods
xor
cmpb
pop
fmull
pushf
jle
scas
arpl
or
push
decb
xor
sub
jp
inc
fs
lea
decb
jp
mov
sub
lcall
lods
popl
loopne
stos
mov
jg
or
lcall
xchg
jmp
stos
insb
and
fwait
sar
out
dec
jp
dec
jo
scas
pop
adc
out
mov
loop
pop
adc
ljmp
xor
jl
sti
add
rorb
fwait
scas
mov
and
ljmp
sbb
pusha
test
or
mov
dec
jno
and
push
xchg
imul
in
jl
sub
hlt
fstps
xchg
clc
dec
scas
sub
push
add
aam
push
xor
ss
and
imul
inc
add
mov
jo
fistpll
test
jno
push
add
xlat
dec
jns
movsb
xor
ds
clc
ljmp
je
daa
mov
add
ds
pop
inc
popf
in
jl
jg
sti
daa
push
mov
inc
add
cld
inc
nop
cmpsl
rorl
jmp
shrl
push
out
mov
popa
enter
sbb
inc
jmp
jge
gs
addr16
bnd
lods
je
test
pop
test
int
jae
inc
cmpsl
push
pop
inc
xchg
jo
push
lahf
int
mov
push
out
mov
dec
sub
icebp
lods
in
outsl
lret
arpl
cld
push
sbb
push
bound
xchg
mulb
or
mov
cmp
and
aaa
insb
stos
xor
sbbl
fistpll
fs
push
inc
fnsave
mov
jl
sub
xor
sub
push
cmc
push
bound
mov
icebp
bound
cld
lcall
cmpsl
loopne
and
fs
hlt
dec
jmp
fmulp
mov
push
outsl
sbb
aaa
testb
cmp
mov
xchg
add
mov
mov
jge
ret
ret
ret
incl
icebp
xlat
das
inc
test
mov
stos
in
out
sub
jbe
xor
pop
out
imul
out
adc
sbb
gs
sahf
adc
daa
add
ljmp
test
outsb
out
ret
ss
mov
stos
push
jb
es
mov
movb
and
sub
inc
ret
inc
lods
mov
adc
pop
mov
and
test
es
add
xchg
pop
fstpl
shr
mov
cmp
cmp
repz
icebp
fwait
cmpsb
outsb
and
les
mov
loop
cld
movsb
xchg
inc
push
inc
or
xlat
cmpsl
push
inc
movl
loopne
daa
push
jae
testl
shlb
iret
ds
cmp
movsl
iret
sub
sub
fisubs
or
sar
xchg
dec
add
test
lods
ficomps
into
rclb
aaa
xchg
push
mov
imul
cmp
mov
sbb
sbb
js
xor
pop
sub
fs
mov
gs
roll
in
in
fs
mov
popf
xchg
rorl
imul
push
testl
pop
sbb
in
popa
outsl
sbb
inc
cmp
sbb
arpl
pop
push
hlt
push
aaa
imul
out
outsl
adc
pop
sub
enter
js
mov
out
pop
das
add
cs
xchg
fisttps
imull
pop
cmc
sbb
sbb
mov
and
cmp
dec
fildll
dec
dec
dec
mov
inc
popa
mov
and
fst
rcll
dec
pop
popf
cmpsb
jl
mov
call
lock
lea
add
xchg
in
cmp
in
add
adc
cmc
jbe
mov
inc
jno
sbb
popa
jb
shlb
stos
outsb
cld
insl
insl
es
arpl
insb
hlt
and
dec
loope
scas
sbbb
mov
sbb
into
fucom
xlat
popf
aad
fisubrl
cwtl
das
mov
adc
fnstenv
icebp
sub
xchg
arpl
stc
cli
push
daa
out
adc
push
cli
cwtl
mov
sbb
stos
sub
stos
sub
movsb
push
xchg
and
or
mov
jbe
jns
mov
sbb
vunpcklps
pusha
imul
movsl
hlt
lret
test
mov
lods
and
mov
mov
bound
xor
add
xchg
cmpsb
xor
or
out
xchg
jne
push
mov
xchg
sub
jecxz
mov
jbe
cmpsb
xchg
adc
stos
arpl
or
insl
in
mov
and
mov
out
mov
out
push
push
adc
mov
add
add
pushf
adcb
imul
aad
scas
lahf
mov
push
and
adc
or
mov
test
xchg
gs
movsl
jmp
xchg
push
into
mov
pop
mov
sbb
adc
sbb
bound
andb
jl
enter
mov
cmpsl
push
lock
in
sbb
pop
add
xor
sbb
aas
js
pushf
scas
mov
sbb
cwtl
out
out
and
and
loop
xor
scas
inc
push
test
negl
adc
jecxz
jge
sahf
jns
shlb
jle
arpl
arpl
jp
in
mov
stos
mov
clc
clc
add
fsubrp
addl
xchg
mov
sbb
dec
push
loopne
mov
push
ja
pop
xchg
outsl
stos
aas
lods
mov
sarb
cltd
fdivs
jae
sub
lea
adc
sbb
ret
mov
je
push
cmpsl
push
mov
or
pop
and
ret
in
das
push
shll
shll
xor
ja
push
repnz
movsl
xchg
or
pop
jp
out
inc
sbb
sub
xor
fidivrl
mov
rcl
xchg
out
lret
pusha
addr16
jmp
jae
mov
xchg
shrd
sub
xchg
test
push
aas
and
xchg
loop
les
mov
push
adc
fnstsw
inc
dec
nop
in
pop
push
sbb
xor
lahf
outsl
add
sub
ja
inc
dec
ja
push
inc
cmp
aaa
push
and
lret
fsubl
dec
pusha
jb
and
push
ljmp
xacquire
fsubrs
mov
sub
push
sub
mov
cmpsb
pop
jns
repnz
dec
in
jb
mov
and
cs
clc
movsl
in
cmp
add
push
jb
repnz
push
mov
rolb
jecxz
fcompl
cld
or
cmp
push
mov
leave
adc
iret
std
roll
add
dec
fisubrl
sbb
xchg
cmp
iret
sbb
jmp
cmp
int3
int3
mov
sbb
out
scas
and
xor
or
sbb
dec
rcll
or
sarl
dec
cmpsb
frstor
mov
pop
or
push
xchg
sub
sbb
push
push
sub
outsb
mov
aaa
aam
stos
leave
out
repnz
inc
ja
mov
leave
mov
scas
sbb
pop
out
push
jno
in
inc
add
mov
arpl
in
test
fistpll
push
mov
cmp
outsb
sti
and
cmpsb
js
jge
call
into
in
enter
stc
mov
mov
iret
dec
pushf
jle
out
jge
bound
mov
pop
mov
pop
ljmp
sub
clc
addr16
cltd
push
xor
icebp
mov
nop
test
outsb
out
adc
jbe
jmp
mul
cld
sub
push
inc
or
adc
rorb
scas
test
imul
sub
push
or
lahf
sub
test
xchg
mov
movsb
mov
lods
adc
sbb
or
lahf
add
repz
pop
inc
xchg
jne
pushf
test
and
and
test
sbb
cmc
in
and
jns
sub
aas
leave
dec
lods
sub
cmp
push
rcr
ja
or
xchg
sbb
rorl
mov
sub
and
jbe
push
sahf
inc
lea
xchg
push
add
jne,pn
mov
and
imul
fcoml
xchg
add
push
scas
ss
and
ficomps
push
aam
inc
repz
sbb
aad
xor
sub
out
lods
nop
inc
adc
xchg
push
dec
fsubr
push
int3
mov
call
int
push
jle
mov
inc
sub
clc
sbb
ffree
jmp
add
loopne
in
jmp
pop
rcll
pop
lret
xor
xchg
out
imul
rcll
loopne
rcrb
dec
jle
lock
shll
dec
pop
sub
inc
push
add
jbe
lods
add
push
ret
inc
jae
push
out
gs
into
adc
notb
lcall
jnp
xchg
mov
add
popa
out
in
cs
mov
sub
lods
je
clc
push
cli
mov
aam
enter
test
pop
popa
mov
lret
xor
sar
cmp
cmp
jmp
fcmovnb
ret
jl
jo
pop
sbb
rcrb
push
test
call
out
dec
mov
call
xchg
mov
pop
rcr
jle
cmp
adc
mov
mov
in
les
lret
mov
js
sahf
push
xchg
xor
loopne
lret
sti
pusha
pop
jl
cwtl
sub
xchg
push
adcl
sub
xor
jns
push
lret
jmp
fstps
jp
xchg
shrl
mov
rcrl
fs
clc
sti
jmp
inc
mov
and
inc
insl
xlat
cmpsb
push
jmp
les
lahf
add
inc
fmull
jnp
adc
pushf
pop
scas
mov
insl
mov
clc
dec
into
mov
repnz
mov
or
sbb
int3
dec
mov
sbb
movsb
hlt
daa
aad
rorl
jns
or
dec
popf
dec
orl
or
mov
fucomip
adc
fwait
in
cmpl
sbb
cltd
ret
pop
mov
mov
sub
dec
pop
xchg
cwtl
es
in
cmpsb
push
add
mov
ljmp
and
xor
scas
mov
jae
jle
aam
aaa
inc
outsb
xchg
cmp
gs
cmp
pop
es
out
xor
cltd
shlb
push
mov
cmpsb
outsb
mov
arpl
sub
and
dec
flds
xchg
lahf
sbb
jbe
cmp
jg
pop
and
jnp
inc
popf
or
mov
xor
out
aas
adc
add
push
fwait
inc
repnz
in
inc
push
jne
lods
ret
clc
xor
jb
jns
stc
call
jb
xchg
and
scas
jecxz
mov
imul
fwait
cltd
inc
xlat
test
jne
push
fs
mov
xor
or
sarl
das
shll
fldcw
pop
xor
and
in
repnz
dec
aaa
scas
cs
ljmp
sar
insl
stos
xlat
orb
fldcw
jae
data16
jae
adc
mov
lret
and
sub
incl
testb
cmp
inc
rorb
and
icebp
mov
add
das
in
test
stc
lock
and
dec
sahf
in
loopne
or
ljmp
pusha
push
nop
test
push
fscale
cs
push
mov
cmpsl
dec
and
mov
mov
inc
push
repnz
fs
int
cltd
sub
inc
loopne
or
clc
add
sbb
rol
out
jne
fdiv
fnstsw
mov
cltd
sbb
inc
xchg
inc
mov
hlt
mov
dec
cmc
push
or
stos
int3
scas
pop
pop
xor
or
and
and
inc
inc
or
pop
inc
in
insl
popf
jb
or
cwtl
dec
jge
xor
fwait
stc
mov
pop
inc
dec
imul
push
xchg
fisubrs
bound
fldcw
adcb
inc
cmpsb
inc
int
stos
call
mov
cwtl
lods
repz
aam
xchg
dec
mov
sub
jmp
outsl
adc
movsl
outsl
xor
sti
jmp
sbb
addr16
loope
test
bnd
scas
mov
or
ljmp
stos
in
ret
ljmp
adc
cmpsb
add
xchg
lret
aaa
sub
push
outsl
pop
mov
jp
sbb
push
lea
jno
loope
fwait
push
push
stc
sbb
and
inc
test
inc
outsb
jl
sbb
scas
inc
cmp
test
dec
idiv
and
jnp
or
arpl
sbb
mov
mov
pop
orl
add
pop
and
das
es
test
inc
outsl
ja,pn
inc
xor
lods
nop
leave
mov
popl
or
jb
jg
pop
ficompl
xor
cli
popa
jno
in
aas
std
insb
movsl
cwtl
into
xor
popf
leave
std
test
mov
sbb
jecxz
repnz
pusha
jge
enter
add
cmpb
or
js
xor
js
inc
mov
es
bound
xchg
push
repz
and
je
popa
ret
add
fsub
jo
or
cmp
loope
out
dec
or
jno
andb
sub
leave
aad
inc
add
adc
mov
xchg
lods
add
sbb
mov
repnz
mov
int
lock
adc
andl
mov
xchg
roll
cli
not
and
cmp
mov
repz
pop
lcall
arpl
lods
bnd
jnp
pop
mov
pop
pop
xlat
scas
fcomip
arpl
mov
mov
mov
sub
inc
or
lods
push
testb
jp
adc
sbb
push
repz
cmc
loopne
daa
mov
stos
loopne
mov
pop
jns
adc
adc
sub
xor
in
int
movsl
jge
lahf
iret
dec
push
push
pop
jecxz
inc
dec
leave
out
stc
mov
xor
mov
nop
fiaddl
clc
call
fninit
jns
adc
cmp
sti
subl
cs
ss
repnz
call
and
mov
pop
dec
sahf
jecxz
mov
cmp
pushf
jae
sub
add
push
scas
sar
inc
test
ret
neg
jno
lods
cmpsb
addl
mov
jb
in
test
lret
jb
cmpl
inc
outsb
jb
xor
call
pop
ficomps
fs
mov
jbe
pop
xlat
push
cltd
or
push
ret
in
mov
shl
cmp
stc
fisttpll
cld
or
std
add
aas
xchg
mov
outsb
lahf
push
adc
jo
mov
nop
fnsave
cmp
jecxz
adc
leave
xor
mov
inc
or
stos
pusha
lahf
inc
or
rclb
lahf
xchg
push
std
dec
sbb
push
test
jge
xchg
es
mov
outsb
mov
jl
mov
sbbl
in
shl
jae
mov
and
out
or
mov
and
pop
mov
or
pop
es
pop
movsb
jle
fcomps
out
push
xor
jnp
add
std
out
pop
sbb
enter
push
jge
js
es
loope
add
sub
loop
out
inc
fistpl
in
and
test
idiv
icebp
ljmp
push
push
leave
xchg
out
ds
push
mov
repz
into
and
pusha
cmp
pop
lods
add
mov
lret
xchg
sti
xor
sahf
sub
sub
adc
fstl
push
pop
cmpsl
mov
ljmp
and
shll
mov
inc
cs
sbb
add
xor
stc
dec
push
mov
and
cmp
pusha
add
cmp
pop
xor
call
in
sbb
mov
insb
shlb
ret
std
pop
insb
dec
xchg
pop
or
xor
fdivrl
jns
sub
imul
sahf
xor
es
jle
out
test
popa
scas
inc
add
ret
sub
ds
sub
ficoms
and
pop
adc
cli
mov
sbb
dec
and
mov
pop
call
dec
mov
sub
loop
das
lock
sub
dec
jge
out
or
fs
jo
fsts
sub
mov
push
aaa
and
ds
push
lret
jnp
inc
or
jmp
add
fninit
mov
jp
sbb
subl
mov
adc
mov
xor
mov
out
pop
xchg
sahf
int3
dec
push
mov
loop
je
add
ror
and
loop
inc
je
addr16
xchg
xchg
ds
js
jae
mov
xchg
rorl
jnp
mov
insl
push
pusha
in
stc
ja
daa
lcall
or
add
bound
je
or
push
dec
pushf
lahf
loope
add
sbb
movl
sbb
or
mov
ja
inc
cltd
pushf
sub
cmp
shll
cmc
push
repz
push
or
or
inc
jne
xor
mov
pop
push
sbb
mov
sbb
lahf
stc
fcmove
sub
inc
and
fmull
dec
adc
inc
push
jnp
scas
pushf
stos
jmp
inc
pop
pop
mov
in
xchg
aas
adcb
mov
push
into
fs
cmp
aas
push
stc
pop
or
paddusw
xlat
add
shlb
sbb
xor
sbb
js
js
es
mov
movsl
fbld
push
test
mov
mov
fidivrs
mov
rclb
sahf
scas
das
cld
fistl
and
pushl
mov
rcrl
fcoms
ret
adc
cli
sub
inc
push
bound
add
push
jmp
xchg
rcr
cmp
jae
repz
faddl
xchg
push
leave
ret
fld
xchg
jbe
adc
lds
adc
xlat
gs
push
inc
cmc
int3
xchg
outsb
push
xchg
or
out
pop
std
jo
bnd
pop
in
xorl
lds
sahf
xor
jo
pop
scas
std
push
cs
add
lock
outsb
std
popa
and
pop
mov
xor
stos
test
push
jle
pop
inc
fcompl
mov
insb
mov
push
sbb
repnz
cmp
adc
sbb
inc
loope
xorl
add
mov
stc
pusha
fmuls
mov
push
in
sub
sbb
xchg
mov
aad
sub
and
das
add
mov
dec
sbb
nop
into
subb
out
and
std
daa
mov
jbe
cmc
inc
jns
pop
jl
mov
xor
xor
mov
ret
lods
divb
xor
call
sub
jl
mov
adcb
cmpsl
incb
out
rclb
mov
imul
dec
jns
je
add
and
bound
mov
fs
in
and
push
repz
add
test
xorl
cmp
mov
or
mov
and
mov
pop
pushf
jnp
adc
sbb
add
sbb
mov
push
mov
dec
pop
jmp
loopne
push
add
pushf
jg
js
sub
inc
sbb
dec
and
scas
ja
arpl
cwtl
jg
push
xchg
pop
sbb
and
out
shr
pop
mov
into
imul
lret
jmp
repz
xchg
add
add
sti
fptan
jae
jb
sub
stos
cld
clc
mov
out
out
daa
or
jl
sbb
adc
ror
fstpl
xchg
movsl
daa
add
es
enter
ss
cmp
int
push
dec
movsl
jnp,pn
adc
mov
mov
sub
lock
or
repnz
or
jmp
xor
mov
mov
mov
cmpsb
dec
addr16
adc
push
cwtl
stc
cmp
sbb
fidivrs
jg
clc
jno
test
fwait
dec
out
fstl
dec
jle
fadds
addb
mov
push
mov
dec
sbb
lods
pop
sti
out
cmp
out
xchg
add
push
int3
pop
shr
clc
pusha
jecxz
push
andb
jae
addr16
sti
and
push
adc
ja
sub
out
or
push
jbe
jno
xor
mov
pop
and
insb
scas
inc
lcall
push
or
insb
sahf
outsb
ss
jns
pusha
sub
stos
push
mov
mov
imul
pop
adc
negl
inc
mov
mov
nop
add
gs
in
mov
sti
sbb
dec
pop
jge
adc
fnstcw
mov
ds
lock
mov
enter
pop
xor
add
fstl
sbb
mov
jns
jmp
and
test
idivb
jp
inc
xor
rcrb
insl
pop
xor
pusha
call
cs
push
imul
push
imul
lock
jb
je
mov
dec
out
out
jns
ret
test
cmc
gs
or
cmp
mov
lret
jp
push
jg
xor
ret
sbb
cli
sbbb
jmp
dec
sub
sbb
and
movsl
mov
pop
cmc
ret
out
in
fwait
aam
les
jb
sti
scas
mov
loop
sub
or
insb
loop
and
dec
jae
into
mov
int3
push
ljmp
adc
flds
xorl
push
sti
loopne
add
in
cmp
pop
inc
nopl
cmpsl
insl
sbb
or
addl
sbb
ficoml
rcl
gs
fldcw
cmp
cmc
mov
xchg
xor
xchg
mov
in
lds
mov
mov
repz
and
jecxz
iret
addl
jo
pop
dec
xor
mov
adc
adc
sbb
xchg
scas
lahf
or
pop
mov
js
mov
es
sub
rorb
sti
and
decl
ss
lret
lods
int3
out
xchg
and
xchg
jecxz
sahf
idivb
call
lods
je
xchg
push
imul
pop
shll
sbb
movsb
outsl
std
lret
popf
fldt
jle
pushf
inc
jecxz
rol
inc
pop
adc
ds
js
sbbb
icebp
push
test
mov
mov
es
adc
cmp
xor
imul
shrl
mov
fwait
sbb
adc
mov
in
jo
lahf
js
std
or
sbb
jbe
mov
ret
xchg
cmpsb
add
and
dec
pop
fists
or
cli
jp
push
mov
adcb
lock
cmp
push
lds
aam
dec
pop
cmpsb
xchg
mov
ret
xchg
ljmp
testb
jecxz
or
mov
rolb
mov
dec
inc
pushf
jp
pop
pushf
popa
leave
lahf
sub
mov
mov
ret
loope
idivb
xor
cmp
int3
jb
ss
pop
push
lea
sti
aas
daa
mov
jne
pop
cmc
cmpsb
push
ret
fldl
orb
pop
pop
test
int3
gs
lds
fcmovnb
aaa
sbb
jle
in
ret
scas
stos
xchg
clc
es
pushf
flds
je
into
test
std
hlt
dec
sub
repnz
sub
xorps
test
cli
dec
repz
mov
gs
ret
jbe
sti
push
inc
and
insl
loope
loopne
inc
insl
mov
aam
push
or
mov
hlt
lret
jge
sti
shl
push
cmp
pushf
adc
jne
cmpl
mov
pusha
jnp
jbe
movsb
sub
jle
dec
xor
xlat
push
xor
call
cwtl
rolb
xchg
jge
pop
shrl
inc
xlat
pushf
aaa
clc
mov
out
jge
out
and
js
scas
pop
andl
gs
xchg
push
mov
in
adc
sbb
push
ret
push
test
xlat
pushf
add
and
jecxz
pushf
push
adc
dec
dec
shll
xor
cmp
xlat
cs
xchg
sbb
sub
punpcklwd
mov
jae
inc
out
sar
dec
ds
and
cmpsb
xchg
jno
cs
shrl
pcmpgtd
add
rcrb
jne
jb
xchg
ret
scas
sub
pop
outsl
jbe
movsl
or
mov
push
sbb
sbb
fdivp
sbb
mov
inc
hlt
imul
in
out
sub
push
imul
nop
xor
and
imul
and
push
xchg
add
mov
lahf
or
dec
mov
or
dec
adc
mov
out
or
mov
imul
dec
addr16
movsb
add
xchg
jns
pop
daa
clc
inc
outsb
and
fnstenv
mov
add
mov
cmp
jno
jnp
inc
aad
mov
test
and
cmp
aaa
mov
push
repz
cmp
je
mov
test
add
dec
subl
cmc
xchg
lock
in
mov
and
push
or
cmp
into
push
inc
cmp
insl
dec
out
pop
push
jp
pushf
ficoml
push
shlb
shll
and
mov
jae
daa
adcl
shl
sub
sub
es
push
dec
jp
lcall
add
mov
cmp
es
das
mov
cmp
pop
lea
inc
sarl
fs
loopne
fistpll
mov
pushf
pop
mov
xlat
or
dec
xor
ljmp
jb
out
dec
add
cmpsl
lret
push
int3
hlt
add
test
xchg
pop
cmp
push
in
leave
mov
mov
fs
adc
xchg
jb
mov
hlt
flds
pop
adc
or
jne
addr16
pop
gs
push
xor
test
jp
xor
xorb
jo
xlat
sar
add
add
lods
and
and
ret
scas
fistpl
and
jb
mov
mov
into
pop
daa
and
xchg
insb
jbe
repnz
mov
rcrb
pusha
out
int3
shl
pop
insb
inc
dec
jnp
mov
movsl
push
scas
je
scas
pop
dec
rcrb
mov
iret
sub
add
jle
hlt
cmp
in
and
orl
mov
jnp
scas
sub
out
aas
jmp
mov
insl
mov
leave
jmp
and
push
divl
mov
jns
xor
in
es
jg
insb
push
insl
in
sahf
mov
add
mov
inc
and
int3
les
mov
mov
mov
nop
stos
and
lcall
pop
cwtl
or
jmp
rcrl
jae
push
sub
int3
aas
jmp
aas
lods
add
push
cmc
fdivrs
xchg
push
pop
sub
mov
push
and
fildl
into
repz
ja
xchg
pop
xchg
push
popa
push
out
test
mov
in
test
push
mov
addr16
inc
dec
mov
mov
fwait
hlt
cltd
jle
cmp
dec
sbb
jecxz
nop
push
lea
fsubrl
lods
scas
icebp
ffreep
cmp
mov
dec
jmp
add
call
sbb
shlb
push
push
sbb
lea
ss
ljmp
push
add
scas
mov
push
push
cmp
je
scas
jmp
add
into
jns
mov
and
push
pop
and
loop
jg
loope
adc
data16
adcb
pop
add
les
pop
sbb
inc
ret
xchg
imul
add
pushf
mov
cwtl
call
xor
adc
push
jmp
and
push
loope
mov
das
aas
clc
mov
xchg
ja
movsb
jge
jne
mov
mov
scas
ljmp
mov
cltd
push
jns
shl
fstl
je
int
scas
sbb
iret
cltd
pop
mov
mov
xor
hlt
movsb
mov
cli
dec
stos
mov
cmp
or
out
mov
mov
jb
mov
push
mov
cmp
sub
ret
xchg
in
jae
sub
insl
in
and
push
js
mov
dec
jmp
adc
cmpsl
nop
dec
sbb
mov
outsb
int3
mov
mov
adc
mov
scas
ret
arpl
mov
adc
inc
stc
in
sti
push
dec
loope
xor
fidivrs
jl
xor
stos
in
leave
jo
cltd
bound
movsl
push
or
scas
movsl
cmpsb
stc
fdivrl
inc
nop
adc
sbb
lcall
xchg
mov
jp
lods
mov
nop
dec
jecxz
lods
inc
mov
jp
rcrl
lea
je
ret
xchg
outsb
cmp
inc
sbb
mov
sbb
mov
mov
push
sub
mov
adc
out
popf
lea
scas
loope
sub
inc
or
jb
xchg
mov
mov
and
mov
idivb
hlt
out
in
movsb
sti
je
jecxz
mov
jb
aas
stos
sbb
adc
ret
xchg
xor
movsl
nop
imul
push
dec
dec
and
mov
push
dec
and
es
ffreep
inc
sbb
out
sar
inc
les
push
jp
cmp
adc
sub
in
xor
shlb
hlt
ret
data16
pop
in
sbb
pop
inc
ds
inc
inc
popf
jp
add
push
sti
enter
dec
xor
jo
test
or
xchg
push
cmpb
xchg
lahf
loop
pop
into
andb
and
xchg
out
hlt
out
fimull
push
sahf
aaa
cmp
fstp
fs
cld
test
inc
lea
ficomps
jmp
aas
add
cmpsb
sbb
imul
mov
pushf
shlb
jbe
movsb
lret
outsb
xchg
iret
icebp
add
cli
pop
inc
fildll
jne
push
sub
pop
xor
add
mov
xor
loopne
js
jmp
pop
test
test
aad
inc
popa
or
sbb
sub
movzwl
mov
sti
bndldx
or
lock
repnz
jbe
jmp
jno
pop
icebp
ret
mov
jae
xlat
in
ss
cli
mov
pop
ror
push
jbe
je
outsb
scas
testb
and
pop
dec
xchg
push
sub
mov
cld
ss
dec
pop
and
jns
out
aad
loope
dec
mov
jle
mull
sub
mov
xchg
loopne
aad
ret
shll
mov
fwait
push
jmp
sub
lods
and
push
mov
shlb
push
rcrl
sti
mov
lock
shrb
scas
xchg
mov
push
pop
xchg
inc
sbb
mov
mov
int3
aas
jl
jne
pop
jnp
sub
cmp
sar
notb
jp
pop
aad
add
or
ljmp
call
lods
adcb
cmp
mov
insl
ljmp
xchg
dec
push
aad
cmc
sbb
mov
jnp
lods
ret
fisttps
xchg
xor
ds
xor
out
and
lret
mov
shlb
addr16
movsb
pusha
push
lods
ret
les
and
jl
pop
jne
mov
sbb
pop
repz
inc
ret
add
addr16
sbb
xchg
dec
inc
into
aam
iret
xchg
mov
ficomps
cmp
icebp
inc
push
sbb
xlat
out
sbb
push
pushl
mov
scas
pop
push
and
and
rorl
or
xchg
inc
mov
fs
sub
adc
std
cltd
mov
fsubrs
hlt
inc
xor
mov
mov
jo
jge
addr16
les
ret
mov
mov
and
in
loopne
xor
or
popa
out
add
jae
sbb
jmp
into
sbb
mov
push
sub
push
push
push
adc
sahf
repz
rolb
stos
je
cmp
stc
adc
adc
add
add
add
jl
inc
inc
scas
pop
popf
xchg
sbb
and
mov
sbb
jo
fsubl
push
adc
mov
jl
mov
jg
mov
stos
mov
jb
cmp
xor
push
sti
mov
lahf
sbb
rclb
xchg
rcrb
js
pop
jo
bound
xor
cmc
sbb
loopne
or
jns
test
test
and
and
ja
cmp
pop
in
cmp
add
push
nop
jg
push
subb
pop
mov
adc
mov
xchg
pusha
movsb
cmc
fcompl
rcr
add
xchg
mov
pop
push
dec
pop
aam
mov
fists
out
ret
arpl
movsl
jae
in
adc
lret
pushf
push
aam
cmp
aad
enter
fadd
mov
cld
mov
imul
sbb
aam
imul
push
adc
sahf
lcall
inc
dec
ret
sahf
sahf
test
xor
js
jl
cmp
add
shll
cmpsl
inc
adc
or
leave
clc
sub
adc
mov
adc
mov
test
xchg
and
dec
add
mov
mov
sub
cwtl
out
mov
xchg
jbe
adcl
ficompl
xlat
repnz
fstl
notb
shlb
lahf
mov
mov
cli
mov
out
std
jno
mov
pop
sbb
xorl
clc
iret
jge
push
dec
mov
xchg
sti
fs
pop
ret
inc
test
dec
stos
xorl
add
mov
mov
xchg
leave
outsl
mov
out
call
gs
out
adc
sub
or
dec
add
fsub
adc
repnz
fsubs
outsb
lea
mov
push
fisubrs
xor
push
popa
test
xchg
sbb
or
addb
enter
popa
jge
or
ret
mov
or
sub
push
mov
sub
and
loopne
sub
lret
mov
gs
cmpsb
mov
jg
cmp
fdivrs
arpl
mov
and
out
inc
ret
adc
push
sub
and
pop
loopne
out
mov
stos
push
shl
movsl
sub
inc
je
loop
mov
andl
lds
mov
add
ficoms
jmp
lock
mov
jb
mov
push
sub
repnz
add
data16
into
cmpsl
in
dec
shl
stos
imul
xchg
out
aad
cwtl
je
imul
fwait
sbb
pop
hlt
inc
xor
je
aas
push
mov
mov
add
sti
pop
and
pop
sarb
and
push
test
add
inc
push
clc
test
jno
data16
pushf
cwtl
lcall
sarl
pushf
and
push
or
cmp
inc
and
imul
fldt
test
mov
xor
into
cltd
xchg
mov
data16
fmuls
jge
aad
leave
imul
pop
jecxz
cmp
fidivs
add
adc
test
imul
test
xorb
push
sub
sub
lret
or
mov
mov
jle
adcl
aaa
lcall
jbe
hlt
faddl
push
call
or
test
add
push
scas
push
sub
mov
insl
cmpsb
fbstp
sub
imul
int3
dec
xor
sub
dec
es
daa
mov
es
add
stc
mov
inc
sbb
jae
roll
aam
out
aad
mov
shlb
push
mov
xchg
jge
mov
jae
ss
stos
imul
popa
mov
mov
jne
stos
sbb
filds
das
mov
xor
loop
ss
inc
stos
dec
sbb
mov
inc
inc
sbb
popf
or
fadds
ds
das
loopne
dec
rcll
je
lcall
pop
andb
in
mov
push
jae
xchg
sub
push
lahf
cmp
push
test
and
in
dec
out
jmp
in
mov
and
or
repz
cltd
imul
pop
movsb
xchg
mov
sbb
push
or
sbb
inc
inc
inc
loopne
out
mov
xchg
mulb
pop
les
stc
iret
lret
push
addr16
subl
repnz
into
mov
fs
mov
mov
jg
jmp
add
dec
das
sbb
out
notl
mov
inc
push
and
ret
or
lods
fdivrl
xchg
ret
xlat
test
xchg
or
enter
outsb
sbb
xor
cmc
cld
ds
ljmp
push
insb
bound
and
pop
hlt
out
sub
inc
clc
or
mov
out
xor
js
stos
pop
ljmp
daa
lods
or
scas
mov
scas
sbb
scas
daa
loop
mov
jo
repnz
les
push
inc
xchg
cmpsl
jge
pop
jge
fdivl
daa
mov
daa
icebp
test
push
pop
loope,pn
mov
xor
pop
jo
js
add
dec
fldcw
add
aaa
jae
dec
push
fxch
ret
add
jmp
sbb
lcall
mov
aam
or
push
dec
xor
test
and
inc
adc
loopne
xchg
pusha
lahf
mov
loop
les
mov
mov
int
mov
pushf
pop
jmp
mov
inc
mov
in
imul
jne
aaa
jbe
test
lods
jae
mov
test
adc
jae
scas
xchg
rcll
xor
sahf
cwtl
das
mov
inc
mov
dec
daa
div
dec
aaa
or
mov
enter
imulb
lock
jo
xor
add
clc
jns
sub
jb
mov
stc
mov
mov
dec
sbb
jg
repz
test
adc
sti
pop
insb
cmp
mov
sbb
stc
jmp
dec
lahf
fstl
repz
push
pop
push
rcrl
shrl
outsb
dec
or
sti
repz
popa
outsl
in
and
mov
add
in
ret
rolb
mov
dec
in
lods
mov
mov
sbb
icebp
fdivs
dec
aam
lea
test
imul
mov
sub
subl
push
pop
sbb
in
testl
mov
add
aad
orb
inc
int
xchg
add
cmp
jl
inc
pusha
hlt
cmp
mov
rolb
mov
xchg
xchg
push
sahf
push
inc
xchg
mov
pop
cmp
loopne
pushl
xchg
dec
jne
mov
cmc
xchg
cmc
fldcw
mov
sub
pop
push
insb
jecxz
movsb
sbb
test
out
out
sbb
sub
jmp
push
fcomps
adc
in
xchg
lods
add
mov
or
sub
jmp
in
dec
xchg
movsl
rcll
shr
arpl
mov
push
ret
scas
js
xchg
push
add
bound
xchg
aam
or
aam
jl
inc
and
inc
sbb
mov
mov
push
icebp
sbb
lret
add
outsb
jmp
xchg
mov
or
or
ja
jg
in
in
in
jge
out
popf
inc
add
mov
sub
js
out
ds
adc
jnp
xor
sub
lcall
mov
shll
mov
xchg
out
jmp
xlat
xor
xchg
dec
push
sti
mov
aam
inc
cmpsl
repz
inc
fisubl
testb
or
xor
fdivrs
call
push
sub
add
jmp
push
jno
and
cwtl
in
inc
fldl
jnp
outsl
call
xchg
jl
jmp
add
jne
imul
sub
add
push
sahf
fnstcw
pushf
push
fstl
sub
outsb
dec
push
stc
mov
enter
iret
notb
dec
movsl
das
aaa
in
in
or
cmpsb
and
stc
sahf
dec
mov
sbb
ja
add
cwtl
mov
sub
lea
fnstenv
loopne
fisubs
dec
push
mov
xchg
fldt
ja
mov
in
rcrb
int
incb
mov
cs
int3
in
sub
pop
and
test
cmc
test
fcmovnb
mov
ret
sahf
das
fwait
sbb
jl
sub
leave
das
mov
popa
inc
cltd
mov
lcall
inc
dec
shrb
pop
jno
xchg
push
shll
shl
mov
fdivrs
mov
jmp
dec
lock
jle
mov
mov
lret
lock
push
insl
or
mov
xor
ss
fnstenv
orl
fwait
in
fstl
insb
jle
mov
or
mov
push
xor
xchg
ret
mov
inc
lock
push
jle
dec
pshufw
jne
push
sarb
cmc
adc
ret
inc
and
cmpsb
jmp
sbb
pushf
gs
lea
fidivrs
xchg
in
inc
mov
cmp
clc
or
daa
es
and
in
fstp
xchg
pop
push
inc
pop
ja
int
jecxz
sub
cld
sahf
lahf
movsl
jge
inc
adc
mov
cmp
mov
inc
call
les
outsl
fwait
pop
repnz
lret
fistl
adc
fimull
cmpsb
scas
lock
popf
jmp
bnd
ja
xor
xlat
repnz
das
addr16
adc
icebp
lods
push
cmp
fcoml
push
xchg
stos
adc
cmp
loope
lds
mov
jb
inc
cwtl
out
paddusw
xchg
in
jg
inc
lahf
insl
inc
jmp
dec
add
ret
xlat
mov
mov
inc
data16
mov
adc
negb
ret
ret
insl
lock
mov
popa
arpl
fstpl
sti
jecxz
call
xchg
inc
lret
sub
adc
out
inc
fwait
xchg
repz
xor
or
push
scas
aam
mov
enter
mov
es
insb
push
lret
jbe
push
fcompp
mov
stos
sub
bswap
inc
cmp
cmpsb
dec
clc
repnz
pop
aam
push
xchg
xchg
test
popf
sub
xor
je
pusha
out
out
cmp
jnp
or
mov
ret
frstor
insb
fldenv
pusha
pop
and
jge
dec
aam
mul
js
mov
xchg
cmp
in
pop
jb
fwait
mov
into
xor
add
mov
sahf
addr16
out
jmp
sbb
into
sub
int3
out
or
inc
dec
aam
adc
mov
xchg
in
cwtl
add
inc
pushf
mov
bound
in
jne
inc
cmp
mov
stos
inc
pop
lock
push
stc
sbb
jne
pop
mov
inc
pushf
cmp
jmp
xchg
sub
cmpsl
addb
inc
dec
xchg
in
sub
add
or
xchg
ffree
enter
rclb
les
dec
mov
mov
filds
xchg
mov
pop
sub
add
stc
push
cmp
mov
inc
repz
int
test
xchg
dec
jp
xchg
jmp
xor
aam
mov
fwait
aam
and
test
lea
lods
inc
jb
bound
or
jnp
jg
ss
mov
jmp
outsl
cmc
push
mov
jbe
ss
fdivl
bound
test
aad
or
aad
xor
sti
inc
xchg
sarb
test
gs
push
aad
ja
shlb
out
ss
ss
repnz
xchg
out
inc
cmp
or
pop
es
pop
int
jge
and
adc
mov
sbb
inc
insl
in
dec
jge
lahf
lret
push
int
lds
xchg
mov
and
jp
repz
loope
inc
cmpsb
mov
and
and
jmp
call
add
movsl
fldcw
cmpl
xchg
jno
es
mov
push
inc
lahf
faddl
das
neg
hlt
and
pushf
sbb
mov
and
cmp
push
push
or
rorb
jge
inc
xchg
lock
ficoml
dec
xchg
mov
mov
push
aaa
adc
pop
mov
jmp
jge
mulb
std
je
adc
js
out
cli
dec
xor
xor
mov
pop
pop
sub
inc
ljmp
or
out
cmp
pop
gs
jmp
xor
mov
mov
out
jno
push
mov
dec
fcoml
pop
clc
sti
cmc
lret
mov
cs
cmp
mov
clc
jns
add
jno
fisubl
or
testl
dec
mov
test
fldenv
adc
shll
iret
mov
xchg
mov
push
xor
lea
pop
adc
nop
pop
xchg
stc
lods
fldenv
add
mov
push
test
mov
scas
dec
jl
mov
cmpsl
fnstcw
cmc
addl
aam
mov
cmp
int
test
es
popf
fdivr
cwtl
loopne
fcmovb
xchg
cmp
pop
jge
cmc
and
pop
push
lret
scas
or
mov
aaa
rcl
or
movsl
subb
dec
outsb
das
xor
push
or
mov
push
movsl
jp
js
shrl
xor
xchg
xchg
mov
inc
mov
xchg
lea
insb
lret
fdivrs
fidivs
mov
jae
adc
jg
push
in
sar
ss
test
mov
and
cmp
jg
popf
or
push
and
bound
sub
push
push
xchg
hlt
sbb
out
xchg
xor
daa
mov
inc
lret
sbb
lds
cmp
push
imul
push
movsl
xchg
xchg
xor
sub
cmpsb
addr16
clc
cmp
repnz
mov
repz
mov
add
clc
fwait
jb
iret
mov
sub
mov
add
lcall
in
rcll
sbb
xchg
std
testl
or
pop
push
inc
dec
insl
stc
movsb
ret
xor
sbb
popf
outsl
and
cmp
sub
push
es
lock
mov
lock
xor
test
clc
mov
or
pusha
cmpl
jmp
fldt
neg
scas
cwtl
fcmovbe
int3
push
fldenv
cmp
test
jns
cmp
adc
mov
leave
pushf
aam
or
sbb
out
das
out
stos
shrb
imul
imul
push
sub
outsb
sub
into
rolb
jge
sub
jbe
pop
call
pop
add
mov
mov
iret
insb
insb
mov
adc
ja
jecxz
push
sub
dec
jp
fwait
dec
scas
int3
cmp
scas
sub
push
sar
imul
dec
div
imul
cmc
mov
mov
je
and
lods
lret
cmpsb
cli
jnp
int3
push
and
lahf
jecxz
ja
mov
jle
or
mov
xchg
sub
cli
cmp
test
stos
insl
inc
inc
mov
shl
mov
in
jl
fldt
sbb
repnz
pop
mov
adc
jne
dec
or
loopne
dec
fdivrs
add
pop
push
ret
inc
mov
mov
out
orl
loop
push
cmp
pop
dec
pop
sub
add
cld
inc
cmp
xlat
mov
sti
mov
cmp
mov
fwait
mov
leavew
add
cmp
sbb
mov
lea
mov
stos
stc
or
ret
xchg
pop
push
or
cmc
pop
call
ret
fs
cmp
ds
sub
sbb
je
addr16
mov
pop
movl
pop
add
inc
inc
jmp
fisubrl
xchg
mov
or
mov
xlat
push
dec
lret
or
mov
jns
add
in
xchg
add
jne
push
lods
or
xchg
stos
mov
movsl
lods
gs
push
xlat
mov
lcall
sbb
push
lods
ja
sbb
jmp
adcb
je
and
cmpl
jnp
test
jo
arpl
enter
cli
xchg
inc
jl
lret
push
sti
arpl
das
hlt
xor
xchg
pop
cltd
stc
push
mov
inc
jmp
adc
or
shll
mov
push
or
push
fmul
cmp
fistpll
sbb
mov
mov
fldl2e
mov
fsubrl
and
test
jecxz
lcall
cmp
add
adc
ljmp
lods
add
cli
repnz
or
fadd
int
xchg
jmp
cltd
cmp
pop
xchg
insb
lcall
xor
push
add
xchg
add
xor
jno
cmp
cltd
xlat
rcrl
movups
daa
iret
push
lods
mov
add
pop
ds
push
or
lock
sbb
inc
or
mov
rcrl
and
cli
sbb
fcmovu
mov
adc
leave
add
rclb
pusha
fisttpll
jl
sbb
fstp
push
js
jmp
dec
mov
fs
and
outsl
testb
dec
sub
mov
dec
pop
icebp
ds
and
inc
out
insl
mov
popf
and
pusha
xchg
filds
orl
in
dec
push
ja
scas
lret
mov
dec
jns
test
inc
pop
cltd
roll
les
inc
mov
or
in
mov
nop
fucomip
aam
sbb
fs
xor
dec
adcl
mov
inc
xchg
mov
xor
sbbl
xchg
fcoms
cwtl
mov
inc
pop
ret
test
gs
cwtl
pop
rolb
cmp
push
jecxz
ficomps
lcall
repnz
repnz
pop
adc
leave
sbb
xor
jg
add
jb
std
push
mov
gs
nop
adc
movsb
cmpb
cwtl
lock
adc
adc
xchg
icebp
mov
sub
add
fldt
jne
xchg
inc
and
mov
fisubl
sbb
psllq
addr16
adc
xchg
repnz
cli
jecxz
aad
inc
jecxz
mov
sbb
add
mov
xor
test
jle
stos
jmp
mov
inc
dec
push
adc
addr16
std
and
cltd
es
iret
ror
cmp
adc
addr16
pop
sub
and
fsubs
das
or
jmpw
das
dec
movsb
stos
outsl
ljmp
test
mov
jnp
pop
and
bswap
xor
xchg
push
ret
lcall
ja
aam
loopne
daa
scas
push
xor
adc
js
add
push
hlt
mov
sbb
or
mov
nop
mov
pop
clc
mov
enter
and
lods
cmp
scas
xor
mov
jne
jno
cmc
daa
jns
jmp
movsl
int3
pop
xor
fnstenv
mov
push
xchg
cmp
cmp
push
mov
and
inc
lods
pop
int3
cmp
test
daa
mov
jae
cmp
mov
jmp
or
test
lret
mov
loope
iret
jp
xlat
inc
cmpsl
jge
add
lcall
neg
in
adc
dec
push
xchg
add
and
mov
adc
dec
mov
shlb
sbb
jle
fwait
or
dec
out
xor
loopne
xchg
outsl
and
loop
push
cltd
sbb
movsl
fistpll
test
or
fcmovb
cmp
pop
sbb
inc
into
adc
adc
sbb
subl
sbb
xchg
stos
or
arpl
xchg
dec
pop
jb
xchg
test
cmc
adc
cltd
push
xchg
enter
and
loope
push
pop
cmpsl
sub
insl
sub
mov
inc
inc
push
nop
lods
cmp
faddp
jmp
dec
jle
cmp
call
aad
push
iret
xchg
mov
and
cmpsl
push
push
neg
mov
add
inc
fwait
push
xor
loopne
test
out
mov
je
push
ss
inc
xchg
andl
mov
fs
mov
in
lea
pop
ret
sbbb
loop
push
jg
inc
andb
repnz
mov
inc
xor
test
sahf
jg
jbe
xor
sbb
loop
movsl
repnz
aas
mov
sbb
lods
jl
testb
cli
hlt
rol
inc
adc
cwtl
int
fcomp
mov
cmc
repz
cmp
cmp
sar
and
sarb
sub
pop
loopne
mov
mov
in
pop
arpl
mov
or
shl
lea
inc
pop
repnz
lcall
mov
sbb
cli
add
in
test
repz
arpl
ds
lds
mov
xor
jg
push
inc
fstps
jge
aaa
or
cli
mov
jae
popf
pop
push
or
mov
inc
xor
pop
ja
add
scas
sbb
add
xlat
dec
push
ja
popf
imul
and
inc
lahf
pop
push
jmp
cs
into
cmpsl
xchg
dec
jo
pop
mov
xchg
or
repnz
add
cmpsl
dec
jne
cmpsl
test
dec
mov
adc
hlt
sub
aam
add
pop
scas
dec
ljmp
fs
cli
shrb
test
adc
es
push
inc
lahf
jge
loope
push
or
mov
sub
movsl
push
es
ds
pop
ror
jbe
sti
ljmp
cmp
ret
lret
pop
jg
xchg
adc
icebp
xchg
mov
cmc
les
pop
pop
imul
pop
mov
ficomps
stos
out
cmpsl
jo
mov
fsubr
push
adc
push
add
and
xchg
jl
jmp
jns
int3
push
in
loop
sarl
cmp
push
aad
sbb
sub
imul
xor
add
in
stos
pop
add
mov
aas
test
add
jno
cltd
sub
pop
inc
mov
and
aad
movsb
fbstp
cmpsl
in
add
jae
and
xor
jne
mov
rcrb
aad
inc
push
push
add
inc
fisttps
cwtl
pop
mov
mov
sub
fiadds
jl
das
push
in
cli
mov
dec
push
je
jl
insl
scas
mov
iret
dec
pand
mov
mov
mov
add
sbb
push
les
test
push
inc
xor
sub
push
push
pop
push
lods
or
mov
loop
mov
xchg
sub
bound
cwtl
aas
pop
adc
mov
pusha
pop
cltd
or
push
sub
and
jl
fiadds
xchg
push
fstps
jge
movsl
jno
jge
test
pop
add
inc
dec
jl
mov
jge
push
in
addr16
pop
rolb
stc
jae
push
das
popa
loop
and
test
add
inc
test
outsl
mov
enter
inc
sbb
mov
js
push
sub
mov
fistpll
xchg
arpl
sbb
add
xor
mov
cmp
xchg
cwtl
sub
inc
cmp
and
cmp
fbstp
mov
out
imul
in
mov
sbb
dec
mov
dec
loop
pushf
jno
pusha
mov
loope
sub
in
mov
cmp
lcall
pop
or
or
cltd
inc
call
stos
xor
das
and
stos
inc
mov
mov
sbb
pusha
fimull
xor
jge
stos
mov
loope
std
cltd
js
test
pop
sahf
push
dec
add
addl
ret
xchg
imulb
xor
aam
xor
movsb
call
test
push
aas
sbb
add
out
ficoms
sarb
inc
xor
xchg
mov
pop
lods
push
frstor
ret
scas
and
js
lret
pop
xor
pushf
and
cmp
or
push
out
mov
sub
adc
je
dec
sub
xchg
add
rolb
je
dec
mov
sub
fidivrl
jl
fs
and
jge
aas
je
push
or
int3
xor
lret
jg
mov
sbb
mov
push
ret
pusha
push
adc
int
ss
jmp
and
rorb
ja
cmp
stos
xchg
std
pushf
jmp
imul
push
mov
ljmp
mov
addb
sbb
ffreep
inc
in
xchg
imul
mov
pop
test
sub
int3
and
cmp
addb
push
push
xchg
mov
push
add
adc
imul
aaa
adc
sbb
cmp
fsubrl
hlt
dec
into
ja
xchg
xor
cmp
out
pop
cltd
sub
pop
out
stc
mov
ja
lods
sbb
insl
sbb
push
and
arpl
imul
call
mov
xorl
xorb
inc
sbb
outsl
popa
cs
aas
test
lea
adc
ficoml
sub
lcall
cli
lods
int3
mov
sub
lock
or
push
dec
fstl
in
add
push
inc
lods
ljmp
lcall
pop
dec
fsubs
stos
mov
imul
bound
shrl
pop
or
jbe
pushf
neg
xchg
ljmp
xchg
mov
insb
inc
mov
loop
mov
sub
sysexit
adc
mov
add
pop
mov
in
cwtl
ja
sbb
mov
mov
sub
scas
loopne
inc
cwtl
dec
fidivrl
sbb
adc
dec
lock
repnz
outsl
mov
notb
into
lods
jns
xchg
cmp
mov
mov
scas
cltd
mov
movsb
test
gs
repnz
push
xor
adc
gs
xchg
inc
jl
xchg
test
adc
mov
mov
jne
and
mov
aam
cld
xchg
clc
or
into
outsl
sub
mov
lea
push
xchg
jle
shr
lcall
inc
aas
lahf
and
sahf
dec
mov
and
sbb
jge
fdivs
inc
aas
enter
fnstenv
pusha
pop
fucom
xchg
jle
cld
iret
sahf
pop
mov
ret
mov
sub
test
mov
scas
and
loop
add
dec
inc
cmp
add
je
pop
mov
je
adc
sub
dec
jmp
push
mov
add
in
pop
xchg
or
das
dec
add
imull
sub
jge
fcoml
mov
mov
or
and
pop
push
and
bound
mov
aas
ja
test
mov
ret
mov
outsb
mov
pop
cmp
imul
xor
idivb
inc
loop
jge
lahf
and
inc
jg
jns
push
lods
cmp
push
adc
mov
cmp
push
and
sub
inc
xchg
enter
or
je
sub
sbbb
insb
dec
and
cs
testl
pop
sub
adc
inc
sbb
gs
sub
test
pop
xchg
stos
nop
cmovb
mov
dec
leave
lahf
dec
icebp
insb
xchg
movsb
xrelease
shll
jp
pop
pop
push
mov
out
adc
ljmp
mov
jne
and
mov
test
into
je
and
sub
sbbb
cmp
sub
cmpsb
out
add
add
mov
inc
adc
xor
xchg
dec
repnz
mov
sub
popa
inc
ja
and
testl
xlat
scas
enter
dec
lea
in
inc
jmp
sbb
lahf
es
ja
mov
insb
in
push
mov
jp
lock
ret
imul
jmp
in
xlat
stos
aad
enter
jl
xlat
in
idivb
and
cmp
das
inc
dec
mov
mov
mov
mov
dec
ss
jns
or
out
in
stc
cmp
inc
test
ds
lods
cmp
mulb
jecxz
dec
fisubrl
pop
sub
cmp
jmp
imul
fldl
jl
mov
xor
cmp
mov
and
cmp
jne
movntps
mov
or
pop
pop
repz
out
add
cmp
jl
fimull
mov
outsl
in
repnz
xchg
xor
mov
sarl
insl
mov
or
jmp
sbbb
jae
xchg
lahf
out
orl
or
inc
fbld
leave
mov
xchg
or
mov
xor
nop
push
jl
xchg
cmp
mov
lret
pop
cmpsb
inc
push
sub
aam
ds
sub
outsl
sbbl
jb
gs
aas
add
std
xor
dec
or
out
sub
lods
das
fwait
ret
arpl
jp
mov
addb
mov
lret
mov
out
call
or
sbb
les
xchg
pop
push
add
loop
dec
push
add
jp
adc
js
push
test
mov
mov
push
dec
jbe
xchg
mov
adc
pop
push
or
jbe
and
xchg
xor
addl
gs
lods
push
xor
pslld
test
inc
jne
aas
lods
adc
subl
cmp
aas
pop
test
daa
sbb
jae
xchg
sbb
insl
xor
dec
bound
outsb
lcall
in
add
test
or
push
lds
test
pop
mov
dec
and
jl
jns
add
jl
mov
call
mov
pop
and
add
or
or
in
jp
test
nop
mov
xchg
loopne
xchg
xor
shrl
cmp
xor
fcoml
idiv
int3
aaa
and
adc
aad
dec
in
and
test
pop
in
shl
or
arpl
out
mov
inc
sbb
mov
test
iret
pushf
pop
inc
mov
jecxz
or
mov
ja
pop
cmp
jno
bound
pop
std
les
cltd
and
add
sub
js
les
jo
sbb
inc
adc
lret
pop
or
lods
pop
scas
out
imul
pop
adc
arpl
sbb
popa
pop
dec
lcall
add
mov
ret
scas
xchg
repnz
stos
mov
adc
stos
jbe
adc
gs
mov
ss
lds
dec
pop
jecxz
xor
sub
int3
mov
shl
or
push
int3
jae
and
jg
sbb
lds
addl
call
mov
cmc
mov
test
daa
sbb
aas
mov
cmp
mov
push
int
push
add
mov
fdivr
xchg
nop
out
cmp
dec
push
mov
imul
and
push
out
cmp
imul
push
das
test
mov
xor
jecxz
mov
dec
cwtl
dec
xchg
mov
jne
dec
and
inc
ss
mov
adc
movsb
std
push
icebp
scas
int
iret
ret
xlat
pop
dec
cli
pop
loope
inc
sti
xchg
inc
jo
pushf
and
inc
inc
xor
add
mov
jb
in
sahf
dec
and
aaa
testb
pusha
fnsave
xchg
mov
xlat
in
adc
pop
fstpl
mov
pop
jp
lret
aam
mov
dec
or
jb
sbb
xchg
adc
sub
clc
test
lock
into
sub
sbb
adcb
jb
aas
jmp
jmp
mov
push
push
dec
repz
insl
pop
ficomps
add
lods
icebp
xchg
xchg
push
jmp
mov
scas
addb
rorl
add
pop
pop
js
and
xor
fnstsw
pop
xor
mov
cli
test
mov
push
cmp
fsubl
mov
out
cmp
rorl
xchg
pop
daa
push
imul
cmp
sbbb
rclb
jo
push
dec
lret
or
mov
pushf
jnp
cmp
pop
adc
sub
cmp
and
aas
push
imul
push
xor
stos
inc
das
inc
pop
stos
pop
xor
cmp
or
loope
adc
push
or
push
inc
clc
lret
adc
loopne
aam
test
cmp
hlt
lcall
xor
inc
dec
xor
data16
push
mov
movl
movsb
sahf
test
cmpsl
fisubrl
pop
jae
push
faddl
cmp
adc
cld
adc
adc
loopne
bound
xor
adc
cltd
cmp
dec
xchg
scas
adc
fs
push
lods
mov
dec
das
mov
pushf
out
repz
ja
pop
jge
inc
jmp
loopne
lret
inc
adc
xchg
sbb
fdivr
cwtl
fimuls
mov
popa
iret
push
in
xor
mov
jo
push
sti
dec
dec
negw
sbb
ds
das
cmpsl
sahf
add
pop
shll
stc
xchg
sub
xchg
cmp
sbb
das
push
sub
xor
test
movsb
or
lock
push
adc
mov
outsl
mov
mov
add
inc
jecxz
inc
push
incl
adc
mov
clc
inc
adc
ja
das
xchg
adc
lock
and
filds
add
or
jns
add
in
or
out
enter
jbe
jno
mov
dec
push
inc
insl
inc
push
arpl
sbb
mov
mov
movsl
xchg
inc
pop
pop
xlat
xor
mov
push
and
cmpsb
add
ret
push
xchg
loopne
xor
bnd
jle
push
mov
add
outsl
fstl
aas
jge
pop
add
cmpsl
fcomip
add
mov
pop
sub
fstp
pusha
adc
mov
pop
inc
push
mov
add
adc
mov
xor
aad
inc
scas
test
out
daa
outsb
mov
mov
mov
push
shrb
jecxz
pop
xchg
mov
cvtpi2ps
xor
inc
outsb
and
push
push
pop
xor
pusha
gs
popa
loopne
outsl
jecxz
imul
cmp
mov
jne
lcall
mov
adc
enter
add
loope
xor
dec
sbb
imul
dec
out
inc
popf
cmp
das
add
and
rorb
push
in
xor
popl
out
call
loop
pop
ss
adc
sub
sbb
pop
add
lahf
jnp
sub
filds
inc
nop
and
sbbb
aas
cmp
xor
xchg
xchg
insb
out
push
mov
pusha
mov
mov
out
pop
jnp
inc
push
repnz
push
jle
out
aaa
outsl
mov
mov
das
or
pop
rorl
ss
jp
sbb
pop
push
clc
stos
mov
bound
mov
jge
xchg
sbbl
pop
pop
push
push
lret
pop
cmpsb
imul
pop
xchg
add
lret
mov
shrb
sbb
aaa
push
ds
cwtl
shl
pop
mov
pop
inc
add
test
push
mov
or
jecxz
gs
std
xor
sub
jno
icebp
mov
xor
es
mov
pop
pop
pushl
call
sub
stc
leave
adcl
adc
movsl
mov
daa
mov
pop
and
mov
inc
cmp
add
mov
and
and
pop
insb
std
inc
add
jbe
adc
sub
lea
mov
mov
fidivrs
inc
sbbb
pop
test
idivb
movsb
mov
fisttpll
in
test
mov
mov
xor
cld
lea
sbb
cld
xchg
pusha
into
jnp
cmpsb
mov
repz
add
and
jmp
xor
test
pop
movsl
mov
inc
movsb
xlat
pop
xchg
cmp
data16
adc
mov
adc
rcrl
mov
xor
cmpsb
out
pop
ljmp
jae
sub
xchg
inc
bound
mov
loop
repnz
aaa
xor
push
mov
ret
or
int3
cmpsb
xchg
pop
mov
sub
icebp
icebp
fldt
test
pop
idivb
pop
rcr
in
mov
jmp
in
in
dec
es
adc
mov
pop
repz
imul
fstl
xor
xor
cmp
xor
mov
xchg
outsl
jmp
lret
sbb
mov
scas
adc
std
mov
aad
ret
pop
fldt
push
xchg
addr16
lcall
lcall
xchg
ret
adc
filds
jmp
scas
addl
mov
shrl
mov
jmp
popf
popf
ret
push
leave
leave
dec
jmp
and
push
adc
xchg
jnp
push
inc
fbstp
ret
xor
inc
es
lret
enter
cmpsb
add
adc
pop
jle
int
xchg
xchg
imul
add
xchg
push
xchg
stos
sbbb
add
imul
sub
push
daa
push
xchg
andb
stc
jbe
int3
add
fidivs
inc
xor
repnz
or
mov
adc
mov
cld
xorl
mov
sbb
adc
and
testb
pop
xor
mov
jle
adc
aad
pusha
repz
cs
aaa
mov
sub
push
daa
dec
decl
movsl
push
lcall
scas
cmp
sbb
mov
in
cmp
gs
insb
in
cmpsb
add
cmc
and
cmp
inc
and
cs
inc
pop
lods
pop
adc
pop
imul
push
fsub
and
jo
lds
scas
std
mov
jecxz
push
int
push
loopne
mov
cmpsb
sbb
jb
xchg
pop
jbe
mov
std
jnp
int3
enter
fdiv
shrl
and
push
and
or
jae
mov
cwtl
push
xor
dec
push
inc
in
jns
int
imul
xor
roll
mov
push
stc
subl
pop
xchg
fcmovne
xchg
add
jge
mov
rol
lods
cmc
jbe
mov
lret
sub
add
clc
xchg
sti
icebp
add
cld
push
in
inc
scas
push
pusha
mov
repz
in
mov
push
sbb
add
outsl
bswap
dec
cmpsl
xlat
pop
or
in
jmp
mov
push
dec
test
pop
or
ljmp
push
pop
aam
pop
into
rcrb
push
inc
or
pop
inc
fmull
add
and
add
adc
in
dec
xor
lods
and
movsl
mov
mov
xchg
int3
repnz
stos
xchg
xor
cltd
cmp
xchg
adc
mov
lcall
std
inc
aaa
sbbl
outsl
lods
hlt
jmp
dec
and
and
pop
mov
mov
pop
jl
pop
mov
cmp
in
cmp
mov
dec
add
cmp
pusha
jl
repnz
sub
sub
iret
inc
mov
jo
mov
lds
ficompl
sub
mov
in
sub
cmp
mov
out
fnsave
cwtl
jmp
add
or
mov
mov
inc
adc
ja
xchg
add
pop
xchg
cmp
add
outsl
out
pop
sbb
ret
outsl
scas
adc
jp
or
jnp
add
flds
push
fnsave
stos
call
test
add
pop
int3
adc
push
cmpsl
pop
pop
popa
sti
cmc
jb
mov
notl
jle
out
sub
push
cs
jg
push
adcb
cmp
clc
xchg
mov
adc
push
sbb
inc
pop
jne
repz
stc
mov
jae
cmp
push
sbb
pop
lret
insl
call
pop
repz
cmpsl
mov
add
sub
lahf
jle
push
jl
scas
stos
cs
arpl
pop
mov
push
fnstenv
mov
push
repz
gs
in
xchg
cmc
sar
add
rcll
cmp
aad
lods
xor
inc
bswap
and
jnp
push
scas
loop
jnp
jmp
scas
jmp
loop
out
mov
add
sbb
or
dec
inc
out
mov
fwait
mov
cli
mov
dec
hlt
cmp
mov
lods
ja
mov
dec
or
scas
push
cs
shll
out
int
mov
das
lret
pop
push
ror
cmp
sbb
jge
inc
out
pushf
inc
xor
pushf
lahf
mov
cmp
dec
pushf
push
daa
dec
int3
lods
pushf
adc
mov
loope,pt
push
leave
clc
xchg
fldcw
dec
mov
jmp
jb
int3
mov
ret
rcr
jns
popa
scas
cltd
jne
setbe
movsb
mov
push
xchg
nop
pop
cs
out
mov
call
or
out
push
pop
adc
repnz
jmp
ret
pusha
daa
aaa
fsubrs
loopne
fsubl
jnp
cmp
mov
sbb
sub
cli
movsl
popf
jns
in
cmp
add
testb
xchg
and
push
jl
pop
sbb
fdiv
test
or
in
mov
outsl
push
mov
dec
sbb
xor
push
lret
adc
orl
add
inc
pop
add
inc
push
inc
pop
pop
sbb
and
mov
fdivs
movsl
adc
push
mov
lock
push
fadd
cld
pop
into
lret
iret
clc
xchg
xlat
dec
out
push
repz
ds
rcl
lret
jae
or
jp,pn
rorl
dec
ficoms
test
mov
mull
fmulp
cwtl
xchg
lea
dec
push
insb
jle
jle
ja
ficoml
push
inc
mov
rcrb
xchg
je
ror
mull
fisttps
test
push
jl
inc
sbb
dec
int3
or
adc
xor
xchg
hlt
push
fstp
sbb
xchg
scas
sub
or
cmpsb
sbb
stos
jge
jb
push
rcrb
inc
ret
xor
jns
and
push
insl
mov
fcoms
loop
lret
cltd
hlt
add
aad
lcall
mov
out
sar
sub
cmp
cmc
xchg
jns
stos
add
incl
mov
sahf
inc
pop
addb
xor
xor
sub
jo
movsb
mov
xchg
and
and
pop
sub
fwait
xchg
or
je
fs
cmp
jge
daa
and
mov
sub
ret
adc
movsl
sbb
mov
pop
pop
loopne
sub
loopne
int3
pop
mov
pop
lret
bound
and
daa
test
into
pop
jecxz
lds
rclb
and
jl
test
or
jmp
mov
xchg
push
pop
iret
es
sbbl
repnz
cmpsb
cmpl
push
sbb
cmc
nop
daa
pop
test
dec
loope
push
inc
les
imul
jbe
adc
mov
testl
fisttps
sbb
orb
jae
mov
dec
test
or
aam
mov
mov
enter
push
mov
lahf
jb
xor
mov
rorb
mov
add
cmp
out
xchg
xlat
xchg
lret
negb
repz
ficompl
rol
sarl
push
fcompl
pop
jl
popf
lahf
rol
and
jne
jle
je
pop
pop
xchg
xchg
adc
daa
fnstenvs
inc
fstps
and
hlt
mov
jecxz
andb
in
outsl
cltd
sbb
xchg
jle
xor
cwtl
jp
push
call
ds
and
outsl
and
lahf
out
and
aas
sbb
or
jae
inc
adc
mov
xchg
mov
push
fistpl
and
movsl
and
adcl
sub
mov
icebp
ret
popf
jbe
cmp
add
push
mov
gs
mov
enter
mov
test
pop
ds
adc
sbb
int3
cmc
push
mov
fwait
stc
jmp
lcall
jae
adc
push
pop
in
gs
loope
ret
les
negb
jecxz
sub
cmc
dec
cs
jb
sti
pop
push
cmp
pop
inc
jg
fisttpl
dec
pushf
push
movswl
scas
push
inc
mov
iret
sbb
push
mov
ret
cmp
pop
daa
inc
sub
add
pushf
adc
push
clc
mov
dec
roll
lret
icebp
stc
daa
imul
sbb
adc
jne
outsl
adc
mov
out
std
mov
ds
iret
data16
gs
call
stos
or
push
adc
xchg
into
out
dec
pusha
es
cmp
sbb
mov
push
inc
movsb
inc
sbbb
repnz
lods
sub
call
sahf
sahf
aam
jbe
iret
lahf
cmp
lahf
int
lds
test
iret
outsb
ja
jl
movsl
mov
push
sbb
ret
cli
ror
mov
xchg
xor
inc
mov
lahf
scas
sub
cmp
push
pop
push
adc
add
xorb
and
or
push
inc
and
out
filds
jecxz
dec
push
add
lock
add
out
add
fs
push
mov
or
stos
stos
mov
dec
pop
shl
adc
push
out
and
imul
jb
xchg
add
popf
pop
icebp
add
repnz
mov
push
push
and
cmpsl
sbb
ret
lods
pop
outsb
xchg
loop
mov
imul
out
pop
push
push
test
pusha
pop
daa
push
cmpsl
outsb
ds
stos
pop
cmpsb
sbb
and
sbb
push
int3
mov
lds
arpl
int3
xor
jbe
dec
jo
sbb
cli
mov
sub
inc
repz
lret
sbb
pop
push
mov
bound
shll
push
add
jecxz
mov
push
int3
mov
pop
sub
mov
xor
ror
adc
xor
pop
ret
in
mov
lock
mov
sub
icebp
arpl
loope
ffree
dec
imul
pop
pop
adc
imul
lods
scas
pop
cltd
js
pop
aas
mov
push
dec
push
mov
dec
mov
jp
mov
jno
push
xor
stos
lock
mov
outsb
test
sbb
mov
push
inc
cmp
movsb
aas
rolb
movsb
hlt
stos
cmp
or
stos
arpl
push
movsl
dec
out
fwait
cmp
jge
ja
sub
ret
cmp
aas
je
add
sub
loopne
push
in
push
or
rcrb
dec
dec
sbbb
stos
jp
dec
cmp
ljmp
jg
sbb
in
insb
mov
push
es
xor
xor
shll
aad
adc
pop
dec
fistps
jns
cld
imul
rcrl
and
aad
jge
mov
das
jns
lcall
stc
ss
rorb
mov
je
sbb
ret
jecxz
icebp
gs
mov
xor
and
pop
jno
pop
int3
adc
push
push
mov
mov
push
dec
in
xchg
ss
movsl
call
sbb
and
nop
and
or
jns
mov
cmp
push
cmp
idiv
aas
dec
push
push
fdivrl
xchg
test
out
fimuls
out
jo
rol
mov
and
iret
cwtl
mov
test
popa
ret
popf
mov
push
mov
mov
add
addr16
xchg
mov
iret
cmp
adc
add
and
or
dec
mov
out
sbb
insb
js
sub
and
rolb
aas
pushw
jecxz
arpl
xchg
adc
pushl
mov
mov
test
fisubrl
pop
pushf
lcall
mov
fisubl
or
rcr
sbb
mov
das
inc
or
add
leave
orl
jge
scas
push
push
gs
sub
mov
test
or
add
data16
jle
fs
ret
xchg
lahf
mov
imul
pop
mov
or
jnp
xchg
imul
dec
subl
je
and
mov
imul
add
lds
in
clc
arpl
decl
imul
sbb
in
jb
ds
movsl
sbb
push
stos
adc
int
pop
out
insl
pop
insb
cmp
outsb
inc
mov
or
dec
xchg
xchg
aam
repnz
xchg
add
lods
jecxz
mov
mov
xor
out
in
cmp
pushf
mov
orb
hlt
dec
add
xchg
insb
inc
push
xor
cld
fcoml
add
lds
adc
adc
arpl
add
dec
mov
adc
hlt
movb
push
scas
pusha
sbb
mov
das
push
fwait
in
sub
adc
lds
mov
sub
data16
das
out
in
sbb
dec
jecxz
push
aad
out
mov
inc
es
aas
in
sub
fiadds
xor
sbb
xor
addr16
fs
divl
add
inc
lret
in
test
mov
ljmp
push
mov
and
mov
mov
cmpsl
and
loopne
xchg
outsb
imul
mov
jmp
cwtl
pop
loopne
inc
xor
sub
cli
pop
insb
lret
lds
jmp
loopne
out
fadd
mov
insl
mov
fwait
call
loop
add
ljmp
gs
jp
pop
inc
divb
lds
divb
je
fs
push
mov
test
cs
adc
adc
xchg
xchg
pop
pop
or
inc
add
dec
mov
ret
jne
nop
xor
sahf
lock
cmp
cmc
mov
pop
int
pop
xchg
push
je
xor
test
xor
pop
cmp
and
jb
aad
fs
mov
jmp
push
pop
adc
and
push
shl
int
pop
sahf
imull
or
test
xchg
and
and
sarl
clc
rolb
xchg
into
cmp
imulb
jbe
jecxz
cmp
cmp
adc
xor
ret
insb
push
loope
lods
test
pop
jp
out
stos
movsl
cs
add
push
pusha
pop
cli
sarl
daa
pop
faddp
adc
or
repnz
mov
icebp
adc
lock
fiaddl
cmp
mov
sbb
sub
cld
scas
inc
mov
fidivl
or
mov
cmp
mov
lret
push
and
dec
cli
or
movsb
xor
and
enter
jp
or
lahf
pop
mov
cmp
and
jns
mov
inc
push
or
loopne
dec
cmp
add
es
lcall
dec
cwtl
insl
inc
dec
bound
adc
lods
jl
addr16
inc
dec
rcr
cs
xchg
mov
and
cmp
popa
or
xacquire
outsb
jns
push
fcmovu
push
ret
out
mov
pop
or
dec
lret
and
pop
mov
out
jg
mov
lcall
test
xor
add
mov
push
jg
bound
pushf
scas
call
lahf
and
enter
cmp
out
jno
lret
push
inc
pop
rcr
out
insb
ja
sbb
ljmp
add
or
pop
pop
sbb
icebp
adc
shrl
sti
push
lods
test
cmp
test
mov
push
call
mov
add
out
out
daa
icebp
and
add
jle
jg
add
jae
mov
outsb
push
icebp
mov
sbb
lea
dec
xor
mov
int
mov
push
adc
cmp
insl
das
out
push
push
push
lahf
and
cmc
test
mov
xlat
adc
popa
mov
or
and
movsb
das
dec
jb
xchg
jns
pop
clc
aad
cltd
add
out
push
jo
jmp
fwait
test
mov
push
test
mov
gs
mov
enter
jo
imul
gs
push
and
push
mov
mov
call
push
sub
daa
cmpsb
popl
iret
pop
cmpb
mov
rcrl
popf
mov
ljmp
add
and
add
repz
dec
call
ret
sub
pusha
xor
test
xor
add
xor
xor
sub
lret
stos
ss
lods
pop
imul
shlb
push
inc
imulb
in
mov
fimuls
js
stos
out
sbb
sub
imul
xor
cmpsl
fs
daa
rcrl
sbb
inc
xchg
mov
in
mov
notb
jbe
lret
lret
push
movsb
hlt
pop
in
jo
lods
mov
mov
pushf
data16
repnz
dec
cmp
sti
cli
movsl
popa
repnz
lods
int
or
rcll
or
lret
sub
stos
inc
jno
out
cmp
xchg
inc
mov
cli
and
jmp
sub
aad
cmp
out
in
js
sub
rcrl
jne
ss
loop
pop
call
outsl
push
es
movsb
addr16
stc
add
cmpsl
stos
sarl
or
fcomps
mov
jb
lahf
sub
cmp
addr16
lcall
lahf
push
jmp
fldenv
xchg
push
cs
xchg
into
mov
or
jl
addr16
xor
mov
cmp
mov
out
test
repz
adc
push
push
push
pop
mov
push
popa
test
push
xchg
jg
cmpsl
inc
bound
xchg
adc
mov
out
fists
cwtl
repz
push
int
mov
push
cmc
add
jns
add
adc
leave
sbb
jge
push
into
enter
mov
in
sub
and
into
xchg
cmpsl
cmpsl
insb
test
andb
ret
stos
imul
or
add
iret
popl
xlat
dec
idivl
lods
or
pop
xchg
or
fsubrl
dec
icebp
je
mov
cmpsl
inc
sub
fidivs
call
jne,pn
imul
mov
ds
les
subb
fld
adc
aam
pusha
cld
inc
cs
ljmp
stc
pushl
bound
pop
sbb
imul
jmp
dec
in
ss
cmp
shrl
dec
ret
cld
push
xchg
int3
outsb
lea
add
test
adc
ljmp
lcall
mov
cmp
sbb
push
or
mov
mov
or
mov
jecxz
mov
mov
inc
inc
lret
movsl
lods
addr16
dec
and
mov
adc
push
push
adc
das
or
insl
jl
cmp
stc
cmpsl
loopne
insl
les
sbb
ret
lcall
out
out
push
imul
or
shr
je
and
sub
xchg
addr16
pop
pushf
mov
cmp
mov
jbe
jle
imul
mov
neg
cmpsl
xor
sub
repnz
sahf
data16
jge
ret
mov
lods
mov
imul
dec
push
insl
inc
push
lret
ficomps
inc
int
and
xchg
lea
insb
mov
jmp
lea
mov
and
add
xchg
lea
xchg
jbe
cmp
popa
mov
sub
sub
cmp
pop
mov
mov
mov
movsl
in
fdiv
push
sbb
dec
jl
push
pmulhuw
or
imull
mov
adc
mov
insl
sub
decb
lock
mov
dec
mov
dec
inc
mov
adc
push
icebp
hlt
jae
xor
dec
inc
mov
push
jns
mov
out
into
dec
inc
pop
jbe
nop
cmp
add
sbb
inc
iret
inc
test
mov
mov
xlat
and
adc
testb
cwtl
mov
pop
iret
and
jecxz
nop
dec
lods
adc
ljmp
ficompl
jae
mov
clc
nop
out
ja
push
jle
xlat
loopne
push
or
das
cwtl
test
sub
mov
and
aas
cmp
rol
pop
hlt
dec
out
xchg
pop
jle
and
mov
fldl
adc
pop
push
inc
jle
inc
sti
add
mov
aad
int3
stc
into
sub
test
adc
xor
xchg
icebp
inc
jmp
int
outsb
test
scas
cmp
pop
sbb
xchg
xchg
push
push
lcall
int
hlt
add
inc
mov
mov
or
inc
loop
mov
sub
aad
gs
inc
fs
mov
mov
pushf
cs
cmp
int
sub
sub
fdivs
inc
mov
out
xchg
into
mov
cltd
dec
das
sub
dec
jo
mov
cwtl
int
sahf
ss
cs
and
shll
imul
mov
push
aas
test
int
push
fldt
scas
test
pop
push
xchg
jle
inc
repz
xchg
icebp
jp
insl
inc
iret
movsb
mov
sti
sub
mov
in
add
pop
es
hlt
xchg
test
scas
lahf
cmpsl
sar
xchg
sbb
jmp
out
pushl
icebp
sbb
sub
ret
shrb
push
cmpsb
jle
mov
add
lods
add
loope
adc
nop
pop
pop
push
sub
add
rcrb
pop
pop
cmp
pop
or
adc
scas
xchg
popa
cmp
jle
mov
nop
lds
std
lods
adc
outsl
or
xchg
dec
scas
loop
sbb
insb
fidivrl
mov
and
pop
sub
call
jmp
mov
mov
or
je
pop
frstor
mov
or
mov
loop
inc
cwtl
push
pop
sbb
pop
push
mov
loop
lods
rcrl
inc
sar
mov
into
and
mov
call
inc
cmp
mov
jge
push
inc
aam
dec
add
pop
repz
push
jns
fwait
addr16
jmp
in
pop
or
movsl
inc
cmp
mov
cli
mov
scas
push
inc
cmc
loopne
xchg
mov
sub
mov
add
sti
mov
stos
mov
fisubrl
scas
ficoml
sbb
adc
test
loop
lcall
xchg
sbb
sbb
sbb
sub
mov
xor
dec
or
mov
cld
bound
cwtl
sub
scas
xor
mov
fsubrl
imul
xor
in
sar
test
and
outsb
test
dec
mov
and
mov
pop
mov
addl
cmp
push
loope
inc
pop
shlb
push
sti
xchg
mov
notb
or
and
stos
mov
mov
into
outsl
in
cwtl
shlb
sbb
leave
mov
mov
out
div
pushl
and
insl
mov
daa
jmp
imul
mov
outsb
mov
insl
adc
clc
leave
mov
xchg
jb
stc
add
stos
xchg
adc
or
jge
mov
jp
cmp
sbb
dec
icebp
bound
jle
sti
adc
fincstp
fcomps
pop
out
push
add
int
cmp
mov
sub
pop
mov
into
fidivrs
adcb
hlt
loop
in
nop
hlt
xchg
ss
roll
sbb
stos
repnz
pop
fsubrs
xchg
lcall
out
test
sbb
push
mov
pop
mov
cmpsb
adcl
loop
cmpsb
pushf
cmpsb
inc
adc
popf
fisttpl
repz
xchg
adc
jb
mov
hlt
fisttps
xchg
jmp
sbb
dec
pop
int
out
mov
icebp
sarb
and
sbb
loope
sub
in
cltd
out
xor
aas
mov
movsl
lret
cmp
arpl
xchg
push
loop
loope
jae
dec
ss
jle
imul
or
or
pop
fwait
dec
sub
sti
adc
pop
faddl
in
pop
pop
daa
mov
scas
jns
xchg
add
pop
xchg
ljmp
mov
mov
mov
and
mov
jge
inc
ret
cwtl
gs
push
movsl
add
dec
cld
adc
leave
push
adc
xchg
lahf
push
inc
cld
lock
push
cltd
sti
add
xor
rclb
lar
popa
fwait
dec
push
sbb
cwtl
daa
mov
int3
sti
dec
lods
insb
pop
fsubrl
mov
push
lds
mov
jge
leave
and
jmp
dec
jno
pushf
js
mov
inc
sbb
test
scas
out
jno
lods
push
cmpsb
lock
and
sarb
or
dec
lahf
add
popa
test
les
mov
pop
pop
inc
xor
push
adc
xchg
push
xor
movsb
mov
add
pop
push
mov
inc
test
unpcklps
fistpl
int
xor
mov
or
mov
inc
call
mov
lods
scas
repnz
cli
pop
xchg
pop
cmp
ret
sbb
add
add
scas
sub
aad
out
popa
ret
add
pcmpgtw
or
xchg
js
xor
mov
mov
cmp
popf
inc
cmpsb
popa
iret
test
pop
les
aas
cmpsl
inc
jno
fdivrl
and
push
jl
inc
pop
adc
dec
lods
movsl
adc
xor
ret
clc
mov
arpl
in
cmpsl
and
outsl
mov
jns
mov
subb
into
mov
pop
ss
daa
daa
inc
xor
int
cs
testl
test
out
sub
jg
mov
jnp
cmp
pop
add
stos
xchg
hlt
push
lods
jnp
sbb
pop
or
push
test
das
gs
or
shrl
in
mov
jns
loopne
fisttpl
cld
sahf
lods
inc
mov
adc
in
xor
imul
shll
and
hlt
fsubl
rolb
cmp
fistps
push
in
jecxz
in
push
out
mov
ljmp
in
pusha
mov
fldcw
std
sbb
mov
sub
mov
test
push
stc
std
jge,pn
sti
jns
pop
int3
dec
popf
or
into
mov
pop
test
xchg
fs
shl
ss
sub
mov
jecxz
and
xor
filds
lret
lods
pushf
inc
dec
push
enter
mov
stos
shlb
insb
mov
pop
clc
stos
sbb
scas
cmp
js
notl
xchg
and
rolb
and
xchg
jno
loope
int3
cs
cmp
or
ret
adcb
stc
xchg
push
sub
push
cli
pop
dec
xchg
ret
xchg
mov
loope
dec
icebp
in
push
das
add
mov
addr16
mov
es
fidivl
sub
mov
or
test
xor
sbb
push
cmp
cs
cmp
out
in
xchg
rcrb
data16
pusha
movsb
xchg
movsl
out
xchg
addr16
sahf
call
lret
jmp
mov
dec
test
mov
cwtl
mov
std
out
or
add
push
pop
cli
xor
in
hlt
mov
jp
jp
aas
sbb
cmp
cmpsl
daa
or
jnp
in
and
popa
sub
dec
mov
dec
mov
shll
cmp
dec
mov
loope
pop
and
adc
jmp
out
gs
scas
fidivrs
mov
jle
sbb
ret
js
inc
sub
ret
fsubp
jg
cwtl
sub
cmpsb
adc
cmc
fidivs
movb
cld
cld
std
insl
mov
mov
push
bound
xchg
mov
adc
nop
movsb
push
stc
mov
ja
sti
and
inc
push
cmp
call
sbb
fisttpl
mov
cwtl
jno
in
loopne
fs
addr16
xor
mov
scas
xorl
mov
or
push
ss
add
cmp
xchg
pushf
andl
mov
js
mov
mov
jnp
pop
fiadds
sarb
sbb
in
inc
aas
leave
je
rcl
inc
or
mov
mov
inc
int
mov
inc
cmp
inc
add
adc
leave
sahf
movsl
lahf
sahf
inc
fdivrp
clc
cmp
jl
js
mov
jb
or
sbb
jl
xor
imul
mov
imul
jnp
imul
rorl
xchg
jl
int3
or
popa
mov
xor
mov
pop
mov
push
int3
aaa
int
lods
std
mov
mov
fs
jmp
push
imul
mov
jl
mov
sbb
sub
out
out
lea
mov
pop
mov
test
jp
ljmp
andl
and
in
or
fsubrp
clc
scas
ljmp
inc
out
lock
jg
push
enter
pop
or
fmull
jge
dec
shlb
jnp
pop
cmp
fmuls
or
mov
insl
mov
fisubrs
xor
out
out
xchg
mov
ss
clc
xor
push
test
xchg
inc
push
inc
push
inc
in
cmp
pop
cli
jmp
ret
iret
bound
mov
orl
iret
mov
dec
sub
inc
pop
pusha
xor
shlb
loope
aaa
inc
xor
xchg
jecxz
pop
jns
test
inc
jbe
cld
das
repnz
scas
mov
call
test
jo
icebp
fcmovnb
test
adc
loop
push
mov
sub
sub
ja,pt
ja
dec
sub
jno
jns
add
subl
sbb
mov
outsb
lods
mov
xor
pop
mov
sti
or
movsb
mov
or
and
add
pop
jle
loop
ljmp
cmc
paddb
mov
sti
daa
test
or
lds
pop
cmpsl
dec
cmp
stos
aas
stos
mov
loope
int3
in
sub
add
mov
pop
or
sahf
xchg
jge
aam
sub
and
adc
cmp
or
jmp
mov
movsb
push
aas
aas
test
jp
aam
pop
repz
mov
and
xchg
cmp
sbb
jg
mov
jns
jns
push
cmpsb
or
adc
adc
call
mov
imul
inc
scas
adc
inc
lcall
out
cltd
int
int3
imul
lret
xor
mov
mov
repz
stos
mov
xor
ljmp
arpl
aad
inc
out
testb
mov
jnp
imul
aad
test
or
iret
ljmp
sbb
adc
mov
jp
pop
pop
adc
push
dec
scas
pop
mov
xor
aad
fistpl
jnp
popa
or
lds
inc
and
outsl
xor
cli
jno
add
mov
add
cld
xor
jmp
mov
je
sbb
outsb
popf
cmp
mov
push
ret
std
mov
push
cld
mov
enter
lret
pop
push
jnp
nop
loopne
xor
inc
aas
jne
push
in
js
and
sbb
push
in
std
outsl
decb
out
lahf
dec
dec
mov
xchg
adc
repnz
push
movsb
mov
mov
lock
fcomp
mov
in
jmp
push
into
pop
notl
mov
inc
leave
mov
sbb
test
sti
das
xor
add
std
push
sbb
or
dec
mov
xor
dec
fldt
mov
lcall
lcall
xor
push
sti
adc
sub
jae
daa
call
fisubs
add
out
mov
dec
cmp
imul
and
loop
in
or
aad
push
mov
lock
stos
push
pop
mov
push
or
ret
aam
rcrl
mov
and
test
pusha
mov
mov
xchg
outsl
xor
xorb
xchg
push
sub
adc
das
cli
pop
pushf
scas
pop
xlat
pop
pop
xor
push
scas
out
in
dec
mov
pop
and
pusha
dec
aad
inc
push
xor
test
lret
dec
dec
mov
in
mov
loope
jge
das
addr16
rcll
pop
outsb
repnz
movsl
test
roll
jno
out
pop
fsubrl
insb
pop
lds
sti
stos
leave
mov
mov
xchg
cltd
add
xchg
iret
stos
mul
lret
fwait
adc
sbb
and
mov
and
add
pop
mov
stos
jmp
inc
mov
xor
stc
leave
add
xor
mov
xchg
repz
data16
nop
pop
ret
adc
cli
loop
mov
sbb
out
cmc
sub
test
push
and
dec
xor
or
mov
imul
push
mov
call
cmp
sbb
xlat
push
pop
jae
and
add
sbb
pop
fisttpl
mov
popw
push
pop
add
cs
in
cmp
sbb
cmp
lods
or
xchg
imul
and
push
sub
and
jecxz
lret
shl
lahf
and
adc
push
inc
push
xor
xchg
jmp
mov
xchg
jl
cli
jle
push
test
inc
ret
mov
int
hlt
mov
sbb
ljmp
xor
stos
pop
mov
mov
les
aam
sub
push
lea
out
xor
jns
daa
mov
and
neg
jmp
lea
leave
fwait
out
pusha
mov
icebp
jmp
pop
testl
hlt
test
jo
jno
inc
mov
fcomp
lret
jo
cmp
scas
jae
cltd
sahf
fisubrl
in
xor
fsubrs
fisubrl
clc
and
push
loop
fs
je
std
dec
inc
aas
xchg
push
repz
jno
jnp
add
xor
outsb
in
adc
or
sub
hlt
fisttpl
popa
pop
jb
sahf
cwtl
and
add
mov
xchg
sbb
lock
pop
ficoms
or
mov
addr16
call
xchg
pop
mov
jmp
or
inc
pushf
sub
xchg
pop
rclb
and
or
jp
jmp
mov
pop
out
fdivl
mov
cwtl
dec
call
jns
add
iret
mov
inc
jge
mov
int
jle
fistps
mov
cmp
ja
xor
arpl
in
je
and
imul
clc
push
push
stc
aas
or
in
pusha
push
sub
xor
fistps
ret
mov
fistpl
push
adc
iret
rcr
sbb
fwait
jl
mov
stos
adc
cld
dec
cmpsl
pop
loopne
add
inc
sub
cli
inc
out
push
xor
add
push
es
inc
out
jae
xor
aam
arpl
adc
and
lahf
call
sbb
jmp
push
jnp
mov
or
in
mov
inc
insb
push
aas
ret
insl
clc
push
mov
add
pop
mov
fisubrl
and
inc
or
sub
out
inc
fildl
arpl
cmp
scas
dec
push
mov
aam
push
or
mov
sub
test
cmc
mov
hlt
sbb
mov
pop
cli
fadds
cli
arpl
cmp
pushf
dec
cmp
mov
xchg
add
out
push
or
mov
mov
cmp
outsb
bound
or
mov
push
push
cld
jp
fimuls
mov
or
dec
decb
mov
xor
xor
gs
mov
jno
dec
xchg
insb
xchg
push
add
sbb
cmp
xchg
stc
in
mov
pop
xchg
jno
out
je
jnp
icebp
sti
repnz
xor
shrl
lahf
cmp
out
xchg
fmul
lds
cmp
ds
sub
rep
sbb
push
xchg
push
xchg
test
push
xor
imul
iretw
adc
mov
stos
clc
jne
xor
fcompl
test
push
mov
iret
ret
adc
sahf
icebp
repnz
and
lods
push
xor
pop
mov
mov
mov
dec
xchg
out
jns
movsb
imul
test
cmpb
dec
dec
subb
jg
push
xor
popa
out
push
dec
outsb
in
and
mov
and
mov
arpl
rcll
test
pop
cmpsl
push
loop
ds
in
repz
mov
sbb
mov
fisubrl
push
call
gs
xor
xchg
cmpsl
jecxz
mov
hlt
mov
pushf
lea
out
and
jbe
adcb
push
lret
pop
mov
out
out
fsubrs
cmpsl
inc
jg
int
mov
xor
push
and
mov
gs
inc
ds
mov
push
arpl
enter
cmpb
test
aam
push
adc
or
sub
outsl
test
push
je
lock
mov
call
call
cwtl
sahf
in
mov
insl
aas
and
mov
adc
mov
cmp
mov
bound
stc
push
addr16
call
fmuls
repnz
rcrl
adc
aad
or
test
mov
cmp
scas
mulb
sbb
adc
xor
js
xchg
pop
dec
fbld
sub
ret
cld
xor
test
adc
inc
into
dec
je
jmp
mov
inc
dec
inc
mov
popa
adc
outsl
ficoms
push
in
lds
push
sbb
adc
adc
repnz
les
mov
pop
inc
xor
dec
scas
inc
in
stos
pop
xor
sub
mov
jbe
and
sbb
test
popa
add
mov
cmc
mov
dec
fs
xchg
push
lcall
das
adc
nop
adc
in
cli
mov
add
mov
mov
inc
dec
pop
pop
pop
mov
cmp
xor
inc
notb
dec
xlat
jmp
fs
outsl
outsb
ficoml
sarb
xor
lahf
mov
cltd
adc
adc
loope
push
test
repz
out
xchg
addr16
fstpl
push
adc
ljmp
sub
mov
int3
dec
test
dec
dec
imul
xor
in
add
ja
dec
adc
cld
dec
in
adc
adc
enter
xor
movsl
jg
mov
mov
mov
iret
xlat
test
pop
js
in
les
mov
divb
aas
push
test
jp
add
out
enter
dec
aaa
sti
pop
in
clc
push
adc
imul
push
or
ljmp
pop
jno
push
xlat
adc
sbb
sbb
and
rcrl
stc
or
hlt
cmp
xchg
or
or
xchg
out
sub
outsl
mov
add
das
and
sbb
nop
mov
je
ss
sub
sub
push
imul
push
sbb
sahf
ret
pushf
mov
cli
push
hlt
xchg
shll
or
pop
dec
sbb
decb
sub
sbb
inc
cmpsl
and
dec
and
and
mov
xchg
xchg
stos
ljmp
hlt
inc
cmp
push
sbb
nop
cld
push
ljmp
push
popf
xchg
push
add
jb
push
mov
mov
dec
ja
fcmovne
mov
bnd
mov
jae
call
aaa
xor
jle
mov
mov
and
fidivl
test
pop
sbb
test
pop
adc
hlt
repnz
movsl
sbb
test
dec
fcmovbe
idivb
xchg
xor
push
xor
fisttpll
xchg
or
inc
ret
std
push
aad
mov
ficomps
xlat
in
scas
out
aaa
rol
inc
and
inc
adc
jae
mov
pusha
sbb
or
and
insb
jp
aam
mov
jecxz,pt
dec
jg
pop
sub
sarb
in
int3
into
and
xchg
xor
or
lret
mov
jb
mov
test
call
mov
xor
ret
jnp
xchg
cli
mov
cmpsb
mov
jmp
mov
sti
mov
es
mov
sub
stc
mov
cs
inc
pop
movsb
dec
mov
lcall
ja,pn
aam
xchg
sbb
stc
dec
outsb
mov
mov
add
mov
or
inc
pop
cmp
mov
sti
inc
popf
repnz
insl
mov
idiv
shll
jo
pop
cmp
sub
js
incb
out
aad
sbb
pushl
xchg
sub
ds
adc
std
jno
std
pop
fwait
in
xlat
std
cmp
andb
mov
sub
push
sahf
pop
jmp
int
popf
std
out
es
sbb
cmpsl
jnp
push
mov
mov
test
push
sub
push
pop
dec
ja
arpl
mov
cltd
mov
lock
sbb
aas
popf
jle,pn
jo
xor
lahf
mov
aas
mov
stc
jg
cli
in
or
rclb
cmp
sti
jbe
les
daa
lds
sbb
mov
jg
out
mov
sbb
aaa
push
mov
fwait
orb
pop
into
lods
pop
dec
push
or
test
cmp
add
subb
jmp
and
xchg
outsb
add
pop
loope,pt
lods
dec
into
mov
add
dec
ret
sub
test
lock
sub
push
scas
adc
pop
add
dec
dec
jae
shlb
loop
xchg
lahf
fsubs
push
and
mov
inc
adc
xchg
cmp
sub
adc
push
lock
lret
xor
xchg
jb
sbb
push
cltd
insb
mov
mov
and
lret
inc
cmp
add
addb
fisttpl
test
add
in
pop
out
or
cwtl
jle
add
mov
lds
or
xor
xor
push
jge
sahf
sub
mov
ret
dec
push
fstpt
xchg
push
and
inc
push
pop
outsb
jne
xchg
sub
sub
jbe
std
popa
out
or
cld
mov
repnz
ss
push
mov
push
mov
movsl
fldcw
movsl
mov
cs
aaa
push
pop
and
arpl
test
rcr
lcall
mov
stc
adc
sbb
call
dec
pop
icebp
adc
and
dec
mov
cwtl
gs
aam
mov
std
cwtl
loopne
sub
sbb
push
or
inc
mov
inc
or
mov
mov
aam
mov
imul
lds
and
push
fmuls
jmp
pop
or
pop
pop
jne
cmp
jp
mov
fdivr
hlt
jb
mov
sub
push
cmp
lods
adc
push
inc
cmp
add
inc
insb
adc
hlt
cli
mov
push
mov
popa
and
ret
movsl
and
adc
pop
clc
mov
in
cmp
lret
push
ficompl
add
or
mov
cmp
cwtl
mov
xchg
inc
lea
or
cmp
mov
int3
arpl
xchg
xorl
adc
imulb
dec
adc
outsb
pop
int
in
cs
mov
add
mov
jmp
fadd
rclb
xlat
xchg
mov
cld
cmp
iret
xchg
mov
sub
pop
and
nop
into
pop
mov
test
int
pop
pop
pop
enter
push
insl
aad
jecxz
test
sbb
dec
in
and
into
cmpsb
inc
outsb
pop
or
or
add
mov
aad
push
push
sub
push
sub
mov
add
xchg
shll
sti
mov
lea
fisubrs
pop
out
int
shll
out
sarb
dec
int
mov
pop
adc
scas
idivl
dec
loopne
mov
movsb
cmp
sub
push
fiaddl
xchg
insb
jge
sub
into
insb
mov
cli
lea
es
dec
sbb
addr16
mov
mov
aaa
addl
inc
out
pop
loopne
mov
cmp
popf
sar
lret
loop
jae
pop
loop
pusha
call
sub
je
cltd
test
pop
inc
cmp
imul
dec
push
or
lcall
dec
jns
test
xchg
ss
fcmovne
xchg
push
out
js
sbb
pushf
dec
mov
aam
pushf
pop
in
lcall
push
test
rorl
add
jmpw
jge
shll
testl
cmp
adc
popf
xor
lret
enter
fs
sub
xchg
mov
ss
aad
scas
pop
push
push
xchg
dec
data16
mov
push
stos
shlb
xchg
in
ret
adc
stos
mov
push
loop
jg
setnp
gs
mov
xchg
jp
pop
mov
call
sar
add
add
dec
pop
pop
dec
je
je
pop
mov
into
dec
sbb
mov
outsb
inc
ja
aam
into
dec
ja
shll
cmp
mov
fdivs
lahf
xor
stc
fidivs
jmp
push
cmc
nop
sbb
pop
aaa
ds
jnp
loop
sbb
jnp
mov
pop
jecxz
mov
repz
mov
out
adc
pop
pop
cli
outsb
ss
xor
test
mov
cmpsl
scas
lahf
cmp
movsb
dec
imul
adc
add
cmpsb
adc
lea
cs
insb
int
inc
imul
or
xlat
adc
cltd
mov
les
aas
dec
xchg
int3
enter
movsb
in
dec
pop
mov
add
mov
push
lret
pop
in
sbb
adcb
pop
fidivrl
adc
push
in
jle
jnp
outsb
test
insb
daa
mov
fstl
cmp
sub
sbb
sbbl
mull
std
jmp
jb
add
mov
repz
rcrl
test
jae
loopne
arpl
cmp
fcomp
xor
lahf
jo
fs
in
int
pop
ja
rcr
fwait
xor
xchg
and
mov
inc
xchg
push
popl
jmp
fwait
mov
cmpsl
inc
jne
pop
pop
call
rol
dec
jne
xchg
xor
fstpt
dec
xchg
jnp
mov
mov
jnp
jo
fsubrl
sub
and
mov
lret
clc
mov
leave
or
mov
push
push
fdivs
sti
fsub
add
stc
dec
loopne
dec
lcall
mov
inc
stos
and
pop
inc
pop
sub
inc
and
mov
mov
and
inc
inc
lock
lcall
daa
leave
int
xchg
or
inc
sub
jae
testl
clc
xor
lcall
add
in
jbe
jecxz
ja
cs
mov
sbb
stos
cs
loopne
shrl
xchg
dec
aaa
test
lods
test
mov
mov
in
push
add
sbb
in
lods
fwait
rcr
pop
xchg
xchg
push
cld
iret
xchg
sub
cmc
arpl
mov
nop
notb
mov
xor
pop
jp
dec
cmp
lods
test
popa
xchg
pushf
lret
imul
cmp
mov
stc
xorb
lahf
add
fisttpl
jl
in
fistps
rorl
imul
xchg
sbb
push
js
xor
mov
mov
ds
xor
add
popa
jge
enter
mov
pushf
fmull
repnz
cltd
sbbb
mov
jo
jecxz
jbe
adc
pop
pop
mov
mov
decl
mov
sbb
shr
fldt
and
insb
icebp
cmpsb
aad
repnz
sub
adc
xchg
dec
imul
cmc
push
cmp
and
jae
pop
jp
pop
sub
dec
jbe
push
cwtl
negb
cmp
inc
push
loopne
out
cmp
pop
aaa
movsl
mov
aaa
int3
cmp
fdivrs
adc
std
cld
les
jb
push
cmp
stc
lcall
inc
cmp
lret
sti
or
imul
pop
pop
pop
clc
imul
lahf
mov
cmp
testl
sbb
shlb
or
out
or
ss
xchg
es
loopne
mov
not
sbb
fldenv
adc
xor
data16
cwtl
insb
inc
mov
xchg
ret
sub
ds
inc
pop
mov
adc
shrb
mov
xchg
fsubrl
mov
loope
shlb
xchg
pop
fmul
jne
mov
addr16
push
cmp
push
lods
andl
scas
out
loopne
cmp
xor
jnp
jb
push
popf
dec
aas
sbb
mov
stos
movsl
mov
and
fs
jne
push
mov
jecxz
adc
outsl
or
mov
imul
sbb
orl
cmpsl
jmp
adc
je
sbb
je
iret
xchg
repnz
sbb
mov
jbe
xchg
xchg
stos
cltd
inc
iret
fnstsw
and
or
fwait
inc
add
jno
loope
xor
les
or
das
xorb
cmp
adcb
andl
out
pop
dec
or
mov
jle
and
lods
mov
std
xchg
mov
imul
dec
out
add
add
inc
adc
mov
pop
pushf
popf
daa
fsubrs
mov
push
daa
ficoml
in
xor
lods
leave
int3
stc
mov
pushf
push
mov
jno
mov
cmp
cli
cmpl
jecxz
sarb
add
decl
rol
mov
cmpsb
cmp
fwait
xchg
mov
nop
leave
cli
mov
stos
ljmp
andl
jmp
ja
sub
out
xchg
mov
jge
jl
sub
mov
xor
xchg
or
mov
mov
loope
clc
nop
jbe
mov
cltd
test
xchg
mov
jmp
daa
lret
add
push
push
cltd
inc
ss
arpl
pop
inc
sahf
inc
int
popa
xchg
pop
aas
sbb
adc
scas
cmp
pop
cmp
push
mov
lret
outsb
jnp
aas
ljmp
dec
iret
insb
sub
xlat
mov
mov
or
fisubl
in
dec
lds
mov
xchg
xor
ss
pop
hlt
sub
add
inc
push
mov
outsb
ret
into
mov
mov
mov
pop
adc
pop
xchg
data16
dec
mov
mov
into
jbe
dec
leave
fcmovnu
sub
out
pushf
mov
add
jae
cld
js
mov
divb
roll
std
fs
jb
and
dec
outsb
push
push
dec
cwtl
dec
rorl
cld
out
stc
cmp
int3
in
sahf
sub
mov
scas
mov
jbe
outsl
out
mov
mov
rol
subb
adc
jae
loopne
xchg
pop
pop
add
mov
in
mov
fldl
push
int3
add
and
cwtl
pop
in
arpl
xchg
or
imul
lock
filds
bound
xor
inc
or
fildll
mov
mov
jae
xor
cmpsl
fs
push
mov
or
mov
xor
cmpsb
popf
pop
xor
aaa
inc
notb
popf
sbb
clc
pop
lds
cmc
xor
push
or
pop
cmpsl
sub
popa
out
loope
fcmovbe
sarl
pop
sbb
in
out
inc
out
mov
mov
lcall
aam
popf
mov
hlt
mov
and
dec
and
icebp
cmc
push
stc
dec
xlat
lahf
or
mov
and
inc
in
lods
push
or
jbe
nop
jae
adc
je
or
add
sub
or
out
fisttps
pop
sub
xor
inc
push
sti
adc
mov
mov
and
push
push
dec
inc
fs
add
popa
jg
cmp
jb
enter
popf
fildl
mov
inc
xchg
pop
adc
xchg
mov
enter
int
enter
mov
das
mov
daa
popf
or
js
ret
xor
lds
push
jae
call
xchg
andl
lock
jp
outsb
xor
js
xchg
jle
std
into
cmc
add
push
out
push
xor
filds
push
je
pop
xchg
adcb
stc
fisttpll
test
add
xchg
mov
out
push
js
sub
sub
stc
sub
xchg
cmp
inc
fcoml
adc
inc
sbb
or
push
imull
or
mov
int
out
adc
xchg
dec
cmp
pop
loope
repnz
dec
xlat
lods
adc
adc
std
and
push
sub
xor
jb
add
mov
mov
sti
inc
xor
in
shll
mov
mov
cwtl
in
pop
sub
jp
mov
jecxz
xor
sub
cli
lret
cwtl
push
cs
data16
xor
repz
mov
outsl
mov
sbb
jbe
sbb
jb
fidivrs
pop
cld
rorb
sbb
stos
pusha
popa
pop
jle
mov
out
test
cld
pop
bound
xor
aaa
inc
ljmp
and
in
shlb
pushf
cmpb
cli
jae
clc
sbb
inc
pop
mov
loop
mov
push
mov
cmp
xchg
mov
cwtl
adc
enter
jae
rcrb
xchg
xor
lock
ja
test
lret
js
rcr
inc
mov
cs
mov
js
fimull
imul
lret
push
nop
adc
loope
rorb
jbe
leave
imul
daa
imul
sub
xor
add
push
xorl
inc
and
inc
outsb
sub
rorb
test
push
in
cwtl
pop
inc
push
xor
outsl
xchg
cmc
dec
inc
maskmovq
idivl
adc
jno
mov
pop
in
lcall
xchg
cmpsl
push
dec
jge
push
pop
scas
int3
lods
pop
jge
mov
sbb
cmp
lock
fiadds
fildll
xchg
mov
pop
mov
insl
xchg
imul
fnsave
repz
arpl
mov
rorb
xor
adc
fwait
js
fildl
lret
pusha
sub
aam
mov
aaa
shrb
mov
fdivrs
add
mov
sahf
xchg
inc
daa
jb
push
mov
dec
addr16
mov
jbe
dec
inc
pop
in
xchg
jo
scas
test
inc
mov
sub
inc
push
pusha
sbb
sbbb
leave
jno
punpcklbw
and
stc
aad
mov
adc
mov
rolb
fdivs
or
adcl
in
push
xchg
add
stos
icebp
shll
leave
push
call
inc
jno
push
lds
add
sub
imul
or
adc
jbe
loop
lahf
pop
sub
and
lahf
lahf
aas
mov
inc
fstpt
out
mov
sbb
or
xchg
dec
in
mov
xor
fstl
cmp
in
push
mov
pop
addb
ret
xor
stos
mov
call
int
and
push
push
andb
sahf
sbbb
sbb
int
pop
mov
inc
int
push
lea
imul
mov
xor
push
xlat
cmp
iret
xor
icebp
adc
jmp
js
inc
xchg
stc
leave
push
mull
dec
mov
xchg
xchg
ja
cmp
lret
cwtl
mov
sub
das
hlt
test
stos
sbb
jno
imul
faddp
sahf
pop
cmp
sub
jae
enter
push
pop
add
pop
pusha
cmp
add
jp
push
jbe
push
add
push
gs
fs
aaa
hlt
movsb
mov
push
sbb
mov
xor
sub
jl
sahf
sbb
daa
or
hlt
and
fisubs
mov
dec
pop
lcall
cmpsl
leave
xor
push
fmuls
inc
ss
in
cmpsl
lds
shll
cs
push
scas
std
xor
fsubp
lds
and
mov
jbe
jg
mov
das
xor
push
mov
xchg
popa
xchg
mov
cli
pop
je
jl
in
andb
aaa
cmp
fnstenv
push
cmp
pop
mov
data16
call
add
frstor
pop
xchg
mov
fwait
push
jb
in
inc
lods
mov
pop
sub
sub
mov
xchg
jl
in
lret
in
imul
mov
cli
js
out
mov
fwait
iret
out
stc
sbb
jo
pushf
sbb
push
int
fsubrs
inc
lock
mov
outsl
int3
push
pop
imulb
xchg
sub
pushf
mov
movsb
mov
scas
jns
loop
outsl
pop
sbb
ljmp
mov
inc
jle
sbb
xor
mov
sbb
repnz
cs
add
es
or
je
push
inc
mov
inc
cmp
add
cmp
lods
or
push
negb
dec
pop
inc
popa
mov
cmp
push
and
das
addl
jno
inc
xlat
or
dec
and
sub
in
push
stos
cmc
cmpsb
pushf
mov
inc
iret
mov
push
mov
pop
adc
mov
jno
imul
jns
xlat
push
xchg
test
jb
xor
jne
dec
popf
xor
ljmp
in
xor
loope
xor
jl
pusha
movsb
mov
push
inc
adc
xor
outsb
mov
add
fsubl
loop
std
notl
and
dec
dec
or
clc
jb
xchg
sbb
daa
mov
addr16
push
movsl
mov
sti
pop
dec
add
xchg
rcl
xlat
bound
outsb
nop
out
inc
add
ret
cmp
dec
aaa
or
daa
test
push
mov
mov
imul
xchg
outsl
adc
cmpsl
and
cs
and
lret
ret
ret
fisubl
push
fsts
jmp
mov
stos
mull
pop
aad
add
pusha
insb
bound
test
xor
repz
popf
ljmp
adc
xchg
add
pop
in
or
jbe
ss
repnz
add
test
stos
inc
mov
and
int3
dec
or
xchg
shll
pop
push
mov
xor
jo
fs
mov
out
addr16
jmp
sub
mov
dec
push
out
notb
mov
cmp
mov
lods
movsl
ja
and
sub
jno
movsl
and
lret
jmp
pop
pop
movl
push
push
and
cld
cmp
xor
sbb
xchg
fidivl
add
push
out
add
sbb
mov
xchg
and
in
jb
cmp
aad
mov
cwtl
dec
and
xchg
xchg
out
and
in
xchg
add
lods
sbbb
adc
inc
mov
cli
inc
cwtl
scas
test
in
push
fs
ss
push
pop
jnp
lea
in
push
or
test
add
iret
push
shll
jecxz
leave
adc
addl
jns
nop
sbb
push
ja
aaa
rclb
ljmp
fstpl
mov
subb
je
xor
divps
outsb
pop
imul
daa
push
mov
loop
insb
rorl
sub
mov
lods
sahf
xchg
jns
loopne
imul
dec
jno
sub
jns
pop
mov
popf
sbb
fistl
and
sub
outsb
pushf
jne
xor
pop
adc
fldcw
push
inc
ret
clc
popa
cwtl
dec
sbb
add
sbb
adc
aam
jmp
mov
push
push
xlat
sti
push
mul
je
jl
faddl
mov
aad
out
and
add
pop
xchg
leave
adc
inc
xlat
inc
ss
iret
push
int3
pusha
clc
rclb
inc
and
lahf
outsb
repnz
in
jmp
adc
ljmp
inc
rcrb
sarb
ret
cmc
xchg
sub
fsubrs
mov
mov
lea
or
fisubrl
mov
ret
ficomps
pop
mull
or
outsl
stos
je
xor
ficomps
add
rcll
loop
jb
add
ljmp
adc
cwtl
sbb
push
imulb
movsl
sub
push
lea
scas
sub
mov
pop
ficompl
push
mov
lds
clc
pop
cmp
les
in
leave
lahf
push
scas
daa
data16
fwait
sub
imul
push
data16
or
mov
aam
data16
add
lods
cmp
call
sahf
ja
ss
xchg
aas
out
call
add
mov
adcb
sahf
flds
pop
xor
repnz
push
and
scas
cmp
outsb
popa
hlt
outsb
out
notb
nop
xor
push
test
mov
mov
sbb
dec
dec
jp
dec
xchg
or
push
add
jmp
cwtl
fstpt
ljmp
loopne
fdivs
xlat
icebp
dec
xchg
jg
ret
aad
aaa
sbb
sbb
mov
hlt
mov
mov
cmp
add
lods
mov
pop
pop
scas
out
fildl
cmpsb
inc
popa
pop
jne
push
pop
insl
mov
inc
movsb
push
jne
jmp
pop
hlt
int
sbb
cmp
lcall
mov
rclb
test
add
sar
inc
loope
ficoms
shr
xchg
or
pop
dec
mov
ror
incl
add
pextrw
push
mov
dec
or
sbb
adc
xchg
pop
mov
fs
mov
sub
adc
inc
mov
pusha
js
and
mov
call
dec
xor
sbb
adc
stos
pop
imul
jns
dec
xchg
adc
repnz
notl
sub
mov
xchg
inc
ss
mov
sarl
stos
mov
add
mov
bound
lahf
cmp
dec
fdivrs
pop
push
imul
pusha
mov
rorl
insl
sbb
ficomps
lcall
pop
push
loopne
pop
mov
cs
fs
add
sti
jg
js
jo
dec
int
and
mov
mov
loop
fisubs
mov
xchg
fdivrp
std
data16
shrb
shlb
shlb
fidivrs
or
and
ss
cwtl
rcrb
lods
in
jno
into
xor
outsl
adc
add
adc
or
jo
dec
mov
nop
pusha
cmpsl
mov
sarl
setge
repnz
aad
xchg
in
cs
sub
dec
dec
leave
adc
test
das
inc
dec
add
inc
sbb
mov
ret
fistpl
test
and
scas
mov
int3
xchg
enter
push
test
mov
pop
pusha
out
fistps
sbb
adc
sub
popa
mov
cmp
mov
aad
add
add
mov
cmp
fistpll
sub
adc
sub
xchg
rclb
mov
test
lds
sub
sbbl
in
shlb
cmp
rclb
inc
kandnb
adc
dec
mov
dec
loopnew
js
lret
inc
adc
inc
jne
mov
sbb
add
push
std
xchg
ja
mov
sbb
rcr
nop
jbe
testl
sbb
lret
xor
loope
scas
inc
mov
xor
push
mov
fwait
stc
mov
loope
pop
test
cmc
and
pop
and
jns
xchg
xor
clc
sarb
imulb
push
popf
dec
jp
insb
sub
sub
push
and
pop
push
les
callw
cmc
xchg
add
rcll
and
imul
std
mov
pop
jne
or
pusha
ss
and
scas
push
adc
cmpl
testb
dec
adc
bnd
sub
jp
add
insb
mov
and
sub
xor
push
pop
pmaxub
cmp
cmp
and
outsl
and
mov
cli
test
cmpsl
or
leave
jg
dec
or
xchg
inc
lcall
cmp
sbb
xchg
inc
into
out
sbb
imull
or
es
fwait
arpl
add
filds
add
cld
faddl
push
hlt
rorb
outsb
stc
lods
jl
popf
sbb
int3
push
or
shlb
push
add
sbb
mulb
inc
insb
mov
cwtl
mov
repnz
repnz
lret
mov
and
jns
or
je
lods
adc
mov
fwait
xchg
imul
sub
jg
or
mov
pop
lahf
xor
and
rcrb
jge
xorb
adc
sbb
push
and
pop
push
adc
sub
sti
cli
xlat
inc
scas
mov
adc
addr16
add
in
and
mov
or
pushf
insl
bound
inc
int3
outsb
js
sahf
inc
or
mov
inc
mov
shrl
adc
or
outsb
jle
movsl
mov
dec
or
adc
add
test
adc
adc
jns
rcrl
push
jo
cmp
mov
idivb
rcrl
adc
lods
sahf
dec
mov
movsb
std
shrb
mov
lock
popa
out
cmp
mov
pop
insl
xlat
rorb
adc
mov
inc
mov
insb
xor
adc
sub
and
sbb
fidivrs
mov
in
cmpsl
in
loopne
sub
mov
mov
xchg
insb
jge
jmp
dec
pop
call
adc
adc
bound
jmp
pop
inc
roll
fnsave
stos
sbb
stos
mov
fnstenv
push
push
fstp
lahf
mov
lods
pop
jns
out
cwtl
cmp
std
movsb
fwait
enter
mov
and
xchg
jge
xchg
inc
cltd
cmp
jo
sub
dec
jecxz
lea
mov
ror
cmp
cmovne
sahf
in
or
dec
iret
jge
pusha
push
sbb
daa
cmc
inc
or
push
add
outsb
mov
ret
fucomp
test
jnp
cmc
xlat
xor
inc
or
xchg
je
loope
xchg
punpckldq
ret
bound
dec
push
rorb
loop
data16
out
jb
fisubrs
xchg
into
data16
decl
insb
dec
je
arpl
mov
adc
lods
cmpsb
cmpsl
lea
inc
lods
cli
push
inc
jmp
repnz
mov
cmp
mov
rolb
inc
pop
cmp
pusha
and
repz
fwait
je
dec
ja
movb
lahf
push
roll
jnp
ret
inc
iret
cmp
cmp
cwtl
sub
and
lods
jbe
pop
xor
arpl
rcrb
ficoms
aaa
and
setp
lret
sub
mul
movsl
repnz
inc
mull
enter
mov
in
jge
cmp
inc
adc
orb
jne
jle
mov
or
lcall
pop
loopne
sbb
xor
dec
sub
xchg
insb
cmc
aaa
andb
jmp
dec
test
jnp
mov
jmp
div
aam
mov
xor
adc
lahf
jmp
sub
sbbb
loop
pop
pop
lds
test
xchg
int
jmp
xchg
lds
or
imul
and
jbe
addr16
shlb
push
lods
and
insb
cmp
paddusw
pop
test
push
pop
hlt
or
dec
sub
int3
jp
push
or
add
adc
movsl
xchg
loopne
rep
jle
mov
add
cmp
xchg
push
pop
jb
lods
mov
cmp
xchg
arpl
inc
sbb
fwait
push
or
add
mov
je
mov
pop
pop
cli
dec
stc
xchg
sbb
fbstp
fildll
cwtl
adc
iret
sbb
jg
stos
xchg
sub
xor
addl
movsb
xor
nop
lahf
es
dec
loopne
leave
or
and
or
add
add
pop
popf
imul
sub
movsl
cltd
ficompl
jo
xchg
cmpsb
pop
push
les
dec
mov
pop
or
nop
jle
rclb
xchg
push
inc
sbb
mov
movsb
jmp
mov
int3
dec
mov
insb
aaa
cs
nop
xchg
jnp
xor
cmp
je
scas
aas
fadds
scas
ja
inc
or
mov
push
pop
scas
jmp
push
je
mov
dec
les
jns
adc
or
sbb
inc
xor
inc
push
jno
and
repz
in
cmpsl
cmp
cmp
xor
jmp
out
stos
lea
daa
out
cmp
mov
scas
fs
gs
add
push
lods
sti
ss
adc
loopne
mov
orl
inc
push
xor
imul
inc
leave
inc
xor
pusha
pusha
or
or
in
ret
mov
cmp
mov
dec
cmpsb
fcoms
jne
sbb
cld
ja
pusha
aad
cmp
popa
jnp
sub
cmp
push
repz
or
mov
frstor
lret
shl
jne
add
pop
in
lret
fnstenv
mov
addb
daa
cs
sbb
sub
cltd
fcoml
sub
fwait
shrl
dec
mov
sbb
icebp
cmp
mov
fwait
mov
cmp
cli
das
xor
cmp
lock
cmp
clc
into
dec
adc
jo
push
fwait
push
xor
sarl
xor
adcl
push
mov
dec
iret
mov
jae
xor
insb
lahf
rorb
mov
aas
out
pop
ja
int3
pop
fdivp
dec
lods
or
mul
xchg
ss
aaa
mov
sbb
adc
mov
gs
ja
notl
iret
mov
sbb
pop
enter
pop
repnz
ljmp
push
push
cmp
mov
pop
js
jno
adc
imul
inc
stc
test
fwait
mov
insl
add
or
cmp
dec
dec
inc
pop
xchg
jecxz
in
jp
push
sbb
nop
cmp
lcall
cmpsl
add
jmp
call
movsb
jae
lock
mov
dec
orl
adc
jbe
fldl
lahf
cmpsl
lahf
sub
neg
or
jecxz
adc
call
in
xchg
jp
aam
rol
or
nop
add
add
pop
and
cwtl
subb
dec
push
loope
pop
fidivl
ret
and
or
fdivr
loop
xchg
sbb
jl
xchg
outsl
mov
xchg
xchg
mov
in
lods
pop
ljmp
movsl
je
mov
push
outsb
hlt
mov
sbb
inc
loope
push
mov
iret
sbb
xchg
push
pushf
adc
add
enter
call
jl
adc
jge
mov
mov
push
int
or
sahf
loope
stos
mov
adc
call
dec
ficoms
inc
or
mov
aaa
sub
xor
or
and
lock
adc
loopne
aad
adc
adc
push
sbb
push
pop
insl
loop
outsl
in
pop
mov
sub
inc
imulb
pushf
negl
mov
xor
nop
aam
scas
sub
sbb
ficoml
sbb
pop
in
mov
sbb
and
fst
jno
idivl
cltd
dec
push
dec
jns
lret
jno
jg
sub
pop
pop
jecxz
aad
inc
fs
adc
add
mov
push
mov
pop
mov
movsb
or
sbb
jmp
cmpsl
sub
dec
lock
adc
lret
scas
out
mov
or
leave
sbb
hlt
jo
sub
sbb
pop
pop
sbb
imul
or
aas
push
adc
cld
fsubrs
loope
das
das
add
repz
lods
push
scas
subl
jmp
adc
jl
andl
xor
push
pop
pop
or
or
ret
inc
pop
mov
mov
jg
aam
xlat
sub
call
sub
jecxz
gs
or
in
pop
pop
lds
icebp
add
cli
cmp
popa
les
pop
iret
inc
pop
or
or
pop
jo
sbb
add
or
into
sbb
sti
push
test
lods
outsb
dec
insb
or
divl
es
fs
insb
xor
sbb
test
inc
movsb
jb
repz
fisttps
xor
pop
cmp
adc
push
inc
jp
insl
jp
cmp
and
lret
xor
int
push
sbb
push
xor
add
sbb
int3
cmpsb
pusha
xchg
push
jle
dec
inc
mov
js
jp
les
out
xor
ret
mov
iret
and
imul
loope
cltd
aaa
adc
sbb
sub
outsl
push
clc
cwtl
jp
push
or
sub
xlat
fsts
and
xchg
inc
dec
jge
fcmovu
rclb
outsl
adc
mov
jo
pop
in
pop
je
not
mov
add
dec
dec
out
jno
fidivrl
and
xchg
fisubrl
mov
movsl
pop
sbb
enter
fwait
aaa
sarl
dec
xchg
jp
jge
jnp
pop
xor
mov
shlb
inc
xchg
mov
fstpl
push
cmpsl
scas
mov
mov
jo
mov
xor
call
mov
lahf
and
shl
jo
sub
cli
sbb
cmc
mov
mov
in
das
test
std
xchg
hlt
out
lahf
sbb
xchg
sbb
inc
out
inc
jp
int
dec
ja
xchg
in
loop
mov
stos
orb
rcrl
dec
xor
into
popa
dec
test
cmp
aas
dec
sahf
mov
mov
pusha
iret
push
mov
subb
ljmp
flds
sbb
sub
ret
nop
adc
adc
push
mov
lods
aas
jle
lods
push
mov
roll
test
cmp
jecxz
lret
je
and
lods
rcl
and
out
add
test
test
mov
and
adc
stos
bound
xchg
mov
inc
dec
ljmp
adc
lcall
insb
or
push
bound
mov
inc
and
es
sub
push
in
or
add
jg
mov
fsts
xor
out
mov
out
push
or
pop
cli
out
lods
addr16
dec
fistpll
push
jmp
les
sbb
adc
push
sub
mov
mov
pop
inc
addr16
sub
xchg
rorl
pop
mov
push
ja
lods
adc
cmpsb
or
pushf
cs
daa
into
or
ja
movsl
adc
inc
test
push
ljmp
cmp
xlat
or
jle
pop
xor
xor
push
xor
xchg
test
xorb
outsl
or
cli
and
push
dec
sbb
out
dec
incl
pop
das
add
loopne
add
ja
lea
or
mov
std
out
cmp
test
clc
pop
les
insl
into
adc
jns
sar
outsb
mov
divl
repnz
mov
rcll
add
pop
jmp
push
loope
aam
enter
push
ljmp
sbb
fisubrs
das
dec
mov
aaa
cs
pop
mov
mov
stos
sub
bound
add
adc
xchg
ficoml
cli
push
jb
out
fidivrl
or
push
clc
cld
push
or
or
mov
shll
mov
xor
fiadds
fmulp
out
out
fs
add
stos
xchg
push
xor
aaa
ret
cltd
add
and
es
int3
mov
xor
sub
mov
mov
adc
adc
mov
popa
ss
in
jae
xchg
repnz
pop
popl
hlt
cs
loope
test
cs
dec
jae
add
popf
mov
mov
dec
add
inc
sahf
orb
dec
adc
into
je
inc
mov
test
enter
push
or
pop
adc
loop
mov
test
clc
lea
fs
or
std
call
pop
add
pop
std
push
pop
push
jo
mov
or
jb
mov
repz
int
or
or
adc
stos
test
fwait
cs
fwait
dec
adc
es
cs
fstl
filds
leave
fwait
ljmp
jno
xchg
mov
push
pop
mov
cli
push
mov
in
in
cmp
pop
insb
jp
out
jg
fwait
push
fcmovnbe
sbb
fstpl
pushf
jb
ja
xchg
test
loopne
dec
push
xchg
inc
sbb
clc
cld
imul
jne
clc
cld
and
adcb
ret
or
inc
cmpb
fidivrs
sub
loop
rclb
add
popa
movsb
ficompl
sbb
leave
inc
or
stos
fucomip
stc
cmp
jmp
push
repnz
daa
or
sbb
fisttpl
icebp
push
pop
push
lret
cmp
and
mov
jg
je
jl
jle
push
xchg
xlat
pop
sbb
insb
sysenter
inc
xor
sub
loop
iret
and
dec
mov
fucomi
repz
jle
out
lcall
jg
in
inc
jae
insl
or
or
stos
orl
lds
jo
scas
int
jbe
mov
dec
aaa
push
aam
int3
cmc
js
jge
aas
popf
lods
shrl
pop
sub
lahf
je
jnp
mov
into
lds
push
xchg
mov
fadds
fs
shlb
ret
dec
imul
ds
pop
insb
xlat
jbe
pop
fimull
andl
movntq
out
xchg
sbb
cld
movsl
xchg
add
lods
test
sub
dec
cmp
push
adc
jne
mov
sahf
cs
dec
push
mov
cld
inc
lret
xor
lods
loope
icebp
or
or
mov
fwait
jg
cmp
sbb
aam
sarb
jle
cmp
push
lods
test
pushf
mov
lcall
push
xchg
dec
jno
jns
nop
xor
rcll
and
inc
sti
icebp
popf
lret
dec
popf
rclb
mov
sbb
dec
hlt
pop
inc
arpl
ret
xchg
and
mov
inc
pop
loope
icebp
fwait
xor
in
test
lret
clc
xor
pop
cmp
inc
inc
test
fstps
cmpl
in
rcl
mov
std
mov
xchg
pop
int
cs
jne
mov
cmp
ret
clc
xchg
or
fwait
xor
ds
sti
xor
jnp
jbe
sbbl
push
and
lret
push
sub
dec
jnp
cmpsb
shll
enter
in
in
pop
cld
test
bound
sbb
jp
xor
add
jecxz
xorl
iret
aas
ds
loope
fstl
mov
xchg
stos
sbb
bound
xchg
jns
adc
scas
js
push
jecxz
or
push
les
jnp
fcmovne
and
push
or
sahf
mov
jb
sbb
scas
lcall
mov
push
ret
jg
or
add
mov
pop
cmp
cmpsl
mov
push
lods
xlat
lods
mov
mov
movsl
and
rcrb
imul
add
in
or
xchg
dec
push
dec
add
ds
cwtl
ss
add
rorb
lods
sbb
cmc
push
lret
mov
pop
in
data16
jmp
jae
push
fwait
sub
jne
adc
dec
andb
cmpsb
ret
test
fisttpl
pop
enter
ljmp
imull
sbb
xchg
sub
or
and
pop
aad
popf
and
mov
xchg
sbb
movsb
push
mov
lods
insl
mov
inc
mov
or
xchg
dec
pop
out
mov
adc
xchg
out
stos
jnp
clc
ds
js
sbb
xor
cs
xchg
testl
scas
push
pop
pusha
lret
cli
jb
das
jnp
aaa
out
jne
popf
int3
hlt
test
inc
call
mov
or
cmp
inc
in
hlt
pushf
data16
ljmp
subb
shlb
data16
dec
test
test
mov
shl
jno
mov
mov
and
inc
in
or
dec
or
hlt
hlt
imul
adc
sub
cmp
adc
xchg
cmpsb
rclb
call
sbb
jp
push
mov
aas
xor
dec
jp
or
pushf
or
fildl
jge
insb
pop
pop
outsb
xchg
jl
pop
dec
nop
adc
and
and
aad
dec
jnp
mov
cmpsl
mov
sbb
mov
push
push
adc
sub
and
adc
push
mov
pop
test
cld
xchg
shl
aad
jno
repz
lcall
and
call
inc
pop
stc
outsb
push
daa
dec
mov
mov
and
xchg
sbb
push
cmpsl
loop
loop
fbld
push
ficompl
push
into
aas
inc
popa
outsl
mov
cmpsb
into
dec
sti
movsl
jbe
adc
scas
fmulp
aas
sbb
push
lock
or
fnsave
pop
mov
js
cmp
push
jnp
inc
add
cmpsl
ljmp
ss
cltd
sub
inc
leave
adc
std
mov
incb
repz
fbstp
xchg
jns
and
fldcw
lret
ds
jp
mov
mov
fdivr
and
fisttpll
mov
lahf
sbb
mov
ss
mov
repnz
js
jbe
add
dec
and
mov
push
out
popa
sbb
mov
jl
add
add
mov
jge
or
leave
cmp
add
clc
push
push
push
out
jbe
mov
sub
xchg
sub
lods
add
orb
xlat
sti
push
push
leave
shlb
sub
aas
mov
rol
cmp
stos
cmp
js
mov
gs
testb
lea
xchg
cs
mov
mov
frstor
xchg
jbe
cmp
es
insb
adc
add
lea
int
mov
dec
pop
cmc
arpl
jo
pop
in
jmp
scas
enter
pop
rcl
jne
pop
cmp
jle
inc
push
out
dec
push
mov
call
mov
icebp
aas
sub
in
or
in
outsb
icebp
xor
rolb
jecxz
pushf
and
movsb
cmpsb
test
inc
adc
xchg
bound
xor
insl
push
mov
xchg
loope
push
push
dec
jge
gs
cmp
aaa
mov
pop
and
aad
mov
sub
xchg
cmp
je
lea
in
add
inc
xor
das
cmp
mov
or
imul
dec
test
or
jge
add
sbb
xor
adc
xchg
sub
mov
pop
insl
cmc
push
test
popf
in
outsl
inc
lea
dec
jne
lret
mov
jae
push
add
lock
xor
add
xor
fisttps
rolb
neg
ds
mov
test
pop
mov
adc
mov
inc
stc
push
clc
inc
push
xchg
pop
bound
mov
call
mov
jns
jg
fdivrs
or
add
sbb
mov
test
pop
fiadds
stc
jmp
addr16
pop
add
nop
push
mov
push
ficoms
xchg
inc
dec
mov
cwtl
int3
lds
into
mov
xor
stos
sub
dec
xor
jl
and
fists
and
jne
inc
mov
xor
jecxz
cmp
test
pushf
fmuls
in
loope
cmp
stos
mov
or
pop
inc
ficoms
sub
add
sbb
dec
in
xchg
out
outsl
mov
mov
jl
pop
movl
scas
cmpsl
add
std
adc
inc
xchg
xchg
mov
in
sbb
fmull
roll
out
inc
push
push
and
xor
in
shrl
pop
daa
jge
rcrl
jns
adc
xor
pop
cmp
out
sbb
push
cld
insb
dec
sbb
pop
mov
clc
jne
jbe
inc
adc
mov
inc
pop
ficoml
xchg
sbbb
push
sbb
mov
pushf
sbb
dec
dec
cmpsb
pushf
pop
push
fiaddl
or
or
fldenv
lahf
rcl
lcall
inc
pop
je
in
sbb
pop
shrl
aam
xor
mov
popa
sbb
in
add
xchg
or
push
outsl
test
das
repz
movsl
add
jg
and
and
in
jl
js
adc
stos
scas
xorl
fwait
mov
mov
lds
and
jecxz
rcrb
cwtl
insb
ret
fwait
push
inc
nop
xchg
jp
jo
hlt
sub
xlat
test
lds
daa
mov
ficompl
xchg
push
repnz
jmp
lock
pusha
mov
in
or
and
dec
scas
push
pop
cmp
jbe
loop
out
mov
sub
mull
cmp
pop
xchg
xchg
fwait
ljmp
imul
sub
add
sbb
cmpb
add
mov
dec
jo
orb
sub
xchg
jno
push
popf
test
jbe
sub
xlat
jo
scas
xor
arpl
addr16
hlt
push
dec
dec
stos
leave
outsb
repz
lods
xchg
cmp
inc
das
xor
enter
jo
push
cmpsl
push
push
imul
or
push
sub
dec
and
outsb
lret
sub
das
mov
mov
subl
sbb
adc
aaa
dec
sub
daa
mov
sub
mov
ds
push
add
and
fmul
clc
xchg
jp
sbb
mov
test
sbb
xchg
shr
and
test
lret
cltd
jge
outsl
mov
adc
in
sub
shrb
cmp
xor
test
push
data16
inc
stos
cmp
xorl
sbb
into
jae
and
icebp
pop
pop
rcll
jmp
ficomps
loopne
insb
out
rcrl
xor
lcall
mov
jecxz
repnz
test
jecxz
test
sbb
cld
sub
scas
push
cs
out
cmp
lret
frstor
mov
cmp
xchg
add
mov
outsl
or
pop
scas
jo
imul
inc
insb
cmp
cmp
movsb
les
or
mov
inc
repz
stos
or
test
lret
adc
adc
das
cltd
mov
sbb
sub
fmuls
fldenv
sbb
lcall
nop
test
xor
pop
ss
push
jo
test
mov
mov
ds
sti
mov
sub
sti
xchg
mov
popa
inc
ret
leave
xchg
test
xchg
bound
rclb
call
and
dec
mov
mov
call
or
rolb
clc
push
aas
scas
int
or
dec
xor
mov
dec
imul
leave
add
inc
cmp
xor
fwait
jo
nop
mov
or
jge
push
sub
lea
int
cmpsb
in
and
rorl
scas
cmp
dec
push
xchg
fstpt
in
not
xlat
jne
scas
pop
lret
into
adc
and
es
cltd
add
add
int3
mov
movsl
jle
in
mov
pop
or
repnz
mov
or
inc
mov
push
adc
mov
imul
into
cmp
push
cmove
inc
inc
inc
aam
sti
imul
in
dec
movsb
push
aas
add
push
sti
addr16
sub
leave
cmpb
fwait
loopne
xchg
mov
pop
stos
mov
xor
lods
sub
xchg
cmp
mov
js
and
jl
and
bound
lods
and
lods
inc
sub
mov
inc
lods
mov
lldt
dec
popa
inc
lcall
jmp
mov
shll
xor
pop
aas
sub
ret
adc
mov
jmp
inc
inc
push
jbe
inc
and
push
sahf
fiaddl
xlat
enter
ss
out
push
mov
mul
push
push
jl
jbe
mov
mov
jo
das
int3
cld
sbb
inc
adc
jge
pop
adc
and
dec
cmc
decl
push
jns
xlat
fwait
jo
or
add
shrl
mov
push
fisttpll
lcall
push
and
ror
dec
mov
or
lock
mov
adc
in
dec
imul
push
ds
sbb
and
into
popa
and
sbb
jle
scas
stos
push
out
movsb
aaa
add
sub
push
mov
push
cmpsl
mov
add
sub
fdivp
inc
cmpsl
push
xlat
mov
stos
cmp
addr16
inc
cs
sbbl
in
in
pop
movsb
outsb
mov
sbb
adc
jp
sub
xchg
imul
ds
gs
sbb
ds
pop
mov
stos
stos
push
mov
mov
inc
inc
cltd
push
sub
lret
sarb
outsl
xchg
sbb
cmc
add
pop
test
icebp
outsl
sbb
push
lea
popa
lea
push
aas
push
movsb
dec
jp
repz
out
mov
mov
or
rcr
push
cmp
cs
xlat
aas
andl
jle
lret
lock
xor
pop
cmp
mov
stos
rolb
call
faddl
sbb
rorb
or
adc
pop
pop
and
and
shlb
dec
push
bound
divb
and
push
roll
mov
and
int
fsubrs
popf
mov
ret
inc
in
fcomp
icebp
jbe
into
pushf
lods
and
mov
popa
cmc
cli
cld
mov
les
rorl
mov
add
out
xor
pop
push
addb
sahf
mov
dec
sbb
sbb
movsl
xchg
cmpsb
pop
loopne
push
jno
andl
xchg
int3
cmpl
jnp
std
pushf
lret
add
dec
out
cmp
mov
in
mov
insl
jbe
sti
push
faddl
sub
jp
sahf
rcrb
loopne
stc
jmp
adc
lods
inc
cltd
and
shll
sub
xchg
cs
insb
and
negl
movzwl
shr
popf
shlb
dec
mov
cmpsb
lea
push
lcall
mov
popl
movsl
sub
xor
dec
dec
push
sahf
cltd
inc
ds
sub
dec
repz
xor
jbe
arpl
add
sbb
mov
or
shr
fucomp
jns
cld
sbb
cmp
into
mov
rol
push
lcall
fldl
cld
add
mov
mov
lcall
xchg
sub
mov
mov
pop
int
jecxz
scas
ret
mov
cwtl
inc
cmp
or
out
int
sub
pop
mov
or
lcall
inc
sbb
ss
adc
rorb
dec
add
loope
lds
xchg
pop
fdivrp
das
push
addr16
out
add
add
mov
in
jae
pop
loop
inc
gs
mov
pop
lcall
mov
cwtl
or
cs
fdivl
and
xor
mov
xor
jo
jp
mov
bswap
jl
ficompl
cwtl
ss
testl
or
or
jnp
adc
cwtl
or
cli
imul
std
jecxz
cmp
pop
inc
int3
fistps
jmp
pop
pop
popa
inc
dec
orb
pop
sbb
cmpsb
sub
dec
divl
dec
cli
mov
insb
sbb
cwtl
stos
test
and
jmp
popf
jns
pop
adc
xchg
or
ja
sbb
add
hlt
sub
adc
sti
in
pop
pop
nop
movsb
and
shll
sbb
aad
xor
fimull
aas
mov
lea
pop
cmc
push
inc
imul
push
pop
pop
and
shlb
xchg
jmp
and
mov
xchg
ret
cmp
lods
cltd
pusha
mov
ss
or
or
adcl
loope
inc
xchg
mov
xor
sub
xor
sub
mov
jle
pushf
xor
jo
mov
sub
mov
add
sahf
and
add
fs
in
jns
jne
dec
push
push
dec
iret
pop
lcall
movb
jge
xchg
and
or
sub
testb
jp
add
std
test
add
sbb
xlat
push
xor
hlt
add
jnp
xchg
cmp
call
jnp
push
lcall
aaa
jb
push
mov
mov
fsubs
and
pop
dec
jl
rcr
cmp
fs
dec
dec
loopne
movsb
fs
jge
adc
push
ret
cmpsl
cwtl
cmp
cmp
fidivrs
mov
fcoml
cmpsl
scas
and
out
test
and
push
es
mov
dec
fwait
dec
bound
xchg
inc
and
stos
push
and
inc
or
fmuls
loopne
add
cmpsb
movsb
mov
daa
gs
inc
mov
scas
pop
xchg
cmpsl
addr16
loop
lds
adc
dec
add
mov
cmp
fistl
fisubl
sbb
xor
push
dec
sbb
push
push
mov
jno
daa
xorb
push
add
sub
adc
sub
jecxz
add
enter
sar
lock
and
int3
leave
jb
pop
out
cmp
popa
xchg
out
xor
xchg
pop
pop
pop
aam
js
sbb
pop
or
aas
or
in
enter
xchg
nop
and
inc
push
out
adc
lea
push
outsb
cmp
incl
mov
jno
data16
xor
mov
xor
xchg
dec
adc
scas
pop
inc
pusha
stos
or
mov
mov
mov
daa
ds
imul
adc
dec
jmp
cmp
jbe
pop
sbbl
stc
or
push
addl
test
sbb
xlat
push
repz
jge
pushf
mov
aas
or
adc
sti
xchg
sahf
mov
sbb
pcmpgtw
insb
xchg
test
fldt
or
fwait
dec
repnz
in
sub
jno
mov
ljmp
xchg
cmp
lods
inc
int3
add
data16
xor
cs
cmc
mov
cmpl
pop
sbb
mov
jle
enter
sub
sahf
cmp
cmc
outsb
xchg
mov
or
scas
mov
lods
or
fbld
mov
fidivl
filds
lods
and
imul
lret
pushf
and
mov
xchg
mov
imul
inc
inc
mov
jg
xchg
leave
fwait
sbb
mov
stos
push
adc
pop
mov
jge
lcall
stc
fneni(8087
test
lods
mov
call
roll
push
mov
dec
in
ljmp
into
push
addr16
lock
cmp
mov
jge
xchg
cmp
int3
add
into
sbb
pop
mov
push
scas
sbb
xchg
push
jge
repz
cs
pop
mov
pop
adc
mov
inc
stc
pop
inc
clc
data16
sbb
mov
and
cmpsb
cmp
leave
jns
xor
mov
movsb
notb
cld
mov
loopne
xchg
outsl
inc
and
sub
cmp
pop
insb
pusha
test
mov
push
fldl
xchg
out
mulb
cli
inc
xchg
sub
rorl
insb
ret
movsb
into
push
sub
jecxz
pop
sub
std
aam
sarb
sub
insb
aad
jmp
adc
stos
or
insl
mov
adc
jg
inc
pop
movsb
movb
jb
and
cmp
fs
sbb
sub
xor
hlt
enter
jns
jbe
sar
mov
jle
gs
pop
rcll
adcl
xor
and
iret
adc
imul
push
add
xchg
inc
xor
cmpsb
test
push
and
sub
inc
fs
punpcklwd
mov
mul
sbb
leave
adc
movsb
repnz
push
push
dec
jnp
rcl
mull
cmp
test
xchg
xor
and
imul
lcall
adc
xor
jae
sbb
les
inc
pop
push
bound
push
aam
dec
js
test
mov
outsl
mov
mov
pop
dec
push
enter
cltd
or
stos
es
sub
jle
dec
push
jno
pop
jnp
js
push
movsl
pop
add
out
and
jecxz
psubw
mov
negl
popa
dec
cltd
xchg
jg
cmp
ss
xor
frstor
push
iret
movsb
pop
int3
xor
xchg
mov
push
xor
bound
out
in
xlat
neg
inc
sbb
sbb
xor
aas
pop
jmp
mov
add
lods
sbb
dec
or
lods
mov
hlt
lock
filds
adc
fwait
das
and
mov
mov
jno
xor
mov
mov
es
mov
or
lea
pop
mov
push
test
inc
ficompl
mov
push
sarb
dec
adc
imul
add
dec
movsl
addr16
xchg
scas
push
lds
pop
or
lret
lret
xchg
fldcw
test
and
xchg
jle
mov
mov
jnp
int
dec
mov
aas
and
sub
clc
jmp
dec
xor
imull
pop
xor
or
add
mov
push
out
aaa
into
lcall
out
jge
mulb
mov
stos
hlt
lock
ljmp
pop
pop
or
movsl
je
mov
adc
ret
xchg
ds
mov
clc
sub
lods
ret
xlat
jp
fsubrs
fcmovnu
inc
mov
movsl
sub
mov
mov
mov
mov
jle
jle
cltd
and
dec
or
mov
aaa
out
jae
sub
mov
cmp
sub
or
pop
xchg
xor
xor
fwait
int
cmp
gs
lret
xchg
sub
cmpl
clc
movsb
mov
inc
push
in
cli
inc
rorb
jl
fadd
xchg
mov
mov
xor
std
mov
daa
daa
aam
jp
push
inc
mov
cmp
es
pop
std
dec
dec
fistl
inc
fisubrl
push
lret
test
imul
adc
fwait
pusha
rcll
ror
shll
xchg
add
sbb
push
adcl
aad
inc
pusha
inc
add
dec
clc
jge
lcall
fstpl
push
imul
inc
mov
adc
sub
and
cwtl
clc
rol
mov
pop
cwtl
orl
cld
ret
mov
add
adc
dec
je
or
dec
das
sbb
adc
daa
xchg
or
loop
xchg
lret
and
xlat
add
iret
and
bound
test
test
xchg
xor
dec
dec
imul
xchg
stos
test
fstps
mov
sub
add
pop
fwait
insb
xchg
sub
fwait
scas
leave
stc
mov
fcomps
icebp
adc
pop
pop
mov
mov
adc
nop
pop
xor
int3
lahf
scas
fidivl
test
xchg
outsl
aam
xchg
mov
jg
inc
in
sbb
repnz
jl
add
cltd
cmp
mov
sbb
icebp
outsb
loope
pop
je
scas
add
testb
xchg
dec
loopne
mov
movl
jecxz
in
cwtl
test
ds
out
xchg
std
pop
rcrl
aad
mov
xchg
movsl
mov
and
adc
inc
mov
pop
rcrb
or
fisttpl
fsub
adc
xchg
add
mov
and
shl
ret
js
sub
push
adc
pushf
push
dec
outsl
xchg
in
imul
xor
inc
cmp
jo
mov
ljmp
sbb
jno
mov
cmpsb
incb
mov
test
ja
testl
in
aad
outsb
or
sbb
pop
insb
adc
push
in
lret
or
xchg
mov
add
shll
movsb
stc
cltd
aad
adc
xchg
cld
push
pop
vpmacswd
movsb
sub
add
std
enter
and
sarl
sbb
cmc
adc
and
cmp
pop
jo
adc
jno
add
jg
mov
adc
mulb
xor
popa
jnp
adc
test
outsl
clc
test
jnp
sub
lds
push
sub
movsl
pop
mov
ds
sub
adc
xchg
jl
arpl
xchg
insb
lahf
ja
les
mov
or
roll
dec
roll
divl
imul
icebp
cli
xchg
xlat
pop
imul
xlat
mov
adc
cmc
and
add
sbb
lods
xchg
pop
mov
pushf
sbb
das
xchg
call
push
out
loope
mov
out
or
scas
jl
sbb
xor
insl
leave
xchg
dec
jbe
add
aaa
jmp
clc
cmp
pop
dec
mov
xchg
loope
xlat
jb
pop
cmp
pushf
fisubrs
pop
popf
cmp
mov
push
inc
sti
xchg
std
and
into
addr16
xor
rcll
mov
pop
sbb
jne
fidivrl
out
jmp
nop
aad
lea
test
lret
repz
loope
in
or
mov
mov
subl
jmp
mov
pop
mov
sub
fs
push
divb
loopne
imul
dec
xchg
inc
sub
mov
ljmp
jecxz
adc
xor
jns
mov
sbb
jb
nop
mov
inc
cmp
dec
and
pop
imul
or
ljmp
add
int3
out
mul
cmp
cld
pop
xor
xchg
mov
mov
inc
js
test
xchg
jno
mov
mov
test
lahf
scas
bound
add
mov
mov
sbb
pop
and
test
cli
scas
jg
scas
sarl
jbe
sub
cmc
in
jb
and
mov
cmp
pop
push
add
sbb
pop
in
std
test
add
aam
mov
or
flds
xchg
pop
mov
call
and
add
js
adc
xchg
movsl
adc
arpl
xchg
xchg
pushf
pop
aas
shr
xchg
or
cmpsl
ja
push
push
aas
xorl
test
jbe
lea
mov
insb
flds
jp
cwtl
push
pop
and
insl
paddq
imul
in
movsl
add
xor
test
mov
dec
mov
insl
push
adc
jno
gs
mov
jb
fdivrp
into
sub
shll
and
js
aaa
jno
inc
int3
adc
and
jl
clc
mov
sub
xchg
dec
push
dec
incb
sub
test
mov
fsubrp
orl
leave
adc
mov
fcoms
bnd
stos
dec
adc
gs
push
imul
adc
out
push
jl
cld
fstpl
sbb
pop
decl
mov
cmp
push
sub
xor
stc
test
test
cmp
imul
mov
scas
xchg
inc
call
sarb
bound
sub
in
push
xchg
lds
pop
sub
and
fiaddl
or
push
jns
mov
jp
daa
sbb
ret
das
mov
jbe
pop
inc
cmp
rorl
roll
push
insl
mov
dec
dec
mov
and
pop
rolb
fisttpl
sbb
stos
jmp
adc
in
leave
xor
aas
add
pop
pop
add
scas
cli
aas
sbb
cld
je
sbb
and
push
test
add
int3
subl
mov
or
into
mov
xchg
mov
add
aam
sub
adcb
aad
out
mov
jmp
fldl
loopne
or
movsl
sahf
cs
aaa
dec
mov
hlt
jl
mov
xor
pop
jmp
mov
or
gs
cmp
mov
cli
jno
mov
or
fisubrs
sarl
scas
add
lret
inc
arpl
int
dec
mov
stc
fnsave
push
fwait
or
sub
push
stc
xor
mov
inc
dec
dec
lret
or
inc
cmp
imul
adc
cmp
mov
xor
sti
andb
xchg
mov
inc
jo
push
fsub
sub
or
push
fwait
gs
je
add
int
push
rorb
pop
enter
hlt
mov
pop
into
je
jmp
and
push
jnp
repz
mov
dec
push
outsb
movsb
push
or
fadd
xlat
jo
jb
xchg
mulps
xorb
mov
inc
pop
mov
imul
push
addb
xor
aaa
in
add
aas
cmpsb
push
addr16
push
mov
xchg
jmp
addl
jle
rorb
jmp
lcall
jp
mov
xlat
lock
mov
int
sbb
imul
jno
mov
adc
ljmp
fwait
xor
sbb
das
rclb
shrb
clc
jnp
dec
xchg
fwait
xlat
stc
daa
add
fldt
int
aad
mov
std
jbe
xchg
loope
jle
jne
sbb
dec
sbb
fwait
adc
test
inc
mov
bound
dec
lods
mov
jnp
ds
nop
out
repz
cmp
add
mov
orb
fadds
dec
and
push
mov
and
pusha
xchg
mov
loope
rolb
sar
ret
mov
sub
push
out
imul
cmpsb
dec
fnstcw
jl
xchg
and
xchg
popa
jmp
loope
or
and
imull
xlat
dec
mov
fstl
cmc
fcoms
in
sahf
ret
mov
test
jo
push
add
cmpsb
out
sbb
dec
jbe
push
hlt
repz
stc
ret
call
adc
mov
dec
pushf
scas
test
jbe
xor
lcall
mov
pop
mov
dec
sub
and
mov
jno
add
adc
xchg
sbb
sub
lea
lret
data16
add
sarb
pop
dec
inc
scas
or
std
mov
aas
push
mov
sub
mov
xor
xor
addl
ror
inc
mov
cmp
xchg
aas
lods
xor
fnsave
and
test
sbbl
aam
cmpsb
scas
pop
in
inc
test
mov
imull
aad
test
push
jns
sub
adc
test
dec
inc
iret
ss
sub
mov
pop
cmpsb
mov
mov
xchg
mov
push
movsb
mov
enter
mov
pop
leave
adc
pusha
mov
lahf
shl
jl
in
add
mov
leave
pop
insl
aas
aam
xor
je
dec
leave
inc
pop
ljmp
adc
pop
ds
loopne
dec
sbb
std
mov
out
pop
xchg
ret
stc
cltd
inc
cmp
and
imul
pop
pop
add
inc
sbb
jnp
sbbl
ss
push
dec
aas
fcompl
sti
mov
or
shll
pop
push
mov
mov
fsubr
and
jl
call
cmp
repz
das
dec
mov
clc
cmp
or
in
sub
cltd
mov
or
icebp
cwtl
pop
jae
lret
aaa
fldcw
inc
push
or
dec
push
repz
add
sahf
xchg
fs
pop
shr
sub
push
xchg
cmpsl
jnp
jae
test
cmp
lods
xchg
mov
add
adc
loop
add
ljmp
idivl
out
xchg
insl
jne
and
mov
out
not
bound
cmp
mov
xor
push
add
or
in
leave
pop
jb
lahf
xchg
sahf
aad
inc
mov
enter
daa
inc
adc
fs
inc
arpl
stc
adc
dec
cmp
add
arpl
imul
cltd
and
leave
xchg
push
in
fs
mov
xchg
js
imul
pop
js
data16
outsl
mov
std
push
adcl
jb
xlat
dec
cmp
jnp
dec
push
lahf
add
sub
mov
loopne
not
dec
add
mov
or
pop
sbbb
pusha
decb
cltd
pop
jb
add
or
lahf
add
ret
sbb
or
orl
mov
sbb
and
inc
movsb
shll
ffree
mov
or
pop
add
sub
and
lgs
std
ljmp
sub
lcall
push
fcomps
or
jb
lods
sbb
pop
insb
into
in
fildl
jb
cmove
and
bnd
out
or
sti
clc
or
sub
add
mov
les
stos
xor
imul
repz
call
out
xchg
inc
mov
mov
out
shlb
in
fldl
adc
inc
test
adc
or
mov
rdpmc
fidivl
inc
out
xchg
loop
stc
pop
xchg
arpl
push
mov
scas
movsb
sarb
into
dec
ret
lods
lods
mov
stos
out
out
pop
setns
nop
sub
in
or
icebp
inc
dec
jo
dec
sti
or
jns
lods
scas
sub
mov
repnz
mov
icebp
adc
sbb
push
mov
nop
test
pop
cld
jo
xchg
jle
jbe
inc
adc
imul
push
inc
test
jne
stc
mov
js
ja
sub
mov
insl
dec
movsb
out
lock
loope
in
or
adc
push
pop
push
outsb
cmpsl
enter
add
std
or
and
jno
outsb
in
and
arpl
cmc
jge
adc
aas
add
nop
xchg
loope
fldt
sarl
scas
xor
int3
mov
ret
cmpsb
and
int3
jl
fwait
movsb
cli
jne
jns
inc
or
and
shrb
sbb
mov
push
mov
sbb
xor
and
int3
movsl
xorl
sbb
cmpl
push
mov
repnz
pushf
lcall
pop
fwait
mov
push
dec
arpl
dec
scas
xchg
add
fadd
inc
js
cmp
fadds
adc
and
add
fst
std
pop
call
sti
or
test
and
cmpsl
movsb
jp
inc
in
ret
das
xor
and
stos
sub
xor
adc
decb
cltd
mov
sbb
out
jo
inc
mov
cld
cmp
jp
mov
out
adc
push
in
pushf
adc
jge
add
jmp
sbb
xchg
add
pop
fwait
push
loop
inc
lret
cmp
adc
xchg
dec
push
dec
cli
ret
xor
mov
iret
cld
dec
aas
add
sbb
lods
dec
pop
stc
mov
and
sbb
add
add
push
fstpt
and
xchg
popa
jl
dec
mov
addl
adc
es
inc
sbb
push
pop
sbb
pop
imul
sub
cmp
inc
push
iret
jbe
or
and
or
flds
jo
pop
push
mov
int3
push
pop
stos
repz
mov
ret
jmp
arpl
mov
popa
in
int3
fwait
xor
jnp
ss
mov
fisubl
fnstenv
lea
dec
mov
scas
lret
hlt
sahf
cmp
stos
cmp
and
cld
mov
fldenv
divb
adc
jg
pusha
fnstcw
popf
mov
iret
push
jnp
add
jnp
sbbl
lods
shrl
imul
push
mov
xchg
push
in
lret
dec
cld
mov
sbb
mov
inc
inc
dec
and
xchg
push
sbb
enter
lock
sbb
stos
stos
repz
pop
and
fs
movsb
sti
adc
jnp
insl
negl
stos
cmp
sbb
pop
in
fldenv
xchg
push
pop
fidivrl
mov
mov
push
xor
mov
daa
in
sub
fcmovbe
test
mov
mov
test
leave
push
sbb
and
jecxz
sub
adc
adc
add
mov
pop
shrb
pop
mov
push
sub
push
adc
iret
cld
insl
cmp
add
das
sbb
push
mov
push
orb
je
mov
jbe
rorl
pop
jmp
xchg
arpl
scas
mov
mov
fisttpll
scas
sub
add
pop
pop
sub
adc
cmp
cmc
leave
inc
cwtl
xchg
jp
pop
std
insl
xchg
jge
imull
sbb
mov
add
repnz
xchg
cmp
cmp
or
jge
adc
scas
inc
xchg
stos
movsb
mov
mov
jp
orb
push
bound
sti
in
inc
addr16
das
xchg
movsl
sbb
xor
aad
add
cmpsb
mov
jmp
pop
aas
sahf
add
push
dec
stc
sbb
mov
xchg
jae
ffree
and
fiaddl
cmpsb
mov
sub
cltd
cmp
or
std
inc
rep
idivb
jbe
stc
mov
sti
test
jns
je
rclw
cmp
out
mov
fistpl
cmp
xchg
pop
outsb
jmp
es
mov
clc
outsl
xor
push
push
jo
in
pop
es
js
mov
cld
xchg
fmuls
repnz
xor
out
lods
or
stos
shll
cmp
shll
xor
push
lea
or
icebp
mov
xor
fwait
insb
ja
pop
lds
mov
jb
sbb
push
out
repz
add
loope
add
or
out
lods
pushf
out
aas
lods
dec
cmp
add
mov
addr16
push
scas
clc
push
jmp
push
lcall
mov
cli
scas
mov
je
cmovo
call
push
adc
mov
pop
rcrl
and
lea
bound
clc
jg
mov
sub
imul
lret
dec
xchg
or
mov
jne
push
aam
xor
and
sarb
inc
jne
inc
test
imull
ret
aad
adcb
nop
test
mov
sub
repnz
mov
repnz
fs
xchg
aas
xchg
popa
fcmovnbe
cmp
and
out
imul
ja
push
and
pop
adc
movsl
cmc
push
scas
test
mov
sub
add
mov
mov
jl
outsl
adc
inc
jae
push
push
dec
arpl
int3
movsbl
mov
jmp
shlb
nop
sbb
stos
fldenv
test
pop
in
bound
js
inc
or
push
inc
dec
lock
addr16
popa
insb
cltd
hlt
or
out
xchg
add
clc
mov
mov
pop
dec
lret
jge
pop
xchg
sub
or
lock
cmp
out
decl
mov
lahf
or
pop
imul
pop
mov
jae
xor
cli
sbb
jl
or
jmp
iret
subl
lea
mov
ss
inc
sbb
jno
dec
jno
cmp
mov
iret
push
out
fnsave
movsl
rcll
enter
rolb
push
mov
mov
jle
into
shlb
pop
cltd
int
add
fwait
js
lahf
inc
scas
es
lahf
cmp
notb
or
mov
and
insb
sub
mov
idiv
in
cmpsl
xlat
loopne
fldt
push
out
aas
call
arpl
mov
je
shrl
iret
aas
andb
ljmp
or
sbb
xor
stc
mov
call
js
adc
or
aam
les
mov
stc
fcomps
xchg
sbb
enter
gs
mov
inc
push
gs
stos
lret
rcll
lret
fisttpll
xchg
and
ret
or
jo
lcall
lret
mov
cli
xchg
xor
les
outsl
mov
jg
mov
and
xchg
roll
and
add
out
out
sbb
xor
mov
inc
push
rcrl
sti
mov
push
fstpl
push
mov
pop
test
in
and
sub
cmp
jnp
addps
scas
stc
mov
or
mov
xchg
mov
scas
test
daa
decl
cmc
pop
repz
pop
int
bnd
push
jnp
add
sbb
add
pop
xor
in
rcrl
mov
inc
sarb
mov
xchg
mov
jmp
je
ljmp
mov
lods
xor
cmp
mul
xchg
inc
sti
enter
jmp
or
sbb
sbb
dec
mov
push
jl
mov
data16
sub
and
insl
and
mov
stc
fdivs
mov
adc
clc
stos
test
test
jnp
cwtl
rclb
stos
gs
xchg
xchg
ret
or
into
and
sub
in
addr16
not
aas
insb
add
cli
test
mov
push
inc
mov
push
push
ficoms
xchg
or
inc
mov
rorb
and
loop
ret
js
rol
loopne
aad
mov
push
ja
xorb
inc
pop
sub
inc
cltd
imul
xor
mov
xchg
lea
pushf
out
mov
sub
or
shlb
loope
roll
lcall
das
es
xchg
bound
test
pop
and
and
add
add
lods
roll
lahf
in
jnp
aas
fsubs
mulb
mov
cmp
popa
push
mov
cld
mov
sub
sub
or
lret
cmc
lret
add
inc
std
or
ret
nop
sub
movsl
jne
repnz
sub
push
lahf
push
hlt
xor
jo
sub
loopne
pop
imul
nop
jne
fiaddl
pop
pop
test
clc
adcl
inc
rolb
fistps
scas
sbb
mov
jne
pop
cmpsb
cltd
int
rorl
iret
loop
jmp
and
mov
xchg
push
jae
sub
xor
xor
repnz
data16
cmp
test
sbb
adc
mov
out
pop
dec
pushf
mov
xchg
pop
add
ret
ss
clc
pop
mov
jns
push
aaa
mulb
inc
hlt
jmp
cmp
hlt
xchg
testl
out
add
icebp
lret
int
movsb
jne
xchg
sti
test
add
and
inc
movsb
popa
push
or
cld
lods
jmp
inc
mov
stc
sahf
popf
outsl
loopew
pop
or
jo
in
mov
loopne
mov
insl
into
dec
test
fiaddl
or
shr
adc
loop
out
scas
lret
out
mov
fistpll
jae
dec
xchg
faddp
cmp
xchg
lds
add
leave
push
imul
lods
adc
and
loope
and
int
das
adcb
inc
cmp
rcl
addr16
std
rol
stc
dec
pushf
mov
lret
sbb
jg
pop
push
dec
adc
out
adc
std
scas
shl
add
je
repz
sbb
mov
hlt
sbb
test
xchg
mov
mov
inc
jnp
scas
mov
call
rorb
iret
push
push
cmp
inc
cld
movsb
adc
push
sti
xchg
jp
jecxz
cmp
adc
out
sbb
stos
js
arpl
push
popa
rolb
and
xchg
pop
inc
dec
lret
pusha
inc
mov
xor
mov
fs
test
out
add
xor
stc
into
fisubs
push
add
int
cmp
shl
cmp
push
lds
test
jge
out
orb
pop
add
out
mov
sbb
imul
push
arpl
mov
pusha
adc
test
push
out
lock
je
cli
cmc
dec
pop
push
xchg
mov
fwait
xlat
fdiv
leave
adc
inc
loope
std
rcrl
fwait
and
push
mov
cmp
pop
sbb
xor
xor
adc
mov
jne
fimuls
je
or
faddl
sub
add
push
not
rclb
stos
in
mov
fstl
adc
pop
cs
in
rcrl
push
stos
jl
jle
mov
lods
cmpsb
pop
in
xor
and
mov
cli
fnstenv
inc
inc
mov
pushf
arpl
in
jge
mov
shll
mov
ficoml
sbb
or
sub
jno
inc
lods
les
mov
ret
nop
scas
jecxz
in
das
insl
arpl
es
mov
jno
inc
pop
sbb
xchg
adc
loop
ficompl
or
es
mov
movsl
or
fists
repnz
test
cmpsl
push
adc
add
leave
add
pushf
xchg
mov
outsb
push
push
loope
mov
iret
sarb
pop
dec
cmp
pop
ja
imul
mov
cmp
cmp
shlb
int3
in
xchg
dec
xlat
jae
mov
sbb
sbbl
imull
xor
pop
push
xchg
test
subl
dec
pop
movsb
xchg
loop
fmul
ljmp
data16
adc
push
ret
call
popa
shlb
fisubrl
shrb
imul
pusha
or
dec
cmpsl
insl
dec
mov
xor
cld
or
data16
outsb
das
dec
mov
adc
jno
xchg
pop
or
stos
mov
notl
mov
es
enter
sbb
pop
stc
pop
push
inc
push
loope
adc
jmp
ljmp
jge
or
mov
sbb
push
in
inc
push
repnz
jg
fistps
lcall
pop
out
cmp
add
rorl
loopne
cltd
frndint
and
inc
sbb
fsincos
mov
xchg
out
xor
jle
add
dec
das
mov
pop
fcomps
mov
call
stos
cmpsb
iret
loope
sbb
mov
mov
push
mov
push
mov
fstpl
or
ss
sub
dec
fistps
pop
cmp
mov
movsl
cmp
daa
in
test
xor
mov
add
lret
pop
add
mov
cmp
rcrb
cmp
in
std
sbb
dec
or
movsb
lcall
or
and
sbb
gs
add
jbe
dec
push
sub
clc
add
inc
mov
nop
das
in
pop
pop
stos
rolb
lea
cmp
fcomps
lods
aam
loopne
fildl
addr16
or
dec
mov
rorb
repnz
popf
ret
jl
call
scas
pop
pop
mov
pop
adc
xlat
es
fmull
xchg
add
test
or
sub
sub
inc
push
add
fsts
and
movsb
movsl
pop
das
inc
pop
sbb
rolb
data16
adc
lret
add
popf
inc
xchg
jecxz
xor
insb
je
test
int3
lds
and
out
inc
and
jbe
cmp
in
cmp
xchg
jmp
int
icebp
xor
stos
and
ss
push
orl
jnp
call
push
gs
push
push
mov
nop
or
mov
jl
pop
lcall
lcall
pop
jecxz
pusha
ja
xorb
leave
dec
or
mov
inc
jmp
cmp
mov
push
into
aad
jge
adc
push
push
ss
pop
cli
js
lahf
dec
adc
jecxz
fidivl
mov
sbb
and
shlb
mov
lret
cltd
adc
xchg
shlb
mov
and
jnp
xor
lock
lret
mov
fisubrs
push
cmp
decl
ror
pop
and
inc
cli
outsl
jae
les
inc
lahf
fcmovne
adc
xchg
pop
sbb
popf
aad
loop
leave
mov
scas
or
cld
pop
xor
jg
jne
inc
xchg
inc
push
ss
push
pop
outsl
sub
xor
mov
fdiv
mov
in
xchg
pop
mov
scas
je
sub
cmp
or
cmp
paddsw
jae
add
pop
sbb
inc
insl
push
aad
ja
mov
pop
rcl
outsb
jl
and
push
dec
mov
daa
jbe
xor
bound
mov
mov
adc
push
jno
adc
fsts
insb
add
cmpsl
cmc
mov
jne
inc
lcall
das
je
mov
jge
mov
icebp
lds
adc
scas
adc
push
arpl
mov
push
test
lds
int3
pop
cmpb
nop
dec
jmp
mov
and
repz
push
mov
popf
dec
rcrb
mov
jns
xlat
dec
insb
xor
inc
scas
adc
jmp
loope
push
cmc
fldenv
sbb
ret
sbb
pop
sub
and
mov
mov
stos
lea
lods
inc
push
adc
mov
imul
jecxz
lahf
das
cwtl
push
into
lcall
mov
jns
lcall
data16
in
repz
jecxz
or
xchg
xchg
or
shll
cmp
lret
push
pop
lods
outsb
push
cmpl
and
pop
bound
pop
dec
inc
iret
notb
inc
pusha
mov
jle
inc
inc
inc
es
adc
cmp
push
or
add
addr16
mov
insl
iret
mov
jl
lret
cmp
movsl
loope
addl
int
inc
and
sbb
movb
call
sbb
add
mov
lret
test
mov
out
adc
dec
fs
sbb
std
imulb
jo
insb
push
lea
ljmp
push
add
mov
cmp
push
jle
and
int3
hlt
movsb
lea
iret
add
jecxz
and
jb
jge
daa
into
insl
jge
in
mov
pop
and
pop
outsb
or
pop
cmp
xor
aaa
jg
je
sub
xchg
insb
aad
movsl
inc
sbb
jns
adc
stos
xchg
pop
enter
jns
xchg
mov
sbbl
hlt
mov
fdivrl
scas
sbb
test
cmp
ds
in
jmp
shll
ja
popf
outsl
pusha
ljmp
dec
adc
gs
mov
lea
mov
cwtl
inc
test
ljmp
dec
and
lcall
xor
aaa
testb
pop
push
adc
or
fstpl
int3
cwtl
xchg
in
xchg
mov
inc
xor
setnp
popa
add
loop
push
rolb
js
jno
dec
cld
mov
insb
xor
pop
pop
addb
push
je
stc
sahf
js
cmp
pop
nop
out
fcmovnb
cmp
test
xchg
cld
inc
xchg
mov
mov
out
push
das
pop
jnp
insb
aas
orb
jge
lea
push
mov
pop
imul
repnz
adc
add
out
es
movsl
imul
sub
arpl
add
pusha
scas
add
mov
dec
pop
xor
rcrl
jge
in
add
test
loopne
xor
cmc
dec
sti
insb
adc
ljmp
lds
jo
jle
pop
data16
shrl
push
fimull
cmpsl
cmc
push
pop
outsl
inc
inc
mov
pop
ucomiss
dec
pop
lcall
mov
ljmp
push
and
faddl
sbb
sub
imul
lods
jle
je,pn
push
push
push
outsl
ret
pop
je
insl
jmp
pop
adc
sub
xchg
push
gs
sahf
aaa
hlt
mov
cld
mov
jmp
pop
popa
in
sub
mov
cld
pop
nop
mov
push
ja
xor
in
cli
add
xchg
mov
clc
gs
stos
rcrl
cmpl
fldl2e
xor
mov
bound
xchg
ds
stos
dec
or
mov
pop
lret
mov
imul
in
cs
std
je
int3
dec
xor
lcall
push
enter
jne
xchg
shll
cmp
sbbb
fidivrs
sub
cmpsl
dec
data16
mov
cld
push
loop
out
in
xor
les
cmp
sbb
mov
fdivr
and
cltd
push
cmpsl
stos
and
jns
aaa
imul
shll
mov
jmp
inc
adc
dec
scas
mov
dec
mov
jl
clc
test
out
arpl
in
aas
jbe
push
and
mov
in
jl
aaa
cs
popa
sti
push
ss
mov
cmc
out
or
int
daa
jecxz
jo
mov
scas
lods
lds
adc
mov
mov
bound
daa
cld
jle
jl
mov
pushf
jne
inc
jo
call
adc
mov
imul
push
xor
jle
add
mov
xor
push
das
xor
xchg
dec
pushf
test
stos
push
pop
push
sbb
adc
xor
or
push
inc
sbb
dec
mov
xor
mov
sbb
add
adc
inc
ss
dec
push
mov
arpl
xchg
mov
lock
xlat
in
icebp
xchg
pushf
xor
lret
mov
mov
clc
rcrl
int3
fistps
cli
push
pop
and
test
jo
push
enter
push
and
add
sbb
sub
add
hlt
cmpsl
mov
adc
lock
jno
imul
mov
jecxz
pop
mov
pop
lods
je
add
fcmovu
xchg
aas
lahf
hlt
out
lods
xchg
js
push
or
add
imul
pop
or
leave
dec
lods
pop
dec
or
test
adc
pop
ja
das
jg
test
test
sbb
push
repz
in
pop
or
in
adc
xlat
add
out
aas
and
aam
inc
int
lahf
sub
adc
add
ljmp
lods
stos
sbb
cmp
cli
and
mov
ds
movsl
jb
adc
dec
jmp
adc
jns
inc
hlt
lds
mov
ret
out
mov
fs
push
xchg
cmc
jl
nop
lret
test
and
jl
jnp
jl
mov
mov
cmp
inc
out
pusha
test
shl
test
inc
or
cs
std
icebp
fistpll
hlt
mov
enter
cmp
and
fisubl
adc
cmp
jl
add
test
inc
and
mov
aad
push
and
push
adc
sub
mov
sbb
add
xor
movsb
ret
cmp
es
inc
add
pop
push
mov
popf
cwtl
fists
push
xor
xchg
push
shrl
xchg
jmp
int
xchg
out
jno
sbb
lret
idiv
cmpsl
cltd
movsl
ds
mov
and
mov
lea
or
repnz
mov
arpl
lods
mov
pop
xor
xor
sub
mov
jl
mov
mov
cmp
fildl
and
dec
lret
pop
jmp
je
ss
popf
cltd
fldenv
lret
jno
lods
bswap
cmp
mov
pop
jae
pop
test
pop
push
fsub
daa
imul
loopne
inc
sbb
aad
jae
jle
pusha
or
cmp
es
mov
in
adc
fwait
pand
xor
pop
pushf
push
arpl
loop
mov
fldcw
or
shll
mov
mov
push
mov
insl
mov
pusha
pop
fdivp
sub
mov
jmp
push
mov
jno
nop
ja
and
lcall
dec
jmp
ljmp
les
test
insl
mov
insb
testb
cmp
cmp
push
test
adc
test
fs
mov
mov
mov
lret
dec
es
mov
mov
xchg
and
xchg
cmc
sbb
adc
lea
loop
and
mov
bound
mov
orl
cmpsl
mov
stos
loop
mov
stc
adc
pop
and
cmp
loope
jg
ret
push
mov
cmp
fisttps
inc
mov
dec
in
push
push
dec
testb
aad
cld
dec
mov
or
inc
inc
outsl
sub
sbb
int
in
inc
inc
pusha
mov
mov
add
sub
jnp
sub
out
aas
add
stos
sub
jle
jae
outsl
arpl
mov
dec
clc
sbbb
dec
xchg
aad
inc
adcb
or
test
out
add
push
or
rcrl
lret
cmp
jecxz
mov
repnz
cmpsl
lock
lret
test
popa
jo
aad
mov
inc
jns
jecxz
mov
sub
daa
mov
sbb
into
aas
fdivrs
add
leave
push
pop
rorb
jno
pop
ljmp
xchg
sub
ljmp
stos
adc
pusha
stc
jp
inc
jno
adc
jae
jecxz
and
or
sub
add
xor
pusha
cltd
xor
push
jne
test
push
nop
jg
orl
xchg
xor
sti
cmp
arpl
mov
sub
mov
ja
movsl
cs
aad
sbb
push
jb
fisubrs
inc
xchg
jle
inc
ret
aas
push
gs
je
in
es
nop
jge
mov
pop
ds
outsl
sbb
push
loope
mov
scas
mov
mov
mov
cltd
fidivrl
jae
gs
mov
into
mov
mov
add
jge
lods
and
stos
into
xchg
push
pop
call
shl
jmp
adc
std
xchg
push
adc
inc
mov
mov
out
clc
cltd
subb
mov
cs
mov
call
and
add
lret
mov
or
sti
daa
mov
push
enter
sbb
sub
jbe
mov
stos
out
cmpl
ljmp
fnstcw
push
aaa
insb
mov
pop
jl
lahf
dec
notb
xchg
fmuls
or
or
stos
and
rorl
sbb
insl
push
sub
jl
or
sub
lea
xchg
cmc
add
jp
daa
popl
cmp
in
mov
into
cmpsb
jecxz
and
imul
popf
out
add
dec
orl
add
icebp
fidivrl
popf
add
dec
push
dec
sbb
mov
or
add
or
jp
out
loopne
inc
jmp
fistl
jecxz
inc
les
sbb
pop
mov
bound
xor
push
jnp
push
and
mov
xor
jmp
xchg
inc
cli
dec
stos
movsb
int
daa
addr16
mov
inc
jmp
lcall
hlt
push
cmpsl
loop
add
outsl
cmpsb
mov
cmp
enter
xchg
rcll
sar
add
and
pop
negb
sbb
mov
fcoml
cld
andb
cwtl
call
mov
fbstp
lea
pop
mov
mov
fmull
mov
scas
push
xor
mov
arpl
cmp
sti
mov
push
push
mov
clc
daa
shll
adc
push
ror
in
das
nop
cltd
cmc
rcll
bound
fwait
test
popf
adc
cltd
mov
test
mul
ds
lret
rcrl
rcrl
cmpsb
xchg
sbb
ja
jge
in
mov
pop
jp
mov
push
test
shll
pop
jecxz
and
in
push
push
jg
mov
dec
pushf
or
cwtl
add
mov
mov
lret
sbb
push
inc
jns
in
fidivl
loope
shl
lea
loop
xlat
jns
inc
clc
jle
js
aaa
ja
fdivrl
imul
out
scas
mov
clc
cmpl
mov
adc
push
mov
fildl
adc
dec
rcll
add
xor
mov
sahf
push
mov
xor
scas
or
cwtl
loope
adc
daa
addr16
push
push
js
gs
test
push
in
testl
sbb
arpl
maskmovq
mull
fsubrl
xor
daa
push
jbe
mov
cmp
dec
outsl
mov
and
rorl
mov
push
adc
jmp
insl
push
jecxz
movups
push
adc
and
jno
pop
jl
notb
stos
std
aam
cltd
stc
decb
pop
inc
movb
mov
push
in
xchg
vsubsd
ret
data16
in
mov
leave
pop
data16
xchg
mov
test
in
jnp
add
or
ret
dec
sub
test
rolb
inc
ds
je
inc
es
int3
mov
rclb
xlat
dec
daa
mov
inc
pop
pop
adc
and
pop
cmp
dec
inc
cmpb
std
nop
inc
mov
fwait
sarl
dec
lahf
mov
push
inc
lret
add
push
fists
test
mov
out
arpl
xor
inc
pop
faddp
les
popf
ja
mov
movsl
cmp
mov
add
mov
popa
loopne
or
insl
subb
sub
pop
xchg
js
fildl
shl
dec
adc
rorb
push
repz
mov
mov
mov
fldenv
and
es
cmp
int3
cmp
pop
inc
xchg
adc
sub
addr16
dec
div
dec
mov
xor
sbb
fmull
out
inc
cmc
push
sbb
xchg
cmp
push
jb
lret
push
mov
inc
mov
jo
pusha
or
or
lods
push
mov
dec
jns
or
fwait
adc
ljmp
hlt
xchg
pop
pop
cld
bound
daa
pop
or
cmp
pop
pop
mov
les
mov
mov
jns
ss
or
pop
sbb
dec
jp
cmp
icebp
mov
out
inc
xchg
and
jmp
lret
aad
or
dec
cmpsb
jns
xor
call
mull
inc
push
adc
mov
cmp
or
jbe
or
xchg
sbb
aas
mov
fcoml
xchg
jne
loop
pop
inc
jle
push
sub
out
in
roll
push
push
adc
xchg
dec
cmp
push
fadd
sub
or
xchg
stos
lahf
or
out
popa
mov
mov
dec
dec
xor
mov
loope
adc
mov
push
dec
scas
hlt
and
jmp
cltd
hlt
pop
out
imul
add
cmp
cld
mov
in
sub
ds
lahf
sti
addr16
scas
out
popf
mov
bound
pop
scas
outsb
push
xchg
dec
cli
outsb
push
add
pop
jbe
addb
fstl
mov
cmp
add
add
mov
mov
cmc
mov
dec
and
stc
bound
fsubrs
xchg
icebp
inc
shrl
fs
outsb
test
cmp
lods
mov
mov
lea
les
inc
out
stos
ljmp
xor
js
jae
repz
jns
rcrb
jnp
call
adc
xchg
xor
movsl
into
fbld
je
arpl
daa
popa
sub
fisubl
or
jecxz
xchg
sbb
daa
movsb
pop
inc
imul
pop
daa
lcall
sbb
mov
shr
clc
jmp
mov
xor
sarl
shlb
orb
cmc
fdivr
or
scas
pop
mov
lcall
sbb
xchg
jecxz
int
push
pop
lcall
mov
pop
xor
js
adcl
leave
outsl
mov
add
bound
jo
arpl
das
jl
iret
inc
adcb
mov
push
hlt
test
ss
movsb
lahf
ret
sti
inc
roll
adc
rclb
mov
cmc
jns
dec
mov
jae
test
cwtl
mov
xchg
dec
adc
cs
xor
adc
in
int
dec
pop
cmp
loope
push
insl
addl
mov
add
xchg
lcall
push
and
or
std
add
lahf
subl
or
std
jp
mov
push
pop
add
mov
scas
cwtl
pop
and
and
push
jb
test
cltd
xlat
jmp
mov
fdiv
sub
int3
rorb
push
push
xlat
mov
stos
insb
dec
pop
xchg
adcb
stos
xchg
adc
lds
mov
dec
jle
call
jo
in
sub
and
jle
lahf
in
rcrb
jae
or
mov
lea
push
dec
daa
scas
mov
insb
sbb
imul
pop
xor
xor
ss
mov
or
fnstsw
subl
insl
pop
push
sti
adc
shlb
sbb
cwtl
xorb
enter
push
jbe
pushf
push
lcall
movsb
lods
xchg
shl
mov
xchg
cld
nop
aad
pop
dec
pop
lods
lret
loope
cmp
push
inc
adc
test
jecxz
jle
int
cltd
ja
add
mov
or
xchg
arpl
sub
outsb
ss
cmp
cmpsl
ljmp
sahf
pop
dec
xchg
divl
sbb
xor
push
out
cli
fcmove
push
pop
pusha
movsl
outsb
cli
int
inc
or
mov
fs
int
test
fldl
fs
shrb
loop
mov
fwait
inc
hlt
mov
mov
std
js
pop
push
sbbb
add
cmpsb
jl
lea
and
push
sub
lods
cmp
push
sub
push
push
leave
push
popa
adcl
push
out
cmpl
xor
xor
pushf
and
loope
stc
call
pop
mov
pop
mov
push
stc
addr16
jae
std
jno
mov
inc
xchg
cmpsl
repz
or
adc
jecxz
jle
pop
imul
sbb
pop
sbb
lds
jl
sub
scas
pop
xchg
push
rcll
inc
cmp
xlat
fsubrs
clc
inc
pop
and
enter
cmp
cmpsl
and
jns
mov
loope
dec
aam
dec
dec
and
mov
cmp
dec
dec
push
ret
outsl
nop
jmp
fsts
jmp
testb
fdivl
xor
inc
mov
imull
inc
dec
adc
push
dec
jecxz
xor
xchg
pushf
mov
pop
cmc
pop
test
int
imul
mov
lds
aad
out
xlat
sarb
out
aaa
fwait
or
xchg
mov
lods
insl
add
fsts
jge
daa
xor
addr16
lea
push
jnp
mov
xorl
cmp
fs
inc
stos
xchg
icebp
mov
int
push
rol
or
and
ret
iret
cmpsl
xchg
or
xorl
fnstcw
cld
cltd
aad
push
sbb
addr16
shl
jecxz
out
or
icebp
jl
cs
sub
push
jle
rcrb
popa
js
pop
push
lock
sahf
mov
or
int3
inc
test
cmp
lea
lcall
cmpl
inc
test
inc
test
ret
or
push
fidivrl
dec
test
imul
dec
push
dec
sbb
int3
leave
js
inc
mov
andl
in
int
ret
test
inc
xchg
sbb
xlat
scas
dec
shrl
adc
das
jno
lea
or
add
clc
pushw
cltd
pop
sahf
push
shrl
sbb
and
daa
mov
ja
scas
push
lds
dec
vphaddubq
fsts
mov
xor
dec
incl
push
scas
xor
mov
push
sti
and
add
cmp
out
mulb
dec
push
and
clc
test
repnz
jmp
or
cmp
rclb
pushf
outsb
or
adc
mov
fwait
pop
jnp
sbb
cwtl
cmp
mov
out
and
mov
add
cmp
add
pushf
mov
add
hlt
jge
xlat
dec
pop
dec
and
push
mov
je
push
or
insb
mov
and
xor
lds
jo
mov
das
into
gs
mov
addr16
aad
jge
inc
in
rolb
mov
fwait
insb
cmc
dec
pop
scas
ljmp
jecxz
push
mov
and
add
lds
sbb
inc
pop
mov
movsb
pop
ret
data16
stos
sbb
test
inc
test
sbb
lods
pushf
gs
mov
aas
movsb
pop
das
fists
decl
sub
and
sti
push
gs
and
sub
mov
sbb
or
xor
mov
xchg
and
stos
xchg
inc
out
out
out
mov
or
mov
xchg
ja
adc
and
sar
js
add
jb
mov
cmpsl
xchg
dec
aaa
xchg
jb
inc
repnz
xchg
cmpsb
xor
faddl
ljmp
flds
lahf
nop
js
mov
mov
sub
inc
in
and
js
xchg
out
cmp
cmp
xchg
pop
adc
mov
cmp
ljmp
jne
xor
ja
push
xor
push
fisubs
mov
mov
imul
dec
dec
hlt
mov
push
sbb
negl
pop
mov
push
lock
popf
movsb
loopne
in
js
push
xchg
dec
loopne
jp
cmpsl
leave
dec
fsubrl
bound
outsb
shrl
loopne
mov
sti
data16
ret
test
pop
ffree
inc
jno
jbe
test
shll
jl
rcll
outsb
pushf
mov
arpl
mov
jbe
or
xchg
outsb
jl
xchg
dec
popa
js
test
pop
nop
cmp
shll
popa
and
int3
in
mov
popf
andl
xor
jns
and
dec
scas
add
xor
pop
loop
jecxz
daa
adc
inc
mov
pop
cld
sub
popf
push
imulb
sub
mov
xchg
pop
rep
js
pop
out
inc
mov
xchg
jmp
incl
push
movsb
jns
mov
scas
arpl
test
cmp
mov
dec
out
aam
in
das
dec
and
mov
test
mov
out
orb
daa
sub
loop
stc
icebp
or
push
bound
adc
ljmp
mov
subb
lea
sub
mov
pop
mov
cmc
test
outsb
dec
xor
mov
mov
in
dec
mov
leave
mov
into
sbb
scas
int3
adc
mov
outsb
js
iret
test
lcall
pop
in
rolb
add
xor
or
notb
sbb
or
test
and
mov
adc
cmc
dec
movsl
dec
scas
add
in
ret
pop
jbe
cmp
push
add
inc
inc
mov
push
outsl
cmpsl
test
movsb
fsubl
mov
loope
and
pop
xor
jle
movsl
adc
call
mov
rorl
jl
jns
aam
cmpb
inc
sub
jge
popa
jp
cmc
std
and
popa
dec
mov
cs
dec
mov
sub
mov
add
push
inc
into
into
loop
cmpl
shll
and
mov
data16
aas
jae
ret
jg
dec
jg
popa
sub
aaa
mov
inc
lock
int
cli
lds
xchg
xchg
ja
xchg
xor
or
xor
dec
and
mov
pop
xchg
push
or
mov
xchg
subb
push
mov
outsl
dec
mov
mov
fidivrl
out
cmp
rcrl
das
negl
inc
repnz
sbb
leave
jno
mov
and
test
fcomip
aam
cmpsb
ds
lods
push
sbb
sbb
out
xchg
fwait
popl
or
cmp
adc
mov
pop
mov
mov
mov
scas
dec
jmp
push
lcall
jecxz
lret
add
mov
loopne
mov
mov
sub
dec
xchg
jp
mov
sarb
lret
or
cmp
pop
cmp
je
pop
lock
jge
push
movsl
and
loopne
mov
xchg
or
sbb
and
xor
jae
push
je
data16
xchg
and
stos
and
out
das
sbb
xor
push
out
pop
aad
popa
call
loop
push
adc
loopw
mov
cld
mov
js
pop
push
mov
mov
ja
push
jns
adc
jns,pt
mov
add
shr
sbb
push
movsb
das
mov
mov
fnstsw
movsl
js
call
notl
mov
ja
sub
test
sbb
lds
loope
push
or
mov
add
pop
sub
xchg
movsl
fimuls
icebp
and
cmp
dec
cmp
sbb
seta
in
stos
pusha
icebp
addr16
jge
and
cmpsl
mov
dec
inc
gs
cmp
test
aad
cmpsl
psubsb
jo
nop
test
jge
sbb
mov
out
ss
lea
mov
jne
shll
xchg
clc
jbe
or
out
int3
push
mov
nop
inc
dec
jae
push
test
adc
sbb
pop
sub
inc
out
jno
cmp
lret
push
jns
xchg
add
scas
loop
lock
enter
xrelease
test
lret
in
dec
imul
imul
sbb
mov
aas
fnstcw
cmpsb
cmp
jae
pop
cmp
pop
in
test
enter
sti
pushf
xchg
int
push
mov
notb
pop
inc
jbe
out
mov
in
fcmovu
xchg
data16
xchg
movl
fcomps
mov
clc
subb
ljmp
sbb
lods
scas
int3
lret
pop
or
inc
mov
adc
cwtl
ljmp
nop
push
mov
mov
out
ljmp
lcall
cli
outsl
and
pushf
loop
aas
inc
in
imul
addl
sub
dec
push
xor
into
outsl
in
cmp
xchg
inc
leave
or
adc
push
dec
in
test
mov
xchg
xchg
inc
pop
mov
inc
sub
jne
cli
push
jno
jne
fmuls
sub
loop
mov
xchg
ret
xchg
adc
call
and
xor
mov
add
inc
andl
mov
dec
sbb
mul
addr16
in
repnz
pushf
aad
lcall
cltd
sbb
add
outsl
stc
sbb
jno
lret
scas
popa
or
dec
out
jp
js
push
dec
xchg
movsb
stc
inc
mov
cmp
hlt
cmp
or
divl
mov
jl
insl
iret
pop
sbb
lock
push
test
xchg
in
xor
mull
mov
xchg
xchg
cmp
mov
insb
pusha
les
push
pop
fcoms
mov
inc
arpl
aas
pop
aas
xchg
addb
dec
or
test
stc
adc
push
xchg
pusha
lret
int3
add
les
out
xchg
push
pop
jl
cwtl
clc
and
mov
fnstenv
adc
das
push
lods
pusha
cmp
cltd
dec
nop
pop
in
aas
in
push
cmp
mov
pop
aad
popa
je
mov
inc
xchg
mov
das
push
xchg
icebp
popa
into
adc
imul
sub
gs
sub
call
add
dec
test
sbb
pop
mov
or
or
outsl
xlat
inc
jg
xchg
pop
stos
mov
lods
jo
pop
inc
orl
out
mov
mov
jp
pop
and
fisubrs
inc
mov
mov
clc
repnz
jg
pushf
push
stos
imul
rorl
xchg
loopne
mov
movsb
pop
stos
shl
test
adc
mov
dec
jl
and
movsb
addr16
imul
jg
and
fdivl
cmp
push
push
pushf
jne
or
shrl
fucom
jg
adc
mov
mov
into
cmp
sub
jle
cmp
xor
loop
or
lret
testb
mov
movsb
int3
sub
idivb
adc
push
test
movsb
mov
pop
mov
xchg
lret
add
push
add
xchg
loop
cmp
gs
dec
mov
lods
push
fld
adc
daa
cmp
push
add
add
mov
loope
push
and
mov
sbbb
mov
pop
or
lea
mov
cli
jne
push
add
les
mov
enter
cmp
loope
int3
das
int3
or
in
mov
arpl
mov
pushf
ja
shlb
data16
inc
scas
sarb
or
xchg
mov
shll
in
imul
incb
scas
into
div
xchg
adc
ss
jecxz
stos
mov
bndldx
sub
dec
in
aas
sti
sub
pop
sti
adc
mov
pop
stos
mov
sub
ss
int
jle
pop
rdmsr
pusha
orl
out
xchg
adc
push
bswap
out
and
jnp
mov
aaa
jbe
ret
jns
pop
jne
pusha
push
mov
bound
ljmp
xchg
push
dec
xchg
divl
cs
lock
subl
lahf
jb
movsb
sub
bound
sbb
in
gs
pop
pop
mov
insb
inc
jns
cmp
sub
fsubl
popf
inc
mov
mov
rcrl
sub
inc
pop
int3
stos
fs
ret
sahf
lcall
xor
sbb
cs
icebp
notl
les
dec
lods
sub
sbb
aad
xchg
fadd
or
pusha
mov
out
sub
sub
shll
dec
and
or
nop
movl
jle
daa
pop
xchg
jnp
dec
dec
call
inc
dec
mov
mov
mov
sub
push
repnz
stos
sub
push
pop
pushf
sbb
cwtl
sbb
stos
negl
ljmp
sub
and
cld
jge
in
aas
adc
dec
pop
adc
aas
inc
mov
cmp
pop
lock
mov
dec
sub
and
hlt
sbb
adc
popa
nop
nop
dec
xor
mov
mov
cwtl
ret
loop
imull
outsb
push
pop
lods
shr
int3
pop
daa
scas
rcrb
push
mov
or
dec
leave
mov
push
mov
xchg
sbb
inc
sbb
les
mov
sub
and
fbld
rcrb
cli
xchg
lds
ss
sub
mov
cmp
cld
outsb
test
repnz
lds
xor
dec
pusha
dec
push
sub
mov
shll
jmp
mov
add
push
add
outsb
cmp
lret
stc
mov
sbb
loop
cmp
dec
nop
inc
out
sbbl
push
stos
lock
cmp
shll
std
fmull
addl
and
mov
or
decb
xor
sbb
xor
fwait
xchg
mov
push
aam
inc
xchg
sbb
in
push
andl
push
mov
dec
dec
xchg
test
mov
and
inc
out
mov
dec
add
mov
movsb
movsl
fwait
push
dec
pushf
fnstsw
dec
xchg
mov
out
loop
ret
mov
inc
and
inc
mov
and
std
mov
ss
inc
adc
into
push
adc
push
push
and
bound
mov
aam
pop
push
loope
je
outsb
repz
adc
jecxz
jl
lock
imulb
xor
movsl
mov
outsb
std
dec
add
cmp
in
jae
pop
xchg
cmc
cmc
mov
negb
push
movb
test
ss
and
jmp
popf
push
cmpsb
sahf
push
aam
outsl
and
xlat
cmc
cmp
sub
adc
mov
and
rcrb
push
in
loop
cmpsl
movsb
cwtl
xor
sbb
push
hlt
cmp
adc
add
stc
mov
jae
xor
in
subb
cmpsb
mov
add
daa
mov
mov
out
dec
pushf
mov
jp
inc
mov
jge
enter
xor
and
movsb
sbb
inc
sub
rcrb
pop
inc
pop
mov
push
adc
mov
icebp
or
outsb
adc
jp
lds
mov
mov
bnd
andl
sbb
mov
jl
ss
repnz
adc
inc
xlat
imul
or
push
adc
xor
loopne
adc
pop
jmp
imul
adc
xor
jle
push
or
and
shll
psrlw
sbb
mov
test
aad
bound
sub
xor
shrb
shll
add
subb
cmp
cmp
push
daa
cs
imul
insb
inc
xor
inc
mov
inc
xor
jle
into
inc
mov
lock
sbbl
in
cmpsl
int3
add
stos
mov
mov
fistl
mov
push
sbbb
popf
and
outsb
cmc
je
stos
mov
scas
rclb
test
push
stos
xchg
daa
enter
lods
je
iret
das
mov
negl
sbb
mov
dec
rcrb
sbb
xchg
incl
aaa
xchg
pop
sub
out
cmp
mov
jno
cmp
mov
dec
movsb
pop
jae
in
loop
aas
inc
cli
xor
push
dec
cmp
push
ljmp
mov
sub
sbb
xor
cmp
or
jecxz
cmp
and
imul
cmp
jae
jg
jne
jnp
insb
das
frstor
dec
mov
xor
cld
xor
loop
jne
enter
or
mov
cmp
push
sbb
mov
int3
enter
fiadds
pop
mov
fiaddl
jns
sub
imul
inc
lds
rorb
push
push
out
and
push
inc
jns,pt
mov
shlb
or
dec
lods
xchg
xor
sub
cmpsl
xchg
sbb
test
xor
cs
lea
jae
sbb
jp
mov
enter
push
int3
or
pop
push
dec
push
fcoml
dec
adc
repnz
ds
mov
cmp
repnz
xchg
mov
add
lcall
xchg
ds
shll
cmpsl
lea
iret
sbb
hlt
cs
sub
ss
dec
lcall
dec
cltd
aad
pop
cmp
sti
or
shr
push
mov
jne
stos
sbb
mov
xor
loopne
pop
sub
fisubl
daa
push
cmp
aam
pushf
out
pop
fs
int
fs
ljmp
ud2
loopne
xchg
adc
push
pop
repz
test
dec
xchg
adc
mov
lods
mov
gs
jge
inc
test
cmp
sub
fdivrp
outsb
push
test
ljmp
in
add
in
jae
inc
xor
sbb
insl
adc
addb
push
and
xor
cmp
fs
mov
stos
fiaddl
in
xchg
sub
popa
xor
add
dec
fnstsw
mov
and
ret
movsb
dec
lret
xor
add
xor
sbb
out
shlb
ficompl
jbe
mov
sti
jns
push
mov
arpl
mov
add
push
in
pop
inc
mov
xchg
add
cmp
dec
faddl
dec
insl
mov
inc
sbb
push
rol
mov
adc
cmp
xor
add
xchg
rorl
mov
loopne
jae
mov
stc
add
cmpsb
popf
mov
bound
mov
fdivl
push
cmpl
sub
sub
adc
in
push
je
sub
sbb
mov
xchg
out
sub
insb
mov
shl
imulb
push
outsl
xor
dec
add
xchg
jne
xchg
lea
dec
enter
add
add
and
add
inc
xor
xchg
lahf
mov
jae
in
out
icebp
xchg
cmpb
repz
divb
lcall
xor
mov
repz
inc
xchg
lret
subb
stos
inc
sub
add
xor
push
pop
ss
ljmp
cmpsl
sub
pop
mov
mov
movsb
fmuls
ret
mov
out
dec
xor
lea
push
xchg
sub
push
pop
mov
fs
rorl
jmp
and
iret
in
std
inc
jbe
pop
leave
pop
stos
js
mov
push
pop
popa
jne
orl
xchg
int
pop
mov
mov
ds
sbb
and
test
cmp
push
aaa
mov
or
and
lret
and
mov
mov
scas
push
push
cli
and
or
std
fcomps
repnz
lcall
mov
popa
pop
cmp
test
jg
xor
stc
in
ja
movsb
push
push
lods
inc
das
or
mov
daa
push
out
xor
push
and
rorb
dec
xchg
inc
xor
daa
aam
dec
push
out
inc
adc
cmp
pop
dec
ret
inc
insb
cmp
jno
inc
mov
mov
aas
ret
mov
push
mov
sbb
scas
loope
jle
xor
push
mov
repz
mov
jns
or
cmp
outsb
inc
sbb
push
xchg
out
add
mov
sub
test
xlat
lea
jns
xor
cmp
cmp
cmp
push
xchg
addr16
adc
fisttps
in
xchg
push
ret
dec
cwtl
mov
inc
sbb
int3
xor
call
and
ja
lods
sahf
add
cmp
push
or
xor
mov
in
push
xchg
fwait
mov
cwtl
stos
jl
movsb
push
test
xor
in
pop
jno
xor
ja
or
ss
orl
fnstenv
mov
and
out
lahf
mov
enter
adc
mov
pop
ja
cli
xor
stos
cmp
mov
cmp
mov
in
imul
mov
std
in
fadd
push
push
xor
xchg
aad
dec
mov
out
add
out
xor
mov
test
or
xor
daa
dec
mov
clc
or
shrb
lds
add
xchg
adc
mov
adc
stc
xchg
pop
lcall
and
cli
mov
std
into
jg
sub
orb
fstps
imul
test
fildll
stos
jmp
adc
fisttps
je
xor
rolb
sbbb
jnp
add
incl
movsb
and
pop
pop
gs
je
cmpsl
cmp
aas
adc
jo
out
jl
cmc
sub
jmp
les
or
iret
sub
push
imul
mov
xchg
jl
mov
sub
into
out
jl
push
cmp
scas
jmp
imul
es
sub
cwtl
into
mov
repz
adc
push
mov
dec
dec
xchg
out
pop
std
push
jge
and
movsb
stos
sub
dec
sti
and
out
and
cltd
rcrb
leave
cmc
sub
push
jnp
jns
jns
xor
mov
inc
push
and
xchg
rclb
xchg
test
in
and
mov
iret
push
jecxz
add
pushf
adc
xchg
lock
fucomi
mov
pusha
addb
out
popa
sub
fs
out
cmp
scas
frstor
mov
mov
jg
in
sti
mov
imul
rorb
and
out
lret
mov
sbb
jl
push
test
out
mov
or
sub
xchg
int
das
int3
xor
test
push
in
fcompl
dec
es
sub
pushf
sbb
push
imul
xlat
mov
push
xor
pop
mov
lret
fstpt
adcb
push
scas
fists
in
pop
ljmp
xchg
rcr
jle
dec
loope
cmp
or
mov
mov
scas
aad
es
cmp
cmpsl
cli
xor
ret
pop
ud0
dec
sbb
adc
push
inc
and
inc
or
lods
jns
test
or
xor
sahf
adc
or
std
jecxz
push
xor
sarl
rorl
js
jle
addr16
pop
push
mov
cmpsl
out
inc
push
jp
into
lods
cld
mov
mov
das
sub
mov
outsl
push
inc
insb
mov
out
dec
push
or
jp
mov
fwait
cli
mov
jno
cs
adc
pop
sti
xchg
jo
mov
movsb
xor
sub
pop
mov
testb
bound
adc
xor
jmp
icebp
fwait
jg
sub
sahf
pop
dec
aaa
mov
lret
fucomi
test
xchg
pop
scas
add
pop
and
pop
jns
popf
mov
pop
fcmovnu
sub
fdivs
xor
mov
mov
add
dec
lock
push
cmpsb
jo
pop
inc
std
adc
aas
lods
dec
inc
add
into
push
leave
sub
loop
cmpsb
movsb
inc
sub
outsl
mov
jns
shrb
bound
incb
pushf
in
fnstcw
mov
add
or
fwait
fs
inc
ds
lret
mov
ja
adc
mov
or
call
fsubl
cmc
cs
jge
std
addr16
out
xor
mov
loop
and
in
jg
repnz
ficoml
popf
pop
inc
mov
out
ret
jne
lahf
mov
fsubrs
imul
mov
and
push
outsb
or
ss
xchg
cmp
sbb
mov
push
mov
sub
xchg
pop
inc
and
sub
dec
inc
xor
xor
add
dec
fidivs
ficomps
add
cli
jns
mov
fadd
or
leave
jno
nop
xchg
mov
add
lea
jg
dec
mov
lods
fdivrs
inc
add
mov
jae
shrl
or
fisttpll
movsl
seta
push
push
inc
pop
adc
daa
shlb
mov
fs
push
mov
add
dec
cltd
mov
add
jnp
push
hlt
cwtl
push
sub
jmp
jae
lock
sbb
adc
aaa
mov
and
mov
cmp
and
mov
cmp
bound
ds
aas
fcoms
inc
mov
das
mov
pop
ss
je
lods
pop
fildl
dec
iret
jnp
cwtl
fstpl
repz
sahf
adc
pushf
xor
mov
mov
cltd
cs
dec
mov
pop
inc
aad
sub
or
stos
test
test
or
mov
lahf
stos
out
mov
repz
and
sub
je
cld
mov
das
test
shl
mov
dec
ret
movsb
dec
xchg
arpl
movsb
mov
stc
jl
sub
scas
lds
cli
sub
testl
jge
sti
testl
push
push
repz
or
xor
jl
lods
jne
jl
popf
inc
mov
mul
mov
aas
inc
add
addl
out
cmc
movsl
mov
iret
popa
adc
lret
fbld
in
lahf
lods
mov
push
int
js
sbb
jge
pop
fwait
pop
out
fldt
mov
sbb
mov
and
inc
and
pop
lcall
inc
cmp
jb
pop
push
fsubr
add
in
jo
jecxz
xchg
xor
add
or
cmc
pushf
fstl
jle
push
iret
sbbl
fstpl
xchg
lods
pop
xor
fisttpl
push
jnp
mov
inc
cmp
shr
mov
push
fldcw
sar
orl
mov
cltd
into
sbb
fisubs
adcb
lret
out
and
xchg
jo
add
out
loope
pusha
mov
xor
add
sub
loope
rolb
mov
and
fincstp
sbb
fldenv
int3
scas
pop
repnz
inc
pop
mov
sahf
lock
pop
scas
and
mov
fldcw
cwtl
negb
loopne
in
xchg
pop
stos
or
shll
push
insb
push
jne
cmp
addr16
and
popa
lods
lret
bound
dec
aad
or
sbb
mov
fisttps
out
testb
adc
sub
adc
pusha
mov
popf
or
inc
cwtl
cmpsl
pop
stc
clc
sar
sub
mov
push
addl
jno
add
push
jno
movsb
push
test
ds
leave
fbstp
jnp
xor
jo
icebp
or
mov
movsb
test
sub
jl
fsubrl
ret
xorl
enter
icebp
pop
or
insb
pop
and
pop
or
aad
movsl
sbb
andb
popa
and
iret
or
pop
xchg
cli
out
filds
sbb
jns
aad
mov
adc
mov
pushf
push
fucomip
cs
ljmp
or
inc
dec
popl
insl
jecxz
add
jo
negl
sbb
jbe
or
lret
je
aad
fdivrl
or
in
lret
lret
xor
xor
jne
dec
mov
popf
sub
ret
push
out
pop
jns
xchg
bound
sbb
aad
insl
mov
cmp
fs
mov
in
mov
jecxz
stc
repnz
out
adc
inc
test
lock
add
and
mov
jle
dec
in
dec
pop
sbb
adcb
inc
jl
pop
inc
lea
orb
dec
sub
sub
lds
mov
loopne
loopne,pn
imul
xor
sbb
test
mov
and
in
testl
sbb
ret
cmp
xchg
dec
or
mov
push
cmp
clc
addl
ja
jl
scas
dec
sub
sti
push
data16
mov
mov
push
mov
scas
addr16
dec
pop
mov
adc
mov
cmpsl
pop
and
stc
in
jmp
push
int
dec
xor
cmpsb
call
fcmovb
mov
dec
test
cltd
add
sub
push
xor
fcompl
lret
rcrl
int3
push
push
xor
push
mov
adc
cli
int
xor
repnz
add
out
in
adc
push
jg
outsl
repz
mov
dec
mov
push
shll
mov
sub
lea
je
mov
mov
push
repz
mov
mov
ljmp
fstl
and
adc
fistpl
clc
fcmovnb
pop
in
scas
loopne
gs
nop
mov
repnz
dec
xor
xchg
dec
mov
push
mov
add
mov
or
dec
jae
jmp
pop
cwtl
shrl
mov
and
sahf
xchg
in
test
test
lds
xor
test
inc
pop
imul
mov
gs
adc
cwtl
or
mov
inc
in
jle
arpl
jno
fadd
arpl
addr16
pushf
xor
int
adc
pop
test
imul
sbb
xchg
ret
add
mov
sbb
stos
lret
filds
lea
jl
sti
lods
popf
inc
out
pop
jmp
aaa
lea
sbb
xchg
cwtl
in
roll
out
mov
and
pop
lea
ficoml
xor
ljmp
inc
and
sbbl
jmp
sbb
or
ljmp
mov
sbb
les
ficoml
sar
les
ret
loopne
push
mov
mov
imul
and
call
shlb
stos
pop
xor
mov
sbb
pop
jmp
mov
insl
js
lahf
adc
jne
cmp
or
out
xchg
mov
movsb
sub
int
in
out
daa
adc
mov
mov
jb
add
push
lret
pop
xchg
dec
sbb
popf
jmp
push
dec
mov
lock
push
adc
or
push
cmp
jmp
mov
sub
addr16
and
pop
arpl
or
mov
es
push
jecxz
mov
sub
push
dec
addb
jmp
mov
movsb
dec
int
pushl
fimull
lahf
add
test
sbb
mov
pop
sub
cmp
xor
in
in
push
cmc
icebp
roll
xchg
loope
fucom
push
inc
xchg
arpl
rolb
and
fsubrs
rcrw
repnz
jo
stc
sbb
and
sub
sbb
je
lds
frstor
and
xor
loope
call
stc
sti
add
mov
cmp
sarl
int
orb
pop
fisubl
push
mov
pop
int
mov
aam
push
lret
cmp
scas
imul
fstps
and
imul
and
jle
cwtl
xor
aad
jmp
addr16
fnstenv
and
leave
out
std
popf
xor
sbb
mov
aad
xchg
xlat
fwait
lcall
mov
orl
cs
mov
push
dec
sub
cltd
fldcw
ficoms
loop
mov
cmp
jnp
mov
xor
out
addr16
mov
das
fmuls
add
xchg
jo
test
xor
jmp
xchg
adc
mov
mov
sbb
sti
jnp
enter
sbb
add
cs
xchg
nop
or
shll
xchg
rcrl
mov
dec
add
out
flds
xchg
lahf
cmp
inc
mov
lret
lea
call
je
imul
push
push
mov
loope
or
xchg
jg
lcall
and
out
leave
cmp
insb
lock
jo
sahf
loop
nop
test
stc
pop
bound
xchg
or
sbb
mov
lret
jle
fimuls
jge
pop
ss
xor
dec
movsl
and
stos
loopne
int3
add
movsb
in
sub
mov
out
sbb
pcmpeqb
je
es
iret
jle
aad
or
imul
in
lcall
pop
cmpsl
stos
aad
or
cltd
outsb
xor
sbb
jo
mov
xchg
aas
sub
dec
out
xor
push
cmp
aad
sub
insl
and
insb
mov
mov
stos
psubd
jmp
test
scas
mov
mov
or
imul
jnp
jp
push
cmp
loop
int
fldenv
roll
mov
stc
test
mov
in
fnsave
testb
add
loop
ret
and
fildll
fldenv
cld
add
xor
sub
int3
in
and
ror
dec
ret
jp
lock
and
call
jecxz
rcrl
mov
xchg
fnstcw
push
arpl
pop
inc
pop
call
adc
push
inc
push
xchg
cmp
insl
gs
cs
testl
push
scas
ss
pop
ds
mov
adc
ljmp
cmp
ss
push
and
pop
push
sahf
iret
jnp
test
mov
pshufw
cld
sti
jo
mov
add
sbb
cmp
data16
call
jp
mov
pushf
pop
out
psubw
mov
dec
jns
repz
dec
mov
sbb
push
popa
jg
cmc
hlt
cmp
push
fists
adc
arpl
push
notb
nop
into
and
lock
cli
in
fdivr
aad
xchg
push
mov
lock
jb
mov
mov
ljmp
fsubs
sbb
push
xor
xchg
or
sub
fistps
jle
out
out
fwait
imul
lret
dec
jns
orl
mov
sub
inc
daa
and
dec
call
out
popf
les
pop
stos
ds
dec
rcrb
testb
lahf
jg
and
pop
cmpsb
and
mov
inc
mov
add
pop
and
daa
lret
adc
and
adc
pop
xchg
adc
sub
mov
sahf
rcll
imul
or
enter
lds
and
addl
rcrl
clc
dec
subb
data16
pop
and
dec
mov
pop
dec
arpl
aas
sbb
loopne
lcall
psubq
sbbb
dec
cmp
jb
testb
pop
ret
adc
daa
pusha
mov
gs
jecxz
or
jo
aad
ja
xchg
or
inc
frstor
mov
fisttpll
xor
ljmp
fsub
lea
test
fsub
xor
inc
movsl
rcll
mov
sub
outsl
pop
sub
sub
aaa
push
push
dec
sbb
lock
dec
xlat
imul
cmp
mov
xchg
movl
fidivrs
lret
fidivs
jge
sbb
or
inc
repnz
jecxz
mov
cmp
inc
xor
push
cmc
xchg
imul
sub
xchg
pop
inc
add
sbb
aam
sub
mov
loopne
movsb
icebp
jmp
pop
lock
fsubl
call
test
mov
iret
jb
cmp
stc
out
shrl
rcrb
fstpt
dec
rorb
scas
dec
fdivl
lock
outsb
dec
repz
mov
sbb
mov
aad
arpl
mov
cmp
push
test
pusha
xchg
stos
jnp
dec
sub
cmp
pop
xor
cmpsl
inc
lods
gs
or
aas
sub
inc
outsl
and
lods
push
leave
and
inc
lods
push
dec
rclb
pop
pop
fldcw
dec
jne
mov
sub
out
and
cmp
aam
inc
cltd
and
fdiv
mov
lods
pop
loope
adc
lea
cli
andl
stos
in
push
mov
sbb
jl
out
push
xchg
jmp
ja
mov
sub
dec
push
cld
mov
rep
sub
or
cltd
js
lods
mov
lods
test
push
xor
pushf
cwtl
das
popa
ds
pop
imul
inc
adc
in
inc
outsb
in
dec
fwait
addr16
popa
cmp
out
xchg
roll
mov
outsb
jo
adc
mov
dec
sarl
mov
mov
push
pusha
xchg
movsb
shll
push
dec
dec
push
in
or
sbb
shl
xchg
sbb
mov
mov
dec
dec
mov
lret
or
inc
mov
dec
inc
addr16
subb
sbb
pop
dec
inc
push
movsb
fsubrp
mov
js
addr16
mov
test
and
xor
mov
aaa
ja
xor
pop
pop
sbb
mov
mov
sub
push
aad
mov
mov
mov
inc
cmp
call
out
push
jg
test
inc
sub
loope
jbe
ret
dec
add
xchg
mov
mov
mov
lret
rcrl
sbb
scas
cmp
sbb
mov
cmp
dec
push
aad
xchg
inc
pop
mov
fs
add
loop
in
call
mov
addr16
lahf
add
popf
sub
jnp
cmp
lahf
dec
add
bound
subl
lret
fdivs
dec
push
imul
mov
out
daa
mov
cmp
xor
ret
jnp
in
sub
je
mov
jo
pop
dec
xchg
pop
inc
push
mov
xor
roll
add
jg
xorl
xor
pop
stos
ds
shlb
sti
aaa
jmp
xchg
cmpsl
push
and
jns
into
inc
sbb
cs
sbb
mov
scas
js
or
mov
and
shl
aad
js
jg
clc
sub
push
dec
cmp
test
int3
inc
cmp
mov
fidivl
jne
sub
out
or
loopne
xor
mov
lret
jg
inc
test
xor
pop
insb
int3
movsb
leave
sbb
mov
xor
enter
dec
dec
and
push
ljmp
adc
mov
icebp
mov
roll
sbb
dec
lea
mov
xchg
rol
inc
pop
pop
mov
push
idivb
cs
imul
xchg
inc
mov
sub
mov
pop
push
xchg
add
gs
in
imul
fdivr
cmp
out
mov
aam
fucomip
mov
stos
and
out
mov
mov
mov
mov
dec
int
cmp
sbb
repz
arpl
mov
mov
add
mov
mov
sub
call
xchg
cmp
aam
inc
movsl
jmp
repz
mov
push
xor
push
mov
data16
xorl
add
test
stos
lods
pop
shll
lahf
stos
inc
nop
cmp
or
pop
sub
popa
ds
add
inc
jae
xchg
push
mov
lret
push
and
add
addr16
fmuls
push
lods
cmpsb
std
lcall
xor
jbe
arpl
xchg
xchg
ljmp
les
cmc
push
xchg
fsts
cltd
mov
push
pop
mov
out
nop
and
xor
clc
or
pop
xchg
in
add
or
int3
lcall
mov
push
lock
fsts
jae
outsb
js
subl
push
jle
push
xor
lcall
ret
sahf
ret
nop
xchg
sub
jb
mov
mov
adc
lods
lcall
lret
idivl
sbb
sub
push
popf
into
sbb
in
in
mov
pop
enter
aaa
rorl
mov
mov
fsts
fucomp
and
add
stc
ficoms
imul
jecxz
xor
mov
pop
in
mov
lock
shlb
adcl
pusha
push
outsb
idivb
mov
pop
or
imul
lret
mov
sbb
cwtl
push
cmp
sbb
push
adc
fisubrl
aam
cs
lock
rolb
flds
lods
xchg
add
jbe
scas
xchg
pushf
aam
cltd
stos
popa
jne
aad
cltd
mov
aam
mov
out
push
add
jle
mov
fucom
cmp
fidivl
test
inc
int3
insl
xchg
ja
mov
call
ja
popa
and
es
cli
mov
push
push
jbe
jmp
dec
cld
popa
mov
lahf
rcrl
cli
and
lcall
lock
jl
incl
rcl
xchg
adcl
or
aad
jnp
cmpsl
push
insb
test
clc
push
sarl
inc
into
jge
dec
xchg
or
sahf
shrb
pop
add
lods
outsl
mov
jle
cld
cmp
rorl
fisttpll
cmpsl
mov
ds
lahf
fisubrs
ret
in
imul
sbb
popa
leave
pop
std
push
pop
mov
mov
inc
or
cmp
cmpsb
idivb
and
xchg
xchg
stos
aas
adc
cmp
jns
push
adc
enter
lret
xchg
adc
mov
filds
add
icebp
mov
jb
leave
dec
lret
loopne
sub
dec
pop
mov
jecxz
lods
xor
pushf
imul
test
adc
mov
cld
scas
add
lahf
jg
mov
mov
cmp
sub
cs
test
rclb
cmpl
aaa
fs
sbb
imul
push
xchg
sub
pop
ds
jne
cvtpi2ps
inc
or
ds
in
jnp
test
loop
mov
inc
inc
fcmove
fs
call
inc
sub
lahf
clc
pop
and
ss
mov
and
ret
cwtl
xchg
and
pop
pop
gs
movsl
iret
inc
std
dec
add
mov
mov
out
rclb
adc
inc
int
cmp
popa
xchg
adc
jg
xchg
add
fwait
stc
xor
dec
std
jb
dec
sub
jge
and
enter
dec
mov
inc
inc
pop
lods
jle
mov
mov
or
mov
ds
out
mov
jb
and
jle
xchg
pusha
mov
dec
add
popf
xchg
addr16
mov
or
push
mov
jecxz
enter
imul
repz
test
repnz
out
mov
cmp
js
ret
in
and
push
notl
test
sbb
push
mov
cmpsl
outsb
repnz
ss
xchg
fdivs
aas
add
call
inc
push
adc
jo
or
xor
xor
scas
imul
mov
decl
xchg
inc
cli
mov
add
fs
mov
jbe
adcb
xor
jge
mov
imul
cmp
mov
fstpl
dec
sbb
or
repnz
and
lock
out
cmpxchg
lcall
add
pop
and
ljmp
rcl
mov
xchg
call
push
jno
lods
and
insb
rorb
in
sub
adc
sub
addr16
sbb
cltd
in
ljmp
mov
aas
adc
jnp
cld
jle
xor
mov
test
xchg
inc
push
jnp
insb
push
sbbl
or
sub
mov
lahf
push
imul
or
daa
imul
adc
fstps
ljmp
dec
loope
adc
lret
lcall
cmp
fwait
cmp
mov
push
xchg
dec
mov
inc
out
lock
das
in
movsb
mov
jecxz
ret
mov
cli
adc
imul
sbb
aas
outsl
sbb
out
leave
push
out
nop
cmpsb
sbb
dec
sub
insb
push
add
enter
jo
and
add
and
fdivrs
mov
nop
call
jp
loopne
dec
mov
ja
jno
mov
pop
or
push
jno
test
cmpsl
xchg
mov
pop
or
bnd
insb
cmc
adc
adc
xchg
test
adc
xchg
jbe
cld
or
push
xchg
rcrl
jb
dec
pushf
inc
das
cmp
lcall
ds
xchg
jb
sub
sub
nop
fcoml
dec
psubq
mov
jbe
pop
ja
mov
add
leave
inc
sbb
or
lods
repnz
outsb
add
imul
popf
mov
and
mov
or
and
add
push
sub
xchg
and
add
movsl
aaa
cmp
sbb
xchg
push
pop
es
pop
outsb
pusha
lahf
cltd
adc
popa
jo
ret
sbb
cmp
pop
mov
imul
das
adc
stos
popl
hlt
lods
aaa
popa
adc
lea
cltd
popl
decl
lret
loopne
inc
jge
rcll
xchg
aad
adc
xor
lea
sbb
sbb
lcall
push
push
stc
and
lret
out
cld
loopne
insl
mov
fldl
cmp
and
imul
mov
inc
push
xor
imull
test
pushf
cmp
sub
inc
add
int3
xchg
or
addw
jno
mov
jp
adc
movsb
xchg
or
dec
addr16
xor
mov
xor
daa
xchg
cmpsb
fiaddl
repz
cmpsl
in
int3
and
add
pop
imul
int
pop
xchg
pop
inc
and
sahf
adc
in
lret
pop
aas
loope
leave
fiadds
hlt
push
aaa
push
sbb
stc
jns
sbb
adc
or
sbb
mov
fs
xchg
add
shll
out
ss
cld
push
push
jbe
out
xor
jl
push
out
ljmp
outsb
mov
aas
outsb
jge
sub
pop
adc
push
incb
rclb
pop
data16
lock
test
dec
pop
aaa
or
mov
pop
xchg
adc
lods
push
movsb
fwait
and
mov
mov
push
jge
or
frstor
pop
xor
negb
nop
push
mov
stos
ljmp
push
dec
jnp
xchg
xlat
pop
or
rcll
adc
pop
inc
stos
les
nop
stos
sub
pop
xchg
scas
jns
cs
push
mov
int3
dec
mov
lods
mov
adc
imul
add
shl
mov
pushf
add
int3
inc
mov
dec
cld
xor
incb
push
rcr
mov
and
dec
mov
cwtl
out
call
xchg
out
sbb
arpl
lcall
loopne
test
sbb
jns
adc
mov
fcoms
xor
daa
bound
mov
and
and
lret
movsl
adc
out
in
sahf
pop
fsubrl
push
xor
setne
repz
mov
daa
fisubrl
test
adc
dec
pop
divl
fidivl
imul
and
je
mov
test
cmpsl
test
xor
icebp
out
mov
and
fbld
jmp
mov
cltd
mov
pop
mov
popa
cmp
sbb
xor
popf
push
pop
mov
mov
outsl
stos
push
jge
test
dec
sbb
sbb
add
inc
fdivp
mov
repnz
repnz
push
mov
shrb
push
shl
jb
sbb
pop
rcl
icebp
adc
in
jecxz
push
mov
add
lahf
inc
ret
fildl
incl
cmp
pop
lods
sbb
repz
into
incb
sbb
out
cli
arpl
ret
push
gs
inc
inc
sub
clc
out
dec
dec
incb
mov
cli
mov
and
or
hlt
mov
sub
mov
mov
leave
test
das
jl
and
sete
add
shll
pop
insl
fwait
jg
xor
ror
jl
mul
add
push
enter
sbb
loope
xor
es
mov
inc
testl
dec
sahf
stos
cwtl
bound
lods
stos
shrb
sbb
call
call
lds
ret
shrb
cs
pop
mov
inc
sti
jno
push
enter
nop
sti
sbb
subb
sahf
push
lcall
inc
data16
inc
vcmpps
xor
fs
movsb
mov
lods
dec
or
rclb
pop
loopew
xchg
push
mov
push
add
test
mov
pop
out
cmp
xor
insl
std
sbb
jbe
out
adc
imulb
fcom
in
cmp
lcall
sub
inc
push
ret
lret
sbb
pusha
aas
mov
imul
cbtw
iret
iret
xchg
sub
xchg
int3
popf
popa
jno
and
mov
xchg
data16
pop
inc
out
jns
icebp
xorl
xchg
lret
sarb
bswap
sub
jnp
lods
xor
dec
test
lret
lahf
aad
aad
push
mov
enter
add
inc
xchg
mul
mov
ret
clc
fiadds
call
test
sbb
and
movsb
inc
pop
xor
xchg
fwait
mov
and
push
pop
lret
in
icebp
stc
pop
jge
sti
movsl
ret
push
adc
scas
popf
mov
mov
sub
xchg
test
cmc
cli
mov
mov
jmp
dec
inc
je
inc
push
cwtl
adc
int3
jp
and
adc
ret
jg
inc
ret
loope
stos
shlb
leave
daa
es
jae
js
add
pop
or
sti
or
outsl
aam
ljmp
dec
repnz
mov
and
mov
cmp
sarb
leave
xchg
insl
sub
jp
inc
or
push
and
rorb
push
mov
aad
out
cltd
lea
scas
fdivs
push
fsub
insw
arpl
sub
add
jg
sub
flds
sbb
fs
adc
cmc
nop
adc
xchg
or
sub
cltd
sub
xor
xor
stos
test
dec
or
pop
jle
sbb
mov
jmp
fisttps
pop
pop
aam
push
push
mov
xor
pop
xchg
ret
push
jmp
adcl
shll
int3
mov
cli
inc
lea
xchg
mov
add
pop
loop
sti
mov
ljmp
push
adc
push
das
test
out
adc
push
mov
stc
lds
xor
mov
xchg
inc
insb
dec
mov
push
lcall
sbb
mov
jl
in
scas
mov
loopne
sub
sub
push
mov
push
push
mov
mov
or
pop
imul
push
sbb
adc
sbb
scas
cmp
mov
sub
mov
pop
push
push
outsl
call
adc
bswap
xchg
mov
cs
stos
cltd
dec
enter
out
imul
inc
data16
out
mov
push
scas
loop
daa
pop
cld
sbb
out
fdivrl
adc
in
pop
mov
pop
js
sub
test
fnstsw
stos
push
pusha
sub
imul
subl
cmp
mov
mov
aas
jle
cmp
out
push
scas
pop
insl
mov
pop
cwtl
xor
cmc
lods
pop
lret
lahf
mov
repz
movsl
repz
test
jle
inc
pop
sbb
mov
cmpsl
movsb
inc
loop
pop
call
out
cmp
push
jne
and
jne
movsl
and
sub
js
add
ret
xchg
or
mov
lods
sti
xchg
and
dec
adc
and
clc
call
std
sub
lods
rcrl
sahf
cmp
andb
or
jns
sar
nop
dec
test
fstpt
mov
aam
mov
or
add
fists
cwtl
dec
dec
xchg
ret
into
mov
pop
lret
and
ffree
scas
fldpi
xchg
mov
add
push
int
jge
rcll
sub
jge
xor
sub
das
jne
fs
aad
add
loopne
fsubr
sti
nop
mov
les
or
xchg
lea
repz
sbb
add
inc
adc
stc
mov
inc
inc
jg
mov
xor
sti
adc
mov
mov
insb
leave
mov
mov
lds
xor
push
popf
push
jmp
xor
popa
mov
rcrb
add
cwtl
repnz
les
fprem1
xor
add
or
xchg
mov
out
jnp
mov
adc
xchg
rorl
rolb
sub
and
and
push
mov
test
adc
and
clc
and
pushf
stos
inc
loope
stos
sub
xchg
or
and
je
adc
pop
xchg
pop
sub
lahf
xchg
xchg
xor
lcall
jb
lods
mov
popa
jno
xor
orl
mov
adc
ficoml
add
xlat
rorb
inc
cltd
bound
pop
jnp
into
and
loop
mov
enter
mov
xchg
imul
pushfw
cmp
faddl
aas
int
xchg
shlb
pop
jb
xchg
mov
or
ret
incb
out
cs
mov
jl
call
int
mov
lret
jge
or
pop
lret
xor
dec
rcll
sub
xlat
ret
mov
loop
jge
inc
pop
pusha
and
jecxz
pop
call
je
xor
mov
les
cmp
jne
push
add
ja
inc
adc
mov
jmp
ljmp
popaw
aad
adc
mov
push
dec
mov
adc
aam
mov
mov
mov
cli
jb
and
jmp
test
jo
sbb
xor
insb
add
xorl
or
je
xchg
sahf
xchg
adcb
testl
cmc
pop
cmp
outsl
dec
in
mov
ret
mov
cmp
arpl
stc
push
lea
test
shr
fucomip
outsl
xor
jnp
inc
xor
mov
shl
inc
ret
loop
notb
sub
pop
xchg
dec
sbb
inc
ljmp
iret
fsubrs
mov
push
xor
inc
test
inc
xchg
jo
pusha
adc
shll
mov
jmp
mov
mov
lock
mov
xor
mov
xchg
and
sub
sahf
and
fisubrs
mov
and
mov
xor
ljmp
fwait
mov
fldl
ficoml
lea
jne
sub
sti
in
mov
mov
mov
jb
sub
mov
leave
incb
xchg
lea
fsubr
cmpsb
movsb
mov
pusha
and
adc
ret
or
rolb
dec
push
in
flds
cld
xlat
ss
xor
mov
and
notb
loope
pushf
cs
xor
xchg
repnz
mov
adc
loopne
mov
out
push
cmc
lret
stos
addr16
inc
push
and
repz
sub
jnp
fstps
stc
mov
adc
icebp
mov
jns
subl
popf
pop
or
pop
in
scas
or
dec
in
pop
push
push
mov
adc
or
pop
loopne
mov
push
add
or
sahf
xchg
dec
and
in
cld
adc
mov
pop
cld
std
fisubrs
or
jecxz
mov
mov
pop
idivl
mulb
sub
cmp
jcxz
dec
inc
ror
cmpsl
inc
shll
loop
fisubs
fbld
cmp
pop
sub
imul
mov
pushf
push
xor
push
fisubl
in
fadd
outsb
dec
lds
mov
outsl
fdiv
xorl
mov
inc
xor
push
dec
or
xlat
jecxz
dec
inc
adc
cmp
gs
fisubs
adc
stc
inc
xchg
sbb
ja
mov
scas
pop
sbb
and
mov
hlt
pop
ret
mov
enter
sub
mov
dec
cmp
push
sub
leave
fildl
dec
jle
dec
pop
pop
in
or
dec
pop
cmpsb
fbstp
jle
pop
pop
inc
hlt
mov
mov
xor
pushf
fldt
sbb
les
je
mov
pushw
mov
into
push
xor
add
ja
push
arpl
add
jecxz
fdivrs
mov
sbb
xor
repz
mov
lret
rorb
sbb
add
mov
or
xchg
ror
addr16
mov
push
mov
jne
xor
daa
js,pn
lea
or
sbb
lods
loope
jle
addr16
iret
sbb
mov
or
pop
push
and
cmp
jno
inc
xchg
ds
and
push
sti
popa
lahf
sbb
mov
out
loopne
cmp
sbb
insb
shlb
sub
xchg
cmpsb
cld
jge
addr16
cltd
add
and
cmpb
push
pop
inc
out
mov
int3
sbb
jg
mov
add
aaa
xor
xor
add
push
inc
xchg
mov
mov
jp
jne
mov
cmp
subl
test
loopne
pushl
inc
mov
pop
neg
cmp
push
in
movsb
shr
add
sbb
sarl
notb
aam
push
sbb
not
xchg
rclb
jge
jns
pop
inc
xchg
push
lret
dec
and
push
jo
imul
xchg
mov
mov
cs
aas
mov
xchg
jo
push
addl
mov
lds
lret
mov
repnz
sub
lret
mov
in
adcb
jo
lods
ret
inc
rorl
fcoms
xchg
call
cmc
clc
cs
aas
sbb
add
jne
jo
fistps
fadd
pop
mov
inc
mov
push
push
adc
jl
in
or
movsb
add
xlat
mov
or
test
dec
xchg
subb
dec
mov
sbb
mov
inc
mov
jns
xor
mov
cmp
daa
adc
pusha
pop
stos
inc
or
lahf
push
mov
push
pop
aas
cmp
push
mov
loop
daa
out
mov
icebp
leave
in
test
or
cmpsl
adc
sbb
loop
lods
arpl
andl
pop
test
jle
mov
test
cmp
jns
add
rcrb
std
shl
add
xor
cmpsb
push
mov
mov
cs
dec
aas
fs
push
push
inc
rclb
loopne
ja
push
jmp
loope
lret
mov
jne
cmp
arpl
fcom
mov
xor
and
dec
outsb
frstor
sbb
sub
and
push
adc
mov
jne
stos
lds
dec
cmp
ljmp
xor
icebp
sbb
scas
mov
adc
pop
cmp
jbe
push
and
add
and
add
and
xchg
imul
mov
push
add
and
add
popa
inc
mov
daa
aam
push
add
mov
sub
cmp
mov
loopne
sub
int
lret
shlb
pop
fbld
mov
in
and
mov
cwtl
mov
or
jle
push
test
xchg
test
rcl
and
ficoml
sbb
add
loop
mov
jae
fcoms
ret
mov
add
jb
cs
pop
push
sbb
leave
fsubp
mov
orl
insl
or
sahf
imul
adc
jnp
inc
loope
pop
out
push
jp
fimull
jle
mov
mov
call
and
int
outsl
es
or
fmull
out
rcrb
pop
pop
ljmp
int3
and
adc
adc
mov
dec
fisubl
sbb
mov
dec
jnp
lcall
mov
jmp
lea
inc
xor
addr16
sbb
out
clc
and
mov
xor
xchg
add
xor
loop
icebp
int3
nop
jmp
push
mov
xchg
sub
pusha
jae
dec
fsubl
xor
out
or
data16
cmc
test
das
cmpl
imul
sbb
adcl
pop
cltd
mov
sub
stos
add
xlat
inc
mov
and
out
push
pop
push
div
stos
rcrb
imul
fstps
inc
incl
xlat
ja
mov
dec
aas
xchg
cmpsl
adc
cmc
mov
fistpl
and
ss
xlat
sti
mov
imul
mov
mov
call
cwtl
dec
sbb
cs
sbb
fistps
pop
lea
iret
mov
dec
add
cltd
inc
or
dec
mov
sbb
sub
insl
and
pop
or
fiadds
jl
or
add
dec
xor
or
fimuls
movsl
jno
lock
std
stc
mov
inc
push
push
shr
aam
into
stc
jb
sub
ds
mov
movsb
jge
rclb
mov
pop
loope
data16
movsb
push
push
cltd
adc
and
scas
lcall
daa
loopne
or
dec
ret
test
popf
sti
sub
sahf
inc
wbinvd
in
mov
lock
mov
push
sbb
daa
fdiv
mov
push
dec
push
lock
movsb
cmp
insb
or
ds
std
sar
lret
test
xor
push
in
xor
out
xchg
push
lret
fldcw
addr16
cmpsb
fistps
sarl
add
sub
scas
pop
jno
scas
mov
mov
sbb
and
repz
adc
jle
pop
out
push
cmp
sti
sbb
arpl
or
lcall
sti
cld
mov
ds
dec
cmp
loopne
dec
add
cmpsb
sahf
cmpb
push
dec
add
ret
enter
das
lds
mov
out
cs
movsb
pop
pop
mov
push
lret
sbb
sub
mov
adc
fldt
add
push
insb
xor
push
pop
stc
add
rcll
outsl
mov
and
sbb
std
jae
lods
outsb
push
add
add
imul
icebp
jmp
mov
ljmp
rolb
in
insl
cmpsl
imul
mov
test
xor
cmpsl
ss
jmp
pusha
rcll
fwait
out
xchg
pop
loopne
dec
dec
stc
add
mov
cmp
mov
nop
xor
jnp
leave
mov
mulps
fidivl
in
scas
negl
std
lds
jbe
mov
xchg
pop
mov
mov
mov
leave
popa
inc
in
jns
icebp
or
add
lods
stos
sub
cmp
idivb
sub
imul
inc
push
and
cmc
imul
arpl
cs
dec
or
add
lret
mov
cmp
sahf
mov
dec
mov
aam
cmpsb
inc
jmp
xor
lret
xor
inc
xorb
sbb
shl
leave
fists
xchg
sbb
pop
aas
outsb
ljmp
mov
iret
mov
xor
je
adc
sbb
cmp
idivl
pop
mov
xor
ret
ficoms
fs
sub
or
push
pushf
xchg
in
pop
fdivrp
insb
jp
call
and
je
dec
ja
in
cmp
xor
mov
pop
loope
and
pop
incb
mov
xchg
cwtl
sbbl
pop
add
jmp
mov
out
mov
sub
cmp
xchg
jecxz
cld
loop
xor
push
and
lea
jne
testl
les
or
sbb
add
cltd
cmpsb
jb
fiaddl
lods
push
shrl
xchg
lcall
dec
je
jge
sub
mov
cld
lods
push
sub
les
mov
bound
adc
inc
sub
jbe
push
or
sti
jle
cmp
mov
mov
test
mov
cmpsl
sub
fcmovb
sbb
pop
xchg
xor
push
xchg
push
adc
sbb
fmull
test
repnz
push
cmpsl
pop
and
movsb
sbb
lcall
mov
fidivrs
jl
shlb
inc
fimull
or
stc
jns
pushf
loopne
cwtl
xor
push
sub
gs
enter
cmp
repz
das
push
neg
out
imul
xlat
pop
popa
hlt
xor
sbb
push
outsb
out
inc
jne
mov
ret
aaa
cmp
sub
repnz
fs
xor
inc
ss
cli
pop
or
push
ja
lret
jae
mov
loop
in
push
lcall
insb
lret
lods
xor
shrb
sbb
push
inc
jo
loop
xor
lret
xchg
clc
xchg
mov
ret
mov
test
jge,pn
decb
sub
fndisi(8087
or
loopne
mov
push
insl
jle
out
sub
adc
add
js
cmp
sub
aas
xor
lock
xor
jmp
add
das
push
inc
xor
and
sbb
pop
imull
lret
enter
or
jbe
les
icebp
add
jae
rol
cmpsb
ficoms
int
icebp
fnsave
cltd
push
adc
arpl
xor
cmc
or
push
mov
inc
xor
into
mov
adc
popa
xchg
jge
cmp
mov
dec
mov
mov
pop
incb
xchg
cmpsl
movsl
lret
fwait
shlb
cmpsl
mov
xchg
xchg
xorl
xchg
divb
xchg
dec
lods
test
pop
jbe
clc
inc
scas
addl
jmp
cmp
ja
cmp
test
mov
dec
mov
pop
dec
mov
sbb
inc
pushf
jg
in
mov
cld
sbb
pop
push
push
cmp
mov
xor
aad
std
addb
out
ss
push
jl
int3
lahf
cltd
mov
adc
xor
dec
xchg
add
mov
lea
aad
ficomps
insl
daa
les
ljmp
cmp
xor
shrb
pop
adc
xor
pop
fwait
inc
jg
iret
fmulp
bound
cmp
pop
mov
pop
imul
cmp
sub
fidivs
out
out
add
push
cmp
mov
xor
and
cmp
mov
sarb
mov
not
loop
pushl
scas
mov
or
cmp
call
push
mov
in
mov
inc
imul
add
gs
les
jae
push
int3
cmpsb
xchg
dec
out
dec
call
fisttpl
cmp
pop
inc
pop
sbb
lods
es
sub
jg
lcall
or
cmpsb
stos
addr16
jmpw
loopne
dec
fistpl
jbe
mov
inc
jl
leave
clc
sbbb
xacquire
fdiv
and
into
movsl
cmc
fnsave
imul
mov
bound
daa
cmc
aas
ds
or
repnz
sbb
jbe
jb
in
cmpsb
push
push
mov
shll
mov
mov
sub
and
arpl
inc
or
dec
sbb
mov
push
adc
jg
out
adc
add
fstl
fisttps
sub
fldenv
mov
ret
sahf
cli
sti
clc
jno
jo
and
movsb
push
mov
cmpb
push
cmp
jle
mov
mov
mov
imul
les
int
imul
mov
mov
mov
inc
jae
bound
or
int3
mov
pop
pusha
adc
jg
out
sbb
jbe
ret
or
jmp
insb
stc
data16
or
mov
sbbb
es
fwait
rcrl
mov
call
movsl
test
jmp
sbb
insb
cmp
dec
jl
dec
cmp
subb
repz
lcall
cltd
push
xor
dec
pushf
or
mov
jbe
pop
sti
out
push
or
jb
ficoms
lret
fcmove
mov
fs
push
popa
cli
fucomip
icebp
popa
out
outsl
adc
mov
fs
xchg
inc
jmp
and
or
adc
adc
xchg
sub
xchg
in
cltd
aaa
sub
ljmp
call
sbb
ror
hlt
ret
dec
sti
out
sub
repnz
fsubl
or
and
sub
jnp
add
add
and
rorb
inc
ret
and
mov
imul
cmp
pop
pop
repnz
addr16
clc
call
fstpt
cmp
add
cltd
lods
mov
stc
sub
fbstp
bound
xor
int
mov
vpcmpgtb
jg
aas
inc
dec
dec
not
or
and
out
pop
fwait
jno
xchg
jge
movsb
or
enter
aas
out
add
xchg
inc
cmp
mov
mov
adc
mov
popa
sub
inc
sbb
inc
in
adc
clc
lahf
shrb
movsb
aaa
cmc
in
and
jno
jl
pop
jae
pushf
ss
into
out
sarl
mov
loop
xchg
inc
cs
lods
xchg
les
out
lock
mov
mov
les
les
lea
fstpl
into
xor
xor
pop
mov
imul
cmc
xorl
mov
jmp
push
adc
or
fidivl
in
pop
aam
inc
lahf
pop
das
xor
pop
daa
addl
aad
icebp
stc
adcl
jns
or
push
loop
sub
mov
dec
test
out
jge
popf
xor
js
jns
cmp
call
inc
sub
sbb
xor
xchg
rol
xor
ljmp
pop
test
push
pop
lds
ja
iret
or
adc
xor
mov
jl
push
enter
popf
xor
fstpl
mov
mov
mov
push
jo
cmpsb
push
test
mov
and
xchg
lods
sahf
and
dec
push
scas
hlt
arpl
in
in
ffreep
jb
push
xor
lock
mov
cmp
adc
das
xor
pop
push
push
aad
movsb
push
jns
mov
rep
pop
ret
jns
mov
imul
jno
pop
lock
lods
into
xlat
out
in
loopne
shlb
mov
incb
jmp
repnz
test
pop
mov
cmp
pop
mov
and
pop
xor
in
mov
cltd
mov
into
push
loope
mov
movsl
cmp
popf
pop
push
js
pop
dec
fs
sub
popa
jns
xor
mov
repnz
test
and
or
mov
xor
sbb
js
into
jle
jbe
pop
sbb
aam
xorl
cltd
sub
ds
loope
lret
int
in
adc
out
mov
loope
lods
inc
jl
pop
cmp
orb
push
jecxz
jne
add
push
push
xchg
push
lods
pop
cmp
mov
dec
fcoms
pop
jo
loop
mov
ret
pop
ficoml
nop
mov
enter
fcomps
dec
inc
leave
pop
push
mov
divl
mov
mov
aas
ficoms
addb
mov
xor
testl
mov
adc
call
push
push
push
btr
sbb
push
dec
lds
pop
fstl
dec
movsb
dec
push
jae
inc
and
cmp
lea
clc
jb
pop
int3
mov
fcompl
in
es
gs
ret
sub
inc
clc
dec
jnp
lcall
in
fdivs
jg
jmp
lods
clc
sub
fst
jnp
adc
sbb
lcall
popf
sub
sbb
fnstcw
inc
sbb
mov
push
mov
mov
or
mov
pop
push
sbbb
and
mov
sbb
cli
ljmp
aam
fsts
lahf
sbb
rcr
orl
xchg
decl
aad
enter
bound
loopne
xchg
push
or
dec
xchg
xor
insl
dec
ja
inc
jg
jmp
lods
cld
addl
adc
mov
mov
packsswb
or
sbb
and
dec
std
outsb
inc
mov
movl
dec
mov
into
mov
push
push
and
shl
add
fldenv
jae
outsl
pop
lea
inc
add
nop
ret
xor
and
fwait
lahf
and
shll
icebp
or
daa
sub
inc
loopne
out
inc
fwait
stc
xor
andb
cmp
mov
sub
cmpsb
adc
xchg
iret
cmp
dec
clc
test
scas
lock
out
and
repz
mov
xor
mov
jecxz
adc
daa
stos
inc
fcomi
mov
dec
cld
mov
inc
inc
xor
std
mov
decl
pop
aaa
adcl
ds
sbb
or
jg
adc
aaa
jg
ret
inc
xchg
sub
inc
xor
aas
sarl
addl
xchg
imul
rcrb
fsub
adcb
pop
cmp
inc
int
aad
mov
cmp
dec
push
xor
shr
repz
fwait
cli
mov
jo
subb
adc
jbe
jmp
mov
mov
mov
lea
movsb
mov
ds
mov
jb
dec
clc
cs
mov
push
int3
inc
sub
pop
lods
mov
add
and
pop
sbb
xchg
adc
stos
add
xchg
gs
adc
and
ror
and
in
dec
rclb
pop
fisubrl
jl
imul
xor
xchg
loope,pn
stos
xchg
jns
lcall
adc
dec
pop
sub
add
testb
mov
cmp
pusha
cwtl
adc
arpl
xor
jb
stc
xchg
enter
push
insb
movsl
cmp
dec
int
imul
xchg
fs
mov
mov
pop
das
mov
test
adc
das
fstps
aaa
sbb
in
fistl
aas
sub
xchg
cli
add
in
fs
mov
fs
out
xor
sbb
mov
push
ss
int
jge
lods
inc
enter
pop
mov
push
jl
mov
sti
loop
xchg
cmp
dec
push
sbb
push
stc
mov
jnp
int
push
dec
dec
rorl
mov
sbb
dec
push
imul
mull
lods
pushf
js
pusha
sub
shll
push
sbb
lds
jo
mov
mov
icebp
xchg
mov
subb
std
mov
popa
xchg
adc
and
cld
aaa
rol
sarb
ror
xchg
jp
cltd
xchg
inc
out
pushf
mov
xchg
cmpsb
aas
push
cld
mov
andb
fistl
mov
xchg
mov
imul
das
add
test
lea
mov
push
inc
mov
ret
push
leave
pop
test
lods
test
mov
stos
popa
inc
mov
sub
in
mov
shrb
fnstsw
mov
xchg
rorl
push
bound
lods
mov
stos
jne
sbb
aam
mov
das
in
push
add
push
inc
or
mov
add
out
xchg
mov
dec
jo
dec
dec
mov
lcall
imul
dec
jp
outsb
xlat
mov
jg
mov
push
jbe
sbb
ljmp
xor
clc
adc
sbb
dec
sti
les
and
mov
xchg
iret
int3
nop
test
adc
movsb
mov
jp
out
sbb
pop
shll
cltd
pop
shll
mov
mov
test
pop
and
push
adc
mov
jns
loop
add
je
shl
mov
jp
inc
faddl
in
push
jne
fucom
adc
imul
sahf
test
imulb
inc
aas
leave
fucomi
rorl
rcr
sbb
jl
sbb
mov
xchg
pop
popf
xchg
mov
inc
sbb
cmpsl
inc
mov
sbb
dec
test
mul
push
mov
add
or
scas
clc
jno
cli
xor
ss
mov
out
mov
loopne
aaa
jmp
repnz
xchg
push
push
push
cmpsb
addr16
mov
movsl
cmpsb
dec
into
aad
enter
mov
inc
xor
jo
lds
jl
clc
mov
inc
cmp
mov
push
sbb
sbb
dec
jl
movsl
aaa
daa
into
mov
push
sarl
movsb
int3
jbe
jae
push
call
adcb
cli
fldenv
pop
bound
inc
imul
lods
imul
dec
enter
stos
inc
pop
cli
dec
mov
xchg
add
mov
mov
fstpl
sbbb
and
and
mov
dec
std
fcompl
mov
fidivl
inc
xor
cmpl
mov
lods
ja
call
call
lret
lcall
dec
or
out
inc
cmpsl
push
mov
jp
mov
dec
aaa
jnp
lret
and
push
out
dec
divb
mov
pusha
push
push
add
mov
mov
orb
repnz
sbb
push
jp
mov
adc
imul
jo
push
stos
cmp
dec
in
or
popa
gs
pop
outsb
mov
lods
popf
ds
xchg
ss
sub
pop
jmp
sub
mov
repnz
loopne
dec
in
sub
les
dec
or
sbb
ljmp
paddw
incb
mov
in
sti
insl
inc
and
push
push
xchg
inc
data16
and
mov
mov
xchg
push
lcall
pop
sub
stc
insb
mov
push
sub
fistl
cmc
orl
and
or
fdivs
sub
pop
mov
scas
inc
xchg
lahf
mov
fs
mov
ret
rolb
ret
xchg
xchg
mov
insb
pop
aam
adc
subb
xor
idiv
pop
xor
mov
add
push
gs
movsl
mov
jg
gs
out
jp
cwtl
popl
js
les
mov
push
ljmp
mov
mov
fwait
push
xchg
out
push
iret
sub
fstl
loope
stc
jl
rcll
sahf
and
ret
into
out
lds
or
repz
xchg
mov
out
jbe
clc
stc
test
jmp
xchg
mov
xor
dec
or
and
in
lds
pop
xor
lea
add
stc
mov
jnp
xchg
xor
mov
push
lods
mov
fs
mov
or
out
test
ficompl
lods
movsl
sbb
iret
into
lock
pop
lds
mov
shlb
inc
sbb
jmp
pusha
fcomi
mov
add
gs
idiv
add
jb
bound
add
pusha
popa
test
xchg
inc
or
into
pusha
push
lea
in
fildl
and
mov
xlat
mov
addr16
out
mov
out
mov
push
push
fisttpll
jmp
test
lret
in
das
push
ror
testl
lea
enter
shrb
jno
movsl
in
mov
shl
mov
notl
jno
mov
mov
inc
inc
xchg
das
jmp
xor
pushf
add
or
xor
xchg
mov
aad
push
fldcw
or
adc
arpl
jecxz
stos
inc
addl
mov
jmp
mov
dec
pop
mov
scas
out
lock
sbbb
xchg
mov
xor
shll
jns
push
sub
lods
arpl
push
xchg
mov
fldenv
lahf
or
shll
scas
fstpt
jns
adc
lret
fwait
xor
mov
ds
mov
mov
xchg
testb
lret
mov
shrl
fucomip
xor
insl
push
out
pusha
popa
shll
mov
pop
leave
insb
insl
fs
call
popa
cld
popf
add
inc
rcl
out
xchg
pop
sbb
roll
jb
in
inc
jbe
lock
int
pusha
popa
mov
das
out
pop
outsb
mov
clc
fs
or
sbb
jp
or
pop
imul
push
pop
in
push
pop
add
inc
std
stos
mov
imul
mov
mov
push
insb
decl
cmp
fs
fsubr
inc
cmc
mov
pushf
fidivrl
add
jmp
rol
je
adc
inc
ret
lahf
push
ja
push
mov
dec
cmp
aaa
inc
ret
jno
mov
xchg
xorl
lahf
push
es
int
xor
mov
in
cmc
das
cltd
popa
fbstp
or
daa
cli
xlat
dec
sarl
adcl
sbb
sbb
call
lcall
lret
xchg
mov
cmpsl
loopne
sub
push
cltd
mov
cli
insb
ds
out
outsb
lods
sbb
push
lea
scas
aam
cmp
rolb
fbstp
shl
jg
loop
incb
or
mov
push
inc
jmp
and
stos
mov
lcall
pop
cs
out
sbbb
rorl
stos
adc
push
inc
and
movsl
sub
scas
cmp
aam
int
inc
xchg
movsb
sahf
orb
aas
mov
adc
and
add
xlat
mov
sar
cmp
ja
lcall
push
iret
arpl
push
dec
sbb
mov
inc
lcall
ret
jge
sbb
mov
out
mov
dec
or
cmp
bndstx
adc
jg
cmc
mov
popa
sub
dec
scas
jge
sahf
push
adc
inc
sub
xor
cmp
sub
xor
outsl
and
pop
aas
adc
pop
pop
jae
mov
cmp
add
mov
mov
cs
and
sub
add
leave
jecxz
js
jl
jl
cli
in
in
xor
fisubl
pop
out
xorl
push
into
push
aaa
out
test
or
adc
mov
lahf
mov
mull
andb
insb
test
jle
out
pop
out
cmp
leave
xor
mov
bound
sbb
mov
shl
cmp
or
call
repnz
push
sti
inc
push
xor
punpckhwd
dec
scas
xor
popf
push
and
je
ret
push
push
xchg
sub
pop
aas
jbe
cmp
scas
in
or
out
cmpsb
and
add
sub
les
lahf
push
or
jecxz
mov
sub
mov
and
into
pop
pop
sahf
scas
jne
dec
icebp
mov
les
jnp
lcall
mov
mov
insb
lret
cmpsl
je
sbb
aam
push
testb
imul
dec
test
cmc
jns
mov
pop
mov
jo
mov
inc
imul
pop
inc
push
sbb
cmp
nop
insl
jp
mov
mov
xor
jo
scas
stc
and
sbbb
push
or
mov
dec
mov
subb
in
push
push
es
jg
mov
iret
test
es
and
fsubl
mov
xor
and
test
lret
ret
daa
mov
aam
dec
ja
gs
adc
pop
cmp
push
sub
subb
mov
je
cmpsb
bound
out
roll
jecxz
mov
jo
clc
lock
movsb
dec
aas
adc
fwait
cmp
or
sbb
mov
push
lods
ret
js
dec
sahf
fs
cli
jbe
inc
stc
inc
xchg
out
repz
stos
insb
lods
xchg
repz
addl
lods
xchg
jae
adc
add
pop
adc
aas
div
popf
inc
roll
pop
inc
jnp
xchg
push
xor
add
sub
sub
mov
push
mov
sub
repz
xor
cld
popf
outsb
inc
jge
icebp
cmp
sub
or
idivb
je
cmp
xchg
adc
lret
fdivrl
push
rcrl
es
jae
sbb
test
add
push
pop
scas
in
aaa
xchg
dec
pop
cmp
sbb
pop
inc
or
mov
jp
dec
xchg
les
mov
cmp
loop
mov
cmp
fnstenv
aad
and
mov
adc
add
sbb
cmp
adc
sbb
dec
jno
test
aam
les
and
sti
int
cmc
mov
xchg
and
sbb
lcall
test
jg
rcrb
imul
in
push
test
and
mov
movsb
mov
adc
xchg
sbb
pop
cmp
add
es
icebp
movsl
push
push
sbb
xchg
or
mov
mov
ret
js
or
push
xchg
dec
ret
dec
adc
jg
test
popf
pushf
sub
sub
xchg
subps
or
pop
cmpsl
cmpb
sub
nop
loope
js
mov
or
sahf
in
xchg
out
cmp
push
jae
or
adc
pusha
jecxz
inc
cmp
sub
pop
fstpl
sbb
mov
loopne
mov
mov
pushl
popf
add
popf
xor
leave
shlb
ja
pop
mov
adc
movsl
pop
mov
xchg
or
sbb
cmp
cwtl
xor
push
cmp
fiaddl
ljmp
insl
stos
hlt
xchg
xchg
adc
pop
lret
or
or
or
mov
push
mov
aas
mov
add
push
fstpl
mov
sub
stos
fwait
out
cmp
adc
push
mov
hlt
enter
shlb
xor
jb
mov
cmp
stos
in
adc
inc
test
jmp
sbb
leave
fisubs
xchg
fwait
mov
scas
add
cwtl
andl
imul
fbstp
adc
push
dec
mov
sbb
xor
or
daa
arpl
and
dec
add
mov
in
loope
jecxz
out
add
pop
arpl
addr16
jle
imul
das
adc
jg
jl
xor
mov
push
ret
cmp
jbe
dec
insb
aas
jne
add
adc
cwtl
lods
sbb
cmp
adc
pmaxub
pop
sbb
rcrl
sti
pop
pop
inc
sbb
out
jno
ds
dec
stos
inc
xlat
clc
and
mov
mov
adc
mov
inc
mov
scas
cli
cmp
dec
ds
out
iret
cmp
in
push
pop
ljmp
test
dec
mov
es
pop
imul
mov
test
mov
sub
mull
insl
jae
fs
inc
xor
dec
ljmp
dec
pop
enter
xchg
sbb
imul
dec
dec
adc
adc
hlt
mov
push
rcrl
aam
popf
pcmpgtd
out
les
fsts
cwtl
out
cmc
xchg
xor
cltd
cltd
xor
inc
push
xor
push
repnz
lods
data16
subb
adc
pop
pop
stos
xchg
xchg
dec
dec
jg
xchg
or
cmp
mov
sbb
mov
sbb
aas
aas
cld
mov
lds
mov
or
lods
pushf
xor
sub
outsl
fisttps
sub
fistpll
dec
cmp
cld
jne
in
push
leave
jns
insb
cmp
lods
loop
xchg
add
inc
or
mov
or
mov
jmp
ds
aas
sub
fwait
int
and
gs
add
pop
jnp
rcrl
xor
pop
push
outsl
mov
insl
test
out
js
jmp
mov
ret
ret
xor
pushf
push
jns
or
enter
pop
lcall
nop
and
in
repnz
clc
leave
push
mov
sbb
pushf
js
nop
rorb
xchg
push
out
push
or
stos
into
shl
lret
aam
mov
mov
ljmp
scas
and
fisubs
pop
je
and
arpl
push
loopne
sbb
and
pop
dec
push
sbb
or
popa
mov
push
scas
ljmp
lahf
xchg
pop
jo
nop
mov
inc
ss
jno
inc
push
xor
es
xor
push
cmp
sub
sub
add
or
imul
sub
call
add
cld
hlt
repz
and
push
mov
or
mov
xlat
mov
fstpt
mov
pop
mov
rcll
test
lock
sbb
mov
xor
mov
push
or
sub
stos
sub
fbld
loope
lods
ror
in
test
inc
xchg
sub
gs
lods
test
pop
outsb
mov
mov
gs
inc
mov
scas
gs
sar
jbe
xchg
cli
jge
rorl
push
or
xlat
mov
sbb
sti
push
mov
repz
fisubs
sub
imul
push
jle
or
and
out
fcoms
xor
scas
mov
mov
xchg
rcrl
ljmp
kunpckwd
addr16
mov
xchg
clc
xlat
dec
lods
push
mov
mov
pop
inc
sar
test
jno
cwtl
pop
aad
cmp
pop
sbb
add
mov
jo
sbb
adc
pop
inc
add
rcr
push
jae
pop
arpl
fistl
add
in
es
pop
mull
cmp
adc
pushf
pop
pushf
stos
jae
das
inc
addr16
or
das
loop
movsl
repz
add
and
mov
inc
in
ds
stc
pop
pop
xchg
popf
adc
fsubl
into
repz
test
sbb
mov
ficomps
xchg
jo
movsl
daa
test
test
adc
mov
out
jp
popa
shr
adc
dec
arpl
jge
or
xor
decb
push
aad
jne
mov
ret
nop
jp
sbb
jl
push
cli
and
cmp
shlb
bound
out
push
xor
mov
push
xchg
mov
mov
roll
adc
fmuls
pop
rcrb
aaa
int3
ljmp
sub
add
pop
ss
push
les
add
pop
xor
repnz
js
sahf
out
mov
xor
ret
inc
std
add
ss
sbb
aaa
stos
les
inc
sbb
sbb
push
enter
push
jo
movsl
das
mov
add
mov
mov
out
push
je
add
dec
sahf
std
dec
loopne
and
jo
pop
ss
js
bound
fisubs
mov
inc
cmp
nop
rcl
stos
mov
cmp
add
sbb
adcb
jo
push
inc
sbb
in
push
mov
lods
add
jo
jne
xchg
in
cs
pusha
pop
jnp
pop
push
bound
hlt
js
movsl
inc
xor
inc
xchg
pushf
in
subb
int
jo
je
sbb
xor
add
jp
lret
cmpb
sahf
xchg
int3
jno
pop
adc
rorl
ret
push
in
dec
xchg
cmpsb
mov
out
mov
mov
push
xchg
cmp
icebp
sbb
mov
mov
jb
mov
insb
jnp
mov
jl
mov
outsb
dec
sub
push
mov
dec
fwait
inc
int
fwait
leave
repz
xchg
mov
jno
jae
ja
aam
cmpsb
out
or
popf
lea
outsb
test
cmp
lret
imul
adc
lock
or
inc
pop
or
subl
rorb
ljmp
in
je
sti
dec
cmp
fisttpl
sbb
inc
in
push
sub
das
scas
jmp
movl
mov
in
mov
dec
cmp
lea
imul
in
dec
push
or
inc
test
xorb
jb
inc
test
xchg
jmp
pop
adc
jno
and
adc
jae
xlat
fsub
aam
and
ds
cmp
popf
cmp
jg
movsb
add
add
lcall
mov
lods
adc
lret
jne
add
xchg
add
jl
xor
xor
mov
shrb
and
adc
out
and
sahf
sub
mov
sbb
adc
in
and
dec
adc
pop
pop
orb
les
ret
shr
mov
in
mov
pop
and
sub
dec
push
mov
mov
daa
bound
andl
popa
cmpsl
and
mov
adc
mov
cmp
mov
xchg
pop
mov
lea
pusha
repz
push
pusha
push
push
cwtl
sub
adc
push
sub
push
test
adc
sahf
fwait
lods
jnp
data16
aam
lock
cmp
jecxz
inc
int
fistl
mov
pop
and
jge
inc
stos
fisubrs
hlt
sub
jle
repnz
test
mov
pop
in
addl
or
inc
insb
icebp
sbb
aaa
xchg
jl
mov
pop
ret
push
xor
hlt
scas
hlt
xchg
cwtl
arpl
pushf
jno
jo
cwtl
call
inc
sahf
aam
or
add
sbb
clc
test
pavgb
popl
xor
out
aas
out
out
xor
inc
test
jae
inc
push
or
jbe
es
adc
adcl
rclb
add
jecxz
adc
adc
lods
xchg
or
das
inc
jg
jp
push
scas
loope
jnp
cmp
pop
mov
movl
push
xchg
fsubrl
cmc
sub
sub
rorl
xor
out
nop
sub
jne
or
sahf
xchg
or
dec
fdiv
mov
fiaddl
ja
push
pushl
jnp
push
cld
inc
bound
xchg
push
xor
jo
push
cmp
sbb
mov
dec
adcl
repz
arpl
cli
xchg
pop
in
mov
push
pushf
jns
xchg
push
fidivrl
lahf
jl
pop
mov
mov
pop
cltd
pusha
mov
inc
inc
sub
add
outsl
scas
repz
and
mov
push
mov
aaa
je
stos
pop
outsb
imul
pop
fimuls
cmp
mov
jae
mov
test
lods
lret
daa
mov
or
rclb
in
xor
adc
ja
sbb
add
pusha
add
mov
jno
loopne
add
sub
push
imul
cmpsl
xchg
sub
repnz
mov
rcrl
test
xor
fiaddl
das
mov
and
popa
leave
out
dec
jnp
js
push
bound
sub
bound
pop
jmp
pusha
push
cmpb
inc
mov
int3
shl
cmp
ljmp
imul
push
push
jge
mov
mov
mov
insl
mov
hlt
test
pusha
test
mov
sbb
aad
lds
dec
movsl
add
mov
pop
adc
dec
mov
push
or
or
xor
add
movsb
mov
scas
imul
push
icebp
dec
push
sti
test
lods
xchg
or
push
pop
dec
jl
in
shll
adc
test
xchg
mov
jb
stos
sbb
pop
jp
sar
sbb
push
pop
fildll
outsl
fdivl
lea
daa
sub
pop
pushf
jecxz
xchg
cmp
in
lea
sbb
dec
adc
xlat
xor
cs
dec
aad
sbb
std
shlb
fsubr
push
movsb
push
ja
jmp
mov
push
pop
cmp
add
ret
adc
mov
iret
mov
xchg
mov
loope
mov
mov
xor
cmc
inc
dec
inc
lds
rcrl
cmp
sub
ljmp
lods
test
mov
rolb
in
out
lahf
loopne
mov
outsl
cmp
enter
inc
js
ds
pop
add
in
in
or
adc
mov
cmpsl
or
int
add
sub
std
mov
mov
push
dec
daa
jne
in
jo
mov
inc
aas
add
lds
mov
into
ljmp
stos
lcall
fs
clc
andl
out
mov
mov
aas
lcall
and
cmp
inc
lahf
stos
adc
movsl
sub
stc
sub
in
insb
dec
aam
push
into
sub
xor
mov
jns
mov
push
out
lock
outsb
lea
loopne
xor
sbb
lcall
add
les
cmc
ljmp
mov
pop
in
js
pop
data16
ljmp
loopne
mov
mov
out
sbb
pop
dec
mov
popf
repz
les
xlat
fists
arpl
ja
mov
cld
mov
sahf
cltd
push
mov
les
inc
lahf
dec
mov
fwait
and
mov
jle
add
pusha
in
and
dec
jecxz
mov
test
das
or
sub
aas
fwait
shlb
icebp
mov
or
xor
xor
test
in
push
dec
repz
lea
sub
frstor
pop
imul
push
add
jns
dec
sub
pop
xchg
popa
jns
xchg
cmp
mov
cmp
test
cmp
pop
sub
mov
pusha
enter
and
cmpl
cli
cmp
out
xchg
mov
cmc
fcmovnu
xor
sbb
push
pop
sbb
imul
push
jb
inc
cmpl
push
adc
dec
sahf
movsb
lea
cmp
loope
fwait
pop
mov
push
jp
test
dec
nop
shlb
bound
xlat
lcall
aaa
aas
sbb
xchg
icebp
xor
mov
rcr
xchg
inc
inc
ss
cli
xchg
sub
cs
test
les
into
fcmovnb
adc
mov
mov
aas
int3
add
insb
add
cs
mov
repnz
sbb
loop
add
xchg
mov
shrl
in
fisubs
cmp
in
loope
pop
xor
cmp
sub
adc
cli
pushf
pop
xor
in
add
scas
cld
sub
ss
fwait
out
imul
rolb
imul
pop
fistpl
jns
loope
jbe
jg
sbb
pop
or
cmp
mov
xor
push
sahf
xchg
jmp
or
lahf
outsb
dec
stos
or
push
sub
aad
sbb
lods
mov
jns
pop
lcall
xchg
insl
cmc
jns
mov
inc
jmp
mov
sbbl
dec
cmc
mov
imul
push
in
decb
mov
fsubs
sub
fldcw
pop
movsb
push
stos
add
mov
ljmp
sub
dec
scas
or
or
sub
push
in
push
js
outsb
adc
add
dec
mov
mov
push
fimuls
into
mov
mov
js
sub
ds
dec
int3
fnstcw
mov
lds
cli
or
imul
jg
js
jecxz
xchg
add
mov
int
sti
jbe
adc
push
sarb
pop
es
jbe
cmp
hlt
lods
cmc
adc
mov
mov
out
je
enter
or
mov
dec
mov
stos
pop
jmp
lahf
xchg
pusha
pop
push
jmp
cmpsl
sbb
ret
xor
lahf
push
dec
sbb
mov
sub
js
xchg
adc
pop
das
ss
decl
dec
pop
lock
jmp
iret
loopne
xorl
ret
loope
das
aaa
mov
add
pushf
cmp
sbb
dec
stos
jmp
std
push
sbb
out
lods
push
outsl
xchg
mov
xor
pop
push
cmpsl
fcomps
jno
dec
adc
adc
in
out
loopne
sbb
pop
icebp
sub
mulb
dec
aaa
dec
mov
and
je
pop
lea
sub
test
enter
aam
jp
xor
stos
pop
or
dec
leave
mov
inc
cltd
inc
ss
enter
push
push
scas
stc
fdivs
adc
adc
jbe
scas
negb
icebp
fnsave
sub
jmp
pmuludq
imull
insl
and
js
push
push
dec
xor
jnp
or
js
in
lea
jae
xchg
sahf
shr
loope
stc
jb
xor
push
enter
arpl
jge
leave
add
xor
loopne
sub
xlat
outsb
fs
jmp
mov
loopne
dec
int3
mov
cld
lock
mov
jecxz
cmp
cwtl
sbb
pop
mov
icebp
into
scas
mov
push
xor
mov
cmp
lret
fdivrl
into
push
or
xor
add
mov
movsl
push
sar
scas
adc
push
or
fs
popa
imull
shl
mov
out
xchg
fisubrl
aas
dec
sbb
pop
xchg
jne
js
mov
pop
dec
sub
ret
cmpsb
nop
cmp
pop
and
movsl
aas
lds
dec
repz
outsl
or
adc
in
push
dec
adc
dec
adc
out
lcall
add
mov
xor
or
adc
jo
mov
out
sarl
andb
shll
push
cmp
clc
mov
xchg
pop
sarl
jno
add
xor
jae
std
hlt
insb
xchg
mov
std
sahf
jb
fdivrl
sbb
frstor
or
push
inc
mov
cwtl
push
test
rcrl
je
aas
cwtl
ret
dec
mov
out
adc
incl
xlat
sub
dec
lret
jcxz
sub
pop
dec
jnp
pop
xor
in
adc
lock
imul
jg
sbb
push
int3
mov
and
adc
push
addl
mov
stos
fistpll
push
sub
inc
lea
scas
fimuls
cli
fwait
les
ds
fildl
int3
js
pop
xchg
jle
pop
pop
xor
int
jbe
cmpsb
sub
imul
insl
sti
in
cltd
leave
mov
inc
mull
lret
arpl
sub
popf
sbb
stos
inc
cltd
jnp
popa
movsb
and
adc
cs
imul
ret
gs
cs
sbb
push
scas
dec
cli
push
jg
flds
mov
fabs
rorb
repz
out
cmpl
mov
mov
xchg
out
add
dec
stos
ljmp
or
mov
xchg
add
xor
out
push
movsl
xchg
mov
adc
jmp
mov
mov
mov
jmp
sub
jae
xchg
dec
jnp
leave
std
lret
pop
in
dec
lock
mov
cltd
sub
mov
sub
dec
add
push
mov
loope
xor
mov
or
imul
adc
add
cmp
pop
sub
push
enter
ficomps
mov
bound
push
pop
cmp
jne
add
xor
jb
fbstp
cld
mov
out
jp
adc
jae
cmp
das
shrl
push
push
adc
cmpl
in
movsb
sahf
mov
push
push
mov
mov
sub
dec
jnp
or
mov
lods
cmpsl
and
ret
mov
mov
in
lods
pop
icebp
dec
pop
adc
pop
ss
cld
mov
movsb
xor
fnstsw
xchg
rcrb
xor
jl
lock
pop
cvttps2pi
adc
movsl
aad
into
ret
sti
mov
adc
mov
pop
daa
or
setge
inc
sti
in
add
shl
or
or
push
xchg
inc
fldl
jmp
test
inc
leave
out
outsl
fsts
jnp
inc
or
pop
ds
ds
inc
repnz
repz
xor
jge
fldcw
sbb
xlat
out
pop
and
pop
or
xor
push
add
xchg
popa
lods
xchg
pop
arpl
enter
lret
addr16
or
push
add
push
insl
jp
sbb
addl
mulb
popa
rcrb
mull
mov
mov
pop
push
lock
lds
repnz
pop
mov
test
jnp
pop
push
push
add
fidivrs
or
int3
mov
mov
sub
and
pop
data16
repnz
cltd
push
test
movsl
adc
jp
std
adc
pop
pop
xor
loopne
or
and
mov
inc
sbb
fimull
lock
hlt
lcall
dec
icebp
xchg
outsb
add
cmp
mov
sbb
sahf
mov
or
ds
inc
add
fsts
aam
and
mov
cwtl
xorl
fnstenv
jae
mov
adc
in
push
jle
aaa
mov
outsb
xchg
popl
pcmpeqw
sti
mov
push
clc
or
addr16
cli
cwtl
jg
movsl
sbb
lahf
sub
enter
movsl
outsb
js
into
push
test
sbb
pop
xchg
jns
mov
mov
orb
rcll
rcl
mov
mov
lds
mov
mov
mov
leave
ret
sbb
movsb
outsb
sbb
push
push
fwait
pop
push
in
ror
push
sbb
cli
add
test
cmpsb
push
into
pop
cmpsl
and
sub
ljmp
adc
orl
mov
pop
fwait
push
inc
dec
push
inc
mov
addr16
orl
movsb
test
roll
pop
pop
xor
push
push
push
xchg
fucomi
xchg
jb
mov
cmc
imul
push
and
lret
notb
xor
xor
sub
push
aad
popa
pop
aad
not
popf
ss
inc
push
add
shrb
sbb
aam
test
movsb
sbb
or
xor
mov
xchg
negb
and
sar
push
imul
mov
mov
push
bound
outsb
push
outsb
loope
and
xor
vandps
cwtl
dec
jg
pop
test
cmp
jae
call
sub
aad
jp
test
in
repnz
mov
lods
mov
adc
inc
mov
popa
push
cld
mov
scas
mov
mov
pop
mov
into
inc
shlb
lods
adc
aad
mov
push
push
adc
pop
cs
cwtl
push
ja
loopne
mov
xchg
addr16
bound
xor
jle
scas
cmp
loope,pn
and
inc
cmc
outsb
mov
and
ljmp
jmp
sahf
jns
fbld
dec
xlat
dec
mov
out
mov
xlat
or
cld
ret
jns
mov
dec
jbe
cs
repnz
lret
adcb
sub
cwtl
je
sub
lahf
jae
lret
hlt
inc
insb
pop
pop
repnz
fsubs
insl
inc
xor
push
push
pop
or
mov
pushf
push
sbb
xor
dec
push
inc
repnz
lcall
cmpsb
inc
jl
sub
insl
or
js
pop
dec
or
lods
push
insb
loop
lods
and
fimuls
inc
or
pop
pop
cmp
and
pop
mov
mov
xchg
loopne
cmp
icebp
push
push
ficoml
stc
and
push
pop
test
jmp
ja
fists
cmp
pusha
push
lds
dec
js
dec
sub
push
and
fwait
stc
lret
push
add
dec
mov
lret
dec
push
mov
add
lret
add
lcall
jge
in
xchg
adc
scas
lds
inc
cmp
sub
push
cmp
lods
fsts
test
mov
jl
int
mov
ret
and
push
and
in
fistpll
or
ss
nop
mov
mov
loopne
sbb
call
out
mov
push
mov
sbb
sbb
pop
sbb
int3
push
jp
std
mov
gs
mov
adc
mov
jl
lock
inc
add
or
popf
xchg
add
push
repnz
pop
mov
lods
push
xor
adc
js
add
sbb
in
adc
jbe
arpl
mov
push
fnstsw
test
scas
and
cmp
sub
cmpsb
cmp
faddl
aam
shll
mul
cmp
ljmp
aad
les
xchg
pop
push
mov
testl
mov
aam
rcrl
popa
push
scas
lea
pop
xchg
and
cmp
mov
adc
loope
hlt
arpl
push
or
nop
enter
mov
sbb
pushf
xchg
mov
test
les
inc
cmp
sub
xor
ret
cltd
inc
inc
jne
in
dec
push
or
fidivrs
movsl
pop
inc
push
or
es
or
mov
sti
mov
loope
outsl
mov
inc
daa
add
jb
pop
mov
mov
aas
call
subb
ret
mov
add
xchg
push
scas
inc
xchg
mov
sub
jle
jne
xlat
xchg
xlat
add
insb
sub
push
add
hlt
adc
adc
push
stc
lock
and
pop
test
jbe
sti
scas
shlb
cwtl
push
and
cli
or
mov
sub
insb
mov
or
out
mov
xchg
out
add
mov
cs
sarl
dec
lahf
rorl
insl
mov
mov
ja
imul
das
push
mov
inc
ja
movsb
push
push
pop
out
sub
fsts
or
adc
int
adc
into
sub
mov
adc
pop
mov
js
ss
inc
pop
inc
xchg
xor
test
cmp
xor
rcrb
enter
rolb
lret
loop
fldl
or
adc
and
inc
jns
xor
daa
push
fdivrl
fnstenv
jecxz
in
cmp
pusha
xor
push
cmp
jl
pop
stc
test
xor
dec
mov
dec
int3
test
pop
sbb
bound
and
out
push
mov
mov
jecxz
out
xchg
gs
mov
mov
pop
adc
and
inc
cmp
hlt
mov
lcall
cwtl
fildll
add
imul
test
and
fisttpll
dec
shrb
dec
pop
jmp
std
push
or
in
jno
push
mov
ljmp
std
mov
sqrtps
out
stos
jo
repz
lret
mov
cmpsb
xchg
ror
push
loopne
or
movsb
pushf
lcall
lret
sbb
ds
adc
fdivr
jmp
hlt
jg
repz
lea
cwtl
add
into
shr
adc
frstor
adc
cltd
movsl
push
add
xchg
psadbw
rcll
stos
in
aaa
xor
lds
pushf
xchg
mov
or
sbb
test
pop
mov
jmp
mov
int3
and
stos
hlt
mov
out
push
and
lcall
imul
es
push
mov
xor
pop
or
incl
stos
sahf
inc
sbb
cmp
inc
hlt
jns
repz
sbbb
pop
gs
popf
add
test
mov
xorl
test
fidivl
sbb
fwait
dec
sbb
mov
xchg
xchg
sub
and
shrb
dec
pop
in
mov
pminub
add
cmp
cltd
jb
dec
stos
pop
nop
fistpl
into
xchg
adc
or
add
jae
call
jae
cmp
ljmp
push
jnp
sbb
enter
inc
and
cmp
pop
fiadds
stos
dec
daa
sbb
xchg
fmul
sub
out
and
xchg
lods
adc
sbb
call
mov
inc
push
cmp
daa
lahf
push
or
lock
push
or
dec
mov
or
xchg
xorb
stos
lods
xchg
sbb
ja
mov
rorl
pmulhw
inc
jnp
lret
std
popa
mov
inc
icebp
and
mov
nop
adcb
orb
dec
dec
ja
cli
push
jno
sbb
jae
push
xchg
adc
cmc
je
out
lods
scas
mov
bound
sub
sbb
aad
lods
ret
movsb
and
popl
cwtl
es
mov
insb
jp
sbb
stos
cmp
cmpsb
jbe
sub
add
and
jmp
and
or
mov
jl
fld1
adc
stos
sub
dec
repnz
lods
int
jbe
lea
imul
xor
push
jae
jb
dec
aad
movsb
xchg
dec
insb
je
or
fiadds
ficoms
dec
push
cmp
ret
xor
pop
mov
jns
jo
adc
mov
mov
ds
xchg
xchg
sbb
xor
inc
and
inc
insl
popa
jns
movsl
addr16
ret
mov
inc
outsb
mov
popf
aam
jne
test
jecxz
dec
outsb
mov
outsl
in
or
out
mov
add
lea
cli
fidivs
jo,pt
imul
rol
aaa
xchg
hlt
xor
pusha
dec
stc
rolb
add
sbb
lods
adc
pop
mov
out
sbb
add
cld
dec
mov
sbb
test
jo
cltd
cmp
and
call
stc
jl
cli
sub
mov
xlat
xchg
clc
mov
cmc
aad
ss
fidivs
cmp
and
jp
and
in
leave
je
cli
ret
inc
jp
sub
fstps
inc
popf
scas
lret
jb
aad
mov
arpl
cmc
jnp
cld
pusha
aaa
std
cltd
nop
xor
xchg
cld
cmp
imul
scas
es
mov
xlat
or
inc
pop
scas
or
imul
test
mov
out
add
rolb
fs
push
push
sub
or
popf
inc
cmp
int3
idivb
pop
mov
push
fsts
andb
inc
xlat
addr16
push
test
in
dec
and
inc
and
lret
adc
jo
rorl
sar
inc
fcmovnbe
pop
mov
cmpsl
sarl
jae
das
pushl
mov
or
pusha
jae
lahf
js
sub
ja
add
and
jae
lods
or
scas
and
sbb
sub
stc
into
mov
out
sarl
je
jmp
sub
pop
aaa
and
iret
testl
mov
pop
cld
pop
ds
xorb
sbb
sub
mov
jae
fmull
outsb
cmp
test
outsb
rclb
push
fucomip
or
sub
lret
adc
adc
test
cmovg
sub
dec
lahf
notb
push
cmp
addr16
icebp
or
pop
sub
add
inc
xchg
lock
sbb
in
in
stos
push
push
add
das
das
cs
pop
dec
fisubrl
inc
in
out
dec
daa
push
pop
orl
sarb
lods
adc
outsb
lds
lods
stos
jb
ret
cmpsl
cmpsl
cmpsb
mov
loop
jl
adc
adc
mov
fnstenv
push
xor
ret
push
mov
ret
mov
or
aam
ljmp
rep
xchg
sub
jmp
cmc
lods
rolb
inc
gs
jecxz
int3
push
or
repz
rorb
pushf
mov
pop
xor
cmp
cwtl
js
repz
mov
testb
ljmp
xchg
pop
jmp
call
mov
sbbl
mov
fcompl
mov
push
nop
adc
jp
lods
sarl
sbb
or
sti
rcll
ss
fwait
push
arpl
push
dec
jns
sbb
dec
push
ja
mov
sbb
mov
or
cmpsb
push
or
pop
stc
or
xlat
push
ss
jno
loopne
lahf
test
fsts
fwait
je
test
out
cmpsb
xor
push
ss
daa
push
inc
ja
ret
popa
ficomps
add
lcall
js
mov
movsl
push
push
mov
inc
cmp
cmpsl
push
mov
pop
mov
loop
addr16
or
sub
in
stos
scas
es
adc
insb
dec
cmpsl
daa
push
test
fcom
dec
pop
pop
mov
rcrb
lods
idivb
add
sbb
add
xchg
mov
loope
xchg
ret
stc
xchg
xor
pop
cwtl
cmp
or
neg
ss
push
mov
and
jo
fs
gs
mov
lcall
mov
adc
stc
arpl
jmp
sbb
jbe
sbb
pop
mov
xchg
jbe
xchg
stos
xchg
lcall
out
xor
mov
xor
rcr
clc
orl
sbb
add
rclb
pop
je
setge
and
push
int
push
test
push
jns
bound
std
mov
loop
sbb
mov
adcb
and
inc
fisttps
xor
push
aaa
or
pusha
inc
or
and
jne
push
mov
sub
xor
fwait
ljmp
ss
inc
in
adc
xchg
mov
pushf
and
cmp
jmp
mov
pusha
pop
jb
daa
addr16
and
mov
in
or
pop
pop
or
xor
or
ja
mov
fcompl
mov
and
hlt
fs
xchg
rcrb
pop
outsb
lea
xlat
mov
pusha
pop
xchg
sub
out
lds
xor
inc
sbb
pop
mov
dec
push
dec
ljmp
and
mov
adc
mov
push
xchg
dec
lods
mov
inc
and
sub
scas
or
pop
xchg
lods
add
mov
insl
sahf
fsts
in
cmpsb
sbb
mov
pushw
scas
mov
mov
clc
cmpsb
lret
and
pop
dec
sbb
cld
mov
jb
dec
pop
out
test
test
test
cmp
jnp
icebp
push
xor
jbe
dec
in
sti
shrl
stc
andb
shrb
jmp
in
xchg
repnz
mov
addl
aaa
add
clc
lds
shrb
xchg
push
xchg
push
cmp
fdivr
sbb
jg
mov
in
sbb
pusha
pop
out
push
mov
enter
lahf
mov
sbb
push
shll
mov
leave
xchg
push
js
lcall
adc
shl
into
inc
adcl
and
ss
lahf
les
out
pop
leave
imul
push
sub
lods
push
imul
mov
popf
mov
test
std
jle
scas
outsb
int3
mov
loope
lret
out
push
jae
sub
push
fs
aam
jb
mov
sahf
fcomip
push
and
in
dec
sub
std
adc
push
scas
mov
aas
test
test
lcall
pop
mov
sbb
pop
popa
add
cltd
sub
dec
icebp
mov
or
push
test
outsb
xor
in
cmp
push
pop
inc
out
ja
int3
push
pop
pop
push
dec
xchg
fwait
sahf
jp
mov
ret
out
adc
mov
xor
aaa
and
sbb
int3
add
outsl
bound
sahf
pop
fnstenv
xor
fdivr
lcall
xchg
sbb
aas
rcrb
dec
pop
dec
test
out
xor
lcall
dec
gs
xor
and
je
cmp
pop
cmp
out
test
mov
aas
and
cmp
clc
push
xchg
movsb
adc
lds
imul
cmc
push
mov
xchg
inc
pushf
ret
gs
mov
xor
repnz
push
or
jmp
fcomps
jno
add
stc
mov
push
push
sbb
test
inc
lock
mov
xchg
sbb
and
mov
fwait
arpl
xlat
ja
sbb
inc
repz
faddl
and
push
cmp
jo
int
shl
add
jo
int
shlb
sbb
jne
ret
push
mov
pop
dec
pop
das
mov
dec
cli
pop
mov
scas
adc
inc
popa
sbb
sub
pop
cli
aam
dec
push
add
dec
sti
shlb
lret
adc
or
lret
scas
lods
xchg
pop
mov
addb
adc
scas
rorb
fwait
lahf
sub
fucom
sub
inc
mov
cmpsb
ss
call
and
les
sub
xchg
inc
xor
out
shr
cmpsb
adc
sub
arpl
push
sub
or
into
outsb
fs
pusha
jne
movsl
mov
imul
negb
sbb
mov
adc
ret
inc
jnp
mov
pop
iret
mov
adc
test
jbe
push
dec
popf
insb
jae
in
cmc
test
rcl
adc
inc
jg
aaa
in
jmp
insl
xor
pop
fwait
xor
mov
insb
test
mov
xchg
pop
lret
jge
inc
push
stc
push
sbb
jg
sbb
imul
hlt
out
fcmovne
pop
or
dec
add
ds
mov
and
mov
outsb
mov
push
out
mov
pop
push
mov
daa
ret
jbe
push
jg
and
pop
insb
inc
xor
inc
xorb
sti
lcall
loop
add
push
test
outsl
jg
bound
mov
mov
mov
mov
jge,pt
push
dec
cltd
mov
imul
mov
mov
in
xlat
add
sub
mov
sbb
adc
add
fs
jo
mov
push
and
in
mov
les
dec
jbe
mov
dec
and
movsl
mov
leave
pop
add
stos
mov
pop
andb
nop
lret
lock
mov
sub
mov
dec
jnp
aam
icebp
jne
adc
test
mov
jp
rorb
push
cmp
nop
ror
sar
jg
cwtl
dec
and
jl
push
dec
add
jb
mov
pop
fisubs
add
repnz
idivl
pop
mov
aam
cmc
aaa
fdivrp
pop
mov
mov
mov
pop
in
xchg
push
adc
xor
lods
leave
hlt
and
xchg
mov
sub
movl
jg
fsub
imul
add
fnsave
and
xor
push
sbb
in
popf
or
cltd
mov
push
loopne
or
loope
jbe
mov
mov
cmpsl
mov
outsl
push
cmp
pop
popa
call
insb
call
pushf
jg
sahf
mov
or
movsl
cmp
inc
dec
test
jp
les
cmp
sub
nop
mov
and
loop
xor
xchg
fdiv
subl
sub
xchg
dec
or
fwait
adc
pop
mov
pop
insl
stc
dec
call
and
jno
fsubs
jmp
inc
pushw
lret
jbe
lock
inc
aas
out
push
add
pop
add
lea
adc
sbb
sub
and
push
loop
mov
enter
or
lcall
fcmovb
in
push
notb
outsl
mov
push
sub
pop
inc
pop
popa
repz
or
pop
xchg
data16
lahf
add
lret
pop
push
dec
aas
pushf
xchg
mov
dec
ret
stc
push
mov
xlat
dec
push
div
sub
pushf
loopne
outsl
movsl
mov
add
lock
xchg
cmp
enter
test
sbb
lcall
ret
jns
scas
mov
testb
cmpsb
cmp
lods
jbe
roll
xchg
inc
mov
xchg
jg
push
andb
inc
mov
xor
scas
sbb
cmp
ljmp
inc
out
popa
shrb
orb
stos
pusha
dec
mov
and
fsubrl
cmpsl
mov
leave
aas
jo
andl
cwtl
xor
lret
pop
pop
bound
loope
xor
test
lds
xchg
inc
jecxz
in
adc
xchg
lret
insl
cwtl
mov
test
or
iret
inc
movsb
pop
insl
sbb
fdivrs
push
add
ret
xchg
add
in
sbb
in
add
dec
test
adc
jno
stc
add
cmpsb
jp
or
mov
add
clc
aam
ret
and
out
sbb
mov
inc
mov
jb
xchg
xchg
nop
mov
in
sub
bound
mov
sub
push
cli
adc
mov
or
repnz
loope
xchg
mov
mov
sub
loope
jmp
notl
imul
push
das
repz
sbb
dec
stos
mov
xlat
mov
cmp
ret
shll
jne,pn
or
aaa
repnz
into
scas
sbb
iret
in
xlat
adc
xchg
test
repnz
adc
xor
inc
lods
sbb
cmp
test
xchg
imul
cli
xor
lcall
adc
shl
adc
jl
lock
xchg
addb
into
adc
comiss
ret
stc
inc
mov
jno
int
mov
sti
xchg
scas
fiaddl
dec
mov
cwtl
mov
pop
ljmp
addr16
movsl
lret
in
lods
push
testl
cmp
xlat
fisubrl
xchg
dec
sbb
jo
lret
aaa
incl
shlb
inc
pop
fldt
dec
xchg
stos
outsb
xor
sbbl
fbld
pusha
testb
jbe
scas
sub
cmp
inc
jmp
movsb
xchg
mov
push
je
push
xchg
out
mov
jecxz
mov
stos
outsl
in
lods
out
push
xchg
push
xor
inc
into
iret
shlb
mov
outsl
stc
int
push
xor
mov
sub
call
cld
fwait
cs
pushf
pop
pop
fiaddl
ss
repnz
lds
mov
push
lahf
sbb
lret
pop
shrb
fists
mov
xorl
and
cmpsl
mov
stos
ljmp
fnstenv
or
cli
loopne,pn
test
fisttpll
insl
ljmp
leave
ret
ret
jle
out
jae
imul
push
inc
faddp
call
adc
mov
mov
or
or
scas
cmp
test
mov
loopne
xor
stos
int
pop
xchg
outsb
mov
fildll
inc
ja
fcmovbe
mov
mov
xchg
push
mov
pop
cs
int
test
jle
ljmp
jge
stos
add
ds
stc
lods
incl
pop
loop
lcall
pop
lods
int
subl
mov
pop
into
subb
jecxz
scas
fidivs
add
inc
int
aam
jmp
and
insb
mov
xchg
pop
mov
iret
and
jbe
adc
jle
sbb
cwtl
test
cmp
and
mov
cmp
and
test
lahf
cmp
mov
dec
xor
mov
test
inc
add
push
fldcw
stc
jbe
mov
fwait
xchg
test
sub
push
mov
and
test
mov
idiv
out
insb
dec
jecxz
arpl
repnz
mov
sbbl
cltd
out
mov
inc
xor
out
xchg
js
pop
fwait
mov
and
and
es
push
out
ficomps
sarb
xchg
xor
lock
pop
xchg
ja
in
ja
inc
cs
inc
jne
xor
mov
jg
pusha
sub
cmpsb
push
add
in
adc
and
repnz
fsubrs
lea
dec
cli
xor
sbbl
push
icebp
fldl
ret
ja
outsb
stc
cmp
out
test
xor
or
je
cmp
push
mov
adc
mov
and
fs
push
fwait
add
add
aas
pusha
cmp
repnz
ror
or
cli
fs
pop
jmp
rcr
mov
cmp
adc
sbbl
mov
cli
jl
or
loope
add
pop
bound
sub
inc
and
call
inc
jae
repz
mov
movsl
jp
enter
mov
add
xchg
arpl
mov
aas
pop
out
adc
mov
push
adc
lds
lods
mov
push
lret
mov
jae
push
cmp
ds
repz
fstpt
xchg
lcall
fld
cs
pop
call
aaa
rclb
jb
addl
jle
sub
fsubl
or
mov
push
or
stc
stc
cmp
dec
mov
cmp
dec
xlat
es
mov
shll
scas
push
dec
xchg
pusha
insl
lcall
sub
mov
lret
dec
cmp
nop
jno
sub
inc
sbb
or
addr16
and
inc
call
std
or
in
imulb
push
arpl
cmp
sbbb
mov
adc
mov
roll
loop
lds
and
fmuls
add
mov
push
cmp
jnp
sub
and
sub
scas
xor
mov
xchg
xor
pop
mov
mov
mov
sbb
movsb
lods
ss
jmp
mov
dec
imul
xchg
das
push
cmc
fmul
loopne
push
pop
dec
idivb
imul
push
pop
aaa
lcall
enter
and
jne
repz
jecxz
inc
hlt
xchg
inc
xor
fcmovne
or
out
das
es
xor
xor
cmp
sub
fidivrs
pop
lods
xor
bound
popf
push
lods
out
mulb
fdiv
mov
movsb
fimull
xchg
aaa
aaa
or
xor
sti
jmp
xor
shl
sbbl
jecxz
repz
or
inc
lock
adc
fwait
test
mov
sub
mov
push
out
pop
aas
xchg
insl
sbb
repz
jmp
ficoms
xor
inc
push
in
jns
push
push
movsb
adc
outsl
or
call
sub
xchg
test
mov
pop
inc
int
dec
loop
xchg
sub
xlat
hlt
inc
mov
das
jg
pop
dec
push
out
sub
pop
lret
xchg
stos
jmp
lods
inc
ret
mov
rorl
adc
fwait
test
popf
rolb
popa
mov
cli
outsl
hlt
add
addr16
cltd
xchg
std
arpl
dec
lods
imul
movsl
je
lret
add
push
dec
out
daa
es
add
lock
add
mov
testb
sbb
sbb
mov
ja
pop
stc
test
ret
repnz
xor
xor
mov
mov
pop
pop
dec
push
jge
jae
push
adc
test
xor
aas
out
pop
push
je
sbb
outsl
pusha
pop
adc
add
xor
jb
sbb
add
stos
aas
loop
ds
sub
in
fistpl
jae
ljmp
imulb
xchg
movsl
lock
cli
sar
stc
push
fs
jmp
mov
cmp
dec
or
scas
cmp
jne
divl
xchg
fcomps
stos
bound
sub
inc
inc
fwait
or
cli
ja
jb
pusha
adc
cmp
int
in
dec
inc
push
jae
jae
push
enter
lods
jno
push
pop
xchg
lock
and
lds
xchg
gs
out
cwtl
ds
mov
scas
clc
popf
mov
fdivs
mov
adc
pop
mov
xchg
pop
rcr
push
pushf
enter
xchg
mov
test
xchg
jnp
int3
int
lock
test
pusha
sub
sub
dec
jne
insl
repz
cmp
jbe
cmpsb
pusha
xlat
mov
xchg
movsb
imul
aas
mov
das
pop
jne
cmp
fldt
push
push
sub
push
add
jge
adc
mov
mov
int
into
and
sub
scas
out
sbb
outsb
xchg
das
aam
test
mov
mov
ljmp
sahf
xor
lret
xor
pop
mov
and
jg
xlat
fiadds
xor
icebp
dec
xchg
leave
notb
or
add
test
subb
xchg
push
push
push
hlt
pusha
or
sub
test
xor
stos
adc
xlat
loopne
sub
pop
rorl
push
pop
dec
iret
mov
and
dec
mov
jl
fs
jno
dec
jno
dec
mov
sbb
fisubrl
jbe
xor
ljmp
incb
leave
sub
je
in
dec
xchg
ffreep
and
lds
xchg
push
pop
daa
jns
in
les
jno
or
push
push
and
inc
push
imul
cmpsb
cmpsl
xor
dec
out
imul
adc
cmp
daa
push
fildl
mov
in
push
pop
xorb
enter
fs
sti
fdivrl
mov
inc
shrb
das
xchg
movsl
mov
lods
clc
cs
in
push
cmc
mov
mov
xchg
insl
mov
addr16
repz
pop
adc
pop
mov
mov
pop
stos
push
fnsave
repz
mov
das
xchg
sub
mov
inc
fsub
cmp
lcall
xchg
andb
cmpsb
dec
mov
jb
lea
pop
dec
jmp
fwait
add
les
loope
cmc
push
pop
mov
ljmp
lret
rolb
jb
inc
adc
pop
xchg
push
je
leave
enter
mov
fidivrs
fwait
sub
fcoms
adc
js
jmp
sub
jle
adc
inc
mov
lock
push
lea
add
jg
out
js
aam
rclb
or
js
loope
je
mov
clc
mov
fsub
jo
mov
pop
jno
sahf
mov
and
push
mov
and
sub
test
in
mov
inc
push
xor
mov
int
rorb
lods
and
jge
jle
incl
loopne
add
loopne
mov
sti
fidivrl
in
mov
dec
shlb
inc
xor
insb
push
xchg
pop
clc
mov
aad
xor
xchg
aaa
sbb
inc
and
in
jmp
add
idiv
jmp
adc
pushl
cmp
mov
xchg
stos
fwait
jb
dec
dec
push
aad
push
aam
aam
in
cmc
sahf
xchg
insl
xor
int
inc
mov
sub
scas
push
ficompl
pop
pop
mov
mov
and
pop
xchg
push
cmp
inc
mov
das
adc
divl
adc
cmp
mov
jo
mov
or
push
shll
bound
ret
sbb
xor
and
icebp
cli
sbb
push
mov
lods
test
sub
xor
push
pop
popf
in
js
and
mov
out
mov
loopne
rcrl
cmp
or
cmpsl
pop
pop
or
mov
mov
adc
data16
aas
movsl
sbb
in
cmpsb
je
ret
jne
cs
mov
shll
lcall
addr16
xor
jecxz
inc
dec
pop
xorl
cmp
aaa
cmp
add
adc
mov
das
stos
mov
imul
inc
sbb
jae
dec
sahf
fstpt
xor
push
mov
add
sub
out
imull
jnp
imull
sahf
jl
into
jne
or
dec
lods
dec
lock
mov
xchg
cli
mov
push
or
aaa
pop
mov
lcall
mov
add
or
push
xor
out
cltd
jmp
repz
jp
mov
xchg
lock
inc
push
dec
es
add
jle
gs
icebp
mov
fbstp
sub
cmpsb
mov
bound
movsl
jecxz
sahf
leave
out
bound
sbb
leave
mov
leave
divb
fcoml
dec
cmpsb
lods
icebp
int3
out
or
xchg
pop
stc
fs
adc
mov
inc
mov
aam
int
mov
sbb
bound
rcll
pop
jno
fadds
call
push
mov
rcll
and
cmp
std
jne
inc
sahf
fucom
pop
mov
sbb
sbb
mov
add
cmc
mov
loope
cmp
rcll
scas
loopne
shlb
sub
adc
repnz
mov
add
xor
push
movsl
dec
fnstsw
sahf
dec
xlat
lds
ret
leave
or
adc
sub
push
sbbl
lahf
cmpsl
and
xchg
jg
mov
insb
jnp
aaa
rol
inc
daa
dec
movsl
sub
insl
jge
jne
cltd
jbe
hlt
aaa
jnp
mov
jle
lds
jp
sub
jmp
dec
divb
adc
pop
aaa
adc
ret
outsb
pop
jns
shrb
mov
jnp
adc
sub
jnp
adc
jb
loopne
sbb
test
addr16
jle
daa
sub
jp
fisubrs
test
out
lds
ljmp
dec
test
cli
mov
leave
sub
call
lcall
ja
daa
movsl
cmpsb
jno
or
pop
xchg
pop
cwtl
pop
adc
pop
lcall
sahf
stos
ja
xchg
xor
jbe
lahf
adc
adc
add
and
push
mov
ficoml
xor
repnz
jecxz
inc
sub
cmovne
pop
jb
mov
into
push
mov
inc
lcall
inc
stc
sub
xchg
loop
lret
cmp
insl
in
or
das
test
mov
mov
aam
fsts
loopne
adc
movb
call
sbb
mov
fnstenv
pop
jge
cmp
je
cli
add
xchg
das
jne
mov
aad
sub
fwait
push
cli
add
xchg
mov
test
aaa
pop
aad
outsb
mov
aad
sbb
ret
in
fsubrs
mov
call
mov
hlt
inc
pop
rcll
mov
mov
fs
adc
loop
jne,pn
jmp
or
xor
scas
cmp
mov
mov
jo
in
hlt
aaa
cld
mov
mov
sarb
rolb
movsl
push
into
sub
push
inc
loopne
lea
pop
push
pushf
js
repz
into
inc
or
andl
push
sbb
mov
aaa
scas
aaa
sub
rol
cmp
cwtl
les
push
les
lods
in
mov
push
movsb
cmp
pop
xchg
in
data16
out
jecxz
cli
aaa
out
std
icebp
test
int
jg
fwait
jl
fsub
popa
pop
sub
stc
push
and
xchg
jp
sub
pop
push
outsl
add
ret
xorb
in
in
add
ret
jns
mov
test
mov
repz
sbb
jb
outsl
dec
mov
test
aaa
fwait
sets
mov
xchg
sbb
sub
andb
test
jmp
and
ja
aas
fisttpll
scas
mov
into
adcl
jecxz
xor
test
andl
jecxz
gs
cld
mov
std
ror
clc
fninit
and
cmc
add
enter
sbb
push
lock
jg
nop
popf
inc
adc
pop
rcrl
xor
leave
jo
fisubrl
mov
cltd
add
add
add
into
cmpsb
mov
sti
rcrb
or
imul
loope
jmpw
mov
mov
hlt
xor
cltd
or
popa
stos
cwtl
mov
popf
mov
pop
clc
adc
movsb
cmp
adc
mov
test
add
fwait
jb
jp
xchg
mov
mov
jbe
push
inc
jbe
pop
add
imul
stos
pop
int3
rcll
pop
xchg
stos
inc
xchg
dec
dec
inc
add
jne
adc
pop
dec
mov
mov
cli
popf
into
stc
inc
popf
xchg
fidivrs
mov
pusha
or
test
xchg
pop
rcrl
lods
out
push
cmc
pop
lock
clc
mov
das
mov
pop
xchg
icebp
push
movsb
les
mov
jae
outsl
movsl
sub
loop
imul
xchg
ss
inc
imul
inc
jmp
aad
or
dec
push
unpcklps
bound
adc
jno
or
int3
test
mov
mov
pop
cltd
push
js
mov
movsb
mov
pop
pop
xor
pop
lods
adc
andl
or
cli
frstor
shrb
rcrl
shll
insb
xor
xor
cmp
sbb
jnp
sbb
repnz
pop
out
or
ret
cmpsl
adc
fdivl
sub
jns
loopne
inc
shld
ret
fwait
adc
push
xor
cmp
pop
out
jle
jecxz
in
mov
pop
mov
cltd
inc
mov
and
mov
dec
arpl
rolb
imul
sarl
movsb
push
gs
lock
dec
mov
adc
pop
imulb
add
mov
sub
mov
jg
sbb
ret
pop
test
outsb
test
jmp
cmp
and
mov
add
xor
aam
out
and
mov
mov
inc
outsb
dec
in
std
push
push
scas
scas
adc
add
mov
psraw
inc
js
aas
adc
lods
jo
fiaddl
rclb
repz
xchg
call
sub
mov
cmc
or
icebp
dec
jge
jns
jo
xchg
dec
out
aas
xchg
out
stos
loope
cmp
jmp
mov
add
and
mov
adc
and
pop
fwait
pushf
ret
loop
mov
in
fistl
je
fcoms
dec
and
cmp
fidivrs
dec
add
cmp
or
stos
push
jno
mov
jne
pop
aas
wbinvd
or
adc
orb
lret
fs
int
sub
adc
mov
mov
mov
icebp
jge
mov
aaa
or
movsb
mov
cmp
mov
pop
or
cmp
sbb
rcll
cmp
inc
xchg
mov
or
adc
push
outsb
pop
pop
xchg
inc
sbb
lahf
out
mov
cmove
imull
dec
clc
pop
ss
pushf
push
pop
xchg
das
shl
cmc
pop
push
out
fucomi
pop
nop
mov
cltd
or
arpl
add
repnz
mov
lret
xchg
push
testb
mov
stc
xchg
push
int3
int
mov
jg
or
scas
pop
lods
mov
or
adc
repz
in
jl
lea
xchg
aaa
jns
or
or
mov
jmp
call
and
jle
inc
lret
inc
pusha
loop
out
out
jecxz
fwait
mov
add
adc
mov
dec
sbb
sbb
jb
imul
mov
div
mov
rolb
jbe
and
stos
jecxz
cmpsl
sub
jle
fimuls
nop
scas
ljmp
test
imul
cmp
jbe
push
out
add
push
ja
jge
pop
in
cld
pop
pop
xor
mov
mov
fisubrl
ds
daa
icebp
xor
cmp
jp
sti
pop
mov
js
jae
icebp
pop
jecxz
xchg
out
push
outsb
push
divb
pop
or
imul
ljmp
fstl
mov
pop
inc
mov
jp
out
adcb
nop
or
repnz
lods
push
rcl
setb
sbb
arpl
or
sarl
or
cmp
jne
pop
and
imul
dec
insb
mov
ss
fs
stos
mov
jb
repnz
outsb
adcb
sub
cltd
push
dec
dec
push
fstl
mov
ficoml
add
int
ljmp
ja
push
sbb
mov
lcall
cwtl
test
pusha
and
daa
and
pop
out
or
cmpsb
aaa
rclb
in
ret
or
inc
std
mov
cmp
or
outsl
inc
ss
test
mov
xchg
mov
aaa
fwait
mov
mov
jle
aas
test
gs
loop
push
mov
push
mov
das
lods
jae
pop
sub
dec
dec
or
test
push
inc
ds
push
ljmp
or
inc
and
mov
lock
scas
daa
sub
clc
decb
cwtl
and
fsubs
imul
and
mulb
aas
movsb
out
dec
rcl
inc
lea
jle
rcr
dec
cmp
lahf
push
sub
jmp
mov
push
das
dec
fnstcw
inc
jmp
and
jmp
dec
shrl
mulb
mov
sub
jno
loop
js
dec
mov
arpl
lods
inc
fsubs
mov
pop
jne
push
loope
jb
into
jno
xor
sub
xchg
adc
fwait
and
and
lret
push
add
lahf
inc
nop
popf
sti
mov
sarb
inc
jne
sbb
nop
fistps
sub
shlb
xchg
arpl
mov
dec
fisubl
leave
sbb
fdiv
fmull
dec
dec
nop
in
jp
test
mov
or
jae
cmp
push
mov
mov
sbb
stc
lret
or
test
mov
addr16
and
cwtl
mov
sbb
lods
ja
test
inc
lock
js
xchg
insl
mov
and
dec
jp
jmp
out
pusha
mov
shll
push
out
ffree
ljmp
loopne
out
enter
mov
push
outsl
aam
jp
push
mov
sub
mov
cmp
or
out
sbb
mov
loopne
and
push
adcl
and
jnp
aad
gs
ds
mov
jge
mov
mov
xchg
lea
dec
jns
decb
sti
movsl
icebp
mov
adc
add
aad
push
xchg
popf
jo
pop
mov
int3
ja
sti
push
cwtl
mov
cli
add
sbb
lret
icebp
cmpsl
lods
and
cli
nop
push
stos
xchg
test
fidivrs
pop
idivb
syscall
div
es
dec
jb
gs
imul
stos
aad
ss
add
mov
push
idivb
pop
xor
jns
cs
mov
ljmp
add
out
addr16
mov
pop
stos
or
or
stos
daa
pop
lea
stc
jp
adc
xchg
lret
imul
jecxz
xchg
in
loope
mov
jmp
mov
test
sti
andl
pusha
out
push
or
mov
imul
xchg
cmp
test
testb
mov
fmuls
jne
mov
nop
xchg
iret
jg
pop
inc
dec
jne
push
and
mov
aas
ror
push
dec
push
xchg
sub
inc
shll
mov
push
jmp
cltd
clc
push
xchg
xchg
iret
popa
xchg
xchg
xchg
jle
mov
fldenv
enter
inc
or
dec
outsl
cmp
lods
lea
lods
cmpsl
popa
cmp
cwtl
clc
les
pusha
out
jl
and
bound
jmp
insl
inc
stos
and
aad
and
cmp
jecxz
nop
mov
pushl
loop
gs
adc
sub
popa
xchg
push
popf
sub
outsl
je
mov
sub
adcl
sbb
leave
and
mov
sbb
fwait
cmp
int
jl
cmpsl
pop
sbb
ss
icebp
fstl
shll
int
ret
adc
mov
jo
or
mov
pop
sbb
mov
xor
jo
or
ret
add
pop
jo
js
fcomip
insl
xor
push
sarb
test
xor
jae
int3
pop
int
hlt
mov
and
fldt
sbb
inc
xor
dec
mov
outsl
or
sbb
dec
gs
call
les
adc
movsb
pop
jnp
adc
and
shr
push
loopne
ret
push
sub
movsb
mov
add
popa
adc
ja
add
pop
pushf
inc
rclb
stos
adc
add
push
and
push
mov
mov
sahf
aam
add
and
mov
popa
xor
jmp
cmpb
ja
mov
mov
loopne
push
push
mulb
addr16
outsl
mov
adc
mov
push
mov
dec
jg
adc
sbb
aas
adc
in
xchg
rcr
inc
adc
push
fs
sbb
scas
popa
stos
jp
clc
lock
popa
dec
lods
ds
pop
sbb
xchg
cmp
push
dec
xchg
xor
inc
xchg
sub
inc
xor
fmuls
sarb
add
mov
mov
in
sub
or
fildll
popa
adc
add
xchg
xchg
push
or
cmp
sub
sbb
cltd
push
lahf
mov
lret
data16
mov
fcmovnb
ret
dec
icebp
sbb
inc
cmp
nop
adc
pop
fs
pop
cmp
sbb
xlat
or
or
sbb
inc
sbb
sbb
dec
mov
fdivl
insl
adcb
call
bound
add
jle
adc
data16
movsl
adc
inc
and
adc
cld
ror
subl
xor
fistps
push
pop
stc
es
sahf
sbb
pop
mov
adc
ja
mov
in
xor
repnz
cmp
adc
sub
shr
fcompl
mov
mov
push
testl
jnp
mov
inc
pop
sbb
or
mov
pop
add
xchg
mov
inc
or
fldenv
les
sub
pop
adc
mov
cltd
sbb
xchg
fnsave
orb
mov
push
and
jmp
xchg
pop
and
dec
rcl
cmp
ret
mov
push
testl
xorl
push
or
jns
int
add
adcb
aam
xor
jno
mov
cmpb
test
inc
fisttpl
dec
orps
inc
sahf
movsl
in
loopne
add
cmpsb
adc
cmp
adc
enter
aam
inc
psubusw
out
jmp
add
clc
or
cmc
mov
push
sbb
pop
inc
pop
daa
lcall
xchg
pop
out
lods
cwtl
sub
cmp
sub
scas
push
cmp
and
repz
mov
jb
jno
pop
call
call
insl
out
lods
dec
call
pusha
xchg
sbb
gs
arpl
in
xchg
sbb
dec
mov
or
xchg
cmpsl
in
or
rcrb
les
orl
jl
in
or
jo
cmp
push
into
shl
test
orb
nop
aad
mov
jno
stos
cmpsl
stos
repz
xchg
pop
cmp
clc
mov
jecxz
scas
jle
xor
shrb
xor
push
pop
aaa
div
inc
mov
cmpsl
call
cmp
mov
shr
mov
inc
nop
sbb
or
jmp
es
xor
mov
lods
pop
or
jo
lock
in
pop
sahf
cmpsl
or
lahf
push
xchg
in
jae
lret
sbb
movsl
mov
rcll
xor
jnp
mov
mov
std
push
mov
sahf
mov
sbb
insl
cmc
xlat
cmp
push
fimull
fsubr
and
pushf
xchg
dec
aaa
cld
xor
adc
mov
add
cmp
jo
mov
pop
dec
mov
mov
mov
add
or
add
stc
mov
out
add
stos
jg
les
and
mov
ds
icebp
das
xor
adc
loope
ret
cwtl
dec
in
inc
xor
jle
add
mov
fwait
dec
aad
cli
adc
fimuls
push
cmp
xor
dec
sahf
mov
loope
push
ficoml
mov
sub
or
or
xlat
inc
arpl
push
mov
xchg
push
xchg
scas
xchg
outsb
stos
fnsave
mov
inc
ljmp
clc
cmp
or
iret
out
add
adc
push
je
mov
icebp
mov
jmp
cmp
hlt
cmp
xor
jg
loopne
lea
dec
bound
and
mov
mov
stos
push
jno
xchg
add
pop
and
sub
or
xor
xchg
mov
cwtl
movsb
xchg
pop
ja
adc
mov
cmp
lret
or
sbb
fwait
inc
mov
xchg
ficompl
popa
mov
test
sbb
mov
pop
jmp
dec
ds
cmp
int
stos
adc
lock
and
rolb
sbb
rclb
repnz
iret
scas
jg
inc
jae
mov
sub
sbb
lods
xchg
in
fiadds
stos
ljmp
jno
mov
into
std
inc
sbb
ja
sbb
popa
or
xlat
movsb
incb
in
sbb
lahf
and
cmpsb
test
lds
adc
jmp
les
xchg
adc
adc
xchg
into
loop
je
jno
aaa
xor
popa
ljmp
xor
pop
ds
sti
push
leave
int
xchg
pop
les
mov
sbb
push
insb
jg
sahf
push
jb
fwait
inc
inc
cld
pop
cld
add
mov
jp
jno
ffreep
and
in
int3
mov
mul
pop
xlat
pop
shll
xchg
divps
movsb
loopne
and
jae
fmull
in
mov
pop
fisubrs
call
xchg
mov
pop
xor
loop
inc
xchg
fcom
gs
xchg
shlb
mov
xchg
je
and
sub
lahf
iret
add
shll
les
loop
xor
adcb
loopne
push
sahf
adc
sbb
push
loopne
mov
xchg
test
xchg
sub
fcomps
sysret
leave
test
or
insl
jbe
out
std
adc
ret
or
xchg
pop
cmp
push
xchg
js
adc
cmpsl
int3
inc
loope
ficoms
out
mov
add
mov
xchg
sbb
lret
lods
pusha
push
je
add
test
stc
arpl
jg
clc
flds
daa
adc
outsl
aad
aaa
nop
mov
fisttpll
out
or
call
addr16
add
jecxz
lcall
test
roll
push
into
mov
and
xchg
pushf
jmp
ds
lea
test
push
cmpsb
push
push
test
jb
jl
xchg
pop
add
push
jae
jbe
xchg
in
fisubs
in
sbb
adc
cltd
in
rclb
push
sbb
cli
or
mov
cli
loope
dec
mov
inc
out
fdivrl
pushf
fisubrs
ss
fs
cld
add
movsb
jl
rolb
enter
scas
in
push
loope
test
gs
or
add
inc
or
and
call
pop
mov
aas
repz
sbbb
movsb
sbb
xchg
ds
mov
movb
andl
cld
hlt
fldenv
inc
iret
dec
xchg
pop
addb
mov
outsl
jnp
push
jo
or
xchg
imul
stc
jecxz
fwait
call
push
imul
cmpsl
rcll
insl
lret
test
ret
fwait
sub
fwait
inc
adc
pop
xchg
divb
push
dec
and
sub
lcall
mov
les
hlt
xchg
popf
xor
fistpll
test
shrb
add
mov
ror
cmp
sahf
bnd
pop
cmc
loope
add
mov
cmc
push
pop
repz
mov
fwait
sbb
mov
imul
lock
sarb
push
data16
push
dec
sub
push
jmp
gs
or
xor
lods
test
push
subb
pop
icebp
cld
lock
pushf
aam
push
addr16
sub
sbb
aad
cmc
gs
fcoml
int3
mov
in
cmp
pushf
sub
pop
xchg
scas
test
lcall
sbb
jno
stos
pop
add
push
cmp
test
and
iret
add
push
adc
sub
or
cmp
adc
sbb
or
out
pop
add
lret
mov
jmp
inc
and
in
jle
cmc
es
mov
add
push
fnstsw
into
cld
jne
jp
cmp
xchg
insl
push
fimuls
pop
sbb
cmp
sub
mov
mov
sbb
aaa
sbb
xor
enter
movsb
icebp
jnp
fimull
ret
mov
sbb
sub
dec
or
je
push
ret
lea
int3
or
jo
mov
pusha
xor
in
fs
das
pop
mov
into
xchg
in
test
push
mov
push
jo
dec
out
ljmp
mov
jecxz
pop
repnz
fidivrl
mov
jl
fsubs
and
int3
insb
lods
in
push
ficoml
in
inc
pop
jbe
pop
xchg
or
pop
outsl
adc
mov
lds
frstor
es
fwait
jns
xor
sbb
stos
in
xchg
mov
scas
or
jae
xchg
dec
dec
lret
lock
fildl
mov
dec
jne
hlt
mov
adc
jmp
sbb
nop
fisttps
icebp
push
pop
push
cmp
pop
cmpl
inc
scas
xor
cmp
mov
cmc
hlt
test
sub
jne
jmp
lea
fadd
jle
add
mov
aas
mov
hlt
pause
jns
mov
stos
or
cmp
cmp
pushf
pop
mov
fistl
lock
xor
pop
pushf
cmp
loop
scas
mov
push
or
fwait
ljmp
stos
fs
dec
mov
arpl
push
and
mov
rorb
dec
ret
jnp
dec
cltd
movsl
mov
sub
jl
mov
xchg
icebp
pop
sbb
les
fcomi
mov
jb
es
and
push
mov
xor
xchg
sbb
cs
fxam
sbb
push
pop
lock
fisttpl
jle
cmc
out
sub
call
inc
clc
and
xor
push
sub
adc
inc
popf
mov
dec
push
ljmp
stos
dec
mov
sbb
mov
out
dec
mov
pop
cld
out
lods
inc
loopne
jg
add
aad
xorl
push
aad
mov
dec
lods
hlt
or
mov
jb
xchg
inc
dec
sub
jo
xchg
js
push
or
cld
fnstcw
scas
jnp
les
daa
andl
ja
data16
lds
mov
xchg
lret
je
pop
push
mov
divb
cmc
imul
push
arpl
mov
fwait
push
mov
insb
dec
je
ljmp
in
xchg
aam
mov
cmpb
imul
lods
subb
xor
sbb
xor
push
int3
xchg
cmp
mov
mov
js
cmp
jns
jo
daa
and
mov
popf
pop
shlb
cmp
imul
or
push
ja
imul
inc
inc
movsl
add
in
adcb
xchg
mov
filds
daa
ss
loop
sbb
imul
push
or
cmc
sub
out
icebp
push
mov
icebp
and
in
test
scas
loope
scas
or
xor
mov
mov
aaa
insl
dec
popf
stc
adc
sbb
fildl
lds
mov
cltd
add
and
popf
ds
and
lret
push
xchg
into
in
xchg
imul
stos
shlb
lods
pusha
dec
ja
ds
in
flds
cmp
jle
repz
fiadds
ds
pushf
mov
je
nop
cs
repnz
pop
clc
je
cli
int3
pop
lret
add
loop
ljmp
jmp
adc
jl,pn
rcrb
cmp
sub
add
cmpsb
xlat
popa
lds
ds
mov
mov
mov
call
jge
inc
leave
mov
imul
inc
sbb
jae
mov
xchg
jle
call
or
add
xchg
out
int3
imul
fldl
mov
pop
pop
lods
mov
jno
lahf
jns
jae
cltd
pop
adc
notl
sti
xchg
out
cltd
pop
xchg
pop
addr16
dec
mov
mov
mov
iret
inc
ds
ficompl
push
les
movsb
lea
arpl
xchg
lret
cmpsl
sbbb
cli
shlb
test
sub
add
add
in
or
xor
ret
and
sbb
int
fyl2xp1
mov
repnz
and
aad
xor
xchg
dec
stos
cmp
ss
pop
push
bound
add
jb
pushf
inc
lds
sub
xchg
pop
js
push
cmp
mov
movsb
inc
xchg
lock
cmpsl
mov
test
xchg
out
sub
mov
or
pop
mov
mov
lds
jmp
mov
jp
lret
sub
mov
rolb
ljmp
dec
scas
std
sbb
inc
cmpsb
pop
or
fnstenv
cmp
pop
mov
insl
les
add
pop
pop
rorl
jl
jl
enter
inc
push
jne
sarb
pop
and
icebp
pop
xchg
cmpsb
mov
jne
cmp
mov
test
adc
pop
sbb
jg
int3
or
push
cld
add
iret
mov
es
pop
mov
inc
pop
push
rorb
fidivs
adc
outsl
stc
scas
mov
popf
sbb
or
shll
add
in
mov
mov
sahf
push
orl
stos
jle
add
shrl
inc
lock
mov
mov
pop
inc
xchg
mov
push
test
push
jbe
jne
xchg
push
mov
push
enter
push
xchg
enter
stos
arpl
push
and
shlb
in
sub
cmpsl
jecxz
xor
mov
dec
nop
dec
adc
xchg
aad
int3
mov
and
inc
lods
pop
add
xchg
cmp
ljmp
rol
jo
imul
ret
lret
daa
movsb
jnp
jae
mov
cli
push
jecxz
xchg
push
xlat
pop
cmc
mov
and
sar
loopne
mov
mov
nop
mov
out
test
andl
push
fcompl
sbb
fsubs
pop
xchg
inc
sti
cmp
jg
imul
cli
nop
ret
aas
pop
shr
sahf
mov
xchg
test
mov
mov
fsubrl
mov
cmp
inc
cmpsl
jbe
loop
adc
filds
jmpw
inc
mov
movsl
das
mov
or
lea
mov
inc
inc
and
adc
fidivrs
push
aas
lock
daa
dec
mov
sahf
ret
mov
cmc
rol
sbb
mov
loope
pop
or
pop
sahf
sbb
fwait
add
mov
mov
pop
pop
pop
lret
sub
inc
lret
push
cs
adc
insb
into
fs
sbb
jae
ds
orl
or
pop
repnz
push
loopne
dec
mov
sbb
push
xor
jnp
adc
cmp
iret
cld
rdpmc
fwait
sbb
dec
adcb
and
inc
pop
mov
mov
push
bound
je
sbb
mov
xor
es
pop
jo
in
inc
and
icebp
lods
adc
mov
mov
sbb
cwtl
mov
sbb
movsb
lea
push
stos
push
xchg
loopne
std
rcr
decl
ss
ret
repnz
adc
mov
and
mov
inc
mov
leave
sbb
cmp
fldenv
pushf
and
in
sub
mov
push
outsb
out
jmp
in
xchg
or
pop
in
repnz
sahf
leave
mov
ljmp
add
ror
test
sub
ss
addr16
xor
nop
mov
movsl
insl
sbb
in
sub
dec
loop
arpl
gs
arpl
out
xor
out
mov
dec
out
xor
jp
insb
mov
pop
push
mov
das
mov
pop
jns
pop
push
xor
in
pop
mov
pop
sbb
add
mov
fs
xor
push
lcall
popa
xor
stos
and
xchg
cmp
ret
and
pop
add
jp
divl
push
test
push
lock
pop
rcrb
aam
scas
jns
scas
sub
repnz
push
cli
sbb
mov
inc
sbb
mov
jbe
sbb
mov
test
adcb
add
xchg
popa
insb
loope
sbb
sar
xor
xorb
cmp
mov
shll
mov
jecxz
jg
inc
xchg
xchg
push
add
pop
pop
cmc
inc
cmpsb
and
push
sub
push
insl
xchg
pop
pop
mov
das
push
mov
imul
hlt
xchg
xor
dec
icebp
lds
les
fwait
xor
mov
add
test
jg
mov
or
inc
cmpsl
gs
xor
mov
stc
xchg
mov
xor
das
fstpt
push
xchg
adc
mov
mov
adc
or
scas
jne
push
in
pop
jb
pop
sti
xchg
sbb
arpl
push
xchg
enter
sbb
push
push
leave
addr16
adc
mov
outsb
and
stos
clc
push
imul
mov
add
nop
or
fisubrs
xor
faddl
mov
pop
mov
mov
add
or
cmpsl
add
cmc
and
xchg
aaa
jns
pushf
mov
push
jg
testw
outsb
xor
ja
out
cmp
pop
dec
add
lret
xchg
mov
sbb
insl
xor
rcrl
scas
imulb
mov
add
das
mov
addl
iret
add
out
sahf
pop
dec
fadds
scas
jp
xchg
xor
into
push
xlat
clc
rol
jo
pminub
mov
xchg
sub
mov
jl
insb
push
mov
push
daa
jmp
adc
in
les
pop
roll
fsubp
cmc
clc
xor
xor
lods
jmp
jo
es
call
push
dec
test
fstpt
testb
add
andl
sbb
dec
clc
dec
xchg
cli
add
sbb
dec
lret
repnz
add
in
adc
cmp
and
hlt
add
dec
push
lods
iret
jp
dec
jmp
dec
mov
and
in
stos
enter
les
mov
cmp
sub
lahf
outsb
pop
scas
add
mov
add
sub
js
mov
ja
imul
lock
rcrl
xor
or
pop
scas
sahf
outsb
sbb
dec
test
lret
enter
mov
lahf
shlb
mov
daa
inc
pop
aad
mov
nop
adc
fsubrl
hlt
pushf
ret
test
fnstsw
pmulhuw
mov
and
or
movsb
std
test
xor
jns
jmp
or
adc
fbld
inc
mov
dec
ss
ret
pop
push
fisubrs
std
lret
and
scas
adc
pop
add
lock
pop
xchg
imul
shll
push
rcl
cmp
or
es
xor
sarl
aad
or
mov
cmp
iret
mov
pop
jnp
aaa
into
ds
adc
out
push
inc
mov
sub
jae
aaa
or
mov
mull
mov
and
cmpsb
mov
jmp
lcall
outsb
sbb
xor
ljmp
sbb
sbb
push
int3
hlt
mull
int3
stos
mov
cmp
mov
add
loope
dec
push
sahf
xor
sbb
test
or
xor
pop
outsl
cli
data16
sbb
xchg
loope
ja
xchg
loopne
push
dec
loopne
loopne
ret
dec
dec
mov
shll
adc
cltd
jg
sbb
pop
sub
and
lds
cmc
adcl
sbb
sbbb
ss
cmp
xor
in
fcompl
cld
lcall
jne
push
inc
pushf
pusha
out
daa
int
into
fs
push
mov
jno
sbb
nop
out
cmc
push
fadds
sub
mov
aad
cltd
insb
das
mov
sbb
inc
test
jnp
pop
mov
scas
fcmovbe
xchg
and
jbe
dec
out
repz
sbb
add
outsl
sbbl
push
and
xchg
add
outsb
js
pop
cmp
jbe
decl
sbb
ficompl
lret
xchg
pushf
mov
clc
scas
mov
lods
or
ss
test
test
subl
push
inc
popa
or
fstpl
cld
stos
mov
push
sub
or
repz
mov
pop
mov
push
mov
cmc
jmp
fadds
lock
pop
sub
push
xor
add
out
xchg
adc
aaa
mov
std
mov
pusha
and
test
bound
scas
ffree
mov
aam
shll
jnp
mov
mov
xorl
je
popa
or
ret
lds
jnp
popa
xor
cmpsl
pmaxsw
cmp
mov
call
pop
imul
sbbl
sarl
dec
lahf
lods
imul
fs
data16
arpl
imul
hlt
popf
js
sbb
add
dec
cmpsb
imul
jae
add
push
loopne
fcmovne
inc
or
dec
inc
jl
daa
jge
outsl
pusha
in
js
push
inc
iret
push
jnp
jl
fcmovnbe
sbbb
push
inc
ss
loope
lods
xor
mov
jecxz
ds
cmp
mov
inc
arpl
xchg
jmp
mov
pop
mov
andl
into
scas
inc
lods
mov
or
rep
push
scas
lahf
imul
lods
popf
imul
clc
popa
pop
faddl
movsl
pop
hlt
cltd
mov
ds
fldenv
jae
loopne
scas
jae
push
test
clc
mov
jmp
cmp
clc
dec
add
pop
sbb
pop
repnz
fld
and
testb
mov
in
insl
stos
unpcklps
repz
lock
add
xor
stos
pusha
out
test
aas
and
sub
fistl
push
outsb
push
sahf
outsb
xchg
mov
in
jnp
sbb
into
xchg
push
addr16
ss
cmp
lret
inc
sub
frstor
int
pop
imul
je
hlt
cmp
xchg
repnz
add
ljmp
cs
jne
int
jo
jns
clc
clc
test
cs
pop
test
incb
cltd
lahf
xchg
je
nop
push
cmp
pop
mov
push
rcrb
lahf
xchg
ficoml
or
sbb
loope
mov
rclb
push
cli
xchg
in
ficomps
in
stos
in
jp
fisttpl
inc
loope
add
mov
jns
push
xor
pop
leave
icebp
fmul
push
sbb
or
adc
aaa
push
enter
mov
mov
xchg
sbb
cmp
sti
push
jo
push
lcall
mov
lahf
lods
incb
popa
xor
push
push
gs
xor
jmp
sarl
clc
pop
fcomps
sbb
stc
mov
pop
fcmovne
out
xchg
leave
bound
pop
in
rorl
or
ret
or
jns
cmp
arpl
cld
sbb
in
pop
leave
push
ficompl
mov
mov
mov
mov
stos
lds
cli
inc
adc
adc
and
ret
aaa
xchg
pushl
cld
mov
cmp
lock
scas
test
divb
xchg
push
loopne
shlb
lock
and
pop
in
sbb
xchg
imul
dec
cmp
jbe
pop
aam
roll
lods
push
mov
add
hlt
ds
outsb
cmpsb
cs
cs
jg
jmp
push
gs
jne
push
add
ffreep
out
iret
push
sub
ljmp
iret
mov
cld
ret
stos
xchg
aas
xor
punpckhdq
mov
xor
lds
sub
gs
jecxz
pusha
sahf
sahf
sub
sbb
inc
ja
lret
mov
xchg
mov
pmaxsw
xor
je
lahf
dec
mov
arpl
pop
jmp
push
xchg
ret
add
mov
loop
or
lcall
pop
mov
loopne
lcall
mov
inc
mov
pop
js
cmp
sahf
xor
mov
push
lret
dec
adc
pop
and
popa
mov
xchg
inc
lods
lret
pop
loopne
jmp
in
loop
sbb
dec
add
dec
lret
shlb
and
jns
pop
andl
add
add
lret
jo
mov
lret
orb
aam
mov
test
and
pop
loope
sub
loope
lods
addr16
jge
add
pop
subl
mov
lahf
cmp
adc
subb
jmp
fcom
popa
cmp
loope
pop
subb
mov
fsubrs
shlb
aaa
cs
imul
lcall
adc
std
xor
outsb
sub
mov
test
out
into
call
cmpsb
dec
icebp
ret
jg
out
adc
xchg
jnp
jne
mov
lods
push
hlt
scas
daa
mov
mov
in
sarl
pop
sbb
stos
pop
jne
xchg
and
adc
sti
mov
ss
add
dec
sub
push
mov
adc
add
sbb
arpl
mov
loop
xor
aas
sbb
jmp
popa
das
ljmp
sub
push
or
negl
sbb
jb
stos
mov
test
ja
adc
insb
mov
aas
imul
or
ss
les
jg
mov
sahf
push
jge
repnz
jno
aas
std
mov
test
lahf
push
mov
or
outsb
xor
push
cmpsl
ret
fcomp
jge
dec
mov
hlt
mov
into
inc
mov
mov
je
lock
mov
push
jbe
jmp
pop
xchg
mov
xchg
sub
data16
movsl
jb
into
and
rcll
repnz
inc
sub
jecxz
sub
mov
add
movsb
mov
in
mov
packuswb
mov
dec
xlat
xor
popa
dec
notl
and
dec
and
xorb
in
leave
dec
xor
add
ret
aas
jmp
sub
pop
sub
jo
in
inc
jns
ds
or
xor
sbb
jne
stos
mov
cmpsl
daa
pushf
push
shlb
or
pmaddwd
dec
xchg
shrl
aad
ret
subb
jp
insl
je
sbb
js
imul
cmp
push
xor
mov
adc
data16
or
or
lcall
sub
aas
jmp
cmp
pop
xchg
mov
imul
jg
xchg
pop
adc
xchg
inc
pop
loopne
inc
fimuls
fbstp
sub
int
sub
xchg
shl
loope
shlb
shlb
mov
dec
cmp
add
jmp
pop
je
or
stos
mov
test
inc
ror
std
sub
int3
sub
dec
sbb
cli
in
dec
orb
in
rorl
mov
mov
sbb
mov
bound
xchg
xchg
push
fucomp
sub
add
enterw
test
outsl
sbb
xchg
fcmovne
lods
dec
subl
jmp
test
and
or
ljmp
stc
leave
sub
xor
stc
push
test
andl
into
stos
and
ret
or
paddusb
mov
and
push
add
adc
mov
xchg
xchg
dec
outsl
or
out
mov
jmp
xchg
out
or
adc
inc
add
adc
mov
lret
aas
pop
pop
mov
ja
or
out
adcl
adc
enter
in
leave
adc
stc
call
jecxz
mov
push
cmp
in
adc
push
repz
loop
adc
add
popf
sbb
addr16
pop
nop
ret
es
jmp
shrb
jmp
in
xor
push
add
shlb
lea
into
stos
je
jns
cmpsl
or
xchg
pop
rolb
mov
jmp
and
cmp
es
push
aam
cmp
shlb
or
loope
xchg
nop
testl
mov
sub
push
mov
jb
pop
add
inc
pop
inc
lds
jo
ret
in
xorb
cli
and
adc
call
cmp
or
adcl
cmp
push
add
in
cmp
shll
xor
adc
fisttpll
js
and
lds
dec
nop
add
and
and
loope
push
mov
mov
mov
or
adc
aam
sarl
cmp
aam
xor
mov
sbb
leave
xchg
cld
jmp
or
or
cmpsl
fiadds
cmpsb
inc
ret
cli
test
pop
cmp
orb
cltd
stc
mov
mov
xor
dec
mul
inc
ja
push
push
lahf
mulps
pop
cltd
loopne
rorb
icebp
aam
pop
push
inc
xlat
leave
pop
inc
mov
insb
ss
cmpsl
mov
int
stos
dec
cmp
scas
loop
mov
repz
sub
cmp
dec
mov
out
scas
out
xor
fwait
xchg
les
jp
lea
lds
out
xor
cld
xor
push
shl
pop
add
lcall
sbb
lea
clc
stos
ds
fwait
inc
adc
push
ret
pop
jmp
xor
mov
icebp
sti
mov
add
pop
xchg
pop
dec
and
loopne
in
mov
inc
inc
push
push
ljmp
icebp
jb
rclb
xchg
mov
jb
sbb
add
pop
inc
xor
fdivrs
mov
cmpsl
pop
xor
push
cltd
ffree
cmp
inc
idiv
roll
mov
rorl
nop
bound
cmp
push
or
pop
lahf
xor
mov
jb
pop
dec
cmp
dec
pushf
cs
daa
push
dec
mov
dec
push
das
loop
jne
dec
inc
adc
pusha
mov
lret
jo
inc
dec
xchg
nop
cld
int3
xor
fstpt
jns
mov
sar
fnstcw
out
jnp
in
rcrl
int3
mov
push
mov
popa
add
cwtl
or
add
xchg
mov
mov
outsb
push
jmp
bound
add
jge
aam
mov
mov
jnp
adc
in
pushf
addl
pop
dec
ret
mov
loop
hlt
test
ficomps
sbb
jne
jne
lret
mov
sub
aaa
jbe
aaa
or
lcall
dec
inc
push
cltd
jo
push
das
or
add
adc
jae
xor
mov
inc
sbbb
fs
sbb
mov
fwait
cmc
jno
pushf
dec
sbb
cwtl
push
subl
or
xor
shll
jae
sub
push
lea
xchg
pop
or
mov
xchg
or
lea
or
clc
fs
xchg
and
sbb
xchg
jno
dec
jb
jge
add
cmpsl
pop
jecxz
xchg
scas
dec
xchg
mov
hlt
lret
dec
mov
out
xorb
nop
mov
and
cmp
addr16
loopne
jnp
xor
adc
cwtl
icebp
pop
ljmp
xchg
jl
aas
in
bound
data16
fidivs
test
cmp
xor
hlt
test
rcrb
sub
pop
outsb
add
mov
xor
jbe
sub
pop
adc
sbb
sbb
lcall
adcl
jmp
xor
jl
pop
mov
int
pop
pop
xor
sub
out
mov
inc
dec
adc
sahf
jg
sub
clc
cmc
add
je
jbe
jmp
cmpsb
jno
pusha
mov
inc
adc
popa
stc
xchg
call
sbb
popa
decl
adc
lahf
mov
mov
dec
movsl
inc
mov
mov
xor
hlt
cmp
icebp
movsb
iret
pop
mov
push
mov
in
lods
mov
popa
pop
sti
sub
pop
and
xor
inc
lods
stos
decl
cmp
xchg
inc
mov
dec
fsubp
test
sbb
pop
sub
mov
jae
cli
js
int3
pop
hlt
scas
sub
and
orb
repnz
sar
mov
push
fwait
int3
dec
fbld
lds
xchg
or
jae
negl
push
loope
mov
and
stc
mov
jne
push
pop
dec
scas
ds
jle
push
adc
fcoms
scas
movsb
pop
add
lds
mov
sub
dec
xchg
test
push
std
enter
scas
loopne
shll
dec
fisubrs
fidivl
adc
pop
jmp
mov
xorl
cmpsl
sub
clc
rorl
pop
xor
push
push
lea
mov
movsl
xchg
dec
push
subb
mov
mov
mov
fcmovnu
mov
adc
out
testl
dec
pusha
addr16
or
add
fs
sbb
sbb
aad
jo
mov
lods
pop
and
je
mov
shrb
sub
repz
iret
std
xchg
ss
inc
push
nop
mov
cmc
notl
out
testl
fldcw
imul
pop
xlat
insl
addr16
pop
lds
mov
dec
lret
idivl
arpl
lds
pop
mov
jg
fnsave
je
shl
lods
xchg
fdivrs
aas
push
push
lahf
dec
rcrb
sti
and
mov
jnp
pushf
mov
jecxz
mov
insb
inc
cli
sub
es
call
sbb
dec
outsb
sub
ret
mov
xchg
inc
or
insl
add
xchg
add
jp
cli
adc
rcll
lods
mov
cmp
cld
lds
or
jle
adc
movsb
pushf
dec
mov
xlat
nop
test
lahf
sub
scas
lahf
jb
sub
fsubr
mov
rclb
adc
popa
jl
cmp
jno
push
dec
sub
dec
test
inc
jne
pop
cld
std
sub
jb
push
je
xor
lcall
imull
shrl
daa
pop
jle
cmp
cmp
jne
mov
aad
pop
mov
xchg
xor
inc
mov
pop
xlat
shrl
sbb
pop
cmp
pop
test
in
xor
sbb
push
pushf
pusha
sub
xchg
ret
vphsubwd
jnp
mov
cmp
mov
shlb
bound
mov
aad
mov
lret
clc
out
stc
inc
insb
fwait
mov
jl
sub
mov
xchg
lcall
aaa
mov
bound
scas
out
cmp
cwtl
cmpsl
jl
int
fldenv
push
shll
sub
in
in
ds
sub
xchg
push
movsl
push
sub
mov
imul
test
add
cmp
or
sbb
cmp
rorl
push
cli
mov
dec
mov
jo
or
mov
dec
imulb
fiadds
pop
das
mov
outsl
or
mov
and
call
sarb
lock
fmuls
sbb
stc
add
add
cmp
mov
push
popa
ret
mov
xlat
mov
jno
xor
out
push
sub
das
fidivs
inc
mov
lea
pop
out
mov
push
fdivs
ja
jne
mov
dec
pop
xor
bound
mov
aas
insl
xchg
dec
xor
inc
jge
mov
mov
mov
mov
mov
xchg
pop
inc
cmpsb
je
pop
inc
hlt
pop
in
inc
mov
rcl
aas
das
imul
imul
xchg
sbb
sbb
mov
out
flds
dec
xor
outsl
push
push
lea
jge
inc
mov
mov
pushf
lock
jnp
inc
ja
jp
push
xchg
shrl
loope
jnp
mov
daa
jne
add
push
stc
cmpsl
cmpsb
fsubrl
inc
or
cld
dec
add
loopne
icebp
mov
lods
loopne
in
scas
mov
iret
or
jae
sub
sub
sbb
sub
and
add
push
jmp
sub
sub
dec
adc
call
jns
push
add
sub
pop
mov
fiadds
adc
pop
dec
mov
push
xor
fisubrs
outsl
sbbl
xchg
cltd
xchg
mov
dec
lcall
jmp
pop
add
roll
mov
and
pusha
add
stc
inc
popa
in
imulb
fcompl
add
jp
or
call
movb
or
shlb
jb
fistpl
add
mov
je
jae
outsb
cmp
fldl
push
inc
lock
ljmp
inc
rorl
add
scas
mov
in
sub
jne
and
in
dec
sub
and
inc
lods
lcall
jno
test
icebp
dec
adc
ficomps
xor
rcll
lods
lret
pop
loope
hlt
add
cmp
push
pusha
and
push
push
dec
cmp
lock
les
lahf
in
push
lahf
hlt
sub
adc
inc
shlb
fisttpl
pop
or
xor
xchg
jl
push
sahf
in
xor
std
jbe
in
fcoms
fidivs
fsubl
and
sbb
pushf
monitorx
jg
pmaxsw
and
xchg
dec
xor
mov
jl
fbld
xchg
pop
push
ja
jbe
movsl
mov
es
inc
ffreep
sub
sbb
mov
xchg
out
and
sbb
dec
arpl
outsb
mov
mov
or
sbb
inc
insb
jnp
rcll
aam
cli
xchg
shll
mov
push
mov
adc
xchg
je
and
test
mov
std
fsubs
movsl
mov
mov
cmp
lds
out
mov
or
and
push
pop
sarl
clc
addl
js
arpl
sbb
push
cmpsl
lcall
xchg
nop
and
mov
nop
stos
xor
xorl
jmp
sbb
repnz
sub
dec
or
jno
int3
gs
arpl
je
push
inc
inc
popf
pop
dec
dec
popa
sbb
pop
jmp
add
mov
daa
scas
test
adc
enter
or
jb
push
add
inc
xor
imul
xorb
fucomi
xlat
inc
lahf
into
repz
push
pusha
xor
int
mov
inc
in
sti
leave
loop
sub
in
sbb
ret
sub
pop
jp
imul
pushf
sbbl
push
inc
test
insl
imul
scas
adc
xchg
dec
push
xchg
ds
iret
dec
lret
inc
ds
jb
iret
push
sbb
xchg
jbe
mov
and
cmp
xchg
stc
popf
popf
popf
scas
jp
jnp
and
pop
int3
or
in
jl
mov
insl
push
scas
enter
jl
mov
xchg
sub
cli
out
clc
mov
movsl
je
subl
jo
mov
dec
fcoms
jbe
andb
mov
loopne
sbb
mov
popa
in
stos
ret
mov
pop
cmpl
mov
push
lods
push
outsb
shll
sbb
mov
adc
lret
scas
lret
mov
cli
push
sub
fisubrl
adc
pop
filds
mov
xchg
pop
mov
lret
add
mov
add
lods
iret
cmc
arpl
xor
ret
add
adc
cmc
sbb
popa
js
xor
outsb
sbb
and
std
test
or
lds
mov
add
and
fnstcw
scas
xchg
arpl
pop
cmp
push
lahf
pop
shl
ret
arpl
cmp
mov
cmp
notl
cld
les
sbb
xor
and
mov
xor
jns
rcll
mov
fwait
fwait
pop
push
push
scas
inc
in
shlb
sar
xchg
cmp
pop
sub
outsb
dec
jge
xor
repz
sub
out
push
dec
jo
popa
outsl
outsb
pushf
adc
scas
repnz
push
mov
in
sbb
mov
cli
cmp
ret
aas
xchg
aaa
outsb
add
addr16
xchg
pushf
outsb
mov
stos
inc
stos
sbb
rcll
mov
xchg
cmp
fsubr
pop
out
mov
add
or
test
sarb
mov
push
jle
jns
sarl
mov
dec
xor
jle
call
jbe
fmuls
lock
cmp
sti
fwait
xor
push
pop
bound
stos
shrl
cmp
mov
xor
stc
fbstp
rolb
in
pop
loopnew
mov
in
rep
cmp
and
mov
je
inc
cs
lcall
mov
mov
adc
insl
xchg
mov
jecxz
fistpl
cld
sub
mov
xchg
mov
std
cmpb
sub
das
and
mov
sub
push
std
push
in
rorl
xchg
arpl
je
inc
and
in
lret
or
jle
ret
call
repz
call
ja
nop
lret
loopne
cmp
movl
jo
xchg
icebp
xor
cmp
sets
cmp
xchg
pop
adc
ds
jl
movsb
movsl
add
insb
cwtl
int3
mov
cltd
cmc
scas
loope
imul
lahf
idivl
xchg
mov
scas
push
roll
inc
and
daa
notl
add
jle
fstl
xor
clc
or
insb
inc
out
sub
add
lcall
int
testl
mov
cltd
jno
shl
int3
sub
cmp
out
cwtl
dec
add
lcall
pop
mov
test
lret
or
or
lods
mov
imul
mov
std
adc
jb
fdivl
loopne
inc
dec
jo
aaa
mov
jbe
fwait
xchg
scas
addb
sub
mov
out
dec
pop
stos
idivl
pop
shrb
stos
push
adc
adc
movsl
or
adc
inc
mov
ljmp
push
int
out
bswap
aam
xchg
adc
sbb
cs
insl
popa
mov
mov
mov
test
lcall
jno
pop
lcall
mull
jb
dec
push
sbb
out
inc
and
or
and
clc
clc
je
call
hlt
ljmp
je
dec
jle
push
mov
push
push
incb
mov
mov
inc
into
fiaddl
ljmp
mov
cmp
add
xchg
cltd
pop
out
dec
icebp
lea
leave
std
adc
xchg
cld
fmulp
sarl
inc
mov
into
sub
xor
call
jo
ljmp
pop
adc
sti
mov
lds
pop
sbb
dec
popf
imul
imul
subl
das
or
adcb
inc
scas
testb
sub
pushf
sbb
lcall
je
sub
mov
xlat
fcoml
stc
dec
mov
dec
orb
dec
mov
jns
orl
mov
or
xorb
adc
cmpsb
xchg
mov
pop
insb
add
inc
pushl
xlat
push
push
repnz
int3
jl
fwait
xchg
loopne
inc
fcompl
in
push
stos
fdivl
jge
test
xor
cmp
lods
xor
movsl
shll
sarl
loop
enter
imul
sbbl
inc
fnsave
pop
mov
aam
pop
inc
dec
loope
pop
cwtl
out
push
jle
inc
jle
test
jl
xchg
pop
adc
test
aas
pop
inc
adc
mov
lret
and
add
xchg
scas
cmp
adc
xchg
inc
mov
repz
loopne
jl
stos
int3
in
pop
loopne
pop
shll
movsb
mov
dec
stc
pop
adc
aad
mov
mov
in
jmp
pop
push
lcall
pop
data16
jbe
scas
popa
dec
lea
lods
roll
jge
adc
and
or
push
fs
sbb
lods
lahf
and
cmp
push
adc
repnz
repz
rorl
jo
dec
adc
push
lret
int
loopne
xchg
jbe
jp
call
jae
sbb
mov
pusha
sbb
daa
repz
mov
sbb
cmp
mov
daa
cmp
xchg
mov
mov
out
pop
and
xor
adc
push
add
fwait
adc
cmp
insb
ja
jnp
jnp
adc
int
cmp
jg
dec
lods
cmp
jle
mov
and
dec
mov
and
cmp
xchg
lods
test
cmp
dec
adc
lock
sbb
test
mov
adc
aad
stos
xchg
jno
sbb
idivl
call
outsb
shrb
test
and
xor
lods
lret
ficompl
or
jbe
pop
pop
xchg
adc
cmp
pop
or
add
jnp
imul
daa
cmp
mov
outsl
out
lcall
out
cmp
mov
rolb
jmp
leave
mov
dec
jle
clc
jb
lods
sbb
fidivrs
xchg
frstor
push
iret
xor
lods
daa
and
inc
mov
sbb
mov
fdivs
fstps
jo
pop
or
rclb
aaa
mov
inc
push
in
lahf
dec
xchg
stos
and
in
jb
dec
imul
into
movsl
jno,pn
inc
adc
sbb
xchg
ja
es
imul
jge
dec
xchg
fsubr
int
fwait
stos
add
scas
ret
adc
enter
add
jae
push
test
adc
das
into
and
bswap
push
pop
jmp
mov
pop
jno,pn
rcl
fs
mov
pop
dec
aam
xchg
jl
test
xchg
xchg
cmc
outsl
mov
inc
lock
stc
lret
lds
sbb
xchg
inc
enter
mov
repz
and
jge
cmp
mov
das
jle
movsl
sbb
mov
loopne
cmc
mov
cmp
push
sub
push
test
fstp
ud2
repnz
xchg
fistps
fidivs
data16
lock
mov
and
xor
inc
cwtl
push
cwtl
pop
rorl
push
xor
xchg
fs
lods
add
dec
cli
and
out
ds
add
mov
andl
mov
out
in
scas
pop
xchg
scas
out
add
xchg
test
je
data16
mov
pop
dec
test
cmp
repz
pushf
mov
cmpsl
fcomps
mov
incl
or
xor
mov
jne
mov
sub
dec
mov
icebp
adc
insb
fdivr
arpl
mov
addr16
inc
sbb
jmp
dec
aam
in
pusha
and
aam
jo
rorb
pop
idivb
mov
sbb
inc
addb
inc
fisttps
xchg
call
sub
add
mov
imul
adcl
stos
push
je
mov
inc
lret
jb
insl
mov
das
xchg
mov
sti
pop
cwtl
sub
or
cmp
sbb
xchg
pop
pop
fwait
test
xchg
sbb
orl
scas
dec
or
sbb
test
push
xor
and
sub
dec
adc
cwtl
outsb
loope
into
ja
pushf
pop
mov
or
sub
lds
and
pop
incl
repz
pop
popa
mov
inc
push
pop
jp
jmp
dec
pop
and
in
sbb
lcall
int
das
lds
gs
inc
xchg
testb
outsl
nop
push
insb
es
jmp
jne
cwtl
jb
and
or
cmp
cltd
mov
aaa
leave
out
mov
mov
test
add
test
clc
int3
rolb
test
sub
mov
fisubrs
pusha
pop
loope
test
daa
mov
or
orl
xchg
icebp
xchg
mov
dec
adc
inc
js
xchg
mov
mov
pop
and
cwtl
shll
stc
sti
sti
mov
add
push
insb
jle
ror
xor
sub
pminub
clc
mov
fs
cmc
inc
bnd
pop
cmp
pusha
scas
fcoms
and
out
hlt
jmp
and
mov
stos
sahf
shrb
inc
xchg
cmp
loop
sbb
lods
lods
arpl
jo
lea
pop
jmp
or
cmp
push
ja
pop
or
mov
nop
lods
adc
jge
out
mov
sbb
mov
or
cmc
movsb
add
in
jbe
repnz
cld
hlt
push
in
fcmove
sub
xchg
push
rorl
mov
push
or
aam
push
shr
and
xor
repz
add
cmp
movsl
cmp
movsl
pop
arpl
mov
rorl
pusha
push
inc
mov
test
jbe
and
xchg
jp
lahf
push
inc
mov
mov
aad
rcll
in
popf
ss
cmp
insb
jmp
fsub
and
cmp
adc
pop
sbb
lock
push
mov
jge
ret
dec
xchg
sbb
push
mov
xor
sbb
sub
lods
pusha
jmp
popf
dec
pop
inc
mov
hlt
inc
lock
cmpsb
mov
mov
jns
loopne
cltd
mov
pmulhuw
idivl
inc
jae
mov
mov
mov
in
int3
stos
push
adc
and
dec
daa
xchg
pop
aaa
sti
jbe
adc
cli
adc
cmp
es
jo
clc
xor
pop
out
enter
aaa
lret
scas
or
add
jmp
mov
jmp
xor
out
test
and
or
gs
jbe
fadd
in
out
cld
jbe
adc
test
cmc
or
int
mov
rol
and
roll
lahf
pushf
mov
lcall
scas
call
adc
in
xchg
pop
hlt
scas
fimull
ret
dec
sbb
sub
jns
sub
mov
sti
and
jb
mov
xchg
pop
ds
loop
mov
loop
jno
mov
adc
xchg
repz
repnz
fmul
sbb
lds
push
sbb
adc
cmpsl
sbb
adc
dec
mov
cmp
jno
repnz
add
int3
xchg
call
mov
shr
fstps
jmp
pop
cmp
jnp
int3
sub
popa
and
lahf
and
pop
mov
cmp
add
lea
cmc
aas
push
negl
xor
cmc
or
push
hlt
jbe
sub
cwtl
and
in
mov
inc
fildl
insb
popf
fstl
jecxz
dec
push
lahf
push
adc
stos
fldenv
movsb
add
sbb
int
adc
and
shll
mov
insl
jle
adc
mov
int
int3
mov
xor
push
push
fcos
or
xchg
mov
lea
xlat
pop
movsb
jnp
stc
call
lcall
jg
jo
imul
imul
sarb
mov
mov
aad
ja
rol
ja
xor
orl
xchg
imul
cmp
insb
dec
mov
adc
mov
lds
mov
pop
rorb
sarb
add
sbb
aas
sub
sbbl
sbb
lods
add
push
out
sub
jl
mov
xchg
movsl
inc
rcrb
lods
test
adc
push
ss
sti
mov
pusha
or
xchg
dec
popf
jne
scas
mov
xor
or
push
pop
fimuls
mov
mov
jmp
xor
mov
shll
and
add
mov
shl
mov
pushf
jl
jne
mov
mov
mov
dec
daa
xor
cmp
js
je
sub
jp
cmp
and
xchg
mov
test
xchg
enter
cmp
xor
sub
negb
dec
ret
loop
xor
adc
xor
scas
adc
adc
hlt
test
sub
xchg
xchg
xchg
cmp
pop
cmc
pop
je
insb
js
cmp
mov
and
fwait
and
cmpsl
lock
cli
pop
in
insb
aas
sub
int
xchg
into
icebp
sbb
nop
add
and
inc
lret
mov
andb
cwtl
xchg
sub
adc
ret
repnz
mov
popa
notl
inc
xorb
cwtl
test
xor
rcrl
stos
sbb
cltd
mov
test
bound
add
or
lahf
lret
sub
dec
add
popa
shlb
dec
inc
ljmp
rclb
sti
xorb
mov
push
leave
xlat
in
lret
lods
mov
dec
adc
stos
out
pop
or
mov
adc
push
sahf
sbb
or
mov
lahf
mov
dec
call
loopne
repz
mov
loop
or
add
mov
mov
repz
lret
add
jns
inc
jg
les
jb
mov
mov
fdivrl
sub
out
cmp
pop
push
imul
jg
stos
mov
packssdw
sarb
rorb
push
pop
push
push
mov
xchg
xchg
mov
adc
or
cmp
jge
shr
dec
sbb
cwtl
add
or
loopne
sub
ret
jge
sbb
icebp
dec
cmp
sub
lcall
mov
and
push
js
into
xor
mov
sarl
adc
hlt
fucomp
mov
or
xlat
push
test
insl
fwait
clc
xchg
in
sub
pushf
jbe
sbb
iret
cmp
jl
in
inc
inc
in
mov
pop
push
push
scas
push
out
xchg
scas
xor
mov
cld
in
sbb
xchg
add
ret
clc
or
pop
inc
cwtl
outsl
outsl
rcll
cmp
bswap
imul
pop
jnp
daa
mov
rcll
jo
jae
data16
and
dec
fdivrp
xorb
or
jmp
push
add
dec
roll
or
icebp
pop
sbb
xor
adc
test
inc
aad
mov
rolb
pop
push
mov
pusha
jmp
fwait
cwtl
cs
adc
clc
pop
cmpsl
cmc
xor
aaa
les
lods
out
push
push
fidivrl
or
lahf
pop
mov
cli
jne
sub
jl
neg
rcr
adc
dec
mov
or
and
jno
in
ret
mov
jle
jle
aam
cli
call
fldcw
mov
pop
sti
hlt
jmp
mov
push
mov
out
push
ret
jns
jo
inc
pop
stc
movsb
repz
daa
sahf
cmp
mov
lds
xchg
and
push
fildl
and
cmpsl
stc
sub
xchg
ds
cli
pop
pop
stc
adc
dec
ss
xchg
push
xor
mov
test
test
cli
lret
sbb
sahf
in
xchg
jecxz
jmp
cmp
fsts
and
enter
cmp
push
cmpl
push
loopne
ds
clc
cwtl
ret
out
mov
dec
cli
fiaddl
sub
dec
inc
xchg
fdivrs
mov
iret
cld
loope
xlat
mov
into
lcall
loopne
cmc
lea
adc
cmp
fldt
push
jo
rorl
lret
daa
jns
out
stos
aaa
pop
xchg
jg
gs
xor
mov
out
lret
xor
out
ljmp
test
or
mov
jmp
add
out
mov
movsl
jno
push
mov
xchg
push
mov
pop
inc
dec
pushf
es
aas
out
rorl
cli
mov
jg
xor
sub
ja
mov
pop
and
jne
mov
hlt
ffree
and
mov
cwtl
push
pop
sub
and
clc
adc
xchg
push
add
and
mov
push
sbb
dec
add
shlb
mov
pusha
mov
pusha
or
xor
mov
xchg
jecxz
ljmp
xchg
xchg
stos
mov
sarl
fwait
dec
outsl
pusha
data16
push
push
popa
lea
dec
dec
nop
std
mov
mov
pop
loop
or
mov
lea
xchg
sub
test
je
sahf
pop
sub
or
outsl
add
sbb
sbb
sbb
push
jmp
es
int
fcoml
inc
cmpsb
ret
pshufw
inc
imul
cmc
mov
ret
push
pop
sbb
xchg
aas
es
loopne
ret
subb
int3
loop
and
repz
and
outsb
cmp
sbb
mov
mov
into
sub
idivb
dec
jmp
mov
cmp
faddl
js
dec
adc
push
ja
push
or
bound
rcr
sbb
inc
call
mov
inc
scas
cmpsb
push
das
popl
mov
sbb
jg
push
xlat
daa
jecxz
movsb
test
sub
inc
faddp
movl
out
notb
xor
bndstx
js
je
movsl
dec
mov
mov
inc
and
out
ret
cmp
mov
fildl
test
rorl
pushf
cmp
lret
mov
adc
cwtl
sbb
lea
xorb
es
dec
out
sub
loope
pushf
push
out
pop
cmp
pop
sbb
mov
sbb
jg
xchg
mov
loope
add
aad
loope
jl
fsts
or
mov
or
lret
test
pop
adc
hlt
imul
inc
jbe
xchg
andl
push
movsb
je
jp
mov
mov
xor
dec
lods
pop
cmp
and
jae
xchg
pushl
adc
xchg
insb
int
adc
jl
push
lret
or
and
test
inc
test
xchg
flds
jns
loope
xor
stos
and
into
or
stos
mov
leave
out
fidivs
push
stos
imul
inc
outsb
lret
jmp
stos
lahf
mov
pop
mov
lds
and
lret
hlt
pop
jmp
adc
rcrb
movsl
mov
les
call
shlb
hlt
loopne
pop
cmp
pop
dec
jl
mov
les
and
clc
cwtl
pop
mov
mov
fisttps
js
std
mov
in
test
pop
faddl
mov
out
jo
pop
pop
or
outsl
stos
aam
jne
out
fisttps
ja
xchg
pop
lea
mov
cmpsl
mov
sub
sti
popf
idivl
or
js
and
dec
daa
jle
cmp
sbb
aad
or
test
xlat
pop
add
add
lret
push
xor
loop
nop
mov
pop
push
mov
and
jae
sub
mov
jl
sub
out
sub
jns
mov
addb
mov
mov
lea
js
xchg
inc
push
fimull
xchg
push
sbb
mov
inc
cmp
add
popf
pop
stc
cmp
cmpsl
sub
mov
sbb
push
xor
sbb
movl
push
push
sub
test
add
clc
inc
insl
jecxz
adc
sub
lea
push
mov
pop
popa
push
sub
jp
mov
addr16
mov
and
jle
xchg
inc
out
push
mov
mov
pop
add
das
sub
hlt
jns
cmp
arpl
add
or
pusha
xor
out
stos
and
add
inc
shld
fs
cmp
jns
jg
es
inc
push
or
outsb
jecxz
add
js
daa
addl
or
push
jnp
add
sti
rclb
or
or
pop
mov
xor
ret
add
call
jno
cltd
and
fbld
mov
fildl
mov
outsb
push
adc
mov
or
dec
jle
fwait
xor
adc
aaa
pop
mov
mov
jmp
dec
mov
pop
outsb
xchg
inc
ds
push
lods
icebp
push
xor
sbb
lods
mov
push
sbb
sbbl
mov
pop
xchg
and
popa
int
pusha
test
icebp
fldcw
out
outsb
pop
inc
jg
sbb
cmc
jae
int3
cltd
imul
inc
push
xor
or
aam
out
jns
imul
imul
jp
dec
je
mov
push
mov
cmp
cmpsb
jno
cmpsb
ja
dec
adc
hlt
lock
inc
add
les
iret
lock
xor
cmp
clc
sbb
adc
xchg
sbb
lret
cmpsb
divl
pop
xor
pop
cmp
out
outsb
fstps
jns
shr
adc
movsb
adc
ficomps
xchg
andb
cltd
aaa
xor
addr16
call
insl
xchg
add
in
fidivs
rcll
or
out
lods
pop
lea
repz
sbb
pop
add
enter
mov
lds
mov
int
pusha
dec
int
sub
aaa
xor
std
jmp
pop
or
bound
out
xchg
push
ljmp
ret
fwait
jno
jle
leave
loop
add
in
mov
cli
adc
push
pop
dec
jmp
sbb
cmpsb
push
rep
nop
fs
mov
or
jmp
inc
fisttpl
sub
das
jl
adc
ja
inc
jge
mov
scas
pcmpgtb
cmpsl
mov
fnstsw
outsb
xchg
fwait
aam
stos
stc
mov
jae
mov
repz
nopw
cwtl
pop
les
xchg
cltd
inc
and
lds
lods
dec
xor
jle
cli
cmp
jno
add
sub
mov
mov
popf
push
inc
cmpsb
pop
jg
inc
cmp
add
jg
mov
lret
stc
pop
lcall
lea
adc
sub
fnstsw
lods
ds
les
mov
push
add
testl
test
inc
and
call
aaa
das
lcall
mov
cltd
in
adc
lret
jge
sub
es
sub
cbtw
test
iret
stc
inc
push
lods
aam
fsubrs
fsubs
pop
xor
mov
int
gs
adc
test
out
add
sub
test
push
rclb
rcl
sbb
mov
in
addb
pop
stos
mov
push
sub
gs
nop
add
mov
mov
sub
push
stos
and
jnp
clc
loopne
sahf
roll
jo
sub
jno
inc
xchg
add
mov
pop
jne
mov
pop
add
mov
cmpsl
js
in
in
cmp
xchg
arpl
les
mov
dec
and
mov
lock
pop
xor
dec
into
in
ret
or
inc
lcall
out
xor
jl
lods
sbb
push
fwait
adc
loope
ds
push
add
mov
or
es
mov
inc
cmp
ret
and
pusha
outsl
xchg
inc
mov
insb
jb
dec
in
into
or
pop
or
cmc
adc
shrb
mov
mov
int3
mov
ds
cmp
insb
cmp
jne
push
call
mov
insb
in
das
inc
popa
jb
dec
cmp
loopne
jno
mov
mov
frstor
pop
add
leave
and
stos
shlb
jecxz
les
repnz
pop
stc
dec
jnp
imul
inc
loop
cmp
push
or
cmp
movsb
int3
imul
stos
or
cmp
xlat
sub
sbb
mov
idivl
imul
pop
cmp
into
mov
lahf
loopne
mov
or
dec
push
fs
sbb
pop
mov
out
out
xor
add
shlb
shll
rcrl
adc
inc
xor
push
cmp
cmp
cmp
sub
lret
jno
fadd
push
roll
lea
push
xor
bound
push
add
jbe
movsb
jg
js
cld
adc
push
pop
dec
jp
dec
push
mov
adc
sahf
xchg
gs
mov
stos
out
addr16
pop
fs
and
xlat
mov
xchg
pop
es
add
cs
shrl
push
add
ret
popf
imul
es
cmpsb
enter
push
fidivrs
test
bound
test
pop
aam
push
dec
add
pop
lahf
push
sub
nop
add
addr16
or
shlb
mov
test
push
pop
add
xor
push
adc
fdivr
icebp
gs
out
jmp
loope
out
jo
fbstp
add
mov
pop
mov
int3
imul
cltd
rclb
pop
and
pop
movsl
jne
xchg
int
sbb
scas
fisttps
sub
adc
xor
fcmovnb
push
push
fs
jecxz
mov
pop
pand
bound
sbb
jbe
dec
into
jl
sub
sub
xor
insb
adc
cmp
lods
pusha
scas
sub
test
xor
cmpsl
jle
or
gs
and
pop
sbb
out
mov
fadds
hlt
and
push
jnp
shrb
in
imul
sub
xchg
push
dec
imul
jecxz
xor
nop
sub
orb
or
mov
pop
roll
push
cmpl
aam
jp
repz
sub
hlt
lret
jge
stos
or
arpl
std
push
push
and
repnz
dec
sarl
sub
jno
ret
orb
fs
adc
cs
add
loopne
lock
mov
call
cwtl
jg
jne
push
icebp
push
ret
clc
in
test
imul
jge
cs
jmp
or
jbe
pop
xor
mov
mov
xchg
test
ret
mov
loopne
inc
or
ret
dec
das
dec
push
gs
or
cmp
xor
test
idiv
ficomps
ljmp
ret
mov
jno
in
inc
fstl
movsl
test
inc
mov
mov
lret
fisttps
push
jecxz
add
das
sub
sub
pop
and
ss
jb
jno
mov
dec
push
xlat
dec
xchg
inc
inc
or
jg
ret
fwait
and
cmp
add
stos
into
mov
add
inc
sub
lahf
aad
mov
adc
sti
dec
cmpsb
adc
xchg
mov
sbb
icebp
dec
push
push
xchg
cmp
cmp
pop
inc
push
xchg
mov
shrl
rol
sub
stos
cmpsl
sahf
push
mov
mov
push
jb
int
lods
pushf
shlb
mov
cli
gs
movsl
daa
subl
push
mov
nop
repnz
push
cmp
push
jns
enter
cs
jnp
inc
adc
test
ljmp
xchg
dec
sub
jle
out
push
jmp
popf
dec
sub
inc
mull
xor
sub
push
xchg
cmpsl
movsb
mov
adc
les
mov
ja
rcl
add
in
add
mov
addr16
pop
and
bound
insb
dec
sbb
pop
mov
das
mov
fwait
or
rorb
mov
adc
cmp
into
sub
cmpl
pmulhw
ds
mov
push
pop
stos
add
lock
lods
ret
mov
cmc
jb
sub
stos
pop
jge
adc
sub
cltd
pop
jnp
mov
fsubrs
mov
int3
mov
lahf
test
out
inc
test
add
sub
sub
add
scas
mov
inc
jp
je
inc
push
mov
or
push
orl
in
push
pushf
jnp
mov
mov
in
mov
xor
outsl
inc
insl
mov
dec
bound
and
inc
in
push
loope
in
aaa
xorl
popf
push
lcall
lods
inc
inc
sbb
inc
mov
scas
mov
jb
das
les
add
push
pop
pop
jae
and
fsub
js
les
stos
cmc
pop
pop
dec
push
dec
lahf
or
mov
pop
int3
dec
adc
lods
pop
fisubrl
jle
loopne
xchg
pop
into
lret
fcmovb
push
xchg
jge
gs
inc
mov
mov
and
mov
out
add
loopne
call
pop
mov
adc
sbb
inc
setl
push
out
icebp
sub
inc
and
dec
mov
dec
cmp
cld
in
add
stc
sub
aam
mov
add
out
call
mov
or
jecxz
cld
push
jno
or
call
mov
mov
push
mov
dec
lret
lds
push
pop
je
jge,pn
adc
dec
jnp
mov
sbb
int3
push
rorl
adc
ss
incb
fistpl
add
fimull
mov
aam
xor
sub
add
test
dec
rolb
rorl
jne
ss
mov
and
fcompl
mov
cs
ja
ss
lcall
adc
xor
mov
lods
inc
mov
xchg
int
pop
scas
loopne
sub
fcomip
sbb
in
out
dec
xchg
mov
and
sub
xchg
into
adc
movups
jbe
movsb
inc
test
push
sbb
dec
lahf
lods
cld
insl
out
pusha
or
cmp
lds
adc
mov
add
cld
and
and
cmpb
ja
fldl
movsb
es
cmp
add
aad
loop
sub
aam
shlb
fstl
mov
mov
add
and
mov
cmp
or
imull
fldt
cmpsl
lods
add
jl,pt
cmp
rclb
cmp
js
ja
mov
pop
ja
push
and
shrb
mov
scas
cmp
mov
aad
jne
repz
pop
mov
jecxz
in
cld
ja
mov
outsl
mov
mov
inc
imul
ficompl
xchg
dec
xchg
leave
mov
push
pusha
cmp
pusha
inc
shll
jg
out
lods
mov
test
sahf
sbb
mov
pop
out
dec
push
add
daa
int
fidivl
xchg
aam
inc
xchg
dec
mul
inc
je
popa
cmp
mov
in
arpl
jno
mov
push
lret
nop
insb
or
adc
jbe
int3
mov
sub
das
sub
mov
les
adc
pusha
dec
pop
pop
aas
jno
dec
outsl
xchg
xor
or
cmp
push
out
lds
shll
neg
inc
mov
cld
roll
ret
pop
enter
pcmpeqd
in
mov
jecxz
xlat
jne
sbb
sbb
outsl
into
pushf
bound
and
call
mov
pushl
lgs
out
sub
mov
shll
mov
fistps
inc
xor
push
cmpsl
xchg
lsl
add
call
rol
jnp
les
mov
sbb
or
gs
roll
int3
fisttpl
in
frstor
bound
cmp
rcll
mov
mov
and
ret
mov
lock
sub
negl
int3
mov
sub
filds
insl
inc
shrl
mov
mov
push
cs
test
scas
push
loop
mov
lret
nop
cmc
jge
cltd
mov
cmp
roll
xchg
pop
cmpsb
std
xchg
int
pop
adc
cmp
aad
and
std
push
pop
flds
xchg
mov
ret
add
aad
mov
jmp
or
rcrb
lea
pushf
adc
dec
mov
cmp
cmp
les
xchg
test
mov
xchg
mov
test
divb
push
pop
lods
movsl
sti
push
xorl
dec
int3
shrl
and
jecxz
pop
cli
lds
stos
decb
push
sub
jae
scas
xchg
jg
outsb
iret
push
es
adc
mov
fmull
pop
fstpl
fs
lods
lea
or
push
mov
inc
clc
scas
xchg
addr16
cltd
imul
xchg
and
jb
dec
push
pop
mov
fnstcw
cmp
sbb
or
std
xchg
rcrb
iret
sub
mov
adcl
sub
inc
xchg
and
or
in
lret
mov
pop
push
les
xchg
loop
push
jle
inc
dec
into
scas
or
jge
mov
call
aaa
mov
andl
sub
sbb
cli
mov
lods
shl
and
adc
repnz
fidivrl
es
das
rcrl
push
aas
pop
mov
mov
lods
and
xorb
test
cmp
repnz
gs
out
jg
push
and
xchg
loop
mov
and
mov
add
cltd
out
push
fstpt
or
loop
stos
arpl
pop
mov
lcall
cld
cmp
mov
aam
lret
add
push
xchg
jge
aam
addb
lret
pop
ret
cmp
in
enter
mov
sbb
push
daa
sub
xor
mov
out
mov
int
jae
push
pop
adc
sub
outsb
scas
sbb
or
mov
mov
push
pop
sbb
rcll
adc
inc
mov
push
push
sbb
mov
mulb
setl
mov
sahf
sbb
mov
pop
mov
mov
jnp
xor
sbb
stos
cmp
push
xchg
icebp
int3
push
stos
sbb
pop
or
bound
cmp
lds
mov
add
add
popa
cmp
mov
sbb
cli
stos
std
icebp
adc
mov
lret
jnp
jb
es
inc
std
aam
pushf
cmpl
sbb
or
cmp
xchg
mov
insb
pop
lods
lods
icebp
and
fiaddl
dec
popf
loope
and
fsubl
or
add
cmp
inc
jbe
cli
das
pop
xchg
lgs
jne
call
mov
pop
loopne
pop
mov
int3
sub
cmp
cwtl
cmpsb
inc
loop
hlt
xchg
sub
mov
dec
xchg
mov
test
cmp
cmp
repnz
jl
add
ret
push
mov
call
cmc
mov
sbb
fsubr
or
and
mov
movsl
leave
adc
push
push
cmp
mov
in
adc
nop
pop
mov
adc
aam
xor
pop
ret
iret
pop
xchg
mov
icebp
pop
xor
adc
sub
jl
dec
xor
cmp
mov
xor
or
mov
mov
mov
ja
test
cmc
or
mov
sarl
lahf
jno
imul
inc
aas
jbe
lcall
icebp
and
jne
imull
cmp
mov
push
mov
shl
in
xor
jmp
or
out
pop
push
xchg
pushf
cmpsb
xor
dec
outsb
push
and
dec
xchg
xor
popa
and
aad
je
cmp
add
fs
mov
mov
xchg
sti
push
daa
push
add
rolb
and
in
shrb
sbb
hlt
cs
xlat
xchg
mov
sbb
mov
sbb
mov
xor
mov
inc
fidivl
test
dec
jb
jbe
and
faddl
push
xchg
hlt
and
adc
adc
xor
jb
pop
movsl
test
xchg
and
add
leave
xlat
push
icebp
cwtl
data16
shl
sti
mov
and
sbb
test
test
jg
rcr
aas
int
add
test
loopne
pop
fidivrs
iret
fistpl
int3
jns
dec
sub
fstl
ret
jne
dec
sahf
cs
ret
adc
mov
xchg
rcrl
out
jo
inc
test
es
popl
arpl
xor
inc
out
insl
stos
test
cmpb
jg
lret
sub
or
xchg
jbe
test
pop
push
jg
sbb
fmul
and
jl
sub
xrelease
mov
int3
jno
dec
add
dec
sbb
push
in
lahf
int3
bound
push
sbb
push
shl
mov
pop
out
dec
mov
pop
pop
mov
sbb
pushf
adc
and
inc
dec
inc
clc
cmc
xchg
imul
xchg
loope
cmp
cwtl
and
add
jl
mov
out
mov
inc
les
shll
xor
fcompl
xchg
mov
arpl
adc
scas
shl
and
repz
aad
mov
jo
and
rcll
dec
sub
jmp
mov
pop
mov
or
xchg
lcall
rcrl
jb
push
sbb
jnp
dec
jae
pop
scas
loopne
or
pop
fcmovnbe
rcrl
adc
inc
cmc
cmp
jecxz
sub
and
push
sbb
into
add
popf
adc
jne
mov
in
loopne
test
push
inc
lods
sbb
adc
jg
lock
dec
mov
pusha
in
mov
loopne
push
push
dec
leave
mov
stos
push
lods
mov
ret
sub
pop
call
mov
push
divb
scas
inc
pop
mov
lock
add
pop
mov
mov
scas
sub
fcompl
mov
mov
imul
pushf
rcll
testb
imul
dec
popf
repnz
data16
in
xchg
dec
test
ret
fldenv
sbb
xchg
jnp
mov
and
push
movsb
into
or
mov
sarb
push
cltd
shll
dec
loope
xchg
adc
pop
pop
fisubrl
and
leave
dec
scas
sbb
mov
inc
adc
addr16
fbstp
sbb
clc
sti
mov
xor
std
out
dec
mov
lss
test
das
ret
mov
xchg
mov
rolb
lock
push
lock
xchg
jmp
test
outsl
jo
pusha
and
xchg
loope
add
test
inc
push
in
jecxz
shll
inc
jmp
adc
aam
add
pop
jecxz
aad
div
bound
xchg
jmp
mov
mov
cs
adc
jmp
fs
lea
push
inc
xchg
shll
mov
pop
push
push
mov
pop
fidivl
jb
mov
sbb
or
push
aaa
sbb
mov
clc
lret
or
jns
movsb
fdivrs
loopne
sbb
std
jne
sbb
adc
xor
or
lods
movsl
jge
xchg
mov
fistpll
cmp
sahf
ss
lods
push
pusha
or
inc
xchg
cmpsb
adc
stc
cmc
or
lock
out
sub
push
jae
sub
das
mov
insb
add
xor
lcall
mov
pop
sub
mov
jbe
push
ret
dec
rcrb
mov
mov
push
inc
add
or
outsb
cmp
add
jne
std
jg
test
sbb
daa
repz
mov
jns
insb
test
jmp
sub
cmpsb
sahf
pop
and
hlt
xchg
jnp
pop
jns
inc
pop
sahf
repz
fildll
mov
jmp
arpl
outsb
adc
test
add
sti
out
xchg
mov
cmp
call
jae
jmp
test
push
cmp
mov
mov
and
cwtl
inc
push
gs
jae
fldcw
sub
sarb
or
cmpsl
pop
sub
mov
cmp
and
cmc
and
iret
and
adc
sub
divl
mov
dec
lret
push
push
pop
fwait
pop
cs
or
and
cmp
fisttpl
js
mov
incl
insb
adc
sub
push
shrl
mov
hlt
or
mov
mov
dec
outsb
push
pop
xor
cmp
jp
ss
imull
pop
mov
mov
pop
fnstcw
mov
push
xchg
add
sahf
clc
shl
lcall
sti
inc
movsl
mov
and
inc
sbb
mov
pop
push
rclb
mov
mov
in
xor
mov
push
popl
mov
push
shlb
lds
loopne
pop
mov
pusha
and
mov
pop
aad
hlt
xor
aaa
sbb
aaa
cmc
or
imul
cmp
pop
jne
xor
inc
enter
cmpsl
popa
xor
lcall
adc
mov
cmpsl
sbb
or
jae
cmp
ja
mov
ja
cmp
inc
and
mov
add
cmp
lcall
mov
or
cld
repnz
adc
cmpsb
in
fwait
cmpsb
cmpsb
mov
fstp
pop
iret
mov
addr16
icebp
in
sub
dec
push
clc
xchg
push
test
out
push
in
sbb
push
jbe
repz
mov
out
fchs
jbe
mov
jnp
sbb
ljmp
xchg
sbb
das
cmp
int3
adcb
sbbb
ss
sbbl
xchg
pushl
daa
clc
jno
push
add
fwait
mov
fnstsw
out
repnz
scas
and
mov
push
dec
in
cld
push
mov
mov
sbb
clc
movsl
inc
out
cltd
xor
add
push
negb
lahf
shr
jl
iret
xor
lahf
je
es
pop
mov
mov
test
sar
mov
xor
pop
addr16
xor
and
das
leave
sub
aaa
addb
fcom
aam
adc
dec
push
cmpsl
and
cltd
jb
arpl
test
xor
cwtl
jecxz
nop
adc
push
out
cmpsl
outsb
addr16
xor
adc
cmp
sti
pop
push
imul
shr
das
repnz
fsubp
fmuls
movsb
adc
cmp
repnz
gs
inc
add
shll
mov
dec
cmc
aad
push
enter
aam
xor
mov
rcll
mov
add
pop
sbbb
incb
out
loopne
mov
dec
in
aad
pop
xor
pushf
movsl
aad
jae
les
xchg
insl
pop
nop
in
stos
cmc
mov
pop
dec
and
push
jbe
popa
imul
push
mov
icebp
sbb
cmp
add
and
pop
ss
outsb
xor
mov
jns
jnp
adc
icebp
push
outsl
sbb
mov
js
stos
das
inc
sti
sbb
fisubs
xchg
inc
mov
lret
aas
pusha
out
sbb
pop
loop
iret
movsb
rcl
push
xchg
dec
xchg
jnp
pop
push
arpl
rcrb
jecxz
pop
cltd
in
sub
add
mov
push
stos
pushf
xchg
test
cli
xchg
sub
push
inc
or
sbb
mov
fistpl
add
pusha
xor
add
cld
into
mov
inc
es
fs
cmp
inc
and
xor
cltd
popa
cmp
jb
outsb
mov
rorb
jecxz
das
hlt
xor
and
sti
ljmp
jb
mov
int3
mov
cli
mov
sbb
inc
sarb
sub
pop
stc
lea
test
inc
pop
push
outsb
pop
imulb
enter
inc
addr16
fbld
shlb
stos
push
or
gs
ljmp
dec
pop
outsl
dec
dec
and
inc
inc
and
cli
sbb
dec
xchg
ficompl
push
sub
jno
fcoms
ss
movsb
mov
call
fwait
push
pusha
rcr
push
pop
mov
shr
cmc
cmp
dec
or
dec
mov
les
jae
addl
arpl
rcrl
cmpb
test
aad
in
pusha
jb
scas
inc
xchg
xchg
mov
dec
lds
cmp
outsb
aam
enter
pop
in
test
mov
xor
push
xor
and
and
shlb
push
stos
pop
and
cld
sbb
adc
and
lcall
jge
inc
clc
test
dec
bnd
xor
mov
hlt
mov
movsb
cmp
xor
and
in
in
dec
adc
cmpsl
xchg
in
pop
cs
daa
loop
imulb
cs
mov
cwtl
xor
sbb
fs
movsb
in
inc
xor
shlb
fisubrl
dec
fcomp
push
mov
mov
add
or
ret
iret
dec
fisubrl
lock
or
inc
sub
bound
dec
xchg
mov
popf
pop
add
lea
or
nop
mov
inc
xchg
push
jns
js
stc
lcall
in
in
pop
push
mov
insb
dec
add
in
and
dec
mov
rcrb
imul
repz
xchg
je
xor
scas
mov
adc
std
inc
sbb
ljmp
jp
aaa
call
xor
push
popf
inc
pop
jnp
pop
xchg
jecxz
push
dec
movsl
lret
outsl
ja
gs
loope
or
push
pusha
mov
mov
fcomi
scas
sbb
lret
xor
jp
mov
dec
inc
das
sbb
or
pop
and
clc
scas
mov
loop
dec
pop
fwait
insb
and
lret
ja
jg
xchg
jp
mov
mov
out
push
xchg
push
mov
scas
out
or
or
dec
mov
fmul
lds
scas
pop
je
inc
out
mov
add
cmc
dec
scas
and
cmp
lds
mov
fildl
mov
gs
pushf
mov
cmpsl
rcrl
add
sub
stos
fs
add
rcrl
test
enter
mov
inc
xchg
out
iret
push
or
loopne
jle
ffree
lock
sbb
leave
push
outsl
ss
icebp
or
sub
jge
inc
dec
or
out
xchg
push
cltd
mov
in
subb
mov
insl
cmc
fcomps
and
dec
aaa
out
addr16
and
xchg
cmp
pop
lds
enter
scas
push
stos
out
lcall
pop
cmpsb
or
push
pushf
adc
cmc
fnsetpm(287
cmp
cwtl
out
sub
or
jno
mov
fisubs
aas
bswap
cmp
add
lret
daa
sbb
add
push
ds
pop
sub
cmp
mov
or
imul
cmp
les
fcoms
rcrl
inc
push
mov
hlt
rcll
sarb
xorw
stc
pop
lock
push
clc
scas
xchg
xchg
pusha
loopne
pop
xchg
fadd
dec
pop
add
shl
rclb
jno
mov
fildl
pop
mov
into
outsl
cmpsb
rcl
fiadds
fwait
mov
dec
mov
ds
mov
inc
or
sub
sbb
pop
sub
fs
jnp
shrl
pop
jne
mov
add
pop
inc
mov
std
jbe
icebp
or
mov
rclb
push
xchg
xchg
jmp
dec
xor
mov
cmp
push
mov
adc
lods
movsl
sbb
xorl
adc
hlt
clc
mov
fwait
mov
ss
leave
jb
xchg
xchg
inc
cli
gs
jecxz
adc
out
mov
dec
mov
popf
xchg
pop
xchg
outsb
aas
xor
call
adc
jge
bound
dec
js
and
adc
cmpsb
enter
insl
jle
cmp
or
mov
xchg
xchg
mov
xchg
lcall
ds
jp
aad
lods
lcall
push
pop
cmp
in
in
arpl
mov
fnstenv
and
jno
mov
push
xchg
jbe
cmp
adc
push
clc
sbb
mov
xchg
icebp
sub
mov
jge
test
jge
add
xchg
enter
fdivrp
outsb
dec
add
sub
enter
mov
mov
lods
lret
add
sub
jbe
repnz
enter
cwtl
and
or
test
js
mov
scas
ja
cli
add
adc
in
jns
mov
stc
in
xor
sbb
pop
mov
jge
ret
lcall
aas
xchg
movsb
iret
fimull
ja
insb
inc
inc
repz
mov
fs
mov
inc
jno
xor
and
sbb
or
insl
jb
xchg
sub
add
pushf
push
mov
dec
adc
test
xchg
mov
in
in
ret
sub
pop
or
sarl
sbb
push
cmp
pop
out
cmp
xor
jnp
sub
in
lcall
xchg
imul
push
imul
ja
pop
int
jnp
mov
cmp
xchg
ljmp
mov
popf
pop
inc
mov
dec
xchg
inc
out
xchg
daa
popf
rcr
xchg
xlat
and
mov
and
xlat
in
and
scas
fistl
aam
cmc
fs
fidivs
es
mov
push
xor
fs
and
push
sbb
inc
lcall
xor
gs
cmpsl
cmpl
in
pop
pop
rcl
push
dec
repnz
mov
div
loopne
adc
push
movsl
lahf
pop
mov
add
insb
lret
imul
or
mov
pop
mov
les
leave
fs
ljmp
std
imul
lods
push
pop
xor
imul
rcl
push
pop
cmp
add
ret
fimull
lods
lret
mov
call
pop
sbb
dec
inc
mov
sahf
add
je
es
ds
pop
lret
jns
inc
out
hlt
and
cmpsb
lret
notb
dec
ret
mov
insl
or
and
test
xchg
add
mov
lret
or
into
pop
cs
out
jle
daa
pop
roll
movsl
pop
ficoml
leave
movsl
push
addl
adc
test
fimull
pop
jmp
mov
xchg
scas
pop
add
pop
jae
mov
jg
outsl
cmp
aam
push
push
sar
mov
mov
test
adc
das
or
arpl
and
sbb
cmp
push
adc
aad
das
cmp
cmp
ss
xchg
fdiv
out
jbe
int3
jb
arpl
fdivrs
loope
xchg
ficoms
cmp
mov
and
push
sti
ljmp
xchg
test
jae
mov
or
sbb
or
or
lds
std
or
scas
mov
mov
shll
xchg
mov
pop
sub
jmp
mov
cmp
clc
push
cmp
inc
mov
cmp
pushf
pop
out
aaa
inc
in
pop
inc
add
jg
into
icebp
ds
jge
sarl
cmp
mov
sub
inc
xor
lock
mov
adc
shl
cmc
mov
or
loop
and
pop
xchg
mov
shl
sbb
in
insb
mov
mov
xchg
in
ss
mov
jmp
pop
fiadds
push
jle
ja
in
jae
add
sbb
out
cmp
push
jecxz
mov
icebp
daa
mov
insb
sbb
cltd
or
push
flds
test
sarb
jge
and
sbb
lods
leave
jp
xchg
or
or
out
or
inc
lea
in
sub
scas
jb
xchg
aaa
out
les
push
pop
int
in
inc
add
adc
pop
xor
sub
jle
ja
fcoml
cmc
xor
cmp
shr
je
or
lcall
xchg
dec
cltd
sbb
fidivrl
nop
sub
je
rol
mov
icebp
into
mov
sub
iret
xor
ljmp
push
cmp
xchg
pop
outsl
xchg
and
movsl
mov
and
insb
xor
daa
adc
jo
mov
fstl
or
cwtl
xor
in
sbb
sub
ret
inc
stos
xchg
mov
add
aaa
xor
gs
imul
fsubrs
jmp
shl
insl
and
pusha
dec
sahf
fimuls
iret
dec
cmpsb
adc
mov
or
inc
aaa
mov
add
mov
mov
push
and
out
mov
addl
sbb
adc
lret
mov
jl
xchg
jecxz
filds
aad
sub
jecxz
lret
mov
cvtdq2ps
push
dec
imul
cmpsl
add
ja
cmp
sub
mov
test
dec
push
rcrl
add
mov
fbld
rorl
aam
xor
inc
add
dec
cltd
outsl
pop
pop
mov
xchg
lahf
pop
outsl
push
sub
repnz
loopne
or
or
ror
test
das
xor
or
test
lret
push
popf
mov
or
in
aad
jl
clc
je
xchg
sbb
lahf
sbbb
sbb
faddl
js
scas
cmp
push
xchg
inc
test
mov
adc
xor
dec
xchg
pop
mov
add
add
push
subb
xor
stc
adc
frstpm(287
mov
cmp
pop
int3
or
dec
ja
fadds
lret
dec
mov
ficomps
lds
xchg
lret
mov
imul
in
ljmp
jns
aad
shl
jge
jne
sbb
call
loope
ss
stos
jbe
inc
popf
iret
movsb
or
and
repz
cmp
dec
jmp
or
and
jg
daa
es
fwait
adc
jnp
adc
cmp
adc
std
cmp
popa
sbb
loop
pop
sbb
cmpsb
push
cmp
daa
pop
aad
cmpsb
pop
int3
sub
ss
mov
mov
andw
push
mov
cmp
das
adc
jbe
push
push
and
adc
cs
jae,pt
and
push
loope
sbb
dec
mov
sti
mov
inc
idivb
jecxz
icebp
mov
adc
jno
pop
pop
into
leave
inc
pop
sbb
inc
loopne
pop
sarl
add
mov
sti
stos
shll
xchg
pop
sub
rorb
lret
loope,pn
arpl
insb
fsubr
push
in
and
jb
xchg
xlat
movsl
sub
xor
scas
xor
in
or
psubd
mov
mov
add
xchg
adc
test
xchg
xchg
aad
lret
movsl
push
pusha
adc
xchg
xor
into
out
xchg
jle
push
insl
dec
jmp
gs
sahf
sbb
test
pop
xchg
or
dec
in
call
mov
hlt
add
into
call
lret
int
enter
push
sub
push
xchg
jns
push
fsubl
sbb
mov
idivb
push
adc
or
fsubl
xchg
shl
or
xchg
rcl
ficoml
aas
lcall
jne
ljmp
pop
jp
push
pop
dec
imul
jmp
mov
or
pop
cld
pop
push
sbb
insl
stos
nop
mov
push
mov
dec
adc
outsb
pusha
movsb
mov
es
ds
inc
ljmp
sarb
inc
mov
cmp
inc
rcrl
jl
or
gs
jp
dec
jne
xchg
out
push
and
stos
mov
or
mov
movsl
bound
pop
aas
arpl
fwait
ret
xchg
sub
in
int3
stc
mov
inc
inc
ret
sar
data16
pop
adc
jnp
into
jno
rcll
fmuls
gs
jnp
out
arpl
aas
popf
pop
idivl
aas
xchg
inc
cmc
lea
js
fcmovne
popa
push
ja
add
stc
sbb
mov
xchg
push
xchg
sar
test
mov
adc
xchg
jl
dec
fiaddl
in
in
aas
mov
pop
cmp
push
pusha
sbb
cli
jg
push
loopne
ficomps
lea
pop
mov
push
out
push
scas
mov
inc
mov
cmc
or
outsb
mov
cs
out
int3
loopne
dec
in
pop
ja
psubq
add
jecxz
roll
cmp
addr16
cmp
dec
mov
jg
addl
sbb
jge
jmp
insb
repz
sbb
pop
out
mov
das
rcr
in
mov
hlt
or
push
mov
pop
icebp
or
insl
pop
in
sbb
mov
lret
xchg
push
fs
jmp
push
cmpsb
jle
xchg
xor
push
adc
int
dec
scas
scas
xchg
test
xor
mov
arpl
enter
das
sahf
mov
sub
dec
in
das
mov
jmp
push
aas
in
mov
pop
jno
mov
push
hlt
xor
xor
enter
fcmovnb
cli
movsl
pop
push
push
cmp
mov
mov
lock
ds
data16
sub
dec
adc
fidivl
dec
sub
mov
sub
stos
pushf
sub
mulb
sbb
mov
and
loope
int
mov
in
and
push
or
pusha
std
and
jo
lods
fcomip
xchg
scas
jge
fdivrs
xchg
ss
pop
ja
inc
ret
cs
scas
rcll
out
ljmp
test
dec
xor
and
push
jp
pop
dec
sub
outsl
movsl
or
cmpb
testl
jp
jo
fidivrs
jmp
sbbb
inc
cmp
xlat
push
loop
sbb
add
sarl
in
sub
push
rclb
push
mov
inc
xor
stos
paddsw
fstl
push
sbb
sub
adc
add
sbb
or
mov
rcrb
sti
pop
out
imul
xor
lahf
sar
xchg
add
ret
cmpsb
fdivrs
pop
mov
mov
inc
adc
inc
call
repnz
inc
repnz
fisttpl
cmp
aas
jbe
add
ja
pop
pop
in
push
push
push
push
add
pop
stos
repz
sbb
mov
or
fdiv
out
rorb
shlb
inc
fcoms
sub
adc
push
jl
xor
cltd
mov
pop
arpl
insb
inc
inc
inc
inc
in
cmp
jo
jne
or
cmp
lods
sti
into
into
mov
add
loopne
daa
dec
inc
sub
clc
xchg
mov
scas
scas
fsubs
mov
inc
push
dec
sub
nop
mov
or
pop
sbb
push
push
inc
mov
jecxz
repz
and
dec
adc
xor
sbb
jno
std
inc
ret
lds
lock
pop
rcrb
push
pop
mov
and
iret
push
push
cltd
sbb
fadds
in
cmp
mov
int
fcom
jg
pop
cltd
das
nop
fistl
add
xor
mov
xchg
xor
lret
fimull
sbb
or
leave
jns,pn
mov
and
nop
adc
in
push
clc
sbb
fwait
cmp
std
push
sub
xchg
lods
dec
lods
dec
pop
sahf
push
into
inc
xor
fwait
and
lahf
jne
idivl
cltd
nop
or
call
repnz
mov
leave
jge
push
popa
push
fidivrs
mov
fdivs
inc
icebp
mov
lret
mov
icebp
movswl
adc
push
imul
fwait
adc
mov
lods
data16
insl
dec
out
leave
jo
out
lcall
xchg
push
loop
dec
repnz
mov
lea
arpl
cli
xchg
adc
push
sarb
pop
pop
jmp
sar
push
push
shr
aas
ret
aam
xchg
jo
or
and
xorl
and
data16
mov
das
daa
subl
mov
or
je
sub
jo
mov
movsb
sub
aaa
fcomip
jae
jne
test
sbb
int3
bnd
sbb
out
and
cmp
jbe
mov
nop
bound
sar
cld
lods
xor
inc
ljmp
push
jo
data16
adc
push
xchg
icebp
cmp
cmp
sub
dec
scas
mov
repnz
lods
inc
and
inc
pop
dec
inc
jno
out
and
cmp
push
xor
stos
cld
push
jne
xor
xchg
add
in
insb
js
mov
or
jb
sarb
jle
lea
or
xchg
mov
outsl
add
lods
fnop
push
in
dec
sub
cmpsl
ja
jle
jno
lret
push
mov
jnp
ljmp
in
stc
sbbb
ret
insl
pop
mov
xchg
icebp
inc
adc
shrb
sub
scas
fwait
test
xchg
jns
jge
dec
cmp
sahf
test
push
mov
lahf
fldz
ret
loop
test
movsb
dec
push
and
cmp
push
scas
outsb
repnz
mov
lds
les
xchg
sub
in
lea
push
dec
sbb
rol
lahf
icebp
mov
or
fs
push
pop
ljmp
cwtl
ljmp
cmpsl
rorl
xor
push
or
in
lds
outsl
test
jmp
loopne
bound
idiv
sbb
dec
inc
sbb
push
xchg
je
sub
xor
ficompl
scas
inc
mov
ffreep
xchg
movsl
add
lret
cwtl
xor
pop
xchg
pop
cmp
sub
cwtl
popl
jns
ja
cwtl
xchg
aam
fucomi
adc
xchg
rcrb
dec
inc
jmp
mov
sbb
xchg
or
pop
aas
out
push
xchg
or
xchg
lea
mov
dec
mov
imul
dec
sub
inc
jecxz
cmp
pop
cld
jne
repz
loope
scas
loope
lahf
xlat
fildl
test
cmp
jae
cmpb
test
out
jmp
push
push
jl
jmp
cmpsl
pop
aas
imul
fidivs
aad
cmp
jmp
adc
cmpb
mov
mov
out
inc
sti
xchg
repz
xor
push
adcb
cmp
push
lahf
push
pop
add
cld
iret
call
pop
adc
xchg
lods
mov
mov
push
pop
sub
push
cmp
pop
mov
lret
repz
xchg
andl
pusha
inc
out
mov
push
xor
dec
lds
ret
push
scas
push
sbb
stos
adc
bound
push
pop
mov
dec
inc
xchg
lock
jne
mov
mov
cwtl
or
xchg
in
lcall
mov
push
bound
ljmp
mov
sub
jecxz
and
push
cli
test
aam
mov
out
jecxz
sahf
into
inc
pop
imul
xor
jg
add
cli
mov
insl
adc
mov
in
and
xor
pop
pop
mov
scas
mov
add
out
mov
insl
sub
jecxz
lea
sahf
mov
mov
fwait
inc
repnz
and
repz
cwtl
push
cmp
lcall
push
xchg
mov
push
xchg
ss
punpcklwd
push
lcall
mov
inc
push
clc
pop
mov
cmp
sti
inc
setl
pop
sbb
xchg
leave
leave
add
mul
push
adc
jbe
xchg
movsb
jno
icebp
xchg
outsl
icebp
mov
mov
vphsubdq
and
jg
and
pop
push
inc
jecxz
mov
cmp
in
dec
dec
add
les
sub
addb
pushf
dec
or
xchg
push
jmp
aam
gs
add
mov
fs
and
sub
orl
ret
mov
ss
push
ds
mov
fs
aaa
orl
aas
popf
nop
mov
insl
pushf
scas
clc
rorl
stos
std
stc
aam
jmp
pop
jne
sub
mov
and
lcall
pop
inc
inc
add
lea
bound
cmp
mov
jne
mov
popa
pop
jb
loope
lcall
jl
es
loope
pop
adc
in
popf
ret
dec
xorl
fcmovne
push
cmpsb
pop
or
into
or
cmp
sub
loop
sbb
sarb
cmp
add
mov
in
xor
mov
ss
push
push
jns
cmc
scas
push
jl
push
mov
js
sub
xchg
bound
fcoms
xchg
rorb
in
mov
mov
jns
lock
aas
and
pop
lods
repnz
and
push
jo
cmp
sub
add
mov
imul
fldpi
pop
mov
xor
into
inc
cmc
jle
aaa
loope
js
inc
mov
jo
xchg
push
bnd
mov
cmc
repnz
notl
jl
das
imul
push
jmp
xor
or
add
cwtl
sbb
fldl2e
push
add
std
sub
lods
mov
sarl
loop
mov
sbbl
popf
popf
or
lea
xor
int
mov
nop
mov
cmpsb
aas
cltd
fisttpll
enter
mov
mov
mov
jb
sahf
movsl
pop
fidivrs
inc
lock
das
icebp
movsb
cmpsb
xchg
int
popf
sub
andl
cmp
les
lods
mov
mov
imul
leave
movsb
xchg
push
nop
dec
cmp
adc
popf
lods
cmp
shrl
push
sbb
in
inc
cmp
jle
lcall
fimull
and
mov
and
dec
ljmp
xor
cmp
sub
inc
sub
push
rolb
pop
push
pop
gs
mov
arpl
ss
aaa
xchg
pop
in
and
in
or
mov
pop
push
xchg
mov
ret
pop
cmp
stc
fistpll
inc
cli
adc
lods
mov
and
or
or
mov
mov
jmp
test
js
mov
sub
in
lret
inc
bound
jp
inc
adc
subl
lds
xchg
sbb
mov
sarl
sub
mov
outsb
xor
js
decb
dec
adc
out
notb
or
movsb
and
mov
mov
adc
add
add
inc
push
lahf
or
mov
xlat
mov
dec
in
jp
push
daa
add
shlb
add
push
hlt
jle
lcall
cltd
fs
and
rcr
push
and
pop
iret
cmpsl
push
push
mov
pop
jae
pop
std
fldt
out
ret
sub
jo
cmp
andb
lods
adc
rcll
or
inc
xchg
pop
dec
xchg
jecxz
fucomp
jo
sbb
push
dec
out
inc
mov
xor
mov
cmpsb
jecxz
sub
test
xchg
and
xor
cmp
cmp
push
cmpsl
and
mov
mov
mov
test
mov
outsb
je
scas
js
inc
pop
pop
mov
out
es
jle
mov
mov
nop
xor
mov
mov
jle
jmp
pop
inc
rolb
xchg
repnz
push
fsubl
sub
sbb
push
lock
shlb
mov
cmc
stc
notl
clc
aad
sub
mov
mov
mov
sbb
daa
daa
scas
aad
or
fcmovnu
movl
cmp
test
sub
lcall
stc
or
add
je
fldenv
dec
mov
mov
subb
sbbb
shr
stos
xor
push
push
movsl
repnz
push
or
add
icebp
mov
fimull
push
jmp
arpl
rcll
pop
inc
das
xor
mulb
sbb
mov
mov
xchg
xor
cmp
sbb
je
xor
test
or
adc
lahf
cwtl
push
or
out
jg
mov
sbb
lret
jl
imul
or
scas
ja
sbb
icebp
stos
xor
dec
cmpsl
imul
mov
out
or
stos
ss
out
lea
push
stos
lret
int3
sbbb
clc
jno
push
clc
push
clc
movl
test
in
test
jl
xchg
push
xchg
dec
xlat
push
imulb
dec
into
movsb
movsl
push
xchg
push
dec
cmp
in
xor
push
xchg
xchg
nop
xor
shlb
xor
push
dec
call
stos
pop
cmp
cs
cld
int
mov
mov
out
pop
clc
push
push
push
outsl
cmpsb
inc
cmp
jb
jle
xor
int
add
add
and
xchg
xchg
add
pop
pop
xchg
xor
mov
pop
xor
imul
out
test
sub
cwtl
and
nop
pop
jge
xchg
mov
out
insl
cmpsl
loop
adc
push
dec
int3
cltd
sub
enter
testl
dec
lea
jae
imul
push
xor
mov
stos
stos
aas
notb
pop
mov
pop
cltd
jmp
cwtl
movb
mov
sbb
mov
aaa
icebp
aas
fildll
cmp
or
cmpsb
dec
in
inc
bswap
mov
test
push
sbb
mov
mov
in
sbb
cltd
jae
xchg
pop
aam
in
and
movsb
dec
insl
xor
out
xorb
stc
out
loopne
outsb
insb
nop
pop
sub
loop
jmp
lret
add
call
pop
sar
push
lcall
sbb
cvtdq2ps
xor
lods
jne
inc
xlat
pop
lret
stos
daa
addr16
mov
mov
xor
mov
jecxz
push
dec
test
sub
arpl
inc
sub
xor
ja
cmc
ja
lret
mov
mov
and
repnz
ja
repnz
xlat
mov
or
fsubr
push
in
mov
cld
arpl
adcl
dec
sbb
nop
sbb
add
push
leave
loope
inc
pop
je
sarb
int3
test
mov
js
push
sbb
mov
loop
lret
pop
dec
cs
inc
int
xchg
push
or
mov
fwait
push
call
mull
ret
in
adc
jbe
ret
sub
fldcw
in
xchg
cmp
push
sbb
sahf
rorb
lea
test
inc
cs
dec
pop
popf
movsl
shl
in
dec
fnsave
les
push
aam
mov
push
cltd
mov
out
mov
xchg
or
leave
enter
lret
mov
sbb
mov
inc
int3
dec
lock
lcall
ret
add
stos
dec
and
fsubl
mov
or
xchg
mov
xchg
mov
cmp
pushl
push
sub
xor
mov
push
hlt
xchg
xchg
ss
xchg
insl
pusha
fdivrl
aaa
lds
pop
sub
xor
stc
cld
ljmp
je
push
out
sbb
out
cld
dec
mov
repnz
inc
jmp
call
add
cmp
cmp
out
dec
pop
orl
jg
cmpsl
cmc
cmp
adcl
fsubr
pop
and
in
pop
pop
and
cmp
dec
jno
jo
push
xchg
jnp
jnp
fs
nop
popa
push
xor
iret
rcrl
cld
addr16
mov
inc
push
repnz
cs
dec
sub
nop
sub
mov
out
lods
push
lcall
add
or
scas
pop
outsl
push
jae
inc
push
iret
dec
mov
nop
ss
xchg
mov
popf
cs
lcall
mov
sbb
jl
lods
les
clc
jae
out
adc
inc
mov
movsb
pop
adc
mov
lea
add
ja
loop
je
int3
jne
into
out
imul
stos
mov
cli
jno
xor
imul
sbb
jno
std
lret
popf
or
cmpsb
mov
dec
shll
dec
jecxz
jnp
push
orb
pusha
push
xor
ss
lea
leave
jmp
pop
sub
scas
lcall
leave
rcll
repz
ret
das
jmp
jae
jmp
cmp
test
inc
bnd
loop
cmp
std
pop
rclb
push
divb
cld
push
mov
and
rcrb
jbe
push
sbb
inc
adc
iret
aad
sbb
and
pop
jle
jmp
or
data16
jp
cmpsl
cwtl
fsubrs
movsl
dec
sub
sub
addl
scas
insb
test
shrl
mov
lcall
stos
in
jno
adc
add
in
xor
lods
popa
jecxz
mov
fdivl
push
stc
movsb
imul
xlat
lea
in
lcall
or
das
dec
sbb
aam
xchg
aas
jbe
inc
inc
std
and
mov
pop
test
push
sarl
ret
scas
mov
out
push
scas
out
imul
adc
ja
xchg
leave
xchg
dec
sti
sub
repnz
lret
pop
or
dec
cmp
sbb
mov
jb
imul
push
dec
adc
jns
inc
mov
out
jmp
hlt
scas
iret
pop
loopne
or
sub
mov
jns
shll
lret
jp
outsb
add
push
jnp
add
jg
cmp
dec
add
jno
popa
cmp
push
pop
int
sarb
push
sub
js
je
aad
ds
scas
xlat
sub
jecxz
xor
jae
jbe
pop
sbb
xchg
call
mov
shlb
data16
lret
fiadds
inc
int
aam
dec
js
inc
loop
xchg
repnz
jae
inc
cmp
mov
test
add
or
push
adc
cmp
repz
adc
mov
and
scas
mov
inc
cld
cltd
dec
sub
sti
xchg
call
mov
jl
shrl
fdiv
ret
sbb
pop
out
stos
jnp
and
mov
push
mov
decl
xor
xor
mov
mov
add
cmp
push
pcmpgtd
data16
xchg
inc
clc
bound
icebp
push
adc
mov
and
fwait
pop
punpckhdq
mov
call
mov
data16
sbb
pop
mov
movsl
jo
pushf
adcl
test
dec
jge
in
pop
dec
dec
pop
stos
xchg
popa
test
jns
call
sbb
nop
bound
movsl
sbb
pop
jle
test
mov
mov
in
jne,pn
or
cmp
add
jo
xchg
out
xchg
insl
xchg
dec
mov
daa
lret
push
pusha
push
inc
stos
test
in
dec
jb
insb
shrl
push
mov
jne
add
cmpsl
mov
and
sbb
movsb
xchg
push
inc
lods
dec
jbe
jmp
mov
roll
sub
cmpsb
popa
xorl
es
bound
dec
icebp
data16
jmp
mov
and
sub
xchg
les
xchg
inc
fldcw
test
outsb
repz
imul
es
xor
xchg
aas
lock
test
scas
or
dec
in
mov
je
shr
sbb
jbe
push
insl
add
adc
or
ret
ds
pop
mov
lods
mov
shlb
loope
nop
mov
lods
sbb
vmovlps
mov
xchg
inc
and
cld
es
mov
mov
in
mov
repnz
fimuls
jno
clc
or
int3
cmc
ja
aad
mov
push
cmp
jnp
lods
mov
jp
stos
jg
out
xor
andps
sbb
and
mov
push
rcll
outsb
dec
lret
pop
mov
enter
mov
sbb
inc
mov
leave
scas
insl
test
adc
push
mov
aas
jecxz
mov
out
jg
push
lea
xor
sub
mov
mov
insb
push
pop
sub
int3
imul
js
or
sbb
enter
ret
enter
inc
pop
imul
mov
in
add
cmp
pop
iret
jae
push
in
leave
cmp
icebp
repz
lret
cwtl
cmp
cmp
dec
mov
dec
push
jb
sub
mov
adc
add
shr
lcallw
leave
add
push
adc
adcb
fabs
mov
cmp
fisubrl
pop
stos
popa
hlt
xorl
rolb
xchg
js
push
xchg
mov
test
add
push
jl
les
sbb
out
fidivl
inc
jbe
icebp
out
push
gs
inc
sub
clc
shlb
sarl
out
nop
in
cmp
lods
std
lods
mov
jge
in
add
aas
movsb
fstp
pop
dec
jnp
xchg
xor
clc
xchg
neg
push
xchg
into
movsl
or
out
or
cmp
dec
stos
hlt
pop
push
xor
xor
flds
adc
jno
stos
popf
xorl
in
xchg
mov
int3
cmp
fldt
push
adc
add
inc
fidivrs
daa
stc
pop
adc
lods
or
lds
fwait
jecxz
test
imul
repz
mov
data16
push
fistl
cmp
insl
scas
das
js
xor
pop
jns
mov
sti
adc
rcrb
fisubl
cmp
sub
int
fidivl
out
xor
movsb
lret
jno
jmp
adc
nop
jg
pop
cli
push
les
mov
adc
mov
mov
subb
jns
dec
jnp
scas
dec
add
push
inc
xchg
aas
sbb
inc
or
hlt
arpl
fsubs
loop
mov
das
icebp
xchg
mov
sub
out
mov
rorb
mov
dec
je
subl
mov
jno
rolb
ds
xchg
ds
fmuls
mov
push
mov
jbe
sub
push
std
fs
lods
jl
int3
xchg
cltd
and
inc
das
push
addr16
adc
lcall
stc
push
xchg
xchg
mov
fsubs
or
loop
pop
lret
dec
ret
dec
cs
std
xor
and
mov
mov
notb
ds
mov
icebp
pop
add
add
sahf
pop
jnp
shlb
mov
mov
addl
repz
xlat
cmpsb
rcrb
dec
call
rcr
sbb
jbe
mov
faddl
push
jmp
push
shll
adc
lcall
xchg
leave
int3
push
or
scas
pop
mov
xchg
lods
inc
movsb
sbb
mov
mov
gs
ffree
pop
add
les
jo
sub
outsb
lret
inc
dec
aas
outsl
ret
push
ja
sub
push
retw
fisttpl
jg
dec
mov
push
or
iret
mov
or
adc
xchg
mov
ja
push
xchg
das
dec
mov
cmp
dec
jno
xor
lea
inc
jge
stc
or
sub
pop
sahf
mov
jns
popf
out
xor
xor
test
mov
fs
lods
push
pop
mov
mov
adc
add
mov
sti
mov
adc
pop
cld
or
lahf
nop
ret
add
insl
inc
cli
call
or
loopne
sub
stos
insb
shrd
sub
iret
in
pop
or
mov
test
movsl
gs
jge
dec
stos
cmp
cmp
sub
mov
inc
fisttpl
push
popa
xor
push
insl
cmpsb
xor
stos
jmp
mov
cmpb
jl
push
inc
imul
lods
pop
cmp
mov
sub
add
mov
mov
test
or
out
xchg
in
sbb
push
jns
cmpsl
enter
in
lret
mov
xchg
mov
mul
aaa
add
xor
cmp
lcall
out
pop
fistpll
decb
dec
or
shl
mov
adc
mov
adc
mov
push
out
push
jp
daa
stc
test
dec
dec
jp
cmc
add
jns
xchg
sub
nop
sub
or
cmp
jne
aaa
cmp
jmp
mov
scas
lret
outsl
xchg
aas
shll
or
es
xchg
cmp
hlt
xchg
dec
jge
shl
mull
mov
cmpb
and
dec
out
adc
push
xchg
push
lcall
jne
mov
hlt
mov
pop
scas
les
push
testl
xchg
fs
imul
cld
xchg
fistps
into
sub
dec
dec
push
aas
jl
cmp
sub
sub
push
jg
pop
cmpsl
jne
inc
test
jmp
lahf
xor
push
sub
fcmovnbe
sub
mov
addr16
and
push
scas
sbb
sub
ljmp
popa
fsubrs
movsl
dec
lods
xchg
bound
xchg
mov
addr16
jp
outsb
js
pop
jp
rcll
and
mov
mov
dec
fldcw
inc
outsb
xorl
dec
loop
cmpsb
ljmp
aaa
call
adc
mov
scas
cwtl
lods
orl
cmp
lret
stos
leave
stos
push
jns
adcb
nop
out
pusha
divl
sub
mov
xlat
sbb
es
mov
xor
lods
cwtl
mov
jg
and
lods
xchg
cs
mov
leave
sbb
mov
out
inc
sbb
int
popa
icebp
out
mov
sbb
xor
push
or
fwait
jae
fs
clc
in
sbb
daa
sub
cmp
sbb
into
dec
inc
or
cmp
pop
mov
or
scas
add
mov
adc
je
ss
daa
push
in
cli
dec
jns
inc
push
cli
jmp
pop
in
jo
aam
push
out
cld
xor
movsl
xchg
pusha
jge
aas
mov
mov
cli
or
add
cmp
int
bound
lock
push
push
or
dec
mov
sahf
movsb
loopne
lret
cltd
mov
sahf
test
xor
jns
imul
push
jmp
popf
lods
pop
xor
ljmp
fwait
pop
insb
cmp
sub
jmp
fcmove
mov
fmulp
adc
push
dec
clc
jge
imul
pop
sub
cld
test
inc
dec
stos
or
hlt
jle
addr16
and
nop
lret
arpl
jle
mov
mov
add
push
cmpsb
out
out
or
out
dec
or
push
or
pop
adc
cmp
jb
add
jl
add
hlt
dec
jle
inc
nop
jge,pt
leave
neg
jbe
pop
adc
or
js
insl
cmp
cmp
add
cwtl
push
jge
fs
jnp
nop
jge
andl
das
adc
and
mov
add
push
fmuls
aam
flds
add
push
int3
nop
push
xor
jae
and
clc
mov
out
ret
ret
ja
mov
jecxz
jae
push
or
dec
pop
scas
hlt
xchg
std
pop
pop
mov
inc
push
cltd
int3
out
and
loopne
mov
sbb
xchg
sar
daa
insb
insl
and
xlat
jmp
lds
icebp
cmp
aad
inc
aaa
xor
mov
or
jmp
and
div
mov
fdiv
imul
pop
ds
js
iret
in
xchg
aam
mov
push
mov
fwait
movsl
push
rcll
sub
popa
leave
mov
fsubp
jno
mov
sbb
pop
push
lret
test
daa
mov
cli
decl
gs
popa
cmp
sbb
xchg
cld
and
js
adc
mov
push
inc
cld
mov
scas
out
or
cltd
loopne
mov
xor
rcrb
jnp
jo
cmp
xchg
sbb
lods
xchg
sub
ds
aas
inc
push
jecxz
imul
jnp
mov
mov
adc
mov
aam
movsl
adc
aad
sbb
adc
nop
xor
xor
sbb
int
inc
es
leave
test
mov
cmpsb
stos
inc
int
cld
and
pop
inc
jl
push
pop
and
xor
les
lods
push
inc
ss
insb
inc
ret
inc
aas
out
addl
hlt
jl
mov
push
cltd
or
jne
mov
add
rol
mov
aad
mov
sub
int
or
mov
xor
outsb
inc
outsb
fsubrs
rorb
pop
dec
sar
and
cli
push
inc
or
pop
mov
mov
aas
jbe
mov
mov
out
lods
or
mov
jle
pop
sti
xor
mov
aas
lea
jnp
js
js
fidivrl
cmpsl
ficoms
pop
and
jns
push
lahf
add
mov
in
mov
in
xchg
inc
stc
mov
add
je
jno
arpl
add
push
data16
xchg
jns
mov
adcl
loope
pop
mov
lods
jns
push
sub
inc
aas
sbb
cmp
pop
inc
lods
imul
shll
pop
insb
or
mov
sbbb
into
or
shlb
fcomps
and
ror
sbb
mov
mov
jle
insl
loope
cmp
adc
xor
jg
js
lds
ljmp
sbb
xchg
test
pop
dec
lcall
xor
orl
push
int
sub
add
cld
popf
add
mov
add
jl
mov
mov
push
adc
push
fwait
out
inc
int
xchg
sbb
add
inc
dec
xor
sub
fbstp
js
xlat
mov
aad
shl
sub
mov
xor
je
add
jg
movzbl
movsl
flds
cmpsl
xchg
push
xor
pop
notl
pop
rcrb
imul
repz
add
arpl
leave
std
inc
or
jb
movsb
ret
sub
add
imul
push
fsincos
out
or
sti
outsb
lods
push
inc
cld
xchg
xor
enter
lods
repz
ret
mov
mov
dec
mov
mov
jle
and
xor
sbb
imul
test
fsubl
jmp
fcoml
mov
aas
sub
jecxz
pop
pop
fs
in
ljmp
sti
mov
fldcw
push
ds
enter
aaa
push
fisubrs
xor
stos
cmp
or
dec
rcrb
in
test
xchg
enter
or
roll
jae
pop
sub
cmp
fistl
negb
fs
mov
loope
hlt
stos
inc
cwtl
icebp
cmp
mov
addr16
decl
aaa
sub
pop
loopne
pop
cmp
pop
jle
js
sbb
jecxz
and
pop
ja
stos
or
in
int
cmpsb
xlat
sub
jne
mov
ljmp
loopne
push
arpl
add
xchg
cmpsb
sti
loope
mov
lock
pop
push
dec
sub
pop
push
pop
call
int
insb
das
fidivrs
lods
sub
jle
js
js
sub
adc
pop
dec
adc
out
pusha
mov
adcl
dec
mov
mov
mov
pop
into
test
std
dec
push
mov
pushf
jno
lret
push
filds
push
pop
pop
js
addb
sbb
and
imul
jle
lret
jmp
cmovg
loope
roll
mov
pushf
pop
fisubs
rcll
adc
mov
and
outsl
daa
jbe
sbbl
mov
addb
clc
pop
xchg
repnz
xchg
sub
fwait
jmp
pushf
cwtl
dec
dec
xchg
mov
mov
aaa
push
addb
cmp
enter
sub
push
mov
and
jg
aad
inc
adc
mov
push
enter
sarb
jmp
das
incl
leave
insl
out
repnz
scas
je
decl
lea
xor
jp
arpl
ret
loopne
mov
cwtl
out
popa
mov
dec
jnp
inc
out
ror
scas
out
adc
mov
jmp
dec
mov
mov
xchg
int3
mov
fcmovnu
je
lock
mov
mov
or
xchg
outsb
sub
dec
clc
and
pushf
push
pop
popa
std
lods
mov
inc
dec
pop
notl
imul
ret
sub
pop
lret
jno
mov
adc
add
clc
pop
fucom
add
mov
mov
iret
push
movsl
dec
jno
dec
and
fidivs
popf
aam
negl
adc
mov
cmp
out
mov
adc
rcll
mov
loop
test
into
loope
jb
stos
mov
pop
mov
movsb
xor
sbb
mov
sbb
xchg
outsb
adc
or
loop
test
adc
pop
jp
mov
pop
and
dec
jne
test
jbe
jnp
cmp
sbbl
shlb
mov
iret
das
dec
outsb
cmp
mov
pop
push
cmp
jecxz
mov
cmp
loope
mov
mov
xchg
and
xor
out
loop
pusha
test
loopne
cltd
std
mov
inc
nop
imul
loop
clc
adc
pop
cmc
sahf
lds
mov
cwtl
pop
imul
addr16
add
lds
jl
pop
xchg
mov
fld1
adc
mov
shll
dec
xor
jo
pop
xor
push
sub
dec
dec
daa
mov
pushf
ds
in
pushl
clc
mov
sbb
pop
inc
jmp
sbb
and
inc
jae
ljmp
sbb
sbb
sbbb
and
lcall
hlt
lret
push
imul
fcoml
add
jp
pop
push
ret
sub
into
xor
sbbl
add
pop
pop
jge
jmp
add
add
or
mov
jae
test
cmp
push
pop
test
fisttpl
int3
push
dec
xor
cmp
leave
xorl
or
xor
adc
outsb
test
test
ret
inc
jae
cmpsl
out
push
inc
add
jmp
sarl
inc
movsb
adc
or
les
dec
lahf
jge
test
movb
gs
push
out
les
jp
xor
cmp
frstor
mov
dec
adc
movsb
xor
cmpsb
push
imul
dec
arpl
inc
sub
adc
aaa
mov
push
test
repnz
xchg
in
loopne
gs
lret
rcrb
daa
mov
mov
mov
mov
dec
pop
aam
or
int3
dec
lds
adc
push
jg
xchg
std
stos
mov
jmp
int
push
push
inc
insl
daa
xchg
push
mov
jmp
movsl
lea
pushf
jbe
rcrl
push
or
mov
cli
andb
imul
jae
or
lret
cli
mov
out
dec
dec
xchg
sbb
mov
push
sbb
push
icebp
rol
push
addr16
lahf
mov
aam
fdiv
or
jge
lret
cli
in
jns
push
xlat
mov
lock
cmc
fisubrl
scas
add
cli
adc
and
std
cmp
jbe
mov
mov
and
inc
pusha
dec
pop
and
movsl
mov
dec
or
or
inc
pop
push
xor
pop
pushf
addr16
dec
andb
subl
and
mov
scas
or
jne
dec
into
dec
push
dec
hlt
inc
pop
hlt
pop
out
inc
xorb
arpl
xchg
nopl
cmp
pop
scas
std
mov
lock
and
adc
js
adcl
xor
pop
dec
mov
je
test
and
pop
mov
sub
push
lcall
mov
mov
lods
push
into
repnz
mov
inc
shll
in
mov
pop
sub
outsb
nop
jno
xchg
popa
sbb
ja
fldl
stos
mov
pop
sub
data16
lret
sbb
and
xchg
pop
adc
dec
mov
mov
stos
ret
pop
addr16
data16
jp
dec
stos
jle
lods
clc
movsb
lahf
imul
push
jp
ret
sbb
stos
push
aam
xor
lcall
mov
fmul
xchg
or
push
iret
movsb
stos
aam
mov
call
rorb
dec
lods
adc
decl
xor
repz
or
dec
cwtl
stos
jecxz
repnz
les
sarl
pop
mov
push
dec
fbstp
jp
mov
xchg
cmp
cmpsl
ds
stos
push
push
ljmp
push
mov
fimuls
aas
fs
mov
jge
mov
mov
cmpsl
movsb
inc
jmp
inc
movsl
pop
add
mov
test
push
imul
pop
or
daa
pop
inc
mov
mov
out
or
cltd
int3
mov
push
cmp
sbb
in
icebp
cmpsb
popf
jg
mov
bound
fmuls
lret
xchg
mov
movsb
scas
test
or
or
cld
sbb
xor
push
pushf
notb
sbb
xor
in
mov
xor
rorl
pop
pop
leave
and
aad
popa
jae,pn
fimull
daa
daa
test
gs
test
jo
loopne
xlat
dec
out
inc
push
sub
jp
pop
xor
out
fstpl
mov
pop
clc
dec
inc
mulb
mov
lods
pop
jbe
pop
and
test
cmp
xor
rorl
dec
flds
fisttps
push
jnp
or
add
adc
bound
adc
jo
stos
add
cli
xchg
ret
xchg
cld
in
sub
or
pushl
lea
rorb
ret
or
shl
iret
xchg
movsb
fs
aam
divb
pop
xlat
pop
push
test
imul
inc
rclb
and
aad
push
fld
pop
push
loop
divb
xor
inc
imul
loope
dec
mov
add
mul
mov
out
pop
stc
xor
push
and
and
add
jmp
mov
stos
and
and
push
push
lods
jo
mov
loop
mov
mov
push
shlb
ljmp
pop
jb
sub
idivb
gs
imul
dec
cmp
fs
dec
sarl
mov
push
mov
subb
xchg
ret
inc
inc
clc
mov
out
idivb
daa
mov
pop
add
subb
sti
mov
icebp
mov
sub
push
push
inc
fldl
test
add
sbbb
mov
testb
ds
hlt
cld
cli
push
push
cmp
cmp
cmp
mov
pop
adc
bnd
jnp
cmp
sub
cmpsb
fistpl
and
sub
sub
mov
xor
repz
dec
cmc
lods
int3
add
xor
dec
fnstenv
call
sub
fwait
inc
popf
mov
inc
imul
lock
rdmsr
push
lea
mov
ja
mov
addl
in
cld
and
push
mov
aaa
ret
es
ja
push
adc
lcall
dec
arpl
scas
shrl
pop
pop
pushl
bound
cmp
mov
push
ds
pop
inc
into
cmpsl
xchg
sbb
ror
or
rcll
mov
neg
jmp
ljmp
jne
pop
push
sub
in
adc
add
push
sub
iret
xchg
iret
lahf
xchg
xchg
mov
push
aam
mov
xchg
mov
insl
fs
les
pushf
lock
xchg
loop
sbb
mov
fwait
mov
or
ss
sub
ror
cmc
add
sbb
cmp
and
jbe
pop
ljmp
mov
jp,pt
jns
cmp
mov
or
cmpsb
aam
test
ss
mov
push
mov
jnp
call
mov
divl
mov
inc
jb
jl
cmovne
push
lret
sub
out
add
not
popf
jecxz
negb
subb
xor
aad
ja
pusha
cmp
into
addr16
xchg
stc
int
add
push
test
push
nop
hlt
dec
xchg
test
test
mov
add
clc
cltd
push
cli
mov
rol
aaa
jg
hlt
lods
stos
enter
loopne
xchg
pusha
inc
cmp
movsl
and
hlt
sub
lret
jno
xchg
fistpl
iret
xchg
ds
popa
xchg
sbb
insb
fmulp
cmp
fwait
adc
mov
divl
xor
cld
add
mov
xor
out
sub
mov
pop
inc
mov
test
mov
dec
fiaddl
mov
push
movb
hlt
ljmp
pop
subl
inc
jae
scas
xchg
cmp
jp
sub
test
outsb
aam
fs
test
pop
ret
sub
test
xor
roll
push
and
jne
fwait
xor
sub
sahf
mov
std
ds
icebp
adcb
xor
adc
loopne
std
push
loope
mov
sub
mov
gs
aaa
mov
pop
nop
jmp
cltd
cmp
mov
lods
jbe
xchg
stos
or
lea
daa
hlt
es
mov
push
xor
mov
test
push
jg
call
push
and
divb
mov
cmp
dec
out
hlt
mov
push
sub
inc
fsubrl
xchg
inc
or
adc
push
fldenv
aas
push
and
movsl
pop
add
mov
shrb
or
roll
int3
jbe
pop
sar
test
lods
out
dec
sahf
lock
jp
or
insb
xor
and
or
push
bound
test
mov
mov
sub
sub
dec
dec
insl
adc
adc
cmpsb
sub
sarb
push
cwtl
and
in
jle
xor
or
call
sti
pop
setno
movsb
cwtl
outsl
add
mov
int3
dec
mov
adc
add
sub
ds
lods
jo
imul
and
fs
xor
sbb
mov
adc
inc
and
add
es
pop
ds
icebp
push
sub
pop
lds
adc
in
lret
movsl
hlt
jp
and
pop
inc
out
scas
inc
jmp
test
pop
pop
and
sbb
pop
and
fsqrt
push
rorl
fsubs
push
sarb
push
push
jns
adc
inc
push
pop
sbb
out
push
dec
dec
addr16
add
add
out
or
jg
pushf
push
mov
mov
mov
loop
xchg
mov
jbe
cmc
mov
imul
sub
std
mov
imul
incb
imul
add
jbe
cmc
sub
test
ljmp
sbb
gs
xchg
bound
push
push
dec
sub
decl
or
push
call
faddl
mov
xchg
das
dec
fwait
and
inc
cld
adc
in
sarb
inc
xor
mov
sbb
aaa
enter
pop
inc
or
iret
sub
popf
fildll
data16
inc
nop
push
ljmp
sbb
sub
mov
xchg
movb
dec
jl
sub
movsb
iret
daa
fwait
push
outsb
call
and
daa
inc
push
subb
push
in
jle
xchg
xchg
es
mov
rcll
popa
vcvtsd2ss
adc
pop
sahf
stos
lahf
push
movb
cwtl
mov
cmp
loope
push
call
xlat
mov
add
shr
push
mov
push
pop
in
sbb
es
scas
std
jg
and
inc
popf
sar
push
addr16
xchg
push
and
fwait
lds
ja
adc
popf
rol
sub
pop
out
add
jae
jb
insl
mov
mov
ljmp
add
movsl
mov
fisttpl
lock
jmp
inc
shl
and
hlt
ljmp
mov
sub
cmpsl
pop
movsl
mov
enter
mov
ret
sbb
bound
loope
and
subps
sub
adc
test
push
and
jmp
cmp
cmpsb
mov
loopne
and
xor
stc
pop
fldl
mov
xchg
add
or
add
test
xor
ljmp
mov
sub
aaa
inc
inc
cmp
push
addr16
shlb
sbb
adc
pop
fadds
stos
in
call
test
cmp
imul
roll
sub
mov
cmp
dec
scas
cs
mov
movsl
jle
xor
dec
loop
out
insl
out
lods
dec
test
std
mov
lock
div
sub
adc
sbb
sub
xor
dec
in
xlat
jo
stos
imul
push
imul
lea
adc
mov
movsl
in
add
inc
dec
push
xchg
pop
add
xchg
insl
bound
jno
outsl
dec
cmp
loop
push
inc
push
and
das
movsb
out
sbb
jmp
sbb
sbb
push
xchg
inc
adc
andl
add
lea
or
repz
mov
imul
lret
lret
hlt
iret
push
psrlw
addr16
dec
scas
jg
jne
clc
nop
es
mov
dec
sub
and
ja
lods
mov
mov
inc
jns
cmp
add
mov
lods
adcl
adc
mov
clc
movsb
fs
fidivrl
sbb
mov
iret
in
push
push
cli
xor
idivb
lret
sbb
ror
jg
stos
cli
mov
sub
pop
or
mov
outsl
jae
push
xchg
jle,pn
scas
loopne
mov
ret
push
lahf
ret
add
insl
or
jb
mov
add
repz
fcmovu
lahf
orb
or
cmp
adc
push
cli
dec
aas
int
mov
mov
pop
lahf
push
adc
fcoms
xor
xorl
push
clc
adcl
notl
cmp
stc
ljmp
fistpl
or
faddl
cmp
scas
imul
mov
jp
sub
mov
sub
mov
inc
std
jae
push
ret
ljmp
ret
pop
xchg
cmp
xchg
xchg
inc
pop
sbb
scas
mov
sbb
xchg
aad
mov
xor
in
cwtl
pushf
pusha
out
inc
lcall
or
or
and
aam
mov
add
std
add
mov
sub
addr16
mov
mov
icebp
xor
out
je
in
xlat
or
sub
sbb
int
push
imul
cmp
cmp
inc
movb
insb
int3
push
pusha
add
inc
add
xorl
loope
popa
adc
xor
cmc
xchg
xchg
xlat
lea
stos
mov
cli
adc
leave
push
sub
test
std
pop
pop
je
pop
into
xchg
pop
enter
sbbl
pop
or
xchg
icebp
sti
and
and
pop
mov
pop
push
jae
sub
int3
es
jge
cs
in
fistps
stos
mov
js
jne
and
sbbb
push
cmpsl
dec
aad
dec
mov
adc
and
fisttpl
cmpsl
push
jl
jo
outsb
fidivrl
enter
sbb
sbb
std
f2xm1
dec
sub
imul
push
xchg
add
adc
mov
mov
xchg
adc
aas
push
insl
dec
ss
and
dec
inc
or
nop
mov
arpl
addr16
push
push
enter
inc
mov
cmp
and
cmp
dec
inc
mov
mov
mov
pop
cmpsl
cmp
mov
adc
sbb
stos
xor
mov
xchg
clc
pop
xor
xchg
in
mov
xor
fsts
sbb
and
pop
inc
insb
outsb
iret
cmp
pop
xor
test
out
dec
cld
add
mov
mov
push
xchg
xchg
mov
jo
and
sub
inc
push
mov
pop
sub
push
rcrb
mov
mov
pop
cmp
iretw
dec
mov
imul
inc
cli
outsb
scas
push
add
imul
push
adc
xchg
pushf
and
jbe
push
push
lock
mov
xor
stc
fcomps
mov
into
repnz
ss
aam
stos
fmull
sahf
repnz
popf
stos
mov
arpl
lahf
push
add
loope
pop
mov
mov
mov
or
lods
outsb
cwtl
shll
dec
dec
andb
cmpsb
push
and
cmp
ror
lock
mov
xor
lods
cli
dec
adc
jbe
xchg
scas
push
add
add
push
lods
out
cmpsl
fwait
sub
outsl
mov
jo
jge
dec
xchg
jmp
in
mov
cmpsb
push
fadds
push
adc
dec
mov
jmp
mov
jnp
nop
xchg
mov
cmp
into
fnsave
add
and
cmpl
ss
cld
ljmp
fidivrl
or
mov
lods
out
pop
mov
into
scas
movb
add
or
mov
movsb
filds
bound
popa
pop
scas
mov
add
aad
bound
mov
rorb
lea
mov
adc
jge
jnp
push
adc
add
xchg
mov
sbb
dec
movsb
pop
loopne
mulb
xor
jnp
mov
xor
mov
test
jae
pop
jo
popa
sbb
inc
sub
xchg
out
aaa
inc
pop
popa
hlt
lds
inc
xor
scas
mov
xchg
lock
roll
jp
pop
shlb
fs
out
mov
sbb
mov
call
test
clc
je
scas
repz
xor
dec
push
xchg
cs
lea
pop
push
push
lea
nop
test
push
mov
out
xor
push
push
ljmp
xchg
xor
or
cmpsl
mov
ret
bound
mov
sbb
lods
mov
sbb
idivb
stos
pop
fildl
xor
sub
mov
push
jo
int
jno
push
dec
sbb
sbb
dec
lret
rcrb
mov
aam
lcall
adc
lahf
repnz
mov
inc
inc
cmp
cmp
push
add
sub
fcoml
movsl
and
subb
sbbb
les
into
into
test
call
and
xor
sub
xor
or
lock
filds
xchg
dec
fadds
jmp
lods
jp
lea
les
push
aas
and
pop
dec
aad
jo
mov
jb
call
add
es
and
xchg
cs
aad
mov
jg
shl
push
out
push
xor
xor
inc
out
mov
adc
inc
dec
pop
push
mov
inc
and
fadd
dec
pushf
ficompl
xchg
sub
jg
jmp
movsb
sub
ja
in
mov
test
pop
mov
inc
add
outsb
fistpll
jb
xchg
pop
cmp
add
adc
xor
push
xor
add
cmp
loopne
arpl
lds
dec
rdtsc
jb
into
xor
insl
inc
std
fbstp
pop
push
ret
jo
in
setae
pop
push
iret
add
dec
mov
in
insb
fcmovne
rcll
mov
pop
leave
ljmp
js
dec
xor
xor
pop
fs
sarl
sbb
aad
pop
int
lds
xchg
je
xor
xchg
xchg
push
lcall
and
stc
ret
sub
inc
cmpsb
sub
cmpsb
jecxz
sbb
into
test
int3
xlat
jne
mov
test
fidivrl
dec
addr16
inc
cmp
fnsave
inc
pop
repz
stos
sti
and
xchg
stc
dec
popf
mov
lcall
jmp
sub
jecxz
mov
leave
jae
das
ret
xchg
and
sbb
imul
loopne
jno
aad
mov
out
nop
sar
mov
jp
repnz
jae
rcr
leave
mov
loope
js
cmp
lret
out
fmuls
sbbb
mov
shl
in
aas
cmp
dec
pop
sub
mov
js
ret
and
adc
xchg
jns
adc
std
imul
pop
pop
js
movsb
mov
pop
cmpsl
in
push
and
sti
enter
push
test
rcrl
mov
stos
or
imul
outsb
fistpll
cld
dec
sbb
mov
sub
mov
xchg
cmp
pop
jp
cmpsb
testb
lea
cld
xchg
addb
shlb
and
imul
or
pushf
test
jg
shrb
push
iret
test
inc
sbb
inc
dec
mov
sar
adc
mov
ret
xor
jne
movsb
imul
dec
sbb
push
shr
insb
adcl
in
imul
clc
inc
std
inc
test
mov
lea
mov
jle
xchg
mov
stos
cmp
cwtl
or
sub
xor
fwait
mov
sbb
mov
mov
stc
lcall
sub
daa
pop
ss
ret
and
iret
xchg
pushf
sbb
dec
stc
cs
mov
mov
xchg
mov
in
sub
test
adc
daa
aam
cmpsb
out
test
out
lock
adc
test
stc
mov
push
testb
aas
call
or
dec
andb
dec
pop
xorb
mov
push
xchg
push
enter
scas
jae
pop
push
jl
jbe
insb
jge
std
inc
jnp
sbb
adc
xchg
clc
rcl
outsb
std
mov
dec
cmp
mov
add
mov
cmpsl
adc
lds
push
and
mov
outsl
lcall
pop
mov
mov
inc
xchg
cs
ljmp
nop
jp
fcoms
aaa
pop
push
insb
push
fdivrs
xchg
std
or
mov
dec
pusha
fcomps
mov
xor
imul
xchg
in
mov
rcrl
jge
pop
xor
mov
clc
mov
xor
push
mov
in
test
cmpsl
loope
fmuls
pop
scas
mov
js
mov
sbb
push
adc
call
sub
mov
mov
jo
dec
xchg
sub
add
sbb
mov
mov
lods
cmp
fs
mov
scas
inc
lret
pushf
inc
push
outsb
sub
jg
dec
push
mov
lahf
movsl
das
mov
ficoml
addr16
frstor
cmpsl
xchg
mov
sbb
lahf
add
xchg
daa
push
and
sub
ja
into
xchg
out
in
int3
adc
out
in
dec
push
mov
aad
fsub
mov
mov
add
femms
ss
out
out
lds
js
shll
pop
jmp
subb
xchg
inc
js
jns
and
data16
sub
jns
in
mov
aaa
adc
sbb
out
mov
xchg
push
mov
stos
cmp
in
out
outsb
mov
pop
pop
aam
cmp
push
lds
jle
fcom
mov
scas
sti
int3
dec
mov
lret
popa
sbb
mov
sub
jmp
mov
mov
fisubrl
repnz
lret
lret
add
sub
cmpb
fwait
dec
mov
lret
shrb
rcll
mov
mov
jp
int
mov
mov
xchg
push
decl
in
inc
ljmp
enter
loope
mov
pop
pop
mov
and
rcr
mov
xor
cltd
rclb
or
insb
and
push
insb
nop
mov
sub
or
dec
daa
ja
clc
jae
dec
mov
add
fnsave
adc
arpl
pop
jle
enter
hlt
sbb
in
cmpb
int3
or
cmp
lea
add
jnp
adc
sbb
cli
jmp
popa
fisubrl
imul
and
push
data16
dec
out
stc
repz
mov
sbb
xchg
sahf
aam
orb
xchg
loop
movsb
xor
shrb
push
jbe
sub
xchg
adc
adc
stc
sub
dec
stos
adc
sti
ds
cs
mov
pop
ja
dec
xchg
lcall
mov
sub
mov
pop
sarb
dec
push
cmpsl
push
inc
sbb
pop
xchg
leave
adc
push
xor
test
mov
mov
cmp
and
pop
scas
cmp
fidivrl
and
xchg
shrb
or
fiadds
mov
test
mov
imul
scas
pop
inc
jae
lock
mov
aaa
lret
jne
mov
lock
insl
mov
jmp
in
jle
xchg
mov
inc
std
daa
jns
mov
push
add
das
inc
sub
sub
cmpsb
outsb
mov
loop
jmp
adc
or
cmp
clc
loope
hlt
lret
in
fisubrs
xchg
or
xor
pop
push
out
outsb
sub
xchg
jp
outsb
sub
aam
jno
fwait
push
mov
xor
fwait
daa
or
and
or
xor
adc
lock
lret
mov
into
dec
mov
xchg
mov
dec
sbb
cmp
jns
loope
xchg
out
aam
pop
inc
xchg
mov
jmp
pusha
fwait
shl
dec
mov
inc
jecxz
fistps
sarb
shr
pop
sets
jo
inc
mov
divl
sub
mov
sub
pop
jmp
add
test
mov
jge
dec
aam
jle
pop
inc
scas
xor
lcall
xchg
and
loop
or
roll
movb
xchg
push
lods
cli
mov
or
test
inc
sub
or
and
or
add
inc
sub
arpl
ret
in
arpl
pushf
add
int
fcompl
testb
adc
dec
xor
enter
ljmp
mov
int
jmp
pop
sub
dec
xchg
mov
inc
cmpsl
icebp
das
js
and
les
mov
shll
lods
mov
fldl
ficomps
sbbb
sub
das
and
ss
or
outsb
sbb
test
dec
std
adcl
push
xorb
sub
loope
andb
inc
ljmp
out
fwait
shrb
mov
jmp
in
hlt
icebp
outsb
dec
sbb
mov
in
jmp
testb
push
and
ljmp
insl
in
addr16
adc
and
add
imulb
pop
cmp
pop
cltd
leave
sbb
xor
test
iret
jl
int3
test
int
call
mov
outsl
out
aam
inc
lcall
jne
jns
das
inc
sti
add
mov
adc
xor
mov
mov
cmpsb
pop
mov
add
cld
jecxz
fldlg2
lahf
out
icebp
pushf
adc
inc
inc
mov
in
sbb
pop
sub
bound
out
fwait
adc
adc
test
lcall
cltd
xlat
dec
cltd
push
repnz
sbb
in
mov
add
adc
push
hlt
cwtl
pop
mov
adc
lods
lds
and
lods
insl
sbb
xor
pushf
dec
pop
jne
mov
psrad
cmp
adc
cmpsb
ss
sub
pop
xchg
pop
mov
dec
in
cltd
mov
or
sbb
cmp
and
xchg
lcall
bound
lods
and
push
ds
lahf
jb
fidivs
mov
xchg
mov
cs
push
hlt
pop
dec
fdivl
sbb
and
movsl
mov
into
push
aas
push
cmpsl
fsubrs
mov
mov
cmpsl
sbb
mov
cmp
sub
or
fwait
jo
arpl
mov
inc
adc
aas
sub
daa
jp
mov
mov
and
inc
imul
mov
lret
lods
pop
add
pop
inc
jl
xlat
dec
adc
mov
dec
lods
dec
aad
mov
mov
add
xlat
dec
xchg
sub
lea
insb
mov
xchg
or
push
add
or
leave
cmpsb
fists
sub
negb
les
push
inc
adc
pop
stc
cltd
in
cmp
mov
xor
inc
ret
out
aaa
xchg
mov
mov
jmp
and
int
xchg
add
mov
sbb
movsl
test
aas
paddb
iret
lods
nop
std
dec
xor
inc
into
hlt
inc
cmpsl
mov
xchg
sub
xchg
mov
in
mov
add
mov
aas
andb
cmp
sbb
pop
and
fisubs
xor
lret
arpl
cmc
rcrl
mov
push
sbb
int3
xchg
sti
addl
dec
push
dec
sti
pop
inc
dec
and
push
xor
adc
mov
cmovl
aad
inc
adc
push
pop
jl
pop
fwait
pop
pop
mov
test
dec
mov
jnp
shlb
inc
pop
dec
js
aaa
test
cmc
or
mov
movsb
adcb
stos
adc
pushf
clc
arpl
call
shll
repnz
lret
push
adc
imul
jl
nop
lods
xor
adc
std
popf
arpl
pop
dec
and
add
cwtl
stos
jmp
lcall
pop
mov
cli
aam
aam
or
or
icebp
pop
cs
ljmp
mov
test
dec
xor
lea
or
sub
ds
sub
push
idiv
rorl
sti
add
fsubr
aad
or
or
iret
push
and
jle
ds
mov
push
std
jge
fldt
xchg
xchg
aas
inc
cmpsl
stc
stos
mov
subl
adc
push
sarb
xchg
int3
cmpsl
jne
jb
in
xchg
shld
add
adc
inc
lock
inc
cld
cmp
ja
jg
popa
sub
movl
cli
jl
dec
movsb
roll
xor
sbb
pop
adc
mov
inc
xor
xor
test
frstor
mov
out
add
mov
dec
sub
sbb
cltd
mov
or
pop
sbb
in
nop
xchg
ljmp
stc
or
mov
scas
adc
pop
loopne
stos
pushl
rcrb
faddl
lock
iret
test
xor
cmp
push
push
lcall
mov
nop
push
adc
jne
xchg
sbb
leave
pop
in
add
inc
pop
hlt
push
sbbl
push
cltd
inc
mov
xchg
gs
add
ret
aaa
fisttpll
addb
mov
andl
jae
and
roll
das
jb
sbb
xor
hlt
push
shrb
jecxz
rcll
cmp
sbb
cmp
mov
pop
scas
movsl
dec
mov
mov
push
ror
sbb
adcl
jo
jne
movl
jl
inc
fdivrs
in
jno
adc
mov
repnz
or
lcall
lcall
or
or
outsb
cmpsl
mov
cmpsb
or
sbb
mov
into
xchg
inc
and
dec
xchg
xchg
inc
jmp
sub
mov
vcomiss
inc
push
or
lahf
data16
mov
ds
repnz
jo
or
mov
mov
out
fisttpll
sbb
cmp
lea
xor
jg
push
mov
pop
sub
mov
neg
ret
je
sarb
lret
aam
divl
mov
les
or
rorl
cmp
dec
mov
rorb
rorl
adc
mov
sbb
js
mov
jne
test
xchg
lods
push
int
cmpsb
jmp
adc
das
js
cmp
repz
mov
sbb
clc
mov
pop
sbb
inc
add
mov
out
cmp
mov
sub
enter
xchg
pop
jne
mov
sbb
fdivl
jge
inc
dec
inc
mov
test
cltd
repz
je
insb
popa
in
and
stos
leave
mov
shll
in
push
xor
mov
fisubl
cmp
pusha
xchg
add
xor
scas
mov
xchg
and
clc
loope
std
or
xor
lea
test
lea
in
loope
int3
mov
xor
push
js
outsb
mov
dec
hlt
jb
fisttpll
mov
sbb
cwtl
cmp
aam
data16
cld
jbe
repnz
adc
in
loope
ja
mov
lahf
mov
mov
daa
insl
push
out
sub
les
or
sahf
in
adc
xchg
lahf
xor
or
jns
fisubrs
dec
xchg
xchg
or
jo
xchg
pop
sub
or
adc
sbb
pop
arpl
pop
xchg
popa
lret
inc
mov
and
mov
push
xchg
cmp
xchg
mov
movsl
mov
clc
sbb
lock
pop
cmc
ljmp
cmpsl
inc
dec
mov
push
leave
and
pop
push
stos
stc
or
inc
idiv
fistl
leave
test
and
or
add
lcall
sub
xchg
loop
leave
enter
sbb
lods
or
or
in
and
mov
jnp
pop
adc
in
loope
jbe
test
push
sarl
pop
sub
cmp
test
mov
sub
mov
push
push
push
inc
cltd
push
js
xchg
sahf
into
call
dec
movsl
cmp
sarl
loopne
lods
push
leave
jns
or
mov
adc
movsb
aam
jecxz
sbb
mov
xchg
sbb
mov
int3
test
sub
sub
ss
jmp
test
add
int3
adcb
mov
das
push
inc
cs
push
in
into
loop
imul
imul
lahf
int3
popa
ret
add
je
stos
mov
xchg
cld
ljmp
cmc
add
jb
fisubs
lock
xlat
shl
mov
sbb
insb
ret
mov
mov
sbb
mov
cmp
pop
xchg
adc
ss
loopne
divb
ficomps
pop
orl
inc
push
add
cmp
scas
add
sub
ljmp
xchg
push
loopne
cmp
dec
fisubl
mov
sbb
mov
jg
dec
das
push
mov
or
movsl
mov
cmpsl
xor
aam
jne,pt
jne
cmp
sbb
and
movsl
clc
mov
sbb
sub
mov
cs
add
add
lods
addb
icebp
les
bound
subb
sub
popa
cmpsl
test
mov
ficompl
sub
push
movsl
jecxz
pop
insl
out
pushf
enter
cmp
dec
ret
pop
cld
push
cmp
addb
popf
mov
mov
jb
repnz
mov
cmp
lret
aam
mov
frstor
imul
js
repnz
cmp
lock
cmp
pushf
and
adc
and
xchg
repz
hlt
mov
lock
ja
rol
clc
loopne
adcb
sub
adc
in
jge
pop
xchg
aaa
hlt
cs
mov
push
push
cwtl
and
sub
in
and
fsts
fcomip
push
insl
les
cmc
movsl
dec
dec
pushf
sbb
aas
xchg
or
cwtl
mov
xchg
inc
psubsb
push
ja
sahf
mov
int
push
jno
inc
add
cmp
xor
fistps
pop
jge
into
mov
sub
pop
imul
jecxz
rcrl
pop
lcall
aas
pop
mov
lds
mov
push
mov
hlt
in
loope
hlt
fdivrs
js
xor
testl
cmp
fs
inc
dec
jl
or
or
dec
repz
stos
loopne
fwait
mov
jno
sub
scas
ret
pop
ljmp
dec
aad
mov
add
push
aad
cmp
mov
pop
popf
mov
aas
mov
mov
fdivr
roll
in
inc
xor
jp
lods
xchg
scas
cwtl
add
jg
sti
fidivrs
jbe
popaw
fdivp
pusha
jne
jne
cmp
add
xchg
lahf
mov
sarb
jno
fwait
andb
jge
jge
pop
fistpl
pusha
aas
data16
inc
aaa
jle
dec
push
nop
xor
ss
pushf
enter
jns
sbb
sahf
stos
movsl
push
cmp
into
and
out
push
imul
data16
in
xor
addr16
push
pop
punpckhwd
test
add
test
movsl
aaa
mov
push
lods
push
aas
call
leave
add
and
out
ret
cmp
add
mov
enter
flds
mov
mov
adc
mov
outsl
rol
push
jp
ror
jg
mov
jmp
mov
add
pop
push
adc
push
sub
subl
int
notl
inc
rclb
clc
ds
hlt
jle
dec
cs
jg
dec
outsl
stos
add
bndldx
jmp
imul
sahf
mov
sub
adc
lods
cli
subb
aaa
xchg
fistpll
pop
mov
scas
hlt
xchg
cmp
sar
sbb
inc
push
mov
inc
mov
and
xchg
pinsrw
and
mov
xchg
ss
jae
lret
dec
jnp
aas
rcl
mov
pop
mov
add
mov
out
imul
inc
push
cmp
sbb
iret
mov
out
fnop
mov
dec
cli
fisttps
data16
sub
testb
sbb
and
jno
pop
jg
mov
mov
repz
pop
sbb
fwait
cmpl
cmp
cli
sti
jg
lea
jns
out
sub
cmp
adc
inc
cli
jb
push
push
inc
jl
aaa
iret
pop
mov
and
mov
sbb
push
mov
and
adc
and
mov
adc
lods
subb
insb
xor
dec
aaa
sub
data16
pop
cmp
push
pop
loope,pt
and
cmp
popa
dec
iret
movsb
jbe
sbb
xchg
push
adc
push
and
shr
jb
add
aas
jns
fnsave
sahf
adc
mov
mov
ds
sub
jmp
cmp
mov
shll
xlat
cmp
add
pusha
sbb
mov
cmp
in
les
pusha
xchg
stos
and
sub
mov
data16
leave
fnstsw
ret
cmp
int3
iret
lods
dec
sti
xlat
repz
imul
xor
imul
cld
inc
xchg
mov
mov
adc
sti
sbb
push
loope
sbb
movsl
mov
mov
ftst
sub
cmpsb
mov
push
jno
inc
jl
dec
idivl
xchg
push
pop
xchg
movsl
xchg
mov
leave
imul
push
lcall
cwtl
xlat
stos
icebp
in
mov
sub
or
into
in
je
pushf
test
push
scas
lods
pop
test
out
add
insl
mov
lock
push
jp
sub
ja
popa
cmpsl
shr
pop
xchg
out
inc
rclb
in
inc
pop
fnstenv
out
and
sti
push
dec
sahf
add
imulb
pop
int
xorb
mov
fisubs
adc
pushf
scas
or
sahf
fs
dec
dec
out
aad
les
jmp
or
mov
sbb
mov
adc
fisttpll
ror
inc
lods
mov
or
out
movsl
mov
cmpsb
jmp
fistps
jns
test
xor
and
es
lahf
or
sbbb
or
cltd
jo
pop
ret
out
pop
jle
xor
mov
add
mov
jbe
ret
imul
add
lahf
lods
out
and
dec
xor
cltd
mov
lret
cltd
xchg
std
pop
loope
lahf
in
mov
cld
les
cltd
push
roll
arpl
nop
jecxz
dec
lods
inc
clc
mov
lret
mov
addb
in
aad
sahf
sub
mov
fisubl
in
iret
push
test
in
xor
gs
cmc
sub
jg
in
ljmp
movsb
sub
or
push
call
xlat
cmp
sahf
fildl
inc
testb
xlat
jecxz
pop
dec
movaps
lret
repnz
cs
inc
call
cmp
jb
inc
mov
addb
mov
or
inc
cs
cmc
fsts
and
imul
out
fcomi
pushf
fisubl
pop
xor
pop
add
mov
jp
ja
xlat
notl
repnz
pop
or
inc
enter
inc
cvtdq2ps
xchg
jmp
push
dec
mov
jne
mov
ljmp
mov
ret
lods
rorb
inc
jnp
inc
vmread
insb
mov
imul
aaa
mov
repz
cli
xor
mov
and
mov
fwait
cwtl
addl
subb
sbb
adc
mov
subb
inc
add
or
jl
scas
cmp
add
sahf
cld
and
fdivl
push
stos
ret
pop
dec
loop
or
negl
mov
and
divb
mov
cli
xorl
push
mov
cmpsb
cmp
mov
dec
xor
dec
pop
inc
adc
shl
jns
mov
loope
cli
push
inc
mov
bound
xor
pop
idivb
xchg
mov
jns
in
ds
dec
outsl
or
clc
lds
push
jg
inc
jns
ja
sti
xchg
sbb
cmp
ljmp
xor
shrl
test
or
repz
jmp
lea
sub
add
xchg
sub
out
sub
rcrl
inc
arpl
add
and
enter
ficoml
lahf
aad
inc
or
jae
sub
xor
sti
mov
addl
xor
xlat
adc
or
mov
mov
cmp
fists
loope
or
data16
movsl
ficompl
push
dec
pop
push
ret
jl
push
dec
cs
clc
jg
xchg
push
sbb
adc
pop
or
mov
xchg
hlt
pop
mov
mov
in
xchg
pop
xchg
aam
inc
shl
inc
cmp
lcall
lods
test
xor
push
push
cli
int
push
in
adc
int3
push
ljmp
loope
negl
fwait
cwtl
dec
int3
testl
dec
scas
mov
test
into
sbb
leave
es
jbe
aas
test
mov
xchg
dec
fwait
dec
cwtl
into
imul
cltd
mov
xor
jne
xor
cmc
cwtl
cmc
or
jecxz
sbb
inc
sarb
push
loop
mov
cmpsl
jl
pop
pop
fistpl
outsb
loope
aaa
add
rcr
add
inc
push
fnsave
cwtl
pop
push
or
mov
lods
sbb
arpl
rorb
cmc
popf
pop
les
xchg
sbb
inc
push
sbb
mov
add
sub
insl
mov
push
movsl
xor
ffreep
fisttpll
mov
popa
xchg
mov
sbb
jns
sub
pop
adc
lods
xchg
int
jbe
sub
stos
pop
arpl
sbb
rolb
xchg
mov
and
test
js
addr16
adc
inc
mov
xchg
cmp
xor
push
adc
jbe
dec
xchg
out
outsb
sub
mov
test
stc
or
dec
comiss
push
xchg
iret
jo
out
and
movsb
testl
popa
loope
outsl
shrl
xchg
lods
dec
inc
lret
jecxz
imul
bound
cmpsl
sub
jmp
xchg
dec
push
cmp
xor
jae
adc
mov
popf
sahf
test
inc
fists
push
cmp
insl
cmc
orl
mov
push
mov
int3
add
xor
xor
call
push
push
mov
aad
stos
pop
push
mov
dec
or
aad
js
cltd
dec
idivl
data16
mov
fmulp
jg
orb
stos
jb
xchg
dec
int
xchg
mov
in
and
fadd
add
cmpb
or
push
cmp
sub
sbb
ja
xor
int
pop
popf
mov
sbb
pop
or
in
inc
jl
inc
pop
jns
pushf
lahf
inc
popa
shll
mov
call
and
mov
sub
cmpsl
dec
mov
pop
std
push
lods
test
mov
fdivr
into
fwait
sub
jne
pusha
lock
cwtl
or
dec
mov
add
mov
shl
ss
sahf
fwait
inc
imul
mov
mov
cld
jecxz
out
cs
jne
test
jge
icebp
sub
andl
sub
push
in
adcb
add
cmc
ja
add
popa
stos
dec
iret
outsl
mov
jecxz
jge
fisubl
and
test
stos
pop
in
inc
adc
lcall
jbe
mov
lcall
adc
in
lods
ret
mov
xor
ret
std
scas
sahf
rcrl
dec
pushf
shlb
dec
push
in
lret
xchg
inc
cmp
sahf
mov
iret
ret
inc
add
jl
in
jp
inc
add
sahf
push
or
jmp
add
fucomp
jecxz
insl
lea
sbb
aad
repnz
pusha
sbb
dec
jo
out
dec
mov
mov
adc
popf
ss
dec
imul
test
jns
shl
mov
or
adc
insl
imul
add
ret
pop
xorl
jne
xchg
rorl
jmp
mov
and
sub
dec
pusha
sbb
std
add
cmc
sbb
mov
cli
hlt
filds
repz
or
push
cmpsb
pop
sub
shlb
pop
out
aaa
cld
mov
clc
jno
iret
cmp
push
xor
cld
push
adc
mov
adc
les
mov
xlat
sub
mov
icebp
push
mov
adc
cs
data16
mov
jno
jbe
jns
stc
push
jmp
inc
outsb
or
mov
sbbl
ret
cs
adc
in
push
push
add
ret
iret
sbb
dec
xor
pop
push
frstor
dec
mov
pop
ret
dec
in
fst
ja
pop
iret
das
and
ror
jnp
sub
push
sbbl
repz
mov
lret
aas
mov
sbb
in
iret
jle
stos
inc
dec
addl
lods
adc
sahf
out
jb
aas
ret
push
sbb
lea
and
or
sti
cmp
xchg
xchg
add
push
push
out
mov
idivl
pop
pop
cmpsl
dec
xor
mov
sbb
cwtl
aad
inc
push
ret
imul
adc
xchg
sub
ret
adc
dec
pusha
xchg
pop
push
and
inc
jae
jle
arpl
fistpl
es
push
add
jmp
ss
and
push
ud1
pop
sub
in
jnp
add
insl
cmpsl
je
jo
inc
push
out
aam
popa
bound
lahf
ss
jmp
cld
mov
leave
addr16
and
arpl
out
movhps
test
push
cmp
test
cmp
pop
lods
cmp
inc
push
or
sub
movsl
cmpsl
push
or
in
push
pop
das
data16
popf
jbe
aad
dec
mov
fidivrl
sub
outsl
xchg
push
scas
in
lods
mov
jl,pt
pop
or
cwtl
popa
dec
imul
adc
das
dec
cmp
mov
cmp
loop
dec
dec
test
enter
add
ja
push
and
mov
lahf
inc
popf
cmp
jecxz
gs
mov
orb
xor
addr16
push
xor
inc
sub
inc
or
lcall
ja
daa
mov
push
jl
hlt
movsl
movsl
roll
dec
cmp
aaa
cmpsb
push
cmp
shl
arpl
push
sub
cwtl
clc
ret
ss
or
test
adc
jo
ret
xchg
inc
mov
inc
rsm
jecxz
addr16
and
push
repz
inc
cmc
enterw
mov
sub
mov
dec
dec
dec
stc
or
lret
leave
add
dec
mov
dec
jg
test
lds
dec
pop
jne
mov
repz
push
addb
pop
mov
sbb
fwait
and
sub
sti
cli
push
mov
or
ljmp
mov
icebp
loope
pop
loopne
lock
ret
jl
mov
mov
mov
xchg
sub
mov
jp
jno
jb
pop
sbbb
jl
dec
loope
stc
xlat
ret
xchg
jne
pop
sub
or
sbb
or
adc
mov
outsl
cmp
mov
xchg
dec
outsb
sbb
and
jle
push
cmc
sub
cmp
cmp
outsl
ss
mov
repnz
inc
push
inc
fiaddl
repnz
or
rorl
cmp
movsb
scas
mov
sbb
xchg
jl
pop
push
cmp
mov
mov
or
std
lea
divb
adc
or
fisttps
jo
mov
les
std
inc
in
loopne
mov
maskmovq
notl
stos
fimull
mov
adc
push
rcll
in
mov
pusha
and
cltd
cmp
jo
aaa
xor
inc
outsb
aas
cmp
mov
pop
jbe
xor
push
jb
cli
add
inc
mov
cmpb
add
push
test
sbb
cmp
fisubl
in
push
push
sbb
lods
lock
mov
sbb
jns
pop
imul
ds
lock
pop
sub
sahf
mov
xor
mov
dec
in
push
insl
push
in
das
pop
push
mov
mov
or
pop
pop
clc
cmp
or
inc
jle
adc
adc
gs
push
mov
xor
leave
pop
pop
dec
push
sbb
cwtl
cmp
jg
dec
xor
sbb
into
je
pop
leave
out
imul
sub
inc
lret
inc
lea
sbb
sbb
mov
inc
xor
andb
dec
leave
sub
mov
fbld
xlat
or
dec
rclb
or
inc
cs
sub
push
cmpsl
in
scas
mov
mov
and
mov
pop
xor
jnp
movsl
lret
sbb
xor
leave
lods
dec
scas
fwait
and
pusha
sarb
sub
xorl
stos
mov
aam
int3
outsl
daa
xor
pusha
jnp
pop
test
add
popa
sarl
mov
inc
loop
xor
push
cmp
hlt
and
sbb
and
dec
lret
cli
add
mov
clc
scas
scas
dec
sub
or
or
outsb
dec
rolb
xorl
sti
inc
cltd
cwtl
pop
or
add
push
xchg
mov
orb
scas
fsubrs
sbb
stos
mov
hlt
or
adc
testl
jp
pop
pop
jle
sbb
dec
xchg
ljmp
cmp
jb
cmpsb
mov
and
mov
lods
jae
jne
dec
push
and
adc
xor
and
outsb
imul
and
push
jae
clc
pop
jo
pop
lods
nop
das
and
popf
fcomip
mov
rolb
aas
dec
jbe
xor
hlt
push
mov
push
sbb
mov
adc
daa
or
sbb
xor
xchg
fsubl
sbb
mov
cld
mov
or
fdivl
ficoms
pushf
daa
or
adc
fisubl
xor
test
xor
xchg
mov
cltd
adcl
aaa
test
fnsave
outsl
mov
in
enter
sbb
mov
cmp
popa
inc
inc
cmp
fisubs
imul
inc
jg
pop
dec
lahf
jecxz
push
cmp
mov
lock
inc
stc
adc
lods
mov
ds
imul
jns
sahf
outsb
sbb
iret
aas
jmp
inc
jp
loopne
pop
push
mov
pop
jns
les
or
fisubrs
mov
jmp
ja
sub
add
mov
test
adcb
stos
call
xchg
faddl
or
xchg
in
repnz
call
mov
rcrl
popa
mov
mov
not
mov
mov
iret
mov
bound
xorl
xadd
push
push
cmp
mov
sahf
xchg
aam
jnp
jno
ds
inc
pop
inc
in
add
daa
out
dec
sub
add
pop
js
clc
and
stos
stos
cmp
xchg
out
fildl
popl
pop
jmp
int3
vpaddb
mov
add
arpl
ja
lods
insb
xor
iret
cmp
stos
jmp
xor
imul
mulb
cmpsl
xor
add
xchg
add
ljmp
mov
cmp
inc
movsb
and
mov
or
cs
dec
out
repnz
nop
pop
mov
dec
push
scas
mov
scas
int
lcall
push
lock
daa
xchg
mov
in
fisubs
xchg
test
fs
mov
push
mov
or
adc
in
nop
test
jg
jp
nop
and
test
push
xor
xor
adc
sbb
pop
leave
repz
jae
dec
sub
cmp
dec
pop
jo
hlt
push
add
sti
or
ds
mov
loopne
or
mov
mov
push
loop
xchg
clc
popa
movsb
mov
pop
out
out
lahf
sahf
fwait
sti
pop
aam
cmp
out
hlt
lods
mov
pushf
pop
sub
cmpl
cld
and
mov
cs
ret
pop
adc
int3
lahf
xor
fs
push
or
psubq
ret
popf
in
shrb
xlat
sahf
jle
sub
mov
lds
sub
out
addr16
xchg
mov
rcl
mov
dec
clc
push
lret
pop
xor
sahf
scas
ret
ljmp
es
outsl
es
jb
iret
fs
movsb
out
adc
dec
push
add
enter
or
cwtl
movb
fbld
lods
sti
mov
add
dec
or
das
inc
or
lods
shlb
adc
repz
rcrl
in
mov
mov
in
xchg
push
pop
pushf
or
add
mov
cmpsl
sbb
stos
xchg
imul
xchg
imulb
icebp
pop
and
lds
pusha
popf
xchg
cmp
pop
hlt
lcall
lods
scas
call
cmpsb
ss
push
nop
insl
cmp
push
je
adc
clc
sbb
arpl
sub
clc
cs
pop
shr
ja
pop
aam
ja
shll
jg
out
mov
icebp
xchg
dec
sbb
cmpsl
or
push
stc
adc
mov
jno
mov
movsb
sbb
lret
adc
mov
repnz
dec
mov
iret
lds
mov
xor
mov
mov
pop
pop
or
dec
add
iret
or
aaa
cltd
cli
jecxz
xchg
pusha
xor
ret
pop
dec
rorb
fistpl
stos
jle
inc
sti
add
inc
les
or
outsl
and
lcall
scas
ljmp
jo
cmp
push
cmc
out
ja
in
lock
and
sbb
roll
jne
inc
sub
iret
xchg
das
dec
call
pusha
aad
and
add
cld
popf
and
fs
pushf
out
mov
pop
fs
cs
push
add
sbb
pop
ret
lcall
jae
das
fdivrs
cwtl
jg
cmpsl
leave
pop
ficompl
jae
mov
sbb
inc
add
test
pop
lahf
sub
aaa
adc
fists
inc
pop
mov
loopne
xlat
xor
div
mov
push
push
cltd
bound
sar
cmpsb
fcoml
lahf
cmpsb
enter
ficomps
or
mov
pop
mov
fwait
movsl
jge
test
lods
and
dec
nop
adc
fstl
sub
push
adc
data16
jae
inc
lcall
xor
mov
out
stc
pop
add
jnp
mov
es
mov
push
aas
out
enter
cmpsl
mov
sbb
mov
jg
dec
sti
mov
push
out
in
fmuls
dec
es
test
cwtl
and
bound
mov
xchg
in
outsb
je
or
lret
mov
mov
jge
push
lods
ja
std
into
xor
daa
rorl
iret
jno
jmp
jge
inc
cmp
lock
pop
push
dec
mov
adcb
cwtl
insl
sahf
int3
mov
and
cmpsb
dec
adc
sti
mov
cli
xor
lock
inc
cmp
mov
pop
push
ss
mov
lret
push
mov
cli
cli
or
mov
dec
and
lods
add
ja
sbb
cmp
test
imul
push
fucomip
mov
dec
aas
or
push
mov
xorl
dec
adc
mov
cmp
pop
orl
inc
sub
lods
ljmp
sarb
sub
jb
fcmovnbe
rcl
sbb
inc
ror
sarb
int
je
lds
arpl
sbb
inc
pop
cmp
cmpsb
sar
icebp
jns,pt
sub
xchg
mov
adc
mov
addb
ds
into
xor
lahf
into
pop
xchg
lret
lock
imul
ja
pop
xor
pop
les
ljmp
xlat
ds
lock
inc
jle
and
push
rcr
xchg
insl
mov
cmp
pusha
cmp
daa
sub
mov
pop
mov
push
popa
lods
lods
test
ret
sahf
inc
fsubl
gs
jo
mov
push
mov
fucomip
sbb
pop
into
aaa
gs
push
mov
sub
dec
aam
jb
mov
jns
lea
mov
out
lods
das
mov
repz
rclb
js
dec
add
xor
cmpb
aaa
ljmp
mov
mov
xchg
repz
mov
xor
popf
mov
subl
xchg
outsl
into
ljmp
subb
pop
adc
mov
mov
xchg
xor
jmp
stos
pusha
mov
lods
mov
sarb
inc
test
in
fscale
mov
jo
mov
pop
movsl
es
dec
and
sub
and
mov
pop
cmp
push
xchg
mov
mov
icebp
push
outsb
mov
popf
mov
test
int3
inc
andl
outsl
clc
adc
int3
and
push
mov
pop
inc
dec
rcr
enter
ficomps
sub
gs
out
mov
out
mov
popl
jno
rorb
xor
mov
xchg
cmp
fcoml
mov
lcall
sub
cmpb
shrb
xchg
pop
bnd
cld
add
adc
lods
scas
lahf
std
mov
and
das
mov
inc
mov
xor
adc
pushf
mov
inc
aaa
jb
push
push
jmp
hlt
sub
jecxz
push
push
jge
cs
cmc
nop
cmpsb
mov
ja
push
push
push
je
xorb
scas
jle
mov
or
mov
lcall
pop
mov
pusha
jne
jo
xchg
mov
lret
jbe
lods
jnp
sahf
sarl
push
inc
lret
sub
fs
ffreep
mov
in
mov
or
mov
add
out
pop
adc
lods
add
push
aas
pop
push
xor
dec
cmp
rorb
fdivrs
sbb
cltd
ret
ret
sbb
mov
jae
test
out
int
jne
loop
lods
xor
mov
int
mov
test
mov
or
xchg
jns
and
ja
cmpsb
fdivr
call
out
inc
or
add
ljmp
cmp
mov
lahf
shll
int3
rcll
mov
xor
movsl
xchg
mov
cmc
popa
mov
xchg
jno
arpl
dec
fdivrl
addr16
icebp
out
testl
adc
and
movsb
ss
nop
cmc
cmp
pop
mov
iret
pushf
in
rorl
int3
mov
xchg
sbb
lds
mov
mov
repz
stos
movsb
inc
cli
add
hlt
mov
xchg
lret
out
loope
rorl
add
push
xor
fadd
rcll
rcll
add
addr16
out
sarb
loop
mov
cmp
cmp
xor
lcall
jmp
dec
imul
sarl
test
mov
sub
out
leave
stos
scas
jb
cmovno
inc
ja
sbb
xor
fisubs
js
pop
pop
xchg
or
aad
jae
ljmp
mov
pop
push
outsl
cmp
sti
and
stos
mov
cmp
lahf
adc
and
mov
and
lds
push
lret
pop
add
dec
and
xchg
leave
adc
loopne
pushf
clc
clc
je
test
push
orb
push
and
inc
sub
fldt
fnsave
hlt
mov
repnz
movsl
pusha
inc
ja
stos
ja
stos
mov
fsubrl
xor
icebp
add
xor
and
and
xor
or
and
add
pop
ud1
popf
stc
adc
mov
inc
pop
lret
dec
ret
shlb
loopne
cmp
cld
dec
cmpsl
ljmp
test
xlat
inc
push
jge
cmp
pop
cs
movsl
dec
addl
ljmp
push
push
sub
xchg
jnp
cmpsb
add
mov
in
xor
push
push
add
or
inc
loope
mov
jl
xchg
or
mov
pop
aaa
pop
imul
push
lods
mov
or
dec
or
movsb
mov
std
adc
shll
mov
imul
repz
xor
cltd
pop
dec
pop
ret
xchg
addr16
fiaddl
mov
arpl
sbb
push
xorb
push
cmp
cmp
dec
adc
lds
shlb
test
hlt
add
leave
rclb
enter
repz
test
test
cwtl
jp
pop
int
gs
sub
jle
push
loopne
sti
mov
xlat
xor
add
adc
pop
xor
dec
jnp
push
and
inc
push
movsb
sbb
cmp
orl
lahf
inc
call
jle
jne
imul
dec
in
push
inc
and
pop
mov
push
mov
fdivl
or
ds
mov
fisubrs
sub
mov
or
js
jle
mov
into
lds
imul
aam
pop
cwtl
inc
insl
lea
test
and
adc
loop
outsl
xor
push
cmp
and
xor
pop
test
dec
rolb
sbb
inc
push
pop
push
popa
mov
sub
int
shl
mov
push
mov
add
push
ret
shll
call
cmp
fcmove
mov
mov
inc
scas
shrb
or
xor
lahf
lods
mulb
cltd
mov
aas
inc
dec
lahf
xor
xor
adc
pop
sbb
cmp
cwtl
sub
push
dec
sar
mov
dec
mov
adc
outsb
inc
mov
test
and
push
jae
mov
and
icebp
test
pop
pop
repz
mov
mov
mov
in
icebp
es
inc
jo
les
int
dec
sub
int3
xchg
loope
pop
push
leave
sbb
jnp
pusha
es
clc
into
sbb
hlt
sub
rcll
jmp
insb
fwait
leave
mov
aaa
rolb
pop
cmp
push
rolb
jno,pt
pop
xchg
data16
mov
int
int3
mov
xchg
push
mov
cmc
out
push
in
ljmp
sub
pop
insl
sub
jbe
stos
jl
mov
push
push
fwait
adc
or
inc
sub
or
iret
divl
push
ret
push
lret
repz
jo
pushf
inc
out
cmc
dec
fcoml
icebp
jne
cmp
and
jmp
mov
aam
ja
arpl
aad
fldenv
stc
push
add
iret
mov
daa
pop
inc
test
push
dec
jno
mov
out
aas
cmp
push
xchg
lods
jge
add
add
jl
mov
loope
out
cmp
or
pop
adc
and
rcl
pusha
arpl
cmp
fistl
inc
xlat
mov
rorl
shrl
cmp
push
jl
jbe
add
out
test
dec
or
and
sbb
movsl
push
dec
scas
fdiv
inc
js
dec
pop
sbb
lea
test
mov
stc
or
mov
push
cs
mov
fadd
sub
and
sub
push
les
jne
xchg
sub
popa
in
mov
fisttpl
adc
or
int3
fisubl
das
popf
ficoml
pop
cmp
fistl
je
and
pop
push
jno
mov
xor
push
lret
out
mov
adc
sub
mov
call
jp
sub
adc
daa
enter
mov
inc
mov
stos
xor
sbb
imul
fidivs
mov
shr
sbb
jbe
xor
inc
add
push
iret
and
jecxz
mov
out
mull
mov
sub
mov
jno
lret
ret
cmp
adc
stos
gs
mov
pushf
push
lock
sub
rorb
repz
or
icebp
pop
dec
into
inc
sbb
jne
test
pusha
out
stos
mov
mov
pusha
loope
push
pop
aam
cmpsl
jmp
fisttpl
sub
enter
mov
aas
rorb
cltd
or
call
insl
fcomps
xlat
mov
pop
frstors
dec
mov
inc
loop
test
call
push
paddw
cmp
xorl
mov
jle
cmpsb
xchg
pusha
pop
jmp
stos
data16
sbbl
jnp
movb
rcrb
rcrb
andl
in
pop
popa
adc
loope
nop
xlat
lods
in
repz
xor
cmpb
sub
popf
jge
push
mov
cmc
fists
mov
fwait
ror
lea
xchg
outsl
fwait
out
aas
andl
loopne
sti
out
adc
sti
push
hlt
movsb
xor
or
bound
stos
or
cmp
aaa
add
icebp
xchg
mov
mov
cmp
fmull
mov
mov
int
pop
je
imul
mov
stc
je
cmpsl
or
decl
mov
sbb
rcll
not
mov
jns
lcall
mov
icebp
mov
lods
lcall
cmp
adc
push
fs
addb
fs
loopne
into
jno
mov
imul
adc
dec
mov
inc
hlt
mov
js
popf
jbe
imul
aad
sub
add
aam
int3
shr
dec
xor
hlt
fcomps
clc
and
outsb
in
out
push
in
int3
ror
xchg
dec
mov
adc
sbb
cs
adc
sub
rolb
pop
lcall
das
int
xchg
mov
pop
pop
pusha
or
loope
in
pop
xor
add
mov
sbb
and
pop
cmpsb
dec
push
ds
xchg
mov
mov
aas
outsl
or
mov
jae
add
jge
push
pop
adc
push
xchg
push
jle
arpl
out
clc
xchg
repnz
lea
mov
add
adc
popa
or
das
ja
push
jecxz
jae
sub
push
test
xchg
xchg
and
or
cld
jl
jmp
adc
mov
mov
out
xchg
push
bound
or
popf
aad
negb
cmp
fwait
jp
jg
jl
adc
lret
xchg
inc
xorb
push
push
push
pop
jl
insb
pop
mov
xor
dec
pop
sbbl
scas
ret
inc
rcl
mov
fsubr
pop
in
mov
mov
dec
mov
lods
cmpl
test
sarl
inc
repz
in
mov
fldcw
ja
aam
sbb
sbb
stc
jmp
jmp
mov
fwait
pop
mov
adc
pushf
nop
sub
inc
pop
mov
fadd
nop
dec
gs
in
jle
mull
xor
sar
cmpsb
imull
ret
or
data16
inc
repnz
or
roll
cli
movsl
divb
shll
push
push
jne
jo,pt
push
sahf
stos
mov
lahf
adc
iret
mov
aad
or
jae
out
nop
aas
incb
ss
das
stc
sbb
jmp
fmuls
aad
adc
jmp
orl
in
cmp
jo
clc
sbb
push
bound
push
cmp
pop
inc
cmp
loop
jb
ja
lods
lods
hlt
mov
sub
ss
dec
jae
fs
mov
push
xchg
sbb
inc
mov
push
popa
lret
cmc
or
out
jno
jmp
fiadds
mov
insl
std
xor
movsb
sub
xchg
outsb
pop
fimull
out
data16
outsl
loop
out
inc
xor
loop
mov
mov
test
fwait
fs
hlt
xchg
testb
scas
mov
and
add
gs
xchg
add
int
mov
push
dec
jae
icebp
std
pop
cmp
and
sti
in
push
jg
jl
adc
xlat
push
bound
fstl
inc
jl
les
push
hlt
jbe
jb
mov
adc
push
daa
sub
repz
mov
lods
push
push
mov
add
inc
cmp
notl
pop
outsl
jle
stos
push
push
jb
or
jae
enter
imul
mov
lods
call
or
xchg
xchg
fildll
xchg
xor
aam
ret
mov
sti
pushf
or
clc
xor
mov
fsubl
mov
or
mov
fwait
adc
into
js
pop
rcrb
shl
ret
in
pop
pushf
sub
int
xor
leave
sbb
inc
fwait
xchg
stos
sti
mov
sub
shrb
movsl
test
rorb
mov
test
pop
sarl
xor
add
mov
into
cmp
cwtl
bound
inc
jg
inc
xchg
pop
inc
sahf
lock
pop
mov
push
aad
into
dec
cli
mov
sbb
jae
mov
or
push
loope
cs
xor
rol
jae
push
mov
sti
inc
jge
out
inc
fisubs
inc
scas
divb
test
pop
lret
in
pop
mov
mov
mov
shrb
jnp
in
mov
dec
orl
xchg
cmp
mov
lcall
frstor
jo
sbb
mov
xor
add
in
mov
pop
in
pop
push
mov
pop
dec
jo
mov
push
ficomps
movsb
fcoms
insb
xchg
imul
mov
dec
cmpsb
jnp
outsb
add
mov
jmp
aaa
jecxz
movsl
dec
inc
xor
inc
mov
stos
adc
xor
test
jecxz
loop
mov
fistl
pop
jno
nop
mov
dec
movsl
cmc
ret
stos
lret
popa
subl
stc
rcl
rcl
mov
das
cmp
cmp
nop
sub
mov
bound
sbb
pop
cltd
fldl2t
pop
or
xchg
xchg
fbld
mov
pop
jle
push
movsb
stos
sbb
std
js
fdivrp
cmp
jbe
and
mov
xchg
imul
mov
dec
aad
jl
sbb
popf
mov
in
jp
je
leave
stos
stos
popf
and
gs
mov
loopne
sti
inc
out
nop
push
xchg
jae
lea
lcall
rcr
mov
sbb
clc
xchg
repnz
push
and
or
pop
mov
out
nop
pop
push
xchg
int3
fwait
sbb
pop
jle
inc
imul
out
cld
sub
out
or
lds
adc
int3
push
jo
mov
and
cltd
data16
xor
clc
xchg
rcl
ds
jnp
sbb
mov
fwait
sub
pop
out
pop
and
cltd
push
push
ret
daa
out
fnstenv
mov
pop
xchg
cwtl
aaa
cs
mov
pop
pop
jge
fnstcw
movsl
mov
scas
loop
daa
movsl
stos
fsubr
ds
ds
jmp
sub
fistpll
out
xchg
mov
mov
mov
mov
arpl
jns
cltd
mov
pop
insl
aas
or
outsb
jle
divl
addr16
xor
mov
add
xor
sub
mov
jecxz
in
notb
pop
xchg
lea
punpckhbw
and
dec
in
gs
and
dec
addr16
push
fmulp
into
mov
pop
pop
inc
outsb
pop
lret
jbe
out
mov
jns
or
xchg
test
xor
jp
test
adc
scas
ja
fdiv
push
sbb
lahf
push
jmp
out
add
pushf
int3
inc
xchg
xor
cmp
imul
out
decb
sbb
dec
enter
fmuls
das
fdivrs
loope
sbb
cmp
pop
push
pop
cmp
dec
add
fists
mov
jo
out
jnp
cmc
scas
sub
sbb
dec
outsb
outsl
imul
cltd
xchg
dec
lods
aaa
xor
adc
pushf
push
call
rcrb
cmpl
cwtl
xlat
dec
adc
dec
jb
out
outsl
mov
cmp
stos
fdivs
mov
xor
fstps
cwtl
lods
adcl
cmp
or
add
push
dec
pop
sahf
and
pop
ss
xor
or
xor
clc
cmp
dec
mov
mov
clc
xor
test
pop
nop
test
out
aaa
inc
xor
jp
jmp
cmc
ljmp
adc
adc
xchg
jae
imul
sbb
pop
cltd
dec
fsubs
lea
mov
cmp
mov
ja
jmp
xchg
xor
push
xchg
pop
lahf
sub
mov
inc
cli
gs
dec
lret
sbb
fdivl
scas
clc
aad
mov
scas
xchg
hlt
loop
sub
out
repz
scas
hlt
in
pop
inc
adc
loopne
pop
push
dec
add
and
pop
je
stc
rcrl
xorb
add
dec
jmp
mov
sub
int3
cmp
pop
pop
or
or
aaa
sub
fistl
mov
scas
dec
dec
outsb
movsb
push
mov
push
int3
jno
jl
test
addl
mov
xchg
popf
repz
cmp
clc
mov
cmpsl
mov
adc
hlt
out
ret
imul
inc
mov
cmp
testl
imul
movsb
mov
xchg
push
xor
out
push
cli
pop
insl
xor
addb
test
fcompl
clc
into
out
adc
xor
aad
movsl
sub
lret
and
cmp
inc
xchg
out
and
cmp
les
ds
mov
xchg
ficoms
sarl
inc
pop
push
in
and
lea
out
sbb
jbe
outsb
dec
cwtl
adc
popa
mov
mov
iret
movsb
pusha
adc
mov
cmp
jns
sbbl
movsb
pop
and
jne
mov
mov
xchg
xchg
and
jbe
and
mov
jp
es
je
flds
jnp
dec
popa
daa
add
nop
enter
inc
push
or
or
fildll
sahf
cmc
jecxz
mov
mov
sub
loop
sub
inc
and
dec
gs
sub
lret
fstp
cmp
clc
or
adc
cmpsl
inc
dec
push
lret
loope
cwtl
jg
sbb
shrd
pop
cmpsl
xchg
mov
sarb
stos
outsb
in
ret
push
es
mov
pop
push
xor
sub
push
pop
pushf
jl
pop
sbb
je
cmp
stos
sti
cmpsb
jno
pop
pop
sub
les
mov
mov
pusha
lock
jb
orb
cmp
sbb
hlt
aaa
arpl
adc
add
or
xor
nop
or
nop
dec
pusha
xchg
fdivs
jns
imul
js
testl
ljmp
sub
jbe
sbb
aas
es
inc
loope
lret
pop
imul
adc
xchg
or
cmc
mov
sub
add
add
jo
repz
movsl
inc
lods
jp
jns
cmpsl
cmpps
cwtl
packssdw
cmpsl
cmp
das
ret
cld
adc
not
mov
push
rorb
mov
imul
int
sbb
sub
jnp
jne
cmp
mov
pusha
in
and
mov
jo
adc
int
or
mov
adc
lcall
adcl
jno
jb
test
mov
and
mov
mov
stos
stos
mov
or
cltd
push
xchg
in
sarl
stos
inc
popf
jmp
add
adc
cli
ja
pop
cmc
mov
push
xchg
mov
mov
jns
repnz
js
cmc
rolb
mov
mov
sbb
sti
pop
ja
inc
lahf
push
js
loop
iret
xor
scas
xor
and
sbb
cmpsb
les
add
inc
out
mov
sub
sub
rorl
rorb
test
cmp
test
imul
js
jmp
cli
xor
pop
jle
push
mov
xchg
mov
add
ret
sahf
xlat
or
bnd
push
aas
gs
push
loope
test
jns
adc
movsb
hlt
pop
jmp
adc
pop
ss
addr16
cli
aam
or
sbb
adc
xchg
ljmp
mov
in
lret
mov
mov
jo
add
sahf
adc
insl
and
shll
fwait
dec
ljmp
es
fnstenv
nop
inc
addb
idivl
arpl
push
jl
or
pusha
int
cmp
mov
sbbb
sar
ficomps
aaa
idivl
cmp
cld
add
repnz
push
xorl
enter
mov
xchg
mov
inc
xor
lcall
and
push
jecxz
push
loopne
cld
test
int3
pop
inc
cmp
fcomp
cld
mov
data16
push
fcomp
jp
xor
push
aaa
aaa
int
stos
inc
ret
dec
in
or
out
mov
xor
or
xchg
pushf
shr
stos
mov
push
lret
das
xchg
sub
push
sbb
cwtl
sbb
adc
cltd
cmp
outsl
or
jecxz
iret
mov
or
mov
lcall
push
cmc
inc
adc
xor
fisubl
mov
fisubs
or
push
pop
pop
push
pushf
add
jecxz
stos
call
cmpsb
mov
fldl
or
test
fisttps
divl
js
repz
fnsave
imul
test
rorb
roll
push
xor
xchg
mov
sbb
sub
mov
or
xchg
jmp
pcmpeqd
pop
inc
sub
mov
and
daa
outsl
adc
clc
gs
and
cld
cmpb
cli
or
lret
add
cmp
cmp
test
mov
test
add
mov
jbe
pop
sbb
addl
mov
rorb
imul
popf
mov
test
dec
mov
mov
cmp
testl
push
aas
fs
outsb
mov
rclb
sub
sub
test
inc
sub
pop
cmp
pop
mov
cmpps
fisttps
inc
fstps
cmpsl
and
outsb
mov
add
xor
push
jne
add
sbb
jns
lea
sbb
in
dec
enter
rcll
push
loope
add
pushf
sub
cmp
pop
xlat
repz
pop
rcrb
mov
cltd
mov
xchg
daa
mov
dec
test
pop
cltd
mov
add
cmp
pop
das
sbb
loop
add
fsubs
aad
divl
pop
push
dec
sbb
mov
mov
nop
call
push
in
add
inc
add
jecxz
les
mov
push
mov
daa
scas
pop
push
xor
shrl
add
sub
pop
imul
cmpsl
xor
fldenv
pushf
xor
push
stos
jg
ret
push
jl
push
stos
test
inc
lahf
pop
shl
inc
push
rcll
test
fidivrs
and
sahf
dec
add
out
clc
xchg
call
or
mov
or
and
insl
lea
mov
mov
pop
lods
sbb
icebp
shlb
and
push
jmp
pop
stos
mov
xchg
in
cmpb
inc
test
aas
jne
or
inc
fistpll
scas
insb
ja
popa
dec
ja
pop
or
push
push
mov
mov
xor
mov
add
jp
xchg
mov
jge
xor
sub
es
test
inc
dec
lret
movsl
ret
cmpsl
mov
pop
sbb
xor
fwait
or
test
in
and
mov
mov
ja
outsl
jge
sbbl
das
dec
pop
imulb
xor
or
mov
cmp
in
pop
outsl
daa
addl
negb
outsl
in
fdivs
call
stc
rcrl
lods
mov
dec
out
push
fcmovnb
cmp
jo
testb
je
sub
jnp
popa
mov
xchg
shrb
mov
ss
jp
sub
dec
fs
mov
dec
in
negb
cmp
mov
fwait
mov
lahf
lahf
sbb
iret
or
cmp
push
lods
cwtl
pop
and
arpl
adc
fimuls
sbb
jl
or
xor
aas
scas
icebp
xor
scas
divl
popa
aam
sbb
stos
into
stc
loopne
movsl
sarb
inc
xchg
inc
rol
out
aad
pop
and
push
test
cmp
shl
fistpl
movsl
idivl
lods
ja
loope
ficoml
pop
and
mov
fstl
daa
xchg
dec
scas
incl
mov
ret
sbb
stos
test
sbb
adc
sub
pop
xchg
cli
mov
sbb
jle
xchg
repnz
xlat
sub
dec
std
ljmp
sub
sbb
pop
and
jle
or
inc
pop
lock
mov
xchg
inc
shl
cli
int3
xchg
iret
inc
cmp
je
mov
mov
xor
shll
mov
xor
add
and
insl
fs
xor
fidivs
std
mov
bnd
fwait
in
les
sub
sub
mov
mov
sbb
cmp
sbb
ljmp
inc
push
and
daa
push
or
push
mov
lods
cs
cmp
xchg
and
pop
mov
pop
cmp
inc
in
daa
or
ftst
sub
inc
incl
fbstp
mov
arpl
jle
push
or
fsubrs
mov
xor
mov
andl
xor
testb
je
xchg
sbb
nop
jl
or
cmp
rcl
push
or
ret
sbb
ljmp
mov
jmp
push
adc
inc
pop
pop
mov
lahf
sarb
scas
lock
mov
sti
insb
cld
xchg
inc
test
call
add
in
jne
leave
mov
clc
in
jl
nop
jecxz
pop
adc
test
xor
ljmp
inc
mov
popa
dec
xchg
les
stos
cwtl
aam
xchg
and
and
adc
idiv
mov
xchg
insl
push
adc
fwait
jge
fisttps
bnd
cltd
mov
out
mov
jp
jp
ret
test
cli
push
std
jle
sbb
mov
mov
pop
and
mov
jns
jp
addr16
inc
xor
xor
aaa
adc
shrb
mov
rcrb
notb
int
pushf
inc
gs
sbb
fidivs
aam
daa
lret
pop
xlat
js
out
repnz
aad
dec
cmp
mov
dec
lahf
add
inc
xchg
jecxz
loopne
push
popl
mov
das
jne
outsb
mov
movb
push
push
cmc
jnp
frstor
dec
cmp
sbb
mov
lds
lock
sbb
imul
les
push
lock
adc
mov
outsb
adc
stos
adc
rolb
lea
ljmp
cmp
sbb
mov
pop
int3
in
push
cld
dec
lds
cmp
test
lcall
mov
and
dec
inc
cmp
rol
sbb
arpl
mov
pop
sub
imul
adc
sahf
xchg
loop
xor
insb
inc
xor
or
add
xor
mov
stos
mov
cltd
push
and
push
inc
mov
sub
mov
stc
pop
call
outsl
jo
xor
sub
loop
xor
aaa
mov
sbb
in
jmp
mov
shrb
nop
dec
pushf
or
inc
cmpb
jl
repnz
xchg
sub
push
movsb
adc
cmp
cmp
leave
popf
inc
or
jle
call
xorb
pop
subl
push
jno
cltd
jae
sbb
scas
jmp
push
movsb
push
adc
insb
jmp
pushf
sarb
cmp
testl
jge
fistpll
mov
mov
js
jno
push
in
inc
xor
and
mov
loopne
jmp
loop
inc
adc
push
stos
mov
roll
dec
mov
nop
cld
jecxz
cmp
iret
aam
cmp
sarl
mov
aad
dec
dec
mov
bound
add
jmp
scas
sub
mov
sub
sahf
jno
fnstsw
int
jp
mov
fnstcw
sub
shrl
loop
dec
and
pop
inc
jmp
jne
jge
cmp
andb
inc
xchg
pop
or
sbbb
mov
sub
arpl
cltd
mov
xor
add
jno
pop
jbe
push
xor
add
fcomps
push
int
insb
lea
out
add
inc
or
dec
jae
je
mov
pop
and
jae
mov
es
and
jmp
lcall
nop
bnd
pop
xor
adc
add
jmp
in
scas
or
dec
cmp
mov
pop
lcall
adc
jb
push
dec
add
or
jo
clc
inc
add
leave
dec
incb
xor
pushf
mov
cmp
cmp
inc
loope
xchg
inc
ja
jns
pusha
jp
popf
les
aaa
repnz
xchg
cli
jge
sub
fwait
daa
dec
pop
neg
lds
jns
push
int
pop
out
into
das
sbb
pop
adc
sub
mov
add
in
test
xchg
adc
aas
mov
xor
sahf
push
sub
cld
and
add
jp
add
mov
dec
pop
popf
movsb
pop
add
test
push
jmp
fisttpl
shrb
mov
mov
and
add
je
lcall
mov
push
int
jo,pt
adc
push
lcall
jo
call
and
add
cmpsl
adc
mov
rcl
mov
sub
adc
std
cmp
jae
mov
pop
das
repnz
div
and
paddusb
inc
ja
aas
adc
cmpsb
cltd
jl
stos
jb
xchg
xchg
xor
xchg
mov
pop
cmp
dec
or
rcrb
jae
and
xchg
xor
push
in
or
xor
xor
pop
push
leave
mov
out
jns
pop
adc
enter
mov
out
and
inc
push
push
movsb
mov
xchg
pop
out
in
xlat
in
cmp
dec
test
cli
loop
aad
xchg
xchg
sbb
das
and
jae
mov
mov
outsb
add
push
xor
adc
or
loopne
lock
xchg
and
jo
mov
lret
push
push
mov
out
jmp
jns
mov
movsb
pop
xchg
das
xchg
xchg
mov
daa
sub
mov
dec
mov
push
iret
cmpsl
pop
fldl
pop
push
mov
ret
inc
mov
lahf
sbb
test
sub
les
subb
or
imul
jmp
shrb
das
ficoml
les
stos
imul
pop
mov
js
pop
dec
aas
std
mov
or
aaa
clc
cmp
cli
cmp
aad
xor
pop
push
iret
test
into
push
jecxz
outsb
adcb
ljmp
sbb
faddl
push
xor
sbb
insb
mov
pop
xchg
dec
mov
and
and
out
push
out
mov
fwait
es
xlat
xchg
jle
iret
dec
add
dec
cltd
sbbl
fildll
lods
insl
std
xor
cli
push
adc
cmp
or
xchg
xor
in
sub
xchg
xor
inc
pop
mov
in
idivl
outsb
sub
dec
push
adc
pop
jecxz
enter
in
add
sub
cmp
aas
cmp
fisubl
nop
cmp
jb
jno
mov
push
lds
push
rcrl
jns
fiadds
fistpl
adc
jp
loope
jnp
add
iret
xor
dec
inc
dec
sbb
add
dec
pop
or
outsl
mov
mov
stc
rcl
cmc
lods
pop
testl
scas
fidivrs
cs
xor
mov
fdivl
lret
add
scas
mov
mov
bound
inc
dec
test
or
aas
and
mov
fdivp
inc
inc
mov
lcall
inc
icebp
std
lds
inc
loope
xchg
sbb
cs
push
sub
insb
lods
dec
repz
mov
inc
push
insl
mov
aam
xor
in
mov
pop
jb
inc
sbb
or
sbb
testl
pop
scas
cli
cwtl
jg
mov
sub
pop
push
ret
xchg
push
add
in
add
imul
loopne
cltd
iret
jns
bound
ja
dec
xchg
cltd
cwtl
ds
push
sub
sub
scas
sti
sub
test
jg
movsb
jno
sbb
sub
shl
pop
repz
enter
cmp
inc
das
mov
xchg
push
test
mov
and
xor
int3
out
push
mov
insl
dec
jmp
imul
or
dec
sub
loop
lea
stos
fsubrs
add
lret
pop
xor
xchg
sbbl
test
dec
pop
jl
pop
je
sub
ljmp
pop
inc
ret
test
jo
inc
xchg
mov
insb
aaa
xchg
lahf
mov
jnp
dec
ror
cltd
mov
mov
sbb
dec
sahf
out
xor
cltd
jmp
mov
mov
adc
xchg
fidivrl
hlt
mov
ja
xor
mov
fidivs
xor
test
and
out
sbb
push
std
pop
loop
call
std
mov
xlat
push
mov
insl
push
sbb
push
pop
cmp
out
repz
jg
mov
dec
cmp
aam
push
mov
enter
pop
add
orb
dec
xor
lods
dec
testl
and
sbb
push
pop
in
jb
adc
stc
pop
inc
inc
aam
fmul
mov
bound
stos
leave
ja
subb
pop
ret
ja
mov
cld
inc
cmp
sbb
jnp
lret
cmp
cmp
jmp
and
mov
push
push
addb
pop
scas
loope
xchg
cld
in
iret
push
cld
bound
xchg
jmp
or
inc
sahf
adc
nop
mov
mov
mov
sarl
cmp
movsl
nop
fcoml
mov
int3
mov
mov
cwtl
pop
stc
xor
les
pop
push
inc
in
or
daa
fsubrl
out
arpl
jno
nop
pop
inc
pop
leave
jae
insl
jb
cmp
add
test
mov
into
cltd
sub
fbstp
cmc
cmc
add
std
shlb
out
xor
loope
popf
lahf
push
clc
xor
dec
cli
fisttps
mov
cmp
dec
insb
clc
data16
xor
push
jnp
dec
inc
int
jbe
loop
or
sbb
ja
push
test
mov
pop
jp
aas
pop
sbb
adc
adcl
push
mov
dec
in
xchg
mov
mov
dec
cmp
cmc
push
sti
bound
push
mov
add
cmp
mov
add
sbb
jbe
mov
cmp
and
pushl
mov
insl
sub
add
shlb
shrl
repnz
mov
into
push
sub
stos
adc
gs
mov
sub
jl
adc
xchg
ljmp
test
jl
cmpsl
inc
cmp
fisttpll
push
dec
lahf
mov
xchg
pop
xchg
or
and
add
mov
fsubrs
xor
push
and
push
sub
and
pop
lock
xchg
cmp
rcrb
cmpsb
or
mov
xchg
or
xchg
lock
adc
shrl
inc
dec
mov
arpl
shll
xlat
adc
imul
push
and
mov
mov
xlat
dec
jb
imulb
bound
or
dec
xchg
mov
jne
sub
fmull
faddl
pop
mov
inc
lahf
lock
ret
out
sti
into
xchg
mov
jl
or
dec
inc
push
jg
rcll
lret
mov
scas
pop
in
jnp
loop
pop
lret
sti
inc
int3
and
jl
cld
popa
and
jmp
loope
ljmp
xchg
or
jg
add
sub
cmc
adc
jb
adc
sbb
xchg
test
jecxz
vpdpbusds
mov
push
cmpl
idivb
in
xchg
test
and
lods
fwait
and
push
dec
sahf
mov
mov
dec
pop
stos
scas
clc
mov
test
lea
lds
insb
push
push
sub
pop
dec
aad
and
xor
cli
cli
sbb
insb
mov
mov
xchg
pop
lds
ja
test
or
pop
xchg
pop
je
xor
es
arpl
loopne
nop
ss
push
mov
stos
rcr
mov
jmp
movsl
pop
pop
adcl
int
enter
ds
mov
pop
movsl
add
xchg
out
cmp
in
insb
xlat
xchg
cmp
pop
dec
enter
mov
dec
leave
dec
jl
loopne
pop
fdivrl
push
sbb
and
hlt
daa
addr16
pop
gs
test
or
add
inc
inc
adc
sbb
jl
scas
add
out
hlt
imul
sub
cmp
cld
push
sub
mov
mov
loop
insl
test
jns
mov
jo
ljmp
mov
jae
decl
sbb
dec
mov
add
test
dec
inc
and
test
add
inc
xor
call
jae
mov
popf
push
test
mov
sub
push
in
push
icebp
hlt
jmp
sbb
sarl
jecxz
cs
mov
insl
mov
lcall
xchg
mov
imul
scas
fcomp
cmpsb
pop
enter
mov
test
cmp
or
add
sbb
leave
loope
sub
push
dec
mov
das
test
mov
push
mov
cmc
divl
pushf
pop
scas
sub
mov
daa
push
cmp
into
push
cmp
push
jg
ds
add
in
add
shlb
inc
push
pop
dec
outsb
ljmp
fdivrl
xor
stos
iret
mov
or
jmp
insb
sbb
ja
lock
fmuls
mov
sarb
fs
jmp
cs
cmp
xchg
rorb
jo
loop
cmp
or
mov
jo
inc
call
inc
sub
loope
cmp
sub
adc
sbb
mov
loopne
inc
into
xchg
push
popf
push
in
testb
adc
mov
jno
sarl
bound
xchg
out
dec
lds
or
lods
dec
ljmp
mov
insl
aaa
movsb
push
mov
outsb
inc
pushw
shl
jno
arpl
lcall
lods
sub
hlt
jmp
mov
xchg
sub
mov
insl
sahf
cli
xor
mov
mov
dec
mov
inc
push
sti
xchg
outsl
inc
mov
popf
push
jno
inc
add
xor
cmp
sbb
inc
inc
sub
repnz
repnz
xchg
sahf
fdivrs
sbb
scas
pop
sub
jge
xchg
aad
push
and
dec
ret
pop
and
inc
rcr
in
in
cmpsl
ss
push
out
add
inc
push
pop
mov
dec
dec
pop
int3
adcl
jae
mov
and
setb
push
push
add
imul
xor
lahf
je
movsb
push
shll
jo
neg
jle
cmp
dec
push
or
scas
iret
pop
pop
adc
sbb
mov
mov
insb
pop
sahf
stc
out
mov
mov
mov
subl
add
sub
daa
inc
addr16
lods
inc
adc
rclb
jl
test
dec
jmp
mov
ret
add
cmp
xlat
push
mov
add
ficoms
push
push
stos
mov
loopne
pop
adc
jbe
movsl
jne
pushf
roll
stos
fwait
mov
pop
push
out
pop
test
rolb
rcll
in
jnp
and
sti
jg
adc
cmp
mov
ja
push
xchg
sahf
xchg
jmp
jo
sbb
flds
mov
ss
negl
lods
push
add
dec
scas
dec
sbb
adc
aas
inc
enter
push
insb
xor
sub
mov
mov
xchg
out
es
cmp
mov
shll
xor
cmpsl
xchg
or
jno
adc
mov
scas
mov
adcl
ja
xchg
adc
fdivl
jb
test
scas
mov
sbb
test
jb
push
push
mov
lds
inc
fwait
jmp
icebp
stos
add
std
test
pop
inc
sbb
ljmp
xor
add
mov
mov
cmp
out
xchg
xchg
loop
cmpsl
mov
add
sub
and
pop
sub
inc
es
lahf
inc
or
outsl
and
leave
fadd
push
cld
sub
ljmp
loop
mov
pushf
mov
xchg
nop
mov
scas
jno
adc
lahf
sbb
out
lods
xlat
pop
jle
pop
cmp
inc
add
mov
add
inc
nop
sbb
mov
test
gs
or
outsb
jb
or
sarb
call
sar
faddl
xchg
decl
bound
leave
dec
jmp
pop
out
mov
jg
fldl
pusha
popf
popf
test
popa
cmpl
push
adc
lock
xor
int
movsb
in
inc
sbb
push
add
jl
aad
pop
negl
clc
jmp
cwtl
lea
notb
dec
inc
movsl
mov
push
fwait
sub
cs
vmwrite
fistl
jne
jae
adc
sbb
iret
std
xchg
pop
in
push
ficoms
ja
aam
test
iret
movsb
xchg
cmp
mov
lods
xchg
pop
fs
out
sub
hlt
mov
lret
mov
in
jmp
xorb
icebp
add
jo
stos
test
pop
fiaddl
jbe
aas
adc
push
mov
and
sbb
xchg
movsl
jmp
dec
shlb
out
xorl
dec
cld
insl
lahf
in
fmuls
decb
movsl
hlt
imul
xorl
pop
jae
lcall
orl
es
rol
cli
mov
rolb
std
mov
lahf
cmpsl
stos
xchg
sub
sbb
test
gs
mov
add
mov
or
push
loop
inc
ficoms
into
jnp
pushf
sbb
jg
imul
subb
dec
std
iret
and
out
fcompl
jb
xor
xor
out
sbb
xor
xchg
push
pop
test
mov
fwait
testl
loop
jnp
mov
mov
mov
enter
xor
lret
lds
jnp
nop
es
sahf
inc
mov
outsl
xchg
inc
mov
cmp
hlt
dec
aam
mov
or
push
outsb
enter
mov
fnstenv
add
adc
arpl
pop
nop
xor
mov
shrl
fistpl
mov
addr16
xchg
std
daa
lods
in
cmp
jns
mov
pop
xchg
and
and
sbb
loop
sbb
sub
icebp
jg
or
add
leave
jecxz
sbb
push
pop
jl
cltd
sub
stc
cmp
out
stos
fdivrs
and
cld
sub
sbb
mov
jge
cltd
xlat
xchg
or
push
inc
mov
and
test
imul
mov
lea
lds
orl
imul
sub
in
mov
testl
add
lahf
adc
push
inc
jle
mov
clc
cmp
add
mov
jge
push
test
sbb
in
lahf
popa
adc
xchg
stc
popf
mov
sahf
mov
lods
ja
mov
xor
das
add
ror
lret
rcr
and
mul
adc
clc
lods
scas
jbe
movsl
fnsave
popf
out
aas
andl
ss
imul
jmp
xchg
lock
movb
xor
scas
clc
and
jnp
mov
inc
hlt
mov
shl
jl
lahf
sbb
dec
shld
dec
out
test
mov
inc
xchg
das
mov
push
add
dec
iret
adc
xor
cmpsl
test
push
inc
lea
jg
xor
mov
dec
pop
dec
push
mov
adc
xor
sarl
push
minps
aas
or
rolb
push
jno
decb
fildll
fwait
cmp
xlat
sarb
cwtl
inc
mov
lods
test
std
sbb
mov
es
sahf
cmpsb
lock
scas
test
xchg
sub
mov
dec
cmpsb
push
inc
push
dec
jle
push
xor
cs
xchg
shrl
ret
je
in
xor
ljmp
aas
cmpsl
sub
cmpsl
or
push
enter
shr
hlt
mov
cmc
rcrl
out
testb
cmp
fistps
adc
pop
mov
push
repnz
push
test
or
mov
sti
push
inc
in
push
int3
xchg
inc
push
mov
mov
dec
xchg
mov
movsb
mov
lret
stos
js
sbb
add
push
inc
or
push
mov
sub
cmp
and
sbb
jge
sbb
decb
push
dec
lds
ja
stc
lcall
stc
push
fiaddl
mov
mov
adc
movsl
push
sbb
loop
cld
and
scas
aad
lcall
inc
lret
sub
sbb
in
popf
cmp
mov
mov
imul
and
lea
and
add
test
es
aam
lods
es
mov
mov
roll
jge
sbb
xlat
andl
fucom
ret
pop
pushf
enter
aam
xchg
xor
mov
lcall
lods
mov
je
loope
sub
jne
mov
inc
mov
jecxz
jmp
adc
rorl
mov
mov
xor
mov
dec
out
mov
test
mov
push
es
js
loope
jnp
jbe
mov
pop
jo
out
rol
je
outsb
and
fdivs
adc
out
cmpsl
ss
loopne
outsb
repz
sub
jne
and
fsubrl
ror
sub
addr16
mov
or
push
scas
outsb
lds
mov
xor
roll
movl
pusha
pop
xchg
sub
lock
loop
mov
dec
scas
dec
xchg
mov
mov
inc
cmc
or
or
inc
in
pop
dec
xchg
and
push
stc
cwtl
imul
repnz
insl
adc
push
je
xchg
js
xchg
repnz
dec
xchg
daa
fimull
jp
out
aam
jne
push
dec
jbe
stc
mov
sub
repz
ja
lods
ficomps
out
test
and
stc
mov
mov
pop
movsb
das
jb
cmpsb
mov
xchg
dec
sti
sub
insb
pop
sub
data16
fwait
xlat
out
dec
aaa
or
out
movb
xchg
incb
jge
aad
fdivrs
out
inc
push
push
daa
ja
jb
jmp
cltd
inc
xchg
shll
sbb
push
sub
mov
dec
into
std
inc
cmova
mov
xor
inc
mov
mov
in
inc
pop
jl
fcom
sbb
out
dec
jecxz
mov
pop
icebp
cs
stc
mov
daa
addb
movsl
into
leave
pop
or
inc
leave
xor
jmp
cmpsb
push
jne
mov
mov
scas
xchg
push
rcrl
pop
loope
popa
iret
cmpsl
jmp
sbb
insb
xchg
es
cmp
gs
push
fistps
out
add
inc
cmp
sbb
push
loopne
cmpsb
mov
aad
call
fisttpll
shlb
clc
imul
sti
dec
inc
dec
cmpsb
inc
fidivrl
mov
pop
push
fcomps
fnsave
add
add
pop
or
add
je
nop
sub
ljmp
xorl
jge
and
and
mov
ja
stc
jo
std
leave
mov
mov
aad
lock
xchg
aam
outsb
fs
cs
repnz
mov
stos
aas
fdivrs
pop
fisubrl
or
negl
cmp
sahf
sbb
int3
fdivs
imul
test
aad
xchg
inc
jno
cmp
jne
cmp
and
add
das
es
adc
shlb
xchg
cli
out
sub
dec
ret
cmp
mov
push
lds
cmp
mov
movsb
dec
push
dec
scas
in
push
rcr
add
sbb
xchg
fnstcw
jb
inc
roll
xchg
xor
into
ret
jnp
clc
nop
or
enter
jo
std
iret
dec
mov
mov
and
push
movl
sbb
shr
aas
xor
fwait
sbb
jl
and
xchg
sub
sub
roll
xchg
mov
push
mov
xlat
xor
test
hlt
xor
daa
pop
push
mov
int3
outsl
pop
je
cmpsl
xchg
mov
enter
jns
dec
push
ja
aam
in
je
cmp
movsb
fwait
std
popa
push
sub
notb
cld
push
gs
push
mov
sbb
test
js
mov
repnz
adc
add
lock
pop
loop
into
clc
or
lret
add
and
outsl
je
sbbb
and
aaa
rclb
add
cmp
or
lret
decl
sti
and
jge
enter
aad
iret
xor
das
xchg
dec
lahf
insb
out
jmp
sti
les
xchg
out
dec
int3
mov
and
andb
mov
adc
cmp
test
mov
sbb
push
sub
and
xchg
daa
push
inc
fucom
inc
pushf
pushf
xchg
push
iret
into
mov
int
or
mov
mov
inc
repnz
push
fidivrs
or
cltd
dec
mov
stos
xor
adc
adc
ja
pop
push
pop
pushf
mov
cs
sub
or
and
push
fs
cmpsl
mov
and
xor
pop
ret
lods
xchg
push
cwtl
rcll
jbe
add
jl
mov
push
mov
sub
gs
mov
cmp
stc
popf
jmpw
mov
repz
push
icebp
imul
inc
jl
pop
inc
lret
xchg
leave
into
xor
stc
or
adc
rcl
loop
mov
mov
lcall
xor
xor
clc
xchg
adc
push
mov
mov
clc
add
testb
pop
jmp
mov
mov
icebp
js
sub
int3
scas
outsb
mov
lcall
and
orb
mov
or
stos
mov
cli
stos
xchg
jl
sbb
lahf
sub
adc
mov
sub
into
and
and
and
mov
out
sbb
inc
pop
add
mov
inc
push
mov
imul
mov
test
mov
pop
loopne
sahf
out
and
push
or
sub
in
adc
test
xchg
xchg
cmp
in
pop
imul
movsl
sub
jae
mov
pop
popa
inc
enter
xchg
jg
add
push
movsl
cmp
or
jo
cmp
stc
push
das
insl
adc
lret
mov
cmp
or
inc
cld
or
fwait
jp
scas
ret
cmpsl
outsl
das
add
cmp
loope
add
add
roll
mov
inc
jno
movsl
lea
cltd
cmp
sub
mov
mov
subl
pop
xor
inc
in
mov
mov
inc
sub
xor
data16
adc
sub
nop
ja
dec
mov
repz
add
ja
cmp
cmp
adc
je
xor
popf
push
jp
cwtl
addr16
clc
xor
xchg
jo
dec
pusha
hlt
mov
out
loopne
movsb
leave
lcall
imul
sbb
xlat
pop
stos
insb
push
jecxz
xchg
add
xchg
push
xchg
mov
push
lods
sbb
jle
pop
nop
stc
aaa
and
or
in
arpl
aas
mov
and
inc
xchg
mov
xor
test
cmp
nop
repnz
fucom
jnp
les
test
sbb
jl
and
push
movsb
je
adc
and
sbb
imul
pop
mov
jg
inc
mov
or
dec
jl
ret
mov
mov
jns
test
jne
sbb
push
aaa
pusha
cmp
lret
push
out
movsl
or
dec
xor
sub
push
ret
sbb
je
jo
in
jecxz
or
idivl
aad
pop
xchg
mov
push
xchg
fcmovnbe
daa
sub
sbb
sub
aas
xor
into
popa
add
scas
jbe
shr
cmp
jecxz
das
aam
in
and
in
cmp
mov
pop
inc
fwait
mov
mov
mov
ret
ljmp
cmp
or
cld
xchg
fsubrp
sbb
pop
mov
lret
or
mov
mov
cltd
cmp
mov
push
insb
mov
push
orl
repnz
push
mov
pop
shrb
adc
mov
sarl
or
sbb
push
je
hlt
pop
std
dec
repz
cltd
outsb
xchg
push
cmpsl
aad
xor
adc
mov
pop
push
mov
sbb
jmp
jmp
arpl
ficoms
jge
xchg
sahf
adc
cld
mov
test
lret
dec
sar
jae
in
cmp
jnp
mov
add
adc
sbb
in
in
nop
sbb
arpl
mov
arpl
test
adc
into
sub
inc
test
mov
mov
jle
icebp
push
in
lea
scas
insb
int
mov
out
or
inc
mov
ljmp
mov
push
out
arpl
mov
xchg
push
icebp
call
std
iret
inc
add
adc
pop
int3
popa
adc
jmp
jecxz
xchg
shl
xor
jp
mul
sbb
in
xor
xchg
push
fcoml
xchg
adc
xor
inc
cwtl
into
add
jo
mov
sar
adc
jne
add
mov
sbb
inc
and
push
loop
lds
push
pop
jmp
xor
popa
lock
xchg
in
insw
xchg
push
ja
lea
or
sub
mov
insl
pop
repz
or
repz
add
fsubs
js
dec
mov
jns
loopne
add
mov
dec
sub
pusha
xchg
cli
and
flds
inc
shll
jl
inc
enter
dec
stos
fwait
inc
jle
push
testb
mov
or
ret
and
xchg
mov
cs
jl
into
rcrb
pop
push
in
cmp
in
sahf
pop
or
pop
stc
mov
lret
and
adc
je
gs
shlb
sub
addr16
test
popf
dec
or
mov
pop
popa
pop
xchg
in
loope
inc
loopne
lret
push
fcomps
lcall
loopne
sub
jo
xor
movsb
mov
mov
cmpsl
bound
mov
jge
jnp
sbb
in
pop
xor
cmp
pop
dec
jbe
jecxz
loopne
cld
xor
xor
je
and
out
arpl
lret
mov
mov
enter
gs
jbe
in
sbb
sub
inc
icebp
jecxz
pop
push
lds
and
test
xchg
shr
xchg
out
xlat
in
in
std
fmul
add
mov
test
loop
mov
xor
cmc
push
in
adc
in
cmpl
jae
jecxz
sbb
and
jmp
lods
cmp
test
and
popf
das
or
clc
xlat
cli
or
aam
das
shrb
adc
push
push
in
ret
fcomps
lock
outsb
xchg
lea
test
enter
fwait
cs
cs
xor
add
cli
inc
and
push
and
enter
mov
cmpl
mov
jmp
pop
ficomps
cwtl
leave
int
dec
sbb
jge
mov
sbb
adc
cmp
cwtl
sbb
addr16
xor
decb
pushf
inc
shrd
adc
adc
aas
rclb
cmpsb
mov
dec
cmpb
in
imul
push
mov
sub
incb
or
mov
out
scas
mov
shr
in
inc
sub
cmpsb
cmp
xor
scas
popa
xor
push
add
mov
in
xchg
in
pop
test
sbb
mov
cli
xchg
sti
sbbl
out
or
insl
int
in
lret
pop
cmp
add
or
pop
mov
ds
out
inc
loop
shll
sti
jnp
lret
mov
in
fwait
or
add
mov
inc
and
lock
xchg
enter
sbb
ret
xchg
cmp
or
ds
lods
mov
push
or
into
insb
pop
xchg
out
jg
imul
sbb
aaa
loope
outsl
outsl
sbb
pop
and
sbbl
pop
scas
int3
clc
pop
mov
mov
jle
or
mov
repnz
sub
push
xchg
jg
fsubrl
pop
in
mov
sbb
add
clc
sbb
xor
jne
mov
sub
adc
dec
mov
pop
sub
sbbb
bound
in
and
les
sbb
or
scas
sub
ror
in
ja
jecxz
jo
and
cmp
outsb
lds
daa
fsubrp
mov
rcrl
jnp
out
add
jecxz
loop
pop
xchg
push
xorl
xor
out
or
cmpsb
arpl
and
mov
dec
jae
add
mov
out
sti
adc
lret
inc
stos
es
jmp
aas
mov
push
push
mov
and
leave
leave
mov
pop
sbb
test
sub
xchg
in
lahf
int3
fsubs
and
popa
pop
mov
insl
adc
lea
add
mov
out
in
mov
cld
test
mov
jle
xchg
adc
jg
mov
or
cmp
scas
mov
sarb
pushf
sbb
je
sar
jb
hlt
pusha
cmc
jne
mov
pop
ds
icebp
ss
sub
imul
gs
add
push
push
jo
sub
jg
icebp
cmovbe
mov
mul
pop
jg
mov
stos
popa
adc
aad
pavgw
cli
test
movl
jecxz
and
dec
je
icebp
sub
and
out
and
mov
and
dec
divl
in
in
and
cwtl
icebp
add
jle
xor
mov
dec
scas
xchg
dec
nop
mov
sarb
push
daa
aam
cld
popa
mov
jns
push
test
addr16
jne
mov
pop
mov
stos
and
cmp
or
and
cmc
cltd
je
add
cwtl
adc
arpl
and
dec
loopne
fnstsw
cli
clc
scas
lahf
ss
jg
xchg
fs
int
popf
add
mov
test
test
bound
mov
xchg
insl
lcall
divb
or
test
pop
es
sti
mov
inc
add
fisubs
shr
push
shl
lods
cli
lea
and
cld
mov
mov
push
push
cmp
mov
pushf
xchg
jle
idivb
bound
ret
imul
pop
rcrb
inc
sbb
mov
or
call
insl
sbbb
addl
jge
adc
push
add
fs
add
cs
sub
cmp
push
jmp
dec
addr16
sbb
sub
popf
adc
xor
sahf
scas
adc
in
xor
mov
add
loop
jne
dec
daa
xor
and
mov
xchg
scas
mov
clc
bound
sbb
and
jnp
hlt
outsl
sub
jle
add
xor
pushf
xchg
mov
xchg
add
xchg
dec
lods
call
sbb
pop
sbb
aaa
out
dec
addb
push
xor
test
or
mov
inc
sbb
and
in
inc
popa
aaa
mov
push
mov
lret
pop
cmpsl
rclb
inc
jle
lahf
or
insl
xchg
inc
dec
and
inc
xchg
std
and
pusha
xor
rcrb
daa
test
stos
rcl
rorl
loop
xchg
pop
jge
sbb
sub
insb
mov
stos
gs
out
test
cwtl
stos
pop
mov
aam
fisttpll
test
sbb
dec
fistpl
or
jnp
popf
dec
stos
adc
pop
adc
adc
dec
jl
incl
push
cwtl
fisubl
fnstsw
and
leave
sub
iret
push
inc
idivb
cld
inc
aas
cmp
mov
jne
imul
mov
xchg
push
sbbl
outsl
pop
cmpsb
dec
lods
call
gs
orb
and
sbbl
mov
vmptrld
lods
jp
ficomps
into
sub
xchg
push
lea
inc
imul
rcl
pop
iret
pop
lods
stos
not
add
cltd
insl
faddl
mov
cmp
add
push
and
pop
and
adc
fxch
sub
mov
cs
dec
rcrl
mov
loope
repz
xchg
jae
fisubrl
mov
test
jecxz
subb
sbbb
mov
call
xchg
into
icebp
fcoms
cmp
inc
mov
pop
jns
hlt
mov
cs
mov
adc
jo
cs
cmp
sub
mov
lret
jmp
les
dec
mov
mov
cmp
fidivrl
jae
adcb
lret
xor
fwait
jecxz
repnz
fimuls
pop
cwtl
pop
jmp
inc
xor
cmp
addl
mov
mov
out
ja
ljmp
fldenv
data16
lea
adc
scas
addr16
ljmp
cmpsb
daa
cltd
jmp
sti
xor
test
dec
loop
insl
mov
es
mov
mov
popa
mov
lods
ds
mov
or
pusha
aad
or
shlb
in
xchg
xchg
into
enter
or
lcall
aaa
xchg
sbb
fmul
lock
mov
ret
loopne
jg
jb
fistl
pushw
inc
rolb
jbe
in
adc
out
and
and
cmp
dec
out
sahf
push
icebp
out
or
dec
mov
idivb
fadd
mov
pop
aad
mov
adc
sub
pop
cmp
ret
dec
mov
arpl
jl
pop
scas
jmp
xlat
aad
sbb
addr16
sbb
add
rorl
xchg
inc
push
nop
push
pusha
mov
lock
faddl
mov
fwait
les
scas
cld
xchg
dec
loopne
out
test
add
jno
aad
cmp
and
jl
loopne
mov
push
push
inc
xchg
xchg
loope
movsb
jno
test
cmpsb
jle
xchg
fnsave
cmpsb
cmp
mov
add
rclb
dec
es
cmp
repnz
xor
mov
insl
xchg
dec
popa
loope
loopne
push
xchg
or
aad
and
dec
lods
adc
sub
mov
and
faddl
mov
add
ja
xchg
add
ja
cmpsl
jp
outsb
out
jnp
and
ror
push
sub
cs
ss
add
scas
dec
cltd
sub
shl
and
hlt
fwait
jne
imul
mov
out
fs
leave
into
out
jl
sub
stc
in
ret
adc
aam
test
sbb
push
mov
and
mov
sbb
dec
mov
clc
shlb
xchg
les
data16
dec
sbb
loopne
jle
sbb
fcomps
popf
inc
sub
outsl
aam
js
push
dec
cmp
jo
push
add
inc
xlat
jns
mov
sbb
cltd
pop
dec
adc
jne
mov
bound
mov
std
divb
pop
push
sbb
es
aaa
das
mov
inc
sbb
push
xor
daa
lods
sub
cltd
jmp
out
stc
xlat
and
lods
loopne
add
cli
ljmp
cmp
dec
pop
fidivs
mov
xchg
sbb
loope
adc
or
or
clc
push
mov
inc
xor
mov
mov
add
jmp
sbb
in
dec
out
movsb
push
add
out
mov
push
jns
movsl
outsb
sahf
mov
lcall
rcr
nop
lret
push
test
cmp
pop
adc
mov
sbb
sub
in
push
push
xchg
leave
ficoml
loop
and
out
test
lret
cmp
fs
jp
aam
cmp
push
icebp
xchg
cmp
cmpsb
xor
out
xchg
movsb
or
xchg
jle
or
ret
shll
lahf
inc
adc
pushfw
stc
sbb
das
pop
fdivp
lahf
imul
inc
jle
cmp
gs
sti
jle
cmpsb
xor
xor
and
pop
inc
dec
adcl
push
js
mov
mov
mov
sbb
arpl
mov
fwait
xlat
sahf
sub
lahf
in
xchg
push
mulb
sub
inc
rcrb
sti
xor
or
mov
test
xchg
mov
add
test
jb
xorl
cmp
mov
inc
xchg
mov
xchg
rorb
fstps
mov
dec
sahf
je
jb
das
rcrb
push
shrb
lcall
pusha
add
in
push
ret
sub
insl
xor
xor
jmp
scas
iret
mov
clc
xchg
nop
lock
xchg
flds
jbe
movsl
ja
pop
cli
out
imul
mov
cli
mov
push
xor
mov
dec
mov
sbb
cmp
xor
adc
cmp
insl
xor
pop
fistpl
sbb
xchg
jae
xchg
jb
pop
jl
es
lahf
into
jo
aaa
push
sub
dec
sbbb
negb
jg
xor
add
sub
xchg
pop
mov
sbb
int
dec
pop
sti
sub
shll
mov
xchg
out
mov
and
adc
dec
test
mov
arpl
mov
pop
inc
mov
adc
popf
lea
sbb
inc
xor
adc
adc
int
or
adc
aad
adc
in
jnp
jge
scas
mov
mov
sbb
push
cltd
ja
mov
orb
or
shlb
inc
mov
sub
mov
pop
sbb
imul
stc
mov
xchg
stos
jb
sti
iret
cmp
fwait
push
sub
jp
gs
fmull
pushf
mov
jmp
pop
outsl
jb
push
scas
push
jl
xchg
adc
sbb
fcmovnbe
lret
adc
mov
popa
pop
es
inc
mov
stos
add
xor
jmp
pop
push
cwtl
dec
mov
pop
cmpsb
jo
add
mov
cltd
cmp
scas
out
test
and
test
inc
in
fcompp
outsb
addr16
insb
mov
dec
jle
roll
xchg
fsubrs
mov
pop
xor
dec
in
stos
stc
scas
mov
mov
enter
mov
out
sbb
xchg
jp
scas
push
loop
iret
pushf
andb
test
mov
cmpsb
mov
test
cltd
pop
mov
pop
orps
push
loop
inc
add
cmp
xor
mov
stos
std
xchg
mov
mov
cmp
cwtl
sbbl
pop
or
and
mov
iret
push
lods
ds
push
mov
sub
aad
xor
sbb
es
jg
mov
push
repz
rorb
xor
int
mov
jmp
mov
add
push
jae
lock
cmp
pop
mov
push
pop
cmp
popf
jmp
jb
sub
mov
sbbb
in
dec
mov
and
fcmovnb
and
push
inc
xchg
cmpsl
push
sub
pop
and
push
inc
pushw
sub
sub
cmc
and
jle
push
dec
and
cmp
mov
jnp
jge
hlt
sbb
jbe
lock
into
outsl
sub
xchg
into
jmp
mov
icebp
push
mov
add
inc
mov
aam
push
inc
sbb
in
sbb
mov
jne
and
arpl
dec
stc
xchg
jmp
sub
jnp
leave
add
lret
push
lods
xchg
adc
pop
sbb
aam
pop
cmp
addr16
cld
jno
fstpl
cltd
xor
adc
test
stc
pop
divb
aas
rcll
push
call
add
pop
mov
sarb
dec
fdivp
clc
shl
scas
mov
ret
lret
cmp
push
std
mov
rep
or
cwtl
pop
xor
ja
lahf
inc
add
push
cmp
imul
es
push
mov
dec
pop
mov
aam
gs
int
rolb
pop
push
daa
xchg
sbb
push
or
jbe
mov
lcall
push
xorl
int3
inc
sbb
sbb
lock
cmp
jbe
cmp
jl
scas
repnz
jg
mov
nop
cmp
jnp
xchg
imul
dec
notl
inc
jge
jg
stos
sub
jne
jae
add
jmp
mulb
fidivrl
dec
pop
cmpsl
leave
mov
repz
jno
mov
roll
pop
push
rcr
insl
int3
push
das
adc
pop
or
push
dec
into
mov
std
cld
popa
xor
sbb
xor
adc
loop
mov
sbb
aam
out
or
aas
ja
lods
fld
aam
addr16
cmpsl
lods
adc
xor
add
nop
lds
insb
lahf
pop
rorl
xchg
cmp
aas
mov
push
es
mov
mov
and
cld
lea
cltd
xor
mov
sbb
popf
jg
push
sub
iret
pop
push
jge
add
fwait
mov
je
lret
stos
test
dec
jge
aaa
and
inc
or
ds
jb
mov
jo
paddsb
and
mov
fbld
lea
xor
cmp
pop
push
or
sahf
xacquire
inc
mov
pop
mov
inc
bound
shl
sbb
test
out
jmp
mov
addb
ficoms
inc
mov
push
sub
mov
and
insl
fbld
jo
insl
ror
mov
inc
xor
data16
ds
jnp
daa
inc
jecxz
lods
add
adc
add
xor
loope
fnstenv
xchg
xchg
mov
repz
inc
lcall
xor
stos
xor
or
aas
mov
mov
test
ret
xchg
arpl
push
add
adc
mov
mov
lods
les
rorl
imul
notl
adc
aam
xor
jmp
rclb
leave
cmp
adc
and
data16
sbbb
jnp
jmp
lret
cwtl
je
inc
cmp
repz
adc
out
or
xor
mov
fidivrs
or
lock
in
fsub
es
push
psubb
stos
xor
lret
daa
xchg
cmp
cmp
leave
pop
or
or
jecxz
mov
mov
lock
xchg
adc
xlat
and
jo
pop
jp
mov
adc
xlat
xchg
mov
sub
dec
call
lock
mov
das
dec
dec
mov
sub
repnz
repz
xchg
xchg
mov
fsts
and
lods
and
fcomps
xor
cli
mov
insl
cmp
pop
push
daa
or
in
addr16
std
negb
aam
xor
push
out
xchg
sub
loop
arpl
inc
mov
notl
int
pop
push
jb
mov
jo
dec
add
jns
xchg
push
dec
jae
xchg
inc
inc
into
push
inc
add
test
lret
in
mov
mov
cmp
mov
sahf
test
cwtl
inc
xorb
scas
sub
inc
mov
dec
or
pop
mov
repz
ss
cmpsl
jp
daa
add
imul
sub
push
scas
cmp
aad
js
or
mov
or
pushf
in
push
add
ja
push
das
popl
sbbl
sub
movsb
stos
add
lock
xlat
xchg
int
loope,pt
enter
pushf
into
jge
mov
sub
insb
lods
pop
sbb
inc
aaa
leave
jecxz
mov
mov
inc
mov
bound
sahf
fs
icebp
lea
lods
sbb
packuswb
jo
loope
xlat
jns
mov
test
cmp
sarb
es
hlt
sbb
adc
sub
xor
test
lahf
pop
xchg
push
add
stos
ds
jbe
clc
xlat
xor
push
and
xor
sbb
push
xchg
pop
in
cmp
push
addr16
lock
jp
mov
leave
and
int3
and
dec
pop
xchg
mov
sbbb
pushl
cltd
in
jg
xchg
scas
in
xchg
jmp
lea
frstor
dec
movsl
inc
mov
arpl
dec
or
mov
aam
movsb
rclb
or
or
mov
and
dec
xor
mov
cs
cltd
jns
jp
nop
lcall
xchg
and
repnz
shlb
inc
sub
add
dec
dec
test
rcrb
dec
decb
rclb
pop
xor
cwtl
stc
mov
test
sahf
dec
idivb
push
cmp
sub
adc
pop
xchg
jg
sub
xchg
daa
lock
je
mov
pop
mov
mov
outsl
lret
jne
fadds
fcom
inc
clc
sub
dec
shrl
or
xchg
jnp
push
fldenv
lds
xchg
inc
pop
jmp
clc
cmpsb
push
xor
xchg
jo
in
call
mov
std
out
xchg
loopne
and
rcrb
pop
into
ja
cli
pop
ljmp
xor
movsb
cwtl
seto
sarl
sub
xlat
or
jno
rol
das
sub
inc
jns
fiaddl
xor
adc
ret
push
out
js
shlb
cwtl
push
outsb
xchg
add
inc
dec
cli
fdivrs
cmp
test
repz
outsb
jae
cmpsl
testb
add
cmpsl
adc
iret
sbb
gs
aam
cltd
and
movsl
fwait
out
in
cvtps2pi
mov
rolb
mov
pop
sbb
stc
jg
lret
arpl
pop
mulb
cwtl
mov
into
add
xchg
js
push
xor
ljmp
test
test
inc
jns
test
and
pusha
mov
xor
adc
out
jns
ret
mov
notl
shl
in
cmp
rclb
inc
stos
push
pop
mov
or
js
loope
cmp
xchg
xor
sub
ret
jno
imul
and
add
xchg
lds
sar
pop
pop
mov
loope
dec
mov
popf
mov
or
hlt
outsl
mov
out
pop
push
mov
cmp
sbb
mov
imul
pop
or
push
femms
jmp
and
cltd
aas
jbe
flds
inc
sub
mov
push
pop
sbb
iret
mov
insl
sub
xlat
adc
push
mov
mov
inc
into
lret
pushf
pop
mov
rol
cmpl
sub
pop
jle
adc
sub
xchg
sub
jmp
push
xor
out
hlt
aam
jne
andb
push
lea
in
jno
scas
pop
pop
enter
imul
mov
add
xlat
dec
and
mov
bnd
popf
sub
orl
jo
stos
inc
mov
xor
ret
dec
gs
mov
jns
subl
or
mov
xor
movaps
xchg
fstl
push
sahf
xchg
ret
imul
mov
cs
out
push
movsb
inc
lds
sub
je
fmull
cmp
jne
mov
movsl
xor
push
pushw
pop
sarl
mov
mov
sub
sbb
jne
nop
xor
repnz
int3
mov
imul
mov
fstl
adc
aas
sub
sbb
loopne
add
outsb
inc
data16
pop
push
sti
repz
imul
pop
adcl
je
sbb
mov
popa
jae
jbe
jae
imulb
jo
sarl
or
xchg
jns
movsb
or
roll
les
cli
or
mov
aam
mov
int
lods
adc
lahf
shlb
cwtl
and
pop
jae
or
lods
add
stos
push
and
in
sti
repz
lock
mov
pop
sbb
xchg
or
jb
pushf
xchg
outsb
fldenv
jnp
adc
std
ja
cld
and
jbe
popa
mov
xchg
fmulp
jl
and
push
negl
jge
and
xor
jns
popa
movsb
inc
inc
nop
subb
in
sub
lcall
leave
inc
cmp
mov
test
faddl
or
xchg
adc
dec
roll
pop
inc
rclb
adc
mov
outsl
mov
xchg
sbb
xchg
in
mov
mov
int
adc
test
adc
imul
xchg
sub
cmpsl
out
cmp
mov
cmp
shl
mov
sub
lret
mov
pusha
les
sbb
outsl
dec
subl
test
addr16
pop
addr16
xor
hlt
rcr
push
paddsw
cli
dec
insl
adc
jl
mov
xor
or
push
std
or
testb
mov
jbe
mov
mov
es
add
mov
push
inc
and
jecxz
addr16
test
sbb
mov
pop
adc
jg
push
mov
fucomip
ret
pop
mov
test
dec
jecxz
cwtl
test
push
test
test
pop
test
popf
or
mov
mov
and
bound
lds
sahf
push
mov
rcll
adcb
or
mov
add
aad
loope
and
cli
int
add
lret
adc
dec
sub
stos
in
rorl
mov
cs
mov
aam
or
mov
movsl
dec
pop
out
aad
cs
dec
push
or
sbb
xchg
movl
xor
stos
jecxz
adc
std
mov
adc
shrb
pop
sub
dec
enter
add
pop
or
incb
or
rorl
pushf
je
ljmp
test
stos
mov
pop
cmp
inc
cmp
sbb
cmp
push
aad
enter
imul
fcompl
adc
xor
lock
pushl
jno
cmpsl
lods
pop
xor
jb
jnp
cmp
addr16
lock
mov
nop
inc
lret
mov
inc
aas
popf
shl
jno
dec
dec
inc
pop
fwait
es
pop
inc
ljmp
pop
inc
jne
bound
or
call
inc
jmp
cmpsb
jecxz
cmc
mov
test
mov
mov
pop
inc
repz
pushl
inc
and
sub
int3
sub
ljmp
out
mov
inc
or
xchg
icebp
inc
lret
push
pushfw
insb
jl
test
ja
movsb
sub
ja
adc
mov
hlt
daa
mov
sub
leave
pushf
xchg
mov
aas
cmpsl
jge
mov
pop
nop
in
sub
clc
dec
orb
out
add
fsubrp
jp
jl
mov
ds
arpl
into
mov
mov
aaa
push
in
push
pusha
repz
aaa
mov
stos
andb
mov
adcl
and
jl
jmp
es
sbb
sub
jmp
jl
adc
outsl
jnp
adc
or
jg
or
inc
sub
xorb
sbb
ss
inc
dec
or
sti
sbb
pop
filds
jo
dec
es
sub
mov
lds
pop
xor
sbb
mov
add
mov
je
cmp
jno
shlb
pushf
jo
icebp
imul
add
int3
fimull
jle
mov
dec
xor
and
divl
pop
fadds
scas
and
xlat
mov
add
mov
call
mov
icebp
pop
cmpsb
pop
mov
repz
aas
push
lock
and
add
cmp
push
jnp
and
lea
je
fisttpl
mov
or
cmp
jge
test
dec
sti
gs
decl
xor
or
lds
test
rclb
jbe
pusha
ljmpw
jmp
push
pop
clc
pop
mov
adc
adc
or
sub
xchg
gs
sahf
pusha
xchg
pusha
jle
xchg
add
jne
cmc
and
jmp
movsl
bsr
mov
popa
jecxz
mov
cmp
adc
lahf
inc
dec
pop
xchg
cli
shr
cmp
or
inc
pop
xor
dec
sbbb
fstps
pop
xor
in
push
leave
cld
sub
mov
and
jl
add
fimuls
loopne
add
lds
xor
dec
inc
mov
pop
psrad
jo
int3
and
sbb
iret
rol
lds
inc
lcall
mov
into
lods
insl
fcoml
jecxz
xchg
sub
inc
movsb
outsl
mov
shlb
lods
dec
or
and
push
movsb
imul
jp
and
ss
push
sub
xor
ret
add
adc
pop
pop
dec
fwait
jae
or
push
out
ret
or
sbb
mov
xchg
dec
jne
xchg
push
in
fdivl
sbb
lock
cmp
jb
lcall
push
movsb
or
dec
mov
subb
and
movsl
add
in
push
mov
push
jle
xchg
mov
into
in
movb
push
inc
inc
fisubl
test
xor
aaa
xchg
divl
or
movsl
in
cmp
inc
stc
push
push
in
nop
out
sbb
jb
push
pop
ret
roll
dec
dec
fisubrl
push
pop
sub
outsb
out
dec
adc
cmp
fisttpl
mov
outsl
movsl
jge
mov
je
mov
and
fsubr
cld
pop
pop
ss
into
and
mov
into
jno
sub
mov
mov
push
push
or
jae
cs
mov
mov
cwtl
mov
pop
sbb
mov
mov
stc
and
adc
pop
and
cmpsb
jne
aas
add
cmp
jbe
mov
or
mov
add
fdivr
and
xchg
fwait
cwtl
lret
fidivl
into
lahf
out
adcb
and
sbb
inc
stc
mov
xchg
in
arpl
push
rcrb
arpl
dec
scas
xchg
pop
mov
mov
pusha
fidivrl
adc
sub
cmp
mov
repz
sbb
cmp
xchg
adc
out
jl
inc
add
lods
pushf
jae
inc
inc
mov
push
mov
and
out
out
or
loop
inc
xchg
insb
pop
mov
and
arpl
pop
push
mov
xchg
dec
xchg
jns
mov
push
rclb
pop
push
iret
inc
jb
push
negb
dec
popa
jae
xchg
fstps
mov
mov
mov
movb
mov
into
mov
pop
hlt
imul
sbb
xchg
adc
lahf
mov
sbb
out
adc
ds
xor
cmpsl
jbe
inc
lret
inc
or
rcr
cli
in
xchg
repz
or
mov
aaa
daa
mov
outsl
cmp
pushf
dec
sbb
rcl
addr16
or
add
std
cmp
dec
pop
lock
cmp
inc
mov
aaa
das
mov
jno
fcoml
dec
xor
mov
sbb
sbb
jne
push
inc
pop
rcrl
push
mov
push
xchg
or
out
push
cmp
cmp
lcall
arpl
popf
jl
xchg
cmp
comiss
pop
ret
xchg
aaa
movsl
adc
data16
jns
out
jmp
dec
data16
sbb
xchg
aam
movsb
or
dec
leave
sbb
inc
mov
sar
imul
cmp
sahf
pop
dec
mov
cmpsb
add
sbb
rcrl
mov
mov
sbb
daa
insb
in
cmp
dec
cwtl
popf
imulb
sti
stc
xchg
popf
mov
shlb
popa
and
mov
push
xor
jg
inc
jmp
test
xchg
push
ds
jbe
aas
repz
sub
and
xchg
sti
shll
xor
mov
add
push
push
data16
sbb
pop
aaa
sub
fs
pusha
lea
les
mov
jnp
imul
testb
add
dec
fstl
mov
ds
dec
and
jb
pop
inc
pop
jecxz
jle
arpl
sbb
imul
mov
je
pop
xchg
cmpsl
push
fnsave
adc
arpl
std
sub
stos
stos
cmp
fdivr
mov
leave
jo
adc
cwtl
nopl
call
sub
enter
in
arpl
push
jg
pop
xor
fwait
addr16
fisttpll
and
xor
add
push
xor
sbb
sub
mov
mov
fcoms
dec
clc
dec
in
daa
push
mov
push
fwait
xchg
inc
xchg
mov
jge
mov
mov
in
fistl
insb
test
pmullw
lds
and
mov
xchg
sarb
test
xchg
add
or
pop
sbb
and
push
rcrb
testl
inc
movsb
push
mov
ret
sub
ffree
add
andl
clc
in
sarb
push
or
call
jns
pop
aam
and
dec
dec
mov
push
cwtl
nop
stc
mov
adc
and
outsb
or
xor
mov
fxam
js
mov
sub
mov
or
push
scas
pusha
push
cmp
mov
fs
and
push
jns
je
mov
lds
movsb
cmp
lcall
xor
notl
gs
xchg
jns
mov
dec
xchg
jbe
daa
lahf
or
sti
dec
addr16
dec
pop
fsubs
sbb
xor
fwait
test
xor
dec
xlat
hlt
imul
pop
out
test
js
inc
loope
fsubrl
ss
push
pop
shl
test
imul
mov
jns
dec
cmp
cmp
xchg
sbbb
jbe
sti
sub
mov
add
or
mov
leave
mov
aaa
movsb
data16
mov
mov
jge
xlat
xor
inc
xchg
add
mov
pop
sub
jp
hlt
sub
test
int3
in
push
aam
lret
cmp
xchg
xchg
loopne
out
mov
and
add
push
sbb
fisttps
inc
out
test
pop
xor
fmuls
sbb
adc
ljmp
arpl
les
pop
or
shll
in
push
cs
into
jp
push
das
test
subb
cwtl
jg
sub
inc
mov
adc
pop
divps
jecxz
ret
mov
adc
popf
fadd
mov
xorl
mov
dec
jnp
ss
jg
cld
xor
push
popa
add
into
iret
mov
mov
push
xchg
mov
imul
lcall
and
ljmp
mov
pop
or
cmpsl
cmp
inc
push
lods
lea
mov
insl
fdivrs
sbb
mov
outsl
jno
dec
jae
pop
sub
je
push
mov
add
cmp
adc
out
mov
js
add
ss
xlat
xor
xchg
les
inc
mov
mov
dec
cli
out
iret
or
jg
fsubrs
clc
dec
filds
lret
sub
mov
dec
jne
fldenv
dec
dec
mov
xchg
mov
mov
mov
aaa
js
add
jmp
pop
shrl
mov
jae
pop
xchg
push
insb
notl
pop
test
adc
xchg
je
pop
jmp
sbb
mov
inc
mov
xchg
rcrl
dec
movsl
imul
les
mov
jno
scas
popa
adc
jno
adc
pop
add
add
mov
mov
or
jno
mov
movsb
sbb
stos
dec
jo
sahf
mov
sti
push
test
cmp
inc
aad
nop
or
das
mov
xchg
mov
mov
push
xor
idivl
loopne
inc
sbb
int
aaa
xchg
add
add
jno
sub
mov
mov
notl
ret
push
ret
xchg
dec
popf
mov
decl
rorl
sub
clc
jno
ret
or
outsb
mov
pop
rorb
out
in
arpl
jg
repz
dec
and
mov
jnp
mov
scas
cmpsb
lcall
inc
lock
test
aad
inc
ret
mov
out
fsubrs
movsl
jecxz
rcll
xor
andl
imul
push
push
into
and
add
and
fmull
cld
pop
jnp
push
mov
mov
aas
arpl
adcb
push
outsl
xchg
cmpb
pop
fwait
add
test
in
test
cs
add
into
jbe
aad
inc
add
mov
out
sbbl
and
in
push
out
and
or
adc
and
cwtl
scas
and
fbstp
add
cmp
lods
inc
push
sub
adc
lret
add
sarb
test
adc
subl
jno
enter
into
shl
dec
pop
seto
cmp
push
mov
sub
subl
sbb
xchg
in
lods
dec
or
jp
test
push
xchg
ds
mov
pop
into
fcmovu
js
pop
hlt
xor
xlat
pop
aad
cs
fimull
mov
imul
jnp
iret
xor
pusha
push
cli
mov
xchg
jno
push
push
fwait
lret
sahf
mov
adc
sbb
xchg
aaa
xchg
inc
pop
jb
mov
cwtl
mov
insb
mov
cmc
shll
and
mov
mov
push
jno
push
mov
imul
stc
imulb
cwtl
insl
fdiv
dec
in
fs
cmovnp
int
jnp
orl
jl
jg
mov
out
int3
daa
inc
mov
lret
add
popf
aaa
push
test
aaa
inc
mov
rolb
lcall
js
xor
lods
cwtl
add
fcmovb
jno
outsb
mov
pop
pop
sbb
into
rolb
in
lock
xor
jb
jge
movsl
out
jae
call
xor
sub
and
mov
or
and
dec
xor
rclb
ficoml
rcrb
ja
jb
xchg
mov
mov
enter
jo
pop
sbb
insb
jmp
adc
sub
ror
in
insb
sub
rcr
mov
repnz
dec
fldl
add
and
lahf
cwtl
push
into
adcl
inc
dec
jns
or
maxps
cltd
mov
js
add
repnz
dec
sub
lds
sbb
loope
adc
xchg
xchg
xlat
mov
das
ficoml
xor
or
xabort
arpl
into
lret
jp
dec
das
pop
mov
xor
lds
pop
dec
jae
ret
cmp
lock
imul
outsb
xlat
ret
mov
cli
push
lret
popa
ljmp
xor
mov
and
dec
xchg
out
sub
and
loopne
ds
sahf
mov
sbb
mov
out
mov
cmp
test
mov
test
rcrb
mov
mov
in
push
int
cld
out
popf
cmp
jne
push
lods
data16
push
outsb
ja
or
and
sub
add
stos
imul
sbb
scas
in
cmp
mov
add
sar
push
das
lods
insl
mull
gs
ja
mov
mov
mov
movsl
test
cmp
mov
pop
jns
dec
xor
and
out
cld
in
pop
mov
dec
inc
shrb
popf
pop
insb
mov
and
std
or
stos
repz
icebp
rcrl
out
mov
fstl
into
mov
mov
cmp
sbb
mov
fidivrl
cmc
pop
jne
adcl
push
mov
dec
sbb
inc
data16
movsl
dec
sahf
stc
repnz
pop
mov
and
ret
cwtl
lods
sti
mov
out
dec
push
mov
jb
nop
adcl
mov
mov
mov
mov
cmpsb
push
pop
jnp
mov
inc
sarb
adc
cmp
imul
push
bound
sbb
fucomp
xor
das
imul
dec
cwtl
mov
xchg
lcall
rcrl
and
popa
xlat
inc
dec
jo
notb
dec
fcos
sub
insb
pop
pushf
mov
and
jmp
adc
dec
sahf
pushf
adc
pop
int3
sub
push
out
in
outsl
out
es
out
adc
cmp
mov
rolb
out
and
add
loopne
stos
ja
inc
and
cmp
into
jmp
in
xchg
push
cmp
adc
mov
add
cmp
repz
add
dec
push
sbb
movsl
cs
lcall
push
pop
adc
ss
rcr
jl
xchg
data16
and
jl
insl
lds
outsl
pushf
and
hlt
xchg
adcb
jmp
jecxz
fadd
imul
int3
xor
xchg
cmp
inc
jmp
leave
or
int3
enter
mov
out
mov
repz
dec
add
sub
add
push
pop
inc
stc
mov
mov
and
outsb
in
leave
dec
push
cmp
xor
dec
inc
divps
mov
into
movsl
sahf
mov
outsb
outsl
sbb
mov
ds
iret
sbb
adc
add
test
pop
shlb
stos
popa
test
push
loop
faddl
popl
inc
cmp
mov
xorl
pop
leave
mov
test
stos
in
movsl
inc
in
fninit
add
sub
sbb
xlat
aaa
les
out
lahf
shl
lret
inc
xchg
add
divb
loope
mov
inc
stos
pop
add
mov
fwait
iret
subl
popa
cmp
jmp
data16
loope
out
test
repz
cmpsb
clc
inc
cmp
pop
cmp
mov
insb
mov
pop
xor
sahf
inc
pop
repnz
mov
adc
sbb
pop
xchg
sub
das
xlat
jns
scas
and
xor
xchg
and
jnp
dec
insb
loope
adc
push
xor
inc
jbe
xor
cmc
test
lock
mov
mov
imulb
mov
fstpl
push
or
fisubrs
mov
lret
dec
add
mov
es
fwait
dec
sti
mov
xchg
pop
lcall
push
jmp
pop
pop
mov
ljmp
jnp
shr
mov
ljmp
inc
mov
dec
ds
rorl
xchg
pop
mov
movsb
rolb
rcll
loopne
out
dec
mov
or
js
shlb
jg
add
add
sti
gs
pop
mov
pshufw
clc
fcompl
xorl
addl
sub
adc
dec
out
mov
mov
and
xor
add
movsb
test
out
jl
mov
inc
insl
jno
dec
cltd
adc
jbe
add
ss
xchg
add
cmp
movsl
es
in
out
inc
roll
mov
lret
outsl
or
jnp
out
leave
pusha
or
mov
bound
sbb
hlt
pop
push
sbb
xlat
adc
loop
xchg
cmpsl
or
fists
lahf
pop
in
test
aas
dec
jae
jno
sbbb
call
cltd
cmp
aam
gs
sbb
or
mov
ss
mov
dec
aas
arpl
cs
pop
xchg
lods
xchg
and
js
in
add
pop
roll
sbb
or
dec
xor
popf
dec
ljmp
push
test
scas
nop
ucomiss
add
adc
and
mov
fwait
js
mov
ja
nop
inc
outsb
push
mov
mov
inc
jp
or
sbb
sbb
jmp
push
push
mov
into
mov
add
push
jp
hlt
test
pop
outsl
add
scas
stc
dec
das
cmp
jl
stos
push
loopne
and
wbinvd
sbb
jae
mov
cltd
jns
adcl
jle
sbb
int3
ret
sbb
inc
mov
cmp
cs
adc
mov
nop
jge
fidivl
mov
rcrb
lods
pop
xor
xchg
cwtl
dec
mov
pop
out
in
loopne
inc
repnz
ds
ss
clc
sbb
je
aam
gs
fsubrl
stos
xchg
pop
test
test
jmp
ljmp
push
lds
xchg
cwtl
push
jg
pop
imul
ret
ret
xor
enter
cmp
test
js
xor
lods
das
out
pop
mov
popf
mov
ljmp
sub
call
add
jmp
ja
push
mov
insb
insb
dec
jns
lds
faddl
das
outsl
insl
js
xor
lahf
xchg
push
je
clc
mov
jge
setbe
mov
out
xchg
jge
loope
lahf
ljmp
or
mov
repz
xchg
lods
scas
aas
mov
jg
jmp
mov
jmp
push
or
pop
xchg
xor
loop
push
push
xor
sub
cmp
repz
mov
test
xchg
pop
dec
adc
test
mov
mov
sbb
outsl
aam
xor
pop
xchg
mov
add
xchg
push
mov
lods
jle
scas
iret
sub
or
out
arpl
sbb
or
add
pusha
nop
fs
xchg
fprem1
nop
fsubs
and
push
add
sub
stos
arpl
adc
jno
out
out
push
pop
rcrl
push
adc
cmpsl
sbb
dec
push
jne
cmp
xlat
ja
arpl
dec
filds
pop
mov
sub
adc
lods
jle
and
xchg
add
enter
xor
jne
in
pop
push
inc
xchg
test
push
into
jecxz
loop
cmp
sub
sbb
repnz
mov
push
lock
aam
lret
out
pop
js
and
repz
loope
lcall
mov
les
cltd
popf
repz
sub
push
es
mov
lock
roll
pop
mov
data16
mov
fstps
movb
xlat
jge
fiadds
pop
sub
and
mov
xor
add
dec
into
dec
xchg
xchg
pop
arpl
and
cmp
scas
testl
inc
inc
lret
jae
movsl
leave
insl
stos
push
cli
rcl
jb
lcall
in
or
movsl
jmp
in
inc
jp
fdivl
add
mov
pop
jge
daa
enter
sub
lahf
les
xchg
inc
call
and
stc
push
mov
mov
adc
aaa
push
add
incb
mov
lcall
sarl
icebp
jb
adc
jno
movsb
sub
xchg
mov
pop
or
mov
jecxz
cmpsb
sub
repz
jmp
lods
xchg
push
adc
mov
cmp
aam
add
sbbb
jmp
sbb
push
and
bound
data16
cmc
jmp
lock
cltd
shlb
popa
lods
xchg
stc
bound
push
mov
lock
pop
adcb
ror
mov
xchg
jmp
xchg
push
add
push
into
das
jns
pop
xor
into
sub
lcall
or
jmp
push
dec
lock
scas
or
add
sbb
push
int3
inc
pop
inc
sbb
loop
cmc
xlat
shl
push
push
insb
fsubp
pcmpgtb
jb
lret
ss
mulb
insb
sbb
pop
dec
in
loop
fnstsw
xchg
popa
jp
dec
hlt
or
sbb
and
pop
push
dec
xchg
pop
dec
cwtl
stos
loope
lea
out
mov
or
addr16
xchg
jno
cmp
sbb
dec
mov
xchg
sahf
fimuls
cmp
jnp
adc
stos
cmpsl
ficomps
cmp
sub
mov
and
loopne
dec
sub
pop
adc
fidivl
in
xchg
mov
jmp
inc
ret
pop
cwtl
add
sub
sbb
jo
jne
push
popa
jae
mov
ficoms
and
pop
aad
sub
mov
lret
jo
ss
push
push
scas
cltd
xor
add
cmp
dec
ror
pop
mov
std
fcoml
test
dec
xchg
mov
in
fs
cmpsb
pop
js
cmp
stos
mov
and
xchg
scas
std
or
ljmp
jns
jb
pop
loop
stc
jge
xor
xor
test
inc
add
adc
shr
inc
jp
test
mov
adc
js
mov
repz
fisubs
leave
je
xchg
add
xchg
mov
inc
adc
in
in
mov
inc
shll
pusha
mov
xchg
inc
jecxz
ja
unpcklps
sti
dec
fwait
sub
mov
adc
loope
jg
test
insb
and
pop
stos
pushf
jmp
or
outsb
mov
pop
or
aaa
mov
sti
inc
push
test
popa
popf
imul
xchg
aam
adc
and
and
mov
jle
nop
add
adc
in
scas
lahf
mov
cmp
cmp
rcr
add
sbb
loope
sbb
fnstsw
cld
sub
adc
fwait
imul
lds
adc
push
mov
adc
sbb
mov
rclb
xchg
js
cwtl
adc
or
test
decb
xor
shr
ror
fldt
stos
pop
sub
cld
aad
push
xor
mov
mov
ficoms
xor
inc
nop
xor
adc
fisttps
loop
pop
shlb
incl
dec
push
pop
ret
jecxz
or
dec
lods
lea
fucomip
pop
jno
addr16
cmp
dec
rorb
loopne
xchg
mov
inc
std
inc
scas
icebp
or
imulb
pop
pop
mov
out
and
adc
int3
sti
stos
xchg
xlat
iret
jae
insb
aad
jge
inc
fs
xor
xchg
out
pop
cltd
and
lcall
cmp
sti
xchg
adc
lock
cs
popf
add
out
stos
jl
mov
jbe
lock
mov
cmp
and
out
cltd
mov
negl
call
dec
aas
sub
sbbl
out
mov
adc
imulb
mov
and
iret
pushf
add
and
fimull
scas
loopne
cli
daa
or
in
int3
dec
cmp
adcb
int3
add
sbb
jl
lock
aam
pop
testl
js
subl
les
inc
dec
pushf
or
add
imul
push
in
inc
out
xor
lea
push
xchg
sahf
inc
push
mov
dec
out
leave
fildll
repz
int3
icebp
lods
popa
cld
fimuls
dec
lcall
push
jmp
fstpl
adc
int
sub
jne
xor
movsl
out
pushf
call
pop
push
jo
sub
inc
je
push
bound
xor
inc
test
outsl
jno
jno
xor
push
xchg
int
imul
sbb
xchg
aad
jbe
cs
sbb
push
and
and
pop
pop
lds
aaa
shlb
jle
test
cli
jns
push
jmp
ret
lcall
dec
jae
ss
fdivrp
push
dec
mov
or
jge
sub
cmp
imul
xor
sub
add
test
ss
nop
lcall
sbb
hlt
mov
adc
dec
test
mov
sub
cmc
sub
cmpsb
out
sarb
mov
mov
push
and
ficomps
sbb
lret
or
ljmp
cmpsl
jmp
cli
add
sti
cld
mov
sbb
mov
ret
lods
jne
or
mov
inc
les
test
or
nop
mov
xlat
and
imul
jmp
roll
lret
sbb
pop
das
or
fstps
stc
test
push
xor
mov
adc
notl
dec
subl
in
and
iret
addr16
mov
out
mov
cmp
dec
pop
lcall
aad
sbb
in
out
pop
push
sub
add
fiadds
and
pop
sahf
dec
sbbl
add
dec
pop
ds
clc
lahf
int
jnp
mull
jp
fldl
fdivl
lds
in
mov
rcrb
shll
pushf
mov
stos
mov
rolb
sub
popf
mov
mov
int3
push
in
mov
stos
jecxz
loope
jecxz
cmpsb
mov
hlt
xchg
xchg
push
ss
mov
xchg
adc
or
sbb
or
subl
test
aad
lds
inc
push
shl
repnz
mov
in
inc
inc
xlat
mov
dec
je
cmpsb
cmp
fs
inc
add
mull
adc
repnz
icebp
int
inc
std
xchg
pop
popf
stc
gs
inc
or
cmpsl
adc
popf
pop
push
lods
shrb
scas
mov
std
in
jle
addl
inc
cltd
jge
dec
pop
jb
aam
push
mov
clc
imul
mov
push
mov
lcall
adc
jg
mov
inc
scas
in
ficompl
das
pop
iret
jecxz
and
shlb
insb
dec
fidivrl
loopne
data16
sub
cmp
add
cmp
arpl
sbb
cmc
pop
std
pop
rorb
xor
xchg
xchg
pushf
popa
and
mov
mov
cmpsb
push
inc
inc
mov
pop
jo
add
les
test
lret
sbb
cmc
test
lret
in
jle
mov
sub
pushf
divl
leave
fwait
jp
jl
inc
divb
addl
jns
faddl
iret
mov
sbb
lods
xor
pop
xor
cmp
mov
lcall
mov
fldenv
aam
fstl
dec
mov
dec
mov
fnstcw
leave
inc
push
inc
cmpsl
sti
push
into
and
lea
outsb
mov
push
mov
fisttpl
popa
sub
adc
enter
pop
cmp
outsb
fwait
jmp
jle
cmpsl
jo
test
cld
enter
xchg
cmp
in
std
sahf
inc
mov
das
dec
xlat
outsl
add
jle
and
jbe
mov
std
cld
fimull
int3
cmc
test
inc
mov
add
movsl
loope
sbb
pop
add
dec
ds
sub
xchg
or
lds
mov
mov
clc
and
je
scas
push
xor
add
in
lea
test
repnz
cmp
pop
mov
sti
add
lahf
sbb
ds
mov
mov
sub
test
js
lea
movsl
ds
lcall
fnstsw
push
mov
jns
in
inc
clc
inc
call
jl
xor
sub
jno
jmp
inc
hlt
mov
push
dec
ds
and
push
mov
movsb
and
jno
aaa
daa
jmp
push
push
lret
dec
mov
test
sub
stos
dec
sbbb
cmp
fs
sub
or
jb
inc
sub
das
loope
popf
out
xchg
adc
mov
and
insb
mov
lds
ss
adc
xchg
lods
lea
cmp
test
scas
mov
jo
add
xor
pop
mov
mov
pmulhuw
outsb
mov
mov
sub
cmp
jecxz
xchg
inc
popa
cmpsl
push
stos
orl
push
ss
push
mov
push
jmp
jg
int
or
and
clc
inc
mov
dec
je
ret
inc
cmp
out
jno
pop
xchg
xchg
add
divb
shlb
ljmp
mov
jno
aam
or
in
xor
in
inc
repz
jl
pop
and
lcall
rolb
sar
jg
shl
mov
bound
ret
cmc
mov
loope
in
ja
mov
push
cmp
jae
hlt
cmp
daa
mov
cmp
or
xlat
sahf
call
add
iret
xor
enter
or
mov
adc
or
mov
adc
hlt
xlat
icebp
adc
test
mov
sbbb
mov
das
jecxz
test
loop
jne
xor
mov
das
and
int3
cmp
jle
cs
push
pushf
mov
push
into
push
mov
or
push
addl
je
sub
add
arpl
mov
sbbb
cs
insw
and
into
mov
jb
push
mov
and
pop
jbe
adc
orl
int
and
mov
cmpsb
pusha
pop
cmpsl
iret
xchg
add
jae
imul
popf
sbb
inc
jnp
mov
sub
repz
clc
or
jmp
cmp
push
mov
outsb
dec
jge
dec
mov
pushf
repz
xor
pushf
lahf
daa
mov
fsubl
cmc
xorb
aam
dec
jmp
push
and
add
inc
push
xchg
or
test
sbb
or
das
stos
dec
ret
adc
cmp
mov
xor
ss
mov
xor
sbb
pop
iret
xchg
jnp
mov
movsl
fnsave
jb
fidivl
add
stos
lcall
push
das
lods
push
mov
add
ja
mov
xor
mov
in
cli
fiaddl
scas
jbe
add
push
outsb
sahf
insl
cmp
xor
leave
mov
push
fldt
add
add
gs
mov
frstor
jo
xchg
std
jae
testl
sub
adc
and
ret
clc
xchg
inc
loope
add
adc
mov
jle
cltd
sahf
inc
lret
sbb
cmpsl
jmp
scas
dec
insl
adc
loopne
xlat
mov
ja
imul
xchg
repnz
xor
add
hlt
jl
outsb
add
repnz
into
sahf
sbb
fs
shrl
subl
mov
sbbb
xlat
insb
outsl
adc
or
cmp
lods
aad
xlat
fnstsw
mov
out
testl
loopne
shlb
mov
mov
pusha
mov
adc
leave
int3
sub
cmp
test
inc
and
cwtl
xor
dec
out
adc
mov
aas
pushf
hlt
test
aas
xchg
sub
push
inc
js
mov
scas
jb
sbb
clc
ror
outsl
mov
movsl
jmp
pop
xor
out
mov
pop
xchg
cltd
lret
mov
cs
xchg
sub
push
jnp
or
dec
mov
jl
jmp
loopne
cmpsl
inc
dec
cld
dec
dec
mov
sti
mov
xor
in
inc
out
xchg
aad
and
das
subl
xchg
sub
pop
or
bound
outsb
cmp
push
cltd
ffree
ficomps
sbb
mov
xchg
aad
iret
lcall
jns
cltd
andb
aad
push
out
sbb
ret
adc
push
loop,pn
mov
push
inc
imul
adc
les
popa
jl
inc
enter
outsb
fadd
sub
data16
inc
inc
cli
int
inc
andl
icebp
adc
push
mov
jae
cmp
pop
das
add
dec
and
xchg
xchg
adc
arpl
loopne
arpl
xchg
in
stc
xchg
jmp
rolb
incb
sbb
xor
push
cmp
addr16
and
mov
push
popf
mov
xor
or
pushf
push
rcl
mov
mov
sbb
lock
mov
pop
das
dec
dec
repz
inc
ret
test
mov
push
outsl
mov
cmp
sub
mov
push
orb
scas
mov
push
sbb
movsl
jnp
xor
adc
imul
xor
lret
jns
push
mov
or
mov
stc
mov
ja
popf
incb
orb
and
sub
in
insb
push
out
xchg
and
sti
sbb
es
mov
iret
xlat
inc
nop
jnp
out
cmpsl
test
addr16
nop
mov
sbb
ficompl
mov
movsl
adc
outsl
xor
or
lock
xlat
in
jge
push
and
mov
in
lret
mov
stc
push
inc
mov
jg
outsl
fisttpll
add
stc
mov
loope
xchg
xor
mov
sub
jne
mov
jle
cli
es
fs
enter
std
cli
int3
data16
leave
pop
test
test
sbb
imul
jle
lods
mov
dec
add
sub
or
dec
mov
enter
cmp
sub
cmc
mov
dec
pop
dec
movsl
sahf
xchg
push
pop
ja
sbb
ret
or
jl,pt
pusha
or
test
mov
dec
out
cmpsl
outsb
mov
mov
addb
sub
pop
add
icebp
testb
push
call
movsl
call
push
out
mov
lahf
insl
pop
push
insl
cmp
fbld
fisttpl
xchg
inc
mov
out
and
mov
dec
mov
mov
and
sub
mov
loop
pop
adc
int
ds
jae
xchg
mov
stos
sbb
adc
lcall
out
je
ret
cld
out
sbb
das
pushl
jno
rcrb
scas
mov
xorb
in
cmpsb
clc
dec
icebp
xchg
mov
pop
fisubrs
outsl
mov
push
das
scas
xor
xchg
test
loop
and
push
call
push
add
or
shrb
outsb
in
xchg
xor
push
cwtl
icebp
or
loop
dec
or
cwtl
or
xor
xchg
add
pop
fdivrp
pop
rcll
popf
aaa
xchg
sahf
jle
cmp
mov
dec
ret
fs
enter
out
mov
into
jg
call
adc
mov
test
mov
stc
add
sbb
push
sub
outsb
inc
icebp
nop
xchg
sub
mov
daa
aam
cwtl
cmp
clc
out
dec
mov
xor
sub
aam
leave
dec
and
xchg
add
mov
in
adc
mov
sbb
push
adc
mov
testl
jae
jg
xor
xlat
jo
xor
fs
cmp
push
pop
pop
popf
push
lock
lods
les
xchg
inc
xor
and
into
jmp
mov
xor
stc
adc
adc
stc
fcomps
test
jecxz
inc
repnz
repnz
xchg
jo
xchg
out
mov
jbe
jp
test
int3
mov
and
pushf
test
cmp
cmp
add
fwait
insb
pushf
add
mulb
or
push
push
jb
mov
in
cli
fnsave
xchg
push
inc
adcb
gs
gs
dec
add
or
loopne
shrb
lret
pop
push
inc
mov
in
cmpb
cmp
push
push
mov
lcall
or
cwtl
enter
shrl
pop
adc
fdivr
mov
arpl
rorl
cmp
outsl
jbe
push
and
adc
and
jae
fsub
xor
ja
inc
sub
loop
cmp
mov
add
cmpsl
loopne
xchg
iret
pushf
push
lock
hlt
lods
mov
xor
xor
jecxz
pop
xor
pusha
xchg
cmp
cmp
mov
ficoml
dec
lcall
repz
cmc
ja
sarl
jnp
imul
jge
and
icebp
lcall
scas
fdivrs
rcll
mov
in
lds
enter
out
sbb
mov
int
outsw
xor
push
clc
icebp
mov
add
jnp
popf
cmp
push
add
repnz
mov
push
push
inc
ljmp
xchg
andl
loopne
pop
inc
inc
dec
sub
addr16
inc
pop
sbb
out
lret
mov
mov
outsl
jmp
mov
sub
sahf
gs
mov
bound
jns
leave
shll
xor
lds
jno
or
or
out
fildll
mov
out
mov
lods
pop
ja
neg
test
push
mov
mov
xchg
fisttps
scas
outsb
add
loope
hlt
cmp
data16
sbb
adc
or
out
mov
addr16
push
jb
stos
push
lcall
inc
mov
inc
lock
jl
push
inc
lock
rcrl
pop
mov
loopne
sarb
sub
and
lret
and
pop
xor
mov
ss
movsl
add
xchg
stos
nop
sub
shl
adc
les
outsl
je
cld
push
mov
and
pop
cs
mov
push
xchg
loopne
std
test
js
cmp
and
add
leave
mov
pop
adc
pop
dec
sbb
lcall
push
test
mov
in
mov
and
movsb
insb
and
push
sub
les
add
jmp
insb
sbb
mov
push
ja
push
fs
add
rcrb
or
xchg
pop
fldcw
cmp
mov
adc
mov
pushf
and
add
xchg
xchg
fldt
int
inc
jne
les
fabs
test
push
mov
lock
pushf
aas
shl
addr16
mov
dec
daa
mov
test
inc
dec
shrl
icebp
mov
mov
mov
xchg
gs
push
push
push
mov
pop
push
jle
or
test
mov
xchg
shrl
test
xchg
imulb
sub
sub
fs
repz
dec
loopne
movsb
nop
aas
repz
aad
cs
push
push
rcll
hlt
pop
test
or
mov
jge
sti
xchg
popa
cmp
fists
nop
adc
adc
bound
daa
divb
fistpl
shlb
daa
ss
push
push
and
mov
cmp
mov
loop
push
push
xor
lds
lret
mov
call
stos
adc
jmp
push
out
add
cmpsb
rcll
jge
lret
mov
xchg
cmp
int
sub
mov
ss
ds
add
or
dec
test
enter
xchg
out
inc
addr16
or
loopne
ja
fs
pop
xor
outsl
mov
lcall
lcall
xchg
jnp
push
testl
loop
scas
in
imul
and
cmp
dec
shll
adc
outsb
es
jbe
out
fsubr
cmp
js
mov
ror
mov
sbb
addb
fs
out
xor
in
or
std
jne
jl
in
mov
dec
xchg
mov
in
dec
push
das
xchg
or
int3
and
pop
pop
sbb
mov
mov
inc
push
in
xchg
cltd
cmp
in
adc
jb
push
push
aam
add
scas
jo
shl
mov
frstor
lods
mov
rcl
cli
xor
dec
lcall
mov
or
stc
popa
push
cmp
and
fisubl
jle
stos
sahf
sbb
cmp
notl
pop
add
xchg
inc
dec
sbb
fucomi
out
lods
xor
sub
outsl
push
pop
je
pop
mov
adc
outsl
lock
aas
testl
repz
jmp
jbe
jl
push
adc
rcl
mov
adc
daa
sahf
adc
dec
bound
xor
dec
push
mov
ret
pop
and
in
inc
sbb
mov
push
push
sbb
aad
jo
jns
mov
inc
nop
addb
push
enter
push
mov
mov
add
sub
dec
mov
lcall
rcr
loopne
in
pop
pop
push
dec
xchg
out
rorb
jo
scas
xor
fdivl
leave
jnp
cmp
adc
cmp
out
loop
mov
stos
cmc
cmpl
cmp
rcll
mov
sub
in
lods
push
jecxz
adc
mov
lret
mov
aas
xchg
inc
cmp
or
xchg
dec
vmaxps
inc
sbbb
inc
jnp
and
push
pavgb
push
adcb
push
mov
nop
xor
mov
inc
lea
adc
jns
imulb
sbbl
test
test
adc
lock
out
sarl
mov
leave
pop
pop
cli
xchg
popf
scas
cmpsb
mov
dec
movsl
push
scas
sbb
xchg
jle
es
or
ret
cli
cltd
mov
pop
aad
shlb
jge
shl
cmp
inc
adc
jmp
mov
js
cld
scas
rcl
aas
sbb
leave
mov
xchg
jo
arpl
outsl
sub
and
jo
push
movsl
movsl
loopne
addl
lds
js
xchg
iret
xchg
jae
adc
insb
repnz
jae
push
jae
add
mov
fs
adc
rcrl
sbbl
mov
pop
add
mov
andl
inc
add
jmp
fstps
sub
sub
dec
and
mov
adc
sbb
fdivrs
cwtl
pop
add
sub
xlat
aas
scas
shrb
je
ljmp
dec
adc
in
jmp
cltd
rolb
pop
jne
jno
pusha
enter
push
pop
js
dec
insb
dec
push
sbb
fstps
fnstsw
pop
fcoml
lods
ret
mov
sub
cmp
lret
test
rcrb
dec
aaa
pop
popa
xchg
sbb
cld
das
jnp
mov
loopne
xchg
pop
dec
mov
inc
push
lea
dec
mov
mov
pop
lret
popf
or
popf
inc
push
dec
or
mov
loopne
cmpsb
add
cmpsb
jb
lea
push
xchg
pop
cmp
or
lds
pushaw
roll
loope
mov
jecxz
enter
ret
inc
xchg
repnz
cwtl
fstl
or
jge
adc
dec
push
dec
jge
fwait
insl
push
nop
lods
mov
xchg
pop
add
pop
push
js
mov
fiaddl
mov
in
lods
jle
xchg
stc
stos
iret
cmp
xchg
or
push
xchg
inc
xchg
test
mov
sbb
ss
mov
movsl
es
push
mov
add
or
and
in
loop,pn
adc
lret
xchg
pop
jge
and
inc
loopne
push
cmp
iret
pop
xchg
inc
movsbl
loopne
enter
imul
push
lcall
ja
dec
xchg
xchg
mov
sahf
out
sbb
loop
mov
mov
and
out
les
nop
cmpsb
js
mov
decl
es
push
sub
insl
adc
push
in
mov
dec
and
loopne
pop
add
lret
mov
je
stos
jno
sbbb
and
cmp
and
jp
in
mov
enter
sbb
sbb
mov
int
adc
jns
push
jecxz
xor
xchg
push
bound
mov
cmp
jbe
gs
int
cltd
pop
scas
dec
sub
loopne
sub
mov
js
fcomip
jge
pop
mov
dec
pop
out
mov
fstps
push
sbb
add
dec
jb
xlat
xchg
mov
int
add
mov
sub
bound
mov
add
lret
notb
in
cli
test
out
lods
jecxz
pop
sar
arpl
int3
aam
mov
into
and
and
xchg
sbb
dec
xchg
aad
xor
fistps
aad
daa
xchg
xchg
call
cmp
cwtl
vpminub
pushf
xor
insb
fcoms
sbb
cmpsb
shr
and
in
adc
or
addr16
adc
lods
std
inc
ret
sub
ss
es
adc
mov
lea
pop
xor
test
or
ds
mov
xchg
add
mov
add
call
fdivr
dec
jmp
adc
scas
or
cli
xor
sbb
adc
aaa
pop
repz
insl
cwtl
pop
mov
xor
bound
or
push
ret
sbbl
shll
fistpl
xchg
add
popf
xchg
jne
cmpsb
shlb
sahf
dec
insb
jecxz
jle
leave
xor
andl
data16
gs
cmc
jne
je
icebp
xor
add
gs
pop
fists
fldl
lcall
cmp
and
aad
dec
dec
scas
mov
enter
fists
add
and
fadd
stc
mov
sub
sbb
add
std
adc
in
ds
pop
push
std
adc
pusha
sarl
js
clc
mov
cmp
jne
and
push
loop
xlat
cli
dec
inc
mov
push
dec
xor
fmull
sbb
push
jp
inc
sub
jno
or
xchg
cld
lods
dec
out
jmp
hlt
ret
imul
arpl
loop
mov
sbb
mov
and
rcll
and
xor
cmp
and
jns
fadd
push
sbbb
hlt
adc
dec
or
inc
cltd
or
cmp
jns
jb
scas
icebp
pop
cltd
in
insl
cwtl
dec
sub
mov
scas
push
xchg
sarb
cltd
pushl
out
cmpsb
outsb
addr16
sti
ljmp
push
mov
or
inc
push
jnp
cmc
loopne
fidivrl
sahf
jl
adc
mov
pop
jge
ss
mov
sub
xor
out
pop
jbe
or
shlb
in
mov
outsl
movsl
mov
sbb
jb
lret
pushf
icebp
xchg
xchg
fwait
call
fcoms
xor
fcoms
or
pushf
in
jns,pt
push
pusha
out
jp
mov
outsl
in
mov
mov
js
out
adc
rolb
sbb
sbbb
fldt
mulb
sub
xor
das
mov
fstl
xor
pop
cmp
les
test
test
or
or
cmpsb
mov
loope
mov
rclb
mov
jae
out
sbb
stos
les
ss
loope
lahf
test
sub
lahf
call
xor
inc
jecxz
pop
and
cs
push
mov
cs
cld
jbe
std
inc
mov
pop
out
ja
push
ret
cmp
out
int3
sbb
and
cmpsl
sbb
push
std
inc
sbbb
sbb
inc
inc
dec
outsb
dec
mov
cs
sub
mov
jns
movsb
loop
sub
jp
div
and
xor
insb
mov
lock
mov
mov
roll
push
lcall
outsb
pusha
rolb
insb
dec
inc
jns
push
test
adc
imulb
dec
aad
loope
sarl
pushf
lock
xor
xor
mov
and
mov
pop
add
mov
insl
jl
repnz
cs
dec
das
loopne
cmp
fidivrs
mov
jl
sub
cmp
xlat
mov
pop
add
sbb
pop
imul
adc
ja
inc
bnd
mov
push
jle
fucom
rorb
sahf
jns
lock
sub
adc
sbb
test
pop
fistpll
shlb
sahf
push
push
data16
and
movsl
jbe
sarl
das
dec
nop
cmp
push
loope
hlt
lahf
mov
pop
cmp
repz
mov
cmpsl
dec
xchg
loop
lret
lods
jl
push
fimull
adc
je
mov
inc
dec
xor
jge
aam
xchg
push
dec
cmp
divl
rcl
cmp
jle
cld
inc
std
movsb
push
ret
push
rcr
mov
loop
test
icebp
daa
jecxz
mov
xchg
cmpl
out
sub
pop
add
pop
sub
lahf
out
xor
fldl
out
outsb
mov
sbb
push
std
adc
fmulp
loop
or
dec
sahf
in
les
cmp
das
pop
pop
sahf
cmp
pop
mov
stc
pushf
adc
xrelease
lds
push
test
mov
pop
jmp
fs
mov
stos
fdivl
add
out
int3
subps
adc
push
pop
adc
clc
or
enter
popa
enter
stos
sahf
or
cs
jecxz
push
call
test
and
fstps
out
ss
testl
jo
or
push
mov
test
xchg
mov
mov
hlt
into
dec
pop
fwait
add
sahf
cmpsb
xchg
data16
out
cmp
jmp
sub
call
xor
mov
mov
in
inc
test
in
cmp
jg
cmp
or
jbe
fidivs
pop
xchg
jmp
push
mov
cmpsb
test
addl
out
pop
sti
push
ret
lret
lret
pusha
mov
inc
push
lahf
negb
jnp
sti
pop
lock
pushf
cmp
mov
clc
fsubrs
mov
aam
out
rclb
push
jmp
or
test
jns
icebp
sti
cwtl
fabs
dec
shrl
repz
arpl
shll
das
inc
xor
leave
adc
jnp
lahf
dec
aas
outsb
adc
fimuls
repnz
into
xchg
xor
enter
cmp
mov
cmp
xlat
stos
or
push
insb
mov
lods
cld
fyl2x
dec
enter
fsubrp
cld
add
cmp
cmp
pop
aad
adc
dec
mov
cmp
rcrb
sbb
cmp
inc
xchg
or
mov
mov
adc
cmp
and
mov
cmp
and
and
dec
mov
cltd
js
sbbb
fnstsw
sbb
push
jle
add
clc
lahf
mov
pop
sub
ljmp
jnp
or
aam
cmp
sub
ja
inc
orb
push
mov
sbb
xchg
imul
mov
int
sub
loope
test
cs
pop
and
or
fwait
mov
cltd
push
sub
push
mov
xchg
lcall
adc
jns
push
sbb
popf
sub
repz
mov
add
or
stc
lods
cmpsl
pop
sbb
mov
stos
andl
bnd
fistps
in
sub
pop
or
aam
mov
push
push
mull
mov
fcomi
out
xchg
xchg
mov
fwait
insb
addr16
mov
xchg
ret
adc
ljmp
hlt
in
jl
test
in
xor
filds
les
shrl
push
cs
and
jae
sub
ret
lods
filds
pop
mov
jne
arpl
in
xchg
inc
test
sbb
sub
pop
inc
fwait
jl
dec
xor
fcmovnbe
loop
mov
push
hlt
dec
push
xchg
or
xor
sub
into
pop
imul
adc
int
in
outsl
jge
dec
mov
or
lods
fld
jge
out
sbbl
mov
pop
pop
mov
and
imul
pop
and
ret
in
aas
xchg
inc
hlt
data16
adc
xchg
gs
sbb
repz
inc
in
xor
ja
cmc
in
inc
cli
and
cmc
loope
int3
cltd
sub
dec
fwait
inc
pop
call
mov
xchg
roll
and
test
cmp
sub
test
lods
push
bound
push
xchg
ficomps
cwtl
dec
jo
js
cmc
sti
mov
push
mov
ret
hlt
xchg
jbe
mulb
push
and
mov
inc
bound
imul
hlt
add
loopne
adc
lds
dec
inc
pop
negl
shl
jb
adc
movsl
das
pop
fs
mov
mov
adc
fldt
jns
fs
mov
stos
cmp
or
inc
lret
lods
int3
in
jl
jo
sbb
pop
cmp
xchg
stos
in
sbb
pop
movb
mov
mov
lock
cmpsb
sbb
sbb
fdivr
mov
cmpsl
and
mov
clc
ljmp
xchg
out
movl
inc
cli
add
das
pusha
pop
mov
stos
pop
cwtl
divb
jecxz
push
xchg
test
lods
leave
mov
into
mov
pop
xchg
mov
das
push
sbb
sti
lcall
add
jg
lods
and
xchg
push
or
aaa
pop
in
push
dec
sbb
cld
pop
adc
adc
in
nop
pop
add
jb
inc
fs
lods
mov
mov
inc
pop
test
adcl
and
pop
inc
cmp
jns
sbb
or
xchg
cmpsb
scas
mov
lret
and
scas
mov
and
or
pop
mov
aad
fistpl
gs
push
dec
stos
and
sub
fs
sub
cmp
lahf
jae
mov
xor
imul
btr
ds
jne
jb
icebp
or
lret
push
jmp
addr16
decb
ljmp
shrl
jnp
ficoms
les
and
lds
add
dec
out
sbb
ret
dec
lret
divb
in
jbe
push
mov
test
inc
jg
inc
mov
inc
mov
mov
dec
fdivs
fs
int
roll
mov
xor
sub
jp
lcall
inc
sahf
fdivrl
inc
mov
adc
das
mov
jne
das
fldl
in
mov
daa
mov
in
cwtl
mov
mov
mov
ss
jecxz
into
stos
call
pop
xchg
cltd
fcompl
ret
shlb
add
inc
xchg
pop
and
lods
push
ret
xchg
nop
sub
ret
xor
cmpsl
mov
adc
mov
fwait
pop
xchg
cmp
ret
mov
in
rcr
and
sbb
fs
xor
subb
or
push
testl
fld
mov
xor
or
inc
mov
xchg
xchg
movsl
scas
jo
ficoml
mov
icebp
pop
fstp
dec
call
rclb
inc
dec
and
mov
mov
int
inc
mov
or
jnp
ja
mov
out
push
in
fwait
push
insl
mov
jge
adc
or
mov
inc
popf
scas
fsubrl
insl
xor
inc
enter
int3
mov
pushf
fnsave
pop
dec
push
mov
test
movsl
sub
jp
bound
int
and
test
mov
and
cmp
cli
pop
push
sub
add
jl
sub
pusha
lods
xchg
jmp
aaa
push
lahf
xchg
cld
mov
jmp
dec
cmp
push
je
repnz
test
xor
aaa
fistl
dec
mov
inc
adc
pushl
jl
fsub
xchg
out
add
cmp
lock
hlt
add
jecxz
dec
in
jmp
test
dec
ja
push
xor
lcall
in
insl
push
hlt
and
scas
mov
out
lret
pop
sbb
pop
addr16
pop
cs
dec
inc
add
and
call
adc
add
cmp
frndint
xlat
cli
xchg
add
mov
daa
or
push
push
cld
sub
repnz
xchg
ljmp
or
mov
ret
rcrl
mov
dec
mov
cmp
adcb
xchg
call
loope
pop
mov
cmp
shlb
mov
ds
jmp
jmp
xor
inc
jl
push
daa
push
vmovups
mov
mov
repnz
ror
dec
popa
mov
test
dec
cmc
mov
inc
lods
push
sub
cmp
or
aas
and
pusha
xchg
cwtl
lahf
push
cmp
ja
add
mov
pop
in
stos
jp
sbb
fstpt
and
jbe
test
mov
xchg
movsl
xchg
jae
xchg
push
nop
fstpt
icebp
pop
and
daa
cmc
inc
inc
fyl2xp1
xchg
inc
sub
addr16
iret
push
add
mov
loopne
out
test
add
cmp
filds
iret
and
daa
je
jbe
push
arpl
roll
in
movsb
cld
mov
test
imul
mov
rolb
jg
xchg
ficomps
cmc
push
jae
js
lds
cld
aaa
mov
aam
mov
or
push
stc
clc
fmul
shrl
aaa
repnz
and
mov
cmp
adc
ret
jl
sub
xchg
inc
lret
mov
or
push
sub
adc
mov
and
out
mov
sub
or
ss
and
mov
mov
sbb
push
mov
mov
xor
pop
les
mov
test
nopl
mov
movhps
in
jl
mov
cli
cs
xchg
push
outsl
dec
lea
jnp
push
mov
int
sti
cltd
out
jmp
lods
cmp
sbb
ss
std
add
mov
out
pop
sub
sub
push
jo
or
mov
adc
shl
jbe
dec
inc
fs
ret
nop
das
pop
ret
xchg
lods
and
cltd
cmp
lods
xlat
inc
sbb
xchg
dec
repz
clc
popf
lds
mov
mov
fadds
adc
fsubrl
sbb
outsb
bound
cmpsb
mov
ficoms
mov
adc
push
mov
mov
xor
adc
pop
cmp
mov
addr16
imul
dec
aam
jbe
pusha
pop
mov
insl
mov
insl
xor
pusha
test
xor
fists
sbb
xchg
push
movsb
add
or
call
adc
fldl
std
das
push
pop
add
inc
aam
mov
mov
xchg
inc
cmp
xlat
rcl
xchg
xlat
stos
dec
loop
dec
xchg
inc
jp
xchg
adc
in
icebp
mov
push
stos
mov
xchg
sub
js
js
loop
add
push
fmul
clc
sbb
inc
arpl
add
push
jmp
xchg
ljmp
fwait
xlat
pop
mov
dec
test
pusha
xor
cs
mov
loope
pop
dec
mov
sbb
loopne
or
lcall
jl
cwtl
sahf
push
push
mov
or
iret
addl
pop
lods
lock
cmp
popl
scas
mov
ljmp
out
push
cltd
adc
repz
dec
in
popf
std
push
cs
jo
nop
and
sti
mov
fdivrs
dec
repnz
sub
out
insl
test
pop
testb
xchg
pop
inc
or
dec
or
fcomps
aam
mov
pusha
fistps
cmp
ljmp
adc
mov
adc
lods
sti
jns
add
pop
sbb
xchg
mov
or
cs
mov
test
mov
sbb
es
lcall
xor
scas
lret
mov
push
or
xor
jb
mov
inc
or
call
arpl
add
loopne
xlat
xor
push
popa
and
fists
sbb
out
add
or
ret
add
in
push
out
pop
or
lock
cli
sbb
out
jbe
push
es
das
test
mov
mov
aad
mov
dec
mov
icebp
or
sub
test
cs
mov
jno
fdivrs
mov
xor
mov
adc
or
std
cmp
xor
mov
dec
mov
mov
and
push
push
test
jl
stc
add
stc
fisttps
lock
dec
int3
mov
xor
xchg
xchg
cmp
lcall
add
add
and
adc
sub
scas
and
add
mov
jl
xor
test
cmpsb
test
out
pop
ror
sub
sub
jge
xchg
push
add
out
dec
std
or
or
mov
cmpsl
push
je
mov
xchg
out
test
loop
jmp
ret
shrb
jnp
cwtl
outsl
enter
hlt
das
repnz
repnz
jl
adc
jno
aas
test
sub
in
mov
mov
mov
aas
jns
sbb
out
xchg
idivl
shrl
jle
xor
cmpsb
jmp
adc
pop
push
mov
movsl
lret
imul
sub
cli
ret
addl
mov
pop
mov
pop
cmp
mov
and
bndldx
movsb
enter
std
xchg
loopne
fisttpl
add
add
test
xor
pusha
cli
pop
pop
repz
fidivrl
mov
xor
inc
lea
out
bound
jmp
out
add
pusha
out
je
inc
adc
sbb
leave
xor
leave
mov
add
adc
mov
add
popf
cs
in
cmp
push
mov
jo
test
push
pushw
daa
add
int3
or
das
mov
cmpsb
and
loop
xchg
push
dec
inc
lock
hlt
sub
pushf
cltd
jp
and
test
push
into
dec
scas
fsubrl
cmpsb
jno
stos
mov
lahf
sbb
mov
nop
mov
subb
lcall
inc
sub
les
fwait
test
cmpsb
xchg
cmc
fcomps
dec
scas
jno
sahf
add
and
sbb
cli
adc
add
push
mov
push
daa
aam
mov
rcll
cmp
sbb
xchg
leave
insl
pop
fldcw
fs
push
add
cmovne
push
mov
xchg
out
pop
cs
lds
adc
rol
cwtl
hlt
cltd
addb
add
sub
push
enter
mov
dec
mov
or
in
sub
cmp
jge
arpl
xor
movsl
imul
das
jp
lcall
sub
insl
incl
push
test
mov
pop
mov
aam
fcoml
mov
ljmp
inc
jp
jbe
xor
adc
out
dec
jl
mov
xor
insb
dec
movsl
or
lods
ja
sbb
ret
dec
and
cmp
retw
std
mov
pop
cli
jb
mov
mov
loop
mov
scas
mov
je
push
fs
lret
and
cmp
cmp
ss
sbb
inc
arpl
inc
mov
sub
js
inc
leave
fs
mul
jnp
mov
arpl
iret
outsb
call
out
xchg
xor
mov
sub
mov
pop
push
sbb
testl
push
inc
adc
adc
or
aas
mov
lret
testb
lcall
fmull
jne
inc
cltd
xor
fdiv
idivl
mov
aaa
dec
roll
mov
test
jns
xchg
sbb
jge
dec
lock
mov
test
fdivrl
xor
dec
lret
mov
inc
fildl
sbb
adc
jecxz
lds
xlat
stc
jg
push
stc
xor
pushf
inc
das
jle
add
fiadds
test
lret
xchg
mov
shll
pop
mov
push
js
sub
push
xchg
das
cmp
cmpsb
pop
mov
popa
sti
outsb
xchg
cmp
lods
mov
jg
dec
das
out
lret
scas
pop
iret
dec
adc
and
pop
roll
add
out
dec
xchg
gs
mov
mov
clc
pushf
push
dec
jecxz
cli
push
mov
jo
mov
in
out
sbb
pusha
mov
jmp
jl
mov
xor
add
in
scas
cmp
int
arpl
adc
push
dec
push
dec
jge
jne
dec
lret
pop
xlat
arpl
fistpll
cmp
lea
maxps
sub
xchg
cltd
pop
out
lret
sbb
imul
mov
popf
shrb
nop
hlt
mov
popf
call
jmp
out
inc
cltd
and
push
pop
imul
cmc
pop
jns
pop
or
test
nop
jmp
mov
xor
shrl
mov
insl
cmp
mov
adc
stc
scas
repnz
das
jo
mov
cmpsl
cmp
rcll
xor
dec
pop
jae
xor
xorb
push
lods
dec
push
clc
ja
fwait
pop
mov
jp
testb
into
cli
pop
xor
lahf
mov
iret
mov
cmpsl
mov
mov
repnz
test
jp
movsl
and
movsb
ret
add
push
cmp
stos
rcll
mov
jb
in
cmpsb
leave
jmp
jg
jo
or
inc
nop
cmp
cmp
xchg
lret
add
clc
stos
push
cmp
add
lret
cmp
and
sub
cld
or
push
lods
mov
test
inc
rcr
inc
lret
enter
aam
leave
mov
hlt
scas
xor
sbb
cli
imul
aam
or
mov
stc
fsubs
out
incl
aaa
jns
xchg
imul
and
icebp
dec
dec
mov
ret
dec
dec
orb
sti
mov
jmp
ret
or
je
sbb
es
xor
or
leave
mov
mov
ss
push
xchg
test
fsubp
fldenv
lret
faddl
add
pop
sub
mov
shrb
xchg
sub
nop
out
jmp
push
lods
pop
mov
or
je
dec
int3
pop
leave
mov
repnz
inc
clc
das
mov
inc
std
out
imul
test
out
mov
repnz
test
push
je
insl
xchg
xchg
mov
je
lcall
cmp
imulb
lds
pop
call
xchg
mov
addb
inc
in
ret
sarb
pop
fdivl
pop
rcll
shlb
adc
fiaddl
shll
test
movsl
cmpb
mov
or
or
lods
adc
cmp
sbb
addb
fisubs
in
adc
add
roll
xchg
add
sub
push
nop
jo
mov
repz
lock
pop
xlat
sub
mulb
out
and
inc
push
adc
cmp
push
lahf
dec
jae
push
movsl
arpl
andl
pop
xlat
aaa
push
jbe
mov
notb
mov
cs
testb
fsub
pop
int3
cmc
xchg
push
pusha
icebp
loope
mov
hlt
and
dec
sbbb
and
sti
mov
lahf
in
sub
shl
in
jl
icebp
mov
mov
jmp
stos
xchg
jmp
ss
pop
fildll
mov
scas
jmp
mov
in
jp
push
xor
xorl
cs
cmp
xor
pop
pop
cmpsb
cmp
jb
repnz
and
repz
decb
addr16
fdivrp
mov
cmp
xchg
xchg
xor
test
dec
push
fwait
push
minps
push
in
les
imul
mov
mov
mov
lods
out
out
inc
sbb
stos
test
out
push
je
jnp
dec
jns
pop
xchg
sub
mov
add
in
ficoml
add
js
ja
or
in
cld
dec
add
jb
jle
popl
imul
jo
lret
push
jo
adc
psubw
int3
push
orl
std
es
ds
lss
das
jge
sbb
push
inc
loope
cli
and
mov
clc
int
and
xchg
out
filds
inc
adc
mov
xor
mov
incb
scas
mov
push
add
in
dec
imul
stc
movsb
cmovg
push
pop
out
adc
out
cmp
mov
out
mov
pushf
dec
jecxz
in
ja
push
add
pushf
mov
sub
shll
inc
stos
cmp
orb
insl
adc
lret
icebp
and
push
mov
xstore-rng
cmpsl
inc
mov
mov
jb
push
pusha
shl
mov
mov
push
and
bndldx
fwait
adc
jbe
sbb
sahf
mov
in
popa
ja
jne
ficomps
aam
add
les
fcomp
and
test
mov
out
in
adcl
mov
div
jmp
cli
fbstp
lea
int
ds
in
enter
jl
dec
jo
cmpsb
and
mov
adc
mov
mov
adc
mov
sub
cmp
sarl
dec
rcll
and
jnp
imul
dec
and
pop
xchg
adc
cwtl
jns
lcall
sbb
roll
bound
enter
pushf
push
adc
xchg
arpl
insb
lock
mov
aam
leave
xchg
pop
scas
add
sbb
ret
stos
or
mov
xchg
in
pop
xor
mov
out
add
daa
mov
pushf
in
pop
loopne
cmpsb
sub
mov
sahf
adc
je
ljmp
mov
pop
sbb
cmp
xchg
add
pop
loopne
insb
add
pop
movsl
mov
adc
mov
cmp
push
cmpsl
dec
lcall
loopne
xchg
ss
aad
xor
cmp
ds
adc
pop
bound
push
fucomi
sahf
test
stos
lock
aas
sbb
mov
jle
test
push
xor
and
inc
mov
dec
pop
addr16
jbe
push
jl
fbstp
mov
mov
xchg
jns
aas
ss
and
rorl
int3
mov
dec
jbe
ljmp
iret
cmpsl
pop
stos
mov
sub
cmp
cs
jno
fsubs
cmp
lea
jbe
rolb
push
sbb
cmp
repnz
pop
mov
inc
sbb
mov
dec
push
mov
dec
call
sbb
ret
daa
lods
pop
lea
bound
mov
aad
adc
sarl
lret
in
and
pushl
daa
das
push
dec
lahf
scas
or
cmp
jl
cli
out
ret
pop
les
test
cmp
mov
sbb
xor
add
xchg
jecxz
pop
adc
or
mov
push
test
je
dec
imul
loope
and
push
aaa
dec
shl
jo
fcmove
xor
and
jns
das
mov
clc
les
cs
mov
xlat
in
ss
mov
jg
xchg
cmpsl
out
iret
push
icebp
and
addr16
aaa
cmpsb
or
mov
outsl
shll
or
stos
push
push
cwtl
mov
push
stos
je
jge
int3
cmp
ds
mov
xchg
subl
fdivr
and
lock
out
xchg
fsubs
jge
mov
pop
dec
mov
movsl
sbb
lods
sub
in
inc
sub
es
xor
xchg
xchg
lea
pop
dec
mov
lret
and
jp
xor
dec
shr
ljmp
xchg
in
push
mov
dec
jl
or
or
fcomip
addr16
inc
mov
mov
popf
cli
push
mov
je
pop
push
or
adc
sub
js
das
popf
adc
sbb
jecxz
push
daa
stc
mov
rcl
jbe
pop
aad
clc
sti
adc
xchg
pop
add
sbb
int3
jmp
add
mov
jle
jb
push
dec
add
push
jnp
xchg
adc
mov
inc
dec
jno
out
jp
add
cmp
cmp
mov
xchg
jbe
jnp
out
sub
mov
test
roll
loope
push
and
jnp
mov
repnz
lret
clc
or
mov
mov
movsl
pop
sarl
dec
popf
ret
sahf
or
test
loop
stc
jl
nop
fcompl
call
mov
ret
and
inc
sub
lret
ljmp
cli
sbb
mov
inc
mov
cmpsl
ret
push
and
adc
and
hlt
fidivrl
popf
jno
push
loopne
push
push
aam
test
mov
dec
mov
std
pop
lret
cmp
or
pop
inc
into
lea
pusha
ud2
jle
jle
imul
jns
ret
push
cs
jbe
mov
gs
loope
mov
mov
lret
mov
mov
pop
imul
jno
pop
imul
or
push
repz
adc
jg
push
cmc
cltd
dec
and
jle
sahf
int
roll
lea
outsl
or
repnz
mov
popf
jecxz
jnp
cmp
sub
or
cmp
adc
jno
rcrl
push
jge
lret
mov
mov
adc
les
and
pop
dec
pop
test
fucom
sbb
dec
push
jecxz
sub
fwait
inc
pop
adc
mov
inc
loop
test
ret
adc
loope
or
test
mov
add
scas
pop
ret
jo
push
cs
and
inc
cwtl
fmuls
fiadds
es
mov
rcrl
inc
loopne
mov
mov
cmp
aas
fs
jl
inc
sbb
cld
adc
pusha
aad
test
mov
les
mov
jbe
rcrl
sti
push
std
and
lods
fidivs
fldl
pop
fnsave
and
sbb
idivl
ret
pop
cwtl
test
mov
lahf
pop
fmull
int3
add
sarl
jnp
jb
mov
push
push
xchg
cmp
dec
js
sub
pushf
xorb
push
test
push
adc
addr16
jle,pt
cmpsb
cmpl
inc
add
repnz
adc
enter
test
xor
hlt
mov
xor
push
add
xor
jae
popf
fsts
sbb
cltd
in
dec
jae
ja,pn
loop
and
mov
mov
out
cs
push
jg
jbe
in
mov
jns
mov
and
insl
add
lcall
js
icebp
push
movsl
adc
outsl
sti
daa
and
imul
gs
arpl
inc
mov
push
les
ja
ja
fucom
or
jb
sbb
jl
push
lock
push
faddp
fwait
aad
lods
sbb
test
mov
pusha
push
pop
push
push
loope
cmp
push
push
scas
mov
stos
mov
arpl
daa
stos
xorl
xchg
dec
mov
xor
std
cmp
xchg
and
add
push
jns
das
xor
fs
inc
cld
mov
daa
test
fildll
mov
ficomps
leave
add
in
fadds
out
xlat
shl
ret
fdivrl
sub
int3
adc
mov
jno
xchg
jnp
jns
out
adc
mov
adc
add
inc
add
push
loope
lret
jno
mov
pushw
add
std
push
jge
out
lret
mov
jb
lret
xor
dec
data16
mov
cmp
xlat
mov
mov
cltd
inc
sub
jae
mov
or
fcmovu
xchg
xor
mov
add
out
dec
xchg
pop
dec
sub
subb
enter
inc
and
jp
test
rcrb
icebp
mov
movd
pop
add
shlb
jl
insb
and
fildll
loop
push
popa
mov
add
jne
mov
jp
in
or
sahf
stos
lock
js
or
push
lret
gs
pop
push
clc
push
mov
ljmp
and
xor
push
jge
mov
and
add
jl
push
sbb
mov
enter
jp
mov
mov
out
lret
loope
pusha
dec
testl
scas
cmp
daa
mov
mov
cmc
sub
in
pop
add
and
sti
scas
jge
mov
mov
add
imul
push
sub
scas
movsb
push
sub
popf
or
sub
jnp
sub
into
mov
orl
sti
jmp
mov
scas
neg
and
movb
sub
sti
out
fiadds
int3
jecxz
add
mov
pop
lods
push
dec
repz
jnp
xchg
rorb
add
fistl
mov
push
xchg
jne
dec
std
data16
jae
jecxz
into
scas
mov
cmpsb
test
push
push
inc
pop
mov
inc
adc
dec
shll
pop
sbb
cmp
fwait
in
mov
inc
and
mov
aam
xchg
jl
adc
mov
sub
and
sbb
icebp
ret
sub
inc
cmp
adc
push
jp
fbld
push
aad
loope
mov
popa
mov
insl
pusha
jmp
shll
push
cwtl
test
mov
add
mov
push
aaa
mov
leave
sub
add
divl
test
mov
call
jmp
data16
inc
mov
cltd
jbe
movsb
leave
inc
outsl
dec
inc
daa
sub
fsubr
xchg
gs
stc
add
dec
mov
jp
inc
or
cli
xchg
mov
out
mov
lods
push
loopne
fdivrl
jbe
jmp
fmuls
push
push
lods
pop
loopne
jo
sti
test
sub
xchg
std
add
mov
outsl
or
xor
adc
daa
and
xor
or
arpl
test
fcompl
cmp
push
mov
jo
pop
push
sub
lea
ret
stc
stos
dec
add
lret
mov
push
fstl
fmuls
push
mov
jno
sti
push
stos
orl
pop
sbb
or
or
push
int3
xor
test
xchg
and
mov
sbb
and
dec
jl
iret
pop
jle
sbb
sbb
lods
cwtl
pop
push
or
add
xchg
or
sbbl
mov
aas
pop
xchg
xchg
adc
jecxz
add
sbb
sub
imul
add
pop
inc
inc
orl
sub
mov
pop
or
in
dec
xor
mov
call
push
sbb
leave
xchg
sbb
bound
int
orl
test
cmp
mov
pop
dec
pop
iret
jp
mov
jno
bound
in
xchg
mov
popf
or
dec
dec
enter
in
das
fstps
mov
pop
cmp
inc
adc
int
iret
test
cmp
push
cltd
adc
push
mov
or
jno
loop
add
addw
xor
or
mov
mov
jae
inc
xbegin
xchg
fs
pusha
inc
insl
mov
into
fimull
mov
inc
push
in
mov
popa
mov
mov
add
pop
or
je
inc
and
daa
adc
cmpl
dec
out
daa
mov
sub
add
sbb
push
or
scas
pop
subl
adc
xchg
addl
pop
loope
add
movsl
lods
sar
jge
lock
pop
mov
scas
cmp
pop
gs
mov
aad
jle
jle
jle
cs
out
shl
xchg
jne
cmpsb
push
jl
sub
bound
movsb
xor
adc
xor
lret
das
mov
ds
in
cmp
mov
sar
push
andl
pop
or
jns
xchg
aad
cmp
pop
push
xlat
fistps
aam
pop
sub
jae
mov
mov
stc
std
test
daa
push
add
add
jl
imul
aaa
sbb
adc
inc
inc
enter
mov
jb
xchg
pop
sbb
sbb
xlat
cltd
xchg
inc
daa
push
int
cmpsb
movsb
fildl
push
pop
dec
xor
outsb
divl
cltd
movsl
in
jl
sar
jle
mov
scas
rcll
rorl
and
add
or
or
ja
push
cmp
sub
rorl
xchg
ds
fildl
movb
mov
ljmp
out
add
jne
xlat
cli
cmp
mov
out
mov
stos
pop
out
jbe
inc
adcb
push
lods
dec
push
aas
in
mov
jle
test
inc
popf
lcall
cmp
add
inc
adc
mov
push
or
dec
inc
enter
je
mov
lahf
pop
aas
dec
andl
loopne
lcall
in
mov
lds
popa
arpl
daa
fdivrl
xor
xorb
ljmp
out
scas
int
out
xor
xor
push
movsl
adc
ljmp
mov
fisttps
xchg
lcall
int
ja
pop
cwtl
adc
jnp
out
or
movsl
dec
loope
cmp
mov
jbe
adc
sbb
psubsw
jae
cmpsb
push
in
push
addr16
fimull
pusha
loopne
push
in
jg
or
jbe
add
ret
daa
dec
lods
idiv
jg
and
mov
sub
fiaddl
push
push
cwtl
pop
add
push
sub
xor
es
jp
out
dec
add
into
push
mov
inc
xchg
repnz
gs
add
pop
lahf
pop
inc
pop
out
mov
pusha
xor
mov
add
mov
or
inc
jge
outsl
jge
fs
push
sbb
out
cmc
test
ja
cwtl
mov
les
fcmovbe
xchg
movsb
mov
rcrl
mov
sbb
aas
popf
pushf
rcr
out
movsb
fsubrs
stos
or
loop
pop
sub
xor
lock
iret
cmc
aad
insb
lock
jge
mov
cmc
push
inc
push
mov
pop
or
cs
add
adc
or
ds
and
sub
jl
dec
xorl
data16
fadd
add
test
sub
dec
push
jne
jmp
fsts
sbb
in
nop
out
fs
test
lds
sbb
in
leave
int
cmp
and
mov
cmc
mov
inc
jg
outsl
scas
sbb
scas
mov
lods
cmp
fsub
xchg
icebp
or
mov
sbb
sbb
pop
aam
cmpsl
mov
in
push
lret
adcb
xor
dec
das
jmp
lahf
mov
lret
xchg
adc
ret
scas
mov
ss
rol
xchg
popf
rorl
pop
adc
orb
loopne
sbb
fsubrp
sbb
jg
cmpsb
lret
add
mov
loopne
or
xor
adc
adc
xor
cltd
aas
mov
push
pusha
les
dec
adc
xchg
xor
push
dec
cmp
pop
rcrb
and
jp
cld
popf
div
fwait
in
adcl
icebp
testb
ds
ljmp
mov
sbb
movsb
dec
adc
lahf
inc
data16
xchg
xchg
xchg
add
test
cli
nop
mov
gs
shr
ja
mov
fmull
pop
add
lock
xchg
sub
xor
out
and
mov
push
mov
jecxz
mov
sub
sub
or
adc
add
popa
subb
dec
or
lods
mov
mov
repz
mov
jb
xchg
pusha
dec
jmp
aas
mov
push
das
ret
int3
cmp
inc
shlb
lar
imul
sub
jnp
sar
mov
adc
cmpsb
add
roll
cmp
int
xor
shrb
mov
sbb
add
dec
sbb
sub
lods
adc
or
mov
dec
cli
pop
xchg
push
or
dec
ss
idivl
fbstp
cwtl
scas
add
jae
push
push
mov
cmpsb
mov
ret
xchg
enter
adc
adc
cmc
sti
dec
adc
add
scas
xchg
sbb
or
dec
and
xchg
lret
mov
mov
jo
lret
dec
mov
les
and
je
inc
out
faddl
jg
aam
arpl
mov
or
cmp
sub
rorb
outsb
add
push
mov
lock
clc
loop
lods
sub
xor
jmp
mov
mov
adc
arpl
scas
mov
fwait
in
sub
lds
adc
test
aas
mov
push
jmp
outsb
test
and
test
lock
lds
lods
shll
daa
div
inc
sti
and
lock
pop
inc
mov
jne
testb
mov
test
xlat
insb
scas
xor
push
mov
push
pop
inc
push
xor
inc
add
xlat
hlt
pusha
sbb
lods
test
add
test
mov
sub
ret
dec
fwait
testl
js
push
mov
push
mov
mov
movsb
mov
stos
fiadds
hlt
mov
cmp
sub
cmp
ja
push
dec
popa
lahf
jno
jl
push
ret
cs
inc
jge
jae
ljmp
sub
test
int3
cmp
mov
dec
pop
scas
pop
lea
ljmp
and
popa
hlt
cli
jo
sbb
jecxz
pop
mov
and
push
inc
mov
lret
cmp
dec
mov
lods
pop
das
lds
stc
and
out
cmc
ret
mull
adc
movsl
xchg
ret
pop
pop
clc
ds
arpl
call
dec
push
sbb
fimull
xor
and
loop
int3
fimull
ljmp
stos
das
pop
xchg
movsl
rcll
test
adc
mov
repnz
clc
sub
push
mov
clc
sbb
add
push
mov
xchg
push
jae
je
icebp
inc
xor
inc
popa
xor
mov
and
jp
int
jmp
jle
add
pop
fiaddl
sub
pop
jg
dec
int
inc
sbb
fnstsw
mov
jns
mov
sbb
inc
sbb
clc
repnz
push
dec
imull
cmp
fcomip
dec
rol
in
icebp
and
lret
pop
xchg
push
add
inc
ja
or
inc
fildl
xchg
adc
adc
cmpb
inc
ljmp
popf
mov
push
mov
fistl
jecxz
sub
mov
call
mov
mov
or
lret
push
aad
push
insb
shlb
sbb
pop
cmp
mov
push
add
xchg
ljmp
sub
lock
xlat
loopne
retw
shrl
mov
cmp
jecxz
add
aad
mov
call
sbb
add
pop
cmp
xlat
inc
sbb
sbb
pop
outsl
aaa
or
and
into
pop
enter
insb
shll
out
fsubr
jmp
mov
mov
xor
cwtl
les
fldt
inc
xorb
jne
imul
mov
push
xor
pop
or
dec
pop
dec
call
test
pusha
pop
dec
pop
mov
stos
cmp
cld
pop
pop
daa
push
pop
mov
hlt
frstor
mov
lea
jg
mov
inc
add
push
addr16
es
lret
cwtl
add
lods
inc
jo
jae
lods
ja
stc
xlat
lcall
or
out
rolb
scas
xorl
add
je
rcl
jg
cmpl
add
cmp
mov
stos
xchg
xor
dec
addr16
and
jle
inc
mov
movsb
lahf
and
sbb
mov
cmp
jge
or
imul
rolb
ljmp
popa
and
fistpll
push
out
insb
cmpsl
cwtl
testb
or
mov
andb
add
xlat
jo
dec
mov
loopne
mov
cltd
addl
fsubs
roll
inc
pop
sub
invd
inc
aaa
push
mov
test
iret
pop
push
lock
enter
xlat
loopne
ja
orl
fstps
push
iret
inc
jno
cmp
jle
mov
push
inc
add
negl
out
inc
outsl
sub
es
insb
push
loope
shr
shlb
or
lods
sar
inc
pop
mov
jno
test
sti
cmpsb
mov
lret
cmp
push
inc
push
lret
das
pop
lods
push
dec
lods
jbe
xor
xor
and
adc
js
and
adc
xchg
xor
aas
sbb
jl
push
aam
and
sarb
ljmp
xlat
and
movsl
jmp
jmp
and
sbb
adc
fmul
adc
lods
sbb
pusha
ja
cwtl
mov
cmpsl
sbb
mov
sbb
cltd
std
mov
or
lret
fiadds
mov
cmp
jo
out
pop
and
pop
jg
mov
lcall
jle
jmp
stos
ret
sub
mov
les
cmc
push
scas
dec
aaa
mov
cmpsb
data16
push
sub
mov
inc
mov
mov
push
ja
or
adc
or
push
lods
fmulp
popf
mov
ss
dec
sub
test
fidivs
inc
xchg
xor
sub
int3
in
pop
sbb
cli
je
lods
call
pop
outsl
aaa
and
add
roll
mov
adc
mov
les
fmuls
push
movsb
ds
gs
pop
leave
push
aas
add
xchg
lock
shll
lods
addl
les
test
inc
or
loope
jbe
outsl
push
push
jae
test
stos
lds
sbb
mov
aaa
test
mov
or
dec
sub
rol
ficompl
add
push
or
dec
int3
pop
inc
rcrl
or
out
popf
cmp
std
scas
in
rcr
add
mov
les
add
push
ficomps
cltd
mov
cs
fsubl
push
xchg
lret
into
adcb
cwtl
push
js
jnp
je
sbb
mov
cmp
iret
cmp
aas
push
int
dec
rolb
lock
mov
mov
aad
stos
xor
pushl
xchg
push
jb
loop
add
add
cmpb
cmp
test
pop
test
call
push
adc
and
out
fld
orl
mov
cmp
mov
push
jbe
pop
dec
xchg
sbb
xchg
ljmp
adc
enter
cwtl
inc
pushf
idivl
cmp
cmp
jns
adc
outsb
mov
push
mov
jno
notb
test
dec
and
lea
xchg
jnp
aam
movsb
jge
inc
adc
js
jnp
das
loopne
inc
lods
xor
pusha
jge
test
pop
push
mov
call
adc
rcll
mov
shlb
mov
xchg
inc
std
push
xor
inc
imul
mov
jmp
mov
fistpl
fs
sub
lods
xor
lret
or
cld
jg
outsl
mov
sbb
jbe
into
xchg
imull
jne
sahf
icebp
sbb
aam
jge
aad
rcll
ss
dec
xchg
cltd
xor
sbb
ret
scas
das
pop
cmp
imul
and
loopne
test
into
fcompl
sbbb
or
dec
addb
cwtl
out
inc
les
push
les
outsl
pusha
mov
push
sub
psrad
mov
out
sarb
lret
loope
lret
push
dec
or
aad
sti
add
pushf
xchg
xor
pop
and
inc
push
xchg
adc
dec
pop
sub
bound
adc
ss
das
fcmovbe
jne
jmp
repz
jg
xchg
inc
ds
adc
jg
addl
mov
sub
fistps
inc
mov
push
fbstp
sub
outsl
xchg
inc
mov
xchg
lods
pop
fildll
and
pop
rcrb
ja
pop
movsl
mov
out
mov
dec
imul
lds
adcb
dec
cmp
xor
rcrb
push
dec
jl
aad
mov
pop
rorb
xchg
mov
jnp
mov
cmpsb
iret
test
or
repnz
roll
push
jne
pushf
dec
shlb
mov
jl
jno
mov
mov
into
adc
or
test
das
ret
shlb
mov
adc
sbb
mov
nop
and
js
jge
fs
sub
mov
sbb
cwtl
cmpsl
inc
jmp
and
mov
lea
jnp
add
test
pop
jl
sub
cmpsl
aam
push
stc
mov
mov
std
out
daa
cs
out
and
mov
mov
add
sbb
fcom
pop
push
test
icebp
or
lahf
push
outsb
pop
xchg
and
aad
inc
sarb
xchg
int3
sub
inc
movsb
sbb
aam
push
add
adc
imul
test
jnp
dec
popf
or
pop
mov
xchg
or
sar
ret
mov
leave
sbb
or
inc
cld
fbstp
ret
aad
jns
imul
add
scas
or
mov
xor
mov
or
inc
dec
sbb
cli
pop
jns
subl
int3
adcl
lret
outsl
pop
pop
lret
test
inc
nop
mov
mov
and
dec
xchg
ds
or
test
xor
test
imul
or
jmp
sub
jbe
scas
outsl
aam
jg
scas
add
dec
cld
in
sti
out
or
je
arpl
add
test
je
sub
cs
stc
push
cmpsl
inc
add
dec
and
int3
adc
and
shlb
inc
fsubl
dec
adc
cli
pop
mov
mov
mov
in
gs
les
scas
inc
notl
lods
push
jb
enter
lods
or
jmp
pop
fnsave
push
and
js
push
xchg
push
xor
cmp
pop
inc
and
fdecstp
ljmp
in
sub
mov
fst
or
push
hlt
adc
hlt
mov
push
in
push
repnz
sub
mov
push
lods
loop
add
out
ljmp
cmp
add
dec
sub
inc
ja
sbb
addr16
jmp
gs
mov
xchg
out
scas
mov
mov
pop
rolb
cmp
lahf
popa
jmp
sbb
dec
mov
adc
lds
jo
pop
pop
mov
dec
fcmovb
mov
outsl
dec
inc
jne
mov
sar
mov
imul
push
jecxz
ljmp
lret
add
cltd
mov
gs
inc
outsl
pop
jp
and
cmp
dec
aad
mov
dec
mov
add
push
mov
repz
aaa
shr
daa
fdivrs
lock
push
fmuls
and
aad
cltd
popf
inc
aad
outsb
sub
cmpsl
mov
mull
mov
mov
into
push
hlt
imul
lods
or
stc
movsb
mov
into
pop
js
sub
fildl
push
add
jp
arpl
nop
xchg
jmp
out
xchg
fwait
sbb
lcall
mov
test
pop
es
insl
call
outsl
pop
sub
cmp
xchg
cmp
pop
mov
xor
lds
lar
sarb
add
adc
aaa
push
jbe
push
push
fldcw
or
pop
adc
lret
movsb
xor
test
and
out
aam
in
imul
adc
pop
shl
ret
icebp
loopne
mov
jle
dec
ljmp
push
aad
std
pushl
xchg
adc
and
test
or
leave
adc
sbb
xchg
movb
push
test
cmp
out
test
movsb
mov
dec
pop
test
push
stos
pop
out
sbb
xchg
nop
in
push
dec
xchg
les
loop
sub
lea
or
jnp
jnp
inc
or
inc
mov
push
out
clc
int
addb
mov
lret
dec
insl
sbb
inc
aaa
sbb
rcrb
fiaddl
mov
lea
inc
mov
cli
pop
lock
testl
push
or
sti
cmp
push
push
mov
fbld
xchg
mov
fbstp
push
cmpsl
pusha
fisttps
jg
xorl
adcb
mov
loop
popa
imul
lods
imul
mov
mov
or
mov
push
jno
fs
cmpsl
sbb
fnstenv
xor
and
daa
xor
daa
mov
stc
pop
cmpsl
popf
jns
and
inc
insb
xchg
jp
sub
aas
jl
adc
mov
push
js
sub
dec
cltd
movsb
xor
jge
lods
inc
push
dec
jmp
negb
cld
arpl
scas
rol
into
xlat
sbb
cltd
jmp
scas
fcoms
push
mov
push
and
adc
cmpsl
sub
mull
mov
cs
lods
sub
xorl
inc
loopne
adc
sahf
loope
es
or
adc
push
push
cmp
sub
cmp
pop
jp
adc
mov
inc
and
push
add
dec
jge
mov
loope
mov
add
pushf
ret
loopne
pop
add
inc
cmpsb
jecxz
sub
fstl
enter
add
xchg
push
sbb
sub
and
and
jae
push
popa
outsl
out
jp
or
imul
mov
and
test
mov
outsb
push
push
push
aad
mov
jle
jno
test
ret
imul
sbb
xchg
mov
push
loopne
push
dec
sbb
cld
daa
jae
icebp
test
stos
adc
clc
xchg
push
aas
adc
aaa
jp
cmpsb
mov
shl
arpl
sti
outsl
loope
jb,pn
jp
leave
cmp
sub
jo
xor
mov
xchg
sub
or
and
mov
int
loop
outsl
int
scas
mov
mov
imul
aaa
sbb
stos
fstps
mov
pop
pop
out
jge
test
aas
ja
jp
cwtl
int
mov
stos
in
and
sarl
sub
fiadds
fdivs
dec
fldenv
xchg
cmp
add
xor
out
mov
cmp
ret
insl
or
fadds
pop
mov
pop
lods
pushf
jl
dec
add
movsl
pop
adc
xor
int
sub
inc
mov
movsb
sahf
stc
jp
dec
daa
adc
jae
call
and
sarb
enter
pop
ds
inc
test
mov
out
xor
test
xchg
dec
xchg
sub
setae
dec
jecxz
inc
mov
movsl
dec
jno
cmp
imul
lock
cmpsb
cwtl
adc
sbb
je
es
nop
test
mov
imul
add
sbb
push
jno
mov
xor
lods
pop
movsb
push
sbb
xsha256
cmpsb
push
xchg
fadds
jnp
push
out
jo
stos
pushf
outsl
lret
sub
insl
fnstsw
mov
mov
mov
addl
add
ret
ljmp
int
xchg
ror
adc
dec
cs
xchg
push
inc
sbb
add
adc
lods
jo
jae
mov
mov
mov
sbb
jle
loope
mov
lds
inc
cmpsb
sub
loop
mov
lcall
jnp,pt
cltd
fistpl
sub
mov
scas
mov
or
inc
mov
call
cmp
add
filds
mov
fcoml
or
ss
mov
nop
cld
call
std
jae
xchg
or
mov
mov
fsubs
dec
dec
dec
mov
cmpsl
testl
adc
std
imull
subb
popa
int3
push
xchg
sbb
das
push
add
mov
aad
cmp
push
imul
lcall
insb
cmpl
sbb
sub
or
cmp
les
adc
in
inc
adc
popa
iret
repz
fcompl
repnz
jae
cmp
enter
lods
sti
loopne
add
jl
outsb
inc
in
inc
aas
xchg
insb
xchg
jnp
push
mov
fldenv
mov
jl
pusha
dec
fs
dec
enter
cmpsb
adc
pop
adcb
mov
pop
in
repnz
ljmp
out
mov
push
insl
inc
fs
pop
test
pushf
rcll
scas
stos
pop
lahf
ljmp
cmp
lret
sahf
push
sbb
xchg
add
in
out
ja
jbe
or
xor
ljmp
sub
pop
cs
mov
or
mov
jp
mov
xchg
push
push
pusha
adc
sbb
fwait
jg
and
mov
fildl
mov
dec
mov
or
test
call
cmp
push
mov
std
fucomp
lret
inc
xchg
inc
ss
dec
sub
mov
scas
push
push
add
fwait
enter
arpl
cmpb
into
sub
mov
inc
adc
mov
data16
pop
or
xchg
xorb
push
cmp
cmc
xchg
mov
lahf
or
adc
dec
cmp
inc
sbb
pop
outsb
test
sbb
sbb
xor
aad
jmp
aas
stc
push
push
xchg
test
dec
cmp
adc
nop
sbb
push
add
fdivrp
xor
sub
mov
inc
fdivs
xchg
dec
inc
cpuid
or
mov
inc
shr
or
sbb
mov
pop
ret
lods
xchg
mov
iret
sub
sbb
inc
push
lcall
mov
jmp
lea
pusha
inc
clc
or
sub
fwait
out
popf
imul
nop
lds
stos
or
add
loopne
inc
neg
loop
std
and
inc
mov
test
cmp
shrl
pop
pop
nopl
sub
addr16
push
jmp
cmp
sub
test
mov
cmp
es
dec
leave
shl
inc
ficoms
add
pop
out
sbb
mov
ss
cmp
pop
or
sbb
outsb
jbe
ljmp
leave
lods
outsl
in
fiaddl
sub
outsl
les
nop
dec
insb
sub
jbe
xorl
notb
ss
mov
push
pop
or
sahf
int3
pop
loopne
mov
leave
nop
out
xor
icebp
pop
cmp
xchg
in
cmp
aam
add
jbe
jo
sbb
bound
lret
shrb
pop
add
mov
in
lcall
xor
test
jae
sub
jecxz
adc
xchg
test
dec
inc
xor
and
scas
cmp
imul
push
dec
loop
xor
dec
sti
inc
in
test
xchg
mov
inc
roll
pop
idivl
cmc
lods
jmp
push
sub
movsb
in
jbe
pop
les
lock
sub
mov
emms
sti
cmp
pop
rcl
lea
and
cmp
orl
push
mov
insb
test
int
fsubl
push
and
pop
push
add
xor
sub
inc
imul
insl
mov
xor
out
movsl
sub
xchg
or
fcmovnb
fs
jae
divb
mov
pop
adc
mov
mov
loopne
jmp
dec
rorl
out
mov
leave
int3
fistps
les
mov
iret
je
in
cmp
sbb
xor
fucom
and
xchg
pusha
ret
xorb
jns
fidivs
push
ficoms
cmp
mov
sbbl
xchg
lds
fstl
fnsave
outsl
add
cmc
int
mov
mov
xchg
imul
aaa
push
aas
or
loope
loope
and
xor
or
es
mov
scas
out
or
enter
and
lcall
jmp
add
push
xor
imul
mov
std
jne
stos
jl
int3
jg
jbe
fs
inc
adc
lods
popa
push
ret
dec
ds
addr16
stos
xor
sub
adc
xor
mov
cmpsl
test
call
add
lods
in
ss
lcall
jp
pop
adc
shr
cmpsl
fadds
fs
pop
addl
sahf
mov
jno
lahf
xchg
aaa
pop
dec
and
and
and
and
xorl
jl
push
pop
cmc
and
pop
sbbb
pop
test
aad
xchg
sub
jl
adc
lret
sbb
test
aam
sub
test
into
or
stos
adc
cmp
movsb
testl
out
loopne
das
inc
xor
mov
fwait
cmp
subl
lods
jae
xchg
pusha
mov
ret
inc
aaa
inc
lret
add
in
std
jecxz
in
jne
push
and
push
jl
test
sbbb
and
xchg
repz
fwait
test
mov
and
pushf
repnz
pop
mov
mov
js
or
inc
dec
rorb
fcompl
imul
sbbl
pushf
fdivrp
js
and
imul
mov
push
pop
stos
cmp
lea
and
jns
add
jae
mov
adc
cs
or
mov
idivl
or
popa
add
push
stc
pop
and
sub
cltd
jl
pop
js
xchg
add
pop
insl
outsl
pop
imul
data16
sbb
add
shrl
lods
dec
fsubrs
cld
xor
jge
jne
xchg
cmp
out
addr16
adc
daa
mov
js
scas
cmpsl
pop
subb
das
in
icebp
dec
aam
rcr
cwtl
xor
cmp
and
inc
movsb
xor
inc
aad
adc
cmc
dec
iret
fwait
lret
int
xor
sbb
sbb
jne
add
int
cwtl
xchg
mov
fnstsw
sub
jnp
xchg
add
xchg
iret
lcall
dec
jne
fdivs
test
jle
jns
or
sbb
push
repnz
and
mov
imul
xchg
cmp
lret
mov
fmul
imul
dec
and
xor
adc
mov
out
jp
outsb
mov
pop
mov
cmp
mov
push
outsb
es
int
out
stos
into
cmpsl
mov
jg
mov
enter
inc
stos
int
dec
xchg
cmp
stos
pop
insb
rorb
fistpll
inc
cltd
les
pop
sub
mov
mov
xor
icebp
xchg
mov
hlt
jo
ds
jmp
ljmp
cltd
jecxz
push
mov
fcmovnbe
mov
pop
addr16
push
add
or
push
add
ja
mov
subl
dec
sbb
sub
push
outsb
fdivr
lds
jmp
lods
adc
dec
sbb
lock
jp
js
mov
fistl
inc
sub
js
ja
and
cli
dec
mov
jmp
or
sbb
rcr
cmpl
jb
and
insb
xchg
mov
outsb
test
jo
das
popa
sbb
addb
mov
mov
inc
faddl
push
mov
cmpsb
imul
cmpsl
mov
data16
je
xor
aam
das
pop
mov
sbb
cltd
gs
cmp
inc
mov
popf
mov
and
shrl
out
and
mov
cli
pop
xor
jmp
xchg
cltd
adc
nop
fsubrs
iret
fstps
in
movsb
je
lods
or
arpl
movsb
push
out
lds
sbb
inc
add
jno
orb
push
inc
mov
add
cmp
mov
xor
mov
lods
fisttps
addr16
mov
cs
jmp
push
adc
mov
fists
les
mov
hlt
mov
and
dec
insb
xchg
je
push
lea
aas
shr
or
add
out
les
add
orb
cli
out
mov
aad
pandn
push
push
or
sbb
sub
push
mov
fsubrs
les
xor
scas
imul
bound
movsb
xchg
dec
aad
and
jno
or
daa
lds
clc
add
lret
cmp
jmp
or
loope
or
inc
and
dec
mov
push
bound
dec
sbb
jmp
sbb
dec
jb
or
xchg
sub
aas
adc
gs
mov
cmpsl
lock
cltd
pusha
push
xorl
push
dec
and
adc
cmpsb
xor
gs
sbb
adc
lds
fwait
sbb
mov
out
pop
sbbb
or
jmp
pop
mov
int
dec
jno
je
inc
test
and
adc
mov
ret
jg
sub
cmp
ss
jmp
addr16
loopne
inc
inc
int
xor
and
test
adc
push
subl
push
inc
mov
jle
fcoml
dec
sbb
adc
jo
push
imul
xor
shlb
dec
mov
push
sbb
pushf
stos
adc
js
sbb
xchg
jle
inc
lahf
jne
ret
loop
mov
inc
ret
ljmp
bound
mov
mov
out
mov
dec
in
in
sbb
enter
mov
pop
push
inc
jg
dec
sbb
cs
sub
outsb
pusha
mov
inc
lock
shll
mov
call
xor
lret
pusha
lret
imul
xchg
pop
adc
mov
xlat
mov
mov
and
jmp
lcall
movsl
cmp
loop
mov
lret
ljmp
xchg
lock
loope
adc
mov
cmc
mov
out
push
cli
loope
inc
xor
jne
js
jbe
sub
pop
inc
jmp
scas
jg
lea
aaa
sahf
xchg
pop
out
jl
pop
mov
sub
pop
and
adc
les
loope
mov
mov
mov
jmp
pop
ret
mov
les
cli
sub
mov
hlt
add
jne
inc
leave
adc
out
dec
sbb
or
inc
lcall
cld
lret
mov
xchg
pop
out
jae
aaa
fyl2xp1
in
in
inc
testl
and
rclb
pop
cmp
mov
ja,pt
sub
lret
in
xchg
xchg
leave
pop
fistpl
mov
icebp
movsl
inc
sub
or
lock
fdivr
mov
sbb
inc
mov
cmpsl
mov
mov
or
jbe
bswap
pushf
xchg
fnstcw
mov
mov
adc
mov
add
arpl
pusha
mov
gs
and
mov
testb
push
mov
in
pop
add
add
mov
test
mov
cmp
orb
mov
testl
popa
je
rcll
in
call
rorl
pushl
into
add
mov
jb
je
sub
push
pop
jo
test
jg
add
push
bound
mov
mov
lea
ret
aad
subb
sbb
dec
sbb
cmc
or
mov
adc
mov
add
xlat
adcl
ds
xchg
pop
xor
xchg
pop
mov
out
test
das
push
pop
dec
stos
leave
cmp
push
jp
nop
mov
sbb
fildll
in
push
jo
xchg
lods
sub
push
push
or
or
mov
inc
cmp
cli
rcrl
lret
and
test
or
adc
arpl
jl
fnstsw
adc
xchg
dec
pop
xor
inc
cmpsb
mov
lahf
mov
out
adc
ret
push
mov
addr16
sub
cld
or
divl
pop
loop
add
call
orb
cmp
inc
fwait
cmc
aam
cmpsl
mov
imul
cld
in
out
test
mov
pushf
mov
pop
sbb
imul
inc
cwtl
mov
pusha
sub
lret
pop
add
xor
out
test
jae
push
adcb
in
xchg
jbe
adc
or
jbe
adc
jmp
bnd
jnp
adcb
push
inc
push
xor
movl
pop
hlt
xor
mov
and
dec
push
xchg
ret
rcl
pushf
or
pushf
int3
cmpsl
mov
mov
movsl
add
pop
sbb
xlat
inc
les
mov
xor
and
js
or
sbbb
push
cs
movsl
adc
cmp
cld
cmp
sbb
cwtl
push
mov
ret
aas
jg
inc
ljmp
xlat
cmpsb
adc
fs
incb
xor
mulb
cmp
xchg
cmp
mov
fwait
data16
jecxz
mov
data16
shl
cmpsb
lods
es
mov
loopne
aad
ss
xor
add
mov
sub
clc
lcall
cwtl
out
add
or
outsl
dec
stos
es
lds
mov
adc
cmp
scas
or
xchg
js
cmpsb
mov
push
add
pop
sar
into
jp
mov
xchg
shll
cmovg
cmp
mov
das
inc
cmp
dec
call
sti
scas
push
xor
add
sbb
imul
fwait
inc
pop
add
dec
mov
jno
fdivl
xor
bound
jl
ljmp
jb
aas
test
shl
add
jb
cli
testb
or
stos
and
push
or
xchg
mov
ret
in
loop
mov
push
lahf
mov
pop
xchg
daa
xchg
pop
call
mov
and
js
or
lcall
jp
pop
test
ljmp
shlb
bound
pushl
shll
add
stos
dec
inc
push
push
popf
inc
cmpsl
pop
inc
sub
mov
sbb
inc
call
dec
pop
push
into
jne
or
push
mov
jns
sbb
mov
lods
das
imul
xchg
cmpsl
dec
jg
insl
subb
fs
xor
jo
scas
js
jle
push
ret
mov
ljmp
and
jmp
popa
jae
shl
ljmp
pop
cmp
jle
hlt
enter
xchg
negl
dec
loopne
jp
dec
decb
add
add
aaa
imul
fs
shlb
loopne
outsl
cmc
das
repnz
nop
push
mov
sub
int
daa
or
add
rcrb
addb
cltd
cmp
pop
jo
in
sbb
mov
push
int3
aaa
xchg
cmp
insl
cs
pop
jno
clc
pop
xlat
lds
mov
clc
std
imul
data16
outsl
outsl
es
inc
xchg
test
std
fisubrs
cmp
or
pop
test
lahf
pop
inc
pop
push
test
jp
jne
es
mov
int
mov
test
push
data16
add
out
mov
scas
shlb
sub
lcall
les
loopne
mov
aas
inc
nop
mov
inc
cli
mov
rcrl
add
mov
movsb
pop
testl
xchg
dec
xchg
pop
inc
and
in
push
jmp
mov
fisttpll
lock
sbb
iret
adc
xchg
js
mov
lock
add
dec
ds
mov
bound
ss
insb
add
dec
aas
jg
les
jp
mov
push
int3
mov
ret
test
xor
ret
dec
cmp
xor
mov
jmp
push
scas
testl
inc
sbb
cmpsb
dec
jp
and
push
pop
xchg
js
inc
push
fmul
jb
sbb
add
dec
mov
sub
in
ja
cmp
js
loope
xchg
scas
mov
cmp
sub
movsl
jnp
sar
push
in
cmp
mov
aam
hlt
lret
push
iret
cmp
lret
mov
imulb
sbb
push
inc
dec
fisubl
fisttpll
aas
jl
inc
cmpsb
push
fiadds
sti
js
adc
sarb
fcomps
add
sbb
clc
mov
arpl
pop
pusha
xor
dec
fs
mov
sub
std
sbb
ret
icebp
outsl
push
ja
xor
cmpsb
xchg
shrb
xchg
mov
dec
inc
mov
jae
mov
sbb
or
loop
pop
jg
mov
mov
in
daa
js
and
xchg
dec
cmp
jo
and
cmpl
insb
mov
fdivrp
nop
jae
dec
aam
xor
lods
cwtl
daa
jge
xchg
lahf
icebp
or
imul
push
xchg
dec
aaa
jno
pop
pushf
call
cwtl
iret
leave
stos
xor
push
repz
mov
fucom
rcrb
pop
cmp
popf
jp
mov
pop
add
push
stos
dec
out
cmpsb
pusha
mov
jne
mov
dec
sbb
rcrl
push
cli
or
sub
imul
cmc
add
mov
fwait
dec
sbb
push
gs
loope
or
movsl
dec
inc
cld
ljmp
inc
arpl
cmp
imul
xchg
orb
adc
das
into
jae
sti
pop
cmp
sbb
arpl
inc
cbtw
jmp
push
and
push
test
sahf
and
dec
mov
je
jns
into
push
jbe
call
mov
inc
sahf
enter
outsl
test
push
push
sysenter
mov
and
jle
dec
aaa
jmp
call
iret
test
sub
in
outsl
fisubrs
repz
lods
insb
xchg
or
mov
repnz
jo
mov
or
insb
into
lods
sbb
scas
mov
cwtl
lock
pop
mov
int3
mov
pop
sbbl
ljmp
cmp
jge
jne
stos
xchg
fildl
test
pop
mov
test
jns
mov
mov
xchg
es
add
ja
filds
out
scas
sub
arpl
out
fcompl
pop
cmp
push
mov
push
iret
test
sub
test
adc
outsl
data16
jecxz
std
loopne
push
dec
hlt
hlt
cmpsl
pusha
xor
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
repnz
jne
add
loope
add
sbb
les
sub
movsl
aam
ds
mov
mov
movsb
inc
sbb
test
repnz
and
pop
es
into
and
inc
stos
add
bound
xchg
data16
adc
rcl
mov
jle
int
js
mov
stc
ss
movsl
cli
xor
icebp
in
addl
add
mov
out
mov
add
xchg
daa
test
outsb
cmp
mov
sub
pop
xchg
movsb
cltd
mov
mov
and
std
in
insb
or
jecxz
repz
mov
adc
scas
inc
into
jbe
je
and
jnp
sub
sti
lret
sub
mov
fdivrp
jo
sbbb
adc
push
cmp
scas
jno
fimull
xchg
popa
sub
cmp
arpl
negl
sbb
jmp
mov
xor
or
mov
js
aam
xor
popf
stos
lret
push
adcb
test
aad
aad
pop
shlb
fistps
movsl
cmp
nop
pop
je
xchg
mov
aam
xchg
xor
enter
enter
addr16
aas
inc
les
xor
and
pop
jecxz
leave
mov
rolb
adc
stos
jb
mov
stos
pop
test
xchg
insl
jo
ret
sbb
inc
std
repnz
jp
faddp
push
xor
jb
mov
push
lret
pop
addr16
movsb
nop
fmull
test
xor
jge
les
insb
ret
addr16
mov
ss
mov
sbb
in
shlb
sbb
aas
arpl
cltd
jnp
and
rol
movsl
push
jge
xor
jl
push
outsb
daa
sub
xchg
gs
ja
push
icebp
jmp
add
add
add
inc
xchg
pop
add
leave
cmpsb
mov
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
cmpb
jne
mov
shr
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
