sbb
add
imul
sbb
cmp
std
mov
es
mov
push
outsl
das
lcall
ja
pop
cmp
add
or
mov
lea
lahf
pusha
decb
shlb
inc
sbb
dec
dec
add
mov
or
ss
sbb
scas
stc
iret
push
adc
sub
insb
push
inc
mov
lret
mov
mov
popf
or
push
mov
inc
xor
jl
movl
scas
pushf
out
jae
sar
in
add
sub
aas
std
clc
in
outsl
jb
or
jne
inc
lods
mov
push
out
xor
pop
dec
mov
mov
mov
sub
dec
pop
jbe
sub
stos
fstps
push
lods
xchg
push
pop
cmpsb
and
fnstsw
dec
adc
clc
or
les
push
mov
repnz
lret
pop
sahf
add
lds
and
pop
inc
push
inc
xor
movsl
push
jno
mov
cmp
mov
and
out
ret
mov
cltd
outsl
test
aaa
mov
inc
lea
cld
xchg
sub
adc
xchg
pop
sbb
cmpsl
jno
aaa
and
cmp
pushf
xor
imul
rorb
inc
repnz
xor
jo
aas
inc
in
stc
jo
push
mov
push
mov
push
dec
mov
fsubp
daa
dec
insb
cmp
in
jl
arpl
push
int
mov
sbb
inc
inc
das
jmp
test
sub
mov
insb
add
and
repz
ljmp
arpl
cld
xchg
xchg
outsb
stos
or
lea
gs
nop
lret
dec
clc
insl
jns
mov
xchg
mov
add
subl
xor
subl
insl
or
sbb
out
es
push
and
fs
enter
popa
push
jmp
mov
adc
mov
test
idivl
add
inc
les
hlt
das
out
mov
mov
lea
je
fs
xchg
insl
ja
in
movsl
rcrl
lds
jno
out
lret
xor
adc
pop
fnstcw
dec
mov
pop
pop
sahf
scas
loopne
cwtl
out
into
lea
xchg
ljmp
mov
pop
xchg
iret
mov
jns
xor
sbb
dec
ret
cli
popf
inc
jmp
sub
addr16
jmp
out
or
addr16
test
xor
repnz
out
adc
sbb
add
cmp
xchg
jg
xchg
mov
xchg
outsb
pop
and
cli
pop
loopne
jge
je
loope
add
addb
push
push
push
sar
mov
push
inc
pop
mov
fcompl
sbb
das
mov
pop
test
andb
shlb
pop
or
mov
ret
imul
mov
sub
out
push
add
xchg
add
push
mov
or
pop
pusha
ret
add
mov
nop
into
pop
mov
pop
test
mov
shrb
or
push
jb
popf
mov
notb
jo
add
pop
push
imul
xchg
mov
pushf
lcall
sub
add
pop
pop
mov
jge
inc
aas
outsl
sbb
mov
add
out
iret
sbb
repz
cs
enter
in
adcl
insb
mov
sub
enter
sub
xor
push
sahf
jnp
mov
xchg
lcall
mov
ds
inc
xor
in
pusha
pop
push
dec
popf
jno
xorps
dec
mov
pop
xchg
push
aam
pop
mov
inc
out
cmp
sub
ja
arpl
mov
daa
xchg
loope
sbb
xchg
jg
and
push
mov
lds
push
mov
xchg
outsb
adc
pop
nop
pop
pop
popf
pop
inc
xor
adc
mov
addb
add
roll
std
cmp
in
mov
adc
stc
clc
inc
loopne
mov
mov
or
xor
fs
add
adc
fdivrl
or
lea
xchg
cmpsb
and
mov
insl
das
jbe
cmp
jle
stc
push
sbb
pop
lods
push
pop
xor
add
push
push
sub
ret
mov
xor
sbb
outsb
sahf
xchg
xchg
push
test
dec
movsb
lret
shll
je
mov
mov
rolb
arpl
mov
jne
pop
enter
clc
lods
int
movsb
mov
cmpsl
add
imul
icebp
fdivrp
cwtl
and
mull
pop
pop
mov
sti
mov
fisubl
mov
fwait
stc
icebp
popa
pop
insl
dec
roll
ss
ss
outsl
mov
mov
mull
xor
aam
push
pop
popf
decb
push
fsub
mov
and
test
mov
dec
out
push
mov
frstor
sub
push
mov
jl
and
stos
icebp
pop
ljmp
sti
pop
sub
mov
mov
mov
test
int
mov
add
jl
stc
cmp
and
pop
jb
mov
inc
movsl
andb
repz
test
inc
add
repz
jns
daa
movsb
pop
push
ret
outsb
lock
ljmp
ds
js
jle
dec
push
stc
faddp
sahf
loop
xchg
dec
mov
mov
cmp
dec
popa
fwait
jp
push
add
in
sbb
mov
cltd
incb
bswap
sbb
fisubrs
push
xchg
jne
popa
cmp
sbb
adc
in
data16
std
dec
negl
daa
push
lcall
in
scas
mov
sar
aas
sbb
and
adcb
pop
iret
or
push
push
adc
mov
push
mov
inc
es
push
sub
add
lret
push
ss
enter
mov
jnp
lret
insb
xchg
js
inc
push
std
hlt
jp
xchg
sbb
inc
pop
mov
mov
add
sub
push
sub
xor
mov
xchg
mov
cmp
icebp
ret
rorl
or
lret
pop
add
mov
mov
mov
mov
cmc
jno
int3
out
mov
push
or
out
stos
jno
inc
push
dec
jmp
jae
ljmp
sahf
dec
outsl
outsl
scas
jle
int
pop
and
test
dec
sti
inc
xchg
xor
dec
xorl
inc
xor
cmp
test
inc
cmpsl
ss
add
mov
enter
pop
mov
gs
xchg
das
and
dec
imul
adc
fwait
xor
loope
jge
rcrb
test
jl
xlat
daa
lret
jl
bound
jl
cwtl
imul
shr
out
jno
out
ss
dec
mov
sub
xchg
stos
adc
cmp
shll
mov
sbb
dec
xchg
and
push
jmp
sbbl
lds
pop
mov
xchg
xchg
adc
add
hlt
aas
nop
fyl2xp1
jge
cmp
popa
and
or
inc
push
xor
cmp
mov
and
leave
add
mov
push
mov
pop
dec
xchg
sarb
mov
push
jb
in
sti
xor
add
pop
add
ja
mov
pop
xchg
roll
adc
jae
adc
aam
lock
mov
cld
push
arpl
mov
leave
mov
cmp
stc
sbb
scas
mov
repz
xor
test
int3
aaa
testb
les
lcall
add
mov
cmpsb
jp
cmp
fcoms
push
insl
inc
bound
push
or
filds
sub
ret
pop
fldcw
or
ficomps
mov
lret
mov
cmp
das
popf
bound
sub
jne
pop
sbb
mov
and
aam
cltd
fildl
bound
mov
add
ss
cli
push
dec
je
adc
mov
mov
add
xor
or
adcl
rorb
in
mov
or
jae
xchg
jb
ds
dec
iret
jl
or
push
lcall
jle
fisttpll
roll
and
xchg
clc
js
in
sbb
das
es
fadds
push
xor
mov
and
lock
divl
cmp
cltd
mov
push
add
cmp
push
fs
orl
mov
cmpsb
and
push
adc
daa
test
mov
sahf
push
jmp
and
cmpsl
xchg
xchg
jb
xacquire
pop
push
addr16
scas
push
mov
pop
fisubs
mov
dec
ret
jbe
dec
jmp
loopne
xchg
scas
nop
lcall
pop
mov
es
dec
lret
sbb
pop
xchg
roll
outsl
std
divps
jge
push
pop
pop
sbb
stc
cmp
sahf
mov
cmpsb
mov
cmpsb
or
jnp
jb
inc
out
mov
je
popa
popa
mov
or
pop
scas
fsts
cmp
sub
cmp
ja
push
pop
inc
mov
jne
testb
lea
mov
adc
into
arpl
mov
or
cmp
dec
popa
rclb
cmp
jle
sub
sub
sarl
xor
sub
ret
lods
mov
mov
hlt
dec
lret
incl
push
mov
test
pop
add
xchg
mov
adc
scas
or
jns
pop
aaa
test
cmp
loopne
rorl
mov
out
popa
subb
dec
mov
or
or
out
mov
sub
loope
test
push
jae
movsl
call
sbb
icebp
movsb
dec
mov
push
pop
push
out
roll
mov
pop
sub
jge
push
sbb
jmp
arpl
addl
insl
les
jmp
push
xor
mov
jae
xor
xor
divl
lods
aaa
lea
cs
or
cmp
sbb
xchg
gs
xor
adc
dec
call
or
mov
adc
cmp
aaa
shlb
jmp
sbb
jae
aad
lret
dec
popa
xlat
out
jne
pushf
shlb
mov
jne
jbe
jp
inc
lods
repnz
insl
add
pop
aaa
xor
cwtl
cltd
push
ffree
cld
iret
mov
js
cltd
mov
dec
repz
dec
pop
ret
mov
bound
or
inc
xor
out
testb
xchg
icebp
loope
std
mov
ret
outsl
cld
stc
fimuls
push
test
dec
mov
or
test
idiv
jbe
test
aad
jnp
scas
push
ja
mov
iret
xchg
mov
push
repnz
xchg
dec
mov
int
movsl
mov
lahf
cmp
cmp
xchg
xlat
add
shll
cmp
jb
shl
cmc
mov
int3
loope
pushf
dec
mov
fidivrs
sahf
gs
addr16
or
in
bt
jp
pop
aaa
xchg
pop
xor
aam
dec
das
or
and
mov
lret
gs
stos
sti
xor
fdivrl
sbb
cmp
jmp
mov
add
mul
test
repnz
jnp
out
push
scas
cmpsb
lock
stos
out
les
lret
cmp
xchg
lret
jge
insb
inc
mov
imul
jnp
popa
repnz
clc
sbb
jno
and
sbb
clc
addr16
push
je
fs
js
inc
inc
xchg
bound
mov
sub
aam
movsl
mov
dec
jge
push
aad
mov
mov
xor
faddl
shl
cmp
cltd
adc
fisttps
dec
out
xchg
mov
xchg
popf
pop
insl
mov
addr16
jmp
cmp
stos
xor
fbstp
popf
inc
lea
aaa
mov
es
pop
sub
xchg
mov
scas
lds
jne
icebp
fs
cmp
sub
xlat
jmp
lahf
imul
xor
push
jns
inc
outsl
cwtl
sbb
mov
xchg
fucom
cltd
add
mov
mov
mov
ficoml
ficompl
and
mov
movsb
imul
mov
adc
push
inc
fnsave
in
fadds
push
mov
sub
xlat
mov
mov
or
cmc
jle
and
mov
mov
int
bound
xor
add
sub
lods
popf
adcl
lret
mov
dec
orl
stos
std
jnp
aaa
das
mov
loop
ret
into
lds
push
sbb
xor
pop
stc
mov
xchg
inc
add
aas
repnz
inc
inc
sbb
pop
lock
inc
push
test
adc
sti
adc
pop
and
mov
xchg
fwait
cmpsl
mov
or
in
mov
adc
pop
add
or
or
jg
insl
out
movsb
int
mov
jecxz
sbb
out
or
lock
mov
hlt
push
dec
dec
sub
adc
or
add
pop
jp
sarb
mov
dec
mov
outsl
push
test
push
xchg
cmp
hlt
movl
in
push
faddl
or
xor
or
test
mov
setne
xor
shlb
adc
movsl
pop
out
les
mov
fstp
lock
loop
push
pop
sbb
rorl
pop
pop
dec
sar
std
repz
xor
js
sub
push
imul
fwait
jnp
fmull
xchg
mov
xchg
aad
nop
inc
sub
adc
xchg
mov
sahf
dec
mov
mov
mov
inc
mov
or
adc
mov
push
pop
and
adc
pop
fadds
repnz
jno
aaa
mov
cmp
jb
shrb
fisttpll
lea
or
outsl
dec
add
jae
sbb
cmc
test
ss
cwtl
sub
jmp
sti
cmp
or
jae
cmc
mov
add
xchg
es
out
sbb
aaa
add
dec
scas
stos
addb
cmp
sti
and
filds
xor
in
in
sub
mov
fnstcw
cs
int
insl
test
xor
xlat
xchg
aam
mov
outsl
in
data16
pop
lcall
sub
repnz
movsb
shr
sahf
lahf
sub
enter
out
popf
out
cmp
add
nop
iret
cmp
icebp
or
mov
jo
stos
lcall
push
arpl
pop
xor
mov
jb
outsl
mov
ret
sub
int3
es
adc
push
jo
ds
xchg
movsb
lea
mov
sti
fcoml
dec
rolb
adc
sub
mov
pop
cmpsl
repz
pusha
jno
shlb
cvtps2pd
mov
add
pop
movsl
scas
mov
dec
cmp
call
fidivrl
xor
jl
in
dec
out
arpl
lcall
rcll
push
jecxz
arpl
fiadds
jae
jns
subps
ja
lahf
arpl
mov
push
int
insl
mov
stc
lds
movsb
movsl
push
shrb
push
enter
rorb
mov
iret
sub
cmp
not
outsb
lret
cld
add
arpl
test
add
mov
repnz
ret
inc
ret
dec
push
jl
jg
mov
and
xor
or
sub
pop
in
jg
pushl
or
scas
mov
xor
cmc
pop
cmc
sbb
fisubl
inc
mov
inc
mov
push
cld
or
xchg
ficompl
add
dec
xchg
pop
cmp
cmp
aas
out
mov
adc
dec
outsl
dec
add
mov
or
lods
btr
shrl
loop
sbb
cld
outsl
add
push
out
clc
in
popf
push
add
call
pop
pop
mov
adc
insb
or
adc
imul
js
jecxz
xchg
stos
dec
data16
jae
sbb
jle
das
mov
aad
in
jns
sbb
in
push
movsl
push
cmpsb
test
cmp
add
sbb
cmp
push
roll
sub
fdivs
adc
mov
push
aaa
loop
pop
mov
mov
jns
stos
test
pop
es
xchg
pusha
jns
ret
daa
cwtl
cmp
out
xchg
add
mov
and
test
insb
dec
subl
and
jne
pop
fdivrs
or
hlt
pop
mov
mov
add
test
or
push
fstl
mov
jmp
push
daa
mov
out
popa
xor
cmpsb
mov
mov
imul
jo
sti
sub
das
sub
ret
aam
iret
out
scas
push
mov
scas
mov
jae
push
jecxz
mov
and
dec
das
xchg
or
cmp
mov
sti
add
or
cld
bound
mov
adc
sub
lds
in
mov
and
lret
dec
mov
sbb
push
ss
xor
shrb
sbb
jns
in
sbb
add
xchg
or
daa
fwait
add
lds
dec
add
es
add
ljmp
sahf
addl
sbb
sub
ficoms
adc
jae
xor
mov
pop
mov
lret
ror
adc
out
sub
mov
xchg
push
addr16
imul
sub
negl
icebp
jle
xor
adc
icebp
loopne
in
mov
add
aad
out
in
push
pop
cmpsb
insl
insl
and
fsubs
mov
adc
dec
inc
inc
xor
xor
mov
std
cwtl
inc
and
lock
dec
ss
aas
xor
stos
je
jle
xor
pop
rcrl
sub
and
sbb
mov
push
gs
insl
inc
add
daa
fadds
jnp
rcrl
fwait
pop
jmp
mov
int3
jno
jge
int
cltd
sub
cmc
icebp
or
push
xor
out
cmp
mov
sbb
cmp
sarb
cwtl
add
jmp
ss
add
pop
adc
insb
dec
jae
mov
pop
ljmp
aas
iret
lahf
inc
mov
addr16
sub
ljmp
adc
lret
xchg
mov
stos
sbb
daa
mov
dec
daa
ja
mov
lret
sub
test
xchg
sub
aad
xorl
jmp
push
pop
ror
pusha
fisttpll
push
fwait
js
adc
ficomps
cs
pusha
loope
addr16
out
daa
adcb
pop
xchg
js
xor
repz
shlb
sbb
subl
sub
cmp
inc
stos
inc
les
mov
push
mov
adcb
pop
and
or
xchg
add
popf
fucomi
ss
cmp
mov
mov
dec
or
mov
test
or
cmpsl
scas
aas
pushf
insb
xor
jb
pop
adc
adc
psrld
xlat
jg
mov
or
movsl
dec
or
xor
mov
sbb
xchg
xor
add
dec
push
pushf
mov
xor
rcll
mov
sbb
cmp
xor
arpl
xchg
pop
or
ficoms
sbb
cltd
lock
ret
lods
adc
jnp
jns
mov
pop
imul
fsts
in
add
add
jecxz
aas
inc
shll
push
loopne
in
xchg
jmp
stos
leave
scas
dec
stos
lahf
or
in
xchg
sub
sub
sarl
jecxz
xor
ret
fs
lods
xchg
mov
add
adc
xorl
push
into
mov
mov
aas
adc
or
mov
pop
and
insb
push
subb
add
sub
adc
add
loope
outsl
movsb
or
push
pusha
cmp
es
sbb
pop
setno
es
iret
mov
mov
lock
mov
mov
xchg
lcall
or
cmpsl
sbb
aad
mov
push
cmp
mov
push
jnp
add
out
push
pushf
icebp
jbe
mov
ficompl
outsb
cs
stos
pmulhuw
dec
jae
test
out
xchg
fcoml
daa
mov
fs
out
jle
lret
fwait
inc
jmp
push
mov
les
jns
dec
inc
lods
ret
cmp
stos
jnp
dec
pop
loope
or
gs
fistl
popf
add
adc
jg
into
test
mov
cmp
iret
pusha
mov
aaa
addr16
aas
pushf
ficomps
jo
adc
sti
iret
lods
bound
adc
push
jl
lods
jmp
cmp
shll
push
mov
jno
ret
cmpsl
dec
sbb
movsl
sub
addr16
jle
cmc
sahf
dec
add
test
pop
rcrb
xor
in
hlt
or
sub
add
push
add
jmp
dec
push
mov
cmp
sti
and
loop
movsl
hlt
adc
pop
sbbb
mov
addr16
loope
cs
or
mov
out
jo
leave
push
sbb
mov
popf
insb
xchg
shlb
pop
push
mov
and
fdivp
adc
mov
ljmp
xor
jbe
cmp
xchg
lods
scas
call
sub
ror
cmp
push
jmp
pop
sub
mov
les
push
ds
cmp
add
and
mov
mov
xchg
add
ss
in
adc
ja
int
xchg
mov
adc
sti
cld
push
lds
js
decl
lret
aam
cld
mov
pushf
in
out
fstl
cmpsb
and
insb
add
js
icebp
loope
add
pop
out
js
jmp
nop
je
in
int3
or
add
repz
into
adc
pop
aaa
inc
dec
iret
jmp
fucomi
idivb
xor
or
dec
aam
andl
pop
outsb
fstl
push
cmp
insl
lret
popf
mov
pushf
xchg
cmpsb
movsl
xlat
push
adc
jle
jmp
ret
int
data16
ret
lock
or
ret
mov
inc
xor
stos
xchg
addr16
imul
mov
aad
pop
div
test
in
inc
sbb
test
push
jg
popa
cmp
xchg
test
add
fnstcw
ja
pop
jp
mov
fildll
mov
xchg
lcall
and
leave
jl
xchg
fsubrl
mov
or
test
cmc
hlt
push
into
jno
jl
aad
mov
repz
roll
rcrb
adc
fnstsw
dec
call
jno
mov
jns
shrd
insb
mov
cmpsb
add
ret
sub
mov
repnz
mov
rcll
xchg
sub
xchg
stos
lock
inc
aas
ret
aam
sahf
xchg
shll
lahf
mov
xchg
xchg
outsl
cltd
in
out
flds
xchg
inc
loop
push
xchg
or
mov
push
imul
pop
cmpsl
mov
mov
mov
fsubrl
imul
ljmp
push
mov
mov
dec
clc
call
bound
push
aam
cmp
iret
je
inc
jae
jns
daa
repnz
or
ja
jge
mov
test
es
js
rcl
push
mov
or
add
and
aaa
add
cli
push
xchg
mov
push
clc
les
jno
fstpl
out
cmpsl
dec
push
sub
fstpt
xchg
jge
ljmp
and
jae
sbb
in
add
ficompl
push
xchg
jl
sbb
xlat
mov
or
add
sbb
call
xor
dec
push
leave
lcall
cmp
test
mov
xor
push
inc
add
repz
and
push
xchg
or
pop
inc
nop
pop
js
push
inc
push
loopne
out
cmp
xor
push
inc
out
push
cmp
rolb
cld
xlat
adc
out
cld
add
mov
faddp
lcall
gs
lods
popf
cwtl
or
imul
lods
inc
cmpsb
into
iret
mov
cmc
repnz
push
stos
mov
cltd
jo
int
pop
mov
or
dec
fs
jne
jge
inc
ds
aam
ljmp
mov
cmp
adc
xor
mov
and
testb
xchg
pop
mov
insl
mov
adc
fistpll
xor
mov
icebp
maskmovq
notl
xor
mov
orl
inc
mov
cmpsl
pusha
rolb
cmpsb
xchg
and
lret
or
sub
pop
sbb
sbb
arpl
popa
mov
jne
scas
sar
adc
icebp
leave
lahf
lcall
xor
mov
scas
mov
clc
stc
mov
imul
or
lcall
push
sub
sbb
mov
xchg
xchg
add
das
xchg
pop
mov
andl
xor
sarl
outsl
jo
lods
ret
aas
imul
fimull
andl
add
sarb
es
and
mov
divl
mov
dec
sub
xchg
test
nop
sbb
pop
int3
loope
das
clc
xor
mov
test
lcall
shrb
push
mov
xchg
push
mov
adc
and
sub
cmp
jo
or
mov
xacquire
subb
mov
and
repz
mov
out
in
mov
loope
inc
or
test
rcrb
lret
aaa
and
insb
clc
xor
pop
pop
mov
mov
cmpsb
popa
sbb
out
cmp
jg
mov
xchg
cmpsl
jns
inc
cmp
lret
xor
cmp
fistl
cmp
jne
cltd
cmpsl
pop
xchg
add
jl
lods
push
sub
mov
xor
xor
leave
adc
stc
and
xchg
cmp
and
pop
xor
push
gs
mov
in
mov
lods
aam
jb
test
repnz
repnz
mov
adc
dec
dec
dec
mov
mov
inc
jno
stos
or
push
out
dec
lret
cltd
sbb
movsbl
call
imul
sbb
and
sbb
test
dec
sti
push
adc
insl
gs
inc
roll
lods
cld
aaa
jno
sarb
test
xor
mov
inc
push
mov
and
test
dec
sbb
mov
out
xor
sbb
or
cmp
dec
je
stos
int
jl
mov
xor
pop
push
lea
adc
das
lea
add
adc
jg
or
adc
das
push
sub
add
insb
or
add
ss
movsl
shrl
mov
insl
mov
jl
divl
repnz
mov
jne
out
insb
sub
mov
stos
sub
and
mov
dec
stos
dec
add
out
sbb
repnz
aad
adcl
lahf
mov
pop
adcl
inc
cltd
fsubl
and
push
loope
mov
fsubl
hlt
jge
xchg
fldenv
sub
out
repnz
in
aas
mov
subps
and
sbb
ljmp
jle
xlat
lock
cmc
lods
in
jo
imul
stos
push
sub
insl
cli
std
rcrl
popa
test
xchg
sbb
xor
mov
jle
mov
inc
or
jno
cmp
mov
or
sti
test
xchg
xchg
sahf
fadd
dec
daa
stos
loope
sbb
sub
adc
fsubs
rdmsr
mov
xor
mov
push
pop
sub
inc
sub
xchg
test
das
and
add
sarb
adc
mov
stos
mov
cmp
dec
scas
mov
outsb
and
popf
adc
js
aad
cwtl
sarl
push
push
pop
addl
loope
and
or
jae
mov
test
in
add
fdivs
jo
adc
inc
std
fldt
pop
dec
jns
das
jo
je
jmp
test
insl
jnp
pushl
fs
adc
adcb
sarb
cmpsb
dec
pop
lods
dec
std
jns
ret
fisttpll
into
dec
pusha
testb
adc
sbb
add
dec
icebp
dec
std
jnp
dec
xchg
stc
test
loopne
sbb
pop
std
sub
jnp
outsl
dec
sub
int
xor
xor
push
insl
fcmovnbe
sbb
push
mov
add
adc
add
shrl
inc
out
cltd
inc
mov
inc
gs
lret
repz
fisttpl
enter
lahf
out
dec
xor
sub
test
push
rcrl
mov
jge
push
popa
imul
mov
mov
jne
iret
lahf
aaa
imul
mov
xchg
and
ja
orl
fs
outsl
movsl
lds
cmpsl
or
test
xchg
testb
mov
pop
pop
jmp
mov
lahf
test
insl
rorb
push
xchg
imul
lods
and
jp
je
daa
int3
cmp
add
lods
push
aad
push
add
sbb
push
lods
js
pop
and
shrl
mov
out
inc
sub
mov
inc
out
bound
test
cmp
in
sub
jno
movsl
jle
xchg
mov
shr
xor
push
sbb
bound
jne
paddb
aam
mov
and
mov
or
repnz
xchg
lods
pushf
scas
cs
scas
popf
add
add
fildl
scas
jle
lahf
jmp
jmp
jae
pushf
or
lret
pop
mov
and
mov
stos
mov
mov
jns
in
xchg
fnstsw
test
pop
and
sbb
dec
std
loope
in
out
gs
mov
fstps
nop
mov
test
test
clc
mov
leave
ss
lahf
mov
pop
push
xchg
popf
aam
push
push
xchg
daa
aaa
push
jbe
or
adc
sbb
pop
adc
call
mov
jne
cmp
aad
popa
loopne
xor
mov
fisttpll
dec
loop
daa
popl
in
jo
insb
ss
cmp
clc
dec
jg
sbb
xchg
mov
mov
cmpsb
lret
jne
adc
ret
xchg
xchg
xchg
int
stc
cmp
je
ja
push
outsb
arpl
outsl
xlat
xor
or
cmp
inc
movsl
ret
mov
pop
idivl
push
icebp
mov
dec
mov
in
out
xchg
cmpsl
mov
cmp
jge
and
insl
fwait
insl
ficoml
xchg
add
dec
dec
inc
jmp
das
shll
jle
arpl
pop
out
fmul
push
out
bound
mov
or
pop
cmp
iret
out
mov
lea
lret
dec
nop
jg
xchg
sub
in
outsb
jae
dec
jbe
adc
push
jle
push
and
sar
xor
in
ja
sbb
aaa
xorl
and
rcll
leave
outsl
hlt
aas
outsb
aad
cmpsb
lret
xor
push
inc
dec
xor
loopne
jbe
imul
dec
lahf
fwait
aas
dec
test
jp
mov
loop
js
xor
popa
xor
and
xor
ds
or
mov
xchg
push
inc
adc
xchg
mov
fildl
jb
addb
sub
xor
xor
sub
outsb
xor
fisubrl
mov
fmuls
sbb
bound
js
sub
ffree
repnz
lahf
jns
jecxz
jo
iret
ret
and
xor
js
push
cmp
xchg
call
call
mov
push
add
sbb
ds
test
jle
xchg
mov
fidivrl
fisttpl
imul
lods
leave
pop
mov
nop
push
pop
scas
aad
mov
cmp
movb
lock
adc
cmp
sbb
inc
in
cmp
pop
pop
sub
mov
bound
das
pop
lcall
inc
mov
mov
out
pop
cmp
jno
mov
fsubrs
rcll
sbb
sbb
cmpsb
jp
mov
jnp
add
inc
fmuls
or
and
mov
push
or
mov
xor
cmp
fcomip
fnstsw
ret
push
in
lock
lcall
dec
stc
sub
mov
mov
push
loopne
add
sbb
sub
out
sbb
lcall
cmp
push
lock
and
into
repz
cmovge
stos
mov
sub
aaa
std
ja
les
mov
cs
pop
cmp
push
movb
out
leave
mov
adc
pop
and
lahf
lcall
shrl
jae
add
stc
mov
sub
rcrl
push
cmpsl
sar
add
mov
adc
xchg
jl
mov
data16
push
fcompl
cmpsl
sub
lret
in
pop
pop
int3
or
cmpl
decb
dec
ds
in
jno
aaa
fimull
repz
cwtl
pop
mov
shlb
push
push
sub
jl
push
add
push
popa
cmp
jb
adc
popa
jae
pop
jns
les
push
cmc
mov
push
and
adc
daa
and
repnz
fucomi
stos
and
push
aad
out
ds
xor
repz
and
clc
enter
insw
or
cmp
aas
stos
fwait
lods
rcr
push
cmpsl
dec
mov
insl
ljmp
inc
loop
cmp
xchg
hlt
popl
addr16
dec
fcmovnbe
fwait
ret
adc
aam
ret
cltd
loop
xchg
or
bound
lcall
jns
push
mov
adc
aam
add
ss
mov
mov
negl
fwait
in
sarb
push
je
xchg
mov
je
insl
aad
out
adc
sbb
lds
or
jb
adc
xchg
cld
jno
jl
ds
push
push
adc
fsubrs
xor
mov
xor
jbe
cmpsb
sbb
jae
icebp
in
lcall
cwtl
gs
ja
pop
fs
lods
in
pop
leave
fcoms
nop
and
dec
lock
xor
cmc
mov
in
lods
dec
or
adc
pushf
add
pop
jo
cmp
nop
notb
mov
stos
daa
adcl
lods
or
pop
stc
adc
cmp
pusha
loop
xor
ljmp
popa
xchg
jae
push
out
mov
mov
adc
or
outsl
mov
cld
jg
jbe
cmc
xor
mov
push
enter
mov
js
or
shrb
lahf
fcos
aad
inc
jo
dec
shr
mov
aam
push
adc
pop
lock
lods
push
adcb
mov
push
jbe
dec
fcmove
mov
jmp
bnd
mov
xchg
or
jb
push
jb
mov
lret
jno
add
jl
sbb
lods
cli
dec
jp
loope
pushf
repnz
mov
je
repnz
test
lahf
mov
lea
popf
ss
sbb
addr16
cmp
jo
sahf
adc
lock
pop
add
inc
fwait
jl
int
mov
ss
lea
mov
mov
sub
fisubrs
or
loopne
pop
push
repnz
xlat
xchg
cltd
mov
pop
inc
pusha
test
ds
add
stos
mov
xlat
in
push
lcall
or
nop
loop
jle
adc
jbe
xchg
mov
out
test
lea
mov
jns
lods
in
xchg
xor
mov
stc
jae
xchg
sub
cmp
test
xchg
lock
mov
addr16
lahf
cwtl
fs
inc
and
stc
daa
mov
pop
and
or
cmc
cmpsb
mov
add
mov
test
jmp
ljmp
add
adc
dec
out
lahf
sbb
dec
sahf
mov
jns
add
lds
addr16
pop
out
cmpsb
iret
mov
into
ljmp
push
js
nop
dec
cmp
mov
xchg
inc
jno
or
into
sbb
xor
jl
xor
push
jne
xchg
dec
inc
pusha
out
push
push
daa
cmpsl
or
arpl
sbb
cmc
jo
fcmovnb
jnp
das
xchg
mov
cmp
lcall
sti
aad
addr16
jge
ss
scas
or
nop
fisttpll
popa
test
mov
stc
dec
stos
xchg
orl
xchg
push
or
fstpt
in
stos
sbb
pop
xor
and
js
pop
pop
std
adcl
adc
ffreep
jae
shl
xchg
pop
stos
das
cmp
inc
and
sti
icebp
mov
negb
sbb
push
fisubrl
in
mov
mov
jmp
ss
mov
mov
or
out
inc
rcrl
or
xchg
ss
sub
push
mov
in
cs
inc
out
sub
fs
adc
aad
pop
sub
gs
ds
sub
adc
mov
mov
fsubl
jle
adc
sbbl
push
dec
mov
xlat
aas
sbb
sbb
test
dec
cmp
cmc
xchg
adc
push
push
popf
cwtl
push
xor
mov
push
mov
pop
in
movsl
call
test
stos
aam
je
daa
dec
add
push
sub
loop
ret
cwtl
sub
fxch
adc
aam
or
xchg
out
in
sbb
std
jns
test
in
add
sub
adc
pushf
mov
jle
sub
mov
sbb
inc
sub
push
pmulhw
addl
imul
es
sub
push
pop
ret
aam
jecxz
push
ficomps
mov
in
aad
mov
xchg
es
ja
cmp
ret
mov
add
sarb
outsl
sub
ret
xchg
push
mov
add
pushl
repz
and
repz
sbb
cmp
add
test
mov
ljmp
lahf
xchg
inc
xor
mov
in
cltd
add
ficoml
xor
push
jne
cwtl
push
flds
xor
mov
repnz
lret
push
aad
jne
sbb
test
add
lcall
gs
mov
push
lret
rcrl
jle
mov
sub
lea
adc
or
movsb
cmp
dec
hlt
jp
out
add
mov
pop
jge
push
pop
pop
je
or
add
and
sbb
ja
mov
fiadds
inc
inc
sbb
aaa
mov
nop
adc
mov
pop
icebp
cmp
dec
xor
dec
sbb
imul
xchg
mov
lds
std
repz
inc
sub
mov
jo
das
in
push
pop
mov
lds
and
inc
xchg
pushl
insl
mov
jb
mov
ss
ja
stos
lret
mov
inc
push
ret
xor
in
sbb
jb
int3
popf
push
shlb
andl
inc
loopne
jnp
inc
push
adc
jp
xchg
mov
mov
adc
xchg
icebp
fmuls
lret
push
pop
popf
loop
jge
inc
cwtl
xchg
pop
leave
sbb
loopne
sbb
mov
test
mov
mov
sub
stos
add
xor
sub
jo
adc
or
cmp
mov
arpl
sarl
mov
inc
sub
popa
dec
sbb
fnstcw
leave
mov
imul
lods
dec
mov
jp
pop
shll
je
stos
mov
jle
push
xor
and
idiv
clc
sbb
sbb
aam
insb
mov
pop
popf
rorb
lcall
shlb
in
sub
loopne
insl
test
cmp
mov
lret
cmp
add
pop
in
mov
cmpsl
inc
push
clc
cwtl
das
mov
into
pinsrw
cmpl
pusha
inc
fstpt
cli
sbb
idivb
subl
movb
mov
lods
ret
movsb
ret
jae
mov
into
out
mov
arpl
add
or
sarb
cmp
or
jbe
loop
lsl
cmp
test
or
jecxz
add
fbld
xchg
add
and
scas
mov
sub
sbb
rcll
adc
xor
pusha
mov
xor
mov
xor
out
adc
insl
inc
movsb
scas
push
shll
mov
xchg
fwait
push
sarl
jne,pt
sbb
rorb
leave
imul
adc
dec
loopne
aad
arpl
or
add
sub
pusha
aaa
movsl
pop
or
dec
faddp
clc
cmpsb
popf
js
pusha
sbb
je
pop
pushf
pop
add
pop
into
les
pop
mov
ss
inc
in
jne
sub
xchg
dec
ss
cwtl
dec
cli
xor
inc
ret
es
call
cld
es
fwait
gs
and
xchg
or
lods
push
mov
mov
les
leave
ljmp
mov
fwait
out
and
push
mov
dec
push
pusha
call
int
fdivrs
sbb
sbb
shll
loopne
mov
sbb
pop
orb
or
adc
push
xchg
rcrl
leave
test
xchg
add
mov
mov
test
rcrl
mov
leave
mov
shl
sbb
jg
out
push
test
lret
aam
push
gs
in
jae
ja
sbb
fprem1
mov
jp
jge
jmp
lcall
push
aam
push
into
cmpsl
lods
add
cmpsl
aad
dec
psubw
mov
push
std
mov
pop
mov
jl
movsl
and
xor
aas
mul
int
orl
sub
sub
arpl
movsb
arpl
in
push
cltd
sbb
out
and
cmpsl
and
inc
fwait
cltd
test
cmp
das
scas
fisttps
sti
jg
mov
scas
jne
fabs
pop
sub
leave
mov
es
rclb
call
jne
dec
pop
and
pushf
movsb
adc
xchg
mov
outsb
ficoml
pusha
daa
je
out
sub
pop
xchg
mov
ds
jb
push
dec
jno
fsubl
xor
xchg
inc
jae
xchg
add
push
inc
push
dec
xchg
daa
addb
int
enter
pop
pop
inc
out
inc
jne
loopne
dec
push
rcrl
rcrl
dec
scas
and
div
ret
bound
or
mov
and
cli
lcall
jmp
in
je
mov
xor
jnp
cwtl
cmp
scas
nop
xor
int
and
in
push
mov
orb
clc
in
adc
pop
or
icebp
roll
dec
push
jle
or
loopne
xorl
push
fcom
lods
inc
das
cmp
arpl
push
pop
fildl
jp
adc
enter
cltd
shrl
stc
sub
push
xchg
pop
jb
xchg
cmp
fs
mov
fistpl
add
sbb
pop
dec
inc
sub
xchg
mov
ror
lds
pop
sub
inc
push
dec
sbb
test
jp
ret
cmp
cmp
jecxz
cltd
lock
sbb
imul
pop
rcrb
clc
sbb
in
fsincos
push
lds
jnp
clc
lret
jl
orb
dec
test
xor
shll
dec
dec
mov
test
sbb
xchg
insl
stos
add
cmc
movsb
mov
pushf
fdivrs
cmp
js
std
jno
jp
inc
fnstenv
pop
add
adc
cli
push
jg
mov
xchg
test
or
mov
int3
mov
cltd
mov
pop
ret
push
push
sti
adc
in
mov
push
movsl
inc
mov
jae
mov
pop
fldt
adc
pop
sbb
movsb
hlt
dec
mov
xchg
xor
sbb
ja
fbld
out
iret
cmpsl
jle
cltd
dec
shrl
or
adc
mov
jne
int
ja
mov
jmp
sbb
xor
pop
ret
dec
add
jp
rclb
xor
out
movsb
stos
dec
ficoml
sub
sti
sbb
fcomps
mov
js
jne
shll
dec
inc
inc
fnstenv
inc
popa
mov
das
dec
push
addr16
leave
repz
fidivrs
xchg
icebp
push
lret
inc
fwait
and
cmpsl
push
push
mov
sbb
xchg
cmp
jl
jne
rcl
call
and
test
lahf
icebp
in
jae
push
and
addl
les
clc
pop
imul
jns
out
sahf
testl
sbb
inc
pop
sub
xor
addl
dec
leave
test
gs
push
movsb
hlt
xchg
in
cmp
mov
nop
jle
dec
inc
xchg
rol
sahf
sub
adc
std
test
push
jb
lcall
mov
hlt
lods
lock
ljmp
stos
outsl
arpl
or
scas
hlt
fadds
push
mov
mov
stos
xchg
push
pop
scas
into
push
mov
xchg
loop
pusha
lret
std
rcr
adc
or
xchg
dec
les
aad
in
insb
adc
outsl
jnp
test
cmp
mov
lds
iret
lret
pop
sbb
mov
lcall
mov
xor
into
js
loop
sbb
inc
outsl
ret
xchg
push
and
mov
outsl
das
shl
gs
aam
std
add
loopne
aaa
daa
fisubl
and
ds
adc
bound
incl
call
insb
test
xchg
inc
xor
and
mov
roll
lret
dec
push
sbb
out
mov
xor
cld
pop
jge
xchg
into
outsb
xchg
xchg
ljmp
mov
lahf
ret
roll
dec
std
rcrb
mov
mov
data16
adc
sbb
in
fldenv
bound
std
mov
movsl
jge
sub
jne
es
mov
js
cmp
xor
outsl
push
mov
xchg
rcl
lds
and
push
sbb
sub
nop
daa
cld
xor
fimuls
inc
cwtl
daa
mov
fdivs
aad
lock
mov
add
or
push
ret
sub
lods
and
cmp
fsubrl
mov
push
jno
adc
pop
push
ficomps
adc
call
add
cmp
lret
lods
mov
std
jl
fdivp
jno
xlat
in
fistpll
fsubs
out
call
gs
mov
pop
jl
pop
mov
cmp
sub
push
cmpsb
sub
and
idiv
lret
jp
sbb
outsl
adc
dec
es
rcr
das
mov
push
movsb
mov
sarl
pop
pop
or
pusha
pop
xor
mov
jo
jle
and
test
loope
cmp
xor
inc
lods
sub
jmp
sub
inc
inc
test
stc
mov
push
inc
push
jmp
movsb
mov
or
lret
shrl
mov
int3
cmpsl
sub
mov
jp
xchg
cltd
xchg
cmp
xor
les
jmp
mov
fisubs
lods
inc
pop
pop
sub
scas
loope
cmpsb
push
or
jb
pop
jmp
or
sub
popf
push
and
push
or
inc
push
and
jp
ja
subb
ret
mov
cmpsb
popf
or
popa
lods
xlat
cmpb
xchg
repnz
mov
xchg
push
and
in
stos
or
push
mov
sbb
xchg
pop
xchg
lahf
ljmp
xor
jno
and
repnz
sbb
inc
mov
aas
out
cli
mov
mov
test
addr16
adc
sbb
mov
and
adc
push
xlat
adc
mov
pop
mov
pop
into
sahf
mov
hlt
int
lcall
out
dec
sahf
ljmp
add
cmp
popa
pusha
ds
ret
mov
movsb
pop
push
or
pop
jns
out
add
ljmp
push
xchg
imul
cmp
add
adc
adc
lock
or
pop
dec
cltd
push
out
and
push
ds
shll
xchg
cli
mov
jle
ret
mov
push
sub
xchg
cmp
lods
xchg
in
pop
inc
aas
adc
subl
call
inc
insb
out
or
lret
das
push
dec
mov
testw
push
stc
push
adc
in
and
mov
add
mov
push
sarb
and
xchg
pop
test
lock
add
and
pop
xchg
loope
movsb
and
ds
pusha
xor
dec
add
adc
fstpl
jbe
adc
ret
jle
lods
mov
xor
ljmp
pop
in
outsb
ret
cwtl
mov
data16
ret
cmp
aas
mov
cmc
cmc
test
cmp
push
cld
test
int3
cs
mov
lock
stos
cmpl
ss
bound
ret
mov
sbbl
cli
lds
xchg
adc
popa
or
xchg
lds
pop
jmp
in
or
pand
int
movsb
xlat
push
in
out
out
js
sarb
icebp
push
or
in
outsl
cmpsl
ja
cmpsl
test
mov
xor
andb
shrb
push
pop
push
sbb
adc
adc
cmp
pop
pop
or
xor
mov
or
movsb
and
cmp
dec
lret
mov
in
adc
pop
mov
push
ljmp
cmpsb
cmc
xor
cmc
mov
cmp
ret
pop
jp
jae
xlat
pusha
shlb
je
out
les
jmp
or
in
cmc
iret
arpl
bound
sub
aaa
test
leave
mov
jb
adc
mov
aaa
adc
hlt
sbbb
sbb
ljmp
loop
bound
fcmovne
pop
rol
cmp
rcrl
icebp
or
pushf
movsb
pop
in
dec
insl
or
push
sbb
adcl
data16
xlat
into
xchg
pop
pusha
in
xchg
addr16
and
rcr
movhlps
outsb
sbb
mov
push
xor
jle
jl
test
mov
nop
jae
fdivl
cmp
addps
mov
jae
gs
pusha
stos
test
inc
xchg
cmp
imul
in
sub
pop
pop
xor
inc
sbb
cmp
mov
in
sub
sub
jb
ljmp
xsaves
mov
pop
das
cmc
jno
sbb
push
pop
loope
imul
push
and
sarb
sub
xchg
or
enter
out
aam
dec
jns
push
popa
mov
stos
push
in
dec
push
xor
ret
loop
iret
xchg
cwtl
mov
das
xchg
notb
mov
dec
sub
dec
insb
mov
jg
not
fsubrl
push
pop
pop
imul
lods
ljmp
into
pop
cmp
pop
data16
add
fisubl
shl
and
fcom
cs
ret
mull
in
mov
mov
mov
sbb
pop
mov
rcrb
and
in
movb
sub
and
cld
adc
push
shll
adc
sub
cmpsl
push
adc
adcb
sahf
hlt
mov
sbb
add
in
jmp
jne
cwtl
add
mov
jle
in
aaa
sbb
or
or
sub
cmpsl
xchg
or
mov
pop
aaa
jp
xor
push
mov
fmul
lock
jle
add
imul
loopne
bound
pushf
loopne
jp
das
out
nop
mov
int3
cmp
insl
scas
fsubr
cmp
jl
pop
sub
sbbb
ljmp
xchg
lcall
inc
es
inc
push
mov
adc
inc
cli
lods
inc
push
mov
movsl
aas
add
or
fnstenv
mov
add
int
inc
roll
arpl
and
cltd
repnz
xor
fcompl
dec
fistl
sub
mov
xchg
lahf
mov
lcall
mull
cmpsb
negl
movsl
and
lret
ljmp
adc
add
ror
ror
cs
adc
cltd
mov
or
xor
fistpl
stos
adc
cmp
call
cli
sbb
mov
js
out
xor
pushl
inc
lahf
mov
fldl
enter
push
das
pop
test
mov
rclb
jae
clc
dec
repz
xor
push
push
aad
outsb
cld
jle
clc
int3
xor
int
sub
scas
or
jp
loope
popf
cwtl
mov
jo
or
cmp
das
xchg
icebp
out
ret
in
out
fnsave
insl
cmpsl
lcall
xchg
test
cltd
push
fsubrs
test
mov
popf
hlt
mull
jo
outsl
or
repnz
sbb
arpl
jb
sbb
ret
adc
aad
lock
adc
insl
pop
shrb
fmull
in
mov
dec
pop
dec
or
xchg
xchg
sub
sub
clc
cli
mov
loopne
sbb
jle
out
rolb
cwtl
test
mov
jle
inc
loope
cmovo
add
fwait
loopne
gs
push
lock
repz
inc
in
imul
pop
mov
ret
cvtps2pd
and
cmc
ljmp
stos
das
pop
fcmovb
pop
loopne
lods
cmp
or
bound
jae
push
xor
push
js
jbe
xchg
gs
negl
or
clc
jno
adc
je
or
cwtl
fimull
or
cmp
and
imul
test
jb
sbb
fistps
das
jle
insl
sub
inc
and
pop
sub
inc
mov
cmp
xchg
and
and
or
lds
scas
aad
xor
int3
sbb
xor
mov
xchg
lods
dec
lret
mov
jbe
das
cld
dec
or
xchg
cmp
jp
adc
jle
push
inc
jns
push
adc
jno
mov
ret
xor
pushf
adc
pusha
insl
xor
sub
repnz
test
jo
aaa
insl
pusha
mov
ss
rcrl
jo
fwait
pop
jmp
call
xor
jge
cwtl
inc
ss
or
scas
pop
adc
sub
fwait
jns
pop
sbb
add
mov
fwait
pop
je,pt
inc
xchg
xor
xchg
sarl
dec
out
jnp
gs
cmp
hlt
test
cltd
push
xchg
push
sti
std
std
mov
jmp
fisubrl
push
imul
jge
test
out
jmp
in
fwait
add
xchg
clc
pop
imul
push
nop
into
or
jle
pop
fwait
pop
mov
jmp
int3
int
sbb
pop
rcr
out
jecxz
mov
out
movsl
int
and
dec
sub
je
xchg
jge
repz
pop
pop
fidivrs
inc
xchg
mov
dec
int
cltd
jns
pop
dec
sub
movsl
mov
xchg
sbb
test
subb
jle
mov
mov
mov
push
pusha
mov
push
enter
sbb
mov
jns
xor
ror
xchg
xchg
or
inc
imulb
mov
mov
lods
test
mov
popf
jecxz
push
je
scas
mov
and
testl
stc
and
jecxz
test
inc
pushf
fmuls
in
aad
pop
imul
push
fs
sbb
adc
mov
pop
insb
stc
add
movsl
adc
push
les
sbb
mov
xchg
cvtps2pd
scas
mov
dec
ljmp
insb
jg
into
test
xor
jg
sbbl
xchg
test
push
mov
fimull
dec
mov
stc
outsl
inc
loope
es
jecxz
xchg
pop
adc
int
pop
out
inc
out
cmp
lret
loopne
xchg
icebp
sub
dec
inc
icebp
xorw
mov
cmpsb
and
adc
sbb
jge
xchg
decl
jmp
sub
pop
mov
fisttpl
roll
cli
inc
cwtl
sub
fistps
popf
or
xchg
arpl
push
pop
push
aaa
stc
inc
inc
bound
xor
push
call
xor
insb
jmp
sub
or
mov
sbb
adc
int3
sbb
push
mov
cmp
pusha
arpl
ficoml
cmp
mov
out
imul
add
call
lds
cmp
ss
xchg
sarl
sbb
jnp
in
orb
xchg
mov
xor
fcomp
in
pusha
push
in
jo
xchg
sahf
sbb
ja
push
mov
jb
sbb
das
sub
xchg
sub
mov
in
inc
rcrl
mov
cmp
ds
inc
mov
lds
aaa
pop
mov
call
or
lods
xchg
lea
and
push
mov
pop
movsl
insb
in
adc
stos
popa
cmpsb
roll
pop
mov
sub
sbb
xor
mov
add
js
cmp
in
xchg
stos
sahf
out
xchg
sbb
push
xchg
fists
jp
xlat
cmp
stos
loopne
mov
enter
jge
jle
dec
fs
ret
dec
das
sub
mov
es
popf
jae
push
dec
ficomps
sub
cmp
lds
jb
sbb
pusha
outsb
ficompl
lahf
add
sbb
data16
pop
mov
dec
xchg
scas
fidivs
mov
jp
adc
mov
xchg
jmp
xor
xor
movsb
add
in
sarl
rol
movsl
dec
mov
je
int
inc
std
fbld
iret
in
inc
mov
mov
jg
sbb
pop
mov
mov
dec
rclb
sub
push
clc
jo
pop
sub
dec
sarl
and
stos
enter
jo
mov
dec
in
jle,pt
bnd
adc
pop
cmc
repnz
roll
dec
fildll
xchg
add
adc
jo
mov
adc
loop
and
sbb
loope
aaa
loopne
mov
mov
inc
xor
lahf
lock
in
mov
pop
test
dec
cwtl
push
repz
in
mov
fisubl
fwait
sti
bound
fiaddl
gs
mov
cmovs
jbe
cli
mov
xchg
loop
addr16
mov
mov
aas
outsb
mul
add
fwait
xor
xchg
push
dec
lret
leave
jg
subl
sbb
xor
adc
lock
mov
cmpsl
js
into
in
push
push
stos
cmpsb
pop
sti
les
ficomps
and
in
dec
jecxz
fidivrl
es
testb
push
push
sahf
push
xor
in
mov
pop
jnp
stc
pop
xchg
iret
dec
sahf
adc
mov
lcall
xchg
das
rorl
ss
subl
xchg
jno
lcall
test
movsb
leave
fimull
fldt
inc
movsb
sub
jns
pusha
xchg
insb
insb
sar
dec
daa
lock
int3
sbb
rcrl
sbb
fldl
xchg
mov
mov
imul
stc
iret
sbb
hlt
push
sub
mov
incb
sahf
mov
mov
in
cmpsb
fwait
in
sbb
psubusw
mov
sbb
mov
bound
movsl
popf
fnstsw
loop
add
xor
aad
sbb
fcomp
filds
jl
jo
add
or
mov
push
ret
fisubs
clc
icebp
ljmp
push
daa
mov
add
leave
aad
or
jl
mov
add
jge
aas
stos
xor
sbb
lds
fdivrs
fisttpll
jmp
sub
and
add
jo
xchg
inc
test
das
iret
repnz
adc
inc
xor
sbb
into
mov
sbb
in
cs
cmp
ljmp
fisubs
adc
fsubrl
push
fcomi
das
mov
rcrb
xchg
push
outsl
sbb
or
sbb
aam
cs
pusha
inc
call
enter
mov
icebp
pop
cmp
cmpsb
dec
and
shlb
inc
mov
push
mov
es
jno
lcall
inc
movsl
jle
shll
fidivl
xchg
mov
xchg
out
loop
pop
sub
inc
dec
movsl
aad
push
mov
mov
or
popf
shrl
test
mov
cld
out
push
sub
int3
sub
lcall
dec
mov
sub
lret
sbb
loope
sarl
icebp
iret
pop
lods
sub
popa
push
ret
or
push
mov
adc
int
aas
das
nop
repz
push
das
mov
pop
mov
lds
ror
mov
outsb
movhlps
lea
mov
pop
sub
sti
and
jl
mov
and
xchg
imul
xchg
pop
cmp
sbb
sbb
jno
dec
addr16
add
arpl
sbb
pusha
sbb
mov
fisubl
stc
sbb
mov
fdivl
repnz
or
mov
sub
arpl
je
lea
push
pop
xor
mov
inc
jg
push
jmp
add
in
nop
out
inc
gs
test
and
lret
cmp
mov
add
stos
xor
mov
int
pop
int
jnp
mov
popl
neg
jbe
or
icebp
std
js
movsl
scas
fisubs
fistpll
mov
inc
push
js
jge
enter
popf
sub
inc
das
adc
add
push
push
outsl
shrb
negb
fdivrs
push
cltd
xchg
xchg
jle
push
sub
aam
icebp
and
lret
test
mov
inc
in
in
mov
sub
insb
add
cltd
push
insl
jb
xchg
xor
dec
scas
addl
mov
jmp
ds
dec
mov
dec
nop
fldenv
popa
or
jnp
mov
loopne
jecxz
mov
cmp
adc
in
inc
inc
xlat
sbb
test
outsl
jb
addl
psubsb
jnp
pop
sar
enter
aaa
ss
in
loop
ss
out
and
add
imul
jmp
subb
bound
incb
or
inc
movsl
sahf
inc
xor
cmpsl
add
scas
pop
adc
xorb
and
rcll
bound
sbb
aas
sub
inc
int3
sbbl
jp
xor
sub
cld
cmp
sub
lret
jnp
scas
xchg
test
add
test
adc
mov
nop
movsl
enter
mov
push
push
ds
cli
test
imul
in
pop
outsl
push
in
jb
push
xchg
pop
pop
call
adc
lahf
mov
ljmp
mov
mov
mov
std
arpl
xchg
pop
inc
jg
mov
and
fs
roll
lahf
pop
push
scas
xor
mov
sbb
xlat
sub
incb
mov
loope
outsl
adc
outsb
testb
xchg
xchg
sbb
ret
xchg
xchg
and
dec
jmp
lock
sbb
xchg
mov
je
add
in
lock
add
dec
les
gs
lret
mov
cli
cmp
popf
test
add
lods
sub
xchg
cmc
popa
jnp
sbb
and
lods
adc
and
orb
xor
pop
in
repnz
fadds
pop
adc
mov
stc
mov
fstps
loop
and
outsb
push
rcll
ss
mov
inc
sbb
xchg
or
xlat
test
push
aad
push
xchg
sar
cmp
xchg
and
hlt
popa
push
xor
in
nop
cli
mov
mov
lret
xlat
cmc
cmp
cmp
jnp
xor
out
mov
push
jns
ret
out
xlat
lds
enter
add
sbbb
cs
adc
out
push
and
or
adc
rcll
and
shlb
xorb
xchg
sub
sub
sub
mov
rolb
and
push
inc
in
jne
jnp
sub
mov
push
push
push
pop
or
jbe
sub
mov
imul
xor
add
cmpsl
ficompl
or
int3
orl
inc
scas
popf
cli
and
mov
mov
sub
and
push
sbb
inc
outsb
push
add
pop
leave
mov
inc
icebp
sti
mov
xchg
sub
stos
mov
xor
je
adc
lret
mov
push
data16
adc
popf
mov
movb
push
jno
xorl
xlat
adc
adc
insb
cmpsl
fistl
and
in
ljmp
scas
xchg
or
mov
mov
cs
test
mov
jge
popf
xor
and
or
cld
shl
mov
mov
or
push
mov
mov
push
das
sahf
movsl
mov
sbb
loop
xchg
mov
lds
vmulsd
pusha
in
int3
rcrl
fldcw
popa
loop
adc
xorb
push
js
mov
dec
mov
dec
dec
inc
xlat
mov
jns
pop
arpl
jno
push
rorb
push
or
cmp
dec
adc
aad
mov
ficomps
imul
or
out
and
xor
cwtl
pop
pusha
aad
mov
jbe
cmpsl
sbb
xor
pop
mov
push
leave
xor
loope
adc
lcall
ret
sahf
push
xchg
xchg
pop
cmp
adc
out
pushf
cmp
mov
sahf
test
or
add
dec
push
inc
sub
in
sbb
scas
leave
rcl
sarb
jp
enter
stos
push
adcb
push
pop
sub
dec
dec
je
mov
push
bound
cmp
in
in
insl
dec
mov
inc
fildl
mov
cmpsl
xchg
jo
cmp
std
loope
jp
pop
mov
push
cmp
add
fistpl
inc
xchg
add
sbb
pop
jnp
fwait
incl
ja
mov
repz
lret
add
popf
out
adc
sar
fs
sarl
shl
cltd
fstl
mov
cmpsb
lds
not
cmpsb
loope
pop
sar
loope
adcb
lods
jne
fistpll
movsl
insl
cmp
cmp
lock
orb
notl
call
inc
jne
push
xchg
sub
clc
push
imul
mov
push
pop
jmp
sub
rorl
sar
jecxz
xor
dec
shrb
movb
pop
cmp
xchg
jge
adc
mov
es
pop
xchg
das
dec
roll
lock
lea
push
movsl
jle
ret
out
arpl
inc
push
jecxz
or
inc
cmpsl
int
dec
push
icebp
test
loope
xor
xor
adc
movsb
outsl
xlat
jle
pop
sub
vpand
mov
addw
nop
jne
pop
jo
aad
lar
adc
cmpsl
dec
lret
jge
push
nop
sar
jge
out
xchg
push
xor
mov
xchg
enter
mov
rorb
xor
push
pop
sbb
mov
das
sub
pop
mov
pop
repnz
dec
ds
arpl
fsubr
mov
add
bound
lret
inc
icebp
sub
hlt
ficomps
xlat
xchg
cmp
ss
mov
aas
add
outsl
outsl
or
lret
cmp
aam
jecxz
push
cld
sbb
lret
es
iret
adc
xlat
js
pop
jno
test
rolb
fmuls
sbb
pop
xchg
mov
adc
aaa
repnz
icebp
sub
adc
gs
icebp
rcrb
jg
push
and
outsb
mov
lret
mov
pop
addb
ljmp
leave
shl
repnz
inc
xor
mov
int3
rclb
dec
daa
add
movsl
es
pushf
push
push
aaa
push
pushf
mov
jp
mov
repnz
pushf
inc
clc
add
lahf
shll
jb
mov
or
addb
mov
inc
into
push
orl
mov
mov
pop
pop
ss
stos
jmp
lahf
pop
nop
in
and
arpl
mov
je
cmc
jbe
adc
jmp
add
test
cli
xor
into
dec
hlt
pop
xor
loope
mov
inc
inc
push
fwait
sub
sub
sbb
and
xchg
loopne
dec
xchg
push
outsb
dec
std
iret
lock
into
cltd
adc
push
cltd
mov
les
out
lret
notb
push
aam
stc
mov
out
jle
ss
cmp
jecxz
js
jg
push
inc
jecxz
jg
inc
mov
adc
inc
pop
sbb
es
iret
push
xlat
je
cld
out
lret
or
pop
xchg
mov
faddl
ljmp
imul
cmc
sub
std
arpl
mov
adc
cmp
pushf
cmc
fisubrs
maxps
sbb
pop
orl
es
pushf
mov
or
mov
cmpl
and
rol
sub
testb
ljmp
xor
mov
cmpsb
vpunpcklwd
jbe
mov
push
add
pushl
outsb
lahf
add
das
js
cld
ja
cli
ds
inc
mov
xchg
sbb
lcallw
loopne
loope
or
movlps
fadd
sub
call
hlt
mov
xchg
out
and
and
and
fidivrl
pop
lret
or
xor
lcall
das
sub
lods
adc
dec
jl
xchg
push
mov
jl
mov
mov
clc
push
or
cmpsl
idiv
scas
outsl
dec
and
adc
daa
dec
ret
xor
loopne
sar
imul
lret
lds
jns
lods
nop
testb
push
lret
inc
adc
adc
out
mov
push
mov
xchg
xchg
shlb
cs
push
hlt
mov
andl
sbb
mov
add
dec
lret
sti
jb
sub
jmp
aad
cmp
dec
mov
shll
dec
sbb
push
inc
in
lret
std
leave
push
push
xchg
pusha
test
fstps
dec
cmp
sub
test
call
int3
ss
aaa
xchg
into
mov
pop
add
add
popf
decb
adc
ss
push
or
lret
mov
das
in
sti
mov
xchg
sbb
cmp
shll
outsb
fisubrl
mov
cwtl
or
aad
shll
pop
faddl
sub
sub
psubsb
shrb
mov
push
jmp
sahf
sbb
push
sbb
mov
movsb
rorl
sbb
test
ficomps
int
inc
add
mov
dec
xchg
mov
daa
int3
inc
movsb
and
movsl
in
in
jae
mov
shlb
cmp
add
adc
stos
xor
sub
je
mov
mov
repz
pop
adc
decl
arpl
inc
cmp
sub
xor
faddl
sbb
mov
test
jae
and
int
and
adc
jne
inc
dec
push
jecxz
inc
rorl
sti
push
es
mov
sti
dec
clc
imulb
outsb
mov
sub
movsb
xor
fsubs
test
sbb
hlt
add
icebp
pop
movsl
dec
out
std
mov
push
jl
jo
cli
addr16
mulb
jle
mov
jecxz
cltd
pop
jmp
jge
dec
and
or
out
cmp
inc
lret
sbb
test
lcall
lcall
jnp
xchg
lods
in
push
call
pop
mov
push
lds
inc
dec
outsb
loope
ja
inc
jnp
xor
add
push
push
xchg
nop
inc
sbb
addr16
leave
testb
or
ja
sub
cmp
ljmp
lods
jnp
rorl
dec
add
xorb
cmp
adc
outsb
aaa
xlat
add
cwtl
xchg
pop
sub
pop
mov
lahf
mov
xor
jmp
scas
ss
aam
push
xor
xor
push
in
mov
mov
inc
sub
xchg
fwait
mov
jecxz
push
or
daa
cwtl
xor
mov
cmpsl
mov
dec
cmp
fcoml
int3
loopne
pushf
test
and
inc
push
lcall
xor
push
sbb
pop
call
mov
cmc
ljmp
daa
mov
mov
sub
fwait
test
sar
rclb
xchg
ret
mov
fdivl
outsl
dec
jl
mov
lcall
lods
loop
int
and
sar
xchg
jmp
imull
mov
push
lret
fisubrl
mov
daa
push
push
cmc
xchg
sbb
outsb
cmp
and
pushf
int
fistpl
lds
or
sti
mov
push
sahf
insb
or
cmp
jge
sbb
push
push
inc
imul
jb
addr16
add
pop
aas
mov
fstl
and
outsl
or
jb
cmc
out
fisubl
xor
ret
stc
lcall
addr16
push
repnz
or
add
pop
rolb
aam
stc
and
inc
cmc
sbb
cltd
and
popa
xchg
inc
lahf
xor
mov
mov
test
mov
lret
pop
movsl
fadds
sbb
add
sub
sbb
xor
aas
int3
movsb
xor
pop
ficomps
push
adc
cmc
push
test
pop
push
hlt
sub
push
jmp
xor
call
mov
mov
or
out
popa
sbb
inc
shlb
push
addr16
push
jno
enter
pop
inc
or
dec
xor
xor
cltd
lods
push
add
es
mov
imul
cltd
or
fidivs
xchg
lods
jbe
shl
cmc
mov
out
in
jb
push
pop
sub
mov
imulb
aas
xor
dec
outsl
cmpsb
cmp
cmp
jnp
bswap
icebp
push
int3
lds
mov
push
fcom
cs
pop
push
stos
fcoms
inc
push
stos
roll
push
into
xor
cmp
xor
aad
adc
jmp
sub
push
aaa
pop
add
insl
movsb
jmp
mov
add
popa
jnp
test
inc
icebp
inc
and
popf
shll
shlb
fs
adc
ds
popf
inc
in
in
outsl
sbb
popf
sub
out
or
jg
ret
nop
repz
mov
push
lret
pop
xchg
inc
fxch
out
jge
pop
mov
sbb
aam
rcr
mov
fnstenv
dec
lcall
sub
sbb
xchg
ret
out
xchg
add
push
ss
inc
out
xchg
inc
test
sbb
pop
dec
imul
cmp
enter
in
test
mov
loop
or
fadds
loop
jmp
jecxz
shr
fildl
out
mov
out
out
pop
es
in
push
loop
push
int3
jge
outsl
jae
xchg
dec
aas
lret
fistpl
adc
mov
fs
mov
ja
popf
push
sub
pop
sub
in
sub
sub
add
cwtl
test
cmp
out
or
pop
add
pop
mov
cmp
jno
out
pop
mov
bound
xor
push
cwtl
pop
mov
add
in
ret
outsl
pop
mov
test
cmp
mov
subl
adc
dec
xchg
mov
das
xor
aam
mov
add
xor
jbe
stos
jg
dec
cmp
outsl
xor
pop
jmp
mov
sbb
leave
test
push
in
jg
lcall
xchg
std
fcmovnu
xchg
pop
shrb
fdivl
jo
pop
jg
mov
xor
lea
out
js
hlt
inc
xchg
inc
push
xchg
add
loop
test
dec
dec
pusha
test
xchg
fbstp
or
enter
dec
pop
notl
dec
xor
aam
pusha
bswap
push
nop
mov
clc
imul
add
dec
sub
popf
push
roll
xchg
mov
cmp
jne
int3
sub
fidivl
stos
dec
jmp
jne
push
jno
mov
cmpsb
add
cmp
mov
push
cmp
sbb
cmpsl
cmpsb
cli
push
xchg
and
fwait
subb
mov
cli
jle
sbb
push
xor
push
xchg
xchg
call
ds
push
ss
movl
jnp
lods
pop
cs
and
sbb
cmp
leave
mov
cmpsb
icebp
loop
xchg
mov
pop
movsb
fmul
pop
in
add
test
cmp
fdivr
jb,pn
cmpsb
jecxz
test
jge
mov
pop
push
imul
xchg
push
pop
daa
rorl
imul
hlt
add
xchg
push
aam
lods
out
clc
loopne
rep
outsb
mov
jmp
test
out
out
gs
fstl
cmp
enter
test
dec
aad
shlb
sub
jmp
jbe
shr
adc
fwait
out
mov
push
or
inc
cwtl
out
jle
adc
push
jne
fildl
int
adc
adc
mov
andb
orl
out
cmp
or
mov
cmp
out
fnsave
jge
fimull
xchg
pushf
sub
xor
mov
sub
int3
pusha
pop
sub
repz
ja
jae
fsubrl
inc
loope
std
inc
adc
es
arpl
jle
adc
fsubs
xorl
cwtl
pop
add
scas
dec
push
cmp
in
mov
cmp
fists
xor
insb
add
sbb
xorb
je
popf
pop
ja
leave
popa
jmp
in
sub
jecxz
enter
popf
test
push
xor
insl
shlb
mov
leave
xchg
mov
sahf
repnz
mov
enter
in
or
ficoms
cwtl
xchg
fcoml
in
push
mov
outsb
lea
add
imul
movsb
ficoms
loopne
cmp
icebp
inc
jmp
insb
or
mov
enter
rcrl
aam
mov
insl
mov
mov
xchg
mov
mov
mov
adcl
lret
ja
pop
jmp
cmpsl
sti
dec
ror
dec
add
pop
jg
or
lahf
pop
gs
xchg
lret
jp
lock
cmp
xchg
repz
pop
icebp
cmp
xor
out
loope
repz
iret
fdivr
sbb
popa
mov
mov
mov
mulps
jg
fcompl
mov
inc
fucomp
and
sbb
xor
repnz
or
int
into
aas
xor
aaa
add
sbb
dec
xchg
out
dec
push
mov
jl
pop
xor
jge
ret
daa
bound
jbe
mov
add
js
dec
pusha
sub
movsb
bound
into
adcb
gs
mov
sub
cmp
xchg
out
lret
adc
inc
mov
int
sub
test
inc
aad
fnsave
dec
mov
lret
rolb
xor
movsl
aam
sub
and
pop
popa
push
loop
fldcw
inc
xor
std
jnp
pusha
call
mov
subl
ljmp
sbb
xchg
pushf
mov
rorl
inc
push
fildll
jl
add
jp
adc
cmp
pusha
js
shrl
out
mov
pop
add
cmc
bound
insb
popf
in
mov
cltd
cltd
mov
mov
pop
cmp
sbb
inc
je
lret
call
scas
add
add
mov
les
mov
ss
jns
jae
sub
orb
pop
sti
int3
sbb
xchg
clc
sub
jg
psubusb
mov
and
adc
jns
mov
mov
call
out
adc
call
push
mov
xor
stos
jp
push
jb
ret
mov
ret
out
adc
insl
imul
stos
add
lret
test
or
pmaxsw
mov
sti
mov
gs
ja
pop
sbb
mov
add
push
pop
fisttps
or
jb
pop
mov
xor
mov
in
fistl
xor
imul
or
xchg
jne
cmpsb
cmp
xchg
xchg
adc
mov
xlat
mov
into
push
xor
push
inc
adc
je
or
cmp
cmp
pusha
in
sti
pop
sub
mov
xchg
lret
dec
xchg
add
fadds
shrb
and
dec
or
adc
imul
jbe
dec
pop
mov
mov
in
je
je
mov
movhps
sub
add
dec
push
push
dec
sti
in
jae
arpl
int
out
fistps
data16
mov
cld
push
cld
push
sub
mov
dec
adc
minps
mov
cmpb
jecxz
add
scas
repz
adc
adc
push
jmp
or
movsb
xchg
fst
sbb
scas
push
jle
movsl
xor
or
test
fwait
in
pop
pop
stc
movl
push
add
fcmove
cmp
mov
mov
xchg
mov
cwtl
xor
pop
push
xor
sbb
scas
mov
or
dec
sub
lcall
gs
jno
push
call
mov
fstpl
lahf
jb
iret
inc
inc
pusha
sar
xor
and
aad
adc
adc
or
push
fs
pop
pop
pop
repnz
and
std
imul
or
jae
and
mov
xor
inc
sub
adc
nop
mov
or
stc
mov
lahf
pop
les
sbb
mov
mov
mov
hlt
jno
imul
out
ret
jmp
xor
loopne
mov
adc
sub
js
outsb
xor
lock
fiaddl
and
ds
and
or
aam
in
add
mov
add
xor
sub
inc
sub
testb
shll
insl
and
mov
div
inc
cli
push
lea
jbe
cmp
jmp
or
push
mov
mov
sbb
iret
sub
lret
out
movl
clc
scas
or
push
adc
cmp
mov
push
push
lcall
mov
into
jns
lret
fdivl
pop
mov
cli
push
xor
fldt
push
mov
push
cmpb
es
mov
cmpsb
push
shl
je
inc
popa
repnz
ret
lock
pusha
or
push
or
jne
xchg
jb
loop
icebp
and
fists
inc
sbb
dec
dec
mov
loope
dec
lcall
dec
dec
inc
dec
mov
lcall
and
loope
sbb
stos
add
dec
mov
mov
dec
add
andl
cmp
add
xlat
sbb
add
stc
enter
ret
dec
insl
push
lods
pop
jo
test
jecxz
push
and
jp
enter
cmc
pop
mov
xchg
lret
inc
stos
mov
inc
clc
mov
sti
fldt
xor
jg
jae
and
cmp
cld
test
add
ret
jecxz
push
and
mov
add
sbb
inc
jmp
pop
add
nop
push
mov
std
pop
std
inc
into
in
xchg
or
in
adc
xor
dec
out
push
mov
fsubrl
and
xor
aad
sahf
loope
ret
xchg
mov
xchg
sahf
add
inc
dec
push
cmp
ja
sbbl
cmc
and
bound
push
xor
sub
loope
scas
data16
lods
push
jno
jge
es
sti
in
jnp
lcall
inc
fcompl
xchg
stc
movsl
imul
xor
cmp
pop
es
jno
mov
mov
bound
mov
or
das
lret
daa
bound
in
cmp
stos
inc
aam
inc
and
shll
dec
inc
and
cmp
jno
jle
sarb
jg
xchg
mov
add
mov
lods
pop
sbb
dec
dec
jbe
mov
mov
push
lret
lods
out
lods
pop
mov
and
pop
mov
pop
inc
cmpsb
insl
inc
fsts
lods
cmp
addr16
cmp
sti
repz
dec
pop
sbb
mov
aam
mov
sbb
ret
mov
inc
lret
push
cs
push
shlb
inc
push
or
pop
xor
aaa
cmpsl
adc
add
xor
sahf
push
loope
subb
popa
mov
push
enter
push
das
test
fistps
rcrl
jno
fidivrs
nop
xchg
lcall
pop
mov
stc
push
push
or
jg
and
fisttpl
cmpsb
cmpsl
hlt
aaa
cmp
lcall
lea
repz
mov
jb
or
in
pop
dec
pop
fnstcw
or
roll
mov
or
sti
dec
test
sahf
jge
add
or
popa
jno
call
pop
jmp
fwait
repz
test
sub
adc
loopne
ficomps
pop
sub
lret
out
cmp
cmp
popa
test
pop
push
mov
cs
xchg
fsubr
mov
loop
add
jp
aam
or
lods
inc
test
mov
lock
fwait
and
xchg
into
or
int3
subb
fsts
xchg
insb
mov
cmpsl
xor
dec
scas
xchg
push
lcall
sub
inc
lods
push
cld
test
lea
sub
stos
pop
lock
xchg
ret
push
sub
mov
roll
popf
aaa
sti
pushf
testb
pop
xor
pop
in
jne
sti
jae
sbb
ret
shl
push
mov
cli
xor
sbb
fdivrs
jg
cmp
ficompl
and
ret
mov
shrb
rcrb
push
lahf
out
jmp
movsb
aad
adc
xchg
inc
adcl
stc
dec
mov
cmp
mov
stos
enter
aad
mov
dec
jne
test
sub
push
xlat
mov
icebp
leave
jno
lahf
fcompl
lock
push
cmp
pop
push
jns
cmp
push
jo
mov
pop
mov
cld
inc
in
mov
imul
mov
pop
lods
daa
jl
out
xor
jmp
mov
daa
pop
push
cmp
lods
popf
add
pop
adc
ret
orl
jp
aaa
cmp
mov
pop
push
leave
mov
jnp
scas
mov
lods
int
sub
inc
inc
lods
test
jb
sub
add
add
lods
lea
sbb
or
push
pop
lock
lcall
outsl
jnp
xchg
movsl
arpl
shll
push
pop
jg
inc
adc
fwait
scas
cli
pop
into
xchg
fistps
xor
filds
mov
imul
mov
add
fcomps
cmpsb
or
mov
pop
in
subb
test
rorb
popf
sti
or
mov
pop
jge
scas
lock
bound
sub
call
push
shrb
hlt
or
outsl
xchg
mov
lock
fcomi
xor
or
pop
xchg
lock
in
mov
nop
sahf
movsb
shll
lea
daa
and
call
adc
inc
push
inc
or
pushf
push
imul
push
or
lods
push
ds
push
orb
aad
orl
xchg
std
stos
test
insl
lods
clc
lahf
jg
add
test
cmp
mov
dec
pop
shlb
xor
mov
push
and
pop
push
iret
call
lea
push
in
jmp
leave
push
or
popa
es
dec
mov
push
xor
sti
and
push
shlb
test
push
cltd
adc
mov
pop
inc
pop
sarl
sub
rorl
in
push
shll
sub
daa
pop
in
xchg
and
imul
stos
adc
arpl
push
sbb
dec
das
in
inc
in
mov
jns
pop
mov
inc
sub
push
popa
xchg
push
js
pop
pop
fcoml
repnz
lret
aam
mov
popa
ljmp
cmp
sub
fdivrs
inc
push
pop
mov
test
lods
or
push
cld
xor
icebp
mov
js
jg
jg
jo
pop
push
or
adc
cli
xchg
jne
sti
pop
out
adc
mov
pop
and
and
jne
jmp
dec
std
mov
jns
inc
or
jbe
ljmp
sbb
push
pop
dec
cmp
leave
and
xchg
sub
scas
loope
sahf
jmp
push
jecxz
pop
cmpsl
adc
dec
inc
rorl
jle
lock
dec
stos
shll
fwait
mov
scas
fistpll
test
inc
dec
in
mov
jae
imul
pop
mov
lahf
mov
cld
or
add
inc
adc
pop
mov
sbb
or
dec
rol
cmp
test
and
sub
dec
jbe
pop
sbb
jb
push
mov
in
dec
fcomp
xchg
pop
mov
iret
mov
out
mov
loope
loope
int3
test
cmp
mov
pop
sti
aas
pop
icebp
mov
adc
idivl
enter
sbbb
mov
mov
lea
mov
lret
or
add
lret
adc
fucom
mov
stos
mov
lods
data16
xchg
inc
inc
das
jle
lods
mov
inc
mov
sbb
xor
xchg
cmp
mov
or
ds
repz
pcmpgtd
lret
nop
sbb
fildl
repnz
sub
out
js
sub
xlat
inc
loopne
sahf
push
dec
std
lret
add
inc
cs
xchg
mov
cs
sbb
xchg
xchg
jp,pn
sbb
insl
rolb
pop
add
mov
repz
pop
cld
cmpsb
out
cmp
mov
andl
pop
inc
ror
shlb
fnstenv
jo
rorl
push
or
shl
loope
insl
add
out
test
jo
fbstp
push
jnp
pop
mov
notl
std
movsl
ret
arpl
push
clc
xor
stos
push
mov
mov
sub
dec
mov
mov
fmull
pop
dec
jl
pop
std
sub
jne
js
aam
push
out
dec
popf
xor
xchg
out
mov
or
add
sbb
xchg
mov
test
dec
push
jo
push
js
arpl
and
pop
fistpl
mov
gs
adc
cmpsl
test
scas
add
sub
ret
add
sbb
cs
and
out
ud1
sub
xchg
sbb
mov
aam
cmp
pop
into
gs
pop
sub
push
jle
and
repnz
lea
notl
jnp
gs
lret
roll
adc
jmp
pop
into
mov
cmpsb
mov
adc
cmc
mov
xchg
adc
movsb
movsl
pop
out
ret
das
les
mov
sub
inc
daa
xor
xor
pushf
pop
f2xm1
adc
aam
mov
nop
lahf
test
mov
jp
andb
std
xor
sub
sub
and
loop
fcmovnu
hlt
cmp
adc
bound
pop
sub
mov
repz
xor
pushf
adc
adc
mov
pop
sbb
mov
in
rorl
test
mov
push
rcrb
mov
stos
clc
jg
enter
test
fisubrl
xchg
inc
lret
sbb
push
das
adc
push
cli
sub
xor
arpl
pop
push
jae
outsl
sub
xor
mov
xchg
addb
pop
cwtl
lods
shl
negb
xlat
aaa
mov
push
movl
pop
sti
stc
lea
movsb
adc
sti
sbb
popa
repnz
data16
dec
cmc
pop
pushf
scas
push
xlat
call
stos
xchg
ljmp
xchg
or
repz
icebp
repz
cmp
adc
add
mov
inc
xchg
in
add
movsl
add
into
es
mov
nop
inc
test
and
rcll
enter
mov
repz
bound
lods
adc
lea
xchg
sub
fiadds
fdivrs
lcall
mov
out
dec
and
sbb
shl
mov
add
add
js
addr16
and
cltd
and
and
lock
fiaddl
adc
into
or
mov
mov
lret
lods
popf
jge
cvtps2pi
movsl
sahf
adc
push
fcoml
xor
imul
mov
mov
xchg
mov
mov
inc
loop
push
js
pop
nop
and
push
or
adc
fiaddl
push
mov
mov
jnp
add
arpl
int3
repnz
xchg
icebp
mov
lods
jbe
aad
insb
in
cmp
shll
fistps
mov
sbb
scas
push
jmp
lcall
out
jb
out
adc
cmp
add
pop
ds
xchg
loopne
jecxz
insb
pop
mov
scas
das
or
pop
adc
jp
popf
adc
mov
jg
sub
scas
in
jns
lods
addr16
add
adc
adc
sbb
je
dec
int
dec
pop
or
popl
imul
gs
js
je
sub
adcl
jbe
out
cmp
pop
call
mov
iret
inc
lock
ja
and
stos
ret
imul
popa
out
add
nop
push
push
pop
jne
xchg
mov
das
out
mov
pop
mov
loope
inc
test
ret
repz
push
out
and
ljmp
add
push
mov
int3
shr
adc
dec
xor
push
or
xor
adc
xor
xchg
pop
mov
mov
stos
lret
xor
ds
repnz
flds
xchg
testb
pusha
xor
pop
xchg
icebp
inc
mov
scas
add
insb
push
jecxz
scas
pop
enter
inc
bound
pusha
cmp
adc
push
ret
in
pop
pop
sub
jp
mov
mov
cmp
cmpsb
in
lret
imul
push
subb
cwtl
mov
jmp
movsl
fwait
inc
jp
push
dec
pusha
xchg
loop
mov
pop
xchg
ja
std
cmp
push
test
das
inc
mov
data16
cs
loope
cmp
adc
je
jne
lea
sbb
test
cld
inc
push
pop
enter
pop
mov
test
out
pusha
cld
add
push
jmp
add
gs
xor
sbb
ret
stos
mov
xor
lods
cwtl
dec
pushf
jne
hlt
or
mov
cs
movsl
stos
and
mov
out
aaa
rcl
mov
xchg
push
push
adc
adc
or
mov
inc
xchg
and
arpl
out
jo
in
sarl
rol
scas
xchg
fadd
sub
mov
xor
lahf
sub
push
jbe
jo
rorl
outsb
mov
js
push
scas
je
scas
cmp
sbb
jge
je
mov
cmpsl
addb
jmp
add
rcll
pop
sub
xchg
pop
mov
jle
movsl
lock
stos
gs
xchg
pop
xor
push
addb
jl
xor
sahf
fdivrl
lret
mov
dec
and
jno
mov
enter
push
sub
add
in
rorl
xor
mov
rcll
movsl
in
jbe
bnd
cld
mov
inc
xchg
jns
xchg
int
xor
pop
jno
push
imul
dec
push
mov
cld
sbb
inc
pop
xchg
cmc
adc
xor
sbb
jge
xchg
rclb
xchg
cmp
rcr
adcb
dec
shr
push
rcrl
inc
in
mov
xlat
sbb
orb
loope
xor
jmp
or
push
xchg
out
dec
adc
sub
sbb
sub
rcll
adc
aaa
push
repz
sub
mov
cltd
push
ret
mov
inc
adc
add
dec
call
orb
cmpsb
cmp
out
pop
xchg
cld
subb
pop
and
and
ja
xchg
mov
testb
dec
xchg
aam
addl
imul
js,pt
xlat
push
stos
add
pop
pop
xlat
and
jb
das
nop
loope
and
mov
mov
xchg
aas
cmp
mov
shlb
bound
imul
or
mulb
xor
lcall
adc
adc
shl
mov
outsb
adc
cmp
sub
sub
xor
and
inc
int
xchg
mov
popa
stos
push
rorb
mov
ss
mov
es
jb
mov
scas
lret
sub
aam
roll
inc
hlt
jns
inc
dec
xlat
lds
jle
out
sbb
push
and
adc
xor
nop
cmpsl
mov
xor
and
jp
inc
sahf
nop
cwtl
jge
sub
sbb
cmpsb
jge
xchg
dec
sbb
insb
or
loope
and
adc
les
xor
enter
push
hlt
mov
mov
sarb
and
xchg
xlat
pop
adc
mov
pusha
mov
inc
xchg
cmpsb
or
xorb
inc
cmpl
test
das
or
pop
lods
adc
lods
xor
xchg
push
pop
adc
stc
xor
orb
mov
pop
aam
clc
adc
fsubs
push
clc
push
aam
roll
pushf
cmp
sub
pop
popa
or
inc
pushf
js
add
mov
jle
xor
dec
loope
xor
mov
lea
add
movsb
mov
sbb
and
popf
cmp
sbb
xchg
sub
loope
jp
in
test
arpl
fmul
mov
daa
stos
addr16
pushf
enter
and
and
mov
popf
out
mov
rorl
mov
insl
inc
shll
mov
xor
push
addr16
test
dec
push
xchg
xchg
mov
sbb
test
incb
sar
mov
sbb
dec
cs
push
xchg
or
mov
cmp
xchg
mov
out
inc
add
sub
sbb
lods
out
lods
sub
add
out
test
fmul
scas
fildll
incw
jne
lods
mov
in
pop
roll
push
dec
js
int
cmp
dec
scas
mov
int
dec
shlb
mov
mov
call
in
cmp
and
push
cld
pop
jb
xor
xor
das
lcall
mov
inc
sbb
dec
and
dec
lea
outsl
movsb
jae
lahf
xchg
hlt
stos
and
mov
ret
sarb
lock
pop
jge
lea
popf
push
cld
xchg
rclb
iret
aad
stos
adc
push
or
sub
enter
xor
movswl
fistpl
nop
adc
movb
push
dec
jae
jnp
cmc
es
nop
push
mov
mov
mov
pop
cmp
xchg
xor
lea
cmpl
inc
ret
xor
fisubs
adc
imul
js
sahf
pop
xor
sub
add
call
hlt
mov
mov
pop
inc
stc
test
out
jb
sub
ret
nop
cmp
adc
aaa
lods
push
and
cmc
cwtl
pop
push
test
mov
in
sti
cmp
pop
das
movsl
mov
outsl
sub
mov
mov
gs
sti
lret
jo
mov
jbe
or
stos
dec
adc
or
jecxz
lock
aaa
add
cli
xchg
sti
or
lock
test
and
cmc
cmp
fdiv
sub
loope
xor
adc
mov
xchg
lcall
pop
cmpsl
das
lds
hlt
es
fwait
and
sbb
inc
pop
jmp
ret
jns
mov
rcrl
mov
cmp
sbb
add
xor
push
jno
jge
mov
cli
jg
in
push
fdivr
imul
mov
push
push
jge
sub
sub
loope
fs
ljmp
vmwrite
leave
adc
cmp
movsl
xchg
adc
or
adc
push
std
mov
ja
loop
gs
or
or
mov
ret
lods
lods
sub
inc
scas
cwtl
sub
sub
pop
repnz
jl
pop
stos
xchg
mov
push
in
xchg
lret
shrl
pop
fidivl
cmp
add
mov
fsubrp
push
mov
jo
cmp
arpl
fcoml
and
xor
xor
push
mov
ljmp
mov
lahf
xchg
mov
jno
xor
test
mulb
adc
mov
int3
jbe
test
or
test
pushf
and
jmp
xor
cltd
imul
cli
mov
cs
clc
jnp
test
fmul
pop
sub
out
mov
mov
subb
push
xor
out
cltd
into
iret
loope
push
cmp
clc
rcl
mov
sti
loope
testl
sbbl
xchg
ficomps
push
in
dec
cmp
outsb
jg
lods
je
sbbl
dec
sub
mov
sub
call
xor
xrelease
pop
xor
add
into
sbb
leave
incl
mov
inc
mov
fs
shrl
das
insl
inc
rolb
je
outsb
sbb
xchg
jb
fadds
pop
cmpsl
jne
and
jge
idivl
push
and
fiadds
xor
jp
cmp
xchg
or
sub
pop
loopne
jmp
jmp
cmp
movsb
repz
stc
out
imul
testb
fsubrs
add
or
pushf
jne
fcoms
mov
stos
inc
das
push
test
mov
jbe
arpl
dec
mov
ret
pop
mov
pop
js
fdivl
xchg
data16
dec
and
xor
cwtl
xorl
imul
xor
cltd
or
cmp
shrl
sub
repz
push
sbb
and
in
stc
cmpsl
das
adc
sbb
pop
cmpsl
add
adcl
js
lret
fucomip
push
pop
jmp
ja
clc
outsl
rol
pop
sub
push
mov
xchg
fiaddl
loope
and
stos
imul
jmp
aam
mov
loope,pn
notl
and
das
std
repnz
btr
mov
inc
mov
dec
js
jb
jnp
shlb
dec
rcrb
cmpsb
cli
fmull
push
fistl
in
lahf
ret
mov
mov
sub
dec
fwait
stc
clc
mov
outsl
test
pusha
pop
mov
jb
shlb
mov
dec
enter
adc
and
fistl
push
fistpl
or
into
lret
arpl
mov
jl
cmpsb
scas
repnz
nop
cmp
adc
sbb
dec
mov
shrb
mov
xor
aaa
and
add
subl
shlb
inc
pop
ljmp
pop
cmp
sub
adc
push
jns
pop
ret
data16
dec
aad
or
mov
mov
sbb
and
adc
sbb
mov
lods
jae
add
or
cli
mov
sti
xor
cld
or
jae
pmaxsw
insb
inc
or
mov
dec
imul
dec
aam
mov
hlt
and
pop
or
cmc
or
aam
push
push
inc
faddl
xchg
pop
test
lahf
ret
jl
cltd
sahf
aaa
sub
stos
iret
mov
jecxz
mov
icebp
mov
sbb
clc
dec
pop
test
add
les
push
dec
std
test
cli
mov
add
xchg
mov
in
mov
push
pop
arpl
aaa
mov
aad
dec
popa
adc
push
or
sub
inc
lea
outsb
mov
jmp
imul
mov
mov
lahf
sub
mov
sbb
xorb
dec
arpl
jmp
aam
pop
shrb
cmpsl
mov
mov
xlat
sbb
add
sub
xchg
negb
ds
pop
cmp
scas
insl
pop
and
cmp
scas
and
jno
loopne
and
xchg
bound
gs
jg
cmc
in
aam
fistpll
sbb
jns
addb
test
dec
mov
sbb
xor
mov
or
jecxz
popa
mov
stc
movsl
add
inc
lahf
mov
lods
mov
in
fildll
loopne
or
mov
aad
mov
incb
movsb
push
cmp
mov
dec
int3
int
cltd
mov
xor
push
shl
mov
xchg
cmpb
movsl
cmpsl
fisttpl
adc
jo
mov
scas
ja
xchg
jg
int3
int
inc
popa
sbb
push
fwait
movsb
nopl
sbb
push
jbe
imul
xor
bnd
mov
and
push
pop
mov
into
test
push
xchg
jg
xchg
jae
out
ljmp
push
dec
sbb
pusha
adc
shlb
leave
aam
or
lret
pushf
js
or
mov
test
sahf
shll
cli
out
add
push
sbb
cmp
xchg
enter
mov
push
or
push
adc
nop
fwait
cs
adc
jb
sbb
pusha
jo
mov
xor
js
fs
icebp
lret
outsl
popf
mov
imul
mov
inc
push
pusha
enter
stc
push
fimull
dec
popf
push
xchg
push
push
int3
sub
gs
lods
sub
cmpsl
push
mov
hlt
sahf
xchg
jg
adc
jns
aam
mov
test
movsl
or
inc
fidivrs
push
push
xlat
mov
mov
mov
fldcw
mov
add
stos
and
movsb
fldt
icebp
and
das
lret
xor
inc
sub
rcrl
pushf
dec
lahf
push
mov
faddl
xchg
and
ds
and
xchg
xor
daa
sbb
call
out
xorl
pop
mov
sbb
and
fstp
pop
pusha
jno
sub
sahf
xlat
mov
xchg
and
adc
push
stos
cmpb
jnp
repz
pop
es
stos
ss
mov
sub
add
xor
scas
popf
adc
loopne
aad
scas
js
cmp
sub
repz
call
push
out
xor
shll
mov
mov
pop
out
push
bnd
xor
cs
lock
lret
pusha
cmpsl
or
and
mov
or
in
mov
nop
les
xchg
dec
mov
popa
xor
rcrb
pop
aas
and
adc
sarb
je
cmp
sub
push
and
jle
stos
push
or
clc
shl
jo
pop
hlt
xchg
fucom
lods
scas
in
pop
pop
cmp
negb
fnstcw
das
inc
cli
xor
and
cmc
pop
int3
loopne
loopne
xor
xor
arpl
mov
sub
dec
jae
lock
icebp
push
int3
dec
out
adc
out
bound
jg
xor
popa
pop
outsl
shll
xorb
in
jp
push
call
sbb
pop
ret
hlt
add
das
xlat
dec
std
add
adc
addr16
out
cwtl
insb
pop
jge
shrb
sub
mov
dec
dec
xchg
out
add
pop
sbbb
pushf
and
jg
sub
in
jae
lods
gs
cli
jae
repz
dec
dec
or
rolb
push
mov
imul
pop
mov
ja
call
cmp
in
shll
push
mov
cmp
in
jns
inc
push
gs
in
dec
and
scas
xlat
push
popa
jbe
fmul
inc
icebp
push
pop
sub
pop
out
cwtl
sub
popa
push
jns
jmp
int3
pop
movsb
push
out
and
dec
into
or
popa
xor
or
jno
jmp
jae
fisubs
sbb
loopne
testb
pop
fdivl
push
xchg
inc
mov
pushf
mov
or
sub
dec
or
mov
es
lods
pusha
mov
sub
jmp
inc
push
dec
jbe
jne
cmpsb
xor
xor
fdivr
cmp
or
jne
adc
hlt
loope
pop
std
xor
fistps
cltd
rolw
and
sub
les
repz
sub
icebp
inc
sub
pop
pop
out
xchg
cld
push
js
outsl
jo
andl
push
popf
dec
jg
xchg
jae
test
push
test
movsl
push
outsl
andl
jns
icebp
int3
pushf
xchg
ss
js
add
jbe
lcall
push
outsl
xchg
cmp
nop
inc
and
adc
popf
push
lods
xchg
jne
push
mov
loop
nop
dec
test
adc
ja
scas
pop
pop
flds
cmc
movsb
adc
dec
pop
data16
fiaddl
adc
inc
out
push
mov
push
test
outsb
loope
xchg
dec
arpl
inc
mov
das
pop
lahf
push
dec
cmp
imul
mov
pop
dec
adc
xor
mov
ficompl
in
imul
repnz
jge
aas
int3
cmp
sbb
ds
dec
sbb
sub
ds
popa
and
cwtl
inc
sbb
mov
adc
mov
in
adc
aad
xor
and
es
out
ljmp
cltd
xchg
iret
xchg
pushf
sbb
imul
sub
dec
or
mov
xor
cmp
mov
inc
xchg
test
mov
icebp
push
rclb
mov
icebp
mov
and
fidivrl
ret
imul
stos
dec
jae
lods
fists
cmpsb
cmp
stos
jg,pt
das
fs
dec
icebp
dec
das
or
add
sub
mov
out
sar
mov
sarl
sbb
lds
stc
jo
dec
add
stos
cli
bound
mov
cmpsl
sahf
mov
sbb
adcb
hlt
fcoms
or
cli
fwait
push
mov
jb
jmp
pop
push
outsb
jl
add
xor
stos
mov
stos
out
fstpt
sub
dec
movsb
std
es
jne
es
scas
push
ret
mov
imul
mov
xchg
pop
pop
lods
push
lahf
jbe
push
fs
leave
inc
les
jge
inc
sub
jmp
das
ficoms
jmp
imul
call
add
sub
dec
div
or
fidivl
sbb
test
mov
loop
test
repz
mov
mov
jae
stc
sbb
call
jno
bound
and
and
sbb
sub
js
mov
adc
cmp
add
lods
jb
jge
lahf
push
insl
insb
fnstsw
fstps
dec
int
push
push
fisubrl
test
add
pushf
hlt
test
orl
adc
nop
cmc
push
ret
lea
push
sbb
arpl
dec
sub
repnz
cmpsl
in
loopne,pt
sahf
mov
pop
fcompl
fnstsw
or
cwtl
fnstsw
out
data16
movsl
sub
sub
popa
lock
lret
pinsrw
mov
mov
pop
cwtl
cmc
lahf
scas
or
sti
ror
cmp
es
scas
ret
add
mov
lldt
sub
enter
loopne
jp
push
fnstenv
mov
cmp
pop
push
test
pop
sub
mov
das
std
loop
push
out
out
ds
addb
imul
cmp
or
xor
loopne
push
into
jbe
push
mov
pop
xchg
adc
loope
push
andb
inc
mov
loopne
hlt
jo
and
dec
fstl
push
adc
popf
or
repz
and
jnp
fstps
sub
cli
or
xor
cli
int
and
xchg
xor
add
jle
sub
and
add
inc
mov
mov
int3
mov
pop
add
sub
out
ja
test
addr16
ret
inc
jne
mov
mov
imul
cmp
sub
daa
jb
stc
or
inc
dec
ja
gs
rcll
cld
cmp
pop
adc
cld
sbb
sub
lds
sub
lods
sub
shll
cmpsl
les
ficoml
adc
js
ret
jae
aas
push
movsb
ffree
fdivl
xlat
fsubl
int
repz
xchg
xchg
shlb
popa
mov
repz
xchg
outsl
testb
jmp
push
cmpsl
or
push
movq
insl
test
stos
mov
inc
cwtl
push
mov
hlt
js
inc
lahf
fldln2
mov
stc
mov
mov
mov
dec
lcall
decb
scas
cpuid
popa
xlat
cmpsb
rol
in
jle
ds
icebp
int
dec
push
cmp
out
loopne
std
push
nop
inc
hlt
pop
or
and
roll
scas
push
inc
or
jbe
xchg
cmp
imul
mov
fidivrl
fdiv
add
dec
into
sub
shrl
inc
mull
or
jae
gs
cld
outsl
test
fidivl
stc
jo
mov
pop
test
pop
std
aam
popf
push
cs
loop
negl
out
cs
dec
sbbl
nop
mov
add
repz
scas
and
xchg
cmc
popl
ja
push
jmp
call
jno
in
cmp
les
cmp
out
xchg
inc
inc
dec
les
popa
cmp
cli
push
xor
inc
mov
xlat
xor
jb
inc
out
mov
push
mov
hlt
jo
jno
and
or
push
pusha
lcall
or
sbb
jmp
mov
xor
xor
hlt
mov
lcall
js
es
mov
or
adc
sub
fidivl
andb
sti
fs
xchg
enter
or
pop
adc
daa
pop
cmp
sub
add
jl
cmp
icebp
adc
ljmp
sbb
mov
test
jo
pop
clc
pop
pop
stc
ret
ja
shr
mov
stos
xor
scas
out
sbb
cmpb
stos
mov
xlat
aam
push
scas
insl
insb
pop
inc
frstor
mov
cld
fwait
je
mov
aas
lret
lahf
mov
cld
movsl
jno
gs
jbe
sub
add
cmc
pusha
in
ret
push
loopne
mov
popa
and
jnp
pushf
inc
fbstp
iret
cmp
xchg
xor
pop
mov
pop
pop
pop
xor
inc
or
lret
cmpsb
sub
mov
je
lea
hlt
stos
out
push
mov
test
mov
dec
and
or
inc
mov
fcoms
movsb
das
add
pushf
mov
pop
das
cli
jmp
jns
sub
cmpsl
popf
xor
jae
rorl
push
pop
add
aad
xor
xor
in
pop
les
test
mov
in
adc
jnp
xchg
sbb
aam
or
dec
mov
int
mov
xchg
pop
addr16
out
add
mov
shlb
push
dec
mov
xchg
pusha
insb
test
cli
sti
push
cwtl
bound
xor
jecxz
scas
hlt
js
repz
loopne
sub
pop
fwait
xor
enter
jno
jo
outsl
sbb
pusha
cmc
mov
bound
xor
pushf
mov
and
adc
into
cmpsb
cltd
xchg
pop
sarl
insl
dec
and
jmp
sti
xchg
jbe
ret
das
pushf
fbld
das
or
sub
or
adc
or
cs
bound
sti
ret
sub
dec
push
dec
sub
add
mov
pop
scas
insb
movsl
sub
inc
lcall
cld
fsubs
pop
mov
cmp
xor
push
hlt
lcall
enter
and
pop
adc
inc
lret
dec
out
pop
sub
sub
xchg
lret
mov
rcrb
fstp
test
test
cwtl
xchg
jo
sti
stos
divl
sbb
jge
cmp
push
fmulp
aas
stc
push
outsb
popl
jae
loop
cwtl
nop
or
nop
adc
or
mov
add
scas
and
jae
add
sbb
fnstsw
frstor
popa
mov
in
cld
int
leave
les
sbb
das
ret
adc
xchg
adc
int
lods
mov
cmpsb
insl
mov
mov
fs
sub
jp
bound
jp
jns
jns
pop
js
jmp
cmp
les
and
xchg
test
std
mov
push
lret
stos
inc
xchg
push
rclb
sub
icebp
loop
push
mov
dec
mov
cmp
lea
mov
fldcw
repz
jo
ja
jo
popf
movsb
xor
out
loopne
mov
sub
sbb
cwtl
pop
stos
std
dec
repnz
sub
add
push
cmpsl
les
inc
outsl
inc
xchg
adc
cmp
cli
and
sub
aaa
dec
int3
sub
mov
fwait
mov
mov
lret
or
xchg
lahf
call
sahf
into
in
sub
lcall
lahf
inc
xor
pop
mov
dec
dec
add
icebp
sbb
or
int3
mov
mov
psrlq
mov
in
jecxz
mov
scas
repnz
int
push
mov
xchg
sti
xchg
dec
mov
pop
in
cmp
cmp
cmc
sbb
insl
pop
cmc
cltd
add
add
int
pop
xorl
sbb
and
bound
mov
sbb
jge
adc
or
ds
mov
repnz
push
insl
push
sbb
push
in
idivb
jmp
lret
mov
testb
mov
aaa
push
stos
push
sub
movsl
out
js
mov
sbb
stos
xchg
mov
add
aaa
inc
in
mov
and
pop
outsb
repnz
dec
enter
xchg
jle
pop
add
nop
leave
push
les
scas
pop
mov
clc
clc
add
jnp
cmpsl
decl
out
js
fsts
or
mov
fisttpl
jo
mov
outsl
xlat
loopne
xor
es
pop
mov
lcall
jne
mov
xchg
pop
xchg
inc
pushf
int
stos
rorl
or
or
push
pop
fdivr
cmc
jecxz
xor
or
inc
call
mov
jnp
sahf
jp
pushf
push
dec
rcrl
and
mov
xchg
inc
pop
jne
and
push
clc
cwtl
mov
xchg
xchg
sbb
pop
mov
in
inc
imul
stos
loopne
xlat
mov
xchg
andb
mov
xchg
shll
out
fcoms
cs
xor
sbb
lcall
and
fisubs
or
mov
push
sub
sub
dec
or
cmp
add
mov
lret
add
add
push
sbb
pop
sub
notb
loopne
mov
pop
and
jge
or
jae
cvttps2pi
movsb
lock
xlat
fdivrl
lods
mov
and
inc
inc
xchg
xchg
inc
notb
mov
pushf
pop
int
jns
bound
andl
xchg
sahf
jge
adc
cltd
aas
jnp
scas
lock
insl
pop
dec
jmp
add
push
adc
inc
ds
loop
or
addr16
jle
test
in
flds
sbb
add
xchg
push
je
addb
jne
leave
bound
mov
and
inc
ret
test
push
inc
div
les
mov
addr16
or
inc
or
or
pop
mov
or
jge
leave
lock
out
add
insl
fmul
push
repnz
in
fisttps
sbb
mov
clc
mov
or
mov
push
clc
sbb
fwait
jmp
sarb
lcall
pop
mov
test
xchg
mov
fiadds
push
lea
test
add
xorl
dec
add
and
rol
sub
ret
push
stos
add
add
into
pusha
push
lds
push
lahf
in
dec
insb
cmpsl
sahf
and
jge
ficomps
mov
lcall
add
sub
lock
adc
or
xor
inc
and
test
jb
xor
push
fimull
mov
ss
pop
xor
shrb
in
addr16
arpl
data16
push
aad
daa
mov
out
push
jg
sub
pop
fdivrl
fchs
movsb
scas
dec
add
ds
lret
mov
and
lret
sbb
pop
cs
subb
dec
mov
inc
sub
sub
sbb
mov
sarb
push
xchg
xchg
popf
das
stc
or
sbb
mov
or
scas
fwait
mov
dec
pop
fs
mov
out
mov
outsl
mov
sbb
cli
in
in
cwtl
shrb
fwait
pop
mov
adc
call
in
sarl
sub
aad
pop
int3
pusha
cmpsl
add
fstpt
xchg
mov
jae
push
and
sub
push
inc
mov
loop
xor
negb
movsb
pop
fdivr
dec
idiv
call
data16
xor
pop
mov
notb
mov
sbb
pop
pop
dec
mulb
push
imul
pop
nop
cmp
xchg
mov
in
sub
arpl
pop
fsub
bound
xchg
xor
mov
and
test
ret
ror
sub
xchg
ds
jecxz
or
out
pushf
daa
mov
sub
add
push
sbb
fstpt
adc
jmp
mov
imul
sbb
fs
jecxz
ja
mov
jns
or
xchg
xor
mov
adc
mov
pop
int
popf
adc
outsl
jle
mov
add
shll
and
repnz
inc
aam
aad
pop
mov
jp
xchg
les
dec
or
les
minps
stc
jecxz
push
outsl
jbe
in
jmp
cmp
fsubrs
mov
mov
rorl
jno
cli
push
aad
mov
js
jae
lock
jge
inc
loope
jge
hlt
aad
jae
xor
movsl
paddb
dec
rcr
xor
dec
ja
faddl
mov
addr16
ret
mov
popa
and
arpl
jnp
mov
out
lcall
and
ret
stos
jmp
fldt
jg
std
or
push
sbb
sbb
pop
lret
mov
fistps
dec
adc
dec
pop
mov
cmp
jns
cmp
mov
mov
sarl
inc
test
sbbl
mov
aad
leave
jl
out
test
mov
mov
push
push
stc
imul
add
in
loop
jo
cs
cmp
stc
jmp
mull
mov
enter
xchg
mov
test
sub
ficoml
test
dec
data16
popa
cmc
adcb
fld
xor
fadd
pop
inc
outsl
push
add
push
add
js
stos
pop
cltd
in
fnstsw
movsb
pop
daa
jb
and
jecxz
cli
lea
in
mov
cltd
or
int
fcomps
loop
daa
test
shlb
add
sub
ficompl
xlat
mov
cmp
dec
push
lcall
movsb
and
dec
add
cmp
sbb
sbb
cmp
add
test
je
pop
mov
call
notl
bound
fldcw
jns
xchg
pusha
and
and
sbb
xor
cs
imul
dec
iret
fwait
and
fsubrs
fsubp
or
cmp
daa
dec
mov
jmp
ss
mov
scas
jo
pop
rep
xchg
sbb
repnz
testl
lret
mov
cld
adc
mov
pop
inc
dec
push
jo
or
cmc
add
and
in
lret
int
aad
addl
loopne
cmp
push
js
adc
shl
pop
shlb
pop
sbb
cmc
xchg
mov
cmpsb
adc
mov
pusha
jle
inc
gs
and
mov
xlat
jle
push
cs
inc
aas
pop
jne
rorb
sbb
push
in
xor
movsl
mov
int3
or
dec
pcmpeqw
je
dec
andl
cltd
notb
push
imul
sbb
mull
mov
xor
add
outsl
mov
sub
lret
or
add
and
mov
jmp
pop
push
out
mov
std
cmpb
inc
fs
sub
xchg
inc
jp
pop
sbb
in
lret
js
jp
fdivrp
scas
jbe
mov
cmp
dec
and
xlat
pop
lods
mov
ret
imul
add
xor
dec
mov
mov
in
sbb
sub
adc
add
rcrb
pop
call
xchg
insb
jnp
dec
scas
adc
or
stc
ljmp
stos
dec
push
testb
fisttps
mov
mov
ds
cmp
mov
shl
xchg
insl
out
call
out
jbe
inc
jp
into
sub
adc
pop
mov
stos
or
pop
rclb
enter
out
mov
mov
mov
lods
loope
add
mov
pop
adc
test
ss
data16
pop
push
popf
das
inc
cld
out
mov
sub
push
jge
bswap
fidivs
divl
fsubl
push
iret
inc
dec
xchg
xchg
roll
shll
loop
add
add
dec
add
imul
cwtl
push
dec
xor
in
dec
mov
xchg
cltd
stos
in
cli
jle
aas
jmp
mov
incb
mov
fcmove
fsubrl
xchg
cmc
cwtl
fistps
and
add
xor
in
test
mov
cmc
dec
psubsb
add
ret
or
push
adc
mov
push
stos
xchg
pop
mov
inc
aad
dec
in
rorb
and
or
hlt
and
dec
xor
push
sbb
or
int
adc
push
fcmovnb
and
aaa
in
aad
push
or
std
and
aam
and
push
or
ljmp
test
push
adc
adc
cmpsb
repnz
sbb
scas
lahf
adc
jbe
jae
sbb
repnz
jns
adc
test
and
in
cmpsb
fsubrs
xchg
nop
repnz
cmc
push
repz
mov
push
or
std
outsl
enter
mov
dec
dec
sbb
mov
dec
mov
popf
mov
mov
test
pop
or
sbb
jg
mov
xchg
push
imul
imul
lret
or
cmp
mov
sbb
jb
sbb
out
xor
arpl
outsb
pop
mov
pop
out
add
dec
dec
pusha
pop
movsb
jo
xchg
lods
outsl
sbb
add
mov
clc
aas
push
cltd
dec
jbe
adc
leave
inc
xchg
add
out
not
adc
movl
jnp
xchg
jnp
mov
ret
mov
and
scas
inc
mov
mov
pushf
insl
lods
aad
into
rorl
pop
in
dec
iret
repz
aam
push
adcl
daa
jp
xchg
xor
push
push
xor
movsb
faddp
shll
xchg
add
out
cmpsl
popa
jl
in
push
and
sub
clc
mov
fisubs
mov
mov
inc
lret
dec
scas
mov
divb
xlat
pop
jbe
sbb
fimull
sbb
mov
test
xchg
adc
ret
ret
cmp
sbb
data16
clc
cmp
lds
mov
add
pop
in
cmp
adc
inc
ds
gs
cmpsb
push
jnp
mov
das
adc
cld
xchg
sub
ret
adc
add
ljmp
and
push
or
push
push
xchg
mov
movsl
pop
pop
jns
test
cmp
and
dec
pop
fstpt
mov
flds
adcb
paddsb
fmull
xor
daa
scas
aad
enter
stos
fisttpl
sub
arpl
ljmp
movsb
lcall
jmp
jl
xlat
das
das
arpl
int3
fsts
pop
aaa
add
out
inc
adc
xchg
pop
dec
insl
shlb
or
mov
xorl
scas
call
enter
dec
dec
vcvtpd2dqy
sbb
dec
iret
inc
imul
xchg
xor
and
mov
push
sbb
sbb
aad
and
adc
mov
jle
inc
pusha
das
cmpl
and
movsb
xchg
mov
mov
in
adc
inc
cmpsb
shrb
fs
inc
lcall
mov
pop
ficoml
mov
hlt
andl
xlat
aam
pop
in
inc
cmp
mov
roll
add
aam
bound
jl
adc
sub
and
lahf
cs
les
jae
sbb
aam
movsl
jne
repnz
cmpsl
mov
bound
jo
shlb
push
std
int
and
pop
sbb
dec
xchg
push
push
call
mov
pop
mov
mov
cmp
xlat
clc
xchg
test
dec
shlb
mov
cmc
mov
xchg
xor
insb
xchg
out
jl
xchg
out
repnz
or
cmp
stos
lds
or
sti
lahf
dec
ficoms
inc
mov
sub
push
cmp
negl
adc
outsb
adcl
push
lret
cs
jno
mov
ss
cmpb
lret
or
push
inc
loop
or
cs
mov
cs
movsb
rcrb
xchg
outsl
in
dec
or
cmp
push
lods
test
fildl
negb
mov
push
outsb
xchg
int
jg
sar
cmp
sti
insb
subb
insb
mov
push
inc
dec
dec
mov
mov
mov
lods
shll
repz
shrl
ds
dec
and
fisubrs
dec
mov
in
aam
cmp
xchg
pop
push
pop
jae
mov
and
xchg
push
in
icebp
dec
xorb
push
mov
and
jno
stos
push
fisubrs
std
xorl
inc
in
mov
cmp
jle
xor
mov
pop
mov
xor
push
mov
pop
out
xchg
sub
notl
jo
mov
addr16
out
dec
subb
cmp
sub
test
pop
inc
lret
mov
sahf
int
pop
mull
and
lods
jne
cli
imul
imul
push
mov
test
mov
sbb
aam
push
cmpsb
inc
fistl
or
sub
xchg
mov
adc
mov
bswap
cmp
xor
xchg
out
dec
or
jp
push
or
sbb
pop
xor
test
sahf
lock
push
cmp
pop
movsl
out
sub
imul
xchg
xchg
push
out
lods
and
inc
movsb
add
xchg
mov
ret
ja
call
insb
jae
repz
fiadds
push
and
into
push
int
loopne
jno
testb
push
inc
xor
pop
pop
pop
div
xlat
or
fs
sbb
ret
or
jns
xchg
inc
mov
pop
lea
xchg
xchg
sti
aad
rclb
xchg
outsl
iret
call
jns
xlat
rcrb
pop
ljmp
push
xchg
insb
dec
lahf
lds
mov
cmp
and
leave
push
icebp
jns
stos
scas
repnz
xchg
lahf
xchg
out
push
adc
pop
stc
stc
out
rolb
adcb
add
xchg
sti
mov
jnp
and
inc
in
xor
ret
xchg
mov
add
dec
push
cmp
cltd
and
into
lds
add
inc
test
hlt
call
push
dec
out
out
popa
sbb
popf
pop
addl
and
into
jecxz
iret
dec
pop
aam
arpl
xlat
outsb
xchg
push
loope
inc
mov
fstpl
push
lret
and
sub
mov
shll
inc
cmpsb
sbb
scas
and
push
lods
push
fistpll
pop
aam
cmpsl
orb
mov
les
jno
inc
out
and
sub
aaa
sahf
sub
push
pop
fimuls
inc
xchg
nop
inc
pushf
fstpl
xor
inc
dec
pop
xor
inc
imul
movb
daa
pusha
sbb
push
dec
jbe
int
daa
mov
inc
das
lret
cmp
xor
shll
pusha
jl
movsb
add
push
pop
lock
jmp
cltd
xchg
push
jno
cmpsb
jmp
loop
push
xorb
loop
push
xchg
cmp
fimull
mov
inc
test
cmp
jo
pushf
daa
in
cmp
mov
in
xchg
push
ficoms
or
lods
xor
mov
mov
and
mov
add
or
out
cli
push
pop
lret
add
stos
push
jmp
jge
jb
dec
or
inc
in
into
sbbb
sarl
xor
rorl
pop
jle
adc
push
and
pop
aaa
inc
or
cs
and
and
push
adc
sbb
xchg
sub
subb
addps
and
aas
dec
sub
jb
cmpsl
inc
test
fstp
stc
iret
inc
ror
add
jle
pop
out
xchg
or
insl
mov
sti
lahf
cs
add
repz
jo
inc
adc
scas
jle
sbb
scas
mov
mov
add
test
sub
repnz
pop
out
mov
lret
icebp
xor
filds
fsin
ret
push
out
in
lret
fistps
cld
xchg
jecxz
dec
pop
add
cmp
fabs
adc
inc
int3
xchg
stc
rcll
xchg
stos
dec
pushf
dec
loope
jecxz
add
mov
cld
mov
inc
mov
test
or
mov
push
sub
mov
ss
insb
add
inc
inc
jnp
cmp
fst
lahf
push
sbb
out
stos
sti
insb
ror
mov
and
icebp
jns
xor
pop
stos
loop
cmc
stc
xchg
rcrl
mov
jg
notb
mov
leave
cmc
mov
out
cmpsl
fsubrl
mov
mov
inc
roll
adc
jle
ja
out
imul
je
lea
cmpsb
ret
push
adc
mov
sarb
push
pop
outsb
sti
not
pop
mov
fcoml
or
sub
mov
dec
icebp
jb
and
sub
sub
je
sub
mov
fsubrs
cltd
sub
dec
das
mov
add
dec
nop
sti
dec
mov
mov
in
gs
sbb
jae
popa
pusha
hlt
jo
lods
xchg
fwait
ror
add
sbb
fs
insb
int
and
scas
mov
mov
inc
push
pop
gs
lods
inc
ja
push
and
mov
xor
inc
mov
ljmp
add
push
push
xchg
mov
pop
sbb
mov
mov
inc
ss
add
mov
add
xchg
ret
stos
xchg
iret
inc
jo
push
loop
js
adc
jnp
push
adc
xchg
mov
mov
out
cmp
fmuls
mov
pusha
gs
dec
addb
vpminub
mov
sub
mov
out
mov
das
xchg
in
adc
mov
sub
pusha
xlat
and
push
stos
mov
movsb
shl
mov
sbbb
call
rolb
cmp
adc
and
rorl
jns
jmp
das
mov
daa
lcall
pop
push
mul
data16
mov
xchg
stos
mov
je
leave
fisttps
into
cmp
push
add
or
and
xor
movsl
in
not
and
fwait
ret
and
xlat
sbbb
test
fs
mov
arpl
pop
cmpsb
out
inc
std
mov
dec
ds
inc
xchg
into
xchg
dec
dec
das
lahf
ds
xchg
hlt
jae
mov
aam
pop
scas
sub
adcb
push
sbb
loop
jg
rep
cmc
or
int3
sbb
fists
jecxz
inc
es
js
arpl
sbb
cmp
sbb
pop
jecxz
or
fists
adc
inc
fidivs
lret
jbe
fwait
mov
popa
stos
dec
gs
je
push
int3
jmp
push
or
or
add
ret
mov
mov
mov
fwait
lods
ds
push
fisubrs
mov
push
mov
mov
jo
je
cmpsl
pop
dec
stos
xchg
mov
xor
jge
mov
mov
rdtsc
lret
or
or
and
add
jne
inc
cmpsb
jmp
das
clc
jp
add
shrl
leave
fimuls
adc
lea
pushf
sti
aad
or
jns
push
xor
aad
mov
add
push
rcrl
ror
imul
push
das
pop
test
cmp
mov
les
rorl
jae
mov
or
punpcklwd
sbb
mov
lcall
mov
mov
rcl
inc
mov
and
enter
push
xchg
mov
loope
aam
sub
mov
cltd
inc
test
mov
orl
dec
push
popa
pop
je
outsb
add
scas
out
cmp
in
fsubs
mov
inc
adc
jae
jbe
mov
pop
add
dec
aam
inc
insl
inc
out
or
lahf
rol
jb
dec
jb
les
push
pusha
daa
mov
push
push
shll
iret
mov
mov
insb
std
insb
lea
dec
add
sbb
push
imul
adc
fistpll
sub
test
ret
std
xorb
popf
mov
fisubl
dec
out
jg
pop
lds
faddl
inc
jno
repz
pop
sbb
hlt
ret
and
cmp
lret
and
xor
and
inc
lret
mov
dec
sbb
push
dec
xor
out
stos
jno
cmp
jmp
pop
aad
cmp
stc
jl
push
add
jp
inc
cs
cmp
ret
cltd
cmp
scas
xchg
push
push
int3
insl
inc
dec
fimuls
mov
mov
pop
and
dec
mov
mov
outsb
adc
clc
inc
inc
add
jecxz
jl
and
ret
mov
jecxz
mov
stos
jb
sub
adc
imul
pop
jno
jecxz
lret
and
sbb
aam
adc
mov
mov
fcmovnu
outsb
das
lds
jnp
push
jb
mov
jo
pop
sub
push
pop
dec
adc
cmp
push
adc
scas
cmp
loop
mov
mov
test
jle
addl
push
xlat
movsl
mov
push
call
sbb
ficoml
ljmp
sub
out
out
sub
xchg
imul
mov
cmp
mov
mov
cwtl
mov
add
add
pop
jecxz
jns
inc
and
cwtl
xor
lcall
add
sarl
stc
jbe
icebp
ljmp
pop
cmp
imull
shll
lret
cmp
mov
es
hlt
lods
dec
pop
daa
mov
shll
loop
sub
lret
sub
adc
test
and
sbb
filds
sar
aas
jge
mov
ret
incb
mov
fsubl
fwait
out
sub
push
jl
xchg
xchg
mov
mov
outsl
jbe
jp
out
cmp
cmpsb
ss
jno
negb
mov
xchg
ljmp
sub
lret
cmc
pusha
mov
xor
add
mov
xchg
movsb
sbb
add
add
xchg
in
movsl
mov
lods
xchg
xor
jnp
test
inc
jl
adc
popf
or
mov
jb
shrl
test
push
fistpl
das
lods
xchg
scas
lret
jne
ljmp
mov
fwait
int3
push
cld
das
mov
imul
addr16
and
enter
out
inc
sahf
repz
inc
shll
les
outsb
fdivr
inc
insl
pop
fcmove
pop
jl
lret
mov
in
lock
fistpll
jg
push
loopne
jno
shll
pop
sub
ficompl
fldenv
mov
outsb
mov
cld
into
push
das
and
insb
insb
stos
fwait
xchg
inc
les
sbb
sbb
pop
push
mov
mov
movsl
xor
fsts
jmp
add
pop
cmp
add
xchg
loopne
stc
ret
inc
bound
mov
pusha
in
sahf
roll
popf
pushf
dec
add
in
xchg
sub
daa
ja
iret
push
push
shll
sub
lea
bound
pop
jmp
mov
nop
lods
into
or
mov
call
cmp
int
adc
jnp
xor
fldcw
adc
xchg
fbld
pop
cwtl
scas
sbb
in
mov
nop
lock
inc
mov
push
pusha
xor
sbb
push
jnp
pop
stos
int
inc
out
les
jbe
loope
rcrb
mov
inc
mov
lret
xor
faddl
and
stos
leave
mov
jle
sub
test
xor
or
andl
add
and
call
mov
outsb
inc
es
int
cmp
into
outsl
jnp
xchg
pop
outsl
xchg
pop
cmp
popf
dec
push
lret
sub
jns
int3
leave
jne
dec
add
rcl
sub
rol
outsl
loopne
adc
inc
popf
jp
ret
sub
xchg
mov
cli
das
inc
mov
orl
icebp
cmpsb
inc
mov
std
lret
add
inc
xchg
sbb
and
in
arpl
pop
inc
ficompl
pop
bound
sub
lcall
mov
cmc
clc
push
xchg
mov
lea
adc
daa
sub
mov
xchg
mov
cs
enter
sbb
mov
and
movsb
mov
xchg
movsb
add
repz
inc
and
push
mov
pop
adc
lods
cmc
mov
xlat
xchg
popf
jno
cwtl
in
inc
jl
fucomp
jle
mov
cmpsb
inc
ljmp
adc
xchg
test
and
mov
pop
outsl
leave
rcll
dec
ret
fdivrp
sbb
fldcw
sub
and
jge
jge
push
lret
jecxz
xor
adc
sbb
fists
mov
sbb
cmp
pop
jle
pop
rolb
cmp
inc
std
in
cli
jbe
imul
mov
mov
sub
lcall
sti
adc
lods
rcrl
jl
lods
fwait
or
fldt
mov
in
xor
jno
ja
pop
in
aaa
call
inc
xchg
repnz
clc
xchg
insb
inc
call
pop
xchg
jge
pop
adc
mov
ljmp
rol
orb
cmp
decb
jb
cmp
adc
cmp
jmp
mov
sub
adc
adc
and
das
sbb
sbb
movsb
imull
lock
mov
fs
fistpl
and
mov
movsb
jl
dec
mov
lahf
scas
fisubs
mov
mov
xorb
loope
jle
inc
or
int
orb
stos
sub
jg
loopne
sarb
mov
pusha
sub
addr16
add
rorb
out
mov
dec
mov
add
pop
push
sub
mov
cs
testl
mov
scas
cmp
push
inc
lock
imul
mov
stos
push
mov
fsts
cmpsb
push
cli
push
cmp
mov
mov
mov
jecxz
mov
icebp
dec
inc
push
cmpsb
mov
into
or
iretw
data16
lds
pop
movsb
xor
in
mov
into
xchg
mov
sbb
adc
das
rcll
add
mov
mov
bound
dec
xor
ss
dec
xchg
mov
xchg
repz
mov
sbb
cmp
or
loop
or
cwtl
subl
mov
jmp
test
or
out
cmp
test
or
flds
push
mov
inc
out
lods
movsl
cld
rorb
adc
jp
jl
mov
repz
aas
sbb
loope
adc
jns
jle
nopl
cmp
push
adc
lock
xchg
mov
mov
cmp
hlt
xor
popf
inc
pop
sti
xlat
mov
mov
add
neg
in
sti
jne
das
push
add
movl
lods
sbb
out
aaa
jne
push
jmp
iret
pushf
or
adc
in
loop
xchg
out
inc
je
add
cli
xchg
fwait
push
jmp
dec
pop
jg
add
rorl
divb
bound
inc
and
in
inc
subl
mov
xor
shr
aam
pop
adc
xor
xchg
repz
orl
jmp
shr
cli
pop
or
sbb
add
outsb
xlat
inc
xchg
pop
pushf
idiv
test
addr16
fwait
ljmp
cmp
lock
add
pop
pop
lahf
and
push
clc
xchg
cwtl
faddl
push
dec
insb
stc
rcrl
add
push
rorb
xchg
in
inc
mov
aaa
add
and
in
push
int3
or
mov
and
dec
cld
pop
cmp
lcall
jmp
icebp
int3
lcall
gs
into
iret
mov
scas
mov
repnz
mov
sbb
pop
mov
cltd
pop
aad
ss
std
xor
aaa
push
pop
cmpsl
jp
enter
xor
lods
nop
repnz
push
lret
pop
pop
push
clc
pop
or
or
ret
pop
sbb
daa
adc
xchg
push
stos
mov
mov
mov
lds
inc
xor
and
fsubs
scas
xchg
mov
std
cmc
fildl
in
pop
outsb
and
add
inc
or
push
push
mov
sub
sub
or
push
adc
data16
icebp
sub
mov
jle
test
fs
xor
and
outsb
stos
mov
mov
fisttpll
pop
aaa
sbb
mov
in
mov
movsb
cs
mov
jb
mov
jne
and
loopne
mov
cmp
shlb
loope
jne
imul
int3
jae
ret
pop
pop
insl
out
jno
cmp
cmovs
mov
xchg
pop
mov
or
xor
mov
aas
cli
loopne
ret
fstp
push
xor
xlat
adc
jl
xor
or
jns
jbe
cli
cmp
push
pop
scas
subl
notl
adc
push
iret
sbb
je
cmp
fiaddl
outsl
jmp
popa
push
push
into
cmpsl
xchg
sahf
shl
cmp
sub
ja
mov
cltd
lock
dec
fldcw
and
sbb
jmp
xchg
inc
outsl
pop
ret
inc
dec
inc
lods
gs
mov
push
mov
mov
inc
dec
mov
cmpsl
and
shrl
aad
mov
ss
fisttpll
lds
addb
push
outsl
dec
cmc
and
loope
outsl
sbb
push
aam
out
mov
stos
inc
cmpl
rcl
dec
mov
xor
xchg
sub
shl
ficompl
loop
das
jg
lds
stos
jecxz
or
lods
pop
sbb
inc
and
and
xor
mov
dec
addr16
imul
jecxz
push
or
cmp
xchg
cmpsl
xor
push
fs
jb
xor
ds
sub
fiadds
mov
in
dec
push
pop
aas
jle
es
out
neg
mov
cld
pop
clc
or
pop
sbb
daa
jo
jo
out
imul
in
es
push
push
dec
add
sarb
xchg
arpl
hlt
and
or
rcrl
mov
lahf
sbb
dec
inc
sub
imul
jne
and
and
jns
jle
mov
push
lds
jb
adc
inc
repz
sub
ja
aam
or
jle
imul
mov
xchg
mov
sbb
mov
sub
fcompl
fcoms
jnp
test
sbb
jmp
je
jns
inc
mov
xchg
or
pop
ret
leave
cltd
movsl
enter
insb
js
roll
mov
pop
jle
inc
push
add
xor
cld
mov
das
xchg
std
andb
fbstp
adc
testl
cmpsb
dec
push
ss
or
in
es
mov
add
pop
pop
mov
scas
lds
repz
adc
mov
or
push
jbe
push
lahf
cltd
push
adc
in
xor
stos
sti
sub
jecxz
icebp
les
rorb
xchg
das
mov
sbb
gs
loopne
cmp
fidivl
rcrl
fldcw
lods
cli
mov
mov
mov
mov
iret
int
lcall
lret
sbb
push
fnsave
in
rorb
outsl
pop
repz
push
fidivrl
cmp
add
jg
repz
adc
ret
leave
test
or
cwtl
fildll
je
add
imul
mov
pop
mov
loopne
cmp
daa
sbb
in
push
test
popf
lds
push
jp
pop
sub
loopne
stc
fsubl
ret
xchg
pop
pushf
aam
pop
mov
xchg
out
outsl
mov
or
mov
fs
fisubrs
dec
push
xor
pusha
lea
jo
and
and
and
inc
jo
mov
cmp
cmp
cs
movsb
add
popf
add
int
xor
mov
mov
imulb
imul
push
or
fistpl
js,pt
xchg
xchg
jns
jnp
mov
sahf
add
idiv
xchg
test
adc
inc
out
fldenv
test
push
xchg
leave
out
outsl
sbb
and
pop
jno
jmpw
fistl
push
cs
xor
lahf
lcall
imul
or
lret
mov
es
hlt
push
and
jae
and
cmp
repnz
or
ljmp
mov
mov
daa
mov
aam
dec
or
pop
inc
jp
jmp
outsb
mov
dec
outsb
data16
into
xchg
adc
pop
pushf
dec
or
loop
repnz
and
in
test
push
pop
cltd
jb
fdivrs
and
sbbb
shlb
addr16
or
mov
jge
insb
xchg
movsb
sarl
enter
test
adc
push
cli
add
sub
mov
lret
jle
into
adc
pushf
cmp
enter
push
mov
div
or
pop
ficoms
push
xchg
lret
sbbb
fwait
add
xor
mov
lods
enter
cmpsb
jp
push
mov
pushf
mov
mov
xor
push
call
add
out
lods
loop
inc
mov
addr16
insb
lds
sbb
addl
lcall
das
and
add
int3
cs
das
scas
std
movsl
mov
out
aas
add
sbb
ljmp
mov
push
inc
bound
jge
jg
cmc
push
clc
pop
lods
ss
cmp
pop
adc
mov
xchg
cmp
bound
rorl
cmp
jge
imul
outsb
jbe
mull
inc
jl
test
inc
scas
inc
sarl
inc
mov
cmp
testb
ficoml
mov
ret
and
repnz
lret
inc
mov
outsb
push
jns
adc
inc
testl
lahf
sbb
dec
addr16
pop
mov
in
and
stc
push
adc
inc
outsb
call
in
push
unpcklps
jp
dec
dec
out
xor
pusha
sbb
pusha
div
leave
daa
std
or
sbb
inc
stc
call
sbbb
mov
dec
sub
in
push
jae
lea
mov
or
pop
lock
sahf
jg
mov
push
cmp
push
lcall
clc
popa
push
loope
movsb
adc
fnstsw
movsl
into
rcrb
inc
dec
jp
outsl
mov
pop
mov
adc
and
inc
int3
pop
and
pop
data16
add
mov
mov
and
mov
jae
jp
das
inc
fcmovnbe
xor
repz
jns
push
imul
out
pop
dec
add
into
sbb
cmpl
in
jne
add
mov
inc
pop
dec
lea
out
cmc
cmpsb
stos
xchg
int
push
cmp
add
mov
stc
stc
fistl
int3
pop
jno
sub
rclb
in
bound
jnp
mov
mov
dec
jecxz
ljmp
push
rclb
dec
movsl
jns
jno
dec
lret
inc
sub
adc
xchg
aam
mov
jb
idivl
inc
subb
jno
mov
scas
iret
pop
in
addb
enter
mov
xlat
and
test
outsl
pop
sbb
jns
fnsave
addr16
inc
out
mov
xchg
mov
cmc
mov
dec
adcb
cli
sbb
sti
fs
add
cmc
xchg
out
fidivrs
repz
xchg
ja
nop
adc
pop
jmp
fwait
hlt
movsl
call
inc
and
fldenv
loopne
cltd
data16
cs
in
and
inc
mov
je
sbb
pop
mov
push
cmp
mov
and
xchg
jl
adc
mov
incl
mov
mov
add
add
pop
push
mov
inc
xor
push
test
cwtl
sub
xor
lahf
invd
jns
jb
aaa
mov
mov
jb
jo
roll
arpl
or
in
repz
xor
inc
faddl
shl
dec
jmp
dec
push
imul
adc
les
xchg
xor
loopne
xorb
shrl
push
sub
movsb
stos
aas
orl
mov
sub
iret
inc
jl
inc
pop
inc
hlt
xor
mov
sub
arpl
and
lods
xchg
popa
cmp
mov
mov
outsb
xchg
and
test
fadd
outsl
jp
shll
mov
mov
daa
in
in
lods
insb
andl
sub
repz
add
movsl
int
test
adc
push
cmpsb
inc
add
test
jns
lcall
mov
movsb
movb
mov
pop
add
in
adc
ror
inc
dec
int
out
mov
pop
dec
add
sti
xchg
in
and
insb
sbb
in
popa
cmpb
jne
sbb
mov
sbb
out
das
sub
je
cmpxchg
pop
call
mov
fcompl
fdiv
loopne
repz
mov
rcrb
push
sbb
pusha
cmp
ljmp
fs
ds
adc
pop
cmp
xchg
sub
xchg
jo
lcall
and
push
mov
cltd
ret
loop
pop
push
xchg
fstpt
jge
lcall
test
jge
in
in
and
mov
cltd
mov
add
jb
movsb
ljmp
lods
sub
insb
sub
repz
mov
dec
and
jbe
pop
cld
test
sbbl
nop
lods
iret
xchg
and
lock
pushf
in
enter
stos
loopne
rclb
adc
cmp
test
mov
jmp
pop
imul
pop
cmpb
mov
and
cltd
mov
js
in
imul
and
jg
jno
add
clc
sbb
mov
push
not
mov
mov
sub
in
addr16
xchg
fidivs
jbe
pop
pop
pop
mov
mov
ja
fs
adc
mov
dec
xor
xor
sub
movsl
loopne
jae
sbb
mov
mov
data16
rcl
mov
aam
lcall
inc
andb
aaa
jne
mov
mov
imul
test
xor
jae
cmp
and
addr16
addl
nop
ficompl
dec
stos
dec
cld
add
popf
mov
dec
mov
andl
dec
dec
inc
leave
adc
mov
push
rclb
mov
add
xor
xor
xchg
sbb
pusha
adc
fwait
and
sub
loopne
fiadds
sbb
aaa
xchg
vfrczss
loope
mov
adc
add
adcb
cmc
dec
xchg
jmp
outsl
repnz
pushw
rol
sub
ljmp
jmp
fwait
outsb
mov
xchg
lods
xor
mov
imul
lret
lret
clc
xlat
jo
jl
insb
leave
and
sub
jne
cmpsl
jg
xchg
lcall
sbb
lds
in
mov
in
clc
out
push
popa
popa
lret
or
pop
xchg
ja
adc
jbe
add
stos
cmpsl
mov
push
lret
jl
fisttpll
adc
pop
add
popa
cmp
push
inc
mov
push
das
inc
dec
pop
test
add
cld
jp
dec
sti
mov
or
movsl
mov
xor
push
je
jge
sar
adc
adc
mov
mov
icebp
jl
inc
imul
mov
xchg
aaa
or
jmp
out
and
movsb
mov
dec
mov
adc
aaa
arpl
xlat
mov
hlt
xchg
in
inc
loope
xchg
jbe
aas
dec
pop
stc
fcomi
xchg
jno
pop
adc
fstps
xchg
lretw
pop
clc
mov
nop
ds
cmp
enter
sti
test
cmp
add
push
movsw
and
jmpw
pop
pop
jns
lret
jnp
lea
add
out
shlb
rol
cmp
jae
mov
jle
xor
arpl
push
xchg
sub
push
mov
mov
jmp
jae
scas
outsl
and
jmp
ss
jp
arpl
jge
ja
xchg
mov
xchg
test
add
mov
dec
enter
cltd
fs
cmp
mov
cmp
fwait
sti
sbb
cmc
or
mov
rolb
mov
test
stc
aaa
leave
fsubrl
jns
adc
jge
xor
push
cltd
and
cld
inc
ljmp
xlat
push
lret
rcrb
sub
or
add
jp
jp
hlt
insb
cmp
lea
loopne
push
lret
pop
jp,pt
mov
cmp
leave
js
mov
mov
xor
bound
aas
jno
fs
inc
push
sub
push
push
in
jp
or
pushf
fwait
xorb
insb
ret
notb
push
leave
pop
and
fdivrs
outsb
jo
mov
add
popf
mov
mov
imul
or
push
jb
adc
leave
mov
fs
inc
rolb
cmp
mov
out
enter
jns
shll
cmp
pop
sub
cli
mov
ret
inc
pushf
add
adc
inc
and
pop
ljmp
int
add
lock
ja
mov
out
xor
movsl
gs
ret
push
mov
pop
out
xlat
test
sub
mov
mov
imulb
imul
fimuls
loope
insb
jle
xchg
xor
xchg
mov
imul
test
cltd
popf
jg
mov
mov
int
jl
mov
fs
pop
pop
cmc
cmp
xchg
stc
aaa
push
and
aad
cmpsl
ljmp
sub
jo
incl
imul
divl
and
aam
lret
in
cmpsb
inc
jge
es
cli
jo
cli
lods
test
mov
dec
addl
sub
in
adc
mov
ja
test
idivb
push
add
or
sub
ficoms
push
das
jg
arpl
outsl
pop
jmp
pop
shll
pop
adc
rcll
andl
das
mov
pop
outsb
mov
int
add
repnz
scas
dec
sbb
pop
xorl
jb
sbb
mov
sbb
ret
cmp
add
push
movsb
jecxz
add
xor
icebp
cmp
and
int3
cltd
in
scas
imulb
aam
lea
cmpsb
pop
and
in
push
test
pop
mov
dec
mov
push
out
sbb
testb
gs
add
jge
cli
or
fldcw
inc
aaa
in
mov
or
cmc
jnp
jg
mov
jne
std
pop
dec
mov
and
adc
xchg
xor
mov
leavew
xchg
daa
mov
jge
movsb
data16
call
fcomp
push
push
int3
stos
or
clc
xor
push
imul
repnz
dec
clc
add
push
aam
xchg
sub
inc
jg
cmp
sbb
push
pushf
xor
test
mov
ret
xlat
loope
or
in
cmp
mov
imul
aad
call
jmp
xor
fisttpll
in
lret
shlb
rcrl
mov
jb
mov
pop
int
test
stos
je
mov
push
jne
sahf
inc
enter
jns
rclb
pop
ja
and
xor
add
mov
stos
sbb
loopne,pn
rcl
sti
mov
scas
int3
pop
sub
ret
jl
cmp
incb
movsl
rolb
xor
mov
push
mov
sub
shr
sbb
adc
jg
jo
shlb
lods
ret
cmp
fld
dec
cld
add
movl
mov
outsl
and
stc
mov
mov
xlat
xor
push
mov
arpl
jle
rcl
pop
sub
push
add
rcll
pop
aam
je
xor
and
mov
popa
adc
lahf
pusha
movl
test
fistpll
or
std
js
pop
fstl
test
cmp
dec
in
inc
mov
pushf
hlt
ljmp
xchg
arpl
push
or
cmp
dec
xor
enter
jg
mov
push
pop
push
sbb
or
sahf
aam
adc
fidivl
mov
pop
xchg
data16
cmp
cmp
pop
dec
divl
orb
scas
dec
jno
pop
push
add
or
pop
pushf
pop
cmpsb
cld
cmpsl
mov
fildl
sbb
mov
in
xor
sahf
pop
xor
test
mov
in
adc
jno
insb
add
xchg
addl
and
adc
fistpl
pop
aam
std
or
ret
add
and
in
sbb
into
fstpl
fnstsw
dec
flds
outsl
jno
jmp
xchg
adc
ds
adc
or
mov
fsubl
cwtl
cmp
dec
push
sahf
in
daa
inc
cmpsb
cmc
ds
inc
adc
and
imul
decl
push
and
jp
jg
out
mov
lcall
int
adc
sbb
cmc
pusha
xchg
int3
scas
fsubrl
ret
inc
mov
pop
cmp
mov
cli
imul
iret
sbb
shr
mov
push
jb
sub
mov
daa
fdivrl
push
and
rcrl
jp
leave
mov
aas
adc
or
out
movsl
xchg
inc
cmp
mov
popa
pop
inc
sbb
add
push
fdiv
cmpsl
loope
loope
mov
into
pusha
mov
cmp
fidivs
test
sbb
mov
test
adc
jns
lret
inc
mov
lahf
mov
pop
ljmp
mov
xchg
aas
lret
mov
mov
and
add
mov
lea
xchg
stos
in
xor
mov
shrb
test
xchg
loope
and
lahf
mov
pop
call
mov
shlb
adc
addr16
sub
sbb
inc
insb
cmpsl
unpckhps
jno
daa
loopne,pt
popa
mov
sub
cmp
cmp
shlb
inc
sahf
fwait
iret
xchg
push
cld
jge
mov
pop
inc
rorl
in
sbb
inc
sbb
addr16
movsl
or
arpl
lods
test
jle
xorb
adc
outsl
fs
leave
ror
scas
icebp
mov
xor
mov
sub
xchg
jle
xchg
or
add
jl
xchg
scas
pop
dec
jnp
lahf
inc
mov
xorl
inc
xor
adc
aaa
jg
mov
leave
or
fldl
jle
sbb
test
int3
jle
xchg
xlat
js
push
push
sti
daa
inc
loop
add
int3
ss
dec
xor
mov
pop
push
test
fs
jle
lods
sbb
push
and
push
enter
lahf
and
xor
push
pop
aas
aas
arpl
negb
cltd
jno
and
mov
std
inc
lods
clc
adc
cmp
mov
adc
push
test
imul
in
mov
adc
movsb
cmp
shl
lcall
fwait
inc
xchg
mov
cmc
das
outsb
out
xchg
jns
pop
jbe
stos
gs
andb
cmp
adc
mov
pop
push
inc
addr16
daa
push
inc
mov
popf
sub
sbb
lds
leave
pop
push
fsts
cmpsl
mov
cmp
or
cmp
int3
shll
scas
call
jle
xchg
clc
and
andl
ds
stc
or
and
imul
inc
cld
mov
sbb
dec
cs
push
sbb
test
movsl
or
adc
je
sbb
mov
mov
lret
orl
fndisi(8087
adc
stc
fsubs
mov
popf
test
push
lcall
pop
ret
mov
adc
repnz
test
xor
sbb
add
push
mov
sbb
cmpsl
pushf
lea
popa
jmp
ljmp
lock
fs
outsb
scas
lret
pop
pushf
fldenv
sub
pop
hlt
jno
lods
outsb
aas
je
pop
xor
js
imul
bound
mov
repz
xor
xchg
int
adc
bound
xchg
add
fwait
mov
into
in
popf
outsb
lret
int3
jbe
jb
mov
hlt
mov
imul
in
das
xor
arpl
outsl
out
lcall
loope
test
mov
cmp
jle
inc
jae
mov
ret
fcmovnu
inc
push
dec
pop
mov
push
mov
enter
xchg
test
scas
xchg
push
xchg
fwait
popf
pop
sahf
lcall
inc
testl
push
mov
or
test
pop
pushf
lahf
xchg
subl
pushf
mov
cwtl
add
jge
mov
lods
push
push
fisttpl
ficompl
jne
in
pop
mov
or
cmp
mov
mov
push
lds
xchg
jnp
jmp
das
rcr
cli
inc
fdivrl
adc
pop
popf
dec
mov
mov
and
lock
pop
aad
rcll
pop
dec
pop
mov
cltd
aas
sub
xor
push
pop
xor
int
or
test
jmp
int
adc
mov
into
adc
or
sbb
adcl
cmc
sub
sbb
ljmp
xor
and
arpl
pop
xchg
mov
fidivl
inc
dec
gs
mov
dec
test
add
aas
jns
lds
mov
cmp
fldenv
cmp
and
add
mov
test
xchg
lock
fcompl
mov
pop
icebp
push
cmp
int
pop
scas
pushw
sbb
in
jne
pusha
icebp
sub
lret
inc
pop
push
negl
cwtl
lods
imul
loopne
andb
jbe
push
movsb
movl
insb
aas
xor
ret
jg
out
dec
sub
jle
add
mov
iret
in
ret
gs
push
aad
loopne
cmpsl
into
mov
push
stos
out
sub
incb
call
mov
adc
dec
xchg
scas
and
enter
and
add
es
mov
mov
jmp
add
push
mov
imul
sub
arpl
icebp
add
sub
mov
sbbb
jb
shl
xor
cmpsb
lods
outsl
jmp
and
xchg
rcrb
loop
xchg
pop
ret
pop
rolb
int
push
popa
push
dec
je
cld
lds
cmpsb
and
stos
ret
mov
adc
faddl
mov
pushl
and
adc
dec
push
inc
mov
xchg
pop
addr16
mov
cmp
inc
and
and
jle
or
jns
movsl
add
shlb
cmp
push
cltd
xorl
cmpsb
xchg
cmpsl
dec
jecxz
push
or
add
lods
out
ret
or
sti
les
push
dec
sub
ffreep
int3
sbb
pusha
outsl
and
push
repz
mov
lea
push
movl
add
jb
inc
push
or
stc
xchg
arpl
mov
sbb
adc
inc
xor
push
and
notl
sti
clc
pop
jne
ss
cmp
dec
loopne
in
add
shll
inc
daa
pop
out
mov
pop
das
aaa
add
scas
jmp
xchg
fdivrp
push
in
adc
xlat
pop
or
or
inc
decl
out
shll
sub
or
adc
xor
out
cmp
les
por
inc
jne
fcompl
stos
sbb
testl
popa
cmp
in
out
ret
cmc
cmp
stos
dec
roll
xor
pushf
adc
and
nop
shlb
cmp
cmp
dec
or
or
ret
cmp
decl
dec
jae
inc
lret
imul
fisttpll
lret
fucomip
pop
clc
and
scas
dec
jo
movsl
jns
filds
cs
cmp
mov
inc
das
adc
aaa
ret
repz
or
and
adcb
mov
outsl
jbe
push
push
lods
push
aad
out
push
daa
mov
dec
test
dec
mov
dec
enter
mov
lahf
les
pushf
or
les
aam
data16
push
jge
int
push
add
push
and
mov
fs
test
adc
addb
or
pop
xchg
dec
add
fs
popa
fistl
cmc
pop
divb
cltd
jnp
fs
xor
and
xchg
pop
pop
mov
dec
and
cmpsb
cltd
pop
bound
push
jmp
je
pushf
mov
das
sub
jge
mov
cltd
negb
inc
mov
add
mov
mov
pop
pop
rolb
xchg
or
jge
fwait
mov
pop
dec
inc
dec
jae
loop
jb
sbb
stc
repnz
mov
add
lcall
std
sub
outsl
adc
out
inc
push
repnz
nop
js
loope
push
xchg
inc
jbe
mov
je
push
addr16
sub
hlt
jbe
jp
cmp
popf
jne
in
cmc
nop
sub
jl
out
ss
clc
mov
and
xchg
sub
adc
xchg
lret
pop
sbb
shlb
mov
xchg
test
jg
leave
push
mov
lret
enter
data16
scas
dec
mov
mov
stos
hlt
shlb
sahf
nop
shl
xlat
adc
push
pop
loop
fisubl
jo
add
sahf
cmp
mov
hlt
in
or
dec
xchg
dec
add
repz
ds
cs
lea
sahf
jno
and
mov
adcb
lds
hlt
mov
mov
and
je
add
dec
xchg
ret
cltd
je
or
mov
jl
pop
dec
pusha
sbb
sahf
ret
ds
pop
lock
pop
xchg
jg
mov
in
test
jne
jge
sti
repz
call
and
popa
dec
mull
sbbb
xchg
or
cmp
sub
mov
push
dec
mov
jl
lahf
lock
sub
lret
xchg
xchg
int
cmp
pop
cmpsl
in
xor
cmc
je
pop
adc
cmc
nop
outsb
xchg
mull
cmpsb
incl
pop
pop
jns
xchg
das
insl
shll
lea
push
setl
and
and
sub
ds
cmp
sub
xor
mov
lret
fmull
outsl
sbb
negb
sub
pop
sbb
mov
jecxz
ja
jmp
outsb
test
mov
nop
mov
mov
inc
add
push
hlt
and
sbb
mov
jb
movl
jo
shrb
pop
sub
pop
cmp
dec
cmc
nop
popf
fisubs
aaa
sub
xlat
jle
pop
cs
mov
and
push
cmpsb
in
mov
xchg
sub
adc
push
int3
push
jge
scas
mov
outsl
dec
mov
jno
pop
in
or
cld
or
sub
or
sbb
mov
bnd
inc
scas
push
int3
sub
jae
xchg
int
cmp
lcall
aam
xor
jns
rcr
inc
mov
outsl
es
fwait
xchg
sbb
add
cmp
subl
out
pop
dec
outsl
dec
add
mov
adc
adc
jge
fbld
in
repnz
push
jmp
nop
jle
pusha
loopne
repnz
std
adc
sti
clc
adc
outsb
lcall
inc
testb
mov
xchg
ja
js
loop
jbe
out
sbb
cltd
adc
rolb
push
inc
cmp
mov
cltd
cmp
or
xchg
shrl
mov
inc
dec
adc
dec
arpl
out
dec
movsb
popf
cmpsb
xor
les
cli
add
insl
ret
into
add
mov
dec
lods
insb
clc
jne
push
lods
data16
in
xchg
nop
pop
and
lahf
xchg
or
sub
adc
and
mov
mov
test
xchg
jo
xchg
pop
and
insl
and
in
sbb
adc
imul
mov
add
lahf
inc
inc
dec
mov
mov
sti
or
push
pop
push
cmp
sbb
jo
adc
pop
bound
add
dec
sbb
in
mov
and
and
pop
pop
cmp
pop
lods
pop
popa
dec
les
daa
mov
pop
pusha
push
fadds
cltd
jge
repnz
or
out
pushf
icebp
xchg
jg
sbb
xchg
inc
lret
sbb
cmpsb
xchg
sub
arpl
cmp
adc
pusha
xlat
iret
mov
push
mov
imul
mov
out
adc
lds
aas
mov
xchg
xchg
and
push
and
mov
mov
pop
push
insl
pop
in
xchg
in
dec
jnp
xchg
push
xor
push
mov
call
xchg
popl
aaa
pop
mov
in
jmp
mov
cmpsb
fadds
nop
cmp
mov
lods
mov
mov
outsl
mov
and
xor
ret
inc
xor
xchg
ret
mov
cmp
pop
add
and
push
mov
mov
mov
daa
push
push
mov
rcr
arpl
inc
and
cmp
dec
sar
imul
and
adc
mulb
test
iret
inc
or
xchg
test
fs
jnp
inc
inc
fistl
pop
lock
inc
sbb
gs
inc
mov
pop
dec
mov
mov
scas
jmp
pop
imul
sub
sub
in
xor
pop
or
fldt
je
gs
adc
and
cmpsl
je
mov
pushf
loop
xor
fcompl
sti
push
fidivl
leave
dec
xchg
fnstenv
int3
cmpsb
sub
inc
fstpl
sarb
ja
mov
cmp
adc
daa
lahf
push
jge
sti
fildll
out
lcall
dec
push
jge
frstor
and
sbb
out
scas
fists
cld
inc
or
fwait
hlt
xchg
cmp
mov
data16
sbb
inc
leave
mov
shrl
mov
mov
adc
sbb
fistps
lea
sar
testb
cmp
icebp
imul
fsubr
jle
lea
cs
mov
xor
add
bound
pushf
mov
jb
mov
rcrl
loopne
sbb
cmp
jns
adc
cmpsl
xlat
adc
dec
rcll
sbb
and
mov
cld
icebp
fcomps
hlt
ss
ret
adc
cmpsl
cwtl
push
xor
xor
xor
outsl
xor
hlt
clc
push
adc
or
imul
mov
repz
add
test
cmp
push
push
fwait
gs
sbb
and
inc
mov
lock
lock
jp
pop
adc
dec
je
push
das
insl
imul
call
cwtl
lds
mov
filds
adc
leave
test
xlat
sbb
xor
fsqrt
push
and
xchg
lock
xlat
aam
pushf
out
scas
mov
rcll
sarb
shll
adc
cmpsl
mov
jmp
and
fsts
inc
pop
inc
adc
push
mov
outsl
sub
inc
movsl
xchg
sti
addr16
pusha
jecxz
in
pop
ljmp
ret
sbb
dec
xlat
mov
sahf
dec
xor
xor
insb
dec
mov
dec
aaa
lods
repnz
pushf
jne
cmp
xchg
sbb
jl
mov
mov
mov
mov
mov
jb
in
mov
rorb
inc
xchg
hlt
das
push
cmp
jp
mov
push
sbb
xchg
sub
sbb
xchg
cmpsb
mov
sbb
sub
push
repz
mov
sbb
stos
or
or
push
insb
ret
lret
sbb
mov
cli
jns
push
xor
sub
imul
fisttps
xor
int3
in
scas
out
mov
in
popf
es
pop
pop
pusha
stos
jns
push
inc
repz
or
xlat
pusha
insb
mov
or
mov
movsl
xor
add
and
iret
scas
sbb
mov
push
cltd
das
xchg
cwtl
ds
push
lahf
scas
popa
xchg
pop
mov
add
jne
out
enter
nop
sbb
mov
js
jecxz
mov
call
pop
sub
loope
stos
sub
cmp
add
dec
nop
pop
xchg
into
es
pop
daa
fs
loope
je
shrl
or
mov
and
stc
push
daa
sbb
push
dec
sete
jnp
sahf
jb
xlat
sbb
mov
mov
pop
inc
iret
mov
add
mov
inc
test
xor
mul
push
pop
push
push
sub
daa
pop
pop
inc
lret
adc
jb
pop
out
cmc
mov
shlb
lret
out
and
aam
pop
loopne
lds
scas
lret
mov
bound
xor
push
and
insb
lods
std
jmp
sub
shrl
jp
loopne
loop
sbb
mov
pop
and
sub
pop
fwait
fwait
add
imul
test
ss
ds
lock
jb
lods
xor
push
shr
mov
movsb
shll
fldt
mov
and
cli
stc
ret
test
mov
push
fmull
xchg
mov
push
jb
pop
jo
sbb
jo
lea
pop
lea
and
push
push
sub
shll
cltd
push
and
sbb
testl
inc
stc
inc
ret
inc
cmc
jl
pop
lret
jmp
dec
mov
ret
lahf
push
cmpps
call
and
push
dec
test
mul
ret
popl
sti
repnz
enter
adc
dec
jns
push
pushf
and
sub
sahf
mov
bound
addr16
cmc
stc
mov
mov
lahf
cltd
mov
jnp
mov
into
pushf
ret
fnsave
and
pop
mov
cmpsl
mov
jno
xlat
popa
insl
adc
js
add
into
repnz
mov
xchg
test
lods
ret
sub
pop
mov
jb
std
lahf
pop
push
sub
mov
std
test
inc
jp
jle
inc
loopne
imull
pop
fnsave
mov
cwtl
xchg
fcomp
and
mov
mov
loope
testb
jo
mov
pop
je
loop
ljmp
push
cltd
lods
in
mov
sub
push
loop
cs
dec
add
stos
es
push
xor
or
inc
add
mov
iret
int3
cmp
fimuls
fisttpl
xor
and
gs
xor
addr16
xor
sub
loope
sub
xchg
xchg
sbb
and
loopne
cmp
push
fwait
mov
rorl
xchg
mov
xchg
nop
add
and
or
popf
mov
subl
xor
mov
cltd
push
add
leave
fsubrl
or
out
nop
mov
sahf
dec
int
cmp
aaa
sbb
fs
sub
pop
sub
jg
xchg
mov
aaa
cmp
bound
shrb
daa
aam
fldl
cmpl
and
and
enter
push
sub
and
mov
sbb
dec
cmpsl
aam
out
jmp
daa
fs
fisubl
inc
push
xlat
pop
pop
mov
inc
adcb
or
jg
fmuls
dec
cmp
xor
test
sbb
xchg
icebp
adc
nop
mov
add
pop
mov
xchg
sub
outsl
sbb
aas
movsb
testl
or
das
mov
mov
rolb
shll
cmp
sub
push
pop
mov
out
or
arpl
cmpsl
insl
jmp
mov
dec
adc
or
push
fsubr
sbb
jp
sub
ja
cltd
testb
aad
clc
ret
rcrl
xchg
pop
pushf
orl
ljmp
mov
push
mov
push
lds
and
roll
xchg
add
in
xchg
sub
test
inc
xchg
test
daa
push
in
sbb
adc
mov
and
aam
jge
push
movsl
stc
outsl
pop
cs
loopne
lcall
divl
popf
xorb
xlat
cmpsb
cmc
cmpsl
jne
stos
jp
xchg
iret
sub
lahf
inc
aaa
iret
addr16
push
test
sbb
cmp
cs
out
pop
sbb
push
mov
push
leave
ret
cmp
addr16
stc
ja
popf
ret
daa
mov
mov
push
inc
gs
outsb
aam
xchg
add
testb
mov
inc
and
cmp
dec
xchg
int
scas
pop
inc
imul
out
pushf
or
into
and
lcall
cli
aaa
pushl
jp
subl
das
cmp
mov
int3
add
push
imul
add
adc
rorb
mov
inc
or
adcb
pushf
cmp
xchg
push
jb
adc
cmp
loop
mov
adc
and
mov
loopne
xor
mov
fcompl
inc
adc
mov
aam
pop
pop
adc
xor
mov
cmp
mov
shll
imul
lahf
inc
icebp
mov
out
push
insl
ret
popf
rorl
xor
movsb
mov
loope
in
adc
push
jl
je
jle
scas
adc
loope
sub
push
mov
faddl
aad
xor
addr16
or
lret
add
sub
shlb
movsb
jnp
mov
sbbl
sbb
xor
cmp
pop
mov
and
cs
scas
enter
stos
inc
cmp
call
mov
aam
ret
out
pop
xchg
pop
inc
sub
je
pop
fmuls
cli
push
jns
inc
sbb
push
jle
outsl
sbb
mov
xor
insl
mov
stos
aas
xor
pushf
push
mov
cmp
sahf
data16
fldlg2
lret
mov
mov
daa
adc
gs
ret
push
push
ds
push
push
pusha
out
out
push
push
or
xchg
je
in
xchg
pop
mov
xchg
xor
xlat
rorb
dec
xchg
add
push
mov
push
pop
hlt
mov
mov
in
mov
lea
xorl
leave
lock
ja
mov
sub
xor
test
cmp
pop
xchg
add
cld
lods
and
sbb
cmp
mov
nop
jp
rorl
sbb
pop
inc
mov
xchg
xlat
inc
xor
pop
lahf
rol
andb
adc
mov
or
lahf
xor
ret
cmp
push
mov
lret
sbb
in
or
xor
in
into
test
xor
push
insl
ret
xchg
test
dec
jb
mov
aaa
add
popa
pushf
xorl
sub
lret
stos
loope
popa
sbb
or
in
das
or
pop
or
and
leave
testl
stos
pushf
and
add
jmp
mov
test
fmul
pop
push
lds
stos
add
jb
nop
mov
clc
sub
je
push
jmp
sub
mov
push
lret
push
lods
rcrb
dec
cmp
mov
sahf
push
imul
dec
adc
cltd
sti
push
pushw
out
dec
je
pushf
leave
xor
adc
mov
mov
aas
or
dec
into
stos
sbb
and
test
mov
and
pushf
or
addb
add
jbe
fdivr
aaa
js,pt
cmp
adc
leave
pusha
or
shrl
jno
cwtl
mov
jle
mov
imul
mov
sbb
sbb
sarl
push
dec
xor
or
data16
xor
cmp
stos
testl
jmp
xchg
pusha
nop
mov
mov
push
sbb
stos
int3
jg
mov
mov
cmovl
into
aas
push
add
dec
hlt
xorl
push
inc
jae
cmp
ret
in
sarb
push
mov
mov
sub
mov
popf
sub
jecxz
add
pop
mov
cmpsb
inc
push
jmp
cmp
adc
shrl
ja
clc
pop
adc
cmp
call
and
cs
pop
cwtl
fucom
mov
cwtl
lret
cli
lods
sbb
orb
push
xchg
inc
jbe
popa
stos
cli
sub
stos
cmpsb
test
add
inc
jecxz
rolb
add
xor
push
and
adcl
cltd
inc
insl
in
jp
mov
or
mov
test
sbb
cltd
ds
dec
mov
xchg
push
outsb
mov
push
cmpsb
enter
repnz
lret
rep
push
aaa
pop
push
sahf
sti
ja
bnd
pop
cli
cwtl
loope
testl
mov
sub
push
test
mov
test
mov
jmp
stos
in
pop
or
inc
sub
lock
int3
sub
sbb
inc
pushf
dec
mov
mov
or
sub
xor
imul
into
lods
addl
sbb
lea
inc
ret
xorl
sbb
mov
cmp
mov
mov
ds
sbb
insb
jae
push
and
dec
xor
stos
or
repz
jo
jns
aad
dec
jno
jmp
out
xchg
std
push
iret
imul
lahf
mov
js
push
xchg
pusha
inc
and
movsl
aas
and
out
lea
xor
daa
sarl
pop
fmulp
enter
push
inc
inc
minps
icebp
pop
xor
dec
bnd
outsl
stos
or
xchg
adc
inc
push
retw
inc
dec
push
lods
and
call
into
loope
out
cmp
dec
cmpb
aad
jb
gs
sub
jge
sbb
mov
lret
inc
inc
xchg
outsl
pop
adcl
subb
stos
out
mov
cs
test
icebp
pop
push
incl
orl
lret
lret
mov
in
mov
adc
xchg
xchg
lds
mov
cli
out
clc
sbb
sbb
push
mov
pushf
xlat
push
and
xchg
or
ret
ljmp
or
inc
cmp
scas
cmpsl
and
cmp
push
into
out
dec
in
aad
xor
jns
mov
and
push
mov
fisttps
inc
mov
add
fucomp
and
neg
ja
jnp
out
mov
xchg
cmp
lret
mov
call
sbb
mov
in
xchg
xor
or
lds
sub
dec
mov
call
inc
push
mov
push
icebp
add
push
addr16
test
xchg
movsl
ret
movsl
shrl
test
mov
cmp
mov
fucom
scas
push
jge
push
pusha
xor
inc
jge
loopne
dec
jbe
sub
imul
rclb
adcl
push
mov
inc
push
mov
mov
inc
je,pt
shrb
mov
in
test
cltd
sbb
test
add
enter
xor
cld
test
and
jl
ja
push
pop
ljmp
push
daa
and
test
lret
ffreep
sbb
dec
ds
and
jae
aad
or
clc
icebp
loopne
test
scas
push
mov
js
iret
repz
mov
adc
add
fstpl
scas
mov
icebp
das
fnsave
pop
and
add
repz
call
mov
test
mov
mov
stc
div
push
cltd
stos
outsb
push
and
mov
add
dec
fstpl
xchg
ret
cmp
push
lods
les
cmp
lret
and
and
std
sbb
orl
pop
jo
ja
or
sbb
popf
inc
and
jne
mov
dec
jnp
jmp
mov
fbld
cli
pop
js
and
imul
or
into
in
xchg
jbe
pop
ret
les
jle
cmp
lea
aas
shrl
inc
mov
dec
out
xor
scas
mov
jae
popf
inc
xchg
ja
idivb
mov
nop
fidivs
mov
jge
dec
je
scas
outsb
mov
in
cmpsb
roll
enter
pop
cmc
and
shrl
cmp
mov
lods
lcall
pop
inc
in
roll
sbb
xchg
xor
or
scas
adc
mov
push
popa
mov
mov
sub
repnz
xchg
in
neg
mov
xor
or
xor
stos
dec
jae
gs
rorb
std
daa
push
sub
outsb
jge
int3
inc
jl
ret
in
out
ret
sub
cmp
mov
pushl
sub
loop
pop
adc
mov
mov
sbb
and
dec
imul
stc
test
stc
jmp
aad
repnz
adc
and
loopne
add
pop
cmp
lods
xchg
pushf
ja
sbb
inc
adc
cltd
sub
sbb
ds
push
mov
lahf
outsl
ds
cld
shl
out
leave
jns
popa
dec
jmp
push
outsb
ljmp
std
cmp
cmpb
xor
adc
mov
mov
sbb
dec
xor
mov
loope
lahf
fldt
jo
pop
mov
or
xchg
mov
insl
aad
cmp
ret
cmp
push
test
sub
pop
and
lods
push
sub
fmuls
out
mov
mov
adc
arpl
out
test
jg
add
sbb
mov
arpl
cwtl
jge
call
inc
mov
pop
sbb
aas
negb
or
cwtl
adc
mov
jle
adc
cmp
sub
dec
adc
fsubr
mov
loop
shlb
mov
repz
aad
and
pop
xor
dec
cld
inc
xlat
decb
dec
sbb
sbb
hlt
cmp
or
inc
fsubr
addr16
decl
mov
movsl
fidivrs
dec
mov
xorl
pushf
mov
faddl
xchg
sbb
pop
lcall
dec
arpl
pop
test
fisubs
mov
data16
iret
cli
adc
fsubrp
cwtl
push
mov
pop
fucom
filds
fnstenv
ja
push
and
in
sahf
movsb
mov
cmp
dec
lret
jae
lods
ja
psubusw
xor
dec
xchg
xor
dec
or
mov
ret
and
mov
movsb
or
cmp
into
inc
xor
cltd
inc
mov
out
adc
adc
sbb
loope
mov
daa
adc
dec
lods
xor
rorb
pop
cmpsb
cltd
push
shll
into
stos
inc
sub
push
ret
mov
lret
jge
dec
and
add
push
jp
jns
shrb
loopne
xlat
addr16
xchg
std
cmp
xchg
push
mov
gs
xlat
inc
xor
dec
pop
or
out
int3
negl
mov
pop
enter
inc
inc
sub
popa
jb
dec
icebp
insl
inc
in
ficoml
iret
xlat
sbb
jae
nop
inc
outsl
adcb
pop
aam
xchg
push
push
test
and
inc
mov
out
mov
mov
pop
or
lock
cmpsb
std
push
ror
push
mov
jge
or
lods
data16
nop
popf
mull
lcall
dec
ds
movsb
cs
lock
mov
mov
and
pop
cmp
out
cmpsl
mov
xchg
js
cmp
mov
jbe
cmp
inc
popf
push
push
fwait
xchg
sbb
jecxz
iret
out
add
clc
stos
cmp
dec
jb
outsl
push
lret
lret
xchg
jmp
mov
xchg
neg
inc
mov
xor
call
push
mov
jb
int3
cli
imul
mov
xor
pop
lods
and
test
and
jno
cmp
mov
icebp
xor
rolb
hlt
lods
mov
jae
lret
xchg
outsl
hlt
cmp
cld
mov
inc
pop
inc
pushf
pop
push
inc
stc
nop
add
mov
aad
jmp
dec
cmp
xor
jg
pop
mov
jg
orb
push
in
or
imul
sub
fwait
bound
movsl
pop
aaa
cmp
fcom
xor
gs
sbb
mov
cltd
jnp
mov
out
sub
cmp
popa
rclb
fstps
movsl
or
cld
mov
mov
sbb
cmp
test
jge
pop
jno
fbld
add
dec
xchg
in
jb
fldl
or
dec
je
push
pop
je
cwtl
dec
ss
sti
in
dec
movsl
adc
xor
and
ret
cmc
sti
pop
out
pop
lret
dec
outsb
data16
mov
mov
dec
mov
dec
inc
cmp
push
push
clc
inc
pop
sti
lret
clc
orl
int3
scas
gs
push
ret
dec
dec
movsb
adc
negb
jo
and
jo
les
les
stc
inc
jmp
fwait
xchg
out
xchg
dec
pop
xchg
mov
iret
xchg
push
insl
test
pop
lret
loop
xchg
inc
out
lock
push
add
inc
sub
inc
push
jecxz
stc
cltd
cmp
out
into
out
sub
cmpsl
std
pop
xor
clc
or
xor
insl
sub
and
and
sub
in
or
push
inc
sub
popa
das
mov
addb
gs
adc
add
jne
data16
xchg
mov
loopne
jp
push
sbb
pop
push
sar
cmp
cmp
iret
or
iret
xchg
fcmovb
icebp
addr16
cmp
xchg
pop
jnp
and
test
ret
cld
divl
jo
loop
fldl
repz
sti
dec
sbb
push
inc
lahf
fisubrs
test
cmc
outsb
cmp
in
xchg
fildll
pop
mov
sub
dec
sub
mov
outsl
jne
aad
imul
sahf
dec
xchg
mov
test
sbb
push
inc
inc
and
loop
mov
mov
lahf
and
cmp
xlat
data16
sbb
shr
push
push
mov
sub
sar
push
aas
scas
xlat
call
insl
lahf
ret
adc
mulb
pusha
bound
fwait
in
dec
cmp
push
mov
mov
cld
lds
cmc
jecxz
leave
sub
pop
jmp
xor
iret
adc
ficoms
cli
mov
je
test
mov
adc
mov
cmc
mov
push
xchg
push
lods
mov
fwait
adc
aaa
jo
sub
mov
add
dec
pop
or
cwtl
sbb
nop
lds
inc
rclb
xchg
hlt
jb
test
xchg
mov
ds
in
dec
pushf
sub
inc
ss
in
lahf
cmp
stos
jae
cmp
cltd
push
mov
or
shlb
lret
pop
repz
andb
mov
dec
nop
leave
mov
in
cltd
jae
jo,pn
cmp
lahf
jb
lea
insl
mov
fcmovbe
adc
push
mov
or
cs
xchg
mov
js
test
call
out
aas
daa
xchg
sub
or
call
xor
in
pusha
xchg
adc
cmp
sahf
fimull
dec
sbb
out
cmpb
and
sbb
fs
je
idivb
iret
ret
outsb
shrl
fdivrp
sbb
pop
sbb
sub
and
pop
lock
flds
pop
das
ror
lods
mov
sub
das
cmp
inc
jle
inc
movl
jmp
sub
rcl
cmp
jne
iret
lret
jle
test
testl
mov
or
je
cmp
pop
lock
sbb
mov
test
inc
std
out
je
mov
adc
xor
sub
mov
sub
sbb
mov
cmpsl
insl
fiadds
cmpsb
or
loope
lea
out
test
dec
out
add
jp
push
mov
cmp
mov
enter
mov
push
xor
jge
js
scas
sbb
cmp
push
xchg
jge
popa
adc
jmp
sbb
lods
rcr
cld
mulb
lret
mov
inc
xchg
xchg
mov
es
outsl
bnd
jbe
xchg
sbb
mov
xor
call
pextrw
sub
inc
hlt
inc
cmp
mov
mov
cmp
mov
out
pop
sbb
shrb
sub
xchg
mov
xchg
mov
fsubl
push
dec
or
cmpsl
aas
clc
pop
jmp
fst
mov
loope,pt
mov
xor
into
inc
out
das
xchg
bound
ret
lret
push
xchg
rclb
inc
pop
jo
adc
pop
testl
adc
sub
cmpb
lcall
cmpsl
scas
jbe
scas
and
sub
cmp
xor
aad
lds
inc
and
adc
mov
mov
out
fstpt
xchg
xchg
lock
into
add
les
push
mov
rorl
outsl
mov
or
shlb
mov
pop
cmp
dec
xchg
add
push
cmpsb
ror
test
stos
sub
push
movl
js
shll
cld
leave
fsubs
mov
lret
lods
loopne
push
pusha
mov
mov
dec
or
cmp
sti
push
mov
repz
repnz
in
pop
mov
ljmp
jl
mov
nop
pop
mov
cli
ret
cmp
add
lcall
addr16
aaa
out
ss
dec
arpl
fldenv
mov
xor
out
insl
mov
ljmp
inc
adc
mov
xor
jo
sub
aas
and
stos
sub
jle
cld
xor
lret
ret
xor
mov
and
in
jge
movsl
add
out
cmpsb
jo
jecxz
push
pop
dec
jns
xor
sbb
lock
cwtl
jnp
clc
xchg
ds
rorb
es
loope
sbb
cmp
push
push
in
sub
lret
out
sbb
pop
push
movsb
movsl
pop
repz
mov
xor
sarb
mov
inc
sub
pushf
popf
enter
jbe
test
addl
dec
cmp
fwait
popa
daa
pushf
or
ret
jmp
test
sti
cli
inc
sub
jg
jp
inc
jbe
mov
fisttps
xchg
filds
inc
xor
lret
xchg
jp
dec
jnp
cmp
insb
pop
adc
stc
nop
xor
shr
imul
or
outsb
adc
adc
push
add
jmp
in
cld
stos
ds
imul
mov
sbb
pop
mov
jge
inc
sub
fistpl
cmp
js
sbb
pop
cmp
outsl
dec
jl
pop
adc
xor
pop
pop
adc
jmp
sbb
mov
inc
sbb
mov
push
imul
imul
cmp
push
cs
or
ret
fstps
mov
pusha
in
and
mov
lahf
sbb
and
in
mov
dec
dec
clc
push
aad
push
ja
and
or
mov
inc
test
xchg
and
jg
and
push
xor
add
lds
mov
lahf
sub
xchg
outsb
cmc
mov
inc
pop
cmp
outsl
dec
add
jae
dec
mov
sub
sar
rolb
or
inc
mov
adc
dec
enter
ja
mov
pop
in
adc
not
shl
mov
sbb
xchg
add
stos
ljmp
mov
pop
stos
mov
xlat
jno
adc
icebp
shlb
adc
dec
push
jne
or
cmc
test
mov
fbld
call
dec
loop
push
mov
fmuls
shrd
inc
adc
push
leave
adc
pop
repz
enter
sti
push
test
jle
jb
subb
dec
adc
inc
fisubl
add
je
addl
pop
add
cmpsl
imul
loop
subb
icebp
xlat
mov
adc
ds
movsb
push
jb
ds
repz
test
aad
fwait
enter
ss
sti
in
daa
xor
xchg
imul
push
test
jbe
dec
call
xor
aas
mov
cmp
movsb
data16
ja
rolb
repnz
das
shll
sahf
push
in
adc
cld
sbb
and
mov
xchg
pop
inc
stos
adc
mov
sbb
xor
lahf
dec
or
sbb
fildl
mov
bound
fsub
xchg
rcrb
stos
std
push
or
int3
aaa
dec
or
hlt
fdivrl
add
cwtl
adc
aas
xor
test
and
xor
mov
xorb
aam
loopne
pop
mov
inc
lahf
mov
rorl
xchg
outsb
fcomi
cmp
xor
dec
out
bound
jl
push
pop
cmp
mov
out
and
xchg
lcall
xor
jmp
mov
add
sbb
lea
ss
add
iret
sahf
inc
pop
add
push
and
sub
inc
arpl
sub
pushf
mov
movsb
or
rclb
pop
xor
push
xchg
push
mov
daa
pop
cld
mov
xchg
xchg
push
popf
jo
jnp
or
push
iret
das
addr16
fninit
xchg
sbb
jae
jae
jl
or
loopne
std
jmp
fadds
inc
repnz
negb
pop
ret
sti
push
add
pusha
sbb
mulb
or
aaa
dec
push
mov
sbb
or
dec
jl
xor
xchg
test
out
aam
xchg
cmp
cmpsb
inc
imul
je
mov
mov
jb
mov
xor
iret
mov
sub
push
loop
cltd
call
and
xchg
sarb
push
pop
inc
div
dec
insb
cltd
or
fbld
jae
test
push
mov
notl
popf
mov
push
out
stos
and
mov
and
adc
mov
out
xchg
into
pop
jle
jne
mov
fstl
sub
cmp
cwtl
xor
ret
movsl
inc
xlat
add
mov
insl
stos
xor
jge
aas
xchg
imull
jns
iret
fwait
push
fcmovbe
dec
xchg
loope
cmp
mov
cmp
fwait
lret
movsl
push
outsb
xor
sub
je
inc
dec
out
data16
mov
aad
fcoms
jmp
xor
cwtl
or
sbb
pop
shlb
rorl
je
mov
arpl
xorl
adc
repz
mov
das
xor
jmp
xchg
push
push
movb
add
sti
pop
sbbl
sbb
sub
mov
sar
and
adc
dec
fmuls
jle
test
hlt
scas
mov
pop
pop
addr16
pop
fimull
lret
inc
mov
dec
pop
jne
adc
test
bound
call
jns
cmp
sub
test
push
lock
mov
lea
mov
sub
out
mov
pminsw
jp
out
xchg
push
loop
sub
cmc
call
adc
leave
pop
mov
std
hlt
aaa
xchg
clc
sbb
adc
andl
loopne
test
xchg
fistpl
js
xor
add
jmp
jg
xchg
cmc
mov
lods
daa
jmp
push
lea
hlt
imul
push
dec
mov
cmp
shrl
aaa
or
fwait
push
das
pusha
add
lock
addb
jl
adc
pop
jne
ja
and
jle
mov
in
mov
insl
insl
bound
or
adc
pop
sub
imul
cmpsl
xor
mov
hlt
data16
lods
fisubs
push
xor
sbb
cmp
mov
aas
scas
push
sbb
push
stc
xchg
pop
lea
test
inc
mov
mulb
imull
daa
popf
inc
ss
popf
or
nop
loop
out
adc
pop
fs
std
xchg
or
ret
pop
push
cmp
pop
aas
mov
xor
push
in
arpl
xchg
mov
sbb
repnz
in
ds
pop
repnz
or
pop
out
daa
add
test
add
rcll
push
cmpsb
gs
stc
dec
push
mov
mov
out
push
movsl
clc
int3
and
pop
pop
rcrb
sbb
mov
mov
lock
cwtl
aaa
es
movsb
xchg
sbb
dec
lds
jle
fcom
fbld
lret
jno
mov
mov
fs
outsl
xchg
pop
lds
mov
mov
jle
shrl
add
fimull
test
pop
adc
les
inc
sbb
sub
mov
push
sub
js
cmpl
ret
xchg
add
lcall
push
rol
dec
icebp
mov
in
ds
xor
les
jo
rorb
mov
cltd
sbb
sub
adc
xchg
and
stc
movsl
ljmp
sub
xchg
jae
int3
fstl
shl
rorb
mov
adc
test
xchg
push
into
jge
cmpsl
jle
cmp
in
sbb
lods
jecxz
pop
jecxz
mov
mov
or
xchg
gs
not
pop
lods
scas
jbe
mov
lock
das
dec
or
mov
std
test
jmp
and
inc
lret
jle
and
jge
lods
push
loop
add
cmp
loopne
jl
push
cld
jl
mov
adc
sbb
xor
in
jo
push
lret
push
popf
and
sahf
in
jo
je
jmp
mov
or
lret
sbb
mov
xchg
out
shll
mov
lret
fldl
test
mov
jge
orl
adc
fprem1
jae
mov
ret
jle
add
jg
jne
xchg
arpl
inc
addb
movl
add
enter
into
inc
or
xor
test
dec
pop
addr16
push
push
cs
adcb
stos
sub
mov
xchg
rcrl
mov
xor
pop
push
add
push
shlb
repz
out
pop
cmc
sbb
push
push
inc
cmp
dec
pusha
push
out
xchg
scas
jge
push
dec
adc
mov
add
push
stos
xchg
fldenv
xchg
jmp
pop
bound
push
dec
add
adc
mov
dec
stc
icebp
nop
pop
sbb
or
shlb
mov
ret
jp
pop
das
call
repnz
aam
push
testb
sbb
fcoms
iret
popa
xor
jb
pop
pusha
cmp
test
add
inc
aad
add
cmp
sub
xor
loop
inc
xchg
fldcw
ja
loope
fimull
add
lret
and
sar
hlt
int3
inc
rolb
in
dec
mov
arpl
inc
js
xchg
loopne
add
jl
aam
pop
pop
cmp
scas
dec
pop
inc
js
ljmp
push
push
fnstcw
fbstp
call
adc
out
in
push
xchg
cmp
adc
xor
or
cld
mov
insb
lret
pop
ret
push
pop
push
mov
repnz
xchg
sub
push
mov
jl
xor
aas
jge,pt
jbe
shl
cmp
push
jl
xor
ljmp
fdivs
nop
push
adc
and
inc
or
scas
mov
cli
lret
outsb
shll
rcl
flds
mov
cmp
cltd
adc
push
push
clc
push
aam
jge
push
adc
xor
leave
push
xor
cmp
sti
pop
jecxz
popa
repnz
gs
jno
aaa
outsb
arpl
stc
lds
xchg
mov
fst
adc
lea
jg
mov
pop
outsl
sub
cli
jp
xlat
aaa
mov
fimull
test
dec
andl
lret
add
mov
cmp
test
push
and
imul
mov
mov
and
cld
in
mov
icebp
cmc
iret
pop
clc
push
pushf
mov
mov
pop
xchg
sbb
repz
cmc
stc
adcb
xchg
lcall
lods
out
scas
and
movsl
ret
or
adc
push
push
inc
sub
adc
mov
push
and
add
push
sub
or
jns
out
je
xor
xlat
jmp
jnp
stc
pop
mov
sub
movsb
jbe
mov
mov
xchg
pop
shrb
push
int3
and
sbb
mov
mov
dec
dec
pop
xchg
cmpsl
cld
xor
shld
stos
ljmp
popf
rcll
popf
out
test
stos
jno
mov
sub
pop
and
ret
loope
repz
sti
pop
sub
sarl
les
out
mov
outsb
es
mov
dec
xchg
sub
repz
movsb
xchg
fisubl
and
sbb
jge
fwait
inc
daa
jno
outsl
lock
mov
ss
mov
fyl2xp1
mov
xchg
lock
sarb
cmp
subb
aam
test
push
sbb
add
mov
ljmp
add
mov
sub
adc
mov
cmp
mov
pushf
jge
xchg
icebp
mov
sysexit
stos
cs
shrl
cmpl
mov
dec
dec
cs
das
inc
repz
sbb
sbb
cmp
pushf
jge
jg
fidivrs
cmc
jg
daa
mov
jns
lea
into
int
dec
lods
pop
or
jl
hlt
outsl
mov
dec
mov
dec
fistl
popa
xchg
sub
mov
sbb
or
arpl
test
leave
pop
cltd
je
and
jb
insl
sbb
xor
mov
sub
cmpsl
mov
push
push
loope
mov
cmp
pop
xchg
add
adc
dec
lcall
fldlg2
jo
scas
add
rol
cmp
jno
mov
mov
aad
xchg
pop
rclb
loopne
stos
push
lret
orb
testl
jmp
mov
ja
cltd
and
fldcw
lret
pop
mov
xor
in
addr16
scas
sbb
inc
scas
dec
outsl
add
ds
mov
add
lods
mov
jecxz
stc
lret
popf
into
cmp
dec
in
dec
xchg
pusha
dec
fisubrl
scas
mov
push
subl
aas
cmpsb
loop
fsts
xchg
or
push
xchg
lret
popa
mov
sub
dec
sbb
mov
and
fdivrl
cmp
dec
push
sub
cmp
push
xchg
inc
push
cmp
cltd
mov
dec
test
mov
adc
add
dec
dec
into
rolb
pop
or
add
mov
push
lcall
adcb
subb
adc
cmp
or
inc
ljmp
push
and
cmp
dec
pop
rcll
pop
mov
push
fucomip
pop
les
push
or
pushf
mov
xor
cli
out
cmp
add
adc
mov
jae
cltd
loope
mov
lcall
in
and
pop
xor
aaa
sbb
loopne
push
je
mov
and
shll
mov
scas
lret
mov
add
ret
sbb
jns
int
inc
jmp
push
rolb
cmp
mov
jmp
xchg
add
adc
sub
mov
je
out
xchg
lcall
lods
testb
cmp
or
push
int
pop
jmp
inc
or
cmp
ror
adc
nop
adc
mov
cs
bound
rcll
jae
dec
sbb
mov
std
fs
mov
cld
fstpl
leave
sbb
add
sbb
sub
xor
jl
rcll
ljmp
div
negl
mov
pop
in
rcll
lods
pop
add
insl
imul
pshufw
and
jmp
mov
jle
sarl
subl
add
sbb
mov
mov
mov
mov
cltd
jl
push
xor
iret
dec
rol
imul
push
lods
and
out
ja
scas
mov
mov
jnp
pop
stos
lods
sbbl
push
enter
jg
shlb
loopne
sbb
ret
mov
xor
dec
mov
cmp
add
rol
imul
pop
int3
jmp
mov
cmc
add
aad
lcall
pop
mov
mov
mov
stc
shrl
mov
and
dec
outsl
push
pop
cmp
sub
push
pop
ds
sbbb
adc
mov
cmp
mov
xchg
xchg
mov
loop
pop
std
mov
push
lods
lret
inc
push
adc
in
stc
sub
mov
test
mov
inc
prefetch
and
mov
pushf
roll
test
adc
pop
mov
jo
push
mov
loope
pop
cltd
adc
divl
mov
jmp
je
or
std
inc
push
sbb
pop
sub
cld
sub
daa
sub
cmp
adc
dec
rolb
das
inc
push
dec
stos
iret
scas
stc
push
ret
pop
xor
imul
or
jae
ljmp
mov
flds
out
mov
lret
mov
add
xchg
cmc
jbe
cmp
push
push
inc
scas
call
rorb
mov
fwait
clc
xchg
shlb
imul
in
ja
outsb
pop
in
fdivrl
sahf
mov
and
inc
inc
and
xor
cmp
out
inc
sbb
shll
xchg
jp
shlb
push
sub
mov
outsb
mov
xchg
push
addr16
pop
int
dec
lock
xor
jg
add
popa
sub
xor
fisubrs
aam
xor
andl
xor
mov
xchg
or
xchg
incl
adc
mov
inc
jle
in
neg
xor
lock
add
imulb
add
adc
jmp
dec
jmp
shrl
int
push
xchg
pop
ljmp
bnd
push
jbe
mov
jne
loop
jmp
dec
enter
xchg
xor
mov
dec
icebp
lea
jb
subl
push
lret
sarb
dec
dec
lcall
loop
lock
mov
and
hlt
add
cld
jns
cltd
stos
psignd
sbb
mov
jbe
xchg
stos
jecxz
xchg
jnp
stos
inc
je
xorl
lock
cmp
mov
pop
fisttpl
add
lcall
call
js
adc
jne
xor
cmp
filds
leave
notl
arpl
in
adc
rcr
cmc
insb
mov
inc
inc
dec
fucom
mov
cmpsb
push
pop
xor
or
jge
or
enter
or
sub
xchg
push
jno
mov
dec
mov
arpl
outsb
hlt
mov
stos
add
nopl
or
in
or
sarb
nop
push
fs
shlb
and
cs
cli
incl
sub
in
insb
xor
aad
push
xor
je
or
push
jle
adc
mov
mov
ja
push
mov
movsb
mov
ss
mov
xchg
shlb
jge
rclb
jle
mov
into
dec
mov
dec
in
cltd
sbb
std
xchg
add
mov
cli
pop
or
ss
lock
cmp
lds
add
jnp
or
fwait
xor
push
inc
stos
lods
jb
jo
xchg
nop
cmp
jae
mov
jb
es
repnz
inc
adc
mov
or
jae
xlat
xchg
jnp
dec
pop
bound
out
incb
cmp
mov
test
adcl
xchg
sarb
pop
jle
data16
or
adc
gs
mov
jnp
jl
mov
pushf
loop
dec
cmc
testl
and
or
or
and
mov
lods
adc
data16
adc
insb
fcompp
sub
je
push
popf
xchg
add
into
ljmp
rcrb
sbb
cmp
filds
xor
adc
loopne
mov
decb
push
std
cld
mov
adc
mov
cmpsl
lea
cmc
fwait
dec
pop
je
inc
movsb
fidivrs
inc
xlat
xchg
add
xchg
mov
loopne
dec
enter
les
add
cmc
or
ficomps
inc
ret
pop
iret
and
push
test
add
daa
and
mov
xchg
lods
push
mov
push
adc
pop
outsb
or
negl
jo
call
jne
fs
add
mov
aaa
dec
xchg
inc
loop
movsb
cmp
mov
inc
jmp
jno
pop
into
xor
cwtl
push
insl
sub
jle
sbb
vsubsd
jle
push
aam
rorl
lds
mov
jae
pop
scas
xlat
mov
aaa
or
mov
lods
pop
into
lcall
inc
arpl
cs
mov
jb
aad
cli
inc
sbb
insl
pusha
pop
fisubrl
in
add
hlt
nop
xor
add
ret
fstps
test
push
dec
test
lret
jnp
popa
lds
hlt
imul
pushf
jecxz
sub
dec
mov
mov
addl
mov
push
repz
imul
in
test
sbb
xor
mov
or
and
js
cmc
je
jg
pop
dec
test
dec
xor
push
mov
enter
adc
adc
cmp
popa
mov
cwtl
lahf
pushf
cmp
and
pop
sbb
scas
ljmp
fucomip
adc
cmp
sar
mov
jno
shl
test
fisttpl
mov
stos
lret
and
pop
aaa
aad
sub
xchg
dec
roll
sub
addr16
sarl
loope
or
xchg
xor
mov
aaa
test
iret
gs
fdiv
jmp
and
int
pop
mov
cmp
out
mov
dec
add
call
mov
sub
cmp
test
xlat
or
push
cmp
jae
jne
fcomp
mov
mov
mov
sahf
roll
jae
mov
mov
dec
add
or
ret
bnd
jge
jle
subl
xchg
sub
ss
ljmp
aas
xchg
pop
or
gs
and
in
sub
mov
add
add
repnz
mov
fidivrs
lds
adc
and
mov
push
pop
mov
ss
pop
stc
cmpsb
stc
pop
xchg
aad
hlt
adc
gs
inc
push
xchg
mov
or
rorb
push
test
pop
and
jmp
lock
sbbb
dec
and
and
cli
clc
pop
fwait
xor
or
and
aam
pop
mov
scas
sahf
stos
test
pop
mov
dec
jp
mov
jae
pusha
fdivrl
mov
repnz
repz
xor
movsb
jmp
inc
push
imul
jl
testl
sbb
cmpsl
adc
and
icebp
or
iret
sbb
dec
call
add
mov
pop
and
or
or
sub
sti
mov
nop
dec
sub
xchg
adc
and
movsl
jmp
cltd
add
lock
push
pop
mov
sbb
cli
loopne
adc
xchg
dec
sub
add
test
ss
aaa
xchg
dec
pop
incl
xchg
push
and
setl
inc
mov
es
lret
pop
imul
lcall
imul
clc
data16
shl
mov
les
xlat
mov
jmp
pop
scas
mov
and
inc
jb
push
mov
pop
push
filds
push
mov
lret
shrl
jecxz
inc
jecxz
sbb
jmp
aam
mov
cmpsb
test
jno
int3
lret
gs
xchg
je
inc
mov
and
cs
sub
ss
mov
js
fldenv
xchg
movsb
test
leave
or
aam
dec
lds
push
cmp
push
lret
aas
add
lahf
cli
lea
rcrl
gs
and
scas
out
mov
out
mov
lods
ret
bound
jnp
stc
inc
loopew,pt
cmpsb
xor
hlt
divb
ret
ffree
push
mov
adc
dec
shr
inc
or
mov
fidivrs
mov
int3
xchg
loop
into
fldt
lea
lods
add
pushf
sbb
cwtl
ds
mov
out
jecxz
inc
push
clc
jae
lahf
lods
addr16
pop
fdivrs
test
push
pushf
mov
xchg
add
ror
rcrl
inc
aad
adc
js
jg
les
pop
sarb
jecxz
jl
pop
cld
sub
lea
stc
loop
pop
adc
sbb
lret
ficompl
push
sarl
dec
xor
xchg
xchg
pop
movsb
inc
out
aaa
pop
lcall
sbb
sbb
jp
push
lea
or
jmp
lret
xor
fstpl
rorl
rcr
mov
push
push
sbb
xchg
int
ss
cmc
jecxz
adc
push
adc
cwtl
jecxz
jmp
jb
add
cmp
aam
push
mov
pop
stos
xor
mov
cs
pop
int
imul
pop
mov
cmpsb
sbb
mov
mov
mov
cmp
in
mov
mov
xor
adc
mov
or
jge
sbb
xor
aam
xor
mov
push
out
cmp
jo
cmp
fdivs
dec
or
xchg
rcr
mov
mul
mov
test
cmp
push
into
test
out
pop
mov
jge
push
inc
xchg
in
cmp
sbb
mov
lock
mov
sbb
je
dec
and
jle
jmp
fs
mov
add
or
jmp
pop
push
add
sub
pop
dec
insl
pop
leave
fcomp
enter
les
push
jmp
push
xor
sub
enter
xor
mov
lods
aaa
lods
mov
nop
fdivrl
outsb
call
inc
ljmp
andl
jae
push
into
imul
lock
rol
push
or
rorl
shrb
aaa
inc
mov
jl
andb
and
dec
les
shrb
pushf
pop
pop
fbstp
bound
or
mov
push
mov
adc
jo
clc
inc
or
hlt
push
mov
lea
push
sarb
push
cmpsl
gs
nop
loop
mul
mov
popa
lahf
popl
inc
sbb
and
imul
shlb
bnd
sbb
push
loope
xor
jp
lret
cmpsl
dec
cmpsb
dec
std
ficoml
push
inc
xor
push
stos
dec
jb
or
ret
movsb
les
call
mov
cmc
jmp
rorb
lret
and
data16
lea
hlt
cmpsb
jae
jb
mov
jb
jno
dec
mov
add
mov
in
je
mov
mov
popa
jno
sti
leave
lea
data16
xlat
lods
lret
sbb
loopne
xor
scas
das
iret
or
clc
sbb
mov
pop
mov
out
fmull
out
test
lcall
lods
jge
cmp
mov
push
loop
mov
addr16
outsl
ljmp
in
push
cmp
cmp
adc
jbe
clc
mov
sbb
push
sbb
cwtl
and
push
out
sub
das
pop
mov
iret
mov
inc
mov
cmc
push
js
insb
leave
cmpsl
repz
daa
mov
cmp
arpl
push
jge
inc
mov
out
or
mov
mov
push
cmpsb
dec
fwait
test
flds
mov
inc
xchg
pop
ds
xor
pop
adcb
fcompl
ljmp
jb
add
pop
push
mov
mov
cmp
sbb
inc
mov
outsl
lock
enter
sbb
addr16
cmpsl
dec
pop
add
lcall
mov
andl
addr16
add
dec
scas
repz
push
push
ja
mov
pop
cmpsb
and
outsl
or
dec
int
xor
mov
sub
sbb
mov
adc
add
xchg
ret
add
xchg
int3
xor
jne
add
jmp
sbb
out
mov
mov
sbb
jecxz,pn
test
mov
je
lahf
rolb
aam
mov
outsb
sti
pop
shll
ret
sub
cmpl
dec
jecxz
xor
jbe
jne
mov
mov
into
cltd
inc
pop
cli
fs
nop
adc
rcrb
dec
cmpsl
test
jmp
inc
sbb
jmp
pop
inc
and
inc
js
cmp
pop
js
and
cli
push
mov
fucomp
mov
adc
and
push
cmp
jae
clc
aas
sbb
jge
into
cwtl
cmp
and
dec
rcrb
mov
orb
es
popa
loope
and
imul
jle
daa
jo
jno
jnp
and
add
mov
inc
jb
jmp
rcrl
and
pop
dec
adc
dec
xchg
pusha
and
ljmp
xchg
and
test
fisubrl
mov
cmpsl
aam
mov
mov
and
scas
jno
push
loopne
push
pop
cli
pop
cmp
popa
inc
test
andl
lcall
mov
or
lods
jge
inc
test
fsubl
jmp
inc
fisttpll
or
mov
imul
push
in
out
fcoml
nop
or
ret
push
ja
aas
push
pop
add
clc
lret
aad
test
popf
mov
in
insb
push
pop
ds
inc
push
add
enter
cmp
loope
shrb
sbb
jge
cli
popa
insl
stos
aad
inc
add
in
fmuls
cld
stc
fcmovnbe
and
out
push
inc
mov
loope
outsl
fnstcw
inc
jl
cmp
and
mov
pop
in
incl
xchg
push
inc
nop
sahf
or
xchg
dec
or
add
lea
xor
mov
arpl
pushf
imul
push
movsb
mov
ret
and
mov
jge
inc
mov
pop
and
insl
cmpsl
pavgw
push
push
pop
xor
push
and
pusha
add
pop
mov
xchg
data16
loopne
mov
xor
pusha
scas
xor
push
stos
aad
nop
jnp
imul
ds
in
mov
mov
inc
lret
sbb
movsb
int3
popa
push
sbb
xor
add
stos
pop
dec
insb
in
and
testb
addr16
mov
xchg
cmp
xchg
ja
pop
lods
push
ljmp
push
xchg
add
aas
divb
js
sbb
test
pop
dec
cmp
adcb
inc
daa
mov
jae
fsts
mov
jne
sub
ret
adcl
cmc
mov
jae
mov
hlt
icebp
loop
pop
into
cs
insl
mov
ret
out
ss
sub
dec
xchg
mov
ret
sbb
imul
xor
sub
lock
xor
addr16
xchg
repnz
mov
add
inc
das
aad
repz
xchg
mov
push
movsb
sub
lods
adc
sub
hlt
dec
push
loopne
jl
jnp
jno
sub
dec
cld
mov
cmp
in
or
pop
imul
xchg
aas
adc
ja
jg
and
jg
loope
dec
jl
xchg
lds
lahf
inc
outsb
dec
and
cmc
fistpl
dec
push
cmc
sbb
out
aaa
push
mov
gs
or
push
inc
in
shll
insb
add
sub
xchg
inc
adcl
popf
lea
sub
pop
sbb
cmpsl
je
filds
push
mov
cmp
cmc
pop
insl
rolb
and
mov
lcall
mov
lret
and
cmp
jg
dec
mov
int
dec
inc
xchg
sbb
sbb
mov
jl
rclb
pop
and
jle
scas
adc
ret
test
mov
icebp
test
subl
inc
or
sub
inc
and
rcll
std
loope
inc
in
inc
mov
add
mov
jp
adc
jle
push
and
icebp
cld
or
mov
pop
mov
sahf
pop
pop
mov
mov
inc
xor
xor
ficoml
fs
sbb
xor
jecxz
repz
sbb
push
cltd
mov
cli
cmc
dec
sbb
icebp
push
jecxz
mov
loope
dec
mov
mov
xchg
cmpps
ds
insl
jmp
mulb
pop
mov
mov
push
inc
mov
cmp
test
outsl
aad
mov
push
ret
or
push
data16
and
imul
js
and
mov
sti
stos
push
ret
pop
pop
xor
pop
add
push
dec
mov
test
pushf
mov
fidivrl
cmp
inc
cli
shlb
mov
sbb
push
adc
pushf
xchg
jl
pushl
std
ds
add
movsb
pop
rcrb
in
out
orb
mov
push
repnz
data16
or
cmp
inc
xor
dec
cli
pop
pop
or
cli
pop
or
popf
fisttpll
push
sub
movsb
std
fwait
loopne
arpl
call
adc
cltd
sub
test
mov
movb
addr16
mov
adc
int
shll
pop
or
loopne
sub
or
jle
dec
or
leave
mov
mov
loopne
xchg
push
mov
inc
loopne
idivb
mov
pop
lods
add
movsb
mov
or
clc
sbb
pushf
fadds
aam
jmp
or
loope
sbb
sahf
mov
mov
dec
fisubrl
mov
mov
mov
push
imul
inc
add
std
jecxz
nop
xchg
shll
pop
mov
jb
xchg
in
push
mov
clc
scas
push
push
jge
jmp
dec
xchg
stc
enter
cmp
inc
test
mov
sub
inc
dec
adc
inc
cmp
fnsave
xchg
xchg
xchg
dec
sbb
orps
and
jecxz
dec
out
pop
mov
js
jae
mov
mov
clc
ljmp
push
fisttpll
in
adc
lds
inc
sbb
or
mov
cmp
stos
stc
std
notl
pop
or
sub
xor
ret
clc
outsl
out
pop
and
shl
pop
movsb
andb
int
sbbl
shlb
xor
loope
repnz
adc
pop
cmp
add
outsl
outsl
arpl
adc
ds
mov
fildl
shll
lahf
stos
mov
mov
shll
push
cltd
arpl
xor
iret
fistpl
dec
lods
cld
loope
sub
cs
stc
insb
fstpt
or
pusha
and
sub
stc
ja
add
or
dec
insl
inc
fcomps
movsb
movsb
add
sbb
and
aas
outsb
icebp
dec
lds
data16
imul
outsl
mov
lret
data16
sbb
xchg
stos
jne
aaa
jp
addr16
in
mov
jb
cld
icebp
mov
rcll
or
sub
test
aad
cwtl
mov
cmp
or
push
aam
dec
mov
maxps
jo
mov
sbb
cmpb
hlt
push
iret
cmp
add
scas
inc
sbb
push
ds
or
fists
cmp
inc
out
dec
mov
add
in
add
shufps
lods
sti
mov
arpl
inc
jle
loope
cs
mov
cmp
mov
or
repnz
mov
inc
pop
dec
mov
shl
mov
push
xchg
bound
lods
mov
cmp
xlat
imul
lcall
pop
jl
mov
cmp
loopne
xchg
pop
pop
in
or
in
cld
fistl
call
out
push
negb
push
xor
lods
add
sub
pop
add
imul
push
xchg
and
mov
icebp
in
dec
cld
xchg
cmpsb
and
or
xchg
add
or
rcl
cs
cmc
push
mov
xlat
adc
out
int
add
ds
iret
sub
mov
cmc
sbb
jne
push
dec
cmp
cmp
mov
sbb
or
xchg
sub
cs
adc
push
lret
popf
loop
add
hlt
push
lods
mov
lret
int3
mov
in
into
xor
jle
jb
insb
sbb
jb
add
cld
add
les
jl
mov
pop
cs
shlb
push
aas
xchg
ja
outsb
jo
mov
jl
insb
push
push
mov
cli
pop
shrl
test
pusha
lcall
clc
pop
ljmp
addb
outsb
sar
arpl
fdiv
push
jecxz
xchg
js
xlat
call
addl
jmp
push
mov
imul
jne
mov
sbb
fwait
push
or
mov
pusha
and
lods
mov
pop
push
cmc
xchg
popf
stos
push
mov
cmpsl
fnstsw
mov
pop
std
dec
sbb
jmp
cmp
sub
aad
adcl
mov
mov
pop
pusha
sub
cmp
insb
ret
pop
adc
dec
fs
xchg
scas
or
decl
pusha
mov
cs
dec
xor
cmp
dec
jns
test
sbb
pop
insl
pop
int
jne
mov
test
push
jb
into
test
shrb
pop
cmp
xchg
das
std
insl
cmpsl
mov
push
repnz
jp
mov
xor
pop
mov
cmp
or
in
sar
fwait
int3
int3
pushf
dec
rolb
aaa
xchg
mov
inc
mov
pusha
pop
sbb
mov
stos
das
cmp
lea
mov
inc
pop
push
push
xchg
sbb
jecxz
push
cmp
or
mov
cli
xlat
loope
and
xchg
inc
out
pop
mov
mov
notl
repz
cmc
add
inc
cmp
icebp
cmp
sbb
test
push
or
hlt
inc
adc
sub
xchg
decb
jmp
xchg
aas
cld
dec
std
mov
cli
pminub
jo
jbe
ja
mov
and
xor
jno
xlat
add
popa
lods
cmp
push
xlat
jmp
xchg
mov
lods
aad
lods
test
repnz
sbb
in
fists
mov
into
mov
xchg
mov
popf
xor
cmpsb
pop
jl
movb
aaa
lds
pop
pop
add
xchg
sbb
push
inc
shl
fucomi
cmp
out
dec
and
fsubl
adc
adc
pop
inc
jmp
pop
fbld
push
test
xchg
movb
jnp
popf
push
imul
pop
and
pusha
test
inc
fcomps
popa
jl
rcll
xlat
xlat
cmpsl
inc
sbbb
jg
sub
je
xor
sti
pop
adc
push
sarb
mov
jp
into
in
add
aad
int
in
mov
ss
and
mov
loop
dec
pop
loope
mov
stos
fistpll
cmp
adc
mov
outsl
cmp
sub
mov
cli
mov
xor
std
xor
call
insl
gs
push
in
pop
or
xchg
andl
in
inc
lock
jecxz
cld
fstl
pop
mov
mov
push
sub
into
in
mov
hlt
jae
sub
mov
sbb
pop
push
pop
jo
sub
push
inc
mov
mov
mov
sub
leave
clc
andnps
and
and
arpl
in
imul
add
inc
dec
push
mov
add
mov
or
pushf
stos
pop
sti
in
pop
mov
sbb
out
jmp
outsl
movsb
or
inc
test
mov
in
mov
stos
loope
cmp
push
lds
es
inc
sarl
mov
lock
repz
shl
ja
ja
mov
adc
fidivs
fistpll
andb
movsl
fwait
call
add
mov
mov
inc
dec
sbb
shll
dec
mov
jnp
jle
mov
cmp
and
add
scas
push
aad
or
mov
pop
popf
cmp
xor
sbb
adc
or
idivl
in
pop
push
mov
fistl
loopne
imul
mov
jecxz
rep
xchg
mov
lret
fldcw
pop
sbb
dec
popf
xchg
ret
dec
mov
and
js
jns
daa
mov
shll
xchg
mov
or
sub
adc
cmp
xor
lret
cmp
movsb
ljmp
xor
dec
dec
daa
dec
and
jle
lahf
adc
add
mov
xchg
gs
inc
xlat
jo
push
or
lahf
leave
cltd
lahf
inc
xlat
imul
pop
cltd
test
jle
aaa
lock
lock
data16
cmp
hlt
xchg
jno
lock
imul
ss
outsl
fisttpl
pop
aam
jge
fwait
mov
jl
ja
js
push
lret
in
out
xchg
mov
cmpsl
xchg
jo
pop
xor
xchg
subl
mov
pop
sub
jo
push
jmp
test
shrl
fwait
sbb
sub
ljmp
push
fwait
dec
fdivrs
cmpsl
xchg
test
pop
call
xlat
xchg
pop
lcall
jp
jle
mov
mov
cmp
insl
movsb
add
notb
sub
mov
and
inc
push
jno
loop
incb
imul
loopne
in
mov
jae
int
or
push
pop
loopne
push
inc
mov
mov
mov
in
fmuls
dec
mov
sbb
sub
addl
xchg
jnp
es
jg
inc
in
cmp
push
mov
lock
push
jo
lods
xor
mov
adc
imulb
nop
sub
pop
cmp
add
inc
sub
test
cmc
daa
jge
jne
fisttpll
jle
repz
fisubl
outsb
and
push
fldl2e
add
cwtl
sbb
repnz
pop
push
and
mov
idivb
jns
arpl
ror
dec
adc
loop
stos
mov
lcall
aas
data16
popf
clc
mov
mov
mov
xor
ret
repz
imul
shll
cld
daa
adc
sbb
fisttpl
ret
aad
mov
into
outsb
adc
mov
xchg
inc
and
pushf
ljmp
lods
adc
lahf
xchg
loopne
xlat
in
lock
js
dec
mov
jmp
sbb
fwait
addr16
decl
dec
ret
fdivr
cli
pop
adc
fdivr
mov
or
dec
dec
stos
stc
lock
mov
cltd
cmpsl
sub
stos
xor
ljmp
jns
add
dec
enter
loopne
js
add
add
or
inc
loopew
adc
int
sbbb
in
mov
sub
sarl
xchg
fidivs
xor
arpl
fildll
and
adc
and
movsl
or
sub
loope
lret
stos
cmp
negb
adc
hlt
jecxz
sbb
ja
sti
fistl
inc
fucomip
aad
push
xchg
jmp
sti
mov
cwtl
sbb
cmova
adc
pusha
xor
cmc
lcall
xor
out
xchg
cmp
ljmp
ss
pop
insb
in
sub
push
push
xorl
pop
dec
add
cwtl
pop
jecxz
std
adc
jbe
or
pop
xchg
arpl
scas
add
ret
pop
sub
mov
and
sbb
adc
jge
jmp
movsl
inc
aam
jo
sbb
into
inc
or
lea
xor
popa
jo
imul
cmp
add
int
insb
jle
fisubs
adc
insb
cli
lret
hlt
dec
jp
xor
and
push
add
jnp
ret
mov
jg
daa
nop
sbb
cmc
mov
pop
sbb
mov
mov
fisttps
pop
or
cmp
push
jecxz
fcoms
push
insb
jo
fcoms
jle
lret
pop
insl
call
jns
pusha
fs
into
lds
lods
inc
mov
pop
jne
daa
pop
inc
xchg
sub
dec
sub
stos
and
and
mov
mov
mov
mov
push
sub
stos
jns
pop
fiadds
mov
sbb
cmpsl
iret
push
fcoml
inc
loope
rclb
and
mov
cmp
push
fcmove
sti
lods
es
sbb
loope
ja
lock
sbb
inc
adc
adc
jp
dec
aam
and
add
mov
jl
add
insl
pop
inc
dec
imul
shll
clc
mov
jmp
cmp
movsl
dec
sbb
xchg
dec
scas
outsb
cmp
sbb
pop
popf
and
ds
mov
or
sub
mov
shl
dec
lds
dec
mov
cmc
mov
mov
sbb
push
xor
cmp
adc
lahf
jno
lahf
jge
adc
xchg
setbe
in
fdiv
movsl
ret
clc
stos
pop
push
out
or
cmp
xchg
xchg
mov
clc
xchg
stc
push
jns
addr16
lret
icebp
int
mov
frstor
addl
xchg
scas
push
inc
and
bswap
int3
fs
sbb
sahf
rclb
cmp
ficoml
inc
arpl
cmp
xchg
or
inc
dec
popa
inc
jmp
pop
je
sub
pop
pop
mov
pop
testb
jb
mov
lds
stos
daa
lds
int3
movsb
inc
sbb
and
mov
les
fsubp
sahf
jge
xchg
bound
push
add
inc
push
push
iret
leave
add
and
test
dec
sub
subb
add
ds
inc
in
jns
insl
xor
out
decb
bound
mov
xchg
xchg
rcrb
lock
movsl
inc
jl
cmpsl
nop
stc
hlt
ja
sbb
sub
dec
mov
into
jl
xor
xlat
int
sub
or
data16
std
xor
inc
dec
sbb
lret
fsubs
xor
insb
test
jmp
in
subb
add
dec
add
lcall
pushl
mov
sbb
cmp
inc
add
outsl
nop
cmp
aam
stos
xrelease
out
inc
and
mov
jle
jge
mov
or
fdivp
cmp
test
decl
push
popf
mov
stos
xchg
data16
int3
jmp
daa
jg
fs
or
sub
popf
test
outsb
daa
mov
sub
rcrl
adc
mov
mov
dec
imul
enter
jbe
andb
push
or
movsl
adc
xor
popa
sbb
mov
dec
pop
inc
inc
or
mov
mov
mov
dec
inc
jl
je
loop
jmp
sti
rcrl
push
sahf
int
subb
inc
das
imul
nop
cmp
push
fcmovne
fcoms
sub
or
les
inc
or
shlb
fcomps
out
or
cli
ss
xor
in
fildl
inc
push
sub
add
outsb
sub
mov
ds
mov
arpl
in
fnstcw
pop
sbbb
cmp
mov
insb
dec
xor
test
lcall
mov
sbbl
jmp
add
shlb
adc
mov
mov
nop
xor
ss
mov
adc
dec
inc
inc
rol
pop
ja
andb
adcl
addr16
rcrl
movsl
lret
movsb
shlb
mov
lock
mov
xorb
sti
repnz
daa
adc
lahf
or
pop
lahf
imul
fldcw
aas
dec
fistpll
psllw
div
insl
mov
lds
loop
inc
dec
movsb
cli
and
mov
pop
lds
xor
add
cmp
outsb
sub
cs
fwait
in
adc
push
add
lcall
add
push
lret
rolb
int3
push
mov
loop
and
jecxz
pusha
xlat
lahf
xchg
scas
lahf
andb
roll
and
sbb
push
xchg
ret
daa
std
and
fldenv
sbb
shll
mov
xchg
std
dec
xchg
xor
sbb
loope
je
scas
stos
add
hlt
dec
add
icebp
sub
mov
popa
push
jno
sti
xor
js
mov
sub
shlb
xchg
in
loope
mov
out
insb
adc
nop
add
mov
pop
insb
jecxz
test
daa
jno
lcall
test
xor
push
das
dec
rclb
mov
sub
je
rcrb
push
fmull
adc
jne
insb
arpl
jo
testl
sub
sbb
xchg
test
adc
fldt
inc
lahf
mov
stos
stc
inc
rcl
movl
test
lds
shl
test
push
adc
or
repz
f2xm1
xor
add
sub
ljmp
adcb
sub
mov
mov
repnz
mov
lods
es
lahf
add
xchg
pop
mov
inc
mov
clc
ss
add
add
sarb
outsb
dec
jp
mov
iret
shlb
aaa
push
repz
fldenv
xor
sub
push
cwtl
ja
dec
je
jmp
push
popf
or
repz
or
cmp
icebp
sti
jg
jg
cmp
ja
push
jle
clc
dec
mov
adc
dec
push
or
mov
mov
cmpsb
xor
inc
shll
aas
sbb
xor
popa
inc
cwtl
imul
mov
adc
adc
imul
jg
jp
push
push
gs
inc
cmp
add
daa
jb
xor
in
push
sbb
lcall
push
push
out
pushf
mov
xor
xor
mov
xchg
mov
loopne
push
lret
bound
clc
fimull
mov
pushf
aaa
enter
movsl
rorl
inc
mov
cli
imulb
push
cmp
stc
or
sub
xchg
scas
dec
jnp
lea
mov
inc
xchg
aaa
sbb
push
loopne
pop
int
popf
cs
xchg
inc
test
cmpb
and
xchg
pop
mov
loope
dec
pop
pop
lods
addr16
mov
xchg
xor
pop
cltd
xchg
add
mov
mov
adc
jno
add
dec
lret
dec
shlb
das
pop
jo
aad
add
notrack
cmp
das
stos
xchg
sti
imulb
cmp
sbb
cmp
xor
sbb
mov
xchg
and
add
out
jmp
fwait
sub
cmpsb
lods
dec
out
and
insb
in
mov
push
lods
pop
scas
aaa
pop
dec
les
test
mov
cltd
cmp
jne
jge
sbb
mov
dec
or
mov
pop
xchg
dec
add
dec
pop
aas
push
mov
mov
es
inc
mov
cmpsb
jbe
in
mov
js
jns
mov
jne
dec
jb
shrl
xor
dec
push
adc
jb
adc
lods
jb
or
stos
insl
mov
imul
sar
add
jne
mov
cmc
cwtl
cmpsb
lret
dec
push
mov
push
cmpsl
adcb
push
add
xlat
xchg
les
pop
sub
mov
jmp
mov
mov
shlb
and
pushf
dec
fdecstp
shr
mov
mov
incl
addr16
and
arpl
loopne
sub
jno
mov
fcmovnb
pusha
inc
imul
mov
jb
ret
dec
sub
sbb
jbe
dec
insb
sbb
mov
cmpsb
in
or
fdivrl
divb
adc
xchg
xchg
sub
test
enter
mov
ret
std
jbe
lret
push
jecxz
sbb
js
stc
hlt
sbb
lahf
sub
xor
iret
aas
loop
mov
and
movsb
icebp
xor
jbe
or
jns
dec
sbb
lret
lret
leave
mov
mov
inc
push
jb
aam
mov
scas
xchg
mov
fidivs
cmp
xorl
imul
pop
xor
adc
jmp
add
cmc
mov
and
imulb
push
or
rol
xchg
lods
popa
ljmp
cmp
enter
mov
lret
outsb
loopne
out
dec
xchg
arpl
cmc
ficoms
dec
dec
pop
push
pop
push
scas
negl
dec
sbb
insb
das
loopne
pushf
test
xor
sbb
aad
lea
orb
mov
mov
scas
push
fiadds
daa
mov
xchg
sbbl
pop
lret
out
xor
iret
movsb
push
cwtl
std
or
dec
pusha
mov
mov
jmp
xor
aad
out
mov
mov
push
lret
mov
sbb
jle
shrl
or
loop
jb
xor
lods
sbb
test
outsl
dec
and
repnz
inc
adc
idiv
inc
xchg
jb
shll
adc
jmp
add
sub
out
mov
cs
lret
or
cld
mov
sbb
movsl
cmp
mov
jno
xor
pop
mov
push
sbb
dec
iret
push
cmpsb
into
lcall
mov
call
test
add
mov
hlt
push
test
sub
push
dec
pop
add
mov
jo
outsl
mov
mov
or
jecxz
cmc
js
pushf
dec
pop
jne
and
and
adc
aam
insb
mov
mov
jp
add
lds
dec
cmp
push
in
push
test
jae
or
push
cltd
jl
xchg
loopw
hlt
mov
insl
mov
lret
pop
popf
xchg
lods
imul
sbb
jne
scas
sub
inc
ja
jg
leave
jmp
pop
test
push
push
push
aaa
dec
loope
push
addl
insl
sarb
insb
cmp
cli
sbb
mov
or
sbb
mov
push
fwait
jle
enter
pop
loope
sub
lods
clc
pop
testl
notl
push
scas
jl
xchg
and
push
mov
cltd
sbb
adc
or
shlb
shr
fldl
lea
out
dec
adc
inc
pushf
rorb
push
cmp
into
into
dec
inc
lahf
bound
mov
int3
iretw
fmull
lods
adc
addr16
fcmovnb
test
jmp
movsl
hlt
lds
fistpll
outsl
cmp
mov
leave
int
jo
movsb
test
cld
jle
sub
aam
inc
insl
adc
push
imul
out
fiaddl
insb
lods
xor
mov
dec
and
and
inc
sub
pop
cmp
sbb
addl
hlt
sbb
leave
add
ror
addl
xor
add
loop
add
sub
scas
xchg
test
fldl2e
jo
outsb
xchg
dec
popf
inc
lret
clc
xor
scas
xor
mov
lods
mov
push
jg
cmp
sub
pop
outsb
pop
cmp
cmp
repnz
xchg
orb
mov
lea
mov
js
or
sbb
xor
jge
pop
scas
lods
scas
inc
sub
push
fildl
out
mov
mov
push
outsb
fs
pop
cmpsb
pop
sbb
dec
lcall
sbb
jne
icebp
dec
xor
insl
and
cmpsb
jge
lret
fs
sub
push
jo
xor
push
jle
add
cmpsb
jmp
adc
in
scas
aam
rorb
aad
lcall
out
jne
je
sbb
popf
jne
cmp
inc
inc
repz
data16
mov
sarb
repnz
fisttps
repz
aam
sub
or
mov
addl
jae
cltd
push
jo
cmp
and
xchg
pop
insb
sbb
outsb
xlat
lahf
loop
sbb
jp
shlb
sub
sub
mov
sarl
inc
scas
push
adc
add
outsb
fiaddl
push
nop
adc
in
sub
jbe
inc
sub
adc
adc
lcall
scas
mov
lods
pusha
repz
stc
mov
dec
jmp
test
sbb
fucomip
mov
push
mov
pop
adc
mov
push
xor
push
mov
icebp
inc
mov
test
dec
lret
in
test
or
test
and
sub
cmp
test
fmuls
mov
cli
inc
cmp
adc
daa
ret
outsl
orb
mov
mov
cmpsw
cmp
nop
and
stos
les
xchg
push
popl
adc
push
mov
loop
sub
mov
jb
push
loop
mov
sbbb
xchg
in
or
mov
lret
popa
aaa
pop
jnp
dec
pusha
sbb
jno
pop
repz
add
mov
ja
push
cs
cmpsl
mov
out
adc
sbb
sub
cmpsb
repz
sbb
nop
mov
or
and
sbb
inc
out
repz
mov
out
ja
test
mov
mov
in
push
jp
add
sbb
loope
or
jge
push
mov
pop
or
push
popf
jge
iret
sbbb
and
roll
jno
stos
inc
and
ljmp
incl
cmp
ljmp
imul
mov
mov
xchg
scas
sub
xlat
aad
movsl
jb
add
imul
test
sbb
test
in
sub
pusha
setg
pop
adc
push
sbb
sub
into
js
jns
pop
aad
test
mov
cmpsb
fildl
jno
in
mov
or
sub
ljmp
clc
push
pusha
inc
and
mov
xor
sbb
adc
scas
xorb
mov
in
bound
push
mov
mov
jle
call
dec
add
xlat
lret
pusha
push
cmp
dec
mov
jae
add
lret
jge
jp
xchg
mov
inc
fnsave
inc
rcr
inc
push
and
push
xchg
adc
lds
lret
ret
xor
les
mov
pop
fs
push
push
or
imull
dec
aad
add
sbb
nop
lods
jmp
test
jmp
ljmp
je
loopne
dec
pop
pop
and
and
outsb
fbstp
mov
xchg
push
test
dec
popf
frstor
addr16
jnp
ds
repz
data16
inc
pop
or
ja
adc
daa
fstpt
mov
lret
mov
dec
xchg
pop
in
or
push
push
aas
adc
call
xchg
cmpsb
sti
in
clc
out
mov
and
mov
inc
pop
test
sbb
ret
mov
push
pop
stc
lock
push
mov
mov
mov
clc
addr16
push
pop
dec
int3
int
mov
cli
in
sub
sahf
push
xor
push
push
rclb
xor
sbb
fwait
loopne
pop
popf
inc
dec
sbb
dec
clc
add
and
inc
xor
xor
adc
out
jne
icebp
pop
add
dec
sti
incl
jg
leave
or
cmc
ret
mov
push
adc
and
incl
ror
scas
inc
dec
iret
mov
fidivrs
fxch
cld
imul
inc
das
add
mov
fdivl
mov
popa
sbb
aad
js
mov
insb
enter
cmp
mov
xchg
inc
sti
adc
mov
push
aas
movsb
ficompl
jo
sarl
xor
fisubl
enter
cmp
xchg
int3
js
in
loopne
lea
push
out
add
pop
sarl
insl
in
pop
mov
pop
cltd
sbb
hlt
add
repnz
push
dec
mov
pop
lret
sub
mov
insl
loopne
sub
dec
popa
loop
jo
xchg
mov
je
andl
mov
stos
fmuls
in
sbb
stc
mov
xchg
ljmp
cmc
out
mov
popa
lods
hlt
lret
or
adc
lods
xchg
xor
mov
loop
popf
pop
sahf
xor
ja
popa
mov
in
mov
jb
in
and
loopew
enter
inc
dec
mov
mov
push
cmp
aaa
lea
ds
adc
sti
int3
repnz
rclb
xchg
xchg
pop
in
aam
shrl
mov
enter
jns
cltd
popa
sbb
not
jns
xchg
ss
pop
rol
push
and
dec
xchg
cmp
mov
jp
jno
into
cmp
mov
add
push
loopne
je
scas
xchg
and
jle
push
lea
fldt
jno
in
mov
dec
push
incl
adc
xchg
adc
iret
jo
cmp
ljmp
cld
test
loopne
jl
mov
dec
push
cmp
mov
or
or
jae
stos
aam
int
xchg
dec
or
pop
sti
sbb
mov
inc
jp
sub
repnz
idiv
jns
jecxz
leave
shll
mov
xchg
add
jecxz
or
jg
xor
fisttps
lahf
or
inc
mov
or
loop
sbb
lret
pop
cmpl
mov
cmp
xchg
mov
std
mov
pushl
test
repnz
sbb
add
sarl
and
pop
push
dec
daa
int3
adc
mov
mov
es
lds
dec
and
rol
das
mov
repnz
imul
jns
cmpsb
shll
stos
sbb
lret
fwait
popa
mov
out
scas
enter
xchg
scas
out
xor
bts
xchg
mov
test
jg
test
out
xchg
add
sub
xchg
js
pop
or
out
dec
dec
insl
mov
or
out
fisubl
sahf
add
cmp
pop
push
push
pusha
ret
add
or
dec
mov
imull
popa
scas
cmp
into
dec
test
clc
or
pop
add
xorb
mov
andl
sub
ror
jae
shrl
push
mov
movsl
aas
xorb
push
cli
ficomps
loopne
and
mov
mov
decb
jb
push
addr16
loope
sub
ljmp
pop
adc
xor
lods
sbb
fs
sbb
clc
mov
clc
lcall
sub
ret
mov
mov
mov
lahf
push
stos
sbb
jo
je
jne
add
dec
mov
adc
sub
or
or
outsl
sbb
ret
mov
mov
xor
leave
xchg
scas
jnp
pop
sbb
and
fnop
sub
pop
xchg
and
pop
and
pop
cld
add
mov
push
mov
rep
adc
jg
in
test
aam
repnz
mov
sub
test
lock
fildl
int3
imul
xor
ljmp
sub
clc
test
loope
push
dec
pop
adc
push
test
jo
ucomiss
or
and
js
adc
jmp
xorb
pop
mov
pop
mov
sub
scas
push
dec
jle
jnp
jecxz
mov
nop
jbe
cmp
mov
daa
movsl
mov
testl
loop
jle
sub
xchg
lcall
xchg
mov
pop
mov
or
bound
fwait
xor
enter
mov
punpcklwd
cltd
int
lcall
test
fcomi
or
cmpsb
in
into
push
mov
adc
mov
test
loope
inc
mov
das
icebp
shlb
popa
ljmp
pop
xchg
inc
fdivl
out
insb
jbe
pop
psubusb
and
and
test
lret
scas
jbe
mov
cmpsb
sub
cltd
add
xor
cltd
xchg
xorb
test
inc
xchg
xchg
fwait
jg
int
add
inc
push
mov
addr16
loope
or
std
fbstp
cmp
push
sbb
stos
gs
das
sbbb
addr16
mov
movsl
movsl
add
popf
sbb
jb
jo
and
icebp
inc
mov
jo
aaa
cmc
out
ret
and
cmpl
shrl
add
repnz
fucomip
hlt
xchg
xchg
dec
iret
loope
cmpl
inc
mov
adc
xchg
pop
clc
xlat
mov
ss
push
push
mov
mov
js
dec
scas
sub
push
xor
jecxz
jmp
jne,pt
mov
jecxz
inc
pop
cmpsl
lret
mov
sbb
sahf
leave
and
data16
jb
add
add
mov
stc
push
mov
jmp
addr16
mov
inc
je
fwait
imul
pop
or
jno
pop
sub
stos
loop
sbb
mov
or
addr16
lock
xchg
or
xor
jns
mov
dec
out
xchg
push
icebp
lods
mov
repnz
adc
add
mov
mov
imulb
mov
sbb
stos
mov
leave
test
fsubs
mov
push
cmp
sahf
or
ret
mov
pop
sub
cwtl
and
jg
jle
jecxz
pop
or
jg
shrb
out
outsl
int
cmp
pop
mov
dec
mov
adc
push
in
cmc
mov
jmp
add
nop
jp
or
std
shll
push
fstp
push
jbe
mov
jo
xchg
rcl
cmpb
jo
xchg
and
dec
cmpsl
test
shll
mov
mov
xchg
sub
and
xchg
push
test
subl
xchg
jae
mov
push
push
in
pop
sbb
pop
fwait
push
insb
mov
mov
pop
push
sub
jg
sarl
divb
sub
inc
rcrb
daa
nop
inc
aaa
scas
lahf
cmp
ror
pop
iret
dec
aaa
mov
sbb
mov
xchg
inc
imulb
lahf
out
fisttpl
popa
jge
int3
filds
and
imul
adc
lds
ret
jno
mov
arpl
cmp
les
sub
je
lods
jmp
dec
pop
lret
aas
aad
mov
pop
adc
mov
or
jg
mov
fwait
inc
or
pop
push
ret
sub
insl
clc
aad
bound
mov
int
or
mov
es
jl
and
movsb
dec
add
sub
das
fadds
and
push
and
pop
in
inc
jp
adc
dec
inc
inc
les
call
xor
cmpsl
inc
push
cltd
inc
mov
jecxz
sahf
xchg
test
jne
notl
cmp
cltd
hlt
sub
aas
push
lahf
mov
fmull
xchg
mov
mov
sbb
push
fbstp
rclb
pop
mov
jle
jg
out
cmp
testb
inc
aad
mov
mov
add
aas
cmp
sti
pop
jns
lcall
xor
rcr
or
fs
cmp
in
out
pop
into
fldt
cmp
push
xor
mov
cld
cmp
xor
xchg
dec
and
std
scas
test
addr16
fwait
push
into
ja
popf
jle
nop
xchg
les
out
rol
jmp
and
ret
loopne
sub
mov
arpl
sbb
mov
pop
add
sub
adcb
sub
and
ljmp
arpl
cld
mov
jge
fdivs
out
daa
lret
js
cmp
or
and
ds
sbb
push
ja
faddl
push
ret
rolb
repnz
lock
mov
pop
loope
sbbl
mov
or
gs
adc
mov
jbe
hlt
int3
mov
insb
nop
loop,pt
mov
mov
xchg
mov
inc
lahf
xchg
push
xlat
cs
arpl
pop
push
sub
mov
sbb
jae
aad
cmp
enter
push
rcrb
sbb
xchg
or
orb
lret
mov
dec
and
repnz
mov
aas
in
mov
scas
fwait
push
lds
mov
sbb
sbb
mov
dec
fwait
jae
das
jae
mov
dec
lret
fstpl
pushf
call
imul
xchg
popa
add
js
daa
sbb
mov
cmp
movsl
nop
mov
insl
jbe
sbb
or
in
aad
push
add
stos
cmpsl
pop
test
mov
mov
je
adc
sbb
lods
cltd
push
pop
push
lock
dec
fdiv
std
jmp
adc
dec
jbe
cli
push
push
fdivr
inc
in
out
xchg
add
jmp
scas
enter
push
jp
int3
xlat
jecxz
aad
bound
shl
sub
mov
mov
loope
dec
fldenv
mov
pmuludq
inc
leave
lods
insb
lods
gs
aas
fucom
sbb
in
jnp
sahf
jp
hlt
addps
add
out
sub
aad
lea
ror
mov
xor
ds
or
test
clc
add
insb
inc
jmp
popa
pop
jbe
push
out
push
dec
mov
xor
out
and
stc
mov
leave
dec
outsb
pop
ss
lods
ret
sahf
fidivs
fs
test
std
pusha
stos
sbb
add
jle
out
fs
xor
or
cwtl
pop
push
or
stc
fisubl
std
jb
imul
dec
insb
add
mov
push
xchg
ljmp
add
sub
in
pop
lods
mov
clc
scas
addl
xchg
push
call
xchg
mov
mov
loopne
iret
dec
push
mov
aad
outsb
push
icebp
cmp
movl
add
push
sahf
fldz
push
or
jo
jbe
adc
mov
mov
jg
push
call
pop
sub
or
cmpl
xchg
push
movsb
rorb
arpl
jbe
sti
addr16
sbb
data16
adc
shrb
sbb
jne
push
imull
mov
push
push
push
sub
add
popa
dec
leave
lods
push
call
sub
loopne
cmpsb
cmpsb
cs
aas
sti
or
xlat
mov
push
cmovg
out
or
mov
push
in
xor
iret
jg
in
ds
mov
faddl
xchg
jo
js
sub
sti
nop
xor
push
and
mov
sbb
jns
fwait
mov
mov
das
and
xor
cmp
ja
jl
sub
outsb
sbb
js
pusha
jp
arpl
pop
and
les
cmp
mov
mov
dec
scas
adc
lock
adc
fucom
aad
cmp
fs
cmp
jo
pop
sbb
xchg
out
pushf
push
add
xchg
adc
lea
add
dec
es
push
mov
stc
pop
int3
cmp
shl
cmp
lods
fisttpl
and
inc
cltd
into
xlat
outsb
adc
mov
idivl
push
aaa
cli
dec
xor
nop
imul
push
mov
mov
imul
xchg
mov
jb
sub
push
xchg
xor
jmp
mov
xlat
push
andl
adc
jo
sub
xor
xchg
push
sub
sbb
cld
ret
jb
lds
cmpb
loop
pop
jmp
icebp
scas
jbe
dec
jmp
push
mov
jmp
mov
out
sbb
sahf
fwait
xor
xchg
mov
xchg
sbb
jbe
lahf
cmpsb
rclb
push
movsb
movsb
sub
mov
jp
lcall
xlat
imul
dec
xor
mov
inc
mov
sbb
push
sub
add
inc
jns
popf
xchg
sub
xchg
adc
push
or
jge
fbld
mov
jp
dec
dec
xor
mov
test
cmp
pop
jg
sub
shll
dec
mov
scas
sbb
adc
addr16
mov
fimull
jno
mov
xor
std
arpl
test
mov
movsl
mov
xchg
and
mov
div
adc
jbe
in
shlb
lock
cmpl
cmp
sahf
fcomip
test
decb
xlat
mov
ffreep
push
pop
sbb
mov
cmp
dec
hlt
out
fsts
dec
sbb
add
das
mov
cmp
xchg
mov
xor
dec
xchg
pusha
add
dec
jo
cmp
test
int
jnp
lds
test
cmp
insb
inc
pusha
fistl
iret
xchg
sub
bound
fidivrl
aad
jecxz
daa
sub
mov
jno
xchg
mov
jle
orl
jmp
cmpsb
xchg
jb
dec
ds
cmpsl
imul
mov
mov
test
xor
pusha
addr16
add
test
xchg
add
jmp
std
inc
sbbb
in
enter
inc
xor
mov
out
test
std
adc
lods
test
fwait
xchg
je
xorl
mov
enter
mov
pop
int
jo
cmp
test
imul
stos
cwtl
ret
out
or
push
lcall
dec
or
sbb
nop
mov
mov
mov
mov
sub
insl
repz
in
sarl
push
test
sbb
ficompl
push
stos
mov
and
jae
out
mov
mov
pop
push
dec
shl
xlat
cmp
frstor
lock
mov
xchg
mov
sub
movsb
out
shll
imul
fs
mov
mov
add
test
ja
ret
test
mov
mov
outsb
in
jb
ss
test
sbb
pop
aam
cmp
fwait
cmp
push
mov
mov
mov
xorl
int3
inc
cmp
sahf
dec
dec
inc
adc
sbb
cmp
inc
dec
inc
mov
loop
cmp
int
cli
pushf
xchg
ret
jcxz
dec
inc
mov
mov
xchg
addr16
and
rcr
int
xor
jno
adc
sbb
imul
xchg
push
pop
icebp
mov
fildll
icebp
or
mov
test
mov
rcr
cli
xchg
ljmp
ret
mov
mov
fisttpll
sub
repnz
test
add
lret
pop
hlt
and
sub
push
jo
jecxz
insb
call
aaa
out
into
cs
pop
mov
mov
mov
sub
mov
jmp
jno
inc
mov
cmpsl
mov
xchg
cmp
test
adc
jge
lahf
popa
adc
cltd
mov
mov
lock
ljmp
cltd
pusha
daa
sarl
notb
or
adc
push
xlat
and
jmp
into
inc
test
lret
lret
mov
inc
lcall
mov
mov
in
dec
rcr
pop
test
sbb
jo
fisttpl
cmp
mov
pusha
fdivl
add
cmp
outsb
fs
mov
bound
xchg
pop
cltd
rcll
xchg
xor
aas
xor
cltd
pushf
cmp
push
ja
dec
fwait
pop
leave
and
outsb
mov
add
dec
incb
adc
int
leave
sahf
cmp
dec
std
sti
jo
ret
mov
sub
cmpb
ljmp
outsb
add
jo
xchg
mov
fs
test
movsl
push
lahf
sbb
int
cmp
push
outsb
cmp
cmc
movsb
push
pminsw
std
add
pop
adc
out
cmp
pop
xor
jbe
inc
mov
dec
cmp
daa
fstl
loopne
push
not
add
hlt
push
push
sub
sub
mov
cmp
out
push
xor
popa
addr16
int3
out
dec
and
lahf
test
mov
mov
test
scas
cmp
cmp
into
enter
push
inc
pop
pusha
test
xor
xchg
inc
int3
jecxz
push
pop
divb
mov
in
and
xchg
cltd
mov
push
xor
ljmp
cmp
adc
test
push
out
inc
jo
cmc
hlt
or
and
adc
lods
daa
cmc
mov
xor
jae
xor
repnz
cwtl
pop
push
int3
sti
pop
and
and
out
bnd
ret
jmp
and
mov
sbb
mov
add
inc
push
or
clc
xchg
sahf
rdmsr
lds
iret
inc
cmpsl
xlat
ja
leave
popl
sub
xchg
std
add
add
inc
rolb
cmp
lret
adc
and
or
shr
and
movsb
ljmp
pop
in
inc
pop
sbb
mov
xchg
fldcw
stc
and
mov
xchg
cmp
movsl
mov
ja
jo
int3
or
subb
popa
push
dec
lahf
insl
orl
mov
insb
mov
sbb
push
lods
or
fstl
call
mov
test
mov
mov
xchg
lea
movb
jbe
jmp
or
aad
jmp
jle
push
mov
jp
in
sbb
or
in
ljmp
dec
pop
testl
int3
or
push
ret
ss
inc
popa
loope
fsubrp
mov
out
cmpb
das
mov
mov
inc
pop
loop
test
dec
ficoml
cmp
dec
jge
ret
test
dec
add
sti
andb
mov
push
mulb
and
in
mov
test
dec
mov
jecxz
ds
sbb
xorb
lret
xor
dec
stc
loopne
jno
mov
scas
sub
fiadds
pop
dec
push
lock
mov
xor
pop
dec
adcl
push
jg
outsl
or
xor
inc
std
mov
sbb
and
out
cltd
sub
sbb
mov
pop
int
loopnew
rolb
dec
lock
sbb
fcmovnbe
and
inc
js
fcomip
iret
lahf
jno
add
mov
mov
popf
mov
pushf
frstor
and
outsb
shll
and
outsl
scas
xor
mov
mov
ffreep
adc
pop
ficoml
jmp
adc
pusha
mov
bnd
push
cltd
jne
into
jp
inc
sub
jo
js
inc
mov
incb
mov
mov
xor
inc
cmc
mov
popa
dec
mov
dec
add
mov
cmpb
test
lods
into
pop
iret
push
pop
arpl
jp
das
pop
lahf
ret
push
mov
cmp
outsl
mov
xor
jl
inc
mov
cmp
sbb
rorl
and
or
sar
mov
ret
shrb
stos
aam
mov
jns
subb
movsl
mov
mov
inc
dec
mov
mov
sub
cltd
loope,pt
jle
pop
fwait
shr
or
jl
mov
aaa
xor
add
mov
pop
nop
arpl
aaa
xlat
mull
mov
lret
pop
imul
jp
xchg
fisubrl
repz
sbb
in
lock
cltd
ror
movsl
push
jmp
mov
mov
and
xor
fidivl
popf
pop
jo
push
sub
ds
xchg
add
icebp
movsl
test
sub
enter
sar
aaa
and
and
push
push
xor
or
cmpsl
movsl
pop
mov
dec
clc
pop
mov
pop
stos
aaa
push
loop
ds
xchg
jge
out
push
pop
and
into
scas
xor
mov
hlt
les
fldcw
movsl
push
repz
push
adc
pop
jmp
inc
jb
insl
pusha
js
cmpsb
cmpsl
cmp
adc
rorl
int3
imul
enter
divl
sbb
inc
loop
int3
rcll
xlat
add
add
sets
test
xchg
repnz
movsb
lds
iret
cmpsl
out
fwait
jns
or
mov
push
das
mov
outsb
pop
mov
xor
inc
dec
rcl
xorl
je
or
ret
int
inc
adc
rcl
sbb
fwait
mov
stos
push
mov
jnp
clc
loopw
mov
faddp
out
jmp
pusha
xchg
popa
adc
iret
push
push
ret
dec
in
ja
or
out
mov
cmp
inc
loop
push
pop
inc
xor
aaa
xchg
cld
jmp
lret
cmpsl
shl
les
cltd
and
jg
mov
mov
pop
cmc
out
stos
xorl
or
nop
push
es
mov
lret
mov
in
cmpsl
mov
inc
out
xchg
add
arpl
loop
out
subb
add
in
pusha
add
dec
xchg
nop
sti
xchg
mov
add
pop
cmp
push
or
mov
test
out
stc
bound
jge
ja
frstor
lcall
aas
fsubrl
cmpsl
scas
add
movsl
dec
sub
xchg
icebp
cmpsl
ds
cwtl
mov
jecxz
xor
or
or
ja
pop
in
sbb
cmp
nop
daa
mov
mov
into
scas
cmp
nop
dec
sti
outsl
pushf
in
cltd
pop
das
or
popa
outsl
inc
scas
out
push
pop
pop
leave
int
mov
stos
pop
sbb
adc
subl
out
or
push
jne
mov
push
gs
sub
lret
push
insl
outsl
cmp
mov
loope
lcall
sti
fstpt
sbb
mov
vpminub
mov
cli
mov
push
pop
mov
lahf
test
add
ret
and
sbb
mov
pop
dec
inc
xor
fwait
jb
test
mov
pop
cmpb
push
xchg
xchg
lds
sub
cmc
cltd
or
pop
gs
adc
push
xor
fisubl
outsb
arpl
movsl
mov
sub
mov
daa
aaa
inc
fldt
push
ficoms
mov
testl
add
cwtl
xor
inc
sub
mov
lret
xor
mov
fbstp
dec
andl
add
adc
rorb
xchg
mov
rol
mov
fists
sub
or
or
push
test
jmp
mov
into
outsl
cmpsl
ds
push
cmp
insb
fnstenv
nop
xchg
test
fcmovnb
dec
outsl
test
lret
mov
mov
sub
pop
inc
in
call
adc
dec
jl
or
mov
sub
out
and
jle
mov
or
test
pushf
xchg
mov
in
repnz
add
mov
in
aad
mov
sbb
ret
push
sub
and
loopne
insl
rcl
xchg
or
cmp
cltd
mov
adc
and
and
xchg
dec
fbstp
mov
test
inc
out
lcall
scas
ss
mov
pop
imul
mov
lea
test
lcall
push
lods
in
orl
out
cmp
cmp
inc
pop
mov
incl
inc
mov
mov
jno
out
and
jl
inc
scas
xchg
mov
cmp
sbb
ss
pop
sub
pusha
push
in
iret
xlat
mov
pop
mov
sbb
neg
mov
movsb
push
mov
mov
int
movsl
pop
push
subl
push
add
test
cld
pop
loop
sub
cmpl
cmp
mov
jo
out
inc
xchg
lods
pushf
addl
lea
stos
sub
push
sub
pop
mov
cmp
mov
xor
lea
xorl
in
cmp
cmp
push
pop
mov
pusha
push
cmp
rcrb
hlt
jp
clc
fildl
dec
shl
cmpsl
pop
pop
out
inc
add
es
xor
fstp
mov
jmp
pop
sahf
jae
insb
sarb
int3
lahf
pop
enter
lods
adc
lahf
rcrb
shrb
and
pop
inc
icebp
pushf
xchg
and
stos
xlat
dec
arpl
mov
ret
push
mov
outsb
pusha
pop
fstps
dec
sarb
jmp
int
std
dec
and
addr16
pop
leave
int3
inc
fisubrl
loope
sub
mov
shl
lock
arpl
xchg
xchg
popf
repz
cmpsl
clc
xlat
fwait
add
cwtl
mov
jns
pop
scas
xchg
pop
mov
add
jle
mov
outsb
out
push
pop
lods
test
mov
nop
in
into
ljmp
test
xchg
insb
bnd
sarl
xor
pop
aaa
pushl
or
jecxz
mov
fcmovb
loope
or
int3
xor
xor
hlt
jmp
fcmovnbe
mov
pop
fisttpll
outsl
shrl
mov
mov
ror
xor
lods
and
sub
fsubrl
daa
xchg
pop
outsb
aam
xor
xorl
out
push
sub
lret
sbb
outsb
jbe
hlt
pusha
jne
cmc
mov
adc
or
mov
adc
out
es
ja
ficoms
inc
or
mov
adc
fcomp
js
leavew
enter
or
mov
stos
sbb
mov
in
aas
lcall
cmp
jae
es
push
sbb
cmpsl
clc
ljmp
mov
jb
arpl
ror
inc
jns
push
ljmp
ret
in
push
in
xor
gs
dec
scas
aad
shr
sub
add
xlat
cmp
out
mov
insl
fldcw
jg
adcl
sbb
jp
notl
sub
push
jo
andl
cmpsl
sbb
pop
into
jg
cmc
xchg
inc
mov
cli
dec
or
sbb
popa
xor
lock
sti
imul
mov
mov
pop
idivl
xchg
pop
mov
jno
cwtl
sti
in
ljmp
imul
adc
or
stos
lcall
dec
imul
sub
sbb
nop
gs
lds
push
and
xchg
hlt
xor
lret
or
pop
sbb
dec
test
xchg
pop
sub
jecxz
in
rclb
std
cmp
sbbb
int
gs
sub
pop
lret
in
pop
pop
xchg
push
add
mov
int3
add
inc
in
fistpll
movsb
fs
test
and
pop
loopne
jns
and
sbb
sbb
pop
cmp
xchg
adc
in
jmp
cmp
pop
inc
pop
sbbl
nop
sbb
lds
jnp
stc
xchg
sub
jge
lods
ljmp
loope
dec
ja
lahf
mov
cld
and
aas
sbb
jno
xlat
hlt
repz
push
push
aaa
data16
inc
ret
outsl
lea
jno
sbb
loop
insl
testl
shr
lcall
into
xbegin
sahf
inc
or
popa
cmp
push
icebp
test
daa
lcall
ja
stc
sti
mov
inc
and
in
xchg
add
xor
mov
sbb
ficoml
movl
mov
adc
or
push
mov
enter
dec
jl,pt
push
inc
int
test
js
sub
hlt
adc
mov
ss
call
or
out
mov
jno
notl
and
jle
pusha
das
lods
xchg
jecxz
add
std
mov
mov
inc
push
imul
in
xlat
lds
loop
int
mov
pusha
sub
xchg
cs
jmp
aaa
push
leave
lds
xor
or
and
jecxz
fsubrl
jmp
mov
mov
pusha
test
sub
insl
dec
mov
sbb
clc
dec
add
push
ret
jnp
xor
or
pusha
dec
push
sub
xchg
test
xchg
jecxz
jmp
je
pop
dec
insl
dec
fwait
testb
dec
mov
ss
lds
push
sbb
lret
in
mov
xor
in
out
aad
mov
std
mov
je
mov
shlb
cmpsb
mov
rorb
dec
pop
pop
mov
add
gs
pop
mov
popa
dec
inc
xchg
call
xchg
hlt
pop
clc
mov
cmp
enter
mov
stc
cmp
insl
push
mov
sbbl
stos
enter
add
loope
cmp
dec
fildll
mov
insl
enter
int3
sti
xor
pusha
fldcw
imul
or
in
outsb
jle
andb
dec
aad
adc
push
movsb
ret
dec
mov
lock
ret
inc
xchg
andb
cli
jns
sahf
jnp
jnp
sub
ljmp
in
shr
mov
mov
ffree
adc
enter
jmp
ret
aam
fldl
adc
in
jno
cltd
test
gs
jo
and
les
les
sub
lods
and
push
pop
mov
or
sub
push
mov
xchg
jno
sbb
lds
cmpsl
nop
cld
shlb
push
out
lea
js
xor
jecxz
sub
or
cmp
push
scas
fwait
mov
pop
mov
adc
jl
icebp
mov
mov
lcall
jnp
int
sbb
cmp
mov
cwtl
cmp
pop
sar
jmp
andb
bound
test
mov
jecxz
mov
in
das
jne
aaa
das
bound
sbb
ljmp
inc
xchg
imul
dec
xchg
pop
pop
rcrl
scas
sgdtl
js
jae
lea
mov
ret
dec
or
mov
lret
lock
repnz
and
inc
inc
imul
cmp
sahf
cmp
jne
pop
adc
mov
xor
rclb
mov
ja
jbe
out
enter
pop
mov
fsubl
lea
clc
and
inc
mov
jecxz
fsubrl
roll
bound
push
xor
or
call
imull
testb
cmp
ljmp
fwait
and
cmp
dec
movsb
inc
sbb
clc
cwtl
jns
imul
push
pop
in
aas
cmp
sbb
push
dec
dec
sub
xlat
dec
mov
pusha
movsb
fldt
xor
mov
cmpsb
pop
outsb
adc
xchg
in
stos
div
or
sub
lock
pop
scas
or
roll
xchg
arpl
jbe
addr16
les
adcl
pop
pop
pop
mov
inc
sti
jbe
int3
inc
cmp
jmp
add
fsub
pushf
fsub
js
cmp
sti
jnp
das
adc
sti
test
dec
fsubr
inc
inc
mov
cwtl
pop
dec
xchg
jae
fisttpl
mov
or
push
mov
fdiv
inc
je
pop
pop
and
dec
aam
lds
lcall
push
and
fsubrl
xchg
daa
lcall
xchg
inc
and
push
test
mov
jns
mov
jecxz
cli
dec
jge
xor
or
stc
cltd
outsb
jp
push
xchg
mov
je
cmp
xchg
popa
inc
lahf
xchg
in
clc
xchg
lods
out
add
push
enter
pop
xchg
mov
inc
mov
mov
jg
sbb
dec
xor
std
push
jbe
arpl
fcomi
cmp
sub
loopne
inc
xchg
xchg
cmp
jae
cmpb
lret
test
lcall
mov
dec
in
sbb
xchg
fld
jns
cmpsb
xchg
sarb
or
cwtl
xor
pushf
cli
cltd
push
test
sbb
and
scas
sbb
mov
test
leave
push
rol
cwtl
mov
xor
mov
test
fisubs
fwait
sbb
or
fbld
adcb
fs
stc
xchg
mov
push
jne
pop
je
lcall
xlat
mov
push
xor
xchg
jo
imul
add
dec
cmp
sub
in
data16
clc
testb
cmp
push
inc
pop
nop
cmp
sbb
lea
cli
lcall
iret
cmp
mov
push
outsl
push
repnz
out
cmc
test
push
jg
inc
je
scas
adc
test
fidivrl
addr16
in
cmpb
dec
aad
call
push
xor
loope
and
shl
fsts
pop
stos
pop
dec
sbb
inc
and
jp
dec
add
out
mov
in
mov
ja
stos
test
sub
inc
push
cli
test
pop
mov
push
popf
and
mov
push
cmp
enter
pop
popa
jbe
jnp
cmpsl
jbe
xchg
xchg
cmpsl
mov
shlb
aam
js
xchg
icebp
lret
testl
adc
jg
pushf
inc
les
pop
mov
lods
or
adc
inc
clc
in
mov
sub
add
mov
cmp
xor
add
outsb
cwtl
addr16
lods
xchg
scas
stos
mov
and
lret
mov
push
es
test
sbb
add
fcompl
mov
pop
fnstenv
and
xchg
mov
sbb
xchg
loop
xchg
mov
popf
sahf
pop
aam
cmpsl
add
xor
sub
ja
cmpsb
pop
call
orb
daa
test
or
mov
add
and
fsubl
aam
ds
cmp
divb
add
xchg
mov
mov
lret
xchg
cmpsl
jo
adc
cmp
dec
mov
mov
dec
pop
sub
mov
mov
xchg
mov
and
fwait
cmpsb
fsubrl
or
data16
pop
ja
into
cmp
sbb
push
mov
xor
mov
mov
adc
ret
popf
jnp
shll
cmpl
fwait
pusha
pop
jns
popa
in
repz
cmc
mov
rcl
xchg
lcall
xor
jg
jbe
scas
out
xor
mov
mov
rorb
cmp
sbb
aad
popa
out
loopne
out
mov
aam
cmp
mov
push
scas
xchg
sbb
lcall
jo
in
cltd
mov
cli
ss
cmpb
cmp
mov
xchg
cli
repz
sbb
mov
pop
insb
popf
test
dec
and
mov
fsub
jl
hlt
jne
mov
cmp
jl
test
xchg
ss
std
rclb
mov
pop
repz
dec
push
add
dec
mov
and
gs
mov
pop
jmp
lds
push
inc
cld
cmpsl
push
adc
mov
ret
mov
scas
pop
push
andl
in
popf
sahf
insb
fstpl
out
cmp
cli
inc
call
mov
lds
add
cwtl
ffree
into
jne
mov
fst
push
jl
in
flds
push
int3
ss
inc
lret
outsl
cli
iret
ret
or
cmp
not
push
aad
mov
nop
loope
je
cmp
mov
jnp
cmc
jmp
mov
das
mov
xchg
out
jbe
ds
outsb
inc
loope
push
jmp
mov
adc
inc
xorb
sub
icebp
pop
xor
cmp
jo
int
jno
jae
cli
inc
adc
or
dec
sti
addl
ds
sbb
loope
and
call
inc
jp
push
arpl
fimuls
loop
xchg
inc
cmp
je
shrb
or
jmp
out
or
mov
jno
addb
push
inc
mov
bnd
xchg
jne
jp
sub
je
mov
fildll
sub
es
adc
inc
mov
push
movsl
clc
cmp
mov
out
ss
fsub
mov
push
add
jg
ret
sarl
add
movsl
jecxz
fwait
push
add
and
fildl
int3
or
sbb
inc
repz
nop
adc
push
push
int3
lods
test
xor
cltd
cmp
add
imul
jbe
repnz
jnp
add
mov
mov
pop
dec
mov
inc
or
mov
xchg
xchg
add
xchg
rolb
adc
inc
push
and
rclb
jne
sbb
dec
jp
push
mov
dec
adc
maxps
sub
arpl
push
imul
aad
lcall
sti
popa
jne
jmp
jge
xor
loopne
lcall
adc
mov
int3
int3
fdivrl
xchg
fisubs
movsb
jns
lock
and
fistpl
enter
pusha
pop
pop
lret
mov
push
lea
xor
push
mov
and
js
mov
jns
or
loopne
push
jmp
pusha
lahf
bound
imul
and
lea
sub
xorl
xor
jae
aaa
mov
in
mov
jnp
pushf
pop
push
jb
jge
push
stc
fxch
sbb
xlat
bound
push
rcrl
dec
sub
out
hlt
fbld
mov
inc
lods
mov
pop
movsb
aad
bound
mov
mov
adc
int
mov
mov
in
dec
shr
inc
popf
mov
outsl
push
loopne
fisubrl
jb
das
pop
jae
hlt
xchg
movsb
imul
mov
adc
pop
ret
cmpsl
and
les
xor
call
and
into
dec
mov
pop
test
add
mov
lock
in
jmp
mov
mov
push
add
aam
aas
push
add
dec
stc
jle
xchg
mov
mov
clc
mov
jge
repnz
lock
rcr
outsb
lock
mov
popa
ror
xor
adc
popa
test
cmp
lcall
xchg
add
cmp
ret
pop
mov
xor
adc
cltd
mov
shr
pushf
push
popf
pop
or
xor
rorb
mov
outsb
mov
notl
popf
inc
mov
mov
das
mov
xchg
fmulp
lock
add
dec
cltd
dec
jae
lods
stos
and
sbb
rcrb
test
cmp
fidivrs
stos
fildll
mov
dec
stc
xor
loope
insb
jge
pusha
mov
cmpsl
inc
adc
add
mov
lcall
sahf
imul
aam
cmp
cmp
jb
lcall
cmp
and
outsb
cmpsb
loope
or
push
dec
rcr
sahf
mov
push
pusha
sbb
fwait
loopne
sub
sub
sbb
xchg
or
sub
sbb
xor
sbb
fdivrs
repnz
jecxz
pop
push
lods
loope
mov
lock
cmpsl
rcr
mov
out
adc
mov
lods
repz
push
push
pop
mov
mov
and
cmp
inc
xchg
pop
cmp
dec
mov
mov
inc
call
adcl
jecxz
stos
add
ja
mov
ret
out
cmp
jp
adc
popf
jo
scas
push
xchg
push
push
mov
insb
sar
jecxz
mov
push
mov
push
jne
jno
mov
mov
pop
lock
inc
in
xchg
inc
dec
jno
jle
mov
mov
mulb
jp
repz
lods
sbb
sar
lret
dec
sub
adc
jecxz
adc
insl
push
push
inc
clc
sti
in
push
jne
pop
ficoms
mov
or
jmp
fsts
add
leave
jecxz
fstpl
leave
insl
sahf
and
loopne
out
lods
cld
cwtl
mov
icebp
fldt
inc
addl
push
cmp
jle
inc
cmp
ret
int
stos
and
scas
jecxz
clc
sub
ja
adc
das
rol
or
push
icebp
sbb
mov
mov
add
mov
add
adc
dec
push
icebp
push
add
das
pop
jbe
mov
fbld
dec
cltd
fcomps
aam
jbe
dec
pop
enter
mov
mov
push
cli
push
stos
mov
pop
inc
ja
mov
movl
pop
mov
fisubrs
or
mov
imul
lahf
loope
in
mov
std
test
stc
cltd
pop
cmpsb
les
sub
stos
aas
mov
clc
int
sub
out
fnop
add
fcoms
pop
push
iret
out
movsb
rorb
adc
shrl
xchg
incl
adc
cmpsb
cmp
cvtps2pi
lret
mov
repnz
mov
test
sbb
mov
cs
inc
shlb
dec
imul
mov
cmp
jle
jnp
jp
enter
add
add
jne
and
add
test
jp
or
fstpl
xchg
jnp
dec
outsb
cmp
imul
loop
ds
pop
push
cmpsl
lret
push
mov
mov
stc
cmp
ljmp
xlat
std
sub
push
push
xchg
mov
imul
mov
pusha
pop
mov
cld
dec
daa
fcomi
imul
fildll
or
movsl
adc
push
dec
ds
loope
jnp
test
mov
pop
lret
cmp
cmc
lods
gs
mov
jno
pop
int
sub
mov
push
aaa
mov
or
sub
adc
push
scas
in
and
jno
icebp
dec
inc
popa
add
decb
mov
dec
push
dec
jo
push
dec
inc
sbb
fmuls
sahf
pop
outsl
inc
mov
or
push
rcl
or
xor
mov
dec
enter
mov
xchg
leave
sbb
dec
xor
and
push
in
mov
ja
adc
icebp
sub
mov
mov
adc
fs
pop
add
pop
dec
jle
sub
outsl
in
sti
repnz
sub
mov
dec
movsl
xchg
shlb
es
hlt
cmp
aaa
jne
mov
push
dec
adc
dec
cmpsb
xor
add
inc
shll
stos
push
or
fidivrl
dec
inc
in
push
dec
jbe
xor
fs
xchg
or
icebp
cmp
aaa
pop
imul
and
pop
push
lea
rcl
popf
dec
sarb
popa
mov
push
cli
mov
in
mov
xchg
mov
xorb
lods
sti
out
sarl
mov
fs
daa
imul
adc
adcb
lods
or
in
pop
mov
nop
cmp
cmp
pop
stos
and
rol
sbb
aaa
sub
lods
xchg
fadd
mov
sub
les
movsl
sbb
testl
xchg
mov
add
mov
insb
inc
dec
jae
adc
add
ds
vdivps
jmp
mov
add
dec
push
inc
adc
sbb
fsts
sbb
popf
push
lea
jmp
sub
jo
pop
int
and
mov
je
ret
shll
lods
cmpsl
jle
mov
fmul
gs
or
es
push
adc
idivl
divb
icebp
call
int3
aam
lds
lea
jae
xor
pop
stos
sub
dec
movsl
out
mov
mov
inc
scas
int
push
mov
push
add
jmp
xchg
ljmp
lahf
dec
mov
repnz
add
add
andb
jb
push
dec
ss
lods
and
imul
add
pop
or
mov
sbb
in
and
push
scas
mov
jb
cmp
shrl
cltd
pop
mov
push
cmp
nop
pop
mov
push
dec
int
into
pop
jg
and
mov
scas
cmpsl
scas
hlt
push
inc
les
push
cmp
xchg
push
mov
incl
enter
sub
aaa
sbb
cmpsb
pop
pop
jge
icebp
pop
inc
jmp
into
enter
xchg
jecxz
add
pop
seta
sub
stos
out
push
and
shrl
and
cmp
in
int3
push
cmc
jae
xor
cli
addr16
or
mov
mov
and
scas
les
sbb
fistpl
pop
faddl
fisttps
push
mov
jae
xor
sub
in
lahf
and
out
mov
rcll
imul
add
mul
daa
ret
pop
cmp
ret
pushf
push
push
push
insl
or
out
sub
enter
out
mov
or
cmp
push
xor
ljmp
lret
mov
into
push
mov
jno
lahf
call
cltd
dec
xchg
out
shl
lret
mov
xchg
sub
sbb
xor
scas
jle
adc
movsl
xchg
pop
push
mov
xor
dec
jecxz
insl
jmp
jo
movsl
jmp
and
push
sub
mov
stos
std
imul
pushf
sbb
cmc
in
push
sbb
shl
cmp
xchg
int
pop
bound
mov
psraw
test
pop
aad
or
lods
cmp
dec
xchg
insl
mov
subl
push
cmp
dec
xor
enter
out
inc
int3
xor
rcr
jbe
test
dec
pusha
andl
adc
cmp
xor
pushf
cli
push
daa
mov
mov
ljmp
or
jp
xor
aas
pushf
lods
insb
sub
shrl
add
push
out
mov
out
aas
fcmovnbe
lahf
add
test
sub
dec
or
aad
adc
ss
jb
out
pop
call
movsl
leave
imul
xor
sub
inc
les
push
ret
test
cwtl
test
and
cmp
jbe
shrl
aad
xchg
sbb
inc
rcl
orb
das
jns
mov
sub
das
jle
sahf
fidivrl
leave
movsl
sbb
cs
mov
scas
out
mov
mov
or
mov
sbb
inc
xchg
and
dec
addr16
daa
outsl
mov
sub
nop
push
cmp
movl
adc
mov
jl
inc
sbb
sbb
pop
mov
mov
orl
icebp
test
pop
mov
and
adc
ret
and
dec
les
or
inc
cmp
inc
push
mov
mov
sarl
sub
arpl
adc
loope
sub
mov
cli
aas
mov
inc
lods
push
out
and
dec
dec
mov
ja
mov
xchg
xchg
jno
into
in
and
xchg
pop
jp
sti
inc
loope
cmp
std
pop
mov
adc
sub
inc
ret
jo
aam
shl
es
testb
clc
sbb
mov
pop
nop
inc
fmull
cwtl
pop
mov
xor
cmpsl
cmpsl
push
mov
mov
mov
jecxz
sbb
sub
mov
mov
mov
mov
xchg
or
mov
imul
fdiv
movsb
inc
xor
cmp
fildl
mov
pop
loopne
inc
mov
pushf
out
jle
mov
out
scas
xchg
mov
xchg
xchg
xor
mov
jmp
out
mov
mov
fdivrl
mov
jno
jl
push
xchg
std
xlat
mov
adc
cmp
jl
pop
repz
dec
add
or
subb
out
cmp
addr16
nop
icebp
ret
aad
arpl
inc
iret
mov
xor
jne
test
fstps
sub
repnz
ret
enter
ja
or
push
dec
mov
divl
je
popf
add
addr16
lret
ret
mov
in
test
aam
sub
mov
hlt
pop
lret
push
mul
mov
xor
jl
insl
sti
ret
mov
mov
adc
mov
add
or
mov
xor
clc
xchg
out
xor
outsb
icebp
sub
pop
and
mov
int3
push
xchg
xchg
es
push
sub
aad
movb
mov
mov
and
movsb
push
sub
movsb
hlt
xchg
sbb
shrb
iret
jp
cmp
adc
scas
inc
cmpsl
inc
cmp
inc
xchg
mov
idivb
inc
aam
loop
outsb
mov
cmp
mov
call
sarb
adc
xchg
notl
xchg
loope
mov
outsl
shlb
lock
inc
jle
cmp
stc
aam
pusha
jg
fcoml
cmpsl
shll
inc
and
out
imul
fwait
repnz
mov
imul
mov
and
enter
dec
aam
push
push
sub
jge
pop
push
jl
xchg
sti
insb
aas
pushf
fbld
in
mov
pop
xor
out
dec
cli
aaa
sub
cmpb
add
out
fnstenv
adc
adc
push
in
ljmp
adc
and
xor
lret
rcr
sbb
loopne
xchg
push
push
sbb
inc
js
aam
addr16
test
ljmp
mov
jp
mov
lret
push
hlt
adc
sbb
dec
mov
xlat
push
stos
add
push
jb
inc
jns
add
stos
hlt
push
jecxz
enter
mov
int3
xchg
idivb
push
fadd
mov
inc
jbe
cmp
and
and
mov
pushf
or
fisttps
mov
xchg
lea
sarb
pop
sbb
inc
popa
mov
push
mov
outsl
sbb
in
cmp
push
dec
movsl
ja
mov
jo
sbb
mov
dec
cmpsb
dec
mov
popa
inc
mov
mov
xchg
pop
insb
das
pop
mov
enter
inc
ss
movsb
xchg
dec
je
rolb
mov
popl
mov
setle
pusha
mov
and
or
out
dec
subb
cmp
jg
call
jge
dec
stc
ljmp
lcall
daa
push
jb
lods
outsb
dec
subb
loop
pop
imul
orl
out
adc
or
test
daa
ret
sub
cmp
in
adc
dec
or
addr16
pop
mov
insb
push
mov
inc
aaa
ret
mov
or
jne
mov
aas
jb
andb
arpl
aas
pop
xchg
push
lcall
push
cmpsl
jle
jne
test
or
lcall
mov
ficompl
jle
fmuls
rorb
pop
mov
out
jl
sbb
cmp
mov
push
xchg
sub
jmp
push
sbbl
dec
aad
stos
pop
shrl
lods
inc
movsl
loopne
cltd
aam
sbb
cmp
and
mov
ficomps
lods
lea
adc
fidivrs
jb
pop
fucomip
sbb
sti
shlb
add
aam
mov
mov
icebp
push
mov
pop
xor
and
aad
rcrb
mov
push
enter
inc
push
xchg
push
scas
inc
pop
insb
xlat
popf
cltd
sbb
or
jmp
dec
fldt
xchg
xorl
jbe
aad
test
mov
popf
pop
lods
dec
mov
or
inc
pop
xor
cmpsl
adc
jb
imul
in
in
jo
inc
or
xor
pop
or
pushl
add
mov
aam
push
jge
lret
xor
mov
stos
or
pop
or
mov
jnp
push
inc
std
fildll
sbb
nop
mov
xchg
push
inc
lods
test
lret
out
lea
int3
dec
call
stos
ljmp
std
ss
nop
xlat
dec
enter
scas
dec
out
test
mov
loop
mov
pop
mov
cld
inc
aas
in
clc
push
jl
push
mov
mov
push
scas
out
adc
xchg
push
in
clc
dec
push
shlb
lods
pop
jg
pop
push
jnp
fwait
lret
mov
xor
adc
dec
xchg
inc
xor
jbe
jb
jb
mov
call
xor
push
xor
addb
jl
pop
dec
enter
fistpl
mov
push
imul
jnp
insb
push
cmp
mov
push
xchg
scas
push
hlt
sbb
add
pusha
dec
out
cwtl
jne
pop
pop
mov
into
mov
cmp
mov
jle
pop
fisttpll
mov
jae
imul
jnp
xlat
stos
gs
jge
mov
in
sub
int3
lock
mov
mov
insl
xor
test
adc
lock
decl
xchg
inc
pop
iret
psubw
out
mov
ja
push
jecxz
bnd
push
dec
sub
jo
in
lods
pop
sbb
inc
cwtl
cwtl
cs
jns
mov
jnp
xor
test
jne
or
mov
mov
pop
jge
add
dec
xor
rep
out
jge
daa
cmc
jbe
mov
sbb
jae
sub
pop
xlat
mov
xlat
aam
out
cmc
and
push
movl
arpl
jo
push
testl
in
sbb
mov
rclb
jnp
mov
sub
inc
mov
pop
sahf
pop
mov
rcrb
mov
arpl
jmp
andb
loope
cmp
or
ret
std
add
and
add
and
enter
push
in
or
arpl
xchg
push
jns
js
fldl
je
and
lock
cld
xor
popa
mov
hlt
pop
xchg
insl
xchg
mov
cmpsb
or
aad
sub
xchg
ljmp
pusha
lods
jecxz
inc
pushf
fs
movsl
wrmsr
add
mov
cmp
pop
adc
xor
pusha
sub
or
sub
sbb
sub
jge
stc
xchg
aas
sbb
std
xchg
fwait
loopne
aad
in
ret
ljmp
shl
cli
mov
movsb
fistpll
lcall
aas
mov
shll
outsb
mov
ja
clc
ds
mov
sub
enter
sbb
repnz
addr16
inc
fildll
xor
andl
pop
movsb
lods
pop
out
lret
adc
ds
mov
loope
lds
imul
lods
cmc
sbb
aad
test
dec
pusha
repnz
cmc
loope
dec
jmp
pop
aam
in
sub
fmul
divl
xchg
jae
mov
imul
sbb
xchg
adc
notl
adc
cmp
jge
hlt
dec
daa
insb
xchg
jb
mov
mov
cmp
mov
loopne
mov
pop
inc
ljmp
popa
lea
push
gs
shll
scas
mov
jg
out
test
lods
fldl2e
sbb
mov
out
and
dec
jbe
add
xor
addb
insb
gs
testl
jne
loope
push
data16
or
pop
aad
dec
add
int
idivb
fldt
dec
and
adc
sub
pop
sub
jmp
cli
dec
mov
mov
call
dec
cmpb
imul
push
cmpl
xchg
sbb
jae
fists
insb
dec
push
sbb
test
fs
push
push
lcall
cmp
imul
inc
mov
sbb
push
inc
sbb
push
inc
jl
push
in
arpl
and
xchg
cmp
jnp
pop
sahf
loopne
dec
mov
pop
sbb
jmp
lret
sub
cmpsb
mov
sbb
shlb
xorl
cmp
es
dec
in
push
sbb
rorl
inc
fwait
ss
test
push
add
sbb
jns
xchg
mov
sti
xchg
and
push
enter
push
sbb
xor
mov
push
in
or
ljmp
popaw
xchg
rcl
mov
jecxz
std
imul
and
orl
cld
mov
imul
das
pusha
lock
or
and
push
jb
out
rorl
xor
out
xor
rcll
enter
es
jmp
cld
jl
jp
adc
mov
pop
ds
test
int3
fwait
cwtl
rcrb
add
xchg
in
sub
aaa
jge
ja
inc
adc
dec
ss
shrb
and
imul
fldcw
ror
fcmovne
xlat
stc
mov
insb
xchg
lock
dec
jecxz
in
sbb
mov
sti
enter
in
mov
pusha
in
or
enter
cltd
push
pushf
dec
and
or
xchg
ljmp
push
call
sahf
push
mov
sbb
and
mov
repz
or
sub
hlt
xor
out
xor
jp
rcrl
clc
sub
xor
lret
rep
adc
push
sarb
push
push
mov
pusha
mov
fsubrs
call
push
sahf
sbb
cld
mov
push
push
or
js
gs
cmp
outsl
in
xlat
lods
add
cmpsl
faddl
sahf
aad
xchg
xorl
aad
out
adc
aam
jmp
iret
cmpsb
popa
cmpsl
js
jno
lock
lods
lods
xchg
xor
into
cltd
pop
pop
jno
add
mov
sub
mov
cmp
xor
jp
cmp
iret
into
arpl
mov
xor
dec
negl
sub
lods
sbb
jp
xchg
mov
cmp
lahf
gs
adc
test
jbe
fdivl
fidivrl
out
xchg
cmp
insb
repnz
dec
pop
data16
sbbl
loope
out
sbb
sbb
push
or
xlat
rorl
dec
pop
or
aam
cmp
repz
or
pop
insl
icebp
call
mov
dec
mov
add
cmc
lods
test
cld
dec
pop
pushf
rclb
sti
mov
std
cmp
or
clc
mov
dec
mov
pop
sbb
pop
sbbb
mov
push
shrd
loopne
movl
les
and
cli
sarb
mov
outsl
mov
scas
sub
out
jbe
xchg
scas
pop
mov
test
mov
mov
loope
jl
jl
and
jb
imul
call
js
loopne
fsubl
lcall
inc
pop
xchg
mov
pushf
add
xchg
sub
stos
fsubr
xchg
cmp
imul
lea
xchg
or
cmpsb
xchg
pushf
popa
and
push
push
pop
mov
push
xchg
or
stos
and
out
mov
or
xor
mov
lea
or
jne
mov
mov
nop
popa
aas
sbb
push
outsl
push
pop
mov
arpl
inc
xchg
and
cmp
sbb
push
loopne
xlat
pop
inc
nop
pop
pop
fistl
hlt
push
or
dec
add
fnstenv
adc
xor
xor
jne
adc
inc
push
mov
mov
push
int3
cmp
xchg
out
shr
and
jle
xchg
aas
mov
xchg
mov
mov
nop
push
mov
mov
jge
clc
pop
aas
mov
dec
fnstenv
sub
fdivr
mov
sbb
lcall
cmp
cld
xlat
and
sbb
ret
ret
adc
test
xor
sti
jo
push
fwait
adc
mov
mov
xor
cmp
fwait
jnp
xchg
jns
cmp
out
daa
xor
stc
ret
ret
sub
out
cwtl
mov
add
sbb
xor
xchg
xchg
sub
loop
cwtl
rcll
out
or
mov
add
daa
mov
dec
lock
aaa
shlb
inc
push
rcr
inc
xor
dec
push
stos
push
sub
add
repnz
shrl
or
add
insl
test
mov
sub
mov
mov
lods
in
cltd
std
pop
inc
lods
imul
cli
pop
push
inc
jbe
incl
xor
int3
pop
add
add
movsb
stos
xor
lock
cmp
cmp
pop
mov
fwait
aas
jnp
sub
xchg
cltd
cmp
lods
ret
push
inc
lock
daa
adc
cmc
lods
and
xchg
fdivr
push
sub
xorb
les
jae
incl
mov
leave
jecxz
sub
mov
ret
in
add
repnz
testb
mov
mov
fnstcw
jnp
insb
add
and
fldl
xchg
push
fsubs
mov
fisttpll
fmull
dec
xor
or
lock
nop
jbe
addr16
dec
inc
cmp
mov
add
lret
sub
mov
xchg
inc
mov
pushl
cmc
div
int3
sub
fdivrp
or
nop
cmp
fidivs
or
hlt
mov
je
stos
scas
inc
mov
fs
int3
push
cmp
fs
cli
loopne
pop
and
xchg
jg
aas
xchg
push
stos
mov
jnp
into
add
dec
insb
and
stos
or
or
js
pop
mov
add
sbb
fs
sbb
pop
pusha
cld
mov
push
xor
divb
push
pop
testl
inc
or
loope
push
xorl
int3
mov
push
cmp
sarl
inc
mov
push
sbb
jae
push
sub
aad
push
icebp
push
xor
pushf
shlb
iret
call
or
aad
jnp
pushf
mov
shl
and
sub
aam
mov
enter
xorb
or
lret
pushf
mov
sahf
jl
mov
xor
pop
out
jmp
and
sub
mov
cmp
adc
push
mov
jb
std
mov
xchg
cmpb
sar
jbe
mov
hlt
or
ss
inc
mov
cmpsl
add
int
push
xchg
sub
sub
addr16
lret
pop
stos
dec
and
pop
dec
push
or
or
push
sbb
cmp
jle
sbb
adc
sub
test
aad
add
cmp
in
lds
jae
sahf
nop
or
pusha
and
xor
ret
daa
imul
pop
adc
jnp
movsl
lcall
xchg
rolb
cmp
rcll
xrelease
add
or
cli
xorl
vsqrtss
sub
dec
stc
leave
data16
inc
push
ja
mov
add
test
pop
stc
and
jg
push
icebp
or
cmc
fistps
jne
call
je
out
cmc
mov
mov
and
pop
mov
sbb
mov
insl
lods
xchg
inc
fcompl
pop
xor
cwtl
jge
push
xor
gs
push
lret
and
jecxz
xchg
inc
repnz
mov
rcrl
pop
add
pushf
cmp
das
mov
sub
iret
dec
and
mov
movsb
cmp
test
fsts
jge
or
cli
lds
mov
sahf
mov
xor
xchg
xchg
fistl
cmp
mov
std
data16
pop
mov
push
imul
pushf
jecxz
orb
cmc
sbb
mov
inc
inc
out
cmp
jbe
xchg
or
lock
push
lret
xchg
setl
lret
aas
scas
lds
or
sub
cmp
addr16
flds
out
nopl
rol
test
cmp
insb
mov
sbb
push
xchg
aaa
arpl
lea
fdivrs
pushf
insl
aas
dec
add
adc
lods
mov
push
cmp
xchg
insb
mov
lahf
lea
xchg
rclb
loop
iret
cwtl
cmp
insl
pusha
inc
je
add
test
dec
xchg
fs
push
sub
sub
jns
mov
ds
test
adc
xchg
adc
popa
mov
cmp
hlt
xor
cmc
repnz
cmpsl
lret
jecxz
jcxz
mov
outsb
lods
hlt
and
mov
xor
mov
test
xlat
or
hlt
jns
ss
or
repnz
out
imul
jns
in
xor
hlt
dec
pop
shl
add
iret
mov
and
mov
dec
loop
xchg
or
xchg
decb
pop
std
es
adc
loop
sbb
fs
les
add
xor
fisubrs
sbb
jle
inc
scas
xchg
data16
pop
test
es
subb
mov
mov
push
dec
jns
stos
clc
fs
or
or
jno
stc
stos
pop
sub
test
out
jp
jg
pop
mov
popf
jb
das
lcall
lock
lahf
scas
popa
or
mov
push
aaa
imul
jmp
sbb
cmp
push
sub
cld
fsubp
push
and
dec
dec
mov
hlt
cld
icebp
and
and
jno
push
lock
cli
movsl
ljmp
hlt
mov
sbb
fistps
lea
add
dec
out
xchg
mov
pop
inc
jbe
mov
or
jg
addr16
inc
inc
add
das
xlat
fistpll
repz
cmp
mov
add
mov
inc
mov
mulb
cmp
add
ffree
test
push
mov
dec
push
mov
in
sbb
clc
add
mov
cmp
incb
sbbl
mov
cmc
and
inc
inc
or
cmp
xor
sub
mov
call
xchg
pop
out
mov
test
nop
daa
pop
adc
decl
inc
mov
sbb
pop
adc
inc
test
sub
sub
sbb
ljmp
popf
adc
ljmp
xchg
stos
mov
int
sub
push
mov
sahf
les
mov
adc
xor
push
sarl
aam
lock
push
or
cltd
insb
test
mov
enter
push
fcomi
jecxz
sbb
fsts
in
lahf
out
test
or
push
mov
inc
js
jp
jne
lahf
jge
loope
xchg
js
sarl
mov
and
lods
adc
ja
stos
mov
pusha
testl
jnp
pop
inc
scas
and
push
aas
mov
inc
imul
adcl
mov
loop
pop
mov
sbbl
jmp
dec
mov
fcmovnbe
divl
aad
or
decb
movsl
mov
adc
pop
sahf
mov
mov
or
mov
jb
inc
lods
sbb
push
sti
mov
popf
add
push
dec
jne
mov
sub
sbb
popa
mov
cmovs
roll
inc
shlb
ffreep
xlat
and
mov
and
push
pop
das
jbe
mov
ja
cltd
sar
add
pop
mov
sbbl
cmc
aad
dec
in
sbb
insb
pop
hlt
cmpb
cmpsb
dec
cmp
sbb
movsb
mov
mov
or
jecxz
stos
mov
dec
repnz
add
les
xlat
fucomp
push
mov
ret
ret
aad
mov
fcomps
mulb
mov
call
ficoms
mov
aam
jmp
dec
std
jp
xchg
inc
js
cli
xchg
movsl
mov
mov
xchg
pop
jle
mov
fadds
add
lret
sub
or
mov
hlt
cmpsl
xor
push
mov
inc
push
and
cmp
and
cmp
out
ja
dec
mov
ror
dec
movsb
ret
xchg
sar
push
xor
add
dec
sbb
and
shll
repz
orl
mov
pop
or
mov
cmp
dec
aad
xor
lret
sarl
outsl
adc
fstpt
std
sub
lcall
lcall
sahf
not
push
aaa
mov
lods
in
inc
mov
pop
ja
rcl
dec
sar
test
push
add
xchg
jecxz
out
fstpl
dec
pop
cmp
add
dec
out
mov
stos
je
dec
cmp
in
pop
mov
int3
pop
mov
test
jge
push
test
movb
test
cwtl
lcall
xchg
sub
or
mov
sub
leave
dec
or
or
iret
aad
jmp
mov
xor
push
jo
add
sub
or
in
sbb
jg
outsl
out
xchg
push
add
dec
out
bound
and
adc
adc
sub
subb
adc
rolb
push
cmpsl
sub
out
push
sahf
push
mov
testb
mov
push
lock
cmp
sbb
xor
or
fidivs
sub
push
addr16
xchg
mov
jmp
sti
fwait
sarl
and
scas
sbb
orl
push
inc
int3
push
enter
push
inc
push
xchg
aaa
mov
iret
jb
mov
outsb
imul
pop
cld
dec
or
push
pop
in
jecxz
jecxz
jg
jne
push
sub
lock
sbb
xor
pusha
int3
mov
shlb
pop
and
lret
stc
mov
lahf
and
stc
sbb
jno
push
push
mov
sub
mov
insl
fxch
cwtl
dec
mov
inc
jb
and
xor
popa
jnp
into
xchg
pop
out
adc
js
push
xor
js
lock
loopne
mov
sub
pop
mov
je
adc
dec
adc
cltd
cmp
pop
dec
call
je
aaa
adc
mov
ss
mov
rol
aam
xchg
filds
sbb
xor
xlat
push
push
xchg
cli
push
sbb
push
dec
mov
sti
call
jns
and
jp
dec
ja
mov
adc
repz
or
lods
bound
cld
add
into
pop
stc
add
fmull
push
leave
repz
std
sub
lcall
fwait
enter
add
iret
test
shl
mov
pop
pop
loope
loopne
ds
cmp
push
js
mov
push
dec
fld
hlt
mov
cs
add
jle
icebp
stos
out
sbb
xor
test
xor
cmp
jb
lret
inc
lods
cli
frstor
outsb
test
mov
cmc
lret
ljmp
xchg
movsb
and
aam
fsts
push
int3
mov
or
mov
cmc
hlt
and
adc
mov
pop
mov
jb
mov
push
pop
push
dec
add
aad
mov
cld
test
data16
and
lahf
jbe
inc
sub
and
fcmovnbe
mov
cmp
xor
xchg
repnz
int
dec
jae
cld
xchg
sbb
mov
sbb
rorb
sarb
mov
jge
mov
jp
in
jge
pushf
lds
pop
mov
inc
ret
inc
clc
dec
xor
xchg
push
jp
ficomps
and
scas
lds
scas
pop
icebp
lods
arpl
incb
inc
pushf
cmc
pop
addr16
repz
push
cld
push
es
mov
jp
fidivl
das
sub
dec
mov
and
cs
aad
sub
pop
mov
not
popf
push
rcr
mov
or
cld
ret
mov
fs
clc
push
xor
cmp
loope
pop
jbe
sahf
sbb
add
adc
push
mov
xor
ja
sahf
stc
repnz
sbb
sti
mov
push
jl
leave
mov
push
push
repz
loopne
mov
push
mov
cwtl
sahf
xchg
lret
mov
push
loop
repnz
jae
mov
out
xchg
fnsave
push
push
sbb
ss
shrl
lods
push
lods
or
pusha
stc
mov
add
and
outsb
mov
mov
xor
pop
js
sbb
xor
dec
jl
mov
push
xor
sub
mov
test
mov
out
lea
mov
jl
xor
dec
xor
movsl
cmp
or
shll
and
jae
xor
outsl
adc
sbb
imul
pop
stos
int3
jbe
pop
and
adc
scas
fdivrp
out
std
sbb
sahf
mov
sahf
pop
mov
jae
iret
inc
xor
icebp
lahf
iret
cltd
pushf
add
fcmovnu
xor
shll
ficomps
out
aad
movsl
push
aas
mov
push
fcoml
or
jno
jb
xchg
ljmp
subl
in
shr
lret
clc
ret
pop
add
inc
lods
sub
dec
fstp
lods
in
mov
lods
fwait
jnp
sbb
int
xchg
rcrl
mov
jnp
xor
mov
or
nop
fsubs
daa
adc
mov
jle
cmpsb
mov
sti
fsts
add
rep
in
cmp
inc
push
mov
xchg
in
push
or
in
shll
mov
xchg
test
into
daa
jo
sub
jmp
lea
loope
add
jp
and
pop
push
lods
mov
mov
push
lcall
jo
jmp
lret
rolb
sbb
popa
shll
jno
mov
lods
stos
push
xor
or
jnp
fs
outsb
jg
cmp
arpl
jl
pop
sub
xchg
repz
loop
jno
cld
and
bound
and
fcomps
jbe
mov
imul
bound
push
mov
bound
dec
pusha
jb
addr16
and
push
bswap
cld
mov
xorl
rcl
fs
mov
push
pop
std
adc
adc
inc
sbb
cs
fs
shll
xchg
cld
mov
mov
es
pop
stc
imul
incl
lcall
mov
and
loope
loopne
dec
push
test
jno
imul
xor
in
jbe
stos
lock
xorb
fsub
lret
lcallw
cmp
jb
sub
adc
mov
push
pop
push
pop
imul
jg
mull
mov
sbb
js
sub
push
sub
xor
xchg
dec
ljmp
enter
push
or
mov
sarb
aad
jp
dec
test
insl
xchg
rorl
cli
out
jl
mov
mov
sbb
mov
jle
rol
arpl
push
mov
lahf
jg
mov
xor
mov
arpl
movsl
xchg
in
add
ss
xor
es
dec
pop
popa
adc
lahf
sbb
loope
sub
mov
icebp
gs
jnp
add
movsb
jo
cltd
cmp
stos
fildll
out
push
xchg
push
jl
pop
xor
testl
sarl
add
into
adc
adc
pop
mov
and
arpl
jge
lods
insl
mov
int
bound
push
inc
movsl
push
sub
sub
les
sbb
mov
sarb
ret
push
push
push
pop
inc
sub
std
xchg
daa
dec
and
rorb
je
xor
push
inc
pusha
mov
popa
int3
pop
mov
jg
mov
loopne
and
insb
leave
push
adc
iret
gs
mov
lcall
aam
cli
stc
mov
sbb
inc
in
pushf
dec
cs
aam
adc
xchg
inc
or
jae
jge
lods
sbb
data16
xchg
mov
les
sbb
jmp
mov
inc
inc
mov
sbb
inc
push
test
mov
push
xchg
stos
adc
cli
dec
push
ljmp
jle
sub
mov
addr16
loopne
arpl
arpl
popf
aam
adc
cmpsl
push
sbb
mov
and
jmp
test
mov
fnstenv
jg
add
and
test
jno
leave
xor
clc
sub
adc
fstps
mov
mov
ljmp
mov
es
jle
imull
out
mov
inc
sbbl
stos
aad
insl
cmpsl
loopne
push
mov
addb
mov
sti
movsl
fnsave
scas
and
cli
cmp
or
push
add
mov
cmp
mov
pushl
push
ss
aad
test
cli
xchg
xor
inc
std
cmp
les
sbb
mov
xchg
imul
std
fiadds
mov
movsl
mov
sbb
std
aad
aaa
mov
rolb
fidivrs
inc
mov
and
mov
popf
mov
loop
mov
test
roll
sub
dec
adc
jb
repnz
mov
cmp
mov
repz
cmpsb
loop
xor
sub
jle
jl
xchg
cmp
xlat
fdivr
xor
aas
ds
mov
icebp
clc
mov
out
jbe
add
scas
adcb
popf
fmuls
jl
add
jmp
push
dec
mov
loop
shlb
movsb
jae
add
inc
mov
cmpsb
int
cwtl
or
mov
popa
push
fs
fisubrl
jno
mov
icebp
jo
xchg
or
push
ret
inc
in
sbb
mov
pop
test
mov
fs
popf
inc
pop
inc
or
cmc
das
adc
pushf
insb
int
shl
add
les
sti
inc
and
arpl
dec
movsl
faddp
ror
inc
or
aas
push
ljmp
sub
mov
mov
xchg
shll
sarl
and
cli
lock
pusha
xchg
stos
imul
std
rorl
sbb
push
and
std
inc
push
ljmp
aam
enter
jmp
push
lods
mov
cwtl
cmp
jbe
mov
mov
xchg
mov
fisttpl
push
push
insl
mov
mov
dec
dec
imul
and
loope
fdivs
ss
add
xor
inc
fcompl
sbb
push
mov
cltd
pop
fcomp
add
mov
pop
dec
mov
xorb
inc
xchg
mov
aas
mov
mov
repnz
shr
jge
and
sub
ret
mov
jg
cli
inc
mov
or
or
pop
or
or
icebp
push
mov
shlb
out
lret
jle
in
ja
mov
push
sti
into
out
jno
outsl
jno
call
test
xor
into
xlat
push
rcll
push
dec
enter
ret
sub
das
jnp
dec
mov
outsb
sarl
ljmp
mov
and
fimull
jecxz
aam
mov
out
into
iret
pop
aam
adc
xchg
ret
ss
das
xor
jae
jmp
add
fs
nop
mov
sub
fdivrs
pop
lods
jg
and
divl
pop
dec
aam
repnz
sub
or
aaa
xor
jns
dec
inc
add
outsb
xor
mov
imulb
in
push
cmp
push
xchg
and
add
xor
push
aaa
jae
gs
nop
mov
inc
dec
sbb
int3
and
or
dec
mov
xor
lahf
xlat
inc
xchg
cld
out
fsubr
jns
daa
cmp
sbb
xchg
pxor
push
popa
nop
dec
pop
mov
mov
xor
adc
push
inc
add
mov
and
xchg
or
pop
mov
ds
popf
push
lock
call
sub
das
pop
xchg
xor
cmc
mov
xchg
leave
and
jecxz
push
xchg
dec
dec
test
dec
push
mov
dec
shlb
add
or
inc
inc
mov
mov
fwait
jae
pop
xchg
cmpsl
addr16
jae
int3
mov
scas
ficoml
dec
or
scas
inc
push
fnstsw
and
or
rcrb
fsub
push
stos
sbb
icebp
or
test
adc
xor
mov
ljmp
mov
inc
pop
pop
mov
in
fiaddl
js
mov
rolb
or
adc
pop
mov
xorb
ret
call
mov
ficoms
std
add
nop
pop
jne
mov
xchg
mov
les
or
das
dec
icebp
mov
andl
or
push
out
fwait
sbb
xchg
and
icebp
inc
xor
es
cmp
and
pop
lret
decl
cmp
jns
jae
sbb
push
pushf
mov
cmp
fwait
pop
iret
push
mov
rcll
cltd
pop
mov
sub
inc
ljmp
fbstp
or
inc
aas
ret
das
imul
mov
lcall
lods
mov
or
outsl
jne
xorl
sub
out
adc
into
mov
fmul
or
add
pusha
fcompl
es
nop
cmp
sbb
mov
xchg
adc
dec
mov
popa
jg
xchg
adc
nop
cmp
rcrl
pop
inc
dec
fbstp
add
push
push
push
pop
jecxz
jp
add
dec
pop
push
cli
sub
sbb
xor
mov
ja
mov
scas
pusha
mov
mov
mov
adc
mov
jno
add
lahf
cmpsb
mov
ret
lret
mov
sahf
mov
daa
ret
jp
rcl
mov
fwait
push
aam
sub
in
dec
repz
out
pop
inc
mov
rolb
mov
mov
scas
mov
sbb
or
call
xchg
sbb
ret
std
push
add
mov
f2xm1
mov
lret
in
into
aaa
jg
push
insl
ret
es
adc
insl
inc
je
cmpb
aas
dec
scas
jmp
js
test
lock
or
push
xlat
movsl
cmc
inc
sbb
push
push
rcll
mov
lahf
ds
iret
lock
test
cmpsb
mov
jnp
xor
or
aad
sbb
inc
mov
mov
xchg
cmp
clc
mov
rcr
adc
lods
cmpsb
pop
mov
or
cld
pop
dec
les
ret
mov
fldcw
mov
xor
jnp
push
outsb
jo
nop
pop
push
movsl
sub
jge
mov
mov
lea
movsl
mov
dec
mov
adc
ljmp
jl
in
xlat
ljmp
add
xor
cmp
push
xchg
lret
movsb
cli
lods
addr16
xlat
or
rclb
lea
sti
lahf
jl
sbb
rorl
mov
sbb
mov
sbb
or
in
push
jle
inc
jbe
pop
fidivl
call
aad
gs
popa
iret
popf
xor
mov
repz
notb
aam
js
cs
mov
xchg
outsb
loope
pop
stos
daa
cmp
insb
lods
fisubl
out
mov
stos
jp
dec
xchg
mov
rcl
inc
xchg
aam
sti
insl
cld
mov
inc
aad
cmp
adc
push
jno
push
sbb
mov
sbb
test
dec
sbb
cmp
negl
lods
das
and
pop
cmp
int3
movsl
lcall
and
xchg
cmp
inc
sub
jp
scas
fistpll
adc
gs
pop
je
and
xlat
pusha
bound
add
jo
push
outsb
lods
das
xchg
mov
pop
in
mov
sub
imulb
fnstenv
in
iret
in
jo
lcall
je
subb
loope
shrb
scas
pop
cmp
out
aam
pushf
jle
jno
ficompl
jmp
fwait
dec
push
sub
in
adc
mov
loopne
rorb
lsl
outsb
sub
out
bound
pusha
or
jo
int
mov
and
std
int3
jns
mov
mov
test
xchg
out
pushfw
dec
push
enter
or
mov
mov
sbb
ret
mov
add
loope
cmc
dec
xchg
cmpl
cli
xchg
ret
repz
adc
jne
mov
movsb
in
sub
outsb
divl
jmp
lret
enterw
repz
xorb
movsb
nop
xchg
pop
sub
sub
sub
pusha
add
std
xlat
inc
stos
dec
out
int
mov
push
fldenv
arpl
pop
adc
loope
mov
lret
cld
pop
mov
ds
or
xchg
or
mov
sarb
leave
dec
lea
arpl
out
repnz
in
std
in
mov
imul
mov
jb
sahf
adc
test
cmp
ret
jge
jp
sub
cltd
pop
nop
xchg
sti
gs
pop
adc
mov
xor
sahf
popf
jns,pn
xor
fsts
test
stc
push
ljmp
rorl
cmp
js
cmp
mov
call
and
sbb
frstor
push
inc
cmpsl
call
dec
outsb
ljmp
push
es
jp
test
hlt
in
stos
cmp
rclb
cmp
cmpsb
xchg
xor
lea
arpl
mov
testb
sub
add
bound
add
test
mov
das
fwait
xchg
cmpsb
dec
mov
xor
mov
repz
scas
or
cmpsl
xchg
jle
iret
jg
stos
mov
test
dec
sbb
mov
scas
jmp
mov
add
cmp
in
mov
xchg
sub
ljmp
cmpsl
fnsave
into
mov
mov
rep
xor
out
loope
mov
lods
js
xor
sti
or
cltd
cmp
push
pop
fbstp
add
or
mov
lock
mov
outsl
cltd
mov
popf
insb
mov
add
lock
mov
stc
xchg
pop
js
xchg
cld
add
dec
jbe
push
sub
les
adc
xor
cmpsb
int3
aad
xchg
push
mov
sti
push
adc
paddusw
out
adcl
jecxz
shrl
cld
jmp
rcll
inc
insb
cmpb
xrstor
push
jno
mov
cwtl
daa
adc
mov
mov
jmp
dec
cmpsb
fcoml
mov
add
cwtl
mov
stos
mov
cld
adc
scas
jmp
das
pusha
daa
add
jg
xchg
mov
cld
cmp
mov
pop
inc
mov
insb
mov
pop
shlb
pop
aaa
push
leave
les
in
fisubrs
sbb
movsl
pop
lock
jne
inc
push
popf
dec
push
fisttpll
call
cld
pop
filds
fs
aaa
and
sub
jo
std
je
xchg
shl
incl
test
adc
sbb
pusha
mov
cli
xchg
sbb
pop
lret
popf
outsb
mov
mov
out
leave
push
hlt
dec
cmpl
mov
sub
xchg
clc
inc
leave
add
sbb
adc
mov
rorb
cmpsl
shl
pop
into
test
xchg
inc
lods
pop
mov
insb
daa
xorps
inc
pop
dec
push
in
mov
call
les
and
in
pop
xchg
fwait
cs
imul
cmpsl
xchg
add
jge
inc
ss
outsb
fstpt
or
cmovg
cwtl
mov
iret
mov
je
push
out
jg
mov
mov
pushf
imul
cmc
in
add
sarb
xchg
lds
test
imul
add
adc
xor
mov
pop
and
pusha
pop
mov
add
nop
into
dec
pop
add
sub
repz
ljmp
test
mov
or
enter
push
loop
mov
aaa
mov
or
mov
or
jecxz
setl
js
cmpsl
jb
mov
mov
and
test
fwait
data16
das
adc
scas
pop
cmp
mov
das
rcl
adc
bswap
rcrl
mov
jge
loop
imul
fldcw
adc
sub
push
rcl
push
xchg
ja
push
mov
call
add
lea
mov
dec
das
jno
shlb
xorl
nop
sbb
sarb
pushf
xor
adc
push
jp
pop
jne
test
popa
push
mov
sub
nop
and
sub
dec
in
sarl
or
and
jg
iret
aaa
in
sbb
imul
jle
int3
mov
cmp
mov
xor
outsl
inc
addr16
fnstsw
or
and
lea
aaa
addr16
inc
sti
loope
out
adc
xchg
mov
cmpsl
and
cmp
aaa
mov
push
inc
ljmp
xchg
shrl
push
mov
lea
push
pop
ss
sahf
mov
jg
add
or
adc
adc
mov
add
push
negl
push
xor
mov
add
and
lahf
ret
xchg
leave
pusha
pop
add
out
lcall
jo
sub
jge
mov
js
js
sbbb
outsl
cmp
repz
call
jnp
scas
sbb
or
sti
stc
push
cmp
xlat
push
dec
das
sbb
add
loopne
daa
outsb
xor
test
push
pop
rclb
lcall
lcall
mov
fwait
push
cs
dec
push
xorb
dec
inc
or
jge
and
pusha
test
push
pop
xor
bound
cs
and
call
jnp
add
ret
enter
sbb
or
repnz
pop
jge
inc
sti
jle
and
mov
adc
sub
add
add
fwait
cmp
imul
and
mov
xchg
test
xor
scas
repz
jne
test
fidivrl
pop
jno
fldenv
jnp
push
insb
imul
pop
pop
cmp
mov
cli
bound
or
repnz
shrb
xor
jo
icebp
fistpll
or
pop
cmp
test
int
add
add
dec
fsubr
pop
sub
lock
imul
xchg
sub
out
hlt
int
xor
sti
insb
inc
leave
out
push
mov
pusha
dec
and
inc
sub
mov
mov
insb
leave
loop
loope
lods
mov
lock
aas
aam
and
adc
mov
fs
or
roll
pop
and
pop
or
push
and
pop
ds
mov
stos
pop
dec
push
js
lds
push
hlt
pop
out
imul
xor
mov
out
xchg
icebp
cmp
mov
adc
xor
mov
push
sub
incl
popf
mov
adc
push
inc
xor
push
cld
int3
cmpsl
pop
lods
inc
adc
mov
sbb
mov
pop
aaa
into
dec
add
adc
inc
xor
xor
into
imul
sub
js
mov
popa
rcrl
mov
push
sti
cmpsb
add
cmpsl
inc
mov
jg
jmp
jg
out
pop
das
push
cli
ret
ss
push
call
push
stos
test
rcll
adc
in
int
push
addr16
cli
insw
sub
rcrl
shl
jo
cmp
mov
into
mov
inc
pop
sbb
in
xchg
cmc
cli
rol
mov
lret
sar
vshufpd
xchg
out
mov
mov
daa
loopne
andnps
mov
loop
test
loopne
adc
inc
pop
xchg
pop
repz
in
xlat
out
inc
push
inc
mov
lock
push
inc
loopne
jae
insb
lret
add
shll
push
popf
arpl
mov
rcr
pop
leave
sbb
bnd
imul
sub
xchg
je
pop
jae
adc
js
mov
cmp
in
cwtl
aas
bound
jnp
add
sub
sbb
test
sub
lods
out
ret
dec
push
out
jl
add
das
inc
and
rol
in
jg
loopne
sarb
sbbl
push
mov
test
frstor
mov
sub
jo
dec
test
fmuls
or
dec
repnz
jno
or
std
mov
jecxz
jo
js
test
cwtl
or
icebp
push
imulb
sub
lret
or
js
mov
rcr
aas
out
mov
jnp
in
mov
pop
inc
faddp
pop
sbb
xchg
lods
jno
pop
push
push
out
jg
mov
ret
pop
inc
bound
lock
stc
lea
jnp
sahf
lcall
cwtl
xlat
bound
fmull
ljmp
adc
lcall
mov
lea
mov
pop
aad
in
xchg
push
cmp
aad
and
dec
xor
sub
shll
and
arpl
add
mov
adc
int3
dec
lods
pop
and
in
movsb
dec
pop
mov
xor
mov
lods
idiv
mov
jbe
aas
fildll
push
or
xor
xlat
sbb
in
inc
and
lret
add
adc
clc
test
arpl
cmpsb
shr
push
enter
push
lret
cmp
adc
popa
or
sbb
shll
dec
arpl
in
cmp
jge
xchg
mov
mov
mov
movsl
cmp
repz
int3
sub
inc
popf
out
ret
ret
outsl
inc
inc
outsb
mov
enter
sti
adc
jge
mov
xor
ret
adc
stc
lret
in
out
daa
fs
rcr
cmc
call
mov
movsl
cmp
mov
dec
cli
sub
nop
mov
xchg
fdivrs
in
cmpb
xchg
mov
fwait
mov
inc
mov
in
loope
push
clts
jecxz
adc
rcrb
into
mov
mov
xor
push
inc
sbb
sbb
cmc
imul
add
lea
push
mov
sub
out
xor
pop
xchg
mov
sub
pop
pop
dec
sub
inc
mov
rcrl
sti
and
scas
popa
fnstcw
scas
pop
arpl
stos
push
cmp
jge
push
jae
int
pop
fdivr
pop
cmp
jge
add
das
push
or
data16
cmpsb
pop
jno
xor
jcxz
sub
sbb
out
adc
sarl
incl
rep
add
fdivl
and
shr
push
mov
or
mov
dec
push
mov
imul
loop
insl
inc
xchg
sbb
mov
inc
sbb
call
adc
push
or
mov
inc
lods
dec
pop
sbb
shll
outsb
mov
orb
xchg
pop
mov
mov
ljmp
movsl
nop
iret
movsb
pop
in
cmp
sar
stc
jnp
jp
push
xchg
out
stos
aad
cltd
xchg
mov
adc
push
clc
sbb
dec
jne
insb
push
jmp
jne
fmuls
std
shll
in
adc
sbb
aam
xor
push
add
sbb
push
dec
add
pop
nop
and
daa
mov
lds
subl
and
inc
adc
cmc
push
outsb
xchg
push
orl
stos
cwtl
loope
xor
and
fs
mov
or
std
sbb
ret
push
addb
mov
lock
add
ljmp
jg
dec
int3
rorl
xchg
or
or
cmp
mov
lret
mov
sahf
push
sub
push
jmp
push
iret
pop
sbb
shrb
test
jge
xor
test
jle
push
cld
push
ret
xchg
pop
inc
fs
loop,pn
inc
fisttpl
mov
pop
jnp
aaa
jecxz
mov
shrl
in
pop
pop
or
dec
xchg
inc
inc
mov
push
arpl
mov
mov
lock
shll
imull
cmp
add
scas
and
jae
mov
pop
mov
inc
iret
lahf
in
test
cmp
adc
push
lock
cmpsb
pushl
bound
xlat
xchg
add
jns
or
scas
jg
icebp
lock
jnp
adc
sub
cwtl
aam
dec
dec
mov
orl
and
repnz
out
mov
inc
mov
pop
es
inc
fisttpl
pushf
lret
add
jno
adc
mov
push
es
rcrb
mov
dec
or
xorb
lock
jne
sbb
cmpsb
movsl
rclb
push
imul
mov
in
stc
mov
mov
mov
jo
or
stc
inc
lock
inc
std
add
arpl
and
inc
add
pop
subl
mov
or
xchg
rcr
sub
test
insl
jnp
test
ja
stos
xchg
lds
iret
out
push
cwtl
xchg
outsb
fstl
xor
sti
fmuls
ljmp
pop
xchg
cmp
lea
inc
sbb
pop
ret
test
cli
scas
mov
mov
cs
dec
mov
mov
test
mov
sbb
mov
xor
add
mov
pusha
pop
pop
out
frstor
test
xchg
call
movsb
test
insl
in
mov
jae
call
ret
sbb
mov
sahf
jg
test
jecxz
dec
add
mov
cmp
pop
push
ljmp
add
pushf
push
mov
nop
add
fnsave
imul
aas
loope
testl
icebp
dec
shll
push
sub
pusha
sub
fdivrp
xor
pop
inc
push
mov
je
sub
adc
push
add
lret
xor
insb
push
scas
adc
pusha
dec
pop
mov
mov
pop
push
pop
and
int
push
xor
push
mov
pop
push
add
jge
and
test
xchg
int3
mov
ja
imul
into
das
dec
insl
icebp
sahf
loope
pop
mov
outsl
pop
repz
stos
sbb
fdivr
inc
les
adc
and
mov
movsl
jge
sub
loop
es
rolb
and
in
adc
fdiv
dec
and
mov
out
pop
sub
xor
in
or
stc
jo
mov
daa
adc
mov
rcr
pop
loopne
mov
xchg
push
sarl
aas
cld
jbe
test
push
fwait
jecxz
jo
nop
dec
arpl
ret
add
hlt
fwait
mov
ret
mov
xchg
push
rorb
cmpsb
aam
jno
lods
and
loop
out
xor
jo
or
and
and
shrb
xor
push
sbb
cmp
sahf
jb
inc
and
sbb
jl
xchg
lock
jecxz
imul
adc
sbbb
lret
push
sbb
ror
push
mov
faddl
insb
adc
cld
cmp
fmuls
and
arpl
ds
insl
push
push
cld
sti
sahf
mov
xlat
mov
test
ja
xor
jb
sbb
sbb
mov
rcrl
lods
inc
xor
mov
inc
dec
repz
pop
lcall
xor
stos
int3
add
jne
add
call
xchg
inc
ljmp
jo
push
shl
mov
mov
adc
or
pop
mov
add
ss
es
mov
mov
jnp
pushf
leave
leave
push
aam
rcll
mov
pop
sbb
adc
lret
dec
adc
pop
push
xchg
mov
and
mov
cmp
xchg
hlt
push
dec
inc
movsb
mov
scas
sbb
clc
pop
add
and
inc
xchg
lods
int3
adc
mov
call
test
int
arpl
adc
movsl
add
cmp
bound
roll
ss
or
mov
into
adcb
dec
in
lret
xchg
fisttpl
push
mov
push
add
ret
test
out
sub
adc
push
outsl
imul
mov
rcll
jo
add
jb
int3
call
adc
ja
fbld
test
imul
hlt
hlt
fisttpl
push
stc
aas
jp
push
inc
out
loop
iret
mov
std
cmp
jb
dec
je
sbb
xorb
add
dec
push
bound
adc
into
ficomps
add
lods
xor
jp
dec
sub
fwait
stc
fisubrl
je
out
fbld
jecxz
mov
xchg
addb
push
add
sub
push
dec
push
cmpsl
and
jmp
int3
push
mov
rolb
scas
jmp
cmp
cwtl
cmp
outsl
out
adc
mov
mov
call
cmpsb
fsubp
popf
inc
cmp
gs
out
mov
cld
inc
dec
in
scas
jb
sbb
adc
cli
xor
xor
aam
inc
aam
dec
adc
adc
sbb
jbe
jp
and
cmp
pop
push
shll
das
lahf
push
js
add
add
cwtl
sbb
scas
cwtl
popf
add
jne
cwtl
in
ret
sti
xchg
jle
adc
arpl
enter
mov
jp
ljmp
dec
bnd
mov
enter
sbb
and
mov
push
xchg
aam
cwtl
fdivrs
cli
mov
lcall
imul
mov
pushf
fwait
sub
les
xor
adc
ror
pop
in
adc
cmp
or
push
in
movsb
lock
shr
dec
adc
sbb
add
jns
fistps
xor
insl
inc
in
test
cs
jl
call
arpl
inc
int
push
je
jbe
mov
jo
cmp
les
jae
lcall
test
mov
push
mov
xchg
mov
jge
or
call
pop
ret
push
xor
dec
dec
in
sub
test
mov
arpl
cmpsb
scas
mov
jmp
lret
sbb
jne
add
mov
pop
xor
xlat
lret
outsl
cmpsl
cmp
sub
nop
add
cmpsl
fisubrl
cmc
xchg
test
jae
mov
dec
push
insb
daa
sbb
mov
adc
mov
movl
xor
in
jmp
lcall
mov
sub
test
jnp
and
int3
je
cmp
mov
jo
orl
into
mov
out
mov
testl
test
std
mov
popf
mov
add
cltd
add
imul
testl
rcll
xchg
out
aaa
sub
push
loope
fs
push
mov
cmpsb
pop
test
xor
fidivs
icebp
hlt
sahf
jle
loope
addr16
sti
mov
sbb
xchg
jae
jl
cmpsb
mov
sahf
mov
fwait
ret
ljmp
mov
das
mov
jp
add
xorb
mov
push
dec
int3
out
xchg
dec
sbb
icebp
add
mov
stc
ficompl
jnp
std
loope
jbe
mov
inc
orb
inc
sbb
call
in
movsb
pop
sbb
mov
es
jp
aas
dec
add
dec
cmp
nop
ret
pop
adc
sarb
inc
xchg
xor
dec
into
fldt
lock
add
dec
leave
inc
aas
test
inc
stos
jbe
dec
lret
cmp
adc
pop
out
js
mov
dec
mov
mov
imul
loopne
repnz
outsb
loopne
imul
mov
xchg
dec
pop
cmp
scas
in
jne
pusha
imull
jge
dec
xor
sub
sub
popa
aam
xchg
repnz
pusha
xchg
add
or
orb
cmp
jo
inc
gs
and
mov
loop
call
aad
xor
sbb
or
aam
test
loope
jecxz
fistpl
cmp
mov
xchg
mov
cmp
push
lcall
sti
stos
adc
into
bound
movsb
outsl
push
cmpsl
sub
push
pop
sbb
fdiv
pop
pop
sti
sbb
decb
mov
scas
or
mov
ljmp
and
popf
mov
cmovge
pop
iret
rorl
jge
nop
mov
dec
lock
mov
push
pushf
xchg
mov
or
scas
xor
fisttpl
push
mov
aas
push
int3
and
mov
pop
mov
or
iret
jns
mov
sub
jns
mov
dec
and
or
mov
cmpsb
xchg
jl
mov
shrl
enter
add
and
pop
out
xchg
mov
idivl
dec
cwtl
mov
dec
pop
mov
sarb
inc
shll
div
lods
mov
mov
mov
shrb
lcall
repz
pop
dec
ss
clc
lret
push
inc
dec
movsl
js
cld
pop
jp
ja
test
in
xorb
fs
sbbb
fs
xorl
xchg
ljmp
adcb
fiaddl
and
mov
adc
sti
jbe
enter
and
jecxz
fidivs
push
pop
pop
mov
cwtl
jnp
lret
push
negb
lcall
mov
and
mov
idivl
xor
mov
jmp
loop
sbb
scas
insl
lret
lea
stos
aas
pop
dec
jnp
es
xchg
add
xchg
pop
pusha
and
or
xor
fnsave
cmp
fucompp
push
js
sti
cmp
sbb
adc
lods
xchg
pusha
iret
cmp
xor
inc
lahf
jecxz
inc
xor
inc
push
out
xlat
rcll
test
and
icebp
scas
outsb
stc
in
xor
es
xor
mov
sahf
mov
lock
in
loope
xor
int3
push
fs
jecxz
std
pop
add
push
test
or
xor
dec
cmpb
add
ret
lods
shl
aad
outsl
pop
iret
pop
les
into
arpl
xlat
pusha
ret
sub
shll
xor
and
je
adc
inc
mov
jo
lcall
pause
add
adc
imul
push
das
test
sahf
jbe
cld
pop
scas
shr
sbb
or
cmp
insb
xchg
cmpsl
mov
jno
pop
jecxz
dec
clc
cld
or
scas
mov
hlt
call
cli
je
jae
mov
sbb
sub
mov
dec
movsl
cwtl
cmp
scas
test
and
and
add
mov
outsl
pop
cli
push
pop
add
enter
movsl
add
imul
stc
arpl
repz
and
pop
pop
das
cli
mov
rolb
push
pop
push
add
imul
or
iret
stc
cmp
inc
xchg
pop
inc
mov
xchg
sub
xor
testb
sub
lcall
and
xchg
movsb
jb
sub
sarb
xchg
daa
and
mov
stos
adc
push
outsl
and
shll
mov
xchg
std
cld
or
scas
pop
push
pop
inc
cmc
ds
sti
jb
in
xchg
xchg
fsts
xchg
js
mov
lds
sub
mov
xor
arpl
hlt
adc
std
aas
lcall
stos
scas
fldl
pop
adc
xlat
es
inc
lret
mov
popa
test
movsl
adc
push
push
mov
inc
loopne
sbb
or
lcall
clc
adc
sub
add
imul
dec
gs
das
pop
sub
dec
mov
inc
scas
cld
jae
inc
incb
inc
aas
push
mov
push
in
fwait
and
sub
push
or
and
outsb
sahf
fldlg2
call
out
repnz
inc
pop
pusha
pop
fists
mov
sti
jmp
subl
dec
imul
pop
mov
and
sbb
rcll
mov
xorb
mov
xlat
dec
ja
adc
cmc
adcl
insb
pop
stc
pop
sub
xor
lret
sti
pushf
adc
mov
out
dec
adc
xchg
lcall
xchg
jbe
push
ljmp
mov
jmp
or
mov
dec
mov
testl
dec
push
cmpsb
lds
call
pop
loope
lcall
in
and
mov
lods
dec
popf
xchg
test
in
int
les
dec
mov
popf
dec
push
mov
je
mov
push
ljmp
mov
mov
das
or
inc
sbb
cli
inc
not
hlt
cld
add
adc
sbbb
iret
data16
add
and
mov
mov
loope
mov
je
cmp
inc
gs
mov
inc
clc
xchg
inc
cld
lahf
inc
imul
leave
jp
jb
mov
mov
scas
pop
sub
cmpsb
sbb
xchg
imul
xchg
cmp
jb
divb
mov
mov
pusha
dec
pop
cmpsb
fcoms
sub
and
push
in
bound
mov
push
xchg
add
fs
mov
mov
mov
inc
mov
daa
frstor
push
cs
pop
or
insl
pop
ss
xor
pop
call
andb
mov
lock
pop
mov
insb
push
xor
shl
mov
out
mov
cmp
mov
gs
fcomip
out
jmp
or
sub
or
mov
dec
dec
sbb
and
pushf
lcall
push
mov
add
int3
xchg
sbb
decb
clc
test
xchg
mov
into
aas
pop
and
arpl
imul
js
push
jp
fs
lcall
inc
cmp
inc
cwtl
cmp
ret
nop
mov
pop
or
mov
jp
sub
pop
adc
cmpsb
cli
or
bound
jo
bound
popa
lret
loopne
jl
pop
dec
sbb
adc
mov
enter
mov
push
push
in
xchg
loope
lock
inc
inc
imul
xor
cmp
jge
andl
enter
xchg
fimull
or
pop
clc
inc
scas
out
lcall
popa
mov
jo
iret
cmpsb
aad
sub
lock
xchg
stos
loop
hlt
stc
cmp
sub
push
pop
dec
pusha
nop
sub
fcomps
jl
push
rcr
ret
inc
inc
test
stc
and
add
vpackuswb
outsl
daa
ss
cld
mov
imul
pop
mov
stos
out
fisttps
cmc
xorb
rorl
or
jmp
mov
aad
repnz
imul
cs
movsl
jl
ret
sub
movsb
inc
jnp
mov
lea
aaa
pop
aad
ss
aas
push
fistpll
fisubs
mov
sbb
loopne
jecxz
shrb
das
cwtl
ret
lods
stos
test
lret
ret
bound
xlat
lret
fisttpll
std
or
pop
pushf
push
or
add
mov
xchg
mov
sub
add
imul
lea
sub
out
aas
jb
ds
dec
in
fwait
dec
in
mov
pop
das
mov
xor
jb
cmp
cmpl
rcr
jnp
add
pop
mov
xchg
cmp
imul
sub
push
in
imul
sub
and
lods
ret
in
fadds
cmpsb
into
fisttps
movsl
sbb
inc
ss
add
mov
out
mov
fcoml
mov
idiv
cmp
ljmp
scas
xchg
fisttpl
xchg
in
out
insb
inc
cmp
pop
mov
xchg
push
mov
mov
mov
push
iret
lds
xchg
fwait
pop
push
fsubl
testb
scas
jmp
pop
add
ret
lock
sub
pop
cld
out
fdivs
pop
mov
rol
pop
sub
xor
mov
imul
mov
mov
out
pop
into
push
cli
xlat
or
mov
mov
out
add
pusha
xchg
inc
in
gs
and
fwait
movups
pop
loope
or
popa
lods
dec
and
or
loop
mov
movsb
jne
setns
aaa
mov
fs
xor
and
test
std
jo
loope
pop
iret
xchg
mov
leave
dec
and
in
data16
stos
jge
jl
mov
popf
mov
jecxz
cmp
popl
sub
call
dec
jne
daa
movsb
mul
xor
aam
sbb
xor
add
and
movsl
inc
mov
and
adc
ljmp
mov
or
fsub
push
add
sbb
aas
xor
mov
lods
adc
out
fists
mov
sub
sub
cmpsl
in
es
jge
cmp
mov
fildll
hlt
mov
rcl
mov
sbb
and
pop
jl
mov
insb
fs
adc
lcall
imul
jns
push
inc
pusha
jmp
iret
jl
xchg
imull
adc
dec
data16
jmp
xor
push
push
std
fs
shrl
loopne
push
sbb
push
leave
js
out
mov
push
lock
jecxz
in
push
pop
aam
mov
stos
mov
les
xor
les
sahf
int
or
call
es
pusha
mov
jg
fdivl
int3
in
sbb
cwtl
xchg
sub
sti
cmp
rorl
loop
das
pop
cmp
movsb
jmp
movsb
aad
ret
pusha
out
arpl
xchg
in
push
xchg
jge
jp
iret
orb
inc
sbb
call
out
outsb
sbb
push
jb
jp
xchg
mov
xor
push
and
inc
or
ficompl
lea
sub
rcrl
mov
add
mov
inc
mov
sti
jo
imul
dec
mov
and
or
popa
lods
loope
sub
mov
sbb
jmp
mov
adc
and
sub
out
adc
popf
add
mov
cmp
pop
pop
leave
sbb
jno
xchg
mov
divb
cmp
outsb
ljmp
loop
xchg
call
mov
inc
ror
sarb
jecxz
sub
fcompl
movsl
gs
jecxz
sbb
sbb
adc
fimull
jne
inc
adc
pop
xor
pop
add
cs
push
cmp
xchg
andb
mov
lock
stos
mov
iret
fbstp
ljmp
mov
mov
dec
adc
sub
mov
cmpsl
add
and
mov
lahf
cld
cmp
cmp
cmp
jbe
inc
ss
push
sbb
ret
mov
aam
cltd
mov
xlat
mov
jecxz
pop
sbb
pop
add
ss
sub
push
inc
cld
cmp
cmp
sarl
loopne
ficompl
loopne
fsubl
scas
add
sti
push
ds
pop
roll
das
xor
sbb
lds
pop
dec
fdivp
cmpsb
jg
cmc
xchg
mov
mov
outsl
cli
fildll
imul
stos
movsb
sub
and
into
xlat
fistl
mov
cmp
sub
mov
sub
jge
ja
mov
mov
cmpsl
fwait
mov
adc
out
lcall
gs
stc
sub
lds
in
imull
xlat
mov
cld
shlb
stos
cmp
cli
popf
test
shl
and
jmp
or
lret
cmp
arpl
in
push
icebp
xchg
mov
xor
push
shll
mov
sbb
jl
add
xchg
pop
adc
mov
stos
cmpsb
xchg
pop
mov
out
mov
push
test
fsubrs
cmp
cmc
enter
outsb
test
scas
dec
xchg
ret
xchg
shlb
stc
dec
lret
clc
xchg
sub
sub
xor
xorl
xor
sub
mov
and
xchg
ds
cmpsl
das
dec
jns
lahf
test
fwait
movsb
mov
lcall
fwait
arpl
shlb
jne
dec
test
test
pushl
fcom
int
xor
negl
sub
dec
and
and
sbb
dec
mov
lods
add
xchg
sbb
fcoms
jmp
sarl
sub
xacquire
movsb
xor
cs
int
sbb
popa
adc
pop
dec
adc
xor
enter
and
jmp
daa
or
lea
xchg
loop
cmpl
dec
outsb
lret
fldcw
rolb
inc
aam
push
mov
shr
fmul
js
sbb
jne
mov
mov
push
and
fbld
adc
dec
into
adc
orl
jecxz
xorl
std
leave
push
inc
push
and
inc
xlat
inc
nop
adc
push
stos
test
adc
lret
pop
jo
arpl
mov
packssdw
xchg
mov
sbb
out
cmp
aad
mov
jmp
jge
xorb
push
sub
stc
xor
popw
popf
push
test
mov
xchg
iret
cmpb
ret
out
sub
shrb
arpl
mov
or
or
xor
or
scas
test
icebp
mov
cli
and
and
mov
popl
inc
inc
push
push
mov
inc
xchg
adc
dec
stos
ret
jmp
pusha
xchg
iret
xchg
push
movsb
and
rolb
jmp
pop
push
mov
test
scas
mov
mov
repz
adc
aas
pop
adc
insb
andb
adc
or
pop
inc
dec
pop
cmp
cmp
adc
stc
push
mov
and
mov
mov
xchg
push
imul
mov
adc
mov
clc
inc
push
jmp
fs
loop
and
int3
clc
in
sbb
subb
dec
in
xchg
fcoms
dec
add
test
and
pop
jmp
aaa
out
outsb
inc
xchg
pop
sbb
mov
insb
imul
lea
repz
sub
push
dec
or
cltd
lcall
lds
hlt
aaa
mov
jge
xchg
fadd
mov
repz
jb
cmp
mov
sub
sub
idivb
outsl
lcall
or
xor
ret
lret
and
in
add
outsl
inc
push
add
adc
ret
xchg
xor
sbb
repnz
add
sub
sub
inc
sub
jbe
cld
dec
cmp
enter
inc
push
jno,pt
mov
sub
out
loopne
testl
push
dec
idivb
sbb
add
xchg
test
and
out
ss
mov
out
lret
sub
mov
and
clc
lds
or
jnp
xor
fidivs
test
fs
fcoml
out
stos
xor
test
jns
movsb
sbbl
out
push
mov
fsub
and
dec
jp
push
mov
inc
rcr
addr16
push
ja
sbb
sub
mov
in
and
arpl
jne
xor
sbb
out
int
stc
je
cmpsb
add
lea
jmp
bound
arpl
cmc
arpl
jae
adc
stos
xchg
xchg
xchg
inc
mov
loop
sbb
fyl2xp1
hlt
cmp
push
jo
jne
fidivs
pop
sti
aas
mov
mov
outsb
dec
cmp
arpl
xchg
mov
test
xchg
xchg
pop
sti
jbe
push
aad
pop
sub
into
mov
ds
jae
add
push
inc
adc
dec
lock
fwait
sub
jl
arpl
lods
imul
mov
fs
xchg
mov
addr16
jp
aas
daa
mov
adc
fiaddl
fsub
mov
jp
jne
xor
push
call
sti
inc
jle
cmc
gs
add
scas
or
sahf
add
lock
xchg
ret
adc
add
xor
cmp
mov
sbb
shr
mov
adc
add
lods
push
adc
lret
rorl
mov
xchg
pop
repnz
pop
xchg
clc
pop
xor
add
cwtl
jb
cmp
mov
stc
jae
push
xchg
ja
xor
mov
insl
test
mov
mov
xchg
adc
xchg
mov
aaa
or
xchg
push
bound
xchg
cmp
out
aaa
repnz
addr16
jecxz
mov
adc
call
push
out
mov
cmpsl
arpl
addl
push
jae
ljmp
cltd
loopne
out
std
cmp
outsl
sbb
mov
dec
jne
ljmp
and
sbb
sahf
mov
int
xor
lods
mov
push
aas
xchg
and
arpl
rcll
in
test
shll
push
std
jle
ljmp
bound
xor
stc
ja
cmp
mov
aas
inc
sub
inc
imul
int
push
sub
dec
dec
xor
jl
and
lret
lret
adc
pop
mov
mov
aas
imul
and
sbb
push
clc
lods
sub
nop
test
adc
add
ljmp
push
clc
xchg
inc
mov
jnp
xchg
je
cmp
xor
mov
notl
fdivp
jb
cmp
or
je
inc
bound
push
aam
xor
xchg
cli
call
insl
dec
lds
jg
pop
les
bswap
mov
xor
or
aad
sub
mov
push
dec
lahf
jns
mov
jg
mov
jg
push
lods
push
or
dec
mov
pop
ds
test
addr16
xor
movsl
andb
repnz
bound
pop
nop
mov
dec
dec
je
push
jno
mov
dec
pop
xor
sub
dec
mov
test
jns
ds
or
push
nop
aas
lods
aaa
mov
dec
fwait
jo
or
scas
mov
sbb
jne
mov
lds
scas
mov
jo
pusha
sbb
sub
inc
cmp
mov
mov
loopne
addr16
mov
jae
sub
rolb
xchg
or
popf
pusha
loopne
lret
add
push
test
mov
mov
mov
xchg
insl
mov
rcl
inc
xor
cmp
pop
testl
out
mov
ljmp
and
out
pop
jne
cli
mov
xorw
fucomp
loop
in
stc
jb
outsb
dec
aaa
fcomi
sahf
repz
xchg
lods
insb
sbb
mov
sub
cmpsl
pop
sub
divb
mov
and
inc
and
mov
mov
fnstsw
rorl
je
jns
out
paddsw
popf
add
mov
pop
cmp
idivb
jg
sub
fldenv
pop
dec
stos
sar
sbb
jmp
inc
add
adc
into
adc
pop
sbb
rcll
sbb
cli
xor
cmpb
dec
xlat
xor
mov
rcrl
xchg
push
orb
inc
rorb
fstpl
es
aas
test
mov
negb
jne
inc
xchg
leave
outsb
sbb
or
adc
and
scas
jg
lds
sub
icebp
sbb
and
scas
lret
mov
les
sbb
int
inc
xor
sbb
sbb
outsl
mov
or
pop
insb
pop
int3
jno
in
inc
mov
je
filds
mov
and
insl
shlb
pop
ja
fistpll
cmp
imul
pop
mov
fst
jmp
aaa
popw
push
mov
push
cmp
fprem
insb
lahf
loope
out
inc
repnz
fildll
add
imull
pop
xchg
shlb
xchg
test
rcrl
aad
nop
loop
roll
pop
dec
mov
popf
cld
adc
sbb
sub
fldpi
push
das
dec
cmp
cmc
dec
xchg
xchg
mov
icebp
test
adc
rcrb
mov
push
lods
pop
je
stos
xchg
push
xchg
adc
pop
mov
jl
cmp
mov
ficompl
scas
in
sub
pop
xchg
dec
scas
adc
ficomps
in
test
ret
fsubs
mov
es
add
ds
xchg
inc
pop
shrb
push
mov
add
lds
sar
push
mov
dec
dec
jns
inc
js
pop
xor
or
aaa
rolb
push
notb
mov
jno
cmp
ret
push
inc
daa
int
int3
pop
push
add
jl
sbb
mov
add
inc
or
inc
dec
fdivrl
cmp
fwait
inc
jl
dec
pop
xchg
aaa
outsl
mov
mov
in
jle
sarl
ja
dec
gs
clc
jbe
cmp
mov
iret
cwtl
jle
je
jle
mov
mov
adc
iret
lds
and
shrb
jnp
sbb
movsl
pop
popa
lods
add
mov
push
adc
movsl
fcoms
and
mov
lcall
mov
rorb
nop
lds
xchg
and
fwait
xchg
mov
mov
jmp
inc
jmp
push
iret
jmp
push
mov
pop
addl
ret
out
cmp
mov
push
pop
cmp
xchg
hlt
in
jg
jg
mov
in
sub
lods
iret
add
call
lea
fldenv
and
punpckhbw
xchg
xor
mov
and
mov
hlt
cmp
fisttps
push
or
cld
push
xchg
lcall
cwtl
in
xchg
jmp
add
fxam
xor
ret
mov
clc
subb
ljmp
push
pop
insb
cltd
lods
fcoml
or
outsl
cltd
adc
adc
and
jb
icebp
jg
lcall
pop
loop
cmpsb
subl
inc
and
mov
jge
mov
sbb
xor
lock
sub
xchg
hlt
stos
jne
xor
xlat
dec
push
repnz
das
cmp
out
cli
sti
pushf
sbb
divb
rorl
or
rcll
push
aam
in
loopne
loop
movsl
push
dec
push
std
sti
jo
mov
pop
sbb
cmp
mov
in
out
pop
enter
mov
jl
ss
mov
cwtl
mov
fisubl
sub
int
jmp
push
inc
andl
sbb
push
and
cmp
sub
test
lcall
lcall
or
aaa
stos
es
lds
and
cltd
xchg
mov
adc
mov
add
jo
int
js
and
jmp
pop
roll
jge
test
jge
pusha
inc
xor
xchg
ja
pop
cld
and
inc
mov
loopne
or
leave
addb
bnd
test
aad
adc
push
jmp
sti
sbb
xlat
shlb
mov
stc
adc
xchg
push
test
mov
sbb
fsubl
xor
xor
loopne
cwtl
ja
mov
out
loopne
mov
aad
jmp
xchg
xor
add
frstor
push
fwait
leave
ss
and
mov
aaa
xor
cmp
int
test
jp
imul
mov
aad
je
and
and
and
filds
or
repz
sub
hlt
cs
and
lret
movsb
jne
inc
vpmacsww
shl
divb
dec
in
or
add
jbe
and
rcr
or
test
mov
add
xor
mov
jl
repnz
xchg
or
add
or
cmp
xchg
adc
sbb
mov
negl
lods
jb
and
add
jb
jno
cmp
jne
mov
jp
cli
jb
mov
cwtl
cmpsl
or
jb
adc
stc
fdivrs
sbb
aaa
mov
andl
js
aaa
iret
sarl
jge
add
js
test
pusha
les
call
sbb
cmpsb
popf
xchg
jge
jbe
in
in
ret
leave
and
cmp
dec
pop
ror
rol
sub
call
push
setb
rorb
imul
jns
jmp
das
push
fs
aaa
inc
and
iret
inc
cmc
xchg
sti
fcoms
jbe
xor
test
push
out
popl
stos
dec
mov
mov
sub
call
cli
cmpsb
adc
mov
xor
adc
inc
xchg
jo
jno
imul
add
dec
movsb
mov
int3
imull
addr16
adc
xchg
xor
push
xchg
jns
pop
pop
mov
into
ret
push
jp
je
push
aas
pusha
sub
sub
cwtl
scas
pop
in
out
leave
xor
loop
dec
jmp
sarl
push
das
pop
add
or
fs
int3
lea
pop
fists
icebp
and
xor
out
loopne
scas
mov
aad
jp
push
leave
pop
out
test
outsb
testl
adc
ret
pop
push
gs
xchg
fcoms
or
adc
ds
aaa
push
xor
inc
call
mov
dec
mov
dec
mov
rol
test
pop
cld
insl
hlt
add
out
xor
rclb
subb
xchg
adc
jbe
adc
imul
repz
stc
lods
outsb
daa
mov
ss
movsb
and
aas
lcall
mov
add
push
cwtl
lahf
outsb
stc
bound
shlb
out
pushf
lret
push
div
xchg
xchg
lret
lahf
decl
out
fsubl
pusha
nop
cmpl
or
jbe
pop
xchg
clc
mov
sub
mov
pop
in
cltd
cmpsl
or
xchg
and
jp
iret
das
jl
fdivrs
mov
push
scas
add
packsswb
jge
inc
fistpl
sub
sub
fdivs
mov
pop
pushf
fbld
into
sub
cwtl
push
repnz
fmuls
aas
push
popf
push
jmp
mov
mov
mov
or
adc
loope
mov
loope
aad
ss
test
adc
sub
mov
dec
movb
leave
test
inc
xor
mull
stos
push
xchg
push
sbb
pop
mov
loopne
sbb
jb
jne
mov
or
es
addb
dec
jecxz
add
icebp
mov
sahf
mov
in
adc
rclb
mov
adc
or
cltd
in
mov
xor
adc
push
lea
mov
or
and
cmpsl
lods
jnp
sub
cmp
adcb
int
mov
fstl
mov
pusha
push
imul
xorl
fldl
ds
arpl
push
push
rorl
mov
mov
dec
scas
xchg
inc
push
cmp
pop
mov
push
nop
mov
ljmp
repz
in
int
jbe
jg
push
xchg
lods
push
pushf
cld
xchg
rcr
pop
sahf
xchg
fwait
dec
jg
sbb
cs
cmp
xor
sbb
mov
add
sbb
movsl
jnp
fmuls
out
pop
mov
pop
dec
sbb
mov
jge
sbb
sbb
push
outsb
pop
fldt
inc
hlt
lret
scas
and
or
shlb
ljmp
sbb
sub
sub
mov
out
inc
idivl
mov
and
insb
sub
js
test
jge
cmp
aam
lret
rol
mov
outsb
movsl
hlt
jge
shrl
jb
sub
xchg
test
mov
xchg
les
sub
mov
enter
dec
test
xor
cmp
insb
add
stos
outsl
inc
adc
sub
pop
shl
push
add
pop
outsb
in
add
stos
mov
and
xchg
lea
loop
add
loopne
mov
mov
into
test
repz
push
xchg
lahf
push
adc
orl
adc
pop
addb
cmpb
jp
xchg
je
test
xor
subps
cmc
fs
hlt
push
jecxz
cs
xor
pop
sub
jg
jo
mov
xor
jns
lcall
aam
shl
lock
repnz
jo
cwtl
movsb
and
mov
push
stc
les
rcl
pop
loope
out
js
or
mov
mov
sub
inc
xchg
sti
sub
adc
dec
adc
xlat
cmpsb
mov
sbb
jp
dec
cwtl
stos
and
dec
jmp
add
adc
mov
xchg
mov
aam
jge
je
and
es
cmpsb
add
scas
adc
mov
into
hlt
mov
xorb
pop
daa
ror
mov
add
gs
sbb
xchg
push
imul
clc
push
xchg
paddq
loope
and
fidivs
fnstcw
std
cmpsb
sub
mov
fmull
sahf
xor
pushf
cwtl
sub
xchg
mov
xchg
cmp
pop
jg
jb
call
mov
dec
push
mov
outsl
cs
jmp
movsl
hlt
mov
or
sbb
cmp
int3
cli
imul
dec
lods
sbb
dec
mov
ret
in
mov
add
sub
mov
scas
aad
mov
in
sbb
jo
add
stos
lret
test
and
dec
call
in
lret
jo
mov
arpl
push
inc
test
int
mov
mov
cltd
aad
mov
stc
and
and
sub
out
stos
out
ret
ljmp
xchg
sahf
xchg
and
push
lret
mov
dec
add
mov
ja
push
ds
push
dec
add
pushf
in
ss
lds
mov
xchg
inc
insb
dec
mov
inc
xor
loop
mov
mov
jnp
sbb
jmp
stc
sbb
mov
mov
fcmovne
jecxz
sub
movsl
push
lret
clc
cmp
push
mov
sub
fwait
mov
lods
sahf
idivl
mov
sbb
cmc
repz
mov
sbb
test
cmp
cmpsb
pop
outsb
mov
cmp
inc
mov
mov
lahf
xchg
adc
movsb
dec
and
ja
inc
or
pop
sbb
loope
call
cli
and
lcall
fldl
jns
xchg
test
mov
fstpt
data16
add
and
lret
push
xchg
gs
mov
imul
psubb
ret
aad
test
sub
stos
ret
jle
stos
pop
push
aas
mov
jl
mov
ds
push
jmp
mov
fcmovu
int
xchg
inc
imul
pop
hlt
jns
sub
out
das
dec
adc
bound
push
or
cmc
hlt
mov
sub
inc
nop
jecxz
mov
xchg
std
mov
fistpll
outsl
sub
add
in
push
ss
lds
cmpsl
ja
iret
test
adc
mov
push
adc
aad
lret
add
nop
mov
jge
jle
jmp
out
repz
add
loopne
jge
pop
dec
cld
insb
jae
outsl
sbb
icebp
lcall
sub
inc
lcall
add
imul
stc
aad
jno
and
hlt
out
mov
sub
push
cwtl
inc
add
mov
push
add
mov
incb
dec
xchg
inc
jnp
addb
jo
insl
dec
jge
add
jge
adc
jnp
fnstcw
into
lcall
cmp
outsb
pushf
out
pop
dec
mov
sbb
out
push
adc
insb
dec
mov
mov
js
fistpll
test
outsl
or
xlat
int
add
scas
ficomps
std
lret
fbstp
inc
xchg
sbb
lret
xchg
pop
dec
aaa
icebp
stc
icebp
aad
mov
push
test
movsb
push
push
pop
xor
add
shll
ror
dec
cmp
bnd
mov
lahf
add
mov
repnz
fnstenv
clc
jg
dec
hlt
jl
pop
sub
mov
lods
incb
push
daa
sti
movsl
ror
iret
rorl
mov
icebp
jns
out
mov
add
daa
sbb
dec
adc
mov
adc
inc
test
shl
bound
cmp
add
int
xchg
inc
data16
rcl
popf
xchg
lret
jno
loop
repz
scas
nop
nop
insl
call
mov
sbb
aam
xchg
fdiv
nop
sbb
sub
cmp
fnstenv
popf
push
lods
mov
xor
inc
pop
sbb
test
iret
je
clc
mov
pop
and
cmp
and
xchg
or
lcall
bound
mov
js
push
dec
pop
enter
aaa
sub
cmpl
jecxz
sbb
add
loope
sub
mov
enter
sub
in
mov
test
jecxz
or
push
cmpl
and
leave
aas
cli
xchg
aas
adc
xchg
pusha
mov
loop
out
iret
dec
shlb
xor
mov
pop
pop
mov
flds
repnz
inc
ret
push
cmp
ret
fdivl
popl
xchg
cltd
dec
and
hlt
adc
xchg
into
dec
mov
dec
xchg
pop
pusha
in
dec
adc
sbb
imul
lods
mov
xor
out
test
mov
mov
pop
add
sub
xchg
jae
ss
inc
in
inc
pop
push
xor
sbb
lcall
pop
dec
popa
loopne
daa
xor
mov
add
negl
pop
mov
movsl
clts
sub
fnsave
aas
dec
dec
addr16
xchg
mov
in
adc
inc
xor
pop
and
ljmp
cmp
enter
xchg
idivb
sbb
push
sub
out
fucomp
push
pop
xchg
mov
jge
and
clc
popa
push
out
or
push
jl
test
inc
push
mov
xchg
int3
push
or
icebp
bound
mov
dec
cmc
mov
or
loop
test
pop
lahf
jmp
push
sarb
ljmp
cmp
mov
inc
cmp
outsl
push
pushf
jecxz
mov
fcompl
cmp
push
lock
or
push
or
aas
fwait
xor
fwait
orb
mov
pushl
in
or
lds
fmuls
popa
jg
mov
push
setp
in
pusha
daa
movsb
adc
rcll
and
inc
or
mov
fdiv
mov
pop
jno
add
push
add
rolb
xor
pop
push
inc
mov
cmc
sub
mov
lcall
std
jg
cli
dec
scas
sub
jmp
loop
cs
inc
lods
inc
icebp
mov
sarb
jge
xor
loop
mov
jno
xchg
mov
inc
aam
lahf
je
sbb
inc
popa
jno
cmp
push
addb
pop
mov
daa
push
je
lcall
push
hlt
shll
mov
cmp
leave
cmpsb
stos
adc
arpl
int
jae
shl
inc
enter
add
and
push
cmp
xchg
lret
inc
adc
test
inc
mov
mov
pop
adc
cmpl
out
fcoms
xchg
cmpb
lods
test
call
jbe
into
xlat
fdivr
addb
notl
sub
pop
sbb
xor
and
movsb
sahf
mov
add
mov
fs
test
fildl
sbb
sub
cltd
push
mov
push
outsb
mov
daa
sbb
shlb
mov
add
clc
test
inc
or
test
iret
lret
hlt
pop
lcall
mov
push
shufps
std
mov
sahf
inc
or
sbb
in
dec
js
mov
ss
leave
loope
add
repz
cmp
or
sub
jmp
psubd
testl
cmp
loope
inc
ret
scas
cld
mov
mov
fldl
cmp
lods
mov
imul
or
push
adc
iret
dec
pop
adc
push
mov
mov
adcb
faddl
sar
les
mov
ja
or
scas
mov
lea
jne
fisttpl
fidivs
push
mov
jp
ret
nop
popa
mov
push
and
loope
inc
push
sub
and
sbb
mov
xor
sub
cwtl
fiaddl
fldl2t
aam
mov
sbb
pop
loopne
icebp
fistpl
xchg
fcompl
adc
sub
push
inc
cmc
fnstcw
fdiv
lcall
popf
xlat
sub
jecxz
jae
je
cmp
push
stc
mov
sti
movsl
inc
xor
and
mov
pushf
jp
push
inc
inc
test
pushf
rcrb
popf
add
inc
dec
sbb
mov
jae
out
mov
jno
ljmp
dec
lahf
gs
ficoml
cmp
gs
xchg
pop
adc
aad
test
or
adc
std
lahf
mov
sub
cld
jl
xbegin
jge
or
bound
cwtl
das
outsb
std
push
jo
sbb
xchg
imul
mov
push
test
mov
or
or
add
pop
mov
sub
pushf
push
repnz
popf
xor
pop
xor
shrb
add
inc
imul
or
je
and
addr16
sarb
push
mov
fs
xchg
mov
clc
add
cmp
ret
test
fcmovu
testl
andb
test
xor
lea
adc
mov
out
or
enter
mov
adc
out
push
fcomps
adcb
rcrl
mov
mul
adc
dec
cmp
stos
pop
xor
idivl
imul
mov
xchg
dec
out
mov
imul
mov
mov
prefetcht1
test
or
add
mov
fwait
mov
fwait
leave
cmp
out
xchg
ljmp
fisttpll
cli
add
les
mov
and
dec
outsb
xchg
sbb
cltd
mov
pop
add
fsts
push
jno
push
popf
sub
mov
fiadds
cmp
pop
clc
pop
jb
mov
push
mov
dec
ret
add
arpl
mov
clc
je
xchg
enter
jg
lea
cmp
and
cltd
or
loop
add
sub
and
jg
repnz
jmp
inc
mov
mov
daa
jo
js
xchg
loop
lock
lret
fistpll
push
out
push
xor
shll
mov
jecxz
or
jp
xchg
mull
out
or
sub
dec
jl
imul
stos
xchg
and
addr16
inc
mov
inc
mov
jne
mov
cmp
jg
mov
add
ljmp
mov
mov
add
jno
pop
dec
nop
mov
roll
mov
ljmp
mov
and
cmp
cmp
pop
jp
and
imul
mov
dec
sbb
jbe
aad
cmp
and
testb
inc
jp
dec
xchg
mov
adc
lret
adcb
lret
mov
test
mov
push
sbb
jp
pop
and
aaa
xchg
cmc
mov
inc
shll
cld
push
out
cmp
fcomps
jb
fidivrl
mov
add
fbstp
cmp
ficompl
xchg
pop
add
cmp
mov
pop
xor
das
call
mov
sub
mov
shll
mov
jle
cs
or
cmpsb
pusha
lea
daa
enter
jmp
jbe
sbb
jne
das
andl
sbb
mov
ret
fisubrl
cmp
sbb
lods
dec
movsl
outsb
inc
cmp
dec
and
mov
add
pop
add
daa
rolb
xor
scas
mov
adc
pop
sub
xlat
or
mov
rcll
mov
sbb
jp
aaa
shrb
mov
out
lock
and
pop
xchg
jmp
ja
xchg
sbb
mov
loop
add
shlb
add
sarb
lcall
out
mov
jno
fwait
mov
or
push
or
rcll
mov
or
sub
xchg
jbe
int
and
mov
sub
jns
hlt
movsl
clc
mov
in
pushf
ds
leave
xchg
repnz
mov
inc
jmp
gs
fwait
arpl
mov
adc
adc
and
pop
jmp
add
stos
ja
sbb
mov
or
js
out
sarb
push
jge
sbb
test
fcmovu
pop
test
add
aaa
ficoms
jle
cs
ja
jno
sarl
shrl
add
inc
or
sub
in
aad
dec
push
sub
mov
add
or
inc
cmp
lea
sbb
pop
mov
cld
inc
inc
xor
mov
mov
xchg
cwtl
orb
xchg
repnz
ds
sub
jmp
icebp
pop
xlat
test
cmp
cmp
nop
mov
ds
mov
mov
pop
add
xor
pop
repnz
lock
jo
bound
mov
pusha
popf
cmp
push
ljmp
adc
push
push
stos
and
cmp
and
stos
inc
call
xor
push
and
add
pop
push
test
ret
sub
add
mov
xchg
stc
gs
mulb
lea
or
addl
sub
mov
outsb
bound
jne
inc
jge
jmp
inc
sub
cmp
adc
or
das
xchg
or
in
cmpsl
xor
mov
jnp
cld
icebp
sbb
enter
enter
xchg
xor
mov
das
ss
sbb
jp
sbb
outsb
add
mov
cmpl
jmp
je
fstpl
in
aam
adc
iret
fdivs
cmp
inc
and
add
mov
xchg
mov
dec
or
cmpsb
loopne
lret
lods
daa
lea
sbb
shrb
push
into
icebp
cmp
xchg
arpl
xor
mov
mov
int
mov
sub
cmp
mov
clc
ret
push
or
cmpsl
mov
mov
hlt
sub
jnp,pt
xlat
ja
sub
inc
fcoms
out
adc
ret
mov
shl
jecxz
mov
and
out
push
add
lcall
xchg
popf
in
gs
push
inc
mov
dec
adc
xor
inc
test
insl
cwtl
daa
ljmp
aam
fsubs
push
jns
jb
aaa
add
jo
dec
add
negl
mov
inc
push
xor
push
or
pop
push
mov
movsb
pop
mov
add
push
rorl
mov
inc
xchg
imul
xor
out
jmp
xchg
mov
push
outsl
insl
mov
repnz
js
fs
insl
jns
mov
gs
out
in
add
adc
gs
mov
jmp
cli
xor
pop
jge
idivl
leave
mov
adc
enter
mov
jno
add
pop
je
pop
movsb
mov
add
push
sub
push
sub
dec
adc
movsl
mov
aas
xchg
cld
and
ss
in
test
mov
pop
cmp
dec
mov
or
in
decb
mov
and
loop
inc
fisttpl
js
add
push
fsts
ja
cmc
add
jo
adcl
and
dec
sbb
xor
adc
mov
jle
cmpsb
pop
dec
add
idivl
movsb
into
add
inc
push
bound
arpl
scas
cli
fisttpll
test
dec
adc
fmull
in
rcrl
ja
sbb
in
lcall
dec
adc
data16
mov
xchg
mov
pop
adc
and
jb
enter
test
leave
inc
push
cli
bound
ds
lahf
xchg
lcall
scas
stos
outsl
mov
xor
mov
clc
or
testb
movsb
dec
and
sbb
mov
iret
cmpsl
scas
cmp
jp
inc
jg
sbb
shl
in
pop
xor
xchg
or
test
aam
xor
and
cmp
xchg
aam
mov
mov
andb
mov
mov
sbb
aas
xchg
pop
xlat
pop
sbb
sbb
xchg
cmp
or
mov
lock
jp
mov
cmp
push
mov
push
add
cmp
int
popf
inc
movsb
out
pop
jg
je
pop
mov
pop
out
cmc
mov
jl
int3
xchg
inc
lret
add
test
lods
mov
inc
fstl
les
add
shlb
test
push
jae
rcll
adc
pop
xchg
jae
mov
sahf
add
sbb
sub
mov
push
jge
rcll
out
pop
mov
cmpsb
push
ror
out
leave
movsl
jmp
push
xchg
push
sub
fisttpll
sbb
and
out
add
sbb
notl
push
mov
push
ljmp
inc
push
dec
add
mov
arpl
lcall
jge
icebp
inc
subl
cmp
lea
or
jb
sbb
popf
adcb
inc
xchg
mov
inc
imul
sbb
outsb
pop
test
fs
ret
dec
pushf
divb
push
stos
and
out
orl
lcall
xchg
stc
sub
nop
and
add
push
lock
mov
fimull
inc
xor
or
pop
mov
and
cmpsl
jge
mov
outsl
pop
xchg
movsb
mov
mov
pop
andb
and
pop
pop
adc
adc
push
pop
stos
xor
test
lea
push
nop
in
mov
call
aad
fcmovu
imul
enter
call
sub
push
lods
pop
mov
les
repz
and
jmp
sbb
inc
out
test
or
jnp
ret
and
pop
xor
negl
cmp
rcll
xchg
into
and
mov
mov
pop
pop
xchg
mov
sub
push
int
xchg
mov
sti
popa
shrb
push
insb
and
fsubrs
rolb
dec
add
pop
sub
pop
int3
mov
mov
mov
dec
sub
dec
in
mov
adc
mov
mov
rol
push
dec
lods
cmpsb
jg
fisttpl
mov
sub
mov
popa
pop
sub
mov
add
mov
sub
mov
push
inc
lret
adc
jno
mov
or
mov
repnz
jge
jl
out
into
mov
pop
movsl
stos
aaa
and
mov
xchg
lods
inc
fiadds
lcall
adc
gs
stc
repnz
lock
and
cltd
xchg
mov
lea
out
cmpsl
pusha
jp
adc
sub
cmp
lret
out
push
jno
and
cld
scas
hlt
outsl
outsl
cmp
jbe
andl
pop
mov
fisttpll
jo
rorl
xor
rolb
movsl
jns
cwtl
in
or
ret
pop
test
mov
lock
sbbb
sbb
sub
fiadds
add
pop
repnz
xchg
mov
mov
repz
jmp
jmp
xchg
or
sbbl
es
push
push
aad
cwtl
xor
adc
mov
cs
adc
lret
add
popa
jnp
faddl
lods
rcll
lret
sub
loop
push
adc
mov
data16
mov
outsb
sub
sub
add
mov
fwait
push
and
loopne
sub
lret
arpl
jb
pop
cmp
adc
scas
aam
sbb
and
pop
and
insl
cltd
cltd
in
dec
in
arpl
fildl
mov
mov
inc
mov
fmull
sahf
cmp
scas
in
ljmp
mov
push
ret
fadds
inc
cmp
sbb
jbe
push
and
mov
sub
sti
js
movsb
loop
into
out
int3
arpl
jae
fstpl
and
pushf
arpl
jg
xchg
cmp
arpl
sub
lods
jae
jo
or
ret
xchg
in
into
jae
cmp
inc
push
repnz
scas
mov
insl
or
xchg
jns
in
pusha
in
mov
fwait
test
jecxz
daa
adcb
mov
mov
push
dec
jne
fstpl
jns
les
daa
sarb
jmp
imul
popa
inc
aas
mov
in
lods
add
dec
fmull
xchg
adcb
adc
lret
stc
add
imul
jmp
mov
xchg
xchg
repnz
ja
mov
mov
icebp
sbb
jno
xor
rolb
inc
push
xor
rcrl
xchg
adc
fisubrs
mov
bnd
arpl
push
or
aam
xchg
sub
cmpsb
aad
cmc
dec
xor
call
dec
sbb
lods
cmpsl
popa
stc
sub
lahf
arpl
add
pop
pop
mov
cmp
xchg
inc
out
leave
inc
mov
jnp
jp
insl
dec
hlt
mov
add
negb
adc
int
push
mov
int
mov
pop
cmp
fs
or
je
pop
out
adc
jnp
inc
lret
cltd
fldl
mov
and
and
rolb
ret
xor
aam
inc
adc
iret
sbb
mov
pop
mov
dec
lea
push
xor
imul
inc
cmp
mov
push
ret
ret
adc
flds
mov
pop
lea
out
push
int
ljmp
out
stos
testb
pushf
cmpsb
and
iret
pop
push
stos
add
inc
mov
push
jbe
xchg
in
xchg
imul
mov
xor
imul
dec
push
push
jl
and
jae
pushf
mov
icebp
xor
mov
ja
lea
sub
dec
mov
lahf
lea
inc
xchg
jne
jno
jbe
lahf
lea
cli
addb
inc
dec
out
push
gs
and
mov
add
testb
push
pushf
in
dec
fs
nop
jg
sbb
mov
out
add
sbb
std
xor
fsubr
cld
and
push
or
loop
mov
dec
leave
xrelease
jns
int3
xchg
jns
jle
lahf
mov
cmp
icebp
fdivp
xor
mulb
adc
std
mov
pop
fisttpll
jbe
shrl
scas
sub
xlat
sahf
sahf
int3
push
add
sar
lahf
repnz
xchg
cmp
pop
pop
mov
popa
cmpsb
mov
and
xorl
js
mov
addr16
addr16
cli
imul
adc
pop
cmp
dec
pop
pop
adc
les
ljmp
arpl
test
mov
or
mov
jnp
in
adc
fnstsw
inc
lret
in
cmc
cld
xchg
jmp
mov
lahf
push
fwait
xchg
or
add
jmp
pushl
xor
out
adc
mulb
dec
cwtl
cmp
jecxz
adc
dec
es
test
mov
in
jno
lahf
pop
push
xlat
sti
ljmp
push
pusha
cli
rcrl
lods
sbb
ret
mov
dec
les
ds
jnp
inc
xchg
jnp
mul
fcmovnb
iret
cmp
xor
stc
or
dec
fdivrs
cmp
ljmp
or
add
ret
jecxz
sub
insb
stos
or
or
mov
cmpb
jb
mov
cwtl
mov
xor
jge
jns
mov
jne
inc
cld
sbb
jbe
jp
jns
imul
js
mov
push
sub
dec
cmpsl
jnp
les
sub
push
or
cmp
out
test
dec
sub
and
push
push
dec
test
test
aam
xchg
fisttpl
repnz
mov
or
pop
call
pop
lret
or
mov
sub
push
mov
mov
xor
and
lahf
aas
and
dec
jg
inc
fstpt
in
dec
adc
xchg
jle
xor
sbb
dec
jp
je
mov
dec
sub
scas
enter
adc
hlt
add
mov
call
mov
xchg
xor
and
sub
mov
pop
enter
dec
xor
je
pop
mov
inc
cmp
aas
aas
ds
jge
jecxz
loopne
adc
aad
xchg
cmp
xchg
mov
fists
jl
lock
test
lds
cmp
sti
divl
mov
das
test
inc
mov
js
jg
scas
testl
xchg
xchg
adc
push
ljmp
push
fcomps
rcr
fistl
inc
fdivp
sub
out
insb
dec
es
xchg
push
fdivr
and
or
insb
insl
push
xor
or
cli
fisttpl
loope
mov
xorl
push
lods
jmp
xor
sub
push
fsubrs
pop
test
pop
jl
insl
shll
mov
jne
or
jmp
dec
push
loope
xor
adc
aam
sub
jo
sbb
push
cmpsl
push
in
cmp
nop
mov
mov
sahf
iret
or
arpl
fidivrl
ds
dec
bound
gs
mov
and
out
jns
scas
jo
push
les
fstps
data16
mov
xchg
sahf
push
jns
cmp
pusha
inc
sbb
pushf
pushf
add
lods
cmpsl
push
repz
xchg
call
mov
add
and
test
dec
push
sbb
daa
mov
aaa
lcall
stc
mov
je
lea
cwtl
push
mov
mov
add
rolb
xor
and
xchg
mull
imul
sbb
loope
sbbl
and
xor
lock
add
and
aad
lret
in
lock
mov
xor
sbb
xchg
scas
adc
cmp
les
jmp
sbb
sub
shlb
clc
js
fadds
push
cmp
jg
mov
call
xchg
cmp
jno
aaa
sbb
and
out
stos
jmp
mov
data16
aas
pop
or
out
add
jp
xchg
mov
out
outsb
and
leave
iret
repz
lahf
bound
adc
pop
add
data16
jb
in
add
xchg
ljmp
aad
pop
ret
clc
addr16
or
and
and
push
fisttps
cs
ss
daa
out
dec
lea
inc
fdivs
pushw
and
hlt
jl
push
addl
mov
cmp
int3
int3
ret
pop
inc
int3
aad
mov
push
jmp
ljmp
mov
fisubs
push
sub
cs
mov
in
pop
adc
loope
mov
adc
mov
xchg
xor
sahf
insl
rorl
sti
out
pushf
xchg
ss
cmp
fdivl
dec
jge
sbb
and
lods
addr16
jecxz
or
cmp
out
outsl
repnz
add
iret
rcrb
push
pop
jmp
adc
mov
mov
pop
dec
popa
sbb
cmp
pop
lret
xchg
lahf
push
mov
inc
sarl
aad
jp
dec
sub
xchg
mov
lock
and
sub
bound
add
aas
sbb
fwait
and
sbb
stc
jns
pop
lahf
leave
cmp
scas
fwait
mov
aas
leave
test
or
fisubl
mov
lcall
pop
xchg
pextrw
dec
fisttps
push
cmp
pop
mov
mov
rclb
dec
fidivl
es
clc
movsb
sub
adc
andl
pop
ret
ss
icebp
cwtl
cmpsb
scas
or
pop
subb
jp
out
mov
xchg
pop
ret
add
testb
push
push
mov
es
lods
fsubl
mov
push
mov
and
popa
push
mov
roll
pusha
sahf
mov
lock
popf
or
out
fidivl
lcall
test
test
inc
jl
lock
push
and
add
repnz
jo
shll
pop
push
repnz
xlat
adc
loope
ret
out
movsb
push
mov
rclb
add
lods
mov
stc
pop
xchg
and
xchg
call
sub
scas
xor
imulb
loop
add
out
jge
addr16
inc
das
mov
and
dec
insl
dec
xor
sbb
enter
cmp
and
sub
push
push
mov
nop
jnp
jge
lds
mov
inc
outsb
mov
je
enter
dec
jge
lcall
imulb
inc
iret
jg
push
loopne
out
out
jg
add
jmp
out
xorl
or
or
test
test
add
dec
cmpl
adc
sarb
mov
sub
iret
sbbb
xchg
imulb
dec
pushf
fcoms
adc
sub
and
xor
imul
icebp
dec
aam
fmull
mov
xor
outsl
xchg
fcoms
mov
sub
mov
je
lea
in
adc
cwtl
test
push
cld
ljmp
mov
mov
frstor
sarb
jmp
adc
mov
xor
sbb
push
adcl
repnz
shll
inc
sub
roll
aam
mov
sbb
addr16
pop
xor
shrb
je
fsubrl
hlt
mov
test
push
mov
mov
sbb
and
repnz
mov
int
jbe
into
inc
push
dec
mov
adc
addr16
jmp
pop
cmp
es
daa
xchg
sub
lret
stos
cs
mov
into
mov
loop
std
jne
imul
push
jb
adc
test
pop
data16
cli
pop
popa
out
pop
mov
nop
fisubrl
jb
fcmovne
jmp
pop
shr
mov
shl
sbb
inc
cmpsb
adc
dec
pop
jae
test
std
je
mov
xchg
aad
push
dec
push
inc
cmp
scas
sub
dec
dec
inc
mov
push
hlt
pop
inc
imul
mov
stos
out
bound
mov
xchg
adc
adc
ds
dec
xchg
xor
nop
icebp
iret
push
pop
xchg
adc
sub
adc
std
call
or
inc
jno
jb
xchg
mov
test
add
pop
or
push
ret
hlt
imulb
je
cmp
cmc
xchg
adc
aam
ss
cmc
ja
dec
fwait
pop
push
mov
fistl
pusha
pop
xchg
loope
imul
cltd
add
icebp
dec
mov
test
enter
inc
mov
test
jno
mov
xor
or
andl
push
das
xchg
jmp
cmp
mov
dec
cmpsl
out
arpl
rolb
and
push
nop
mov
xorb
jo
jb
or
das
xor
daa
outsb
cld
jns
cmp
pusha
mov
leave
add
and
inc
out
in
cltd
stc
shlb
sub
xchg
jp
shrb
fmul
pusha
mov
lcall
fstps
or
aaa
jle,pt
push
leave
push
jle
repz
push
adc
adc
inc
test
cld
cmc
cmp
cltd
ja
cmp
or
sub
mov
pop
fcmovnb
sbb
and
fs
inc
xor
rcrb
aam
mov
push
lods
dec
in
pcmpgtb
adc
xchg
cmp
ljmp
add
mov
pop
mov
sbb
lret
mov
pop
aas
popf
mov
dec
nop
xchg
cmp
aam
out
pop
ret
pushf
jp
jne
mov
test
popa
jne
jne
outsb
popl
jno
stos
push
ds
lcall
cmp
mov
orl
cmpsb
pop
sbb
cltd
subb
xchg
push
pop
mov
repnz
inc
mov
adc
movsb
outsb
fcom
inc
jns
or
mov
ret
bnd
inc
jecxz
dec
scas
adc
je
test
in
loop
gs
pop
sub
movsb
imul
daa
dec
mov
in
xlat
int
arpl
ret
cmp
and
and
add
bound
cmp
test
dec
mov
adc
xor
out
sbb
aaa
out
imul
inc
int
pop
out
mov
ror
xchg
xlat
lret
je
mov
insb
shr
insl
sbb
adc
adc
pop
xchg
or
mov
push
mov
pop
jmp
and
and
pop
push
jg
sbb
lret
inc
test
jno
fsts
sub
xchg
inc
pop
insl
out
xchg
lds
xchg
insb
int
cld
mov
lahf
mov
repnz
cmp
shlb
addb
xchg
in
and
sub
or
fldcw
movsb
movsl
mov
jne
xchg
aaa
or
push
jle
insl
pushf
push
shlb
adc
mov
dec
add
push
xor
mov
sbb
das
push
dec
lahf
clc
jns
dec
or
neg
mov
lcall
jmp
xchg
movsl
sarb
lret
lods
pop
dec
lods
jecxz
sub
inc
test
mov
fwait
mov
sub
inc
insb
rcrl
jae
lods
inc
pop
mov
mov
cwtl
xchg
aaa
xchg
sbb
jp
jle
cmpsb
in
xorl
pop
subl
cmpsl
bsf
daa
inc
bound
sub
push
push
stos
add
mov
daa
bound
test
cltd
or
jg
outsb
shr
daa
ret
cltd
shl
stc
imul
dec
cmp
testb
stc
or
mov
loope
push
push
cmc
mov
sbb
not
fadd
sbb
nop
in
insb
jp
adc
das
enter
mov
mov
lahf
fs
lds
fwait
xor
mov
pushf
sbb
push
roll
jecxz
loop
aas
xor
loop
and
and
cmc
xchg
xor
add
cmp
add
mov
sbb
test
adc
fcomp
fidivrs
stos
inc
std
roll
fucomp
cmp
lds
loop
fcomps
inc
fisubrs
stos
bound
and
insb
sahf
push
jae
js
sbb
pop
fnsave
adcl
popf
fistps
lock
imulb
jno
fidivrs
push
mov
lahf
and
insl
xorb
adc
xchg
xlat
xor
test
int3
ds
je
lcall
loope
test
inc
sbb
js
notl
xor
pop
js
mov
jl
mov
pop
mov
sub
xchg
sbb
rcr
mov
jp
cwtl
jnp
in
pop
stc
imul
bound
add
add
pop
xchg
int
fwait
mov
int3
push
sub
inc
test
push
mov
cmp
gs
fsubs
pop
jle
cmpsl
movsl
sti
jl
out
inc
push
setno
int
add
jl
mov
xor
les
adc
mov
cld
sbb
in
push
jp
into
sbb
dec
sbb
sub
test
mov
loope
or
lods
fistl
jbe
mov
mov
in
add
push
and
scas
sub
xor
xchg
cltd
push
hlt
movsl
add
xchg
leave
push
leave
into
jl
rcll
out
mov
sbb
xor
fldl
cmp
aaa
dec
xchg
cmpsb
testb
dec
gs
mov
aas
adc
mov
subl
jmp
sbb
inc
sar
int
or
xchg
pmaxub
mov
lret
nop
insl
dec
push
rcll
mov
inc
xor
mov
rcll
mov
jecxz
aam
pop
xor
mov
xchg
movsb
pop
insl
jge
hlt
cmp
adc
lods
insw
test
adc
mov
aam
nop
pop
je
lcall
and
push
in
pop
je
jbe
dec
fdivrp
call
fwait
roll
fwait
out
pop
popf
xor
inc
xor
cmpsb
mov
sbb
jno
lahf
xchg
or
mov
xor
out
in
adc
xchg
mov
jl
es
fdivrs
adc
icebp
jl
xchg
mov
add
dec
xchg
push
loopne
scas
and
or
ficoms
adc
fisubrl
out
aas
in
inc
mov
in
mov
hlt
dec
mov
jl
and
in
and
pop
mov
cli
cli
cmp
sub
imul
ret
jge
mov
dec
xchg
cmp
stos
aad
push
nop
mov
and
dec
sbb
mov
xor
sbb
inc
adc
inc
out
out
lods
stos
shl
mov
mov
push
xchg
neg
movsb
lods
les
mov
dec
mov
sub
mov
jno
inc
mov
bnd
lock
loop
je
jae
push
or
jno
icebp
pop
pop
lock
enter
das
cli
dec
adcb
and
imul
dec
stc
add
dec
movsb
inc
jno
mov
push
popf
adc
mov
out
sub
push
gs
and
cmpb
test
push
insb
jl
lcall
lret
mov
imul
lods
or
mov
push
fwait
and
pushf
rcrb
mov
repnz
add
fcmovu
add
fildl
clc
mov
mov
inc
push
dec
in
mulb
xlat
push
sbb
mov
neg
dec
pop
mov
fidivrl
lea
in
cmpsb
jg
adc
xor
dec
or
bound
orb
ds
push
push
test
cmp
subw
sti
ja
outsl
and
lods
lds
int3
lock
dec
adc
inc
add
stos
dec
shll
imul
sbb
clc
add
jl
ja
mov
xor
sub
ret
mov
sub
inc
lret
loop
cmpsb
fdivl
mov
cmp
stos
push
push
lret
es
nop
sbb
and
mov
sbb
fstps
sub
push
mov
hlt
aaa
dec
jle
movsb
xchg
inc
pop
test
loopne
aaa
mov
add
les
jae
ljmp
jg
mov
sub
int3
ss
or
es
pop
shll
int
inc
adc
push
push
xor
mov
mov
lahf
adc
push
aad
xlat
sub
jbe
adc
aas
sti
adc
adc
cmpsb
in
fimull
lea
xor
mov
push
fwait
js
and
je
addr16
mov
mov
gs
imul
mov
dec
add
movsl
outsl
ret
cmp
mov
outsl
push
imul
or
mov
push
ja
pop
pop
xchg
add
pop
icebp
sbb
arpl
dec
aas
xchg
push
push
aaa
cmpsl
lock
fsub
dec
roll
inc
add
sahf
icebp
cmpsl
or
add
mov
ret
repnz
mov
adc
test
cmp
out
addl
adc
push
jo
adc
in
jmp
inc
mov
leave
push
daa
sbb
push
add
leave
or
cmp
push
cmp
inc
xor
pop
fildll
lea
negl
outsb
push
int
fs
xchg
shr
mov
pop
cmpsl
pushf
add
mov
inc
hlt
ljmp
add
xchg
mov
pushf
in
push
repz
jno
jb
and
je
fucomi
js
das
imull
daa
call
fdivl
out
dec
xor
imul
pop
push
jmp
test
sbb
clc
or
sti
rcrl
je
arpl
imulb
test
test
add
adc
xor
inc
clc
pop
jge
adc
mov
xchg
sti
fwait
cmp
xor
aaa
fcmovne
bound
mov
aaa
xlat
pushf
dec
dec
xor
lds
adc
xchg
push
add
les
jle
push
sub
fcoml
lret
adc
pop
xor
fstpt
sbb
jge
fldt
pop
sti
insl
lea
pop
sbb
stos
xor
ret
cmpsl
repnz
mov
dec
adc
fstps
lret
es
fisubs
mov
cld
xchg
inc
rol
jg
aas
int3
out
call
inc
pusha
and
pop
or
test
add
repnz
test
jae
cs
daa
fiaddl
sub
sahf
xchg
js
scas
sbb
sub
xchg
cmp
leave
rcll
mov
jg
lods
fidivrs
scas
add
sbb
faddl
or
dec
stos
frstor
xor
pop
or
and
cmp
jbe
push
fmull
stc
jg
mov
mov
push
stc
cs
jg
les
adc
dec
or
into
pushf
imul
dec
add
test
mov
cmp
adc
jb
push
pusha
or
repz
sbb
fstpl
pop
xor
mov
add
rcrb
and
and
xor
cmc
inc
inc
in
mov
in
or
jnp
xchg
into
pop
jb
or
lret
push
dec
sub
bound
xchg
xor
cmc
fldl
repz
mov
adc
or
adc
dec
push
lock
das
adc
xor
sub
repz
test
das
jge
adc
pop
call
mov
or
or
lock
sub
pop
xor
adc
jno
movsl
bound
iret
in
xchg
push
cmp
fisttpll
xor
sti
aam
jno
js
push
mov
dec
pop
addr16
loope
add
mov
jge
push
xorb
das
and
pop
push
dec
sahf
pop
sarl
dec
ret
push
xor
push
and
adc
js
inc
sbb
sub
scas
pop
fcmovb
pop
lcall
out
sti
dec
sub
push
lret
idivl
and
push
insl
sub
loopne
and
sub
xor
shll
jb
arpl
add
insb
jmp
int
mov
mov
cwtl
shll
xor
addb
int3
movsl
dec
xchg
test
add
push
add
mov
mov
inc
call
xchg
ja
push
mov
mov
cmp
lahf
lcall
jbe
fstp
cltd
mov
arpl
ss
imul
and
jae
pop
pop
xor
mov
outsb
and
mov
shll
mov
stc
sbb
into
add
push
mov
imul
jp
dec
ljmp
lock
or
ret
add
pop
xor
pop
pop
cmc
imul
fsubrp
dec
mov
add
int3
pop
imul
pop
and
fidivl
test
or
shr
or
ret
pop
lods
fwait
and
insl
xchg
daa
adc
cmp
mov
pop
aaa
in
or
dec
decb
dec
rclb
jno
xchg
push
inc
and
sbb
push
insl
shr
push
pop
and
loopne
push
dec
leave
out
mov
fidivrl
cmpsb
bound
sbb
jecxz
std
xor
outsb
movsl
fisubs
fcompl
sar
and
xchg
mov
fadd
jno
jg
outsb
push
lock
mov
insb
daa
xor
fstpl
and
xchg
pop
stos
pop
cld
and
ret
jle
clc
adc
sbb
outsb
sbb
into
jmp
and
inc
mov
inc
std
dec
stos
std
jle
mov
cmp
in
mov
push
std
sbb
mov
jl
lods
adc
movsl
jle
add
repz
mov
fs
pop
add
movsb
adc
adc
hlt
mov
aam
std
and
cmp
popf
push
cmp
or
dec
movsl
mov
jl
scas
cwtl
in
sahf
or
dec
lahf
and
ja
fistps
fbstp
in
sahf
das
pop
mov
jae
std
xchg
adc
nop
xchg
enter
out
movsl
hlt
push
xchg
add
lcall
jb
leave
std
mov
je
arpl
gs
dec
push
mov
or
push
inc
or
lds
or
adc
inc
push
push
arpl
push
dec
jp
push
dec
xchg
sbb
fiadds
out
mov
pop
mov
cmpsb
jmp
push
lock
xor
cmp
push
orl
leave
push
inc
leave
test
pop
in
dec
jle
push
jle
push
add
mov
and
or
dec
mov
push
in
jecxz
xor
jne
in
sbb
movsl
decb
push
daa
js
jno
das
pop
clc
sub
inc
mov
icebp
sti
out
call
frstor
bound
ljmp
xor
test
mov
lods
outsb
and
inc
push
js
sub
mov
fists
into
int
pop
aam
jmp
dec
or
xor
faddl
repnz
inc
jg
pop
and
mov
mov
je
outsb
imul
mov
mov
xor
jecxz
stos
mov
ss
dec
push
iret
inc
inc
jo
dec
pop
arpl
stos
aad
inc
subb
out
out
loop
call
mov
repz
mov
loop
mov
in
push
adc
sub
ja
popa
dec
lcall
and
sbb
adc
lods
xor
dec
outsb
sub
xor
dec
sahf
pop
ss
ret
cmpsb
test
cmc
test
adc
xchg
shll
jo
mov
xchg
nop
inc
xlat
mov
sub
adc
jl
test
and
xchg
sbb
fdivrl
cs
in
mov
rcr
jnp
add
push
ds
flds
dec
mov
movsb
lods
fwait
push
mov
jo
xchg
aad
adc
or
test
and
or
adc
dec
mov
fwait
add
dec
dec
icebp
xchg
daa
sub
fcmovb
mov
mov
decl
pop
test
das
add
in
hlt
mov
jle
dec
or
cmpsb
cmpsl
inc
inc
xchg
ja
orl
movsl
ljmp
sub
test
aam
cmpsb
stos
pusha
push
jo
and
mov
cmp
rcrb
sti
pop
outsb
aas
stos
pop
push
pop
insl
imul
nop
scas
aam
pop
cmp
sbb
into
in
cmp
les
lcall
mov
ret
and
imul
in
pop
repnz
mov
mov
adc
jp
cmp
xorl
push
add
add
cs
pop
dec
lret
push
add
cmp
int
cltd
jmp
xor
ljmp
ss
incb
aaa
test
push
sbb
cmpb
jbe
xchg
notb
push
jns
push
xor
fdivrl
into
dec
adc
shll
pop
cmp
pop
pop
andb
jp
int3
in
cmp
add
cmpl
sub
pop
out
push
mov
sub
sub
jmp
ja
jge
int3
out
and
dec
push
in
test
mov
jo
ret
movsl
ds
xchg
shll
adc
cmp
inc
push
gs
loopne
je
or
mov
jae
cmpsb
jmp
and
mov
in
sbb
in
test
jecxz
imul
adc
enter
push
ret
push
cmp
ja
pushf
xchg
mov
dec
mov
imul
dec
mov
mov
outsb
aad
mov
pop
jle
sti
repnz
inc
pusha
jns
stos
pusha
inc
sbb
outsl
xchg
hlt
add
inc
jecxz
xchg
xchg
lock
jae
stos
call
jle
xor
jge
xor
mov
out
mov
cmpsl
movsb
or
dec
adc
dec
shrl
or
xor
cmpsb
test
pop
push
mov
push
fcomps
mov
cmpsl
stc
jae
xor
std
iret
jecxz
mov
sbb
xchg
and
sbb
mulb
and
test
push
scas
stc
xlat
jp
ret
push
mov
pop
adc
xchg
out
jnp
ret
lods
pop
loop
inc
sbb
jo
cmpsl
test
sti
inc
pushf
sbb
pushf
imul
std
js
shlb
fidivl
inc
in
in
xchg
cmc
mov
out
mov
in
enter
fwait
or
adc
hlt
repz
dec
jno
fbstp
mov
scas
movsb
fstp
out
arpl
dec
jb
add
or
add
jno
out
push
cmp
sbb
das
pop
sbb
aas
push
push
jmp
add
sbb
test
mov
push
shrb
adc
movsb
in
das
repnz
add
pop
inc
lahf
push
stc
jecxz
lret
out
dec
jne
lods
or
stos
xchg
jb
jae
push
aas
clc
test
jl
popa
sbb
repz
aad
or
scas
scas
push
mov
add
icebp
adc
sbb
push
jae
iret
aaa
dec
mov
sub
lock
cs
xor
clc
lea
pop
outsl
std
mov
push
dec
test
push
std
sbb
testl
pop
push
std
sub
or
data16
bound
fsubp
lods
hlt
mov
out
add
leave
test
in
shl
fstpt
sbb
leave
xchg
and
and
pop
add
ficoms
shll
mov
cs
and
cmp
cltd
daa
xor
mov
pop
and
add
ljmp
nop
icebp
call
pop
in
test
add
dec
jo
or
fimull
xchg
cmp
repz
sbb
lret
cmpsl
and
push
inc
mov
pop
sub
xor
xchg
cmp
not
push
outsb
push
andb
fistl
lret
fs
sub
xchg
jge
sarl
loope,pt
int
or
lcall
sub
and
mov
idivl
cmp
cmp
test
shll
dec
inc
jnp
int
hlt
push
mov
or
repz
popl
insl
ret
xchg
or
out
inc
cwtl
inc
mov
lcall
sub
add
insb
mov
lahf
xor
dec
or
mov
std
mov
pop
push
mov
out
jae
sti
dec
ficomps
cmp
ja
jge
or
mov
push
push
je
insb
xchg
push
adc
pop
in
mov
push
mov
popf
out
outsb
sub
push
testl
mov
scas
dec
shll
pusha
mov
pop
ficompl
pop
and
pushf
push
jbe
or
fisttpl
aaa
enter
fidivrs
push
pop
add
les
fstpl
rcrl
insl
shrb
mov
push
enter
jge
cld
mov
fsub
stos
pop
imul
mov
jno
pushf
test
enter
mov
cs
dec
into
lds
add
sub
out
pop
mov
dec
aam
adc
lea
mov
sbb
fstpt
jb
jno
scas
add
jae
ret
shl
fdivs
mov
and
mov
mov
filds
inc
and
sbb
ljmp
mov
add
xor
mov
inc
xchg
jle
sub
xchg
mov
inc
lock
push
cmp
jl
scas
xlat
sbb
or
pop
inc
loopne
test
cli
ja
and
inc
cli
push
idivb
insl
push
out
inc
mov
inc
fisubrs
pop
nop
jbe
push
jle
sub
pop
std
data16
dec
loope
cmp
or
push
lea
lcall
xlat
fistpll
mov
mov
pushf
lock
out
and
fsubrp
add
inc
dec
jg
rorl
or
aas
mov
jl
cmp
outsl
lock
outsl
in
jp
subl
mov
jo
outsb
scas
cmpsb
stc
adc
add
pop
mov
cmp
sbb
ret
and
jl
mov
cmc
push
jae
pop
mov
scas
xchg
mov
sbb
leave
pusha
int3
and
mov
xor
cmp
repz
imul
popa
sbbl
jb
xchg
ds
sbb
scas
ljmp
rcrb
aad
flds
popl
imul
dec
sbb
jbe
cwtl
icebp
push
xchg
in
cs
mov
jl
dec
daa
and
lcall
mov
vpmaddubsw
mov
loopne
pop
nop
dec
add
xchg
jne
shrb
cmp
dec
ds
int3
push
dec
jae
push
stos
pop
adc
push
xor
sarb
cmp
cmc
xchg
shlb
stos
or
imul
or
mov
lret
push
push
or
outsb
sub
loop
stos
test
notb
shrb
pop
dec
mov
mov
das
mov
xchg
out
cmpb
imul
pop
xlat
jne
adc
pop
xor
cld
fsts
pop
data16
out
and
cmp
mov
and
stc
pusha
in
cmp
bound
out
and
dec
je
inc
rorb
adc
nop
das
dec
dec
inc
outsl
or
movsb
jge
repnz
popa
cli
or
dec
scas
and
mov
push
fdivr
sub
cmp
nop
shlb
adcb
int3
xor
jle
mov
dec
xchg
push
and
sub
iret
sub
mov
pusha
inc
arpl
pop
jns
xchg
sub
jno
pop
ds
data16
and
xor
clc
sbb
movsl
je
pushl
mov
lahf
dec
mov
cmpsl
add
cmpsb
lahf
clc
popf
inc
adc
test
testb
dec
mov
add
insl
cmp
fucom
dec
imul
into
xchg
imul
push
mov
aam
or
mov
jb
lea
push
call
lcall
loope
imul
je
out
cmp
pop
sub
jns
lcall
out
jae
hlt
pop
mov
stc
inc
sub
stos
xor
cmpsb
sti
stc
out
fdiv
mov
inc
fs
fs
mov
test
insl
mov
cmpsl
pop
adc
mov
lcall
leave
dec
mov
push
jg
ljmp
inc
or
push
cmp
lods
adc
dec
mov
adc
rcrl
lahf
or
xchg
sbb
jne
lahf
mov
rolb
bound
pop
fnstsw
xlat
push
adc
and
jno
cmp
push
dec
mov
lds
jbe
sub
push
or
mov
xor
xlat
sbb
adc
rcrb
cwtl
pop
outsb
loopne
insb
mov
in
out
test
jae
fwait
mov
jae
fidivl
push
mov
add
negb
add
mov
and
xor
ss
mov
push
cmpsl
jp
and
pushf
mov
inc
pop
shlb
or
daa
stos
mov
pop
repz
ret
dec
and
pop
mov
dec
xchg
stos
out
xchg
rcrb
jb,pt
cld
jecxz
ret
iret
add
jbe
jg
cmp
mov
add
push
push
add
jecxz
mov
rol
sbb
push
test
add
std
fisubrl
stc
scas
out
loop
ss
sarl
ret
pop
and
popa
jp
pop
sbbl
sbb
xor
or
pop
sbbb
fcoml
rcrb
movl
lods
adc
add
mov
pop
inc
stos
add
leave
cmp
cmpsl
dec
push
jae
inc
ss
mov
cmp
pop
cmp
out
stc
xchg
fsubl
sbb
repz
in
repz
xlat
xchg
adc
push
mov
jge
mov
sbb
mov
jo
mov
mov
cmp
inc
add
cmp
ja
pop
xchg
mov
mov
lret
enter
into
push
adc
and
fcmovb
aaa
mov
jl
fldcw
ret
in
and
std
ljmp
in
out
cmpsl
out
jmp
daa
xlat
insb
into
mov
aas
ret
aad
cli
jo
mov
jns
add
insl
push
jle
insl
adc
fabs
push
or
or
fs
fstpt
adc
leave
xor
in
insl
movsb
rolb
push
outsl
adc
into
in
jge
add
adc
outsl
hlt
outsl
sbb
sub
mov
add
inc
movsb
or
test
cmpsb
loop
mov
jge
cmc
add
enter
and
xchg
mov
pop
mov
fucom
clc
mov
mov
cli
adc
lods
sarb
out
aaa
pop
jg
rorb
and
jge
xchg
movsl
or
add
mov
addr16
jno
fprem
int
fistps
ds
leave
push
rcrl
inc
icebp
test
push
mov
or
pop
xchg
or
movsl
mov
sub
xor
stos
std
int3
out
movsb
jnp
enter
stc
dec
cmpsb
adc
mov
js
sbb
jg
inc
mov
mov
pop
cmp
daa
or
call
orl
movsb
push
int3
mov
push
fcmovnu
or
or
les
adc
cmc
mov
mov
insl
jl
xor
subb
cmpsl
lods
lcall
adcl
push
sahf
pop
mov
int3
adc
mov
aas
mov
rol
or
addr16
add
mov
mov
les
mov
mov
and
repz
or
es
dec
add
adc
or
xor
addl
and
jl
ret
notl
inc
shrb
pop
in
testl
jno
push
shrb
aad
repz
sub
bnd
mov
int
lods
xchg
je
out
dec
ret
mov
fdivs
cmp
mov
cmpsb
mov
cwtl
mov
add
ss
mov
inc
push
sbb
sahf
jecxz
dec
xchg
insb
stos
in
arpl
inc
or
xchg
adcb
cmp
test
cwtl
mov
ss
cli
call
ret
clc
push
sub
inc
lods
insb
sarl
cld
in
and
push
neg
cmp
pusha
cwtl
js
movb
ja
jg
popf
sbb
mov
sbb
mov
divl
adc
mov
mov
aam
and
bound
popa
sub
pop
int3
out
rcll
jno,pt
pop
outsl
xlat
add
sti
scas
stos
sar
mov
jl
ljmp
and
jge
ret
pop
push
ret
mov
mov
xchg
out
mov
imul
push
divl
jno
sub
mov
call
dec
into
mov
inc
inc
sub
jae
popl
mov
dec
jno
jno
add
cmp
lods
test
mov
pop
fwait
pop
out
test
push
js
mov
sub
jb
sarb
addl
mov
mov
dec
repz
lret
aaa
sahf
jl
dec
push
popf
dec
out
inc
jp
das
or
jae,pn
push
push
enter
in
sub
adc
repnz
adc
jae
cmpsb
pop
mov
std
lea
pop
in
sbb
mov
xchg
xchg
jns
ds
test
cmpsl
dec
pop
scas
mov
pushf
movsb
mov
leave
jp
dec
sahf
scas
xchg
add
xor
cs
shr
cmp
and
xchg
mov
lret
arpl
mov
sub
enter
ss
dec
jle
dec
gs
fcmovne
mov
clc
out
jle
repz
jmp
push
sub
sar
xor
adc
pop
pop
icebp
shlb
push
ds
outsb
gs
push
dec
ja
leave
fwait
lcall
test
rolb
fsubr
inc
loope
and
xor
jnp
in
cmp
aam
std
test
xchg
jg
lcall
pop
inc
add
mov
addb
or
xor
out
rcrl
jge
daa
mov
mov
mov
enter
movsb
jno
lods
fs
mov
stos
mov
repnz
mov
adc
push
jae
popa
pop
and
rcll
stc
xchg
lods
mov
lods
pop
ret
test
pop
jbe
notb
xor
jle
sahf
jmp
jle
andl
movsl
jns
sbb
lods
ror
mov
xchg
flds
xchg
popa
not
push
in
pop
push
addr16
sbb
subl
mov
iret
std
aam
test
add
arpl
aad
xor
hlt
dec
jns
pop
mov
in
cwtl
sbb
pop
int
xchg
fistpll
je
mov
sarl
ss
and
and
jbe
mov
sub
movsl
dec
lret
popf
stos
ds
ljmp
lret
stos
xor
lahf
xor
mov
or
test
aas
loopne
xor
mov
jb
jg
push
in
scas
mov
or
jns
adc
cmp
xor
ret
jge
adc
pop
mov
movsl
testl
or
sbb
mov
nop
or
inc
mov
mov
fwait
adcl
add
push
adc
jecxz
sub
xchg
inc
push
loope
hlt
or
jge
mov
cld
xlat
jae
mov
jno
into
into
cmp
sbb
mov
push
stos
in
aam
enter
in
push
mov
insl
inc
push
ret
jge
clc
cs
push
or
dec
mulb
pop
ss
mov
sbb
adc
subb
fcoml
or
push
jle
mov
nop
and
sbb
pushf
dec
loop
movsb
dec
mov
push
lods
pop
and
pop
dec
mov
pop
and
stos
lcall
popf
pop
ljmp
sub
mov
mov
lret
mov
inc
repz
pop
int
inc
xor
or
push
mov
fildl
mov
inc
mov
cld
in
daa
pushl
cld
xchg
int
lea
pop
outsb
cld
mov
mov
xchg
addr16
insl
std
pop
inc
out
xchg
sub
xor
push
stos
adc
jmp
lds
pop
xchg
popa
push
in
in
adc
outsb
ficoms
cli
sbb
pop
jno
lea
sub
mov
imull
into
or
pop
xchg
and
insb
jge
lahf
fs
aam
inc
push
ja
movsb
sub
mov
pop
and
fnstsw
mov
orl
ficoms
cmpsl
mov
mov
pushf
xchg
inc
inc
mov
lahf
push
movsl
lods
repnz
test
clc
push
pusha
stos
int
xchg
jo
cwtl
mov
jnp
push
or
push
mov
mov
dec
lret
jge
aas
aaa
add
scas
mov
sbb
int3
sahf
or
jne
jl
sar
fmuls
je
lods
aaa
mov
jl
aaa
call
inc
mov
push
adc
pop
adc
ljmp
aaa
stos
aaa
ss
xchg
adc
cmp
arpl
inc
cmpl
dec
lods
cmp
in
lret
movsl
mov
adc
sbb
aad
fdivrs
sub
cld
jne
int
sahf
pusha
cld
in
rcrl
add
xchg
adc
dec
lods
out
scas
jo
out
in
or
jbe
pushf
repz
shl
cmp
inc
les
and
cmp
iret
xlat
andl
stos
mov
pop
gs
pop
out
dec
pop
push
cs
sub
mov
xchg
xorb
movsb
ret
mov
mov
jo
int3
cvtps2pd
sbb
push
inc
lcall
fsts
cmp
push
out
imul
push
jne
sub
and
ret
dec
ret
push
mov
mov
and
aam
push
out
sub
andl
or
adc
lret
jge
inc
jo
roll
xchg
nop
inc
aam
inc
lahf
dec
pop
xor
push
adc
and
pusha
mov
push
jb
add
hlt
in
sub
pop
aam
in
lds
dec
scas
leave
cmpsb
xchg
test
mov
sarb
aam
mov
test
out
add
ljmp
inc
inc
out
sub
xchg
add
inc
adc
mov
or
mov
or
pushf
popa
les
filds
pop
mov
sub
mov
ds
shlb
ja
int
pop
mov
jmp
sbb
iret
scas
sbb
or
roll
or
iret
pop
or
or
cmp
push
pop
shll
imulb
cmp
aas
test
gs
or
jae
xor
cld
add
pop
or
xchg
mov
push
scas
cmc
pop
insl
mov
nop
sbb
nop
pop
shrb
push
mov
daa
xchg
mov
jmp
test
push
or
sti
sarb
fsubrs
cli
mov
pusha
and
test
and
mov
loope
adc
dec
rcr
pop
sub
lods
push
pop
sbb
mov
loopne
aas
gs
jmp
pop
data16
cmpsl
push
mov
pop
inc
xchg
sarb
call
incl
adc
sub
lods
add
mov
jns
inc
dec
call
cmpsb
xor
push
mov
adc
orb
pop
js
jno
sub
or
sbb
jne
inc
jp
sbb
cli
arpl
shll
dec
movsl
aaa
sarb
or
and
push
jb
scas
ljmp
hlt
pop
xchg
xor
jbe
xchg
cld
adc
sub
int
xchg
push
aam
aas
sarb
sbb
push
dec
mov
cltd
clc
fisubl
enter
dec
pop
sbb
nop
es
xchg
mov
rorl
mov
sub
push
inc
mov
movb
repz
test
andl
dec
in
stos
loop
psubq
iret
out
into
jns
movsb
test
push
mov
adc
lret
cmp
jbe
or
int
aas
add
or
sub
jbe
data16
jp
decb
and
loopne
dec
mov
clc
or
cld
lods
mov
fcmovu
jmp
lock
fidivrl
ret
inc
out
sbbb
test
pusha
or
pop
add
pop
add
lods
outsl
outsb
xchg
jns
cmp
test
push
imull
dec
inc
test
add
lods
sub
lods
xchg
push
in
andl
sub
out
adc
cmp
pop
cmp
jae,pt
fdivs
test
push
jae
rcrb
sbb
lret
popa
cmp
aaa
sbb
divl
sub
sub
cmpsl
outsl
pop
addr16
sub
push
jg
xor
and
or
mov
sbb
fisttpll
mov
add
mov
cmpsb
mov
orb
xchg
or
out
pop
fstps
rcrb
mov
stos
fcmove
ret
movsb
xchg
imull
out
lret
in
mov
lahf
call
inc
out
dec
incb
lock
ficompl
adc
std
push
pop
xlat
mov
jecxz
mov
data16
mov
push
jo
std
sub
repz
notb
mov
popa
in
sub
push
loopne
nop
xor
adc
cmpsl
push
adc
out
enter
scas
loope
mov
arpl
or
daa
mov
or
out
cmp
fmul
jl
sbb
aad
or
neg
push
add
mov
inc
stos
je
scas
and
xor
sub
dec
add
add
adc
xchg
subb
fidivrs
nop
mov
popf
sahf
in
inc
fisubrs
sub
adc
mov
sub
push
out
jbe
cmp
mov
data16
jae
mov
mov
dec
jne
or
call
pop
fwait
sbb
outsb
sti
xchg
xchg
xchg
ffreep
cwtl
lea
repz
fiaddl
rorl
es
les
call
fidivrs
and
cmp
or
or
enter
xchg
pop
mov
sub
adc
jl
dec
mov
aaa
jmp
lock
test
jno
mov
popa
iret
mov
inc
sbb
rol
and
mov
push
std
in
cmpsb
sbb
or
lret
jb
adc
pushf
cmpl
andl
movsb
or
bound
andb
jg
repz
jg
pop
fldl
pop
ljmp
ss
pop
cwtl
idiv
and
and
adc
add
jnp
mov
adc
fdivs
scas
paddq
pop
lcall
xor
fistpll
mov
fisubrs
jb
mov
push
mov
jno
push
int
cli
sbb
sbb
stos
push
repnz
roll
add
hlt
cmpsl
aaa
into
mov
gs
jo
pop
lods
stos
sub
adc
jle
movsl
cmpsl
push
test
inc
and
mov
pop
mov
pop
jl
lcall
roll
jge
aad
xchg
pushf
cwtl
mov
popl
sbbl
cltd
andb
test
dec
mov
mov
mov
je
fsubl
pusha
movsb
push
movsl
fistpll
mov
adc
inc
repz
mov
and
xchg
fs
shll
pop
mov
xor
push
add
cmp
cltd
aaa
lret
sub
mov
popa
fdiv
mov
add
xor
idiv
clc
aam
mov
push
add
scas
imul
test
insl
scas
rcl
lret
cmpsl
mov
xor
pop
cmpb
nop
and
cs
cwtl
inc
icebp
movzwl
leave
lea
daa
add
stos
ror
insb
hlt
into
add
push
subb
addb
jge
lret
je
lret
xchg
lahf
mov
lret
jno
adc
cmp
sub
mov
scas
pop
or
sub
cmc
clc
fwait
loopne
cmp
pop
fsubs
xchg
insb
jle
sub
popf
lcall
push
and
ja
jns
adc
sbb
xchg
xchg
outsb
jnp
mov
xor
jbe
test
mov
xchg
and
lods
adc
pop
xchg
repz
cmp
xchg
das
enter
cmp
mov
mov
mov
outsl
jo
pop
sub
enter
mov
loope
sub
in
inc
mov
xchg
pop
sti
mov
jp
in
loop
xchg
xchg
cmp
bnd
xchg
movsl
jne
jge
add
loop
cs
aad
into
or
mov
sub
and
mov
loope
aaa
xchg
jmp
push
sbbb
sub
ds
add
test
inc
test
xchg
fiadds
mov
rorl
imul
test
pop
pop
mov
xchg
push
mov
inc
push
fsubr
mov
loop
mov
cmp
fsubp
sub
mov
push
mov
adc
fldenv
and
push
nop
movsb
push
sbb
ds
stos
enter
add
sub
repnz
push
adc
mov
sbb
call
cld
cltd
sbb
mov
dec
pop
sub
adc
xor
cmp
lods
adc
cwtl
jns
adc
jp
mov
mov
js
xor
and
xchg
cmp
mov
and
ret
repnz
inc
addr16
xchg
fimull
imul
mov
lea
lock
adc
in
pop
push
pop
sub
inc
int3
sub
jp
rcr
lcall
inc
dec
add
clc
xchg
and
push
scas
scas
popa
push
cmp
mov
ror
imul
sub
sbb
lahf
sub
in
xchg
rcrb
cmp
loop
sbb
add
or
enter
aaa
dec
push
push
adc
dec
pop
mov
jbe
inc
insl
adc
xchg
or
test
xchg
and
sub
xlat
push
sbb
mov
or
pop
shl
push
repz
sub
adc
mov
inc
or
mov
rcrb
mov
test
cmp
mov
fdivrs
pop
aad
adc
testb
xchg
jno
xchg
cld
cmp
ds
mov
mov
cmpb
test
inc
mov
lea
shlb
aad
arpl
push
dec
mov
and
and
push
jbe
and
sub
jb
or
in
out
jmp
iret
xor
fldenv
movsb
ljmp
xorb
cld
xchg
mov
fcompl
dec
jge
jb
cmc
dec
stc
lods
inc
or
inc
sub
sub
mov
cwtl
or
xchg
pushf
data16
xchg
mov
lods
es
pop
dec
lret
jbe
xchg
add
cmp
cwtl
add
out
leave
loop
loop
push
loopne
cmp
les
jp
repz
pop
sbb
aam
test
mov
int
mov
mov
inc
nop
cmpsl
mov
jbe
js
inc
out
mov
nop
jo
inc
sub
mov
jb
insl
jmp
adc
repnz
jae
outsb
enter
repnz
adc
pop
jns
test
and
addb
add
dec
test
jnp
rorb
fsts
into
push
fbstp
sbb
adc
jno
cmp
fildll
icebp
xchg
or
inc
dec
add
adc
push
movsb
outsl
push
inc
inc
xlat
jg
loop
into
add
mov
cmpsb
jecxz
out
pop
and
xor
ja
orl
sbb
iret
testb
mov
inc
cmp
jbe
xchg
cmp
rcll
fcmovbe
stos
movsl
rolb
out
fcomps
cwtl
xor
jnp
pop
push
push
imul
cmpsl
add
stos
je
mov
add
xchg
loope
in
inc
stos
or
mov
sbb
dec
leave
loop
mov
sbb
adc
in
add
mov
and
je
movd
push
jb
mov
pop
xchg
jo
loop
adc
cli
insl
mov
cmpsl
fstp
xchg
es
push
ss
jp
test
xchg
loop
pop
mov
xchg
out
cltd
pop
push
jge
xchg
cmp
cmpsb
shll
je
cmp
lret
dec
push
or
ret
add
cltd
mov
adc
cmp
lds
popf
inc
dec
jae
push
mov
gs
dec
lds
push
xchg
cmp
call
and
repnz
repnz
jmp
jle
ja
addr16
js
dec
push
repz
push
pop
jnp
out
adc
aaa
ror
fcomps
or
sbb
fiaddl
jl
pop
fistl
mov
or
dec
mov
xchg
mov
push
mov
int
jl
cs
andl
nop
and
mov
les
or
scas
cmpsl
daa
add
sbb
int
jb
stos
dec
repnz
sbb
test
inc
mov
scas
leave
cltd
test
adc
and
push
cmp
icebp
fbld
inc
xor
jge
cld
je
cmp
ja
push
outsl
push
xchg
push
xchg
xlat
shrl
sub
paddsw
jno
clc
mov
iret
pop
pop
xor
and
sbb
incl
mov
scas
lods
and
hlt
into
add
lea
jbe
scas
mov
nop
aam
sub
jne
pop
addl
xchg
jecxz
lahf
xchg
repz
sbbl
lock
cmp
or
or
cmp
data16
pop
js
cmp
jmp
lock
aam
lods
subb
rclb
fdivs
scas
jl
loope
and
xchg
es
test
inc
push
mov
scas
pop
or
es
adc
lret
dec
or
jmp
hlt
pop
adc
mov
inc
and
pop
and
outsl
cmpsb
movsb
jae
outsb
adc
pushf
or
aaa
sbb
in
mov
dec
jb
cmp
aam
cmp
dec
test
mov
mov
push
inc
mov
imul
stos
push
add
fidivs
xchg
movsb
negb
mov
out
xlat
add
xchg
jmp
pop
cmovns
adc
lret
fiaddl
sub
jo
cmp
push
fs
push
insb
aaa
mov
and
aaa
cld
cmpb
cltd
inc
mov
scas
sbb
mov
and
add
or
inc
icebp
mov
divb
imul
aas
repnz
loopne
movsb
mov
ficomps
iret
out
daa
cmp
dec
int
lahf
push
mov
sbb
pop
stos
xor
lcall
pop
or
adc
test
pushf
add
xchg
imul
and
cmp
jno
aaa
pop
cld
xchg
mull
lret
fimuls
jae
xchg
jg
arpl
sbb
movsl
leave
mov
inc
scas
movhps
adc
testb
mov
sub
hlt
int3
adc
xorl
sub
clc
mov
aaa
js
pusha
mov
mov
inc
add
xor
sbb
inc
push
rcll
insl
xorl
xchg
test
xchg
repz
pop
push
adc
sub
mov
inc
jns
cld
jg
sti
rcrb
cld
push
in
out
xor
jmp
sbb
imul
out
xor
mov
sub
test
mov
cmp
dec
push
adc
ret
mov
jno
int
xchg
enter
imul
sbbl
btr
mov
xchg
xlat
dec
enter
adc
shrl
xor
loopne
jmp
adc
sub
and
lock
cmpl
test
pop
inc
mov
jbe
add
mov
or
jecxz
dec
aas
rorb
loope
loop
fs
sub
loopne
add
and
jns
loop
jno
cltd
xchg
push
inc
jne
mov
scas
jge
enter
jnp
shr
inc
sub
testl
in
push
and
je
fidivs
aam
shll
rcr
ret
jb
orl
jbe
push
mov
push
dec
popa
xchg
jbe
pop
jo
scas
or
mov
jmp
ds
xchg
pop
sub
imul
fidivrl
mov
scas
add
or
inc
push
push
ljmp
jo
adc
scas
jno
jo
push
adc
negl
clc
imul
ja
out
popf
xor
cwtl
aad
and
stos
push
and
xchg
scas
inc
dec
insb
and
arpl
enter
data16
pusha
dec
dec
mov
clc
movsl
movsb
das
popf
repz
pop
stc
xchg
xchg
adc
or
adc
call
push
xor
and
jne
in
jecxz
add
and
fdivl
outsl
mov
dec
loope
cmp
adc
pop
add
dec
popa
jmp
icebp
not
ret
in
mov
push
ficoms
aad
out
add
inc
inc
loopne
sub
push
mov
lahf
inc
aad
ret
mov
and
dec
imul
aam
ret
push
xor
stc
xor
pop
ret
cmp
xor
inc
add
andl
push
gs
add
dec
xchg
cmp
pusha
xchg
ja
sbb
and
inc
sbbb
sbb
lahf
pop
mov
mov
ds
mov
outsl
xor
imul
jecxz
clc
adc
xchg
fs
or
mov
imul
into
dec
std
jge
mov
xchg
rclb
fdivl
mov
sub
shrb
arpl
mov
loopne
call
daa
fimull
cmp
shlb
aas
pop
push
and
sbb
push
or
add
imul
fistpll
mov
clc
pop
mov
xor
add
pop
mov
fdivr
xor
xchg
sahf
add
stos
test
in
dec
push
leave
sub
add
xor
gs
out
xor
xor
sub
mov
leave
pop
jmp
pop
mov
sbb
sbb
xchg
dec
shll
shlb
fsubrs
add
fimuls
push
push
sub
or
mov
xor
adc
fnstcw
lret
js
push
idivl
or
and
ret
push
lret
push
xor
outsl
jp
call
dec
cmp
loop
in
pop
mov
push
inc
mov
and
adc
xchg
leave
xchg
aam
test
stos
mov
call
les
mov
sub
call
pop
lret
nop
out
inc
jmp
mov
int3
lods
push
jo
aad
add
stos
push
xchg
xchg
aas
or
mov
sub
es
cli
leave
add
nop
shlb
mov
incb
xor
sub
aad
mov
es
es
js
addr16
xor
lds
dec
lds
add
sub
jno
arpl
mov
jb
lods
aaa
ljmp
cltd
in
xchg
xor
cs
jp
cmc
mov
xlat
cwtl
js
in
add
aas
adc
adc
insb
adc
das
xchg
add
sub
rcll
aas
xor
lock
cmp
mov
cmp
outsl
sub
lcall
sub
sub
stc
sbb
sarl
sbb
dec
mov
jmp
stos
das
sub
sbb
repz
adc
adc
or
insl
enter
inc
jns
stos
cmpsb
and
scas
dec
jmp
nop
loope
sub
subb
shrl
or
stos
sbb
jae
aad
fwait
les
fldcw
dec
mov
xchg
inc
ret
add
paddsb
cmc
jg
movsb
mov
add
sbb
mov
mov
cmp
mov
loop
mov
data16
ja
jae
inc
dec
fstp
inc
jae
pop
inc
inc
movsl
loop
loopne
lahf
mov
imul
pop
mov
push
adc
jl
sbb
or
cmp
fbstp
ret
or
push
xchg
bound
cmp
sub
je
ret
jmp
jae
repnz
test
insb
or
xchg
mov
sti
std
pop
dec
stos
out
int3
dec
in
popf
lcall
out
cmp
push
leavew
mov
adc
std
or
test
cltd
xchg
fs
adc
pop
mov
sbb
push
cmp
sub
jge
inc
ds
cli
sub
cmpsb
stc
mov
sbb
cmc
pop
xor
jb
sbb
fisttps
adcl
mov
inc
cmpsl
mov
xchg
or
push
add
push
mov
out
mov
or
ds
sub
inc
push
cs
cmpsl
xchg
add
inc
xor
jae
ja
adc
dec
dec
mov
xor
pop
xchg
sbb
adc
incl
or
pop
mov
xchg
mov
and
cmp
insb
sbb
mov
sbb
nop
fsubrp
adc
mov
sub
movsl
adc
dec
loop
stos
sbb
test
mov
mov
enter
rcr
mov
pop
rcl
sub
arpl
test
mov
stos
cmp
insl
je
int
cmp
pop
add
popf
jns
push
dec
ja
ret
push
pusha
lds
nop
pop
stc
cmpsl
sub
mov
mov
pop
sbb
jno
xchg
fnstcw
mov
fists
aaa
cli
or
in
sub
jo
cmp
orb
xlat
cmpsb
xor
mov
mov
mov
xor
out
adc
or
int
dec
inc
jecxz
xor
xchg
mov
test
pop
pop
mov
cmp
lods
in
fsubs
iret
rolb
out
shlb
or
lahf
add
testl
call
idiv
aaa
rcr
adc
es
xchg
dec
stc
scas
sub
fidivs
pop
sub
js
js
mov
push
jmp
cli
cld
enter
fxch
outsb
adc
ss
enter
test
addr16
or
in
stc
in
lea
jge
mov
jmp
fprem
dec
cli
int3
aam
add
mov
mov
jg
mov
mov
xor
adcb
gs
mov
mov
mov
jge
and
out
cmp
cmc
inc
rorl
addr16
mov
push
mov
mov
or
mov
add
stos
leave
jge
sbb
scas
adc
addr16
mov
xchg
fdiv
xchg
in
arpl
jmp
and
lods
fs
into
jmp
pop
lret
pop
and
aaa
in
fxtract
dec
jmp
icebp
arpl
mov
sub
adc
std
sbb
mov
test
jno
cs
jl
data16
stc
mov
movsb
xlat
out
pushw
jno
or
xchg
je
push
adc
aam
jg
push
push
mov
xchg
xchg
clc
rcrb
mov
pop
xchg
ss
cmp
movl
gs
cmpsb
pushf
aad
gs
loope
ja
jp
sbb
div
fwait
cld
scas
loop
mov
or
mov
cs
nop
dec
jle
imul
mov
push
pop
and
mov
pop
sbb
mov
inc
jb
xchg
mov
test
push
jae
sahf
push
mov
sub
addr16
cmp
loop
and
dec
stos
icebp
insb
adc
pop
sub
sbb
lea
pushl
push
movsl
std
mov
inc
or
ds
cmpl
push
out
adc
out
les
mov
adc
dec
sbb
pop
nop
adc
mov
cmp
ja
movsb
fdivrl
insl
jle
aad
and
call
ret
into
das
hlt
rcll
jae
cmp
movsl
insl
and
aam
out
fildll
inc
imul
lret
scas
lods
rcrb
cmpsb
cmp
test
in
sub
xchg
lods
pop
mov
sbb
fwait
sbb
mov
mov
ja
mov
imul
xchg
jge
cmp
xchg
out
mov
pop
inc
xchg
sti
add
inc
lret
sbb
shll
test
fimuls
rep
inc
xchg
fyl2xp1
cwtl
pop
push
inc
or
mov
xchg
inc
inc
daa
xorl
bound
inc
pop
sub
push
ret
jecxz
sbb
lods
xor
daa
stos
shl
jge
insb
mov
lods
imul
mov
pusha
mov
lcall
repnz
sub
orl
dec
add
sahf
xchg
insb
mov
je
inc
ret
push
mov
adc
add
sarb
sub
jl
popa
cmp
lods
fcomip
arpl
jg
cli
stc
fsubp
lods
or
leave
xor
xchg
pop
out
xchg
shrl
inc
bound
out
cs
in
push
jecxz
adc
int3
add
add
negl
mov
and
cwtl
xlat
adc
addr16
sub
or
sub
repnz
push
or
lock
jae
movsb
push
inc
fsubl
mov
jecxz
cmc
push
xchg
jle
push
inc
inc
out
popf
inc
sub
mov
cwtl
jmp
mov
andb
test
ljmp
shlb
mov
pop
push
jle
xor
pop
in
sbb
add
inc
lods
flds
xor
jecxz
xlat
sbb
jl
pop
xchg
ret
loop
jle
jp
xor
add
daa
ljmp
add
jne
nop
addl
xor
and
mov
push
pop
in
mov
fstps
adcb
sub
repnz
mov
push
and
repz
imul
mov
xlat
push
iret
loopne
fcoms
scas
insl
or
out
xchg
adc
mov
sbb
out
sub
sub
jo
mov
test
sar
lods
js
jbe
xor
stc
cmp
dec
lods
or
jo
out
ret
hlt
xchg
insl
and
cmp
subl
rorb
xchg
sahf
cwtl
xor
jnp
push
cmpsl
add
xlat
pushf
fdivrl
and
repnz
xlat
and
or
xor
mov
pop
pop
movsl
mov
mov
dec
imul
sarb
ja
add
or
mov
sahf
sbb
call
mov
pop
mov
jecxz
jp
xchg
pand
mov
scas
popf
xchg
insb
xor
pop
and
sub
test
mov
mov
inc
pop
bound
xor
jb
push
dec
fnsave
dec
test
cmp
hlt
sub
inc
adc
je
iret
sub
aam
call
cmp
rcr
jecxz
test
cli
or
jbe
pop
nop
inc
pop
enter
fdivrs
add
cmp
loopne
stos
mov
data16
xorb
mov
or
out
push
dec
jae
mov
shll
add
push
in
pop
push
add
insb
or
or
rorl
out
out
push
xor
dec
add
and
xchg
mov
lds
mov
fcoms
xor
ss
jg
cltd
mov
push
sub
push
add
pop
xchg
jb
jg
sarl
push
mov
jp
mov
pushf
sub
pop
insb
fistps
push
jns
popf
lock
mov
ja
fdivrs
int3
outsl
popf
cmp
aad
mov
xor
scas
mov
inc
ret
dec
sarl
js
into
push
test
xor
lret
mov
sbbb
or
pusha
shlb
jge
mov
dec
loopne
jp
repnz
imul
jnp
sti
arpl
jl
out
jne
repz
push
cmp
stos
imul
mov
jmp
pop
add
cmp
xchg
je
cmp
mov
xor
and
xchg
pushf
lahf
ror
dec
stos
aas
int
or
adc
mov
je
lock
scas
fidivs
xor
ret
cmp
stos
sub
out
sbb
and
jns
cmp
pop
inc
push
imulb
mov
ret
arpl
ret
and
out
pop
subl
or
call
mov
xchg
lods
lock
addb
hlt
cmp
ljmp
jae
fisttpl
stc
add
sbb
jecxz
imul
mov
andl
add
fs
inc
push
inc
sub
pop
repnz
cmp
popf
mov
sbb
add
xchg
add
orl
sub
cmc
cmp
data16
xchg
stos
mov
loope
aas
in
dec
insb
xchg
inc
inc
andl
ja
lcall
insb
cli
mov
daa
xchg
push
jb
adc
int3
dec
xor
add
ss
rcrl
cld
out
mov
icebp
fidivl
sub
stc
jno
pushf
mov
push
push
mov
push
push
sbb
pop
or
mov
sub
jo
add
dec
scas
out
push
fsubs
sti
xchg
xor
ret
and
cmp
pop
pop
pop
push
push
rorb
insl
ss
pop
movsb
pop
sub
out
jb
neg
push
test
sbb
negb
shll
add
xchg
and
std
push
fbld
push
lret
dec
ret
cmc
cmp
sti
mov
sub
cmp
inc
mov
int
insb
push
fbstp
sub
mov
hlt
loopne
sub
xchg
addl
loopne
push
sbb
stos
mov
cmp
mov
push
cmp
jns
sub
scas
and
xor
mov
mov
mov
xchg
pushf
fs
inc
jno
imul
cwtl
cmp
push
data16
adc
mov
xor
jecxz
xlat
cld
insb
push
mov
xchg
jbe
pusha
jne
mov
inc
fucomip
cld
jne
lock
decb
adc
insl
jb
sbb
fildl
mov
sub
fsubrs
adc
movsb
imul
mov
inc
in
jge
jo
xchg
fstl
mov
inc
sub
mov
scas
push
ret
pop
sub
or
xlat
andb
push
aam
xlat
push
popf
lds
cs
icebp
fs
sub
sbbl
cmpl
imul
sub
mov
push
sbb
stos
jp
stc
xor
xchg
std
cmp
push
mov
shlb
aas
daa
popa
jecxz
icebp
and
push
pop
dec
pop
pop
mov
testl
push
cwtl
pop
xchg
call
mov
mov
cmp
jg
mov
pop
insl
and
ja
fisubrl
aaa
lds
jnp
in
or
insl
mov
pop
fmulp
inc
lea
cmpsb
cmp
mov
inc
adcb
outsb
outsb
ret
fisubs
mull
scas
adc
sahf
push
fisubl
mov
popf
xchg
out
gs
test
sub
ljmp
inc
rolb
daa
lds
clc
jle
inc
sbbl
cli
fildll
addr16
fs
int3
je
or
mov
mov
into
cmovs
jne
sahf
add
pop
jmp
inc
mov
lock
pop
movsl
clc
lret
lods
sti
and
inc
inc
mov
or
mov
lea
repz
ljmp
movsl
aam
aad
inc
pushf
into
ret
hlt
js
pop
lahf
or
add
cmp
xchg
es
mov
lcall
neg
sub
xor
ret
fcoms
dec
or
bound
ror
dec
sahf
mov
stc
add
sub
addr16
adc
add
or
or
scas
jae
mov
ret
lods
and
imul
subb
sub
test
js
jne
add
dec
clc
sarb
les
aas
lods
sbb
add
inc
xchg
fs
cs
scas
out
dec
mov
icebp
pusha
gs
fisubrl
iret
xchg
pop
pop
enter
and
cltd
xchg
lock
xchg
pusha
notb
dec
jmp
or
adc
sbb
cwtl
je
mov
inc
adcb
sub
add
mov
scas
fisubl
sbb
push
sbb
out
push
lods
ss
mov
jecxz
stos
push
cmpsl
in
or
and
dec
pusha
repnz
or
out
xchg
mov
push
movsb
popa
xor
shrl
mov
xchg
sub
sbb
adc
jno
sub
cmp
sbb
mov
enter
mov
fiadds
adc
cs
frstor
cwtl
adc
mov
add
data16
js
or
mov
std
mov
in
loop
pop
mov
add
pop
inc
xor
jmp
bound
mov
es
fnstcw
pushf
stos
aaa
sbb
pop
jmp
and
cmc
sub
or
ret
aas
lret
dec
lret
inc
and
test
adc
sarl
push
fldl
and
sbb
ss
mov
inc
in
fstpl
xchg
mov
inc
add
or
sub
add
and
insl
sti
or
and
xor
xchg
mov
sub
sub
lret
fisubl
push
mulb
xchg
rcll
pop
or
or
xchg
mov
mov
pop
push
jle
push
or
mov
inc
int
mov
cld
cltd
imul
sub
pop
cmp
mov
jmp
cltd
xchg
aam
add
jg
lea
push
jge
sahf
mov
cmpsl
lods
loop
fs
adc
ret
repnz
notb
cmpb
test
xlat
mov
pop
mov
jb
call
adc
adc
dec
sbb
loope
push
in
sbb
adc
xor
pop
inc
ljmp
push
cmovns
xchg
rcrb
es
aam
aam
fldcw
inc
popa
das
dec
mov
cwtl
sbb
cmpsb
push
ds
push
repz
cmpsb
and
call
sub
sub
mov
cmc
insb
mov
lret
subl
jecxz
lock
aaa
inc
mov
out
mov
lret
pop
cmp
or
jmp
adc
sbb
lea
pop
fwait
jge
call
bound
cmp
jo
xor
lcall
mov
fcompl
lds
in
mov
mov
push
bound
cmp
push
mov
sbb
xchg
in
repnz
xor
cmp
outsl
mov
add
dec
stos
pop
cs
sbb
xchg
shl
xchg
imul
movsb
push
pop
sbb
out
jg
and
add
pop
cmp
sbb
add
jo
repz
ja
mov
das
mov
pushf
inc
xor
fsin
jge
test
and
std
ss
jge
and
cmp
mov
xchg
pop
mov
insl
xchg
movsl
and
or
int3
xchg
xchg
aas
mov
shlb
popa
out
pop
fcmovnbe
jecxz
adc
jecxz
lahf
mov
dec
rcll
xor
jae
cmpsl
mov
loope
ss
je
cmpsl
push
add
dec
push
movsl
cltd
loope,pt
add
loope
cltd
push
pusha
or
repnz
lock
cs
sub
pop
cmp
lea
pushf
out
dec
cltd
push
xchg
xchg
adc
icebp
inc
add
gs
push
mov
sti
xchg
imul
aad
inc
pop
aas
enter
lods
xchg
push
cmpsb
sbb
inc
imul
cltd
gs
jle
sbb
push
js
lods
imul
lahf
adc
mov
pop
mov
std
out
mov
es
jecxz
jmp
cmp
movsb
lret
notl
popa
jge
sub
adc
mov
add
push
xchg
sub
sub
push
mov
pop
adcb
out
arpl
inc
outsb
jg
mov
pop
repz
mov
aad
inc
daa
pop
dec
add
sbb
mov
lods
mov
pop
clc
ds
rorl
stos
xor
xchg
fwait
enter
in
push
aas
and
jo
jl
ret
subl
xor
clc
jno
cld
mov
shlb
cmp
dec
hlt
mov
pop
push
hlt
add
and
pop
push
dec
add
or
mov
jb
fisubl
gs
dec
xor
xchg
jnp
popa
and
or
outsl
dec
pop
xor
add
pop
out
adc
rcrb
add
fsubp
into
lods
push
fmuls
push
push
sbb
ds
cmc
insb
mov
or
dec
adc
or
add
inc
mov
stos
add
movsb
icebp
or
lea
adc
js
vpaddw
enter
fs
fidivs
add
fidivrs
loopne
push
filds
mov
imull
pop
je
arpl
es
fidivs
lds
hlt
adc
inc
notl
mov
and
mov
mov
mov
and
mov
test
ss
jp
call
lods
mov
hlt
jle
sbb
shll
mov
pop
stos
fcoms
adc
jne
sub
loopne
out
shlb
push
xchg
pop
pop
xor
fsubr
lret
test
lret
pop
push
jle
testb
inc
fs
xchg
pcmpgtb
cltd
pushl
fdivrl
test
imul
mov
jl
push
push
inc
repnz
adc
clc
jb
lcall
dec
mov
push
and
sbb
ret
outsl
lds
mov
enter
in
cmpps
test
mov
nop
inc
rorb
jne
ljmp
add
int3
or
jnp
jns
add
shlb
icebp
add
imul
xor
je
push
mov
js
and
aam
lods
xchg
push
lods
shl
jb
out
ss
or
push
jno
lahf
int
jns
or
iret
sub
xor
hlt
aas
in
ljmp
das
lcall
push
int3
js
dec
mov
or
aad
xor
xchg
cmp
adc
push
aaa
test
sbb
xchg
mov
dec
leave
popf
lahf
or
aad
and
shlb
fcompl
xor
ret
cmp
jp
sbb
pop
jb
aaa
inc
inc
or
pop
lret
sbb
xchg
loopne
sbb
movb
and
pop
or
stc
dec
jl
mov
sub
xchg
loopne
mov
sub
shrl
fisttpl
sbb
inc
js
xor
nop
inc
dec
imul
cmp
leave
or
in
fldenv
sub
repnz
xchg
ja
jmp
pop
cld
lcall
or
stos
in
aaa
and
lods
lock
loop
mov
add
xor
popf
imul
sub
mov
insl
xor
and
mov
push
fsubr
mov
sti
iret
das
ret
dec
xchg
aas
stc
fs
ja
jb
sub
push
mov
test
js
inc
jmp
data16
mov
mov
or
cmp
dec
nop
shll
mov
aaa
nop
add
lret
cmp
jo
aam
cmpsb
addr16
fcoms
testb
jno
sub
stos
jne
xor
sub
imul
jl
fidivs
add
push
pop
mov
in
xor
cmp
pusha
imul
cmp
inc
inc
jns
pop
mov
xchg
imulb
sub
fmuls
sub
push
mov
xor
pop
inc
cmc
test
ror
test
sahf
lods
jp
inc
mov
adcb
adc
mov
pop
mov
loopne
and
mull
sbb
mov
xor
sub
push
xchg
jae
loopne
pushl
out
punpckhbw
mov
sbb
sbb
and
xlat
rorl
push
jns
mov
cwtl
lret
add
xor
bound
sub
sbb
dec
mov
mov
or
pop
cmp
pop
push
dec
fistps
xor
jl,pt
cmp
int
push
push
or
xor
mov
mov
jno
mull
jecxz
imul
cld
xor
mov
clc
neg
xchg
aad
or
xchg
sbb
push
mov
bound
ss
out
in
js
hlt
cmpsl
sbb
cmp
jns
inc
adc
jne
dec
add
sub
sub
cmp
insl
pop
pop
sbb
adc
pusha
in
insl
cmp
push
rcll
insl
mov
sarb
sbb
lcall
xor
call
sub
stc
imul
and
push
sti
call
cmp
adc
rcrl
addr16
mov
and
jnp
sbb
and
arpl
test
ja
jne
jns
mov
sahf
lahf
adc
push
das
mov
xchg
cmp
mov
orl
mov
mul
std
sbb
push
sub
call
add
push
cltd
add
jns
sub
stos
in
pusha
stos
xchg
sbb
push
int3
into
movsl
add
insl
into
aam
or
cltd
ror
push
icebp
repz
cmp
cmpsl
subl
mov
mov
ss
jno
inc
mov
cmp
filds
dec
repnz
movsl
subl
mov
xor
inc
aad
aaa
repz
fwait
lcall
in
lret
and
xchg
adc
inc
xchg
mov
cmp
sub
es
imul
sub
in
jo
pop
mov
xchg
cmp
xchg
sahf
and
insl
les
vmulss
push
mov
jl
jp
rolb
push
clc
in
js
jg
mov
lahf
mov
mov
mov
mov
jge
dec
xor
dec
outsl
inc
mov
lahf
adcl
xor
mov
adc
lret
jmp
or
mov
frstor
or
movsb
stc
int
mov
and
jnp
out
dec
push
fldenv
inc
js
jno
clc
pop
push
stos
xchg
cltd
cmc
and
das
pop
mov
xchg
jle
loopne,pn
jge
xor
pop
call
xchg
jmp
mov
add
inc
out
fiadds
mov
sbb
cs
fbld
mov
sbb
or
lret
rorl
das
dec
jno
add
fadd
fs
sbb
mov
popa
pop
sub
adc
lds
fnstenv
push
loop
add
cmc
add
test
orb
imul
test
cmp
insl
mov
bound
sbb
push
xchg
jb
cli
fstps
push
sbb
addr16
fbld
pop
jne
mov
out
add
adc
sti
sbb
push
test
shll
pop
push
push
loopne
aad
icebp
push
push
mov
sbb
mov
scas
test
mov
sub
or
movb
ds
jecxz
mov
stc
push
xor
pop
and
adc
loope
cli
cmpsl
add
mov
or
xchg
xchg
lods
cmp
xchg
cmp
adc
je
stc
aas
mov
cli
mov
outsl
int3
outsl
mov
inc
fdivs
push
or
jg
mov
hlt
sbb
sbb
aam
and
jg
inc
fcomps
aas
xchg
fmull
xchg
lea
jne
add
aad
stos
push
loop
aas
mov
mov
pop
out
jmp
cmp
push
popf
jecxz
push
out
outsb
int
inc
xor
stos
sub
push
inc
xchg
push
jecxz
sbb
jbe
dec
mov
cmp
data16
push
inc
cwtl
lahf
cmp
mov
push
out
sub
loopne
cmp
pop
xor
fcoms
imulb
mov
xor
cmp
sbb
fcompl
shll
mov
lcall
sbb
nop
mov
jo
inc
push
cmp
jne
mov
test
std
add
xor
push
mov
hlt
xor
xor
push
stos
subb
cltd
dec
push
fimull
out
dec
pmulhw
insb
or
or
insb
mov
pop
shlb
pop
stc
jl
in
push
movsl
test
mov
mov
stos
roll
out
stos
lock
addr16
int3
arpl
fsts
sub
jb
repnz
push
jo
add
out
imul
push
ljmp
adc
mov
mov
jbe
mov
leave
dec
fadds
jno
das
mov
and
mov
out
addb
sub
imul
mov
or
inc
lods
add
and
push
jne
pushf
sbbl
loop
push
mov
push
jo
cltd
inc
out
push
and
lods
aaa
sub
ret
jecxz
mov
xor
ror
mov
rclb
add
shlb
mov
mov
fistl
add
aad
test
dec
lahf
sarb
sbb
mov
call
test
jg
or
add
test
outsb
repz
xchg
in
inc
out
ficompl
lea
pop
ret
sub
xor
jecxz
fs
push
mov
dec
add
aas
pop
push
push
push
xchg
fisubrl
pop
mov
jnp
arpl
cmp
fstpt
scas
push
in
sub
jg
mov
cmpsl
les
sbb
pop
adc
xchg
imul
xchg
push
and
push
in
pop
sbb
sti
divb
xchg
int
add
and
cmp
dec
mov
js
rcr
pop
mov
lret
pop
jmp
or
lds
pop
addr16
fisttpll
fsts
sbb
ret
xor
and
push
and
sub
test
addr16
fwait
mov
sub
mov
adc
out
jle
in
iret
push
fs
imul
addl
hlt
divl
mov
pop
lock
aas
pop
int3
loope
add
inc
out
and
pop
iret
ret
inc
pop
mov
movsl
jno
rolb
mov
push
js
shlb
sbb
das
inc
push
dec
sbb
imul
out
cltd
dec
pop
fs
xchg
push
clc
adc
lods
fs
pop
mov
push
jecxz
xchg
int
arpl
fcomps
ud1
push
or
iret
cmp
cltd
jp
enter
cmp
dec
dec
inc
xchg
mov
jle
ud1
push
lahf
sbb
xor
inc
stc
scas
out
ret
xchg
daa
mov
int3
mov
in
pop
jle
nop
xor
sub
jne
pop
push
repnz
gs
xor
movb
fcoms
dec
mov
pop
aad
inc
xchg
popa
cmp
aad
jp
and
icebp
dec
mov
lret
jl
sbb
out
push
mov
push
fidivrl
clc
stos
out
cmp
push
add
sar
in
nop
insb
shll
shrl
out
repz
sbb
call
pop
imul
mov
fsub
ss
divl
xchg
imul
addr16
clc
fistps
cli
in
js
dec
ja
xlat
push
mov
add
jle
xor
aam
add
out
enter
mov
rcll
pop
iret
inc
and
es
lret
add
and
pop
pop
pop
or
vpsrlw
imul
loope
test
mov
ret
fiadds
mov
fmull
pop
arpl
in
test
leave
mov
push
xor
fwait
lea
adc
sbb
jb
dec
mov
ficoml
nop
loopne
mov
popf
out
and
mov
lcall
call
fstpt
sub
push
daa
cli
jae
cmc
loope
jnp
pop
push
stc
es
loopne
cmp
mov
lret
sub
mov
xchg
pop
mov
jo
mov
rclb
xchg
cmp
xor
dec
ffreep
jecxz
out
jecxz
xchg
adc
mov
mov
sub
sbb
idivl
add
cltd
add
data16
xchg
pop
xlat
insb
push
inc
sbb
test
int3
sarl
bound
ret
outsb
add
jg
idivl
in
fidivrs
imul
xchg
fs
call
adcb
pop
out
cmc
ss
inc
mov
int3
ss
xchg
pop
inc
mov
pop
xor
push
push
cmpl
int
lret
js
jl
shrd
out
mov
cmp
adc
cs
xchg
fildll
cmpsb
or
adc
out
jno
push
pop
xor
dec
scas
test
pop
cmp
adc
cmp
adc
mov
pop
clc
dec
sbb
ljmp
sar
inc
or
dec
mov
lret
jp
scas
sub
push
sti
pop
je
shrb
leave
mov
fwait
mov
mov
les
pop
pusha
das
out
pop
shrb
mov
jg
jg
xor
adc
adc
std
dec
jecxz
inc
mov
stos
add
pop
dec
mov
or
mov
jl
stos
mov
out
mov
adc
inc
adc
pushf
cmp
fsubs
sbb
add
push
jae
or
data16
or
sti
mov
dec
scas
cmc
out
insb
mov
xchg
loopne
sti
aas
pop
cli
loop
inc
ds
xlat
sbbl
bound
sbb
das
orl
aam
loope
out
into
data16
int3
faddl
inc
adcl
stos
sbb
inc
inc
fwait
mov
mov
lcall
sbb
mov
fisttps
mov
mov
mov
lahf
jb
jno
xor
cmc
call
pop
add
push
mov
cmp
sbb
mov
adc
pop
push
cmpsl
adc
push
or
rolb
inc
data16
stos
inc
inc
lret
xlat
nop
or
in
cmp
jle
xchg
cld
or
in
add
shr
xchg
inc
shr
push
das
and
divb
je
cmp
in
dec
push
ds
sarl
int
pop
mov
add
addb
lods
adc
mov
jmp
xor
lds
jmp
xor
jle
nop
sub
repnz
dec
incb
lds
lds
mov
fwait
cmpl
sbb
mov
mov
mov
sbb
aad
in
jmp
and
movl
inc
popf
dec
sub
cmp
enter
sub
aad
xorb
dec
sub
mov
push
imul
dec
sbb
inc
fbld
cmp
daa
xchg
add
and
rol
outsl
in
out
inc
cld
lahf
je
mov
movsb
pushf
into
loope
sbb
push
rcll
fmul
testb
sbb
std
cmp
sbb
imull
hlt
testl
fwait
sub
cmp
adc
xor
jns
mov
push
cmp
pusha
xor
or
inc
vaddps
lcall
add
pusha
mov
adc
adcb
or
lret
jl
gs
popf
push
jnp
add
jnp
das
xlat
pop
add
aam
inc
adc
jle
inc
cmp
mov
aaa
add
push
xor
ret
pushf
dec
fcoms
pop
push
pusha
push
loop
nop
mov
mov
ds
rolb
xor
sub
call
mov
pop
movsl
rcll
dec
lret
dec
icebp
push
or
pop
int
mov
adc
and
stos
sbb
in
lock
xchg
cwtl
test
stc
fidivs
test
inc
out
add
fdivrl
adc
movsl
div
xchg
sub
xor
insb
sahf
ror
or
sbb
pop
stc
sarl
rcrb
or
mov
sub
add
inc
sub
add
popa
pop
testb
fs
fwait
in
cwtl
dec
ds
dec
xor
mov
mov
and
mov
jno
shl
leave
mov
inc
xchg
arpl
push
ja
and
add
xchg
pop
cmp
cmp
invd
push
xor
xchg
xchg
jnp
aas
cmc
sbb
test
pop
sbb
xchg
bound
xor
push
rolb
mov
dec
mov
scas
js
cmp
int3
aaa
into
mov
in
jecxz
sti
mov
xchg
push
and
shll
addr16
inc
enter
imul
test
cmp
cltd
aad
mov
xor
sbb
rcrb
lea
sbb
dec
aaa
jle
icebp
das
lahf
jnp
ja
cltd
xchg
mov
mov
sti
js
sub
cmpsl
lods
jecxz
fsubrl
mov
jmp
xor
mov
out
mov
sbb
cmpsb
call
int
adc
int3
insl
mov
dec
popa
in
inc
insl
jo
inc
pop
in
loope
lret
mov
scas
or
xchg
add
dec
add
aaa
out
insl
loopne
mov
push
sbb
repz
jp
pop
push
outsb
mov
sahf
push
loop
sub
lods
inc
mov
mov
cmp
jg
add
sub
mov
sbb
pusha
mov
xor
rol
inc
dec
add
jmp
mov
ret
or
loopne
add
leave
test
loope
cmp
add
inc
pop
mov
insb
mov
mov
sub
or
push
mov
adc
data16
sub
insl
pop
or
cld
sub
mov
adc
gs
ret
mov
stos
ljmp
rorl
mov
subl
mov
test
adc
test
mov
cs
dec
mov
popf
loope,pn
mov
out
cmp
fsubl
pop
mov
sbb
adc
pop
addr16
rcll
outsb
fsts
push
pushf
and
jno
dec
fcomi
test
arpl
ljmp
xor
out
pop
clc
sbb
mov
rcll
pop
mov
xor
push
movsl
loop
sub
cmc
adc
sbb
push
dec
dec
ficoms
and
xchg
push
std
mov
adc
fsubr
push
adc
push
mov
adc
mov
movb
lods
add
xchg
mov
and
loopne
pop
mov
or
ljmp
jmp
sarb
pop
and
fdivr
sub
sub
cltd
pop
mov
xchg
sbb
dec
dec
push
cmpsl
enter
das
int
pop
and
sahf
pop
sub
pop
mov
sbb
mov
aaa
cmovb
mov
dec
xchg
xor
xchg
push
insb
repz
and
dec
test
mov
jp
jle
insb
fiadds
add
and
lea
shlb
adcl
xor
out
aad
sti
out
mov
or
stos
in
jae
sahf
test
adc
sub
jb
popa
jo
jbe
jle
cltd
lock
aaa
mov
cwtl
mov
fdivrp
inc
int3
aaa
xor
jmp
inc
add
pusha
rep
pop
ret
push
fimuls
mov
sub
jp
in
pop
jp
mov
in
add
add
sbb
xorb
shl
dec
lock
lea
into
push
bound
push
aas
mov
sbb
pop
xchg
imul
enter
out
shlb
or
das
dec
pop
lods
mov
in
nop
inc
out
xchg
fwait
cmp
iret
cmp
aam
mov
mov
dec
mov
mov
jge
cld
repnz
fs
adc
test
enter
test
mov
xor
lcall
mov
lock
and
and
cmp
outsl
in
pushf
mov
cld
xchg
pop
or
ficomps
fistpl
cld
fdivs
cmpsb
and
dec
in
xchg
xor
adc
popa
sti
mov
mov
mov
push
adc
adc
xor
out
addl
xchg
iret
pushf
movsb
sub
mov
out
and
xchg
mov
aad
jmp
in
sbb
mov
jns
outsb
push
mov
testb
and
inc
out
leave
in
pop
push
fdiv
fisubl
dec
mov
push
and
roll
insl
loop
insb
jmp
jecxz
cmpsl
dec
add
stos
cs
mov
cli
adc
xor
sub
push
or
cmp
leave
cmp
ret
jne
inc
push
mov
cmp
call
xchg
sub
xor
push
movsl
fstpl
rcr
outsb
scas
adc
shll
sbb
leave
and
and
ljmp
cmp
insl
mov
push
imul
test
cmpb
loope
xchg
adc
shll
dec
inc
test
jp
mov
push
les
dec
jl
int
xchg
mov
push
outsl
sbb
dec
in
shll
jno
pusha
dec
add
adc
sahf
pop
jmp
xchg
inc
insb
imul
cmp
lret
ja
push
mov
pop
fwait
xchg
pop
imul
xchg
shll
cmp
nop
daa
data16
loop
dec
push
in
aam
push
push
jno
adc
xchg
sarb
push
xadd
dec
icebp
in
xor
jnp
clc
sub
adc
nop
mov
sarl
into
jns
pop
insb
jge
imul
adc
imul
out
incl
loop
pop
outsb
mov
popf
into
js
daa
mov
pop
out
push
mov
je
in
pusha
rdmsr
jb
lods
imul
scas
and
roll
fsubl
pop
int3
xor
add
and
rcll
rorb
xor
xor
pop
xor
lock
mov
dec
js
pop
cmc
or
pusha
pusha
test
ret
jmp
sbb
bound
jle
into
and
xchg
adc
jle
cmp
aad
add
bound
stos
aam
xabort
aas
adc
std
imul
or
div
mov
nop
adc
subb
andb
addr16
pop
in
mov
mov
ss
push
xchg
xchg
stos
pop
ds
dec
nop
pop
js
jnp
fiadds
movsb
addr16
mov
inc
lret
mov
xor
adc
sbb
roll
sub
testb
jmp
sub
stc
and
in
pop
and
rorb
inc
clc
xor
icebp
bound
pop
aaa
dec
mov
in
out
mov
and
mov
push
aaa
jnp
test
cld
int
push
test
ds
in
mov
pushf
fistl
mov
data16
pushf
pop
cmp
xor
std
cld
xchg
rolb
and
pop
inc
sub
and
push
popa
fwait
leave
mov
mov
out
shl
jmp
cli
inc
adc
imul
jbe
mov
mov
insb
sbbb
mull
lret
xrelease
mov
add
or
leave
repnz
pop
out
mov
fsubs
out
adc
push
push
iret
jp
lods
leave
mov
xchg
and
adc
sbb
sub
pushf
xor
push
xchg
int
ja
push
adc
fnstsw
fld
pop
jmp
addb
pop
mov
mov
mov
mov
adc
imul
or
add
test
cmp
cmp
xor
lea
popf
in
out
insl
scas
in
add
dec
fstl
mov
inc
pop
cmpsl
xor
scas
cli
xchg
loopne
add
pop
cmp
rcrl
sahf
xchg
ficomps
add
or
ja
cmp
push
cmp
in
inc
shr
stc
movsl
add
jbe
xchg
mov
cmp
jno
mov
aas
push
mov
add
and
jp
shl
dec
fisubrs
xchg
pop
xchg
xchg
mov
push
hlt
jge
inc
dec
movl
sahf
call
inc
outsl
stc
fisubrl
push
mov
and
push
jo
mov
pop
stos
ret
mov
dec
mov
aam
jl
sub
pop
ror
push
jno
test
aam
sub
out
hlt
imul
mov
or
mov
mov
shll
xchg
or
fwait
jp
repnz
add
imul
lea
push
push
shlb
add
push
inc
fcom
lock
inc
sbb
movsl
mov
inc
jecxz
out
or
adcl
scas
repz
and
push
inc
jo
rcr
lock
lahf
mov
sbb
push
fs
imul
icebp
lcall
in
aas
cld
in
xor
xchg
and
data16
or
pop
or
hlt
dec
sbb
stos
ja
add
cmp
lds
in
mov
and
dec
and
jmp
adc
mov
aas
xchg
add
rclb
movsl
shlb
int
mov
int3
adc
pop
shrl
lea
fcompp
add
lock
enter
sub
sbb
lret
dec
push
sub
mov
les
add
fcomps
inc
mov
adc
fnstenv
js
repnz
lea
sbb
dec
aas
mov
dec
movl
mov
in
imul
cmp
adc
xchg
aam
das
imul
mov
mov
and
in
std
dec
adc
inc
xor
push
pop
out
jg
cmp
aas
inc
cmpsb
push
sbb
mov
mov
fmull
aam
xchg
testl
fwait
mov
sbb
cmpsb
leave
jg
sub
push
out
or
out
mov
fiaddl
repz
loope
je
lret
and
sub
mov
outsb
enter
lcall
mov
gs
dec
push
clc
push
mov
xchg
js
and
add
jecxz
loop
test
mov
push
loope
jo
jg
shll
popa
loopne
xorb
cmc
push
mov
mov
mov
lret
jge
shl
push
jg
add
rcrl
popa
imul
mov
roll
mov
mov
fildll
jge
cltd
cmp
sub
sub
in
jg
pop
leave
js
fidivrl
addl
push
nop
mov
out
int
in
add
or
dec
aaa
orl
pop
xor
mov
mov
xchg
sbbl
fists
ljmp
mov
aad
notb
aam
out
loop
xsaves
jp
mov
shlb
mov
mov
negb
add
dec
pop
push
movsl
cli
aam
jnp
xchg
in
add
mov
stos
pop
movsl
in
popa
push
cmovge
push
cltd
dec
icebp
arpl
lods
mov
sub
sub
and
jl
jne
cmpsb
and
lea
jg
outsb
sti
mov
jg
and
lock
sub
sub
sub
test
xor
pop
mov
cwtl
xor
add
mov
repnz
pop
jl
dec
pushf
hlt
xchg
xor
xor
arpl
out
aas
lret
mov
rclb
jp
loope
adc
adc
mov
mov
mov
into
daa
xchg
push
jne
and
ss
push
mov
mov
ret
decb
xor
movsb
and
movsb
dec
adc
call
xlat
and
add
cmpl
or
xchg
loope
jne
fists
fucomi
cmp
xorl
and
xchg
add
inc
repz
cltd
lea
sub
test
dec
pop
aam
xchg
dec
mov
fidivrl
adc
mov
push
imul
push
push
mov
dec
sbb
add
mov
cmp
scas
adc
stos
cltd
jcxz
in
inc
jne
ss
xor
shlb
inc
push
sub
inc
inc
shll
in
push
ja
mov
jle
or
dec
adc
mov
imul
repz
pop
push
pop
addr16
mov
sbb
pop
or
and
xor
xchg
pop
stos
cmpsb
jl
mov
rcrl
repz
xchg
cmpsl
push
repnz
call
mov
xor
push
test
sti
and
cmpsl
mov
sbb
pop
sbb
cmp
dec
sbb
insb
sub
xor
test
xor
push
xchg
js
sar
sbb
dec
cmc
inc
xor
jno
cmp
adc
ret
sub
outsb
test
push
pushf
adc
shll
repnz
xlat
jmp
cli
add
mov
dec
dec
xchg
add
mov
insl
pop
cmp
mov
jo
ja
cmp
jo
mov
pop
mov
pop
in
mov
sub
xchg
mov
sub
shlb
mov
lcall
ja
aad
push
leave
xchg
insb
int3
clc
mov
popl
xor
xorl
sub
dec
or
dec
lcall
adc
pop
mov
mov
dec
loopne
mov
mov
jge
call
mov
pop
push
cwtl
cmpsb
xchg
lea
xor
addr16
dec
clc
aaa
xorb
mov
ja
popf
iret
pop
and
push
jae
aas
and
push
jno
push
push
lea
push
data16
hlt
jp
cmp
in
ljmp
lods
fwait
xchg
pop
lds
mov
or
lret
pop
xor
cmp
add
out
daa
xchg
rclb
xor
mov
test
push
push
xchg
mov
rol
jno
or
jns
cwtl
or
push
loop
dec
loopne
sub
xlat
mov
daa
inc
mov
shl
jmp
inc
cmp
flds
xchg
mov
xor
xor
rcll
jnp
es
scas
int3
es
movsl
sub
outsl
test
push
shl
cmpsl
mov
adc
loopne
or
jns
jp
cmpsb
in
pop
iret
xchg
xor
lea
in
ds
mov
fcoms
cld
jecxz
sbb
jbe
add
xor
pop
cmp
pop
lret
loope
sub
iret
shll
xor
lods
arpl
int3
cmp
imul
cmp
fstp
arpl
sub
hlt
or
mov
fisubrs
mov
into
mov
in
cmc
pop
idivl
push
test
mov
mov
and
mov
pop
fstps
push
mov
dec
add
out
incl
out
lods
and
dec
mov
mov
iret
mov
sub
xor
inc
push
test
xchg
loope
es
sub
ret
ret
and
dec
jno
or
or
adc
mov
sbb
shlb
movsb
xchg
push
inc
jle
sbb
lods
dec
pop
bound
xor
jae
inc
out
inc
mov
insl
aaa
pushl
ljmp
and
fists
mov
imul
imul
cmp
inc
imul
iret
push
mov
sbb
test
add
or
in
out
shr
jne
test
cwtl
pusha
push
adc
cmc
in
mov
ret
fbld
imul
adc
xor
ja
inc
mov
adcl
in
adc
dec
les
jmp
pop
mov
test
inc
cmp
mov
jp
or
mov
cmp
leave
xchg
dec
cmp
test
lods
jne
in
mov
mov
cmpsb
cmpsb
jle
lock
daa
outsl
popf
imul
jle
inc
mov
push
insl
or
fdivrl
mov
pop
paddd
xchg
dec
inc
sub
ret
arpl
jle
or
sub
ja
jne
adc
pop
cmp
jne
xor
lret
popf
pop
test
dec
pop
mov
push
stos
insl
nop
push
lock
xchg
dec
ret
lcall
ds
repnz
or
mov
data16
and
xor
out
rep
pop
jne
inc
jo
jge
xchg
lea
push
loop
loope
or
lods
jne
call
in
jne
jnp
mov
lea
mov
ja
sub
sub
ret
je
dec
stos
in
mov
data16
aas
add
scas
sbb
int3
xor
int3
shrb
loop
imul
sbb
lahf
shlb
xchg
mov
xchg
test
hlt
addr16
lgs
gs
adc
jne
and
xchg
lock
or
xor
hlt
jle
add
pusha
xor
xor
mov
xor
icebp
pop
push
icebp
addb
ja
mov
xchg
ds
out
les
sbb
ja
lcall
adc
or
xor
or
sub
dec
test
loop
sbbl
xchg
xorl
lods
cmp
fs
inc
xchg
jne
mov
outsl
loope
sub
xchg
in
std
in
push
hlt
std
and
mov
cmp
xor
in
cwtl
movsb
insb
sub
dec
cmc
test
arpl
add
into
mov
in
aam
jecxz
cld
adc
sbb
leave
mov
pop
jae
iret
add
add
gs
out
icebp
or
sahf
inc
and
xor
push
insb
cmpsl
dec
dec
cmpsw
in
arpl
lods
pop
sub
pop
inc
dec
pop
or
lods
lods
in
sub
fwait
dec
call
out
adc
fbld
pop
push
pop
xchg
loop
mov
insl
or
mov
mov
mov
and
cli
stos
popa
pop
mov
roll
xor
adc
and
lock
les
sahf
sbb
js
cmp
xchg
xchg
call
cmpl
out
lea
loopne
scas
adc
mov
and
or
xchg
pop
sbb
js
pop
pop
jle
lret
jo
loopne
gs
mov
pop
lods
sbb
mov
int
ss
repz
repnz
add
push
test
jno
jle
jne
jbe
jns
jo
xchg
adc
pop
sti
and
push
fmull
mov
cltd
mov
push
sar
or
std
bound
jl
in
sbbl
movsl
push
push
out
cmpsb
into
addr16
lds
pop
or
sahf
push
mov
rcl
out
divb
rolb
cwtl
adc
test
sbb
xlat
adc
cmp
add
das
call
jmp
call
mov
xlat
and
pop
clc
int
add
ss
ja
mov
jmp
and
push
xor
js
mov
and
mov
mov
push
sub
lods
push
aad
sbb
pop
les
ret
sbb
outsb
xchg
lds
pop
mov
push
mov
sbb
imul
sti
aam
and
ret
xchg
cmp
adc
je
test
fwait
in
clc
lret
pop
dec
sbbb
mov
fld
push
enter
xorb
cmp
or
fs
cs
xchg
jg
sar
jbe
int
mov
popf
adc
jne
sbb
gs
jge
xor
fistps
xor
xchg
fistpll
push
daa
xchg
jns
pop
mov
xchg
ficoms
repz
cmp
fs
loopne
hlt
sbb
cs
sub
mov
fists
sub
gs
cmpsb
cmp
sti
mov
mov
xor
mov
pop
fnstcw
stos
cmc
sbb
mov
jne
lock
pushaw
jb
ret
fnsave
jbe
sbb
adc
jae
push
icebp
lds
pop
and
sub
or
in
test
dec
and
push
mov
pushf
xchg
push
aas
push
fwait
mov
mov
inc
mov
adc
shll
testb
jg
or
mov
and
stos
dec
and
and
mov
push
cwtl
cmc
addr16
repz
mov
popf
pushf
lret
inc
inc
pop
or
rcrl
or
adcl
mov
xchg
cmp
add
cmpsl
adc
fidivl
stos
pop
loop
adc
cmp
aas
gs
dec
inc
mov
cmp
jle
push
das
aad
mov
push
bound
inc
cltd
add
inc
call
sti
xchg
xchg
push
xor
bound
addb
out
sarb
and
lcall
push
out
pop
aas
pop
mov
pop
les
cmp
insl
notb
ja
dec
sbb
in
testb
jae
call
jns
xor
mov
in
mov
cmp
cmpsb
insb
lahf
notb
out
orl
inc
rcrl
jl
test
loopne
jmp
jmp
inc
sti
fistps
mov
xchg
and
icebp
je
rorb
scas
test
and
xor
ficomps
push
dec
push
int
pop
sub
aaa
mov
pop
int3
jae
mov
dec
imul
ficomps
cmp
adc
push
adc
daa
xchg
nop
cmp
andb
imulb
sub
daa
push
pop
clc
les
js
adc
daa
pop
cmp
xchg
push
mov
je
call
stos
jecxz
lret
imul
xor
and
mov
jg
adc
mov
mov
fbld
ss
popa
loope
jl
outsl
scas
mov
imul
xchg
mov
lods
je
pusha
insb
in
add
jae
xchg
and
out
sbb
scas
mov
xor
sub
mov
inc
cmpsb
in
mov
dec
cmp
inc
call
cld
shrb
jg
adc
add
data16
enter
scas
mov
or
rcll
mov
repz
pop
xchg
inc
adc
movsl
adc
les
pop
sub
aad
stc
call
cmp
push
dec
das
subl
dec
scas
mov
or
pop
cmp
and
repz
call
test
nop
icebp
negb
xor
push
or
mov
add
jae
mov
cltd
mov
enter
pop
les
or
sub
lock
repnz
or
push
mov
cmove
stos
pop
test
xorb
inc
or
dec
test
das
mov
in
cmp
xchg
cltd
cltd
test
test
pop
push
jmp
xchg
pop
sbb
xchg
mov
jae
dec
jge
sbb
out
fcoml
push
add
mov
jae
lods
jp
movsl
ds
in
aam
lds
or
dec
mov
pop
fucomip
and
ror
push
arpl
arpl
and
or
add
dec
inc
fwait
test
cmp
imul
push
in
dec
mov
push
jmp
outsl
aam
and
pushf
ret
add
sbb
cmpsb
dec
popl
cmpsl
outsl
daa
iret
pop
jo
sub
mov
xlat
out
cmpsb
lods
xor
push
add
mov
rcl
addr16
or
xchg
test
pop
test
js
aaa
sub
sarl
xor
inc
cli
sbb
mov
or
daa
test
sbb
mov
lret
loope
mov
out
sbb
icebp
or
jge
shll
pop
jno
orl
int
clc
les
popf
icebp
push
jge
in
push
popf
jmp
pushf
cmpsb
push
mov
jge
xchg
add
inc
iret
adcl
int
mov
or
dec
cltd
clc
fistl
mov
shl
xor
insl
sbb
loopne
test
jae
push
mov
and
das
dec
notb
fcomip
imull
push
jb
mov
push
and
repnz
fimuls
imul
sbb
push
jns
or
pop
inc
xchg
repz
sub
fldl
lcall
sub
pop
cmp
jb
sub
je
xor
xchg
iret
xchg
test
scas
insb
xchg
cli
lahf
pop
test
push
pusha
clc
shrb
cld
mov
mov
fstpl
mov
rcrb
mov
das
push
xchg
jns
scas
les
add
mov
je
cld
push
fwait
lods
sbb
mov
aam
andl
ret
addr16
jg
jne
lret
inc
push
icebp
cmp
xchg
push
dec
cwtl
les
mov
jp
xchg
in
jl
push
push
lock
cmpsb
sbb
or
idivb
aad
stos
sbb
pop
outsb
bnd
outsb
pop
cmpl
lcall
or
push
push
packuswb
sub
das
sub
dec
adc
dec
mov
in
sti
mov
xlat
and
fs
cmp
mov
and
mov
and
lods
popf
mov
sbb
sbb
cld
in
jns
int
cmp
mull
repnz
cmpsb
sbb
adc
xchg
lret
lock
adc
fwait
jb
data16
std
pop
out
rcrb
jae
stos
dec
iret
inc
jae
xchg
das
and
inc
adcl
mov
xchg
shlb
lahf
fsubrs
or
cmp
loop
lock
pusha
das
es
test
fcmovbe
pop
adc
dec
fldl
add
mov
xchg
int3
sbb
pushf
inc
aad
mov
sub
xchg
sub
cmp
icebp
mov
cmp
adc
into
lods
inc
inc
add
jns
sbb
iret
es
mov
dec
mov
hlt
sbb
mov
and
out
scas
out
push
sbb
xor
sub
sti
test
mov
out
xchg
dec
nop
fildl
mov
imull
dec
add
lret
cmp
mov
hlt
add
xchg
mov
xor
cmp
xchg
xchg
sarl
arpl
jmp
sub
std
nop
in
mov
sbb
call
repnz
xchg
adcl
sarl
adcl
lahf
je
add
pop
movb
aam
push
gs
stos
dec
add
xor
and
dec
ds
jae
push
xlat
push
aas
mov
enter
or
pop
pop
push
pop
sub
push
jle
pushf
or
loopne
aas
xchg
pop
inc
adcl
xchg
icebp
lret
mov
jge
dec
dec
jg
out
pop
inc
cltd
xchg
pop
out
std
out
clc
gs
jnp
cmpsl
xchg
popf
out
pushf
arpl
pop
fstl
shl
xchg
outsb
jb
sbb
popa
push
fcomi
popa
sbb
cmpsb
add
sbb
fnstsw
sub
fsubrl
mov
mov
mov
aas
shlb
fcomip
leave
ficoml
iret
or
inc
xor
sub
out
sub
jecxz
push
mov
lds
jns
sub
dec
and
maxps
cmp
cli
cmp
pop
aam
xchg
roll
cmp
out
lahf
enter
jb
out
add
xlat
jge
or
cmp
mov
add
push
xchg
test
dec
in
std
lock
or
nop
iret
lea
movsl
adc
cmc
pop
dec
loop
das
mov
jb
cmpsb
mov
mov
mov
test
ja
push
ja
movsl
loopne
clc
insb
xor
pushf
loope
outsb
jae
add
inc
in
icebp
or
adcl
xor
and
pop
cltd
outsl
sahf
cmp
push
outsb
pop
inc
and
mov
add
imul
nop
or
cmp
bound
adc
mov
xor
mov
adc
ja
arpl
jp
jbe
sbb
aad
fmul
mov
cmp
scas
add
xor
sti
pop
add
test
push
imul
xlat
dec
in
call
lods
es
inc
ja
mov
mov
ficoms
cmpb
mov
mov
int
stos
and
add
lods
ss
pop
fisttpll
hlt
imul
xchg
jb
scas
xor
cmp
or
cmpb
xchg
sub
pop
dec
adc
mov
jmp
cs
mov
mov
neg
jno
mov
pushf
stos
push
dec
mov
sub
pop
cli
sti
jno
sub
inc
inc
inc
mov
popa
cmp
stos
nop
lock
mov
cmp
inc
sub
pop
cmp
pop
mov
wrmsr
xchg
or
adc
dec
sub
mov
cmpsl
push
sarl
add
fldt
cmc
outsl
pop
in
sub
test
out
push
lcall
fbstp
loope
mov
add
les
fiaddl
push
repnz
pop
sub
stos
out
or
jl
inc
shrl
push
inc
test
dec
pop
sub
cmp
inc
test
cmp
pop
shll
pop
ret
rclb
xor
mov
scas
and
test
add
fcmovu
cs
js
outsb
popf
ds
fstps
jl
dec
push
mov
push
imul
sub
faddl
xor
lods
and
or
cmpsl
lcall
mov
jae
lods
lret
in
ljmp
icebp
mov
jmp
push
and
mov
imul
pop
pop
push
sbb
aam
stos
push
and
ja
xor
shlb
data16
pusha
or
push
xor
jmp
push
loope
sbb
shr
dec
add
je
push
inc
cmp
mov
mov
jg
xlat
stos
mov
lods
dec
jp
sub
in
push
stos
test
push
push
sbb
lcall
adc
mov
inc
loop
mov
jbe
xorb
jg
shl
jp
repz
out
data16
push
out
loopne
dec
lahf
arpl
test
and
mov
cmp
sarl
cmp
adc
jge
push
mov
xchg
repz
jp
loop
inc
inc
cwtl
mov
xor
mov
xchg
sub
jbe
scas
jp
xor
jl
in
cmp
xor
add
iret
stc
inc
xchg
lret
ret
push
add
outsb
jne
call
and
jmp
testl
sbbb
rorl
push
daa
jae
xchg
mov
push
sbb
fdivl
pushf
inc
push
leave
shll
cmpsb
adc
or
roll
add
xor
or
cmpl
inc
pop
sbb
aaa
lcall
dec
xchg
mov
adc
insl
test
fdivrs
rclb
enter
call
push
hlt
leave
lods
or
cmp
pop
icebp
insl
int
gs
jae
aad
loop
and
sar
inc
or
ja
adc
hlt
addr16
popf
imul
mov
inc
push
test
andb
clc
cmp
test
xchg
cmc
stos
jno
pushf
adc
cld
cmp
xchg
mov
int3
popa
fidivrs
rcr
mov
sbb
mull
outsb
jno
out
jbe
out
inc
divb
mov
adc
scas
lahf
xor
mov
push
sub
inc
and
fisubl
rcll
repz
jmp
addr16
sbb
mov
js
lods
je
out
sub
and
cli
jb
jns
inc
jno
cld
lret
inc
xchg
scas
jb
mov
push
push
loop
scas
icebp
test
jg
jecxz
xlat
push
xor
pushf
push
adc
push
xchg
adc
hlt
sbb
mov
push
iret
lcall
xor
lahf
cmp
out
fisubrs
sbb
xchg
inc
and
fcoml
repnz
xchg
ds
push
sbb
lea
ss
jne
sti
ret
movl
popf
int3
xor
push
xchg
pop
xchg
std
das
dec
xchg
aaa
sarb
into
out
out
rcll
insb
push
mov
xor
xchg
mov
mov
xorb
cld
cmpl
xchg
and
notb
cmp
sbb
add
ret
sbb
sbb
sub
mov
shll
cs
repnz
fwait
adc
call
stos
out
fs
imul
cmp
cli
or
loop
lahf
or
mov
lods
leave
add
pop
roll
cmpsl
and
and
pop
adc
test
je
jne
or
int3
test
pop
push
lret
cmp
mov
jecxz
xchg
jb
xor
mov
or
fisubl
cltd
sub
adc
sti
inc
inc
xchg
lahf
in
imul
in
movsb
add
mov
cltd
mov
lock
loopne
and
ficomps
adc
leave
nop
fbstp
mov
jp
jmp
fcompl
jecxz
mov
dec
lock
popa
cmp
rcr
cmp
sahf
mov
sbb
aaa
pop
hlt
daa
mov
xchg
and
notl
push
pop
sub
xchg
ds
mov
mov
ret
les
iret
and
dec
fmul
xchg
loope
or
jl
inc
lcall
sbb
push
lahf
mov
pop
add
sub
fwait
xor
fld
repnz
mov
jge
mov
mov
std
lea
push
adc
or
jno
xor
or
mov
xor
or
mov
cld
mov
push
dec
and
in
pusha
adc
outsb
xchg
repz
xchg
sti
fs
int3
loope
push
leave
pop
mov
sbb
ljmp
sub
add
sbbb
icebp
push
out
mov
idivl
sub
sbb
loopne
cmc
cli
xchg
cmp
mov
cmp
add
addr16
imul
mov
dec
test
hlt
bound
xchg
push
lret
adc
sbb
lock
psubusw
int3
pop
jns
dec
aas
dec
iret
dec
xchg
push
nop
call
push
shll
push
pop
jg
or
pop
and
out
in
fs
inc
and
aaa
and
xor
xchg
leave
cwtl
cmp
mov
jg
pop
ljmp
push
adcl
cmpb
inc
pop
push
xor
mov
adc
mov
leave
lea
stc
cmp
xchg
andl
aad
or
stos
addr16
test
jbe
sti
jle
xor
jmp
clc
jne
gs
mov
dec
mov
pop
jns
sti
clc
jmp
dec
inc
imul
lods
lahf
fstl
mov
mov
ds
popf
mov
fistpll
call
loop
xor
mov
dec
xchg
push
dec
arpl
cmpsl
faddp
sbb
xchg
inc
dec
ret
jne
nop
jb
mov
mov
cmp
push
addl
dec
mov
pop
stos
subl
jmp
hlt
gs
xchg
aaa
cmp
mov
xor
adc
dec
dec
sbb
popa
fcompl
dec
test
ljmp
test
insb
stc
add
pop
movsl
out
xchg
rorl
jge
outsl
cmovbe
mov
push
push
mov
jp
mov
test
add
lret
push
sbb
add
arpl
mov
adc
or
xchg
imul
pop
pop
mov
daa
xchg
adc
inc
dec
aad
push
cli
push
test
or
movsl
mov
stos
push
cmp
xor
add
fisttpll
add
mov
pop
xor
sti
xchg
js
and
sub
stos
and
mov
call
enter
jl
mov
dec
fnstcw
out
insl
fwait
out
cli
inc
sti
lods
mov
dec
sbb
xor
daa
hlt
pop
mov
popf
cmp
inc
dec
lcall
pop
xor
imulb
mov
pop
xchg
xchg
imul
xlat
shll
dec
stos
mov
inc
sub
push
xor
fiaddl
or
cmp
pop
xor
loopne
push
sbb
scas
mov
mov
and
xchg
cmp
push
js
fnstsw
ss
es
fprem
push
xchg
cmpb
shll
je
inc
sub
imul
loopne
mov
fsubr
scas
and
sub
push
pop
xchg
cmp
sbb
or
imul
in
inc
fadds
mov
dec
or
subb
xchg
das
loopne
or
mov
mov
roll
adc
xchg
dec
lahf
mov
fnsave
jno
cld
repnz
insl
test
cmp
ljmp
es
loop
rcr
lret
or
divb
popa
hlt
rcrl
ret
and
dec
and
mov
lahf
or
and
mov
jge
xchg
sbb
xor
adc
int3
adc
sbbl
out
dec
mov
push
mov
push
push
sub
jns
mov
out
lcall
push
add
jne
xchg
pop
cld
daa
pop
adc
aam
loop
jge
mov
scas
jp
iret
xor
daa
inc
imul
pop
sub
mov
call
and
cmpl
hlt
test
stos
jge
xchg
xor
rcl
lds
dec
out
dec
push
and
nop
aas
pushf
outsl
leave
jmp
inc
ss
leave
je
mov
int
cmpsb
xchg
ja
xchg
out
mov
imull
not
add
mov
adc
xchg
sub
inc
jae
shrb
hlt
sub
mov
mov
jae
mov
movsb
shrl
js
or
pop
rcrb
xchg
add
jmp
push
repnz
loop
push
psllq
push
les
sub
cmpsb
mov
call
cld
ret
int
mov
push
shlb
xchg
out
addr16
outsb
outsl
loop
pop
jl
insb
sbb
lds
sub
xchg
xor
stos
dec
sub
adc
xlat
push
push
outsb
inc
jns
sbb
add
xor
mov
dec
pop
call
sahf
adc
add
sub
arpl
xchg
lret
leave
or
rorb
mov
ljmp
lret
dec
dec
lcall
mov
idiv
sbb
leave
stc
and
add
or
out
in
jl
dec
add
iret
ljmp
scas
xchg
negl
es
fucomip
jb
xchg
push
sub
cmp
xor
cmp
rcrl
daa
or
fcmovb
jnp
mov
and
pushf
jecxz
push
iret
xchg
fnsave
mov
adc
popa
sbb
mov
pop
fimuls
ds
lock
pop
add
cli
adc
sub
pop
and
into
movsl
xchg
sub
in
mov
pop
repnz
jmp
add
adc
call
mov
xchg
cmp
mov
cmpsb
mov
xchg
pop
jae
ret
dec
xchg
mov
into
std
iret
jmp
sbb
sti
push
das
les
jp
cmp
ljmp
test
inc
xchg
push
pop
addb
iret
in
stos
sub
ret
xchg
dec
jge
cmp
or
pop
lock
jnp
and
xchg
mov
andl
pop
mov
xchg
sub
cmpsl
xchg
in
push
mov
pop
out
ret
or
rorl
sbb
jnp
fs
mov
rcl
adc
arpl
popf
clc
or
enter
cmp
adc
int3
flds
ret
mov
mov
mov
aam
jp
inc
rolb
xor
dec
jo
dec
sbb
or
cwtl
aas
in
mov
push
loop
into
push
or
mov
popa
and
loop
xorb
test
dec
inc
aas
repnz
xchg
adc
in
pop
sbb
andb
lcall
pop
push
push
ffree
inc
imul
mov
sub
sbb
ljmp
int3
push
mov
push
lods
xchg
fisubrl
or
aas
pop
sahf
mov
repz
dec
ss
xchg
jle
sub
sub
pop
fisttps
xor
fcoml
and
test
hlt
or
in
mov
loop
or
pop
lcall
cmp
mov
fcoms
cmpsb
faddl
rcrl
cwtl
repnz
leave
push
push
lea
cmp
arpl
push
pop
shlb
cwtl
data16
and
mov
arpl
dec
dec
outsl
push
jp
jmp
push
outsb
dec
xchg
sbb
mov
inc
je
dec
lcall
cmp
lock
loope
fcoms
jg
scas
or
inc
or
sub
push
inc
in
scas
pop
xchg
inc
testl
push
ds
dec
push
inc
xlat
or
jmp
fiadds
addr16
mov
xchg
mov
dec
ret
push
flds
daa
fcmovnu
cmp
dec
rcrl
popa
aam
shlb
xchg
mov
or
fwait
in
mov
dec
jns
dec
je
pop
jp
xor
stos
lcall
add
push
fsubrl
dec
dec
push
leave
mov
jb
ds
sbb
mov
jge
jns
arpl
dec
xor
jbe
bound
sub
pushf
pop
inc
or
movsb
pop
jo
or
add
loope
mov
mov
pushf
xchg
outsl
insl
pop
iret
xchg
mov
in
shl
repz
jecxz
fbstp
inc
cmp
ljmp
sti
jecxz
dec
bswap
pop
and
push
mov
cwtl
xor
pop
in
xor
arpl
loope
cs
scas
fdivp
ljmp
repnz
mov
jnp
lods
aad
mov
icebp
stos
add
int3
dec
dec
jg
sbb
roll
push
pop
enter
fiadds
jg
pop
jns
std
jmp
sti
loope
cmp
or
gs
imul
mov
cmpsb
mov
adc
cmp
mov
popf
aad
icebp
popa
add
flds
or
inc
mov
test
add
dec
jo
test
sarb
dec
mov
cmp
mov
mov
jmp
call
pop
mov
cli
sbb
mov
bound
in
push
add
xor
pop
mov
pop
lods
cld
mov
aad
sbb
fsubrs
adc
cld
or
loop
into
ss
cmp
orl
divb
jl
sbb
add
cmpsl
mov
mov
pop
xchg
xchg
adc
dec
xchg
cmpb
mov
into
lds
add
sahf
dec
adc
push
push
or
mov
sub
stos
xchg
ja
push
daa
jnp
out
push
cmpsb
inc
sarb
dec
pop
fsubrp
dec
or
push
jno
movsb
sarl
iret
pop
add
cltd
cwtl
aas
leave
paddsb
enter
mov
daa
add
insb
arpl
loop
bound
ljmp
out
lods
in
repz
push
add
inc
repnz
sub
pop
fcomp
and
loop
dec
push
idivb
pop
cmp
lods
mov
xor
pop
mov
leave
mov
mov
popa
pop
sbb
mov
cld
xchg
cmp
cmp
roll
inc
hlt
add
dec
aas
fld
iret
sti
and
pop
xlat
sarb
lods
jmp
imull
les
cmpsb
fistpl
mov
es
scas
mov
sahf
push
inc
mov
repnz
xorb
cwtl
cmc
sub
cmp
leave
jg
cmpsb
imul
jmp
das
pop
mov
inc
mov
dec
leave
sub
pop
add
push
mov
pop
cmp
mov
mov
and
andl
leave
push
aam
mov
stos
mov
jg
ret
xchg
push
mov
stos
add
mov
stos
mov
adcl
in
cmp
push
cwtl
out
or
jns
cmp
decl
push
and
xchg
lret
add
dec
roll
mov
arpl
jnp
ret
adc
mov
add
dec
sbb
sbb
fsubrl
cwtl
push
rorb
xchg
leave
and
xor
call
add
icebp
out
testl
jae
inc
push
fisubs
add
or
sahf
test
idivb
pusha
mov
sub
mov
in
insb
jmp
pop
test
fbld
test
xor
push
mov
std
sbb
cmp
cltd
xchg
add
sti
out
out
mov
pop
xchg
pop
roll
outsb
popf
adc
or
inc
jnp
add
pusha
dec
sbb
out
mov
pop
aam
test
dec
data16
fsubrp
dec
addb
push
rcrb
sub
push
repnz
je
xchg
lods
dec
push
cmpb
mov
jbe
lea
in
xlat
jmp
test
call
jge
out
add
negl
jp
nop
gs
mov
dec
pop
cmp
movsb
or
sub
aas
insb
jne
jg
push
sub
aad
xchg
in
cld
in
cmp
jo
ret
movb
sbb
inc
enter
dec
ja
mov
loop
es
xchg
lret
cmp
jno
mov
clc
dec
jecxz
je
in
movsb
cli
idiv
and
adcl
and
ss
sbb
sbb
dec
pop
adc
xorb
rcrb
and
pop
jo
es
outsl
stos
sub
cmp
aas
rcl
push
pop
jmp
mov
xchg
shrl
mov
or
jnp
in
jne
inc
inc
push
out
mov
inc
inc
xlat
xor
aad
add
ds
shlb
lahf
jmp
xor
iret
lcall
sbb
pushl
hlt
popf
and
mov
aad
sub
mov
jp
out
cmp
fucom
push
sub
mov
and
rcl
test
cmc
punpckhwd
bound
pop
xor
repnz
or
dec
in
jne
mov
int
jae
cmp
test
jle
jbe
jo
enter
hlt
pop
in
sar
les
adc
jp
jno
gs
cmp
in
push
pushf
shlb
icebp
scas
cmp
push
lods
in
xchg
mov
sub
or
fs
or
fiaddl
mov
mov
add
popf
repnz
push
dec
ud0
repz
insl
mov
and
stc
mov
in
jge
push
jp
daa
cmp
push
lcall
dec
bound
nop
fdivp
xchg
loope
mov
repnz
bound
mov
sub
test
mov
dec
aas
pop
movsb
ror
sub
cli
test
add
popa
lret
stos
and
lret
imul
addr16
movb
test
popa
enter
out
mov
cmp
ret
pop
loopne
loope
pushf
lods
push
imul
pusha
dec
out
jl
jno
sbb
xchg
popf
insl
std
enter
cld
or
jb
hlt
and
call
add
ja
pop
pushf
jg
es
push
insl
push
popf
sbb
mov
ds
scas
cmc
clc
adc
push
add
cmc
or
mov
les
and
aas
cmp
mov
gs
cwtl
aaa
stos
mov
push
cmpsb
jbe
outsb
in
cmp
push
push
pop
pop
lcall
popa
clc
jl
loope
and
mov
imul
call
lcall
fs
shlb
and
and
fcmovne
popf
ret
jp
mov
loopne
je
sar
xlat
inc
jbe
cmp
in
movsb
stos
jmp
mov
dec
arpl
add
mov
mov
xor
into
add
mov
push
jle
jmp
aaa
inc
pusha
lods
scas
push
dec
jno
ss
bnd
jp
jecxz
xchg
xor
call
stos
pop
outsl
pushf
and
jo
dec
mov
mov
add
and
adc
sub
cmpsb
inc
sub
mov
or
cltd
int
rcr
jb
mov
mov
inc
lods
pop
mov
dec
or
jge
scas
mov
push
mov
sbb
and
call
js
outsl
add
and
sub
out
dec
int3
stos
adc
loopne
push
xor
es
mov
inc
ror
clc
shrl
in
xor
loope
add
adc
mov
sub
inc
sub
popf
and
cltd
test
mov
inc
mov
pop
jge
inc
jae
out
dec
mov
cld
xchg
rclb
push
scas
lret
rorl
cmpsb
dec
xor
mov
dec
pop
dec
lret
push
popf
jb
fdivs
cmpsb
cwtl
dec
or
add
jno
cltd
mov
fs
aas
cwtl
ljmp
cwtl
xchg
inc
xor
pop
jge
push
push
data16
mov
pop
cmp
jb
pusha
andb
pop
adc
xchg
shlb
push
jbe
fisubrs
sbb
mov
jecxz
jecxz
jle
test
imul
push
pop
pop
mov
jbe
sahf
cmp
repz
repz
fmuls
scas
enter
sbb
loop
inc
dec
jno,pn
fidivrl
dec
faddl
ljmp
or
clc
mov
dec
int
mov
mov
fldenv
pop
clc
outsb
sahf
xchg
repz
test
xchg
inc
jmp
xlat
dec
mov
jle
lret
add
mov
sahf
mov
mov
cmp
iret
xor
outsb
and
dec
xor
inc
mov
mov
cmp
aad
adcl
rclb
cmpsl
sbb
outsb
sarl
push
adc
push
das
or
xor
ds
pop
nop
cli
insb
fprem
jmp
push
sbb
cmp
lock
sarl
fs
mov
and
sub
cs
jle
daa
mov
mov
jns
es
mov
mov
push
scas
xor
es
ja
inc
push
das
sub
push
xor
pop
ds
or
stc
int
cmp
pop
subb
xchg
fldenv
imul
mov
andl
pop
adc
mov
dec
ret
push
or
sub
sahf
cmp
pop
cmp
adc
fsubrs
and
mov
inc
mov
sbb
and
sbb
lahf
lcall
cs
loope
pop
jmp
inc
adc
cmpsl
push
inc
fiaddl
pusha
ret
and
test
fmull
mov
mov
fsubrs
adc
sbb
mov
sarl
out
inc
jl
and
lods
add
mov
adc
stos
mov
mov
outsl
call
or
cmpsb
sbb
je
test
inc
adc
push
loop
addr16
loope
push
and
or
adcb
dec
jge
mov
xchg
and
mov
lock
cmp
popa
popf
decb
test
fcmovnu
inc
mov
cli
push
sub
sbb
jbe
mov
pop
aad
sahf
xchg
mov
in
cmp
mov
stc
mov
sahf
stc
add
sbb
ficoms
fwait
jp
dec
hlt
mov
jns
call
push
sub
dec
ljmp
iret
cwtl
aas
cmp
mov
inc
and
sub
xor
jl
jge
jne
outsl
pop
jnp
pop
gs
dec
rcrl
ret
adc
inc
pop
sbb
xor
test
scas
popa
adc
test
js
dec
dec
mov
cld
aam
insb
push
out
imul
or
sarb
stc
es
rorl
inc
sbb
mov
xchg
repz
pushf
lds
lods
movsl
out
xchg
lea
cmp
dec
int
xor
inc
fimuls
decb
mov
inc
xchg
shl
mov
sub
cld
dec
hlt
in
xor
scas
add
cmpsb
fstl
out
sahf
vpmaxsw
das
jbe
cmp
ret
and
into
cmpb
inc
mov
mov
int
mov
or
je
test
cltd
rcl
sub
pop
pinsrw
insb
in
popa
loope
adc
jl
decl
pop
cli
test
adc
lods
test
or
and
cmc
or
or
in
sbb
lods
ret
in
lods
shrl
mov
cmp
ljmp
xlat
repnz
lods
mov
out
dec
subb
addr16
adc
arpl
loopne
stos
inc
rorl
xchg
ret
lea
adc
mov
add
out
pop
cmp
jmp
xchg
lret
push
jmp
jecxz
jge
popa
fidivl
call
dec
xchg
mov
pusha
aas
jp
inc
imul
or
leave
push
xlat
aas
popf
nop
adc
dec
mov
hlt
xor
jae
add
mov
scas
pop
loope
hlt
inc
fcompl
or
repz
cltd
jo
ficomps
sub
insb
and
cmp
jno
xchg
scas
orb
mov
push
fisttpl
jle
adc
xor
jl
mov
jl
subb
cmp
stos
xor
mov
jb
mov
fists
push
dec
mov
pushf
subb
adc
out
test
imul
cmp
mov
cmp
inc
cs
xorb
fisubs
jecxz
movsb
or
jae
ret
mov
stos
sahf
int3
dec
adc
frstor
cmp
push
adc
stos
sub
daa
cmpsl
sub
mov
popf
push
decb
dec
out
insb
add
in
dec
aaa
pop
aaa
add
cmc
rcl
cld
pop
and
or
imul
pop
and
mov
and
pop
mov
gs
cmp
mov
out
inc
ja
cmp
pop
mov
iret
popf
and
out
das
cmc
hlt
push
aaa
cwtl
clc
push
pop
xchg
int
fdivr
jmp
nop
loop
mov
ds
movsb
xor
stc
cmp
rolb
mov
mov
fs
dec
mov
pop
repz
fidivl
adc
lea
push
fstps
sub
jo
insl
push
and
punpcklwd
or
jne
jnp
data16
imul
pop
in
mov
or
loope
rcrb
inc
mov
ret
shlb
insl
sti
push
inc
andl
add
cs
les
jle
test
jae
popa
lods
fwait
cld
bound
pop
neg
cmp
and
sti
cld
mov
add
adc
and
or
fstpl
and
mov
popa
lret
clc
fisttpl
int3
ljmp
rcll
or
jl
lods
and
push
pop
mov
test
into
addr16
cmp
js
mov
arpl
xor
jb
and
xor
adc
orb
dec
and
push
or
adc
push
xor
jmp
das
testb
retw
js
ss
mov
mov
aas
adc
xor
ror
jo
dec
decb
dec
addl
fsubl
nop
jo
dec
cwtl
insl
xchg
or
and
push
push
imul
pop
sub
jae
pop
push
mov
loopne
or
ljmp
mov
mov
cmp
ret
cmp
imul
jge
and
jo
aam
push
mov
add
cwtl
dec
in
pop
mov
cwtl
sub
cmp
xchg
ret
xor
popf
mov
add
test
pop
cli
test
lahf
mov
pop
popa
jg
shlb
mov
lea
mov
mul
stc
push
adc
sahf
sahf
insb
fidivs
jmp
scas
notl
add
pusha
fiadds
mov
pop
mov
aam
sub
fnstsw
fs
adc
aas
add
xor
fildll
lock
mov
jb
or
mov
idivb
pop
test
mov
xchg
icebp
sub
add
dec
ljmp
inc
cwtl
mov
imul
sbb
outsb
je
scas
pushf
xchg
lahf
mov
xchg
inc
test
inc
mov
mull
jo
jmp
mov
cld
out
sbbl
popf
add
jecxz
popf
and
inc
inc
xchg
jo
push
arpl
push
xor
cmp
pop
movsb
jns
jp
sahf
pop
push
shl
test
negb
test
or
cmp
push
test
ljmp
add
es
aas
mov
push
int3
sub
sub
cwtl
mov
xchg
lcall
andl
jmp
repnz
lea
leave
pusha
ret
pop
jecxz
push
ljmp
es
in
fwait
dec
adc
les
xchg
xchg
fisubs
arpl
mov
out
inc
add
jl
xchg
push
pop
cli
adc
xchg
jns
test
movsb
jno
xor
or
je
popa
cmc
cmpsb
xor
push
stos
push
fcompl
pushf
adc
mov
inc
imulb
test
cli
clc
in
fimuls
out
fs
loope
xchg
lods
inc
into
dec
mov
int
inc
cli
and
cs
cltd
xchg
cmp
cld
mov
sub
shr
adc
rorl
shlb
nop
jno
mov
sub
sti
fdivl
add
and
sbb
cmp
add
mov
mov
mov
int
in
scas
lea
inc
inc
test
ljmp
scas
ret
xchg
aas
divl
pop
mov
cmc
aam
repz
shlb
mov
sub
dec
fcoms
mov
mov
dec
jecxz
ljmp
test
mov
rcll
pop
iret
mov
push
cmp
loop
inc
add
gs
sub
cmp
lods
adc
adc
arpl
mov
pop
push
outsb
xchg
inc
int3
sbb
out
dec
mov
push
mov
scas
orb
fucomp
cmp
adc
cltd
and
mov
inc
xchg
and
aad
insl
push
xlat
mov
imul
xor
addl
pop
xor
or
pop
outsl
add
stos
clc
pop
fstl
mov
je
addr16
hlt
mov
leave
add
mov
sbb
addl
es
inc
jns
insb
hlt
or
pushf
and
clc
push
pop
mov
cmp
inc
cwtl
dec
mov
adc
adc
xor
ret
enter
sbb
iret
int
pop
sbb
ja
nop
mov
imul
jb
adc
nop
jl
out
push
jnp
out
sbb
jne
pop
lods
dec
jne
in
imulb
cmpsl
in
lds
adc
mov
aas
leave
cmpb
in
test
cmp
lods
mov
mull
push
ret
loope
jo
mov
ljmp
int
mov
out
inc
pop
stos
sar
in
or
ja
mov
cld
jge
push
sub
or
das
stos
das
fldl
mov
sub
mov
clc
or
out
in
mov
je
movsb
or
mov
push
mov
dec
icebp
pop
mov
inc
xchg
push
out
cmp
jmp
pop
add
das
pop
push
ss
adc
add
pop
mov
leave
bound
xchg
mov
or
and
test
and
push
fildl
js
pusha
testl
mov
add
jnp
jl
int3
ret
push
xor
mov
xor
push
in
jno
call
pop
jbe
adc
add
outsb
mov
xor
movsl
push
and
rorl
push
shr
test
aam
pop
mov
inc
inc
inc
mov
bound
pop
mov
adc
inc
pop
je
js
jns
xchg
pusha
hlt
data16
je
mov
aas
pop
mov
stos
mov
aas
sahf
rcrl
loope
and
jnp
and
lahf
mov
imul
sbb
push
movsb
or
mov
xor
int
inc
inc
adc
cmp
ret
push
cmc
or
cld
mov
and
sub
into
pop
pop
cld
add
lea
in
xchg
or
sub
adc
and
icebp
add
call
aaa
mov
not
push
mov
fwait
popa
push
xor
iret
fcmovnu
pop
xchg
sub
jae
fwait
mov
data16
xchg
add
outsb
xchg
rcr
xchg
loope
cmpl
push
jne
inc
and
insl
push
fcomip
adc
pop
mov
pushf
lahf
lods
pop
ljmp
and
nop
mov
and
or
dec
les
dec
sbb
inc
cmpsb
jo
xchg
ret
sub
fiadds
pop
repz
clc
aaa
jl
insb
imull
cmp
xchg
movsb
xor
out
lahf
xchg
dec
mov
add
lods
loop
in
std
pop
mov
pushf
cs
sub
movsl
xlat
pop
pop
repnz
fidivs
push
popl
movl
cwtl
int3
sbb
xchg
inc
and
jl
and
test
loop
scas
daa
sbb
test
adc
sub
hlt
pop
mov
jmp
push
out
dec
push
sub
aam
in
cmpsb
and
lret
push
int
and
rorl
xchg
outsl
jbe
sbb
inc
fwait
pop
or
or
stc
fstl
mov
push
pop
xor
inc
push
lcall
xchg
inc
fildl
pop
lret
in
xchg
and
pop
stos
stos
hlt
popa
loopne
xchg
mov
fmul
pushf
mov
repz
inc
inc
cltd
jno
mov
jle
mov
jge
xorb
rcll
iret
js
std
add
add
es
dec
mov
mov
fldl
loop
ror
and
mov
test
loop
mov
cwtl
repnz
imul
cmpsb
jo
cmp
stos
jnp
in
fnsave
sub
mov
lods
mov
inc
sbb
sub
cmp
mov
adc
test
movsl
adc
cltd
loopne
into
lret
sbb
adc
in
sahf
mov
mov
jb
loop
xchg
mov
divl
pop
and
push
rcrl
outsb
dec
test
aad
pop
dec
fwait
dec
not
loop
popa
adc
addr16
sub
and
out
cmp
lret
aad
into
repnz
xchg
jle
jo
movsl
dec
adc
mov
cmpb
add
divl
xor
sti
mov
les
lods
outsb
sti
xorl
sbb
sub
sarb
dec
or
xchg
jbe
shll
ret
mov
movsl
cli
xchg
sub
cs
daa
cli
jecxz
bts
mul
xor
inc
or
push
mov
cmp
aam
lock
inc
dec
sbb
or
pop
sbb
loop
mov
adc
push
jmp
dec
pop
xchg
push
mov
dec
inc
das
iret
outsl
movsl
cmc
pop
jp
or
std
xchg
aad
fisubs
ror
or
addr16
in
nop
sbb
xchg
lcall
dec
das
and
gs
mov
sbbl
or
cld
mov
push
cmp
mov
das
andl
add
les
fildll
fdiv
mov
mov
scas
jne
call
call
and
or
adc
fsubrs
adc
les
push
loop
mov
pop
sti
je
xor
decl
cwtl
jge
in
pop
dec
cld
cs
lods
bnd
insl
mov
cmp
shrb
pop
mov
adc
and
lret
xchg
mov
jmp
inc
xchg
jae
jmp
add
pop
je
aas
push
push
sub
add
arpl
es
out
add
insb
cmpsl
mov
aam
xor
mov
mov
xor
int3
jnp
imulb
jns
cmp
lret
in
mov
js
inc
dec
inc
mov
pop
mov
sub
mov
jb
or
cmp
pop
mov
jb
push
stos
pop
sbb
lods
mov
loope
sub
mov
push
ljmp
add
jge
add
push
iret
cmp
enter
popa
popa
popa
cli
sti
inc
push
mov
mov
or
bound
pop
push
jg
sbb
cs
mov
fisubrl
imul
pop
lock
cmp
repz
imull
lcall
xor
ljmp
cmpsb
mov
in
mov
stos
add
cmp
in
xchg
leave
add
mov
cmp
aaa
in
into
shlb
jecxz
adc
or
xor
les
lods
mov
adc
out
sbb
dec
jo
je
out
jns
jle
mov
in
pop
mov
enter
jbe
pop
jb
xor
inc
ljmp
dec
idivb
or
add
jmp
jnp
pop
scas
push
int3
mov
mov
test
mov
fnsave
dec
std
ljmp
ja
lods
and
ret
loopne
loopne
ret
inc
dec
mov
xchg
mov
stos
sbbb
outsb
es
dec
imul
push
and
js
sub
or
xchg
adc
and
loope
pop
sub
add
lahf
dec
add
outsl
push
mov
inc
std
xchg
popl
hlt
dec
outsb
enter
ds
and
pop
push
movsb
cmp
jbe
loop
sbb
addb
push
fs
mulb
fnstsw
mov
xor
iret
xor
je
loop
insb
popf
push
test
jbe
test
pop
pop
cmp
filds
dec
sti
push
ljmp
add
test
insb
sub
push
inc
inc
js
sub
push
fcoms
mov
icebp
loopne
cmp
les
ljmp
fstpt
cmpsl
mov
cmpsb
cmp
out
jnp
lock
xor
adc
push
faddp
inc
iret
jecxz
fiadds
mov
lcall
mov
shll
push
rolb
aaa
movsb
subl
mov
scas
mov
and
push
cmp
imul
icebp
inc
or
ror
dec
mov
mov
mov
popf
add
aas
mov
sub
push
mov
mov
mov
mov
mov
mov
loopne
xchg
pop
jb
repz
fisttpl
or
mov
clc
icebp
lcall
pop
sbb
fisttpl
xchg
divl
rolb
mov
into
sti
jne
push
insl
mov
imul
leave
xchg
aaa
lds
rcrb
cwtl
call
xchg
cmpsl
and
push
push
mov
adc
mov
and
mov
call
cs
and
flds
arpl
jl
inc
loop
insl
sbb
mov
les
adc
ss
bound
call
cmp
ja
xlat
outsl
jno
sahf
push
cmp
mov
stc
test
bound
cld
mov
std
and
cmp
stos
push
mov
fcmovnu
popf
or
fs
int3
mov
js
movsl
jbe
or
in
shr
or
in
sarb
scas
xchg
outsl
inc
pushf
and
mov
out
stc
lcall
inc
sbb
or
fisubl
mov
xor
loopne
mov
jnp
push
jb
outsl
mov
xchg
rolb
ds
push
jmp
dec
dec
cmp
leave
aas
jb
jo
fs
push
or
mov
mov
push
adc
or
or
push
mov
clc
les
jg
xchg
push
fstpl
in
stc
cmp
sti
jmp
lahf
xor
lcall
cmp
jnp
leave
dec
test
sub
aad
sar
and
mov
out
jno
xor
or
mov
adc
xchg
mov
cmpsl
in
loopne
sub
dec
cmpsb
push
jl
push
scas
sti
test
cmpl
sbb
sbb
addr16
cmpsb
xor
jl
push
add
sbb
stos
fisubs
xor
shrb
fistpl
popa
xorb
insb
bound
aaa
jbe
xchg
and
inc
andl
jecxz
inc
xorb
int
sti
adc
jns
stos
jp
lods
xchg
jbe
and
fcoml
ret
pushf
ja
push
ja
je
mov
push
fdivp
sub
test
and
in
mov
lods
xchg
test
fimull
jo
mov
mul
ret
jecxz
lret
cmpsl
xchg
loopne
mov
iret
aas
push
cli
clc
pop
mov
shrl
sarb
add
dec
test
into
and
les
sub
mov
cmp
out
add
into
cltd
fildll
push
adcl
sub
mov
and
sbb
and
stc
or
inc
lock
or
push
mull
cli
in
insl
mov
mov
cmp
cwtl
or
into
sub
inc
outsb
fst
cs
or
popf
cmp
ret
hlt
cmovs
arpl
out
jbe
fcmovne
jmp
mov
xchg
adc
add
fisttpll
in
push
clc
clc
pushf
mov
int3
add
iret
call
cmc
and
mov
jg
in
fsubrs
dec
sub
adc
jle
push
bound
push
mov
call
divl
or
dec
xor
mov
pop
movsl
rcll
repnz
cmc
xchg
mov
sbb
mov
lea
fstl
pop
sbb
jecxz
dec
fnstcw
jb
outsl
or
cmpsb
mov
in
icebp
fldcw
js
xchg
adc
fwait
scas
test
int3
lock
in
cmpsb
repz
xchg
mov
aam
mov
jne
scas
and
cmp
xlat
jl
rcrl
cmp
pusha
fdivp
and
xlat
gs
cmp
test
cli
mov
call
fstps
pop
or
xor
ss
xchg
push
icebp
stc
lcall
sub
push
inc
mov
lock
or
dec
sahf
inc
and
mov
negl
popa
lock
imul
sbb
cmc
mov
repnz
jns
sub
xor
sbb
jmp
ret
sub
push
xchg
mov
inc
lcall
xor
mov
fistpl
pop
fidivrl
inc
jle
insb
mov
dec
jne
mov
arpl
mov
fcoms
sub
push
clc
mul
mov
out
push
push
movsb
addr16
jle
stc
xchg
mov
cli
adc
lcall
or
xor
cwtl
jmp
iret
push
cmp
orb
jmp
fimuls
je
inc
pop
icebp
bound
jno
sub
in
jnp
lods
and
mov
adc
mov
pop
pop
sbb
mov
xor
ret
xor
cmp
xchg
push
and
insl
lahf
movsb
div
ret
clc
adc
mov
lods
ret
pop
mov
test
jne
lcall
xor
insl
xor
lock
dec
dec
xchg
xchg
xchg
push
rol
ss
cmp
sbb
lds
mov
lods
aam
or
lods
sahf
fdivs
push
mov
insl
iret
jmp
movsl
cwtl
clc
popf
xor
pusha
and
jne
add
roll
out
jnp
jp
rcll
mov
rolb
out
adc
je
int
push
shll
jmp
in
imul
adc
lock
xchg
dec
mov
movsb
popf
push
add
sub
lds
bnd
inc
jg
and
and
les
sub
inc
jne
inc
pop
into
sub
adc
movsb
in
cmp
insl
jae
pop
or
fnstenv
inc
repnz
and
sbb
adc
add
in
in
fs
mov
push
jle
mov
mov
sub
loope
mov
jno
ds
cmpsl
das
popf
mov
or
and
and
adc
rcl
sub
push
cmc
mov
sub
pop
ret
mov
cmp
push
cld
jmp
xchg
jo
push
arpl
clc
nop
xchg
cmp
rcll
or
inc
jmp
sbb
mov
pop
sub
xor
push
lods
outsl
lods
xor
jl
cli
bound
lcall
shlb
neg
jecxz
sbbl
ds
aad
inc
pop
and
sub
std
pop
out
adc
iret
jne
dec
jno
arpl
popf
xchg
sti
jg
pusha
and
cmp
and
jecxz
mov
pop
pop
sub
aas
filds
mov
dec
mov
repnz
sbb
data16
push
xchg
jbe
stos
ja
gs
add
andl
xor
mov
ds
push
out
fwait
dec
mov
pop
xchg
rclb
xor
mov
and
pop
pinsrw
int3
mov
mov
jp
xchg
and
jns
aam
add
dec
cli
jns
idiv
repnz
scas
ja
clc
jb
xchg
mov
sub
push
adc
int3
jl
nop
das
out
sbb
xor
cltd
stos
popf
xor
loope
test
popf
fs
mov
xorl
dec
cwtl
mov
pop
ds
stos
sbb
dec
or
jp
inc
mov
jno
int
mov
sbb
aam
rol
scas
int3
sbb
mov
addb
mov
pop
in
push
push
and
lds
pop
divl
cli
outsb
or
dec
cli
pop
jecxz
ja
movsl
dec
in
out
xor
fsubrs
sub
mov
dec
adc
pop
adc
testl
mov
cmp
sar
dec
inc
jle
imulb
lahf
imul
cmp
mov
popf
loop
and
inc
xor
push
lds
jb
pop
popa
sub
movsb
sbb
int3
inc
scas
and
and
xchg
sbb
divb
push
add
addr16
lea
popa
lretw
or
or
scas
adc
xchg
pop
add
mov
xor
ljmp
lods
stos
dec
push
cmpsl
sub
and
or
pop
adc
nop
mov
jae
std
orb
dec
lods
push
mov
fcmovbe
xor
fucomp
scas
test
inc
fxch
in
push
aaa
and
dec
outsl
popa
test
pop
jno
xor
lret
jp
push
icebp
inc
jp
icebp
repz
dec
pop
out
pop
imul
push
jp
bound
xlat
js
daa
jne
inc
sbb
scas
mov
or
and
roll
loope
jno
lret
and
addb
jecxz
mov
mov
cmc
xchg
loopne
inc
loopne
cmp
clc
mov
fisubl
cmp
jp
in
das
fildll
aad
sub
push
aad
inc
mov
and
mov
or
jg
das
and
push
adc
das
add
hlt
mov
xor
mov
fwait
stos
xchg
test
cmpsl
outsb
xor
pushf
enter
lahf
shr
mov
inc
sub
mov
cmp
adc
sahf
subl
pop
mov
push
sub
mov
data16
add
popf
add
push
lock
jp
and
push
ficoms
test
out
stos
add
jge
stos
xor
in
les
inc
cmp
xchg
pop
cli
fmulp
mov
stos
mov
push
cmpsb
out
mov
push
dec
and
lahf
les
addr16
push
jg
push
pop
xchg
arpl
jecxz
pop
xchg
mov
stos
je
in
fistps
jnp
sbb
aaa
mov
mov
push
and
xchg
nop
cmp
pop
sti
sbb
pop
adc
dec
repnz
lret
add
dec
fsubr
dec
add
clc
push
insb
and
push
adc
jo
jge
push
and
js
add
das
cmp
out
mov
inc
insb
bnd
inc
sbb
xor
mov
mov
jmp
shlb
mov
add
jno
mov
cli
pushf
imul
push
divl
lcall
sti
cmp
sub
cmpsl
pop
icebp
fisubs
ja
xchg
in
push
mov
sub
lret
sub
jnp
add
and
call
mov
sbbb
jg
add
divb
cmp
stos
push
cmpsl
jo
jnp
add
jp
and
fdivs
ret
or
mov
jge
adc
aaa
mov
int
cli
lods
rcrb
sbb
add
jo
xchg
das
out
cmp
sbb
mov
shl
das
lret
and
push
ret
or
pop
loope
das
imul
sub
lea
sub
test
test
xor
sub
add
and
arpl
adc
mov
imul
repnz
nop
push
cmp
pop
out
pop
popf
not
mov
pop
jns
test
push
mov
mov
daa
in
mov
sbb
mov
pop
or
dec
mov
aaa
jb
daa
pop
in
out
pop
mov
add
js
jmp
jmp
adc
lock
mov
mov
add
into
xor
cmp
stc
das
inc
cmp
stc
dec
lcall
repz
aam
mov
sub
testb
push
std
cld
movsb
in
adc
popf
ljmp
mov
xchg
hlt
dec
mov
add
pop
test
ffreep
je
and
dec
cmpl
add
dec
adc
filds
lock
or
sar
mov
mov
je
and
repz
xor
mov
mov
push
mov
mov
sub
mov
or
outsl
into
sub
push
leave
mov
in
dec
mov
adc
insl
shlb
and
shrb
sahf
mov
pop
ss
and
pop
push
xchg
jg
adc
or
in
lret
pop
and
ficompl
jmp
mov
insl
pushf
jl
lret
adc
sub
xor
adc
jge
mov
and
stos
inc
out
test
mov
xchg
adc
mov
fnstcw
inc
pop
sbb
js
addr16
push
icebp
adc
pusha
inc
mov
fadds
iret
push
push
out
imul
mov
imul
addb
std
in
mov
daa
sub
pop
lock
subl
adc
nop
adc
sbb
fldenv
pop
xchg
outsb
cmp
js
mov
and
int3
int3
cwtl
shr
mov
or
sub
xor
cli
movsl
shll
aas
cmp
push
dec
mov
movsb
in
cmpsb
mov
or
dec
lret
in
gs
push
pop
lret
add
jmp
pop
call
fildll
pop
lret
sbb
aam
mov
cmp
and
addb
mov
mov
jg
and
into
mov
ficompl
push
cmp
in
and
xor
popa
mov
mov
mov
ljmp
mov
jbe
inc
jl
mov
test
dec
addl
push
aad
loop
mov
es
pop
jge
sub
pop
push
cmp
mov
lret
pop
imul
push
mov
shrl
cmp
int3
rcrb
imul
xchg
xchg
xchg
or
push
mov
xchg
ds
jmp
sbb
mov
not
js
add
xlat
dec
pop
xor
dec
lret
lock
leave
and
loopne
or
xchg
jmp
ret
sbb
nop
add
mov
fistps
lods
ret
sub
scas
add
push
pop
orb
movsl
push
pminsw
push
shlb
imul
mov
mov
stos
or
cmc
imul
jmp
repz
imul
inc
xor
cs
ret
jnp
mov
stos
subl
lret
jo
xor
pop
and
adc
test
aam
mov
movsl
jmp
loop
fwait
pop
xchg
sti
subb
inc
jle
sbb
shr
inc
sub
cmpl
adc
cmp
jnp
cmp
orb
dec
mov
lea
lcall
stos
in
sub
pop
arpl
pop
fs
stos
or
fldl
mov
sbb
mov
add
shlb
in
mov
and
loop
mov
int
das
jl
cli
in
insb
stos
inc
sbb
mov
xchg
pop
push
addr16
in
dec
imul
mov
outsb
and
mov
sub
frstor
mov
inc
addb
aaa
add
jne
cld
adc
in
in
loopne
xor
xchg
or
in
daa
add
fcmovnb
pushl
push
xchg
cwtl
and
or
cli
pop
fstp
outsb
sbb
aas
dec
shll
cmp
or
es
and
faddl
xor
dec
and
and
mov
je
pop
cmc
push
sbb
cmp
das
jo
loop
popa
dec
mov
ja
negb
stc
clc
adc
lea
dec
ret
les
outsb
insl
popf
lods
xchg
adc
and
xchg
dec
loop
stos
popf
mov
push
in
loope
jmp
gs
in
icebp
and
mov
iret
sbb
loop
repz
mov
xor
xchg
or
add
pop
xchg
scas
mull
in
and
cmp
lahf
movsb
xorb
sub
cmp
loope
mov
xlat
arpl
or
push
sub
cltd
call
push
pop
push
add
jg
xchg
fidivrs
cmpb
cld
push
test
or
mov
rdtsc
stos
mov
push
mov
out
dec
or
in
daa
imul
pop
or
mov
insl
cmp
xor
pop
adc
xor
pusha
mov
in
mov
push
push
cs
inc
cwtl
push
mov
mov
push
mov
andnps
jbe
mov
mov
mov
test
adcb
sbb
mov
pushf
movsb
push
mov
mov
lea
or
push
imul
outsb
add
pop
aad
cs
test
mov
xchg
sbb
repnz
mov
cmc
pop
clc
shrd
xchg
add
movsl
sbb
inc
nop
sbb
ret
xchg
mov
jb
pushf
xor
es
sub
mov
pop
xchg
pop
jnp
push
xorl
and
push
push
pop
sti
fdivr
cmc
and
mov
scas
dec
sbb
rsm
cltd
loope
cmp
push
xlat
iret
ds
sbb
es
inc
repnz
lret
add
aam
xchg
pop
mov
mov
pusha
dec
hlt
inc
or
mov
out
jmp
ljmp
xchg
out
sbb
and
das
out
hlt
add
dec
sbb
push
addb
xor
push
xchg
out
test
xor
fdivs
sahf
inc
into
shlb
std
icebp
subb
das
movsl
pop
jb
cmp
rcl
jg
pop
mov
cmp
cmp
adc
dec
pop
into
imul
pop
mov
insl
sbb
rolb
bndstx
dec
pop
sub
pop
or
movsl
cwtl
test
js
xor
loope
scas
ja
test
arpl
and
jb
lock
and
push
aam
push
xchg
andl
dec
cli
movsb
xchg
and
lret
inc
aad
shll
pop
in
and
mov
add
enter
mov
fmuls
pop
push
aam
or
out
push
mov
mov
data16
cmp
aas
ret
outsb
popl
mov
test
mov
mov
push
pusha
jns
repnz
cmpb
leave
sub
mov
xchg
inc
ljmp
dec
pop
lea
jl
dec
xchg
pusha
ret
jno
pop
or
cmp
mov
sbb
out
add
repnz
inc
ds
sub
add
push
or
je
push
inc
add
jbe
mov
jecxz
shrl
or
jle
cmp
sub
pop
xchg
dec
mov
shll
jbe
roll
stos
call
and
subl
addr16
iret
mov
test
fidivrl
es
or
mov
mov
jl
adcl
push
test
mov
fidivl
mov
rclb
push
ret
xor
in
ret
xor
adc
pop
ja
sub
push
inc
mov
push
dec
add
mul
pop
ficompl
mov
ret
mov
mov
mov
mov
pop
aaa
inc
lahf
js
sbb
stc
in
adc
stos
sarl
out
inc
lock
dec
in
aas
nop
in
push
lcall
inc
xchg
mov
xchg
imulb
dec
enter
js
out
sbb
fcmovnu
or
shll
and
xor
and
sub
cltd
jle
cmp
outsb
std
xor
in
outsb
xor
fwait
cltd
in
divl
inc
or
jb,pn
mov
pusha
aad
lahf
lods
mov
push
pop
pop
add
pop
xor
mov
into
cmp
fstps
dec
sahf
mov
out
sti
shrl
xor
mov
cmp
inc
add
pop
outsb
stos
cmp
daa
jae
sbb
gs
jnp
pusha
enter
idivl
xchg
stos
and
int
popf
rolb
or
mov
and
sbb
push
dec
loopne
pop
mov
adc
jg
or
andb
cmp
sbb
mov
sti
aad
push
inc
aad
add
ja
mov
xlat
jne,pt
jae
pop
orl
mov
stos
fwait
cmp
xor
imul
adc
je
xor
test
dec
mov
in
push
incb
mov
out
popf
pop
dec
jnp
psadbw
out
stc
movsb
mov
fwait
mul
mov
sub
popa
stos
sbb
test
cwtl
aad
push
dec
pop
push
push
and
push
test
mov
jnp
xor
mov
sahf
adc
int3
jge
xchg
out
xor
cs
pop
jecxz
add
pop
ljmp
dec
sub
pop
loope
imul
sub
pusha
scas
pushf
pop
call
jbe
xchg
adc
stc
lret
pushfw
notl
loope
xchg
cmp
jo
jg
cli
xchg
cltd
mov
aaa
push
sbb
xchg
dec
add
repnz
hlt
dec
cmp
out
push
movsb
lret
dec
and
aas
jmp
mov
mov
mov
xchg
xor
sbb
mov
push
sar
into
inc
int3
jbe
mov
pop
mov
popf
jecxz
jb
xor
scas
dec
mov
addr16
insl
shl
in
mov
daa
sarb
sub
shlb
cmc
lret
stc
xchg
mov
mov
cmpsb
mov
cmp
inc
mov
jg
lahf
fistpl
popa
ja
popf
xchg
dec
sbb
sub
aad
arpl
or
cmc
mov
fisubs
mov
enter
sbb
pop
popa
adc
xor
mov
rcrl
mov
inc
mov
mov
pop
push
rorl
push
pop
mov
adc
xchg
adc
in
mov
je
and
pop
stc
jg
test
hlt
cli
mov
cmp
rcll
inc
outsl
leave
add
arpl
nop
push
and
lods
int
mov
cmc
lret
pop
dec
push
push
clc
push
push
and
add
insb
mov
sub
int3
pop
pop
xchg
sbb
pop
inc
jae
test
insl
out
mov
mov
jbe
xor
insl
and
and
imul
jno
add
sbb
jbe
jae
movsb
and
int3
out
aad
cmp
rcrl
bound
adc
dec
inc
mov
mov
das
dec
or
outsb
inc
and
jle
movsb
pusha
xor
int3
lahf
je
cs
mov
ds
loopne
and
shll
fsts
xchg
popl
pop
ja
xchg
clc
xor
mov
pop
clc
lcall
mov
cli
scas
xchg
imul
jecxz
push
ror
fisubs
sub
dec
inc
call
jmp
mov
adc
popa
mov
bnd
jo
test
mov
in
jo
stos
unpcklps
jns
xor
nop
xchg
aaa
or
push
out
in
or
mov
inc
add
movsl
shrl
roll
mov
ret
jns
push
cmp
pop
and
add
xchg
outsb
inc
inc
mov
ja
sbb
sub
add
insl
pop
sar
enter
lods
add
cmc
test
mov
jnp
sub
mov
mov
mov
insb
mov
nopl
lret
push
add
cli
adc
xor
pop
scas
inc
fwait
mov
jb
xchg
ret
cli
fists
sbb
push
iret
mov
cli
dec
imul
insb
jns
mov
ja
sub
sbb
cmovbe
sbb
fbstp
push
iret
jae
cmp
repnz
ja
scas
jne
sbb
and
ret
inc
and
mov
insb
sub
enter
mov
ljmp
sahf
mov
or
clc
aaa
aad
push
rcrl
popf
cli
jecxz
mov
xchg
cmp
cli
dec
insl
shlb
and
adc
shrb
jle,pn
jle
mov
mov
pop
sub
mov
and
push
cwtl
inc
orl
add
scas
dec
push
pop
jecxz
jmp
sbb
stc
fists
or
mov
sub
rorb
cmp
cli
or
or
leave
jecxz
aad
adc
cmpsb
push
sbbl
add
ret
and
mov
repnz
xor
shl
leave
jno
pop
push
dec
in
into
imul
pop
and
adc
sbb
data16
fwait
jne
fwait
push
mov
ror
cmp
das
negb
mov
scas
call
ret
fwait
jnp
dec
dec
inc
subb
ret
movsb
xchg
testb
dec
mov
gs
push
cltd
stos
loop
adc
out
dec
sahf
jmp
mov
rcrl
push
iret
enter
lock
scas
mull
cmp
push
sub
xchg
fisubl
mov
xchg
je
jb
cmp
xor
inc
fiadds
adc
mov
adc
gs
dec
mov
cwtl
or
test
dec
lcall
repnz
ret
dec
mov
scas
push
pop
iret
sbb
gs
jg
repnz
dec
sbb
test
adc
fbld
arpl
xor
push
int
out
mov
dec
mov
cmpsl
adc
popf
popf
mov
scas
lods
stos
xchg
repnz
imull
xlat
push
es
fildl
and
test
fcomi
pop
mov
or
imul
xchg
enter
out
add
mov
daa
in
jns
sub
notb
fiaddl
int
ret
mov
leave
lret
add
dec
jo
hlt
push
mov
negl
fstl
stos
sub
out
mov
sub
mov
xor
cmpsl
and
lret
lret
xor
mov
adc
es
jae
incl
adc
mov
int
mov
and
sub
ror
in
in
xchg
jb
lods
xchg
std
mov
jmp
pop
inc
lret
lret
mov
pop
push
cld
adc
and
mov
sbb
int3
mov
cmp
push
divb
pop
sbb
cmpsl
xor
sbb
stos
mov
fildl
lret
or
lods
out
test
in
bound
in
fcmovb
cwtl
adc
or
jbe
xor
add
int
mov
sbb
xchg
jb
jecxz
inc
ret
sub
cld
les
mov
jl
xchg
sub
repnz
mov
out
movsb
jno
sub
movsl
mov
sbb
adc
daa
add
adc
mov
sbb
in
std
ud0
fnstcw
cmp
or
idivb
and
mov
fs
xchg
xor
inc
or
or
xor
adc
or
sbb
jle
push
cwtl
xchg
fcomp
jmp
inc
and
pop
fidivrs
sahf
pop
dec
pop
jecxz
inc
xchg
ret
xchg
add
mov
jno
adc
inc
pushf
rsm
stc
or
or
test
xor
adc
ja
lea
dec
xor
shrb
and
pop
mov
and
cmp
inc
jbe
push
std
and
out
aad
imul
es
outsl
adc
jne
inc
push
push
ret
jge
hlt
sbb
ljmp
mov
repnz
icebp
cmp
fisttpll
jle
test
pop
in
into
adc
cs
and
lahf
inc
push
and
adc
or
mov
sbb
std
imul
add
or
test
cmp
add
and
in
stc
cmp
push
adc
xor
xchg
cmc
lods
inc
bound
add
jp
cmc
les
imul
or
xchg
pop
cld
outsb
incb
imul
mov
out
and
sbb
into
std
test
out
bound
adc
cld
out
loope
loopne
cmpsl
or
jb,pt
mov
push
cmp
bound
out
imul
push
or
mov
inc
add
adc
ja
adc
cmp
ds
test
sub
mov
push
mov
sub
adcb
out
andb
mov
push
cmp
test
fdivr
lock
shlb
mov
sub
adc
std
lahf
mov
pop
xchg
xchg
popf
lret
movsb
test
aam
jle
aaa
push
or
andb
mov
mov
mov
pop
xor
orl
mov
dec
mov
adc
jg
pop
jno
xor
arpl
lret
daa
pop
xchg
orl
jl
or
scas
cmpsl
adc
dec
lret
stos
sub
push
mov
lds
hlt
or
cmpsb
repz
adcl
lods
fwait
loop
sub
out
and
cmpsb
xchg
lret
adc
adc
loop
jbe
hlt
into
lret
jns
jmp
cmpsb
push
int3
mov
adc
scas
imul
pop
inc
pop
jno
mov
push
sahf
dec
xchg
hlt
mov
ficompl
std
xchg
push
fcoml
sahf
sbb
int3
pushf
sbb
fmuls
shlb
pop
mov
mov
std
push
loop
imul
mov
inc
lods
cmovge
mov
jl
add
xor
xchg
dec
pop
stos
cs
outsl
mov
and
inc
loopne
dec
popa
jg
cmpsl
pusha
and
cmc
mov
hlt
mov
mov
aaa
loop
or
scas
dec
les
add
mov
rorl
xlat
mov
mov
inc
pop
mov
mov
xchg
popa
sub
div
fldl
pop
cmp
adc
xchg
adc
into
push
push
popf
mov
xchg
scas
jge
xchg
stos
mov
jecxz
repz
daa
pop
push
subb
or
jl
push
xchg
shlb
and
fs
add
mov
add
int
inc
pop
dec
movsb
insl
sahf
daa
leave
push
fwait
cmp
mov
xchg
dec
cmc
hlt
dec
mov
push
lods
mov
adc
scas
daa
ss
dec
mov
add
cmp
daa
cmpsl
shll
mov
outsb
jl
pop
cmpsl
test
jl
insl
cmpsl
xchg
adc
imul
xchg
xor
mov
dec
lcall
inc
lock
pop
out
sub
lret
dec
mov
and
and
test
lahf
push
push
addr16
mov
inc
push
rorb
pop
mov
in
aad
aaa
adc
setbe
aam
movsb
stos
mov
and
inc
out
in
jns
popf
add
imul
push
jg
in
mov
adc
out
inc
xor
cmp
rcrl
jno
lods
cmp
jg
insl
out
mov
mov
jp
mov
in
test
dec
test
sbb
pusha
mov
out
ret
or
cmpsl
sub
les
push
aam
inc
xchg
xlat
push
mov
xchg
jg
xchg
xchg
test
xor
daa
xchg
add
xor
mov
sbb
push
lock
xchg
ret
cmpsl
dec
xchg
push
pop
ffreep
jne
lahf
xchg
fsubl
adc
lock
sbb
mov
mov
inc
xchg
shl
pop
inc
push
inc
jl
mov
xchg
inc
xor
or
loop
int3
je
add
xor
mov
jmp
in
xor
xor
cs
sbb
inc
arpl
mov
pop
jne
cmp
mov
out
and
and
pop
sbb
jle,pt
mov
mov
and
clc
shr
sbb
int3
add
sahf
dec
in
decl
mov
push
mov
fidivrs
cs
and
sub
fwait
pop
xor
fdivrl
sub
pop
lock
adc
imul
int3
xchg
lock
xor
and
sub
aam
jns
lret
fsubp
mov
xor
cmp
and
inc
jg
jno
xor
rclb
xor
inc
or
fstpt
test
divb
bound
scas
pop
sbb
xchg
rolb
inc
xor
pusha
iret
adc
enter
add
mov
push
popa
cltd
mov
jbe
divb
dec
rolb
icebp
ljmp
xchg
xchg
pop
cwtl
push
add
fstp
pop
mov
out
pop
cli
and
xchg
jle
enter
adc
cld
inc
inc
daa
adc
jp
push
mov
pop
daa
jp
cmp
jle
mov
cmp
imul
and
pop
add
loop
mov
jae
cld
jns
addr16
shrb
sbb
mov
imul
jle
cmp
sbb
pop
sbb
mov
sbb
insb
pop
xorl
popa
pop
out
jge
insb
and
jle
into
addr16
xchg
lock
loope
dec
jae
arpl
lea
and
cmp
push
inc
pop
ljmp
cmp
pop
in
sbb
cs
pop
push
inc
mov
lcall
add
pop
or
test
mov
dec
pop
mov
mov
negl
loopnew
dec
repnz
mov
ret
in
aaa
sbb
out
test
mov
add
pop
inc
xchg
loope
dec
mov
dec
aad
xor
adc
in
xorl
lods
push
bnd
mov
or
mov
mov
pop
xchg
xchg
sarb
xchg
pop
fstl
loope
xlat
cld
mov
repz
add
imul
mov
ret
mov
es
mov
iret
cmp
xchg
jae
cmp
pop
and
push
sbb
mov
jb
inc
pop
mov
es
xchg
xchg
inc
outsl
pusha
test
test
xchg
cwtl
mov
jns
rcrb
sbb
pop
mov
movsl
mov
lea
inc
dec
jle
mov
popa
jns
fincstp
dec
inc
clc
out
inc
mov
mov
ss
pop
out
stos
loope
or
dec
mov
imul
popf
push
cmp
outsl
push
push
push
xchg
mov
adc
popa
mov
and
fisttpll
popa
mov
and
pop
dec
cmpsl
adc
mov
dec
push
dec
pop
rcll
jb
add
jb
imul
sbb
xor
sub
cmp
adc
xor
jnp
sub
mov
pop
bound
xor
in
pop
movsl
pop
loopne
in
insb
gs
xor
test
fadd
or
jno
inc
pop
cmp
cmp
adc
int
jne
int3
into
push
mov
test
repnz
and
mov
jb
data16
shlb
negb
mov
push
aas
xor
test
repz
out
fstps
inc
mov
repnz
outsb
jp
mov
jae
mov
fadds
add
js
inc
jae
adc
xchg
stc
cmc
cmp
std
add
dec
pop
clc
out
outsb
dec
hlt
orl
xchg
out
fwait
out
ficompl
mov
enter
jmp
sub
inc
mov
adc
cmp
or
xchg
inc
adc
sahf
in
pushf
faddl
adc
hlt
mov
hlt
push
add
xor
mov
cmp
xlat
ja
out
sbb
mov
adc
mov
xchg
mov
push
insb
pop
add
jns
test
rcrb
inc
pop
jge
out
or
xchg
add
lods
fstp
nop
dec
test
lock
cmp
outsl
xor
idiv
push
jno
sub
push
ja
fisubs
out
sbb
pusha
lahf
scas
hlt
inc
dec
cmc
sub
mov
or
ret
pop
cmc
push
ficompl
xchg
cmp
scas
lret
insb
jp
rcr
mov
jg
push
call
fnstsw
cwtl
cli
ljmp
mov
xchg
mov
cmp
adc
fiadds
push
jmp
in
mov
data16
sbb
sbb
or
jae
xlat
stc
inc
loopne
jle
out
push
sub
adcl
sahf
jge
repnz
xchg
test
xor
jl
lret
cmpl
push
idivb
adc
lret
xchg
out
dec
in
lea
std
add
and
test
jno
mov
les
jbe
sub
ror
push
xor
and
sti
sub
or
test
mov
pop
mov
test
into
push
test
test
sahf
sub
cmp
movsb
ds
and
aam
sbb
out
add
shlb
xchg
xor
call
xchg
pop
out
lods
jo
sbb
push
insb
inc
cmpsl
jno
out
push
stos
xchg
add
xchg
push
inc
std
mov
aaa
xchg
fwait
inc
cmp
in
add
in
mov
aam
jb
and
mov
in
scas
rorl
scas
push
xor
jnp
adc
andl
xor
or
outsb
dec
lcall
pop
mov
jb
not
dec
pop
pop
lods
xlat
and
dec
and
dec
cmp
bound
xor
lods
push
das
jmp
inc
xchg
test
jl
adcb
inc
pop
rcrl
fisttpll
add
dec
cmpsl
test
jecxz
pop
and
repz
mov
mov
js
lock
push
push
push
pop
les
push
jns
mov
dec
xchg
es
movl
aas
push
or
cmp
test
or
fwait
int
insb
push
jmp
jne
repz
adc
fisubrs
repz
imul
cli
lcall
sub
mov
adc
ljmp
scas
mov
cmp
push
jmp
or
inc
out
insl
xor
push
das
std
or
imul
adc
subl
sub
repnz
outsl
shll
adc
xchg
insl
xchg
bound
jmp
pop
stos
lret
inc
push
inc
lret
jne
mov
mov
js
loope
xchg
adc
rcrb
mov
mov
mov
outsb
cmc
sbb
mov
mov
popa
pop
hlt
int3
sbb
ret
repnz
mov
dec
fdivl
out
pusha
adcb
pop
ljmp
dec
sti
mov
scas
inc
mov
in
mov
sub
ss
jle
mov
pop
pop
mov
dec
jg
inc
cltd
arpl
movsb
mov
dec
jnp
adc
sbb
sbb
lret
cmp
loopne
test
stos
bound
push
and
add
adc
lahf
pop
inc
cli
adc
cmp
mov
lds
xor
sub
adc
xor
jmp
adc
adc
jle
daa
in
xor
mov
jle
jne
mov
or
nop/reserved
push
sub
cs
inc
pop
imul
fcmovnu
sbb
stc
pushf
inc
nop
int
int
insb
add
mov
aaa
pop
mov
js
mov
out
xlat
rcll
jnp
out
mov
sbb
sbb
mov
rol
scas
add
imul
mov
mov
std
mov
add
push
roll
js
xchg
sbbb
in
jb
hlt
icebp
jge
push
adc
cs
push
xor
jl
rorb
jmp
insl
jp
lods
sbb
es
xor
popf
test
outsl
enter
xlat
std
jo
jl
je
xor
jecxz
in
cli
sbb
fmul
mov
imull
sbb
dec
jp
xchg
jne
xchg
push
mov
sbb
test
cmp
sub
cmpsl
pop
cld
or
adc
mov
mov
push
mov
fs
cmp
repz
adc
stc
mov
stos
dec
cwtl
xchg
test
pop
lcall
arpl
or
sbb
dec
add
inc
aam
lcall
push
push
clc
add
sbb
clc
push
sbb
mov
push
sbb
jecxz
call
addr16
mov
cmp
xchg
mov
repnz
ds
xchg
mov
dec
add
xchg
das
and
push
mov
inc
mov
mov
mov
aas
stc
push
adc
js
pusha
pushf
fwait
push
mov
stos
dec
insl
jnp
sub
jae
in
push
and
pop
mov
std
scas
cmp
lret
out
out
cmp
ds
mov
sub
test
mov
pop
xchg
cmpsl
mov
cli
dec
xor
fs
xor
adc
lea
push
fwait
sub
dec
mov
sti
lahf
xor
add
arpl
dec
addr16
shlb
dec
dec
aad
dec
adc
mov
dec
jno
jbe
sub
loop
sahf
sub
ret
jae
mov
add
cmp
scas
mov
test
dec
jp
xchg
in
xor
ja
lea
adc
adc
mov
sub
sbb
push
lods
neg
fisttpll
icebp
xor
mov
pmaddwd
inc
loopne
cmpsb
mov
insl
rorb
fistl
inc
cltd
mov
loopne
outsl
andl
push
push
sbbl
inc
pop
inc
inc
aam
test
jns
repnz
insb
outsb
fcoml
andl
sub
insl
ficoms
call
negl
test
jns
push
push
adcb
mov
adc
stos
cmc
mov
aad
stos
ret
xchg
xchg
inc
cmp
lods
and
insb
xorb
scas
fwait
lock
mov
shll
cmp
mov
and
or
add
cmp
sbb
mov
movq
dec
leave
fstps
clc
or
sub
sbb
push
iret
pop
dec
jno
pop
pop
dec
sub
mov
and
icebp
inc
into
xchg
sbb
das
add
mov
in
orb
xor
add
loop
add
xchg
aam
sbb
push
or
dec
icebp
pop
repz
dec
aaa
jge
cmp
and
iret
push
stc
pop
and
push
ret
aad
lods
push
sbb
stc
pusha
sahf
test
cmp
push
in
lock
jmp
and
mov
adc
int3
cmpl
mov
nop
into
lods
jnp
out
popa
stos
out
shrl
loop
pushf
out
lock
fldenv
jnp
pop
xor
mov
mov
push
xchg
pop
add
mov
test
scas
or
out
icebp
jne
nop
xchg
inc
xchg
xchg
outsl
adc
adc
movsl
imul
push
test
test
jae
sub
stos
test
fwait
ret
orb
mov
loope
and
dec
clc
push
cmp
stc
fcmovne
xor
fcoml
sbb
loope
pushf
adc
push
lea
in
out
cld
sub
xchg
stos
aad
mov
sbb
sub
xchg
jg
sub
jne
xchg
leave
int3
jne
mov
loopne
xorb
or
dec
hlt
test
adc
bound
insb
and
pop
add
xor
out
mov
sub
nop
sub
insb
mov
ret
jle
testl
adc
inc
or
mov
decl
inc
pop
push
jns
gs
iret
jb
pop
sti
daa
dec
repnz
sub
mov
out
and
repnz
xchg
lea
mov
mov
das
cli
es
mov
dec
and
add
mov
sti
je
arpl
out
sarl
add
mov
outsl
pusha
imul
out
mov
adc
outsb
in
fsub
gs
ss
ret
cmp
and
lret
lds
mov
rorb
push
push
push
pop
popf
je
fistl
repz
scas
adc
mov
xor
jecxz
shlb
mov
xor
sbb
stc
imul
adc
enter
adc
or
stos
out
inc
lret
test
sbb
outsb
push
repz
push
and
lahf
cld
fnstenv
push
pop
arpl
aam
test
in
jmp
lds
jo
stos
mov
aad
and
testl
jno
loope
movsb
push
inc
push
cwtl
pop
xor
dec
xlat
mov
jl
imul
js
out
lods
pushf
lea
testb
mov
xchg
movsb
int
rclb
jne
cmp
lret
js
inc
iret
ds
std
pop
cmp
lea
mov
mov
test
ret
push
cwtl
cmc
push
leave
lcall
cmp
cwtl
add
xchg
sti
xor
mov
bound
or
bound
icebp
fwait
pop
sub
jmp
dec
ret
cmpsb
xchg
mov
lret
adc
push
ljmp
pop
add
xchg
and
subb
push
js
push
xchg
sbb
cld
mov
add
addr16
mov
and
jmp
jmp
in
jns
clc
and
lret
psubw
loopne
fsubrl
sahf
xchg
jp
loope
nop
fsts
pop
and
mov
movsl
ret
mov
rorl
fucomp
pop
je
and
xor
sbb
shl
imul
mov
or
jl
or
cmp
jg
dec
insl
out
xchg
cmp
rcll
stos
sahf
sahf
outsl
jmp
cmp
mov
lds
inc
ja
fst
cld
jne
pop
jne
imul
dec
inc
lock
cs
pop
inc
movsb
push
pop
add
out
push
sub
xor
or
cs
ja
xchg
mov
mov
mov
pop
fisubrl
stos
inc
jo
pop
cmpsb
lcall
mov
gs
add
minps
xchg
lods
in
lods
mov
adc
gs
fidivl
mov
jmp
push
dec
push
or
jbe
cmp
push
dec
test
aaa
mov
sub
cmp
sbb
jecxz
adc
stos
repz
push
cltd
inc
outsl
xorb
adc
mov
cmp
popa
cmp
mov
push
leave
addr16
and
adc
ljmp
inc
push
in
add
pop
sub
mov
and
outsl
clc
loopne
in
pop
xchg
xchg
fnstenv
cwtl
mov
ja
stc
movsb
pop
cmc
repz
adc
test
mov
cmp
mov
xchg
test
out
cmpsb
push
stos
test
mov
mov
sbb
scas
clc
push
lahf
in
adc
fs
out
fsubs
pusha
adc
xor
and
sbb
scas
lcall
jne
xor
jp
pop
rolb
andb
sub
xor
in
insl
mov
mov
jae
and
icebp
dec
lock
adc
shll
aad
and
sub
adc
sahf
ja
adc
pop
lock
xchg
mov
mov
or
fsubl
and
cmc
int
xlat
pop
inc
dec
lea
push
adc
pop
cmpl
mov
out
stos
xor
sbb
push
inc
adc
mov
mov
imul
xchg
add
jl
nop
cmpsb
cmp
sub
push
push
xchg
xor
je
pop
and
mulb
pop
pop
ss
push
jne
out
sub
sub
mov
sbb
cmp
or
hlt
enter
cmpsb
jge
stos
xor
orl
xchg
lahf
cmp
iret
or
inc
push
xchg
popa
and
push
and
mov
xor
mov
test
push
adc
sbb
sahf
in
out
push
adc
pop
aas
add
dec
mov
dec
sub
cmc
dec
pushf
cmp
xor
test
dec
inc
xchg
stos
or
xor
and
add
sbb
pushf
fdivr
fs
add
int3
sub
jge
mov
ss
movl
cmp
loope
ret
outsb
popa
aaa
mov
repz
test
xor
push
inc
or
jp
fsubs
lahf
or
cmp
jns
sbb
push
mov
icebp
add
imul
and
repz
adc
cmpb
dec
in
imul
rcrl
pop
outsl
lcall
enter
xchg
mov
xchg
cmpsb
pop
movsl
xor
ds
mov
mov
pop
adc
jbe
es
cmp
xchg
mov
mov
movsb
add
mov
or
and
mov
imulb
icebp
lret
and
stos
pusha
sbb
into
lea
pop
clc
bound
mov
xchg
pop
cmp
pop
in
or
mov
dec
out
adc
push
in
adc
cltd
ret
and
adcl
sub
inc
xor
shrl
push
sbb
xchg
push
fucomi
fisubrl
in
lea
jg
popw
push
lods
mov
dec
or
divl
inc
fs
and
push
pushf
outsb
mov
xchg
mov
adc
push
cmp
out
sbb
dec
lret
fwait
arpl
jp
es
jp
jne
xchg
pop
sub
xchg
mov
mov
cmc
movsb
xlat
push
dec
sahf
cli
add
push
mov
arpl
jns
sbb
cmp
mov
pop
aad
xchg
ret
xor
sbb
inc
pop
dec
icebp
cld
push
jo
loop
xchg
inc
in
sti
fists
test
sbb
in
pop
mov
push
jp
mov
jne
push
ret
xor
jle
out
xorb
dec
aas
lret
add
mov
xchg
hlt
leave
pop
jb
lahf
push
hlt
js
adc
mov
add
sub
push
lret
xchg
mov
in
inc
jb
mov
js
cs
bound
int3
pop
mov
or
scas
cwtl
orl
xchg
fs
jb
ja
nop
sbb
jg
in
xchg
imul
es
jno
outsl
sbb
repz
cli
aaa
shr
cmpsl
mov
test
imul
dec
cmp
dec
push
or
xchg
mov
cmpsl
xor
cmpsl
sarb
lahf
xchg
addr16
test
push
fldl
push
ja
fldenv
jmp
mov
and
adc
in
loopne
movsb
ret
divl
aas
shll
jae
loope
add
or
push
cs
ljmp
mov
or
addr16
push
mov
into
or
adc
cmp
inc
into
std
in
jb
aaa
jge
add
leave
es
in
nop
dec
insl
sarb
push
into
in
sbb
mov
mov
mov
leave
ljmp
jns
addr16
inc
loope
jl
icebp
or
call
ds
aaa
int3
cmp
adc
mov
or
adc
xchg
mov
sti
or
jp
cmc
es
arpl
cli
dec
jg
xchg
lods
iret
dec
daa
sub
leave
mov
shll
lods
es
addb
insl
out
add
lds
xor
sub
aas
fs
and
sub
pop
inc
dec
aad
sub
fwait
push
dec
lret
cmp
jno
adc
mov
aas
add
test
fwait
sbb
mov
cmp
insl
sbbb
push
lea
xchg
jle
and
mov
jg
pop
repz
stc
insl
jmp
lods
mov
sub
add
cmpsb
rcll
test
dec
cmp
loopne
in
mov
sub
push
xor
or
jnp
les
dec
in
int
pop
fs
inc
fcmovu
adc
jge
lods
cmc
imul
inc
xchg
repz
popa
fcmovbe
in
cmc
rolb
mov
in
lret
aaa
and
pop
add
mov
sbb
or
jg
mov
pop
mov
js
aam
xchg
arpl
cmp
sbbl
movsl
push
add
test
call
into
or
mov
xor
mov
inc
imul
nop
push
mov
fistpll
adc
pop
push
mov
icebp
iret
cmp
add
xlat
rcl
jl
xchg
movsb
cmc
mov
fldl
push
sub
xlat
xorb
cmp
adc
pushf
lea
scas
jge
pop
cmp
enter
arpl
or
out
loope
sub
ret
loope
push
mov
sbb
aam
mov
xchg
xor
test
adc
mov
and
inc
adc
mov
mov
rcl
xchg
cmp
xorl
bound
sbb
push
mov
outsb
push
push
inc
mov
je
add
or
mov
mov
cltd
or
mov
insb
xchg
sbb
add
test
popf
sbb
into
and
gs
or
sbb
loope
out
jecxz
add
and
ftst
mov
jmp
iret
sub
dec
xchg
xchg
cmp
test
cli
add
jno
dec
cs
shll
dec
int3
cmp
cli
and
outsl
sbb
sbb
test
cwtl
inc
hlt
adc
adc
xor
jge
stos
sub
mov
idivl
pop
scas
jg
std
insl
popa
inc
sbb
aaa
sub
outsl
fstpt
lods
jle
adc
cmp
stc
and
dec
adc
cltd
mov
xchg
fcompl
nop
jae
sbb
aaa
mov
xor
inc
mov
test
adc
std
les
rolb
loope
dec
xchg
out
test
stos
pop
jno
movsl
add
inc
sbb
pop
adc
nop
mov
mov
ja,pn
pop
pop
pop
jae
and
shll
hlt
dec
aam
or
push
or
pop
and
adc
mov
jns
repz
sbb
push
test
movsl
xor
adc
gs
or
sti
in
aam
fidivrs
cmp
mov
cli
adc
pop
cli
arpl
jnp
sti
push
lret
das
add
sarb
inc
movsb
inc
aaa
dec
and
int3
mov
jae
ss
ret
jecxz
push
sbb
xchg
scas
lea
loop
xor
xchg
cmp
notl
jecxz
pushf
mov
fisubl
sbb
push
neg
lock
ficoml
daa
mov
pop
push
imul
je
inc
mov
xor
fisubs
xchg
push
or
js
jmp
loope
push
mov
in
and
shlb
fdivrl
data16
lock
ret
cmpsl
pusha
jb
mov
stos
inc
cmp
ja
test
push
dec
stc
rol
pop
out
dec
lock
mov
push
pop
push
cs
or
push
jb
mov
mov
jmp
xchg
jo
pop
test
mov
add
sbb
pusha
push
jle
fcomps
leave
mov
rorb
ret
cmp
push
mov
arpl
imul
xchg
js
mov
hlt
popf
pop
enter
sbb
xor
jns
mov
cmp
mov
adc
insb
jge
cmp
or
jae
and
jns
das
gs
fwait
in
ss
aas
adc
je
dec
insl
pushf
dec
repz
mov
or
in
ljmp
aaa
adcb
jge
fsubl
lods
push
push
repz
pop
xlat
or
mov
sub
loopne
mov
sub
or
pushf
or
sub
iret
cli
pushf
pop
and
pop
or
pop
movsb
mov
adc
push
xchg
push
andb
sub
mov
mov
fldcw
stos
movb
and
push
push
les
shlb
mov
mov
inc
mov
test
push
ret
in
and
mov
mov
cmpsl
aam
ret
sbb
mov
push
std
int
xchg
cwtl
and
loopne
push
out
and
lods
dec
jle
jp
dec
mov
push
jne
mov
cmp
push
sti
pop
jne
mov
add
inc
push
inc
jae
gs
xchg
inc
in
sbb
push
push
fisubl
jbe
dec
movsb
sub
sarb
push
jne
and
aad
decb
inc
adcl
sub
sbb
lods
mov
inc
pushf
cmp
adc
jbe
pop
std
dec
dec
and
dec
hlt
jle
dec
cmp
sub
dec
or
cmp
or
nop
cmpsb
outsl
mov
mov
jecxz
pop
cwtl
add
es
sbb
arpl
cltd
jp
dec
fucomip
xchg
dec
scas
and
xorb
scas
cmp
or
mov
mov
sbb
out
sbb
sbb
aad
fbld
dec
and
sbb
or
pop
js
cmp
out
les
mov
repnz
dec
jb
stos
jecxz
pop
out
xchg
pop
sbb
cmp
outsb
test
fwait
push
push
hlt
in
mov
aam
test
pop
inc
and
ret
shrb
push
fcmovnbe
and
lea
les
add
cmp
or
xchg
jbe
inc
ds
insl
dec
jle
mov
mov
cmpsb
and
rolb
xchg
scas
test
sahf
sub
push
sbbb
lods
test
je
and
or
sub
xchg
and
je
out
faddl
xorb
out
decl
fiadds
enter
xchg
cmp
stos
stos
fld
sub
adc
lds
repz
dec
roll
mov
mulb
mov
stc
adc
dec
add
data16
lods
lea
mul
dec
dec
pushf
cs
cmp
and
pop
xor
jnp
mov
nop
mov
xchg
not
adc
sbb
xchg
movb
xchg
xor
and
pushf
movsl
mov
jle
cmpsl
jne
outsl
int3
sbb
sub
adc
xchg
div
mov
xchg
mov
cli
xchg
inc
push
in
clc
pop
rcrl
jge
mov
push
sbb
mov
push
mov
scas
pop
mov
cmp
cmp
cli
dec
mov
lea
xchg
jne
pop
mov
lods
int3
sub
das
shll
xor
jo
sbb
pop
and
sub
cmp
fists
pop
loopne
subb
add
cmp
mov
xchg
ja
lcall
inc
mov
sub
pop
dec
jnp
adc
dec
push
scas
aaa
test
js
int
sbb
dec
cmpsl
cmp
js
ja
int
jge
int3
xchg
inc
mov
xor
xor
inc
mov
imul
out
jne
sub
or
mov
je
sbbl
sysret
and
pop
lahf
push
push
in
out
cvtps2pd
mov
popa
sbbb
jg
mov
jb
sti
adc
int
lock
cmc
xchg
cmp
scas
pop
add
inc
scas
test
out
call
imul
push
and
cmpsl
dec
in
push
leave
xor
cmp
data16
xor
dec
cwtl
loop
and
sbb
and
cmp
push
or
push
mov
pop
or
clc
loopne
dec
lods
call
sahf
lcall
adc
jnp
repz
es
xchg
jge
push
adc
pusha
inc
adc
pop
pop
rorl
imul
mov
mov
cmpsl
out
test
xor
stc
data16
fidivrs
or
loop
jecxz
mov
dec
jno
and
push
pop
shlb
in
mov
fimuls
outsl
loop
mov
pop
stos
stos
xchg
cmp
dec
cwtl
pop
push
mov
adc
stc
mov
jg
cmpl
or
movsb
pusha
xor
inc
test
ret
sbb
mov
clc
xor
les
inc
mov
fmull
pop
in
dec
jmp
mov
ret
push
test
gs
mov
aad
dec
or
mov
bound
sbb
inc
bound
int
imul
sbb
push
test
loop
cmp
cmp
dec
push
sbb
pop
fiaddl
cwtl
stos
pop
out
fcoms
cltd
repz
lcall
scas
mov
cs
jp
sub
xchg
in
imul
xchg
insl
xchg
adc
addr16
or
lcall
sahf
mov
cwtl
aam
add
js
push
lock
outsl
rorl
mov
cmp
fcmovnu
stos
cmp
add
sahf
sbb
add
in
sahf
test
in
inc
stc
pop
pop
pop
dec
jo
imul
push
jecxz
in
pop
insb
cs
scas
jbe
dec
pusha
adc
cmp
add
add
fists
in
lods
lods
xchg
push
nop
cmpsb
lret
jo
inc
dec
js
call
mov
std
sub
xchg
xor
sbb
pusha
jmp
mov
data16
xchg
dec
push
fcoml
dec
pushfw
jns
mov
cmpsl
and
cmp
sub
aas
lahf
cmpsb
pop
pop
mov
push
inc
push
arpl
test
ja
insb
sahf
jne
xor
into
cmp
cmp
xchg
mov
or
rcrb
lods
lret
xchg
mov
fisubrl
mov
push
mov
adc
shlb
stos
push
aas
scas
xchg
sub
shl
adc
dec
out
call
rorb
jp
fbstp
and
xchg
inc
or
pushf
mov
or
adc
sti
js
xor
enter
add
lahf
xchg
pop
popa
or
add
insl
xor
stos
jp
sub
int
cmpl
and
sub
mov
ds
int
push
loop
gs
pop
lods
pop
in
loop
xchg
and
xorl
jno
sub
sahf
fisttpl
jecxz
enter
jl
gs
movsl
sub
inc
mov
jnp
mov
fldt
inc
negb
sub
sbb
pop
dec
movsb
mov
xor
inc
ss
lods
adc
jo
mov
push
mov
jb
xchg
push
shrl
add
pop
sub
fists
adc
pusha
push
inc
pop
in
orb
shlb
mov
int3
inc
mov
ljmp
mov
mov
dec
ret
or
hlt
lds
add
hlt
out
inc
inc
and
xlat
cmp
push
bound
and
jbe
xor
add
mov
or
xor
ja
sti
lods
sub
stos
lcall
inc
mov
popf
xorl
and
sub
mov
or
imul
mov
xchg
jmp
shr
stos
and
xchg
lods
js
scas
mov
fwait
push
mov
enter
icebp
dec
jecxz
ljmp
mov
pop
decl
ja
inc
dec
fxch
push
add
arpl
inc
outsb
lock
lahf
mul
mov
bound
das
mov
call
add
push
daa
xchg
mov
mov
cmp
gs
pop
mov
pushf
cmpsl
icebp
mov
inc
cltd
test
dec
cmp
ja
daa
sbb
mov
fildl
fwait
inc
xchg
test
mov
shlb
push
ficomps
xchg
mov
popf
push
lret
mov
dec
cwtl
fwait
xor
cmp
fiaddl
pusha
aaa
jo
mov
xor
mov
rcrb
sub
push
stos
or
cmp
xlat
inc
sub
dec
mov
sarl
mov
into
mov
shll
dec
mov
clc
fs
sbb
push
popa
cmp
sti
out
inc
mov
and
jno
xlat
dec
and
rorb
mov
lret
mov
popf
ds
mov
mov
or
inc
and
pop
pop
cmpsl
sti
les
sub
pop
test
sub
out
cltd
xor
or
shr
cmp
ds
repz
mov
out
xor
adc
into
or
rcrb
add
inc
jae
push
movsb
ret
cli
sub
lret
pusha
int
addl
sarl
cmp
xchg
mov
jg
xor
and
test
mov
mov
cmpsb
jnp
fsubs
sti
scas
addr16
rcrb
jb
data16
ret
xor
je
or
and
cmp
adc
cmp
mov
mov
sub
dec
stc
cmp
jae
push
popf
jbe
xchg
xlat
lods
out
es
fildl
out
mov
jmp
pop
and
fwait
ds
cwtl
decb
mov
lret
and
out
addr16
mov
cmpb
loopne
sbb
dec
pop
addr16
xchg
clc
imul
inc
pop
mov
xchg
jmp
mov
icebp
add
sub
lret
mov
lcall
add
pushf
sbb
lods
push
shrb
jae
div
jns
mov
or
and
mov
inc
mov
adc
inc
push
lea
sub
jo
dec
and
jle
mov
sub
fwait
adc
into
insb
movb
imul
fstpl
movsb
sub
lcall
gs
stos
popf
daa
push
decl
sub
rcrb
dec
hlt
lods
shr
movsb
test
or
sub
sbb
repz
add
push
sub
push
mov
mov
xor
mov
iret
hlt
cmp
ja
push
lds
push
filds
and
push
xor
out
dec
mov
fmul
in
sub
sub
cwtl
and
outsl
fimull
repnz
pop
cmpsb
xchg
scas
pop
adcl
xorb
loopne
sub
js
add
pop
rcrb
sub
stc
sbb
movsl
inc
test
mov
lea
xor
in
into
mov
mov
outsb
lcall
bound
pop
jl
jp
jmp
stc
hlt
xchg
addr16
call
pop
mov
and
jp
enter
xchg
aas
adc
test
scas
scas
push
jge
data16
mov
pop
nop
fcompl
lahf
and
mov
dec
adc
roll
or
gs
xor
stc
or
clc
add
jne
cs
out
stos
sub
mov
daa
dec
inc
xchg
and
int3
lock
xchg
out
pop
loopne
pop
leave
sub
inc
fstpt
sahf
sub
jge
call
in
scas
pop
fwait
inc
cmp
cmc
gs
or
cld
rcr
adc
shlb
dec
jle
hlt
gs
lahf
pusha
push
xor
lret
sub
nop
xor
js
jae
pop
fildl
int
int3
stos
push
lret
std
int3
dec
lea
mov
jge
enter
mov
push
or
aam
rclb
mov
xor
seta
mov
sub
test
xor
sbb
lea
lock
mov
jl
mov
cmc
mov
stos
push
orl
mov
add
mov
xor
mov
test
inc
popa
pop
insl
cmpsb
add
xchg
jns
mov
mov
mov
cli
cld
test
add
or
mov
aam
popf
bound
call
sahf
out
rolb
rcr
add
aad
jge
pop
enter
repz
outsl
cmp
outsb
cmc
aad
adc
inc
cmp
mov
mov
adc
pop
xor
add
lock
and
pop
lea
fidivrs
outsb
add
repnz
nop
dec
and
cmpsl
mov
mov
outsl
mov
dec
in
sub
xchg
inc
lock
jno
pop
lcall
popa
push
gs
xlat
xchg
sbbl
call
dec
and
lds
out
add
in
jo
dec
sbb
fsubrs
aad
mov
mov
jmp
mov
lods
das
jecxz
in
dec
addr16
xor
jae
int
pop
ficoms
divl
jb
push
movsl
xorb
daa
sbb
mov
pop
xor
xchg
rorb
insb
push
fldenv
push
loop
mov
inc
inc
bound
push
pop
mov
sti
pop
push
inc
outsl
mov
mov
js
test
xor
rol
add
adc
and
inc
test
dec
aam
mov
push
or
mov
or
sbb
in
daa
jle
sbb
xchg
inc
inc
mov
push
stc
push
jl
adc
pop
daa
or
inc
mov
push
in
popf
xchg
or
or
sahf
mov
sub
in
jp
sbb
imul
add
shrl
loop
mov
lods
les
cltd
adcl
pushf
js
sti
xchg
out
inc
cmp
insl
jno
ret
sub
and
enter
push
not
repnz
jg
popa
or
stos
push
sub
mov
push
ret
or
test
and
push
sbbl
jbe
aas
cmc
daa
sub
mov
std
int3
jl
je
bound
mov
je
xor
andb
xchg
mov
xchg
inc
nop
xchg
out
sub
inc
jecxz
mov
mov
bound
mov
pop
insb
sti
xchg
xor
into
jecxz
jb
push
stos
jno
ret
cmpsl
jnp
xor
iret
int
std
in
push
mov
mov
fcomps
int3
aam
test
xor
insl
out
pop
and
movsl
push
dec
bound
jne
sbb
sarb
insl
aaa
sbb
sbb
cli
adc
outsl
in
sbb
lret
xchg
dec
scas
jle
adc
shll
sbb
cmp
rcl
jle
fwait
orl
jne
lods
mov
mov
jp
jle
lods
rolb
add
lret
xchg
sbb
std
jo
mov
imul
xchg
push
and
jnp
icebp
and
xor
sbbl
popf
lret
aas
push
pop
cs
gs
add
ss
lods
outsb
mov
in
mov
addr16
pusha
into
popf
adc
ret
ret
testb
and
bound
inc
icebp
xchg
enter
les
jecxz
mov
in
repnz
mov
jne
add
inc
push
jno
or
sar
jb
dec
jae
mov
sarb
jne
mov
push
cmpsl
mov
fwait
jne
pop
ds
sbb
adc
stc
imul
dec
bnd
dec
insl
outsl
sub
adc
or
xor
xor
mov
pop
sbb
cmp
dec
sbb
mov
sbb
adc
enter
fistps
mov
loope
fwait
imul
lret
pusha
xchg
add
xchg
mov
or
das
mov
adc
mov
js
bound
shl
shlb
leave
test
add
test
out
adc
iret
jle
jg
jp
arpl
jp
ret
lods
in
loopne
lret
push
add
stc
imul
popf
push
push
cmp
mov
mov
lds
sarl
mov
adc
cld
cmp
fcomi
hlt
rcll
cwtl
xor
popa
fsin
cld
cli
or
sbb
jmp
testb
or
cli
outsl
mov
cltd
and
and
outsb
dec
out
scas
push
int3
insb
and
adc
push
mov
scas
adc
lret
scas
and
xchg
jns
mov
sub
hlt
stos
js
insb
out
dec
sub
mov
inc
adc
mov
and
push
insb
insl
fsubr
ss
fldl2e
sarl
jae
mov
xchg
test
or
loop
sbb
pop
cmp
cmpsl
sbb
add
loope
mul
cmp
sub
ds
inc
outsl
sub
dec
push
outsl
mov
aaa
inc
ret
hlt
adc
xor
add
mov
jb
loopne
out
shrd
mov
outsl
repz
push
movsl
icebp
xor
aas
mov
hlt
xchg
es
repnz
adc
orl
sti
cmp
cli
or
jl
fwait
and
es
aam
rorl
jae
in
call
fistps
sbb
cwtl
sahf
mov
out
add
test
jo
add
and
xor
sbb
cli
or
mov
and
jl
daa
clc
adc
cmp
adc
sbb
add
xor
xchg
inc
stos
push
mov
imul
push
scas
stc
xor
cltd
lds
pop
mov
push
push
sbb
cmc
sti
orl
rclb
xor
or
aam
lret
add
outsl
hlt
sbb
psrad
dec
fisttps
call
loop
pop
add
loope
shl
ja
xor
add
jnp
mov
imul
loopne
inc
or
push
mov
fistpll
fmuls
fisubrl
push
insl
ror
das
shll
pop
pop
lret
mov
popa
dec
loope
ret
jmp
insl
iret
push
fucomp
sub
insl
sub
xorl
jnp
pop
fstpl
lahf
scas
dec
pop
nop
and
cwtl
mov
sbb
cmp
cmp
bound
jge
mov
sub
in
jae
or
popa
xchg
mov
mov
cmp
mov
mov
mov
ljmp
jns
pushf
jge
inc
adc
data16
and
fistpl
sub
pushf
ficoms
cmp
rorb
ja
mov
inc
push
sub
push
dec
adc
sti
pop
fisttps
scas
mov
jne
clc
test
fldt
fs
outsl
mov
add
inc
xor
loop
je
inc
hlt
jmp
movsl
sbb
sbb
sub
dec
adc
mov
fsubp
pop
cli
sbbb
testl
sub
mov
in
jge
sub
std
pushf
xchg
sbb
push
push
jae
sbb
ss
std
lret
out
lret
sahf
jp
inc
pusha
ljmp
loopne
mov
mov
jo
popf
cmp
rorb
mov
test
add
mov
or
xchg
xor
test
out
mov
mov
push
lcall
inc
sar
rcrb
xchg
clc
mov
fscale
dec
jb
pop
aaa
std
loopne
call
and
adc
sbb
pop
mov
pop
adc
push
push
or
lods
in
das
sbb
pop
repnz
mov
lods
fwait
test
push
fimuls
test
cmp
sub
ss
mov
mov
inc
scas
xlat
inc
js
mov
mov
adc
inc
repz
int
sub
ja
aas
lods
ljmp
jnp
es
push
push
lds
xor
rol
xchg
enter
push
or
mov
or
push
xlat
pop
pop
adc
popf
andb
fnstenv
aas
inc
cltd
xchg
jg
push
movsb
lock
adc
js
and
inc
fmuls
setne
fxch
cmpsl
jb
sub
fistpl
inc
dec
pop
xor
test
inc
jne
popa
mov
dec
lret
cmp
add
mull
push
sub
fdivrl
xchg
mov
mov
popf
mov
pop
cltd
add
sbb
inc
rcll
je
aas
dec
sub
mov
loopne
sbb
add
pushf
leave
sbb
rcll
andb
lea
xlat
pop
inc
pop
sbb
fmull
js
mov
cmp
notb
xchg
dec
mov
push
adc
cmp
shlb
aad
mov
pop
sub
popf
sbb
push
pusha
lds
fsubrl
jl
cmp
lahf
stos
push
clc
lahf
push
ret
mov
scas
es
push
dec
ja
or
rorb
rorl
adc
mov
sbb
pop
jae
pop
add
icebp
cmp
in
and
sbb
aas
mov
sub
arpl
lret
mov
mov
out
dec
pushf
jl
stos
dec
xchg
dec
shll
cmp
push
inc
into
or
xor
gs
fmull
sub
adc
or
add
das
ret
popa
inc
inc
enter
pminsw
mov
cltd
shlb
cmp
cmpl
mov
cmp
arpl
mov
xor
outsl
xchg
cmp
fs
ror
test
cmpsb
sub
arpl
in
pusha
mov
xchg
sbb
and
xor
mov
out
push
xlat
icebp
jne
in
fldl
outsb
movntq
out
jmp
mov
lcall
adc
stos
or
scas
in
cmpb
fsubs
cli
shlb
call
push
iret
cs
lds
mov
cmpsb
cld
cmp
shrb
lods
dec
insl
jg
lock
sti
cs
add
hlt
cmp
clc
in
in
jl
mov
cld
lods
and
std
mov
andb
pop
int3
hlt
adc
ljmp
or
addr16
push
addr16
or
or
fsts
push
jmp
mov
out
stc
lds
decb
push
jl
testb
das
stc
test
pop
les
cmpsb
inc
movsb
fistps
and
lea
mov
sub
sti
insl
addr16
push
cmp
lahf
out
pop
xorb
call
clc
dec
push
or
inc
imul
sub
add
xchg
lock
sub
inc
push
sub
pop
pop
addb
or
imul
add
pop
jno
fcompp
ficomps
popf
mov
inc
push
cmpsb
stos
outsb
or
sub
das
je
adc
mov
xor
sbb
test
inc
scas
jne
popa
daa
dec
insb
fdiv
jae
sbb
pop
pop
sbb
inc
int3
push
aaa
lock
rcrb
mov
inc
testb
sbb
bound
adc
lods
and
int3
sbb
out
das
dec
xor
add
popf
testl
dec
or
dec
daa
xchg
sbb
js
xchg
stos
cmpsl
sbb
mov
ret
push
out
sbb
ret
lcall
add
pop
pusha
add
and
pop
jno
pop
lcall
sbb
push
insb
outsb
test
nop
add
bound
shll
push
sub
lea
xor
vmovups
imul
call
out
cmp
xchg
in
lds
sbb
jbe
add
sbb
pop
and
jno
pop
jge
movsb
sbb
xchg
adc
aam
bnd
sub
mov
cmp
sbb
test
cmp
mov
xlat
test
fwait
stos
jns
hlt
testb
dec
lods
dec
lods
xor
ret
xor
inc
or
add
cmpsb
pop
cmp
ret
mov
sbb
inc
add
lock
outsl
hlt
lahf
adc
fcoms
xchg
into
pop
adc
addl
stos
dec
in
es
cld
sbb
jl
cmpsb
repz
mov
xor
gs
cmp
lds
outsb
dec
ds
fiaddl
push
das
mov
push
loop
repz
imul
mov
test
mov
and
test
scas
adc
fwait
out
bound
das
push
ret
jb
dec
cmpsl
ret
push
mov
into
repnz
test
sahf
push
lahf
jno
add
inc
cmpsl
mov
sub
adc
jg
sahf
fstps
lea
out
sbb
sub
int
int3
mov
pop
dec
or
and
incb
ficomps
mov
mov
arpl
outsb
inc
mov
jg
stc
shrl
cmpsb
int3
stc
pop
gs
jmp
mov
call
mov
xor
inc
lret
aas
test
faddl
sbb
mov
lcall
in
test
test
icebp
aas
or
push
int3
out
adc
cmp
jl
jge
adc
cmpsl
sub
adc
jl
mov
pop
movsb
and
into
cli
aaa
fadd
inc
rorl
dec
adc
sbb
cs
mov
ret
sub
movsb
dec
dec
jg
in
aad
mov
sub
add
pop
rcr
or
into
pushf
cmpsl
imul
enter
xchg
lds
gs
lods
sub
jb,pn
pop
xor
adc
sub
fnsave
cltd
push
test
fimuls
cli
xor
cmp
sahf
rol
addl
mov
push
jae
mov
push
aas
cmp
sbb
je
fisubs
mov
loopne
icebp
sub
loope
cmp
xor
fstpt
js
addl
fwait
push
movsb
ljmp
clc
add
cmp
fcmovne
ret
cmp
stc
movsb
loopne
jmp
sub
pop
xchg
jp
xor
or
pop
popa
out
add
test
lock
or
imul
xchg
add
jo
or
mov
or
sbb
pop
sub
xchg
fwait
mov
sbb
xor
insb
jl
sbbl
in
outsb
add
adc
inc
mov
scas
fsubl
ss
cmp
bound
push
subl
mov
in
cltd
xor
fisubrl
mov
push
divb
mov
mov
out
mov
push
in
stc
sti
clc
daa
inc
xor
stos
sbb
xlat
lds
pop
cltd
gs
dec
int
test
pop
insl
lret
adc
cmpsb
les
in
clc
cltd
in
fstpl
fiaddl
call
jl
dec
mov
mov
and
cmpsl
mov
dec
add
aaa
imul
cmp
mov
out
stos
xor
iret
xchg
test
push
test
inc
sbb
add
iret
movb
dec
das
push
inc
mov
fsubs
or
call
mov
fidivl
jge
sbb
pop
cmpl
cmp
rep
sbb
pusha
fidivrs
test
dec
adcb
adc
cmp
test
inc
stos
imul
sub
jo
inc
xchg
std
xor
mov
push
and
stos
sbb
adc
lcall
cmp
stos
add
stos
lret
je
leave
xlat
pop
jle
adc
mov
pushf
mov
in
mov
dec
cwtl
push
decb
sub
fnstcw
and
push
jmp
lahf
mov
and
push
jnp
mov
gs
xchg
lock
les
mov
jb
sub
cmp
lcall
pop
xchg
cld
push
cmp
xchg
es
aam
adc
add
iret
call
mov
mov
xchg
push
bound
out
scas
mov
sti
and
movsl
or
in
insb
jmp
dec
outsl
add
xorb
cs
in
ja
mov
sub
adc
lcall
xchg
fsubrl
jge
fwait
ret
lret
fwait
dec
mov
dec
cmp
and
mov
in
inc
jl
outsb
orl
jno
fnsave
xchg
hlt
repz
out
loop
repnz
adc
nop
outsl
bound
or
push
popl
fcompl
add
and
mov
inc
fisubrs
outsl
jae
xchg
lret
push
lcall
and
xlat
cld
sahf
dec
adc
lods
mov
jmp
lock
popa
fnsave
mov
cmp
cmp
sahf
popf
fbld
sbb
xlat
leave
pop
dec
daa
dec
and
and
mov
sub
inc
xor
inc
and
sbb
pop
out
jne
mov
mov
mov
mov
push
mov
scas
dec
and
jmp
scas
adc
push
les
and
pop
dec
push
icebp
cmpsl
jg
or
jg
dec
xchg
xor
dec
mov
adcb
add
and
mov
pop
repnz
adc
xchg
clc
inc
nop
pop
ret
ss
mov
jg
sub
or
testb
mov
mov
sbb
xchg
sbb
sti
push
call
test
dec
cmp
loope
and
jmp
fucomp
xchg
jmp
xor
mov
cwtl
frstor
fimull
dec
das
pop
lock
push
inc
xor
jp
mov
or
push
orb
aam
leave
dec
ffree
push
testl
mov
or
daa
ja
scas
and
mov
adc
cmp
mov
inc
and
lods
orb
lea
mov
insl
inc
out
jge
out
mov
or
aaa
and
rcll
add
jne
dec
xchg
imull
and
inc
adc
mov
xor
xlat
nop
insb
add
cmp
test
fpatan
inc
inc
rolb
pop
mov
pop
xchg
jle
jl
dec
pop
xchg
cmp
and
ror
fcomps
push
and
rorb
xor
js
mov
daa
adc
dec
sti
std
pop
addr16
add
pop
push
int
je
loope
mov
push
dec
jne
fidivs
jle
and
push
out
dec
sti
movl
inc
add
cmpsb
jb
jge
fisubl
rcll
decb
fisttpll
aam
test
pop
jns
ret
and
out
inc
cmpsl
jg
or
xchg
pop
repnz
xor
inc
push
mull
and
hlt
mov
lahf
es
ja
jg
jmp
mov
sbb
mov
mov
mov
in
cmp
jle
lcall
or
mov
sub
nop
xchg
pop
mov
in
push
xlat
in
mov
jp
adc
ljmp
sar
es
push
adcl
mov
lds
inc
inc
outsb
ret
je
cmp
pop
sub
icebp
sub
in
std
into
movsb
shll
push
pop
ds
insl
or
loopne
inc
fcomps
or
testb
push
movsb
loopne
cmp
cmc
test
inc
cmp
movsb
dec
movsb
dec
add
aas
mov
mov
pop
in
mov
scas
js
push
shl
mov
stos
xchg
pop
pop
in
fcmovu
loop
cs
iret
outsb
dec
jb
arpl
xchg
jne
xlat
xor
cs
rorl
loopne
out
mov
fld
push
dec
fisubrl
mov
dec
cmp
mov
inc
clc
lock
xchg
pop
sub
add
popa
inc
test
pop
cmc
inc
cmp
jle
inc
jbe
mov
mov
lret
push
push
sbb
xchg
stc
sub
aaa
pop
adc
mov
lods
sub
cmpsl
fs
inc
pop
in
mov
and
and
push
hlt
mov
fdivs
movsl
dec
inc
imul
add
jecxz
fnstenv
sti
cmc
subb
mov
mov
std
jbe
dec
lock
ret
fcmovnbe
xor
lock
sub
inc
mov
stc
fiaddl
mov
jo
daa
stc
xor
clc
mov
add
mov
and
scas
mov
jge
jp
sub
in
mov
xchg
jmp
outsb
cs
call
or
push
stos
ret
pop
int
or
cmc
jbe
pop
or
loop
das
dec
arpl
jmp
mov
jns
jb
dec
in
imul
mov
lret
dec
dec
pop
ficomps
mov
fnstenv
cmpl
pop
mov
inc
aam
sar
mov
nop
xchg
cmpsb
ljmp
jecxz
loop
out
xor
pop
bound
jo
mov
popf
push
ljmp
enter
jmp
push
int3
test
or
push
sub
rcll
mov
adc
adc
adc
roll
mov
loop
add
fs
pop
lret
iret
jecxz
mov
rolb
seta
jmp
jl
mov
sbb
ret
mov
or
pushf
in
mov
or
arpl
inc
bound
xchg
popf
icebp
fildl
pop
and
sbb
stos
ja
or
pop
clc
sbb
sbb
xor
cmpsb
adc
cmp
pop
lds
ja
xchg
pop
mov
stos
xor
mov
jae
lret
push
maskmovq
divl
cmc
js
dec
mov
stc
push
cs
in
ret
push
lock
and
stos
int3
repnz
push
xchg
mov
push
pcmpgtb
insl
movsb
shrb
testb
push
repnz
out
dec
std
aaa
cmp
pop
ficoml
dec
sbbl
pop
lahf
mov
pusha
push
or
adc
add
icebp
jl
xchg
sbb
popf
jno
inc
in
xchg
lahf
nop
imul
lret
lds
and
xor
aam
mov
xchg
jno
inc
dec
jo
push
mov
cwtl
call
fsubrl
int
push
sbb
inc
ret
push
and
jge
xor
repnz
addr16
xchg
lock
pop
mov
cwtl
les
and
js
mov
lea
adc
leave
fxch
pop
and
or
dec
sbb
in
jmp
mov
lds
xchg
cmc
push
in
ret
gs
lock
push
or
gs
and
pop
enter
pop
stos
push
js
mov
fldcw
fildll
adc
lds
mov
add
push
in
mov
sub
fsts
lahf
out
ss
mov
les
sbb
mov
push
mov
jecxz
mov
loope
fldl
aam
sub
stc
cmc
xchg
mov
mov
jne
rcrb
xchg
or
pop
fdivs
push
lahf
test
add
cs
push
pop
inc
xchg
adcl
cmp
test
xlat
int3
iret
pop
add
jl
outsb
inc
dec
mov
jbe
je
mov
loopne
leave
jl
sub
loope
int
pushf
movb
aaa
popa
add
mov
inc
cld
and
rcll
por
mov
cmp
dec
pusha
adc
inc
iret
sbb
sbb
push
push
add
jg
and
hlt
test
sbb
mov
xchg
das
adc
subl
int3
push
lret
ret
mov
or
sbb
jge
sub
cld
sbb
and
cltd
idiv
adc
mov
data16
cwtl
xlat
jae
jle
cltd
and
mov
or
and
pushf
mov
push
outsl
dec
insl
cmpsl
adc
sub
imul
mov
ret
jmp
nop
inc
lock
push
pop
cld
cmp
cwtl
loop
lahf
jl
jns
insl
and
popf
cli
fwait
pop
mov
inc
mov
and
fisubrs
aaa
pop
and
push
or
jg
sti
cmp
push
int
jb
jl
and
das
stc
adc
or
incb
jnp
rcll
jo
ds
mov
sub
mov
xor
in
cmp
sbb
out
std
js
hlt
in
mov
lret
mov
ret
or
loopne
movsb
cmpsb
inc
bound
adc
leave
stc
pop
daa
cli
sub
int3
pop
jb
imul
jne
lods
mov
pop
and
jp
fnstsw
dec
into
push
popa
into
sahf
popf
ss
adc
insb
bound
adc
rorb
mov
jo
dec
jg
lods
sub
xor
inc
inc
add
das
adc
imul
cmpsb
jecxz
mov
insb
add
or
ret
or
mov
sub
inc
dec
test
addr16
xor
sbb
cmpsb
or
mov
andl
or
pop
sub
fnsave
scas
lock
mov
sub
dec
dec
mov
lods
dec
pop
test
or
xchg
push
cmp
sti
insl
adc
mov
rorl
jmp
dec
test
imul
test
lea
int3
jl
inc
jl
xor
mov
mov
fdivrl
fwait
lret
fs
dec
into
adc
in
adc
cmpsl
rcl
rolb
mov
je
add
loopne
push
sbb
inc
nop
adc
movsb
sahf
cmp
xor
movsb
mov
lds
cmp
in
mov
jmp
or
jne,pt
sbb
pop
inc
dec
hlt
ret
ret
shlb
mov
sub
in
das
inc
cmp
iret
or
add
push
hlt
and
std
daa
out
sub
xchg
dec
jo
add
in
mov
addr16
xchg
ret
xchg
dec
push
dec
or
cld
je
rcll
lret
cmp
pop
sti
dec
xchg
pop
adc
push
jns
rclb
pop
xor
and
xchg
ss
repnz
gs
sbb
push
repz
and
pop
movsl
mov
jo
xor
push
pop
arpl
mov
xchg
mov
roll
push
imul
mov
pop
inc
mov
aad
xchg
mov
push
cmpsb
mov
jae
sub
cwtl
and
mov
movsl
jle
cmp
jp
popf
gs
pop
push
xchg
xor
fists
sbb
ud1
aad
sbb
or
daa
sti
mov
subb
dec
inc
stc
fiadds
mov
jns
ljmp
xchg
insl
push
cli
cmp
shlw
xchg
and
outsb
xor
adc
rcr
jae
push
sub
mov
cld
adc
mov
into
es
sub
mov
mov
movsb
lea
sbb
pop
mov
sbb
popf
mov
les
and
mov
push
jg
and
icebp
nop
or
pop
ret
clc
sbb
mov
mov
icebp
pop
pop
test
inc
sbb
sub
or
push
adcb
dec
jle
sahf
leave
or
jp
sti
test
jae
test
mov
xchg
push
or
insl
popa
pop
and
push
jmp
jbe
or
mov
jno
xor
jge
mov
pop
faddl
push
mov
nop
aad
hlt
mov
jne
fimull
out
and
inc
jae
and
xchg
jo
out
fucomi
add
std
out
out
sarb
fldcw
jp
pushf
fucomi
pop
lcall
sub
push
mov
fwait
xor
xchg
pop
jbe
add
and
loope
sbbb
push
and
in
dec
lea
fsts
push
ret
pop
sbb
call
mov
pop
add
inc
mov
nop
jp
sti
pop
sahf
or
or
arpl
push
in
jo
rcl
add
xchg
xor
fwait
lret
sub
sahf
jno
xchg
lret
and
pop
js
jmp
adc
and
add
fisubl
test
scas
arpl
sti
pop
xor
out
jmp
ljmp
sahf
outsb
add
mov
mov
ss
jmp
xor
movsb
out
and
xchg
pop
repz
sub
je
or
xchg
adc
repnz
pop
sbb
cmp
or
dec
xor
mov
mov
int3
pop
or
data16
ret
inc
fistpl
or
out
loope
cmp
test
cld
outsb
rorl
cmp
xchg
and
std
jne
mov
adc
dec
cmpsl
out
or
ljmp
cmc
jmp
add
mov
fldt
in
test
sahf
das
fisttpll
pop
imul
pop
add
cmp
lea
idivl
cmp
out
lcall
adc
or
jle
or
adc
add
jne
xchg
lea
bound
dec
jne
xor
cld
cmp
scas
out
pop
jl
cmp
xchg
in
sub
or
les
repz
ficomps
cs
mull
cmp
xchg
cmp
repnz
xor
cmpsb
sbb
nop
or
xchg
ret
pop
jae
dec
or
ss
mov
outsl
add
fldt
xchg
xchg
push
sbb
jg
jg
nop
jnp
jge
jnp
daa
shlb
clc
rcrb
and
and
mov
popa
fisttpl
test
xchg
inc
sub
cmp
lods
dec
addr16
cmp
sbb
and
jo
cmpsb
rolb
pop
lods
rorb
adc
or
imul
push
mov
mov
ss
cmp
push
jne
inc
nop
add
dec
stos
lcall
and
js
les
mov
int
mov
xchg
ret
inc
in
rcrl
in
push
adc
xchg
call
xor
lcall
test
jns
imul
ficompl
inc
in
xchg
iret
ret
mov
pusha
pop
scas
xor
pxor
adc
add
sub
jle
pop
mov
add
mov
movsb
sbbb
ficoms
addl
push
jne
jnp
stos
jbe
and
adcl
repz
pop
addb
data16
pop
fisubrs
push
mov
fprem1
jnp
js
cmc
loope
in
aam
push
xor
addr16
jmp
mov
xor
jb
mov
imul
xor
cmpsb
adc
dec
ret
incl
cmc
inc
daa
movsl
and
out
jae
dec
faddl
mov
pusha
lods
stos
test
fimuls
inc
push
add
pop
xchg
or
movsl
push
adc
roll
stc
pop
cmp
xchg
sub
lahf
cmpxchg
or
jne
je
leave
xchg
jg
sub
sub
nop
stc
cltd
xchg
call
icebp
mov
sbb
pop
test
jge
imul
data16
mov
jbe
mov
jbe
xchg
push
in
je
aad
jae
inc
xorl
mov
mov
pop
das
push
sti
lret
xor
cwtl
cmp
mov
shlb
push
or
fadds
inc
data16
mov
rcll
in
push
mov
add
ret
sarb
push
and
in
lods
cs
int
xchg
sub
lret
mov
sarb
pop
or
xor
pop
nop
insb
stos
adc
ret
insb
call
leave
mov
int
lahf
sbb
sbb
pop
xlat
sub
and
orb
out
es
js
xchg
int
cmpsl
xorb
enter
test
xor
mov
dec
or
aam
xchg
mov
mov
orb
sub
jnp
cld
dec
jnp
xor
decl
ljmp
mov
dec
jmp
outsl
mov
mov
inc
add
rcr
push
jo
lret
push
fldt
aad
lods
dec
xchg
jmp
sub
sbb
jmp
cld
aam
push
xchg
cwtl
fcom
inc
dec
shll
cmp
icebp
test
outsl
les
jno
or
popa
mov
nop
stos
ljmp
mov
fs
or
adc
int3
add
adc
stc
push
or
fisttpll
xchg
cltd
mov
mov
dec
addr16
mov
cwtl
xor
mov
in
es
ret
mov
cmc
mov
and
mov
js
adc
insb
fadds
pop
repz
arpl
jp
outsb
mov
adc
in
outsl
fisttpl
xchg
xchg
mov
jns
repnz
adc
mov
mov
rcrb
cmp
fiadds
test
push
inc
and
ljmp
popf
bound
cmp
pop
rcrb
or
pop
jmp
push
mov
test
push
mov
hlt
movsl
ljmp
xchg
mov
in
cld
cmpsl
xor
data16
inc
lds
cltd
mov
jge
stos
sub
pop
or
sbb
popf
xchg
jmp
inc
pop
mov
pop
jo
outsl
int
movsb
iret
das
fmuls
mull
vpcmov
daa
push
push
out
add
lret
subl
push
pop
ds
mov
and
repnz
mov
mov
push
in
inc
stos
add
push
cmp
xor
out
sbbl
in
mov
jno
lock
pop
push
enter
outsl
test
mov
push
pop
push
enter
sbb
shlb
hlt
mov
scas
data16
and
popl
call
ss
sahf
push
cmp
inc
shl
loope
mov
enter
xlat
cld
test
jecxz
fldt
sbb
pushf
enter
loopne
cmpsb
js
mov
jle
lds
loope
dec
fimuls
movsl
fprem
bsf
test
fildl
mov
aad
cwtl
sub
outsb
mov
out
faddl
loopne
push
pop
call
or
dec
ja
fisubs
icebp
jp
push
or
mov
iret
sahf
ja
sub
mov
xchg
cmp
mov
sbb
pushf
push
cltd
insl
cmp
clc
icebp
pushl
mov
or
popa
add
add
in
add
push
push
fildll
insb
xchg
in
in
outsb
jne
push
out
stc
mov
jp
repz
mov
rclb
mov
std
mov
iret
test
mov
sub
jno
lahf
inc
cmpsl
das
aad
test
loope
push
aad
enter
and
inc
push
push
fstpt
gs
pusha
scas
aas
xor
sbb
and
cld
idivl
popa
xchg
pop
testb
les
fs
rolb
jbe
jbe
rcll
daa
inc
enter
push
push
subl
je
push
dec
or
mov
pop
xchg
insb
push
outsl
adcl
jmp
mov
aaa
test
push
orps
ds
ja
and
or
push
int3
lock
pop
cmpsb
out
push
pop
ret
mov
adc
ja
dec
out
int3
xchg
dec
xchg
or
int
adc
mov
inc
push
aam
push
insb
mov
push
pop
adc
add
inc
dec
lret
pop
repz
imul
push
pop
jae
mov
xchg
mov
mov
loop
les
and
ret
mov
dec
or
std
test
inc
sbb
add
loope
std
dec
or
stos
inc
movsl
mov
add
fmull
stc
stc
fsubrs
inc
push
lods
jp
mov
lcall
repz
insb
push
mov
or
xor
mov
mov
std
in
test
divb
in
mov
mov
in
dec
int3
in
insl
imul
push
jmp
testb
sub
pusha
lahf
lret
dec
mov
adc
lret
sub
pop
xchg
nop
lcall
sbb
sub
and
push
insl
movsb
aas
mov
xchg
mov
in
inc
jns
jl
fidivs
fwait
lock
jbe
fcoms
mov
mov
adc
int3
sarl
lock
lods
in
popa
sbb
mov
mov
mov
aam
mov
ja
adc
sub
int
add
mov
loopne
or
cmp
mov
cmp
or
in
cltd
fwait
cs
push
aaa
push
adc
xabort
rclb
xchg
out
sub
rorb
mov
mul
xlat
aaa
int3
repz
ret
xor
loope
adc
sahf
test
jbe
je
dec
addb
loope
out
jle
clc
fmuls
pushf
out
ficoml
dec
inc
nop
scas
xor
sbb
pop
cmpsb
outsb
xor
pushf
cmp
push
xchg
ja
push
pop
lods
int
int3
aam
inc
lea
addl
repz
shll
push
fwait
xor
movsb
xchg
negb
sbb
adc
xchg
pusha
pop
add
inc
iret
jns
bound
fildll
popa
lret
iret
popa
ss
fdivr
rolb
lret
cwtl
jb
mov
pushf
pop
add
es
loop
loope
cmp
test
adc
cmpsl
pushf
jg
mov
or
inc
pop
imul
ds
leave
nop
xor
imul
jl
jle
cwtl
xchg
add
divb
cwtl
jmp
push
loop
push
adc
pusha
push
fstpt
out
add
imul
jae
scas
and
lock
movsl
push
add
int3
loop
xchg
repnz
inc
cli
lods
test
bnd
jno
sbb
cmp
mov
or
xchg
in
flds
jecxz
bound
sub
push
pushf
push
dec
pop
in
fwait
jecxz
and
ds
pop
stos
ret
inc
xorl
pop
loop
aaa
xor
adc
xchg
lahf
notl
ret
sbb
pusha
cld
cmp
sub
fisttps
fldenv
push
test
scas
rolb
mov
pop
pop
mov
ret
dec
fstl
xchg
cmp
or
imul
jb
push
jl
hlt
call
popa
sbb
inc
xor
pop
inc
call
cmp
mov
int3
roll
push
dec
mov
sti
cld
cltd
xchg
ss
add
scas
mov
out
dec
in
adc
mov
lds
out
sbb
xor
mov
push
lods
stc
jp
cmp
mov
cmp
pop
popf
vpsubusw
icebp
jae
pop
mov
dec
in
inc
jo
fadds
pop
add
leave
out
int
outsb
mov
arpl
int
xchg
jb
popf
lret
dec
es
lret
and
sbb
or
repz
daa
push
jo
lods
adc
adc
mov
cmp
stos
out
lret
cwtl
ret
icebp
in
push
jnp
adcb
mov
enter
xchg
mov
or
xor
das
fisttpll
xchg
cmpl
repz
mov
pop
inc
hlt
fcomps
adc
fxch
mov
sbb
inc
or
cwtl
imul
xor
sbb
loopne
jo
push
dec
add
push
cli
inc
lret
sub
in
jne
sbb
dec
dec
roll
lods
sub
pop
adc
mov
sub
test
pop
mov
stc
leave
xor
call
adc
cld
test
das
jns
and
test
ret
jne
lret
test
mov
cmp
in
lds
int
sub
dec
xor
jo
adc
stos
xchg
ja
lcall
mov
lret
cmpl
jo
cmp
sti
js
ror
cmp
xchg
xchg
sbb
cmpsb
notb
lds
ja
rcrb
dec
mov
or
shll
pop
or
pop
inc
into
loop
mov
pop
cmp
or
push
lahf
movsl
or
push
sub
sub
mov
mov
mov
cli
in
jmp
mov
adc
sub
pop
mov
pop
or
in
out
out
jle
mov
cmp
push
add
mov
insb
test
cmp
adc
or
or
pushf
dec
push
jmp
xor
push
movsb
xor
push
mov
lcall
push
fistpl
or
jp
shll
dec
es
pop
mov
inc
mov
or
mov
arpl
pop
aas
fisttpl
or
add
loope
mov
cmpsb
xchg
pop
jne
jne
mov
lock
mov
vrcpps
jb
mov
negl
pop
lret
xchg
pop
jo
scas
xchg
pop
push
sub
sbb
lea
test
movsb
dec
into
push
jle
mov
and
pop
std
push
cltd
negl
pop
jne
jo
adc
and
ret
mov
cmp
test
aas
inc
movzwl
jmp
lds
fwait
mov
nop
adc
pusha
dec
adcb
jecxz
testb
push
cmp
jo
aaa
xchg
and
insb
clc
mov
mov
sub
imul
mov
out
mov
scas
xor
aas
jle
movsb
loope
andl
outsb
push
divl
jmp
shrb
add
enter
cmp
mov
imul
leave
lods
xchg
lcall
push
push
adc
lds
cwtl
icebp
imul
cmp
mov
push
call
test
shlb
icebp
inc
popa
rol
fwait
mov
jmp
mov
xchg
negb
addr16
fwait
push
out
pop
scas
fucompp
push
shr
jne
cmp
mov
ffreep
repnz
call
fs
sbb
mov
jns
fwait
cmp
scas
add
xchg
js
inc
xchg
inc
aas
hlt
cmp
inc
test
jno
sbb
mov
stos
or
dec
xchg
push
jl
mov
pusha
xor
push
add
push
and
mov
push
lods
mov
or
jbe
pop
pop
imul
test
popf
cwtl
test
lds
jmp
les
and
shlb
jo
xchg
int
mov
out
pop
sub
cwtl
mov
dec
or
inc
pop
lahf
cmpsb
movsb
loop
aaa
pop
stc
adc
mov
jae
loopne
movsl
xchg
pop
ret
push
std
xor
hlt
or
ja
rcrb
insb
ds
jne
dec
sarb
dec
or
pusha
subl
add
test
sub
cli
jno
jl
adc
into
lret
stos
and
or
rolb
mov
aam
into
je
mov
sarl
fbld
push
mov
shl
mov
inc
and
stc
lret
movsb
sbb
mov
cmpsl
mov
xor
dec
xchg
push
icebp
mov
jnp
adcb
fcmovne
lret
inc
sub
mov
pop
cmp
jae
xchg
popa
data16
dec
mov
js
pop
in
push
inc
push
push
jge,pt
arpl
xor
xor
loope
fnstcw
add
iret
mov
and
addb
into
icebp
and
adc
mov
int3
or
jae
mov
cmp
clc
inc
cmp
cmc
out
jle
inc
mov
faddp
push
and
lods
nop
cwtl
loopne
aaa
add
sti
cli
mov
pushf
pop
daa
jmp
test
popf
nop
fisttpll
sub
orl
pop
lods
out
es
adc
dec
scas
push
out
mov
in
sarl
jmp
mov
or
in
call
cmp
int3
test
insl
int3
gs
mov
cmp
inc
jnp
sbb
jae
mov
js
cld
cld
mov
inc
push
call
rcl
inc
adc
stc
sbb
mov
das
iret
mov
pop
lea
leave
inc
ret
sub
nop
mov
repz
pop
jb
rcl
in
gs
in
xchg
adc
mov
in
xchg
inc
pop
inc
mov
cli
mov
xchg
adc
mov
adc
pop
xor
cmp
sar
dec
sti
mov
fistps
xlat
xchg
jmp
sub
dec
fs
push
sbb
enter
adcl
pop
icebp
sub
fucom
and
xor
jne
lea
and
adc
sub
xorb
fisttps
ss
imul
push
cmp
xor
fs
adc
fdivr
sub
xchg
push
sub
in
dec
inc
pop
sub
out
loopne
in
cmc
adc
cmp
mov
aas
cmpsb
leave
in
xchg
cmp
sub
out
xchg
es
dec
aaa
test
jge
addr16
fwait
lea
loope
shlb
adc
jnp
fdivp
mov
test
inc
inc
pusha
pushf
sub
leave
repnz
mov
sbb
mov
or
into
fisttpl
mov
cwtl
movsl
or
push
cmp
pop
fadd
es
addr16
pop
sbb
sub
fwait
leave
je
push
out
js
mov
xorl
mov
pop
int
loopne
or
sti
stos
test
andw
sbb
jmp
sbb
testl
cmp
push
cs
jle
fmul
arpl
lock
je
sbb
fldl
mulb
leave
repz
iret
sahf
push
sbb
sbb
push
mov
iret
sarb
dec
jae
flds
sahf
aam
psubsb
jmp
in
ljmp
inc
or
jbe
push
add
ljmp
xchg
mov
xchg
movsl
aaa
in
std
xor
cld
mov
hlt
inc
mov
push
jmp
and
stc
or
or
mov
nop
jns
imul
add
jle
int
inc
ds
xor
inc
daa
jle
adc
dec
movsb
subb
cmp
mov
add
insb
push
add
pop
popa
cmp
pop
add
dec
fucomi
dec
sbb
push
loopne
repz
rclb
fs
stos
dec
stc
sub
push
mov
xchg
lret
cmp
fldcw
std
jl
xchg
addr16
mov
push
push
fdivrs
int3
mov
or
pop
lock
sbb
adc
in
fdivs
cwtl
xchg
rcl
xor
xor
out
and
clc
call
inc
movsb
jnp
cmp
dec
cmp
fstl
vpsubb
push
inc
test
fdivrl
sbb
insb
xchg
fists
popa
add
aad
sbb
add
in
fimull
insb
loopne
and
out
jle
lret
out
and
pusha
jbe
dec
xor
mov
ss
xchg
fstl
test
xchg
xor
scas
fs
inc
out
ljmp
enter
pop
adc
dec
xchg
sub
daa
jnp
jmp
clc
jbe
push
cmc
add
cmp
and
mov
sbb
ja
cmpl
pop
lods
cmc
mov
lcall
sbb
fcompl
int
int
adc
or
pop
or
es
sbb
adc
inc
mov
push
cli
ljmp
rcrl
aam
sbb
sub
loopne
dec
mov
int
and
in
daa
cltd
out
fsubr
enter
jnp
leave
sbb
movsb
push
lods
cmpsl
pushf
mov
rclb
mov
stos
mov
push
dec
pop
adc
jl
xchg
jnp
and
dec
mov
dec
fidivl
pushf
xor
lock
call
sub
dec
mov
jg
and
cli
enter
repz
in
das
push
les
xchg
cmp
push
pushf
inc
mov
lods
clc
mov
ds
xchg
adc
rorb
ret
adc
stc
inc
enter
or
adc
mov
cmp
mov
and
nop
xchg
shll
or
stos
enter
pusha
mov
fnstcw
inc
leave
dec
cld
loopne
pop
push
and
lahf
cmp
push
aas
and
push
pop
xchg
jns
pop
mov
sti
push
cmc
or
leave
sbb
inc
xchg
add
jmp
dec
out
cli
nop
into
ja
popf
hlt
arpl
scas
mov
sub
mov
fsts
popa
in
add
sti
pop
bound
inc
dec
dec
mov
sub
gs
dec
imul
inc
jg
pop
cmp
hlt
addr16
mov
imul
mov
int3
fstl
lahf
movsl
in
sbb
push
or
mov
lds
movsb
adc
into
pop
mov
sbb
ss
and
loop
adc
aad
push
out
push
leave
test
out
fs
lea
subl
test
fwait
xchg
xor
xor
pop
cmp
mov
arpl
das
sarb
or
mov
mov
cmpsb
jmp
lcall
pop
xor
fidivs
jl
test
mov
or
call
popa
and
mov
dec
test
daa
nop
mov
mov
into
adc
fisttpl
jae
fisubl
add
jnp
xor
mov
dec
stc
enter
jmp
sbbl
call
jle
das
mov
fldl
das
shlb
mov
push
cs
jns
jbe
mov
addr16
dec
cmp
fs
lock
cwtl
dec
push
add
fdiv
add
pop
lods
mov
pop
inc
dec
out
pop
cmpsb
bndstx
leave
push
push
fwait
sarl
iret
or
adc
addr16
mov
add
and
das
pop
xor
cmp
negl
stos
adc
aam
dec
ljmp
xor
mov
leave
ja
aam
lods
in
cmp
aad
jne
pop
mov
pop
and
fiaddl
cltd
push
notl
mov
gs
bswap
aam
sub
adc
ljmp
cmp
mov
jnp
and
pop
cltd
ja
and
ror
xchg
outsl
xchg
inc
lods
mov
mov
mov
imul
inc
aaa
xchg
jle
insl
push
mov
jb
adc
pop
movl
insb
mov
aas
sub
stos
inc
in
sbb
or
and
pop
popf
int
fadd
push
in
inc
mov
xchg
mov
pop
cmp
das
mov
xchg
out
cmp
movsl
cmp
sub
mov
lcall
push
mov
dec
loopne
xorb
ja
adc
adc
cmc
add
mov
jmp
push
cwtl
testb
loopne
mov
js
sub
mov
mov
or
or
adcl
sbb
dec
clc
mov
push
and
cmp
and
insb
xor
and
rcrl
dec
xchg
xchg
outsl
in
mov
push
sbb
push
push
xchg
imul
sbb
arpl
hlt
aad
pop
test
je
das
pop
fs
orb
dec
mov
fildll
inc
push
cmp
sbb
adc
cltd
loop
addb
sub
test
jmp
rolb
push
cmp
push
aam
mov
jbe
addr16
xchg
xor
xor
jne
mov
bound
hlt
cmpsl
cs
movsl
lock
dec
pop
lret
jle
incb
push
mov
push
xchg
fsubs
jl
push
jne
fsubl
pop
pop
mov
lcall
stos
arpl
mov
inc
mov
mov
cmp
loop
pop
and
dec
sub
push
div
lret
inc
dec
fisubrs
xchg
and
cs
repz
loop
jne
fwait
jb
sbb
inc
push
xor
lret
dec
loope
inc
int
jno
or
lcall
fwait
xchg
push
mov
and
scas
sarb
mov
shrl
std
fnsave
int3
jg
push
jmp
sub
jo
xchg
push
fistps
push
mov
pop
lea
out
fisubs
mov
cmp
sti
fldcw
fstl
testb
popa
jmp
ljmp
adc
loope
jl
cmp
xor
cmp
add
jns
cli
cld
sub
lret
out
adc
aaa
cmpsl
fimull
add
rorb
push
pop
les
cmc
mov
bound
and
sub
or
fdivs
pop
in
out
int
dec
and
mov
push
test
push
js
sbb
sub
jnp
insb
mov
daa
xchg
jae
cmpsl
fists
loop
idivb
daa
jp
pushf
sbb
sti
dec
std
and
jl
dec
dec
fdivs
scas
repnz
add
push
aaa
inc
jno
cmp
xchg
jp
adc
movsl
sub
and
imul
xchg
push
jne
and
fwait
add
inc
inc
inc
stos
mov
push
xor
inc
shlb
adcb
adc
adc
inc
ds
jno
lea
dec
jmp
lods
int3
cmp
jmp
mov
je
or
out
ljmp
mov
loope
bound
lret
pop
lret
iret
cli
sahf
movsl
insl
iret
outsl
sub
inc
mov
out
fsubrs
xor
cmpsb
je
testl
sbb
js
rcr
xchg
inc
imul
jb
add
pop
push
cmp
push
xchg
pop
pop
add
lods
sbb
test
mov
aas
pop
mov
adc
stos
fnstsw
adcb
pop
in
shrb
cwtl
add
adc
xor
xchg
xor
popa
ja
mov
fldenv
jle
loopne
xor
and
mov
jl
xchg
jmp
leave
mov
cld
out
enter
inc
cmp
fsubrl
mov
jns
arpl
pop
sbb
xor
add
adc
call
mov
leave
add
inc
xchg
mov
lcall
aas
mov
mov
add
pusha
push
lods
mov
iret
dec
xchg
sub
xchg
jo
mov
jg
mov
xor
dec
scas
inc
xor
outsb
cmpsl
xchg
mov
jecxz
jo
mov
rclb
pop
stos
inc
ror
daa
sub
gs
add
adc
jo
aaa
lcall
in
enter
adc
out
mov
loopne
shll
into
xchg
outsb
jle
leave
nop
in
push
sbb
or
cmpl
cmpsb
sti
fidivrl
and
imul
inc
popa
test
imul
pop
mov
dec
xchg
rcll
and
shlb
lahf
les
out
div
jno
and
jnp
adc
cmpsl
push
sbb
leave
inc
insb
mov
lea
push
outsl
in
mov
adc
jne
mov
sahf
sbb
sub
sub
and
fldcw
call
fisttpl
jmp
loopne
loope
into
jo
lret
jb
xchg
lahf
popf
sbb
mov
stc
mov
cmp
jge
addr16
mov
jbe
addr16
cmpsb
adc
sbbb
in
testl
lahf
sub
and
lods
cld
int3
sub
insb
push
rcrl
mov
mov
es
jae
push
cmp
mov
push
inc
lods
nop
xlat
pop
mov
adc
xor
mov
dec
imul
fs
cltd
xor
jbe
stos
cmp
push
scas
ds
sti
movsb
ds
movsb
insb
xchg
mov
imul
sub
add
iret
sbb
idiv
std
mov
adc
sub
add
xlat
daa
or
mov
xchg
dec
loop
add
aas
pusha
fiaddl
stc
popf
dec
push
clc
or
sbb
add
mov
inc
xor
sarb
adc
mov
inc
jnp
jns
jmp
xor
xchg
dec
fs
andnps
sub
fs
mov
sbb
sub
ljmp
jl
add
push
shr
jnp
aam
es
xchg
lock
inc
sub
mov
push
fsts
jo
mov
xlat
jae
inc
or
or
inc
pop
push
jl
xor
cmc
xor
mov
or
mov
mov
loope
mov
loop
dec
fwait
jl
insb
dec
and
mov
test
je
lods
ret
decl
mov
and
scas
sti
push
jne
add
mov
push
jmp
sbb
lea
pop
jecxz
sub
jmp
adc
in
insl
sbb
dec
enter
cmp
xchg
leave
adc
or
adc
fidivl
leave
pusha
sub
add
imul
shlb
in
dec
cmp
inc
jbe
jle
ja
sti
ds
jne
push
arpl
into
rcrl
mov
xchg
pop
fabs
dec
test
stos
fimull
pop
sar
flds
aaa
into
push
jl
dec
subb
pop
loopne
sti
call
or
jno
lock
mov
ret
sti
adc
dec
inc
mov
add
xchg
addr16
xorb
filds
dec
adc
lcall
mov
imul
lods
loope
push
cmp
lods
hlt
xchg
adc
imul
mov
dec
and
fmul
or
and
out
pop
or
rolb
inc
jo
test
pop
cli
mov
mov
mov
ds
dec
sbb
enter
rcll
movsb
push
pushf
stc
jae
push
es
jg
jo
cltd
mov
pop
rolb
rorl
lcall
outsl
lret
loope,pt
cmp
jne
adc
dec
and
jo
out
call
out
fs
lahf
test
lea
dec
ja
imul
sbb
and
push
scas
and
mov
jp
jb
push
frstor
xor
sbb
test
push
push
lahf
mov
std
jecxz
enter
movsl
push
mov
aaa
lcall
xlat
rcll
push
popf
mov
jmp
fnstcw
pushf
rolb
movsb
jb
out
xlat
in
pop
xor
jle
fsub
cs
repnz
mov
sub
scas
cmp
sahf
out
lmsw
stos
adc
mov
add
stos
movsb
gs
mov
cmpsb
inc
cwtl
inc
dec
jne
push
addr16
inc
add
cmp
lock
mov
out
dec
xor
push
inc
cmp
mov
mov
mov
cmp
ret
dec
dec
insb
xor
mov
andl
nop
ljmp
test
jmp
pop
bound
and
inc
and
sub
imul
mov
addr16
aas
mov
rolb
sbb
mov
cmp
push
xchg
fldcw
popa
fnstcw
or
lcall
pop
adc
pop
push
test
push
or
movsb
lcall
pop
push
loope
xchg
pop
notb
mov
sbb
and
adc
mov
shlb
push
adc
mov
scas
mov
and
out
xchg
pushw
das
xor
out
mov
push
inc
mov
xchg
jb
jno
test
sarl
ret
dec
and
fbld
sub
push
fmull
lahf
lods
and
mov
inc
adc
cmpsb
int
cmp
xor
or
pop
dec
mov
shr
shr
adc
mov
xor
mov
mov
cli
xchg
pushf
out
dec
sub
add
xchg
sub
lret
fmuls
pop
shrb
dec
lahf
cmp
imul
inc
jecxz
inc
cltd
stos
test
xchg
pop
pop
cmp
dec
nop
sbb
jb
cmpsb
popf
dec
rcrb
int3
call
xlat
aaa
inc
mov
int3
bound
fsts
int3
out
mov
jns
scas
mov
sub
imul
pop
add
scas
pop
push
xchg
mov
jge
add
scas
and
add
jno
mov
lret
push
adc
or
lock
ret
or
pop
into
pop
push
and
push
jnp
cmp
add
inc
push
scas
and
adc
cwtl
pushfw
mov
jecxz
jl
out
inc
mov
push
xchg
or
je
cmp
pop
es
xor
movsb
push
stos
adc
pop
jecxz
pop
pop
mov
in
jmp
gs
cmc
outsb
out
push
das
mov
test
in
fldl
test
mov
sub
inc
lahf
add
fwait
or
fisttpll
mov
pop
scas
ljmp
test
std
push
inc
xchg
adc
dec
xchg
sub
loope
in
cmc
pop
adc
cmp
mov
scas
lods
jnp
fmull
add
inc
inc
ljmp
add
pop
popf
pop
daa
jle
push
mov
xorb
arpl
jmp
stos
push
lcall
or
inc
clc
add
cmp
insl
or
add
sbb
xchg
jl
jp
inc
inc
push
stc
mov
into
int
scas
add
jge
test
dec
insb
in
sti
xor
pushw
jmp
xchg
test
mov
imul
jecxz
dec
lods
cli
in
adc
aas
leave
cltd
aam
je
sbb
mov
add
xor
outsl
push
xor
ljmp
xor
adc
or
in
jmp
mov
mov
orl
out
sub
xchg
cmp
ficomps
cld
jp
scas
lds
sub
je
cli
sub
stos
movsb
jbe
pop
lds
mov
adc
popa
loope
adc
test
imul
daa
mov
stos
loope
push
xchg
cmp
mov
or
adc
cmpsb
sub
and
cwtl
xchg
fldcw
fisttps
std
pop
xchg
inc
jne
call
or
lcall
out
sub
cmp
mov
shl
cmpb
jo
in
inc
push
insl
std
incl
arpl
jae
dec
jno
cmp
test
xor
xchg
dec
xlat
es
jl
inc
xchg
mov
pushf
std
das
push
mov
sub
cmp
shrb
mov
dec
cmp
jmp
or
push
add
lock
scas
mov
add
cmpsl
fdivrl
ffreep
pop
push
mov
cmp
pop
xchg
jae
xchg
xchg
icebp
insl
jno
mov
movsb
xor
inc
lods
fwait
jmp
lods
lret
push
testb
int
rclb
cmp
lahf
aam
and
sbb
clc
cmp
pusha
adc
pushf
sub
pop
mov
shll
mov
insb
jbe
inc
mov
out
xchg
cmp
and
dec
insl
cmp
pop
clc
sti
sbb
cmp
das
fldcw
test
dec
fbld
andb
mov
add
mov
and
test
sbb
mov
pushf
lods
dec
imul
fsts
rcrl
fwait
push
aam
or
std
pop
stc
pop
repnz
add
cmp
sahf
mov
fwait
sar
pop
std
inc
dec
pop
lock
scas
stc
dec
div
pop
loopne
mov
inc
scas
jbe
inc
xchg
push
incb
in
adc
xchg
cli
jmp
and
sbbl
and
daa
idiv
sarb
push
adc
xchg
and
push
jb
cmp
or
mov
in
outsl
dec
in
pop
mov
rol
fwait
call
ret
sarb
jl
dec
pop
in
std
mov
lret
adc
xor
sub
lea
outsb
popf
mov
xor
mov
mov
bound
repnz
or
sub
inc
loop
fadds
push
mov
fisttpll
xchg
rorb
mov
push
sub
fildll
jp
rcr
add
stos
out
pop
mov
dec
and
aas
mov
cmp
inc
sti
ja
je
out
inc
jmp
int
in
or
shll
push
cmp
pop
shll
lret
sbb
adc
les
cltd
sbbb
add
test
push
shrb
adc
pop
insl
lds
and
test
pop
ja
add
imul
sub
imul
jl
lcall
pop
xchg
insb
mov
pop
cmp
aam
roll
stc
mov
or
add
sbb
cmpsb
jno
pop
pop
sub
mov
ss
in
popf
popf
or
or
cs
fidivl
or
adc
lds
test
popf
mov
adc
stos
pop
jne
and
xchg
push
inc
xlat
mov
imul
iret
cmc
xor
test
xchg
adc
push
jo
cmp
sti
aam
in
mov
ljmp
enter
cmpsl
popf
in
sbb
gs
adc
jecxz
fimuls
or
pusha
cmpsl
adc
fwait
dec
hlt
xchg
mov
xchg
fwait
mov
xor
and
test
mov
outsl
andl
daa
aam
fildll
inc
dec
notl
out
xor
pusha
imul
call
nop
adcb
xchg
insb
mov
pop
fisttps
sbb
sbb
push
or
cmc
jp
add
add
in
jo
adc
bound
mov
in
xchg
pop
xchg
push
jle
push
imul
roll
xchg
orb
test
mov
adc
popf
jns
mov
das
data16
jo
repz
les
pop
js
jb
cmpsl
leave
data16
and
dec
adc
testl
inc
bound
push
push
stos
out
and
dec
add
imul
sahf
out
pop
rorb
sub
add
test
fwait
cmp
fsubrs
dec
push
xchg
inc
std
enter
pop
and
cmp
pop
int3
and
pusha
loopne
push
inc
movsl
jp
repz
les
mov
jmp
push
lret
push
scas
xor
and
aaa
test
hlt
fstpl
jp
jo
lea
xchg
mov
adcl
cmp
and
mov
shlb
xchg
mov
icebp
mov
xchg
jle
dec
pop
cmp
cltd
repnz
mov
lret
out
divl
data16
sbb
or
push
mov
jmp
mov
and
push
pop
cltd
ss
dec
mov
loopne
ss
in
test
ja
jnp
movsb
insb
fbstp
dec
xor
adc
pop
sbb
mov
jge
lret
dec
mov
loope
dec
xchg
int3
movsl
insl
inc
xlat
pop
mov
mov
fidivs
push
jno
add
jg
and
jne
aaa
gs
fcoms
in
mov
push
loop
push
insb
jle
clc
rol
mov
das
pop
out
cmpl
push
or
in
or
xorb
push
push
lret
sti
out
les
dec
jb
adc
mov
cmp
jecxz
int
sub
lret
ret
cmp
jno
adc
mov
dec
mov
xchg
add
shll
dec
sbb
test
mov
add
or
pusha
mov
xchg
and
jecxz
aam
push
in
lahf
sahf
imul
stos
jne
pop
mov
jecxz
enter
pop
sbb
add
das
jnp
shll
adc
xor
out
cmc
shlb
iret
lahf
fimull
daa
push
mov
fistl
xchg
aad
push
push
pop
dec
adc
push
adc
xor
outsb
lds
inc
adc
fmull
mov
jecxz
add
movsb
in
je
js
iret
pop
push
imul
sbb
xor
imul
call
inc
jns
dec
mov
xor
push
mov
je
mov
pop
xlat
lods
rcrb
mov
dec
xor
ret
fldl
jno
adc
pcmpgtb
loope
mov
or
outsb
dec
mov
sbb
dec
xchg
push
in
and
aam
outsb
sbb
sbb
dec
popf
push
push
jbe
jne
inc
jl
xor
cmpb
mov
xor
and
cmpsl
fucom
xor
mov
jl
das
loop
sbb
cmpsb
ds
into
and
rolb
into
sahf
dec
mov
cmp
shrb
add
lods
adc
xchg
loope
adc
inc
ficomps
sub
pop
outsb
add
xor
stos
sbb
idivb
nop
addr16
sbb
add
pop
pushf
cmp
test
insl
jno
aam
adcl
push
lods
movsl
jae
int3
cmp
aas
out
mov
lock
push
cmpsb
stos
cli
and
push
call
scas
pop
fwait
mov
mov
outsb
adc
das
and
push
push
dec
loopne
ficoms
sbbb
popa
dec
into
aas
in
idiv
add
adcb
std
dec
inc
jb
cmp
mov
sbb
and
in
mov
lds
inc
push
jmp
outsl
sbb
daa
in
cmp
jne
jg
js
inc
popa
inc
fs
mov
aad
sub
dec
imul
sbb
fisttps
add
enter
push
fadds
sbb
fcomps
dec
daa
or
mov
cmp
mov
sub
push
push
mov
insl
pop
xchg
mov
mov
inc
and
dec
add
xlat
mov
pop
inc
push
mov
jmp
mov
jmp
lcall
jle
imul
fmul
stos
mov
mov
iret
enter
fldcw
dec
lock
inc
sub
aam
gs
stos
clc
rorl
ds
ds
push
fisttpl
je
repz
jg
scas
scas
sub
pop
sbb
imul
cltd
lods
imull
stos
gs
jb
add
dec
jecxz
in
cmp
sti
jl
std
and
or
ss
sti
push
int
push
sub
mov
mov
fnstsw
stos
cmp
aas
or
mull
jp
mov
enter
adc
negl
mov
std
xchg
inc
fdivrs
test
inc
outsb
or
or
cld
sbb
sub
clts
dec
fs
nop
dec
mov
push
into
inc
in
adc
lock
lea
push
xor
rolb
xor
and
pop
mov
out
addr16
and
sub
mov
iret
cmp
mov
scas
stos
inc
cld
popa
ret
push
dec
nop
jg
xor
xchg
mov
cmp
in
xor
outsl
inc
fs
cmp
orb
or
xor
fidivrs
inc
cltd
enter
jecxz
fdivrl
jbe
fiadds
xlat
popa
add
movsb
leave
mov
sahf
pop
cmp
fstpl
das
pop
cltd
sbb
ret
mov
jbe
mov
push
push
inc
fs
cmp
push
stc
push
out
pop
fs
and
mov
jecxz
cmp
pusha
loop
lret
push
mov
xchg
outsl
mov
scas
cs
sbb
sub
addr16
add
cmc
lock
or
push
push
adc
outsl
mov
xor
sub
push
jb
pop
mov
bnd
sub
inc
arpl
sub
cmp
adc
push
jb
push
lds
in
sahf
sbb
or
xchg
dec
inc
adc
sti
cmp
push
mov
and
hlt
xor
fcmovnu
xchg
roll
cmpb
and
out
ret
or
pop
sub
pop
ror
out
and
sahf
das
cltd
nop
jae
sbb
pop
test
push
sbb
adc
jo
pop
sbb
push
mov
dec
sbb
push
into
std
icebp
add
popa
add
xor
xchg
jmp
and
test
in
mov
cmp
out
popf
int
or
ret
add
adc
rcrb
jge
cmp
shlb
sbb
loop
or
add
cmp
outsl
push
sbb
fdivrs
icebp
mov
test
loope
cmp
fldt
xchg
xchg
and
inc
fdivs
jge,pt
mov
lcall
lock
jo
lahf
sub
shll
std
jmp
aad
rclb
pop
rcrl
adc
push
iret
pop
sub
push
mov
jge
movb
mov
scas
aam
icebp
sahf
lahf
mov
rol
xchg
mov
sti
dec
stc
imul
add
or
push
imul
nop
ret
movsl
jno
sarl
push
mov
push
cmc
es
push
and
ljmp
daa
scas
ljmp
es
cltd
lahf
cmc
mov
test
push
adc
hlt
mov
repz
or
dec
mov
adc
sbb
inc
jne
stos
jno
xor
sahf
aas
pop
or
loope
or
test
cmp
inc
push
into
aam
pusha
or
sub
add
inc
and
iret
in
dec
xor
and
add
in
adc
iret
test
inc
shll
push
out
pop
inc
ret
mov
fdivl
xchg
xor
adc
shlb
xchg
xor
loope
pop
lods
add
cmp
outsl
imulb
insb
out
cwtl
cmp
cld
mov
pop
sbb
mov
xchg
rol
ret
fbstp
stos
xor
mov
lock
dec
adc
ret
pop
mov
pop
jp
jmp
push
divb
shrl
mov
jecxz
fsubr
lret
xchg
push
stos
notl
insb
into
stos
popf
aas
push
or
and
dec
sub
fs
or
sub
mov
inc
jecxz
in
xchg
inc
jg
cmp
dec
mov
shlb
cmp
jae
scas
jl
xor
jecxz
jnp
lods
push
sub
ja
mov
push
xor
and
mov
jge
loopne
add
shll
xchg
js
pop
fldl
sub
ljmp
movsl
loopne
aam
hlt
cli
lret
scas
insl
cmp
sti
loope
sub
push
jp
pop
iret
adc
out
add
add
or
fs
xchg
jno
sub
lcall
imul
mov
ljmp
add
and
xor
jno
clc
mov
or
mov
shlb
pop
pop
pop
std
in
and
xchg
iret
ss
mov
mov
imul
pop
inc
sub
jg
sub
insl
mov
daa
inc
xchg
test
shrb
fisubs
and
fsubs
xchg
mov
cs
xor
mov
xchg
or
out
fdivrs
in
fldcw
dec
add
stos
shrb
xor
push
mov
and
fadd
xor
push
push
mov
sub
jle
popf
push
imul
int3
jne
cli
mov
in
test
push
cltd
test
outsl
lahf
push
or
inc
or
hlt
int
in
sub
gs
lcall
xchg
add
stos
pop
mov
outsl
mov
jmp
lock
pop
daa
cmpsl
ss
outsl
add
jne
int3
inc
je
mov
jnp
mov
fwait
loop
dec
iret
mov
sahf
mov
dec
lea
jno
shll
fwait
stos
lret
andl
ficomps
ljmp
or
fdivrp
push
fcomps
js
sub
scas
cmc
nop
std
push
les
dec
dec
jg
lea
cli
sbb
cmc
shlb
ljmp
pop
mov
in
sbb
andb
dec
or
in
lea
das
shll
push
push
js
ja
in
or
scas
fwait
mov
lods
out
push
test
xchg
dec
or
mov
and
or
push
dec
repz
mov
add
cmp
nop
push
cmp
popf
outsl
testl
adcl
push
popf
and
cltd
int3
jg
add
cld
inc
cmp
imul
sub
inc
xor
bound
leave
cmp
mov
push
sub
cmpsl
into
enter
inc
push
movsb
sub
out
lock
lcall
cmpsl
jb
mov
insb
sar
repnz
mov
and
mov
bound
ja
push
ret
mov
iret
adc
xchg
faddl
scas
in
jge
lds
mov
outsl
lahf
xchg
add
pop
arpl
or
mov
xchg
in
shrl
push
inc
ficoms
adc
leave
aad
or
cwtl
cmp
cltd
jg
in
imul
mov
into
insl
add
hlt
dec
mov
inc
cmp
in
push
push
xor
scas
mov
sub
dec
dec
popa
cmp
ja
lods
fwait
adc
fsub
push
mov
aad
xchg
mov
in
xor
jns
cmpsb
jg
movsl
pop
and
jecxz
lcall
pop
inc
je
repz
push
xchg
xor
imul
sub
dec
mov
out
pusha
mov
push
cmpsb
test
push
mov
cld
mov
push
int
xchg
mov
cli
mov
inc
cli
test
fwait
ja
and
and
nop
cltd
call
out
cs
lock
shll
shlb
js
push
add
mov
jae
sbb
lret
dec
mov
sub
or
xchg
push
xchg
or
sbb
scas
das
insl
or
lods
leave
or
fadds
decb
popl
add
and
loop
incb
test
nop
in
dec
xor
push
pcmpgtw
push
insl
and
push
pop
sahf
dec
jo
sbb
pop
adc
std
push
add
es
addr16
gs
mov
pop
rcl
mov
lock
fs
aas
loope
mov
scas
pop
test
andb
cmp
jl
imul
stos
push
subl
clc
enter
inc
jl
cmp
lea
push
lock
data16
xchg
pop
sbb
int
call
mov
lods
push
fisttps
daa
mov
les
push
mov
push
mov
in
scas
jno
pop
mov
cmpsl
out
pushl
in
cmp
iret
insl
sub
push
insb
iret
lahf
imul
mov
loop
ja
push
aaa
ljmp
inc
pop
dec
inc
iret
xorb
filds
aam
dec
push
std
push
ficompl
jecxz
fs
in
fsub
cwtl
sahf
jo
xchg
pop
add
fcoml
movsl
arpl
inc
xlat
jmp
xchg
mov
sbb
rol
loop
daa
pusha
fs
nop
jbe
call
fistl
inc
cs
xor
pop
clc
push
and
mov
jmp
xchg
aas
fldenv
int3
jp
adc
pop
add
insb
pop
sbbl
and
adc
cmp
jae
lret
in
fsts
inc
cmp
outsl
dec
push
xchg
push
push
stos
cli
aaa
pop
mov
fisubrs
cwtl
stos
dec
or
std
or
mov
popf
sbb
add
xor
rcr
ja
test
push
push
in
mov
add
les
xchg
mov
mov
or
push
jge
ss
push
or
cmp
push
shrb
xchg
mov
or
mov
pop
popa
lds
int3
xor
inc
cltd
adc
mov
mov
shrb
lcall
fmull
test
lret
sub
jle
lcall
repz
mov
jns
sub
pop
or
daa
xor
popw
repz
cltd
mov
xor
pushf
mov
je
dec
data16
fwait
inc
adc
cmp
mov
imul
mov
cmpsb
pop
icebp
add
jecxz
cmp
mov
and
call
mov
ret
cmp
jno
lret
dec
fstp
mov
fxch
add
add
xchg
adc
lods
test
popf
outsl
pop
push
jecxz
mov
outsb
xchg
fcoms
pop
shll
inc
mov
push
mov
repnz
mov
lret
or
out
adc
adc
cmp
popf
imul
or
sti
or
xchg
movsb
adc
repnz
repnz
jns
fcoml
push
idivl
fsubr
adc
mov
push
mov
js
xor
arpl
inc
outsl
fcomps
and
clc
sahf
popf
or
jecxz
sbb
and
sub
loop
xchg
aad
bound
pop
stc
test
cld
cmpsl
mov
mov
in
rcl
mov
out
fisttpll
cld
ss
or
xor
xchg
jmp
mov
sbb
push
hlt
mov
cvtps2pi
pop
enter
push
aaa
fildl
and
mov
xlat
sub
mov
push
sbb
sbb
inc
mov
insl
xorb
fildll
mov
test
xor
inc
adc
popa
inc
mov
repnz
lcall
fadds
in
test
or
imul
out
outsl
fimull
push
imul
sbb
pusha
push
sbb
bound
lods
sbb
fstps
cmp
jbe
sbb
outsl
cmp
adc
pop
mov
cmp
nop
imul
test
mov
mov
movsb
jo
mov
sub
add
fwait
cmc
filds
ffreep
mov
jge
popa
cmp
push
je
mov
push
shrl
mov
movsb
fwait
inc
clc
pop
pop
div
jne
dec
jns
add
in
xchg
int
iret
pop
xchg
bnd
je
ja
movb
ds
enter
int
and
xor
pop
arpl
aam
sub
cmp
xchg
mov
push
inc
stos
imul
scas
aas
xchg
btc
and
adc
mov
sti
inc
lods
hlt
ds
pusha
jge
lods
subl
call
sbb
cs
xor
out
xor
test
or
dec
sub
xchg
jns
or
xor
lret
pusha
icebp
lahf
repnz
sbb
in
push
dec
sub
or
into
push
lock
insl
mov
arpl
jb
lock
lret
push
fdivl
lahf
loopne
or
sbb
or
or
dec
mov
xor
outsb
mov
push
push
push
lock
daa
xor
and
lcall
stc
jnp
jle
and
pushf
subb
cwtl
aad
push
jno
pusha
ret
roll
xor
mov
mov
subl
cwtl
sbb
aaa
fs
mov
aad
rorb
mov
lock
pop
push
pop
out
adc
jge
test
out
outsl
flds
shrl
push
mov
enter
dec
loopne
test
xlat
loop
mov
add
mov
aaa
sbb
cld
out
xor
jno
sub
or
fs
lret
mov
std
mov
popf
adc
aam
das
roll
cmpsl
insl
push
int3
rcrl
imul
popa
pop
out
xor
adc
stc
push
jmp
mov
dec
inc
mov
add
xchg
shrl
jmp
jg
imul
push
repnz
aam
fmuls
fldt
mov
ljmp
fsubs
in
mov
cmc
pop
pop
pop
rol
pop
pop
lods
adc
inc
jl
rolb
inc
or
inc
mov
jmp
test
jge
cwtl
and
sbb
cmp
cs
decl
cmc
mov
cwtl
icebp
jne
ret
repnz
dec
push
jo
fsubl
out
sarl
cmp
lret
lods
sbb
fldt
sar
dec
sbb
xchg
pop
mov
sbb
dec
mov
rcr
cli
sbb
adc
push
adc
shrb
xchg
adc
dec
xchg
mov
cmc
xor
notl
push
lahf
pop
and
and
fnstenv
test
in
xor
pop
cmpb
jmp
dec
ljmp
into
sbb
pop
arpl
xchg
xchg
sbb
in
popa
popf
push
pop
outsb
fnsave
call
xor
xor
push
dec
out
pop
in
jne
stc
push
std
jl
xchg
int
fcmove
test
jg
xchg
xor
add
ret
cld
push
mov
adc
outsb
popa
repnz
fiaddl
imul
nop
jno
in
ja
cmp
cs
in
pop
iret
adc
jb
aas
scas
mov
pop
sbb
sub
jmp
cmpsl
arpl
jg
loopne
adc
sbb
add
inc
std
rorl
ret
jo
pop
addr16
sbb
mov
fistl
es
addb
push
mov
notb
xlat
mov
mov
sub
pop
jecxz
inc
and
push
xlat
mov
inc
cmp
scas
sbb
and
movsb
sbb
in
cmp
orl
out
iret
hlt
and
icebp
dec
jnp
push
roll
lret
xchg
shll
mov
nop
cmpsb
les
add
sbb
cmpsl
les
cmp
sarb
cmp
bound
mov
cli
push
pop
or
dec
xchg
jns
mov
lds
add
jg
push
lahf
imul
cmpsl
test
and
aaa
mov
push
fiaddl
jmp
mov
mov
ret
repnz
ljmp
iret
mov
pop
dec
movsl
fstl
repnz
jno
out
push
adc
pop
inc
sbb
add
test
and
jae
mov
int3
rorb
jnp
add
dec
movsb
mov
mov
outsb
sub
and
jecxz
out
push
hlt
cmp
insb
in
inc
mov
inc
cmc
add
inc
dec
lods
mov
cwtl
pop
jg
enter
lcallw
negb
insb
dec
pop
mov
xchg
loopne
aad
mov
xor
cmp
and
pop
sub
mov
or
enter
clc
pop
mov
jo
push
mull
or
shll
and
test
dec
pop
jne
sub
mov
std
xor
movsb
jl
loop
scas
lock
cmp
inc
dec
ljmp
dec
sti
cmp
mov
jl
loop
into
out
ret
xor
pop
xchg
lahf
loope
mov
mov
out
insl
jno
cmpsl
cltd
inc
pop
fidivrl
iret
xor
add
pop
or
fistl
mov
pop
jmp
mov
movsl
sbb
in
popf
pop
pop
push
mov
and
int3
jo
xor
and
sbb
scas
add
dec
jo
int3
incl
fisubrs
dec
repz
rcrb
mov
popf
mov
sbbl
pop
jne
test
or
jl
pop
jmp
pop
fisttpll
ljmp
ret
xchg
dec
cmpsl
sarl
adcb
push
movsl
sub
out
fdivrs
pusha
mov
push
mov
xor
or
nop
cmp
dec
shll
push
cmp
push
je
jno
insl
push
sub
jbe
imul
lods
je
xor
shl
jae
sub
call
and
testl
and
mov
stc
fs
pushf
mul
call
dec
rcrb
mov
lea
sti
aad
ret
testb
inc
xor
dec
jb
jns
das
pop
pushf
sub
int
inc
cltd
jg
inc
loope
repz
cli
es
dec
xchg
ret
shrb
stc
mov
arpl
fnstsw
inc
cmpsb
nop
out
dec
mov
push
rcr
psadbw
mov
es
lahf
pusha
outsb
test
shl
mov
push
fbld
mov
xchg
xor
xor
ja
mov
pop
sub
stos
jb
mov
xchg
aaa
std
dec
xchg
inc
sub
jb
stos
sub
inc
xor
sbb
lock
fwait
adc
test
les
add
lds
jle
mov
adc
inc
andl
paddusb
lods
add
mov
mov
popw
fisubs
or
inc
scas
mov
mov
jb
cmp
gs
dec
mov
dec
xorl
xor
mov
test
add
jl
and
aam
inc
jp
xchg
incl
ret
push
lcall
adc
xchg
stos
or
lock
or
loopne
outsl
jno
jns
pushf
ds
stos
js
sbb
pusha
xor
mov
jmp
int3
cltd
sbb
imull
adc
push
sahf
lahf
pushf
test
or
xorb
cmp
push
into
sahf
xchg
cmc
ds
nop
fldl
adc
and
fadd
cmp
lods
dec
mov
aam
jnp
fidivl
xor
cmpb
xor
ret
xchg
and
movsl
dec
jno
inc
sub
jge
pop
lahf
add
loopne
push
ret
cmp
daa
inc
testb
adc
movsb
mov
or
in
arpl
push
mov
dec
ljmp
mov
leave
cli
ss
rcl
std
pop
sub
inc
arpl
shr
or
test
loope
fistpll
loopne
movsl
jnp
cmpsb
das
pop
mov
mov
cmp
cs
test
data16
ret
and
std
out
xchg
bnd
stos
je
xor
cmp
imul
in
inc
jno
push
clc
ds
xor
xor
add
push
dec
ds
mov
sbb
mov
dec
xor
arpl
inc
mov
push
lahf
nop
jmp
les
loopne
je
sbb
adc
icebp
mov
mov
test
sbb
cmp
test
pop
sarl
out
sbb
jbe
pop
aaa
jg
imul
add
jl
jo
shlb
push
sbb
call
daa
sub
sbb
sub
push
scas
xor
mov
jnp
mov
push
push
das
sub
jo
movsb
dec
mov
outsb
sbb
call
xor
icebp
jb
lret
mov
imul
outsl
xor
in
icebp
sub
cltd
sti
mov
stos
xchg
insl
and
cmpsl
mov
mov
cmp
orb
mov
in
cmp
mov
scas
jae
adcb
jle
pop
scas
push
xor
addr16
cmp
push
ss
lock
jmp
jecxz
jmp
mov
mov
jp
ja
rclb
mov
in
jne
in
inc
rclb
pushf
xor
push
mov
mov
test
fistpll
mov
add
mov
lahf
int3
dec
addr16
adc
lahf
outsl
jle
dec
cmp
loope
pop
lods
xor
push
rorb
pop
or
pop
push
xchg
fs
jp
adc
mov
push
xor
pop
in
adcb
pushf
mov
fstl
loop
lret
scas
in
test
fidivl
sbb
daa
push
pop
sub
stc
lcall
xor
imul
aad
int
and
std
jecxz
out
cwtl
sbb
lea
xchg
or
or
testb
in
test
aad
jp
shl
pop
into
and
jg
or
mov
jae
mov
shll
or
andb
clc
pop
inc
stos
sub
pop
test
out
xchg
dec
ss
dec
push
sbb
xchg
sbb
or
ja
orl
mov
sbbb
sub
int3
scas
adc
sub
inc
cld
pop
imul
and
sbb
inc
pop
prefetch
or
out
and
in
sub
fistpll
xor
es
arpl
xor
jae
pop
cmp
add
pop
negl
dec
add
shl
fidivl
aas
cmc
sub
loop
dec
cmp
mov
rorb
jno
lcall
pop
rclb
pop
aas
call
aas
jl
sbb
xchg
shl
dec
dec
cmp
pop
xchg
test
jno
ja
lcall
sub
add
popf
and
mov
shl
xor
xchg
jge
add
cmp
push
loope
shrb
ljmp
mov
add
out
jae
lret
cltd
pop
mov
mov
jl
xchg
loope
imul
sbb
loopne
sbb
int3
jl
popaw
inc
adc
divl
xor
das
incl
inc
into
leave
dec
mov
std
decl
sbb
xor
movsb
push
inc
ja
mov
rolb
adc
xchg
mov
lds
or
pusha
pop
add
mov
dec
int3
adc
std
icebp
push
jae
jle
jge
sub
jno
add
aaa
mov
pusha
hlt
xchg
fs
arpl
daa
andl
out
stos
bound
mov
std
stos
into
xchg
int3
pop
or
mov
sbb
mull
out
push
dec
icebp
stc
sti
in
or
pop
in
add
rcl
ds
out
sbb
in
popf
cwtl
mov
mov
jmp
mov
sub
xchg
add
jmp
mov
fucom
je
jae
into
cltd
jg
pushf
cli
popf
movsb
je
in
mov
subb
ficomps
fisubl
popa
or
or
out
mov
es
mov
loope
add
jo
dec
aad
sbb
xchg
lods
nop
inc
sbb
inc
adc
int
mov
mov
lahf
dec
xor
and
fbstp
push
jnp
xorl
mov
push
mov
push
dec
xor
pop
jae
adc
in
imul
xor
jnp
std
mov
push
adc
stc
xchg
push
mov
dec
cltd
stc
into
int
mov
mov
pop
aad
mov
in
inc
or
mov
xor
in
fstl
or
stos
mov
out
outsb
test
fsubl
roll
paddusw
mov
mov
into
mov
cmp
mov
dec
jmp
out
lcall
inc
test
fwait
out
cmp
rsm
pop
push
dec
movl
push
adc
push
jge
pop
jmp
dec
lret
add
outsl
push
cld
pop
jp
push
sub
dec
jno
outsl
cmpl
sbb
dec
pop
dec
xchg
jno
in
pop
pop
ret
aas
scas
xchg
add
xor
scas
mov
xor
lret
jg
mov
in
aas
insb
pop
das
xor
aaa
ss
cmpsl
add
cwtl
cmc
cltd
pop
ficoms
pop
lock
lds
lret
and
push
adc
aad
cmp
xchg
xor
jbe
loope
lret
and
stc
imul
pop
pop
mov
int3
out
push
faddl
sti
shrb
jne
or
mov
mov
out
cmpsb
outsb
lcall
mov
repz
imul
sub
movsl
mov
enter
loop
cld
xchg
add
stc
add
imul
sbb
ja
mov
popf
inc
jne
out
leave
xor
mov
add
push
mov
cltd
sub
movsb
pop
or
sbb
pop
insl
cmpsb
pop
dec
fxch
sub
inc
push
push
popf
jb
pushf
movsl
fldenv
pop
cmpsl
loopne
jmp
adc
out
dec
add
ja
mov
cwtl
test
mov
add
cmp
bound
ret
and
les
les
or
mov
out
pop
jge
adcl
enter
arpl
popa
stc
movsl
and
clc
jge
stos
and
movsl
aad
cmc
shl
call
fsub
shll
data16
dec
cmp
push
and
sti
arpl
les
dec
sub
dec
pop
sub
es
xor
inc
aas
iretw
loope
dec
inc
dec
push
mov
and
mov
add
shll
shl
sub
sbb
subl
sbbb
and
mov
pop
jae
ret
loope
push
sti
pop
in
push
addr16
sti
loopne
into
aas
jle
adc
lds
ljmp
fiadds
mov
int3
ret
inc
jb
sbb
idivl
addr16
fs
fsubrp
xchg
sbb
sbb
adc
imul
mov
jle
adc
pop
adc
jge
jg
mov
lds
or
mov
lahf
mov
lods
jne
repz
xchg
in
repz
jne
push
movb
movsb
pop
mov
in
cltd
rcrb
cwtl
repz
mulb
inc
mov
push
adc
sbb
sub
sbb
mov
xlat
xchg
dec
mov
mov
insb
jb
mov
sbb
sbb
push
xchg
sub
cltd
out
xchg
push
enter
cwtl
dec
das
jge
xchg
jns
fwait
add
cwtl
insl
rorb
lcall
pop
jb
mov
clc
fnstcw
jbe
xlat
inc
jb
mov
pop
sub
push
loop
ljmp
mov
jno
pop
int3
es
fnsave
xchg
sbb
or
adc
mov
popl
push
shll
inc
loop
pusha
mov
push
repz
push
sahf
ss
popf
push
dec
xor
outsl
ret
mov
pop
cmp
mov
lcall
dec
xchg
xchg
leave
sub
loop
mov
mov
mov
adc
fldenv
mov
mov
lret
add
jg
shrl
cmpb
int
jno
adc
jg
xlat
mov
add
rorl
inc
inc
rcl
pop
push
in
add
and
call
test
stos
pop
sub
cltd
movsl
dec
fldenv
push
jmp
ss
out
mov
bound
div
adc
adc
push
xchg
cmp
and
ljmp
aas
xchg
sub
sbb
push
insl
adc
loop
daa
adc
out
leave
pop
mov
mov
and
dec
inc
jmp
mov
pcmpgtw
adc
bound
lret
jp
hlt
pop
loopne
xchg
enter
pop
adcb
sti
incb
cmpsl
mov
pusha
popl
cmp
loopne
inc
add
sub
dec
add
sbb
jp
mov
mov
ljmp
lea
push
call
pushf
outsl
mov
pop
std
ja
dec
adc
dec
mov
pop
in
scas
fsubrl
mov
pop
in
fs
movsl
jecxz
imul
sbbl
xchg
push
gs
fwait
add
inc
adcl
das
jg
insb
xor
pop
in
mov
push
add
cmovae
push
mov
aaa
jno
pusha
insb
xchg
test
out
dec
fs
cmp
xchg
lods
mov
pusha
lock
divb
fdivs
cld
cmp
mov
mov
xor
or
push
aas
popf
cwtl
pop
adc
lods
out
inc
push
out
or
ret
ret
mov
mov
imulb
xchg
lods
cmp
aaa
or
stos
mov
jne
fld
mov
dec
add
cltd
push
jns
add
xchg
outsl
push
mov
inc
inc
outsb
rcl
push
addr16
mov
lods
test
lret
lock
mov
aad
mov
enter
insb
or
fimuls
divb
gs
shr
xor
and
dec
icebp
imul
cmp
mov
cmpl
incb
xor
and
sub
mov
add
pop
in
cmp
mov
xchg
bnd
sbb
and
jns
cmp
subl
loop
orl
call
test
mov
hlt
cmpl
dec
dec
sar
jnp
mov
dec
mov
imul
pushf
leave
mov
mov
int
or
dec
bound
mov
cmpl
jns
dec
gs
inc
dec
pop
pop
repnz
popf
icebp
pop
bound
popf
inc
jg
and
dec
jle
dec
into
aaa
faddp
das
xchg
test
pop
test
jge
adc
push
mov
push
jp
jne
pop
sub
sbb
dec
lds
add
addr16
pusha
dec
xchg
addb
movsl
enter
mov
and
push
jo
int
in
xchg
add
mov
or
insb
dec
mov
jne
inc
stos
and
cmp
imul
adc
lcall
decb
sbbl
jle
es
int3
mov
jo
imul
popf
cmp
inc
cmp
jl
pop
arpl
and
adc
jl
shr
into
es
notl
scas
fstpl
jns
mov
adc
mov
aam
pop
nop
mov
scas
aas
out
dec
dec
nop
fdivrl
push
sbb
jecxz
sbbb
push
xchg
pop
xor
out
ret
jecxz
test
ss
lret
or
pop
stc
test
ja
ret
es
mov
mov
lret
or
ljmp
repz
mov
call
movsb
ret
jmp
jecxz
icebp
idivb
outsb
and
mov
adc
arpl
addb
insl
es
xchg
test
jb
stos
cmp
sahf
mov
cmp
lods
pop
leave
into
test
repnz
adc
int
fcompl
je
cmc
scas
outsl
sbb
push
mov
out
dec
gs
push
pop
cld
push
bt
push
fcom
push
int
pop
inc
dec
and
jno
out
fsts
cmpsb
mov
xchg
lahf
jne
shlb
xchg
inc
inc
push
mov
pextrw
stos
push
enter
push
push
call
clc
or
daa
enter
add
sub
jmp
cli
mov
imul
arpl
pushf
jl
mov
into
addr16
and
lds
or
les
into
repnz
mov
out
cli
in
insb
mov
ror
inc
pop
bound
lods
cwtl
push
es
jno
mov
dec
adc
push
cmp
and
sub
cmp
mov
cmp
aas
jl
mov
xchg
daa
dec
xor
ljmp
ret
push
jge
in
mov
andl
imulb
sub
ret
scas
test
mov
pop
outsl
lods
inc
dec
loopne
xchg
jae
mov
push
jae
push
adc
mov
movsb
xchg
ret
xchg
lock
adc
push
aas
dec
je
scas
in
adc
adc
dec
xchg
dec
shrb
je
push
adc
or
sbb
mov
xor
aaa
xor
data16
ficomps
mov
ret
push
jns
jmp
jne
pop
sub
scas
jne
push
pop
dec
out
imul
pop
pop
push
xchg
shlb
sub
das
mov
into
sbb
adc
sub
fbstp
mov
movsb
lods
jno
imul
les
pop
cmp
das
fst
push
or
cmpsl
or
sbb
adc
cmp
push
cmc
inc
push
aam
mov
sbb
fimuls
std
enter
sub
pop
jl
mov
sub
xchg
scas
push
adc
inc
xchg
sub
aas
imul
xchg
std
jmp
mov
es
xchg
pop
or
adc
lock
ret
lds
fdivrl
mov
out
ja
jns
dec
aaa
mov
loope
or
mov
dec
xor
lret
mov
iret
sub
mov
stos
in
adcb
movsb
push
add
repz
sbb
mov
or
gs
adc
inc
orb
repz
out
leave
fadd
test
mov
cmp
xor
hlt
mov
out
jbe
xchg
rolb
stos
outsl
into
aas
pop
pop
leave
in
addr16
outsb
jne
and
mov
jo
xchg
cmp
jnp
js
and
mov
adc
iret
out
fs
pop
iret
xchg
and
inc
push
mov
dec
xchg
mov
outsl
mov
scas
dec
fcomi
push
orl
jmp
cli
clc
repz
cmp
xor
inc
mov
xor
clc
push
fldt
lret
adc
out
lock
movsb
sbb
ljmp
sbb
xchg
push
call
mov
out
pop
mov
test
pop
jmp
pushf
arpl
pxor
jp
ss
lahf
iret
aam
mulb
jle
or
add
into
stc
lahf
xor
pop
cmpsl
cmpsb
testl
lret
or
dec
pop
fs
xchg
cmc
cmp
cmpl
das
adc
cmp
jbe
fwait
popa
mov
dec
andl
mov
jg
dec
jae
loopne
adc
xor
push
add
cmpsb
mov
loopne
jmp
mov
aad
cmpsl
sbb
pop
es
xor
cmp
dec
daa
push
fbstp
shlb
mov
int
xorb
outsl
dec
lcall
js
fadds
in
dec
xorb
xor
jo
cli
in
cmc
or
fs
mov
in
sub
btc
adc
xor
std
xchg
in
mov
fcompl
mov
sub
into
add
pop
push
xchg
dec
inc
push
xor
lods
lret
in
push
nop
ds
mov
fcmovne
in
push
add
fdivrl
test
leave
sbb
je
add
std
adc
xor
dec
repnz
push
pop
jno
test
lock
leave
mov
popa
and
pop
repz
loopne,pn
pop
xor
adc
inc
jno
and
cmp
push
add
jmp
fists
fsub
inc
negl
rep
jge
add
sub
lret
out
roll
aas
mov
rcll
or
sub
mov
xchg
incl
push
fimull
rorb
add
dec
cli
roll
mov
int
loope
ret
xchg
sbb
icebp
push
sbb
pushf
lret
mov
loopne
lock
cmp
dec
sub
inc
cmpxchg
cmpb
loop
xor
push
ret
sub
sarb
pop
stos
pop
dec
push
inc
lret
enter
xchg
pop
push
adc
mov
das
pop
je
mov
jle
jne
jl
in
inc
je
sahf
and
mov
test
mov
mov
nop
mov
mov
xor
jecxz
aas
mov
xchg
rclb
arpl
xchg
popa
mov
les
lods
js
mov
sub
cmp
rclb
jl
sarl
mov
xchg
xor
add
es
sbb
aad
cmp
psubusw
imul
mov
cmp
sub
iret
pushl
cmp
cwtl
xchg
mov
or
iret
shrb
into
iret
lcall
add
insl
or
test
xchg
ret
rol
pusha
test
lret
jge
xor
rolb
sub
inc
sbb
sub
xchg
cwtl
movsl
sbb
rcrb
sbb
mov
or
cmp
xchg
mov
and
pop
or
dec
test
scas
jecxz
push
add
pmaddwd
movsb
jecxz
das
inc
ss
call
mov
and
aam
add
push
and
add
into
jo
cmp
cmc
adc
scas
push
dec
add
cmp
andb
test
mov
es
xchg
imul
fscale
nop
scas
outsl
and
aam
test
sub
xor
mov
sub
in
xchg
mov
lods
mov
or
sub
sbb
sbb
daa
mov
inc
sub
sbb
fcomps
sbb
mov
and
int3
xor
js
loop
ficoms
cmp
fsts
in
in
push
outsl
jae
push
pop
imul
sbbb
insl
sbb
in
inc
adc
sbb
js
and
aaa
push
outsl
rcrb
cmc
push
dec
enter
in
and
mov
neg
lock
sub
in
sub
xor
jmp
jecxz
push
stos
mov
cwtl
pop
ljmp
sub
push
or
jno
xchg
gs
divl
mov
out
push
cmpb
subb
mov
cwtl
mov
stc
fsubrl
or
ficoms
subb
xchg
cmpsb
fisttpl
jbe
mov
insl
fcoms
add
dec
fdivrs
sahf
inc
dec
xor
int3
mov
shl
jo
fcomps
jo
es
notb
dec
mov
mov
sbb
lods
sbb
push
sti
in
push
pop
mov
push
jno
cmp
sar
ficoml
sbb
dec
cli
fs
push
pop
repz
fldl
ss
pop
cld
and
xor
add
add
and
lahf
xorl
push
jl
mov
adc
loop
inc
aaa
sbb
ss
inc
in
rorl
xor
rcll
xchg
loopne
and
inc
sbb
lea
pop
or
hlt
js
bound
mov
ds
in
icebp
arpl
out
xchg
aas
sti
repz
pushl
mov
sub
lock
lret
sub
mov
insl
fucomp
jecxz
pop
cs
je
cmp
jae
mov
pop
xchg
fnstenv
sub
hlt
push
outsb
pop
jmp
xor
shl
sbb
sbb
sarb
je
sbb
mov
dec
push
mov
outsb
and
and
mov
in
mov
push
pop
dec
loope
jecxz
orb
mov
in
jns
and
shl
xor
lea
dec
repnz
cmp
cli
scas
mov
mov
xchg
push
loopne
inc
or
insl
ret
or
clc
cs
into
rolb
arpl
test
add
sbb
sbb
popf
push
xchg
shlb
or
pop
setnp
mov
lahf
or
iret
jg
xchg
in
adc
jbe
and
addr16
movsb
cld
cwtl
pushf
add
bound
out
call
iret
xchg
ljmp
sub
xor
push
xchg
jg
cmpsb
in
stc
sbb
cld
xchg
lods
or
push
movups
dec
jno
adc
pop
test
jle
fists
pop
sahf
ficompl
xchg
fwait
dec
mov
push
push
jmp
sub
lret
adc
insl
mov
add
jmp
sbb
inc
scas
in
adc
imul
iret
xchg
cltd
pop
lea
insb
inc
pop
stos
cli
outsl
scas
inc
and
popl
in
cmpsl
cmp
lds
movsb
stos
inc
add
out
ja
hlt
je
jns
adc
movlps
xchg
dec
popl
sti
popf
pop
inc
inc
scas
sub
jae
mov
pop
cmc
stos
mov
scas
mov
pop
jo
sbb
rclb
sub
ljmp
loop
adc
mulb
cld
das
add
mov
movsl
repnz
push
inc
push
test
pushf
pop
test
adc
push
xlat
dec
stos
dec
cli
jecxz
pop
fistl
sbb
out
cli
or
orb
mov
fistpll
inc
repz
adc
push
hlt
adcb
lcall
or
in
pop
jg
cmp
mov
mov
call
push
sbb
xchg
inc
jbe
cmp
jecxz
ret
jb
data16
shll
or
cld
cmc
test
adc
or
testb
add
xchg
cmp
cmpsb
or
dec
and
ljmp
push
out
movsl
jns
into
lock
dec
and
dec
jmp
imull
das
mov
and
pop
and
es
outsb
mov
xor
dec
aaa
outsb
int3
cmp
pop
push
into
lods
fildl
data16
xchg
adc
cwtl
jge
cmp
call
sbb
shlb
jbe
xchg
push
jmp
loop
stos
pop
adc
loop
fistpll
mov
mov
cltd
enter
sti
or
ret
lock
inc
dec
dec
std
lret
cltd
test
push
in
into
iret
jbe
int3
jge
aam
sbb
hlt
cld
dec
lock
out
movsb
lods
fucomp
mov
sub
scas
cmp
push
test
and
jae
das
sbb
sub
jge
mov
pop
pop
mov
stc
scas
or
fdivrs
cmp
clc
les
cmpb
js
mov
inc
lock
adc
ret
mov
std
push
cmpsl
inc
xorb
stc
and
dec
idiv
jb
and
xor
mov
ficomps
hlt
fildll
pop
xor
jns
inc
repnz
jnp
ds
dec
arpl
pop
jl
js
push
pop
mov
push
cmp
mov
inc
dec
stc
out
adc
repz
adc
or
or
add
and
mov
das
pop
je
mov
fmuls
cmp
cmp
mov
pop
fdivr
cmp
fs
inc
adc
cwtl
mov
in
push
sub
dec
jns
faddl
xchg
pop
imulb
cli
out
mov
pop
pushf
andl
mov
cmp
insb
cmpsb
test
and
or
xchg
fidivl
out
movsl
cmpsb
loope
insb
and
shrb
jle
aam
pushf
in
addr16
sbb
lcall
jle
push
lock
push
pop
mov
repnz
pop
cmpsl
cmc
lods
inc
xor
cli
loopne
sbb
repnz
lds
leave
mov
outsl
andl
dec
les
cld
test
mov
roll
aaa
sbb
fidivrl
clc
cmp
rorl
cld
movsl
add
popf
inc
mov
and
or
xor
bnd
les
int3
push
cwtl
push
cltd
xchg
pop
cmp
mov
mov
fidivrl
pop
xchg
add
push
cmp
orl
add
ljmp
call
sbb
mov
mov
xorl
popf
sbbb
inc
mov
sbb
arpl
adc
or
ficoms
mov
lahf
mov
inc
cmc
bswap
jbe
sbb
cli
dec
jge
rorb
xchg
fucomip
sbb
je
test
cwtl
add
daa
inc
jmp
or
adc
js
out
fsts
sub
sahf
mov
mov
push
repz
cmpb
scas
das
shrb
outsb
mov
push
cmp
repnz
xor
sbb
divps
jns
les
movsl
mov
shrl
adc
cmp
jnp
sub
repz
sbb
mov
mov
rorl
fsubr
shl
mov
mov
pop
enter
inc
mov
dec
imul
or
push
xchg
inc
push
ljmp
pop
inc
rcrl
lret
pop
int
test
fisubrs
ret
or
mov
ret
lods
mov
push
daa
adc
pop
nop
lahf
mov
aas
push
jbe
test
jbe
jbe
xorl
cltd
bound
fldt
push
push
cltd
add
xchg
mov
dec
imul
add
and
cli
dec
jge
mov
fbstp
jnp
pop
dec
mov
int
nop
mov
push
stos
negb
and
cmp
push
adc
cmpb
and
lret
pop
jnp
ret
dec
mov
sbb
cmpsb
lahf
jge
xor
popf
adc
inc
push
push
push
cwtl
mov
mov
xchg
nop
insl
pop
lret
lcall
sbbb
mov
sbb
mov
test
ljmp
mov
arpl
jo
inc
add
test
ja
sub
sahf
ds
sahf
stos
fmuls
add
mov
mov
push
jp
cs
aam
pop
adc
push
in
inc
mov
lods
shll
addr16
fidivrl
fstpt
pop
xchg
inc
imul
push
insb
sbb
xchg
int
sub
add
leave
dec
aam
pop
sub
cld
les
dec
sub
jge
lret
or
dec
mov
test
orb
lea
jae
js
sbb
pop
dec
idivb
cmc
dec
sub
enter
xchg
inc
in
int
inc
sbb
mov
lods
shrb
clc
test
sub
popf
mov
push
push
insl
or
pop
jg
xchg
jmp
les
repz
pop
out
or
enter
mov
idivb
aas
jp
sbb
jne
loopne
call
dec
out
fs
lods
mov
mov
aas
in
jge
bound
mov
xor
lock
mov
cmc
ja
mov
dec
adc
push
jne
pop
outsb
push
dec
sub
mov
imul
jb
movsb
hlt
push
sub
insb
negl
mov
jl
adc
pop
and
aas
aaa
stc
lahf
xchg
pop
insb
sbbl
pop
sub
icebp
cmp
icebp
cmp
or
lcall
dec
notb
jbe
push
ret
aaa
xorb
dec
enter
jle
sub
xor
test
stos
sbb
std
inc
call
xchg
bound
inc
idivb
mov
pop
push
cltd
aaa
mov
xlat
pop
xor
and
jo
cld
shrl
rclb
sbb
jns
dec
call
sbb
and
push
les
add
nop
aas
test
or
movsb
mov
inc
pop
ss
repnz
in
pop
xor
xor
and
insb
mov
xlat
jecxz
mov
cmp
mov
fisttps
decb
dec
ss
mov
dec
subb
test
lea
gs
add
sub
jns
sbb
add
push
shrl
mov
sbb
or
adc
fistpl
push
sbb
lods
mov
dec
sbb
test
sub
inc
aad
notl
notl
mov
mov
xchg
mov
imul
clc
or
test
jl
xor
or
rcl
sbbl
cli
movsb
fwait
cmpsb
les
shl
sub
mov
mov
testl
shll
pop
xor
xchg
xlat
es
push
push
addl
mov
sbb
add
xchg
mov
dec
or
dec
clc
jle
nop
call
fwait
mov
iret
nop
test
cmpsl
fisubs
inc
mov
cmpsl
adc
push
or
into
mov
push
push
jnp
outsl
in
jno
mov
push
pop
dec
shr
sbb
xchg
mov
out
lcall
and
or
or
dec
iret
mov
jg
repnz
xorl
aad
in
lret
xor
lret
cltd
jo
shll
hlt
push
or
dec
pop
or
pusha
push
lock
je
push
pop
adc
dec
call
push
sti
jge
or
push
cwtl
stc
sbb
in
mov
lret
lods
pushf
jecxz
push
dec
pop
xorb
mov
add
and
xor
push
aam
fdivr
jmp
aad
lods
fwait
jae
neg
pop
loope
mov
adc
in
add
or
ss
out
push
or
loopne
loope
push
jae
push
mov
orb
adc
test
inc
mov
sub
popf
push
sub
lods
mov
mov
push
mov
test
sahf
movsb
dec
lret
and
lahf
mov
fcomps
push
or
imul
dec
stos
lods
sub
and
movl
inc
and
mov
imulb
mov
cmp
push
adc
sub
pop
jmp
xor
movsl
add
dec
jb
dec
mov
sbb
pop
daa
ficompl
mov
ss
int3
in
dec
testl
jp
mov
lea
fwait
popa
pusha
mov
scas
mov
pop
cld
and
push
mov
jecxz
mov
xor
fsts
mov
sub
mov
mov
inc
mov
pop
lea
pop
jmp
ret
sub
inc
hlt
sub
mov
lea
mov
insl
nop
cmp
and
fdiv
mov
nop
shl
out
call
xor
mov
push
pop
and
mov
fldt
fisubrs
cltd
pusha
push
test
mov
jb
orb
pop
sub
fs
xor
sbb
xchg
push
outsl
lcall
sbb
mov
mov
ljmp
imul
ja
hlt
fs
pop
cwtl
sbb
inc
nop
fwait
lock
iretw
es
sub
dec
mov
push
cwtl
cs
jnp
std
lret
shrl
jns
inc
sarb
imul
in
jo
sbb
jae
lods
jmp
xlat
push
sub
inc
mov
loopne
cwtl
cmp
jno
xchg
cmp
ja
push
inc
cs
jmp
inc
jge
cmp
mov
dec
pop
repz
push
fidivl
les
lret
dec
in
mov
cltd
out
lds
icebp
add
push
vpxor
iret
jl
sbb
in
xchg
fabs
mov
and
mov
mov
jae
pop
jno
jno
inc
cltd
sbb
sbb
stos
sbb
movsl
jle
sbb
cltd
dec
fsub
fcomip
fadds
stos
inc
mov
push
adc
out
push
jmp
xchg
dec
xor
pop
adc
sbb
ret
inc
loopne
lds
insb
sar
inc
ret
pusha
mov
xor
xchg
jl
inc
xor
mov
mov
pop
xchg
mov
imul
sahf
loopne
mov
dec
int3
bound
push
mov
mov
les
mov
aaa
mov
push
test
iret
seto
fdivrl
notb
xchg
aaa
shrl
cltd
jge
nop
xor
xor
and
and
ret
push
lods
xchg
or
mov
and
push
loop
jmp
adc
mov
dec
outsl
call
cmp
xchg
jae
pushf
aas
mov
mov
cs
add
cmp
mov
push
sbb
pop
imul
mov
cltd
mov
aas
or
mov
les
cmp
push
jg
ret
movsl
push
sarl
call
add
pop
xchg
imull
into
inc
add
fwait
xor
jne
jmp
fmuls
and
cmp
xor
jp
divl
and
jno
adc
inc
js
ljmp
leave
mov
mov
adcl
in
mov
dec
and
sbbb
sbb
push
xchg
cmpsb
lret
cltd
mov
loope
lea
fwait
mov
mov
mov
inc
pop
jl
addr16
mov
pop
mov
andl
pushf
pand
bswap
fcoml
mov
std
popf
cli
in
out
push
dec
in
movsl
sbb
imul
xchg
adc
scas
mov
cmp
sub
loope
inc
xchg
add
ja
jbe
push
mov
movsl
insb
daa
repz
xchg
loop
cmp
and
push
inc
outsb
push
movsl
test
lret
fidivs
repz
sahf
lods
inc
cmpsb
or
jno
adc
dec
in
or
mov
and
mov
xchg
and
mov
fs
dec
cli
cmp
mov
and
imul
mov
movsb
aaa
aas
inc
stos
sub
add
jnp
aad
or
aam
mull
movsb
xchg
mov
xchg
mov
sbb
mov
cmp
cmpsb
mov
or
popa
jnp
sbb
lahf
pusha
xor
fs
insb
addr16
cmp
cmp
outsb
adc
jp
sbb
xchg
movsb
push
popf
or
movsb
pop
dec
orl
notb
push
out
and
jp
out
in
mov
jl
sub
mov
push
jne
leave
arpl
xor
sbb
add
jmp
xchg
aas
jl
cmp
or
lret
scas
ljmp
fsin
mov
fwait
sub
inc
mov
jmp
jo
maskmovq
and
outsb
and
call
inc
iret
push
out
push
pusha
int
mov
dec
jb
pop
fwait
sbb
shlb
lea
xchg
nop
insb
add
xlat
sbb
dec
movsl
mov
pop
cltd
push
inc
push
push
and
jl
fndisi(8087
rclb
pop
adc
nop
jmp
rcrl
mov
add
rclb
lea
mov
pop
cwtl
sub
mov
mov
sahf
jns
or
pop
aas
fucomip
int
xchg
lods
mov
repz
aas
cmp
inc
imul
cmpl
xlat
fisubrs
sti
pop
mov
xchg
fsubrs
xchg
js
cs
add
mov
mov
add
mov
mov
lahf
aad
inc
push
les
sub
mov
popf
loopne
mov
sar
mov
cmp
mov
insb
or
mov
icebp
mov
mov
pusha
pusha
imul
cmp
imul
ret
mov
push
xchg
xchg
adcl
add
inc
cmp
or
sub
gs
inc
in
push
sub
mov
sbb
lods
push
mov
pop
dec
insb
clc
mov
dec
mov
ja
mov
pop
jge
cmp
cli
mov
push
xchg
sbb
jmp
push
loop
out
sub
add
les
pop
mov
push
jecxz
mov
sahf
mov
pop
int3
cmp
lods
aaa
aas
pop
mov
and
inc
mov
sbb
js
pusha
in
xor
xor
push
jle
into
dec
rorb
rcl
les
cmp
adc
popf
lcall
pop
negl
or
inc
pop
mov
xor
ret
jge
sbb
xor
or
push
ror
cmp
pop
jmp
push
xchg
data16
mov
ror
in
jl
pop
in
das
push
push
sbb
fistps
aad
popl
lcall
popa
xchg
push
mov
iret
sbbb
cwtl
jecxz
call
push
rorb
or
icebp
mov
test
pop
xchg
ret
mov
xchg
dec
dec
sahf
sbb
mov
xchg
inc
in
negb
jle
cld
mov
xchg
insb
push
andb
mov
mov
mov
adc
addr16
jne
cltd
dec
out
js
mov
or
xchg
int3
lock
mov
lahf
mov
pop
dec
inc
testl
jg
jae
xchg
inc
in
fildl
insb
ficoms
mov
fists
xchg
xchg
mov
sbb
dec
or
jg
mov
loope
sbb
mov
xchg
insb
std
fisubrs
pop
repnz
ja
and
jns
repnz
dec
scas
xchg
mov
mov
mov
stc
xchg
cwtl
add
and
jge
out
mov
out
in
addr16
repz
sub
cld
mov
rorb
mov
imul
push
inc
jecxz
fsubs
jno
out
jmp
clc
dec
lods
xchg
push
ret
ds
add
add
lahf
mov
fwait
push
cmpsb
mov
adc
push
out
xorl
mov
stos
aaa
sbb
xchg
sub
movsl
xchg
push
jns
sub
and
push
mov
mov
lea
and
add
inc
dec
mov
mov
lock
in
xchg
or
div
mov
mov
enter
sub
inc
mov
pushf
daa
mov
jle,pn
jns
and
clc
xchg
dec
std
cmpsb
data16
add
into
and
pop
mov
pop
xor
sub
jle
mov
int3
sbb
int3
ja
lcall
jo
sub
lret
addl
dec
push
or
and
push
pop
push
test
pop
pop
mov
imul
inc
outsb
xor
add
jg
fldt
pop
idiv
pop
jle
add
pop
inc
pmuludq
lods
sbb
sub
bsr
ljmp
lea
aaa
mov
jmp
jp
rcrb
mov
cmp
or
mov
sbb
lods
pop
shll
lds
mov
jg
push
pushf
pop
add
mov
xchg
mov
dec
jmp
test
pusha
fcmovbe
cltd
adc
xchg
inc
mov
inc
aas
inc
push
dec
push
paddusb
pop
mov
lea
je
les
jle
gs
mov
jmp
fucom
stos
iret
or
cmpsb
aaa
xchg
loopne
ret
inc
cmpb
mov
or
les
cmp
mov
fcmovb
push
xchg
pushf
loope
loopne
push
les
dec
cld
xor
pop
pop
aam
jmp
pop
push
mov
jne
movsl
test
cmpsl
or
push
xchg
cmp
rcrl
mov
mov
and
sub
test
outsb
pop
mov
loope
repnz
mov
pop
ret
push
test
add
mov
sbb
popa
inc
ret
sahf
lret
inc
or
xchg
lret
sub
dec
xor
or
push
aad
shrl
cwtl
dec
testl
enter
and
ss
xor
aad
cmp
andl
or
test
test
mov
cld
cmp
aad
cmp
std
imul
aam
cmp
lcall
xchg
push
std
je
push
call
out
sub
pusha
pop
push
inc
xor
push
loope
stos
test
xchg
cmp
dec
jmp
mov
das
mov
and
lea
andb
adc
mov
sahf
mov
or
xchg
adc
cmp
repz
adcl
bound
pop
pop
and
xlat
push
addl
sub
xchg
mov
cmpsb
push
jbe
adc
nop
sub
add
jmp
lcall
or
or
nop
xchg
inc
pushf
mov
and
jae
pop
adc
jecxz
or
movsl
sbb
lock
inc
insl
cmpsl
cmp
inc
inc
add
in
scas
ds
sub
adc
cmc
mov
shll
sbb
sub
xchg
push
xchg
lret
mov
sub
aas
sub
and
leave
aad
mov
mov
mov
int
push
inc
pop
or
mov
cwtl
mov
stos
in
data16
loope
mov
pavgb
inc
icebp
pop
dec
xor
lahf
jg
addr16
push
cld
jmp
movsb
inc
fsubs
cmpsb
push
inc
xor
push
in
test
inc
orl
jmp
aam
daa
fsubs
mov
fnstenv
xchg
xchg
cs
mov
add
enter
or
xor
das
lock
call
or
mov
xor
das
cwtl
fiadds
out
fwait
sar
adc
in
cmp
xchg
mov
and
jp
push
jecxz
lcall
cmp
push
and
inc
mov
clc
mov
pop
cld
aaa
stc
xchg
jns
out
insl
pop
push
sub
scas
dec
jle
jp
or
push
dec
leave
aam
inc
cmp
sti
xor
out
negb
xchg
popl
adcb
call
cmc
repz
push
cwtl
pop
lret
pop
add
shr
arpl
nop
loop
push
push
mov
into
mov
mov
adc
loop
repz
outsb
and
or
pop
filds
xchg
sbb
pop
mov
pop
xchg
jo
fstps
mov
testl
pop
push
lock
or
inc
mov
xlat
out
xchg
push
cmpsb
out
add
aad
aas
scas
shl
imul
gs
and
push
pop
out
push
cmp
mov
int
imul
test
xor
repnz
pusha
lea
std
sbb
inc
adc
out
pusha
pushf
enter
outsb
mov
sub
in
jle
data16
and
aaa
sub
mov
rcrb
out
lea
xchg
sbb
xchg
es
mov
dec
call
push
and
call
fcoms
xor
sub
and
int3
mov
jge
stos
divb
and
sahf
subl
inc
inc
mov
mov
jmp
mov
ret
jl
sbb
fmuls
cli
fsub
jo
cltd
icebp
into
xchg
in
mov
adc
adc
and
clc
insl
sbb
fcmovnu
das
sahf
xlat
mov
inc
pop
jp,pn
sub
fcomps
in
flds
idivb
jne
sbb
jno
imul
lcall
push
cmpsb
sbbb
sbb
cltd
ret
rcl
jno
icebp
mov
pop
xchg
pop
aaa
loope
jge
das
rcll
mov
scas
test
orl
or
mov
sbb
xlat
cld
pop
subl
stc
es
or
mov
xorl
adc
test
test
dec
or
frstor
xchg
jbe
js
mov
loope
idivb
stc
scas
out
in
sti
dec
dec
mov
mov
out
sub
ds
xchg
in
sbb
xchg
push
outsl
ss
sbb
loopne
scas
aam
sbb
movsb
data16
and
out
je
xchg
out
hlt
aas
into
mov
cmp
inc
lret
test
out
jbe
repnz
inc
leave
mov
pop
jae
or
push
adc
cwtl
and
pop
mov
imul
out
and
lcall
fdivp
out
and
xor
arpl
mov
xchg
mov
popa
dec
jb
mov
jle
pop
mov
adc
popa
sub
stos
add
jle
push
or
push
cli
cld
movsl
push
jg
or
fwait
push
sbb
into
xor
sbb
or
add
xor
dec
test
pop
and
xor
push
lahf
jmp
mov
and
mov
pop
cli
pop
sbb
imul
xchg
insb
pop
enter
and
xchg
inc
pop
int
cli
mov
les
cmp
add
xlat
dec
mov
ret
in
pop
out
lods
cmc
cmp
mov
sbb
sbb
cwtl
cmp
es
scas
stc
icebp
decb
add
pop
cmp
xor
ljmp
inc
mov
mov
inc
add
es
jecxz
orb
jp
outsl
test
mov
xor
gs
orb
aam
clts
push
sub
inc
mov
sarl
add
enter
jbe
push
mov
dec
jmp
stc
jne
lds
push
mov
cmp
imul
mov
and
xchg
lcall
dec
xchg
xchg
hlt
lods
cmp
das
xchg
xchg
pop
popa
jb
mov
mov
movsl
or
out
push
mov
sbbb
jg
lret
test
ljmp
sub
es
cs
xchg
jne
mov
subb
sahf
cmpsl
in
push
scas
push
jge
pop
bound
sbb
push
fldt
add
xchg
lods
aas
fs
sub
xchg
pop
cli
insb
mov
testb
loope
testb
sbb
lcall
sbb
push
adc
sub
and
jno
das
xor
or
pop
cmp
jne
adc
mov
incb
xor
inc
les
lahf
push
in
dec
xchg
jo
xchg
data16
cltd
jns
xchg
fsubl
inc
shrl
cmp
pop
fnstcw
lods
push
loope
cmpsb
stos
pop
fsts
cmc
jle
pop
push
fistps
test
add
dec
lods
xchg
sub
addr16
int
xchg
jle
cmpsb
mov
adc
jbe
mov
cmp
lds
sub
cmp
ja
icebp
mov
push
pop
in
mov
mov
int
lret
loope
popf
sahf
iret
dec
cmpb
push
enter
add
dec
lock
in
mov
movsb
lock
fs
movsb
test
sbb
mov
hlt
sahf
push
dec
pop
xlat
cmpsb
into
mov
mov
mov
rcll
loopne
addl
push
xlat
mov
add
and
cs
ret
dec
pushf
add
cmp
lea
xor
xchg
adc
imul
and
mov
out
notb
shlb
or
sub
hlt
ja
pushl
dec
mov
addr16
aam
testb
ret
push
ss
mov
push
and
mov
xlat
rorl
enter
inc
cmp
jle
adcb
ss
in
xchg
das
hlt
xchg
cltd
test
xor
outsl
out
insl
xchg
stos
icebp
in
xchg
fmuls
push
sti
cmc
and
lds
testl
into
xorl
pushf
mov
bound
mov
fdivs
jns
push
repz
rorl
in
lea
jae
lcall
cwtl
mov
pop
push
stos
in
shrb
loope
pop
jnp
xchg
push
lods
insb
fistpl
lds
mov
subb
repnz
test
mov
and
jg
in
dec
sbb
and
aas
cmp
mov
xchg
loope
in
iret
cltd
xor
xor
mov
data16
mov
cmp
punpckhbw
xchg
pusha
lret
push
movsl
sti
loope,pn
adc
push
or
xchg
insb
popf
in
xchg
call
pop
sarw
xchg
sarb
push
push
ja
mov
sbb
push
mov
dec
negl
aas
or
jg
cmp
xchg
popa
jl
mov
mov
mov
xchg
arpl
inc
and
jmp
popl
jecxz
cli
jp
negb
mov
fldt
mov
xchg
rorl
inc
push
mov
xlat
mov
mov
adc
data16
jmp
in
pop
adc
clc
or
popa
push
jno
insl
popf
mov
aas
xlat
btc
stos
mov
xchg
or
push
lock
aam
jnp
femms
jnp
cmpsb
adc
adc
std
nop
adc
cmp
popa
mov
mov
stos
mov
popa
repz
jb
imul
push
popl
xchg
and
inc
xorl
mov
mov
xchg
xchg
pop
jmp
sub
mov
sub
out
mov
pop
iret
fadds
push
mov
pop
xchg
popa
aad
jl
mov
xchg
adc
es
mov
imulb
mov
sbb
and
test
sub
push
mov
divb
xor
aas
pop
lcall
jbe
dec
xchg
push
out
add
std
daa
ret
mov
out
push
add
call
or
sub
fsubs
unpckhps
test
call
cmc
mov
das
popa
out
dec
movsb
imul
jne
jbe
gs
mov
repnz
cmc
sub
vmovdqu
mov
out
jne
iret
lahf
stos
scas
jbe
xchg
imul
incb
data16
mov
dec
pop
push
mov
mov
cmp
imul
xor
or
aam
inc
and
iret
arpl
loop
cmp
adc
jbe
stos
int3
aam
inc
sub
test
dec
adc
push
pushl
adc
jbe
cmpsb
aam
aas
mov
or
les
ljmp
cmpsl
mov
je
cwtl
insl
shrb
adc
xor
fldt
sbb
xorl
fmull
cmpl
cmc
shrb
fldcw
and
movb
cmp
pop
iret
xchg
pop
add
cmp
orb
outsl
push
stos
stos
shlb
popa
mov
loop
neg
jmp
pop
stc
dec
inc
inc
push
push
les
pop
pop
mov
stos
or
xor
inc
mov
or
in
inc
lock
inc
mov
cmp
lret
stc
fdivrl
ds
ror
sub
cmp
pop
cs
cmpsl
int3
mov
ja
int
xchg
adc
movsl
das
dec
loop
jg
leave
mov
xchg
and
dec
mov
addr16
sbb
lods
lds
dec
frstor
sahf
adc
mov
and
jmp
stos
xor
xorl
push
out
out
adc
aaa
je
adc
xor
push
mov
and
dec
sbbl
sbb
jns
into
aas
push
lret
inc
popa
imul
jmp
clc
sbb
dec
insb
inc
cmp
fdivrl
dec
dec
and
xor
testl
adc
lcall
int3
fcompl
mov
xor
es
cli
aam
pop
adc
mov
fs
cmp
mov
push
jno
inc
mov
stos
loop
stc
push
enter
jmp
int
mov
scas
cld
jbe
add
and
mov
add
out
popf
mov
arpl
cmc
sbb
enter
mov
idivb
movsl
cmp
add
repz
mov
andl
jl
out
hlt
repnz
cs
and
jnp
jnp
das
cmp
dec
sbb
into
inc
jns
push
pushf
sbb
imul
sbb
cwtl
or
leave
insl
fisttps
jge
jnp
stos
dec
mov
xor
or
xor
stc
push
pop
sub
and
push
sub
arpl
dec
inc
das
sub
sbb
ret
xor
test
mov
xchg
or
xor
shr
sarb
mov
inc
sub
jo
pop
cmp
lods
add
inc
scas
into
or
int
adc
xor
adcl
pop
stos
jle
inc
aaa
fisubrs
sub
xchg
pushf
push
cmp
movsl
mov
inc
addr16
adc
mov
or
push
fnstenv
cmpl
mov
xor
push
shlb
negl
mov
mov
test
lcall
mov
fwait
stos
imul
xchg
inc
mov
fwait
es
or
scas
jb
dec
out
inc
lock
ljmp
int3
mov
out
stc
incb
les
cmp
mov
dec
inc
mov
add
xor
orl
das
sbb
cmpsl
mov
dec
xchg
cmpsb
jge
inc
mov
add
outsb
pop
cmpsb
aad
mov
daa
xor
inc
aad
mov
sar
div
popa
dec
pop
inc
sbb
les
adc
xchg
lds
rcrb
scas
enter
or
xchg
inc
fs
outsb
call
sarb
pop
sti
adc
adc
push
jbe
inc
out
sbbl
jnp
xor
addr16
push
rorb
stos
xchg
pop
das
scas
add
xlat
fiadds
test
lds
shrl
pushf
xor
lahf
add
mov
cmp
add
lcall
push
std
shlb
or
lcall
lds
fimuls
inc
adc
jnp
xor
sub
lods
out
out
clc
jnp
mov
pop
dec
add
pop
jge
push
aas
insl
or
and
or
nop
sbb
andb
into
out
ja
divb
out
pop
cmp
or
repz
jle
arpl
xchg
ret
lods
inc
lahf
out
js
push
xchg
or
adc
scas
mov
test
dec
andl
push
fnstenv
sarl
or
enter
aaa
clc
ds
stc
xchg
pop
lahf
fsubrs
add
xchg
mov
jo
sub
insb
xor
push
outsl
dec
jb
in
fwait
or
mov
out
imul
dec
or
sbb
push
insb
movl
mov
es
sub
outsb
adc
or
cld
mov
cmpsb
inc
das
lret
adc
lock
lret
or
scas
push
fidivl
xor
push
mov
cltd
xchg
pop
mov
mov
push
jp
add
ja
mov
pushf
or
pop
rolb
lret
add
cmp
cltd
fdivs
sbb
jmp
mov
int3
and
xchg
push
jbe
xchg
push
loope
push
xchg
mov
scas
test
push
sub
pop
or
mov
xchg
nop
jg
adc
shlb
push
xchg
jp
scas
sub
mov
rorl
cltd
frstor
push
lods
adc
cmp
mov
aam
dec
xor
test
loop
pop
inc
clc
xchg
das
repnz
dec
mov
fmuls
adc
fldenv
mov
repnz
push
cltd
add
rol
cmp
stos
aaa
mov
inc
push
inc
fs
inc
loopne
pop
mov
lea
cmp
jno
mov
push
rcrb
cwtl
mov
pop
lods
mov
xor
jg
xor
sub
pop
rorl
and
inc
pop
adcb
es
sub
push
mov
into
jge
sub
and
ret
add
jp
mov
xor
or
xchg
rclb
push
mov
xchg
mulb
pop
mov
and
in
std
mov
inc
or
lea
stos
add
sub
mov
loopne
adc
pushf
pop
insb
repz
aaa
icebp
adc
mov
jp
xchg
in
nop
ret
das
mov
and
jno
andb
lret
repz
int
cmp
xchg
jns
pop
xchg
push
push
sbb
jbe
rorb
js
mov
inc
or
aad
outsl
jae
and
aam
inc
xchg
push
jb
pop
mov
push
negl
stos
das
cmp
fisubrs
cmc
ror
pop
lcall
xchg
loopne
imul
xchg
and
sbb
cmp
cwtl
sti
mov
xor
pop
push
mov
sahf
aas
loope
outsb
cmpsb
inc
push
mov
leave
cmp
fwait
jns
mov
cmp
push
daa
mov
call
clc
sub
inc
xor
lods
push
mov
jp
inc
or
sbb
popf
inc
sarb
jo
mov
rcl
ud1
cmc
repnz
decb
movsb
mov
in
pop
jmp
cmp
xchg
xorb
xlat
ja
loope
stc
add
lret
clc
lods
mov
dec
mov
or
addr16
or
nop
push
push
std
add
pop
icebp
mov
sub
sar
and
popf
add
jno
aad
outsb
mov
jbe
mov
mov
xor
ja
cmpl
in
inc
inc
pop
inc
out
push
or
sub
call
jp
add
mov
testl
fs
push
sbbl
ja
mov
adc
adc
stos
adc
adc
icebp
push
mov
xchg
mov
repnz
cli
dec
push
jb
inc
hlt
add
mov
lds
lcall
xorl
sub
and
xchg
mov
imul
ret
mov
or
cmp
mov
pop
push
movsb
xchg
insb
lds
add
xchg
xchg
call
jo
jmp
and
mov
add
mov
inc
js
mov
xorb
cwtl
ret
adc
orl
xor
lods
sub
aas
mov
xor
fidivrs
scas
jns
das
inc
pusha
pop
cmp
in
pop
xor
cmp
add
jmp
mov
mov
imul
mov
add
sarl
popf
movsl
lret
movsb
stos
repz
std
xchg
repz
xlat
adc
stos
mov
cmp
jns
aaa
add
cmpsb
scas
mov
xchg
std
leave
cmp
cwtl
je
cmp
and
outsb
sbb
inc
fidivrl
xchg
popa
jbe
das
sub
sub
insl
jmp
lahf
je
add
jmp
aam
faddl
outsl
adc
mov
dec
cmc
push
add
lock
inc
cli
rolb
fcmovbe
xchg
or
mov
dec
sbb
xor
mov
enter
xlat
rcrl
fidivrs
loope
dec
out
xchg
cmp
test
mov
pop
fs
xchg
pop
mov
hlt
mov
test
jle
or
rcr
add
xchg
jle
addr16
push
fdivl
mov
lock
sti
mov
sbb
mov
xchg
jle
xchg
pop
dec
bound
addl
xchg
jbe
mov
cmp
pop
cmc
and
xor
xor
divb
cmc
fistps
jmp
not
fwait
cmpsb
add
inc
out
xchg
fnstenv
push
and
push
mov
push
in
xchg
iret
imulb
ret
mulb
cltd
fwait
adcw
lret
outsl
pop
mov
std
xor
insb
loope
xchg
test
dec
sub
pop
xor
shl
lds
enter
adc
out
nop
add
xchg
mov
scas
pop
cmp
jae
insb
imul
cmp
jbe
fdivrs
mov
mov
mov
jne
je
iret
xchg
mov
mov
outsb
sub
out
pusha
lock
cld
inc
or
stos
sahf
ss
add
mov
mov
mov
mov
es
mov
ret
xchg
movsb
xor
mov
xchg
pop
rcrl
in
pushf
xchg
mov
pop
popa
cmp
mov
dec
or
push
push
dec
mov
pop
cmp
mov
leave
mov
xlat
stc
into
ljmp
mov
into
pop
add
xchg
repz
test
sbb
dec
test
fsubs
jo
scas
mov
out
jno
sbb
aas
aam
xor
inc
push
inc
daa
loopne
mov
push
inc
mov
inc
js
add
adc
xchg
and
sub
mov
sub
add
inc
neg
jo
movsb
push
mov
sti
scas
add
mov
aaa
ret
mov
jg
pushl
lahf
push
mov
add
mov
ds
and
cwtl
cmp
or
in
int
dec
sbb
imul
or
shlb
lods
shlb
mov
clc
testl
out
dec
jb
les
mov
adc
cmpsl
mov
dec
dec
fwait
cld
jb
xor
clc
int3
xor
leave
je
or
jae
jb
lret
inc
stos
or
pusha
adc
stos
daa
inc
out
enter
scas
push
xchg
add
popf
movsl
mov
shrb
shlb
in
js
fstpt
dec
dec
enter
push
mov
inc
pop
inc
loope
sub
addr16
cmpsb
sbb
jmp
xor
jecxz
jl
aam
xor
adc
pop
out
sbb
loop
jmp
pusha
out
xchg
sub
add
in
repz
aam
ljmp
movsb
insb
xor
xchg
xchg
popa
or
adc
bound
movsb
jle
and
cs
lds
pop
jp
and
jl
mov
ret
push
aam
add
fldcw
mov
mov
js
mov
in
out
inc
iret
jnp
jge
push
mov
add
adc
push
adc
xchg
sub
icebp
andb
rcrl
xchg
test
scas
adc
xchg
mov
inc
add
xor
add
cmpl
dec
push
repz
pop
mov
daa
fwait
out
mov
mov
dec
mov
xor
hlt
nop
call
and
jmp
ss
add
bound
cmp
and
mov
leave
sbb
pop
in
fnstcw
js,pn
mov
std
cltd
xor
aas
add
rclb
cli
inc
mov
repz
jmp
imul
inc
movsl
mov
lahf
in
mov
inc
in
in
xor
cmp
gs
out
inc
sti
bound
outsb
push
in
popa
push
bound
sbb
dec
push
xor
repz
xor
icebp
sub
sub
dec
cli
push
xchg
push
stos
xchg
cli
dec
outsb
in
cltd
dec
or
pop
out
aad
cmpsl
dec
adcl
dec
mov
jle
mov
mov
lods
xchg
in
ret
jp
insl
out
popf
hlt
adc
jmp
jl
dec
sti
inc
jae
xchg
add
mov
addb
push
pop
add
pop
mull
popf
daa
jl
fidivl
xchg
addr16
stos
mov
jg
xchg
fiaddl
ljmp
xchg
and
cmpsb
or
jne
pusha
push
dec
sub
xor
idivl
mov
push
scas
add
mov
loopne
or
int
stc
cmp
fcomp
icebp
shrb
push
ret
cmpsl
mov
in
orl
icebp
fildll
push
stc
inc
dec
gs
dec
sub
popf
adc
int3
or
mov
pusha
outsb
cmc
ljmp
arpl
cmp
and
ret
jp
mov
scas
sub
and
add
mov
jmp
pop
inc
or
xlat
into
add
negl
ds
mov
rorb
repnz
cwtl
lock
pmulhuw
mov
mov
adc
shll
pop
add
fisttps
mov
sub
fmul
pop
insb
int3
adc
and
mov
iret
sub
popa
js
negb
gs
mov
mov
add
mov
outsl
out
lea
enter
roll
ljmp
sbb
daa
mov
out
pop
inc
and
xor
mov
adc
fdiv
fisttpl
push
sbb
adc
cmp
loope
scas
scas
sub
outsl
mov
movsb
cltd
mov
in
rorl
mov
adc
lods
sbb
adc
test
jbe
push
inc
jl
pushf
cmc
pop
hlt
mov
xor
xchg
sbbl
mov
sbbb
jp
addl
test
adc
add
in
clc
aas
xor
das
pop
sub
cmpsl
lock
xchg
push
testl
jno
pop
fistpll
and
adc
mov
jg
imul
cmp
sbb
push
addr16
das
push
push
push
dec
sahf
ja
jb
lds
jp
in
mov
fs
pop
dec
mov
movsl
mov
std
xor
dec
dec
push
or
pop
cmp
push
je
and
jno
sbb
adc
mov
sub
adc
cwtl
les
mov
or
sub
push
push
loope
cwtl
sbb
dec
sbb
frstpm(287
adc
adc
sub
jae
ss
mov
loopne
mov
negl
adc
rorl
ds
dec
xchg
test
cwtl
inc
aam
fiadds
in
jns
sbb
xlat
ror
neg
icebp
sbb
out
fucom
dec
in
imul
mov
lcall
cltd
std
pushf
jns
int
cmp
jns
jno
loope
dec
test
adc
popa
push
bound
xlat
divl
in
dec
lcall
sahf
bnd
inc
add
std
xor
int3
nop
rolb
xor
fsubl
mov
daa
fld
add
pop
out
jmp
gs
add
xchg
mov
fwait
fs
or
mov
push
lods
jmp
mov
mov
xor
sar
push
loopne
lahf
aad
popa
push
test
dec
xor
push
mov
lahf
ret
and
pushf
mov
cli
jne
sub
cmp
mov
jge
dec
mov
or
sbb
mov
stc
or
in
push
jnp
inc
shll
lea
movsb
fcoms
mov
adc
xor
into
pushf
jg
mov
or
pop
flds
lods
jecxz
sahf
bound
or
rcrl
inc
pop
add
cmp
flds
mov
cwtl
mov
add
fisttpl
jae
xor
fisttps
jmp
out
lret
mov
or
push
push
rcl
and
lods
rolb
add
iret
je
hlt
negb
cmp
je
push
and
inc
xor
std
adc
pushf
pmullw
and
add
jp
test
stos
repnz
lock
dec
cltd
and
push
mov
mov
pop
and
test
dec
jb
add
divb
mov
fnstenv
ss
enter
aas
js
xchg
mov
lret
or
test
sub
sbb
push
dec
xchg
and
mov
pushf
dec
in
pop
mov
loopne
push
push
mov
stos
into
and
inc
mov
ffreep
loopne
repz
pop
loopne
mov
and
cmp
sub
popf
int
cmp
push
movsb
xorb
dec
fs
in
fisubrs
cmpsl
mov
xor
pop
pcmpeqb
push
shrb
cmp
das
xorl
test
repnz
mov
stc
andps
jno
fs
push
mov
adc
cmpb
push
xchg
sbb
push
add
pop
callw
jno
add
sbb
lods
ret
jb
mov
ss
adc
xchg
arpl
mov
icebp
je
cltd
movsl
jne
inc
scas
in
and
scas
cmp
daa
bound
stc
outsl
sbb
pop
rcrl
loope
int3
push
sarb
add
pop
dec
push
nop
fnstenv
in
xchg
out
pop
repz
cmp
dec
cld
add
and
xchg
xor
in
push
adc
in
or
aam
int3
ret
xchg
or
cmp
add
out
mov
xchg
loope
jno
aas
push
std
xchg
jp
and
out
mov
mov
or
popw
push
lret
adc
add
cmp
sub
adc
fstl
sub
fbld
inc
insb
insb
lods
lret
sub
hlt
jle
repnz
dec
sarl
xchg
lret
ja
adc
pusha
and
sub
jmp
test
mov
xor
sahf
outsl
jle
sbbb
icebp
add
int
stos
mov
mov
and
mov
nop
aam
xchg
rorb
pushl
int
les
aas
pop
xchg
pop
cwtl
mov
test
cmp
or
clc
ret
add
jbe
push
ljmp
add
ja
mov
icebp
andb
xchg
dec
inc
icebp
or
sub
sbbb
push
aas
and
xor
mov
add
sub
xor
cltd
pop
lret
pop
dec
and
xchg
jge
xor
adc
frstor
sahf
rclb
out
cmp
push
mov
xchg
inc
test
mov
mov
cmpsl
cltd
testb
int
cmp
lahf
mov
xchg
jae
push
into
xchg
daa
outsb
xchg
cmp
inc
nop
stos
xchg
clc
mov
or
fucom
inc
adc
push
mov
jg
adc
cmp
in
jmp
adc
adc
into
push
add
test
shll
pop
inc
sub
pop
in
mov
jecxz
rolb
movsb
pushf
sub
mov
add
daa
sub
and
loop
jl
fs
xchg
xor
xor
cmp
push
stos
lret
and
js
ret
pushf
xor
cmp
cli
enter
and
and
lahf
insb
jg
inc
cmpsb
nop
jl
jno
mov
add
daa
out
xor
aas
mov
sti
push
pop
push
pop
aad
dec
add
and
jg
and
jns
cmp
mov
cmp
xchg
xchg
sbb
divl
dec
xor
insb
fs
add
jge
sub
in
cltd
daa
jg
adc
lods
mov
ds
out
int3
mov
rol
iret
js
test
fwait
sar
dec
jns
scas
jae
jb
sarl
jne
mul
bound
test
jnp,pn
rorb
ja
jnp
xchg
daa
mov
in
ret
dec
mov
push
xor
enter
aad
dec
pop
jbe
call
cmp
push
roll
add
aas
shrb
pop
and
mov
pop
fcmovnbe
es
mov
jae
ret
inc
mov
aam
or
imul
into
cmpsl
pop
mov
call
add
popa
push
mov
addl
and
mov
jl
and
lret
inc
mov
fsubs
aaa
lods
push
fisttpll
loope
add
dec
fidivl
xchg
lahf
push
cmp
lea
insl
shrl
or
mov
out
dec
pop
popf
clc
cmp
clc
sarl
bound
jle
push
and
pop
adc
inc
shr
sti
inc
push
sub
cmp
nop
cmp
or
out
sub
out
adc
stos
lahf
add
icebp
pop
data16
fwait
es
inc
inc
adc
fcomi
sti
adc
mov
lea
repnz
mov
sub
roll
jne
xchg
sbb
sti
push
mov
sahf
lds
popa
pop
xor
pop
sub
jge
fs
push
adc
dec
leave
shlb
lcall
in
inc
rol
stos
out
negl
outsb
push
insb
outsl
pop
sbb
pop
subb
xchg
fcoms
jle
pushf
sub
jae
fcoms
popf
push
ss
hlt
inc
sub
clc
test
jge
pop
add
or
or
sbb
and
mov
push
out
popf
imul
xchg
sub
mov
icebp
mov
adc
jge
adc
in
add
into
sub
dec
lds
push
fidivrl
fdiv
insl
pop
pop
pushf
sbb
push
and
cmpsb
sbb
fcmovnbe
jle
rol
xchg
or
adc
mov
mov
inc
inc
lcall
stos
push
cmpl
mov
rcrb
aad
dec
cs
lret
fimull
adc
test
inc
aad
inc
jbe
cli
mov
addr16
pushf
sub
add
adc
xor
pop
imul
insb
and
adc
or
aad
repz
test
push
aaa
loop
stc
sbb
jo
shrb
jg
je
sub
mov
dec
outsl
push
mov
out
cltd
jns
dec
rcll
or
lock
sbb
or
es
mov
cld
inc
inc
jecxz
push
jp
xchg
and
sbb
ret
bound
pop
push
xlat
cmc
xchg
adc
cltd
loopne
int
loop
mov
jns
scas
cwtl
mov
out
in
orb
add
mov
sbb
fprem
ljmp
stos
pop
bnd
fwait
push
push
adc
movsl
sub
lcall
aam
mov
lods
int
sub
sbb
jns
aas
xor
inc
fsubrp
movsb
ret
clc
sub
cmp
loop
clc
push
cmp
xchg
in
outsb
jmp
adc
sub
pop
and
sbb
or
adc
mov
cltd
in
ss
push
jnp,pt
inc
notl
fs
or
cltd
push
lahf
aam
std
xchg
inc
out
stos
xchg
inc
mov
scas
int3
fisttps
mov
lea
dec
mov
mov
mov
push
stos
sub
pusha
cwtl
pop
inc
add
ficomps
and
notl
pop
outsl
and
mov
cs
out
inc
jp
outsb
push
ja
inc
push
push
cmpsb
lret
fistpll
add
mov
jbe
pushf
daa
ja
add
push
jle
mov
cltd
mov
dec
jecxz
mov
andl
psllq
addr16
mov
xchg
pop
mov
repnz
adc
ja
pop
push
mov
jns
je
mov
jns
cmovbe
cmpl
mov
incb
mov
cmp
test
int
jl
outsb
cltd
mov
jle
outsb
add
sbb
and
out
push
test
and
mov
xor
add
js
lds
iret
jge
es
test
imul
push
add
out
push
mov
sub
fxch
fs
addr16
out
insl
mov
fsub
mov
outsb
ljmp
arpl
jecxz
cmp
fs
stos
in
daa
adc
ret
outsl
enter
sub
mov
cmp
mov
cs
in
into
mov
push
inc
jno
pop
or
mull
outsb
cmp
dec
movsl
sahf
pop
or
pop
shlb
mov
pushf
sbb
fnstcw
xorb
adc
or
jle
add
loopne
scas
and
adc
xchg
shrb
jge
and
ret
popf
test
add
sub
jmp
sub
cmp
adc
dec
mov
sub
pop
sarb
out
fldcw
jne
jmp
subb
push
inc
dec
in
inc
push
aas
lds
cmpsw
popf
or
push
lock
sbb
fisttps
sbb
xor
das
push
jmp
jnp
add
js
xor
out
mov
inc
je
scas
sarl
adc
push
inc
xor
dec
inc
dec
lods
dec
int
cld
clc
imul
push
pop
loop
out
pop
xor
sub
sub
std
xchg
mov
pop
pushf
addr16
imul
stos
inc
movsl
dec
test
xor
mov
jb
clc
leave
pop
ror
push
std
aaa
xchg
sub
cmp
push
lahf
into
add
mov
into
and
mov
mov
cmp
je
stos
jne
mov
dec
jo
ss
fs
fsubrl
je
movl
scas
sbb
pop
pop
mov
aam
rclb
pop
xchg
stc
mov
cs
mov
jnp
cmp
sub
adcb
movsb
sub
imul
movsb
xor
addr16
jnp
fdivs
sbb
xchg
push
or
mov
rcll
fldt
cmp
mov
lea
in
lods
and
scas
or
das
mov
cltd
sbb
mov
xor
jnp
inc
shl
xlat
subb
imull
cmpsb
xchg
sub
mov
divl
xchg
es
int
fistps
xchg
loope
icebp
leave
pop
imul
lods
lret
test
cmp
push
aad
loope
and
lcall
stos
ret
cmp
ret
std
push
movsl
outsl
pushf
xchg
pop
lcall
jg
call
lds
ljmp
int
mov
fidivl
bound
imul
js
nop
add
rorl
mov
pushf
repz
and
mov
adc
xor
push
insl
ret
adc
bound
scas
lahf
test
gs
sbb
mov
test
les
xchg
fcom
jge
adc
daa
sub
popf
and
pop
mov
sbbb
mov
and
fdivrp
cmpsb
push
inc
or
mov
jbe
jmp
mov
inc
jl
repz
jno
xchg
jns
and
daa
xchg
jnp
sbb
mov
cwtl
lahf
sarl
xor
aam
and
cmc
aam
je
movsl
rcl
pop
leave
sarb
xor
dec
fwait
mov
ljmp
mov
or
mov
jno
xchg
outsl
and
repnz
bswap
pusha
xchg
popw
xor
pop
ja
leave
push
je
or
sub
and
in
rcr
xchg
push
jo
xchg
jo
dec
movsb
push
mov
ds
ljmp
out
fwait
jno
push
xchg
sub
fdivrl
pop
loop
add
inc
jmp
jle
add
adc
adc
xchg
sub
mov
insl
pushf
cwtl
sahf
xor
hlt
mov
clc
push
repz
and
sahf
dec
negl
data16
fcoms
in
jp
hlt
loopne
outsl
adc
cmc
std
shll
out
push
shrb
imul
testl
jg
in
push
sti
call
mov
sub
push
jae
sbb
ss
push
das
pop
push
mov
sub
testb
cmp
cltd
test
pop
sti
nop
dec
in
es
add
xor
out
inc
xor
rorb
pusha
lret
mov
dec
mov
in
cmp
lcall
lahf
add
mov
outsl
lret
sahf
test
imul
mov
out
in
sub
push
jnp
xchg
dec
xchg
cmp
jg
mov
push
cmpsl
inc
or
stos
jo
add
sub
xor
xor
mov
fldenv
test
arpl
jo
cmc
xor
mov
inc
jp
mov
aam
stc
fucomi
ret
aam
jo
mov
fwait
stos
mov
mov
and
bound
jl
push
aad
inc
xchg
jne
adc
pop
in
cmpsl
imul
and
daa
dec
cwtl
dec
push
nop
sub
ljmp
int
enter
dec
lea
jns
cmp
fnstenv
cmp
cli
jecxz
cmpsb
and
incl
test
mov
push
xor
cmp
popa
ret
insb
fbstp
call
or
fisubrs
cmp
call
cmovg
repz
arpl
pop
jecxz
jl
sub
push
inc
mov
ficomps
fisttpll
mov
inc
popf
xlat
fs
mov
sub
and
xor
sbb
add
sub
int
addr16
jbe
arpl
mov
loope
test
xor
scas
dec
xchg
ljmp
aad
mov
stos
jecxz
mov
jmp
add
adc
fcoms
mov
add
sub
std
mov
sahf
mov
test
sub
dec
cmp
outsl
and
mov
test
lret
pop
mov
shr
or
or
and
xlat
pop
dec
mov
imul
les
mov
int
jne
adc
imul
loope
adc
out
fucomip
mov
mov
jo
fs
aaa
fsubrs
inc
repnz
cmp
and
mov
sahf
testl
and
ds
aaa
insl
mov
aas
dec
fsubl
dec
push
ret
pop
test
and
cmp
and
enter
fistpl
sub
fwait
xlat
mov
test
in
aad
and
shr
mov
fidivrl
repz
jae
push
mov
aam
test
flds
daa
nop
add
cmpb
pop
or
je
popf
pop
fsubrs
arpl
push
cmp
pop
xchg
les
sub
mov
xchg
xchg
inc
inc
jns
in
push
outsb
jge
or
inc
add
and
push
nop
aaa
push
mov
shlb
loop
xor
mov
fwait
pop
or
inc
outsb
push
popf
out
push
push
push
xchg
push
and
frstor
push
cmp
or
cmp
loope
xchg
insl
mov
cli
mov
movl
jl
clc
mov
sbb
jne
data16
adcl
mov
sbb
and
cwtl
jmp
inc
cmp
mov
ret
adc
mov
mov
mov
push
divl
mov
pusha
push
cmp
insb
outsl
xor
push
adc
fnstenv
pop
sarb
pop
out
and
cltd
jnp
sbb
push
adc
repnz
xor
addl
shld
mov
stos
bound
mov
test
insl
sbb
mov
out
push
dec
or
sub
add
cwtl
jp
sbb
mov
loopne
rcrb
hlt
adc
sbb
sbb
lods
lret
xor
mov
xchg
loope
push
jle
popf
mov
jae
cmpsl
fstp
ret
adc
clc
in
pop
adc
insl
mov
cmp
out
repnz
push
mov
sbb
or
fcoms
sub
jbe
ret
fucomi
loopw
or
sub
lds
sahf
or
fnstsw
in
dec
jg
adc
mov
add
cmp
popa
out
lods
push
push
repnz
adc
je
jle
jg
sahf
add
lods
int
sti
dec
arpl
and
aas
jne
sarl
pop
loop
sbb
out
arpl
lock
adc
mov
fcmovnbe
pop
in
inc
cwtl
or
add
xor
or
and
mov
xor
jae
lcall
fsubrs
ret
inc
cltd
xchg
xchg
insl
addr16
mov
lds
repz
iret
rorb
stc
jl
clc
mov
jmp
shll
mov
adc
fwait
push
into
es
mov
xor
xchg
lods
mov
dec
xchg
mov
lcall
push
jae
loopne
pop
es
cmc
out
repz
adc
fwait
inc
xchg
and
mov
push
xchg
fchs
sbb
arpl
inc
mov
add
or
outsl
push
push
int
push
push
test
fdivrs
dec
mov
imul
ja
pop
scas
add
scas
add
insb
add
mov
inc
dec
mov
inc
pop
sar
rorb
xchg
mov
ret
jns
and
xor
jp
mov
mov
push
mov
xor
adc
into
mov
mov
lret
jl
xor
fnstcw
push
push
lea
jnp
pop
adc
pop
lods
movsb
ret
cmc
shll
xor
add
shl
and
xchg
mov
or
xorb
sub
negl
icebp
sub
and
jmp
xchg
inc
rol
mov
outsb
adc
test
iret
cli
mov
xchg
popf
push
cmpsb
gs
jmp
es
je
sub
int3
out
mov
inc
mov
ljmp
in
popf
mov
and
inc
test
stc
fdivrp
xchg
push
mov
mov
imul
ret
push
test
popf
xchg
and
movb
std
fs
sbb
pop
cltd
push
leave
lea
into
mov
cltd
pushf
pop
pandn
fs
xor
sahf
cmpsb
xchg
jl
loopne
push
jnp
and
and
mov
pop
adc
repz
cmc
dec
sub
mov
add
add
icebp
and
out
sbb
movb
or
cmp
nop
fdivs
xchg
popa
sahf
adcl
sub
xor
dec
in
aas
pusha
pop
jbe
dec
push
rorl
push
ljmp
jle
push
mov
cltd
jne
or
addr16
idivl
test
outsb
nop
stos
lock
push
das
nop
cmp
mov
loopne
test
sub
ja
sub
mov
lret
inc
addb
fnstenv
sub
or
mov
loopne
das
mov
out
rorl
mov
lods
lds
repz
test
mov
addr16
inc
mov
repz
call
adcl
insb
sbb
lret
mov
jecxz
mov
mov
push
jecxz
outsl
mov
lret
mov
adc
pop
popa
mov
js
clc
test
push
test
orb
test
add
sbb
pop
aad
fnstenv
adc
sbb
dec
sbb
sub
data16
add
push
pusha
outsl
and
ja
inc
movl
ret
repz
popf
add
fwait
cld
inc
rcrl
pop
mov
shll
push
or
addl
gs
leave
adc
inc
lods
dec
mov
pushf
orl
flds
xor
and
pop
sahf
lea
push
add
imul
ja
mov
fdivrl
and
mov
call
and
insb
cmp
call
dec
aad
rorb
mov
leave
test
out
mov
adc
ljmp
jecxz
jl
call
mov
jg
andl
cmp
jne
pop
mov
push
push
and
cmp
xchg
testb
jnp
mov
not
mov
dec
jmp
sbb
cmc
in
lock
jge
xor
xor
rorl
dec
add
in
push
movsl
fsubr
push
and
push
enter
push
inc
mov
mov
sbb
aam
loop
loope
fmuls
lret
fsubl
jg
movsl
pop
adc
orl
inc
imul
sub
stc
push
add
jmp
mov
cld
repz
iret
insl
test
cmp
and
jmp
repz
cmp
addr16
add
mov
adc
fimull
hlt
xor
cld
adc
lret
jl
jns
xlat
or
or
jno
sub
ja
cmp
sti
stc
pop
ljmp
roll
cmc
push
cmp
out
aam
fisttpl
and
adc
movsl
push
add
push
push
lds
ss
push
dec
mov
pop
inc
mov
es
push
lods
xor
push
mov
push
js
dec
fwait
xor
icebp
cltd
ror
leave
cmp
mov
lods
pusha
mov
or
cmp
enter
out
adc
add
xorl
hlt
mov
stos
lret
popa
aas
outsl
ja
inc
movsb
fwait
aad
dec
lret
push
addr16
xchg
out
fadd
fwait
pop
cmpsb
add
add
test
iret
sbb
mov
cmp
fwait
dec
inc
xchg
cmc
xchg
roll
adc
adc
mov
lahf
enter
cld
sbb
and
pop
jle
fisubs
pop
sti
push
xchg
hlt
gs
sub
add
or
imul
or
fcompl
lods
test
filds
addr16
add
dec
arpl
cmp
lret
xor
sbb
dec
cmpsb
add
int
mov
sub
jle
gs
xchg
mov
psubsw
mov
test
hlt
hlt
mov
xor
xchg
jecxz
xor
push
inc
lahf
sbb
pop
sbbb
pop
and
mov
repnz
or
bound
dec
scas
push
adc
push
mov
movsb
push
jo
dec
mov
dec
sbb
pusha
mov
mov
pop
sbb
into
push
mov
arpl
dec
dec
mov
jo
fldl
or
test
in
repz
mov
repnz
xchg
in
xor
inc
mov
add
and
sahf
ficoml
lock
xlat
jp
mov
jmp
inc
push
sbb
xor
xchg
xchg
xchg
imul
sbb
xor
popa
mov
addb
mov
cmp
iret
lahf
jbe
std
out
jo
pop
dec
inc
fnstsw
sub
sub
mov
inc
mov
lcall
gs
jle
sbb
pop
dec
inc
lcall
inc
mov
or
lahf
mov
dec
sbb
out
fs
cmc
pop
inc
mov
xchg
negb
jne
dec
in
dec
ret
cmpb
pop
arpl
cs
xlat
lss
pop
std
addr16
fcmovnu
scas
sbb
outsl
xor
aaa
popa
daa
jmp
in
cs
stc
hlt
das
add
adc
loop
shlb
aad
mov
xchg
pop
dec
mov
fwait
shrb
aaa
and
lds
jg
or
dec
xor
dec
mov
js
in
and
push
into
test
arpl
out
into
addr16
imul
outsl
andl
mov
clc
jo
fsubp
sbb
jbe
into
addb
stc
movsb
inc
push
das
fimuls
arpl
addr16
inc
jns
mov
and
dec
sbbb
inc
lret
push
enter
gs
mov
cld
mov
bnd
dec
adc
ret
sub
and
daa
enter
test
xchg
icebp
div
mov
nop
in
aam
xchg
mov
cmpsb
mov
icebp
sbb
ret
jno
mov
stos
push
pop
ror
or
push
leave
adc
rolb
inc
scas
mov
movsl
mov
sub
aam
xor
mov
jnp
test
lods
mov
rcrl
int3
rorl
cli
mov
push
push
add
dec
ss
inc
sub
sub
sub
dec
outsl
add
sub
out
add
xlat
sti
push
rcl
mov
scas
insl
lcall
inc
adc
xor
lods
mov
out
pop
inc
std
jae
dec
movsb
ret
cmp
gs
int
sbb
mov
mov
push
aad
jae
imul
and
mulb
in
scas
inc
xchg
pop
dec
iret
imul
in
mov
push
lods
aaa
dec
out
ljmp
jmp
or
hlt
cmp
fistps
out
dec
mov
sti
int
pop
cmp
inc
push
cwtl
cli
fs
roll
aad
cmp
fldcw
mov
cmp
sbb
mov
xchg
or
addr16
pmaddwd
cmpsl
scas
clc
test
sbb
jmp
xor
sbb
pushf
repnz
xor
dec
aas
repz
inc
adc
push
int
push
in
push
fyl2xp1
in
pop
dec
or
lahf
sub
es
cmc
fcmovne
int3
mov
imul
cmp
add
out
fisttpll
int3
jnp
lods
popa
jae
or
ja
mov
and
in
xor
mov
iret
jns
or
jo
and
pop
push
add
call
xor
inc
xorl
inc
or
sbb
xchg
add
test
push
stos
inc
inc
inc
ja
insb
xor
rcl
clc
into
cmp
sbb
punpckldq
cli
dec
lods
imul
xchg
push
jns
xor
push
testb
mov
jg
mov
add
mov
in
out
mov
pop
mov
cmp
mov
je
jecxz
pop
pushf
outsl
mov
je
push
sub
add
mov
lods
lods
cmp
push
rclb
xor
push
in
icebp
pushf
stc
push
call
mov
sbb
dec
sub
and
mov
push
pusha
or
xor
cmpsb
jae
adc
and
aaa
dec
and
add
mov
das
jp
pop
add
sbbl
mov
mov
and
xchg
orb
lret
adc
jecxz
adc
jg
or
mov
test
in
shll
or
cwtl
call
mov
fidivrs
xchg
mov
mov
ljmp
xchg
and
das
add
mov
outsb
jecxz
add
or
sub
daa
data16
ss
imul
int
pop
sub
jmp
and
fwait
push
inc
scas
mov
imul
loopne
cs
adc
mov
mov
fdivl
sub
mov
mov
stc
mov
push
cli
scas
push
sub
jle
mov
push
repz
je
mov
and
dec
inc
getsec
push
and
aas
testl
xchg
lret
jl
leave
les
in
jg
xchg
stos
lods
jp
add
mov
xchg
pop
inc
jmp
pop
jne
in
dec
push
mov
int3
outsl
fstps
cmp
add
dec
xor
push
xlat
lcall
sub
sbb
aad
std
and
clc
push
lret
callw
pushf
ds
add
ret
cmpsb
jnp
je
fmulp
cltd
pop
or
mov
sub
pop
insb
pusha
sub
xor
dec
mov
repz
shlb
addr16
xchg
mov
cli
es
xchg
hlt
push
aam
in
inc
dec
adc
pushf
mov
daa
push
popf
inc
xchg
sub
cmp
cmp
sbb
test
xchg
dec
fnstcw
out
loop
pop
test
scas
cmp
lcall
imul
rcr
arpl
movsb
or
dec
push
enter
stc
ja
repnz
cmp
pop
addl
push
stos
sbb
movsbl
jno
adc
divl
add
push
in
mov
cmp
pop
das
test
movaps
pop
mov
call
mov
adc
push
cmp
pop
fmull
dec
daa
add
addl
push
lcall
lods
icebp
aam
adcb
out
in
jge
mov
xorl
sbb
push
ret
out
add
ftst
mov
lcall
xor
sub
in
xchg
stc
jecxz
mov
xlat
ss
clc
popa
movsl
in
movsb
movsb
and
mov
fistl
call
movsb
lods
loopne
jns
xchg
es
cs
out
pop
pop
push
movsb
popf
notl
ds
sbb
aaa
subb
push
xor
sbb
add
dec
jno
fmull
add
sbbl
xchg
insb
push
jmp
jb
shll
fsub
sub
cmpsl
adc
fcomi
xor
and
xor
mov
orb
lods
dec
mov
pop
stos
sbb
cmc
pop
sbb
fnstsw
icebp
xchg
mov
push
and
xor
es
mov
int3
js
cli
outsl
push
mov
bound
jmp
mov
lret
mov
addr16
test
sub
lock
outsb
bound
ret
loopne
xor
stc
mov
sbb
insb
and
or
mov
movsl
mov
pop
dec
int
push
sti
les
mov
mov
xlat
sub
imul
cmp
pop
or
xor
sub
call
bsf
pop
scas
cmp
fstp
adc
std
into
mov
mov
addr16
aam
je
stos
pop
cmp
hlt
sub
jecxz
fimull
hlt
in
mov
in
mov
jecxz
ss
imul
lea
or
js
mov
jns
jmp
and
fldenv
jne
pop
mov
lea
out
and
ss
mov
fnstsw
test
pop
xchg
adc
in
jg
movsb
mov
inc
push
fistpll
xor
mov
pushf
xor
aad
mov
popa
jb
test
sub
out
imul
mov
in
loop
pop
mov
lock
jbe
scas
adc
fwait
cmp
jmp
push
sar
cmc
dec
lahf
xchg
pushaw
stos
pop
gs
inc
loop
mov
push
jl
imull
xor
loopne
push
mov
and
mov
mov
jbe
pop
mov
cmp
inc
cmp
out
fs
sti
imul
lcall
jl
pop
jle
subl
icebp
xor
sbb
clc
lahf
sbb
push
addr16
add
xor
or
lods
inc
inc
cmp
or
sbb
fcompl
mov
mov
ds
xchg
in
es
fisubrs
fsts
daa
loopne
je
repnz
lods
adc
loopne
mov
sbb
scas
leave
xor
aam
lcall
out
mov
mov
movsl
adc
pop
mov
imul
es
jbe
inc
mov
repnz
in
pop
pop
aam
test
inc
mov
das
loope
out
pop
in
insb
adc
iret
cmc
test
sahf
pop
mov
stc
fstpt
ror
push
mov
sub
push
xchg
mov
add
in
adc
push
xchg
shrb
mov
xlat
sbbb
mov
jnp
stc
dec
sub
pushf
pop
mov
add
popa
pop
jnp
ds
adc
xor
push
mov
adc
movsl
popa
jo
or
pusha
ja
test
mov
addr16
test
xchg
pop
push
xchg
repnz
xchg
call
mov
scas
adcb
xlat
lret
lds
add
jle
xor
loop
fistpl
jo
inc
add
mov
fldcw
fcmove
mov
inc
xchg
xor
sbb
scas
lret
xchg
cs
loopne
mov
ss
imul
adc
mov
dec
cld
xor
cli
jle
xchg
testb
outsb
out
ljmp
push
add
sbb
mov
mov
or
aaa
stc
iret
test
pop
stos
out
shll
call
jo
gs
mov
add
pop
sbb
mov
inc
or
ja
cli
das
fcoms
or
xor
das
repnz
mov
jg
iret
and
lds
into
ret
push
addr16
sbb
xor
cli
inc
ljmp
jle
cmp
inc
and
sub
and
andb
ss
add
push
pop
fcoms
xchg
or
sahf
leave
mov
clc
imull
xchg
rclb
inc
fs
pop
xchg
shrb
call
insl
push
lds
pop
mov
mov
push
sti
mov
imul
dec
xchg
ljmp
cltd
sbb
and
add
and
cmova
cld
pop
push
pop
jg
out
inc
test
push
hlt
mov
lcall
ja
jno
repz
inc
movsb
jmp
and
mov
movsl
mov
cmp
scas
add
cltd
cmpsb
add
in
and
jne
lock
insb
jo
movsl
and
xchg
mov
push
cmp
sub
outsb
lods
lcall
ds
movsb
xchg
das
fidivl
jl
cmp
ret
rol
sar
xor
ja
into
mov
dec
xor
rorl
xor
sahf
push
xchg
loope
call
jg
mov
and
loopne
cli
mov
sbb
in
das
dec
aaa
pop
mov
lods
push
sahf
fmuls
xchg
push
mov
into
sbb
mov
lods
mov
ret
xchg
and
jae
pop
inc
jb
sbb
insl
adc
push
fistpll
add
pop
adc
jb
ror
in
ficoml
mov
lds
adc
test
or
pop
fwait
add
nop
pop
scas
test
jmp
mov
and
repz
ljmp
in
test
stos
xlat
cmp
add
fistl
jg
insl
js
and
pop
cmp
sbb
jl
xchg
movsl
adc
imul
mov
fistpll
sar
ljmp
ss
aad
jnp
xlat
push
inc
cmp
adcl
pusha
std
cli
adc
mov
out
xor
dec
sub
subb
lret
add
mov
fadd
push
inc
ljmp
enter
decb
lods
sar
cltd
mov
push
sarb
cmp
stc
push
and
adc
and
xorl
dec
scas
das
cmc
out
pop
rol
int3
loop
setp
psubb
mov
sbb
or
adc
data16
andb
ret
and
popf
in
sti
icebp
sbb
insb
jmp
leave
jae,pn
mov
into
or
in
data16
jg
stos
and
push
xchg
cmc
rcrb
cmp
inc
call
incb
mov
adc
stos
daa
jge
push
mov
mov
push
and
xchg
test
adc
repz
lcall
mov
shll
ja
push
pop
xchg
xor
adc
mov
mov
jl
out
inc
icebp
sahf
cmp
ja
mov
outsl
and
enter
pop
mov
push
push
in
xor
and
inc
inc
cmp
outsb
stc
mov
and
js
jg
push
pop
imul
aad
add
hlt
or
jg
rcrl
adc
pushf
fidivrs
dec
fnstcw
aam
xor
addr16
fsubrl
mov
test
ret
mov
mov
mov
jb
mov
cs
mov
mov
cmp
add
fists
jo
ds
or
xor
cmp
outsl
dec
jge
mov
jle
adc
jle
mov
lea
fisubs
sub
dec
pop
fsubl
adc
add
daa
sahf
jp
dec
adc
fwait
inc
mov
sahf
adc
or
dec
incb
std
jne
push
sub
std
xor
scas
cld
leave
notl
sbb
lods
sub
repz
ja
jp
cmp
mov
nop
dec
sub
aad
jbe
aas
mov
sbb
pusha
mov
lock
push
push
mov
mov
rorl
clc
fcmovne
lret
push
repz
int
leave
daa
mov
out
cmp
cmp
push
and
and
clc
inc
mov
xchg
ss
iret
test
int
and
fiadds
add
fwait
lcall
addr16
test
rorl
int
ljmp
dec
push
mov
xchg
jg
pop
adc
cmpsb
les
and
dec
rol
fsubr
mov
cltd
fldln2
test
jo
arpl
in
punpcklwd
fstpl
movsl
jbe
out
jge
mov
push
loopne
xchg
push
add
or
mov
pushl
push
nop
jno
arpl
push
xor
inc
bnd
mov
jb
sti
jp
pop
sbb
mov
dec
jnp
dec
add
sub
sub
lds
or
jl
pop
shrl
jge
iret
inc
lds
jmp
cltd
push
orb
mov
push
cmp
or
gs
jl
nop
inc
jno
frstor
mov
sti
sbb
pusha
ds
es
pop
push
xchg
jmp
imul
xchg
mov
lcall
lods
fldl
dec
push
test
insl
xor
inc
repnz
repnz
stos
and
jbe
inc
daa
addr16
cmc
iret
inc
orl
loop
cld
cmp
arpl
cmc
sbb
stos
das
adc
aas
cs
push
push
js
cmp
pop
loop
xchg
mov
push
jo
inc
or
stos
enter
xor
out
out
pop
or
fcomps
test
adc
and
and
repz
push
lcall
sti
cmp
xor
mov
pusha
xor
mov
hlt
jmp
mov
and
inc
ret
adc
xor
mov
cmp
dec
sbb
push
push
jge
pop
add
outsb
nop
jne
push
or
mov
cld
mov
faddl
and
sub
fisubrl
mov
push
and
hlt
pop
cld
popf
mov
or
jne
data16
fidivrl
imul
jns
adc
jmp
outsl
insl
mov
add
fsubrp
lret
ja
outsb
and
xchg
cmp
xchg
repnz
jnp
xor
mov
jp
cmp
adc
pop
or
push
lahf
sahf
cmpsb
push
sbb
sbb
xor
loop
dec
pop
cmp
adc
jb
lods
ret
xchg
in
mov
dec
push
pop
decl
out
pop
pop
or
ss
jle
popf
and
leave
sbb
idivb
es
aam
pop
or
xchg
inc
push
push
pop
mov
bound
aad
sub
fwait
pop
fnstcw
pop
lret
mov
sub
sub
or
rcrb
pop
lods
xchg
in
add
aam
inc
arpl
xor
mov
fisubrs
into
push
xlat
cli
pop
adc
aas
enter
and
mov
lret
push
sbb
sub
jae
push
ja
incl
xchg
push
cli
jnp
mov
stos
jg
add
mov
sahf
inc
xor
outsl
mov
xor
and
lods
or
sub
cli
and
mov
mov
call
nop
mov
cmp
mov
mov
loop
loope
xadd
mov
mov
aam
sahf
cmp
in
mov
and
outsl
cmp
jmp
call
sub
add
repnz
xchg
cmp
pop
test
pop
cmc
pop
std
movsb
aaa
add
mov
mov
sub
sbb
add
mov
pop
out
loop
pop
ret
gs
pop
xchg
dec
cld
push
fistpl
jp
imul
ret
push
dec
sahf
cmp
add
cmpsl
and
cltd
movsb
sub
mov
mov
js
jo
jmp
cmpsl
insl
jmp
adc
add
hlt
xor
sbb
lret
das
cli
lods
jecxz
mov
dec
inc
shll
jb
adc
sub
fwait
andb
cmp
jg
sarb
and
sbb
xchg
ficoms
add
sub
out
pushf
dec
mov
fs
aam
mov
xchg
pop
adcl
outsl
push
add
jo
test
xchg
fistl
out
ljmp
and
mov
xor
outsl
pop
fwait
das
popf
popf
incl
xchg
jl
push
sbb
mov
aad
pop
fadds
xchg
imul
jp
jmp
andb
es
or
mov
jmp
dec
stc
xchg
pop
outsl
sbb
dec
scas
sub
je
int
push
scas
imul
cmp
insb
dec
mov
pop
mov
insb
sub
loope
imul
push
insl
mov
jns
sti
test
sub
cmpsb
xor
mov
lcall
jns
ljmp
jecxz
ja
mov
push
sub
xor
cmp
fldenv
insb
sti
dec
js
and
or
fwait
dec
dec
nop
sub
push
mov
hlt
inc
dec
sub
es
add
adc
adc
mov
sub
inc
xor
movsl
jae
rcrl
sub
fsubrl
es
push
and
push
out
dec
cli
shlb
ret
scas
jns
sbb
mov
stc
lods
icebp
fsub
pop
jmp
movsl
mov
fldenv
push
inc
arpl
inc
cmp
sub
sbb
lahf
xor
jge
push
mov
push
xchg
cmpsl
fsubrl
popf
and
insb
pop
leave
fldcw
mov
arpl
inc
add
dec
mov
adc
pop
dec
add
or
aaa
sbb
cmp
mov
push
jl
mov
dec
add
leave
arpl
nop
aaa
sub
iret
fisubs
push
xor
push
or
lahf
push
xchg
xor
push
sbb
gs
mov
mov
rcrb
xor
adc
int3
and
fwait
into
or
jg
pop
loop
add
inc
inc
xchg
jnp
stos
adc
add
dec
mov
xor
xchg
pop
fnstsw
add
sahf
push
dec
and
ss
mov
or
mov
sahf
mov
popf
mov
out
ret
sbb
out
clc
pop
ja
movsb
mov
dec
loop
adc
xor
add
dec
jae
cwtl
mov
push
fcomi
sbb
fldcw
ret
lret
loopne
fdivrl
div
add
mov
mov
imul
bound
xchg
aas
arpl
int
test
in
data16
push
inc
cmpl
cmp
xor
jne
dec
call
sub
and
xchg
pop
mov
and
lahf
insl
mov
sub
movsb
jecxz
incl
pop
or
jecxz
or
push
mov
mov
pop
and
fwait
xchg
pop
push
mull
pop
cmp
mov
mov
out
mov
jl
jbe
mov
pop
pop
mov
std
cmc
mov
xor
add
pop
xor
jno
out
lea
mov
sub
jbe
or
cs
mov
cmove
fs
push
popf
push
cld
aam
mov
imul
adc
lock
leave
scas
test
cld
lcall
xchg
mov
nop
xor
call
leave
hlt
repnz
jecxz
cmpb
adcb
inc
sub
fsubrs
pop
stos
loop
xlat
fsubl
inc
jbe
push
bound
roll
sub
lds
out
or
fistl
xor
into
shrb
mov
mov
insb
test
mov
testl
cltd
dec
jl
lahf
jecxz
int
pop
mov
roll
push
push
dec
xchg
scas
test
xchg
jnp
cld
dec
xchg
mov
mov
jae
add
pop
test
push
jb
sbb
addr16
cmp
or
adc
cmp
lahf
test
and
sbb
pop
push
mov
mov
xor
mov
xor
int3
cmpsb
mov
subl
pushf
jl
push
sub
mov
mov
std
inc
movsb
inc
movsl
lods
ss
call
jne
xchg
mov
mov
or
pop
sbb
ljmp
iret
sbb
pop
in
push
mov
and
repz
pop
mov
inc
mov
mov
pop
imul
int
and
mov
pop
xchg
sbb
add
push
cmpw
pushf
ja
push
das
ret
les
and
aam
push
inc
int3
inc
arpl
outsb
test
sbb
lret
or
imull
mov
dec
insb
in
scas
xchg
lahf
cwtl
insb
push
sub
or
cs
in
sbb
mov
cltd
int
cmp
rolb
mov
push
popa
aad
push
push
mov
fsubl
add
push
mov
hlt
rol
mov
arpl
test
pop
mov
jp
xor
hlt
movsl
xor
and
add
lcall
pop
push
fldt
das
mov
popl
sbb
aad
fists
popa
jns
cmp
mov
inc
test
cmp
jno
or
jno
mov
xor
push
adc
and
add
mov
lods
rdpmc
ds
sbb
stc
insl
ficomps
pushf
andl
sbb
sub
es
dec
dec
insb
mov
and
pushf
data16
insl
cmp
dec
and
mov
mov
inc
push
inc
cli
jb
cmp
or
sub
add
dec
pop
sbb
popf
pop
nop
test
and
rcl
xchg
xchg
or
mov
xor
clc
jp
push
xlat
xchg
out
repz
jle
into
push
mov
lods
mov
dec
xor
or
cmc
push
into
enter
jae
cmp
outsb
inc
push
add
jge
or
scas
loop
int
je
shrd
mov
inc
lea
lds
mov
mov
lret
nop
stc
lods
sub
mov
mov
and
nop
xor
in
pop
jb
xchg
aas
mov
shll
and
xchg
xchg
xor
jo
cmp
bound
cs
mov
leave
sarl
fsub
fstps
cmpsl
xchg
pop
test
inc
mov
mov
stos
mov
and
add
mov
mov
mov
stos
outsb
insb
inc
mov
movsl
pop
cmp
lds
pop
xchg
lea
push
xor
mov
push
lock
xchg
dec
stc
inc
jle
cwtl
ljmp
inc
inc
xor
scas
push
push
cmp
in
popf
insl
addb
daa
push
mov
xchg
push
jns
mov
mov
std
cmp
sbb
loop
mov
in
in
shl
dec
dec
insb
lea
sub
add
mov
xchg
lds
xlat
xor
call
cltd
pop
pop
imul
pop
pop
ja
mov
in
sbb
pop
repz
xor
repz
pusha
xor
fstps
or
mov
dec
emms
mov
pop
adc
push
lods
mov
xchg
xchg
pushf
or
inc
jp
jo
ret
int
adc
mov
int3
les
mov
out
sbb
xchg
negb
ss
das
cmp
or
inc
mov
dec
cmp
cwtl
dec
out
jbe
stos
add
pop
das
jg
sub
inc
push
xor
mov
cmp
lret
adc
incl
mov
jle
cli
xchg
pop
sub
jge
pop
lret
int3
inc
and
orb
arpl
push
dec
xor
lahf
out
repz
dec
in
bound
xchg
lret
cmpsb
leave
mov
push
xchg
push
inc
xor
cmpsb
insl
inc
push
jecxz
sub
cli
mov
push
je
aam
cltd
out
mov
ss
idivl
push
inc
jecxz
push
jns
lods
xchg
mov
add
xor
xchg
test
and
push
ficoml
mov
adc
mov
sbb
pop
pushf
push
push
data16
les
inc
fisubrl
ljmp
add
je
pop
xchg
ds
in
sti
das
jae
testb
add
in
mov
clc
xchg
wrmsr
push
icebp
pop
add
and
cmp
xchg
shlb
in
sbb
test
xlat
xchg
add
mov
arpl
mov
lcall
imul
fs
or
xor
jge
mov
mov
sub
mov
adc
xor
pop
out
movsl
and
dec
lahf
cmovno
test
push
inc
add
jge
pushf
stc
xchg
add
out
add
push
add
mov
fildl
xor
cmp
loope
aaa
jne
jge
sbb
push
push
in
and
js
in
shlb
or
repnz
es
xor
xchg
cmp
mov
clc
cmpl
mov
xlat
dec
outsl
stos
pop
subl
xor
pop
pop
push
xchg
mov
loop
into
sti
sub
cmpsb
mov
mov
mov
ja
lahf
out
mov
mov
ud2
adc
mov
test
add
out
mov
mov
add
push
fwait
sbb
xchg
imul
loope
out
and
lcall
inc
cmpsl
xlat
pushf
scas
imul
cmp
stos
pop
xor
or
xchg
lods
inc
mov
call
jp
cmp
test
and
roll
arpl
lea
imul
pop
add
test
orl
in
jae
jle
icebp
out
testb
push
in
icebp
cmp
iret
testl
cmp
mov
dec
out
shll
data16
sbb
rclb
dec
cmpsb
inc
mov
mov
repz
and
sarl
loope
in
jmp
std
aad
fisttpll
xchg
ret
in
push
mov
popa
pop
sti
add
popf
cmc
xchg
jp
scas
lret
popa
mov
add
push
pop
loope
loop
mov
jne
rorb
sub
mov
xchg
sete
push
adc
cmp
sub
push
sbb
in
dec
in
cmp
jbe
push
add
dec
shl
mov
fsubrs
in
cmp
xor
jae
push
dec
add
jl
inc
in
orl
sub
out
ret
pop
leave
mov
insb
shlb
jns
mov
adc
fld
in
sub
adc
lods
loop
mov
jl
jecxz
dec
sahf
push
les
push
loop
adc
das
bound
out
fwait
fs
nop
jne
cli
dec
int
int
mov
adc
mov
wrmsr
xchg
xchg
lcall
popa
imul
cld
and
movsl
or
ljmp
out
or
jg
pop
xor
jo
or
or
sub
ret
or
add
fdivrl
ret
lods
dec
push
sub
test
xorl
hlt
mov
test
test
ljmp
movb
xor
inc
inc
push
out
stos
jl
xorl
mov
in
movsl
adc
movsb
jmp
pop
clc
pop
dec
aam
sbb
cld
push
sbb
push
lahf
dec
movsl
lds
and
pop
das
lret
sbb
cmpsl
into
adc
mov
jae
inc
in
lea
cmc
stc
loope
aas
adc
mov
adc
sti
rol
sahf
jnp
scas
push
in
in
jns
dec
pop
scas
aas
mov
lds
sub
and
jle
in
push
inc
loope
cmc
mov
cmpsl
ror
pusha
push
sbb
aad
out
fmull
arpl
mov
mov
in
sbb
xchg
test
sub
icebp
and
xchg
or
mov
rclb
mov
nop
jmp
xor
xchg
loope
aad
push
lock
pop
xor
dec
popa
stc
shll
xchg
xchg
dec
daa
sbb
dec
cmpl
shrl
je
mov
push
andb
and
jno
pop
sbb
fpatan
mov
add
jmp
addr16
pushf
out
xchg
cmpsb
inc
xor
stos
xor
cmp
test
add
cmp
fnsave
mov
arpl
movl
xor
xchg
addl
es
mov
push
dec
les
shll
cmc
push
mov
mov
sub
les
push
add
out
cmp
outsb
icebp
fisubrl
and
sbb
sbb
xor
out
cmp
mov
ret
lods
cmc
loop
xlat
ret
push
test
adc
lahf
out
pop
sbb
cltd
pop
lds
ror
sub
push
in
ror
ja
out
mov
sub
pop
fdivp
push
movsb
sbb
dec
ss
cmpsl
sbb
cli
enter
inc
cmc
and
lods
dec
pop
pop
cmp
xchg
push
inc
lret
testb
cwtl
sbb
orl
out
neg
testb
addr16
sbb
insb
outsl
xchg
mov
xlat
sub
ret
jb
pop
shlb
mov
adc
add
bts
scas
cmpsl
sbb
je
xchg
xor
repz
mov
subl
sbb
dec
mov
daa
pop
xchg
cmp
insl
push
push
out
xor
cmpsl
fs
mov
movsb
lret
inc
cltd
sbb
call
mov
pop
out
add
adc
sbbb
inc
clc
pop
push
xlat
mov
mov
sti
lock
es
fadd
imul
add
loopne
cmp
lock
jmp
or
mov
push
cmc
mov
or
cmp
gs
inc
es
out
loopne
outsb
jbe
xchg
lahf
aad
cmovnp
mov
jl
jge
out
and
stos
jns
cli
mov
popf
loop
mov
xchg
popa
stos
cltd
xchg
jg
stos
addr16
lahf
iret
pop
dec
testb
jge
frstor
out
dec
cmp
mov
testb
ds
addr16
add
dec
add
sub
xor
adc
jmp
mov
gs
ror
rep
in
data16
fstps
rcl
dec
and
mov
or
rorl
lods
pop
daa
loope
lock
int3
mov
shr
jl
sub
adc
scas
lahf
sarl
mov
je
sub
cmp
orl
mov
xchg
shlb
cmp
pop
push
push
jne
dec
push
int
xchg
ret
arpl
shlb
lea
pop
lock
xor
push
sbb
push
rorb
and
xor
cwtl
aad
pop
jae
dec
dec
inc
mov
mov
test
mov
sub
xchg
jae
dec
lods
or
lahf
test
mov
das
arpl
pop
push
push
mov
fwait
adc
lcall
test
mov
filds
jmp
xchg
lret
inc
ss
ljmp
inc
fsubl
inc
adc
aad
push
and
stos
adc
mov
call
pop
pushf
inc
lods
lret
lds
and
xchg
or
push
adc
dec
arpl
mov
shlb
jne
lcall
cmpsl
adc
mov
sub
jg
xor
xchg
pop
aaa
sarb
xchg
mov
insb
lcall
mov
jno
jp
popf
pop
sub
xchg
jp
or
insb
stos
out
movsl
in
les
ficomps
jnp
scas
roll
or
add
shll
push
loop
pop
mov
pop
mov
fcoml
mov
aam
popf
mov
test
mov
inc
mov
fwait
mov
sub
cmpsb
and
movsl
sbb
lods
scas
mov
bound
inc
pop
xchg
loope
sbb
jae
sub
pop
or
loop
cs
es
insl
and
and
gs
outsl
add
cs
cmpsb
push
lcall
xchg
fstl
loopne
lds
dec
cmc
mov
scas
imul
mov
xchg
sbb
cltd
fiadds
rcll
dec
ret
sahf
mov
lods
add
addr16
aas
xor
and
fwait
aam
loope
lods
loopne
popf
or
ret
and
in
push
add
inc
xlat
lods
jmp
ss
or
mov
aam
jge
xchg
push
les
jne
push
inc
xchg
scas
push
lock
adc
sbb
xor
cli
cmp
stc
xor
add
and
push
and
mov
cmp
fsts
push
cld
in
in
xor
sub
mov
adc
mov
cmp
ror
iret
insb
mov
cmc
nop
cmp
sbb
pushf
and
mov
ret
sarb
jae
cltd
jmp
cmp
leave
lret
aas
or
out
leave
dec
xchg
xchg
cmpsb
mov
pop
lahf
shll
leave
cmp
mov
push
xor
sub
les
inc
mov
imul
fsave
sbb
add
push
mov
or
push
jg
repz
or
xor
cmpsb
sahf
pop
cwtl
push
cli
imul
movsl
outsl
dec
in
dec
mov
sarl
repnz
inc
inc
in
push
ljmp
xchg
xor
or
aas
or
jg
lret
or
out
xor
int3
and
jno
pop
ljmp
stc
dec
pop
dec
jecxz
lret
test
mov
pop
leave
jo
arpl
xchg
mov
outsl
adc
lcall
jo
push
int
std
push
push
add
xchg
rol
push
push
andl
fmul
mul
or
test
sbb
mov
out
push
in
inc
xchg
push
js
jl
jno
inc
das
pop
xchg
xor
push
sub
jge
loope
scas
orl
mov
add
push
xor
or
fprem
mov
pop
enter
cmp
adc
cs
clc
iret
ds
jae
cmp
test
sbbl
rcrl
movsl
arpl
aas
push
xchg
jne
loop
ss
fcomps
fcom
cli
repz
out
sbb
sbb
cmpsb
sbb
popl
add
out
pop
sub
xor
jle
rorl
sub
jecxz
xor
xor
push
fldenv
cmp
stos
jle
imul
jbe
aaa
dec
pop
lahf
pop
test
movl
cmp
xchg
jbe
fldenv
jb
pop
sub
dec
mov
cmp
out
pushf
push
out
adc
sub
int
orl
aaa
mov
dec
fwait
test
lahf
daa
or
jmp
loope
sub
mov
mov
cld
xchg
pop
sahf
sbb
or
fadd
sub
push
clc
xlat
test
adc
adc
xor
orb
insl
aad
repnz
test
sbb
xor
mov
and
cld
fisttps
rep
xchg
push
mov
xchg
push
clc
add
xchg
xor
sti
sbb
fnstenv
sahf
cmp
push
popa
arpl
idivl
ret
loopne
mov
sarl
pop
lods
lock
lahf
popf
cmp
ljmp
repnz
out
pusha
xor
mov
pop
sub
push
and
clc
adc
cmp
mov
or
mov
cmp
xchg
dec
popf
adc
push
sub
fcoml
dec
or
sbb
rorb
push
jecxz
stc
sbb
cli
dec
sbb
jbe
cmp
pop
mov
sbb
jmp
adc
jae
or
sbbl
sub
scas
dec
jno
les
sahf
sbb
rorb
in
add
push
iret
popf
enter
jmp
cmp
and
or
xchg
lea
sub
push
cs
jb
push
imul
jge
xchg
xchg
jmp
mov
push
nop
outsb
pop
jno
adc
cmc
pop
cmp
and
les
adc
icebp
pop
pop
or
lods
sbb
dec
movsl
aad
out
je
cmp
insl
mov
or
cmp
jge
movsl
fiadds
stc
xchg
pusha
sbb
mov
pop
mov
lret
icebp
std
pop
lahf
xchg
push
test
ret
call
mov
mov
adc
pop
adc
sbb
daa
shrl
insl
sarl
mov
inc
and
test
cmc
ds
adc
stc
mov
pop
js
mov
clc
aas
jp
mov
mov
jle
clc
sub
popf
jmp
repz
jbe
push
pop
rolb
lods
cmp
dec
pop
lods
leave
or
xchg
pop
xor
fsubr
cmp
lods
sbb
cli
mov
movsl
push
mov
sbb
cmpb
jp
dec
and
out
jo
pop
jmp
and
dec
out
adc
jg
mov
pop
xchg
bound
lods
pop
jns,pt
mov
add
dec
pop
cmp
xchg
in
repnz
jle
push
dec
xor
sti
enter
xor
ret
std
imulb
loopne
sbb
mov
mov
add
add
addr16
push
xchg
fcmovnu
xor
stc
insb
fs
notl
out
mov
loopne
aaa
inc
outsb
arpl
jmp
dec
pop
imul
inc
lods
orl
test
xorl
cmpsb
mov
into
jmp
ret
jno
push
leave
and
mov
adcb
mov
inc
in
insb
xor
sbb
mov
fcmovnbe
scas
stos
or
outsb
mov
pop
sbb
sbb
xchg
or
insl
jecxz
lret
push
mov
pop
sahf
jns
cmp
push
adc
mov
fwait
shrl
repnz
push
leave
cli
fldt
test
mov
roll
lret
stos
sbb
xchg
call
lret
adc
mov
pop
nop
mov
sbb
test
cli
sub
stos
sbb
insb
pop
mov
jge
mov
sahf
outsb
xchg
pop
xor
mov
in
adc
push
inc
dec
mov
xchg
push
push
addr16
dec
scas
ds
xchg
inc
les
jmp
ret
xchg
mov
dec
mov
iret
test
mov
adc
jb
xor
cmpl
push
add
push
ret
xor
daa
iret
push
jo
xchg
inc
add
mov
out
ficomps
xor
pop
jg
flds
out
pop
in
outsb
fsubrs
dec
stc
sub
ret
gs
xor
jl
jnp
lods
jo
or
jb
mov
xlat
nop
rcrl
popf
jle
jecxz
loop
push
pop
inc
push
mov
sub
cmp
jl
sub
sub
adc
mov
xchg
pop
sbb
inc
push
cmp
cld
cmp
dec
xor
outsb
out
cld
nop
std
cmpsb
mov
mov
loope
dec
dec
mov
ss
mov
jecxz
cwtl
push
sub
inc
add
sub
sub
mov
sbb
loope
lcall
and
mov
adc
pop
cwtl
out
js
cmc
ret
xchg
push
out
sarb
xor
lahf
mov
jae
fs
and
loop
lcall
xlat
sbb
xchg
adc
jno
or
sbb
data16
cmp
dec
xchg
adc
push
lods
cltd
adc
nop
mov
push
jp
or
stos
xor
stos
andl
fcomp
add
insb
mov
loop
sbb
jl
fs
lds
push
gs
pop
sub
into
jbe
pop
xchg
loop
and
out
jo
pop
cmpsl
lods
std
mull
movsb
loop
mov
and
ja
or
mov
outsb
int
cmpxchg8b
movsb
enter
adc
lahf
inc
jmp
cmc
jne
out
xor
test
xor
pop
xchg
mov
xlat
adc
or
pop
adc
stc
ss
mov
mov
adc
test
test
xchg
int3
xchg
pop
jge
clc
sbb
inc
in
dec
aas
scas
fimuls
sub
and
fbld
pusha
aad
fimull
pmullw
mov
jbe
jle
inc
sub
xor
iret
and
outsb
addl
inc
loop
and
jae
mov
loope
inc
and
cld
out
sbb
je
inc
adc
mov
and
jge
xchg
add
andb
cmpsb
idiv
mov
fldl
xor
loopne
lcall
pop
cmp
sbb
push
cmpsb
pusha
sub
fcoms
mov
in
pop
divb
pop
pop
mov
jecxz
fstl
pop
sbb
mov
jmp
mov
or
fdivl
sbb
and
repnz
jnp
add
shr
adc
and
add
lods
jmp
jp
and
inc
jmp
in
xor
in
inc
cmp
fcoml
mov
insb
adc
sbb
jp
mov
addr16
and
loopne
pmaxsw
mov
push
lret
add
xor
ror
rcrb
xchg
pop
mov
ss
xchg
addr16
fcmovne
in
fcomps
shl
in
int
and
dec
mov
cmc
dec
pop
jno
pop
test
psubb
and
jno
aas
sahf
jge
push
push
push
xchg
sub
adc
lret
add
bound
in
out
dec
mov
pop
adc
xchg
jno
xor
xchg
cmp
in
pop
mov
inc
adc
cmp
lds
xor
or
push
fs
push
or
arpl
cltd
mov
dec
xchg
mov
sbb
repnz
insb
adc
jae
movsb
das
ss
outsl
mov
iret
out
gs
mov
icebp
xchg
cmpxchg
mov
pop
movsl
repz
cmpsl
pop
push
pop
ds
adc
mov
dec
cltd
xchg
jae
lahf
jae
mov
bound
sti
cmpb
loop
call
mov
add
add
mov
push
or
std
test
divl
jp
arpl
sub
push
scas
ljmp
fs
push
punpckhbw
xchg
add
jne
or
enter
inc
dec
mov
inc
or
adc
dec
jp
dec
mov
sub
mov
pop
ret
pop
add
xchg
xorl
scas
push
lods
ret
mov
mov
mov
mov
adc
lcall
insb
rcrl
mov
scas
xor
mov
adc
cmpsl
arpl
shl
jnp
sbb
sarl
in
xchg
sti
mov
or
sub
vminss
loop
cmpsb
adc
push
orl
ret
push
lret
xchg
fdivs
cmp
jnp
sbb
jae
mov
stos
fmull
push
imul
bound
lods
in
or
cli
repnz
jle
mov
sbb
mov
in
mov
loope
sub
xchg
ret
xchg
push
fsts
std
xchg
mov
aaa
fxch
lret
cli
lcall
sbbl
xchg
das
mov
xchg
arpl
imul
sub
popa
sbb
sub
stos
hlt
je
add
adc
lcall
sahf
dec
movl
mov
mov
push
jo
dec
mov
test
sub
xor
dec
pop
mov
jns
fdivrs
cmp
sti
or
mov
mov
ret
or
mov
cli
cmp
lock
into
cmp
jb
jmp
and
inc
jae
jg
xchg
xor
or
mov
xor
in
cmpsb
jns
add
sub
sub
push
or
xor
rol
out
insb
push
sub
inc
adc
pop
add
iret
jp
bound
adc
movsb
push
sarl
nop
and
dec
push
mov
add
ljmp
pusha
fldcw
rorl
mov
jmp
inc
and
jl
jae
push
fs
jns
xchg
aam
rcll
adc
dec
cmp
aaa
inc
adc
hlt
push
xchg
pop
push
aam
or
mov
cmp
out
inc
bound
add
xor
in
enter
cs
push
in
or
lret
je
mov
andl
test
push
shrb
data16
mov
cltd
lock
mov
xchg
push
in
out
mov
sub
sub
aam
ret
jp
pop
push
mov
aaa
lods
cmp
xor
inc
and
nop
dec
pop
fcompl
stos
dec
movsb
push
ja
or
cmc
movsl
jp
pushf
mov
test
fidivs
add
jb
test
jnp
out
jmp
pop
inc
dec
les
repnz
out
std
add
adc
lret
pop
push
loop
and
push
sub
fndisi(8087
inc
xchg
and
sub
jns
jnp
add
xorl
sqrtps
jo
inc
test
addr16
cmc
sub
inc
mov
idivl
ja
movsb
xchg
pop
shlb
mov
shrb
clc
jg
jp
ret
test
lods
xchg
addr16
sub
or
mov
or
enter
stos
push
shll
fs
rcll
rcrb
scas
addb
add
arpl
rcll
outsl
enter
jmp
pusha
outsb
cwtl
call
and
fisttpll
mov
mov
outsb
cmp
pop
pop
scas
xchg
fdivrl
sahf
nop
push
inc
clc
xchg
cmp
fstps
sbb
add
or
ret
lods
jecxz
mov
pop
cmpsb
cmc
push
pop
cmp
shll
mov
xor
cmpl
push
int3
push
xchg
xor
xchg
pop
je
loope
xorl
adc
iret
mov
xlat
adc
push
int3
iret
lock
fucomi
adc
xchg
adcl
sti
adc
cmp
jae
cs
or
pushl
xor
mov
cwtl
ljmp
ja
mov
jns
dec
cmp
push
pop
add
addb
int
jp
pop
stos
jecxz
sbb
ret
inc
jg
mov
scas
and
fisttpl
shll
mov
dec
movsl
nop
das
xor
mov
aad
sub
jecxz
inc
mov
jnp
test
xor
leave
pop
sbb
es
pop
sahf
jbe
insb
call
adc
cli
lahf
movsl
sar
sbb
mov
mov
loop
dec
sbb
shll
cmp
mov
enter
pushf
and
xorb
ficoms
testb
iret
and
popf
cltd
test
imul
aam
xor
mov
js
call
clc
sbb
in
dec
add
lahf
pop
pop
xchg
push
int3
sub
sbb
punpckhbw
sub
in
lret
mov
rcrl
lret
mov
jbe
dec
cli
scas
js
pop
push
xchg
shl
or
idiv
repz
jle
xor
popf
in
mov
push
push
in
std
pop
dec
loope
arpl
sahf
pop
push
or
std
movsb
push
mov
jbe
mov
mov
or
bound
mov
and
mov
inc
mov
mov
pop
push
ss
jg
mov
insb
cmp
leave
mov
test
pop
dec
movsl
jnp
mov
enter
sbbl
pop
xor
repnz
in
ret
pop
add
frstor
std
gs
jmp
and
rcll
jmp
mov
ss
xchg
pop
xor
adc
cmp
pop
pop
dec
sarb
xor
xchg
inc
sahf
add
test
ficompl
repz
cltd
push
mov
std
std
jp
nop
pop
int
or
jae
data16
mov
add
stos
ljmp
aam
outsb
pop
mov
pushf
fdivrp
jns
sbb
loop
xor
lods
fistpll
and
fs
and
ret
sbb
push
or
sbb
jg
cmpsb
cmp
mov
int
and
adc
mov
fisttps
dec
xchg
lea
jnp
and
es
mov
adcb
outsl
mov
fs
add
or
sbb
mov
push
arpl
enter
iret
dec
sbb
xchg
push
call
lea
mov
mov
sub
hlt
pop
inc
mov
into
push
movl
pop
repz
pusha
inc
loopne
sarb
xor
xor
into
xchg
out
push
fmuls
cmp
sbb
dec
sub
shr
jno
sub
dec
mov
sbb
int3
sbb
in
pop
or
add
sub
popf
mov
add
fcmove
scas
adc
jne
jle
out
lcall
rcl
mov
pop
inc
xor
mov
aam
bound
inc
push
std
out
enter
cmp
jle
jl
push
xchg
cmp
xchg
mov
insb
dec
les
xor
sub
test
lret
les
or
movsl
mov
test
adc
xor
jne
sub
inc
js
icebp
cld
out
mov
sub
out
jae
or
pop
add
imul
insb
fistl
inc
loopne
nop
mov
cmp
jae
js
ffree
lret
xchg
dec
dec
inc
mov
inc
repz
out
movsl
mov
dec
dec
jne
cli
insb
pushf
imul
aam
mov
in
pushf
loopne
insl
cmp
mov
xchg
aaa
push
fisttps
cmc
mov
ret
and
sbb
xchg
rclb
lods
sbb
enter
adc
std
lea
enter
and
lods
xor
add
gs
int3
adcl
imul
es
sbb
hlt
or
jle
xchg
pop
int
and
fbld
push
push
loopne
mov
pop
nop
cmp
mov
mov
fistpll
or
and
insb
mov
and
cmp
jl
or
cmp
sub
lods
mov
shl
nop
fwait
stos
and
jnp
adc
sub
sbb
xorl
jecxz
push
dec
dec
push
ja
jmp
add
sbb
nop
cmpsb
loopne
push
pop
aaa
dec
orb
jns
rorb
popa
inc
dec
cltd
inc
mov
and
adc
dec
add
mov
sbb
cli
xchg
es
test
pusha
ja
das
stos
jg
test
out
cmp
cmpb
sbb
fwait
fwait
arpl
in
push
rcl
xlat
scas
pop
aam
movsl
lcall
sub
xor
test
sbb
je
sub
roll
addr16
fisttpl
lcall
dec
mov
mov
insb
mulb
jnp
dec
frstor
aam
xchg
cmpsl
jne
mov
fldt
hlt
xchg
mov
mov
flds
pop
rcrl
add
jo
scas
cli
jns
test
int
jae
in
addr16
clc
mov
pusha
aam
dec
lret
aad
das
cltd
lds
xchg
insl
add
ja
pusha
add
xlat
xor
sbb
test
and
inc
jl
add
insb
cmpb
push
pushf
pop
sbb
cmp
sbb
add
xor
test
movsb
into
add
add
in
xor
mov
jns
inc
nop
mov
push
adc
mov
push
sbb
push
popa
dec
mov
add
add
movsl
lods
cmp
mov
push
pop
stos
in
lcall
adc
add
push
xor
jmp
xor
lods
das
push
xor
bnd
sub
cmp
popa
fnstsw
test
shll
mov
mov
jbe
and
mov
ds
rclb
cmp
sbb
xor
mov
push
cmp
lds
ret
popf
jbe
loop
cmp
cs
movsb
adc
fwait
jne
aaa
jns
cmp
imul
aam
jns
mov
mov
adc
fiaddl
mov
mov
shr
pop
xchg
lods
mov
xor
cli
test
shr
add
mov
jae
pop
insb
shl
sbb
lea
pop
dec
cmp
mov
fadds
int
ret
pop
fmuls
jle
aad
std
mov
cmp
mov
jb
dec
cmpsl
rol
jle
push
pop
cmp
push
mov
mov
or
push
fidivl
mov
dec
mov
aad
ds
pop
push
xor
fistps
and
je
inc
fadd
fdivrl
or
dec
pop
testb
rcl
gs
xor
addr16
and
jle
mul
loop
add
mov
xor
mov
add
notb
add
mov
cmp
xor
jnp
and
sub
lods
mov
jp
das
dec
mov
inc
mov
int3
xchg
or
and
fsubrs
jo
add
rol
cmp
xor
jecxz
mov
push
push
mov
push
cli
jb
and
sbb
sahf
movsb
xchg
cs
and
jae
sub
inc
dec
cmp
jp
outsb
out
in
mov
in
inc
movsb
shrl
mov
int3
push
xchg
rcrl
adc
js
cmpsl
xchg
in
xchg
ja
push
fs
mov
movntps
add
push
mov
xchg
push
sarl
out
mov
jl
cmpsl
add
push
and
sub
xchg
aas
gs
add
pushf
xchg
inc
faddl
bound
popa
jae
xor
rcr
cmp
mov
rcl
dec
sub
fistpll
es
cld
sbb
sahf
stc
das
pop
fnstsw
lahf
in
dec
hlt
push
mov
sbb
int3
adc
xchg
sub
stc
push
out
shrb
pop
push
stos
mov
mov
les
adc
lcall
cmp
mov
js
dec
test
push
mov
jge
mov
dec
pop
mov
loop
scas
lds
xchg
dec
filds
cs
inc
jge
test
out
int
xchg
inc
jb
ss
movsl
repz
or
cmp
or
scas
in
mov
dec
dec
inc
fmuls
pusha
dec
mov
and
cmp
js
js
xor
dec
stos
imul
cs
push
outsl
test
mov
fs
repz
arpl
adc
add
dec
or
push
aas
xorb
in
nop
and
jp
sbb
fcmovb
out
sub
int
cmpsb
pushl
jbe
add
xor
add
cmpsl
pop
inc
cmpsb
imul
imul
es
mov
and
and
std
in
outsl
adc
hlt
xchg
fiaddl
push
jp
iret
popf
fldt
sub
in
sub
lcall
les
out
pushf
jecxz
inc
jl
push
in
jmp
std
in
ds
movsl
fs
jnp
cmp
or
jns
cli
int
aad
imul
aaa
shrb
gs
mov
les
out
push
cmpsl
orb
and
mov
lods
popf
cmp
test
stos
shrl
inc
mov
and
cmp
call
in
addr16
shr
mov
mov
mov
xchg
jns
rcrb
imul
fistpll
sbb
xor
cmp
sbb
or
js
lcall
fstps
int
add
xchg
adc
xor
aaa
push
adcl
push
out
fistpl
push
dec
dec
sarl
pop
push
test
out
popa
mov
daa
push
in
test
pop
pop
push
mov
lret
mov
inc
inc
adc
clc
faddl
jecxz
mov
and
js
mov
cmp
stos
and
test
cld
test
fistl
lahf
dec
aad
cmc
rclb
pop
test
shlb
cs
xor
xor
xor
sub
cmpsb
inc
fdivr
xchg
arpl
mov
loope
ret
ret
sub
adc
ja
pop
call
jns
mov
sub
xor
cmpsl
push
lea
xlat
scas
loop
fbld
inc
loop
sahf
add
adc
out
and
pop
fs
test
arpl
mov
jecxz
test
orl
lods
insl
pop
mov
fisttpll
mov
cmpsl
ficomps
jnp
loopne
cmp
sahf
cmc
adc
and
test
cmpsb
jno
pop
out
xor
and
mov
inc
pop
scas
nop
pop
push
int
jnp
pop
adc
adc
pop
mov
cli
filds
fisttpl
adc
lahf
xor
pop
repz
js
jb
cmc
pushfw
aas
mov
jmp
sti
sbbl
daa
pop
bound
lahf
jne
in
jmp
aad
mov
mov
loopne
pop
inc
sbb
jbe
outsb
push
cld
fwait
sti
fcompl
aad
push
and
pop
sub
lds
dec
enter
jmp
nop
xchg
jne
xor
mov
and
dec
cwtl
lods
mov
dec
and
ret
int
push
cmp
pop
add
test
jo
test
clc
add
sub
shrl
mov
or
bound
jo
or
sub
divb
sub
scas
dec
cmc
out
pop
out
enter
lcall
hlt
iret
add
cld
loope
adc
sub
jmp
fwait
ret
imul
pop
pop
sub
and
mov
cmp
fwait
imul
aas
addl
jns
sub
cmp
mov
lods
jne
push
in
enter
jbe
sbb
sub
out
cwtl
cmpsl
pop
shll
mov
lahf
data16
inc
sti
mov
sub
adc
movsb
daa
leave
xchg
into
scas
out
and
sbbl
insl
mov
jb
cli
std
sub
push
stos
adc
loopne
scas
fscale
inc
mov
add
fstl
or
outsl
cmp
xor
cli
dec
sbb
arpl
push
repz
in
outsb
fsubr
daa
xchg
jb
push
aad
push
jl
test
std
fs
xor
sub
mov
xchg
xor
xlat
add
xor
cld
cmp
inc
idiv
in
rorb
xchg
xchg
jnp
fcomp
andb
shll
xor
call
lret
dec
lcall
aam
int3
mov
push
xchg
sub
shlb
pop
sbb
popf
inc
sbb
xchg
push
push
cmp
adc
xchg
xchg
in
lds
cmpsl
outsl
enter
pop
aad
cmp
repnz
insl
adc
jp
jp
dec
shl
add
test
loop
mov
out
ficomps
jl
rcl
movsl
cmc
pushf
or
js
cmp
add
lcall
pusha
outsl
mov
mov
or
dec
jle
inc
or
popf
lods
fs
xor
fwait
movsb
mov
mov
jbe
insb
xchg
das
add
les
shl
and
xor
aaa
xor
sbb
add
pop
sub
je
mov
push
ret
dec
pusha
jae
cmp
pop
outsl
test
call
and
adc
fwait
xchg
xor
pop
pop
scas
std
add
stos
and
insb
mov
lahf
mov
xor
stc
jl
in
mov
setnp
cmp
bound
add
ficomps
faddl
sbb
cli
fsubrl
and
xchg
push
pushf
mov
aas
mov
ljmp
loop
adc
addb
cmp
pop
inc
clc
inc
bound
into
jmp
fstpt
xlat
rcrl
sub
push
fisttpll
rcll
cmpl
test
aaa
in
sbb
mov
mov
mov
add
daa
jns
jmp
lods
add
push
bnd
xchg
addr16
and
push
mov
mov
lret
add
fistps
jmp
push
imul
add
mov
stos
sahf
cmp
add
scas
jge
es
fdivr
in
mov
sub
or
shlb
mov
and
cmp
bound
ret
outsb
pop
dec
sub
lods
out
fcom
iret
xor
fadds
iret
int3
idivl
xchg
ljmp
lods
pop
shll
add
imul
sbb
je
arpl
pop
andb
int
jae,pt
add
orb
cmp
xchg
mov
adc
jle
jle
dec
mov
mov
sbb
pop
sub
das
pop
daa
fstps
mov
aaa
fldenv
xor
cwtl
loopne
xchg
mov
cltd
xchg
jnp
add
jmp
dec
add
or
cmpsb
ret
adc
shlb
jbe
mov
jmp
insb
fdivp
push
xlat
xor
stos
mull
xchg
jmp
push
setb
ljmp
jle
adc
leave
jo
stos
jnp
lret
clc
xor
pushf
inc
enter
inc
cmp
cli
push
xchg
mov
push
jl
ss
mov
adc
jne
and
mov
in
fstpt
xchg
pop
int
aam
mov
adc
pop
pop
dec
inc
sub
aad
hlt
cmp
dec
mov
pop
inc
cmp
mov
fcmovnbe
iret
mov
mov
lock
stos
sub
sti
pop
insl
push
adc
push
cmp
cmc
ret
push
out
scas
adc
nop
jmp
push
push
popa
sbb
inc
cmpsl
jl
iret
shrl
shrl
mov
sub
mov
mov
jbe
mov
inc
dec
shll
gs
cli
or
inc
in
add
mov
repz
xor
mov
subb
lret
popa
cmp
pop
jmp
push
jmp
inc
sub
pop
test
add
push
cmc
mov
das
cltd
adc
sbb
cmpsl
adc
gs
add
push
jae
popa
mov
lods
xchg
or
scas
xorb
out
jge
cmp
xchg
aad
repnz
xor
fwait
data16
fildl
jle
cld
jns
push
jg
leave
movl
es
pop
cmc
pop
stos
xchg
arpl
ss
jbe
or
pop
or
inc
pop
pop
sbb
js
xchg
jle
inc
sub
shlb
aas
mov
jb
add
testb
cmp
ret
mov
sbb
jl
pusha
pop
shrl
or
dec
jo
in
fadd
push
mov
cmc
push
mov
or
push
push
pop
xchg
scas
dec
push
mov
sub
pop
push
push
push
mov
jecxz
dec
adcl
iret
dec
mov
cmp
inc
clc
imul
out
add
mov
dec
pop
push
sbb
inc
into
jmp
repz
cmpsl
out
gs
imul
in
fnstcw
pushfw
sub
xchg
mov
sarl
cli
mov
push
sbb
pop
out
adc
mov
pop
test
or
hlt
insb
sbb
rolb
mov
dec
out
outsb
stos
xchg
cmp
sahf
mov
bound
fisttpll
cli
popf
xor
idivb
loope
scas
push
testb
dec
add
sbb
out
jp
and
sbb
imul
cld
add
mov
pop
movsb
sub
orb
inc
mov
sti
ljmp
lret
jns
mov
arpl
mov
and
ds
pop
addb
adc
in
pop
mov
sub
test
stc
outsb
lret
or
xor
lods
pop
lods
adcl
out
arpl
out
sub
or
imul
scas
xchg
repz
repnz
jmp
fmull
loopne
mov
shrl
scas
and
nop
cmpsl
sbb
pushl
loopne
sbb
cli
test
dec
mov
xchg
sahf
jno
and
xor
nop
movsb
mov
int
push
mov
lods
cmp
push
cmp
stc
sbb
fucomip
mov
scas
fsubrp
bswap
cltd
inc
inc
pushf
pop
dec
int3
sarb
or
imul
fs
dec
adc
fistps
ret
loopne
cmp
mov
lods
scas
shll
sbb
xchg
arpl
jmp
fisttpll
repz
cltd
lcall
mov
mov
jmp
lods
pop
jge
in
lds
fisttpl
fstl
into
xchg
xor
int3
les
mov
adc
mov
cmpsl
in
ja
cwtl
and
jle
mov
cmp
fwait
xchg
push
mov
cmp
lods
test
mov
ss
push
push
xor
in
imul
popa
aaa
push
cmp
int3
mov
mov
les
xchg
shlb
mov
mov
sbb
je
rep
pop
test
dec
add
int
jo
inc
mov
lret
adc
loop
ret
aaa
fisubrs
push
sub
inc
adc
jmp
imul
jp
mov
sbb
inc
bound
mov
sarl
xlat
lret
dec
push
sub
mov
in
jo
sub
das
mov
push
inc
inc
insl
nop
xor
jae,pt
jb
outsb
mov
clc
loope
ljmp
xor
outsb
fisttpll
imul
lds
ljmp
test
dec
pop
mov
pop
and
mov
je
leave
push
xor
pop
mov
and
cmp
mov
pop
xchg
and
mov
adc
ljmp
sub
sbb
andps
mov
popa
sbbb
sub
ds
mov
shlb
movb
inc
and
cltd
sub
leave
out
bound
push
out
icebp
std
adc
cltd
sub
pushf
mov
sbb
in
pop
adc
and
mov
push
mov
xchg
rcl
jle
dec
dec
inc
and
mov
call
iret
mov
mov
shrd
and
push
repnz
pop
add
push
or
fstl
cwtl
pusha
mov
mov
lcall
mov
inc
or
mov
xchg
sahf
mov
mov
movsb
sub
jne
call
jg
imul
and
jbe
sbb
cmp
cli
sub
sbb
test
dec
push
pop
inc
mov
xchg
ret
inc
xor
into
pop
push
xor
lods
dec
sub
sbb
les
mov
fwait
mov
in
mov
fdivs
sbb
rclb
sbb
lods
fs
clc
fdivl
dec
push
xor
mov
stos
int
out
xchg
and
xor
repz
adc
pop
sub
push
lret
test
outsb
inc
jge
stc
mov
andb
xor
ja
jbe
xchg
lods
fwait
aaa
fistl
or
and
and
cmc
xchg
xchg
les
fincstp
xchg
loope
sti
out
aas
out
je
mov
pop
add
push
dec
in
imul
out
fs
stos
popf
sub
mov
cmc
xchg
jecxz,pt
cwtl
or
push
jne
pop
fmul
sbb
pop
cmp
aas
ljmp
sub
insl
xor
cmp
repnz
push
insl
jno
push
leave
inc
and
pop
rol
add
imul
jmp
js
mov
lds
enter
iret
push
jb
push
leave
stos
cltd
pop
inc
lock
loope
push
neg
add
out
cmc
ds
rorl
aam
sbb
jl
mov
pop
andb
mov
mov
xchg
inc
outsl
aas
sub
out
xor
pop
mov
pop
into
lahf
xchg
aas
xchg
jb
xor
int
sbb
xchg
cmp
xchg
pusha
mull
in
mov
cmp
dec
jno
dec
fidivrl
aaa
jge
pusha
mov
ss
mov
inc
out
je
test
fcmovb
push
aam
push
xor
jae
repnz
inc
jnp
pushf
jl
mov
loop
daa
lret
xchg
rorl
pop
pop
or
imul
shrl
stc
ret
mov
loopne
sbb
pop
mov
addl
ficompl
popa
out
mov
shr
aad
out
jle
fstpt
jne
pop
loope
lods
sbb
enter
jp
lret
aas
test
xchg
lods
popf
nop
sti
inc
outsl
pop
adc
jb
pop
sti
pop
jge
adc
inc
shll
hlt
xchg
mov
sti
and
and
fcompl
mov
rolb
jb
ret
dec
adc
sbb
les
and
cmp
xchg
sbb
mov
popa
jne
arpl
pushl
pop
insb
or
mov
cmp
jo
shr
scas
into
ret
push
mov
lret
jno
fimull
std
push
arpl
dec
push
cmp
pushl
mov
jbe
mov
das
sti
xchg
ret
xchg
lret
fsubl
jecxz
ja
add
fsubrl
adc
inc
xor
stos
jl
loopne
mov
xor
pop
addr16
mov
lahf
sarl
xor
jl
xchg
test
mov
inc
fbstp
fisubl
mov
xchg
pop
sub
leave
and
lret
add
out
bound
fisubl
adc
repnz
cmpsl
mov
lret
cmpsl
out
xchg
sbb
sti
loop
loope
xor
adc
xchg
jmp
pop
hlt
adc
ds
pop
sar
mov
cmpsb
jp
xorl
icebp
inc
js
jns
cld
xchg
adc
dec
mov
mov
push
lret
pop
out
push
incl
and
loope
xchg
pop
push
bound
ffree
mov
mov
nop
cs
dec
jnp
push
mov
xchg
mov
ja
lret
inc
in
push
and
push
push
mov
movsb
cld
mov
cltd
cld
push
inc
in
icebp
and
orb
repz
ret
jo
xchg
mov
imull
mov
int
lret
mov
xchg
or
arpl
mov
xchg
xor
insl
cmp
icebp
mov
adc
fucom
push
nop
jecxz
jnp
jnp
push
xchg
mov
bound
pop
mov
test
in
loop
or
push
sbb
mov
das
out
icebp
inc
imul
inc
imul
sub
xorb
xchg
pop
push
push
outsb
mov
dec
ret
rcl
mov
fcomps
mov
ja
ja
push
js
mov
arpl
jecxz
add
stos
cmc
movsl
push
pop
mov
insb
rcr
dec
push
test
or
pop
repnz
movsl
cld
dec
mov
lods
pop
rcrl
fstl
push
call
mov
jp
cmp
fwait
dec
movsl
add
pop
pushf
shl
stos
test
pop
lahf
push
sub
inc
xchg
shll
mov
repnz
jecxz
push
sub
dec
jbe
dec
pshufw
mov
push
outsb
xlat
jg
mov
cwtl
xor
pop
push
sub
daa
popa
push
jg
fs
mov
mov
mov
ds
sahf
push
je
xchg
aas
in
testl
int3
xor
cmp
push
jne
cmp
insl
andb
fs
add
jno
cmp
mov
sbb
inc
les
push
inc
call
jg
call
repnz
adc
js
fimuls
cmp
add
add
jae
mov
sbb
lods
xchg
sub
dec
pop
add
enter
push
or
push
adc
push
mov
and
jb
dec
mov
rolb
outsb
pop
mov
xor
xchg
and
jae
cmp
rorl
xchg
dec
mov
adc
sti
jmp
dec
fnstenv
lods
jmp
mov
or
inc
out
xchg
jae
ds
cmc
ja
aam
xchg
mov
or
out
lcall
xchg
add
cltd
sub
ficompl
aam
test
push
adc
push
cmpsl
rorb
push
jb
xor
push
fs
push
pop
pop
mov
xor
inc
xchg
lret
xchg
xchg
add
and
xchg
jge
fcmovne
negb
push
sub
mov
inc
in
js
or
and
dec
mov
rorb
repz
inc
dec
out
out
push
cld
push
out
fldl
push
cli
jo
es
and
xchg
or
and
inc
into
push
stc
insb
sub
and
dec
or
repnz
xlat
lea
insl
xchg
shlb
pop
pop
push
jp
not
cmp
je
loopne
jne
mov
push
cmp
mov
add
out
xchg
push
add
jnp
and
rcrb
cmp
cmc
fiadds
leave
divb
ret
jb
pop
daa
xchg
ljmp
sub
inc
scas
xchg
xchg
cmp
andl
sub
loop
js
or
xchg
dec
xchg
push
cld
xchg
jg
adc
cmpsl
pop
test
popa
je
sbb
js
rol
push
cltd
cmpsl
inc
mov
jecxz
out
pop
mov
pop
xor
pop
xor
iret
mov
outsb
mov
sti
lods
in
xlat
mov
orl
addr16
cmp
jno
lret
mov
mov
cmc
sub
inc
in
mov
mov
adcb
rclb
jno
cltd
add
dec
inc
div
aad
bound
jle
scas
iret
pop
lahf
jp
in
jp
mov
neg
xchg
shll
mov
cmc
adc
insl
es
sub
xor
out
pop
and
mov
and
xchg
out
repnz
inc
inc
scas
lahf
add
test
lcall
ret
jbe
pop
cmpsb
iret
or
mov
data16
inc
mov
cmpsl
stos
mov
repz
fists
mov
or
pop
sub
dec
jmp
cs
xor
insb
testb
or
push
dec
pop
loop
ds
mov
xor
add
xor
jnp
sbb
cmp
orb
data16
dec
int
aaa
pop
dec
xchg
pop
stos
movsl
fidivrl
stos
faddl
jecxz
lret
push
xchg
hlt
mov
pusha
add
ret
mov
loopne
dec
sbb
cld
sbb
fidivl
fnstenv
jae
push
xor
mov
lcall
gs
loope
addr16
and
add
fildl
xor
mov
bound
mov
xor
dec
fsubr
and
fcomp
sub
and
lea
lcall
push
pop
sahf
pop
movl
in
xor
loop
test
test
or
stos
ljmp
gs
sub
jbe
pop
clc
flds
lds
js
inc
or
jp
mov
mov
push
xor
lea
jg
jp
jo
lret
fstps
into
ret
mov
inc
imul
sbbl
mov
xor
cli
pushf
sbb
and
fs
sbb
inc
sub
test
pop
fnsave
and
mov
inc
loop
idivb
xchg
fsubs
fcmovnb
pusha
fwait
scas
mov
add
sbb
imul
adc
lods
push
rcrb
aad
mov
pop
push
jae
xor
jnp
mov
aad
cmp
out
ret
fs
mov
sti
mov
mov
dec
mov
pop
mov
loope
popf
inc
fldcw
sbb
cmp
mov
and
push
cmp
cmpsl
mov
rcrl
popa
cmp
scas
mov
aaa
jl
mov
outsl
mov
outsb
ja
movsb
add
inc
dec
ds
push
adc
sbb
in
sbb
das
fs
decl
filds
lea
cmp
std
lahf
cld
test
cwtl
xor
xchg
dec
pop
cmpsl
leave
dec
jb
fsts
adc
callw
dec
daa
pusha
sbb
cmpsb
inc
jecxz
out
adcb
mov
sub
ja
mov
stos
push
or
test
jl
xchg
xchg
fsubrl
movsl
popf
xor
jno
xor
inc
add
outsb
or
mov
lcall
add
gs
pushf
imul
cs
cli
data16
or
mov
mov
loope
les
cld
loop
sbb
mov
add
fdivs
shll
aam
or
out
cmp
mov
push
lds
mov
pop
or
add
sbb
dec
cmp
push
inc
dec
in
or
push
hlt
ja
jne
scas
adc
insl
shlb
leave
push
and
mov
or
inc
sub
cltd
out
push
test
stos
mov
mov
add
dec
bound
push
push
push
pop
movsl
dec
jl
stos
movsl
inc
cmp
push
mov
adc
push
jno
xchg
xchg
dec
xor
iret
test
dec
call
popa
mov
fdivl
jno
xchg
and
flds
jnp
cli
in
cmp
aad
ljmp
test
test
jno
andb
in
js
test
push
push
or
and
pop
rcl
and
mull
call
add
cs
ret
dec
push
loopne
sub
jl
into
xchg
rcr
rcl
sub
xlat
adc
and
fucomi
add
mov
enter
dec
add
js
jo
push
mov
xor
je
or
int3
jecxz
dec
pop
fidivrl
add
pop
inc
dec
imul
or
jnp
lret
aas
stos
in
lahf
repnz
xchg
daa
dec
jbe
mov
and
aam
pop
out
das
push
inc
insl
popf
mov
fsubrl
fstps
jns
cmp
sbb
xchg
scas
std
add
stc
inc
stc
iret
ss
add
mov
fldenv
dec
and
sahf
insb
stos
inc
jb
fsubrs
mov
pusha
push
jle
mov
mov
dec
test
pop
insl
mov
fwait
stc
andl
dec
cmp
in
xor
mov
sbb
lock
std
test
lret
xor
pusha
cmpsb
and
movsl
sub
je
orb
push
mov
xchg
mov
jno
push
rclb
aam
rorl
lds
out
push
pop
push
repnz
or
xor
jg
xor
nop
mov
adc
cmc
lds
or
jge
cld
outsl
negl
xchg
mov
push
push
sbb
fsubrl
leave
xchg
les
or
ss
mov
dec
adc
mov
inc
ror
out
inc
mov
mov
push
repz
dec
or
inc
push
outsl
lret
lret
lds
and
arpl
pusha
jnp
xor
lea
and
dec
adc
adc
testb
pusha
mov
lret
mov
mov
and
shrl
pop
movsl
in
and
in
sbb
iret
lea
iret
loop
imul
add
mov
int
jo
xchg
in
stos
out
mov
scas
mov
mov
jecxz
xchg
in
lahf
in
pop
inc
jne
lcall
ss
cmp
aam
xchg
xchg
inc
mov
jns
aad
insb
and
sbb
xchg
sbb
insl
int3
clc
sub
sahf
in
sub
sub
lret
cmp
xchg
mov
int
or
push
leave
mov
dec
scas
aaa
icebp
sbb
insl
sbb
scas
ret
imul
leave
scas
or
loopne
mov
loop
adc
jle
jo
xchg
push
js
sub
lret
jmp
xlat
movsl
pop
ds
les
aaa
xchg
xor
inc
inc
inc
cmp
cli
repnz
xor
test
inc
xor
sti
enter
or
xchg
sbb
pop
or
popa
outsl
stc
int3
xchg
aam
cmpsl
orl
cmp
jo
loope
scas
popf
rorl
adc
push
ret
jnp
pop
mov
test
in
or
pushf
pop
in
stos
adc
push
into
push
loop
fstl
ret
cmpsl
int3
rcrl
lahf
xor
inc
jl
pushf
repz
add
push
call
push
cmp
es
push
insb
and
cmp
aam
mov
mov
fstp
push
jecxz
cmp
add
pop
out
jmp
mov
add
jnp
popf
sbb
jno
test
mov
arpl
mov
mov
jle
push
xchg
cltd
imul
lahf
pop
xchg
cld
ja
jae
jb
mov
aaa
repnz
xchg
pop
aad
pop
sbb
xorl
push
xchg
outsb
mov
nop
rcl
dec
xchg
fwait
pop
inc
lds
mov
adcl
pop
and
test
mov
sti
jbe
pusha
pop
clc
mov
pop
cmpsl
das
jns
xchg
sub
add
mov
jp
push
inc
push
stos
imul
notb
in
and
in
mov
jbe
cmp
ja
inc
pop
mov
movsl
lret
or
dec
insl
xchg
je
nop
pop
in
loop
push
cmp
jo
mov
push
cld
pusha
or
adcb
fsubl
inc
jg
adc
push
pop
addr16
cmp
or
push
lret
divl
jg
sub
jl
into
cwtl
sub
xor
ljmp
adc
push
lods
ljmp
and
popf
mov
push
rorl
out
cmp
lods
std
xchg
out
out
clc
push
push
inc
mov
mov
es
movsl
mov
jl
adc
in
std
arpl
pop
push
pop
cltd
sbb
pop
add
scas
add
dec
enter
mov
data16
dec
adc
cld
or
jecxz
nop
jne
add
jne
int3
test
stos
out
into
dec
xor
sbb
inc
jne
mov
pop
dec
in
repz
jb
out
incb
mov
data16
popa
mov
xchg
fcmovnbe
jb
xchg
dec
inc
adc
lea
iret
js
movsb
inc
jns
aad
insb
or
mov
or
lahf
mov
sti
loop
jne
sbb
mov
dec
jne
sbb
ljmp
movsl
arpl
stos
mov
and
or
adcl
jl
xchg
shrb
shr
mov
pop
dec
dec
cmpsb
mov
and
enter
xchg
dec
lret
cmpsb
add
pop
pushf
fidivs
or
jne
js
mov
sub
lcall
into
js
xor
cmp
xchg
test
push
hlt
fidivs
mov
jae
repz
xor
into
jl,pn
iret
std
aad
outsl
fcomps
in
jmp
or
or
push
rclb
jmp
lds
mov
lock
clc
push
outsl
in
fimuls
cmp
mov
mov
popa
cmpb
sub
xchg
cmpsl
gs
out
dec
lret
loop
push
push
cmp
dec
insl
flds
dec
ror
fwait
out
lcall
lret
or
cltd
popa
xchg
sub
scas
fidivrs
orb
das
icebp
or
mov
inc
mov
add
and
cwtl
arpl
jle
add
mov
add
dec
jbe
mov
inc
in
mov
and
jno
mov
out
movsb
ror
pop
add
dec
fidivrl
jbe
mov
push
add
pop
cmc
aaa
sub
stc
sahf
cs
gs
hlt
incb
fld
loopne
push
leave
rcll
mov
sbb
push
test
mov
xchg
mov
call
mov
adc
filds
push
sbb
nop
jbe
mov
xchg
pushf
push
out
mov
es
and
mov
mov
and
call
cmc
mov
xor
cmp
inc
pop
mov
inc
mov
inc
repz
cmpl
cwtl
mov
outsb
jecxz
js
sub
lods
dec
imul
push
dec
xchg
xor
repnz
adc
add
shl
cmp
cltd
inc
ja
xor
ljmp
std
lods
lock
dec
mov
sbb
daa
loop
ja
lret
ss
into
and
push
cmp
pop
sbb
sub
push
jmp
xor
cs
loope
repz
scas
lods
pop
scas
out
cltd
dec
mov
ret
rorl
fdivr
int3
outsl
jp
mov
gs
and
jmp
iret
aas
out
push
push
mov
int3
repnz
pop
xor
in
ret
lahf
imul
mov
test
xchg
lret
sub
mov
push
fstl
and
push
add
ficoms
push
cmp
sub
fstpl
sbb
jnp
xchg
or
pusha
aaa
leave
sub
sbb
pop
mov
jne
sub
or
xor
call
stos
aad
sbb
out
xor
mov
or
mov
sbb
xchg
xchg
test
les
aas
ret
inc
mov
or
inc
mov
cmpsl
hlt
lahf
scas
jp
fistpll
mov
mov
xchg
js
movsl
adc
sub
jnp
je
aas
sub
mov
sbb
scas
popf
std
clc
pushf
lock
imul
mov
enter
test
stos
jge
mov
add
pop
sbb
fcompp
loope
pop
into
xchg
cwtl
fmull
jmp
jle
push
mov
loop
jl
dec
xchg
adc
add
sbb
xor
mov
push
mov
loope
push
xor
xor
stos
sbbl
test
mov
jbe
addl
mov
arpl
add
lock
cli
cmp
mov
sahf
cmpsb
int3
sub
mov
pop
dec
or
andl
mull
xchg
fildl
out
ffreep
dec
or
call
call
filds
inc
xchg
das
pusha
sub
sub
cld
xor
adc
daa
mov
pop
xorl
jns
outsb
push
sbb
pop
leave
fsts
outsb
or
leave
mov
fidivrs
cli
insb
pmullw
sub
icebp
in
test
jae
popl
jno
jo
sub
and
mov
cmp
mov
and
cmp
lock
dec
stos
xlat
mov
movsb
imul
bnd
push
dec
lcall
daa
push
movsl
jecxz
push
inc
jg
in
and
and
pop
pop
dec
cmpb
xor
pop
mov
xor
and
inc
mov
mov
jno
mov
sti
fsubrl
xor
test
mov
jle
shl
xchg
in
push
or
xlat
sub
sub
push
jne
jbe
sbb
leave
in
mov
lods
test
sahf
data16
rclb
in
out
aas
sub
mov
popa
js
addr16
jnp
adc
xor
shrb
mov
das
decl
les
add
pusha
les
loopne
jno
lods
leave
lcall
push
imul
jle
dec
fstpl
dec
pop
fldt
out
stos
loop
jp
lret
enter
in
mov
cmp
xchg
clc
lock
aas
rcrb
push
popf
and
push
mov
gs
mov
sbb
ljmp
or
ret
loope
push
xor
cltd
test
push
sub
cmc
push
nop
push
not
jl
pop
add
pop
mov
js
xchg
stc
cs
add
insl
push
sbb
xor
mov
mov
mov
jne
push
or
bound
dec
es
mov
test
jge
mov
test
js
dec
dec
fsubr
icebp
aad
int
or
cmpsl
sar
jnp
mov
fcmovbe
adc
lret
test
push
aaa
sbb
lret
notb
out
dec
xchg
cmp
out
repz
pop
in
add
je
ror
xchg
imul
pop
jl
sahf
in
dec
adc
in
add
xor
dec
repz
jbe
and
cltd
xlat
aad
sahf
and
and
int
cmpsb
mov
dec
mov
imull
lcall
sbb
mov
jae
jae
xchg
in
push
fwait
mov
dec
inc
fsubl
ljmp
jge
roll
mulb
push
orb
inc
xchg
fdiv
gs
cmc
iret
cmp
sbb
inc
clc
inc
not
push
out
mov
xor
movsb
mov
js
cmp
pop
push
outsl
fcompl
out
xchg
xor
lcall
sub
mov
pop
gs
sahf
pop
pop
or
pop
add
aas
push
out
mov
cwtl
fisubs
in
arpl
enter
mov
out
and
mov
jp
and
fistl
cmp
mov
fs
pop
xor
xor
cwtl
out
add
cmp
mov
mov
sbbb
gs
mov
lahf
and
fsubl
cmc
pop
jecxz
jns
xlat
test
or
push
or
sub
add
fiadds
imul
iret
and
imul
mov
xor
out
push
in
mov
lods
outsl
cld
aad
cmp
test
ss
sbb
dec
pop
push
push
xor
lret
outsl
push
lock
outsl
sub
jbe
int
daa
pop
enter
lret
inc
mov
mov
fidivs
jo
push
push
jge
cmpsl
adc
and
out
sbbl
les
jg
ror
mov
in
and
es
or
lock
dec
mov
dec
lea
std
stos
in
movsb
jne
push
rolb
sbb
inc
push
pop
fsubs
movsb
mov
jnp
mov
test
out
jo
add
xchg
js
sarl
mov
sub
xchg
dec
popa
cld
cmp
movsl
and
mov
inc
ss
adc
pop
cmp
and
daa
addb
inc
aad
loop
cltd
pop
xor
lahf
repnz
and
mov
add
imul
scas
orl
in
inc
jnp
cmp
and
aad
xchg
push
scas
jno
mov
or
lret
push
xor
pop
insb
adc
adc
nop
or
cmpsb
xor
pop
enter
xlat
add
outsb
cmpsb
push
jp
mov
and
mov
addl
in
add
ss
call
lcall
jmp
sub
sbb
addb
ficomps
iret
adc
loopne
xor
mov
fsts
sahf
mov
shrb
jno
cltd
jp
cmp
arpl
mov
and
adc
jp
pop
add
stc
pop
loope
inc
mov
imul
repnz
lea
ficoml
pop
jbe
pop
sbb
outsb
mov
ret
sbb
pop
movsb
js
gs
lea
pusha
pop
mov
out
add
fistps
repz
out
mov
movsl
cmp
imulb
int3
pop
xchg
or
xchg
scas
lds
clc
fstp
shl
or
mov
mov
mov
sbb
mov
cmpsl
int
dec
sbb
jp
sarb
repnz
movsb
lock
les
jle
or
mov
leave
jno
int3
loopne
les
sub
cmpsb
jecxz
sbb
adc
les
fnstenv
fmull
xchg
sub
aam
scas
shll
je
cmpsl
aas
ficoms
iret
mov
sbb
adc
pop
xor
inc
sub
lock
iret
ja
xor
cs
ret
and
xchg
sub
sbb
in
lret
lret
roll
rorl
inc
insl
inc
push
push
or
push
imul
pop
sbb
sbb
movsb
mov
outsb
pop
mov
cld
outsl
dec
sbb
and
adc
xor
mov
sbb
mov
pop
mov
addl
icebp
jl
mov
jo
dec
mov
dec
mulb
inc
cmp
add
das
adc
repnz
cmpsl
pusha
inc
push
test
movsl
fwait
push
cwtl
mov
arpl
in
or
ss
push
xchg
lods
mov
xor
cmpsl
cltd
rcrl
cs
inc
stos
push
and
xchg
jmp
dec
sbb
loopne
fdivs
loop
cli
jle
xor
jmp
dec
xor
enter
aaa
dec
xchg
test
lods
cmp
dec
xchg
in
mov
sub
push
mov
pop
fxch
xor
frstor
sub
cld
lcall
jg
add
xor
adc
arpl
push
mov
test
and
xchg
mov
ficoml
fcomip
jmp
dec
xchg
cmp
fsubs
sbb
js
out
cli
je
xchg
lds
push
sbb
das
sahf
sarl
data16
mov
fdiv
cmp
inc
pop
push
mov
addr16
rclb
fcomi
hlt
not
add
inc
loopne
call
pop
inc
mov
mov
xchg
movsl
sub
or
insb
jp
movsl
insb
cmp
push
fwait
scas
push
aas
dec
pop
lret
clc
mov
cmc
dec
push
mov
jns
in
jmp
decb
lds
push
cmp
call
xchg
je
xor
insb
cmpsb
movsb
or
or
cmpsl
in
sti
lcall
mov
mov
adc
stos
test
xlat
shl
dec
cmp
pop
jmp
adc
call
jo
dec
in
add
pop
icebp
out
sbb
jne
fsts
dec
bound
insl
mov
aas
mov
lret
pop
xlat
addb
pushf
addl
sub
fsubrl
pop
push
sti
fadds
mov
jo
jae
mov
push
mov
scas
adc
in
sub
dec
cmpsb
add
mov
loopne
and
inc
pop
xlat
inc
jecxz
mov
cmpl
sarb
jae
ljmp
and
shlb
popa
movsb
fldl
pusha
fildl
cltd
sti
iret
jge
popa
mov
stos
inc
or
push
roll
inc
cmp
hlt
stos
imul
fsubrl
and
repnz
aad
neg
pop
xchg
inc
cmpsl
rolb
stos
adc
xrelease
sub
cli
lods
sbb
push
repz
pop
rclb
pop
dec
inc
repz
mov
cmpsb
lcall
mov
xor
push
cmp
fildll
xor
jle
sbb
js
rorb
dec
lea
mov
out
mov
add
lahf
and
aad
dec
push
sub
add
fdivrl
dec
cmp
sub
add
xorb
cli
mov
mov
aad
outsl
push
lret
out
movsl
add
inc
xchg
test
das
push
fwait
cmp
jae
popf
ss
sbb
mov
outsb
inc
call
sahf
sub
popa
jle
add
add
xchg
fnstenv
jnp
ret
nop
lret
fistpl
aas
in
mov
push
xor
cltd
out
xchg
adc
cmp
sub
cld
inc
add
das
addr16
jae
test
pusha
mov
inc
and
cmp
cmp
add
mov
outsl
int3
jecxz
aam
cmp
popf
mov
addr16
xchg
mov
aam
aas
xchg
fsubp
xchg
fnstcw
sbbb
jne
cmp
pop
xchg
dec
popf
cmp
sbb
lcall
adc
std
mov
stos
xor
adcb
jle
mov
enter
mov
mov
int3
mov
out
cwtl
cmc
mov
jge
mov
into
je
jle
ljmp
popf
mov
mov
ds
fnsave
lods
push
pop
pop
aaa
cmpl
int
ret
pop
push
iret
jge
mov
dec
add
in
inc
outsb
iret
add
dec
ficomps
fimull
pop
push
aam
mov
mov
repnz
sti
mov
cwtl
into
dec
fldcw
leave
push
fstps
ret
ret
sub
xor
mov
pop
pop
es
adc
cmp
cli
daa
ds
jno
subl
jnp
dec
popf
xchg
xchg
sbb
stos
pop
jmp
mov
mov
add
jb
je
pop
ficomps
into
sbb
nop
dec
jmp
fldl
stos
push
aam
pop
cs
mov
xchg
or
rcrl
addb
pop
insl
cld
jnp
pop
stos
mov
out
or
lock
ljmp
lods
leave
addr16
jge
push
jecxz
cmc
add
and
mov
imul
push
xchg
data16
flds
imul
xorl
orl
stos
adc
dec
pop
rcll
mov
outsl
insb
jo
fisubrl
roll
pop
andl
sub
jge
test
xchg
sub
fwait
xor
mov
pop
sub
mov
sub
ret
mov
pop
and
inc
leave
jae
test
scas
sub
stc
xchg
ljmp
push
sti
xchg
iret
mov
cmpsb
pusha
fldcw
pop
mov
nop
pop
stc
mov
or
in
jne
dec
addb
xchg
movsb
xor
pusha
sub
pop
fldenv
mov
int
and
sbb
std
mov
cs
xor
pop
add
cmpsb
pop
pop
mov
cmp
fadds
sarl
pop
addr16
pusha
mov
xlat
xchg
sbb
and
xchg
out
inc
arpl
mov
outsb
adc
mov
lock
arpl
xchg
xchg
or
mov
adc
xchg
or
cs
movl
out
stos
push
inc
push
push
movsl
notb
jl
and
hlt
mov
arpl
notb
dec
test
sbb
xor
ret
scas
sbb
movsb
pop
jp
and
xorb
hlt
xor
inc
adc
cmp
fscale
imul
call
je
xchg
inc
out
sahf
dec
lret
xor
cmpsb
adc
mov
nop
or
cmc
mov
cmp
cmp
mov
addb
or
mov
pop
sahf
inc
scas
andb
push
pop
xchg
mov
pop
cmp
mov
adc
hlt
enter
mov
lahf
rcrb
imul
mov
js
mov
dec
mov
mov
divb
push
dec
int3
pop
dec
inc
adc
imul
add
mov
lcall
pop
push
xchg
mov
sarb
clc
sbb
mov
divb
inc
mov
xchg
es
mov
int
outsb
mov
lods
xor
enter
scas
xchg
push
mov
mov
mov
push
sbb
xchg
or
xor
out
inc
mov
cmp
das
or
es
mov
mov
fdivrs
mov
sbb
mov
inc
push
sub
pop
bound
or
and
push
add
lret
stos
pop
subb
mov
pop
idivl
mov
arpl
dec
or
inc
std
pushf
and
push
and
sbb
out
xor
sahf
dec
jne
fs
push
push
pushf
repnz
aam
pop
push
rcrl
stos
push
les
xchg
pop
loopne
jg
mov
mov
test
xchg
mov
add
jge
dec
cmp
xchg
jle
jne
sahf
sarb
fistps
mov
aam
cmc
leave
or
repz
pop
pop
test
cld
sub
cmp
aaa
adc
test
into
dec
jnp
fildl
dec
xchg
cwtl
dec
call
fisubrs
mov
jb
mov
adc
test
or
jle
pop
rolb
mov
push
adc
inc
jae
xchg
lock
xlat
xlat
test
mov
mov
nop
or
dec
mov
adc
rep
xchg
cs
inc
dec
xor
mov
in
xchg
data16
cmpsl
add
xchg
aas
cwtl
pop
pop
or
lret
or
int3
gs
pop
jecxz
mov
mov
test
sbb
int
dec
and
hlt
vphadduwd
ret
mov
dec
mov
jle
fmul
cmc
and
dec
add
lcall
ucomiss
jp
jmp
xor
add
cmpsb
pop
inc
icebp
icebp
mov
jge
aad
mov
push
inc
fwait
dec
dec
and
jnp
mov
xchg
pop
sub
cli
mov
ss
dec
xchg
rcrl
icebp
sbb
aas
push
xchg
es
jno
ret
shrl
ds
in
adc
xchg
cwtl
sbb
scas
push
repz
jg
add
repz
push
notb
sub
jle
int3
cmp
dec
enter
movsl
dec
pop
jmp
adc
outsl
aas
mov
mov
mov
cmp
out
jle
shrb
xchg
pop
in
jo
addr16
stos
out
scas
xor
fsubs
test
adc
cli
pushf
imul
outsb
cmp
xor
xchg
inc
loope
or
sbb
test
out
aaa
jecxz
and
clc
inc
fisubrs
in
bound
mov
pop
add
adc
inc
lret
cmp
lea
repnz
ss
mov
jo
push
jb
sub
xchg
add
rcl
inc
gs
mov
mov
lret
mov
rcr
sub
push
into
cmp
xchg
dec
push
xchg
mov
loopne
popf
rclb
movsb
and
adc
mov
xor
mov
je
mov
shl
push
adc
pusha
dec
adc
hlt
aam
xchg
jb
inc
dec
incb
les
mov
ficoml
divb
outsl
pop
dec
fsubr
out
xchg
xor
dec
xchg
out
xchg
sub
lds
lcall
jl,pt
addr16
stos
mov
mov
sbb
popa
mov
dec
push
push
je
jnp
adc
iret
stc
lret
pop
or
jp
push
jmp
lock
xchg
and
or
dec
jne
out
cmp
test
mov
sbb
push
add
cmpsl
rcrb
gs
subb
int3
pop
in
aas
int3
jle
hlt
mov
dec
mov
mov
das
daa
pop
inc
push
daa
loop
mov
push
ds
push
out
insb
fadd
mov
je
cmp
inc
sahf
loopne
jg
popf
jbe
scas
in
xchg
jbe
dec
xchg
add
push
mov
and
mov
and
jb
insb
idiv
repnz
sbb
lock
movsb
adc
mov
outsl
adc
cmp
adc
xchg
sbb
mov
sbb
test
adc
test
test
xor
mov
mov
int
pop
sbbl
jae
cmp
mov
aad
sub
inc
jecxz
mov
stc
mov
mov
vmwrite
jo
inc
mov
or
mov
xchg
push
les
add
pop
ds
inc
xchg
sti
icebp
sub
ja
rorl
subl
test
push
pop
mov
mov
xor
ss
in
aas
frstor
aad
test
cmp
sbb
scas
sbb
xor
cld
addps
mov
cli
idivb
cmp
lods
ret
andl
xchg
xchg
cwtl
jg
imul
sbb
ret
lds
mov
or
ds
adc
fwait
out
std
add
push
andl
cmpsl
mov
inc
mov
jmp
jp
mov
pusha
pop
rolb
cmpsb
and
fs
push
push
iret
fmull
rol
pop
icebp
sub
xor
repz
adc
adcl
pop
mov
enter
stc
sub
imul
outsb
jg
dec
dec
mov
sub
mov
shll
and
sub
hlt
les
mov
add
pop
std
ja
push
imul
lods
cmp
cmp
mov
ss
movsb
ds
lcall
sbb
or
fstpt
loop
push
loope
enter
popa
adcb
sbb
unpckhps
fisttpl
sbb
out
rclb
xor
lds
xor
jno
pop
aam
mov
pop
int3
xchg
icebp
add
adc
frndint
repz
rorl
jo
cmp
xchg
icebp
faddl
sub
pop
jg
clc
arpl
ret
bound
mov
loop
mov
or
out
xor
fiaddl
push
pop
fisubl
sbb
aas
fdivl
addb
jp
sub
or
sub
sub
sbb
push
dec
sarl
and
movsb
jae
push
ret
mov
in
sahf
movsb
jne
stos
sbb
pop
daa
insb
decb
mov
dec
cmp
or
pop
xor
sbb
pop
pop
int3
lock
loope
or
add
push
xorb
pop
loope
mov
add
jb
mov
adc
push
push
loopne
push
cs
inc
and
mov
mov
fdivl
in
fdiv
in
pop
cli
mov
mov
aaa
or
push
je
es
rorb
mov
mov
out
cmp
es
add
dec
cmp
dec
sbb
xchg
ficomps
cmp
xchg
xor
pop
movsl
daa
repz
adc
dec
loope
shrl
loopne
sti
mov
jb
xlat
pop
dec
out
sbb
push
adc
mov
scas
mov
push
data16
icebp
in
test
stc
repnz
push
testl
sti
jbe
sbb
stc
add
sbb
jnp
lea
icebp
mov
adc
cmpsl
cmc
faddl
subb
inc
push
sbb
lret
or
loopne
lods
lret
lahf
sar
aad
push
add
clc
adc
dec
xor
dec
push
cmp
loopne
lahf
cwtl
xor
or
add
mov
adc
shll
cwtl
inc
xor
in
xchg
mov
lcall
cmpsl
test
outsl
xor
adc
ja
push
ds
push
push
testl
stc
ljmp
popa
mov
fdivs
dec
out
sbb
loop
pop
in
and
mov
inc
sahf
pop
aaa
mov
add
cmpsb
mov
adc
xor
ret
test
outsl
mov
mov
adc
dec
lret
sahf
xchg
push
outsb
jge
cld
pop
frndint
sbb
pop
addb
push
mov
aam
adc
pop
pop
or
adc
push
xchg
cmpsb
adc
andb
or
and
dec
push
mov
out
pop
sub
das
fidivrl
fcoml
test
cs
stos
in
fimuls
ret
cmpsb
outsb
out
outsb
cmp
scas
sbb
dec
es
xchg
pop
fwait
jle
pop
jne
nop
dec
cltd
lea
mov
xor
push
std
xchg
ja
in
mov
and
inc
and
cltd
jae
ja
nop
loop
jle
and
add
je
or
pop
sarl
mov
mov
xor
xor
lds
scas
mov
add
push
aad
in
stos
dec
into
mov
xchg
imull
mov
jns
sti
xor
cmp
push
cld
xchg
in
adc
mov
aam
or
mov
aas
push
cs
out
dec
jmp
mov
cs
fstpt
add
inc
scas
jg
dec
iret
jle
xor
sbb
cwtl
sti
inc
inc
lcall
sbb
fimuls
stc
and
push
add
pop
xorb
ljmp
xor
out
jo
lcall
push
iret
and
mov
inc
call
sub
jp
jno
out
cmp
cmc
scas
popa
cli
dec
call
je
mov
pop
dec
push
xor
dec
enter
or
sub
add
push
mov
adc
add
jecxz
lret
es
jmp
jmp
sarl
lds
cltd
push
cld
cmp
pop
dec
rolb
je
adcl
cmp
or
inc
dec
mov
mov
movsl
inc
mov
ret
pop
and
call
cwtl
xchg
scas
pop
add
cltd
jnp
call
stos
sahf
pop
imul
loope
inc
sbb
sbb
lds
mov
cmp
add
mov
or
or
pop
cmc
fucomp
mul
inc
or
push
sub
xorb
ret
jge
rorl
and
enter
das
sub
add
push
add
lcall
sbb
sub
mov
pop
jne
pushf
aaa
push
dec
inc
insl
or
sub
dec
pop
data16
or
mov
push
into
sbb
cli
mov
push
aam
pushf
movsb
repnz
mov
adc
adc
mov
nop
inc
push
or
sub
lock
int
in
adc
sbb
dec
mov
mov
enter
out
inc
aas
mov
jmp
jecxz
mov
in
js
push
mov
xchg
movsb
lock
dec
jp
mov
xor
pop
xchg
subl
push
into
add
lods
not
test
js
xor
movsb
ljmp
inc
and
stc
xchg
inc
fiadds
addr16
jb
jmp
adcb
test
dec
adc
or
inc
and
and
cmpsb
adc
lahf
testb
pop
sbb
jb
daa
movsl
ds
testl
mov
xchg
inc
test
sub
inc
mov
jmp
or
int3
sahf
sub
add
pop
cli
mov
cmp
jbe
xchg
clc
mov
xchg
inc
pop
xchg
inc
dec
daa
add
popa
ss
jmp
test
jl
rcll
sti
lock
dec
jp
movb
loopne
and
and
movsl
jmp
pop
jl
fptan
ret
ret
cmp
jp
in
insl
aam
imul
sbb
dec
push
push
mov
mov
lcall
xor
icebp
jno
ret
dec
daa
sub
push
aad
lods
imull
js
cld
mov
call
mov
loope
or
and
lods
scas
mov
inc
push
cmc
and
xor
loop
scas
add
arpl
mov
ss
shrl
jp
xchg
icebp
xchg
aam
lock
jle
push
ret
inc
out
ja
cmpsb
lcall
ja
mov
fisttps
out
lods
lea
in
mov
add
in
mov
mov
and
js
push
jne
dec
mov
pop
ja
in
test
insl
mov
testb
inc
cltd
ss
notl
add
shll
std
xchg
stc
pop
mov
loope
leave
xchg
jno
and
insl
pop
xchg
cmp
dec
push
ficompl
lock
fstl
mov
test
dec
aad
jbe
enter
push
jae
cwtl
test
xchg
dec
fwait
adc
shll
in
mov
out
fwait
and
cmp
loope
adc
bound
pop
jle
mov
cwtl
xor
addb
sti
sub
fsubr
inc
mov
shll
ljmp
pop
push
scas
and
adcl
mov
inc
mull
int
test
fldt
jb
mov
nop
jbe,pt
jp
sub
sbb
pusha
sbb
inc
jb
aam
pop
inc
jae
cmp
movsb
and
mov
outsl
addr16
neg
mov
loop
outsb
js
cltd
mov
mov
out
xor
das
xchg
inc
faddp
dec
orl
gs
mov
push
sbb
dec
jnp
push
repnz
cmp
and
mov
adc
pand
subl
pop
repz
xchg
mov
shlb
std
in
ss
ss
cmp
push
pop
test
dec
xchg
sub
push
adc
cmpsb
and
jp
mov
or
cwtl
cmp
sahf
enter
xor
mov
cmc
mov
in
sbbl
sub
insb
mov
add
and
int
sub
mov
mov
sahf
mov
jg
jns
pop
pop
scas
out
jg
add
pop
hlt
add
mov
enter
sub
loop
push
lods
fwait
je
xorb
sti
xor
jb
stos
push
pop
arpl
int
pop
int3
insb
inc
push
pop
mov
push
cmpb
insb
sub
adcb
jp
cwtl
jmp
inc
mov
add
mov
sti
mov
cli
rorl
xchg
insl
xchg
cmp
enter
mov
jp
mov
xor
jns
stos
sahf
dec
mov
add
or
push
or
xchg
fimull
cmpsl
adc
push
enter
into
adc
cmp
cmp
add
imul
in
push
or
cmp
test
mov
jle
xorb
pop
pop
leave
bound
loope
ljmp
aad
xor
sub
enter
hlt
lock
in
or
fsub
push
or
sarb
xchg
inc
add
push
arpl
call
jg
lods
pop
mov
adc
push
jp
dec
dec
lret
insl
fidivl
xor
xchg
and
jmp
mov
jno
test
inc
lcall
inc
insl
loopne
scas
jb
xchg
mov
mov
cmp
sub
inc
fstpt
lds
ja
loope
xor
aam
push
pusha
add
fcomi
mov
lcall
xchg
test
icebp
aad
test
bsr
push
out
mov
pop
lcall
imul
int3
or
jl
mov
negl
jno
mov
cld
daa
out
cmp
cwtl
jecxz
cs
push
int
das
pop
shr
add
mov
push
ss
jp
and
xchg
sbb
popf
dec
adc
inc
fcmovne
push
sbb
sub
jo
cmpsb
xchg
push
mov
pop
adc
out
cli
lds
jp
add
imul
mov
rcr
mov
jl
dec
push
ret
inc
testb
outsl
cld
xlat
in
mov
cmp
sbb
rcll
lcall
loop
dec
mulb
lods
inc
jmp
clc
mov
lahf
jae
push
xchg
addb
mov
int
mov
lds
int3
or
jmp
jmp
sar
push
mov
hlt
and
xor
shlb
jne
je
inc
inc
and
cli
push
pushf
enter
pop
inc
xchg
fadd
lods
hlt
and
rol
mov
gs
mov
cmp
mov
aaa
cmpsl
xor
andb
fisttps
or
dec
pop
xor
xchg
push
dec
in
rcr
icebp
jge
jecxz
pushf
cs
mov
xchg
adc
jo
add
mov
out
push
sbbl
xchg
loope
fidivrs
mov
mov
dec
mov
sub
xor
xchg
sbb
lcall
jnp
sub
xor
push
lret
icebp
cmp
fsubrl
dec
sbb
mov
adc
push
ljmp
mov
daa
pushf
push
int
fmull
add
sbb
mov
fucom
pop
pop
mov
push
jno
rorb
fs
push
or
dec
mov
jb
jns
cld
sub
bound
jmp
xchg
cmp
movsl
jp
sub
or
cmp
mov
pop
jns
add
cmpsl
inc
movsb
lea
hlt
fidivs
loope
mov
hlt
inc
lods
and
mov
mov
popa
rcrl
push
push
adc
sub
dec
imul
ret
inc
jbe
xchg
push
adc
fwait
or
xchg
fnstsw
sbb
ja
in
pop
fsubrl
mov
inc
fcomp
or
pop
fdivl
adc
jmp
roll
mov
mov
idiv
into
xchg
repnz
mov
sarl
cmp
mov
push
pop
adc
cmp
call
das
mov
dec
repnz
shl
mov
push
iret
test
sbb
arpl
test
pop
filds
xor
push
jnp
and
push
or
mov
imul
push
mov
repnz
fisttpl
sbb
push
orl
bound
push
inc
jae
xor
push
cli
mov
cmp
stos
xchg
adcb
insb
mov
jg
fimuls
andb
sbb
push
inc
ja
pushf
cltd
and
outsb
insb
or
xchg
add
popf
mov
mov
icebp
sub
fs
mov
mov
or
aas
push
xor
lock
push
cli
das
movb
cltd
mov
test
jo
sub
loopne,pt
ret
pop
xor
int3
ret
adc
jo
in
push
add
lret
inc
movsb
xor
repnz
pop
pop
leave
xor
and
push
mov
pop
pop
in
pop
xor
pop
xor
shrb
mov
mov
cmc
ja
add
xchg
pop
lods
jns
sub
bound
lock
popf
dec
repnz
adc
test
mov
jg
repnz
cmp
sbb
mov
aad
xchg
aad
movsb
cvtps2pi
xchg
dec
test
fstp
push
iret
gs
pop
fwait
push
fwait
jg
mov
stos
xlat
cmp
repnz
aam
push
sahf
popa
outsb
jmp
out
mov
test
sbb
add
or
or
shlb
or
push
push
sahf
out
xchg
mov
mov
rorl
xor
repz
xchg
test
inc
fidivrl
pop
push
jne
pop
xor
inc
jp
sahf
inc
pushl
mov
mov
xor
testl
je
ja
pop
ret
add
test
ret
movsb
xchg
lds
push
sub
sarb
movsl
lods
push
pop
mov
ror
mov
sar
insb
js
cmp
hlt
jo
adc
inc
loop
lahf
lret
ficoms
or
inc
fsincos
inc
repz
into
mov
enter
xchg
movlps
loope
pop
and
adc
scas
xor
outsl
test
inc
push
outsb
xchg
cmp
mov
push
repz
pop
aad
in
xor
dec
or
cltd
cmpsb
push
cmp
sbb
push
lea
inc
data16
push
js
inc
popf
sti
pop
cwtl
jns
iret
dec
lods
divb
push
mov
hlt
lcall
mov
vmread
jno
jae
xor
ds
insl
lret
js
mov
lock
mov
xchg
mov
pusha
or
fsubs
jmp
fs
jo
in
pushf
pop
adc
adcb
outsb
inc
push
fidivrl
push
outsb
test
bound
mov
clc
repnz
loopne
inc
or
pop
mov
ret
fcmovb
pusha
mov
inc
mov
mov
or
ds
in
pop
outsb
and
jno
and
je
iret
andb
aas
xchg
xchg
clc
mov
arpl
and
pop
and
jle
negb
outsb
jae
xor
mov
pop
stos
repz
jo
lock
insb
insl
ss
aas
push
mov
lods
enter
sub
xchg
ret
mov
pop
mov
push
pop
movsb
mov
jns
loopne
or
leave
adc
xor
and
and
std
pop
dec
repnz
stc
andb
mov
sbb
fcomi
aaa
fdivp
jns
cltd
rcll
call
push
pop
ss
lods
fisttpll
xchg
pop
int
call
rclb
call
jne
sub
icebp
or
add
xchg
push
inc
lcall
pusha
addr16
pop
stos
pusha
push
mov
outsb
addl
test
leave
push
pop
pushf
imul
xor
mov
push
lods
lock
cmp
fmul
sub
dec
pop
sub
test
push
movl
and
or
add
mov
mov
pop
adc
adc
sub
sub
mov
add
fcmovnbe
scas
sbb
mov
sbb
jmp
xchg
jl
mov
scas
and
roll
enter
out
aad
jecxz
scas
fwait
sbb
mov
mov
push
jno
cmpsl
test
sub
cmp
in
jmp
in
jnp
aad
inc
ja
mov
mov
pop
or
add
jg
jbe
outsb
cmpl
or
add
lret
daa
or
loop
sub
cwtd
add
push
inc
loop
lahf
bound
xor
in
mov
inc
sbb
cmp
movsl
popf
mov
mov
sbb
iret
push
cltd
in
mov
jo
xlat
lock
mov
lret
ret
das
mov
sbb
push
test
xchg
cmp
push
pop
cld
je
dec
cli
inc
mov
daa
lcall
pop
xchg
aaa
arpl
fwait
jmp
and
scas
adc
sub
stos
data16
mov
pop
cmp
enter
push
shl
ss
add
cld
bound
jns
cmp
incb
pushf
test
rclb
and
pop
fwait
xor
dec
sub
cs
popa
mov
pop
pushf
jns
mov
rclb
in
sub
adc
ret
mov
jecxz
sub
fsubrl
addr16
jl
xchg
and
adc
jp
cltd
mov
push
addr16
imul
dec
dec
mov
or
out
scas
sub
cmpsl
ds
stc
lret
mul
mov
pusha
mov
daa
nop
test
test
mov
cmp
ds
xchg
daa
mov
mov
mov
mov
into
sub
cmp
dec
imul
in
pop
inc
outsl
add
mov
es
es
movsl
stc
cmp
inc
repz
cmp
sbb
shl
add
mov
or
mov
pop
imul
jne
and
adc
push
addr16
mov
clc
out
mov
and
lods
xchg
shrd
test
or
or
sub
sbb
jns
ds
jecxz
hlt
cmp
das
lods
std
insl
pop
mov
ljmp
sbb
adc
or
push
add
fwait
les
test
jmp
ja
dec
sbb
sahf
mov
sub
data16
sub
in
pop
jo
xchg
in
mov
test
and
cmpsl
cmp
xor
in
loope
jb
ja
loopne
sti
xchg
jge
or
shlb
lret
xchg
leave
clc
push
fwait
push
xchg
jb
inc
outsb
adc
xor
mov
out
add
ret
scas
xchg
xor
jle
inc
fdivl
dec
mov
sbb
outsl
aas
dec
leave
inc
std
cmp
stc
movsl
in
stos
insl
cmp
cmp
fidivl
scas
mov
sbb
in
shl
jne
outsb
insl
lret
arpl
out
fcoml
push
adcl
test
sbb
addb
jp
jp
decb
xor
mov
adc
jae
mov
push
pop
lahf
jecxz
cli
sahf
scas
push
and
xchg
mov
lods
sub
ds
mov
out
dec
in
outsl
inc
push
ja
movl
xor
jb,pt
jecxz
in
pop
inc
mov
scas
sub
jge
xchg
movsl
adc
add
call
pushf
into
aad
jle
stos
push
xchg
movsl
ficoms
dec
cld
into
nop
rorl
or
shl
test
xchg
mov
mov
popf
mov
cwtl
aad
das
mov
aam
jl
enter
loope
push
icebp
add
enter
mov
lods
cmp
call
sbb
push
jecxz
movsl
ljmp
jne
sbb
mov
cmp
pop
fstpl
fsubrp
fs
push
aaa
lods
mov
mov
inc
enter
xor
add
xlat
lds
fimull
insl
int3
mov
inc
push
lcall
push
fcoml
pop
inc
orb
adc
or
dec
push
lods
cmp
mov
pop
jg
int
sub
cmc
jge
jae
jmp
dec
int
out
cmc
das
jl
mov
das
or
add
roll
mov
pushf
jge
cli
jo
jmp
das
fbstp
cmp
dec
mov
shrb
ja
adc
push
sbb
push
lods
fisttpll
fs
mov
in
leave
outsl
sub
loope
push
inc
jecxz
insb
hlt
dec
mov
mov
jno
popa
iret
xchg
iret
ja
es
test
inc
stos
or
sahf
imul
dec
out
insb
jno
push
fucomp
sarb
bound
test
pop
aaa
jle
cmp
ja
into
cmp
shll
cmp
add
inc
push
xlat
outsl
jnp
nop
mov
pop
daa
je
pop
jb
lods
leave
inc
xlat
fcmovne
cwtl
ja
or
mov
jge
jg
sub
stos
lret
adc
aas
inc
jle
push
jne
in
clc
imul
or
bound
cmp
fildll
add
xchg
sub
pop
xchg
int3
and
or
gs
fcomps
divl
cmp
loopne
pop
pop
lds
pop
xor
push
js
loop
add
cmpsl
xor
mov
pop
es
icebp
dec
es
out
loopne
std
repz
mov
popf
mov
cli
pop
jp
and
mov
cmpb
or
lock
jl
clc
mov
popa
cmpsl
mov
xor
jb
ret
mov
mov
xchg
mov
xchg
jg
fcoms
lock
dec
mov
pop
xchg
mov
sahf
add
pushl
jp
sub
push
fcomps
test
fstpl
ss
push
push
faddl
mov
sbb
repnz
gs
mov
call
popa
xor
jns
pop
icebp
shlb
gs
ljmp
loop
std
or
rorb
push
insb
mov
leave
js
jge
int3
jecxz
ficompl
xor
aaa
jp
and
add
dec
sbb
in
mov
repnz
lahf
mov
test
add
fstps
mov
daa
mov
dec
insb
insl
jg
mov
div
mov
jno
jne
pop
popf
and
pop
cmpsb
add
mov
insb
out
ja
mov
fcomps
adc
push
xchg
lea
inc
xor
aaa
in
cli
sbb
mov
add
jl
xchg
scas
movsb
push
cmpsb
mov
shl
lods
and
rcr
sbb
or
sub
std
lea
mov
jns
je
aam
in
push
dec
dec
xor
xchg
inc
push
scas
sbb
mov
rcl
cmp
cmpl
stos
cmc
push
adc
aam
mov
xchg
pop
mov
sahf
popa
idivl
jl
lods
lret
jbe
das
and
sahf
and
jns
out
push
cmpl
xchg
cmp
cwtl
es
mov
aaa
sub
push
sbb
enter
scas
leave
push
out
fldl
rcrl
push
mov
aam
int
popf
mov
popf
dec
testl
mov
scas
push
stos
inc
iret
jl
pusha
jae
push
lea
cmp
lahf
lretw
jl
push
mov
mov
insl
loop
xchg
push
push
ja
mov
test
and
or
xchg
xor
lods
mov
sti
stc
dec
lret
pmuludq
sub
xchg
lcall
dec
dec
cmp
mov
enter
jns
aas
mov
popa
test
ret
add
daa
or
xchg
dec
fisttpl
pop
cmp
cwtl
xchg
test
loopne
sbb
sub
lock
sbb
dec
sub
hlt
mov
mov
mov
mov
lahf
adc
add
mov
xor
fs
rcll
mov
in
adc
dec
inc
xchg
or
lods
outsb
or
ret
pop
push
gs
pop
mov
aam
mov
push
jge
xchg
xor
popa
fwait
adc
test
pop
pop
dec
jl
xor
jnp
stos
add
jbe
addr16
sbb
movsl
out
test
or
fs
and
add
aaa
mov
or
push
fistps
into
xchg
cltd
roll
aaa
mov
sti
dec
ss
imull
or
sub
fcomp
pop
sub
pop
test
xchg
inc
mov
popf
inc
shrl
jmp
cli
push
push
insb
pop
mov
cltd
test
push
push
cld
xor
test
out
add
jle
imul
pop
sbbl
xor
loopne
sbb
xchg
push
mov
iret
xor
sbb
mov
xchg
inc
clc
outsl
dec
sub
cmp
push
mov
mov
push
testl
jmp
insb
xor
popa
dec
pushf
lods
xchg
dec
or
incl
fcomps
cmpsb
scas
and
jnp
test
jmp
jp
sti
jbe
inc
inc
repnz
cmc
shl
or
nop
or
push
mov
cmp
mov
cld
xchg
pusha
sbb
gs
jne
movsl
xor
cmp
sbbb
push
es
iret
xchg
adc
and
rcrb
xor
push
jge
mov
mov
pop
scas
pop
pop
ljmp
das
dec
mov
push
jg
xchg
jle
mov
adc
or
mov
fisubrl
lods
test
push
shll
popa
push
add
inc
mov
pop
lea
aaa
ror
adc
stos
cltd
lahf
js
ljmp
stc
out
jl
lret
cli
js
call
adcl
push
jbe
cmp
in
xchg
rolb
mov
jne
mov
movsl
sbb
in
cmc
jne
enter
mov
xor
je
stos
mov
repnz
ss
cmpsb
cmp
dec
lock
pusha
ja
jecxz
sub
fisttpll
xor
lcall
mov
mov
and
rcll
mov
bound
jge
mov
jne
xor
sub
arpl
xchg
jbe
sub
jbe
jmp
cltd
mov
int3
cli
inc
mov
mov
rcrb
push
pop
jb
lcall
cmp
scas
lret
xchg
mov
test
xchg
add
movsb
inc
adc
loop
xor
mov
aas
bound
imul
mov
jecxz
cltd
xlat
je
cmp
call
aaa
je
negl
jg
sub
das
loopne
insb
mov
push
inc
adc
bound
and
cmp
arpl
jg
mov
cmp
push
dec
mov
and
icebp
jbe
adc
jp
jge
mov
mov
stos
arpl
pop
pop
xchg
xlat
movsb
jge
scas
and
add
outsb
fstps
enter
ror
add
mov
stos
dec
pop
gs
out
adc
cmc
cmp
adc
loop
popa
bound
in
flds
pop
mov
push
push
cmp
nop
insb
xor
lods
jns
pop
mov
mov
aad
mov
scas
pusha
ja
dec
lods
lea
mov
jg
add
pop
push
mov
add
push
jle
fstpt
pop
icebp
push
lret
leave
cmc
call
and
mov
das
adc
push
pop
xor
stc
and
out
mov
push
in
xor
add
fcoms
jg
faddl
movsl
and
pop
sbb
pop
es
pop
push
int
mov
sub
sahf
and
mov
in
bound
stc
imul
push
sub
ljmp
add
push
push
pop
call
int
out
pop
popa
andl
mov
mov
xor
jmp
jecxz
lods
ss
fadd
jecxz
inc
into
jg
cmp
jmp
inc
dec
pop
cmpsl
repnz
inc
ja
cmp
pop
test
inc
or
gs
jmp
and
lods
pop
xchg
pop
arpl
je
insw
jb
js
loopne
test
jo
cmpsl
or
fistps
loopne
ja
push
pop
jnp
inc
mov
std
dec
mov
loop
movsb
jle
xchg
push
and
iret
xorl
daa
lcall
jnp
mov
cmp
add
cmp
mov
rcr
mov
repnz
sbbb
and
mov
pop
aam
insb
mov
cmp
inc
ds
aad
push
xchg
mov
and
out
adc
sub
dec
loope
pop
subl
xchg
negb
push
xlat
push
mov
outsb
pop
clc
orl
leave
xchg
mov
dec
je
data16
dec
and
das
pusha
fisubrs
mov
ret
or
add
jb
add
out
addb
dec
pop
dec
adc
leave
fwait
insl
fbstp
es
hlt
test
pop
std
test
jae
popa
sahf
int
sbb
iret
adc
insl
loopne
aad
ret
sahf
xchg
aas
pop
mov
mov
ljmp
lcall
cmpsl
mov
orl
fwait
ja
ljmp
jnp
mov
arpl
mov
fdiv
push
jb
addr16
xchg
loope
das
sbb
mov
fwait
jmp
testl
push
loop
fidivs
mov
sbb
mov
cmpsb
mov
xor
ror
stos
sub
push
in
sti
jbe
call
ja
fwait
and
push
or
popf
add
in
cli
testl
popa
and
pop
scas
push
mov
fisubl
sahf
and
movsb
xor
jle
mov
daa
mov
adc
arpl
fsubrp
stc
and
insb
xor
dec
lret
shrb
gs
aad
lods
inc
adc
mov
pop
mov
cli
out
clc
test
push
dec
sti
sbb
adc
popf
mov
or
nop
mov
pop
fbstp
mov
mov
sbb
push
iret
mov
loopne
mov
dec
sar
push
cmpb
sti
cmc
sbb
xor
into
por
sub
cmp
xchg
jle
out
jne
mov
add
xchg
inc
jne
dec
lahf
orb
jmp
mov
mov
inc
ja
pop
repnz
pop
lea
inc
add
mov
rol
callw
push
addb
dec
sbb
int3
test
pop
mov
push
lret
les
sub
push
sub
pop
stc
imull
mov
push
push
mov
pop
ficompl
mov
jge
inc
cmpsb
leave
add
mov
mov
xchg
lahf
dec
testb
jecxz
lcall
xorl
ljmp
pop
ja
popf
push
arpl
pop
pop
mov
mov
pop
xchg
lret
inc
adc
push
xor
push
fucomp
cmp
xchg
int3
inc
fsubrl
hlt
lods
pop
mov
jecxz
aam
jle
sti
push
xchg
xchg
inc
push
fiadds
stos
mov
mov
icebp
jle
mov
lahf
stos
enter
inc
jg
jecxz
add
add
adc
pop
sub
mov
inc
push
adc
jns
adc
sub
push
ss
sbb
sbb
outsl
jo
aas
fadds
fldt
leave
rcrb
push
mov
push
xchg
mov
adc
mov
sahf
shlb
jnp
mov
cmc
loopne
or
inc
mov
out
sbb
popa
jbe
cmp
andb
inc
mov
movsb
fidivs
leave
mov
xor
enter
and
cmp
jns
fmulp
repz
xor
or
mov
mov
push
enter
push
xor
and
inc
push
lret
loopne
imul
js
inc
cmp
xchg
out
cwtl
je
mov
or
xchg
das
int3
xchg
mov
or
adc
mov
dec
and
adc
test
cmp
sub
add
gs
xchg
mov
imul
xchg
ficoml
out
leave
insb
xchg
dec
pmullw
mov
or
std
or
xchg
sbb
cmp
icebp
lret
movsb
sbb
in
xchg
iret
lock
dec
fcomi
test
and
sub
outsl
mov
xchg
mov
pop
lds
out
jle
pop
xor
jo
pop
icebp
lea
test
xor
or
int3
icebp
or
aam
mov
adc
divl
push
or
out
mov
xchg
xor
pop
outsl
leave
lea
mov
xchg
mov
outsb
jecxz
mov
mov
repz
insb
aad
es
lcall
dec
sub
push
mov
rolb
gs
xchg
adc
cmp
insl
mov
outsl
mov
push
lcall
cmp
stos
cmpsl
push
sarl
jbe
adc
inc
and
fsubp
xor
mov
cmp
dec
push
pop
leave
popf
mov
xor
push
mov
out
adc
mov
std
adc
dec
and
int
xorb
outsl
adc
sbb
je
pop
dec
ljmp
addl
lods
pop
mov
stc
dec
push
fcmovnbe
fildl
mov
dec
test
mov
sahf
jp
pop
aad
movl
cmp
cmp
adc
ficoms
test
sbbl
in
sti
or
mov
arpl
ficoml
dec
adc
or
add
xor
push
push
pop
repnz
adc
mov
push
daa
outsb
test
push
aad
jnp
rorb
ret
and
js
mov
push
mov
hlt
test
jle
daa
jg
adc
pop
fmull
cmpsl
mov
inc
mov
insl
add
xor
push
sbb
out
ficoml
xor
or
test
out
dec
or
in
sbb
cmp
adc
icebp
leave
inc
adc
sbb
popf
sub
imul
cmpsl
xchg
testl
aad
xchg
cs
loopne
aad
outsl
movsb
pop
jbe
xor
cld
test
loope
data16
insl
pop
or
sbb
test
or
cmp
repz
push
clc
xor
push
lea
sbb
and
cmp
push
xor
xchg
clc
test
iret
mov
push
or
jo
pop
enter
cmpsb
and
imul
loope
fwait
adc
int3
shrl
or
adc
insb
scas
aaa
hlt
push
jae
push
testl
sbb
push
test
xorl
mov
sbbl
adc
insl
jg
dec
aas
sub
adc
pop
jno
vxorpd
xor
es
push
test
jge
sub
ret
daa
call
lret
movsl
jl
pop
rcrb
xor
ret
adc
sub
mov
or
or
subl
xchg
repnz
xor
dec
or
pop
mov
fadd
fmulp
fisubl
fisubs
js
test
mov
ror
sub
fwait
fwait
ret
dec
xchg
and
sub
mov
leave
mov
ret
xchg
movsb
test
subb
xchg
mull
adc
pop
loopne
pushf
push
adc
xchg
out
fs
xor
cwtl
movsb
mov
les
and
and
sbb
dec
dec
cmp
loop
mov
aaa
or
sti
into
test
aas
iret
mov
loopne
push
jge
push
pop
rcll
ficompl
mov
jl
inc
jns
test
and
sub
fcoms
add
dec
inc
mov
enter
inc
lock
and
xchg
in
pop
and
jecxz
and
insl
add
or
or
push
and
loope
lea
add
in
fiaddl
mov
nop
pushf
mov
mov
movhps
push
push
out
icebp
fs
fmul
lcall
push
movsl
or
and
sbb
fcmovnu
sbb
in
hlt
test
sahf
sbb
xchg
out
or
out
lods
insl
xchg
imul
mov
adc
daa
xor
in
cmp
test
xchg
enter
add
inc
sub
fmul
bound
sahf
testl
add
or
push
pop
fldenv
dec
xlat
lcall
clc
jp
xor
adc
cmp
xchg
xchg
rorl
test
jecxz
sub
jge
addr16
fprem
and
dec
test
cmp
jnp
mov
lock
je
add
shrb
cltd
cwtl
fistl
loop
adc
popa
test
pop
repz
in
sub
stos
add
push
jbe
pop
sbbb
loop
dec
mov
dec
jp
pushf
pop
loopne
jge
add
xchg
es
xorb
repz
cmp
sub
sub
dec
aas
push
loop
stos
addl
jns
pusha
jecxz
dec
in
pusha
aaa
dec
push
leave
mov
aas
xchg
sub
and
pop
xor
sbb
adc
add
in
aaa
adc
add
mov
cmpsb
bound
jle
lods
in
movl
mov
ja
cmp
adc
xchg
arpl
add
sub
sbb
jmp
icebp
dec
jmp
push
inc
ljmp
loopne
xchg
xlat
fistl
stc
out
pop
sub
inc
adc
adc
dec
inc
and
add
jae
fsubl
sub
insl
movsl
jo
daa
stos
subl
repnz
adc
daa
mov
sub
jne
sub
scas
jo
sub
cmc
jns
jne
xchg
pop
add
mov
pop
stos
cmp
jle
cmc
movsl
bound
jl
jno
aam
mov
je
out
in
xchg
test
push
icebp
les
jp
mov
mov
xor
jnp
shll
cmp
dec
lds
cld
stc
or
cmp
mov
xlat
mov
or
inc
cld
cmp
fistpll
pop
lock
imul
jg
sub
mov
cmp
lods
cwtl
and
clc
stos
or
jo
lea
mov
push
push
inc
sbb
inc
push
call
lret
out
push
fnsave
sbb
xlat
ret
and
in
scas
push
adc
movsl
ret
fbstp
xchg
mov
cli
xor
cmp
insl
fisubrl
xor
push
aas
bound
pop
and
stos
loopne
roll
fstl
dec
pop
jg
mov
test
ss
out
les
or
push
push
fildll
cli
jmp
int
ljmp
insb
fcoml
lcall
push
inc
mov
jmp
sbb
imul
ss
outsl
lds
mov
and
inc
mov
in
mov
out
xor
mov
sahf
xlat
out
xor
jl
out
mov
cmp
cmpl
and
pop
sub
dec
adcb
add
pop
jns
xchg
cmp
lods
jb
mov
fdivrp
mov
inc
xor
adc
sub
mov
jmp
cmp
and
inc
jae
stos
cmp
inc
les
xor
sub
psllq
xor
call
loop
pop
gs
ljmp
mov
cmp
loop
xor
scas
pop
sbb
and
adc
lret
fld
mov
push
or
push
int3
xor
xor
mov
jg
mov
pushf
dec
fstl
xchg
repz
pop
mov
in
pop
cmp
xlat
shrl
sahf
test
mov
add
cmp
inc
sub
ja
rclb
lret
test
sbb
out
lea
stos
push
negl
repnz
jbe
into
sub
dec
call
ss
mov
stc
out
js
out
sbb
or
test
sbb
xor
fwait
jecxz
bound
vmaxsd
loop
int
ljmp
pop
adc
imul
inc
out
cwtl
enter
adc
out
cltd
jo
pop
and
imul
pop
mov
mov
adc
xor
mov
test
xchg
test
repz
call
setl
or
xchg
insb
iret
jge
inc
push
lret
insb
loopne
jp
sti
dec
popf
sub
and
sahf
jns
cmpsl
mov
das
mov
cmpsl
fwait
das
scas
imul
cltd
movsb
and
rcr
loop
ss
push
mov
mov
inc
cwtl
xchg
push
aam
insl
test
mov
fisubl
mov
pop
mov
in
lahf
cmp
das
xchg
mov
out
xor
fldenv
jle
mov
cmpsl
push
and
mov
mulb
adcl
je
sub
ret
pop
and
imul
dec
pop
in
call
movsl
mov
fstpt
outsl
inc
mov
add
adc
nop
sbb
xchg
push
mov
out
mov
add
sahf
add
dec
std
mov
sub
cmp
shl
jo
or
fcomps
cltd
cmp
sub
cwtl
pusha
dec
inc
mov
hlt
sub
pop
xchg
and
mov
lods
rcrb
jl
std
or
lea
lock
stos
arpl
push
test
movsb
mov
pop
jle
pop
jb
jge
adc
iret
inc
jb
sub
incb
push
jo
xor
cmp
pop
out
or
jnp
shrl
and
je
mov
out
daa
iret
fnsave
dec
shrl
lahf
sub
subl
arpl
jnp
mov
cwtl
ret
out
sbb
mov
orl
xor
sub
ficomps
mov
out
sbb
mov
push
nop
cmpsl
mov
stc
ror
pop
clc
aam
or
jnp
inc
dec
dec
mov
popf
add
repnz
loop
jmp
pop
cld
test
or
stc
push
and
xor
jnp
repnz
loop
cmpsb
cmp
inc
inc
sar
or
mov
mov
outsb
ja
imul
cmp
sti
xchg
leave
jecxz
dec
jmp
adc
inc
js
idiv
or
and
adc
test
adc
das
push
or
mov
mov
mov
lea
inc
xlat
out
shlb
popf
xchg
or
adc
out
xor
mov
ss
xchg
mov
pop
push
cmp
adc
imul
insb
jnp
or
test
or
movsl
push
and
mov
pop
mov
scas
pop
sub
movd
and
xchg
data16
or
insb
xchg
nop
pop
jo
xorl
mov
sbb
xchg
repnz
pushl
inc
lods
mov
and
std
fisttpll
adc
loope
rcll
and
sbb
mov
fdivl
inc
xor
ja
hlt
outsl
xor
scas
pushw
jge
leave
jge
xlat
inc
dec
sbb
adc
sbb
add
cs
lahf
dec
aad
aam
jno
push
dec
cmp
enter
mov
out
stos
jno
or
fsubs
mov
int3
jmp
bound
inc
xchg
mov
inc
sub
mov
cmpl
sub
lahf
jae
outsb
inc
sbb
into
stc
imul
lods
test
adc
daa
xor
cs
push
es
je
movsl
rcr
aas
add
movsl
mov
mov
fbstp
inc
jnp
mov
adc
cmp
lods
xchg
pushf
cmpsl
pop
cmp
fnstsw
ficomps
loop
xor
jo
xchg
cltd
std
out
cmp
sub
cltd
bound
add
and
data16
jmp
cmp
int3
mov
or
hlt
popf
mov
pop
stos
adc
mov
sti
and
cmp
jmp
jl
cld
test
in
rorl
dec
mov
fcoml
add
inc
sub
outsb
mov
pusha
sub
sbb
movsl
subl
scas
mov
pop
xchg
scas
jge
lea
in
jg
fimull
mov
pop
mov
or
test
test
cli
xor
add
outsb
cltd
inc
pop
fmul
daa
pop
add
mov
push
xchg
add
test
jno
cmp
mov
xchg
xlat
cld
jns
outsl
orb
out
mov
jb
add
sar
aaa
jns
sub
aaa
iret
xchg
xor
push
aad
inc
mov
ss
pop
jno
add
or
imul
add
cmpl
or
gs
dec
movb
and
or
loope
push
cmp
pushf
mov
lods
push
js
cmp
ret
aad
loop
daa
cmp
inc
mov
jns
jae
int3
dec
mov
sbb
arpl
mov
mov
ljmp
sub
sbb
mulb
addr16
adc
xchg
push
loopne
pop
pop
push
lods
adc
adc
jno
test
stos
sti
sarb
pop
dec
ss
call
or
xchg
xchg
cmp
and
add
lahf
xchg
mov
mov
xchg
jmp
movsl
add
or
jno
pop
ds
fistpl
js
fistps
jae
jp
push
jae
addr16
inc
mov
sub
cmp
inc
insl
lods
clc
call
push
push
lahf
aad
notl
flds
and
js
mov
jnp
pop
pop
cmp
stos
lcall
notl
leave
xchg
xor
stc
jmp
and
mov
xor
inc
scas
insl
adc
and
mov
enter
dec
cmpsb
sbb
fcoms
xor
cs
aas
test
sub
mov
aaa
mov
ja
xor
adc
mov
cmp
adc
dec
mov
sub
repnz
sub
adc
in
pop
mull
push
add
dec
rorb
add
divl
sub
jmp
iret
xor
ja
popa
adc
je
in
lcall
pop
fistpl
inc
cmpl
lods
push
mov
adc
xlat
add
push
cmp
aad
aas
xlat
mov
xor
jle
jb
add
faddl
sbb
pop
out
cmp
adc
aas
mov
and
and
mov
pop
push
imul
into
or
sub
fbstp
jp
mov
xor
dec
orb
nop
dec
or
aam
neg
sahf
xor
mov
and
out
shrb
ljmp
outsb
fisubrl
fiadds
fdivr
ds
sbb
stc
sahf
test
xchg
adc
push
fwait
outsb
add
jae
insl
fcompp
dec
ficomps
sub
pop
adc
dec
add
enter
icebp
xchg
or
lea
sbb
rcl
leave
mov
daa
in
sarb
or
movl
sbb
test
enter
subb
xchg
or
xchg
shlb
mov
cs
sub
loope
cmp
pop
sub
les
jo
mov
in
fstpl
popf
mov
aaa
pop
push
stos
imul
notl
mov
rolb
jb
inc
aad
popa
out
in
cmp
jge
lods
fldenv
cmp
xor
push
mov
lahf
adc
adc
xor
mov
inc
in
xor
pop
sahf
popa
fstpl
in
mov
pop
lret
xlat
setge
inc
movsb
mov
push
pop
add
ret
popf
push
mov
push
loop
test
mov
push
out
push
push
sbb
mov
push
or
add
sti
arpl
cli
adc
and
jnp
aam
add
pop
xor
xchg
cltd
loope
repnz
ja
or
cwtl
push
adc
sbb
and
fisttpl
mov
mov
repnz
setg
out
inc
loopne
and
adc
mov
lret
ret
pop
test
xchg
cmpsb
addr16
or
call
xor
adc
push
and
das
lret
push
push
inc
test
cmp
fsubrp
leave
pusha
unpcklps
das
out
add
mov
dec
add
cmp
dec
and
cmc
mov
xor
push
call
or
sarb
mov
jnp
mov
xchg
push
daa
cli
inc
mov
sbb
aam
add
push
xor
or
cs
add
jp
outsb
inc
test
jns
mov
cmp
ret
add
ja
loop
mov
add
std
cmp
or
jp
daa
enter
push
ja
cltd
jle
mov
push
sbb
lret
mov
mov
daa
cmpsl
scas
mov
out
jecxz
fs
fcomi
jnp
loope
dec
adc
test
xor
add
movsb
mov
mov
int3
cmpsl
aad
inc
outsb
cmp
mov
test
fldenv
mov
adc
je
cmc
jmp
ds
mov
ficoml
sbbb
ja
jo
sbbb
fpatan
testl
sbb
sub
mov
fwait
dec
sub
sub
lret
cmp
loope
dec
test
rol
hlt
xor
test
jae
pop
lock
cmp
xor
jmp
or
in
xchg
sbb
es
ljmp
mov
cmpsb
xor
test
sub
imul
not
fnstenv
mov
daa
jmp
pop
mov
mov
rclb
push
push
sub
push
push
in
pop
rcl
call
adc
pop
jbe
pop
sub
inc
je
loop
loope
mov
jbe
push
adc
outsl
out
rolb
daa
cmp
and
shrl
push
xor
and
fimull
mov
scas
lds
icebp
outsl
shll
in
sub
push
or
testl
shlb
xlat
lea
add
adc
mov
lds
test
fcom
push
pop
mov
lods
insb
pop
jp
jg
mov
addr16
mov
clc
mov
push
sub
shr
fisubs
add
in
mov
ja
cmp
jnp
loop
mov
rcl
hlt
cs
adc
xchg
in
and
jb
dec
and
cmp
cmp
pushf
add
pop
mov
push
xor
xor
andb
stc
lsl
add
push
movsb
lcall
sbb
enter
push
adc
rolb
outsl
cwtl
and
fnsave
popl
mov
sbb
cmc
dec
add
aam
fsub
ret
mov
mov
out
sbb
inc
jb
inc
lds
dec
dec
xchg
xor
shl
dec
dec
out
cmc
add
fdivs
std
xchg
popf
xchg
iret
pop
xor
fbld
lock
gs
aad
mov
insb
rorb
mov
inc
pushf
cs
mov
xor
imul
sysexit
dec
jne
or
test
sub
shrb
repz
pinsrw
pop
pusha
mov
je
xchg
dec
ret
push
in
mov
mov
or
xor
pop
jl
jmp
mov
inc
or
dec
jg
push
add
jb
xlat
inc
sbb
xor
adc
or
sbb
pop
jns
fidivl
cmp
inc
xchg
sub
cmp
loopne
pop
call
pop
cmpl
adc
cmp
push
gs
sub
sbb
shl
sar
ficompl
inc
popf
dec
mov
push
cld
data16
dec
jae
add
xor
add
or
lods
stc
mov
add
pop
and
cs
sub
faddl
idivl
in
into
cs
inc
jnp
inc
pop
bound
lods
jp
repz
xor
in
xchg
push
das
das
mov
addl
sub
add
lahf
rclb
imul
fstl
mov
and
incl
cmp
stos
sbb
push
mov
xchg
adc
add
pop
push
arpl
pop
inc
cmp
repnz
add
jge
xor
jb
in
cmpsb
pop
lret
mov
jge
push
mov
faddl
adc
pop
insl
popl
dec
inc
or
ja
mov
fsubl
sub
lods
jg
jae
adcl
adc
into
mov
pop
insb
pop
andb
jno
stc
lods
rcrb
clc
sbb
dec
movsb
cmpsb
fwait
notl
xchg
inc
adcl
test
and
xor
mov
push
pushf
xor
jo
mov
cmp
test
sbb
push
fimuls
jno
int3
mov
aam
imul
and
push
loop
xorl
out
push
jbe
stc
xchg
pop
mov
aam
sub
fcomip
shl
push
jl
xor
mov
out
enter
inc
adc
js
sub
movb
dec
jb
jnp
adc
loope
clc
and
add
or
scas
fs
adc
push
aaa
dec
inc
sub
scas
std
loopne
and
sti
mov
dec
pusha
int
push
inc
push
mov
or
imul
imul
dec
mov
and
xlat
mov
mov
je
dec
cli
lea
push
pushl
and
jnp
lcall
test
or
mov
or
push
sub
lods
pop
scas
fadds
mov
mov
flds
cmc
cmp
insb
pusha
mov
je
inc
pop
je
jno
jo
enter
mov
add
pushf
add
jg
loopne
mov
mov
or
and
and
clc
insl
bound
push
mov
mov
jne
xchg
xchg
outsl
xor
incl
je
lea
aad
mov
mov
in
adc
div
popl
jns
popf
pop
shrb
xor
pop
push
mov
aaa
icebp
and
pop
xlat
les
clc
loope
push
arpl
push
int
xor
cmpsl
fucomp
ss
and
sbb
test
cmp
sbb
mov
out
cmp
or
scas
cmp
mov
daa
ljmp
fnsave
or
mov
and
jg
mov
mov
and
iret
fdivr
cmp
sarl
cmp
call
shlb
pop
lahf
mov
push
dec
pop
cwtl
inc
push
shrl
movsb
pusha
xchg
ret
adc
lods
push
fstpl
in
adc
mov
lahf
popf
pop
cld
push
das
xor
push
ljmp
mov
popa
mov
ret
in
fsubr
lret
jnp
jno
dec
or
adc
ss
lods
in
cltd
mov
mul
push
ljmp
pop
jnp
in
ret
fwait
aam
add
lods
bound
mov
xor
cmp
ja
jno
sti
add
inc
pop
cmp
mov
push
adc
loopne
cmpsl
aaa
mov
push
mov
xor
push
imul
mov
mov
scas
in
pop
sti
adc
and
out
adcl
popa
cmp
jmp
lods
mov
add
mov
pushf
jns
or
push
cmp
mov
lods
cltd
fcompl
lea
imul
cs
and
and
xor
dec
mov
aad
stos
or
lods
add
mov
idivl
sub
fldt
fwait
cld
inc
int3
cmp
out
movsl
sbb
subl
pop
xor
sbb
out
and
rolb
mov
push
bound
mov
test
xor
adcl
sbb
cmp
push
fcoms
arpl
in
mov
loope
test
sarl
xchg
mov
stc
mov
repz
cmp
in
lock
xchg
lret
mov
fdivp
push
mov
jmp
sbb
jnp
jge
dec
test
sbb
sbb
or
rcrl
mov
sarl
frndint
pop
ror
inc
dec
loop
mov
in
arpl
icebp
or
pop
clc
jbe
pop
xor
cmp
pusha
add
addr16
xchg
xorb
ret
pop
xchg
psubw
push
aaa
enter
jg
cmpsb
ret
addr16
arpl
sub
push
pushf
sbb
fildll
push
add
es
and
xor
adc
adc
or
rcll
fwait
data16
out
push
cmc
ds
outsl
loopne
imul
mov
sub
loopne
cmpsl
ds
mov
mov
mov
jns
push
jge
add
xchg
pop
in
inc
or
xchg
fwait
bound
insl
and
inc
mov
adc
add
lcall
out
pop
and
ficoml
mov
pop
sti
inc
mov
repz
dec
dec
push
cmc
out
and
mov
in
jmp
sub
sub
sub
fwait
cltd
rolb
daa
fsubp
test
repnz
mov
or
sub
cmpsb
mov
xor
jecxz
mov
ffreep
xor
adc
sub
lods
mov
mov
mov
pop
xchg
sbb
xchg
cmpsb
dec
xstore-rng
cmpsl
inc
mov
push
fwait
mov
push
loope,pn
mov
cmp
pop
clc
push
data16
inc
sub
push
lock
jbe
outsb
adc
lcall
ds
repz
xor
pop
in
outsb
lahf
cmp
xchg
loopne
jno
pop
and
sub
aad
inc
xor
jecxz
or
mov
lahf
push
ds
out
outsl
jo
mov
lods
jmp
mov
add
movsl
fstl
mov
loopne
aas
je
jo
pop
cld
sbb
mov
mov
add
inc
das
imul
xchg
enter
and
lahf
scas
fistpll
dec
push
cmp
dec
cmpsl
mov
mov
test
sbb
gs
or
adc
notl
pop
xor
and
push
dec
lcall
outsl
mov
shll
nop
movsl
mov
pop
in
sub
filds
pop
psrlq
gs
aam
fsubrs
ljmp
xchg
stos
lcall
push
test
jmp
fistpll
add
jg
cmc
loop
gs
push
stos
push
call
xor
movsb
dec
out
add
popf
push
addb
movsb
cltd
ljmp
and
int
pop
insb
imul
mov
mov
mov
outsb
mov
sub
mov
add
xchg
iret
inc
ret
imul
cmp
jns
dec
jp
pop
xchg
mov
and
fcmovnbe
leave
movsl
arpl
aas
mov
test
ret
jmp
add
popf
mov
adc
lock
out
test
sbb
mov
jp
mov
fsubrl
adc
out
outsb
bnd
push
lret
shlb
addr16
xchg
data16
clc
shll
cmc
std
inc
xor
cmp
or
stos
xchg
test
bound
int
or
mov
sti
sbb
repnz
adc
adc
lcall
jbe
sub
test
fisubrl
sbb
jbe
outsl
jno
jne
roll
test
outsl
push
and
sbbl
sub
jae
les
cwtl
adc
xor
sbb
out
xor
das
leave
stos
rolb
ret
mov
out
call
cli
filds
inc
xchg
es
fsubl
rorb
orl
or
push
leave
sub
mov
xchg
fisttpll
pop
aaa
aad
into
ret
push
sbb
dec
adc
das
cmp
mov
lods
lahf
scas
mov
out
xor
adc
ljmp
mov
mov
xchg
imul
fldenv
and
in
mov
xchg
aas
push
inc
adc
lea
shrl
cmpsl
sub
jl
jecxz
ror
xor
aam
sbb
insb
adcb
test
sbb
cmp
add
inc
shrb
test
call
pusha
out
fists
inc
adc
ret
or
cmpsb
lahf
mov
xor
pop
jp
mov
insb
pop
mov
mov
mov
cli
push
sbb
adc
int3
xchg
fnsave
into
xchg
xor
dec
aas
pop
insb
cmp
test
adc
jno
fisubs
rol
inc
or
sbb
sbb
fmuls
out
out
test
inc
mov
adc
rcl
push
push
sbb
mov
aas
lods
cmpsb
orl
lea
pop
inc
sbb
push
push
lcall
xor
fwait
icebp
add
pop
add
lods
inc
dec
mov
sti
dec
test
jbe
into
test
inc
ret
xchg
mov
jge
in
xlat
inc
add
xor
mov
mov
cmp
or
inc
mov
pushl
sub
inc
rcll
fidivs
dec
pop
add
data16
aam
adc
add
add
jne
add
testl
jbe
and
repz
or
fdiv
push
mov
pop
xchg
int3
xor
insb
cmp
mov
scas
andb
xchg
call
xchg
sub
out
stos
xchg
inc
mov
cmp
xchg
out
pop
sbb
jae
cmp
dec
inc
sub
arpl
pop
cmc
mov
enter
lret
out
imul
mov
adc
repnz
mov
mov
xchg
std
push
push
or
movsl
add
jl
push
add
pop
pop
fsubrl
push
jae
sbb
fiaddl
stc
xchg
mov
pop
sub
cmp
outsl
push
and
sub
xchg
mov
clc
jae
jecxz
or
sbb
iret
mov
adc
dec
andb
mov
in
cmpsb
jmp
insb
test
add
daa
lahf
or
push
dec
adc
lods
pop
sbb
inc
pusha
sub
sbb
cli
stos
dec
jnp
inc
cmp
loope
inc
xor
dec
mov
push
pop
inc
in
xor
lock
inc
dec
and
and
mov
xchg
dec
sbb
pop
movsb
std
cwtl
out
xchg
or
mov
imul
inc
adcl
jmp
jo
dec
mov
or
scas
inc
mov
arpl
lock
sbb
xor
loopne
pop
rcrb
add
fstpl
sar
add
scas
cltd
add
cmp
adc
subl
gs
add
mov
imull
add
xchg
pop
sbb
mov
hlt
rorl
jns
mov
lods
push
add
ljmp
out
sbb
inc
jle
adc
stos
add
cmp
pop
lcall
push
and
imul
xchg
mov
xchg
inc
adc
loop
aad
insl
pop
pop
mov
and
xchg
movsb
bound
push
dec
sbb
pop
sub
and
stc
outsl
rcll
sarl
stos
mov
aam
sub
xor
movsb
aam
sub
jg
fadd
in
sub
add
shl
adc
mov
shlb
mov
aad
xchg
sti
mov
mov
adc
lret
sbb
jns
addr16
pop
test
cmc
stos
pop
dec
sbb
pop
scas
mov
jmp
insl
lea
daa
jg
adc
test
ret
fcomi
mov
lods
inc
sub
mov
add
jae
and
dec
js
addr16
xchg
fwait
push
dec
daa
addl
add
loop
notb
xor
sbb
shlb
stc
and
fcoml
ret
jge
push
xchg
scas
inc
sarb
scas
mov
lcall
jmp
pop
sbb
adc
dec
dec
xchg
inc
les
xchg
pop
in
push
add
or
loopne
inc
and
sti
mov
sub
add
fwait
icebp
xchg
xchg
adc
notb
xchg
movsl
jae
aad
cld
jno
rorl
stc
aad
push
mov
or
cwtl
setnp
xchg
push
call
sbb
sub
xor
out
push
test
hlt
call
xchg
bound
lds
pop
sbb
scas
stos
in
lods
and
mov
push
mov
push
mov
cmp
mov
mov
idivb
mov
push
mov
daa
ret
jle
push
into
popa
cli
pop
push
ss
les
jno
sti
jno
stos
mov
mov
cmovns
addb
pop
imul
lcall
add
inc
or
rorl
jnp
mov
cmp
test
dec
mov
add
xor
aaa
pop
adc
into
mov
cmp
adc
jl
xchg
xchg
popl
mov
pop
lock
xlat
les
mov
adc
cli
push
mov
cld
leave
cmp
mov
aad
or
sub
add
and
fmulp
loopne
imul
pop
push
imul
dec
xchg
les
dec
fadds
push
add
mov
jp
add
xchg
iret
call
lahf
push
xor
sarl
add
mov
out
sbb
out
add
jo
aas
rorl
gs
movsb
pushf
scas
scas
adcb
push
loop
inc
mov
lock
sbb
cs
sub
jae
subl
aas
int
push
out
pop
mov
push
mov
stos
push
inc
pop
fimull
lods
inc
shlb
sub
stc
dec
sbb
inc
push
stos
mov
out
jl
sbb
ds
xchg
outsl
jmp
dec
sahf
aad
mov
dec
arpl
mov
imul
loop
cmp
call
cmp
outsl
loop
fsubrl
or
sub
mov
sarl
dec
fisttpl
cmc
fdiv
sbb
inc
mov
call
or
es
pop
push
lods
xor
testb
or
inc
imul
mov
or
sti
sbb
cmp
popf
insb
dec
outsl
mov
push
fcompl
push
xor
shrl
pop
inc
test
test
xlat
add
daa
ljmp
mov
rcrl
mov
pop
jo
inc
xor
dec
sub
push
mov
mov
sbb
jnp
mov
xor
jmp
pop
aad
sub
push
or
cmp
inc
out
lret
xor
cmpsl
jns
xor
xlat
dec
push
cmc
xchg
hlt
roll
fsubrs
aam
push
cld
pop
ret
xchg
sbb
aas
idivl
sbb
adc
pop
mov
pusha
call
and
out
notb
es
imul
ja
cmpsl
cmpsb
inc
adc
cltd
data16
jb
jb
xor
pop
mov
cltd
adc
sub
xor
cltd
daa
sbb
hlt
push
test
fnsave
ja
jnp
lret
rorb
sbb
push
pop
cmp
outsb
push
jmp
inc
cmpsl
pop
pop
les
or
xchg
sahf
pushf
pop
pop
sbb
xor
mov
xchg
fucomi
xchg
ret
fsubl
loopne
popf
and
bound
inc
lds
jl
adc
leave
popa
mov
sbb
pop
dec
mov
out
xchg
add
gs
dec
push
adc
out
in
inc
sbb
imul
adc
scas
mov
jle
sub
or
imul
mov
add
shlb
xchg
jl
loopne
pop
lcall
xor
int3
cmp
ss
frstor
dec
cli
ret
outsb
out
ret
out
clc
scas
in
mov
mov
add
call
inc
lods
out
and
cmpsl
inc
dec
inc
in
insl
rorl
std
inc
pop
and
dec
sub
pop
pop
aad
pop
sub
push
pop
adc
loopne
je
fucomip
mov
jns
repnz
xchg
push
cmp
sub
add
xor
jmp
in
lea
push
jmp
and
add
test
mov
xchg
or
movsb
dec
test
lahf
pop
push
movsl
jbe
xor
sub
shrb
dec
xor
dec
push
lahf
pop
and
xlat
adc
cmpsl
adc
add
sbb
pop
cmp
in
clc
test
repz
mov
int3
icebp
xlat
cmpsb
movsl
scas
mov
out
cmpl
inc
dec
cmp
stc
sbb
shrb
or
ret
dec
fwait
mov
jbe
xchg
clts
loope
fwait
mov
push
addr16
sahf
xchg
jecxz
or
and
out
pop
push
iret
sarl
imul
jbe
ror
and
sbb
sbb
or
test
add
sbb
cmpsb
cmc
popa
dec
and
push
cmc
sti
add
xor
stos
add
cmp
into
in
sub
imulb
mov
sbb
test
xor
sahf
icebp
and
dec
aaa
aas
out
pusha
mov
ljmp
inc
pop
push
mov
in
jno
pushf
lock
lock
test
fadds
adc
popa
mov
mov
sbb
sub
loope
lret
cmpsl
push
push
push
lret
sbb
push
mov
test
mov
inc
insl
xchg
inc
sub
sub
push
xor
mov
notb
sbb
jnp
std
dec
pop
aaa
jmp
push
loop
scas
or
pop
negb
add
inc
xchg
push
mov
loope
xchg
jo
test
add
fidivl
mov
lret
inc
or
mov
and
mov
mulb
ljmp
popf
adc
pop
mov
xchg
in
shl
pushl
fldt
pop
pop
jge
sub
mov
imul
nop
adc
in
lea
ret
adc
jne
push
push
test
mov
inc
ret
mov
fisttpl
or
sbbl
daa
sqrtps
gs
add
dec
jbe
mov
repnz
pop
or
or
inc
je
roll
mov
pop
push
pusha
adc
adc
pop
out
mov
in
push
lret
insb
jp
popa
sub
cld
push
dec
dec
insl
or
imul
call
pop
ss
jae,pn
out
dec
xchg
xor
mov
adc
xchg
int3
push
and
xor
sbbb
add
sahf
pop
jg
mov
mov
stos
mov
xchg
mov
sbb
cwtl
es
pusha
and
ficoml
cli
bound
adc
clc
xchg
push
dec
mov
mov
ss
paddq
jmp
in
sub
aas
ds
add
or
or
mov
mov
movb
and
or
call
xor
adc
xchg
out
mov
fsubr
fidivl
scas
stc
lea
xor
dec
arpl
xchg
mov
add
dec
inc
cmc
push
xchg
lock
inc
daa
push
xchg
cmpsb
fcmovne
mov
or
sub
fs
mov
hlt
dec
int3
mov
adcl
call
xor
lahf
jbe
jle
fnop
push
filds
mov
imul
out
xor
leave
mov
dec
push
addr16
or
loope
mov
shll
outsb
xchg
adc
insb
aam
mov
lret
cmp
cmc
add
jmp
arpl
dec
mov
fwait
xchg
or
xchg
call
jo
loope
adcb
sub
inc
and
roll
loopne
add
inc
cmp
sub
out
std
cli
cmp
pop
negl
cs
std
sub
lods
pop
jns
insl
ds
xor
and
sub
cmp
out
xor
shlb
lods
dec
in
adc
sbb
int3
push
popa
pop
mov
sbb
loopne
aad
outsl
aas
push
mov
test
in
lahf
orb
sbb
leave
sub
popa
fwait
mov
popf
ret
movsl
sbb
xchg
bound
sbb
lock
mov
lret
jle
mov
push
jge
mov
imul
sbb
add
jmp
dec
inc
dec
je
dec
mov
ja
insl
test
pop
mov
ret
mov
adc
aad
inc
push
mov
aas
jp
sbb
stc
xchg
xchg
adc
xchg
sahf
icebp
insb
aad
xchg
test
cld
push
sbb
push
loop
pop
inc
movb
out
inc
push
test
mov
dec
dec
xlat
ja
dec
mov
jno
imul
sarl
mov
pop
mov
xor
test
and
mov
xchg
mov
xchg
jnp
mov
stc
sahf
sub
inc
cli
loopne
dec
or
jne
xchg
stos
and
ffreep
leave
cmp
scas
inc
or
sub
repnz
rcr
ljmp
sub
mov
mov
cltd
shl
das
out
mov
pop
insb
jo
lea
movsb
icebp
cmp
rorl
scas
or
mov
sti
jle
cwtl
fcompl
or
mov
and
xor
movsl
pop
and
loope
add
xchg
xor
mov
adc
out
ret
xchg
cwtl
cmp
mov
ret
test
pop
cmp
stc
xchg
inc
cmpsl
dec
push
sldt
cmc
loop
ret
pop
mov
pop
dec
mov
fstpl
and
jp
sbb
aam
xlat
pop
in
arpl
fistps
xor
shl
unpcklps
inc
sahf
jae
not
mov
or
mov
xchg
jge
or
lock
jmp
gs
push
or
mov
movsb
jmp
xchg
xor
loope
rclb
xchg
add
jae
mov
jle
pop
adc
orb
ss
fmuls
mov
mov
cmp
inc
loopne
or
push
sbb
rclb
push
adc
adc
loopne
cs
mov
clc
decb
dec
out
insl
and
cmp
leave
test
stos
ljmp
lock
inc
outsb
filds
rcrl
in
push
sub
fidivs
sub
out
lahf
push
ss
mov
add
mov
dec
cmpl
notb
push
mov
outsb
jg
mov
pop
stc
inc
call
xor
add
es
add
call
sub
imul
sti
and
out
dec
cwtl
jne
cmpsl
mov
mov
push
daa
xchg
jnp
iret
lcall
bound
and
mov
mov
js
sub
addr16
mov
and
mov
mov
lods
outsb
gs
dec
scas
dec
daa
cli
pop
inc
mov
adc
adc
or
mov
imul
jle
mov
mov
std
jp
pop
cs
daa
dec
icebp
ljmp
dec
lahf
sub
rorl
push
push
sub
aas
mov
adcl
push
arpl
and
idiv
cmp
jmp
out
lahf
fstpl
push
je
inc
mov
hlt
mov
cmp
neg
sahf
dec
xchg
arpl
add
cmp
int
sbb
std
out
insl
jecxz
outsl
dec
jge
cld
pop
lea
aam
mov
pop
rcrl
jae
mov
nop
xor
push
fistl
shl
lahf
xchg
dec
lods
jbe
fists
pop
xor
inc
inc
adc
sub
jle
jg
in
sbb
and
inc
ja
cmp
inc
aam
insl
adc
aaa
mov
shll
sbb
in
sbb
ljmp
in
aad
bound
fdivrl
imul
cmp
stos
daa
and
ja
xor
sub
movsl
xor
int3
pusha
loope
mov
imul
sbb
ljmp
add
pop
insl
mov
xor
push
enter
sub
cmc
xchg
cltd
pop
and
cmp
out
and
call
adc
aam
jbe
movsb
out
mov
and
and
push
push
lods
and
push
cmc
popf
sub
mov
xchg
iret
mov
call
and
mov
not
repz
js
loopne
and
and
out
cmp
bound
cli
jg
movsl
pop
idivl
or
sub
mov
dec
sub
mov
add
loope
push
push
sub
lds
add
dec
dec
pusha
lods
jg
lcall
testb
push
inc
cmp
push
orb
movsl
jns
sbb
and
xorl
mov
jmp
insl
jbe
stc
lahf
push
push
mov
xchg
js
adc
fstl
jmp
xchg
movsb
fcoml
enter
cmpsl
adc
jns
push
out
and
movsl
fistl
jmp
pop
sub
xchg
lea
push
xor
cmp
push
call
push
jbe
lret
fwait
std
in
ss
lods
push
mov
xor
jp
cmpsl
push
pop
mov
jno
out
sub
je
mov
call
fcoml
lret
and
and
adc
sar
jno
movsb
arpl
or
jnp
sub
mov
xor
lahf
stos
mov
and
or
mov
out
int
xor
sti
mov
jbe
imul
dec
mov
adc
or
loop
xchg
dec
fiadds
outsl
imul
lock
pop
mov
loopne
aam
mov
and
loop
stos
inc
fwait
add
je
adc
and
add
mov
jno
ljmp
das
aas
mov
cmp
cltd
xchg
jmp
and
inc
lds
pop
jmp
sub
mov
push
and
xchg
add
cld
sahf
rorb
xchg
fcmovnbe
sahf
pop
xor
add
scas
jl
cmp
adc
mov
pop
mov
out
test
pushf
push
out
xor
sahf
loopne
jb
clc
jle
test
push
sub
mov
mov
cmp
in
cltd
hlt
cli
and
mov
sub
mov
inc
adc
ret
bound
std
sub
xor
pop
fdivr
jbe
and
aaa
insb
xor
ljmp
aad
mov
iret
cltd
adc
lcall
data16
andb
xchg
cmp
sub
or
push
xor
cltd
jo
dec
add
jo
pop
cmp
dec
fwait
and
lds
push
sbb
sbb
inc
sub
sub
stos
cmpl
xor
stos
add
add
jne
ja
es
loop
ret
leave
jl
and
int3
rcr
insl
adc
jle
jp
pop
pop
xchg
insb
iret
daa
jecxz
lahf
pop
xorb
pop
lock
jmp
cmp
stos
mov
or
jo
mov
pop
repz
adc
jl
xchg
dec
popf
push
subl
mov
sub
dec
out
push
cmp
xor
inc
rcrb
xorb
dec
in
shld
cmp
inc
or
mov
inc
pushf
jnp
pop
or
cmp
mov
sub
std
stos
or
mov
jns
jnp
mov
xchg
sbb
popa
pop
or
xchg
jge
or
jbe
das
cmp
xchg
into
pop
sarl
arpl
adc
xchg
mov
rcl
xor
cmp
jns
gs
push
xor
mov
shrl
inc
cmpsl
int
mov
sub
fistpll
ds
push
mov
jmp
sar
rcrb
in
insb
dec
int
ljmp
ret
int
popf
xor
and
xchg
inc
fimuls
ret
xchg
mov
out
adc
sti
and
test
push
daa
lds
rol
outsl
push
enter
lds
adc
testl
xchg
pop
daa
aam
test
or
sbb
ja
jle
data16
jmp
movsb
mov
push
pop
xor
je
in
jmp
cmp
cmp
push
cmp
mov
in
jge
xchg
cmp
push
mov
push
shld
in
rclb
cmpsl
mov
dec
mov
mov
hlt
mov
xchg
inc
xchg
ds
das
and
testb
inc
icebp
jecxz
or
sub
cwtl
mov
enter
bound
stos
mov
cltd
xor
popf
clc
dec
in
sub
mov
adc
cmp
bound
dec
push
or
cmc
jb
jns
pusha
or
mov
ja
cmp
mov
or
jge
ret
mov
and
repnz
jg
fwait
lahf
in
icebp
jl
data16
push
ficomps
push
ss
lods
popf
sbb
push
rcr
daa
mov
jbe
dec
pop
into
pop
mov
add
scas
cmp
loope
sbb
js
pop
roll
pusha
xchg
jp
mov
outsl
mov
dec
ljmp
cwtl
jae
adc
ja
or
dec
adc
test
fdivr
xchg
cmp
xchg
dec
ja
sti
cs
xor
xchg
mov
call
rcrb
mov
jmp
mov
daa
xor
mov
cld
shld
sbb
cwtl
scas
out
mov
imul
mov
aas
rcrb
dec
fcoml
insl
xchg
cmp
shrl
push
out
jecxz
adc
push
loope
jne
ljmp
xor
mov
dec
icebp
test
js
xchg
adc
mov
rcr
test
pop
sahf
insl
dec
sbb
cmp
mov
das
in
sub
add
xlat
outsl
ljmp
mov
sbb
mov
pop
xor
dec
rcrb
js
xchg
jne
std
ja
cmc
or
ror
or
cmp
lds
and
inc
xor
push
dec
adc
addr16
jp
cmp
das
stos
das
iret
jp
mov
push
cwtl
mov
xor
rol
loopne
mov
inc
mov
insb
aam
sub
inc
in
mov
xor
pop
das
xor
dec
and
jg
cltd
mov
xor
mov
or
push
daa
sarb
jns
adc
lock
test
cmp
das
inc
push
outsl
fwait
mov
lret
or
inc
jle
xchg
sbb
xchg
push
mov
pop
cmp
push
enter
daa
dec
xor
and
adc
or
call
cld
xor
push
mov
sti
pop
mov
and
mov
pusha
imul
or
push
pop
sbb
cmp
aam
cmp
repz
or
arpl
push
xchg
in
in
xchg
pushf
daa
rorb
or
std
clc
pop
loopne
std
jnp
lods
and
mov
or
es
inc
sbb
test
mov
cld
jp
mov
popf
push
movd
push
sbb
mov
adc
mov
dec
cmp
and
cmc
jg
ds
mov
pop
gs
jge
jbe
cmp
cld
adc
orb
push
shrl
enter
fisubrl
xchg
sub
push
fcmovu
xor
popa
inc
sub
mov
lods
xchg
push
pushf
das
testb
dec
adc
dec
bound
leave
scas
inc
fldcw
lds
mov
add
out
jecxz
or
ret
rolb
rcll
cmp
scas
loope
mov
es
adc
data16
loopne
sbb
out
cmpsb
test
repnz
sub
aas
mov
sub
lret
xchg
and
outsl
cwtl
mov
out
and
movsb
or
cltd
lahf
shl
sbb
and
in
or
mov
std
das
mov
xchg
inc
xchg
fnsave
xor
mov
dec
mov
repz
insl
lret
leave
xor
inc
cmc
cmp
sbbl
ljmp
fs
mov
inc
cmp
sbb
dec
scas
mov
pop
jo
xchg
and
mov
add
rep
adc
inc
es
xor
mov
sbb
push
call
jecxz
lret
cli
fdivrl
call
push
dec
shlb
dec
sub
lock
fadds
dec
and
repz
mov
pop
ja
outsb
push
inc
push
in
jmp
std
out
xchg
ja
fwait
xchg
xchg
push
add
jecxz
and
sbb
lahf
popa
mov
jns
dec
pop
mov
cmpsb
js
arpl
repz
idivb
pusha
shll
out
into
pop
dec
ss
jmp
push
in
cwtl
xlat
aas
pop
mov
or
sti
popf
adc
pop
and
or
jne
bound
iret
jge
jo
pushl
mov
lds
mov
vpaddq
and
cmpsb
adc
sbb
cmp
jg
test
jb
movsb
mov
insb
push
popa
xchg
stos
out
aam
pop
inc
pop
xchg
add
imul
mov
clc
jge
fs
repz
fldcw
repnz
into
sbb
int
adc
jg
loopne
fsubr
mov
pop
pop
dec
ret
sub
mov
subb
jns
or
jb
aaa
insb
stos
mov
das
sbb
sub
mov
icebp
ret
pop
popl
push
movsb
loopne
and
gs
mov
shl
jle
imul
push
jne
aad
fwait
mov
jl
imul
mov
iret
add
imul
push
push
xlat
add
mov
or
sub
fmul
mov
mov
stc
xlat
mov
inc
jno
out
inc
sahf
decl
movsb
xchg
enter
lcall
xor
mov
arpl
cmp
jno
jl
mov
cmpsb
iret
inc
mov
int3
loop
mov
pushf
xchg
je
xor
outsl
mov
push
popf
lds
leave
sub
mov
rcrb
mov
mov
jne
add
jae
data16
rorl
push
insb
mov
roll
leave
sub
stos
out
mov
stos
repz
mov
in
js
adc
jno
fists
add
lods
jg
adc
fnstsw
pop
push
add
cmp
ljmp
adc
inc
insl
fistl
push
test
adc
adc
cmc
loop
add
rcrl
pop
ja
adc
mov
xchg
jmp
adc
cmc
test
pop
dec
imul
sbb
mov
xor
and
or
inc
jnp
jg
decl
push
clc
xor
jno
adc
push
les
xlat
mov
sub
cmp
cmp
adc
sbb
jp
repnz
je
sub
adc
iret
out
ds
or
rol
mov
jno
iret
inc
mov
mov
out
in
stc
push
fidivl
mov
mov
rcll
add
mov
mov
jl
and
stos
in
lods
mov
fcoms
fistpll
out
or
jp
or
sbb
add
cmp
in
mov
lds
loope
pop
in
test
dec
fists
push
call
mov
cmp
mov
fisubs
sbb
sti
sti
faddl
loope,pt
in
sar
sbb
pushf
sbbl
lock
or
out
gs
mov
add
xor
xchg
sarb
dec
pusha
repnz
add
sti
jge
out
aaa
cmc
mov
das
cwtl
out
aas
les
mov
xchg
push
jecxz
sbb
push
das
lahf
bound
mov
xchg
es
fsts
notl
jmp
ja
leave
mov
test
adc
imul
mov
dec
mov
lahf
jmp
mov
cltd
xor
dec
fdivrl
mov
mov
dec
mov
les
lret
inc
dec
out
fcompl
imul
sub
lret
mov
xchg
inc
inc
call
insb
mov
mov
dec
lock
ret
cli
push
push
and
iret
faddl
jno
ja
cmc
add
cli
jae
imul
addr16
and
push
pop
push
fisubs
mov
jmp
cmp
sub
sub
jmp
lods
imul
xchg
rolb
jb
mov
mov
call
ja
pop
mov
out
xor
jns
ret
mov
pop
sbb
in
mov
sub
jle
movsb
ljmp
mov
sub
imul
jmp
jbe
movl
push
push
xchg
faddp
ret
or
push
std
sbb
les
mov
push
mov
stos
pop
push
dec
mov
pop
xchg
dec
inc
lock
adc
cmp
aas
mov
subl
adc
xchg
call
pop
scas
sbb
xor
lods
adc
pop
cs
pop
adc
sub
les
hlt
fwait
aam
lret
das
fimuls
in
push
popw
push
jo
mov
mov
addr16
pop
dec
jb
stos
push
int3
enter
mov
jp
cltd
fs
pop
xor
fcoms
pop
xor
addl
or
neg
jo
into
sbb
andb
xor
adc
adc
xchg
test
loopne
aaa
jbe
sub
jbe
enter
adc
push
scas
jl
adc
jae
arpl
cmp
lret
jecxz
adc
rcr
jmp
dec
sbb
inc
test
jle
mov
loope
pop
imul
jge
sub
cmp
mov
pop
mov
test
cmp
fnstenv
mov
cltd
imul
adc
xchg
jmp
imul
mov
pop
ret
fwait
in
mov
movl
test
add
divb
xchg
call
mov
jae
pop
popf
push
inc
inc
push
cmp
repz
sbb
popl
add
mov
insb
dec
and
pushf
inc
push
push
in
sub
cmp
int
scas
sbb
mov
or
popf
and
cmp
pop
add
mov
fs
pop
loop
mov
jb
mov
add
mov
das
fdivrl
imull
sbb
cmc
lret
cs
mov
data16
movsl
dec
adc
aad
lahf
push
dec
enter
xor
dec
or
or
cmc
addr16
mov
sbb
pop
ds
xchg
lea
imul
mov
dec
arpl
jbe
fisttpl
and
sarb
jmp
jecxz
pop
adc
cmp
mov
testl
xchg
pop
ljmp
mov
and
or
out
mov
sub
loop
pop
push
test
lea
inc
gs
lods
pop
call
sbb
popa
dec
adc
fs
jne
lods
or
push
mov
into
test
mov
inc
push
fcoms
push
cmp
hlt
scas
mull
aam
aaa
fisttpll
dec
int
gs
push
shlb
notb
rclb
fs
sub
stos
add
cmp
jno
pop
pop
movl
repz
shlb
xor
sbb
cmpsl
dec
test
ss
cmp
rcrb
pop
xor
popf
sub
fisttps
in
cmp
aaa
mov
data16
push
cmp
mov
xor
add
imul
xlat
repnz
mov
pop
pushf
push
and
ds
aad
testb
pop
jno
jne
jne
mov
xlat
filds
shrb
cmp
aas
sub
test
mov
xor
shl
xor
into
andb
xchg
lahf
dec
pop
adc
or
inc
rcll
cltd
and
scas
fistpll
les
or
cmp
sub
jno
jo
arpl
and
add
cmp
push
pop
cmp
mov
push
out
popf
jae
mov
cmpsb
mov
push
std
cvtps2pd
enter
inc
or
dec
adc
dec
in
pop
and
mov
dec
movsb
idivb
mov
popf
fstl
stc
testl
sub
movsl
adc
push
pop
push
imul
pusha
cs
mov
pop
movsb
movsl
sub
pop
sub
pusha
adc
in
pop
mov
mov
cltd
shrb
stos
jge
pop
popf
xor
rcrl
stos
fidivrs
std
shrl
jp
lret
cmovp
sbb
sub
jmp
push
push
jp
popf
pop
mov
mov
outsb
arpl
add
iret
pop
in
xlat
pop
fs
ss
int
jae
mov
and
pop
dec
pop
ret
out
mov
fdivrp
xchg
lock
shlb
xor
cli
add
xor
imul
mov
jle
andb
xchg
test
push
jle
mov
xchg
sbb
fisttpll
push
fwait
andl
pop
lock
out
jae
jne
aad
clc
shl
inc
adc
push
loopne
jbe
movsb
insl
xchg
and
orl
jo
cs
out
mov
repz
arpl
or
push
bound
xchg
lods
loop
popf
jle
xor
inc
adc
orb
mov
xchg
mov
push
mov
mov
and
adc
fcomps
or
ljmp
iret
or
sub
sbb
js
ss
sti
out
inc
out
pop
leave
cmc
push
sbb
mov
xchg
jl
std
lcall
mov
int3
sub
xor
push
aas
sub
mov
subb
jne
add
mov
mov
xchg
adc
fbld
cld
jns
xchg
mov
mov
rcll
sbb
cmp
leave
mov
jnp
sbbb
fistps
int3
push
sub
add
lret
sbb
clc
and
iret
adc
insb
or
rcll
lcall
les
loop
or
jno
mov
adc
or
in
lret
fidivrl
outsb
cmp
daa
sub
inc
sbb
dec
inc
roll
int
cmpsl
pop
outsl
jbe
xchg
mov
cmp
pushf
mov
pusha
bound
and
sbb
and
pop
adcb
xor
cld
jecxz
adc
stc
das
test
mov
fnstsw
mov
ror
mov
jle
jb
xchg
cwtl
mov
les
ret
sbb
test
mov
test
clc
insb
or
or
bsr
ret
icebp
jp
out
jno
cli
daa
xchg
adc
ljmp
jno
sbb
leave
push
lcall
fmull
bound
xchg
mov
jecxz
xchg
js
mov
and
dec
or
adc
in
test
lahf
ss
fimuls
mov
pop
inc
hlt
imul
leave
xchg
push
in
ljmp
fst
cmp
fsubl
in
mov
inc
loop
or
call
shlb
mov
loopne
insb
stos
add
out
mov
mov
das
sub
push
add
cmp
sub
jl
mov
push
inc
mov
enter
ds
cmpsl
cmp
loop
cs
std
jnp
or
cmc
bound
dec
mov
jl
imul
pusha
add
stc
mov
outsl
push
sbb
sbbl
xor
inc
mov
popf
dec
mov
jg
out
and
lahf
mov
fidivs
mov
dec
nop
stos
push
dec
enter
movsb
sbb
pop
outsl
sarb
adc
lahf
imul
cmp
ret
push
and
popf
popa
xchg
dec
lret
cs
pop
js
xor
stos
jno
jmp
push
adcl
scas
mov
inc
or
add
add
pop
pop
je
cltd
xchg
gs
orb
mov
mov
jae
incl
or
dec
push
popa
lcall
mov
jge
push
and
fisubl
mov
xor
stc
pop
mov
sar
fadd
push
pop
movsl
mov
jo
mov
xor
orl
push
mov
sarl
xchg
and
cmp
in
mov
push
dec
addr16
std
das
out
ret
testb
shl
lret
ljmp
push
mov
jb
pop
cmpsb
iret
add
imul
loope
aam
jl
ret
and
or
push
bound
dec
mov
roll
xor
roll
popa
cmc
jno
cmc
inc
shrl
inc
push
sahf
inc
xchg
xchg
ret
xchg
das
test
ret
mov
or
scas
dec
test
or
sub
jb
xchg
mov
dec
divb
pop
jecxz
and
pop
or
pop
dec
stos
int3
andb
and
and
out
rcr
std
fucom
jns
call
lret
xchg
pushl
and
adc
shl
sub
dec
jae
into
xchg
mov
jmp
pop
mov
jns
mov
notl
and
lcall
mov
dec
idiv
fiaddl
or
in
dec
push
icebp
push
pop
mov
sti
sbb
xor
fnstsw
inc
daa
call
aad
pushf
xor
or
push
adc
sub
fldcw
jg
arpl
fcomps
fisttps
sbb
push
mov
cld
add
fwait
cmp
and
insb
outsb
hlt
mov
mov
loope
cmp
cltd
mov
jmp
adc
mov
je
mov
mov
jb
mov
mov
in
add
popa
add
sbb
cmp
mov
gs
nop
adc
mov
mov
sbb
and
outsl
ror
lea
aas
into
mov
lock
pop
cmpsb
pop
sub
ficompl
stos
mov
cmp
adc
and
mov
fisubrs
sub
jg
aas
cld
lods
cli
fs
out
imul
mov
clc
loop
cli
imul
and
mov
sub
iret
jae
cmp
pop
ror
out
jbe
dec
mov
lret
fsubl
adc
dec
xor
int3
sbb
imul
jmp
mov
push
out
div
sub
in
xor
nop
int3
popf
xlat
push
popa
dec
jge
add
fistpll
cmp
mov
cwtl
jns
sub
and
in
andb
push
add
imul
test
outsl
ret
push
cmp
and
popf
mov
gs
lods
aas
decl
or
lcall
dec
fwait
xchg
mov
js
adc
sub
cld
andb
pop
push
pop
leave
xchg
adc
and
fwait
push
mov
popf
pop
jne
test
test
cmp
arpl
dec
cmp
je
stos
out
add
lea
repz
sub
jb
mov
jge
iret
into
cmpsl
fidivrl
dec
loop
icebp
sub
mov
cmp
addr16
and
or
dec
int
adc
xchg
loop
inc
cmpsb
enter
jle
stos
jne
cli
mov
sbb
mov
inc
pop
inc
mov
jecxz
add
pop
dec
jl
lods
mov
lock
neg
push
stos
push
xor
cli
std
in
mov
mov
xchg
in
out
dec
neg
loope
faddl
and
mov
pop
ret
call
pop
push
scas
ret
pop
out
push
adcb
insb
and
lods
xor
orl
mov
pop
cs
imul
in
loop
frstor
add
pop
lea
out
fisttpl
roll
lods
jmpw
dec
jne
xor
dec
inc
adc
and
sub
add
stc
out
andb
xor
xchg
push
cli
loop
xchg
sub
gs
les
mov
dec
out
mov
lahf
xchg
xor
mov
ret
dec
dec
shrb
dec
fsubrl
sbb
jge
sahf
sbb
inc
out
cld
into
xlat
ss
jb
nop
inc
or
mov
lea
xor
mov
pop
mov
push
push
dec
outsb
mov
and
enter
cmp
rcrb
push
add
andb
aas
pop
or
repz
aaa
imul
shrb
dec
mov
mov
xorb
int3
adc
jns
add
lea
dec
loop
sbb
fadd
mov
mov
movl
or
sub
icebp
mov
pop
sahf
pop
int
stc
dec
xor
loope
cmp
dec
int3
adc
xchg
mov
shlb
stos
out
lcall
sub
shrb
pushf
rorl
jae
repz
cmp
in
jno
sbb
test
sub
add
lods
les
xchg
mov
imul
outsl
imul
int3
xor
in
inc
psrlq
push
or
push
jno
in
or
rorb
cmp
mov
rolb
scas
adc
push
in
mov
xchg
jno
cltd
ja
mov
in
inc
cmpsl
cs
xchg
jp
lahf
ret
mov
xor
and
ficoml
add
jne
ret
dec
mov
lock
xchg
xchg
add
and
lcall
fistpll
sub
push
pop
or
loopne
sub
fdivp
into
jmp
push
xchg
fs
scas
out
hlt
pusha
add
sbb
outsb
scas
test
icebp
inc
stos
or
jne,pn
ja
xlat
out
std
lods
loopne
rol
cld
shl
icebp
insl
cmc
dec
cmp
cmpsb
push
shrl
pop
cld
aaa
pop
push
fisubl
and
xor
sti
xchg
jp
fimull
cmp
mov
loopne
je
stos
xchg
shlb
inc
mov
stos
loopne
dec
cmp
pushf
fiadds
and
add
inc
xchg
into
fs
sti
aaa
fisubrs
into
call
shll
sarb
movsb
add
subb
dec
push
test
push
sahf
repz
or
test
std
ljmp
xlat
cld
push
aam
sbb
leave
insb
dec
adc
jge
pop
push
mov
adc
jp
mov
lret
inc
fwait
mov
add
cmpsb
xchg
loopne
imul
arpl
std
test
mov
cmpsb
rol
lds
loope
js
inc
int3
jp
test
add
in
mov
jmp
jno
mov
and
mov
and
jae
push
sbb
repz
insl
mov
push
stc
pop
test
hlt
mov
jl
jg
or
cli
pop
push
xchg
jecxz
fdivl
xchg
pop
mov
and
iret
mov
idivl
push
call
ja
js
dec
inc
shl
lahf
fwait
dec
mov
pop
ljmp
xor
xor
in
pushf
inc
test
mov
and
xchg
xchg
aaa
fucomi
jmp
fucomp
iret
pop
xchg
in
daa
mov
mov
les
push
repz
ljmp
pop
push
sbb
mov
aam
sub
jo
ljmp
loope
lods
insb
mov
cmp
scas
or
pop
data16
outsl
xchg
outsl
sbb
sbb
pop
xor
sbb
push
jo
or
int
cmpsl
fdivr
cmp
ja
cmp
cli
popf
movsl
cwtl
pause
pop
dec
cmp
jl
pop
out
sub
daa
xor
ror
mov
xor
jnp
adc
adc
cmp
cmpsl
mov
fsubl
idivb
add
sarl
sub
cli
sbb
inc
shll
in
lock
sahf
mov
ljmp
sub
les
adc
sahf
call
xchg
addr16
bt
mov
jb
xor
sub
sub
inc
mov
push
adc
sbbl
jb
inc
les
sub
push
imul
push
jmp
cmp
add
inc
sarb
push
dec
rorb
rolb
jnp
or
icebp
or
leave
out
les
pop
lock
lods
mov
adc
pop
push
and
sub
stc
aaa
cmc
mov
mov
mov
fmuls
stos
or
xchg
pop
cli
icebp
call
mov
pop
jns
loope
addl
dec
mov
dec
test
pop
les
fs
gs
add
jbe
push
inc
sub
in
or
enter
or
push
push
cmpsb
or
jne
jne
pop
adc
pop
rolb
lret
fcoml
mov
mov
fst
inc
into
mov
push
cmc
xchg
stos
and
mov
xor
xor
shlb
push
scas
gs
out
pushl
clc
cmp
outsb
sbb
sub
mov
fcoml
test
aad
stc
loopne
push
add
and
into
xlat
aaa
ljmp
test
fwait
lgs
int
sub
lods
pop
xchg
sub
mov
into
or
sub
ret
stos
in
ds
inc
add
push
rcll
cld
in
push
lds
or
jmp
idivl
lds
sbb
cmpl
jae
or
dec
in
jo
xchg
fmuls
push
xchg
addl
pop
jnp
fmul
mov
adc
and
sub
scas
stc
in
shll
lcall
in
push
lea
scas
push
in
rcll
test
pusha
xchg
add
add
cmp
pop
sbb
jb
cmovae
inc
jecxz
cmpsb
cmp
jge
jb
push
insl
bound
sti
dec
insl
adc
jo
mov
lcall
mov
icebp
nop
pusha
sub
pop
or
sbb
sbb
push
xchg
mov
lahf
xor
inc
popf
mov
cmp
dec
ucomiss
mov
outsl
jg
ja,pt
push
pop
cmpb
dec
jo
xchg
and
xchg
mov
sbb
test
jmp
aad
push
dec
and
adc
pop
enter
sbb
cmc
mov
sti
pop
imul
fistpll
mov
xorps
iret
adc
shll
in
sahf
int
in
jmp
xchg
push
stos
cmpsb
les
xchg
cwtl
push
movsb
mov
scas
jns
jbe
xchg
and
testb
inc
js
js
dec
int
xchg
push
sbb
push
popf
push
outsb
pop
mul
imul
pop
test
push
and
ja
dec
lcall
icebp
loope
dec
movsb
sahf
fisubrl
enter
outsl
decb
lret
mulb
movsb
and
and
push
mov
cmp
mov
les
mov
inc
ss
jnp
jo
adc
in
inc
xor
mov
xchg
inc
scas
rol
mov
outsl
hlt
push
test
mov
repz
mov
jmp
nop
faddl
adcb
add
mov
arpl
fldt
push
and
jecxz
fsubl
lcall
pop
jmp
cmp
movb
pop
push
push
inc
daa
adc
hlt
xor
mov
and
mov
mov
sbb
mov
mov
mov
out
mov
sbb
add
mov
inc
movsl
pusha
cmp
fisttpl
test
enter
push
in
sub
adc
mov
lret
ljmp
fidivrl
rolb
jg
and
mov
fcomps
inc
cltd
dec
sbb
rclb
gs
jb
aaa
fisubl
xchg
repnz
mov
addr16
push
xlat
clc
and
aas
fcmovnu
lds
cli
cmp
xchg
xchg
stos
icebp
mov
push
cmp
pop
mov
xor
gs
pop
imul
aaa
in
stos
mov
jg
sub
test
mov
in
frstor
sahf
cmp
mov
aad
push
push
rclb
mov
inc
pop
ss
push
and
ret
mulb
mov
jl
stos
ficoml
popa
dec
adc
mov
pop
aaa
mov
sahf
mov
aaa
stos
leave
mov
mov
and
mov
movsl
adc
add
jg
add
pop
xchg
int
mov
sub
xorl
out
fbld
out
mov
aad
lret
out
or
jae
inc
push
adc
out
enter
xor
mov
insl
dec
mov
adc
ds
sub
stos
fidivl
add
inc
sti
and
pop
jnp
mov
fmuls
add
outsl
inc
mov
js
sar
arpl
xchg
push
dec
nopl
pop
std
or
shlb
pushf
sbb
mov
jecxz
test
or
test
shlb
add
add
jns
mov
jae
and
lea
add
xchg
cmpsb
pop
stc
js
popa
sbb
fsts
aaa
js
jmp
cwtl
inc
push
shll
stos
ret
or
fstp
add
test
test
mov
or
lahf
jl
insl
sbb
cmp
mov
fwait
inc
add
xor
insb
cmp
sti
push
das
gs
and
jbe
push
or
add
addr16
or
orl
jmp
aam
pop
dec
dec
add
divl
xchg
mov
lods
mov
fucomip
arpl
shrb
and
hlt
inc
xor
shlb
sub
dec
mov
int
push
hlt
xchg
adc
sbb
xchg
mov
rcrb
jg
pop
rorl
sub
movsl
adc
xchg
mov
lcall
xor
mov
ficoml
jb
fsubrl
jbe,pt
push
sbb
fistpll
dec
pusha
xor
xor
jno
adc
outsl
shll
fisttpl
clc
sti
jno
aas
add
lea
movsb
test
test
in
sti
pop
cmpsl
add
mov
add
mov
xor
add
or
mov
inc
add
scas
outsl
jno
add
xchg
outsb
arpl
shl
iret
jnp
cmp
in
out
xor
jno
pop
lahf
mov
adc
push
ret
inc
nop
sbb
or
xchg
lcall
mov
popa
sub
roll
imul
popf
rcrl
inc
inc
jl
xor
lcall
mov
std
mov
cmpsb
lods
adc
inc
and
xor
das
pop
pop
fnstsw
sbb
pushf
mov
lahf
xor
sub
dec
test
inc
addps
das
ljmp
imulb
das
dec
lods
fs
mov
jmp
aas
arpl
out
push
in
mov
cltd
cmp
enter
pop
push
sbb
cmp
out
pop
das
mov
mov
negl
xor
bnd
cld
xlat
fcmovb
mov
mov
pop
fldl
inc
mov
jg
xor
and
in
repnz
push
insb
fdivr
xchg
jne
pop
dec
hlt
mov
ficompl
out
push
add
sbb
inc
mov
ja
xchg
fsts
inc
fs
mov
adc
mov
pop
lods
iret
movsl
push
mov
sub
cmp
hlt
mov
dec
sub
int
xchg
xchg
daa
and
mov
sub
jle
aam
mov
aad
xchg
sub
cmp
mov
je
push
leave
cmc
pop
es
into
lcall
or
xchg
cmp
lcall
or
test
xor
testb
jg
inc
in
dec
movsl
lret
movsb
addr16
lods
out
cli
or
lods
clc
xchg
daa
or
addb
cmp
int3
cmpsb
insl
add
mov
jmp
out
imul
out
ret
dec
sub
test
mov
inc
pop
sbb
push
in
mov
out
push
out
mov
cmp
or
rcrb
test
sbb
jns
out
je
mov
gs
test
add
jne
js
sti
rorl
test
xchg
sub
pop
pop
cmp
pop
es
std
fstpl
mov
jg
mov
test
sbb
sahf
cmp
icebp
add
out
push
xor
in
enter
mov
pushf
push
or
movsb
movsl
aas
sbb
inc
pop
mov
adc
outsl
inc
dec
mov
aam
and
divl
fiaddl
adc
lea
fdivrs
roll
inc
dec
enter
and
loopne
xor
adc
xchg
mov
mov
xchg
ljmp
ds
cltd
xlat
jle
pop
cwtl
mov
pop
arpl
adc
xor
mov
mov
jg
and
iret
dec
sahf
es
ret
push
lods
popa
dec
jno
fistpl
daa
daa
insl
sub
and
in
enter
insl
mov
pop
jmp
int
jmp
adc
mov
dec
mov
shl
mov
cmp
int
fistpl
out
enter
adc
in
ret
inc
out
leave
cmp
into
clc
adc
aaa
xlat
pop
pop
fistpll
sub
test
xor
lret
shrl
shlb
adc
mov
pop
jae
xor
stos
pop
push
push
and
mov
cmpsb
jo
out
xor
pop
adc
aam
clc
clc
iret
xchg
pop
outsb
push
pop
mov
xchg
inc
xchg
mov
in
jne
cmp
push
adc
cmp
pop
add
iret
sbb
movsb
mov
xchg
mov
repz
dec
push
nop
sub
inc
sub
sub
shl
aam
pop
shrb
xchg
inc
pop
pop
sub
xor
xchg
inc
out
mov
mov
jo
mov
mov
movsb
push
jae
mov
sahf
fsts
pop
pop
sbb
addb
adc
mov
rolb
test
cwtl
lcall
pop
movsb
push
rolb
icebp
xchg
jno
push
jge
mov
imul
inc
or
insb
mov
jne
xor
les
inc
xorl
rol
lret
aas
je
sub
mov
jno
decb
mov
fdivrl
push
fstl
cmp
mov
lods
ret
mov
cmp
scas
add
repz
lcall
sti
mov
sub
mov
std
fiadds
pop
test
mov
jmp
xchg
sti
in
inc
push
pop
pop
out
insb
xor
daa
hlt
ljmp
push
jmp
jns
dec
adc
scas
arpl
xchg
add
and
lcall
fisubrl
xor
mov
gs
jge
dec
jmp
or
jbe
testl
mov
imul
and
addr16
sbb
in
lods
jg
add
jnp
jecxz
adc
inc
neg
push
inc
mov
add
add
and
mov
test
sbb
mov
pop
test
mov
stos
loop
xor
add
sbb
repz
gs
push
sbb
jmp
ds
push
int3
pop
popf
mov
mov
mov
nop
fiaddl
mull
movsl
add
and
push
out
push
aas
stc
push
sbb
mov
out
sbb
xlat
cmp
into
scas
adc
add
push
std
add
dec
mov
mov
push
cmpsl
mov
subb
xchg
push
fldenv
negb
sbb
push
adc
mov
insl
adc
adc
mov
and
test
jo
insb
lret
sbb
or
aam
jne
pop
loope
hlt
sarl
cmp
adc
rorl
outsl
scas
jg
fwait
xchg
dec
or
gs
or
sbb
pushf
xchg
sbb
cmpsb
dec
sahf
lcall
sub
dec
filds
or
inc
jmp
xchg
pop
cmc
jbe
add
mov
fs
and
in
and
stc
dec
xchg
das
and
fwait
and
sub
hlt
fmuls
aaa
sahf
in
cmp
fstps
ja
das
or
xor
xchg
andb
jecxz
pop
lret
nop
push
push
lahf
jp
sbb
pop
sbb
push
jmp
jns
icebp
test
cwtl
cwtl
pop
mov
inc
mov
cmp
jp
insl
mov
repnz
fwait
and
das
jae
mov
push
xor
aad
cld
scas
imul
push
out
jecxz
inc
pop
jecxz
xchg
leave
dec
aaa
dec
jle
outsl
mov
push
mov
pop
dec
adc
pop
sub
lea
scas
lock
insb
jle
insl
pop
mov
lcall
hlt
mov
pop
push
lds
aad
jg
iret
mov
call
and
stos
add
loope
sti
test
fprem1
lds
xchg
scas
hlt
movb
or
das
lea
rcll
sbbl
xchg
or
inc
ror
pushf
out
leave
stos
orl
and
out
data16
loope
hlt
cmp
scas
repz
imul
mov
mov
fimull
je
xor
push
popa
push
push
add
lea
loopne
outsb
rcll
inc
push
push
mov
loope
xchg
arpl
pop
dec
xchg
imul
adc
cmpsl
call
in
cli
mov
xchg
and
stc
xchg
inc
sahf
xorb
pop
enter
int3
pop
sub
and
or
jg
mov
xor
adc
out
out
or
cmp
xorl
stc
mov
out
outsl
mov
ret
movsb
adc
test
leave
inc
sbb
out
or
gs
cmc
cmpsl
out
pushw
sbb
das
mov
mov
mov
popa
fidivl
icebp
or
pop
jl
cmpsb
loope
ret
jle
jg
sub
inc
cmpl
jp
mov
cmc
lock
sub
lahf
mov
test
ljmp
mov
add
or
sbb
dec
sub
int
ja
std
xchg
repz
xchg
lds
sti
inc
in
dec
jne
jnp
xor
push
test
repz
mov
out
iret
dec
push
pushf
xchg
mov
popa
out
js
fdivs
scas
ljmp
sbb
mov
test
sub
xchg
mov
leave
cmp
xchg
int3
or
push
popf
add
shl
and
lock
clc
les
pop
mov
cmp
push
test
shrl
mov
lds
push
sub
pop
xor
dec
pop
scas
mov
aam
or
ret
jge
movsl
divb
and
imul
outsl
jge
jnp
add
sub
iret
cmp
xchg
push
cmp
add
ljmp
sbb
sahf
adc
js
lds
sbb
adc
dec
loopne
jae
cmp
rcll
clc
je
xchg
fwait
mov
in
hlt
movsl
nop
mov
out
icebp
sub
xchg
mov
aaa
pusha
push
scas
repz
inc
and
cld
aad
xchg
add
outsl
add
sbb
jnp
sub
xchg
dec
stc
fistl
icebp
dec
inc
aaa
push
or
ss
xor
mov
das
lret
outsb
sub
mov
aam
dec
xchg
xor
insl
ret
fisttps
dec
imul
fsubs
cmp
scas
mov
and
adc
testb
insl
out
push
roll
dec
push
inc
xorb
std
gs
pop
dec
xor
cmp
jl
jecxz
imul
add
pop
xchg
int3
jb
loopne
mov
data16
jno
cmpb
and
xchg
dec
cltd
push
and
add
cmp
cmp
cli
xchg
xchg
xchg
mov
or
mov
sahf
or
push
cmp
jae
mov
xor
dec
sub
push
jmp
mov
push
pushf
pop
arpl
test
mov
dec
int
pop
out
xor
pop
enter
arpl
call
enter
bnd
jns
mov
push
mov
or
fstpl
push
jne
cmc
pop
lods
xchg
jge
aad
push
add
cmpsl
sti
clc
mov
stc
arpl
subb
les
mov
mov
mov
daa
add
adc
std
or
jae
fstl
dec
jns
stos
xchg
and
push
xor
inc
cwtl
scas
cmp
xor
xor
rcrl
jmp
jns
or
rcrl
add
mull
lcall
sub
push
dec
scas
push
and
jne
push
aaa
ficoml
mov
iret
aad
and
je
test
call
test
jecxz
and
enter
mov
xor
adc
cmpsl
dec
jg
push
push
push
test
in
ds
add
add
xor
mov
or
push
in
push
jbe
adc
pop
es
jmp
sub
jae
dec
mov
jo
call
sahf
ja
and
icebp
jecxz
subb
mov
push
aas
insb
je
lea
or
sub
cmp
ss
cmpsl
arpl
pop
inc
fsubp
les
stos
push
and
insb
push
loop
fsubrp
popf
insl
je
gs
rolb
xchg
cmp
dec
or
repz
mov
insb
sub
ljmp
cwtl
xchg
mov
shrl
add
lea
daa
out
jg
pop
mov
out
and
pop
jo
mov
push
or
rol
cmp
pop
cwtl
xor
out
dec
jp
sub
imul
pop
loop
ficomps
add
sub
jge
inc
and
xchg
inc
add
sbb
int3
xchg
pop
ret
test
fsubr
push
xor
fwait
xchg
shlb
dec
loop
fs
cmpsb
pop
in
jg
jno
div
cmp
push
or
lock
dec
cltd
popf
and
das
jge
sbb
mov
push
or
and
aas
stos
in
add
jns
sub
std
inc
rolb
fists
loop
aam
xchg
jnp
fidivrs
outsb
stc
mov
jno
pushf
or
jno
rcl
nop
inc
repz
sbb
cmc
inc
sahf
push
xor
inc
jecxz
fsubrs
push
mov
xor
pop
pop
mov
popf
fsubr
cmp
outsb
outsl
jecxz
push
add
or
xor
aas
xor
sbb
sub
lock
repnz
mov
stc
mov
jnp
and
adcl
std
cmp
or
loopne
clc
in
fs
data16
mov
popa
data16
rcrl
push
sub
xlat
or
pop
xlat
or
xchg
icebp
jnp
shlb
out
mov
int
decl
sub
aam
fwait
or
inc
pop
inc
jb
cmp
cmc
cmp
push
jbe
int3
lret
pop
lret
sbb
inc
mov
dec
fnsave
sub
sbb
xor
pusha
sbb
push
xchg
pusha
pop
rcrl
mov
push
push
cmc
adc
mov
lods
popf
sub
mov
or
sbb
addb
mov
push
push
inc
lret
push
ss
aaa
mov
ds
sbb
push
jns
es
out
mov
aaa
dec
cld
or
fidivs
insb
add
dec
int
adc
jbe
gs
pushf
inc
and
jbe
mov
inc
jge
dec
arpl
inc
adc
pop
insb
loop
cmp
push
push
sub
xor
imul
pop
push
in
aad
test
popl
insl
mov
lods
cmp
sub
sbb
movsb
aad
scas
xor
pop
fwait
fwait
idivl
insl
mov
out
add
dec
scas
dec
andb
hlt
icebp
pusha
xchg
inc
test
dec
ss
xchg
and
adc
adc
sub
hlt
push
out
xchg
push
jbe
mov
gs
sub
ret
cmc
nop
ljmp
sbb
ljmp
sub
repnz
xor
pop
cmpsl
dec
andl
push
cmpl
lret
push
test
mov
rol
mov
mov
outsl
aas
push
shlb
sub
dec
fstpl
mov
test
pop
push
sti
or
dec
inc
push
adc
dec
pop
mov
lds
dec
jp
nop
fs
inc
pop
incb
imul
sub
popf
sub
jg
outsl
xchg
pmaddwd
xor
jno
aam
in
adc
add
out
xchg
adc
imul
adc
enter
xchg
inc
test
inc
pop
xchg
push
inc
cmpsb
mov
pop
push
mov
mov
mov
aaa
sarb
js
fdivs
out
adc
mov
jecxz
andl
subl
das
xor
fdivr
aas
sub
push
fsubrp
pop
xchg
sub
dec
pop
dec
bound
insl
outsl
pushf
cmp
xchg
divl
jecxz
fcompl
adc
mov
sub
rol
repnz
xchg
jmp
inc
ficomps
push
ljmp
xor
icebp
jmp
in
xor
mov
fldenv
call
cmp
rcrb
fdivl
xchg
push
jp
add
dec
loope
nop
testl
dec
xor
xlat
nop
out
cmp
xchg
std
loope
gs
lahf
into
sub
rcrl
and
or
test
bound
cmp
scas
mov
pop
sub
in
in
inc
and
packssdw
stos
icebp
cmp
clc
popf
dec
xorb
aaa
or
sub
fs
adc
out
repz
mov
mov
imulb
push
push
mov
xchg
mov
outsb
test
mov
add
xchg
mov
std
xor
cmpsb
inc
jle
push
dec
sahf
cli
sbb
mov
pop
sbb
das
mov
dec
lea
mov
inc
jl
lods
stos
out
leave
outsl
adc
int3
jmp
je
shll
lret
cs
push
push
dec
cmpl
ss
mov
test
dec
pop
or
seto
test
daa
popa
mov
in
sbb
or
nop
pop
jp
mov
shrl
jle
push
idivl
add
repz
dec
mov
outsl
or
dec
cmpsl
fsubrs
std
cmpsl
dec
xor
stos
and
sub
and
mov
cli
clc
jnp
push
repnz
xor
fs
jne
movsl
inc
push
xor
add
ftst
sub
icebp
sahf
popa
fisubs
xchg
scas
inc
pop
cmp
loope
push
loopne
push
in
xor
push
js
jge
mov
add
mov
icebp
and
pop
cmc
es
popf
test
dec
andl
add
mov
push
cmp
sub
mov
jge
mov
push
or
xchg
aad
dec
cs
jmp
stos
xchg
loope
inc
jbe
and
mov
mov
fidivrl
stc
daa
add
cltd
faddl
jbe
lret
sub
mov
pushl
add
push
or
inc
es
lret
lahf
call
dec
xchg
jg
mov
xor
ud0
dec
push
xlat
ss
cmpsl
pushf
push
fwait
ja
cld
hlt
shr
cmp
out
sub
push
iret
xchg
jae
int3
xchg
pop
cmc
ret
sbb
rcrl
jne
pop
add
and
sbb
mov
test
test
fsin
inc
push
dec
mov
out
outsb
push
and
mov
movsl
in
outsb
cmp
in
inc
inc
mov
test
mov
jp
dec
aas
icebp
sbb
lea
bound
inc
lods
iret
xor
dec
or
push
clc
xchg
out
aas
add
inc
dec
out
xchg
sahf
mov
dec
insl
push
inc
xchg
or
lock
inc
int3
mov
xchg
sub
inc
fisttpll
stc
es
mov
mov
sbb
sarl
js
testl
sbb
fsubl
sbb
ss
jns
adc
daa
or
xchg
push
sub
xchg
imul
call
xor
push
pop
jp
and
fisttpl
imul
xchg
jmp
and
push
adc
aam
mov
scas
les
outsb
jns
sub
add
push
sub
push
cltd
stos
icebp
mov
fstp
push
pop
push
andb
nop
jl
ret
mov
sub
jl
dec
adc
andb
popa
inc
addl
mov
lock
movsb
lock
pop
int
clc
sub
call
inc
adc
je
testb
outsl
cli
jne
inc
sbb
loop
call
inc
hlt
lret
gs
shlb
lea
daa
xchg
aad
and
or
push
mov
mov
fistpl
je
xor
xor
pop
int3
sub
in
push
adc
into
ss
out
cmp
add
inc
cmpb
in
loop
pop
xchg
fadds
out
orl
iret
pop
movsb
sbb
call
mov
sbb
fsubr
aam
jg
cs
cwtl
inc
jp
sub
jns
mov
test
or
sarl
clc
xor
xor
add
fcomi
pop
ficoml
mov
mov
push
add
lods
movsb
testl
and
mov
int3
jbe
in
shr
mov
mov
pop
imul
cmp
dec
cmp
popf
daa
shr
push
sbb
mov
sbb
push
out
mov
dec
push
jl
stmxcsr
jnp
push
sbb
mov
sub
int3
cld
bound
fistl
jle
pop
sarb
push
push
and
jg
jmp
mov
fcmovnu
cmpsl
cmp
fistpll
out
mov
repnz
and
insl
imul
sbb
mov
lret
fs
aaa
movsl
mov
jae
mov
sub
movsb
dec
fstl
loop
and
jp
inc
cmp
jecxz
cmpsl
das
in
leave
lods
iret
sub
in
icebp
jge
and
dec
and
jb
mov
push
cmpsb
jo
pop
out
mov
jmp
loopne
push
pop
mov
inc
out
mov
in
cmp
cmpsl
pop
xchg
or
jecxz
sub
jbe
cltd
pop
mov
shlb
mov
mov
mov
arpl
outsl
pop
xor
gs
cld
arpl
test
xchg
sbbl
push
mov
inc
mov
enter
push
jno
push
mov
jge
and
mov
jb
lods
out
ss
jne
stos
pop
xor
xor
repnz
fmull
test
bound
cltd
xor
in
jne
cmp
push
inc
mov
je
sbb
mov
xlat
lea
pop
sub
aaa
aas
mov
and
cmpsl
and
push
jge
sbb
outsl
addb
mov
sbb
and
push
imul
iret
mov
cmpl
and
cltd
test
leave
add
faddp
push
xchg
clc
popa
sbb
xchg
xor
push
call
and
popa
je
call
std
addr16
or
test
vmaxsd
ret
lahf
xor
or
ss
pop
mov
aam
popf
mov
addr16
mov
ss
insl
mov
jmp
aad
ljmp
sbb
dec
or
xchg
mov
adc
pop
fs
xor
push
fdivrl
mov
bound
call
jno
les
cli
aaa
aas
outsl
and
in
and
mov
mov
adc
dec
fnstenv
jle
dec
repz
sub
sti
pop
imul
mov
xchg
lcall
mov
or
iret
cmpsb
pop
xor
pop
jmp
das
fs
jg
adc
int3
or
cmp
inc
mull
dec
nop
mov
in
push
test
clc
mov
mov
push
xlat
cli
push
mov
adcl
jl
aaa
outsb
iret
hlt
jmp
hlt
mov
out
lahf
out
pop
hlt
mov
call
xor
pop
mov
jle
popa
mov
or
or
pop
mov
push
clc
cltd
jmp
mov
xlat
push
dec
jo
sahf
xor
adc
hlt
add
inc
dec
stos
cmp
outsb
jg
outsl
cmp
add
imul
out
scas
pop
repnz
add
in
jbe
insl
cltd
dec
dec
sbbb
mov
data16
dec
cmovbe
dec
mov
dec
sbb
fisttpll
push
mov
inc
sti
mov
imul
or
sub
in
hlt
inc
and
sub
fidivl
and
notb
fistpll
pop
stc
insb
lds
pusha
lea
punpckldq
mov
cmp
out
ss
cltd
adcb
xchg
jge
adc
sti
orb
rclb
aaa
shll
scas
pop
pop
cli
pop
mov
pop
pop
scas
jle
push
jns
fisubrl
pop
sbb
pop
cmp
es
out
es
add
ss
inc
mov
jge
or
dec
es
adc
xchg
and
lods
push
mov
xchg
out
addr16
jne
sub
test
sbb
mov
jl
insb
cmpb
and
ja
out
dec
jns
idivl
inc
in
inc
ret
push
add
sbb
stos
std
ja
shl
test
hlt
lds
xor
fsub
adc
scas
cmpsl
andb
aas
jl
std
ds
cmp
insb
push
loopne
mov
push
lds
jne
sub
test
and
out
fs
or
in
cltd
pusha
loopne
add
and
rorl
sbb
xchg
mov
das
push
cmp
push
ja
jnp
inc
rcr
xchg
inc
outsl
dec
mov
faddl
rol
gs
into
aad
test
xorl
mov
pop
insl
leave
push
pop
jb
lahf
in
lods
cmp
and
es
inc
mov
lcall
mov
sbb
testl
sar
dec
xchg
pop
jmp
pop
je
sbb
add
add
pop
div
std
sub
inc
xor
jg
enter
js
mov
pop
ficomps
xor
insl
pxor
insb
cmp
andl
es
cmp
in
sbb
out
add
fisubrl
add
mov
inc
push
fimuls
push
ret
fwait
adc
xor
or
mov
jg
push
push
and
mov
add
ror
sub
iret
push
jns
mov
dec
add
mov
add
sbb
jl
adc
pop
adc
push
out
pushf
add
pop
jecxz
mov
add
mov
movsl
shrl
mov
out
rcrb
xlat
clc
mov
mov
and
or
arpl
push
push
xor
mov
ret
mov
int
pop
andb
inc
addr16
sub
jge
lretw
nop
loope
pop
mov
call
imul
scas
or
aad
mov
ret
push
sahf
mov
xor
mov
inc
out
dec
mov
sbb
aaa
out
fstpt
out
popf
pop
rcr
aaa
lods
bswap
sub
das
loope
loop
dec
mov
jmp
in
jne
cwtl
dec
aaa
test
rolb
incb
dec
mov
xchg
jmp
mov
push
movsl
add
jge
push
mov
xor
movsb
scas
cmp
out
push
roll
mov
fildl
arpl
mov
pop
das
mov
dec
xchg
xor
test
push
inc
adc
mov
or
hlt
imul
lret
mov
or
xlat
cs
sub
sbb
and
ret
ret
fbld
mov
or
add
repz
mov
imul
sbb
insl
mov
gs
jle
sub
lds
mov
dec
adc
call
jbe
push
adc
adcb
lret
mov
loope
xchg
sub
sbbl
cmp
bound
aaa
icebp
xchg
adc
std
movsl
icebp
cmpsb
inc
xchg
vpunpcklwd
and
jge
jmp
jmp
sub
cmpsb
mov
scas
and
dec
mov
mov
movsb
fsub
rorl
jl
mov
xchg
rol
les
jne
outsl
shl
das
outsb
jl
sahf
push
dec
sub
pop
lret
jge
ffreep
jno
movsl
push
jns
push
fildl
jbe
es
xchg
les
insl
sub
leave
lock
sti
ds
ljmp
js
and
or
adc
mov
and
test
jge
mov
pop
mov
inc
cmpsl
add
lcall
inc
xchg
mov
mov
and
out
add
or
or
xchg
js
inc
lods
xlat
jmp
push
push
mov
sub
or
push
mov
adc
int
sub
jle
or
stos
icebp
and
out
jmp
mov
dec
push
inc
mov
les
xor
dec
mov
lods
loope
aaa
pop
pop
adc
jno
push
xchg
xor
pop
int
xchg
mov
fs
ret
xor
and
mov
inc
psrlw
ljmp
sbb
cwtl
pop
scas
and
jl
cmp
gs
pushf
in
add
adc
movsl
xchg
xchg
inc
pushf
xchg
inc
insb
inc
shrb
adc
test
push
clc
adc
pop
addr16
cmpsb
jnp
add
shl
xchg
pop
adc
and
std
mov
sub
incb
lods
fadd
jb
xor
pop
loop
fildll
mov
mov
lds
adc
dec
rcr
inc
or
popa
push
ja
ds
imul
xchg
aaa
xchg
inc
jmp
lcall
fsubrp
pop
xor
ljmp
mov
push
adc
ds
rcll
ret
pusha
jecxz
lods
add
mov
mov
xchg
pop
push
jmp
jae
adc
and
test
scas
arpl
xchg
add
std
jbe
jae
inc
lret
pop
mov
pop
iret
inc
bound
outsb
negl
lret
adc
dec
pusha
mov
adc
push
jo
adc
stc
mov
xchg
xchg
frstor
out
leave
cmp
cwtl
inc
inc
adc
push
xor
or
cmpsl
adc
mov
aas
data16
dec
shll
mov
jg
fistps
out
sub
test
sub
inc
mov
cs
fwait
adc
orb
sub
xlat
jnp,pt
mulb
mov
mov
mov
and
cwtl
pop
test
insl
cmc
out
aad
and
cmpsl
sti
sahf
ljmp
dec
stc
ror
aam
sbb
stc
leave
jmp
js
data16
test
push
ret
push
movsb
sbb
mov
pop
enter
xor
cmpsb
rcrl
in
xchg
loopne
xchg
add
xor
inc
imul
inc
loope
call
jecxz
lds
jmp
fsts
mov
ljmp
cmp
test
loope
jmp
pop
ja
clc
mov
mov
jle
dec
mov
xor
in
pop
cld
jns
out
dec
inc
and
jnp
inc
adc
adcl
pop
add
xor
loope
out
jbe
stc
sbb
mov
xchg
aad
mov
into
or
dec
outsl
pop
or
jecxz
mov
push
mov
push
jns
jmp
ja
nop
out
fsub
sbb
popa
dec
xor
js
xchg
test
lret
adc
pop
js
xor
push
and
cs
mov
shl
adc
sbb
imul
loope
mov
jl
into
or
mov
dec
add
push
sub
sahf
testb
push
jne
pop
mov
jp
adc
or
sub
pop
fwait
xor
movsl
jmp
call
mov
and
lahf
push
ret
jns
clc
movsb
add
outsl
mov
push
push
in
jecxz
hlt
sahf
andb
loop
daa
in
dec
fcmovu
sub
fstps
out
lods
fdivrs
cmpsl
aas
jns
sbb
lret
cmpb
jbe
enter
dec
ret
bound
adc
popa
mov
jns
gs
loope
lret
add
mov
in
scas
std
es
xor
movsb
pop
sahf
je
sub
mov
imul
sbb
mov
push
fwait
lret
sarl
sbb
sub
or
icebp
add
es
int
stos
sub
xchg
or
sarl
int
std
out
xor
lods
in
adc
bound
mov
cmp
xlat
dec
hlt
insb
sub
cmp
gs
fmuls
ret
stc
mov
pop
add
sub
or
clc
out
or
mov
xchg
loopne
incb
loopne
sub
test
movsb
imul
push
lret
mov
ret
xlat
and
or
in
sub
out
mov
lahf
dec
sub
mov
push
xor
aad
add
jb
lea
jecxz,pt
out
adc
ljmp
dec
fs
pushf
xor
loop
pop
loope
push
lret
lcall
adc
aam
dec
pushf
jns
insb
inc
cwtl
mov
add
stc
repz
cltd
adc
cmp
cmc
insb
std
leave
cmp
dec
jb
out
shr
or
inc
dec
push
mov
fidivrs
push
sbb
popf
sub
jbe
in
clc
push
stos
jl
dec
mov
xchg
pop
lret
pusha
sub
mov
ror
rol
jmp
jl
stos
int3
int
lods
jp
pop
std
xchg
mov
adc
rorb
sub
xchg
subl
fs
adcb
pop
dec
dec
insl
push
test
inc
jne
mov
jnp
jns,pt
xor
or
sbb
mov
out
add
inc
mov
mov
xchg
jg
adc
jbe
fstpl
hlt
or
scas
add
rolb
ret
daa
lret
sbb
leave
insl
dec
xor
movsb
mov
adc
lods
pop
mov
popa
sbbb
cmp
sti
jge
push
jg
pop
adc
push
pop
add
mov
mov
rolb
repz
jo
pop
xor
ret
ljmp
js
lock
jnp
adc
fwait
xor
cmpsl
lods
push
repz
push
push
push
lods
pop
nop
dec
lods
jle
xchg
sbb
mov
das
cmpsb
je
pop
fs
clc
addr16
movsb
dec
fs
jmp
int3
lods
cli
flds
cwtl
fs
xchg
pushf
or
loopne
into
mov
jmp
or
inc
sub
mov
or
icebp
aam
mov
inc
test
or
outsb
jb
sahf
js
out
fidivrl
xchg
dec
cmp
cmp
mov
inc
xchg
pop
testl
outsl
je
mov
cmpsl
loop
and
jb
pop
add
fimull
call
fwait
mov
into
nop
pop
test
rcr
shl
mov
push
sbb
shll
push
cmp
fimuls
loope
push
fstpt
hlt
mov
pushf
mov
rcrb
sbb
addr16
pop
mov
movsb
shr
mov
imul
mov
cmp
push
fimuls
dec
inc
dec
jns
mov
test
mov
jne
cmc
adc
dec
je
loopne
xchg
xor
shll
mov
push
add
sbb
xchg
push
in
mov
imul
std
in
out
loop
movsl
mov
daa
bound
inc
sub
pop
push
aaa
and
sbb
push
pop
push
pushf
or
cwtl
mov
lea
imul
scas
sbb
pop
or
or
inc
pusha
mulb
in
and
xchg
icebp
pop
std
in
sub
fdivl
ja
test
pop
adc
addl
aad
mov
loope
mov
and
imull
mov
cltd
add
and
xchg
xorb
or
or
xchg
stos
jbe
das
dec
xchg
mov
std
testl
fldenv
adc
xor
enter
jl
aas
pusha
jb
push
test
xor
lds
or
fcom
sub
jo
jne
push
push
call
mov
ret
out
sbb
rorb
sbb
add
jmp
lret
push
pusha
js
jo
aad
shrb
mov
push
call
mov
push
pop
inc
cmp
nop
out
add
push
jle
in
cli
jmp
or
das
jl
mov
dec
or
loope
jne
jns
jg
mov
out
cmp
cmp
push
push
ficomps
test
cwtl
int3
je
cwtl
rorl
int3
into
test
inc
mov
aad
xchg
jnp
lock
popf
shll
dec
leave
shr
mov
lods
cli
insb
lret
stc
fcoms
in
fldl
adc
rclb
pop
sbb
pop
mov
sub
push
movsl
mov
in
pop
roll
pop
daa
dec
cli
in
fdivs
push
inc
push
movsb
lock
cltd
mov
sub
lods
sub
pop
sbb
sti
stos
jne
sub
fwait
push
aaa
pop
xor
shlb
je
add
shlb
xchg
cmpsb
mov
test
test
inc
addl
sahf
dec
repnz
rcr
sahf
add
scas
fldenv
jne
mov
cld
jmp
adc
lds
pop
cltd
data16
lods
rcr
test
xor
fdivrs
jmp
push
inc
sbb
in
adc
xor
cmpsl
pop
xchg
jmp
add
and
leave
mov
push
divl
roll
into
les
addr16
mov
pop
mov
fstpl
mov
scas
in
or
je
jnp
mov
pop
add
in
pop
push
subl
loop
xor
push
inc
mov
bound
adc
out
mov
xor
sub
jp
jmp
mov
mov
push
push
in
xchg
push
int
outsl
ljmp
lods
mov
and
xchg
and
popa
mov
test
outsl
xor
out
popf
loop
add
sbb
imul
je
push
icebp
sub
scas
out
ror
mov
or
stc
sbb
fs
mov
push
mulb
adc
fmull
es
repnz
jmp
push
stos
pop
cmp
push
mov
and
aam
lret
pusha
sarl
test
aas
scas
call
call
in
mov
sbb
xlat
inc
sub
inc
ret
mov
arpl
mov
sub
fcomps
subb
cli
cmc
repnz
stos
mov
adc
xor
lret
sbb
movsb
jb
pop
xor
lods
adc
cltd
in
fwait
aaa
mov
sti
ds
add
xchg
sbb
fisubrl
xor
xchg
scas
testb
std
xchg
cltd
cmp
in
mov
lods
cltd
or
pop
repnz
nop
popa
push
and
sub
xchg
add
popa
sbb
push
inc
xlat
lahf
ss
push
sbb
mov
and
cld
mov
push
push
and
jne
iret
mov
adc
lock
ja
xchg
and
or
mov
xchg
fisttpl
mov
aaa
mov
lods
insl
pop
mov
iret
repz
je
xchg
aas
xchg
sub
mov
lret
and
push
gs
cmp
daa
ret
mov
and
sbb
lret
repz
pop
cmp
jmp
mov
jecxz
fidivl
xchg
stos
dec
pop
ja
fs
movsb
les
jmp
fnsave
xchg
dec
jno
and
movd
call
andb
add
inc
mov
lret
cld
ret
push
jmp
push
pop
pop
jmp
fsubl
push
shlb
sahf
dec
hlt
and
sbb
mov
cmp
shl
sahf
lods
pop
andl
ja
push
mov
xchg
push
jne
jno
add
mov
push
test
imul
icebp
pop
inc
nop
push
dec
test
in
js
jge
pop
mov
mov
xchg
push
ret
shrl
mov
inc
test
loopne
adc
testb
lds
insb
mov
mov
push
repnz
nop
inc
push
pop
adc
ret
in
inc
push
cs
cwtl
or
mov
lcall
in
out
fsubs
push
idivb
cwtl
jl
rcr
aas
sbb
fnstenv
lods
lods
inc
insb
sahf
ret
test
push
mov
aaa
inc
pop
xor
popf
jbe
lcall
stc
nop
leave
push
mov
jecxz
add
subl
in
pop
into
pop
pop
scas
imul
xor
xor
fcmovu
into
jnp
je
xchg
repnz
testb
sti
cmpsb
fbld
sti
rorb
dec
mov
push
das
dec
shrb
aas
inc
add
sub
push
out
dec
ret
mov
mov
pop
adc
mov
xchg
cmpsb
mov
test
sub
test
adc
or
call
cmpsb
cltd
mov
pop
inc
dec
cmp
jle
stc
push
shll
jae
jle
sbb
cld
mov
xchg
add
pop
dec
hlt
rcr
test
mov
pop
data16
inc
xchg
ja
and
jmp
mov
shlb
xor
lret
out
nop
int
bound
loop
mov
or
insl
jmp
mov
fisubs
mov
xlat
push
cltd
clc
dec
into
adc
xor
pop
lock
sub
in
fidivs
inc
xchg
hlt
sub
cmp
sub
daa
xor
jno
enter
push
fimull
and
fwait
std
push
lahf
sbb
loop
adc
xchg
pop
loope
sbb
add
bound
inc
pop
dec
sbb
xor
cs
test
pop
in
popa
aaa
inc
push
fistpll
icebp
lahf
xchg
mov
push
inc
sub
and
jmp
mov
test
push
scas
loopne
sub
inc
dec
sub
cmc
in
lds
push
in
xlat
sub
or
sarl
xor
sbb
sub
emms
outsl
mov
pop
dec
sbbb
lock
int3
mov
jp
inc
xor
test
mov
lods
sbb
sub
iret
xlat
mov
jo
jo
or
pusha
adc
or
sbb
adc
push
test
cs
shrb
int
cld
dec
mov
and
popf
xor
jp
test
mov
push
shl
push
mov
inc
xchg
into
xor
leave
sarl
mov
mov
loopne
cmpl
nop
iret
mov
add
sub
mov
mov
iret
imul
adc
cwtl
fmull
jne
mov
sub
call
xchg
mov
mov
popa
cmp
loop
loopne
imul
dec
inc
cli
fs
loop
rcrb
pop
leave
dec
aas
mov
cwtl
inc
pop
faddl
out
add
mov
outsb
jl
iret
inc
pop
fcomi
xchg
int3
test
aad
sub
hlt
inc
call
pop
aad
jecxz
fadds
sub
mov
inc
push
xor
fprem
out
lret
outsb
je
sbb
jbe
loope
mov
push
in
out
lock
es
fists
dec
adc
xsaves
push
ja
fbstp
outsl
sub
adc
ficompl
inc
sti
inc
jb
arpl
leave
leave
notl
xchg
or
add
cmpsl
out
jmp
call
push
cmp
cmp
sbb
ss
jb
sbb
sbb
call
jg
mov
ss
adc
and
lea
dec
cmp
outsl
addb
adc
cmp
imul
sbb
cmp
adc
or
jb
pop
sti
call
stos
xor
loop
push
mov
push
ljmp
cmc
shll
and
imul
add
mov
and
les
rorl
sbb
adc
jae
mov
lret
sarb
xchg
jge
mov
mov
enter
adc
rcr
mov
cmpsl
das
jbe
out
push
dec
xchg
stc
scas
jb
sbb
sahf
ret
push
pop
dec
inc
std
testl
add
jge
push
pop
lahf
sbb
addr16
xchg
orl
mov
ret
bound
dec
xchg
repnz
or
inc
push
pop
sahf
fisttpl
mov
pop
xchg
mov
push
fcompl
push
test
push
aam
sbb
push
xor
int3
inc
pop
sbb
push
ljmp
addr16
mov
setbe
cmpsl
loop
cmp
lock
je
cwtl
xchg
jbe
ss
out
sbb
jmp
add
push
cltd
in
adc
bound
push
ds
and
sarl
xchg
jno
popf
bnd
fcoml
fstl
clc
ror
int
cs
mov
mov
je
lock
and
shr
xchg
repnz
out
aas
loopne
js
stc
in
cmp
cmpsl
adc
adc
fsts
mov
cmc
push
jb
mov
jp
adc
lock
in
lods
dec
xchg
pop
add
xchg
push
lret
das
or
cmpsb
push
out
addr16
cmp
lahf
repz
push
icebp
jne
out
test
gs
gs
insl
ljmp
hlt
in
sti
mov
cli
cmp
mov
and
xor
xlat
adc
jbe
in
aas
aad
push
scas
pop
stc
jecxz
int
sub
mov
xchg
mov
aas
and
adc
sbb
jo
fnstcw
mov
stos
idiv
popa
shlb
sub
cs
push
push
cltd
xchg
into
sub
cmpsl
imul
jecxz
leave
xchg
inc
mov
mov
out
fstl
rclb
jp
ret
call
sub
in
add
jns
ss
iret
arpl
mov
jns
adcb
xor
pop
je
xchg
dec
cwtl
jb
pop
mov
lret
fsubl
jmp
mull
aaa
or
adc
scas
jg
popl
jmp
aad
bound
rcrl
daa
rorl
push
cwtl
adc
jle
push
jp
pop
aam
xchg
mov
dec
add
mov
ss
mov
cmpl
daa
call
cmp
sbb
outsl
popf
pop
fdivl
adc
loope
lock
mov
cmp
xor
and
xchg
in
psrlw
orb
jo
push
fimull
and
rcll
gs
test
addl
mov
shlb
fildl
push
movb
ljmp
mov
pop
adc
adc
xor
xchg
arpl
loopne
dec
repz
sbb
ret
inc
adc
pop
or
jecxz
mov
stos
push
and
add
in
test
jmp
cwtl
xorl
pop
cmc
sbb
jmp
call
sub
rorl
gs
fldt
orl
ljmp
sbb
and
jle
inc
out
push
adc
repz
push
sub
and
adc
inc
pusha
jl
sahf
out
or
cmc
fdivl
scas
sbb
pop
and
mov
cltd
inc
cs
dec
lea
lock
das
mov
sbb
mov
xorl
mov
adc
rcrl
pop
sub
fwait
sbb
mov
aam
bound
or
xchg
sbb
mov
decb
dec
inc
sub
ret
pusha
cs
aaa
out
add
sar
sbb
push
cs
iret
shrb
jne
cltd
or
jp
mov
fwait
push
int
mov
dec
mov
xchg
ljmp
mov
rorb
cmp
rclb
and
or
adc
fs
xchg
xor
insl
jo
jbe
ret
fdivl
out
cmp
cmpsb
outsb
fs
xchg
test
lods
aaa
xor
push
lock
js
mov
in
adc
xchg
gs
leave
into
and
pop
movsb
mov
or
xchg
inc
cmpsl
xor
in
mov
out
cmp
repnz
daa
dec
test
xchg
jp
mov
fsubs
push
fcmovbe
insb
andl
ret
add
int3
add
mov
std
fisttpll
ja
je
outsl
movl
icebp
std
mov
lea
sub
fstps
hlt
sub
jno
push
mov
push
mov
mov
pop
mov
or
inc
pop
inc
bound
pop
xor
sub
cwtl
push
xchg
popa
inc
fsubrl
push
aaa
cmp
xlat
pop
jbe
pop
dec
out
clc
sub
push
inc
mov
inc
sahf
sbb
sub
dec
mov
adc
js
hlt
xor
mov
sbb
lods
inc
nop
incl
test
cmc
jecxz
fdivl
popf
xchg
xor
cmp
push
addb
or
ljmp
mov
dec
add
mov
adc
dec
adc
dec
pushf
mov
add
outsl
add
sbb
cmp
flds
jns,pn
aam
xor
call
jmp
jne
push
das
ss
adc
pop
mov
popf
loopne
test
scas
decb
or
push
icebp
ljmp
adc
ret
decl
push
mov
xchg
cmp
ljmp
int3
int3
jae
int3
sarb
pop
jb
icebp
cmc
fdivs
shll
inc
rcr
pushf
or
popf
aaa
push
scas
lahf
lock
dec
sub
ljmp
in
cmp
dec
push
push
cmpsl
jns
jle
stc
rclb
cmp
jle
inc
or
scas
pop
pop
insl
push
push
sub
pop
or
mov
jno
push
and
inc
insb
cwtl
ficomps
fisubrs
fmul
stc
ss
mov
pop
enter
adc
mov
rclb
cwtl
pushf
daa
daa
cltd
inc
inc
repnz
imul
inc
dec
sbb
adc
in
lcall
jmp
sti
jg
stos
loop
loopne
ds
jge
cmpsl
mov
add
pop
pop
sub
iret
mov
mov
or
or
fsts
mov
sbb
mov
add
adc
cwtl
ret
addr16
mov
cmc
adcb
mov
cmp
mov
int
and
jbe,pt
ret
inc
notl
mov
or
add
adc
jmp
adcb
ret
lods
mov
jge
sti
cmp
pop
ds
int
xchg
addb
mov
jle
mov
push
pop
mov
add
loopne
mov
lcall
fdivl
push
imul
sbb
pop
dec
add
incl
lcall
scas
aas
push
xor
jno
jle
xor
pusha
mov
in
pop
mov
test
jecxz
mov
lds
cwtl
adc
push
jae
mov
inc
subb
orb
divl
cld
inc
sbb
inc
inc
in
add
stc
testl
iret
add
push
sub
and
rcrb
cmpsl
cmp
push
das
mov
push
insb
stc
inc
cld
flds
dec
mov
push
ds
cltd
dec
imul
fsubrl
pop
rcll
cmp
add
pop
mov
rorl
push
shlb
xchg
jl
js
call
hlt
sbb
xchg
lea
jne
enter
sbb
sbb
sarl
decb
pop
negb
shll
jg
cli
inc
cmp
lahf
cltd
xchg
xor
fucomp
sbb
cmp
mov
pushf
inc
pop
int3
cli
sbb
imul
push
ja
and
movsb
adc
mov
xchg
xchg
insb
pop
or
popf
mov
sub
and
sbb
loope
push
xchg
mov
pop
ljmp
iret
push
lcall
and
pop
cmc
cmp
xchg
aam
mov
scas
cmp
fistpl
push
pushf
or
or
push
gs
sub
sub
push
push
cmp
fs
xorb
incl
add
jno
lret
push
mov
and
jno
loopne
push
test
out
mov
or
rorb
popa
popa
insl
dec
xor
scas
xchg
jge
mov
jb
sbb
xlat
add
sub
scas
fscale
add
shlb
cmp
rclb
jmp
subl
or
xchg
repz
jne
cld
ds
cwtl
push
sbb
dec
cmp
xor
das
out
out
xchg
enter
add
das
subw
mov
xor
mov
xor
lock
push
jae
in
adc
inc
jno
outsl
xchg
sub
iret
dec
repz
fisubrl
aad
fnsave
int
lds
jae
sub
cmc
xchg
cmpsb
cli
fidivrs
add
pushf
inc
je
mov
dec
xorb
addl
mov
inc
aaa
data16
cwtl
ljmp
ljmp
sub
iret
clc
out
adc
xor
inc
mov
cmp
pop
orb
or
mov
mov
outsl
loope
jecxz
dec
mov
mov
shrl
xchg
jnp
adc
mov
mov
jg
enter
popw
mov
push
leave
add
cmpsb
and
mov
lds
jp
cmpb
mov
roll
js
cmp
mov
std
lret
js
inc
pop
mov
cmp
pop
jb
rcll
cmp
fs
fwait
idivl
sbb
lods
pop
push
mov
mov
ficoml
std
out
push
fsubr
lret
mov
test
jae
lods
les
xsha256
cmpsb
xchg
adc
mov
adc
mov
add
js
shrb
xor
bound
aad
xchg
movzbl
clc
cmp
insb
fisubrl
cmp
jnp
sbb
cmp
mov
fwait
mov
test
push
and
sub
cli
movsb
sbb
rcl
ds
popf
pop
and
and
mov
inc
sbb
xchg
push
sub
data16
or
pop
je
pop
dec
inc
mov
xchg
lahf
das
xchg
fs
mov
jmp
sub
and
mov
sbb
fists
lea
in
loopne
mov
sub
sti
imul
fcmovu
insl
mov
sbb
fwait
out
lea
push
push
mov
add
push
popa
sysexit
sbb
xor
dec
ret
pop
inc
mov
jbe
jns
push
mov
jg
das
fnstcw
mov
lock
sbb
shll
cmp
leave
jo
std
mov
lea
aas
jg
push
mov
mov
mov
test
scas
pop
xchg
jmp
jmp
jmp
dec
insb
inc
mov
aam
cmp
cmp
xlat
ljmp
mov
add
cltd
xchg
mov
out
mov
fsub
in
popa
jnp
add
add
or
rolb
int3
sti
xor
outsb
push
aam
aam
sub
and
pop
dec
mov
pop
jo
loop
mov
mov
shll
push
cs
movlps
push
scas
xlat
ret
rolb
pop
or
push
push
or
and
je
or
popa
push
ja
mov
shrb
push
loope
pop
mov
rcl
ss
mov
lea
sti
dec
adc
mov
leave
mov
and
mov
xlat
lret
loopne
xor
jne
ss
dec
stos
rorl
addr16
jo
daa
bound
lds
push
xor
inc
dec
or
push
pop
mov
adc
mov
cmp
iret
mov
ljmp
aas
push
mov
dec
mov
sub
ss
cmp
fwait
sub
push
in
xor
and
fisubs
pushf
loopne
fmuls
or
fistl
push
jbe
clc
cmc
or
sub
shr
adc
mov
nop
es
cmp
lcall
mov
mov
dec
das
fmuls
punpckhbw
xchg
loope
in
sbb
inc
arpl
aaa
cmp
xchg
test
pusha
js
cli
add
push
and
add
push
cmp
popf
cmp
jnp
ret
subb
mov
xchg
jmp
subb
inc
outsb
jge
xchg
test
sub
push
add
das
mov
iret
cmp
cmp
jge
jbe
mov
ret
outsb
dec
stos
inc
pop
sub
scas
mov
shll
sub
mov
lock
outsb
je
fisubl
jbe
xor
ljmp
and
push
repnz
int
or
push
fwait
je
adc
out
lods
mov
nop
sarb
cwtl
mov
lock
sbb
inc
sahf
push
adc
or
imul
repz
lock
lea
add
mov
dec
and
cmp
movsl
dec
sbb
adc
loop
xor
fcoms
popl
jae
jo
ss
add
push
imul
or
push
push
insb
outsb
xlat
ja
and
loop
mov
loopne
mov
dec
icebp
xchg
ljmp
pop
ljmp
or
push
mov
ja
out
jmp
xorl
pop
outsl
mov
in
dec
cmp
pop
sbb
lahf
inc
sub
ljmp
decl
sub
ret
jmp
iret
mov
out
aam
cmp
test
jge
test
lods
daa
xor
cmpsb
scas
std
orl
mov
ret
std
mov
insb
mov
fdivrp
punpckhwd
inc
sub
fs
outsb
testb
pop
pop
sbb
loope
xchg
xchg
push
mov
adc
fstpt
inc
xor
mov
je
lock
test
push
sbb
push
in
stos
mov
insl
stos
jb
sub
pop
ljmp
aam
mov
mov
cmpsb
imul
add
push
add
movsb
out
jp
push
int
xorb
rorb
std
mov
mov
rcrb
cmp
adc
lahf
pusha
mov
fsubp
fistpl
sbb
inc
sub
push
ds
sbb
xchg
dec
push
fnstenv
push
inc
fsubrl
lods
pop
xchg
lods
addr16
mov
pushf
or
int3
push
pushf
xchg
push
repnz
and
div
call
and
pop
das
jnp
mov
fadd
cmc
jb
call
aam
mov
paddusb
out
inc
test
pusha
xor
add
lods
stc
add
in
mov
cld
dec
mov
cmp
lods
ss
jno,pn
stos
fidivs
lock
ljmp
and
mov
xchg
add
mov
ret
mov
xorl
mov
aaa
push
inc
mov
add
fs
dec
push
pop
cmpsb
sub
in
mov
ja
popf
rclb
and
jnp
add
ja
scas
leave
mov
mov
ret
mov
mov
lahf
lahf
cmp
mov
rclb
add
xchg
fldenv
mov
jbe
lods
inc
sbb
sub
mov
in
mov
jae
test
movsb
call
stos
or
loopne
xchg
in
js
cwtl
sti
lea
aaa
mov
cmp
pop
das
popf
dec
xor
enter
lods
xchg
push
out
jp
inc
sub
sub
mov
xchg
mov
mov
push
mov
call
popa
mov
push
aam
dec
test
adcb
sub
lods
pextrw
movsb
jne
inc
dec
pop
mov
xchg
call
push
rolb
mov
lods
jp
inc
ret
push
icebp
push
mov
cmpb
dec
lret
rorl
scas
dec
mov
jo
sbb
mov
push
popa
adc
movsl
xor
jg
cmp
cmp
jg
test
rorl
adc
pusha
pop
lret
mov
fnstcw
push
jns
mov
ljmp
add
xchg
cmpsb
rorb
loop
sti
lods
je
clc
js
or
lret
leave
pop
sarb
icebp
dec
adc
pop
cmpxchg
jl
mov
xor
or
ja
popf
xchg
cmp
adc
mov
mul
mov
push
jae
fs
jp
inc
mov
sbb
xorb
imul
in
adc
mov
stc
inc
aam
mov
test
imul
push
movsb
or
cwtl
jbe
sbbb
movl
dec
imulb
push
lods
flds
fsubl
mov
enter
cs
sar
sbb
or
lods
popa
and
push
dec
push
sub
push
hlt
lods
sub
int3
js,pt
xorb
repz
xor
out
in
hlt
test
and
outsl
sub
fstl
lahf
cmp
and
sub
mov
sbb
mov
daa
add
aad
loop
pop
addr16
mov
xorb
mov
sbb
inc
scas
lret
push
fcomps
or
dec
cmpl
mov
sub
add
sbb
shll
testb
sbb
nop
mov
xchg
push
test
sub
sti
pop
inc
inc
cmp
stc
bnd
popf
jle
call
cld
mov
mov
out
fcmovnb
adc
rclb
jo
and
mov
cld
cld
sbb
popf
push
cld
inc
mov
loope
xlat
loop
pushf
xor
shlb
and
cmp
xchg
sarl
or
cwtl
js
out
and
xor
cld
sbb
in
and
data16
push
imul
jg
repz
das
push
aas
imul
mov
cmp
jge
lds
dec
sbb
jnp
es
popa
in
sbb
jle
xor
psubusb
sti
aam
lret
repz
mov
mov
jmp
lret
mov
sub
jbe
push
dec
dec
dec
adc
sub
inc
popf
jecxz
in
ja
jmp
mov
cmp
cmp
xchg
jle
push
mov
dec
negb
add
pop
ss
sub
lahf
mov
daa
loop
repz
loope
jae
rcl
pop
xchg
mov
cmp
retw
lock
pop
scas
lcall
pop
outsl
cmp
data16
popa
adcl
pop
xor
ret
popf
je
xchg
inc
loope
fadds
into
mov
lock
dec
fisttps
insl
jmp
cmp
sbbl
fldt
mov
addr16
and
push
pusha
inc
jle
xor
mov
mov
outsl
movsl
xchg
or
mov
xchg
inc
mov
add
into
jmp
data16
add
js
push
jmp
fisttps
jl
sub
or
inc
cld
inc
push
pop
inc
mov
sbb
xor
fwait
cmp
dec
insb
ja
leave
addr16
insb
fidivrs
and
sbb
xchg
loope
jb
mov
sub
dec
xchg
cld
pop
mov
in
popa
addb
pop
mov
pop
and
cs
cmp
lock
leave
int
outsb
ss
stos
cli
loopne
std
fimuls
scas
jmp
push
jo
pop
jo
shll
and
dec
pop
cmc
fldt
add
aaa
pop
and
lock
push
jbe
mov
mov
pop
jp
mov
xchg
aaa
dec
or
loop
repnz
mov
bswap
lahf
into
mov
cli
sub
rorb
ret
add
adc
aad
jne
scas
push
inc
mov
xchg
dec
std
add
push
pushf
cli
xor
jno
aad
add
mov
les
inc
xor
enter
mov
and
jecxz
ljmp
fs
cwtl
mov
lds
scas
pop
push
or
lock
sub
mov
sti
mov
cwtl
pusha
jg
call
adc
pop
fcmove
fdivs
mov
icebp
and
or
dec
push
and
mov
mov
add
push
cltd
dec
or
push
ja
jno
xchg
lret
add
sbb
inc
rcrl
into
dec
or
xchg
mov
fwait
mov
adc
test
int
popf
xchg
mov
add
jnp
imul
xchg
mul
or
add
pop
jnp
cmp
inc
jg
xchg
sub
out
jbe
cmpsl
dec
ss
xchg
iret
push
or
dec
adc
adc
pushf
daa
cmp
movsl
or
push
fwait
out
sub
ja
pop
cmp
jle
ljmp
add
aaa
aad
sbb
add
lcall
mov
mov
fs
jae
xchg
imul
shll
ss
out
fldt
addr16
push
xchg
jbe
cmpsl
les
sbb
pusha
lods
pmaddwd
sarl
and
inc
mov
dec
add
aaa
pop
jb
add
inc
mov
mov
or
inc
shrb
fidivrl
aaa
imul
mov
addr16
mov
fisubrl
std
and
push
repz
lock
mov
xor
mov
cmp
push
adc
xor
gs
ud0
jne
andl
fs
sbb
cmp
ds
bound
jle
push
jns
lret
ljmp
lock
mov
ljmp
add
cwtl
sbb
jnp
xchg
test
scas
xchg
pusha
outsl
mov
clc
and
push
mov
push
mov
mov
cwtl
dec
inc
pop
dec
fisubrs
mov
jae
or
cmp
jo
movl
add
cmp
add
cld
movsb
xor
cs
insl
mov
dec
pop
jno
cmpsb
push
mov
add
adc
push
aad
mov
mov
xchg
jmp
aas
leave
scas
jmp
jp
js
popa
icebp
insb
adc
rorb
bound
aam
mov
xor
mov
add
outsl
xor
push
push
nop
cmpsl
dec
icebp
inc
mov
lock
inc
jge
and
sbbl
inc
outsb
jl
mov
sub
cmp
lea
std
mov
fcoms
ds
pop
mov
pop
popf
mov
mov
mov
movsb
or
loop
in
fisttpl
sbb
aam
lcall
inc
cmp
inc
mov
jmp
dec
or
mov
pop
pop
fists
push
popf
xchg
in
xchg
aaa
test
movb
or
je
and
sahf
fistps
pop
das
imulb
mov
push
ret
sub
arpl
imul
into
mov
outsb
ret
sbb
movsl
in
test
mov
fisttpll
test
sub
call
or
mov
push
fs
nop
or
jl
push
imul
inc
mov
sbb
pop
push
icebp
jne
test
int
cmp
dec
pop
and
aad
xchg
jnp
xor
fldl
dec
xor
mov
add
xlat
mov
scas
arpl
pop
mov
sub
add
push
xor
pusha
roll
dec
pusha
aam
sbb
adcl
loop
inc
mov
jne
dec
sbb
outsl
test
inc
imul
mov
sub
pop
xor
and
sub
lcall
cwtl
inc
and
mov
dec
push
arpl
std
push
add
sbb
push
test
mov
sub
sub
dec
lret
into
add
push
mov
in
ja
add
inc
fwait
dec
jae
fmull
daa
mov
aas
lret
cmp
or
adc
negb
movsb
add
xchg
das
mov
cmp
test
jmp
aam
mov
sti
jmp
sub
jne
ja
lds
sub
sub
nop
push
in
add
xchg
adc
int
mov
fcoml
dec
ss
mov
daa
cmp
loopne
adc
out
or
push
insl
sub
dec
mov
ds
or
ds
inc
call
cmp
xor
or
frstor
enter
mov
fwait
push
cli
fs
sbb
push
pop
cmp
testb
xor
int3
shll
andl
inc
push
shl
popf
pop
stos
or
fisubrs
scas
iret
pop
push
outsl
movsb
cmp
lods
mov
or
scas
push
dec
push
mov
push
mov
cs
es
test
loopne
test
fimull
movsb
jnp
ja
fldl2t
jo
pcmpgtb
dec
mov
inc
enter
xor
push
adc
aas
and
push
push
xchg
sarl
jg
add
lret
js
popa
mov
sub
pop
lret
fdivr
xor
test
add
sbb
xor
loope
les
sbb
add
addl
sti
pop
cli
and
jb
aam
mov
andl
xlat
mov
test
xchg
jl
mov
mov
stos
xchg
es
int3
mov
push
stos
es
inc
imul
in
push
lahf
jmp
inc
into
inc
rcrb
or
lahf
dec
mov
push
sub
cmc
cmp
push
dec
aas
adc
int
enter
and
popfw
insb
and
sub
sti
cwtl
pop
jl
loop
jmp
add
inc
cmp
push
das
mov
sbb
arpl
fisttpl
mov
clc
insb
push
pop
xorps
xor
or
jnp
rcrb
and
or
mov
jge
lods
mov
cmp
mov
jbe
and
xchg
sahf
xor
lret
and
xchg
sbb
adc
jg
aad
stos
es
pop
divb
hlt
mov
and
lods
xchg
bound
add
loop
lea
fsts
repnz
imul
mov
sarl
sti
and
and
in
cmp
inc
sub
inc
not
hlt
mov
push
or
loopne
add
iret
cwtl
add
iret
aad
pop
pop
push
cld
and
xor
pushf
xchg
and
gs
orb
out
adcb
imul
lock
sub
in
sub
lcall
pusha
rcrl
cmovg
ds
in
xorb
add
mov
adc
mov
std
popa
mov
in
push
cmpsl
inc
inc
outsb
flds
add
mov
shr
mov
sti
mov
adc
push
adc
ljmp
lret
sbb
gs
dec
out
jg
dec
or
loop
xchg
sbb
cld
mov
test
test
cmpl
lods
fwait
mov
mov
adcb
adc
inc
mov
jnp
xor
mov
aad
movsl
mov
inc
mov
sub
cmc
outsl
shlb
xchg
mov
int3
xchg
xchg
imul
adc
push
lcall
or
data16
xchg
xchg
mov
push
push
adc
out
inc
push
mov
fbstp
dec
aad
arpl
insl
add
xchg
in
mov
popf
push
fdivrs
lahf
aam
popa
fadd
mov
fistpll
popf
mov
ret
xchg
ljmp
sbb
ss
mov
sub
rcr
arpl
es
inc
dec
pushf
dec
mov
push
pop
mov
hlt
inc
aaa
push
xchg
insb
dec
mov
repnz
and
dec
add
and
push
pusha
sahf
aas
sub
jns
rorb
les
addr16
mov
sbb
sbbl
cmp
fs
ds
xor
adc
mov
stos
fs
out
in
int
xor
and
icebp
mov
les
das
fadd
cli
mov
je
push
aas
aaa
mov
out
es
add
add
pop
xor
jg
and
jmp
xchg
int3
es
out
lods
sbb
pop
xchg
addr16
xchg
xor
pop
xchg
cmpsl
punpcklwd
mov
mov
mov
stos
jg
or
mov
mov
gs
or
nop
sti
movsl
xchg
pop
and
mov
sbb
cmp
data16
pop
pmulhuw
xchg
or
adc
sarl
fimull
gs
inc
daa
int
xchg
adc
andb
ds
cli
xchg
sub
setne
shl
sub
std
pushf
push
pop
inc
sbb
out
mov
cmpsb
repz
and
xchg
mov
hlt
ret
ljmp
mov
lret
bound
push
jns
pop
inc
mov
xlat
pop
out
int
inc
pop
add
lds
cmp
pop
pop
aaa
mov
int
cmp
pop
mov
xchg
inc
mov
dec
and
dec
lret
jl
repz
mov
sbb
lods
lods
das
shrl
cmp
sbb
repz
mov
and
inc
sub
mov
mov
or
clc
sbb
sbb
hlt
les
cli
out
jp
gs
adc
jb
xchg
push
xchg
add
xchg
cli
insl
xor
push
adc
das
mov
lods
popl
xchg
lret
dec
push
daa
pop
mov
ds
fldenv
ret
loop
sbb
jno
fidivs
cs
sbb
ficomps
push
inc
xor
mov
push
outsb
fidivrl
cld
xor
mov
push
inc
xlat
sti
sub
pop
arpl
popa
mov
pop
cmpsl
dec
dec
xor
jae
lahf
push
sbb
movsl
cmp
adc
jle
xor
and
int3
xor
pop
sub
test
movsb
ss
mov
mov
stos
lret
dec
sub
push
stos
inc
jle
xor
ljmp
jge
jmp
jmp
push
push
test
sahf
cmp
lods
lea
arpl
fsubs
add
loopne
mov
jge
mov
pop
dec
outsb
insl
dec
fldt
ljmp
leave
jp
cmp
mov
pop
shlb
stos
data16
adc
pop
push
rclb
fidivs
jae
cltd
es
add
pusha
stos
jo
outsl
pushf
mov
imul
jb
hlt
jmp
pop
pop
cli
mov
aad
shlb
push
inc
inc
and
cmp
xcrypt-ctr
cmpsl
pushf
test
je
lock
imull
or
test
pop
mov
addb
aad
je
cmp
inc
push
pop
icebp
lock
ss
push
mov
mov
sbb
out
loope
out
mov
xor
mov
loop
sub
mov
test
test
dec
testb
cmp
ror
fwait
lret
loope
jecxz
test
pushf
fnsave
adc
test
pop
dec
fsubs
xor
cmp
pushf
mov
jp
popa
icebp
frstor
lods
push
push
xchg
mov
scas
cwtl
or
aaa
mov
mov
add
and
and
add
sarl
shlb
or
jg
push
outsl
adc
aad
cmpsl
pop
push
jmp
flds
rclb
add
jns
sti
insb
pop
mov
adc
add
xorl
mov
mov
push
sbb
jle
test
pop
mov
ja
andl
andb
andl
jl
scas
xchg
xchg
sbb
sbb
repnz
mov
int
adc
xorl
je
xor
rorb
add
adc
dec
sub
dec
lods
aad
adcl
add
ret
mov
and
scas
xchg
in
clc
sbb
push
mov
sub
xchg
adc
jl
jae
adc
stc
test
push
add
jb
cmpsb
inc
or
fdivp
dec
out
je
add
xchg
repnz
xchg
nop
cmpsb
or
int
out
inc
push
push
les
sub
push
dec
mov
dec
adc
pop
inc
pop
rcrl
xor
xor
lods
out
clc
int
mov
pop
icebp
pop
push
ficoml
mov
mov
loopne
sub
sahf
and
pop
inc
push
rorb
add
andl
xchg
push
inc
and
fnsave
aad
cmp
mov
add
shrl
adc
xor
inc
roll
mov
xor
jle
mov
xchg
mov
test
mov
pushf
inc
xor
dec
lds
xor
mov
stos
push
lret
arpl
mull
sbb
and
xor
adc
sbb
mov
push
mov
sub
test
mov
inc
cltd
push
add
mov
push
dec
insb
idivb
test
lds
pop
leave
xchg
jmp
in
mov
repz
pop
push
lcall
cmp
xor
sahf
movsb
sahf
fnstcw
insl
or
xchg
xlat
push
fs
aam
sar
or
rcrl
jge
fdivrs
inc
and
outsb
pusha
mov
sbb
adcl
mov
adc
imul
icebp
enter
push
cld
insb
push
gs
fstps
push
mov
rcrb
add
xchg
inc
and
cld
div
or
and
mov
popf
gs
outsl
add
adc
stc
and
test
cwtd
jno
fdivrl
sahf
jno
jnp
pop
xor
fincstp
mov
arpl
cmpsb
mov
nop
inc
jp
xor
dec
dec
or
and
in
push
pop
outsb
scas
movsb
aas
aas
jge
inc
out
push
push
test
mov
bound
enter
test
inc
push
mov
push
adc
add
pop
mov
out
inc
add
lcall
ffree
ficoml
fidivrs
inc
sbb
inc
and
sahf
push
hlt
repnz
imul
mov
aad
jbe
mov
sbb
hlt
rorb
adc
ret
mov
add
xchg
ret
test
cmp
lock
frstor
mov
popa
stc
inc
js
les
add
xchg
loopne
fxch
dec
lods
pop
xorb
ss
mov
int
frstor
test
inc
mov
ljmp
jmp
subb
movsb
mov
mov
add
adcb
mov
hlt
imul
daa
in
cli
test
testl
pop
sbb
add
pusha
and
stos
mov
lret
sub
mov
cltd
mov
jns
fs
dec
mov
pushf
outsl
inc
push
stos
test
xchg
jns
mov
push
je
inc
push
mov
sub
into
arpl
iret
adcl
fnsave
xchg
shll
sbb
sub
add
sub
cltd
xor
xor
sub
and
mov
push
jg
and
sub
outsb
inc
add
mov
movsb
adc
daa
shlb
aam
addr16
jb
and
call
mov
adc
or
scas
mov
mov
movsb
js
inc
insb
enter
mov
and
cmp
mov
and
or
adc
stos
mov
les
push
ret
push
adcb
mov
pop
outsb
sbb
int
add
shrb
cmpsl
subb
inc
xchg
ja
xor
hlt
insl
mov
fwait
xchg
fimull
pop
test
pop
cwtl
ljmp
gs
fmull
jmp
shrb
ljmp
pop
sbb
dec
out
in
rorl
or
push
pop
dec
push
cmc
jl
dec
cld
das
aam
adc
and
mov
xchg
cld
addr16
lods
mov
or
mov
fistps
test
repnz
cmp
incl
push
lock
data16
out
mov
cmp
imul
test
in
push
stos
mov
jns
inc
push
cmp
movsb
daa
pushf
jnp
push
xchg
fdivrs
lcall
push
push
imul
add
xor
push
lods
pop
jl
xor
es
xor
pop
mov
imul
in
pop
adc
hlt
es
fstpl
repnz
mov
inc
jecxz
inc
xchg
adc
es
mov
inc
mov
or
pushf
rolb
cmpsb
and
mov
adc
es
aad
sbb
jecxz
call
jmp
fsubrp
cmc
push
add
nop
and
shll
scas
xchg
jae
push
xlat
fcoms
or
aaa
outsb
dec
arpl
and
test
pop
mov
xor
fidivrs
adc
loopne
cmp
leave
dec
mov
push
mov
loope
ret
inc
mull
jle
mov
fisubl
adcb
xor
mov
cmpsb
jo
ljmp
and
inc
mov
in
mov
imul
pop
dec
jae
loop
jle
mov
cmpsl
jbe
inc
sarb
arpl
cmp
xbegin
cmp
insb
jmpw
sti
sti
sbb
daa
imul
pop
jg
or
sbb
xor
mull
push
mov
lcall
push
mov
fisttpll
leave
mov
gs
adc
jmp
cmp
das
dec
mov
jg
push
sti
aam
mov
lock
and
nop
mov
xchg
sub
add
jmp
scas
sbb
repnz
lahf
xchg
cltd
fcompl
cli
imul
add
jbe
scas
mov
mov
ds
push
inc
insb
int3
aas
pop
js
cmp
loop
pop
add
test
dec
cltd
stos
imul
xlat
fs
jl
lret
setge
shll
mov
jmp
dec
faddl
cmp
or
imul
pop
decb
and
cmp
adc
mov
mov
cli
adc
and
test
add
outsb
bound
and
mov
andl
cli
jae
aad
xor
scas
jg
and
pop
push
incl
cmp
and
arpl
test
ret
js
pop
mov
cmc
jae
leave
jno
mov
mov
pop
das
cld
mov
lods
cmp
ja
fisttps
repnz
out
push
cmc
mov
popf
or
loop
xchg
sub
jg
add
repz
and
sub
pop
daa
iret
and
imul
xor
lret
add
in
sbb
adc
outsb
cmp
test
sub
xorl
cmpl
sbb
das
psubsw
or
scas
pop
sarb
sub
jle
out
cmp
notl
cmpsl
mov
pop
out
cld
mov
sub
jbe
ds
fsts
mov
cwtl
push
aaa
adc
mov
sbb
mov
dec
inc
imul
rcll
mov
fs
repnz
pop
add
into
repnz
movsb
and
xor
lret
inc
cld
mov
aas
mov
xchg
shll
loopne
rcl
push
or
inc
pusha
sbbb
push
push
sbb
sahf
or
push
and
ror
test
lret
mov
leave
into
jno
mov
xor
cwtl
mov
jge
jae
add
sbb
or
adc
sub
push
add
test
cs
lea
pushf
mov
test
inc
or
add
jmp
sub
cld
pop
xchg
movsb
js
xchg
dec
dec
dec
push
imul
fldt
nop
ljmp
xor
push
adc
push
aad
xchg
mov
std
insl
adc
cld
mov
loop
or
andb
xorl
in
inc
notb
ss
and
lds
addr16
sbb
or
idiv
lock
jp
das
dec
arpl
das
add
outsb
jns
aam
jne
in
sbb
jb
inc
cli
xor
jne
lcall
lods
jb
cmp
into
mov
add
pop
lcall
fsubrs
xor
out
addr16
mov
aaa
ljmp
jecxz
inc
sub
xor
inc
shlb
mov
mov
fwait
test
in
push
in
arpl
clc
movsl
les
jge
jbe
sahf
cmpsl
inc
in
gs
jbe
adc
push
mov
sbb
outsb
mov
cmpl
pop
lea
cmp
outsb
lds
push
orl
js
pop
loopne
fs
pop
add
add
cld
mov
add
cmc
pop
cmp
xchg
cs
sbb
xor
cmp
cmpsb
mov
jnp
inc
fsubs
mov
incl
imul
or
bound
cmp
push
xlat
adc
shrl
cld
mov
ljmp
mov
aam
clc
sbb
xchg
movsb
jns
lock
jno
dec
addr16
xlat
loop
jns
mov
mov
movsb
jnp
sbb
mov
xchg
sub
xor
xchg
cmpsb
movsl
fldt
inc
add
dec
imul
sbb
std
push
dec
jp
stc
push
fsubs
add
frstor
xchg
and
pop
mov
jno
sub
popf
scas
xchg
push
sahf
int
popf
popf
test
mov
add
enter
pop
fdivrl
pop
cltd
insb
jl
out
xor
sbb
xlat
outsl
divb
out
adc
in
sbb
push
ret
push
fimuls
adc
loope
shll
sub
rorl
fdivrl
sahf
lea
sbb
int3
mov
imul
xor
inc
mov
and
fwait
sub
out
dec
cmp
ja
xchg
add
movsl
mov
sub
out
push
add
jnp
insl
pop
push
or
mov
mov
adc
or
out
push
cmp
jnp
push
and
mov
arpl
clc
adc
push
sub
aaa
xor
jae
lock
repnz
mov
push
incl
adc
outsl
insb
repnz
inc
outsb
in
hlt
xchg
scas
add
mov
jmp
jle
inc
inc
lods
sub
gs
cs
stc
xchg
push
arpl
mov
out
js
or
cs
dec
mov
jae
push
fwait
inc
cs
or
dec
xchg
es
clc
pop
sbb
add
push
sub
ret
mov
icebp
xchg
mov
inc
inc
out
arpl
push
sbb
mov
data16
testl
movswl
push
add
jmp
movsb
cmp
lods
push
sub
ret
pop
pop
incb
dec
nop
and
shrb
dec
sbb
dec
pusha
dec
and
das
adc
xchg
lret
or
cmpsl
xor
jg
std
in
push
out
fwait
js
xchg
push
popl
rcrl
push
adc
outsb
mov
dec
mov
ds
imul
mov
or
clc
cwtl
pop
mov
inc
imul
ljmp
fsub
sar
add
and
pop
dec
add
in
push
add
dec
sbb
fcoml
fisubrl
daa
icebp
cwtl
inc
jnp
andb
cmpsb
xchg
aas
jnp
and
jno
stc
cs
pop
or
sbb
movsb
inc
dec
test
test
lret
pop
pop
fcomp
jg
fcmovne
imul
sahf
push
jns
add
pop
loopne
cld
popf
into
mov
add
ds
mov
xor
nop
orb
pop
outsb
popf
cld
ljmp
jg
xchg
movsl
sahf
insb
adc
movsl
inc
stos
add
repz
cmc
sub
cltd
mov
pop
call
fcmovnb
sarb
rcl
inc
mov
rolb
inc
sbb
xchg
mov
xor
sub
pop
fcmove
repz
gs
rorl
xchg
inc
inc
xlat
lret
xchg
in
sub
addl
adc
mov
loope
aam
xchg
jl
gs
lods
pop
enter
pop
testl
decb
mov
fstps
dec
into
out
or
movsl
dec
cmovle
mov
add
mov
into
jg
xlat
xchg
fwait
adc
xchg
and
mov
rcll
fbstp
push
mov
dec
aam
bnd
xchg
sbb
xchg
mov
jmp
cpuid
imull
lods
fistpll
jle
inc
lret
gs
pushf
cmp
mov
int
shl
cld
mov
stc
lea
inc
mov
test
call
xlat
cmp
fstpt
jmp
xchg
shrl
add
xchg
xchg
cmpsl
sub
jbe
xchg
pop
dec
rcrb
loop
jecxz
rclb
lret
es
scas
andl
test
aam
sbb
bound
pusha
enter
push
inc
fiaddl
pop
mov
ret
mov
int
aaa
cmp
ljmp
insl
in
sbb
jecxz
cmp
aad
leave
push
jbe
pop
stos
lahf
ljmp
inc
or
pop
mov
shll
repz
xchg
scas
and
stc
cmp
sbb
inc
shll
js
mov
and
cmp
xchg
aas
jae
in
pop
push
dec
adc
pusha
jmp
lock
cmc
int
loop
lret
in
into
xor
sub
xor
mov
cmp
popf
inc
cmpsl
test
mov
or
std
jnp
int
repz
xor
ficomps
jecxz
insb
stos
bound
stos
fstps
lahf
and
jl
mov
mov
dec
rorb
inc
inc
sbb
leave
mov
lods
into
test
sub
aam
lock
sub
js
gs
add
push
and
inc
sti
stc
ret
test
push
lods
sbb
subb
mov
in
out
xlat
dec
add
daa
call
outsb
nop
fdivrs
sub
jo
xor
int3
negl
adc
add
jl
push
push
out
test
push
out
mov
jne
test
leave
shl
imul
dec
out
jb
pop
loop
movsb
push
loop
mov
movsl
mov
cld
js
lcall
inc
xchg
push
loopne
sub
push
outsb
arpl
push
movsl
adc
xor
dec
add
mov
mov
loop
das
push
dec
repnz
jne
sbb
fistpl
out
adc
and
jns
mov
mov
jb
cmc
jne
pop
mov
mov
out
push
hlt
xor
iret
cmpsb
xchg
les
pop
dec
mov
sbb
xor
ficompl
xchg
and
push
ljmp
pop
arpl
push
cs
push
mov
xor
mov
test
ja
add
movsb
mov
aas
cli
cwtl
mov
fs
xchg
inc
lea
rcrl
andl
or
dec
add
jbe
inc
adc
aad
dec
jae
sub
pop
fwait
imul
mov
jmp
dec
rorb
call
or
mov
xor
sub
add
push
jno
es
inc
cmp
mov
cmc
dec
dec
xorl
pop
gs
pop
or
xchg
jecxz
and
xchg
gs
shlb
in
repnz
das
popf
sub
mov
in
sub
orb
pop
dec
cmpsl
sti
mov
mov
dec
imul
das
and
sbb
mov
iret
push
pop
pop
push
mov
mov
cmp
sahf
xchg
bound
sub
inc
ret
fisttpl
push
call
adc
mov
push
stos
cwtl
lea
cmp
jecxz
ds
stos
mov
cwtl
push
adcl
push
push
mov
mov
out
aam
xchg
ds
inc
lods
xchg
pushf
xchg
out
xchg
sti
adc
xor
pop
pop
pop
xor
popf
xlat
mov
divps
jle
ja
or
test
int
scas
and
xchg
pop
ret
pop
pop
test
out
cli
jb
pop
dec
jmp
out
insb
xchg
int
sbbl
cmpl
gs
push
xor
or
adc
in
jecxz
dec
xorl
dec
lret
shll
scas
push
movsb
cmp
ret
out
jo
loopne
sahf
jmp
xchg
cmp
call
push
leave
aaa
or
sub
fimull
mov
test
daa
xor
loopne
dec
lods
lahf
mov
cmp
inc
insl
fwait
dec
dec
inc
xchg
xchg
push
jno
mov
push
cmp
negl
add
sub
scas
data16
popa
fdivrs
push
push
cmp
jmp
fcomip
mov
leave
daa
iret
dec
adc
lret
je
bound
fdiv
xchg
add
adc
dec
insb
mov
cmpsl
inc
fisubs
push
pop
sti
lret
jecxz
iret
in
jl
and
aas
rep
or
jb
rorb
imul
ljmp
push
adc
pop
cli
adc
adcl
in
pop
sbb
mov
dec
insb
pop
data16
ret
sub
jmp
add
push
rcll
cmp
push
jns
mov
cmpsl
add
bound
pop
and
pusha
scas
pop
ret
outsl
stc
movsl
push
jp
repz
dec
mov
mov
js
xchg
das
jmp
das
pusha
mov
lret
ds
call
cmp
das
cmp
daa
or
and
repnz
mov
or
insl
dec
fldcw
int
enter
sbb
sub
and
pop
repnz
dec
mov
stc
push
fadd
aaa
mov
fisttpl
jp
cmp
jbe
addr16
jo
xchg
shlb
push
dec
into
loop
cmp
aas
dec
mov
ds
push
js
cld
sbb
dec
aam
je
shlb
jb
cmpsb
vpor
ljmp
mov
mov
or
mov
sub
cli
repnz
fiaddl
out
shlb
cmp
pushf
shlb
xchg
lret
test
cmpsb
in
xor
in
push
filds
jae
pop
mov
push
mov
mov
shr
mov
inc
add
fcomps
test
in
cmp
addr16
jno
sub
adc
outsl
fld
sbb
cmc
lret
xor
int
test
fld
pop
je
aaa
das
cmp
cwtl
lret
adc
sub
js
icebp
aas
int3
sti
les
addr16
out
xor
fs
int3
cmpsl
fwait
sarb
jo
xor
xor
in
sub
cltd
imul
ds
inc
fwait
ret
shlb
lea
test
stos
jo
sti
sub
dec
fists
mov
scas
push
bound
dec
decb
in
out
sub
mov
sub
mov
mov
cmp
je
out
mov
mov
or
mov
or
jmp
pop
push
ja
xchg
test
pop
cmp
pop
outsb
ja
push
sbbb
adc
rcll
ljmp
loopne
jae
outsb
test
jmp
push
movsb
ret
fcom
inc
icebp
or
xchg
loopne
adc
fldt
jge
push
mov
fistl
pop
out
mov
movsb
inc
fstpl
repnz
fstpt
mov
imul
into
cwtl
test
xor
ss
mov
adc
stos
and
cld
iret
add
mov
inc
jns
xchg
cmp
stos
xor
add
sub
inc
adc
adc
add
out
call
and
push
pop
dec
inc
outsb
imul
cmp
gs
mov
lret
jae
imul
mov
and
jp
lcall
incb
or
rol
or
xor
aas
repnz
lret
pop
adc
sub
sub
dec
mov
daa
xor
jle
cmpsl
mov
push
lahf
stos
inc
sub
mov
rcll
mov
lret
sti
xor
xchg
fistps
pop
push
movsl
faddl
mov
hlt
cltd
sbb
add
mov
dec
roll
fsubl
lock
pop
imul
cltd
icebp
or
adc
imul
sub
xchg
lods
sub
jecxz
or
dec
or
in
cmp
mov
pop
nop
lahf
jmp
stc
dec
push
int3
je
push
xchg
mov
in
xor
std
or
outsl
outsl
and
lret
test
xchg
insl
repz
mov
jge
cmp
xor
repz
inc
cmp
and
push
mov
repz
pop
aad
sub
dec
pop
adc
stos
ret
fucomip
cmp
popw
jl
mov
inc
rcrb
sub
push
movsb
sub
adc
addr16
or
test
inc
in
push
fsubs
push
jg
jecxz
int
gs
xchg
and
les
xchg
mov
orb
jecxz
or
mov
iret
lods
xchg
popf
pop
adc
xchg
lret
xchg
dec
or
insb
popf
lds
inc
push
out
xchg
repz
push
mov
pop
mov
cmp
aad
hlt
xor
mov
sub
out
cmpl
push
xchg
mov
add
addb
mov
pop
jae
shll
and
cmp
dec
bnd
sahf
inc
rorl
cmp
sub
repnz
call
pop
mov
push
cmp
xchg
enter
loope
aad
imul
lock
mov
mov
inc
inc
repnz
lret
pop
adc
dec
mov
stos
cmpsb
outsb
mov
jle
or
out
sub
aas
pop
adc
mov
mov
inc
mov
pop
inc
popf
mov
mov
inc
cmpb
sahf
push
mov
sbb
cmp
pop
sub
out
jg
out
shlb
cmpsb
xchg
imul
xor
cmp
xor
xchg
pusha
lds
mov
stos
mov
cmp
cmpsb
mov
push
pop
mov
sub
iret
mov
pop
imul
movsl
xchg
lcall
mov
adc
mov
or
cmpsl
sarl
sub
pop
and
pop
or
inc
sbb
sub
xchg
nop
push
popf
pop
rolb
repnz
js
xor
out
xchg
in
pusha
lods
imul
out
jnp
lret
imul
push
mov
sub
mov
add
addr16
mov
mov
mov
push
rcrb
ss
push
mov
xchg
sbb
add
in
sbb
lahf
rolb
mov
es
mov
mov
pop
lret
arpl
mul
cli
enter
sbb
shlb
lcall
push
scas
mov
adc
push
inc
inc
dec
inc
js
xchg
shll
scas
dec
mov
jmp
dec
sub
jge
outsl
sahf
mov
fcomps
mov
fwait
dec
lods
and
xlat
fdiv
subb
repz
pop
js
mov
hlt
popf
cmpsl
in
xor
or
cmpsl
adc
inc
inc
mov
mov
int3
scas
dec
inc
jge
shrl
and
arpl
insl
mov
clc
and
hlt
das
inc
in
dec
cmc
jnp
dec
inc
push
js
sub
push
cmp
or
inc
fsubr
xor
lcall
cmp
add
or
pop
mov
pop
or
arpl
pop
xchg
inc
scas
jle
sub
add
or
mov
push
in
js
cwtl
push
in
mov
int3
xchg
andl
or
cld
and
jge
mov
cmp
jno
xchg
stos
jl
loopne
test
aas
mov
push
sbb
jns
repz
arpl
jl
flds
or
or
addr16
rcrb
pop
cmp
fucom
push
and
jle
sti
push
sub
push
sti
jmp
xor
pop
test
mov
sub
dec
movsl
mov
imull
mov
push
ss
pop
orb
mov
mov
cmp
call
pop
popf
clc
loop
mov
aaa
pop
cltd
sub
inc
and
cmp
push
push
fadds
ja
add
add
mov
cwtl
mov
mov
and
xchg
call
out
repnz
push
mov
and
jmp
cmp
jno
hlt
xchg
add
xlat
insb
add
pop
mov
and
xor
pusha
xchg
test
icebp
sbb
push
push
xchg
dec
dec
rcrb
xor
inc
cli
roll
xchg
adc
xor
shll
pop
or
cmpsb
sub
cmp
inc
sar
xor
dec
xchg
mov
shrl
adc
push
mov
mov
jl
jo
ret
orb
jno
inc
hlt
pop
pop
dec
mov
subl
jp
xchg
xchg
sub
notl
aam
aam
push
adc
inc
pop
and
jne
or
imul
fwait
cmc
es
xor
insb
clc
and
pop
add
push
dec
insl
data16
sar
push
sub
inc
cmpb
adc
jl
pop
mov
mov
loope
xorb
lock
xchg
inc
push
jnp
sbb
test
dec
iret
dec
data16
adc
cltd
shll
testl
cmc
jl
loope
lahf
popa
adc
mov
bound
fucom
js
push
lea
icebp
inc
pop
inc
sub
movsb
in
insl
cmc
adc
or
push
mov
jecxz
js
jb
xchg
jns
pop
outsb
cmc
leave
imul
xlat
mov
xor
cwtl
push
dec
mov
repnz
adc
inc
out
test
cmp
out
xor
add
dec
push
inc
shlb
mov
cmpsb
or
in
das
mov
jb
mov
mov
jb
add
and
test
das
adc
mov
push
push
test
lahf
scas
sub
out
je
adc
out
mov
dec
ror
mov
pmullw
adc
adc
adc
xchg
std
gs
and
cltd
and
or
sub
outsl
outsb
pushf
xor
xor
loopne
jl
push
sub
pop
icebp
int
int3
pop
arpl
cmpsb
ja
lea
into
fsubs
sub
lock
ljmp
jnp
add
xor
sbbb
int3
ds
out
cwtl
faddl
add
push
pop
adc
sarb
leave
pop
cmovbe
js
pop
mov
adc
sub
xor
cli
cmp
test
sbbl
adcl
mov
sub
or
lds
sbb
in
jb
mov
aas
lar
dec
pop
es
lds
mov
fnop
adc
loopne
repz
xor
gs
mov
xor
repz
ss
leave
adc
and
dec
fisttpll
push
aad
jb
mov
dec
push
push
xchg
mov
xchg
jmp
popf
push
jae
lahf
pop
js
inc
div
jbe
xor
or
sbb
dec
les
outsb
mull
xorb
clc
xchg
push
fwait
lock
cwtl
punpckhwd
mov
movsb
mov
bound
mov
push
push
int3
ror
popa
cmc
fs
imulb
sub
xchg
sarb
push
xchg
push
and
or
mov
icebp
or
ficoml
ss
lods
in
and
sahf
psrlq
jo
jns
add
mov
pop
cs
mov
sub
outsl
xor
inc
xor
cmp
scas
xor
insb
fidivrs
mov
mulb
jb
outsl
cwtl
and
cmc
dec
pop
cmpsl
mov
iret
xor
stos
adc
int
ja
fcomps
push
daa
lock
jg
dec
push
or
or
rcrb
pop
jno
and
xchg
pop
push
sbb
jb
outsb
add
pop
pop
imul
out
stos
adc
in
mov
aad
adc
test
fiaddl
push
ss
arpl
sub
ja
loopne
dec
or
outsl
jle
and
mov
addr16
mov
sbb
mov
jp
jl
inc
sub
arpl
or
test
add
pop
enter
jle
repnz
xchg
je
cmc
xor
aad
cmp
mov
sub
pop
sbb
pop
jne
mov
sbb
push
into
pop
push
fwait
adc
iret
fwait
dec
sbb
and
test
outsl
inc
cmc
jecxz
xchg
push
jns
subl
push
sbb
jae
cmp
pop
adc
hlt
push
dec
daa
lret
stos
adc
or
rolb
mov
in
fwait
pop
shll
xor
push
jns
push
cmc
xchg
jbe
idivl
fdivrl
push
mov
je
lcall
pushf
test
sbb
cmpsb
mov
cmc
push
xchg
dec
imul
xchg
push
int3
sub
sub
call
data16
fcomps
pop
jge
add
shl
rorb
jns
aam
loopne
and
push
sbb
sbb
mull
xor
sub
xchg
ret
ror
imull
pop
in
adc
popf
mul
and
or
mov
xchg
push
fdiv
out
mov
dec
mov
pop
pop
xchg
lret
cmp
fcoms
or
sbb
dec
rcr
sub
pop
cmp
cmp
stos
mov
dec
test
inc
sub
test
cmpsl
loope
or
xchg
sub
pop
add
shr
jl
or
xor
push
fstp
cmp
xor
cmc
pop
pop
sub
or
adc
mov
sub
lods
divl
outsb
cmp
stc
dec
mov
mov
add
imul
imul
cmpl
jnp
es
daa
add
inc
in
addl
fcmove
pop
cld
lods
insl
das
sbb
fcompl
imul
mov
stos
xchg
mov
add
push
sub
sahf
mov
adc
scas
insl
test
add
pop
jecxz
clc
movl
dec
adc
fisttpl
pop
mov
dec
adc
adc
ss
and
repnz
test
jge
sub
add
das
mov
fs
ror
dec
mov
jns
dec
jmp
testl
rorl
jo,pn
push
xor
leave
insb
or
ss
mov
adc
pop
xchg
mov
hlt
and
lods
jmp
sbb
sub
mov
bound
dec
das
testl
jbe
push
fucom
repnz
mov
mov
es
cmp
rcrl
jp
xor
cltd
sbb
outsl
dec
imul
mov
dec
ret
adc
popa
sbb
sbb
cmc
and
xchg
pushf
xchg
pushl
xchg
gs
push
outsb
add
imulb
les
loop
movsl
popf
or
sub
mov
lea
xchg
lods
aam
jb
add
cwtl
imul
adc
xchg
mov
jns
in
xlat
mov
test
inc
cmp
dec
push
je
inc
sbb
xlat
jle
add
out
inc
inc
pop
mov
mov
and
adc
jb
sbb
mov
mov
mov
jb
sbb
mov
xor
call
dec
pusha
and
dec
adc
inc
dec
add
mov
mov
es
pop
jne
push
jbe
push
out
in
sub
sbb
and
xchg
scas
dec
pop
lret
mov
sahf
or
push
ljmp
pextrw
xor
rcl
jne
xchg
push
dec
sub
sbb
hlt
or
push
xor
into
outsl
lcall
les
jne
xchg
sbb
xorl
push
mov
cmp
xor
out
sbb
mov
jecxz
xchg
into
loop
movsb
sub
push
push
mov
xchg
sub
ret
xchg
cmp
test
repz
jb
jp
sub
xlat
sub
and
ja
ret
popa
push
movsb
cld
mov
adc
lea
inc
cld
xchg
push
loope
jl
jmp
mov
jl
cltd
pop
dec
lea
outsb
and
ja
scas
repnz
fwait
and
int3
ret
mov
xchg
or
popa
jnp
fs
push
arpl
movsb
jge
add
sub
ds
divb
test
xor
stc
jae
xchg
and
jg
in
fisubrl
or
mov
es
std
cmpsl
das
dec
or
xor
inc
lods
loope
testb
jne
cltd
mov
out
xchg
or
fsub
cmp
xor
push
stc
push
pop
mul
daa
imul
inc
loopne
inc
mov
popf
mov
daa
cmp
push
rorb
mov
outsb
lret
sub
jnp
or
xchg
les
pop
pop
and
inc
sbb
icebp
fistpl
sarl
cmp
push
aam
sbb
pop
into
pop
iret
cmpsb
or
or
mov
movsb
aam
cmp
inc
bound
pop
push
mov
xchg
jp
sarl
icebp
push
scas
out
fs
inc
sbb
lahf
or
divb
inc
sub
mov
jno
adc
push
cmc
inc
insb
and
xlat
inc
iret
dec
ljmp
xor
fbld
jo
les
in
push
call
or
bound
out
out
aad
sub
pop
cmp
std
addr16
cmp
popf
push
daa
pop
fidivrs
andl
or
call
push
jb
push
int3
scas
subb
and
repz
sub
bnd
scas
inc
sbb
mov
jle
pop
dec
mov
popf
dec
clc
push
add
jl
xor
jge
adc
push
push
imull
mov
test
rcrb
stc
pop
cmp
mov
outsb
xchg
loop
cmpsl
pushf
cmp
sbb
mov
aad
sbb
mov
push
pop
jp
das
sbb
pop
push
in
jl
add
dec
lret
stc
sub
mov
xchg
insb
mov
imul
or
pop
mov
mov
inc
dec
sub
pop
mov
add
out
rcrb
push
movsb
jle
cmp
mov
sbb
aas
movb
call
insb
nop
mov
out
movsl
mov
arpl
pop
or
jge,pt
inc
inc
push
sub
ret
into
inc
lds
mov
imul
or
sbb
mov
rorl
lea
mov
inc
jne
aaa
adc
iret
inc
xor
popf
movntps
or
negb
add
loopne
mov
adc
cvtpi2ps
xchg
jmp
inc
or
cmc
stc
and
pop
cwtl
movsl
lahf
fisttps
or
adc
mov
loope
adc
pop
mov
push
ja
shll
mov
xor
pop
rcrb
sbbb
dec
repnz
leave
inc
shlb
or
push
lret
lret
mov
mov
je
dec
cmp
cli
rcll
int
and
sbb
outsl
fdivs
loope
inc
cmpb
xchg
sub
int3
mov
rcr
popf
mov
jle
call
sub
hlt
or
test
add
inc
out
xchg
push
add
je
sub
in
mov
iret
aas
repz
roll
xchg
push
push
add
adc
fcomps
sahf
sub
jno
loop
ljmp
pop
loop
cld
in
scas
inc
sbb
loop
cwtl
lea
jb
or
or
add
scas
cmp
int
cmp
cmp
xor
aas
int3
mov
jne
sbb
inc
in
push
jo
jb
shrb
lret
or
mov
push
dec
sub
imulb
call
movsl
cmp
pusha
or
xchg
push
jle
lods
mov
jg
fadds
jae
mov
dec
jns
pop
inc
ljmp
test
jnp
add
dec
add
mov
xchg
xchg
mov
mov
les
xor
outsl
fcmovnb
outsl
rorb
or
xor
dec
mov
cmpsb
ss
cwtl
xchg
mov
scas
divb
sbb
imul
fs
xor
shlb
cmp
jbe
mov
push
mov
ljmp
xchg
mov
mov
insl
mov
sbbl
sbb
mov
sti
dec
mov
add
data16
hlt
nop
call
dec
in
pusha
or
les
daa
call
jbe
in
and
add
jo
cmovp
jp
out
dec
int
bound
dec
xchg
push
mov
es
insb
clc
xchg
xchg
lret
add
xchg
xchg
nop
jmp
lcall
sub
out
shll
sbb
cmpb
std
ficomps
adc
mov
pop
fiaddl
push
mov
les
push
sbb
jecxz
negl
xchg
mov
mov
push
jne
outsb
and
mov
into
mov
pop
push
mov
test
xchg
jp
outsb
popf
fadds
repnz
cmp
loop
pop
jmp
xor
sub
cwtl
imul
push
fs
div
xchg
xor
mov
dec
xor
mov
push
mov
xor
push
xchg
out
jno
sahf
mov
push
mov
popa
cmpb
imul
push
daa
cmpsl
push
lock
cltd
push
push
sub
jns
inc
xchg
js
fs
jmp
pop
mov
pop
cld
bound
cltd
pop
scas
sbbb
push
aam
add
out
cmp
mov
inc
mov
movsb
js,pn
aas
stos
orl
jnp
dec
jl
pusha
ds
mov
ja
stc
dec
rolb
pop
ds
daa
xor
mov
outsb
fstpl
xchg
push
push
arpl
int
in
scas
call
sahf
pop
pop
dec
scas
mov
push
insb
sub
mov
mov
mov
insl
out
data16
xchg
mov
js
sub
mov
xchg
mov
push
aam
jle
loope
mov
push
inc
addr16
cmpsb
push
mov
sbbb
sti
xor
mov
int3
cmp
push
fiaddl
mov
xchg
add
call
xchg
xchg
or
dec
and
retw
adcl
and
popa
jge
stos
or
outsl
jns
sub
mov
arpl
xlat
jp
dec
mov
pop
dec
sbb
fimull
mov
and
mov
inc
sbb
shlb
dec
inc
pop
jae
sbb
movsb
je
andl
sub
fs
inc
fdivs
mov
push
aam
or
cs
pop
add
mov
mov
mov
ja
sbb
movsl
mov
sub
dec
mov
fs
inc
test
add
jge
or
xor
inc
cmp
xor
ljmp
js
xor
inc
mov
xchg
push
mov
and
jg
xchg
or
int
test
in
mov
decl
mov
pop
icebp
mov
arpl
sbb
cmp
sub
dec
lds
jb
adc
lods
xchg
inc
mov
or
push
pop
jb
and
lea
clc
int
cmc
pop
sub
pop
call
pop
jle
xchg
fldt
cmc
jl
out
mov
mov
arpl
jmp
inc
sub
add
test
aad
mov
sti
les
lock
jb
cli
pop
jbe
out
or
push
push
gs
stos
aad
fdivl
scas
movsb
push
jmp
int3
adc
scas
loopne
mov
cs
or
push
mov
xchg
mov
ja
add
push
pop
lret
mov
mov
inc
mov
fcmove
pushf
xchg
inc
sub
dec
pop
xor
andb
outsl
mov
pop
mov
cmp
aad
and
xor
push
jb
pusha
adc
pop
inc
xor
pop
fs
int3
mov
mov
sub
pop
xor
or
or
push
sub
das
lods
push
mov
lret
add
es
aam
mov
dec
adcl
es
sbb
pop
inc
test
dec
std
pushf
mov
out
pop
cmc
mov
shll
pop
pop
cwtl
cmc
scas
shl
sub
push
divb
out
lds
scas
rolb
mov
mov
out
xchg
lcall
sbb
adcb
sbb
je
addl
adc
imulb
adc
lret
sbb
aam
inc
mov
jbe
cmp
pop
jl
in
in
addr16
lahf
sbb
mov
lea
xor
ret
orl
out
and
subb
adc
cwtl
push
movsb
xchg
subb
mov
sarb
enter
fstps
xlat
xchg
or
cmc
out
mov
mov
cmp
hlt
jmp
loop
in
es
xor
pop
mov
pop
fbld
or
sub
ja
push
jle
push
test
outsl
xchg
dec
lahf
or
xchg
fdivl
idiv
in
rorl
push
xor
mov
ss
mov
xor
sbb
cmp
and
sbb
mov
sbbb
lods
push
std
aad
orb
fsubs
repnz
lret
pop
out
pop
fldcw
mov
pop
add
fwait
mov
sbb
cld
inc
jl
movl
out
or
mov
mov
cmp
insb
sbb
xchg
test
mov
data16
mov
out
ficoml
mov
cmc
call
and
sub
and
test
xchg
imul
push
aas
dec
adc
cmc
fwait
cmp
xchg
or
mov
mov
inc
pop
sbb
sbb
dec
das
cmc
imul
sub
sbb
test
and
xchg
aas
dec
fs
ss
cmpsb
movsb
outsl
and
push
sbb
cmp
sub
xlat
push
adc
xchg
fbld
jmp
or
in
push
repz
sti
std
insb
adc
and
imull
jge
jbe
adc
adc
out
aam
jno
mov
cmp
ja
in
fidivrs
idiv
and
xor
pop
scas
mov
repz
rclb
and
xor
fs
and
insb
jnp
in
sub
mov
xor
push
popf
and
jbe
mov
cmpsl
and
jb
sub
in
sub
les
jle
and
sub
jne
xlat
outsl
jmp
lret
loop
data16
int
idivb
xor
mov
mov
cwtl
addr16
in
xlat
cmp
adcl
cmc
cmp
in
push
ret
jo
cmpb
inc
out
stos
icebp
xor
insb
mov
jne
xor
push
mov
sahf
push
pop
and
into
out
incb
xor
jb
sarl
or
and
mov
mov
out
test
leave
sub
cmp
or
aad
and
push
cmc
inc
xlat
cld
dec
adc
rcrb
dec
inc
lcall
popf
test
push
aaa
inc
lcall
fstpt
clc
ss
adc
aam
mov
sub
jg
xor
ds
xchg
in
test
cmp
mov
jge
in
mov
ljmp
lcall
mov
je
sti
loop
fs
dec
sub
les
pop
insb
push
mov
mov
jp
movsl
xor
push
dec
jmp
mov
adc
in
jbe
xor
push
iret
inc
sbb
push
ss
cmc
adc
push
stos
pop
xchg
iret
mov
sub
jno
adc
mov
pop
je
fadds
les
shll
push
lods
mov
hlt
jmp
outsb
xchg
aad
pusha
pop
push
pop
mov
aaa
notb
inc
sbb
test
add
loope
jle
and
out
rorl
and
addr16
xchg
inc
je
push
or
pop
lds
lds
aas
jge
add
adc
mov
add
fs
lds
faddl
lret
mov
add
call
jmp
loop
pusha
cld
and
aad
test
loop
lods
mov
ljmp
pop
dec
inc
fwait
push
push
cwtl
inc
adc
js
int3
push
mov
and
test
test
and
and
cs
pop
xchg
les
rcrb
shrl
jo
les
stos
xchg
push
mov
popf
jg
movsl
loope
jno
add
pop
xor
stos
in
jns
shll
add
dec
mov
arpl
test
dec
and
mov
jge
lea
pop
inc
dec
xorb
sub
add
fmul
mov
or
lods
dec
enter
int3
xchg
sbb
test
cmp
xlat
loope
inc
sub
leave
outsb
mov
ret
aaa
cmp
cwtl
test
mov
hlt
je
iret
lock
add
fldt
push
test
add
xchg
jmp
cmpsb
addr16
iret
dec
jmp
sbb
es
sub
xchg
or
sbb
test
lods
xchg
jno
fs
pop
inc
push
xchg
dec
adc
mov
jg
pop
out
inc
ficomps
add
mov
enter
xchg
das
popf
jge
and
sahf
pop
jbe
ret
cld
sti
arpl
xchg
int
mov
xchg
xor
cmp
scas
mov
fwait
or
jns
or
and
loopne
lods
mov
xchg
push
leave
mov
xchg
mov
xor
popa
jp
sarl
aas
rclb
sbb
scas
inc
or
sti
lcall
popa
sahf
mov
pop
cmp
loopne
jns
sti
push
add
dec
loope
repz
dec
faddl
out
pop
mov
sbb
in
insl
mov
mov
mov
stc
add
mov
push
je
sub
jmp
pop
decb
gs
jmp
mov
cmp
cmpsl
iret
out
mov
sarb
sbb
sbb
pop
cmp
pop
dec
lcall
pop
lret
dec
xor
mov
frstor
mov
out
into
mov
dec
jnp
scas
mov
jnp
pop
bound
daa
imul
mov
popf
in
pop
mov
adc
gs
out
mov
push
jb
push
add
in
and
jbe
cli
mov
mov
sbb
popa
leave
sbb
mov
add
xchg
repnz
rcr
insl
lcall
mov
mov
inc
outsb
jg
push
push
out
jnp
call
jl
mov
cs
mov
out
mov
imul
jnp
jmp
or
gs
mov
addr16
mov
and
sbb
jg
repnz
iret
out
adc
jle
or
gs
out
push
aaa
add
mov
push
mov
dec
aam
dec
rorb
ljmp
or
test
dec
frstor
sub
andnps
sbb
cmp
ds
addr16
xchg
inc
push
and
sbb
xor
orl
into
aam
ffreep
adc
test
dec
loop
imul
jmp
dec
or
fs
cmc
inc
and
dec
jns
jb
adc
outsl
inc
mov
xchg
cmc
clc
dec
mov
fisttpl
sub
adc
or
xor
and
jae
test
xchg
scas
lock
jb
lahf
cmp
mov
add
mov
adc
inc
ret
sub
loopne
jno
xchg
xchg
aaa
and
sub
add
in
in
sahf
or
es
lds
test
imul
cmp
aas
in
dec
cmp
or
shl
or
jg
pop
inc
ja
in
ja
pop
ja
mov
jp
rcrl
loope
aad
dec
sbb
pop
shl
add
fcmovnb
inc
test
out
outsl
xchg
lcall
push
inc
sbb
js
adc
adc
mov
aaa
mov
mov
rcll
fistpll
push
lcall
adc
jb
ja
lds
adc
pop
mov
mov
jo
push
xchg
ljmp
movsb
mov
mov
mov
mov
add
cmpsb
das
dec
int
int3
in
mov
adc
stos
xchg
out
push
cmp
dec
push
adc
testl
mov
jmp
inc
int
andb
cmpsb
dec
cmp
lods
mov
cmp
sub
ret
mov
loope
dec
ljmp
aaa
dec
fcompl
call
dec
cltd
sbb
scas
mov
adc
mov
or
mov
cmp
in
sub
in
inc
test
and
dec
mov
dec
jo
cld
mov
sub
ds
xchg
sti
push
pop
test
mov
movsl
mov
push
mov
jge
inc
add
or
into
cmp
sbb
fistps
int
negl
and
insl
push
sarb
mov
icebp
dec
mov
sub
pop
mov
push
xor
mov
cmpsl
pop
nop
mov
movsb
mov
cmp
xchg
cmpsl
mov
std
in
dec
push
loope
jne
fnstsw
inc
and
pop
push
dec
jnp
sub
or
mov
pop
mov
lea
mov
lcall
mov
and
mov
xchg
xchg
sub
ret
ffreep
int
or
cmp
and
dec
aam
into
lahf
cli
sub
mov
dec
roll
lods
mov
addb
int
sbb
insb
inc
nop
sub
push
sbb
insl
pop
push
aaa
mov
shrb
xor
dec
in
inc
fsub
dec
jmp
jmp
mov
mov
or
pop
mov
repz
testb
push
in
xchg
pop
insl
or
lock
jb
mov
or
adc
sbb
xchg
imul
sahf
vpaddb
in
mov
into
or
add
push
xor
push
loop
das
xchg
or
sbb
mov
imul
mov
mov
mov
mov
cwtl
sahf
xchg
xor
int
push
or
and
fsubs
les
push
and
into
sub
add
fmulp
into
or
mov
incb
push
or
add
loop
out
stos
xor
adc
les
incl
inc
cmp
mov
shrl
paddd
daa
mov
dec
push
dec
xchg
fs
jecxz
aaa
insl
lods
arpl
add
into
lock
fimuls
rorl
or
test
rcr
addr16
push
mov
ss
lret
aaa
sbb
stos
into
xchg
mov
cwtl
sbb
inc
xor
jp
scas
mov
inc
xor
jecxz
scas
stos
lcall
fwait
jns
adc
push
loop
lods
push
mov
xchg
sub
mov
prefetch
out
sbb
jge
push
sbb
pop
insw
mov
scas
fsubl
xchg
fsubrl
mov
shlb
xor
jmp
aad
fnstsw
inc
fnstcw
mov
push
ss
dec
pop
xor
daa
cwtl
je
cmp
cmc
aaa
sub
add
add
imul
xchg
mov
xlat
mov
add
adc
pop
push
dec
stos
js
gs
sub
fdivrs
movl
mov
jmp
imul
aas
ds
mov
aaa
sub
outsl
pop
insl
inc
inc
mov
inc
mov
xchg
add
xchg
lock
rcl
add
call
mov
lret
adc
fwait
mov
ret
push
fstpt
mov
jl
aaa
jle
fisubl
scas
sub
fs
fisubl
fwait
mov
in
das
leave
in
fdivs
jp
insb
out
test
subb
lock
mov
loop
xor
xchg
dec
sub
dec
pop
jle
sub
pop
pop
mov
add
sub
out
in
pop
shlb
cwtl
push
pop
in
lock
scas
inc
xchg
mov
mov
stc
pushf
xor
ret
dec
aam
pop
jg
add
sub
push
js
mov
repz
xorb
arpl
in
xchg
or
inc
mov
and
neg
pop
nop
sbb
lahf
lods
movsl
adc
sbb
repz
mov
and
pop
iret
lahf
or
mov
xlat
inc
and
arpl
cmpsb
test
in
adc
jp
rcr
push
jo
jns
or
xor
lock
insb
mov
and
sub
xlat
stos
iret
iret
mov
pop
jns
cmp
or
pushw
sbb
mov
mov
mov
movsb
mov
pop
cmp
and
mov
out
cwtl
scas
mov
push
gs
cmp
pop
negl
sub
stos
mov
xchg
sarb
mov
popfw
jecxz
cmp
jb
inc
cmp
addr16
and
and
mov
mov
push
loope
into
sub
divb
jle
mov
mov
or
push
lahf
stc
lea
cmp
rorl
or
rcrw
movsb
add
inc
dec
sbb
jge
sbb
pop
cli
mov
cmpl
inc
aas
mov
cmc
xor
enter
mov
mov
aad
add
stos
lret
dec
pop
lahf
or
mov
fsubrs
pop
out
jnp
and
pop
xor
ret
dec
lock
lret
ds
bsf
fwait
popa
sbb
cmp
push
inc
fisubs
test
jle
rcr
ret
test
daa
enter
cld
xchg
adc
xorb
shrb
repnz
xor
nop
shrb
test
inc
inc
xchg
mov
sub
incl
xchg
popa
mull
jb
mov
pop
mov
push
int3
sub
xor
pop
outsl
mov
lea
sbb
sarl
test
mov
fsubrl
insl
xchg
arpl
lahf
out
sub
outsl
std
sub
call
sahf
sub
cmp
xor
pop
cmp
mov
fmul
push
outsb
shlb
jmp
fwait
pop
cmp
mov
jae
andb
mov
dec
js
dec
inc
repnz
popf
fs
jmp
dec
daa
push
xchg
ret
mov
in
cmp
mov
and
fisubl
shl
dec
jb
push
cmc
movsl
xchg
iret
divl
dec
push
or
jg
sti
hlt
xchg
test
cli
movsb
mov
fs
decl
xchg
dec
arpl
cmp
xchg
mov
ja
int3
lea
sbb
aaa
add
jae
dec
mov
or
pop
ljmp
push
icebp
in
outsb
xchg
dec
xchg
push
sub
pop
inc
jne
or
adc
cmp
sbb
push
les
mov
add
and
test
jbe
stos
insb
jmp
scas
enter
dec
andl
test
push
ja
mov
int3
cltd
call
into
push
fildll
stos
rcrb
jno
push
les
adc
pop
inc
cmp
xor
jo
xlat
cld
push
cs
into
fcompl
outsl
sarl
scas
adc
mov
je
outsl
stos
pop
repnz
addr16
sub
fs
iret
outsb
rorl
pop
pusha
imul
push
push
pop
jnp
push
fbstp
ljmp
mov
mov
cmpsl
hlt
jl
repnz
cmpl
lret
sti
mov
addr16
pushf
sub
mov
into
test
insb
pop
popa
fnstsw
aad
int
gs
and
adc
sub
or
inc
pushf
in
popa
pop
mov
jg
aas
mov
subl
and
mov
cmp
adc
sahf
sahf
ljmp
arpl
inc
sbb
es
pop
loop
stos
test
outsl
ficomps
sbb
dec
rol
sub
mov
adc
imul
and
push
and
sbb
push
lds
ss
sub
add
inc
fs
push
bnd
jle
adc
iret
loopne
add
popl
mov
jo
add
dec
shlb
push
js
movsl
dec
pop
dec
jno
loop
js
pusha
jge
or
cmp
pop
push
icebp
out
test
push
jmp
invd
hlt
movsl
fcmovnu
dec
dec
xlat
pop
or
mov
jp
fcoml
inc
aad
xor
dec
aas
xor
lret
sbb
in
psraw
or
xor
hlt
cmp
dec
add
mov
cmp
pop
jno
jp
outsb
xchg
fmull
dec
sub
sbb
test
cmpsb
lods
cmp
jne
decb
pop
orl
dec
and
sub
leave
pop
jo
scas
push
arpl
ds
out
mov
push
adcb
rcll
mov
cld
sbb
inc
add
pop
inc
scas
gs
inc
outsb
push
xchg
xor
fists
adc
outsl
mov
add
xchg
add
shr
sub
add
xor
jmp
loop
adc
xor
pop
clc
xchg
xor
sbb
repnz
jp
and
and
and
movsb
adc
daa
lds
ret
jmp
push
ljmp
fsubrs
xchg
and
repnz
jge
lret
lret
mov
cs
loop
xchg
and
mov
xchg
inc
andl
mov
mov
add
fwait
sbb
loop
mov
lret
or
cli
dec
fisubrl
loop
sub
fistpl
xchg
xchg
ret
jbe
add
mov
xchg
xchg
mov
in
or
int3
scas
push
jmp
fdivl
lea
cmp
out
je
clc
inc
mov
test
xchg
les
das
mov
ljmp
mov
test
call
push
or
cmp
pushf
lds
outsb
iret
jb
je
inc
cmpsl
push
xchg
mov
fldt
mov
push
call
popl
mov
ds
add
daa
pop
imul
ret
cli
xlat
out
mov
fldenv
sbb
push
arpl
das
or
xchg
jle
aaa
or
sub
pop
sbb
add
pop
sbb
sbb
inc
inc
fcoml
stos
popf
jmp
aad
imul
mov
sub
xorb
jnp
pop
scas
mov
hlt
lret
outsb
adc
xchg
sbbl
ds
xchg
dec
inc
sub
test
inc
or
int3
mov
dec
cmp
fs
add
repz
cmp
lahf
jecxz
out
int
and
cs
mov
push
mov
testb
jne
nop
and
push
lahf
mov
loope
mov
mov
pop
in
dec
xor
bound
sbb
cwtl
pop
in
orb
leave
xlat
lds
inc
mov
push
je
sub
jno
add
lods
enter
cmp
aam
lods
mov
dec
jbe
js
jbe
sbb
imul
jecxz
push
sahf
sbb
hlt
decl
xchg
sbb
xchg
jae
sub
sub
adc
lea
xor
pop
jb
sub
or
loop
xchg
sub
or
dec
les
in
pusha
adc
loopne
jp
jnp
or
mov
movb
testb
cwtl
xlat
decl
imul
dec
add
in
xor
adc
jne
ret
arpl
int3
pop
in
jo
popa
mov
dec
pop
adc
out
inc
cli
mov
out
js
cwtl
mov
mov
sbb
inc
sub
int
jns
dec
sarl
mov
xchg
repnz
jg
mov
xor
adc
mov
stos
ja
sbb
shrl
loope
mull
adc
mov
jbe
stos
aaa
clc
arpl
and
fbld
and
xor
cmp
nop
mov
lret
mov
int3
add
daa
xor
notb
iret
xor
pop
sub
push
movsl
or
push
out
cwtl
add
cmp
pushf
in
sbb
pop
cltd
dec
sub
and
fstps
dec
sub
cli
jnp
cmpsl
sbbl
inc
xchg
push
dec
cli
insb
sti
gs
ja
adc
scas
cltd
adc
cli
lock
lods
out
sbb
cmpsl
cmpb
cmp
gs
jmp
dec
pop
sbb
scas
xchg
aam
out
out
push
pop
cld
aam
inc
fisubrs
pushf
sbb
mov
clc
les
outsb
scas
idivb
jp
pushf
lock
cwtl
mov
mov
icebp
aaa
xchg
lock
jns
jl
cmpb
das
mov
shrl
sbb
sub
jle
outsl
jge
ror
push
ja
sbbb
mull
roll
je
js
pop
fucom
test
jmp
cwtl
loopne
in
dec
push
je
add
xchg
cmpsb
jl
out
sbb
imul
sbb
adc
pop
sbb
dec
in
mov
test
andb
add
out
xor
clc
add
inc
pop
in
add
and
out
or
les
or
jmp
mov
mov
xor
inc
lods
pop
jl
lods
push
in
and
jb
inc
lods
sub
nop
push
mov
hlt
ljmp
lcall
mov
or
imul
mov
adc
repz
in
addl
cmp
cmp
or
cmc
xlat
mov
sarb
jmp
xor
ficompl
push
aaa
mov
mov
lods
lock
cli
sub
adc
dec
xor
add
into
rclb
inc
or
xlat
subb
lock
xor
and
out
shr
out
and
mov
clc
cs
xlat
sti
lcall
inc
shufps
fsts
push
fsub
ret
scas
pop
cmp
sbb
xor
or
frstor
test
das
dec
ret
cmp
sarl
aaa
lret
jns
xor
dec
ds
arpl
adc
das
js
and
and
lcall
pop
inc
xor
int3
cmpsb
sub
sbb
jecxz
or
lret
sub
shlb
lea
jmp
and
or
jmp
inc
mov
adc
dec
lcall
push
jae
into
and
sti
sti
xor
xchg
sbb
jb
insb
sub
dec
loope
adc
hlt
lods
push
cmp
dec
xor
test
fabs
inc
loope
adc
int3
call
nop
fiaddl
rol
and
fcoms
xchg
dec
jbe
jge
fld
test
sahf
decl
push
loope
and
or
lahf
cmp
and
add
hlt
xchg
push
mov
or
mov
push
mov
shrb
dec
cmp
pop
sbb
sub
and
ret
imul
icebp
scas
sub
shlb
adc
push
inc
es
fwait
adc
xorb
mov
inc
sbb
mov
jns
fwait
orw
lcall
push
iret
adc
lret
mov
jae
insb
cmp
or
out
mov
cmp
je
mov
dec
push
mov
mov
jne
je
pop
outsb
mov
and
roll
dec
push
mov
inc
lock
mov
mov
push
jns
dec
pop
in
inc
adc
pop
loop
sbb
mov
scas
movsb
mov
daa
rolb
mov
push
jno
cs
je
in
cwtl
adc
dec
roll
pop
pop
xor
leave
pop
jb
stos
in
cld
roll
gs
mov
scas
gs
outsb
fimull
add
inc
fwait
jg
insb
outsb
ja
mov
adc
shl
int
mov
stos
mov
jg
xchg
call
jnp
mov
lret
xor
adc
sti
add
movb
cld
insb
add
xchg
nop
or
icebp
test
cmc
lret
enter
pop
xlat
pop
aaa
stc
dec
aas
out
das
frstor
jmp
ja
xor
test
and
xor
mov
imulb
mov
dec
dec
lcall
icebp
mov
jnp
ud2
into
rcll
arpl
int3
mov
sbb
sbb
leave
xor
sbb
jmp
mov
imul
fcmovne
mov
or
push
movsl
out
push
mov
stc
fistpll
or
outsb
jnp
popf
nop
out
in
jecxz
push
les
cmpsb
sbb
test
sub
push
into
fs
mov
aam
xor
dec
mov
push
cmpsl
pop
in
push
iret
daa
sbb
mov
clc
sbb
push
ss
sub
btr
mov
sahf
or
jnp
cmp
add
fdiv
pushf
jg
xor
and
cmp
sbb
sub
sti
mov
aad
xchg
pop
repnz
or
out
lods
icebp
sub
andb
mov
addr16
sub
sub
add
test
jbe
addl
roll
stc
xlat
ljmp
cmp
aam
xorb
xchg
add
mov
cmpsb
sbb
inc
cmp
inc
push
mulb
jnp
in
mov
inc
subb
out
add
lds
pop
fadds
pop
jp
xchg
out
loopne
cmpb
push
mov
pop
in
notl
or
dec
mov
cmp
lcall
pop
pop
push
es
into
pop
popa
xchg
call
push
shrb
cmp
in
pop
clc
adc
mov
cmp
sub
push
lahf
xchg
dec
mov
into
xorl
lret
aad
setne
ret
dec
imul
imul
pop
xchg
testb
loope
or
cmpsb
xchg
push
or
pop
ret
cmpsb
shl
fs
test
jl
sbb
lock
sub
loop
mov
xor
cmp
fucomip
roll
enter
out
subb
pop
repz
or
fiadds
or
call
outsl
sbbl
xchg
mov
mov
push
xchg
add
test
jbe
adc
or
mov
jecxz
adc
fldt
outsl
sbb
sub
lock
push
push
outsl
addr16
icebp
cltd
cs
dec
hlt
insl
divb
push
pop
mov
jge
sub
dec
out
popf
sub
add
sub
in
jp
dec
xchg
subl
pop
push
xchg
jne
cmp
jle
subl
fidivrl
movsb
add
nop
stos
adc
aam
dec
push
cmpl
mov
ljmp
jmp
lret
inc
push
push
and
cmpsb
sub
xchg
hlt
cmp
das
cld
lods
insl
scas
iret
sub
xchg
test
push
mov
mov
sahf
mov
sahf
inc
mov
mov
imul
adc
or
and
loop
lock
ret
fbstp
push
fbstp
aas
cmp
pop
push
sub
test
jb
les
fsubrp
ficompl
scas
and
insb
je
rcrl
insb
cmpsb
mov
jns
lcall
sar
icebp
int
stos
jo
outsl
jno
fistps
mov
imul
andl
jno
add
sbb
stos
jae
icebp
fadd
test
ret
xorl
outsb
fimull
push
ljmp
mov
jg
inc
jbe
pop
sub
push
mov
aad
adc
or
jmp
xor
add
jns
loope
ret
or
es
rcrb
mov
xor
inc
inc
inc
mov
add
inc
add
mov
xlat
pop
sub
pop
leave
in
cmp
ret
inc
push
jl
movntps
test
cltd
pop
mov
fadds
loope
call
jp
aad
adc
and
or
mov
out
pop
push
lds
fdivl
in
jno
adcb
adc
iret
mov
add
aas
xchg
push
std
adcb
jecxz
outsl
pushw
xchg
test
cmp
mov
add
lret
std
and
rcrl
mov
sbb
popa
mov
rolb
dec
aad
dec
cmp
mov
daa
and
or
fildll
cmc
ss
fucomip
mov
dec
hlt
repz
stos
aam
inc
or
mov
inc
mov
jp
add
sti
insl
xor
dec
sarl
imul
or
inc
fmul
pop
out
fiadds
cmp
dec
mov
sarb
gs
aam
enter
push
inc
inc
cld
push
fidivl
push
sti
cmp
movsb
or
inc
jmp
jae
jle
jge
sahf
aam
mov
sub
xor
rorl
rolb
mov
cmc
cmp
and
lahf
and
lods
pop
aad
jb
lods
xor
outsl
hlt
lods
inc
sub
mov
idivb
or
jecxz
adc
xor
or
jnp
mov
out
mov
addb
andl
gs
mov
test
loope
dec
xor
mov
jmp
addl
in
cs
mov
movsl
pop
fistpl
cmp
cmp
arpl
inc
iret
mov
ja
icebp
loope
jo
lods
mov
mov
mov
mull
pop
aad
roll
pop
pusha
push
das
fadds
cmp
inc
scas
lea
pop
adc
mov
int3
outsb
mov
cltd
ret
lds
push
xchg
sarb
or
mov
mov
shll
pop
enter
imul
jl
mov
in
pop
pop
dec
pop
mov
aas
mov
loopne
ds
cltd
jns
mov
lods
sbb
adc
jae
stc
aaa
cmp
sbb
pop
lcall
gs
inc
and
and
and
popf
not
repz
in
addr16
pop
xor
add
icebp
aam
push
int3
or
fmull
sbb
loopne
jmp
clc
dec
mov
push
mov
pop
ret
or
fstl
enter
leave
jno
mov
and
fcoms
ficoml
mov
daa
or
pushf
rol
pusha
lret
adc
pop
std
xchg
subb
adc
es
add
cli
push
jecxz
mov
and
pusha
or
xchg
int
or
mov
dec
pop
int3
jecxz
inc
mov
stos
sub
dec
clc
xor
xchg
xchg
jge
test
push
pusha
mov
loopne
inc
mov
movsl
in
repz
flds
mov
mov
dec
outsb
ret
lcall
pop
ret
mov
adc
sbb
jae
push
xchg
cmp
mul
push
xchg
test
imul
sbb
adc
out
out
ret
and
int3
fxch
add
stos
mov
xchg
lcall
inc
jne
je
call
add
jmp
jg
jle
push
enter
out
sbb
lret
xor
sub
push
test
jns
jb
adcl
hlt
out
in
sub
and
pop
std
popa
pushf
sub
mov
test
add
ja
ss
movsb
mov
lock
mov
dec
fcomps
pop
lods
xchg
add
pop
test
out
mov
jge
and
cltd
jo
out
push
cld
xor
mov
test
repz
mov
leave
jbe
mov
rorl
xchg
jle
cmpsl
push
xchg
xor
fs
movsl
shlb
pop
sbb
inc
add
pop
add
rclb
das
insl
inc
ret
mov
test
movsl
test
jb
out
mov
enter
ja
shlb
loopne
push
xchg
dec
and
push
adc
push
hlt
push
xorl
je
dec
xor
sbb
cli
dec
stc
mov
cmp
jns
adc
cmpsb
insb
cmpl
ret
sub
xor
aad
movsl
jl
cmp
mov
insl
addr16
mov
outsl
lea
popa
cwtl
mov
or
cmp
dec
lcall
test
cmp
or
push
rcl
dec
inc
push
out
fdivr
mov
icebp
mov
fs
aaa
incb
imul
dec
fdivl
xchg
and
popa
inc
mov
sahf
add
adc
in
mov
test
lretw
adc
push
mov
xchg
xchg
ret
pop
mov
pop
hlt
adc
dec
popf
xor
push
xchg
xor
sub
popa
andl
iret
xor
mov
jnp
icebp
pop
adc
mov
and
enter
xchg
mov
je
fsubrl
scas
push
add
dec
add
int
or
mov
rcrl
cwtl
inc
cmp
xor
xchg
mov
call
sub
aas
sub
push
xor
cmp
lods
aas
mov
rorb
loop
inc
jae
or
xchg
jno
test
jl
sub
aam
cli
je
pop
cld
test
lea
bound
mov
cmp
xor
mov
and
lahf
jp
iret
xchg
fstl
test
pusha
and
xor
jo
jge
mov
orl
push
leave
jb
daa
push
loope
push
push
xchg
dec
mov
mov
jo
sub
mov
xchg
rorb
cmp
xor
cltd
push
aaa
mov
cld
or
bound
fisubrl
das
cs
lock
loope
repnz
lea
xor
in
movsb
mov
jae
push
ja
pushf
adc
aad
dec
mov
dec
sub
loop
test
outsb
pusha
jge
mov
fisttpl
mov
fldcw
test
xor
cs
aas
mov
ret
add
repnz
mov
or
xchg
fidivl
dec
repz
fs
lret
leave
cmpsb
lret
jecxz
push
cmp
nop
dec
rcr
es
dec
dec
push
push
mov
mov
inc
xor
daa
fwait
outsb
cmp
add
mov
mov
push
inc
repz
sbb
imul
fisubrl
hlt
mov
jle
sbb
or
adc
pop
mov
clc
add
xchg
andl
hlt
xchg
lret
inc
sub
jae
lea
movsb
aam
jae
test
repz
aad
pop
faddl
or
es
ret
inc
iret
outsl
sub
stc
push
call
cmpsl
and
or
cmp
add
cmp
xlat
ss
pushf
mov
inc
js
mov
lret
andl
push
and
jmp
fadds
je
xor
scas
pop
lds
ficompl
ljmp
xchg
mov
mov
mov
hlt
lret
dec
iret
fsubs
mov
call
outsb
data16
xchg
dec
rcrb
lcall
push
sub
popf
mov
pop
or
dec
xchg
or
fidivs
xor
rcl
nop
fisubrl
dec
sarb
enter
sbb
mov
aad
sub
in
or
sub
xchg
sub
add
mov
sub
fbstp
fst
sbb
fidivrl
insb
faddp
and
jl
jns
shr
xlat
dec
cmp
cmp
gs
cmpsb
mov
dec
sarb
pop
test
lds
pop
stos
push
and
fs
out
decl
movsl
data16
dec
cmp
loopne
rcrb
ret
lods
push
xchg
jge
mov
cltd
or
sub
aaa
movsb
xchg
test
mov
push
mov
test
add
add
test
imul
aaa
in
pop
dec
dec
shrl
or
lock
cmp
add
in
ret
out
mov
test
ja
ljmp
cmp
jmp
sarl
cltd
test
sbb
xchg
mov
mov
cmp
inc
push
cltd
sbb
cltd
mov
jmp
mov
fnstenv
cmpsl
fptan
lret
andb
ficoms
add
stos
add
sar
les
sub
hlt
shll
loop
fidivs
dec
xor
repz
inc
mov
imul
and
imul
dec
mov
out
adc
cmp
cmc
jle
push
xchg
jb
cmpsl
pop
pop
mov
xchg
aaa
add
jo
xchg
cmp
lret
dec
push
dec
cvtps2pi
out
sbb
testb
mov
pop
test
jl
sub
cmp
cmp
stos
sbb
inc
xchg
in
into
lret
dec
cltd
xor
mov
mov
mov
in
test
sbb
filds
jmp
add
daa
sub
out
pop
mov
test
das
mov
clc
mov
div
lock
push
jmp
imul
arpl
inc
and
insl
inc
add
add
adc
inc
jne
push
pop
push
enter
in
pop
mov
mov
stc
xchg
mov
dec
mov
adc
sahf
sub
out
and
xchg
xor
push
jmp
push
dec
fidivrs
push
push
mov
loop
fwait
inc
out
mov
inc
inc
jp
imul
loope
add
sarl
mov
iret
paddb
adc
cmp
arpl
pop
leave
iret
pop
adc
in
ret
stos
sbb
scas
mov
arpl
lods
cs
lahf
mov
test
in
xor
test
xor
push
jle
int
xchg
cld
jo
loopne
cmpsl
leave
xchg
mov
mov
lock
fistpll
push
sahf
mov
mov
cmpl
jmp
repz
lahf
xor
add
xchg
push
std
call
movsl
cltd
imul
push
push
stc
jo
mov
pop
mov
push
aad
dec
sub
or
sbb
cli
jp
jo
inc
and
xchg
xor
cltd
mov
xchg
aam
fs
repnz
stos
cmp
shl
scas
dec
fstp
in
inc
push
lret
test
and
sbb
scas
repz
xchg
imul
xchg
popf
lds
xor
pop
xchg
aaa
dec
and
sub
mov
jno
popf
mov
psllw
xchg
inc
push
pop
jge
hlt
push
push
test
xor
add
push
int
cmpsb
sahf
sbb
dec
lock
sbb
jns
dec
mov
cmp
fs
fadd
scas
movsb
test
out
push
and
sbb
sbb
jo
sub
lahf
sti
jbe
sbb
inc
jnp
push
lock
int
push
in
ficoml
xor
push
loope
adc
push
xor
mov
inc
das
mov
mov
jo
xchg
mov
xchg
ljmp
mov
subl
pop
or
sbb
rol
push
addb
push
call
inc
or
movsb
xor
mov
ret
cmpsb
lcall
jo
lahf
out
out
adc
js
mov
xchg
sub
add
adc
mov
roll
pop
sub
sub
sbb
sbb
mov
std
dec
jb
dec
in
lahf
mov
imul
jb
add
push
daa
int3
das
mov
ja
jmp
test
mov
fdivs
loope
fwait
xchg
out
stos
test
cmp
and
xchg
fnsave
mov
xchg
jns
loope
push
arpl
data16
sbb
sub
mov
addb
mov
aaa
cmp
out
lahf
sbb
outsb
inc
adc
out
jmp
mov
mov
lock
adc
mov
dec
sbb
or
das
fbstp
mov
sub
xchg
mov
jecxz
jae
bound
and
or
lcall
sbbb
mov
add
cld
xchg
add
aaa
call
cmp
cmc
js
rorl
testb
jns
pop
cmp
jg
out
cltd
xchg
sub
mov
les
scas
xchg
inc
jl
jae
and
xchg
mov
dec
xor
jno
leave
mov
fnstcw
hlt
loop
les
push
jle
fiaddl
or
in
mov
lods
mov
or
xchg
dec
cmc
mulb
dec
sub
add
sarb
addb
push
es
pop
fdivrl
xchg
xchg
push
sarb
pop
nop
add
add
stos
ja
sub
push
jnp
xchg
xlat
into
testb
shlb
dec
jl
sub
movsl
dec
jb
jnp
je
push
stc
mov
xchg
lahf
sbb
rorb
adc
mov
cmp
subl
les
pop
aad
jg
mov
mov
cmp
xlat
sbb
stos
fcmovu
outsl
es
repz
sbb
inc
add
sub
pop
ss
adc
mov
call
sbb
ret
jge
imull
push
imul
jecxz
fstps
lock
sbb
jmp
scas
cmp
and
pusha
xchg
in
dec
and
dec
or
jo
adc
adc
jp
inc
pop
jecxz
push
ljmp
lds
shll
inc
add
xchg
sbb
test
xchg
movsl
jns
or
push
inc
andb
push
xchg
jns
out
call
mov
xchg
sbb
pop
cmpsb
xchg
sub
inc
ja
aas
insb
sbbb
inc
push
and
cmp
addr16
div
pop
test
imul
push
imul
jb
imul
addr16
negl
mov
pop
repnz
mov
imul
pusha
pusha
clc
xlat
test
aad
inc
push
test
sbb
or
jp
jge
jb
fcmovne
adcl
pop
stc
test
ffree
ds
jno
add
mov
pop
sbb
jg
or
in
inc
cmpl
mov
and
movsl
push
jecxz
aas
mov
rol
fisttpll
iret
adc
out
sbb
mov
test
cmc
mov
ret
push
and
dec
jb
pushf
inc
push
sbbb
add
and
shll
pop
xchg
fwait
mov
pop
pop
pop
enter
stos
sub
pushf
and
cmp
imul
mov
test
push
out
add
sarl
mov
sub
je
fldcw
push
mov
fucomi
outsl
enter
test
stos
scas
into
push
sub
insl
lods
in
dec
stc
add
push
aam
incb
pop
bound
mov
xchg
fadds
repz
inc
mov
mov
rol
add
dec
jg
cmp
fcoms
mov
mov
pop
push
cltd
pop
sarb
cmp
adc
ja
into
ljmp
dec
jo
mov
sti
push
les
inc
insb
movsl
mov
loop
jmp
adc
dec
fiadds
and
das
loop
push
mov
mov
push
inc
pop
sub
cli
icebp
fisttpl
int3
ret
mov
pop
mov
sbb
or
into
std
jbe
push
mov
out
dec
or
mov
repnz
mov
test
push
dec
out
int3
mov
movsl
jge
mov
enter
sbb
je
jmp
clc
mov
jbe
xlat
in
jbe
movsb
out
cmp
data16
ljmp
movsl
push
out
mulb
fwait
cmpb
stos
xchg
pop
jmp
mov
mov
pop
inc
popf
hlt
mov
inc
mov
cmpsb
scas
lods
and
mov
xchg
lahf
sub
xor
scas
rol
inc
pop
das
fwait
imul
or
xor
sub
dec
inc
push
bound
mov
xchg
inc
pop
das
and
sbb
lcall
mov
es
push
cmp
dec
jb
lret
jb
imul
push
sub
mov
movsb
idivb
xchg
aaa
lret
adc
leave
lcall
out
add
mov
xchg
lea
stc
fs
sub
xor
js
or
addr16
pop
jmp
pushl
xlat
outsl
jge
cs
fwait
out
mov
sub
shrl
jns
out
call
stc
out
int3
xchg
lret
aaa
repz
sub
stos
jbe
notb
hlt
iret
adc
pushf
jnp
out
inc
push
push
jmp
cmp
jnp
add
jl
push
xor
or
mov
cmc
int
aaa
bound
outsl
js
mov
lods
inc
test
mov
or
jns
iret
push
mov
outsl
mov
mov
xchg
aad
aam
insb
es
or
cmpl
inc
test
loopne
sbb
ret
ljmp
push
sub
jb
push
mov
popf
xchg
in
or
fldenv
jmp
mov
sbb
mov
push
pop
das
mov
clc
mov
out
aas
daa
outsb
mov
es
cmp
xchg
mov
push
loop
xchg
pop
stos
ret
sub
cmp
mov
push
inc
xchg
pop
subb
mov
inc
inc
mov
fdivrs
push
scas
jmp
jae
ret
test
and
scas
mov
movb
push
push
dec
fcmovbe
ljmp
mov
clc
sbb
sbb
imul
movsl
mov
xchg
aad
test
loop
fisubrs
cld
inc
adc
or
dec
loop
and
bound
ja
sub
sub
shrb
mov
dec
ffree
dec
or
push
add
shl
fs
or
into
cmp
out
sub
pop
stos
clc
data16
mov
data16
mov
popa
cmp
mov
pop
add
push
mov
ss
lods
sub
scas
inc
dec
push
test
or
faddl
sub
rcrl
imul
mov
outsl
pop
push
into
mov
loopne
insl
dec
pop
je
or
sbb
loopne
mov
or
xor
notb
pop
loopne
repz
inc
hlt
sbb
shlb
inc
orl
inc
adc
leave
sarl
push
jl
shrl
xchg
mov
xor
pop
mov
fdivrl
xchg
jg
jae
sahf
fdivrs
lods
add
rcrl
add
scas
pop
jmp
xchg
add
shrb
pop
mov
test
inc
sub
or
xor
cmc
add
ret
sbb
test
roll
pop
push
xchg
test
movsb
or
cmp
stos
xchg
test
popf
dec
jo
insl
hlt
cmpsb
cmp
jae
xchg
jbe
hlt
test
aad
jle
fsubl
and
add
sbb
pusha
or
push
mov
dec
pop
cmc
dec
stc
inc
int3
shl
xchg
xchg
xor
push
fistl
repz
push
or
mov
mov
and
mov
test
inc
pusha
and
pop
and
mov
orl
add
clc
out
fnstsw
mov
push
icebp
jb
adc
add
sub
mov
xchg
or
leave
mov
out
lods
test
adc
pop
pop
sbb
out
push
jae
clc
add
xchg
fdivrl
xchg
ds
push
mov
xor
or
andl
mov
cmp
mov
lods
mov
nop
or
lcall
addr16
pop
xor
sbb
mov
orb
clc
imul
decb
mov
mov
cmp
inc
mov
jae
mov
adc
in
add
mov
sbb
jnp
sub
mov
rorb
jg
ret
popa
jecxz
sbb
dec
in
jb
mov
xor
push
xchg
mov
inc
insb
fisubrl
inc
stc
pop
data16
fildl
ret
inc
mov
loope
and
pusha
sub
ds
adc
xchg
sar
pop
addr16
popa
adc
push
sub
and
rcrb
mov
imul
sbb
xchg
fsubl
test
inc
pop
mov
xor
xchg
enter
loop
fmul
push
lods
mov
popf
outsb
sub
xchg
out
xlat
inc
and
xchg
mov
test
cmp
in
mov
add
sub
cmp
gs
scas
or
in
xchg
test
stos
rcrb
les
cmp
push
call
enter
xchg
sub
add
pusha
mov
inc
or
pop
insl
push
xlat
push
inc
inc
inc
push
or
out
mov
movsl
add
mov
imul
or
mov
xlat
popl
fisubrl
dec
dec
scas
out
sub
enter
mov
aad
mov
xchg
stos
inc
ret
inc
dec
jmp
push
dec
inc
popa
aam
xor
mov
lcall
shll
lods
out
pushf
cltd
mov
inc
inc
push
jmp
pop
lea
inc
cmp
aad
clc
dec
push
jnp
sub
adcl
insb
or
out
xchg
insl
ss
iret
dec
ficomps
enter
xchg
sub
mov
sub
mov
orl
mov
dec
dec
mov
fstp
int3
xchg
mov
xchg
mov
call
pop
sub
std
xchg
popf
inc
push
scas
cmpsb
movsb
sub
dec
lea
ljmp
mov
fisttps
or
push
pop
ss
ds
mov
stos
and
adc
les
push
sarb
inc
push
lods
loope
test
cmp
cmpb
inc
arpl
stos
xor
adc
std
rclb
mov
xchg
inc
pop
imul
push
sarl
and
inc
jle
jge
addb
xchg
test
sbb
mov
addr16
xlat
std
cwtl
clc
cwtl
fildll
ss
cmp
xor
es
pop
and
lret
mov
mov
aam
xor
movnti
or
mov
cli
sbb
rcrl
mov
ret
pop
clc
arpl
jmp
sub
adc
sbb
test
pop
sub
cmp
push
les
cmc
negb
pushf
or
int
mov
push
mov
and
insl
loop
push
push
cmp
lds
xor
call
sti
jl
test
sbb
sub
push
jl
icebp
or
ret
int
push
inc
mov
pop
mov
fiaddl
and
push
push
sub
fwait
and
xor
inc
mov
in
cmp
in
shrl
xchg
mov
xor
xchg
xchg
add
dec
insb
fisttpll
mov
in
negl
xor
xchg
movsb
fldlg2
enter
inc
repz
sbb
popa
xor
jl
cmc
fmull
xor
je
jge
pop
leave
lret
mov
mov
loopne
mov
in
repz
xchg
stc
sub
repnz
xor
mov
sarb
jg
jo
or
icebp
xchg
push
mov
std
sbb
jo
cmc
xor
mov
xchg
or
aam
loop
push
enter
jnp
in
pop
fwait
stos
mov
test
sub
rcl
inc
ret
pop
pop
pop
subl
inc
add
or
leave
jle
xor
push
adc
mov
add
enter
jno
lds
jae
pop
hlt
mov
out
cmpsb
rcll
pop
ret
cld
cmp
movsl
jge
rcrl
jge
push
lods
stos
mov
xchg
mov
jb
mov
mov
inc
push
jle
loopne
stc
pop
mov
add
pop
pop
arpl
std
add
add
adc
out
xchg
cmpsl
movb
xlat
sbb
xchg
add
out
imul
mov
fincstp
mov
mov
sub
lods
test
inc
repnz
push
test
jnp
xlat
decl
sti
in
cmpsb
jg
in
sub
fs
cld
mov
fmuls
mov
push
sbb
push
mov
dec
je
ret
ljmp
roll
jno
mov
punpcklwd
test
push
sbb
mov
cmpsb
ljmp
jl
repnz
mov
sbb
inc
std
int3
lods
lods
sbb
mov
mov
push
or
xor
fs
pop
cmp
or
bound
xchg
cmp
lods
xor
mov
cmp
cmp
mov
pop
sbb
and
std
outsl
fsub
nop
data16
or
push
or
and
icebp
sti
or
shlb
pop
add
repz
bound
cmp
pushf
add
push
out
adc
or
sbb
mov
adcl
scas
ja
adc
dec
call
inc
xchg
nop
push
sub
cmp
push
pop
mov
or
out
out
orl
jno
cmp
or
testl
push
mov
xchg
cmp
inc
inc
popf
or
mov
xchg
mov
jns
call
mov
xor
sbb
mov
or
popf
mov
in
ds
bound
mov
mov
pop
jmp
dec
aad
jb
iret
xor
dec
loop
sbbl
cmp
scas
jo
xor
inc
dec
repnz
xchg
mov
daa
jecxz
jge
mov
sub
cmp
mull
aam
testl
jbe
shr
aaa
lcall
push
fcmovb
les
enter
push
jb
push
cmp
jb
ss
pop
jno
lds
push
fs
nop
jg
nop
cmpb
test
and
mov
pop
xchg
jl
jge
shl
add
stos
pushaw
aam
pusha
push
cli
push
jne
bound
shll
cld
add
sbb
adc
cmpsb
or
scas
icebp
jge
and
stc
xchg
aad
lret
adc
test
push
subb
andl
stos
in
inc
mov
mov
ret
cli
push
inc
jb
jmp
pop
add
adc
inc
fcoml
pop
pop
or
jmp
jb
in
fbld
lret
popf
sbb
sbb
jecxz
fisubl
repz
inc
dec
mov
push
xor
mov
push
inc
out
sub
lods
fstp
push
out
sub
loop
rcrb
inc
gs
mull
push
sbb
aad
sarb
adc
or
inc
dec
xor
cmp
sbb
imul
pop
fwait
mov
push
in
adc
int
repz
mov
inc
push
test
dec
scas
imul
jl
mov
sbb
or
stc
sarb
pop
popf
or
clc
mov
pop
ds
and
stc
pushf
js
aad
adc
or
jo
pop
pop
xor
and
sbb
sub
fs
adc
fistpl
mov
mov
or
cmpsl
pop
xchg
data16
mov
sub
insl
and
or
popa
adc
scas
fmul
jg
int3
sbb
xor
inc
hlt
loopne
push
insl
imul
xor
xor
inc
ds
popf
mov
cwtl
scas
adc
sub
aas
stc
mov
in
loopne
cmp
aaa
std
dec
cmp
in
pop
sub
in
rorl
shl
push
push
mov
xchg
push
push
movb
cmp
loope
gs
jl
icebp
pusha
jle
sbb
sub
or
pop
hlt
cmpsl
icebp
mov
add
xlat
pop
xchg
stos
add
and
outsb
inc
leave
mov
dec
aaa
cs
push
cld
in
test
add
loopne
pusha
mov
mov
or
mov
push
mov
jmp
xchg
fiaddl
pushf
and
pop
dec
mov
adcl
sarl
nop
xchg
jp
int3
sub
dec
inc
call
xchg
or
repz
dec
pop
dec
xchg
testb
mov
and
pop
dec
pop
in
mov
stc
xchg
addr16
imul
pop
outsl
cmovns
js
mov
fimull
stc
pop
push
out
aam
iret
or
mov
xchg
xchg
daa
jno
aaa
mov
jb
in
sahf
inc
mov
cmp
call
ret
adc
push
cwtl
mov
mov
xor
dec
or
pop
stc
inc
mov
out
lahf
xor
adc
dec
and
sbb
sbbb
leave
int
mov
repnz
and
rolb
inc
call
inc
jnp
insb
lret
fwait
scas
popf
std
imul
ja
inc
and
adc
loop
or
inc
lahf
jb
repz
and
dec
test
mov
mov
inc
add
cmpsl
rcl
fists
mov
fdiv
in
lea
mov
ficomps
inc
push
cmp
push
das
pushf
pop
mov
or
addr16
dec
or
ljmp
inc
sbb
pop
push
fs
shll
jno
push
cmp
out
cmp
decl
daa
or
dec
in
push
fists
addr16
cmpsb
popf
xchg
and
fwait
movsl
filds
bound
fbld
mov
cmpsb
push
inc
mov
or
mov
dec
pushf
inc
loope
adc
jmp
cmpsl
jnp
pop
cwtl
or
sahf
lea
rolb
xlat
cld
in
popf
mov
in
pop
ret
cld
sti
adc
push
in
pop
xor
aas
ror
stos
mov
xor
sub
adc
test
jbe
sub
xchg
lods
mov
leave
je
scas
or
cmp
cmp
cmp
in
xlat
hlt
ljmp
pop
lret
pop
gs
mov
fwait
pusha
sbb
ret
imul
movsw
cmc
orb
ja
dec
andl
rorl
out
pop
add
ds
inc
jle
sti
inc
fidivs
outsl
push
pop
dec
xor
imul
out
clc
roll
push
int3
xchg
movsb
cwtl
and
pop
loope
shr
cli
pop
cmp
das
iret
rclb
dec
fs
add
mov
in
loope
add
jmp
in
ret
pop
pushf
mov
xchg
out
jo
pop
cli
out
mov
imul
fidivl
sbb
scas
add
mov
imul
xchg
fcomip
fildl
out
jge
lds
xchg
loopne
dec
fmuls
sbb
inc
test
push
dec
push
cmp
jmp
fnstenv
outsb
xchg
sub
sbb
xchg
icebp
sub
or
push
adcb
inc
sti
enter
jae
push
in
push
outsb
cmp
fwait
aaa
dec
test
aad
jae
arpl
jne
jo
pop
rcl
loop
loop
mov
cmp
loope
int
stos
js
mov
ja
push
dec
cmp
pop
dec
sub
outsl
lods
or
fisubrl
mov
inc
push
xchg
pop
add
and
loopne
in
in
cmp
imul
fildl
cmp
dec
fs
mov
sbb
mov
shlb
aad
aaa
sbb
pop
mov
inc
mov
cmp
dec
mov
pop
addb
xor
jmp
sub
xchg
xor
leave
adc
out
pop
dec
cmp
adc
sbb
mov
addr16
xlat
enterw
sub
outsl
cltd
adc
js
outsl
jmp
push
out
mov
adc
xchg
lret
test
add
test
mov
loopne
lret
popf
iret
pop
or
les
mov
imul
dec
xor
cmpsb
dec
xchg
adc
fldenv
rorl
loop
xlat
test
dec
aas
in
cmp
out
push
data16
sub
push
or
xchg
adc
imul
pop
sub
lds
fs
pop
push
fdivrp
fists
mov
mov
aas
pusha
xchg
imulb
cmp
fildl
push
jb
inc
lock
sahf
loopne
bound
sbb
outsb
in
movsb
push
fst
and
or
mov
clc
aas
adc
sbb
mov
mov
cs
xor
and
mov
test
pop
nop
jbe
mov
or
inc
and
jno
leave
out
adcl
jp
rclb
insl
popf
mov
push
push
shll
push
fwait
movsl
xor
pushl
sub
dec
sbb
xchg
cs
or
jmp
jge
sarl
xchg
dec
xor
inc
arpl
push
sti
fisubs
fcoml
sahf
insl
imul
ja
inc
jge
negl
js
jp
xor
int
and
data16
cltd
ja
jg
bound
mov
lret
stc
mov
lret
mov
xor
mov
cltd
xchg
arpl
lcall
aas
nop
out
ficompl
les
in
xchg
pop
addr16
mov
jle
aad
cmpsb
or
pop
pop
ficomps
inc
pushf
jbe
sub
inc
int3
outsb
fsubs
lods
sti
cmp
jge
fcompl
packsswb
in
push
into
lahf
add
movsb
adc
or
test
xor
cmp
mov
test
rcr
sub
mov
out
mov
push
mov
lcall
loop
and
inc
dec
push
hlt
xchg
jg
rcr
inc
in
jp
int
or
inc
movsl
add
jl
jg
fcmovu
int
andb
imul
adc
fcoms
popf
lods
xchg
sbb
add
pusha
pop
int3
outsl
ljmp
cld
fdivs
lret
jne
int3
xchg
and
icebp
ret
sbb
imul
push
sbb
test
cmp
fadd
js,pt
roll
mov
ds
lfs
sub
xchg
xchg
dec
rorl
daa
xchg
jmp
jbe
mov
imul
fwait
xchg
fldenv
mov
cld
cld
and
lods
stc
cmc
outsl
push
addr16
and
jl
pop
cmp
outsl
mov
loope
frstor
mov
push
test
push
lret
loop
add
and
pop
and
in
and
int
pop
mov
mov
bound
cmc
incb
fstl
dec
mov
icebp
xchg
imul
rol
inc
loop
push
jnp
sti
lret
mov
sbb
dec
lret
nop
adc
jo
push
fs
nop
int
mov
cmpsl
mov
mov
pop
xchg
insb
std
dec
lcall
sub
ficoms
lods
push
lret
xor
cli
add
scas
sbb
addr16
loopne
dec
das
push
pop
ret
pop
mov
das
add
fcmovne
xor
fstpt
inc
xchg
sbb
sub
test
xor
mov
inc
push
imul
int3
mov
imul
je
popa
lock
xor
xchg
jns
cmp
jl
insl
inc
pop
stos
jno
insb
gs
scas
fwait
mov
jmp
inc
dec
out
and
xchg
loop
out
jecxz
add
xor
mov
ja
jp
aaa
push
dec
mov
inc
arpl
push
repnz
ss
sub
mov
insl
aaa
xor
jle
xor
lods
inc
adc
cs
ret
sahf
jge
lods
mov
mov
pop
mov
push
jbe
mov
add
mov
mov
sbb
in
arpl
fs
sub
jle
dec
and
aam
mov
push
xchg
out
lea
jle
ljmp
dec
fnstenv
shlb
xor
lcall
incl
rcr
push
push
arpl
cmp
daa
rorb
out
and
js
jp
idiv
pop
jl
sahf
sbb
push
push
pop
outsl
outsb
jl
and
cmp
repz
xchg
fldt
jg
jge
flds
ror
and
jmp
mov
inc
or
sub
and
adc
movsb
jp
fildl
outsl
mov
pushf
pop
add
sbb
or
xchg
adc
cli
mov
popf
fbstp
pusha
pushf
xor
fsts
push
sub
xchg
rorb
imul
jne
lret
out
sub
inc
fwait
cmp
pop
std
and
pop
xor
jl
mov
dec
fs
outsb
mov
cltd
and
xor
scas
mov
cmc
pop
push
jae
repz
mov
ja
push
lret
xchg
xchg
lock
aam
fiadds
data16
mov
xchg
push
jnp
push
movsl
loopne
popa
jle
xchg
fwait
push
dec
fcoms
arpl
and
fnsave
ret
mov
shl
jo
jo
sub
push
outsl
lea
insb
stos
lds
mov
test
xchg
lock
sbb
movb
pusha
add
sub
ds
xchg
or
adc
cmp
push
lock
mov
scas
push
add
xchg
push
adc
cld
xor
push
fdivl
pop
iret
int
repz
mov
repz
pop
jbe
es
mov
popf
pop
pop
and
shl
loop
cmpsl
lret
pop
popa
cmp
es
dec
test
mov
stos
aaa
mov
xchg
cmp
cmc
mov
arpl
cmpsb
jle
pop
movsl
icebp
dec
push
mov
push
call
jbe
test
dec
dec
mov
pop
jns
lahf
xor
shr
stc
xor
or
clc
filds
and
jg
pop
out
pushw
cmp
sbb
cmpsl
int
pusha
clc
rcl
inc
leave
movsb
adc
jecxz
popa
mov
in
sub
sbb
cmp
sub
js
push
mov
or
pop
add
insb
mov
jbe
and
test
fisubl
cwtl
inc
fsubrl
mov
sbbl
cmp
mov
xor
cmp
popa
add
mov
pushf
adc
adc
lods
cwtl
xlat
insb
out
cmc
jne
test
icebp
addr16
fstp
cld
pop
mov
xchg
sbb
pop
out
fimull
add
rorl
fisubrl
push
push
gs
or
hlt
test
xchg
arpl
push
mov
jmp
inc
js
mov
stc
and
sbb
pop
jecxz
repnz
bound
xor
fcomi
andb
stc
pushf
or
mov
cmc
sub
sub
ss
out
out
xchg
sahf
pop
xchg
ret
fs
je
ss
xchg
push
pop
cltd
scas
test
inc
push
jecxz
push
loope
ss
sbb
popa
push
sbb
notb
push
mov
jbe
loop
popf
mov
mov
loope
xor
xchg
cmc
mov
inc
daa
sub
lcall
adc
inc
pusha
jp
fs
cmp
ss
not
inc
jb
inc
lods
xor
mov
int
cmp
bswap
cltd
cmp
aam
push
imull
sbb
ljmp
mov
jg
nop
ja
xchg
call
xor
mov
fs
push
and
jmp
cmpb
inc
movsb
and
bnd
les
add
xchg
out
push
mov
lods
pop
push
jo
dec
out
shrb
jecxz
xor
arpl
aad
int3
xor
and
xchg
fwait
xchg
cltd
imul
or
adc
jecxz
andl
into
xchg
movzwl
or
movsl
pop
mov
and
pop
popa
cmpsb
imul
push
mov
sub
and
js
aam
sbb
nop
js
cmp
mov
lret
pusha
and
aad
jecxz
pop
add
flds
xchg
stc
pop
dec
repz
inc
jnp
movsl
and
stc
pop
fcom
add
mov
pop
lret
mov
dec
mov
js
add
fstl
lock
sub
iret
cmpsl
mov
lods
cmp
pop
add
pop
push
mov
loope
scas
mov
and
xorb
icebp
cmc
pusha
mov
dec
rcl
push
mov
adc
dec
pop
xchg
add
sti
or
xor
and
or
inc
sub
int
mov
fdivrs
mov
loope
mov
das
sarb
add
fimuls
mov
jl
test
mov
inc
jne
and
dec
dec
ja
insb
nop
jns
scas
mov
stc
pop
popa
mov
das
neg
push
cmpsl
out
and
and
pushf
pushf
in
xchg
mov
jge
insb
adc
xchg
mov
orl
pushf
or
lods
inc
divb
dec
and
adc
cs
adcb
icebp
out
push
pushl
xchg
or
pop
hlt
pop
gs
ja
mov
jnp
movsl
adc
mov
sbb
xor
xor
into
ja
and
xor
repz
xchg
pop
push
pop
mov
es
pop
test
pop
or
inc
mov
hlt
lret
xchg
insb
out
mov
test
test
push
xchg
rcrb
mov
and
jno
mov
mov
rcll
adc
dec
dec
outsl
jbe
adc
movsb
aad
adc
sub
pop
les
or
dec
js
mov
imul
sub
out
cltd
mov
aaa
mov
jbe
mov
hlt
lds
notl
xor
leave
out
stc
test
mov
inc
xor
es
and
lret
dec
jne
lods
out
jo
pop
cmp
push
mov
mov
jle
jno
xchg
fwait
jl
mov
xor
push
push
adc
xor
sbbl
or
sahf
xor
inc
movsl
dec
rorl
pop
mov
xchg
in
add
test
cwtl
cmp
movsbl
jnp
sahf
push
xchg
aaa
add
push
mov
xor
push
or
ret
mov
int3
mov
out
mov
fnstenv
add
movsl
cmpsl
fs
sarb
xchg
mov
sub
loop
sbb
mov
fistl
dec
rcl
int3
jbe
fwait
sbb
lret
sarb
push
pop
cmp
xor
add
je
outsl
sub
sbb
sbbl
jecxz
jb
scas
aam
push
das
dec
fcmovne
repz
xor
push
shrb
inc
mov
add
lea
xchg
add
popa
pop
mov
xchg
fs
sub
test
sbb
int
jle
lock
shrb
loop
addb
es
inc
lock
testb
fptan
mov
jae
inc
cmp
icebp
mov
jp
ds
dec
jp
mov
test
rcll
cs
ficoms
pushf
repz
test
fs
sahf
cwtl
loopne
adc
sub
mov
or
and
push
stos
ds
shld
lret
pusha
inc
push
jle
pusha
and
ja
mov
cltd
out
movsl
xchg
sarb
cwtl
cs
inc
add
sub
sub
inc
loopne
repnz
insl
in
inc
add
in
add
pop
scas
test
bound
aam
inc
ret
push
std
pop
sbb
scas
pop
das
or
lock
push
adc
adc
and
das
shlb
mov
sbb
lret
scas
ficomps
inc
loope
push
lea
stos
pusha
jg
xor
pop
sti
loope
in
jle
sub
in
jmp
enter
enter
mov
cmpsl
push
mov
mov
xchg
or
sub
adc
out
outsl
mov
in
int
lcall
shlb
xchg
lods
cmc
aas
fimull
dec
and
push
lods
jbe
mov
xor
jbe
adc
movsb
push
mov
insb
and
js
push
adc
rclb
daa
xchg
pop
push
stos
ljmp
mov
cmp
xchg
jge
adc
adc
lahf
adc
sbb
push
shll
scas
mov
ret
stos
push
idivb
push
leave
sub
pusha
in
lock
fsubl
lods
jno
jp
bound
dec
mov
mov
loop
jp
and
lcall
mov
aad
adc
add
xchg
dec
jno
jnp
ret
or
mov
xchg
or
cmovo
mov
andb
jae
xchg
test
cld
inc
or
xor
mov
movb
mov
les
add
sub
ds
push
and
js
and
mov
lods
subl
test
stc
orb
cmp
jns
out
clc
xor
add
into
adc
push
lock
in
xor
sub
mov
out
out
ficompl
jmp
jmp
es
pop
xor
int3
dec
xor
mov
pop
hlt
negl
dec
add
cmpsb
adc
dec
mov
xchg
adc
pushf
int3
cmp
in
cmp
jmp
and
mov
popf
fs
sahf
or
mov
cmp
dec
cld
xchg
les
mov
fidivs
sbb
cs
jae
test
inc
ds
out
push
fldcw
mov
incb
mov
das
mov
int
jmp
jp
xchg
int
lcall
pop
adc
inc
test
xchg
xor
ja
mov
loope
adc
dec
lds
mov
mov
daa
push
cmp
fmull
cmc
outsl
xor
push
mov
fs
inc
sub
loop
fcoml
sbb
lahf
dec
add
shlb
pusha
add
loope
in
inc
je
push
or
sahf
test
dec
mov
shlb
pop
js
adc
sbb
shrl
loopne
sarb
push
sbb
cmpsb
mov
push
or
dec
mov
pop
sub
mov
jp
jg
jo
jp
mov
mov
fsubl
mov
fcoml
inc
mov
sub
cmpsb
or
rclb
test
leave
enter
pusha
push
pop
nop
sbb
lcall
mov
inc
add
es
push
in
push
sbb
xchg
adc
mov
lods
cltd
xchg
inc
dec
add
fildll
out
icebp
clc
jmp
jo
iret
jmp
sti
in
cld
sbb
jne
mov
or
pop
aam
mov
mov
or
lds
fdivrl
adc
loope
pushf
and
pop
mov
ret
outsb
cmpsl
cmc
sub
jbe
icebp
pushf
xor
icebp
mov
jno
mov
xchg
lret
hlt
aam
pop
shrb
push
orl
inc
popa
mov
adc
imul
push
leave
outsl
xor
orb
loop
inc
mov
and
sbb
jbe
pop
mov
rclb
aaa
out
sub
push
xlat
mov
sbb
jb
test
ljmp
rcll
test
jns
movsl
cmpb
fdivl
notb
sbb
fs
int
rorl
sbb
stc
lods
xchg
loope
into
inc
lods
jmp
dec
xor
or
imul
mov
add
xor
and
cmp
mov
ret
xor
nop
out
mov
xor
inc
jle
mov
insb
inc
outsb
mov
jmp
sub
push
jns
pop
jmp
sub
inc
int
inc
sahf
cwtl
jg
push
ficompl
mov
ja
mov
push
js
cmpsl
nop
jnp
cmp
pop
sbb
lahf
aad
stos
cmp
dec
fidivl
inc
mov
stos
push
cmp
jns
enter
notl
iret
aas
or
xchg
sub
es
in
push
mov
or
lods
mov
mov
pop
addr16
test
movsb
push
test
mov
push
aad
xchg
hlt
movsb
outsl
cld
and
inc
sarl
dec
adc
xor
loope
repz
rol
stc
add
ss
and
mov
pusha
mov
adc
lcall
jecxz
sub
aad
jne
xchg
aam
jns
jae
mov
jecxz
xchg
push
lret
push
aam
outsb
xor
notb
aad
sbb
insb
mov
popa
fldt
xor
loop
sub
or
mov
lea
ret
outsl
cmp
mov
jecxz
fisttpll
dec
stos
mov
pop
fisubl
mov
xchg
popf
dec
arpl
cmp
rcrl
inc
push
add
cwtl
test
or
xchg
xor
dec
imul
jae
nop
mov
js
pop
add
cltd
sti
jmp
sbb
stos
inc
or
data16
sbb
cmpsb
outsb
cmpsb
outsl
pop
lret
add
pusha
inc
enter
loopne
leave
mov
shrb
add
jmp
cmpsb
jmp
xchg
jmp
test
imul
imul
sbb
fs
insl
jno
and
test
ret
cltd
icebp
inc
fdivrl
scas
mov
js
mov
js
in
inc
sbb
lods
sub
pop
sar
test
cmpsb
xchg
adc
jno
test
sbb
sarb
and
cmpsb
cmp
test
dec
icebp
cmp
pop
int3
lods
cmp
shrb
inc
adc
icebp
aas
cmpsb
xchg
xchg
jp
aam
jle
add
xchg
or
shlb
jecxz
or
xchg
addr16
pop
ret
es
test
xchg
mov
test
aam
pop
lods
and
and
xchg
mov
frstor
sub
xor
lods
xchg
or
xor
or
sub
mov
mov
jl
cwtl
lret
or
jo
xchg
adc
inc
adc
aam
loop
lock
aas
push
fxam
cmp
loop
into
lret
stos
mov
orl
adc
imull
dec
xor
insb
daa
cmp
jno
fidivrs
aaa
scas
sbb
dec
adc
push
imul
jnp
fmuls
mov
js
sbb
cmp
mov
cltd
cwtl
fsubrp
rolb
aaa
jbe
sbb
xorl
ret
push
mov
movsl
cmp
adc
popa
in
or
xchg
inc
pop
les
jo
negb
mov
or
mov
dec
enter
sub
rcrl
int3
cmpsb
mov
xor
ja
mov
and
push
ret
cmpsl
sub
outsl
es
or
jecxz
data16
cmp
iret
lahf
jge
out
clc
jno
cmp
mov
mov
sbb
or
push
add
fstpl
loop
das
scas
sbb
dec
rorb
cmp
and
movsb
fwait
pop
xor
cli
inc
push
pop
popf
ja
dec
mov
xchg
push
ss
lds
popl
stos
pop
push
sahf
into
lods
mov
in
aas
clc
test
or
cmp
xchg
push
mov
mov
dec
imul
push
add
in
mov
lea
sub
stos
mov
outsl
dec
push
aaa
pop
push
cmpl
rcl
gs
jns
into
adc
add
movsl
jmp
insb
lret
mov
inc
loopne
mov
add
add
bound
jbe
or
inc
xor
adc
pusha
pop
insb
aad
add
pop
lds
xchg
cli
push
cwtl
mov
sbb
fmuls
daa
lcall
loope
sbb
jle
adc
outsb
adc
jmp
lds
pop
add
daa
fst
dec
inc
bound
mov
mov
inc
pop
outsl
or
dec
aaa
sbb
adc
sub
cwtl
es
mov
cmp
xor
inc
nop
gs
cli
arpl
cs
repz
je
aad
insb
sub
data16
into
lods
or
mov
mov
ja
dec
sbb
popa
mov
rcrb
out
pushf
or
xorb
sbb
and
adc
mov
pop
xchg
sarl
cwtl
gs
sub
dec
or
or
mov
movsb
stc
int3
ret
incl
in
or
scas
stos
pop
adc
mov
mov
into
movsl
mov
add
mov
add
mov
inc
sub
incl
out
mov
insl
adc
out
pop
in
cltd
in
orb
dec
mov
addr16
ja
aaa
push
lahf
sbb
lret
in
adc
outsl
mov
ror
ret
cs
clc
orl
xchg
jo
sbb
out
movsb
push
jno
in
ss
fbstp
jmp
dec
mov
pushf
jno
les
inc
cmp
dec
fiadds
mov
dec
pop
xor
pop
hlt
mov
cli
xor
pusha
rcl
shll
mov
push
js
lods
xor
cwtl
insl
mov
out
jmp
jno
js
add
jo
and
inc
rcll
aaa
inc
and
push
mov
sbbl
ret
mov
jae
jnp
inc
mov
cmpsl
pop
sub
cs
or
loop
fnstsw
lds
sarl
stos
pop
mov
jne
ret
mov
repnz
sub
mov
xchg
cmp
aas
sub
shl
push
mov
dec
out
pop
add
and
add
out
add
sub
or
and
test
mov
sbb
sub
jae
mov
sub
shrb
or
push
bound
dec
dec
xor
fistps
jl
loopne
jge
int3
cmp
cmp
jp
fidivrl
lret
mov
je
pop
rclb
and
sub
mov
out
pushf
xor
in
mov
in
xchg
aad
lock
pusha
cmp
jp
inc
sbb
movsl
aas
xchg
pop
popf
or
iret
push
ljmp
lret
pop
test
in
mov
cmpsl
xorb
rorb
cmp
clc
sbb
jle
daa
or
dec
pop
mov
das
fdivrs
lods
movsl
shlb
gs
mov
dec
dec
jmp
or
loope
push
js
fdivrl
cwtl
pop
and
jle
stos
gs
fdiv
cmp
dec
mov
mov
sub
or
push
jnp
ret
or
inc
jb
xchg
lcall
sbb
lahf
xchg
and
inc
lds
dec
push
mov
gs
in
jmp
stc
adc
sti
or
dec
out
inc
sub
enter
sahf
pop
sub
aas
ret
dec
jo
lcall
xor
test
adc
jle
insl
xchg
out
jbe
add
jmp
fsubl
add
lret
outsl
mov
mov
repnz
mov
pop
call
clc
push
pop
sbb
ja
jns
cli
popf
fs
add
rcr
cli
fs
lds
das
jmp
pop
test
fmul
xchg
insb
inc
scas
sub
mov
sti
xchg
addr16
adc
fstps
shlb
xchg
call
pop
mov
leave
or
mov
or
inc
jne
repz
jnp
push
sub
sub
cld
or
add
lret
hlt
add
scas
int3
rcrl
push
or
mov
push
sti
fwait
aaa
sbb
pop
mov
cltd
daa
push
dec
scas
mov
add
mov
mov
repnz
xchg
mov
inc
xchg
je
xchg
loope
and
test
insb
mov
sbb
push
push
es
sti
and
std
xchg
mov
xchg
jg
popa
xchg
stos
aas
push
or
cmpsb
add
push
mov
stos
loop
loop
vunpcklps
jmp
xor
pop
pop
mov
insb
rolb
rolb
out
cmpsl
mov
loop
imul
mov
pop
cwtl
mov
test
jb
cmc
loopne
inc
stos
mov
pop
rorb
lret
repnz
das
xchg
sti
fisttpll
xchg
inc
pop
fwait
insl
lock
std
sbb
adc
dec
jb
cmpl
xchg
test
pop
or
cmp
pop
jmp
and
fnstsw
pop
sub
xchg
loopne
jle
add
ja
hlt
and
mov
sarb
jb
outsb
sub
aam
sub
jmp
adc
xor
push
lock
sbb
sub
pop
mov
mov
std
inc
cmp
es
add
inc
cmpsb
jnp
icebp
icebp
xor
mov
dec
cltd
adc
gs
sbb
sbb
fbld
insl
xchg
add
xor
xchg
in
iret
add
xchg
pop
lcall
notl
push
xor
sub
xchg
mov
push
testl
pop
jle
push
movsl
mov
mov
pop
mov
test
cmp
cmp
loopne
sahf
add
mov
sti
repnz
jge
movsb
jg
popa
mov
std
fs
jne
or
adc
pop
mov
jns
xchg
sarl
jnp
xchg
hlt
loopne
stc
push
ds
dec
cmp
nop
ret
clc
fadd
enter
mov
aaa
fwait
or
inc
fmuls
test
and
test
push
xor
aaa
dec
lods
mov
cmp
in
sub
sub
stc
push
hlt
push
jne
sarb
cmp
outsl
insl
testb
outsl
sub
inc
jb
dec
fbstp
call
inc
jns
data16
sbb
inc
inc
mov
ja
mov
mov
divb
xor
or
dec
cld
out
inc
aam
fwait
mov
sub
je
mov
mov
jp
cli
push
fwait
jae
lods
adc
js
mov
or
dec
leave
jge
push
mov
dec
pop
inc
adc
xlat
test
sub
cwtl
cmpsb
mov
ljmp
mov
jge
out
fmull
pop
dec
mov
in
int3
mov
xlat
or
mov
rclb
xor
mov
test
imul
lock
mov
sar
push
nop
mov
fisubl
and
scas
jb
sub
fdivs
jl
jle
inc
addb
dec
adc
fnsave
push
push
fsubrl
push
and
push
xchg
mov
xchg
call
inc
or
fiadds
std
jp
test
imul
or
ret
fdivl
sub
push
popf
dec
push
cmp
cmpsl
sbb
test
int3
or
loopne
xor
daa
int3
jae
in
adc
jmp
les
mov
jb
repnz
cli
fsub
sub
addr16
jecxz
dec
xchg
mov
stos
imulb
lock
add
adc
aad
cli
ret
insl
idivl
shrb
cs
sti
aas
pop
push
sarl
mov
dec
inc
xor
pop
sub
fs
int3
inc
rcrb
xor
xor
mov
inc
stc
repnz
sarl
and
dec
jae
ret
inc
aaa
int
mov
mov
sub
div
mov
imul
rorl
xchg
iret
mov
and
add
xchg
inc
add
pop
adc
pop
enter
out
push
cs
nop
cmc
lods
mov
or
sbb
lcall
pop
pop
jle
std
dec
lcall
sbb
mov
sbbl
sar
xor
js
loop
int3
incl
insb
cmp
xor
es
imul
shl
insb
xor
pop
xor
or
jnp
fists
pushf
add
mov
adc
lahf
nop
xor
mov
test
cltd
pop
cld
mov
cmp
out
cmpsb
adc
pop
idivl
imul
je
lds
push
add
insl
mov
pop
pop
rcl
push
subl
mov
cltd
mov
mov
mov
fcoml
mov
cmp
inc
negl
fidivrs
daa
outsb
pusha
cli
pop
add
push
call
pop
in
mov
nop
cld
leave
test
inc
xor
addr16
xchg
movsl
lea
and
shr
and
add
push
addr16
jno
out
imul
popf
scas
dec
stc
int3
outsl
mull
adc
mov
clc
and
or
aaa
jbe
cwtl
mov
adc
sbb
testl
xor
bound
pop
pop
xchg
insl
jo
jge
into
or
lds
cltd
lea
and
ljmp
xor
push
or
outsl
addr16
sbb
push
fcoms
sub
scas
icebp
sub
jecxz
push
test
bound
push
aas
outsl
mov
pushf
inc
mov
push
xor
mov
testb
imulb
pop
mov
outsl
pop
popa
lcall
mov
pusha
and
shlb
mov
pop
ljmp
je
inc
xchg
addr16
fmuls
mov
cmp
jnp
inc
adc
push
das
sub
jae
push
mov
push
push
jno
stc
jne
mov
sub
pop
js
rcl
mov
jne
sbb
jbe
mov
cmp
dec
call
push
add
popf
push
jae
xchg
mov
inc
jge
pop
repz
pop
sbbl
shlb
lahf
nop
pusha
cmp
mov
add
sbb
ret
adc
push
negb
test
stos
dec
jno
mov
dec
movsl
xor
sbb
cmpsb
sub
or
push
lcall
addr16
mov
and
sbb
cmp
mov
mov
pop
mov
cmpsl
push
dec
fimull
stos
insb
dec
mov
inc
mov
adc
out
std
in
in
hlt
outsb
outsb
dec
lea
push
stos
subb
aaa
lahf
aam
popf
cmp
int3
ret
icebp
pop
clc
aad
jecxz
adc
push
lret
call
mov
subl
nop
fidivs
in
repz
cwtl
int
push
ljmp
enter
insb
lret
inc
mov
xchg
mov
push
xchg
mov
repnz
sub
or
sbb
mov
push
repnz
imul
movsb
lcall
jp
add
sahf
push
push
mov
aad
les
adc
daa
inc
addr16
pop
sub
test
popa
pop
and
mulb
push
popa
sahf
push
xor
popf
cmp
out
add
fcom
outsb
lcall
aaa
popa
roll
push
adc
jns
out
test
enter
jecxz
inc
stos
sbb
xor
xor
push
notb
test
xor
push
fwait
jbe
pop
aaa
daa
or
or
adc
cwtl
leave
dec
pop
xor
nop
xor
sub
or
jmp
roll
jno
imul
xchg
adc
mov
mov
sbbl
and
aaa
test
loope
xchg
movsb
sub
loope
jg
arpl
scas
push
xor
fmul
notl
dec
dec
cwtl
popa
repz
mov
mov
cmp
jb
push
scas
lea
iret
push
xlat
or
cwtl
push
jg
jae
icebp
nop
xchg
scas
xchg
scas
xor
inc
inc
dec
sub
inc
cs
ret
cmp
pop
sub
sub
sub
jb
mov
in
cwtl
xchg
loope
imul
mov
mov
rorb
loope
pushf
adc
ret
xor
insl
adc
xor
adc
lret
test
mov
xchg
movsb
mov
sbbb
push
sbb
movsl
add
inc
pop
xor
in
xabort
sbb
into
jp
sbb
addr16
stos
daa
andps
adc
mov
adc
push
pop
jmp
insl
lods
ret
loopne
outsl
push
movsl
mov
bound
data16
clc
imul
pop
mov
push
je
movsb
or
push
jl
push
cld
iret
dec
dec
aaa
xchg
cmpsb
inc
cmp
push
dec
fsubl
js
add
outsl
push
xchg
subb
aad
cmp
xchg
pop
add
xchg
cs
mov
ret
out
in
xor
fisttpll
cmp
push
and
inc
andl
pushf
pop
out
sub
ss
adc
clc
dec
or
mov
push
add
jge
ds
add
push
lock
cs
mov
repnz
xchg
pop
and
add
cmp
fbld
pop
loope
addr16
cld
scas
sti
dec
xchg
call
dec
jne
xchg
mov
xchg
pop
xchg
inc
and
or
xchg
push
ss
je
add
mov
scas
fisubl
or
cmp
dec
aad
push
fidivrl
in
test
pop
mov
repnz
leave
sub
out
xchg
mov
cmp
xor
addr16
cmpsl
ss
dec
adc
add
mov
pusha
in
andb
mov
mov
cwtl
cmc
enter
jle
insb
rclb
stos
ljmp
lahf
xlat
cli
push
ficoms
adc
lods
jge
aas
pushf
imul
push
cmc
ds
ljmp
aam
push
jno
or
out
es
out
sub
xchg
rorb
sbb
out
aad
mov
xlat
mov
lock
insb
ljmp
mov
mov
sub
mov
cmp
add
jle
ret
roll
xchg
dec
pshufw
dec
dec
fiaddl
test
inc
jmp
adc
insl
popa
xchg
rorb
or
lea
movsb
scas
jl
fcoml
add
xchg
add
add
rclb
subl
movsb
lret
cmpsl
add
or
bound
stc
sbb
mov
adc
test
stos
cmpsl
mov
movsl
gs
scas
fnstenv
aas
std
nop
outsb
ds
orb
fidivs
sbb
xchg
inc
lock
sbb
xchg
data16
and
xor
sub
jle
inc
cmpsb
add
pop
mov
popa
movsb
mov
sbb
ficomps
fs
or
popf
addr16
ficompl
push
aam
and
xchg
int3
jmp
aam
inc
pusha
xchg
adc
mov
dec
inc
pop
adc
in
test
orl
add
and
mov
cld
mov
or
adc
and
mov
fdivrl
pop
jg
stos
mov
fcoml
loope
push
lcall
sub
xchg
addb
dec
sbb
test
imul
aas
adc
rorl
push
jmp
cmove
divl
fidivl
mov
dec
call
aam
xor
xchg
sti
jae
xor
sbb
push
sbb
stos
shl
outsb
cmpsl
xchg
out
jge
jne
sbb
add
mov
xchg
jle
adc
mov
in
lret
mov
fists
jnp
mov
cmp
dec
clc
fstpt
cltd
inc
std
stc
mov
sbb
mov
add
adc
hlt
mov
fdivr
mov
orl
and
cmp
pop
sbb
test
jg
pop
or
jp
sub
stc
imul
cld
addr16
movsl
test
repz
add
mov
je
shlb
call
popf
cmpsl
inc
jl
outsb
test
cmp
sbb
iret
pusha
sahf
test
and
dec
lea
in
xchg
xchg
fimuls
idivl
xchg
sbb
adc
cmp
cmpsl
sub
push
adc
push
nop
jg
dec
or
sbb
and
dec
add
push
xchg
addr16
addb
sti
add
mov
insl
aas
mov
dec
inc
cmp
sbb
mov
or
idivb
dec
xchg
xchg
or
ret
or
sahf
and
outsl
lcall
mov
incb
insb
add
push
fsubrs
push
loop
in
pop
call
jmp
jns
push
fiaddl
cmpsb
incl
and
repnz
and
mov
inc
test
out
in
sub
loope
sahf
pop
mov
cmc
push
xorb
pop
clc
jmp
ja
mov
xor
push
dec
lret
aaa
adc
stos
cld
push
and
sbb
inc
adc
lahf
xchg
pop
push
addr16
test
or
fnstcw
ja
sbb
mov
xchg
lods
icebp
pop
int
daa
inc
cltd
sub
leave
loope
push
lods
pop
sub
lret
adc
jo
dec
push
push
jae
jecxz
cmp
fcomps
fstpl
pusha
daa
xchg
sbb
jnp
xor
stos
pop
xor
xor
sahf
rcl
fidivl
lahf
jo
lcall
outsb
push
sub
mov
stc
xchg
mov
jl
or
imul
adc
rorb
jle
icebp
dec
pushf
or
ret
jne
repz
lods
cld
data16
mov
enter
out
jmp
jge
sbb
and
cltd
jbe
fisttpl
pop
xor
push
xchg
mov
lahf
add
test
insb
pop
push
jmp
add
cmpl
xchg
mov
inc
dec
push
cli
sahf
std
leave
sbb
testb
test
pushf
push
cmp
push
cltd
arpl
dec
mov
popf
mov
pop
cld
sub
out
pop
js
push
fistpl
and
shl
xor
movd
add
lret
jb
rcl
popf
push
ffree
add
push
pop
sbb
and
and
ucomiss
stos
adc
jle
aad
cmpsb
repnz
or
add
mov
arpl
jmp
cmpl
mov
jp
arpl
or
xchg
aas
or
inc
jns
mov
rcll
xchg
mov
mov
popl
movsl
push
pop
xor
and
sub
mov
lods
lods
je
push
shll
hlt
jae
and
jecxz
dec
push
add
push
pop
mov
data16
inc
sub
mov
adc
lahf
or
sbbl
out
sbb
mov
or
scas
pop
fsubrs
and
xchg
lods
jnp
and
sbb
xchg
dec
xor
lahf
and
lret
sbb
jno
and
imul
inc
in
xor
mov
lret
into
mov
lcall
inc
pop
and
jb
nop
stos
and
pop
xor
daa
aad
pop
lds
jle
adc
adc
addr16
out
bound
sub
fldenv
dec
frstor
in
fistpll
and
repnz
pushf
cld
dec
pushf
sub
mov
adc
xchg
mov
push
or
cmpsb
sub
aas
pop
xlat
mov
jne
stos
xchg
subb
or
mov
inc
daa
push
fdivr
xchg
cmp
scas
pop
cld
aad
lcall
push
inc
fisubl
adc
mov
and
fdivs
loope
or
adc
scas
xchg
pop
loopne
cmp
jecxz
in
sbb
sub
sar
enter
clc
pop
mov
icebp
sbb
jnp
std
sbb
movb
add
call
test
inc
adc
push
cmp
int3
movsb
in
in
movsb
sub
mov
dec
mov
nop
call
xchg
ret
lret
jp
mov
sub
sub
cmp
scas
add
and
mov
outsb
fldl
push
mov
dec
sub
adc
lock
sbb
push
stos
fistl
imul
loopne
lock
sbbb
inc
mov
mov
in
push
push
sbbb
pusha
cmc
cmovne
mov
xor
mov
cs
sub
mov
pop
cmp
dec
adc
add
or
push
push
jg
sub
lret
movsb
sahf
std
in
dec
adc
data16
loope
mov
xchg
mov
sbb
push
imul
sub
cmpsb
mov
repnz
xor
sahf
ds
cmp
xor
les
dec
mov
flds
ret
rcrb
ss
mov
xchg
push
movl
dec
rol
mov
lret
aas
in
bound
pop
push
push
mov
pop
enter
sti
ret
cmp
sahf
sub
mov
pushl
jmp
push
push
andb
adcb
lods
sahf
outsb
inc
fsin
jbe
enter
adc
fildll
mov
sub
ja
mov
jnp
not
sarl
iret
inc
xchg
mov
adcl
sti
cmp
xchg
cld
pushf
inc
add
es
mov
inc
inc
stc
pop
ret
jge
addr16
adc
push
or
outsl
sti
out
movsb
ja
add
jg
jb
popa
dec
mov
lock
les
ja
ja
add
mov
adc
daa
add
insl
hlt
dec
xchg
cmp
fiadds
mov
sbb
sti
or
daa
test
arpl
push
and
push
xchg
out
mov
inc
jge
pop
ret
add
push
dec
lds
jb
pop
fs
and
xchg
sbb
or
repz
push
or
pop
inc
xor
dec
pop
clc
out
inc
add
rorb
dec
push
rcl
lock
cwtl
std
ljmp
add
stos
fmuls
or
inc
ds
nop
mov
leave
shl
divb
xor
lods
out
shr
inc
mov
ret
adc
and
sub
and
mov
jbe
cli
dec
notb
imul
push
test
call
shlb
sub
test
test
sti
or
and
scas
into
or
js
enter
xchg
push
push
loopne
fs
movsl
and
ficoml
mov
push
mov
movsl
popa
jl
je
call
xlat
pusha
outsb
je
mov
jae
dec
mov
test
gs
lods
out
mov
cmc
lods
dec
aad
andb
test
adc
lock
shl
xor
xor
imul
push
sbb
jns
jmp
scas
sarl
int3
lods
icebp
push
and
add
cmp
cmp
and
cwtl
sub
imul
xchg
inc
jb
mov
out
pop
aam
ffree
leave
and
std
ret
mov
mov
dec
fsubs
insb
repz
xor
call
adc
pop
mov
decl
inc
test
enter
push
push
dec
fcomps
push
jno
xchg
mov
mov
xchg
cld
pushf
inc
cld
jne
sbb
lea
lcall
mov
loope
mov
shr
clc
bound
scas
in
testb
or
pop
addr16
hlt
aas
or
mov
popf
pop
xchg
ja
or
or
inc
stc
loopne
lea
mov
or
insl
jl
cmpsb
imul
add
ffree
inc
iret
mov
mov
and
mov
add
sub
or
ret
int3
out
enter
xchg
neg
es
int
cmp
jns
inc
aad
sbb
pop
jle
or
andb
mov
jl
adc
fstl
clc
loopne
lods
fdivl
lcall
ljmp
enter
xchg
arpl
imul
pop
push
push
mov
aas
add
ficompl
and
inc
scas
mov
add
test
mov
pop
mov
test
in
pop
outsl
cld
cmp
sbb
pop
sub
outsb
inc
xor
push
cmp
xor
rcr
cmp
jg
outsl
pop
in
xchg
jge
xchg
lret
or
jb
rclb
mov
repz
xor
fidivl
fstl
mov
xchg
repnz
das
in
popa
or
xor
lahf
iret
jbe
fisttpl
inc
cmpsb
inc
shrb
movsb
inc
cmp
add
mov
adc
mov
mov
lea
lahf
test
dec
ljmp
mov
push
jl
mov
add
gs
fwait
xor
sub
rolb
cmpsb
lods
mov
cwtl
or
int
add
nop
xchg
jne
bnd
xor
cmp
pop
cmp
stc
les
lcall
adc
es
in
mov
testl
sbb
lret
test
jnp
sub
lds
in
mov
pushf
aam
cmpsb
ret
cs
in
fildll
mov
into
shrl
aam
sti
push
push
rolb
lods
addb
ror
cld
jno
ss
pop
lret
and
add
sbb
mov
jne
aad
addb
pop
mov
enter
or
mov
stos
sbb
pop
cmp
ret
xchg
cmpsl
fisubrl
loop
pop
int3
shrl
lcall
push
cltd
cmp
xor
adcl
and
aaa
cmp
cmp
cmpsl
mov
jb
adc
inc
fcmove
bound
xchg
jb
mov
mov
adc
out
xchg
mov
push
mov
pop
je,pt
out
clc
xor
cli
cld
lods
fidivrs
xor
add
xchg
add
mov
in
push
int3
inc
into
cwtl
adc
add
mov
mov
aad
in
dec
pusha
dec
cmp
rcrl
aaa
push
shlb
inc
mov
pop
adc
pop
mov
sbb
xlat
jbe
hlt
adcl
outsb
push
xchg
mov
mov
or
dec
xchg
adc
push
mov
fmul
xor
les
test
jmp
ret
push
loope
pop
mov
jmp
popa
cld
incl
sbbl
loopne
pop
xchg
imul
jns
pop
xor
inc
jns
add
hlt
dec
ret
add
ret
mov
xor
icebp
fisttpll
pop
lcall
testl
mulb
and
mov
xor
inc
and
push
cmpsb
lea
cmp
in
mov
out
push
jecxz
add
pop
int
sbb
insb
addl
fs
inc
mov
call
inc
fwait
stc
lahf
mov
fidivrs
sub
repz
push
mov
mov
pop
rcrl
popa
stos
and
mov
mov
outsl
gs
scas
add
sti
out
cli
xchg
std
mov
pop
cmc
iret
verr
pusha
cltd
imul
jbe
cli
ss
mov
jge
inc
and
cld
pop
and
mov
pusha
or
mov
je
jnp
xchg
pop
lock
inc
popa
aaa
pop
in
push
or
mov
xorb
enter
pop
dec
cwtl
inc
push
subl
in
mov
push
fbstp
or
mov
sub
add
add
xchg
and
cmp
add
jns
call
lahf
lcall
xchg
int3
vpcmpeqd
jo
dec
or
adc
jp
mov
or
sub
stos
mov
lods
dec
test
mov
das
push
or
inc
adc
fdivrs
shll
and
stc
dec
xor
push
nop
popf
mov
and
push
in
jne
add
repnz
cmp
mov
test
xor
xor
int3
orl
fidivs
dec
push
sbb
mov
les
out
pop
mov
or
cmp
sbb
aam
push
std
add
mov
jg
or
lret
jo
mov
or
test
adc
mov
mov
xor
push
insb
push
test
xor
je
dec
loop
mov
or
loopne
mov
xor
loop
or
loopne
and
mov
xchg
fnstcw
pop
xchg
fucom
stos
in
jmp
lods
fcoms
lds
xchg
rclb
jp
mov
dec
push
xor
inc
adc
das
fidivrl
ret
mov
and
movsb
pop
mov
mov
adc
inc
dec
mov
push
mov
fucomip
push
packuswb
inc
pop
pop
jmp
push
lahf
cmp
notb
mov
mov
pop
cwtl
outsb
jb
mov
mov
pop
lcall
mov
jb
mov
fcoml
stc
cmp
enter
mov
test
adc
nop
xor
loopne
dec
aaa
adc
sbb
es
lret
jmp
push
in
cmpsl
add
add
add
mov
subb
or
outsl
shlb
ret
push
sbb
lret
imul
loopne
idiv
js
popa
lds
insl
inc
push
out
repnz
pop
rol
cwtl
fadds
sub
inc
mov
shrd
and
movsb
hlt
cwtl
ljmp
cmp
hlt
pop
mov
stc
popa
ds
pop
inc
add
ret
sbb
addb
pop
shlb
add
out
test
repz
scas
mov
or
popw
mov
mov
out
in
mov
idivb
data16
push
inc
adc
cmp
cli
stos
in
jno
jbe
jmp
loope
cmp
dec
cmp
mov
jno
lds
jle
das
xor
sbb
mov
repnz
xor
xor
cmp
out
arpl
orl
mov
std
pcmpgtw
cmp
fldenv
push
adc
cmp
dec
jo
jge
jno
mov
daa
les
int3
subb
sbb
sarb
mov
inc
cwtl
xlat
push
ja
cmp
jb
mov
pusha
pop
inc
scas
cmp
inc
inc
mov
and
inc
jns
icebp
mov
ret
ja
adc
jo
in
ds
fnstsw
lea
mov
mov
adcl
mov
ds
jl
cld
or
les
mov
push
dec
lahf
lcall
cmp
inc
lahf
daa
pusha
dec
and
inc
fidivrl
xchg
sbb
testb
mov
pop
cli
pop
insl
int
stos
or
cmpsb
les
in
jno
xor
insl
adc
xor
test
incl
es
test
stos
sbb
test
popa
or
jne
rcll
nop
imul
sbb
push
pushf
ds
shll
movl
fdivrl
pop
mov
iret
push
pop
xlat
dec
adc
lods
mov
out
jno,pt
pusha
mov
and
sbb
loope
and
inc
enter
mov
push
xor
aad
pop
jl
ret
xor
jge
add
jne
sub
adcb
xor
and
int3
dec
addl
inc
pop
inc
lea
enter
or
cmpsb
les
popf
xchg
xchg
xor
jb
or
sbb
faddl
cld
push
test
pushf
fcoms
jl,pn
sbb
inc
in
sub
fs
mov
dec
inc
adc
jno
leave
xchg
xorb
mov
add
sub
and
sub
xchg
pop
add
mov
pop
imul
xor
xchg
fs
shr
out
and
inc
mov
das
adc
mov
fcmovbe
xor
insl
push
incl
mov
mov
imul
pushl
sbbl
sub
jecxz
les
les
movsl
mov
sub
mov
push
mov
jle
add
sub
sub
ljmp
push
adc
das
xor
cmc
jp
sarb
dec
loop
push
xor
or
inc
lods
out
adc
jnp
adc
adc
pop
fisubrl
lods
fdivrp
cmp
add
popf
fdivrl
lea
xchg
ret
push
arpl
imul
scas
in
lds
and
jo
jmp
pop
das
push
push
push
sbb
ss
test
lea
pop
cmp
pop
enter
outsl
jne
pushf
subl
dec
scas
or
xchg
popf
push
dec
shrl
pop
push
cmpsl
loop
cmp
xchg
jle
cmp
xchg
cltd
out
adc
sahf
mov
pop
int
rolb
out
loop
push
lret
xchg
push
add
das
and
push
mov
cmp
xor
push
pop
mov
bnd
clc
shl
sub
fistpl
fmuls
loope
jecxz
sub
insb
jbe
sti
and
subl
or
call
div
mov
inc
out
icebp
imul
loope
in
unpcklps
cmpsl
mov
mov
shlb
jnp
ljmp
xchg
pop
pop
cld
mov
sub
cwtl
idivl
in
cld
xchg
idivb
sbb
mov
imul
repz
pop
sbb
cmp
sbb
jg
or
cmp
and
or
dec
inc
hlt
je
lret
ss
idiv
pop
sbb
iret
shrl
dec
pop
mov
imul
fisubrl
fsubrl
retw
xor
xor
push
add
xor
pop
pop
fmull
out
lock
mov
fmull
or
imul
inc
mov
in
adc
xchg
xor
cmpb
xor
push
add
add
scas
inc
mov
pop
incb
mov
bnd
inc
out
and
add
aam
das
mov
jo
test
sub
dec
xchg
push
jbe
cwtl
and
stos
ds
add
test
xlat
mov
inc
or
test
aas
roll
pop
jno
mov
outsl
push
imul
push
int3
fmul
push
loopne
push
and
xor
add
repnz
cmp
jl
dec
fsubrp
adc
pushf
mov
mov
xchg
sbb
cmpsb
sub
mov
test
mov
xlat
sbb
xor
push
lock
inc
lahf
add
sbb
xor
out
dec
jecxz
dec
cmp
fdivrs
fnstenv
jp
sub
jp
push
and
jp
fisubrl
or
push
int3
xor
mov
add
shll
xor
jg
sub
out
or
xor
push
xor
jb
popa
pushf
push
cli
dec
xor
fcoml
popf
jno
jae
popf
jecxz
psrlw
loopne
sub
inc
mov
xchg
fs
push
dec
push
and
push
pop
mov
shrl
pop
mov
xlat
ret
inc
dec
movsl
je
sbb
xchg
jecxz
mov
dec
inc
xchg
push
mov
roll
and
sub
sbb
mov
repz
popf
loop
iret
xor
movsb
add
push
inc
movsb
pop
out
enter
lods
mov
jl
mov
mov
loop
jo
mov
test
cmp
pop
je
adc
adc
pushf
lret
push
dec
hlt
fsub
idiv
adc
xor
sbb
lods
pop
cmp
and
sbb
xor
in
xchg
addr16
test
and
jp
and
stos
push
out
aaa
les
fistpll
jne
inc
aaa
insl
or
popf
mov
out
mov
cmpsb
inc
xchg
jno
add
lahf
in
jo
pop
lock
xchg
sbb
sub
fldcw
test
sahf
jge
rorl
addr16
fdivr
sub
test
jb
loope
mov
test
add
cld
sub
inc
enter
push
adc
adc
rcrb
pop
aam
daa
adc
mov
mov
rep
cli
and
add
xor
xor
out
mov
cmp
push
mov
jno
add
dec
or
push
cs
jecxz
mov
sbb
xchg
rcl
cmp
loopne
fldcw
leave
add
int3
cmpsl
sub
mov
scas
lock
gs
mov
sub
push
hlt
sti
hlt
xchg
leave
sbb
cmp
jo
push
pop
dec
lret
test
add
xor
sub
inc
and
jg
inc
cli
pop
mov
mov
imul
inc
aaa
fsubs
cld
mov
mov
sahf
imul
lea
and
cltd
dec
imul
sarl
mov
out
inc
jle
mov
add
test
xchg
push
mov
das
cmp
hlt
mov
ret
fbld
push
sbb
pop
add
push
mov
ret
ljmp
ret
and
inc
xlat
out
fimuls
imul
pop
cld
faddl
imul
cwtl
inc
imul
push
fbld
popa
add
test
sub
pop
inc
loop
sbb
xor
xor
fidivl
scas
and
stos
lahf
fadds
mov
ja
adc
sub
pushf
jb
xchg
jnp
inc
mov
xadd
push
lds
push
push
fimuls
repz
inc
aas
repz
test
sbb
or
xchg
scas
inc
add
jmp
in
subb
out
xor
inc
pushf
mov
mov
outsl
data16
hlt
add
add
fimull
lea
ss
inc
rcr
movsl
adc
lahf
movsb
lods
sub
add
inc
xchg
cmc
sti
out
inc
or
fnstenv
in
xlat
fs
js
mov
gs
nop
stos
jo
rcr
push
clc
repz
cli
xchg
xlat
mov
push
xor
jecxz
mov
les
cmpsb
cwtl
inc
ss
imul
cmpl
jp
push
sub
xchg
aam
or
in
sbb
mov
in
scas
dec
stc
dec
shll
int3
fwait
and
jecxz
test
jne
scas
mov
gs
outsl
clc
pushf
dec
push
mov
insl
cmpsl
push
push
test
add
stos
js
mov
cmp
or
clc
mov
push
int3
xchg
lahf
pop
aaa
pop
movsb
push
movsl
push
jns
pushf
mov
pop
fs
stos
nop
std
jns
iret
mov
in
iret
dec
sub
into
lret
into
pop
loopne
cmp
gs
aam
mov
push
add
js
aad
cltd
xor
sbb
add
mov
and
pop
adc
mov
sub
sahf
mov
call
pop
xor
lret
xorl
or
xorb
ret
cmpsl
psubb
mov
add
das
lcall
ret
mov
movsl
add
cwtl
inc
std
les
sahf
clc
mov
aaa
in
stos
mov
adc
testb
jne
inc
aad
fisubrs
jp
mov
pop
add
cltd
mov
sub
fnstenv
pop
jbe
inc
pushf
jb
out
je
add
lods
movsb
cmc
jns
rorl
call
xor
xor
xchg
lret
jae
es
mov
popf
or
out
inc
push
mov
push
hlt
mov
xor
xchg
out
lahf
movsb
push
mov
clc
insl
imul
mov
test
aam
cmp
out
hlt
shrl
lods
cmp
pop
jno
xchg
sbb
in
cmpsb
ja
mov
mov
movsb
mov
stos
mov
ja
sbb
lret
xchg
arpl
les
dec
sub
iret
aas
mov
repnz
iret
mov
inc
cmc
dec
dec
into
leave
loope
leave
adc
cltd
int
or
out
outsw
pop
adcb
ret
out
mov
inc
ja
pushf
scas
test
insl
in
adc
loop
imul
or
std
xchg
mov
inc
test
xor
mov
in
mov
pop
in
inc
cmc
orb
xor
sub
into
inc
test
mov
nop
pusha
sahf
inc
call
shrl
shrl
jl
sub
mov
out
push
and
stc
mov
popa
mov
jns
aam
jle
pop
fldl
popf
xchg
adc
cmp
sub
cmpsl
mov
mov
incb
cmp
jno
pop
xrelease
repz
dec
mov
push
push
push
pushf
mov
enter
int
hlt
mov
stos
xchg
lea
cwtl
cwtl
and
pop
pop
cli
lret
adc
ds
sbb
rcrl
cli
xor
popa
popl
xor
adc
and
jo
mov
xor
inc
mov
mov
mov
fsub
shl
adcb
or
daa
inc
ret
call
loope
add
adc
dec
xor
repz
jnp
clc
lea
and
mov
std
and
imul
jne
les
xchg
repz
jb
adc
sbb
in
les
adc
data16
dec
subl
cmpsl
pop
pop
inc
dec
cmp
add
js
adc
add
mov
aaa
cmp
push
mov
adcb
or
int3
xor
and
sub
fisubrs
or
imul
cmp
mov
xchg
pop
jl
and
sub
jmp
mov
mov
pushf
insb
aam
js
das
sbb
paddsw
fsts
fst
daa
mov
shll
enter
jbe
outsl
sti
in
jp
cs
push
rclb
xor
jns
jb
push
shll
jae
push
shl
cltd
cmp
or
xor
test
cmp
daa
mov
dec
popa
test
jne
mov
int3
jae
scas
inc
jmp
stc
je
shl
test
iret
int3
cwtl
sub
sbb
inc
jmp
ss
and
into
add
mov
cmp
shll
aaa
push
and
sbb
add
mov
dec
pop
test
cmc
xchg
xchg
sarb
sbb
push
pop
dec
ss
lcall
and
out
xchg
mov
cmp
lock
rorb
inc
test
mov
cmpb
cmc
das
push
inc
sbb
adc
inc
fidivl
ret
inc
push
sbb
in
inc
mov
lods
loop
rorb
mov
xchg
push
stos
xchg
sahf
adc
test
sbb
cmc
and
stos
stos
add
fcmovnb
adc
inc
xchg
lods
mov
cmc
sahf
sbb
sub
ds
pusha
cld
test
clc
and
mov
push
sti
test
xchg
mov
in
mov
lods
dec
in
pop
arpl
insl
iret
add
outsb
adc
fnsave
jae
test
mov
jae
pop
dec
adcl
xchg
outsl
cmp
xchg
sbb
cmp
mov
jnp
mov
inc
in
pop
sub
push
int
insl
in
into
mov
sbb
add
sahf
nop
cmp
and
inc
adc
sub
and
cmp
mov
sbb
mov
cmc
gs
and
cmpsl
addr16
into
iret
out
enter
enter
adc
mov
jne
inc
mov
xchg
push
push
and
mov
xchg
and
xor
inc
jb
xchg
mov
pop
in
lcall
sub
jge
jbe
jg
pop
and
outsb
adc
dec
fistpl
or
pushf
mov
loopne
cmp
inc
js
mov
enter
push
and
mov
imul
stc
pop
jecxz
or
ljmp
gs
cli
fimuls
loopne
sbb
inc
mov
jo
ja
popf
sbb
xor
in
mov
xchg
loop
and
out
aaa
es
imul
push
push
out
shlb
les
roll
or
cmpsb
sub
jno
inc
xor
pop
xchg
cmp
in
ja
and
jmp
rcrl
int
movsl
push
lcall
and
and
xor
es
gs
push
or
push
add
sti
push
test
dec
dec
jge
and
pop
ror
mov
leave
sahf
fstps
or
fists
jno
rorl
bound
or
in
cmpsb
xchg
or
sbb
dec
mov
push
lahf
call
add
rorb
std
incl
fsubs
dec
mov
popf
lcall
or
or
test
sti
pextrw
je
fists
mov
cmpsl
cmpb
call
push
pusha
mov
sub
and
inc
shlb
stos
test
jno
add
loop
push
add
push
cmc
sub
loopne
add
mov
mov
mov
sti
test
sbb
pop
pushf
out
popf
repz
mov
cmp
mov
es
js
stc
lods
jg
mov
xor
mov
cltd
mov
stc
aam
sahf
pop
add
jbe
cld
mov
sbb
sub
mov
out
inc
push
fdivs
stos
icebp
pop
inc
mov
jae
ds
adc
or
insb
inc
cmc
clc
sahf
test
aas
or
cli
out
push
adc
xchg
test
es
rclb
outsb
popa
xlat
sub
int
adc
sub
pop
cmp
and
jnp
inc
dec
mov
fldenv
mov
push
ret
mov
rcrl
mov
sub
dec
cmp
mov
shlb
fstpt
sbb
lahf
inc
cmp
or
inc
jmp
cltd
jp
pushf
push
mov
fs
call
jb
mov
call
or
pop
push
xlat
push
movsl
dec
pop
pusha
xchg
xor
add
leave
fidivl
or
fs
insl
lea
insl
aas
enter
sub
test
test
neg
add
and
movd
jp
push
popa
sbb
adc
shll
jae
lods
mov
sub
xchg
hlt
rcll
mov
es
into
out
popa
sub
jno
les
fimull
test
shll
into
iret
mov
mov
es
jno
adc
or
push
pop
sub
fsubl
daa
xchg
pop
cwtl
sub
scas
nop
pop
lret
xchg
or
scas
pop
jb
adc
add
adc
aad
and
or
fstps
add
gs
add
inc
dec
sbb
mov
xor
cmc
mov
adc
pop
rorl
stc
fdivl
cmp
or
lahf
scas
xor
jecxz
imul
rcrb
pusha
mov
mov
cmc
jb
fdivr
pop
rorl
xor
test
jno
pushf
adc
xor
leave
movsl
imul
shrb
lods
test
mov
mov
scas
repnz
mov
cmp
xchg
andb
adc
adc
mov
lds
cmp
cmp
addr16
cmp
aas
jp
movsb
loopne
hlt
in
push
or
rol
add
in
sub
add
ja
popf
or
mov
in
stos
stos
push
mov
call
loope
mul
out
sbb
out
clc
and
lcall
aam
ret
and
sbb
insl
ds
pop
sub
and
xor
xor
cmp
push
jmp
mov
push
jge
xorb
pop
cld
filds
mov
test
and
aad
or
add
into
outsl
or
cld
sub
add
cmp
mov
mov
aam
mull
aas
adc
jge
add
dec
xor
jmp
and
jge
call
or
lods
mov
mov
and
pop
mov
add
push
cmpsb
cmp
adc
ficompl
xchg
and
sbb
sbb
jle
push
mov
lock
scas
rclb
in
mov
jno
add
sub
sarl
sub
mov
scas
xchg
data16
mov
mov
test
cld
fmulp
mov
shlb
out
xor
mov
push
ds
jecxz
and
dec
mov
nop
add
pop
xchg
cmp
les
and
sbbl
push
push
lods
lods
push
nop
push
mov
push
out
mov
xor
ljmp
dec
or
push
test
mov
ljmp
aad
cmp
push
icebp
test
dec
and
into
or
inc
lahf
mov
sbb
sbb
cmpsl
fbld
in
jne
mov
xchg
pop
out
stos
sbb
xor
std
ja
xchg
mov
or
jecxz
stc
sbb
inc
push
adc
dec
mov
lret
rcll
leave
mov
in
mov
insl
and
push
loopne
push
xchg
std
gs
loope
clc
sbb
iret
adc
movsb
jns
jp
adc
lahf
cmc
xor
test
xchg
xchg
lcall
out
jnp
int3
xchg
movsl
pop
data16
btr
pushf
fs
sub
loope
sahf
xor
push
and
stos
test
mov
testb
sbb
enter
ret
sbbl
lods
mov
stos
sar
bound
scas
cli
inc
xor
or
les
add
in
mov
fimuls
sbb
cmp
cmc
pop
mov
mov
mov
mov
push
stos
adc
lods
popf
mov
scas
aam
jae
push
xchg
add
xor
aas
pop
mov
lods
or
xchg
cmpsb
jno
in
mov
iret
out
push
sbb
sbb
rorl
lock
jge
jo
jge
stos
icebp
inc
jne
lret
stc
test
adc
std
lret
fcoml
inc
push
xchg
jae
push
fdiv
outsl
mov
dec
mov
lcall
jg
shlb
in
popa
fldcw
cmp
push
pop
mov
das
test
add
push
stos
cmp
out
daa
cmp
fimuls
loop
mov
xor
loop
cmp
pop
popf
outsb
xor
push
sbb
xchg
loope
mov
clc
out
mov
dec
divl
in
into
sub
imull
ffreep
add
mov
aad
pop
nop
fwait
ret
in
insl
adc
mov
sbb
dec
psadbw
rorl
repnz
addr16
inc
fwait
pusha
adc
mov
es
cmp
push
aam
lods
loop
xchg
imul
call
jne
mov
shl
jb
dec
in
push
pop
push
imulb
ret
sbb
xchg
pop
stos
push
outsl
mov
ficomps
jg
mov
lea
xor
adc
sbb
dec
jns
mov
stc
cmpsb
dec
or
mov
dec
bound
jne
add
dec
aad
and
push
in
push
pop
divl
mov
lahf
mov
jp
or
popa
pop
testl
fnstenv
test
aaa
arpl
jg
and
jmp
ja
movsb
and
shrl
jecxz
cmovno
xchg
jns
push
fucom
aam
movsl
mov
mov
loopne
mov
in
outsb
aad
mov
adc
mov
popf
mov
xor
scas
cvttps2pi
sub
ret
jl
out
aam
mov
mov
xchg
xchg
pop
dec
in
pop
mov
add
addr16
jns,pn
stos
or
and
mov
jno
pop
pop
mov
jnp
movsb
adc
out
xor
push
int3
sbb
pop
imul
mov
cmp
fbld
xchg
pop
xor
int
mov
imul
push
sbbb
arpl
fs
xchg
ds
test
fsub
jl
inc
adc
cmp
psllq
fstps
xor
inc
xchg
sub
cld
pusha
pop
mov
or
sub
or
pop
addr16
xchg
and
fs
fcmovne
popa
mov
lea
out
mov
add
xchg
dec
pop
xor
les
fmull
js
mov
xor
sub
rcrl
inc
mov
iret
dec
cmpsl
xchg
xor
fcoml
push
push
loop
mov
pop
add
jl
stos
mov
pop
nop
adc
sbb
rcr
cli
cmpsb
incb
add
outsb
fistpll
shll
arpl
sbb
sti
add
popa
adc
sub
push
mov
sarl
sub
cmp
movsb
or
push
enter
inc
push
mov
stc
inc
ficompl
mov
rcr
test
sub
inc
cmp
jge
mov
stos
outsb
rclb
xor
xor
test
sbb
hlt
add
mov
popf
dec
stos
push
inc
mov
shl
ficompl
adc
dec
lret
xlat
mov
mov
ret
push
aad
rclb
leave
mov
in
les
xor
ret
push
push
imul
cwtl
push
dec
lcall
filds
insl
loope
mov
xchg
fisttps
and
mov
repnz
fdivrl
outsl
push
jg
push
jmp
pop
stc
rcpps
in
add
adc
test
jo
jmp
fadds
add
pop
and
fisubl
scas
imul
in
stos
ljmp
enter
nop
mov
loopne
dec
neg
test
mov
int
rcl
xchg
aas
out
loope
test
scas
subb
sbb
mov
sbb
fnsave
push
push
testl
pop
sbb
fldt
sbb
push
test
cmp
and
scas
push
mov
call
in
loop
sbb
push
xlat
mov
sti
xchg
cmp
lods
fnstsw
call
out
cmp
xor
mov
jbe
pusha
stos
sbb
fwait
mov
xor
movsb
inc
lahf
adc
test
lret
call
scas
lods
or
outsl
sub
xchg
out
shl
adc
ljmp
jno
cwtl
inc
jnp
lds
clc
dec
test
and
cmp
mov
add
dec
inc
inc
xchg
and
ja
add
pop
jnp
stc
in
mov
sar
sub
lret
and
ret
bound
cs
stc
sub
ret
cmp
pop
xchg
insl
sarl
stos
fwait
push
ret
mov
xor
xor
stos
movhps
aas
push
js
sub
jge
mov
scas
mov
enter
pop
sbb
repz
shl
pop
dec
push
dec
fildll
movsl
pop
or
ss
out
lea
clc
push
add
sub
jmp
fs
dec
pop
repnz
xor
mov
push
mov
inc
popa
mov
rorl
push
roll
clc
pop
mov
pushf
jo
add
mov
dec
ffree
mov
xor
sub
mov
sub
pop
cmpsb
adc
push
int3
add
dec
ret
jbe
int
xor
pop
mov
sbb
inc
movsl
hlt
push
jne
iret
mov
jp
and
fnstcw
cmp
pop
in
mov
inc
sub
cmp
out
cs
movsb
into
std
lahf
ret
mov
pop
es
fdivl
and
add
push
sub
push
js
jecxz
movsl
loope
rorb
loopne
ds
mov
sti
mov
mov
imul
lahf
movntps
scas
pop
xor
add
scas
stos
jp
sbb
xchg
sub
mov
fisttpl
push
data16
movd
cld
mov
adc
sub
out
hlt
push
pop
bound
fsubrs
cld
inc
mov
pushf
popf
stos
out
dec
cmpb
pop
test
out
xor
jae
cmpsl
add
cmpsb
xor
cmpsl
adc
pop
gs
out
pop
and
test
mov
push
stc
shr
sahf
add
pop
cmp
sub
pop
sub
sti
add
movsb
testl
and
sbb
mov
mov
daa
shlb
scas
aas
push
jb
jo
jae
cbtw
xorb
out
add
cmp
lods
pop
inc
rclb
sub
adc
pushf
sbb
lods
mov
es
aas
movl
mov
and
xchg
mov
mov
das
jo
call
xor
push
mov
imul
xor
cmpsb
mov
xor
fnstsw
or
xlat
jns
outsb
out
xlat
nop
add
xor
xchg
xchg
aas
mov
fdivrl
stos
rcrb
add
lret
xchg
stc
bound
int3
mov
call
mov
inc
mov
mov
scas
repz
stc
ficomps
pop
push
inc
test
fs
adc
pop
pop
push
mov
arpl
push
sub
int3
mov
sub
aad
lock
sti
andl
add
imul
mov
shlb
push
adc
add
add
mov
movsl
enter
mov
push
xchg
mov
adc
ficoml
dec
in
xchg
clc
mov
mov
stc
stc
sbbb
roll
cli
push
fs
insb
jno
xor
std
hlt
and
std
sbb
inc
imul
movsl
in
xchg
pop
sarl
and
cwtl
repz
stos
mov
cmc
fsubrs
jnp
stos
mov
jl
lock
jmp
push
pop
and
mov
sbb
push
xor
push
jp
stc
outsl
rorl
inc
mov
push
in
imul
ficoml
mov
pop
cmpl
imulb
fbld
stc
dec
imul
arpl
loope
mov
xor
xchg
dec
cmp
test
mov
ja
les
jno
jle
or
add
or
jbe
cmp
xchg
mov
adc
cmp
fcmovnb
mov
push
push
cmpsl
int3
inc
test
mov
enter
mov
mull
xchg
mov
mov
pop
mov
sub
cmpsl
loope
mov
jne
aas
aaa
pop
jg
arpl
adc
mov
sub
out
test
aad
test
jecxz
pusha
popa
cmp
out
daa
sub
mov
xchg
scas
sbb
repz
insl
test
dec
xchg
dec
stos
sbb
ret
mov
dec
xor
mov
lret
lahf
paddd
loop
cmp
xchg
sub
fcmovbe
fadd
rorl
lahf
movsb
jecxz
cld
pushf
out
rolb
xor
jno
int3
mov
iret
imul
mov
push
into
add
inc
and
or
into
shlb
cltd
aad
arpl
mov
sarb
dec
mov
movsb
popa
dec
mov
push
push
xor
push
push
inc
jg
and
xor
adc
out
mov
add
loope
call
xor
mov
adc
push
gs
jbe
add
dec
arpl
cmp
and
test
and
pop
xchg
push
add
sbb
sbb
mov
data16
aaa
push
pop
push
xchg
inc
stc
ret
mov
xor
fsubrl
lret
or
int
push
int
xor
and
fmuls
push
xchg
mov
inc
push
ret
scas
ja
notb
imul
ljmp
add
cli
mov
out
add
sbbl
or
call
dec
sbb
jl
add
add
std
out
and
test
ds
andb
mov
push
inc
test
inc
int3
cmp
mov
push
push
add
jno
pop
jnp
sbb
add
aam
mov
add
mov
and
lock
and
fs
and
mov
inc
mov
or
xor
mov
push
sahf
adc
jb
insl
jg
addr16
sub
and
or
and
sub
movsl
mov
pop
int
test
mov
add
js
jno
and
mov
jg
adc
popa
call
xor
mov
mul
and
gs
mov
cmp
xor
pop
cmp
sahf
sahf
xchg
push
sahf
js,pt
dec
lds
xchg
or
movsl
jg
inc
loope
out
in
mov
mov
pop
mov
xor
outsb
and
mov
inc
outsl
ret
dec
fwait
pop
scas
jno
sub
adc
dec
mov
dec
sbb
or
mov
sub
xchg
mov
cmp
pop
cmpb
push
test
push
cmc
mov
mov
or
cmpsb
jg
mov
repnz
dec
jmp
js
and
sbb
dec
jns
mov
nop
add
pop
hlt
cld
out
icebp
mov
inc
icebp
in
cltd
bound
cld
aad
add
pop
sbb
inc
push
scas
push
enter
xor
shrl
add
cs
jns
push
xchg
lcall
mov
cmp
mov
cltd
mov
mov
mov
and
push
cmpsl
sub
andb
or
sbbb
jo
scas
adc
pop
popa
mov
xlat
mov
push
push
pop
pusha
into
inc
out
jecxz
int3
or
insb
dec
sbb
jns
ja
push
lahf
xor
mov
mov
ret
cmp
lret
inc
and
jnp
sub
rcrb
fiaddl
fnstcw
inc
decb
mov
xlat
mov
iret
pop
test
push
ds
dec
out
popf
xchg
ja
inc
scas
ret
ljmp
mov
pop
sarb
outsl
fistps
push
bound
fcmove
mov
rcl
hlt
or
js
rolb
inc
push
ds
clc
fwait
push
mov
mov
sbb
arpl
push
sahf
loopne
push
scas
push
dec
or
push
mov
adc
sub
loopne
adc
lret
inc
je
insb
cmp
pop
rolb
inc
test
das
jmp
mov
add
shl
cmp
xorb
mov
call
lahf
dec
ljmp
add
out
push
add
mov
rolb
push
mov
popf
jns
lods
add
outsl
jmp
adcb
scas
imulb
or
rorl
cmp
mov
push
pop
loop
add
addr16
sbb
jle
in
adc
push
lahf
jo
fs
mov
mov
sub
test
add
mov
mov
sub
and
push
xchg
fstpt
jo
js
mov
sub
add
pusha
pop
popf
mov
fisubrs
test
jl
fmuls
pop
jbe
ljmp
scas
decl
sub
les
aad
mov
test
sub
adc
cmp
repz
jo
dec
sbb
xorl
mov
arpl
into
xorl
sbb
jnp
jp
sub
stos
jno
idivb
andb
mov
aam
out
iret
pop
imul
syscall
into
sub
shl
outsb
push
sarl
shrb
xchg
js
inc
clc
imul
jp
fsubr
sub
cmpsb
push
aaa
sbb
or
roll
jae
mov
fsubl
and
cwtl
stos
pop
add
mov
push
jo
adc
sti
inc
mov
fwait
fs
test
push
aaa
mov
movsl
mov
or
push
scas
lock
ss
loop
or
pushf
xlat
loope
jl
pop
jge
mov
movsl
pop
jp
loopne
push
xchg
gs
xchg
adc
loope
lahf
and
and
stos
sub
nop
cmpsb
lds
rcll
std
dec
and
in
jg
mov
popa
hlt
repnz
dec
and
fldenv
push
and
loope
cwtl
shll
ret
adc
jmp
sbb
add
fcoml
and
scas
movsb
dec
loop
cmp
add
call
in
inc
ss
iret
ret
stos
push
movsl
enter
lahf
dec
fs
jne
or
cmp
jecxz
dec
repz
daa
xor
into
jle
call
in
lcall
or
xchg
lahf
mov
psubd
adc
inc
jecxz
jae
mov
stos
ret
incb
pop
in
xchg
rcr
push
nop
and
mov
and
das
into
inc
or
mov
and
orb
test
loop
loopne
mov
mov
fwait
jns
fs
mov
test
inc
in
repnz
jge
push
jg
clc
jbe
pop
in
aas
movsb
gs
loop
iret
aaa
jo
push
fbstp
je
popa
cltd
jg
fidivrl
mov
inc
cmp
push
push
cmp
sub
and
pop
jne
ss
cmp
xchg
or
stc
test
sub
cwtl
mov
jno
mov
inc
mov
in
cmp
fcmove
mov
lock
xchg
outsb
sbb
movsl
pop
insb
push
sub
stos
fdivl
ret
lock
xor
ret
scas
xchg
push
inc
pop
mov
test
outsl
mov
jbe
pop
push
push
xor
xchg
arpl
lret
push
sbb
mov
aad
pop
mov
adc
and
mov
mov
push
adc
orb
mov
out
repnz
and
push
movsb
mov
mov
mov
pop
rorb
dec
and
pop
sbb
cwtl
push
ja,pt
test
sub
mov
adcl
mov
sub
push
ja
add
sbb
mov
pop
fildll
insb
xor
in
dec
mov
aad
stc
or
scas
lods
xchg
inc
pop
mov
adc
adc
sahf
xchg
sub
xchg
in
insl
ds
test
mov
or
inc
sub
mov
mov
sub
push
dec
sbb
sub
cmc
imul
cli
repnz
movd
mov
inc
pushf
mov
dec
iret
xor
push
sub
loope
add
or
into
int
jmp
pop
imul
adc
das
or
dec
stos
fwait
inc
jnp
inc
mov
mov
cmpsb
out
icebp
out
push
sbb
js
sub
sbb
jmp
test
popf
cwtl
neg
out
jmp
xor
cmp
push
and
pop
dec
inc
push
fiadds
test
cmp
sbb
jbe
jae
pop
jp
push
mov
jbe
outsb
pushf
jnp
sbb
imul
frstor
push
addr16
pop
aaa
repz
movsl
sbb
jge
dec
test
add
bound
or
xor
dec
out
and
add
loope
fnstcw
adc
and
or
pusha
das
push
imul
das
stc
push
inc
mov
pop
push
loope
loopne,pn
inc
pushf
aaa
lcall
adc
out
ljmp
jno
and
xchg
jmp
test
mov
ret
dec
jmp
push
scas
rclb
inc
stos
xchg
inc
push
clc
add
dec
inc
divb
mov
stc
clc
sbb
cmp
push
movsl
cld
xchg
push
call
fidivrs
into
mov
test
gs
cmp
pop
or
xchg
jbe
add
fwait
cmp
xor
adc
mul
scas
nop
push
out
adc
xchg
mov
rsm
xchg
add
int3
push
aam
mov
adc
pop
scas
jb
dec
or
testb
push
dec
dec
push
popa
into
jecxz
add
aam
cmc
xchg
out
adc
sub
mov
sub
ljmp
xchg
ss
in
xor
cltd
pop
or
testl
aad
add
mov
shrl
inc
daa
mov
dec
movsb
or
inc
add
jnp
dec
cli
push
pop
fsubrl
lret
adc
pop
sbb
lcall
xor
and
rolb
sub
jp
mov
test
insl
mov
int
xchg
pop
dec
mov
xlat
xor
fninit
stc
stc
push
call
in
dec
and
pusha
cmpsl
sti
aas
dec
out
pop
push
bound
sbb
arpl
add
and
les
aad
in
pop
mov
jns
shlb
inc
mov
std
dec
dec
loop
ds
adc
les
jne
cld
mov
outsb
mov
mov
fildl
lahf
jecxz
push
call
fldpi
sbb
test
jae
cmp
cmp
cmp
shl
shll
jle
mov
insl
popa
add
jno
dec
xor
adc
ja
jnp
repz
xor
roll
sub
sub
push
out
pop
cs
mov
hlt
nop
scas
add
jbe
mov
dec
loope
cltd
sahf
std
push
mov
scas
push
jno
mov
sub
stos
or
mov
pushf
fnstsw
mov
cmp
test
sbb
popa
je
cli
adc
mov
cmp
lcall
fcmove
mov
pop
sahf
xor
lods
icebp
xchg
jno
aas
jno
repnz
xchg
pop
mov
popf
jp
repnz
dec
stos
addr16
clc
ss
mov
fs
sbb
xor
test
cmc
gs
mov
dec
setno
jmp
sbb
shll
mov
sbb
fldpi
ja
sbb
mov
dec
int
es
into
inc
xor
mov
inc
xchg
xchg
lret
xchg
jle
mov
popl
dec
lds
stos
pusha
and
bnd
cmpsb
mov
sub
pop
jecxz
pusha
xchg
push
mov
xor
pusha
je
jae
ret
pop
testl
mov
pop
ljmp
mov
loop
idivl
mov
movsb
lret
push
cmpsb
jae
pop
pop
inc
icebp
lods
push
jle
xchg
mov
mov
cmc
jbe
sub
adc
add
cmp
inc
in
push
lods
arpl
fisubs
div
mov
insl
pop
push
xchg
fnsave
popf
adc
jl
aam
ljmp
cmpsb
or
loopne
pop
leave
add
push
loopne
adcb
mov
lds
sbb
clc
scas
mov
xchg
mov
aaa
leave
jmp
mov
lds
arpl
mov
adc
sahf
push
add
mov
fnsave
dec
lret
rcl
mov
sub
or
ds
stos
mov
icebp
loopne
push
sbb
adc
jb
mov
pop
mov
nop
mov
jns
pop
mov
jle
mov
sbb
jecxz
and
addr16
xchg
call
sub
xchg
arpl
mov
push
fcmovnb
out
jnp
ror
in
adc
iret
mov
es
in
je
lods
dec
test
les
jne
pushf
cmp
mov
adc
jmp
hlt
rcl
sbb
cmp
rcrb
cltd
notb
pop
mov
dec
dec
ja
sahf
jno
jecxz
dec
js
arpl
lods
sahf
push
hlt
das
mov
daa
pop
xor
in
or
dec
push
dec
jecxz
mov
hlt
xor
sahf
ljmp
decb
loop
jb
push
test
out
sbb
sub
adc
movsb
fcompl
mov
sbb
in
aas
sbb
cmp
jb
jmp
pushf
jl
mov
lret
push
mov
fiaddl
xor
dec
cltd
aad
push
popf
pop
orb
or
enter
jo
hlt
out
jecxz
and
fadds
mov
add
fldenv
inc
rol
in
insb
jne
fwait
mov
sbb
push
sbb
je
in
test
imul
je
mov
adcl
sbb
inc
pop
mov
ret
sub
mov
fbstp
xchg
mov
lds
and
jns
add
push
movsl
xchg
adc
cmc
sbb
jno
jne
popf
xor
jne
ret
jg
rorl
shll
mov
aaa
rorb
loopne
in
jecxz
imul
mov
mov
insl
cltd
mov
orb
call
mov
sbb
jmp
inc
cld
and
xor
sbb
add
inc
push
je
push
cltd
shrl
xorb
jne
repz
push
inc
push
loop
dec
aad
xchg
stos
adc
sub
and
mov
pop
mov
mov
mov
fildll
rclb
shrb
iret
lock
jae
pop
mov
mov
jge
cmp
clc
movq
roll
pop
es
add
addb
das
shl
js
cs
mov
pop
divl
jne
xchg
cs
ret
leave
out
repnz
test
sub
or
loopne
scas
test
repnz
ss
cmc
arpl
cli
jae
addr16
jne
hlt
xor
cmp
movl
adc
movsb
inc
pop
inc
popa
lds
xchg
popf
jmp
and
mov
jecxz
aad
adc
cmp
into
pop
and
fcoml
cmp
mov
mov
sub
pop
xchg
in
adc
mov
lods
pop
jle
and
das
lcall
fisubl
sbb
adc
cld
push
rcrb
push
es
std
mov
ja
test
sbb
xor
leave
das
in
data16
sub
pop
mov
jmp
lds
jae
xlat
outsl
pop
and
and
or
cmc
cmpsl
mov
add
adc
push
jae
es
insl
cld
int
and
popf
rorl
dec
push
ficoms
dec
les
adc
jecxz
int
negb
push
inc
cmp
cmc
outsb
test
push
inc
cs
pusha
fidivrl
mov
icebp
mov
lcall
sbb
arpl
nop
push
and
sbb
rolb
inc
inc
aas
mov
inc
pop
mov
aaa
fadds
mov
es
daa
dec
test
cwtl
mov
fisubrl
icebp
mov
or
and
pop
jge
in
pushf
stc
enter
scas
aad
ss
sbb
or
lret
jecxz
daa
dec
and
mov
jmp
cmp
push
insl
ljmp
and
test
jg
jge
stos
xor
fisttpl
pop
cltd
ljmp
mov
mov
mov
mov
xor
data16
push
add
out
stos
dec
inc
cmp
movsb
scas
pop
mov
stc
inc
push
add
leave
loop
outsl
jne
mov
dec
mov
pop
mov
mov
push
insb
in
jbe
andl
push
scas
push
adc
int3
jno
loopne
lcall
cltd
mov
test
jl
or
mov
std
pusha
rcr
mov
and
and
or
imul
cmpsb
mov
dec
lret
jbe
test
add
rcr
not
subl
and
xchg
mov
and
xchg
cmp
adc
xor
pop
inc
sbb
arpl
pushf
cld
sets
ret
jbe
inc
cmp
fcmovne
aad
and
sub
push
cli
mov
bound
icebp
insl
arpl
aaa
pop
pop
pop
xor
fcomps
inc
or
pop
jno
ret
cli
jb
add
les
jae
inc
ret
inc
into
stos
adc
lock
int
imul
aam
scas
mov
fidivl
cmp
cltd
xor
xchg
js
push
cmp
jnp
mov
pushf
repnz
or
clc
jecxz
inc
mov
sbbl
inc
sub
and
mov
sahf
push
imul
lcall
aad
sbb
mov
imul
enter
sbb
mov
pop
add
mov
push
pop
insl
stos
jmp
mov
jmp
adc
xchg
scas
sub
int3
mov
in
stos
xlat
mov
scas
adc
repnz
movsl
cld
inc
mov
inc
cmp
lcall
xchg
fsubrs
xor
cmp
enter
dec
stos
data16
jl,pn
imul
mov
mov
cmp
inc
lods
push
push
ret
pop
in
lds
pcmpgtb
sbb
test
pop
scas
cs
push
fsubs
and
and
or
cs
cmc
subb
into
push
push
daa
movsl
pop
repnz
bswap
push
push
mov
xor
or
repnz
xchg
lea
imull
sbbl
insb
push
jle
sarb
inc
sti
stos
mov
or
and
out
outsb
jno
mov
and
sub
sub
jecxz
and
out
adc
outsb
je
cs
jbe
pop
push
dec
inc
pop
inc
jg
bound
jp
sub
fdivp
jecxz
scas
test
in
lcall
push
adc
pop
adc
pop
cwtl
jne
xchg
jle
sub
daa
imul
cmp
mov
pop
adc
loope
jbe
cwtl
cmpsl
scas
inc
dec
stos
pop
mov
cmpsb
loope
imul
pop
mov
int
popf
xor
add
shl
inc
mov
xchg
cld
mov
sub
ret
inc
jl
sub
push
jb
mov
icebp
insl
xchg
pop
mov
loope
cmp
mov
xor
pop
cmpsb
and
dec
sub
jbe
xor
push
mov
or
xchg
pop
cmp
lds
fimull
jbe
sbb
leave
call
sarl
push
cmp
andl
lret
es
fwait
jno
insb
test
mov
hlt
and
dec
push
jne
mov
lret
inc
push
sbb
mov
lea
xor
push
std
je
icebp
xchg
cmc
std
sub
jns
jmp
nop
push
js
sub
iret
idiv
sbb
repz
and
stos
push
push
or
leave
ds
mov
es
jl
nop
and
sub
notb
sahf
mov
test
fstps
mov
cli
sbb
rcrl
xchg
push
mov
and
addr16
jmp
imul
hlt
jnp
push
pop
mov
adc
popf
call
sbb
adc
jecxz
repnz
popf
rorb
shlb
hlt
daa
add
scas
stos
scas
insl
mov
mov
loop
das
ja,pt
jbe
sahf
mov
addl
pusha
xchg
int
ret
out
dec
pop
adc
inc
ficoml
fsubl
and
sarl
sbb
fldcw
dec
call
mov
ret
jnp
sbb
mov
clc
xchg
jbe
lock
lds
cmp
jg
ja
mov
imul
push
mov
and
xchg
in
icebp
dec
push
popa
mov
pop
inc
pop
xor
xlat
jns
testl
aam
js
mov
add
fsubrs
shll
test
and
aad
repz
in
jno
fidivrl
jp
mov
nop
in
pop
les
sbb
inc
in
test
cltd
out
jb
mov
push
push
nop
mov
lea
jg
icebp
cltd
jle
mov
insl
ljmp
sub
in
mov
out
mov
cmpl
int3
test
mov
push
fadds
push
movsb
mov
add
push
imul
mov
ficoms
outsb
and
or
shll
cltd
pop
mov
imul
or
data16
daa
mov
cltd
rcrb
mov
mov
sub
cwtl
and
push
loope
or
test
dec
mov
jle
in
dec
sti
fcom
testb
cltd
ds
xor
pop
in
push
aam
jmp
xchg
push
add
add
rcll
ret
push
jbe
movsb
push
jecxz
cmc
fistps
xchg
cmp
xor
mov
frstor
in
cmpsl
cmpsb
inc
loop
push
push
and
dec
and
add
int3
sub
dec
enter
adc
roll
pop
pop
call
pop
jo
jo
stos
or
inc
cmpsb
add
jne
popf
jnp
ret
icebp
jmp
stos
cmp
pop
cltd
mov
pop
ja
jle
dec
adc
mov
xchg
aad
and
popa
enter
pop
push
outsl
and
lock
xchg
or
mov
sbb
mov
mov
pop
es
dec
dec
dec
out
sahf
aad
mov
popa
mov
pop
cltd
sti
stc
mov
mov
or
popl
xor
cmpb
mov
imul
movsl
push
in
inc
sbbb
insl
sti
inc
adc
jo
stos
xchg
push
push
ljmp
mov
arpl
in
adc
imul
loopne
popf
sbb
aas
add
mov
out
repz
mov
leave
xor
push
mov
add
jge
insl
sbb
popf
jnp
stos
in
data16
jle
nop
mov
imul
mov
push
push
sbb
pop
in
gs
xchg
movsb
sub
xchg
inc
testb
cmpsb
cmpsl
je
push
aad
imul
mov
mov
cmp
push
push
imul
leave
add
dec
loope
xchg
xchg
mov
fisubrl
inc
stos
push
test
in
loopne
sbb
sbb
movsb
fcomip
arpl
push
inc
fisttps
cmp
popa
and
dec
testl
dec
mov
mov
xchg
ss
lret
dec
popa
fcoml
test
lods
adc
sbb
out
adc
insb
outsl
std
xor
push
outsb
mov
dec
inc
dec
adc
movsl
cli
mov
fs
adc
pop
call
inc
inc
jge
out
sarb
mov
sub
je
push
pop
cld
dec
inc
push
in
push
inc
add
mov
mov
pop
xchg
mov
xchg
lahf
in
adc
sub
mov
jne
cmp
xor
sbb
mov
push
imulb
insb
add
test
cmpsl
insb
push
sbb
pop
jge
cmp
jmp
cwtl
jmp
in
in
add
mov
sbb
sub
jl
or
leave
loope
inc
jmp
leave
fmul
cli
lret
fisttpl
insl
outsb
adc
shlb
jno
mov
shr
out
test
subb
fnstenv
push
cmpsl
sahf
push
adc
mov
std
dec
cltd
adc
mov
dec
dec
cmp
cmpsl
subl
mov
std
and
sbb
adcb
pop
adc
arpl
daa
sbbl
and
ret
mov
call
rolb
adc
add
push
stc
add
adc
sbb
outsl
data16
sahf
icebp
mov
push
divl
leave
dec
idivb
sub
sub
andl
xchg
jns
adc
mov
sbb
lock
mov
xchg
out
dec
aad
or
push
lret
test
mov
jle
add
js
loopne
enter
jecxz
rcl
sbb
test
clc
inc
fisttpll
ss
add
adc
sub
lods
xor
push
sbb
xchg
popf
clc
add
movsb
jb
testb
scas
ss
push
pop
xor
leave
mov
shll
and
jb
xor
movsl
jae
in
movsl
cld
pop
shrb
sub
adc
int3
nop
cmp
inc
pop
loope
cltd
imul
mov
mov
fldenv
sbb
push
xlat
push
mov
cmpsb
and
mov
inc
addr16
icebp
adcl
mov
stos
lods
je
or
push
xorb
xchg
gs
cmp
popa
sbb
mov
cs
xchg
mov
push
rcrb
sbb
push
xchg
orb
imul
int
sub
xor
in
push
outsb
xchg
lcall
cmp
scas
and
mov
pop
push
mov
cmp
or
mov
mov
rcll
or
jle
loope
add
jp
fstpt
and
mov
lret
insl
mov
xor
jmp
js
mov
js
or
stos
sub
outsb
gs
add
pushf
jecxz
ja
or
jmp
call
xchg
es
sbb
jno
loopne
and
sti
ffreep
ja
addr16
ret
cwtl
mov
push
lcall
cwtl
pop
cli
pop
add
xor
cmp
push
roll
xchg
rcr
or
rclb
cmp
test
jmp
insb
and
lds
jbe
mov
jnp
cwtl
bound
std
fmull
clc
rol
inc
sub
shr
sarl
add
cmpsl
sbb
test
or
xchg
adc
and
xchg
lods
in
and
inc
xchg
mov
jbe
adc
aam
jo
push
inc
sbb
xchg
into
xor
sbb
sub
fnsave
jo
pop
or
rorl
pop
add
mov
fisubrs
fstl
icebp
jno
push
cli
cmp
jle
jo
aas
icebp
jnp
int3
iret
stos
adc
fldenv
aad
push
or
gs
jecxz
js
std
sub
xchg
movsl
adc
ret
add
test
inc
aas
pop
mov
mov
scas
in
data16
mov
ljmp
ror
jnp
cwtl
les
rcl
int3
sub
mov
and
mov
push
mov
lahf
or
dec
iret
cmp
jnp
sub
lds
add
ret
mov
out
inc
aam
inc
loope
inc
repnz
bound
xchg
lcall
leave
push
mov
nop
inc
aam
aam
lods
divb
sub
dec
inc
cmp
jnp
jb
mulb
ret
sbb
xlat
sbb
xor
aad
mov
sbb
ret
mov
mov
pusha
adc
add
inc
dec
aas
add
mov
nop
imul
loope
adc
scas
push
xor
cmp
inc
xor
addr16
aad
gs
adc
push
pop
push
data16
ss
mov
test
stos
test
pop
xor
dec
cmpsl
jnp
xlat
scas
sbbl
mov
mov
pop
push
fwait
cmp
push
orb
stos
jge
lahf
mov
add
jnp
mov
test
movsl
shll
inc
add
out
ds
cmp
pop
fcoml
jnp
mov
fiadds
shrb
fisttpl
fidivrs
ret
jp
les
mov
fs
mov
mov
faddl
jp
mov
jnp
sbb
cmp
cmpl
mov
xchg
imul
adc
pop
jge
push
iret
js
mov
in
mov
xchg
xchg
pop
bnd
cmp
cmp
mov
and
subl
push
and
cmp
pop
pop
imul
jno
sbbb
cmpsl
inc
out
jb
mov
sub
sub
and
lcall
jecxz
cld
sbb
lret
stc
roll
mov
adc
cmpsl
sbb
bound
imul
xchg
sbbb
mov
xchg
push
mov
cmp
es
xchg
sub
pop
jge
mov
mov
les
jno
sahf
inc
rol
in
adc
imulb
inc
mov
mov
mov
mov
lahf
fiadds
leave
movsl
mov
dec
push
xchg
popf
adc
push
add
ret
mov
xchg
stc
and
movsl
mov
xchg
movsl
jg
pop
cltd
movsb
dec
stos
or
inc
jo
mov
adc
inc
pop
out
icebp
outsb
jne
test
stos
adc
test
dec
sarb
jg
ret
sbbb
lcall
lea
xchg
add
cmp
xchg
or
out
out
insb
hlt
insb
std
insb
pop
push
shrb
aaa
ds
xor
lods
or
in
jae
mov
arpl
fldl
addl
xchg
aaa
enter
notb
lret
cs
dec
mov
mov
imul
outsl
shrl
repnz
test
lea
inc
repnz
call
shlb
push
es
subb
insb
sarl
call
mov
out
aaa
lock
add
mov
mov
adc
pop
or
nop
adc
jnp
repnz
mov
js
addr16
lret
cmp
jno
lea
xor
or
jp
mov
pop
and
pop
dec
jp
pop
fdivs
andb
fisttpl
movsl
les
mov
ds
mov
in
pop
and
xchg
sub
inc
pxor
insb
pop
xor
ss
cmp
jae
push
cmpsl
popf
or
andl
jl
aam
popf
and
outsb
subl
popa
adc
lods
xlat
sub
dec
scas
and
jp
xchg
mov
and
test
cmc
pop
loope
jecxz
xor
ja
jmp
cmp
dec
pop
lds
cmc
imul
jbe
pop
push
mov
xchg
mov
dec
push
push
out
in
sub
daa
inc
jp
scas
add
movsl
stos
dec
aad
or
aas
inc
das
cmp
popa
add
movsl
lret
add
repz
stos
movsb
stos
cmpsl
xor
lods
ror
jl
pusha
sti
cld
addr16
mov
rol
sbb
insl
xor
repz
jno
cmp
dec
das
jbe
icebp
xor
cmp
pop
mov
sbb
cltd
ljmp
mov
cmpsb
cltd
adc
imul
sub
outsb
sbb
fcoml
movsb
pop
test
test
dec
lahf
xor
aas
mov
sar
sub
out
lock
lds
jo
push
sub
leave
push
or
mov
and
leave
insl
pop
cmpsb
xlat
pop
pop
or
cli
cmp
pop
scas
mov
pop
scas
mov
mov
sub
xchg
pop
idivb
lret
roll
lds
call
xchg
add
aam
mov
loope
cmpsl
push
jns
push
push
adc
xor
repnz
add
fadds
sbb
shlb
push
mov
push
andl
and
jp
aad
out
or
push
jmp
out
idivl
lds
push
mov
imul
stos
mov
jmp
idivb
or
inc
dec
push
adc
add
pop
cmp
xor
xchg
nop
pusha
out
int3
fidivs
test
sbb
int
cmpsb
pushw
sti
mov
mov
inc
stos
outsl
gs
cli
and
mov
aad
rorb
loop
mov
rcrl
mov
pusha
sub
sbb
mov
mov
into
or
insb
cmp
xor
testb
mov
push
xlat
sbb
out
sub
jmp
stc
rcrl
cmp
cmpsl
jb
lods
ljmp
lods
outsl
gs
sbb
jbe
fmull
insb
idivb
pop
cmp
test
jg
xchg
cmp
repz
outsl
popf
and
cmp
lret
cs
outsl
sahf
sub
popa
movsb
jb
mov
in
xchg
test
add
mov
aaa
int
pop
outsb
jne
shrb
xlat
add
lret
mov
xchg
pop
je
subl
rcrb
cmp
xchg
scas
mov
dec
mov
push
cmpsb
adc
xlat
dec
jg
into
push
sbb
lock
gs
jno
push
loope
mov
or
jae
or
ljmp
fidivrs
jnp
in
mov
add
in
jg
adc
fdivrl
add
leave
inc
adc
mov
loopne
inc
pushf
jb
xorb
mov
and
aaa
push
mov
ret
mov
js
push
push
inc
loopne
clc
sahf
or
ret
ljmp
xchg
call
test
loop
pop
movsb
inc
dec
stos
mov
std
xor
and
pop
or
ret
ret
outsb
inc
lret
leave
rcll
aam
pop
cli
inc
loope
ja
xchg
inc
fwait
jp
sbb
in
out
test
cmc
jno
jg
loop
push
or
cmp
add
sub
and
cmp
movsb
inc
add
add
xor
imul
push
les
push
xchg
or
sbb
sbb
stos
inc
fmull
xchg
pop
sbb
or
inc
xchg
or
aas
pop
roll
push
inc
daa
pop
arpl
adc
and
dec
and
inc
inc
nop
and
mov
xor
xchg
out
pusha
mov
mov
std
mov
fistpl
mov
rcll
dec
xchg
into
in
cmp
jge
mov
pusha
outsb
xor
pop
pop
loope
xor
xchg
inc
ja
adc
cmp
push
incb
clc
cmc
sub
inc
ss
xchg
fsqrt
cmp
add
int3
adc
insb
inc
jle
cli
call
sbb
pop
lock
nop
sarl
daa
rolb
leave
mov
pusha
sbb
or
out
sbbl
jp
push
adc
mov
dec
jecxz
data16
cld
jns
out
daa
pop
mov
sti
sbb
mov
cmp
jbe
out
dec
sub
and
mov
repnz
test
aaa
add
frstor
push
cmpsb
mov
sbb
arpl
pushf
cs
fwait
push
pusha
cltd
push
rorl
and
dec
dec
dec
out
pop
popa
push
and
aaa
into
mov
push
les
cmp
jg
jno
jno
xchg
add
fwait
sar
stc
sahf
dec
int
push
jmp
cmp
lods
stos
aad
push
in
jp
andl
negb
lods
xor
outsb
inc
int3
xchg
fs
ret
jge
and
js
jle
cltd
aas
mov
pop
mov
sub
adc
dec
mov
mov
popf
je
push
fstpt
jge
dec
push
test
sbb
lahf
repz
cli
les
push
mov
sarl
xor
and
adc
cmp
scas
aaa
mov
sbb
pushf
insb
mov
cmpl
js
pop
ljmp
sbb
pop
loopne
xchg
adc
dec
sub
scas
pop
cld
pop
pop
adc
mov
repnz
cli
sbb
mov
cmc
jnp
and
mov
push
push
xchg
xchg
add
mov
inc
push
pop
popa
sbb
dec
mov
int3
movaps
mov
xchg
push
out
mov
stos
adc
sub
rorl
insl
std
or
xor
ljmp
adc
clc
fdivrp
gs
push
cld
and
and
xchg
dec
aad
push
testw
inc
test
aad
nop
test
fnsave
sahf
jae
ffree
std
xchg
mov
ljmp
daa
test
in
in
addr16
dec
inc
push
xrelease
sbb
push
lcall
dec
push
aad
or
push
dec
ja
mov
paddusw
mov
xchg
lret
add
pushf
pop
push
xchg
das
mov
push
test
push
enter
in
and
test
and
and
stc
sub
sahf
ljmp
insb
add
xor
pop
sbb
and
stos
cmp
sub
xchg
push
or
jb
and
notb
jae
pop
stc
mov
or
and
xor
xor
cltd
je
ret
aam
push
jne
loope
je
add
dec
andl
popf
xor
push
jb
dec
imul
das
ss
into
sbb
and
and
jg
jp
dec
mov
dec
add
clc
mov
mov
xchg
jge
pop
loop
mov
out
cmp
cwtl
dec
mov
test
lock
dec
jg
outsb
push
adc
and
aaa
add
xchg
test
mov
js
push
jo
loope
mov
dec
mov
push
mov
adc
mov
fcomp
enter
shlb
lods
fsts
jb
lcall
mov
jo
xchg
cmp
dec
pop
outsl
cs
pushf
dec
scas
pop
imul
xor
inc
and
jnp
cmpl
dec
jp
lods
ret
lock
mov
leave
adc
mov
mov
rcrb
sbb
pop
sbb
mov
cwtl
add
and
jp
lcall
inc
nop
mov
imul
popf
cmpb
dec
mov
ljmp
out
imul
mov
addr16
movsl
pop
push
cli
xchg
andl
lret
push
push
push
std
cwtl
orl
jnp
sbb
lea
daa
xchg
mov
out
inc
and
mov
fnstenv
mov
cmp
popf
ss
and
popa
movsl
lods
mov
jl
inc
sbb
xchg
cmp
call
mov
dec
fs
lcall
push
scas
adc
sti
bound
sub
ret
mov
mov
mov
pusha
jno
aaa
sbb
loope
fistpl
adc
int
cmp
or
mov
out
push
dec
aaa
nop
aam
cmpsl
int3
adc
mov
in
cmpl
cli
lret
sub
ja
testl
popa
lds
subb
aaa
daa
xlat
xchg
inc
sti
or
sub
xchg
cmp
mov
fdivs
fdiv
inc
adc
icebp
daa
dec
dec
pop
jle
sub
sub
neg
mov
setb
mov
sahf
mov
or
sub
ja
mov
pop
shr
lcall
jnp
jnp
nop
ficompl
mov
jmp
jg
mov
pop
imul
hlt
or
out
ret
dec
mov
xor
lahf
jae
out
fs
jmp
rclb
outsl
add
daa
das
out
sub
les
sbb
xchg
mov
sbb
dec
clc
push
enter
mov
ffreep
xor
sub
insb
test
rclb
cmpsl
and
jmp
out
fcmovbe
and
or
ret
jmp
mov
test
push
add
scas
jge
bound
lcall
mov
in
iret
std
and
fcoms
pop
push
push
repz
jecxz
in
ljmp
push
jle
movsb
or
aad
pop
mov
cmpl
cld
sti
push
jl
ret
push
je
inc
lock
jb
sub
sbb
sbbl
add
into
loopne
push
outsb
inc
stc
mov
scas
test
in
in
test
xchg
mov
mov
mov
mov
enter
cli
cmpsl
lock
inc
cmp
push
jno
imul
and
xchg
out
in
xor
and
ret
loopne
mov
xor
fwait
iret
mov
mov
loop
mov
nop
sbb
lea
dec
sahf
je
push
cmpsl
out
fucomp
pop
enter
lret
lahf
pop
sub
icebp
je
lcall
imul
fistps
imul
xor
sbb
inc
pop
sbb
test
xlat
pop
sub
jo
test
sarb
dec
into
push
push
cmpl
push
test
push
addl
es
pop
adc
mov
mov
dec
add
xchg
xchg
or
pushl
movsl
out
aam
or
gs
idivl
jns
dec
push
inc
cli
xlat
push
fdivl
insb
cmp
xchg
push
fwait
scas
xor
pop
adc
fwait
pusha
inc
or
jge
fisttps
test
pop
mov
repz
jne
loop
push
imul
addr16
and
cmp
int
push
movsl
sub
fwait
cmp
in
pop
scas
sub
faddp
mov
jmp
mov
pop
sub
xor
cmp
pop
fdivr
adc
lret
nop
or
sub
popf
lods
inc
test
stos
and
cmpsl
fisttpll
xor
testb
xlat
pop
sbb
sbb
and
lret
mov
shll
xor
sarl
add
std
cmc
pushl
mov
inc
and
out
pop
jb
xchg
popa
inc
pop
leave
cmp
popf
repz
xchg
or
dec
inc
pushf
xor
pop
jo
or
stc
cmp
subl
lock
addr16
pop
ret
in
jne
adc
cld
jne
xchg
inc
cmp
mov
adc
aam
pop
ds
repz
ficompl
push
sub
mov
mov
sarl
clc
push
push
clc
leave
mov
dec
out
lret
or
push
mov
nop
pop
or
fwait
mov
movsl
push
cmpsl
jne
fnstenv
jno
enter
icebp
adc
cs
push
ljmp
repz
fs
xor
add
and
fdivl
bound
popa
cmpsb
popa
testl
jbe
cmc
mulb
popl
daa
mov
push
fwait
mov
fwait
mov
cmp
jns
int
lock
xchg
cmpb
neg
insl
adc
inc
in
dec
adc
dec
movsl
xchg
out
out
or
loop
in
test
ret
divb
mov
pop
ficomps
stos
xorb
test
jp
adc
pop
test
rorb
lea
stc
dec
xchg
jae
data16
adc
jb
mov
ljmp
xor
xor
scas
jb
push
xor
mov
loopne,pt
sar
loop
mov
cmpsb
jp
imul
mov
jp
je
pushf
sahf
cmp
int
mov
xor
jecxz
call
imul
mov
mov
mov
sti
inc
jnp
mov
pop
or
pop
lcall
lds
jp
pop
xchg
test
fsubs
sub
std
xchg
hlt
mov
lahf
stos
xchg
xor
jle
sahf
and
stc
sub
pop
sub
das
repnz
push
rorl
jnp
scas
pushf
push
pop
lea
sub
fiadds
pushf
xlat
xchg
out
push
jecxz
cmp
add
popl
bound
shrl
jo
movsl
xchg
mov
sub
mov
sti
daa
leave
sub
xor
inc
cmp
cwtl
popa
cmp
sbb
insl
mov
icebp
ljmp
push
inc
out
mov
movsl
aaa
cmpsb
insb
sub
mov
imul
dec
cwtl
dec
test
lods
jns
addr16
iret
lcall
jge
xlat
mov
xchg
inc
and
or
lea
daa
and
push
ljmp
pop
xchg
sub
jns
pusha
add
push
in
outsb
cmp
loop
xchg
and
mov
dec
fistpll
lahf
dec
mov
adc
in
and
std
pop
mov
adc
nop
icebp
mov
andb
mov
ret
pop
std
lods
cmp
xlat
repz
sbb
dec
popa
sub
mov
xor
daa
cmp
out
sti
mov
loop
jecxz
dec
out
cmc
pop
or
adc
add
xchg
mov
mov
jae
aam
cmpsl
sub
mov
inc
mull
hlt
or
or
push
sahf
lock
fwait
cmpl
cmp
mov
jle
movsb
dec
cmp
cmp
push
movsl
push
popa
mov
popa
loopne
pop
ret
mov
cltd
or
lahf
iret
idivl
cmp
lret
idiv
lea
jle
pop
dec
push
ljmp
arpl
scas
push
rcll
sub
add
mov
test
sub
jge
cmpsb
dec
adc
and
icebp
adc
les
imul
sub
mov
les
mov
cmp
fisubrs
sub
orl
mov
cld
cli
push
dec
sbb
outsl
stos
sub
xchg
mov
mov
stos
fsubrl
les
pop
jmp
paddd
scas
stos
imul
mov
popa
cltd
jp
out
inc
adc
stos
push
mov
lahf
jg
ret
and
bnd
pushf
mov
test
inc
or
in
pop
sbb
xchg
cmp
in
sbb
adc
mov
sub
pop
enter
pop
cvttps2pi
xchg
cs
jle
push
je
sahf
push
or
sbb
rcll
fmuls
lahf
scas
aaa
sahf
dec
leave
jno
xchg
test
jecxz
mov
mov
cmp
test
sti
mov
push
int
cli
cmc
inc
fwait
push
ds
ja
pop
jecxz
push
jmp
subl
jo
push
add
int3
imul
mov
xor
insb
xchg
outsb
and
push
aad
pop
ja
mov
mov
imul
fs
mov
scas
adc
out
inc
push
mov
scas
iret
xchg
loopne
aaa
in
ljmp
shl
mov
jb
rolb
dec
int
cmpsl
push
xlat
mov
in
inc
cmp
les
adc
adc
pusha
bound
and
daa
icebp
bound
movsl
dec
push
sub
lret
cmp
mov
pop
xchg
lods
hlt
pop
sub
pop
cmp
ficomps
mov
in
sub
aas
jp
push
imul
in
and
andb
mov
js
pop
nop
mov
inc
imul
out
ret
shlb
cmp
gs
add
aad
les
daa
add
icebp
leave
leave
repz
mov
call
in
push
into
jmp
rolb
cmp
dec
pop
movsb
dec
icebp
in
je
mov
or
int
clc
dec
inc
fidivs
nop
adc
push
xchg
pop
scas
xchg
sarl
jge
cmpsl
mov
movsb
ds
mov
mov
mov
lods
add
rorl
test
pop
jp
out
push
mov
inc
cmp
push
aaa
aas
jle
sub
int
mov
dec
dec
into
fsub
stos
popa
pusha
gs
jns
lahf
mov
lahf
daa
loop
or
cmp
test
loopne
je
pop
pushf
pop
rcr
sbb
xor
inc
ja
inc
std
sub
inc
inc
jb
sbb
ret
icebp
ljmp
add
stos
cmpsb
or
aam
int
imul
xor
cli
les
leave
in
pop
pop
xor
imul
cmp
movsb
or
rclb
fnstsw
sbb
inc
sbbl
outsb
mov
mov
mov
jle
in
push
inc
int3
and
jp
xor
fcomp
mov
lods
ds
pusha
or
imull
mov
nop
inc
sahf
cmp
inc
dec
push
test
add
sub
scas
xlat
mov
xchg
call
out
or
and
mov
push
shrb
and
cwtl
push
int
inc
test
mov
sbb
jo
jmp
outsl
repnz
loop
sub
adc
cmp
or
rcrb
pop
dec
jne
in
push
pop
scas
loope
xchg
mov
xor
movsl
pop
lahf
out
push
lret
push
jbe
push
push
pushf
and
or
in
insb
lahf
iret
sbb
mov
jno
add
xchg
popa
jg
repnz
out
arpl
push
rclb
jae
mov
jns
and
sub
popf
sub
or
rol
mov
call
sbb
insl
sub
addr16
push
aam
push
sub
jne
arpl
loope
testb
faddl
ds
sarb
mov
scas
dec
inc
lcall
pop
das
jecxz
jp
and
out
adc
in
jle
pushf
lahf
call
shrl
push
add
mov
aam
ss
sbb
data16
lods
cli
popf
or
jae
mov
int3
stos
rorl
inc
mov
sbb
leave
and
or
bswap
mov
int3
cs
mov
push
sbb
mov
mov
mov
jmp
adc
hlt
xor
mov
xrelease
push
sub
into
and
int3
sub
arpl
jo
sbb
cli
or
enter
js
sub
or
arpl
xor
gs
push
outsb
inc
mov
cwtl
iret
jge
es
popa
sub
push
in
pushf
add
mov
jbe
push
sub
xor
xchg
mov
push
add
mov
push
outsl
mov
xchg
push
push
stc
inc
arpl
and
fiadds
neg
xor
fisubrs
test
inc
xchg
movsl
push
loop
fs
in
fdivl
push
inc
and
mov
jmp
daa
dec
mov
dec
out
sub
or
cli
pop
sub
jnp
jne
ss
arpl
test
add
incl
lock
cld
jnp
sti
jne
xor
lret
jnp
pop
or
and
loop
mov
lret
inc
nop
mov
cwtl
cmp
shl
jl
int
std
je
sbb
sub
mov
fcompp
and
mov
inc
mov
ljmp
inc
aaa
rorb
lods
sub
push
mov
pop
inc
or
stos
scas
sbb
fs
cs
jge
aad
add
lret
or
add
ljmp
jmp
dec
lock
and
inc
adc
cmpsl
or
sub
push
pop
push
hlt
ss
icebp
fwait
jge
lods
mov
mov
mov
mov
xchg
iret
hlt
mov
testl
mov
dec
and
xchg
push
xor
jge
pop
jg
and
mov
xchg
jae
loope
xchg
mov
into
xor
pushl
sbb
sbb
dec
shl
dec
adc
stos
jecxz
sub
in
fdivp
add
mov
sti
data16
out
cld
sbb
cmp
movsl
mov
lcall
loopne
jo
mov
jne
iret
jecxz
xor
sar
cmp
data16
mov
stos
xlat
fsubs
out
sub
and
dec
sti
psadbw
sub
movsb
add
repnz
add
xlat
jbe
xor
jl
test
sti
xchg
cs
sbb
inc
add
xchg
mull
shl
and
repnz
mov
pop
shll
call
fstp
cwtl
mov
mov
test
sbb
inc
outsl
sub
mov
dec
scas
add
mov
cmp
mov
ds
lcall
mov
pop
movsb
fisttpll
xchg
inc
inc
push
and
pop
xor
push
shll
aad
adc
in
push
add
sub
push
jbe
dec
dec
dec
icebp
test
push
mov
jecxz
inc
inc
lahf
push
mov
and
lea
jo
and
sbb
stos
out
leave
pop
add
insb
mov
sub
outsl
pop
pop
dec
sti
testl
popf
jp
inc
roll
das
push
in
inc
js
jecxz
dec
xor
add
roll
jmp
cmp
mov
fidivrl
addr16
int
mov
stc
scas
bound
mov
in
aad
imul
sarb
ret
imul
jne
inc
jg
push
outsb
jl
xor
push
pop
inc
and
lock
push
fwait
adc
arpl
ljmp
push
fcomp
xor
mov
bound
push
popf
inc
and
icebp
cwtl
sbb
or
lods
shlb
mov
pop
aas
sub
sbb
jmp
rorl
dec
cmp
jg
ds
aam
xor
inc
jns
mov
into
dec
fidivrl
in
repnz
push
das
out
test
mov
es
mov
push
jl
dec
iret
mov
jg
sarb
repz
enter
dec
fidivrs
cs
adc
push
xchg
mov
cmp
pop
data16
jnp
call
nop
std
push
test
fisttpll
fwait
outsl
sbb
pop
cmpsl
dec
shll
xor
and
mov
xor
xor
lea
jb
mov
cmpb
cmpsb
mov
add
je
mov
iret
into
adc
fbld
pusha
mov
cmp
outsl
cmc
ja
pop
and
fsubs
clc
popf
sbb
mov
in
nop
jge
mov
dec
and
rcr
inc
aaa
sahf
negb
adc
mov
adc
call
scas
xor
std
mov
unpcklps
xchg
in
xor
dec
mov
sbb
dec
sub
nop
xor
int3
gs
mov
into
shrl
adc
ja
test
push
xchg
cmp
outsl
pop
mov
lret
xlat
sbb
push
xor
leave
rcrl
out
mov
pop
stc
jbe
sbb
stos
cmp
sbbl
mov
popa
pop
pop
jns
add
enter
sub
inc
andl
fidivrl
fdivrs
loopne
mov
mov
bound
sbb
jne
repnz
lahf
daa
ja
popf
insb
pop
fistpll
jne
lods
shl
rorl
inc
xchg
push
pop
outsb
inc
cmp
mov
sub
jl
pop
pusha
jbe
push
cmpsb
mov
call
pop
xor
inc
mov
mov
out
mov
mov
inc
pop
cwtl
icebp
lahf
sbb
mov
cmpsl
stos
stc
mov
dec
lret
or
sub
adc
scas
in
sbb
daa
jmp
lahf
xchg
mov
xor
es
enter
add
out
xor
fnsave
lret
push
in
xchg
lahf
ds
mov
daa
hlt
iret
inc
loop
fiadds
push
adc
fwait
imul
sub
bound
cld
jecxz
mov
das
int
mov
mov
lcall
not
xchg
hlt
es
ljmp
push
movsl
cmp
lods
lret
in
iret
push
rcll
mov
js
lret
sbb
mov
lods
mov
xchg
jg
movb
jecxz
or
icebp
sbb
xchg
lds
mov
xchg
into
xchg
push
cmp
dec
gs
cwtl
pop
inc
xchg
pop
xlat
outsl
or
sbb
mov
jne
dec
inc
xchg
jmp
or
fiaddl
inc
mov
je
repnz
lahf
ret
int
jl
pop
inc
not
rcl
adc
inc
mov
adc
cmp
cld
loop
jl
outsl
sbb
xlat
mov
in
shll
data16
and
lcall
mov
mov
fcmovnb
fstl
mov
aaa
lcall
pop
cmp
pop
movsb
lahf
cmp
stos
sahf
sbb
xor
jp
pop
icebp
out
push
jge
sbb
sub
cmpsb
add
enter
xor
xchg
push
cmc
stc
fwait
lock
add
dec
es
cmpsb
cwtl
movsl
sbb
mov
fsubrl
xchg
cmp
dec
sarl
jle
in
mov
mov
or
xchg
shl
je
cmp
pop
inc
into
push
in
movl
dec
sub
or
pop
pop
sti
inc
jle
mov
outsb
lret
mov
aad
out
or
out
scas
daa
cmp
jo
dec
xchg
mov
push
fdivp
fwait
sbb
adc
clc
ficoms
inc
mov
jb
ljmp
mov
xchg
or
sbb
jecxz
sarb
lock
xchg
in
ret
arpl
jno
fbld
and
and
loopne
mov
dec
std
negl
push
int
pop
mov
adc
xchg
push
or
and
adc
int
imul
sbb
insb
movsb
lods
lret
enter
int3
inc
jns
push
or
test
dec
sbb
lahf
jl
das
add
and
dec
dec
or
or
add
gs
sbbb
dec
icebp
xlat
pushl
dec
jo
mov
dec
jle
test
jb
in
pop
and
je
xor
jb,pt
adc
mov
fimuls
cld
dec
inc
adc
xor
sbb
dec
lds
cltd
loopne
loop
sub
jnp
adc
xor
inc
cmp
xlat
je
jnp
push
inc
push
sbb
movsb
push
or
in
adc
std
mov
call
mov
dec
xchg
in
popa
shrl
mov
js
mov
loope
or
mov
dec
xchg
pop
int
add
mov
pusha
or
push
dec
cltd
mov
inc
jns
andb
in
ljmp
rcl
cmc
mov
inc
jmp
loope
cmp
cmp
push
pop
adc
sub
imul
push
push
stos
mov
sub
xor
les
push
pop
shll
cld
inc
pusha
push
lret
sub
lea
mov
push
loop
ja
cmp
add
jg
and
sub
test
les
stos
mov
push
fildll
sbb
test
stc
sbb
mov
loop
adc
fldl
fisubrl
insl
xorb
adc
pop
mov
daa
or
ja,pt
inc
scas
or
push
cmp
xchg
xchg
sub
sub
dec
popa
pop
insb
add
fimull
clc
movsl
fstpt
mov
xor
pop
out
aam
ss
push
inc
insb
mov
xchg
mov
rorb
jo
fnstcw
dec
loop
xor
shrb
push
scas
push
push
mov
je
mov
xchg
and
es
ffreep
dec
mov
loope
popa
mov
push
into
lods
movsl
mov
dec
and
idivb
lea
hlt
adc
daa
and
mov
push
push
mov
test
fsubl
or
sub
jae
mov
imul
pushf
xor
xor
mov
jmp
enter
push
mov
mov
hlt
loope
hlt
add
xchg
sahf
xchg
data16
xor
into
popf
bound
popf
push
or
movb
xor
cmp
or
jns
adc
imul
xor
lret
dec
lds
xor
push
popa
dec
xlat
int
gs
ds
sti
or
mov
scas
pop
lock
push
jae
adc
shlb
scas
jge
pop
pop
push
inc
jne,pn
xchg
jbe
sbb
repnz
xor
fldenv
inc
or
int3
aas
xor
popa
adc
filds
lret
xor
mov
push
out
into
cmp
andl
test
cmp
cwtl
jae
loopne
xchg
sbb
ja
imull
or
fisttpl
mov
ja
loope
lret
xchg
hlt
leave
int3
push
addl
cs
mov
push
jnp
pop
jg
das
pop
push
xchg
inc
xor
popf
daa
add
pusha
rolb
inc
or
ret
cwtl
lahf
dec
out
lret
hlt
pop
popa
push
int3
xlat
pop
add
pop
aad
sbb
lcall
notb
iret
gs
movsl
push
cs
jmp
dec
mov
jne
out
mull
pop
pusha
dec
sbb
mov
xchg
sahf
xlat
or
ss
loope
mov
movl
cld
imul
mov
mov
pop
movb
xor
cs
ljmp
sbb
jns
xchg
je
js
cmpsb
ja
push
punpckhbw
cmp
sub
add
test
push
mov
mov
mov
xchg
jle
out
xor
xchg
pop
movsb
inc
imul
clc
cmp
adc
push
jge
fimuls
push
mov
addr16
and
imul
les
adc
loope
mov
cwtl
lret
rcll
gs
push
fstpl
imul
test
jp
and
push
jg
out
dec
mov
xchg
fsubrl
imul
js
repnz
mov
ds
and
mov
xor
shl
push
cmp
dec
mov
jmp
mov
scas
mov
push
fdivl
jle
fcompl
stos
mov
mov
les
lods
imul
sbb
leave
sub
dec
mov
xchg
cmp
inc
add
inc
inc
arpl
ds
fucomip
push
lds
cltd
ds
popa
rcl
aas
fs
iret
bound
xchg
arpl
jbe
xchg
sub
dec
pop
xchg
mov
in
jp
mov
pop
int
insl
pop
pop
pushf
and
std
mov
sbb
xor
aad
outsb
mov
mov
pop
sahf
insb
sub
cmp
xor
dec
cmpsl
rcrb
inc
push
into
fnstsw
xchg
sub
mov
sub
int
and
daa
aaa
sub
pop
cld
pusha
or
repnz
mov
mov
outsb
sbb
cld
ret
add
mov
and
sbb
mov
sbb
pop
popf
incl
dec
dec
xchg
pop
int3
inc
pop
xor
xor
sbbb
push
scas
jo
clc
mov
insb
in
adc
adc
repnz
shrb
loope
mov
lcall
mov
jle
inc
add
aaa
jbe
or
cmp
testl
or
das
orl
aaa
cmpsl
or
push
and
sbb
jg
scas
cmovno
and
stos
inc
lods
sbbb
int
sub
push
xor
pop
push
loop
xor
mov
pop
out
push
mov
sub
xchg
adc
int
cmp
cmc
xor
das
jns
xchg
push
rorb
in
jle
shrb
push
cmp
fcmovnbe
decb
add
mov
lds
repnz
cmp
int3
adc
xchg
mov
bound
jg
dec
lcall
xchg
dec
sti
in
pop
adc
mov
sbb
repnz
add
pop
jp
mov
push
sub
in
xchg
mov
pop
scas
xor
aam
out
cmp
push
dec
pop
aad
sub
and
and
push
adc
js
mov
xlat
pop
jl
das
jno
push
dec
stos
dec
or
ja
xor
add
sbb
fisttpll
xchg
shl
adc
test
cmp
cs
sbb
pop
mov
pop
cwtl
mov
lret
ss
or
rolb
push
orb
add
pushf
mov
repz
mov
push
ljmp
das
jae
xchg
rcl
ret
lcall
pop
mov
pop
inc
or
xor
push
lods
push
shr
out
xchg
mov
out
insb
pop
sarl
in
cmp
popf
lods
adc
xchg
sub
push
or
sub
out
ret
push
cmpsb
xchg
sbb
cmc
test
and
pop
xlat
pop
or
cmp
xorl
add
cs
inc
stos
xor
mov
sub
sub
add
adc
cli
cmp
sbb
pushf
jg
fistpll
add
mov
in
jo
or
jne
out
xchg
and
push
mov
scas
fimull
push
fcomp
xchg
add
popa
jmp
pxor
outsb
loopne
cmp
leave
jbe
ja
cli
inc
xchg
inc
out
insb
jp
cmpsl
lret
fwait
sbb
xchg
call
dec
movsb
repz
adc
adc
je
pop
xor
mov
cmp
jp
bound
and
cli
push
jecxz
xor
clc
jmp
cmp
lcall
mov
jno
cs
std
lea
popf
pop
add
mov
or
fucomi
idivl
out
mov
push
aas
bnd
xor
add
daa
ljmp
and
mov
mov
adc
mov
and
fidivs
sbb
sub
pop
rcl
inc
jecxz
pop
mov
mov
shl
fs
xchg
jg
mov
mov
shll
xor
test
push
fistpll
loopne
arpl
lods
scas
orb
aaa
into
out
dec
mov
mov
mov
fisubrs
shl
std
jae
or
and
jl
dec
adc
cmp
pop
sub
and
orb
lret
ret
pop
stos
add
xor
roll
dec
pop
aas
in
xchg
popf
and
push
sbb
and
add
cmp
mov
enter
inc
mov
aas
dec
lahf
pop
movsb
push
inc
mov
add
sub
ss
fs
in
adc
cmp
cmc
push
pop
bound
or
loope
rcrl
jb
clc
jbe
xchg
shlb
push
and
test
push
xchg
cmp
sbb
inc
sti
in
arpl
call
jmp
inc
frstor
cwtl
mov
mov
sarl
push
insb
mov
lcall
xchg
mov
dec
add
xlat
loope
movsl
inc
sub
popf
xchg
dec
mov
data16
fists
adc
loop
sub
rcrb
mov
jp
mulb
lret
aad
fistpll
and
sbb
stos
pop
jl
outsl
sahf
imul
jo
jae
pop
push
test
xchg
adc
xor
push
push
imul
push
and
jo
xchg
jne
inc
xchg
inc
cwtl
dec
or
mov
daa
std
rcrl
mov
push
repnz
sbb
lock
out
mov
dec
test
mov
mov
adc
les
mov
arpl
decb
test
in
mov
sar
fcmovbe
sub
ret
mov
push
xchg
sti
mov
aas
or
pop
out
dec
addr16
fs
push
repz
add
push
mov
jp
cmp
xchg
sti
aad
adc
ja
stos
mov
iret
inc
and
dec
mov
in
dec
int
add
out
outsb
mov
popf
cmpsb
push
and
mov
jae
pop
mov
stc
fildl
mov
aaa
push
push
mov
out
aam
cld
jp
dec
fwait
scas
movsb
dec
test
mov
or
mov
inc
aam
sbb
notl
les
mov
mov
sub
stos
ss
mov
jne
cmpsl
dec
mov
sub
je
mov
loop
mov
bound
fstpt
jecxz
aad
popa
cmp
cmp
dec
push
mov
and
scas
add
add
lret
sbb
outsb
xchg
or
in
ss
dec
imul
popf
cmp
mov
xchg
jg
popa
loope
inc
mov
stos
xlat
sub
loop
sub
add
insb
fcompl
sbb
cmpsb
icebp
adc
dec
addb
cwtl
mov
outsb
addr16
roll
ss
cmp
jb
in
mov
or
push
in
pop
test
bound
sarl
andb
fmuls
in
mov
mov
xorb
ret
int3
adc
es
sub
xor
and
pop
outsb
push
or
pop
je
sub
push
dec
dec
push
cmp
cli
or
daa
pop
inc
push
push
decl
aad
sub
jmp
cmpsb
imul
in
sar
test
cmpsb
popa
outsl
fdivs
push
pusha
enter
lret
mov
fwait
cmp
dec
mov
out
xchg
sub
jl
sub
shlb
dec
test
jnp
out
or
inc
cmpsb
jg
push
adc
adcb
rcl
mov
test
es
cmp
lret
mov
mov
aam
loopne
pop
enter
std
fiadds
scas
pusha
lea
hlt
and
and
xchg
stos
bound
and
scas
mov
sub
jnp
loope
fwait
test
sub
jp
out
dec
sbb
mov
pop
aam
and
push
fs
pushf
test
dec
ja
mov
dec
mov
mov
xchg
loope
xlat
stos
popa
xchg
les
push
inc
dec
pop
into
mov
dec
or
leave
cmp
jns
and
or
push
mov
ficompl
xor
ja
push
push
sub
sbb
outsb
notl
xchg
stos
sub
add
in
inc
sub
and
fisttps
lcall
rcl
dec
adc
hlt
pop
jmp
sub
loop
lods
repz
bound
mov
popa
imul
movsl
cmp
cmpl
rorb
icebp
addb
mov
dec
out
aad
cmp
dec
test
or
mov
iret
inc
push
mov
rorl
pop
xchg
dec
mov
loope
rcrb
ja
push
adc
and
aam
inc
inc
in
or
fdivrs
pop
mov
aas
sub
inc
push
lds
in
add
and
insb
pop
jb
les
call
mov
jp
and
inc
insb
cmp
out
jae
mov
adc
repz
lock
push
pop
jae
fists
mov
mov
rclb
and
sbb
xchg
lea
outsl
loopne
insl
insb
out
mov
sub
and
cmp
shll
lea
mov
adc
mov
inc
fstl
ljmp
xchg
dec
jmp
outsl
push
idiv
jecxz
lods
popa
and
mov
inc
push
xor
out
je
adc
mov
add
push
mov
push
rolb
and
cmp
pop
sbb
aam
push
insb
fiaddl
inc
hlt
xchg
lcall
sbb
xchg
lret
or
cmpxchg
push
or
lahf
cmpsb
inc
test
inc
jp
jnp
pop
mov
data16
cwtl
mov
inc
jae
shrl
cmp
cltd
jg
dec
mov
cli
fidivl
push
addr16
or
call
sub
fmuls
xchg
lret
aad
jne
fsubs
jge
pop
lds
cmp
jmp
mov
sub
lcall
sbb
addb
mov
lods
fcomi
adc
xchg
mov
cmpsl
adc
out
pusha
lret
cwtl
add
mov
xor
xor
mov
mov
jmp
mov
jle
push
rcrb
pmulhuw
jbe
aad
test
push
test
ss
add
aam
shlb
addr16
mov
stc
test
cmpb
gs
pop
je
cmp
in
imul
arpl
sub
cmp
out
inc
js
aad
jno
stc
pop
nop
into
sti
xor
sti
push
cmpl
js
adc
xlat
and
mov
outsl
gs
sub
test
pusha
daa
aas
in
adc
sbb
fmul
mov
dec
pop
es
jne
int3
push
mov
inc
clc
or
pushf
xchg
sub
mov
adc
lcall
stc
inc
out
shll
test
add
repnz
mov
movb
adc
push
sbb
pop
lahf
cmp
jl
mov
cwtl
out
mov
inc
pop
imul
dec
outsl
push
in
pop
pop
fcomps
sti
mov
push
not
dec
movsb
inc
lcall
popa
arpl
cmp
lcall
jo
or
test
fs
push
inc
xor
mov
movsl
push
jg
push
xchg
fildl
mov
pop
not
mov
clc
aas
jecxz
push
sarl
icebp
and
std
push
adc
or
std
loopne
and
stc
jae
aas
fnstenv
jmp
jne
lea
dec
xchg
jge
clc
mulb
sarb
jge
xor
push
pushaw
out
sbb
cli
push
dec
mov
dec
shll
mov
or
inc
add
xchg
bnd
push
lods
jge
adc
xchg
loopne
xchg
icebp
out
adc
pop
imul
loopne
in
push
rcrb
jg
inc
lods
sbb
std
jecxz
call
xor
mov
xchg
mov
jle
xor
xor
push
ljmp
es
jae
jo
loopne
gs
decb
and
mov
dec
xchg
xor
mov
cmpl
mov
lock
fs
pop
je
fisubs
pop
shl
out
icebp
into
push
dec
sub
nop
sti
movsl
jg
push
adc
push
jmp
push
mov
xchg
ret
inc
call
lret
mov
insb
les
adc
int
scas
imul
push
xor
nop
jle
and
popf
pop
cmp
adc
inc
mov
xor
test
and
ss
mov
gs
pop
scas
adc
lea
lahf
int
popa
xor
ds
enter
sub
xlat
imul
mov
sub
xor
sbb
orl
pusha
cmp
ret
mov
xorb
dec
iret
scas
push
outsl
movsb
cli
adc
mov
mull
pusha
push
xor
ss
rcl
mov
call
icebp
pop
mov
jb
mov
dec
and
cmpsb
cwtl
inc
iret
jb
push
cmp
sbb
add
rcrl
movzbl
repnz
mov
loope
add
dec
adc
popf
pop
cmp
movsb
or
in
mov
inc
repz
or
in
push
xchg
mov
in
loope
dec
jmp
aam
out
cmp
mov
nop
adc
bnd
mov
pop
jb
and
jo
mov
mov
imul
test
lods
adcb
sbb
outsb
lahf
sbb
mov
and
ret
adc
or
icebp
sbbb
push
cmp
cltd
es
mov
pop
es
adc
ja
rcrl
mov
dec
mov
sarl
imul
add
push
pop
js
int
mov
je
mov
sti
or
sub
int
ljmp
leave
add
push
xchg
xor
int3
mov
scas
mov
nop
iret
mov
cmpsl
andl
divb
shll
in
int
mov
mov
add
sbb
aaa
xchg
mov
test
adc
xchg
xor
cmpsl
and
inc
rclb
and
and
pop
out
movsb
pop
divl
imul
jg
cmp
leave
out
jbe
icebp
popf
cltd
cmp
push
xchg
scas
test
fstl
je
movsb
movsb
pushw
and
xor
test
ja
in
test
pop
pop
sub
mov
dec
ds
insb
xchg
inc
stos
nop
shrl
inc
sub
cmp
mov
mov
jle
lret
mov
adc
loope
sub
dec
push
sbb
inc
loope
popf
mov
sub
int
push
mov
gs
mov
pop
mov
aad
lock
test
push
and
and
xchg
and
xor
ss
sub
mov
jne
inc
in
adc
add
loop
jne
sub
out
xchg
dec
repz
xor
jno
hlt
jo
mov
mov
lock
mov
pop
mov
add
jno
xchg
add
lahf
sbb
pop
fs
inc
adc
out
add
jl
std
subl
les
pop
dec
mov
lret
add
sbb
fucomp
mov
ret
movsb
xor
rorb
mov
test
xchg
push
xor
cs
addr16
cs
push
sbb
cmpsl
lahf
mov
ret
hlt
mov
cmp
fimull
add
add
lcall
or
inc
loope
fstps
and
and
cmp
movsl
lret
stos
insb
mov
sti
lods
dec
stc
push
call
add
mov
xor
adc
sbb
scas
sbb
lret
rcr
stc
cwtl
sti
stos
jp
stos
in
or
pop
and
push
pop
pop
mov
pushf
push
stos
jp
adc
mulb
cmp
mov
xlat
rclb
xor
and
mov
xchg
cmp
xchg
jnp
jp
mov
add
jmp
into
pop
xchg
cmp
dec
or
inc
push
or
add
push
inc
mov
test
lock
fcomi
lret
cld
jno
sbb
test
out
pop
loopne
xorl
dec
inc
mov
stos
clc
xor
xor
test
aam
and
add
push
xchg
lcall
sbb
out
lcall
mov
icebp
aas
push
fwait
mov
popf
inc
imul
cmc
repnz
cmp
inc
and
push
les
insb
sbb
pushf
mov
mov
shr
aaa
orb
ja
cmp
sbb
mov
lea
xchg
dec
dec
or
cmpsb
leave
or
jne
mov
add
cs
pushf
cli
jp
sbb
pop
lahf
sub
inc
sub
popf
or
clc
movsb
cmpsb
nop
decb
sarl
xor
pop
mov
sbb
sbb
in
sbb
into
mov
mov
pop
addb
sbb
xchg
fiadds
gs
scas
sub
aaa
bound
or
mov
lret
ds
in
icebp
xchg
loop
mov
jb
aaa
mov
inc
dec
pop
sbb
leave
push
dec
aas
cmp
sbb
mov
mov
push
aam
mov
lahf
inc
and
add
mov
fiadds
sbb
inc
xor
aas
push
dec
add
add
push
std
arpl
dec
inc
imul
adc
sub
test
scas
inc
movsb
ljmp
cmpsl
insb
xor
ja
inc
xor
xchg
mov
js
jge
fs
fwait
or
mov
xor
pop
cld
cmpsb
jp
jno
cmp
xor
lods
xor
out
clc
pop
push
mov
xor
or
leave
sti
pop
mov
cmp
sti
outsb
clc
jb
mov
aad
nop
xor
mov
out
es
or
xchg
jnp
jecxz
mov
dec
inc
shlb
sbb
aad
pop
jl
mov
adcl
jbe
cld
mov
push
stos
insl
jns
push
push
sub
ffreep
and
push
jl
ja
jns
cltd
test
bound
test
xchg
icebp
push
jns
stos
lret
cwtl
add
sysexit
dec
mov
imul
adc
les
in
pop
lds
out
data16
dec
jo
xchg
push
adc
mov
test
push
cmpl
and
fcompl
gs
out
sub
adc
cmpsl
or
outsl
add
movsb
in
add
jmp
lock
or
cltd
pop
loop
jae
ds
fmull
mov
lods
rcll
fists
inc
push
outsl
test
mov
scas
int3
into
push
bound
das
cmpsl
roll
cld
push
lret
adc
push
out
dec
and
outsb
inc
lock
or
pushf
and
dec
loop
iret
jnp
adc
shl
test
inc
scas
mov
cmp
iret
pop
outsb
dec
lock
mov
sub
sti
in
fiaddl
lcall
ror
mov
testb
jno
mov
dec
lret
push
adc
mov
sub
mov
lea
jmp
inc
jecxz
pop
cmp
mov
ret
push
cmp
clc
and
and
dec
mov
xlat
push
adc
xchg
adc
loop
xor
call
mov
push
and
cmpl
push
xor
fnstsw
fcompl
inc
arpl
pop
add
push
push
cs
sbb
push
mov
mov
shl
in
pusha
pusha
pop
les
aas
into
je
ss
adc
xchg
daa
imul
test
inc
movsb
orl
js
jmp
adc
xchg
into
pmaddwd
notb
add
insl
pushf
iret
push
and
ficomps
mov
ljmp
imul
mov
out
mov
pop
div
adc
cltd
sub
sub
sbb
daa
outsl
movsl
jbe
fbld
push
pop
sbb
xchg
icebp
ret
clc
fstl
leave
dec
mov
jge
addr16
jo
mov
js
lea
xchg
fsubrl
jmp
in
mov
jg
xchg
push
fimull
xor
jg
lods
dec
cltd
repz
xchg
mov
ja
notb
popl
shlb
scas
dec
mov
rorb
jl
scas
xchg
ret
movsb
in
dec
mov
outsb
cltd
scas
xor
or
mov
add
push
pop
xchg
and
pop
pop
and
xchg
cmpsl
adc
pop
test
jbe
or
sub
or
les
call
daa
mov
mov
push
mov
and
cld
sub
jne
std
adc
scas
popa
test
icebp
pop
nop
mov
clc
jno
in
dec
pop
jae
mov
sub
fisubl
in
data16
sub
movsl
pusha
xor
shl
dec
mov
enter
cmp
into
and
mov
inc
and
inc
dec
mov
test
cld
aaa
adc
fs
ljmp
daa
fs
fs
out
jecxz
dec
jb
js
arpl
xor
push
sub
pusha
mov
subl
push
lods
test
out
pop
rclb
mov
les
sub
mov
push
repz
imul
mov
dec
addr16
pop
sbb
jnp
pop
mov
lahf
idivl
lcall
mov
mov
pop
movb
pop
cmpl
adc
je
rol
adc
xchg
stos
dec
arpl
inc
subps
mov
inc
pop
mov
add
dec
shlb
xchg
add
dec
pop
cli
incb
ret
adc
in
mov
mov
outsl
in
and
ljmp
dec
pop
adc
aam
enter
mov
push
das
in
aas
and
clc
mov
into
sbbb
xchg
das
mov
jmp
fnsave
lahf
jl
mov
movsb
sbb
xchg
pop
add
push
out
cld
pop
sbb
xor
sub
das
ficomps
out
jbe
mov
and
pop
jne
in
xlat
ds
bound
xchg
sti
test
jae
mov
in
mov
jecxz
andb
mov
mov
shll
js
stos
in
pop
cmp
mov
insl
inc
ljmp
icebp
adc
add
mov
or
push
scas
mov
pushf
inc
dec
call
push
movsb
pop
mov
pop
sti
pop
aas
test
pop
cmp
adc
jle
fdivs
cmpsl
das
or
das
call
xchg
and
les
jne
sbb
jp
pop
jae
sbb
dec
mov
das
stos
xadd
ja
fidivrl
xlat
push
mov
inc
jge
sbb
or
fs
mov
stc
lock
pop
or
jb
fmull
xor
movsb
mov
ja
fcmovnb
aam
fsts
push
pop
mov
adc
imul
movl
rcll
repz
mov
lods
mov
pushf
mov
lcall
pop
jb
popa
xor
jecxz
pop
adc
cs
mov
jmp
add
sub
xchg
push
cmp
cmpsb
jp
into
cli
xor
cmp
sbb
scas
les
inc
add
add
xchg
dec
aas
cmp
cld
or
addr16
mov
test
shll
insl
loopne
test
pop
add
mov
xor
cs
es
ret
mov
sub
mov
aad
std
insb
add
sti
xchg
adc
filds
jb
adc
adc
jno
xor
dec
pop
lods
add
int3
aas
cmp
jecxz
xchg
sub
in
or
add
ret
int3
lahf
sub
insb
out
insl
std
cmp
shll
jp
cltd
lods
test
xchg
mov
cmp
mov
sbbl
adc
cmp
lods
jle
fmul
jge
lds
bound
or
xchg
jo
loope
inc
jle
xor
insl
cltd
add
xchg
repz
in
jmp
jle
dec
mov
add
inc
sbb
test
mov
jbe
inc
mov
cli
mov
inc
out
jge
cmp
in
roll
ror
shld
fwait
xor
mov
pusha
pop
mov
push
pushf
xor
mov
fsub
in
mov
sti
sub
leave
enter
ja
imul
lcall
xchg
push
xor
xor
addl
inc
mov
mov
fcomi
enter
cld
xlat
js
lret
pop
pop
scas
pop
ficompl
mov
xor
add
outsl
popf
mov
nop
xchg
push
mov
in
pusha
arpl
mov
fadds
mov
pop
sbb
mov
cli
add
xor
popf
jb
mov
cmpsb
cmp
inc
cmc
and
adcl
adc
push
popf
sti
lea
repz
fldl
and
int3
aad
clc
adc
nop
mov
repnz
xor
es
push
into
pop
imul
push
mov
pop
adc
icebp
jns
les
pop
xchg
negl
and
mov
call
sbb
dec
ds
rcll
jae
rolb
sbb
jb
sti
sahf
xchg
and
add
push
add
cmp
mov
sub
xchg
or
es
outsl
mulb
stos
jge
insl
aaa
jnp
insb
mov
jae
jo
loopne
dec
inc
mov
cli
dec
sub
push
pop
test
adc
jne
cmc
and
fisubrl
hlt
mov
sahf
mov
fwait
pusha
or
fnstsw
rcrb
in
cltd
push
std
dec
in
fmuls
add
ja
inc
cmc
xor
nop
sahf
mov
aam
pop
sbb
pop
sahf
jmp
test
pop
iret
pushf
sub
mov
cmpl
icebp
xor
xor
sbb
dec
lcall
out
loope
mov
clc
mov
aaa
push
adc
int3
stc
cmp
pop
lret
xchg
jp
mov
sbb
inc
sbb
movsl
sbb
push
roll
bound
into
inc
loope
add
ret
sub
and
into
in
cmp
sti
lea
paddusb
nop
push
inc
jns
mov
outsb
fldenv
mov
aas
call
aas
inc
fisubl
gs
es
push
xor
rorb
adc
xlat
lea
rclb
mov
and
jmp
aad
fiadds
mov
mov
xor
inc
mov
das
mov
iret
stos
lods
insb
mov
pop
fidivrs
stc
lret
mov
movsl
cmp
mov
sub
popa
jle
dec
sbb
add
testb
xor
testl
jnp
mov
add
xchg
lret
cmp
cmp
adc
mov
mov
lods
sbb
push
popf
pop
push
pop
or
jno
jns
cmp
sar
mov
testl
or
mov
or
dec
add
cmp
sub
imul
xchg
sub
movl
lcall
push
loope
ljmp
cmp
fiaddl
push
add
mov
inc
adc
adc
inc
iret
mov
ljmp
adc
sbb
mov
mov
xor
ds
push
or
sahf
leave
jmp
cltd
or
pop
repnz
mov
mov
pop
and
push
add
rep
test
fisubl
bound
shrb
test
ret
scas
stc
into
jg
cmpsb
pop
lret
loopne
push
cmpsb
popa
mov
nop
inc
call
aam
inc
test
ja
add
pusha
loope
js
sbb
dec
sbb
pop
cwtl
and
jb
xchg
pop
lock
ja
adc
aaa
in
mov
test
add
mov
cwtl
mov
fisttpl
js
out
es
shlb
repnz
mov
dec
cmp
std
adc
jp
fwait
jb
lret
cmp
or
cwtl
mov
fs
mov
sub
std
sub
mov
cltd
shr
repnz
aam
xchg
xchg
out
cmp
rcrb
outsl
adc
dec
cli
mov
das
aad
out
mov
jnp
jns
test
sbb
mov
lcall
iret
das
xor
cltd
xor
movsl
push
sbb
mov
movl
mov
mov
or
lods
xchg
mov
jp
inc
mov
daa
aaa
cmc
sbb
inc
cmp
test
jmp
jp
push
xor
loope
stos
lods
dec
in
push
inc
scas
notb
adc
dec
xchg
dec
inc
jp
xchg
and
cltd
mov
aad
loopne
aad
ud1
mov
xchg
and
int
jmp
push
mov
mov
sub
sti
pop
iret
iret
jae
or
sbb
icebp
add
stos
mov
insl
shll
testb
inc
lds
add
aam
mov
out
xchg
inc
jl
ds
cwtl
mov
sub
incb
push
lds
mov
fldenv
xchg
push
mov
repz
mov
dec
dec
adc
fdivrs
lcall
mov
enter
pop
adc
and
cmp
fldenv
inc
and
dec
sub
xor
outsl
dec
xchg
fsubrl
sbb
push
addr16
and
xchg
leave
xchg
movsb
out
int3
in
addr16
cli
pop
mov
jmp
push
dec
cs
std
jae
lahf
push
testb
insl
inc
xchg
notl
add
cmp
push
lds
jne
int3
xchg
cmp
sbbl
mov
test
mov
mov
repnz
mov
je
aas
std
andb
pop
notb
or
ja
pop
sub
sub
test
jno
dec
lods
and
clc
lea
repnz
cmp
xchg
ljmp
hlt
insl
mov
rclb
pop
push
sbb
aas
idiv
dec
imul
sarb
std
stos
mov
sub
push
lahf
jmp
lods
gs
adc
xchg
lods
xor
aas
dec
xorb
icebp
gs
mov
sub
clc
into
sbb
pop
xor
imul
or
mov
js
sbb
xor
loop
xchg
repnz
sbb
sub
sub
sbb
nop
push
int3
push
dec
out
cmc
pop
loop
int3
xchg
sub
sti
push
test
xchg
and
cltd
dec
push
daa
jb
lds
test
jbe
xor
fsubl
lock
outsw
adc
les
cmp
test
lret
sbb
enter
pusha
ret
movsb
dec
pop
shlb
push
push
scas
add
int
lret
mov
in
dec
inc
testb
jbe
loopew
fcompl
jmp
pop
mov
xor
xchg
xchg
mov
mov
stos
mov
sub
and
cmpsl
push
dec
push
lock
push
mov
jge
roll
test
lret
and
xor
inc
daa
adc
mov
addr16
push
cltd
xor
mov
xchg
je
fs
fwait
sbb
in
ljmp
jle
in
es
ds
jne
jecxz
mulb
test
mov
inc
add
inc
inc
xor
in
mov
je
pusha
jb
xor
insb
mov
sbb
jno
test
sub
ss
xchg
loop
ret
adc
inc
pop
fdivl
ret
insl
sbb
sub
adc
das
mov
stos
xchg
imul
adc
test
mov
and
pop
mov
xor
mov
push
or
stos
xor
dec
adc
mov
sti
pusha
stos
dec
adc
or
mov
jae
cmpsb
mov
sub
ss
cwtl
cwtl
or
mov
rcll
push
xor
iret
and
or
pop
push
sub
dec
pop
imul
lcall
data16
fucomp
inc
mov
jns
sbb
add
sbb
or
negl
out
mov
cwtl
leave
outsl
jo
inc
or
in
push
add
lret
notl
jl
xor
inc
cmpsb
sbb
pop
repz
jecxz
dec
push
push
subl
push
decb
push
mov
mov
mov
jno
mov
adc
cvtpi2ps
sarl
adc
mov
and
xchg
movsb
repnz
sub
enter
adc
cmc
jl
or
sahf
mov
das
test
out
xor
pop
cltd
and
jbe
imul
pop
push
lahf
fsub
outsb
in
in
notb
push
pop
push
stos
cmp
movsb
and
loopne
out
xor
nop
xor
add
mov
jb
jae
and
sbb
sbb
ret
out
inc
adc
cmp
mov
insb
data16
mov
xlat
std
arpl
mov
inc
dec
rorl
lahf
xchg
in
movsb
mov
xchg
sub
shll
push
mov
sahf
sub
fwait
cmp
scas
nop
sarb
es
mov
ror
dec
jle
mov
inc
xchg
stc
fdiv
mov
ja
daa
mov
jo
in
in
add
out
scas
add
push
cmp
mov
jmp
sub
jns
mov
loopne
add
inc
mov
mov
aad
push
push
fwait
das
hlt
dec
loop
mov
pushf
adc
iret
add
cmp
adc
mov
push
mov
push
and
or
adc
push
xchg
ds
mov
into
imul
inc
out
xor
aad
xchg
and
mov
fs
lea
mov
mov
imul
or
les
lds
dec
pop
je
mov
lret
push
bound
int3
cmpsb
dec
cli
stc
leave
bound
movsl
stos
movsb
sub
fists
aad
sub
fcmove
xchg
rorb
int
push
sti
ficoms
cmpsb
decl
in
pusha
mov
in
jecxz
ret
pushf
repnz
mov
push
and
mov
and
push
push
sub
fldt
push
mov
imul
jecxz
sbb
in
test
jge
cmc
fdiv
cltd
sub
sub
jae
pop
xchg
sub
dec
adc
mov
sti
mov
push
test
jo
popf
jmp
cmp
loop
in
inc
mov
sub
push
xor
push
xchg
addr16
inc
clc
iret
outsb
test
xchg
popa
js
sub
sub
lea
pop
mov
push
xchg
sub
pop
arpl
stc
sbb
mov
cld
inc
mov
pop
xchg
add
out
push
adc
push
stc
shrl
fucomp
aaa
adc
adc
inc
cmp
push
popa
add
call
push
leave
pop
jecxz
push
push
ds
jmp
std
js
sub
add
in
mov
mov
sbb
pushf
lds
mov
scas
pushl
mov
mov
ror
sbbb
cmp
add
adc
scas
fiadds
mov
test
shlb
xchg
xchg
adc
add
shrl
les
scas
cmp
and
xchg
shl
push
addr16
mov
call
roll
cmp
sub
je
dec
mov
fstpt
adc
mov
out
shrb
pushf
loope
test
mov
aad
fisubrl
inc
rep
and
ret
ss
out
insl
loopne
shrb
pop
fimull
stos
lods
rcll
sub
ljmp
inc
mov
sbbl
cmp
jg
sbb
jns
mov
mov
and
inc
adc
or
aas
pop
push
imul
add
imull
hlt
pop
cld
mov
nop
loopne
fnsave
roll
inc
mov
addr16
push
push
mov
sbb
or
adc
jp
or
je
imul
or
xor
xchg
mov
pusha
xor
lret
mov
mov
mov
mov
out
xchg
pop
bound
into
mov
mov
js
cmpl
mov
or
add
out
jl
scas
out
jp
cmp
push
shll
dec
syscall
push
cmpsl
stos
jmp
add
add
fbstp
js
pop
mov
add
hlt
aas
jecxz
int3
mov
push
or
adc
loopne
mov
scas
test
test
jno
mov
in
xor
dec
mov
mov
les
push
xchg
xorl
xchg
das
enter
inc
sbb
ficoms
outsl
jecxz
subl
and
outsb
out
fildl
dec
cmp
mov
std
iret
or
popa
sbb
cmp
in
test
je
das
mov
ja
dec
arpl
mov
loope
and
lods
or
jb
loopne
popf
sbb
inc
add
daa
fldenv
into
push
test
fdivp
xchg
sub
cs
sbb
adc
jns
rcrb
clc
repnz
out
fnstsw
xlat
mov
pop
xchg
mov
adc
int
pusha
add
es
fldenv
and
fisubl
pop
call
xor
and
cmp
cmp
jae
or
inc
test
adc
inc
mov
insl
insl
imul
repnz
scas
jle
out
std
aad
rorl
test
lods
xor
imul
or
test
das
addb
scas
arpl
sub
sbb
stc
and
sub
sub
pop
dec
cmp
mov
pop
push
mov
push
pushf
xchg
adc
frndint
iret
push
and
xor
and
mov
push
mov
mov
mov
decl
sbb
jle
adc
sbb
insl
push
jnp
or
jg
mov
mov
ljmp
xor
mov
or
dec
shl
cld
lret
add
pop
insb
sbb
cwtl
int3
push
cmpsl
rcrl
arpl
inc
push
in
fisubl
cmpsl
mov
sub
rcll
clc
cli
pushf
rolb
pop
hlt
and
adc
mov
add
push
into
shrb
stc
call
ret
int
fsubl
ret
pushf
movsl
jns
nop
or
and
inc
sbb
enter
popf
push
lcall
out
test
test
loop
mov
sbb
int3
mov
push
jae
out
fs
dec
or
sub
lock
repz
mov
orb
fistps
fnstsw
xchg
or
lods
fs
popa
dec
scas
and
movsl
enter
mov
inc
sub
or
lods
je
mov
data16
in
adc
jno
iret
aas
repz
inc
out
insb
andl
mov
inc
mov
cwtl
fnstsw
fnsave
cmp
pusha
pop
icebp
fisttpl
test
mov
mov
dec
testl
jp
dec
mov
cmp
ss
sbb
sbb
fidivl
cli
sub
lods
int3
push
ljmp
cmovns
sbb
push
call
ss
push
pop
sbb
in
or
je
cs
fisttpl
movsb
jl
or
add
sbb
lock
gs
dec
adc
lcall
mov
sub
insb
xor
mov
push
iret
jge
push
sahf
and
xor
or
mov
jle
cmp
pusha
pop
stos
ljmp
pushf
push
lds
aad
pop
xchg
in
cmp
mov
mov
ja
in
aam
pop
movsl
out
lods
adc
scas
aas
sub
jbe
das
xorb
sti
loope
jns
repz
add
and
push
pop
jb
or
adc
mov
dec
shl
sub
stos
lcall
stc
cmp
cmpsl
xchg
ret
and
leave
out
fnsave
fadd
rclb
xchg
cld
rclb
subl
insl
xor
sub
movups
bound
lock
int
mov
sub
shl
scas
mov
fstpt
sbb
adc
adc
stc
push
inc
shrl
fldcw
stc
inc
sub
cmp
cmpsl
fwait
sbb
mov
dec
iret
cmp
mov
ds
fidivrl
repz
jns
repnz
stos
jg
aaa
mov
mov
ficoml
out
arpl
pop
inc
add
bswap
push
loopne
inc
in
std
and
mov
xor
test
shlb
mov
push
jg
push
mov
lret
push
sti
sub
and
push
int3
jbe
or
or
sbb
clc
adc
imull
hlt
and
mov
sub
int
cli
test
mov
jmp
lahf
mov
pop
imul
mov
dec
repnz
cs
push
inc
push
push
nop
cli
jns
pusha
pop
cltd
shl
sub
andb
leave
std
cwtl
sahf
sbb
or
mov
mov
adc
sub
scas
jb
mul
mov
stos
cmpsb
cmp
leave
cmp
loop
test
into
sbb
inc
lds
sub
lret
sub
mov
cmpsb
cwtl
push
xchg
mov
insl
jo
push
lcall
jns
mov
outsl
mov
bound
jecxz
es
repz
je
mov
daa
out
lea
jno
bound
cltd
lret
hlt
push
gs
mov
cwtl
jnp
xchg
or
dec
dec
orb
rcrb
ret
dec
add
inc
out
dec
rclb
sub
arpl
lcall
mov
sub
dec
push
push
xorl
push
cmp
mov
xchg
rcpps
adc
inc
adc
gs
and
insl
lret
inc
inc
dec
push
movl
insl
xchg
xchg
icebp
scas
sbb
out
inc
fiaddl
flds
pop
add
cmpsl
jecxz
imul
ja
mov
insl
inc
sbb
adc
mov
in
ss
movl
lock
mov
stos
mov
pop
jl,pt
ss
repnz
push
pop
testl
sub
stc
das
mov
or
dec
or
pop
fwait
test
pushf
mov
movsb
into
cltd
fimuls
inc
sbb
push
xor
jle
stc
jmp
pop
fistpl
lock
xchg
out
jae
andb
fcomip
mov
jecxz
or
mov
movsl
xor
jmp
in
pop
jp
push
adc
cwtl
sub
mov
out
dec
cwtl
pop
or
xor
loope
jecxz
jg
sub
setp
add
fistpl
insb
mov
mov
cmp
push
ljmp
xchg
xchg
xchg
xlat
dec
pop
sbb
mov
or
pop
pop
and
sub
mov
out
cmc
mov
add
inc
inc
inc
pushf
loopne
adc
mov
fucomp
dec
xchg
mov
ljmp
sub
out
inc
xchg
and
mov
sahf
cmp
mov
into
out
cmp
loop
xchg
xor
out
jg
pop
insb
js
sbb
adc
stc
ljmp
adc
adc
jns
aas
sahf
jns
std
xor
add
jmp
mov
lahf
jno
cltd
addr16
sahf
jl
ljmp
mov
aam
jp
push
ja
and
adc
addl
ret
xchg
inc
adc
mov
cmpsb
mov
xchg
inc
idivb
clc
or
insl
inc
cmc
sbb
into
icebp
jmp
sub
test
mov
add
push
xchg
lcall
lea
mov
aaa
xchg
adc
inc
pop
rorb
idivb
or
xor
adc
mov
xchg
ss
mov
bound
movsl
dec
js
call
das
mov
mov
jl
jbe
loop
pop
jnp
outsl
mov
cmpsb
cs
dec
outsl
sub
scas
outsb
negb
test
data16
movsb
dec
sub
mov
push
sub
mov
bound
dec
sbb
aad
dec
pusha
repnz
fst
js
sbb
dec
xchg
cmpsl
cmp
outsl
popa
test
push
in
into
xchg
mov
jecxz
test
jl
push
cmp
jnp
mov
inc
inc
mov
inc
out
lret
cs
in
xor
mov
dec
dec
daa
rcl
filds
into
mov
std
es
mov
lea
in
push
xor
icebp
pop
dec
mov
rorb
nop
sbb
arpl
jecxz
ljmp
test
pushf
stos
sub
adc
jae
inc
xchg
mov
or
movl
test
outsl
sub
cmp
cmp
or
lea
fiadds
jecxz
inc
xor
pushf
scas
adc
sbb
or
lods
icebp
cwtl
push
lahf
repnz
mov
stos
xor
outsb
dec
notb
push
and
push
fsubs
mulb
push
std
sahf
loopne
mov
push
fucomip
xor
or
cwtl
hlt
push
ds
lds
clc
bound
pop
mov
into
inc
stos
add
xor
adc
sahf
scas
add
xor
gs
or
mov
and
mov
mov
xor
mov
orb
bound
mov
dec
dec
and
xchg
lods
enter
into
xchg
lret
pushf
insl
repnz
push
push
add
pop
fmuls
push
and
fbstp
fucomip
fsubp
lcall
sbb
aaa
pop
lods
rcrl
mov
cltd
mov
mov
jp
or
pop
fadds
insl
sahf
lds
xor
or
add
insl
or
or
stos
pop
dec
flds
sbb
mov
aam
adc
or
daa
sbb
test
push
rcrb
cmp
or
jle
mulb
inc
mov
js
movsb
lcall
jno
xchg
sbb
aad
outsb
cmp
loop
fwait
cmpsb
push
xor
fsubrs
and
and
lret
lock
pop
adc
popa
add
xchg
xchg
add
lods
hlt
cli
xchg
rcrb
movsl
fstpt
add
xchg
loop
ret
cmp
pop
push
xor
jnp
aam
sbb
in
sti
xchg
push
fmull
adc
addr16
mov
loopne
jb
mov
sub
push
cmpsb
enter
sub
out
dec
and
hlt
icebp
pop
ffreep
bnd
sub
ret
push
sbb
sbb
int3
cmp
inc
test
mov
add
je
jl
rcr
jp
mov
lods
ljmp
inc
out
xchg
sub
rol
mov
popl
leave
push
mov
movb
adc
pop
jo
pop
push
pop
adc
insl
lcall
insb
in
imul
mov
outsb
mov
jle
pop
leave
dec
out
inc
out
sub
push
ret
idivl
xchg
out
sti
jmp
pop
sub
jb
adc
fldt
ja
rcrb
insb
xchg
inc
pop
ret
repz
in
inc
mov
mov
sbb
in
or
pop
push
cmp
ffree
push
cmp
ds
jns
inc
popa
cmp
nop
in
adc
cs
popl
mov
daa
pop
js
lock
in
lcall
jl
outsb
repz
in
add
mov
lock
lock
popa
lcall
lret
mov
dec
or
scas
test
testb
push
test
js,pt
pop
jmp
mov
cmp
mov
sti
mov
inc
std
pop
sub
cmp
push
sub
and
in
cmp
add
sub
pop
scas
repz
scas
nop
mov
out
push
adc
mov
lock
adc
rolb
arpl
cwtl
sbb
out
cmc
sbb
mov
adc
xor
scas
add
sub
push
loopne
daa
mov
xchg
dec
icebp
sbb
fcoms
rorl
ret
in
incb
addb
mov
push
xchg
int3
or
ja
aam
int3
out
cli
outsb
mov
adc
mov
sbb
out
out
dec
push
std
push
arpl
scas
fwait
xor
or
pop
gs
sbb
dec
jl
test
scas
mov
xchg
aam
sti
pop
dec
cmp
xchg
bound
out
cld
xchg
lds
xchg
shl
pusha
sub
shlb
mov
icebp
and
inc
mov
mov
dec
push
lock
ljmp
push
dec
adc
aas
sbb
lret
pop
pop
or
dec
lret
jae
mov
mov
cs
and
adc
fcmovne
xchg
sub
mov
or
lock
lret
shl
push
loop
mov
out
ljmp
shlb
sbb
loope
and
clc
sub
push
xchg
mov
dec
ficoml
adc
push
int3
ja
lret
adc
pop
mull
jmp
stc
out
dec
and
pop
xchg
fisttpl
mov
in
or
scas
orl
mov
mov
hlt
addl
push
rep
add
push
lcall
xor
cmc
bound
ret
popa
sub
xchg
mov
popf
or
test
test
prefetcht1
inc
imul
push
aam
adc
push
movsl
push
jbe
aam
xor
outsl
movsl
mov
lods
cmc
dec
ja
mov
or
sbb
mov
ljmp
sbb
mov
mov
inc
push
xchg
add
xchg
mov
mov
in
xchg
testb
cmp
outsl
mov
shlb
arpl
jl
push
lcall
xor
call
mov
fs
in
xor
mov
jae
pop
jo
pop
add
aam
outsb
mov
cmp
sub
push
add
hlt
jb
push
mov
call
dec
xchg
pop
and
add
xchg
outsl
jns
adc
out
iret
mov
sbb
cwtl
pop
jb
pop
rclb
jg
out
mov
adc
xor
sbb
adc
sti
andb
cmp
stos
jae
sub
xchg
mov
jno
inc
into
arpl
sbb
lock
jmp
push
nop
pop
ljmp
lret
xor
dec
or
cld
pop
mov
fnstcw
sub
mov
and
das
sahf
outsb
pmuludq
or
push
cmp
imul
cmc
mov
lods
pop
jb
negl
loopne
or
movsb
jbe
pop
shll
incb
andl
loopne
jg
ficompl
outsl
in
push
shrb
cmc
jno
ljmp
aaa
pop
gs
mov
xchg
lret
xor
sbb
sbb
fs
aaa
pop
arpl
out
cmp
mov
fstps
div
adc
jp
inc
cmp
jge
jno
in
sti
push
mov
add
jle
mov
push
sub
push
add
lea
lcall
mov
cmp
shll
lods
imul
sbb
cmpsb
fistpl
outsb
mov
rcl
push
inc
pop
sub
sbb
insb
aaa
cmp
mov
xor
jmp
test
add
jbe
inc
rclb
pop
pop
jle
loopne
lahf
mov
sub
out
pop
inc
and
or
aad
test
adc
loope
cmpsl
sub
xchg
xor
ror
movsl
test
push
imul
xor
loope
mov
pop
or
pop
xchg
xor
sub
and
cmp
push
mov
push
jnp
xchg
lods
and
leave
adc
pusha
data16
xor
js
add
repz
or
xor
xchg
outsl
dec
mov
je
push
fidivs
jnp
in
mov
roll
xchg
lahf
out
out
or
lods
add
add
sub
or
addr16
clc
scas
loop
daa
adc
gs
xor
stos
int
pop
cs
testl
int
and
mov
test
sbb
jne
xchg
and
cmpsl
push
mov
xlat
dec
adc
dec
in
in
mov
cmp
mov
xor
push
sti
inc
leave
xor
aad
out
mov
mov
push
mov
inc
xorl
xchg
xchg
pop
push
mov
mov
loopne
jp
xchg
or
mov
dec
pop
mov
sub
lock
je
ljmp
mov
test
inc
push
inc
inc
inc
ljmp
push
popf
or
scas
jne
sbb
or
movsl
shll
or
or
loopne
loopne
test
lock
data16
sub
fdivs
rol
xlat
jecxz
xor
in
sbb
inc
mov
or
or
sub
mov
and
in
mov
sub
mov
out
or
popf
add
test
orl
in
call
push
mov
mov
fwait
sub
adc
xor
scas
xchg
hlt
pop
int3
push
xor
xchg
lret
inc
enter
push
and
pop
xlat
xchg
test
add
lret
jbe
dec
jge
push
call
das
test
cmp
xchg
inc
mov
push
jg
dec
sub
andl
dec
ror
mov
and
and
jge
in
addr16
inc
fiaddl
mov
aam
mov
and
icebp
mov
sbb
movsl
mov
aas
xchg
imul
scas
adc
stc
xor
ficoml
dec
add
cmpsb
roll
cli
ds
addr16
stos
or
dec
adc
cli
and
inc
ja
adc
ret
or
adc
lods
adc
insb
sti
outsb
dec
jno
vsqrtsd
sub
jle
iret
mov
loopne
dec
xchg
adc
sub
aas
adc
mov
adc
das
cmp
stos
mov
jp
outsb
inc
push
adc
push
lds
mov
xor
add
cwtl
ror
shll
jno
out
jecxz
pop
adc
insl
out
mov
call
icebp
repnz
jmp
inc
nop
das
pushf
lahf
mov
into
dec
and
sbb
imul
inc
cmp
inc
sbb
gs
pop
jecxz
in
or
outsl
gs
movsl
inc
mov
pop
pop
hlt
cmp
aas
frstor
stos
shll
mov
cmp
lcall
push
out
inc
ret
fmuls
lods
adc
inc
push
ljmp
mov
mov
icebp
aam
fistpl
cmp
dec
jo
inc
mov
xchg
push
jl
pop
rclb
jl
cmp
mov
lea
and
out
push
inc
pop
je
fs
or
popf
push
xor
pop
push
fcmovu
lock
imul
and
and
xchg
ss
cld
mov
push
jl
inc
stos
int
bound
push
cmp
cmp
cmp
or
mov
insl
rcrb
cmp
aas
add
mov
test
inc
dec
cmp
push
xchg
xchg
pop
add
adc
adc
add
or
loop
and
mov
mov
dec
mulb
shr
sub
leave
jmp
xchg
fists
fidivrs
in
inc
cltd
addl
cmp
out
pushf
int3
incl
mov
add
xchg
int3
jo
jo
mov
ljmp
xorl
jp
sbb
add
xchg
or
ret
sub
dec
dec
loop
decl
ss
adc
sbb
push
ret
pop
out
xchg
stc
mov
mov
popf
cwtl
cmpl
mov
push
dec
or
enter
gs
fimuls
adc
cs
dec
cs
ja
add
jmp
add
in
sub
adc
popa
jl
cmp
je
and
shrl
adc
filds
imul
cmp
pop
push
pop
aam
loope
sub
ss
les
loopne
add
sub
pop
add
add
cltd
imul
pusha
push
sub
sbb
mov
adc
js
jp
push
sbb
ss
sbbl
mov
andb
dec
into
lds
push
scas
push
loopne
xlat
in
lret
and
mov
mov
xchg
jecxz
sbb
into
mov
fs
ror
mov
leave
xor
inc
mov
push
jl
sub
mov
lret
mov
outsb
testl
int
fmul
pop
shrb
dec
hlt
andb
mov
stos
dec
popa
nop
mul
ja
daa
push
lret
pop
and
ds
negl
jne
dec
sub
jge
les
or
inc
inc
movsb
repnz
sub
jecxz
xor
lods
mov
mov
dec
inc
repz
imul
jl
test
outsb
mov
push
scas
jns
mov
icebp
push
jbe
mov
out
ss
cs
fbld
dec
frstor
lret
dec
dec
into
psubb
sub
mov
sti
jl
leave
mov
jns
mov
xchg
sahf
ret
sub
in
rclb
cmp
lahf
dec
xor
rolb
inc
cltd
pop
pop
scas
and
outsl
jnp
or
sub
inc
sbb
push
nop
out
cltd
mov
push
dec
dec
cmpsb
ja
mov
sbb
rcrl
nop
lds
sbb
jns
pop
imul
xchg
push
dec
clc
dec
lcall
pop
movsl
xorl
xchg
lods
cmp
adc
loope
jnp
and
repnz
das
jno
jne
es
and
hlt
sub
cmp
inc
sbb
std
sub
jmp
push
pop
add
imul
fcompl
cmp
lock
test
mov
in
sbb
cmp
sub
inc
xchg
add
sub
xchg
and
pusha
das
jle
lahf
fstps
fiadds
das
mov
mov
pop
add
hlt
push
cltd
jmp
loope
push
jle
lret
jae
inc
dec
mov
push
ljmp
lods
inc
xchg
gs
lcall
ret
and
jno
dec
mov
lods
sub
pop
out
lcall
dec
cltd
sarb
shlb
cmpsb
sahf
jb
cmpl
sbb
pop
addb
sti
aam
insl
push
jle
sbb
add
in
sbb
dec
push
mov
cld
sub
mov
std
jns
pop
jp
icebp
add
and
or
movsb
mov
push
js
jp,pt
in
mov
int3
into
test
popf
imul
lea
in
das
scas
repnz
pusha
js
sbb
sti
sarb
imulb
or
or
sbb
imulb
lods
bound
mov
xchg
lret
and
mov
or
mov
xor
ljmp
mov
fadds
dec
dec
xchg
or
std
push
lds
test
dec
sbb
int
pop
sub
mov
call
aam
mov
adc
push
dec
mov
push
ret
das
insb
add
lock
fs
xlat
shrl
lea
sbb
and
sbb
inc
out
mov
out
mov
and
test
mov
faddl
lds
pop
xchg
pop
xchg
lods
out
repnz
xor
imul
mov
push
test
cli
mov
or
cmp
in
rcll
add
loopne
xor
in
and
scas
sbb
pushf
aad
mov
and
aad
cld
xchg
shl
in
mov
rcrb
or
repz
pop
push
out
cli
inc
add
inc
jbe
shlb
repz
aam
insl
add
or
je
inc
icebp
cmp
pop
sub
fcoml
cmp
dec
xchg
clc
pusha
ss
mull
mov
iret
sbb
dec
mul
add
jecxz
sti
xchg
ljmp
in
syscall
mov
inc
jbe
hlt
repz
flds
shll
fcomps
jecxz
insl
mov
sbb
pop
rcl
in
jmp
xchg
into
inc
inc
arpl
incb
push
movsb
inc
scas
dec
jg
stos
adc
outsl
addr16
dec
inc
jns
out
dec
and
push
xchg
pop
dec
pop
in
sahf
pushw
bound
jbe
lds
dec
push
mov
add
aas
imul
cmpsb
rcr
hlt
cltd
or
call
inc
fldl
aad
cmovl
mov
cmp
clc
iret
and
dec
icebp
inc
repnz
in
jno
mov
aas
push
pop
jl
xchg
xor
out
incl
loope
push
sub
or
aaa
sbb
sbb
xor
inc
pop
pop
pusha
cli
pusha
pop
lock
pop
sbb
push
mov
mov
mul
fucomp
cltd
test
lock
je
mov
testb
sbbl
jl
loope
fstl
or
je
mov
movsl
xchg
dec
test
ret
sub
mov
repnz
dec
sbb
fs
push
xor
dec
scas
data16
lock
adcb
dec
mov
pop
mov
add
push
jns
mov
cmpsb
cmp
sub
out
inc
mov
mov
imul
dec
mov
inc
ds
push
loopne
dec
std
mov
lcall
pushf
pop
sub
inc
std
fucomip
arpl
push
or
in
scas
stos
out
jo
sub
rcll
dec
mov
push
pusha
movsl
call
imul
mov
xor
jecxz
shrb
arpl
cmp
push
bnd
cmp
mov
lock
shll
xchg
out
mov
mov
pop
imul
ret
adc
hlt
ret
lods
mov
and
ljmp
pop
insl
mov
jl
sbb
fnstenv
rcrl
adc
xchg
call
test
mov
dec
lods
mov
cmp
loop
in
mov
popf
push
pop
cmpsl
cmp
jbe
sbb
das
mov
mov
insl
dec
jbe
mov
pop
xor
mov
xchg
sarl
and
lods
xchg
outsl
or
fs
mov
sbb
daa
sub
nop
mov
in
out
and
and
pusha
and
fstpt
jnp
imul
jg
fnop
xor
push
and
mov
std
out
popa
lahf
and
jnp
mov
push
in
cmovo
popf
add
sti
and
pop
dec
sub
dec
adc
subl
cltd
mov
ret
aaa
mov
mov
mov
inc
or
push
jmp
hlt
or
lahf
inc
xchg
add
shlb
cmp
enter
out
xchg
add
cmp
aas
push
mov
inc
fnstsw
lret
repnz
fisubrl
xlat
scas
mov
xlat
sub
xchg
leave
cmpsl
cmp
adc
xor
mov
mov
pop
cmpsl
jb
sar
pusha
xchg
out
sbb
stc
push
ret
xor
fsubrl
lcall
or
or
aam
lahf
in
mov
push
mov
orb
push
test
push
lea
pusha
jo
in
mov
into
xchg
out
cmp
nop
int
xchg
jno
test
xor
cmpsb
adc
data16
mov
xor
into
inc
leave
mov
mov
adc
mov
xor
fnsave
mov
rorl
adc
pop
xchg
pushf
mov
scas
adc
fsubl
push
aad
xchg
pop
mov
cmp
fldt
mov
xor
shll
xorl
jns
sub
mov
xchg
or
cmp
push
lret
scas
lahf
mov
rclb
inc
shlb
or
or
cmp
lock
addl
out
mov
ret
push
xor
cld
test
or
test
addl
fsts
jne
fcomp
int3
cmp
push
push
out
imul
leave
push
sub
and
mul
sbb
mov
scas
aam
xchg
mov
ljmp
xlat
pop
shrb
sub
dec
pushl
ss
mov
push
xchg
and
mov
cwtl
dec
mov
sarl
insb
cld
jo
mov
and
inc
mov
ds
js
call
pop
mov
push
xchg
fst
push
inc
shll
xor
sarl
ds
mov
or
pop
stos
add
push
xchg
dec
mov
dec
imul
cltd
daa
mov
cld
add
jmp
icebp
repz
cmp
inc
mov
addb
mov
fs
xor
jle
cs
aad
daa
clc
xor
or
or
decb
fstl
aas
inc
inc
jno
dec
adc
rorb
divl
xor
cmp
xorl
ficoml
hlt
movsb
fcmovbe
shr
dec
pop
xlat
inc
xchg
in
cmp
push
mov
mov
mov
or
mov
scas
cmp
adc
push
imul
fwait
push
loop
nop
jb
xchg
inc
imul
add
push
fcoml
xor
ds
scas
xor
mov
ss
shrb
push
leave
jo
pop
sub
cmc
popf
or
ss
inc
pop
lahf
nop
jle
adc
add
sub
mov
into
sub
lcall
sbb
imul
addl
adc
and
push
mov
sub
into
cli
adc
sub
adc
mov
in
push
loope
movsl
insb
dec
shlb
bound
in
dec
mov
nop
mov
cmp
pop
icebp
push
adc
sbb
xchg
dec
mov
test
and
addb
repnz
icebp
cli
mov
inc
jmp
loope
xor
popf
cs
sarb
stos
icebp
pop
jne
push
jl
sti
sbbl
or
rcrb
adc
mov
sbb
cmp
push
adc
stc
push
daa
adc
cli
mov
inc
or
rcll
xchg
sbb
jg
frstor
into
cmc
adc
cmc
push
mov
mov
ss
syscall
add
dec
test
pusha
lods
xor
push
xor
sti
in
lods
lods
mov
jecxz
lea
jecxz
pop
xchg
int3
sub
mov
and
and
push
push
cli
int
das
inc
adc
ret
dec
aad
fs
notl
mov
dec
sbbb
sbb
cmp
rcrb
xchg
fcoms
jo
xchg
cli
and
push
in
pop
jg
push
clc
push
daa
mov
fsts
and
jmp
rcr
xchg
andb
test
popf
mov
cwtl
push
cmp
out
mov
leave
and
fists
mov
pop
sbb
or
insb
xchg
aas
es
jmp
mov
adc
pop
mov
push
xchg
clc
notb
loop
cs
adc
stos
jg
inc
mov
cltd
not
inc
test
xchg
ja
mov
std
es
push
cmp
and
push
sbb
sbb
mov
aad
xor
rolb
jae
push
test
pusha
out
rorl
and
dec
sub
outsb
sbb
push
xor
fsts
adcb
fisubrl
out
inc
adc
xchg
mov
sbb
mov
call
jmp
jbe
pop
dec
mov
pop
or
jnp
xor
xchg
in
outsl
mov
adc
shlb
and
test
loop
pop
and
sub
movb
and
add
lahf
je
dec
lret
sbb
dec
push
xor
lcall
xor
aas
je
or
jno
cmp
or
sbb
sbb
call
fldenv
outsl
dec
xchg
cmc
jmp
mov
loopne
scas
add
mov
lods
js
add
scas
inc
movsb
cmp
jae
push
xchg
movsl
and
adc
xlat
push
into
pop
arpl
mov
pop
ss
insl
clc
and
add
mov
push
xor
mov
inc
pop
push
cmp
pop
test
icebp
xor
daa
push
sbb
sti
ljmp
sahf
adc
int3
jmp
insl
adc
psubusb
xchg
push
in
fistps
pop
lcall
adc
scas
cmpsb
out
lcall
jg
test
push
push
jae
icebp
inc
ljmp
mov
xchg
mov
jae
enter
push
or
repnz
repnz
adc
or
sti
out
lods
xorb
fwait
mov
jne
inc
je
shrd
dec
fwait
add
xorl
cmp
jp
adc
lods
inc
push
ds
shl
std
xchg
xchg
and
push
mov
pop
rcrb
cmp
sub
adc
and
push
pushf
idivb
inc
loopne
xor
int
mov
out
popf
pop
lods
bound
dec
mov
inc
sub
testb
imul
nop
pop
rcrb
fwait
jae
push
out
sbb
pop
pop
sub
pop
or
fdivrp
out
inc
or
cs
cltd
mov
sub
movsl
jecxz
cmp
or
push
and
mulb
fadd
jmp
mov
and
xchg
sbb
aas
xor
and
ljmp
int3
push
xchg
push
jo
adc
das
fdivs
sahf
xor
push
xchg
mov
fsubrs
sahf
rolb
subl
sub
or
cs
fldenv
and
cwtl
mov
pop
push
shl
roll
repnz
sahf
call
adc
xlat
xchg
fiadds
shl
repnz
jno
repz
fildll
je
xchg
cmp
mov
xchg
dec
inc
mov
and
insl
into
lods
ret
mov
push
adc
dec
adc
rclb
lret
and
movsl
cmp
lods
mov
das
dec
sub
sahf
fstpt
les
mov
mov
arpl
dec
leave
or
sbb
movsl
out
incl
jg
push
ficoml
repz
pop
jne
and
dec
xchg
pop
das
and
aam
mov
pop
sbb
stos
rcr
out
notb
adc
mov
aad
xor
xchg
movsl
inc
stc
fs
push
and
pop
xchg
aas
or
ret
out
adc
call
dec
repnz
mov
pop
push
aad
iret
gs
aaa
lea
call
arpl
insl
in
cmp
push
push
fisttpl
mov
jns
lods
std
add
ret
pop
fists
sub
jl
fisubs
mov
push
nop
dec
int3
stc
dec
pop
rclb
arpl
push
shrb
outsb
icebp
rorb
pop
mov
lret
clc
xchg
cmp
data16
fsubl
fbstp
dec
cmpsb
adc
leave
jb
inc
mov
dec
in
mov
adc
pop
add
jns
inc
sbb
les
pop
mov
out
xor
sti
adc
adc
out
xor
adc
inc
sbb
insb
fwait
or
jae
sahf
and
add
gs
mov
ljmp
mov
jnp
adc
sub
xor
pop
rolb
jb
add
xor
inc
mov
mov
cld
repnz
hlt
xchg
dec
lock
test
cwtl
mov
xchg
shlb
sbb
or
rclb
clc
out
test
and
cwtl
dec
mov
push
push
jl
repnz
pop
cltd
adc
js
jb
rcrb
into
sbb
lret
fdivp
and
pop
pop
fldenv
and
shlb
bound
push
inc
xchg
mov
add
jns
data16
rcrb
mov
arpl
aam
mov
gs
xchg
sbb
mov
jecxz
inc
leave
int
aam
lods
sbb
out
ja
xchg
cmp
push
cmp
mov
mull
les
mov
or
test
subl
dec
sbb
lds
mov
outsl
dec
sub
stc
fstps
loope
or
sbb
mov
inc
fimull
jle
push
movsl
insb
movl
mov
cmp
add
sbb
fs
jb
pop
lods
cmp
add
cli
mov
loope
xor
stos
lret
loop
jle
add
cmp
and
adc
cmpsl
jmp
pop
mov
xchg
out
jge
jecxz
sbb
test
lahf
mov
test
xor
push
rep
lcall
fucom
xor
pop
mov
push
lret
lock
and
jns
ret
data16
adc
imul
cmpsl
repz
or
mov
sbb
xor
inc
fsubrs
in
fnsave
mov
jbe
xor
ljmp
adc
pop
jl
or
jb
lods
mov
dec
into
daa
pop
mov
loopne
sub
movl
mov
or
dec
mov
fiaddl
orb
insl
dec
notb
adc
leave
mov
shll
lahf
ds
incl
test
dec
xor
fdivr
jmp
mov
cmp
inc
push
aaa
pusha
stos
test
and
mov
adcb
pop
int
sbb
jne
jg
sbb
out
mov
fsubl
ljmp
inc
mov
cmp
adc
pop
jmp
icebp
scas
and
adc
dec
imul
inc
cmp
pop
xor
test
sub
jo
mov
sbb
cwtl
mov
push
inc
add
dec
xor
pop
sub
popa
cs
nop
mov
mov
mov
jo
movsl
aaa
jl
iret
or
loope
pop
pop
push
or
jne
adc
pop
xchg
clc
and
lret
lods
nop
cmp
or
mov
inc
push
out
bound
mov
push
enter
adc
xchg
popf
dec
inc
cmp
sbb
ret
jmp
gs
mov
mov
mov
cmpb
and
xor
jb
xor
fldenv
xchg
sbb
cltd
mov
mov
popf
sbb
mov
mov
inc
in
dec
loope
add
scas
pop
test
test
xor
imul
ds
je
dec
test
sahf
pushf
int
inc
sub
stc
mov
push
ljmp
lods
inc
add
jp
add
push
je
out
mov
sbb
cmp
mov
pop
ja
ljmp
inc
jl
nop
mov
lods
inc
push
mov
mov
out
mov
pop
push
loope
ret
addr16
push
std
sub
leave
cmp
rclb
and
scas
iret
jae
mov
sahf
or
cmp
cwtl
call
test
rcrb
ret
jmp
jo
sbb
aas
pop
fadds
inc
cmc
or
push
pop
cmp
jle
dec
sarl
dec
jecxz
mov
sub
aad
xchg
cmp
adc
cmpsl
cmpb
lret
cmp
sbb
xchg
fstps
movsl
lds
sbb
inc
xchg
push
out
cmc
sti
mov
out
mov
popa
or
mov
mov
fsts
jo
cmpsl
lock
mov
pop
das
int3
addr16
sbb
push
or
pop
outsl
push
and
sub
inc
mov
cmp
mov
cmpb
add
bound
or
sub
jbe
or
enter
push
pop
or
js
insl
fists
xchg
lret
mov
lods
fs
imul
aas
pop
cmp
pusha
cld
jae
jns
fsubs
xchg
and
sub
popa
add
movsb
xor
mov
xchg
xchg
adc
mov
ss
dec
test
cmp
jp
je
sbb
mov
clc
add
sarl
lret
arpl
mov
or
xchg
mov
stos
push
inc
inc
and
aam
stos
pop
cmp
dec
mov
xchg
sahf
push
mov
mov
cmpsb
lea
mov
js
imul
sub
sub
fisttps
call
or
fildl
test
lcall
pop
jecxz
push
js
pop
or
mov
out
inc
ss
iret
push
mov
add
ja
jle
cltd
repnz
adcl
mov
std
push
movsl
jns
mov
xlat
or
inc
insb
gs
jns
sub
add
js
es
iret
dec
dec
lcall
popl
xchg
and
dec
mov
out
ss
andl
ss
cltd
cwtl
dec
cmp
jae
lock
dec
lock
and
insb
mov
mov
pop
call
lock
xor
int3
pop
ja
sbb
xor
dec
aad
cwtl
xlat
push
adc
into
lret
xor
xchg
xor
dec
ret
mov
out
cmp
dec
jns
add
jle
lret
jne
cmp
mov
dec
or
jmp
inc
cmp
xchg
or
mov
loop
leave
lea
xlat
jns
xor
nop
jmp
sahf
inc
cmp
push
jecxz
lcall
addr16
into
sub
jecxz
lcall
mov
outsb
das
pop
jecxz
and
loopne
iret
mov
jl
xor
ret
outsl
in
push
lds
xchg
shrb
or
les
les
fnstcw
add
popf
mov
fimull
arpl
xor
and
ds
mov
sub
daa
aad
mov
gs
jmp
enter
mov
xor
xor
push
fmull
xor
gs
xor
lahf
pop
jbe
inc
shrb
leave
mov
xor
mov
dec
xor
sbb
jbe
fs
push
and
sub
mov
mov
int3
dec
or
jns
loope
sbb
add
jns
mov
scas
dec
imul
jne
or
insl
stos
data16
pop
mov
sti
arpl
scas
mov
cmc
daa
mov
lcall
pop
in
fisttps
push
std
sbb
jecxz
imul
or
outsb
popa
ret
cmp
ljmp
cmp
cs
test
pop
scas
push
xor
mov
ffree
pop
fcompl
adc
nop
cld
sub
cmp
xor
mov
dec
mov
mov
sbb
fsts
fcmovne
cmp
loopne
mov
or
mov
mov
jg
loope
sahf
mov
jae
sarb
fsubl
test
mov
sbb
loop,pn
cmpb
pop
pop
out
cmpsl
scas
lahf
xchg
pop
fists
es
push
sbb
fldl
add
jo
sub
mov
adc
xor
cmp
push
gs
mov
test
ja
movsb
push
dec
outsb
jbe
push
mov
imul
inc
das
mov
mov
mov
xchg
or
fsubs
mov
mov
stos
call
fadds
mov
push
enter
cmc
jb
call
adc
mov
inc
inc
mov
push
xchg
lahf
dec
sahf
or
dec
add
data16
sub
xacquire
mov
mov
fcmovnbe
inc
nop
push
sti
sbb
jmp
inc
out
xchg
mov
dec
stc
mov
aam
or
js
bswap
mov
fidivrs
sbb
lock
into
or
sub
jae
inc
or
repz
fwait
jp
sar
dec
mov
les
mov
sbb
inc
jmp
enter
sbb
fldl
loopne
jno
sbb
pop
adc
mov
cld
push
xchg
out
mov
subl
jecxz
cmp
shlb
pop
movsb
decl
imul
aam
push
fildl
xor
lcall
arpl
mov
jo
or
jle
fistl
cs
sub
xchg
xchg
cltd
call
mov
out
fdivl
jmp
dec
mov
cmp
xchg
jl
test
inc
scas
pop
loope
fstl
push
mov
dec
in
ja
mov
add
xchg
xorl
loopne
xor
sbb
push
rclb
fwait
lret
xchg
xchg
lock
push
adc
mov
js
or
aaa
cli
mov
xchg
mov
and
mov
add
jbe
adcl
fisubrs
nop
sarl
clc
pushf
add
mov
pop
jecxz
sbbb
and
pusha
jns
ret
jae
mov
xor
lahf
stos
mov
sbb
mov
in
mov
sbb
test
inc
cwtl
ja
aaa
fdivs
pop
ds
bound
adcb
fyl2xp1
clc
sti
mov
test
andl
adc
and
rcll
push
add
mov
ret
lods
and
jge
hlt
cmp
mov
cwtl
inc
jno
test
popf
pop
out
xor
mov
sahf
inc
hlt
adc
cwtl
pusha
test
mov
push
xchg
fisubrs
xchg
pop
std
xor
mov
fdivs
pop
scas
pop
aas
mov
pushf
and
xchg
pop
sub
arpl
mov
cmp
insb
lret
clc
test
call
imul
pop
mov
pop
lret
mov
insb
movsl
popa
fs
lods
sub
pop
mov
lret
add
je
imull
mov
popa
adc
fs
test
jnp
call
fs
xlat
fisubrl
loopne
loopne
rcrb
dec
xor
sub
adc
mov
adc
cli
jl
jg
mov
pop
aad
push
dec
shl
push
push
fstp
pusha
inc
getsec
int
dec
jl
sbb
mov
sub
add
mov
pop
or
scas
std
pop
or
pop
repnz
inc
and
cmpsl
pop
mov
popa
iret
bound
mov
jno,pt
lcall
lret
arpl
insb
xlat
leave
loope
pop
jno
stc
daa
notb
mov
inc
push
pusha
out
aad
cmpsb
fwait
je
test
cmp
mov
and
int
and
mov
shlb
mov
rcr
jle
push
xor
mov
test
ja
aad
mov
xchg
cli
jg
rcll
sbb
std
lret
dec
xor
jecxz
mov
inc
dec
leave
int
por
pop
icebp
xchg
or
sbb
sbb
xchg
call
pop
mov
fs
out
fcoml
incl
pop
in
lods
sti
ds
mov
cmpsl
push
in
push
sub
idivl
or
xor
lods
pop
fdiv
mov
mov
test
loope
inc
mov
ss
outsb
and
les
push
xor
xchg
pop
xor
stc
cmc
jecxz
pop
mov
or
mov
repz
add
arpl
lcall
orl
sbb
in
les
xchg
jne
jge
xchg
adc
sbb
or
push
rcrb
mov
lret
jl
jmp
mov
adc
out
jge
fcmovnu
loope
aas
fsubrs
and
mov
in
dec
jg
mov
lods
lret
lods
and
xor
ljmp
sub
dec
add
ljmp
sar
lcall
mov
mov
addl
addl
add
push
rclb
mov
lahf
mov
push
pop
jmp
mov
mov
mov
das
xchg
or
xchg
cmc
adc
cld
mov
data16
jne
cmp
or
push
rolb
stc
scas
cmp
cmc
push
cli
jl
int
xor
fsubs
lret
xor
loopne
mov
pop
mov
cmpsb
cmc
pop
sbb
ljmp
aas
imul
outsb
cwtl
popf
push
dec
or
int
int
or
sub
mov
cmp
pop
cwtl
addb
xor
jp
mov
repnz
daa
movsl
and
in
xchg
and
stos
adc
sub
sar
int3
leave
or
and
popf
xor
push
mov
adc
mov
mov
xchg
sub
push
sbb
fst
adc
and
cmpb
add
out
push
cli
clc
push
adc
negl
scas
std
cmova
ljmp
out
mov
jmp
pop
sbb
push
ds
les
add
add
pop
imul
push
xor
rorl
mov
dec
jne
aam
cmp
adc
xchg
mov
xor
sub
mov
sub
sub
cmp
mov
xchg
mov
inc
sbb
orl
xor
lds
xor
add
push
icebp
add
push
fstps
inc
add
iret
fmul
mov
adc
imul
or
mov
imul
arpl
repnz
sub
int
dec
adc
push
mov
fcom
mov
inc
push
je
les
gs
lcall
xor
mov
mov
adcl
popa
jno
in
int
cs
cmp
imul
jne
cmpsb
xor
sti
out
insl
dec
stos
ss
flds
mov
push
mov
xchg
sub
fwait
sbb
roll
lock
push
push
adc
cwtl
pop
sbbl
add
or
arpl
sub
pop
in
sub
add
loop
push
xchg
add
cmpsb
jl
dec
test
ss
pop
repnz
in
xchg
mov
jns
dec
inc
adc
jmp
cmpsb
mov
mov
out
jecxz
call
mov
mov
mov
icebp
add
shll
xchg
mov
outsl
push
popa
movsl
sti
jge
pusha
jmp
cmp
mov
lcall
setne
mov
gs
sahf
ds
cmp
repz
xchg
xchg
orl
inc
cmpsl
push
pop
push
fdiv
pop
hlt
fcmovb
xchg
in
mov
jp
js
adc
lods
mov
dec
sbb
into
xor
shl
or
pop
gs
cmpsb
cmp
int
stc
cmp
jns
adc
xor
nop
fbstp
xchg
mov
push
lret
xor
adc
add
pop
ret
loopne
xlat
loopne
xchg
lock
aas
das
hlt
cwtl
mov
jecxz
xchg
mov
push
cmpl
mov
mov
test
xchg
jno
lods
adc
fs
sbb
mov
les
mov
lret
cmp
sbb
hlt
dec
lahf
fldl
and
mov
nop
and
hlt
gs
mov
sub
outsl
mov
sbb
popa
adc
mov
hlt
loope
mov
fnsave
repz
and
push
or
adc
jge
cltd
jae
adc
ror
lretw
fidivs
or
shrb
cld
cmp
cmp
aaa
int
mov
inc
push
mov
pop
pop
sub
rol
push
fnsave
and
pop
and
cmpsb
cmp
stc
aad
repnz
sarb
orl
dec
xchg
lods
notl
xor
jmp
inc
dec
fwait
gs
mov
frstor
ret
pop
addr16
xchg
jbe
adc
jge,pn
push
imul
imul
jmp
pop
addb
lret
mov
es
mov
lret
sub
test
inc
dec
mov
pop
jle
and
lods
test
xchg
sbb
mov
inc
mov
cmp
stc
xchg
mov
sub
addr16
dec
jle
add
add
insl
out
or
xchg
js
mov
pop
insb
xchg
lret
inc
lahf
jl
pop
out
xchg
sbb
jl
iret
inc
inc
mov
cs
mov
jecxz
cltd
daa
repnz
mov
cmp
cmp
rcrb
cmp
adc
xchg
push
fstl
jp
out
push
inc
mov
mov
ljmp
cmpsb
sbb
insl
icebp
addr16
cs
fstps
jecxz
push
xchg
jb
lods
mov
xchg
in
xlat
pop
in
arpl
add
fldenv
and
sub
and
jp
ss
out
push
incl
shld
adc
lods
cld
lea
mov
add
xlat
jmp
inc
scas
pop
pusha
fs
push
imul
test
pop
mov
xchg
and
add
shll
inc
and
mov
xor
push
mov
bound
and
adc
cmp
aad
out
scas
aaa
hlt
test
aas
push
sub
test
dec
sbb
inc
and
jmp
inc
cmp
fnstcw
jb
cmpsb
mov
aad
dec
movsb
cmp
push
fidivs
ja
loop
dec
push
test
ret
daa
mov
pop
sub
loop
pushf
pushf
leave
rol
xor
inc
push
or
fisubs
fistl
fcoml
jmp
push
jecxz
mov
fldl
scas
mov
sub
shlb
mov
mov
mov
push
in
lds
pop
push
mov
outsb
add
jp
jbe
xchg
sahf
xchg
pop
sbb
fisttpll
out
mov
cmc
repz
push
sub
add
mulb
inc
xchg
push
push
sub
xor
addl
xchg
fnstsw
lret
int
stos
adc
testl
pop
sub
sub
adc
fists
cmp
lret
inc
or
pop
decb
jnp
mov
xor
imul
fisubrl
lret
loop
add
add
fisubrs
imul
es
loopne
mov
jno
jb
cmc
stos
cmp
mov
ljmp
hlt
ret
add
inc
cmp
push
jae
into
xchg
push
cmp
push
enter
inc
dec
fsubl
jle
sbb
clc
add
pop
xchg
xchg
outsl
fdivl
shl
dec
dec
jns
std
mov
fadds
sti
leave
pop
pop
fmull
mov
mov
inc
clc
pusha
mov
ljmp
imulb
jne
jg
xor
or
fs
inc
xchg
jmp
dec
mov
outsb
cmp
je
mov
and
mov
lret
sbb
sub
fwait
jae
dec
rcr
mov
mov
pop
jnp
popa
mov
fstpl
les
leave
sbb
push
cmp
loopne
outsb
test
sub
hlt
pushf
cltd
in
ficomps
adc
ja
dec
push
subb
jmp
and
loopne
sbb
cs
xor
clc
sti
jnp
mov
mov
mov
add
mov
mov
cmpsl
and
push
sbb
pop
jp,pt
or
in
fstps
mov
pop
add
sahf
xchg
dec
and
out
add
inc
pop
push
cltd
inc
fcoml
das
adcb
out
lea
cmp
mov
aam
and
fsts
and
insb
xchg
in
int
xchg
lret
fwait
xchg
pop
gs
sbb
and
stos
add
cmp
mov
stc
insb
shrb
shl
imul
inc
push
push
xchg
jo
loope
icebp
testb
shl
push
mov
fimull
cltd
push
xchg
xchg
xor
ds
ret
and
cmp
and
push
pop
pop
dec
imul
lret
mov
test
pop
push
jecxz
sbb
adc
sbb
flds
cmp
sub
rolb
dec
mov
lahf
lods
sbb
jle
and
or
jb
dec
insb
jbe
sarb
mov
dec
test
into
mov
fwait
cli
pusha
inc
jmp
sub
or
imul
call
cld
and
mov
movsb
jmp
sbb
js
cwtl
jae
ljmp
les
push
addr16
mov
outsb
shlb
cs
add
inc
imul
repz
cmp
fldl
jne
das
jno
lea
in
mov
mov
lock
cmp
movsl
jne
movsl
in
pop
je
pop
repz
jecxz
shlb
dec
mov
adc
shlb
arpl
fwait
pop
add
adc
xor
inc
mov
ret
lds
pop
jp
idivb
push
insb
addr16
cmp
enter
dec
lret
sub
xor
cs
mov
and
fdivs
scas
bound
sbb
inc
insb
jmp
imul
push
fs
sub
sbb
pop
rcll
addr16
sbb
xchg
fs
mov
enter
cmp
fbstp
sbb
out
mov
clc
add
movsb
dec
call
std
movsl
or
pop
fisubs
lahf
bound
sub
mov
lea
push
mov
inc
jo
pop
mov
mov
mov
and
in
pop
pop
mov
jns
sti
test
mov
fmulp
out
push
inc
sbb
mov
pop
insl
and
mov
jl
pop
push
xchg
xchg
mov
pushw
push
push
add
lods
xchg
test
jne
xor
aad
inc
push
mov
xlat
push
inc
ljmp
lock
adcb
inc
push
mov
adc
mov
add
je
dec
loopne
test
xchg
popa
arpl
aaa
popf
sbb
add
cmpsb
fdivrl
dec
lods
pop
das
sbb
imul
sbbl
xchg
or
out
xchg
cmc
test
mov
push
push
pop
dec
push
mov
or
jae
push
or
dec
jge
aam
mov
dec
inc
fwait
inc
push
and
push
pop
sbb
mov
pop
shl
inc
cmp
push
ds
js
sbb
mov
add
lods
aas
mul
in
mov
loope
cli
fisttpll
xor
sbb
adc
pop
sahf
enter
cli
sbb
cmpsl
mov
mov
outsl
fmul
push
call
or
cmp
lcall
pop
and
outsl
outsl
inc
sub
lods
mov
xchg
divl
les
adc
dec
rcrl
bound
cmc
mov
pop
sub
add
mov
mov
mov
inc
lods
push
xchg
outsb
or
mov
push
sub
out
or
xchg
fs
loope
xchg
movsb
pop
lods
nop
xor
enter
insb
push
std
cltd
sarb
out
dec
out
bound
mov
bound
shlb
cmp
adc
mov
ja
pop
movsl
adc
mov
mov
out
sbb
pop
push
cltd
mov
sti
mov
cmp
ret
or
mov
scas
xor
sbb
jg
inc
es
sbb
ret
xor
push
mov
je
mov
out
xor
cld
mov
cmp
jp
add
and
clc
rcrb
mov
ds
xchg
dec
dec
scas
push
xchg
mov
mov
nop
lea
scas
insl
ds
fucomip
out
repz
ljmp
add
mov
mov
pop
push
rcr
mov
ljmp
test
outsb
test
je
push
xor
pop
arpl
adc
push
hlt
dec
cltd
xlat
mov
add
inc
cmc
inc
cld
lods
jp
and
mov
arpl
and
fucomip
loop
push
je
xchg
dec
mov
imul
fistl
add
ljmp
dec
cmp
mov
into
dec
out
mov
pop
addb
adc
add
popf
int3
xor
sbb
mov
push
xor
sub
xor
jae
in
outsb
mov
in
jnp
stos
dec
mov
dec
mov
lcall
sbb
and
mov
xchg
pop
add
adc
jecxz
or
adc
repnz
sub
mov
lret
jg
rclb
and
and
testl
xor
imul
loop
mov
int3
sub
shll
popa
xor
dec
mov
push
bound
fisubl
faddl
pusha
outsl
cli
ret
push
cmp
pushf
push
scas
je
mov
inc
movsl
stos
mov
and
mov
daa
push
adc
inc
mov
movsb
dec
inc
lods
mov
hlt
aam
lods
rorl
daa
sti
sub
sub
and
sub
jmp
pushf
or
inc
int3
aad
cld
fistps
push
in
mov
ficompl
adc
pop
push
sahf
or
lahf
shll
lcall
or
jmp
xor
rep
insb
js
aad
mov
loope
cli
mov
mov
pop
dec
rorl
cs
cs
shlb
mov
scas
push
mov
jmp
ljmp
pop
sub
imul
inc
sbb
outsl
lea
loop
xor
shll
push
into
and
outsl
push
lret
iret
rol
jmp
cld
xor
insb
and
lock
loop
mov
jb
push
dec
pop
lret
sbb
push
mov
or
and
sub
cmp
jp
adc
inc
pop
bsr
pop
jno
mov
pop
jmp
xor
popa
push
inc
or
aam
adcl
punpckhwd
cmp
mov
loopne
prefetchw
cltd
cmp
sahf
cmpsl
cli
cmp
xchg
out
or
hlt
imul
mov
mov
jp
cs
xor
shl
nop
sbb
shlb
sbb
rcll
addr16
lds
add
dec
cmpsb
dec
enter
dec
lods
push
ds
stc
inc
push
out
sub
xchg
pop
dec
into
repz
or
jnp
mov
aaa
xor
cmp
push
sar
mov
jmp
cltd
ret
lock
sub
je
jnp
bound
pushf
int3
mov
cwtl
lret
shlb
push
sbb
mov
pop
jge
out
xchg
sbb
shrl
add
xchg
inc
push
pop
insb
pop
arpl
rcrb
cld
or
ret
sbb
sti
jne
mov
pop
xor
je
jno
sbb
rolb
inc
add
outsb
and
pcmpgtd
add
hlt
enter
loop
cmc
fildl
mov
pop
cmpsb
sub
je
popf
inc
push
xorl
sbb
push
dec
enter
mov
or
lods
lock
xchg
clc
adc
mov
xlat
js
pop
jge
or
push
stc
inc
sbb
sub
cltd
fs
adc
cmc
cmp
jmp
jle
sub
out
mov
rcll
fists
xchg
cmp
push
mov
clc
mov
js
mov
add
orl
movsb
inc
mov
mov
sbb
out
gs
shr
and
jge
sbb
adc
and
xchg
dec
dec
mov
push
inc
jmp
add
pop
pop
xchg
push
push
cmp
inc
adc
fdivl
xchg
ja
scas
dec
or
jp
loopne
jmp
movb
push
dec
and
mov
mov
mov
push
push
or
sbb
imul
add
dec
nop
aas
test
hlt
xor
mov
mov
es
insl
mov
loop
lds
xor
fiadds
ret
pop
popl
push
repz
lods
inc
out
inc
sbb
shrl
inc
jnp
ds
inc
inc
inc
push
add
xor
xchg
jbe
insb
imul
ret
xor
push
cmp
fwait
xchg
call
loope
mov
xor
nop
jmp
out
lret
jns
jo
pop
repz
rclb
adc
xor
mov
insl
cld
mov
xor
and
out
int
mov
out
inc
data16
loop
fdivl
pop
int
test
shrb
aam
repz
sbb
dec
sbb
leave
cltd
add
andl
sahf
call
push
clc
outsb
cmp
ret
mov
mov
push
gs
cs
adc
jmp
repnz
xor
adc
fldcw
outsb
mov
sbb
stc
inc
push
cmp
js
mov
cmc
inc
pop
int
pushf
adc
push
push
outsb
mov
or
fidivrl
jno
push
ja
and
ret
xor
mov
xor
dec
cmp
insl
add
adcb
lods
xor
sbb
ja
loopne
mov
das
or
inc
stos
rcrl
pop
mov
mov
dec
out
dec
mov
rorl
divb
fidivrs
outsl
xchg
cmc
xor
adc
pop
cmp
aas
loop
roll
lods
cmpsl
rorb
inc
dec
lock
gs
fcmovne
push
adc
jae
pop
fwait
xor
and
xchg
jnp
popa
sub
sbb
out
outsb
jp
mov
pop
add
enter
pop
and
movsl
push
jge
fwait
fs
cmpsb
out
mov
xchg
int3
dec
dec
jge
push
mov
hlt
out
pop
out
sbb
xchg
adc
das
in
adc
push
xchg
mov
inc
sub
mov
mov
loopne
cmpsl
lock
mov
insb
xchg
cltd
lcall
cmpb
iret
add
jge
repnz
lret
adc
cmp
sub
dec
mov
jns
mov
jbe
mov
adcb
jle
cmp
xchg
adc
jle
push
cmp
outsl
das
mov
es
iret
pushf
or
in
inc
cmc
les
test
mov
stc
push
mov
sub
dec
jbe
add
push
jno
adc
lods
imul
sbb
sub
and
fldenv
or
and
fadd
scas
out
lret
je
pop
in
in
pop
pop
dec
pop
pop
xchg
push
subb
fimuls
in
in
mov
add
fnstenv
gs
lods
ror
movsl
mov
cld
aad
call
push
dec
dec
cmp
dec
push
rcr
jb
cmp
cmpsb
imul
sub
out
rorl
mov
mov
es
ja
cmovne
adc
mov
out
imul
mov
sbb
push
pop
xor
sti
xlat
sarl
jno
clc
std
and
insl
ret
je
mov
xchg
ret
mov
pop
test
xchg
lods
adc
fwait
cltd
lret
cmp
jmp
or
rclb
push
cwtl
fistl
sahf
mov
mov
inc
mov
dec
mov
insb
addr16
insb
xor
stos
les
movsl
jb
jge
aas
stos
jmp
mov
cli
popf
imul
ret
mov
xchg
jb
sar
shrb
mov
das
lcall
aad
lret
xor
sbb
xchg
mov
dec
hlt
lods
and
std
inc
xor
xchg
arpl
and
ret
fisubrl
lock
xchg
pop
jl
mov
ljmp
add
fimuls
adc
ss
jp
dec
testl
insb
sbb
xchg
xchg
jp
stc
mov
add
inc
push
outsb
pop
push
cmp
das
push
mov
ja
cwtl
in
fstpl
xchg
mov
sahf
xor
fcmovbe
add
jns
cltd
out
push
fwait
int
mov
repnz
dec
mov
pop
xor
pop
fidivrl
pop
and
xor
arpl
sbb
test
std
mov
xchg
xchg
jo
enter
jns
push
pusha
add
cs
aas
jmp
in
stc
dec
and
shlb
xchg
lea
add
xor
dec
out
adc
xor
pop
xor
mov
into
cltd
jecxz
lock
mov
mov
hlt
pop
ficomps
cmp
or
mulps
jae
and
out
push
pop
jno
leave
aad
xchg
add
insb
mov
push
inc
jl
iret
jne
popa
sub
call
jb
cmpsl
pop
ss
and
jl
mov
lret
cs
mov
sbb
mov
dec
int
lea
inc
mov
pop
jo
add
es
stc
push
jp
cmp
into
mov
inc
subl
mov
repz
ret
stc
push
xorb
int3
push
out
fidivrs
cmp
test
rorl
push
jnp
inc
or
mov
test
sub
dec
push
push
inc
add
int
hlt
sti
mov
shll
pushf
fwait
test
mov
ret
cmpsl
imul
addr16
mov
add
sbb
in
pop
mov
sub
push
adc
push
iret
iret
jae
cmp
sub
sbb
xor
divl
mov
add
sbb
dec
sub
lret
sti
mov
call
pop
pop
mov
aaa
cs
mov
dec
out
adc
lret
sub
sub
pop
fistpl
jmp
sti
mov
pop
int
bound
cwtl
cmp
test
fadds
sub
stos
mov
push
push
xor
push
or
loop
cmp
adc
adcl
int
push
lods
or
bound
cld
push
adc
in
cmpsb
xor
call
dec
mov
int
push
fucom
int
jae
mov
pop
lret
shlb
fldl
mov
dec
and
scas
jbe
inc
repz
shrl
add
jmp
push
sarl
scas
inc
jno
in
pop
cmp
or
int3
out
aaa
xchg
repz
fldt
ret
cld
daa
mov
adc
icebp
hlt
xor
jg
cmpl
leave
out
dec
pop
ds
rolb
pop
pop
or
mov
sub
push
cmc
mov
aam
adc
fcomps
mov
leave
das
lahf
adc
stos
pop
push
pushf
lods
repnz
movsb
int
mov
faddp
mov
ljmp
movsb
add
mov
ret
dec
psrld
out
js
jno
jmp
inc
sub
sbb
jecxz
mov
xor
jmp
sub
adc
insl
sub
rcr
jle
lret
int3
or
stos
push
rcrb
inc
pop
fs
mov
push
and
cwtl
mov
inc
jb
ret
mov
or
out
lock
sub
shl
shlb
or
aad
das
jg
push
inc
test
out
mov
add
mov
cwtl
aad
push
fdivs
add
xor
sbb
repz
jae
enter
and
rolb
mov
fcomip
int3
adc
jle
jno
inc
test
mov
stc
mov
dec
dec
inc
inc
xor
push
nop
xlat
pop
xor
dec
iret
pushf
aam
push
mov
fisttpl
pop
cli
les
shlb
lock
sbb
mulb
adc
in
mov
loop
loope
pop
push
or
scas
and
push
fldl
in
or
mov
rcrl
pop
cmp
or
jnp
and
inc
add
repnz
fsubl
mov
fsubl
sbbb
clc
mov
and
xor
and
pop
add
scas
or
gs
loop
mov
dec
push
pop
sbb
inc
je
and
xor
push
add
push
insb
push
aam
loop
addr16
pop
cmp
out
int
mov
mov
jle
lods
enter
jmp
add
add
mov
mov
lahf
jmp
int3
cmp
lret
popa
adc
notb
fimull
rol
or
xlat
and
cmp
jno
adc
push
je
mov
sbb
orb
arpl
imul
push
xor
out
rcrl
sahf
pop
xchg
fcmovne
or
sbb
jg
xchg
xchg
out
and
mov
ja
std
std
cmpsl
mov
hlt
xchg
cmp
mov
mov
popa
aas
icebp
push
repnz
xor
xchg
aad
imul
rclb
push
addb
xchg
mov
rolb
clc
in
outsl
ret
add
inc
cmp
or
dec
fldt
mov
rorb
cmpsb
dec
leave
mov
push
push
pusha
sub
adcl
xchg
sub
inc
push
or
push
or
ja,pt
add
mov
xor
fstpl
imul
test
jmp
pop
inc
sub
push
adc
sbb
lea
cmc
sbb
aam
lock
movsl
sub
xbegin
ds
push
imul
sub
mov
xor
loopne
and
int
clc
sbb
mov
xchg
pop
out
bound
jb
push
push
xor
pop
push
dec
fistl
sbb
pop
fcmovu
leave
gs
sub
fnsave
loope
pusha
or
push
lock
loop
lds
pop
mov
jecxz
and
in
sahf
rcrl
cmp
push
and
aas
add
js
adc
add
insl
cmp
rorl
sbb
sbb
clc
mov
mov
aaa
pop
fcmove
icebp
mov
inc
pop
out
sub
add
stos
dec
add
gs
xchg
jo
lahf
jge
xchg
imul
jns
adc
fwait
mov
scas
popf
dec
bound
add
push
xchg
jbe
sub
lods
fiadds
jbe
add
test
mov
ljmp
mov
data16
cmpsb
and
js
and
and
push
dec
mov
xor
stos
rep
fs
mov
test
xchg
push
inc
sbbb
add
jno
daa
mov
pop
mov
xchg
sub
fldl
test
xchg
out
shrl
cwtl
arpl
les
pop
pop
lock
je
mov
jno
andb
pusha
mov
in
sbb
cmp
cmp
fstl
and
mov
add
mov
std
repnz
cmp
cld
mov
shrl
mov
adc
sub
popa
and
ljmp
xchg
mov
test
arpl
dec
sbb
xchg
ret
sbb
inc
rclb
jg
pop
pop
inc
inc
fwait
call
out
je
pop
jae
mov
leave
nopl
dec
add
cmp
xchg
mov
jnp
jecxz
in
lcall
test
pop
in
pop
shl
push
push
inc
sub
push
mov
rcll
and
dec
sbb
outsl
pop
lret
fisubrl
jecxz
dec
mov
loope
mov
push
mov
xor
add
mov
cli
out
cmpsl
jl
leave
stos
jl
xchg
cmp
adc
add
lahf
mov
sub
mov
mov
xor
adc
insl
xor
dec
or
jb
inc
add
sahf
mov
mov
push
xchg
or
add
push
jne
jae
cmp
pop
sub
dec
push
stos
dec
test
xchg
les
add
adc
loop
sbb
add
popa
jno
aad
fidivrl
cltd
in
out
sbb
addr16
test
mov
mov
stc
dec
mov
shlb
insb
push
cltd
inc
mov
or
sub
dec
sub
outsb
lcall
push
sahf
movsl
sbb
in
cmpsl
mov
pop
jae
and
jbe
pop
repz
adc
push
jno
push
jg
hlt
sbb
outsb
out
or
mov
out
lret
push
mov
mov
jne
mov
mov
add
xchg
mov
adc
aam
pop
dec
fwait
inc
loop
outsl
sbb
mov
xchg
arpl
sbb
outsl
cmp
in
inc
add
repnz
sbb
aas
or
mov
or
imul
inc
aas
inc
or
sub
int
es
popf
dec
scas
cwtl
or
xchg
jmp
adc
xchg
dec
or
ficoml
std
ds
xchg
mov
dec
xor
jmp
mov
mov
js
jo
fistps
pop
mov
out
or
pusha
sbb
iret
data16
mov
add
cmp
popf
xor
cmp
inc
es
mov
stos
push
inc
aas
js
sub
dec
cwtl
fxch
or
push
mov
stc
xchg
push
ja
add
outsb
cmc
adc
cmp
inc
fsubs
pop
xor
ss
fldenv
cs
dec
xchg
mov
sarb
pop
cmp
inc
inc
xlat
out
aad
sub
pop
xchg
inc
push
jne
and
loope
fsubl
cmpsl
sub
out
push
roll
jmp
shl
subb
mov
pop
fistps
fsub
adc
jl
mov
lock
jp
int
sbb
call
fnstenv
pop
seto
jl
pop
and
dec
dec
inc
cmc
dec
and
xor
lock
jo
mov
jb
in
jecxz
pop
imul
pop
lahf
aad
dec
adc
addr16
dec
insb
pop
push
or
roll
mov
lock
ja
sahf
dec
mov
subl
outsl
sub
aam
pop
mov
mov
out
and
jp
sarb
in
inc
push
outsb
mov
mov
in
jmp
icebp
js
repnz
std
cmpsl
or
xchg
inc
or
test
pop
mov
pop
dec
xchg
bound
mov
scas
bswap
iret
xorl
inc
cltd
mov
cs
jno
mov
dec
pop
adc
sub
aaa
sbb
and
iret
xchg
or
push
hlt
add
and
gs
pop
lds
mov
sbb
jmp
jecxz
pop
jo
popa
sahf
jmp
sbb
psllw
jg
push
mov
adc
loop
adc
fidivl
pop
mov
lds
cld
xchg
arpl
push
mov
jge
mov
icebp
test
sbb
adc
lock
enter
outsb
shl
pop
pusha
lock
sbb
shrl
test
xor
sub
jo
mov
addl
jnp
mov
jecxz
mov
mov
outsb
add
rorb
and
push
lret
loop
inc
clc
seto
sub
push
mov
scas
lret
fidivl
cltd
mov
call
cmc
dec
rorb
and
mov
cmp
mov
jb
adcb
jns
les
scas
in
inc
add
mov
repz
ret
or
jg
add
dec
in
pop
xor
shlb
xorl
pop
aad
pop
popl
aad
fistpll
mov
jg
mov
pop
mov
mov
lods
jecxz
rolb
adc
or
mov
js
adc
pushf
push
jg
popf
pop
cltd
mov
addr16
inc
pusha
jmp
ljmp
jno
inc
aas
lahf
test
and
push
ljmp
jmp
into
cmp
add
jne
and
fisttps
popf
dec
in
fst
add
pop
addb
xorb
push
ret
adc
sbb
mov
or
cmp
push
xchg
push
sub
inc
or
xor
mov
mov
movsb
pop
stos
sti
push
jbe
lds
mov
popf
mov
aas
pop
cli
push
movsl
fwait
xchg
lret
mov
push
adc
xchg
add
dec
mov
sbb
push
mov
scas
stos
sbb
push
mov
cmp
pop
cmp
cmp
xlat
call
mov
mov
aaa
push
fstpt
adc
arpl
nop
xor
sahf
es
and
dec
and
insb
les
cli
dec
ja
add
mov
movsb
hlt
jo
cmp
jecxz
cmp
mov
pop
push
jo
lea
push
and
adc
and
outsl
adcb
nop
test
sbb
mov
dec
insb
mov
add
xchg
sahf
and
push
cld
mov
dec
repnz
movsl
add
cmpsl
mov
aad
pop
cmpsb
push
rolb
push
cld
in
lret
nop
jno
sub
or
aaa
cltd
jg
or
inc
pop
or
sbb
push
in
xor
out
aas
pushf
jns
jge
xor
xlat
or
divl
mov
sbb
xor
bound
aas
arpl
mov
icebp
sub
dec
adc
lods
add
or
into
jle
fwait
int
pop
jp
xchg
push
jne
push
scas
pop
mov
push
sub
stc
divb
out
andl
aad
aad
mov
sbbb
mov
divb
fdivl
nop
push
mov
pop
adc
das
fcmovb
ret
mov
mov
inc
aas
fsts
inc
push
pop
aad
fs
lods
inc
sbb
add
push
cli
dec
gs
push
ss
in
mov
les
popa
inc
push
gs
pop
dec
andl
or
outsb
test
mov
xchg
xor
sti
in
arpl
aam
xchg
les
out
clc
xor
inc
adc
imul
pop
in
and
inc
push
sbb
sub
sbb
cmpsl
jecxz
adc
lret
test
in
out
add
inc
lods
lahf
push
test
jns
sbb
pop
sub
mov
pushl
inc
add
sub
inc
pop
xchg
aas
test
pop
movsl
cld
mov
dec
aam
insb
xchg
adc
fwait
ret
mov
adcb
scas
mov
mov
lea
jmp
mov
dec
inc
in
push
sub
xor
inc
or
movsl
dec
push
insl
pop
adc
pop
pushf
push
mov
mov
adc
pop
rcl
jmp
bound
into
dec
sub
sub
mov
decl
xchg
stc
fisubrl
aas
pop
add
mov
mov
test
into
ja
lods
cmp
mov
dec
lret
iret
cli
dec
xchg
call
scas
mov
pop
aaa
stos
add
adc
sub
adc
ja
mov
mov
lret
and
xchg
mov
movsb
pop
fistl
push
push
int3
adc
mov
int3
or
arpl
pop
popa
mov
daa
inc
jmp
in
jge
in
mov
movsb
rolb
test
cmp
or
xchg
cltd
fisubrs
imul
mov
cs
inc
loopne
pop
fcmove
insb
jns
sarl
mov
pop
xchg
stc
adc
jae
mov
aad
or
sbb
mov
inc
jns
gs
imul
bound
mov
xchg
repz
cmc
dec
loop
cwtl
push
adc
push
test
inc
xor
mov
mov
sbbl
ds
je
jmp
inc
enter
dec
pop
ficoms
test
aad
xchg
jle
repnz
mov
aaa
mov
adc
mov
aas
and
iret
dec
fsubl
leave
mov
daa
sub
jle
or
into
and
ss
pushf
sub
jno
hlt
jnp
adcb
inc
das
pop
dec
pop
leave
cwtl
mov
movsb
mov
mov
and
jmp
and
lret
cwtl
pop
mov
push
test
add
imul
xchg
bound
ficompl
mov
subl
dec
and
mov
in
inc
std
push
test
stos
fidivl
cmp
sahf
aad
cmp
sbb
dec
push
lods
xchg
cmp
sbb
pop
push
pop
mov
loop
nop
rcr
call
mov
icebp
inc
push
ret
jno
fistps
in
insl
or
jae
sub
jae
push
lahf
sub
sbb
scas
fistps
pop
ror
out
mov
jnp
lock
pop
in
aad
repnz
pop
push
xchg
call
popa
adc
xor
loopne
inc
lret
clc
mov
aam
fcomip
cmpsb
adc
loope
or
and
or
push
daa
xor
or
mov
adc
test
jle
bnd
fadds
mov
inc
mov
loopne,pn
rolb
mov
jnp
and
or
ds
fldcw
scas
std
add
push
and
bound
sbb
jne
scas
mov
sub
adc
gs
sub
xorb
pop
rcrb
jb
scas
push
jle
cld
mov
imul
lock
in
mov
cmc
jo
insl
inc
dec
push
fidivrs
add
aas
ds
cmc
pushf
imul
mov
inc
clc
es
cmova
jo
mov
iret
and
fwait
sub
js
cli
sarb
dec
sub
jle
imul
daa
test
adc
test
or
mov
imul
push
push
push
rdpmc
pop
pushf
inc
xchg
outsl
push
jmp
in
test
cmpsb
sbb
mov
outsl
push
jle
sbb
sub
add
xchg
lds
and
dec
jo
inc
imul
pop
inc
cwtl
jae
test
jb
adc
hlt
pop
cmp
cmp
push
jle
imull
fnsave
outsl
mov
stos
imulb
cmpsl
mov
test
js
lods
xor
jbe
and
dec
fidivrl
xlat
repnz
test
mov
add
repnz
je
push
push
mov
jbe
sub
sub
add
adc
call
fildl
or
or
push
inc
mov
int3
mov
arpl
push
mov
push
mov
mov
fcompl
mov
and
mov
enter
jno
aam
inc
sbb
mov
fwait
add
mov
mov
sbb
std
add
fdivs
negb
int
fwait
xor
cmp
jbe
xor
lods
mov
push
loop
xor
es
mov
fwait
inc
out
mov
dec
popw
lahf
add
pop
inc
cmp
ret
shlb
cs
mov
cmpsb
mov
imul
iret
maxps
jle
aaa
dec
xchg
mov
daa
outsb
shr
jge
jecxz
cmp
inc
sub
mov
hlt
ds
test
lahf
cmp
repz
es
bound
pop
outsb
jecxz
sub
or
dec
out
or
inc
rcrb
dec
fnstsw
sub
leave
in
dec
push
inc
and
mov
jne
and
loop
cltd
sub
xchg
jle
xchg
xorps
out
aas
or
sbb
stc
out
add
leave
arpl
jmp
jmp
mov
sub
int
and
adc
push
mov
ret
cmp
mov
fdivs
test
push
into
xchg
cmp
sub
iret
roll
ds
pop
out
fdivp
sbb
mov
lods
int3
adc
mov
scas
sbb
pop
fidivrs
int
jle
sbb
xchg
pop
ror
fcmovnbe
and
xor
jle
and
mov
nop
ret
in
dec
imul
inc
adc
lods
mov
add
pop
into
add
xor
and
imul
push
fwait
push
aas
cmp
add
adc
mov
icebp
bound
scas
leave
add
xor
fnsave
mov
add
or
mov
addr16
sub
rorl
dec
sub
sti
stos
lcall
pop
add
add
or
or
sbb
in
xchg
int3
clc
call
inc
mov
xor
int
addr16
pop
arpl
push
sbb
or
mov
cmp
adc
lahf
insb
test
subb
ret
jg
sti
adc
lods
dec
das
movsl
push
lcall
addb
add
adc
adc
outsb
inc
enter
cmpsl
jb
ja
adc
mov
aas
cmp
cmp
xchg
push
aaa
sbb
mov
mov
adc
and
jp
ficoml
jb
shll
adc
and
inc
cwtl
loop
hlt
xor
jns
xchg
xor
imul
xor
dec
ljmp
popa
cmp
mov
lods
lds
jmp
cmp
call
fsubrs
aaa
jne
pop
imul
in
jbe
xor
xor
pop
dec
mov
stos
push
mov
xchg
mov
dec
xchg
jne,pn
lret
xlat
cs
sbb
ret
pop
xchg
maskmovq
imull
xchg
ret
mov
or
and
stos
fimull
cmp
jmp
shl
lret
mov
xchg
cli
xchg
or
xor
or
mov
aaa
xchg
or
cmc
aam
cmp
mov
cld
stos
sub
iret
leave
ret
int
jmp
push
inc
mov
scas
loope
std
cmc
and
mov
lock
in
adc
jg
xor
out
mov
lods
stos
lea
and
sbb
int3
mov
pop
push
pop
mov
pop
sub
fwait
mov
push
loope
and
xchg
and
roll
inc
in
sahf
adc
cmp
add
mov
outsl
and
push
subl
hlt
add
xor
adcb
mov
pop
sub
and
stos
in
and
or
mov
movsb
jmp
xor
in
ja
inc
cmc
inc
push
les
out
bound
leave
fdivs
add
pushf
outsl
mov
cmp
ret
dec
dec
fldt
mov
and
jge
lfs
cld
call
cmpsb
lock
loop
das
and
mov
sti
insl
cli
cmpsl
adc
out
std
lret
mov
jecxz
ljmp
xor
in
lahf
sub
mov
outsb
clc
xlat
clc
jbe
fdivl
mov
sub
enter
adc
xchg
mov
jp
xchg
lret
xor
dec
xchg
inc
and
lock
out
pop
xchg
jecxz
pop
push
loopne
jle
mov
mov
clc
popf
in
inc
fidivl
nop
inc
repz
lret
test
dec
xor
push
xor
lret
dec
icebp
push
dec
jmp
pop
jb
sub
sahf
cli
push
insb
ret
fadds
js
mov
and
dec
pusha
mov
aaa
cmp
rorl
pop
xchg
mov
inc
and
arpl
pop
fcomip
push
hlt
cmp
xchg
js
fsub
les
xchg
aad
cltd
out
ljmp
xor
sub
pusha
dec
and
sbb
pop
fs
pop
sub
push
pushf
jo
add
jnp
mov
iret
lahf
in
xor
movsb
das
xchg
mov
xchg
fcompl
mov
sbb
data16
mov
xchg
push
inc
cmp
mov
mov
stc
jl
fmul
call
lock
add
sbb
cli
or
jmp
rcll
xor
std
test
lods
aad
push
arpl
loopne
dec
or
sbb
pop
lock
std
pop
lods
pop
mov
stc
pushf
lret
inc
sub
ds
addl
push
in
xor
enter
push
cmp
sbb
pusha
pop
subb
lret
scas
les
int
leave
xor
out
in
fdivr
inc
mov
xor
sub
fisttpl
xchg
cmpsb
aam
das
add
sbb
rorb
xchg
push
repz
jnp
popa
mov
fbld
call
pop
daa
into
and
into
mov
fisubrl
dec
scas
push
inc
inc
xchg
push
dec
add
lahf
shrb
mov
iret
test
adc
bound
test
fildl
mov
inc
cmpsl
xor
fisubrl
call
pop
lods
dec
lock
roll
or
jae
iret
movsl
rclb
jo
xchg
mov
sub
and
cmpsl
xor
and
pop
mov
mov
in
mov
cmp
and
dec
loope
scas
add
push
shrl
adc
in
add
enter
cld
fucomp
mov
cmp
in
cmpl
jle
je
push
stos
mov
mov
icebp
inc
ja
add
enter
fwait
cs
fwait
ret
sti
es
xor
push
mov
mov
lock
lret
and
and
cwtl
divl
vpcmpgtw
mov
sub
test
jl
or
dec
jbe
fbstp
adc
pop
fldt
jno
jbe
outsl
jbe
les
aaa
jnp
cmpsl
addr16
lret
xchg
inc
push
mov
adc
in
insl
jns
movsb
mov
push
addr16
mov
dec
neg
popa
xor
lods
mov
ss
push
fistpl
xor
ss
int
sbbb
pop
lahf
cmp
test
sbb
sahf
cltd
int3
fdivl
gs
sub
loopne
int3
ret
add
or
pop
mov
xchg
js
jmp
dec
out
xchg
cmp
sti
cmp
xchg
das
bts
sub
movb
or
pop
sti
mov
fs
int3
cwtl
mov
faddl
int3
push
add
inc
inc
mov
xchg
pop
lcall
mov
aam
test
insb
pop
outsb
xor
mov
loopne
add
xacquire
aaa
mov
inc
pop
inc
loopne
mov
push
in
shl
add
icebp
xor
cmp
jecxz
ret
push
lea
bound
es
adc
add
or
xchg
jne
sub
in
bound
int3
mov
and
leave
je
cmp
mov
sbb
and
jnp
sub
mov
je
outsb
in
adc
mov
insl
clc
jp
inc
inc
add
int
sahf
rcrb
into
dec
xor
cmp
push
or
fldenv
sbb
dec
xchg
bound
aaa
mov
dec
sahf
mov
cmp
divb
push
cmpsl
notb
in
jo
addr16
and
adc
data16
sub
gs
data16
mov
inc
fucomp
dec
insb
int
cld
lods
aam
in
add
clc
inc
and
mov
lcall
sub
gs
fldcw
shr
outsb
sbb
shl
xor
rclb
addr16
out
nop
push
lcall
cmpsl
in
and
sar
notb
inc
and
xchg
and
rdpmc
dec
lds
cmp
jp
pminub
call
mov
adc
mov
subl
popa
cmp
fstpt
pop
adcl
and
pop
nop
push
ja
dec
or
gs
xor
xchg
push
roll
jb
bound
leave
fld
xchg
sbb
lahf
mov
lods
add
std
dec
inc
pop
mov
cmp
test
push
push
add
jge
sbb
xchg
xchg
pop
fidivrl
dec
or
into
sub
inc
inc
hlt
hlt
sbb
orl
pop
shll
add
je
pop
inc
test
or
sbb
pop
cmp
out
je
mov
ret
mov
cmp
js
test
sub
xor
or
das
pop
jb
and
mov
push
repnz
adc
mov
sbb
mov
dec
and
inc
adc
bound
test
jno
in
ds
outsl
cwtl
pushf
pcmpgtw
xlat
addl
rol
cltd
mov
insb
xor
push
fmull
pop
push
ja
sbb
xor
add
dec
xor
inc
push
sbb
in
mov
dec
outsb
add
push
mov
pop
xor
cs
popa
jae
movsb
mov
push
pushf
adc
mov
dec
test
lcall
mov
adc
imul
mov
cs
sbb
into
sub
lds
stc
push
and
scas
sbb
lcall
cli
inc
add
les
dec
sti
or
outsl
pop
mov
mov
push
iret
add
sub
popa
jae
pushfw
or
fstpl
add
xchg
cld
aam
adc
mov
inc
nop
sbb
push
shr
sub
mov
mov
popf
scas
inc
test
leave
push
insb
xchg
ljmpw
int3
push
or
in
int3
lret
shrb
dec
loop
mov
push
insl
add
xchg
xorb
leave
addr16
out
adc
cmp
das
mov
cmp
dec
pop
inc
sbb
pop
outsl
mov
hlt
pop
test
pop
push
stc
mov
add
ljmp
mov
data16
sub
xchg
mov
mov
int3
ret
and
out
sarl
jp
fimull
data16
mov
and
jmp
push
sarb
into
into
out
leave
inc
add
xor
jns
ret
cmp
mov
movsb
adc
int
sbb
pop
je
rorl
out
rcl
xchg
mov
std
cmpl
iret
test
dec
or
pop
movsb
jg
sub
es
inc
xor
inc
negl
mulb
shrl
push
jg
jp
mov
mov
in
imul
ja
frstor
repnz
add
and
cmc
dec
cmp
je
cmp
in
dec
push
scas
adc
and
cld
lods
mov
mov
into
mov
test
jnp
and
jmp
les
mov
iret
sar
out
sbb
push
jno
adc
adc
pop
xchg
jne
mov
jbe
add
pushf
push
xor
loope
sub
shl
scas
jle
push
aad
std
mov
dec
or
pop
lahf
push
sub
fldt
and
lods
in
cmpl
notb
fcoml
push
rorl
repnz
dec
sarb
mov
sbb
inc
inc
jmp
inc
pop
sarl
lret
push
xchg
in
xlat
cmp
inc
lods
or
sub
cmp
int3
mov
std
push
insb
shll
sbb
mov
or
xor
aas
negb
cs
imul
dec
in
and
pop
jle
and
pop
push
cli
mov
mov
mov
xor
jo
into
clc
hlt
aad
push
ffreep
pusha
pop
lcall
xor
jo
fnstsw
jmp
mov
push
mov
xchg
and
int
sbb
xchg
hlt
xchg
mov
xlat
mov
mov
mov
outsl
fwait
stos
mov
pop
scas
push
dec
outsb
xor
idivl
loope
add
mov
pop
push
jl
jge
mov
mov
clc
sahf
jge
jg
mov
mov
mov
adc
rcl
sbb
sub
rol
cmc
shll
adc
loope
adc
cmp
dec
enter
mov
stos
jns
dec
and
xchg
icebp
iret
inc
pushf
pop
push
aaa
jno
and
test
push
adc
outsb
out
dec
add
xlat
inc
rcrb
pop
dec
std
movsl
paddusw
add
jp
js
rcrl
call
push
jno
test
push
out
cs
mov
int
ret
jmp
insl
cli
repz
cmp
fcmovnb
mov
xor
cmpsl
fs
jmp
adc
inc
lea
or
jmp
jp
lds
subb
lock
xchg
das
stc
fbld
xchg
es
inc
cmp
fadd
xor
pop
aas
rcrb
pop
sub
pushf
cmp
cmp
notb
and
push
or
mov
out
andb
and
sub
lcall
clc
ja
jo
dec
sbb
sub
add
xor
paddsw
into
sub
iret
in
xor
dec
shl
testb
cmp
sub
shlb
pop
int
cmpsb
ja
ficomps
rcrb
out
push
das
and
shr
inc
mov
in
fwait
rcrb
mov
daa
pop
push
jmp
rclb
sarb
and
aam
mov
jns
pop
and
insl
sub
int
cmp
and
sti
fwait
out
pop
add
lcall
add
pop
ret
aam
loopne
lods
xor
sub
adc
and
mov
das
pop
insl
ret
in
adc
shrl
sbb
imul
mov
jno
sbb
cmc
insl
cli
adc
int
sub
mov
icebp
and
icebp
add
mov
gs
aas
leave
imull
adc
push
ret
sahf
inc
enter
dec
ficompl
pop
sbb
in
js
dec
ret
mov
cmc
sahf
jb
and
xor
mov
pusha
aam
mov
scas
dec
das
inc
inc
sahf
sub
xchg
push
je
jo
je
sbb
fisttpl
cmc
add
lds
xchg
dec
mov
cli
fidivrl
push
cmp
aaa
mov
inc
rcrl
sub
js
lock
hlt
add
arpl
xchg
aaa
mov
mov
push
mov
adc
mov
imul
and
cmp
fsubs
pop
insb
cmp
pop
jp
push
idivb
aas
shlb
scas
mov
leave
pop
lcall
js
test
movsb
addb
mov
mov
adc
push
ja
lods
int3
jle
push
sub
mov
iret
rolb
aam
add
sarb
rcll
adc
leave
andl
jg
outsb
mov
lcall
pop
es
push
fidivs
shll
pop
add
xchg
addr16
jp
inc
ficomps
mov
push
hlt
cmp
rorl
add
xor
fdivl
mov
adc
dec
jbe
or
hlt
cld
push
shl
and
ljmp
push
mov
scas
sbb
cwtl
or
dec
mov
fcompl
sbb
cmp
mov
repnz
mov
xchg
push
lock
jns
inc
out
cmpsb
shll
jecxz
mov
fildl
and
das
loop
add
sahf
sub
mov
jns
fstpt
push
mov
fwait
pop
aad
jecxz
stos
xchg
stos
fiadds
hlt
leave
xor
pop
xor
mov
mov
int3
cmpl
xchg
movsb
popa
dec
fucom
mov
in
clc
mov
lahf
je
fcomps
lcall
into
les
and
mov
mov
popa
gs
hlt
pop
pushf
stos
or
cmp
vpsubsw
lahf
push
mov
mov
and
nop
jo
fwait
lret
mov
inc
sar
in
inc
aam
cmp
mov
shrb
pop
js
jge
xchg
lods
in
nop
imul
and
xchg
sbb
cmp
popa
or
xchg
xor
divb
imul
mov
sub
pop
fldcw
icebp
rcr
jmp
add
mov
int
sbb
rorl
push
add
out
mov
cltd
push
imul
out
stos
adc
jecxz
lcall
std
mov
out
rorl
mov
aas
mov
fcmovnu
pop
repnz
shrb
sbb
pop
cli
les
or
and
aam
fimuls
mov
sti
sub
and
scas
jne
jne
push
sub
lods
fs
aaa
aad
mov
dec
mov
or
xchg
push
hlt
xor
add
repnz
or
cmp
push
sub
nop
mov
xchg
pop
stos
sahf
sub
mov
mov
mov
fimull
pushf
cmp
pop
rorl
hlt
mull
push
lahf
cli
adc
adc
mov
or
out
roll
sbb
inc
lret
leave
sub
mov
add
xchg
pop
fsubrs
rorl
push
lock
adc
andl
stc
loope
sub
mov
test
cmpsb
or
xchg
clc
cli
addl
dec
call
scas
push
jl
and
jle
push
mov
lods
fnsave
dec
arpl
mov
ror
insb
cmp
inc
push
enter
push
cli
subb
mov
dec
mov
push
xchg
mov
mov
push
int
mov
cli
and
cmp
inc
jecxz
inc
inc
pusha
pop
movsl
lret
sbb
fsubl
dec
inc
jno
pop
xor
rorb
sbb
jne
and
mov
stos
inc
clc
mov
int3
jl
mov
pop
push
mov
mov
daa
add
cli
adc
in
mov
shl
jg
mov
aad
cmp
mov
addr16
xchg
leave
add
shr
das
and
push
jno
mov
dec
movsl
ror
rcll
lds
fldl
inc
xor
or
inc
pop
ds
shlb
or
stos
xchg
jg
adc
arpl
and
cli
sub
and
xor
into
pop
gs
out
jmp
push
push
jge
sbb
imul
mov
sbb
out
fists
or
adc
or
movsb
pop
or
push
stos
das
xchg
fdivp
pop
arpl
mov
dec
movb
clc
dec
adc
ja
rclb
adc
lret
add
mov
mov
outsb
cmpsl
mov
jbe
stos
adc
mov
and
pop
movsl
jecxz
mov
repz
dec
pushf
push
negb
sbb
lock
mov
inc
das
and
stc
xchg
int
test
jp
cmp
rorl
and
cltd
mov
orb
je
sbb
push
stos
inc
xor
test
aam
leave
dec
loope
in
dec
aas
in
jmp
lods
push
or
nop
jno
addl
push
in
mov
repz
fsubl
lea
adc
fsts
stos
fidivl
inc
jo
jno
and
xchg
lcall
daa
xchg
ljmp
repnz
jo
push
pop
pop
pop
shll
je
push
mov
imul
mov
add
pop
inc
dec
fwait
notb
icebp
fmul
adc
scas
pop
adc
or
pop
jno
sub
lea
push
aad
xchg
aam
mov
xchg
enter
imul
cs
std
jge
mov
outsl
test
jp
inc
popa
push
xor
imul
inc
push
int3
in
sbb
mov
in
push
hlt
push
movsb
jo
xchg
xchg
adc
outsb
out
inc
xor
dec
jmp
jecxz
mov
xchg
adc
insb
data16
cmp
out
xlat
cs
ja
int3
xchg
dec
int3
std
jle
adc
mov
push
stos
add
mov
push
gs
push
jecxz
mov
dec
jnp
or
fstps
pop
shrb
mov
sbb
leave
cmp
pop
in
cli
cmc
arpl
in
mov
or
mov
push
mov
pop
cmpsb
or
dec
scas
inc
pop
daa
lret
sarl
mov
or
or
cld
stos
dec
mov
shl
mov
out
mov
adc
lods
in
mov
inc
inc
cmc
adc
adc
and
mov
push
into
imul
mov
int
rep
pop
and
mov
icebp
repnz
pop
in
fimull
loop
or
fwait
sbb
push
js
dec
lret
leave
aam
je
lret
and
leave
push
leave
and
mov
ljmp
dec
ret
out
pop
cmp
inc
and
shlb
xchg
insl
or
add
inc
fs
inc
add
inc
pop
out
mov
mov
or
loopne
jnp
aaa
sbb
push
pop
mov
push
sbb
and
jno
mov
lret
pop
inc
pop
add
rcrb
inc
mov
fnstenv
inc
or
sub
sub
dec
rcll
sub
sub
pushf
sbb
adc
sbb
cmp
cmp
or
or
push
icebp
pop
stc
ss
loopne
scas
push
hlt
mov
lods
mov
push
add
rol
jnp
jge
inc
jbe
jge
pop
fldl
push
fs
data16
add
push
int
sbb
dec
mov
mov
or
in
mov
daa
dec
jg
fistl
pushf
push
cmc
gs
lea
jmp
xchg
inc
shrl
mov
sahf
pop
cmp
push
lds
add
pop
leave
mov
push
xor
sub
xchg
sub
pop
jo
inc
push
sarl
rcrl
test
addr16
std
negb
push
and
test
sub
mov
mov
mov
jmp
push
inc
lods
push
int
inc
mull
bound
fdivrs
xor
mov
inc
out
cmp
nop
fcompl
jnp
jg
cli
inc
aaa
inc
push
dec
pop
cmp
mov
pop
adc
push
xchg
cwtl
mov
pop
or
xor
and
cwtl
jnp
pop
fdivs
js
and
pop
cmp
push
mov
loop,pn
mov
mov
stos
mov
pop
sub
adc
fldcw
pop
clc
stos
xor
sub
mov
sbb
ret
add
inc
fnstenv
dec
mov
or
adc
dec
das
push
clc
fsub
and
inc
popa
scas
imul
leave
mov
xor
pop
and
sub
push
xchg
incb
shrb
sub
mov
inc
imul
jno
cs
dec
xchg
push
in
cmp
mov
arpl
ja
push
loopne
adc
iret
sahf
in
out
sub
mov
dec
jge
inc
xchg
icebp
mull
loope
rolb
lret
loope
dec
mov
lods
je
or
cmpsl
inc
dec
ljmp
out
stc
jo
or
sub
mov
dec
push
sub
stc
sbbb
into
cmp
jns
ja
xor
xor
jge
cmp
inc
cwtl
divl
repnz
aad
and
and
rcrb
or
mov
adc
push
ja
test
mov
insb
cli
lods
clc
sub
dec
ret
push
mov
cmp
jb
mov
or
fisubs
sbb
xor
lea
addr16
mov
add
testb
mov
cmc
call
sub
into
lods
xchg
mov
and
inc
ret
mov
enter
movsl
mov
scas
in
and
sub
lahf
push
lret
mov
in
push
lods
out
jmp
mov
and
bound
dec
push
test
inc
scas
sub
push
push
adcl
inc
jge
xchg
out
sub
mov
jecxz
sbb
pop
repnz
add
imulb
outsl
inc
test
cmp
inc
hlt
jne
testb
mov
jge
and
xor
jle
repz
push
push
flds
lahf
pop
dec
adc
negl
cmp
nop
imul
and
int
mov
inc
cmp
int
das
and
jo
shlb
sub
je
out
and
xchg
pusha
pop
cld
int3
jne
or
jno
scas
test
je
inc
add
add
mov
repz
pop
pop
and
in
adc
sbb
inc
pop
jmp
aas
inc
cs
mov
frstor
mov
sub
lods
scas
data16
adc
mov
cltd
lret
push
dec
imul
pop
nop
and
pop
inc
xchg
cmp
daa
pop
sbb
nop
sarl
sbb
ss
out
xor
sbb
or
sub
repnz
pushf
adc
test
adc
pop
fs
sbb
jno
clc
dec
pushf
mov
inc
lods
fs
adc
jmp
mov
dec
arpl
insl
dec
and
test
imul
mov
and
dec
and
mov
or
outsb
jp
cmpsb
mov
movb
shll
xchg
cmp
jmp
aas
pop
mov
mov
mov
jg
enter
ljmp
sti
call
mov
mov
movsb
cltd
cmp
mov
jb
fimull
or
cmp
inc
or
jg
push
push
add
mov
scas
enter
and
xchg
shr
clc
mov
mov
mov
ljmp
outsb
jbe
xchg
movsb
les
lods
adc
cmp
jmp
or
adc
maskmovq
jmp
adc
sub
xchg
adc
pop
inc
push
rcll
adc
test
pop
daa
mov
xor
mov
loop
daa
mov
mov
inc
cmc
lea
pop
pusha
leave
daa
lahf
repnz
mov
xor
mov
pop
enter
jmp
imul
pop
pop
inc
faddl
push
add
sarb
mov
aad
stos
jne
adc
cmpsl
inc
fwait
test
adc
cmp
pop
cmc
movsb
push
lahf
sbb
jge
and
pop
xchg
xor
lea
and
jg
jae
and
jg
lahf
ds
cmpsb
mov
adc
cmc
xor
jb
add
adc
xchg
fidivrl
mov
addr16
outsb
outsb
idiv
mov
jle
mov
and
adc
xor
mov
pop
mov
testb
and
sbb
in
inc
jne
pop
mov
movsl
mov
inc
or
insl
scas
pop
jae,pn
adcl
or
pop
out
xor
mov
shr
jl
das
xor
mov
push
mov
jo
dec
and
adc
pusha
or
xchg
jg
lret
or
dec
mov
cmpsl
in
fists
aam
mov
mov
sti
ljmp
bound
ficoms
inc
cs
and
arpl
push
lret
aad
test
add
xchg
inc
adc
in
mov
call
mov
sbb
es
xlat
subl
je
outsl
cmp
xor
push
imul
push
ficomps
xchg
ret
mov
fs
out
mov
sbb
pop
inc
scas
or
push
aad
stc
imull
movsl
or
sub
jmp
shll
sbb
xchg
dec
pop
les
jbe
xchg
or
enter
jp
push
mov
nop
push
fwait
pushf
inc
push
sub
cs
add
ret
inc
mov
out
stos
pop
add
cmp
mov
xchg
daa
out
ljmp
aas
nop
jecxz
aaa
loope
ljmp
loope
aas
mulb
pop
ret
iret
cli
jb
sbb
xor
jecxz
sbb
scas
popa
sub
imul
dec
int
ret
iret
outsb
fstps
adc
nop
movsb
nop
push
das
cmp
mov
es
pop
fsubs
cmc
lods
cmp
inc
cmp
int3
rol
cs
insb
xor
imul
xor
incl
cli
or
scas
cmp
stos
cmp
aaa
jle
dec
repnz
pop
rolb
mov
loop
inc
jmp
repz
test
and
sarb
and
mov
daa
sbb
mov
enter
es
aad
lods
pop
mov
xchg
xchg
jb
mov
jmp
add
xlat
je
ja
movsl
or
sub
or
addr16
inc
add
inc
and
mov
push
or
mov
in
aaa
lods
push
nop
push
add
testl
in
jl
outsl
divb
xor
inc
jg
inc
xorl
adc
pop
mov
and
out
fstl
in
aaa
xchg
mov
jo
dec
jne
adc
mov
mov
je
lahf
push
sub
xor
xchg
call
dec
add
push
jbe
xchg
and
inc
xchg
daa
int
outsb
push
xchg
dec
lret
lods
in
inc
cmc
repz
in
mov
in
nop
jecxz
imul
hlt
inc
movsl
fnsave
in
int
cmp
inc
adc
add
cs
add
inc
fisttpl
lock
push
int3
call
insl
xor
mov
leave
inc
lret
mov
pop
mov
sbb
push
adc
dec
test
inc
and
mov
lahf
jns
push
push
sub
mov
xchg
in
xorps
jne
mov
stos
adc
xchg
bnd
xchg
mov
pushf
pushf
sub
cli
push
movsb
repnz
lret
and
daa
xchg
lds
adc
aad
std
lea
in
mov
push
scas
jp
lods
das
pop
orl
mov
push
lret
mov
std
cmp
adcb
ror
lcall
fsub
sbb
jbe
repnz
js
jmp
add
jp
imul
cmpl
test
xchg
sti
push
sub
stos
mov
dec
movsl
xchg
hlt
sbb
sub
gs
pop
xor
and
mov
mov
stos
add
lret
dec
ror
add
push
fldt
inc
hlt
add
roll
sbb
adc
in
daa
mov
inc
ja
and
fwait
xchg
cwtl
test
jle
xor
mov
sub
mov
popf
inc
outsl
sbb
jo
ds
pop
cmp
mov
rclb
sbbl
inc
sub
into
enter
shrb
push
jns
scas
adc
adc
jl
sti
mov
hlt
jbe
dec
clc
loope
and
jge
bound
into
ss
test
or
sub
jp
inc
mov
push
mov
lahf
jno
ret
or
pop
jle
add
inc
mov
push
push
mov
cmpb
aam
in
inc
pabsd
xlat
push
adc
into
dec
addb
sbb
lret
jge
dec
xor
xorb
pop
outsb
adc
xor
lret
dec
pop
ljmp
loop
push
nop
rcll
xchg
cmc
divl
imul
popa
jle
push
adc
xchg
bound
mov
push
push
pop
adc
pusha
and
cli
lea
cmp
adc
adc
ficomps
es
lods
cld
fsubrs
call
mov
std
mov
aad
and
std
int3
in
jno
into
xchg
fdivrs
test
cmp
movsl
dec
jecxz
push
cmp
ljmp
mov
sbb
jp
out
mov
add
in
jge
pop
mov
push
or
sbb
scas
mov
dec
cmp
jecxz
mov
sahf
insl
xchg
sub
or
or
mov
or
fdivp
aaa
int
dec
out
mov
test
mov
add
lods
cli
adcb
xorb
addr16
xchg
scas
enter
fiaddl
stos
fwait
jne
scas
fisubrl
popl
cmp
ds
lock
jne
sub
fcmovnb
xchg
mov
push
xor
and
nop
sub
mov
test
imul
fisttpll
imulb
push
mov
dec
jbe
fisubs
mov
push
cmp
hlt
jne
shll
insb
aaa
xor
ss
and
fucompp
cld
and
push
fcompp
mov
pop
adc
fidivl
ja
sbb
cli
cltd
cld
pusha
adcl
stos
mov
cmp
mov
jp
add
cmpsl
fdivrl
xor
inc
xchg
push
aam
adc
iret
bound
xchg
in
mov
iret
shlb
std
dec
fisubrs
cmpsb
dec
ds
negb
sub
push
or
out
pop
pop
movsl
loope
dec
and
loop
stc
loope
lods
pop
inc
lcall
out
adc
adc
or
imul
gs
aad
hlt
lods
ljmp
int3
fwait
testl
cltd
imul
in
notb
pop
mov
add
test
push
xchg
unpckhps
hlt
sbb
xlat
lods
jecxz
les
int
sbb
mov
lret
outsl
fnsave
dec
mov
mov
out
dec
loope
movsb
shl
jbe
scas
xor
call
cwtl
in
or
lret
inc
sub
out
repz
insl
cwtl
movsb
out
mov
js
enter
mov
jp
test
test
push
rorw
loope
out
push
sub
lahf
hlt
ret
cwtl
bound
out
sahf
lods
daa
shr
ds
repz
adc
mov
dec
mov
mov
mov
inc
jp
or
mov
int3
cmpsl
xor
inc
and
cli
iret
aas
in
aaa
jge
inc
jns
sbb
dec
mov
dec
cmpb
dec
stos
or
fistpl
xchg
pop
lahf
xchg
inc
xchg
sbb
gs
and
insl
in
or
js
inc
in
gs
cld
and
xchg
push
and
mov
cmc
inc
xlat
xchg
or
fwait
add
es
mov
inc
loop
sbb
lret
ds
sbbb
ljmp
dec
mov
dec
pop
inc
cmp
dec
adc
movsl
add
mov
decb
mov
mov
rclb
adc
xor
pop
es
fnstsw
xchg
fldenv
add
or
jmp
repz
cmp
outsb
arpl
mov
pop
dec
cmp
xor
rorb
add
arpl
js
fstl
mov
mov
pop
in
cwtl
cwtl
sarb
lods
mov
xchg
adc
std
es
negb
stos
sub
cmc
ljmp
outsb
push
hlt
or
fistpll
add
xchg
adc
fstl
cmp
jae
pop
pop
mov
imul
inc
jno
fists
sbb
repz
mul
js
andb
pop
mov
cs
add
in
jns
loopne
pop
mov
cmovp
dec
add
add
mov
test
lret
jae
push
lcall
jae,pt
pop
add
pop
adcb
and
xchg
push
xchg
inc
mul
dec
sbb
pop
add
mov
sbb
lods
js
and
pop
pop
shlb
aad
and
or
imul
sub
into
in
xlat
adc
jbe
jp
mov
bound
fsubrl
add
les
mov
mov
lcall
outsl
push
cmp
lds
xchg
fbld
cmp
inc
pop
mov
jl
into
mov
addl
mov
push
nop
ds
push
dec
gs
sub
shl
pop
rclb
jae
insb
or
pop
test
sub
sub
es
pop
cmp
push
xchg
aam
into
dec
xchg
scas
pop
sbb
stos
test
out
lods
or
xchg
jae
sti
pop
xchg
loopne
adc
in
push
pushf
add
scas
ret
pop
insl
repnz
add
mov
mov
out
test
rclb
fisubrl
in
xchg
repz
insl
and
mov
xlat
addr16
int
scas
pusha
pop
xchg
dec
inc
push
push
pop
pop
adc
add
in
leave
mull
popf
ret
add
push
add
mov
jo
mov
neg
and
fldenv
and
mov
outsl
jl
jnp
jne
int
xlat
negb
xchg
mov
pop
cmp
mov
orl
xchg
sub
data16
jg
mov
call
pop
pop
lahf
leave
int
loopne
fs
xchg
push
lock
clc
out
loop
cmp
cwtl
andb
sahf
xchg
push
push
or
pop
stc
cs
and
cli
lgs
sub
xchg
and
dec
xor
inc
pop
xchg
mov
clc
dec
stc
pop
adc
lahf
cmpsl
pop
fiaddl
cli
pop
mov
add
sub
add
jmp
popa
je
ds
in
fwait
add
push
fists
fwait
dec
in
mov
sbb
mov
imul
push
jns
dec
add
push
test
std
js
stos
iret
mov
sbb
push
test
mov
lds
adc
jns
mov
cwtl
bound
out
iret
shll
call
jge
mov
sub
test
mov
aaa
popf
pop
ds
data16
add
mov
cmp
or
adc
leave
sahf
les
loopne
incl
rclb
loop
inc
dec
fs
dec
fisttpl
or
testb
div
loopne
or
add
inc
jmp
jl
xor
mov
xor
jle
sbb
jl
push
cmp
sbbb
dec
aam
out
mov
jno
and
les
fdivrp
fidivrl
lods
add
push
test
vmovaps
je
in
lcall
mov
jb
nop
rol
stos
sbb
mov
mov
push
adc
xchg
loopne
rclb
test
dec
jg
push
jns
pop
call
movsl
lret
jmp
fcoml
add
xchg
push
lret
mov
inc
jnp
mov
cmp
in
cmpsl
mov
sub
outsb
int3
mov
pop
repz
fwait
lret
cltd
lcall
shll
xor
out
dec
stc
rcl
call
hlt
or
pop
scas
incb
mov
fs
lods
adc
xor
xchg
xchg
mov
mov
addr16
and
outsl
jb
ljmp
leave
pop
rol
mov
jge
pop
shll
movsb
in
clc
sbb
shlb
adc
pop
addl
sahf
xlat
jmp
push
in
or
cli
dec
je
inc
jmp
int3
xchg
pop
stos
retw
icebp
xchg
jmp
mov
mov
ret
mov
jp
scas
sub
mov
outsl
int
inc
test
pop
dec
mov
adc
add
pop
movsb
inc
mov
mov
push
jo
pop
iret
add
pop
mov
add
outsl
add
sbb
movsl
jbe
pushf
idiv
into
mov
popf
jg
lea
mov
daa
shl
hlt
decb
mov
xor
mov
lret
out
mov
mov
adc
sbbb
cmpsl
dec
dec
adc
pushf
fdivrp
xchg
inc
test
scas
jnp
xor
daa
jmp
lea
rol
jbe
in
shll
arpl
xchg
and
jg
js
add
push
xchg
pop
lretw
mov
push
loop
bound
mov
adc
out
daa
movsb
pop
adc
pushf
cmp
aaa
mov
icebp
push
movsl
add
xchg
sub
mov
adc
mov
call
in
lds
mov
decl
mov
loopne
cmc
fwait
sbb
shlb
jbe
cltd
rclb
sbb
in
or
adc
xchg
jmp
and
in
imulb
add
popf
push
int3
mov
push
xchg
fwait
into
mov
mov
jg
push
popf
add
inc
pop
dec
hlt
insb
ja
mov
or
fdivp
aam
push
pop
mov
cmp
ret
push
mov
and
sbb
xchg
dec
leave
and
cmpsl
pop
xchg
pop
lea
fcmovnb
sbb
adcb
pop
or
jl
aas
std
pusha
ficomps
adc
dec
jg
andl
cs
xor
xchg
in
mov
mov
xchg
arpl
cmp
outsb
dec
ss
xor
mov
inc
pop
mov
repz
jl
mov
adc
fsubs
sahf
in
jle
insl
jns
jecxz
aad
test
insl
cltd
mov
out
mov
imul
or
lret
pop
sbb
or
mov
je
leave
clc
xor
out
iret
aad
mov
cmp
fnstenv
pushf
loope
stos
call
loope
mov
mov
and
adc
jmp
lcall
into
jno
movsl
xor
aam
mov
mov
clc
inc
cmp
or
loopne
nop
jmp
lcall
xor
sub
mov
sub
mov
scas
sbb
in
xchg
icebp
add
shrb
pop
xchg
or
mov
es
dec
insl
add
repz
les
cmp
mov
jle
inc
jg
out
jnp
sub
and
adcb
pop
les
mov
nop
push
sarl
es
pop
es
div
fsubrs
repnz
and
inc
imul
add
mov
push
cmp
je
popl
sbb
shl
mov
movsb
push
add
fdivrl
fsubl
les
add
test
outsl
fadds
lahf
pop
sbb
test
mov
stos
rorb
mov
into
xchg
mov
les
daa
je
mov
inc
cmp
aam
popa
loope
xor
jne
mov
xchg
mov
xor
dec
ja
lods
or
cmpsb
sbb
adc
jmp
in
fadds
sbb
sub
sub
addr16
push
in
clc
orl
sub
in
arpl
test
std
mov
shlb
mov
ds
xchg
push
mov
jb
cwtl
xor
mov
lret
movsl
sbb
cmc
mov
and
aad
cmp
jmp
add
mov
roll
sub
ja
jno
pop
mov
rcrl
sar
adc
pop
xlat
lods
push
cmp
mov
xorl
lods
mov
in
push
fmuls
mov
or
pop
cmc
gs
arpl
xor
mov
neg
mov
mov
xlat
inc
cs
pop
fsub
xlat
add
cmpsl
xchg
hlt
jl
sub
mov
push
scas
std
imul
aaa
cmpsl
lahf
mov
js
les
xor
inc
pop
dec
data16
jle
xchg
xlat
and
cmp
lods
js
add
gs
inc
jbe
lret
fiadds
xor
jno
test
jne
push
push
push
rcr
ja
scas
xchg
and
arpl
mov
popa
adc
push
mov
jo
xchg
icebp
or
add
movsb
xor
push
mov
push
and
int3
lcall
mov
fisubrs
add
sub
mov
dec
sahf
push
je
test
push
nop
mov
jnp
cwtl
sbb
sti
inc
mov
sahf
repnz
out
popa
adc
shrl
inc
sbb
adc
push
mov
idivb
or
je
out
xchg
mov
cld
pop
lea
test
xchg
dec
adc
nop
enter
fwait
shrb
push
movsb
and
fisttpll
clc
lahf
and
push
adc
dec
nop
addr16
pop
or
data16
jb
pop
adc
rorl
divl
and
jecxz
pop
outsl
and
add
mov
push
idivl
enter
or
cmpsl
pop
or
aas
dec
or
test
jle
sub
enter
fidivrl
xor
cmp
push
pop
adc
into
clc
mov
fnstcw
icebp
pop
leave
lods
pop
fildl
iret
test
sarb
cs
xchg
movsl
xchg
outsl
pcmpgtb
bnd
pop
mov
pop
les
sub
mov
push
lods
push
je
std
in
xchg
xchg
sub
daa
out
mov
imul
ficompl
or
test
lea
imul
mov
pop
iret
orl
inc
xor
pop
vpcmpgtd
lods
jle
in
add
cmp
stc
das
cld
inc
jo
add
adc
mov
and
int3
cld
out
cltd
xchg
adc
mov
push
sbb
cmp
mov
ja
out
in
loope
mov
ljmp
xlat
lds
ds
int
popf
mov
adc
or
leave
push
loopne
inc
mov
stos
daa
testl
pop
cli
repz
inc
lea
imul
jecxz
loop
imul
ret
sti
xlat
push
mov
mov
jle
ret
xor
pop
gs
arpl
out
mov
cmp
pop
out
popa
cmp
pop
jnp
insb
cmpb
pop
es
jae
ljmp
cmp
mov
popa
mov
scas
push
adcl
outsl
dec
lods
mov
loopne
data16
mov
jle
push
inc
js
movsl
hlt
and
jbe
and
sbb
sahf
movsl
ja
push
gs
mov
and
in
loopne
rcrb
out
mov
pop
or
outsb
mov
jge
movsb
popf
mull
aad
insb
sbb
jns
pop
mov
frstor
cld
fisttpl
pop
mov
jne
jg
or
or
mov
dec
sahf
lret
pusha
dec
popa
adc
aam
std
iret
popa
xchg
jmp
jno
cltd
ss
imul
ja
push
inc
and
mov
mov
push
mov
arpl
sub
or
nop
dec
lret
pop
imul
mov
dec
xchg
stc
add
test
mov
ret
push
mov
leave
icebp
mov
bound
jle
dec
mov
cltd
frstor
inc
xchg
mov
inc
cli
mov
call
and
mov
cmpsl
inc
pusha
in
pop
cmp
das
push
xchg
sarb
jp
data16
pop
mov
fsubs
dec
xor
fs
pushf
or
imul
lds
stc
xlat
jmp
cmp
js
insb
loope
hlt
js
call
inc
mov
dec
pop
xchg
fwait
sub
fcomi
nop
dec
js
mov
cwtl
popa
mov
xor
lret
ficomps
sbb
sub
jmp
jp
out
dec
jno
mov
mov
push
cmpsl
sub
dec
lret
ret
cld
cmp
cmp
mov
lods
mov
or
and
dec
mov
push
push
lahf
popa
repnz
mov
popa
rcl
subb
sarl
adc
mov
pop
or
xlat
pushf
shrl
push
add
mov
sub
in
add
xchg
scas
or
sbb
push
fimuls
push
mov
mov
fldt
ds
sub
jecxz
cmp
popa
hlt
push
xor
or
data16
mov
or
pop
push
test
push
jo
add
imul
push
pop
inc
hlt
inc
mov
and
jg
out
ss
dec
bound
xor
imul
outsl
ret
das
sub
add
dec
js
pushl
mov
aam
decb
int
mov
jno
jmp
hlt
lods
popf
gs
imulb
stc
dec
scas
pop
scas
sbb
fsubr
add
inc
daa
in
push
adc
jbe
pop
fisubl
ljmp
jecxz
mov
icebp
in
fidivrl
dec
add
leave
sub
dec
cmpl
test
les
and
adcb
and
xchg
xor
inc
dec
aad
je
push
fdivrp
and
xchg
mov
jecxz
mov
les
shll
repnz
pop
cmpsl
filds
cs
insl
clc
cwtl
aas
push
push
cmpsb
enter
out
pop
test
test
dec
cmp
push
loope
stc
testl
iret
cs
sub
test
mov
push
lods
cmp
ja
xchg
ljmp
xchg
cmp
mov
push
mov
sub
mov
hlt
or
xor
cmp
bound
test
into
inc
sahf
mov
fcoml
xor
xchg
enter
filds
mov
nop
dec
jg
jge
sbb
mov
cmp
cmc
push
nop
sbb
rcrl
loopne
mov
add
out
fcmovnbe
dec
clc
sub
mov
imul
jae
jbe
int3
aaa
shrl
flds
mov
neg
xchg
xchg
jno
mov
ss
add
mov
inc
push
ret
mov
jae
test
jno
lock
imul
xchg
imul
dec
inc
std
xor
orb
shrl
test
fldt
xchg
outsb
adc
mov
ljmp
jne
mov
mov
ret
in
rcrl
ret
cwtl
cmp
fdecstp
lret
push
andb
adc
loop
and
mov
std
inc
shlb
mov
and
insl
jae
mov
rcl
pushl
cwtl
andb
lods
fcos
sahf
mov
scas
movb
mov
test
in
dec
pop
data16
or
mov
mov
loop
addr16
mov
test
test
push
cmp
pop
jnp
cwtl
xor
pop
or
mov
rcrl
leave
dec
es
mov
arpl
sahf
dec
les
jge
xor
inc
add
int
mov
add
jb
push
or
adc
pusha
mov
jns
pushf
xlat
sub
lods
mov
mov
int
xor
xlat
idivb
push
dec
fdivs
leave
pop
xor
or
or
mov
or
js
push
sub
inc
jecxz
idivb
aas
jae
or
lock
jl
or
inc
ret
mov
sbb
mov
xchg
xchg
adc
lret
test
pop
inc
xchg
ja
or
adc
jg
mov
xlat
xchg
movsl
js
ljmp
sahf
jge
dec
add
mov
push
and
aaa
lcall
dec
pop
outsl
and
iret
test
cmpsl
movsl
shl
push
jae
int3
sbb
pop
ret
out
push
or
cmpsb
ja
sub
cmp
daa
stos
loope
pop
sahf
test
aad
pop
jns
int3
mov
ljmp
stos
jb
fisttpl
pusha
adc
dec
inc
scas
cmp
arpl
es
pop
addr16
aaa
xor
and
inc
jns
push
dec
rol
test
mov
gs
dec
or
std
jno
js
push
or
iret
jmp
xor
call
clc
inc
dec
fists
sbb
xchg
xchg
pushf
mov
adc
push
mov
mov
push
jle
int
leave
cmpsl
and
dec
xor
push
dec
mov
test
cmp
xlat
jno
stos
push
jp
insl
and
shl
xor
inc
in
jg
test
dec
pop
inc
inc
sub
mov
sub
imul
dec
jbe
pop
orl
ret
out
sbb
mov
filds
mov
hlt
and
jb
das
scas
xchg
arpl
pop
jmp
scas
push
mov
adc
imul
cli
ss
add
xchg
jmp
and
jnp
loopne
adc
lods
xorl
adcb
sbb
nop
or
inc
fldenv
mov
adc
test
std
cmp
sbb
ds
pop
sarl
mov
shl
pop
jns
adc
mov
roll
repz
mov
dec
dec
inc
test
in
or
xchg
repz
popf
mov
lea
jmp
dec
inc
shl
dec
xchg
or
cmp
push
push
jbe
xchg
cmc
push
push
sub
xor
mov
xchg
jp
push
dec
ret
dec
mov
add
iret
sbb
pop
test
cli
adc
rcr
xchg
jl
and
adc
les
jne
push
into
ds
nop
fstpl
inc
fwait
cld
call
mov
push
jnp
les
xchg
jb
xor
std
aad
push
push
pop
ret
mov
push
stos
mov
pop
stos
cmpsb
add
imul
outsl
daa
sti
int
xchg
mov
cmp
fcmove
cmp
mov
xor
jmp
jnp
fdivr
maxps
jo
stos
dec
fldenv
pop
and
sar
sub
and
pop
or
pop
push
loope
and
add
cmp
dec
cld
fiadds
add
outsl
jo
cmp
shrb
int
jl
insb
in
push
ljmp
push
ds
movsb
or
gs
sub
outsb
clc
int3
sbb
cmc
or
mov
inc
mov
mov
push
add
mov
loop
scas
out
mov
repz
test
fsubrp
inc
jno
imul
sbb
mov
inc
cmp
push
inc
aas
imul
mov
cmp
loopne
push
jae
sbb
cwtl
addr16
jb
xor
insb
add
dec
mov
sub
sbb
dec
std
loop
aam
mov
sub
inc
jbe
xchg
push
popa
pop
rorb
mov
ds
testb
dec
jg
in
jb
mov
cmpsl
sti
push
push
sub
movsl
mov
xchg
mov
jp
sub
sbb
outsb
mov
push
fwait
xor
cmp
ljmp
xchg
and
cmp
loope
fwait
push
push
mov
push
lds
xchg
js
xor
scas
idiv
imul
mov
push
push
dec
fs
xchg
inc
hlt
rorb
inc
adc
push
add
mov
push
sbb
dec
push
mov
cmp
and
push
jecxz
inc
inc
cs
test
hlt
enter
cld
scas
pop
pop
push
sahf
in
pop
mov
aad
xor
mov
xor
shrb
call
int
jae
lcall
cmp
cmp
mov
int3
and
and
mov
cmpsl
mov
insb
arpl
fmulp
int
loop
movsb
imul
mov
pop
out
cwtl
sbb
lock
hlt
xchg
push
insl
xchg
ret
pusha
adc
or
inc
outsb
stos
popa
gs
aaa
mov
es
add
stc
fmul
cmp
in
fldcw
push
gs
mov
pop
loope
outsb
pop
jnp
inc
daa
mov
sub
mov
mov
sbb
jg
or
shlb
outsl
cmp
out
inc
jne
out
std
js
jp
pop
xchg
shlb
mov
out
jno
xchg
mov
mov
in
mov
push
sub
into
cmp
movl
dec
loopne
ret
shlb
mov
xchg
enter
inc
lret
movsl
cmp
das
add
js
xchg
mov
testb
fwait
mov
mov
mov
hlt
xor
or
mov
pop
or
xchg
xor
xor
add
pop
sub
sbb
test
cmp
and
xor
shlb
in
jb
mov
push
gs
lea
xchg
sbb
or
cmp
mov
xchg
sbb
cmp
icebp
cmpsb
xorb
in
scas
test
inc
inc
inc
subb
sbb
xor
hlt
mov
icebp
mov
dec
leave
in
call
clc
js
mov
nop
pusha
into
xor
sbb
lcall
jg
cltd
ret
push
cmp
dec
fstl
or
ret
aas
aaa
cmp
popa
mov
out
test
fsubrl
add
ret
xchg
inc
sbb
inc
pusha
shll
cli
mov
dec
pop
mov
add
shlb
loopne
pushl
jo
sub
dec
adc
mov
aam
std
test
ss
das
add
xlat
push
cmp
stos
popf
push
fsubs
mov
xor
cmp
lcall
mov
xor
mov
pop
mov
je
test
clc
mov
out
push
dec
adc
sub
lcall
xlat
aad
punpckhdq
fmulp
mov
imul
xlat
mov
fwait
adc
fs
lods
or
adc
pop
movsb
sub
pop
mov
cmc
xchg
shl
int3
cmp
stos
or
pop
and
cmp
pop
push
push
jae
cmpsb
test
mov
mov
call
sbb
xchg
flds
sbb
jae
cltd
std
loope
sbb
push
or
insb
mov
iret
add
and
scas
test
in
scas
stos
xchg
mov
inc
mov
pop
xlat
add
sbbl
pop
add
or
and
pop
ljmp
hlt
stc
hlt
test
popa
arpl
ret
shl
push
xchg
push
sbb
clc
inc
iret
dec
or
xorl
pushl
inc
insb
inc
test
inc
imul
cmp
imul
in
add
cltd
call
fildl
push
inc
rcr
pop
dec
or
sub
lea
repz
sbb
xchg
pop
xor
mov
inc
fucompp
mov
mov
jns
daa
andb
fs
push
push
xor
add
and
call
or
or
sbb
jno
cmp
and
jmp
sub
inc
arpl
daa
out
mov
popl
lret
cli
das
mov
popa
mov
push
aaa
push
sub
jg
std
dec
mov
das
mov
lods
and
shll
dec
hlt
sahf
push
mov
jg
xor
sbb
imul
xor
pop
mov
iret
jae
xlat
push
in
cmpsl
jb
cmpsl
sbb
out
in
add
je
test
movsl
movsl
mov
rolb
cmp
out
xlat
push
ljmp
or
xor
jge
inc
test
xchg
jp
out
jbe
mov
push
in
notl
pop
int3
xor
or
dec
jae
fwait
pop
cmpsl
pop
hlt
mov
loope
mov
adc
push
jmp
cmpsl
push
mov
popa
adc
pop
imul
mov
xor
jge
jne
cmp
inc
xorl
sub
aam
negl
rcr
nop
jmp
jge
cmp
jne
lds
xchg
jo
rclb
ret
ljmp
gs
mov
in
push
rcrl
jbe
dec
aam
hlt
jle
push
loope
xchg
cli
lods
adc
add
sub
pop
stos
sahf
inc
push
fbstp
pop
ss
lret
stos
xchg
mov
das
adc
test
inc
loopne
xchg
xchg
ret
mov
mov
pop
lret
xor
lret
pushf
scas
dec
inc
fsubrs
outsl
add
cmp
insl
pop
repz
out
movsl
imul
addl
int
movsl
cli
out
sti
cltd
fisttpl
lret
lcall
scas
mov
imul
int3
int3
mov
xchg
mov
xchg
in
mov
jo
lret
sub
sahf
lods
or
repnz
loopne
xchg
arpl
adc
xchg
lahf
pop
sub
test
dec
adc
push
sbb
cmp
popa
pop
arpl
fcomip
mov
cmp
sub
shr
aad
in
imul
inc
sub
pop
iret
adc
aas
dec
cmpsl
dec
pop
dec
inc
push
movsb
not
ret
roll
int
fidivrs
adc
inc
pop
and
push
aas
or
xchg
xor
stos
inc
push
push
das
into
das
int3
xchg
sbb
orb
sbb
int3
enter
mov
jb
dec
lea
mov
mull
lret
add
mov
popa
xor
js
jae
add
pop
mov
test
mov
insl
xchg
add
and
shlb
xlat
mov
enter
jmp
inc
sbb
test
mov
setp
test
sahf
pop
gs
es
mov
adc
jo
cmp
inc
ffreep
mov
xlat
push
repnz
arpl
decl
scas
xchg
fs
xor
pop
xlat
loope
std
cmpsb
and
dec
sbb
pop
sar
shl
scas
cs
mov
mov
insl
test
sub
push
cli
cli
or
pushf
out
mov
dec
sub
dec
in
dec
repz
xchg
jo
mov
divb
cmp
mov
xor
dec
fs
and
bndldx
int
mov
adc
add
nop
daa
push
mov
inc
sub
les
sbb
lods
cmp
mov
lods
add
std
or
sub
filds
and
ljmp
add
lea
jae
hlt
xor
test
mov
mov
adc
mov
frstor
and
fstps
xchg
mov
fdivs
cmp
leave
mov
add
inc
lahf
cli
adc
cmp
cwtl
cmp
mov
push
sahf
lret
mov
adc
icebp
dec
scas
fwait
push
xchg
pop
orb
sub
and
std
and
leave
in
sbb
xlat
dec
and
xlat
mov
fsub
clc
xlat
leave
mov
sahf
inc
mov
pop
cmp
xchg
or
rorl
enter
mov
dec
add
push
mov
push
sub
mov
into
into
lds
je
stos
push
roll
mov
cltd
mov
call
mov
adc
cltd
push
push
rcll
addr16
stos
shlb
sbb
outsl
pop
paddsb
outsb
push
mov
mov
in
xor
js
jmp
add
xor
lock
xchg
xchg
popa
add
add
ds
lret
aaa
aas
in
add
lret
add
insl
repz
jo
xor
fwait
sbb
mov
mov
and
xor
rclb
dec
leave
out
stos
outsl
sti
xor
loopne
jmp
out
je
andl
xlat
addr16
int3
xchg
and
jl
add
lret
xchg
jne
mov
movl
inc
adc
mov
icebp
push
push
fisubl
pop
or
adc
iret
push
stos
inc
loope
int
icebp
je
cmp
sbbb
dec
sbbb
test
and
sbb
add
loope
ss
add
push
dec
into
adc
test
hlt
outsb
les
stos
pop
cmpsb
ljmp
fiadds
mov
mov
cmp
test
jg
add
add
sbb
sub
movsb
mov
mov
and
pop
lret
adc
or
in
scas
xor
movsl
jns
cmpsl
pop
int3
sub
dec
daa
mov
iret
mov
sub
and
push
mov
aam
adc
push
xchg
imul
adc
gs
jmp
shlb
in
lds
pushf
aaa
call
je
mov
arpl
jae
mov
cmp
inc
add
rcl
push
push
mov
hlt
push
movsl
push
outsb
fxch
mov
js
nop
dec
jg
sbb
popa
and
mov
fstpl
mov
jb
add
or
adc
int
dec
jne
outsl
lds
pop
arpl
sarb
inc
cld
shl
mov
sub
aad
xor
shrb
gs
or
jno
imul
and
and
int
xor
cmp
xchg
add
sub
adc
in
rorb
cmp
gs
sti
lds
sub
jecxz
das
mov
hlt
push
pop
stos
rcl
inc
cmp
mov
mov
test
push
js
daa
pop
jl
or
mov
mov
decb
roll
arpl
jmp
je
popa
inc
mov
je
roll
mov
fsts
mov
scas
pop
dec
adc
or
cmp
int3
fwait
ret
les
nop
push
rcrl
loope
inc
push
sub
or
cmp
imul
jo
mov
pop
mov
pop
push
cmpsb
xchg
inc
out
movsl
scas
shr
filds
repz
dec
hlt
inc
push
adc
mov
out
scas
fildll
loopne
xor
xchg
in
test
es
inc
jle
mov
sub
leave
flds
xchg
mov
ja
imul
test
jge
mov
push
pop
push
mov
xchg
movsl
mov
ljmp
jg
jno
int3
mov
sbb
sahf
jne
xor
xchg
push
xor
sahf
cwtl
in
dec
insl
add
push
clc
fmull
fstpl
outsb
sub
inc
iret
add
mov
and
bound
lret
int3
divb
push
xor
mov
push
negb
xchg
cli
fldt
mov
mov
push
out
mov
add
stc
lds
sub
ret
faddl
push
sti
decl
movsl
and
cmc
sarb
pushf
push
cmp
rcrb
xor
xor
sub
push
fcomps
fmull
jge
pop
mov
pop
aaa
ret
sbb
or
xchg
shlb
mov
repnz
ror
addr16
in
icebp
clc
lret
sub
lock
and
or
jle
cs
enter
push
aad
stc
cltd
sti
es
mov
pop
pop
icebp
cltd
adc
fsubrp
rolb
arpl
fistpll
add
mov
flds
int3
xorl
cmp
arpl
xchg
mov
inc
sarl
cld
cmc
leave
xchg
sahf
pop
mov
fdivp
mov
adc
cmp
xor
or
je
jns
or
test
test
hlt
imul
jg
adc
popa
mov
int3
xchg
sub
movsb
bound
je
out
pop
cmc
sub
jmp
jecxz
jmp
mov
out
push
ja
push
xor
jle
ss
lea
mov
ret
or
into
dec
test
dec
mulb
mov
dec
ret
or
xlat
xor
or
jnp
jb
enter
imul
and
xor
xor
add
mov
adc
dec
addb
stos
inc
dec
sti
xchg
fcom
mov
jnp
sbb
test
cli
mov
into
cmpsb
sahf
cmpsb
enter
push
imul
cmp
sub
loopne
push
flds
push
cmp
pop
std
scas
dec
xchg
mov
test
push
aam
xchg
outsl
push
inc
or
vmovaps
cmp
jl
mov
cld
or
inc
push
enter
dec
dec
in
repz
test
cmp
ret
pop
cmp
jle
push
sbb
out
or
xor
mov
jle
aaa
outsl
or
push
inc
stos
aas
add
sbb
inc
fstps
add
sub
mov
cmp
mov
dec
repz
ror
fldt
mov
lret
lahf
fcompl
lea
fwait
iret
inc
mov
sbb
ds
mov
cmpsb
and
imul
push
imul
push
xchg
mov
into
jge
mov
xor
sub
std
pcmpeqw
cmpsl
mov
jle
pop
push
je
fmul
dec
js
pop
jle
push
cli
push
out
outsb
int
movsb
xor
xchg
inc
aas
testb
cwtl
inc
inc
push
pop
repz
sub
pop
movsb
inc
clc
sub
pop
cli
or
decl
insl
scas
sub
inc
lods
test
orb
ret
mov
pop
sub
imul
sbb
hlt
scas
fs
inc
lret
mov
fisubrl
popa
int3
xchg
or
loop
rclb
mov
aad
movsl
jl
sub
pop
xchg
adc
mov
outsb
mov
dec
popf
mov
cmp
les
push
mov
add
int
sahf
and
imul
push
adc
mov
dec
cmpsl
aaa
out
xlat
mov
sub
push
add
in
das
add
dec
inc
add
cmp
sti
sbb
jmp
dec
dec
dec
add
cmp
mov
push
and
test
push
scas
roll
fdivrl
stc
pop
and
inc
mov
shrl
xor
in
mov
mov
adcb
fimull
scas
testl
or
stos
inc
aaa
mov
rolb
pop
jle
or
push
or
outsl
sbb
sbb
lcall
ljmp
scas
cli
dec
inc
dec
outsl
dec
mov
push
ficomps
sub
sbb
xor
or
movsl
jb
cwtl
cmp
jae
mov
xchg
loopne,pn
add
inc
loope
mov
out
sbb
mov
test
xchg
aaa
dec
sub
daa
rcll
xor
pop
xor
call
push
lcall
hlt
daa
jmp
xor
pop
jmp
sub
xor
jg
addb
gs
push
mov
and
adc
test
mov
dec
xchg
lcall
add
and
mov
rcrb
insb
daa
pushf
cltd
and
dec
lods
cli
xor
mov
fimuls
jg
rcrl
sbb
xchg
shll
fisubl
lods
daa
xorl
xchg
pop
outsl
fwait
mov
out
sbb
mov
pusha
out
fistpll
loop
in
sub
jne
push
or
movl
mov
dec
jg
xchg
fcmovnbe
in
jb
popf
nop
std
add
mov
cmp
loopne
mov
sbb
aad
inc
add
mov
xor
mov
cmp
loopne
sbbb
sub
and
shrl
enter
push
nop
add
in
push
pop
test
js
daa
dec
stc
mov
js
test
fstpt
test
cmp
mov
sbbl
lret
fisubrs
jae
pop
push
xor
cmpsl
loopne
loope
imul
ss
jle
sub
sbb
cmp
gs
adc
pop
cmp
xor
fcomp
dec
dec
xchg
in
xchg
push
jg
insb
sbb
scas
fistl
clc
mov
fs
cmp
adcl
sub
dec
movsb
mov
sbb
xchg
pop
and
adc
xor
std
or
shl
ret
mov
inc
add
mov
in
cs
lock
dec
pop
and
sbb
mov
incb
adc
mov
xor
xor
sub
push
xor
out
repz
js
cmp
cmp
scas
jb
mov
sub
xchg
mov
mov
jmp
cmpsb
mov
xchg
cli
dec
jge
fwait
xorl
lcall
hlt
sbb
arpl
jmp
mov
lds
cltd
push
dec
nop
xchg
xorb
dec
xor
mov
adc
mov
jmp
mov
aas
arpl
mov
push
scas
popa
or
stc
cld
sti
fildll
mov
fisubl
mov
ljmp
nop
dec
mov
jne
mov
leave
push
fldln2
repnz
push
pop
and
xor
gs
mov
push
pop
fsubrs
sub
popf
cmp
ret
mov
repnz
fwait
jb
and
arpl
pop
movsb
outsl
mov
mov
jmp
aad
ret
xor
test
cwtl
mov
push
cld
aaa
lds
outsb
out
or
adc
ljmp
cmp
negb
push
inc
fldt
pop
imul
xchg
xchg
mov
pop
lret
leave
repnz
xor
inc
das
xchg
cli
add
out
shll
xchg
in
scas
mov
cli
mov
add
repnz
and
out
jg
nop
test
adc
cmpsb
mov
xchg
cld
stos
inc
pop
push
inc
fsubr
push
gs
in
jns
adc
mov
or
push
aad
mov
add
xor
sub
xor
add
jecxz
mov
iret
adc
add
outsb
mov
repnz
xchg
repnz
repz
ljmp
push
xchg
fsubl
scas
popa
mov
dec
jle
es
or
cmpsl
pop
fisubs
inc
sub
mov
scas
gs
jns
shl
shll
std
mov
pop
inc
in
sub
jl
call
ror
ret
add
dec
xchg
xor
sub
std
add
push
adc
stc
or
int
stos
dec
cltd
int
mov
not
mov
push
jmp
cld
add
cmp
cmp
int
xchg
push
lcall
push
mov
ss
cli
shll
fcoms
aas
mov
mov
mov
sbb
or
jb
add
mov
cmpb
jg
leave
shlb
dec
cli
insb
push
xor
adc
cld
inc
jae
sbb
or
add
adc
fsubrp
push
sub
pop
repz
loop
js
pop
es
ds
dec
jmp
mov
mov
popa
lahf
fwait
mov
movaps
ficompl
cltd
push
fcmovnb
pop
mov
xchg
out
sub
ret
pop
in
cmp
pop
movsb
movsb
shlb
ds
mov
mov
and
mov
xchg
cmp
and
cmp
popa
iret
or
sub
lock
pop
mov
fadds
sub
test
enter
scas
dec
xchg
dec
outsl
iret
arpl
xchg
dec
xchg
dec
xlat
inc
mov
or
mov
or
lods
pop
jmp
or
adc
mov
sub
aaa
xorb
out
mov
imull
addr16
bound
stos
movsl
into
lods
inc
roll
repnz
sub
sarb
rorl
aad
pop
andb
lds
mov
xchg
fucomp
fisubrl
nop
mov
iret
les
aam
scas
or
sbb
sbb
mov
cld
fstps
rclb
test
mov
mov
lea
sbb
adc
add
jecxz
mov
sbb
xchg
mov
xchg
inc
daa
dec
test
pop
mov
lret
xor
jo
mov
and
mov
out
push
xor
mov
mulb
mov
stos
add
test
fsts
rcll
ret
pop
push
push
ja
mov
shll
add
shl
iret
inc
std
scas
pop
sub
xor
cwtl
insb
daa
ljmp
test
outsb
int
lcall
jg
cmp
cmp
sub
aaa
pop
mov
mov
shr
mov
jmp
incl
sbb
fdivs
xchg
xchg
aad
push
cmp
scas
in
lea
pop
xor
push
xor
mov
push
lcall
mov
into
pop
imul
subb
mov
jne
imul
test
push
cmp
ja
clc
cmp
leave
jmp
xchg
lret
mov
and
das
mov
dec
ds
mov
mulb
int
adc
cmovge
lcall
imul
outsb
xchg
mov
pop
out
lahf
cmp
and
xor
add
jecxz
cmp
lret
xor
xor
popa
adc
ficomps
shll
mov
xchg
dec
dec
sarl
pop
cmpl
mov
mov
xchg
sbb
and
aaa
pop
movsl
movsl
inc
cli
outsl
mov
or
repnz
lock
fiadds
daa
aam
sbb
pop
mov
ror
pop
lea
xchg
fidivs
test
ret
mov
daa
jmp
and
cld
sbb
pushl
push
imul
inc
and
xchg
pop
mov
cwtl
fadds
arpl
jle
sub
pop
icebp
out
imul
jns
sbb
fistl
in
and
adc
sbb
xor
rcl
nop
cld
push
inc
push
ss
mov
pop
lret
and
imul
andb
les
add
jp
pop
jo
mov
push
push
shll
jne
loop
add
fidivrl
jge
jae
mov
push
aas
imul
xchg
rorb
popf
dec
roll
stc
int
xor
mov
in
mov
push
push
jns
imul
fisubl
mov
push
add
adc
add
pop
lret
jbe
jl
stos
ret
rcrb
xchg
cmc
push
xor
inc
xchg
push
or
into
jl
hlt
andb
shr
add
decb
mov
ret
mov
mov
jns
xchg
mov
ret
sub
inc
lret
xchg
mov
leave
sti
cmp
out
xchg
or
clc
clc
shrl
cmp
mov
jg
add
sub
dec
cmp
dec
xor
jae
mov
sbb
or
lods
aas
andb
jge
mov
out
scas
push
lahf
popf
mov
jg
jle
jge
cs
and
cmpsl
xcrypt-cbc
cmpsl
xlat
iret
and
insl
mov
testl
div
mov
lds
dec
xchg
and
fistpll
nop
add
push
imul
or
pop
adc
xchg
out
pusha
ret
add
lcall
in
or
enter
ljmp
arpl
cld
lds
mov
decl
out
aam
or
xor
push
and
aaa
inc
mov
enter
fsubrp
scas
and
add
out
xor
xor
cwtd
out
inc
mov
push
cltd
pop
jmp
sahf
push
dec
lock
mov
enter
std
sub
movsl
in
cmpsl
ljmp
dec
push
ret
fnstsw
aad
testl
fmulp
xor
aaa
pop
out
imul
dec
ss
insb
lret
sbb
add
sbb
pop
xor
fs
xchg
sbb
repz
xor
loope
cld
push
xor
inc
cmp
mov
sqrtps
aad
mov
or
sub
scas
imul
je
lds
mov
mov
call
outsl
mov
mov
inc
or
enter
xlat
int3
mov
repz
fstl
mov
js
vmwrite
inc
loope
cwtl
fsubl
or
iret
loopne
mov
das
lret
sub
xchg
test
xchg
add
cs
shl
inc
dec
insb
mov
lcall
fs
enter
dec
movsl
inc
mov
mov
cltd
loope
testb
or
jle
fstps
or
ret
push
aad
lret
add
push
ljmp
or
fildl
dec
jmp
jg
into
bound
pop
int
arpl
push
clc
jnp
out
mov
hlt
xor
xchg
fs
dec
mov
cld
dec
pusha
popf
andb
fwait
sbb
mov
pop
jo
sub
mov
insl
rolb
xchg
sbb
movsb
into
in
mov
and
inc
psubb
push
pushf
pop
movsb
mov
add
test
mov
mov
inc
jb
pop
mov
lds
adc
pushf
ja
sub
inc
dec
mov
sbb
xchg
inc
fistl
nop
hlt
add
push
popf
mov
mov
cmpsb
test
push
mov
movsb
fldcw
push
imul
xchg
mov
imul
lret
arpl
test
cmp
js
pop
sub
insb
hlt
cmc
push
aas
xchg
xor
in
arpl
int
cltd
movsb
test
test
iret
cmp
lret
pop
fdivs
popf
incb
mov
mov
sub
lods
cmp
jge
lret
sti
mov
cmp
mov
je
and
sub
mov
in
popf
rsqrtps
mov
xchg
xor
lds
jbe
jo
lahf
pop
sub
mov
sub
pop
adc
inc
divl
vmwrite
xchg
add
jno
push
or
and
insl
lahf
sbb
fs
mov
jle
mov
int3
mov
sub
and
cmp
mov
and
pop
sub
cs
push
xor
arpl
lods
xor
adc
pop
adc
sahf
outsl
in
pop
shrl
jmp
std
movsb
xchg
lret
outsb
push
inc
outsb
pop
xor
xchg
gs
leave
dec
mov
mov
std
and
mov
loope
pop
fs
jo
dec
aas
ret
out
pop
sub
ss
imul
daa
ret
call
fs
sahf
stos
jecxz
mov
popl
cmp
bound
add
pushf
out
int3
inc
popf
shl
jne
int3
scas
adc
ret
xchg
int
sbb
mov
dec
push
cmp
repz
loopne
pause
inc
lcall
xchg
adc
sbb
or
ret
and
es
mov
scas
int3
nop
push
jecxz
fwait
stos
sbb
packssdw
subl
popa
insb
ret
xchg
mov
sbb
cmpsb
dec
aad
les
adc
mov
rcrl
ds
mov
out
lock
sub
insb
cld
js
jp
enter
cmc
push
movsl
fidivl
enter
mov
sahf
add
clc
mov
loopne
stos
jns
sub
pop
js
fisubs
add
jmp
into
pop
xor
ss
repnz
inc
xor
fwait
imul
xor
sbb
xchg
pop
hlt
sbb
sbb
pop
and
fdiv
mov
out
pushf
imul
enter
dec
dec
ret
jmp
decb
xchg
filds
shlb
mov
loop
push
xlat
mov
jne
xor
ss
in
rcrb
pop
pusha
jbe
jmp
in
jae
ds
and
clc
mov
cmc
adc
mov
inc
add
push
shrb
ret
inc
test
fdiv
mov
jno
jne
jg
hlt
test
pop
xorb
fyl2x
leave
movsb
sbb
push
add
xchg
dec
push
dec
mov
les
movsl
in
inc
and
and
out
nop
add
js
sbb
or
hlt
into
push
in
xor
jle
outsw
pushf
je
inc
ss
es
fs
insl
jae
and
loope
test
lret
pop
fimuls
repnz
mov
adc
mov
dec
enter
sub
cmp
jae
mov
sbb
dec
jnp
hlt
sub
and
insb
fcompl
mov
loop
adc
xlat
pop
and
mov
add
scas
sub
push
and
in
and
dec
xchg
flds
xor
and
xorl
insl
loop
ljmp
movsb
xchg
repnz
xorl
lcall
add
mov
fisubl
add
das
cmpsl
mov
inc
cmpsl
adc
sarl
add
mov
jb
test
test
pushf
in
xchg
dec
add
and
and
bound
lea
jbe
mov
iret
scas
push
lods
popf
mov
xor
and
enter
pushf
inc
mov
call
loope
mov
xchg
jo
mov
cltd
pop
lcall
fs
pop
jne
cli
pop
mov
movsl
cmp
add
adc
push
pop
pop
popa
fcom
out
je
inc
insb
cltd
rorb
pop
pop
ljmp
or
lahf
leave
clc
and
pop
sub
and
scas
fs
inc
test
out
xchg
push
push
add
dec
shr
mov
jge
jbe
das
pop
push
das
push
rcrb
cmp
decl
aam
push
jmp
mov
dec
ja
xor
xchg
es
xor
mov
add
inc
mov
jns
test
jo
out
push
in
imul
insl
repnz
jbe
lock
cmp
pop
inc
dec
sti
loop
mov
das
cmp
mov
sub
push
gs
smsw
mov
sub
push
mov
mov
sub
xchg
cmp
cmpsb
int
dec
or
rclb
add
mov
jne
mov
mov
mov
test
roll
pop
adc
push
and
popf
push
fwait
cmpsl
decb
mov
ss
or
and
stos
fists
pop
fmul
or
inc
loope
int
test
outsb
push
cli
jne
mov
loopne
pop
and
ror
rolb
or
jne
stos
xor
mov
push
daa
cwtl
insl
pop
gs
xchg
or
dec
addr16
mov
repz
cmpsb
pop
mov
dec
cmp
out
ja
popa
mov
stos
xchg
sbb
push
xor
jbe
popf
jae
jecxz
or
xchg
cmp
push
rorl
mov
xchg
add
xchg
cmp
scas
stc
cltd
lods
sbb
xchg
push
mov
insl
or
pop
int3
in
mov
out
repnz
cs
sub
in
mov
jl
out
xchg
sub
jns
imul
ss
sub
mov
push
add
or
mov
pop
fs
mov
les
enter
pushf
xchg
xlat
notb
xchg
add
fadd
cli
push
fisubrl
cmp
in
pop
test
iret
idivl
lret
cli
dec
fcmovnb
mov
push
push
or
mov
mov
mov
mov
fimull
cmp
jo
cmp
mov
mov
jp
daa
xchg
aad
call
in
xor
in
and
mov
cmp
inc
movsb
mov
or
mov
cld
lds
pop
push
rcrl
dec
fidivs
cmp
push
dec
and
sub
mov
push
adc
mov
and
dec
repz
repz
and
mov
lea
out
xor
inc
js
arpl
lret
jp
push
add
xor
pop
and
mov
cmpsb
jo
out
int3
xor
push
and
cmp
out
add
out
aad
cmp
xchg
dec
mov
or
lahf
mov
test
jp
jle
mov
ljmp
lret
inc
xchg
rorl
test
out
shlb
push
xchg
mov
lcall
or
jno
jmp
rolb
test
jns
cmp
jno
inc
arpl
jnp
mov
call
popf
inc
incb
add
pushw
ss
pushf
mov
and
mov
test
adc
call
ds
dec
popaw
mov
cmp
jle
arpl
jno
lods
xchg
inc
outsb
adc
push
xchg
xor
movsb
pop
shrl
add
sbb
push
aad
sbb
enter
mov
loope
ja
rclb
aaa
es
cld
enter
mov
pop
hlt
or
aam
and
mov
push
xchg
repz
imul
ret
jl
dec
out
stos
xor
adc
xchg
sbbb
ss
test
push
fwait
loope
call
out
and
or
lods
sbb
push
mov
or
jg
and
ja
insl
hlt
or
insl
std
dec
into
mov
cs
adc
sahf
mov
mov
adc
xchg
adc
pop
and
or
les
ret
sbb
popf
jae
adc
jmp
insb
push
or
xor
mov
jbe
mov
daa
mov
jb
fistps
jmp
in
xchg
jge
push
sahf
leave
fnstenv
cmp
jecxz
add
pop
call
shlb
xchg
jecxz
sub
sti
or
cmp
pop
les
loop
pop
adcb
xor
lea
mov
imul
pop
scas
lock
cwtl
add
rorb
xlat
mov
fs
dec
sub
cld
in
mov
push
lock
out
std
push
in
cld
loopne
cmp
imul
mov
dec
sahf
faddp
mov
jp
jmp
fcmovu
xchg
outsl
jecxz
push
xchg
sub
ljmp
ret
mov
out
pop
hlt
jno
sbb
test
mov
pop
gs
sub
or
lahf
push
pop
pop
cmp
add
mov
pop
test
pop
cmpsl
push
cli
das
lret
add
jle
ret
add
add
cld
adc
jge
cmp
and
push
push
loop
insl
je
rcl
je
das
lcall
out
negb
movsb
or
out
lahf
mov
inc
popf
push
mov
pop
ret
cmp
sub
xor
idivl
movsl
xlat
xor
es
or
and
or
jg
and
test
loopne
popf
xor
pop
jp
adc
dec
xchg
xchg
sti
jle
ja
stc
push
movsl
or
repz
sub
push
ja
stos
int3
inc
xor
cmpsb
or
pop
adc
adcl
into
mov
loope
inc
ss
bound
fcmovb
pop
adc
and
jae
fdivrp
pop
dec
jg
push
in
test
inc
push
and
arpl
mov
xchg
cmc
repnz
aam
insb
pop
pop
pop
push
xchg
add
insb
pushl
ds
imulb
mov
mov
aaa
and
ret
inc
fmuls
add
sub
ret
dec
out
and
xor
mov
push
push
ret
repnz
sbb
fldt
sbb
sub
out
jmp
mov
and
sbb
scas
sbb
or
pusha
fnstenv
pop
adc
or
xor
xlat
push
sbb
dec
jecxz
pop
lods
lret
jle
add
push
inc
testl
decl
movsb
fldenv
cmp
fildl
int
push
xor
iret
test
jbe
xchg
pop
dec
out
lcall
mov
dec
xchg
insb
lahf
xor
scas
or
mov
popa
jns
xchg
jnp
insl
lahf
pushf
cmp
cli
out
mov
inc
pop
cmp
mov
stc
les
and
std
inc
jbe
sbb
jnp
sbb
pop
cld
fucomp
sbb
xlat
movsb
pop
int
xchg
enter
jae
test
out
je,pt
scas
and
xor
sbb
and
xor
lods
daa
xor
int3
dec
mov
add
push
out
mov
movsb
into
scas
and
lea
jg
push
jmp
push
cmp
daa
scas
rorb
aaa
adc
lods
xchg
stos
mov
inc
lret
pop
jae
test
test
adc
outsb
adc
push
gs
mov
xor
jo
mov
lcall
mov
popf
idivl
inc
inc
lods
shll
pop
add
cmc
adc
dec
js
mov
movsb
inc
outsb
push
lahf
mov
sub
sbb
jp
mov
repz
aaa
cmp
test
rcll
sbb
js
ja
test
scas
jnp
ficomps
out
push
sub
loop
out
sbb
data16
adc
sub
dec
out
cmp
inc
or
int
cli
xlat
cli
xchg
jp
push
in
add
xchg
aad
push
gs
into
mov
cli
xor
jo
xchg
pop
addr16
aaa
xchg
mov
adc
jmp
fildll
sub
dec
cmp
push
add
xor
pop
stos
xor
mov
lret
mov
sarb
push
xor
cmp
xchg
cltd
sti
jle
clc
outsb
push
adc
sub
xchg
aad
icebp
pop
jbe
pop
jle
and
and
jns
mov
aas
push
lods
push
sbb
mov
out
xchg
push
sbb
popa
pusha
mov
fidivs
mov
cld
jo
hlt
dec
pop
pop
ja
stos
data16
pop
sub
outsb
sbb
les
out
js
dec
les
cmpsl
mov
fcomip
pop
lock
jge
pop
mov
mov
in
adc
sub
mulb
loop
add
push
movsb
cmp
mov
xchg
adc
out
xor
outsb
arpl
sub
sub
ja,pn
sbb
mov
mov
andl
cmp
ss
rorb
mov
jae
fs
pusha
iret
xor
or
arpl
aaa
imul
out
and
pushf
popa
fwait
mov
mov
cmp
cltd
shr
out
jmp
push
dec
adc
inc
inc
popa
mov
hlt
das
aaa
cmpsl
push
cmp
mov
cmp
push
mov
sbb
push
cmpsl
addr16
jp
popa
mov
shll
xchg
mov
imul
and
push
fcoml
lcall
rcrb
push
xlat
in
xchg
jo
xor
dec
js
pop
sbb
jmp
out
pop
sub
cmp
clc
jg
dec
inc
inc
jo
dec
push
add
mov
pop
cmpsb
adc
in
inc
sahf
jle
xor
sub
and
add
jo
std
jl
mov
lods
stos
lock
mov
xchg
and
mov
sahf
jecxz
sbb
push
adcl
cmp
mov
ds
iret
lret
lock
push
inc
xorb
int
std
push
xchg
cs
bound
cmp
adc
pop
xor
mov
jbe
testl
push
and
lgs
cmpb
inc
xchg
xchg
test
jnp
push
xchg
in
and
das
sub
pop
bswap
cwtl
mov
push
mov
rclb
aam
mov
dec
sub
pop
test
repz
sahf
in
shl
dec
inc
fldt
loopne
into
test
lcall
adc
ret
mov
or
addr16
dec
and
in
jne
aad
movsl
pushf
fimull
mov
into
adc
mov
adc
stc
jge
add
sbb
mov
cmp
add
repnz
push
nop
jmp
mov
pop
in
push
sub
pop
sbb
pop
notb
jp
mov
stc
decb
pop
xchg
ret
mov
inc
rclb
adc
movsl
jmp
push
fs
adc
cmpl
dec
pop
insb
fisttpl
dec
adc
inc
or
xchg
cmp
and
jnp
sbb
jne
je
dec
in
shll
add
lahf
adc
lret
cmpsl
test
pop
mov
jae
fisttpl
js
add
rorl
pop
flds
mov
xor
mov
xchg
sub
ss
imul
adc
sbb
push
pusha
jns
les
lods
sub
ljmp
xchg
mov
insl
jae
lea
daa
push
std
decl
scas
mov
xchg
rcl
insb
and
mov
hlt
in
mov
call
jmp
rol
cmp
das
and
mov
gs
push
out
push
leave
jbe
mov
cmpsl
lods
das
sbbb
out
push
enter
xor
jg
jb
hlt
fmulp
push
adc
cli
and
ja
fcomi
jb
sbb
cmpsl
pop
and
rcrl
int3
and
jp
or
fisubs
push
jp
mov
or
ljmp
xchg
scas
mov
mov
jb
adc
popa
add
cwtl
mov
dec
aas
shrl
adc
imul
mov
in
mov
aad
adc
idiv
xchg
and
adc
jb
sbbb
pop
data16
idivl
pop
mov
test
cmp
stc
xchg
mov
rolb
imul
fdivrl
iret
out
pop
dec
popa
scas
fstps
cmp
mov
mov
jbe
mov
cli
mov
mov
in
scas
xor
cmp
out
pop
cmpsl
pop
dec
cmp
or
cwtl
out
sbb
dec
mov
mov
cs
loope
loop
movsl
test
mov
add
xchg
sub
fistl
icebp
pop
push
adc
add
dec
aam
into
test
xor
xchg
ss
int
daa
push
int3
pop
neg
jg
inc
push
inc
outsl
mov
mov
std
and
gs
add
mov
mov
aam
ds
mov
out
add
mov
jno
cs
shr
nop
pushf
hlt
mov
fnstcw
pop
clc
xor
inc
jno
loop
push
cmp
jge
pop
test
jecxz
xchg
dec
or
movsl
push
xchg
jp
xchg
pushf
xchg
aas
lea
fsubl
cmc
call
sarb
adc
clc
dec
mov
push
and
lret
fsubrs
stos
movsl
inc
push
dec
add
fdivrp
pop
aaa
les
int3
jns
mov
mov
dec
mov
js
xor
in
xchg
imul
shlb
pop
adc
fwait
sbb
mov
scas
xorl
outsl
xchg
push
inc
mov
es
push
lret
xor
xchg
mov
icebp
test
arpl
int
lods
inc
push
int
shlb
and
in
cmp
rcrb
dec
jno
roll
aas
sbb
out
mov
enter
enter
or
or
lds
mov
inc
mov
hlt
in
add
sbb
mov
je
loopne
dec
cmp
fcompl
push
lcall
popa
mov
dec
orb
sarb
xchg
mov
pop
pushf
xchg
lret
jo
jmp
cmpsb
mov
dec
loop
push
mov
sbb
iret
aad
stos
push
adc
loopne
push
fdivrs
fcomps
bound
pushl
fs
cmp
movsb
in
sbb
cmp
cmp
add
shll
jb
cld
push
gs
inc
dec
outsl
mov
adc
sbb
inc
fdivr
jg
jecxz
lock
xor
scas
jmp
scas
loopne
xlat
or
sub
gs
testb
lods
inc
out
xor
ret
cmp
mov
sub
jo
push
sub
or
fcmovbe
xchg
xchg
sbb
in
mov
mov
int3
aas
jmp
icebp
int
popl
js
pop
scas
sub
pop
push
and
pushf
push
lret
mov
cltd
rcrb
movsb
mov
ja
loopne
lds
nop
inc
add
jp
add
xor
sbb
icebp
mov
out
aas
mov
ss
imul
rclb
pusha
sbb
lahf
dec
ja
xor
mov
bound
mov
cmc
fbld
test
cmp
ret
out
push
icebp
sahf
dec
jg
cwtl
mov
ds
mov
xchg
pop
adc
inc
lods
mov
sar
loope
xchg
or
into
mov
test
mov
push
mulb
scas
fisubl
repnz
ss
cltd
add
lret
push
inc
push
mov
fldt
push
cmp
popf
jg
test
jb
mov
and
jge
xchg
jecxz
xchg
pop
add
jg
jns
jmp
incl
xchg
and
cmp
jbe
nopl
scas
push
lret
dec
aam
pop
test
sub
repz
sbb
xor
stos
mov
shrb
adc
movsb
fs
sbb
test
lods
cld
in
test
ficomps
xchg
cmp
inc
sbb
ds
divl
stos
sub
call
inc
mov
jecxz
das
inc
mov
pop
sub
repnz
mov
subl
mov
enter
and
lcall
ja
push
mov
out
std
stos
mov
push
mov
push
and
push
pop
jge
test
bound
incl
sub
pop
icebp
adc
push
push
cmp
loopne
inc
cmp
pop
es
mov
sbb
xchg
push
add
mov
sub
scas
cmp
lea
ja
and
cmp
test
test
cmp
scas
fidivl
adc
lret
out
les
fsts
arpl
and
clc
dec
xchg
sbb
loope
mov
mov
push
loopne
frstor
push
push
jnp
sbb
jo
jle
ds
cmp
or
out
dec
xor
and
push
mov
xchg
and
js
sub
shl
sub
and
dec
cmp
dec
jge
in
push
shrl
xor
mov
or
adc
fdivl
add
fwait
test
add
enter
lods
jmp
mov
mov
push
leave
dec
adc
cmpsb
inc
movsl
loopne
pop
inc
mov
imul
cld
jmp
ja
sbb
push
add
add
es
data16
cmp
inc
adc
fbld
jno
and
rol
loopne
mov
subl
xor
jecxz
xor
mov
loopne
out
push
pop
push
cs
cmp
dec
rcrb
sahf
mov
push
cmp
inc
pop
mov
xor
subl
out
pop
inc
jmp
imul
push
cmp
push
sahf
aas
mov
and
test
dec
jmp
repnz
dec
imul
rcrl
loop
or
mov
adc
fisubs
lret
pop
movsb
xlat
dec
cltd
or
loope
mov
cmp
and
aas
nop
rorl
aam
cli
mov
cmp
pop
mov
cltd
jno
shl
sub
jae
test
push
gs
inc
stos
call
hlt
int
lock
mov
in
lods
jge
mov
fdivr
mov
test
loopne
push
pop
push
mov
cld
pushf
xchg
dec
xchg
out
int
cmpb
xor
adc
fdivrl
cmp
fwait
ljmp
xor
scas
fcompl
pop
lret
nop
stos
adc
rcll
push
mov
ss
leave
adc
popf
fsubs
loopne
inc
ret
popf
inc
push
scas
test
adc
lcall
sarb
push
insl
clc
out
mov
cmp
mov
test
stos
rclb
jg
ss
mov
repnz
mov
xchg
arpl
mov
and
xor
xchg
imul
or
or
xchg
je
and
push
inc
cwtl
fisttpl
mov
adc
test
cmp
jb
sbb
dec
mov
add
enter
cmpsl
paddw
adc
mov
lret
popf
nop
sbb
cmp
push
mov
into
imul
shrl
adc
test
dec
mov
mov
outsl
lock
sarb
leave
fs
mov
in
mov
xor
clc
stc
in
leave
popf
jmp
rolb
and
rcll
sar
add
and
mov
push
push
fstpt
aad
vreducepd
mov
fdivrl
jbe
or
jge
sub
lcall
aam
int3
test
fcomps
mov
jle
pop
mov
and
imul
mov
rorl
loope
adc
xchg
push
pop
mov
in
cmp
add
dec
push
mov
mov
insb
pop
movsb
mov
std
pusha
xor
cmc
and
mov
sarl
arpl
sbb
mov
sub
mov
rcll
and
pop
lock
jns
inc
pop
jl
jg
or
xor
dec
jnp
cmp
ret
imul
out
inc
popa
aaa
adc
fsub
mov
ret
shrb
cli
mov
mov
ret
nop
or
push
cmp
jl
shlb
adc
mov
fidivs
test
cmp
shrb
xchg
gs
sti
add
pop
scas
ret
out
sti
inc
xor
jp
inc
out
pop
inc
sahf
mov
mov
arpl
add
pop
sub
push
cmp
fidivrl
and
fdivl
sbb
in
outsl
adc
inc
pop
insb
hlt
sub
gs
or
fimull
jmp
sub
cmp
push
fdivrs
xor
lods
cs
out
lahf
jp
jb
dec
jb
in
pop
popa
sbb
adc
push
mov
jg
bound
inc
or
push
push
mov
out
cmp
add
dec
cmp
mov
sub
cltd
mov
jnp
mov
fs
and
and
mov
pop
xchg
fst
sub
push
cmp
leave
sarb
and
andl
sbb
scas
sbb
aas
inc
cmp
ljmp
jbe
adc
xchg
addr16
loopne
sbb
jmp
scas
cmp
out
push
imul
push
xor
xchg
sti
aam
dec
sub
sti
push
inc
fs
inc
sbb
cmp
xchg
cmp
shlb
movsl
pop
inc
inc
and
pop
loop
aas
subb
xchg
loopne
shlb
mov
std
jmp
sti
fistpll
inc
ss
hlt
jle
lock
sub
inc
push
jno
push
out
outsl
or
push
cld
aas
lds
aad
and
and
subl
and
test
std
les
mov
push
out
mov
shrb
dec
and
cmp
mov
int3
xor
or
ss
imul
sbb
jecxz
push
xchg
xor
out
cld
js
aaa
imul
sub
ljmp
pop
jns
push
nop
pop
pop
cmpsl
test
dec
sbb
in
inc
jae
in
flds
test
cmp
scas
inc
mov
and
pusha
das
rcrl
cmp
inc
fstpl
jne
insb
pop
add
mov
fisubl
fwait
mov
aaa
adc
jmp
shrl
pop
mov
ja
fstps
ss
cmp
out
jns
repnz
xor
mov
cmpsb
fdivrl
jno
enter
xchg
outsl
push
aaa
and
fiadds
cmp
rcl
scas
sti
inc
adc
hlt
jl
rclb
push
adc
aaa
xchg
mov
xor
andl
adc
cmpsb
sti
in
or
fstpl
inc
push
enter
push
fwait
mov
lret
int
mov
lret
mov
mov
lret
pop
cmc
add
push
xor
push
int3
or
push
mov
xchg
mov
xor
dec
aad
adc
mov
jmp
push
cltd
aaa
or
sbb
xchg
icebp
mov
sub
mov
bnd
lods
in
inc
and
and
xor
push
adc
mov
xor
aaa
mov
int
enter
push
sbb
out
pop
xor
jb
add
push
and
jg
fildll
sub
and
push
mov
int3
and
es
cmp
mov
jge
roll
xchg
mov
mov
sub
xchg
je
xlat
imul
xor
xchg
jecxz
dec
lds
ret
jbe
in
pop
adc
xor
lods
add
cmc
adc
mov
sbb
push
lea
push
or
xor
in
leave
mov
pop
cld
sbb
dec
jmp
xchg
pop
arpl
aam
jmp
sub
jge
push
cmp
dec
cmp
sub
dec
fstps
ret
jecxz
push
arpl
mov
push
scas
aaa
jmp
add
add
xlat
cs
ret
cvttps2pi
aam
fsubl
shl
rcrb
roll
pop
xchg
mov
js
xor
jecxz
push
out
mov
sub
xchg
sub
add
xchg
out
adc
mov
sbb
cmp
dec
rorb
lret
sbb
cmpsb
dec
cmc
cmpsl
push
xchg
xchg
lea
out
xchg
bound
test
adc
into
cmpl
and
shlb
cli
ret
cmp
jno
cs
xchg
and
mov
pop
cmp
into
imul
addr16
jae
ficompl
adc
mov
gs
lret
jecxz
push
popa
jmp
mov
out
dec
popf
xor
les
lahf
adc
xchg
mov
fists
notb
xor
pop
mov
cmp
sub
jg
dec
jle
mov
xor
inc
mov
data16
ffreep
xor
repnz
add
inc
mov
int3
or
mov
arpl
sbb
lahf
sub
and
aam
and
mov
leave
sahf
xor
pop
mov
or
xchg
push
test
mov
dec
and
aaa
aam
xchg
sbb
jecxz
cli
arpl
adc
les
inc
ret
inc
out
cmp
into
cmp
dec
mov
push
mov
jno
xchg
push
fildl
pop
lcall
cmp
arpl
add
pusha
pop
fdiv
loop
push
xor
adc
test
sbb
movsl
mov
push
jae
pushf
cmp
scas
rclb
hlt
addr16
and
cmpsb
pop
into
mov
test
std
mov
mov
add
cs
add
inc
sub
mov
outsl
jp
jne
mov
mov
mov
bound
jmp
inc
add
sbb
out
fisubs
sbb
inc
mov
leave
add
fnstsw
jbe
xor
popa
cmp
pop
mov
mov
mov
xchg
lea
add
add
in
mov
xchg
adc
in
scas
push
adc
shll
pop
xchg
insl
xlat
mov
cmpsb
gs
rorb
mov
shl
arpl
aam
iret
pop
push
cmc
je
mov
sub
lods
nop
dec
pop
sbb
jae
push
dec
lods
icebp
sbb
call
xchg
pop
jge
mov
aaa
or
adc
inc
xor
push
stos
jp
shlb
pusha
out
rol
xor
mov
shrl
repz
mov
add
scas
dec
loopne
pop
dec
shr
cmp
aas
ds
sub
pop
outsb
xor
out
and
jns
pushf
mov
pop
sti
or
push
insl
and
pop
loop
jp
add
push
xchg
out
aad
test
pop
repz
sbb
push
mov
jno
add
mov
aam
xor
shll
jge
int
daa
mov
cmp
jns
sahf
pushf
pop
lods
and
inc
push
bound
mov
xchg
cmp
enter
xchg
cmp
sbb
add
aaa
iret
mov
movsb
inc
cmpsl
adc
loope
insb
fimull
int
add
notb
or
out
sub
es
cld
les
bound
dec
push
mov
ds
ss
push
mov
cmp
dec
fcompl
push
sub
pop
push
xor
rclb
xchg
lds
dec
jne
push
adc
dec
mov
loopne
in
add
jnp
fcoms
jl
in
addr16
out
mov
leave
in
dec
and
cmc
xchg
push
mov
into
cli
mov
aad
cmc
lret
fwait
jp
jae
out
subb
test
adc
je
push
jg
lret
imul
jl
adc
jne
insb
mov
ja
xor
call
fucomi
mov
bound
pop
fbstp
pop
ds
shlb
inc
fst
or
pop
fcmovbe
mov
cs
ja
xchg
jo
test
xchg
shll
icebp
and
push
pop
fidivs
adc
dec
aad
sti
aam
hlt
int
loop
rol
movsb
mov
ljmp
fistps
fabs
xchg
in
test
dec
add
adc
pop
pop
push
cmp
sbb
and
xchg
in
call
sahf
dec
sub
inc
jmp
adc
mov
jae
pop
pop
xchg
pop
std
das
jbe
fcoms
push
sbb
fwait
mov
and
jge
sbb
test
mov
in
iret
sar
cmp
pop
out
add
fldcw
popa
scas
xchg
hlt
repz
cld
xchg
push
filds
rclb
adc
push
cmc
mov
sbb
push
add
jnp,pn
imul
sbbb
call
or
xor
mov
sub
push
push
push
cmp
loope
push
lea
xchg
insl
cmp
push
fisttps
push
ja
or
dec
adcl
and
mov
je
int
cmc
or
nop
xor
sarb
shll
call
mov
ret
ret
into
mov
adc
jb
pop
sbb
push
icebp
pop
mov
sub
pop
adc
ss
mov
pop
adc
xchg
leave
cmp
mov
nop
pop
imul
or
loopne
add
mov
sbb
lods
mov
scas
lahf
inc
jns
xchg
jbe
popaw
push
fadds
out
push
inc
xchg
jno
mov
push
sub
add
fwait
push
in
mov
inc
cvttps2pi
inc
insl
arpl
data16
mov
movsb
inc
sbb
orl
jbe
push
mov
mov
repz
or
sub
popf
adc
sbb
test
fldenv
add
shll
mov
jg
imul
inc
or
jbe
xchg
inc
addr16
push
jbe
adcl
stc
adc
and
mov
xor
adc
test
adc
shll
fcoms
mov
fsubs
inc
les
scas
mov
push
jg
mov
xor
add
mov
inc
push
cmpsb
es
and
in
sub
adc
out
sbb
in
pop
clc
push
stos
call
and
jb
xor
add
insb
mov
out
dec
fsubl
ret
xchg
xor
jbe
int3
jp
in
inc
pop
push
loopne
xor
je
add
sbbl
cmp
arpl
mov
inc
jo
dec
call
mov
push
adc
inc
call
das
imul
lcall
inc
sbbl
xor
lock
pop
fiadds
notb
mov
pop
cmp
sub
mov
ja
movsl
cltd
mov
lret
stos
enter
cmp
lods
adc
mov
push
xchg
or
roll
test
ficoml
pop
pop
jle
mov
icebp
cmp
test
test
lods
addr16
pusha
xor
adc
jne
jns
cli
ror
pop
sub
scas
mov
sbb
dec
pop
adc
fistl
jo
test
clc
mov
xor
mov
xor
sti
mov
mov
pop
call
loope
inc
pop
dec
addl
mov
inc
jg
bound
xchg
adc
sarb
xor
jnp
and
dec
dec
mulb
andb
out
sub
into
imul
mov
mov
insl
sub
pop
jg
sub
jecxz
ljmp
outsl
sub
out
pop
in
loope,pt
sti
testb
test
jae
andl
jns
sbb
add
inc
pushf
lock
cmp
pop
cmp
dec
and
and
jne
xor
lods
insb
aas
xor
push
inc
int3
gs
shlb
cmp
xor
and
cld
jmp
mov
insl
data16
in
in
das
dec
fs
je
sub
jl
aas
mov
pop
sub
out
sbb
lods
ja
push
inc
dec
pop
push
sub
inc
pop
ret
popf
sub
sub
lcall
cmp
cmc
sbb
cld
testl
mov
adcl
xor
and
es
add
or
call
mov
and
loope
push
outsb
jl
xor
rolb
rcr
cmp
les
mov
shr
mov
test
stc
aam
cmp
aad
push
ret
push
int
addl
or
or
cmp
int3
and
cmp
fldenv
lcall
cmp
scas
cmp
repz
jne
test
push
sbb
sbb
ret
mov
fsub
sub
xor
xchg
sbbl
out
sahf
dec
xor
popf
fstpl
leave
fildll
lock
cmp
lret
rol
sbb
cltd
pop
hlt
inc
scas
jae
in
sbb
jge
inc
in
pop
mov
loope
jmp
test
out
ret
xor
sbb
jns
test
lods
mov
adc
rcrl
hlt
hlt
movsl
jmp
int
cli
mov
mov
ret
test
and
sahf
aaa
jae
or
sub
subb
jbe
sbb
sbb
adc
fstpl
incl
jbe
stc
xchg
cmp
fcomi
pusha
out
jg
shlb
sbb
pop
ja
movsl
aas
jmp
jg
sahf
jno
imulb
incl
lea
push
jmp
scas
sti
sbb
sbb
and
jne
jb
mov
clc
mov
cmpsb
aad
sbb
jns
movsl
les
je
or
std
sarl
js
js
jo
aam
and
adc
popf
mov
lods
push
jmp
clc
jge
push
cltd
mov
xchg
mov
pop
mov
sbb
shrl
stc
rcll
test
cmpsl
add
insl
adc
imul
cmpsb
xchg
xchg
test
in
dec
adc
mov
movsb
push
movhps
pop
push
std
mov
ret
cwtl
popf
mov
inc
dec
push
xor
dec
bound
pop
sbb
and
dec
and
mov
pop
jo
test
inc
mov
mov
and
ret
testb
aad
lret
hlt
cmp
mov
out
sbb
add
inc
loope
pop
sub
inc
inc
and
js
test
sub
xor
and
pop
jmp
clc
dec
loop
mov
adc
jg
sub
xchg
xchg
jge
add
pop
pop
rcrl
leave
into
das
adc
and
in
sbb
lods
iret
in
push
jmp
mov
clc
xorl
cmpsl
ds
das
imul
or
iret
scas
mov
add
fcomps
or
gs
lods
xchg
lods
daa
xchg
xor
fdivr
test
sbb
adc
or
mov
adc
or
sub
fnstenv
fdiv
sbb
int
lcall
sub
push
cmp
sarb
cltd
addr16
dec
jmp
adc
mov
adc
mov
inc
add
movsb
popf
je
gs
mov
xchg
push
insl
sbb
outsl
sahf
xor
repz
aas
inc
mov
and
push
cmp
cmpsl
xchg
push
xchg
mov
arpl
cli
mov
mov
sub
mov
scas
sub
sbb
or
push
ja
stc
xor
int3
xor
and
cmp
jle
jbe
lret
push
sbb
add
pop
stos
dec
cmpsl
jg
xchg
mov
adc
sub
jg
xchg
fwait
or
sub
and
pop
mov
dec
stos
mov
les
mov
fwait
out
mov
sbb
cmp
xor
xor
test
jmp
ret
push
sbb
and
lcall
loope
testb
imul
rcll
dec
push
push
lcall
mov
cmp
dec
outsl
ja
mov
movsb
pop
xchg
ds
xchg
adc
xchg
pop
enter
fwait
lret
aaa
adc
and
pop
ljmp
leave
popf
push
add
loop
push
call
test
adc
add
sbbl
loope
icebp
and
movsb
cmp
xor
mov
add
lcall
push
es
add
pushl
stos
sbb
arpl
sbb
lods
arpl
adc
add
mov
imul
shll
es
mov
xchg
jl
leave
sub
pop
iret
push
aas
addb
mov
movsl
xor
bound
cmp
pop
and
push
fmull
leave
jge
mov
xchg
inc
popf
xor
push
xchg
movsb
dec
xor
adc
mov
or
jle
out
and
pop
push
inc
pusha
pop
xchg
jge
or
pop
or
fildll
xchg
xchg
pop
jg
fsubl
rclb
enter
mov
gs
jno
bound
scas
mov
shlb
inc
aad
icebp
cmpsl
cmc
xchg
repz
xchg
mov
leave
mov
out
mov
mov
and
ljmp
xor
and
xor
in
call
and
adc
jmp
push
mov
add
test
sahf
pop
loop
dec
sub
or
pandn
cs
ret
push
sbb
fwait
xchg
iret
inc
shll
or
dec
inc
and
pusha
adc
push
or
add
test
lock
ss
shrb
dec
cmp
sub
adc
xorl
movsl
pushf
mov
int
in
clc
jecxz
dec
xor
sti
sahf
scas
cmpl
jbe
mov
xchg
gs
dec
mov
je
sbb
mov
test
push
adc
adc
lcall
xor
movsl
xchg
jmp
sbb
rclb
jo
ret
out
adc
dec
and
lods
push
aaa
das
push
lcall
mov
dec
rcr
es
fisubrs
dec
lods
stc
rorl
loope
adc
lea
sbb
xor
push
xchg
jle
loope
stos
and
mov
and
pop
mov
mov
lds
adc
inc
mov
xor
sbb
in
and
std
mov
shlb
sahf
daa
in
or
jo
das
sub
or
sar
xchg
adc
ljmp
orb
sub
jo
mull
inc
or
insl
adc
mov
mov
mov
jge
jns
lea
popf
mov
scas
addr16
pop
in
xchg
out
jl
xor
enter
movsl
pop
and
xor
lods
xchg
andl
or
add
xor
xchg
mov
jecxz
leave
add
scas
jnp
in
dec
nop
mov
cmp
sub
fldenv
sub
push
and
push
jne
and
jno
cwtl
lock
pop
loope
push
xchg
addr16
mov
push
cmpsl
pop
pushf
xchg
bnd
and
dec
mov
lret
jge
inc
adc
lret
jge
in
mov
lock
jne
dec
sub
int
fiaddl
gs
cmp
pop
jg
or
jnp
pushf
ret
imul
outsb
popa
xor
das
mov
std
push
pushl
in
rorb
jno
add
sub
mov
clc
in
loopne
lods
cwtl
fsubs
lods
hlt
or
add
jge
les
jbe
mov
push
shr
xchg
sub
dec
je
test
aam
mov
sub
pop
or
cmp
push
pushf
push
pushf
pop
dec
cltd
cmpsl
or
lods
jmp
mov
clc
stc
sahf
mov
lock
test
pusha
aam
inc
push
loope
repnz
xor
and
push
or
cmp
sub
insl
scas
das
clc
pop
sub
jge
stc
sbb
mov
in
cmp
mov
mov
mov
or
sub
adc
popf
lea
or
loopne
ljmp
cmp
icebp
lock
xchg
pushf
dec
add
fisttps
movsb
xchg
cltd
mov
lret
pop
popa
and
insb
xor
cmovae
inc
and
sbb
pop
inc
xor
cmpsb
adc
sar
add
cs
movsl
jo
push
mov
sbb
mov
xor
add
cmpsb
xor
in
or
movl
xchg
pop
mov
nop
or
or
jns
adc
jno
dec
add
cmp
int3
lock
push
mov
pop
insb
lods
rcr
popa
xlat
inc
adc
cmp
cwtl
lods
int
jmp
xor
lds
daa
popf
sti
push
jne,pn
pop
call
sbb
or
repnz
cld
fimuls
loop
jle
test
scas
mov
faddp
jmp
pop
icebp
adc
scas
cmp
cwtl
xchg
out
pop
lods
dec
adc
mov
lcall
and
mov
jge
xor
cmc
fs
or
ljmp
adc
gs
push
and
leave
lahf
xchg
int
xchg
cli
sbb
lods
xorl
sub
out
data16
fildll
lds
lock
sahf
adc
mov
xor
out
mov
push
jecxz
mov
jnp
in
mov
fisubs
sbb
lds
loope
ja
cs
rorb
inc
loopne
repnz
xchg
mov
ja
lret
imul
and
test
xchg
ljmp
in
inc
push
mov
mov
xor
mov
das
jge
loop
mov
daa
imul
mov
pop
movsl
jp
jo
std
icebp
sbb
jp
add
ficoms
icebp
and
mov
mov
mov
sub
pop
pop
clc
push
pop
scas
dec
addr16
je
xchg
imul
adc
xor
out
ret
test
and
sub
pop
outsb
cld
sub
xor
dec
into
lock
and
jg
fdivs
ss
dec
ret
mov
xchg
or
mov
cltd
mov
xchg
xchg
lcall
es
jmp
fisttpll
lret
test
roll
add
sbbb
fistps
jge
add
xchg
subb
lea
sti
inc
inc
sub
push
jmp
jecxz
mov
mov
push
fst
push
pop
in
and
insb
dec
adc
mov
adcl
sarl
cmp
xchg
and
ja
jle
jno
pop
mov
lds
bound
iret
push
pop
mov
in
add
sub
test
push
popf
push
jo
clc
decb
xor
mov
dec
out
adc
mov
inc
clc
xor
leave
sub
mov
loopne
dec
mov
in
inc
jb
push
lahf
mov
repz
push
call
repnz
out
loop
lahf
stos
lds
xor
aad
clc
outsl
arpl
fistpll
enter
jmp
sbb
jle
add
push
mov
xchg
mov
dec
ja
xchg
xchg
lds
cltd
fs
dec
or
lods
imul
inc
shlb
mov
pop
pop
test
xor
jge
lahf
mov
add
les
stos
call
mov
pop
test
scas
fimull
jae
int3
sbb
push
fldcw
mov
jne
xorb
xchg
js
jg
fmul
clc
fbld
cmp
into
iret
jge
cmp
in
sub
clc
jg
lret
aaa
mov
cmpsb
xor
mov
jmp
mov
outsl
test
loop
sub
insb
cmp
push
push
cli
xchg
xchg
and
or
daa
jge
jb
scas
cmpsb
mov
fimull
stos
out
rol
dec
jp
xchg
xchg
pop
add
movsb
out
jg
mov
or
dec
scas
push
sbb
mov
in
cmp
in
shlb
lock
mov
movsb
mov
daa
test
icebp
or
add
clc
insl
inc
sub
sbb
data16
fnstsw
gs
icebp
adc
mov
testl
add
dec
dec
jbe
in
mov
push
rcll
push
cmp
pusha
stos
daa
xchg
test
pusha
jo
outsb
mov
divl
or
mov
insb
outsb
add
jmp
and
push
loopw
push
aam
shr
jbe
cmp
shll
mov
cmp
icebp
iret
xor
sahf
popa
and
dec
mov
dec
lret
icebp
cmp
sub
insb
jnp
aad
inc
push
add
inc
and
adc
mov
jle
add
dec
je
push
rcl
sub
shrl
push
mov
cltd
mov
push
lahf
aaa
shlb
xchg
daa
arpl
add
mov
adc
push
sub
lock
dec
dec
and
xchg
jg
mov
xor
ret
enter
xor
shlb
out
shl
mov
das
sbb
lret
sbb
imul
test
aad
and
data16
cli
jo
leave
test
cmp
cld
or
push
push
ds
popf
mov
push
push
test
dec
out
outsl
sbb
add
jle
fsubrl
and
ja
inc
adc
fs
push
loopne
sti
push
fistpl
scas
loope
cmp
popf
sub
add
pop
or
jo
nop
pop
hlt
push
cmpsb
lea
push
mov
call
jno
jge
repz
push
xchg
push
jmp
jb
bound
adc
in
pop
push
push
push
test
cmp
imul
decl
or
cwtl
fs
stos
mov
cmc
inc
std
inc
in
cmc
or
pop
daa
mov
mov
sbb
xchg
neg
aam
sub
jle
fsqrt
mov
ds
mov
jnp
push
dec
aaa
sub
mov
and
mov
xor
jle
mov
xor
sbb
inc
sbb
cld
sbb
push
insl
insl
outsl
sub
or
mull
push
fcoms
pop
fiadds
scas
out
mov
ret
inc
mov
or
jns
insb
hlt
inc
aaa
daa
dec
movsl
pop
rorb
push
jmp
into
push
push
mov
lret
lret
mov
dec
jle
sbb
add
cmpb
ret
outsb
sub
aaa
je
add
push
mov
lods
xchg
fcoml
jge
stos
jnp
adc
sbb
mov
fs
cld
and
adc
sbb
dec
ljmp
jno
or
mov
sub
popa
inc
mov
mov
lock
inc
and
fs
jmp
mov
mov
inc
mov
jmp
or
fsubl
jne
dec
jle
neg
test
jo
stos
popf
and
and
or
or
aaa
stos
aas
mov
cmp
lock
cmp
push
shl
mov
rep
cmp
fdivrs
orb
xchg
or
cmpsl
rcll
sub
es
lahf
and
fbstp
lea
sbb
es
addr16
mov
cld
std
fmull
or
adc
fwait
xchg
xchg
gs
sbb
das
bswap
adc
pop
aas
push
mov
cld
push
imul
and
test
out
insl
fisttps
sbb
sbb
push
imul
jbe
call
jno
fstpl
addr16
in
movsb
add
outsb
loopne
std
out
add
in
pop
shr
fadds
out
xor
roll
aam
jmp
ret
or
pop
out
sub
sub
aad
imul
push
out
jno
leave
add
roll
adc
xchg
xchg
fildl
xchg
xchg
dec
jp
sti
fwait
mov
lds
loop
js
add
pusha
xchg
push
mov
es
push
call
add
and
out
pop
scas
pop
pop
add
addr16
mov
or
xor
cmp
and
mul
xor
mov
jg
mov
jns
xchg
and
mov
or
mov
lods
push
and
ja
push
fnstcw
out
xchg
xlat
shl
cmp
push
mov
jbe
loop
sbb
pop
cld
mov
ret
xchg
je
inc
and
sub
in
popa
or
inc
jb
jl
jno
and
les
mov
jno
out
mov
mov
jnp
stos
mov
cld
mov
inc
inc
aam
sub
pop
dec
rolb
out
add
and
adc
mov
pop
mov
outsl
bound
movsl
jb
cmp
inc
push
jb
add
mov
push
int
add
or
push
or
out
sub
shr
or
daa
rcrb
inc
mov
pushf
xor
mull
sub
insl
push
repz
dec
sbbb
sub
js
sbb
aaa
jp
test
in
or
inc
movsl
gs
lock
enter
shrl
mov
inc
jae
cld
movsl
mov
jmp
enter
js
sbb
leave
xchg
add
jmp
xchg
xacquire
arpl
mov
push
inc
mov
lock
outsl
push
dec
scas
or
add
cld
in
xchg
jbe
and
in
sbb
add
push
jnp
ljmp
or
loop
push
pop
arpl
xchg
pop
mov
mov
mov
rcl
fwait
movsb
mov
cltd
fcmovnbe
std
je
xor
ret
add
loope
mov
fisttpll
in
xchg
xchg
movsl
jbe
mov
jo
push
out
pop
test
pop
inc
xor
mull
xchg
mov
shrb
test
adc
addl
rcr
cmp
and
fidivs
ds
jmp
test
push
mov
mov
push
mov
mov
mov
pop
lcall
mov
dec
jmp
or
xor
jle
bound
xchg
push
leave
jle
pop
or
dec
test
push
in
push
xchg
sub
mov
outsb
jmp
popa
out
lret
mov
sbb
cwtl
out
dec
mov
outsb
add
out
dec
cmp
mov
fistpll
jnp
repz
rclb
push
sbbl
fcmovnbe
mov
mov
push
mov
insb
insb
jno
mov
jle
mov
jg
leave
inc
leave
cmp
sbb
sub
pop
movsb
dec
mov
into
pushw
push
jmp
jge
dec
sbb
mov
dec
pop
add
xlat
mov
flds
int
xchg
ret
std
mov
lahf
clc
adc
ret
push
subl
int
xchg
fwait
sbb
or
stos
mov
mov
je
mov
cwtl
inc
and
pop
sti
sub
inc
stos
fstpt
stos
leave
js
jmp
fbstp
cmp
push
pusha
lcall
xchg
xchg
jecxz
rorl
lcall
xor
cmp
pop
sub
sbb
cmp
out
mov
movl
inc
aad
loope
mov
std
inc
push
stos
xchg
test
pusha
cmp
or
pop
inc
cwtl
test
inc
jo
lea
andl
dec
stos
loop
fcoml
xchg
adc
or
negb
clc
jl
xor
cmp
pop
adc
mov
jp
xchg
idivl
cwtl
in
push
sti
ds
sti
rolb
movsb
inc
daa
xor
cmpsb
cmp
pop
and
sbb
je
lods
adc
subb
xor
dec
sbb
iret
adc
jbe
cltd
jns
fstpt
push
in
mov
icebp
lret
pop
lds
sub
mov
push
sub
ret
aaa
in
ffree
arpl
and
lods
xchg
dec
mov
cli
insl
push
clc
push
adc
rcll
lret
or
call
inc
mov
add
fdivs
sahf
pop
mov
xor
mov
and
xchg
sub
push
dec
mov
add
inc
cmp
movsb
jp
dec
sub
arpl
jae
imul
int
mov
mov
push
mov
jecxz
movsb
mov
jae
aas
mov
inc
or
and
lcall
sahf
je
cld
repz
fnsave
icebp
inc
lret
sbb
lahf
ret
and
movsl
jo
xchg
stos
mov
ljmp
xchg
sub
mov
mov
sub
sub
dec
pop
and
mov
and
data16
mov
pop
push
mov
xor
add
jbe
or
push
mov
cs
lret
mov
add
push
test
enter
push
das
insl
out
dec
repnz
sbb
pop
mov
les
cmp
mov
jl
sub
popa
cmc
int
adc
in
sbb
adc
out
mov
pop
std
cmpsb
and
push
mov
mov
dec
dec
mov
inc
lcall
xor
and
cmp
stc
inc
dec
iret
fmuls
sbb
or
pop
push
dec
sbb
mov
sub
dec
xchg
loop
mov
mov
mov
dec
mov
pop
xchg
mov
sub
add
sbb
test
notb
push
jmp
gs
int
in
cmpsb
shrb
xor
aam
test
mov
imul
ja
jno
mov
enter
shlb
aas
xchg
push
push
xchg
mov
push
cmpl
in
or
xchg
pop
cmc
jnp
add
fldcw
icebp
arpl
fidivrl
bound
sbb
in
mov
xchg
jnp
outsl
add
adc
in
pop
pop
mov
dec
mov
and
jmp
push
dec
addr16
jne
fsubp
add
scas
int3
jecxz
cmp
pop
stos
mov
sub
das
mov
or
xchg
or
push
loop
sbb
xchg
sbb
jno
ljmp
pop
pop
adc
add
pop
jae
mov
mov
mov
jbe
cltd
sbb
nop
ror
mov
fs
adc
mov
bound
cmpsb
xchg
leave
out
xchg
lret
int3
sbb
lret
bound
pop
into
scas
mov
xlat
scas
clc
popa
adc
xor
ds
sub
out
xlat
cmp
fs
push
pop
jmp
cmpl
in
jo
fsubrs
or
repz
jns
inc
or
pop
add
jp
dec
push
ficompl
and
push
je
xor
adc
mov
push
das
outsb
outsb
cmp
aaa
data16
mov
cld
sub
ss
testl
add
pop
mov
cmc
das
mov
jmp
jae
in
es
icebp
mov
lds
insl
or
or
jp
cmp
fwait
ss
sub
out
add
cmp
daa
push
xchg
dec
dec
or
hlt
mov
push
push
notl
jg
imul
xchg
sti
mov
mov
jb
jne
dec
mov
fcomip
pop
pop
add
lock
xchg
xor
mov
xchg
scas
and
sub
pop
mov
mov
das
mov
addr16
push
inc
dec
cmp
outsb
pop
pushf
fs
add
mov
std
into
mov
ds
and
stos
inc
nop
push
mov
fcoml
hlt
call
shr
and
or
and
sub
mov
in
loop
jb
sub
loopne
dec
jns
rolb
xor
out
mov
sti
aad
sub
cmp
je
xchg
iret
enter
fwait
sbb
sbb
les
mov
or
mov
mov
push
and
popf
xchg
jnp
or
outsb
pop
mov
out
jp
insb
xor
cmpsb
les
jno
cwtl
xchg
repnz
inc
push
shlb
pop
out
cmp
xor
xchg
leave
jb
rorl
dec
jo
adcl
add
movsl
sbb
aas
jmp
xchg
orb
cmp
arpl
out
test
sub
add
popa
ret
xchg
push
cmpb
cmp
loop
mov
lret
in
jne
mov
and
daa
sti
sahf
sbb
mov
rorl
icebp
sbbl
pop
rol
enter
dec
jo
sahf
xchg
sub
xchg
mov
jle
xlat
popa
mov
dec
test
or
stos
dec
xchg
mov
lahf
cmp
ss
popa
shlb
push
xchg
jge
and
stc
int3
fadds
xchg
lret
pop
sbb
mov
popf
das
cltd
xchg
xor
addr16
in
xchg
cwtl
shll
xchg
mov
push
mov
adc
sarb
gs
repz
sti
movsl
mov
cmpsb
mov
sub
adc
in
cli
jecxz
bound
push
aad
icebp
sub
sub
inc
push
jle
movsb
and
adc
arpl
insl
pop
movb
add
push
adcb
and
mov
icebp
negl
xchg
or
xlat
xlat
pop
je
jbe
fs
dec
pop
outsl
and
add
lock
push
add
push
or
pop
andl
xchg
hlt
dec
push
lock
cmp
push
and
scas
xchg
mov
rcll
mov
cwtl
adcl
jmp
imul
fwait
sbb
insb
fnstenv
xor
in
push
test
repz
and
xchg
lret
add
ja
sbb
inc
or
xor
jp
jl
test
cwtl
push
outsl
jle
push
push
mov
pop
sbb
orl
arpl
add
jp
inc
std
mov
mov
mov
mov
ja
xchg
jp,pt
out
xchg
aam
mov
sub
lock
sub
inc
ds
and
xchg
imul
clc
ret
inc
pop
sbb
jl
cmp
aam
jcxz
nop
imul
mov
and
movsl
jge
je
lcall
lret
arpl
mov
out
das
ds
push
idivb
scas
cmpsb
xchg
xor
xchg
scas
mov
in
dec
cmpsb
cs
pop
add
mov
pop
push
insb
pop
dec
insb
mov
jbe
das
imul
pushf
std
mov
cmpsl
hlt
inc
or
scas
outsb
cmpsl
sub
sti
xchg
mov
push
xchg
push
push
cmp
push
and
sub
mov
out
or
cmpsl
push
ja
mov
xchg
xor
bswap
and
fildl
mov
mov
sbb
insl
jns
cld
mov
pop
xor
mov
fsubrl
adc
xchg
push
lock
pop
imul
xor
fwait
mov
outsl
stc
mov
cmp
sbb
sbb
mov
jmp
or
mov
jno
mov
test
pop
push
cmp
fucom
inc
scas
adc
jmp
mov
outsl
leave
cmpsl
and
popa
pop
jmp
jmp
xor
push
js
inc
jecxz
int3
sub
movsb
pop
lea
xchg
mov
xor
insb
aam
ret
frstor
adc
imul
shll
sbb
sub
sub
inc
adcl
pop
insb
sub
stos
ret
and
push
push
jb
adc
adc
mov
test
dec
push
pop
sub
and
movsb
js
push
js
lret
and
ret
jbe
pop
pop
and
out
mov
or
sub
lods
sbb
fidivrs
repnz
aam
sub
jg
hlt
fidivrl
iret
sbb
cwtl
jl
popf
enter
fdivp
dec
hlt
ficomps
jle
mov
pop
test
mov
or
push
push
aaa
hlt
dec
test
push
push
loope
or
stos
jmp
enter
inc
outsb
test
and
push
in
movsl
imul
pusha
dec
and
cmp
rcl
mov
adc
push
inc
pop
cltd
sub
jnp
push
cmp
jno
out
pop
test
mov
andl
ret
cmp
xor
lret
lahf
dec
mov
mov
xor
pop
dec
jmp
lds
sti
lock
adcl
push
add
out
inc
leave
cmp
aam
aas
dec
int3
fnstcw
dec
xchg
inc
ja
test
lea
sub
cmpl
out
jl
fcmovnb
ss
jbe
lcall
sbb
or
mov
or
mov
mov
push
jae
cltd
dec
cmpsl
mov
dec
mov
push
or
aaa
pop
ret
or
and
add
cmp
inc
stos
in
int
xchg
and
jg
enter
scas
mov
jecxz
imul
lea
sbb
test
adc
gs
add
sbb
sti
sbb
aad
xlat
xor
popa
dec
pop
arpl
push
fsubp
xor
aam
mov
mov
fildl
out
mov
pop
mov
jns
mov
std
fiadds
cli
mov
repnz
ror
stos
inc
mov
and
push
add
int
push
in
enter
sbb
mov
insb
adc
jecxz
adc
clc
bound
inc
inc
fwait
pop
shl
dec
jp
mov
xor
inc
gs
push
fsubrl
mov
and
fidivrs
pop
into
add
lahf
scas
inc
xor
jnp
mov
aam
addr16
push
out
push
in
jnp
inc
mov
fsubl
hlt
jno
orl
sbb
js
imul
adc
enter
fisttpll
jg
sbb
enter
or
mov
ds
addr16
addr16
mov
testb
pop
lcall
daa
inc
mov
lret
shll
sahf
lds
push
jo
out
push
in
xor
jg
jae
lret
dec
or
clc
mov
jp
outsb
pop
cli
test
in
fisubrs
movsl
rolb
jp
cmpsb
je,pt
std
inc
add
lret
adc
cmp
or
cmpsl
push
mov
iret
dec
xchg
in
ja
sbb
push
xor
push
arpl
push
sbb
inc
jns
fs
sub
inc
aas
inc
aam
push
mov
int3
sbb
jl
insb
dec
cmc
leave
repz
mov
fistl
fdivl
mov
jle
leave
in
loope
inc
gs
add
mov
pop
repnz
xchg
pop
fdivrp
dec
ljmp
lret
mov
std
faddp
xor
sahf
add
adc
mov
xchg
push
push
loopne
xchg
repz
sbb
mov
mov
jle
xor
add
mov
and
cmp
pop
aam
mov
mov
sbbb
mov
lock
pop
jl
adc
into
iret
lds
pop
ljmp
mov
or
test
outsb
or
pushf
repz
mov
out
jbe
cmp
xchg
mov
outsb
dec
adc
lahf
lea
fwait
sub
inc
mov
cmp
popf
add
std
sahf
pop
push
or
sub
and
dec
add
mov
lods
pop
in
mov
xchg
pop
lahf
repnz
cmp
jle
mov
stos
jb
adc
arpl
push
adc
enter
test
cmp
and
adc
iret
out
cmpb
popa
adc
jno
int3
cmp
cwtl
pop
cltd
fnstcw
xchg
nop
mov
dec
lea
int
push
dec
ret
adc
sub
nop
scas
pop
hlt
xchg
dec
fisubl
cmp
inc
cmp
mov
mov
addb
jnp
mov
lahf
xor
mov
clc
sbb
subl
or
bound
dec
sub
and
xchg
sbbl
bound
cmpsl
outsb
lahf
movsl
aas
or
mov
push
imul
push
insl
push
adc
in
dec
dec
cmpsl
cli
mov
cld
pop
push
adc
aas
push
mov
or
pop
jo
xchg
mov
out
outsl
push
aaa
cld
lret
and
cmp
mov
or
add
xchg
cmpsl
or
push
inc
and
imul
and
xchg
inc
in
xchg
mov
jl
push
test
lahf
xor
repnz
xorl
xchg
repnz
mov
dec
daa
sti
ljmp
mov
adc
ja
test
test
lret
add
in
push
gs
shll
xor
push
sbb
outsb
outsl
or
fbstp
sti
or
ret
xchg
mov
xchg
aam
cmp
mov
adc
xchg
scas
mov
mov
lds
movsb
cmpsl
icebp
mov
pop
sarl
cld
push
sub
cmp
cmc
pop
adc
fcom
mov
ljmp
add
lods
mov
aaa
mov
pop
fdiv
pop
aas
pop
aas
nop
inc
cmpl
lods
xchg
xor
mov
lret
mov
inc
inc
shl
pop
xor
or
add
add
xor
dec
insl
pop
shr
int3
enter
testl
pop
repz
sub
pop
inc
stos
and
and
cmp
cmpsl
scas
sbb
rorl
shll
inc
cmp
shll
jno
cltd
pop
pop
sub
cmp
push
ja
add
add
movsb
lods
lods
lock
lcall
gs
iret
pop
adc
loop
push
repnz
stc
mov
dec
gs
jno
loop
mov
mov
orl
test
pop
sbb
sti
mov
cmp
pop
xor
rcr
push
mov
mov
outsl
push
pop
call
jno
fwait
outsl
outsb
xchg
shr
push
add
loope
pop
lcall
mov
std
loopne
adc
test
or
rorb
push
repz
fimull
cwtl
pop
cmpsb
mov
fistl
push
push
sub
inc
inc
in
add
loopne
enter
xchg
cmpsb
inc
ljmp
ret
into
sahf
add
std
xor
push
outsl
incb
aas
xchg
jl
cmp
in
cmpsb
fstpt
push
sub
rcll
loope
jg
out
xchg
mov
jno
dec
ljmp
outsl
jo
divl
notl
xchg
or
mov
push
cld
cmp
dec
xor
aad
mov
shrb
fdivl
gs
inc
filds
enter
outsb
lds
fcmovbe
mov
push
stos
enter
subl
or
adc
mov
jo
lahf
ss
mov
rolb
stc
or
mov
cmpsb
aaa
sbb
and
scas
mov
test
sbb
add
xchg
aas
mov
adc
aas
and
mov
mov
stc
in
arpl
cld
xchg
pop
movsb
lret
mov
mov
cs
mul
outsl
das
mov
arpl
push
jne
dec
cmpsb
jne
lods
cmp
sub
cmp
stos
fisubrs
mov
fs
into
inc
xchg
cld
les
push
cmp
out
out
mov
mov
jne
lods
push
ret
outsb
inc
jb
cwtl
sbb
int3
loopne
imul
jg
inc
cmp
ljmp
cmpsb
shr
mov
pop
jno
sbb
ret
push
imul
aaa
mov
mov
mov
insl
cmp
addr16
mov
pop
ja
jnp
mov
fldenv
xchg
pop
lods
in
imul
and
jle
mov
sbb
pop
fnstsw
mov
and
pop
mov
push
popf
fcompl
xchg
mull
push
sub
int
ret
cmp
jo,pn
popf
or
fcmovb
fs
jg
outsb
scas
lods
or
aam
out
or
jle
shl
mov
sub
mov
fdivs
inc
adc
enter
mov
loope
fdiv
shrl
or
sub
mov
push
stos
jo
xchg
cmp
xchg
orl
mov
loop
mov
xor
mov
int3
xor
das
inc
in
mov
or
push
push
js
loop
out
pusha
cmpsb
inc
fnsave
adc
or
sarb
jns
xor
ljmp
daa
dec
aaa
hlt
cmp
adc
out
in
int3
out
fwait
dec
push
subl
iret
movsb
mov
subb
sub
lods
aas
subb
clc
push
sbb
cbtw
out
aaa
out
mov
jmp
dec
sti
dec
push
scas
aaa
pop
aaa
movsb
jo
xchg
leave
jge
divb
fxch
in
outsb
fsubr
int
sub
lea
cmc
pusha
xor
aaa
test
jnp
enter
stc
shll
mov
dec
xchg
push
jb
lods
leave
in
clc
sub
aaa
lcall
mov
popf
dec
push
mov
iret
frstor
repz
out
fcomps
fildl
pop
push
call
inc
cltd
pop
push
jo
mov
sbb
es
adcl
into
cmp
adc
mov
xor
push
mov
mov
jp
dec
dec
rcrl
cmp
xchg
out
or
sbb
mov
xor
rclb
or
out
xor
ret
movsl
xchg
or
mov
xchg
dec
pop
push
imul
imul
bound
dec
mov
jo
arpl
cmp
push
cmp
sub
js
mov
outsb
pop
stos
sbb
loop
mov
xor
sub
arpl
outsl
lret
leave
add
lods
fidivs
std
push
pop
or
jg
dec
add
mov
sbb
roll
fisubl
inc
dec
adc
and
rcr
lods
scas
adc
xchg
inc
push
push
sti
dec
scas
je
movsb
cli
rcr
pop
and
push
xlat
mov
cwtl
inc
jae
les
mov
push
out
cmp
repnz
aaa
xorb
dec
test
test
adc
cmpsb
shr
outsb
pushl
leave
xlat
sub
mov
pop
in
or
ror
js
test
and
push
arpl
stos
ficomps
shll
mov
pop
add
dec
cmp
cmpsl
pusha
mov
inc
xor
in
sub
sub
pushf
inc
xor
sub
pop
test
test
arpl
push
inc
lea
jge
xor
ror
cs
push
inc
mov
or
push
push
push
mov
add
scas
or
xchg
aad
sub
mov
in
xchg
and
inc
data16
fldenv
mov
arpl
mov
loope
mov
sahf
mov
sbb
push
sbb
push
pop
repnz
push
xchg
dec
mov
test
dec
and
push
pop
or
test
and
fcompl
mov
loope
and
xchg
gs
jb
and
cmp
inc
sbb
clc
cmp
fbstp
jg
lea
jge
cs
mov
mov
lds
ss
dec
push
jecxz
fs
xchg
push
cwtl
mov
xlat
mov
sbb
jno
int
sub
adc
movsb
pop
mov
lods
pop
notb
or
add
arpl
ret
xor
repnz
ja
push
pop
icebp
lds
dec
mov
out
inc
sbb
fwait
inc
outsl
sahf
add
roll
stc
jl
hlt
das
jb
xor
pushf
test
add
stos
xor
mov
int
in
jb
ja
xor
lods
rcll
adc
pop
mov
inc
imul
outsl
cmp
popa
repz
or
fdivrs
fisttpll
and
pop
test
call
xchg
fiadds
push
pop
and
pop
test
mov
mov
push
out
or
aad
pop
movsl
xor
add
mov
icebp
daa
popa
das
pushf
jno
out
lcall
loopne
hlt
outsb
mov
in
jecxz
pop
xor
addr16
fnop
sbb
cmpsb
and
fs
mov
notl
pop
cmpsb
pop
push
push
xor
and
ds
cmp
pop
outsl
andl
mov
add
sub
adc
push
outsl
adc
dec
sbb
scas
sbb
test
mov
mov
shrb
or
xor
pusha
je
dec
add
add
mov
pop
mov
cmp
or
pop
fsubs
jae
pop
xchg
push
inc
jno
add
sbb
scas
gs
push
mov
dec
mov
jmp
mov
mov
add
jbe
adc
mov
bound
cmp
mov
xor
inc
imul
outsl
mov
ljmp
mov
push
xor
test
cmp
pop
cmp
popf
xchg
orb
inc
imul
or
call
negb
inc
fisttpl
cmpsl
icebp
loop
jle
sar
btr
cli
xchg
das
and
and
test
mov
js
repz
mov
xor
xchg
fnsave
shrb
rcl
daa
in
add
mov
fdivrl
xor
jmp
lods
out
adc
testl
mov
jg
xchg
and
fdivrl
mov
aaa
imul
mov
pushf
inc
aam
dec
scas
loopne
in
dec
mov
lods
cli
fiadds
and
cs
out
ret
test
xor
pusha
leave
sub
xor
fistpll
mov
pusha
std
fsts
mov
scas
js
jb
xor
mov
push
ret
pop
sti
mov
inc
popf
aaa
sub
rol
cli
pop
xor
ficomps
push
test
aas
or
xchg
jo
les
mov
jne
fwait
lret
sub
dec
add
sub
mov
cmp
inc
push
jo
jmp
out
lahf
js
out
rorl
lret
push
fstl
cmp
add
dec
jge,pn
dec
insl
pop
lods
cmp
inc
pop
sbb
in
mov
aad
test
int3
jae
mov
inc
pop
cmpsb
dec
inc
or
leave
cmp
and
xorl
xchg
loop
or
push
sbb
adc
sahf
adc
cmp
ret
lahf
shll
clc
inc
push
in
cmp
jmp
fiadds
mov
mov
xchg
in
iret
dec
mov
push
add
jbe
popa
cmp
mov
cli
arpl
rcl
push
sbb
dec
rclb
iret
loope
or
das
or
jbe
dec
iret
mov
push
std
popa
addb
lea
cmc
test
mov
add
mov
mov
pop
fcompl
push
add
ja
lret
inc
jl
pop
popf
push
sbb
call
dec
rol
aad
orb
sbb
subb
jecxz
xchg
xchg
mov
cmpsl
cmp
stos
repnz
test
in
xor
mov
adc
loop
xchg
sub
fwait
add
fwait
sub
sbb
out
cwtl
cmp
sub
add
cli
jle
inc
aaa
jne
inc
xchg
cmp
fcomp
sbb
push
xchg
ja
pop
orl
adc
mov
inc
std
lods
mov
inc
stc
sub
push
imul
mov
ret
loop
push
js
push
lock
add
inc
mov
adc
pop
adcl
jb
testl
mov
loop
mov
lret
fld
ja
sub
mov
cltd
adc
and
sbb
lea
aaa
rorl
adc
sub
or
or
jle
fnsave
pop
dec
and
out
and
loopne
xchg
mov
mov
adc
fwait
xchg
pop
jmp
es
fstpt
push
or
dec
xor
add
dec
outsb
cld
sbb
aam
pop
js
mov
inc
das
pop
or
push
bound
push
xor
aad
movsl
aas
xchg
into
nop
add
aad
xchg
cmpsb
push
fcmovu
ja
cld
in
add
lcall
xchg
jle
xchg
and
fsubl
pop
xor
hlt
inc
mov
sahf
jl
add
mov
push
jns
adc
dec
sti
dec
add
xchg
pop
and
outsb
rolb
pop
imul
pop
data16
xor
jno
jg
mov
jmp
pop
ret
ja
push
ror
push
lcall
add
jbe
stos
and
adc
dec
cmp
adc
jle
cltd
mov
dec
jno
and
or
in
repz
sbb
dec
dec
pop
gs
in
sub
or
sub
arpl
mov
inc
xor
dec
stos
ficoml
mov
push
jne
gs
mov
inc
adc
or
jnp
mov
mov
mov
xchg
scas
xor
sbb
xlat
cmpsb
aaa
fdivs
cmpb
push
jne
add
fldl
loopne
xchg
push
xchg
xchg
in
xlat
enter
dec
lahf
loope
iret
repnz
rclb
ja
mov
fwait
aas
idivl
xchg
push
gs
test
jbe
cs
lock
mov
mov
adc
jb
mov
mov
lods
push
loopne
lds
cwtl
sti
inc
dec
jb
xchg
pop
inc
pushf
mov
jns
lret
out
adc
in
mov
and
add
fsubrp
mov
or
mov
out
cwtl
dec
mov
arpl
imul
loope
pop
bound
mov
popa
sbb
mov
je
adcl
repnz
pop
push
mov
das
negb
jns
jo
dec
daa
jne
mov
leave
les
mov
gs
aam
cmpsl
sbb
dec
es
add
sub
lcall
inc
hlt
ret
dec
mov
ljmp
mov
jmp
mov
inc
loop
cwtl
lcall
data16
add
push
das
pop
or
sbb
ss
cmp
repnz
rorb
adc
icebp
sub
sbb
in
xchg
add
or
jns
jecxz
add
lea
push
xor
push
push
inc
imull
mov
inc
and
test
scas
jbe
xlat
bswap
fwait
inc
jne
push
adc
cmpsl
adc
xchg
ret
ror
sub
sbb
or
pop
fistpll
mov
xlat
inc
pop
push
cli
jl
enter
arpl
mov
mov
stos
int
push
popa
xor
push
mov
mov
inc
shll
dec
jno
mov
sub
push
sub
xchg
mov
cmpsb
dec
pop
int3
fidivrl
test
ficoml
sbb
pop
push
cmp
mov
jbe
add
sarb
push
lea
rcrl
jne
jnp
push
pop
mov
or
sbb
inc
mov
pop
movsb
jae,pn
and
push
das
push
and
lods
fwait
into
lock
sar
out
imul
shll
sub
xchg
std
mov
ljmp
dec
cld
out
sub
outsb
and
push
and
stc
pop
pop
or
mov
std
push
jo
push
push
inc
ljmp
movsl
dec
cmp
jge
xchg
xor
mov
mov
adc
push
jmp
outsb
pusha
call
xor
stc
ljmp
lock
in
mov
push
or
cld
add
xchg
ret
xchg
outsb
adc
dec
mov
sub
jmp
mov
nop
insl
dec
test
neg
icebp
nop
dec
adc
iret
mov
cltd
cmp
xchg
inc
mov
jle
enter
mov
sub
jmp
repnz
jo
pop
out
mov
aam
push
fcomip
mov
adc
fsubs
jl
xchg
fstl
outsb
fwait
shll
test
out
jg
sbb
rolb
bound
fwait
stc
scas
repz
sbb
cmp
out
inc
mov
stos
insb
jb
xchg
sti
bound
loop
lcall
sub
into
xchg
mov
sbb
mov
call
pop
cwtl
mov
jge
mov
jbe
out
push
in
dec
cmc
xor
xor
movsl
cmp
aas
or
ret
jns
in
loope
movsl
inc
nop
mov
pop
orb
aad
test
imul
mov
xor
pop
xlat
ss
es
mov
mov
das
outsl
push
popa
call
movsb
popf
sub
sbb
loope
inc
sbbb
ja
cltd
mov
sub
divps
add
jle
lea
stc
add
xchg
sbb
pop
push
cs
idivl
adc
inc
cmp
pop
or
aad
cmpl
pop
pop
les
fimuls
adc
aad
mov
es
loopne
jge
jle
loope
fnstenv
pop
movsl
xchg
pushf
std
mov
out
push
stos
jns
jp
lea
cwtl
jg
leave
mov
inc
in
xchg
cmpsl
out
xchg
xchg
pop
sub
pushl
aas
mov
sub
xlat
in
test
xchg
insb
lahf
arpl
aad
insl
push
sbb
scas
aam
pop
outsl
dec
cmp
ds
xchg
not
loopne
sub
xor
mov
cwtl
mov
xchg
cmp
jbe
xor
in
mov
loope
ficompl
jb
push
and
outsb
pop
les
sbbl
mov
push
fnstcw
iret
mov
push
or
jno
lret
movsb
jo
mov
fwait
popf
arpl
roll
mov
imul
push
sbb
cltd
ljmp
inc
xor
in
mov
mov
shl
dec
icebp
data16
push
rolb
pushf
mov
jnp
hlt
mov
mov
sub
imul
push
arpl
outsl
mov
sub
fsts
ret
pop
aaa
xor
cmc
aas
inc
loopne
xchg
lea
cmp
sbb
adc
rorl
pop
das
dec
xchg
sbb
push
cmp
out
imul
fcmovnu
cltd
outsl
xor
push
out
clc
xor
pushf
incl
xchg
jo
dec
popf
push
inc
imul
out
xor
dec
jg
sub
idivb
mov
lcall
add
scas
sub
adc
mov
sahf
xchg
adc
and
cmp
out
ljmp
fwait
inc
cmpb
sub
cld
daa
in
aad
adc
daa
cvtpi2ps
xor
mov
mov
dec
data16
and
shlb
imull
fdivrl
cltd
push
push
inc
jge
mov
lds
dec
call
adc
repnz
pushf
mov
dec
daa
cmp
pop
lds
repnz
push
add
mov
pop
mov
imul
lods
mov
push
mov
or
mov
stos
push
jae
cmpl
mov
nop
jp
or
xchg
cmp
inc
push
cltd
in
repz
lahf
call
jge
loop
jns
jmp
mov
mov
dec
sub
testb
sti
push
pop
fwait
daa
push
jb
sub
or
xchg
and
push
and
cmp
testb
and
jmp
insb
xchg
add
aas
sub
decb
nop
ljmp
iret
jmp
ret
or
adc
sahf
xchg
aad
add
fistpll
pop
lcall
ja
xchg
xchg
pop
cli
inc
test
add
jmp
enter
rcrb
push
sahf
cmp
test
inc
ficoml
mov
lcall
pop
adc
pusha
iret
movsl
cmc
fstpl
fwait
mov
fsubs
push
pop
lcall
sbb
mull
add
mov
test
ret
aad
sbb
sahf
mov
mov
xor
test
je
add
inc
mov
pop
push
mov
mov
iret
sub
inc
call
mov
nop
je
js
and
adc
enter
imul
movsb
mov
in
xor
stos
fstp
repnz
or
cmp
push
clc
aas
inc
jae
rcr
test
in
cmc
cmp
mov
cwtl
mov
push
test
sahf
movsb
adc
mov
cmp
push
lock
hlt
cld
cwtl
repnz
aas
mov
or
in
jno
dec
jne
lods
mov
aad
pop
xchg
and
mov
push
nop
mov
inc
and
mov
push
xchg
mov
push
mov
rcll
mov
sar
or
sbb
mov
std
movsb
notl
xchg
fadd
mov
mov
std
fidivrs
dec
jb
and
or
mov
scas
or
mov
scas
js
leave
js
mov
mov
dec
mov
jp
jns
sbb
xor
mov
pushf
mov
mov
das
and
mov
pushf
lret
cmp
lret
in
sarl
jo
cmp
and
in
or
pop
dec
sub
mov
rol
in
sbb
pop
mov
data16
daa
pop
cmp
inc
repz
je
cwtl
sahf
mov
fldcw
test
and
and
cwtl
dec
lcall
adc
mov
in
inc
push
mov
pop
jo
dec
ret
sahf
cmp
cs
adc
and
push
adc
sub
addr16
or
push
lds
outsb
les
lret
movl
xchg
mov
inc
mov
lock
jb
adc
mov
inc
stc
into
adc
add
cwtl
pop
dec
out
in
inc
lods
sub
mov
push
cmp
je
adc
and
mov
in
int
fcompl
mov
mov
jg
push
xor
mov
add
stos
xchg
into
out
fwait
xchg
bound
jge
xchg
fcoml
inc
imul
ret
popl
icebp
fucomi
loopne
pop
add
test
dec
mov
mov
jmp
add
test
mov
imul
pop
jmp
int
inc
cmc
push
aam
inc
xor
or
enter
inc
xor
insb
add
sub
add
fbld
sahf
aas
xor
aad
into
adc
cmp
lods
inc
loopne
fiaddl
xchg
notl
stos
jnp
xor
test
dec
pop
xor
ret
mov
loope
mov
sub
icebp
mov
jle
pushf
sbb
test
jae
outsl
mov
cmp
dec
xor
push
jnp
arpl
mov
and
sti
scas
pop
mov
fadds
lock
es
sbb
cwtl
adc
xlat
loopne
push
xchg
fwait
xor
xchg
jb
mov
insl
mov
mov
adc
jg
jge
push
push
cmp
test
jp
stc
mov
cwtl
push
xor
or
scas
iret
dec
xor
pop
loopne
add
icebp
daa
gs
adc
iret
enter
pop
imul
fcmovnbe
jp
rorb
icebp
push
addps
push
pop
or
sti
jle
add
pop
sahf
sbb
std
stc
lea
cmp
pop
xor
lahf
mov
out
test
and
gs
xchg
dec
les
fs
movsl
dec
and
mov
std
fmuls
lods
pop
pop
ret
bound
stos
sub
add
leave
lea
hlt
fwait
aad
push
jp
push
in
loop
fs
push
mov
xor
sti
sub
push
push
lock
sub
inc
je
popf
pop
sbb
pushw
push
outsl
dec
outsl
aas
sub
outsb
test
arpl
or
pusha
ret
push
or
cmp
sahf
fdivl
inc
out
jb
cmc
jo
rcrl
insb
mov
insb
lret
add
add
pop
pop
mov
push
ds
lahf
bound
pop
or
outsb
loopne
adc
idivb
sbb
lea
lcall
push
in
cltd
mov
or
and
stos
nop
push
adc
mov
xor
fisubl
mov
inc
gs
stos
inc
ljmp
adc
xchg
sub
and
dec
int3
int
sub
xor
hlt
jecxz
and
sbb
pop
pop
ljmp
imulb
inc
ret
xor
pop
stos
popa
push
popf
clc
rcrb
push
mov
fmuls
fistl
shlb
gs
filds
cmc
fldcw
mov
fdivrl
jp
movsb
gs
es
scas
jge
sub
inc
shlb
das
pop
rolb
aas
into
xchg
mov
xchg
xor
pop
shr
mov
outsb
data16
xchg
fwait
sub
adc
adc
push
movsb
push
mov
insb
loopne
or
bswap
push
test
comiss
leave
jmp
pop
loopne
add
push
dec
mov
sbb
cmc
mov
cmp
in
push
cwtl
add
cld
call
xor
adc
and
arpl
pop
cmp
add
stos
cmp
mov
xchg
push
adc
xor
and
mov
ret
adc
loopne
jl
xchg
jb
test
fwait
jne
in
pop
fdivs
sub
jmp
gs
sbb
sahf
outsl
mov
pop
adc
test
ljmp
fistps
testb
cltd
loope
inc
and
mov
ret
push
shll
jecxz
in
cmp
shlb
add
aad
inc
repnz
xchg
cmp
shl
popl
inc
test
outsl
push
pop
cld
daa
mov
repnz
inc
jbe
cmpsl
xchg
addl
imul
and
dec
mov
xor
mov
push
sub
lcall
gs
dec
inc
rclb
jns
add
mov
inc
xchg
xor
push
mov
dec
int
mov
and
sbb
in
in
mov
std
cmp
mov
vandnps
stc
dec
mov
psadbw
out
push
inc
mov
lret
int3
fistl
stos
pop
jae
test
sbb
subb
test
lock
movsl
jmp
jg
repz
cmp
mov
repnz
mov
test
xchg
xor
dec
pop
loop
out
cmpsl
iret
mov
das
cld
lcall
push
pushf
sti
jb
mov
addr16
loop
fsubrp
inc
sub
fsubrs
ret
mov
xchg
dec
popa
dec
add
push
hlt
inc
cmp
jno
out
and
mov
pusha
dec
fs
cmc
fnstenv
cmp
in
adc
jne
sbb
in
dec
out
push
loopne
mov
aad
mov
dec
pop
or
jae
cltd
shlb
mov
xchg
mov
jae
add
and
inc
cmp
in
mov
out
sub
jle
fnsave
push
push
fidivs
aad
fcoml
mov
mov
fisubl
test
add
das
and
ljmp
push
cmp
into
fldt
sub
shlb
int3
push
movl
sbb
pop
jb
out
push
fwait
mov
popa
mov
mov
loopne
jbe
inc
push
sbb
jle
aam
jle
in
add
cmp
add
fwait
call
sub
jae
out
push
push
sarl
mov
repnz
in
inc
lds
rcrl
cld
lock
mull
jb
xor
cmp
cwtl
fisubs
push
jb
sbb
pop
lock
out
jns
xor
push
mul
sub
outsb
mov
loop
imul
cmp
pop
push
sub
sbb
mov
fidivs
xor
jne
xor
sub
inc
cli
pop
mov
test
test
insb
push
add
cld
jns
and
xor
cli
mov
xchg
dec
cmp
inc
and
sub
in
in
lock
test
mov
cmp
outsl
daa
push
or
xor
adc
add
or
cmp
call
cmpsb
lcall
daa
jle
sbbb
mov
popf
orl
xor
insb
inc
dec
adc
enter
xor
repnz
aas
mov
shlb
pusha
mov
stos
pushf
pusha
dec
xchg
xchg
add
sub
fs
jb
inc
xchg
daa
in
insl
mov
in
fldl
test
fbstp
xor
iret
or
jmp
xor
cmp
push
icebp
insl
rclb
addr16
out
pop
imul
sub
fstpt
sub
mov
and
xor
adcb
jns
and
stc
repz
addr16
sub
inc
cs
inc
fcmove
mov
and
pusha
mov
decb
fistl
adc
xor
lret
inc
sbb
xor
adc
push
popa
fidivrs
pop
mov
or
fs
and
sbb
testb
es
cmpsb
mov
and
push
test
int3
aam
jb
jbe
add
aaa
enter
aaa
sbb
xor
pop
push
cli
xchg
mov
sbb
dec
mov
mov
pop
push
jns
mov
enter
mov
call
push
push
pop
out
test
inc
jne
mov
add
int
mov
cmp
push
aad
sub
sbb
pop
es
loop
pop
faddp
xorb
pop
sub
andl
sbb
dec
dec
cmp
add
cmpl
out
xchg
mov
fstpt
cmpsb
xchg
adc
stos
dec
iret
in
push
adc
lahf
orb
cmpl
xor
loopne
cmp
add
mov
lds
ret
outsb
xor
insl
js
imul
jl
jp
adc
or
cmc
jge
jmp
and
xchg
xchg
xor
mov
out
add
inc
xchg
pop
push
int3
sub
and
lahf
mov
imul
out
call
sbb
sub
push
lds
push
dec
push
xchg
pusha
cmpl
sbb
pop
icebp
and
or
inc
sub
imul
fsubrp
stc
out
mov
andb
jae
inc
insl
push
icebp
cmp
add
test
arpl
decl
std
out
push
xchg
mov
das
hlt
adcb
cmc
mov
add
push
xchg
inc
and
les
jmp
lds
into
mov
mov
pop
sub
lcall
mov
sbb
imul
xchg
cwtl
adc
dec
out
cmpsb
hlt
cs
pop
adcl
jg
bound
push
fildl
enter
cmpsl
xchg
and
and
ficoms
imul
jmp
lahf
nop
mov
insb
stc
inc
mov
mov
jb
jecxz
ret
fucomi
imul
sub
jp
mov
es
rcr
xchg
xor
ret
add
dec
push
cmp
movsl
xor
jg
inc
or
enter
add
ja
leave
mov
jp
push
imul
jb
ret
push
dec
popf
pop
sbb
repz
sbb
cmp
sub
aas
or
subb
or
psubq
xchg
adc
mov
pop
xchg
mov
mov
jl
es
mov
mov
sbb
xchg
repz
push
mov
inc
jne
call
or
cmp
lahf
lahf
sti
int
out
push
test
mov
push
scas
sub
cmc
daa
sbb
popa
pop
xlat
add
xchg
lods
inc
dec
negl
sarb
pop
lock
xchg
insb
hlt
fstps
jp
mov
or
outsb
dec
daa
fstps
std
or
mov
adc
sahf
jmp
xor
mov
sub
xchg
and
and
push
decl
shrl
aaa
enter
movsb
das
push
mov
jbe
loope
insb
and
lea
cmpsl
mov
pusha
cmpsb
aaa
popf
add
out
push
mov
xchg
mov
stos
push
add
xchg
jbe
dec
xchg
mov
cld
fldt
cmp
loope
jbe
add
or
cmpsl
mov
mov
lret
pop
xchg
xor
mov
cmp
add
sbb
xor
push
fdivrl
pop
add
jge
movsb
movsb
cli
push
add
loop
xchg
lahf
scas
adc
sbb
push
and
xchg
sbb
jecxz
fisubs
addr16
mov
xor
mov
cli
bound
aas
add
add
or
shll
inc
movsl
push
je
test
ret
shll
sbb
iret
adc
mov
out
pop
movsb
int
cmp
cmc
pop
jbe
jecxz
adc
popfw
addl
push
jne
data16
dec
adcb
xchg
dec
push
insb
adc
pop
xor
leave
sbb
lret
sub
loopne
mov
fstps
jo
outsb
jnp
push
mov
and
push
pop
sub
sbb
rclb
sbb
test
pop
scas
jo
mov
mov
pop
or
sub
add
roll
loopne
test
std
sbb
xchg
and
mov
ja
pusha
loop
jmp
xchg
in
sbb
shl
sbb
mov
mov
mov
mov
pusha
sub
test
ja
push
jb
ret
cmpb
inc
int
enter
dec
pop
imul
lcall
fimuls
or
mov
call
adc
dec
adc
sub
push
stos
repnz
call
loope
rclb
xchg
or
sub
out
leave
shlb
call
cmp
xchg
xor
dec
popa
sub
movsb
out
cmpsl
mov
add
add
clc
mov
flds
mov
icebp
popa
and
lret
cmp
nop
aas
mov
rcll
jmp
aaa
mov
and
aaa
loopne
je
add
dec
xor
dec
mov
mov
negb
popl
xchg
mov
mov
insb
flds
jge
mov
es
sbb
xor
iret
pop
aad
lret
les
or
aad
cmpsb
xchg
es
add
stc
lea
scas
ret
std
into
add
sub
ss
jp
dec
add
clc
cmc
push
sti
fldl
adc
xorb
mov
out
push
scas
jae
jns
ficoms
dec
dec
dec
imul
arpl
sub
mov
lahf
shll
in
dec
sahf
pop
mov
loop
mov
rcrb
cltd
aaa
fs
cmp
shrb
mov
mov
add
hlt
push
mov
insb
mov
adc
adc
jne
jmp
xor
xor
xlat
jae
cmc
test
test
xor
jle
xchg
add
push
jp
xchg
inc
mov
lods
cli
in
insb
shll
ljmp
inc
int3
cmp
in
cmp
jp
cmp
ss
movsb
xor
cmp
push
xchg
add
mov
sbb
scas
mov
adc
shll
inc
jmp
je
gs
aas
jbe
sub
notl
in
cmpsb
pop
sbb
or
mov
je
or
adc
jecxz
in
mov
aam
mov
push
or
in
sbb
mov
and
dec
fimull
repnz
test
cmp
dec
int
push
movsl
xchg
sbb
add
cmp
push
or
add
repz
add
getsec
sub
in
mov
pop
or
out
add
popa
mov
mov
incl
inc
push
pop
lds
cs
xor
jmp
sbb
push
xor
divb
jno
adc
lods
xor
mov
lret
dec
dec
imul
jg
push
sub
test
imulb
adc
sub
sub
adc
jmp
std
sbb
mov
adc
imul
pop
data16
xchg
ja
lods
es
lret
lock
dec
sbb
fs
out
out
and
fistl
lods
xchg
push
push
inc
addr16
dec
push
cmp
and
test
xor
and
mov
cmp
xchg
and
sbb
sahf
cmp
sti
pop
and
pop
stos
popf
mov
int
mov
push
push
mov
lret
push
stos
fiadds
xchg
in
adc
xchg
dec
lds
in
dec
sbb
repz
lcall
jno
sub
xchg
adc
jb
pop
inc
xchg
out
into
or
insb
int3
cmp
xchg
cmpsl
dec
int3
jecxz
aaa
jg
inc
cmp
push
inc
incb
mov
and
cwtl
mov
in
dec
inc
repnz
rcr
subl
loop
scas
iret
cld
add
inc
mov
xchg
adc
and
ljmp
aas
lea
jecxz
gs
ficoml
push
call
call
pushf
ss
add
and
pop
pop
fisubrs
mov
ret
loope
cmc
mov
jl
sti
push
xchg
mov
iret
mov
fimull
xorl
mov
sub
and
packsswb
cmc
sub
jo
sub
pop
ret
outsb
and
adc
xor
cwtl
aad
fiadds
hlt
sbb
ds
clc
pop
mov
xchg
ljmp
cld
jle
xlat
movl
aam
fnstenv
xor
inc
outsb
das
sbb
aas
shll
in
fsubrs
inc
outsb
inc
xchg
les
xor
cmp
push
into
xchg
ret
es
clc
pushl
imul
pop
shlb
push
mov
and
je
jae
mov
jbe
dec
dec
mov
sub
in
lcall
sub
aam
mov
mov
gs
sbb
cld
sub
cltd
xchg
adc
add
test
pop
mov
sub
into
or
dec
testl
str
js
fldcw
mov
cwtl
lcall
mov
ljmp
cmp
inc
jb
sbb
xor
jle
pop
movsb
lea
inc
rcl
jg
ja
imul
jbe
or
and
fisubrl
lcall
es
testb
adc
sub
mov
sti
repz
cmp
icebp
rol
push
cmpsb
adc
push
repnz
xlat
cmp
rcrl
mov
xchg
jle
outsl
fxch
xchg
sbb
aam
adc
jl
in
js
subb
xchg
sbbb
jno
dec
dec
add
cmp
sub
fnsave
ficoms
push
in
inc
mov
jo
andb
mov
push
daa
sbb
cli
mov
push
cmp
aas
loopne
cmp
iret
sub
mov
bound
test
xlat
int3
sbb
jnp
fucom
pcmpeqw
stos
pusha
jg
or
ja
add
leave
jmp
sub
xor
stos
fwait
mov
lahf
sets
add
popf
roll
jecxz
inc
inc
iret
sti
push
repz
adc
push
sbb
data16
cmp
pop
and
into
scas
mov
mov
mov
out
mov
std
inc
lret
lahf
inc
aad
dec
mov
sub
inc
scas
add
adcl
sarb
nop
idivl
int
outsb
shll
push
mov
aad
aad
add
adc
jbe
xor
outsb
ja
mov
mov
aas
jns
jge
add
addr16
or
mov
mov
data16
popa
aas
pop
dec
cmpsb
lahf
cmp
adc
or
test
add
sbb
hlt
adc
xor
pop
and
inc
loope
insl
mov
lods
mov
and
pop
fsts
or
mov
mov
ljmp
stos
call
and
mov
out
mov
inc
push
xchg
lret
dec
mov
fsub
arpl
xchg
daa
movsl
inc
sahf
lds
imul
loope
jl
out
dec
jg
mov
push
jle
add
add
and
dec
mov
leave
mov
mov
fbstp
ja
push
test
mov
xchg
inc
and
out
mov
mov
jbe
movsl
sub
lods
xor
push
jg
mov
xor
dec
push
loop
cmpsb
arpl
xor
mov
dec
dec
pop
je
mov
popa
stos
and
sbb
stos
pop
inc
loop
in
mov
sub
aad
iret
or
mov
jge
enter
cmp
aad
mov
xor
mov
push
add
pop
icebp
cmp
pop
stc
adc
stc
xor
mov
scas
adc
rorl
sbb
lods
orb
jge
stc
xchg
mov
js
dec
push
mov
cmp
ds
inc
jno
lret
lds
leave
test
fnstcw
jg
sbb
scas
addr16
xor
adc
xchg
addr16
in
addr16
cld
jle
in
loope
jl
pop
lock
xor
cwtl
data16
stos
insl
sub
out
cs
push
mov
push
in
sbb
adc
out
stos
fcompl
jp
outsl
pop
or
test
arpl
std
lds
xchg
push
int3
mov
add
xchg
xor
sahf
jp
xchg
jnp
and
imul
adc
mov
and
outsb
xlat
push
mov
mov
cmp
lock
or
xchg
pushf
fnsave
cmp
mov
push
daa
aam
jo
inc
dec
sub
fwait
in
stos
lods
in
xor
or
div
repz
adc
rorb
repz
cli
pop
xchg
enter
pop
mov
add
xlat
scas
jnp
imul
test
lret
pop
int
mov
iret
out
mov
xchg
loop
xor
clc
imul
push
jb
jl
jmp
cmp
pop
hlt
lea
test
shrb
push
xchg
jp
dec
jmp
movsl
clc
or
add
mov
loope
dec
and
mov
mov
lret
shr
sbb
jne
xor
popa
stc
test
dec
movsb
mov
jp
jns
xor
cmp
scas
inc
xchg
fsubl
les
add
stc
int3
in
push
and
jno
jmp
jmp
jnp
sub
das
fisttpll
test
lea
outsb
cld
nop
in
pop
jo
sarb
loopne
leave
test
xchg
out
shrl
mov
movsb
aad
dec
and
cmpsb
sti
xchg
xchg
stos
js
int
mov
rcrb
call
or
fwait
arpl
dec
adc
push
xor
clc
ficomps
mov
jmp
fsubs
test
shl
inc
sarb
lret
leave
es
push
mov
and
mov
jo
cmpsl
and
mov
cmp
das
xor
push
jl
mov
inc
mov
fisttps
aam
mov
and
mov
mov
rcl
lods
inc
adc
pop
and
inc
pop
rclb
sub
mov
out
fbld
idivl
sahf
out
aas
lret
mov
push
shll
inc
xchg
call
sub
jp
add
out
mov
in
and
add
pop
cmpsl
inc
add
je
call
rcrl
cs
mov
int3
shlb
imul
fiadds
and
out
mov
dec
scas
cmpsb
mov
cmp
repz
jnp
push
pop
inc
leave
adc
xor
js
inc
outsl
pop
xor
mov
repnz
popf
mov
cmpsl
mov
in
cmp
mov
ss
insl
jne
inc
adc
scas
movsl
js
adc
cmp
pop
pop
jne
into
sahf
outsb
mov
mov
or
xchg
or
in
xor
movsb
push
pusha
mov
cs
mov
pop
pop
roll
ljmp
cltd
inc
fwait
ret
inc
mov
mov
xchg
lahf
repz
xchg
push
mov
stos
je
es
cmp
xchg
mov
and
adc
xchg
test
test
test
daa
mov
enter
pop
mov
popf
call
into
cmpsl
xor
stos
mov
jge
nop
pop
outsb
incb
add
inc
or
xchg
cmpsl
cmp
gs
sahf
aas
icebp
inc
adc
sub
mov
fcmovnbe
mov
dec
aam
and
bound
fdivrs
dec
mov
cld
frstor
dec
xchg
add
pop
out
jb
inc
mov
fucompp
jg
loope
pop
xorb
rolb
add
ret
xor
or
inc
insb
hlt
and
leave
stc
aam
push
imul
xor
xchg
push
insl
pop
addb
arpl
into
aad
jno
rcr
insb
shlb
sarb
hlt
mov
mov
jl
shlb
xchg
add
test
cmp
sbb
lret
pop
push
mov
enter
addr16
push
fldl
cmp
or
mov
imul
xor
imulb
jge
rcrb
pop
bound
aad
das
dec
dec
enter
push
mov
ljmp
xor
leave
jmp
inc
sub
je
push
stos
cli
fisttpll
rsm
es
scas
cli
pop
xchg
cmp
cmovg
addl
lods
pop
jmp
fs
hlt
popa
and
lea
sbb
fmul
push
shll
iret
dec
and
popf
filds
jb
insl
add
jbe
out
loopne
jecxz
cmp
cmp
shll
lds
int
adc
cmp
sbb
mov
push
mov
outsl
mov
outsb
iret
xchg
mov
dec
cmp
pusha
pop
dec
fldt
int
fsubp
sbb
dec
lds
adc
lea
ss
sbb
pop
jle
xor
sbb
mov
mov
jns
repnz
aas
cmp
push
add
outsb
pop
or
ja
out
xchg
push
fcmovnb
push
ljmp
cmpsl
mov
cld
aad
aas
mov
repz
mov
and
addr16
inc
mov
lock
cmp
inc
mov
xlat
ja
mov
cmc
idivb
lods
dec
leave
js
push
out
stos
sub
push
inc
mov
and
and
icebp
je
outsb
xor
mov
ret
pop
jp
leave
in
ret
aam
mov
nop
lcall
jns
lods
mov
xlat
adc
lret
jecxz
jmp
add
out
sbb
test
cmpl
sahf
std
neg
dec
test
pop
scas
cmp
imul
xor
leave
out
and
mov
add
xlat
enter
insb
inc
mov
push
sahf
out
mov
pushf
dec
mov
inc
pusha
rclb
sbb
bound
jne
mov
in
jns
out
dec
into
or
xchg
xor
out
clc
rcr
movsl
sub
mul
xlat
and
stos
cmp
imul
xor
je
shlb
adc
lods
mov
ja
pop
dec
rorl
xor
loop
mov
adc
mov
in
push
jns
ss
fistpl
xor
lds
in
add
jb
popf
xchg
jecxz
subb
jle
out
aam
inc
je
push
dec
repnz
js
and
adc
test
dec
and
add
lretw
push
sub
xchg
mov
mov
xor
in
stc
mov
mov
repz
xor
add
jae
sbb
add
in
mov
jmp
repnz
or
sahf
negb
mov
or
push
clc
loop
pop
dec
inc
dec
aad
loop
into
xor
out
sbb
rcrl
incl
cmp
push
adc
mov
mov
hlt
out
mov
repnz
sub
inc
fwait
mov
xchg
mov
cld
adc
add
roll
cltd
push
jmp
sub
cwtl
ja
xchg
and
add
popf
imul
jge
jecxz
mov
aad
outsl
pop
or
aas
dec
lods
call
mov
jnp
pushf
jb
and
stos
imul
insb
das
imul
dec
clc
push
adc
in
and
sub
push
popf
mov
add
xchg
sbb
push
add
sbb
or
stos
sbb
fwait
adc
add
cltd
sub
pop
ss
outsb
cmp
inc
std
shrl
pop
vmovaps
orb
fwait
sub
mov
dec
add
das
cmp
jo
sbb
pop
stc
sub
lea
sbb
std
mov
ja
ja
gs
out
aam
aad
jns
int
push
fistl
rorl
mov
push
je
mov
int3
lds
push
fildl
xor
cwtl
stc
mov
stos
subb
sub
pop
cs
fnsave
mov
lea
stos
int3
sbb
cmp
push
add
mov
inc
or
shlb
dec
ja
popf
mov
jne
cmpb
cltd
add
xchg
dec
rolb
mov
or
sub
loope
xchg
and
adc
mov
shrl
gs
adc
lret
or
lds
sbb
xor
stos
outsl
xor
leave
lds
inc
sub
sar
pushf
lret
aam
jo
aaa
icebp
dec
mov
inc
lret
in
inc
lret
fldl
cs
ret
fists
jge
rcll
sbb
jnp
sbb
mov
and
cmpl
sbb
popa
in
mov
jmp
inc
loop
sarb
xorl
xor
mov
or
jo
cmp
and
aad
jo
xchg
in
jns
imul
adc
sbb
imul
call
push
sbb
sub
push
push
fwait
lahf
out
icebp
push
xchg
add
shlb
mov
test
sbb
or
call
iret
imul
daa
mov
push
fs
push
stos
repnz
xor
sbb
scas
cmp
adc
mov
sbb
leave
in
and
sbb
lret
test
test
ret
jae
cmp
add
push
xor
ds
test
sti
dec
mov
sub
in
fldenv
out
and
ljmp
ljmp
in
pop
cmp
or
sbb
adc
inc
sub
push
inc
jb
xchg
ret
int3
xchg
ljmp
mov
inc
clc
push
push
or
movsb
mov
lahf
and
outsl
shll
fstps
inc
add
xorl
loope
mov
inc
mov
ret
adcl
aaa
xlat
ret
mov
xor
mov
inc
pop
and
sbb
cmc
xchg
add
ljmp
mov
fdivl
dec
les
sub
jmp
scas
xchg
cli
in
inc
xor
mov
cltd
adc
addr16
mov
or
sahf
xor
dec
sbb
fldcw
lret
out
nop
mov
popa
dec
insl
mov
loop
dec
pop
mov
push
or
add
pop
mov
adc
icebp
imul
jle
dec
test
shlb
add
fldcw
adc
inc
adc
mov
adc
adc
fadd
or
push
mov
push
jbe
add
jmp
in
cmp
xor
insb
pop
mov
cmp
xorb
add
cmpsl
mov
stc
cmp
adc
out
cli
mov
sahf
fcmovb
sti
push
mov
sbb
repnz
fs
insb
adc
lcall
lock
loopne
sub
push
clc
jecxz
rorb
lock
repnz
ss
dec
inc
jno
ficoms
dec
sub
inc
xchg
addr16
xchg
test
dec
fldcw
out
sub
mov
push
test
inc
ds
inc
rolb
push
lods
pop
arpl
mov
rorl
mov
inc
sbb
je
cltd
or
sub
aam
in
cli
test
mov
movsl
jo
adc
gs
je
out
rorl
sub
fnstsw
repnz
jecxz
int
ret
jmp
add
cli
stos
stos
cmp
rol
push
out
jg
cmpsb
lds
fldl
repz
out
xchg
sub
stos
movzwl
out
into
leave
pop
shrb
jmp
mov
add
cwtl
iret
fdivs
pushf
adc
jno
jno
subb
pop
imul
pop
sbb
sub
leave
mov
scas
and
daa
and
int3
mov
in
ds
out
dec
cmp
lret
pop
sbb
jns
lods
mov
sub
mov
cmpb
adc
sbb
dec
cs
fs
fs
mov
std
imul
out
inc
jne
dec
movsl
pushf
hlt
nop
inc
in
mov
sbb
inc
xchg
cltd
out
mov
out
std
iret
xchg
or
xlat
mov
call
bound
fildl
jmp
sti
mov
or
hlt
call
test
adc
adc
xchg
std
cmp
sbb
pop
jmp
xchg
repnz
jmp
push
ret
xlat
int3
repz
repnz
aas
lods
mov
in
inc
les
sbb
lds
dec
fldt
xor
inc
mov
sbb
inc
mov
cltd
int
pop
mov
inc
insb
cmpsb
aas
cmc
in
je
or
stos
pop
pop
xor
mov
filds
push
daa
mov
std
mov
cmp
mov
in
in
push
scas
outsl
sub
push
and
loopne
mov
lds
test
mov
lret
sub
inc
aad
fs
cmp
fldenv
adc
xchg
pop
xor
pop
sub
push
out
jbe
lds
fisubl
and
pop
mov
dec
and
aaa
xorb
jecxz
imul
xor
loop
sub
cmp
pop
jnp
and
sbb
add
scas
out
xor
jl
test
mov
or
pop
xabort
adc
mov
cmp
fbstp
jns
jne
ja
imul
inc
xchg
xchg
daa
or
andb
xchg
mov
xchg
mov
push
test
popl
dec
and
lods
js
arpl
in
call
jp
jge
mov
inc
lret
repz
jo
mov
std
push
dec
mov
lret
sbbb
xchg
cltd
test
inc
leave
lret
aaa
out
pop
rolb
push
pop
cmpsl
shlb
mov
lods
inc
add
aam
aam
add
mov
int3
cmpsl
bnd
nop
adc
cmpsb
cld
enter
outsb
stos
jnp
jmp
jne
clc
idivl
mov
das
inc
mov
jbe
inc
movsb
dec
cs
inc
cmc
sub
cmpsb
scas
fisubrs
or
push
sarb
data16
fwait
bound
dec
and
lahf
outsl
lcall
shll
sahf
imul
cmp
inc
lret
lods
lgs
fisubl
lods
push
pop
lret
std
mov
jb
xchg
mov
addr16
cmpsl
lods
fidivrl
lret
jge
adc
sbb
outsl
ds
push
add
mov
jo
mov
jmp
lahf
std
jl
or
pop
xor
addb
inc
adc
sarb
cmp
popf
mov
clc
decb
cmpsl
adc
scas
fsub
add
in
push
packsswb
adc
xchg
add
dec
push
sub
stos
jle
adc
xchg
inc
iret
jp
jnp
subb
ret
test
cs
dec
test
fidivl
scas
pop
pushf
mov
shrl
and
ja
xor
jae
sbb
aas
or
push
into
or
push
sbb
int3
cli
fwait
out
shll
cmpsb
xorl
cmpsb
dec
pop
in
cmpsl
mov
aaa
jmp
cmp
mov
xor
pop
adc
ror
jns
jecxz
cltd
jo
xlat
inc
sbb
lea
ret
jge
mov
adc
mov
loopne
mov
mov
fimull
push
inc
add
inc
xor
xchg
aaa
cmpsl
out
adc
mov
test
jp
dec
cmp
jbe
fiaddl
stos
pop
arpl
adcl
sbb
aam
les
push
pop
mov
pop
mov
addr16
pop
xor
fwait
mov
inc
nop
jae
pop
test
ss
xor
cmp
inc
lea
xor
popa
fdivrp
jnp
push
sbb
add
cmc
adc
jnp
add
inc
mov
xor
loope
dec
packsswb
mov
cmp
push
or
dec
sahf
sub
dec
mov
in
std
outsl
les
mov
xchg
movsl
mov
mov
daa
cmp
jle
dec
iret
cmpsb
icebp
arpl
insl
jno
stos
add
dec
je
cwtl
pushf
push
rorb
pop
xor
pop
jnp
adc
push
jle
int3
scas
stc
jbe
and
je
out
pop
and
addr16
pop
push
filds
add
and
mov
or
stos
pop
imul
pop
test
and
addr16
xchg
cli
ds
lcall
js
addr16
mov
cmpsb
es
movsl
daa
iret
in
xor
lret
jnp
mov
aaa
mov
lods
jecxz
cmp
push
insl
pop
mov
aas
jg
mov
adc
pop
add
mov
xlat
cmpb
inc
dec
out
fcomps
fdivs
divb
ffree
fstpl
cmp
popf
and
cmp
and
jp
add
mov
or
mov
adc
dec
pop
outsl
repnz
pop
aam
sbbb
push
in
lret
js
std
or
popf
mov
inc
ss
sub
in
sub
sbb
dec
adc
mov
ret
cmp
mov
adc
repnz
lea
sub
ret
and
icebp
adc
jo
sub
jle
mov
je
inc
call
movsl
jne
test
stc
sub
sub
adc
test
pop
or
arpl
int
fcmovnbe
repz
bound
dec
or
and
xchg
cmc
mov
repnz
jns
xchg
jg
pop
mov
in
jns
mov
pop
cld
into
fsubrs
call
cmpl
pop
jmp
mov
jecxz
les
cmc
push
aad
iret
mov
ds
sti
cli
jo
les
push
je
jp
mov
loopne
les
jge
add
cmp
stc
cs
cwtl
cmp
and
cmp
popa
call
stc
rol
cltd
dec
and
loopne
push
flds
pop
sbb
mov
es
cwtl
pop
dec
or
push
mov
sbb
daa
mov
cmpsl
mov
mov
lcall
pop
imul
int3
lahf
test
test
nop
ja
push
icebp
sbb
cmp
xor
xchg
ss
sbbl
movsb
cmp
xor
imul
data16
mov
pop
sub
hlt
push
mov
jp
aad
cmc
adc
mov
into
ss
lret
sub
sbb
stos
adc
pop
or
dec
stc
enter
sbb
imulb
out
mov
test
iret
and
or
imul
shll
mov
ss
mov
js
or
jne
jno
and
xchg
hlt
sub
dec
movsl
int3
mov
stc
and
popa
je
out
enter
sub
xchg
stos
std
loop
dec
pop
mov
aas
mov
sbb
mov
mov
pop
mov
les
cmp
pushf
icebp
ss
cld
rorb
jo
pop
and
cld
pop
pushf
aam
das
mov
bswap
imul
dec
stos
roll
inc
out
pop
xor
mov
insb
push
dec
fwait
mov
sub
sbbb
jecxz
lock
cmc
push
movsb
mov
xchg
or
pusha
fimuls
xlat
imul
xchg
out
mov
cld
addl
sbb
mov
jne
xchg
adc
cmp
js
cmp
std
data16
mov
and
lods
faddl
lahf
mov
push
cmpb
hlt
iret
clc
out
add
ret
xchg
sti
dec
cmp
std
enter
add
jne
inc
stos
subl
pop
pop
pop
mov
fisubs
ret
or
sbb
jnp
enter
jle
and
stc
sbb
mov
sbb
push
pcmpeqd
pop
pop
push
aaa
ss
aas
jno
cld
scas
in
test
cmpsl
and
sbb
mov
pop
lcall
aam
ds
cs
adc
dec
cmc
sub
cmp
mov
mov
pop
cmc
stos
dec
inc
fiaddl
ficompl
push
out
inc
std
enter
and
jmp
movsb
gs
xchg
fdivs
pop
push
lcall
adc
xchg
dec
mov
jmp
out
adc
sbb
cltd
mov
jp
cmp
inc
bnd
and
js
lods
addr16
leave
dec
insb
mov
mov
jo
je
add
dec
int
bound
push
fstl
xchg
daa
pop
scas
xor
loop
iret
mov
fwait
rorb
imul
repnz
das
in
push
loop
add
test
xchg
hlt
dec
mov
hlt
mov
adc
clc
xor
lods
jnp
cmp
ds
int
mov
int3
bound
mov
ja
loop
mov
xchg
dec
and
push
je
lds
lahf
inc
imul
xchg
jge
lock
jns
fnstsw
add
adcb
imul
mov
mov
push
clc
out
iret
fmuls
fnstenv
gs
push
out
pop
inc
ret
orl
repz
xor
sti
sub
in
mov
popa
add
push
mov
inc
fcoml
cmpsl
psubb
sub
orb
add
fisubrl
cmp
jmp
in
add
cmp
out
clc
lret
loope
lahf
fs
in
outsl
push
adcb
fs
leave
repz
mov
aad
or
test
push
pushl
push
or
add
aaa
in
dec
inc
jl
es
and
mov
loope
inc
cld
xchg
je
lea
push
aas
sbb
ljmp
pop
scas
cli
mov
adc
leave
mov
and
dec
cmp
mov
push
pushf
xchg
adc
insb
and
push
push
lods
lods
add
jo
push
dec
sub
test
push
pop
pop
fsubl
cmp
lods
or
stos
push
cmp
into
cmpsb
repnz
inc
mov
js
adc
ss
lods
adc
cmp
es
sub
xlat
data16
sub
sub
push
in
in
dec
in
mov
mov
or
es
repz
pop
in
insb
bound
or
mov
in
adc
mov
hlt
adcb
dec
sbb
inc
inc
loope
mov
jmp
enter
cmp
out
adc
adc
mov
mov
sub
and
xchg
xor
out
jns
or
lock
loope
pop
jae
popf
andl
dec
push
cmp
xor
das
pop
call
sti
inc
fnstsw
or
inc
add
dec
sbb
data16
cli
pop
push
shll
icebp
jp
adc
sbb
push
cmp
or
das
rorb
dec
sbb
add
jge
ds
cmp
sub
nop
push
ret
fadds
lret
xchg
jmp
aam
out
loope
les
mov
adc
push
add
lret
aaa
xchg
mov
addl
aad
lahf
out
inc
add
jg
gs
enter
adcb
aam
lahf
sub
out
bound
in
loop,pt
cli
adc
mov
push
pop
xor
or
mov
lcall
mov
stos
pop
xchg
or
sbb
lea
sbb
jns
lret
inc
mov
push
subl
dec
or
xorl
lret
sub
fisubrs
xchg
das
jecxz
xchg
push
xor
rclb
and
inc
adc
js
pop
mov
pushf
pop
mov
pushf
hlt
enter
jecxz
jmp
fcompl
pop
jl,pt
mov
push
inc
data16
jnp
add
lcall
inc
push
rorl
xchg
mov
into
fsubr
adc
insl
loop
and
int
sbb
out
push
and
and
pop
push
daa
sbb
out
pushf
or
aas
or
test
xor
stc
lods
mov
xchg
outsb
jbe
mov
scas
mov
not
fdivrp
xchg
movsb
loope
cmp
sub
popa
xlat
pop
dec
push
lcall
or
lret
and
add
jae
jge
call
push
test
or
int
add
decl
mov
push
add
inc
mov
das
xor
icebp
sbb
mov
mov
popa
sbb
sbb
clc
out
mov
mov
push
int
and
loop
pop
popa
cmp
mov
xorb
fisubs
fcompl
cmp
out
out
icebp
lea
jns
inc
lret
sub
ds
jae
mov
imul
inc
jo
and
and
sti
shr
gs
xor
push
imul
sbb
xchg
push
loop
outsl
xor
rolb
mov
jno
sub
fcoml
repnz
ja
sbbb
mov
mov
loope
je
xorb
xor
movsl
iret
mov
aad
adc
ret
shlb
sarb
sub
lock
mov
push
add
gs
xchg
scas
aas
push
outsb
imul
fsubr
inc
test
mov
sub
sub
dec
mov
sub
aam
cs
jns
out
int
lds
jo
push
shrl
shrb
iret
loopne
aam
xor
std
fs
cmp
dec
addr16
lods
scas
and
repz
repnz
scas
jl
or
fxch
inc
cld
xorb
in
xchg
in
and
pop
cli
sbb
jmp
push
mov
insb
repnz
xchg
ss
stos
imul
in
sahf
jno
xor
jae
push
loope
sub
pop
pop
test
test
add
and
addl
adc
cmpb
sbb
cmc
test
and
mov
mov
arpl
jp
pop
adc
inc
repnz
mov
pusha
xchg
cli
lods
loopne
shll
pop
shl
popa
mov
sub
dec
dec
pop
imul
sub
bound
inc
push
loop
xchg
rorb
mov
xchg
adc
push
sub
pop
or
mov
xor
aas
sbb
inc
test
mov
ret
lret
xor
scas
mov
add
aaa
lds
push
out
and
xchg
and
jnp
outsl
lcall
pop
fdivs
ds
nop
cmp
iret
daa
enter
pop
imul
enter
stc
jnp
mov
mov
insb
cwtl
rcr
jnp
nop
mov
out
push
lock
xchg
clc
lret
xchg
int
mov
push
pop
sbb
out
in
inc
cs
pusha
xor
adc
fucomi
out
cli
ljmp
mov
dec
sti
dec
insl
xlat
or
push
sbb
push
testb
mov
in
cmc
xchg
test
divl
xor
loopne
stos
inc
fstps
shll
mov
sbb
jp
fmuls
hlt
dec
mov
pop
sbb
dec
and
jge
enter
repnz
lods
and
dec
mov
out
into
adcl
xor
roll
pop
mov
ficoms
in
jle
add
mov
imul
sub
leave
out
jle
leave
subb
pop
mulb
xchg
xor
sbb
aaa
pop
mov
out
cmp
into
cwtl
stc
inc
into
loop
sbb
xor
push
push
ret
lret
data16
ret
test
loopne
imul
adc
add
orb
scas
out
out
std
fiaddl
push
sbb
popf
dec
jbe
test
dec
jge
test
push
push
cwtl
int
mov
leave
inc
lret
movsl
ret
cmpsb
lods
xchg
xchg
f2xm1
inc
inc
punpckhdq
xor
mov
cmp
bound
xchg
xchg
scas
test
jb
cmpsl
inc
xor
sub
out
push
xlat
fcomi
jb
dec
movsl
insl
add
pop
test
xor
jge
lcall
rcll
jo
pop
fldl
add
push
mov
test
dec
pop
adc
repnz
out
push
sbb
inc
push
fs
xchg
movq
rolb
gs
stos
inc
mov
or
dec
dec
movsb
cmpsl
aaa
frstor
scas
ss
jns
js
jb
mov
xchg
xchg
mov
subb
dec
push
les
inc
pop
repz
xchg
scas
jecxz
xlat
inc
stc
les
cmp
stos
xor
xchg
mov
mov
fs
cld
mov
arpl
sbb
mov
mov
sub
je
in
xor
into
fs
aad
cmp
push
mov
jns
sub
dec
iret
lods
or
sbb
mov
mov
adc
adc
aas
ja
lods
clc
jae
push
pop
je
pop
mov
mov
inc
into
adc
fwait
shll
sbb
cmp
mov
pushf
mov
cli
push
push
xchg
aas
or
mov
cmc
frndint
into
repnz
or
xchg
outsb
adc
jmp
ljmp
decl
pop
scas
icebp
xchg
sti
outsb
sub
pop
aam
aad
mov
mov
icebp
or
dec
add
fdivr
inc
pop
ror
imul
movsb
inc
xor
mov
les
test
and
pusha
jp
adc
mov
jp
xchg
int
test
fcoml
push
loope
mov
arpl
js
sub
sub
out
xchg
fsubrs
sub
push
lea
mull
mov
je
lock
cmpb
pop
push
rcrl
fucomip
or
mov
loope
or
iret
enter
add
pop
sahf
sbb
sbb
add
das
movsl
cli
jg
xor
sub
pusha
mov
mov
mov
mov
cmp
mov
in
sub
loop
aaa
aam
bnd
repnz
shll
xchg
mov
push
mov
mov
add
pop
gs
mov
frstor
int3
aad
jns
lret
pop
sbb
inc
sbb
mov
xchg
arpl
cmp
idivb
pop
push
mov
jp
sub
push
sub
aam
push
int3
jnp
mov
dec
js
repz
ja
ficompl
adc
and
in
andl
pop
popa
cs
pop
lahf
jmp
lods
mov
iret
stc
push
and
xchg
mov
fs
jmp
aaa
mov
les
mov
je
adc
push
call
cmp
mov
mov
mov
or
xchg
shrb
insb
jge
stos
addl
shll
adc
mov
jmp
add
adc
rolb
sbb
push
or
jae
sbb
fimull
jb
mov
lret
int3
xor
jae
fldenv
in
pop
shll
das
mov
gs
push
push
aam
sbb
adc
xchg
xchg
imul
pop
mov
ficompl
jne
lcall
dec
mov
mov
popf
cmpsb
add
sbb
call
or
arpl
jae
loope,pt
enter
aad
in
jmp
sahf
xchg
js
ret
out
mov
xchg
lret
ja
cmp
arpl
mov
call
cmp
movsl
or
add
pusha
jmp
pop
mov
push
pop
xchg
arpl
and
fwait
pop
pop
inc
mov
stos
cmp
test
pop
sti
pop
roll
test
ficoms
push
fldl
sub
add
mov
scas
inc
test
or
mov
std
rolb
or
dec
or
icebp
icebp
cmp
inc
xchg
mull
shlb
adc
ja
aam
jmp
rcr
test
sub
lret
xor
lret
test
mov
movsl
mov
mov
xor
out
xchg
mov
pop
mov
dec
je
push
ljmp
pop
jge
popa
sub
dec
test
xlat
cld
nop
shrb
enter
mov
dec
dec
repnz
pushf
popa
pop
add
push
hlt
fimull
dec
sub
in
pushf
fsubs
pop
dec
in
sbb
xor
xchg
push
fists
call
lods
scas
in
incl
xchg
xor
in
pop
pop
lea
clc
iret
mov
sub
mov
test
sbb
cwtl
or
xor
data16
and
fwait
add
mov
out
mov
push
insb
aam
mov
lret
and
ret
inc
ja
fucom
sbb
xor
inc
fidivrl
and
jmp
inc
add
dec
jae
ljmp
jmp
int
loope
mov
xchg
test
lcall
cmp
add
and
mov
in
inc
cmp
inc
lea
ret
or
and
mov
sarb
js
sub
popa
faddl
sub
dec
mov
dec
cmp
xlat
repz
notb
xchg
ja
int3
jno
mov
mov
push
mov
mov
pop
sahf
cld
adc
jp,pt
xchg
std
aad
test
int3
add
rcrb
inc
jbe
jmp
push
scas
test
adc
pop
push
inc
xor
sub
xchg
jecxz
xchg
mov
loope,pt
popl
sub
push
jbe
aam
add
lds
sub
lahf
in
lahf
jae
out
mov
je
aas
pop
xor
jo
das
jne
aaa
adc
aaa
sub
nop
adc
pop
shrb
jnp
mov
sub
fmul
ja
jno
xchg
fs
pop
sti
imul
mov
xchg
push
sbb
enter
mov
cmp
adc
mov
ss
fwait
dec
nop
movsl
adc
push
push
or
sub
or
push
lock
jecxz
push
out
mov
aam
shlb
outsb
pusha
mov
inc
fcmove
leave
es
push
je
pushl
rcr
sbb
pop
dec
pop
mov
mov
cltd
dec
add
pop
jmp
ds
loop
leave
mov
arpl
ror
das
ret
and
mov
subb
xor
add
cmpsl
or
sbb
insl
mov
lcall
out
adc
xchg
pop
ret
js
sub
js
ret
adc
sbbb
add
cmp
mov
loop
push
fstps
mov
hlt
cmpsl
fmulp
test
jbe,pn
mov
pop
push
addl
mov
lret
out
inc
sub
loop
push
xor
mov
cmp
ret
fimuls
je
inc
stos
adcl
add
sbb
das
inc
iret
test
mov
icebp
frstor
lods
mov
xchg
out
and
cmp
ret
adc
andb
aas
cli
fimull
cmp
ss
movd
jnp
pop
aad
shlb
dec
dec
ret
inc
pop
adc
pop
pop
mov
mov
adc
or
push
cwtl
rcll
pop
pop
int
js
nop
stos
add
pushf
dec
aaa
rcrb
inc
loop
nop
icebp
push
loop
aas
and
xor
xor
xchg
scas
ret
test
pop
leave
scas
sub
adc
fisttpl
pop
and
jb
xor
pop
adc
add
rcll
and
adc
pop
xchg
in
fdivrl
js
repz
daa
cmp
sbb
pop
nop
sub
mov
lock
notb
ss
call
push
dec
cmpsl
inc
mov
int3
sahf
incb
dec
push
push
lds
sbb
es
push
cmp
lea
jle
insl
and
mov
mov
lods
inc
jno
fdivr
xchg
in
push
js
fisubl
jno
cld
ret
aad
jmp
out
cmp
sarl
sub
xchg
inc
leave
jg
mov
aaa
or
lahf
movsl
dec
rcrl
or
lods
xchg
repz
lds
adc
mov
es
cmpsl
mov
mov
add
push
push
aad
int3
xchg
enter
shlb
mov
sub
push
cbtw
jecxz
mov
fsubs
cmp
out
pop
mov
movsl
jge
movsb
mov
jbe
add
adc
mov
ret
stos
mov
lods
push
test
clc
cmp
std
sub
mov
jbe
sub
jmp
jns
int3
mov
jae
add
dec
pusha
or
sub
movsb
dec
fdivrl
or
cmp
add
test
ret
gs
push
leave
sbb
dec
mov
ljmp
sbb
pop
or
mov
mov
inc
js
std
xchg
mov
js
pusha
fldt
jae
inc
sbb
and
adc
das
rcrl
lock
pushf
or
sub
cmp
enter
jmp
popf
addr16
pop
sbb
int3
out
cmp
mov
adc
outsl
enter
sub
xchg
testl
inc
sahf
lods
pop
pop
xchg
iret
mov
pop
fstpl
cmc
enter
xchg
push
jecxz
adc
inc
cmp
push
add
jmp
cmp
das
idivb
or
loopw
rcrl
mov
pop
mov
dec
push
adcl
pop
fstpl
test
rolb
call
fucom
and
push
xor
int3
in
into
jecxz
int
adc
or
nop
mov
jae
cmp
xchg
push
nop
out
push
xchg
sbb
test
xor
outsl
fmuls
pop
mov
add
bound
hlt
out
jecxz
push
cmpsl
lret
loop
push
mov
xchg
movsl
imul
add
jg
add
lcall
cmp
insl
mov
out
push
xor
or
push
imul
push
call
mov
test
ja
test
decb
pushf
or
and
add
xchg
mov
pop
mov
mov
dec
push
int3
outsb
jns
mov
lahf
cld
cmp
mov
bound
repz
xor
lock
aaa
push
sahf
jb
mov
fnstenv
cmc
dec
push
add
pop
sub
cmpsb
addr16
sbb
ds
push
popa
movsl
add
les
inc
dec
add
dec
push
pusha
pop
arpl
insb
push
shll
call
pop
in
sub
dec
or
call
in
mov
sub
jno
or
mov
adc
xor
out
sub
xor
adc
push
pop
adc
dec
push
notb
roll
aaa
adc
mov
inc
lods
push
into
rolb
mov
lock
push
stos
sub
das
out
repz
popa
iret
int3
xor
lahf
or
mov
mov
sbb
aas
sbb
xchg
jae,pn
fdivl
aas
inc
push
dec
xchg
sahf
mov
and
in
add
push
cld
nop
cmp
inc
ror
inc
dec
sti
add
popf
fiadds
xor
rclb
jmp
push
adc
mov
sub
jmp
sub
sub
lahf
dec
dec
ret
add
in
ficoml
inc
scas
popf
dec
dec
mov
lahf
and
addl
clc
int
inc
cltd
adc
push
xchg
xchg
rcl
dec
arpl
cmp
sbb
in
sbb
aam
subl
lea
sub
mov
mov
clc
aad
sub
iret
cmp
xchg
sbb
mov
jle
lock
and
or
movsb
es
les
mov
and
sti
jl
cmpsl
or
sti
cli
inc
cmp
pop
iret
mov
daa
push
push
ret
jae
adc
push
loopne
mov
mov
sub
dec
icebp
jne
mov
inc
lock
pop
lea
pop
inc
jbe
pop
jae
imul
xchg
jno
pop
or
and
adc
inc
subb
dec
add
adc
add
lret
jnp
lea
lds
push
insl
cmp
jmp
and
mov
jecxz
or
add
mov
out
jmp
mov
enter
or
sub
sbb
mov
or
fs
dec
and
fidivrl
das
xlat
add
fisubrs
test
popf
pop
pop
cmp
imul
push
dec
mov
outsl
add
adc
dec
sbb
dec
movsl
jecxz
lret
xchg
xchg
clc
push
jle
dec
jns
mov
xor
and
adc
mov
and
and
out
imul
fmulp
les
jmp
popf
lcall
addl
inc
mov
mov
bound
mov
scas
cmc
sbb
not
cli
mov
mov
scas
das
inc
lahf
xchg
insb
outsb
in
subb
inc
test
push
shr
mov
mov
add
stc
mov
nop
adc
add
jmp
out
add
pop
shll
inc
adc
mov
lret
dec
icebp
cmp
cmp
addb
and
xchg
lods
push
add
into
inc
mov
sub
sbb
leave
push
mov
ret
sub
and
jmp
pop
inc
popa
adc
inc
dec
daa
push
sbb
das
jae
pop
xor
jp
negl
inc
cmp
xchg
stos
jg
stos
sbb
push
push
cmp
aam
pop
fidivrs
pop
push
lret
das
sarb
push
sarb
xlat
pop
adc
adc
or
or
mov
movsb
and
mov
mov
int3
cmp
push
into
push
sbb
cmp
sub
notl
cmp
pop
data16
out
push
mov
push
mov
addr16
dec
scas
xchg
outsl
dec
xchg
cli
in
inc
ds
test
xchg
sub
sub
mov
aaa
pop
popf
cmp
sub
sbb
lods
cli
ficoms
adc
mov
fs
stos
pusha
mov
outsl
ror
cwtl
inc
inc
sub
aam
insl
scas
pop
mov
mov
dec
pushf
orl
cmpsl
fsubrs
pushf
incl
dec
out
mov
push
cmc
mov
orl
ljmp
rolb
fadds
rcll
add
test
xchg
adc
dec
mov
inc
arpl
jb
adc
testb
pop
dec
cwtl
sbb
sarb
pop
dec
jle
mov
movsb
les
lahf
or
push
mov
jns
repz
xchg
mov
or
lods
cmp
adc
lds
pop
push
orb
inc
repz
adc
inc
repnz
cmp
call
dec
popf
fs
mov
mull
call
mov
call
mov
les
mov
fidivrl
jmp
lock
enter
fildll
ja
push
mov
filds
lods
push
stos
out
cltd
lea
add
mov
sbb
sub
cmpsl
push
mov
lahf
pop
pop
or
mov
fmul
mov
stos
std
pop
cmp
mov
pushf
and
aad
mov
dec
out
mov
int
test
mov
inc
and
leave
sub
jns
jns
cltd
inc
repz
jae
cmpsb
loop
jl
rolb
in
mov
ret
fwait
xchg
inc
jb
out
mov
xchg
cmpb
xchg
test
mov
push
push
cmpsl
orps
orb
sub
mov
sbb
mov
sahf
and
lret
insl
cmp
sub
mov
mov
sub
test
js
or
decb
adc
inc
test
sub
sub
loop
pop
push
xor
mov
and
in
ret
ds
lds
loopne
fcomps
fs
pop
push
push
and
pop
adc
test
jp
and
es
jle
dec
inc
push
sbb
pop
pop
pop
gs
jl
imul
lds
mov
jbe
scas
push
clc
and
xchg
push
addb
push
iret
sbb
les
cmp
xchg
or
int
jnp
pop
pop
cmp
xlat
icebp
jmp
jnp
sbb
fstps
adc
xor
fwait
pushf
loop
fadds
sub
cwtl
insl
movsb
push
adc
mov
xor
xor
and
lods
push
push
out
shll
jo
aaa
mov
movsb
xchg
scas
push
icebp
lods
subb
testl
and
mov
aas
xlat
cmp
out
jno
jb
dec
mov
fildl
or
cmpsb
repnz
les
mov
popa
decl
cmp
cmp
jle
lods
adc
push
arpl
insl
cltd
ror
mov
mov
aas
stos
mov
mov
imul
sbb
aaa
sub
mulb
lds
mov
cs
pop
ljmp
jecxz
mov
jb
out
sub
push
xor
cmp
por
leave
pop
jne
int3
dec
jno
sub
mov
push
push
xor
sub
data16
stos
ja
sbb
popl
scas
cltd
fwait
cmpsl
divb
mov
mov
jecxz
icebp
cmc
sub
xlat
lret
and
mov
pop
out
jb
ljmp
push
je
gs
add
lds
sub
sub
xchg
icebp
cld
dec
test
push
int3
adc
jnp
lods
js
mov
enter
sarl
dec
mov
push
mov
fdivr
cmp
cmc
movsb
fnsave
adc
daa
mov
jnp
jge
sub
stos
mov
loop
and
cmpl
adc
cmpsb
sbb
adc
or
cmp
incl
test
push
jnp
jno
xchg
loopne
inc
movsl
push
cmpsl
loope
pop
pop
sti
pop
loopne
lahf
nop
out
cmp
stos
mov
dec
adc
test
push
mov
push
fidivrs
sar
ds
daa
pop
lahf
mov
jbe
mov
xchg
fisubrl
pop
testl
jb
xor
testb
insl
out
xor
add
mov
mov
mov
int
adc
cmp
imul
aas
sub
mov
cmp
out
jg
inc
xor
jl
dec
pushf
push
pop
xchg
out
fstpl
mov
sbb
lahf
cmp
dec
enter
mov
lock
dec
add
imul
and
xor
adc
push
pop
popf
xchg
mov
pop
dec
or
adcl
push
mov
and
loope
sbb
dec
mov
cs
sbb
je
inc
jl
jmp
shr
cmp
lcall
inc
dec
jmp
xchg
inc
sbb
or
cmp
fiadds
lods
mov
lock
cmp
push
xlat
jno,pn
jg
pop
inc
mov
hlt
popa
mov
adc
jecxz
out
xor
dec
scas
loop
xchg
inc
orb
test
adc
mov
ds
mov
pop
cmp
jbe
mov
fwait
repnz
imul
pushf
mov
daa
add
loope
popa
sub
stos
mov
jmp
xchg
pop
aam
inc
fnstenv
arpl
push
or
dec
sbbb
nop
mov
jb
sub
addr16
pop
xor
push
int3
js
addr16
mov
popa
push
add
movb
pusha
idivb
stc
push
aas
pusha
inc
add
and
adcl
push
mov
std
in
or
pop
addl
insl
or
test
adc
push
cmp
daa
shrl
mov
in
xchg
pop
mov
sbb
andb
xchg
das
cmp
or
imulb
clc
hlt
fmuls
fldenv
movb
mov
mov
sbb
add
adc
repz
sub
xor
in
ds
jns
add
xchg
gs
sbb
pop
inc
lea
out
iret
int3
cwtl
cmpsb
add
mov
sub
sbb
dec
lahf
out
xor
push
sbb
fisubs
or
push
inc
stos
dec
sub
loop
xor
sbb
les
and
mov
rclb
mov
dec
out
icebp
sahf
push
stos
or
rorl
mov
sahf
mov
push
pop
in
jns
loopne
aas
pop
or
aam
clc
push
inc
dec
mov
pop
pusha
cmp
bound
add
in
ret
lret
rep
enter
popl
out
int
xor
lods
pop
dec
or
cmp
mov
cmp
mov
jb
push
inc
sbb
inc
insb
and
adc
popf
mov
inc
out
mov
and
popa
push
or
mov
loop
mov
jle
decl
mov
addb
imul
push
mov
sub
repz
sub
xor
out
iret
pop
push
ret
cmp
pop
xchg
push
push
xor
imul
xrelease
sbb
pusha
jbe
in
add
cltd
cwtl
pop
jo
dec
cmc
outsb
push
scas
lods
or
pop
sbb
loopne
xchg
ljmp
cmp
or
test
lea
iret
xchg
inc
mov
inc
mov
push
das
bound
push
push
or
cmpsb
sbb
lret
sub
shrl
adcb
jp
cmp
jb
mov
inc
testl
aas
addr16
jmp
aam
cmp
data16
fdiv
call
jg
inc
cmp
decb
inc
rorb
mov
mov
xor
or
ljmp
imul
cs
frstor
pushf
push
push
movsb
ja
and
pop
mov
test
mov
js
stos
sub
iret
mov
repz
popa
fmull
fnstsw
daa
cmc
xlat
jp
xor
mov
ljmp
aas
iret
add
xlat
mov
popf
jecxz
in
jbe
data16
add
add
mov
inc
divb
lret
ljmp
dec
gs
adc
jmp
rcl
push
sub
xchg
cmpsb
xchg
aam
push
dec
nop
dec
pop
sbb
and
dec
das
dec
inc
push
pop
rcrb
out
fcmovne
xchg
pop
iret
negb
mov
pop
lret
ljmp
sub
sbb
and
and
jle
mov
xchg
mov
fbstp
movsl
push
or
cmpsb
imul
lret
lods
push
lods
das
fsubrs
fmull
stos
pop
orl
cmp
cld
push
and
sahf
ret
mov
or
leave
sbb
aas
mov
lcall
mov
add
mov
ror
outsl
lcall
into
jb
dec
lds
add
fnstcw
add
in
es
mov
pop
mov
dec
mov
jle
outsb
sbb
or
cld
mov
mov
adc
push
adc
sub
lock
mov
pusha
push
mov
jl
std
int
clc
jmp
shlb
pop
cmp
pop
mov
cmc
rorb
and
mov
lahf
lret
ja
add
or
mov
sub
sub
adc
sbb
inc
xchg
lock
lds
lcall
repz
xchg
and
ja
inc
sbbl
push
mov
insl
dec
sbb
add
outsl
xchg
ss
dec
aas
push
inc
nop
out
scas
in
mov
aam
jnp
jle
mov
or
jne
or
push
push
cli
loopne
imul
imul
push
daa
push
flds
mov
mov
push
mov
xchg
cmc
dec
sub
lcall
mov
jle
movsl
push
scas
mov
fimuls
gs
daa
dec
popa
repz
cmp
push
dec
inc
dec
xchg
pcmpeqw
loop
or
push
repz
fisttps
push
shr
out
je
and
xlat
mov
imul
movsb
hlt
add
clc
pop
and
fmull
imul
xor
sbb
xor
xchg
jle
aad
cmp
lret
jmp
and
aaa
add
push
and
and
out
xchg
cmp
fsts
or
mov
les
dec
sarb
loopne
dec
inc
pushf
outsl
mov
aaa
mov
push
or
sub
xor
push
jne
sub
test
cmp
nop
xor
mov
scas
fidivrs
and
popf
je
push
xchg
inc
call
jg
dec
addl
adc
test
or
out
fbld
jb
xchg
sub
stos
mov
xchg
pop
add
dec
es
ret
jns
add
sbb
sar
add
or
rorl
push
inc
mov
inc
sbb
andb
std
inc
cli
adc
inc
stos
fsts
xchg
nop
dec
test
add
ficoms
ret
cmp
xchg
xor
mov
insb
inc
cli
cmp
sti
add
push
sbb
or
pop
mov
sbb
sbb
pmulhw
pop
jmp
pop
cmp
in
clc
push
add
rorl
jns
sti
int3
rcrl
sbb
loopne
into
inc
mov
push
mov
pop
inc
outsb
icebp
push
aad
inc
sbb
pop
in
fcompl
mov
pop
and
fimuls
ret
inc
out
dec
mov
push
out
int
mov
fucomip
mov
fwait
mov
lret
jb
adc
mov
mov
testl
push
and
jns
jge
push
outsl
aam
jmp
shl
loop
mov
and
lret
leave
addb
fisubl
fstl
shrl
jnp
ja
jbe
push
add
jnp
ficomps
jb
jp
push
mov
outsl
and
sub
push
adc
test
mov
stos
dec
push
jge
adc
outsb
adc
in
mov
adc
ja
pusha
rorb
pop
mov
cs
dec
dec
popf
pop
mov
hlt
jl
fldcw
xor
clc
shlb
inc
push
jae
mov
nop
sti
mov
aad
dec
movsb
xchg
sarl
cmp
cmp
sub
add
push
lahf
jns
js
push
add
and
lods
cmp
lahf
or
mov
cmp
xchg
dec
out
xor
xchg
ret
pusha
and
adc
subl
cmc
pop
pop
movsb
sub
push
sbb
roll
aaa
push
aam
lods
add
rcl
pop
xchg
jne
xchg
mov
sub
lea
jecxz
adc
daa
push
test
and
popf
push
cld
enter
fdivrl
daa
xor
push
mov
sbb
jne
inc
fs
jp
mov
push
movsl
jp
push
mov
inc
lahf
scas
not
out
daa
xchg
xchg
jecxz
sub
ret
jmp
mov
add
fisubrl
cmpsb
cmp
shll
or
shlb
jecxz
push
push
inc
adcl
and
jns
inc
nop
push
test
jmp
sti
add
mov
pop
rcll
into
jbe
lret
pop
std
sbb
pop
repz
adc
mov
test
mov
daa
mov
movsl
das
fbld
cmp
shll
frndint
sbbl
rol
sbb
pop
dec
pop
fstps
ss
inc
cmp
xor
xor
cld
xchg
push
daa
lods
cmpsl
push
aaa
adc
sub
jmp
cmp
je
aad
dec
leave
jmp
orl
jge
mov
loopne
addb
pop
flds
sbb
xor
cmp
jo
pop
pop
sbb
jp
movsb
mov
mov
orb
cli
pop
std
loop
inc
cli
inc
mov
xor
mov
sub
shl
or
ret
out
mov
int
push
inc
sbb
in
xchg
push
mov
aam
imul
xor
mov
data16
js
mov
xchg
mov
repnz
mov
inc
inc
pop
sbb
xchg
mov
mov
cmpsl
inc
mov
insl
aad
aad
loop
and
add
dec
add
insl
in
nop
inc
add
xchg
xchg
ds
sub
jno
ljmp
push
out
dec
xor
mov
push
xor
mov
ds
ja
into
xchg
fwait
loope
inc
push
xor
mov
bound
dec
cmp
loop
in
mov
jg
dec
add
out
lds
jbe
and
int
pop
sarl
cmp
dec
icebp
push
insl
sti
cld
imul
mov
insb
lcall
jmp
loopne
or
out
lahf
push
fdivrl
jns
jb
mov
cltd
jb
push
nop
aas
popa
fcoml
fsubrl
adc
and
mov
push
xlat
pop
shll
scas
dec
cmp
pop
mov
fadds
je
movl
cmp
test
sub
stos
pop
sahf
outsl
test
or
cmp
stos
imul
fwait
add
jle
mov
adc
push
jne
inc
inc
dec
cmp
pop
sub
pop
sub
imul
fwait
xchg
lds
dec
inc
mov
xchg
jnp
fmull
ds
clc
push
imul
pushf
lods
pushf
insl
test
adc
sbb
xchg
push
sbb
sub
jmp
aas
mov
int
dec
pop
push
mov
adc
in
cmp
push
movsb
mov
loop
pop
or
pop
into
test
dec
cmpsl
or
dec
add
ljmp
xsaves
adc
jecxz
ds
xchg
cmpsb
ja
popf
or
and
mov
mov
sarb
scas
dec
scas
adc
xchg
imul
jo
cmp
arpl
or
int3
inc
mov
pop
mov
cli
outsb
imul
and
pop
int3
test
push
jbe
daa
js
dec
push
fld
xchg
pushaw
js
repz
imul
jp
popf
stc
lock
xor
push
sbb
xchg
mov
pop
pop
popa
es
js
pop
test
and
stos
inc
sub
pop
adc
out
addb
fidivrl
rcr
jg
loope
mov
ss
sti
cs
fimuls
daa
push
jne
ret
stos
push
cmp
lods
lods
dec
add
scas
insb
add
neg
sub
jae
loope
push
push
jmp
dec
cmp
xchg
jno
movsl
out
daa
mov
loopne
hlt
imul
inc
fwait
lcall
jae
call
sub
ds
xchg
or
repz
enter
cmp
popa
or
add
in
sub
mov
push
mov
rcrb
outsl
in
insl
cmp
sub
xchg
push
xor
or
pop
stc
xor
icebp
in
mov
pushf
sti
mov
ret
sbb
dec
jl
in
push
adc
shrb
mov
add
jae
movsl
pop
cwtl
sub
jmp
inc
roll
add
sahf
adc
mov
jae
mov
mov
mov
test
sub
add
add
adc
js
fwait
ret
and
cli
fildl
xchg
rcrl
sarb
dec
add
dec
popf
mov
or
cltd
adc
test
hlt
mov
push
inc
jne
mov
ror
clc
dec
sbb
or
inc
decb
leave
loopne
sbb
clc
xchg
sub
mov
jge
mov
cs
notl
push
mov
in
pop
out
sbb
jp
adc
leave
movsl
testb
daa
sbb
xor
and
icebp
scas
imul
loope
jbe
or
adc
decl
lea
in
or
fldl
inc
inc
jno
scas
jge
sbb
xchg
jl
and
mov
es
movsl
dec
pop
add
xchg
int
mov
jne
jp
frstor
xor
dec
pop
or
leave
fsubrl
push
mov
adc
jl
xchg
mov
jae
jg
lods
lods
gs
mov
pop
push
dec
xor
cmp
xchg
mov
add
ja
iret
sub
sahf
fidivl
lret
jl
add
jnp
jecxz
movsl
flds
xchg
and
push
jae
add
dec
push
pop
lea
jge
nop
ret
call
mov
hlt
mov
lds
mov
mov
aas
shl
mov
jbe
pop
test
lock
pop
mov
add
xchg
aas
pop
out
jbe
mov
popa
add
popf
out
je
mov
test
jecxz
js
cld
test
mov
call
andl
sub
inc
test
inc
dec
push
fcmovnu
mov
pop
lods
fbld
sbb
test
movsl
hlt
gs
xchg
scas
xchg
shlb
mov
mov
xorb
test
add
xchg
outsb
sarl
hlt
enter
gs
mov
xchg
fcomps
lds
mov
lock
mov
adc
scas
cmpsb
das
rorl
inc
test
pop
shrl
cwtl
push
sbbb
and
lahf
test
idivb
mov
in
push
movsl
test
sbb
push
cmpsb
and
mov
ss
ret
stc
jl
xor
scas
call
dec
add
out
and
xchg
mov
pop
lahf
sbbl
xchg
mov
push
jle
addr16
pop
add
push
aaa
xor
movsl
out
fiadds
shlb
pop
or
aas
pushw
mov
ficomps
or
add
iret
pop
mov
test
mov
loopne
dec
je
pop
dec
lea
aam
cmp
adc
ljmp
mov
jg
movsb
pusha
lock
stos
jmp
imul
or
cmp
mov
mov
cmp
ret
int
aas
and
scas
repz
ja
push
xlat
setb
push
mov
or
test
outsl
fcomps
fdiv
jg
mov
inc
stos
xchg
sbb
jg
repnz
ds
xlat
lret
pop
inc
pop
mov
lret
push
ss
test
int
xor
imul
jecxz
pop
lea
sbb
cmp
or
and
int
loopne
sbb
call
or
sub
fcompl
mov
mov
mov
dec
dec
sub
stos
and
pop
iret
push
pop
cmp
std
loope
out
jge
loope
fnstsw
aaa
fstpl
dec
hlt
xchg
ja
dec
sub
jge
mov
stc
adc
in
xor
cmpsb
test
sub
loope
divl
inc
mov
xlat
xchg
mov
ljmp
pop
sbb
xchg
sbb
ficoms
mov
addr16
out
mov
popf
mov
mov
ss
lds
add
addr16
addb
add
jne
insl
cwtl
adc
outsb
sub
jp
ficoml
iret
jmp
es
jge
and
push
test
cld
jg
aaa
add
add
mov
mov
xor
adc
jecxz
mov
mov
ss
shll
inc
cli
push
out
or
push
xchg
repnz
push
jne
adc
lods
lret
lcall
imul
call
mov
and
and
out
lock
lea
add
popa
in
daa
or
add
arpl
and
in
cmp
lahf
lock
out
testl
test
cmpsb
imul
test
lds
jp
fs
mov
adc
nop
outsb
stc
cltd
cld
mov
cwtl
pushf
fdivrp
jbe
aaa
je
jnp
test
sub
movsl
leave
mov
incb
loope
pop
mov
rol
or
mov
mov
xor
mov
ljmp
xchg
and
je
aas
lahf
inc
jg,pn
loope
in
imul
aaa
jg
sbb
adc
stos
and
lcall
cmp
std
sahf
xor
scas
rol
xchg
add
jbe
xchg
pop
fisubs
jge
pop
das
dec
iret
or
push
add
push
xor
js
mov
jle
pop
hlt
mov
fcompl
imul
cmp
es
fisttpll
nop
jecxz
xor
cmp
popf
inc
test
repz
into
pop
fidivs
out
fstpt
mov
mov
adcb
xchg
xor
add
iret
idivl
add
cli
mov
jnp
test
aas
mov
ror
enter
mov
test
sbb
jnp
mov
fadds
loopne
push
push
mov
rcr
repnz
add
adc
hlt
and
xor
nop
insb
lcall
movsl
mov
cmpl
cmpb
dec
in
lods
or
xor
je
dec
nop
out
cmc
add
jp
pop
pop
adc
test
int
stc
cmp
dec
push
lcall
popa
mov
cli
push
and
pop
mov
scas
xor
xor
icebp
data16
call
add
cmpsl
clc
pop
aam
or
jb
lock
test
test
leave
pop
inc
out
scas
cmp
mov
test
cmc
or
sub
push
pushl
movsb
sub
mov
pop
push
ja
jbe
jg
push
mov
dec
out
xor
jb
fsts
outsl
ja
xchg
out
pop
insl
je
lods
repz
test
and
in
adc
mov
pop
push
push
sbb
and
cmpsl
adc
xchg
ss
or
not
or
jno
pop
jle
pop
push
mov
lahf
or
jno
cld
loop
sbb
fisttpll
cs
cmc
xor
aaa
or
mov
mov
out
cmp
fcompl
mov
and
nop
in
es
orl
popa
and
jge
iret
neg
cltd
or
lahf
cwtl
jg
fisttpll
daa
in
loop
cmpsl
mov
xrelease
addr16
xchg
adc
jp
jne
add
popf
jae
aas
in
leave
fidivs
xchg
repnz
sub
or
mov
stc
popa
mov
bound
cld
or
jae
add
jg
dec
fisubl
cmpsb
and
sbb
inc
pop
dec
sub
jmp
int3
fwait
lds
push
lock
jmp
fsts
fldt
pop
in
push
mov
adc
xlat
xchg
dec
sub
ds
mov
dec
daa
push
cmp
xchg
nop
xchg
pusha
adc
orl
cmpsb
shll
jbe
mov
pop
stc
xor
outsb
cmpsl
add
jg
ja
lcall
out
cmp
xchg
iret
mov
movsb
popf
sahf
push
or
jno
popf
pop
pushf
cmpsb
fmull
les
mov
lahf
inc
mov
mov
mov
test
in
mov
dec
hlt
mov
sub
loopne
gs
cmpsb
mov
cltd
or
das
repz
roll
or
fisubl
out
inc
mov
cmp
fucomip
inc
sub
mov
mov
sub
cmp
or
push
cmpsl
imul
xchg
and
repz
push
mov
mov
fildll
mov
sbb
push
push
mov
cltd
mov
adc
ljmp
lds
push
movsb
pop
adc
pop
xor
lret
ret
or
pop
jnp
mov
push
sbb
leave
adc
cmp
xor
mov
fcmovnb
sub
add
outsb
lret
dec
add
jo
cs
loope
es
mov
mov
adc
mov
fisttps
shll
cmp
push
shl
adc
xchg
das
inc
repnz
mov
sbb
test
sbb
sbb
sub
aaa
popa
add
or
sbb
hlt
jecxz
dec
leave
lret
inc
aaa
mov
addr16
and
loopne
movsb
inc
ret
dec
popf
pop
int
popa
pop
fdivrl
adc
out
jp
pop
pop
test
gs
mov
adc
mov
dec
paddusb
call
sbb
pop
add
repnz
lock
and
mov
lea
push
mov
out
loopne
pop
mov
dec
shll
inc
sub
mov
fidivs
xor
mov
dec
cmp
pop
in
andl
mov
out
dec
sub
shr
hlt
out
jno
mov
hlt
cmc
shl
cmp
das
rcrb
loopne
cmp
mov
movaps
in
jl
pop
sbb
loop
imul
data16
mov
aam
mov
dec
mov
pop
rcr
lods
lret
or
jge
mov
movsl
lcall
pop
in
js
aad
dec
outsb
adc
push
mov
fdivrl
pop
jge
pop
cmp
enter
and
dec
sub
lret
cmp
sbb
sub
sub
test
and
pop
mov
dec
push
push
bound
sbb
mov
add
mov
lock
xchg
sbbl
push
or
ljmp
movsl
mov
add
pop
stos
push
mov
and
popf
bound
dec
imul
clc
rol
movsb
xor
pop
mov
sti
mov
inc
push
rorl
insl
imul
sti
xchg
adc
push
mov
lret
mov
dec
sub
fmuls
orl
mov
jge
stc
lods
scas
mov
ficompl
les
movsl
inc
cmp
into
xor
ret
xor
jge
pop
mov
out
xchg
mov
ret
popa
hlt
test
stos
clc
stos
fcoms
mov
andl
test
add
aas
xor
push
fadds
push
addr16
ret
dec
in
dec
scas
xor
pop
jmp
jo
outsb
inc
jmp
push
adc
cmp
push
call
repz
sbb
xor
push
mov
rcr
adcl
mov
push
pushf
ret
cs
jmp
movsl
fdecstp
mov
and
ret
mov
inc
fistl
dec
js
test
pandn
adc
mov
cli
pop
fimull
mov
insb
sbb
jmp
pop
sti
inc
mov
or
sbb
sahf
sub
add
out
sub
into
xchg
insb
xor
push
cmp
dec
cs
insb
adc
dec
pop
je
imul
sub
pop
int3
mov
cld
pop
pop
mov
sub
adc
repz
andl
mov
inc
dec
and
xchg
mov
xor
xchg
inc
movsb
xchg
mov
xor
test
mov
nop
loop
xchg
mov
adcb
rcll
adc
cmp
rcrb
test
mov
inc
push
outsb
out
push
sahf
aam
pop
sub
pop
jb
out
sarl
sysret
jno
mov
fs
cmpsl
ss
push
pushf
jo
outsl
jmp
pop
xchg
test
sbb
sub
xchg
mov
and
push
xchg
mov
cwtl
ret
push
loope
adc
push
push
mov
adc
das
and
ss
scas
insb
add
mov
dec
mov
dec
inc
outsl
fldl
jmp
push
nop
cmp
inc
xchg
scas
dec
pushf
ljmp
mov
cmp
iret
push
stc
insb
xchg
pop
xchg
sbb
repz
loope
mov
xorl
sub
imul
adc
push
test
out
in
test
jmp
cwtl
aam
jne
xlat
mov
push
stos
sub
dec
mov
add
es
jecxz
add
fsubs
xchg
icebp
adc
jo
mov
xchg
cmpsb
aad
stc
jnp
cmp
ss
roll
test
mov
mov
push
adc
add
pop
pop
cmc
push
ret
orl
mov
push
icebp
lods
push
mov
test
movsl
insl
sbb
dec
stos
insb
orl
adc
sub
test
or
imul
fimuls
add
mov
mov
xor
insb
xlat
sub
pop
mov
mov
mov
lahf
add
lret
xor
lea
add
cltd
lret
std
mov
jae
jbe
dec
inc
cltd
push
fcom
sbb
lds
adc
iret
add
mov
insb
mov
jg
popa
iret
out
fimuls
push
xchg
cmp
mov
out
mov
pop
mov
repz
movsb
mov
mov
sub
adc
loope
xchg
cltd
fldcw
minps
or
in
mov
lret
adc
ret
cmp
sbb
mov
pop
cwtl
jae
jecxz
xorl
sti
and
divb
fcomps
movsb
adc
jne
daa
arpl
add
inc
mov
dec
js
fdivrs
les
ret
aad
cld
ss
outsb
sub
cs
les
test
pop
xchg
fisttpl
xor
dec
push
imul
dec
ret
aam
sub
cmpsl
and
out
mov
aad
push
scas
sbb
jge
sbbl
mov
adc
ja
sub
leave
inc
rcrl
xchg
dec
inc
fdivrs
iret
out
test
call
dec
mov
test
pushf
mov
mov
cs
sbb
cli
cmp
sahf
xor
gs
dec
adc
hlt
lock
lret
push
mov
and
push
xor
and
mov
dec
outsb
sbb
or
out
xlat
xchg
xchg
imul
jp
lea
bound
out
mov
mov
cmp
mov
push
pop
cmc
orl
pop
mov
xchg
fists
fistl
xchg
xchg
pop
fnstcw
dec
lds
fcmovne
mov
std
sbb
cltd
lods
xchg
mov
mov
dec
test
xchg
pop
sti
xchg
sbb
lahf
int
xor
push
inc
inc
imul
pop
mov
mov
or
mov
mov
repz
sbb
test
cmp
popw
test
add
nop
pushf
inc
xchg
add
or
mov
loop
js
xchg
xor
pop
rorb
pop
es
popf
dec
mov
dec
andl
push
mov
mov
fs
scas
loop
dec
push
push
fcompl
cmpsb
lock
mov
jo
cmc
test
js
and
mov
in
cmp
and
push
xchg
mov
mov
insl
in
loopne
and
ljmp
mov
sbb
lcall
lods
and
mov
push
adc
sahf
fwait
adc
iret
js
cmp
inc
fbld
mov
fucom
cmp
mov
inc
mov
test
shll
push
out
scas
dec
iret
mov
xor
cmp
jp
pop
sub
xor
cmp
sbb
push
mov
flds
je
cmp
mov
decb
push
mov
jae
push
sub
or
push
xchg
out
loopne
inc
loopne
lret
adc
mov
inc
xor
test
cld
inc
jge
jle
xchg
test
jnp
and
sub
sbb
rcrb
rcrb
in
out
loop
pop
cli
enter
pop
hlt
mov
xchg
adc
sub
movsl
add
xchg
or
das
lods
jo
in
adc
enter
pop
mov
add
jg
cmp
mov
test
fcmovnbe
sti
mov
push
cmp
pop
fisubs
cmpsl
insl
lahf
hlt
test
rorb
inc
xor
lcall
movsb
xchg
cmp
pop
cmp
add
xchg
mov
repz
mov
push
cwtl
push
movsl
nop
testl
push
cmp
jge
push
or
xlat
pop
xor
sbb
xor
inc
loop
fnstsw
and
ror
andl
enter
sub
xlat
jl
pop
daa
xchg
adc
add
sub
shr
push
inc
fdivl
push
sbb
in
xchg
mov
push
je
notb
cmp
js
decb
sub
inc
mov
cmp
push
add
in
lcall
loopne
negl
aam
les
jmp
test
scas
imull
cmpsl
push
push
out
icebp
and
sub
repz
ret
dec
add
mov
mov
xchg
shl
xchg
mov
mov
pop
andb
xchg
push
sbb
cmp
and
mov
das
jp
cmp
push
push
fildl
and
or
add
mov
mov
cmc
call
xor
cmpb
jle
inc
push
inc
xor
adc
sbb
int3
scas
fsubrl
xchg
test
mov
call
inc
xor
pop
cmpsl
pop
icebp
icebp
cwtl
test
adc
jg
add
sbb
test
xchg
test
push
movsb
test
pop
jmp
sbb
push
push
outsb
rol
and
jmp
mov
adc
out
dec
jnp
jp
es
ret
incl
mov
shll
jbe
add
nop
pop
inc
adcl
cs
adc
test
dec
shrb
sahf
arpl
cmp
cmp
adc
pop
adc
aaa
or
xchg
xchg
push
jb
les
nop
or
mov
fimull
cmp
scas
mov
mov
xchg
sbb
xchg
sahf
ljmp
into
loope
addr16
js
mov
add
nop
enter
fiaddl
and
mov
add
cmp
addr16
rcrl
aam
pop
int
fs
dec
shrb
ss
lret
ficoml
out
xor
sahf
mov
loop
jmp
jg
out
fidivrs
push
xchg
stos
inc
sti
icebp
stc
and
or
mov
xchg
fmull
jns
pop
jae
inc
stos
int3
mov
mov
jnp
aas
call
iret
in
pop
mov
jno
jl
in
data16
mov
cwtl
pop
sub
mov
mov
dec
mov
pop
arpl
or
push
push
cmp
lret
outsb
xlat
jno
mov
sbb
fadds
mov
mov
mov
gs
mov
xlat
fstps
ljmp
sbb
fwait
loopne
push
imul
mov
vmread
xchg
mov
jg
add
insb
push
cmpsl
addr16
repnz
push
mov
mov
fnsave
les
loopne
xlat
add
cmp
sub
leave
hlt
inc
outsl
div
and
andl
inc
mov
test
and
cli
jns
and
dec
sbb
stos
loop
bnd
out
push
hlt
fisubrl
outsb
cmpsb
mov
out
mov
jns
in
loopne
pop
mov
ss
hlt
out
sbb
and
push
xor
lods
or
push
push
jo
jle
call
xor
mov
sub
jnp
jp
cmc
mov
lods
inc
jno
nop
outsb
lret
fisttpl
aas
ret
arpl
dec
sub
loope
sbb
insb
adc
fmul
xchg
ss
out
pusha
data16
lcall
jne
push
dec
cmpsl
js
shr
bswap
add
call
add
pop
sub
and
sbb
movsl
mov
icebp
in
mov
cmp
mov
fwait
dec
cwtl
and
scas
or
les
dec
ret
pop
cmc
repnz
and
push
clc
cmp
ret
outsl
movl
pop
push
stc
mul
mov
jae
movsb
mov
sbb
inc
xchg
mov
cltd
adc
jp
repz
mov
xchg
addr16
or
movl
sahf
adc
xlat
jae
mov
repz
testl
inc
in
clc
lock
lea
ljmp
insl
mov
in
xchg
ret
xor
xchg
inc
out
xor
in
fbld
loop
outsl
jns
adc
jge
cld
sub
lret
mov
cmp
xchg
inc
daa
loope
out
mov
mov
push
push
sbb
cmp
push
fs
or
jle
jecxz
jmp
loope
and
rclb
dec
adc
sub
movsb
mov
in
lods
inc
mov
inc
pop
xchg
ficoml
lcall
sub
fistps
lret
and
pop
lret
jl
xor
out
jmp
mov
test
lods
sti
and
out
sarl
mov
cwtl
dec
in
lret
mov
dec
imul
test
insb
mov
xchg
mov
mov
cmp
pushf
push
js
ja
add
outsb
adc
mov
cmp
fadd
mov
jb
mov
cltd
out
sbb
cli
and
pop
xor
sub
daa
xor
push
xor
push
xchg
pusha
nop
out
cld
dec
call
lahf
cltd
adc
rcl
dec
movsl
pusha
cmc
mov
leave
iret
fnstsw
cs
xlat
ret
das
addb
and
xor
fcmovb
xor
xchg
pop
jmp
lahf
adc
stc
mov
lret
adc
cmp
pop
sub
xor
pop
lods
mov
or
pop
pop
mov
dec
push
cmp
mov
and
daa
flds
addr16
mov
add
mov
loope
popf
inc
out
adc
jne
lods
xorl
es
test
int
mov
push
add
dec
jp
fldl
data16
lods
adc
icebp
out
adc
rcll
push
adc
cmp
or
lea
jge
sbb
and
out
jmp
cmp
sub
jmp
lods
dec
dec
jo
mov
fwait
jne
nop
mov
jmp
lahf
or
pop
stos
sub
fldenv
xchg
push
pop
xorl
in
fsubrp
iret
fdiv
push
pop
test
xor
pop
pop
pop
pusha
out
ficoms
push
pop
sbb
push
sti
sbb
dec
into
addr16
mov
test
loopne
test
out
mov
sub
jp
int3
out
stc
cld
frstor
cmp
aas
jae
cli
loopne
scas
int3
push
adc
xchg
pop
push
sub
jmp
movsb
jle
gs
scas
pop
shll
sub
sub
sahf
ret
into
push
imul
jbe
int3
cmp
bnd
iret
add
stos
adc
or
loop
inc
add
xor
mov
sub
sti
xchg
and
das
aam
fimuls
dec
adc
pop
dec
sub
jns
or
add
lds
mov
gs
mov
scas
fs
gs
dec
repz
test
aaa
xor
lret
cmpl
std
iret
out
loope
jle
test
sub
inc
lret
daa
test
hlt
push
mov
mov
movsb
and
pop
in
nop
pop
cli
das
movsl
cmp
nop
aaa
xor
ja
scas
insb
mov
test
leave
adcb
cmpsb
dec
mov
jmp
mov
add
jle
shl
sahf
sarb
test
lods
xor
inc
dec
jmp
xchg
call
inc
inc
push
lahf
mov
stos
cmpsb
push
scas
mov
add
jg
adc
int3
or
jp
clc
in
add
inc
incl
ss
inc
inc
sarl
movsl
in
test
and
xchg
stos
adc
mov
xlat
fidivs
mov
push
or
repnz
popa
sbb
sub
cmp
test
dec
sbb
cltd
ja
add
xor
push
inc
out
sti
pop
jmp
rcrl
fisttpl
stos
ret
xchg
cmp
mov
psrlw
pop
ret
cmp
data16
repnz
dec
icebp
test
mov
pop
mov
dec
cmp
enter
xorb
rclb
pop
sbb
popa
outsl
adc
pop
call
lcall
inc
lds
push
lods
je
and
cmpsb
or
or
xlat
adc
sub
lcall
insb
mov
jge
mov
ftst
in
inc
int
dec
sbb
xchg
pushf
andb
mov
mov
or
push
and
je
negl
jo
push
mov
vxorps
mov
push
mov
cmp
pusha
xlat
aad
mov
imul
dec
pop
jbe
sbb
jle
jge
xor
xor
dec
out
or
test
fnstsw
xchg
test
and
mov
jnp
fs
adcl
mov
call
je
dec
mov
push
test
pop
pop
inc
and
test
push
jmp
stos
sbb
sbb
and
pop
repz
fildl
jmp
add
mov
sbb
fsubrl
pop
lods
fisttpl
mov
mov
add
es
lods
movsb
push
lret
or
xchg
sub
inc
outsl
rcrl
push
cmp
popa
xchg
data16
test
mov
nop
pop
je
xchg
push
test
lock
fistpl
mov
les
mov
int
sahf
and
addr16
pop
cwtl
daa
jg
rcll
pop
out
pusha
push
pop
arpl
out
mov
jle
add
mov
cwtl
push
pop
imul
jmp
inc
stc
les
mov
adc
cmc
adcl
sub
or
mov
jo
jmp
xor
mov
push
adc
addr16
cmp
xchg
aad
aas
dec
repz
dec
jp
push
and
mov
or
mov
or
dec
pop
popa
imul
repz
mov
imul
call
lret
sub
mov
stos
push
inc
in
shlb
enter
loopne
mov
pop
hlt
sub
push
inc
jmp
sub
or
add
inc
cmp
pop
cmp
push
pushf
lret
loope
xchg
cld
fdivrs
hlt
icebp
icebp
shrl
dec
stc
jg
pop
imul
or
lret
lds
test
ret
fldcw
stos
jl
outsb
jmp
push
or
rorb
xchg
iret
mov
inc
pop
not
test
adc
out
data16
subb
and
mov
mov
leave
loopne
push
ss
je
gs
jb
add
scas
leave
jo
js
fwait
jne
dec
cmc
out
cmpsl
adc
insb
and
cwtl
inc
xchg
stos
cld
jo
pop
mov
sbb
pop
xchg
pop
mov
std
pushf
xchg
push
jp
pop
loope
loope
mov
aaa
or
into
adc
sbb
jecxz
pop
stc
fsts
mov
cli
lods
sti
lds
mov
sahf
xor
xchg
in
xchg
jo
shr
mov
sbb
mov
in
jne
sub
xor
cltd
repz
icebp
mov
in
mov
sub
dec
inc
insl
loope
das
xchg
pop
test
icebp
call
and
jmp
sahf
push
in
hlt
aas
movsb
into
sub
lahf
ds
sbb
xchg
aaa
mov
in
push
mov
sar
popf
sahf
rorb
lcall
sub
mov
mov
icebp
adc
dec
lock
sub
popf
data16
es
push
insl
ljmp
aad
shll
and
daa
sbb
shrl
fldt
adcb
cs
xor
out
loop
bound
ficoms
and
movsb
jo
jns
jl
sahf
pop
sbb
or
push
shlb
cmp
and
jne
lcall
int3
test
cmp
fidivs
mov
dec
mov
ror
shll
xchg
xchg
or
dec
lods
and
and
dec
mov
jecxz
mov
push
cwtl
push
cltd
mov
jl
gs
call
insl
daa
mov
pop
enter
or
lcall
or
jp
fiadds
fwait
cli
test
data16
or
shll
testl
mov
sahf
in
push
mov
loop
call
or
push
add
pusha
and
cmp
fiaddl
push
loope
inc
movsl
mov
fildl
push
mov
aaa
jae
mov
mov
in
mov
add
mov
js
rcl
dec
into
sub
mov
pop
scas
adc
xchg
nop
adc
shll
or
mov
mov
lret
iret
and
adc
add
sub
loopne
fldt
fisttpll
in
push
push
adc
leave
xchg
ret
shl
mov
mov
push
pop
cmp
nop
add
add
int
xor
adc
sub
jo
pop
pop
cs
mov
sub
in
rorb
mov
cwtl
adc
ret
cmp
mov
das
inc
inc
test
sbb
faddl
and
mov
fcmovnu
and
xor
push
ss
mov
shrl
stc
xor
mov
loopne
adcl
mov
decl
lahf
xchg
mov
push
inc
xor
xor
push
sub
iret
sti
mov
repz
dec
enter
sbb
imul
lret
ficompl
fbstp
mov
cmp
aaa
inc
cld
dec
leave
imul
dec
xchg
push
mov
mov
cwtl
sbb
pop
scas
sub
jae
ret
sarl
jmp
push
dec
sbb
push
adc
dec
adc
adcl
add
lds
inc
std
push
mov
mov
pop
cmp
int
lods
add
mov
cmp
subps
insb
dec
mov
inc
fwait
imul
cmp
adc
movsb
xor
and
push
sub
outsb
adc
push
test
pop
cmp
sub
or
pop
ret
imul
jle
inc
pop
dec
imul
cs
jnp
int3
pop
adc
xor
fdivs
push
sahf
lcall
lods
stc
sbb
dec
daa
mov
insb
mov
inc
mov
sbb
es
outsb
sbb
ljmp
push
nop
into
or
leave
sbb
test
and
lods
aas
xchg
sub
mov
cwtl
cli
loope
fsubrs
pop
das
pop
ss
ljmp
out
and
dec
lds
fldcw
pop
je
insb
pop
hlt
lods
cld
call
pop
mov
add
sti
outsb
cmp
ss
fidivl
nop
aaa
decl
loop
inc
pushf
ret
std
or
bound
mov
bound
mov
ljmp
ljmp
jno
mov
iret
or
sub
ja
enter
push
pop
xlat
adc
movsb
mov
cmp
in
mov
xor
xor
fnstsw
mov
outsl
lods
mov
pop
scas
ds
les
jb
daa
adc
in
inc
mul
repz
xchg
movups
icebp
jmp
pusha
add
insb
jae
loope
sbb
pop
xor
inc
mov
aas
add
jno
add
sahf
pop
lea
daa
ja
cmp
nop
mov
and
clc
aas
dec
or
std
jmp
cwtl
insb
push
fwait
sti
movsl
pushf
mov
xor
dec
mov
call
test
and
pop
mov
jecxz
dec
pusha
xor
push
pushf
rcll
arpl
ret
cmp
iret
fcomi
or
dec
mov
into
cmp
out
push
pop
lods
xor
lds
in
fnsave
pushl
pop
or
movsb
mov
push
dec
or
mov
or
stc
push
ds
pop
cmp
push
dec
insl
xchg
pop
leave
shll
mov
scas
mov
pusha
outsb
xchg
pop
rorl
push
or
loope
dec
fdivs
sbb
scas
mov
pushf
xchg
lret
in
rcll
inc
pushf
data16
ds
scas
pop
arpl
leave
aad
mov
push
mov
xchg
adc
xor
mov
fsubrs
or
push
push
nop
sahf
add
stc
in
out
xor
int
in
add
add
and
imul
cmp
jns
sahf
adc
loop
out
icebp
mov
cld
sub
or
adc
or
add
mov
scas
pop
xchg
das
hlt
dec
pop
fwait
push
loope
xor
jge
mov
sub
push
leave
push
xor
int
or
jbe
movsl
arpl
xchg
jae
gs
and
or
push
lret
jno
or
std
je
xchg
pop
jno
loopne
fs
cmp
xchg
sahf
xchg
mov
imul
dec
mov
inc
dec
mov
cmc
adcb
cmpsl
sbb
inc
sti
repnz
gs
mov
mov
cwtl
push
ja
push
dec
jl
push
ljmp
cltd
pop
arpl
hlt
sub
repnz
and
jge
ja
std
push
aad
inc
out
mov
mov
or
and
pop
ja
das
add
roll
inc
adc
xchg
notl
int
lret
jnp
or
mov
mov
fisubl
data16
mov
repnz
ret
adc
and
mov
mov
push
mov
cwtl
sahf
adc
sub
inc
dec
push
fildl
movsb
es
cmpb
inc
or
out
push
mov
push
jge
inc
pop
nop
movsbl
inc
es
add
xor
cmc
mov
outsl
fxch
rcl
jmp
cld
iret
ds
mov
ds
inc
and
std
dec
iret
push
dec
xor
mov
les
ficompl
jmp
ja
mov
pop
sub
stos
cwtl
in
movsb
jo
shrb
aas
xlat
jno
dec
jmp
push
lahf
adc
jle
mov
and
pop
pusha
in
and
pusha
and
jbe
sar
sbb
cltd
std
dec
stos
mov
jmp
in
add
pop
and
out
pop
stos
and
ret
inc
pop
adc
sbb
shl
push
in
ret
rcll
push
or
or
pop
push
in
aaa
lret
add
hlt
aas
pop
inc
push
push
mov
mov
and
cltd
jmp
fwait
imul
mov
test
mov
lret
pop
push
push
rcrl
dec
movsb
inc
lock
popa
fdivrs
jmp
mov
inc
ror
lods
cmp
xor
jb
jp
push
inc
adc
stos
scas
inc
iret
push
ss
mov
fimuls
mov
es
movsb
pop
aas
es
leave
ds
outsl
and
sbb
dec
enter
mov
inc
xchg
push
sbb
push
pop
rcrl
addl
or
lods
sub
bound
test
inc
decl
mov
mov
mov
xchg
loopne
movl
push
stos
test
jns
xchg
pop
jge
pop
jge
xor
popa
jmp
fmull
imul
cld
xor
cmp
xchg
push
push
shlb
insb
daa
push
divb
repnz
popa
cmp
or
cld
test
and
mov
mov
xorb
jp
adc
xchg
dec
or
push
and
inc
and
jns
fnstcw
jmp
jg
xchg
icebp
or
jo
ds
adc
test
dec
add
sti
cmp
cmpsb
xchg
mov
faddl
push
pop
cmpsb
dec
outsb
pop
xchg
pop
rorb
mov
mov
sarb
mov
xchg
sbb
shll
dec
xadd
jecxz
inc
loope
jb
cmc
inc
push
inc
sbb
es
dec
sbb
cltd
outsl
fistl
mov
push
ja
mov
fxch
lods
add
loop
lcall
and
pop
negb
jle
inc
test
mov
adc
or
mov
orb
aas
pop
movsb
jg
icebp
inc
out
sbb
repz
pop
jmp
or
int
inc
roll
testl
dec
xor
jb
inc
test
data16
jo
fbstp
out
dec
push
movsb
sbb
cmp
and
dec
jo
mov
xchg
aam
or
sahf
outsb
pusha
or
fadds
cmp
push
push
push
mov
mov
push
lods
lret
shll
lock
test
repz
loop
sbb
or
lock
and
push
add
fcoml
cmp
lret
in
loop
mov
ljmp
enter
mov
shl
lods
les
mov
jb
jae
fsubl
sti
inc
lret
out
jg
cli
ja
aam
xchg
xlat
or
arpl
pop
adc
mov
fst
insl
imulb
and
sub
jb
dec
out
test
fnstenv
dec
jle
lcall
or
and
popf
popf
or
loopne
into
mov
out
push
jbe
cli
test
lock
cmpsl
cmpl
dec
popf
lret
and
stos
add
ret
out
mov
sahf
stc
inc
sbb
rorl
jmp
mov
xchg
mov
rcrb
and
lea
fcomps
ret
or
nop
add
scas
mov
jecxz
stos
lock
mov
jb
rcr
in
push
xchg
iret
mov
xlat
or
mov
cmp
push
loope
sub
mov
and
push
ss
fdivp
sti
cs
jle
repz
and
out
dec
fisttps
les
rolb
add
pop
xor
rorl
add
gs
push
fs
pop
mov
je
pop
xor
lock
xchg
push
jp
pop
popa
push
jmp
out
movsb
mov
jl
test
mov
jae
neg
mov
sbb
pop
cli
idivb
test
mov
pusha
inc
mov
jne
jno
lahf
pop
lret
call
and
nop
lcall
sub
dec
add
scas
mov
mov
shl
arpl
inc
xlat
and
pop
lock
add
lds
xchg
pop
cmp
xchg
cmc
into
jbe
xchg
stos
xchg
je
or
je
das
shrb
jp
mov
mov
popf
inc
out
in
jle
mov
rcll
sahf
in
cwtl
push
jge
add
cmpsl
mov
ja
jecxz
cmp
xchg
adc
push
nop
stos
sbb
scas
test
mov
dec
pushl
jne
and
push
test
inc
pop
and
mov
mov
imul
cld
scas
mov
mov
push
cmpsl
or
es
mov
out
sbb
cwtl
or
popa
push
stc
in
sahf
int3
daa
hlt
push
loopne
loop
mov
inc
iret
sub
outsb
cmp
pop
cld
inc
ficoml
dec
pop
dec
pop
data16
fcmovu
jne
and
pop
pop
outsb
inc
imul
lock
jnp
pop
or
out
pop
jle
ror
cmpsb
sub
jmp
imul
stos
scas
test
push
jno
jb
fsts
jbe
mov
lret
repz
push
sbb
and
dec
inc
push
push
fimull
lahf
loopw
dec
aam
nop
rolb
cli
loope
xchg
lahf
cmpsl
js
loope
enter
and
addr16
lcall
mov
pop
mov
lret
mov
lods
dec
mov
cmpsl
dec
pop
mov
lret
cmp
push
push
nop
pop
inc
pop
scas
scas
push
xchg
lret
push
enter
jbe
mov
hlt
fmull
pushf
xchg
inc
aas
mov
sub
int
in
out
push
enter
imul
xchg
insb
hlt
adc
dec
push
ss
jl
icebp
stos
cs
push
sbb
jb
add
or
sbb
jnp
cmpsb
out
add
dec
stos
fimuls
pop
adc
or
mov
fiaddl
test
pushf
add
jmp
push
dec
test
fcmovbe
adc
fs
insl
mov
pop
push
xchg
imul
daa
xor
enter
movsb
mov
jo
repnz
addb
into
js
jle
mov
arpl
jecxz
pop
leave
and
or
lcall
mov
xchg
add
and
pop
push
mov
pop
add
test
mov
jnp
push
jae
out
jae
rcl
mov
sub
shrb
cmpsb
jbe
shr
test
pop
aas
rorb
arpl
das
fimuls
cvtps2pd
mov
stos
popf
int
mov
insb
sar
std
shll
shl
pop
js
aas
push
adc
sub
loop
mov
test
jp
scas
jnp
dec
pop
test
shl
xchg
push
pop
push
shr
xchg
adc
stos
adc
jne
xchg
psllq
sub
mov
add
xor
xor
jecxz
mov
fildll
out
or
test
jg
add
insb
mov
dec
sub
sar
scas
shll
adc
adc
loop
movsl
push
inc
push
push
jmp
add
jl
aas
loope
xor
add
sahf
leave
adc
mov
daa
adc
enter
mov
push
ret
adc
xchg
cmc
mov
adc
in
stc
lock
out
divl
sub
stos
dec
cld
jge
repnz
or
sar
loope
push
xchg
loop
fisttpl
jno
outsl
jo
cmp
divl
jne
cmp
mov
mov
stos
cmpsb
jo
fcmovnbe
movsl
and
inc
jmp
pusha
jnp
mov
mov
mov
icebp
pop
adc
xor
push
or
aas
sbb
mov
xorb
lods
inc
dec
adc
dec
fs
ja
scas
push
pop
ret
mov
sub
inc
jp
mov
and
loop
lret
or
repnz
cwtl
inc
xor
in
jl
push
push
aaa
jae
insl
andl
cld
add
mov
inc
or
mov
subb
dec
xchg
dec
push
in
in
lods
xchg
ret
xor
ja
push
cs
adc
mov
fmuls
pop
cld
xchg
dec
dec
jg
sarl
shl
fistps
dec
pop
cmp
sub
dec
sbb
scas
aaa
and
push
shlb
mov
mov
or
mov
push
iret
dec
loope
mov
and
out
xchg
test
lcall
inc
pop
sub
das
adc
jne
fwait
les
push
mov
in
cwtl
xor
jb
ret
in
pop
test
pop
in
cmp
push
or
imul
addl
cli
sbb
negl
and
sub
xchg
mov
lods
aas
sub
sub
sub
imul
xchg
dec
test
cld
fcomi
mov
roll
scas
sbb
xchg
icebp
add
jnp
lods
jg
sahf
sti
jl
insl
sbb
sahf
pop
ja
xchg
inc
hlt
fimull
sbb
xchg
mov
cmp
mov
lock
shrb
les
mov
lret
or
jmp
push
movsl
fwait
mov
mov
fsubl
icebp
lcall
pop
cwtl
xchg
pop
mov
inc
mov
loopne
pushf
jecxz
pop
xchg
cli
push
sahf
adc
lret
mov
in
xor
xor
sbb
push
icebp
xlat
pop
cmpsl
jge
pop
andl
cwtl
mov
jnp
shll
js
jo
andb
inc
push
sub
fisubs
xchg
xor
ret
rol
movsb
in
in
fistps
dec
sbb
and
fisubs
arpl
cmp
pop
out
clc
movsl
cltd
xchg
or
rcl
test
cmc
jge
cli
lret
xchg
aas
mov
lods
and
test
adc
scas
push
rolb
push
daa
aas
movsb
mov
pop
mov
sarb
daa
mov
rcpps
xchg
cmp
inc
push
inc
call
inc
scas
inc
mov
mov
sbb
mov
lods
es
fbstp
cmp
sub
iret
inc
inc
je
adc
sbb
in
add
sub
shlb
ficompl
sub
inc
mov
push
jae
aam
sti
lret
sub
imul
and
mov
cmpsl
gs
faddl
add
mov
pushf
xor
aaa
out
aam
xchg
jne
xchg
mov
sub
ljmp
adc
int3
mov
std
xor
pop
mov
dec
and
clc
rorl
push
adc
push
shrb
mov
pop
jp
or
xor
mov
jmp
and
lcall
lock
xlat
xor
test
mov
or
scas
bound
push
cwtl
out
pop
dec
jbe
xchg
pop
mov
cmp
dec
stos
dec
out
add
addr16
add
inc
cmp
test
xor
push
cld
cld
sbb
mov
cld
pop
es
movsb
dec
dec
popa
loope
movsb
sub
pop
lret
cmp
mov
neg
sbb
popf
jae
outsl
out
dec
push
sarl
inc
xor
rorb
xor
aas
je
test
adc
dec
pop
or
mov
repz
jecxz
inc
xor
pusha
xor
scas
cmp
loop
test
es
xor
shlb
push
and
sbb
rcll
outsl
dec
push
adc
bound
movsl
int3
adc
stos
xchg
mov
push
inc
cltd
out
hlt
sub
cmpsb
shlb
scas
and
xor
lret
or
shll
frstor
mov
fldcw
mov
imul
lds
push
shrl
mov
loope
test
sbb
rorl
lcall
lea
dec
add
imul
daa
add
jmp
repz
nop
inc
or
ljmp
mov
push
mov
sub
push
lcall
insl
nop
leave
mov
push
pushf
mov
mov
ljmp
das
xchg
xor
mov
xchg
cmpl
out
xor
pop
iret
fcom
mov
dec
sbb
cmp
mov
mov
aam
xchg
xchg
insl
cli
aas
sub
push
andl
testl
adcb
repz
aam
jp
and
cmc
push
das
lods
jo
hlt
or
mov
sbb
dec
xchg
cmp
inc
lret
loopne
add
rorl
hlt
adc
jo
das
cld
lcall
loopne
inc
ss
daa
cmp
mov
insb
test
push
lret
daa
xor
push
fxch
mov
xchg
push
sbb
jmp
mov
pop
adc
and
xor
add
xlat
cmp
mov
dec
rcll
data16
xchg
xchg
push
adc
and
lock
inc
cmc
aad
inc
push
mov
jae
cwtl
xchg
mov
aad
ja
arpl
mov
aaa
mov
int
cmpsl
cmc
adc
push
sahf
stos
mov
pop
test
in
jle
inc
out
mov
mov
sub
jl
push
push
andl
gs
push
or
xor
leave
jmp
dec
enter
pusha
xchg
jge
inc
and
stos
sahf
and
mov
push
bnd
test
mov
xchg
jo
dec
ljmp
xchg
xlat
jmp
sbb
push
cmp
jg
add
inc
lahf
aas
jl
push
xchg
xor
adc
lret
push
loope
sbb
daa
pop
es
fcoml
enter
xchg
and
adc
out
sub
pop
sub
xchg
cmp
js
mov
test
and
ret
ficoms
or
mov
push
pop
stos
jecxz
inc
sub
adc
ret
cmp
add
pop
stos
sub
jle
dec
scas
outsl
orps
int3
icebp
test
pusha
adc
mov
push
jns
push
xchg
sbb
lret
mov
adc
movsb
test
jbe
addr16
cmpsl
insl
mov
ffreep
jb
mov
adc
xor
cmpsl
pop
xorb
imul
dec
nop
pop
decb
push
ds
or
outsb
add
mov
arpl
xchg
int3
dec
ss
fwait
adc
cmp
stc
jb
sbb
sub
push
sub
push
fdivrl
mov
adc
pop
mov
addb
mov
lock
iret
fiaddl
mov
in
xorb
sbb
add
sub
cmp
mov
sbb
fistps
repz
les
fnstsw
std
sbbb
aas
xchg
or
daa
pop
aaa
pop
mov
xor
push
sub
sbb
clc
lcall
lock
mov
lret
inc
push
sbb
sub
cmp
add
mov
adc
rcrb
nop
push
mov
push
push
or
aam
pause
dec
sbb
outsb
outsb
or
xor
jl
add
out
aaa
inc
lods
cmpsb
cltd
cs
jmp
into
cmpsl
fiaddl
daa
sarl
xchg
outsb
sbb
lret
mov
mov
jns
adc
mov
clc
mov
adc
out
shl
popa
sarl
rcll
mov
int3
fnsave
testb
and
call
inc
fcomip
ja
stc
hlt
mov
stc
ret
cmp
jbe
jge
fistl
cmpsb
inc
push
push
cmc
and
jnp
movsl
nop
mov
lret
sbb
mov
mov
cli
xlat
xor
xchg
or
jp
lret
mov
hlt
leave
mov
fisubs
inc
aad
xor
inc
mov
adc
mov
sbb
dec
ja
in
and
aad
nop
scas
in
ljmp
fs
pop
cmp
movsb
cmp
dec
in
notl
push
sahf
or
fidivrs
leave
ss
jbe
cmpsl
and
ret
inc
lods
add
fldenv
xchg
negl
cmp
test
loop
orb
add
stc
dec
jo
outsb
push
inc
inc
js
lcall
leave
mov
cli
add
pop
xor
sub
ds
fwait
inc
mov
sub
loop
ret
sbb
orl
fld
sbb
lret
shr
inc
mov
adc
mov
push
jae
lds
xchg
sbb
jne
cs
es
mov
dec
jns
out
sbb
pop
pop
rcrb
cmp
stos
lret
movsl
lods
ror
imul
push
adc
lret
sbb
out
cmp
inc
push
jmp
fiaddl
pusha
test
xchg
cmp
jl
sub
sub
jnp
sub
cmp
das
test
fs
push
push
push
and
push
inc
ret
mov
xchg
lahf
add
push
enter
jp
aam
mov
mov
lock
in
popf
pop
adc
add
add
mov
xchg
pop
sub
inc
xchg
adc
movsl
mov
xor
fldcw
pop
xor
pop
scas
mov
mov
je
xlat
sub
push
incb
xchg
in
cmp
outsb
es
fs
adc
sbb
test
jl
bound
aad
mov
push
push
lahf
sarl
hlt
jl
sbb
or
pop
jae
lods
mov
stos
pop
ret
sbb
leave
out
push
mov
xchg
out
cmp
shll
clc
es
push
dec
sbb
xor
inc
js,pn
cmp
jae
mov
in
std
movsb
mov
daa
mov
mov
lea
dec
scas
jns
inc
int3
icebp
dec
mov
mov
call
lahf
or
ss
lcall
and
jnp
adc
sbb
mull
mov
push
mov
cmp
xor
mov
ljmp
dec
ja
mov
xchg
sbb
sti
out
or
ds
mov
test
jns
mov
test
pop
cli
stos
xchg
pop
mov
gs
shr
and
fimuls
jl
sbb
cmp
pushf
mov
ucomiss
dec
das
in
or
in
std
in
pop
xchg
jg
xor
mov
xchg
scas
orl
jl
pop
inc
or
mov
sahf
and
add
jne
shrb
scas
mov
mov
mov
mov
adc
sbb
add
aam
cmp
jne
add
mov
lahf
inc
scas
sbb
lahf
clc
repz
sbbl
and
lea
dec
movsl
packsswb
adc
addb
jle
pop
xchg
jle
and
sub
inc
cmp
fwait
add
cmp
aam
out
adc
enter
jecxz
test
cmp
add
stos
adc
cltd
outsl
or
add
sahf
jns
test
sbb
bound
fists
cld
call
and
popf
dec
xlat
aaa
jmp
out
xor
loopne
sub
fildl
push
lods
sarb
jle
pop
stc
mov
stc
mov
jmp
sbb
or
jmp
jno
adc
aaa
push
lea
aas
out
nop
cmp
and
arpl
stc
bound
jnp
mov
pop
repnz
fsubl
stos
outsl
outsl
das
pop
std
xor
and
in
xor
add
movsl
xor
dec
sub
out
push
ja
test
xchg
cmp
cwtl
addb
std
jg
cwtl
imul
test
jo
mov
pop
jmp
xor
fcmovnbe
adc
sbb
mov
sub
out
adc
mov
popa
lea
bound
xor
and
jae
mov
jle
cld
adc
sbb
stc
jl
es
xchg
cltd
pop
push
adc
pop
hlt
test
stc
and
fsts
outsb
jns
cmp
pop
jp
cmpsb
sbb
jae
fisubs
divb
in
dec
xor
loop
xchg
mov
imul
xor
sub
mov
xchg
and
sahf
inc
js
xchg
sbb
or
aas
mov
nop
test
push
xchg
int
xor
jp
sub
cmp
lods
sqrtps
imul
cld
in
mov
mov
sahf
jnp
jae
mov
dec
and
jge
jne
mov
pop
ss
mov
shll
ret
cmp
icebp
inc
inc
mov
adc
pushf
aaa
gs
lea
mov
repnz
enter
sbb
push
test
mov
mov
cwtl
mov
cli
inc
fdivs
outsb
dec
sbb
scas
jnp
out
inc
movsl
cmp
cltd
jge
push
wbinvd
cmp
aam
in
out
fwait
lods
sub
xchg
leave
sbb
loopne
add
mov
mov
insb
mov
xlat
inc
xchg
xchg
dec
nop
fdivp
ja
outsb
scas
lret
xchg
jp
addr16
pop
and
push
add
out
lcall
inc
ret
jae
stos
cmp
ja
leave
mov
pop
stos
aad
std
mov
into
push
xor
inc
popa
dec
xchg
lahf
movsl
lea
mov
lds
imul
ror
dec
mov
hlt
jg,pn
cld
and
mov
pop
mov
loopne
pop
adc
nop
loopne
das
fdiv
adc
add
mov
fsts
mov
fwait
test
incb
mulb
add
inc
mov
cmpsb
loop
dec
fsubr
sbb
mov
xchg
cld
sbb
or
push
sbb
pushf
sbb
mov
mov
xor
mov
outsb
jo
jg
mov
arpl
push
xchg
stos
popf
xor
xlat
fnstsw
mov
lds
int
data16
out
push
mov
mov
fldenv
js
je
inc
dec
ftst
leave
pusha
pop
xor
sub
dec
pop
fldt
xchg
ret
stc
fwait
push
xchg
jmp
and
pushf
in
xchg
outsl
xchg
pop
push
or
sub
ja
push
out
icebp
in
mov
mov
insb
push
iret
dec
push
insb
sbb
sbb
adc
inc
jne
aas
lcall
pop
mov
fdivp
fwait
xchg
mov
out
mov
icebp
call
js
dec
cmp
and
imul
pop
jmp
in
dec
and
movsb
popa
jb
jns
push
jge
jmp
loop
xchg
inc
addb
insb
xchg
out
out
cld
adc
mov
cwtl
push
mov
or
dec
cli
es
and
fstp
and
jne
adc
cmp
push
loopnew
cmpsl
sub
int
mov
cmc
ja
cs
test
inc
daa
add
cmp
dec
dec
jne
pop
adc
std
stc
mov
mov
sub
adc
outsb
shll
fisttpl
outsl
xchg
jmp
lahf
jno
das
and
int3
inc
sbb
rclb
push
das
in
imul
fnstcw
pusha
xchg
je
jl
cltd
icebp
shlb
repz
rclb
out
out
and
jno
pop
jns
jp
imul
scas
adcb
ss
sub
jge
pop
jne
sub
nop
sbb
in
inc
test
push
xor
lret
jmp
sub
addb
stos
xchg
mov
daa
cmc
rcrb
stos
mov
xor
enter
cmp
loopne
inc
and
adc
add
in
inc
jne
daa
clc
add
jnp
inc
stos
outsb
outsb
pop
or
sbb
sub
lods
mov
or
bound
mov
cmc
pop
push
or
cmc
das
pop
in
or
dec
sub
dec
mov
int3
dec
clc
scas
and
cs
imul
scas
and
xchg
mov
mov
enter
stos
fwait
adc
or
pop
push
dec
dec
aad
dec
loopne
xchg
gs
movsb
xchg
popf
adc
or
loop
or
add
pop
popf
mov
in
in
aad
not
mov
push
in
mov
repz
ret
std
leave
daa
aas
push
lock
pop
xchg
inc
mov
es
or
fcomps
imul
das
sahf
movsl
jg
mov
in
cmp
pop
xchg
scas
sbb
cld
movsl
or
dec
loopne
or
mov
stos
add
loopne
push
das
inc
push
and
mov
loop
pop
xchg
jb
adc
mov
int3
sbb
xchg
mov
ret
sbb
cmp
adc
jl
dec
shrl
push
xor
loop
jp
ret
fistpl
ss
into
add
jmp
lret
sbb
or
inc
push
dec
lcall
ljmp
xchg
cmp
mov
das
lods
push
sbb
sub
rcrb
loopne
test
std
and
lahf
popf
mov
jnp
fadds
or
lret
push
cmpsl
and
cmp
mov
sbb
in
pop
cmpsb
pop
adc
imul
movsl
jb
stc
pop
fcoml
fidivrs
push
loop
add
loopne
jno
mov
jg
lods
jbe
out
leave
out
mov
mov
dec
jg
icebp
cltd
fstl
mov
pop
or
or
jo
dec
cmp
test
sti
test
xchg
in
pusha
jecxz
and
fwait
add
dec
fdivrp
outsb
or
fists
dec
push
loop
jle
inc
jbe
lret
sub
push
mov
stos
mov
jmp
and
mov
pop
mov
imul
nop
inc
pop
pushf
jl
mov
fisttpll
orl
sbb
pop
and
rcrb
xchg
das
cmc
jecxz
sbb
lcall
repnz
push
lea
fldcw
pop
xor
push
outsb
adc
leave
xor
outsl
int
cwtl
test
je
bound
mov
icebp
mov
jmp
scas
fcoml
popf
push
and
xor
mov
or
mov
jnp
mov
out
jns,pt
out
dec
inc
loopne
push
out
mov
xchg
fisubrl
in
data16
fs
add
add
sbb
arpl
rcrl
and
lret
sahf
xor
outsb
lea
mov
pusha
and
mov
cs
mov
test
xorl
xchg
inc
cmpl
adc
mov
adc
imul
inc
cld
fstpt
push
add
arpl
jge
dec
les
sti
fists
repnz
or
jo
push
test
clc
or
mov
test
push
std
fiaddl
dec
ljmp
ds
sahf
mov
mov
sti
into
push
inc
jl
or
imull
int3
fistpll
mov
or
fld
push
cs
sahf
movl
adc
sbb
aam
pop
mov
mov
cmpsl
dec
dec
mov
insl
push
icebp
mov
repz
sub
test
cs
scas
inc
nop
fsubr
sahf
dec
and
addr16
pop
xchg
rorl
jmp
jp
lods
ror
cwtl
mov
fnstenv
shlb
in
adcl
call
cmc
int
jno
fs
lods
rcrl
mov
mov
stc
pop
or
movsl
mov
mov
popa
pop
mov
imul
xchg
xor
mov
xor
js
jno
dec
bound
outsb
jmp
out
stos
daa
xchg
xor
mulb
loop
frstor
int
inc
shl
int3
cmp
pop
mov
mov
jg
icebp
sub
mov
ja
push
pushf
push
add
scas
jecxz
xor
stos
fsubl
mov
xlat
ret
outsl
xor
add
xchg
mov
dec
pop
push
sbb
mov
inc
scas
out
mov
push
cs
jns
mov
pop
sar
sahf
lods
and
daa
mov
and
pop
mov
jp
mov
call
or
je
fucom
addl
mov
mov
sti
mov
add
xchg
popf
mov
push
adc
gs
lods
inc
cwtl
and
add
mov
rolb
push
pop
lret
push
jo
jb
mov
pop
dec
mov
ljmp
imul
xor
pop
jecxz
and
lea
xchg
out
mov
aam
lods
sbb
cltd
ret
pop
mov
dec
jbe
ds
cld
xchg
mov
push
cltd
push
imul
popa
fstpt
lock
je
imul
rclb
xchg
mov
notb
pusha
xchg
std
pop
lods
lret
mov
adcb
insl
push
or
and
loop
lcall
stos
hlt
push
add
lds
mov
adc
and
iret
in
sarl
sub
aaa
cmpsb
ss
sub
sbb
lds
mov
dec
adc
sar
mov
lret
sbb
sub
xor
mov
ja
push
adc
out
adc
sahf
imull
fidivs
das
bound
mov
fwait
ja
jg
lods
add
ja
fwait
lret
cmp
scas
cmc
cmp
sub
scas
scas
lods
mov
jecxz
cld
aaa
mov
incb
push
dec
xchg
dec
mov
in
loopne
cmp
das
shlb
movsb
xor
in
pusha
mov
iret
cltd
rcrb
pop
dec
dec
add
jge
movsb
push
aad
mov
stc
xchg
clc
bound
out
cld
jbe
lea
int
fadd
adc
mov
and
into
mov
jg
dec
lret
jecxz
jno
sbb
mov
lds
sbb
lods
fdivl
adc
ss
addb
push
je
sbb
xorl
pop
inc
xchg
mov
out
movsb
and
inc
mov
dec
pop
mov
mov
mov
cwtl
sbb
inc
mov
adc
je
fwait
jne
or
adc
mov
pop
add
push
pop
cmp
xor
movsb
xlat
bound
lahf
xor
out
in
mov
movsl
arpl
lret
invd
push
sti
lds
mov
cmp
ret
pop
std
xor
loop
dec
xchg
fsubs
xchg
add
fbld
in
sbb
cmp
cld
ds
mov
lret
das
popa
out
add
fists
insb
out
inc
sbb
lds
aad
xor
rorb
in
dec
addr16
dec
adcb
andb
cwtl
out
addr16
mov
into
dec
inc
pop
lret
repnz
std
inc
jle
lods
cmp
ror
stc
xchg
js
dec
pop
popa
adc
stos
ret
movsb
or
js
sar
cmp
rolb
test
hlt
push
lret
mov
dec
outsl
lods
ds
and
daa
sub
adc
sti
adc
lcall
lcall
mov
cmp
movsb
push
std
icebp
dec
push
dec
stos
pop
stos
xlat
stos
and
test
cmp
cmp
test
orb
mov
fcompl
xor
sbb
xor
jle
push
mov
dec
enter
adc
push
lcall
xlat
cmp
jns
bound
mov
push
add
jle
adc
sub
in
pusha
push
loopne
ds
cmp
shll
stos
rcrl
dec
lds
lret
jb
lret
xlat
cmp
fnstenv
jmp
xchg
test
scas
ficoml
mov
scas
jb
test
rcrb
dec
dec
movsl
ja
sub
xor
mov
out
test
push
bound
out
push
sbb
push
test
pushf
cmp
ret
pop
ljmp
cltd
pop
dec
scas
jmp
int3
xchg
dec
jmp
xchg
rcll
outsl
mov
mov
mov
dec
cmp
pop
jp
cmc
gs
cwtl
int3
scas
and
inc
mov
les
fstpl
xor
lret
popa
mov
push
js
pop
jg
pop
inc
push
fcmovb
inc
adc
sbb
push
mov
cmp
inc
push
xor
and
aad
mov
xor
sbb
cmp
mov
mov
jnp
and
xorl
and
movb
and
xor
push
mov
cwtl
mov
enter
repz
test
sbb
outsb
mov
push
mov
push
xor
jnp
sarl
lock
push
bound
mov
lret
incb
pop
or
add
dec
addl
jae
in
aas
imul
fdivl
insb
pushf
dec
and
int3
mov
jmp
iret
sub
sub
dec
push
sbb
mov
xor
cs
enter
dec
or
mov
jl
andb
jbe
lea
leave
inc
andl
in
xor
inc
daa
js
test
mov
adc
mov
jmp
mov
test
test
das
cmc
addr16
popa
push
popa
push
loopne
sti
dec
decl
mov
loop,pn
lcall
xor
jbe
mov
and
int3
jbe
mov
mov
cwtl
jecxz
lods
out
int3
sbbl
stos
mov
jmp
sahf
gs
ss
jge
xor
mov
jle
notb
outsl
xor
mov
jle
sbb
mov
int3
pop
inc
shlb
insb
stos
dec
fistpll
mov
jae
mov
mov
or
jns
adc
dec
sbb
mov
imul
pslld
cwtl
cwtl
gs
cmp
inc
push
cld
inc
xchg
sahf
lret
repz
jge
lods
mov
mov
pop
inc
fdivl
les
and
cmpb
push
push
fbld
mov
jmp
pop
xchg
andl
mov
cmp
repz
enter
adc
xchg
mov
mov
ror
sub
xchg
xlat
ret
fisubrl
ljmp
add
mov
lret
mov
in
push
mov
lds
jmp
test
or
pop
mov
fmull
arpl
mov
xchg
and
xchg
loopne
and
cld
into
xor
or
add
lret
inc
arpl
flds
sbb
mov
inc
es
lret
or
das
cmp
movsl
xor
lahf
sbb
mov
inc
mov
lea
lcall
add
cmc
mov
dec
je
lea
iret
stc
test
jne
push
add
jno
mov
push
jo
jge
mov
mov
clc
push
or
mov
xchg
xchg
pop
ret
aam
popa
inc
sbb
pop
js
xchg
insb
jmp
jl
sub
add
dec
mov
fs
lret
cmp
iret
into
jg
jp
fsubrs
sub
dec
or
inc
ja
mull
shlb
jl
in
sub
cmp
loop
adc
out
mov
pop
test
cld
push
in
or
push
movsl
shl
incl
in
scas
add
cmc
mov
fucomi
mov
inc
negl
xor
mov
xor
dec
cld
inc
decl
mov
inc
nop
inc
inc
push
xchg
arpl
xor
mov
loopne
or
sub
jb
fdiv
cmp
cmp
inc
push
lcall
adc
out
mov
mov
adc
sahf
testl
sahf
and
jp
add
pop
cli
xor
pop
pop
jnp
sti
pop
out
icebp
inc
jb
dec
mov
shrb
mov
test
fisubs
jb
jae
mov
pop
fnstenv
mov
lea
ret
mov
pop
ss
lcall
or
jg
das
pop
or
lock
xchg
push
cmp
xchg
inc
ficoms
cmc
sbbb
adc
pop
addb
xlat
inc
sub
iret
mov
mov
popa
xchg
jecxz
jns
push
sub
js
mov
pop
out
or
cli
lret
push
shl
cli
gs
out
sbb
jnp
les
xchg
ret
lahf
dec
adc
cmpl
cmpsl
add
pop
xlat
lds
push
aaa
repz
adc
ss
mov
sub
fs
mov
jae
aaa
in
dec
dec
sbbl
scas
push
inc
repz
loopne
jae
push
scas
aaa
es
cmp
or
pop
daa
xchg
mov
cs
pop
js
adc
jl
sub
add
cmp
dec
mov
mov
adc
ja
shlb
push
and
out
jg
sbb
arpl
mov
lods
ret
into
inc
inc
ret
cmp
js
add
xchg
mov
sbb
push
sbb
push
dec
in
lahf
xorb
cmc
inc
outsb
test
dec
add
jae
mov
jbe
ljmp
cli
cmp
cmpsb
dec
mov
icebp
push
shlb
add
jmp
inc
shl
fildl
jb
sbb
dec
cmpb
adc
mov
mov
jmp
das
inc
push
sbb
xchg
gs
pop
push
jo
xor
aas
xor
lret
icebp
ret
divb
call
adc
push
mov
mov
add
adc
jo
sub
in
movb
stc
add
add
mov
xchg
std
call
data16
xor
fsubrs
sub
rol
repz
or
cmc
aas
mov
inc
jbe
and
push
pop
xchg
xlat
test
repz
mov
pusha
movl
dec
addr16
cmp
jno
cmp
arpl
stos
fwait
xlat
jne
mov
aad
ja
pusha
mov
fmuls
filds
movsl
jg
out
pop
and
dec
cltd
jecxz
outsb
mov
inc
pop
ds
push
mov
cmp
sub
mov
pushf
loope
sbb
js
sub
test
push
adc
in
mov
fs
xlat
fcomps
sbb
clc
clc
into
jp
jle
and
lcall
mov
int3
or
jecxz
or
mov
xchg
lret
pop
push
mov
mul
jp
jnp
and
mov
cmp
jecxz
push
mov
or
roll
or
es
fcoms
fadds
adc
ds
xor
add
ret
inc
dec
test
frstor
xorl
sub
pop
or
jg
addr16
leave
sub
cmp
das
insl
jo
xor
scas
pusha
andl
call
mov
jae
cmp
add
jecxz
push
or
mov
inc
jb
mov
mov
loop
or
pop
push
inc
ja
xor
out
loopne
and
pop
test
xchg
add
push
jno
pop
add
iret
sti
lods
lret
push
pop
sbb
and
xchg
jmp
cltd
and
sbb
cmp
and
negl
mov
fsubs
mov
mov
nop
cmp
sub
sbb
jmp
movsl
scas
sub
lea
and
in
mov
add
aad
jl
loop
xchg
xchg
in
mov
ja
ror
in
jb
lcall
in
push
in
adc
repnz
add
in
out
rorl
dec
inc
sub
repz
inc
iret
mov
push
loop
sbb
xlat
adc
mov
mov
inc
insb
push
inc
xchg
push
and
jnp
clc
dec
mov
test
js
mov
jne
adc
subb
xchg
test
push
lds
cs
push
pusha
jno
popf
pop
mov
jne
sub
mov
lods
sub
fildl
ljmp
xor
addr16
scas
popa
call
ljmp
aad
lea
mov
mov
popa
call
lods
xchg
xchg
push
jg
adc
lret
fstpt
test
idivl
cmp
mov
jge
xchg
pop
insl
lret
push
inc
stos
pop
jl
mov
fisubl
adc
mov
adc
sbb
dec
stos
cmp
xorb
cld
fiaddl
cmpl
insl
mov
cmp
scas
mov
add
ss
adc
push
mov
xchg
push
cmp
fcmovb
push
insl
push
mov
lds
jbe
or
mov
cli
pop
test
cmp
add
movsb
xchg
pop
jb
xchg
shrl
add
scas
nop
cmpb
addl
out
push
lcall
arpl
push
lods
jae
lods
adc
insl
pop
in
jp
dec
maskmovq
testl
aas
or
mov
lods
dec
xchg
sahf
cmp
cs
jp
loop
xor
push
jae
ljmp
roll
cmp
outsb
and
sub
pop
mov
stos
sbb
fiadds
loope
inc
lret
xlat
cmp
xor
mov
sub
ljmp
fs
call
jo
mov
mov
sbb
in
andb
sti
dec
mov
ljmp
ficoml
cmc
mov
mov
movsb
jnp
cltd
sub
jecxz
inc
sub
push
imul
jp
mov
push
cs
sub
mov
loope
enter
repz
add
insb
jmp
stc
mov
das
xchg
add
xchg
mov
popa
pop
xchg
test
mov
int
push
sbb
push
repz
push
mov
sbb
xor
aas
mov
in
xchg
icebp
mov
dec
loopne
mov
popa
sub
sub
stc
fs
mov
je
dec
pushl
and
jb
dec
aas
fnstcw
adc
sbb
mov
push
jmp
hlt
stos
pop
icebp
out
add
jp
sub
fcmovb
jne
xlat
mov
jno
mov
shll
adc
testb
dec
inc
pop
inc
xchg
arpl
add
and
mov
sbbb
jmp
mov
jg
sbb
test
cmpsb
dec
in
mov
xchg
scas
sub
adc
cmpsb
test
movsl
cltd
push
imul
dec
or
push
addr16
or
push
nop
fxch
sub
sbb
pop
push
gs
outsb
mov
dec
mov
pand
xchg
sbb
pop
xchg
test
in
inc
insl
mov
cmpsb
adcl
jb
add
rcrb
add
push
jle
mov
insb
cltd
lods
ret
mov
les
nop
adc
dec
movsl
sarl
nop
and
je
orl
xlat
arpl
cwtl
jl
mov
pop
adc
add
bound
cmp
mov
push
and
push
and
jno
dec
add
dec
ss
iret
dec
std
jmp
add
sti
outsl
cmp
pop
mov
in
aam
pop
lahf
cmp
cmc
je
mov
sbb
into
insl
sbb
fnstenv
or
dec
cli
dec
dec
pop
sbb
xchg
in
cmp
or
mov
cwtl
lods
xor
adc
sbb
ror
add
dec
sbb
js
mov
pop
mov
stos
daa
add
or
in
ret
dec
loop
imul
lahf
fidivrs
imul
mov
scas
orb
mov
mov
ret
es
mov
rcr
push
pop
inc
nop
ret
repz
mov
push
lods
push
dec
movsb
xor
xchg
loope
dec
clc
in
inc
jge
cmp
fnstenv
out
mov
pushf
sbb
push
xchg
adc
bound
dec
mov
and
xchg
imul
addr16
in
sbbb
sbb
sub
rcrl
stos
xchg
xchg
mul
data16
pusha
fisubl
data16
loop
mov
mov
mov
call
dec
ljmp
pop
out
int3
sti
enter
push
and
push
fmull
mov
and
jne
mov
ss
addl
sbb
aad
jle
mov
xchg
dec
sbb
mov
lret
mov
movsb
mov
mov
pop
mov
ja
sbb
cld
mov
pop
sub
movsb
lock
adc
xor
aad
jne
sub
in
aas
cmpsl
mov
push
fldl
mov
inc
pop
xchg
repz
cmp
jecxz
jp
xor
les
rol
out
cmc
cmp
or
sarb
lods
or
sub
dec
xchg
std
jae
mov
push
in
sbb
repnz
hlt
jp
pop
and
push
pop
lea
push
out
out
repz
inc
push
dec
shll
push
and
out
cmpsl
jge
xor
sub
stos
or
sub
pop
fld
and
mov
popf
sub
mov
or
push
loope
insl
xchg
stos
cmp
shll
xchg
pop
dec
scas
mov
jmp
xchg
leave
cmp
fwait
dec
stc
and
clc
cmpb
sahf
cmpsl
cmp
jmp
inc
adc
decl
xor
fsubr
pop
cs
adc
gs
ror
shlb
mov
shrl
insl
aam
mov
dec
dec
or
insl
clc
scas
fcomps
dec
mov
add
cltd
mov
jns
lret
mov
stos
xchg
orb
ret
hlt
xchg
daa
ret
mov
nop
xchg
lahf
imul
fcmovu
fldenv
mov
xor
je
icebp
daa
xor
rcrl
cmp
add
test
popa
push
xor
push
dec
mov
imul
shrb
fwait
popf
enter
xor
scas
stc
out
cmp
fcompl
subl
daa
or
add
std
sahf
cmp
cmpsb
push
scas
mov
mov
out
dec
or
sub
push
and
ss
mov
cltd
pop
out
pop
inc
and
jae
mov
call
lret
mov
dec
dec
sub
xor
mov
aaa
or
xchg
sub
test
adc
out
ret
jl
xchg
adcl
xchg
cmp
sti
sbb
add
dec
int
pop
imul
mov
adc
leave
jnp
and
stos
ficomps
mov
jae
movsb
push
inc
xchg
cmpsb
lret
mov
xchg
aaa
pop
mov
or
cmp
cs
mov
and
cmpsb
mov
lcall
out
push
test
pop
add
push
mov
sub
das
testl
rcll
push
fmulp
push
or
xchg
out
jns
or
leave
ds
pop
or
aas
dec
sub
stos
jo
ja
mov
aad
xor
stos
cmp
je
fbld
push
addr16
add
pop
mov
int
sub
fwait
xchg
mov
lock
push
inc
push
cmpsl
les
loopne
pop
ja
leave
xchg
ret
dec
stos
dec
test
mov
jmp
xor
or
fstpl
jle
push
push
sub
cmc
or
cmpsb
imul
or
mov
lods
xchg
pop
and
xor
scas
push
idivb
push
ja
and
out
xchg
fld
xchg
cmp
rcrb
jl
push
je
push
xchg
dec
ficompl
dec
or
xchg
mov
popa
lcall
mov
fsts
rcrb
mov
push
ret
fidivs
call
and
dec
pop
mov
cld
mov
fsubr
push
ret
jne
sub
aas
push
xor
mov
sub
sbb
xor
lcall
hlt
jne
cmp
pop
mov
out
pop
jbe
push
or
pop
and
jl
jne
cmpsb
hlt
jl
add
sub
pop
sub
fdivrs
lcall
pop
into
mov
stc
imul
mov
inc
mov
xor
fs
or
adc
pusha
push
mov
mov
add
loop
mov
in
divl
flds
lret
xor
mov
add
scas
mov
dec
and
fwait
sar
imull
fnstenv
jmp
push
cmp
cli
repnz
out
cmp
xchg
popa
dec
dec
mov
rorb
iret
lret
push
xlat
jge
add
adc
movsl
ljmp
ljmp
ficoml
and
shrl
inc
or
xor
adc
jle
sub
mov
es
jmp
das
push
sbb
inc
dec
js
pop
les
sub
dec
dec
push
xor
adc
sub
mov
outsl
in
cmpsb
mov
push
adc
das
jns
insl
sub
push
cmp
cmp
ret
push
xor
div
cltd
mov
test
out
push
aam
js
cmpsb
push
pusha
or
add
jmp
mov
je
and
push
stc
adc
mov
in
popa
push
mov
xor
inc
cwtl
xchg
push
mov
shr
fisubs
cmp
lret
adc
sbb
inc
pop
xchg
cli
xchg
mov
mov
dec
sub
scas
mov
fsts
xor
or
lret
testb
es
jle
and
shrb
adc
lea
and
into
ss
sbb
popf
out
in
int3
push
pop
dec
inc
cmp
xor
in
fmul
pusha
sbbl
stc
mov
cmp
xchg
push
xchg
inc
mov
dec
enter
mov
test
jo
pop
lcall
push
pop
movsl
and
test
imull
js
arpl
dec
or
xchg
movsl
roll
add
add
dec
or
imul
fwait
xlat
push
js
int3
or
jae
sub
mov
lods
insl
iret
and
testb
add
lahf
sbb
daa
dec
stc
adc
or
mov
xchg
cmpsl
arpl
movsb
and
sbbl
dec
pop
outsb
xchg
cmp
dec
add
aam
das
popf
movsl
xchg
mov
cmpsb
movsl
jle
cli
cmpsl
test
out
xor
push
das
ljmp
imul
xor
dec
cmp
lret
pop
or
mov
repnz
ja
jne
stc
fdivrl
adc
adc
call
ljmp
andb
adc
arpl
popa
add
mov
popf
mov
xchg
je
xchg
inc
or
mov
leave
lea
fidivrs
pop
cltd
or
lds
xor
popf
xchg
jmp
icebp
test
mov
sti
outsb
add
inc
in
mov
cmpsl
or
movb
jle
xor
sub
push
leave
jl
and
mov
jae
mov
faddl
cwtl
xor
sbb
sarb
lods
mov
adc
ret
push
dec
in
jbe
test
imul
push
stc
add
inc
fcompl
jmp
cld
ret
into
rcrb
push
push
shl
push
outsb
adc
pop
or
push
iret
cmpsl
mov
jmp
fnstsw
pop
mov
rcl
ret
repnz
fwait
out
popf
out
js
movsl
rorl
dec
cwtl
testl
xchg
aad
add
test
xor
sbb
hlt
cmpl
sbb
inc
xor
aam
push
mov
mov
dec
into
xchg
je
jge
and
inc
out
cmp
ficompl
flds
sbb
add
int3
sbb
dec
cmp
jns
fs
in
faddl
mov
hlt
xor
push
mov
xor
adc
rcrb
mov
fcmove
jl
sbb
jmp
insl
test
test
and
push
xchg
push
push
mov
jae
js
ror
pusha
test
sbb
push
stc
xchg
aaa
mov
xchg
je
popa
pop
xchg
xor
or
ret
or
into
xchg
sbb
icebp
or
dec
scas
gs
rorb
sub
nop
stos
xor
jbe
xchg
dec
mov
xchg
inc
add
mov
dec
dec
in
rolb
cmc
and
and
aad
push
pop
out
packssdw
shlb
fisttpl
cmpsb
stos
mov
and
push
imul
mov
enter
js
mov
idivl
and
hlt
fidivl
call
fcmovnb
mov
fisubrl
push
int3
inc
xchg
add
pop
xor
add
in
bound
mov
sbb
stos
jg
xchg
repz
sub
jg
pop
js
dec
sub
daa
push
mov
pop
lea
inc
push
mov
shr
cmp
sbb
and
stos
in
ret
inc
jmp
push
movb
dec
inc
loop
cmp
inc
aam
hlt
dec
aas
test
aam
mov
daa
cmpsl
data16
nop
stc
lea
jg
pop
in
lds
sbb
mov
add
dec
test
cli
jo
inc
cltd
jg
loope
iret
lcall
fcoms
inc
push
ror
pop
ret
bound
mov
cmp
in
sub
ja
cwtl
scas
pushf
ss
fwait
cli
rcll
adc
lock
jecxz
fildl
inc
jae
xchg
push
cmp
je
pushw
push
lret
xchg
push
shl
fdivrl
sbb
std
mov
repz
sarb
dec
mov
fcompl
fnstenv
add
sar
enter
mov
cmp
mov
dec
mov
and
pusha
or
lods
pop
aas
in
clc
xor
in
lods
xchg
sub
stc
add
push
mov
lahf
addl
out
pop
fcoml
imull
cmpsl
test
mov
push
xchg
in
add
mov
dec
push
into
ss
les
mov
mov
cwtl
fcos
es
scas
shl
outsb
out
scas
lods
and
shrb
mov
sub
xor
clc
pop
sub
mov
jmp
outsl
mov
jle
fsts
rcr
out
cmovne
jle
adc
cmc
push
jbe
in
adc
or
cwtl
into
adcb
lods
dec
xor
xchg
mov
das
mov
push
test
aas
shlb
mov
sbb
sub
es
jge
js
js
sub
dec
push
outsl
fsubs
clc
adc
jno
mov
rolb
cmp
es
pop
pusha
add
sbb
jp
movsb
push
fisubl
sub
insb
sbb
lods
aas
mov
or
jge
jl
mov
scas
in
int
pop
jecxz
adc
mov
mov
pop
push
hlt
or
rorb
fsubs
mov
ljmp
and
add
pop
xchg
xchg
adc
dec
hlt
pop
push
mov
dec
pop
call
sub
mov
cmpsl
pop
icebp
subl
pop
icebp
pop
fstps
mov
in
lods
adc
mov
nop
fs
das
jl
jg
lea
test
pop
outsb
mov
mov
push
cmc
jmp
inc
xchg
dec
pop
aad
in
or
xor
or
insb
mov
jb
push
int
in
xor
xor
inc
fwait
add
daa
out
in
cltd
test
jne
int
xchg
arpl
mov
push
xchg
imul
and
cmp
ss
jbe
out
pushf
push
lock
repz
jns
mov
cmp
dec
icebp
test
mov
cmpsb
jecxz
fstps
lahf
mov
sbb
sbb
fcomps
mov
fistpll
rclb
sarl
push
push
pusha
mov
mov
dec
or
sub
scas
cmp
ja
dec
lods
in
fisubl
jno
clc
adc
mov
cli
sbb
add
inc
in
loop
divl
jae
mov
sbb
sub
add
or
mov
daa
cltd
pusha
test
dec
insb
loop
paddsw
adc
test
jb
xchg
or
pushf
mov
push
andb
ds
cmp
js
mov
testl
movsb
roll
stos
ss
ljmp
cs
in
mov
sub
push
mov
int
inc
sub
loopne
mov
or
nop
int
mull
dec
aad
jns
psubw
ret
lods
cmp
mov
mov
or
adc
xor
push
inc
mov
into
sub
bound
repz
dec
stos
mov
adc
xor
jb
ljmp
dec
pop
loope
nop
mov
xchg
push
xchg
xchg
insb
cmc
and
rcl
fcmovnbe
lret
or
push
movsb
xor
loopne
hlt
or
cs
mov
aas
cmp
lods
stc
fnsave
dec
icebp
push
ds
xorb
or
les
in
shlb
pop
lahf
loope
xchg
pop
xchg
hlt
add
mov
mov
nop
and
or
sub
je
movsl
arpl
mov
lret
adc
add
mov
mov
adc
inc
loop
rcrb
in
inc
ss
fistl
mov
lods
ret
sbb
test
loope
ret
stc
cmp
xchg
out
push
xchg
sub
and
xchg
xchg
inc
jl
jg
stc
mov
jno
arpl
push
loope
out
sti
pop
lods
icebp
add
imull
arpl
iret
insl
sbb
cmpsl
out
dec
lods
data16
scas
add
sub
push
hlt
scas
pop
sub
cmpsl
les
cmp
test
inc
xchg
std
jl
loope
xchg
mov
push
jp
btc
dec
cmp
jns
push
pop
aam
mov
jbe
push
sub
insb
xchg
or
and
pop
shll
pop
mov
sbb
xchg
or
jecxz
add
mov
pusha
mov
orb
xchg
jecxz
out
outsl
sbbb
pop
pop
xlat
or
inc
xor
psrlw
shrl
aam
mov
mov
jns
popf
dec
add
xor
pushf
jae
and
loopne
ss
andl
xchg
pop
fidivs
in
repnz
sahf
mov
xor
pop
cmpsb
stc
sbb
aaa
cwtl
mov
cltd
scas
sbb
adcl
dec
fwait
mov
bound
pop
insl
es
push
inc
jnp
test
dec
stc
mov
enter
sub
push
add
mov
mov
sahf
test
pop
leave
adc
mov
incl
add
mov
call
jae
lock
jmp
pushf
das
cmpl
jb
scas
mov
repnz
ret
loop
cwtl
push
jbe
mov
push
lcall
std
je
add
outsb
rol
pop
sarl
xor
adc
loope
lret
fcoms
push
cld
roll
mov
adc
arpl
inc
adc
gs
or
lret
loopne
lods
jns
inc
jae
mov
fs
pop
mov
ljmp
in
cmp
xchg
push
dec
add
hlt
imul
rep
jmp
lock
in
fildl
or
adc
ret
int3
or
icebp
stos
dec
and
stc
add
mov
inc
rorl
js
dec
adc
cltd
test
call
jns
arpl
mov
mov
dec
xor
mov
scas
add
add
push
ja
or
cltd
push
sub
jns
rcll
inc
mov
mov
cmp
add
inc
out
add
add
jns
lret
xor
in
stos
test
ja
push
jle
stos
sbb
jl
inc
or
out
adc
roll
shlw
dec
loope
cltd
cmpsb
in
imul
jbe
sbb
cli
les
xchg
cli
jg,pt
jns
push
bound
jp
scas
fcomp
inc
add
jbe
dec
xchg
sub
mull
shl
jl
cltd
dec
inc
mov
or
out
scas
cld
outsl
gs
or
jb
stc
aaa
mov
bound
stc
mov
ljmp
clc
ret
sbb
mov
jo
fisttpll
pop
ss
pop
pop
inc
sub
leave
xor
mov
push
es
nop
inc
call
mov
out
loopne
xchg
loope
or
fldenv
loope
clc
add
inc
stos
mov
mov
fxch
cmp
mov
js
call
rolb
add
stc
dec
add
sbb
jmp
mov
sub
test
push
jle
aad
add
jg
inc
jb
pop
popa
sub
sbbb
mov
sbb
les
add
scas
sbb
mov
test
xor
or
lcall
xabort
push
lock
pop
inc
mov
sti
fimull
rorl
je
aam
pop
iret
mov
cld
scas
outsl
jns
loope
mov
addr16
pop
xor
push
imul
fwait
cmp
fs
mov
mov
push
aad
sbb
xorb
in
int3
ljmp
pop
mov
shlb
loope
popa
inc
mov
or
pop
enter
pop
test
add
and
push
call
cmp
mov
in
mov
icebp
aad
and
andb
sbb
push
sbb
jno
out
pop
adc
ja
dec
aam
rorb
sbb
out
out
mov
adc
popfw
xchg
in
adc
dec
or
adc
out
hlt
adc
fcomps
pop
push
mov
ret
push
or
jmp
jmp
aam
andb
lods
mov
iret
pushw
push
cmpsl
push
pop
mov
lods
dec
and
jbe
ret
inc
mov
lcall
ss
pop
dec
mov
inc
fs
xchg
outsl
gs
ja
jge
cld
sub
mov
ret
nop
notl
sub
adc
out
insb
rcr
hlt
mov
jmp
xor
dec
xor
dec
push
in
xlat
mov
push
repz
xor
loopne
ret
xor
adc
and
add
pop
cmp
cmp
out
push
dec
mov
ja
sahf
lods
or
xchg
xor
fiadds
icebp
fcoms
popa
imul
push
pop
out
into
cwtl
add
int3
mov
rorb
imul
cmpsb
loope
add
and
push
lea
xor
push
in
sub
inc
insl
les
jecxz
mov
jo
cmpl
sti
lret
iret
xchg
cmp
adc
incb
push
mov
lods
adc
xchg
xor
shl
dec
pop
mov
gs
lret
mov
push
loopne
mov
out
inc
pop
xor
aaa
pop
jle
shll
cmp
sub
mov
push
in
sahf
or
jg
pop
dec
cld
cmp
push
inc
jp
cltd
push
jns
inc
shll
jecxz
mov
mov
cmp
cmp
mov
cmp
xchg
push
out
xchg
cmp
insb
arpl
je
cld
sbb
ret
and
lock
sti
std
mov
mov
ret
movsl
pop
inc
sbb
mov
lcall
sbb
and
dec
js
orb
mov
sub
pushf
stc
mov
cmpps
adc
movsl
lods
sbb
stos
and
xchg
das
inc
ljmp
add
cmp
out
outsb
repz
aam
fldcw
mov
mov
push
stc
out
pop
stos
test
jnp
out
sbb
mov
mov
jbe
cmp
sbb
mov
and
push
in
jp
mov
push
dec
pusha
cmp
cmovle
xlat
aas
in
fildl
dec
and
cmpsl
outsb
fstp
inc
pop
mov
fsub
mov
dec
mov
jecxz
push
test
inc
xchg
out
adc
pop
jge
ja
push
aas
inc
orl
testl
cmc
aad
jne
fcoms
in
jae
mov
lods
cmc
mov
gs
jbe
mov
sbb
push
aaa
movsl
sbb
test
pushf
pop
rorl
not
cmp
stc
fchs
cmp
jecxz
outsl
mov
sbbb
imul
sub
push
scas
in
pop
cmc
inc
ja
addr16
into
sti
lcall
sbb
shlb
pop
push
and
shlb
mov
cmp
iret
push
mov
inc
enter
cli
fistps
adc
add
dec
xchg
lret
pop
aad
pop
adc
cs
cmpsl
jo
js
movsl
jle
dec
pop
add
mov
adc
push
push
pushf
sbb
test
mov
push
or
xchg
xchg
aas
mov
pop
popa
jg
iret
cmp
push
clc
cmc
cmp
push
out
mov
lods
push
sub
xor
in
loop
mov
out
leave
mov
nop
and
hlt
movsb
adc
loop
aaa
mov
lcall
mov
push
repnz
mov
movsb
loopne
insb
outsl
fdiv
jmp
push
add
xchg
inc
aam
ret
iret
or
jae
dec
test
lret
xor
xor
fistps
push
sbb
sbb
mov
lea
stc
cltd
aam
ja
cmp
push
mov
test
or
outsb
out
xor
pop
or
lret
mov
fadd
mov
stos
sub
jge
outsl
push
decb
cwtl
add
leave
dec
stc
jb
fsubs
pop
insb
xchg
pop
int
xlat
push
pop
cltd
push
dec
aam
sarb
mov
fcompl
push
jne
sbb
test
into
pop
xchg
and
popf
push
add
lret
mov
dec
daa
mov
popf
sbb
stc
jp
sbb
pop
subl
jmp
in
mov
jno
xchg
adc
mov
in
jno
add
clc
shrl
xchg
outsb
inc
std
cli
jns
pop
mov
imul
xor
roll
lock
stos
inc
enter
stos
lods
std
das
int
or
dec
xlat
xchg
repz
andl
inc
stos
leave
or
js
adc
jge
push
jo
pop
fs
dec
negl
repz
pop
out
in
inc
fists
sbb
xchg
shrb
loop
int
jb
cmp
sbb
cmp
and
andl
nop
dec
not
mov
mov
stc
and
xor
mov
cld
add
rcrl
fnstenv
jb
dec
cld
sub
inc
mov
out
cmpsb
aam
dec
lret
movsl
xchg
pop
and
fdivrl
pop
push
xorl
mov
pop
pop
pop
imul
inc
out
shrb
pop
shlb
add
stos
add
orb
mov
xor
jo
pop
daa
in
jbe
sahf
jbe
or
and
fldenv
ja
test
sub
sysenter
sub
mov
pushf
xchg
adc
fs
xorb
add
xor
and
xchg
gs
in
fildl
dec
sbb
lahf
mul
rcrl
stc
xor
pop
pushf
imul
xchg
cmp
aaa
aas
cmc
dec
into
or
push
enter
jbe
loop
jne
hlt
jecxz
xor
mov
subb
inc
dec
out
mov
mov
call
xor
imul
sub
dec
popa
inc
add
mov
push
xchg
push
and
lret
sub
dec
pop
pop
daa
inc
push
jb
sbb
or
movsb
lahf
popa
jecxz
jl
mov
repnz
test
mov
sbb
sbb
push
in
aaa
fcoml
daa
out
inc
mov
aaa
dec
sub
push
adc
clc
push
fs
imul
sbb
push
lds
add
lds
fistpll
or
add
lds
xchg
sbb
sub
pop
cmp
mov
popa
jmp
clc
add
push
jno
scas
scas
movb
pop
xlat
xor
out
xor
js
and
jp
cli
or
lahf
lahf
icebp
xor
iret
dec
adc
sub
imul
sbb
inc
xchg
fwait
dec
testb
lret
lret
adc
mov
push
popa
es
sub
popa
gs
pop
push
fidivs
mov
dec
and
mov
pop
sub
jmp
mov
lods
jmp
jp
push
mov
rolb
cli
fdivrs
sub
mov
or
pop
dec
lahf
push
mov
loopne,pn
add
pop
pushf
xor
dec
movsb
cmp
pop
dec
push
icebp
inc
jb
xlat
push
fstpl
add
fdivs
in
ret
mov
dec
cmp
inc
jp
mov
cmc
mov
push
mov
pop
sbb
cmp
sbb
cmp
cmpsl
popf
sti
fimuls
push
lods
mov
inc
lods
cmpsl
loop
pop
xchg
mov
rclb
lcall
mov
xlat
push
mov
xlat
pusha
popa
sub
lret
and
iret
test
jle
iret
mov
dec
je,pt
xor
lds
inc
push
repnz
ds
outsb
pop
sub
push
mov
scas
pusha
in
jo
ror
movsb
push
test
lds
adc
mov
in
xor
cmpsb
fcomp
xchg
jecxz
lds
pop
and
mov
in
xchg
fisubl
sahf
add
decl
shlb
mov
pop
add
cmp
and
sbb
mov
inc
or
int3
imul
xchg
cli
sahf
leave
push
es
jbe
or
or
xor
cwtl
inc
mov
push
push
sbb
iret
xor
sub
sub
pop
je
inc
cwtl
in
imul
aas
adc
jge
call
addb
dec
mov
jmp
xchg
sub
ret
mov
and
test
mov
rcll
leave
hlt
mov
push
in
xchg
xchg
aas
fwait
into
cmp
clc
leave
add
sarl
jb
xchg
adc
lret
inc
rorl
sub
mov
fmulp
sub
into
out
lods
insl
and
stc
push
decl
push
lcall
xor
jp
mov
lret
cmp
adc
adc
nop
xlat
dec
test
jp
daa
les
xor
jno
pop
rcll
mov
out
insb
pop
pop
xchg
and
mov
fcom
add
xchg
sub
sub
lret
iret
pop
bound
scas
aaa
ret
into
ficomps
je
lea
push
psllq
lea
mov
xchg
sub
mov
lahf
into
and
or
add
cltd
jbe
pushf
push
mov
data16
mov
adc
ja
mov
jb
int3
xchg
ss
fistpl
inc
xchg
xchg
pop
shr
mov
mov
test
xor
or
out
xor
loopne
insl
wrmsr
pushf
mov
inc
mov
inc
sahf
test
xor
add
mov
imul
fmull
pop
dec
in
push
xchg
and
in
stos
aas
cmpl
sub
insb
adc
lods
xlat
push
pop
mov
inc
dec
cltd
push
hlt
pop
and
fldenv
arpl
cmp
lcall
scas
loope
pop
push
rcl
arpl
jbe
into
mov
inc
out
lret
sbb
or
stos
mov
inc
fdivrp
fs
roll
jmp
fcmove
shrl
sub
or
dec
pop
addl
incl
data16
push
cmp
mov
popf
rorl
xor
xchg
lea
cmp
inc
xchg
cld
imul
inc
les
mov
and
int3
cmpsb
push
xchg
outsl
or
neg
sbb
repnz
imul
fisttps
bound
aaa
std
mov
sub
imul
hlt
outsl
inc
jp
dec
dec
cmp
mov
and
jl
mov
cld
sub
xchg
xchg
xchg
daa
push
adc
fdivl
mov
in
jmp
mov
and
cmp
jle
fs
and
dec
cmc
xchg
push
dec
fs
inc
cmp
in
les
outsl
or
imul
scas
mov
mov
roll
ja
push
dec
gs
or
ret
mov
and
mov
daa
lcall
dec
sub
jno
mov
cmpsl
inc
push
xchg
push
jg
repz
int
decl
das
andl
mov
push
jno
dec
ret
in
and
aam
push
loop
aad
ja
shll
loope
xor
icebp
into
inc
jb
ds
in
pop
cld
in
sub
xchg
jbe
clc
mov
jb
fs
cmp
cmp
cmc
cmp
lret
aam
aad
incl
cmc
mov
and
stos
mov
dec
fldenv
push
loopne
repnz
xchg
ficoml
cwtl
sub
and
sub
fdivs
pop
and
sbb
jge
add
pop
dec
jle
movsb
sbb
aam
stos
js
rorb
loope
push
and
scas
push
xor
insb
jmp
mov
mov
cmp
rol
xor
test
jecxz
inc
and
mov
and
xchg
add
dec
subl
sarb
xchg
outsl
hlt
mov
popa
int
in
xchg
shrl
out
addr16
dec
nop
lea
inc
xchg
and
xor
adc
mov
xor
aas
push
int
inc
mov
push
mov
mov
fs
js
xor
xchg
in
shll
ret
addb
pop
addr16
mov
push
lret
daa
adc
inc
push
mov
fisttps
push
popa
outsl
inc
repz
mov
xchg
stc
sub
dec
aaa
je
mov
fs
add
sbb
add
jl
jns
xchg
jb
scas
insl
les
xchg
xchg
cvtps2pi
push
add
and
sub
push
jge
lahf
xchg
mov
insl
out
out
imulb
lock
pusha
xor
push
push
mov
fsubrl
lods
jg
fnstenv
je
xor
xor
das
sbb
push
daa
lret
lcall
fcmovb
add
scas
sub
inc
mov
nop
and
push
fldt
jle
mov
lock
in
mov
fsub
mov
shll
cli
out
inc
push
fsubs
push
or
mov
inc
xorl
stos
jg
push
or
xchg
fsubs
sbb
or
mov
xor
rolb
push
cmpsl
xchg
cwtl
lcall
jae
popa
mov
inc
aaa
jbe
fs
call
cld
and
in
insl
les
xor
sahf
cwtl
add
xlat
ja
add
xlat
out
lods
or
mov
push
push
adc
pop
pop
mov
mov
ror
xchg
rclb
cmpsb
or
loop
stc
adc
mov
mov
or
add
test
pusha
add
sbb
cmpsb
jl
cmpsb
pop
movsb
incl
dec
in
mov
cmp
or
pop
add
repz
cmpsl
sub
xchg
ja
jmp
mov
lahf
mov
pop
lea
adc
fld
cwtl
daa
cmp
pop
cmp
data16
clc
scas
cmp
arpl
js
inc
dec
fdivrl
lahf
push
mov
das
mov
fucomip
cwtl
and
push
scas
out
and
and
pop
pop
cltd
orl
pop
lods
cmpsb
xor
call
fstps
insl
cmp
and
mov
push
jecxz
xor
negb
jb
push
inc
cld
sbb
push
push
jae
ljmp
mov
add
popa
pusha
int
mov
sub
inc
jmp
idivb
in
testl
cs
sti
and
mov
cwtl
inc
and
jecxz
sub
into
sbb
push
and
mov
cmp
arpl
hlt
cwtl
cmc
or
mov
lahf
hlt
insl
fistps
xchg
inc
pop
inc
inc
jg
jmp
iret
and
pop
sub
gs
test
rcll
cs
and
xorl
mov
cmp
pop
pop
fucomp
jecxz
pop
mov
add
mov
iret
mov
sub
cmpsl
out
arpl
sbb
outsb
dec
dec
xor
add
and
jnp
pop
mov
addb
mov
scas
dec
cmpsb
adcb
xor
xchg
out
aaa
xor
or
xor
daa
cmp
pusha
loop
pop
inc
or
je
pusha
add
rolb
push
and
les
fdivr
lret
sub
mov
out
sbb
jmp
mov
ja
ja
mov
js
clc
stc
data16
push
adc
mov
sbb
adc
data16
mov
push
cmpsb
cli
xchg
test
cs
push
xchg
or
cmp
stc
lds
mov
push
out
xor
push
inc
inc
cs
add
xor
sbb
sbb
adc
pop
arpl
mov
pop
leave
sbb
out
xor
in
pop
sub
mov
mov
inc
enter
call
mov
int3
mov
push
mov
jnp
mov
lock
and
mov
jg
out
push
cli
push
in
adc
imul
mov
push
jno
fcoml
push
shl
add
cli
xchg
clc
arpl
jno
popf
cmpsl
jecxz
xchg
lds
xor
xor
and
push
xor
jge
test
inc
xor
fldlg2
add
mov
imul
xchg
and
jno
dec
call
fnstcw
sbb
dec
jo
les
sub
mov
fsubrl
lods
addr16
xchg
add
fistl
out
mov
gs
adc
or
fs
mov
scas
mov
dec
jno
pop
cmpsl
fcmovbe
sti
inc
sahf
mov
hlt
icebp
pop
cli
femms
jmp
orl
dec
cmpsl
inc
add
faddp
out
mov
mov
std
cmp
imul
rclb
jecxz
in
xorb
outsb
lods
xchg
nop
inc
jle
mov
aas
xlat
xchg
mov
lock
sarl
repz
sub
repz
icebp
or
outsl
mov
dec
dec
xchg
and
pop
orb
fldcw
sahf
cs
push
ds
mov
fs
int3
sbb
xor
vminsd
sbb
mov
iret
enter
xchg
movsl
int3
add
pop
or
test
sbb
test
in
out
test
rcrb
pop
shlb
jg
add
test
dec
test
pop
sbb
inc
js
dec
jecxz
xchg
and
rcrb
test
lds
mov
fucomi
dec
clc
outsb
sub
loopne
push
xchg
addr16
iret
push
mov
aad
fiadds
imul
in
cwtl
out
and
add
pop
jecxz
les
mov
inc
cltd
push
mov
add
pop
and
idivb
pop
ret
outsl
jmp
sar
test
enter
or
dec
ja
jmp
int3
repnz
cmp
out
adc
cbtw
push
into
mov
mov
xchg
xchg
adc
mov
dec
push
and
pop
aas
stc
push
leave
cmp
gs
fldt
sbb
mov
movsb
fiadds
xchg
xchg
mov
out
test
shlb
ret
sub
fcmovnu
dec
jns
inc
sbb
mov
out
mov
jmp
fistpl
addr16
test
xchg
mov
cmp
adc
add
cmp
pop
shll
and
rcrl
mov
jecxz
scas
mov
sub
mov
lods
shr
mov
fldenv
rep
scas
out
sbb
mov
lods
out
stos
movsl
adc
lcall
in
pusha
inc
xchg
pop
cltd
inc
adc
cwtl
or
sarl
cltd
frstor
enter
outsb
aas
or
les
inc
pop
add
outsb
movsb
xchg
jecxz
pop
push
xor
push
out
mov
pop
inc
push
jne
test
cmpsb
pop
xor
pushf
sahf
das
and
popf
lods
xchg
sahf
mov
lret
shll
and
mov
xchg
dec
jg
stos
adcb
push
push
cmp
pop
xchg
sbb
flds
stos
or
outsb
push
pushf
repnz
push
sbb
call
mov
sbb
jle
popl
adc
mov
pop
ss
ret
andl
dec
push
fcompl
test
push
sub
cmp
fisttpl
jmp
sub
mov
js
mov
lcall
sti
xchg
jmp
push
gs
cmp
lds
aad
xor
xchg
jmp
pop
imul
and
aam
add
out
mov
cmp
cwtl
cwtl
adc
cmpsl
sbbb
test
dec
pop
or
push
mov
call
sbb
jp
cmpsb
popf
xor
sub
jo
iret
inc
lods
sub
fidivrl
sbbl
inc
and
mov
inc
mov
icebp
movsb
mov
std
hlt
cmp
dec
aas
ss
inc
cli
mov
fstpt
aad
fwait
aaa
dec
std
inc
fldenv
jno
iret
xchg
and
pop
test
ja
setl
subb
dec
lods
orl
fcmovbe
pop
fldcw
lret
mov
mov
leave
pop
cltd
mulb
enter
mov
mov
pop
lahf
test
and
mov
rclw
push
aam
lods
jne
mov
add
cwtl
add
jl
insb
mov
xchg
mov
and
sarl
mov
cmp
sbb
lds
cltd
loop
cmp
cmp
xchg
jno
mov
inc
inc
jg
push
adc
es
das
stos
xor
sub
adc
and
adc
in
or
xchg
std
icebp
rol
shrl
mov
lret
jmp
aaa
sub
and
lret
addr16
shlb
mov
jo
dec
rcrb
fstl
sub
sub
jmp
cmp
fadds
push
cmp
add
pop
mov
mov
push
add
push
fmull
bound
mov
xor
insl
rep
int
fists
fdivl
insl
add
shlb
add
sbb
pop
lret
lret
shll
xchg
and
pop
lock
jmp
xor
shlb
xlat
dec
or
adc
dec
sbb
fmull
fdiv
dec
sahf
push
dec
push
ja
jne
test
sbb
sti
xchg
outsb
jne
cmp
sahf
das
pop
or
pop
dec
inc
cmp
testb
sub
inc
sbb
jg
stos
mov
pop
imul
scas
lods
sbb
cmc
xor
cmc
xchg
mov
andb
adc
jp
sub
movsb
pusha
mov
jle
jbe
test
loope
jb
sti
and
shl
or
popf
shrb
dec
std
aas
stos
push
cli
insl
into
pushf
push
mov
popa
mov
push
mov
hlt
ja
dec
ret
mov
jo
dec
mov
aas
pop
cmp
enter
dec
mov
cmc
roll
dec
pop
sbb
int3
pop
cmp
out
js
xchg
push
out
das
inc
or
and
cs
aaa
int3
jo
test
ljmp
ss
dec
sbb
jl
cli
add
add
cmp
jno
shl
add
in
cmpsb
scas
adc
pop
add
sub
mov
push
add
pop
daa
cmp
inc
fs
cmc
xchg
dec
dec
pop
stc
xor
xchg
push
les
mov
mov
popf
sti
out
mov
mov
or
xchg
mov
inc
jnp
add
xchg
mov
into
cld
sti
lods
jl
into
pop
jnp
cmp
test
nop
sbb
push
in
pop
in
pop
nop
fwait
cmp
inc
out
and
push
aaa
or
jmp
add
mov
or
cmpsl
cld
or
sub
rolb
andl
cmp
stc
and
sbb
cmc
ljmp
sbb
cmpsl
jbe
loop
sub
inc
push
imul
dec
test
mov
mov
sub
xchg
mov
inc
dec
push
jno
push
hlt
xchg
mov
xlat
dec
std
ficomps
xlat
push
loopne
repz
pop
inc
lock
push
scas
mov
int
sub
cltd
jecxz
dec
and
daa
and
mov
sbb
add
cmpb
dec
mov
push
test
push
mov
and
jae
aad
inc
dec
sub
insl
jg
xchg
mov
cmp
pop
push
push
popf
jae
bound
aad
mov
sub
fidivrs
pop
cmc
dec
push
sub
call
arpl
xor
mov
or
push
push
movsb
sbb
jbe
xchg
cmp
in
outsb
cmp
sub
push
cmc
dec
and
jl
inc
cmpsl
jge
loopne
xchg
ret
jecxz
lea
sahf
jl
mov
mov
sahf
mov
cmc
addl
mov
or
sahf
and
cmc
scas
lcall
gs
mov
pop
dec
cmp
imul
xor
xor
sahf
fsts
roll
jb
clc
cmpl
mov
out
push
outsl
mov
xor
lods
fldcw
push
stc
cmpsl
mov
add
jge
ljmp
or
jnp
mov
cmp
outsb
lcall
imull
fwait
mov
movsb
mov
popf
sarb
sub
inc
mov
cs
mov
bound
jp
add
push
fs
jns
cltd
fistpll
push
push
dec
push
mov
outsb
jnp
clc
into
jecxz
push
and
mov
xchg
add
and
enter
xchg
outsl
in
inc
or
mov
push
std
or
push
imul
xor
pop
stos
nop
imul
adc
imul
sti
insb
sarl
mov
fsub
aam
loop
shr
pop
call
cmp
ja
popl
into
mov
and
and
mov
ss
jmp
test
sbb
mov
inc
xchg
xchg
pusha
test
pop
pop
dec
dec
jp
adc
repnz
push
int
movsb
sub
int3
addl
jg
ds
mov
out
inc
int3
pushf
jp
insb
mov
push
test
repnz
lods
cmp
mov
dec
out
add
sti
add
sahf
jbe
xchg
loopne
or
mov
dec
and
push
test
jl
push
scas
jae
adc
lock
rcll
je
mov
dec
mov
fmuls
mov
movsl
pop
sarb
push
mov
repz
jo
cmp
mov
or
cmpsb
flds
cmp
sub
mov
cld
aas
mov
mov
sbb
xor
test
jns
insl
cmp
fsubl
cwtl
movsb
in
stc
mov
or
in
cwtl
xor
and
fdivr
es
dec
xchg
les
dec
pop
cmp
cmc
dec
shr
shrb
adc
in
xchg
cvtps2pi
sbb
shll
adc
cmc
fs
mov
test
and
popa
mov
in
or
mov
add
jbe
add
ret
into
dec
mov
mov
sti
push
lret
cmpb
sbb
inc
fwait
and
inc
int3
pop
popa
and
call
mov
jnp
push
pop
daa
sub
mov
jnp
outsb
flds
cld
hlt
push
sub
sti
and
cmp
jb
fildll
mov
mov
and
sbb
fisubs
notl
inc
adc
jae
loopne
push
lea
jae
sti
popf
test
mov
inc
jmp
test
lods
cs
arpl
mov
fwait
xchg
ja
pop
mov
jo
pop
dec
push
mov
mov
inc
dec
fcomps
cmp
aad
xor
ja
lret
add
outsl
out
iret
xchg
push
shlb
dec
or
jno
add
mov
pushf
out
and
adc
mov
fsubr
sbb
clc
ljmp
xchg
xor
push
dec
pop
sub
popa
xchg
out
jecxz
jbe
cs
pop
xchg
adc
sbb
pop
jno
movsl
cld
push
mov
sar
les
shrd
es
and
fistl
xor
xchg
mov
loopne
or
dec
nop
xor
stos
or
xchg
in
outsb
mov
ds
ret
aam
inc
adc
cwtl
dec
and
jl
mov
dec
adc
out
cmpsb
mov
cmp
inc
fbld
into
mov
add
jo
fs
fdivrs
xor
cmc
mov
jge
mov
mov
mov
cmpsl
sbb
dec
jle,pt
leave
fcompl
fwait
jo
pop
mov
repz
cmp
and
lret
pop
adc
sahf
fistpl
cmpsl
loope
rclb
ds
lret
cmpb
cmp
cmp
pusha
int3
jl
cmp
mov
jp
pop
sub
pop
call
xchg
or
iret
into
dec
xchg
dec
sub
outsl
mov
inc
lcall
xlat
pop
mov
add
push
js
or
mov
pop
fisubl
sbb
xchg
or
fwait
xchg
mov
data16
pop
sahf
xor
dec
repz
or
push
inc
mov
push
dec
adc
mov
push
ret
dec
shl
daa
dec
mov
dec
inc
pop
popa
outsb
pop
push
ss
scas
out
xor
push
mov
daa
jo
push
adc
in
ja
icebp
nop
int
test
out
fldlg2
mov
mov
xchg
inc
dec
ffreep
shl
inc
xor
call
jl
iret
stos
lock
adc
push
xchg
les
sub
rorl
xchg
push
iret
pop
loopne
xchg
jno
inc
adc
or
xchg
add
mov
mov
out
push
inc
xchg
sar
xchg
js
out
fwait
leave
sub
mov
lea
or
les
pop
jo
ficompl
fnstsw
repz
fldcw
fcmovb
leave
int3
fcoms
mov
jo
mov
fdivrl
addr16
inc
and
jmp
or
pusha
xchg
loopne
fistps
xchg
addr16
movsb
push
mov
scas
cmp
cs
pop
pop
xlat
mov
inc
pop
mov
sub
test
mov
jp
daa
cwtl
icebp
cmc
push
dec
arpl
mov
loopne
pop
mov
xchg
daa
stos
jns
mov
xchg
mov
mov
cmp
fdivrl
push
adc
sbb
aaa
lret
cmc
imul
jns
adc
loopne
mov
mov
push
cmp
rcr
inc
lcall
lcall
bound
fs
data16
aam
push
lret
jge
fmuls
pop
mov
repz
mov
test
cmp
lock
or
sti
push
adc
sbb
cmp
mov
and
xchg
and
or
xchg
notb
push
adc
jg
and
pop
outsb
pop
pop
xor
mov
insb
jg
cmp
adc
push
fs
jle
cmp
mov
notl
mov
mov
sub
cmp
inc
pop
push
out
dec
or
sub
add
js
pop
and
sahf
sub
cli
jmp
movsb
xchg
fbstp
jl
ljmp
inc
out
sarb
mov
xchg
addr16
data16
test
cmp
xlat
add
leave
pushf
push
pop
sbb
sbb
cld
jge
bound
test
pop
stc
sub
inc
dec
sub
int3
add
sbb
inc
fildl
repz
dec
adc
push
lea
repz
shr
cmpl
repz
cli
and
mov
jnp
sbbb
add
sbb
pop
lcall
addr16
adc
mov
mov
lods
jp
sbbl
xchg
inc
mov
sar
pusha
div
inc
adc
mov
scas
movsb
push
and
or
into
xchg
mov
daa
or
das
int
pop
mov
cmova
fidivl
mov
xchg
es
cmp
mov
das
loope
sbb
push
mov
mov
fincstp
push
adc
lcall
xchg
dec
not
lds
mov
inc
mov
fldt
inc
mov
sbb
rcrl
jmp
aaa
jg
sub
xchg
out
in
call
inc
sbb
pop
adc
es
xchg
mov
pop
shr
insl
in
inc
nop
pop
sti
jmp
lock
nop
movl
add
rcrl
in
jo
jnp
xor
adc
add
jo
dec
loopne
gs
repz
shl
mov
lods
popa
orb
icebp
dec
rcl
add
arpl
jl
xchg
stc
pop
outsl
xchg
fcomps
aam
mulb
mov
sbb
subb
cmp
xchg
inc
mov
adc
xchg
int3
pop
mov
xchg
cs
sub
push
cmp
hlt
notl
aad
leave
cmp
fisubl
inc
xchg
fcomi
jnp
out
aad
and
add
mov
es
cmp
mov
pop
pop
mov
mov
pop
sub
and
or
stos
pop
mov
jl
mov
pop
idiv
sbb
pop
jb
mov
out
cmc
int3
inc
mov
call
push
leave
mov
mov
dec
shrb
popa
mov
push
mov
sti
pop
xchg
add
mov
pop
or
les
leave
push
pop
out
xorl
fs
or
cmp
mov
imul
push
xor
mov
aas
cltd
lds
and
fimuls
xor
ljmp
js
mov
cs
loopne
out
jl
and
dec
sbb
push
dec
cmp
lock
mov
push
pushf
je
xor
xchg
sbb
mov
mov
or
xor
cmc
in
push
int3
test
filds
push
inc
sub
pushl
xor
mov
loop
xchg
or
jg
sbb
add
mov
test
dec
mov
test
push
insb
clc
inc
in
jne
movsb
inc
mov
sarb
lea
xchg
inc
dec
inc
fstpl
not
sub
sahf
fidivl
test
das
xchg
and
in
inc
inc
movsb
push
lods
dec
scas
pop
ja
leave
jns
mov
stc
pop
ja
cmp
pop
ja
movsl
sti
cmpb
insl
leave
stc
daa
stos
dec
xor
mov
call
movsb
mov
sbb
sub
cmp
mov
inc
or
mov
orl
ds
loop
into
fsubl
scas
les
and
test
fs
cmp
xchg
jl
mov
into
mov
cmpsl
fdiv
out
addr16
dec
call
and
addl
push
xchg
xchg
jl
pop
lret
adc
movsl
gs
mov
push
insl
and
add
xorl
aas
out
mov
and
or
loop
push
pop
jle
out
sub
loope
popl
dec
pushf
mov
adc
jmp
mov
in
mov
insl
xor
cmp
imul
movsl
push
and
add
clc
push
fdivr
mov
fistpl
cmpl
add
sbb
icebp
popf
icebp
mov
bnd
in
lahf
jnp
sbb
or
mov
push
adc
mov
addl
fwait
fwait
repnz
sub
xchg
mov
xchg
daa
popa
insb
push
jl
mov
dec
cmp
mov
cmp
subb
dec
in
sbb
fists
mov
cmp
fwait
cmp
jle
inc
cld
jne
stc
jmp
loopne
repz
dec
xlat
sub
fimull
scas
repnz
cmp
jl
ja
cmp
mov
jl
xor
xchg
in
and
and
pop
arpl
mov
cmp
movsb
cmpsl
ljmp
push
dec
lods
out
jg
rolb
mov
stc
adc
loopne
aaa
lret
cmp
push
push
jbe
and
cmpsb
push
iretw
cmpsl
bnd
jbe
movl
pop
mov
out
xor
inc
sbb
pop
xchg
data16
mov
xchg
mov
les
movsb
sub
mov
ror
mov
mov
pop
fadds
mov
add
mov
aad
xchg
fwait
and
shll
mov
dec
xor
inc
push
lods
push
lods
pop
leave
push
mov
push
popf
adc
nop
sub
in
mov
or
shlb
and
pop
movsl
mov
icebp
mov
and
cld
push
testb
push
arpl
add
sub
and
pushf
and
stc
push
orb
popf
dec
pop
pop
fdivrs
scas
or
ja
sub
dec
push
sub
mov
enter
icebp
xor
pop
popf
jae
xchg
xchg
in
mov
fldt
jnp
jae
roll
xchg
cmp
js
xchg
cmpl
pusha
cmp
sub
in
sub
sahf
rol
mov
adc
dec
mov
mov
cwtl
or
sub
cld
or
stc
dec
test
xchg
mov
ret
repnz
movsl
pop
test
fwait
push
push
std
fcomps
loope
subb
and
inc
cmp
mov
or
mov
or
sbb
add
jnp
mov
push
adc
popl
mov
add
or
mov
stos
push
fwait
sbb
mov
push
in
adcb
mov
cmp
pop
aad
mov
push
xor
ret
js
loop
or
and
xchg
lcall
movsl
add
out
xor
roll
push
data16
sub
in
or
ds
mov
push
outsb
enter
test
cmpsl
add
js
add
sbb
pop
mov
or
xor
push
flds
sbb
jmp
in
jl
adc
and
sub
xor
lods
and
cmp
fadds
xchg
cltd
mov
inc
xor
sahf
and
test
sub
xchg
stc
xchg
pop
fisubl
push
mov
inc
in
movsl
pushf
mov
lds
xlat
and
dec
int3
std
loope
dec
inc
jge
test
mov
sub
stos
and
mov
pop
pop
sub
jnp
add
push
stos
in
jge
cmp
in
push
test
push
xchg
icebp
icebp
test
enter
and
repnz
sti
aas
sub
adc
xchg
outsb
in
dec
add
push
fsub
push
ss
mov
inc
test
push
int3
dec
std
fwait
popa
lds
shr
dec
dec
popf
mov
ret
xchg
and
ljmp
mov
xchg
inc
hlt
das
mov
stos
pop
lods
sub
dec
inc
das
and
gs
out
pop
movsl
js
inc
es
inc
adc
adc
cs
std
cmpsb
filds
insl
mov
scas
mov
fimull
push
iret
fs
and
je
xchg
xchg
sti
mov
mov
mov
mov
ss
jne
std
pop
jo
repz
cmpsl
cmp
xchg
pushf
std
push
pop
ja
repz
xchg
sbbl
imul
into
dec
mov
ffreep
lods
pusha
idivb
rolb
sar
mov
mov
out
mov
and
and
cmp
aas
mov
hlt
insl
sbb
jg
xor
adc
mov
jle
outsl
jae
pop
push
push
dec
outsb
out
adc
gs
vpsubsb
mov
movsb
sbb
rorl
push
ss
xchg
adc
sahf
popa
push
into
dec
mov
xchg
pop
push
jo
lea
mov
dec
das
minps
adc
mov
aam
flds
jle
aam
xchg
xchg
add
bound
jl
mov
push
ds
daa
jl
mov
addb
cmpl
scas
inc
leave
fstpt
das
jecxz
out
inc
adc
inc
lods
adc
lret
in
xchg
mov
xor
jns
js
add
xchg
es
mov
cmp
add
mov
push
inc
mov
movsl
icebp
add
and
ss
js
sub
mov
add
jnp
ja
movsl
dec
data16
dec
xor
out
clc
ret
inc
mov
fwait
clc
jg
adc
mov
dec
testb
mov
jno
jbe
jae
repnz
push
mov
or
pop
mov
repz
mov
xchg
sbb
xor
mov
insl
fisubrs
movsb
cltd
dec
xor
lea
icebp
mov
enter
daa
mov
into
je
popf
mov
pop
ja
loopne
push
and
cmp
daa
cmp
lds
rcll
xchg
push
scas
pop
sbb
int3
movsl
cmp
rol
pop
mov
fdivs
cmp
sbbl
cmpsb
mov
jae
int3
les
dec
ja
cmp
dec
xlat
ret
cmpsl
dec
inc
xorb
pop
mov
xchg
dec
scas
fistpl
mov
lds
stc
mov
ja
in
fdivrs
jecxz
jno
xchg
adcb
push
fst
test
lret
adc
fcomp
cli
cmpsl
sbb
mov
and
jns
mov
push
mov
sub
nop
dec
or
lds
mov
stc
stos
mov
cltd
lods
ret
jae
ja
outsl
fwait
mov
enter
mov
push
fs
dec
push
jae
mov
inc
push
out
aad
xor
mov
pop
jl
jbe
pop
lret
mov
and
movl
arpl
jl
or
insl
mov
mov
adc
add
xlat
mov
pop
mov
or
mov
mov
dec
xor
jle
lahf
popa
pop
ja
pusha
scas
xchg
test
ret
xor
mov
jg
lock
sub
ret
pusha
xchg
jg
out
cmp
jmp
mov
nop
int3
clc
dec
adc
add
fdivs
loop
jge
add
push
push
inc
cmp
pop
mov
test
dec
and
dec
mov
lahf
mov
jl
sbb
dec
fadd
cmp
mov
or
sub
sti
jmp
fistpll
in
mov
call
aaa
lods
cmovns
mov
jbe
flds
xor
setno
je
scas
mov
mov
and
or
scas
jmp
fwait
adc
in
jge
popa
pop
repz
and
xchg
loopne
fcoml
mov
test
lahf
push
push
fmul
rolb
enter
fsts
dec
int
lret
and
nop
and
stos
add
out
lahf
sub
es
push
mov
je
pop
fwait
cld
in
cli
mov
gs
xchg
mov
inc
jno
movsl
or
clc
inc
cwtl
jle
add
inc
adc
mov
adc
mov
adc
mov
mov
jmp
push
cmp
adc
adc
push
scas
inc
cmc
adc
cmpsl
pop
test
call
sbb
fprem
insb
xchg
out
lcall
mov
shll
loope
test
outsb
xor
cmpsb
add
insl
adc
adc
and
sbbb
cmpsl
mov
mov
hlt
mov
mov
xchg
cmpsb
inc
add
arpl
daa
jmp
cmpsb
mov
sti
in
ret
xchg
pusha
dec
sub
xor
stc
arpl
enter
pop
int
cmp
jle
dec
repnz
adc
sub
and
push
psadbw
dec
jb
aam
jge
mov
jg
int
xchg
jl
sarl
jge
xchg
les
adc
insb
ss
xor
adc
or
pusha
or
xchg
loope
mov
jg
xchg
sbb
mov
sbb
sub
test
into
push
pop
aas
xchg
push
fstps
pop
xchg
cmp
xchg
pop
sub
cli
dec
in
rcrb
sbb
faddp
or
jp
fldl
addr16
dec
je
xchg
cmp
xor
xor
mov
push
mov
daa
adc
fisubrl
rcr
push
mov
scas
out
push
insb
inc
sub
test
das
cmp
pop
add
loope
stos
testl
jae
shll
cmp
shll
inc
subb
shrb
cmp
cwtl
movsb
lret
adc
fs
add
stos
jbe
add
xchg
jecxz
mov
jae
mov
mov
fcoml
fisubrs
xchg
sub
mov
imul
fbld
jbe
sarb
pop
xlat
aam
cmp
pop
mov
xor
mov
das
mov
in
cmpb
imul
or
mov
and
push
or
into
lds
jne
repnz
dec
mov
inc
lcall
mov
dec
cmp
mov
sub
add
inc
mov
hlt
sub
mov
popa
subb
sbb
mov
int3
lods
push
or
cli
test
inc
je
dec
pushf
loopne
sub
push
mov
push
push
add
and
mov
sarb
xchg
pushf
pop
inc
xchg
inc
mov
sub
jne
mov
cmp
cmpsl
add
xlat
push
xchg
rcr
mov
adc
fcmovne
jle
mov
out
cmp
ficomps
push
push
js
mov
mov
xor
mov
imul
jg
enter
ds
mov
ror
idivb
mov
lret
not
mov
jmp
mov
mov
mov
cwtl
aaa
insb
pop
sti
stc
leave
mov
xchg
call
cmova
xor
sbb
outsl
out
xchg
lret
cltd
push
cwtl
fwait
cmpsb
xchg
mov
lds
and
add
ss
jo
or
mov
sahf
and
pop
push
push
mov
push
mov
rcll
mov
pop
jmp
mov
out
out
pop
sub
jge
rorb
loope
imul
mov
stos
jmp
pop
mov
mov
insb
arpl
xchg
rorb
cwtl
mov
scas
stc
out
pushf
mov
cmp
mov
popa
mov
shll
sub
cmc
imul
lret
rol
sub
pop
scas
jg
mov
rcr
and
push
push
sbb
dec
xor
je
mov
scas
addl
in
iret
ja
ss
sub
fcmovb
out
inc
mov
in
push
nop
add
popa
adc
dec
inc
sti
imul
sahf
mov
push
sbb
popf
jl
fidivs
scas
aaa
push
inc
mov
mulb
sbb
xchg
repz
jmp
cwtl
dec
push
mov
mov
xor
inc
xchg
insl
imulb
out
push
sti
into
dec
adc
stc
add
sti
adc
loopne
mov
push
xchg
jmp
lcall
xchg
ret
imul
inc
sbb
aam
inc
outsl
xchg
std
dec
mov
pop
push
add
mov
xchg
push
pop
jge
popa
mov
fsubl
adcl
lahf
mov
pushf
stc
adc
push
gs
jmp
movsb
int
or
or
leave
add
insl
mov
jg
out
outsb
jne
pop
adc
lahf
add
cmpsb
mov
jnp
faddl
pop
fdivs
push
in
mov
out
sbb
int
fsubrs
daa
jmp
fcoms
incl
aam
push
push
inc
or
push
mov
jbe
imul
push
and
push
jecxz
xchg
scas
cli
fcmovnu
pop
shrl
loope
addr16
dec
cs
sbb
orb
xorl
jle
or
je
mov
popa
fildll
mov
test
pop
or
pop
pop
push
inc
out
test
iret
out
std
push
adc
daa
std
dec
popf
mov
loope
xlat
xchg
ret
mov
pop
das
das
mov
and
push
push
lods
loope
int3
lret
popa
outsb
cmpsb
push
or
jns
jmp
sbb
inc
pop
popa
jle
sub
xchg
dec
and
stos
dec
out
aad
jae
dec
clc
inc
mov
jns
adc
jmp
mov
mov
dec
test
in
lea
mov
faddp
and
repz
jg
shlb
and
dec
xor
lods
orb
xor
cmp
jge
push
mov
ret
add
stc
loope
iret
lds
push
lcall
or
sbb
scas
xor
scas
ds
rcr
jle
pop
sbb
mov
jmp
push
sbb
test
jge
inc
push
imul
in
add
sub
out
push
loopne
add
mov
sub
pushf
scas
or
fs
add
mov
mov
adcb
out
xchg
sahf
cmpsb
cltd
cmpsl
add
dec
lret
lret
sbb
xor
cwtl
inc
pusha
dec
ljmp
push
into
retw
xchg
sub
aad
cmpsb
inc
popa
pop
push
lret
test
lods
nop
jmp
in
mov
shrb
lcall
mov
clc
mov
xchg
cwtl
lds
into
or
mov
outsb
dec
ret
loope
xchg
push
mov
mov
or
xchg
jl
xor
cmp
cmp
idivl
sahf
scas
sub
jns
addr16
loopne
imul
xchg
jl
divl
sub
mov
dec
sub
mov
push
ret
mov
jmp
cmp
and
pusha
and
mov
std
mov
sub
stc
mov
dec
lods
adc
xchg
mov
xchg
xchg
mov
loop
in
push
repnz
int
cmp
fidivs
fcoml
push
ret
jo
test
repz
dec
add
xchg
aam
repz
sub
pushf
push
lods
bound
outsl
jg
jge
popf
orl
fwait
push
adc
movsl
pusha
scas
and
cld
scas
sbb
adc
inc
std
and
push
in
push
add
cmp
mov
mov
pushf
pop
roll
into
mov
adc
in
lret
pop
push
pop
add
xor
stc
pushf
enter
shrb
inc
dec
mov
jns
sbb
rcll
jno
addr16
sub
and
dec
loopne
xchg
aad
and
mov
mov
mov
add
jge
ret
or
jb
xor
insb
jge
fsubs
mov
mov
js
xlat
leave
cwtl
out
xor
push
mov
mov
out
ljmp
es
rclb
dec
sub
test
clc
dec
jne
test
outsl
inc
mov
out
pushf
out
shlb
ja
ljmp
ret
orb
les
sub
jnp
cmc
test
push
pop
repz
xchg
cmpb
mov
and
sbb
mov
jne
fs
int3
xor
mov
std
push
xchg
mov
jecxz
xchg
rcr
out
lahf
jo
xchg
decl
hlt
test
lret
andl
imul
fsubrl
stc
iret
imul
fnstsw
xchg
xchg
pushf
xchg
cmp
movsb
shlb
push
adc
add
aaa
add
cmc
jg
lea
adc
push
inc
out
out
inc
addr16
jnp
push
dec
sub
push
mov
xchg
out
sub
lahf
daa
scas
in
pop
ds
in
push
popa
std
sub
imull
cmp
cld
mov
mov
push
mov
xor
call
nop
mov
divl
jmp
sub
in
ja
lods
out
loopne
xchg
stos
movsl
int3
test
das
push
cmp
fisttps
mov
jle
mov
dec
jl
pop
pop
sti
xor
int
cwtl
int
les
xchg
cmp
cld
stos
pop
hlt
sub
cmpsl
mov
arpl
jns
fcoml
jmp
cmp
and
or
jmp
inc
push
pop
add
daa
ret
fs
cmp
fistps
mov
loop
mov
test
push
adc
mov
sbb
arpl
sti
sub
mov
stc
xchg
jmp
xor
fwait
stc
push
incb
and
lds
dec
jge
add
test
insb
lods
jbe
lea
pop
shll
jecxz
xchg
cltd
sbb
and
and
inc
test
xchg
cmp
jbe
imul
dec
popa
aam
in
pop
sbb
scas
xor
mov
lods
xchg
lahf
insb
repnz
arpl
dec
lcall
in
pop
mov
bound
pop
loop
dec
sub
cltd
vphadduwq
push
jns
mov
cmpsl
xlat
cmpb
push
lahf
push
in
addb
aam
test
sbbl
lods
das
sub
fmull
add
xchg
sbb
outsl
cmc
sub
sub
mov
cltd
test
orl
cmp
sbbl
jmp
xchg
lock
fs
test
nop
sbb
mov
push
mov
and
and
ljmp
sbb
push
mov
or
mov
out
ret
cltd
jo
lock
test
fdivrp
xchg
add
or
and
and
iret
and
dec
xchg
inc
aaa
cmp
mov
and
in
fbld
daa
and
in
cltd
dec
fcmovne
dec
fistpll
mull
xchg
and
cli
ret
pop
imul
adc
ret
and
je
lea
push
ret
sahf
test
mov
jb
popa
les
test
ljmp
inc
push
fs
ror
shll
dec
xchg
jbe
iret
lds
cmpl
pop
inc
cli
cmpsl
push
jo
stc
dec
sbb
clc
sarb
movsl
xor
adc
sbb
mov
jge
push
sub
cmp
push
pop
cmc
mov
test
mov
push
adc
daa
or
ret
jno
orb
clc
or
inc
push
aam
dec
rcrl
mov
icebp
sub
push
mov
xchg
sub
sub
xor
push
fnstcw
sbb
idivb
icebp
lods
fs
in
sub
lods
or
xor
and
fdivs
fdivrl
inc
scas
je
cmp
jl
nop
inc
incl
or
adc
movsb
and
pop
sub
push
xchg
movsl
scas
jge
or
fisttps
leave
or
sahf
imul
das
cli
hlt
or
dec
pop
cmp
sub
adc
jnp
xchg
cmp
xchg
and
jns
lahf
mull
jge
enter
or
push
xchg
shr
mov
ret
addps
pop
movsl
sub
jl
add
add
mov
jl
jecxz
pushf
cmp
pop
ss
in
push
daa
int
sbb
push
jl
in
js
push
icebp
mov
mov
pop
fcomps
popa
cli
mov
movsl
hlt
fimuls
clc
xor
mov
add
and
aad
mov
xchg
mov
cwtl
loop
fcmovbe
fmull
fistps
push
mov
repz
movsl
mov
and
sti
push
sbb
mov
js
push
xchg
jge
jl
push
dec
add
push
bound
movsb
shll
adc
mov
into
mov
mov
insl
sbb
add
enter
push
ret
jge
sub
xor
cltd
add
addr16
sarl
inc
aad
fistps
push
pushl
std
mov
xchg
pop
fimuls
adc
jle
out
fwait
mov
mov
in
cmp
lock
xchg
test
xchg
in
mov
cmc
jg
pushf
xorb
je
add
cmc
adc
mov
inc
push
fistpl
mov
clc
pop
add
sbb
mov
mov
adc
popf
lret
and
dec
xor
mov
incb
cmc
lds
inc
cwtl
mov
cmp
pushf
adc
lods
stos
ficompl
out
lods
lods
adc
jg
test
lock
test
adc
orb
aad
pop
stos
shll
adc
mov
jg
ret
shll
shll
push
cltd
mov
cmp
ljmp
scas
test
dec
push
shll
repz
ss
push
cmc
loopne
inc
jno
push
mov
fucomp
sub
orl
push
mov
mov
jne
inc
fisttps
das
xor
mov
mov
adc
mov
js
pop
mov
outsl
jbe
out
aaa
gs
cmp
pop
cmp
cmp
mov
xchg
ret
out
xor
and
hlt
inc
repnz
jecxz
push
fisubrl
push
fistpl
fsts
pusha
pop
cmp
push
xor
inc
sar
mov
jg
sarb
shl
das
rcll
mov
ret
sub
dec
js
fisttps
and
add
xchg
push
dec
or
fucomp
repnz
aad
sub
or
adc
xor
test
fistpll
popa
cmpsb
cmp
or
mov
daa
and
cs
cmp
mov
punpcklbw
push
data16
popa
pop
sbb
mov
shrl
inc
pop
bound
repnz
hlt
adc
cs
outsb
xor
fsqrt
jecxz
mov
std
or
push
push
jle
adc
popa
fnsave
cmp
inc
sbb
mov
out
std
aam
mov
xchg
cmp
leave
jle
mov
and
cmp
adc
or
or
jne
jb
and
pop
xchg
sbb
xchg
mov
movsb
test
addl
sti
adc
mov
sub
cld
add
mov
xor
dec
pop
cld
inc
cmpsb
fisubl
cmpb
xchg
add
jns
mov
cmp
or
sub
push
icebp
lods
dec
popa
mov
mov
daa
arpl
out
mov
xchg
cmp
or
clc
fidivrs
lods
pop
arpl
sub
fsubp
cmp
insl
add
xor
fdivrl
push
jp
pop
in
dec
ss
sbb
sub
xorb
adc
mov
pusha
jecxz
iret
xor
cmp
or
rol
inc
and
mov
jno
and
pushf
out
cmp
inc
cmp
mov
xchg
push
or
mov
mov
in
pop
push
notl
xchg
ret
or
add
sarl
pop
cmc
sti
pop
pop
ljmp
sti
mull
xchg
mov
fcompl
adc
popf
mov
imul
mull
mov
and
jg
mov
stos
lds
pop
xchg
ljmp
sbb
rcrl
mov
xchg
pop
lret
sti
int
xchg
fisttpll
xor
loopne
jb
fcomip
movsl
mov
leave
lcall
scas
lret
mov
stos
testb
sti
jp
and
loope
push
add
dec
xchg
dec
in
fiaddl
mov
push
dec
pop
add
jnp
jle
cltd
shrb
lret
addl
iret
scas
push
pop
sahf
in
cs
pop
mov
mov
fbld
mov
sub
ja
mov
or
mov
sbb
lea
xchg
xchg
sub
jg
mov
sub
lret
cmp
inc
ret
or
xorb
shll
push
push
rcl
mov
test
or
loopne
pop
or
xor
addr16
adc
js
int
out
rcrb
ret
ja
pop
fdivr
rclb
dec
xor
leave
psrld
inc
dec
pop
add
out
and
add
sbb
xchg
scas
leave
inc
out
les
loopne
cmp
stos
push
jecxz
scas
loop
dec
cmpsb
mov
out
sarb
sbb
fnstenv
dec
cmc
fdivp
mov
mov
scas
pop
jecxz
int
mov
jnp
lods
cmp
adc
das
cli
mov
xor
mov
add
lret
cltd
outsb
mov
jl
mov
pusha
add
mov
pop
or
addr16
fwait
ret
jmp
hlt
inc
repnz
mov
xlat
ficoms
ljmp
add
aaa
adc
push
jl
cmp
cmc
test
or
sbb
add
sub
mov
push
push
jp
aas
jae
orb
pop
dec
or
push
loop
dec
ljmp
mov
lods
aam
push
dec
and
inc
sub
sub
mov
jno
or
push
inc
sbb
insl
subb
xchg
arpl
add
imul
scas
jle
pop
das
movsb
faddp
fisttpll
aam
push
adc
out
inc
fimuls
pop
inc
jb
sbb
adc
out
push
inc
or
ffreep
mov
jecxz
jno
ss
sbb
js
ret
call
pop
inc
sti
repnz
and
adc
xor
testb
out
shrb
repz
int
lahf
test
sbb
sub
cmpb
sbb
push
repz
pop
mov
cmp
fsubrp
jl
popf
adc
mov
xor
cmpl
popf
jecxz
gs
hlt
xor
mov
cmp
mov
mov
sub
sub
cmp
xor
mov
inc
sahf
rclb
add
stos
push
jb
js
iret
in
mov
popa
push
sbb
or
and
mov
xchg
out
jmp
xorb
test
pop
cmp
push
mov
xor
xchg
ret
adc
xchg
xchg
cmc
add
add
cmp
fidivs
cmpsb
aam
mov
stc
sbb
pusha
cwtl
inc
push
jbe
rcll
push
jnp
mov
sub
iret
inc
addr16
mov
xor
fcmovu
mov
imul
and
xchg
sarb
lahf
leave
pop
adc
add
xchg
sub
xor
ret
push
js
fmull
pushf
push
xor
je
xchg
loop
xchg
popf
lods
sbb
repz
inc
arpl
ficompl
and
push
shrl
mov
data16
sbb
je
push
push
fcom
imul
push
imul
loopne
or
xchg
dec
pop
cmp
mov
ret
dec
fstpt
imul
jb
push
loop
cmc
fcmovnbe
sbb
stos
out
out
xchg
je
outsb
leave
or
or
jl
fdivrl
add
rcl
scas
enter
pop
cmp
lea
mov
les
and
shll
shl
mov
aas
sbb
je
lods
in
ret
mov
insb
scas
in
in
pop
les
call
into
adc
dec
icebp
push
pusha
int
jmp
imul
mov
aas
adc
addr16
mov
movb
mov
xchg
adc
add
into
jl
mov
xchg
jae
iret
push
andb
into
leave
pop
dec
mov
out
pusha
in
add
xchg
sbb
popa
stos
add
xor
adc
les
aam
xchg
pop
push
jae
sbb
pop
scas
sub
inc
jmp
stos
push
xchg
and
sub
rorl
dec
push
test
aas
pop
xchg
jg
adc
lahf
sbb
clc
cmp
outsb
inc
pop
cmpsb
out
pop
je,pn
in
pop
xchg
xor
xchg
aam
pop
out
jno
mov
dec
jae
or
idivb
les
xor
repz
arpl
rdmsr
rcrl
jns
popaw
ret
mov
rcr
adc
mov
mov
loop
lea
xchg
fiadds
xchg
xor
and
adc
jl
add
sub
movsb
pop
xchg
aas
cld
jp
loopne
clc
sbb
leave
jge
fisttps
jmp
lods
mov
insl
mov
in
push
and
or
jecxz
scas
mov
add
mov
or
test
sub
xchg
test
sahf
insl
inc
ret
pop
mov
clc
push
lds
ret
mov
mov
pop
jns
lret
fsubr
into
icebp
mov
pop
adc
imul
test
push
push
into
lahf
dec
stc
test
mov
jbe
sbb
jp
or
xchg
pop
out
jecxz
cmp
add
loopne
dec
repz
fbstp
mov
test
inc
in
js
jg
mov
fistl
mov
or
xlat
add
pop
xchg
sub
inc
mov
cmp
sbb
lds
sub
popa
cmpsb
sub
and
pop
xchg
add
mov
arpl
fistps
adc
sbb
data16
loope
mov
xor
xchg
jg
xor
mov
mov
and
jmp
xor
arpl
xor
xchg
js
fstl
cmp
int3
fidivl
fucomip
nop
sub
test
in
int
adc
cltd
pop
nop
out
inc
jb
ret
sbb
inc
test
arpl
mov
adc
dec
push
fidivl
sbb
fnsave
cltd
test
and
cltd
icebp
arpl
ret
inc
sbb
mov
dec
push
cmp
js
push
daa
or
rorb
pop
xchg
mov
es
pop
jae
dec
jp
clc
aam
pop
jmp
dec
popa
jmp
jmp
lcall
pop
roll
push
sbb
lret
xchg
mov
inc
sub
mov
ds
sar
movsl
das
pop
xchg
mov
lds
push
rcr
loope
add
inc
es
cmp
or
fwait
mov
cmc
sahf
in
rclb
test
pop
ja
and
roll
jecxz
insb
and
xchg
adc
js
imul
in
aaa
jl
mov
lea
hlt
test
jecxz
or
push
sbb
lds
in
movsl
in
xchg
cmp
cmc
adc
push
decl
xor
cld
push
sbb
popf
cmp
fsubl
mov
fiadds
insb
inc
outsl
xchg
inc
or
mov
mov
outsl
pop
popa
and
dec
adc
push
sarb
mov
cmpsl
cmp
cmp
imul
cmp
mov
ret
pop
xor
and
fidivs
inc
jb
and
insb
mov
xor
pusha
sbb
addr16
test
cmp
adc
mov
outsl
ja
or
repz
icebp
push
in
outsb
sbb
jb
cwtl
cmc
repnz
or
dec
or
aaa
ja
cli
mov
testl
push
mov
enter
mov
adc
add
data16
inc
lds
movntq
out
mov
shlb
popa
xchg
lahf
mov
mov
mov
dec
adc
add
lahf
dec
pusha
jmp
ja
es
sub
aas
inc
pop
gs
pop
push
out
mov
or
mov
and
push
aad
push
addr16
mov
andl
out
xor
jns
xchg
rcl
movsl
mov
insl
mov
mov
popa
jns
mov
repnz
fsubs
sbb
dec
imul
dec
add
sub
jns
adc
dec
xor
mov
jnp
push
xchg
pop
cmp
jns
int
mov
cmovns
into
dec
jns
dec
mov
xchg
sti
adc
xchg
and
dec
and
sub
sub
ss
enter
mov
ljmp
add
adc
loope
jmp
or
fldcw
imul
mov
inc
sub
aaa
shrl
mov
cld
mov
jo
adc
lahf
or
jl
push
add
xchg
lock
cltd
cmp
cmc
sub
or
sub
leave
outsb
push
jae
test
jecxz
jg
cmpsl
out
push
lea
daa
es
lret
ljmp
adc
aas
shl
adc
add
cltd
cwtl
inc
lods
in
pop
fisttpll
fisubs
sbb
lods
data16
js
je
outsb
jo
in
pop
cmp
idivl
inc
and
rcrl
jge
xchg
dec
mov
popa
cmp
adc
add
data16
ja
sbb
loop
vandnps
push
sbb
cmpsb
sar
in
scas
in
fmull
fstpl
subl
push
pop
pop
clc
xor
mov
aam
outsb
mov
ljmp
popf
push
push
xchg
and
inc
les
inc
push
bswap
fcompl
or
int3
std
adc
adc
push
enter
shrb
or
lret
mov
and
movsl
push
cwtl
and
out
rorl
pop
adc
ljmp
loopne
mov
pop
pusha
inc
mov
pop
cmp
sarb
cmc
mov
movsl
or
cmpsl
push
ljmp
notl
decb
int
es
lret
pusha
nop
das
cmp
or
mov
pushf
aad
loopne
scas
xchg
lahf
mov
das
ja
fistps
sub
ss
mov
mov
mov
insb
out
xchg
sbb
jp
das
fistpl
pushf
sub
xchg
cltd
loop
stos
sub
mov
mov
lret
pop
test
push
jo
ror
shrl
add
sbb
pop
jns
scas
ljmp
jno
out
pushf
mov
jecxz
or
mov
jl
out
add
aaa
stos
cmp
dec
int
enter
inc
inc
dec
push
imul
push
push
push
pop
fs
scas
repnz
add
jnp
dec
orb
rcll
push
mov
jg
adcb
adc
cld
jo
fs
mov
mov
ret
mov
fistpl
les
out
cmpsl
pusha
mov
add
outsb
xlat
mov
pop
cltd
ret
jp
sub
pop
stc
jns
pop
or
insb
adc
scas
sti
sub
jns
sub
cwtl
aam
insl
push
sub
cli
test
pop
jae
cmp
popf
popa
insb
cmp
scas
mov
or
xchg
movsl
push
scas
incb
push
lds
in
les
xor
dec
in
das
push
xchg
rcrl
push
cmp
jg
push
push
push
enter
and
jne
scas
aad
push
pop
aaa
inc
ss
mov
sbb
dec
mov
add
add
push
adcb
or
pusha
rorb
sarl
push
inc
movsb
inc
mov
pop
xlat
mov
rorl
inc
xor
out
mov
or
mov
adc
cli
stos
pop
xor
out
cmp
fimull
repnz
lahf
pop
jnp
lret
test
mov
jno
add
les
push
pushf
rorb
ljmp
ret
push
loope
sahf
pop
pusha
stc
leave
cld
mov
xor
pop
adc
nop
test
inc
xchg
xorb
out
push
test
fisubrs
repz
add
adc
dec
push
icebp
mov
mov
pusha
inc
mov
testb
jmp
sub
icebp
inc
pop
repnz
xor
mov
jae
daa
fcmovb
push
adc
fmull
pop
hlt
cmp
fnstcw
dec
jnp
dec
shll
inc
cmp
push
int
lods
push
addr16
lret
xchg
mov
out
pop
adc
enter
daa
jge
dec
data16
pop
inc
fnsave
xchg
aam
jmp
jno
int
xor
bound
fs
pop
cmp
loopne
dec
sub
mov
push
cmp
scas
inc
push
add
lods
call
mov
add
push
jb
aaa
mov
aad
lahf
jb
cli
daa
insb
mov
push
dec
nop
jecxz
xor
mov
mov
xor
add
popf
mov
mov
adc
jecxz
das
xchg
push
idivl
cmp
pusha
xor
or
lcall
enter
cld
pop
push
gs
popf
cmp
aam
adc
push
inc
adc
mov
push
cltd
inc
mov
cmpsb
andb
dec
out
mov
mov
das
adc
adc
sbb
lcall
fldl
je
add
push
das
add
call
cld
or
int
or
in
cmpsb
lds
sbb
cmp
lods
xor
fstps
or
sbb
mov
cmp
add
pop
xchg
inc
cmc
les
cltd
mov
jl
mov
sub
sub
mov
out
push
mov
or
movsb
in
jo
aaa
lcall
mov
lock
outsl
aaa
insl
pop
mov
jno
scas
fs
xor
and
xchg
clts
mov
jle
xor
cmp
stos
mov
ret
inc
adc
push
out
imul
inc
aad
rcrl
mov
ret
pusha
mov
fnstenv
pop
sub
push
adc
add
mov
ja
push
and
je
out
fs
or
out
mov
push
sahf
sahf
push
hlt
push
mov
outsl
jns
inc
pop
clc
push
hlt
out
in
jo
lahf
jns
cmpsb
xor
jl
cld
movsb
mov
add
sbb
push
and
push
push
test
mov
cmp
in
push
stc
pushf
add
inc
sbb
sub
test
repnz
pop
cmc
sbb
jo
fucomip
mov
jmp
lock
clc
adc
ljmp
jl
add
std
push
cmp
fwait
ret
test
push
js
subb
xor
jbe
or
xadd
xchg
jl
sarl
and
fisubrl
mov
jo
jmp
dec
imul
mov
lahf
pop
test
fisttpll
pop
push
ss
dec
cltd
out
out
dec
in
pop
bound
ficomps
mov
cmp
es
jbe
inc
mov
inc
cmpsl
aas
cwtl
orl
and
and
pop
ss
fwait
sbb
push
lcall
push
vpsubsw
pandn
hlt
aas
push
cs
xchg
out
and
lret
jge
test
or
pop
lds
insl
push
add
jecxz
mov
xor
shrl
out
in
push
push
mov
sub
mov
mov
lcall
aam
stc
aas
fldl
push
cmp
nop
and
push
divl
pop
sub
mov
dec
add
mul
ficompl
or
sub
mov
rolb
scas
in
mov
rcll
sbb
adcb
lahf
iret
popf
jnp
btc
lret
cmp
or
sar
fldl
lods
dec
mov
pop
mov
or
lret
add
add
lret
pop
test
push
arpl
outsb
xchg
fwait
insb
orl
xor
fs
mov
loope
hlt
js
popf
test
mov
mov
cmc
rorb
fnstcw
xchg
subb
pop
cltd
fstps
jo
mov
test
and
lods
mov
xor
push
push
lahf
and
aas
sar
mov
cmpsl
push
and
mov
and
and
sub
sahf
pushf
ss
inc
xchg
cltd
xchg
mov
sub
aaa
or
in
or
mov
ss
mov
addr16
pop
pop
movsb
in
mov
jns
mov
sbb
lcall
sbb
sub
push
lret
dec
jge
test
jne
push
inc
mov
adc
mov
scas
mov
scas
ret
adc
inc
insb
cld
cmpsb
mov
jbe
mov
loop
sbb
push
mov
ljmp
mov
test
jns
xchg
mov
jecxz
xor
out
imul
or
lcall
out
fdivrp
and
jecxz
repz
xchg
mov
xchg
dec
std
rorb
fildl
and
enter
jbe
subl
in
push
pop
rcll
int
cmp
push
sbb
aas
lahf
cmc
into
cmp
jae
stos
cmp
test
mov
sbb
or
adc
rorb
or
jne
jns
sarl
aaa
dec
mov
push
mov
xchg
div
call
inc
clc
ficoml
adc
jo
mov
xor
mov
push
orb
pusha
stos
mov
cmp
pusha
adc
cmp
xchg
test
sbb
add
push
push
js
jno
or
ret
cmp
push
notb
adc
sti
or
xor
lock
jb
sub
loopne
nop
clc
push
std
mov
ss
pop
and
int3
sub
jmp
inc
stc
int
push
ficoms
leave
ficoms
arpl
xorb
add
xchg
movsb
test
mov
mov
sarl
out
fnstsw
outsb
incb
nop
sub
inc
cmp
out
icebp
sub
test
and
pop
in
aad
aaa
dec
rorl
aad
mov
mov
mov
mov
dec
dec
and
daa
je
rol
jae
jo
pop
mov
hlt
mov
loop
adcb
push
int
sbb
loop
inc
jbe
xor
add
out
adcl
scas
imul
jecxz
mov
mov
xor
fiaddl
in
jmp
aam
mov
lret
mov
or
cmp
andl
push
pop
adc
adc
aas
lahf
jle
sub
sbb
lock
mov
in
and
nop
pop
addr16
jmp
por
mov
cltd
pop
ret
mov
dec
mov
mov
inc
sub
adcl
test
lea
jp
inc
jae
add
loope
and
jl
test
fstpl
adc
pop
pushf
call
dec
fmul
mov
cltd
xor
mov
push
ror
std
loopne
sbb
shll
push
mov
sbb
cmp
dec
scas
cmp
mov
in
in
loope
les
xchg
lds
mov
cmp
xor
out
int3
fnstcw
add
out
cli
iret
andl
mov
push
sar
dec
and
jne
push
fistpl
lahf
clc
movsl
or
aaa
leave
push
notb
insl
jns
cmpsl
mov
sbb
add
inc
fistl
cmpsl
rcrb
repnz
xchg
dec
mov
adc
xor
and
mov
sarl
repz
push
push
xchg
ficoms
stos
popa
in
std
insl
and
cli
jae
push
xor
jmp
adc
mov
pop
push
jns
add
popa
sar
or
push
inc
inc
test
pop
inc
aas
xor
mov
cwtl
push
push
add
ficomps
jno
push
mov
iret
sbb
xchg
popa
and
and
cmpsb
or
sbb
fidivrl
push
sahf
jge
xor
cmc
pop
scas
xchg
fisubs
mov
push
fiaddl
cmc
scas
jecxz
push
or
cltd
leave
andb
dec
lcall
into
mov
pop
adc
dec
sar
push
xorb
xchg
inc
mov
dec
add
shrb
jbe
subb
xchg
rcll
fsubrp
jns
pop
sub
pushf
in
xorl
loope
imul
scas
popf
push
cmpsl
and
test
cli
sbb
pop
int
cld
xchg
mov
dec
inc
jnp
mov
push
adc
or
outsb
gs
dec
mov
sbb
and
adc
cs
sub
test
cld
jl
sub
xchg
cmp
lret
dec
jnp
push
add
out
je
pop
sbb
and
push
jns
sbb
iret
xor
das
jno
int
lahf
lcall
pop
imul
mov
nop
jecxz
out
in
dec
inc
and
js
pusha
push
out
shlb
mov
fwait
inc
mov
mov
insl
xor
sbb
popf
pusha
jg
xchg
dec
out
ret
insl
lret
xor
pusha
stc
lock
lea
dec
xchg
or
push
fs
mov
jmp
insl
push
in
movsl
ficomps
push
xchg
cmpsb
inc
dec
xorb
jne
int
cmc
adc
subb
call
stc
pushl
lock
adc
cltd
cmp
shrl
add
ljmp
cmp
mov
lret
mov
jp
jns
xchg
insl
jo
or
dec
push
mov
imull
pop
ja
das
orl
mov
es
fadd
repz
repnz
sbb
mov
mov
adc
orb
imul
gs
xor
test
lods
inc
fistps
adc
sub
mov
pop
add
cwtl
dec
xchg
cwtl
sbbb
test
mov
aam
adc
outsb
mov
int3
test
pop
cmp
push
imul
jno
jl
dec
xchg
pop
add
add
sarb
call
push
cwtl
loope
jne
pushf
loop
push
adcb
push
and
std
test
lods
cmp
imul
jmp
jp
push
xchg
es
mov
cmp
sub
popf
insb
roll
cs
jp
dec
in
imul
data16
lea
push
fnstsw
inc
lock
cli
in
xor
loope
dec
gs
mov
pop
daa
repz
sub
sub
pusha
xor
adc
js
xchg
cmpsb
mov
outsb
pop
fwait
push
xchg
lret
lods
test
out
aas
mov
cs
fiadds
lcall
push
inc
bound
mov
std
sbb
xor
mov
sbb
sbb
call
sub
cmp
dec
sar
jp
fistpl
movsl
pop
mov
in
sbb
pop
jecxz
movsl
in
sbbl
sbb
inc
cwtl
or
push
stos
pop
dec
mov
test
clc
lods
adc
stos
mov
arpl
xchg
stc
loop
mov
adc
dec
add
jno
or
in
fistpl
imul
pop
hlt
inc
jno
add
jns
pop
dec
inc
push
dec
int
mov
cmp
inc
incl
movsb
lock
xor
out
stc
fidivrs
lods
dec
loope
jbe
stos
jbe
mov
in
es
pop
lret
jp
mov
stos
pop
xchg
mov
cmp
sub
dec
dec
mov
pushf
push
in
je
jnp
or
cld
nop
push
lods
jnp
lcall
mov
jl
or
hlt
add
repnz
or
lret
inc
xchg
inc
xor
xchg
scas
outsb
add
dec
es
js
dec
fs
xchg
aas
jmp
cmp
fisttpl
xchg
in
scas
xchg
negb
push
imul
rcl
test
fildll
mov
mov
test
gs
pushf
inc
and
xor
sub
mov
sbb
cltd
cmp
mov
sarb
push
test
mov
mov
dec
movsl
pop
add
stos
pop
xchg
jecxz
pop
mov
js
hlt
jbe
xchg
pusha
jl
pop
outsl
inc
or
or
cmp
lds
add
sti
int3
mov
lret
insl
popf
pop
jno
xchg
sbb
jg
push
nop
pushf
sub
inc
xchg
int3
push
sub
mov
sbb
pop
push
xor
pop
mov
hlt
test
repz
or
cmp
cwtl
les
mov
push
sub
enter
or
mov
or
cmp
xchg
or
push
mov
aam
ds
or
sar
fildl
mov
and
sub
cmpsb
cli
ja
adc
adc
in
aam
and
sub
insb
jns
fimuls
mov
adc
cmp
aas
dec
xchg
arpl
xchg
adc
sub
pop
xor
adc
fdivr
loopne
mov
test
cmpsb
mov
adc
lds
fldl
mov
mov
shrb
rsm
mov
sti
aas
mov
inc
inc
test
xor
pop
ja
add
ds
xor
add
mov
push
ds
fnstenv
sahf
push
jmp
or
and
push
imul
mov
lods
jge
in
rcrb
xor
scas
lret
jb
add
shr
cmp
or
or
or
adc
rclb
cmp
pop
mov
icebp
push
cmpsb
jge
push
lods
push
jb
push
orb
ss
dec
jno
cs
insb
pop
cs
inc
pop
jno
lods
mov
xor
fnstcw
aad
lahf
mov
xchg
or
pop
negl
mov
lret
push
jns
jmp
mov
adc
in
jne
push
adcl
add
push
js
xchg
sub
dec
cld
cli
ja
ss
outsl
pop
xchg
pop
inc
xor
xor
bound
pusha
lahf
jmp
mov
mov
pop
stos
stos
ds
cmpsl
xchg
xchg
jne
leave
orb
test
jae
arpl
fistps
jo
aas
loope
pop
pop
add
inc
into
popa
xchg
sub
adc
daa
inc
cmp
dec
movsl
ja
inc
test
pop
push
fbstp
or
cwtl
nop
das
stos
fcmovb
and
jmp
pushf
cs
cmp
das
and
roll
loopne
out
xor
xor
shlb
cli
in
cmp
in
lar
enter
cmc
std
in
sub
and
jle
xchg
push
lret
int
mov
xor
xchg
dec
mov
cwtl
movsl
scas
outsb
push
cmp
dec
fsubrs
das
push
in
mov
fildll
popf
cmpsb
das
lock
push
add
stos
lahf
nop
roll
pop
push
mov
cmp
ss
push
notb
out
and
xor
pushl
xlat
hlt
aam
pop
fs
sub
jns
xchg
xor
sahf
adc
push
fmul
xorb
dec
cmp
add
inc
clc
fwait
inc
addb
out
jo
inc
decb
mov
add
sbb
xor
enter
insb
pop
shlb
lret
cmp
push
or
popa
adc
mov
add
push
fcompl
cli
mov
sti
aad
fwait
xor
fldcw
push
xor
push
enter
pushf
jl
mov
xor
fiadds
jg
daa
mov
mull
in
test
push
xor
das
mov
stos
dec
push
dec
jp
pmuludq
shrl
sbb
aaa
mov
aas
jae
ljmp
push
cmp
jg
dec
inc
mov
stc
sub
dec
dec
mov
xor
js
jne
sbb
je
dec
mov
fcmove
or
push
inc
nop
repz
std
sub
inc
mov
rcrb
or
repz
aad
lcall
jns
jp
sub
push
push
stos
dec
adc
fldl
addb
push
sbb
imul
xchg
add
cmp
inc
sub
mov
out
jb
ret
cmp
cld
cwtl
aam
jg
icebp
stos
aaa
inc
bound
mov
cmpsb
scas
fwait
sub
sub
ja
pop
int3
sti
ret
cmpsb
dec
loope
pop
mov
pop
mov
adc
cld
sbbb
jp
pop
pusha
mov
jmp
sub
xor
das
jo
test
sub
push
ret
pop
test
sub
sbb
testb
out
mov
mov
lret
daa
jns
jecxz
call
sub
dec
mov
cld
enter
cld
imul
std
ret
fcmovnb
jp
or
int
leave
add
xchg
jle
rcll
xchg
subl
sti
shll
cmp
xchg
mov
mov
sbb
mov
ds
imul
hlt
sub
aam
ret
dec
lret
dec
js
fwait
test
pop
mov
insl
icebp
jecxz
push
nop
jns
jns
pop
outsb
mov
and
movsl
cmpsb
int3
mov
xorl
repz
add
lret
rcrl
test
fs
jg
subb
mov
insb
mov
xor
xor
xor
xlat
add
pop
xchg
and
adc
xor
inc
lret
stos
ss
dec
in
xchg
pop
shrl
fbld
jmp
inc
adcl
outsb
push
push
and
aam
xchg
in
ret
dec
pop
sar
sbb
xchg
fisttps
iret
in
or
push
and
jb
cld
mov
gs
cld
aad
mov
jl
and
cli
div
data16
inc
mov
sub
xor
mov
inc
xchg
cli
mov
and
std
sbb
imul
jno
fs
dec
lods
in
out
lods
inc
scas
jl
movsl
test
loop
push
out
push
push
add
nop
xchg
dec
adc
in
pushf
and
ret
decb
add
dec
out
adc
pusha
dec
sbb
or
mov
sub
lods
lcall
push
mov
add
aam
pop
mov
push
in
ret
cmp
cmc
out
sti
stc
xor
mov
repnz
or
mov
popa
pop
cmpsl
das
mov
in
daa
insb
insb
dec
fiadds
inc
xor
loop
fidivl
and
pusha
pop
xor
fdivl
dec
jle
fcmovnu
cld
in
inc
fildl
sub
push
aad
fldl
adc
js
data16
or
pop
jecxz
and
addr16
out
xchg
int3
out
add
pop
adc
std
stos
xor
in
test
jb
mov
xor
pop
jbe
iret
mov
jecxz
xchg
sti
mov
mov
jae
cld
loopne
aam
mov
mov
dec
xlat
ljmp
xlat
fwait
pop
mov
cmp
add
xchg
je
jge
fldenv
popa
test
std
jnp
rclb
aad
subb
sub
xor
sbb
test
dec
sub
pusha
fs
inc
mov
inc
js
xor
add
imul
add
jl
xor
nop
push
sub
sbb
cmpsb
mov
push
push
sahf
xor
in
sub
and
lods
jbe
das
cs
stos
insb
outsl
inc
dec
test
test
jmp
dec
data16
mov
popa
and
or
fnsave
cmp
xor
jnp
push
jo
pushf
cmp
dec
push
rclb
lret
popf
adc
imul
js,pt
icebp
shlb
popa
scas
mov
xchg
mov
out
push
mov
je
out
fstl
xchg
xchg
cwtl
pop
push
cmp
xor
ret
or
into
cmp
jecxz
ret
jnp
add
mov
jne
mov
cmc
cltd
inc
mov
adc
insl
dec
test
pusha
cmc
push
ja
jne
xorb
dec
sub
inc
mov
push
jne
out
fsubrl
jns
mov
push
inc
outsl
es
nop
into
aaa
enter
popa
stos
ljmp
lahf
shlb
shl
pop
inc
icebp
adc
insl
nop
lret
fists
xor
xchg
push
xchg
popf
adc
xchg
push
pop
lahf
jns
pop
mov
adc
inc
xor
sahf
sbb
inc
mov
data16
or
loope
jg
fsubs
and
or
jge
jl
lods
pushf
dec
pop
cmp
orl
xchg
add
cmp
sub
jmp
dec
jno,pt
adc
or
hlt
ljmp
inc
push
rorb
dec
jmp
mov
or
sbb
outsb
out
flds
xchg
xchg
and
les
inc
insb
faddl
leave
and
jl
in
dec
pushf
iret
push
mov
lods
cs
loope
popf
pop
mov
nop
shrl
mov
inc
add
neg
faddl
data16
inc
scas
outsl
lock
adc
lock
add
and
call
sahf
aaa
inc
lds
inc
cltd
sbb
sub
dec
dec
sbb
mov
out
fistps
push
or
iret
mov
mov
popa
nop
mov
jnp
cmpsb
outsl
ja
jmp
aam
imul
ret
or
in
pop
pushw
cmp
mov
or
shlb
fsubp
mov
loope
or
clc
xor
sub
daa
jb
xchg
popa
imul
rclb
outsl
dec
mov
xchg
lahf
lods
cmp
push
rcrl
mov
ret
int
outsb
mov
sbb
mov
mov
pusha
out
and
pop
and
aas
push
xor
sahf
push
xchg
stos
or
mov
roll
mov
lahf
xchg
enter
jl
mov
inc
in
aas
stc
pop
lahf
aaa
lcall
callw
cltd
js
and
scas
icebp
jne
or
inc
cld
es
test
xor
mov
xchg
mov
jns
insb
adc
cmp
xchg
daa
xchg
adc
xchg
lock
adc
mov
jo
in
call
mov
sbb
jb
mov
pop
xor
rcrb
push
daa
mov
xchg
mov
jge
dec
lcall
test
icebp
push
pop
jmp
pushf
jae
push
dec
jge
lahf
loopne
adc
ret
push
and
mov
cmpsb
jae
cld
sub
popa
jmp
cmpsl
int
jns
mov
and
cmp
iret
loope
mov
sub
xchg
shrl
and
and
cvtps2pi
hlt
inc
loopne
sbb
les
adc
ss
clc
lods
mov
lea
lret
popa
xchg
fsubs
cmp
loop
mov
je
jo
sub
lods
shl
stos
push
subb
lahf
inc
mov
ret
inc
jl
stos
cmc
cli
cltd
add
lcall
jl
mov
pop
lock
inc
lahf
or
pop
push
hlt
inc
jecxz
xor
sbb
inc
into
arpl
gs
and
loope
das
in
push
push
add
cmp
add
sbb
mov
in
fstpl
fmuls
dec
mov
pop
cmp
add
push
pop
mov
or
ss
hlt
pop
inc
popa
popa
push
xor
pop
nop
add
iret
xor
dec
in
shrl
stos
pop
fstl
rclb
add
xor
imul
incb
jae
jbe
rol
ss
insb
mov
mov
cmp
push
lea
test
push
dec
xor
pop
inc
imul
jmp
test
jecxz
push
inc
cli
or
popa
push
lahf
and
aad
mov
je
loopne
rcrl
jb
mull
adc
subb
inc
dec
adc
xchg
and
sbbl
stos
call
incl
pop
jmp
cmp
dec
push
lds
fsubp
sbb
test
pushf
les
mov
aam
mov
jg
call
sub
sub
pop
je
pop
popf
lret
cltd
stc
lahf
testb
mov
and
mov
pushf
and
lea
dec
sub
imulb
dec
loope
shlb
lcall
pop
add
sbb
xchg
pop
adc
xchg
cltd
dec
div
dec
roll
dec
adc
mov
pop
or
scas
cmp
stc
pushf
loopne
xor
in
jp
test
inc
push
xchg
jp
je
or
xor
or
pop
int
gs
in
fsubs
push
ret
sbb
dec
mov
push
inc
add
xor
sub
fistpll
and
inc
jns
scas
je
cmp
sbb
lea
lret
cmp
and
jecxz
inc
test
dec
ds
out
mov
sub
ret
stos
cmp
aas
xlat
and
jns
iret
cmp
push
push
mov
fdivs
push
cli
mov
pushf
add
xor
cmpb
pushf
push
mov
testl
mov
sti
mov
movsb
mov
decb
lock
push
xchg
out
mov
xchg
fwait
push
in
mov
ljmp
and
mov
pop
fwait
cmpsl
and
imul
loope
dec
and
pop
sti
leave
inc
ret
inc
outsl
adc
aaa
lock
adc
les
dec
jmp
incb
pop
mov
pop
jns
fiaddl
mov
push
or
popa
sbb
jl
fs
push
fimuls
cmpsb
daa
or
icebp
lret
cmc
push
pop
in
sub
sbb
loope
mov
mov
lds
mov
lock
and
adc
repnz
sbb
inc
adc
dec
cmpsl
adc
cltd
xchg
cmp
lock
and
push
xchg
lret
inc
pop
insb
test
mov
pusha
xchg
arpl
bound
push
shlb
cmpsb
push
mov
mov
jo
pop
daa
cmp
out
enter
push
ds
dec
dec
not
mov
mov
aas
div
notl
jmp
xchg
mov
test
fiaddl
out
jne
out
dec
data16
test
mov
jb
add
and
sub
sbb
inc
rol
xor
lret
rclb
out
rcrl
sub
and
int3
mov
mov
stos
inc
lret
pop
cmp
movsl
push
sub
adc
pushf
sub
ret
dec
nop
xchg
and
fst
test
cwtl
mov
popa
cli
fisttpll
lods
mov
shll
test
jno
rol
add
dec
pop
in
notl
out
xlat
add
shll
dec
dec
mov
inc
stos
orb
dec
push
push
and
mov
mov
fnstcw
and
fstpt
sbb
sar
jecxz
add
repnz
fisttps
adc
into
and
or
mov
into
stos
and
loope
pop
jae
into
stos
push
insl
xor
jle
mov
push
leave
rcll
xor
es
popa
mov
sbb
mov
out
pop
push
imull
std
int3
adc
fdivl
xor
ret
adc
pop
iret
mov
pop
pop
lds
in
cmp
inc
stos
arpl
pop
gs
in
cmp
jp
stos
movl
mov
cmpsb
and
mulb
mov
testb
jae
mov
sbb
clc
xchg
adc
fwait
lods
cli
pop
jo
mov
mov
mov
jp
mov
lds
insb
inc
repz
cmp
dec
aas
in
jmp
dec
xor
rorl
repz
mov
ja
bound
loop
and
mov
or
pop
or
rcr
pop
pop
rcll
mov
jns
in
mov
pop
mov
sub
mov
pop
dec
sub
push
adc
stos
in
aaa
dec
xchg
inc
xchg
cmpsl
mov
inc
mov
rorb
iret
sbb
inc
aas
imul
pop
aad
or
adc
mov
addr16
fnsave
xchg
arpl
and
in
lret
int3
cmp
xchg
pop
pop
push
pop
pop
mov
pop
cmp
adc
sub
mov
pop
mov
inc
jnp
lahf
rcll
mov
mov
adc
test
pusha
out
sub
xor
sub
dec
scas
or
jae
sbb
lds
in
mov
mov
sahf
dec
pushf
inc
dec
pop
subl
fwait
mov
inc
or
movsb
aaa
mov
push
mov
or
adc
push
dec
mov
pop
sahf
ss
fisttpll
cli
lcall
movsb
shrl
ret
jo
cmp
je
inc
add
fidivrs
sub
xorl
leave
cmp
lret
adc
cmp
data16
xchg
call
lahf
mov
push
cli
ds
pop
mov
or
ds
xlat
gs
xchg
mov
cli
adc
test
pusha
loop
fcomps
dec
aad
and
jno
test
fisubl
mov
shll
stos
sahf
aas
adc
es
xor
mov
sub
jb
call
icebp
jmp
leave
sub
push
dec
es
and
jo
sbb
push
and
aam
mov
test
push
data16
push
nop
adc
incb
divb
mov
adc
jge
mov
adc
les
xchg
pop
jg
xchg
roll
pusha
xor
add
in
sbb
loope
xor
mov
adc
lcall
mov
jge
inc
sarb
xor
mov
sahf
and
push
pop
je
dec
sub
loopne
mov
or
jg
outsl
divb
ret
sbb
jmp
pop
jne
test
adc
xchg
fstl
xor
mov
ja
lret
jge
jecxz
pop
pop
lds
mov
repz
cmc
fildl
inc
or
hlt
jbe
push
fidivs
nop
cmp
sbb
ret
xchg
pop
mov
pop
loop
rcrl
mov
add
fistl
loope
add
xor
addr16
scas
push
push
dec
aaa
xchg
addr16
sub
sbbl
sub
lea
cltd
sbbl
lds
hlt
jg
and
in
out
xchg
and
icebp
mov
les
mov
push
mov
jnp
mov
or
out
mov
sbb
popf
pop
dec
out
cmp
add
mov
les
mov
je
mov
xor
loopne
mov
mov
push
mov
xor
dec
lahf
mov
xor
sub
imul
push
sarb
add
outsb
xchg
add
sbb
jno
loope
ss
daa
dec
xlat
or
jge
addl
mov
mov
cmpsb
rolb
and
sub
outsb
and
inc
jge
rcrb
jl
loope
dec
out
mulb
stc
and
fidivl
ss
sbb
pop
sub
pop
insl
adc
jg
decb
out
jle
subb
xchg
loope
dec
xor
fcmovnb
cld
jge
and
inc
arpl
jae
insl
and
mov
ficomps
sti
jne
rcll
inc
aam
scas
pop
iret
add
sub
xchg
jmp
into
mov
xchg
popf
xor
std
pcmpeqd
sarb
lods
test
cmp
xchg
lcall
lods
inc
sahf
inc
and
ja
mov
xchg
push
or
outsl
mov
ret
push
loopne
ljmp
cmpsl
fs
fcomp
add
push
xchg
fnstcw
dec
pusha
mov
xchg
jo
test
cmpsb
cmp
xchg
sub
push
out
jnp
pushf
arpl
imul
dec
inc
fsubp
fsubs
mov
pop
sti
jmp
push
mov
mov
or
mov
dec
sbb
mov
je
sbb
xchg
and
inc
add
mov
xchg
cmp
inc
in
in
mov
mov
adcl
adc
daa
bswap
data16
inc
test
loopne
shlb
add
pop
add
pop
mov
int
sub
rclb
mov
push
clc
addb
mov
es
sub
lahf
pop
loopne
cwtl
ds
fadds
stos
mov
pusha
fs
pop
in
mov
les
pop
xchg
pop
mov
mov
shlb
shrl
test
jno
jno
pop
push
or
arpl
cmp
inc
jge
iret
jmp
pusha
mov
sub
aaa
sub
add
jae
testl
sub
loope
lods
push
cmpsb
mov
sahf
mov
loopne
fwait
dec
cmp
pop
mov
cli
insb
jg
addr16
push
stos
lret
mov
dec
ret
and
fidivrs
jbe
sub
stc
jae
sbb
fcoms
test
cli
cmp
ss
mov
or
rcll
push
sbb
testl
imul
stos
jmp
pop
sbb
sti
enter
cmpsl
lret
mov
fs
mov
rorl
and
push
pop
rcll
xchg
and
push
or
or
push
loop
sbb
pop
ss
aad
mov
aas
shll
pusha
test
jae
fiadds
lret
fs
stc
inc
mov
movsb
sub
push
addb
movsb
inc
inc
test
xlat
jle
fimull
sub
mov
cmp
dec
cmp
sbb
stos
push
inc
pop
ret
jns
je
popa
loope
lret
or
or
push
inc
mov
cmp
outsl
insl
add
hlt
stos
xor
jae
in
cwtl
scas
inc
decl
std
push
sbb
mov
out
lock
xor
add
xchg
fistpl
bound
mov
pop
jb
inc
mov
dec
fwait
mov
std
mov
aas
insb
addr16
arpl
sbb
in
ds
ret
daa
xlat
dec
xor
xlat
call
mov
xlat
outsb
ss
mov
fwait
mov
lahf
out
xor
add
ss
mov
push
adc
fldcw
push
icebp
push
cmp
sbb
inc
cmp
rclb
dec
insl
aaa
or
inc
fcompl
adc
push
or
push
inc
sbb
popf
ljmp
jae
fidivrs
aam
push
repz
sub
cmp
ss
jg
sbb
jnp
sbb
in
popf
inc
lret
cltd
mov
pushf
and
pop
inc
lds
xor
xchg
pop
or
pop
inc
flds
outsb
loop
inc
xor
orb
cld
arpl
loope
outsb
add
sahf
and
insb
mov
aas
fwait
idivb
fildl
stc
int
cli
shlb
xchg
dec
inc
frndint
xchg
jecxz
jnp
jle
shll
fidivrs
loope
sub
outsb
test
xor
pop
je
mov
xchg
dec
xchg
stos
adc
cli
mov
jno
ja
sarb
jg
xchg
xchg
dec
stc
test
popa
push
or
mov
cltd
ds
xor
xor
movsb
push
shll
cli
enter
push
dec
andl
cmp
lea
testl
mov
pop
xor
cmpsl
xchg
mov
adc
mov
ret
inc
stc
int
mov
aam
outsb
test
cmp
je
push
or
mov
js
sub
cwtl
shll
cs
in
loopne
addr16
and
ret
je
adc
inc
test
jo
iret
jo
jae
pop
pop
call
enter
mov
cmp
outsl
sahf
pop
adc
xor
ret
sarl
cltd
dec
jnp
lods
hlt
pop
adcb
mov
scas
jl
andl
mov
push
test
ret
inc
or
test
loope
sti
fisubl
lret
push
add
int
enter
cltd
pop
cld
sbb
sbb
movsl
sahf
aas
or
mov
pop
mov
cmc
add
scas
pop
out
mov
repz
pop
and
inc
inc
movsl
test
les
jmp
pop
sarb
aad
mov
pop
and
lods
movsl
insb
pop
enter
sub
or
adc
sub
mov
insb
pop
pop
lds
enter
ss
addb
mov
fwait
aas
xchg
stos
xchg
xchg
dec
inc
sub
negb
mov
imul
repnz
or
lods
movsl
sbb
out
int3
mov
fdivrs
imul
sti
ljmp
dec
es
xchg
aaa
inc
dec
cmp
jo
xchg
test
mul
mov
pop
imul
fldcw
mov
rolb
xchg
fimull
movsb
dec
stos
aam
mov
out
lret
int3
jne
sar
test
xor
pop
ret
mov
mov
leave
jle
dec
or
xor
or
jmp
xor
mov
int3
insb
pop
add
sbbl
or
mov
cli
dec
daa
fs
scas
mov
in
push
nop
bound
sbb
cmpps
in
xchg
dec
sub
cmp
pop
cmpsb
xchg
testb
outsb
stos
push
cmp
js
mov
lods
bound
add
mov
sbb
clc
in
push
clc
test
pusha
add
ss
testl
scas
decb
scas
repz
sbb
aad
out
flds
fxch
fmul
jl
cltd
call
iret
icebp
stc
jl
movl
in
je
mov
sub
pop
fsubs
and
cltd
fnstsw
or
or
jg
js
sahf
inc
sub
lods
jo
and
jbe
sub
rolb
lcall
mov
data16
fwait
lock
jae
mov
clc
out
popa
call
and
fiaddl
cli
int
jge
arpl
lods
ljmp
cmc
lret
pop
inc
mov
aad
push
loope
or
xor
push
cmc
cmpsb
pop
and
cmc
jb
in
es
and
fbstp
lahf
sti
jb
cmp
mov
adcb
lds
mov
mov
cmp
cmp
pop
inc
rcrb
jp
rcll
mov
nop
mov
push
inc
xchg
mov
push
mov
out
xchg
pop
sub
jmp
shrb
stos
data16
out
rep
ret
lods
pop
movb
and
fstp
jae
mov
in
push
jp
subb
pop
xchg
adc
rorl
int3
aad
pushf
push
pop
cmp
push
je
cmc
outsl
leave
adc
adc
sub
jg
mov
jmp
jb
mov
and
and
outsb
and
insb
push
and
sbb
jns
inc
mov
mov
pop
xor
sbb
je
out
cmp
push
mov
scas
push
rorl
pop
mov
xor
in
stos
ret
xor
mov
aaa
je
xchg
mov
sbb
pop
adcb
out
inc
jae
mov
sti
add
dec
cmp
pushf
in
cmp
fidivs
test
adc
pop
or
ss
iret
cmpsl
aaa
mov
repz
push
push
jmp
pop
pop
dec
shl
fimuls
lcall
mov
or
cmp
mov
fidivrs
shl
gs
inc
movsl
ret
or
push
cmpsb
int3
mov
mov
lcall
ds
xlat
in
and
add
push
std
sbbl
push
test
clc
repnz
push
xchg
hlt
mov
adc
xchg
jae
and
pop
dec
addr16
mov
pop
and
and
cld
dec
push
xchg
xor
xchg
daa
sbb
mov
iret
xchg
stos
lret
dec
xchg
and
rolb
pop
jae
push
je
inc
adc
ljmp
cmp
pop
cmpsl
imul
ljmp
mov
jg
inc
pop
bnd
fstpl
nop
and
and
pushf
lock
lret
jns
test
dec
lods
mov
pop
ret
cs
jle
mov
cwtl
pop
xchg
nop
mov
sbb
jne
ret
add
cmp
scas
cli
mov
pop
dec
sub
mov
jg
sti
negl
leave
push
aad
jno
rcrb
clc
pop
hlt
add
jg
xchg
stos
jle
jne
or
bound
push
test
push
add
adc
imul
out
je
popf
jae
mov
xor
mov
outsb
adc
sbb
fistl
push
push
int3
outsl
jle
movsl
push
push
pop
mov
fdivr
test
push
dec
push
lcall
dec
daa
mov
pusha
addl
jecxz
sti
lret
pop
int3
loopne
xlat
sbb
xorb
or
mov
push
dec
loope
inc
inc
and
pop
mov
pushfw
lahf
inc
addr16
leave
in
daa
mov
pusha
mov
xchg
push
fisubl
mov
cmp
outsb
pop
push
pop
mov
lahf
sar
subb
adc
inc
popa
adc
xlat
push
mov
cli
dec
and
push
mov
sbb
jnp
push
cld
clc
pop
inc
mov
cli
pop
in
jl
mov
jg
pop
cmpsl
lret
xchg
mov
out
jecxz
stos
add
push
or
push
leave
and
pop
leave
jns
add
rcll
add
or
pop
mov
add
mov
movsb
incb
ljmp
call
mov
scas
xor
inc
fdivrs
cli
push
mov
cmp
imul
push
or
inc
pop
and
sbb
cmpsb
sub
inc
clc
jno
jle
xor
mov
push
data16
push
rclb
lods
je
cmpsl
cmpsb
in
adc
and
mov
in
scas
hlt
inc
dec
pop
sbb
ret
add
adc
lcall
test
mov
pop
jp
mov
and
test
jbe
stos
sub
lcall
loope
jb
jb
fildll
imul
pop
push
in
and
mov
add
fbld
dec
lods
fstl
nop
or
aaa
rorl
loopne
and
jecxz
out
mull
ds
icebp
rorl
mov
daa
pop
jp
sub
sahf
inc
in
mov
sub
call
push
insb
push
xor
pop
cs
xor
mov
sub
inc
insb
mov
sbb
loope
mov
xor
insl
jne
pop
nop
adc
aaa
das
test
icebp
or
and
fptan
jns
inc
dec
pop
data16
sahf
dec
sbbb
push
dec
xor
add
out
xor
cltd
xor
cwtl
mov
mov
xchg
data16
sub
jmp
lds
jns
movl
jb
in
and
cmpsb
push
mov
mov
mov
jg
lods
dec
aaa
jae
sbb
fisubrl
xchg
lds
inc
adc
xchg
jmp
stc
sbbb
xor
call
dec
dec
jp
add
aad
mov
sub
jns
sub
insl
and
adc
lret
mov
rorb
lods
push
mov
orb
adcl
fstl
mov
xrelease
fstps
pop
mov
into
jno
int
nop
dec
inc
out
les
and
jb
adc
inc
xchg
clc
adc
test
adc
pop
push
popf
mov
int3
or
dec
adc
das
pop
ret
dec
push
and
xchg
movb
add
sbb
xchg
test
xor
ljmp
and
out
push
mov
jb
into
pop
or
jns
imul
pop
stos
pop
add
out
out
push
mov
mov
movsb
rcl
adc
mov
test
cld
mov
jp
shlb
sbbl
mov
jmp
or
xchg
dec
repnz
lods
xorl
es
scas
dec
or
movsl
shrl
adc
mov
lahf
add
sbb
into
xchg
movsl
cs
jl
and
push
dec
fwait
popa
sbb
push
add
loopne
insl
imul
pop
or
dec
dec
loope
fnstcw
dec
inc
bound
test
add
outsl
aam
sub
push
mov
xor
fildll
xchg
div
and
clc
lea
shll
inc
popf
xchg
inc
cmp
out
stc
mov
mov
fists
or
addr16
jmp
pop
popa
xor
inc
or
push
roll
ret
mov
cltd
lret
rcrb
mov
jae
xchg
inc
adc
mov
pop
enter
mov
fnstcw
push
sub
jns
adc
jmp
push
pop
and
das
xor
inc
dec
cmp
jg
add
add
dec
popa
mov
fadds
or
je
bnd
mov
cmp
test
addr16
pushf
sub
pop
jmp
jo
movsb
jmp
data16
sbb
jle
shll
add
sub
dec
test
lds
xchg
inc
pusha
pop
pop
xchg
sub
pop
mov
cmp
cli
mov
mov
out
sub
or
lods
int
into
jl
and
sub
stos
pop
sub
loop
leave
push
in
adc
rcll
enter
mov
fisubrl
scas
data16
cmp
mov
and
aas
sbb
dec
test
in
out
xor
inc
pop
push
mov
mov
push
sbb
test
dec
jl
leave
or
mov
mov
xchg
dec
sub
aad
xor
aaa
push
push
movsb
sbb
jae
cmp
pop
mov
leave
in
inc
pop
ss
sub
cltd
add
push
shrb
sub
mov
inc
push
or
or
aad
jmp
lcall
push
bound
lahf
dec
push
jg
popa
pushf
jne
cmp
aam
fwait
add
fyl2xp1
mov
and
cmc
and
lods
dec
xchg
push
aas
lahf
adc
and
jmp
lret
ds
mov
cmp
xor
and
push
mov
mov
mov
sahf
mov
ds
out
push
jmp
addr16
outsl
outsb
or
push
stos
enter
in
sbb
dec
sbb
ret
jne
rcr
or
jge
xchg
imul
les
sbb
dec
das
or
add
cmp
lea
cmc
sbb
mov
repz
incb
dec
lret
jmp
or
in
cmpsl
mov
imul
adc
mov
out
or
inc
test
adc
xchg
xrelease
dec
int3
push
flds
fs
sbb
lds
shrl
movsl
pushf
int
loop
cmp
jge
xor
xor
lcall
xchg
outsl
cmc
out
cmp
imul
mov
lret
mov
pop
lock
sub
stos
lds
jns
sbb
push
dec
adc
in
and
or
cmp
arpl
sub
mov
or
js
xchg
pop
mov
cmp
mov
gs
or
and
xchg
and
lock
les
cwtl
dec
fnsave
push
push
repnz
xchg
xchg
jecxz,pn
xchg
push
in
cmpsl
mov
and
ret
xor
divw
imul
std
sub
es
xor
loopne
push
or
and
jmp
or
data16
sti
and
adc
dec
cmp
cmp
sti
rcrl
cld
rolb
gs
inc
mov
ja
call
mov
rcrb
xor
or
push
xor
pop
xchg
std
xorb
jmp
inc
dec
dec
lods
sub
dec
jno
jne
arpl
inc
das
pop
stc
leave
inc
call
outsl
jae
mov
andb
loop
xchg
inc
cli
sarl
mov
enter
cmp
push
into
test
cmp
fsubp
sbb
pop
mov
mov
sbb
bound
test
add
and
push
divb
pop
test
inc
or
jge
jp
lahf
cmpl
cmp
mov
in
adc
mov
add
in
ret
sub
imulb
fistpll
pop
lock
lds
sub
mov
mov
fldpi
movsb
aam
lods
mov
cmc
mov
sub
cmp
mov
or
out
mov
sahf
push
ret
shlb
jle
ja
and
je
cwtl
xchg
jmp
icebp
pop
aad
into
mov
movsb
out
sbb
and
flds
xchg
lret
jmp
mov
dec
shll
lea
lods
xchg
dec
js
sbb
lcall
repz
mov
pop
dec
add
test
call
or
or
das
stos
call
pop
jg
add
mov
cld
flds
test
add
cmp
hlt
mov
imull
pop
jmp
fldl
lea
add
push
or
out
ret
push
mov
sarb
inc
dec
cld
pop
into
test
nop
les
and
lcall
mov
mov
mov
cmc
jnp
mov
xor
aaa
push
scas
sub
mov
add
cwtl
outsb
xchg
inc
pop
cmp
jge
lds
mov
aas
jbe
or
and
add
insb
fwait
lock
xchg
jne
cmp
daa
cwtl
fisttpl
les
mov
mov
push
sub
andb
and
leave
or
add
xchg
popf
mov
cmp
insl
fdivl
add
pop
mov
fcoms
leave
xor
addb
dec
add
outsb
daa
out
int3
icebp
jo
pop
cmp
loopne
int3
lods
mov
cmp
rorb
movsl
xchg
xchg
mov
imul
icebp
enter
cmc
test
mov
insl
in
jb
out
dec
push
cmpl
sbbb
popa
rcrb
push
dec
call
pop
mov
shll
rorl
push
in
cmp
xor
rorl
or
ja
mov
inc
les
inc
adc
pop
adc
or
fistl
cmpsb
aam
inc
cmc
lds
rcll
mov
test
inc
enter
mov
push
out
pop
cmp
popf
xchg
add
vcvtsd2si
test
add
adc
pusha
cmpsl
push
rclb
lret
add
sub
cmc
xor
or
cmc
lret
or
lcall
or
mov
lods
and
xchg
xchg
mov
pop
push
jl
xchg
add
pop
or
jb
xchg
push
pop
or
and
leave
outsl
lcall
cmpsb
fstps
into
pop
cmp
stos
cwtl
lea
mov
movsb
cwtl
roll
clc
addr16
inc
mov
push
dec
js
into
push
je
sub
jno
data16
dec
dec
jp
and
sbb
je
mov
pop
xchg
or
repnz
lods
push
sbb
mull
xor
xchg
and
loopne
iret
xor
fildll
stc
mov
cmp
pop
mov
and
into
mov
into
mov
xchg
add
add
testb
test
add
gs
std
xchg
into
out
jb
xor
mov
mov
outsl
mov
mov
sbb
cwtl
or
cmpl
ja
push
adc
imul
inc
add
inc
or
jmp
je
loop
arpl
lcall
and
mov
lods
popa
pop
sahf
dec
push
negb
pushf
cltd
mov
add
rorb
sbb
mov
iret
cmp
cli
jl
lcall
movsb
dec
pop
xor
pop
jmp
or
mov
jb
push
popa
enter
mov
data16
je
insl
xor
loope
mov
cmp
and
aaa
fistpll
orb
pop
loope
mov
sub
outsb
mov
jl
or
sti
ret
adc
xchg
lods
jb
lret
stos
xor
pop
lcall
les
push
sbb
loope
mov
pop
push
ja
pop
sub
push
adc
insl
fcmovnbe
aam
cmp
jnp
push
push
mov
out
test
pop
pop
test
sub
lea
jnp
mov
iret
and
sub
js
and
adc
fidivrs
mov
mov
push
sub
mov
push
idivb
fnsave
push
out
jle
adc
sub
add
cmpsl
mov
add
mov
adc
pop
lods
xchg
fwait
gs
mov
in
movsb
and
cld
lds
mov
dec
stos
mov
jno
cmpsl
mov
mov
mov
sub
rorb
jg
mov
inc
cmp
xchg
add
dec
dec
cmovb
mov
xor
ja
mov
clc
ss
mov
and
mov
je
negb
icebp
lods
ljmp
dec
sbb
shr
jle
aad
sahf
push
insl
sbb
xchg
push
jl
inc
mov
or
and
jae
leave
push
push
and
lahf
stos
repz
popa
lret
jbe
daa
mov
inc
inc
fsubrs
sahf
mov
fsubrl
dec
mov
rcrb
popa
cmp
push
ja
jns
pop
rclb
sti
andl
mov
dec
out
adc
lods
jecxz
ret
mov
xchg
lods
jmp
loopne
jl
push
cmp
jae
sbb
outsb
mov
mov
mov
cmp
add
rorl
in
pusha
mov
scas
int3
or
lods
les
pop
add
jge
and
imul
jle
fsub
xor
xor
into
jecxz
in
add
test
js
and
sbb
sub
dec
outsb
arpl
pop
es
dec
jnp
push
mov
mov
out
cwtl
pop
mov
xchg
mov
dec
mov
push
sbb
test
test
jnp
push
mov
mov
data16
mov
ret
push
sub
adc
in
pop
adc
sub
mov
ret
sub
mov
xor
mov
int
int
jle
push
rorb
xchg
call
xor
jmp
push
sbb
stc
add
ret
outsl
push
adc
lock
adc
lret
into
mov
mov
ficompl
and
cwtl
push
clc
insl
int
test
jnp
out
ret
jne
and
outsb
or
push
loop
pop
xlat
xlat
add
and
mov
loop
ficoml
xor
pop
mov
call
movsb
fildll
cmc
mov
jno
push
mov
adc
and
push
movsb
lcall
cmp
pusha
loopne
ljmp
lcall
mov
scas
inc
pop
out
push
dec
cmc
fdivs
cmp
mov
add
adc
pop
pop
pop
or
jecxz
xor
push
cmp
mov
lds
cmpsl
xor
aas
cmp
jecxz
mov
sub
imul
inc
mov
sub
repz
idivb
cmpsl
jbe
push
xchg
xor
outsb
inc
lret
inc
je
sub
fidivl
scas
xlat
out
out
into
lds
test
sub
js
lahf
cmp
push
sub
fcompl
stos
int3
and
xchg
in
push
mov
je
inc
mov
les
mov
cmp
dec
mov
inc
and
jmp
lods
jl
ss
jl
lods
xchg
add
cli
lahf
std
sbb
inc
arpl
fldcw
shr
sbb
inc
and
cld
faddl
sub
cmp
repz
std
sbb
push
sbb
scas
adc
iret
inc
lds
sbb
cs
push
out
test
or
daa
out
out
out
into
sahf
jns
mov
in
jbe
mov
add
cs
imul
cs
push
mov
jp
fistpll
push
mov
insl
pop
and
dec
jb
ss
add
or
and
push
movsl
mov
adc
rorb
aas
pop
mov
idivb
jge
xor
pop
add
je
sub
fcoml
inc
out
shrb
test
mov
push
gs
cmp
mov
ret
push
adc
imul
sbb
stos
lcall
or
pop
aam
mov
pop
ds
or
sub
pop
test
or
insb
mov
mov
mov
xor
or
in
adc
lret
rcl
pop
dec
test
xor
mov
pusha
push
js
ret
jle
pop
mov
cmp
aaa
dec
leave
or
push
mov
sbb
repnz
mov
dec
xchg
mov
and
jne
addb
cmp
add
jno
arpl
fidivrs
push
cmp
cwtl
inc
xchg
ja
sbb
nop
popa
xchg
lods
jnp
push
popf
sbb
sub
stc
call
sbb
jb
cmpsb
mov
je
or
iret
mov
call
stos
cmpsl
fdivrp
rorl
clc
push
and
push
sbb
jo
cmovb
jmp
test
push
test
js
lret
mov
cmpsb
rcrb
jp
xchg
mov
movsl
add
xor
xor
orl
leave
or
repz
pop
stc
mov
ror
test
jo,pn
insl
imul
inc
cwtl
movsl
gs
cmp
mov
into
scas
insb
les
orb
mov
sub
subl
jo
xchg
fsubs
aam
fsubrl
lahf
fcoml
xor
lods
out
sub
ljmp
pop
jb
popa
imul
inc
cmpxchg
or
sbb
fdivl
movsl
sbbb
repnz
ss
cmp
mov
xchg
mov
and
popa
fs
movsl
dec
xor
aas
add
movsb
int
pop
jbe
add
lods
cmc
xor
lods
and
sub
bound
sbb
sahf
int3
in
mov
jno
xor
pop
stos
cmp
push
in
jb
cmp
mov
mov
popf
pop
aaa
sbb
add
mov
mov
lahf
ds
cs
mov
adc
dec
clc
outsl
push
jl
shl
push
sahf
sub
and
fbld
add
jne
jle
xor
das
push
dec
imul
je
inc
lds
fnsave
leave
inc
or
and
clc
aad
jp
cwtl
push
js
mov
cmc
xor
and
std
push
xor
cltd
cld
in
or
mov
mov
mov
and
call
sbbb
stos
push
dec
pusha
lods
repz
jo
add
insl
xchg
les
fsubp
rorb
rcrb
xchg
sti
js
jnp
daa
sub
xchg
mov
and
adc
ret
and
jae
jp
stos
dec
aad
push
xchg
sbb
rcr
shl
add
cli
xor
fimull
mov
arpl
notl
stc
je
dec
add
adc
or
mov
mov
mov
scas
mov
je
jle
jge
add
fidivrl
cwtl
xchg
xor
decl
mov
mov
out
jp
xchg
int3
jo
filds
xor
js
dec
pop
int
mov
mov
dec
inc
loopne
mov
insb
add
repz
or
jo
push
xchg
dec
scas
call
or
jo
cmp
sub
outsl
inc
cmc
dec
in
cmpsb
notl
jp
mov
dec
shr
cmp
inc
cmp
int3
repnz
dec
xlat
out
jmp
int3
lods
mov
sub
mov
ss
ljmp
push
fistl
jmp
test
cld
inc
repnz
inc
call
in
iret
push
mov
inc
je
add
add
inc
pop
loope
in
shll
xorb
cmpsb
stos
xchg
mov
cmp
sbb
mov
dec
add
push
out
xor
xchg
add
ja
loope
lock
xlat
jp
jb
mov
push
push
movl
jo
dec
dec
add
mov
je
xorb
movsl
hlt
in
cmp
cmp
or
dec
jns
xchg
pop
cld
mov
or
insb
addb
out
mov
int3
mov
ds
in
mov
sti
in
sub
mov
rcl
xchg
popa
dec
xorl
jnp
sahf
aaa
das
enter
jb
subb
xchg
lock
add
mov
scas
scas
enter
inc
sbb
pop
xchg
lds
cmc
mov
iret
adc
arpl
test
aas
in
sahf
and
xchg
aaa
hlt
add
lods
shll
insb
insb
push
mov
pop
outsl
mov
out
add
mulb
clc
push
insb
jbe
mov
fidivrs
pushf
adcl
cld
jae
mov
clc
iret
sub
and
adc
rorb
dec
jl
lods
outsl
adc
add
mov
mov
jp
cmp
dec
sbb
jae
stos
mov
dec
cli
pop
jns
xor
lret
jecxz
jle
clc
pop
and
repz
scas
je
mov
mov
nop
mov
fmuls
mov
lods
movsl
mov
loope
rol
inc
in
fisubrl
jns
fs
and
lods
pop
add
aaa
mov
imul
mov
sarl
shll
rcrb
arpl
jns
outsb
jecxz
mov
sti
mov
aaa
xor
xchg
push
pop
data16
jns
mov
inc
mov
cmpsl
xchg
stc
dec
stos
int
push
adc
push
sbb
pop
pop
or
fldl
xor
pop
sahf
shll
jae
adc
movsb
mov
ror
iret
mov
iret
mov
mov
mov
adc
adc
gs
sub
popa
lret
repnz
jae
test
jmp
add
push
or
cwtl
ljmp
cwtl
iret
in
fdiv
cmc
and
sbb
mov
cmp
sub
sub
add
xchg
into
adc
repz
idivb
repz
dec
inc
cmp
mov
dec
sbb
push
enter
sarb
in
pushl
test
leave
adc
adc
cmc
dec
inc
movsl
or
loope
mov
fstl
inc
shr
cli
pushf
jmp
ljmp
sarb
pop
pushf
inc
cmp
rcr
int
adc
or
push
xor
aam
xor
add
call
test
stos
jne
add
push
xlat
adcl
daa
adc
cmp
ret
movsb
lds
jmp
adc
mov
mov
inc
xchg
stos
sbb
cmc
fwait
xor
fstps
pop
stos
push
adc
xor
lret
test
lods
mov
add
mov
mov
out
dec
jns
shll
insb
jmp
insb
cmp
movsb
adc
cld
inc
xchg
inc
jnp
iret
int3
lods
roll
mov
cmp
test
pop
iret
or
xor
or
repz
sarl
fnstenv
mov
rcll
icebp
out
and
out
add
jo
push
les
mov
ret
jae
and
fisttpl
fisubrs
insb
sbb
xor
cmp
push
lret
rcrl
push
inc
jmp
ret
or
mov
mov
cmp
cmpl
ljmp
test
pop
loop
ss
aad
enter
subl
xor
mov
mov
sti
sub
dec
test
in
jb
and
mov
inc
and
add
or
push
dec
adc
inc
push
or
push
ds
add
and
clc
je
jo
push
adc
cmp
loopne
xor
xor
pop
imul
mov
imul
mov
mov
and
sub
imul
std
jno
sbb
into
test
add
repz
or
subl
in
sub
xor
inc
fstpl
into
movsl
sbb
mov
pusha
ss
pop
scas
outsl
mov
pop
outsb
not
adc
xor
in
cmp
aad
push
sbb
jmp
out
cli
sarb
dec
test
pop
push
jmp
shlb
jne
lret
gs
pop
lret
fwait
xor
push
dec
popf
je
leave
cwtl
sti
jp
push
xchg
cli
sti
xchg
iret
pushf
filds
pop
add
xor
pop
in
popf
jge
js
mov
movsl
xor
js
or
je
popf
lret
hlt
dec
mov
jle
jg
fldcw
cmpsl
push
ds
jnp
test
add
int
in
pop
mov
es
int
ret
jbe
cmc
and
pop
sub
outsb
mov
lock
test
adc
loopne
mov
xchg
fmull
inc
pop
mov
stc
loop
mov
ret
and
jnp
jno
outsl
icebp
adc
int
cli
xchg
cmp
lret
pushf
jmp
out
cmp
add
fcoml
push
jae
sub
mov
adc
gs
sub
mov
stos
sbb
xchg
popa
fimuls
lahf
add
lds
cmp
pop
adc
aas
cmp
repnz
ret
das
dec
test
repz
pusha
adc
mov
adc
loope
aaa
push
mov
inc
std
jnp
mov
dec
das
adc
pusha
pop
not
adc
jb
test
jmp
ja
inc
jg
test
sbb
in
mov
repz
cmp
lods
into
data16
sbb
jno
sub
cltd
add
nop
lods
cmp
ja
dec
das
dec
mov
push
movsb
hlt
insb
push
sbb
cmpsb
leave
cwtl
sub
aas
cltd
stos
xchg
icebp
imul
push
stc
fsts
mov
jecxz
imul
push
vmptrst
and
call
mov
das
outsl
js
movsb
je
into
xchg
es
add
mov
jle
gs
dec
in
sub
arpl
lods
and
cli
cltd
xchg
into
jmp
pushf
mov
repz
adc
mov
xchg
mov
sbb
outsl
push
push
xchg
or
cmc
jo
loope
fs
xchg
jecxz
inc
scas
popf
out
mov
jp
dec
pop
fildl
insl
cmp
fnstcw
fisubrs
push
icebp
xorb
divb
scas
scas
jo
loop
dec
mov
ret
jnp
mov
mov
lods
lcall
jb
mov
xor
pop
cmp
jne
or
mov
add
or
jb
rorw
push
cmp
push
push
call
jge
fnsetpm(287
mov
cmp
xchg
mov
es
mov
jecxz
or
inc
xchg
sbb
cmp
push
ret
lods
jnp
mov
daa
xchg
ja
xor
loopne
jb
cli
jns
mov
mov
mov
inc
cmpl
adc
cmpsb
in
pop
pop
mov
and
mov
mov
mov
mov
push
fidivs
leave
movsb
pusha
add
sbb
jle
and
pop
inc
jno
shll
mov
add
adc
push
test
mov
in
pop
cmp
cmp
ret
aam
loop
mov
incb
add
or
mov
push
stc
push
aas
mov
je
rorl
js
push
push
ret
xchg
and
cwtl
dec
inc
lcall
lret
mov
mov
bound
in
ror
cwtl
xor
or
loop
pop
enter
testl
push
pop
popf
add
test
cmp
and
or
pop
xchg
jle
push
mov
pop
ret
add
jp
and
aad
ja
jg
fmull
dec
in
inc
pop
stc
xchg
icebp
cli
and
es
adc
jmp
iret
sub
lods
mull
imul
int3
pop
cmp
shl
dec
out
or
sub
and
mov
and
xchg
nop
das
fidivs
cwtl
jnp
jnp,pn
push
adc
dec
pop
pop
lret
and
inc
adc
shl
call
bound
scas
inc
adc
in
nop
bnd
adc
cmpsl
fimuls
pusha
jae
sbb
mov
and
sti
fadds
arpl
xor
jno
test
scas
iret
push
or
ret
ss
movsl
mov
pop
into
lret
and
jge
and
test
xor
jecxz
mov
scas
pop
loope
icebp
pushf
loopne
shl
mov
jge
adc
add
in
std
mov
cmpsb
jecxz
adc
jle
or
pusha
fdivrs
fstl
sub
movsb
mov
push
pop
mov
mov
ljmp
mull
mov
fnstcw
and
outsb
xchg
jne
add
pop
push
pusha
add
dec
insl
pop
cmpsl
jp
xor
lods
js
mov
xchg
add
jg
mov
xor
pop
sbb
fcmovne
push
jmp
push
jmp
pop
push
pop
xor
imul
out
gs
jecxz
in
push
mov
xchg
pop
imul
cmp
ljmp
call
xchg
aaa
mov
in
or
nop
dec
sub
cmp
pop
lods
push
push
dec
sub
les
orb
std
fsubr
aaa
js
in
cmpsl
sbbl
lock
sti
or
test
xor
jge
push
stos
mov
jbe
mov
sub
push
cmp
mov
jb
pop
movsl
pop
adc
dec
outsl
sbbl
insb
aas
adc
es
jbe
xor
in
and
pop
icebp
sub
mov
aam
outsl
into
mov
push
shrl
fnstcw
loope
mov
xchg
cltd
test
or
lock
ja
int3
repnz
cwtl
sbb
pop
sub
outsl
out
mov
sti
push
jg
xor
ss
imul
dec
jcxz
cmp
xchg
lods
xchg
ret
or
or
jno
xor
pop
jae
outsb
pop
jne
shl
ret
popf
mov
xor
jo
test
imul
out
mov
pop
adc
in
loop
cld
xchg
push
lods
mov
push
shrl
sub
out
inc
lea
push
les
pop
pop
divb
fs
rolb
xor
add
xchg
out
mov
add
pop
int3
xor
sub
stos
dec
jl
mov
imul
lods
xor
jnp
into
out
mov
jne
hlt
add
push
jp
push
sti
cld
push
jns
inc
test
ljmp
add
ja
sbb
daa
dec
ret
or
stc
xchg
cmp
in
push
pop
js
lcall
cs
imul
std
data16
jns
push
push
shll
imul
push
jp
mov
cmp
xor
mov
daa
scas
pusha
lds
add
and
xor
sysret
imul
es
icebp
shlb
inc
daa
shrb
gs
lcall
cpuid
sahf
adc
jns
icebp
std
or
loopne
in
dec
adc
repz
out
push
inc
ja
and
cmp
push
lret
add
add
mov
sub
cmp
fwait
mov
xor
jecxz
push
cmc
push
dec
push
inc
aas
push
push
and
or
int3
adcl
imul
movsl
xor
mov
stos
mov
dec
mov
sbb
cs
ja
dec
leave
call
int3
verw
and
sub
pop
aas
sti
inc
js
inc
outsb
ja
add
sbbb
idiv
stc
mov
cmp
mov
pop
movsb
cmc
std
pop
inc
out
push
into
jg
idivl
out
cmp
lahf
pop
shll
jno
xchg
lcall
imul
mov
and
cmc
in
inc
or
mov
fwait
loop
movsl
in
jg
std
sub
stos
push
jmp
add
repnz
fwait
pushf
les
loope
sub
outsl
negb
push
push
lds
mov
mov
ja
ss
and
xor
mov
mov
push
dec
xor
scas
out
sbb
fcmovnu
ret
and
andb
sbb
insl
xchg
int
inc
cmpsb
loopne
inc
out
inc
pop
insb
cmp
arpl
fcomp
rcll
jnp
xchg
sub
sbb
or
fwait
idivb
push
and
test
sbb
lods
mov
mov
in
mov
pop
jb
fiaddl
rcrb
aam
mov
es
loopne
or
pop
aad
std
imul
inc
mov
addr16
idivb
imul
or
mov
fcomp
push
mov
or
incb
xchg
xorb
jb
pop
lods
mov
xchg
loopne
es
movsb
dec
jne
pop
sti
adc
jmp
push
inc
mov
push
mov
jge
dec
hlt
mov
push
insl
mov
pop
jnp
mov
es
pop
stos
adc
or
subb
and
leave
mov
push
jg
hlt
insl
ja
mov
add
push
jae
outsb
xor
mov
fcomp
arpl
adc
add
push
in
loopne
pop
ljmp
xchg
leave
xchg
in
stos
inc
std
mov
fldenv
adc
nop
fcomps
mov
mov
into
mov
repnz
gs
rolb
jb
out
aad
je
push
mov
mov
adc
ret
cmp
mov
data16
stos
fmul
lcall
loopne
fstps
xlat
jno
or
jl
mov
add
jno
std
cmpsl
jbe
arpl
push
pop
jle
mov
incl
jo
lcall
and
xor
mov
xor
addl
btsl
rcrl
add
iret
imul
and
mov
pop
cli
lret
in
roll
mull
mov
not
loope
jmp
movsl
repz
sti
and
std
inc
mov
cmpsb
or
pop
jo
sahf
int
and
add
dec
sbb
movsl
arpl
fwait
jns
or
arpl
ja
cmp
or
shlb
or
out
mov
enter
mov
adc
sbb
movsb
ja
bsr
stos
ret
jns
negl
ja
xor
out
testb
or
lods
ror
mov
scas
aam
mov
leave
sub
mov
je
cld
add
lea
aad
icebp
fcoms
push
sbb
push
xchg
mov
push
or
out
flds
adc
scas
fwait
inc
or
in
sbb
jno
nop
inc
in
xchg
out
dec
push
push
rcl
mov
mov
dec
stc
pop
les
cmp
mov
push
test
dec
pushf
lret
pop
xchg
jo
push
xchg
movsb
xchg
add
push
mov
aas
sub
adc
adc
fistl
lods
mov
repnz
shlb
enter
cmp
int3
fisubrl
sub
sti
std
stos
pop
popa
xor
sbb
mov
push
dec
jmp
cwtl
add
das
std
inc
ljmp
arpl
cmpb
lods
pop
imul
push
ret
cs
loopne
imul
lahf
cwtl
gs
add
fstl
xchg
push
or
ret
dec
das
adc
mov
xor
push
test
inc
sub
dec
dec
mov
mov
fbld
fcompl
dec
test
leave
mov
mov
incb
sahf
or
pop
int3
in
xor
sahf
fisttpl
lods
stos
sbb
dec
out
sub
loope
je
push
pop
xchg
pop
xor
mov
mov
inc
loopne
out
xor
fld
mov
sub
mov
sub
sbbb
nop
mov
xor
or
repz
pusha
mov
adc
fisttpl
sbb
or
mov
js
mov
stos
lcall
add
adc
sbbl
movsl
xor
test
ret
loope
mov
mov
pop
out
or
push
cmp
jle
jne
sub
iret
jb
insb
jo
or
insl
mov
mov
stos
lret
xor
rclb
sub
xchg
ljmp
lahf
rcrb
xchg
out
jno
jb
sbb
ds
adc
lret
ljmp
loope
shlb
sbb
jl
jecxz
imul
mov
cmp
test
mov
in
cmc
mov
test
addl
nop
sahf
jmp
dec
add
sub
lret
mov
je
and
dec
push
pop
cmc
repnz
in
jmp
xchg
addl
push
gs
or
fmull
inc
jo
cld
xchg
fstps
ss
xchg
gs
sti
in
mov
aad
subb
jb
dec
out
fs
inc
out
inc
fmulp
and
loop
pop
sbb
xchg
push
cld
fdivp
mov
pop
dec
pop
cmp
jb
jbe
lret
mov
cltd
xor
xor
aad
loopne
mov
mov
bound
inc
pop
int
mov
adc
test
hlt
sub
leave
sbb
mov
int
jge
aad
cmc
out
lcall
test
aas
jnp
int
cwtl
testl
data16
icebp
ljmp
jae
sarl
movsl
fldl
sbb
ljmp
rcll
fsubrs
in
ljmp
jge
cmp
push
fisubs
or
mov
and
test
pusha
mov
fs
push
pop
shl
lds
jg
mov
int3
mov
dec
mov
loope
sahf
dec
pop
mov
jle
mov
xchg
push
sbb
divb
jge
lds
inc
mov
cwtl
mov
ja
sahf
adc
int
in
sbb
or
cmp
mov
int3
sti
lock
or
add
sbb
push
lret
cmpsb
ja
pushf
jmp
fdivl
adcl
lods
cmp
xchg
inc
dec
mov
and
xor
push
bound
gs
sbb
aam
sub
je
ret
sbb
mov
dec
mov
rorl
imul
daa
imul
roll
push
sbb
mov
and
ret
jbe
cmpsb
mov
int
lret
push
mov
mov
mov
pop
jle
adc
cli
cmp
popa
imul
lock
sahf
jl
xchg
movsb
xchg
int3
sbb
adc
inc
aam
out
cli
add
push
fildl
push
inc
in
stos
jbe
nop
push
cwtl
mov
pop
inc
mov
cwtl
and
inc
out
imul
adc
adc
jl
cmp
out
inc
sub
mov
sbb
sbb
loop
push
bound
xchg
add
mov
push
flds
pop
cmp
std
fidivrl
adc
sbb
push
pop
psadbw
jle
cmc
pushf
aaa
xchg
mov
or
push
sub
jg
adc
pop
adc
call
mov
cmp
xchg
fcompp
outsb
push
add
test
jg
mov
lcall
jecxz
xchg
jge
mov
sub
inc
add
sbb
pop
add
mov
sarl
arpl
adc
cmc
dec
in
xor
in
xor
popf
outsl
push
push
jmp
in
xor
jp
mov
mov
sbb
jge
sahf
lods
pop
mov
hlt
aad
and
xchg
lock
dec
inc
out
inc
roll
fistl
out
cltd
mov
movsl
insb
int
bound
daa
mov
test
dec
int3
push
jae
inc
insl
inc
add
ret
fdivr
dec
inc
cmp
pop
scas
inc
popf
shr
js
pop
sbb
jne
leave
test
xchg
std
fisttps
aam
lret
test
sahf
lods
push
mov
aad
loopne
or
pop
js
jb
jae
test
stos
movsb
mov
mov
jb
jg
lods
and
mov
stos
xchg
pop
mov
sub
lock
and
pop
popf
dec
bound
out
lret
stos
xor
xor
xchg
xchg
mov
in
les
je
test
pop
fs
sub
or
fistpl
jb
inc
in
out
adc
xor
rclb
xor
imul
sti
shll
dec
out
mov
sub
aas
iret
cli
mov
or
sarl
and
stos
push
in
fisttps
insb
cwtl
and
mov
sbbb
pop
sub
pop
clc
pop
icebp
dec
sarl
lods
mov
sbb
popf
int3
fiaddl
inc
sbb
lods
fnstsw
mov
mov
addl
mov
bound
mov
int
fs
js
add
mov
in
mov
mov
out
jp
jne
adc
lods
sbb
cld
shrb
shlb
or
xchg
sbb
sub
cmp
cmp
orb
cmpsb
fmul
psubsw
push
aad
call
push
push
pop
outsb
out
cmp
in
mov
mov
adc
push
mov
js
pop
negb
inc
and
mov
jp
xchg
out
or
cmpsl
or
loop
mov
cmpsl
cmpsl
inc
popa
mov
ja
jae
jb
movsl
rorb
stos
lret
dec
mov
jns
or
and
adc
cld
push
and
lds
rclb
xchg
push
add
or
aad
sbb
pop
test
inc
in
jle
mov
mov
mov
fisubrl
add
repz
mov
sahf
xor
cmc
imul
dec
sub
lods
insb
mov
mov
cmp
jnp
dec
inc
mov
xlat
sub
pop
daa
movsl
rolb
jb
xchg
push
sub
fistpll
cld
mov
cmp
sbb
test
push
and
pop
aad
pusha
popf
out
ds
push
outsb
dec
sbb
mov
cltd
jecxz
in
ss
inc
lods
push
sub
adc
test
testl
xor
and
xchg
pop
dec
pop
movsl
scas
cs
jbe
sti
dec
jl
pop
lahf
icebp
add
or
sub
sti
adc
cltd
push
clc
xor
dec
mov
push
xlat
fidivl
or
inc
into
ss
ret
jl
add
mov
and
loope
les
rcrb
pop
jmp
sbb
incb
sub
add
shlb
xor
in
xchg
xorb
loope
cmp
mov
xchg
sub
jp
add
aam
pop
mov
addb
repnz
mov
inc
lea
and
not
loope
xor
sub
lret
jg
dec
arpl
cmp
in
add
or
lds
popf
cmpsb
mov
fcompl
and
inc
sbb
sbb
add
clc
sahf
jl
stos
inc
push
call
pop
inc
call
push
mov
inc
dec
jecxz
out
mov
xchg
insb
fildll
pushf
pop
mulb
incb
mov
mov
scas
xchg
mov
iret
enter
mov
cltd
ljmp
aam
imul
jne
idivl
pop
pop
cmp
outsb
or
cmc
jne
add
sbb
jle
fisubs
jb
pushf
lcall
outsb
into
int3
jne
jnp
ja
xchg
repz
and
sbb
fistl
rorl
mov
scas
push
jmp
movsb
dec
mov
cld
mov
rclb
push
sbb
clc
cltd
mov
sbb
mov
lods
cmp
sub
addl
insb
mov
pop
xor
mov
cmp
jbe
xor
icebp
rolb
or
push
pop
mov
leave
or
icebp
lds
dec
pop
add
xor
cwtl
imul
test
xchg
add
mov
mov
and
push
or
lret
int
mov
jno
fadds
and
fs
dec
sbb
and
xchg
repnz
jnp
pop
push
data16
pop
push
mov
pop
and
and
sbb
imul
shlb
adc
repnz
int
xor
fnstcw
fucomi
and
cltd
dec
repnz
js
das
jbe
push
stos
lods
repz
stc
jb
testl
insl
cwtl
ja
aas
sub
mov
sbb
sbb
int3
push
cmp
clc
mov
jge
mov
mov
std
out
push
xchg
call
jns
rolb
dec
iret
lods
and
out
mov
sarl
xor
clc
and
push
sbb
rolb
lret
xchg
mov
aam
adc
in
add
loopne
add
xchg
sub
inc
stos
pop
out
sub
mov
mov
mov
pushf
jne
jno
xchg
mov
jbe
call
cmp
pushf
movsb
jl
stc
ror
mov
test
dec
lcall
xchg
jge
dec
or
mov
test
sub
jno
add
pop
out
cwtl
aad
popa
sub
int
gs
stos
mov
ss
scas
sti
lcall
lods
push
push
scas
mov
push
pop
mov
fs
in
jmp
jle
jo
ficoml
pop
jbe
sub
lret
cmp
mov
mov
ret
cmp
popf
xor
addl
cwtl
xchg
push
mov
xchg
outsl
insb
or
repnz
sbb
xchg
lahf
shlb
rol
insb
int
insl
push
call
and
icebp
xor
lock
daa
test
mov
lahf
or
ret
mov
push
into
mov
in
ljmp
imull
cmp
in
and
mov
shll
shrl
das
cld
add
js
xor
int
aaa
mov
out
mov
arpl
adc
push
cmp
dec
lea
or
fcompp
subb
adcl
out
loopew
orl
cmc
fs
push
es
test
outsb
and
clc
iret
mov
dec
ds
ds
insb
into
shll
jo
mov
mov
inc
pop
in
sub
cmp
xor
cmp
inc
mov
cmp
mov
outsl
lahf
imul
fadd
sbb
pusha
or
xchg
sbb
je
cmp
mov
into
int3
mov
and
in
push
mov
push
lret
ret
jb
outsb
push
and
int3
mov
mov
cmpsl
sub
push
sbbb
or
icebp
icebp
test
out
push
inc
in
iret
cmc
fcomps
adc
mov
mov
pop
jo
mov
in
mov
out
or
or
aam
xor
dec
mov
movsl
in
inc
addb
jns
mov
push
scas
nop
jle
pop
pop
sub
adc
test
jae
cmp
sbb
stos
or
sahf
sbb
daa
sarl
sub
in
and
pop
xor
cld
dec
aad
cwtl
fistps
push
cmp
inc
or
pop
sub
xor
outsb
lea
jg
inc
adc
iret
mov
mov
ret
cmpsl
scas
int
inc
cwtl
jnp
push
fst
mov
mov
mov
fistpll
push
test
sbb
addb
xchg
outsb
xor
jne
xor
adc
das
jge
subb
add
lahf
cmpsl
or
mov
or
insb
inc
aam
mov
nop
sub
push
mov
bound
mov
das
mov
in
push
lods
inc
xchg
idiv
mov
pop
divb
outsb
sbb
cmp
xor
lea
scas
push
adc
shll
negb
insl
aad
lock
popa
in
pop
dec
mov
xchg
test
shl
dec
fldl
mov
nop
push
sub
fisubs
test
dec
lock
shlb
xor
subb
ret
in
jne
shrd
daa
mov
xchg
xor
loop
lock
mov
dec
cmp
cltd
imul
stc
into
cltd
roll
test
lods
es
jecxz
cmpsb
xchg
clc
add
insl
push
add
call
inc
loopne
insl
fs
inc
clc
adc
jns
repz
jno
adc
dec
xchg
into
or
push
lods
sub
cld
xchg
jo
inc
inc
lcall
push
inc
fdivl
icebp
cmp
adcl
je
aad
ss
xor
xchg
in
cs
xchg
pop
out
xor
mov
pusha
ffreep
pop
mov
pop
jp
fdivrs
cmp
xchg
mov
or
orb
cmp
mov
stos
rcr
test
jl
add
push
or
mov
sub
push
fcmovne
mov
loopne
imul
stc
mov
and
adc
test
jno
aaa
add
xchg
inc
xchg
jo
xor
fs
fwait
cmp
in
mov
sbb
and
repz
cmp
inc
inc
aam
fcmove
or
mov
movsb
xchg
sahf
mov
ja
loopne
sub
and
ss
call
popf
push
mov
insb
sbb
xor
push
push
fadd
popf
push
cmp
dec
adc
scas
push
dec
push
aam
cld
push
cld
inc
inc
bound
lock
imul
in
jecxz
push
shrb
dec
cld
pusha
sbb
mov
push
rcll
push
and
and
and
outsb
cltd
mov
clc
sub
dec
fxch
or
cli
lods
in
loop
test
inc
pop
adc
mov
insl
push
jl
pop
push
movsb
aam
fnstcw
cmp
sbb
insl
push
fisubl
jnp
add
mov
cmovs
aam
ds
fs
insl
cld
das
lea
pop
push
mov
xorl
sub
or
mov
lds
fsubrs
cmpsl
cli
xor
cmp
hlt
lret
inc
xchg
fcoml
js
adc
push
pop
jbe
xchg
xchg
xor
testb
in
sahf
fs
cltd
sbb
cmpsl
push
js
imul
add
fwait
and
cmpsb
mov
and
jnp
jno
clc
ss
jnp
ret
mov
pop
mov
and
inc
int3
test
cmp
lret
push
or
mov
fidivrl
ss
std
mov
fmul
mov
push
sbb
std
mov
sub
int
cltd
sbb
jne
rcr
jb
xchg
pop
mov
testl
push
ret
or
dec
xchg
or
push
or
and
faddl
test
stc
pop
cmp
lea
push
loope
push
fisttpll
jp
sbb
cmpsb
or
fninit
sbb
mov
inc
or
adc
les
rclb
cmp
inc
lock
dec
sub
in
or
mov
lahf
fistpl
mov
mov
cmp
push
out
dec
cmpsl
aad
dec
in
xor
lock
stos
pshufw
clc
sti
jmp
and
imul
xchg
iret
or
enter
mov
or
push
mov
dec
mov
or
outsb
mov
pushf
repz
jb
cmp
sbb
jo
insb
sbbb
mov
jns
leave
call
dec
add
movsl
outsl
fisubrl
fldl
inc
test
sub
out
dec
push
jl
xchg
sbb
pop
xor
inc
sti
xor
mov
lret
aaa
adc
cmpsl
add
inc
mov
adc
jno
mov
add
test
ret
fxsave
repz
pusha
cs
or
pop
outsl
jmp
sbb
mov
and
pop
movsl
pop
lods
fstl
mov
popa
jmp
fwait
call
stc
sub
ret
pop
sbb
xchg
or
stc
fnstenv
arpl
jbe
mov
cmp
mov
inc
sbb
dec
cmpsb
inc
dec
mov
jo
mov
ror
outsl
or
or
gs
fs
push
in
sbb
dec
decb
sysexit
sahf
and
inc
add
xchg
in
pop
dec
cmpsb
test
pop
jo
shl
popf
mov
sub
scas
ds
xchg
and
inc
mov
insb
sub
roll
pushl
iret
lret
sbb
sbb
addr16
cmp
mov
test
stos
adc
push
out
hlt
xchg
aam
jo
xchg
lcall
outsb
pop
or
aaa
rcll
imulb
popf
es
xchg
nop
dec
cltd
push
xchg
fmuls
imul
jbe
ret
out
dec
ljmp
inc
mov
push
mov
and
rcrl
fcoml
leave
adc
lret
pop
sub
stos
cs
lahf
and
mov
mov
iret
aad
xlat
dec
movsb
faddl
adc
pop
daa
movsb
mov
adc
pop
sbb
sub
ja
sbb
jno
cwtl
xchg
cmpsl
push
dec
sbb
inc
adc
cmovs
xor
lods
loopne
push
xchg
lahf
jno
cs
adc
or
in
cmpsl
adc
rcrl
xchg
stc
or
arpl
das
fdivrl
aad
sub
or
test
inc
cmp
arpl
jge
out
lahf
add
les
cmpsl
loope
pxor
loopne
mov
xor
sahf
mov
add
add
ret
popf
cld
lea
adc
cmpsl
mov
add
sub
pop
and
adc
inc
inc
aaa
mov
cmp
cwtl
enter
and
loop
inc
sbb
mov
aad
sbb
dec
sbb
stc
outsl
adc
adc
jnp
sbb
pushl
into
sarl
mov
xchg
iret
xor
xchg
shlb
in
cli
mov
cmpl
jmp
push
repz
idivb
cmpsl
bsr
mov
stc
xor
insb
push
add
or
adc
lea
mov
fcmovbe
adc
lock
add
lcall
int
pop
fsubr
loope
cmp
ljmp
adc
adc
xor
fiaddl
daa
rcrl
loope
inc
pop
test
data16
adc
lods
cs
push
jns
mov
cmpsb
iret
jns
psllq
and
nop
push
lret
test
pop
and
iret
pop
jg
adc
fdivrs
jne
and
ljmp
inc
ja
lcall
cmp
inc
jmp
daa
sub
insb
dec
loopne
aam
inc
lea
shlb
imul
lahf
scas
out
cmp
sbb
mov
mov
inc
cmpsl
xchg
stos
call
in
or
mov
daa
outsl
pop
in
stc
add
xchg
daa
mov
nop
stos
jno
mov
push
cs
jne
hlt
adc
jbe
push
dec
xor
mov
inc
rcll
lods
jge
xor
jmp
xchg
not
push
add
jmp
mov
lods
or
mulb
jl
inc
mov
mov
cltd
fstl
xchg
das
push
sub
inc
sti
shlb
idiv
cmp
stos
jmp
ret
loop
pop
gs
push
dec
cmp
fldt
cltd
pop
or
nop
imul
ret
and
xrelease
push
jecxz
das
pop
nop
mov
xchg
xchg
pop
ljmp
jge
or
loop
xchg
int3
shlb
popf
mov
add
pop
add
ret
mov
pushf
lahf
and
mov
aam
jl
mov
dec
lods
mov
inc
daa
mov
pusha
out
sbb
movsl
mov
sub
sahf
mov
sbb
push
ret
idivl
mov
cmp
xchg
cmp
xchg
pop
xchg
xor
imul
imul
imul
mov
aam
imul
insl
pop
cmp
and
sub
and
fiaddl
dec
sti
sbb
aas
call
out
popf
fistl
cwtl
fs
repz
cmpxchg
imul
dec
div
jge
call
aam
int3
pop
repz
nop
sbb
addr16
xchg
cltd
rcrb
jl
in
mov
push
leave
sbb
jg
pop
fs
leave
aas
add
and
scas
repz
gs
sti
popa
jns
daa
mov
lods
js
sti
lahf
out
xor
add
pusha
lods
dec
push
popf
cmp
push
movsb
cmc
lds
mov
cmp
decb
pop
jmp
aam
inc
sbb
or
cmp
cmpsl
sub
mov
fisttpll
jl
mov
imul
jle
push
and
out
cmpsb
insl
push
sbb
data16
xor
push
loop
cmpsl
push
fcmovbe
imul
ret
fisubrl
jp
pop
cwtl
xor
insl
xchg
push
inc
xchg
test
xchg
add
aaa
mov
popf
adcb
adc
dec
imul
out
test
dec
and
and
add
fcompl
int
aad
enter
aas
sbb
jo
lea
cmp
rcrl
cltd
mov
push
xor
mov
ds
loope
xchg
mov
inc
and
test
cmpsb
shlb
adc
fnstenv
mov
sbb
out
or
ds
sbb
stos
ffreep
xlat
fidivl
adc
sub
addl
mov
xlat
iret
mov
add
cmpsl
mov
pop
lds
jl
gs
sbb
fbld
sub
xchg
cmpsb
pop
sub
pushf
mov
loopne
rorb
pop
popf
jae
stos
push
dec
xchg
add
std
mov
jns
bound
jl
cltd
bts
adc
loop
ds
js
cs
movsl
or
rep
int3
and
add
sub
shll
sti
and
mov
xchg
sub
mov
mov
xchg
inc
pop
hlt
and
aas
prefetchnta
adc
icebp
outsl
insb
and
arpl
fs
xchg
inc
lds
dec
jg
dec
sub
pop
sti
jp
mov
sub
and
gs
mov
lret
outsb
push
jle
icebp
ds
or
dec
ljmp
repz
jmp
loope
cmp
aad
jnp
cmp
inc
or
jge
mov
roll
or
push
fimull
or
xchg
xor
push
movl
jb
mov
test
or
negl
test
loopne
add
jae
imulb
xchg
ljmp
shll
push
lret
inc
adc
lods
xor
inc
jnp
push
pop
xchg
inc
repnz
mov
pop
push
jge
hlt
xchg
add
pop
scas
jecxz
lret
push
lds
shll
mov
rcr
jg
mov
and
jmp
mov
pop
and
test
mov
rcll
rorl
push
mov
inc
in
vxorpd
mov
xor
lea
xor
cmp
mov
enter
or
fcmovne
lock
imull
clc
or
iret
mov
lret
inc
or
in
mov
xlat
fisttpll
cmp
pop
pusha
imul
mov
mov
push
lea
mov
std
or
les
repz
add
pop
mov
std
out
lods
mov
in
fst
jecxz
cld
test
loopne
popa
add
push
hlt
movsl
jne
out
dec
push
jns
ror
jmp
cld
sbb
arpl
dec
pop
add
and
push
cmp
xlat
daa
mov
sbb
outsl
xchg
iret
or
pusha
jecxz
in
lods
mov
push
add
jecxz
shl
das
int
int3
dec
outsb
js
lds
lea
lcall
mov
icebp
adc
lods
xor
xor
iret
cs
stc
lret
fwait
loop
nop
fldl
out
cmpsb
mov
mov
pusha
push
sub
ficompl
cs
ja
sbb
fidivrs
and
inc
and
outsb
insl
enter
seta
aad
xorl
dec
test
mov
mov
js
dec
out
lret
loope
cmpsl
and
adc
pop
insb
les
lret
adc
daa
cmp
mov
sbb
jnp
daa
stc
std
adc
cmp
subb
imul
push
js
loope
sbb
lods
sbb
mov
push
pop
repnz
pop
xchg
push
aas
sti
adc
or
neg
stc
movb
add
push
pop
jmp
mov
xor
lds
xor
mov
cmp
ljmp
cld
xlat
int
jno
out
dec
or
mov
into
jo
pop
xlat
jmp
pop
outsb
or
adc
push
push
mov
leave
xchg
jle
dec
fldt
push
pop
dec
add
icebp
xchg
movb
adc
cltd
lcall
popa
rcl
loope
push
in
dec
or
push
call
cmc
lahf
test
xchg
pop
fwait
mov
pop
stos
mov
adc
decl
icebp
aaa
lahf
jg
adc
cmp
fs
das
push
xor
pop
xor
push
or
or
js
or
aaa
pop
test
fisubrl
sahf
das
jmp
clc
mov
pop
mov
or
loopne
push
push
lret
shrb
mov
sbb
push
jg
sbb
ja
push
ds
jp
inc
mov
and
sti
repz
fwait
cld
sbb
lahf
in
lods
push
aas
mov
mov
sarl
shl
xor
xor
imul
mov
mov
dec
mov
sbb
mov
dec
in
mov
mov
ret
sahf
loopne
imul
dec
jo
int3
pop
sub
sbb
ja
cmpsl
mov
cmp
loopne
fs
addr16
ret
and
mov
add
sub
fistpl
jnp
roll
nop
cmpl
data16
ljmp
sbb
popa
jl
hlt
sbb
shll
mov
push
mov
mov
sbb
lret
inc
dec
pop
mov
dec
mulb
popf
loopne
inc
jge
imul
cmp
mov
jb
test
sub
addl
test
lahf
or
jl
push
dec
mov
ret
xor
cmpb
test
mov
xchg
add
lods
push
dec
jl
add
jmp
gs
int
ret
repnz
inc
sbb
cmp
push
pop
mulb
mov
adc
dec
push
xor
test
and
pop
nop
pop
icebp
test
sti
ficoms
push
or
test
sbb
ror
mov
test
dec
dec
into
or
fs
fcomi
test
xchg
arpl
movsl
jno
loopne
xchg
outsl
sub
loopne
cmpb
aaa
fwait
js
cmc
sbb
sub
sbb
lods
pop
setle
stos
js
cmpsl
clc
notl
jmp
daa
dec
fidivs
outsb
popa
addl
inc
adc
pop
push
jmp
rorb
dec
push
ljmp
xchg
and
adc
lret
js
cmp
jg
shlb
cwtl
ret
dec
inc
dec
jmp
repz
loop
add
jmp
dec
cmp
xor
lret
loopne
cld
je
pop
jns
dec
adc
gs
and
mov
lea
lds
sub
movsb
jae
repz
add
test
rorb
jne
xchg
mov
inc
mov
cmc
cld
dec
xchg
les
mov
push
xor
sub
cltd
xor
jg
push
push
mov
push
cmp
mov
rorl
mov
loope
dec
stc
andb
xor
arpl
test
pop
loop
pop
dec
adc
and
push
xor
fwait
xor
adc
cltd
stc
jle
push
loopne
jmp
icebp
sbb
out
push
sub
pop
push
mov
mov
or
jbe
iret
fwait
pop
inc
sti
push
fsubrs
xorl
and
lods
cltd
jge
pop
and
cmp
lds
inc
xor
add
pop
push
rcl
into
call
sbbl
fwait
nop
fsubrp
shrb
insl
xor
cld
or
repz
cmc
sarl
movsl
jle
fdivs
fs
pushf
fdivrl
mov
cmp
inc
pop
bound
imul
xchg
add
mov
shl
fmull
dec
cli
lret
fs
js
xchg
cmp
fists
shrb
cltd
std
and
movsb
rcrb
xlat
push
jg
mov
roll
cld
in
stos
scas
push
and
daa
sub
xor
mov
pop
cmc
push
pusha
mov
lea
movb
or
je
pop
pop
pop
flds
popf
fists
mov
clc
mov
adc
js
add
add
cmp
cmp
in
jb
dec
sti
addr16
push
sub
sub
push
add
mov
mov
xor
add
cmp
movsl
dec
xor
imul
cmp
movsb
and
leave
sti
xor
push
mov
pop
adc
shr
bound
dec
mov
xor
mov
enter
enter
jo
mov
pop
es
pop
mov
iret
cmp
mov
rclb
sub
xchg
or
pop
dec
ror
mov
sbb
movsl
das
add
xlat
int
xor
jnp
sbb
ret
sub
nop
test
sbb
inc
scas
hlt
cli
sbb
cmp
call
in
xchg
mov
js
add
cltd
push
in
into
cld
xchg
pop
shlb
je
lods
jo
jl
push
rcr
scas
mov
add
jnp
pop
adc
jecxz
test
mov
xchg
mov
popf
or
ja
or
mov
fdivrl
mov
fildl
adc
adc
pop
mov
push
sti
mov
addb
sbb
daa
mov
mov
jmp
jno
cltd
jp
dec
mov
or
idivl
push
or
ret
cli
inc
dec
or
cmpb
mov
int
pop
fs
shrb
mov
inc
jns
and
inc
stos
sbb
cmpl
in
flds
cmp
and
pop
cwtl
fmul
loopne
das
sbb
ja
fimull
sarl
fwait
insb
das
pop
imul
clc
cmp
call
sub
and
adc
cs
ljmp
mov
sbbb
insb
push
ret
iret
repz
ret
mov
xor
xor
mov
mov
push
sbb
test
sub
sbb
push
dec
fstl
je
ret
hlt
mov
xlat
sub
fstl
loop
mov
jge
into
jg
jbe
sbb
fbstp
lds
fadds
ret
and
mov
pop
inc
sub
jmp
dec
call
xchg
leave
sbb
sub
push
or
dec
push
out
je
ficomps
sub
cmp
push
add
lods
sarl
xchg
cld
push
sbb
mov
into
orb
stos
leave
aaa
loope
shrl
jae
repz
lea
lods
popf
adc
cli
cld
mov
ret
lds
jae
lret
iret
movsb
add
sub
mov
scas
mov
fistps
cld
dec
js
mov
and
mov
ss
test
cld
xchg
cmpl
sub
fidivrs
aas
mov
cmovl
dec
add
ret
leave
imul
cmp
sbb
movsl
bound
sub
lock
bswap
xor
cmp
scas
mov
xchg
jl
repz
or
stos
inc
jg
push
or
fcmovb
or
pop
jnp
mov
pop
in
imul
xor
stos
and
xor
loop
inc
les
stc
sub
xor
sub
add
loopne
hlt
out
ret
xchg
outsb
rol
ret
push
mov
inc
and
test
mov
push
sub
xchg
push
push
adc
jp
pusha
mov
mov
inc
ja
or
cmp
pop
arpl
or
cmp
cmc
aaa
cltd
lret
xlat
iret
sbb
icebp
aas
xor
jb
pop
ss
inc
outsb
pop
add
lea
popl
push
mov
dec
nop
shll
ficompl
and
jle
loopne
inc
es
xor
pop
cmp
mov
out
loop
loopne
pop
aad
aam
jecxz
add
jae
loop
sahf
nop
lcall
sub
adc
loopne
dec
jmp
lods
cmp
dec
push
adc
lahf
testl
roll
pop
aas
adc
dec
xchg
inc
mov
mov
jnp
fwait
cmpsw
je
movsb
mov
outsb
aas
or
fimuls
xor
adc
sbb
or
aas
jnp
mov
push
push
lods
sbb
subb
pusha
mov
xchg
jl
jp
dec
nop
xchg
outsb
mov
inc
outsl
pop
dec
adc
ret
lahf
shrb
jbe
sub
in
imul
dec
mov
cmp
jmp
xchg
cmp
cs
in
dec
jge
cmovne
cmpsl
loope
mov
and
ret
and
jge
ss
cmp
cld
out
out
shrb
xor
push
fcoms
je
inc
rcrb
mov
adcb
rcrb
mov
icebp
fsubr
inc
leave
dec
call
jl
jge
bound
ret
pop
in
mov
mov
lds
int
btr
push
pushf
cmp
mov
pop
inc
shlb
enter
repz
mov
mov
repnz
mov
out
inc
adc
fadds
enter
cmpsl
push
js
cli
bound
fildll
inc
outsl
xchg
inc
inc
push
pop
mov
push
repnz
lcall
testl
fidivrl
sbb
and
pop
jns
or
push
xchg
cmc
shr
push
cmc
inc
sub
cli
lock
sbb
test
inc
add
test
pcmpgtd
or
push
cmp
iret
fnstenv
mov
mov
ds
fs
mov
push
mov
ds
stos
je
mov
loopne
mov
cmp
push
xorl
pop
mov
mov
mov
cli
push
cmp
adc
cltd
notb
aad
jecxz
dec
pop
xchg
and
cmp
adc
jecxz
jns
mov
cld
ficoml
dec
inc
out
or
mov
stc
xchg
pop
loop
dec
bound
or
mov
ret
hlt
mov
jg
or
xor
mov
int
dec
fnsave
lea
push
push
sub
out
push
lret
xchg
jmp
sbb
invd
and
jo
mov
or
sbb
in
lcall
mov
cmp
jae
ret
scas
jae
divl
adc
ret
and
pop
test
icebp
imul
adcb
jl
xor
aam
push
fld
jno
inc
cmp
pushf
test
pop
xchg
push
add
mov
scas
aas
btr
xchg
inc
mov
add
sti
orb
out
test
ljmp
mov
jb
jl
jne
mov
pushf
movsb
iret
loope
mov
add
call
cmp
dec
hlt
jne
shl
stc
nop
ds
fildl
sub
insl
xor
mov
push
das
lea
fisubs
out
mov
dec
inc
aam
mov
pop
cmp
and
std
testb
outsl
insl
and
dec
popa
and
stos
mov
dec
lods
enter
add
mov
popf
cwtl
xchg
in
sbb
push
out
cmpsl
adc
lea
outsl
pop
cmc
add
mov
adc
test
xchg
push
or
imul
fs
xchg
push
das
pop
fmuls
pop
mov
mov
imull
cmp
fs
and
push
out
insb
or
push
aad
jp
rcrl
add
mov
sub
mov
das
std
mov
andl
hlt
les
ss
cmpsl
cltd
pusha
movsl
test
popf
mov
iret
jae
dec
fldt
adc
and
leave
or
sbb
pop
outsb
ret
adc
imull
loop
mov
es
add
mov
add
insb
popa
loope
pop
ds
mov
sub
lds
in
rolb
cltd
lahf
loope
mov
fcomps
jbe
rcll
pop
je
dec
cmp
lock
fldt
and
in
xchg
ficoml
stos
int3
mov
repz
xchg
loopne
pop
add
hlt
int3
popa
sub
push
xor
sarl
or
in
jl
iret
scas
adc
xor
bound
xor
pusha
in
dec
js
sub
sub
ficoml
jge
push
and
cmp
add
fwait
notl
adc
add
mov
int
pushf
mov
mov
xorb
lret
inc
dec
nop
je
cld
movsl
and
sbb
and
mov
push
xlat
sbb
out
push
leave
pop
js
dec
xlat
mov
push
into
movsb
adc
mov
lea
lcall
jp
mov
stos
stos
mov
adc
lahf
out
hlt
inc
arpl
cmp
sbbb
cmp
clc
jmp
pop
loop
mov
pop
push
jnp
aad
inc
cld
leave
cmp
push
jb
cld
push
mov
mov
or
fcmovu
mov
sub
mov
cmp
sub
je
cmp
fisubl
mov
lods
lcall
mov
push
addr16
pop
dec
push
and
pop
push
sarl
pop
jg
xchg
out
int
jmp
jp
mov
cmpsl
mov
jne
pop
nop
scas
aaa
nop
adcb
cmp
jecxz
fstl
mov
mov
mov
sbb
inc
xchg
ret
mov
mov
iret
and
cli
fdivl
dec
mov
sbb
scas
xchg
in
jne
lods
les
movsb
ret
scas
add
in
lock
pop
pusha
adc
dec
sub
scas
add
jnp
out
sub
shl
leave
add
xchg
push
dec
scas
insl
sub
mov
cmp
jbe
lcall
and
adc
bound
or
mov
scas
out
ja
js
mov
lods
adc
push
ret
addl
and
ljmp
or
cmp
or
subl
pop
xchg
cmp
call
jno
insb
test
rol
push
cs
or
mov
sbbb
lahf
fisubrs
mov
clc
jae
loope
cmp
push
and
aas
cmc
mov
and
adc
pop
cmc
add
and
call
data16
call
jne
jecxz
mov
mov
fisubl
imul
xchg
push
rcrl
movsl
popf
sub
and
shld
inc
adc
movsl
cli
sti
sbb
push
dec
jmp
dec
fcmovbe
mov
pop
fsubl
mov
sbb
push
dec
jae
lret
fimull
mov
icebp
ss
jns
idivl
push
dec
dec
inc
push
das
in
pop
repz
xor
and
mov
and
mov
clc
mov
lahf
inc
xor
in
inc
xchg
test
adcl
jb
lcall
xchg
mov
imul
cmovbe
cmp
cmpsl
mov
sbb
mov
adc
test
mov
pop
sub
stc
cmp
xor
or
imul
outsl
je
sbb
lret
xchg
push
mov
mov
out
sbb
inc
aas
push
aas
repnz
aaa
mov
aas
insb
or
lret
cmp
shrl
xchg
orb
sub
sbb
dec
idivb
mov
and
mov
jae
shl
ja
pop
pop
dec
inc
mov
xor
mov
aaa
push
cmp
and
add
adc
andl
int
into
out
sti
call
fidivl
cmp
mov
mov
pop
sbb
test
hlt
push
repnz
adc
out
sub
mov
lods
cli
dec
repnz
mov
in
pop
add
sbb
jge
dec
repnz
or
jecxz
hlt
jmp
cld
adc
jns
mov
mov
mov
into
cmp
rol
jmp
jae
mov
xor
out
adc
or
cmpsb
adc
aad
cmp
dec
sti
jb
imul
or
sahf
data16
roll
xor
popf
les
mov
push
push
dec
lock
iret
add
sbbb
movl
xchg
lods
dec
add
cld
cmp
sbb
and
jne
int
mov
nop
pop
inc
ja
mov
sub
cli
inc
clc
arpl
and
and
icebp
mov
cwtl
mov
xchg
ficompl
jae
push
mov
daa
cs
iret
rcrb
sbb
ficomps
cs
in
add
stos
sti
in
push
fldenv
mov
cmpsl
test
sub
scas
add
shr
jmp
ret
jbe
imul
rcrl
lods
push
clc
inc
add
int
sbb
adc
or
notb
rorl
mov
jg
push
xchg
and
jbe
lret
push
popa
cld
jb
cmpsb
leave
xchg
inc
mov
ja
dec
add
mov
sarb
rorl
jnp
rorb
scas
js
test
pushf
add
mov
iret
icebp
push
push
les
repz
faddl
and
xchg
jge
add
adc
mov
aaa
add
dec
xor
in
jle
or
dec
add
pop
pop
push
cwtl
mov
cmp
fmulp
in
jle
test
adc
xlat
popa
icebp
add
scas
in
test
jp
repz
popa
cmc
xchg
push
and
push
push
jbe
sub
arpl
aad
incl
add
rcrl
mov
loop
fisubrs
mov
lcall
dec
loope
scas
or
iret
mov
and
adc
sub
adc
fsubrs
inc
lds
loope
lods
test
add
pop
add
aaa
jle
popf
outsl
pop
dec
lds
mov
ret
and
les
daa
mov
pop
cmp
sbbb
adc
sub
movsl
sbb
push
in
adc
mov
cmp
jne
jno
sub
or
inc
xchg
inc
jecxz
mov
cmp
xor
std
push
push
int
loope
sbbb
lahf
cmpb
push
pop
xchg
and
ja
fdivrs
mov
fwait
fs
pusha
inc
and
data16
fcomps
inc
das
pop
sti
cli
and
cwtl
pop
push
push
sbbl
fcomi
push
out
push
les
test
xchg
in
cli
test
and
aad
xor
pop
mov
mov
stc
sub
stc
dec
mov
in
cmc
dec
dec
add
mov
xchg
and
xchg
movsb
sub
in
xor
pusha
ss
aam
lea
mov
mov
xchg
mov
cmp
jp
jl
mov
add
shll
mov
out
inc
mov
std
aas
jnp
test
sub
scas
ror
mov
cmpsl
pop
shrb
or
xor
ds
xchg
fucom
inc
lods
sub
cmpsb
ret
xor
lods
popf
mov
test
jnp
sub
ja
xchg
dec
arpl
and
or
push
mov
shll
pushf
or
and
ret
sbbl
out
ror
sub
mov
int
testb
sahf
jge
and
in
jmp
in
jmp
inc
cld
scas
sahf
test
or
popf
push
es
ss
jmp
sbb
mov
sub
call
fndisi(8087
or
call
nop
mov
imul
clc
nop
adc
push
jmp
aaa
sarl
insl
push
xchg
dec
xorb
mov
push
and
jge
neg
adc
push
das
push
stc
xor
int3
inc
mov
std
or
test
cli
jmp
mov
cltd
fldl
insl
inc
out
push
push
loop
mov
xor
aas
ret
cmpsb
hlt
xchg
push
ljmp
mov
dec
mov
jns
jne
dec
movsb
in
cmp
std
js
enter
fidivl
lods
adcl
inc
xchg
sub
xchg
shrl
test
mov
dec
mov
iret
sbb
dec
xor
cmp
add
and
dec
leave
and
add
jle
cltd
sub
dec
das
jecxz
sub
jge
pop
sub
or
daa
mov
cmp
jmp
loope
cmp
mov
mov
es
in
repz
sub
dec
cltd
sahf
mov
lcall
scas
cmp
scas
sbb
rorl
stos
popa
or
js
jl
fdivrs
in
jb
push
xchg
dec
jns
jne
orl
ss
jl
vcvttsd2si
imull
pusha
out
mov
add
dec
pop
icebp
pop
ljmp
mov
sbb
sub
lock
xor
cmpsl
pop
push
sahf
mov
pop
mov
sbb
test
mov
add
insl
add
adc
push
fstl
test
fxch
sub
imul
sbbb
jecxz
cmp
mov
lods
cmp
cmp
mov
push
and
std
push
dec
pop
sbb
fisubrl
dec
imul
xor
jecxz
pusha
push
fstpl
mov
imull
inc
shlb
mov
rol
cs
jno
and
jnp
sti
cltd
xor
mov
in
sub
inc
push
mov
addl
xchg
jecxz
int3
cld
daa
in
arpl
jne
xchg
add
ret
pushf
nop
cmpsl
fcom
mov
inc
js
ret
inc
jo
jno
imull
cmp
add
int3
pushf
sub
mov
aaa
sbb
jle
or
push
xchg
mov
mov
push
lds
adc
or
xchg
enter
push
int
mov
jmp
adc
xchg
or
xlat
jae
push
fbstp
insl
push
sahf
push
mov
out
jb
addr16
enter
testl
aam
cmp
inc
xchg
xchg
mov
adc
dec
mov
adc
cmpl
call
mov
mov
mov
clc
cmp
inc
cmpsl
loope
imul
pop
aas
rorl
mov
lods
enter
adc
jl
or
mov
shlb
test
inc
in
scas
loopne
js
imul
insb
ret
mov
jb
push
clc
lods
lock
test
lea
and
insb
in
push
andb
mov
stos
or
inc
stos
mov
js
sub
cli
push
mov
std
in
lock
scas
loopne
cld
data16
jbe
jb
jecxz
or
je
out
jae
mov
fisubs
loope
adc
stc
icebp
pop
adc
cmpsb
dec
and
adc
xchg
arpl
push
mov
filds
xor
mov
jmp
negb
xchg
mov
mov
lods
push
rclb
arpl
bound
mov
outsl
push
or
in
popa
iret
and
push
nop
dec
cwtl
fwait
mov
lods
inc
dec
jge
and
cmp
fiaddl
pop
aad
mov
mov
add
roll
push
pushf
and
and
push
popa
dec
outsb
test
das
xchg
add
aaa
insl
adc
pop
fcomps
xchg
mov
mov
pop
ds
in
repz
cmp
mov
pop
inc
xor
into
in
cmp
jge
out
sbb
mov
push
sub
pop
sub
jnp
lret
xchg
adc
jnp
into
iret
mov
sub
shll
cmp
push
outsb
sub
int3
sub
inc
and
fs
cmp
loopne
pop
xchg
lcall
push
jge
cmp
jmp
int
and
sbb
dec
daa
pop
xlat
adc
jmp
or
sbb
loope
out
addr16
decl
leave
mov
inc
cmpsb
or
sub
xchg
ja
stc
mov
and
cmp
test
dec
xchg
push
xor
out
in
xlat
shll
repnz
leave
fcoms
ja
ljmp
cmp
call
sbb
adc
sub
cwtl
lahf
ret
dec
pushl
mov
cmp
and
jge
inc
push
fnstenv
je
out
jmp
lret
xor
sti
push
sbb
cwtl
int3
das
or
aad
and
adcl
popl
aas
add
add
pushf
leave
cmp
xor
mov
inc
push
rclb
xchg
jl
mov
das
sti
sahf
jmp
cmp
push
adc
sbb
xchg
sahf
jg
jg
push
in
aaa
int3
andb
inc
mov
mov
or
mov
mov
mov
mov
pop
mov
dec
cli
rorl
mov
xlat
pop
xor
rcll
xor
bound
pop
pop
repz
fimull
mov
aaa
mov
loopne
and
pop
dec
inc
push
test
fildl
lock
push
cli
sbb
addr16
add
inc
push
leave
int3
xor
cmpsb
aam
and
mov
inc
jno
enter
xor
dec
cltd
loop
mov
dec
jmp
add
stos
dec
loopne
subb
lods
mov
es
pop
out
mov
push
or
jp
cmp
aas
cmp
fcmovb
inc
mov
jnp
cmp
push
mov
sub
inc
sbb
jnp
add
jnp
add
js
xchg
adc
mov
pop
mov
jnp
jg
pushf
and
mov
enter
aaa
push
mov
mov
data16
pusha
mov
adc
data16
push
cli
push
mov
out
mov
sbb
xor
lock
imul
dec
rorb
add
rorb
andl
jl
mov
ljmp
or
lret
cld
sbb
jb
fstps
lret
js
mov
pop
out
rorl
shlb
xor
insb
das
cmp
cmpsb
mov
push
or
gs
pop
cmpsb
xor
pop
or
shll
sbb
scas
aam
add
mov
dec
mov
sbb
out
push
push
inc
out
jo
pop
xchg
insl
jns
aas
roll
orl
dec
bound
subps
gs
ds
mov
aam
pop
test
and
xor
bound
fldcw
dec
mov
sub
add
cmp
shll
mov
sbb
jecxz
xor
dec
mov
sahf
stos
insl
fsubs
xlat
and
test
sub
sahf
jnp
push
imul
xchg
pop
cmpsb
test
or
add
mov
shrl
outsl
lahf
push
sbb
movsl
mov
subl
outsl
dec
inc
sbb
fucomip
xor
push
insb
jecxz
mov
adc
mov
jo
jo
push
mov
mov
pop
rcl
stos
out
push
ja
cmp
and
lods
ret
rcll
aad
lret
pop
add
xorl
call
mov
ficompl
lcall
clc
adc
lret
add
mov
sub
repz
lcall
push
or
cmp
push
gs
ss
fdivl
shlb
repz
ss
loop
pushf
nop
xor
mov
sar
xor
mov
sbb
into
popf
test
push
mov
daa
jecxz
iret
xchg
or
insb
jmp
fdiv
and
push
jne
sti
outsl
aad
mov
mov
sahf
push
das
push
stos
iret
mov
push
mov
push
mov
lahf
xchg
nop
jg
push
lret
xchg
data16
mov
cmp
subl
push
int
in
aaa
adc
or
mov
loopne
into
mov
push
in
imul
hlt
adc
sbb
add
cwtl
shll
loope
jno
adc
fistpl
and
out
and
rol
mov
andl
xchg
xor
fs
xlat
pop
push
dec
in
mov
sbb
repz
es
enter
sub
add
pop
cmp
jecxz
sbb
pop
jne
xchg
lcall
sbb
arpl
adc
mov
mov
sbb
icebp
outsl
push
testl
in
push
or
adc
inc
inc
xchg
pop
mov
fdivp
movsl
pop
loopne
xchg
adc
mov
push
mov
scas
push
adc
inc
pop
cs
xchg
xchg
cltd
ficompl
sub
cmp
int3
cpuid
pop
cmp
add
mov
pop
into
pop
cmp
mov
pop
and
xor
or
test
dec
jb
sub
mov
xchg
add
mov
add
jns
mov
sub
cmpsl
insl
and
mov
stos
lods
jne
movsb
ret
add
pop
inc
pop
sbb
xor
lret
dec
xchg
js
mov
sub
std
dec
das
xlat
fstl
out
sbb
iret
jp
aad
fcomi
jge
xchg
out
sbb
xchg
js
nop
push
popa
jp
mov
mov
arpl
and
in
mov
or
int3
jmp
xor
xchg
sbb
mov
mov
test
and
por
push
outsl
jbe
pushf
inc
jp
cmpsl
jns
sub
stc
adc
lods
pop
shr
movups
and
cmp
sub
fcomp
stos
pop
movsb
fdiv
mov
pop
mov
out
insl
add
dec
sub
loope
aas
insb
dec
jecxz
adc
dec
mov
scas
mov
scas
mov
cmpsb
lock
test
or
lret
add
jbe
xor
sti
add
test
jns
imul
imul
xchg
push
push
pop
mov
pop
push
xchg
inc
out
std
leave
loopne
xchg
jo
xabort
pop
movsb
lret
insl
std
add
fidivs
cmp
and
lcall
out
mov
xor
test
mov
jnp
mov
xor
xchg
sub
mov
imul
sub
push
xchg
add
pmaxub
jecxz
or
add
xor
out
imul
push
insb
inc
das
pop
sahf
mov
push
es
lds
insl
cltd
pop
and
lock
mov
pop
mov
shlb
popf
pop
cmpl
fimull
push
mov
hlt
jge
js
fcoml
push
inc
adc
xchg
sbb
outsb
add
jno
sbb
and
sub
cmpb
sarb
pop
pop
roll
inc
mov
jae
dec
adcb
hlt
rcr
pop
aam
mov
testb
loop
sub
pop
push
outsl
add
mov
xor
sub
imul
pushf
sbb
inc
stos
and
gs
dec
hlt
push
pushl
cmp
mov
fstps
aas
int
cmc
sti
pop
cmp
movsl
xchg
mov
and
or
xor
inc
inc
dec
mov
dec
jo
adc
sbb
pop
dec
out
sbb
xlat
mov
insl
push
rcrb
cli
shl
cmc
mov
rcrl
adc
pop
pop
sub
mov
jl
push
mov
mov
mov
iret
cmp
mov
sub
mov
push
sbb
aad
sub
cmpsl
xor
sub
into
int3
adc
pop
xchg
in
ljmp
or
or
jns
sbb
lds
inc
cmp
test
pop
mov
inc
into
ds
or
inc
out
adc
or
repnz
outsb
or
test
inc
inc
xchg
out
pop
loop
stos
pop
mov
ret
jge
and
cmpl
scas
or
nop
aaa
adc
xor
out
lods
in
add
std
and
movb
repnz
push
push
cs
fbstp
push
jns
std
mov
jns
lock
mov
mov
sub
shrb
clc
adc
xchg
insl
jmp
xchg
ret
aad
sub
cmpsb
cmpb
pop
movsb
iret
test
out
jne
and
repnz
leave
loop
add
test
jo
cmp
test
dec
addr16
push
jge
out
jns
cltd
dec
out
fimull
xor
test
subb
push
movsb
test
jns
fwait
cmp
jle
out
test
jbe
mov
ss
pop
ja
mov
or
das
fcoml
or
into
rclb
cmp
mov
js
jbe
sub
mov
pop
stos
jge
mov
lret
pop
icebp
adc
mov
in
cmp
mov
inc
pop
push
jge
xchg
add
cltd
cmp
cli
sub
mov
jl
out
xor
and
shlb
cli
arpl
pop
pop
pop
mov
ljmp
ret
lret
pushf
dec
aam
sub
or
mov
xor
or
imul
and
dec
js
sub
stos
int
and
sub
mov
dec
call
fstpt
push
xor
adc
xor
iret
ja
jl
test
mov
out
pop
jmp
ljmp
out
pusha
jmp
sub
mov
ss
pop
into
les
addr16
sub
movw
inc
roll
xor
xchg
xchg
adc
push
xlat
cmc
arpl
int
aas
push
jl
push
and
loope
andb
rclb
in
pop
xor
cmp
pop
mov
inc
popa
xlat
or
sbb
jmp
out
cmpsw
lea
movl
xor
scas
outsl
int3
jns
lret
add
sub
sbb
adc
stc
out
push
push
call
mov
lahf
push
xchg
ficoml
mov
pop
and
xor
jae
dec
mov
dec
mov
and
mov
test
int
sub
sbb
jmp
push
aas
rcrb
mov
aas
lods
pop
nop
jecxz
clc
mov
lahf
stos
fwait
mov
mov
inc
pop
ss
into
int3
shl
ja
scas
jns
es
fisttps
pop
mov
lret
jne
insb
fwait
cli
jg
dec
dec
or
hlt
adc
or
das
push
paddw
cmp
adc
jl
jle
test
in
adc
stos
mov
mov
aam
fiaddl
mov
mov
push
push
jnp
mov
in
mov
int
call
aas
inc
xchg
adc
sub
insb
adc
mov
inc
mov
pop
dec
scas
test
mov
jbe
jo
int3
fldenv
repnz
aaa
push
adc
cs
mov
aad
sub
sbb
nop
jmp
push
jae
cmpsb
xor
pop
ds
mov
add
scas
sbb
popf
loope
popa
cmc
leave
mov
cmpsb
mov
adc
pop
hlt
cmp
mov
hlt
sbb
cmpsl
orl
rorb
or
pop
imul
gs
aam
push
mov
jp
xchg
adc
sbb
dec
testl
cmp
repz
inc
pop
mov
popf
addr16
aaa
add
ds
xor
ret
mov
sub
sbb
je
sahf
xor
jne
add
shr
lcall
in
call
cltd
fcmovnbe
shrl
in
outsb
inc
add
fbld
mov
xchg
add
hlt
xchg
cs
cmc
psubusw
andb
mov
not
idivb
ds
or
and
or
jmp
dec
add
dec
adc
jae
std
cmp
mov
xor
sbb
mov
dec
xchg
xor
xchg
push
cs
xor
ret
aam
pop
aam
jae
and
out
repnz
sarb
aad
sbb
testl
in
loopne
ss
inc
mov
and
dec
cld
jg
hlt
mov
sbb
jmp
xor
xor
adc
scas
adc
mov
sti
sbb
lock
ds
insb
mov
outsl
mov
pusha
push
imul
sbb
cltd
punpcklwd
mov
fnstenv
mov
pop
sub
psubq
mov
mov
lods
daa
push
out
test
adc
movsb
repz
push
lods
add
xor
dec
or
fwait
jmp
pop
xor
fidivrl
inc
mov
subb
xchg
lret
jns
mov
inc
or
aam
jmp
scas
arpl
dec
xor
dec
dec
in
stos
inc
out
negl
xor
orl
iret
arpl
lock
pop
adc
sub
pop
mov
rcrb
test
cs
rep
sbb
lods
shrb
cmpsb
fcomps
push
mov
cmp
adc
scas
fs
dec
inc
push
in
push
popf
call
loop
mov
xorl
out
stc
jmp
inc
sub
in
ja
in
adc
test
or
cli
je
jns
push
mov
rcl
ret
les
aaa
dec
sbb
movsl
rolb
mov
pop
loopne
bound
inc
cmpl
inc
jns
xchg
mov
xchg
mov
nop
mov
test
xor
sarb
jne
lds
lret
or
mov
jl
jbe
or
xchg
popa
sbb
adc
data16
jp
pop
push
mul
arpl
lahf
mov
sahf
aas
push
aad
std
pop
mov
and
add
inc
sbb
hlt
sahf
or
pop
mov
jb
xchg
push
sbb
sahf
xor
in
xchg
sbb
test
mov
rcll
dec
sbb
xor
push
std
xchg
sbb
jl
sub
adc
repnz
jl
push
leave
les
mov
or
sub
imull
cli
sub
xor
arpl
int3
push
repnz
lods
mov
ss
push
mov
mov
insb
push
cmp
inc
clc
outsb
push
mov
leave
lods
lock
inc
lcall
lea
xor
mov
xchg
fdivrl
pushl
jne
adc
mov
mov
jbe
pop
aas
repnz
lret
or
adc
xchg
mov
pop
xlat
popf
adc
cs
outsb
iret
pop
add
stc
push
mov
ja
xor
movsl
stc
nop
lds
adc
pusha
xchg
int
loopne
inc
scas
sbb
sub
gs
cld
je
mov
rcrl
mov
xor
push
aaa
xchg
fstpt
imul
shl
incl
nop
andl
mov
scas
lahf
jnp
leave
stos
dec
adc
fistpll
gs
cwtl
data16
and
inc
push
jg
fdivp
xlat
mov
lods
mov
mov
or
int3
jbe
nop
sbb
or
in
aaa
sbb
sbb
inc
inc
stos
adc
mov
mov
pop
sbb
mov
sti
mov
pop
cmpsb
or
pop
dec
jmp
or
push
xchg
shlb
pop
jnp
inc
xchg
push
shl
nop
adc
jle
int
sub
push
dec
push
and
mov
sbb
roll
js
test
push
mov
mov
jnp
push
jp
aad
xor
and
mov
and
dec
and
es
fiaddl
push
clc
push
loope
shr
outsl
into
cmp
and
iret
or
inc
pop
ja
cmpsb
movsb
out
cmp
mov
test
or
mov
in
sub
popf
xchg
sub
add
jnp
ljmp
sbb
adc
pushf
daa
pop
add
push
repnz
cs
inc
cmp
cmp
ds
orb
sahf
faddp
xchg
jbe
movsl
cltd
xchg
out
push
mov
xor
stc
jle
bound
shl
cmp
cmp
sub
loopne
lock
js
pop
push
pop
ficomps
adc
lahf
xchg
std
inc
nop
hlt
test
inc
imul
push
ret
push
add
and
in
cmp
cmpsl
ret
xor
popf
je,pn
sub
ret
inc
psubusw
bnd
mov
push
mov
adcl
pusha
mov
add
arpl
imull
or
add
imul
cmp
sbb
xor
loopne
iret
insl
scas
cli
mov
popa
inc
cltd
insb
adc
stos
cmpsb
out
aam
mov
jge
ret
xor
cltd
xchg
lret
pop
or
fs
mov
sub
ljmp
lea
xor
add
ja
sti
mov
mov
add
inc
xor
dec
ljmp
cld
repz
cmpsb
xlat
out
pop
addl
push
xor
jmp
and
aas
pop
xor
divb
mov
shrb
xor
mov
dec
or
loopne
or
sub
ljmp
popa
pushf
adc
pop
rolb
clc
lcall
mov
js
xchg
andb
mov
push
jae
aaa
fidivs
xlat
icebp
shrl
or
mov
pop
test
jge
call
sub
and
xor
push
sub
aaa
out
notb
xchg
pop
movb
jae
das
fsubs
inc
xchg
mov
lret
sub
sbb
cli
xlat
int3
pop
pop
pop
test
jmp
push
fs
jae
cltd
jno
mov
iret
imul
dec
pop
cmp
xchg
call
jp
test
pop
push
xor
dec
and
lret
push
mov
push
fcmovu
ficompl
scas
jbe
jae
popf
test
adc
repnz
cmp
call
shlb
pop
pop
jle
hlt
or
addl
cs
mov
enter
cmp
addl
mov
not
popa
es
mov
fnstsw
cli
jl
dec
mov
test
jg
lods
cmp
cmc
out
jge
push
jbe
mov
mov
lods
cmp
push
cmp
xchg
push
sub
aad
pop
int
cmp
mov
mov
dec
jmp
fldcw
add
sub
out
or
mov
mov
mov
lock
or
or
mov
mov
dec
lahf
pushf
mov
mov
hlt
cmp
xor
xor
je
pop
out
bound
pushl
jmp
lods
fwait
jmp
arpl
mov
pop
nop
jecxz
sbb
dec
sub
in
aas
and
ja
xor
mov
mov
cmp
imul
or
mov
sahf
push
cmpsl
inc
mov
lods
or
xor
pop
test
test
ficompl
mov
bound
sub
es
mov
scas
and
sti
sbb
loopne
dec
cli
in
add
ret
movsl
lcall
sub
xchg
ficomps
decl
xchg
push
imul
js
xchg
sub
jmp
cmp
sub
jnp
cmp
ficoms
and
or
test
and
sahf
adc
out
out
rolb
fisttps
xor
dec
mov
pop
int3
fwait
or
sub
jge
mov
mov
jns
pop
fidivl
js
sub
pop
daa
sub
and
sub
fisubrs
sbb
pop
cmp
cld
je
jns
cmp
dec
aaa
rep
xor
mov
jecxz
jae
adc
inc
jg
or
jl
arpl
inc
sbb
loopne
test
cmpsb
mov
in
xchg
jae
push
rorl
jbe
scas
scas
scas
in
push
pop
adc
cmpsb
jnp
xlat
ret
cmpl
push
fwait
push
mov
cmp
fstps
push
hlt
mov
jmp
dec
clc
pop
jp
jae
lahf
loop
int3
add
lock
arpl
pop
cmc
shll
jnp
into
popa
fdivs
rorl
adc
ret
or
clc
jne
nopl
idivb
cmp
jno
sbb
sub
out
sbb
push
mov
xorl
add
mov
inc
in
push
sbb
cmc
dec
div
in
sbb
loop
push
loopne
inc
sub
rep
jecxz
xchg
insb
push
call
lret
mov
sbb
stos
xchg
push
or
imul
push
cmp
out
pop
pop
ret
cmpsl
xchg
mov
pop
mov
mov
and
sub
mov
dec
ss
xchg
fisttpl
into
adcb
insl
subb
int3
lods
pushl
imul
adc
ret
mov
xor
outsl
or
sub
in
mov
push
fildll
mov
xor
and
fwait
insl
popa
int
sub
push
rcl
loopne
imul
xchg
and
pop
and
ljmp
loopne
out
jl
pop
jl
fucomp
push
sub
sbb
mov
xchg
sub
or
iret
dec
and
int
jecxz
shll
sar
sbb
dec
enter
and
enter
xchg
push
loop
cmp
or
imul
dec
mov
push
inc
xor
repz
pop
sub
mov
inc
sarb
pop
cmp
flds
mov
and
repnz
cmp
sbb
sub
insl
lods
out
lods
ror
push
jmp
in
pushf
into
pop
aam
jo
xchg
test
mov
dec
add
testb
push
bound
ret
jp
sbbl
fs
mov
je
jb
stc
or
sbb
and
inc
outsl
movsl
testl
jg
add
cltd
loop
pop
mov
das
pop
mov
in
std
inc
sub
jecxz
sbb
cld
movsl
pop
xchg
scas
js
aam
iret
lret
pop
mov
iret
aaa
xorb
adc
sbb
movsl
les
pop
movsb
sub
pop
js
cltd
pop
decb
push
cmp
mov
popa
nop
scas
pop
xor
mov
mov
js
je
sbb
in
lea
lods
daa
aaa
ljmp
aam
xchg
sbb
test
inc
pop
lds
pop
lret
in
in
push
dec
scas
sub
scas
outsb
insb
outsl
adc
fdivp
or
xchg
lods
sbb
aad
fdivrl
mov
push
fstps
pusha
call
adc
inc
ljmp
jg
je
and
cmpsl
cld
cs
fidivl
fistl
les
xchg
xchg
ret
icebp
adc
lcall
sbb
bound
test
inc
ret
jb
xor
mov
adc
lods
and
les
aad
mov
lock
mov
adc
in
push
push
mov
inc
bswap
fwait
shr
jmpw
cmc
sbbb
fsubrs
movsb
mov
ficomps
lahf
mov
ss
lahf
sub
dec
imul
int
in
sub
jns
and
inc
lcall
inc
roll
in
or
or
adc
jmp
shrb
popf
jecxz
or
in
adc
mov
dec
fidivl
jae
sub
lret
mov
clc
push
xchg
fucom
add
outsl
ljmp
inc
xchg
sub
push
je
push
hlt
loop
inc
jg
mov
push
fcmovnbe
std
int
cmp
mov
or
cmpsl
inc
jo
idivw
icebp
dec
iret
ja
cmp
push
je
ret
stos
rcrl
adc
in
adc
test
dec
in
mov
fwait
test
push
pop
cmp
insl
xchg
out
popf
int3
shrb
cmp
ja
jns
movsl
dec
cld
cmp
push
imul
test
movl
sbb
test
mov
sbb
jo
shrb
hlt
pop
int
sbb
ja
mov
dec
in
das
mov
mov
push
mov
popf
push
int3
xor
jecxz
adc
or
into
and
xchg
mov
push
pop
adc
bswap
cmp
sub
push
mov
and
cmp
fiaddl
imul
sub
or
cltd
out
or
icebp
push
enter
push
iret
inc
jne
xor
pop
repz
or
out
jl
jp
mov
dec
cmp
dec
and
mov
adcb
adc
xchg
scas
or
xor
ljmp
rcr
mov
cmpsl
test
aad
push
mov
rolb
cmpsl
mov
and
inc
pop
dec
aam
test
inc
push
sbb
mov
int
repz
mov
dec
dec
lret
ljmp
xlat
push
xor
adc
push
or
mov
scas
cmc
mov
xchg
jne
push
lret
or
dec
cld
add
mov
push
rcrb
enter
into
inc
xchg
push
push
add
pop
jmp
data16
pop
loop
int3
gs
mov
idivb
pop
pop
pusha
or
jno
jecxz
sbb
sbb
hlt
mov
and
and
out
jge
clc
push
lret
cmc
xchg
xor
dec
pop
bound
inc
dec
lods
jae
adcl
jmp
nop
mov
pusha
push
psubsw
xchg
or
stc
dec
scas
adc
xchg
lcall
xchg
lcall
scas
fadd
xor
and
dec
popa
out
rcll
sbb
daa
or
aam
push
jmp
fistpl
mov
subb
int3
and
push
aad
xor
adc
out
decl
mov
push
inc
js
jmp
mov
faddl
pop
pushf
enter
or
pushf
adc
dec
mov
pushf
stos
daa
lcall
adc
cwtl
shll
push
and
mov
add
nop
mov
int
lret
cs
insb
push
add
cvtpi2ps
mov
int3
scas
sub
pop
xchg
popf
fs
jmp
sub
jbe
dec
rorl
mov
xor
ret
imul
add
out
sbb
pop
pop
dec
mov
or
mov
aam
cld
outsl
lods
push
pop
mov
imul
dec
jnp
add
adc
ret
mov
mov
scas
jno
ret
pushf
into
mov
cmp
or
mov
add
push
jp
out
mov
add
fwait
mov
sub
push
inc
aam
mov
repz
mov
jmp
es
mov
data16
mov
cmp
and
lods
jns
sbb
and
push
dec
push
mov
sub
dec
sarl
pop
std
xor
out
dec
ja
jb
sahf
shlb
mov
or
adc
mov
loop
je
cmpsb
mov
adc
dec
push
subl
add
cs
pop
xchg
pop
xchg
adc
push
cwtl
cmp
inc
out
out
stc
mov
sub
aaa
xor
js
testl
mul
out
pop
or
mov
int3
call
mov
je
cmp
ja
aas
lods
notl
leave
cmpsl
fcmovu
and
dec
pop
adc
bound
or
sahf
adc
xchg
ljmp
outsl
fnstcw
ficoms
iret
lret
les
or
bound
leave
and
inc
sbb
mov
lds
mov
into
sbbl
dec
lea
aas
adc
xlat
xlat
lock
add
dec
jecxz
or
mov
pop
dec
and
hlt
or
insl
test
cmp
aad
les
adc
cmp
inc
loope
gs
pop
dec
push
push
xor
push
or
dec
mov
jecxz
insl
pop
int3
scas
push
imul
push
jae
jg
pop
mov
add
leave
adc
popf
cmp
jl
in
gs
inc
mov
mov
pop
pusha
inc
dec
jecxz
push
adc
sub
push
addr16
in
ljmp
push
or
pop
jno
out
push
adc
pop
push
inc
sbb
cmpsb
sbbl
out
scas
xchg
sbb
sub
mov
jg
xor
or
mov
pop
stc
push
push
inc
mov
push
push
inc
xchg
test
jp
cmpsb
cmovae
aad
xchg
push
icebp
xchg
es
fadd
mov
cld
mov
loopne
cmp
add
jne
aas
ror
mov
repz
or
test
les
and
cs
test
cmp
mov
pop
cmp
mov
xchg
iret
adcl
inc
dec
lret
add
icebp
jbe
adc
cli
call
ja
dec
fisubs
clc
insb
jno
enter
jnp
mov
dec
hlt
mov
mov
mov
testl
mov
xor
mov
lcall
insl
shll
xlat
cmpsb
pushl
lock
sbb
sbbb
mov
movq
cmp
mov
pop
in
hlt
fnstsw
scas
sbb
cmpsb
add
pop
outsl
icebp
daa
in
adc
leave
fisttpl
int3
int3
daa
cmc
inc
inc
loop
in
xor
cwtl
sub
add
fmuls
dec
dec
pop
hlt
lret
scas
mov
push
add
bound
push
cmp
in
and
add
das
divl
cmp
shrb
inc
decb
xchg
or
cli
sub
xor
mov
sub
mov
imul
mov
push
mov
add
iret
mov
mov
loop
or
sub
lods
push
or
mov
pop
xor
mov
mov
int
scas
arpl
repz
jmp
xchg
dec
lea
adc
inc
xchg
xchg
movb
call
loope
xchg
gs
fstpl
sbb
idiv
aas
sbb
les
imul
clc
stos
loopne
sbb
adc
push
mov
mov
in
sbb
pop
dec
mov
inc
shrl
orl
mov
or
dec
adc
stos
jg
popf
cmp
jmp
mov
cmp
cmp
dec
or
or
mov
fsts
shrb
and
and
sbb
call
scas
lods
fsubl
ret
insl
aam
sbb
jo
mov
mov
and
add
pop
leave
add
aas
dec
mov
xchg
pop
stos
stc
out
mov
mov
xor
enter
lds
pop
and
xlat
push
add
movsl
push
and
dec
cltd
xorl
popf
cltd
aad
leave
mov
sub
repnz
repz
adc
clc
cmpl
rcll
push
test
out
mov
push
jae
mov
sahf
dec
fwait
lea
jg
jge
push
mov
mov
movsb
add
sub
xor
not
insl
dec
jg
sar
enter
bound
inc
cltd
out
xchg
pop
or
mov
cmc
adc
aad
cltd
ret
or
add
and
int
jl
pop
jle
fdivrl
in
scas
mov
pop
cmp
push
mov
in
lahf
aas
ret
dec
add
shll
pop
xor
jnp
pop
inc
pushf
push
adc
dec
test
test
xor
pop
adc
xor
push
icebp
or
loopne
xor
je
xchg
pop
pop
sub
sbb
inc
sub
cmp
add
in
and
stos
loopne
cmp
call
les
or
jecxz
add
pop
jbe
int3
adc
add
icebp
sub
jo
in
stc
mov
mov
arpl
ret
movsl
dec
push
mov
push
pop
popa
sbbb
jo
lea
mov
loop
stc
test
add
sbb
clc
jns
pop
mull
cmp
subw
nop
jns
sbb
mov
mov
xchg
bound
pop
jno
mov
into
loop
mov
pop
mov
jecxz
or
mov
in
mov
cs
call
lcall
mov
dec
and
push
aam
popa
add
cmp
pop
mulb
cmp
cmp
xchg
push
popf
nop
mov
push
fiaddl
das
xchg
stc
and
mov
dec
push
cmp
sahf
das
in
popa
or
cmp
fists
inc
lret
fsts
sbb
out
and
adc
bound
out
loop
out
push
stos
pop
push
gs
imul
int3
inc
test
scas
test
and
xor
jecxz
jns
xchg
xor
push
fdivl
sub
mov
xlat
repz
out
sub
int3
and
pop
fnstcw
lret
or
lds
loope
add
cld
mov
fdiv
inc
add
mov
pusha
push
popl
cwtl
shll
pushf
xchg
sahf
sbb
lret
pop
push
bnd
in
test
pusha
jae
test
pop
testl
ror
push
popa
repnz
popf
popa
std
icebp
insl
jmp
inc
pop
outsb
and
movsl
or
mov
mov
fidivrs
aas
loopne
mov
lcall
out
dec
jb
pop
hlt
sti
push
pop
or
cld
cmc
and
jae
mov
test
adc
push
push
xchg
je
sub
arpl
adc
pop
arpl
stc
int
add
loop
sub
add
sbb
mov
push
cmc
jecxz
icebp
gs
pop
addr16
jle
iret
loop
movsb
aad
lods
arpl
jecxz
mov
dec
push
enter
push
sub
mov
dec
mov
or
push
movsl
inc
scas
xchg
push
xchg
dec
scas
repz
outsb
push
xchg
xor
xorb
mov
int3
dec
shll
scas
and
clc
cld
stos
ds
mov
inc
lock
jb
loop
lahf
xor
lods
lret
and
xchg
imul
fnstsw
test
std
jae
adc
imull
divl
cld
bound
dec
and
call
xor
out
or
adc
add
pop
sub
inc
add
fwait
push
in
mov
adc
xchg
leave
out
out
aam
pop
mov
mov
sub
push
addr16
pop
xor
dec
lret
mov
lret
cmc
xrelease
cmp
push
dec
pusha
cmc
imul
scas
aaa
mov
mov
rcr
insb
outsl
jl
dec
mov
aad
xor
sub
mov
call
data16
ss
imul
inc
dec
xchg
mov
aas
lcall
mov
pop
mov
lret
fwait
int
testb
jne
cmp
fwait
mov
daa
push
dec
outsl
xchg
out
cmp
leave
aas
fistl
es
shl
and
loopne
sahf
push
lret
adc
popf
dec
pop
add
test
outsl
and
mov
iret
push
jmp
es
stos
push
test
fdivp
in
adcb
mov
shll
mov
fwait
movsb
fnstenv
hlt
mov
mov
stos
insl
idiv
push
xchg
sub
pop
daa
dec
fcmovu
mov
loope
out
fadds
cmpsb
cmp
in
sbb
dec
movsb
and
in
and
jge
push
in
sbb
cli
and
incl
aas
push
push
sub
shll
push
lcall
cmpsl
adc
dec
aas
outsb
arpl
ljmp
clc
nop
pop
mov
cmp
movsl
sbbl
arpl
sub
mov
mov
mov
test
pop
pushf
adc
cmp
sub
js
mov
pop
into
fs
out
aaa
sbb
xchg
pop
inc
decb
orb
stos
cs
mov
cmp
xchg
or
fwait
pop
push
ficoml
adc
mov
push
stc
pop
insl
scas
ljmp
adc
jmp
and
ljmp
stos
stos
imul
lea
insb
nop
in
mov
mov
repnz
and
push
push
push
and
lcall
sub
inc
dec
or
jle
jecxz
lret
mov
loope
push
es
cmp
movsb
sub
cli
xor
cmp
daa
sbbl
cmp
mov
dec
aaa
jbe
mov
popa
xor
dec
fsubs
adc
add
je
int
pop
adc
les
add
out
inc
pusha
shll
movl
call
mov
add
movsb
sahf
addr16
xchg
rcrl
pushf
call
scas
ja
dec
jne
lods
or
sub
out
dec
test
pop
je
leave
je
xor
or
rcrl
xor
mov
inc
dec
pop
pop
mov
dec
out
lahf
dec
stos
adc
dec
sbb
sub
inc
xor
push
and
adc
jle
stos
frstor
pusha
movsb
pop
cmpsl
xchg
adc
sbbb
movsl
xor
adc
push
jg
iret
lcall
xor
push
stos
push
adc
dec
daa
mov
icebp
scas
in
fidivl
pusha
rorl
add
xor
add
mov
xor
and
sub
test
mov
dec
push
popa
inc
push
fwait
mov
addr16
cmp
daa
mov
stos
int
jle
inc
xchg
arpl
inc
push
add
icebp
neg
fsubs
data16
cmpl
bound
sub
sti
lods
pop
mov
push
jecxz
inc
sbb
and
sub
out
imul
ret
dec
insb
pop
inc
cli
push
mov
hlt
imul
xor
and
jecxz
ss
jo
subb
adc
jl
sti
imul
push
mov
test
adc
adc
out
and
fisubl
push
mov
adc
jle
mov
add
adc
sub
insb
orb
je
data16
in
jp
adc
sub
push
sub
in
imulb
jg
pop
lock
out
fwait
popf
lret
inc
fstps
imul
testb
xlat
scas
and
call
add
lea
in
andb
fnstsw
leave
es
adc
xor
pop
bound
stc
sbb
xor
mov
mov
adc
or
lret
ret
xor
xlat
xchg
jmp
jecxz
loope
sahf
lods
mov
pop
mov
cmpsb
sub
subl
mov
dec
inc
insl
adc
adc
lret
sub
mov
sub
jns
subl
and
or
cltd
pop
push
clc
jns
mov
stos
sub
shr
or
clc
pop
insl
dec
and
fs
mov
test
mov
dec
pushf
ss
jmp
daa
stos
mov
js
mov
or
sbb
leave
pusha
movl
push
dec
dec
push
rorb
xchg
jp
ficompl
jnp
int3
and
sbb
pop
stos
adc
sub
and
cmp
ret
mov
add
jg
es
call
mov
rolb
inc
scas
out
popa
xor
popf
data16
push
lahf
into
push
cld
pop
lret
jbe
xlat
jno
mov
jnp
cmp
out
inc
mov
outsl
lea
out
popf
ror
inc
and
imul
xor
dec
jle
imul
jecxz
push
mov
das
adc
outsl
mov
arpl
daa
fsub
mov
punpckhdq
or
bound
lahf
fidivl
insb
sbb
jle
bndldx
insb
cmp
cmp
lea
jmp
jecxz
outsl
sbb
loope
roll
decb
lds
xor
push
sub
test
fdiv
iret
inc
fimuls
rclb
sbb
imul
mov
push
push
pop
mov
mov
es
cmpl
jl
daa
sbb
add
mov
aaa
jbe
lahf
push
mov
andl
movsb
jl
jge
add
and
lret
lcall
repz
xchg
jae
hlt
punpckhwd
cmp
inc
out
mov
jnp
into
ficoml
ret
cmc
jae
pushf
hlt
jne
cmpsb
cmc
or
xlat
rcl
ficompl
ja
mov
xchg
cmp
push
lret
cmp
unpcklps
pop
imul
adc
jae
push
cmp
pop
mov
pusha
imul
mov
xchg
cmp
mov
dec
jmp
xor
dec
push
lret
icebp
sahf
pop
lock
ss
enter
cmpsb
ss
lea
mov
sub
ficomps
lcall
sahf
in
push
xchg
xor
cmp
das
js
jmp
mov
cmp
aad
mov
or
outsl
adc
popl
out
push
adc
jne
jmp
das
fistpl
loopne
mov
pop
hlt
sbb
in
and
sub
jae
pushf
cmp
into
push
jb
aaa
push
subb
aaa
nop
adc
sub
mov
repz
or
jge
repz
adc
jne
mov
mov
repnz
popa
dec
fnsave
movsb
mov
pushf
aaa
pop
daa
daa
insb
jns
fistl
xor
test
subl
push
xchg
mov
mov
xchg
lret
adc
xchg
add
out
push
scas
add
test
fcmovne
xchg
jmp
sub
and
sbb
mov
or
loopne
sbb
jmp
add
cli
or
ret
adc
rolb
dec
jmp
scas
jbe
in
mov
std
xchg
jmp
mov
push
adc
pop
push
stc
sbb
hlt
testb
jo
mov
nop
and
jnp
fdiv
sbb
jb
enter
add
inc
aam
inc
dec
jmp
leave
cmp
add
and
pop
inc
enter
mov
mov
fst
and
rcrb
pop
and
mov
inc
pop
sub
adc
and
push
inc
inc
out
nop
and
mov
pop
cmp
and
push
add
cmp
cmp
sbb
pop
inc
pop
rclb
ja
mov
sti
jl
or
mov
movsb
imul
xchg
mov
xor
sub
test
lods
and
cmpsb
rol
push
orb
and
xchg
arpl
xlat
in
movsb
movsb
sbb
adc
pop
pmaxsw
mov
jno
add
xchg
cli
mov
fistl
outsb
mov
outsl
loopne
movsb
aad
aad
jb
stos
dec
mov
je
jl
xchg
in
loop
lods
pop
bound
mov
sub
sbb
adcb
int3
decb
fcomps
stos
int3
xchg
jp
out
sub
iret
xor
mov
lsl
pop
faddp
lcall
imul
jg
scas
or
arpl
arpl
mov
dec
popa
sub
mov
lds
outsb
mov
sbb
inc
lahf
jle
mov
fisttpll
mov
je
jne
jo
cmp
xchg
mov
orl
sarl
push
es
jecxz
sub
in
pop
push
mov
dec
stc
or
cmp
push
lods
jno
dec
mov
xchg
in
imul
mov
data16
push
hlt
mov
jnp
lea
mov
jmp
xchg
pop
rcll
pop
jg
daa
or
sbb
jecxz
jnp
and
or
or
inc
aaa
sub
shll
out
push
mov
push
movsb
inc
or
mov
and
mov
or
data16
aad
inc
call
pop
or
mov
ret
push
mov
in
xor
adc
inc
jb
mov
mov
xchg
leave
cmp
lcall
aad
or
mov
out
pop
mov
fstps
nop
cmp
xchg
into
push
xlat
aas
les
adc
xor
add
call
lret
pop
cwtl
dec
pop
sub
jp
sysret
loopne
out
cmp
icebp
fcmovbe
in
insl
inc
mov
cli
out
push
mov
xchg
rolb
arpl
scas
mov
sub
add
mov
pop
mov
mov
fld
fwait
cwtl
inc
inc
iret
fsts
pop
insl
push
mov
decl
or
stos
js
sbb
leave
addb
sub
les
sbb
out
fs
ror
hlt
push
xchg
dec
lahf
fnsave
test
mov
or
sbb
sbb
pop
out
jns
scas
or
and
inc
lcall
das
xchg
fnstsw
iret
int3
lods
fstpt
aad
sti
jbe
xchg
stos
adc
lock
xchg
mov
imul
sbb
or
aas
xor
dec
sub
sbb
ret
lock
aas
lods
sbb
xchg
imull
dec
lret
and
mov
lods
daa
sub
or
inc
jle
test
scas
xor
push
cld
cmp
xchg
push
push
xor
dec
rorb
pop
sbb
insb
xchg
loopne
fwait
inc
fucom
adc
iret
idivb
pop
repz
add
ret
pusha
iret
mov
or
inc
inc
mov
adc
or
mov
sbb
out
push
push
in
adc
mov
xlat
or
pop
popf
mov
xor
test
mov
lods
sti
push
mov
lahf
lret
test
dec
cmpsb
outsl
dec
leave
insb
bound
and
ret
adc
leave
pop
cmp
into
jb
dec
mov
insl
flds
nop
pop
movsb
sub
push
cmp
mov
and
lods
ds
ficomps
iret
aam
gs
jge
cwtl
push
out
xor
arpl
insb
dec
xchg
and
inc
mov
scas
adc
aam
or
stos
inc
mov
stc
andl
sub
mov
outsb
lock
popa
jl
shlb
push
lcall
xor
in
lods
cli
sub
jb
stos
clc
bound
mov
jmp
shlb
std
mov
and
xchg
adc
and
inc
in
stos
or
jl
and
or
dec
or
test
jb
mov
daa
mov
int
and
sub
in
jmp
lret
aad
pop
aam
or
sbb
int3
push
pop
xchg
push
fisttps
aad
and
scas
loopne
clc
add
lahf
iret
push
and
pop
mov
or
push
jnp
aas
insb
xor
mov
stos
jmp
sbb
aam
icebp
mov
jno
cltd
into
or
inc
xchg
push
les
scas
mov
jo
push
cmc
mov
pop
jle
dec
popf
lock
push
dec
in
lahf
inc
sub
cmp
mov
in
mov
bnd
sbb
mov
add
or
jmp
and
pop
fists
lahf
test
lock
adc
pop
push
pushw
fimuls
push
movsl
divb
mov
jne
fiaddl
sbb
push
sti
pushf
dec
pop
xlat
pop
rcll
mov
iret
xlat
movsb
insl
push
lods
mov
icebp
mov
and
mulb
imul
out
mov
stc
sbb
jno
enter
outsb
push
insb
mov
shrb
lahf
ds
je
jb
xchg
xchg
sub
pop
lahf
cmp
repnz
xchg
sbb
mov
out
xor
push
cmpsb
loop
add
leave
add
lds
mov
sub
push
cmc
lock
pop
stc
xchg
inc
push
jecxz
iret
jge
mov
jp
mov
adc
push
pushf
cmp
lret
mov
outsb
inc
out
movsb
xchg
push
fs
into
mov
sbb
fstpt
mov
or
adc
mov
mov
pop
jmp
mov
cld
inc
push
mov
adc
xchg
stos
xchg
repnz
cmp
mov
pop
sbb
inc
es
cmp
shll
loopne
out
mov
cmpsl
xchg
and
jb
enter
sbb
inc
adc
andb
jecxz
popf
jnp
js
add
hlt
adc
popa
jg
pop
iret
cs
jo
in
add
cmp
adc
clc
jb
sti
ffree
cmp
in
insl
pop
sti
push
test
add
mov
nop
cltd
addl
outsl
jb
movsb
rcrl
test
inc
scas
mov
pop
jle
ret
push
xchg
pop
lcall
les
out
inc
outsl
cmp
mov
aaa
jno
loop
sub
aad
jp
ret
mov
sti
sub
out
mov
cwtl
jnp
fistl
cltd
in
mov
jg
jmp
sbb
inc
sub
jne
pusha
outsl
jbe
jbe
imul
pop
adc
adc
mov
add
lock
loopne
sub
imul
or
outsw
xchg
sarb
cmpsb
adc
out
std
inc
jb
aaa
icebp
fucom
jg
lods
push
or
sub
in
xchg
sbbb
dec
adc
and
cmp
inc
dec
xor
adc
add
xchg
or
sbbl
sbb
shrb
cld
pop
lods
in
mov
push
movl
xlat
mov
fldl
je
divl
and
jl
inc
mov
sbb
push
fucom
jmp
inc
mov
dec
and
enter
std
cmp
int
scas
repz
les
pop
xor
inc
pavgb
inc
xor
stos
push
ret
or
flds
ret
sti
push
sub
dec
rclb
outsl
sbb
fstl
mov
in
dec
xor
xchg
das
sub
cmp
notb
test
mov
pop
inc
or
inc
ljmp
mov
aam
push
enter
and
sbb
in
xor
lcall
mov
scas
gs
hlt
mov
out
mov
idivl
in
hlt
sbb
in
jnp
pop
inc
mov
adc
push
je
test
dec
stos
bound
mov
loope
cmp
data16
lds
inc
sub
xchg
mov
push
dec
addr16
leave
adc
jnp
pop
test
movsl
fnstcw
pusha
aas
arpl
out
lret
js
mov
xlat
adc
xor
and
fs
data16
xchg
cmp
push
inc
mov
push
fists
mov
cmpsl
pop
sahf
in
jle
int3
enter
push
js
jb
js
mov
sbb
cmp
int3
cld
xchg
loop
nopl
inc
in
mov
hlt
daa
xor
mov
daa
jno
mov
rcrl
rcrb
jl
xchg
mov
sbb
orb
adc
dec
jmp
mov
and
lret
mov
pop
out
in
cmp
cmp
shrb
push
adc
jo
inc
add
add
bound
scas
jnp
scas
and
ret
js
dec
stos
and
adc
inc
fsubp
testl
rcl
cmpsl
jnp
push
xchg
push
cmpsl
data16
pop
fstl
cmp
and
bound
and
push
inc
insl
mov
mov
sub
leave
das
add
je
add
sub
dec
rcrb
hlt
xlat
pop
jnp
mov
push
adc
shlb
mov
pop
push
stc
enter
lock
addr16
leave
lea
add
shrl
push
scas
push
imul
fimull
jg
or
insl
jb
mov
js
sbb
repnz
or
jo
std
int
pop
icebp
orl
jno
pop
lods
add
insl
orb
xchg
scas
sub
inc
cmpsl
push
add
lds
push
add
je
mov
ret
ret
push
clc
sbb
popl
push
jle
rclb
in
popa
pop
int
sub
cmp
pushf
dec
dec
jge
push
cmpsl
in
cmp
mov
mov
fisubrl
inc
dec
cmp
ret
jo
hlt
cmp
stos
por
sahf
mov
scas
jne
pop
cltd
addr16
or
sbb
push
cmpsl
aad
and
push
jae
bound
ret
int3
ret
mov
jbe
xchg
popf
pusha
gs
mov
dec
sahf
in
aad
rcll
jns
dec
je
scas
lret
sub
dec
fldl
jo
dec
push
mov
cmp
cmp
adc
data16
mov
bound
add
fnstcw
add
loopne
pushf
test
sti
fucomp
sbb
mov
mov
aad
cwtl
xchg
or
sarl
cltd
leave
sahf
kmovd
inc
cld
stc
push
pop
dec
test
xlat
negb
inc
add
dec
cmpsb
nop
test
sub
push
and
nop
add
add
mov
cltd
aaa
add
sti
adc
in
loop
and
xor
mov
xor
mov
hlt
jns
fscale
inc
inc
cmp
std
sub
or
shll
dec
fs
ret
imul
sbb
fisttpl
out
pusha
dec
push
sbb
xor
sub
mov
clc
lret
adc
sbb
sti
andps
iret
int
ljmp
mov
icebp
inc
jmp
pop
push
cmp
and
loopne
or
cmp
xchg
mov
add
dec
jno
sub
xchg
mov
repz
xor
inc
rclb
add
adc
push
xor
xchg
sbbb
jmp
mov
mov
outsl
in
mov
pushf
jecxz
idiv
jbe
fldcw
imul
push
fcompl
sbb
xor
or
push
call
inc
push
mov
scas
adc
in
sub
pusha
cmp
and
inc
pusha
or
imul
shrb
jecxz
dec
or
mov
fsubr
or
cmc
add
cmp
fdivrl
loope
cmp
gs
inc
sub
mov
cmp
push
pop
imul
repz
mov
das
inc
mulb
jbe
mov
xor
add
sub
rorb
loop
xchg
or
fwait
cld
icebp
dec
shlb
jl
push
sahf
mov
xchg
mov
pop
pop
mov
inc
es
or
sub
fs
rolb
push
xchg
leave
dec
jnp
ss
mov
cld
jbe
lods
mov
sbb
cmpsb
int
pushf
aaa
fdivrl
mov
nop
sbb
call
cmpsb
icebp
mov
push
cmp
fadds
push
mov
mov
jp
mov
les
push
push
mov
out
aam
add
xor
xor
mov
mov
dec
add
lds
ljmp
jp
pop
sub
add
arpl
pop
push
push
lods
out
push
push
mov
fstpl
sbb
push
mov
mov
mov
mov
stos
cmp
in
jmp
lret
bound
cmp
call
mov
loope
incb
cvtpi2ps
jno
roll
test
or
cmp
mov
sbb
pop
xchg
lea
bound
jge
outsb
loopne
mov
mov
loopne
inc
fdivs
jae
loope
adc
and
jns
ljmp
sub
add
in
push
ret
rcrl
imul
pop
push
cmp
xchg
dec
sub
and
clc
mov
inc
pop
push
int
ss
rcrl
dec
repnz
fadds
adc
aam
xchg
pop
out
jge
lods
push
test
outsl
and
sbb
pop
jg
int3
and
inc
mov
mov
aaa
cltd
adc
scas
mov
inc
ret
sbb
jl
stos
sbb
in
pop
jbe
movaps
cmp
push
mov
pop
add
popf
add
cmp
jo
or
push
mov
xchg
and
sbb
mov
shl
js
cmpsl
out
sbb
or
sub
insl
add
mov
fnsave
mov
lret
adc
test
cmp
mov
xor
loopne
dec
addr16
xchg
xor
pop
cmp
test
jmp
dec
jae
sbb
movsb
add
les
xor
test
push
add
mov
ja
cmp
rclb
xor
icebp
mov
add
lods
mov
into
adc
or
pusha
adc
push
push
add
out
push
inc
lahf
mov
outsb
xchg
cmp
jle
mov
rcrb
repnz
inc
lock
xor
xchg
or
roll
stos
pop
divb
add
into
cs
push
dec
jne
shl
push
xchg
arpl
xor
jae
push
fucom
ret
sti
adc
enter
push
fdivrl
outsb
dec
cmp
jo
les
cmp
xchg
andl
or
loope
jmp
je
jb
xor
lock
pop
push
cmp
clc
aaa
or
js
mov
pop
and
pop
push
test
jo
inc
adc
test
adc
dec
cmp
xlat
call
xchg
and
jmp
hlt
mov
popa
or
je
lods
inc
mov
cwtl
inc
inc
inc
mov
inc
imul
gs
fldl
int
lahf
mov
das
aam
dec
int
mov
ljmp
fdivs
out
push
mov
fwait
in
fstps
outsl
gs
mov
add
in
pop
jae
mov
repz
into
push
fwait
xchg
out
inc
enter
loopne
jo
jp
lret
mov
cmpl
in
sub
xlat
adc
sbb
in
daa
add
add
ret
jae
xchg
or
cmp
inc
imull
testl
shlb
jge
imul
das
and
push
mov
and
std
sbb
arpl
cmp
pop
lahf
nop
inc
out
or
mov
insl
sub
xor
adc
add
jns
xchg
add
nop
rorb
shr
mov
test
add
rol
mov
in
jge
mov
cmp
or
xor
shll
mov
push
cli
sar
aas
sub
mov
jo
sbb
in
out
out
hlt
mov
xor
push
jns
adc
push
std
rcrb
ret
pop
dec
gs
aad
dec
and
push
add
int
push
dec
push
sahf
cs
push
cli
mov
xchg
sbb
mov
push
xor
add
rcl
and
jp
fistpl
mov
gs
mull
fwait
enter
lods
adc
or
mov
psubusb
mov
fwait
fwait
pop
clc
fmuls
cwtl
call
cmpsb
jae
mov
aaa
and
dec
jmp
jae
sub
sub
sub
loopne
pop
cwtl
mov
mov
mov
xchg
leave
and
xchg
mov
test
iret
jnp
sub
mov
hlt
aam
lods
mov
test
and
and
mulb
push
dec
push
adc
add
cmpsl
dec
clc
stc
fistpll
mov
xchg
into
and
xchg
xchg
loope
jmp
mov
mov
ret
or
or
push
adc
cmpsl
jl
aam
scas
jns
repz
cld
decb
icebp
std
popa
scas
mov
pop
cld
gs
mov
inc
push
cmc
pop
pusha
mov
cmpsl
int3
push
sbb
gs
jns
jge
pop
daa
ficoml
fcompl
mov
mov
cmpsl
les
faddl
jno
mov
fildll
push
sub
jmp
int3
adc
jb
fldl
xor
adcl
scas
or
xor
pop
sub
adc
lds
or
jle
add
addr16
fcoml
lods
jl
xchg
cli
pop
jge
adc
mov
rorl
popa
sub
mov
lret
out
popa
aas
adc
aas
or
sub
sbb
add
push
insb
sub
test
scas
sub
xor
fucomi
mov
nop
xorl
fidivrl
jecxz
lcall
rep
mov
mov
sub
leave
popa
pop
arpl
push
jp
je
aad
gs
ret
mov
jmp
add
out
fmuls
lret
add
insl
mov
push
lock
mov
pop
loop
push
sub
test
stc
sub
jmp
xor
test
push
pop
stc
cmp
jg
and
negl
dec
mov
inc
ficomps
lods
jae
inc
aas
ss
jl
jle
out
mov
rol
dec
lahf
or
mov
mov
or
sarl
jl
cmp
jmp
or
mov
push
adcb
enter
mov
cmp
jle
rolb
jge
xor
jns
xor
aas
in
lahf
or
pushf
sbb
test
in
mov
sbbb
lock
stc
cmp
cmp
loop
push
or
out
mov
inc
jb
int3
xor
mov
push
mov
orl
insl
mov
stc
movsl
bound
sbb
fdivrl
jge
loope
sbb
stos
push
jnp
imul
and
adc
out
mov
outsb
jne
cwtl
ret
sub
or
jae
fcmovnu
cmpsl
jg
cld
pushf
mov
test
pop
adc
jle
int
cmpsl
push
std
arpl
sbb
sbb
ret
mov
push
jno
push
push
les
cmp
aad
jecxz
mov
sarl
mov
or
shll
and
mov
imul
xor
ja
xchg
and
dec
cli
mov
and
lods
jo
pop
loopne
and
call
cltd
add
cmpsb
in
cli
loop
aas
repz
and
rcrb
push
cmp
aas
xor
dec
dec
jge
mov
in
cmp
sub
fimuls
fistps
push
adc
and
lcall
mov
cmp
push
mov
ss
loope
and
xor
jb
adc
scas
sub
mov
stc
fwait
push
jge
decl
or
scas
cltd
insb
dec
scas
xchg
int
push
test
pop
xchg
loopne
pop
out
or
cmp
xchg
shl
jle
xchg
add
mov
sbb
push
add
dec
dec
add
jle
cmp
adc
nop
adc
mov
das
int3
mov
sub
xchg
mov
sub
xchg
int
mov
rcrl
mov
and
out
mov
fmul
sbb
jo
sub
js
cmpsl
insl
cwtl
pop
pop
test
push
mov
adc
pop
es
addb
lea
out
jle
out
sarl
gs
lret
mov
in
mov
inc
cmpsl
pushf
xchg
aad
aaa
mov
lock
add
daa
pop
loopne
mov
lea
mov
daa
std
mov
loope
shr
jmp
and
stos
roll
int3
push
inc
mov
push
inc
dec
dec
dec
repz
cmp
scas
in
pop
lods
addb
icebp
in
iret
gs
adc
cmp
xchg
leave
xor
addr16
rol
rorl
mov
enter
xchg
psubd
clc
incl
aad
dec
add
lret
mov
rcrb
mov
ljmp
xchg
lods
xchg
mov
push
and
add
or
xchg
push
aaa
cmc
pop
fimull
sbb
das
jno
stos
fsubr
or
jmp
and
out
push
popa
sub
mov
aaa
xlat
push
push
std
dec
aaa
mov
mov
dec
fisttpll
sti
mov
xchg
xor
outsl
xor
sbb
data16
cmp
out
sbb
jmp
out
and
cli
inc
rclb
jl
sti
outsb
and
inc
ret
pop
push
add
pop
cli
iret
js
aaa
inc
xor
and
imul
shl
ret
or
xor
push
ja
rcll
fisubrl
insw
push
pop
pop
call
cmp
add
and
fildl
sbb
and
notb
stc
xchg
cmp
movaps
mov
mov
scas
enter
mov
mov
cmpsb
jbe
faddl
jnp
mov
mov
lret
push
xor
push
test
or
xor
pop
addr16
jno
fisttps
adc
movsl
aam
mov
pop
and
insl
and
jecxz
jmp
mov
lds
push
ret
jg
pop
push
adc
push
in
orl
push
sub
sub
fidivs
inc
into
add
cltd
out
cmpsb
or
adc
sub
xchg
cmc
inc
jbe
repnz
mov
inc
mov
and
stos
dec
fistpl
sbb
and
clc
in
xchg
mov
in
mov
ljmp
aas
js
bound
loope
push
pop
mov
sub
jns
cmpsl
mov
adc
leave
nop
int3
or
cmpsl
cmp
imul
xchg
cld
rclb
mov
dec
inc
fldt
sub
fcmovnbe
adc
jne
adc
mov
sbb
jg
xlat
sbbl
pminsw
ss
lods
push
scas
popa
jno
jo
jl
jmp
mov
jbe
sar
call
scas
repnz
pop
xchg
inc
xor
adc
push
sbb
sub
sub
aad
ljmp
inc
xchg
sub
mov
mull
loope
std
xchg
sub
jno
shl
gs
or
sub
nop
mov
sub
sbb
pushf
scas
sbb
out
call
fwait
hlt
out
imulb
inc
mov
test
imul
negb
enter
fnstsw
push
imul
out
dec
inc
mov
push
jge
cmc
jl
insb
gs
js
cmp
push
and
movsb
mul
push
inc
xchg
inc
sub
testl
mov
leave
mov
int3
inc
scas
mov
icebp
adc
sbb
mov
push
push
sub
jnp
loopne
cwtl
jmp
mov
and
cltd
adcb
mov
jmp
cmc
rorl
cs
dec
jmp
jg
xchg
lods
inc
dec
xchg
or
clc
pusha
jb
fs
xchg
inc
loop
es
stos
outsl
mov
jnp
fwait
sbb
iret
inc
cli
jns
xor
sub
and
add
xorb
xlat
cmp
push
mov
inc
mov
cmpsl
or
or
dec
sub
ja
lret
out
lea
jo
loop
aaa
stos
xlat
in
imul
fnsave
mov
or
fwait
icebp
sbb
lock
imul
addl
cmp
push
cmp
cmp
enter
enter
popf
jb
shll
push
fnstenv
ja
imul
pop
loope
popf
insb
sbb
mov
push
rol
mov
pop
dec
sub
or
cwtl
popa
and
ss
jmp
mov
shr
inc
rclb
jnp
outsb
test
mov
cmp
test
push
das
outsb
pop
and
shl
mov
in
mov
je
icebp
xchg
test
cmpsb
pop
pop
call
add
jbe
dec
lret
cli
push
mov
movsl
outsw
pop
pop
ljmp
push
mov
lods
aaa
xchg
jne
loop
decl
movsb
mov
mov
jle
pop
mov
addr16
shlb
push
aas
cmpsl
cmpsb
aad
es
call
ds
xlat
sbb
inc
fnsave
pushf
inc
mov
cmpl
into
arpl
push
sub
xchg
sahf
mov
pop
pushf
movsl
lds
push
aam
jmp
jmp
sub
inc
or
mov
adc
data16
pop
lea
lahf
je
xchg
aad
pop
lret
fs
es
xor
xchg
mov
sahf
rcrb
add
and
setle
dec
jbe
mov
lds
inc
fmuls
fbld
mov
push
inc
push
inc
out
vmread
loope
lcall
bound
push
stc
outsl
pop
daa
lods
inc
imul
sbb
pop
fsubp
jmp
ss
pop
adc
jp
inc
lret
mov
pushf
cmp
jge
jl
or
or
jge
jae
sub
ljmp
ss
or
or
sbb
and
out
test
inc
lret
dec
lods
xor
pop
pop
fs
mov
std
loop
pop
fucomip
mov
arpl
icebp
mov
outsl
lcall
or
mull
daa
test
adc
std
js
pop
adc
stc
pop
into
add
sbb
jnp
pop
sahf
lcall
cmp
gs
lock
dec
popa
fwait
loopne
adc
mov
xchg
stos
es
scas
add
scas
aas
lods
or
xor
lret
sub
push
cmp
mov
scas
sbb
sub
jmp
jmp
inc
rolb
xchg
mov
out
inc
xchg
and
sub
test
push
pop
jmp
add
frstor
and
dec
fldenv
cmp
int3
int3
xor
and
push
sbb
or
insb
xchg
iret
xor
push
push
push
and
pop
cmc
enter
mov
pop
mov
sub
mov
pusha
ret
js
aad
in
or
shlb
and
mov
sbb
stos
rclb
mov
cmp
jb
dec
cmpsb
sahf
fadds
pusha
stos
inc
ss
add
add
es
cmp
inc
jne
mov
xor
inc
movsb
je
inc
xchg
pop
mov
inc
cmp
jp
rcll
adc
in
adc
mov
or
movl
inc
mov
cli
aam
cwtl
pop
xchg
icebp
rolb
faddp
in
push
jl
sbb
xor
shlb
insb
arpl
mov
sbb
cmc
push
mov
aad
int
stc
add
xor
scas
adc
or
push
dec
push
fstps
pop
aas
cmpsl
and
out
push
sti
pop
pop
inc
push
lock
cmc
lret
xlat
mov
pop
lar
out
inc
mov
mov
jl
adc
and
rol
sbb
pop
and
in
faddl
out
pop
sbb
sbb
test
mov
cs
out
lret
pop
add
xor
pop
mov
or
cld
sub
and
stos
andb
ret
pop
aam
sbb
lods
sub
push
xchg
push
dec
bound
test
or
arpl
scas
movsl
js
jne
jnp
outsl
jo
mov
insl
fwait
push
inc
xchg
jle
dec
xor
lret
pop
pop
leave
push
adc
call
pop
add
push
cmp
movsl
ljmp
sub
sub
cs
cmc
dec
sub
icebp
or
push
ds
stos
push
pop
lock
cmc
pop
out
jo
sub
xchg
in
aam
xchg
inc
and
mov
sbb
rcll
sub
sub
jno
popf
mov
test
mov
dec
out
aaa
pushf
movsl
pop
addr16
mov
add
js
push
addr16
mov
gs
xchg
mov
pusha
or
sar
jno
int
sbb
icebp
stc
adc
cmp
xchg
mov
test
jge
xlat
in
sub
into
loopne
push
aaa
xchg
jmp
push
inc
insl
imull
cmp
jecxz
fndisi(8087
rcrl
mov
push
and
pop
test
shr
movsl
data16
jne
inc
shl
dec
jb
out
pushf
and
punpckldq
shlb
inc
mov
cwtl
stos
mov
mov
test
mov
lret
insb
sbb
movsl
mov
jne
hlt
call
xchg
mov
fnstsw
bound
popf
inc
test
xchg
fstl
xchg
imul
dec
cmpsl
jecxz
sub
pop
cmc
inc
xlat
xchg
pushf
cmpsl
inc
jp
adcb
std
cli
sub
lods
jmp
pop
dec
lods
sarl
jo
and
pop
pop
test
insl
cld
les
nop
idivl
sbb
xchg
dec
pushf
pusha
stos
pop
adc
mov
and
ljmp
pop
pop
aaa
call
inc
jo
movsl
adc
stos
je
jo
lea
es
mov
cwtl
clc
mov
adc
push
daa
mov
out
cltd
out
gs
lcall
out
fsubrp
lcall
aaa
dec
sbb
mov
sbb
lret
cld
andb
clc
addl
jmp
mov
pop
mov
cltd
inc
ss
xchg
pop
mov
loope
lahf
std
shll
aam
adc
push
or
and
cld
xchg
stos
add
hlt
mov
jle
into
aad
leave
sub
rdtsc
lcall
out
lcall
arpl
pop
call
imul
xchg
and
mov
orl
ja
in
xchg
mov
aam
in
cmp
subb
jmp
xor
xor
mov
fmull
sub
andb
int3
iret
pop
pop
ljmp
daa
call
jp
repnz
lods
dec
dec
pop
push
jmp
rclb
cltd
push
jecxz
shlb
mov
cmpsl
ret
out
es
data16
add
adc
or
jl
sub
inc
pop
inc
shlb
xchg
imul
jbe
xorl
mov
mov
jecxz
test
insb
loope
fwait
pop
rolb
xor
loopne
adc
jbe
mov
jb
sub
xchg
ljmp
sbb
mov
and
fwait
push
mov
mov
cmpb
xlat
sub
and
sti
push
das
shll
out
test
add
mov
xor
adc
lock
outsb
jecxz
and
push
sub
push
mov
cmc
sti
pushf
sti
push
cmpb
jg
add
lds
and
jb
outsb
fucomi
ja
cmpsb
push
add
in
dec
and
mov
pop
cmpsl
dec
lret
push
enter
shll
xor
push
xchg
cmp
ret
sub
jb
xchg
outsb
gs
mov
fwait
xchg
push
ret
jbe
cmpsb
lret
in
leave
andl
mov
leave
mov
lret
cmpsl
jg
test
cmp
mov
or
das
jb
shr
dec
daa
test
int
cmp
mov
jo
dec
xchg
cmp
add
inc
repnz
stos
jecxz
push
dec
xchg
shl
lahf
inc
jp
fs
xor
call
mov
out
xor
mov
and
mov
je
int3
scas
popf
xor
mov
jne
xor
imul
sbb
lret
push
out
jle
sahf
outsb
cmp
cmp
and
in
fstl
ss
lcall
test
pusha
mov
push
push
ds
cmp
xchg
jge
test
add
jl
aaa
inc
fs
clc
adc
rcl
jno
xor
and
push
sub
sbb
icebp
pop
fisttpll
cltd
jbe
in
cmp
push
mov
gs
sub
cld
push
hlt
sbb
pop
mov
mov
enter
enter
popf
xchg
shr
push
idivl
cmpsl
jno
mov
loopne
mov
inc
dec
xchg
mov
xchg
aas
movsl
jp
xor
jle
xor
sbb
lock
popf
xchg
cwtl
jnp
aas
fwait
mov
pop
xchg
sbb
lret
cmp
fistpll
adc
push
sbb
nop
es
inc
mov
inc
jnp
js
xchg
lods
shrl
adc
pop
xor
jo
fnsave
lahf
xor
lahf
add
dec
sbb
mov
in
ror
dec
fwait
cmp
xchg
pop
jae
loope
rolb
jae
mov
lret
inc
xor
push
test
lcall
cmp
jg
test
or
sbb
xor
dec
loope
outsb
push
xchg
add
cmp
mov
inc
data16
ds
ret
add
xchg
sbb
bound
mov
fwait
dec
xor
xor
push
aad
and
fst
xchg
js
lds
ss
dec
xor
es
dec
or
xchg
cmp
adc
cmp
jnp
ret
in
jb
push
sti
and
outsl
or
dec
dec
mov
dec
xor
and
add
notb
pop
sbb
scas
stos
inc
mov
cmp
or
pushl
hlt
mov
and
outsl
sbb
movsl
pop
mov
lret
pop
ss
hlt
fstl
jno
mov
je
dec
jle
test
notl
imul
std
jae
adc
mov
inc
pop
pop
lea
inc
icebp
jmp
cmp
stc
rcrb
int
cmpsb
cmp
cmc
push
in
adc
inc
data16
sub
xchg
cmp
enter
rcr
daa
mov
adc
mov
fistl
adc
cmpb
jecxz
shll
adc
jne
hlt
sbb
inc
lahf
inc
add
fwait
cld
out
mov
mov
mov
mov
sar
mov
dec
xchg
xchg
xor
mov
pusha
inc
push
addr16
xorb
jmp
sub
cmp
std
imul
mov
jb
and
and
imul
cmp
fildl
in
out
cmp
scas
mov
xor
add
cmp
sub
add
xchg
push
nop
jle
pop
push
repz
jle
add
divb
wbinvd
aas
or
sarl
mov
cmp
test
lea
and
add
mov
es
push
cmp
and
icebp
fwait
int
shrb
int3
or
and
lods
jo
rcrl
jno
sub
jno
loopne
repz
rorl
inc
push
push
cmp
test
aad
cmp
into
xchg
mov
js
mov
in
loopne
loopne
jp
dec
or
mov
pop
shrl
sub
jno
mov
in
mov
xchg
lcall
pop
mov
adc
or
push
dec
in
lcall
imul
or
fisttps
test
xlat
data16
scas
lea
scas
and
xlat
pop
xchg
mov
movsb
hlt
ljmp
adc
or
pop
sbb
std
arpl
mov
mov
cld
scas
cmc
xchg
xlat
xchg
or
idivb
xchg
mov
fildl
inc
pop
add
inc
jecxz
inc
push
aaa
loop
frstor
sbb
iret
xchg
xchg
mov
sub
mov
fwait
into
pop
pop
xchg
into
lret
je
sub
lahf
out
dec
mov
push
xchg
in
fistpll
jo
jnp
xor
out
bnd
mov
jmp
add
xchg
inc
lcall
test
adc
cmp
xor
inc
std
jl
aas
mov
jbe
xchg
push
data16
ja
jbe
add
or
lods
int
xchg
in
fs
fwait
push
sbb
fprem
ret
cmpsb
test
mov
sub
cmp
sbb
pop
out
int3
cmp
mov
mov
xchg
daa
add
and
xor
jle
fisttps
sub
shl
ret
push
lahf
das
ja
in
ret
xor
pop
je
inc
rorl
push
add
outsb
imul
lock
aaa
testb
xchg
std
pop
dec
jmp
dec
pop
mov
or
push
cld
daa
rolb
jl
fcoml
sub
cli
xchg
xor
xchg
xchg
je
enter
sbbl
dec
jl
adc
inc
movsl
mov
xchg
mov
mov
pushf
pop
push
popa
and
jl
sti
add
mov
add
lods
and
mov
ds
xchg
mov
pop
jge
inc
xchg
data16
lods
rcrb
sub
jge
rolb
xchg
scas
dec
pop
cli
pop
lock
sbb
aad
jnp
jg
inc
arpl
cmp
add
scas
xchg
stc
mov
cmpsl
fwait
xchg
push
stc
sbb
fs
jmp
sub
mov
mov
imul
sub
xchg
out
testl
jp
add
mov
cmp
imul
or
xchg
add
out
in
lock
fsubrl
push
xchg
fwait
repz
sar
fidivrs
scas
movsb
xchg
addl
push
sub
shll
jno
nop
mov
adc
xor
mov
push
sbb
popa
jb
leave
push
das
out
push
mov
and
mov
push
fsubl
jmp
loopne
xchg
xchg
test
jl
gs
push
mov
mov
shll
sub
fldenv
mov
jb
xchg
sbb
lcall
cld
mov
and
or
enter
in
repz
es
test
ret
in
nop
lods
pop
xchg
xchg
xor
ret
sti
cmpsl
xor
aaa
pushf
push
rol
push
leave
ficompl
insb
jp
dec
lock
testl
xchg
sub
mov
dec
mov
adc
inc
or
adc
adc
scas
pop
or
out
pop
cmovns
or
push
mov
stos
push
outsb
push
adc
daa
mov
xchg
push
inc
mov
outsl
dec
aaa
dec
imul
mov
cs
xor
lock
call
mov
xor
xor
adc
and
sahf
loop
inc
mov
push
aaa
add
aam
aam
call
aas
mov
dec
xchg
mov
test
mov
stos
jo
les
mov
clc
and
mov
cmp
mov
mov
jns
hlt
loopne
and
fsubrl
mov
jp
out
jnp
pop
insb
rcll
xchg
lock
mov
xchg
jl
imul
sarl
es
repz
mov
inc
cmp
pop
sbb
mov
mov
mov
mov
xor
jp
mov
mov
mov
aad
mov
or
ljmp
adc
cltd
mov
cld
pop
sub
push
into
loop
sahf
fdivrl
popa
jns
push
jae
cmp
aaa
and
out
roll
aaa
lahf
lret
cwtl
scas
movsb
aam
add
outsl
cmpsl
xchg
daa
arpl
mov
xchg
xor
adc
xchg
xchg
mov
push
mov
jo,pt
cs
std
xchg
lock
adc
or
popf
xchg
mov
les
pushf
sub
mov
je
cmp
cmp
push
lahf
scas
pop
xchg
popf
outsb
data16
mov
stc
sbb
push
scas
cs
ljmp
bound
pop
subl
dec
jno
aas
pop
cs
bnd
or
mov
inc
ljmp
pop
stos
push
xor
fnstcw
into
add
lods
and
dec
or
inc
xor
out
insl
ss
testl
lods
mov
outsb
test
push
cs
push
xchg
cmpsl
sti
shr
pop
incb
mov
fimull
add
cld
adc
cmpsb
cmp
xor
cltd
cmpsl
cmp
ss
pop
neg
sahf
mov
ss
and
call
xor
mov
repnz
out
daa
outsb
inc
leave
cmp
js
inc
fimull
push
inc
xchg
lret
push
out
lds
push
es
insl
sbb
adc
enter
push
in
jmp
daa
mov
paddsw
push
push
mov
aad
dec
and
ja
and
test
inc
pop
add
inc
pop
test
dec
mov
loop
push
cmpb
add
sahf
add
bound
ret
push
mov
add
nop
scas
mov
inc
lahf
in
jge
mov
stos
rcr
cmp
test
imul
dec
shl
adc
movsl
mov
mov
hlt
xlat
pop
fcoml
inc
movsb
sbb
push
enter
xor
push
push
popf
dec
insl
dec
daa
ss
jge,pn
add
ja
icebp
sub
sarl
mov
push
fldt
push
icebp
mov
mov
mov
mov
in
xor
jno
xchg
push
xchg
push
and
fldenv
or
xor
add
test
jl
out
in
xor
inc
sub
bnd
stos
mov
push
out
ja
inc
shll
ret
sbb
mov
mov
fcmovb
test
xchg
jno
fidivl
xadd
mov
aaa
mov
dec
adc
ss
inc
rcrb
adc
xchg
pop
sub
mov
sbb
jno
and
test
sbb
jmp
adc
cli
mov
mov
test
mov
pop
pop
icebp
dec
xor
pop
and
imul
pop
dec
cmpl
mov
leave
mov
test
jbe
mov
pop
das
arpl
mov
addb
inc
pushf
cltd
movsb
std
lret
mov
addr16
nop
xor
addr16
fcomps
pop
imul
test
dec
pop
push
mov
cltd
add
sbb
sub
adc
lea
pop
fsub
push
mov
cmp
sub
cmp
push
in
imul
or
and
nop
mov
xchg
dec
inc
sahf
jbe
jo
jge
dec
sub
xchg
mov
xor
mov
pop
jecxz
cmp
stos
rolb
je
loop
dec
cltd
mov
dec
mov
shrb
filds
cmovl
notb
xchg
in
aas
sbb
test
jo
out
push
outsl
mov
push
cltd
dec
jmp
add
ja
mov
or
lret
push
sar
and
jnp
mov
loopne
sbb
lds
shlb
dec
mov
mov
sbb
dec
pop
and
xor
pusha
jo
sbb
iret
or
and
stos
mov
push
iret
int
inc
pop
out
adc
adc
dec
adc
mov
inc
add
adc
popa
popa
push
pushf
adcl
pavgw
mov
push
push
int
cmp
imul
adc
rolb
idivl
es
adc
mov
xor
add
scas
popf
inc
stos
push
dec
ja
ss
fsub
dec
and
xor
dec
push
pop
sbb
bound
pop
mov
insb
out
loope
inc
in
xchg
dec
mov
les
sti
add
push
jmp
sti
sarb
pop
rcrl
test
arpl
mov
adc
in
push
iret
mov
fsubrs
sub
int3
push
lret
or
sbb
fstl
cmp
cmp
xchg
lods
jp
call
mov
push
cmpsl
jle
inc
ror
in
mov
aaa
inc
jo
xchg
sbb
shll
movsb
xorl
rolb
fistl
sbb
xlat
repnz
cmp
or
jl
js
pushf
or
shlb
add
inc
test
xor
nop
scas
popa
jp
dec
les
sbb
fsts
push
daa
out
sbb
inc
jns
dec
aaa
sub
repnz
xor
adc
dec
cmp
push
adc
fists
stc
lahf
mov
xchg
mov
outsl
and
fidivs
push
inc
sbb
outsb
outsl
loope
insl
xchg
ret
test
clc
aad
lods
sub
pop
jg
lea
mov
leave
out
adc
dec
rorb
pop
mov
inc
mov
fsubrl
loope
mov
push
mov
mov
out
jbe
es
or
mov
or
push
or
cmpsl
nop
cwtd
mov
ror
mov
lds
pop
orl
test
fisttps
xor
sub
xor
aad
xlat
popa
dec
clc
jae
mov
lahf
push
in
xchg
jecxz
and
push
les
xchg
inc
negl
cmpsl
hlt
movl
xchg
dec
xchg
or
add
mov
out
mov
rcrb
jo
fidivrl
pop
lods
inc
push
inc
or
outsb
jbe
pop
pop
pop
jg
mov
and
popf
fadds
pop
test
add
ljmp
mov
das
and
push
cwtl
mov
aas
jecxz
outsl
dec
push
sub
lea
dec
pushf
push
adc
std
scas
pop
loop
sti
ss
xchg
addr16
daa
inc
loopne
pop
cmpsb
js
xor
insl
xor
insl
xchg
and
das
lret
mov
imul
push
out
jo
pop
jbe
pop
mov
or
ret
repnz
scas
or
in
repnz
bound
lahf
fwait
outsl
jl
sub
push
insl
jb
mov
iret
imul
or
inc
inc
pushf
sub
cltd
leave
lea
sbb
fsubs
cmpsl
pop
xchg
or
mov
movsl
sbb
mov
into
subb
dec
mov
data16
sbb
cmp
das
pop
mov
addb
test
mov
xchg
iret
outsl
es
lret
inc
adc
push
ret
mov
lret
hlt
std
or
cltd
push
sbbb
idiv
push
test
cwtl
iretw
adc
pop
std
call
ret
xlat
cwtl
cld
push
sub
imul
adc
in
push
cltd
xor
or
ret
cmp
push
fs
insb
xchg
pop
int
push
in
aas
movl
pop
add
inc
dec
push
lods
mov
outsb
xchg
inc
inc
add
pop
mov
and
cmc
iret
dec
mov
xlat
lcall
push
xlat
pop
sbb
mov
out
imul
cld
mov
jg
mov
and
xchg
jno
addl
imul
nop
arpl
addr16
and
adc
mov
fsubrs
jecxz
adc
ficoml
outsb
rcrl
lds
enter
xorl
jmp
popf
xchg
cltd
sub
jp
jae
jl
cli
mov
lods
lock
push
roll
pushf
cmp
movlps
stos
lret
mov
pop
sarl
cwtl
out
push
fstl
pop
insl
test
fsts
imul
push
out
std
adc
xchg
xor
push
bound
loopne
inc
int
loope
in
gs
ds
mov
ds
lcall
out
jle
xchg
pop
xchg
fcmovne
iret
sub
adc
xchg
pop
add
adc
leave
mov
test
push
repz
push
jmp
dec
mov
outsl
std
pop
shll
push
lret
jns
cmpsb
push
arpl
jg
fmul
or
std
pop
ss
lds
cmpsb
test
out
xchg
test
cmp
ljmp
aam
test
inc
sub
cmpsl
mov
add
cmp
outsb
out
ja
test
or
adc
jne
xor
fisttpl
aas
sub
mov
cltd
pusha
pop
cwtl
daa
fstpt
push
leave
cld
test
es
jl
out
mov
fidivrl
cmp
dec
mov
loopne
int3
andb
adc
jb
push
jle
es
add
fs
rolb
or
mov
inc
bound
int
mov
ljmp
xchg
mov
pop
sar
jecxz
cs
mov
lahf
jbe
daa
xor
sbb
sub
sbb
aam
mov
daa
aas
jmp
xchg
pop
cwtl
fdivrs
jecxz
cmpl
inc
mov
arpl
sub
jnp
xlat
jl
xchg
divb
jge
loope
and
pop
cmp
fcmovnu
mov
cli
std
in
lret
push
xor
xor
dec
bound
gs
das
jge
leave
loop
inc
out
mov
aad
jle
pop
xchg
pop
mov
push
stos
xchg
cmp
lea
mov
pusha
mov
add
add
notb
sbb
rcll
arpl
icebp
xchg
mov
fcompl
aad
inc
les
push
mov
test
mov
pop
ret
fs
repz
xchg
cli
mov
aad
pop
shlb
xor
add
sahf
mov
fists
iret
int3
dec
shrb
dec
test
mov
fisubs
les
jg
push
sub
loope
sbb
jno
push
fsubrs
movb
scas
jmp
cmp
scas
in
mov
jg
pop
cmp
mov
cmp
dec
lahf
pop
arpl
subl
cmp
xor
add
cmp
dec
cwtl
ds
inc
test
popa
loop
sub
inc
fsubs
stc
mov
mov
dec
inc
adc
mov
std
mov
into
cmp
pop
dec
fsubrs
push
aam
sti
mov
pop
fistpll
push
les
jp
mov
sti
add
sbb
and
outsb
sub
dec
dec
inc
xor
and
pop
adc
or
add
mov
xor
sub
sub
ret
insb
sarl
dec
pop
test
sub
adc
data16
enter
fisubrl
lret
adc
and
sarb
or
dec
dec
mov
cli
bound
pop
test
jo
test
in
xchg
test
sbb
pop
cmpsb
push
xor
xchg
sub
sub
dec
pop
aam
divl
inc
and
jbe
pop
insl
jnp
sbb
sbb
enter
movsl
aaa
loop
daa
int
or
dec
enter
or
pop
icebp
popa
mov
xor
adc
inc
out
and
pop
shlb
add
adc
xor
push
jp
jo
cmpsl
test
add
push
mov
mov
test
or
cmp
or
jge
add
gs
dec
ss
mov
pop
mov
dec
sub
fmuls
mov
test
data16
addb
inc
mov
in
leave
inc
cmpsl
ljmp
mov
ljmp
dec
cmp
inc
xor
or
sub
xchg
xchg
pop
mov
cltd
xor
sbb
push
cmp
inc
shll
les
pusha
and
cmpsb
jecxz
call
xchg
push
add
push
sahf
mov
mov
add
es
dec
cmp
inc
xchg
mov
daa
adc
mov
xchg
aad
fwait
orb
dec
sub
ret
mov
xchg
test
pop
jne
ror
testb
xchg
das
jmp
cmc
loop
fnstenv
das
inc
xor
bound
leave
mov
imul
movsb
sbb
xor
cltd
add
lock
aam
in
xchg
popa
push
aas
mov
lret
mov
xchg
cmp
insb
mov
jge
sbb
xlat
sub
push
adc
jg
into
cmp
dec
js
fldt
xchg
push
mov
xchg
std
adc
movb
jge
jns
mov
inc
shll
add
mov
ss
inc
push
sub
int3
mov
cmp
lods
ja
movsl
lea
test
addr16
mov
push
xor
cltd
inc
popa
pushf
xchg
adc
dec
jl
lods
imul
mov
jl
imulb
xchg
sub
mov
sbb
xor
and
jb
add
inc
or
hlt
push
inc
cmp
aad
jp
ret
arpl
mov
cmp
pusha
scas
lds
stos
mov
inc
pop
push
sub
add
push
scas
mov
shrl
mov
mov
jle
adc
mov
mulb
mov
jmp
ss
xchg
pop
scas
push
int
jbe
cmp
clc
jb
ret
lahf
mov
popa
in
mov
clc
popf
sbb
xchg
int
push
push
or
cld
stos
in
cltd
dec
xchg
mul
xor
stc
mov
push
fs
insl
dec
nop
clc
push
xchg
leave
imul
rorl
arpl
ja
in
aaa
push
mov
jecxz
push
jle
lods
jns
jecxz
xchg
and
arpl
push
jl
pushf
mov
les
cltd
icebp
loopne
pop
enter
lahf
mov
aaa
sub
xchg
xor
lahf
push
cmp
pop
push
sub
and
and
std
pop
mov
in
and
dec
jo
push
lahf
cwtl
rolb
popa
mov
push
test
xchg
jbe
arpl
lret
cmp
xor
dec
or
bound
inc
mov
mov
loope
adc
and
mov
lods
daa
adc
xchg
outsl
or
dec
cli
aam
pop
je
inc
fmul
daa
in
lock
test
adc
inc
adc
push
adc
xor
push
imul
clc
sbb
jl
and
push
adc
jnp
inc
and
imul
clc
add
dec
pop
mov
dec
inc
mov
sahf
sub
fs
jl
and
push
data16
add
std
fimull
push
mov
xor
push
out
adc
xchg
pop
adc
lods
mov
sbb
je
and
popa
mov
sbb
inc
gs
and
cmc
cmp
dec
cmpsl
and
mov
adc
and
cmc
push
cmp
daa
mov
xor
mov
jns
cmpsl
sub
dec
fiadds
push
rcrl
mov
sub
repz
add
fildll
sub
call
nop
inc
shlb
mov
popw
test
fdivrl
jne
sub
pop
lcall
sub
out
ret
in
int3
xor
inc
fs
cmp
stos
out
mov
lock
in
xor
sbb
adc
push
sub
enter
mov
in
inc
ja
add
jae
xchg
add
mov
push
insb
test
cltd
addr16
lahf
orb
pop
into
sahf
cmp
iret
fwait
call
ss
or
jns
inc
arpl
sbb
fcmovb
jbe
push
aaa
xor
fcmovnu
push
in
pushf
fcoml
test
mov
pop
sahf
xorps
fwait
jp
imul
jns
adc
popf
stos
popf
out
incl
gs
fisubs
and
ljmp
jb
jge
je
sahf
std
push
dec
stos
pop
loopne
ret
stc
mov
iret
pushf
pop
push
lahf
insl
or
push
sub
ja
mov
pushl
mov
xchg
sub
je
or
mov
fnstsw
test
andb
and
mov
pusha
rdmsr
mov
into
out
push
jge
pop
and
aas
fbld
dec
loopne
int
adc
and
ret
jmp
mov
cmp
and
js
mov
mov
in
inc
xor
dec
mov
inc
cs
aad
js
dec
out
inc
pop
xchg
xchg
add
inc
pushf
in
or
push
jmp
cmp
mov
or
pop
dec
sub
jbe
xor
jne
jge
repz
mov
push
divps
pop
es
test
cwtl
les
popf
pop
ficoms
fwait
dec
mov
cmc
xor
fs
jbe
mov
mov
sub
int3
mov
add
mov
mov
lods
in
mov
fldenv
dec
mov
enter
test
mov
mov
sbb
cs
mov
jo
xor
jmp
adc
xchg
repz
hlt
cmp
cmp
adcb
pop
in
mov
outsb
sbb
push
push
stc
insl
push
ficoms
push
push
aas
or
add
add
lock
popf
iret
int
imul
vxorps
dec
aas
int
pop
pop
cmp
mov
jns
sbbl
je
mov
jecxz
push
pop
notl
shll
mov
add
repz
cmp
ret
mov
dec
fcomps
mov
sbb
pop
add
inc
xchg
xor
outsl
outsl
and
fisubs
loope
or
lods
fwait
jge
mov
jbe
and
mov
inc
cltd
in
push
adc
shll
mov
mov
xchg
js
lret
xor
in
faddp
flds
push
test
mov
cmc
cmc
hlt
lahf
nop
scas
mov
jge
iret
in
popf
pop
adc
dec
loope
lock
hlt
out
jge
sbb
lea
std
sar
xor
pop
xchg
test
sub
out
jbe
fcmovnbe
pop
xor
jle
xchg
orb
push
or
push
outsb
shrl
jg
mov
cld
iret
stos
or
cmpsl
mov
mov
shl
lods
fsub
enter
out
or
or
daa
xchg
sub
lret
std
ss
mov
loope
imull
subl
add
test
mov
cli
dec
sub
dec
dec
clc
cmp
jecxz
xchg
pop
pushf
pop
mov
mov
or
ret
jg
adc
pop
xlat
addr16
xor
sbb
rorb
negl
fs
push
aas
adc
dec
rcrl
mov
es
or
lcall
sub
mov
dec
clc
or
sahf
add
mov
shll
movd
or
mov
es
pop
xor
sbb
or
in
jo
testl
mov
push
mov
rep
cmovs
aam
popa
xchg
cwtl
pop
cmpsl
push
mov
das
rolb
jmp
inc
push
add
inc
je
icebp
jmp
mov
and
or
orl
push
sahf
aam
push
cmpsb
popa
out
xchg
mov
xchg
cli
jnp
ds
lahf
mov
xchg
shll
aas
sbb
push
push
push
movsl
sub
xchg
sub
mov
popf
sbb
ds
ljmp
loope
adc
outsl
movsb
sti
sahf
inc
cmp
repnz
in
dec
in
xchg
aad
es
pmuludq
lea
pop
mov
sbb
cmp
cmp
pop
shl
pop
pop
enter
mov
pop
cltd
andl
adc
stos
push
inc
fildl
xchg
mov
subl
adc
je
and
mov
adc
cwtl
leave
in
ret
mov
aaa
gs
push
sbb
in
fstpl
movsb
push
push
and
imul
adc
sub
shll
sbb
aam
popf
js
paddsw
add
cmp
add
jecxz
iret
shll
orb
aam
adc
or
add
test
rcrb
scas
pop
mov
nop
dec
jmp
push
les
and
mov
pop
das
aas
add
stc
or
mov
mov
or
add
popf
in
aaa
rolb
fisubl
sub
dec
cwtl
outsl
xchg
and
scas
testb
push
cmp
xor
sub
mov
jbe
adc
push
inc
mov
imul
mov
mov
or
pop
jne
push
das
jbe
inc
ds
or
scas
in
mov
cld
sub
sbb
dec
pop
sub
cltd
mov
scas
shr
cltd
pop
in
adc
loopne
lods
jge
decb
ret
cmp
and
and
mov
add
loop
enter
fsubp
orb
scas
mov
add
cmc
mov
xor
lea
push
jb
adc
ljmp
sbb
das
xor
jns
sub
inc
sub
or
cmpl
mov
mov
es
push
mov
mov
stc
pop
sub
pop
mov
mov
jnp
mov
pop
mov
pusha
negb
scas
enter
jle
mov
insl
push
sbb
add
add
movsl
push
pop
es
mov
pop
sub
mov
and
popf
repz
mov
mov
test
jb
inc
inc
and
std
add
lods
je
in
mov
mov
or
dec
cwtl
ja
call
push
mov
inc
ret
adc
dec
inc
bound
mov
aaa
orl
adc
or
inc
aaa
add
movsl
pushw
fisttps
leave
loopne
sbb
mov
out
clc
sbb
pmaxub
pop
sub
push
dec
pop
dec
dec
adcb
pop
push
jp
jb
sbb
xchg
aas
sub
xor
rcrb
add
push
das
pushw
adcb
int
add
out
and
ss
fistpll
cmc
xor
pop
je
incl
loop
ja
or
das
rorb
push
mov
insb
xor
and
ljmp
adc
jl
lcall
push
popf
sbb
xor
mov
popa
xchg
sub
sahf
pusha
out
fisubs
xor
mov
in
cmp
push
inc
push
sbb
stos
xor
out
push
push
fnstcw
sub
jge
test
js
mov
lea
test
jne
cmp
mov
sbb
mov
mov
pop
push
push
mov
cltd
pop
fisttpll
fwait
push
or
js
mov
nop
enter
cmpsl
clc
pop
aas
mov
cltd
out
cli
or
insl
jno
scas
outsb
xchg
pop
cmc
lds
and
mov
jo
lods
or
out
repnz
lahf
lds
pushf
add
add
out
mov
dec
cmpsb
ljmp
pop
mov
adc
or
or
push
and
incb
sbb
loopne
cwtl
adc
mov
push
dec
pop
xchg
push
jbe
ds
push
mov
push
jp
pop
idivl
push
sub
call
or
jnp
cld
nop
shr
lahf
ret
pop
bound
arpl
fwait
mov
int3
mov
sbb
mov
jo
out
nop
cmp
test
add
repnz
adc
js
fadds
sbb
mov
test
sbb
mov
imul
xor
aam
mov
iret
inc
ja
lret
decl
jne
roll
pop
push
lock
push
repz
pop
popf
lcall
push
pop
loopne
lods
push
jae
lret
inc
idiv
aas
ljmp
out
cmpsl
data16
sbb
ss
add
out
xchg
mov
xchg
sub
gs
push
sub
push
pop
mov
movsl
mov
pusha
lock
push
inc
xchg
xchg
xlat
xor
fisubrl
mov
jns
sub
jg
xchg
das
mov
adc
sub
and
pop
mov
jge
pop
adc
in
or
test
xor
jge
mov
adc
scas
mov
imul
mov
sbb
movsl
icebp
adc
jb
mov
movsl
cwtl
xorl
adc
out
scas
pop
mov
shlb
shrb
aaa
fiadds
popl
and
je
adc
inc
or
imul
inc
jb
mov
fistl
mov
int
jmp
xor
dec
je
popa
aam
imul
sbb
xchg
mov
out
mov
les
in
jns
jnp
mov
aas
daa
mov
push
jno
mov
push
std
cmpsl
in
jne
sahf
mov
jl
lods
mov
outsl
fisubl
in
aad
inc
jg
jecxz
jo
cmp
pop
sbb
inc
in
aaa
adcl
pop
sbb
stos
sahf
jecxz
mov
loopne
cmp
xchg
nop
mov
jle
popf
rcr
into
cmp
rorl
dec
push
push
lock
test
cwtl
xchg
mov
aaa
lods
mov
cmp
out
out
push
lahf
clc
add
xchg
or
cmp
pand
stos
addl
rcr
jg
out
push
nop
and
pop
push
inc
jp
dec
mov
xchg
into
mov
es
mov
mov
jo
mov
mov
adc
data16
insl
stos
out
call
and
mov
dec
mov
test
inc
stos
shll
or
or
sbb
iret
shll
fcomp
aaa
inc
adc
fadds
daa
fadds
pop
mov
jnp
cs
sbb
insl
aaa
xor
add
jle
dec
add
lret
cmp
jmp
or
sbb
xchg
jmp
cld
cld
xor
add
pusha
test
pop
jbe
iret
aad
mov
repz
jmp
idivb
arpl
outsl
mov
push
lret
xchg
in
sahf
fisubrs
inc
lods
cmpsl
cltd
xchg
jnp
shrl
push
rolb
out
adc
insb
xchg
aad
fsts
mov
jo
andl
nop
sbb
add
leave
xlat
fimuls
xchg
int
sbb
std
fwait
dec
call
mov
dec
popa
mov
sbb
popf
jb
mov
lahf
sub
fcoms
or
ja
ret
cwtl
aam
lea
pushf
int3
add
repnz
mov
mov
mov
cltd
mov
fidivrs
sahf
sub
add
sbb
xlat
aas
sbb
cmc
adc
pop
leave
lret
sbb
ret
pop
popa
fcomps
inc
call
orl
sub
ljmp
mov
jl
in
jge
adc
in
js
sbb
insb
std
sub
cmpsb
filds
jl
orl
push
arpl
mov
es
aas
adc
lret
mov
push
cwtl
push
fisttps
pop
push
pop
jmp
push
dec
idiv
je
dec
xchg
adc
sbb
loop
or
inc
jb
inc
add
mov
iret
daa
jae
das
push
negb
cld
xchg
jbe
stos
xchg
cli
sub
sub
movsb
mov
out
in
sti
testb
jae
cmp
mov
mov
mov
cmp
dec
test
das
pop
push
and
aad
adc
and
pop
mov
push
and
lret
sbb
lcall
adc
jmp
scas
cmpsl
repz
dec
xchg
or
inc
push
popa
xchg
jne
int3
push
add
pop
enter
iret
jae
xlat
out
xor
lahf
cmp
adc
fucomi
push
mov
loope,pt
repz
rcl
insl
mov
hlt
xor
lahf
fucom
sbbb
pusha
mov
dec
xchg
and
arpl
xchg
out
mov
mov
inc
mov
dec
scas
nop
push
jno
add
xor
add
push
inc
sbb
test
dec
mov
ds
inc
movsl
lock
push
outsl
jecxz
jl
dec
loop
pop
mov
fcomp
pop
add
jge
lea
sub
mov
gs
out
loop
idiv
mov
lcall
ficomps
cmp
adc
lds
cmp
sub
inc
pop
xor
xor
fsts
mov
pusha
call
pusha
aad
dec
mov
xchg
lcall
orb
incb
mov
stos
dec
pop
in
daa
int
mov
mov
fldl2t
xor
test
pop
dec
lret
popf
int
adc
mov
and
pop
xchg
adcl
xor
imul
sbb
mov
lret
xchg
and
ja
notl
fst
mov
mov
mov
orl
mov
pop
popa
sbb
gs
add
sbb
out
push
mov
arpl
rclb
shlb
out
faddl
add
stos
ret
sbb
push
pop
and
ljmp
shll
add
push
into
out
pushf
push
int
repz
push
divps
cmp
test
out
push
mov
adc
push
dec
cs
pop
lods
ret
rclb
js
stos
adc
dec
jp
inc
pop
popa
shlb
into
jns
int3
add
aad
dec
lds
sub
cwtl
and
cmp
pop
mov
push
xor
pop
lret
push
pop
push
lock
mov
or
or
sub
cmpsl
test
xor
jno
ret
in
pop
int3
aam
sbb
inc
xchg
enter
cmp
mov
sahf
pop
shlb
xor
jmp
push
pop
mov
loopne
leave
movsl
sub
loop
sahf
aas
add
sub
sbb
cwtl
push
or
test
mov
sub
push
push
push
out
xor
adc
fsts
mov
pusha
adc
and
int
add
lahf
xor
sarl
pop
ficomps
shll
xor
test
aam
or
inc
ret
and
mov
notb
repz
sahf
push
jmp
adc
test
out
cmpsb
add
pop
mov
testb
repz
fisubrs
xlat
mov
in
or
cltd
adc
adc
hlt
sub
pop
push
lret
jae
fs
sbb
movsb
adc
das
sbb
cltd
mov
cmp
in
inc
push
lahf
mov
add
mov
shlb
pop
mov
add
shrl
mov
ja
fdivs
sbb
and
and
inc
sub
dec
popf
xor
jle
inc
pop
jae
pop
mov
repnz
add
cltd
pop
ficoms
and
fs
cs
jl
and
ficompl
sbb
and
pop
adc
or
testb
mov
outsb
pop
lea
dec
iret
add
icebp
pop
mov
cmp
mov
adc
pop
sahf
loop
inc
insl
add
pusha
cmp
sbbb
mov
cmp
mov
sub
sbb
test
sbb
stc
mov
mov
mov
mov
xchg
sub
mov
cmp
push
xchg
jg
xchg
stos
jnp
or
imul
sub
fbld
sarb
sbb
stos
shrl
xor
lret
mov
cmp
cmp
cmpsb
lea
jle
pop
inc
jne
mov
test
jbe
mov
sarb
stc
dec
movsl
std
jecxz
mov
and
lock
sbb
lcall
adc
adc
inc
mov
or
fists
inc
pop
cmc
pop
inc
pop
cmp
aas
shrl
cltd
jl
or
sbbl
lea
fstpt
mov
jecxz
pop
std
popf
orl
mov
adc
sub
pop
add
hlt
je,pn
imul
mov
out
push
adc
push
fdivs
mov
mov
adc
js
sbb
xchg
es
push
push
adc
addb
dec
cmp
nop
jge
in
arpl
mov
xchg
add
pusha
and
lret
sbb
lods
aad
andb
push
sub
push
cmpsb
xchg
shl
js
lods
jp
and
pop
xchg
in
in
int3
mov
mov
xchg
pusha
aas
push
adc
outsl
cmp
mov
cmp
shlb
pop
inc
hlt
jb
das
aad
push
and
xchg
jae
je
ds
daa
ljmp
les
mov
xchg
int3
jns
mov
cli
into
ret
push
rorl
aaa
jb
inc
fbld
faddl
fildl
pop
into
ljmp
adc
or
mov
xchg
test
shl
cmp
add
lock
shr
lahf
sub
decb
daa
sub
and
loop
popf
push
dec
inc
xchg
jge
daa
fidivs
or
int3
lods
aas
push
mov
inc
or
pop
test
arpl
dec
or
hlt
aad
and
repnz
pop
inc
hlt
arpl
ss
pop
adc
sbb
push
push
push
inc
pop
push
orb
inc
sahf
mov
sbb
mov
xchg
or
sub
rcrl
std
into
inc
insl
xor
mov
push
mov
mov
dec
stos
adc
sub
mov
mov
dec
sbb
aas
dec
shll
mov
or
movsl
testb
push
in
cmp
mov
adc
sbb
loope
stc
loope
pushf
sbb
in
in
xor
xor
ret
movsb
sar
cs
cwtl
jae
pop
add
in
or
bound
fsubrl
dec
lock
fs
mov
std
outsb
mov
stc
xchg
inc
flds
shl
dec
jl
cmpsb
popf
mov
cltd
sbb
roll
sbb
or
pop
inc
lret
sbb
adc
popf
dec
cmp
pop
mov
adc
adc
int3
lock
popl
shll
pop
mov
icebp
data16
andl
ds
sub
xor
cmpsb
jecxz
loop
mov
leave
cltd
dec
add
faddl
mov
xchg
sarb
int3
lock
or
dec
fisubs
or
and
pop
xchg
ret
daa
popa
clc
mov
hlt
sub
sub
das
popf
jmp
mov
outsl
mov
pop
shll
in
or
mov
je
fwait
sub
or
rclb
rcr
inc
mov
sbb
jge
cmp
or
xchg
adc
pop
mov
mov
fnstenv
jg
ja
inc
ljmp
aas
sbb
push
cmp
or
addr16
inc
sbb
cmp
iret
fsubrl
mov
push
popf
fs
adc
into
and
xorl
push
mov
sbb
cmc
shl
xlat
fstsw
rcl
cmp
mov
sub
cmp
push
mov
pop
stc
ds
mov
push
dec
sti
fbstp
jmp
xchg
xor
mov
inc
inc
inc
lods
repz
cmc
sbb
leave
push
xchg
fsubl
push
mov
inc
inc
sbb
dec
cwtl
xchg
jmp
jle
jo
lea
std
scas
mov
dec
fnsave
mov
or
out
int3
pop
shll
cmpb
es
push
mov
and
inc
lcall
or
inc
scas
loop
cld
sahf
in
rol
push
jg
mov
sbb
and
mov
gs
jo
mov
jbe
add
push
lods
inc
xor
add
cld
gs
inc
pop
add
push
sbb
xchg
mov
mov
mov
xchg
lahf
push
xor
popf
inc
cli
nop
and
in
mov
pushf
mov
xlat
or
sub
pop
inc
mov
and
movsl
repnz
test
out
sar
sbb
cmp
cmp
xchg
outsl
and
push
sahf
jge
fsubrs
mov
push
mov
jge
sub
sbb
and
lahf
cmp
sbb
repz
xor
lahf
sub
icebp
push
popa
sbb
push
out
inc
mov
cmp
jbe
push
mov
fwait
sbb
cmp
jmp
jo
aam
jnp
out
pop
xchg
mov
pop
mov
jns
mov
and
leave
push
push
add
rclb
arpl
xchg
mov
outsl
fcmovu
subb
adc
stc
nop
push
push
cmp
xchg
pop
shrb
inc
pop
cmpsb
imul
push
ret
aaa
orb
mov
or
inc
xchg
jae
xchg
dec
xor
jge
sbb
out
dec
mov
outsl
mov
pop
jne
bound
fs
pop
pop
add
mov
mov
xchg
push
xchg
sub
push
sti
insl
fidivs
loopne
dec
ss
fdivrs
adc
dec
inc
shlb
xor
mov
stc
cld
rcrl
jae
push
xor
movsl
pop
adc
jns
jmp
mov
ss
adc
lahf
neg
add
jmp
adc
loop
sbb
out
aam
pusha
mov
and
jecxz
ljmp
sti
das
movsl
mov
pop
pop
jmp
pop
ret
sbb
jb
int
push
sbb
das
clts
or
out
inc
or
mov
inc
fcomps
sbb
and
xchg
pop
dec
iret
ss
ja
pop
jo
push
mov
pop
or
mov
cmp
out
sbb
or
pop
das
lods
stos
sbb
pop
fldcw
sbb
xchg
scas
sarl
mov
push
push
xor
cmp
mov
adc
pop
push
or
in
fisttpl
mov
inc
cmp
mov
dec
dec
add
sbb
dec
sahf
lret
fadd
xchg
jb
shll
push
int
sbb
mov
les
addr16
pop
fcmovnb
sub
fcomip
insl
add
mov
int3
push
jl
mov
sub
cmc
enter
fmull
cs
cmp
jno
idivl
aam
mov
xchg
xor
aam
idivl
add
mov
push
les
enter
and
scas
lret
lods
hlt
stc
cwtl
sbb
xchg
rorb
imul
fidivrl
cmp
popa
cld
das
mov
adcb
lds
cmpsl
lds
les
iret
loope
xor
sbb
or
push
mov
and
jo
xchg
add
xchg
cmpsb
repz
and
lods
sub
or
inc
nop
insl
mov
or
ja
jp
test
pop
jp
in
sub
loop
xlat
lods
xchg
add
out
sub
stc
inc
mov
lea
pop
push
adc
aam
pop
mov
ss
cmpb
jle
xchg
pop
add
cltd
dec
loop
ss
sbb
loop
cmpsb
xor
mov
stos
cmp
int
dec
and
cld
sbb
pop
mov
inc
mov
push
call
or
sti
jbe
ret
jo
lcall
push
outsb
mov
dec
or
fnstenv
scas
cmpsb
fimuls
cltd
xor
cmpsl
ffree
test
ret
dec
adc
xrelease
cmp
loope
daa
in
je
push
xchg
dec
std
push
sbb
aaa
xchg
les
loop
std
out
jge
mov
adc
xchg
mov
sets
rcl
popa
push
xchg
f2xm1
outsb
dec
pop
mov
dec
cmc
stc
stc
sbb
xchg
mov
ds
mov
in
and
cltd
or
nop
ficoms
adc
pop
mov
aad
jne
scas
mov
mov
push
ret
nop
das
rcr
rcrb
pop
ret
pop
iret
add
xchg
adc
push
mov
testb
adc
adc
jo
faddl
cmpsb
mov
sbb
pop
adc
sbb
je
int3
xor
mov
lcall
push
jle
inc
sbb
sti
add
xchg
loop,pt
int3
repnz
add
les
jae
push
clc
outsl
pushf
jmp
lahf
or
sar
adc
icebp
mov
lods
shll
rorb
imul
subl
ljmp
adc
ljmp
aad
jo
mov
cld
js
push
xchg
sub
ja
xchg
push
jle
lods
adcl
cmpb
cmpsl
sub
dec
std
lods
jbe
dec
adc
pop
cmp
xchg
push
cld
cmp
dec
fistl
lock
cwtl
ds
or
dec
int
jb
mov
push
mov
aas
testl
repz
mov
jae
cltd
cwtl
in
leave
sbb
jbe
mov
lret
fstpl
pop
jne
xchg
stos
add
fildll
gs
cmp
nop
subb
pop
cmpsb
movsl
or
jne
push
loopew
jo
stos
dec
ja
and
push
and
xlat
fcom
xor
mov
push
in
sub
ret
push
ljmp
cmp
lahf
addr16
pop
sahf
ds
inc
and
add
int3
insb
mov
fs
mov
add
out
bound
das
add
fabs
pop
stos
outsl
inc
gs
lret
dec
dec
dec
out
adc
outsl
adc
or
pusha
mov
fldl2t
rcrb
andl
mov
scas
push
enter
out
test
xchg
in
lods
sub
pop
or
arpl
test
rclb
cmp
jle
fnsave
mov
mov
insl
dec
cmp
scas
sub
incb
cmp
fidivs
add
fistpl
and
dec
pushf
xchg
push
scas
mov
aaa
inc
adcl
push
dec
fildl
mov
cltd
ja
jg
mov
add
adc
mov
jno
mov
out
jmp
inc
mov
xchg
pop
jbe
pop
sbb
clc
sbb
pop
add
mov
jno,pt
add
sbb
rorl
fs
cmp
aaa
mov
ds
mov
mov
scas
subb
mov
sbb
or
pop
rorl
pop
pop
pop
pop
test
cmc
bound
lcall
push
adc
jg
shll
jl
mov
and
pushf
and
mov
jbe
push
jno
setnp
scas
mov
mov
mov
fdivrl
sbb
pushf
or
test
or
adc
jl
push
push
mulb
push
pop
mov
imul
lahf
loopne
out
cmp
loop
cmp
mov
jmp
test
ret
pop
adc
lret
mov
push
scas
xchg
xchg
mov
and
in
test
or
inc
xor
insb
aam
int
mov
out
nop
shrb
out
push
xchg
daa
sub
fnsave
sbb
push
or
jle
mov
lods
push
lgs
jbe
test
loopne,pt
xorl
insb
ja
and
fcomip
pop
jne
or
push
call
lret
jg
test
adc
jne
clc
popa
jnp
scas
inc
cmp
lret
pushf
mov
jo
push
mov
xor
mov
movl
pop
loop
cmpsl
sbb
lcall
hlt
ss
push
push
pop
dec
loopne
mov
jl
sbb
mov
mov
lret
xor
mov
cmc
pop
mov
jmp
xor
imul
inc
fnstenv
sub
mov
mov
sbb
inc
push
int3
push
lock
sbbb
inc
and
and
xor
es
sbb
movsb
add
adc
mov
rcll
mov
mov
xchg
mov
rol
push
add
jnp
sbb
jnp
jno
and
push
or
lret
xor
push
sub
gs
fistpll
dec
inc
mov
bound
sahf
push
int
xchg
ja
mov
and
ret
push
sbb
stos
inc
pop
shl
movsb
cltd
stc
cmp
add
cmp
cmp
and
iret
pushf
sbb
jnp
or
dec
data16
adc
xchg
cmpsl
ficoms
adc
push
cltd
or
push
outsb
daa
jle
popa
add
das
jno
test
das
es
inc
dec
std
sub
mov
pop
fisubl
pusha
fs
lret
sub
sub
scas
mov
roll
jecxz
or
ret
icebp
add
loop
out
mov
sbb
es
mov
leave
inc
pop
iret
adc
xchg
cmpsl
push
addr16
rcll
sahf
shll
in
leave
xchg
pop
ret
inc
sbb
sbb
or
mov
or
movsl
mov
lea
mov
mov
push
mov
lds
inc
sbb
adc
dec
aas
lea
and
call
bound
out
xor
jge
cmpsl
pop
mov
mov
push
jbe
clc
inc
ds
rcrb
ljmp
imul
pop
fldl
outsl
cltd
jnp
lds
rcrb
sbb
adcl
inc
hlt
es
aad
insl
fcoms
mov
jo
mov
push
mov
xchg
sub
frstor
lret
mov
fstl
adc
and
inc
stos
mov
pop
rcr
imul
fsubrl
inc
imulb
mov
xchg
and
sbb
lods
mov
adc
in
dec
push
dec
out
jbe
xchg
add
xchg
insb
pop
sarl
pushf
lahf
ss
lods
adc
popf
in
sahf
outsb
push
call
lcall
lret
and
rorl
mov
xor
dec
incb
inc
cmpsb
lea
mov
dec
xchg
cmpsl
jmp
notb
bnd
inc
cmp
sbb
loopne
jnp
xchg
lock
mov
jne
lea
inc
sahf
or
cmp
lods
pop
js
jecxz
ret
push
add
xchg
inc
mov
das
xchg
xlat
push
in
xchg
xchg
jp
dec
mov
jp
pop
push
das
movsb
loope
movsl
mov
sub
jns
rol
jmp
aad
xor
cmpl
icebp
stos
xor
sbbb
out
lock
popf
jmp
std
mov
cmp
push
ljmp
shlb
xorb
hlt
pop
push
or
popf
inc
add
xchg
fnstsw
jnp
rolb
inc
sbb
cli
movsb
xor
xchg
pop
push
adc
mov
outsl
xor
out
mov
incl
inc
push
add
and
and
notb
cld
movsl
jo
imul
pop
xchg
filds
or
jae
aam
nop
aaa
adc
and
or
jle
icebp
cld
loopne
arpl
mov
pop
flds
test
cmpsl
push
xor
jns
int
gs
pop
leave
ds
jne
mov
adc
insl
in
sub
cmpsl
ss
cmp
add
pop
lcall
lahf
add
stos
fmulp
imul
psrad
dec
sub
jae
mov
pop
mov
push
in
scas
dec
mov
xor
out
mov
sti
jae
fcmovu
testb
repnz
push
jns
das
mov
dec
xchg
popa
xor
xor
mov
rcr
push
xchg
les
fidivs
movsl
fcoms
repz
inc
cli
mov
ljmp
jmp
arpl
sbb
addr16
add
lds
shlb
mov
adc
nop
in
mov
xchg
or
pop
jno
mull
ja
mov
cwtl
pop
out
mov
cli
pop
clc
lods
add
xchg
popa
sbb
sub
shlb
push
jnp
jns
mov
mov
pop
inc
cmpsb
lds
aam
jmp
inc
and
dec
push
jne
hlt
sub
dec
rcrl
pop
jb
push
inc
and
sub
lods
imull
add
cmp
and
cltd
out
cmp
jle
lods
sahf
mov
mov
pushf
bnd
or
inc
mov
test
push
jecxz
dec
cmp
cltd
mov
movsb
je
mov
mov
inc
insl
movb
ss
mov
xchg
jbe
inc
mov
pop
jp
pop
sub
or
sbb
lcall
push
cltd
bound
mov
out
or
mov
push
lods
inc
add
push
std
xorb
nop
xor
lret
gs
mov
std
xchg
cs
inc
js
or
pop
in
add
idivl
dec
ss
data16
aaa
jge
xor
test
inc
push
push
test
lahf
adc
xchg
inc
stos
andl
iret
jecxz
jp
outsb
nop
movsb
pop
sahf
inc
sbb
sub
mov
scas
mov
mov
sahf
sub
shl
cwtl
repz
ja
or
mov
cmp
int
jp
movsb
daa
pushf
je
add
call
jp
nop
das
sbb
fs
ss
add
inc
mov
xor
xor
push
enter
sarb
mov
mov
inc
out
inc
scas
jl
loop
dec
outsl
lcall
outsl
xor
dec
or
xor
aad
or
and
ja
mul
gs
outsb
ja
aam
jp
sub
dec
sbb
scas
cwtl
data16
insl
push
xchg
or
mov
push
cli
dec
pop
outsl
aad
rcrb
arpl
clc
outsb
xchg
sbb
sbb
adc
jno
in
dec
jle
mov
add
mulb
pop
lcall
jbe
test
pop
es
pop
loope
pop
or
inc
sbb
xor
lea
leave
xchg
jmp
ljmp
push
inc
hlt
mov
aam
sbb
push
stos
mov
jmp
sarl
add
sarb
lahf
mov
shl
loope
inc
imul
or
cmp
pop
es
push
sbb
xor
lret
or
sub
cmp
mov
cli
xchg
xchg
xchg
ficoms
lea
mov
into
xor
add
icebp
pop
in
cmp
mov
sahf
addb
es
aad
push
mov
jecxz
jmp
inc
out
and
fimuls
sbb
aas
sbb
jle
lret
push
mov
in
cltd
and
jne
adc
jne
lea
out
mov
mov
out
mov
mulb
out
sbbb
ss
push
das
adc
xor
pushf
sub
cmp
pop
leave
sbb
out
stc
jbe
inc
cmp
push
icebp
xchg
int
sbb
outsb
stc
rcrb
cmp
mov
jns
mov
js
cmp
cmp
shll
sbb
daa
pop
push
inc
aam
and
sub
jo
mov
stos
mov
int
adc
imul
mov
xor
test
mov
sarb
push
cmp
lahf
add
or
jg
lds
lock
xchg
mulb
lahf
push
in
mov
adc
jns
or
inc
mov
mov
mov
dec
adc
into
cli
fists
insl
mov
lcall
ret
js
test
dec
xchg
fistps
or
xor
cmp
add
shlb
stos
dec
ret
and
dec
pop
pop
inc
mov
mov
dec
and
mov
dec
and
push
in
mov
outsl
lea
mov
movsb
fists
sub
pop
push
icebp
jns
add
mov
mov
lock
push
mov
push
inc
fdivl
aad
or
dec
mov
cmp
xchg
call
lods
xchg
mov
adc
bound
sub
mov
and
mov
nop
push
mov
xor
arpl
aam
sub
push
mov
push
leave
push
loopne
incl
loope
mov
movsb
mov
xchg
push
stos
dec
inc
int
xchg
lds
in
ret
or
rorb
neg
les
in
jne
das
or
fbstp
adc
xor
aam
sbb
xchg
mov
cmpsl
std
mov
scas
dec
pop
push
push
subl
xchg
sub
sbbb
mov
adc
jne
loopne
jbe
negl
jl
rep
inc
pop
adc
repz
cmpsl
adc
jl
inc
mov
ret
movb
sub
icebp
cltd
dec
fs
cltd
iret
lret
or
divl
ss
sub
sbb
push
int3
mov
mov
pop
in
and
mov
dec
adc
sti
lods
sbbl
pop
sbb
cmp
fwait
hlt
mov
push
push
mov
lret
push
in
ss
and
mov
fsubs
push
dec
inc
xchg
mov
sbb
pusha
into
testl
xchg
js
in
lahf
xor
xor
pop
inc
loop
insl
adc
lcall
adc
data16
jmp
aaa
lret
fldcw
jp
inc
mov
fildll
sub
lods
dec
cmpsb
lods
jmp
fucomi
std
cmp
in
add
imul
lock
inc
jecxz
in
xchg
test
ss
rep
sbb
sbb
jnp
xor
int
out
lock
aaa
shlb
shrd
bound
cmp
jno
cmp
pop
inc
jecxz
js
movsl
fdivs
shrb
xchg
cmp
out
cld
pop
mov
push
or
mov
inc
dec
mov
or
pop
adc
sbb
sub
sarl
xchg
push
add
sub
xor
es
dec
into
cwtl
loopne
and
stos
xchg
xchg
xor
ljmp
repz
gs
adc
or
loope
add
mov
push
loopne
lock
pusha
dec
outsl
mov
fistl
push
jge
push
xor
sbb
mov
fiadds
lcall
aaa
cmp
dec
or
jne
roll
lds
sbb
cmp
xchg
dec
loopne
push
dec
sbb
ficompl
xor
cmp
loopne
imul
and
lahf
cmpsl
inc
es
cltd
sarb
mov
inc
push
in
mov
popf
xchg
jle
fadd
test
mov
lcall
lock
sbbl
pusha
test
repnz
jge
movsb
push
jo
cmp
lahf
outsb
stos
leave
sub
dec
cmp
mov
shll
xor
sbb
and
test
jg
sar
cwtl
and
cmp
pop
aaa
or
pusha
in
pop
ret
stos
pop
imul
prefetcht1
jno
push
mov
dec
lods
dec
in
xor
and
bound
lahf
push
loopne
mov
mov
inc
and
sbb
in
push
pop
sbbb
std
mov
out
mov
not
push
pop
sbb
dec
and
outsb
jp
in
loop
mov
dec
fs
lods
mov
push
nop
inc
xor
sbb
xchg
mov
jbe
xor
js
jle
mov
push
push
and
scas
imul
hlt
jnp
or
scas
and
andb
add
or
adc
xchg
mov
adc
call
rorl
jo
push
mov
cwtl
testl
or
adcb
mov
pop
lret
daa
mov
push
loop
push
adc
mov
fldenv
stc
jl
call
xorb
cmpsb
es
lahf
xor
mov
ja
div
fs
stc
pop
enter
rcrl
push
sar
in
mov
repz
imul
add
adc
lock
xorb
sub
sub
sbb
lea
stos
sbb
arpl
fists
hlt
mov
je
lcall
lahf
or
outsl
daa
pushf
push
fidivl
push
call
icebp
ds
les
push
mov
or
lea
cmp
popa
push
sbb
fstpt
cmp
xchg
inc
cld
test
call
inc
insl
leave
daa
dec
mov
bound
pop
popa
popl
sbb
cmpsb
pop
mov
or
xor
subb
cmp
jns
mov
iret
mov
mov
inc
sub
push
xchg
out
mov
jge
arpl
add
aad
mov
inc
xor
stc
dec
xor
jecxz
push
lea
sub
mul
enter
xchg
fs
add
or
mov
scas
sbb
lahf
xchg
push
icebp
dec
mov
mov
in
and
cmp
nop
cmpsl
jne
mov
lahf
mov
test
mov
cli
and
xchg
jne
rcr
cli
mov
cwtl
out
jnp
mov
adcb
imul
or
mov
insb
std
push
jge
insb
mov
cmc
fs
add
xor
adc
mov
fadd
aam
out
inc
sub
daa
aaa
xor
mov
sub
adc
adc
push
xchg
das
pop
mov
mov
lods
xor
adc
mov
cli
sbb
push
or
jnp
pop
not
enter
jmp
in
enter
or
mov
js
pop
xchg
adc
sbb
js
sub
jmp
popf
pop
mov
push
inc
and
std
imul
aam
jne
in
int
mov
mov
dec
jmp
sub
pop
mov
push
incl
cmp
pop
sar
mov
xchg
mov
mov
push
and
cld
mov
jns
cld
js
or
out
ds
jmp
test
test
lods
adc
call
movsb
outsl
data16
xchg
fs
and
das
stc
into
int3
and
es
xor
dec
adc
rclb
pop
addr16
in
push
les
add
mov
xor
aam
je
mov
rdmsr
and
sbb
mov
repz
loop
mov
call
fwait
adc
test
mov
mov
int
xor
in
lds
jecxz
pop
jl
ljmp
divb
cltd
lea
jle
sub
inc
xor
mov
sahf
lds
into
in
pop
xchg
popf
movsb
inc
mov
push
xchg
lods
push
lea
pop
stos
shrb
pop
cld
hlt
in
cmpsl
push
cmp
xchg
or
mov
or
jecxz
jne
cmp
pop
sbb
lods
sub
pop
rcrb
cmpsl
push
decl
adc
je
popf
fucomi
lret
cli
cld
mov
jbe
adc
gs
enter
mov
push
push
int
dec
dec
or
cld
dec
mov
xor
pusha
cmp
dec
int3
lcall
push
jp
adc
dec
lcall
popa
or
cmp
ja
lods
ret
cmp
in
and
adc
mov
pushf
mov
mov
rorl
lret
sub
out
push
dec
push
out
push
cmpsl
push
ret
mov
add
js
add
xchg
push
scas
xor
cmc
dec
mov
pop
ret
ret
aas
push
mov
mov
imul
xlat
cmp
jmp
lret
in
int3
mov
imul
add
and
and
les
adc
ficompl
nop
lahf
dec
test
mov
mov
fmull
sbb
outsl
lods
cmpsb
outsl
cmc
nop
loop
pinsrw
pusha
adc
pushl
ja
xlat
sub
lret
dec
dec
jmp
das
daa
fnstenv
mov
push
xchg
push
adc
in
in
leave
popa
mov
cli
jg
cmpsb
nop
sbb
movsl
fistps
test
push
addb
sbb
adc
fwait
lods
lds
dec
xchg
mov
xchg
icebp
pop
js
in
sbb
cld
inc
push
stos
addr16
and
lock
dec
pop
lret
sbb
cltd
ds
pop
repnz
dec
fdivr
mov
jns
xor
adc
jecxz
xchg
mov
inc
iret
imull
lcall
test
stos
jmp
insb
or
mov
mov
int
mov
dec
adc
and
aas
or
inc
sub
mov
jl
xor
push
in
rcll
sub
xchg
xor
jns
xor
cmp
sbb
mov
adc
cmp
daa
iret
jmp
push
mov
dec
mov
push
xlat
xchg
scas
jb
aam
mov
in
xor
dec
mov
mov
cmp
mov
add
adc
push
testb
jbe
fnstsw
fwait
mov
shll
or
mov
dec
inc
fildl
or
cli
jmp
data16
cld
cltd
jmp
cmp
popf
nop
cmpsl
adc
adc
xor
sbb
loop
inc
cmp
fwait
mov
lds
out
dec
jne
data16
repz
cmp
imul
lret
xor
clc
out
out
cmc
insb
aaa
cmpsb
pop
mov
add
sub
outsb
shrl
fdivrl
mov
inc
xchg
push
sarl
sarl
mov
fmul
xor
push
imul
cmpsb
or
inc
cmp
lcall
fcoml
mov
pushf
fisubrl
stc
inc
cmp
xchg
pop
mov
xor
pop
imul
ljmp
cmp
and
sbb
mov
cmpsb
cmp
jle
push
inc
daa
movsl
leave
movb
pop
test
xchg
xchg
fscale
or
shlb
add
or
jg
mov
pop
or
and
cwtl
fwait
aaa
fcmovb
fstpl
and
mov
mov
inc
mov
lret
push
dec
jmp
cld
test
mov
cmp
mov
jnp
fcmovbe
mov
rclb
leave
adc
fistps
add
repz
in
push
cld
adc
ljmp
inc
adc
cmc
jno
pop
bound
sahf
lds
xchg
test
and
mov
inc
dec
push
fdivrs
xor
and
shrl
pusha
repz
clc
ja
testl
lahf
fistl
cmp
mov
test
dec
ret
jle
cmp
xchg
outsb
push
pop
sarl
stos
or
push
stc
jnp
xor
rcll
jge
cmc
mov
js
popf
or
insb
xor
push
jb
pop
adc
orps
cwtl
mov
sti
out
mov
movsb
rcll
outsl
cmc
into
mov
ret
std
psllq
ds
dec
mov
jg
pusha
adc
mov
inc
sarl
xchg
xor
mov
rcrl
jg
ss
jecxz
test
lea
inc
mov
jns
push
sbb
and
in
mov
out
test
scas
scas
and
adc
cld
jl
xchg
add
xlat
cs
pop
lcall
jbe
or
push
lcall
adc
and
push
xchg
push
sahf
daa
stos
sub
fwait
sub
sti
cltd
neg
push
push
xor
loope
jo
stos
sbb
xlat
jmp
xor
mov
outsl
lea
idivl
int3
insb
cs
and
or
mov
mov
jno
inc
stos
pop
jp
fdivr
je
mov
cwtl
push
lcall
adc
cmp
jp
sub
mov
loop
inc
pusha
je
lahf
jecxz
aad
and
imul
mov
rclb
shl
or
lods
xchg
jmp
pusha
jno
mov
fs
inc
jp
push
subb
pop
inc
lods
hlt
cmpsb
pop
add
sub
jecxz
leave
test
adc
stos
pusha
sub
inc
xor
push
frstor
xchg
pushf
loope
popa
aaa
jmp
ret
inc
ds
adc
inc
cmp
cltd
mov
fdivs
jecxz
call
or
push
push
sti
cwtl
lods
lds
mov
push
rolb
jo
jno
adc
mov
int3
sbb
clc
cmp
xchg
and
sahf
shll
and
pop
inc
pop
sbb
cmpsb
inc
insl
leave
adc
fucomip
jl
cmp
cmpsl
enter
mov
mov
xor
sub
jg
push
fstp
mov
int
or
xchg
cmp
sahf
inc
repz
sub
popf
int
mov
mov
add
xor
fidivrl
mov
in
and
push
mov
dec
mov
adc
sub
std
or
fldenv
and
imull
mov
es
cmp
pop
mov
mov
shrl
xchg
inc
daa
int3
rolb
pop
das
mov
adc
pop
jp
inc
adc
sbb
stos
hlt
outsb
push
mov
mov
mov
cmp
mov
lods
pop
inc
cmp
clc
jmp
xor
adc
lock
aam
cmp
sub
mov
jp
leave
outsb
icebp
cmp
sbb
test
push
jns
xor
jae
inc
fsubrs
es
in
sbb
fcmovb
leave
adcl
mov
mov
inc
mov
pop
pusha
lea
shll
outsb
jno
push
rcrb
inc
mov
sub
sbb
mov
push
add
push
inc
xchg
int3
sub
sbb
out
xor
adc
pusha
loope
lcall
push
popf
jo
pushf
cwtl
sar
jge
data16
pushl
push
xor
xchg
aas
cltd
xor
int
aaa
repnz
mov
sub
push
das
xor
jl
fadds
mov
repz
adcb
xor
cld
cmp
out
pop
cmp
jne
in
mov
push
cmp
inc
in
ljmp
imul
dec
cmp
orb
and
sub
in
pop
testl
mov
ljmp
dec
sub
inc
and
sahf
pushf
mov
mov
or
sti
repz
mov
xor
pop
pop
jnp
jl
xlat
mov
js
test
aad
push
loope
sahf
pop
fidivrs
scas
test
xlat
xor
push
aas
stc
xor
xor
pop
pusha
into
fiaddl
cld
lods
stos
inc
int
fdivrs
jns
into
ret
nop
add
add
push
mov
jg
cli
and
shll
cwtl
shlb
xlat
push
jb
or
pop
pop
cmp
mov
outsb
xor
cmc
dec
jnp
lret
cwtl
push
adc
lcall
xchg
adc
push
in
sti
mov
or
adc
enter
sar
dec
mov
enter
xchg
xchg
mov
jmp
xchg
sbb
loopne
loop
sarb
fcmovnbe
xchg
ret
lods
stc
ljmp
sahf
mov
xchg
push
dec
and
cmpsl
inc
nop
fs
sti
sbb
lea
jecxz
jne
icebp
add
or
repnz
push
movsl
xor
xor
fsubrp
add
xor
xchg
cmp
cltd
mov
sbb
aad
decb
xchg
inc
pop
xchg
shrl
dec
fwait
out
adc
pop
adc
popa
fisttpl
lahf
cmp
add
fisttpll
push
fwait
ljmp
dec
dec
dec
xchg
int3
shl
cltd
mov
insl
fimull
sub
dec
push
and
iret
xchg
mov
mov
xchg
dec
sub
jmp
repnz
stc
fdivl
lock
sbb
inc
lcall
in
cmpsl
andl
fneni(8087
sbb
imul
jg
iret
xchg
scas
loopne
push
int
cmpsb
mov
and
sub
ret
xchg
cli
rcrl
rcrb
xor
inc
stos
iret
add
sub
pop
pushf
call
cmpsb
loope
add
addr16
xlat
push
inc
or
sbb
cmc
xchg
rcrl
fstps
sub
push
insb
cmp
add
cli
and
lahf
dec
xor
cmp
sub
pop
daa
mov
sbb
dec
fwait
dec
mov
pop
mov
and
andl
test
add
jl
dec
mov
mov
cmpsb
mov
inc
sbb
cmc
push
xor
mov
or
mov
es
pop
cs
daa
xchg
cmp
enter
sbb
adc
test
aas
dec
rcll
mov
mov
sbb
and
inc
loope
push
add
sub
insb
xchg
lock
mov
jmp
imulb
sbb
jo
lock
pushf
in
mov
xchg
sub
movsl
mov
dec
call
pushf
out
dec
mov
or
pusha
mov
dec
push
push
fdivs
cmc
and
lods
int3
pop
or
aam
push
cs
shl
dec
lods
cltd
xchg
pop
cmp
inc
adc
jno
movsb
jp
bound
lods
lea
jo
and
sub
repnz
inc
stc
popa
shlb
sbb
ljmp
jbe
incl
adc
adc
int
mov
gs
sub
fidivl
cmp
jl
mov
or
cmp
es
lock
adc
js
stos
insl
mov
and
test
lock
les
hlt
sbb
dec
mov
xchg
divl
mov
gs
push
jno
daa
rorb
aad
inc
adc
es
push
fnsave
push
outsb
inc
cmp
jns
jge
in
sub
jbe
and
popa
or
cmp
test
mov
pop
inc
mov
cs
pop
xor
movsl
leave
sbb
fsubl
lcall
iret
int
std
jbe
push
aas
nop
in
pop
dec
mov
add
and
mov
add
jg
push
push
insl
fcoml
in
inc
sarb
jo
cmp
shlb
repnz
pop
pushf
mov
lea
sahf
or
test
push
mov
sub
ficoms
pop
imul
mov
arpl
jno
jnp
jno
lods
ds
andb
dec
in
fwait
sti
xchg
std
xchg
pop
pop
cld
adc
movaps
js
js
cltd
mov
mov
cmp
adc
pop
mov
and
mov
pushf
sub
aam
sub
add
mov
gs
pusha
es
scas
push
mov
pop
fistpll
inc
mov
adcl
or
aam
stc
les
and
sub
ret
add
test
ja,pt
xlat
xor
ljmp
insb
xor
or
adc
jge
int
loopne
icebp
push
outsb
lds
sbb
mov
push
mov
stos
add
int3
sub
push
iret
mov
mov
rolb
mov
cmp
mov
dec
jle
repz
aaa
add
out
nop
mov
jg
mov
jae
cwtl
fiaddl
mov
daa
fbstp
push
mov
xor
scas
mov
enter
xchg
xchg
dec
mov
in
pop
mov
popf
jge
or
cmp
hlt
adc
call
mov
sbb
push
add
cmp
pop
sahf
and
or
call
popf
and
and
push
inc
pop
push
test
adc
cmp
mov
enter
push
pop
and
mov
pop
in
jnp
lahf
jbe
mov
popw
sbb
mov
add
sti
hlt
out
add
pop
mov
add
push
leave
stos
mov
jae
xchg
hlt
sbb
out
xchg
lods
mov
sub
adc
lret
loopne
cmp
adc
popa
sbb
adc
xchg
xchg
imulb
nop
xchg
data16
enter
mov
lcall
pop
mov
shll
int
mov
sub
mov
popf
aaa
out
fcoms
mov
lods
or
inc
cmp
mov
fwait
lea
stos
mov
lods
lcall
cmp
ret
jp
ret
xor
mov
mov
dec
orb
mov
rcl
pop
mov
fistps
mov
add
mov
cmp
in
cmp
rorl
fadds
iret
sbb
pop
push
xchg
sub
pop
or
pusha
sbb
or
outsb
ret
pushf
push
mov
aaa
xchg
jl
bound
mov
loop
push
add
xlat
adc
xor
mov
addb
or
mov
mov
dec
mov
pop
repz
popf
add
dec
xor
fsts
inc
pop
ljmp
pop
sbb
jge
int3
adc
push
inc
insb
jl
imulb
andl
pop
sub
lock
daa
lock
adc
and
or
pop
inc
sbb
ret
mov
add
ds
jle
mov
or
adc
stos
sbb
imul
pop
mov
cmpsb
fwait
push
push
data16
push
fildl
push
mov
and
dec
push
and
sarb
push
mov
or
and
sti
inc
or
sbb
psubsw
mov
xchg
add
into
test
push
add
cmpsb
or
jg
icebp
and
cwtl
adc
push
fcomps
add
repnz
aam
mov
jnp
mov
sbb
dec
mov
outsl
mov
mov
and
clc
mov
decl
xor
add
lods
ja
cld
ss
inc
pop
xor
inc
cmp
mov
fnsave
shrl
repnz
andl
loop
jge
test
jl
push
decl
loopne
xchg
inc
xor
roll
xor
inc
fs
add
scas
push
add
mov
mov
jnp
jno
mov
shl
sbb
jb
es
sub
sbb
outsb
outsb
imul
xchg
sbb
repz
pop
dec
mov
adc
mov
out
mov
or
hlt
les
adcl
lea
add
aad
mov
jmp
out
fisubs
inc
ret
cmp
mov
mov
xor
mov
cli
mov
roll
out
imul
bts
adc
rolb
jp
pop
jecxz
add
cmpl
mov
jmp
xor
fsubrs
pop
dec
outsb
clc
aaa
out
mov
bound
loop
fldl
xor
mov
cwtl
xor
xorl
xor
mov
or
sarb
ret
xchg
addr16
lea
push
test
sbb
cmpsl
mov
or
xor
out
mov
ret
bound
sbb
pop
sub
das
jge
addr16
xchg
pop
fdivrs
data16
test
mov
fisubs
inc
xor
out
mov
xor
pop
rcrl
sahf
clc
int3
ficoml
or
call
pushf
rcll
dec
icebp
inc
outsl
out
mov
ret
lret
or
ficomps
mov
xchg
cmpsl
or
cmpsl
cmp
jb
int3
aaa
sub
maxps
dec
cmp
inc
push
and
inc
les
pushf
xchg
scas
mov
inc
roll
lock
jle
sub
outsb
jae
mov
subb
cs
rcrb
js
mov
test
insb
lret
insb
das
in
into
push
pop
ds
pop
jb
jg
add
loope
jmp
popf
lods
add
int3
ret
int
out
cmp
push
cltd
push
in
mov
xor
mov
xor
bound
xchg
loope
out
xchg
sbb
ds
test
mov
push
push
and
jmp
sbb
lcall
fs
inc
imul
add
leave
repz
icebp
js
xchg
enter
fs
jecxz
and
mov
mov
fmull
fisubl
dec
pop
mov
mov
les
in
ss
jp
push
loope
sub
aaa
jle
scas
add
and
pop
stc
cltd
dec
add
sbb
cmp
pop
jge
fsubrp
mov
stc
sbb
adc
mov
fnsave
int
jmp
cmp
in
cli
pop
push
xchg
decb
inc
mov
loop
jl
stc
ljmp
ss
mov
inc
sqrtps
sub
idivl
sub
xchg
mov
jb
mov
dec
pop
pop
lret
pop
test
mov
jecxz
xchg
repnz
jae
arpl
pop
lock
xor
mov
clc
add
je
ljmp
mov
test
cli
cmp
lcall
sbbb
lahf
lret
movsl
ret
pop
jecxz
push
adc
jnp
insb
test
mov
es
movsb
mov
xchg
dec
addr16
daa
or
xlat
lock
sbb
loop
idiv
test
movsb
push
adc
popa
hlt
mov
pop
xor
mov
cs
sub
mov
imul
mov
sbbb
clc
repnz
adc
mov
dec
inc
insb
sbb
dec
movsb
add
scas
dec
xchg
mov
adc
mov
aas
outsb
xor
shll
cmpsb
and
notb
mov
jecxz
movsb
divl
hlt
test
adc
loopne
in
mov
push
cmp
mov
enter
cld
cmp
sbb
pop
aad
sahf
xor
dec
movsl
movsb
xchg
xchg
dec
popa
pop
xor
add
xchg
popf
jg
pushf
dec
lret
pop
pop
pop
or
dec
jb
push
lahf
popf
jl
testb
sub
in
cmp
pop
push
push
or
call
popf
ds
dec
pop
xor
pop
jecxz
mov
mov
or
dec
insl
xchg
lret
cli
pop
cs
xor
pop
sbbb
nop
adc
push
das
sub
push
int3
in
icebp
dec
jns
jl
stc
rolb
aaa
inc
add
inc
adc
fisubl
fwait
dec
sub
inc
std
lret
sub
or
sbb
mov
jle
js
jg
enter
fs
lods
pop
sbb
notl
cmp
bound
and
ljmp
jmp
pushf
mov
fwait
xchg
pop
psubb
scas
data16
mov
popa
scas
jge
pop
aas
iret
mov
push
mov
xchg
enter
pop
idiv
xchg
outsb
adc
inc
xchg
clc
movsl
sahf
fnstsw
pop
push
inc
lcall
les
fistpll
dec
push
and
es
test
inc
sbb
nop
out
lret
adc
test
cltd
dec
popf
stos
and
push
xlat
pusha
push
aam
dec
inc
jbe
add
arpl
inc
sahf
lods
ljmp
sbb
and
add
push
stos
popf
addr16
add
stc
jns
push
popa
loope
lret
out
popf
mov
jp
inc
mov
fadds
ja
fs
cwtl
mov
dec
jb
cmp
pop
ljmp
dec
mov
rclb
sub
iret
xor
sbb
pop
mov
lcall
enter
jecxz
popa
fmul
adc
pop
fisubrl
das
sbb
sbb
jb
lcall
fisubrs
pop
sub
loopne
mov
mov
xor
mov
push
ja
mov
adc
adc
mov
rcrl
sbb
subb
mulb
lods
inc
sbb
pop
clc
testb
je
notb
pop
mov
push
sub
cmp
sbb
jg
jo
outsl
out
stos
mov
push
fdivrp
imul
inc
test
enter
shrl
test
ljmp
enter
add
adcb
stos
in
mov
insl
mov
popf
in
xchg
in
iret
or
fmull
push
add
sarb
or
xor
xor
inc
adc
fs
pop
mov
pop
dec
ljmp
sub
out
shlb
cmp
push
pop
jle
and
je
in
cwtl
fmull
cmc
pop
sti
xchg
addl
inc
lods
pop
ja
std
rolb
add
sahf
cwtl
mov
and
shrb
pop
test
and
and
add
push
sub
sbb
hlt
pop
aad
stos
out
stos
pop
rorb
xlat
out
daa
pop
inc
pop
int3
dec
inc
andb
jp
pusha
test
adc
mov
push
xor
or
or
sbb
mov
aam
sbb
pop
or
popa
or
fwait
outsl
push
push
mov
lods
cmp
jb
sahf
ja
dec
mov
loopne
mov
mov
sub
fsub
orb
push
sahf
iret
dec
loopne
stos
xchg
sub
add
inc
and
cli
adc
sbb
add
je
fstp
pop
pop
sbb
add
and
clc
pop
loop
push
mov
or
xchg
mov
jg
add
xchg
cmp
iret
popa
push
sub
in
enter
lcall
jae
mov
mov
or
sbb
mov
mov
xchg
sub
ret
aad
jne
jecxz
popf
test
adc
sarb
jge,pn
push
cli
testb
dec
call
mov
rorl
bound
and
or
aaa
cltd
mov
inc
js
popf
lods
cmp
aad
enter
xor
pop
test
push
sub
add
add
xchg
lock
frstor
sbb
mov
in
iret
sarb
push
lret
xor
test
jg
imul
jb
imulb
sti
mov
jo
std
adc
sbb
and
test
cltd
lret
sbb
fprem1
jno
add
lret
or
aad
xchg
adc
pop
cmp
jns
jg
aad
jne
pusha
test
or
dec
or
add
mov
jo
mov
call
xor
imul
ljmp
mov
ret
leave
and
ljmp
sub
xchg
adc
sahf
pusha
hlt
or
adc
cmp
lahf
mov
or
lret
call
jmp
cs
mov
xor
add
inc
add
cmp
inc
cmp
test
gs
cltd
dec
sub
imul
push
mov
adc
outsb
pop
fs
dec
jle
push
xor
call
add
scas
cs
mov
adc
cmp
dec
inc
pop
mov
arpl
jmp
ficompl
sbb
jmp
push
cmp
call
ret
fs
adcb
fiaddl
mov
fs
outsb
idivl
xchg
dec
clc
mov
ds
mov
out
insb
pop
scas
lcall
mov
fcmovb
iret
xor
inc
icebp
out
call
xchg
cmpsb
xchg
sub
int
add
xchg
scas
push
jo
inc
pop
xorb
mov
or
xlat
test
mov
dec
rcr
and
shll
xor
shrl
fs
pusha
add
pop
iret
xchg
jne
data16
cmpsl
fs
mov
push
mov
popf
xchg
lahf
dec
test
pop
inc
jbe
and
clc
test
lods
aaa
sbb
das
mov
dec
rcrl
jge
insb
jnp
cmpsl
daa
scas
inc
mov
movb
inc
push
jmp
popa
mov
push
arpl
fmull
cmc
add
mov
mov
or
scas
mov
rcr
jecxz
decb
dec
cmp
xchg
jns
in
ficompl
pop
sti
lds
repnz
mov
xor
fndisi(8087
ret
test
and
test
sub
loop
ret
add
jg
imul
mov
xor
aaa
ficompl
mov
stos
js
inc
addl
test
or
rcll
jnp
mov
lods
cmp
sub
and
mov
push
push
loopne
mov
cmp
add
mov
loopne
fbstp
imul
mov
movsb
xchg
jg
arpl
add
in
adc
push
lods
jo
jmp
lcall
add
xchg
test
sub
mov
nop
mov
imulb
pop
xchg
push
mov
fcmovnu
stc
sub
mov
dec
add
je
shrl
imul
xlat
pop
jl
pop
add
inc
and
add
mov
and
enter
subl
dec
test
stc
push
mov
into
in
loop
xchg
pop
inc
roll
xchg
loop
dec
out
mov
stos
fidivl
cmpsl
fdivp
mov
push
ds
cli
jae
dec
sub
mov
mov
xchg
pop
and
and
out
dec
jp
or
lcall
mov
arpl
les
push
repz
pop
cmp
inc
adc
ds
sbb
sub
in
jge
push
add
mov
fwait
hlt
aam
mov
or
shr
and
push
push
nop
sbb
fstps
pop
pop
mov
je
pop
pop
or
push
into
ret
jge
nop
outsl
hlt
inc
pop
add
sub
jbe
or
add
jae
test
xor
or
gs
ds
in
dec
insb
mov
aaa
sbb
xor
mov
mov
in
or
rcr
mov
pop
loope
lock
pop
xor
cmp
sbb
std
outsl
pop
movsb
stos
in
mov
jecxz
ss
cmp
leave
jg
jle
pop
jnp
sahf
dec
add
cmp
add
adcb
rclb
pop
sbb
push
das
sub
mov
fs
push
imul
movsl
shlb
pop
loop
or
sbb
loop
mov
or
push
mov
mov
pop
popa
adc
or
outsl
jb
mov
int3
or
push
popf
mov
movsl
scas
inc
lods
in
and
mov
or
bound
push
adc
add
dec
pushf
aas
or
xor
addr16
or
ret
stos
repz
es
or
cmpsb
lock
ja
or
rcr
lods
sub
cld
jo
mov
or
cltd
ss
sub
sarl
cli
pushf
shr
sub
fdivl
xchg
or
stos
pushf
mov
add
xor
inc
dec
testb
shlb
add
popa
cltd
xchg
das
pop
inc
mov
sub
xchg
mov
arpl
icebp
xchg
push
out
insl
jae
in
aam
mov
push
popl
and
movhps
adc
pop
mov
mov
cmp
js
pop
pop
push
mov
ret
cwtl
push
lds
mov
imull
mov
cmp
js
incb
jae
xchg
pop
arpl
inc
sub
xchg
inc
aas
loopne
jle
test
in
shrb
cmpb
popf
or
sub
arpl
xchg
clc
movsb
ror
add
jb
xchg
lods
inc
loop
jecxz
mov
add
xchg
addr16
fdivs
lods
insl
mov
das
mov
lret
ljmp
lds
and
and
cmp
cli
test
std
pop
push
bnd
int
mov
orb
push
test
fsubs
or
fldcw
rcr
cmp
lock
add
xchg
js
fbstp
or
xor
push
pop
stc
xor
out
cmp
xor
push
mov
fisubrs
sbb
insl
or
xor
popf
and
mov
cmp
fadds
and
sub
dec
addr16
pop
scas
sub
push
xchg
mov
test
xchg
push
xchg
mov
lcall
cli
sub
and
imul
shl
jmp
rcrb
stos
aam
lea
pop
xor
movsl
adc
jle
cmc
jecxz
pop
jo
inc
cmpsb
je
fwait
loope
in
fists
mov
arpl
js
mov
push
test
push
call
adc
sub
lds
insb
sbb
lcall
push
or
mov
in
pusha
loope
in
aad
ret
shlb
cli
lahf
mov
sarb
daa
xchg
sub
dec
pop
xchg
pop
push
push
outsb
push
xor
mov
mov
sbb
mov
insb
sbb
sbb
popf
stos
jge
jl
icebp
inc
push
inc
in
arpl
js
and
adc
push
add
inc
dec
lret
lahf
sbb
dec
out
pop
add
mov
daa
gs
pop
sub
rcrl
dec
push
or
sbbb
enter
adc
cltd
pop
outsl
shlb
sbb
xor
sbbl
out
inc
cmpsb
inc
push
mov
gs
mov
and
adc
nop
mov
mov
fwait
adcb
sbb
in
fmull
lea
sbb
mov
and
or
or
xor
test
and
mov
xorb
xchg
int
inc
mov
or
or
ror
lret
bound
stos
lods
mov
daa
imul
xchg
das
out
inc
dec
cmpl
inc
dec
cmp
mov
ret
ret
jne
mov
gs
imul
xchg
ds
addr16
push
mov
adc
xor
aad
jle
leave
scas
inc
scas
jo
cmpsl
xor
sub
xor
add
adc
arpl
je
push
sarb
dec
jo
mov
cmpsb
ret
pop
lahf
fcomps
add
ficoml
and
in
out
mov
in
push
les
mov
jo
mov
in
inc
add
mov
jle
xchg
add
stos
fs
shlb
push
stc
or
add
das
leave
sbb
inc
pop
push
sbb
or
lret
xchg
mov
mov
test
sbb
xchg
add
out
push
xor
sbb
xor
mov
dec
sbb
insl
test
aas
pop
dec
cmp
fstl
mov
ja
out
popf
mov
and
sub
mov
add
test
mov
jecxz
or
mov
dec
scas
ljmp
jl
xor
adc
mov
ja
add
push
and
mov
sub
in
rcrl
aad
mov
mov
lret
xchg
mov
jo
test
fldenv
shlb
ds
cli
test
mov
adc
int
mov
mov
sbb
adc
jae
enter
cmc
jle
hlt
test
jns
mov
sbb
out
or
or
or
or
push
inc
or
enter
cwtl
jg
jge
and
dec
jnp
sahf
dec
out
xor
push
in
sub
lret
outsl
stos
pop
std
ljmp
addr16
pusha
adc
mov
leave
movsb
aad
mov
fsubrl
or
and
sub
xrelease
les
cmpsl
pop
test
mov
jg
out
adc
adc
out
out
and
into
sarb
or
insl
fmulp
add
movsb
cmpl
nop
jecxz
mov
dec
insb
movsl
jae
pop
stos
push
mov
mov
sbb
push
or
inc
sbb
push
in
icebp
addr16
mov
lahf
jo
dec
jmp
mov
pop
es
loop
cmp
cld
ficomps
sub
pop
hlt
add
out
loopne
and
pushf
mul
imul
add
rorb
xchg
xchg
mov
stos
mov
cs
aaa
nop
or
mov
out
cltd
cmp
sub
push
aad
loopne
neg
ffree
xor
lock
push
mov
add
xchg
lret
fnstcw
mov
cmp
cmp
test
xchg
scas
popf
psrlw
adc
add
cmp
sbb
std
decl
mov
lods
jle
ret
and
bound
jl
cltd
imul
fcom
jbe
repz
mov
lds
push
inc
ss
xor
leave
movsb
mov
pop
sbb
adc
in
pop
xor
popa
pop
enter
push
add
lcall
lcall
mov
inc
dec
in
cmp
repnz
movsl
fimuls
pop
mov
in
jno
mov
pop
fnsave
scas
sub
sub
andb
xchg
test
ret
data16
cld
push
lods
into
xor
or
cmp
test
lcall
pop
gs
imul
ja
adcb
mov
lret
repz
adc
xchg
sahf
sar
mov
cmpsb
cld
mov
sbb
mov
aam
jle
push
add
inc
std
addl
xor
mov
sbb
je
out
lret
outsb
push
or
arpl
mov
dec
mov
sahf
and
jnp
jnp
xor
aaa
dec
cs
push
or
rclb
repz
clc
xchg
xlat
xchg
jo
add
cmp
sbb
mov
clc
xchg
or
push
jbe
mov
xchg
icebp
int3
call
pop
testl
ja
pop
pusha
fstl
mov
dec
sbb
inc
sete
cmp
push
xor
cmp
sbb
cmpsb
sbb
add
adc
add
nop
cmpsb
in
out
sub
pop
mov
xchg
jo
cmp
aad
fwait
add
aaa
lods
lret
jge
push
sub
and
fistpl
mov
dec
in
lea
xorb
xor
inc
jb
mov
into
pop
sbb
sbb
mov
ja
cmp
stc
call
sub
mov
inc
adc
loope
adc
loopne
cltd
or
and
sub
mov
push
imul
jge
rcrl
testl
xor
adc
faddl
and
or
inc
cmpsl
ja
xchg
lcall
lret
xor
lcall
gs
fsubrl
gs
mov
in
mov
js
push
inc
add
dec
mov
adc
outsl
cmp
push
loopne
jo
adc
fistl
push
pop
sbb
sub
rorb
mov
pop
add
rcrl
ljmp
dec
fistps
sub
cmpsb
bound
xchg
sbb
mov
cmp
sahf
cli
mov
ja
jmp
xor
loope
mov
jbe
jg
inc
int3
cmp
mov
test
js
mov
mov
rdmsr
jbe
push
adc
into
mov
cmp
jae
or
dec
or
push
pusha
or
jo
mov
jle
hlt
and
cmp
push
push
xcrypt-cfb
cmpsl
out
fwait
inc
and
dec
sti
inc
pop
pushw
iret
leave
jl
mov
outsl
and
test
test
fs
xchg
pop
jae
jp
insb
xchg
int
test
push
push
movsl
xlat
or
stos
mov
and
test
jns
inc
sbb
loopne
neg
arpl
dec
mov
sbbb
xchg
mov
and
test
xchg
pop
push
popf
adc
insb
test
out
mov
dec
mov
pop
cwtl
pop
inc
aad
mov
dec
pop
ds
outsl
push
mov
or
sbb
cmpsl
add
vandps
imul
xchg
insl
sbb
rcl
mov
les
jmp
inc
dec
lahf
loope
jo
mov
cmp
icebp
adc
xor
andps
rol
shll
jecxz
in
push
adc
mov
push
aaa
orb
xor
mov
pusha
shlb
bound
cli
ret
iret
push
pop
addr16
inc
nop
xor
mov
jp
mov
ror
notb
shrd
jmp
dec
mov
call
adc
push
pop
lods
in
popf
cmp
pop
aam
jg
pop
xor
sbb
clc
in
pop
test
leave
rcl
push
mov
daa
mov
mov
xor
stos
adc
adcb
cmp
lea
aam
leave
push
pop
movsl
sbb
mov
fsubp
or
mov
pop
lahf
pop
lea
jnp
movsb
dec
mov
sbb
ret
inc
xchg
cltd
test
pop
mov
aad
ret
ret
sbb
out
jnp
push
mov
mov
or
orb
lods
in
dec
and
mov
sbb
sbb
insl
inc
add
cmp
testl
or
dec
xchg
inc
dec
dec
lock
jmp
rorb
lahf
imul
es
push
movsl
mov
iret
aam
add
imul
jmp
dec
sub
shlb
sub
fwait
out
jae,pn
pop
jl
out
adc
xchg
inc
lock
jbe
shl
pop
pop
popa
aad
mov
sbb
repz
add
and
jo
cmp
in
xchg
sub
das
inc
loopne
loop
fldl
and
push
xlat
ret
lea
mov
fwait
shll
movsb
inc
clc
outsb
ret
cmpsl
jg
test
or
dec
jo
inc
mov
pop
xlat
inc
inc
adc
in
and
add
andl
rolb
ret
mov
shlb
int3
lds
inc
pop
imul
push
mov
jns
test
dec
push
rclb
psrlw
faddl
sub
cltd
jns
cmpsl
xor
call
ja
enter
gs
lcall
sub
lea
pop
loop
cmp
pop
or
cmp
aaa
pop
test
jnp
popl
push
push
pop
mov
xchg
out
jns
xor
push
mov
adc
jg
call
lock
imul
inc
out
sbb
cmpsl
pop
cmc
ffree
sub
push
mov
shrl
sbb
cmp
in
dec
mov
decl
push
scas
aaa
cli
pop
popa
cmp
gs
or
dec
jb
ss
sbb
shrl
cs
popa
xor
and
mov
jecxz
adc
bound
jbe
in
xor
add
xchg
sahf
fistpl
in
pop
andl
out
popa
std
or
aaa
out
and
sbb
popf
iret
inc
add
aam
push
or
cld
aaa
mov
or
repz
lock
call
lock
ja
cltd
and
mov
arpl
outsb
dec
int3
addb
inc
into
inc
fsubs
inc
jl
je
cmp
push
jge
inc
or
stos
int
push
mov
and
dec
or
in
cld
gs
lock
jae
roll
subb
cwtl
iret
adc
sbb
into
cmp
idivb
das
inc
popf
sub
testb
pusha
dec
dec
test
adc
adc
loop
and
fwait
loopne
mov
push
xor
and
daa
pop
cli
mov
dec
adc
push
aaa
cmp
ret
fidivl
loopne
test
ds
sbb
add
sbbl
inc
repz
mov
aaa
das
inc
or
inc
aaa
mov
mov
mov
add
jne
adc
mov
jo
imul
fs
mov
dec
sbb
adc
adcb
add
clc
outsb
rcr
js
popf
out
das
jmp
and
push
cmp
push
or
movsl
ds
fbstp
sbb
cld
mov
push
ret
pusha
fwait
stos
cmp
pop
mov
mov
mov
nop
aad
cltd
dec
dec
stos
inc
mov
xchg
adc
mov
andl
sub
push
sbb
fidivrs
scas
sti
in
inc
pop
mov
fdivr
push
test
mov
dec
mov
aaa
or
adc
cmp
imul
out
adc
push
mov
lret
repz
sbb
stos
das
add
jl
arpl
fdivrp
xor
cs
and
mov
pusha
or
mov
jmp
inc
and
push
int3
sub
cmp
push
stos
dec
sbb
cmp
sbb
xchg
mov
mov
xor
lods
adc
fcoms
push
fsubrl
sub
stc
imul
pop
cmc
cmp
jbe
mov
inc
sbb
mov
xchg
jge
stos
jbe
scas
inc
mov
sahf
pop
xchg
lret
pushf
aaa
js
lods
sub
or
push
and
jne
call
imull
adc
or
xchg
sub
sbb
cmp
stc
lret
stos
cmp
mov
pop
mov
jns
in
mov
pop
ja
dec
dec
addr16
add
gs
test
adc
rorl
out
dec
cmp
stc
ja
daa
mov
loop
pop
icebp
mov
cmp
bound
test
dec
pop
cwtl
push
cmpsl
jge
std
loopne
lds
mov
fdivr
into
loop
stos
call
pop
cmc
mov
popf
insl
adcl
xor
xor
lds
popa
fnclex
xor
mov
xchg
adc
ret
xchg
in
les
pop
dec
test
jb
lret
cld
sub
outsl
rol
call
leave
or
aaa
and
fwait
mov
aam
in
nop
adc
xchg
pop
adc
cli
or
push
scas
add
or
dec
add
fildll
lods
jge
jns
xchg
or
add
push
fs
mov
inc
jg
xor
jbe
add
lea
sbb
dec
mov
mov
mov
addb
mov
push
pusha
pop
js
ds
out
cmp
jg
fsub
sbb
push
gs
fcmovne
aam
pop
int3
insl
cmp
cmpb
cmc
sub
xchg
mov
scas
inc
lahf
push
cltd
es
sbb
push
shlb
popa
push
mov
cmc
mov
cmc
and
std
ljmp
push
inc
fwait
push
scas
orb
xor
jne
lcall
xlat
int3
xchg
mov
jge
sarb
xchg
inc
inc
jbe
dec
addr16
lods
xchg
adc
mov
add
jp
ret
pop
lret
popf
in
add
iret
mov
loop
subl
and
out
inc
cs
ljmp
xchg
push
xchg
mov
inc
pop
cmpl
shl
insl
cmpsb
dec
lret
sbbb
mov
sar
scas
imul
or
jbe
sub
xor
cs
movsb
int3
add
xchg
mov
cwtl
xor
sbb
lods
xor
and
addr16
lods
lcall
outsb
std
rclb
inc
dec
sub
push
xor
dec
xchg
adc
les
sbb
xor
sub
inc
or
pop
inc
mov
lret
dec
fs
test
filds
or
rclb
inc
ljmp
fstps
add
pop
push
jg
std
push
fwait
fwait
sub
in
jae
dec
pop
repz
std
cltd
cld
jge
mov
in
les
sub
fidivl
loop
out
repnz
dec
jg
sbb
cmp
inc
cmp
std
pop
or
outsl
fbld
mov
sbb
dec
push
xor
sub
jg
out
pop
pop
mov
lret
dec
lods
imul
mov
loop
mov
jge
inc
inc
sbb
cs
ret
out
es
enter
mov
push
aam
int3
stos
lcall
das
test
dec
xor
stos
mov
or
jle
pop
or
cmc
inc
es
mov
adc
fisttpl
push
or
jp
add
scas
popf
cwtl
cmp
cmp
push
dec
in
sbb
cmp
shrb
or
adc
or
cwtl
cld
push
pusha
inc
mov
push
je
in
out
imul
fidivs
xchg
sub
roll
cs
mov
or
jecxz
cmp
out
lcall
xchg
dec
or
jg
mov
sti
add
stc
fistpl
sar
and
lea
movsb
cs
iret
roll
shrl
loope
test
out
movsl
jg
mov
pop
call
rcrb
pop
xchg
jl
mov
das
loopne
loope
fidivl
adc
popf
daa
nop
sub
clc
adc
js
or
mov
cli
nop
xor
jb
or
jno
pushf
aaa
and
sub
std
hlt
std
xor
cwtl
push
das
daa
inc
iret
sub
mov
mov
push
or
and
test
sbbl
clc
push
pop
stos
shll
xchg
idivb
sbb
adc
and
ret
sbb
test
dec
sub
dec
repnz
dec
lret
cld
pop
add
sbb
ljmp
mov
jo
mov
out
loopne
aam
or
ds
sub
xor
fsubs
jge
adcl
test
sub
jns
jp
scas
ljmp
js
cs
or
push
cmp
mov
adc
push
mov
xorl
pusha
movl
mov
aam
cltd
popf
add
rcl
pop
inc
pop
dec
pop
cmp
add
shlb
inc
data16
in
and
les
pop
into
sub
test
lret
xor
fcmovne
test
ret
mov
xchg
adc
dec
pushf
sub
and
push
movsb
xor
outsb
das
sub
xor
or
jno
sub
xchg
push
push
faddl
jp
xchg
jae
mov
sbb
mov
js
pop
mov
cmpsb
movl
adc
andb
in
mov
insl
lret
test
aaa
add
or
mov
xor
mov
and
ja
aas
push
mov
adcb
xchg
mov
xchg
iret
loopne
push
and
cwtl
push
jnp
ja
or
pop
add
push
dec
aam
pop
rcr
pop
jae
mov
daa
mov
stos
shll
dec
and
add
lods
in
cmp
push
adc
pop
icebp
jmp
stos
fwait
mov
je
add
loopne
jno
fmull
xchg
test
je
cmp
mov
shl
sbb
pop
or
fildll
lods
push
xlat
pop
adc
push
clc
dec
inc
cmpsb
mov
loop
mov
or
cmpsb
cld
stc
dec
mov
inc
xchg
cmp
cmp
pushf
mov
cltd
dec
movntps
or
dec
hlt
pop
std
es
or
notl
or
fidivl
adc
mov
ss
pop
aas
inc
jge
addr16
or
inc
push
sbb
jp
pop
sahf
lea
outsb
adc
adc
inc
mov
push
lcall
call
lret
pop
pop
int
mov
inc
lods
inc
mov
rcrl
cmpsl
mov
mov
arpl
xor
cmp
mov
movsb
rcrb
dec
or
pop
push
add
dec
lret
xchg
pop
and
pmuludq
xchg
adcb
daa
les
into
push
push
lods
scas
pop
jmp
sti
daa
cmp
cmp
stos
lahf
lretw
adc
sbb
icebp
mov
dec
sbb
pop
or
xchg
xchg
daa
mov
jne
push
leave
std
ss
mov
xchg
das
out
xlat
mov
sbb
pop
fmull
insb
sarl
lds
je
jg
mov
dec
dec
inc
shlb
or
inc
out
out
pusha
adc
jmp
sub
mov
mov
inc
add
sti
pop
mov
mov
xor
mov
pop
loope
push
jecxz
sub
jns
sti
shr
test
and
jl
mov
mov
pusha
lret
cmp
and
xchg
pusha
lock
xchg
push
xor
cmc
push
sbb
out
dec
addr16
xchg
lret
icebp
mov
jp
sub
add
inc
jo
inc
jb
push
xorl
ljmp
push
add
mov
movsb
mov
loope
stos
loopnew
pop
stos
and
inc
bound
mov
negl
icebp
cld
stc
stos
mov
jb
insl
out
test
inc
pop
pop
shrb
xor
rolb
icebp
fmuls
popa
sub
loop
jae
shrb
int3
stos
out
enter
pop
cli
out
dec
arpl
dec
jecxz,pt
lods
or
hlt
psubusw
or
popa
stos
cld
adc
fistl
jmp
cmc
adc
movsb
add
dec
int3
lds
pop
push
shlb
mov
inc
add
sahf
dec
jecxz
or
scas
mov
sub
rclb
shr
sub
push
xchg
inc
lea
fidivrs
mov
daa
mov
sarl
ljmp
sarb
and
aam
xor
scas
ds
mov
call
fnstenv
push
in
inc
lods
jl
and
sub
loope
mov
mov
hlt
imul
inc
jns
fistl
pop
add
xchg
xchg
mov
and
push
inc
xchg
gs
lea
das
aad
mov
fwait
insb
mov
sbb
test
jg
insb
mov
add
sbb
iret
test
test
fwait
or
cld
push
test
iret
mov
clc
push
outsl
sbb
jb
psubb
push
mov
xchg
cmc
leave
xchg
xlat
sub
icebp
scas
push
out
push
mov
xorl
lods
sub
jbe
scas
and
pop
cmpsb
test
in
daa
mov
add
std
out
lock
cwtl
mov
jnp
pop
insb
aas
mov
add
push
into
fwait
into
je
cmpsb
aad
sti
add
dec
add
pusha
repnz
aaa
inc
mov
dec
push
js
addr16
and
push
test
je
mov
xchg
inc
shlb
cmp
cmpsl
xchg
fwait
shlb
mov
cmp
aam
ud2
loope
bound
xchg
push
xchg
mov
stos
and
test
add
xchg
mov
repnz
jbe
jge
pop
mov
mov
mov
jne
sti
push
insl
sti
int3
add
cmp
in
lods
push
add
std
movsb
mov
inc
push
sbb
jle
jb
fistl
insb
nop
scas
xchg
fwait
mov
shrd
icebp
cmp
mov
xor
xor
add
push
dec
insb
xor
inc
mov
pop
insl
xchg
fnstcw
in
mov
and
dec
pop
add
aaa
adc
mov
dec
add
xchg
xchg
mov
insl
cmp
jne
loopne
add
pop
cmpsb
insl
add
sbb
push
in
adc
std
aad
inc
mov
adc
pop
in
pop
dec
sub
xchg
loop
into
ljmp
push
xor
addr16
lcall
xlat
push
movsb
push
out
sbb
js
out
dec
add
add
sbb
mov
test
imul
call
shr
and
inc
rclb
outsl
xor
sldt
adc
pop
fadds
shrl
std
lds
lret
mov
lcall
mov
icebp
push
fwait
loope
push
or
in
iret
data16
aaa
pop
cmpl
inc
loop
mov
aam
jne
in
int3
int3
hlt
cmpl
lret
dec
bound
sub
jno
cld
addr16
mov
pop
or
arpl
jecxz
xchg
mov
and
and
push
adc
jo
pop
hlt
fs
in
cmp
std
ffree
out
sub
sub
dec
data16
fstl
mov
lds
mov
lret
and
pop
fadds
popf
and
sti
mov
inc
lret
mov
out
or
sub
xor
aad
xorl
jae
xor
js
or
imulb
mov
cmp
int
xor
lea
scas
dec
adc
sbb
imul
inc
jbe
xlat
sahf
jge
scas
sbb
test
in
fsubl
movsb
jae
mov
pop
pop
push
cmp
pop
cmpsb
aam
faddp
add
fs
sbb
xchg
xchg
mov
inc
cld
cmp
xor
loope
sub
mov
lahf
and
rcll
dec
pop
push
cld
out
push
nop
or
scas
popa
fmuls
sahf
fildl
pop
add
nop
inc
fstpl
daa
daa
mov
xor
mov
aad
cli
pop
push
das
cmpb
cltd
mov
shrb
push
pop
sbb
leave
inc
stos
or
and
mov
xlat
sarb
xchg
aaa
adc
pop
inc
leave
fisubl
cmp
adcl
cmp
xor
repz
cmpb
xor
movsl
enter
push
rorw
loopne
pop
adc
mov
jb
testb
dec
cmp
lahf
inc
lds
lock
test
mov
lods
lret
cmp
dec
test
loopne
scas
inc
inc
and
dec
bswap
xor
jge
ja
jge
mov
adcb
mov
xchg
sub
stos
imulb
outsb
adc
fidivrs
cmpl
bound
movsb
mov
mov
jge
mov
xor
lds
fiaddl
push
mov
call
inc
out
hlt
push
or
fimuls
pop
imul
out
cmp
xchg
ret
lret
fdivl
outsb
jmp
pop
push
mov
pop
outsl
sbb
imul
iret
lods
push
fldl
ret
sti
mov
jmp
push
mov
pop
push
mov
push
pushf
dec
lret
out
inc
pop
and
cmpsb
fidivs
pop
push
aas
leave
or
cld
stos
xchg
fnstcw
aam
shrb
mov
jno
dec
lcall
push
mov
shl
mov
outsb
rorb
sbb
jmp
push
cli
icebp
push
lcall
push
dec
js
pop
sub
inc
pop
xchg
mov
lahf
lea
inc
std
test
dec
or
push
lret
cld
std
mov
fmul
inc
jp
call
or
or
xor
push
sbb
incl
dec
insb
jmp
dec
sbb
inc
dec
or
jl
and
ret
ret
add
aaa
and
enter
sti
outsl
jns
jbe
aad
pop
lods
mov
sbb
pushf
push
adc
loop
aam
cltd
sbbl
dec
dec
hlt
sub
scas
filds
mov
push
lods
jecxz
pushf
mov
out
cli
add
icebp
movsb
popa
inc
cmp
mov
loop
adc
or
je
mov
andb
lods
mov
lock
enter
jmp
push
and
jnp
mov
inc
adc
push
lret
andb
mov
inc
add
xchg
mov
fstps
mov
pop
addb
pushf
pop
repz
fdivrp
mov
sub
aas
mov
movsb
add
orl
jp
cmpsb
insl
add
and
pop
out
xor
mov
jmp
push
push
jge
in
fildl
das
cmc
mov
lcall
movsb
mov
sub
pop
lock
inc
je
mov
jns
xchg
mov
jge
cs
jmp
in
test
scas
add
dec
sti
das
xchg
jo
sub
cmp
mov
fsts
mov
movl
insl
and
adc
mov
ja
jg
dec
or
sbb
and
push
pushf
add
push
push
aam
and
cmp
inc
pop
js
xchg
aam
or
jb
popf
test
pop
loopne
cmpl
mov
jbe
jne
push
pusha
mov
sub
xchg
mov
inc
sbb
out
pop
insl
cmp
dec
pushf
add
stos
incb
lret
jns
mov
mov
outsl
repz
fimull
repnz
stos
ret
sti
repnz
sub
lcall
inc
stos
and
imul
popa
dec
cli
lock
jmp
js
jo
cltd
scas
jp
pushf
jnp
xchg
jae
out
mov
sub
daa
aam
or
adc
cmp
repz
fld
ret
and
mov
ja
ss
and
shlb
je
lgs
mov
and
push
shr
jbe
xchg
testl
push
stos
adc
xchg
mov
cmp
mov
xor
fnstenv
sbb
pop
inc
push
pop
dec
fldl
dec
cmp
lds
out
push
cmp
xchg
or
cmp
popf
dec
or
pop
ficoml
jecxz
mov
sub
or
and
dec
mov
add
out
and
insl
lret
js
gs
jnp
cltd
jle
or
add
scas
cmp
fimuls
ret
lods
mov
inc
pusha
sbb
xlat
cmp
lods
idiv
cmp
inc
xchg
jmp
clc
in
jp
stc
jae
icebp
int3
repz
rcll
jno
cmp
pop
mov
inc
jg
shll
arpl
and
in
mov
pop
dec
cmp
jl
in
je
in
repnz
pop
cwtl
jno,pn
rcrl
xchg
popa
inc
jl
sub
fidivrl
pop
orl
xor
popa
rcll
cmpsb
fwait
pop
iret
inc
outsl
pop
sub
jg
pop
stc
int3
popf
or
repnz
lret
lods
lret
push
cmp
xor
cmc
jge
data16
mov
mov
ds
test
xor
jae
ja
insb
outsl
mov
bound
pushl
pop
scas
inc
psrlw
jl
or
sub
cs
popf
xor
add
jge
mov
shlb
push
bound
mov
test
orl
pop
shl
out
inc
rcrl
pop
das
cmp
lea
and
and
das
pop
push
addr16
xchg
xchg
push
sub
adc
int3
add
andl
lods
jge
or
data16
pusha
arpl
out
jmp
add
into
push
scas
mov
jns
icebp
cmpl
xor
lret
cmc
ret
or
sub
and
dec
sarl
mov
pop
imul
outsl
sub
outsl
test
mov
imulb
add
gs
add
and
jge
dec
jge
incl
dec
xchg
push
loopne
push
inc
inc
jecxz
mov
adc
lods
nop
loopne
lret
loopne
sbb
inc
ljmp
inc
xchg
xlat
test
mov
jnp
and
sub
and
rorb
imul
pop
cmpb
int3
xchg
mov
add
loopne
rclb
push
dec
and
xor
std
push
sbb
push
sbb
or
outsb
pop
xorb
fs
pop
dec
neg
lea
xchg
addr16
test
push
hlt
imull
frstor
xlat
fmulp
repz
cmp
jecxz
xor
out
cwtl
gs
adcb
xor
nop
adc
scas
dec
aad
pushf
adc
sbb
dec
fildl
fcmove
in
sahf
dec
add
imul
sbb
cmp
and
out
jg
mov
ljmp
test
cmpsb
sub
mov
sub
xchg
adc
mov
ficoml
add
scas
push
shll
and
stos
or
fs
clc
and
inc
push
push
mov
iret
test
xchg
mov
es
xchg
push
dec
dec
int3
fcomps
fbld
rclb
dec
inc
popa
xchg
adc
int3
mov
mov
xchg
cmpsb
inc
lret
icebp
cmp
nop
jge
pop
daa
lret
jge
int3
dec
cltd
scas
outsl
push
dec
or
sti
xlat
push
movsl
dec
ja
mov
lock
xchg
mov
outsl
das
inc
mov
test
test
push
mov
leave
es
push
push
cmpsl
nop
dec
jg
or
outsb
cmp
in
pop
rcll
out
sub
lret
mov
lea
popa
imul
mov
nop
aas
repnz
mov
mov
jg
aaa
frstor
fisttpl
jp
dec
dec
push
push
xchg
lcall
cli
push
jb
jp
mov
push
lea
pop
in
hlt
inc
imul
jecxz
cmp
pushf
stos
loop
sub
jp
pop
addr16
inc
lcall
pop
mov
cmpsl
xchg
jnp
je
imul
xlat
sub
out
mov
add
dec
roll
dec
xor
cwtl
rcll
sub
ret
inc
cltd
or
jnp
push
rcrb
and
xor
jp
and
lcall
scas
jg
test
mov
aas
jle
cmp
push
push
sti
mov
dec
mov
mov
push
lds
cltd
sbb
xchg
lret
test
repnz
xor
jmp
lret
xchg
imul
notb
test
push
push
les
scas
fidivl
add
push
jb
xor
cmp
pop
and
jbe
push
xor
mov
mov
sbb
subb
stos
push
fidivrl
loop
mov
cmpsl
ljmp
psubw
add
sbb
push
xchg
in
pop
cld
cmp
stos
je
push
mov
adc
int3
shll
jno
push
into
rcl
mov
cld
repz
inc
enter
add
loope,pt
mov
mov
call
cld
cmp
das
aaa
dec
add
frstor
jp
adc
sbb
mov
push
mov
jp
je
or
dec
lret
add
out
cmpsl
lcall
popf
test
inc
xor
gs
sub
daa
imul
movsb
ja
or
dec
mov
push
mov
scas
mov
mov
iret
xchg
sarb
add
inc
xor
insl
inc
mov
or
int3
mov
xchg
xchg
push
xchg
mov
ret
dec
scas
mov
repz
aas
or
fisubs
scas
and
dec
pop
adc
xor
jne
test
xor
and
data16
clc
frstor
xor
adc
popa
mov
jp
stos
mov
pusha
pop
fcom
pop
xchg
jp
lcall
pusha
add
cmp
mov
in
imul
push
ljmp
xchg
xor
push
icebp
pushf
jb
dec
xor
xor
push
add
jb
sub
arpl
xlat
scas
leave
mov
xor
mov
lock
lods
xor
inc
ret
insl
sbb
mov
adc
aad
add
pop
loope
iret
or
ljmp
adcb
adc
inc
mov
je
lahf
and
jbe
lahf
cwtl
inc
into
ds
xor
xchg
out
out
dec
pop
jmp
xchg
iret
xor
xchg
sti
inc
ja
loop
sub
xchg
bound
push
rolb
mov
fsubrp
rorl
rcr
inc
mov
out
lods
sbb
cmc
sub
mov
push
pop
cmp
or
sti
mov
gs
xchg
mov
xorb
lret
mov
and
mov
mov
fcomi
std
add
push
add
icebp
ljmp
clc
pop
cmpsb
push
scas
and
mov
in
add
pusha
jp
mov
adc
fldl
cmpsl
cmp
adc
fcomi
scas
mov
pop
xchg
push
add
jmp
pushf
fisubrs
inc
dec
pop
lret
rolb
or
mov
adc
aaa
push
iret
das
movswl
repnz
loope
cmpsb
pop
xor
xchg
xchg
iret
lods
insl
pop
sub
jnp
add
jae
cltd
cwtl
stc
or
clc
push
xchg
push
push
jge
or
ror
cmp
or
jne
aam
int3
lods
push
rorl
add
adc
call
pop
mov
jne
neg
inc
xchg
pop
lods
pop
jb
jmp
pop
std
mov
xchg
sbb
xor
insl
push
pushf
imul
pop
and
aaa
outsl
xchg
je
xor
jo
jo
sbb
data16
and
xor
sub
loop
mov
mov
pop
sbb
in
sarl
mov
cltd
ss
pop
lret
in
jp
out
clc
pop
mov
cmp
pop
int3
mov
sub
pushf
cmp
stos
shlb
adc
add
adc
sbb
jnp
add
out
nop
ret
dec
xor
daa
pop
dec
mov
jmp
sub
int3
sub
mov
sarb
imul
mov
push
rclb
mov
lret
fbstp
cwtl
shr
xor
sbb
test
cmp
fistpl
or
lock
cli
push
bound
repnz
sahf
iret
add
das
insb
dec
inc
iret
ret
aaa
pop
push
xor
in
aam
aam
test
ljmp
cmpsb
mov
int3
inc
fisubs
jno
adc
das
mov
pop
xor
jns
int3
lret
sbb
lret
mov
aam
aad
adc
jae
sub
ja
in
hlt
pop
pop
icebp
jle
xchg
lds
lcall
add
cmpsb
xchg
ffreep
add
mov
adc
ljmp
dec
push
mov
lret
lea
and
push
les
std
inc
pop
lods
mov
in
sub
data16
aas
stos
ss
and
jl
xchg
or
cwtl
divl
xchg
hlt
inc
cmp
jmp
add
lods
add
in
sub
ficoms
sub
pop
push
sahf
popa
cmpsl
jns
fst
adcl
sbb
add
push
pop
sub
pop
out
or
sbb
pushf
lea
call
jecxz
dec
or
shll
xchg
in
int
mov
lret
stos
popf
sbb
js
sbb
das
hlt
dec
cmp
mov
inc
lcall
mov
loop
fstpt
stos
push
loope
lods
dec
mov
stc
jecxz
adc
stc
xor
or
xchg
daa
jns
mov
and
ss
lods
pop
andb
add
pop
jmp
lret
push
bound
iret
jl
cwtl
adc
and
les
ds
xor
cmpsl
sub
fs
pop
fdivrs
lea
mov
in
mov
imul
shll
dec
xor
mov
jo
mov
mov
aaa
pshufw
push
icebp
mov
popf
testb
sbb
mov
jno
push
imull
xor
repz
jns
mov
popa
mov
inc
jo
call
out
mov
sti
addr16
sbb
pop
aad
daa
ds
jle
sbb
fucomi
push
mov
xchg
fcmovb
add
push
pop
ja
jecxz
lods
push
jo
push
test
insl
jns
mov
pop
fs
push
ret
fstps
dec
insb
fistpl
pop
rolb
xor
test
pop
enter
scas
jmp
fucom
add
test
pop
mov
mov
fsubl
mov
in
dec
mov
xchg
lods
dec
jmp
shlb
push
xchg
lret
xor
dec
mov
sbb
js
mov
sbb
stos
cmc
orl
inc
cmp
test
stos
daa
fsubrl
cs
hlt
and
or
std
fildl
into
or
or
mov
arpl
mov
addr16
movsl
jmp
cltd
sysexit
dec
xor
bound
lds
jo
and
fiaddl
cmp
shlb
adc
pop
jecxz
insl
rorb
lret
popl
pusha
in
cmp
mov
pop
mov
lock
adc
mov
lods
idiv
pop
jns
xor
pop
loope
shl
dec
sbb
adc
xchg
out
pextrw
scas
andb
js
fiaddl
stos
add
push
mov
xor
nop
inc
adc
mov
mov
inc
sbb
mov
fmuls
mov
dec
or
in
scas
or
xchg
push
and
subb
or
pop
sbb
adcb
mov
cmpsb
jecxz
mov
lahf
jne
push
sarl
mov
into
add
add
popf
fnstsw
cmpsl
pushf
ds
add
or
jae
insb
pop
mov
outsb
lds
out
push
sub
cltd
ja
stos
adc
lahf
xor
stos
std
out
jmp
mov
dec
pop
sbb
inc
shlb
mov
xchg
je
mov
imul
dec
fdivrl
int3
mov
adc
push
push
and
xlat
xor
jmp
dec
add
jnp
push
mov
lods
and
mov
sub
push
mov
daa
scas
jb
sarl
lret
cmp
add
push
push
repnz
imul
insb
bound
lcall
popa
lock
fs
mov
jb
arpl
imul
imul
dec
outsl
punpcklbw
dec
arpl
pop
adc
inc
pop
push
inc
or
andl
mov
daa
lds
mov
mov
fcompl
cmp
mov
xchg
scas
fdivrs
jle
sub
pop
pop
ss
and
or
outsl
xor
icebp
push
add
addr16
mov
shlb
push
pop
or
jne
outsb
sahf
adc
inc
fistpll
xorb
cmp
adc
xor
mov
aas
mov
cmpsb
xlat
xchg
mov
shlb
adc
fs
icebp
push
jge
loop
fdivr
jae
call
stos
fsts
mov
mov
push
push
test
add
sbb
sub
push
andl
jge
stos
cmp
orb
iret
repz
mov
dec
aam
aad
jge
ret
xor
inc
mov
stos
sub
inc
mov
xor
and
inc
frstor
cltd
movsl
lahf
loopne
push
movsb
add
mov
or
fidivrl
xchg
sbb
sub
out
push
andl
push
fstpt
push
in
pop
inc
ret
std
mov
jnp
in
push
sub
aas
loopne
mov
push
sti
jae
cmc
into
loope
xchg
mov
push
clc
xchg
inc
mov
popf
bound
mov
sub
out
ret
xchg
popf
movsb
into
je
or
adc
inc
jle
pop
mov
aas
add
insl
enter
aaa
into
int
or
push
lea
mov
andb
hlt
xchg
push
fldt
jg
jo
out
mov
shl
cmp
cs
cltd
jb
jbe
mov
push
mov
fs
int
leave
xor
lcall
add
push
xor
adc
mov
and
js
repnz
adc
mov
outsb
sub
notl
fcoms
jnp
ljmp
push
sub
push
out
inc
push
mov
sub
sbb
loop
icebp
mov
jae
outsb
loope
jae
lcallw
dec
pop
push
fcomp
aas
bound
mov
jge
dec
mov
or
je
imul
push
jae
mov
cltd
and
or
inc
cmp
cmpsb
jo
jae
mov
adc
sahf
stos
xor
outsb
jp
shrl
sub
je
inc
push
in
sub
pushf
in
jb
js
mov
shlb
pusha
mov
dec
ret
cmp
inc
int3
xor
or
bound
xchg
out
jb
imul
pushf
mov
dec
leave
cmpsl
pushf
testb
lret
pop
push
cmp
outsl
adc
xlat
jno
push
sub
fcoms
cmc
xchg
gs
mov
je
incb
sti
jle
aam
inc
inc
xchg
xchg
leave
dec
clc
lret
adc
ja
add
pushf
mov
xor
imul
in
daa
dec
repz
mov
jle
lcall
cmp
or
pop
popl
jmp
xchg
mov
imul
roll
inc
mov
rcll
jle
dec
xor
out
xchg
sahf
push
inc
and
mov
ret
stc
jo
arpl
mov
mov
in
inc
add
in
sbbb
pop
out
or
pop
rcl
xor
sbb
out
and
mov
pop
jmp
and
test
std
in
rorb
mov
idivb
mov
xlat
pop
popf
sbb
mov
push
das
das
lcall
jp
lods
outsb
xor
inc
pop
enter
sub
jno
push
ds
fidivrl
ds
inc
ja
xchg
add
jb
lahf
pop
nop
jecxz
in
mov
repnz
push
ret
mov
stc
dec
mov
dec
pop
test
jne
dec
ss
inc
xchg
insl
push
lock
stos
jno
sti
enter
dec
inc
push
test
mov
mov
and
jbe
imul
xchg
incb
mov
gs
push
jnp
jne
jmp
sub
fstp
push
rcl
lcall
xlat
add
sti
pushf
into
hlt
movsl
lods
and
xor
movl
adc
gs
adc
and
xor
sahf
stos
loop
shl
lock
decl
add
sbb
adc
cs
and
sbb
or
mov
mov
in
ljmp
ljmp
ret
scas
mov
jmp
imul
adc
and
mov
xor
popa
addr16
xchg
lea
pop
cld
push
add
cs
mov
in
jns
loopne
daa
push
cwtl
or
test
xor
in
sbb
xchg
sahf
pop
mov
lods
fcomps
xor
mov
mov
lahf
cli
js
loop
ret
lret
subb
scas
stc
pop
inc
adc
and
movsl
pusha
lods
popf
dec
mov
mov
ficompl
mov
mov
scas
pop
jno
or
pop
push
setnp
fadds
xor
arpl
mov
sub
pusha
xor
and
or
in
xor
inc
dec
add
push
cmp
and
ret
in
adc
or
aad
das
jp
pop
sarb
push
sahf
pop
add
in
popf
sub
jnp
nop
in
aas
outsl
outsl
bound
shlb
sahf
orl
adc
cld
inc
fs
nop
ficompl
jg
repz
add
adcl
test
xor
cmp
scas
iret
jp
sbb
jns
inc
out
clc
sbb
in
std
and
mov
mov
mov
popa
icebp
aad
outsl
dec
sub
sbb
in
lds
inc
call
pop
or
mov
jge
shrl
jno
lahf
scas
mov
dec
scas
in
cltd
dec
sub
cmp
dec
stc
and
mov
pop
inc
inc
inc
shll
inc
or
mov
bound
xchg
add
testb
pushf
mov
bswap
adc
mov
rorb
cli
popf
jne
sbb
add
pushl
cli
stos
or
or
push
jno
scas
out
inc
push
push
xor
mov
lahf
jb
cmp
into
push
movsb
daa
inc
dec
inc
mov
subb
fidivrs
xchg
mov
pusha
data16
adc
push
xor
cmp
daa
and
xor
shll
jns
fmuls
sbb
mov
js
push
aaa
data16
repz
fs
sub
pop
add
mov
js
and
fxch
xchg
cmp
es
pushf
lea
loopne
bswap
dec
push
xchg
test
mov
xor
insb
mov
add
lods
inc
xor
sbb
or
movsl
loopne
or
dec
out
mov
std
dec
addb
adc
lock
scas
repnz
insl
mov
and
or
icebp
shll
and
pop
xchg
jl
gs
push
xchg
xor
inc
mov
cltd
adc
inc
push
add
sbb
and
push
in
das
jecxz
cld
or
push
out
inc
test
aaa
add
std
mov
decl
daa
roll
jb
movb
inc
iret
add
lea
xchg
ss
jnp
mov
lahf
mov
xchg
inc
out
lds
lret
push
outsb
les
hlt
xrelease
fwait
fwait
cwtl
jge
adc
adc
lds
aas
jmp
mov
xor
mov
mov
mov
cmpl
imul
sbb
xchg
mov
fbstp
cli
ret
jo
cltd
iret
pop
movsb
loop
outsl
nop
cwtl
adc
int
fimuls
lcall
cmp
arpl
jecxz
xor
jmp
loope
fs
xor
jne,pn
mov
dec
ss
or
fisubs
aaa
or
lock
add
xchg
and
lods
pop
int
leave
pop
sbb
push
test
pop
mov
lret
jl
mov
shr
out
dec
lock
jnp
out
cmp
sub
cmp
or
fidivrs
mov
lcall
sub
mov
fwait
in
imull
out
pusha
xor
nop
ljmp
jp
lret
aam
imull
adc
mov
loop
lock
jmp
mov
sbb
push
popa
and
xchg
sub
pusha
inc
add
xchg
out
xchg
stos
xchg
inc
in
push
jge
jl
imul
shlb
fdivs
mov
je
daa
test
sub
ret
jl
fistpl
adc
mov
pop
xadd
scas
push
cmpsl
pop
mov
cmp
test
aas
or
or
shl
inc
stos
mov
fists
pop
mov
aam
push
cmpsb
jne
push
or
or
adc
out
or
mov
cmp
cmp
pop
pushf
sbb
inc
sbb
pop
pop
out
inc
xchg
clc
or
lods
addr16
xor
ret
ficoml
push
add
mov
pop
jle
and
xor
lret
xor
inc
push
imul
sti
lods
popa
adc
daa
imul
push
mov
sub
xchg
dec
and
das
shl
cmp
ret
cmp
jno
std
addr16
dec
nop
xor
mov
xchg
cmpsl
or
int3
push
xor
nop
stos
in
mov
int3
mov
lods
dec
cmp
pop
fxam
xlat
loopne
add
adcl
mov
bound
xor
mov
js
mov
dec
mov
mov
cmpsb
popa
xor
lahf
loope
idivb
es
into
dec
cmc
jg
dec
fwait
or
mov
aas
mov
pushf
das
or
xchg
stc
xlat
gs
gs
jg
fsubs
push
push
push
xor
inc
pop
and
icebp
inc
mov
pop
jl
mov
test
add
pop
push
xor
aas
xchg
pop
insb
bound
roll
fwait
or
add
arpl
call
mulb
xor
xchg
mov
adc
push
rorb
daa
mov
jl
sbb
xlat
shl
mov
sub
movsl
adcb
or
dec
aas
jg
push
icebp
sti
popf
daa
subb
mov
data16
out
mov
dec
ja
orl
xor
dec
cltd
pop
outsb
or
iret
lret
pop
add
sti
mov
daa
aas
jbe
jp
mov
test
mov
xor
mov
addl
in
sbb
push
or
jecxz
jg
imul
inc
loop
or
mov
jno
xchg
sub
or
push
nop
push
sarl
daa
in
mov
sub
in
jne
aad
pop
add
iret
push
jnp
mov
inc
push
daa
inc
std
icebp
or
xor
aam
push
adc
out
adc
jmp
pop
fsubs
and
inc
jecxz,pt
pandn
xchg
jo
cmp
jnp
lds
call
dec
xchg
xchg
pop
fiadds
repz
sbb
mov
addr16
mov
jne
out
push
cmpsb
in
sbb
jbe
lds
mov
ja
sbb
and
mov
dec
out
sbb
stos
in
cmpsl
movsl
cmpsb
ss
adc
mov
xlat
cmp
dec
clc
mov
xchg
and
xor
movsb
jns
fldl
push
adc
xor
shl
mov
lahf
lahf
sub
out
ret
in
inc
aas
inc
push
ljmp
push
insb
jo
jl
pop
hlt
outsb
in
mov
cli
and
dec
rcrb
sar
test
dec
add
jl
adc
jl
adc
ds
cmp
sbb
mov
jne
scas
cwtl
daa
stos
mov
cld
mov
mov
sub
insl
shrb
xor
jbe
jl
jmp
aad
stos
popf
adc
leave
stos
ja
lds
stc
pop
mov
mov
cmp
loopne
push
negb
cmp
add
mov
loope
mull
daa
mov
pop
pop
mov
lahf
add
scas
xchg
add
sbb
scas
push
incb
mov
int3
inc
test
rolb
loopne
sarl
mov
rorb
into
fmull
pusha
mov
jo
inc
dec
mov
inc
jne
xchg
sub
add
adc
pop
mov
xor
leave
int3
dec
mov
sbb
xchg
inc
xchg
lock
cwtl
xchg
add
cmp
sahf
outsb
add
pop
xchg
cmp
cmpsl
and
shll
xchg
rcll
loopne
and
xchg
mov
xor
inc
xchg
mov
cmpsb
push
gs
lods
or
fcomp
ficomps
xchg
sub
pop
orb
sub
push
adc
fcomp
cmpsl
mov
test
fmuls
sub
xchg
cmp
mov
cmp
sub
sar
xchg
sbb
inc
sti
andl
imul
in
mov
subl
hlt
mov
cmpsb
daa
xlat
shll
mov
pop
mov
inc
push
ret
test
fsubs
mov
lds
cld
and
add
sbb
lea
pop
mov
xchg
add
repz
dec
inc
fwait
fs
mov
lea
js
push
fstl
pop
inc
and
insb
add
mov
pushf
cwtl
mov
push
add
add
popa
subb
xchg
adc
fcmovnu
dec
lret
ss
cltd
sahf
cmp
push
lahf
cli
mov
popa
dec
mov
pop
enter
jmp
inc
syscall
push
sbb
lods
test
out
fs
das
clc
hlt
sub
data16
in
subb
sahf
mov
fs
imul
das
xor
mov
mov
adc
fiaddl
pop
dec
pop
mov
popf
clc
data16
sti
aad
insb
outsl
cs
daa
nop
add
dec
fmuls
les
jg
nop
mov
xchg
stos
inc
mov
inc
into
jo
fistpl
cmp
mov
pushf
xlat
test
bound
test
pushf
aas
cmpsl
sbb
cmc
xchg
dec
mov
pop
mov
mov
pop
in
imul
cmp
je
addr16
adc
test
faddl
repz
pop
sbb
push
rorb
xor
movsb
adc
mov
inc
lods
test
pop
xlat
shl
mov
popa
scas
sub
push
xchg
fbld
popl
fs
or
mov
dec
inc
push
sub
in
push
pop
mov
je
cmp
sar
loope
push
cld
pop
out
or
icebp
addb
sahf
pop
out
sti
jne
cmp
xor
fimull
push
xor
test
add
sbb
push
sbb
in
sbb
mov
rolb
ficompl
cmp
outsb
mov
or
adc
stos
movsl
lock
jle
dec
stos
sbb
pop
cmp
jnp
ss
aam
pop
cmp
call
mov
cwtl
xchg
adc
aas
sub
mov
gs
jmp
test
leave
adc
inc
fildll
push
mov
inc
std
mov
hlt
in
ret
mov
cmp
popa
mov
push
and
cltd
mov
or
fcmovbe
jmp
pop
arpl
xchg
xchg
mov
or
outsl
fidivrl
fidivrs
xchg
pop
jno
adc
dec
out
and
ss
rcrl
cmpb
aaa
loope
stc
push
mov
xor
fwait
leave
test
mov
das
sub
cmp
cmp
lds
add
or
inc
aad
int
aad
sub
jmp
mov
pop
mov
sub
cmp
add
js
pop
outsb
mov
sbb
mov
ficoml
xlat
int
xchg
sahf
ds
dec
jae
dec
dec
pop
push
xor
push
sbb
xor
mulb
jno
je
sub
xchg
lahf
xchg
shrb
scas
in
lods
push
aad
mov
cmpsl
mov
cmp
push
jge
mov
or
icebp
leave
pop
lods
daa
adc
jbe
dec
xchg
jns
add
push
pushf
and
push
in
pop
push
gs
mov
lods
enter
and
adc
test
adc
mov
xorl
mov
push
iret
jns
ljmp
in
add
push
mov
push
stos
fisttpl
sbb
subb
jnp
into
mov
into
cmp
fstpt
adc
aaa
jns
andb
jmp
xchg
mov
lret
popf
push
mov
add
xchg
or
aad
xchg
push
out
jne
or
dec
outsb
out
pop
stos
dec
test
subb
stc
ret
clc
scas
push
xlat
sbb
jb
sub
mov
pop
pop
rcrl
out
xchg
pop
push
push
inc
repz
mov
xorl
insb
xor
in
xchg
popf
adc
daa
jae
nop
fcmovnbe
mov
xchg
dec
shll
jno
ret
lds
dec
aam
insb
or
stos
ret
sbb
imul
xor
out
mull
imull
xchg
test
in
rclb
mov
cltd
and
or
in
imul
es
push
and
cmp
mov
ss
leave
mov
mov
jbe
xlat
ss
inc
lods
dec
enter
mov
adc
mov
lods
clc
xchg
push
xlat
adc
aaa
pop
push
xchg
push
sti
lcall
jl
subb
sti
sub
add
insl
shrl
add
xlat
ja
imul
and
jo
ds
int3
ja
cmp
cmp
loop
aad
inc
jge
sbb
outsl
jno
mov
add
push
hlt
mov
clc
or
imul
mov
adc
sbb
jb
js
mov
in
jg
cltd
mov
aam
push
bt
lcall
pop
jg
dec
adcb
loopne
dec
out
inc
cmp
push
dec
jbe
and
mov
out
sub
or
loop
cmp
dec
fdivrl
xchg
fldt
push
inc
add
es
xlat
mov
in
mull
scas
sbb
or
arpl
xchg
mov
aad
xchg
inc
adc
pop
icebp
arpl
pop
aad
jle
mov
cmp
mov
mov
aad
cmpsb
and
stos
sub
sahf
jmp
mov
int
call
jle
mov
call
ja
std
icebp
push
test
in
into
push
adc
xor
mov
sbb
rcl
rcrl
mov
xor
inc
mov
push
ljmp
dec
enter
push
xor
lods
fsubrl
loope
mov
xchg
lret
sbb
fcomps
pushf
mov
mov
push
sub
popa
jns
cld
shlb
incb
lcall
test
jo
jp
stos
cmp
mov
ret
negl
push
mov
pop
xor
fidivrl
fstps
sub
sar
lret
dec
inc
add
jns
clc
arpl
push
jbe
xchg
xor
mov
adc
int
les
mov
sbb
mov
outsb
sbb
mov
mov
dec
pop
or
jle
mov
xchg
push
push
btcl
mov
inc
movsb
lret
lods
outsb
stos
or
stos
push
negl
imul
fcomps
shl
mov
int3
lret
jne
ffree
push
sarb
dec
add
sarb
dec
inc
pop
test
movsb
jno
mov
adc
fucom
xor
test
jp
jbe
add
scas
pop
outsl
mov
in
mov
insl
sbb
dec
subb
mov
cmp
mov
sti
push
fnstsw
std
lahf
xchg
pop
pusha
lock
sti
addr16
movsl
popl
lock
dec
gs
lds
fnstsw
cwtl
repnz
mov
in
cli
xchg
sahf
ficomps
mov
cmp
add
cmp
inc
or
lret
push
push
cmp
call
add
stos
pop
adc
xor
mov
or
daa
aam
mov
fbstp
push
dec
mov
lea
push
aas
sub
xorb
pop
xor
lods
or
repnz
rcr
stos
adc
pop
test
inc
adc
ja
in
mov
stos
addr16
pop
fadd
cmp
sti
cltd
xchg
adc
movsb
in
jbe
inc
sahf
lret
das
or
mov
push
cmp
xor
insb
lcall
cmp
sbb
call
stos
cwtl
inc
sub
xor
test
test
adc
inc
jbe
roll
jle
in
jne
pop
fmull
xchg
jecxz
push
sahf
add
in
sbb
and
or
xor
ljmp
sbb
mov
jl
mov
in
xchg
daa
inc
push
push
mov
push
push
out
mov
stc
loop
aam
test
jne
and
pop
outsb
dec
xlat
pusha
leave
insb
adc
aas
in
in
insl
in
or
pop
inc
setg
mov
js
in
and
push
add
jb
ss
pop
sbb
jns
lret
cmpl
rclb
dec
mov
mov
insl
pop
dec
imulb
std
mov
push
incb
fadd
sbb
mov
in
push
lahf
iret
bnd
cltd
cmp
or
jecxz
pushf
mov
xchg
mov
cmp
lret
gs
arpl
adc
push
pop
imul
lods
xchg
mov
orl
push
jo
xchg
pushf
inc
dec
jo
imul
mov
test
fisubrl
jp
hlt
or
lods
daa
enter
shrl
sti
sti
jnp
push
sub
or
test
mov
nop
call
xlat
sub
cmp
or
ret
bound
dec
cli
lock
sarl
int
lret
sub
cmpsb
andl
add
pusha
jge
lea
mov
outsb
sbb
push
outsb
xchg
cmpsb
int
inc
sub
pop
cmpsl
in
push
imul
mov
cld
lea
cwtl
cld
jne
nop
cs
jmp
push
fadds
das
out
ljmp
xchg
adc
popa
mov
add
jg
mov
cmp
jnp
fistpll
mov
pusha
mov
daa
imul
decl
mov
jb
cmp
clc
bswap
ds
xor
mov
mov
addl
adc
jne
jmp
in
mov
push
sbb
cli
inc
test
add
into
mov
aas
or
addl
flds
stos
push
cmp
add
dec
and
mov
rorb
sbb
add
xchg
xchg
lods
ret
pop
push
jae
out
std
stos
outsl
ja
movsb
sub
scas
cmp
adc
test
xor
dec
xchg
mov
cmp
icebp
cli
jmp
out
pop
jge
shl
or
pop
mov
dec
inc
pop
pop
fadds
sub
sub
es
add
shll
les
loop
push
push
sub
repnz
rcrl
cld
cmpsb
stc
test
pop
mov
bound
xchg
mov
inc
pop
xchg
sbb
lea
or
mov
insl
or
mov
into
cmp
icebp
pop
mov
hlt
push
adc
adc
push
in
push
mov
dec
jo
push
cs
add
iret
scas
and
cs
pushf
mov
aaa
inc
jg
test
dec
push
les
mov
jg
loopne
out
add
clc
scas
ficoml
sbb
push
fcmovnb
add
das
cmp
sub
clc
flds
xchg
and
dec
adcb
cmp
rcrb
rorb
dec
into
or
hlt
mov
ret
cmp
imul
in
cmpb
data16
or
cmpsl
andb
mov
test
rcr
mov
jno
lods
xor
fdivrl
roll
lahf
stos
pop
xor
mov
jmp
mov
dec
inc
mov
movsb
sbb
cvttps2pi
insb
inc
dec
pop
and
jns
out
stos
dec
out
fcmovnu
ret
jg
or
bound
jo
mov
pop
movsb
adc
fidivrs
daa
shll
push
jle
lea
jae
mov
mov
xchg
push
xor
sub
test
sbbb
mov
stos
push
dec
sbb
push
rcrb
xchg
pop
or
ds
sbb
out
out
xor
loope
adc
jp
add
out
xor
leave
pop
xor
in
addr16
push
and
dec
xchg
jecxz
lea
jno
xor
jno
lods
out
es
loopne
dec
sbb
aas
xor
mov
iret
xchg
fsubrs
jge
test
sbb
ds
dec
xchg
xchg
push
aaa
sub
sbb
scas
xor
sbb
repnz
movsl
lods
jge
pop
decb
inc
in
add
cmp
or
inc
mov
ljmp
cltd
insl
pop
test
pop
aad
inc
jle
fucom
and
xchg
push
cmc
push
jns
scas
cmpl
cmp
test
cs
mov
into
mov
mov
sub
adc
mov
sub
lret
sbb
out
in
fwait
and
call
pop
fwait
scas
andb
dec
add
add
pop
cs
in
or
lods
xchg
xchg
push
push
loop
ret
insb
pop
or
aas
test
dec
inc
jecxz
pop
pop
orb
dec
sub
hlt
fdivrs
pop
dec
nop
dec
rcll
sbb
cwtl
in
jne
test
inc
pop
dec
shrb
push
cmp
mov
push
push
std
insl
popa
inc
adc
aaa
xor
jae
daa
xor
pop
stos
test
dec
dec
pushf
cmp
sub
hlt
lret
jmp
push
loope
xchg
pop
mov
jae
enter
jno
mov
adc
push
das
out
ss
clc
rcl
mov
add
adc
cmp
xchg
mov
shll
push
inc
cld
and
aam
stc
xchg
outsb
out
ds
jge
cmpsl
jle
mov
sub
jge
sbb
inc
fucomi
sbb
add
inc
hlt
push
or
rcl
lods
cmc
loope
gs
and
movsl
pop
in
sub
or
jns
xchg
cwtl
or
mov
ss
rcrl
jb
in
lret
notb
or
int3
or
popf
ljmp
nop
and
mov
outsl
push
cmp
push
xchg
and
into
les
push
insl
rcr
lret
mov
lea
jo
lret
dec
outsb
add
pop
cmp
fstpl
xchg
dec
add
push
xor
pop
notb
mov
ss
test
loopne
push
rcrl
mov
les
popa
jo
xchg
push
push
jae
aaa
jg
push
add
xchg
push
pop
ja
dec
or
sti
jno
or
mov
jnp
hlt
sub
inc
es
xlat
out
mov
sar
mov
xor
xor
xor
popa
pop
mov
clc
test
push
mov
mov
cmpsl
or
xorb
pop
sub
enter
sarl
mov
and
sti
in
mov
in
fisubrs
adc
pop
mov
aas
into
stc
mov
push
pushf
test
andb
movsb
mov
inc
mov
lea
sub
mov
jae
mov
xor
xor
loop
sti
je
sub
cmpsb
push
pushf
fcomps
repnz
cmp
shll
mov
icebp
int
mov
lret
push
mov
clc
repz
sbb
mov
rcll
inc
out
addb
mov
jo
xchg
xchg
rclb
sbb
jnp
mov
xchg
dec
mov
mov
mov
les
arpl
add
test
jb
sub
xor
out
cli
pop
and
fcmove
test
pop
aad
into
cmpb
test
ret
mov
stos
lcall
sub
das
xor
fiaddl
or
outsl
and
inc
jle
ja
mov
adc
enter
pop
movsb
insb
xor
add
mov
mov
lods
call
imul
scas
loope
sub
iret
sbb
int
sti
push
bound
nop
inc
mov
pop
into
pusha
or
inc
or
cmp
push
roll
mov
mov
es
mov
outsb
shl
or
mov
scas
popa
stc
inc
dec
cmp
sub
ja
lcall
cmp
rcll
xor
jbe
dec
push
fidivl
jp
mov
mov
dec
cmp
std
rcrb
pop
in
mov
mov
repz
adc
int
xchg
lea
pop
and
add
mov
pop
xchg
inc
out
mov
stc
push
in
push
dec
mov
jecxz
and
loop
push
dec
pop
flds
test
mov
cmpsl
push
stos
or
loopne
rolb
fidivrs
push
cmp
add
sub
lods
sbb
imul
test
lret
call
subl
shrb
push
js
xchg
or
je
mov
stc
cmc
shll
push
push
dec
shlb
and
cmp
and
int
pop
mov
pop
jmp
xchg
notb
popf
les
inc
bound
inc
pusha
add
push
pop
add
sbb
add
das
dec
push
shrb
in
mov
negl
pusha
fstpt
xor
jne
pushf
pop
inc
mov
sti
push
pop
loop
jo
test
lods
push
mov
into
in
into
pop
sub
sub
jl
jo
jp
xchg
inc
pop
push
jne
inc
adc
xchg
in
rcll
mov
jp
inc
or
xor
push
and
fs
or
sbb
lods
test
push
jmp
pop
arpl
add
or
in
lock
pop
and
sub
jno
rcll
mov
inc
inc
sub
pop
push
mov
addb
sub
mov
mov
mov
daa
dec
stos
dec
cmpsb
or
mov
mov
jl
xchg
mov
or
out
rcrl
adc
lret
rcll
insb
lret
lret
sub
cmp
mov
fcmovbe
leave
mov
ljmp
jns
pushf
sbb
int
hlt
dec
jmp
icebp
add
popf
mov
jp
scas
push
inc
jne
pusha
jb
or
mov
ja
adc
sbb
insl
clc
mov
jae
pop
rcll
dec
sbb
loope
jnp
jecxz
shlb
add
mov
loope
lcallw
adc
mov
out
test
inc
test
call
pop
pusha
sti
cwtl
fdivrs
xchg
sti
out
rorb
mov
stc
or
ret
addl
sbb
jge
mov
add
pop
inc
jo
imul
push
fstpt
cs
mov
cmp
inc
sub
pop
sbb
mov
data16
es
or
shll
adc
push
xchg
cmpsl
scas
in
test
jecxz
sbbb
mov
lea
jecxz
arpl
jle
imul
in
into
pop
pop
mov
jae
push
and
sti
test
xchg
add
dec
xchg
ds
ja
xchg
mov
inc
dec
icebp
xchg
fimuls
adc
out
jno
push
xor
sbb
push
push
cs
or
xor
sbb
in
fs
aam
jns
mov
or
aaa
sysret
clc
sub
jg
xchg
gs
cmp
es
js
shrl
into
jns
sbb
sub
dec
popf
lret
push
push
cmp
cmp
leave
add
mov
popa
pop
jl
and
jmp
dec
iret
je
rcrb
sbb
jl
dec
filds
add
or
insb
pusha
jg
xor
mov
xchg
insl
sub
repz
test
jne
cmp
mov
add
negl
lret
and
int3
adc
inc
xchg
insl
lahf
into
lods
pop
js
ret
inc
pop
sahf
inc
stos
add
les
add
test
push
mov
adc
lcall
and
scas
jp
in
jno
jnp
sti
cmpsb
sbb
push
and
mov
icebp
sub
fidivrs
jae
cltd
sub
adc
dec
xchg
cli
mov
vmread
in
sti
sar
pop
mov
aaa
fmull
sarl
and
lock
or
out
movsb
flds
mov
out
cmp
lods
jb
clc
mov
mov
push
sbb
iret
cwtl
jne
xor
and
mov
mov
mov
scas
jecxz
push
mov
inc
addl
cmp
arpl
mov
das
cwtl
int3
push
push
je
repnz
dec
sub
xchg
ret
pushf
or
test
pop
aam
mov
pop
sbb
outsl
cli
mov
test
les
mov
dec
aam
pop
aad
repz
pop
mov
scas
imul
bound
lea
sbb
lcall
cli
ljmp
adc
pop
adc
insl
inc
in
in
pop
dec
mov
sahf
and
ret
outsl
enter
xchg
xor
incb
dec
mov
outsb
stc
pop
add
into
mov
jbe
xchg
fisttpl
addb
sbb
or
or
bound
int
cmp
mov
out
inc
xor
icebp
add
jno
test
mov
xlat
adc
imul
jnp
jl
mov
repz
aas
pop
scas
hlt
insb
xchg
and
test
scas
addr16
jae
lcall
in
mov
xorl
ret
fwait
out
mov
inc
mov
push
xchg
pop
sub
loop
fnsave
jo
push
pop
nop
and
mov
jmp
add
cli
pop
lods
and
inc
lahf
push
adc
jo
jecxz
sbb
arpl
jp
cmpsl
aaa
jmp
outsb
xor
xchg
icebp
inc
and
jle
pop
inc
popa
std
icebp
pop
nop
fbstp
xor
dec
add
decl
pop
shr
and
in
sub
pop
popf
xor
jmp
dec
loope
adc
sbb
jmp
and
and
mov
and
daa
mov
test
push
ss
xor
loope
addr16
mov
dec
and
jae
adc
push
outsl
leave
and
int3
lods
stc
ljmp
pop
test
adc
das
inc
cmp
jno
std
lea
setne
test
sarl
jle
dec
out
mov
xor
aas
mov
jbe
js
out
call
push
mov
ret
xchg
jmp
dec
mov
mov
rcll
jae
mov
xor
dec
repnz
imul
push
dec
pop
push
int3
popf
mov
sbb
cmp
divl
mov
cmp
cmp
xchg
dec
sub
cmc
stos
cmpsb
gs
inc
mov
data16
adc
rolb
lahf
dec
ss
mov
fs
dec
ret
jmp
pusha
ret
cmp
jb,pt
cmpsb
scas
inc
mov
mov
imull
inc
pop
xchg
pop
andb
std
sub
das
pop
sahf
xor
lds
lahf
push
andb
rorb
push
bound
mov
add
inc
shrl
xlat
pop
syscall
or
pop
in
aam
cmp
mov
hlt
imul
pop
sbb
test
loopne
int
into
scas
lcall
and
add
outsl
js
xchg
mov
js
sub
div
pusha
mov
bound
sbb
in
sub
movsl
outsl
adc
js
scas
push
fldt
or
sub
pop
mov
cli
sbb
or
faddl
adc
test
mov
dec
rclb
sti
jmp
inc
jge
cmp
sbb
jbe
push
cmp
fdivs
cmp
mov
shll
test
jmp
jecxz
xor
inc
into
popf
aaa
dec
jge
ret
push
xor
das
movsl
scas
inc
aaa
ljmp
sub
sbb
cld
fld
in
repz
ret
lcall
sahf
mov
aas
lea
stos
je
fidivl
jo
adc
cmp
cmp
dec
hlt
mov
mov
les
loop
ret
or
and
test
daa
dec
or
in
ds
add
pop
xor
setge
pop
mov
push
and
or
pop
xor
xor
dec
add
cltd
icebp
cs
push
lret
scas
loope
test
loope
push
cmp
out
xlat
mov
xlat
jl
mov
fwait
lret
add
jno
insb
fsubp
mov
repnz
xchg
repnz
cmpsl
adc
popa
das
push
roll
lods
ss
jne
cwtl
xor
das
adcb
cmp
push
test
mov
jae
pop
jne
aam
stos
xor
in
stc
popa
pop
push
ret
pop
or
inc
dec
jae
mov
push
xor
jbe
lds
fs
outsl
lret
pop
sub
sbb
and
adc
data16
and
jo
stos
jg
mov
movl
mov
push
sahf
addr16
pop
aam
pop
ret
out
popa
or
and
stc
jg
xor
jae
mov
pop
out
mov
and
xor
test
push
sub
xor
fwait
out
lods
arpl
pop
inc
shrb
cmp
mov
fdivs
call
roll
shl
or
cmp
sbb
push
dec
fistpll
sub
push
mov
xchg
mov
cmp
and
fdivl
sbb
cli
add
mov
sub
scas
lods
gs
push
fisttpll
sti
clc
call
repz
out
lret
rorl
cltd
dec
dec
pop
push
shrd
mov
fcom
stos
lcall
stos
and
xor
add
and
fs
xor
inc
inc
ds
cmpsl
push
call
mov
testl
xchg
mov
lods
ret
jnp
das
adc
divl
lahf
les
repnz
sbb
out
pop
push
jge
dec
push
jnp
into
mov
imul
mov
je
xchg
negl
inc
int
mov
sbb
lahf
sbbl
or
pop
xor
mov
ror
loope
pusha
mov
mov
stos
mov
aam
sbb
aad
xchg
std
dec
in
pop
jns
cmp
jae
jl
jb
fwait
jl
outsb
cmp
xlat
add
rorb
push
insl
pushl
pop
xchg
cmp
cmp
movq
push
bound
sbb
mov
fsubrs
int
or
lods
loopne
pop
out
cmp
sub
push
lock
pop
stos
mov
dec
cli
sub
pusha
cmpsb
pop
lods
pop
ret
roll
mov
xor
sahf
stc
ja
mov
mov
pop
pusha
iret
jne
or
mov
arpl
push
fucomp
adc
cmc
inc
mov
repz
xor
subl
mov
ja
testl
or
imul
into
jle
cmp
xor
icebp
push
push
xor
rcl
icebp
pop
xor
add
out
sbb
dec
adc
enter
out
repnz
fisubl
mov
dec
sbb
and
mov
popf
shr
sbb
sti
mov
insl
push
cli
out
push
sbb
cld
imulb
std
xlat
arpl
push
call
mov
jbe
test
sbb
mov
jae
adc
call
sub
xor
ret
popf
gs
mov
lret
push
sbbl
loopne
out
mov
or
pop
push
rol
in
leave
daa
addr16
sub
inc
cld
xor
dec
lcall
or
repz
nop
ljmp
nop
mov
insb
mov
fcmovnu
pop
imul
scas
jnp
stc
jge
in
mov
dec
std
sbb
lahf
ds
adcl
shll
jmp
xor
fidivs
fistpl
inc
push
pushf
xchg
jle
xchg
loopne
in
scas
lods
rorb
int
fdivs
or
pop
icebp
cmpsl
mov
popf
in
mov
hlt
mov
dec
dec
mov
das
adc
inc
and
mov
into
inc
mov
pop
sbb
cld
dec
ret
insb
movsl
aad
rorb
xchg
sbb
lret
lock
insb
cmp
ja
hlt
lret
mov
inc
mov
in
jmp
xchg
lret
mov
mov
test
jb
inc
fnstsw
out
loop
pushf
pop
aaa
pusha
jae
sti
es
cmp
push
test
cmp
xchg
fstl
stos
xchg
pop
jb
popa
mov
ja
aas
adc
jns
xor
and
jae
cmc
mov
aas
dec
lcall
negl
imul
mov
lds
push
bound
in
sbb
mov
js
fs
dec
ja
in
sub
pop
or
jno
xor
dec
mov
test
test
cmpsl
incb
testl
das
push
hlt
fabs
xchg
fistpll
sbb
mov
movsl
or
rolb
cmc
xor
add
ja
sub
fsubp
push
cld
cs
fidivrs
insb
lds
mov
repnz
clc
xchg
jp
data16
lret
xor
and
mov
sub
dec
fcomp
xor
adc
lds
rsqrtps
sti
push
inc
arpl
cmp
inc
loop
adc
xchg
inc
push
xor
ja
dec
fsts
inc
sahf
xchg
and
jne
mov
mov
mov
jmp
pop
pusha
int3
xchg
jle
test
add
adc
sbbl
mov
scas
test
test
fisubl
jns
insb
rorb
fs
pop
inc
pop
and
lods
push
lret
daa
sbb
xchg
mov
out
jmp
outsl
shl
leave
movsb
pop
sbb
jg
xlat
lahf
fsubrl
popf
fsubr
or
mov
or
xor
je
and
sub
aas
mov
inc
daa
addr16
push
jno
jl
pop
data16
mov
bound
pop
jecxz
or
xchg
push
sub
xor
sbb
xor
mov
mov
loop
imul
dec
adcb
sbb
and
jecxz
or
not
ss
repz
push
mov
and
add
adc
mov
outsl
or
outsb
sbb
icebp
jmp
ljmp
xchg
out
add
dec
cmc
mov
sub
push
addr16
push
adc
mov
in
addl
mov
cld
dec
iret
push
or
les
xor
push
pushf
hlt
add
popl
in
int
cmp
adc
add
jae
arpl
enter
pop
dec
pusha
xchg
lret
int
jecxz
or
push
xor
movsl
inc
enter
cld
mov
and
mov
movsl
mov
cmp
lods
loop
dec
out
inc
loopne
push
inc
mov
xchg
cmp
inc
data16
and
mov
sbb
dec
imul
sti
lods
or
push
pop
sub
pop
out
ljmp
sahf
mov
dec
mov
pop
imul
scas
in
in
in
xchg
cmp
roll
repz
or
pop
push
push
loop
mov
mov
mov
jle
cli
jp
push
adc
and
int3
gs
fisubs
sahf
or
xlat
push
xchg
mov
dec
or
fsts
sub
loop
or
push
xor
not
roll
xchg
out
jmp
xor
push
out
sti
mov
xor
mov
lahf
mov
jmp
adc
add
fimuls
inc
negl
enter
add
outsb
pop
xchg
nop
push
sbb
push
mov
shrb
ficomps
inc
imul
xlat
mov
sbb
sbb
mov
adc
mov
pop
pop
and
add
xchg
and
or
sub
push
cmp
data16
xchg
sbbl
push
sbb
mov
dec
popf
jnp
outsb
cmpsl
dec
push
xchg
push
int
push
sbb
xor
and
movsb
add
sahf
xchg
sub
pusha
sub
xor
mov
popa
xchg
daa
or
ss
ds
dec
lea
dec
xor
push
int
lea
inc
into
bound
pop
pop
push
and
xor
in
and
xor
adc
pusha
ror
ja
mov
std
insb
fistl
mov
jg
das
dec
add
pop
jp
cltd
push
outsb
inc
sbb
and
jnp
or
movsl
loope
push
ja
pushf
fisttpl
and
xor
inc
icebp
sub
fbld
mov
arpl
jbe
imul
in
in
dec
scas
jbe
cmp
repnz
mov
es
add
enter
ret
add
lret
mov
aam
mov
mov
std
adc
sub
fstpt
outsb
sub
lret
fstl
mov
jl
jo
sub
dec
add
movsb
push
xchg
sti
inc
cmpsb
dec
shrl
or
pop
out
or
mov
adc
jle
repnz
in
jge
lock
mov
jmp
incl
inc
icebp
cs
and
xor
push
adc
add
add
mov
inc
xlat
jo
ficompl
cmp
addl
test
movsl
bound
and
fcompl
mov
cs
cs
pop
adcb
es
iret
test
lock
movsl
andb
jae
aas
in
mov
in
dec
and
in
sbb
jne
insl
int
push
andl
mov
sub
mov
and
cwtl
add
in
test
mov
bound
lock
push
jno
out
adc
popa
add
mov
xchg
test
imul
sbb
add
pop
mov
ja
addr16
dec
hlt
aam
push
vprotw
pop
pop
cltd
jge
loopne
lret
mov
out
addr16
sbb
pop
daa
inc
push
and
mov
dec
ret
xchg
adc
mov
jbe
inc
fdivrp
jge
mov
jmp
sahf
inc
and
imul
inc
adc
mov
cmp
mov
push
xchg
cmp
movsl
xchg
aam
mov
neg
mov
cmp
mov
mov
inc
fs
sbb
cmp
aaa
stc
xchg
bound
scas
xchg
loopne
jns
rorb
cmc
pop
ljmp
push
std
arpl
mov
mov
push
and
es
jle
pop
sbb
fldl
bound
mov
lcall
and
hlt
les
sub
das
sub
jmp
cmpsl
sbb
into
ss
in
lret
cmc
je
adc
pop
cld
pop
lret
mov
mov
call
out
movsb
lock
jnp
out
sub
mov
lods
dec
jecxz
xor
adc
jae
in
and
sarb
cmp
les
jmp
icebp
pop
push
das
arpl
xlat
inc
dec
push
sbb
xor
mov
hlt
cmpsb
xchg
ficomps
pop
inc
sub
out
in
aas
fistpl
mov
push
push
add
adc
xchg
in
mov
sub
sarb
or
leave
outsl
fildl
out
ljmp
add
dec
xor
or
jae
dec
pop
push
adc
pusha
das
in
test
jnp
roll
cmp
icebp
loope
sti
inc
std
fwait
inc
pop
add
insl
inc
repnz
dec
call
jge
outsl
sub
pusha
and
pop
ds
sub
fldcw
data16
aam
out
ja
add
pop
jne
mov
mov
cld
push
and
and
jge
push
pop
xorl
out
mov
xor
dec
add
inc
loope
pop
mov
sub
test
dec
xchg
dec
push
xor
mov
xchg
popf
add
or
outsl
xchg
ds
cli
sub
hlt
pop
insl
repz
loopne
stos
push
rcr
inc
or
inc
jg
int
mov
hlt
mov
cmp
stc
add
and
idiv
xchg
popa
call
push
pop
cmp
mov
mov
inc
ds
jg
test
neg
imul
je
pop
mov
popf
mov
cmp
ret
popa
sti
xor
push
push
pop
sub
add
out
jbe
push
in
insb
lock
daa
icebp
xor
divl
ss
aam
and
mov
lods
fdivr
les
in
out
and
je
call
xchg
ss
xor
xor
mov
cli
mov
xchg
das
jl
pop
jmp
insb
and
shrl
jg
xor
jo
lcall
mov
add
lcall
mov
dec
xor
fmull
aas
std
dec
dec
xchg
and
into
mov
jo
test
pop
pop
push
cld
ret
or
or
int3
add
inc
jecxz
cmpsb
outsb
cwtl
jbe
xor
adc
add
inc
jge
jecxz
sahf
cmp
add
imul
shll
cmp
pop
and
jg
imul
cmp
inc
pop
push
xor
jg
xchg
in
cmp
das
ret
lret
lahf
outsl
mov
mov
mov
insb
jns
add
iret
in
int3
xchg
ror
flds
and
xchg
out
and
inc
sahf
lea
sti
into
in
clc
dec
pusha
in
jne
bound
jno
lcall
cmpsb
repnz
mov
xor
daa
ljmp
lret
lods
pusha
xorb
dec
jno
jge
scas
stc
jnp
fstps
and
xlat
xchg
inc
cmc
ja
ret
inc
dec
mov
xorb
je
jno,pt
icebp
push
xchg
lods
xor
pop
jo
sbb
add
fdivrl
cmpsl
jbe
mov
xchg
aaa
out
adc
mov
cwtl
jmp
adc
sub
jmp
inc
out
movsb
lret
popa
pop
sub
xor
mov
mov
addr16
iret
jmp
dec
or
mov
insl
cmp
iret
out
jno
loop
jnp
out
sbbl
movsl
neg
xchg
xchg
outsl
pop
jecxz
ljmp
pop
pop
sub
inc
jge
int
and
call
dec
or
xor
push
test
jge
pushf
pop
int3
mov
in
std
roll
leave
jno
mov
dec
ror
xor
int3
pop
mov
xlat
dec
out
je
outsb
xlat
les
fsubl
mov
repnz
inc
mov
imulb
dec
xchg
ss
hlt
inc
enter
lahf
xchg
xchg
jle
cwtl
inc
mov
jb
aas
mov
mov
gs
or
in
sbb
push
pop
mov
dec
dec
push
mov
pop
insb
add
nop
xor
fistl
mov
cmpl
mov
sahf
adc
push
pop
pop
cmp
mov
shl
xor
xor
xchg
out
add
add
or
sti
dec
xor
lock
cwtl
mov
sub
add
in
cmp
mov
xlat
adc
sbb
push
xor
xchg
cwtl
sbb
rclb
mov
mov
jmp
loopne
lahf
aaa
inc
rcll
lea
mov
adcb
pop
into
jmp
xchg
mov
cld
jnp
sahf
imul
incl
mov
xor
add
sbb
dec
outsl
popa
cmp
out
mov
jecxz
cli
add
movsb
rorl
fs
xchg
call
popf
mov
cmc
mov
das
jmp
cld
movsb
std
lods
jge
mov
jns
pushf
xchg
jg
mov
jns
add
mov
pusha
jns
imul
aas
cmpsl
sub
pop
cmp
sahf
mov
adc
cs
hlt
gs
or
divl
jg
xchg
push
push
mov
xchg
imul
popa
add
add
fimull
aad
xchg
enter
sub
cltd
sarb
bound
cmpb
movsb
mov
adc
jle
xchg
adc
movl
jl
outsl
ficoml
lret
test
les
or
mov
pusha
jmp
dec
push
stos
xchg
es
lods
loope
or
mov
movsb
mov
rcrb
ss
frstor
dec
ret
xor
pop
push
nop
and
popf
incl
jno
inc
ret
fisubrl
addb
jbe
test
lret
push
orl
jecxz
add
add
loop
rol
and
fcos
push
mov
out
sbb
sbb
add
adc
jl
inc
xchg
cmpsl
inc
or
and
jmp
sub
paddusb
popf
outsb
mov
jmp
mov
lods
jns
cmp
mov
add
sbb
lds
lret
pushf
test
jae
push
imul
push
xor
rorl
fcompl
pop
sbb
push
mov
mov
inc
imul
push
mov
mov
int
movsb
in
cmp
add
insl
dec
outsb
or
or
inc
out
leave
sbb
push
jo
add
cs
mov
dec
mov
in
loopne
fsubl
fmuls
shll
loop
loope
cld
sub
mov
xchg
jo
pushl
jl
fldt
xchg
arpl
sahf
cld
xor
and
add
mov
cmovg
jle
push
in
je
inc
rolb
iret
ljmp
cmp
stos
jg
xchg
sub
and
out
and
aad
popa
data16
mov
ret
mov
shrl
pop
dec
pop
mov
daa
aad
mov
mov
shr
sbb
push
pop
or
je
xchg
shl
mov
dec
iret
stos
bound
xchg
add
mov
push
fsubr
push
dec
dec
dec
adc
daa
aad
push
jmp
test
repnz
cli
dec
and
addr16
jae
pop
sbb
leave
inc
fdivs
add
loopne
xor
aad
in
push
xlat
into
outsb
mov
insw
mov
dec
cmp
sub
andl
inc
lods
jns
cmp
push
movsl
push
cltd
leave
xchg
cmpsl
mov
ret
cld
out
js
aaa
add
cmp
xor
fcomps
mov
xor
mov
and
and
xchg
pop
out
sub
fucomp
pop
mov
mov
sar
mov
roll
stc
mov
pop
xchg
mov
mov
push
call
push
fs
shlb
pop
clc
or
cmp
or
mov
jns
xor
scas
dec
mov
pushf
cmpsl
sub
ds
and
insb
hlt
mov
dec
push
push
shlb
jmp
in
ret
xor
pop
subb
xor
outsl
xor
and
pushf
jo
sbb
movsb
sbb
mov
pop
fs
pop
or
outsl
dec
push
jg
mov
mov
xorb
leave
in
clc
imul
and
xor
icebp
add
sbb
les
decl
fsubl
test
jne
popf
cwtl
or
daa
incl
xchg
push
insl
orb
ret
mov
lret
cmp
jle
fs
data16
jg
shll
stos
mov
sbb
test
inc
sub
lock
pusha
adc
add
mov
pop
movsb
mov
loope
xchg
xchg
rol
xchg
dec
jbe
cwtl
sbb
iret
sahf
sbb
pop
push
jae
sub
imul
fcoml
sbb
dec
cmp
xlat
xchg
or
adc
and
pusha
nop
mov
adc
sbb
aaa
add
outsb
lds
call
sub
mov
popa
sahf
out
in
push
sbb
or
in
enter
xchg
loope
cs
out
sbb
jbe
pop
pop
notb
cmpsb
mov
out
addr16
dec
jl
mov
mov
jecxz
jae
push
clc
mov
sub
or
out
sub
test
or
cmc
jb
in
arpl
insb
inc
dec
inc
ljmp
jmp
mov
ds
in
roll
inc
jmp
into
mov
fbld
neg
mov
popa
stos
cli
xchg
mov
cs
sub
aam
clc
imul
das
add
jne
dec
cli
jae
daa
or
inc
icebp
mov
or
imul
sub
sbb
cmp
popf
adc
sub
popa
dec
cmp
pop
cmp
adc
xchg
lods
mov
lret
add
mov
pop
pop
jecxz
cmp
inc
jbe
fucomip
adc
out
mov
int3
inc
cmp
insl
sub
sar
cwtl
int3
rcr
xchg
les
jp
icebp
mov
test
sub
cld
popa
dec
cmpl
movsl
jno
inc
cli
loop
cmc
mov
adc
xor
loope
jo
int3
out
aas
add
sbb
pop
add
jbe
push
das
aam
fldl
out
pop
push
mov
loope
pop
inc
test
cli
sub
mov
mov
push
mov
pop
mov
into
insl
mov
push
xor
adc
incb
adc
leave
inc
mov
sbb
add
xchg
ss
sub
jle
mov
mov
das
inc
mov
pushf
pop
xchg
xchg
cmp
dec
and
push
adc
push
cmp
pop
mov
pop
imul
enter
int
imul
stos
out
stc
or
ja
test
pop
mov
inc
lcall
fwait
pop
xor
or
fisttps
mov
inc
cmc
icebp
imul
data16
add
cmp
pop
jge
mov
fdivp
call
lret
cltd
jnp
xchg
enter
stos
cmp
repnz
dec
xchg
push
mov
or
fisubl
mov
xchg
andl
jnp
mov
into
in
movsb
inc
fnsave
jne
lea
jns
test
fdiv
pop
xchg
scas
sub
mov
shl
addr16
or
add
lea
mov
fwait
hlt
sbb
dec
movsl
adc
loopne
mov
mov
stos
fidivl
adc
inc
arpl
and
adc
pop
bound
jno
lret
mov
in
dec
jp
inc
lods
cwtl
fs
add
mov
inc
dec
push
inc
scas
mov
daa
xor
mov
movsl
xchg
mov
arpl
movsl
bound
mov
cmpsb
and
daa
cmp
and
xchg
jae
push
ljmp
sbb
leave
and
stos
lods
pop
lret
mov
xor
jno
sti
int3
addr16
bound
xchg
xchg
sub
ds
out
jae
jle
jbe
or
lcall
test
mov
out
pop
rorb
and
mov
mov
jne
cltd
jne,pn
jo
inc
mov
mov
push
loope
push
mov
subl
ret
xlat
inc
lock
inc
push
loopne
push
adc
xor
loop
fs
gs
sbb
cmp
cli
sub
addr16
test
or
dec
out
pop
jp
push
in
sub
xchg
push
push
insb
shll
lods
sbb
inc
jnp
dec
sbb
out
outsl
mov
xchg
std
adc
mov
jecxz
movsb
xchg
dec
push
icebp
shrl
popa
ret
imul
jnp
out
movsb
enter
outsl
and
jbe
arpl
movsl
pop
cmp
push
incl
xor
rcl
cmpsl
stc
sti
fcomps
cltd
and
mov
add
lcall
popa
iret
or
xchg
or
push
sub
jbe
and
sbb
daa
cmp
push
mov
or
cmp
dec
sub
mov
mov
fiadds
imul
arpl
pop
test
cmc
stos
and
mov
push
cmp
test
xor
jb
xchg
clc
fcomi
or
mov
inc
xlat
mov
cli
add
sub
adc
fwait
je
sti
out
dec
xor
pop
jg
icebp
lods
mov
push
cmp
fisttpl
add
or
mov
sub
xlat
fwait
aad
and
mov
and
add
test
in
xlat
mov
insl
and
cmp
xchg
cmp
das
repz
iret
data16
push
cs
pop
stos
sbb
andl
arpl
arpl
and
addr16
fsubrl
xor
jle
push
out
stos
xor
adc
adc
popa
in
or
jnp
jecxz
pop
shll
mov
rcrb
in
jno
mov
subl
mov
pop
leave
movsb
dec
cltd
mov
xorl
ss
sub
dec
mov
cmp
data16
mov
and
fidivrs
cmp
jp
fistpl
outsl
lret
loopne
mull
jg
cmp
jle
arpl
dec
mov
fidivrl
jb
add
cs
ret
lret
xchg
cmpsb
sbb
aaa
fwait
adc
mov
scas
jg
shl
add
push
clc
mov
int
shll
jp
std
mov
pushf
shrb
stos
jp
mov
aad
mov
add
insb
lret
add
fwait
jmp
pop
cmp
rorb
cmpsl
xchg
fld1
add
adc
dec
push
pop
sbb
or
mov
in
dec
ljmp
jns
adc
test
adc
ljmp
xor
aam
imul
adcl
dec
or
xchg
pop
hlt
test
xor
xor
cmp
cld
dec
test
outsl
mov
cld
outsl
shrb
jb
cmp
adc
jnp
sub
lods
lahf
mov
clc
jmp
jecxz
xor
loop
adc
xchg
aad
mov
mov
xchg
xchg
pop
repnz
mov
push
xlat
cmp
inc
mov
adc
mov
fisubl
ds
mov
jbe
mov
repnz
push
and
push
and
loopne
jae
ret
inc
mov
stos
popf
inc
pop
mov
pop
lods
xor
enter
jne
in
dec
sbb
jo
fbstp
mov
mov
leave
pop
xchg
push
cmp
push
addb
les
xchg
outsb
repz
and
push
or
xor
fwait
loopne
gs
movsb
dec
jns
stos
ja
dec
pop
mov
pop
add
add
push
aam
ja
in
enter
add
out
in
mov
outsb
imul
out
out
xchg
cmp
pop
into
fdivrs
addl
imulb
add
frstor
cmp
mov
das
lds
cmp
sbbb
xchg
out
in
stc
data16
push
jnp
clc
popw
xchg
adc
addr16
jns
ret
je
repz
xor
push
push
pushf
mov
xor
or
pop
aas
push
xchg
xchg
xor
pop
sub
fs
xchg
pop
sbb
outsl
lods
in
arpl
repz
sarl
stc
push
xor
xor
arpl
dec
push
ja
cmp
push
int
cs
xor
xor
xchg
imul
iret
sub
rcrl
pop
arpl
dec
xor
fdiv
add
cmpsl
pushf
call
jb
mov
stos
jne
jb
outsb
out
es
xchg
adc
mov
loop
dec
jg
jge
es
arpl
jnp
int3
sub
dec
nop
scas
mov
stos
push
sti
popf
pushfw
sbb
bound
stc
dec
out
out
xor
movsl
push
leave
jbe
rcl
xor
fimull
rorl
out
daa
into
push
fxch
sbb
mov
stos
and
jle
mov
inc
dec
aaa
cs
pop
mov
test
sbb
cmc
loop
jle
cmc
ljmp
pop
xchg
adc
data16
dec
dec
adc
out
jmp
push
cmpsb
add
repnz
push
jne
enter
int3
or
inc
fsubrl
out
xchg
xchg
popa
mov
add
inc
mov
fwait
lret
jmp
add
dec
mov
les
sbb
cmp
jbe
xor
add
push
xor
dec
rolb
mov
mov
insl
xor
lea
out
jns
roll
inc
inc
mov
xor
xchg
test
dec
mov
and
scas
dec
inc
insl
fisubl
jo
rolb
pop
jo
xchg
test
mov
lcall
sub
loope
insb
std
repz
in
stos
mov
inc
inc
xlat
push
mov
sub
mov
dec
adc
add
neg
mov
in
push
pusha
sub
or
adc
jp
rcll
in
mov
dec
pop
dec
pop
add
lahf
mov
mov
dec
pop
stc
rorl
pop
clc
dec
inc
lcall
jae
cmp
shl
and
pop
not
sbb
cmp
cmp
mov
jmp
mov
and
insl
inc
hlt
ret
push
cmp
push
xchg
aaa
sub
mov
fdivp
dec
jge
xchg
stos
leave
and
mov
xor
adc
jecxz
lods
scas
scas
dec
scas
rcr
clc
xchg
cmc
dec
pop
stc
jp
sarb
cs
sub
push
imul
sbb
xlat
push
or
jne
xchg
pop
or
fadds
dec
hlt
xorb
ss
repnz
push
stos
loopne
test
or
xor
and
loop
int
sbb
repnz
inc
fstpt
sbb
push
in
repnz
imul
mov
adc
sbb
xor
repz
bound
inc
or
lahf
je
sahf
dec
sbb
add
pop
lock
movsl
lds
icebp
out
push
mov
mov
sbb
and
shrl
dec
int3
inc
cmpsb
xchg
out
pop
push
jecxz
adc
adc
aad
mov
into
dec
pop
outsl
jns
fcomip
xchg
iret
popf
scas
sbb
jg
pop
mov
pop
inc
jecxz
cmpsl
filds
punpckldq
ja
inc
sahf
sub
inc
lcall
or
pop
iret
sti
arpl
bound
adc
fnstsw
sbb
mov
rcr
add
xchg
inc
jne,pn
add
movsl
dec
out
sub
loopne
sbb
cmp
jmp
daa
lods
sbb
call
inc
popf
and
mov
and
ret
push
pmulhuw
cmp
arpl
inc
pop
outsl
repz
lahf
jecxz
bound
push
adc
lcall
je
aas
xchg
mov
sbb
mov
hlt
sub
clc
and
jle
iret
or
push
mov
pop
das
repz
sahf
push
sub
out
dec
dec
cltd
das
and
push
into
mov
jno
mov
ljmp
es
std
popf
cmp
sbb
test
andl
mov
aam
adc
cmp
clc
xorb
shrb
fiaddl
push
inc
cld
or
or
enter
daa
sub
out
lock
push
lods
in
mov
rcrl
arpl
or
pop
mov
and
popa
call
call
inc
fisubrl
les
in
lret
cwtl
fnstcw
mov
cmp
ja
cs
or
push
imul
mov
shll
repz
xchg
pop
loope
jo
insb
adc
xlat
inc
xor
cmp
mov
fcoml
sti
popa
cmp
lcall
or
mov
scas
push
push
sub
pop
jp
nop
out
jne
leave
mov
fbstp
ljmp
cli
js
cli
dec
out
fidivl
fidivrs
stos
repnz
sarb
jb
scas
aad
lock
mov
inc
test
xchg
lret
movsl
frstor
and
test
fwait
loope
xchg
dec
jb
push
mov
arpl
inc
push
add
rol
jo
out
inc
or
dec
xchg
pop
and
arpl
jmp
jecxz
scas
inc
in
push
dec
or
leave
mov
jmp
xor
lods
add
cmp
fwait
jo
pusha
sub
fiaddl
mov
push
addr16
pop
push
xor
std
adc
out
add
bound
push
jo
arpl
cwtl
sahf
mov
int
cmpsl
cmp
scas
inc
pop
or
scas
mov
xchg
stos
test
je
lock
fcmovnbe
cmp
sbb
xchg
cmp
xor
mov
mov
repnz
fdivrs
cmp
pop
mov
test
pop
adc
pop
stc
lahf
jae
xchg
out
inc
dec
mov
pusha
stos
inc
jg
lds
loope
cwtl
insl
pop
outsl
in
shrb
data16
and
mov
out
addl
pop
jb
dec
lret
jecxz
mov
lahf
mov
shrb
inc
movsl
int3
in
ds
push
push
and
add
push
sbb
jo
dec
pop
lods
dec
push
aas
ds
pop
xchg
mov
and
ficoml
cmp
mov
data16
sbb
jp
out
iret
fiadds
pop
pusha
jmp
frstor
mov
jb
adc
push
sbb
nop
and
jmp
xchg
int3
cmp
rcrl
outsb
add
xchg
in
pushf
sbb
mov
inc
cmp
jne
push
or
lret
insl
aam
jnp
adcb
sub
sub
push
and
addr16
sbb
pop
and
loop
mov
imul
stos
adc
pop
mov
int
xchg
and
push
lret
xor
mov
pminsw
mov
cmovl
sbb
cmc
aas
sbb
ror
lret
xor
sahf
loopne
nop
jbe
or
in
mov
or
and
cmp
rorl
jg
adc
mov
and
jne
push
pusha
fdivs
push
xchg
scas
sub
mov
pop
arpl
cwtl
ret
jb
dec
jg
sti
or
in
dec
out
rol
xlat
jl
rorl
outsb
adcl
xor
mov
scas
push
mov
add
addr16
fcom
repz
sbb
idivb
fsubrs
and
in
jecxz
mov
dec
xor
sub
int
dec
lods
aaa
adc
and
imul
sbb
mov
pop
cmp
lds
icebp
inc
lret
sbb
sbb
sti
hlt
sahf
icebp
scas
mov
adc
adc
test
sahf
rolb
addr16
adc
shlb
mov
aas
sub
inc
sbb
das
in
fwait
js
out
and
pop
jb
outsb
out
sub
inc
pop
loope
repz
pop
pop
fbld
xor
div
or
loope
lcall
ljmp
and
xchg
scas
repz
enter
out
stos
lods
inc
push
mov
and
mov
roll
push
xchg
cmp
push
sbb
loop
mov
pushf
dec
and
ds
lock
dec
add
jno
mov
leave
mov
xor
pop
push
xor
jg
js
movsl
lods
inc
sbb
push
sub
adc
insl
aas
lahf
push
cli
jne
mov
push
aaa
sub
aam
iret
std
dec
mov
lret
loop
sarl
adc
repz
lea
inc
and
lods
aam
int3
js
lret
xor
popf
xchg
xorb
fcoml
outsl
push
pop
jmp
addb
leave
mov
xchg
ljmp
xchg
sub
out
pop
rol
aad
sahf
fsubrs
mov
int3
add
or
cmp
fs
cmp
aas
pop
es
imul
outsb
sub
aas
mov
mov
mov
inc
aad
dec
rcrl
aaa
add
xchg
mov
dec
sub
ljmp
mov
adc
mov
inc
or
nop
mov
mov
jb
mov
push
xor
rorb
pop
xchg
xchg
and
pop
daa
mov
inc
scas
adc
push
add
adc
jle
les
mov
push
mov
and
jmp
cli
mov
cli
mov
out
iret
mov
mov
jge
pop
fnstsw
clc
inc
pop
insb
push
sahf
cmp
sub
lret
int3
mov
fucom
pop
add
fisubl
pop
cwtl
jmp
cmp
cltd
adc
xchg
cwtl
ret
adc
cmp
mov
stos
pop
dec
jmp
dec
mov
and
sbb
mov
iret
sbb
int3
out
cld
fsub
sbb
out
lea
test
loop
js
lea
repz
movsl
pop
xor
jp
jnp
cmpsb
stos
mov
inc
das
cwtl
in
aas
in
pop
add
sbb
fdivr
jb
in
add
fildl
sarl
xor
xchg
sti
mov
sub
subl
vgf2p8affineinvqb
test
push
mov
das
dec
ljmp
push
jae
xchg
adc
movsb
inc
loopne
jmp
jo
cmp
push
aad
mov
loop
pop
mov
or
push
sbb
push
push
dec
mov
cltd
test
mov
cmp
enter
aad
out
roll
test
jmp
or
loopne
aas
jl
inc
mov
fs
xlat
sbb
aam
sub
neg
cmp
push
pop
xlat
pop
inc
daa
mov
aas
cmp
out
jno
int3
fnsave
pop
mov
jl
test
push
sbb
stos
add
movsl
jle
push
xchg
dec
rolb
in
mov
scas
leave
mov
jb
pushf
sbb
push
pop
scas
or
popa
mov
shrl
outsb
aaa
testb
add
in
and
adc
mov
or
or
inc
push
aad
mov
aad
mov
lods
shll
mov
inc
cwtl
pop
mov
mov
sub
and
jnp
push
jne
cs
push
stc
hlt
lcall
cmp
add
adc
orb
call
cmpsl
cli
icebp
lret
sub
dec
and
sar
add
jb
mov
sbb
pop
jne
mov
pop
mov
call
cwtl
scas
aas
dec
sub
sub
pop
jp
jb
mov
push
icebp
mov
sbb
scas
inc
sub
xor
cmpsb
clc
daa
out
xchg
inc
mov
mov
push
cmp
stos
ljmp
in
stos
jle
sti
push
cmpsl
or
addr16
pop
push
xchg
je
xchg
sbb
inc
or
ja
cwtl
mov
jno
and
pop
push
stc
shl
test
jne
pusha
pop
stos
imul
adcl
popf
stc
popa
loope
arpl
in
push
cmp
inc
insb
pop
imul
loop
adc
cmpsb
pop
out
fdivr
push
outsb
int
ja
mov
xor
cmc
fiaddl
add
add
addr16
mov
and
dec
scas
sub
push
hlt
xor
and
leave
mov
stos
ja
or
jmp
sub
hlt
jl
int3
fs
mov
inc
scas
movsl
mov
mov
fxam
jle
and
mov
or
mov
pushf
mov
shll
scas
or
adc
adc
push
mov
inc
stc
mov
adc
iret
adc
pushf
aam
mov
push
movsl
lret
es
jmp
xchg
insb
cmp
and
jge
std
shlb
mov
shll
stc
cwtl
pop
push
push
sahf
lret
ja
lock
sub
popa
jge
in
cs
fstpl
je
mov
lret
mov
jmp
shll
sbb
std
or
shl
jecxz
imul
sbb
or
mov
test
and
mov
push
sbb
mov
push
adc
outsb
add
mov
cmp
mov
mov
mov
mov
stc
enter
mov
fsubs
imul
add
call
and
sbb
stc
sbb
xchg
and
pop
pop
data16
into
popl
in
and
insb
mov
icebp
mov
or
testb
adc
in
cmp
mov
inc
std
add
or
addl
insb
jge
sub
jmp
test
pop
pop
cmp
mov
jno
aaa
push
xor
add
test
cli
xchg
scas
movsl
jno,pt
lret
or
iret
jns
cmp
fistps
push
dec
mov
push
mov
xor
sbb
lea
pop
pop
jbe
aad
sarl
cli
push
lods
xchg
jp
fbld
cwtl
sbb
cmp
jae
mov
and
call
jp
push
push
out
inc
test
sahf
mov
mov
cmp
sub
pop
pop
in
lret
sub
out
pop
xor
in
popfw
or
or
sysexit
mov
imul
inc
pop
jl
test
in
addr16
xchg
or
adc
inc
cmc
test
dec
popf
orb
add
lds
shlb
sti
movsb
and
popf
add
push
jnp
add
mov
lret
movsl
dec
insl
sub
insb
push
mov
imul
lcall
pop
jg
add
inc
inc
sarl
cmc
inc
mov
in
mov
ljmp
sub
cld
lahf
test
fidivrs
adc
pop
dec
xchg
push
jnp
incl
xchg
jns
stos
cmp
cmp
xor
xchg
std
fwait
xor
mov
inc
jae
pop
icebp
fs
fldt
fcomps
icebp
mov
scas
pop
dec
push
ja
mov
xor
xor
es
adc
lcall
test
out
fdivl
adc
mov
lods
dec
adc
movsl
and
stos
cli
adc
fcmovnbe
es
cmp
cmpsl
icebp
and
jg
sub
mov
and
jbe
aad
pop
insb
aas
add
sbb
lock
sbb
mov
sbb
sahf
sti
sub
mov
cld
pop
inc
popf
bound
fildll
aas
lret
mov
sub
or
loop
mov
lea
pushf
sub
loope
or
xor
push
cld
mov
pop
push
ret
mov
jp
dec
lret
cmp
divl
aaa
mov
mov
imul
sub
insb
push
cmp
mov
jge
mov
xor
outsl
add
arpl
stc
mov
jns
xor
rolb
sbb
jo
cwtl
enter
or
xchg
xchg
js
push
dec
cmp
mov
das
cmpsb
lahf
mov
sti
adc
inc
and
notl
xchg
and
out
cmp
idivb
addb
add
jnp
jl
out
add
xor
pop
add
dec
jmp
sti
jecxz
adc
pop
add
int3
xchg
mov
jl
repnz
push
xchg
mov
aas
lret
hlt
jp
repz
pop
xor
add
cmc
ret
stos
sbb
sbb
or
mov
and
bswap
jnp
push
les
and
mov
push
jae
dec
fucom
mov
mov
mov
add
or
test
inc
loopne
jbe
outsb
jl
adc
imul
push
aam
and
or
out
sbb
addr16
pop
sub
cltd
frstor
sbb
inc
push
pop
sub
jl
in
pop
jno
cmc
sbb
xor
dec
sub
pop
mov
ja
cmpl
or
xor
or
and
lret
xor
sahf
call
in
repz
pop
and
and
fmulp
gs
cmp
pop
test
adc
fistpll
aaa
fldenv
pop
les
pushf
mov
push
push
out
push
xor
mov
inc
test
lcall
xchg
imul
hlt
and
jns
outsb
rorl
cmp
add
jmp
dec
addr16
mov
and
mov
jo
aad
ret
fildll
in
cmp
dec
push
rcl
mov
push
inc
das
daa
pop
pop
fsubs
fcoms
and
pop
lock
subl
xlat
xchg
mov
and
xchg
sub
pop
sti
dec
shrl
push
sbb
sub
hlt
mov
cld
int
pop
sub
push
or
push
dec
lock
sub
mov
jae
push
pushf
mov
adc
add
jae
push
in
jo
lods
std
cmc
and
jno
mov
inc
in
or
pop
fimull
out
ffree
mov
and
fisttpll
cld
adc
push
sbb
ficoml
lret
mov
jmp
data16
inc
enter
hlt
cmp
sub
cltd
xchg
mov
jbe
lahf
inc
loop
sti
mov
mov
in
es
call
jl
push
sub
ss
mov
adc
imul
test
cli
add
leave
sbb
or
push
jecxz
cld
fidivl
adc
outsl
jo
inc
cmpsl
xchg
ds
aad
push
add
mov
fs
adc
inc
push
cmp
dec
and
fwait
ret
jmp
sbb
or
jge
and
aam
mov
popa
pusha
mov
xchg
jbe
out
test
mov
std
arpl
push
loope
out
xor
mov
push
daa
xchg
sub
push
dec
mov
dec
ret
enter
pop
xor
stos
loop
adc
xchg
in
movsb
enter
scas
ljmp
push
sbb
adc
loopne
int3
in
dec
dec
jle
fsubrs
lock
mov
test
stc
xchg
cmpsl
call
repnz
in
mov
mov
js
push
mov
cmpsb
loope
mov
push
ss
push
sub
push
insb
or
pop
int3
push
push
xchg
shr
or
scas
insb
add
sub
push
jae
lret
jecxz
jge
js
inc
mov
outsb
loope
push
inc
sub
je
mov
aad
and
cltd
adc
xchg
xorb
je
shll
lock
stc
sahf
jnp
rcl
roll
jbe
scas
jg
fstpl
aaa
cmpsl
pop
jnp
mov
into
xchg
jl
push
leave
andb
jle
enter
shll
mov
leave
aam
repnz
cmp
pop
nop
xchg
sbb
gs
into
cmp
cmpsb
jge
xchg
popf
test
mov
ret
jno
ljmp
and
mov
sbb
push
cli
addr16
loop
out
or
cmp
lods
fldt
lock
and
push
gs
or
jae
daa
cltd
pop
sub
sbb
lods
mov
dec
call
mov
cmp
mov
hlt
jg
lock
adc
jo
xlat
mov
lahf
sub
push
iret
xor
mov
les
sbb
jl
enter
and
aas
mov
jae
rcll
and
pop
dec
daa
push
mov
pop
xor
das
xchg
insb
fnstcw
push
cmpsb
leave
cmp
ret
cmp
aaa
inc
push
std
popf
adc
sbb
nop
addr16
cmp
dec
add
mov
rorb
add
mov
cltd
xchg
hlt
xor
lea
int
mov
in
sti
test
jp
sbb
xchg
pop
adc
pusha
cmp
pop
aas
clc
xor
mov
lret
xchg
nop
std
pop
cmp
cwtl
mov
sbb
lcall
fwait
ss
and
mov
and
cmp
ror
xor
mov
jge
hlt
mov
scas
pusha
jle
loop
xor
cmp
jg
inc
mov
clc
dec
xchg
enter
inc
sub
dec
cltd
push
lcall
test
add
clc
insb
fsubl
fs
inc
bound
fcomps
int3
jecxz
mov
dec
xchg
outsl
xor
mov
sahf
cmp
mov
push
imul
jl
add
and
test
mov
fwait
hlt
rcl
sub
mov
mov
enter
sbb
out
sub
jle
push
filds
xchg
xor
aaa
lods
adc
mov
adc
scas
push
and
dec
nop
mov
pop
pop
xor
mov
xor
add
out
mov
stc
in
movb
test
not
stc
ss
leave
test
jl
or
cs
xchg
mov
inc
roll
orl
sub
push
push
call
xchg
bnd
icebp
cmp
xchg
imul
fucom
xchg
test
call
mov
jle
jmp
rclb
lret
insl
shrb
arpl
add
in
out
sbb
out
push
push
pop
jae
mov
cld
imul
cltd
hlt
sbb
push
sti
xchg
jl
stc
out
loope
and
jp
pop
loope
cmp
jo
xlat
or
jg
es
cmpsl
sub
in
leave
lock
xchg
lret
inc
imul
push
test
push
xchg
add
pop
adc
inc
xchg
adc
arpl
pop
int
mov
mov
jo
mov
std
lret
adc
cmpsb
loopne
push
int
in
addl
subb
idiv
lock
sub
sbb
addr16
xchg
pusha
lret
out
inc
or
fsubrs
mov
out
adc
mov
outsb
push
mov
out
iret
xor
iret
and
sti
sti
and
jmp
push
mov
inc
inc
push
and
sarb
lea
add
ret
dec
push
out
cmp
or
pop
mov
adc
ja
jge
cmp
mov
pop
leave
push
add
push
jns
push
ss
sub
push
out
mov
subl
jnp
mov
push
out
add
rolb
call
adc
and
dec
rcrl
jl
sbb
sub
gs
out
imul
inc
mul
in
xchg
jle
and
or
mov
aaa
ret
and
dec
pop
add
data16
mov
test
push
jae
mov
fs
call
test
div
xor
push
mov
outsb
hlt
cld
lods
push
xchg
and
popl
cmp
xor
and
cmp
xlat
pop
int
scas
push
xchg
push
loope
loop
sbb
add
pop
daa
mov
xor
subb
lds
leave
cmc
xor
xor
mov
lea
aas
ljmp
sbb
add
mov
mov
add
jle
push
jp
in
out
insl
xchg
mov
lock
es
xor
or
out
ffreep
add
sub
cmc
ja
sbbl
jmp
xchg
add
sub
and
fcmovnb
adc
xchg
mov
leave
sbb
fsubrl
fdiv
lahf
add
lods
or
dec
add
push
xchg
sub
sbb
sub
pushf
sub
or
jmp
xchg
fldenv
enter
xor
sahf
mov
or
cmpsb
and
fnsave
pop
dec
scas
inc
or
scas
arpl
push
ljmp
jecxz
flds
ss
cmpsl
stc
xchg
and
push
push
dec
sahf
mov
adc
imul
mov
xor
mov
stc
push
pop
pop
ss
sub
vmwrite
das
sbb
pop
adc
xor
rcr
jns
leave
in
push
fwait
dec
ds
dec
pushf
test
mov
loopne
notl
mov
push
clc
adc
pop
dec
cmp
mov
loop
in
jl
aaa
imul
dec
xor
add
add
inc
mov
mov
mov
sbb
xchg
ss
sbb
pushf
inc
arpl
pop
push
inc
int3
in
inc
cmc
daa
push
sub
movsl
xor
call
lahf
xchg
push
cltd
pop
vpmacsdql
sub
pushf
cltd
lea
lds
insb
jno
pop
dec
nop
sbb
rclb
sbb
inc
iret
imulb
cmpsl
push
cmp
push
repz
pop
shlb
lahf
inc
push
fsubl
mov
sub
jb
inc
cmp
es
mov
sahf
push
pusha
xchg
add
mov
mov
icebp
add
arpl
sbb
call
push
aas
mov
xchg
xchg
shr
push
sti
or
add
or
sti
loopne
lods
leave
and
scas
inc
inc
cmp
imul
xor
cltd
in
pop
clc
test
cmp
cmp
and
jmp
sbb
push
dec
mov
shl
jge
int3
outsl
in
pop
and
pop
jmp
push
fsubrl
into
stos
jg
popf
sahf
xor
mov
into
inc
xchg
xchg
xchg
repz
pop
cmp
shl
cmpsl
add
cwtl
mov
aam
stos
stc
jno
data16
psubsb
lcall
inc
and
imul
mov
fistpl
movsb
dec
add
lcall
das
gs
jecxz
movsb
cwtl
adc
sub
jp
jg
or
inc
hlt
out
cmp
inc
fisttps
loope
cmp
and
test
cmp
rclb
mov
mov
and
movsb
mov
adcl
dec
jb
fwait
mov
fdivp
aad
test
fimuls
push
or
fwait
or
pushf
cmp
cli
adc
mov
enter
cli
ss
cmpsl
or
lock
cwtl
adc
mov
in
je
lahf
vmovsldup
xchg
xchg
lret
jb
jb
or
sar
jmp
mov
icebp
aam
xor
sub
stc
jbe
cli
mov
out
xchg
pop
popf
sbb
fsubrp
fwait
pop
add
or
mov
outsb
xchg
cmp
mov
cmc
stos
jnp
mov
mov
cmp
lahf
icebp
add
push
sbb
xchg
xor
mov
mov
push
arpl
cli
flds
fwait
push
dec
pavgb
jbe
sbb
mov
xchg
fcompl
lock
fbld
or
sahf
mov
cmpsb
bnd
in
das
jbe
lods
ror
hlt
aad
push
inc
cmpsl
jle
mov
sbb
fbld
xchg
cmp
dec
or
xor
leave
sahf
std
cmpsb
inc
ss
pop
add
shll
push
and
fwait
cltd
shlb
in
lods
lret
ljmp
mov
xchg
adc
into
insl
xor
mov
icebp
roll
fisubrs
push
sbb
xchg
mov
pop
sbb
inc
xor
pop
nop
push
arpl
pop
ljmp
add
adc
inc
and
clc
cmp
xchg
inc
sub
xchg
iret
mov
and
test
lea
ja
out
ja
xor
sbb
adc
movsb
pop
add
lds
addr16
ds
ja
dec
insb
lahf
int
int3
inc
arpl
or
cmpsb
mov
xchg
or
lods
cli
or
push
mov
cwtl
repz
movsl
aas
xor
mov
sub
out
popa
pushl
adc
mov
mov
mov
xor
out
cmc
and
or
and
push
iretw
mov
mov
and
push
movsl
mov
mov
cmpsl
push
orb
sub
and
imulb
and
xchg
fstp
pushf
mov
mov
adc
push
mov
movsl
or
xchg
jo
sub
leave
xchg
or
stc
outsb
sub
mov
shlb
lea
mov
clc
sbb
fdivl
mov
dec
lret
xor
ret
arpl
jmp
lahf
sub
lret
or
test
push
enter
jo
push
mov
inc
add
push
add
sbb
testl
sbb
es
negl
sub
ficoml
mov
stos
xchg
add
mov
repnz
cli
mov
push
orl
inc
xor
push
pop
mov
and
shrb
out
fwait
or
loope
mov
sub
aam
loopne
lds
xchg
sbb
movsl
js
sub
cmp
invlpg
cwtl
mov
sub
dec
jmp
fsqrt
mov
pop
inc
clc
cpuid
jne
out
sub
mov
imul
ss
jp
xchg
je
fcmovnu
sahf
lcall
imul
xchg
orb
lds
lret
adc
pop
out
mov
shll
popa
js
mov
add
and
idivb
xchg
xor
leave
push
and
mov
popa
into
arpl
aad
sbb
aaa
xchg
or
decb
cmp
popa
mov
jb
cmp
out
sub
std
inc
jge
aad
outsl
push
pop
push
movb
xor
push
scas
inc
xlat
mov
add
mov
into
ret
fldcw
shl
out
loopne
push
arpl
loope
mov
add
into
push
jle
mov
sub
les
shrb
je
push
pop
aas
inc
push
repnz
lds
int3
ret
fucom
repz
pop
cld
xor
icebp
sub
data16
loopne
inc
imul
sahf
or
shrl
ljmp
xlat
leave
orl
xor
incl
pop
jge
add
sub
js
fstps
sbb
xchg
lods
push
jb
jmp
push
in
xchg
mov
ja
hlt
inc
fisubrs
mov
xlat
inc
jne
mov
inc
out
push
cwtl
jae
cmp
push
clc
mov
jecxz
fs
notb
fildll
sub
stos
loope
mov
push
mov
xlat
mov
cmp
jl
repz
es
aas
orb
popf
or
sbb
in
cld
fistpll
js
mov
dec
into
lods
in
xor
sbb
sbb
xchg
pop
cld
fildl
jp
dec
add
outsb
lahf
jp
jne
xor
imul
jns
mov
out
pusha
sbb
ret
mov
scas
xchg
xchg
xor
std
cmc
add
mov
jbe
mov
dec
cmp
or
mov
push
xor
test
cwtl
hlt
sahf
int3
int
pop
sbb
dec
adc
sbb
fistps
xor
lcall
mov
divl
icebp
push
pop
jmp
and
ds
int
dec
lods
jns
arpl
int
dec
adc
les
or
test
jecxz
xor
data16
into
int
add
aad
or
jbe
ret
sbb
dec
call
dec
push
lods
dec
rcrb
sub
cmp
add
out
or
outsl
add
or
orb
fstpl
jne
jmp
mov
fdivrs
and
js
lcall
mov
pop
xor
call
in
and
sub
jp
xchg
stos
dec
xchg
ds
or
sbb
shll
push
iret
jae
or
imul
and
push
loop
cmp
adc
inc
shll
or
out
sub
fisttpl
jae
jecxz
dec
lods
je
mov
inc
inc
inc
mov
into
adc
dec
adc
das
sbb
inc
cmpsl
mov
sub
loop
jmp
mov
mov
frstor
inc
lods
push
out
mov
mov
icebp
mov
inc
pop
enter
imul
lret
or
jae
int
rclb
cmpsl
pop
mov
lea
subb
xchg
sub
mov
mov
cli
mov
rclb
gs
mov
lret
mov
repz
hlt
sti
mov
mov
sti
dec
jge
push
add
xor
pop
rcrb
xor
insb
mov
mov
adc
mov
bound
arpl
dec
mov
push
jns
test
adc
pop
pop
fucomip
sbb
xor
lahf
lods
sti
jae
clc
inc
xor
loop
jbe
arpl
push
cs
stc
cmpsl
add
int3
cmp
cmc
in
addl
ss
xchg
or
leave
dec
popf
sbb
inc
xchg
jge
int3
sarb
test
push
int3
sets
pop
mov
sub
cmp
pushf
inc
mov
popa
sbb
cli
pop
inc
insb
loope
cmp
mov
adc
add
mov
dec
in
pop
movb
jge
std
add
adc
movsb
push
insl
and
dec
std
dec
xchg
sbb
push
scas
add
dec
je
out
hlt
outsl
aam
inc
mov
paddq
dec
pop
sbb
mov
dec
ds
xchg
addb
jle
sub
xor
nop
mov
aam
xor
ds
mov
scas
jle
mov
test
fs
nop
push
mov
cmp
xor
xor
dec
fmuls
cwtl
push
lahf
jecxz
push
rorl
gs
xor
mov
sbb
ljmp
stos
mov
stos
jmp
sub
pop
mov
shl
repnz
in
push
je
scas
in
bound
gs
cmpsl
mov
jmp
mov
int
xor
dec
cwtl
arpl
xchg
into
cwtl
xchg
xor
cmpsl
add
add
insb
pusha
add
test
mov
fnstenv
mov
out
mov
adc
iret
push
pop
fistps
mov
xor
xor
pop
lea
es
js
aas
out
hlt
pusha
daa
ds
js
js
jecxz
mov
cld
ret
aas
pop
mov
les
push
movd
hlt
pop
loope
stc
xchg
push
aaa
inc
xor
int3
and
pop
sub
and
js
mov
lock
out
push
mov
and
enter
sbb
cmp
pop
jecxz
and
mov
out
pushf
out
ljmp
je
sbb
dec
sub
or
js
jns
cmp
jl
push
push
mov
mov
inc
pop
pop
push
sub
mov
sbb
sub
mov
int
outsl
test
and
mov
test
imul
add
mov
mov
dec
bound
lods
cmp
and
sbb
sbb
lea
jbe
fdivrs
pop
cmpsl
or
xchg
cwtl
out
iret
add
mov
enter
movsb
cmp
aad
xor
rclb
test
into
outsb
push
cmp
dec
push
cmp
xchg
mov
push
jle
inc
ret
fstps
cmp
lahf
mov
iret
andb
nop
mov
int
aas
and
inc
arpl
movsl
jns
and
pop
movsl
fistl
sub
adc
push
and
push
ss
sbbb
sub
and
int
bound
enter
loope
repz
push
in
imul
inc
cmp
ja
push
push
mov
xchg
inc
pop
add
sbb
xlat
movb
mov
sbb
pop
mov
hlt
xor
pop
push
popf
jb
mov
in
push
jge
inc
into
fcmovnbe
leave
pop
shll
xchg
test
adc
jae
insb
in
adc
xchg
jnp
clc
adc
loop
add
cs
fnstenv
pop
adc
shl
enter
jmp
into
adc
cli
mov
je
call
push
in
loop
scas
scas
adc
mov
add
mov
sahf
ret
mov
mov
xor
sbb
ds
jbe
cmp
bound
cwtl
test
repz
arpl
out
jmp
fcoml
dec
pop
loope
lret
pop
jnp
imul
pop
lds
mulb
enter
pop
adc
sub
xchg
dec
mov
mov
cmpsb
shr
addr16
mov
push
imul
adc
imul
insl
jecxz
jmp
xor
xor
dec
cmp
into
dec
pop
movsl
stos
xchg
pop
outsb
enter
leave
std
out
iret
xchg
adc
mov
push
jns
mov
enter
outsl
scas
inc
mov
out
out
inc
inc
test
gs
hlt
sub
mov
pop
jp
xchg
pushf
push
push
jno
insl
lock
jle
outsl
hlt
mov
dec
pop
adc
lods
fs
xor
cwtl
xor
mov
add
inc
andl
scas
and
js
rclb
repnz
xor
push
sub
enter
data16
dec
xchg
ss
rorl
lods
mov
decl
cmc
enter
jl
imul
jo
xchg
mov
pop
jmp
xor
aas
sub
jge,pt
mov
aad
fdiv
icebp
mov
mov
subb
in
enter
mov
subl
ss
outsb
and
xchg
into
mov
rcll
jle
inc
xchg
push
dec
push
fcomi
repz
not
stos
mov
xchg
fsubrs
mov
pop
mov
stos
fwait
push
clc
sbb
pop
ljmp
lcall
in
xchg
mov
data16
aam
jp
cli
mov
cmc
shrb
and
call
push
jle
inc
mov
sbb
adc
lds
cli
rcrl
jge
stos
xor
xchg
test
and
out
lahf
dec
adc
loopne
hlt
shr
test
outsl
mov
add
sbb
adc
mov
movsl
adc
xchg
inc
mov
aaa
adc
ljmp
and
rcl
lea
out
dec
out
in
or
filds
pop
nop
pop
cld
push
xchg
vpunpcklwd
mov
or
adc
pop
jae
loope
pop
or
inc
loope
add
push
cwtl
dec
in
pop
hlt
popa
cmp
hlt
bound
xor
jl
or
cmc
aad
push
inc
jl
lcall
push
std
jmp
getsec
lret
xlat
push
mov
xchg
add
add
adc
cmpsl
cli
int3
mov
test
movsb
enter
jae
rep
fsubl
push
pop
lcall
xchg
enter
stos
imul
out
adc
cmpsl
addr16
daa
enter
pop
testb
aas
outsb
dec
jno
cmp
cmp
jo
or
xor
sbb
inc
mov
cmp
arpl
pop
ffreep
int
jnp
jne
sti
fisubl
in
enter
adc
push
iret
addr16
adc
and
xchg
cwtl
xchg
aam
mov
mov
and
inc
in
xlat
cmp
movsl
movsb
pop
mov
enter
addr16
into
jns
nop
mov
out
dec
mov
fcmovnb
movsl
sbb
int3
add
dec
rcrb
insl
das
fisttpll
add
add
ja
inc
repnz
xor
loop
imul
xchg
es
jbe
jb
mov
xchg
lret
das
sub
push
test
fildl
add
out
push
into
pusha
or
adc
scas
jnp
popa
cmp
popf
adc
pop
aaa
jle
or
mov
mov
and
lods
inc
testb
loop
sub
mov
xor
sbb
cltd
xchg
push
enter
cmp
dec
imul
fisttpll
mov
push
sbb
stc
cli
xchg
sub
roll
add
in
int
dec
push
aaa
push
push
cmp
icebp
mov
push
sbb
pop
xchg
xor
jp
call
outsl
xor
imul
push
add
jae
add
xchg
es
imul
ret
inc
fstps
sbb
adc
mov
pop
xor
xlat
pop
cmp
xor
jbe
movsl
pop
and
rcrl
enter
xor
shl
sub
insl
mov
pusha
repz
xchg
mov
and
sbb
ret
xor
lock
hlt
out
pop
hlt
mov
mov
cmc
repnz
adc
loopne
or
inc
xor
cld
adc
dec
sahf
xor
sbb
loopne
jno
mov
mov
pop
enter
sbb
gs
in
jns
idivb
sbb
xchg
lods
stos
fnstcw
add
aam
test
mov
inc
int
fdivl
add
pop
jge
jb
mov
mov
cmc
test
test
xchg
jns
push
out
mov
cmp
pushf
jg
scas
mov
dec
ja
push
cli
push
mov
pusha
sti
xor
pop
inc
pop
out
pop
dec
cmpsb
add
mov
mov
insb
mov
shrb
aaa
cmp
mov
test
xchg
add
les
imul
sahf
cmpsl
cwtl
xor
fsubrp
push
cmp
test
push
push
jbe
or
subb
xchg
in
lds
jmp
lea
int3
frstor
cmpsl
mov
dec
sbb
jecxz
pop
repz
adc
push
adc
imul
mov
dec
repnz
add
jl
out
js
mov
inc
mov
fs
sub
xor
mov
add
sub
rcl
pop
decl
mov
pop
jmp
rcrl
pop
loop
outsl
mov
jb
mov
jnp
ja
je
sbb
pop
pop
xchg
es
mov
pop
imulb
out
xchg
insb
ret
add
repz
les
shlb
fcoml
stos
nop
adc
les
ffreep
mov
add
dec
cltd
mov
sbb
mov
icebp
inc
jmp
loop
scas
mov
sbb
mov
adc
cmp
inc
jbe
lcall
adc
aas
lods
rclb
daa
insl
xor
mov
xchg
mov
divb
dec
cmp
jg
std
cmc
push
jge
in
imul
iret
subl
mov
mov
xchg
lods
loopne
or
ja
jmp
and
roll
mov
mov
out
push
outsl
add
fadds
xchg
mov
stos
inc
add
idiv
in
popf
push
xchg
mov
aaa
les
xchg
dec
rcrl
mov
popl
cmp
ljmp
mov
loopne
jp
pop
fcos
mov
out
sahf
and
stc
je
xor
xor
ja
insb
adc
cwtl
mov
and
push
pop
xchg
jg
xor
aad
mov
les
cltd
daa
dec
push
out
pop
mov
or
xchg
inc
rol
add
xor
pusha
xor
lods
mov
sub
jne
or
xor
jmp
arpl
dec
sbb
xor
dec
or
mov
ljmp
inc
sub
push
mov
sbbl
sbb
add
sbb
cltd
mov
cld
add
fisttpl
pop
push
mov
inc
in
jns
jb
imul
or
aam
add
push
test
ficomps
pop
fimuls
aam
hlt
push
rol
scas
push
fnstsw
leave
cmc
mov
cmp
xchg
aas
orb
in
loop
lds
push
sub
test
dec
int
mov
lahf
mov
mov
xchg
loopne
scas
leave
cs
lea
popa
adc
in
jle
aas
sbb
push
mov
sar
jl
dec
mov
sahf
lcall
dec
insl
and
adc
mull
mov
cmp
cli
daa
popf
into
adcl
lahf
loop
hlt
push
fbstp
or
and
mov
or
popa
test
push
das
stc
xlat
mov
nop
mov
rorb
push
cmpsb
push
adc
jecxz
lret
or
xchg
ja
movsl
add
sub
hlt
dec
cmp
mov
fldcw
aaa
arpl
cmpsb
xchg
adc
adc
mov
sub
or
jbe
fcompl
cld
aas
xor
pushf
sub
loope
loop
cs
cmp
movsl
xor
add
inc
cmpsb
cmp
push
xorl
jns
pusha
insb
in
sbb
sbb
mov
push
int
mov
out
sub
lahf
adc
mov
xor
out
stos
adc
dec
push
push
outsb
or
fwait
inc
in
sub
xchg
push
hlt
scas
ror
add
fistl
add
lds
pop
xchg
lea
and
mov
push
out
sub
std
lahf
in
inc
xchg
int3
mov
andb
les
dec
mov
fistps
xchg
mov
or
add
test
lret
in
jp
jns
sub
mov
cld
push
icebp
xor
out
out
loopne
enter
rorb
dec
ds
add
in
xor
jnp
xchg
out
adcl
and
and
aaa
test
cli
lods
add
adc
push
pop
lret
xlat
inc
nop
repnz
dec
lcall
mov
sub
pop
loop
jnp
mov
repz
sbb
lods
push
hlt
addr16
jl
mov
or
add
mov
cli
cmp
ds
loop
mov
push
ljmp
pushl
push
sub
pop
push
testb
or
mov
popf
inc
das
outsl
das
cmc
shll
sahf
mov
sbb
jns
outsb
mov
lock
mov
sub
out
aaa
icebp
in
jecxz
nop
jno
lahf
imul
sbbb
test
cs
aas
in
mov
and
mov
cmp
fs
mov
mov
ja
test
xchg
jge
jecxz
cmp
cwtl
pop
sbb
lcall
ljmp
ljmp
push
dec
push
add
hlt
call
ds
popf
sub
in
pop
adc
cmpsl
xchg
and
sub
in
addr16
test
inc
mov
sbb
test
ss
add
sub
push
sub
mov
fimuls
jne
push
ljmp
pop
jo
xor
xchg
mov
lock
jns
pop
int3
lahf
dec
aas
fcmovnu
test
cmpsb
jnp
in
adc
or
in
mov
arpl
inc
add
les
dec
insb
nop
mov
inc
adcb
mov
cmp
cli
jae
out
add
dec
test
ret
into
jp
repnz
or
outsb
mov
push
sbb
hlt
xor
and
shl
push
xchg
jne
repnz
inc
pop
cmpl
gs
push
inc
xchg
xchg
and
inc
data16
lret
loope
daa
push
push
and
push
mov
icebp
fcompl
ret
xlat
cmp
pop
mov
out
xchg
nop
je
insb
add
imul
sti
shl
mov
pop
iret
xor
push
js
jb
stc
or
or
fisttpll
shll
xchg
movsl
cmp
adc
insb
dec
adcb
push
fxch
adc
int
mov
mov
mov
xor
and
sti
enter
pop
pop
popa
and
fisubrl
mov
xchg
pop
stos
sbb
pop
xor
mov
cmp
pop
cmpsb
jne
fnstsw
and
cmp
xchg
insb
arpl
xor
mov
xchg
movsb
in
fnstcw
outsl
push
jne
sub
add
out
adc
mov
push
add
mov
fildl
and
push
clc
pop
test
and
push
in
in
jl
push
in
nop
adc
jl
aas
imul
sbb
xlat
pop
add
scas
jae
ljmp
and
and
sbb
dec
push
adc
dec
pop
jle
js
and
das
sbb
aas
jnp
push
std
popa
adc
cmp
jp
iret
dec
mov
sbbb
adc
mov
or
push
stc
pusha
cltd
xchg
es
inc
imul
lock
push
jmp
mov
mov
mov
jne
adc
outsl
loope
lods
sbb
pop
jmp
aaa
cmp
ja
int3
int
sub
loope
sub
aas
dec
push
scas
test
and
aaa
add
cltd
xchg
mov
inc
sbb
out
jno
adc
push
or
mov
push
mov
sbb
sbb
adc
mov
inc
xor
in
shrb
jns
add
sar
test
fs
add
hlt
mov
into
cmpsb
push
push
pop
mov
leave
stc
inc
cmp
icebp
hlt
mull
fs
xorb
push
inc
fnsave
cmp
addr16
fdivr
push
xchg
jnp
fwait
push
pop
pop
jne
mov
pop
jge
test
xchg
insl
xchg
push
loop
mov
mov
pop
inc
and
add
out
pop
stc
sti
incb
setge
shlb
jnp
push
outsl
sbbl
repz
sbb
fdivp
xchg
fimuls
call
mov
jae
or
pop
push
xchg
imul
inc
rsm
sub
xlat
movsb
dec
sub
je
imul
xor
cmc
addr16
mov
and
shr
ror
sub
jo
test
mov
sbb
sub
xchg
cmp
push
outsb
test
jbe
add
ljmp
loop
mov
cs
jmp
inc
sub
loopne
xor
push
cmpsl
xor
jns
outsb
hlt
adc
cld
enter
add
xchg
cmpsb
inc
stc
imul
jno
sbbb
cmp
addl
xchg
xor
sub
fdivs
mov
mov
jo
popf
loop
push
divl
repnz
jl
jae
xchg
outsb
repnz
adc
mov
adc
repz
pop
xchg
sub
in
xchg
dec
and
loope
shrl
dec
sbb
adc
insb
push
cmp
cs
dec
adc
inc
popf
adc
xchg
jmp
sbb
mov
xor
sbb
lret
lahf
pop
imul
jmp
mov
xor
jns
mov
int3
mov
notb
fistpl
sub
or
imul
pop
mov
mov
cmp
mov
inc
rclb
or
fcompl
push
xchg
xor
adc
mov
fcoml
push
or
lea
aaa
shlb
xchg
dec
andl
mov
inc
and
sbb
mov
arpl
test
sub
repz
jns
push
jl
jne
mov
cmp
xchg
test
addl
push
outsl
xchg
pop
out
adc
adc
cmc
movsl
iret
and
adc
mov
mov
aam
movsl
adc
pop
sub
push
xor
in
and
test
mov
jl
popa
push
es
inc
jo
pop
push
aaa
outsb
xor
jbe
and
stc
jne
sub
loop
idivl
inc
movsl
mov
pop
rorl
outsb
mov
jp
sti
into
jno
incb
xchg
mov
inc
lods
movb
and
movsl
lea
xor
lds
xchg
mov
ret
xchg
lret
sub
fmuls
sub
cmp
sub
ja
jge
or
jp
mov
push
cmp
shl
mov
inc
and
clc
std
and
outsl
jle
jb
sarb
in
xor
cmpsl
and
or
inc
xchg
rcrl
inc
fnsave
insb
mov
fsubl
test
leave
das
lret
in
push
lret
popf
xchg
lahf
mov
clc
jnp
lcall
ret
movsl
mov
or
and
int3
pop
push
xchg
sub
push
in
push
cmpb
jl
ret
lods
mov
repz
push
jnp
push
out
insb
pop
pop
loop
test
addr16
fwait
ljmp
and
push
jmp
jecxz
mov
into
xor
pop
sbb
cmp
out
ja
or
imul
pop
out
popa
push
push
scas
sbb
mulb
cmc
xchg
add
cli
push
adc
or
mov
xor
stos
dec
push
jns
add
jmp
adc
jns
in
jne
int3
popf
inc
shll
enter
or
aad
mov
jne
push
push
outsl
pusha
mov
cmp
lret
outsl
outsb
je
mov
scas
xchg
cwtl
mov
push
push
pop
popa
pusha
push
ljmp
sub
imul
js
sbb
dec
fildll
leave
hlt
or
call
jnp
pop
dec
dec
dec
outsl
jno
int
es
loopne
xchg
pop
inc
icebp
sarb
xorb
cli
jb
jae
pop
push
push
cmpsb
cltd
jo
mov
lds
iret
addr16
cmp
outsb
iret
iret
shr
mov
pushf
pop
add
push
xchg
dec
xchg
inc
insl
jge
inc
shlb
and
aaa
jae
popf
dec
loop
call
inc
push
lods
push
or
xor
xor
mov
xor
dec
jle
dec
loopne
inc
mov
scas
in
mov
push
mov
cltd
jecxz
add
add
add
cs
aam
mov
jb
lret
adc
sub
fsubr
repnz
scas
test
fisubs
cmpsl
jmp
popf
loopne
fiadds
sub
pop
sbb
js
jge
xchg
cltd
fstpt
xchg
repz
mov
repz
push
adc
pop
out
mov
test
enter
pop
mov
rclb
sub
dec
jb
rorb
and
jecxz
movsl
enter
cld
mov
push
aad
add
fistl
adc
stos
push
mov
lock
ss
lea
rclb
dec
jb
dec
sti
lret
movsb
pop
and
lahf
test
out
and
mov
scas
sbbl
das
lcall
xchg
inc
jg
lret
sti
icebp
pop
pop
pop
xchg
jge
jecxz
xor
js
in
repz
pop
int3
data16
lods
sub
pop
and
xor
mov
or
or
out
and
push
lods
jae
in
adc
pop
icebp
xor
repz
jmp
lret
flds
inc
shr
ror
movsb
mov
xchg
shrb
mov
popa
push
les
bound
repz
cld
pusha
test
adc
pop
adc
ret
and
adc
popa
sub
mov
andl
and
xchg
mov
pushf
jmp
cwtl
or
sbb
pop
ret
lea
enter
ss
push
nop
cmpsb
js
arpl
cmp
push
fdivrs
dec
in
inc
dec
cmpsl
cmp
fisttps
jne
orb
fmuls
cwtl
lea
dec
cmpsb
pop
lahf
mov
pushf
lods
dec
test
or
imulb
out
jne
popa
sahf
iret
xor
notl
pop
outsl
imul
jl
cmp
pushf
xor
pop
negb
imul
lods
push
mov
jnp
addr16
pop
mov
add
or
jp
jmp
push
add
mov
mov
clc
jl
inc
stc
orl
push
ja
inc
jp
inc
subl
push
dec
and
divl
sub
inc
dec
inc
push
aad
fxch
into
cmp
sub
sub
arpl
push
mov
ret
scas
out
push
je
pop
xchg
cltd
call
out
mov
pop
repz
pop
punpcklwd
mov
lahf
aam
ss
jmp
lahf
xor
into
sub
mov
hlt
sbb
inc
lods
jns
fcompl
jns
popa
mov
sub
aam
in
std
mov
out
test
xor
pop
rcll
lea
add
lret
mov
in
dec
mov
sbb
mov
aam
mov
mov
stos
testb
icebp
shll
int
rclb
pop
repnz
ret
push
pop
jecxz
jae
mov
lea
sar
fistl
mov
out
ljmp
in
push
fimuls
jle
xchg
cld
pop
dec
es
daa
movsb
push
mov
movsb
jge
je
adc
test
cmpl
jge
mov
test
in
test
sub
fisubs
imul
fwait
das
dec
jecxz
cmp
outsb
in
xor
sbb
push
loop
mov
sahf
adc
das
scas
cmp
mull
loop
jne
fstpt
mov
inc
lods
cmc
test
fldenv
shll
in
repz
mov
xchg
jns
stos
aam
dec
aaa
pop
loop
sbb
xchg
enter
dec
fstpl
mov
js
push
xchg
xchg
lea
sar
movsb
cmc
les
int
stc
jno
lods
mov
insb
push
and
or
rol
mov
or
xchg
daa
aad
mov
imul
sbb
mov
and
xor
je
mov
jnp
mov
fs
sbb
test
xor
jb
rclb
fidivrl
test
dec
push
fst
je
sbb
mov
sub
add
pop
push
mov
orb
mov
pop
jae
lret
jmp
pop
loopne
divl
pop
ss
aaa
adc
lods
rorl
add
enter
loopnew
fistpll
mov
adc
cmp
stos
add
ret
out
and
or
mov
and
jne
lret
pusha
push
cld
out
push
sub
dec
cmc
sbb
xor
pusha
mov
push
out
lcall
jnp,pn
movsl
jo
or
mov
rcrl
int
shrb
xchg
ret
pushf
add
std
xor
xlat
sbb
ret
push
adcl
jae
and
pop
scas
movsl
fisubrl
and
les
rcrl
pop
add
xor
call
std
push
jo
inc
test
pop
cmp
adcl
fadd
cld
insl
pop
aas
mov
std
repz
pop
lahf
push
imul
xor
inc
out
int3
in
test
fistpll
adc
sarb
push
ja
jno
cmp
das
dec
cmp
pop
pushf
and
cwtl
jns
insb
loop
add
pop
push
das
inc
inc
mov
shll
inc
fcmovnu
xchg
aad
popa
pop
inc
repnz
inc
xor
adc
repnz
or
xor
clc
inc
adc
jne
je
imul
sub
dec
sub
or
xchg
or
divl
mov
cmp
push
add
int
mov
dec
push
xchg
jp
cmp
fmull
jbe
pushf
jl
ljmp
adc
loop
lcall
shrb
ffreep
mov
or
inc
shlb
pop
mov
cmpsb
pop
jo
stc
add
inc
mov
push
cmp
sub
jl
stos
mov
mov
and
dec
ja
adc
lcall
es
ret
jae
jge
adc
test
mov
arpl
sub
mov
fsubp
push
divl
add
ljmp
ds
scas
dec
jp
mov
sarl
out
cwtl
popf
push
push
orl
xor
ljmp
and
mov
das
mov
jge
aad
jl
lahf
scas
jne
cmp
cmp
andb
inc
call
adc
popf
pop
inc
int
fidivl
pop
in
adc
adc
mov
mov
fs
push
loope
cli
push
push
pop
jge
cmpsb
into
cmp
je
jne,pt
cmp
dec
cmp
std
jae
sbb
call
lcall
cltd
mov
jb
push
test
mov
imul
aad
pop
scas
jnp
cmpl
jne
loope
xchg
les
xor
xor
leave
insb
pusha
or
rcll
imul
and
movsb
mov
pop
rol
dec
push
lods
and
cmp
out
push
push
xchg
test
cmpsl
sti
aas
das
repz
fdivrs
out
push
jns
mov
xchg
sbb
or
lods
dec
dec
cmpsb
xor
sti
loope
cltd
int
push
lods
sti
andb
jo
mov
fists
xlat
xlat
mov
iret
or
outsl
cmp
fsubrl
xor
mov
fistl
icebp
xchg
es
es
imul
xlat
decl
jl
insb
cmp
push
lods
pop
xor
xor
dec
popa
mov
pop
and
jge
mov
test
add
jno
insl
mov
or
push
shrb
adc
push
pop
xchg
movl
push
cmp
outsb
cmpb
fucomi
rolb
and
stos
lcall
cmpsb
out
sub
xor
dec
sbb
fcoml
jno
inc
cmp
dec
mov
push
add
gs
stc
ret
sbb
adc
dec
jne
loop
sahf
shll
lods
aad
mov
mov
or
and
popf
push
sbb
inc
out
loope
mov
mov
mov
add
add
notl
adc
testb
adc
jecxz
test
pushf
mov
mov
jae
mov
popf
clc
testl
lock
and
push
pop
or
loop
stc
mov
gs
das
adc
pop
movsl
fs
sub
enter
cmpsl
in
sub
and
fcompl
inc
xchg
adc
lods
leave
rolb
f2xm1
sbb
and
fisttpll
push
mov
mov
sbb
or
arpl
ficompl
hlt
and
sub
aas
xchg
fists
and
push
mov
cmp
fistpl
addr16
sub
int3
or
fidivs
push
ret
xchg
mov
and
xor
jbe
and
iret
mov
sub
sub
leave
cmp
lret
insl
aam
and
jns
dec
jle
lcall
out
repnz
sarl
pushl
jbe
sbb
sahf
push
lcall
cmp
rclb
in
jle
ret
in
pop
jge
aas
mov
cwtl
adc
addb
pushf
jle
xchg
movsl
movsl
lock
inc
aad
movsb
pusha
mov
jp
xchg
lcall
xchg
fs
adc
sbb
leave
jp
lods
out
ret
sbb
cmp
popa
push
test
out
fsubrl
test
decb
sub
xchg
arpl
in
jmp
fildl
shl
clc
mov
es
xchg
test
out
fsubl
testl
mov
push
fbld
jmp
cmp
mov
ss
js
mov
jp
push
je
xchg
push
mov
fidivrs
jns
push
dec
xor
xchg
inc
dec
dec
cmpsl
jnp
imul
sub
add
adc
mov
mov
xor
pop
jmp
mov
or
mov
jnp
leave
pop
out
insb
push
or
outsl
adc
jo
scas
daa
lea
repz
jno
push
shlb
pop
mov
bound
int3
jg
in
adc
adc
out
cmp
subb
std
sarl
push
jbe
sbb
dec
cmp
dec
inc
sbb
in
pavgw
es
cmp
jne
push
ss
pop
mov
stc
xor
jecxz
cwtl
pushf
cmpsb
add
add
sbb
lods
inc
cld
sbb
std
ja
xchg
scas
lods
jne
popa
sub
sbb
xor
mov
cltd
pop
cmp
out
mov
push
pop
sub
dec
outsl
mov
mov
dec
mov
cmpsl
leave
pop
test
push
jl
cmpxchg
aaa
cmpsb
push
lods
push
push
xlat
wrmsr
or
inc
jmp
push
dec
push
insl
push
mov
sbb
fsub
rcr
flds
dec
push
xchg
add
sub
jmp
addr16
cmp
lods
jae
fists
jns
sarl
iret
imul
or
sar
jp
jnp
mov
insb
cmp
jae,pn
xchg
mov
pop
fwait
int3
push
test
rclb
je
or
lods
mov
and
and
mov
pop
notl
int3
das
jmp
clc
mov
movsl
data16
sbb
sbb
push
mov
dec
lret
dec
lods
addr16
test
xchg
out
cli
leave
je
int
popf
cmp
stos
jge
xchg
adc
cli
push
xlat
mov
test
xchg
push
dec
daa
xor
js
mov
in
test
lahf
dec
jle
gs
movsb
cmp
cmpsl
in
sub
sub
outsl
fcmovnbe
inc
push
fcmovb
xor
jmp
in
neg
aas
push
repz
jle
int3
enter
push
rcr
sbb
stos
ret
jp
xorl
cli
push
mov
adc
ljmp
pop
dec
lret
xchg
mov
and
or
insl
mov
fs
pop
movb
mov
push
jno
mov
mov
mov
jl
push
loopne
xchg
sar
movl
cmp
sti
and
lock
sub
or
popa
inc
dec
call
loop
inc
popa
mov
add
aam
cltd
sti
push
sub
cltd
aas
sub
mov
out
xor
push
in
xor
adc
rorl
test
xchg
popf
enter
pop
jo
fidivrs
fucom
mov
xchg
cmp
xchg
dec
aad
shlb
pop
fs
enter
out
leave
inc
jecxz
outsl
outsl
iret
out
push
adc
in
loopne
xor
pushf
ja
pop
mov
repnz
pop
mov
sbb
mov
mov
xchg
jle
xchg
or
lock
js
pop
xchg
data16
pop
sub
or
ja
xchg
push
xchg
xchg
aaa
scas
shlb
fs
roll
mov
nop
adcl
mov
pop
jecxz
sbb
andl
lods
rol
mov
jle
ljmp
gs
pusha
icebp
pop
jae
pop
shll
rolb
xor
iret
test
mov
fisubs
stos
mov
in
enter
xchg
push
dec
in
pop
mov
adc
stos
adcb
in
push
fsts
mov
adc
and
aaa
and
sub
push
roll
and
mov
movsl
or
jge
add
push
mov
outsb
mov
ds
sbb
ss
jns
rolb
rcll
mov
mov
mov
sbb
adc
das
hlt
fcomp
push
cmp
jmp
lcall
jbe
pop
fnstenv
jg
inc
push
pop
das
push
rorl
xor
push
mov
mov
jl
add
aam
cmc
adc
daa
ret
dec
arpl
sti
cmp
lahf
mov
adc
push
mov
ucomiss
lcall
mulb
test
mov
sbb
mov
push
ret
sub
mov
dec
movsl
mov
sub
int
mov
fstpl
mov
js
lea
fists
fbld
lret
mov
lret
dec
cmpsb
lahf
adc
cmp
push
fidivrs
pop
cmp
mov
mov
sub
cmpb
lods
lds
sti
mov
fstl
pop
jp
imul
cmpsb
xor
das
jp
adc
daa
cs
jbe
and
ret
jb
cwtl
push
mov
jmp
sbb
shll
jmp
pop
fcmovnb
dec
cmp
aas
sbb
xchg
xor
subl
cmpsl
popf
or
data16
imul
ss
adc
fisttps
inc
mov
pusha
ret
add
mov
sub
push
es
jb
rclb
sub
mov
stos
push
sub
sub
lret
mov
enter
idivb
cmp
in
dec
lret
repnz
bound
dec
insl
fidivrs
inc
pop
dec
aam
pusha
sub
iret
lock
cmc
pop
fdivr
mov
in
sti
mov
xor
adc
xor
xor
shr
push
lock
test
jmp
inc
loope
sbb
jmp
lea
pop
shll
inc
cld
insl
pop
je
or
xor
sub
testb
aad
mov
outsl
adc
lock
dec
inc
adc
into
loope
cmp
add
insl
xchg
push
xchg
add
push
sti
dec
dec
mov
clc
inc
sub
xchg
cmpsb
out
sarb
xorb
add
push
xor
outsb
add
sbb
jae
adc
sbb
pusha
out
sbb
loopne
xor
mov
shl
scas
in
inc
pusha
stos
jae
fidivs
loopne
sahf
es
pop
inc
xor
mov
add
or
mov
and
movsb
adc
add
ja
cmp
jae
adc
or
jge
call
cvtpi2ps
lods
das
repz
push
daa
xchg
sarb
insl
pop
sub
push
push
xchg
pusha
inc
es
int3
sahf
add
adc
cmpsl
mov
bnd
jp
push
jp
aam
cwtl
fdivl
insb
insb
mov
ret
cld
mov
neg
iret
out
imul
push
sub
ds
adc
pusha
xor
in
mov
sub
sub
loop
jge
andb
and
jns
hlt
fs
clc
inc
adc
fwait
or
add
cmp
iret
aaa
insl
mov
int
cld
mov
sbb
mov
in
push
pop
rcrl
scas
push
xchg
xchg
pop
out
mov
dec
loope
push
out
pop
pop
mov
insb
jmp
jo,pn
xchg
sbb
mov
xor
loop
mov
call
arpl
fwait
call
faddl
lock
shlb
fisubrs
loop
into
loope
push
cmp
leave
lahf
nop
sub
add
les
jns
push
loope
leave
fwait
pop
fsubl
inc
and
and
push
adc
sbbb
outsb
movsb
mov
into
adc
popa
push
mov
insb
les
mov
out
mov
pop
add
inc
stc
push
add
enter
ror
rorb
outsb
push
add
in
sub
inc
repnz
adc
stc
movsb
xchg
pushf
ljmp
mov
dec
sarl
test
fst
leave
or
lods
nop
add
jmp
outsb
add
sbb
out
pop
jge
int
repz
adc
xchg
insb
adc
push
das
jmp
mov
mov
lock
adc
push
cmc
lahf
jno
push
pop
in
rcr
subl
rolb
fisttpll
bound
push
mov
xchg
inc
stos
jg
test
mov
out
out
xchg
shll
int
call
inc
fcomi
loop
aas
sbb
mov
xchg
loop
dec
ss
mov
cwtl
inc
dec
mov
outsl
idiv
sbb
scas
mov
aad
jo
and
xchg
pop
out
leave
scas
add
lret
mov
test
orb
jge
shll
adc
aad
in
loop
push
and
sti
iret
sbb
repz
add
into
xor
push
shrb
test
dec
mov
lea
incl
daa
in
add
roll
pop
push
in
dec
out
xchg
adc
mov
ret
mov
repz
cld
sub
mov
aas
xchg
imul
mov
xchg
xchg
out
ds
cld
sub
or
inc
cmpsb
adc
jb
sbb
mov
scas
mov
or
das
jle
mov
jns
sbb
aad
xorb
push
ss
jl
inc
sub
xor
or
cmpsb
mov
sub
add
test
sub
or
pop
sbb
mov
jo
in
inc
inc
loope
cli
mov
sub
mov
xchg
popf
push
into
add
das
lret
je
popf
xor
xor
push
dec
or
jnp
jecxz
pop
lcall
sti
sbb
call
lret
dec
pop
add
cmp
outsb
inc
lret
es
mov
test
pop
lea
jle
mov
fs
push
adc
gs
pop
dec
sub
fstps
and
jbe
out
cltd
fstpl
xor
jne
push
test
es
push
pop
mov
loop
add
pop
fs
mov
mov
pop
stos
xor
in
add
push
stos
jg
mov
loopne
test
loope
iret
lret
add
cmp
test
push
sbb
mov
pusha
cmp
adc
rorl
sbb
jbe
into
popf
cmp
mov
ja
mov
jl
aas
insl
mov
or
push
ds
stos
ret
sub
xchg
xlat
ret
mov
clc
push
and
sub
cwtl
pusha
dec
add
stos
ds
shlb
mov
and
scas
mov
test
das
test
dec
mov
push
sarl
sbb
addr16
pop
mov
sbb
lock
xchg
push
sub
add
push
inc
callw
cmp
mov
sahf
test
push
fs
and
xchg
inc
xor
out
rcrl
cltd
mov
xchg
cmc
dec
in
sub
push
push
jns
mov
lock
push
ds
cmp
xchg
int3
addr16
pop
jmp
mov
mov
dec
pop
add
xor
mov
loopne
adc
pop
lcall
call
pushf
js
lcall
mov
mov
cmp
mov
sarb
dec
or
xor
or
pop
push
dec
push
mov
jecxz
clc
sbb
std
push
jo
dec
out
rclb
mov
shrl
stos
in
pusha
leave
pop
xor
outsl
dec
xor
cmp
sbb
movsl
dec
push
out
test
rorl
add
shr
cmp
in
inc
dec
jno
es
cmp
sarl
push
add
es
popa
imul
dec
dec
in
ffreep
fisttps
stos
or
mov
pop
pop
in
mov
mov
jge
lock
lahf
ljmp
std
sub
jg
mov
repnz
inc
sahf
dec
sarb
rcrl
dec
loope
or
jno
shll
push
fstpt
aad
push
mov
pop
repnz
mov
xchg
jae
add
cltd
cwtl
sub
cld
pop
dec
dec
xchg
mov
mov
dec
div
mov
adcb
mov
into
mov
push
push
div
adc
movsb
and
sub
mov
push
push
push
clc
pop
jge
out
mov
and
cld
andl
xor
mov
adc
scas
loopne
cmp
or
pop
movsl
lods
out
rorb
mov
lret
mov
adc
pop
enter
aaa
addr16
outsb
dec
push
adc
pop
pop
jmp
notl
xchg
test
sarl
jnp
mov
push
hlt
fwait
test
add
sarl
cmpsl
repnz
sbb
sub
ja
test
pop
jb
mov
pop
das
mov
dec
push
in
mov
aam
cs
adc
neg
ja
insl
xchg
sarb
rcrb
pusha
pop
movsb
xchg
lahf
imul
pop
jge
shrb
movsl
or
xchg
jmp
scas
jns
xor
ljmp
xor
xchg
fldt
sbb
nop
and
and
sahf
cli
or
enter
mov
aaa
repnz
lods
jmp
int
lds
shlb
lock
mov
mov
scas
lock
inc
lret
das
ficoms
push
mov
movsl
xorl
in
cmp
ret
push
mov
out
lds
sbb
out
xchg
mov
mov
pop
mov
stos
inc
and
and
ljmp
rol
fucomi
in
xor
cmp
lock
jmp
imul
testb
and
xchg
cmp
inc
xchg
sbbl
enter
jg
aam
cli
xor
clc
imul
aad
xchg
jb
insb
das
arpl
jno
mov
imul
mov
hlt
add
mov
out
dec
push
jnp
or
cmp
cmp
je
jmp
mov
xchg
xchg
test
je
push
push
pop
add
fisubrs
rorb
dec
ds
mov
mov
shrl
fcompl
push
das
popa
pop
shl
gs
scas
mov
cli
or
or
test
shlb
pushf
mov
leave
mov
out
push
fs
in
mov
negl
mov
push
jl
in
mov
mov
lods
lcall
jno
adc
mov
pop
xchg
push
sub
lret
xchg
mov
push
adc
enter
mov
jg
sub
pop
cmp
jp
mov
lret
mov
cmp
das
or
out
gs
incb
inc
pop
pop
stc
xchg
mov
mov
sbb
push
mov
hlt
xlat
out
sbb
mov
add
mov
stc
inc
iret
cmpsb
mov
int3
call
mov
sti
mov
inc
and
push
or
test
in
clc
inc
lcall
mov
mov
lods
mov
test
pushf
xchg
mov
add
sub
or
pop
pop
jp
xor
push
mov
inc
clc
xchg
mov
push
cmc
adc
xchg
and
xlat
adc
mov
pop
movsb
add
push
mov
push
fwait
add
cli
and
push
int
mov
je
add
inc
jp
pop
dec
xor
arpl
xor
cmp
xchg
test
daa
push
jne
cmp
lock
test
push
insl
out
cs
popf
xchg
lret
xor
ds
out
ret
fs
mov
jg
sub
js
pop
xchg
lret
cmp
lods
cwtl
mov
mov
sub
adc
cmpsb
jb
mov
lock
inc
out
push
sub
push
mov
jle
dec
xchg
and
fidivl
lea
and
and
mov
jl
and
pop
xchg
push
sub
and
ljmp
cmpl
fbstp
icebp
test
xor
iret
add
pop
push
fcmovbe
mov
pop
test
mov
das
pop
mov
arpl
push
mov
jnp
pop
popf
mov
lret
fisubrs
inc
test
or
popf
gs
fists
call
fcoml
sub
imul
loop
rolb
and
push
outsl
call
lret
xor
push
and
jmp
ret
cmp
lock
data16
xchg
mov
jp
push
fsubl
cmp
stos
adc
sbb
add
aam
imul
add
loop
mov
jge
and
cmp
cmp
ret
xor
sub
cmpsl
xor
jo
scas
sbb
and
and
stos
mov
pushf
js
inc
mov
xor
fs
std
cmp
sbb
outsl
popf
cmp
insl
mov
mov
mov
adc
pop
cmp
sub
cltd
cltd
inc
movsl
cltd
jg
inc
sahf
packuswb
int
sbb
stos
push
roll
shl
dec
icebp
mov
sbb
add
fisubs
xchg
bound
pop
ss
je
and
xchg
mov
push
sub
push
mov
es
sub
loope
stos
sub
scas
push
or
loop
fistpll
call
insl
adc
cmp
andl
mov
fisubl
enter
xor
scas
test
pop
jo
push
ds
add
fisubrs
outsl
mov
movsl
mov
mov
dec
dec
mov
or
leave
pop
pop
lret
or
push
shrb
js
cmp
ja
xchg
jne
dec
adc
add
jo
xchg
inc
mov
int3
in
mov
jne
xorb
mov
xchg
inc
adc
cmp
fcomps
imul
inc
aam
mov
hlt
call
xlat
ret
lock
mulb
loopne
and
shl
sbb
adc
fnstenvs
in
icebp
inc
inc
out
inc
mov
jno
mov
inc
pusha
add
jbe
pop
stos
mov
xor
in
sbb
cld
jo
adc
cmp
jnp,pt
ja
lret
nop
mov
xchg
mov
arpl
dec
xlat
xchg
mov
push
xchg
addl
pop
js
xor
stos
mov
mov
scas
mov
scas
xchg
out
adc
stc
sbb
sti
mov
pop
xchg
mov
inc
daa
xchg
push
push
xabort
pop
fimuls
lahf
or
ja
lds
arpl
pusha
push
sub
mov
mov
divl
inc
adc
mov
cmpb
popf
push
xor
xchg
outsb
addb
add
sub
gs
inc
std
dec
mov
push
icebp
inc
cmpsl
fisubl
adc
mov
shr
push
ljmp
divb
inc
stos
pop
jp
xor
mov
add
cmc
cmc
sahf
cmp
cmp
in
xchg
cmp
dec
add
inc
mov
adc
inc
scas
int
dec
dec
push
mov
cli
jmp
ret
sub
mov
xor
je
data16
mov
inc
dec
lods
xchg
lock
jb
jp
inc
add
push
out
int3
xchg
pop
cltd
push
mov
pop
adc
lret
jle
int3
pop
adc
mov
jo
iret
ljmp
lret
sahf
dec
outsb
xchg
dec
int3
inc
in
jl
movsl
movsl
neg
push
xor
and
dec
fs
inc
push
push
lea
cmc
insl
daa
fmuls
adc
xchg
jnp
stos
xor
mov
fdivrl
fdivrp
adc
mov
push
push
jb
shll
rorl
cmp
mov
or
stos
cmpsb
push
pop
or
dec
dec
repz
pushf
push
dec
lret
int3
sbb
jge
jo
jbe
xchg
inc
faddl
iret
les
sarl
sub
mov
inc
insl
lahf
push
mov
repnz
add
mov
xchg
test
jb
xchg
cld
add
outsb
sbb
cmp
shrb
insl
sbb
xchg
mov
fcmove
xchg
mov
jecxz
sub
mov
mov
cmp
xchg
mov
inc
fadds
adc
fistl
pop
or
scas
popa
shl
dec
cmp
sbb
sub
cmpb
mov
sbb
jbe
add
xor
aas
or
outsb
jge
cmp
cli
xlat
pushf
cli
jg
sbb
push
rcrl
fwait
std
in
dec
pop
sbb
mov
push
pop
add
neg
outsl
mov
les
xlat
stos
xor
stc
call
jne
xchg
mov
lods
xor
sub
fcompl
fs
ljmp
mov
cmpsl
inc
add
mov
push
ja
adc
flds
inc
fwait
lret
and
in
inc
lahf
popa
xorl
pop
popa
inc
dec
das
fmuls
outsl
shrl
repz
mov
into
data16
xor
mov
lret
outsl
and
adcl
pop
xchg
fidivs
loopne
mov
inc
inc
jno
rolb
xor
adc
repnz
pop
or
sbb
fimuls
lea
inc
mov
popa
adc
cmp
out
adc
sub
repnz
xor
inc
sbb
mov
cmpsl
cwtl
add
loop
and
mov
aas
scas
mov
pop
sub
ret
cli
mov
adc
sbb
push
clc
sub
fisubs
cs
xor
inc
push
insb
add
and
dec
cmpsl
pop
imul
int
outsl
addr16
andb
xor
lret
aas
and
in
fs
out
push
cli
ds
cli
or
shrl
imul
fnsave
sub
mov
lods
test
mov
daa
fdivrs
out
xor
sbb
xchg
jo
inc
push
mov
jo
sub
stos
push
sti
jl
adcl
push
and
lods
js
pop
roll
pop
loopne
sub
shr
inc
push
or
jle,pn
xchg
sarl
int3
jne
inc
rcll
xchg
pop
dec
pop
or
cmp
mov
mov
ljmp
sbb
push
test
iret
pop
iret
popf
sub
mov
mov
cmc
pop
ffree
ret
hlt
inc
xor
ja
jl
hlt
lock
fs
mov
add
or
ret
push
push
aaa
popf
lea
cmpsb
pushf
jbe
cwtl
add
jae
push
pop
mov
jmp
pop
jle
cli
iret
cmp
add
cmpsb
jbe
sti
mov
int3
xor
jp
ljmp
lods
bound
cs
test
cmpsb
cmp
and
test
repz
leave
nop
fstps
addb
in
cmp
data16
test
movsl
inc
cmp
test
jg
mov
xor
cld
fwait
jg
stc
mov
xchg
push
stc
stos
sbbb
scas
test
or
jp
loopne
jno
mov
shlb
out
cmp
insl
rcll
cmp
cmp
jg
sti
mov
test
add
in
lods
mov
mov
add
iret
mov
leave
push
fcompl
or
pop
jg
in
pop
inc
sub
adc
push
or
movb
icebp
arpl
ss
orb
push
test
jbe
adc
or
push
cld
cltd
push
cmpsb
dec
cmp
into
in
sub
jo
xor
xchg
arpl
fwait
xchg
sub
adc
rclb
xchg
aaa
jg
mov
out
shr
mov
cltd
jle
loopne
subl
cmp
mov
repnz
and
icebp
add
ljmp
dec
cmp
rclb
sbb
adc
cmp
cli
int
and
and
adc
jl
mov
ljmp
xchg
mov
sti
lret
mov
xor
bound
sbb
push
ljmp
cmp
pusha
aas
pop
arpl
pop
add
popf
inc
pop
and
push
scas
call
test
add
shl
pushf
cs
pop
loop
cli
and
lods
dec
xchg
je
repnz
mov
shll
sub
sub
adc
adc
call
sahf
cmpsb
aam
shll
fadds
jmp
testb
sbb
out
insb
ror
lret
lahf
dec
aad
or
mov
jp
sti
shlb
mov
dec
mov
shlb
shll
cli
inc
int
shrb
movsb
xchg
ret
shlb
sub
cwtl
lahf
push
outsl
pop
imul
andl
pop
test
mov
popa
xor
jbe
inc
dec
xchg
and
flds
cmc
icebp
imul
ret
push
popf
gs
mov
xchg
test
sub
jmp
mov
leave
or
mov
jl
mov
fs
mov
rolb
loope
xor
hlt
in
inc
cwtl
dec
mov
and
push
xchg
dec
mov
dec
stc
jns
pop
mov
movsl
mov
int3
mov
popa
xchg
dec
mov
mov
out
mov
out
dec
and
pop
xor
loope
push
cmp
jg
mov
jns
mov
ret
insl
cmp
ret
call
lret
stc
sbb
imul
je
aaa
or
daa
subb
xchg
sahf
popa
inc
pop
push
aas
test
push
push
add
pop
pop
fisubs
pop
sub
lods
push
mov
xchg
cld
xlat
xor
hlt
addr16
sub
fwait
scas
loopne
jns
int3
rcll
and
loop
aam
or
and
in
or
xor
mov
mov
int
int
push
mov
std
add
and
stc
adc
and
mov
mov
mov
xchg
jb
adc
or
repnz
mov
mov
jbe
mulb
loopne
movl
mov
jmp
in
mulb
add
and
mov
xorb
adc
jge
push
xor
stc
xchg
or
mov
cmp
dec
cmp
xor
pop
or
xchg
fistpll
xlat
lods
fwait
jg
and
nop
jg
adc
std
sbb
xchg
cmpl
dec
cld
mov
inc
lahf
inc
cld
sub
dec
sbb
or
jns
pop
cld
and
lret
jl
out
cmp
cmp
mov
add
rol
testl
cld
popf
lret
loope
xor
cs
mov
icebp
imul
mov
pop
stos
add
les
outsl
nop
andb
mov
orb
es
mov
or
cmp
push
jl
sbb
ficomps
into
pop
daa
dec
push
sub
xchg
js
cltd
add
je
mov
sub
jmp
fistpll
lds
pop
out
and
and
jae
adc
clc
push
sti
cmpsl
test
add
jnp
and
test
ds
call
mov
cmpsb
and
mov
rolb
js
mov
ret
aaa
pop
xorb
shrb
ret
xchg
mov
xchg
mov
and
inc
roll
int3
cmp
cmp
jo
test
lret
inc
sub
inc
push
and
movsb
rorb
xchg
xchg
xor
movb
add
xchg
lods
out
jo
std
push
popa
sbb
sub
add
jae
cmp
pop
idivb
jge
xchg
adc
aaa
movsb
popa
loope
lret
and
push
inc
sbb
fwait
lea
add
shrl
mov
pop
adc
lret
test
inc
mov
mov
bound
dec
mov
insl
jns
es
cmp
pop
and
pop
xor
jle
pop
push
fs
lea
adcl
les
enter
lret
jnp
out
xchg
push
popf
cmp
mov
cmpl
pop
or
mov
inc
or
ficoms
xchg
rcl
cwtl
mov
stos
andl
bound
loopne
cmpsb
rcrb
negl
repnz
fbstp
das
xchg
rorl
movsl
fimuls
in
lods
sahf
jecxz
cmp
ffree
std
dec
mov
stc
push
adc
pushf
sub
xor
mov
sub
cli
lret
mov
cmp
mov
cmc
cmp
sarl
adc
xor
aam
sub
dec
sbb
stos
icebp
mov
enter
or
xchg
arpl
mov
adc
les
clc
sub
mov
push
popa
pushl
lock
les
aas
cmp
mov
xchg
mov
jmp
or
negl
incb
pop
cmpb
stc
out
lods
das
jmp
aas
push
adc
cli
cs
adc
bound
sarl
popf
gs
cmpsb
std
jae
in
adc
insb
xor
pop
cmc
pop
jp
ret
jp
mov
adc
inc
push
or
mov
sub
cmpsl
or
push
out
or
lock
iret
add
cmp
ja,pn
lds
mov
cmpsb
test
jge
outsl
xor
sub
in
cmp
jg
stos
xchg
stos
movsb
mov
icebp
pusha
loop
sbb
push
cmp
xchg
fdivrs
dec
movsl
bound
push
cmpb
sbb
loop
pop
push
inc
fistps
xor
dec
mov
mov
jge
je
in
xchg
out
std
leave
les
push
sub
xchg
fwait
push
adc
fdivp
cmc
ss
inc
push
sbb
add
movsb
fs
mov
mov
jns
xor
insb
imul
arpl
int3
fistpll
push
test
xor
xchg
add
stc
mov
adc
sahf
lahf
push
fldt
shrb
mov
es
pop
aad
jno
and
out
push
push
fcomi
jb
cli
imull
aaa
mov
pop
loopne
roll
xchg
hlt
jecxz
sub
dec
sbb
in
inc
movsb
cmpsl
push
sbb
icebp
sub
into
mov
adc
popa
pop
mov
nop
push
lret
dec
dec
xlat
sub
adc
add
mov
lds
mul
js
or
add
mov
fwait
sbb
aam
jno
cmp
mul
shlb
mov
mov
sbb
xchg
sub
comiss
sub
in
in
cmp
rcrb
mov
lret
adc
bound
outsl
add
int3
xlat
adcb
aaa
popf
call
cli
and
and
push
xchg
or
fidivrl
lods
push
les
fsubrs
in
xor
sbb
and
je
and
loop
aam
pushl
dec
fstl
or
cmp
inc
sbb
test
outsl
div
sub
mov
js
dec
imul
xor
rcll
ja
rorl
insl
lock
mov
adc
mov
flds
sub
fcmovnbe
les
pop
sub
loop
add
divl
push
inc
push
fists
aas
loope
inc
push
shlb
out
testb
fmull
jo
mov
inc
jno
fucom
outsl
bound
xchg
inc
or
aaa
jmp
int3
cmp
jp
int
cmpsb
mov
scas
imul
imul
repnz
inc
mov
xor
inc
add
cltd
movsb
dec
jmp
clc
gs
iret
xchg
mov
sbb
xchg
mov
and
addr16
xchg
and
scas
xlat
mov
push
add
mov
mov
and
and
int
or
or
clc
cmp
ret
cmp
sub
data16
pop
mov
mulb
lcall
mov
shrl
xchg
inc
mov
nop
addb
add
sub
loope
sbb
cmp
ror
test
inc
hlt
push
inc
ss
outsb
stos
imul
add
ror
xor
popa
push
and
std
pop
dec
push
mov
jae
cs
dec
sub
jb
into
popf
aad
stc
and
out
mov
cmp
jge
jmp
dec
push
or
sahf
add
dec
scas
xor
jp
frstor
lock
leave
sub
lds
sbb
ret
push
cs
sbb
mov
lahf
mov
sub
scas
push
fs
shlb
ret
or
mov
xor
out
mov
and
fs
xchg
dec
xchg
push
add
repnz
mov
lods
fadds
lods
push
outsl
fldl
mov
imul
mov
mov
call
mov
or
sub
xor
sbb
mov
movsl
sbb
mov
jp
fbstp
mov
ret
popa
dec
sbb
fistpl
add
js
ret
lret
icebp
imul
int
enter
jle
push
mov
lcall
adc
int3
scas
add
sub
sbb
mov
arpl
lret
repz
jae
add
in
fidivrl
jne
jbe
or
clc
test
lods
outsl
es
rcrb
lods
in
sbb
rorb
repz
mov
fs
lods
sub
xor
out
arpl
popf
outsb
stos
cwtl
mov
daa
pop
dec
or
add
cmpsb
lods
loopne
popf
sar
mov
jle
imull
sbb
sub
aas
xchg
dec
mov
pop
mov
ljmpw
or
xchg
iret
sbb
iret
jecxz
xchg
test
pushf
cld
xor
out
mov
loope
push
lods
mov
push
cmp
pop
arpl
arpl
ljmp
mov
imul
imul
mov
cmp
test
and
push
pushf
add
clc
push
in
xchg
cmp
arpl
xorb
push
inc
mov
imul
mov
xor
movb
test
scas
sub
push
loop
push
cmc
ljmp
mov
sbbb
pop
xchg
sub
flds
fnstsw
sbb
mov
lock
push
add
imul
jns
fistl
add
push
loopne
add
add
xchg
js
mov
int
fildl
sub
cmp
pop
std
or
mov
mov
loopne
popf
push
sbb
sub
xchg
je
test
push
lahf
push
sub
jg
sbbb
cmc
out
adc
xchg
inc
xchg
mov
mov
push
xor
idivb
hlt
sub
ret
jbe
or
adc
add
lods
dec
jecxz
test
sub
lret
dec
jo
jl
in
mov
push
cld
xor
inc
mov
in
insl
imul
lods
int
mulb
imul
dec
push
mov
add
iret
leave
scas
daa
repz
ss
addr16
push
xchg
or
out
mov
inc
push
jne
call
insl
movsl
lcall
ja
in
pop
mov
aas
enter
add
push
dec
out
je
mov
aaa
and
adc
lret
or
push
mov
test
in
mov
mov
sar
pop
and
loope
sub
flds
sbb
insb
lahf
insl
mov
dec
std
cld
cld
xchg
addr16
inc
dec
mulb
negl
loopne
dec
or
sub
or
ds
fwait
les
outsb
mov
add
and
mov
sub
sub
sub
dec
jae
jbe
or
inc
mov
outsl
or
das
jno
daa
lds
inc
insb
mov
sahf
jnp
idiv
cmc
add
cmp
std
out
scas
test
sub
shrl
mov
xchg
mov
lret
pop
adcl
stos
repz
sbb
adcb
mov
sub
imul
dec
ds
je
fs
out
cmp
sbb
mov
sarb
in
inc
push
lahf
in
push
outsb
add
pop
or
imul
test
mov
jmp
mov
sbb
sti
mov
icebp
movsb
mov
in
xchg
and
pop
mov
push
sahf
sbb
outsb
add
das
mov
jecxz
xchg
cltd
ffree
jns
mov
jmp
mov
pushf
pop
push
xor
mov
scas
fcoml
cmpsl
sbb
stc
xchg
roll
xor
aam
test
outsl
jnp
test
jl
es
pop
or
imul
aad
cmc
sub
popa
or
orl
or
pusha
js
xchg
aad
pop
mov
cmp
je
jae
data16
lcall
mov
jb
lcall
mov
sbb
inc
stos
rcrl
fidivl
out
sub
pusha
pop
hlt
sub
stos
inc
sbb
push
sub
cmp
mov
mov
sbb
cmp
jns
dec
data16
inc
frstor
or
es
xchg
dec
and
subb
pop
daa
push
int3
push
rcrb
into
popf
xchg
int
pop
push
pop
xor
dec
lahf
and
aad
push
icebp
add
sub
testl
jmp
sub
rorb
testb
dec
call
mov
sub
xchg
adc
xor
jno
lods
js
and
lret
pop
aad
fildll
js
ficoml
int
pop
rcl
cmp
xchg
sub
mov
outsl
jns
lea
cmp
rol
loope
das
adc
es
push
jge
call
push
jg
cmp
rcl
pop
push
loopne
ret
adc
and
nop
jae
cmpsl
nop
popa
add
sub
stos
mov
or
fstps
sub
mov
jg
lock
loopne
or
test
pushf
loopne
cwtl
xchg
adc
gs
aaa
cwtl
and
and
mov
call
mov
stc
dec
pop
lahf
leave
inc
pop
lods
pop
mov
jl
inc
pop
push
test
xchg
mov
ret
xor
cmpb
sarl
cmc
aad
sub
rorb
addr16
inc
dec
mov
xorl
mov
sub
sbbb
sti
mov
dec
outsb
jge
jns
ret
iret
ret
sti
mov
shlb
lret
inc
fildl
adcl
leave
cltd
jno
fsubrs
lret
xorl
aas
ljmp
shlb
scas
lcall
pop
pop
or
das
subl
sbb
enter
mov
shrd
push
loope
stos
sub
mov
lock
jno
cwtl
aad
test
sbb
dec
jle
push
in
jle
testl
sbb
or
repz
push
adc
fs
and
out
enter
xchg
mov
ds
stc
push
jg
cmp
cmc
inc
xchg
push
cmpsl
jl
scas
popf
shlb
data16
adc
add
dec
xchg
loop
repz
xlat
int
cmc
add
add
js
movsl
push
inc
pushl
jb
imul
imul
lea
pop
pop
xchg
lock
add
dec
mov
das
push
pop
push
and
dec
sbb
push
sbb
shr
ljmp
movsl
shll
mov
sbb
or
mov
and
add
sahf
sarl
pushf
xlat
mov
loopne
ss
add
stc
gs
sbb
std
dec
sub
bound
sbb
enter
jnp
sub
sbb
sub
jne
test
cli
xchg
adc
pop
out
fs
xchg
lret
inc
jg
and
loop
cs
hlt
inc
xor
lret
mov
jbe
jmp
scas
jno
jne
mov
into
test
or
test
pushf
dec
cmpsl
add
aaa
push
mov
jno
jb
icebp
in
aam
mov
jns
pop
cmpsb
jecxz
cld
cmp
lret
cmp
fwait
mov
fcmovb
adc
mov
cs
or
mov
push
scas
outsl
push
lods
int3
loope
mov
mov
add
mov
repz
repz
das
lock
in
arpl
lods
inc
testb
or
out
addr16
rcl
dec
xchg
icebp
pop
pop
jbe
inc
xchg
in
sbb
xor
jo
push
lret
mov
xor
fs
aam
cmp
cld
push
inc
std
shrb
xchg
or
mov
ljmp
imul
xchg
clc
or
int3
std
mov
jns
sahf
or
out
test
pop
jge
imul
in
jae
pop
and
push
lret
popf
int
shl
xor
je
dec
cs
loop
cmpl
cmp
fldt
jae
negb
out
loopne
sub
das
cmp
push
pop
or
jl
xchg
mov
dec
rol
inc
pop
or
sbb
in
xchg
pop
aad
dec
leave
shrb
push
jb
les
loop
add
pop
repnz
dec
jle
or
dec
xchg
xchg
pop
les
xchg
subb
das
push
sbb
mov
or
sahf
test
pop
push
sahf
sbbl
andl
popf
fcoms
ja
mov
sbb
and
sti
gs
xor
pop
mov
aad
lods
cmpsl
jge
mov
cmp
dec
push
jge
and
pop
xchg
mov
sbb
dec
clc
das
mov
pop
inc
popf
sti
call
inc
repz
lcall
fisttpl
int3
sub
mov
jmp
test
push
es
xchg
sub
xchg
mov
xor
outsb
jnp,pt
enter
mov
jmp
mov
inc
cltd
loope
pop
in
mov
or
es
out
mov
in
in
cmpsb
dec
popf
lds
data16
add
mov
jle
cwtl
inc
add
loopne
push
stos
dec
sar
mov
mov
test
pop
sub
sbb
fstpt
out
mov
mov
inc
sbb
sarl
out
mov
add
sub
ljmp
cmp
xor
fwait
mov
xchg
pop
sti
adc
inc
rcrl
pop
add
movsl
mov
ja
push
scas
or
xlat
xor
ja
mov
xlat
lods
mov
inc
shl
or
inc
je
imul
pop
or
loop
fcmovnbe
pop
push
inc
inc
push
pop
mov
push
pop
inc
fs
xchg
push
sarb
and
push
jo
insl
sbb
out
fldt
fwait
jle
xchg
cmp
popl
icebp
jle
rclb
idiv
cmp
sub
lds
cld
push
pop
enter
push
shrb
mov
in
ret
xorb
fcomps
jo
addb
pop
add
jo
test
mov
mov
fldt
pop
into
das
adc
clc
loop
xchg
cmp
stos
outsl
add
pop
inc
xchg
push
sub
into
push
sub
scas
in
lcall
and
pop
call
mov
push
mov
in
xchg
outsb
adc
or
lret
push
add
mov
adc
lods
in
cmpl
pop
lahf
pop
jg
jae
add
sub
jmp
insl
jne
jne
xchg
out
pop
rorl
roll
mov
or
pop
cmp
and
fisubrl
inc
fcmovne
mov
jnp
outsl
lea
loop
mov
lods
mov
inc
sahf
ss
jne
fsubs
aas
mov
cmp
xor
xchg
repz
pop
inc
loope
dec
std
sub
jns
cmovo
insl
push
stc
pop
lock
outsb
aaa
add
jno
sarl
fs
ret
scas
aam
adc
aad
mov
cmpsb
push
pushf
pop
pushf
lcall
xor
jae
sbb
adc
fwait
add
sbb
sbb
scas
mov
sbb
sar
mov
adc
mov
scas
aaa
push
sahf
push
xchg
sub
xor
cld
sub
movb
leave
adc
add
adc
lret
out
push
pop
or
inc
jae
imul
daa
addb
dec
adc
orl
inc
cmp
cltd
sub
push
bound
inc
or
test
push
stos
mov
mov
add
xlat
pop
and
dec
imulb
test
sbb
mov
fs
push
cmc
mov
pop
popa
jecxz
roll
out
std
or
sahf
out
pusha
outsb
adc
jb
cmp
sbb
mull
adc
ss
adc
gs
xor
jbe
sub
insl
push
insb
xor
sub
xor
sahf
scas
push
xchg
or
mov
sbb
mov
pop
inc
xchg
pop
sub
mov
sub
lods
fmuls
ret
adc
rolb
outsb
fadds
stos
adc
or
add
add
pop
sbb
sub
imul
addr16
pop
push
jmp
sti
out
push
mov
cmpsl
lahf
mov
xchg
or
adc
jmp
testl
or
and
and
in
fsubs
push
adc
subb
mov
inc
sbb
shll
lods
shll
jnp
scas
out
push
hlt
fists
iret
inc
inc
out
fdivrs
adc
adc
jbe
jae
add
jnp
int3
gs
out
repz
xor
cmp
pop
mov
cltd
punpckhbw
mov
mov
mov
mov
jmp
shrb
xlat
mov
inc
std
scas
int
jp
je
lds
orb
and
adc
and
mov
dec
dec
out
sbb
hlt
jge
inc
mov
add
mov
cmp
jns
insl
dec
setp
ss
ss
xchg
mov
addr16
je
sbb
leave
mov
lods
jecxz
jbe
adc
mov
jne
jg
cmpsl
js
sti
sub
adc
shrl
leave
mov
dec
inc
jnp
ffree
imul
dec
stc
sahf
or
or
xor
sbbl
mov
iret
mov
ret
ret
jae
divl
dec
pop
push
fmulp
jp
fstps
dec
test
mov
xchg
in
std
bound
sbb
xchg
push
xlat
mov
or
testb
lcall
add
lret
jae
dec
sub
in
adc
adc
lods
stos
fs
xor
add
cld
jo
inc
loop
daa
cmp
push
les
ret
push
pushf
adc
mov
aad
loop
mov
cmp
push
popf
pop
pop
adc
movsb
xor
push
jne
sub
insb
idivb
sahf
popa
pushf
adc
push
or
daa
cs
ret
jecxz
add
adc
push
lret
outsb
icebp
into
jp
mov
cmc
std
xchg
ret
mov
nop
jnp
cmpsl
or
mov
loope
xchg
mov
fs
xchg
xchg
out
subl
lods
mov
inc
pop
lods
push
test
icebp
sub
sub
xchg
test
or
xchg
cmp
out
add
and
push
dec
aam
mov
repz
repnz
cltd
clc
adc
jmp
dec
aam
inc
dec
fs
lret
mov
and
push
inc
dec
jmp
aad
test
add
pusha
sbb
jecxz
ja
mov
rorb
mov
or
or
add
xor
inc
lret
out
loop
ret
sub
pop
pop
lods
xor
clc
or
fdivl
jae
add
adc
push
popa
sbb
mov
sbb
sbb
testb
insl
sti
inc
fdiv
fisttpll
loop
or
mov
mov
jp
outsb
outsb
das
cld
dec
icebp
mov
cmp
xchg
lret
lahf
test
push
push
mov
repz
xchg
fs
ljmp
jp
int3
lret
pop
push
movsl
cmc
bound
loopne
or
fmull
repz
stos
adc
ret
and
stc
jp
lds
test
sub
enter
cs
inc
mov
push
lea
dec
pop
xchg
sub
add
sbb
adc
and
outsl
jmp
push
push
jns
pushf
xchg
add
cmp
pushf
sti
cs
push
movsl
sbb
pushl
movsb
orl
aad
xor
inc
inc
cwtl
lahf
or
or
jno
sub
xchg
sti
ss
in
and
inc
jno
lret
mov
and
and
or
push
ficoml
fwait
mov
sbb
not
mov
test
mov
mov
sbb
xor
cmp
or
jecxz
les
mov
sti
mov
into
xchg
and
aaa
cmp
push
test
pop
xor
fnstenv
ret
popa
fisubrs
int3
xchg
mov
xchg
jo
push
stos
cmp
nop
sti
inc
repnz
mov
out
in
sub
and
jecxz
jp
mov
les
xlat
mov
cmc
int3
xor
sub
dec
add
setnp
test
cmp
jno
aas
jg
mov
push
fldl
or
mov
pop
popf
and
loope
push
rol
jb
es
gs
sbb
cwtl
aas
or
xor
insb
push
xor
cmp
push
adc
cltd
xor
jge
pop
sti
insl
jmp
sub
xchg
xchg
inc
imul
jb
mov
iret
dec
ret
popf
icebp
push
inc
mov
ret
pushf
push
xor
cwtl
pop
xchg
mov
sub
pop
lods
inc
in
imul
or
inc
icebp
pop
sti
ret
enter
in
mov
jnp
xor
imul
fists
les
sets
mov
call
jmp
shll
push
cmc
sub
int
mov
mov
enter
cmc
imull
lea
loopne
notl
adc
lcall
cwtl
sbb
nop
pusha
jns
loope
mov
jle
or
inc
add
sahf
mov
test
mov
in
stc
cwtl
inc
adc
jb
rcl
or
cmp
add
scas
cmpl
cs
lods
jo
fcompp
jl
inc
ds
std
xchg
pop
xor
test
mov
and
out
xchg
addl
mov
imul
cmp
not
dec
inc
cmp
inc
add
pop
lods
cmp
push
push
add
xchg
adcb
mov
jle
test
push
dec
lods
and
mov
jge
sbb
popa
inc
xor
mov
dec
adc
inc
adc
cwtl
cmp
insl
add
ss
jnp
out
cmp
cmp
dec
shlb
push
xor
pop
ljmp
in
sahf
jl
je
gs
lahf
or
std
out
pop
stc
jmp
movsl
ljmp
cmp
addr16
mov
aas
push
push
mov
pop
mov
lods
mov
enter
popa
jp
cmpl
pop
jl
mov
clc
neg
andb
ljmp
push
fwait
lods
pushf
jnp
xchg
jae
mov
push
fldl
mov
sub
mov
stc
mov
bound
call
aam
aad
cld
pusha
xor
add
lock
ja
xchg
std
push
add
dec
idivl
xor
loopne
dec
or
xor
mov
lock
mov
js
xlat
inc
popa
dec
aas
cmpl
dec
xor
jne
xor
jg
sbb
stos
jne
in
mov
les
ret
cmp
jnp
and
repz
add
stos
mov
xchg
sbb
mov
jmp
sub
lods
adc
lock
xchg
jecxz
mov
bound
push
std
inc
fnstenv
in
cmp
xor
push
icebp
dec
or
icebp
sub
cltd
ds
mov
dec
cltd
lret
jno
not
mov
xor
cld
push
enter
ljmp
mov
sub
or
sti
dec
ss
fidivs
aad
xchg
ss
push
jp
in
sahf
mov
lock
xchg
sarb
das
jge
out
pop
mov
sbb
adc
xorb
sub
pop
lods
lds
rcrl
fsubrs
das
shlb
jno
lahf
push
insl
gs
sbb
adc
addr16
add
dec
jbe
call
rol
ljmp
arpl
out
jb
in
jecxz
push
scas
and
jbe
dec
nop
mov
adc
andb
xchg
inc
and
dec
and
jns
imul
fldcw
jmp
adc
stos
mov
push
push
out
xchg
stc
jno
mov
shrl
inc
sub
clc
jbe
sbb
loope
mov
and
pop
mov
rcl
cmp
icebp
sarb
stos
dec
dec
inc
jg
je
imul
cmc
pop
sbb
into
orb
lcall
push
test
sub
sti
lret
flds
cmp
pushf
sahf
fucomp
xor
divb
lods
imul
pop
adc
jmp
outsl
and
popf
ret
test
fcoms
push
adc
mov
inc
ffree
lods
sub
iret
jne
shlb
sub
mov
mov
lcall
cmp
repnz
and
add
mov
xor
mov
ds
mov
mov
in
add
repnz
aaa
dec
push
aas
jno
jae
sub
clc
cmp
fnstenv
mov
mov
insl
xlat
dec
mov
sarb
dec
push
imul
insl
mov
aad
inc
xchg
aas
sbb
cmp
out
ljmp
jns
idivl
dec
mov
pop
push
add
pop
rcrl
mov
sub
test
test
sub
or
mov
cmp
js
push
xchg
cmp
mov
popl
pop
mov
out
cli
fucomip
mov
push
clc
in
cmp
cltd
mov
cmp
ss
lret
or
and
pop
sub
pop
mov
out
xchg
cld
aas
es
push
mov
in
out
shrb
popf
stos
jmp
data16
in
dec
or
jbe
xchg
xchg
sbb
sahf
sahf
and
inc
enter
cmpsb
and
fwait
jbe
ljmp
jns
call
pop
fbstp
adc
and
push
jns
cmp
xchg
dec
or
inc
sbb
and
stos
lea
xor
jg
fdivs
lods
popf
aam
dec
mov
sbbl
cmp
stos
fwait
inc
xor
fs
jle
mov
enter
inc
loope
aas
mov
aam
mov
pushf
out
std
pop
ret
enter
xor
iret
mov
popf
dec
fs
into
in
xlat
loop
or
pushf
movsl
mov
popa
sbb
mov
or
inc
jne
xchg
push
movsl
add
push
fwait
ds
inc
pop
and
add
and
in
xchg
pusha
xchg
inc
cmp
jl
adc
icebp
ret
clc
ficoml
testb
imul
mov
xor
pushf
jbe
jnp
lahf
dec
popf
sbb
imul
loopne
dec
pop
mov
aad
ss
scas
push
jmp
test
test
ds
mov
mov
clc
mov
sbb
scas
outsl
pushf
ja
rcrl
and
jnp
and
mov
pop
mov
dec
push
jp
lret
add
hlt
repz
and
stos
js
xlat
push
call
adc
andw
or
fistpll
pop
jecxz
mov
cltd
outsb
and
stos
ljmp
movsb
je
loopne
jae
push
out
xchg
neg
push
and
ds
fwait
inc
fdivs
or
sub
notb
add
insb
ja
fs
pop
jl
sub
clc
pop
ficompl
andl
data16
repnz
aas
sub
add
dec
pop
test
cmp
addr16
push
notl
adc
jge
addr16
or
xor
std
mov
gs
xchg
xlat
ljmp
cld
cmp
popa
push
inc
mov
xor
ret
ss
dec
fwait
and
xchg
popa
sbb
jno
xchg
imul
fidivrl
pop
jae
out
mov
fsubs
imul
sbb
mov
icebp
sbb
js
jmp
mov
push
adc
ljmp
mov
repnz
and
fsubp
sti
lock
gs
shlb
sub
cltd
xor
insl
jecxz
lds
sub
es
xor
cwtl
js
arpl
cmp
pop
sub
mov
mov
cmp
add
fdivrl
dec
inc
mov
imul
adc
cmp
mov
xchg
fadd
insl
lds
push
add
mov
repz
shll
das
addl
push
lret
out
andb
inc
ds
mov
jmp
es
mov
push
mov
xchg
insb
pop
nop
xor
gs
mov
mov
pop
lret
test
loope
pop
push
mov
movsb
icebp
mov
sti
outsb
pop
stc
mull
pop
pusha
xlat
jge
dec
or
cmp
insb
mov
and
sarl
aam
jo
and
push
push
in
jg
stos
sub
jo
sbb
pop
sahf
fs
jbe
push
loope
js
dec
cmp
jg
xchg
mov
push
lea
xlat
add
adc
das
jp
inc
mov
les
cmp
sub
xchg
shll
mov
nop
or
xlat
jbe
and
sti
adc
pop
push
mov
mov
gs
cli
and
test
cmp
xor
data16
fildl
insl
or
jbe
mov
icebp
pop
fcomip
lock
dec
dec
xchg
daa
es
pop
cmp
jo
arpl
xchg
mov
test
ret
pop
jo
lods
js
mov
aas
mov
fs
ljmp
pop
enter
sub
sub
or
jp
rcll
mov
in
scas
out
aam
jmp
xor
faddp
mov
iret
mov
cs
cmc
xchg
jp
hlt
mov
ret
dec
pop
inc
inc
ljmp
leave
insb
movsl
cli
xor
inc
xchg
pop
cmpsb
push
cmp
popa
fisubl
stos
popa
pushf
lret
fmull
loop
xchg
ds
pop
lret
in
jmp
loope
or
addr16
in
outsl
lret
lods
rorl
sbbl
test
dec
push
sahf
mov
gs
ss
test
pusha
insb
add
pop
sbb
lret
pop
and
iret
sub
mov
or
or
arpl
lock
mov
ds
rcrl
loopne
std
iret
and
mov
shll
stos
imul
jge
mov
ret
xchg
push
addr16
cmp
sbb
sti
movl
loope
adc
or
xchg
cmp
pop
push
popf
out
je
lea
xor
popf
sti
mov
dec
inc
push
sahf
mov
repz
cmpsb
stc
scas
test
cltd
movsb
dec
or
and
je
sub
xchg
jg
and
notl
xor
inc
sbb
imul
pop
cwtl
gs
enter
or
xor
shlb
inc
cltd
fists
scas
imul
mov
sbb
arpl
sahf
rcl
fcmovne
pop
xchg
fiaddl
popa
or
push
adc
jnp
test
insb
sbbl
add
cmpsl
sub
cld
addr16
out
sbb
std
adcl
xor
mov
push
test
aam
dec
sbb
loope
jl
jp
rclb
pop
mov
lahf
dec
inc
test
in
ja
hlt
enter
sbb
mov
out
add
in
mov
and
dec
sub
je
pop
ljmp
mov
pop
sbb
push
aaa
insl
pop
mov
test
jbe
inc
out
jb
pop
ss
add
or
loope
xchg
and
add
idiv
sub
std
cmp
adc
repnz
insb
loopne
shll
lock
fnstenv
ret
sti
push
mov
mov
push
in
movsb
les
scas
jg
int3
das
add
sbb
push
dec
adc
jg
push
out
ja
push
push
jno
inc
push
and
mov
push
ljmp
rcrl
clc
in
push
sbb
movsb
popf
pop
mov
lea
mov
jl
and
addr16
aad
in
fdiv
insb
inc
cmp
push
subb
gs
js
jp
jmp
clc
and
sbb
call
repz
daa
push
nop
inc
fstpl
mov
je
xlat
push
or
es
lods
repz
cmp
inc
pop
pushf
addr16
sahf
lea
pop
lock
rcrl
mov
rorl
mov
cmpsb
test
inc
std
ja
js
aad
mov
test
stos
mov
xchg
shrb
add
mov
bound
fwait
mov
xchg
icebp
mov
sub
sbb
jl
dec
out
je
mov
mov
fwait
xlat
push
pop
aaa
lods
cmp
xor
fisubrs
pop
add
call
fcomps
test
test
outsl
mov
mov
dec
inc
test
mov
je
lea
subl
fisubs
es
insl
and
lahf
ja
jns
in
mov
rolb
mov
movsb
sbb
daa
cmp
lret
aam
insl
xchg
inc
movsl
lcall
add
sub
jb
pop
loopne
cmp
cmp
mov
sahf
mov
pop
test
popa
push
int
mov
stc
xorb
insb
and
sbb
xchg
cmp
or
je
lock
cmp
call
pop
pop
push
push
mov
and
daa
fcmovb
dec
mov
push
iret
ljmp
add
dec
fs
add
mov
jp
pop
jne
adc
sti
aam
rcrb
insb
xor
xor
inc
inc
mov
mov
inc
adc
mov
orl
dec
push
sbb
pusha
push
ja
or
push
lds
sbb
push
mov
les
fwait
mov
js
and
push
enter
scas
mov
jb
xchg
icebp
ljmp
jl
jo
jno
dec
sub
lock
xorl
gs
stos
fistps
pop
mov
rolb
sti
test
dec
cmp
movsb
jge
push
add
sub
mov
or
negb
xor
cmpb
cmp
mov
dec
ss
aad
mov
mov
or
mov
jae
dec
inc
mov
enter
push
cmp
jle
loop
fistl
daa
pop
cmp
sahf
call
sbb
pop
hlt
rol
out
sti
ljmp
jae
fldl
add
cmpsl
icebp
loopne
test
ds
mov
xchg
mov
mov
inc
sbb
xchg
xor
xchg
sahf
xor
xchg
testl
mov
scas
mov
pop
mov
ss
in
movl
cli
dec
popf
or
ret
push
push
std
lock
cmp
aaa
rolb
fnstsw
dec
sub
sub
dec
xchg
ds
add
aaa
or
ret
sub
gs
mov
in
cld
inc
stc
data16
pop
incb
dec
ret
int
ljmp
stos
mov
jnp
call
out
rcrl
test
pop
pop
aam
aad
fwait
insb
imul
pop
jecxz
xchg
pusha
frstor
cmp
lods
lock
mov
mov
jge
insb
fstl
imulb
aas
xchg
mov
inc
cmp
ret
addb
or
icebp
aas
mov
cmp
and
aam
sbb
sbb
arpl
fstp
stc
or
add
faddp
out
push
sbb
lcall
jns
mov
xor
imul
cs
sti
loop
incl
pop
cwtl
dec
jmp
scas
xchg
inc
pop
pop
test
xchg
jbe
mov
mov
popa
sbb
fs
fwait
mov
cmpsb
pop
lret
cmp
sub
sbb
shlb
fimull
test
xchg
cld
lock
xchg
sub
inc
in
incb
int3
mov
sub
mov
push
pop
int
stos
rorb
inc
mov
cmp
inc
into
jg
ret
lock
dec
adc
inc
fcompl
dec
mov
sbb
fs
jo
leave
lahf
rol
or
hlt
arpl
jl
mov
cmc
pop
pop
xor
sarl
ss
inc
xor
data16
aas
sbb
jmp
nop
lret
popf
je
nop
mov
jae
xor
xchg
sbb
push
push
dec
das
mov
pop
xor
mov
lock
addr16
in
repnz
stos
push
sub
pop
push
mov
mov
jns
hlt
addr16
lret
pop
cmpsl
loopne
pop
dec
rclb
sbb
xor
xor
mov
sbbb
cmp
dec
push
in
lret
mov
iret
gs
mov
and
adc
cwtl
mov
xchg
and
add
pop
scas
lea
jmp
in
cmp
aam
lods
movsb
fnstsw
jno
mov
aad
sbb
stos
xor
xlat
pop
mov
bound
in
dec
add
test
push
jl
jecxz
add
out
add
out
fldt
in
lods
sbb
mov
inc
xor
fwait
or
stos
xchg
inc
mulb
rclb
jno
into
xchg
lods
dec
cmpsl
lcall
cmp
cli
cmp
js
inc
aas
pop
or
pop
cmp
add
mov
pop
jge
lods
ficomps
sti
mov
mov
hlt
call
call
adc
aad
xor
or
mov
xchg
jge
hlt
clc
inc
sbb
into
icebp
push
lea
or
pop
mov
out
sti
out
xor
movl
cli
out
lods
clc
and
mov
or
das
push
mov
mov
jecxz
mov
aaa
push
jle
cmp
inc
inc
pop
adc
dec
xchg
pop
xor
out
fcomps
pop
cli
sbb
inc
xchg
enter
andb
and
sbb
sbb
dec
aaa
insb
test
xchg
push
jmp
les
out
je
jecxz
push
sti
inc
loope
pop
movsb
hlt
nop
pop
dec
enter
xchg
fsts
enter
mov
test
cld
iret
xchg
xchg
aad
stos
fucomip
fnsave
fidivrs
and
mov
repz
xchg
sar
call
sarl
movb
mov
js
out
jno
sbb
cmc
cmp
ficoms
sbb
repz
mov
add
mov
sbb
and
cmpsl
add
ret
flds
xor
dec
les
fildll
mov
cmpsb
sbb
pop
cwtl
lret
cmp
add
ja
mul
cmp
adc
ret
cmp
aaa
inc
add
and
pushf
pop
mov
pop
sti
mov
jae
sub
imul
pop
fwait
repnz
cmp
and
pop
inc
add
inc
cmc
mov
add
sbb
xor
aas
cmp
subb
repz
negb
aaa
ds
push
outsb
dec
negb
pop
xor
fadds
cmp
push
jmp
idivb
rorl
add
ljmp
mov
xchg
push
jns
jne
daa
rcrb
daa
in
fmull
and
iret
jbe
clc
mov
roll
ja,pt
int3
push
jge
jmp
push
lods
nop
xor
scas
or
adc
insb
pop
dec
dec
sbb
adc
or
inc
add
es
sub
and
insl
push
outsb
and
outsb
mov
repz
adc
push
ljmp
xchg
push
call
mov
xchg
loop
jbe
push
fmull
scas
sbb
pop
adc
dec
jmp
popf
cs
outsl
inc
pop
leave
test
xor
xchg
scas
mov
sub
xor
mov
jle
push
push
dec
sahf
add
stos
sahf
mov
ret
pop
in
xor
mov
aaa
adc
mov
add
push
adc
push
xchg
test
je
lea
jo
adc
xchg
fcoms
sbb
pop
rclb
arpl
cltd
lea
sub
inc
mov
adc
push
stos
enter
lds
cmp
adc
add
scas
and
sub
out
xchg
fldl
and
xchg
xchg
mov
xor
into
dec
cmp
pop
mov
iret
clc
lahf
push
xlat
cld
std
repz
sbb
and
in
push
cmpl
sbbb
nop
dec
jmp
aad
shl
sbb
ljmp
cli
rcll
jae
and
inc
xchg
mov
mov
cmpsl
jne
stos
and
sahf
push
fcompl
sbb
das
nop
dec
dec
aad
bound
in
scas
adc
movsl
popf
adc
push
vsqrtss
in
push
sub
jne
cmpsl
ret
xchg
lahf
mov
xor
clc
and
cs
mov
mov
or
enter
ss
nop
arpl
cmp
arpl
shrb
jns
push
inc
adc
insl
mov
in
xchg
repnz
test
pop
push
clc
adc
lret
stos
inc
pop
call
int
cmc
xor
lds
movsb
pop
pop
fldenv
shll
dec
pop
xor
stos
cmp
ja
pop
mov
aad
pop
xor
es
shll
out
and
xchg
fwait
dec
shrl
popf
test
mov
stc
mov
js
sub
adc
dec
ret
nop
add
add
cmp
stos
inc
outsl
rcl
pop
lcall
ds
inc
fisubs
rcrl
xchg
popa
cli
das
cmp
mov
mov
out
ret
pushf
inc
call
adc
fadds
xchg
movsb
das
test
in
dec
insl
cld
pop
dec
add
push
divb
lods
mov
insb
in
inc
xchg
mov
mov
mov
aam
jns
xchg
sarl
popf
mov
ss
pop
insb
out
leave
fbld
cs
stc
aad
mov
and
pop
pop
les
or
fsub
aas
shlb
dec
xor
mov
repnz
aaa
aas
in
mov
xor
movsl
pop
ljmp
lret
adc
lcall
sahf
or
mov
movsb
sub
jb
ja
xlat
mov
loop
shl
adc
ret
jp
sub
shll
test
iret
push
pop
adcb
dec
mov
js
cmpsb
pop
imul
fldl2t
dec
jge
scas
cmp
ret
stos
out
jge
jle
in
pop
dec
jno
push
pop
mov
popa
or
fdivrl
repnz
xchg
in
sub
repnz
cmp
iret
sub
bound
dec
stos
iret
jns
mov
xor
pop
mov
cmpsb
push
icebp
loop
mov
aas
scas
cmp
enter
idiv
xor
aad
sub
je
mov
add
xchg
sti
sub
out
stos
cs
nop
sub
sbb
mov
inc
xchg
arpl
add
mov
fidivrl
sahf
aad
jle
inc
push
std
dec
stos
fdivr
jp
lret
and
insb
xor
test
sarb
sub
cmp
sbb
ret
loop
sbb
pushf
jns
xor
or
outsb
lcall
cli
mov
mov
and
aaa
or
iret
push
dec
mov
loopne
xchg
push
mov
mov
mov
push
bound
ret
mov
and
repz
mov
stc
adc
mov
out
insl
jne
fistps
je
inc
and
jbe
push
loope
cmp
stc
push
cmp
jns
cltd
or
and
repz
repnz
ja
pop
dec
mov
xchg
sbb
mov
mov
fdivs
push
sbb
lahf
xchg
rcrb
pop
popl
dec
hlt
test
pop
clc
jp
stc
mov
cmp
in
mov
sub
lods
fdivs
adc
in
pop
push
add
inc
xchg
push
cmc
mov
push
add
sub
or
jne
lods
adcl
shrd
movsl
clc
inc
mov
xchg
mov
sub
and
jnp
cmp
add
loopne
mov
xchg
test
in
lret
sub
test
test
pop
lahf
push
inc
cmpsb
inc
mov
cld
xor
in
mov
dec
sub
mov
aas
lock
push
jnp
pop
je
pusha
fisubl
add
mov
jg
mov
add
mov
lret
jbe,pt
and
jo
andb
and
or
je
aad
ret
ja
test
or
in
pop
popa
mov
bound
loop
mov
xlat
mov
arpl
sub
mov
and
pop
sbb
in
pusha
add
jge
mov
and
out
sbb
roll
imul
mov
xlat
stc
jmp
gs
pop
nop
and
imul
rorl
sti
jnp
mov
mov
les
mov
jg
jae
call
fwait
outsl
mov
add
push
clc
fimuls
icebp
movsb
jae
mov
xor
inc
pop
nop
or
add
push
cs
out
ror
inc
push
adc
sub
es
sbb
xor
inc
mov
repz
sbb
popa
popf
sbb
test
sub
ret
push
sub
popa
aas
nop
lods
cmpsl
mov
decl
lahf
push
xchg
push
rol
mov
add
xchg
popf
cwtl
ja
mov
cmpsb
loope
jge
mov
daa
hlt
xchg
outsb
lods
push
xor
imul
sahf
out
enter
add
pop
movsl
ds
fiadds
sti
shll
into
and
movsl
stos
xchg
inc
or
sub
xor
pop
xor
enter
push
daa
xchg
or
xchg
icebp
fisttps
dec
aam
insl
outsb
sbb
out
fidivrl
ficoml
in
aad
jmp
inc
arpl
mov
clc
sub
in
xchg
add
mov
bound
mov
dec
and
xlat
lret
pause
pusha
aam
sub
stc
out
stos
pop
jnp
push
enter
xor
add
xchg
out
adc
lcall
mov
popa
pop
jp
mov
and
das
or
aad
movsl
addl
lret
jb
mov
xchg
fcmovu
inc
fiadds
scas
xchg
xor
sub
and
push
add
mov
daa
mov
pop
inc
insl
mov
mov
push
pop
mov
jne
mov
mov
mov
inc
ss
jbe
neg
inc
lock
or
pop
mov
inc
aaa
cwtl
icebp
loope
cmpsl
or
push
shrb
pop
or
xchg
jge
divl
cmp
mov
sub
fldt
leave
stos
jl
imul
loopne
lock
icebp
fwait
addr16
stos
gs
insl
out
cmp
mov
or
andl
dec
cld
or
lea
pop
adc
sub
mov
push
jle
and
adcb
push
insb
daa
aad
add
inc
mov
jge
mov
mov
mov
lret
inc
imul
enter
pop
popf
xchg
pusha
jbe
or
hlt
out
stos
pop
mov
outsl
sbbb
rclb
je
nop
js
pusha
ja
push
sub
enter
out
imul
jg
jle
daa
and
adcb
or
cmp
loopne
sahf
mov
push
lea
xor
mov
xchg
cli
out
dec
mov
mov
adc
scas
rclb
fimuls
and
outsl
adc
adc
pop
lahf
xchg
loope
gs
mov
fisubl
push
xchg
addb
and
xor
int
bound
nop
popf
popf
std
stos
push
mov
repz
pop
pop
divl
jns
adc
pop
out
jne
mov
sbb
das
add
test
push
cmp
mov
test
inc
sbb
inc
push
aad
xchg
insl
daa
mov
imul
call
or
xchg
adc
gs
mov
jle
lds
std
fdecstp
push
lahf
testb
adc
inc
test
ja
xchg
dec
mov
adc
push
dec
or
mov
add
sbb
and
pushf
mov
hlt
or
cmp
addl
mov
jo
scas
push
lcall
adcb
int
lret
popa
xchg
arpl
mov
mov
cmc
in
xor
es
out
cmc
test
mov
jl
sub
cmp
xchg
in
notl
shl
inc
gs
inc
push
push
fcomip
out
fmuls
push
into
dec
cli
pop
in
xor
mov
add
add
dec
sar
pop
popa
repnz
jl
jno
sbb
out
daa
push
jge
imulb
subb
sub
lds
jle
sahf
cwtl
dec
push
js
movaps
inc
add
push
fcoml
inc
dec
ret
jb
clc
loope
pcmpgtb
js
pop
lahf
pop
out
and
enter
xor
in
inc
or
mov
cmp
xchg
xchg
je
nop
stos
adc
lock
call
mov
mov
cli
mov
shll
add
mov
xlat
xor
jae
inc
mov
inc
push
arpl
and
pop
cmp
test
mov
pop
mov
insb
mov
inc
arpl
pop
mov
fiaddl
je
lahf
add
ds
aad
jl
jb
fstpl
and
mov
scas
add
loope
mov
repz
xchg
sbb
cwtl
add
adc
xor
aad
and
ss
int
add
mov
je
adc
stc
and
fsubrs
push
test
test
xchg
cmpsl
sub
jmp
sahf
fnstenv
cld
inc
jecxz
dec
test
jnp
adc
mov
jno,pt
and
adc
out
add
inc
rcrl
movsl
and
sub
loop
pop
pop
aad
arpl
pop
cmp
xchg
pusha
fnstenv
test
pop
sbb
inc
out
stos
xchg
xlat
in
add
xchg
js
lahf
divl
repz
sub
je
loopne
stos
push
sbb
pop
rorl
ljmp
shlb
mov
clc
sub
cltd
lcall
sbb
xchg
mov
mov
loopne
dec
out
lock
cmp
loope
ss
sub
ds
and
mov
leave
fcomi
add
sub
mov
sahf
das
sahf
cmp
lods
shl
xor
mov
ret
outsl
jmp
jle
cmc
pop
aam
gs
sub
inc
mov
in
out
or
pop
xorl
cmp
push
xor
push
gs
add
mov
pop
enter
pop
mov
lret
push
xchg
maskmovq
notl
test
lcall
repnz
push
mov
clc
in
adc
xchg
jmp
sub
xor
enter
mov
and
in
and
rcll
inc
cmp
fldt
mov
push
not
push
xchg
shl
jnp
pushf
es
cmpl
xchg
loopne
orb
jp
in
cmp
adc
or
out
pop
cltd
add
into
adc
in
cli
adc
sub
mov
cmc
fbld
cmp
or
xchg
popa
xchg
loope
fcos
out
das
inc
and
add
mov
jge
shrb
jmp
pushf
xchg
pop
arpl
adc
push
jbe
push
mov
arpl
jg
xchg
lret
add
mov
pushf
push
add
pop
movsl
or
jo
mov
mov
lea
aam
push
or
mov
rcr
jns
jge
lods
mov
dec
loopne
push
ds
sti
es
jbe
iret
jl
hlt
repz
or
xchg
jne
pop
imul
and
cmp
iret
mov
orl
xchg
inc
out
sar
pop
xor
adc
repnz
adcb
fwait
mov
mov
neg
mov
dec
in
push
arpl
cli
call
movsb
xchg
addr16
push
xor
push
imul
test
shll
and
jb
int
dec
mov
add
aad
lock
lret
rolb
hlt
sbb
and
pop
adc
and
mov
sbb
mov
xor
mov
push
pushf
in
and
dec
or
sarb
int
ja
dec
lock
jmp
stc
and
cmpsl
gs
ljmp
test
sub
scas
mov
cmpsb
push
jp
mov
in
push
xlat
test
sarb
movsl
pusha
test
call
push
out
cmp
in
mov
dec
pop
icebp
or
mov
in
mov
aaa
cmpsl
xchg
or
ja
pop
in
cmp
call
sub
sub
xchg
xor
push
mov
sahf
lds
mov
push
addr16
std
jno
fwait
sub
cwtl
mov
jbe
sarl
cli
mov
stos
ficoms
ret
lods
mov
mov
cmpsl
scas
inc
mov
lret
sub
inc
sub
fildl
dec
pushf
pop
xchg
pcmpgtd
xchg
std
fisubrl
sub
pusha
outsb
mov
mov
cmp
jae
add
shll
and
push
out
jb
xchg
cli
dec
xor
inc
adc
ds
cmp
add
adc
mov
mov
imull
mov
jo
adc
xchg
lods
pop
adc
xlat
mov
stos
icebp
dec
inc
push
lock
lcall
mov
flds
add
repnz
add
adc
adc
push
mov
fnsave
jae
adc
or
gs
ret
movsb
dec
fisubrl
orl
add
pushf
ja
mov
pop
in
lret
xchg
fisubs
push
jne
sub
jp
addr16
mov
cltd
cmc
adc
pop
into
frstor
mov
and
mov
gs
cmp
in
and
pop
xchg
fs
mov
and
aad
loopne
ret
mov
mov
inc
push
mov
mov
mov
sub
or
daa
out
rcll
or
lret
pop
adc
icebp
dec
mov
push
mov
sub
sti
jp
inc
scas
stos
fcoml
sbb
insb
adc
enter
dec
push
dec
adc
push
jl
sbb
pusha
pop
dec
gs
popf
out
or
mov
shlb
fisttps
sbb
shlb
adc
int3
mov
cltd
sahf
test
verr
jae
cltd
xchg
cmp
nop
push
mov
data16
xchg
dec
jns
test
push
inc
lods
lret
adc
out
jbe
les
add
push
adc
mov
pop
sbb
lahf
lret
mov
dec
ss
out
insl
mov
add
test
je
fstpl
out
push
add
cmp
shl
rcll
dec
cmp
cmp
adc
arpl
or
jbe
rolb
pop
cmc
loope
ffree
and
rcrl
test
sahf
rolb
outsb
ja
xchg
leave
xor
ret
adc
loop
push
in
jno
and
js
push
jns
stos
bnd
xchg
xlat
pop
or
aam
fwait
outsb
sahf
mov
roll
orl
jmp
shrl
push
sub
in
pop
into
push
add
push
sbb
jge
fwait
xor
icebp
push
stos
dec
test
fwait
into
iret
or
es
out
scas
test
fdivrp
mov
in
lods
dec
add
cmpl
inc
jle
stc
fidivl
cmp
pop
and
inc
mov
outsl
out
clc
cld
fcmovnbe
cmp
daa
cmpsl
adc
pop
xchg
mov
adc
add
das
das
mov
jbe
mov
les
sbb
mov
outsb
inc
jge
sbb
inc
mov
xor
mov
push
nop
test
push
lahf
cmp
popa
dec
cltd
mov
mov
sub
decb
jb
mov
cli
sbbb
out
and
fwait
inc
mov
mov
jg
push
or
mov
jbe
aaa
sub
fdivr
lret
dec
call
prefetch
or
mov
pop
xchg
mov
mov
adc
jmp
cmp
inc
in
cmp
push
pavgw
js
jge
adc
sub
popf
insb
mov
cmpsl
sbb
lcall
sti
das
mov
fwait
or
outsb
xor
mov
mov
in
push
or
jbe
std
xchg
adc
loopne
cltd
bound
mov
lea
icebp
sub
sbb
inc
jns
cmp
mov
sbb
popf
movsl
ds
in
les
lret
push
jmp
dec
out
decl
es
scas
cmc
add
into
orl
sahf
ss
jb
data16
lock
pop
bound
test
andl
das
xor
jp
mov
dec
jno
jns
subl
and
sti
jns
cld
mov
xchg
cmc
shll
push
xor
into
dec
inc
cmpb
jge
xor
insl
mov
inc
outsl
mov
fs
or
add
sub
shll
xchg
cmpsb
pop
gs
sub
sti
lret
mov
or
push
cmp
loop
jo
xor
fidivrs
jo
add
add
xchg
xor
pop
xlat
outsb
jbe
mov
dec
insb
test
xor
andl
cmpsl
push
xor
push
int
sarl
ficompl
inc
cmc
push
outsl
jmp
push
cmpb
push
mov
cmp
dec
es
call
pusha
rorb
sbb
testb
pop
cmp
push
push
icebp
inc
dec
cmp
adc
sbb
adc
xlat
ret
mov
mov
cli
js
aas
adc
movb
popa
iret
dec
daa
jb
pop
iret
iret
daa
mov
sub
ss
and
add
dec
mov
inc
pop
scas
shl
inc
fimull
mov
js
shrl
cmp
leave
inc
xor
or
loope
int3
jb
in
mov
outsb
ret
fmuls
sub
add
shll
je
gs
jne
or
mov
stos
repnz
sahf
dec
mov
and
es
lods
rcr
or
xchg
shl
dec
mov
lret
push
in
xchg
iret
in
push
daa
dec
push
jmp
or
shrl
mov
xor
lahf
xorl
cmp
scas
fstps
scas
daa
fistps
outsb
ss
xchg
fcomi
inc
into
cmp
inc
pop
in
not
sub
mov
mov
dec
jb
imul
mov
les
or
lock
inc
inc
pop
or
jae
add
adc
lahf
cli
je
addr16
cmpsb
jno
jle
std
push
test
ds
xchg
or
dec
pop
cmc
push
cld
push
outsl
mov
push
clc
in
lods
inc
cmp
pop
push
imul
js
pop
pop
pop
sbb
fnstcw
pop
std
push
icebp
dec
mov
sbb
cmp
jae
sbb
cmp
scas
stos
inc
jge
inc
flds
fs
xor
inc
mov
movsl
jne
cmp
insb
push
int3
lods
orb
and
test
push
mov
lock
push
mov
xorl
jbe
repnz
out
out
jg
pop
out
sbb
bswap
int3
add
adc
dec
imul
mov
idiv
pusha
mov
mov
sub
or
pop
mov
xor
test
out
add
adc
pop
repz
mov
mov
pop
add
setne
jge
mov
push
mov
aam
push
inc
jle
sbb
add
and
das
add
stos
lods
xchg
mov
popa
neg
fildll
clc
daa
cmp
xchg
popl
out
decl
xchg
test
mov
ja
in
inc
int3
out
adc
mov
or
add
push
out
inc
fs
xlat
mov
dec
stc
rcll
mov
jbe
cmp
scas
xlat
add
in
shrl
lods
xor
inc
inc
das
mov
pop
call
sbb
mov
loop
lods
and
and
pop
pop
imul
push
add
inc
mov
lcall
rcr
sub
rcll
sbb
aas
pop
mov
shll
jnp
xchg
sbb
call
jb
xchg
cmc
push
je
scas
jno
mov
xor
rcrb
sti
aam
imul
jmp
stos
cmp
or
ds
mov
mov
xchg
in
cmp
out
add
jne
in
lret
sub
dec
in
sbb
sbb
in
das
ret
inc
je
out
lea
xchg
sbb
sub
xorb
gs
fstps
sbb
sbb
das
dec
add
add
mov
push
xchg
inc
or
push
push
jmp
or
jae
bound
insl
xchg
pop
cmp
mov
inc
pop
xchg
jnp
jg
fdivrl
cmp
scas
sbb
mov
dec
or
movsb
jmp
or
push
add
popf
cmp
je
leave
sub
insb
or
adc
fcmovbe
inc
xchg
mov
lret
sub
add
pop
mov
shrb
std
mov
mov
jae
cmp
add
pcmpeqb
push
mov
xlat
popa
mov
outsl
xor
addr16
or
and
and
cmc
test
mov
sbb
aaa
cld
jle
jle
daa
mov
jnp
xchg
fistpl
xchg
jecxz
ret
xchg
stc
nop
call
leave
dec
pop
and
jnp
fmull
dec
adc
push
add
fbld
aaa
inc
sbb
scas
mov
cmp
mov
xlat
pusha
lods
sub
fnstcw
lea
sbb
push
and
std
lds
cmpb
shll
cmpb
lahf
iret
ja
or
and
daa
jae
rcrb
inc
push
inc
or
addr16
movsb
stc
push
xchg
shll
repz
rcl
cmp
dec
lcall
je
or
in
adcl
and
fidivs
int
shll
popa
mov
cld
pop
push
adc
mov
rcll
lds
loop
push
jg
pop
lods
repnz
xchg
sbb
push
lds
lods
mov
insl
dec
idiv
nop
or
mov
mov
cmp
rclb
adc
fldl
adc
cs
sarl
xchg
idiv
mov
xlat
popf
sbb
push
aaa
mov
jecxz
mov
cmpsb
outsl
fs
dec
or
ja
jl
arpl
mov
sbb
in
pop
gs
inc
rorb
insl
jnp
bnd
cmp
rol
and
mov
xchg
cld
hlt
inc
call
push
add
mov
pushf
mov
or
insl
repz
adc
xor
mov
inc
pop
pop
pop
xchg
pop
imul
xchg
hlt
dec
aad
inc
rolb
out
js
loop
push
out
xchg
stos
dec
cmpsb
shlb
imul
lret
cltd
cmp
xor
bound
fsubl
mov
pop
insb
test
test
aam
mov
stc
lea
cmpsb
push
mov
stos
scas
or
aaa
pop
pop
inc
lds
fdiv
mov
inc
mov
fdivs
sahf
xchg
gs
popa
jl
xor
xchg
negl
cmp
inc
and
loopne
mov
mov
mov
inc
xchg
jnp
sub
add
mov
aas
inc
mov
dec
cmc
test
adc
dec
cmpsl
dec
and
xchg
dec
or
mov
cmp
mov
rcl
dec
mov
add
jb
adc
pop
xchg
dec
ljmp
iret
cmpsb
ja
hlt
stos
out
js
out
rorb
pop
add
sub
mov
mov
jp
mov
arpl
pop
jl
sub
fcmovne
rolb
pop
aam
mov
inc
lahf
xchg
mov
sub
mov
test
mov
shll
js
aaa
aam
cmpsb
push
je
sbb
dec
cmp
ljmp
repnz
int
pop
jns
sub
loopne
xor
test
inc
shr
fldenv
mov
push
and
lods
sbb
call
add
push
xchg
adc
shlb
mov
cmpsl
push
mov
sbb
push
xorb
in
cmpsb
fcoms
imul
divb
out
out
sub
inc
sub
sbb
je,pn
mov
xchg
mov
xchg
cmp
shll
loope
mov
push
in
loope
out
inc
or
scas
xchg
outsl
add
in
insl
adc
mov
pop
test
inc
xchg
mov
gs
pusha
mov
sub
xchg
jp
repz
sub
jnp
add
jns
push
nop
add
in
fwait
add
shrb
push
xchg
pusha
xchg
std
movb
repnz
push
ret
cmp
jmp
sub
push
and
xor
fucomi
dec
bound
fdivrl
sbb
fldpi
iret
mov
sbb
jo
mov
arpl
in
sti
lahf
ljmp
jecxz
outsb
mov
xor
jg
repnz
inc
or
dec
push
mov
call
hlt
push
clc
aaa
mov
sub
cmpsb
dec
adc
jne
cmpb
sbb
mov
add
inc
push
adc
mov
insl
adc
shll
push
jp
call
fwait
adc
sbb
jae
int
pop
imul
inc
scas
fwait
es
std
mov
adc
xchg
fisubl
adc
dec
out
cmp
cmpsl
xchg
fldt
cmp
fidivrl
lds
arpl
sbbl
out
sub
and
sbb
adc
push
mov
popa
hlt
ja
in
sbb
mov
in
pop
je
or
out
repz
sub
dec
jg
dec
dec
sahf
jl
test
pop
lods
cmp
jne
fdivp
xchg
pusha
jbe
paddusb
dec
dec
xlat
mov
test
cs
out
aaa
push
sub
push
fstpt
rcrl
sbbb
movsb
and
jmp
aad
mov
pusha
insb
lock
mov
lahf
test
int
test
test
push
jno
decb
jecxz
inc
push
mov
out
pop
or
jb
cmp
in
lret
jo
dec
sahf
lock
cmpsl
pusha
dec
in
out
sub
movsl
into
mov
cmpsb
ficoml
loope
movl
jle
pop
sbb
mov
nop
cmp
mov
mov
sti
pop
sbb
fwait
insl
addl
dec
repz
xchg
enter
jl
mov
in
xor
add
pushf
imul
inc
jmp
lock
mov
adc
cmp
enter
insb
mov
nop
pop
das
jo
dec
xor
icebp
ss
scas
mov
stos
inc
sbb
push
sbb
rorb
cmp
xorl
xchg
ljmp
and
push
out
mov
faddl
dec
iret
xchg
mov
pop
add
mov
pop
pushw
mov
jo
jne
rol
aaa
cmp
and
push
inc
push
cmp
mov
out
mov
xchg
xor
push
and
repz
cli
lods
sub
repnz
inc
mov
or
pop
push
push
and
sub
loope
imul
and
arpl
cmpsl
mov
loope
jb
mov
out
push
cmp
nop
and
jg
popa
adc
sahf
push
cld
mov
pop
or
loop
adc
in
fstpl
fmull
shlb
mov
ret
hlt
ljmp
xor
arpl
xor
xchg
adc
mov
add
xor
xor
jmp
sarl
sti
pop
fdivrp
jge
int
inc
imul
dec
sahf
inc
fsin
pop
scas
sarb
sub
int3
and
popf
sbb
mov
inc
xchg
sbb
adc
xor
mov
sub
xor
jmp
jnp
sbb
cmp
xchg
lea
sub
aaa
jnp
stos
cmp
insl
adc
fwait
cwtl
out
mov
push
pop
or
pop
jnp
mov
pushf
add
negl
sub
test
pop
dec
and
xchg
aaa
and
outsl
ss
push
scas
inc
enter
push
push
mov
insb
fucom
jns
jns
mov
mov
popa
js
lret
push
or
cmc
aas
jnp
sub
xchg
push
pop
cld
in
mov
pop
enter
mov
movsb
lods
or
adc
pop
scas
ret
fwait
push
inc
cmp
jne
sbb
dec
orl
loopne
mov
dec
imul
nop
sarb
jge
scas
cmp
sub
repz
cmpsl
pop
lret
xchg
sarl
dec
jecxz
fisubrs
mov
fisttpll
fs
rorl
mov
notl
jae
dec
rclb
sets
fcompl
and
cmpsb
fstl
insb
dec
pop
rorl
lock
jns
jne
pushf
jb
aaa
pusha
inc
adc
cmpsb
add
and
int
ss
fs
push
in
pop
aaa
sbb
cli
cwtl
cld
mov
sbb
dec
jecxz
cmp
sub
dec
dec
lahf
cmp
and
pop
and
dec
addr16
cld
add
adc
fnstcw
bound
pop
sub
ret
mov
cmc
sahf
jns
push
sub
xchg
cwtl
add
push
dec
cwtl
dec
jne
ffreep
bound
add
pop
cmpsb
ss
adc
cmp
or
filds
int3
xor
sahf
jo
aas
fsts
rcrl
xchg
scas
rol
mov
or
mov
lahf
fcoms
push
jne
and
mov
gs
adc
pop
and
mov
rdtsc
xor
cwtl
insb
into
mov
lahf
in
xor
xchg
dec
push
xchg
pxor
ljmp
lods
cmp
sahf
sub
mov
xchg
adc
jbe
imul
jge
sub
xchg
or
dec
xor
jge
lock
cmpsb
sub
mov
push
test
add
les
mul
or
in
pop
cmpsb
cs
ds
aaa
loopne
das
subl
inc
int3
lock
mov
jno
dec
pop
ficoml
pop
es
jnp
in
mov
ss
dec
pop
or
sub
mov
insl
sub
cli
inc
or
sti
xor
jg
push
cli
aad
fldenv
xor
pop
daa
dec
lret
sub
xchg
jmp
loop
loopne
cmpsb
dec
adc
xor
mov
cmpsl
sub
ljmp
ja
mov
and
ss
stc
jp
mov
jmp
ss
js
push
je
sub
pop
and
pop
in
jo
cmp
insb
pusha
cmc
iret
sub
jnp
sub
and
cmp
push
mov
lods
jmp
jmp
cmpsb
xchg
or
icebp
mov
in
xchg
clc
jae
xchg
xor
push
dec
jl
mov
mov
and
loop
adc
xor
push
xchg
out
pop
mov
movsb
xchg
or
cld
jne
mov
test
mov
jl
cwtl
fs
mov
cmp
dec
inc
or
outsl
push
inc
pop
dec
mov
test
push
mov
call
adc
mov
push
inc
push
movsb
test
popf
push
xor
jne
add
xchg
xchg
inc
pop
mov
fisttps
xchg
in
jp
in
lea
pop
icebp
testb
dec
mov
testl
xchg
dec
and
mov
fldt
mov
xor
outsb
out
out
in
sub
addl
xchg
enter
mov
mov
push
test
mov
pop
xchg
sbb
iret
lods
dec
leave
xchg
push
cmp
sub
mov
popa
xlat
insl
sbb
lods
dec
ret
inc
push
lcall
cs
mov
xor
sbb
das
pop
out
sub
adc
sbb
xor
fnstsw
sub
jecxz
mov
push
js
add
subl
mov
xchg
pushf
enter
add
cmp
adcl
add
jne
aaa
mov
cmp
dec
push
xor
inc
fldl
cld
xchg
in
iret
js
push
mov
imul
outsb
pop
addl
pop
orb
xchg
jge
scas
adc
sbb
xlat
or
iret
adc
sbb
repnz
nop
add
movsl
and
lea
scas
nop
cmpsb
iret
push
xor
inc
inc
loopne
add
aad
cmp
mul
sub
adcl
jne
orb
jge
adc
add
mov
rcrl
pusha
leave
mov
sbb
das
mov
jp
scas
fisttpl
mov
mov
xchg
sti
shrb
daa
stos
pop
fnstcw
cld
sub
inc
out
adc
mov
sbb
mov
jo
dec
push
imul
ret
aas
mov
inc
mov
adc
leave
mov
jp
daa
mov
xlat
in
jmp
gs
incb
pop
arpl
mov
adc
xchg
jo
test
fdivrl
hlt
hlt
dec
jns
jg
shll
icebp
jmp
jo
aas
push
xchg
mov
pop
sbb
out
out
cmp
push
jnp
xchg
mov
lcall
mov
sarl
sub
out
pop
and
roll
push
push
push
aam
dec
rcrl
rorb
mov
xor
dec
mov
mov
cld
jae
js
loopne
mov
add
jae
pop
push
inc
ret
adc
xchg
dec
adc
subl
das
int3
je
push
sub
jne
imul
cli
cmp
movsb
push
repnz
ljmp
in
inc
push
xor
or
movsl
adc
test
pop
test
mov
add
sbb
rcr
push
or
arpl
cmpsb
jnp
push
sbb
lock
sbb
pop
in
mov
add
mov
mov
cli
mov
lods
cmpsb
cmp
stos
jge
jo
sbb
inc
mov
bound
xchg
filds
movsl
in
subb
mov
sub
aad
push
popa
add
mov
push
mov
and
mov
sahf
push
test
mov
dec
clc
jmp
sbb
mov
dec
add
add
arpl
mov
in
ret
test
jmp
data16
jno
mov
cs
or
das
cmp
pop
cltd
neg
pushf
sub
out
sbb
push
push
cld
aaa
cmpsl
inc
xchg
fcoml
sub
aaa
jbe
ret
lret
lret
sbbb
lods
imul
cmp
or
pop
pop
pop
pop
xchg
push
jge
ljmp
or
roll
cwtl
push
gs
das
loop
lcall
xchg
sbb
pop
pop
sub
pop
repnz
rclb
in
xchg
cmp
fwait
hlt
sub
ds
enter
jae
rcrb
pop
mov
push
xor
aaa
add
addb
rcl
xor
inc
in
pop
ret
sub
or
adc
data16
xchg
ficoms
sarl
xchg
sbb
addb
adc
rcl
mov
les
aaa
call
add
and
das
jg
into
test
and
mov
xlat
push
leave
inc
push
out
scas
push
repnz
fs
inc
sub
xchg
jg
xchg
imul
pushf
jno
ss
adc
add
es
sub
pushf
add
mov
call
pop
cmp
push
dec
mov
and
insl
shll
aaa
jmp
cmp
outsl
imul
test
dec
xchg
or
mov
mov
add
or
into
mov
leave
aaa
imul
out
xor
inc
inc
pop
jnp
stos
decb
outsl
fistpll
xchg
dec
movsl
dec
mov
dec
repnz
insl
insb
cmp
mov
aaa
in
insl
rorb
insl
negb
scas
in
sbb
repz
pop
loope
cmpsb
imul
cmp
push
test
mov
loopne
pop
pop
xchg
and
sarl
mov
xchg
into
jg
or
test
les
insb
mov
addr16
pop
fisubl
negb
dec
nop
jne
jno
jmp
push
mov
jbe
sub
fwait
add
mov
mov
enter
pop
lcall
pushf
ficoms
call
add
out
xor
cltd
pop
sub
ret
in
push
das
mov
inc
sbb
js
ljmp
movsb
mov
iret
lea
arpl
add
xchg
push
dec
xor
sbb
or
xchg
and
ja
pop
or
jb
mov
xchg
cltd
clc
test
mull
out
pop
rclb
push
movsl
dec
sub
cmp
mov
mov
mov
mov
mov
hlt
in
pop
sbb
bound
dec
push
mov
pop
mov
hlt
fisubrl
aad
shll
mov
xchg
pop
cmpl
ds
in
sub
and
mov
test
ret
xor
into
test
push
jmp
jecxz
repz
jl
inc
add
push
out
out
dec
ret
sbb
push
aas
sti
lcall
sahf
idivb
cmp
xlat
ret
icebp
lock
cmpsb
mov
js
iret
js
fcoml
cli
dec
adc
xchg
stos
lds
cltd
pop
es
xor
movsb
lea
aam
jl
cwtl
dec
mov
mov
shlb
adcb
cmp
xlat
test
mov
xlat
dec
enter
mov
xor
push
pop
leave
or
stos
jmp
mov
popa
call
outsl
dec
les
lret
fimull
mov
xor
cwtl
sub
xorb
pop
pop
mov
inc
scas
jle
cli
xchg
cmp
cmc
cmp
lret
out
pop
ss
cmpsl
or
rcll
adc
ja
imul
cmp
out
mov
popa
test
ss
mov
cmpb
xlat
cld
imul
mov
insb
ja
sbb
out
loope
outsb
pop
cmp
pushf
mov
cmp
dec
movsl
jae
dec
cs
cmp
aaa
sbb
dec
push
mov
fadds
lahf
xchg
mov
mov
aaa
out
insl
cltd
mov
shll
rorb
xor
aad
ds
and
test
cltd
xchg
push
scas
add
mov
dec
jmp
out
sti
scas
test
cltd
mov
adc
mov
pop
fistpll
ret
daa
shll
outsl
loope
incl
xchg
ja
xchg
cld
fisttps
jg
les
or
cmp
pusha
sbb
mull
iret
or
mov
mov
dec
rolb
pop
and
insl
loope
adc
out
mov
out
mov
cmp
fcoml
cmp
push
ret
cmp
push
lahf
push
pop
dec
push
jnp
push
add
or
mov
hlt
clc
xchg
icebp
jno
and
cmc
sbb
jge
inc
inc
out
adc
pop
sbb
lret
in
mov
loopne
test
mov
lea
mov
popf
sbb
jae
xchg
ss
mov
jae
fistpl
enter
es
adc
test
testl
lock
mov
sbb
jmp
fcoml
out
dec
mov
cmp
sahf
mov
out
out
xor
mov
call
call
xchg
mov
pop
sahf
pop
sub
mov
pop
js
fisttpll
jmp
cmp
xor
std
cmp
jg
sahf
jecxz
dec
insb
outsb
mov
in
push
psubq
mov
mov
cld
sahf
insl
push
or
mov
bound
sub
fistl
xor
inc
or
pushf
movsl
pop
scas
or
stos
lea
push
sbb
and
pop
push
clc
mov
xchg
int3
cmp
dec
push
pop
fbld
mov
stos
and
iret
cltd
inc
lock
xorl
and
stos
iret
pushf
push
stc
into
in
push
pop
cmp
jg
insl
insl
inc
mov
loop
imul
sub
repz
mov
testl
xchg
push
adc
and
jmp
xchg
mov
cmp
insl
int
dec
je
fimull
ds
cwtl
dec
and
cwtl
out
lahf
addb
mov
rcl
fistpl
mov
shlb
or
out
jmp
adc
dec
or
into
pop
int3
inc
ja
xor
int
adc
out
mov
paddd
imul
sti
cmp
repz
daa
lea
int3
cld
clc
sub
sbb
sbb
mov
cmpsl
pop
pop
lods
or
pop
test
cld
inc
mov
push
mov
sarb
mov
lcall
add
cmpsb
cs
icebp
xlat
int3
sbb
inc
es
daa
cmp
push
inc
jl
cmp
xor
fbld
movsl
sub
scas
mov
in
cli
jg
mov
je
movsl
sub
jmp
sbb
sbb
hlt
sbb
add
sub
mov
ret
add
xchg
jae
mov
xor
push
loop
cli
and
dec
cs
jecxz
fbld
jnp
inc
mov
jge
insl
jbe
out
repz
mov
jae
loope
xor
in
xchg
enter
rcll
push
subl
jle
push
das
mov
in
pop
fsubp
inc
jp
call
jno
shl
fcoms
pop
pushf
loope
lret
cwtl
push
pop
sbb
xchg
das
sti
cmp
call
mov
push
sbb
add
mov
pop
pusha
mov
mov
out
ret
outsb
add
iret
je
jmp
jno
call
arpl
cmc
add
call
push
stc
mov
cmp
inc
and
icebp
out
mov
xor
xlat
inc
fisubs
xor
out
push
jl
sbb
and
jbe
cwtl
jg
andl
adc
or
icebp
xor
jne
and
inc
jle
in
mov
call
xor
inc
jne
fs
scas
pop
int
adc
pusha
into
push
mov
jle
icebp
ja
fistl
adc
cmp
dec
push
testl
inc
dec
aas
add
into
inc
add
pop
mov
dec
push
add
pop
je
fwait
mov
jbe,pt
mov
push
addb
mov
les
mov
inc
lods
cmp
popa
cltd
subb
jle
and
mov
xor
xor
xchg
push
stos
imul
cmp
shl
pop
lea
pop
push
and
fwait
dec
xorb
xchg
add
push
in
and
test
icebp
xchg
stos
enter
mov
nop
dec
cli
enter
out
aas
scas
and
lcall
cld
fidivrl
sahf
enter
inc
shl
mov
repnz
xor
cld
inc
incl
shlb
jg
icebp
pop
inc
or
in
and
mov
jg
outsl
mov
leave
je
fisttpl
pop
shl
div
jge
ror
jecxz
jmp
and
outsb
xor
in
les
fsubr
test
jne
adcb
pop
sub
stos
mov
jge
roll
fists
jb
pusha
xlat
inc
cmpsb
pop
in
call
int3
jmp
mov
scas
xchg
sbb
lcall
stos
ljmp
data16
call
inc
test
xchg
cmp
dec
jg
out
jmp
aad
xchg
ds
andl
imul
data16
mov
in
sbb
push
in
int3
jmp
xor
lods
orb
jnp
hlt
adcb
or
das
dec
shll
iret
out
lea
add
mov
add
adc
and
lds
pop
loopne
or
bound
mov
inc
sbbl
add
pop
mov
notl
xor
shlb
repnz
and
in
out
stc
xor
lea
data16
outsb
call
push
mul
es
mov
jne
aam
jnp
das
in
mov
jl
cld
mov
pop
loope
lret
mov
das
add
pop
pop
subl
imul
and
push
ret
je
xchg
jae
adc
sub
xor
xor
sub
cmc
bound
mov
mov
mov
movsb
push
aam
mov
inc
ss
cmp
cmp
and
fdivs
mov
mov
pop
mov
shll
add
dec
inc
xorl
cli
sbb
cmp
in
popf
xor
popa
cli
clc
jae
shrb
mov
incl
inc
xor
cltd
xlat
mov
xchg
jg
lods
xchg
fistl
les
and
xchg
lret
cmp
addr16
popl
dec
xchg
int3
xor
das
fcomi
sbb
sbb
mov
xor
repnz
jge
les
loope
fcom
push
loope
movb
lret
test
cmpsb
repz
cltd
jp
xchg
inc
inc
icebp
dec
or
sbb
dec
xchg
inc
adc
out
and
push
xchg
aad
and
in
insl
mov
pop
scas
shlb
outsl
push
ret
and
lea
push
mov
fnstenv
dec
je
jmp
push
sub
mov
insl
pop
sbb
xor
lret
and
mov
adc
sbb
mov
jle,pt
sbb
scas
jns
dec
sbb
jne
inc
push
loopne
scas
or
ffreep
fsubrl
xor
out
out
and
sub
xchg
xchg
insl
sub
ret
xchg
movsb
cwtl
js
aaa
scas
pushf
hlt
out
add
cmpb
inc
cmp
aaa
jae
mov
lahf
xor
cmp
addr16
jo
es
dec
adc
pop
ret
lods
or
mov
mov
cld
mov
pop
sti
push
jo
lods
inc
cli
int3
push
lods
dec
pop
bound
dec
fidivrs
movsb
sbb
add
aad
mov
cwtl
push
outsb
jae
jmp
in
or
pop
add
or
imul
push
cwtl
int
inc
pop
aaa
pop
lds
xor
test
or
sbb
mov
outsl
xorb
push
aad
push
lea
out
push
add
gs
addr16
xchg
and
out
inc
inc
cwtl
xchg
sahf
inc
in
repnz
stc
sub
push
shr
lods
and
jmp
ror
popa
mov
add
ja
and
stc
adc
xor
aaa
and
popf
rcll
sarl
mov
fnstenv
inc
add
lock
sbbb
clc
push
dec
add
mov
push
jae
jmp
sub
pop
clc
push
mov
mov
cmp
aaa
mov
lods
in
xor
std
adc
std
jb
mov
add
inc
stc
xchg
pushf
jmp
jmp
lods
add
enter
rorb
lods
push
aad
sbb
pop
data16
imul
std
push
xor
leave
xchg
add
cmp
movsl
andl
cmp
or
in
stos
cmp
imul
imull
sbb
mov
push
dec
rolb
cmp
mov
arpl
pushf
in
data16
andl
xchg
add
adc
stos
lods
sbb
jg
mov
inc
cli
xchg
add
aam
or
cmpsb
ljmp
add
arpl
test
mov
lret
lret
std
push
lcall
stc
std
mov
aam
jge
out
insl
dec
push
cmp
ss
jg
popf
mov
or
sbb
mov
push
push
scas
orb
das
pusha
cli
inc
mov
pop
pop
xchg
test
das
mov
iret
jecxz
mov
push
leave
pop
mov
push
test
jb
aas
jl
or
pusha
push
push
ret
shll
add
push
xchg
shll
add
or
loope
lret
adc
jecxz
add
mov
jbe
mov
daa
push
mov
bound
adc
inc
cmc
aas
in
xchg
jge
ds
add
inc
les
repz
xor
sbb
dec
xchg
in
jmp
add
jecxz
iret
adc
ja
repz
test
dec
rol
aaa
mov
or
icebp
xchg
cmp
sbb
mov
aaa
inc
push
mov
cwtl
cmpb
sub
enter
stos
push
leave
xchg
fisubrs
sub
cmp
mov
jmp
jb
js
pop
jne
jnp
sahf
loope
or
push
xchg
lahf
dec
sub
mov
mov
adc
dec
push
out
lcall
push
movb
inc
into
mov
add
sub
cwtl
int3
xchg
loop
lock
mov
sub
int3
into
loop
mov
icebp
test
pop
ss
and
pop
lcall
mov
addr16
jecxz
out
mov
push
push
sbb
leave
or
std
inc
dec
xor
stc
iret
jns
push
jnp
outsl
rcl
cwtl
outsl
or
sub
es
sbb
mov
repnz
xlat
out
push
daa
repz
lock
pop
leave
lcall
data16
sub
cld
pop
push
xchg
mulb
ja
cwtl
mov
movsb
mov
popf
pusha
repz
jmp
out
pop
sub
testb
enter
or
sub
es
mov
rcr
pop
fcomps
jnp
or
push
popf
sti
loope
sbb
inc
das
out
les
mov
mov
xor
testb
mov
push
int3
lock
fsubrs
xchg
cmc
stos
mov
lret
shll
adc
sbb
aad
xor
ds
or
es
js
scas
push
sub
jle
mov
sub
push
push
push
xchg
mov
test
sti
xchg
out
lret
inc
pop
test
movsb
dec
lds
jmp
pop
insl
mov
dec
adc
and
cmpsl
mov
int3
push
dec
mov
adc
lcall
pusha
fadds
into
outsl
jmp
inc
sbb
pusha
push
mov
lret
mov
lds
arpl
call
rolb
jp
pop
int
call
push
movsl
jnp
inc
lock
sbb
aas
imul
faddl
test
hlt
mov
push
shll
fwait
int3
sbb
dec
xor
xchg
inc
mov
mov
and
or
push
fistps
test
push
jp
cmpsb
leave
fstpl
pop
call
test
mov
addb
lret
scas
stc
push
mov
pop
push
xchg
mov
lahf
and
loop
sub
lods
xchg
dec
iret
cmp
or
add
shl
mov
pop
out
jmp
fwait
sub
mov
jb
mov
mov
dec
cmp
outsb
stos
push
int3
nop
pushf
xor
pop
pop
push
std
pop
mov
jbe
adc
sbbb
mov
int3
xor
xlat
lods
cmpb
mov
push
imull
movsb
dec
aad
outsl
stos
fsubrl
sbb
iret
lock
jge
fidivl
das
enter
into
test
push
imul
lcall
and
arpl
xchg
push
scas
xchg
out
mov
and
inc
mov
sub
repnz
pusha
and
mov
sbb
shl
aad
lock
imul
xor
or
test
mov
cs
inc
movsl
aam
negb
sub
inc
adc
mov
into
test
adc
sbb
cmp
or
ror
xchg
push
dec
and
not
mov
aad
dec
shll
test
xchg
mov
pop
xor
insb
mov
sbb
add
xchg
mov
dec
fsubl
aaa
icebp
stos
ds
int3
xchg
mov
mov
add
lods
imul
or
cli
cmp
sbb
pop
pop
lcall
adc
aad
call
out
lock
and
std
bound
and
xchg
outsl
outsb
adc
lret
mov
fs
mov
enter
fsubs
cmp
inc
pusha
pop
out
push
xchg
sahf
inc
imul
test
aaa
lods
jne
sbb
mov
insl
gs
xorb
dec
cmp
scas
notb
mov
je
cli
lahf
mov
push
in
adcl
add
out
or
loopne
xchg
push
mov
inc
inc
jns
lods
loopne
cmp
cmp
dec
outsl
mov
lcall
movsl
or
repnz
sbb
cmp
std
mov
push
push
out
xlat
adc
pop
sbbb
pop
inc
out
leave
cltd
jo
ljmp
rolb
mov
dec
stc
in
cmp
xchg
add
out
fnsave
pop
int3
or
mov
out
or
pop
pop
in
inc
cmpsl
subl
xchg
xor
inc
xor
shr
addr16
cmp
sub
mov
xchg
nop
xor
or
mov
jge
in
ds
xchg
cmp
xchg
add
fnstsw
test
mov
mov
out
cmovle
xchg
mov
inc
data16
mov
jecxz
mov
inc
sub
cmp
cmp
insb
xor
loop
cmpsl
ret
movsb
int3
xchg
adc
sbb
fdivrl
faddl
xchg
gs
jg
fisttps
rorl
das
and
sbbl
xchg
ret
fcmovnu
ja
rorl
jns
fbld
test
jnp
pop
pop
clc
or
in
ljmp
cltd
shr
or
xor
fcompl
aad
mov
or
out
call
mov
push
shl
jne
xchg
cld
or
sub
or
cmp
xchg
push
test
lock
mov
pop
ret
pop
movsb
dec
inc
das
stc
jae
pop
jne,pt
fidivl
in
push
gs
pop
cmp
rcrb
imul
jo
and
and
add
xorl
cmpsb
add
repnz
popf
and
cmp
inc
push
inc
sbb
loopne
cwtl
ficoms
pusha
mov
xchg
mov
push
pushf
imul
xchg
pop
insb
enter
daa
pop
fistl
jno
nop
mov
cmp
imul
mov
outsb
or
loop
push
das
dec
fs
cltd
jge
adcl
aam
dec
insl
aad
orb
in
or
pop
loop
xlat
and
popa
inc
in
js
sahf
stos
popl
and
filds
dec
lds
sbb
push
test
shlb
mov
xchg
cli
add
xor
imul
or
cmc
or
lea
repz
pop
mov
test
sbb
mov
dec
add
jne
fidivs
cmp
sbb
je
inc
sub
mov
xchg
std
cmpl
add
jle
push
nop
pop
push
mov
jg
lods
cli
mov
push
xchg
jns
push
lock
mov
jl
in
jo
push
xlat
in
rcrl
out
adc
jnp
stos
lock
stos
push
mov
mov
pop
movsl
jmp
jge
mov
outsl
loope
test
and
cmp
je
imull
cwtl
inc
ret
mov
int
add
xlat
add
sub
sub
cltd
dec
inc
iret
or
lcall
push
push
xchg
xor
adc
pop
pop
lods
dec
addr16
xchg
mov
clc
loope
xchg
jne
cli
xchg
loop
mov
pushf
ds
push
retw
mov
push
mov
insb
jp
push
bound
sbb
push
insb
fisttpll
jae
mov
das
pop
loopne
cmp
push
mov
inc
movsb
or
shl
xchg
pop
mov
xor
sbb
test
xchg
adc
xchg
inc
es
mov
add
cmp
cmp
pop
movsb
mov
lock
idivb
stc
stos
clc
jno
nop
int
stos
add
push
and
outsb
sub
cld
xor
add
aas
ds
push
pop
das
pop
popa
js
mov
mov
js
hlt
cltd
ja
popa
lods
insl
mov
ss
test
inc
mov
and
cmp
dec
fcomip
cmpsb
push
xor
divb
aaa
mov
xor
test
jl
cmp
psrld
ss
jnp
ljmp
les
sti
test
in
sbb
push
js
mov
jnp
jns
adcb
popa
sbb
xchg
cmp
sbb
sub
loopne
nop
aad
and
orb
inc
xchg
fisttps
xor
cltd
dec
xor
add
push
or
sbb
jmp
sub
sti
mov
sbb
or
and
lahf
push
dec
cmp
add
out
pop
cmpsl
ret
imul
cmp
push
pop
fisttpll
sbb
jecxz
push
or
cmp
sub
imulb
push
add
call
ja
push
sub
xlat
fstps
ret
out
test
test
stos
popa
repnz
pop
and
in
sbb
sbb
popl
rcrl
repz
data16
fmul
aam
pop
je
cmpsb
sbbb
pop
pop
int
fsubs
mov
pop
testl
mov
push
and
bound
inc
and
mov
pop
fdivrl
pop
fsubrs
data16
movsl
push
push
lods
data16
jae
mov
les
cwtl
in
mov
gs
in
push
cmpsb
mov
xor
cwtl
xchg
cmpsl
cwtl
ss
cs
sahf
inc
mov
mov
and
push
pushf
dec
or
mov
push
or
cmc
loope
repz
mov
into
imul
jns
stos
pop
ret
cli
lods
jecxz
fwait
js
inc
sti
and
or
or
in
mov
hlt
int3
and
popf
sub
jne
push
push
pop
adc
cwtl
jns
lea
es
shr
pop
adc
cmpsl
mov
or
fsubr
sysenter
sti
fs
cmc
mov
pop
mov
or
sar
jbe
inc
sub
xchg
movsb
cwtl
add
inc
xchg
adc
ret
icebp
jns
sbbl
out
mov
xchg
mov
mov
popa
outsl
icebp
popf
sbbb
xchg
nop
adc
dec
push
or
fdivs
icebp
out
adc
cmpsb
fisttps
or
jg
or
xchg
fwait
hlt
stos
or
loope
lock
aam
mov
loopne
inc
mov
cs
and
adc
jmp
mov
push
in
jae
ret
mov
dec
push
push
ffree
or
scas
and
adc
jge
and
scas
test
mov
cmpsb
inc
xor
inc
aas
movsl
insb
pop
xchg
nop
mov
inc
push
and
jecxz
repz
inc
shll
sub
in
xchg
mov
testb
leave
cwtl
clc
fnstcw
mov
pusha
shlb
cmp
shll
into
frstor
loopne
repz
jmp
ljmp
and
gs
dec
cmp
jns
outsb
xlat
mov
mov
mov
add
into
jmp
pop
adc
ret
test
xchg
shlb
xlat
cmp
subb
adc
pop
add
or
leave
sbb
sbb
mov
inc
loop
enter
mov
ljmp
test
xorb
mov
jle
frstor
orb
pusha
or
int
mov
ret
inc
sub
push
mov
sub
mov
cltd
and
and
es
std
cli
inc
cmp
stc
rcll
scas
das
xchg
mov
idiv
lret
cmc
std
scas
fisttpll
inc
out
or
into
sti
rcll
mov
mov
cmp
pop
push
lret
mov
lret
aaa
push
call
hlt
daa
jne
lahf
pop
sub
mov
lret
inc
mov
or
mov
mov
addr16
fadds
lds
mov
fists
sub
cld
stc
std
imull
jo
in
aas
push
insl
movsb
imul
jmp
inc
mov
push
scas
xor
mov
insl
outsb
adc
sarb
in
mov
and
mov
xchg
fwait
in
shl
aaa
pop
or
sub
cwtl
cmc
inc
mov
mov
loop
faddl
cs
adc
pop
mov
rcl
neg
xchg
es
mov
loope
loopne
jne
stc
sub
aaa
ljmp
ficompl
pusha
test
mov
je
hlt
inc
and
cmp
lahf
mov
std
dec
aad
sbb
mov
daa
fwait
stc
arpl
push
imul
addb
ret
or
lock
mov
fstpl
push
push
mov
mov
and
ja
pushf
push
sbb
lcall
mov
pop
xchg
rolb
or
cmp
push
stc
sbb
and
mov
jb
pusha
xor
add
push
dec
scas
in
pop
cli
push
mov
popf
sub
cltd
mulb
cmp
out
jnp
aam
mov
dec
pop
out
das
mov
neg
mov
stc
mov
inc
insb
into
jbe
shll
adc
xor
pop
or
ret
dec
adc
jae
cmp
mov
add
mov
cmp
cld
je
std
xchg
sub
cmp
mov
fbld
add
sub
dec
out
or
repnz
pop
sub
fadds
xor
popf
ficompl
xor
dec
out
orl
fnstsw
nop
popf
aaa
mov
pop
add
jo
out
insl
dec
lret
mov
outsb
mov
xchg
lods
pusha
popa
popf
out
stos
clc
xchg
enter
push
clc
popa
inc
push
mov
fcmovnbe
cmp
mov
test
xchg
mov
repnz
jno
cs
je
push
sbb
aaa
adc
mov
push
xorps
or
shll
loopne
mov
test
xchg
pop
push
mov
cmp
mov
dec
sarl
and
xchg
or
mov
daa
jp
mov
xor
sbb
add
sbb
mov
dec
sti
repz
mov
test
ds
jns
and
or
pop
jb
les
pop
adc
cld
stos
shll
mov
or
pop
dec
arpl
inc
xor
fcompl
add
dec
sbb
fdivl
int
out
inc
fwait
out
popa
push
lea
cwtl
mov
pop
jp
roll
xchg
sub
addr16
inc
mov
loop
xchg
lahf
jge
test
and
sbb
arpl
mov
imul
incb
test
fsts
adc
hlt
sbb
jnp
gs
stos
jno
insb
int
fldt
add
mov
cs
cld
mov
jns
dec
stc
mov
push
pop
fdivp
fwait
xor
fdivrs
popa
les
in
fsubp
mov
jbe
loop
mov
and
jb
out
or
shlb
push
and
fdivrs
pop
sub
push
jmp
push
dec
in
popf
addr16
inc
dec
lea
mov
xchg
xor
inc
and
sbb
call
dec
mov
adc
sbb
cmp
sub
jo
cmc
dec
sbb
push
shl
cltd
test
lea
xor
cmp
push
mov
aad
mov
es
pop
push
fimull
movsb
imul
aaa
push
xorl
push
mov
roll
mov
add
adc
jl
arpl
xor
leave
jo
mov
pop
mov
lock
mull
pop
inc
dec
mov
inc
xor
push
orl
jne
xchg
jb
bnd
mov
mov
jae
add
push
push
es
cmp
insb
loop
mov
xchg
push
and
in
mov
fadd
or
and
mov
push
xor
sub
mov
inc
mov
mov
hlt
mov
aam
xchg
stos
cltd
pushf
jl
mov
lock
aad
shll
repnz
cwtl
push
scas
sub
outsl
movsl
mov
jae
pop
mov
add
aad
mov
clc
lea
jmp
jb
ja
and
insl
mov
daa
xchg
in
cmp
mov
mov
aam
out
mov
inc
and
lcall
movsb
das
ds
sbb
andl
adc
lods
cmp
mov
push
iret
clc
pop
shl
les
outsb
cmp
jnp
sub
rcr
bound
in
clc
int3
push
cmp
je
sbb
xor
rcl
push
mov
pop
fucomip
xor
loop
mov
stos
rolb
cmp
mov
adc
dec
jae
xchg
mov
xchg
jge
mov
bound
cmp
mov
adc
jecxz
dec
das
adc
xor
xchg
inc
or
xchg
and
in
add
insl
or
sbb
dec
inc
adc
loop
inc
xor
xchg
mov
mov
jge
fisubs
lock
mov
neg
sbb
push
sbb
push
in
add
popf
and
pusha
xchg
jle
pop
ret
cmc
aam
xchg
mov
sub
inc
add
and
jns
fstps
rclb
movsl
ds
ljmp
push
dec
mov
addb
test
jbe
push
or
sub
inc
in
ss
fildll
xor
sbb
mov
stos
outsb
jno
fsts
rorl
ss
mov
scas
fwait
lcall
popa
add
push
aas
mov
dec
ret
push
xor
outsl
push
scas
out
cld
and
repz
xchg
hlt
ret
fwait
out
fisubrl
push
sahf
adc
imul
pop
add
inc
faddl
rol
jb
out
jne
pop
sbb
dec
rcrl
les
pop
xchg
jl
rcrb
adc
out
sti
sbb
push
mov
xor
insb
aad
mov
movsb
mov
imul
cwtl
pushf
fisubrs
adc
pop
cli
rclb
lcall
add
adc
jge
into
mov
xchg
cmp
loopne
imul
arpl
xlat
mov
sub
filds
cmp
shrl
repz
dec
enter
jle
call
orl
jle
xchg
and
pop
ficompl
jmp
jae
std
out
jnp
and
dec
push
icebp
aaa
mov
mov
aas
and
xchg
fwait
mov
loope
mov
pop
pop
mov
sbb
frstor
pop
sar
add
mov
pop
mov
jns
or
dec
push
pop
xor
inc
and
daa
jmp
mov
filds
out
movsl
push
xchg
inc
inc
call
popa
cmp
movsb
jne
ds
and
mov
adc
shlb
in
add
outsb
movsb
jae
cltd
out
outsl
xlat
mov
sub
xchg
sbb
push
daa
pop
or
std
sub
or
inc
mov
xor
std
loop
sbb
sbb
add
push
popa
jae
lahf
cmc
cmp
jg
mov
jne
aad
mov
out
call
ss
mov
cmp
push
and
adc
and
aas
mov
sti
inc
push
repz
inc
rcrb
mov
fldl
mov
or
cwtl
mov
popf
add
jecxz
lcall
idivb
add
enter
mov
das
movsb
cwtl
mov
rorl
push
mov
std
decb
mov
xlat
mov
out
jbe
fsubrs
push
jg
jl
pop
fsubl
jmp
test
mov
lods
pop
insb
lea
addr16
cwtl
insl
inc
push
jo
ficoms
sbbl
mov
out
inc
sub
ljmp
jg
and
out
cltd
scas
maxps
add
loopne
mov
cs
dec
mov
fs
adc
mov
sarb
icebp
sar
add
mov
in
aas
aam
mov
inc
and
repz
das
les
mov
sub
out
cmp
test
or
fisttps
outsl
repnz
push
test
clc
movsl
inc
push
orl
push
leave
je
lock
bnd
jg
and
mov
fwait
mov
mov
stc
push
out
push
cmpsb
jmp
bound
aad
sahf
pop
mov
sahf
adc
pop
inc
pop
mov
xor
xor
loop
in
das
xchg
mov
cltd
jmp
push
xchg
cmp
cmp
mov
mov
pushf
shlb
adc
cwtl
sti
mov
add
pop
xlat
dec
pop
ss
mov
sub
fcmovb
push
data16
ljmp
popf
ret
pop
push
ss
mov
neg
addb
add
rcr
or
in
jno
xchg
enter
jmp
pusha
cmp
es
ljmp
int3
and
fcomps
aas
and
push
call
or
sub
ss
movsl
jecxz
insb
icebp
pop
idivb
adc
cpuid
es
out
popf
adc
lcall
mov
movlps
int3
cld
outsb
mov
pop
mov
ljmp
leave
std
pusha
mov
sub
jmp
inc
cmpsb
cltd
push
aam
out
dec
rolb
aam
mov
sti
aad
xchg
call
jmp
jb
cld
lcall
push
sbb
dec
aas
pop
lds
inc
pop
lret
in
xchg
inc
jecxz
add
mov
push
push
push
mov
imul
rorb
push
shrl
push
sub
push
inc
roll
aaa
sarl
ret
lock
push
dec
push
mov
mov
cmp
paddusb
jb
lods
cmp
sbb
aas
pop
lock
jmp
mov
inc
ss
lcall
lods
mov
xchg
xor
sub
fs
push
or
jg
push
add
lret
leave
xchg
orb
cmpsl
and
xchg
dec
inc
mov
push
in
call
pop
std
cmp
fcmove
pop
push
xor
xchg
inc
es
mov
push
xlat
cld
pop
push
sbb
sbb
fs
push
mov
sahf
push
sbbb
sbb
ja
inc
sti
bound
loope
or
mov
add
ret
adc
adc
xchg
push
test
orb
fwait
add
repnz
test
or
stos
pusha
dec
cmp
fsub
dec
out
xchg
repz
sbb
xor
mov
sbb
adc
fnstcw
xchg
mov
stos
and
aad
inc
jo
daa
sub
add
add
mov
pop
test
jae
ljmp
icebp
mov
pusha
mov
dec
jmp
fucom
sub
out
fcomp
leave
push
sbb
and
out
bound
or
push
sub
mov
pop
loop
xor
and
aad
sub
push
and
push
sub
into
xor
rcrb
mov
mov
mov
outsb
jo
xor
cmp
or
xchg
ret
pushf
decl
add
clc
jle
inc
xchg
sub
sub
repz
and
mov
jne
test
sub
cmp
fwait
mov
cmp
pop
cmp
cwtl
xor
nop
icebp
push
es
pop
popf
jp
loope
jmp
stos
mov
in
or
pop
call
test
mov
mov
sub
orb
and
cmp
push
loope
rcrb
mov
sbb
loope
jecxz
mov
pop
pop
xor
jnp
xor
adc
inc
lods
mov
xchg
cwtl
test
jo
jne
and
cmp
in
push
shlb
stos
cmp
faddl
outsb
iret
nop
push
inc
add
xchg
rcll
pusha
insb
addr16
jns
mov
fldl
jno
dec
fldl
pop
push
sub
fsubs
test
imul
mov
fisttpll
int
lret
and
mov
in
ljmp
push
cmc
movsl
lods
jge
test
pop
xchg
xchg
mov
notl
adc
adc
outsb
mov
fcomip
int3
ret
pushf
dec
push
inc
frstor
push
push
sbb
sarl
and
ficoml
sbb
jno
pop
sub
out
mov
lret
push
push
sbb
cmp
inc
sbb
ror
cmp
push
movsb
sbb
inc
in
ss
out
sti
inc
inc
xchg
repz
fidivl
sbb
xchg
xor
inc
inc
std
lods
jbe
insb
cmp
loop
mov
sub
adc
sub
mov
mov
leave
mov
lret
jp
movsl
aad
pop
cs
xor
in
sub
loop
cltd
sbb
push
je
xchg
adc
outsl
and
mov
push
xor
xor
insb
bound
fs
mov
rorb
inc
enter
cmp
aad
hlt
out
xorl
mov
aas
jbe
xchg
inc
pop
enter
and
lcall
loop
aaa
stos
rolb
out
cmp
mov
scas
inc
mov
jmp
xlat
add
and
sub
iret
aaa
out
inc
idiv
loop
xor
dec
test
fwait
push
stc
es
out
jns
in
pop
adc
mov
lret
je
dec
mov
leave
jmp
or
or
aad
loopne
ss
enter
pop
inc
mov
adc
stos
cmp
lret
push
mov
inc
sbb
lahf
xor
cmc
xor
enter
ljmp
jnp
sub
mov
lahf
fmull
mov
mov
xchg
es
pop
pusha
or
aam
pop
sbb
and
cmp
mov
xchg
push
adc
repz
pop
cmp
push
xchg
jnp
je
aas
fildl
pop
push
scas
inc
enter
jp,pn
xlat
imull
push
dec
movsl
lods
jae
outsl
cmpsl
stos
push
mov
lds
and
cmp
sub
or
out
testl
jns
ret
mov
dec
cmc
xor
push
and
cwtl
repz
pushf
xor
test
lret
ret
inc
leave
lods
mov
pop
in
pusha
hlt
js
sbb
es
movsl
mov
je
pusha
mov
lock
dec
in
repnz
push
inc
inc
lods
negb
sub
out
int
mov
jbe
insl
dec
or
and
stc
dec
pushf
lret
inc
aad
mov
insb
xor
inc
insl
daa
sbb
fcomps
sbb
sbb
movsl
inc
sub
stos
mov
and
inc
add
je
mov
addr16
cmpsb
icebp
pop
pop
enter
fidivs
pop
jle
leave
mov
xchg
mov
pop
mov
movsl
pop
out
jmp
jnp
not
mov
push
rorl
cwtl
jp
dec
cwtl
aam
push
jp
jp
out
std
std
mov
cmp
hlt
sub
lods
sbb
gs
or
jnp
jle
jp
jg
mov
and
sahf
gs
or
xor
mov
xchg
jmp
imul
mov
loopne
fsubr
scas
lock
pop
lds
pushf
js
out
cltd
sbb
cmp
cltd
pop
notb
leave
dec
push
add
movsb
ja
dec
and
push
jecxz
xchg
fcmovne
rol
jae
pop
and
sbb
xchg
dec
xor
hlt
out
and
cltd
sbb
sub
adc
arpl
jg
xlat
cmc
sti
testl
push
sbb
subb
scas
adc
enter
gs
inc
sbb
shl
mov
fwait
pop
jnp
push
fidivrs
xor
mov
cltd
scas
in
xchg
cwtl
sbb
mov
aad
xchg
jbe
dec
mul
hlt
sarl
dec
rcrb
jnp
mov
add
in
mov
dec
add
adc
and
pop
add
iret
inc
add
add
inc
imul
call
inc
push
mulb
push
js
pop
stos
cmp
mov
loopne
stc
sbb
dec
adc
push
fprem
jg
jbe
ret
cmp
mov
fcompl
mov
mov
mov
push
jge
mov
lock
cmpsb
add
mov
mov
imul
mov
fwait
out
rcl
int
sbb
xchg
inc
hlt
mov
lods
ret
xor
sahf
sub
mov
push
xor
dec
popf
sbb
or
insb
sbb
xlat
xor
cmp
enter
imul
scas
sub
and
push
fld
inc
push
imul
jo
popf
enter
icebp
mov
shr
jge
ja
add
add
je
loope
in
sub
add
mov
jmp
inc
sbb
inc
pop
imul
lret
adc
xor
loope
flds
inc
mov
sahf
outsl
inc
lds
cmp
je
adc
das
push
push
and
adc
daa
inc
movsb
repnz
in
mov
push
dec
xchg
push
pushf
sub
adc
dec
imul
xchg
out
and
clc
lea
out
in
mov
stos
pop
arpl
and
aas
mov
aam
inc
loop
pop
inc
bound
jmp
inc
mov
ja
xchg
jns
mov
dec
pop
jns
mov
mov
mov
test
sbb
cmc
les
dec
add
add
arpl
mov
push
cli
jle
int
mov
out
lea
sar
adc
shrl
mov
clc
ficompl
notb
ja
and
scas
and
in
loope
sbb
sbb
mov
bound
pop
ds
sahf
test
mov
adc
jo
mov
shl
jne
push
mov
adc
cmpsb
lret
cmp
shl
ja
test
xor
gs
addr16
nop
std
repnz
lds
fisubrs
rorb
or
test
sub
mov
aas
or
aaa
dec
stc
sub
fwait
push
test
push
out
cmc
and
mov
xchg
std
adc
xlat
flds
arpl
decl
in
insl
adcb
addr16
push
jmp
mov
test
loopne
inc
adc
sub
sub
je
dec
cmp
push
btc
ljmp
push
push
daa
xor
js
lahf
xchg
imul
popa
loopne
stc
push
pop
out
in
and
cmp
or
nop
pop
mov
dec
scas
mov
xchg
testl
sbb
es
imul
add
ret
lret
pop
loopne
mov
cmpsb
xchg
dec
test
sbb
push
dec
dec
hlt
cmc
fs
and
dec
xchg
or
jae
pop
mov
cmp
inc
pop
enter
push
or
ds
push
ja
sarl
fs
testb
adc
jp
sahf
xlat
add
clc
pop
mov
xchg
cltd
sbb
loope
in
or
stos
and
mov
mov
imull
xor
mov
popf
jns
insl
cmc
rcrl
xchg
or
cmc
lahf
faddl
sbb
or
mov
test
jns
mov
aad
cs
popf
loopne
lock
xor
popf
cmp
icebp
call
movsl
and
dec
cmpsl
mov
js
mov
add
ret
pop
in
cmpsl
lret
jecxz
std
inc
and
popa
mov
movsb
xchg
dec
test
ficoml
addl
cld
sbb
pshufw
sar
and
xor
nop
adc
inc
ror
nop
or
loopne
jns
sub
int3
test
inc
push
cmp
and
cli
add
outsb
das
push
xchg
fmull
or
and
add
ja
adc
or
pop
negl
sti
adc
adc
dec
lea
cwtl
push
ds
lock
iret
dec
or
in
inc
push
jmp
clc
jle
xor
mov
adc
enter
adc
adcb
xchg
pop
dec
mov
loop
xchg
xor
cmp
xchg
cltd
outsb
lds
sbb
jns
add
bound
insl
inc
xor
pusha
mov
jmp
hlt
shlb
cmp
or
mov
mov
and
cwtl
in
in
mov
sahf
push
icebp
inc
fidivrl
filds
cmpsl
pop
addb
inc
inc
out
jecxz
jo
ja
lret
pop
mov
xchg
pop
mov
cltd
leave
cli
imul
mov
ss
xchg
cli
mov
push
arpl
cmp
clc
movsb
mov
pop
das
cmp
mov
out
ds
insl
in
ret
add
rorl
dec
inc
insl
cli
loope
stc
dec
fwait
je
pop
insb
or
dec
ret
fcomps
sbb
mov
sti
daa
fs
enter
xor
xor
pop
lcall
xchg
test
mov
out
out
hlt
stos
test
gs
jno
cld
pop
jg
scas
and
mov
sbb
adc
das
push
lock
push
xchg
ljmp
xchg
dec
sbb
or
addr16
push
sbb
cld
mov
cmovne
mov
aam
jb
cs
lcall
hlt
ljmp
cmp
shr
and
jge
mov
sbb
lahf
add
andb
lahf
cmp
ds
jnp
pop
mov
out
lods
dec
repz
xor
push
lcall
dec
insl
jmp
out
dec
in
stos
rclb
cmp
lods
bound
fdivr
shlb
or
stc
sahf
pop
int3
mov
jae
push
adc
mov
xchg
xchg
stos
gs
xorb
mov
cmp
insb
xchg
popl
lea
call
lods
inc
in
pop
mov
lcall
pop
outsb
sub
xor
shl
aam
mov
xchg
add
xor
adc
lock
dec
js
dec
imul
popf
jae
xchg
mov
or
push
test
xchg
adc
std
and
in
xlat
xchg
testl
loope,pn
sbb
push
jp
sub
pop
sbb
jle
sbb
add
cld
fidivs
loop
scas
mov
les
outsl
mov
xchg
imul
add
jl
ja
cli
add
push
push
repz
popl
xchg
loope
push
xchg
pop
fidivs
sbb
dec
mov
hlt
xchg
ret
arpl
jmp
pop
inc
xchg
and
cli
insb
xor
and
mov
sub
lahf
lahf
cmp
xor
mov
cmp
shlb
pmaxsw
xor
jp
enter
xchg
push
aas
sub
add
icebp
sbb
pop
insl
nop
push
negl
mov
lods
xor
adc
push
js
je
fnsave
repz
shl
xchg
or
xchg
pop
sahf
loope
push
out
testl
jne
rcrl
push
mov
mov
dec
es
das
xchg
cmpsb
rorl
movsl
inc
push
cmp
lock
insl
out
add
or
lret
xor
xor
mov
ds
add
insb
inc
xchg
and
mov
sbb
jmp
aaa
cmp
in
and
leave
stc
cld
or
pop
ds
cld
test
mov
mov
ret
jp
lods
sbb
pop
scas
and
ret
pop
fisubl
sbb
lahf
outsl
sbb
ss
jg
xor
and
pusha
stos
out
pop
ficoms
leave
mov
dec
and
add
cwtl
xchg
fistl
iret
xor
out
add
in
xor
xchg
add
lock
repz
push
in
ljmp
mov
or
xchg
int
jne
xor
dec
stos
jl
mov
sbb
mov
push
getsec
sbb
cmp
hlt
cmpsb
and
and
sbb
lret
cmp
jns
pop
inc
pop
sbb
pusha
add
rolb
and
loop
push
out
and
pop
fucomip
mov
mov
je
in
jnp
push
mov
and
xchg
out
stos
dec
test
jnp
js
and
jnp
cld
les
and
jns
repnz
aaa
gs
fsubs
lock
dec
imul
cmp
imul
pop
adc
stos
or
dec
push
fstpl
mov
cs
mov
inc
xchg
inc
mov
test
rolb
or
mov
push
call
popa
es
xchg
ret
sub
out
mov
cmp
dec
hlt
test
fisttpll
out
out
cli
sbb
out
jae
pop
mov
adc
data16
and
adcb
rolb
cs
jbe
lcall
bound
and
and
xchg
sub
les
dec
mov
xchg
out
cmpsb
cmpl
dec
sub
add
lahf
jp
jnp
into
and
inc
movsl
popf
mov
mov
ja
push
ljmp
imul
cmpsl
test
jmp
xchg
loopne
data16
inc
and
push
xor
lea
rolb
aas
pop
sahf
lcall
sub
ja
jg
adc
fcomp
mov
jno
mov
xor
mov
imul
shll
add
ljmp
adc
aam
andb
mov
inc
mov
adc
stc
adc
mov
pop
pop
push
xor
subb
insl
clc
in
loop
sub
xchg
clc
out
dec
pop
ficoml
push
dec
jno
fistpll
jnp
enter
les
mov
or
lret
xor
stos
lret
mov
rcrb
sub
int3
bound
loopne
hlt
iret
clc
insl
pop
rorb
xchg
and
pop
inc
sbb
jmp
and
sbb
adc
mov
repnz
imul
sub
dec
stos
dec
add
lods
jbe
mov
or
cmp
in
fcompl
jg
shrb
iret
add
jmp
fdivrl
jle
sub
call
pop
mov
add
mov
aaa
push
ss
testl
je
push
inc
rol
push
out
call
sbb
dec
inc
push
sub
ret
decl
icebp
insb
mov
dec
mov
mov
arpl
sbb
hlt
push
push
popa
adc
xor
push
clc
fbstp
cwtl
ret
xor
insl
arpl
jge
xor
mov
and
jge
gs
cmpsl
jle
outsl
add
repz
or
addr16
in
in
fcoms
daa
push
cmpsb
adc
push
aaa
shlb
dec
xor
sub
clc
in
ret
xchg
add
stc
xchg
push
int3
fsubr
es
hlt
add
xchg
repnz
aaa
xor
adc
xchg
jmp
cmp
outsb
mov
outsl
scas
jnp
push
cmpsb
add
adc
push
sub
mov
fdivr
and
movsb
adc
repz
xor
jg
hlt
cs
fnstenv
jg
or
xor
movsb
add
dec
pop
or
inc
test
push
inc
aaa
addb
mov
adc
stos
popf
jne
subb
repz
or
aaa
out
cld
xlat
dec
shrl
sti
es
push
lcall
add
pop
rcl
xorb
inc
push
aam
jp
push
inc
sbb
mov
pop
inc
aas
xor
sahf
push
xchg
stos
xlat
aam
mov
leave
jge
jecxz
neg
inc
aaa
scas
cvtps2pd
insl
dec
call
push
aaa
jecxz
xchg
fimull
cmp
xor
jmp
stos
sahf
cmp
aad
cltd
popf
out
clc
sbb
push
and
push
adc
xor
es
push
pop
cvtdq2ps
jbe
mov
xor
inc
mov
lea
outsl
or
mov
or
ja
inc
adc
aad
push
dec
push
push
popa
xchg
mov
push
fcmovnb
rcrl
mov
loope
xor
andb
les
push
das
push
imul
jge
mov
repz
jns
mov
std
push
out
add
pop
jne
enter
enter
mov
call
test
adc
fbld
xchg
rcrl
mov
cld
jbe
aas
add
ljmp
call
and
jo
lods
jnp
xor
fnstenv
leave
inc
push
jo
pusha
bound
jp
pop
xchg
cmpsb
lret
and
insl
shll
mov
xor
and
mov
mov
test
notl
dec
cltd
jl
sbb
lahf
xchg
xchg
jle
and
pop
and
in
orl
test
mov
adc
add
int3
jecxz
dec
shlb
push
cltd
xchg
mov
sbb
jl
jnp
sub
loopne
jno
dec
jle
push
cmp
cmc
jge
and
das
and
leave
sbb
add
sub
jmp
shrl
lcall
insl
nop
popa
cli
fcompl
inc
push
add
and
sbb
loopne
adc
movq
subb
bound
jecxz
xchg
shll
aad
addr16
mov
xchg
push
cs
or
mov
rclb
stc
mov
lods
arpl
ljmp
push
inc
roll
fimuls
out
shll
mov
mov
gs
jbe
mov
cmp
and
cmp
enter
cmpsb
test
ret
pop
push
xor
mov
subb
add
push
adc
pop
fidivrs
xchg
in
in
push
adc
inc
test
movl
aaa
into
addl
ja
sub
push
cli
sarb
mov
fwait
ja
xor
xor
jb
sbb
mov
inc
ljmp
jne
mov
aas
movsb
fwait
cmp
sbb
dec
jecxz
jge
fadds
jno
push
sub
inc
inc
lret
repnz
sarb
sub
les
negl
lods
mov
repnz
bound
sbb
xor
pop
sub
mov
sbb
in
test
in
movsl
sub
add
and
cwtl
pop
dec
push
xor
fisttpl
xor
cmpsl
xchg
shufps
adc
clc
jae
sbb
out
jmp
jnp
pop
push
testl
sbb
mov
inc
dec
fistps
fnstenv
adc
cs
and
shl
cltd
xor
inc
push
testl
cmp
jl
cmp
pop
push
insl
mov
mov
aam
test
imul
mov
xor
pop
enter
push
lahf
repz
lahf
ljmp
jle
out
xchg
or
ss
mov
or
inc
xchg
pusha
int3
pushf
out
adc
cmp
mov
dec
int3
es
dec
xchg
or
mov
popf
iret
stos
push
lret
fs
movsl
imul
fstpl
push
sub
push
pop
inc
insb
test
fs
add
shll
mov
scas
mov
enter
loop
ss
push
das
cmp
popf
lea
xchg
popa
movb
in
dec
jbe
jb
mov
push
xchg
je
bound
xor
add
cld
lods
clc
sub
cltd
imul
adc
std
jecxz
mov
les
scas
movsl
add
xor
sbb
push
jno
orb
sbb
dec
sub
jl
je
stc
dec
movsl
dec
fsts
clc
fs
fldl
mov
xchg
imul
sub
fwait
and
mov
lock
pop
dec
mov
dec
dec
mov
std
stos
add
or
imul
std
out
in
or
xchg
sub
insb
cmc
pminsw
testb
jl
sahf
pop
fcmovnbe
sbb
fldcw
repnz
pop
loope
sbb
stc
mov
xchg
fxch
shll
jmp
xchg
inc
aam
sbbl
push
or
push
jg
cmp
jns
mov
rorl
mov
nop
jo
xchg
mov
lods
inc
dec
push
cmpsb
mov
push
xchg
add
loope
lods
add
mov
cli
pop
imul
mov
popa
ret
shrl
dec
fdiv
inc
mov
les
and
sub
aam
divl
mov
cmp
std
int3
push
push
adc
xor
data16
inc
lods
xor
and
pop
nop
shrl
jns
jl
jge
test
idivl
int3
das
shl
int
stos
sbbb
in
push
lcall
push
sbbl
movsl
adc
hlt
xchg
jmp
cs
es
xor
cmp
sub
fdivl
dec
lret
lea
imulb
xor
sub
jg
push
lret
push
mov
lret
or
bound
adcl
fwait
repnz
insb
mul
popf
push
jmp
pop
flds
cmp
dec
dec
iret
pop
scas
rolb
jae
rcrb
push
xchg
jnp
je
adc
jle
jb
movsl
shl
inc
or
mov
sbb
fsubp
jo
cmp
mov
or
ret
xlat
xchg
es
push
xchg
and
push
out
and
pop
ljmp
jg
pop
dec
daa
push
adc
pop
inc
cmp
addl
xchg
cmpsl
adc
sub
addr16
scas
sahf
testl
lret
adc
aaa
nop
pop
inc
jmp
les
xchg
adc
enter
sub
mul
add
xor
mov
out
xlat
notl
fmulp
clc
xchg
fmull
cmpb
dec
cmp
pop
jnp
mov
jge
inc
jg
sti
iret
dec
add
out
mov
push
hlt
inc
cmp
test
je
je
pop
mov
mov
mov
push
lret
push
lods
mov
inc
dec
push
jne
sub
es
dec
push
push
adc
repz
push
pop
stos
sbb
ss
pop
mov
xlat
push
inc
int
stc
push
add
mov
dec
push
les
lahf
movsb
mov
mov
enter
xor
cmp
lods
inc
outsl
fidivrl
fwait
jmp
add
pop
pop
ret
xchg
ret
loopne
hlt
movsb
and
adc
sahf
sub
mov
xor
test
jmp
and
fwait
lret
mov
sub
stos
loope
push
sarb
jb
ss
and
scas
xor
and
push
add
mov
insb
jo
cmp
cmpsl
nop
out
add
mov
and
inc
dec
xchg
mov
xor
pop
dec
mov
mov
arpl
mov
testb
ja
orb
jmp
fmul
jmp
into
xchg
sbb
mov
int3
out
imul
popf
in
sbb
mov
fs
mov
iret
jmp
cmp
jne
jnp
pop
les
jge
dec
xlat
clc
mov
pushl
out
dec
sbb
mov
mov
movsl
les
subl
pop
mov
mov
out
pop
push
inc
inc
mov
int
adc
ss
mov
in
dec
into
mov
xor
nop
and
aad
mov
push
imul
inc
xchg
jae
test
lock
test
xchg
cs
jge
in
push
addb
jns
cwtl
out
movsb
push
jl
mov
ljmp
fs
push
mov
inc
sub
sub
fs
imul
xor
pop
aam
adc
xchg
mov
cmp
into
xchg
and
pop
movsl
pop
xlat
and
sbb
mov
pop
push
mov
pop
iret
cmp
lock
jg
jp
shll
into
jb
imul
mov
pop
jne
mov
test
and
test
mov
xchg
lods
clc
nop
test
icebp
jnp
das
inc
testl
aam
lds
sub
push
cwtl
arpl
fidivrs
pop
mov
stos
fwait
mov
int
mov
mov
mov
in
sub
lahf
mov
inc
pop
add
mov
dec
out
push
inc
sbb
or
cmpsl
mov
push
push
and
mov
imul
inc
and
and
out
vunpcklpd
xor
jbe
outsb
fisubrs
jae
pop
and
jb
adc
imul
imul
push
sbb
loope
push
mov
dec
xchg
mov
mov
aam
cmp
xchg
fcompl
adc
iret
js
or
adcb
stos
into
daa
xor
out
or
shlb
sub
clc
ja
push
daa
imul
cmpsb
clc
pop
xchg
sub
add
clc
xchg
xchg
xor
sarl
test
add
mov
and
adc
mov
push
jp
int3
stos
icebp
fdivl
es
imul
out
lret
ret
cltd
jo
inc
rorl
in
dec
pop
insl
and
lods
pusha
fmuls
push
xchg
stos
pop
pop
jecxz
insb
jns
mov
daa
xor
push
lock
pop
test
mov
mov
mov
mov
loope
sub
mov
sub
imul
cltd
adc
js
mov
outsb
jp
xor
push
jle
jecxz
push
mov
jmp
scas
or
or
cmovge
loope
push
add
int
mov
sbb
nop
pop
stos
incb
ror
pop
jnp
or
push
pop
mov
jo
repz
mov
cli
iret
scas
xchg
cmp
pop
push
mov
fists
outsb
jecxz
repz
mov
mov
mov
sbb
insl
add
pop
dec
add
mov
scas
insl
cmova
pop
lods
mov
add
addr16
arpl
loop
aaa
test
sbbl
inc
ss
into
js
jle
stos
addr16
push
in
jg
call
scas
xchg
in
mov
mov
xor
in
rcll
adc
insb
fldl
iret
inc
xchg
push
out
cmp
pop
xor
xchg
xor
out
je
repz
add
cli
js
shlb
sbb
shlb
addb
or
test
mov
dec
cltd
fsubl
js
mov
pusha
inc
lcall
pop
xor
and
arpl
psrad
or
outsb
stos
xor
jp
scas
adc
mov
dec
or
cltd
inc
pushf
cmpsb
xchg
jp
les
lret
jl
mov
fdiv
scas
fidivs
stos
mov
lds
mov
mov
add
and
inc
fmull
sub
imul
xchg
aaa
mov
mov
sbb
cmpsl
inc
icebp
dec
pop
mov
clc
fmull
cmp
jl
xlat
jl
add
fldl
inc
aaa
popf
pop
lret
iret
hlt
sub
push
fcoml
add
sub
test
sbb
cmp
repnz
sar
cmp
mov
les
jnp
pop
jae
dec
std
bound
mov
rolb
nop
mov
dec
hlt
lock
std
dec
mov
imul
sbb
push
xchg
test
sbb
sahf
addr16
cmpl
jp
add
push
jp
lret
push
inc
push
sarl
ret
push
movsl
jne
mov
jl
sub
fldenv
xchg
sub
sub
add
cltd
in
mov
dec
stos
sbb
lahf
rclb
push
cmp
xchg
xor
mov
sbb
popa
lods
dec
subl
or
sahf
in
popf
dec
sbb
cmp
cmp
sub
lret
push
insb
mov
pop
lock
adc
push
mov
insl
xor
mov
pop
xchg
in
bound
les
mov
add
xchg
push
int
fstl
cmpsb
and
sbb
ss
mov
movsb
or
mov
sub
sbb
jle
lret
xchg
mov
pop
rcrl
pusha
das
out
pop
dec
cmp
test
jge
or
add
sbb
outsl
mov
adc
mov
sub
sbb
xchg
add
mov
inc
ret
jmp
inc
push
sarl
mov
fucomi
mov
adc
imul
push
and
test
and
lea
mov
test
inc
mov
adc
aaa
cmc
ret
add
add
mov
lea
les
mov
fbld
mov
icebp
dec
jecxz
jns
add
xchg
cltd
test
movsl
js
test
dec
and
pop
ss
cli
or
add
mov
enter
ret
inc
incb
push
pop
stos
lods
mov
out
pop
clc
push
mov
mov
fwait
xor
and
insl
or
movsl
and
fistl
inc
and
aam
aad
mov
xor
rclb
jl
pop
pop
pop
ret
sub
call
inc
push
ret
addb
or
pop
lea
mov
std
icebp
cmp
cld
lods
mov
adc
xor
negb
lcall
lret
sbb
add
cmp
mov
movsb
pop
fildll
xchg
lods
cmp
mov
sbb
fidivrs
scas
fwait
cmp
mov
push
test
add
xlat
mov
aaa
test
jb
test
xchg
faddl
mov
cs
pop
cwtl
inc
jno
or
fisttps
pop
test
pop
push
ror
sahf
lcall
sub
add
jns
loope
mov
sub
pop
push
xchg
inc
enter
ret
push
outsl
addl
sar
fstl
andb
mov
arpl
cs
or
stos
xor
dec
and
or
mov
ja
mov
xor
loopne
daa
mov
jp
xor
fcom
inc
inc
cli
data16
and
dec
fwait
stc
cmpsb
je
jmp
xor
inc
test
dec
nop
jbe
and
divl
cwtl
dec
add
shll
shrl
lret
sti
cmpl
xlat
imul
ficomps
sbb
mov
cmp
xchg
dec
push
mov
cwtl
jo
push
push
dec
and
mov
mov
pop
sbb
sub
cld
mov
lea
cmpsl
sub
xor
adc
fdivrs
imul
lahf
jo
sbb
jle
push
push
repnz
insl
adc
adc
adc
aam
mov
mov
hlt
mov
cmp
popf
xchg
push
pop
lcall
xor
leave
mov
lahf
out
sbb
into
add
adc
ret
xchg
stos
mov
mov
rorl
sbbb
and
andl
in
jg
push
lahf
adc
test
push
adc
and
cmpsb
pusha
ss
and
jl
imul
icebp
xor
test
cmp
or
or
sti
mov
movsb
jecxz
pop
mov
push
jmp
sbb
outsb
aam
mov
inc
push
push
popa
xor
add
jne
push
std
nop
jns
mov
add
dec
cli
jmp
jno
sti
adcb
loopne
test
repz
sbb
pop
or
cmp
repz
jge
and
int3
fisttps
jecxz
gs
imull
scas
xchg
and
test
add
in
mov
xchg
inc
pop
and
inc
mov
cmp
push
pop
xor
mov
daa
jo
popf
pop
inc
out
push
inc
dec
mov
mov
cld
shr
ja
sbb
cmp
call
test
outsl
xchg
stc
insb
outsl
dec
cmp
fsubs
mov
jb
insb
xor
daa
fidivrl
arpl
xchg
aad
loopne
aaa
push
call
loopne
mov
lcall
pop
jmp
incb
and
hlt
push
data16
mov
and
dec
div
jo
clc
xor
repnz
sub
cmp
movsb
and
adc
stc
jnp
pop
jae
inc
cltd
jno
clc
mov
pushf
clc
out
testl
mov
jo
mov
lret
inc
in
inc
push
push
add
leave
xor
outsb
js
pop
and
mov
subb
out
lahf
sbb
or
or
dec
repnz
or
icebp
dec
fdivs
out
pusha
mov
aas
lcall
cmp
sbb
and
xor
pushf
out
xlat
mov
loope
pop
int
mov
adc
addr16
jae
mov
ljmp
dec
add
and
ret
inc
lds
call
jne
dec
lods
add
push
xchg
mov
fdivl
dec
mov
movl
js
jge
mov
pusha
xchg
push
add
aas
pop
push
adc
or
aad
insb
aam
jle
dec
nop
add
pop
outsb
stos
mov
dec
dec
lret
inc
icebp
lcall
pop
mov
xchg
xchg
and
iret
and
jle
add
outsb
and
repnz
cmp
inc
jp
lock
shr
dec
jnp
mulb
lret
jae
out
lods
sbb
sbb
sbb
inc
in
sub
insb
es
push
mov
xlat
mov
xor
add
std
inc
mov
imul
mov
dec
cmp
ret
pop
sbb
sub
push
mov
mov
stc
fimull
hlt
pusha
adc
adc
arpl
cld
xchg
gs
lds
push
adc
push
fisttps
or
adc
aaa
jae
and
push
sub
or
sbb
andl
cs
test
xor
adc
xchg
and
xorb
ja
stos
out
cmp
cmp
push
pop
pop
mov
pop
mov
push
insb
mov
les
mov
cmpsl
xlat
add
daa
push
ja
or
sub
sbb
sub
sbb
das
add
ret
aad
shr
jmp
out
out
outsl
jmp
mov
cld
lods
cwtl
lods
dec
out
ficompl
lock
fs
inc
pop
xchg
rolb
jno
cmp
xchg
push
mov
daa
cli
lret
sbb
hlt
mov
sahf
sub
push
inc
add
outsb
aad
imul
out
jae
addr16
fnstcw
mov
ljmp
fdivrs
fcomps
lods
jmp
lods
lret
icebp
mov
xor
mov
out
clc
out
aaa
sbb
push
jae
xchg
jge
xor
test
imul
lret
int
aad
fstps
cmp
push
stos
cwtl
adc
gs
sub
sub
nop
add
xor
lock
xchg
adc
fcmovb
add
jno
push
dec
dec
lcall
mov
push
data16
jle
or
cmp
add
cwtl
js
fucom
sbb
out
or
or
cld
push
rolb
pop
into
mov
cmp
sahf
pushf
inc
sbb
jae
jbe
and
jge
sbb
mov
mov
mov
or
inc
inc
ljmp
insl
mov
faddl
cltd
lahf
orl
xchg
push
push
enter
enter
adc
cmp
sub
fsubrl
jns
incb
mov
test
fiadds
sub
mov
ret
repnz
pop
pop
xor
lahf
stc
mov
lods
and
not
adc
mov
int
leave
inc
jb
insl
adc
push
mov
ficomps
outsb
jmp
into
pop
pop
mov
int3
movl
sub
jp
cwtl
test
pop
lcall
imulb
insb
icebp
subl
cmpsb
inc
es
pop
add
out
adc
fwait
mov
xor
adc
or
adc
aas
sub
js
cmp
loope
fsubrs
call
dec
stos
xchg
mov
ret
pop
int3
dec
adc
cli
adc
jo
es
push
clc
rolb
fistpl
das
dec
mov
jg
mov
cmp
cmp
pop
cmp
push
add
jno
bound
pop
mov
mov
icebp
sti
jnp
jno
mov
in
mov
add
sarb
mov
rcll
dec
ja
lods
adc
xchg
cld
push
icebp
push
mov
rcr
dec
scas
fldt
fnstsw
dec
and
mov
adc
fbstp
or
ljmp
cltd
mov
aam
adc
inc
pop
nop
scas
clc
mov
xchg
ja
dec
lret
fcompl
stc
sub
push
xor
ret
push
mov
loopne
insl
inc
fsubrl
mov
leave
aad
aaa
int3
jae
jecxz
out
jns
enter
inc
ror
sbb
pop
mov
jle
cwtl
ret
sbb
sub
inc
daa
cli
insl
inc
rclb
dec
ficoms
sub
sub
cmp
hlt
mov
xor
pop
mov
rolb
rolb
test
ljmp
cmpsb
sbb
insl
cld
cmc
imul
inc
out
hlt
sti
add
cmpsb
push
push
mov
mov
fdivs
pop
mov
in
dec
mov
xor
nop
sbb
lret
adc
sub
xchg
fwait
push
mov
jge
dec
ret
lret
fstpt
leave
ret
mov
ds
out
mov
imul
adc
out
outsb
jo
scas
lock
jg
imul
sub
icebp
inc
sub
out
in
cmp
adcl
xchg
std
dec
pop
mov
repz
shlb
mov
push
jae
push
xlat
push
dec
or
or
ja
sbb
gs
mov
testl
mov
aas
mov
xchg
cmp
leave
mov
adc
and
cmp
div
push
sbb
shl
inc
adc
or
cmpl
inc
hlt
popf
or
pop
xor
sub
jle
inc
mov
add
pop
dec
inc
in
stc
sub
shrb
daa
repz
subb
push
dec
add
ror
iret
push
sarb
leave
cwtl
cmpsb
test
mull
mov
aas
test
adc
lods
and
or
pop
test
adc
inc
push
push
push
xchg
add
popa
and
mov
mov
mov
lcall
jns
fisubrl
test
xor
bound
repnz
cld
cmp
mov
aas
or
push
lahf
ds
fcmovnu
movsb
lods
pushf
inc
fisubs
mov
popa
mov
dec
call
mov
xchg
enter
scas
xchg
and
pushf
outsb
push
xchg
mov
scas
test
pop
xchg
push
push
sub
xlat
mov
arpl
or
ljmp
xchg
out
in
dec
rcrl
int
popf
cmp
ficoms
inc
enter
mov
in
xchg
pop
ret
filds
lock
push
mov
push
lret
fildl
es
adc
cmc
jno
mov
dec
rcrl
pop
adc
jno
mov
popa
pop
cmp
xor
enter
testb
jns
or
cmp
shrb
pop
cli
dec
daa
lcall
or
sbb
je
shl
insl
mull
and
jecxz
inc
jae
gs
insl
inc
fldenv
jle
xchg
adc
aas
xorb
shlb
fisubrl
sub
sbb
and
mov
mov
push
insl
mov
sti
nop
scas
pop
lods
adc
out
add
das
pop
jp
push
adc
xchg
push
fistpll
add
lods
dec
cmpsb
mov
mov
sub
add
cld
fs
pop
jnp
mov
popf
xlat
rclb
inc
pop
push
sub
pop
pop
mov
shl
xchg
enter
mov
mov
jmp
popa
pop
cli
pop
jbe
adc
adc
rorb
fadds
mov
push
orb
arpl
jbe
mov
add
lahf
pop
dec
in
lahf
iret
subl
mov
or
mov
cld
out
pop
out
mov
mov
add
lahf
bound
mov
jne
jmp
cmpl
xchg
cltd
and
jmp
into
xchg
cmp
nop
xchg
lcall
lahf
fwait
js
nopl
scas
dec
xor
inc
mov
mov
clc
hlt
pop
inc
pop
xlat
jmp
sbb
into
jp
sbb
fcomi
nop
pop
cmp
out
icebp
cmp
cld
cmp
add
into
aam
mov
lret
mov
push
pusha
push
dec
rcl
mov
dec
addr16
mov
scas
mov
jo
mov
push
inc
sbb
stos
cs
stc
xor
or
jne
sub
cli
repz
ds
jl
movl
lds
mov
mov
adc
mov
mov
mov
fcoms
add
pop
inc
lea
xchg
jnp
or
pop
xor
clc
jge
ljmp
imul
adc
in
outsl
or
cmp
inc
and
cmpsb
daa
dec
aas
call
lods
or
pop
sub
push
cmpsl
adc
daa
jge
enter
fwait
push
mov
sbb
out
repnz
push
pop
test
stos
pop
and
aaa
test
mov
cwtl
je
lcall
ret
jae
test
cltd
mov
shrl
test
push
mov
sbb
mov
push
lods
xlat
popf
popa
push
jge
aas
testb
movb
loopne
jge
cmp
mov
lock
cwtl
icebp
mov
push
inc
push
icebp
lcall
ret
cld
and
fsubrs
popa
imul
repnz
loopne
xchg
je
aaa
out
fildl
or
cmpsl
mov
push
stos
mov
shlb
cwtl
shl
jmp
add
xor
jge
jg
mov
sarl
fsubrl
shrb
arpl
jge
adc
xchg
cmpsb
push
mov
aad
xchg
in
mov
jb
cmp
sti
fucom
out
fs
repz
daa
jl
add
add
lds
jmp
les
loope
jecxz
dec
dec
pop
xor
cwtl
jle
mov
jne
in
bound
pop
imul
out
std
cmp
fldenv
inc
push
daa
scas
bswap
stos
lea
sub
in
rorl
es
xor
adc
cs
push
addr16
dec
std
out
leave
cmp
pop
in
pop
mov
xchg
mov
push
cmp
inc
aaa
mov
and
push
xchg
shl
dec
arpl
dec
mov
xlat
ljmp
mov
cltd
and
push
mov
rcll
mov
mov
stc
inc
pusha
mov
xchg
cmpsb
lds
fbstp
lahf
jmp
call
cli
mov
scas
inc
jmp
in
into
sbb
adc
or
sbb
add
stos
in
push
andb
stos
sub
adc
lock
addr16
shl
mov
mov
push
aad
loop
xor
inc
ret
jo
fisubs
push
xchg
bound
mov
repz
out
lods
jg
cmp
in
xchg
pop
jbe
or
std
into
cli
ja
jecxz
mov
js
sub
into
cmp
and
xchg
jne
jl
or
jno
mov
push
push
push
pop
push
pop
xchg
mov
xor
mov
dec
pop
out
dec
push
in
gs
sbb
or
push
mov
sbb
xchg
xor
imul
popa
and
aad
mov
outsb
fcomip
add
fidivrs
or
jns
dec
ficoml
out
push
in
cwtl
inc
mov
mulb
push
lods
xor
and
setae
mov
jp
xor
sti
or
push
ret
jns
pop
jae
mov
fdivrl
mov
push
and
leave
inc
stos
xchg
mov
push
jne
cld
aaa
sbb
pop
idivl
in
inc
jp
ja
xchg
sbb
xchg
data16
pop
mov
and
nop
mov
dec
stos
jae
xchg
cmp
test
cmp
sbb
enter
int3
in
pop
leave
dec
test
icebp
pop
or
dec
dec
mov
daa
aaa
int
enter
imul
je
pop
or
mov
aad
sbb
push
dec
or
lahf
jge
dec
mov
add
sub
lock
xor
fistl
push
cmp
jno
outsl
popa
jae
cld
rclb
lods
mov
mulb
inc
mov
pop
sbb
roll
add
sub
sbb
aad
sbb
ljmp
clc
aad
orl
or
xlat
popf
into
call
bound
sbb
ja
lahf
lret
sub
dec
stos
pop
fs
mov
adc
jle
sub
adc
jecxz
mov
in
sbb
mov
sar
xor
xor
out
loopne
in
mov
in
add
xchg
lock
sbb
jne
adc
in
and
out
jne
out
fs
xchg
outsb
cmpsb
ret
cli
and
xor
inc
in
xchg
aaa
cmp
nop
mov
mov
jge
mov
push
repz
outsl
mov
xchg
jle
xor
cmc
xchg
sbb
sub
mov
pusha
inc
xor
call
push
mov
fdivrl
divb
lock
fs
push
push
sbb
lds
nop
push
jae
ljmp
add
add
repnz
test
or
cmpsb
mov
sahf
call
std
fdivrl
adc
imul
adc
fucomi
mulb
pop
mov
rolb
fisttps
push
insl
je
in
jg
push
sbb
nop
sbb
push
gs
lods
je
xchg
lcall
js
dec
rorl
sbb
jb
in
sub
aam
xchg
fnstsw
int
sbb
xor
scas
in
sbbl
push
jae
lret
pop
sub
std
les
stos
fs
push
fsub
sub
dec
jae
cmpl
popf
dec
add
insl
inc
push
lds
mov
sub
push
pusha
fcoms
xchg
cmpsl
jg
insb
sbb
dec
lret
jle
fbld
test
mov
dec
mov
xchg
adcb
mov
jbe
icebp
cmp
mov
dec
lret
loope
int3
lahf
mov
jnp
jnp
mov
and
cli
mov
xor
inc
sbb
out
cmc
or
cmpsb
out
test
in
xor
adc
int
test
mov
and
ret
adc
adc
cmp
xchg
xor
mov
das
out
cmp
sub
or
xor
jo
push
mov
gs
mov
fidivrs
add
outsb
fimull
pusha
push
sbb
repz
push
cmp
push
xchg
inc
pop
inc
jns
push
or
lret
sbb
arpl
pop
inc
dec
lea
add
adc
popl
out
pop
push
in
xor
cmp
push
mov
lret
fildl
shrl
imul
leave
je
loope
pop
in
xchg
testb
stos
sub
inc
and
sbb
dec
leave
lret
jg
dec
jns
cmp
jg
sbb
jmp
in
pop
out
sbb
dec
rcrb
fs
pushf
pop
stos
rcl
cltd
ret
pop
dec
mov
push
mov
sbb
cmpsl
mov
clc
shrb
fwait
jbe
jle
cmp
jne
dec
jo
sbb
or
jl
mov
loop
inc
js
mov
inc
enter
dec
cmpsb
add
gs
repz
xchg
xor
cmp
test
add
add
cli
add
movsb
pop
mov
mov
dec
xchg
movsb
jno
loope
pop
adc
sub
add
fbstp
neg
mov
mov
and
orl
jle
sub
stos
or
movsb
lahf
jle
mov
xchg
inc
loope
mov
int3
into
aaa
scas
cmp
adc
cmp
fstpl
fwait
cmp
sbb
rol
sbb
mov
mov
jb
pop
jno
mov
cmp
jnp
fs
jb
testl
ds
pop
addb
xchg
popa
xchg
and
sbb
fwait
aas
fcomip
mov
mull
test
mov
out
add
mov
mov
mov
js
dec
inc
mov
or
jo
xchg
pop
or
dec
inc
push
movsl
jno
jnp
pop
and
cmp
aam
sti
in
incl
cltd
stos
push
push
dec
mov
cmp
ss
lret
movsl
mov
mov
pop
mov
mov
outsl
clc
popa
call
and
sub
push
daa
into
loope
insb
sub
lret
dec
enter
mov
scas
pop
push
ss
cmpsb
movsb
adc
jne
push
insl
ss
and
or
sbb
sbb
ja
into
jmp
icebp
inc
sub
pusha
mov
lret
xchg
sub
sub
inc
inc
jns
hlt
sbb
mov
jmp
mov
stos
push
jg
es
adc
bound
pop
cmpsl
adc
inc
iret
cmc
mov
jge
mov
aam
movsb
inc
xchg
call
mov
cmpsl
sar
adc
pop
div
dec
rolb
add
and
repz
pop
fiadds
xor
add
sbb
shl
jmp
addr16
int
iret
cmp
out
ss
pop
adc
cmpb
mull
stc
out
cmp
xchg
out
in
sub
xor
push
or
sub
cwtl
in
scas
jbe
dec
imul
xor
fwait
jnp
cli
xchg
xchg
cltd
or
mov
dec
dec
stc
push
outsl
inc
sbb
push
push
es
lcall
pushf
mov
jno
fstpt
cmpsl
into
out
inc
outsl
fsts
lds
pop
pop
jmp
mov
lods
mov
imul
movsl
test
enter
stos
aas
inc
popa
dec
loopne
push
testb
ds
push
bnd
scas
mov
add
out
std
lods
mov
lods
pop
xor
push
sti
inc
daa
fstps
lret
enter
cld
sbb
add
sub
xchg
jp
mov
mov
scas
ss
insl
xchg
aad
dec
sub
mov
sub
add
mov
jg
pop
fiadds
imul
inc
jl
mov
lds
fidivrl
addr16
xor
and
cmp
push
ja
cmp
lret
dec
outsb
pop
push
orb
mov
andl
mov
rol
dec
ret
jbe,pt
fisttpll
btc
or
fcomps
int3
testb
jno
push
jo
inc
sub
cmpsl
lock
repnz
pop
in
inc
push
xrelease
jb
aaa
clc
in
fwait
out
xchg
xor
mov
jae
lods
fwait
jmp
sbb
inc
sub
bound
out
dec
cmpsl
test
pop
cmc
rcrl
adc
inc
or
std
loop
xlat
divl
movsb
or
push
mov
outsb
sahf
fsub
repnz
mov
dec
hlt
xchg
mov
scas
test
js
scas
jecxz
aas
jnp
ljmp
sahf
pop
push
mov
gs
mov
jle
xor
stos
pop
push
cs
jmp
mov
fcompl
fs
dec
cmp
cltd
outsl
stos
test
rcl
cwtl
aam
icebp
xchg
pushf
or
cld
jecxz
or
fldcw
lock
mov
sbb
pop
mov
jp
mov
lret
popa
repnz
and
cwtl
jecxz
adc
jns
cmovs
test
pop
into
rcl
inc
pop
stos
adc
shlb
xor
jne
test
mov
mov
inc
leave
pop
sbb
pop
jo
mov
xlat
clc
xchg
cmp
xlat
and
push
adc
sahf
jmp
fstpt
ss
sbb
mov
jbe
dec
cmp
push
pusha
push
jo
jae
ret
xchg
pop
push
sti
xor
mov
fcom
pop
insb
aam
iret
insb
jne
xor
fs
icebp
lcall
movl
ss
das
push
and
aaa
hlt
xchg
push
inc
mov
mov
sub
jp
dec
arpl
testl
pushf
fcmovnu
ss
pop
add
aaa
inc
popl
loope
adc
xchg
insb
int
or
mov
nop
cmp
ljmp
push
shll
mov
xor
into
ds
outsb
inc
arpl
jne
fwait
icebp
jl
sbb
jmp
lock
mov
pop
repnz
ss
sub
test
stc
gs
ljmp
fstpl
mov
jb
int3
mov
mov
jmp
lods
or
mov
daa
scas
inc
test
pop
jo
gs
loop
test
adc
test
cltd
flds
popf
push
test
inc
cmc
add
shl
aas
cld
push
ds
xchg
cmpsl
mov
psubd
sub
dec
mov
insl
cmp
push
in
mov
adc
aad
ds
push
jl
sbb
es
xor
out
pop
sub
jl
out
mulb
mov
loopne
mov
xor
push
push
pop
xchg
inc
mov
or
cmp
lahf
in
jl
dec
pop
cmpl
es
jg
mov
cmp
stc
in
xchg
pop
loope
sbb
adc
leave
adc
cmpl
cmp
jnp
xor
mov
xchg
aam
lret
pop
jp
stos
push
or
sub
arpl
jae
mov
cmpsb
mov
mov
bnd
lret
inc
mov
sub
sub
cmp
pop
xchg
stc
pop
or
add
mov
mov
test
loop
pop
mov
mov
xor
dec
mov
lea
and
notl
test
inc
call
insb
fsubrl
icebp
inc
pop
add
aad
movsl
scas
push
mov
leave
loopne
push
sahf
xchg
jnp
and
aam
mov
stos
xchg
icebp
or
insb
push
jb
jg
in
fcoml
data16
jmp
mov
test
pop
xor
popa
sbb
mov
dec
das
in
sahf
xor
shr
das
lock
inc
add
push
fnstenv
mov
adc
mov
add
xor
cmpsl
mov
es
dec
ficoml
lahf
sahf
lahf
outsl
dec
cmp
arpl
outsl
pop
pop
jmp
adc
cmp
xchg
jns
dec
xlat
cmp
push
test
xor
sbb
enter
jmp
pop
push
enter
insl
fsubp
inc
mov
cmp
dec
jnp
adc
dec
das
add
xchg
scas
in
sti
in
outsb
iret
fwait
cs
sbb
cmp
sub
imulb
pop
in
sahf
pop
mov
bound
jo
dec
rorl
adc
cltd
addr16
popf
fiaddl
je
adc
decb
sub
adc
mov
mov
or
int
js
add
inc
cmpsb
leave
subb
inc
jo
dec
cmp
icebp
lcall
cmpb
lods
cmp
jle
cmp
jnp
push
inc
and
pop
pop
arpl
jo
pop
xor
mov
add
jne
mov
fistl
jl
dec
iret
repnz
push
adc
sbb
xor
movsb
jne
jecxz
mov
int3
mov
inc
insl
cs
xchg
leave
lods
push
fistpll
jbe
cmp
cmp
sub
rcr
push
rolb
imul
jo
mov
dec
dec
popa
ss
lret
mov
jg
pop
dec
mov
imul
fimull
test
imul
push
xchg
cltd
xchg
test
xlat
and
sub
fdivs
inc
mov
mov
xlat
pop
outsl
rorb
dec
mov
jns
jne
and
gs
mov
mov
add
loope
hlt
push
rcrl
mov
and
add
and
imul
jnp
ret
lock
push
pop
sub
fimuls
in
es
repnz
xchg
xchg
movsl
mov
mov
lahf
mov
lahf
push
mov
inc
sub
in
jno
cltd
push
xchg
enter
gs
mov
out
inc
into
dec
and
mov
jnp
out
push
adc
aas
test
call
and
mov
bnd
xor
jge
pop
mov
sub
cmp
xor
pop
sub
xchg
fldt
ja
into
cmp
clc
lret
aaa
ret
dec
sbb
add
fs
pop
dec
aaa
movsb
mov
scas
imul
mov
fimull
sub
add
inc
sub
cmp
ret
sub
mov
xchg
cmp
xchg
lret
fidivs
push
inc
jl
ja
popf
adc
std
sub
push
or
mov
sbb
loopne
pop
push
inc
jp
sub
mov
cmp
xor
lahf
dec
ja
jmp
add
pop
jae
push
sbb
mull
sbb
jb
inc
je
or
xchg
dec
inc
push
pop
les
out
xchg
push
lret
fiaddl
in
and
pop
lock
xor
pop
pop
adc
fistpll
xor
clc
jecxz
jmp
nop
bound
test
mov
cmp
jmp
idivl
xchg
subl
cwtl
cmpsb
sbb
inc
or
mov
lea
shlb
xor
sub
je
mov
push
and
pop
pop
or
add
jmp
test
out
pop
mov
call
sbb
mov
adc
or
push
cltd
iret
adc
cmpsl
mov
adc
repnz
dec
aaa
adc
loop
adc
jno
or
and
and
xor
adc
inc
pop
fistps
stc
mov
jge,pn
stc
push
xchg
inc
mov
mov
jb
mov
sbb
xchg
mov
cmp
jb
repz
adc
scas
lods
pop
mov
lods
mov
mov
xor
or
xchg
fwait
adc
or
bound
pop
adc
call
mov
add
enter
cmp
fstl
push
jb
xchg
mov
hlt
test
jl
dec
scas
sbb
cmp
arpl
daa
cmp
loope
xchg
and
arpl
dec
mov
iret
movsl
popa
in
repz
mulb
mov
mov
iret
xchg
jmp
pop
cmp
xchg
mov
push
test
sub
mov
adc
mov
jl
dec
jns
stc
and
orl
repz
inc
iret
inc
outsb
fcmovnu
mov
jb
cmp
bound
pop
insl
mov
test
add
jmp
pop
and
mov
sbb
and
shl
ljmp
mov
sub
nop
cmp
in
hlt
push
cmp
imulb
mov
inc
mov
stos
nop
popf
cmp
cmp
out
out
cwtl
stos
or
stos
outsl
nop
and
dec
mov
testb
cltd
nop
int
insl
pop
xor
fisttpl
xchg
mov
into
mov
ss
inc
pusha
test
arpl
and
push
loope
mov
fsubrs
mov
add
xchg
jnp
fbld
cmp
xor
stos
lret
out
mov
adc
xchg
cmp
and
xlat
mov
mov
cmp
jns
ret
outsb
repz
xchg
mov
das
xor
loop
mov
pop
lock
cmpb
fmul
jnp
add
and
pop
xchg
xchg
movsl
aaa
lds
call
jg,pt
lock
xchg
rol
sarl
adc
clc
out
imul
xchg
stos
pushf
test
lret
mov
xor
scas
add
js
pop
adc
push
inc
xchg
out
or
test
push
fidivs
jmp
adc
cld
clc
lock
add
stos
in
cmp
and
in
shrb
mov
push
ret
jge
add
in
push
sub
sbb
mov
ret
push
mov
in
pop
into
mov
mov
mov
fistpll
pushf
jnp
xchg
pop
adc
in
push
gs
jecxz
adc
jb
pop
dec
pop
rsqrtps
mov
jns
inc
push
push
xchg
add
jmp
mov
frstor
inc
xchg
sti
loop
test
dec
inc
push
or
mov
js
into
pop
lea
xchg
push
popa
loopne
jle
nop
insl
inc
loop
xor
and
mov
jecxz
mov
and
sub
test
push
sub
aas
jg
int
clc
push
dec
es
jo
js
popa
inc
ret
mov
cmp
sbb
cmc
in
jo
pop
push
mov
cmc
adc
inc
cmc
into
dec
inc
stos
lock
pop
idivl
xchg
xchg
ret
jg
push
push
fidivl
mov
mov
mulb
mov
inc
sub
mov
notb
lods
mov
ja
jb
xchg
outsb
dec
and
jecxz
add
mov
dec
adc
imul
sti
mov
ja
mov
into
cmp
inc
lret
mov
xchg
into
push
push
pop
jge
sarl
fwait
add
and
jle
push
xorl
pop
sbb
ljmp
test
test
aam
jge
out
js
repnz
imul
and
cmp
shll
cmp
xchg
ja
cmp
ss
outsb
push
xor
out
push
lea
add
repz
ljmp
aad
pop
jo
adc
iret
mov
aad
icebp
daa
add
fsubrp
push
fldl
pop
lock
and
fnstsw
cmp
cmp
mov
pop
aam
sub
pop
mov
pop
stc
xlat
mov
sbb
pop
cmp
jl
jge
cmp
aaa
push
into
stos
das
cld
stos
mov
mov
mov
xchg
mov
int3
adc
mov
ficoml
in
push
mov
pop
xor
jno
inc
mov
in
pop
jne
or
push
mov
outsl
adc
out
push
mov
pop
mov
sub
jecxz
lods
fwait
mov
pop
hlt
arpl
adc
push
jp
dec
jge
test
test
ljmp
daa
or
jg
iret
dec
jno
cwtl
xchg
enter
xchg
lods
cld
xorl
sub
mov
fistpl
mov
xchg
test
fildl
das
adc
adc
mov
pop
jbe
lock
push
jg
jg
adc
xor
lods
jg
mov
rcrb
mov
inc
das
outsl
mov
sub
push
divb
aad
ficoms
repz
dec
leave
enter
inc
adc
pop
pop
lods
leave
xor
lahf
xchg
fnstsw
cmc
lods
pusha
push
out
lods
sbbb
mov
push
cmp
test
imul
sahf
cmp
sahf
xor
mov
cmp
cmp
push
mov
mov
fmull
in
mov
jge
jne
mov
push
insb
and
push
mov
call
je
fwait
sbb
stc
inc
mov
dec
arpl
negl
aam
loope
xor
pop
fsts
bound
pushf
pusha
dec
adc
pop
add
cs
test
jnp
jmp
and
or
in
sub
hlt
cwtl
pusha
inc
lods
add
push
dec
jnp
xchg
lea
adc
ds
push
mov
mov
add
add
imul
mov
cltd
sbb
sahf
jo
sahf
xchg
dec
pop
jbe
jmp
test
xor
jne
test
data16
call
lret
adc
ficoml
mov
icebp
aad
mov
test
mov
aam
fidivrl
pop
mov
les
push
xor
les
inc
push
int3
mov
in
arpl
pop
jno
aam
mov
subb
mov
cld
jp
lds
lret
cmpb
push
xchg
and
pop
and
shrl
out
or
pop
inc
sub
lock
neg
data16
ja
adc
jp
sub
push
or
mov
les
out
pop
aaa
aam
and
nop
pop
sbb
lahf
adc
int3
in
lds
les
gs
clc
lock
addr16
ja
sbb
pop
test
out
js
pop
push
lahf
cmp
cmp
jnp
aaa
cmp
pusha
jle
and
and
mov
shr
cltd
out
ret
js
inc
xor
les
rorl
pop
mov
cmp
cmp
sub
loop
daa
jg
cwtl
jge
test
ds
mov
lahf
fistpll
rorl
dec
add
xchg
inc
ret
pop
push
add
mov
sbb
cmp
in
lahf
loopne
inc
aam
sbb
jle
ja
inc
jnp
dec
outsb
jg
daa
cmp
movl
xor
sub
pop
aam
ja
fwait
sub
or
push
or
test
xor
arpl
lock
aas
mov
pop
out
mov
pop
pushf
roll
mov
xorb
insb
and
das
xor
mov
cmpsb
iret
aaa
aad
out
pop
mov
inc
cmpsb
ds
movl
adc
add
lahf
jle
sub
mov
cltd
xchg
jmp
cmpsb
add
pop
xchg
or
xor
xchg
add
stc
cmp
decl
mov
pop
mov
cmp
ja
outsl
sub
push
inc
mov
cltd
cmp
imul
xchg
fs
ret
daa
or
push
negb
and
pushf
jge
iret
xchg
and
xorl
sarb
inc
push
push
into
stos
mov
rol
rcl
sub
sti
jae
mov
stos
call
mov
lret
ds
fisttps
pop
sbb
popf
pushf
sub
pop
iret
roll
hlt
outsl
fldcw
jp
in
loopne
fistl
or
jecxz
call
aaa
fmull
mov
or
push
jg
test
popf
out
inc
jbe
aam
aas
sub
pop
test
in
arpl
out
or
cmp
push
repz
ss
cmpsl
mov
push
mov
push
mov
jnp
push
jle
mov
and
movsl
fdiv
push
jp
mov
and
inc
pop
push
mov
xchg
cwtl
icebp
loopne
xor
cmc
mov
loopne
dec
mov
sbb
pop
mov
xorl
xchg
pop
test
cmp
add
or
jbe
into
loop
les
lock
jns
mov
jo
mov
add
dec
dec
pop
mov
sbb
jl
push
lea
shl
test
inc
leave
cmp
bound
jle
hlt
test
dec
outsl
mov
in
lahf
dec
mov
lahf
mov
mov
cmp
mov
leave
push
jl
cmpsl
add
push
dec
in
add
push
sub
and
push
jl
push
mov
push
loope
pop
dec
pop
aas
nop
test
lods
adc
jecxz
aad
adc
xor
lahf
xor
pop
cmp
scas
cmc
insl
sahf
push
mov
in
sbb
dec
insb
clc
xor
and
ljmp
repnz
es
pop
mov
cmc
xor
push
inc
aaa
mov
lret
es
mov
adc
addr16
ss
adc
and
xchg
sbb
push
push
jge
test
xor
shrl
pushf
lods
fisubrs
arpl
in
inc
fisttps
mov
pop
push
std
sub
movsl
and
rol
lea
shlb
adc
sbb
outsb
mov
cmpsl
mov
lock
jecxz
push
stos
ljmp
or
movsl
cmpsl
mov
dec
pop
enter
popa
repz
xor
in
xchg
imul
loopne
std
sbb
dec
pop
enter
add
adc
ss
scas
addr16
imul
jae
inc
dec
orl
cmp
decb
lcall
jmp
mov
xchg
xchg
jnp
and
add
mov
jp
mov
cmp
dec
push
jge
adc
mov
adc
pop
pop
jo
fstl
ds
leave
sub
mov
rorl
es
mov
test
addb
xchg
in
jecxz
add
subl
pop
insl
push
movsb
fldcw
lcall
push
sbb
mov
push
ljmp
jmp
cs
sbb
jp
xor
cltd
cmp
lahf
sbb
dec
in
inc
sbb
jno
dec
mov
or
jg
dec
jmp
push
mov
inc
js
or
sub
rclb
sbb
dec
xchg
mov
dec
dec
dec
jno
outsb
or
in
es
insl
enter
pop
cvtps2pd
jno
xor
shll
mov
gs
stos
cmp
xor
nop
popf
imul
jmp
push
dec
aas
dec
pop
mov
subb
and
cmp
inc
push
inc
in
jecxz
std
ljmp
lods
or
jmp
aas
xchg
inc
cs
cmc
mov
popa
cmp
and
inc
std
lds
mov
in
cmp
call
pop
in
lds
mov
xor
push
cwtl
adc
nop
sub
dec
ja
mov
xor
dec
lods
jno
mov
int3
push
cmp
jnp
pop
das
jecxz
inc
mov
mov
push
or
lods
cltd
jne
pop
adc
or
loop
jmp
jp
cmp
and
popa
sbb
mov
jns
inc
pusha
sbb
js
aaa
bnd
fiadds
dec
sbb
jb
push
scas
jmp
enter
mov
mov
inc
push
movsl
imul
push
pop
push
mov
xchg
outsb
xor
or
xchg
jge
cmpsb
add
in
stos
adc
imul
clc
and
jle
adc
push
imul
jmp
inc
or
and
hlt
push
scas
fwait
pop
andb
mov
or
sbb
mov
adc
lret
mov
fidivl
in
mov
or
or
or
popl
divl
sbb
fisubrl
idivb
in
call
sbb
lret
jmp
xchg
leave
cwtl
mulb
frndint
test
cmpsb
scas
in
testl
ja
sub
addr16
dec
pop
push
lret
popa
dec
add
or
loop
pop
pop
fwait
bound
sub
mov
aaa
add
jecxz
add
or
sbb
out
adc
jno
xor
fidivrs
cltd
xor
dec
mov
mov
in
int3
jns
push
mov
cmp
push
xor
sub
add
decb
hlt
sbb
dec
cmp
and
sub
mov
loop
fcoml
dec
test
xchg
jns
imul
sub
xchg
xor
jmp
es
xlat
out
xchg
jp
and
cwtl
in
mov
pop
iret
and
repz
jmp
gs
lcall
cmpsl
sbb
mov
por
enter
pop
push
inc
cmp
jae
cmp
loop
movsl
hlt
leave
dec
dec
movsb
xchg
and
and
push
xlat
and
insb
mov
xchg
sbb
push
jo
mov
js
xor
cmpsb
push
dec
aam
shlb
push
icebp
shll
pop
enter
rcll
pop
loope
pop
andl
sub
test
cmp
add
dec
leave
and
mov
insb
dec
push
out
es
dec
mov
sub
xor
loope
rcl
pop
cmp
fchs
dec
ja
sbbb
jae
lret
jo
repnz
add
imul
and
cmp
lods
aas
jo
jnp
std
inc
adc
lds
out
jne
inc
cwtl
out
pop
pop
sub
cs
xor
cwtl
stos
xchg
testb
je
test
adcl
popf
pop
lods
out
lret
push
xor
sar
stos
sbb
xchg
ret
mov
pop
imul
test
das
xchg
fs
les
fisubrl
push
sub
daa
aad
inc
push
push
lock
or
inc
ret
cmp
xchg
rcl
std
push
dec
push
aad
scas
ret
rol
imul
int
repnz
or
hlt
push
sub
arpl
pop
aas
shrb
xor
cmc
pop
xchg
and
fidivs
mov
jp
adc
sub
jl
mov
adc
les
mov
sub
cmp
lcall
mov
mov
jl
push
jbe
roll
xchg
stos
lods
in
fdivl
sbb
fldenv
jl
mov
lds
inc
std
and
ja
out
xchg
js
rcll
stc
cmpsl
in
mov
add
inc
shrb
shlb
lahf
pop
aaa
lea
or
test
insl
add
push
push
test
scas
inc
lods
sbb
js
mov
push
das
shrb
ds
aam
testl
lods
fcmovnbe
test
jg
ret
dec
mov
adc
aaa
sbbb
out
hlt
lods
inc
sbb
push
nop
cmp
add
and
nop
stc
jmp
scas
cmp
mov
out
xchg
sub
ret
xchg
cli
xor
faddl
insb
sub
call
dec
xchg
dec
je
dec
sub
adc
lea
adc
in
das
repnz
inc
adc
sbb
ss
stos
or
dec
lods
jle
jnp
int3
nop
cmpsb
pusha
fisubrs
adcb
pop
jno
pushf
idivl
sbbb
sub
mov
stc
mov
dec
mov
mov
push
push
sbb
sti
decl
sbb
jbe
in
xor
sub
inc
test
test
or
fldcw
into
jecxz
ss
pop
subl
lret
adc
in
cmp
xor
cmp
pop
xlat
cwtl
call
or
nop
mov
mov
scas
rclb
push
and
sub
push
xorb
cmc
lea
sbb
mov
push
int3
out
inc
jo
sbb
imul
pop
test
fisttpl
icebp
outsb
jecxz
arpl
sbb
stos
mov
jge
imul
mov
jnp
push
cwtl
adc
popa
sbbb
xor
lahf
dec
xchg
jmp
sarl
into
daa
daa
ret
mov
cmp
repz
loop
adc
jnp
ret
sbb
or
pop
in
and
aaa
jbe
xchg
adc
and
add
sub
stc
loope
add
jns
cmpsb
sbb
and
in
xor
xor
movsl
mov
imul
cs
push
cmp
dec
imul
sbb
jg
cwtl
bound
cmc
xchg
orb
xchg
inc
or
data16
mov
ljmp
push
rorb
cmpsb
add
ret
adc
mull
lds
xor
and
dec
dec
push
inc
and
pop
adc
sub
cs
pop
out
and
cmc
ret
mov
sbb
pop
sub
pop
push
push
inc
test
sbb
pusha
mov
xchg
dec
es
lahf
aad
mulb
mov
sub
inc
cmc
daa
and
notl
ret
xor
jg
imul
xor
mov
ljmp
sbb
mov
and
mov
jmp
push
imul
test
pop
jae
cmp
xor
pop
rcr
add
inc
pop
or
int
mov
mov
pop
cltd
bound
out
mov
fistpl
xchg
push
lret
and
das
clc
mov
leave
jb
lock
cmp
fdivr
cltd
int3
in
scas
mov
mov
dec
jge
call
xor
insl
push
sti
mov
leave
in
rol
jne
jp
cmp
mov
call
xor
fnsave
stc
rorb
jae
popa
add
dec
jg
outsb
sahf
out
jl
addr16
out
inc
jne
xchg
lds
inc
pushf
cli
xor
sub
mov
fadd
dec
jp
xorl
cmpsb
icebp
mov
push
lcall
mov
call
outsb
cmp
push
imul
jbe
dec
std
push
dec
dec
sbb
jbe
jbe
out
fwait
bnd
xlat
loope
jbe
add
mov
out
fs
adc
inc
ljmp
pop
adc
and
fs
add
ljmp
loope
jl
aaa
and
dec
push
dec
lea
iret
inc
pop
sub
sahf
cli
jo
fadd
pushf
mov
repz
aad
xchg
iret
jle
fistps
inc
and
cs
jno
push
sbb
data16
push
jnp
mov
orb
in
adc
mov
inc
lret
cltd
push
lret
push
inc
xor
outsl
enter
cmc
sub
pop
pop
cmc
out
pop
iret
xchg
mov
sub
dec
arpl
aaa
js
jp
loope
outsl
stos
out
dec
push
sub
sbb
out
imul
cmp
out
fdivs
add
jns
jns
inc
pop
outsb
mov
ficoms
rcll
xchg
call
push
movsl
xchg
pop
mov
push
out
lock
push
incl
imul
or
add
cmpsb
pusha
cmpsl
movsb
fwait
daa
scas
push
js
rcl
adc
and
xchg
adc
in
inc
popa
sub
jne
xor
stc
incb
dec
xor
fsubrl
add
and
xchg
dec
adc
xchg
stos
inc
ja
testb
pusha
mov
fsubs
shlb
mov
dec
xchg
and
aaa
ljmp
jnp
filds
xchg
mov
cmpsb
push
and
fcoml
repz
lcall
lods
pmulhw
test
addr16
xor
mov
add
dec
ret
sub
stos
bound
repz
bound
jno
fildl
test
mov
jne
mov
arpl
inc
cmpsl
adc
shlb
mov
and
clc
test
pop
add
inc
dec
in
mov
sbb
fwait
add
fmuls
fdivl
mov
mov
jb
test
mov
leave
mov
inc
mov
mov
gs
leave
nopl
xor
mov
push
pop
cmc
jecxz
loope
pop
fidivl
in
inc
notb
add
dec
shll
jae
mov
jae
ds
outsl
aad
cmp
mov
jne
int3
test
and
ret
lock
stos
negl
mov
dec
push
push
cwtl
ret
fstpl
mov
cltd
dec
gs
xchg
mov
repz
gs
jns
cmp
out
test
cmc
xor
push
cmpsb
jge
sti
mov
ds
movsl
inc
imull
inc
mov
mov
xchg
aam
out
insl
and
pop
icebp
or
scas
outsl
mov
mov
xchg
inc
adcb
adc
cmpsb
xor
mov
test
jae
outsb
rcrb
xchg
jp
pop
pop
sub
pop
sub
nop
call
out
in
or
sbb
xorl
loop
xor
pop
cs
pop
movsb
and
popf
push
fisubl
adc
cmp
imul
mov
mov
sub
pop
inc
dec
dec
xor
pop
aam
lcall
pop
push
xchg
or
out
repz
dec
pop
int3
inc
sbb
inc
mov
xor
fcoml
xlat
cmpsl
mov
fisubrs
test
add
add
xor
pop
pop
and
jp
pusha
sub
push
inc
mov
cmc
pop
ljmp
test
mov
jge
gs
mov
js
adc
sbb
int3
jl
gs
push
scas
inc
outsl
dec
notb
and
mull
call
add
sbb
int
xorl
sub
cmp
or
test
mov
mov
xor
int
cmp
mov
and
hlt
pop
in
shl
pop
jne
lret
dec
lahf
movsl
pop
lock
mov
aam
in
outsb
fs
shl
lahf
out
push
jb
pop
jno
mov
imul
pop
call
pop
popa
fcmovnbe
push
sub
jbe
lea
out
jne
jbe
jae
ja
jmp
mov
pop
arpl
ds
dec
push
les
adc
nop
aaa
mov
andl
into
adcl
scas
mov
loope
sbb
mov
mov
mov
scas
dec
lods
bound
sbb
lahf
lret
mov
sub
xchg
lahf
mov
int
lock
dec
lcallw
xor
and
bound
lahf
out
dec
sbb
scas
jns
loopne
adc
jp
mov
add
add
mov
cmpsl
or
out
cmp
sbb
pop
arpl
ljmp
or
mov
insb
out
mov
fstl
call
mov
test
mov
adc
xor
mov
rcr
add
jg
lret
shrl
cmpsb
addr16
out
lock
cmp
and
xor
pop
lods
addl
in
and
dec
dec
loop
jecxz
fucompp
pop
mov
push
cmp
test
mov
mov
test
pop
insl
jo
adc
scas
mov
in
popf
lret
movsl
movl
sub
adc
roll
mov
outsb
aam
dec
sti
popl
sub
jo
cltd
xor
jge
jbe
push
fwait
lds
iret
popa
clc
test
add
call
das
xchg
dec
decl
mov
xchg
inc
cs
cmp
lock
push
clc
push
shlb
jle
popf
icebp
mov
jmp
cmp
xchg
stc
sahf
cltd
xchg
mov
jb
shrb
cmp
push
fisubrl
insl
jo
fs
or
aaa
mov
leave
fcom
or
scas
int
push
mov
cwtl
sub
idivb
stos
xchg
sbb
and
jmp
gs
fidivl
dec
out
rcll
push
pop
enter
movsl
call
es
mov
inc
adc
fmulp
clc
lds
push
dec
lods
fsubs
jg
pop
cli
in
dec
stos
jns
lahf
imul
dec
or
test
mov
mov
or
jne
fisubl
test
lea
test
jle
iret
mov
mov
aaa
mov
inc
push
push
out
mov
mov
xor
cmp
pop
pop
std
xchg
pop
stos
je
mov
in
inc
das
or
and
and
add
out
add
cli
scas
inc
mov
in
outsl
xor
test
mov
dec
nop
popa
or
push
push
cmp
jp
and
movsb
scas
cmpsb
icebp
cmpsl
sar
repz
sti
jp
lea
shrb
pop
repz
into
repz
rcrb
wbinvd
das
data16
xor
in
scas
cmp
add
mov
inc
xor
jns
call
push
cmp
insl
push
js
lods
popf
call
and
insb
xchg
loop
imul
push
inc
push
cmp
fs
js
add
repnz
cmp
repnz
bound
js
sbb
sbb
mov
sub
inc
xchg
xor
ja
jmp
clc
jmp
push
jae
rorl
jge
popa
adc
sbb
inc
jb
inc
cwtl
jbe
dec
into
outsb
cmp
hlt
jle
sar
adc
insl
xor
sbb
rcrl
pop
inc
and
ljmp
dec
mov
pop
or
xchg
dec
xor
jp
add
adc
mov
mov
out
adc
adc
jmp
dec
fdivs
pop
je
hlt
outsb
out
inc
jge
decb
mov
iret
loope
aas
stos
xchg
mulb
outsl
cmp
data16
rorb
cmpsl
sbb
or
dec
cmpsl
repnz
mov
faddp
lock
jecxz
sub
std
mov
mov
rcrb
out
bound
inc
mov
xor
leave
add
xchg
xchg
test
and
or
lret
js
xor
es
inc
stos
cwtl
mov
icebp
sbb
jp
add
jnp
xchg
icebp
xor
sbb
int3
xchg
ret
xchg
sbb
out
pop
pop
arpl
fimull
mov
roll
mov
fsubp
les
inc
incl
popf
mov
arpl
push
push
jecxz
jmp
lret
imul
lea
mov
jge
cltd
or
enter
xchg
test
aaa
std
adc
in
stc
and
jmp
adc
iret
and
cmp
xor
or
testl
ficompl
leave
mov
popa
add
ds
mov
adc
jne
sti
cmpsb
mov
addr16
out
mov
hlt
js
dec
jae
cwtl
std
inc
xchg
push
je
and
pop
ja
fbld
out
test
jmp
add
dec
out
outsl
int
aas
jecxz
repz
mov
shrl
es
inc
cmc
cmp
pusha
inc
std
push
arpl
ds
mov
movl
popa
lock
jl
fdivrs
mov
inc
jne
icebp
or
popf
push
mov
fnsave
outsb
lcall
push
mov
cmp
pop
dec
adc
mov
inc
shld
sbb
loop
mov
push
imul
xchg
sbb
ja
mov
sbb
jns
cltd
inc
scas
daa
push
nop
mov
mov
fucom
xchg
cmc
xchg
lret
add
ret
lret
xchg
fcmovnb
inc
xor
and
roll
xor
pop
loopne
pop
mov
test
mov
mov
clc
in
fsubrp
imul
push
and
aad
cmpsb
mov
sbb
rorl
cmpsb
inc
sub
loopne
in
lret
pop
in
out
mov
xchg
jp
or
jb
movsl
nop
dec
into
jne
movsl
mov
dec
shll
cmpsb
jne
or
fs
push
arpl
pop
pop
jl
stc
ret
inc
lahf
jb
jl
insb
jg
cli
fidivl
addr16
int
mov
bound
and
mov
push
dec
fdivrs
fcmovne
dec
xor
testl
xor
jecxz
dec
call
jo
enter
ds
sbb
jle
jae
xchg
in
movsb
ret
insl
xor
xor
fsubs
popf
sub
adc
xor
cltd
mov
icebp
jmp
fs
enter
mov
imul
add
shll
daa
inc
shrb
out
leave
adc
add
cmpl
push
repz
push
rcrl
pop
sub
mov
push
or
mov
cs
dec
sub
dec
xorl
inc
jecxz
inc
mov
cs
pop
ja
xor
cs
and
jle
leave
mov
icebp
or
xchg
into
jp
mov
push
das
clc
xchg
jecxz
icebp
out
rcl
or
xor
dec
enter
mov
lret
movsb
repnz
aam
fwait
stc
repnz
iret
add
mov
mov
pop
lods
or
adc
cltd
daa
adc
movl
cmpsl
sbb
icebp
pop
and
xchg
cmp
jge
pop
push
jmp
xchg
xchg
insb
popa
add
aad
cld
pop
or
out
imul
enter
xor
xchg
scas
clc
mov
std
and
outsl
xchg
inc
pop
push
loopne
sbb
cmp
mov
cmp
fisttps
jecxz
xor
jo
xor
push
pop
cmp
nop
outsl
push
outsl
jecxz
clc
rcll
jbe
nop
iret
xor
in
stos
mov
fs
jns
jmp
pushf
mov
mov
sub
movsbl
mov
in
sub
test
cmpsb
add
pop
and
sbb
nop
and
mov
shrb
lock
negb
out
push
bound
mov
jae
pop
and
iret
gs
lret
call
sub
cmpsb
scas
test
in
inc
movsb
sarb
push
inc
add
adc
push
mov
or
xor
and
push
popa
cmp
jl
inc
lock
cvtpi2ps
xchg
sub
mov
int
shrl
loopne
cmp
cwtl
in
mov
mov
rol
mov
push
jnp
jmp
xor
hlt
push
daa
sbb
dec
lret
adcl
popa
sbbl
mov
in
sbb
mov
mov
imul
adc
insb
push
xchg
aaa
enter
xchg
and
adc
hlt
in
les
sub
sbb
aas
pop
push
pop
mov
xor
adc
sbb
push
mov
scas
ljmp
imul
sub
jp
inc
icebp
fcom
gs
dec
jle
popf
fcoml
js
imull
fwait
clc
insl
adc
mov
lcall
insb
mov
mov
mov
popa
outsb
scas
loope
jmp
push
aam
and
notb
sahf
aad
push
sahf
lock
push
lods
ret
daa
movsb
and
icebp
stos
ret
fadd
xor
sbb
out
sub
xchg
mov
shr
sbb
testl
mov
add
cltd
lahf
gs
adc
popf
sbb
push
and
cltd
out
adc
lcall
mov
add
xor
idivb
int
ds
into
addb
repnz
jg
mov
and
push
jne
call
roll
cwtl
push
xor
xchg
jnp
imul
std
call
push
in
or
fs
xchg
inc
addr16
shll
add
add
add
mov
in
arpl
jb
dec
aaa
pop
fadds
mov
cmpsl
ljmp
lock
hlt
add
inc
fsts
leave
cld
xchg
pop
loope
xor
stos
cmp
xchg
sub
inc
dec
bound
xchg
cwtl
loopne
push
mov
xchg
dec
jmp
scas
push
push
mov
sarl
cmp
add
push
sub
mov
lret
adc
sub
xchg
leave
imul
dec
fcmovnu
int
ret
pop
mov
push
and
test
xchg
je
jmp
cld
lods
lea
jg
lahf
popf
cltd
push
lods
shlb
cmp
push
xchg
jns
mov
jns
aam
ds
das
fisubs
imul
dec
fsts
cmp
mov
and
push
jno
pop
pop
repnz
fimuls
inc
xor
sarl
xorl
cmp
insl
cmp
ficoml
mov
push
xor
push
dec
and
xchg
push
add
xchg
dec
push
fadds
das
loopne
sub
dec
add
cmp
inc
and
adc
test
lods
or
pushf
push
mov
jge
imul
data16
jp
sub
jbe
jle
mov
pop
push
cs
lea
pop
mov
pop
dec
mov
fstps
shl
push
adc
sbb
sbb
fmuls
sub
sar
insb
xor
add
mov
cmp
jge
xor
call
popa
sbb
test
mov
stos
out
std
insb
in
sarb
bnd
dec
sbb
outsb
lahf
loope
sub
pop
mov
mov
mov
out
xor
xchg
sub
dec
ljmp
insl
lret
inc
loop
mov
push
inc
cs
test
je
or
dec
cld
mov
pop
and
sbb
cmp
or
jnp
cmpsb
imul
push
push
cmp
imul
rorl
sbb
sbb
mov
insb
jl
pop
pop
cmpl
or
fisttpll
xor
dec
not
sub
rorb
jge
fmulp
dec
fs
cltd
xor
pop
addr16
push
loope
lahf
xor
jne
rclb
ja
mov
lret
fstpl
adc
mov
adc
cmovl
shrl
lds
xchg
push
lea
bound
loop
sbb
mov
ss
or
shlb
ds
dec
ja
shlb
movsb
xor
cltd
mov
rcr
into
ss
add
and
out
push
popf
mov
test
sub
or
cltd
pop
mov
ret
stos
cmp
mov
test
movsl
or
cmp
sub
mov
push
fwait
arpl
inc
mov
sbb
push
mov
and
mov
and
mov
ds
jb
xchg
es
push
addr16
jnp
xchg
jno
adc
cmp
imul
jnp
push
mov
ds
insl
fdivs
jne
xor
and
mov
mov
shl
xor
pop
inc
adc
cltd
in
or
xor
pop
cmp
in
cmp
and
sti
fadds
push
test
xor
bound
inc
mov
sbb
lcall
imull
repz
repnz
mulb
mov
rorb
in
stos
or
sub
js
and
sub
fsubrl
ret
fs
imul
test
dec
or
xchg
cwtl
xchg
fbstp
adc
outsl
cltd
cltd
adc
leave
shll
out
movsb
movsb
fistpl
sbb
jns
mov
test
clc
cmp
fistpll
or
outsl
or
aas
int3
inc
addr16
dec
cmp
popa
and
add
cmp
jp
cmpxchg
jecxz
sub
cmc
adc
movsb
push
std
fsubs
adcl
xchg
test
dec
lock
data16
sti
dec
and
test
in
and
cmpsl
inc
pusha
dec
push
ss
js
cld
lods
mov
testb
repnz
test
jne
dec
push
fwait
sbb
add
and
cmp
jns
mov
add
or
pop
mov
mov
mov
xchg
jb
popa
aaa
mov
xchg
mulb
dec
lods
inc
enter
mov
and
and
mov
in
aam
hlt
and
mov
sub
jno
nop
cmc
fwait
call
add
fst
pop
leave
leave
sub
mov
mov
fnstenv
jp
push
jns
sub
and
jo
pop
xchg
pop
cmp
inc
xchg
dec
pop
arpl
aas
and
out
mov
sub
and
call
mov
and
daa
adc
out
jnp
arpl
push
jle
mov
popa
or
notb
and
dec
cmp
jl
xlat
icebp
faddp
pushl
push
call
subb
pushf
addr16
loopne
adc
or
mov
or
xchg
rol
adc
mov
mov
fincstp
enter
ds
shll
lds
js
adc
div
pop
test
mov
mov
push
fwait
fs
add
cmpsl
mov
cmp
fldt
dec
push
ljmp
iret
sbb
cmpsb
pop
xlat
ret
clc
push
mov
sub
sub
popa
cmp
shll
mov
fwait
mov
cwtl
xchg
or
out
jbe
xchg
inc
cmpl
push
mov
mov
jne
cld
gs
mov
mov
fistpl
sub
aas
push
pop
into
jae
in
and
push
mov
or
ret
gs
jbe
xor
xor
push
cmp
sbb
out
lret
xchg
push
or
jno
xor
pop
daa
rcl
cli
nop
mov
sub
enter
js
stos
lods
das
aam
es
dec
xlat
sahf
stc
sarl
and
in
loope
jno
push
cmp
inc
enter
sbb
clc
dec
push
mull
xchg
xchg
into
push
dec
jecxz
or
push
cmp
loopne
ljmp
jle
mov
sub
shll
adc
pop
cmp
mov
insb
xchg
adc
mov
dec
and
call
push
fwait
and
je
dec
mov
mov
push
adc
or
aad
mov
in
and
cmp
into
cmc
xchg
add
mov
sub
push
outsl
aaa
xor
iret
lds
iret
pop
pop
push
or
mov
sub
cld
or
in
mov
andb
ret
cwtl
sbb
mov
add
in
fwait
enter
cmc
fs
dec
xor
pop
xor
sbb
sarl
repnz
das
jp
push
mov
out
sbb
idivb
add
jecxz
push
pop
sbbb
icebp
mov
jbe
aam
or
adc
mov
fists
pop
movsl
into
sbb
jae
jge
sbb
fs
ja
xor
sub
cmp
cmp
jmp
jb
lea
loope
adc
sub
mov
pop
xchg
sbb
aad
and
mov
in
incb
pop
push
push
cmpsl
sbb
loopne
std
in
arpl
inc
call
call
cmp
enter
jb
enter
sbbl
shr
pop
jmp
sub
add
outsb
fldcw
cmp
inc
insl
cmp
pop
ja
xchg
loop
ja
mov
pop
sbb
pushf
es
das
xchg
xor
fdivl
mov
out
sbb
xchg
ss
mov
pushf
mov
mov
dec
inc
sub
test
mov
sub
mov
dec
xchg
sahf
and
int3
mov
mov
aaa
adc
test
cmp
xchg
add
ja
cli
or
test
jmp
fidivs
call
scas
sbbb
push
jg
je
fldl
outsb
xor
insl
mov
mov
dec
test
inc
xlat
bound
testb
dec
sbb
jmp
imul
and
inc
pop
movb
fcomps
ljmp
add
mov
inc
xor
stos
jp,pn
test
push
jl
fcomps
mov
rorl
pushf
pop
rolb
xorb
pop
xor
mov
lock
inc
xchg
je
sub
icebp
addr16
mov
cmp
cmp
rorb
push
and
xor
dec
arpl
daa
out
cmp
mov
add
mov
insb
mov
into
es
jge
inc
fidivs
mov
sub
inc
mov
lret
pop
lods
mov
aam
pop
mov
inc
cmc
sahf
push
push
cwtl
sub
data16
ret
push
xor
pusha
push
out
sbb
popf
jg
int
loope
nop
lods
outsl
mov
pop
or
fs
addl
test
xchg
ja
mov
add
cmp
sbb
pop
out
lret
push
xchg
mov
mov
cmp
rol
pop
cmp
and
sbb
stos
add
and
ss
arpl
cmc
test
subl
mov
arpl
pusha
out
pusha
outsb
ffree
mov
or
sub
mov
ret
and
xchg
test
sbbl
in
stos
inc
pop
push
push
test
dec
movsl
xor
out
leave
pop
xor
mov
add
push
fs
xchg
int
cmpsb
lcall
ss
sbb
scas
xchg
aas
push
mov
iret
ret
push
movsb
and
std
pop
movsl
scas
cwtl
xchg
test
mov
ss
in
mov
bound
jle
mov
pop
cli
aam
test
sbb
pop
mov
push
roll
je
fcmovne
xorl
sub
pop
xchg
mov
xchg
mov
mov
int3
mov
into
aam
cmpsb
ss
cld
imul
add
push
pop
or
jo
aam
cld
cmp
mov
push
jge
xchg
fimuls
test
pusha
sbb
addr16
gs
jge
inc
int
push
leave
aaa
shrb
pusha
xor
pop
stos
imul
mov
test
test
sahf
push
imul
dec
sub
roll
nop
repnz
xor
or
cmp
inc
in
or
packsswb
sub
add
push
lret
xor
pop
or
jl
xor
jb
mov
jmp
sbbl
popf
clc
popa
mov
push
xor
inc
lahf
sbb
test
lods
dec
imul
inc
negb
fnstcw
mov
mov
test
jg
hlt
adc
and
mov
cmpsl
push
pop
and
or
mov
mov
call
mov
mov
or
sarb
jno
fisttpl
lods
adc
fwait
ja
movsb
xchg
or
and
push
leave
pusha
mov
pop
loop
out
and
in
push
jg
lock
push
ss
addr16
xchg
cmp
mov
imul
mov
xchg
movsb
dec
push
and
ss
mov
rcl
rol
es
and
fidivrs
adc
push
test
xchg
call
loope
push
push
dec
or
or
jae
loop
jb
shll
adc
bnd
cmpl
popf
sub
movb
jns
jbe
clc
mov
shlb
dec
scas
loopne
xchg
mov
fisubrs
or
xor
ja
imul
cmp
sub
pop
add
mov
mov
ljmp
sbb
xor
adc
scas
mov
dec
outsb
mov
xor
mov
sbb
arpl
fs
and
aas
mov
xchg
cmp
pop
xchg
pop
ds
jae
ret
xchg
js
push
aaa
daa
aaa
xor
jg
and
or
test
pop
add
push
dec
rolb
popa
push
or
mov
mov
frstor
mov
addr16
ficoml
das
rolb
jge
outsb
cmp
cltd
and
xlat
jl
push
mov
std
and
ss
cltd
ret
sub
mov
inc
adc
push
hlt
mov
ret
rcl
dec
leave
and
lds
xchg
push
lcall
fisubrl
in
addr16
cld
arpl
lods
mov
cmp
push
mov
pusha
add
icebp
mov
jmp
aaa
int3
xor
sub
call
push
sbb
pop
lret
mov
mov
imul
pop
mov
sbb
sub
cwtl
ss
dec
sbb
xor
rcrb
adc
inc
or
imul
loopne
sub
out
mov
lock
test
and
push
scas
push
mov
jno
mov
out
jb
xchg
cmpsb
clc
jmp
inc
scas
fisttpll
lds
sahf
cld
push
xchg
sarb
lret
pop
cmp
sub
pop
lret
hlt
inc
iret
push
lea
sub
cs
mov
dec
pop
test
daa
and
in
sti
ret
push
inc
mov
aam
ja
js
test
or
xchg
add
pop
adc
and
xor
mov
xchg
aad
ror
fnstcw
test
mov
mov
push
inc
or
lcall
in
and
je
ljmp
nop
cmp
jns
icebp
jae
aam
nop
aad
mov
xchg
xchg
xchg
dec
psubd
add
sbb
test
mov
xchg
mov
cld
and
rclb
xor
cli
sub
pop
sub
lret
out
int
insl
lahf
nop
mov
add
mov
mov
mov
mov
mov
lock
ja
cltd
jbe
vminsd
test
stos
shlb
add
loop
arpl
ds
cli
xchg
clc
scas
mov
test
nop
pop
cmp
scas
sbb
dec
sub
sbb
icebp
pop
outsl
mov
int3
mov
xchg
lret
iret
test
nop
cmpsb
lcall
out
jp
je
lea
sub
push
xchg
mov
pop
pop
pop
push
cli
mov
pop
arpl
sub
and
mov
test
pop
xor
mov
cmp
or
pusha
adc
addr16
add
out
pop
pop
inc
in
push
and
idiv
lahf
out
xor
push
jb
lcall
lods
and
leave
enter
hlt
xor
mov
ret
inc
push
out
or
mov
mov
rol
jl
in
repz
rcrl
daa
mov
push
push
or
ret
popa
cmp
inc
test
add
lahf
sahf
subb
cmp
cmp
xor
mov
and
pop
scas
and
push
xchg
pop
cwtl
in
negl
das
dec
sti
push
int
testl
call
dec
jb
push
cmp
sub
jmp
pop
jae
sbb
push
adc
lea
push
jbe
pop
jmp
addl
andb
or
lret
push
fs
or
push
daa
call
movsl
daa
xchg
stc
cmp
dec
cmp
jnp
aam
out
daa
lods
pop
scas
aaa
push
xchg
pop
push
je
mov
cmc
add
into
mov
add
xchg
push
cli
adc
es
arpl
outsb
mulb
inc
fsub
sub
sub
xchg
test
lret
and
lahf
push
sar
mov
lcall
push
ret
or
xchg
lods
aam
lds
xchg
mov
repz
add
cltd
dec
cld
leave
xor
enter
arpl
dec
jl
loop
sbb
mov
test
add
push
lret
jg
push
mov
outsl
push
mov
es
push
lahf
mov
scas
cld
add
sbb
dec
imul
iret
inc
call
stos
or
jecxz
pusha
pop
jg
shrb
inc
pop
adc
stos
adc
in
lods
dec
pop
call
jmp
out
int3
adc
pop
jno
lret
and
xchg
adc
cmc
fidivrl
dec
mov
rol
stos
add
xchg
jae
repz
dec
divb
in
adc
xlat
xchg
xchg
fimuls
in
mov
imull
sub
jmp
jo
sahf
loope
ret
icebp
xor
hlt
dec
movsb
test
int
lcall
lret
loope
and
aas
lods
mov
or
or
push
ret
in
test
mov
fwait
or
xchg
adc
sbb
je
dec
inc
fwait
add
cltd
fldt
sbb
inc
cmp
mov
dec
insl
pushf
mov
aad
enter
lods
fisttps
sub
add
mov
insb
aad
je
adc
mov
mov
loopne
loopne
cmp
fnsave
in
jne
scas
dec
test
cmp
jne
jno
jmp
cwtl
imul
movsl
xchg
sub
sbb
in
loopne
fs
in
lds
cwtl
cli
cmp
push
aad
or
add
dec
jp
outsl
mov
inc
nop
loope
aam
ds
int
xor
mov
add
or
or
andl
outsb
add
imul
jecxz
mov
sti
mov
loop
cmp
add
lds
mov
call
loope
rorl
adc
add
xchg
cmp
flds
adc
lds
das
pop
sbb
add
or
out
lret
cmc
jecxz
out
std
stos
loopne
mov
ss
fxch
and
out
scas
sahf
xor
loop
and
test
loope
mov
inc
or
lods
mov
int3
cmpsb
fldl2e
mov
stc
and
jbe
aam
outsl
mov
les
fistl
or
lcall
test
and
sub
shrl
lods
jo,pn
subb
aas
dec
call
fisttps
les
popl
fisubrs
loop
mov
leave
stos
ret
cmp
and
shl
aad
push
pop
icebp
push
dec
outsb
add
mov
cli
sbbb
stos
out
ror
mov
cwtl
mov
iret
jb
xchg
xchg
lea
cmc
mov
jae
fucomi
outsb
addl
jmp
and
jmp
or
jb
ret
fdivr
or
push
rep
push
stc
sbb
sbb
das
or
jmp
mov
and
cli
imul
jle
lret
cli
je
pushf
dec
ss
repz
sub
pushf
in
dec
jae
in
nop
les
incb
leave
and
ret
push
inc
dec
mov
dec
lock
gs
dec
fnstenv
mov
rolb
mov
popf
ss
outsl
adc
mov
das
xor
jnp
sbb
das
jo
mov
out
shr
pop
stc
in
mov
int
data16
xor
fcoms
push
mov
sbb
sub
das
adc
pop
out
xchg
lods
aas
inc
xchg
adc
push
and
xor
and
sbb
outsl
sarb
out
cwtl
ret
mov
xchg
sbb
dec
cmp
or
test
and
push
push
aas
out
pop
and
xor
fs
in
cmp
or
call
or
cmpsl
jnp
popf
ficompl
push
outsb
xor
jae
lret
mov
adc
push
inc
adc
sub
popf
sarl
and
les
lods
scas
mov
rorl
ficoml
shrb
mov
cmc
mov
test
jmp
jecxz
jns
orl
cmp
dec
sub
inc
push
pop
jecxz
sub
xor
iret
and
bound
test
les
dec
mov
lahf
mov
fninit
fists
testb
mov
dec
inc
mov
xchg
test
arpl
pop
je
mov
sahf
jb
pop
pop
stos
ss
push
push
ja
stc
push
sahf
inc
iret
xor
ret
pop
fs
loopne
andl
xor
xchg
and
jle
mov
outsl
mov
pop
inc
adc
jg
pop
jns
adc
mov
adc
jg
push
lds
fidivs
movsb
cmp
test
hlt
add
add
mov
sti
mov
adc
pop
xor
lcall
int3
sub
jns
push
pop
or
mov
addr16
rcr
jbe
fldl2e
jno
andnps
pushf
xor
orl
add
add
mov
sti
adc
sbbl
sbb
sbb
iret
aas
popf
push
jp
adc
jecxz
mov
inc
mov
jg
adc
pop
cmc
xor
jo
pop
adc
dec
mov
out
sbb
xchg
lahf
test
pop
lds
adc
lock
jl
in
add
incl
mov
call
enter
jle
out
lahf
or
subb
mov
outsb
icebp
cld
and
jae
push
ja
iret
stc
xchg
sbb
ret
repz
xor
jbe
addl
mov
xlat
fldcw
dec
add
es
data16
cmp
cs
enter
cld
pop
dec
test
add
dec
xchg
scas
push
mov
cmp
aas
stos
out
jp
cmp
jmp
and
outsl
sbb
jno
movl
addr16
movl
sahf
cmc
bound
xor
dec
jnp
mov
sbb
fildl
sub
adc
mov
cmp
dec
aas
inc
push
xchg
pop
mov
ret
jmp
mov
dec
insl
jle
outsb
dec
outsl
mov
mov
test
pop
sbb
dec
push
shl
push
fidivs
fstl
mov
aam
mov
xchg
bound
imul
shl
cmp
sbb
test
js
push
lcall
movb
dec
jae
cmpsl
shlb
dec
jmp
out
mov
ss
xor
fs
test
fstpl
dec
mov
leave
icebp
xchg
sahf
or
xor
lret
dec
cwtl
jne
xor
int3
cwtl
hlt
sub
popa
mov
cli
jb
cmpsl
add
adc
and
mov
je
test
int3
xchg
push
fstps
inc
cmp
xchg
add
fisubrs
dec
enter
or
scas
mov
aaa
rorb
iret
sti
iret
mov
bnd
and
or
add
add
inc
mov
mov
sbb
jl
push
jg
rorb
mov
mov
out
xor
lret
in
or
test
xchg
in
fcomps
sti
pop
mov
pop
adc
movsl
cwtl
inc
adc
mov
pop
ds
sbb
add
mov
enter
test
aad
xor
icebp
push
aam
lahf
jns
loope
out
outsl
cmc
cmp
or
add
sbb
pop
cmpsl
push
mov
xlat
jns
out
dec
adc
or
and
pop
inc
sub
test
insl
outsl
test
adcb
aam
int3
adc
ja
aas
test
add
push
insl
adc
mov
sbb
aad
enter
cmp
lea
mov
add
sub
lock
scas
cwtl
and
add
pop
mov
cltd
fs
dec
out
xchg
xchg
mov
jnp
out
sub
jge
mov
daa
je
xlat
jge
aas
scas
enter
int
sub
mov
push
test
je
jno
jo
mov
jo
and
add
out
insl
push
mov
idivl
xchg
push
cmp
pop
and
in
xor
lock
mov
aas
cmpsl
scas
cmp
adc
mov
das
dec
cs
xchg
jle
fsts
aad
mov
lea
sti
sub
loop
add
aaa
sbb
and
jmp
jmp
outsb
fsubrl
sbb
ja
call
pop
jno
mov
outsb
mov
fwait
sub
cmp
mov
jge
shl
xchg
xchg
std
data16
adc
mov
cmc
adc
clc
push
shl
fdivl
jecxz
sbb
je
xchg
cmpsl
outsb
aas
jecxz
inc
add
pop
sub
test
push
data16
ljmp
mov
jns
ja
adc
push
fcmove
fistl
or
sbb
mov
lret
fistl
sbb
xchg
push
jbe
pop
sbb
push
adc
lock
and
xchg
movsl
jo
popa
imul
mov
and
mov
pop
jns
mov
rol
loop
pop
imul
dec
mov
and
in
push
push
arpl
jae
jg
in
fdivl
dec
shr
sub
inc
xchg
jge
es
dec
adc
stos
inc
xchg
imul
imul
mov
cli
fcmovnbe
popf
sbb
sahf
cs
test
cld
jg
xchg
in
fidivl
pop
mov
imul
call
ret
imul
jle
adc
add
daa
pop
inc
insb
push
or
or
popfw
mov
xchg
lcall
push
pop
mov
jge
xchg
loop
push
sbb
imul
inc
ret
adc
nop
mov
xor
sbb
xchg
in
int3
lret
shrl
stc
js
jecxz
fisttps
cwtl
aam
jo
xor
xchg
mov
scas
js
test
mov
push
sti
aas
cmp
incl
jle
fwait
out
mov
stos
add
iret
push
stos
scas
jle
dec
popa
jnp
lret
sub
js
mov
ss
fs
add
in
clc
pop
or
xchg
sbb
sub
insl
dec
push
out
push
mov
pusha
test
fsubrs
lcall
jns
mov
jne
jo
int
repnz
xchg
mov
xor
ret
daa
bound
adc
cmp
lds
fsubr
fistl
bound
lahf
mov
sahf
push
sub
adc
data16
fimuls
adc
inc
cs
bound
mov
lret
aaa
xchg
in
jo
push
sti
leave
rol
loopne
js
out
packssdw
loopne
lret
fnstcw
push
mov
cli
inc
les
cmp
add
repnz
jl
sbb
or
or
ds
es
xlat
jo
outsb
aaa
pop
adc
shll
push
cmp
dec
cmp
adc
fisubrs
mov
mov
cmpsl
fcompl
sub
pop
mov
and
push
or
cmp
leave
daa
sub
pop
loopne
push
sbb
insl
and
jb
pop
mov
cmp
enter
and
sub
lods
sahf
adcl
dec
pop
pop
sbb
jp
xor
andl
mov
fisttpll
sbb
aaa
xor
mov
cmp
nop
call
addr16
sbb
mov
sbb
push
inc
cltd
pushf
xlat
pop
jb
push
sub
inc
push
push
mov
iret
data16
mov
sub
lcall
negl
sub
xchg
ss
mov
popf
cli
movsl
mov
mov
out
in
push
jp
xor
data16
mov
cmp
loop
mov
dec
repz
mov
pop
stc
mov
inc
xor
notl
cmc
mov
push
xor
mov
cmp
push
sub
xchg
pop
inc
cld
into
pop
xchg
pop
dec
and
pusha
shll
test
jne
jge
dec
addr16
xor
cmp
jo
orl
dec
sar
xor
xchg
fdivrs
sbb
rcl
out
movsb
imul
cmp
mov
jmp
dec
mov
mov
outsl
hlt
xor
aam
sub
xor
test
sub
enter
or
inc
mov
inc
stos
add
clc
nop
add
repz
test
jne
iret
sbb
sbb
push
xor
inc
cmp
aas
mov
fdivr
inc
inc
stos
jecxz
jg
add
popa
mov
loope
daa
jnp
mov
xor
dec
icebp
fistps
mov
leave
push
cmp
inc
mov
mov
icebp
dec
mov
dec
stc
adc
ja
ljmp
nop
sub
fldcw
pusha
rcll
pop
hlt
nop
dec
lods
and
jb
inc
dec
mov
mov
iret
pop
jo
les
in
js
stos
add
in
movsb
addr16
clc
fwait
mov
lcall
cs
mov
mov
in
inc
mov
inc
inc
push
daa
or
mov
idivb
test
les
dec
test
inc
push
push
mov
ja
mov
int
fadd
add
insl
sbb
test
push
andb
mov
or
shlb
dec
pop
jo
popa
xorl
push
fcmovbe
out
ds
mov
sub
fs
scas
sbb
inc
clc
andl
fisubrs
dec
dec
imul
and
shrl
push
dec
fucomi
xchg
add
fs
int3
xchg
xor
mov
sbb
jp
dec
mov
das
sbb
mov
push
jl
xchg
dec
inc
cwtl
es
push
js
pop
xchg
mov
xchg
adc
sub
xor
arpl
xor
outsl
xor
movsb
and
pop
pop
mov
es
push
out
jae
in
mov
xchg
pop
into
push
scas
pushf
add
aam
sahf
stc
cmp
in
cmp
pop
mov
jle
cmpsl
jp
mov
inc
rclb
shrl
xor
mov
out
jecxz
fptan
jb
xchg
stc
stc
sub
nop
or
mov
mov
outsl
cltd
pop
dec
lods
movsb
hlt
lret
outsl
fstpl
push
jbe
js
sti
xchg
and
push
add
add
outsl
dec
mov
inc
fstl
cmp
add
xor
inc
das
ss
mov
mov
shll
xor
roll
into
xor
or
les
sbb
popa
popf
push
inc
pusha
mov
mov
mov
scas
out
inc
pop
rolb
shlb
scas
mov
dec
inc
das
imul
mov
or
mov
je
jnp
mov
inc
adcl
adc
xor
mov
or
fsubrl
mov
outsb
pop
nop
shlb
mov
in
cmp
in
jae
lea
pushf
xlat
sub
inc
aad
cmp
aad
sub
push
sub
test
or
sahf
pop
fnstcw
jl
cmp
fistpll
and
test
adc
or
pop
and
mov
not
mov
cmc
add
repz
push
in
xchg
lret
sub
ljmp
sub
and
xlat
out
and
nopl
sbb
or
cmp
aad
xchg
fists
in
ret
fsubs
pop
jo
dec
add
xor
push
rcll
lret
sbb
out
mov
pop
xchg
push
sbb
dec
lea
xchg
ja
sar
lret
jns
push
lods
push
repnz
jg
pop
mov
xor
inc
push
in
add
out
icebp
pop
fmull
gs
lods
inc
outsl
push
shrb
mov
lods
out
or
cmp
mov
ljmp
ret
jp
mov
out
in
rorb
push
xlat
scas
pop
add
inc
push
sbb
sahf
int3
fwait
subl
sub
and
and
out
sub
mov
jp,pn
sbb
in
pop
loopne
cli
jns
or
xchg
sbb
push
shl
mov
orb
int
xchg
adc
cs
sbb
cmp
pop
inc
pop
push
inc
dec
test
push
jge
int3
mov
scas
ss
adc
rcr
rorl
adcl
add
int3
fisttpl
cld
and
pop
pop
outsb
xchg
rorl
icebp
mov
or
ljmp
sbb
notb
inc
mov
mov
ss
leave
push
ficomps
sbb
and
mov
adc
sbb
xchg
dec
inc
inc
int3
xlat
and
pop
push
jl
mov
stos
mov
xchg
fwait
adc
dec
or
lods
lea
push
inc
gs
scas
lahf
jae
adc
sbb
dec
add
jmp
push
outsb
dec
jae
mov
hlt
adcl
mov
shrb
in
fidivrl
fmul
push
fbld
shlb
mov
scas
ja
xlat
mov
or
push
sbb
ljmp
or
popa
pop
push
xor
jmp
pop
repnz
cmpsl
pop
adc
jb
inc
push
mov
push
js
sbbb
mov
push
les
loopne
lahf
pop
sub
xchg
inc
icebp
mov
subb
mov
ds
xchg
fmul
pop
ljmp
cmp
jg
mov
sbb
mov
rclb
xchg
in
fisubs
out
outsb
cmp
mov
sub
fdivrs
mov
inc
add
jle
inc
stos
rorb
add
vsubsd
cld
xor
insl
lret
adc
push
dec
sarb
push
jae
inc
fsubrs
pusha
fsubl
fstl
mov
es
testb
jl
jg
call
fwait
jnp
lock
leave
ret
dec
adc
xchg
or
filds
iret
pop
push
fidivs
ds
mov
and
dec
xor
xchg
stos
sub
repnz
sarb
pop
jnp
mov
push
call
outsb
jo
in
xor
inc
jg
mov
fiaddl
pop
mov
leave
dec
add
and
ds
popa
add
xor
mov
jbe
cmp
mov
dec
insl
subb
push
cmc
popf
call
dec
push
push
mov
cmpsb
xchg
or
mov
addr16
inc
jns
add
cmp
add
xor
mov
or
loopne
push
int
scas
add
ss
push
fs
aaa
fists
in
mov
jle
adc
iret
mov
mov
xchg
out
adc
fisttpll
xor
cmc
mov
inc
and
xchg
mov
cmp
xchg
fistpl
adc
adc
gs
adc
jns
arpl
jno
out
roll
sbb
fsubrp
cmpsb
test
mov
shrl
ja
mov
orb
into
loop
sub
xchg
add
xchg
jo
rolb
cmp
mov
pusha
xchg
push
in
fwait
xchg
lock
call
mov
ret
push
mov
movsb
mov
scas
mov
arpl
test
outsl
sbb
jl
ret
xchg
lock
jmp
add
jbe
sub
push
stos
adc
push
push
std
fwait
and
not
fs
push
das
cmpsl
lahf
pop
out
sub
imul
dec
fs
fdivl
fidivrs
and
out
sbb
lahf
pop
jle
push
mov
mov
lcall
insb
test
mov
stos
repnz
dec
jl
pop
scas
pop
int
lods
aaa
push
jmp
shll
sub
test
jbe
adc
sub
outsb
pop
and
inc
xchg
jecxz
mov
imul
jl
mov
cmpsl
pusha
jmp
sub
push
loop
push
int3
push
push
rorl
jp
adc
fdivrp
dec
mov
imul
icebp
inc
jmp
mov
arpl
jg
popf
andb
int
mov
and
inc
cltd
jp
mov
cs
js
insl
mov
scas
mulb
cmpb
jae
adc
arpl
cmc
mov
xchg
pop
stos
std
aas
xor
imul
xor
add
gs
mov
pop
mov
lret
xor
icebp
stos
push
stc
lret
xchg
movsl
mov
xchg
loop
or
push
inc
ljmp
pop
and
imul
push
pop
mov
repz
insl
xchg
jp
cltd
dec
stc
adc
adc
out
out
mov
sti
insl
clc
or
xor
cmp
mov
push
repnz
push
mov
mov
jo
mov
out
cmp
xchg
and
mov
cmp
push
outsl
pop
fwait
bound
sbb
xchg
xor
stos
push
mov
js
sub
faddl
popf
mov
scas
repnz
gs
pop
add
xchg
mov
ljmp
pop
add
out
sub
or
mov
cmc
mov
cli
shrb
inc
jnp
adc
dec
cmc
sub
sbb
sbbl
in
jmp
dec
ljmp
lcall
aad
inc
cltd
enter
cld
jmp
push
fadds
push
mov
out
inc
cmp
cli
inc
shr
pop
rcrb
fucom
inc
push
adc
rorl
and
dec
out
pusha
sbbb
or
call
out
cmp
mov
fnstcw
push
pop
lods
pop
mov
lahf
push
fiaddl
and
or
imul
in
pop
lods
xor
mov
insl
jl
jmp
jae
rolb
pslld
pop
inc
mov
imul
jo
sbb
mov
into
cld
fstpt
sub
mov
int3
daa
lret
shll
push
rorb
sbbl
mov
push
mov
add
mov
pop
in
add
xor
leave
sub
js
in
mov
jle
sub
cmpsl
pop
bound
mov
cmp
out
mov
mov
test
test
push
out
sbb
cld
sbb
ret
sbb
or
pop
lods
outsl
jbe
and
fidivl
imul
inc
dec
push
paddsw
xchg
xor
lock
mov
and
scas
xor
jg
adc
fisttps
fnstsw
lcall
pop
push
enter
bound
pop
pop
dec
push
iret
out
hlt
scas
imul
xchg
mov
or
in
add
mov
fcomps
mov
xor
sub
xor
in
es
and
loopne
insb
or
lods
insb
sub
je
and
cld
adc
sub
jne
xchg
lcall
add
jne
outsb
jecxz
insl
into
repnz
pop
aas
test
in
orb
xlat
enter
jb
sahf
andl
xor
mov
rcrb
out
insl
js
cmp
lods
idiv
push
mov
mov
call
mov
jle
out
aad
imul
fwait
adc
and
stos
sub
sti
repz
mov
cmp
pushf
pop
cvtdq2ps
sub
mov
aas
jbe
sub
out
in
ret
jb
leave
add
pusha
aad
pusha
test
pop
test
xor
pop
mov
adc
mov
mov
or
jecxz
and
sub
push
fadds
out
imul
ja
sbb
xorb
mov
and
pushf
jne
or
adc
in
ljmp
or
push
and
pop
push
mov
scas
int3
ret
fistpll
xchg
mov
repz
jecxz
fisttpll
fdivr
jb
mov
negb
cmp
loop
jns
fwait
es
cmp
imul
data16
stos
lret
lcall
cli
inc
fs
jo
mov
icebp
insb
pop
imul
inc
adc
js
add
mov
or
pusha
xor
cmp
adc
pop
pusha
cwtl
pop
pop
pop
xchg
jne
push
sub
push
add
testl
bound
push
cwtl
jbe
out
xchg
clc
fdivs
pop
xor
push
sub
divl
inc
xor
jmp
cld
movsl
lds
jns
lods
pop
xorb
addr16
das
ja
ss
popf
pop
dec
adc
lcall
ss
sbb
test
jne
inc
mov
mov
in
push
imul
push
enter
dec
add
dec
fs
mov
dec
xchg
mov
mov
sbb
mov
sub
adc
imul
or
mov
cmp
xor
test
cmp
aas
inc
mov
popa
stc
in
adc
loop
adc
roll
lcall
lock
nop
inc
sub
fiaddl
aas
cmpsw
lods
xor
fwait
push
out
popa
into
movsl
and
mov
adc
idiv
xchg
test
mov
dec
add
shr
popa
jg
or
arpl
movsl
out
addr16
xchg
loope
fsubl
adc
adc
mov
inc
and
inc
fisubs
xchg
pop
push
lds
test
nop
orl
xor
xor
lea
outsb
xlat
jno
dec
add
inc
xchg
out
fnstenv
jae
lcall
sub
jg
pop
jo
add
add
lret
and
stos
and
xchg
clc
add
out
xchg
stos
stos
fiaddl
jge
jne
imul
pop
push
pushw
arpl
cwtl
fistps
fwait
mov
rcr
lods
insl
xor
sbb
xchg
ficoml
xchg
cmp
fsubrs
jbe
andb
xchg
dec
pop
fidivl
outsb
pusha
push
mov
or
arpl
add
jno
jecxz
mov
adc
inc
add
aad
fsubs
call
shlb
imul
pop
xchg
jge
dec
shrb
jnp
inc
jecxz
lods
jl
xchg
fsub
leave
jle
lahf
loope
xchg
orl
mov
or
sbb
leave
int3
and
dec
mov
bound
popf
xor
and
sarl
lret
ror
pop
lock
jmp
fistpll
je
jmp
test
sti
stc
lods
movsb
mov
lret
roll
lahf
lds
outsl
call
rcrl
mov
clc
pop
adc
loop
inc
cmp
cltd
jge
jne
fistpll
ja
push
push
in
pop
lods
mov
inc
in
push
cmp
cltd
jmp
mov
and
fnstsw
mov
lret
icebp
or
fildll
dec
mov
cmp
cs
repz
cmpsb
mov
test
cmp
adc
lcall
test
mov
daa
loope
adc
dec
les
js
inc
cmp
sub
out
rclb
jno
pop
imul
mov
adc
jecxz
cmp
sbb
sbb
cmp
lret
leave
sbb
loope
test
pusha
push
mov
imul
push
fsubs
xor
or
push
nop
inc
shrb
jbe
or
mov
lock
sbb
sbb
adc
clc
jp
mov
mov
aam
out
mov
dec
dec
dec
mov
pop
mov
lahf
aas
test
out
ret
push
mov
dec
jp
add
arpl
shlb
std
loope
sbbl
mov
sub
push
incl
mov
pop
or
test
mov
std
mov
in
lret
fsubs
xchg
add
add
shlb
cmp
cmp
iret
mov
rcll
scas
dec
sarl
sub
add
xchg
cmp
xchg
in
dec
cmp
pop
push
sub
and
push
mov
push
xlat
and
ljmp
xchg
sub
das
adc
aad
dec
sbb
xchg
mov
cld
jne
ds
test
testl
adc
popa
fs
push
or
fdivl
mov
icebp
fld
pop
jns
or
vmovss
bswap
inc
test
push
iret
imul
imul
mov
cmp
leave
divb
sbb
or
jecxz
inc
shll
pop
cmovbe
cmp
sahf
mov
cld
sahf
add
jno
dec
fstpl
dec
jb
add
ljmp
lret
jo
aam
mov
leave
mov
packuswb
rclb
sbb
pop
adc
jnp
xlat
add
fwait
adc
cltd
fimull
fimull
neg
mov
mov
addl
iret
mov
dec
add
repz
les
pop
cmp
rorb
jecxz
dec
cmp
pop
push
fildll
data16
ja
aas
mov
adc
iret
scas
xor
inc
sbb
cmp
mov
cmp
rol
loopne
out
aas
adc
iret
adc
adc
pop
bound
or
add
imul
or
aas
and
fisubrs
jae
fld
pop
push
insl
imul
cmp
sub
shll
mov
negb
push
mov
mov
popa
ret
sub
arpl
inc
pop
cmpsb
mov
push
sbb
rcr
or
dec
popf
cmp
push
push
jo
xor
jecxz
inc
es
shl
fists
inc
clc
xchg
out
clc
ljmp
sar
mov
mov
loopne
insb
mov
outsl
add
sbb
jb
mov
xchg
movsb
mov
rcl
xor
mov
gs
sub
popf
mov
inc
testb
push
sub
mov
push
sub
adc
mov
int
mov
gs
add
daa
leave
mov
lock
pushf
adc
jp
xchg
idivb
in
cltd
repz
out
cmpl
jge
xor
in
loop
scas
stos
push
and
cmp
sbb
out
dec
divl
and
pusha
and
and
push
sbb
icebp
jae
xchg
pop
pop
sbb
fcomp
sbb
jg
jne
push
mov
movb
pushf
cli
out
sub
outsb
mov
fdivp
popf
aas
shlb
daa
dec
xor
push
add
inc
jns
mov
mov
cld
ss
aaa
push
cs
push
adc
and
sbb
fs
dec
hlt
mov
xchg
sub
sub
add
push
call
shlb
addr16
fcompl
insl
lea
push
xor
lret
and
add
test
sbb
fucomp
pop
mov
xchg
imul
js
add
xorl
cmc
daa
and
mov
add
sub
jnp
or
add
pop
ds
xchg
aaa
ljmp
ret
xchg
push
repnz
cltd
push
cmpsl
leave
adc
enter
movsl
or
mov
out
ds
sub
out
mov
imul
and
sub
push
jae
jecxz
outsb
cld
aad
ficompl
lods
jae
jmp
idivb
aaa
loop
xchg
sbb
xchg
out
sti
inc
ror
dec
xorb
inc
pop
xchg
push
imul
fs
test
jg
mov
push
xchg
inc
pop
add
xchg
ja
iret
mov
pusha
add
bswap
sub
movsl
pop
loope
lea
add
and
in
adc
sub
out
xlat
mov
popf
and
lods
mulb
rclb
or
nop
es
subb
xchg
mov
sarb
xchg
inc
daa
sub
mov
lahf
hlt
push
cwtl
enter
fldenv
jne
and
sub
cmp
pop
and
hlt
mov
pop
xor
lea
pop
rol
jg
arpl
popa
push
mov
repnz
sub
cmp
lret
pop
fnstenv
or
cmp
call
push
xor
stc
iret
jbe
lods
push
dec
mov
jae
fdivrs
mov
rorb
xchg
pop
pop
or
adc
fidivrl
sub
es
arpl
jmp
inc
cmp
push
ja
inc
cmp
dec
leave
sub
fists
dec
stos
test
test
cs
arpl
xchg
dec
inc
pop
pop
ss
or
sub
mov
aas
pop
dec
and
ljmp
jmp
mov
pop
dec
sbb
jns
jne
cmp
stc
and
pop
mov
idiv
loop
out
repz
scas
sbb
add
mov
lea
daa
mov
pushf
xchg
insl
in
inc
icebp
xor
sbb
jle
pop
jns
xchg
cmp
out
in
es
out
add
push
or
xor
ret
movl
nop
cmp
xchg
xchg
and
jmp
push
stc
jno
and
insb
push
dec
insb
stc
psubsw
jl
loop
mov
cmp
fiadds
jne
add
jl
sbb
and
fstl
popf
sarl
nop
fsts
xchg
testl
shll
sbb
fmull
ret
or
ret
jle
sti
sbb
mov
jo
xor
sbb
outsb
idivl
pop
scas
and
sbb
mov
out
ret
cltd
fs
mov
aad
nop
jge
lock
out
sbb
fstps
mov
daa
cmp
xchg
loopne
cmp
sub
les
pop
sbb
mov
cmp
adc
mov
ret
stos
imul
jno
fistps
popa
lcall
fildll
icebp
sub
add
jmp
std
aad
sub
add
push
push
stos
test
adc
fidivl
es
add
sbb
dec
push
cld
int
sbbb
cmp
cmp
into
test
lret
test
enter
pop
mov
out
jnp,pn
cmpl
int3
mov
repnz
add
mov
adc
or
and
mov
mov
or
loopne
cli
lds
and
pop
movsb
adc
xor
xchg
mov
add
popf
mov
push
mov
aam
aad
out
or
mov
in
mul
movsb
cmp
sbb
mov
les
sub
popa
pop
nop
fdivrs
push
nop
mov
movsb
cmc
imulb
fcoml
xor
inc
xchg
jno
leave
add
add
shlb
ds
icebp
add
mov
enter
fwait
sbb
hlt
lods
cmp
jo
and
ficomps
pop
int3
xchg
lds
mov
hlt
pop
ret
out
mov
subl
xchg
adc
jo
call
lea
push
rcr
dec
cld
out
jbe
xchg
push
xlat
dec
dec
pushf
lahf
ja
or
mov
push
xchg
xor
inc
or
ret
icebp
or
clc
xchg
and
in
gs
scas
cld
fs
loop
push
jbe
lret
and
add
lcall
sti
inc
in
cmc
jnp
pushf
notb
rcrl
inc
adc
aaa
mov
dec
clc
call
int3
pop
push
je
push
outsb
rorb
inc
or
addr16
aas
mov
mov
inc
out
lods
leave
jns
and
xchg
iret
adcl
push
fbld
test
cmp
inc
jno
packuswb
xchg
negb
push
xlat
xchg
mov
cwtl
cmp
jg
xchg
daa
outsl
outsl
xchg
pop
cmpsb
jl
in
mov
mov
or
pop
mov
out
sub
jno
stos
cmp
jge
into
inc
pop
jg
aam
out
add
mov
pop
jae
lods
cmp
js
inc
jbe
sub
in
mov
mov
mov
sub
daa
and
popa
adc
scas
rcrb
loope
ja
xor
sarb
or
sub
jmp
and
into
jp
and
retw
fcomps
pop
pop
pop
incl
xchg
int
fiaddl
shlb
sti
adc
cld
in
pop
arpl
sub
popa
movsl
leave
sub
adc
xor
movsl
and
popa
push
test
loopne
js
outsl
or
push
lahf
ljmp
or
insl
leave
les
sahf
out
or
add
je
or
add
mov
sub
sbb
jno
add
mov
mov
jmp
push
jmp
fmull
xchg
lret
inc
fcoml
adc
jnp
stc
sbb
fwait
push
mov
mov
mov
ss
xor
xchg
jge
ret
shl
inc
popf
outsl
sbb
lahf
inc
stc
rcrl
loop
push
lret
in
cmp
xchg
sahf
jnp
test
icebp
cmpsl
add
cs
push
mov
or
mov
inc
jnp
and
icebp
ljmp
icebp
mov
in
sbb
mov
ljmp
mov
jns
outsl
test
nop
push
lods
pop
lods
add
xchg
fidivrl
ret
add
xor
push
mov
jmp
sbb
sti
fistps
xchg
jo
xrelease
dec
jae
push
sbb
cld
fdivrl
aam
cmp
stc
pop
fwait
push
push
imul
pop
test
stos
pushf
repnz
pop
ss
mov
pop
pop
into
and
mov
in
test
or
pop
in
inc
sub
pop
push
xor
cld
mov
or
push
iret
sbb
mov
imul
outsb
ja
in
shll
mov
mov
mov
xor
repnz
cmp
mov
add
fildl
xchg
pop
add
mov
push
in
cmpsb
add
pop
cmp
jno
dec
int
mov
in
mov
into
mov
popf
lea
out
sub
jo
dec
movsl
push
mov
pop
adc
cltd
mov
add
out
shll
xorl
mov
push
or
hlt
lods
aaa
or
push
xchg
in
arpl
ret
in
fcoms
mov
adc
gs
xchg
mov
inc
test
imul
sbb
aad
mov
pop
xor
pop
dec
out
ret
and
lcall
call
daa
cld
cmp
or
fidivrs
movsl
dec
iret
pop
adc
shlb
mov
mov
cmp
sbb
pop
jbe
nop
rorl
pop
push
and
lea
outsb
or
pop
in
jne
test
enter
cwtl
sub
xchg
inc
mul
loope
inc
xchg
sbb
pop
sub
icebp
enter
push
scas
jbe
jmp
xor
out
jmp
stos
jl
scas
jp
sbb
inc
inc
cmp
pop
push
jle
mov
or
in
jl
fcomip
aad
cmp
dec
scas
fsubrl
mov
push
clc
mov
mov
dec
ljmp
adc
mov
rcrb
loop
dec
test
in
xchg
fidivl
pop
cmp
ret
movsb
sub
xchg
daa
mov
lods
cld
imul
lods
add
and
fstps
idivl
inc
lds
sub
ljmp
xchg
add
adc
and
test
aaa
ffreep
mov
out
insl
jo
pop
mov
mov
into
sbb
pop
xor
xor
xlat
gs
sbb
sti
xchg
xchg
or
into
or
jnp
imul
xor
nop
cmp
movsb
insb
in
add
sahf
pushf
add
psllw
aas
push
xchg
in
test
clc
mov
xchg
push
pusha
fistl
int3
xchg
pop
stos
lahf
mov
sub
hlt
ljmp
dec
cmc
sbb
add
push
loope
aaa
cmpb
sub
dec
ret
xor
push
cmp
sub
or
pop
pushf
mov
sub
rolb
inc
fucom
sbb
and
mov
mov
ret
aas
push
rcrl
arpl
inc
scas
add
pop
cmp
push
push
aas
mov
inc
sti
stc
fwait
in
dec
lahf
xchg
aas
jo
outsb
push
aad
cmpsl
ljmp
shll
sub
adc
sti
jge
scas
mov
pop
inc
sub
adc
movsb
push
cmpsb
fsub
test
je
nop
lea
sub
popl
pushf
fdivrl
inc
jle
leave
xchg
pop
fcoml
das
add
repz
cltd
cs
cld
divl
cmp
sub
in
xlat
lahf
int
fwait
or
mov
cmp
test
push
pusha
sbb
xor
inc
dec
scas
pop
mov
mov
aad
pop
loop
repnz
icebp
xchg
aam
stos
and
jg
mov
sbb
push
xor
roll
push
outsb
adc
jecxz
fwait
adc
stos
push
repnz
xchg
andl
sub
pop
sub
ja
push
pmullw
push
pop
test
mov
jge
mov
mov
and
push
sarl
sbbl
jmp
push
pop
test
outsl
mov
cmpsl
fcoms
das
fsubrl
movsl
adc
xor
stc
bound
in
leave
dec
jle
aas
jo
call
mov
cli
fnsave
sarb
sub
and
push
xchg
gs
cmp
inc
bound
lahf
enter
aad
pop
jmp
or
jno
inc
sarb
jl
test
notl
xor
mov
and
cmp
inc
and
aad
pushf
inc
sub
xchg
xor
or
add
sahf
loop
lret
jb
pop
cmpsb
rcrb
mov
mov
or
xchg
jo
sub
outsl
rcr
scas
add
mov
rclb
jb
aad
xor
xor
pop
jns
leave
enter
ret
add
mov
sbb
movsl
daa
push
mov
lds
inc
xor
fisubs
dec
sbb
and
roll
imul
cmp
xchg
adc
test
push
mov
pop
sbb
in
add
cmpb
xchg
ret
mov
daa
ljmp
repnz
loopne
rcl
push
ljmp
ret
add
imul
pop
dec
mov
sub
imul
in
jae
push
mov
pop
ret
out
jp
sub
outsl
pop
push
aaa
xchg
cmc
jmp
jno
jecxz
mov
sub
mov
xchg
fsubs
sbb
mov
aam
rcrb
dec
pop
pushf
mov
jnp
es
loope
xchg
je
int
andl
pop
sbb
xchg
xchg
rclb
test
sbb
aam
xchg
add
mov
ljmp
fmull
jle
cwtl
adcb
divl
push
lret
xor
les
aas
xchg
mov
xchg
inc
bound
jae
inc
test
pop
loop
sub
push
inc
jae
call
inc
lret
icebp
ret
adc
ljmp
mov
inc
cmp
cli
jecxz
mov
mov
xor
rol
or
mov
test
dec
and
add
mov
jnp
test
adc
andl
nop
mov
out
enter
in
in
out
fs
push
and
pop
popa
push
out
loope
xchg
out
lods
movsl
jo
ds
shlb
add
int3
in
xchg
rcl
adc
xor
push
scas
out
sbb
mov
test
mov
adc
inc
test
stos
mov
and
xchg
pop
aas
int3
scas
mov
or
fdivrp
dec
cmp
cli
andl
lods
inc
cs
loop
dec
out
rorb
decb
push
gs
or
not
shrb
inc
push
pop
pop
dec
ljmp
int
les
imul
jecxz
add
lcall
int3
jle
adc
lea
or
xor
test
add
les
mov
stos
out
dec
jns
repz
xor
pushf
pop
push
mov
loop
repz
xchg
xchg
das
xchg
cmc
in
sbb
lret
jp
push
pop
xor
dec
nop
jecxz
sub
dec
data16
cltd
sbb
aam
cmp
inc
sub
cmp
xor
cmpsb
and
ret
dec
xchg
sbb
xor
out
shrl
dec
push
es
mov
mov
inc
aad
into
mul
aad
loopne
cwtl
push
movsb
ss
shll
arpl
push
das
and
test
jb
clc
mov
and
loopne
adc
sbb
lea
fcmovnbe
outsb
sbb
sub
or
sub
sar
daa
xchg
fcomps
insb
hlt
insl
ret
bnd
sub
cli
sti
jecxz
mov
or
inc
lret
insl
xchg
or
inc
sbb
mov
int
mov
jae
pop
pushf
cmp
ljmp
jle
popa
or
repz
jno
lods
pushf
mov
adc
and
int3
jge
xor
sub
cmpl
xchg
or
mull
sbb
cmp
push
sbb
mov
daa
cmp
jg
mov
jg
sti
add
push
inc
jmp
mov
stc
jno
xchg
pop
xchg
nop
or
ficompl
fld1
sbb
xor
push
cs
mov
push
roll
aaa
addr16
das
sarl
iret
sub
cmp
fnclex
nop
in
stos
inc
insl
frstor
dec
sub
fsubrl
mov
addr16
xor
xor
xchg
ret
sub
sbb
sbb
mov
jno
mov
in
adc
lret
pop
mov
and
imul
insl
adc
popa
sahf
stos
dec
mov
test
clc
mov
pop
add
or
mov
iret
popf
xor
ret
test
pop
hlt
popa
icebp
inc
cmp
or
jle
inc
jbe
add
lcall
icebp
in
pop
fidivl
mov
sahf
or
xor
js
jb
nop
jno
test
bound
mov
cwtl
testb
mov
push
in
or
mov
xlat
pushl
mov
ret
fildl
cwtl
outsl
fiadds
push
test
jbe
jb
and
mov
pop
subb
xor
xchg
lods
and
or
xchg
sbb
jp
xchg
mov
lcall
inc
xor
sub
and
hlt
sbb
imull
imul
push
testb
into
and
cwtl
insb
add
jne
outsl
outsl
lea
popf
sub
and
mov
jns
mov
cltd
push
mov
mov
call
divl
int3
scas
dec
mov
sbb
les
inc
lahf
repz
fstps
pushf
dec
insl
lahf
sbb
sbb
icebp
sbb
pop
mov
xor
fisubrs
mov
cwtl
out
push
push
sub
adc
xchg
cld
mull
addr16
cmp
mov
inc
shl
lahf
xchg
mov
add
sub
or
out
je
mov
test
pop
push
push
and
push
repz
xchg
clc
loopne
sti
repnz
jmp
pop
in
push
cs
int
add
hlt
dec
mov
out
gs
jmp
xchg
jae
mov
repnz
inc
jmp
cmpsl
nop
bnd
cmpsb
and
xor
mov
int3
pop
mov
mov
testb
test
inc
pop
add
ja
adc
test
insl
data16
jle
movsl
jno
cmp
ja
out
pop
mov
and
sub
shll
add
xlat
ret
cmpsb
jb
mov
push
stos
and
jmp
imul
aad
insb
mov
fidivl
flds
je
pop
sahf
sahf
adc
jp
cld
jo
arpl
mov
ljmp
ljmp
cltd
sbb
dec
dec
xor
and
dec
mov
bound
adc
sbb
pop
in
std
fwait
lods
rol
aas
mov
xor
xchg
xchg
into
ss
push
loopne
adc
lret
stos
or
mov
sub
adc
imul
out
popf
aad
jmp
mov
mov
mov
mov
push
daa
loope
cmp
shrb
mov
fnsave
mov
outsb
mulb
mov
sbb
aam
jmp
in
xchg
jmp
ljmp
in
scas
loop
adc
mov
push
jmp
cmp
cmp
mov
cmp
pop
idivl
and
push
xlat
fs
push
sub
sahf
adc
pop
sbb
ja
mov
pop
jle
push
mov
cmp
push
sub
bnd
subl
cmp
sub
fisttpl
int
pop
setp
xor
daa
rcrb
adc
or
out
mov
imul
fwait
push
punpckhbw
nop
imul
in
addb
dec
dec
pop
in
mov
out
inc
pop
or
adc
push
mov
push
pop
adc
flds
push
dec
mov
mov
jmp
bound
popa
data16
into
out
ss
test
xchg
aaa
test
jg
pop
xor
addl
jbe
jno
cmp
out
cmp
xor
push
jmp
push
insl
mov
push
add
cmc
ja
add
pop
push
data16
inc
jnp
push
xchg
add
mov
mov
mov
adc
mov
sbb
xchg
std
inc
xchg
or
jmp
and
cs
sbb
ja
and
add
pop
jmp
scas
pushw
dec
or
mov
push
pop
and
push
bnd
jg
popf
scas
sub
dec
cmp
dec
je
shlb
jge,pt
cmp
xor
mov
movsb
add
mov
lds
out
adc
ficomps
sub
out
cwtl
out
rorl
xchg
inc
push
repz
enter
test
dec
cmc
and
mov
les
xlat
lcall
pop
xchg
push
mov
das
popa
xchg
sahf
xor
out
mov
xlat
shlb
ret
xchg
aas
mov
mov
or
sarl
adc
subl
faddl
inc
or
cld
sub
jns
mov
mov
jo
popa
sarl
inc
pop
xchg
call
adc
out
push
jb
jbe
mov
test
mov
sbb
std
add
mov
add
aaa
mov
pop
mov
jbe
mov
adc
lods
aaa
adc
xchg
out
inc
xchg
pop
sbb
fistps
xchg
out
das
rclb
int3
inc
pop
mov
push
jl
or
mov
nop
pop
call
enter
lret
loope
xchg
out
push
popf
dec
lea
push
mov
xorb
ficoml
inc
dec
push
mov
sub
int
mov
mov
pop
push
rolb
mov
mov
repz
sbb
xor
mov
out
sbb
sbb
jge
imull
popf
mov
cmp
add
lahf
movsb
sub
test
lret
sbb
mov
popf
add
arpl
mov
inc
cld
add
insb
fstl
das
out
lods
xchg
fwait
add
and
lcall
fs
pop
pop
int
popl
push
mov
lret
and
imul
push
inc
loopne
xchg
pop
rcl
test
xchg
jbe
enter
out
loopne
mov
mov
subb
mov
sbb
push
add
jecxz
inc
adcb
clc
lods
call
divb
sbb
add
xorl
adc
xchg
sbb
pop
les
mov
mov
insl
dec
test
push
cmp
cmpsb
jmp
dec
push
cmp
scas
lds
subl
pop
cmp
push
push
fisttpl
shld
pop
shll
ret
xchg
add
inc
stos
fsubs
stos
adc
pushf
ljmp
and
cmc
testb
pop
clc
inc
or
xor
add
cmpsb
and
inc
popf
mov
ljmp
cltd
xchg
xor
fs
mov
int
jp
xor
bound
or
push
fnsave
jns
movlps
je
add
repnz
push
cli
mov
fs
ficomps
sbb
lods
mov
jbe
adc
xchg
cmp
into
inc
adc
loope
jns
xor
mov
fnstcw
inc
fwait
mov
mov
dec
cmp
repnz
aam
lock
dec
popa
fiadds
sub
data16
rclb
jp
scas
sbb
int
popf
xchg
push
cmp
adc
cmpsl
bound
insb
push
add
sar
lahf
inc
sbb
flds
pusha
loope
add
fbstp
sbb
mov
adc
out
es
shrb
fwait
cmp
shll
mov
idiv
cs
xchg
shlb
pop
push
inc
addr16
loopne
stc
and
jge
sbb
mov
add
lods
push
insb
jo
lret
and
push
jle
stc
push
repz
push
mov
xchg
xor
stc
sahf
ja
les
aad
inc
jmp
xor
push
add
arpl
push
xor
xchg
cli
arpl
pop
repz
sbb
mov
sub
fadds
xchg
or
mov
jbe
ljmp
lock
repnz
out
shll
cmpsl
mov
or
cld
aaa
push
xor
cld
xlat
add
in
insb
push
sub
std
inc
mov
xchg
adc
nop
sub
ret
lock
adc
push
inc
je
jbe
cmp
lea
mov
adc
ficompl
add
fnclex
inc
and
subl
adc
xor
lods
lahf
cs
xlat
inc
pop
xlat
or
pop
adc
aas
das
adc
add
lock
scas
fwait
out
inc
ret
xchg
dec
ja
mov
dec
into
scas
ror
mov
inc
rol
pop
cmp
mov
xchg
lret
loopne
jmp
popa
hlt
iret
jmp
daa
icebp
add
mov
mov
movsb
daa
outsl
rolb
push
es
and
xor
dec
subb
adc
push
rcr
dec
lea
inc
push
pop
dec
and
adc
mov
xor
dec
add
je
fisubs
scas
shl
inc
imul
cmpsb
loopne
adc
addl
scas
je
fbstp
shl
cmp
jl
pusha
push
inc
add
arpl
sarl
cmpsl
call
inc
ds
shr
das
cmpsl
mov
shlb
sbb
jmp
call
mov
cmpsl
cmc
pop
daa
mov
shrl
into
cmp
pop
mov
dec
dec
testb
sbb
std
inc
mov
cmp
mov
test
in
aaa
and
and
lret
les
in
jno
fwait
imul
xchg
sbbb
shlb
fwait
sub
aas
push
jmp
mov
ds
lock
sub
push
sti
xchg
jne
shll
cmpsl
movsl
mov
ret
pop
adc
sbb
dec
mov
xor
out
pusha
mov
psubusb
insl
mov
xchg
xchg
adc
cmp
popf
repz
push
jb
xor
popa
jle
adc
sub
jge
inc
push
push
lods
cs
push
cwtl
addr16
sbb
pop
cltd
add
mov
lret
cmp
adc
or
subb
in
outsb
mov
aas
dec
out
xlat
aam
lea
arpl
inc
mov
stos
jp
movsb
adc
pop
sub
aaa
and
imul
jmp
scas
mov
lahf
out
and
repnz
les
pop
and
fs
popf
pop
inc
xchg
jmp
outsb
push
add
jnp
daa
lret
icebp
movsl
mov
push
adc
or
inc
pop
jg
js
push
cli
in
out
jg
aad
mov
std
popf
js
mov
xor
and
or
adc
rolb
popa
jge
pushl
pushf
xchg
mov
pop
cltd
lock
aam
pushf
imul
das
imul
fs
imul
sbb
jnp
mov
jg
pusha
aad
jmp
mov
into
cltd
and
popa
jle
dec
lea
ds
dec
loope
push
sarb
adc
dec
addr16
mov
dec
mov
shrb
dec
mov
mov
sahf
pop
bnd
xchg
mov
fs
xor
jg
addr16
addr16
push
mov
enter
pusha
outsl
in
mov
cmp
cmp
in
push
test
sub
sbb
jge
enter
dec
setp
cmp
aas
filds
push
mov
popl
mov
out
and
scas
mov
jne
xchg
es
push
jmp
or
outsb
popl
fwait
sub
add
cld
pop
push
cmp
ret
std
ret
mov
dec
loope
add
ljmp
push
xor
fdivrp
aaa
cmc
pushaw
mov
mov
sbb
mov
cmp
lret
mov
pop
dec
fstpl
pop
mov
and
repnz
movsl
or
and
outsb
in
xchg
mov
dec
lcall
inc
jo
push
shr
mov
out
je
sarl
in
mov
pop
stos
xchg
jbe
sub
adc
cmp
out
cmp
dec
mov
shll
repnz
dec
popf
hlt
jmp
pop
push
aaa
icebp
faddl
in
jb
mov
ljmp
mov
lret
popa
pop
sti
push
mov
push
mov
mov
dec
inc
cmpsl
adc
flds
ljmp
loope
adc
scas
sub
xchg
rcl
sub
or
push
jo
test
nop
outsb
out
lds
int
es
mov
enter
xlat
mov
or
xchg
mov
add
sbb
inc
testl
cs
jecxz
clc
xlat
inc
iret
gs
push
iret
jne,pt
or
push
cwtl
push
cmp
and
cmc
mov
push
adc
sub
aas
clc
imul
lea
in
ss
mov
or
mov
fwait
sbb
push
pop
mov
add
loop
into
test
lret
add
cwtl
mov
out
adc
xchg
sbb
pop
inc
sub
shrl
dec
mov
ljmp
iret
cld
nop
mov
imul
mov
and
bound
mov
out
cmp
mov
and
les
out
sbb
xor
lret
push
sbb
push
sbb
jo
enter
mov
inc
sub
mov
nop
push
cmp
mov
sbb
scas
dec
and
stc
dec
cmp
stos
int3
jl
inc
jmp
mov
cli
jno
nop
in
or
pop
movsb
fadd
and
aaa
mov
mov
call
rorb
testb
mov
lock
mov
lcall
mov
mov
push
pop
and
jl
dec
cmc
insb
push
sub
pop
imul
push
loope
out
cmp
inc
in
test
cmp
sub
stos
and
insb
xor
xor
lret
xchg
jo
mov
push
lods
das
fcom
outsb
cmpl
scas
lods
insl
cmc
out
pop
bound
fs
mov
mov
adc
sub
jecxz
xchg
mov
inc
and
pushf
adc
lret
xchg
mov
sub
or
or
pop
pusha
or
mov
push
int
mov
and
xchg
insl
inc
jp
push
shlb
outsl
std
or
ja
xor
bound
testl
into
lods
add
inc
sbb
xor
or
push
mov
push
mov
xor
stos
mov
fists
cld
add
pop
inc
loopne
push
ret
subb
adc
fnstsw
inc
ja
xor
jne
push
inc
dec
jno
mov
pop
lret
loopne
sbb
cmp
gs
inc
in
jg
push
stos
aas
leave
xor
enter
xchg
inc
cmpsl
pop
ficompl
imul
sarb
aam
adc
add
popa
mov
sub
shl
das
testl
je
pop
sub
cmp
sbb
in
cli
fimuls
mov
out
push
stos
stos
shlb
mov
pop
jns
cmp
mov
adc
dec
push
movsb
cwtl
mov
ret
and
andl
mov
sub
scas
xor
out
pusha
scas
push
repz
int3
adc
out
mov
jg
pop
out
ss
ds
lea
jae
mov
shll
sbbb
add
movsl
push
out
imul
jnp
clc
out
insb
jle
dec
xor
sarb
xchg
lock
shll
adc
sbb
shll
pop
sub
xorb
add
enter
push
push
in
stos
call
push
and
pop
or
cmp
std
xor
out
push
jno
or
and
outsb
aad
into
push
mov
jg
das
addl
mov
or
xchg
pop
mov
popf
push
fstl
xchg
dec
rol
cmp
xlat
dec
stc
lcall
addr16
xchg
xchg
cmpsb
dec
add
xchg
cmpsl
cmp
push
lea
ret
dec
out
imulb
scas
mov
ret
push
gs
sub
dec
lds
stos
test
sub
scas
pop
xchg
or
outsb
inc
jmp
xchg
xchg
jne
xor
xor
xchg
stc
loopne
jno
out
adc
loop
call
xor
cmpxchg
cmp
test
push
or
mov
xor
jl
sub
call
mov
xorb
mov
testl
cmp
sti
inc
mov
dec
jg
adc
cmp
pop
sbb
es
push
enter
push
test
pop
and
das
fs
adc
and
mov
xchg
pop
xor
sarb
lods
xchg
pop
lret
and
mov
popf
sti
insb
push
sbb
sub
adc
sbb
dec
roll
add
sub
aaa
sahf
fsubrl
dec
cld
ja
gs
fldenv
dec
add
scas
pop
outsl
out
or
jle
mov
ret
stos
adc
or
xor
mov
test
aas
mov
les
loop
mov
sub
int
inc
and
mov
add
mov
sbb
stos
ljmp
xor
push
fucomip
cmp
lods
pslld
fldcw
rcrl
loopne
dec
pop
mov
pop
xchg
imul
mov
mov
cwtl
lahf
les
jge
ret
push
pusha
sub
syscall
ss
lods
repz
xchg
loope
imul
lahf
hlt
xor
int3
dec
push
pop
mov
icebp
mov
jge
movsl
out
jb
mov
xchg
adc
lret
push
lahf
aas
xchg
enter
cltd
fwait
mov
jnp
mov
pop
pop
mov
push
lahf
sub
cmp
std
mov
ret
scas
enter
addr16
cmp
leave
int
pop
xor
cld
test
xchg
dec
mov
inc
mov
in
push
mov
daa
lcall
xchg
xor
je
and
mov
mov
or
loopne
mov
add
scas
lock
lcall
jbe
push
adc
insl
dec
pop
mov
daa
mov
popf
inc
nop
clc
mov
sbb
mov
xor
jge
into
or
pop
nop
push
push
test
sub
arpl
je
pop
std
into
push
pop
cltd
cmp
pop
shl
adc
sbb
bound
inc
sub
cs
insb
xchg
jecxz
repz
fistps
roll
pop
pop
mov
sbb
push
in
add
cmp
push
lock
iret
mov
imul
fldt
addr16
mov
dec
cmp
cwtl
test
arpl
movsb
mov
fstps
arpl
mov
enter
lea
xor
loop
les
ret
xchg
push
mov
mov
mov
adc
notl
mov
sub
or
js
cli
popf
int3
insb
in
dec
test
inc
jbe
pop
or
inc
mov
outsl
adc
mov
sub
inc
xchg
cmp
jle
scas
les
cmp
mov
gs
mov
in
aas
push
add
aam
out
and
adc
call
mov
movsl
dec
xor
inc
and
shr
or
or
ljmp
mov
popf
dec
aam
dec
dec
xchg
and
inc
mov
mov
and
dec
fnstenv
xchg
push
orl
imul
mov
in
pop
pop
std
mov
xchg
inc
mov
push
icebp
dec
pop
in
int
mov
cmpsl
shrb
add
mov
dec
sub
lret
push
xor
ljmp
mov
or
pop
add
fdivl
adc
xor
cmpsb
dec
in
cmp
pop
xchg
mov
je
and
and
fldenv
sub
jmp
bound
int
repz
pop
test
stos
mov
iret
add
sbb
fstpl
and
push
mov
hlt
or
subb
mov
inc
lret
mov
cwtl
mov
sub
sub
cmc
rcll
int3
or
push
or
sar
sbb
sbb
sub
call
mov
cmp
lds
push
dec
pusha
xchg
and
pop
cmpsl
icebp
sarl
sub
cli
pusha
aam
jmp
jecxz
add
inc
push
sbb
test
add
mov
adc
neg
insl
push
addb
push
iret
sub
lret
mov
xchg
cltd
dec
push
or
push
mov
fwait
repnz
repz
add
sbb
in
loop
xchg
push
movsl
sub
mov
jg
lods
and
pop
sub
arpl
pop
lods
sub
cmpsb
cmp
mov
add
stos
pop
cmc
add
pop
push
iret
inc
xor
pop
jb
aaa
test
mov
add
mov
sub
sbb
push
adc
fildll
ss
sbb
and
adc
dec
imul
xor
scas
inc
rcrb
cmp
loopne
scas
dec
push
inc
ljmp
lock
push
xchg
out
cmp
and
ret
out
stos
xor
cmpsl
jbe
loop
std
adc
popf
pop
push
movsl
lds
mov
xor
iret
push
add
fadds
pop
nop
pushf
enter
aaa
out
xchg
sub
sbb
jne
mov
cmp
sub
movsb
in
mov
adc
pop
pop
imul
mov
lods
sub
das
adc
inc
sar
ja
int3
mov
iret
leave
push
imul
push
movsl
shlb
sub
daa
mov
outsl
mov
push
rcrl
leave
add
xlat
insl
cltd
test
in
push
jl
bound
nop
or
mov
cmp
adc
jo
sub
pop
xor
je
xchg
mov
imul
mov
sbb
shlb
cltd
repnz
fstps
arpl
out
fsubs
aad
mov
inc
push
repz
jbe
cmp
and
lahf
pop
sarl
dec
mov
fs
sbb
int3
push
aad
and
push
lods
jnp
fmulp
sub
in
daa
lret
pop
xor
stos
je
scas
xchg
lcall
or
insl
mov
mov
cwtl
ds
pushf
in
lret
jae
fstpt
xor
cmpsb
xchg
mov
test
cs
push
aas
sub
mov
ds
jbe
mov
mov
mov
adc
cmpsb
sbb
and
dec
sbb
add
or
scas
pop
and
or
or
or
lret
jp
or
cs
pop
ljmp
das
mov
jmp
std
in
xor
in
cld
jecxz
stos
pop
mov
mov
sbb
arpl
lods
shl
cmp
jo
popa
arpl
add
add
push
push
leave
mov
icebp
and
out
jg
cmp
lock
jl
into
dec
ret
add
cmp
mov
inc
push
testb
out
push
sbb
dec
rorb
pop
imul
sub
jb
adc
lods
scas
add
inc
mov
and
jno
int3
popf
cmp
outsl
inc
cmp
and
pop
icebp
mov
mov
flds
ss
sub
mov
inc
call
je
push
xchg
int3
or
xabort
mov
dec
ret
rol
cmp
mov
imul
fidivl
test
mov
dec
rorb
inc
mov
divl
test
aam
push
or
rcll
ljmp
adc
popa
es
xor
xchg
lock
push
fistps
jno
mov
out
icebp
sbb
cs
cwtl
ja
sti
adc
add
adc
jmp
cmp
jns
cmp
mov
jno
add
js
inc
jecxz
and
lret
inc
xchg
test
into
sbb
push
push
sub
scas
cmp
out
test
clc
pop
cmp
lds
stos
inc
push
adc
shlb
iret
lods
push
pop
xchg
add
push
outsb
mov
push
enter
popf
in
add
mov
sub
inc
sbbb
mov
inc
aas
popf
sahf
or
mov
cmpsb
int
scas
sub
jns
or
fucomip
lock
shrl
mov
pushf
push
loop
mov
imul
mov
add
mov
or
in
jb
xor
pop
mov
sahf
sbb
cmc
cmp
sahf
cmp
cmp
js
lods
movsl
fstps
xchg
sbb
std
lret
je
push
pop
or
pop
push
jo
xor
inc
data16
fnstenv
pusha
add
cmpb
pop
xor
and
dec
add
aad
lahf
imul
or
lahf
adc
inc
sbbl
outsb
enter
ficoml
mov
xor
pop
mov
imulb
fsubrl
gs
mov
je
dec
push
iret
popf
popa
xor
jle
je
mov
out
out
xor
mov
outsl
jbe
cld
or
adc
movsl
inc
sbb
adc
rep
lret
inc
pop
adc
sbb
xchg
adc
adc
dec
call
xchg
fsub
push
jbe
fcompl
aaa
adc
mov
adc
out
dec
shrl
fwait
and
mov
adc
jle
scas
push
or
adc
jns
je
jo
cmpsl
adc
outsb
push
add
push
aam
push
push
cmp
dec
dec
sbb
ret
ret
dec
call
sbb
pop
stos
outsl
dec
xchg
sbb
or
add
lods
pop
sub
and
jp
inc
add
cld
sahf
xor
test
shrl
mov
test
add
aas
push
cmpb
int3
and
imul
cmpsl
fildll
clc
cld
shl
imul
push
inc
jae
faddp
loope
js
ss
jge
xchg
clc
jg
mov
mov
outsl
pop
fistl
sbb
push
jns
loope
lock
aad
sbb
xchg
aaa
repz
mov
adcb
inc
add
ja
xor
and
and
scas
and
shll
cmp
push
iret
xchg
or
jmp
in
push
inc
cmp
cli
nop
push
jo
mov
pop
pushf
sub
hlt
loopne
sbb
mov
add
xor
cmc
jge
cmpsb
jo
push
sub
push
stos
in
rol
xor
in
mov
push
inc
xor
cmpsb
aam
mov
and
je
mov
xchg
imul
or
push
mov
je
jnp
rcll
jns
out
mov
fsubp
push
jb
xchg
jne
dec
mov
push
es
jmp
imul
ljmp
inc
cmc
gs
xor
cmp
insb
jp
gs
hlt
sbb
adc
addr16
aaa
xor
dec
inc
test
push
test
das
mov
pop
xchg
push
jo
adc
lods
pop
ja
cmp
js
and
push
xchg
mov
pop
icebp
insb
push
xor
mov
and
cld
and
jbe
shlb
lods
lahf
es
rorl
jno
pusha
fstl
pop
xlat
xchg
cli
xchg
dec
dec
sbb
mov
jp
jecxz
popf
movups
clc
or
test
dec
cmp
mov
mov
jp
jge
sub
cld
in
aas
cmc
cmpsl
sbb
adc
test
stc
or
int3
or
insl
xor
out
es
sub
push
int
inc
sbb
sub
nop
fildl
jecxz
xchg
leave
inc
ljmp
xlat
leave
idivl
test
and
sti
jno
out
xchg
inc
addr16
daa
incb
cmp
test
and
jp
push
lods
int
sbb
lcall
mov
mov
stos
and
flds
ret
ret
shl
mov
ljmp
xchg
mov
rorb
mov
mov
sub
ret
cmp
jo
mov
test
push
push
icebp
dec
pop
pop
mov
lahf
lret
inc
or
inc
fdivrl
lods
js
inc
push
ss
sub
or
jmp
pop
insl
fsubrl
xor
ficoml
nop
aaa
jae
in
or
jb
inc
xchg
rcrl
test
fs
rcrl
sbb
das
sub
xchg
imul
mov
dec
andb
imul
xchg
loopne
clc
sbb
push
jp
adc
fidivrs
and
xor
cmpsb
popf
js
mov
xchg
outsl
push
pop
cli
jae
cmp
dec
and
fs
dec
inc
cltd
mov
adc
sub
pushf
lods
insb
mov
adc
and
rclb
insl
fcoms
adc
call
mov
mov
ss
out
fstpl
iret
aad
pop
fcmovnbe
repz
xor
pop
inc
push
adc
jg
imul
push
movsl
clc
jge
cmpsb
fs
testb
aas
and
mov
ret
mov
push
mov
das
xor
divl
jge
fnstcw
pop
and
or
jmp
add
pop
pop
pop
mov
inc
jns
fmuls
cmpsb
adc
test
xchg
sbb
arpl
loop
pop
push
add
fptan
push
pop
xchg
cs
push
cwtl
mov
adc
mov
insb
inc
add
inc
ret
je
imul
shrl
push
mov
add
or
mov
dec
lahf
lock
lock
xchg
lcall
out
cltd
cwtl
pop
pop
jecxz
imul
mov
inc
dec
cmp
mov
and
pop
or
push
test
or
sbb
pop
mov
pop
add
jle
popa
mov
sahf
cmp
push
test
cld
add
dec
in
xor
sub
in
jmp
leave
and
inc
cltd
mov
ljmp
push
and
loopne
nop
leave
xor
arpl
jge
xorl
or
adc
adc
flds
push
pop
mov
mov
inc
in
aam
lret
rolb
out
inc
fsub
out
jne
lret
data16
jle
cmp
nop
add
les
clc
push
dec
loope
or
sahf
dec
mov
mov
cmp
hlt
pop
leave
push
in
mov
cli
jp
mov
aam
movsb
pop
sbb
shlb
xchg
scas
pop
push
nop
ret
int
js
sti
and
arpl
test
into
xchg
adc
xchg
pushf
inc
test
aaa
fcomps
cmp
adc
lock
jnp
adc
rcrl
sub
shl
mov
inc
push
or
jnp
in
mov
mov
pop
mov
xchg
jbe
sahf
shrb
call
popa
lods
imul
fst
xorl
shll
or
mov
dec
jns
mov
jmp
ljmp
jnp
arpl
in
dec
mov
jp
cmpsb
mov
shlb
mov
or
jns
pop
or
cmp
mov
cmp
inc
hlt
cs
sbb
push
push
out
xchg
dec
mov
sbb
push
push
imul
jnp
jecxz
sbb
mov
movsb
imul
add
cmp
push
sub
cmp
orb
fcoml
adc
jb
push
lahf
mov
mov
sub
clc
dec
pop
mov
xor
out
and
pop
inc
in
mov
sbb
mov
je
lods
inc
push
and
std
adc
rorb
inc
lock
mov
fwait
lcall
dec
data16
in
in
rolb
pop
das
add
xlat
ja
dec
and
int
mov
leave
rorl
sbb
mov
sub
cmp
mov
sarb
xor
pop
aad
mov
mov
mov
mov
xor
int3
out
jp
sub
pop
daa
xchg
rorb
push
dec
inc
and
stos
pop
iret
fs
nop
dec
pop
aam
xor
pop
and
add
jo
xor
pop
cmp
test
call
or
decb
repz
loop
and
xchg
xchg
mov
imul
sub
add
or
mov
or
shll
add
bnd
imul
out
mov
pop
fidivrs
mov
out
scas
fdivl
pusha
pop
inc
or
or
pop
push
lret
mov
pushf
or
cmp
mov
jbe
fwait
stos
push
xchg
jb
loopne
xchg
lock
mov
jne
arpl
add
pushf
cmpl
pop
jnp
mov
mov
fnstenv
sbb
pop
pop
or
add
popa
adc
cmp
cmc
sbb
xor
cmp
sbb
xchg
test
rcrb
adc
add
jo
out
addb
cmpsl
fimuls
mov
xor
mov
jge
adc
push
xchg
lret
leave
shl
loope
mov
inc
mov
enter
fnstenv
jns
mov
pop
xor
push
sub
or
and
push
insb
ds
xchg
mov
stc
add
add
popf
daa
dec
sbb
pusha
lds
dec
outsb
mov
add
js,pn
outsb
sbb
or
pop
push
stc
fnsave
or
jo
xor
mov
dec
adcb
ss
or
outsb
outsl
imul
xlat
cmp
outsb
aaa
stos
add
imul
xchg
xorl
cmp
sub
pop
inc
push
out
xchg
lcall
jno
lcall
pop
in
fidivs
in
mull
xor
push
roll
jbe
aaa
pop
movsl
stos
fcom
mov
cmpsl
sub
pop
enter
cmpb
icebp
pusha
clc
pop
or
cs
mov
cld
xor
and
dec
adc
mulb
fistl
pop
leave
cwtl
pop
ret
push
jae
bound
hlt
les
jg
sub
adc
out
or
test
lods
sahf
sti
sub
pop
out
sub
or
push
or
dec
cmpsb
xchg
sbb
test
scas
push
aaa
int3
xchg
hlt
dec
dec
mov
sbb
iret
and
sbb
es
mov
pop
mov
ds
ret
icebp
pop
xor
mov
popf
sbb
mov
cmpb
shll
fldt
inc
cmpb
adc
mov
insb
idivl
ds
fisttps
testl
sbb
mov
dec
jne
pop
cmc
xlat
popf
repnz
scas
push
outsb
icebp
in
jo
cmp
ljmp
cli
push
cmpsl
inc
je
dec
cmpsb
push
cltd
repz
xchg
ljmp
enter
test
mov
imul
or
mov
jle
push
test
inc
inc
ror
rcrl
fstps
or
pop
rorl
adc
jle
cmp
mov
ffree
repnz
loope
mov
movsl
jo
stos
cmp
call
mov
out
pusha
cmp
cwtl
jne
stc
mov
lcall
cld
pop
push
mov
push
push
mov
add
repz
js
inc
mov
addr16
iret
stc
das
outsl
mov
inc
movsl
lcall
push
adc
sub
dec
sub
mov
cmp
mov
arpl
jmp
fwait
or
fcmovbe
aaa
cmp
dec
aam
mov
jg
push
loope
lods
and
orb
hlt
cs
and
adc
pop
rcrl
iret
mov
inc
xchg
test
fsubs
insb
rclb
pop
mov
decl
and
xchg
mov
mov
scas
arpl
xlat
bound
pop
push
xchg
addb
fisttps
push
add
sub
scas
fstps
mov
mov
push
xchg
xor
shrl
xor
and
js
or
xchg
sub
xchg
ljmp
adc
mov
repz
mov
les
scas
xlat
in
push
or
lods
rorb
fnstsw
add
fists
lods
fnstsw
adc
inc
add
and
lods
sbb
mov
stos
or
dec
dec
mov
test
push
xchg
adcb
or
stc
sbb
jne
call
mov
shlb
xor
bound
scas
js
sub
cmpsb
popf
stc
dec
pop
call
add
sti
lock
orb
andl
mov
loop
les
arpl
ds
mov
xor
daa
idivb
cs
cli
jmp
out
jnp
and
popa
sbb
dec
scas
pop
andb
fcompl
cmp
or
loopne
insb
out
int3
daa
shrl
in
jl
cmp
cmp
call
sbb
xchg
popl
clc
pusha
nop
inc
inc
addr16
std
imul
mov
sti
bnd
mov
and
subl
inc
aas
adc
in
lea
inc
stos
add
fsts
dec
inc
or
scas
inc
ds
imul
stc
pop
or
adc
push
pop
dec
mov
push
push
mov
sub
addr16
and
or
lds
cmp
jae
out
push
scas
mov
out
lret
add
pushf
fcomps
inc
push
and
cmc
cmp
jnp
scas
cs
stc
lods
in
jle
aad
mov
mov
push
and
mov
orl
das
dec
push
cmpsl
dec
mov
shrl
push
in
cltd
inc
hlt
mov
mov
mov
lds
in
mov
in
iret
lcall
aad
or
lea
inc
jnp
outsb
stc
loop
sti
lret
xor
movsl
sbb
push
pusha
pushf
rcll
push
addr16
mov
bound
hlt
xor
jge
dec
int3
add
into
test
pushf
ljmp
idivl
mov
mov
inc
push
orb
mov
popf
aam
mov
fistps
les
push
adc
adc
sbb
pop
adc
lods
xchg
mov
sti
dec
cwtl
pop
adcl
subb
ficompl
int3
aad
push
inc
jg
dec
shrl
mov
xlat
cmp
ja
hlt
push
lcall
jb
xor
xchg
sbb
sbb
sti
adc
push
jle
out
lds
sub
mov
or
and
mov
jmp
adc
cli
pop
lock
inc
out
hlt
fmul
in
cmpl
fdivrl
lds
test
mov
mov
cmp
mov
arpl
into
pop
add
loop
jns
sbb
jle
arpl
es
xchg
add
sub
mov
test
adc
hlt
sar
dec
movsl
test
xor
pop
sub
fcoms
xchg
jecxz
sarb
xor
fistpl
pop
lock
push
push
mov
or
in
add
insl
sti
xlat
mov
lahf
and
sbb
mov
push
sub
mov
jno
test
out
and
loopne
out
inc
data16
push
adc
cmpsb
mov
cmp
xchg
xchg
mov
dec
dec
sub
ss
scas
push
jb
adc
popa
lock
jnp
and
xchg
movsl
shll
int3
out
lret
inc
mov
push
lock
sbbb
mov
push
into
mov
cmp
out
ss
xor
fadds
push
imull
pop
cmp
mov
sub
pop
ret
rclb
aad
sbb
cmp
xor
jns
mov
jo
mov
call
cmp
mov
add
enter
loopne
push
pop
mov
add
in
into
std
leave
mov
mov
ljmp
lods
addb
and
lock
into
data16
mov
add
mov
out
cwtl
ror
cmp
popf
cli
adc
jae
jmp
cmpsb
push
imul
inc
xchg
jb
cld
adc
mov
test
xor
xor
push
sbb
dec
pop
sbb
ficoml
mov
add
scas
and
aaa
xor
rorl
push
add
dec
fwait
cmc
or
icebp
into
dec
jl
outsb
lret
ljmp
ja
out
movsb
test
stc
or
xchg
xchg
aaa
mov
ficoml
popl
outsb
fdivrl
xor
xorb
mov
xor
inc
filds
or
dec
jnp
adc
mov
lds
sahf
mov
add
push
sarl
cmp
mul
dec
lods
enter
in
daa
add
adc
inc
fcmovne
mov
adc
mov
cmp
cmp
mov
imul
repz
adc
mov
jnp
divl
loop
loop
or
cltd
subl
pop
ja
data16
das
jl
adc
out
push
fst
or
or
and
jns
or
std
push
cmpsb
lahf
add
adc
movsl
xlat
sub
test
push
stos
subb
fdiv
jmp
and
enter
ret
subl
push
jp
or
mov
out
js
push
mov
shlb
ret
addr16
mov
pushf
je
add
cmp
nop
sahf
xor
sahf
aad
loope
dec
xchg
sbb
push
jns
pop
jo
adc
xchg
pop
push
xchg
in
test
ss
das
mov
sbb
xor
subl
add
cmpl
cli
or
sbb
mov
mov
fiadds
mov
mov
cmp
flds
jmp
test
aaa
stos
inc
or
aam
pop
inc
daa
push
inc
dec
inc
xchg
jbe
arpl
nop
jae
mov
shrb
std
fstpl
add
mov
jo
inc
xchg
test
jnp
jae
sbb
or
cmp
pusha
div
jecxz,pt
jmp
fmulp
dec
ficompl
lods
outsb
rcrb
in
xchg
ljmp
push
test
and
xchg
and
repnz
push
jle
sbb
xlat
mov
loope
inc
fnsave
aas
rcll
fldl
decb
jns
je
cmp
adc
das
mov
das
cmp
popf
ret
stc
addb
sbb
adc
lcall
stc
cmp
sahf
mov
adc
inc
int
inc
jl
pop
cmp
push
sub
fldenv
inc
mov
arpl
out
popa
add
cmp
dec
aaa
xchg
jno
pop
sahf
add
stc
dec
mov
lods
cs
popa
aam
xlat
sub
add
bound
push
mov
negl
and
scas
mov
mov
add
fldenv
out
pop
mov
outsb
movsb
fsubs
stos
sbb
decl
inc
xchg
mov
and
lret
sbb
jns
adc
bound
lock
iret
and
out
lcall
movsb
out
sub
mov
xchg
addl
sti
aas
sbb
mov
adc
push
or
or
call
mov
sub
lea
into
adc
shll
sbb
dec
fwait
js
jae
dec
iret
mov
cmp
mov
ret
testl
sub
mov
scas
in
and
jle
pusha
in
test
iret
lds
into
setnp
ret
push
sbb
sti
and
arpl
mov
ja
jle
add
jbe
clc
aaa
xchg
cmc
push
or
inc
add
data16
and
cs
xor
mov
test
lret
jo
rorl
stos
mov
ss
arpl
inc
jnp
pop
popw
fxch
test
arpl
push
push
fnsave
and
lcall
insb
push
mov
shlb
movsl
mov
fstl
fmul
pop
add
mov
sub
data16
add
popl
inc
sub
pop
fidivrl
repz
das
cwtl
dec
xchg
scas
fdivrs
lahf
subl
sbb
add
loope
es
adc
fisubrl
pop
inc
aaa
cs
add
sbb
push
hlt
lret
loope
lods
inc
inc
test
int
lea
xchg
divl
mov
adc
cmp
xor
dec
int3
es
popa
or
jb
mov
pop
mov
fwait
rcr
jne
movsl
xchg
xchg
fisubrs
mov
jg
ret
cmp
push
mov
andb
adc
decb
sub
cmc
out
mov
sbb
fsubl
push
push
cmc
cli
jns
jecxz
add
es
mov
mov
loope
movsl
sbb
xor
xchg
js
jb
insb
cmc
add
repz
push
and
int3
ljmp
decl
jecxz
fwait
mov
rcl
call
push
add
fisttps
mov
pop
outsl
std
push
mov
data16
inc
rcrb
mov
and
int3
loope
stos
sub
sbb
xchg
sub
in
rcll
xchg
lods
notb
out
mov
lds
add
jnp
adc
je
or
jb
inc
out
mov
inc
xchg
adc
jp
decb
ja
push
jmp
inc
push
adc
stos
sub
adcb
in
shlb
jnp
push
push
hlt
push
sub
lods
pop
stos
xchg
data16
enter
dec
lahf
jge
ljmp
cmp
mov
add
sbb
call
push
mov
pop
push
repz
jmp
jb
cmp
sarl
lods
jnp
push
dec
gs
jbe
mov
int3
mov
cmpsb
daa
aas
jecxz
mov
add
xor
das
stos
push
or
rcll
jle
mov
push
daa
popa
clc
in
ljmp
pop
es
ret
sbb
push
or
int
lret
mov
xor
in
arpl
sub
fs
mov
lock
sub
add
push
lcall
or
sbb
adc
dec
cmc
sbb
mov
fistpll
mov
inc
mov
inc
ret
mov
adc
inc
jb
push
cwtl
sub
jmp
repz
movsl
aam
push
dec
mov
jge
js
pop
lret
test
stc
adc
popa
mov
adc
xor
jo
push
lret
movsl
ud0
pushf
inc
push
cwtl
mov
mov
mov
aam
and
sub
add
bound
icebp
mov
icebp
or
mov
pop
add
sub
push
subl
mov
sbb
mov
push
ret
and
test
movsb
stc
mov
xor
mov
adc
mov
cmp
sarb
sahf
adc
leave
pop
mov
shlb
sub
cmp
pop
mov
pop
jno
mov
bound
cli
stc
xchg
dec
lock
mov
jns
mov
add
ficoms
push
lds
test
lret
jle
mov
pop
enter
xchg
lret
bswap
pop
pop
in
sub
push
jle
ja
enter
adcl
cmp
test
pop
cmp
idivb
pusha
xchg
mov
dec
jmp
in
outsl
mov
pop
push
sbb
movsl
sub
mov
push
imull
sub
lods
mov
push
mov
or
cmpsb
call
pop
movsl
add
lcall
xchg
call
xorb
cmc
lret
cmpsb
fiadds
dec
sbb
push
ss
mov
or
push
ljmp
push
add
mov
nop
or
cmp
mov
pop
adc
mov
dec
push
loope
adc
int3
cmp
cld
imul
adc
shr
out
sub
pop
es
mov
cmp
movsb
sti
pop
roll
dec
push
push
sub
int
inc
scas
push
pushf
xchg
add
push
movswl
push
or
das
out
js
sub
test
dec
les
inc
add
jae
adc
in
dec
xor
stc
dec
sub
shrl
xor
popf
mov
inc
mov
add
adc
orb
mov
inc
lret
clc
sub
pop
lahf
sahf
dec
dec
xchg
pop
mov
jns
fadds
ficoml
pop
or
inc
cltd
push
xor
lcall
adc
popf
jae
cmc
insb
mov
gs
loope
mov
adc
lods
and
push
mov
or
adc
and
jns
and
xchg
aam
push
mulb
xchg
addb
movsb
sbb
cs
dec
iret
out
bsr
orl
repnz
je
inc
push
pop
push
pop
in
loope
pop
pop
push
sub
sub
pop
lea
inc
push
add
pop
mov
sbb
jmp
cltd
outsl
das
std
call
inc
scas
mov
cmp
test
arpl
cld
int3
imul
rcrb
sub
jns
in
or
fcompl
sub
aas
sbb
dec
loope
iret
sub
cmp
cmpb
into
int
cld
cli
mov
in
inc
fistpll
shrl
jg
ror
push
mov
test
cmp
pop
test
mov
xchg
idivb
mulb
mov
mov
mov
imul
adc
xchg
inc
fmull
jmp
pop
or
lcall
fwait
mov
scas
inc
orb
shl
fwait
add
fnstenv
cmpsl
stc
or
out
test
popf
lcall
and
dec
arpl
pop
mov
lcall
adc
jmp
cmpsb
mov
dec
loop
push
mov
cmp
cmpsl
lcall
arpl
sub
es
mov
fdivs
xor
loop
xchg
mov
jae
adc
jmp
notl
imul
insb
fxch
popa
mov
jno
mov
jnp
insb
int
sbb
sbb
and
push
jp
js
mov
mov
adc
pop
xchg
fcomip
xchg
in
cmpsb
jo
out
lods
push
out
inc
add
pop
xor
loope
push
jo
icebp
xchg
dec
cmp
mov
into
aad
in
loopne
jmp
testl
jmp
jg
ss
std
ffreep
cli
sbb
imul
push
test
push
sbb
and
es
iret
and
inc
test
sbb
cmp
mov
cs
icebp
pushf
mov
push
test
mov
xor
scas
dec
adc
mov
mov
fstps
imul
js
inc
dec
aaa
ds
dec
adc
inc
push
xchg
push
sahf
add
dec
push
data16
cmp
leave
adc
out
imul
scas
pop
mov
stos
sbb
inc
xchg
sub
fbstp
jno
aas
or
and
mov
sti
push
fcmovnbe
mov
in
ret
movsl
ds
lods
lea
int3
dec
lock
jl
pop
aas
mov
scas
jmp
sbb
mov
dec
or
pusha
jno
sbb
rcl
cmp
mov
sub
mov
repnz
iret
xor
imul
stc
mov
xlat
hlt
inc
xor
in
std
sbb
pusha
pop
add
andb
adc
imul
adc
adc
jmp
cmpsl
fimull
pusha
stos
jg
inc
jno
cmp
xor
cltd
repz
fisubrs
roll
out
outsl
sub
shll
arpl
push
dec
lcall
and
and
mov
cmpl
cmp
lcall
dec
inc
lahf
push
push
orb
dec
movsl
loope
jmp
mov
xor
push
pop
xor
lret
lahf
sub
idivb
inc
mov
loope
es
add
and
test
imul
xor
mov
push
add
xchg
add
sbb
cmp
jecxz
jge
mov
xlat
mov
ror
mov
das
adc
jle
mov
mov
cmp
movsl
mov
push
testb
mov
sbb
test
cs
aaa
lahf
mov
stc
lods
jne
push
test
stos
in
pop
inc
sbbb
push
out
sbb
ds
dec
stos
aad
lea
aam
rorb
test
mov
mov
aas
sti
xchg
insl
sahf
inc
rorl
ja
xchg
mov
rorl
stc
fldenv
push
std
sub
xchg
cmp
xchg
lds
lahf
pop
pop
xor
cmpsl
mov
cmp
jg
imul
sbb
insl
or
mov
ss
inc
aam
sub
xchg
les
std
sbb
mov
mov
repnz
jmp
jmp
into
mov
jo
and
xchg
lods
dec
mov
hlt
fcomps
imul
dec
and
add
mov
sbb
test
jge
enter
insl
pop
cmp
xor
lret
or
xchg
sahf
and
push
inc
loopne
cld
mov
iret
insl
ret
or
pop
fldt
test
or
sub
decl
cld
pop
add
loope
jns
pop
jge
lret
add
push
andl
jns
movsb
or
adc
cmp
subb
sahf
arpl
or
je
fists
and
enter
gs
jbe
xor
sub
adc
mov
stc
insl
mov
dec
lret
inc
fwait
imul
outsl
idivl
xchg
adc
adc
sub
push
xor
or
jae
jno
dec
sub
loopne
mov
or
es
or
jbe
and
imul
push
mov
fisubl
ljmp
xchg
sbb
test
xchg
add
lea
or
lock
mulb
mov
dec
test
xlat
sbb
daa
cmp
push
push
enter
mov
out
cmp
xlat
daa
mov
js
xchg
cwtl
xor
aaa
lods
inc
mov
aaa
xchg
lods
ljmp
pop
les
cmp
jnp
or
push
add
lods
pop
jne
jo
xchg
mov
jne
mov
mov
push
shl
xor
sarl
and
jb
arpl
push
or
sub
jg
in
out
xchg
jge
movsb
movsl
in
xchg
mov
jb
xor
xchg
data16
fs
inc
std
hlt
lahf
jmp
sub
lods
xor
fistpll
pextrw
xchg
leave
adc
add
sahf
xor
jecxz
les
shll
loop
add
mov
sub
dec
or
cmpsb
mov
or
jle
xchg
in
push
aam
stc
dec
loopne
xchg
lea
cmp
mov
adcl
cmpb
jo,pt
pushf
or
pop
inc
enter
les
inc
stos
sub
clc
jae
fisubrl
int3
inc
mov
cmpsb
data16
xor
push
leave
sbb
sbb
add
fldt
mov
dec
cs
push
adc
jne
push
pop
pop
mov
dec
mov
or
gs
pusha
setge
mov
cmpsb
bound
fimull
out
sbb
add
push
mov
fstpl
addl
aam
gs
sahf
sahf
dec
mov
pop
std
ljmp
inc
inc
subl
in
cmp
xorb
or
lret
mov
pop
filds
pop
push
jmp
in
out
gs
pop
cmp
call
jns
cwtl
or
add
dec
lret
adc
fstl
pop
mov
cltd
lret
jne
int
popf
ffree
cmp
dec
mov
lret
jge
add
mov
xchg
xchg
jb
nop
sub
mov
mov
mov
das
rolb
out
adc
mov
rorl
jae
into
mov
mov
cltd
mov
mov
cltd
mov
popf
cmp
mov
xor
lret
sub
and
push
inc
mov
or
int3
fistl
lea
xchg
insl
fldenv
sbb
add
add
sbbl
fs
cmp
inc
add
lret
mov
scas
push
fdivl
in
mov
popf
inc
push
and
inc
into
and
test
repz
push
xchg
rorb
ret
fnstenv
jbe,pn
add
jbe
dec
mov
ja
mov
mov
sub
ljmp
cmp
xlat
mov
sbb
test
lret
jns
add
xchg
enter
add
loop
jge
mov
mov
addr16
pop
push
mov
test
lds
xor
xchg
jne
mov
test
mov
mov
jg
fndisi(8087
mov
cltd
rcrb
mov
sbb
xor
and
cld
or
fchs
xor
out
inc
std
mov
ret
addb
fnstenv
adc
sub
and
mov
dec
pop
aam
aas
in
popf
mov
lods
jno
lea
dec
aas
jecxz
addl
xchg
and
push
and
jae
loopne
xor
lret
outsl
cmc
fisubrs
aas
fildl
cwtl
adc
jp
add
aas
pusha
aad
jae
add
pushf
and
add
push
mov
sub
push
sbbl
push
stc
in
sub
fbstp
rcrb
cmp
pop
mov
jo
lock
add
mov
pop
das
and
and
mov
repz
je
lahf
dec
imul
and
sub
in
mov
sub
push
sbb
mov
stos
adc
out
ss
sbb
or
jb
jbe
xor
ljmp
jnp
aas
mov
sub
outsb
push
push
xchg
pushf
insb
rolb
inc
xor
push
jns
mov
push
push
sbb
out
pop
sar
loopne
aas
lret
dec
sarl
xchg
mov
jno
out
pusha
xchg
cli
inc
movsl
lcall
push
sbb
pop
mov
sbb
out
and
dec
jle
int
cwtl
push
jecxz
shlb
dec
xorl
xor
fwait
sti
add
pushf
adc
jns
push
xor
ret
cmpsl
leave
and
and
or
xor
mov
lret
popf
and
push
cli
arpl
mov
lods
xor
xor
adc
aam
jmp
inc
mov
cmp
movsl
scas
adc
rcll
xor
ret
lret
iret
xor
test
test
xchg
cmp
mov
scas
xor
cli
sbb
dec
jle
jns
clc
shlb
icebp
mov
push
push
xchg
mov
sub
push
adc
add
push
sub
sbb
and
mov
push
add
xchg
xor
cmp
movsb
add
push
loop
mov
dec
inc
pop
aam
jecxz
mov
fmulp
pusha
lret
xchg
pop
adc
inc
fst
adc
rorl
iret
cltd
lds
into
pop
aad
push
fists
xchg
stos
mov
pop
adc
mov
push
in
test
sbb
pusha
icebp
popf
sbb
jp
mov
sub
xor
inc
cmpsl
mov
les
cld
mov
pmullw
loope
fwait
jb
rclb
clc
push
xchg
sbb
or
inc
shrb
mov
sahf
push
loope
hlt
mov
push
inc
mov
iret
mov
push
mov
daa
sub
lods
loopne
xchg
arpl
aam
pop
xchg
outsl
negb
xor
cltd
ss
push
jae
push
in
jl
cld
lock
iret
lcall
call
pushf
fisubs
cmp
jo
aam
pop
mov
fldcw
and
push
jg
subl
repnz
push
mov
repz
adc
arpl
mov
imull
cmp
jp
sbb
les
xchg
pushf
fdivrs
cmp
xchg
ja
dec
test
pop
sbb
push
pop
adc
sub
test
xchg
daa
ljmp
pop
subl
mov
and
pop
xchg
cmp
push
xor
ja
data16
fwait
aas
mov
aaa
sti
enter
lret
inc
jo
add
xchg
fsubl
movsb
mov
clc
fstps
add
aam
ss
js
pop
adc
jne
mov
push
cli
outsb
or
push
js
int
mov
xor
dec
pop
mov
lods
and
aaa
adc
movsb
daa
adc
aas
xchg
mov
mov
pop
dec
test
ja
sbb
les
add
dec
mov
js
lea
mov
cmp
pop
xchg
adc
push
xor
rcl
fcomps
inc
mov
cmp
push
inc
xor
sub
lea
adc
jno
out
addr16
cwtl
cld
cmp
xchg
and
xchg
xor
dec
mov
orb
mov
je
xchg
mov
cmp
and
or
xchg
fcmovnu
aas
lock
scas
push
test
inc
lock
jecxz
ret
adc
sub
jo
adcl
inc
sbb
das
fildl
adc
clc
jecxz
cs
fsubp
dec
sbb
ljmp
add
mov
xorb
inc
pop
mov
and
call
popa
stos
inc
xchg
dec
lcall
sub
jp
or
fisubl
sbb
mov
jl
outsw
fbld
loope
adc
lret
fadds
popf
jb
pushf
mov
add
add
cs
notl
dec
sub
mov
enter
scas
xchg
mov
out
int
data16
rep
xor
dec
adc
stos
in
xor
pusha
lret
cli
jno
repz
roll
push
fnsave
into
xchg
jmp
xlat
inc
fidivs
add
lahf
shlb
xchg
jl
mov
shll
cmp
scas
xchg
dec
shrb
popf
add
shlb
aam
jne
test
xchg
mov
enter
adc
pusha
xlat
jg
push
jne
add
and
jmp
int3
stos
call
ds
jle
fmull
push
mov
mov
adc
rcrb
sahf
gs
repz
ja
loop
int
decl
movb
test
nop
xchg
repz
ret
rorl
xlat
shll
inc
push
repnz
test
fstps
enter
sub
insb
push
iret
fnstsw
arpl
inc
xchg
or
add
arpl
fstl
ficoms
mov
enter
test
adc
jno
testl
add
adc
xor
mov
loop
movsl
ljmp
mov
call
fsub
in
dec
push
mov
sbb
or
js
inc
cmpsb
sbb
push
sbb
jns
addr16
xor
ljmp
dec
stos
mov
xchg
cmp
test
sbb
sar
out
stc
pop
cmp
mov
ja
in
dec
push
int
pop
cld
mov
das
loope
mov
xchg
or
adcl
pop
fnstsw
sbb
jp
mov
push
cwtl
xor
mov
cmp
cmp
mov
mov
mov
fcos
dec
mov
xchg
jmp
jno
mov
lods
loope
lods
fwait
push
xorl
xor
into
mov
fnsave
test
mov
pop
cmp
js
xor
pop
push
out
pop
lcall
std
push
xchg
addr16
pop
ret
inc
cmp
lret
test
pop
and
lahf
xchg
mov
add
jmp
mov
movsl
shlb
xor
lods
cmp
xchg
int3
dec
xor
adc
jns
push
addr16
cmp
xor
and
pmaxub
lahf
idivl
test
movsl
adc
jae
xlat
jo
stc
cmp
add
aas
lods
movsl
fisttpll
pop
mov
and
push
mov
inc
lods
ljmp
js
adcl
rcrl
xorb
or
test
sbb
xchg
or
jmp
dec
xchg
mov
sub
std
sbb
gs
mov
mov
bound
xlat
or
inc
dec
jg
lods
divb
mov
add
jl
cmpl
push
xor
fbstp
xchg
xchg
sahf
lret
or
jnp
outsb
sub
push
loope
mov
adc
dec
push
xchg
lret
sub
ret
rorl
push
and
bound
sbb
push
mov
std
mov
mov
test
mov
shrl
jnp
sarl
lahf
call
adcb
mov
sbb
iret
dec
incb
mov
insl
test
cltd
jp
loopne
push
xor
xchg
js
cli
mov
jns
xchg
filds
std
pop
add
push
mov
lret
addl
lret
mov
ljmp
pop
cmp
sbb
sti
xor
xchg
aas
cltd
sub
jp
addr16
and
sub
cmp
dec
xchg
ljmp
in
test
cmp
inc
mov
jge
daa
adc
jno
push
and
call
fdivrs
mov
fmuls
sti
sbb
push
addps
dec
aas
or
pop
repz
jge
cltd
les
testb
aas
mov
sbb
sahf
stos
gs
stos
ds
sbb
test
xor
in
add
cmp
je
lret
insb
mov
int3
flds
adc
or
lcall
cmpb
rcl
mov
or
insb
pop
sarl
gs
je
pop
inc
bnd
bndldx
cwtl
push
cmc
repz
lds
inc
fisubrl
nop
in
mov
fmulp
push
hlt
cli
jne
aas
inc
cmovle
jo
jnp
loopne
ja
aas
out
jle
xor
pusha
jae
ficoms
int3
xchg
mov
mov
sbb
aaa
test
jo
mov
push
xor
daa
inc
psadbw
loopne
stos
aaa
inc
test
lods
and
pop
cmp
out
outsl
andb
sub
and
mov
mov
aas
and
mov
aad
lcall
sub
ficoms
jmp
xor
loope
mov
push
adc
dec
in
iret
fs
mov
jmp
insb
lret
lods
add
loop
xchg
les
pop
xchg
cmovne
cmp
pop
xlat
jge
mov
sub
mov
idivb
jae
repz
lods
outsl
ror
popf
repnz
push
push
pop
adc
data16
xlat
xchg
out
imul
popa
jae
push
cli
sbb
jge
mov
pop
xor
mov
inc
and
arpl
jo
and
sbb
insb
pusha
cmpsl
scas
loopne
cmp
cwtl
lock
or
or
iret
loopne
xlat
mov
je
loopne
mov
pop
out
mov
fs
aaa
pop
adc
add
add
loope
inc
cmc
push
jl
jnp
bound
daa
movsb
data16
dec
xchg
add
inc
cmp
stos
test
mov
mov
idivl
loopne
arpl
mov
sarb
mov
inc
jp
hlt
paddb
jmp
inc
jge
lret
jne
push
inc
stc
mov
insb
jno
mov
xor
jg
ds
sbb
cld
je
mov
enter
add
adc
cmp
pop
imul
into
jo
cmp
jl
xchg
pop
ja
mov
add
roll
or
pushf
adc
mov
imul
push
jne
int3
push
loope
arpl
sbb
mov
adc
lock
das
rcrl
out
mov
testl
lret
jne
out
mov
sahf
testb
mov
xchg
push
push
outsl
cmp
dec
addl
leave
and
xchg
dec
insb
mov
aam
or
lret
add
sub
add
jne
cltd
cmpsb
neg
cmc
outsb
test
out
push
int
xchg
ja
pusha
add
mov
jns
jb
imul
adc
leave
test
mov
inc
ret
fcompl
xchg
xchg
aad
mov
jge
push
jns
mov
dec
ja
cs
pop
ja
das
test
hlt
test
xchg
jne
jo
cmp
fcoms
push
sub
xor
xchg
outsl
and
ljmp
pop
scas
jl
cmp
cmp
arpl
addr16
push
in
jnp
mov
dec
dec
mov
jbe
sbb
gs
ficomps
mov
xor
enter
sti
push
jge
fsubrp
cmp
scas
iret
add
rcrb
or
shl
dec
inc
stos
punpckhdq
cmp
pop
xor
mov
test
inc
pextrw
mov
sub
push
sub
cmpsl
sar
and
cmp
sbb
sti
sub
xchg
outsl
and
jmp
dec
pop
mov
push
fcmovu
cmp
loope
xchg
fcomps
push
cmp
cmc
dec
add
dec
inc
subb
imul
inc
jae
cvtps2pi
cli
jg
in
lds
pop
sub
push
mov
in
inc
jmp
lea
pop
lcall
je
shlb
js
mov
dec
in
add
insl
enter
mov
outsb
add
ret
pushf
dec
push
test
sub
fbstp
and
dec
orb
imul
mov
test
push
adc
repz
shlb
adc
mov
jno
sub
mov
popf
lods
shl
mov
jp
std
adc
mov
push
and
xchg
fistpll
xchg
pop
imul
sub
xchg
inc
lret
test
loop
in
aaa
loope
orl
and
mov
popa
jnp
jg
xchg
mov
or
and
lods
popa
in
mov
rorb
adc
je
or
sub
cmpb
cmp
movsl
sub
js
sbb
inc
mov
popf
insl
loop
fnstsw
test
push
cmp
pusha
mov
and
sub
add
fiadds
push
mov
in
fwait
add
cmp
jle
int3
xor
push
aas
mov
in
xor
scas
sbb
int
mov
jmp
inc
and
pop
cmpsl
lcall
loope
adc
mov
mov
call
push
sub
pop
lret
push
lods
lods
push
jnp
sbb
xchg
bound
das
mov
inc
repz
popa
call
sub
jnp
xchg
inc
lods
mov
cld
dec
lods
repnz
mov
popf
insl
js
scas
aam
loop
adc
xor
dec
push
lahf
pop
movsl
adc
repz
fisttps
inc
outsl
or
xchg
fucomip
mov
cmp
sub
and
inc
lods
outsb
repnz
xor
or
mulb
dec
cmp
repz
mov
mov
lods
mov
pop
jae
adc
cmp
inc
cli
cli
xchg
jo
scas
jg
cmpsl
mov
sub
xorl
xchg
ss
push
je
cmp
jb
push
and
or
cmpl
jae
xchg
or
jmp
sarl
je
add
add
in
and
push
ret
dec
mov
scas
ret
decl
fldenv
lock
mov
push
cmpsl
pop
mov
movsb
push
xchg
and
mov
scas
and
add
add
outsb
pop
aas
stos
pop
cmp
jl
popl
in
popf
sbb
xor
in
adc
mov
inc
mov
mov
cmp
movsb
push
data16
sub
shlb
lock
fnstsw
inc
sub
pop
aaa
fiaddl
rclb
lods
mov
xor
fcmovu
xchg
arpl
stc
mov
cmp
subb
cmp
mov
inc
mov
pop
mov
mov
enter
insb
je
bound
xchg
xchg
push
bound
ds
shr
test
mov
push
cmp
add
xchg
inc
lods
pusha
pusha
add
lds
dec
dec
and
ds
push
and
and
or
fisttpl
mov
lea
dec
aaa
mov
mov
aad
add
cmp
push
mov
add
cmpsb
lds
xor
cmpl
mov
ljmp
dec
test
push
xchg
repz
test
pop
mov
daa
mov
lcall
jmp
mov
cmc
lret
insb
out
mov
sbb
in
push
push
fisubs
pop
popf
cmpsl
push
push
rcrl
fstpt
cmpsb
adc
mov
sbb
or
in
and
shrl
ljmp
adc
dec
aam
sub
inc
jb
int3
xchg
popf
jmp
cmc
test
cmp
test
cmp
aas
pop
lds
or
add
jmp
jecxz
sub
test
pop
lods
xor
xor
das
and
inc
lret
mov
push
dec
jmp
add
cld
pop
adc
cmp
int3
stc
call
sarl
leave
mov
rcll
icebp
lahf
hlt
out
dec
add
push
test
icebp
mov
add
lods
js
test
inc
push
test
adc
andb
mov
mov
xor
xchg
scas
popf
mov
xchg
in
fst
test
lcall
and
rcll
pop
xchg
maskmovq
adc
lea
dec
loop
pop
in
push
add
pop
sub
xorb
enter
movb
dec
pop
es
bound
movsl
lcall
aam
cmp
push
call
xchg
mov
outsl
push
adc
hlt
outsb
and
cmc
test
adc
sbb
or
test
or
mov
or
call
jo
inc
pop
leave
jle
xor
jle
sbb
scas
dec
jnp
in
mov
mov
add
mov
add
xor
out
pop
in
in
adc
out
or
push
dec
test
lods
xor
pop
loopne
test
fdiv
dec
pop
pop
rorl
adc
fdivrl
fidivl
cwtl
sbb
jno
gs
gs
fstl
jmp
mov
push
fistpl
int3
sarb
ds
pop
inc
int
push
call
js
das
iret
popf
mov
add
out
sbb
jle
fldenv
outsl
ss
in
mov
and
push
pop
popa
push
add
popa
es
pop
sbb
jp
out
xchg
test
mov
fldt
push
fists
xor
fnstcw
neg
cmpsl
icebp
xor
mov
pop
icebp
mov
push
mov
inc
daa
pop
pop
mov
test
int
inc
push
fwait
js
jbe
add
and
test
daa
adc
pop
inc
or
pop
jb
or
fdivs
hlt
rcrl
lcall
mov
out
jne
fwait
jl
cmp
hlt
cmp
mov
out
mov
repnz
xor
iret
xor
lea
add
jo
cmc
in
jecxz
mov
and
shlb
test
mov
push
hlt
push
jo
iret
jle
inc
and
mov
movl
loop
mov
imul
das
mulb
rcr
stc
movsl
dec
mov
and
test
mov
ret
test
sbb
call
sbb
outsb
xchg
adc
add
das
pop
cld
rolb
push
mov
in
mov
cmp
inc
xchg
fisubrl
sarb
test
cmp
xlat
fidivrl
psubw
dec
ja
lea
enter
adc
add
mov
dec
fnstcw
mov
mov
repz
xchg
shrl
pop
insb
dec
popa
fisttpll
dec
mov
mov
push
push
mov
shrb
cmp
sar
jo
xchg
mov
and
imul
leave
cmp
inc
pop
pop
and
jnp
cmp
sbb
jnp
push
xor
mov
fwait
mov
xchg
test
leave
inc
push
pop
lahf
or
dec
lret
sub
cli
test
out
fwait
xor
rorl
pop
mov
js
js
lock
pop
aas
icebp
cmc
jo
ja
ss
popa
lods
mov
fwait
mov
popf
mov
push
jo
hlt
repz
mov
insb
clc
pop
jmp
cs
pop
in
xchg
rcrl
pop
js
dec
mov
outsl
imul
mov
inc
push
iret
gs
jmp
fwait
mov
pop
fcoml
bound
mov
aaa
insl
cwtl
xlat
xor
and
mov
loopne
adc
push
pop
scas
mov
int
mov
in
mov
push
pop
xchg
mov
mov
dec
push
push
mov
jg
in
fsubr
aaa
loope
inc
mov
mov
scas
mov
pop
sbb
xchg
fmuls
jns
fwait
outsb
shlb
pop
push
and
pop
cltd
dec
ja
sub
and
shlb
stos
std
sbb
ret
imul
lea
push
lods
jge
lret
sti
xchg
sahf
push
sub
xor
cld
jbe
add
popf
movsl
pop
es
inc
cmp
push
mov
jmp
dec
mov
sbb
out
scas
fistpll
pop
jp
mov
loop
out
pop
in
inc
jbe
mov
fidivs
jge
insl
xchg
sub
or
pop
push
out
push
jge
push
std
loope
stos
mov
pop
fs
mov
pop
pusha
call
or
adc
test
mov
jno
or
dec
xchg
mov
addr16
xor
fs
out
outsb
and
jecxz
mov
mov
jecxz
pusha
addr16
sarl
add
jecxz
lods
pop
ficompl
cmp
pop
lret
pushf
mov
pushf
mov
and
xor
adc
fbld
outsb
stos
ds
das
jecxz
outsb
hlt
or
cmp
xchg
mov
xor
shlb
iret
in
push
xchg
in
mov
in
xchg
xchg
xor
imul
pop
xchg
rcll
cmc
fnstcw
jl
sbb
out
fnstcw
les
rcll
dec
rcrb
jns
adc
repz
mov
out
in
dec
cmp
push
jno
sub
xlat
push
pop
imul
and
or
aas
adc
sbb
push
sbb
or
inc
idivb
mov
xor
jns
pop
xchg
add
arpl
push
enter
test
jo
jnp
into
js
adc
cltd
mov
jl
iret
xchg
xchg
loop
sbb
sbb
cmc
cmpsb
cmc
mov
xor
sahf
cmp
push
loope
pop
fnstcw
cwtl
push
mov
sub
lcall
je
jl
mov
mov
or
and
cmp
cmp
and
push
fsubrl
mov
cs
data16
jecxz
sbb
mov
clc
mov
shlb
lds
stc
out
xor
aad
jmp
int
js
cs
outsb
xchg
sar
dec
lahf
xchg
mov
lcall
adc
and
push
jb
aad
sar
jmp
nop
jbe
push
test
mov
popf
inc
adc
in
lcall
out
rclb
aas
mov
or
repnz
call
gs
lret
sub
cmp
or
lods
pop
fcompl
xchg
sti
sbb
lahf
sub
push
lea
sti
mov
xor
cmp
dec
stc
dec
clc
insl
mov
dec
ja
xor
shrl
add
jle
mov
fsqrt
dec
out
push
mov
jl
mov
cmp
es
xchg
cmp
cld
in
test
dec
movsb
mov
popf
and
dec
repnz
and
jge
mov
in
jp
mov
jecxz
add
shlb
cli
pop
xchg
xor
stos
jecxz
push
dec
addl
adc
mov
cmp
jbe
aam
stc
in
inc
xchg
aaa
jbe
inc
inc
lret
cmp
in
mov
fnstsw
adc
into
cmp
aad
mov
dec
in
push
inc
xor
add
xchg
das
xchg
jg
push
push
jmp
sahf
xor
adc
cmpl
mov
movsl
jb
xlat
xlat
pop
lcall
ja
lret
push
aad
mov
xor
sbb
das
inc
jecxz
and
mov
mov
sub
xor
sbb
inc
pop
daa
jno
cmp
add
sahf
out
stos
inc
iret
cmpsb
mov
jg
sbb
cmpsb
xchg
arpl
pop
sar
int
fidivrl
pop
into
xchg
cltd
push
fnstsw
call
lods
rcrl
ljmp
loop
cmp
out
jno
add
ljmp
data16
leave
hlt
ja
dec
js
mov
test
pop
add
cmp
imul
sub
fsubs
divl
xor
popa
cmp
push
push
xor
fsubp
cli
jmp
dec
push
xor
xchg
adc
sbb
pop
ficoms
fistpll
test
cmpsb
mov
iret
pushl
pop
inc
shll
stos
in
aaa
xchg
testb
outsb
mov
xor
mov
stos
jo
cmpsl
out
stc
mov
int3
data16
mov
and
xchg
push
add
int3
adc
cmc
sbb
push
dec
push
ret
test
inc
subl
shll
nop
pop
adc
movl
xchg
cmp
mov
xchg
jno
pop
and
dec
sub
add
lea
pop
stc
roll
shl
inc
inc
jns
sub
mov
cs
cmp
add
scas
xchg
lds
shrb
std
push
std
fadd
mov
mov
adc
sub
push
imul
pop
movsb
sub
lock
stos
aaa
sbb
les
loop
xchg
fwait
nop
ja
pop
loope
mov
es
jge
sbbl
lret
sahf
fcompl
in
add
lea
adc
arpl
bound
jae
hlt
int3
incb
cmp
mov
push
mov
xor
shufps
pop
jno
mov
push
fisttpl
sbb
mov
mov
adc
ror
orl
outsl
mov
cmp
lahf
jb
jmp
sub
lcall
jle
sub
inc
and
rcl
xchg
mov
xorl
fwait
adc
xchg
add
repnz
cs
mov
cmp
dec
mov
mov
add
mov
mov
adc
xchg
ds
mov
pop
push
ds
scas
adc
cltd
rorb
mov
and
sbb
gs
mov
mov
cmpsl
imulb
push
fsts
lcall
lods
gs
loopne
fucomi
stc
adc
notb
mov
incl
xchg
dec
ljmp
cwtl
imul
mov
push
clc
loope
xor
push
enter
rcrl
das
in
pop
or
push
lahf
pop
xor
cmp
or
cmc
out
add
lds
mov
arpl
cmc
in
cld
pushf
aas
hlt
mov
ficompl
aam
stos
insl
and
std
hlt
dec
ja
daa
sbb
aam
jo
mov
xchg
bound
push
pop
in
xchg
test
dec
ljmp
mov
test
mov
insl
sti
inc
aad
push
cmp
test
or
aas
ss
mov
mov
aad
push
out
cltd
and
lcall
cmp
test
fsubs
dec
mov
jne
fwait
rcrb
loope
push
out
xor
pop
in
mov
pusha
cmpsb
out
daa
jmp
push
cld
and
push
je
wrmsr
repz
int3
sub
arpl
mov
imul
faddl
mov
test
push
lds
jle
lods
or
pop
dec
cmp
cmc
sub
add
push
mov
movsl
aam
inc
test
xchg
adc
ficomps
cmp
mov
dec
into
es
mov
jl
cmc
jmp
hlt
push
cmpsb
inc
iret
cmp
sarl
ret
push
xor
outsb
fcmovbe
add
jne
mov
mov
das
fs
shlb
out
mov
movb
fbstp
cmp
insb
sub
adc
mov
jno
std
lahf
mov
push
pop
in
mov
cmpsb
sub
loopne
cwtd
incl
sbb
shlb
jns
dec
cld
and
and
jle
push
cmpsb
or
inc
xchg
or
sbb
cwtl
sahf
push
icebp
xchg
adcb
les
dec
or
jno
out
push
loopne
jl
ror
fwait
jmp
inc
sbb
cmp
test
cmp
push
pop
lods
stos
shrb
repnz
push
xchg
arpl
xor
fstpl
and
push
les
stc
mov
aaa
cmp
jne
movsb
mov
test
xchg
xlat
andl
ret
xchg
loop
fwait
xor
mov
or
call
jle
aam
test
xchg
inc
pop
and
movsb
loop
imul
mov
xchg
mov
lcall
sbb
xor
imul
jbe
js
pop
mov
sub
jb
addl
push
inc
pop
call
ret
inc
jmp
test
xchg
xchg
pop
mov
inc
dec
push
sbb
and
cld
add
mulb
xor
fdivrs
xor
js
bswap
sbb
lods
and
loope
cwtl
ficomps
jle
mov
fstps
fistpll
mov
pop
and
cli
gs
aam
sbb
or
imul
sub
mov
add
lahf
test
fs
adc
sbb
adc
fstpt
inc
aam
jle
jl
mov
cld
je
push
loopne
ljmp
cmp
mov
mov
xchg
adc
repnz
leave
jecxz
add
cmp
lahf
mov
push
push
add
xlat
mov
cmpsb
inc
and
pop
inc
stc
sahf
jne
and
cmp
popf
nop
sub
inc
jp
cmc
adc
mov
xlat
mov
xchg
movsl
je
dec
push
std
popl
inc
je
test
js
push
cmpsl
insb
aad
add
jmp
inc
sub
out
repz
xor
test
sbb
rcll
rcr
sbb
icebp
pop
stos
mov
push
mov
sub
add
and
fildll
push
popa
adc
test
push
stos
mov
repnz
test
stos
add
fwait
inc
data16
cmp
loope
push
mov
mov
xor
popf
adc
je
inc
js
clc
insl
loope
ljmp
decl
cmp
mov
dec
iret
scas
sbb
arpl
jle
jl
std
jno
pop
xor
mov
hlt
mov
add
loop
cmp
pop
inc
add
mov
cs
jns
pop
mov
lock
jg
pusha
xchg
mov
aas
jbe
sub
mov
aas
hlt
or
lret
icebp
ljmp
fidivs
roll
xchg
adc
jg
pop
gs
and
dec
repnz
xor
push
roll
mov
ss
iret
mov
outsl
hlt
mov
push
or
pop
nop
dec
test
aaa
in
xchg
sub
inc
pop
xor
repz
loop
and
or
popa
lods
aad
sahf
sbb
push
in
inc
in
sub
repz
cmp
hlt
and
cmc
test
xchg
inc
sub
pushf
icebp
jg
inc
pop
sahf
js
add
jge
cmpsb
mov
and
imul
sahf
or
or
subl
add
dec
lahf
ret
mov
idivb
pusha
imul
negl
cltd
mov
xor
sbb
aad
nop
enter
shlb
std
push
sbb
imul
cs
hlt
ret
mov
dec
mov
push
mov
mov
add
fstpl
xchg
inc
xchg
ljmp
js
jmp
pop
andl
test
cli
lods
out
inc
iret
xchg
orl
nop
pushf
lcall
movsb
sub
out
xchg
out
icebp
inc
push
mov
shlb
lret
mov
lds
mov
fmul
insb
dec
imul
jb
inc
and
jmp
pusha
fwait
int3
jne
adc
jns
push
or
pop
xchg
pop
pop
test
sub
sub
test
aad
mov
ljmp
sbb
xchg
popa
add
imul
mov
ljmp
add
push
mov
mov
mov
mov
adc
insb
aam
out
out
or
push
scas
int
aaa
gs
add
inc
dec
stc
ret
mov
lret
int
dec
inc
mov
pop
sub
mov
sub
adc
std
testb
mov
repz
push
cmp
dec
or
fsts
jbe
xchg
nop
dec
test
and
leave
mov
xor
add
xor
push
insl
addr16
sti
xorb
lret
fsubrs
add
into
mov
jno
lods
jne
stos
in
jae
or
std
fs
stos
cli
cmpsb
daa
cwtl
mov
mov
or
les
inc
ja
jno
or
repz
int3
pop
fstl
xchg
fcmovnbe
cmp
int
shrb
cmp
in
or
jp
insl
inc
inc
lret
jmp
sarl
lea
sbb
push
ficomps
in
mov
add
dec
ja
bound
int
adc
inc
daa
or
mov
mov
out
loope
or
aad
call
pop
mov
mov
inc
into
push
lret
scas
and
sbb
shrl
fmull
mov
cmpsb
or
mov
lods
inc
sti
mov
adc
add
aas
outsl
loope
pop
push
add
pop
mov
xchg
pop
cmp
lahf
das
mov
loope
imul
add
outsb
sbb
andl
pop
pop
jle
ljmp
roll
add
pop
lcall
push
mov
dec
or
jl
push
sub
add
inc
mov
fmulp
clc
gs
jnp
aaa
enter
jle
mov
enter
nop
cwtl
sarb
xchg
or
sbb
fdiv
movsl
or
adc
or
mov
inc
sarl
inc
cmpsl
sti
mov
sbb
aad
pusha
sub
jne
aaa
xor
mov
pop
dec
lods
ss
sub
push
push
inc
mulb
sub
repnz
inc
into
inc
maskmovq
negl
lret
scas
repnz
enter
cmp
mov
mov
xor
mov
rorl
jl
in
mov
ds
negb
sub
out
jg
outsb
jne
inc
xor
and
mov
cmp
xchg
pop
jns
test
sbb
and
test
int
pusha
xchg
add
pop
data16
sbb
xchg
pop
pop
pusha
xchg
mov
add
stos
pop
js
pop
xchg
jmp
and
push
mov
mov
xchg
fdivl
jns
lods
mov
and
in
cmc
inc
insl
xor
pop
pop
aad
shr
xchg
enter
orl
xor
pop
push
insb
sub
sbb
jb
sbbl
in
out
lcall
sub
xor
pop
popa
ja
jmp
inc
gs
push
inc
sub
pushf
xor
stc
pushf
orb
test
adc
stos
sbb
mov
outsl
add
aad
clc
jno
push
push
push
xor
add
xor
xor
mov
leave
jmp
je
adc
push
push
adc
mov
adc
pop
push
mov
in
or
dec
stos
xchg
mov
mov
bnd
in
mov
sub
jmp
mov
xchg
mov
lods
xor
lahf
xchg
in
jp
test
fcmovnb
test
dec
fstpt
lret
dec
adc
and
push
movsl
add
jbe
mov
inc
repnz
push
enter
movsb
scas
jle
jb
lods
je
popl
sub
jnp
js
in
icebp
mov
insb
ret
cwtl
lahf
mov
movsb
xchg
std
fs
cmpb
inc
data16
fcomps
sub
or
xchg
scas
and
or
xchg
jbe
mov
sar
sbb
push
call
dec
mov
loopne
dec
xor
iret
out
daa
iret
and
mov
push
jae
sti
dec
aam
test
test
imul
in
dec
int3
cmpsl
cmp
add
popa
adc
insb
mov
pop
pop
push
pop
jbe
push
shrb
adc
mov
jl
ret
inc
jns
jns
aam
cmp
mov
pop
cmp
xchg
andl
cmpl
adc
cmp
into
imul
fmuls
jecxz
in
ljmp
inc
and
icebp
gs
in
out
lods
mov
sbb
pop
mov
scas
repz
cmpb
mov
cmp
dec
xor
dec
lret
mov
jge
sarl
movsl
es
or
scas
pop
cmp
scas
daa
xchg
inc
les
imul
test
adc
imul
mov
mov
rolb
orl
xchg
jp
ret
js
mov
xor
mov
fnsave
repz
dec
mov
dec
sub
insl
mov
dec
jae
test
mov
movsb
mov
iret
imul
mov
xchg
fmul
daa
insl
lret
jg
stos
aas
fiadds
push
into
lret
adc
into
sbb
push
xchg
mov
pop
stos
push
xchg
add
in
mov
andl
ljmp
cmp
sti
adc
add
aad
lret
cmp
adc
add
or
scas
repnz
pop
ss
push
pop
mov
out
fadds
adc
push
scas
ss
xor
outsl
test
inc
or
mov
mov
push
sarl
add
xor
sub
jp
shll
jae
adc
ret
sub
inc
cmc
sub
repnz
jl
cmp
pusha
out
push
and
or
jb
mov
cmpsb
xchg
jp
sahf
adc
nop
mov
mov
jl
cs
cmc
mov
or
push
lcall
xor
pop
xorb
inc
pop
xor
dec
add
ds
add
out
and
or
xor
or
adcb
gs
cmpsl
mov
adc
imul
daa
or
ljmp
or
mov
aaa
hlt
xchg
pop
sub
push
imul
adc
shrl
lods
xchg
xor
and
roll
pop
mov
popf
lods
push
push
loope
xchg
lret
jg
mov
inc
push
mov
sub
stc
push
cmpsl
or
rorl
lret
fs
int3
incb
add
roll
imul
pop
xchg
insb
adc
and
in
push
out
pop
xchg
movsl
adc
out
pop
cmp
js
flds
test
inc
cmc
fwait
mov
jecxz
push
jecxz
in
xchg
ss
subl
mov
cs
aaa
fxam
dec
cmp
mov
sbb
inc
lods
gs
inc
add
fisttpll
fisttpl
push
daa
jb
movsb
sub
lea
inc
sbb
ret
push
outsl
dec
movsl
ret
cmpsb
sub
inc
or
mov
xchg
mov
dec
lret
pop
inc
xchg
lock
fistps
inc
aad
add
in
lods
xor
xchg
lcall
ss
pop
out
insl
pusha
add
test
jp
aam
sarl
popf
sbb
rclb
fldenv
and
int3
inc
lcall
xchg
sbb
mov
pop
and
int
shll
repnz
cli
sub
and
fistpll
dec
push
stos
push
mov
scas
cmc
dec
or
xchg
xchg
daa
out
lds
out
inc
es
sbbb
mov
nop
mov
jnp
popf
mov
stc
nop
shll
inc
je
adc
xchg
sbb
adc
push
jl
cltd
xor
test
push
mov
call
das
repz
outsb
jmp
add
cltd
mov
bound
fiadds
or
mov
adc
xchg
pop
leave
jae
cmp
cltd
es
cld
test
and
dec
inc
shlb
daa
icebp
jb
pop
mov
mov
ja
push
mov
aad
rorl
repz
loope
sub
push
push
push
shl
movsl
dec
sbb
loopne
punpckhwd
mov
ds
cmc
loope
dec
cmc
adc
lahf
iret
pop
popa
fadds
fadd
inc
add
add
fmull
jns
rcr
mov
popf
inc
lahf
mov
sub
inc
sbb
stos
add
psubsb
test
push
pushf
cwtl
out
bound
push
jecxz
jmp
sbb
adc
aas
ljmp
mov
and
mov
mov
push
leave
sbb
shl
sub
jecxz
rclb
movsl
mov
fisubl
mov
cmp
pop
inc
sbb
and
mov
mov
ret
push
in
pop
xor
mov
mov
pop
pop
push
sub
pop
push
sbb
cmp
add
subl
xchg
rcll
leave
fimull
xchg
nop
adc
outsb
hlt
mov
aas
aas
cmp
inc
arpl
out
lret
out
enter
fxch
xor
jae
sub
jbe
cmpsl
dec
jmp
outsl
pop
sub
ss
xor
inc
pop
mov
mov
arpl
dec
push
std
pop
loop
mov
dec
adc
aam
pusha
stc
clc
sbb
and
lahf
xor
and
cmp
in
loope
mov
add
push
jns
cmp
enter
mov
loopne
imul
shrl
fwait
fs
push
mov
add
inc
ljmp
ss
lods
repz
or
cmp
in
cmp
xchg
push
inc
sub
cmp
push
xor
xchg
push
pop
sbb
and
repnz
rorb
cwtl
ja
shr
push
push
xchg
pushf
pusha
mov
sbb
sbb
mov
sbb
pop
inc
popa
mov
inc
mov
pusha
jmp
outsl
mov
lcall
outsl
sbb
jle
test
pusha
cmp
and
push
aam
les
out
jmp
jg
sbb
lret
daa
orb
xchg
cmp
icebp
push
arpl
fnstcw
repnz
xchg
push
stos
sub
sub
add
ss
pop
sahf
add
repnz
cmc
jp
mov
lds
jo
or
add
rolb
mov
scas
ljmp
add
gs
pushf
enter
dec
cmp
setge
clc
ret
pop
lahf
jl
cwtl
or
xor
loopne
and
mov
add
jp
pop
xchg
aad
addr16
jnp
push
mov
ljmp
insb
movntq
lahf
dec
xor
push
insb
push
mov
jmp
fs
and
jg
or
push
push
ss
loope
out
mov
and
fcomps
imul
adc
push
jns
lock
ja
add
cmp
or
hlt
jbe
scas
inc
jne
scas
or
inc
mov
faddl
outsb
or
push
mov
xor
xor
jnp
jecxz
and
sarb
push
in
xchg
fildl
es
out
fidivrl
repz
mov
jecxz
pop
jne
call
cmp
daa
sti
daa
inc
sbb
mov
scas
dec
cli
iret
mov
mov
int3
pop
pop
xchg
lds
ss
sbb
je
push
adc
fwait
ds
std
and
inc
xor
daa
arpl
lcall
stc
sub
xchg
aaa
and
imul
je
cmpsb
pop
mov
pushf
push
add
and
sbb
stc
fisttpl
xor
fistpl
xchg
addl
stos
adc
cmp
fistpll
pusha
cltd
mov
sbb
lods
sbb
mov
xchg
cwtl
pop
sub
add
cmc
ds
pop
mov
inc
xchg
sub
int
arpl
popf
jge
enter
xchg
lcall
adc
jle
jo
inc
rcl
lcall
sbb
cld
jle
and
sub
cli
jnp
jns
push
dec
xor
mov
xor
lods
inc
xchg
adc
dec
jns
or
movsl
pop
scas
enter
repnz
xor
xor
xor
imul
or
jp
mov
pushf
and
sti
jb
cltd
fwait
xchg
enter
mov
dec
inc
sub
adcl
jle
test
sbb
cmp
pop
jmp
or
dec
inc
sub
or
jo
lea
test
hlt
pop
je
sbb
ret
cmpxchg
mov
cvtps2pi
xchg
lock
jmp
jae
cmpb
xchg
adc
sub
scas
shll
incl
jl
xlat
sbb
mov
nop
pop
loopne
add
xor
loopne
push
lds
movlps
adc
pop
mov
cmp
jge
sahf
aad
pop
adc
jns
jns
xchg
hlt
lods
xchg
xor
addr16
mov
bound
shrb
nop
subl
mov
push
inc
jns
incl
icebp
add
and
and
outsl
cmp
movsb
push
aam
out
pop
out
das
jno
loope
cmovno
shl
or
dec
jno
sbb
in
inc
and
mov
in
ja
xor
out
add
dec
xchg
cli
cs
add
adcl
rorb
push
cld
rorb
lret
or
lahf
sub
mov
adc
jecxz
or
adc
cmp
dec
add
movsl
mov
mov
or
sahf
scas
sbb
mov
pop
dec
mov
movsl
js
iret
sarb
pushf
jg
out
mov
addr16
or
enter
mov
pop
dec
dec
stos
inc
pusha
and
mov
sbb
test
test
or
int3
push
imul
mov
dec
shll
mov
enter
cmpsl
jle
bound
insb
fs
sub
xor
arpl
lahf
rclb
in
and
push
movsb
cwtl
and
dec
dec
pop
mov
fdivl
pusha
jge
sub
push
or
mov
out
inc
insb
sub
push
gs
sbb
imul
and
cmp
or
cltd
stc
mov
int
in
gs
mov
outsb
push
xor
rcr
mov
out
std
sbb
jno
cmp
jg
xchg
loop
daa
into
pop
arpl
ss
shl
sub
pop
cmpsl
sbb
orl
adc
rcrl
push
cmp
cwtl
adc
scas
hlt
es
mov
sbb
idivl
cmp
jns
into
fmuls
cmp
ljmp
fs
xchg
hlt
xlat
pop
mov
inc
or
mov
jo
ret
test
cmp
or
xchg
shrb
icebp
cwtl
fs
out
sub
cmp
sbb
daa
push
pusha
jp
sbb
or
jecxz
jp
repnz
ds
mov
cmpsl
mov
dec
jbe
out
pop
imul
js
jmp
xchg
push
negl
or
lahf
and
insl
int
pop
mov
jl
mov
bound
fnsave
sbb
sbb
lahf
xchg
xor
sahf
mov
cltd
xchg
jle
adc
mov
inc
push
int3
mov
fistpll
cmp
and
or
lds
dec
sub
add
mov
pop
stos
insl
sub
lahf
adc
repz
loopne
pop
push
fistps
xchg
aam
mov
jl
test
dec
jb
mov
stos
mov
dec
add
xor
xchg
mov
and
das
and
cmp
shl
xlat
fmull
add
push
stos
adc
and
lcall
sbb
xchg
in
shrb
ss
enter
mov
or
hlt
mov
fwait
insb
clc
add
push
jg
pop
xchg
fidivs
jnp
pop
cmp
int
push
xchg
mov
cld
cli
cmpsl
mov
in
jecxz
enter
sbb
push
call
push
and
mov
cltd
js
push
dec
inc
adc
inc
fldl2e
into
mov
movsl
inc
cmpsl
ja
addl
lock
hlt
les
push
add
rolb
test
aam
ja
into
and
in
cs
orl
xlat
in
mov
insl
in
lock
ficompl
or
add
sub
rsqrtps
dec
mov
mov
or
jno
enter
mov
cs
add
fsubrs
dec
adc
pop
sbb
adc
inc
push
lret
xchg
inc
aaa
pop
into
xor
lret
push
in
sub
icebp
fisubs
adc
popf
cmp
jg
inc
mov
hlt
jne
inc
in
pop
rorl
cmpsb
push
lahf
or
push
xor
cld
stos
jnp
or
jle
inc
dec
aad
dec
or
mov
outsl
mov
outsb
cmp
shl
ret
adc
and
enter
repnz
dec
mov
push
pop
xor
mulb
xor
das
adc
add
jecxz
add
lret
filds
push
jmp
dec
data16
aam
mov
mov
and
mov
stos
insl
imul
clc
iret
push
jl
pop
mov
jnp
and
inc
enterw
and
pop
int
ret
add
fimull
xchg
mov
or
push
cmp
adc
dec
popa
cmp
cld
add
lods
pop
mov
cmp
mov
xor
xchg
fsubrl
pusha
sqrtps
jnp
dec
mov
into
call
popa
int
jge
shlb
in
mov
pop
xchg
loop
sbb
es
adc
out
ss
les
adc
andl
daa
jne
mov
jl
add
adc
pop
test
sti
imul
shll
mov
xor
imul
xchg
test
mov
and
mull
imul
jl
cmp
scas
or
les
lods
xchg
invd
xchg
cmp
int
inc
inc
mov
adc
test
sbbb
sahf
mov
loopne
ds
adc
xchg
xchg
nop
push
xchg
dec
adc
rcl
lds
gs
dec
push
out
je
pop
or
mov
mov
or
out
fmuls
and
mov
adc
sub
dec
inc
xchg
sbb
andb
stos
and
movsl
jecxz
push
jb
dec
popa
jns
mov
dec
popa
mov
mov
data16
repz
ret
push
sbb
jnp
dec
push
push
pop
dec
test
cmp
mov
push
sbb
sub
push
jb
lcall
imul
mov
decb
es
pop
fs
pop
mov
orb
mov
cld
leave
mov
push
pop
xor
nop
es
sbb
cwtl
hlt
sti
or
mov
psubsb
push
dec
or
shll
mov
clc
lahf
pushf
lcall
push
jo
xor
and
pop
fnstsw
dec
fisubs
jns
mov
adc
out
ficoml
jae
aad
sub
je
clc
jle
je
or
out
pop
jnp,pn
lods
push
jo
pop
mov
ja
mov
add
pop
fists
or
mov
xor
data16
movsb
rolb
inc
sub
ffreep
push
add
pusha
lret
xchg
ja
push
cmp
rcr
cmc
pop
add
loop
mov
xchg
adc
icebp
mov
xchg
adc
out
mov
or
jl
pusha
inc
jns
addb
ja
or
cmpb
ljmp
mov
popf
push
cmp
cwtl
outsl
daa
aas
fwait
cmpsb
ljmp
out
pushf
pushf
xchg
mov
daa
xor
jns
pop
and
adc
push
mov
ds
cmc
sbb
divl
pop
ror
cmp
sahf
loop
movsl
pusha
push
pop
xor
jl
xchg
inc
std
test
ret
int
push
mov
mov
cs
xor
mov
idivl
jecxz
push
inc
test
xchg
lods
lea
je
leave
ud2
jl
mov
rcrl
ret
push
es
rolb
sbb
and
ss
mov
sbb
cltd
fbld
sub
dec
add
jmp
in
mov
xlat
bound
lret
sbb
gs
rcrb
in
pop
sar
sbb
pop
dec
loop
pop
mov
mov
pop
js
aad
or
into
jp
lahf
cmp
xchg
repnz
sbb
mov
insb
push
xchg
arpl
mov
in
icebp
andb
cmp
fs
mov
sub
cs
add
mov
push
out
mov
shlb
mov
mov
cli
add
lret
negl
ja
cli
mov
jns
adc
jl
inc
cmp
imul
sub
mov
popf
mov
jl
and
xchg
xchg
cs
add
cmpsl
stc
cmpsb
in
mov
cwtl
lea
xchg
daa
mov
cmpsl
mov
pop
pushf
xchg
sbb
sti
sarb
test
insl
test
in
cmc
repnz
repz
xchg
stos
rcrb
xlat
adc
jae
mov
lock
push
lret
or
fimull
outsl
add
loopne
jle
gs
popa
mov
pop
lahf
testl
mov
aas
jecxz
lods
out
mov
push
and
push
fiadds
push
add
call
ds
jmp
sar
adc
and
push
fsub
or
icebp
aam
dec
mov
arpl
dec
aad
dec
mov
push
xlat
in
ret
push
repnz
xchg
jno
mov
mov
xor
int
xor
jge
push
xor
aaa
inc
push
mov
or
sbb
jl
and
pop
mov
addl
adc
mov
imul
ljmp
push
shll
and
push
lods
loopne
inc
cld
cs
div
add
adc
aas
aam
addb
repz
cmpsl
imul
icebp
and
dec
cmp
invd
mov
out
scas
mov
mov
add
cmp
xchg
xchg
fildll
stc
mov
lds
enter
add
jl
pop
xchg
in
add
leave
jle
adc
inc
loope
mov
ds
repz
rcl
jnp
pop
sahf
loop
or
aad
jl
sbb
out
push
pop
cmpsb
xlat
and
cmc
leave
subl
insb
dec
fisubrs
pop
dec
dec
dec
mov
sbb
leave
mov
push
je
cmp
add
pop
mov
scas
pop
push
arpl
test
pop
jp
dec
push
jne
sbbb
mov
es
dec
loope
cmp
and
stos
pushf
aas
or
enter
inc
xchg
jo
jge
mov
adc
dec
jmp
add
push
sarb
xor
mov
mov
shll
jnp
adc
mov
lret
flds
push
ja
pop
pop
xchg
cli
stc
mov
movsl
fnstcw
xor
lock
orl
mov
cmc
test
mov
push
adc
stc
jmp
pusha
aad
pop
mov
das
inc
sub
dec
ret
sahf
add
or
hlt
nop
clc
pop
sub
hlt
add
add
adc
lds
sahf
push
loopne
add
cltd
mov
mov
dec
es
cltd
sbb
insb
or
mov
lahf
sub
adc
sub
add
les
sub
xor
call
repz
push
add
jnp
add
cmc
fmuls
cwtl
fs
ret
js
cmp
lds
out
add
mov
clc
repz
insb
xor
sti
loop
mov
nop
fxch
mov
test
ja
push
out
sbb
repnz
jp
repnz
cld
or
ficompl
push
add
mov
imulb
inc
sbbl
xchg
aaa
aad
xor
xor
imul
xlat
test
je
jecxz
cmp
pop
xor
movsl
and
leave
xor
mov
mov
jg
test
bound
cli
popf
lods
inc
ror
xchg
sbb
fdivrs
pop
sbb
mull
dec
lea
and
or
or
loope
sti
lcall
js
xchg
call
xor
adc
jae
cwtl
sbb
shl
pop
xor
cmp
pop
adc
cmpsl
push
push
push
sub
inc
jne
adc
rcrb
mov
cld
xchg
out
hlt
sbb
int3
add
jae
sti
call
iret
hlt
mov
je
or
push
loop
xchg
pop
ljmp
out
xchg
cmc
sbb
jl
or
lcall
lret
stos
xor
jecxz
jp
lcall
adc
aad
fsubl
addr16
stos
pop
adc
add
xchg
jno
cmp
iret
ja
sahf
xchg
mov
lahf
sub
jge
mov
adc
and
push
aam
mov
mov
test
inc
bound
lods
or
xchg
aam
xchg
push
jg
cmp
test
aaa
or
jnp
xchg
pop
es
push
shrl
pop
shlb
add
xor
jo
fcompl
add
cmc
insb
or
lret
mov
jno
jbe
das
loopne
repnz
push
adc
stos
adc
popf
fsubl
jle
jp
push
dec
fisubl
insb
outsl
repz
fldenv
jl
nop
sub
mov
dec
movsb
jmp
jnp
and
pusha
out
ss
test
clc
aam
jg
mov
mov
push
insb
subb
dec
push
outsl
cwtl
xchg
cli
or
mov
add
addl
inc
mov
push
mov
lcall
sbb
inc
fwait
movsl
jns
pop
ficomps
sub
mov
out
sti
clc
int
hlt
xlat
adc
shrb
scas
fldenv
lahf
stos
lahf
int3
mov
push
cmp
stc
sub
addr16
rorb
and
enter
push
dec
mov
mull
inc
fcoml
jnp
lahf
mov
sti
jae
mov
cmc
adc
sub
lcall
mov
cmc
fbstp
inc
dec
dec
enter
daa
push
mov
clc
inc
add
cld
add
pop
cmpsl
and
pop
push
faddl
jbe
push
jbe
scas
adc
test
lret
fmuls
sub
aaa
mov
mov
cmp
xchg
cli
push
je
cmp
mov
movsl
dec
lret
cmpsl
mov
xchg
sbb
inc
push
sub
fdivrs
pushf
xor
fwait
jl
sub
sahf
mov
pushf
jb
js
dec
cs
pop
cmp
mov
sbb
jmp
pop
addl
cmpsl
repz
xchg
lcall
sbb
sub
jb
loope
mov
jno
jecxz
mov
mov
push
out
dec
clc
je
jp
jl
ds
xchg
lcall
in
cmp
es
cmpsl
ds
xor
nop
pop
dec
add
mov
pop
aad
xchg
lock
and
cmp
pop
lock
pop
push
cmp
xor
jbe
adc
jle
enter
pop
iret
mov
push
xor
pushf
add
jae
leave
iret
in
cli
or
push
gs
push
out
or
cmp
push
mov
insb
push
jmp
pop
enter
into
adc
mov
loope
and
inc
int
cmp
inc
adc
mov
and
xchg
aam
jmp
inc
cmp
or
sbb
jecxz
mov
jmp
lea
mov
dec
or
je
mov
movsl
rdmsr
mov
frstor
lret
jecxz
ss
int
pop
dec
sub
fidivrl
mov
pop
or
sbb
cmp
mov
sbb
or
xchg
fldl
jno
out
and
push
sahf
jmp
das
call
or
pop
movsl
push
fldenv
lcall
mov
gs
inc
and
dec
pop
xchg
cmp
push
add
sub
cmpsb
adc
push
sarb
inc
sti
and
cmp
sti
cmp
lcall
xchg
pop
insl
or
in
pop
mov
lods
mov
pextrw
mov
les
mov
outsl
lea
mov
jae
or
adc
and
loopne
mov
fiadds
push
mov
loopne
xor
inc
jns
xor
push
stc
notl
mov
jle
adc
idivb
push
mov
cs
inc
ss
fs
push
lahf
enter
test
pop
out
push
xor
adc
das
push
mulb
and
cld
in
push
xor
dec
adc
push
push
aaa
in
outsl
mov
addr16
push
mov
je
sub
les
ret
lcall
nop
adc
mov
push
ds
iret
adc
addl
sbb
arpl
or
insb
add
pop
xchg
imull
jb
shrl
test
pop
jp
xor
lahf
and
pop
rolb
ret
push
or
add
push
adc
jnp
push
push
jb
fucomi
sbb
and
fildll
pop
xor
movsb
in
pushf
ret
push
rcll
xchg
mov
ss
scas
in
cmp
sub
inc
adc
aas
mov
fldcw
sbb
lock
out
popl
in
dec
or
push
xor
xchg
sbb
fdivrl
test
add
ja
push
xchg
jp
out
mov
sub
cmpb
push
push
sub
fstpt
cmpsl
int3
roll
mov
repnz
shrb
xor
fwait
repnz
cmpsb
xchg
imull
mov
inc
jnp
mov
aas
out
out
add
push
sbb
lds
fsubp
fwait
out
cltd
mov
mov
adc
pop
repz
adc
inc
fucomip
cli
fsubs
ud1
mov
outsl
cmp
bound
sbb
push
sub
adc
sub
sbb
ret
inc
addb
sete
push
push
subb
jnp
mov
mov
cltd
fsave
out
pop
shrb
or
popf
ja
mov
add
out
cmpsb
push
adc
lret
inc
out
mov
aas
outsb
mov
jbe
push
out
jbe
and
pop
mov
xor
in
pop
xchg
pop
mov
dec
mov
scas
or
movsl
xchg
mov
test
sub
rcl
sbb
gs
aaa
push
sahf
cwtl
mov
jbe
out
shll
mov
xor
out
adc
loop
movsb
test
roll
inc
ja
pop
or
push
xor
out
rcl
xrelease
pushf
inc
shll
sahf
fdiv
cmpsl
cmpl
pusha
mov
jne
les
out
ljmp
ss
shrb
jp
test
mov
loope
rclb
push
push
mov
inc
jbe
leave
daa
lds
shll
dec
mov
std
push
insl
scas
lcall
inc
sar
push
jg
pushf
cmpsb
pop
iret
ret
sahf
fistl
cmpb
mov
jg
call
xchg
mov
sub
mov
cmp
jb
xchg
orb
lret
aaa
push
lret
jp
jmp
cmpsl
sub
pop
add
push
out
fidivrl
adc
addl
mov
adcl
je
mov
movsl
jo
clc
in
js
pop
bound
int
clc
and
cmc
xor
lahf
call
popf
sbb
jle
cwtl
ljmp
push
lret
xchg
adc
out
sub
ljmp
jo
mov
arpl
adc
xchg
or
mov
pushw
pushf
popf
sub
sbb
or
ret
js
stos
adc
and
mov
imul
lods
and
lss
mov
mov
mov
ret
mov
mov
js
test
loopne
getsec
in
pushf
loop
js
fdivrl
fstps
fidivs
sub
ret
cmp
and
scas
repnz
daa
or
js
fsubrs
stos
stos
jge
fs
push
sbb
std
pop
pop
je
or
add
sub
cwtl
or
xor
and
movb
in
notl
sub
xor
cld
imul
fwait
rcrl
cmpsl
mov
dec
fsub
sbb
cmpsl
adc
sub
iret
das
jns
fstpl
xchg
mov
adc
adc
add
pusha
add
inc
pop
aad
jnp
lock
mov
xchg
aam
ss
test
mov
pop
add
test
add
pusha
dec
sti
mov
xchg
sarl
push
imull
nop
fwait
sbb
mov
dec
mov
lret
mov
jbe
add
stos
fldt
test
and
js
test
shlb
add
ret
icebp
popl
jnp
xchg
sub
orl
pusha
jp
add
dec
xchg
or
shrb
popf
rcl
xor
push
mov
sbb
nopl
dec
cmc
jg
clc
xchg
pop
repz
add
stos
out
cmc
cmp
or
xchg
dec
lahf
rcrl
push
and
sub
xchg
in
and
nop
pop
insb
test
mov
lea
scas
dec
ss
mov
xor
push
inc
cmp
mov
sub
xchg
sbb
pop
inc
inc
xor
cmp
and
jmp
loope
add
xchg
or
aad
jb
aad
xchg
mov
addr16
test
movl
xor
xchg
dec
out
dec
loope
lcall
and
loope
jne
movsb
push
call
push
xchg
mov
jmp
push
and
loop
lock
mov
add
mov
jl
stos
pop
jno
xor
dec
push
and
push
xorb
iret
and
jle
add
stos
addr16
decl
xchg
int
pushf
xor
rorl
gs
add
dec
mov
push
mov
mov
rcrb
movsb
mov
fimuls
sub
xchg
dec
test
mov
or
sub
fbld
xchg
das
mov
das
shll
or
hlt
or
push
mov
ljmp
xor
xlat
cmpl
fimull
push
out
cld
int3
sbb
lock
cs
inc
andl
call
adc
loopne
mov
aas
jg
les
cmp
and
das
xchg
jmp
cs
mov
fs
sbb
daa
pop
jecxz
out
xchg
mov
fistpll
ss
sbb
std
mov
ret
inc
jns
sub
lods
jmp
je
push
imulb
orl
icebp
mov
mov
push
imul
sub
test
jecxz
cmp
mov
mov
mov
adc
insl
xchg
xor
shr
push
into
push
fst
enter
mov
ret
and
jmp
push
imul
adc
push
shll
lds
cmp
or
dec
das
xchg
push
rcll
push
repz
out
outsl
bound
mov
test
dec
lea
js
dec
cli
xlat
dec
pop
ficoms
pop
jbe
decl
outsl
xor
ds
dec
and
mov
mov
pop
jle
jl
push
cmp
push
js
cmc
sti
enter
cmp
stos
cs
or
cs
add
fs
push
xchg
dec
cli
mov
or
jne
rcr
dec
push
ss
mov
stos
jb
rcrl
daa
add
cmpb
adc
imul
in
inc
pop
std
jl
jle
jp
notb
push
xchg
aam
xorb
xchg
sbb
dec
pushf
popa
adc
cwtl
das
loop
sbb
sub
das
jmp
or
pusha
cltd
sti
mov
popa
xchg
push
xchg
lods
or
mov
pop
cmpb
int3
fsubs
out
fs
out
lcall
push
loopne
and
mov
jge
subb
jb
lea
push
inc
in
sbb
es
jo
adc
mov
sbb
and
lret
les
mov
cld
notb
out
mov
and
jo
rclb
hlt
js
cmpsb
aam
xchg
je
aad
jl
sub
xorl
dec
je
jecxz
mov
pop
cmpsb
stos
push
push
lock
stos
dec
pop
cmp
dec
shlb
jnp
aaa
ds
sbb
rclb
mov
in
push
shl
inc
loope
sbb
dec
cltd
repnz
cs
lock
or
xchg
add
jle
cmpb
cmp
arpl
or
mov
loop
mov
adc
sti
dec
je
push
ja
cld
je
pop
mov
int3
loopne
jle
imul
mov
pop
sbb
aaa
pop
pop
sbb
mov
insl
and
fisubrs
xor
xchg
pushf
mov
inc
loope
dec
xor
addr16
mov
loop
iret
mov
mov
mov
sub
arpl
xorl
push
sarl
out
xchg
xor
inc
shrl
dec
arpl
lods
push
ss
lret
push
adc
push
out
or
pop
mov
mov
pop
xchg
pop
fldl
lock
adc
hlt
insl
andl
rcrl
dec
pop
popl
mov
mov
test
inc
pop
ficompl
xor
in
and
mov
mov
pusha
sub
test
outsl
push
idiv
cli
add
push
cld
jnp
mov
cltd
fistpl
add
sub
cli
outsb
cmp
push
mov
rclb
popa
jle
arpl
arpl
mov
test
ret
and
cli
cwtl
lret
mov
jae
ja
dec
scas
dec
adc
jle
or
mov
mov
sarb
jns
xor
cwtl
imul
xlat
adc
fcoms
dec
lcall
lea
out
ja
or
xchg
mov
into
pop
and
mov
pusha
cmp
sub
xchg
icebp
sti
cld
jns
ljmp
inc
dec
das
insb
pop
adcb
test
or
adc
mov
test
pop
iret
dec
add
pop
out
aam
inc
push
shlb
aas
and
jo
enter
push
push
sub
out
inc
xlat
jle
or
pop
roll
mov
dec
mov
cli
xchg
ljmp
roll
cwtl
sahf
aam
leave
dec
pop
pop
xor
shlb
adc
pop
cmpsb
sub
dec
add
out
xorb
cld
push
mov
in
jae
add
xlat
adc
or
loopne
ret
push
cmp
sub
push
dec
andl
cmp
scas
or
cmp
add
lea
shl
out
lods
xchg
push
jns
adcb
add
or
int3
xchg
fisttpll
mov
test
rorb
mov
lcall
jmp
cli
sub
mov
imul
adc
dec
mov
push
clc
pop
mov
mov
jg
jge
xor
popf
sub
adc
adc
pop
and
mov
pop
sbb
repz
mov
insb
xor
fstps
aad
sbb
cwtl
icebp
dec
inc
sti
add
ss
push
add
adc
int
and
mov
dec
clts
adc
mov
std
incb
test
fisttps
pop
xchg
mov
push
lret
out
cld
pop
sahf
mov
les
xchg
ds
out
adcb
add
inc
jle
xchg
das
scas
andl
ret
xchg
fldt
je
fsubrs
push
mov
in
xchg
push
mov
or
cmp
loope
pop
negl
shrb
repz
sbb
shlb
neg
sbb
push
jmp
pop
push
push
jp
sub
dec
add
std
push
insb
fs
scas
sbb
stc
sbb
push
or
dec
cmp
xchg
js
pop
inc
jnp
enter
dec
mov
mov
sbb
outsb
xchg
sbb
iret
inc
aaa
adc
inc
cs
es
repnz
xor
xor
push
xor
mov
sub
jge
cltd
in
enter
adc
pop
gs
int3
clc
mov
add
roll
out
out
cmpsl
daa
cltd
dec
insb
push
out
mov
sub
movsl
sbb
insb
stos
mov
dec
push
or
xor
xchg
and
fsubrp
inc
sbb
shrl
jbe
pop
xor
shlb
mov
leave
leave
call
push
jne
or
and
jl
and
leave
jae
mov
add
push
int3
ret
test
xor
int
push
jns
mov
xor
add
sbb
push
stos
and
rorb
cmp
sub
xor
jp
push
clc
adc
lahf
ja
stos
jne
out
nop
or
push
add
movsl
or
ljmp
fnstenv
push
sbb
dec
mov
mov
das
sbb
outsl
test
les
rcrl
lea
sub
out
aad
inc
xor
dec
sbb
dec
xor
aas
int
add
test
xorb
lcall
pop
mov
test
dec
out
int3
aaa
call
push
jecxz
sub
xlat
stos
mov
mov
sbb
out
arpl
arpl
mov
dec
adc
or
int
or
push
stos
rcrb
jecxz
lock
pop
push
push
pushf
xchg
cvtps2pi
pop
xor
popl
dec
mov
sbb
lcall
inc
jb
out
lods
xchg
dec
int
addr16
inc
or
movsb
push
xor
repnz
mov
aam
fs
jecxz
loope
ror
mov
sahf
out
das
pop
pop
mov
push
ret
clc
inc
idivb
dec
ret
int
insl
jae
sbb
lahf
outsb
push
fcomps
or
sbb
xorb
mov
push
mov
js
xor
push
adc
cmpsb
les
dec
xor
shlb
mov
data16
cs
mov
andb
cwtl
mov
stos
mov
dec
sbb
cmp
push
cmp
aas
iret
or
jg
xchg
mov
out
jmp
cmp
and
fsubrl
fcomps
add
mov
dec
adc
sub
mov
push
shlb
faddl
insb
pop
xor
cmpsb
out
pop
mov
xor
jbe
aad
cmc
push
sbb
mov
sbb
dec
dec
or
jp
popa
cmpsl
and
rcr
add
iret
incb
scas
int3
dec
lea
dec
mov
fildll
jno
ljmp
bound
divl
lret
or
xchg
sbb
cwtl
or
popf
rorl
mov
das
andb
inc
inc
xchg
add
or
add
xchg
mov
imul
jge
cmp
xor
leave
xor
mov
cli
jp
scas
pushf
mov
aam
mov
jb
shrl
int
scas
jbe
dec
pop
add
shll
lds
dec
mov
xchg
in
ficompl
lret
in
xchg
cmp
jp
in
or
and
pop
mov
or
out
iret
add
xchg
leave
nop
int
sub
pop
jb
push
lret
and
das
mov
mov
addr16
mov
and
stos
in
lcall
pop
insb
lods
pop
sbb
or
and
push
jmp
or
das
sarb
jae
movl
mov
loop
mov
nop
loopne
dec
cltd
ja
popa
lock
lds
icebp
or
sbb
mov
cmc
xor
xchg
mov
addb
lret
out
stc
cmp
loop
xchg
int
popa
into
inc
push
xchg
or
loope
clc
push
pop
and
dec
push
inc
mov
rorb
loope
cld
das
xor
loope
cmp
or
jmp
xchg
les
and
rolb
pop
aam
push
xchg
std
pop
ret
decb
bound
inc
pop
push
aam
pop
int
in
fstl
out
add
ss
cld
jbe
dec
data16
cmpsl
aaa
ja
and
adc
leave
popa
shrl
fnstcw
jmp
cmpsl
inc
jmp
fsubr
icebp
es
popw
lret
mov
mov
or
rorl
in
add
xor
cmp
test
sbb
push
adc
cmp
loopne
sahf
aaa
mov
pop
adc
insl
mov
fsubrs
call
sti
sbb
add
idivl
push
cwtl
and
lcall
ret
jp
pushf
cmp
in
mov
dec
negb
jmp
push
out
sub
push
pop
or
cltd
cmp
adc
test
cmp
cmp
scas
pop
mov
and
xchg
xchg
dec
movsl
jecxz
push
mov
push
stos
insb
cmc
test
or
pushf
xor
and
pushf
decl
aad
lods
test
shlb
mov
fnstenv
scas
dec
dec
sbb
xor
add
pop
push
roll
pop
imul
cmp
mov
cmp
dec
test
sti
add
mov
int3
sbb
dec
popa
pushf
add
push
fs
ret
add
cwtl
xor
rcrl
add
ja
std
push
jno
mov
mov
fildll
xchg
ljmp
adc
cld
jae
cmpsl
clc
out
pop
push
jnp
inc
or
dec
addl
rcrb
push
inc
out
js
lods
add
pop
ja
dec
lea
in
es
pop
lea
or
mov
sub
inc
sub
mov
pop
sub
pushf
fwait
inc
je
cmpsb
nop
fwait
jecxz
adc
adc
addl
call
aad
ret
stos
mov
xor
icebp
inc
orl
pop
add
xchg
jae
stos
cmpsb
insl
testl
cltd
insl
sti
jg
out
sub
test
pop
ret
jno
inc
or
negl
iret
lock
enter
pop
adc
jg
adc
pop
sbb
pop
and
push
mov
add
cmp
push
or
inc
out
mov
es
mov
in
loope
sbb
lea
jge
or
in
iret
jg
lock
notb
movsb
mov
ret
enter
in
cwtl
sti
repz
push
adc
xor
xchg
in
lret
dec
or
or
out
inc
test
call
int
cmpsb
or
nop
adcl
cmp
shl
imul
ja
sti
out
cmp
add
vmptrst
sub
dec
in
mov
dec
xchg
mov
ljmp
ret
test
icebp
clc
or
or
pop
cmp
popa
aam
push
push
jge
fstpt
test
les
dec
mov
insl
test
cmp
inc
mov
dec
and
idivb
push
xchg
jge
aad
add
push
xchg
inc
jecxz
mov
dec
sub
inc
push
jge
popa
fwait
or
mov
aad
js,pn
push
jge
adc
lock
repnz
pop
addr16
cmp
sub
dec
fsub
fdiv
jmp
out
movsl
cmpsb
jg
push
jle
and
in
cmp
xor
int
jne
mov
push
jne
jno
cwtl
ja
adc
shlb
ja
cltd
and
sarb
adc
jno
out
and
xchg
out
stos
out
mov
enter
je
cltd
ret
out
pusha
push
dec
rcll
jge
ret
addr16
movsb
fwait
or
add
sbb
and
fstps
lds
sub
adc
js
mov
xor
sbb
cld
pop
fidivs
cmp
jo
outsl
mov
pop
mov
dec
cld
mov
pop
jnp
out
jnp
ror
adc
icebp
lcall
std
sub
or
fwait
mov
int3
fidivrs
je
popa
int3
fbld
arpl
sarl
repz
sbb
mov
jmp
ja
fs
ss
pop
lea
xor
jns
les
or
mov
dec
stos
and
popl
lahf
mov
std
inc
incb
sbb
jecxz
divl
cltd
push
rorl
inc
jp
adc
in
pop
add
inc
xchg
adc
xlat
in
lcall
jb
dec
xor
and
mov
dec
into
cmpsl
mov
jge
cmp
into
stos
cmovle
call
mov
sbb
imul
xchg
jle
add
add
fidivl
ja
cmp
cwtl
ds
repz
push
in
lfs
pop
or
ret
jp
out
rol
lea
jae
push
fs
push
jl
ret
xchg
mov
dec
pop
popf
aaa
lahf
mov
xor
sub
hlt
push
call
jbe
dec
sahf
jg
inc
orb
out
add
jge
sub
les
fistl
jb
insb
test
pop
loopne
adcl
xchg
movsl
pop
adc
js
mov
jns
adc
xchg
ja
ja
add
mov
xlat
inc
stc
mov
xor
fnsave
xchg
adc
xchg
xlat
les
lcall
jns
enter
flds
jmp
dec
xchg
lods
cmp
imul
sub
cmpsl
bound
add
jbe
test
icebp
jnp
cmpsb
and
add
jle
and
jge
sub
pop
mov
fisubs
cmp
fidivs
out
jge
rorl
jbe
js
scas
movl
jo
out
pop
aad
xchg
sti
shld
mov
jge
fwait
xor
in
mov
sti
or
xchg
or
fistl
push
mov
inc
mov
inc
cld
cmp
sbb
gs
rclb
xorb
in
shll
xor
sbb
lods
push
ret
mov
mov
aas
mov
lods
push
sub
test
dec
in
pandn
dec
cltd
xor
shl
mov
sbb
sub
or
or
pop
nop
imul
cld
mov
aas
jecxz
outsb
imul
daa
and
dec
rcl
ror
cld
mov
nop
and
scas
stc
or
aaa
inc
mov
push
ljmp
xchg
mov
pop
pop
cmp
sbb
stos
lcall
aas
mov
movb
mov
xchg
jle
sub
outsb
sub
clc
xor
mov
jge
pop
mov
gs
adc
rorb
cmp
mov
push
out
sbb
pop
cmp
adc
xor
lcall
jmp
xchg
push
mov
jno
pop
mov
mov
jmp
jp
ljmp
bound
sbb
cmp
add
mov
sahf
push
scas
lret
inc
dec
lock
xchg
in
jmp
movsl
les
xchg
sub
ljmp
mov
cmc
mov
lock
shrl
mov
pop
gs
pop
gs
xchg
and
orb
ljmp
hlt
adc
push
cmpsl
sbb
cmp
out
stos
lock
rorb
mov
insl
cmp
aaa
add
cmpsl
sbb
in
inc
arpl
or
inc
mov
xchg
mov
push
push
je
add
jecxz
inc
arpl
icebp
pusha
xchg
shll
testl
shlb
cs
sbb
ret
call
jg
addb
xchg
repz
inc
cmp
pop
pop
pop
scas
jno
aam
loope
mov
cmpsb
out
fmulp
mov
lods
mov
push
test
adc
cmp
jmp
je
jge
loop
jae
or
cmp
insb
pop
lock
jmp
test
push
notb
xchg
nop
fldenv
cmp
dec
xlat
xchg
dec
xor
ds
lret
adc
hlt
cmc
icebp
mov
add
push
into
call
lret
pop
push
les
es
dec
sub
sub
or
cmc
mov
mov
mov
int3
xchg
sbb
popf
add
lret
add
push
xchg
adc
inc
push
fwait
sbb
xchg
jmp
push
dec
scas
sub
jno
icebp
popf
scas
cmc
mov
sub
leave
shll
int
aas
pop
sbb
cmpl
pop
testl
xchg
and
mov
pop
js
xchg
and
sub
push
inc
dec
mov
enter
clc
inc
jp
pop
cmp
in
fsubrl
mov
movsl
and
pop
fwait
sbb
pushf
movsb
xor
pop
mov
bound
dec
jp
mov
sahf
inc
adc
insb
mov
js
int3
aas
cmp
pop
shufps
pop
mov
testl
popl
sahf
ret
lea
mov
xchg
fistl
repnz
movsl
test
ja
xchg
cmp
movsl
push
inc
fisttpll
inc
cltd
jge
insb
test
popf
cli
mov
inc
sub
sysret
mov
je
sub
mov
and
inc
mov
pop
out
and
pop
jg
jne
cmpsl
stos
dec
dec
xchg
sbb
repz
movl
push
cmp
std
adc
adcb
adc
cmp
pushl
or
hlt
mulb
lea
xor
loopne
rcrl
mov
sahf
stos
cmpsl
test
jge
xchg
fistps
xor
pusha
or
repnz
cmp
enter
lods
arpl
jl
sub
jmp
dec
pusha
dec
pushl
sbb
jbe
pop
add
sahf
inc
rcrb
pop
mov
mov
mov
sub
pop
mov
add
mov
xchg
cmp
lods
and
je
fldenv
dec
add
mov
jmp
pop
insl
cs
loop
or
push
pusha
rclb
push
dec
pop
push
fstpt
sarb
in
mov
mov
shll
loope
jle
test
lock
jae
hlt
into
jmp
pusha
inc
outsb
xor
ja
xchg
push
or
fs
push
xor
out
cld
test
mov
push
in
fstpt
mov
cmpsb
hlt
scas
cs
lret
les
aad
jo
shrl
push
sbb
mov
pop
stos
roll
xchg
pop
mov
mov
repnz
xchg
and
jne
lret
fdivrl
xchg
add
add
mov
rolb
mov
sub
push
ljmp
adc
push
inc
xor
xchg
xchg
int
je
push
push
cli
aas
inc
cltd
mov
push
and
inc
push
addr16
adc
jo
fnstcw
into
cs
loopne
das
mov
je
loopne
notb
adc
jecxz
sub
pop
fidivrs
ret
aas
sub
les
pop
adc
pop
cmp
out
mov
sbbl
jmp
xor
push
sbb
sub
cs
loope
push
std
in
in
or
sahf
inc
gs
sbb
dec
jns
sbb
cmpsl
adc
aam
mov
mov
in
stos
sbbl
sahf
rcrb
push
popa
mov
xor
rcl
jbe
fdivl
add
push
push
int
in
dec
and
in
adc
cmpsl
mov
sub
add
push
xchg
aam
mov
and
mov
icebp
adc
xor
stos
push
addr16
repnz
xchg
pop
test
xchg
bound
js
lods
lock
xchg
pop
loope
mov
insl
cmpb
and
les
xchg
sahf
and
lds
es
jbe
mov
push
push
cwtl
mov
imul
addr16
dec
push
xchg
mov
mov
cmp
insl
aaa
ss
mov
mov
inc
mov
mov
cld
mov
xor
sbb
push
add
mov
or
adc
sub
add
gs
fiaddl
push
sbb
jne
xor
or
mov
ja
or
jo
gs
clc
jns
cli
push
ja
sbb
je
negb
pop
repnz
add
or
xchg
inc
push
hlt
mov
fstl
mov
cld
insb
pushf
out
inc
xor
push
ljmp
jo
inc
ret
je
bound
stc
jmp
scas
mov
pusha
mov
aad
dec
int3
mov
mov
fidivs
outsb
dec
mov
bound
dec
loope
mov
mov
cmp
sbb
mov
adc
add
cs
xchg
test
call
xor
lcall
cmpsl
dec
bound
push
sbb
mov
add
cmp
mov
cmp
outsl
pop
bts
mov
push
push
and
mov
mov
xor
or
shl
cmp
dec
stos
dec
cltd
pop
div
lahf
lock
lret
fwait
dec
sbb
stos
rclb
lods
adc
push
stos
std
cmp
test
leave
and
in
mov
lods
xor
clc
xchg
add
cmp
into
or
sbb
or
pop
out
ljmp
xor
push
inc
pop
pop
lret
scas
jnp
cmp
jge
mov
or
in
or
dec
cli
lods
fadd
jp
pusha
cmp
xchg
insl
mov
mov
sbb
mov
mov
decl
add
or
cli
pop
pop
adc
pop
mov
sbb
fs
xchg
daa
push
jecxz
call
shll
int
aaa
cmp
xchg
in
mov
pop
xor
xor
mov
adc
out
dec
movzbl
or
shl
xchg
in
out
xor
mov
daa
scas
in
push
push
and
xor
stos
clc
rcr
aad
mov
mov
mov
sbb
push
fmul
push
cmpsb
xchg
sub
add
sub
jbe
lds
pop
xchg
mov
ss
idivb
fucomp
imul
xor
xchg
push
inc
clc
mov
movsb
pop
std
jae
into
and
mov
mov
int3
rcll
int3
xchg
push
jl
rcrb
mov
xor
xor
lret
jo
and
movsb
out
jo
push
cmc
xchg
dec
scas
insb
mov
cld
scas
lods
pop
stos
aad
lods
fwait
aaa
push
lret
jae
aaa
lret
negl
data16
out
fmul
adc
imull
dec
inc
jp
out
or
fdivs
dec
scas
xchg
cli
mov
out
scas
or
cli
inc
jb
mov
dec
in
lods
repz
leave
add
ss
adc
rcl
es
mov
aad
cmp
mov
lods
fwait
lcall
imul
jmp
push
jae
mov
lods
pop
leave
mov
lds
sub
xchg
push
int3
fnstcw
cmp
lret
jb
outsl
jo
stos
call
or
ret
mov
icebp
cmp
lret
xchg
icebp
adc
mov
fldt
dec
lahf
addr16
daa
rcll
es
clc
sar
insl
inc
lret
xlat
outsl
daa
xor
stos
sub
sbb
mov
shlb
cmp
add
and
sub
insb
sbb
xchg
adc
orb
pop
outsl
cmc
fnstsw
mov
idivl
cli
inc
dec
mov
lds
cmp
and
arpl
mov
mov
outsl
or
rolb
cmpsb
jno
push
mov
les
pop
mov
int3
hlt
fcoms
or
xchg
das
shr
xlat
cmpsb
arpl
cwtl
pusha
call
push
imull
mov
add
inc
add
mov
jno
aad
shlb
mov
je
lods
into
lcall
dec
in
out
mov
sub
sbb
stc
sub
add
xchg
inc
cmp
insb
movsl
lcall
je
sub
sbb
sbb
orl
loopne
cwtl
insb
push
xchg
fwait
hlt
test
enter
shlb
sti
cmp
mov
inc
incl
push
loop
jecxz
lds
xchg
test
roll
push
push
arpl
cmp
std
loop
aas
xor
lods
ss
lea
xor
xchg
sbb
sbb
js
mov
mov
xor
mov
jne
enter
xor
push
push
ret
xchg
repnz
mov
add
pop
add
push
sbb
les
es
cmp
or
jecxz
adc
cld
lret
mov
mov
xchg
xor
and
out
test
or
data16
mov
js
xchg
jp
pop
fcoml
arpl
fwait
sar
movsl
stos
jno
mov
shr
push
cmp
inc
cmp
xchg
mov
pushfw
out
adc
mov
loop
hlt
mov
lret
push
seto
push
repz
mov
scas
pop
xchg
pop
xor
rcll
sub
xchg
push
jmp
cld
lods
adc
mov
mov
lahf
sbb
add
xor
push
sbb
mov
mov
hlt
mov
dec
orb
adc
rorb
cmpsb
or
inc
lcall
inc
sbb
test
xor
jg
lods
xchg
popa
jle
mov
std
gs
dec
mov
mov
sub
scas
mov
aaa
adc
js
scas
pop
popa
mov
daa
std
or
or
xchg
push
in
jecxz
push
pop
pop
xor
sbb
xchg
lods
mov
cmpsl
aam
dec
jo
les
shl
push
add
negl
in
in
xor
lods
popl
inc
cmp
ss
mov
and
inc
adc
lock
cmp
xor
test
cli
pop
adc
pop
arpl
cmpsb
scas
incb
inc
mov
adc
sbb
cmp
cltd
pop
aam
shll
lods
sbb
fincstp
push
loope
adc
dec
pop
xchg
dec
loope
aad
inc
mov
mov
popf
aaa
xchg
jmp
lock
dec
lods
or
jbe
rcrb
pusha
dec
xchg
cs
fdivr
inc
mov
push
sarb
push
mov
add
shll
fcompl
stc
xchg
or
adc
xchg
ss
imul
push
jno
inc
add
je
cs
js
movsb
hlt
push
cwtl
pop
mov
mov
mov
in
jl
push
mov
xchg
jb
rorl
repz
pcmpeqb
jns
xor
nop
xlat
mov
xor
dec
jl
or
sub
add
or
je
and
dec
shll
repnz
les
mov
xchg
mov
xlat
repnz
adc
dec
icebp
inc
dec
add
xchg
jae
jae
jne
mov
inc
das
mov
into
xor
in
mov
bound
icebp
dec
or
notl
mov
shlb
xor
push
xchg
xlat
fldcw
pop
fcoms
sarl
mov
cld
and
mov
push
adc
filds
adc
xchg
sub
xor
and
scas
jecxz
rorb
or
mov
sti
or
dec
sbb
fldenv
and
or
fadd
outsb
fsts
adc
aam
inc
pop
and
adc
sub
mov
adc
mov
fnstcw
mov
aas
jl
daa
push
pop
out
les
es
push
or
lods
test
mov
bound
cld
add
in
out
xchg
mov
inc
dec
bound
mov
sbb
das
inc
int
movsl
shl
test
or
mov
pop
sbb
jno
or
gs
lret
cmp
or
jb
ja
test
pop
popa
xor
push
cmpsl
mov
add
out
in
push
sbbl
sub
pop
inc
dec
cmp
xchg
jg
jno
xor
push
notb
jg
int
push
das
ret
test
enter
scas
add
adc
outsl
ret
shr
push
into
orl
add
and
pop
push
lret
dec
movsb
mov
mov
inc
hlt
int
pop
adc
add
jns
dec
jmp
lret
bound
in
push
fwait
dec
lods
and
push
or
push
ror
sub
cmp
loop
ljmp
jp
mov
xchg
pop
aam
sbb
mov
mov
hlt
jle
orb
stos
dec
push
in
or
aam
in
mov
mov
stos
xchg
out
mov
inc
jle
lds
lret
iret
fildll
sbb
insb
rolb
mov
sti
xor
fldl
out
insl
or
out
mov
xchg
icebp
inc
loope
push
xchg
sub
out
xchg
sbb
stos
sub
xchg
enter
dec
and
mov
lods
dec
stos
std
lret
push
call
repz
dec
outsl
ljmp
adc
adc
movsb
ds
dec
jp
mov
xor
xor
das
repnz
dec
xchg
aam
mov
pushf
fs
aas
stc
mov
aas
enter
xor
sbb
insb
xor
into
nop
cmpsl
pop
ret
or
adc
add
daa
mov
mov
movsb
inc
cmp
xchg
xlat
fwait
pop
jmp
add
jp
dec
inc
loopne
xchg
pop
std
test
add
jne
out
lret
imul
pop
sub
arpl
out
jns
or
xsave
jmp
rcrb
cmp
std
leave
and
dec
scas
mov
call
retw
lods
scas
daa
scas
lock
jp
cmp
jns
or
push
mov
loope
mov
mov
mov
cmp
push
push
sbb
cmpsl
push
push
push
xchg
xchg
les
test
test
aaa
xor
mov
and
fdivrl
xor
xchg
cmc
add
sub
xor
ss
ja
clc
outsb
js
pusha
mov
js
iret
pushf
lcall
jle
sbb
cs
mov
and
add
in
sbb
xchg
fwait
push
or
cmp
lret
leave
aaa
and
push
fsubrl
mov
insl
xor
gs
pop
sbb
mov
test
and
jmp
test
cmp
test
lods
scas
pop
xor
cmp
adc
or
mov
inc
fnstcw
jg
xchg
pop
jns
cwtl
mov
inc
fcomip
jo
fidivl
out
add
lahf
es
fnsave
ret
in
dec
jno
and
les
lods
push
fisttps
xor
and
gs
push
out
sub
or
jmp
xchg
hlt
lcall
pop
sub
jnp
mov
xchg
xchg
add
pop
addr16
test
dec
loopne
jmp
jp
cmp
push
add
jne
xlat
iret
push
imul
adc
imull
jnp
add
pop
mov
mov
scas
in
push
xchg
push
mov
pop
sub
inc
leave
jae
add
aam
cmpsl
outsl
pop
push
daa
mov
les
stos
xor
mov
out
sbb
sub
jge
sub
in
fdivrs
cmp
sahf
seto
loope
out
dec
cld
sub
or
dec
adc
cmp
outsl
dec
xlat
inc
aaa
daa
arpl
pop
mov
jae
jl
repnz
mov
mov
mov
push
pop
xor
pop
xchg
sarb
ss
daa
mov
mov
into
das
iret
adc
fmuls
push
fwait
icebp
mov
pushf
stos
dec
lods
pop
jne
xchg
sbbb
jle
mov
mov
daa
enter
mov
jno
or
pushf
aas
lret
mov
cmpsb
popa
cmp
jl
sub
test
int3
sar
out
push
or
hlt
hlt
enter
inc
imul
fimuls
movsb
push
cmpsl
cmp
sbb
fnsave
mov
and
js
ss
cmpsb
mov
dec
jmp
xchg
mov
nop
mov
pop
fstsw
jne
es
sarl
dec
fiadds
popa
xorl
jge
jl
sbbb
fnstenv
cmpsb
mov
dec
fisubl
cwtl
addr16
cmc
nop
jo
loop
rolb
mov
cltd
stc
pop
inc
jle
sbb
mov
pop
mov
outsb
jle
std
lock
xor
sbb
loop
xchg
pusha
stos
mov
and
pop
outsb
roll
add
and
mov
jo
mov
sub
daa
cmc
sbb
xchg
mov
jecxz
dec
or
in
subl
int3
dec
xchg
jae
rcr
push
loopne
xchg
movsl
jo
insb
shlb
push
stc
mov
mov
dec
xchg
add
rolb
mov
sub
ret
xchg
adc
nop
cwtl
pop
jno
or
add
rorb
mov
fcomps
xchg
add
sub
fsubrs
add
mov
pop
flds
dec
add
lods
mov
push
or
mov
mov
aas
daa
ret
pop
mov
pop
jecxz
hlt
add
mov
imul
daa
dec
sub
push
cwtl
add
cltd
lock
dec
inc
dec
js
dec
and
pop
cwtl
adc
nop
popf
ret
nop
adc
jb
insl
or
or
or
mov
jecxz
fimuls
mov
sub
mov
lret
call
mov
in
xor
sub
testl
sbb
push
xchg
push
add
insl
mov
pop
xchg
shll
push
sbb
pop
insl
pop
pop
loop
sub
mov
push
jnp
xor
sbb
aaa
sti
add
add
sub
cwtl
xchg
dec
or
mov
pop
mov
stos
mov
shl
in
cmp
adc
cmovns
loope
cs
inc
inc
xchg
les
cmpsl
mov
dec
adc
test
fcomi
test
pop
les
xor
mov
sub
leave
inc
jg
push
xor
je
inc
test
cmp
xchg
jbe
push
mov
dec
and
icebp
push
inc
outsb
outsl
dec
cwtl
xchg
or
fnstcw
imul
fsubp
test
rcrb
xchg
out
pusha
jl
lret
fs
pop
stc
lahf
das
jnp
mov
stos
mov
jb
and
jnp
sbb
xchg
test
rclb
imul
fimuls
test
pop
ret
movsb
mov
jge
bound
dec
add
scas
push
or
movl
fstpl
mov
insb
fcomp
rcll
mov
mov
pop
sbb
cmp
arpl
movsb
adc
or
imul
inc
movq
lea
xlat
dec
and
xchg
xor
idiv
inc
or
add
mov
jl
shrl
mov
int3
dec
push
add
aad
cmp
xchg
xor
dec
rclb
pop
mov
sbb
or
pop
clc
call
repnz
cmc
ret
pop
popa
adc
leave
mov
jbe
add
jl
and
clc
in
jmp
jg
xchg
shll
mov
and
sub
in
pop
out
mov
jo
sti
inc
jp
and
imulb
nop
cwtl
or
pop
mov
dec
sub
jno
fcmovnb
inc
jo
jle
mov
cmp
aaa
mov
mov
or
iret
mov
iret
or
invd
imul
add
push
xchg
xorb
mov
inc
out
shrb
aas
xchg
int
sbb
das
mov
imul
mov
sub
inc
mov
loope
loope
pop
sbb
gs
mov
es
mov
xchg
bound
sbb
int
sahf
mov
lock
pop
sbb
aam
mov
inc
adc
pop
or
or
jno
adc
cmp
lds
lcall
push
gs
call
call
jb
fisubrl
cmc
adc
in
mov
fisubrl
rcll
decb
mov
test
sub
or
xor
jmp
sub
sbb
dec
inc
out
sbb
int
sarl
fiaddl
pop
jecxz
in
push
mov
push
mov
or
jge
and
fsubrs
add
in
dec
cmp
sub
sub
ret
jbe
xchg
insb
sub
xchg
je
dec
add
lock
jmp
icebp
bound
push
movsb
and
xchg
stos
lret
add
js
sub
adc
sbb
aaa
adc
movsb
mov
xchg
rcl
popf
outsb
mov
mov
jb
int
push
push
push
xchg
inc
or
mov
sar
sub
mov
xchg
fildll
lret
scas
sbb
cmp
das
fadds
mov
pop
jle
jmp
cmpsl
push
fs
outsb
hlt
mov
pop
pop
lock
outsb
pop
pushf
lock
mov
lcall
jne
es
lret
mov
sbbb
sahf
jl
ljmp
cli
repz
mov
ja
loop
insb
pushf
mov
xchg
filds
cmc
lret
add
jbe,pt
scas
adc
xor
ret
pop
fistl
sbb
add
inc
pop
aas
and
outsb
or
lock
cmp
mov
xor
pop
jb
lock
mov
popa
sub
ss
imul
and
pop
rcrl
dec
ds
fwait
and
jbe
into
lods
and
insl
add
loope
cltd
dec
cmpsb
and
incl
imul
inc
add
ret
xor
mov
pushf
mov
je
or
jno
fprem
pop
out
movsl
aaa
mov
test
lret
sub
add
mov
fldt
jecxz
lret
clc
cmpsl
stos
icebp
cwtl
fwait
xor
dec
inc
xchg
and
xchg
xchg
mov
divb
outsb
push
fidivl
push
hlt
cmc
aad
aad
cmp
leave
scas
loop
test
es
inc
rcrl
rolb
xor
fcmovnb
popa
ror
je
sub
and
inc
mov
in
inc
test
push
push
ja
adc
dec
jae
sub
or
xor
dec
xor
mov
div
push
add
idivl
call
cmp
in
mov
dec
mov
fadds
testb
loopne
cmpsl
and
push
mov
stos
mov
iret
popa
add
xor
js
lea
inc
fdivrp
cmp
int3
ja
insl
mov
jg
lahf
push
sub
dec
adc
outsb
xchg
pop
fisubrl
data16
shrl
repz
popf
call
outsb
mov
test
xlat
outsb
in
add
mov
pop
or
xchg
mov
sub
mov
inc
hlt
cmp
mov
pop
lock
mov
xor
xchg
push
fadds
inc
push
jp
sub
or
lret
push
pop
sub
ret
clc
imul
jne
dec
xor
addr16
push
aad
adc
dec
dec
mov
pop
test
pop
clc
shlb
sbb
ret
iret
lahf
and
cmpsl
or
xor
sbb
leave
scas
dec
or
dec
cmp
fisubs
xchg
stos
test
lea
cli
ja
sahf
jbe
sahf
insl
mov
jge
jb
or
push
push
test
pusha
fcmovu
push
cmpxchg
test
xchg
ret
inc
sbb
rcrb
xor
repz
pop
jp
push
cld
mov
jo
push
xchg
or
sub
pop
jecxz,pn
fs
adc
stos
bound
push
cmpl
pop
or
lock
pushl
in
dec
out
cmp
push
cs
bound
push
js
lods
pop
inc
jmp
adc
and
mov
ljmp
sbb
fldenv
inc
fwait
and
inc
popa
push
sarw
xchg
popf
sub
scas
mov
rorl
pop
and
jge
mov
mov
pushf
sbb
stos
jp
sbb
js
subb
stos
push
popa
test
enter
cltd
aas
fidivl
cmp
cmp
jecxz
lea
ds
gs
es
movsl
inc
fdivrl
mov
sub
cs
mov
js
shrb
jns
rcrl
test
cmc
in
push
dec
cmp
lret
out
sbb
aad
push
cmp
cmp
lret
xchg
cmp
jnp
andl
dec
fildl
shl
jmp
jb
in
lret
or
or
push
imul
shl
sbb
sub
stos
cld
shlb
jg
lahf
fstpl
sub
ret
lods
mov
orb
xchg
jmp
xchg
pop
xorb
push
out
sub
icebp
mov
vmovhpd
fwait
je
scas
popf
mov
in
pop
in
mov
popa
jg
mov
push
mov
test
scas
jno
notb
sub
sahf
inc
insl
jo
xchg
jnp
pop
lods
pop
pop
into
sbb
fbstp
mov
rcrl
cmp
bound
jl
sub
fwait
adc
or
cmpsl
fisubrs
pop
addb
or
xchg
int3
push
sbb
dec
pop
dec
xchg
xchg
mov
ss
mov
out
cld
fildl
adc
mov
sbb
divb
xchg
inc
push
jae
cmp
and
loop
sbb
or
add
cli
add
or
popf
das
stc
cmp
push
push
int
pop
cwtl
aam
push
jle
adc
hlt
push
jno
orb
xlat
test
push
ja
clc
shll
inc
pusha
mov
push
subb
sub
shl
xor
pop
nop
pop
jns
nop
sbb
mov
adc
mov
add
leave
sub
pop
cmp
inc
xor
in
jb
es
mov
lcall
xchg
in
sub
add
xchg
shll
sub
cmp
cmp
xor
leave
push
aam
aad
or
dec
jns
cltd
mov
lock
adc
call
or
ss
lea
fnstsw
inc
inc
cmpsb
pop
push
arpl
dec
inc
bound
push
mov
xor
dec
mov
inc
sarl
ret
xor
orb
pop
mov
cwtl
adcb
rcrb
xor
mov
loop
jp
mov
loope
mov
subl
sbb
stos
jecxz
mov
ja
sub
aaa
mov
pop
ljmp
ja
inc
mov
sbb
orl
add
xchg
repz
daa
cltd
sbb
dec
push
and
jno
pop
mov
testl
je
sbb
loope
movsl
out
adc
pop
sub
enter
push
orl
outsl
inc
repz
or
xor
in
hlt
incb
das
sub
test
or
sbb
push
add
int3
add
into
inc
xchg
mov
pop
mov
inc
fists
mov
icebp
fildll
std
bound
je
xorl
pop
test
out
pop
lods
sbb
xchg
into
inc
jnp
xchg
mov
add
test
sti
dec
sahf
ret
fiaddl
mov
rcr
sarl
cmp
adc
sbb
divl
sbb
and
xchg
sbb
frstor
out
movsl
outsl
push
in
or
out
rorb
cmp
or
dec
sub
dec
inc
mov
loopne
dec
call
fdivrl
cwtl
dec
popf
cmc
das
inc
and
cmp
sbb
rol
dec
dec
and
pushl
cmc
pop
outsl
addr16
mov
and
xchg
cmp
movsl
bound
pop
and
mov
mov
mov
sub
mov
lahf
push
jge
and
lahf
dec
lock
mov
adc
insb
lret
xor
push
fisubs
add
sub
je
jmp
xor
inc
push
test
and
push
mov
sbb
rorl
int3
sub
pushf
inc
adc
subps
ljmp
dec
jae
jmp
push
pop
decb
gs
fsubl
add
or
inc
sub
clc
es
ja
pop
mov
in
testl
or
cld
enter
dec
in
xbegin
nop
jl
pushf
rcll
xchg
xchg
js
clc
shl
cmp
jae
sbb
cmp
adc
mov
jmp
mov
repnz
cltd
adc
nop
mov
and
push
out
or
outsl
sbb
movsl
jo
adc
jmp
push
xor
mulb
push
jb
outsb
inc
add
adc
insl
fmuls
cmp
jae
fld
and
mov
inc
push
adc
mov
sub
fistps
cmpsb
lret
in
dec
out
test
add
and
inc
sbbl
js
test
jg
dec
cli
pop
add
mov
xchg
adc
pusha
mov
mov
sub
xchg
xchg
jno
movsb
fldl
into
and
xchg
pop
jge
pop
cmpl
xchg
xor
enter
sub
push
jl
mov
repnz
cmp
fsts
or
mov
sub
sub
jae
adc
push
mov
mov
pusha
xlat
fwait
xchg
xchg
inc
or
and
loop
pop
lret
pop
push
and
bound
add
pop
and
xor
in
in
lods
std
cmpsl
imul
mov
mov
adc
add
pop
lds
ljmp
cltd
xchg
idiv
clc
cmpsl
stos
hlt
or
jl
ss
popf
leave
orl
adc
mov
mov
mov
dec
and
jmp
jb
inc
xchg
pop
xchg
pop
push
ret
add
call
sub
push
and
pop
enter
mov
dec
pop
sahf
pop
mov
mov
sub
aaa
pop
cwtl
inc
sbb
test
lret
aam
out
arpl
test
add
sub
stc
jne
mov
test
dec
mov
inc
jae
cs
test
scas
push
xor
mov
ffree
push
outsl
mov
sub
sbb
mov
xchg
pushf
and
inc
fcmovbe
daa
roll
sahf
inc
jo
mov
xchg
out
pop
mov
push
adc
xchg
inc
adc
jecxz
stos
imul
sbb
xor
movsl
mov
mov
mov
adc
sbb
xchg
xchg
and
mov
pop
jo
lods
fsubl
jmp
inc
pop
enter
ret
stos
lea
jnp
cmc
pop
out
cld
ss
int
jge
repnz
movsl
pop
xor
std
int3
fcoml
movsl
andl
enter
mov
sub
subb
in
ret
lods
aas
mov
dec
repz
movsb
mov
negl
repz
inc
or
icebp
cmp
mov
sbb
rorl
loopne
xchg
inc
push
xchg
inc
dec
mov
sbb
int
dec
aaa
xor
pop
push
cmc
lods
pop
cmp
inc
fwait
stos
cmp
add
pop
subl
mov
sub
cmc
enter
pop
jl
cmp
test
add
xor
mov
push
rcrl
dec
mov
mul
aaa
sub
sbb
nop
sbb
loop
xor
roll
mov
fildl
enter
icebp
rcrl
xchg
push
js
xchg
cmp
call
addr16
hlt
enter
xchg
aad
jge
jl
call
inc
jp
ljmp
imul
xchg
iret
xchg
dec
adc
sub
decb
jno
and
icebp
push
jo
lds
fs
fimull
mov
dec
cld
push
inc
hlt
or
jnp
in
lahf
adc
or
in
adcl
gs
lods
stos
call
pop
test
rolb
fdivrs
clc
add
mov
mov
scas
icebp
nop
push
andl
sbb
cmp
frstor
sub
push
mov
in
dec
mov
rcrl
testl
pop
lea
mov
mov
or
dec
mov
mov
std
mov
inc
xchg
mov
in
cmp
mov
dec
add
sub
stos
lea
dec
mov
xor
dec
test
jl
stos
test
inc
lods
sub
arpl
inc
add
mov
lret
dec
mov
pop
cmpsl
cmp
test
iret
pop
hlt
push
cmc
sbb
inc
mov
and
dec
pop
xchg
ja
inc
dec
aam
mov
xor
aaa
mov
mov
testl
jmp
iret
test
cmpsb
fcmovnu
mov
inc
and
iret
or
cmp
in
mull
xadd
std
pop
shlb
jns
stc
and
inc
lods
test
loope
xchg
outsl
mov
fidivl
sub
cltd
pop
adc
xchg
adc
sbbb
in
scas
xchg
jg
daa
sub
mov
in
mov
imul
push
add
mov
pop
js
pop
jecxz
cmc
sub
or
test
mov
clc
sbb
fnstenv
fwait
jge
xchg
jnp
mov
popa
clc
push
jg
das
jns
std
jp
xchg
inc
mov
roll
ds
ds
xchg
pop
push
fwait
shrb
dec
xchg
negl
mov
movsb
hlt
and
outsb
mov
jg
cltd
pop
rcll
xchg
push
icebp
push
ret
mov
lock
xchg
daa
sti
cmpsb
mov
mov
push
mov
pop
mov
jmp
movl
pop
test
sbb
sbb
add
movsb
sbb
push
xor
mov
ljmp
mov
xchg
and
push
push
imul
lret
or
push
out
lds
jo
jmp
out
push
xor
mov
sub
into
add
aad
cmp
and
in
lods
std
icebp
sub
aaa
cmc
nop
pop
cwtl
fnstenv
jne
fisubl
mov
sub
add
lret
xchg
push
jge
sbb
mov
fcompl
mov
test
sbb
add
sbb
jp
and
shlb
add
mov
sbb
pop
in
sbb
ja
xchg
loopne
daa
fmuls
pop
mov
mov
pop
inc
mov
repz
arpl
shr
sahf
mov
aas
icebp
sbb
fcoml
sar
jb
mov
adc
pusha
jecxz
test
push
test
pop
push
mov
jo
lret
or
aam
cli
aam
lds
push
xchg
and
sbb
lea
orb
push
inc
lock
iret
in
push
or
xchg
and
outsl
lcall
mov
test
lret
stos
daa
addb
xchg
addr16
scas
xor
add
inc
jmp
roll
test
dec
shrl
sar
push
mov
mov
cvtps2pd
push
loope
pop
ret
dec
fcomip
cmpsl
dec
dec
sbb
ja
mov
cmp
xchg
ror
popa
mov
sahf
sbb
mov
leave
mov
jge
xor
daa
out
and
xor
mov
mov
and
cmc
mov
fbstp
inc
or
dec
add
dec
nop
push
leave
jecxz
cmpb
xchg
sbb
test
scas
sbb
mov
and
dec
lods
inc
add
mov
out
or
mov
dec
dec
insl
aam
frstor
mov
lock
xlat
test
pop
jl
mov
ret
and
xchg
cmpsl
stos
jg
adc
ja
and
lds
pop
adc
sbb
ljmp
subb
pop
cld
sub
push
jl
out
mov
jg
inc
add
insl
int
and
add
pop
xchg
add
pop
adc
push
mov
testb
pop
or
cmp
cs
xchg
fnsave
mov
std
mov
cmp
dec
out
loopne
mov
lea
lret
outsl
movsl
inc
mov
mov
or
pop
cmp
dec
push
inc
inc
inc
push
addr16
stos
mov
call
xchg
rcll
add
cwtl
mov
xor
out
cmp
pop
jge
mov
in
cmpsb
cld
mov
xchg
testb
and
cmp
es
and
out
cli
bound
sarl
into
stos
sub
add
addr16
es
repz
mov
xchg
lock
aad
cmp
rclb
and
mov
and
xchg
pop
std
sti
mov
into
mov
cmp
adc
pop
dec
jle
filds
sahf
stos
inc
fsubrp
rcll
mov
rorb
push
jl
pop
xchg
and
out
xchg
adc
dec
jp
and
push
adc
cmp
jns
movsb
rcll
pusha
ljmp
xchg
jne
mov
mov
mov
scas
fdivs
cmpsl
outsb
cmp
leave
fidivrs
push
mov
adc
movsl
or
cltd
ljmp
pop
jmp
aam
fwait
mov
scas
sub
loope
pop
xor
and
sarb
fs
jno
push
push
ror
adc
cld
call
popl
loope
mov
scas
mov
iret
cmpsb
popf
xchg
into
lahf
fdivs
pop
mov
or
jmp
in
inc
cmp
mov
adc
scas
and
fists
sub
into
mov
repz
popa
xchg
cld
inc
movsb
fnsave
push
and
or
popa
pop
add
sbb
into
outsb
aam
scas
cmp
scas
pushf
cltd
or
mov
test
idivl
inc
jmp
in
testb
cmpsb
jae
inc
xlat
test
int
popf
cmp
mov
sbb
mov
insl
fstl
dec
imul
mov
pop
andl
divb
jp
add
aam
scas
test
and
mov
clc
pop
aaa
ret
iret
mov
push
adc
jae
sbb
idivb
je
sarb
pop
imul
xchg
jl
cwtl
in
stos
xlat
and
faddp
dec
jno
jo
insb
test
ret
ror
inc
rcll
mov
sub
xchg
pop
sub
push
ja
aad
push
outsb
dec
xchg
pop
pushf
push
xor
imull
lods
sub
faddp
test
add
mul
or
add
cmp
movsl
add
mov
movsb
aad
xchg
repz
dec
sti
xchg
test
es
enter
out
xor
rcll
mov
scas
movsb
lret
insb
inc
dec
shr
push
and
or
lods
sahf
fdiv
shrl
and
adc
out
sub
xor
mov
mov
inc
adc
les
test
cmp
add
leave
fstpt
pop
jecxz
popa
insl
pop
jp
xchg
and
lcall
mov
xchg
lea
mov
aaa
ljmp
pop
xor
pop
aam
xchg
dec
adc
push
mov
xchg
aaa
sbb
inc
fistpl
ret
mov
nop
cmp
or
pop
mov
loop
lods
rcrl
wbinvd
cmpsb
sbb
out
xchg
enter
mov
lods
sub
xor
add
mov
adc
push
mov
lret
cwtl
adc
cmc
test
xchg
xchg
roll
mov
mov
jnp
xor
scas
cs
jecxz
mov
sub
lock
and
adc
adc
js
loope
jae
mov
and
jae
scas
fisubrs
leave
dec
and
push
in
or
testb
pop
sub
lahf
add
xor
pop
pop
mov
mov
inc
ja
xor
cmp
dec
push
adc
add
shlb
pop
or
outsl
cld
lea
mov
mov
mov
icebp
fdivr
or
arpl
aad
mov
sar
mov
inc
addr16
dec
adc
inc
scas
pop
outsb
mov
mov
shr
inc
sub
cmc
pop
jl
lcall
jmp
push
sarl
push
lods
das
rcrl
pop
into
add
cmc
cmp
cli
loop
cmp
and
mov
inc
stc
mov
out
mov
dec
push
pop
cmpsl
data16
iret
jns
clc
sbbb
outsl
push
ljmp
icebp
loopne
out
push
mov
mov
adc
repnz
movsb
sbb
jge
xor
jb
or
fisttps
pusha
push
and
mov
add
mov
or
fcoms
mov
jp
xor
or
rclb
sti
jle
pop
or
mov
lods
xor
ja
aad
out
std
dec
add
push
xor
pop
test
mov
test
cmp
stc
add
ss
rcll
pop
dec
lret
xchg
shlb
xchg
test
sub
and
sti
add
sub
xor
xchg
stos
mov
std
icebp
xor
pop
popa
cmc
add
adc
push
mov
insl
mov
cmpsb
mov
lods
cli
fcompl
xchg
imul
popa
pop
xor
aam
and
js
test
shrl
iret
mov
jecxz
test
shlb
inc
lock
xor
mov
and
xchg
daa
mov
in
je
imul
js
push
push
loope
fdivs
and
movsb
mov
mov
int3
mov
movsb
ss
lea
int3
ret
adc
cmpsb
dec
mov
lds
cs
and
cmp
adc
mov
mov
inc
lock
outsl
xchg
push
lcall
repz
dec
insb
sub
sahf
js
cld
mov
sub
add
push
or
ret
enter
sub
movsb
push
sub
int
dec
ja
jns
clc
movsl
pop
imull
and
pushf
cmc
lods
sub
push
inc
mov
pop
sbb
testb
scas
pop
push
or
addr16
xor
fldl2t
iret
and
mov
jecxz
inc
xchg
mov
pop
pop
sbb
scas
push
pushf
cmp
clc
and
push
test
add
fbstp
sti
mov
shlb
and
mov
movsb
jg
jle
lea
and
dec
subl
rorb
mov
pop
cwtl
pop
xor
lahf
sub
pop
mov
xor
imul
xchg
mov
insl
jno
cld
or
mov
or
pop
lods
daa
xchg
es
adc
insl
lcall
das
lods
mov
in
and
or
xor
add
sar
xchg
xor
sbb
push
and
mov
imulb
fimull
out
xchg
mov
dec
imul
inc
mov
dec
imul
xor
outsl
clc
int3
adc
nop
push
push
out
les
xchg
je
xchg
jge
cli
int3
fwait
push
mov
nop
push
data16
loop
fcmovb
cmp
mov
cmp
mov
push
jl
out
mov
shr
sub
cltd
lods
sbb
repnz
cmpsb
imulb
dec
imul
cs
jae
std
mov
repz
sbb
adc
out
loope
hlt
pop
sti
push
out
movsb
inc
cld
mov
sarl
jl
pextrw
dec
dec
lahf
mov
cltd
movsl
pusha
fs
arpl
rcl
cwtl
lahf
push
jns
inc
popa
cmp
cmp
enter
pop
push
cltd
sahf
fmuls
cmp
out
or
rcr
and
loop
lods
adcl
add
xchg
jge
and
jbe
rcrb
cmp
and
push
or
popa
sbb
shlb
cmp
out
mov
cwtl
cmp
jns
jle
sub
sbb
lcall
lea
popa
mov
cmp
lret
lods
inc
jo
pop
cmp
mov
or
js
mov
call
rorb
jbe
mov
out
addr16
loope
aas
scas
cmp
mov
and
out
andb
push
repz
dec
iret
pop
and
sub
xchg
lds
jg
mov
aaa
and
push
dec
adc
xlat
outsl
call
dec
pop
jmp
cwtl
iret
scas
sbb
ljmp
adcb
fisubrs
pop
arpl
push
ror
int
jle
jno
les
and
stos
inc
xchg
sub
sbb
xchg
pop
lock
dec
call
pop
jbe
mov
notb
insl
mov
or
add
mov
inc
xchg
stos
dec
in
add
xchg
lock
push
test
sub
out
sbb
sub
imul
mov
mov
leave
mov
rolb
dec
mov
lock
mov
sub
js
outsl
mov
add
loopne
jne
add
or
and
mov
and
inc
inc
int3
inc
xlat
dec
add
adc
mov
jp
nop
idiv
es
jge
adc
dec
shlb
mov
dec
add
fisubrs
sbb
js
xor
sub
sub
icebp
push
xchg
dec
jae
test
insl
jecxz
imul
pop
sbbl
pop
mov
xchg
sti
push
xchg
xor
mov
xor
xor
pop
or
call
add
lea
inc
mov
cmp
fcoms
mov
lahf
pop
xor
jecxz
cmova
shrl
cld
push
in
adc
fistpll
sti
jno
in
inc
stos
inc
mov
xlat
out
sti
bound
mov
jg
loop
add
sbb
mov
xor
sub
imull
jno
in
jmp
in
into
test
sti
scas
and
movsb
les
xchg
mov
inc
insl
jmp
lds
mov
cmp
fsubrl
lahf
and
call
or
and
add
cld
stos
jnp
sbb
jnp
nop
inc
xor
nop
ret
mov
cltd
sub
push
jl
js
cwtl
enter
sub
in
icebp
cmpsl
fstp
sbb
mov
pusha
call
mov
jno
es
daa
cmp
mov
add
ljmp
aam
lods
cmpsl
adc
jmp
pop
jnp
sub
mov
icebp
in
jmp
push
iret
cmp
iret
sarl
and
mov
mov
hlt
lock
cld
addr16
push
pop
mov
jle
add
bound
data16
lods
pusha
imul
aas
push
mov
sub
mov
add
hlt
mov
jo
inc
rcrl
rorb
movsl
xor
ljmp
out
xchg
pop
sbb
mov
dec
jecxz
sbb
mov
mov
outsl
clc
iret
hlt
push
and
mov
cmp
pop
loop
pop
lret
mov
sbb
sbb
mov
or
pusha
dec
sbb
lret
or
movsl
add
mov
lds
lret
testb
stos
addb
push
pop
push
push
sub
js
cld
mov
bswap
ds
insb
add
jmp
ljmp
movb
mov
es
shrl
aas
jmp
cmp
push
adc
jecxz
adcb
sysenter
sarb
adc
stos
dec
and
sub
xchg
cmpb
imul
jle
testb
out
jns
push
repnz
fnstsw
in
movsl
sbb
adc
inc
pop
cli
mov
faddl
fisubrl
loopne
add
fstps
jl
iret
bound
pusha
stc
arpl
push
push
ss
scas
xor
sub
lea
aad
and
adc
mov
loop
push
cmp
mov
imul
jle
scas
add
adc
shll
mov
sub
shlb
call
out
fisubrs
out
xor
loope
and
stos
cmp
popf
or
mov
dec
sub
pop
call
lahf
stc
pop
mov
cld
sbbb
test
xor
rolb
enter
sbb
in
pop
jne
sahf
inc
cmpsl
and
cmp
ret
jmp
ja
jns
insb
mov
add
cmpsl
in
mov
mov
test
and
retw
pop
mov
movsl
inc
out
pusha
lret
inc
sub
mov
repnz
jg
push
cs
cs
xor
incb
aas
pusha
test
sub
rcl
cld
jl
xchg
incl
ficomps
add
ret
fsubp
jns
repnz
or
and
cmp
xchg
in
mov
mov
pop
mov
dec
cmp
in
dec
sarb
jle
cld
push
stc
dec
mov
jmp
jg
cvtpi2ps
sub
add
fsts
push
fdivrs
call
xchg
sub
add
inc
into
push
inc
sahf
mov
or
and
imul
lods
dec
push
mov
mov
in
push
shrl
mov
mov
outsl
or
mov
imul
les
dec
adc
push
add
pop
test
xor
xor
sar
pop
cwtl
in
sbb
sub
cmpsl
cmpsb
cld
test
jno
dec
repnz
imul
negl
sbb
inc
aas
fdivrp
outsl
cmp
mov
adc
sbb
out
xlat
xor
push
jns
mov
pop
int
inc
jb
lods
sub
icebp
test
in
lret
inc
or
jmp
push
shl
xchg
jns
sub
mov
fnstsw
inc
in
test
js
aaa
js
or
xchg
mov
adc
cli
pop
jp
adcl
adc
shrl
loop
es
imul
mov
fs
mov
xor
clc
inc
cmp
sahf
mov
clc
mov
xchg
adc
dec
push
sbb
pusha
and
lahf
xorl
loop,pt
inc
lcall
mov
cmp
dec
ds
push
pop
push
mov
jmp
jle
push
adc
lcall
outsl
roll
test
jnp
dec
cmp
roll
adc
call
jmp
fwait
lcall
leave
sbb
mov
jle
mov
sub
mul
sbb
rcrb
daa
aad
mov
pop
sti
repz
js
cltd
mov
dec
aaa
cmp
cmc
sbb
dec
loopne
add
cmp
jle
lcall
popfw
insl
repz
inc
pop
push
nop
std
rcll
fs
push
jo
or
andb
add
jl
testl
mov
dec
push
push
pop
sub
aaa
in
xor
cmpsl
mov
outsl
jns
stc
addr16
into
and
xor
mov
xchg
cmp
xchg
insb
mov
popf
fisttpll
sub
call
clc
dec
mov
mov
mov
cwtl
movsl
and
inc
dec
pop
xor
aad
adc
sbb
movsb
jmp
lock
pushf
pop
mov
push
mov
out
cld
inc
mov
cmp
mov
mov
jg
pop
in
test
int
xchg
mov
cltd
jmp
ja
xchg
testb
mov
cmp
jl
mov
ret
or
jns
jmp
xor
es
fdivs
push
loop
dec
or
scas
clc
xor
or
test
fisubs
adcb
jle
push
sbb
lods
scas
jmp
mov
sub
movsb
aad
pop
or
mov
dec
jo
jbe
jp
xor
mov
mov
or
cs
arpl
xchg
xor
add
or
or
flds
and
xchg
add
add
test
dec
sbb
pop
negb
jb
pop
push
pop
sub
shl
js
jb
push
xchg
mov
sahf
jmp
and
mov
icebp
and
inc
jl
and
push
cmp
or
sbbb
out
ds
xor
repz
adc
ljmp
and
fiadds
fidivs
jg
in
sbb
adc
popa
mov
jae
std
dec
pop
mov
add
into
xor
mov
test
push
stos
cmp
es
xchg
lret
pop
push
sub
jg
sbb
repnz
mov
test
inc
aad
jmp
jl
enter
jns
push
sbb
mov
push
push
ss
xor
lahf
dec
cmpsl
and
dec
sbb
cld
insl
mov
outsb
sbbl
xor
movsl
mov
insl
leave
lock
mov
push
push
es
xlat
xchg
push
pushf
xor
iret
mov
in
je
scas
sub
lahf
cmp
repnz
push
imul
add
push
mov
orb
rcrb
cwtl
pop
sbb
aam
mov
sar
mov
daa
and
mov
push
js
mov
xor
ljmp
and
ror
shl
insl
push
lahf
test
pop
push
pop
pop
mov
sub
insl
cmpsl
pop
sub
adc
and
jae
leave
rep
add
lahf
test
push
aam
and
add
lea
mov
cmc
leave
lods
or
mov
sub
jo
cmp
pop
mov
arpl
xor
push
in
pop
aaa
lret
push
cwtl
cltd
xchg
pop
jle
lock
std
bound
pop
popf
pop
cmpl
scas
pop
or
ret
or
shlb
nop
sub
addr16
jae
inc
jecxz
aam
inc
mov
test
xorb
loopne
mov
mov
rcll
negb
mov
xlat
push
mov
xor
stos
inc
dec
pop
xor
xchg
sbb
inc
lcall
sarl
sbb
push
adc
dec
data16
icebp
inc
daa
mov
mov
xor
pop
pop
xor
sbb
or
outsb
lock
hlt
sub
popa
dec
out
and
push
jbe
rcl
daa
scas
rolb
and
inc
lods
mov
or
xor
and
xchg
imul
je
dec
xor
and
cli
hlt
pop
lret
ss
in
nop
xchg
imul
dec
pop
jb
dec
cli
rcrb
and
sti
or
lea
or
mov
dec
fsub
pop
fwait
cmp
pop
add
pushw
ljmp
push
cmp
mov
jne
inc
push
pusha
sub
mov
outsl
stc
jb
xchg
outsl
or
inc
push
inc
xchg
movsl
negb
out
mov
sub
dec
xchg
sbb
add
cmp
mov
sarl
scas
mov
mov
loopne
loop
jge
ss
fsubrs
repnz
push
leave
outsb
mul
stos
cmpsl
adc
xchg
gs
mov
movsb
in
push
outsb
pop
je
aas
or
fidivrs
dec
test
mov
orb
lahf
jge
xor
jge
cli
out
call
arpl
mov
dec
xor
sub
push
and
xchg
ficompl
int
mov
adc
or
fisubrs
adc
dec
lods
mov
pushf
pop
lcall
repnz
scas
fistpl
stos
fistl
sbb
fwait
sar
cmpsb
fisubs
and
cmpsl
cmpsl
testb
adc
js
nop
mov
ja,pt
inc
lods
cmpsl
mov
mov
test
das
inc
cwtl
insb
cmp
outsl
movsl
mov
mov
rclb
cmpsb
test
lahf
lret
adc
jp
enter
xlat
loope
cmp
push
fcmovnu
sub
pop
test
pop
mov
add
enter
loop
lods
in
mov
inc
aam
jmp
ja
icebp
leave
push
fs
out
in
sbb
inc
pop
mov
xor
fistpll
xor
sub
pop
xchg
push
enter
movsl
xchg
loop
xor
fwait
dec
lret
lret
repz
inc
mov
aas
adc
inc
sub
dec
fadd
and
and
pop
fwait
test
stc
cmpsl
sub
sti
movsb
mov
mov
lret
push
fildl
test
xchg
sub
icebp
inc
gs
and
mov
int
pop
fiaddl
xchg
fcompl
fstpt
sbb
xchg
mov
aaa
xchg
fidivl
fs
rcrb
call
leave
jb
mov
daa
fsubrl
dec
test
testb
fidivl
outsl
add
sbb
jg
in
bound
scas
stc
fldl
subb
setg
dec
jno
sub
xchg
push
mov
mov
xor
push
adc
inc
int3
push
inc
in
pop
add
jg
and
aam
push
add
mov
fistl
sub
test
add
inc
lock
repnz
inc
jge
xchg
sbb
and
or
xchg
test
repz
xor
push
jle
fisttpll
and
shr
inc
pop
rol
roll
std
sbb
add
mov
jl
sbbl
subl
addb
mov
mov
call
shlb
push
fdivrl
in
or
sbb
hlt
inc
jge
dec
cli
mov
and
and
dec
pop
out
int
sub
mov
ret
pop
fstl
lcall
scas
fisubl
lds
jno
mov
cmp
imul
push
test
mov
cmp
lret
loop
sarb
data16
adc
and
dec
jg
inc
nop
outsb
pop
repnz
lock
test
adc
lock
je
dec
push
xchg
xchg
jno
sub
addb
popa
aas
cmp
mov
or
inc
cli
out
fadds
aaa
pusha
stos
ljmp
mov
popf
outsb
sbb
xor
mov
inc
stos
ljmp
lods
std
xchg
mov
stos
cmp
daa
push
rcll
imul
in
lods
push
mov
orb
sbb
mov
insb
mov
js
sub
mov
lret
mov
fdivl
push
in
add
sbb
cmp
cmp
cli
push
pop
cmp
mov
pop
lahf
gs
lcall
orb
shlb
stos
and
int3
xlat
in
xor
mov
lret
add
movsb
jns
jbe
outsb
xchg
popf
clc
je
mov
pop
push
pop
mov
cmpsl
fcompl
and
fnstenv
in
push
in
mov
cmpsb
cwtl
outsb
repz
mov
lahf
fisttps
add
jmp
push
lcall
adc
test
mov
dec
mov
jge
idivb
fildl
out
lea
mov
inc
sub
xchg
dec
lods
mov
int3
idiv
cli
popa
push
push
and
in
jle
jmp
pop
iret
punpcklwd
roll
ret
add
popa
xchg
daa
fcoms
mov
and
jb
mov
sub
imul
mov
xlat
loopne
pop
fstp
mov
cmp
andb
cmp
mov
iret
pop
cmp
sbb
push
mov
mov
cmpsb
int
inc
out
imul
sbb
inc
or
dec
fstpl
adc
clc
cli
je
roll
xor
and
arpl
nop
add
jae
push
and
loopne
into
or
cmp
jp
jb
into
mov
cmp
out
push
mov
mov
imul
xchg
push
mov
aaa
jns
mov
call
mov
mov
jne
dec
mov
test
add
inc
loope
pop
xorb
es
xorl
inc
rcr
and
and
push
mov
decl
call
sub
jle
std
sti
repz
int3
push
inc
hlt
pop
inc
fistps
push
and
adc
in
arpl
aam
bound
pop
cmpsl
mov
cmp
test
mov
push
or
xor
xchg
or
mov
out
mov
add
outsb
adc
loopne
clc
or
loop
stc
int3
dec
repz
cmc
test
aas
push
movsl
imulb
fdivp
add
pop
xor
je
jmp
bound
jb
or
lret
or
int
addb
imul
into
adc
inc
fdivr
movsb
pop
xor
jmp
jl
pop
push
outsb
int3
dec
lock
and
or
repnz
adc
mov
fistl
jp
fwait
les
icebp
shr
ret
hlt
mov
ss
push
mov
xchg
loop
adc
jg
js
xor
jnp
repz
out
xchg
call
imul
insl
jno
rcr
pushf
xchg
and
nop
adc
or
fsub
push
bound
dec
cli
add
jbe
and
inc
add
push
into
lea
mov
jnp
sbb
cmp
dec
sbbb
xlat
and
out
xor
xlat
ret
das
xchg
xchg
mov
out
fildl
lcall
ljmp
int
out
mov
mov
enter
nop
es
test
leave
das
addb
mov
xor
xchg
push
movsb
gs
movsl
mov
sbb
pop
add
cmpsl
push
add
shlb
loope
cmc
in
insb
enter
pushf
sub
mov
stos
xorb
mov
test
cli
outsl
cmp
dec
pop
pop
push
jl
mov
ljmp
xchg
dec
cltd
arpl
push
xchg
push
jg
imul
shr
pushf
or
mov
int
movsb
mov
aad
in
sbb
lods
stc
loope
cltd
clc
xor
xor
sbb
pop
mov
dec
inc
punpckldq
sete
jns
dec
jecxz
mov
call
and
or
lahf
out
fldcw
mov
pop
imull
xor
pop
fwait
pop
mov
and
ret
daa
add
jno
xor
ja
mov
or
xor
aam
mov
adc
or
and
mov
sbb
mov
arpl
fmull
mov
iret
sahf
loop
push
xchg
inc
push
inc
push
aaa
xlat
xor
add
xchg
mov
stc
dec
scas
mov
xor
loope
jmp
push
out
jmp
jmp
ja
arpl
out
push
cmovbe
stos
adc
shr
pop
scas
clc
xchg
negl
jno
js
fsubr
push
jnp
jge
into
jecxz
leave
mov
loopne
inc
inc
loop
cmp
mov
mov
and
xor
mov
adc
or
cmp
fs
cmpb
adc
inc
hlt
add
push
pushl
cli
adc
xor
push
stos
cld
inc
jmp
loop
push
mov
mov
imul
push
addr16
xchg
mov
jmp
out
and
adc
subl
xchg
dec
in
std
xor
loop
add
movl
fdivrl
sti
aas
jns
hlt
lock
roll
mov
addl
sub
pop
add
mov
scas
in
jecxz
pop
aad
sarl
loop
daa
stos
imul
adc
push
mov
aaa
cli
lods
xor
dec
adc
xor
pop
sub
jbe
push
jle
jb
xchg
mov
sbbl
repnz
sbb
enter
or
aas
movsl
xor
out
icebp
test
in
pop
out
adc
sbb
mov
fs
mov
imul
pop
lods
dec
aad
mov
mov
sub
lcall
mov
add
jbe
sub
cmp
add
ds
push
push
and
daa
or
adc
lods
and
or
inc
xor
push
or
bound
stc
jnp
addr16
or
and
gs
lret
fcomp
cmpsb
fiaddl
dec
mov
fs
dec
jge
cmpsl
sbb
jecxz
movsb
pop
or
in
add
sub
ss
test
into
jo
xchg
jp
js
xchg
sbb
arpl
xchg
mov
mov
ljmp
inc
mull
mov
xor
stc
imul
loop
leave
sbb
inc
rcl
out
hlt
xchg
adcl
sub
mov
sbb
jecxz
add
fdivrs
in
pop
into
imul
ss
push
into
cmpsl
int
pop
dec
adc
in
mov
popl
scas
fs
mov
adc
add
sub
test
mov
popf
add
enter
cwtl
bound
daa
popa
xchg
and
out
add
pop
cmp
call
sub
pslld
pop
out
sahf
jg
and
sbb
lret
sub
decl
clc
aad
test
sub
mov
mov
sub
out
rclb
pop
fs
negb
pop
dec
mov
pop
nop
adc
les
loop
xchg
push
mov
jmp
mov
dec
loop
jne
pop
lret
mov
pushf
fcoml
scas
lret
or
scas
or
jmp
sub
adc
xor
lret
xor
xchg
and
cwtl
loope
push
lret
sbb
outsb
cld
loop
jnp
dec
push
lods
scas
fdivl
movsl
outsl
mov
push
das
pop
push
insb
rorb
loop
mov
shll
in
mov
inc
inc
cmc
and
divb
sub
les
mov
cli
sub
mov
mov
sarb
ss
cld
imul
fsubp
lods
shll
jae
in
popa
pop
mov
mov
and
cmp
sbb
add
push
push
repz
movsl
rcr
jnp
and
fcoms
out
mov
out
xor
xchg
xor
cmpsb
icebp
push
dec
outsl
cmp
inc
test
xchg
stos
mov
pop
sbb
push
mov
xlat
mov
or
dec
mov
push
in
out
cmpsb
fcmovu
add
es
push
and
mov
xchg
in
cmp
dec
inc
push
outsb
jge
xchg
ljmp
sub
in
sub
push
add
std
fmulp
das
int3
lcall
push
loope
mov
sub
movsl
lret
scas
or
pop
sub
and
loope
fs
cli
xor
pop
push
int
mov
insb
inc
mov
loopne
cmc
lods
mov
lods
std
push
sub
stos
sub
stos
and
pop
dec
mov
std
sbb
adc
aam
pop
mov
ss
lret
ljmp
repz
pushf
push
and
out
mov
gs
dec
xorl
cs
out
pop
aad
mov
gs
into
lds
repnz
test
fisubrs
leave
lods
leave
loop
add
nop
loopne
or
cmp
jp
cmp
mov
test
xor
jns
out
sbb
sub
out
insl
sub
je
stos
aad
fcomip
ret
cmp
cmp
hlt
ret
jp
imul
jns
dec
xchg
xor
cmp
out
fimull
mov
sub
fists
into
or
imul
test
inc
jecxz
js
jbe
inc
stos
out
or
adc
lods
test
outsl
in
jns
lahf
sahf
sub
push
add
cld
push
imul
push
push
aas
add
fidivrs
add
mov
jle
mov
adc
imul
push
sub
ja
xor
insl
insb
inc
mov
fs
loop
sti
dec
mov
dec
jmp
adc
repnz
cld
and
bound
mov
sub
fstps
xchg
cmpsl
into
or
nop
das
pop
sub
test
clc
outsl
mov
cwtl
sahf
mov
mov
push
bound
rclb
xchg
jno
stc
push
push
arpl
in
cli
pop
scas
mov
xchg
test
inc
or
in
cmpsl
sbb
jp
outsl
outsl
fxtract
int3
jno
fdivr
imul
add
jmp
xor
mov
inc
pop
out
xor
inc
repz
and
add
push
clc
das
gs
mov
lds
xchg
sbb
int3
pushf
daa
add
add
dec
mov
loop
stc
ret
repnz
movsl
jge
jp
out
popf
scas
xchg
cltd
call
add
lret
or
inc
outsb
in
adc
dec
dec
dec
ficoms
jbe
inc
dec
mov
mov
cli
ljmp
pop
dec
sahf
mov
sbb
adc
rcrb
mov
popaw
ds
sub
add
push
and
add
shll
xor
xor
std
nop
dec
mov
cmp
ds
push
in
and
mov
mov
push
imul
or
pop
sbb
outsb
sbb
icebp
pop
clc
mov
popa
leave
mov
fistps
ljmp
test
xchg
xchg
inc
dec
out
scas
ljmp
cmp
mov
or
mov
rolb
mov
shrl
jne
mov
push
push
sbb
pop
cli
or
js
out
aaa
loop
lods
out
cmp
out
jns
add
cmp
ds
mov
xor
sbb
xor
sub
sub
mov
aas
lret
decb
movsl
mov
pop
or
mov
popa
mov
les
outsl
jnp
dec
outsb
mov
cltd
sarb
decl
add
pop
fisubl
ss
inc
gs
xchg
and
test
std
adc
rclb
in
daa
and
fbld
shr
int
cmp
insb
js
scas
push
jg
push
lret
push
sub
cs
les
cmp
mov
int3
xchg
and
leave
aad
inc
scas
xchg
imul
push
jae
adcb
xor
ret
pop
lret
das
popf
insb
or
in
mov
pop
fcomi
xchg
cmpsb
out
gs
cld
pusha
mov
pop
lods
test
xchg
hlt
call
repz
cmpb
mov
inc
push
sub
or
cmp
dec
pop
aas
outsb
adc
daa
and
dec
push
xchg
ds
mov
test
call
fwait
popf
mov
ljmp
pusha
adc
inc
inc
pop
lods
sub
outsl
icebp
sub
daa
addb
push
push
sub
in
lods
adc
and
mov
ret
aad
mov
inc
add
iret
pop
dec
aas
dec
sub
inc
inc
das
pusha
fsub
lds
imul
ljmp
sbb
push
cli
add
or
dec
mov
mov
push
popf
fbld
xchg
mov
cmp
jle
adc
lock
xor
xor
jo
mov
or
xchg
imul
jne
loope
adc
jns
xchg
inc
mov
jns
mov
inc
jno
fcoms
dec
adc
cli
or
fisubl
repnz
adc
adc
imul
dec
mov
popf
sbb
iret
xor
nop
adc
add
int3
push
bound
mov
repz
pop
add
flds
andb
jl
adc
loopne
and
cs
popa
cmp
xor
mov
in
aaa
divl
push
xchg
rclb
dec
sub
iret
inc
or
cmp
mov
mov
test
in
push
or
inc
mov
ret
push
insl
mov
daa
out
mov
pop
lcall
mov
fwait
sbb
adc
fsubrs
out
lahf
mov
scas
xchg
aas
flds
lds
nop
mov
lea
jp
xlat
inc
and
or
push
mov
data16
loope
jg
and
pop
aad
mov
sbb
push
push
xor
mov
pop
pop
xchg
stos
lahf
or
or
fistpll
out
mov
mov
divl
test
adc
das
out
je
dec
repz
jmp
enter
inc
jne
repz
mov
mov
cmp
add
je
das
xor
shrb
test
out
out
cwtl
adc
pop
sub
cmp
mov
mov
mov
push
out
pop
or
push
lods
data16
test
out
negb
inc
cli
or
and
mov
rcll
arpl
jne
xor
js
outsl
xchg
pop
shl
lock
mov
push
shrl
repz
pop
andb
and
les
mov
jnp
int3
clc
popf
dec
addr16
and
sti
mov
and
xchg
add
jno
in
lcall
mov
nop
pop
mov
cld
xchg
sub
cmp
push
cmp
repnz
cmp
insl
enter
int
int
ds
bound
mov
xor
or
stos
mov
sbb
jne
mov
cs
ss
and
adc
test
mov
dec
push
or
jbe,pt
add
inc
xlat
dec
scas
rolb
xor
mov
sbb
push
lcall
dec
jnp
fst
fdivs
cmpsb
inc
xchg
or
pop
loop
ret
sub
push
xor
xchg
out
sahf
gs
lods
fsubrl
and
or
int3
outsl
fmuls
lret
gs
lret
pop
mov
lret
fs
push
cltd
out
xchg
fsubrs
loop
iret
mov
scas
out
pop
mov
dec
andb
loope
pushf
js
push
add
push
mov
mov
gs
jmp
cwtl
inc
shrb
test
cld
pop
shll
jae
jnp
dec
cmp
xor
std
xor
pop
jge
sarl
pop
jb
mov
xlat
imul
gs
pusha
ss
xor
out
mov
push
add
adc
mov
inc
mov
nop
dec
in
sysenter
pop
movsb
inc
jmp
add
sub
lock
sti
repz
rcrl
jecxz
mov
xchg
xchg
mov
and
int
jne
jecxz
cmc
rcl
loope
mov
inc
in
in
movsl
je
fsubr
scas
mov
jg
out
loope
cmp
mov
movsl
mov
mov
push
jns
mov
aaa
inc
ja
jle
sbb
mov
xor
lret
inc
mov
sub
push
mov
jle
adc
mov
pusha
xchg
or
mov
cmp
scas
mov
mulb
inc
xor
out
xorb
xchg
mov
mov
nop
repnz
mov
insl
cmpsl
dec
shl
push
sbb
add
cmp
scas
test
arpl
and
fdivs
xor
adcb
add
rcll
das
nop
mov
into
push
pop
add
add
cwtl
add
or
popa
xchg
mov
dec
and
inc
les
cmp
shl
mov
jge
mov
ficompl
popa
xlat
sbb
test
sub
cltd
cli
inc
outsb
add
ror
sbb
mov
decb
sbb
jge
mov
aas
fidivs
fcomps
sahf
jl
pop
add
xchg
subl
stos
test
pop
scas
test
lds
xchg
aas
test
sub
sub
popa
push
sti
in
iret
fnstcw
aas
int
xorb
int
mov
je
popa
push
and
aad
int
xchg
add
xor
cli
jl
minps
sub
jns
insb
sbb
scas
imul
sbb
pop
mov
inc
jns
or
insl
xor
cmpsb
out
pop
jno
out
jle
mov
movsb
lea
inc
sbb
mov
and
dec
pop
out
aaa
mov
push
or
mov
arpl
gs
and
xor
into
cli
mov
cltd
push
ljmp
sub
fstpt
push
arpl
pop
addr16
test
sahf
pushf
int
ljmp
pop
lds
add
pop
pop
add
fadds
sysexit
addr16
dec
loop
xor
push
push
lods
jp
dec
jp
and
ja
aad
jbe
enter
cwtl
cli
jnp
push
repz
mov
and
idivb
mov
enter
add
inc
outsl
xchg
inc
gs
lahf
in
add
dec
push
test
je
and
cmpsl
add
in
mov
fisubrl
inc
in
adcb
pusha
test
pop
sti
out
adc
push
jmp
aam
add
xor
or
lret
scas
hlt
inc
rcll
adc
push
mul
sub
enter
jge
test
and
sub
cwtl
inc
xor
jle
push
xchg
insb
pop
cmpsb
sbb
adc
sbb
es
mov
cmp
inc
jb
scas
in
sub
push
add
in
aas
mov
inc
int3
pop
xchg
inc
lock
or
jno
sbb
adc
ds
shlb
dec
cmp
add
pop
xor
lods
cwtl
inc
pop
mov
adc
add
out
mov
imul
shlb
jmp
or
cli
fcompl
loop
pop
xchg
push
mov
cmp
cmp
xchg
inc
jmp
rcl
jns
pushf
pushf
mov
lods
sbb
dec
jae
adc
int
aad
or
sarl
movsb
dec
push
stos
mov
test
je
lret
cmp
data16
bound
mov
jle
cltd
pop
clc
push
iret
cmc
jae
fsub
dec
sub
aas
sbb
psubd
xchg
push
icebp
lret
adcl
mov
cwtl
cltd
roll
loope
aaa
mov
xchg
insl
mov
int
in
repnz
mov
rolb
fldt
out
mov
adc
cltd
mov
xorb
loop
push
addr16
add
dec
arpl
xchg
dec
jb
dec
mov
and
mov
cmp
in
popf
dec
xor
cmpsb
mov
mov
test
or
fmuls
mov
and
inc
pushf
cltd
jbe
mov
or
popf
pop
cld
jg
pop
into
xchg
fmull
negl
pop
xchg
xchg
imul
repz
jnp
test
or
xchg
inc
push
arpl
cwtl
mov
ja
mov
movsl
ljmp
or
sub
cmp
lret
adc
inc
cmp
inc
and
push
ret
jo
repnz
out
adc
mov
cli
pop
in
push
loop
popa
pop
int
jg
in
sub
aaa
ret
mov
jb
inc
mov
lcall
pop
mov
and
lods
pop
xchg
mov
sbb
out
pop
adc
cmp
or
popa
fwait
arpl
add
pop
sti
or
cmp
adcl
rcrb
adc
sbb
push
mov
out
jne
in
inc
or
div
jae
nop
addr16
mov
mulb
ret
cld
addr16
lcall
es
cmp
into
int
add
xor
rcrl
mov
out
cmp
pop
cmp
adc
dec
mov
add
adc
pop
pop
or
leave
xor
mov
jnp
gs
test
add
mov
movb
jb
adc
lods
lret
or
push
jb
xor
repnz
push
inc
cld
je
daa
inc
vpcomq
push
xchg
or
fdivrs
jmp
lods
stc
leave
cltd
clc
jns
mov
arpl
cmp
mov
std
pop
fldl
inc
icebp
lods
inc
movsl
std
adc
popf
jge
xchg
jo
adc
dec
test
lock
xor
movsb
arpl
sbb
push
repnz
pop
dec
ljmp
push
dec
cs
iret
sbb
clc
mov
imul
lret
popa
pop
aas
pop
rclb
fildl
adc
push
sti
sub
jne
sub
and
adc
in
stc
icebp
lret
dec
pop
cmp
xchg
and
push
loop
mov
lahf
or
into
add
fdivrs
ficoms
mov
dec
outsb
in
cli
xchg
inc
dec
push
sbb
mov
sub
popf
lock
cli
shl
cmp
shrl
daa
imul
js
inc
or
add
cmp
stos
push
jbe
in
xchg
pushf
lret
iret
inc
xchg
cltd
pop
mov
out
out
shlb
inc
and
mov
aad
pop
xlat
lcall
and
stos
in
daa
cmp
cmp
ret
xor
jge
loopne
lret
push
adc
jg
fwait
mov
subb
xlat
test
rorl
cltd
jecxz
mov
push
into
in
mov
or
test
or
int
pop
push
nop
mov
hlt
jns
jns
lret
or
ret
pop
in
lds
jecxz
jl
repz
aam
jmp
mov
jp
add
mov
sbb
pop
inc
push
call
aad
popf
jne
add
out
test
mov
adc
out
out
mov
test
jnp
lahf
cmc
loop
test
das
lds
push
fmuls
pop
dec
pop
cli
mull
outsb
loop
xchg
sbb
pushf
xor
jno
add
dec
dec
xor
dec
movsl
sbb
pusha
cmp
or
add
inc
pusha
aad
push
pushf
cmpsb
sub
decl
ret
aad
out
xchg
sub
pop
adc
int3
jl
lret
ret
data16
rcrb
rclb
pushf
jns
pop
adc
mov
fimull
cmp
stc
push
lods
sbb
push
sbb
mov
pop
ljmp
mov
and
adc
dec
add
outsl
or
out
mov
ljmp
int
enter
sub
ds
loope
stc
stc
pop
mov
or
pop
fs
jl
xchg
sbb
pop
xchg
insl
rcrl
add
mov
dec
and
fbstp
cmc
dec
je
xchg
or
aad
aaa
pop
cld
xchg
mov
xchg
orb
mov
sub
dec
or
enter
clc
movsb
sub
lock
cmpb
lock
ret
addr16
pop
dec
and
mov
and
and
add
mov
cmc
inc
out
xchg
es
pop
xorl
cld
in
test
cli
or
mov
pop
ficompl
ljmp
or
or
adc
and
insl
shrl
mov
jecxz
xchg
jae
xchg
inc
int
movsl
inc
push
js
mov
dec
out
add
int
jnp
testb
fbstp
ficoms
insl
inc
mov
ret
mov
push
scas
popa
icebp
andl
or
add
arpl
dec
mov
or
xchg
adcl
stc
movsl
sbb
mov
sbb
ffreep
mov
push
sbb
jnp
leave
or
sbb
lcall
adc
stc
push
and
mov
push
add
mov
mov
sbb
jbe
jecxz
xor
push
or
xchg
std
push
imul
cwtl
inc
lea
fs
mov
stos
ljmp
adc
out
scas
pop
pusha
jg
push
vpshufd
popf
mov
or
rcll
and
pushf
xor
addr16
in
cmpsb
push
inc
pop
inc
lret
mov
adc
test
stc
xor
clc
mov
mov
xor
out
xchg
or
ret
rcrl
call
dec
rep
lcall
imul
cmp
xchg
jnp
push
sub
xchg
sar
push
mov
mov
xor
jb
cld
movsl
xor
cmpl
fildl
mov
jp
pop
sbb
mov
stc
out
dec
inc
jnp
shll
aas
into
fildl
sub
cmpsl
xchg
pushf
movl
xlat
les
xchg
dec
scas
lcall
xor
and
out
jns
sbb
rep
subl
jne
stc
aas
push
daa
lahf
jge
nop
adc
mov
lods
out
or
jne
jae
or
and
xchg
mov
mov
rolb
and
xchg
lea
sbb
insb
lahf
cli
xor
rcll
sbb
lret
push
push
sahf
push
out
pop
inc
pop
in
sbb
xor
je
push
push
call
loop
or
mov
jno
fs
int3
stc
scas
js
push
inc
out
ljmp
xor
adc
out
mov
aaa
push
nop
out
push
xor
filds
cltd
clc
addl
cmpsl
addl
xchg
fsin
iret
scas
push
xlat
divl
repz
jg
sub
pop
mov
popa
sbb
mov
shll
lret
pop
mov
push
dec
mov
insl
aam
inc
inc
cli
adc
popl
icebp
jns
cmovp
mov
adc
xchg
dec
and
loope
clc
loopne
cmp
popa
das
pop
adc
xchg
fidivrl
fdiv
push
cmp
adc
aaa
cmpsb
jle
stos
inc
mov
push
pop
std
negl
mov
addr16
mov
adc
not
cld
insl
loopne
movsl
or
xchg
sbb
jmp
jg
das
jp
jae
je
add
mov
xor
sub
out
mov
pop
sub
ds
push
in
je
aaa
add
lahf
icebp
loopne
pop
push
push
push
fisubl
mov
xchg
sbb
lock
fisubrl
mov
js
add
sbb
jg
push
adc
je
fpatan
xor
loopne
jae
xchg
cmp
mov
negb
outsb
mov
out
lret
fidivrl
sbb
daa
jge
add
movsl
push
xor
fimuls
adc
jg
call
push
lds
outsb
dec
sub
adc
leave
xchg
aam
sarb
in
stos
dec
ljmp
movsb
fmuls
dec
fsubl
subb
mov
push
pop
stos
lea
stc
sbb
cwtl
xchg
mov
pusha
or
fcmovu
out
sbb
stc
sbb
push
paddusw
stc
fdivl
pop
iret
rorb
stc
out
inc
mov
pop
cmp
fbstp
adc
push
ja
and
out
insl
loopne
mov
leave
sbb
dec
loopne
push
ss
movsl
rorl
cltd
mov
hlt
in
cld
nop
cmp
out
inc
in
adc
pop
jbe
loopne
dec
pop
mov
popf
push
push
jecxz
pop
adc
mov
popf
sahf
pop
jbe
popf
mov
mov
push
fsubs
mov
cmp
ja
sbb
movsl
mov
sti
loope
test
dec
xchg
jg
mov
inc
push
sub
mov
stos
mov
notb
cmp
jno
sub
add
push
scas
mov
and
int
inc
xchg
sub
pop
fisttps
dec
int3
dec
jne
jbe
adc
rol
gs
test
imul
mov
sbb
push
push
push
ss
in
xor
sbb
arpl
push
fisttpl
out
in
cmp
scas
dec
mov
pop
jns
push
xor
lds
mov
scas
ret
fmull
dec
enter
in
adc
xchg
cmc
push
push
sub
xchg
mov
and
and
xchg
fstpt
shll
daa
int
mov
jge
pop
and
aam
dec
rcll
mov
xchg
imul
aas
push
xlat
ss
pop
pop
push
sbb
stos
push
out
inc
lock
sbb
xor
jb
out
out
push
mov
pop
out
mov
mov
pop
xor
push
mov
mov
mov
pop
mov
aad
pusha
mov
rolb
pop
cli
pushf
mov
inc
sahf
in
mov
in
cmpsl
imul
ds
loopne
mov
shll
in
jg
aaa
xchg
mov
int3
cwtl
pop
and
add
mov
xchg
mov
xchg
cmpsl
int
xchg
fimuls
jg
xor
lea
xorb
fldcw
aas
incb
outsb
sahf
aaa
ret
xchg
pop
ja
loop
or
pusha
mov
pop
inc
imul
push
add
xchg
fists
mov
enter
xchg
push
adc
aam
jo
or
and
jno
lds
xchg
jmp
popa
mov
sub
out
xlat
push
mov
cmp
lea
sub
ljmp
lods
add
sbb
mov
lret
std
inc
fwait
mov
aas
jle
adc
inc
push
in
fwait
aad
jg
pop
push
cmp
je
icebp
mov
sbb
addr16
xor
fwait
inc
dec
xchg
imul
mov
dec
in
pop
ja
mov
push
fiadds
test
add
adc
push
xchg
nop
addr16
sbb
imul
push
imul
cmp
nop
sbb
in
es
outsl
pop
icebp
dec
dec
fcoml
dec
mov
inc
jecxz
lahf
jp
jmp
and
inc
xchg
rcrl
stos
xchg
int
test
adc
aas
push
pop
and
and
push
mov
loop
pop
jg
jo
push
imul
fistpll
push
daa
cs
mov
roll
push
in
mov
gs
pusha
jns
test
nop
xchg
arpl
mov
ljmp
fs
fisttpll
imul
sbb
pop
sbb
fstpt
aam
jne
lods
and
sub
cmp
jns
loope
subb
and
ljmp
mov
mov
test
jno
sbb
pop
loope
shl
out
imul
mov
push
leave
sub
test
mov
mov
mov
and
les
sti
out
arpl
faddp
cwtl
cmpsb
add
lret
xchg
fs
int
imul
xchg
mov
xchg
stc
push
and
ret
xchg
mov
addr16
dec
cmp
pop
in
arpl
cmc
orb
loope
push
and
into
xchg
adc
sub
mov
inc
cmp
aad
xor
push
lods
cmp
daa
pop
shl
arpl
mov
pop
cmp
cld
xor
inc
dec
adc
ss
sub
nopl
inc
pop
dec
popa
mov
mov
repz
pop
fmulp
addr16
mov
inc
jno
insl
aam
jbe
adc
mov
shlb
dec
dec
enter
lods
fstps
mov
lock
sub
xchg
mov
mov
out
mov
xor
enter
mov
int3
enter
mov
push
cmp
int
cmp
xor
je
push
rcrb
sbb
lahf
ja
mov
fbld
jmp
cwtl
and
out
jmp
fsub
arpl
lods
imul
in
sub
cmp
sbb
adc
jg
mov
mov
and
jecxz
pop
jle
jle
jmp
pop
jo
cmp
xlat
int
dec
outsb
scas
cld
ljmp
mov
add
fnstenv
imul
push
sti
adc
test
loopne
int
ss
or
or
ja
adc
ss
push
repz
aas
push
ds
mov
mov
gs
pop
ret
pop
cmp
and
xor
xchg
mov
xor
sbb
cmpsl
movsb
jl
push
dec
pop
mov
cmc
xchg
ja
cmp
lahf
push
push
aam
lret
scas
ds
dec
out
repnz
aad
icebp
cmp
leave
sbb
fldl
mov
sub
and
mov
and
or
les
cmc
loope
pop
mov
ret
mov
pusha
lods
dec
mov
jo
sti
adc
push
mov
or
pop
xchg
fmull
ret
add
mov
xchg
mov
and
jae
je
insl
mov
std
addr16
int
loop
ss
sub
cmp
loopne
outsb
and
test
gs
inc
aaa
aaa
shrb
loopne
mov
mov
inc
imul
push
shl
push
fs
pop
xchg
and
bnd
jge
jmp
jle
push
jmp
or
ficoms
add
and
fcompl
aam
xor
mov
and
adc
subl
and
movsl
test
pop
push
and
sbb
jp
orl
cmp
dec
adcb
sub
inc
add
fwait
je
or
xchg
push
stos
stos
call
push
aad
int3
cmp
xor
jb
mov
lret
sub
pop
or
pop
loope
ret
lcall
sbb
fbstp
dec
lret
push
loop
scas
inc
das
ja
add
test
add
dec
aas
sbb
in
test
lds
insb
xchg
ja,pt
dec
mov
xor
jns
jb
push
in
adc
mov
fwait
sbb
push
or
push
sub
push
cli
lret
cmp
pop
jecxz
cmp
loop
icebp
mov
movl
mov
aas
push
stos
int3
mov
sbb
inc
mov
mov
xlat
pop
inc
inc
pop
lea
mov
mov
mov
mov
andb
mov
add
lods
mov
mov
pop
jne
push
jbe
push
imul
loop
sub
icebp
bound
idiv
outsb
pop
stc
or
imul
nop
add
int
mov
mov
out
int3
push
notl
negl
sub
mov
adc
int
ss
popf
add
mov
andl
push
imul
mov
test
and
movsl
js
inc
xchg
or
sub
aas
insl
xchg
jo
cli
pop
cvtdq2ps
sub
mov
ss
subl
addb
adc
push
inc
popf
lods
and
adc
and
cmp
sub
xchg
mov
cmp
cmc
cmp
dec
sub
jns
call
add
insb
inc
inc
mov
imul
aas
mov
out
cmpsb
adc
aad
mov
or
add
mov
push
mov
loope
lock
dec
push
add
xor
aad
mov
inc
loope
mov
pusha
adc
jg
ret
push
xor
mov
fmull
lcall
push
add
sub
lret
pop
add
jle
mov
testl
push
pop
int
lock
cmp
cmp
jmp
movsl
mov
xorl
mov
rcll
dec
sbb
mov
xchg
sahf
movsl
decl
test
jnp
bound
inc
xchg
xchg
jae
rcll
or
aad
mov
mov
jecxz
cmp
xor
inc
jae
test
jmp
push
dec
int
incl
xchg
lcall
inc
nop
sbb
fldl
xchg
or
cmpsl
pop
dec
dec
mov
cmp
rclb
jge
js
fldt
push
mov
lcall
sub
or
mov
stos
std
sbb
movsl
adc
inc
push
subl
arpl
pop
adc
xchg
sbb
sahf
shl
mov
adc
ds
add
mov
adc
loop
or
stos
dec
jle
add
sbb
aas
cmp
pop
lds
dec
test
cs
push
xchg
and
mov
loopne
int
mov
sbb
xchg
pop
lds
in
aaa
dec
les
jle
push
add
stos
mov
jle
imul
fisubrs
push
inc
pop
or
test
fidivs
outsb
sub
mov
mov
mov
or
dec
mov
mov
mov
xor
xor
mov
int3
xor
mov
or
sbb
mov
push
cmp
jmp
clc
jae
or
mov
mov
mov
test
pop
inc
sub
arpl
loope
sub
stc
bound
pop
add
cmpsl
enter
out
bound
jle
xchg
lods
daa
or
xor
nop
loop
imul
lret
adc
ja
xchg
aam
outsb
divb
rep
ret
and
out
mov
enter
js
sub
aam
cmpsb
xorl
sbbl
dec
data16
push
testl
jo
inc
push
nop
xor
push
xchg
mov
outsl
dec
push
subb
movsl
into
pop
fwait
movsb
mov
out
cmp
cmp
jne
stc
adc
das
push
push
push
repnz
mov
push
cmpsb
repz
adc
sbb
xor
cmp
pop
fldcw
add
xor
cmovp
mov
xor
es
adc
mov
les
pop
xchg
leave
mov
das
sbb
push
lock
movsl
fimuls
or
out
arpl
arpl
inc
dec
ret
pop
data16
jp
push
push
fiaddl
aas
adc
fdivrp
push
push
xchg
or
mov
and
cltd
pop
loop
jns
pop
pop
loope
xor
faddl
inc
fs
cmp
jbe
pop
lods
sbbb
mov
insb
mov
pop
add
xor
and
xor
data16
lods
sbb
movsl
add
jbe
jge
mov
cmpsb
sti
stos
out
xor
mov
and
rol
fwait
and
fiaddl
xor
pushf
fs
add
and
dec
stc
out
jbe
xlat
mov
mov
das
addl
aam
ljmp
ret
cmp
dec
inc
adc
push
sub
mov
out
fbstp
dec
mov
or
mov
xorb
repnz
push
movsl
sbb
xchg
repnz
sub
aaa
adc
mov
les
pop
lods
lock
push
push
cld
jl
cmp
jbe
sub
mov
or
pop
imul
jo
shlb
pop
mov
mov
hlt
js
or
in
cmpsb
mov
out
loop
jp
inc
push
shl
in
lods
mov
fists
loopne
mov
out
jmp
fsubr
out
jge
scas
mov
decl
lahf
push
mov
xchg
insb
mov
add
jp
movsl
test
mov
stos
adc
mov
decb
div
add
xchg
mov
xor
fisttpl
cmp
push
xchg
sub
or
lods
mov
mov
cmp
or
nop
jbe
rcl
inc
es
pop
xor
push
cmc
mov
outsb
push
add
shlb
lret
nop
shrb
xchg
icebp
insb
mov
dec
pop
jg
push
test
cltd
jno
sbb
test
ret
sbb
sti
je
outsb
adc
adc
lea
pushf
js
pop
mov
es
mov
mov
add
cld
insb
outsb
int
enter
lcall
jns
sbb
or
int3
pop
push
pop
mov
stos
cmp
pop
imul
leave
mov
xchg
das
fwait
test
popf
and
imul
push
mov
push
pop
jnp
fwait
aad
sbb
add
xchg
shlb
mov
stc
or
lea
push
mov
pushl
test
push
mov
sbb
xor
addb
push
mov
sti
testb
or
in
ret
fadd
outsb
popf
fprem
sub
stos
mov
ret
scas
jp
jmp
sahf
or
aas
inc
shlb
xchg
add
or
mov
out
ds
icebp
xchg
mov
and
fwait
cmc
sbb
mov
ret
cmpsl
cli
popf
mov
sbb
jno
out
mov
iret
in
add
inc
lcall
add
and
jmp
data16
inc
lock
xchg
mov
jecxz
inc
dec
mov
mov
pop
mov
pop
jmp
test
lea
jo
stos
mov
arpl
cmp
mov
xchg
cmpps
cmp
jl
out
add
jl
jnp
add
outsb
jecxz
adc
fwait
les
mov
push
or
lea
sti
sbb
aas
popf
outsb
push
hlt
mov
add
lcall
mov
sub
push
and
sar
cmp
adc
sub
jb
push
je
or
mov
sbb
adc
mov
inc
dec
loope
fdivrp
xor
jne
sbb
mov
dec
stos
push
lcall
outsl
arpl
mov
mov
xor
cmp
ja
or
ds
dec
insl
push
scas
movsb
sarl
arpl
cli
cli
sti
cmc
mov
mov
icebp
sub
sub
or
lcall
sbb
and
bound
cmp
test
ss
cli
add
inc
xlat
cmp
aam
xor
xchg
pop
out
bnd
pop
sub
dec
rolb
scas
fcmove
sub
cmp
testl
ss
test
rolb
xchg
xchg
dec
loop
nop
pusha
jp
and
xchg
notl
xor
std
mov
mov
mov
insb
faddl
inc
fildl
jg
imul
mov
test
xchg
jne
sti
movsb
popf
int3
arpl
js
or
int
and
adc
dec
popa
cmp
popa
cmp
mov
aas
inc
sbb
adc
test
jbe
test
inc
mov
xchg
mov
dec
fsubl
xor
rcl
jle
aad
sub
cltd
jns
dec
imul
adc
pop
cmpb
pop
mov
xchg
cli
sbbb
xor
stos
cmp
jg
cli
lock
inc
and
decb
loop
or
mov
ss
stos
lret
lret
mov
cwtl
pop
ljmp
stos
test
xchg
ds
clc
xchg
inc
int3
dec
adc
adc
adc
mov
lea
or
mov
push
negb
jg
or
call
pop
pop
data16
enter
dec
mov
mov
das
push
in
mov
out
adc
xchg
pop
xchg
popw
test
sub
lock
mov
in
cmc
xchg
jmp
shlb
mov
out
pop
dec
sbb
mov
xor
pop
cmp
es
sbb
mov
mov
and
jae
aam
push
or
pop
adc
sti
or
test
outsb
cmc
sbb
call
in
adc
sbb
cmc
and
js
xlat
iret
xorps
inc
cmp
icebp
sbb
fwait
leave
xlat
mov
mov
sbb
cmp
or
in
add
xor
jae
cmpsb
jae
xchg
dec
lods
aaa
mov
xchg
fdivl
mov
lret
push
ficompl
popf
or
cmp
jg
and
push
xchg
incl
addr16
push
jbe
in
dec
sahf
cltd
push
sub
notl
or
ret
mov
or
test
inc
and
aaa
ja
push
scas
les
outsl
lcall
add
lret
test
pusha
push
mov
push
pop
sub
mov
xchg
addl
xchg
pop
pop
push
lea
mov
stc
mov
pop
pusha
or
js
mov
adc
in
or
mov
dec
jmp
push
mov
or
pop
lods
stos
das
scas
out
or
sti
inc
push
outsl
sub
sub
lret
addr16
enter
jb
in
dec
push
cld
orb
repnz
and
repnz
adc
mov
cmp
les
pop
add
jecxz
xchg
push
cmp
xchg
shlb
aas
loopne
mov
mov
pop
push
cli
scas
inc
popf
sub
inc
pop
sub
push
sahf
xchg
jo
nop
sbb
mov
cmp
and
mov
fcompl
and
pop
or
xor
imul
rolb
pop
in
cltd
stc
dec
pushl
mov
xchg
test
hlt
in
push
fnstcw
adc
je
jno
icebp
sub
and
sbb
push
int3
mov
adc
add
pop
cld
popf
adc
fs
dec
mov
dec
jl
mov
pop
mov
sbb
or
stos
jb
jno
js
idivb
scas
rorb
das
pop
sub
cmp
insl
popf
insb
lods
mov
js
lods
inc
or
push
test
xchg
bnd
jge
cmp
fcompl
mov
mov
jle
imul
in
hlt
out
mov
rorb
xchg
push
xchg
mov
xchg
cmp
cmc
push
push
mov
out
or
lahf
add
stos
out
mov
adc
sub
xor
xor
mov
out
push
ret
out
dec
mov
pop
mov
push
pop
outsl
les
xchg
mov
jg
inc
rcrl
jo
xchg
or
push
jno
cmp
inc
dec
mov
mov
in
pop
repz
int3
push
or
fcmovbe
or
and
aas
xor
stc
inc
nop
xchg
jge
imul
or
push
xor
adc
int3
and
or
xor
push
inc
xor
ret
cwtl
jne
or
enter
xor
add
insb
or
jmp
ret
addr16
lret
jae
xchg
dec
scas
aad
lds
lods
inc
movsl
adc
outsb
dec
and
clc
loope
push
and
es
push
pop
imul
test
and
adc
cwtl
xchg
inc
stos
jp
outsb
push
insl
das
pop
pop
out
stos
mov
adc
les
adc
push
cs
dec
mov
cmp
sbb
xor
outsl
add
pop
mov
out
arpl
or
xchg
fwait
or
mov
in
add
mov
pop
into
and
pushf
in
shrl
fnsave
xlat
sub
cmp
mov
enter
cltd
mov
cmp
push
pop
stc
or
mov
repz
cmp
inc
mov
jae
fsubrs
push
jbe
hlt
lahf
lods
mov
mov
aaa
je
pusha
dec
sbb
sub
popf
movsb
jmp
in
or
fwait
or
inc
daa
lea
ss
inc
cli
test
xchg
filds
mov
pop
xlat
inc
sub
roll
add
call
mov
int3
into
pop
inc
scas
cmp
repz
das
insb
gs
pop
mov
mov
cmpsb
loop
mul
xlat
pop
or
inc
pusha
mov
gs
mov
jne
insb
cltd
fdivrs
xor
shrd
mov
sbb
int
loope
scas
dec
cmc
mov
icebp
outsb
das
inc
repz
test
add
pop
xor
leave
and
imul
hlt
cmpb
loope
or
dec
or
flds
enter
jp
das
clc
out
jg
outsb
bound
jns
aas
pushf
adc
test
shlb
imul
mov
cmp
mov
imul
fsubl
out
out
insl
or
dec
icebp
hlt
pop
or
bnd
jno
jp
fstpl
mov
sti
sbb
out
mov
jmp
mov
lret
fwait
mov
outsl
fst
nop
add
es
dec
nop
cmc
call
cwtl
insl
dec
pop
sub
sub
fnsave
jp
shrb
adc
dec
push
rorb
ljmp
push
mov
gs
xchg
adc
std
cltd
adc
xor
jb
jo
stos
pushf
ret
aad
jae
pop
call
jecxz
test
xchg
add
pop
imul
das
or
leave
inc
pop
outsl
aad
push
inc
cmp
xchg
cmp
sub
cli
jge
pop
icebp
xchg
sub
or
stos
jge
cmp
mov
cli
fsubs
out
cwtl
lcall
push
cmp
andl
jns
mov
hlt
and
mov
sbb
arpl
sbb
and
bound
xchg
addr16
mov
movsb
mov
test
es
cmc
mov
pop
adc
mov
fs
in
and
pop
pop
pop
clc
out
testb
mov
hlt
mov
add
pop
rcrb
adc
add
pcmpgtb
test
mov
xor
xlat
mov
fwait
pop
jns
and
dec
and
xchg
push
les
lahf
aam
mov
cmpsl
lods
jb
into
xchg
mov
into
jno
push
addb
add
push
outsl
shrl
mov
mov
push
imul
push
fstpt
les
xor
add
adc
cmpsl
les
mov
out
mov
int
ror
insl
and
mov
into
movsl
mov
jo
pop
out
mov
inc
into
sarl
iret
sbb
cltd
les
mov
jbe
jl
pop
inc
out
inc
jbe
orl
adc
push
dec
cmp
xchg
pop
leave
adc
push
dec
cli
shrl
clc
gs
outsb
push
jmp
ret
test
fnstenv
sbb
xor
cmp
je
push
adc
jmp
pop
push
xchg
aas
cmp
xor
and
mov
imul
es
ret
mov
repnz
xor
mov
xlat
and
inc
popf
incb
shl
shll
imul
pusha
jbe
sub
cs
popa
push
inc
jno
subb
into
rclb
fstpl
fstpt
jo
mov
push
push
loopne
fdivr
xor
dec
mov
xor
sbb
lods
cmpsl
in
add
fcoml
mov
sbb
or
sbbb
xlat
mov
loopne
hlt
fiadds
stc
movl
loope
scas
pop
loop
sbb
orb
lock
ss
mov
clc
mov
lods
xchg
arpl
or
adc
adc
mov
and
lret
sbb
pushf
pop
pop
or
ja
scas
cmp
int3
cmp
inc
pop
sahf
mov
pop
push
bound
mov
xorl
xchg
pop
push
rcrl
sub
ret
jns
shr
out
loop
mov
inc
fcompl
cli
int3
andl
sub
testb
aaa
adc
shll
jmp
jecxz
mov
ja
cltd
dec
adc
out
add
and
loope
fistpl
fwait
adc
sub
pop
cmp
out
divb
add
jbe
lcall
mov
cwtl
es
sub
push
mov
mov
ja
pop
xor
jno
adc
insl
push
mov
popa
dec
cmp
pop
mull
ljmp
pusha
scas
add
int3
push
ror
cltd
sar
test
cltd
mov
jno
test
test
ljmp
or
cmp
sbb
cmp
enter
icebp
mov
adc
cwtl
popa
pop
fnstsw
cmp
fistpl
dec
subl
mov
dec
mov
mov
jg
fists
adc
mov
imul
mov
and
shrl
push
mov
dec
enter
ret
imul
add
aam
test
push
mov
sar
mov
jae
movsl
popa
rcrb
stc
leave
fisttpl
jp
scas
mov
js
fisttps
movl
bound
ret
mov
mov
ret
push
adc
dec
add
pop
jp
scas
pop
lcall
dec
cmp
xor
mov
add
mov
or
jb
clc
xchg
pop
cld
pop
mov
icebp
icebp
out
jle
and
lods
ja
lcall
push
mov
sahf
lahf
repnz
test
cwtl
scas
push
ja
addb
push
cmpsb
xchg
insb
xor
inc
aad
pop
and
jo
pop
push
adc
test
and
sub
cli
cmp
mov
shll
sbb
movsl
icebp
inc
cmp
sub
mov
lret
dec
jmp
adc
out
push
xor
sbb
ss
jle
icebp
inc
lds
adc
cmp
in
scas
mov
jne
bound
hlt
por
mov
fcomi
lea
jb
jmp
fisubrs
push
xchg
imul
jns
rcrb
int
pushf
adc
xor
scas
leave
lea
scas
mov
sub
dec
out
in
push
test
pusha
pop
aaa
jmp
out
outsl
inc
outsb
inc
push
into
lods
mov
imull
fcomps
cld
mov
fwait
imul
pop
inc
aad
sbb
or
dec
adc
cmp
mov
in
add
mov
cwtl
decb
mov
xchg
mov
rcr
pop
mov
movsb
jg
das
xchg
jecxz
pop
xchg
sbb
int3
jo
fisttps
cmp
mov
sbb
jg
adc
xchg
inc
jl
or
sbb
cli
inc
int
xor
jmp
movsb
xchg
jno
dec
sub
inc
lods
push
xchg
imul
mov
inc
mov
jnp
dec
adc
orl
notb
shll
jmp
inc
jae
shrl
mov
mov
sahf
movsl
or
xchg
add
subl
jmp
pop
mov
mov
mov
popf
aaa
test
dec
call
pop
add
call
scas
push
movsb
shl
loopne
jmp
inc
xchg
in
push
jl
movsb
mov
jle
repnz
es
scas
sub
sbb
xchg
mov
xlat
xor
jge
adc
imul
loope
lea
adc
push
out
ret
xchg
jecxz
std
xchg
outsb
insl
xor
insb
outsb
in
out
inc
ror
xchg
jge
lock
dec
sbb
out
cmp
jne
loop
cmovnp
inc
iret
movsl
scas
adc
jp
aam
push
aas
xor
jbe
cmp
sbb
dec
xchg
pusha
inc
test
mov
adc
mov
adc
adc
sub
out
popa
jno
not
push
sarl
rorb
pop
addr16
jge
loope
or
cmpsl
mov
inc
sahf
test
in
pop
dec
ljmp
mov
hlt
ret
xor
cmpsb
ja
sbb
mov
int3
cltd
dec
push
daa
mov
inc
cmp
jg
test
ret
mov
mov
dec
push
cmp
or
mov
jge
fidivs
popa
cli
inc
or
jb
inc
js
fwait
sub
or
mov
int3
scas
dec
sub
dec
push
inc
lods
ds
rorl
adc
jecxz
jne
sub
out
daa
test
sub
pop
lret
dec
out
xchg
enter
repnz
mov
pop
lock
sub
shll
and
jl
pop
stos
rol
pop
inc
sub
lahf
cmp
xchg
aad
cmpsl
ret
mov
sbb
arpl
fistps
xor
orl
sub
adc
adc
mov
inc
movsb
scas
popa
xchg
imull
lds
std
enter
mov
fs
push
and
in
jbe
mov
fcomps
lods
pop
ljmp
push
xor
cmp
fwait
mov
jl
setl
shrb
add
push
data16
inc
xchg
mov
dec
pop
sbb
ljmp
lahf
stc
push
sbb
imul
sbb
push
add
sub
enter
and
test
sub
dec
testl
in
inc
pop
ret
jmp
xor
aam
inc
leave
insl
sbb
lods
sub
dec
movb
cltd
icebp
add
mov
shr
dec
adc
scas
fldenv
pop
iret
and
push
test
push
and
addr16
jmp
pop
or
sbb
cli
pop
mov
jne
dec
subb
cmpsl
std
mov
mov
xor
mov
mov
dec
and
test
addr16
loopne
jecxz
gs
sub
cmp
into
lods
cmpsb
or
dec
cmp
das
outsb
xor
push
cltd
gs
out
add
mov
aad
movsl
or
jno
mov
jb
dec
cmp
aad
fsubr
jnp
cmp
in
xor
cmp
repnz
shl
pop
fdivr
or
inc
roll
lahf
adc
push
add
shrl
add
movsl
dec
lret
pop
shll
aaa
hlt
sbb
xor
adc
lret
addl
push
insl
mov
repz
inc
pop
jns
stc
push
add
fadd
lock
test
out
sbb
push
test
stos
das
in
cmp
dec
jmp
xchg
gs
add
dec
push
test
add
mov
pop
mov
mov
imul
pop
sbb
xchg
push
lret
sub
push
xchg
adc
xchg
mov
loope
ljmp
bound
sbb
push
push
das
and
ss
adc
xchg
dec
or
push
cltd
sbb
add
cmp
or
dec
mov
std
xchg
mov
ss
sub
outsl
data16
rolb
cmp
cmp
bound
out
sub
and
movsl
xor
xor
push
mov
sub
pop
test
cmp
insb
pop
xlat
fwait
jns
and
inc
dec
fwait
sti
push
daa
push
rcr
lds
rolb
pop
push
lcall
ret
nop
mov
repz
cmp
pop
iret
cwtl
inc
push
push
lahf
and
loope
pop
pushf
fcomps
addr16
rcrb
mov
jg
sti
aaa
pop
mov
jecxz
mov
cmc
mov
cmp
mov
fiadds
sub
js
mov
jle
sub
sbbl
xlat
jno
dec
adc
ret
adc
sbb
xchg
bound
fwait
dec
inc
pop
xchg
push
mov
pop
xchg
sbb
sbb
mov
das
fnsave
in
mov
add
xchg
lea
mov
xchg
movsl
filds
out
inc
fcompl
fbstp
adc
or
inc
mov
gs
sub
sub
iret
ficomps
lret
jne
pop
incl
and
jae
cmp
dec
mov
jnp
xor
icebp
prefetcht0
xlat
sbb
lods
inc
mov
xchg
xor
mov
sub
ret
dec
jle
adc
fsubs
jl
shll
pop
mov
js
rcrl
mov
enter
mov
loop
mov
popf
fcmovnu
popf
or
stos
adc
dec
cs
sub
idiv
push
adc
cmpsb
add
and
cmp
pushf
and
movsl
mov
xchg
cmc
adc
xchg
mov
xchg
dec
push
mov
into
mov
add
fisubl
mov
or
out
mov
sbb
adc
sub
out
sub
jne
scas
and
add
mov
popf
and
and
pop
fidivl
xchg
push
ret
shlb
add
jge
adc
pop
iret
fs
jl
xchg
cli
push
es
jnp
outsb
push
pop
xchg
gs
nop
cmp
shll
orb
arpl
addb
inc
fildll
imul
jge
pop
sub
int
sbb
daa
sbbl
inc
shrl
jmp
addr16
leave
cmp
jle
dec
sub
mov
and
imul
push
adc
lahf
out
fwait
call
jge
pop
or
outsb
push
addr16
shlb
xor
push
sti
gs
ficoml
xchg
inc
cmp
movsb
xchg
pop
mov
push
int3
jmp
fisubrs
mov
mov
lcall
and
cmc
pop
imul
jge
icebp
sbb
stc
out
iret
jle
das
mov
jecxz
frstor
cmp
xchg
stc
jno
dec
jg
xor
push
pop
jle
mov
sarl
pop
jge
adc
aam
int3
push
or
lea
or
outsb
mov
and
in
lock
mov
dec
sub
test
repnz
sahf
rolb
inc
andnps
jno
pop
xlat
popf
in
inc
popf
fldl
cld
fistl
xchg
sbb
shl
add
cmp
test
xchg
push
cmpsl
in
loope
push
mov
lock
data16
adc
roll
jp
lcall
add
pop
fiaddl
mov
in
xor
sti
pop
adc
pop
inc
mov
pop
pop
xchg
daa
out
testb
lcall
inc
sub
cmc
call
pusha
icebp
inc
xor
push
push
jns
jo
dec
mul
adc
adc
je
gs
add
in
or
mov
or
das
jle
mov
aas
dec
ret
test
imul
jmp
pop
or
jne
xor
push
out
ss
aas
enter
icebp
jge
iret
mov
das
orb
and
xor
movsb
and
push
shrl
jg
out
jle
dec
jno
push
and
dec
push
dec
xor
cmc
push
or
mov
sub
js
idivl
mov
jb
fcompl
ljmp
xchg
adc
incl
xor
jmp
inc
xor
in
lea
xchg
or
push
lret
in
add
int
leave
out
pop
test
in
pop
fistps
mov
loop
xchg
lcall
daa
out
decl
xor
mov
push
mov
xchg
ds
xchg
jl
in
rolb
lods
pop
xchg
mov
insl
pop
data16
jo
aas
out
add
xchg
xor
fs
dec
dec
cmp
cld
sbb
xchg
scas
and
sub
add
fsub
lcall
std
fldenv
stc
loope
rclb
es
push
repnz
dec
in
dec
mov
cli
cmp
pusha
fwait
mov
sti
inc
imul
inc
or
xor
xchg
call
or
scas
inc
addb
cmp
sub
or
in
int
push
cmp
add
outsl
or
addl
dec
sub
andl
pop
sbb
nop
int3
in
out
gs
hlt
sub
mov
sbb
mov
mov
test
sbb
mov
xchg
sbb
cmp
pop
xchg
jbe
cltd
add
cmpsl
pop
ds
subb
add
fistl
popa
ljmp
adc
mov
decb
inc
lock
lcall
sub
orb
add
mov
ja
sbb
outsl
xchg
pushf
decb
adc
pop
test
cltd
push
xchg
mov
ja
mov
in
push
cmp
mulb
pushf
xor
inc
sub
xchg
dec
mov
jne
xor
inc
es
lret
cli
push
outsl
rcrl
loope
mov
sbb
xchg
add
fiadds
fnstenv
xchg
adc
into
xchg
stos
fcmovbe
shrl
mov
sbb
jg
push
test
cmp
xchg
int3
out
cmp
mov
xor
jns
push
dec
das
add
sbb
lods
daa
mov
xchg
cltd
sti
pop
sbb
and
xchg
xchg
imulb
mov
cmpsb
das
add
dec
cwtl
xchg
in
and
push
adc
out
or
jmp
out
leave
stc
cmpsb
fistpll
insl
dec
daa
das
push
push
outsl
fsubs
and
push
adc
cwtl
xchg
pop
or
mov
sbb
sbb
push
arpl
mov
adc
inc
add
outsb
and
inc
lods
aam
loope
test
subb
mov
repnz
sub
sti
out
lock
int
scas
jae
adc
int
dec
mov
cld
adc
xlat
pusha
movl
orl
xchg
push
mov
mov
mov
ret
cmp
idiv
ljmp
mov
arpl
cmp
mov
jbe
push
mov
push
ja
or
dec
clc
mov
aam
inc
lock
push
mov
addr16
add
jge
pop
cli
jmp
or
stc
inc
bsr
aaa
and
inc
mov
call
ds
hlt
mov
adc
mov
push
sub
mov
pop
mov
js
fs
negb
or
inc
jb
pop
sbb
cmp
pop
jb
repnz
repz
loopne
mov
mov
jae
sbbb
lahf
cld
add
sbb
out
dec
xlat
cli
add
cmp
push
cmp
jl
inc
ds
or
mov
lods
inc
cmp
dec
and
mov
repz
inc
dec
dec
and
dec
mov
jne
test
mov
inc
orb
jo
lret
xchg
lock
and
test
ret
sub
dec
test
pop
xchg
ret
cmpsl
adc
lea
ret
rorb
or
cmp
ret
mov
ss
sub
ljmp
xor
inc
adc
icebp
xor
xchg
into
mov
push
jne
inc
mov
cltd
in
cld
sti
mov
push
cmc
push
stos
inc
mov
and
sti
or
mov
sbb
adc
out
pop
addr16
mov
pop
sub
mov
sub
push
repz
aam
data16
jnp
jp
xor
lea
leave
sub
aad
dec
push
sti
je
out
pop
push
cmp
sti
cmpb
scas
xchg
mov
or
pusha
fnstsw
inc
jbe
call
jbe
jp
xchg
mov
pop
fistps
fs
je
pop
nop
push
ret
inc
or
sahf
in
mov
bound
sahf
sarl
ja
faddl
push
lahf
cmp
int
adc
or
aas
pop
stos
les
mov
ljmp
icebp
mov
or
add
jne
and
inc
out
pop
mov
push
gs
rorl
or
xor
das
popa
mov
outsb
xchg
mov
xchg
data16
icebp
ffree
adc
test
addr16
dec
push
mov
add
cli
popa
mov
adc
mov
ljmp
pop
adc
pusha
and
outsb
hlt
dec
sbb
mov
push
xchg
hlt
fmuls
icebp
inc
shrl
push
int3
loopne
test
inc
fmulp
dec
sbb
jl
fiaddl
and
fcmovnb
mov
or
sbb
inc
orl
mov
fsubrs
xlat
xchg
mov
xchg
push
fidivl
or
loopne
dec
movsb
inc
pop
push
and
cmpsb
dec
cmp
lret
imul
sub
call
and
mov
mov
mov
dec
inc
nop
cld
fs
mov
xor
adc
inc
loope
pop
push
lret
inc
aas
enter
jnp
xchg
ret
mov
js
sbb
push
pop
adc
mov
leave
iret
enter
xchg
mov
insl
je
mov
imul
mov
loope
mov
call
pop
jg
cli
lock
jge
gs
xchg
je
xchg
je
repnz
jge
pop
lret
jbe
jmp
inc
test
push
int
int
lret
jb
popa
inc
pop
popf
push
outsl
jb
mov
inc
into
or
frstor
jmp
or
cmp
lret
jp
sub
in
aaa
shll
repnz
in
push
push
std
mov
std
sbb
push
out
notl
mov
or
dec
xor
and
or
push
xor
adc
jge
addl
addr16
pop
cmp
mov
mov
outsb
and
sbb
fcompl
mov
cwtl
stos
outsl
loope
sbb
data16
cmp
clc
cli
fcompl
shlb
lock
and
push
jo
pop
xor
into
ret
fbld
icebp
movsl
inc
in
adc
stc
frstor
int3
pop
aas
mov
ret
add
fdivrp
cmp
sbb
dec
mov
inc
lods
jecxz
adc
dec
inc
xor
mov
je
mov
cmc
inc
clc
sbb
mov
outsb
inc
into
push
cs
and
or
mov
cwtl
sbb
dec
lea
aam
insb
mov
lods
pushf
add
mov
repz
inc
mov
sub
pop
push
fs
test
xchg
imull
mov
cmpsl
cltd
adc
pop
repz
loope
insl
cmp
dec
mov
shlb
cmc
std
sbb
xor
rclb
in
lods
data16
xchg
inc
cld
xchg
fwait
inc
mov
jg
aas
add
adc
fwait
bndstx
pop
insb
repz
xchg
lret
repnz
pop
ljmp
push
sub
popa
test
adc
and
fwait
out
into
mov
push
stc
push
pop
outsb
imul
mov
jno,pn
mov
movsb
sub
inc
adc
repnz
loope
mov
in
fcoml
dec
add
call
cmc
out
push
hlt
cmp
hlt
sub
mov
pop
popa
jae
lea
and
mov
jno
mov
cmp
lea
pop
and
inc
lock
jp
push
sub
push
xor
inc
mov
testb
mov
add
icebp
or
jns
pop
sti
xchg
shlb
add
or
clc
jmp
push
in
jg
sahf
dec
sub
daa
lods
in
lock
pop
cli
shlb
cs
inc
cmp
mov
idiv
rclb
scas
sahf
loopne
ds
pop
sbbb
adcb
out
call
pop
mov
dec
lods
stos
andl
mov
dec
imul
cmp
xchg
ret
push
pop
lcall
mov
xchg
in
push
out
mov
xor
dec
cmpsl
dec
mov
in
inc
pop
add
aad
out
or
ret
inc
outsb
fstl
xchg
repnz
push
and
es
mov
enter
out
testl
aam
sti
sub
mov
sbb
mov
cli
xchg
jl
xchg
xchg
pop
push
out
loope
ficoml
test
xchg
sub
rol
inc
adc
lahf
les
dec
push
cld
mov
jmp
xor
xor
popa
inc
lcall
and
sbb
add
push
inc
mov
fcomi
je
inc
mov
ret
out
ret
and
mov
lahf
or
xchg
es
jecxz
jp
nop
mov
inc
mov
imul
or
or
push
sub
jno
insb
jecxz
jbe
inc
dec
test
test
pop
stos
rcrb
daa
loop
add
je
mov
jae
fistpl
stos
xlat
gs
lods
jl
xchg
repz
scas
pushf
mov
repnz
mov
mov
in
xchg
add
mov
lahf
mov
pop
insl
lret
addb
and
or
jo
and
fdivrp
hlt
stos
cmpb
xchg
cltd
inc
xchg
add
mov
int
push
ljmp
clc
roll
pop
xor
dec
push
dec
jecxz
sub
shr
sahf
and
insl
sahf
cltd
fstl
push
lahf
gs
xchg
dec
cmpsb
mov
out
sbbb
pop
es
lahf
cmp
movsl
xchg
xchg
stc
ffreep
dec
sub
push
rorb
pop
das
shl
in
push
out
adc
outsl
sub
xchg
es
movsl
push
es
jnp
or
xlat
mov
lods
aam
sbb
std
xchg
pop
lahf
aad
cmp
cwtl
mov
arpl
pop
add
sbb
cmpl
nop
mov
sub
repz
and
pop
ljmp
lret
movsb
insl
mov
fistpll
or
or
in
add
sub
jp
rcll
push
movsl
lods
or
scas
cmp
in
movsl
xchg
sub
shlb
ds
pop
jp
cmp
popl
mov
sub
lds
hlt
movsl
lock
gs
push
pop
push
std
fldcw
out
mov
pop
push
cmp
push
cli
fdivs
mov
xchg
mov
sub
adc
add
jb
scas
sbbb
test
es
cmpsl
std
sbbb
dec
shr
xchg
pop
adcl
pop
add
dec
inc
lea
adcb
xor
scas
out
add
int3
mov
and
xchg
jp
mov
ss
popf
jns
es
and
pop
fdivp
xchg
or
cld
cmc
mov
daa
out
sub
aam
pop
or
out
xor
mov
xor
jae
sbb
insb
cmp
scas
shll
icebp
or
inc
cmp
nop
lret
xchg
pop
or
mov
cmp
push
dec
mov
mov
mov
call
mov
lret
addb
xchg
lret
scas
or
lods
inc
cmpsl
das
adc
mov
push
out
or
adcb
fcoml
mov
mov
push
or
mov
jo
rcr
xor
push
sti
xor
lret
push
sub
ds
rcll
add
and
add
ja
loopne
sub
pop
lock
inc
adc
mov
xchg
mov
push
dec
js
test
das
sti
aad
imul
sbb
mulb
add
mov
dec
fxam
add
ret
ja
jmp
jne
and
lret
add
in
out
xlat
fildl
popf
or
inc
cld
filds
inc
leave
dec
ljmp
jnp
or
rol
cmp
sub
mov
dec
std
movd
push
add
test
jno
mov
or
out
add
mov
mov
inc
inc
sub
nop
insb
xor
divl
stos
orl
jne
movsl
mov
xchg
in
roll
inc
leave
lcall
mov
mov
jge
addr16
and
fstpt
in
ret
xchg
mov
in
int3
iret
mov
jge
push
cld
mov
mov
filds
xor
das
or
outsl
call
mov
sub
add
jae
cmp
dec
cltd
pop
fsub
ffreep
pop
xchg
cmpsl
loop
xor
sbb
aad
push
mov
fnsave
xor
enter
in
arpl
mov
shr
stos
jb
or
adc
cli
cli
and
dec
pusha
adc
call
or
pop
stc
pop
push
xchg
sub
pop
int
data16
pop
sbb
or
inc
out
lds
aaa
fbstp
dec
aas
mov
push
leave
sbb
xchg
shl
push
sbb
mov
xchg
pop
repz
lods
push
pop
push
lret
test
enter
subl
push
add
into
cmp
jecxz
outsb
push
ja
popf
inc
test
sub
data16
jp
add
and
jbe
shl
mov
ja
sbb
and
in
mov
sbb
fs
aad
loop
testb
in
jb
sti
pop
aaa
pop
push
and
fwait
sub
and
sbb
xchg
push
jl
sbb
loopne
adc
ret
add
cmp
and
fsubrl
adc
mov
push
and
pushf
notb
mov
leave
xor
xchg
sbb
mov
mov
push
jno
push
lahf
xchg
sub
cwtl
notb
cmc
movsl
in
stos
shll
cmp
mov
sub
pop
fisttps
aad
add
dec
aam
pop
sub
adc
xchg
in
push
idivb
mov
and
out
icebp
or
mov
test
sahf
loope
pop
das
call
leave
mov
fs
pop
sub
into
mov
ss
int3
pop
leave
mov
movups
iret
mov
mov
ss
inc
aam
adc
mov
adc
cmpsl
clc
fdivs
jbe
ret
rcrb
jbe
xchg
pop
insb
pop
daa
mov
lahf
pop
and
mov
and
xchg
cmp
aam
xchg
pop
addr16
test
loop
in
push
push
std
sub
in
jno
mov
fwait
cmpsb
xchg
imul
sub
inc
addr16
setg
xchg
stos
sub
sarb
incb
or
adcb
lret
mov
mov
cmp
lret
bound
test
xchg
iret
push
rcr
jb
push
stc
rcl
mov
xchg
dec
into
hlt
int
or
inc
lcall
sub
push
or
jl
shll
pop
mov
push
call
sti
cltd
push
hlt
or
xchg
sub
push
cmp
int3
jecxz
pop
jg
xchg
jb
push
mov
cmpsb
cmc
stc
mov
jl
scas
jno
fistpl
jle
int3
mov
imul
scas
lret
add
sahf
xchg
or
clc
loop
pushf
or
lahf
jbe
mul
mov
push
or
pop
jns
cli
xchg
sub
or
cmp
je
loop
and
lds
jmp
add
or
repnz
aaa
push
cmp
mov
sti
into
movsb
jae
imul
test
test
mov
pusha
popa
pop
icebp
mov
out
push
push
dec
mov
clc
pop
or
and
add
call
push
lret
out
enter
enter
mov
or
jbe
jns
out
sub
mov
add
dec
mov
sub
xor
in
jnp
xchg
out
or
mov
inc
push
pop
mov
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
into
call
dec
push
adcb
negb
mov
mov
mov
cli
arpl
shll
sbb
cmp
stc
subl
inc
mov
cmp
mov
sbb
pop
out
cmp
sub
outsl
pop
arpl
lds
xor
xchg
mov
pop
xchg
lcall
push
test
icebp
mov
dec
xor
mov
mov
addr16
adc
mov
or
divb
adc
inc
add
fs
xlat
faddl
adc
jecxz
mov
sub
xchg
insb
mov
shlb
test
mov
push
loopne
and
repnz
stc
mov
dec
fcompl
push
cmp
mov
mov
scas
push
and
imul
ja
cmpsb
inc
inc
pop
pop
roll
and
mov
push
mov
call
cmp
cli
mov
fidivs
das
jp
xor
push
aam
mov
xor
cmp
push
push
mov
mov
inc
add
dec
subb
jmp
rol
xchg
pop
es
les
mov
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
jl
mov
add
cmp
